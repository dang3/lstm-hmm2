add
add
mov
mov
mov
movsb
movsb
movsb
movsb
movsb
movsb
movsb
add
sub
sub
xchg
xchg
xchg
xchg
xchg
xchg
xchg
add
xlat
xlat
xlat
test
pop
add
dec
dec
add
add
gs
adc
adc
cmc
cmc
mov
mov
add
clc
clc
ljmp
mov
add
add
add
ds
rol
popa
popa
popa
scas
scas
scas
add
fsubp
out
add
xchg
div
div
notb
adc
out
and
and
add
add
jbe
jbe
jbe
add
add
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
add
add
in
in
in
add
jp
jp
ja
push
add
add
add
add
add
add
add
add
add
add
add
repz
in
in
in
in
add
add
fcoml
push
push
push
push
push
push
push
or
add
add
add
outsl
outsl
outsl
outsl
clc
clc
clc
clc
clc
add
add
or
ja
stos
stos
stos
in
in
in
in
add
add
add
add
add
add
add
cmp
cmp
flds
add
add
mov
addr16
cmp
cmp
rol
rol
rol
rol
add
add
cmp
scas
scas
scas
scas
scas
scas
scas
scas
scas
jg
cld
cld
cld
cld
cld
cld
add
add
add
jge
jge
bound
mov
fcmovu
add
es
push
push
cwtl
pop
pop
pop
pop
pop
add
add
add
dec
dec
dec
dec
dec
dec
add
sub
sub
inc
inc
inc
inc
inc
inc
inc
inc
inc
add
add
aaa
aaa
aaa
ja
mov
add
add
push
add
add
add
xor
xor
add
and
and
inc
inc
inc
fdivrl
sub
add
cmp
cmp
inc
inc
inc
inc
inc
add
mov
adc
add
test
add
cltd
out
out
out
out
out
out
out
out
jl
sub
add
cltd
call
add
aam
aam
aam
aam
outsb
outsb
outsb
add
add
push
dec
dec
dec
repnz
icebp
icebp
icebp
icebp
icebp
icebp
jbe
jbe
jbe
jbe
jbe
js
loope
ds
jo
jo
jo
out
cld
sub
add
add
faddl
add
add
xor
sub
add
sbb
sbb
sbb
add
aam
aam
aam
movsb
movsb
movsb
movsb
movsb
movsb
movsb
xor
xchg
xchg
add
add
add
add
jmp
scas
scas
scas
scas
scas
scas
scas
scas
scas
cmp
cmp
add
xor
xor
xor
cmp
cmp
div
divl
xor
xor
xor
xor
xor
pop
add
add
add
xchg
xchg
xchg
add
add
les
add
fstp
jne
jne
mov
insl
insl
insl
insl
insl
insl
add
jo
jo
xchg
xchg
xchg
nop
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
addb
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
stc
stc
stc
stc
stc
stc
add
div
div
div
add
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
aas
aas
mov
mov
mov
xlat
xlat
xlat
xlat
xlat
xlat
add
adc
add
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
sub
add
add
add
mov
mov
sti
sti
sti
bound
add
add
cmp
mov
das
das
add
adc
adc
test
add
add
and
and
and
and
and
lahf
lahf
lahf
imul
add
add
xor
repz
add
add
add
stos
stos
stos
push
push
faddl
add
sbb
add
adc
add
add
mov
add
add
xchg
add
add
add
add
dec
dec
dec
dec
js
js
stc
add
add
rcl
out
dec
dec
stos
stos
stos
stos
stos
stos
stos
stos
add
jp
lahf
lahf
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
rcl
rcl
rorl
or
or
add
add
add
mov
add
in
lea
dec
add
add
rcl
rcl
rcl
rcl
jmp
mov
iret
iret
jno
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
add
add
add
fcmovu
ficompl
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
jp
jp
jp
jp
xchg
xchg
xchg
add
add
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
add
cmp
cmp
and
and
sahf
sahf
sahf
sahf
sahf
outsb
outsb
outsb
outsb
fcompl
pop
pop
add
mov
add
add
push
mov
mov
mov
mov
push
push
push
push
push
push
add
rolb
add
add
cld
cld
cld
adc
adc
add
add
add
rcl
rcl
rcl
jg
jg
inc
inc
inc
bound
add
add
or
or
or
add
addl
addl
add
add
mov
mov
mov
mov
mov
xchg
xchg
xchg
xchg
xchg
xchg
push
push
push
push
push
push
push
push
stc
cmp
cmp
fcmovnu
fcmovnu
mov
mov
mov
mov
mov
mov
mov
mov
mov
movsb
movsb
movsb
movsb
movsb
movsb
movsb
add
add
add
dec
add
add
add
add
and
and
mov
push
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
ret
ret
ret
ret
ret
ret
ret
ret
rol
add
int
int
add
add
dec
dec
add
add
add
in
in
add
add
ret
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
enter
add
add
add
add
xchg
xchg
xchg
sub
push
push
scas
scas
scas
scas
inc
into
into
into
pop
pop
pop
pop
pop
pop
pop
add
add
add
add
add
or
or
cltd
cltd
cltd
cltd
add
add
add
fdivrs
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
loop
add
add
add
add
xor
xor
xor
or
or
or
or
or
add
mov
add
add
in
in
dec
add
add
add
sub
jl
jl
add
add
add
add
insb
add
add
mov
mov
mov
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
mov
mov
sbb
sbb
sbb
sbb
sbb
sbb
lret
lret
lret
add
add
mov
mov
push
push
push
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
push
push
push
jp
jp
jp
jp
add
add
pop
pop
pop
pop
pop
add
add
add
cmp
add
outsl
outsl
add
add
loopne
repz
repz
aaa
daa
daa
daa
daa
add
dec
dec
dec
dec
dec
mov
add
in
in
in
in
in
in
in
addr16
jecxz
hlt
hlt
hlt
hlt
hlt
hlt
hlt
add
add
lea
add
sti
xlat
add
repnz
add
add
jb
test
push
push
push
lds
cmp
cmp
cmp
mov
add
push
add
add
test
add
pop
pop
inc
inc
or
push
add
add
add
ret
ret
ret
ret
ret
ja
ja
ja
ja
add
in
in
ds
add
add
cld
cld
cld
mov
fldl
add
add
add
rcl
rcl
rcl
rcrb
sbb
add
push
push
push
push
push
push
mov
fildl
add
int3
int3
int3
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
scas
scas
scas
scas
jl
jl
jl
jl
add
sbb
sbb
xchg
add
add
into
into
into
into
fs
loope
loope
loope
add
push
sbb
sbb
sbb
mov
mov
add
add
xchg
xchg
xchg
mov
mov
push
push
push
mov
mov
add
add
add
add
mov
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
test
test
test
add
add
jno
mov
out
add
add
add
hlt
addr16
in
data16
add
push
push
push
push
add
repnz
push
add
stos
add
add
sub
sub
sub
sub
sub
add
add
add
add
add
or
add
add
add
add
lods
lods
lods
lods
lods
lods
lods
lods
pop
pop
pop
pop
pop
pop
sahf
sahf
sahf
sahf
sahf
sahf
sahf
add
add
dec
dec
dec
dec
dec
dec
or
or
pop
pop
mov
mov
mov
add
jno
push
push
push
push
push
ret
add
add
loope
loope
loope
arpl
ss
fstp
fstp
std
std
add
add
or
or
or
add
test
add
add
insl
insl
insl
sub
insl
insl
insl
inc
inc
inc
inc
push
push
push
push
push
push
inc
inc
sbb
sbb
add
add
xor
xor
xor
add
add
jmp
jmp
fcomp
add
xchg
xchg
cmp
add
jl
add
add
out
out
add
push
push
push
push
push
push
push
push
push
jge
jge
add
add
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
add
sbb
sbb
add
jnp
jnp
jnp
jnp
jnp
add
iret
cmp
add
add
or
or
or
leave
leave
add
add
sti
sti
sti
add
add
add
adc
adc
adc
adc
lea
lea
add
add
add
out
out
out
out
in
mov
mov
push
push
push
lret
lret
lret
lret
lret
lret
lret
add
add
add
add
add
add
sbb
sbb
sbb
add
push
add
jle
jle
pushf
pushf
pushf
mov
push
push
jns
jns
jns
jns
add
es
pop
lods
lods
lods
lods
lods
or
or
or
or
or
or
je
add
add
add
out
out
out
add
add
add
sub
add
add
mov
add
mov
cltd
cltd
add
add
mov
mov
add
das
jno
and
fildll
adc
adc
or
add
add
ljmp
aam
aam
aam
rcl
rcl
rcl
shlb
jae
jae
ds
pop
add
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
xchg
add
adc
adc
adc
adc
add
add
add
pop
pop
leave
div
div
add
dec
mov
mov
mov
add
push
add
add
add
adc
adc
adc
push
add
add
adc
push
push
push
add
push
add
add
add
add
rcl
rol
rol
rol
mov
mov
mov
add
rol
out
out
out
test
inc
inc
inc
inc
inc
xor
xor
ljmp
ljmp
add
aad
aad
aad
aad
aad
aad
aad
aad
aad
add
add
add
jne
jne
jne
jne
add
add
mov
mov
dec
dec
test
fildl
add
add
stc
stc
stc
stc
stc
stc
add
add
xchg
add
scas
scas
scas
scas
scas
scas
ss
mov
daa
add
add
add
in
in
add
mov
test
add
add
add
add
add
cli
es
add
arpl
arpl
add
xor
xor
adc
adc
adc
adc
adc
add
sub
addl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
mov
mov
mov
jmp
jmp
add
jl
add
dec
dec
dec
dec
rolb
xchg
and
and
adc
rcl
aam
aam
aam
aam
and
and
and
and
or
or
cmp
jnp
call
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
lret
lret
lret
sub
add
sub
add
xchg
xchg
ss
add
add
mov
xor
adc
inc
inc
inc
inc
dec
icebp
icebp
icebp
icebp
icebp
add
and
and
and
sub
sub
add
out
out
dec
dec
jmp
repnz
repnz
xor
xor
xor
add
faddl
add
pop
pop
add
add
icebp
icebp
icebp
icebp
icebp
icebp
add
add
add
scas
out
out
out
out
out
out
out
in
add
fcmovnu
fcmovnu
fistpl
sbb
jmp
jmp
jmp
jmp
add
add
addl
cltd
cltd
addb
xchg
adc
add
data16
add
out
out
add
dec
dec
dec
add
cmpsb
dec
dec
dec
dec
out
out
out
out
jmp
jmp
jmp
add
add
ds
add
jmp
es
in
jl
push
ljmp
js
js
loope
loope
sbb
add
add
add
flds
add
add
leave
leave
add
add
add
add
les
dec
dec
dec
dec
dec
add
add
add
sub
sub
dec
cmp
cmp
inc
inc
bound
add
add
mov
cmp
push
mov
adc
adc
icebp
icebp
add
add
add
out
out
out
out
out
stos
stos
jae
jae
jae
jae
add
push
push
push
push
push
sub
add
cli
cli
add
add
add
add
add
repnz
add
add
add
add
add
add
add
add
add
add
add
push
push
push
push
add
add
add
lods
lods
push
push
push
push
push
push
add
aad
aad
xor
add
add
xor
xor
xor
xor
xor
xor
lock
dec
dec
add
add
add
add
repnz
xor
xor
xor
inc
add
ss
rcl
roll
test
test
test
test
test
test
add
ljmp
ljmp
js
js
js
lea
add
add
cmp
cmp
add
add
push
push
push
add
add
aaa
xchg
add
add
sbb
sbb
sbb
sbb
mov
add
ret
ret
ret
ret
ret
ret
ret
add
adc
add
addl
or
or
add
add
add
dec
dec
mov
mov
leave
leave
cmp
cmp
add
add
push
jne
cli
cli
cli
cli
cli
add
add
add
or
lea
add
add
dec
imul
and
and
and
and
add
add
add
add
cmp
sub
sbb
sbb
sbb
add
add
add
add
cwtl
cwtl
cwtl
cwtl
std
std
std
add
bound
bound
xchg
xchg
or
or
or
or
add
add
mov
mov
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
lea
lea
mov
mov
mov
mov
mov
mov
imul
jns
jns
jnp
incl
add
add
mov
fldcw
insl
add
sub
sub
sub
sub
sub
sub
add
add
cmc
cmc
cmc
add
add
add
mov
mov
mov
add
add
cmp
cmp
cmp
cmp
push
push
jp
jp
jp
mov
dec
dec
dec
dec
dec
dec
dec
dec
dec
mov
mov
adc
add
add
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
and
and
add
add
and
and
and
and
and
add
add
add
jae
jae
jae
jae
sub
xchg
xchg
or
push
add
inc
inc
add
les
sbb
ss
div
div
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
lea
lea
or
loope
loope
loope
dec
dec
sbb
popa
add
add
sbb
sbb
pop
pop
pop
push
push
push
push
push
push
push
push
push
push
push
mov
mov
xchg
mov
mov
int3
addb
addb
add
add
add
iret
iret
iret
iret
iret
iret
iret
iret
dec
dec
dec
dec
add
pushf
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
mov
add
add
add
add
add
mov
add
cmp
pop
out
out
out
out
scas
scas
scas
scas
das
das
das
pop
pop
pop
pop
add
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
cwtl
cwtl
cwtl
cwtl
cwtl
add
add
sub
sub
push
push
push
and
das
ret
add
in
mov
rol
rol
ss
jbe
add
add
add
mov
add
add
add
sub
stos
stos
stos
add
xor
hlt
hlt
hlt
hlt
hlt
push
push
push
push
push
push
push
push
push
push
push
push
out
out
out
out
test
add
add
fs
rcl
sarl
add
add
mov
mov
or
push
push
push
push
dec
out
out
out
out
out
xchg
xchg
xchg
xchg
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
adc
adc
push
push
push
popa
popa
popa
popa
popa
popa
popa
mov
mov
repz
sub
loope
loope
loope
cli
addr16
add
rol
add
adc
adc
adc
add
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
test
test
test
test
test
add
add
inc
push
push
push
push
add
add
add
lahf
push
push
push
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
scas
sbb
sbb
sbb
sbb
add
add
add
fcmovu
fcmovu
fcmovu
fiaddl
sbb
out
out
out
mov
mov
loope
loope
add
xor
xor
fiadds
add
add
add
add
sti
sti
sti
sti
sti
sti
sti
sti
cmc
add
add
lahf
lahf
lahf
lahf
outsl
outsl
outsl
outsl
add
add
add
add
add
addl
data16
dec
dec
add
cmp
jmp
mov
mov
push
pusha
pusha
pusha
add
push
push
push
sbb
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
in
dec
dec
inc
inc
inc
or
ret
cmp
cmp
cmp
cmp
cmp
cmp
adc
adc
adc
adc
adc
dec
mov
add
inc
inc
inc
pop
pop
lock
arpl
push
cs
xchg
xchg
test
test
inc
mov
pusha
pusha
pusha
pusha
pusha
pusha
pusha
add
or
mov
mov
add
or
or
or
or
add
sti
sti
add
into
into
add
add
add
ss
add
add
add
add
add
add
es
add
add
sbb
sbb
adc
add
imul
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
add
add
add
cld
cld
cld
cld
cld
adc
add
add
cld
cld
add
gs
add
add
add
xor
xor
xor
xor
jecxz
jecxz
jecxz
mov
xchg
rcl
rcl
rcl
add
ds
add
ret
xchg
add
add
push
push
push
push
push
push
push
push
push
push
es
or
or
add
rcl
jmp
jmp
jmp
jbe
jbe
pop
pop
sub
sub
sub
sub
add
add
add
add
xor
xor
xor
xor
xor
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
add
add
cmc
add
pop
pop
pop
pop
pop
pop
pop
pop
enter
test
test
add
add
add
pop
pop
inc
inc
inc
inc
inc
inc
inc
inc
inc
add
aad
aad
aad
push
push
push
push
push
push
or
sub
sub
add
xchg
xchg
add
add
add
add
rol
roll
add
add
rcl
add
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
adc
adc
adc
add
add
add
popa
popa
popa
push
push
push
push
push
push
add
add
add
in
mov
push
gs
sbb
add
add
cmp
cmp
out
out
out
out
add
add
add
pop
pop
pop
pop
pop
pop
add
mov
add
mov
rolb
add
incl
add
add
add
movsl
movsl
movsl
movsl
movsl
dec
dec
dec
dec
dec
and
add
add
add
add
add
add
add
add
add
add
add
add
lea
les
add
add
add
add
mov
mov
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
add
add
add
add
jp
jp
cmpsl
cmpsl
cmpsl
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
push
push
push
push
push
sub
sub
add
add
jge
jge
push
push
push
push
push
push
push
push
xchg
xchg
add
in
in
in
in
lock
xor
xor
jns
jns
jns
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
mov
loop
loop
loop
loop
add
add
es
add
add
add
xchg
xchg
ret
ret
ret
add
add
add
add
add
add
add
add
add
rcl
rcl
rcl
rcl
roll
inc
lahf
lahf
lahf
lahf
lahf
lahf
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
stos
stos
stos
stos
stos
rcl
rcl
rolb
add
add
add
mov
adc
adc
adc
adc
adc
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
add
add
div
test
mov
push
push
add
mov
mov
nop
nop
nop
add
notl
add
mov
add
add
call
xor
xor
aaa
aaa
jnp
add
daa
daa
adc
mov
mov
mov
mov
mov
out
out
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
les
add
add
in
in
in
add
add
fcomp
fcomp
fcomp
adc
adc
adc
nop
nop
add
add
add
popa
popa
popa
popa
popa
popa
popa
cmpsl
cmpsl
cmpsl
test
rcl
rcl
add
pop
pop
pop
pop
dec
dec
add
js
mov
mov
gs
add
iret
add
add
faddl
add
add
cmp
mov
mov
mov
add
add
jmp
xorb
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
sub
mov
mov
mov
mov
jmp
ljmp
add
add
loopne
loopne
xchg
xchg
xchg
xchg
add
add
add
aaa
repz
js
js
add
add
add
aaa
aaa
aaa
add
out
add
add
add
add
add
add
in
clc
clc
clc
add
incb
add
add
add
add
add
outsl
outsl
xor
add
add
roll
add
add
ret
ret
ret
ret
add
add
mov
add
add
addl
mov
mov
cmp
add
mov
add
pop
jo
jo
jo
jo
jo
jo
jo
jo
addr16
add
xor
xor
xor
xor
outsb
outsb
outsb
outsb
outsb
add
add
add
fcmovu
add
add
add
add
iret
add
ljmp
ljmp
add
add
in
in
in
in
in
in
in
in
in
in
in
in
rolb
add
add
inc
inc
inc
add
jnp
jnp
add
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
js
js
sub
add
add
add
add
addl
xchg
xchg
xchg
add
iret
iret
iret
iret
iret
iret
iret
iret
iret
inc
inc
inc
inc
inc
add
ret
add
rolb
add
push
push
push
push
push
push
rcl
rcl
mov
inc
jle
jle
jle
jle
popl
inc
inc
inc
inc
inc
inc
out
out
add
add
rcl
rcl
rcl
rcl
rcl
add
add
add
insl
aam
aam
add
add
pop
pop
pop
pop
pop
rol
rol
rol
mov
add
add
test
test
adc
add
inc
inc
scas
scas
scas
js
js
clc
clc
clc
pop
pop
pop
add
xchg
xchg
xchg
add
and
jb
jb
add
add
add
add
add
add
xor
add
cmpsl
cmpsl
add
add
add
div
idivb
add
dec
dec
dec
add
add
xor
xor
popw
add
add
add
jle
jle
jle
jle
jle
add
add
jl
jl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
and
and
add
add
xchg
test
add
xor
xor
add
lods
lods
lods
jge
addl
lcall
add
add
add
add
add
push
push
cld
cld
cld
cld
cld
cld
cld
add
jmp
add
add
add
jne
add
add
faddl
add
and
and
push
add
add
test
test
cwtl
cwtl
mov
add
aaa
aaa
aaa
in
in
in
in
pop
pop
pop
mov
stc
stc
stc
stc
push
push
push
push
push
add
add
add
das
das
das
mov
mov
mov
mov
movb
push
add
add
int3
int3
int3
int3
int3
int3
add
add
xchg
add
add
addb
add
add
data16
xchg
and
xchg
xchg
hlt
hlt
aam
add
pop
pop
pop
pop
pop
pop
incb
add
loop
add
rcl
rcl
rcl
rcl
shlb
sbb
sbb
add
bound
bound
fs
and
mov
add
dec
dec
dec
add
add
in
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
jb
jb
add
ja
jge
jge
jge
jge
jbe
icebp
icebp
icebp
icebp
icebp
icebp
and
and
cmp
or
cs
inc
inc
vmovdqa
add
xchg
addl
cmp
add
dec
add
cmp
in
in
in
in
in
in
in
in
in
in
in
in
in
mov
add
pop
pop
lods
lods
lods
lahf
lahf
lahf
lahf
lahf
mov
add
add
add
dec
dec
dec
dec
dec
add
add
add
add
scas
scas
scas
scas
scas
scas
scas
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
add
sbb
sbb
add
add
xor
add
add
xor
xor
add
add
sbb
sbb
sbb
bound
bound
js
js
mov
mov
cmp
cmp
cmp
cmp
push
cmp
cmp
add
add
inc
inc
inc
mov
mov
mov
mov
xor
xor
xor
movsb
movsb
movsb
add
or
or
or
or
or
add
pop
pop
pop
add
add
add
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
shrb
insl
insl
insl
insl
insl
insl
insl
insl
push
push
push
add
in
in
in
xor
xor
xor
in
in
in
add
jecxz
push
add
jmp
jmp
pushf
add
mov
rcl
ja
ja
ja
ja
ja
ja
ja
loop
sahf
sahf
lods
lods
xor
pop
pop
pop
add
add
mov
mov
mov
sbb
jae
jae
jae
jae
jae
jae
push
push
adc
push
cmp
adc
mov
pusha
xchg
test
and
and
sub
or
cmp
push
ljmp
fwait
mov
shl
std
pop
call
push
std
xor
mov
add
push
sbb
int
mov
pusha
mov
lret
pop
sahf
notl
adc
inc
filds
push
inc
loopne
lods
mov
add
pop
mov
cmp
jle
iret
aam
shlb
dec
adc
sub
addb
sub
jecxz
cmp
xchg
lcall
shl
insl
jne
movsl
add
mov
pop
pop
inc
dec
mov
in
insl
xchg
int
xchg
sub
sti
mov
lcall
decb
rol
pop
dec
jb
test
lea
out
push
int3
or
sbbb
push
pop
scas
or
pusha
leave
rclb
loope
shlb
repz
fildl
shl
jp
ret
loopne
jae
and
test
inc
push
dec
dec
imul
jno
repz
cmpl
outsl
or
loopne
jge
das
lret
pop
mov
cmp
add
xor
in
pusha
and
inc
xchg
leave
ljmp
sub
or
pop
loope
out
jl
pop
inc
adc
aam
in
fcompl
pop
ss
pop
push
mov
fucomi
inc
das
pop
xchg
push
or
cmp
stc
xchg
jbe
xchg
mov
mov
pop
loope
or
jl
xchg
fdivp
lods
std
sbb
and
mov
pusha
add
fisubrs
push
mov
cwtl
ja
repnz
insl
adc
mov
test
mov
sbb
loopne
sub
shr
mov
mov
mov
mov
mov
std
icebp
sub
mov
add
and
out
cmc
xor
add
cmp
adc
or
cmp
mov
mov
jle
enter
sbb
cmc
mov
inc
faddl
mov
mov
jne
fidivrs
pop
jb
inc
scas
inc
mov
add
sub
add
sbb
mov
push
pusha
hlt
mov
adc
shlb
lods
sub
add
pusha
loopne
enter
clc
mov
andb
jbe
cltd
or
and
and
jb
popl
jo
mov
ret
mov
mov
pop
push
add
and
push
xchg
iret
gs
fdivrl
inc
shr
xchg
pop
pop
dec
add
shrb
sub
mov
clc
push
inc
loopne
lcall
pusha
pop
test
and
add
imul
pop
pop
data16
add
sbb
jb
int
jg
inc
xor
jb
cmp
and
and
subb
jle
add
shl
mov
cwtl
and
shrb
mov
sbb
and
inc
cmp
xchg
insb
or
add
test
pop
add
lahf
test
and
mov
push
inc
sarb
pop
mov
xchg
add
push
ljmp
sub
rorl
mov
enter
mov
pop
in
out
jg
js
inc
and
push
push
lea
aam
adc
repz
in
mov
enter
movsl
out
enter
xor
pop
add
add
add
inc
sbb
je
loop
inc
and
ret
and
pop
and
rcr
adc
pop
and
inc
enter
loopne
push
test
and
mov
pop
mov
adc
inc
pop
add
mov
lods
add
pop
adc
mov
add
cmp
aad
fidivl
repz
cmc
jne
in
mov
repnz
lods
arpl
int3
cmp
xor
jo
cmpl
xchg
inc
jne
in
mov
jg
in
pop
mov
jecxz
imul
stos
stos
mov
add
xor
jg
loopne
loopne
jbe
loopne
pop
fs
and
loopne
popf
mov
inc
sub
sub
aaa
cmp
outsl
mov
or
and
rcr
dec
xor
jb
inc
xor
mov
pop
int3
sbb
jp
dec
and
mov
add
int3
adc
test
shlb
cmpb
lret
dec
and
add
lret
add
xor
rolb
aas
les
pusha
and
loopne
sbb
movups
jne
mov
mov
shll
out
arpl
popa
and
in
mov
scas
loopne
and
jne
mov
ds
mov
shl
addb
xor
push
xor
push
mov
pusha
inc
pop
vpor
fwait
dec
lret
cmp
shlb
sbb
mov
adc
and
and
scas
inc
add
jae
aam
daa
cmp
hlt
cltd
push
dec
pop
leave
mov
sub
loopne
out
popf
dec
int3
and
add
cld
dec
hlt
addb
cmc
incl
sahf
repz
add
inc
mov
pusha
mov
fs
cwtl
cmc
pop
ret
into
test
pusha
push
pop
mov
dec
xor
and
mov
addb
js
sarl
cmp
and
mov
popl
insb
dec
dec
movsl
lods
iret
out
pop
hlt
sub
and
loopne
movsl
mov
pusha
call
daa
les
mov
add
rolb
jno
lock
jo
add
add
mov
lods
and
loopne
roll
lret
inc
adcb
dec
popf
xchg
mov
cmp
pusha
pusha
loopne
sarl
pop
icebp
jns
out
push
xor
roll
sarl
jno
test
add
rolb
sahf
inc
lods
andb
mov
xchg
cmp
pusha
int3
repnz
sub
pop
aas
shlb
test
inc
inc
mov
xor
mov
loopne
mov
loopne
scas
mov
andb
outsl
xchg
adc
lock
sub
inc
push
arpl
lock
adc
push
jo
pop
sarb
add
into
lods
mov
push
sub
add
xor
sub
sbbb
in
add
mov
push
das
loopne
bound
cmp
pop
outsb
imull
mov
xor
mov
inc
and
mov
pop
push
fs
and
jp
test
rorb
add
xor
popf
insb
aas
mov
mov
cmp
das
pushf
out
push
les
inc
push
sahf
push
lock
mov
push
dec
sbb
in
mov
mov
dec
mov
xchg
loopne
adc
setno
mov
into
xchg
ret
and
mov
and
xchg
ficompl
loopne
aad
push
jle
jl
andb
shlb
and
mov
aas
mov
andb
sub
stos
sub
jp
lods
cli
iret
mov
pusha
and
ljmp
xchg
and
decl
sbb
cwtl
outsl
xor
push
push
mov
pusha
inc
sarb
lret
call
loopne
inc
sbb
cmp
rcrl
xor
subl
test
aas
mov
and
insl
add
inc
dec
js
jno
clc
fsubp
push
int
ja
cmc
add
mov
in
in
mov
and
shrb
add
mov
xchg
mov
rolb
shlb
addr16
shlb
xor
mov
je
adc
dec
mov
cmpsl
jns
add
xor
fwait
adc
xlat
push
repnz
cmc
jo
jecxz
push
xchg
pop
or
cmpb
mov
add
stos
loopne
test
rcrb
pusha
mov
addr16
xchg
aad
push
movsl
mov
rcrb
adc
into
push
leave
push
movsb
add
shr
cld
lret
movsb
add
pop
and
lods
inc
inc
test
sub
xchg
loopne
sbb
mov
or
pop
jl
push
stos
add
and
mov
and
orl
jbe
popf
jecxz
test
inc
mov
call
add
sbbb
addb
adc
loopne
imul
popf
cmp
cmp
test
pushf
outsb
mov
iret
fisttpll
test
mov
mov
ljmp
sbb
clc
mov
mov
mov
dec
sbbl
jg
popf
les
insb
sbbl
stos
pusha
mov
cltd
sub
mulb
inc
dec
iret
outsl
inc
mov
lahf
mov
mov
sbb
loopne
push
pop
mov
add
add
fistpll
call
cmp
pop
jns
fmull
loope
mov
adc
test
imul
push
cmp
inc
sub
scas
lret
xchg
popf
push
pusha
inc
xor
inc
inc
orl
xchg
sbb
ja
fmulp
pop
xor
stc
and
or
in
pop
jno
push
dec
ret
mov
mov
cmpsl
stos
and
stos
mov
pop
inc
repz
inc
pusha
mov
sbb
and
jne
xor
jmp
mov
add
mov
lds
xor
pusha
and
push
push
loopne
movsb
inc
add
mov
pusha
mov
rolb
cmp
imul
pusha
add
xchg
sbb
repnz
sbb
aaa
leave
push
jno
sub
pusha
outsb
shrl
sub
add
scas
mov
add
dec
je
sbb
inc
fs
mov
fidivs
jp
imul
loopne
dec
lret
mov
inc
aas
mov
in
cltd
jecxz
enter
sahf
stos
bound
and
insl
jbe
push
pushf
test
or
cmp
inc
dec
xchg
xor
rcl
jl
lret
pop
jns
dec
and
or
test
shr
and
fstp
inc
mov
scas
addb
lret
pop
cmpsb
add
lods
inc
pusha
lods
lods
mov
idivl
insb
jge
jl
cmp
repnz
stc
push
rcrl
add
loopne
jl
adc
push
cmp
add
mov
loopne
fwait
push
cmp
ljmp
test
insl
push
ss
or
loopne
sub
dec
add
mov
andb
mov
jne
aad
jl
lods
lret
adc
outsl
inc
inc
mov
imul
imulb
in
sbb
inc
std
lods
and
subb
andb
daa
outsb
lcall
aad
faddl
jnp
push
xor
popa
cmp
dec
mov
push
out
les
inc
add
jecxz
rcr
mov
inc
inc
ficomps
jbe
jno
mov
pop
mov
or
sbb
and
pop
loope
mov
add
mov
fstl
pusha
inc
popf
fs
frstor
rol
jae
fstpt
add
pusha
loopne
mov
push
and
lahf
imul
pop
pop
decl
test
pusha
or
or
add
rcrb
jmp
add
aaa
pop
dec
sbb
pop
icebp
scas
mov
add
dec
mov
lret
cmp
dec
clc
and
rorb
xchg
dec
mov
add
and
push
push
sub
inc
shr
test
andb
aad
shl
movsl
xlat
add
rolb
inc
orb
pop
cmpsl
inc
out
jae
push
mov
mov
mov
sbb
add
mov
mov
push
mov
cld
jns
loope
icebp
pop
lret
loopne
das
and
xchg
mov
lcall
pusha
adc
arpl
cli
sub
gs
jne
push
mov
and
sub
jbe
mov
sub
fadds
inc
push
mov
ja
mov
cmp
mov
lret
inc
fs
jecxz
rol
lahf
inc
mov
in
movsl
mov
push
push
fnstenv
jbe
and
shrb
fstpt
push
insb
sub
add
add
sbb
xchg
lret
cmp
std
aam
mov
jo
mov
mov
mov
pusha
mov
and
add
sbbb
jl
repz
cmp
ret
xor
pusha
mov
lcall
shlb
cwtl
mov
pop
mov
mov
pop
pop
pop
mov
test
and
ljmp
call
inc
sub
jg
test
insl
pop
vpmacssdd
rclb
push
in
cs
pusha
aad
insl
in
mov
mov
sbb
and
mov
loopne
xchg
mov
sbb
pop
call
add
mov
es
inc
lds
xlat
ret
mov
mov
inc
mov
fstpt
leave
insb
pusha
test
fcmovnbe
rsqrtps
mov
pop
sti
stos
andb
jle
mov
loopne
cwtl
or
cltd
lea
mov
insl
push
inc
sub
sbb
int3
andb
insb
stos
mov
loopne
xor
jmp
jne
pop
ljmp
es
loopne
addb
bound
inc
inc
lcall
mov
sbb
xchg
out
gs
cmp
loopne
shrb
loopne
sti
inc
inc
pusha
adc
repnz
jne
ret
adc
or
pusha
loopne
js
cmp
sbb
jno
xchg
sub
cld
ds
cmpsl
cmp
cli
jb
cmp
cmpsb
and
push
and
loope
and
pop
fisttpll
pusha
pusha
cmp
push
test
jge
cmp
dec
in
mov
mov
mov
outsl
add
loopne
xor
and
sti
sbb
repnz
lds
mov
and
repnz
push
int
sub
mov
add
and
adc
xchg
inc
and
cmp
gs
fs
lods
insb
sub
jl
mov
cmovo
testl
pushf
jecxz
push
mov
add
xlat
or
mov
xchg
stos
pusha
add
loopne
or
add
sbb
jae
sub
shlb
popf
ja
test
push
or
cmp
cmp
push
xor
rcrb
and
pop
push
xor
das
jl
out
mov
inc
mov
mov
dec
dec
xchg
add
push
push
jo
ss
push
add
and
jle
add
andb
push
mov
stc
repz
push
and
xor
in
dec
inc
push
movsl
pushf
lds
insl
and
and
pusha
push
mov
rolb
push
pusha
pusha
and
cmp
orb
rcr
inc
and
mov
push
fistps
addb
mov
rcl
scas
push
notl
or
jo
es
mov
jae
daa
xchg
and
push
xlat
cmp
lea
add
dec
xchg
jo
loopne
pop
mov
sarb
add
push
pusha
inc
lea
shlb
lods
inc
add
aad
push
pusha
sbbb
cmp
mov
sarb
shl
cmp
rolb
scas
sub
inc
inc
cmpsb
rolb
shlb
loopne
rol
pusha
xchg
xor
xchg
shlb
sub
adc
ficompl
mov
cmc
gs
jbe
inc
aaa
mov
inc
insl
or
push
xchg
les
or
movsb
inc
rolb
cli
push
shlb
in
adc
add
daa
fldenv
inc
and
loopne
inc
mov
add
out
inc
addb
or
loopne
mov
and
fsubp
fstl
scas
andb
xor
sub
shlb
sarb
sub
out
mov
orb
pusha
outsb
mov
fwait
shlb
inc
loopne
lods
jl
pusha
add
mov
xor
xorl
and
add
mov
inc
and
inc
inc
push
add
outsb
dec
inc
dec
mov
cld
push
mov
dec
xor
and
loopne
lock
icebp
sahf
fdivs
subl
pop
dec
jl
push
or
in
fisttpll
sub
mov
sbb
cld
mov
add
push
push
push
push
call
sub
add
imul
lea
and
test
je
mov
push
push
bnd
test
cld
jne
mov
add
push
push
push
push
call
test
jne
xor
jmp
lea
movl
push
push
push
call
cmp
lea
jne
movzbl
or
pop
mov
not
imul
and
jne
call
loop
mov
mov
stc
notrack
sbb
mov
add
add
mov
mov
mov
inc
or
lea
lea
add
lea
add
sub
jmp
push
mov
jmp
cmp
nop
lods
clts
and
clc
sub
pop
leave
mov
and
xorb
push
jo
mov
jecxz
mov
adc
pop
pop
in
cwtl
push
sbb
imul
cld
sbb
shlb
pop
or
mov
enter
sbb
pop
push
push
fstpl
out
out
loopne
and
mov
inc
les
das
jge
cmp
sub
shrb
shlb
addb
subb
loope
jg
mov
loopne
xor
and
and
push
mov
sub
call
and
sub
loopne
jecxz
loope
addr16
pop
ret
pop
dec
inc
xchg
lods
add
and
add
inc
incb
test
mov
pop
adc
and
addb
jl
adc
jg
movsl
add
adcb
jp
mov
lea
shlb
pusha
cwtl
dec
push
loopne
out
xor
fcomi
and
das
cmpsl
movsb
pusha
mov
and
inc
test
fisttps
pop
lock
leave
aam
dec
cld
dec
addr16
std
sub
loopne
or
rolb
mov
mov
lods
loopne
iret
fcmovne
int3
cli
test
les
addb
sbb
inc
jbe
shl
aas
jb
lcall
inc
imul
stc
or
push
and
cs
jnp
loopne
mov
add
loopne
jge
loope
addb
aad
pop
out
ljmp
mov
push
push
xchg
pop
push
and
cli
movsb
and
test
popa
jl
lret
cmp
or
fcoms
mov
pushw
in
testl
loopne
andl
bound
scas
insb
les
fbld
adc
jns
les
xor
pop
sbb
mov
push
and
loopne
sahf
dec
std
xchg
mov
in
adc
out
addr16
loopne
outsb
mov
mov
loopne
in
jnp
call
loopne
loopne
push
mov
loopne
popa
in
and
shrb
xlat
cmpsb
rolb
inc
in
push
jb
imul
dec
sahf
dec
push
clc
lcall
testl
push
shrl
xchg
sbb
push
pop
test
ds
adc
push
sub
mov
mov
mov
loopne
jl
lret
and
lahf
mov
nop
inc
sbb
cmp
pusha
rolb
ret
and
repz
mov
and
rolb
scas
stc
push
xlat
sub
into
ficoms
jp
push
dec
pop
mov
arpl
fimull
add
mov
jl
or
shlb
std
inc
mov
cmc
xor
sar
fisttpll
xlat
int3
sub
sub
and
mov
loopne
nop
fsubrs
and
std
lahf
insl
mov
add
sar
mov
iret
out
hlt
in
lods
movsb
andb
inc
xchg
popa
sahf
inc
stc
xchg
fisubl
or
shlb
mov
cmp
ror
mov
loopne
inc
mov
push
nop
mov
cwtl
inc
ds
pop
fcoml
inc
xor
popa
xor
and
sub
and
fstpl
mov
fldl
xlat
push
xchg
aaa
or
sbb
les
fisttpll
std
fcomip
fnsetpm(287
rep
add
mov
leave
mov
push
push
ss
inc
xchg
pop
push
mov
andb
in
cmp
add
loopne
mov
gs
movsb
pusha
pusha
xchg
out
push
inc
shl
xor
xor
loopne
rolb
stos
pusha
inc
inc
clc
lock
cmc
pop
xor
mov
mov
sub
inc
dec
imul
hlt
sbb
movsl
mov
and
shl
movsl
seto
in
dec
cmpsb
pusha
and
sbb
mov
and
fildll
mov
adcb
jmp
push
mov
inc
enter
add
outsb
movsl
je
xchg
fnsave
xor
cmp
inc
add
addb
and
roll
and
add
lock
mov
push
cltd
mov
sub
loopne
xor
int
add
mov
imul
add
inc
sbb
dec
xchg
addb
subl
sarl
or
add
cmpsb
loopne
pop
in
adc
notl
loope
fldcw
add
push
sbb
scas
fsubs
inc
loop
push
jl
in
adc
das
cltd
ss
loopne
hlt
jo
jns
lahf
nop
out
adc
stc
sbb
inc
or
add
pusha
pusha
add
and
mov
hlt
dec
adc
cmpsb
pusha
add
rol
add
and
out
mov
lods
sbb
pusha
add
iret
mov
pop
mov
icebp
or
dec
hlt
mov
adc
and
jb
push
pusha
inc
mov
lea
andb
in
fstp
xor
jmp
mov
or
jl
add
popa
dec
stos
and
add
inc
xchg
shll
sub
inc
mov
lods
loope
ss
mov
mov
push
and
pop
mov
jo
or
fsts
les
js
mov
ret
fwait
xchg
cmp
out
enter
aas
out
adc
dec
sub
jbe
push
popf
sub
mov
mov
imul
dec
ret
int
push
jnp
out
or
shlb
xor
lret
mov
mov
pop
aad
sbb
movsb
inc
loopne
mov
mov
test
and
xchg
mov
addb
addb
xor
push
xchg
adc
push
ljmp
loopne
iret
mov
clc
daa
int
push
pop
pusha
mov
adc
push
lret
aad
or
inc
cmc
mov
mov
jb
dec
and
lds
out
in
pusha
and
bound
and
inc
flds
pusha
push
xlat
fsts
andl
addb
in
pop
dec
les
lret
mov
jge
rcll
jp
lret
jbe
dec
pop
fadds
pushf
add
leave
addr16
es
add
je
js
mov
ret
adc
fdivrs
mov
add
in
and
and
add
fwait
stc
xor
cmpsl
adc
jp
movsl
adc
and
rcrl
push
add
add
mov
mov
test
inc
aas
lret
mov
ss
xchg
cmp
add
mov
and
outsl
fisttps
and
ss
decl
add
pop
iret
imul
push
rolb
pusha
inc
lds
mov
and
imul
xor
sub
and
insb
insb
sub
pusha
jle
jecxz
cwtl
enter
inc
xchg
gs
add
dec
pop
adc
cmp
pop
inc
jmp
hlt
dec
out
mov
mov
out
andb
and
pop
into
dec
jo
sbb
jae
aas
aas
fimuls
sbb
dec
mov
and
imul
rorb
and
mov
popf
test
addb
inc
xor
das
aas
lds
xchg
and
rclb
mov
inc
bound
enter
sub
add
or
lret
push
inc
loopne
aaa
xchg
loop
sbb
mov
xchg
loopne
dec
xor
sub
add
enter
adc
inc
ret
push
in
or
cmp
inc
jo
inc
pusha
dec
in
sub
inc
mov
mov
or
and
and
xor
and
data16
inc
shlb
outsb
testb
popf
in
aam
mov
aam
nop
es
pusha
and
fcmovne
icebp
jns
in
cmc
leave
dec
imul
mov
dec
sarb
push
enter
xlat
lods
mov
mov
jecxz
sbb
andl
out
add
add
inc
push
or
in
loopne
insb
inc
xchg
outsb
mov
and
push
inc
loope
shlb
xchg
dec
in
dec
aas
std
and
fidivl
mov
iret
jbe
imul
and
inc
inc
adc
pop
pop
sahf
mov
xchg
sbb
sub
loopne
jnp
push
xchg
dec
add
shlb
mov
mov
cmc
outsl
bound
adc
loopne
dec
sbb
movd
adc
loopne
or
fadd
int
mov
add
shl
inc
jae
add
roll
loopne
or
js
bound
inc
pushf
mov
adc
in
jg
ficomps
mov
rorb
xchg
loopne
es
xchg
cmc
and
rolb
scas
inc
pusha
mov
add
idivl
jge
aam
and
lahf
cmp
imul
cmp
mov
xor
inc
test
loopne
into
mov
sbb
inc
jp
add
xchg
sub
mov
repnz
cmp
hlt
cmp
adc
jno
xchg
fistpll
cli
cli
sub
and
or
leave
adc
sub
pusha
rcrb
and
cld
push
mov
pop
sbb
dec
aad
inc
lret
repnz
cld
xor
inc
lcall
mov
addb
cli
pop
push
mov
ret
mov
inc
mov
pop
int
cwtl
lock
xor
rolb
or
mov
mov
mov
dec
jg
scas
andb
mov
imul
mov
aad
mov
les
and
mov
loopne
insb
add
dec
jb
mov
popa
mov
and
and
ror
bound
cli
jmp
jl
jne
mov
lea
outsb
push
push
shl
in
imul
jns
add
loopne
into
adc
mov
mov
fsts
int
hlt
xchg
outsl
sti
cmp
sub
mov
push
cmpsb
rolb
pusha
push
popf
dec
xchg
outsl
push
test
sbbb
xchg
sub
pusha
mov
mov
inc
loopne
mov
fs
andb
mov
cmp
mov
xor
and
mov
inc
rcrl
adc
sbbb
pop
cmp
mul
push
adc
movsb
mov
xchg
js
sahf
out
sbb
ret
ljmp
mov
dec
inc
fldcw
shlb
int
jnp
mov
jmp
inc
icebp
jecxz
rolb
sub
and
jnp
lea
stos
cwtl
mov
xchg
push
cli
andb
les
dec
or
loopne
sbb
add
cwtl
pushf
or
pushf
cli
in
cmp
std
inc
mov
enter
add
scas
mov
dec
outsb
push
push
andb
inc
add
xor
add
xchg
lret
add
addb
pop
ljmp
add
adc
or
loopne
ljmp
add
mov
shl
cmc
pusha
xchg
push
aas
lods
pusha
mov
add
sarl
arpl
mov
inc
add
pusha
aad
xchg
stos
add
xchg
adc
xchg
dec
js
pop
and
mov
loopne
push
fiadds
pop
ret
mov
dec
push
pop
imul
push
loopne
nop
xchg
repz
sbb
add
ds
and
inc
mov
xlat
push
sarl
les
mov
fistpl
xchg
jle
in
sbb
dec
imul
mov
mov
pop
dec
adcl
vsqrtpd
push
loopne
daa
add
push
shr
and
mov
pop
xchg
cmpsl
imul
addb
outsb
sbb
sbb
insb
mov
fdivl
inc
sbb
adc
adc
fdivrp
fdivr
push
xchg
daa
lods
or
xor
loopne
jl
add
fwait
rcr
push
sub
mov
out
jns
sub
andb
and
mov
andb
decb
mov
lret
and
inc
ljmp
pop
sub
and
mov
js
or
pop
les
cltd
pop
inc
mov
adc
in
dec
dec
mov
add
pop
imul
outsb
aaa
andl
xchg
mov
inc
cmpsb
loopne
jle
mov
loopne
gs
add
pop
lret
pusha
loopne
and
cmp
nop
add
fidivs
test
paddw
inc
adc
cmc
notb
clc
mov
rclb
pop
not
notl
xchg
lea
and
sbb
movsb
loopne
pushf
nop
cltd
shll
dec
sub
mov
rcr
mov
loopne
mov
jbe
imul
xchg
rolb
cld
adc
adc
sub
shlb
rorb
xchg
mov
and
out
nop
push
sarb
and
mov
sbb
test
shrb
inc
jmp
mov
shl
cmp
push
sbb
mov
and
sbb
cmp
or
xor
jne
push
and
cli
dec
ss
mov
test
lds
pop
xor
test
xchg
int
add
mov
addr16
fcmovnu
sti
rolb
mov
clc
jnp
loopne
out
inc
push
movsb
mov
adc
or
and
mulb
adc
in
lret
pop
adc
sub
and
test
ljmp
mov
rolb
stos
andb
push
or
shll
and
or
mov
mov
iret
mov
and
xor
js
mov
jl
pushf
xchg
mov
fdivrp
push
xor
xchg
out
jle
sbb
mov
mov
out
shl
sub
daa
jno
sbb
xchg
test
in
sar
ds
xchg
in
inc
mov
mov
dec
sbb
iret
push
nop
push
mov
leave
nop
jmp
add
cli
or
sub
sarb
push
push
mov
xchg
ret
add
push
add
and
push
mov
leave
nop
jmp
add
add
fincstp
add
push
mov
xchg
ret
add
mov
add
nop
nop
cld
jae
or
stos
xor
mov
loopne
sbb
shlb
shl
clc
repnz
nop
cld
jae
out
test
cltd
fwait
push
mov
xchg
ret
add
mov
add
add
cli
repnz
movzwl
clc
repnz
nop
cld
jae
add
add
jle
push
mov
xchg
ret
inc
add
add
add
and
rolb
add
nop
jmp
mov
add
mov
inc
jle
add
push
scas
add
add
push
nop
push
mov
leave
nop
jmp
mov
add
mov
xchg
clc
repnz
nop
cld
jae
pop
push
scas
add
xchg
pop
add
nop
push
mov
leave
nop
jmp
mov
add
inc
and
add
repnz
nop
cld
jae
add
push
and
and
pop
cmp
mov
xchg
ret
int3
pushf
add
sbb
jbe
in
cmp
nop
push
mov
leave
nop
jmp
add
out
movsb
add
pop
push
clc
repnz
nop
cld
jae
add
pop
flds
fwait
clc
repnz
nop
cld
jae
add
pop
add
add
sub
pusha
xchg
adc
mov
clc
repnz
nop
cld
jae
add
push
mov
leave
nop
jmp
pop
cmp
add
add
add
nop
cld
jae
or
pop
add
clc
repnz
nop
cld
jae
add
add
xor
add
mov
xchg
ret
jmp
or
xor
add
push
mov
leave
nop
jmp
add
mov
leave
nop
push
mov
leave
nop
jmp
add
add
add
add
rcrb
ret
push
mov
leave
nop
jmp
add
add
cli
aas
test
nop
nop
cld
jae
add
add
add
add
repnz
nop
cld
jae
les
push
clc
repnz
nop
cld
jae
les
test
gs
push
shlb
and
pop
call
nop
jmp
out
sbb
add
and
nop
cld
jae
add
cmp
les
add
add
or
mov
leave
nop
jmp
add
jb
add
xor
clc
repnz
nop
cld
jae
add
add
flds
repnz
nop
cld
jae
add
mov
pushf
adc
fld1
push
mov
xchg
ret
add
xor
add
jbe
movsb
shlb
cmpl
nop
push
mov
leave
nop
jmp
jmp
add
in
mov
clc
repnz
nop
cld
jae
aas
add
push
xchg
xchg
dec
nop
push
mov
leave
nop
jmp
push
je
add
jb
mov
jg
push
mov
xchg
ret
xor
add
jmp
out
test
nop
push
mov
leave
nop
jmp
add
adc
je
add
clc
repnz
nop
cld
jae
cmp
mov
mov
mov
repnz
nop
cld
jae
aaa
mov
add
sbb
pop
out
hlt
add
add
repnz
nop
cld
jae
add
adc
push
mov
xchg
ret
int3
pop
jmp
add
add
add
clc
repnz
nop
cld
jae
push
mov
out
cmp
nop
push
mov
leave
nop
jmp
xchg
aaa
add
test
and
clc
repnz
nop
cld
jae
add
add
push
add
pusha
xor
jmp
nop
cld
jae
loope
mov
add
pop
clc
repnz
nop
cld
jae
mov
add
int3
sbb
repnz
nop
cld
jae
add
or
mov
xchg
ret
test
mov
mov
and
add
repnz
nop
cld
jae
pop
and
test
rclb
add
clc
repnz
nop
cld
jae
mov
cmpsb
add
icebp
mov
clc
repnz
nop
cld
jae
cli
add
add
xchg
mov
nop
push
mov
leave
nop
jmp
add
or
sub
and
and
int
clc
repnz
nop
cld
jae
pop
scas
add
stos
add
div
nop
push
mov
leave
nop
jmp
add
add
cmp
flds
cmp
nop
cld
jae
sbb
push
fs
sbb
clc
repnz
nop
cld
jae
add
adc
and
aas
lea
xchg
ret
add
add
add
clc
repnz
nop
cld
jae
out
and
cmc
cld
cltd
je
clc
repnz
nop
cld
jae
and
add
and
and
sub
clc
repnz
nop
cld
jae
push
and
add
xor
add
cmpsb
add
dec
xchg
xor
nop
nop
cld
jae
divl
mov
jecxz
mull
repnz
nop
cld
jae
sbb
inc
jecxz
clc
repnz
nop
cld
jae
xchg
add
add
jbe
lret
sub
push
mov
xchg
ret
add
sbb
shlb
push
loopne
mov
xchg
ret
add
nop
repnz
fnstcw
xor
pop
push
mov
xchg
ret
add
nop
add
movsb
add
push
clc
repnz
nop
cld
jae
idivl
jbe
out
fstps
cmpsb
add
loopne
cs
mov
clc
repnz
nop
cld
jae
xchg
push
lea
clc
repnz
nop
cld
jae
sbb
flds
mov
jmp
add
scas
add
je
pushf
jmp
add
jb
aad
jl
xor
mov
cmp
ret
add
xor
xchg
out
add
and
mov
push
mov
xchg
ret
cmp
mov
push
mov
xchg
ret
int3
add
jbe
add
add
xor
nop
push
mov
leave
nop
jmp
cli
add
adc
nop
nop
cld
jae
add
aas
out
and
rolb
out
sbb
cld
jae
and
add
dec
mov
clc
repnz
nop
cld
jae
add
sbbl
nop
jmp
gs
add
int3
mov
push
mov
xchg
ret
push
add
push
mov
repnz
sub
inc
pop
adc
pop
jl
add
add
add
push
mov
repnz
nop
cld
jae
stos
add
inc
loope
sbb
rolb
loopne
cmp
jg
clc
repnz
nop
cld
jae
add
add
div
clc
repnz
nop
cld
jae
add
mov
add
arpl
clc
clc
repnz
nop
cld
jae
push
loope
and
mov
clc
repnz
nop
cld
jae
jns
add
add
jge
roll
push
mov
leave
nop
jmp
add
add
sbb
xor
nop
push
mov
leave
nop
jmp
add
and
push
add
add
mov
mov
xchg
ret
push
add
gs
cli
mov
nop
nop
cld
jae
add
add
xchg
jp
push
xorl
clc
repnz
nop
cld
jae
add
mov
sbb
fistpl
clc
repnz
nop
cld
jae
jns
test
add
das
shr
clc
repnz
nop
cld
jae
mov
and
fld1
push
mov
xchg
ret
add
movsb
add
add
imul
jle
add
add
mov
or
add
mov
clc
repnz
nop
cld
jae
add
add
out
or
loopne
mov
mov
leave
nop
jmp
stos
add
add
pushf
add
pusha
and
and
mov
fs
add
nop
push
mov
leave
nop
jmp
pop
popl
mov
repnz
nop
cld
jae
add
add
mov
repnz
nop
cld
jae
add
sub
nop
cld
jae
add
push
gs
add
pop
clc
repnz
nop
cld
jae
add
add
add
or
out
mov
clc
repnz
nop
cld
jae
sbb
add
add
add
je
nop
push
mov
leave
nop
jmp
sbb
mov
add
clc
repnz
nop
cld
jae
cmp
int3
jmp
cmpsb
lods
xor
clc
repnz
nop
cld
jae
add
add
outsl
add
clc
repnz
nop
cld
jae
xchg
add
add
int3
mov
clc
repnz
nop
cld
jae
loope
add
mov
add
cmp
mov
clc
repnz
nop
cld
jae
push
add
add
xchg
andb
call
clc
repnz
nop
cld
jae
push
add
repnz
repnz
nop
cld
jae
mov
add
and
repnz
nop
cld
jae
add
mov
dec
nop
push
mov
leave
nop
jmp
add
add
or
int3
mov
pop
outsl
inc
add
add
add
add
scas
jne
clc
repnz
nop
cld
jae
add
test
clc
repnz
nop
cld
jae
add
add
pop
insb
inc
add
push
mov
xchg
ret
cmp
push
mov
xchg
add
dec
push
in
rol
inc
orb
and
mov
push
mov
xchg
ret
add
mov
out
add
add
nop
push
mov
leave
nop
jmp
jmp
testl
int3
scas
mov
clc
repnz
nop
cld
jae
repnz
mov
nop
cld
jae
jb
sbb
add
add
or
add
repnz
nop
cld
jae
pushf
add
movl
adc
add
pop
add
push
add
mov
push
clc
repnz
nop
cld
jae
mov
add
mov
add
idiv
lcall
cmp
repnz
add
fs
push
loopne
adc
int3
jg
mov
clc
repnz
nop
cld
jae
mov
flds
jge
clc
repnz
nop
cld
jae
add
cmp
orl
sbb
repnz
nop
cld
jae
add
push
push
and
push
mov
leave
nop
jmp
and
cmpsb
mov
pushf
pop
fld1
clc
repnz
nop
cld
jae
cmp
add
cmp
inc
xor
clc
repnz
nop
cld
jae
and
add
repnz
nop
cld
jae
add
sbb
mov
add
repnz
nop
cld
jae
jb
or
add
clc
repnz
nop
cld
jae
add
mov
clc
repnz
nop
cld
jae
add
sar
je
xchg
repnz
nop
cld
jae
test
add
movb
mov
xchg
ret
stos
add
aas
jne
clc
repnz
nop
cld
jae
add
jmp
and
mov
clc
repnz
nop
cld
jae
cmp
je
cmp
dec
push
mov
xchg
ret
add
add
jmp
mov
les
sub
add
nop
jmp
jbe
add
nop
nop
cld
jae
jmp
or
sbb
mov
clc
repnz
nop
cld
jae
add
push
mov
jge
aas
adc
nop
jmp
or
pop
mov
push
mov
xchg
ret
add
add
add
add
icebp
mov
clc
repnz
nop
cld
jae
add
add
fisubl
mov
nop
push
mov
leave
nop
jmp
add
xlat
mov
clc
repnz
nop
cld
jae
mov
sbb
nop
cld
jae
cli
add
add
add
in
leave
nop
jmp
add
add
add
clc
repnz
nop
cld
jae
cmp
cmp
fsincos
cmp
push
mov
xchg
ret
add
cmpsb
std
push
nop
push
mov
leave
nop
jmp
add
or
add
fnstenv
clc
jne
adc
repnz
nop
cld
jae
sbb
cmc
testl
or
repnz
nop
cld
jae
out
add
push
mov
xchg
ret
imul
stos
je
add
pop
add
mov
push
mov
xchg
ret
mov
flds
add
inc
xor
nop
cld
jae
add
adc
add
inc
adc
in
add
add
pop
add
add
add
add
pusha
loop
add
xor
inc
push
dec
clc
repnz
nop
cld
jae
push
add
out
adc
push
clc
repnz
nop
cld
jae
add
add
stos
notl
nop
jmp
inc
add
ficomps
mov
clc
repnz
nop
cld
jae
sbb
inc
push
or
cmc
repnz
jns
inc
or
repnz
nop
cld
jae
add
add
add
xor
push
xchg
push
nop
push
mov
leave
nop
jmp
mov
add
add
add
clc
repnz
nop
cld
jae
add
out
mov
inc
push
push
mov
xchg
ret
push
add
cmp
gs
add
push
mov
leave
nop
jmp
add
add
mov
loope
rorl
mov
xchg
ret
add
pop
add
or
push
jne
nop
push
mov
leave
nop
jmp
add
loope
inc
loopne
es
clc
repnz
nop
cld
jae
push
mov
dec
pusha
clc
repnz
nop
cld
jae
mov
or
add
add
sub
subb
jge
clc
repnz
nop
cld
jae
add
fcmovnu
sbb
push
mov
xchg
ret
add
loope
popf
dec
jmp
add
stos
movsb
push
mov
test
stos
push
cmp
push
popf
fwait
clc
repnz
nop
cld
jae
add
movsb
test
pop
mov
push
mov
xchg
ret
movsb
cmp
inc
add
mov
xchg
ret
pushf
pop
add
cmc
mov
repnz
clc
repnz
nop
cld
jae
cli
push
add
clc
repnz
nop
cld
jae
add
add
nop
add
cmp
in
leave
nop
jmp
add
jbe
add
inc
cmc
jne
clc
repnz
nop
cld
jae
add
jns
cmpw
clc
repnz
nop
cld
jae
push
cmpsb
cmc
add
ror
clc
repnz
nop
cld
jae
pop
cli
sbb
add
mov
nop
push
mov
leave
nop
jmp
add
clc
repnz
nop
cld
jae
popl
add
add
clc
repnz
nop
cld
jae
divl
add
jb
xchg
add
push
mov
xchg
ret
add
add
lods
push
mov
xchg
ret
add
add
add
mov
shrb
mov
xchg
ret
add
add
jp
fwait
push
mov
xchg
ret
add
nop
push
push
fnstenv
and
repz
clc
repnz
nop
cld
jae
mov
cmpsb
out
mov
clc
repnz
nop
cld
jae
add
add
add
mov
clc
repnz
nop
cld
jae
adc
add
pop
test
nop
push
mov
leave
nop
jmp
add
push
or
jmp
mov
add
add
jbe
or
inc
add
je
nop
push
mov
leave
nop
jmp
pop
add
push
cmp
add
clc
repnz
nop
cld
jae
flds
cmp
add
addr16
nop
push
mov
leave
nop
jmp
xchg
pop
jb
add
pop
sub
mov
xchg
ret
add
add
mov
push
add
push
mov
xchg
ret
test
xchg
jbe
mov
inc
dec
mov
jae
repnz
nop
cld
jae
add
gs
shrl
fs
insb
clc
repnz
nop
cld
jae
mov
flds
xor
mov
clc
repnz
nop
cld
jae
fnstcw
add
pop
fld1
push
mov
xchg
ret
add
push
or
les
mul
pop
mov
clc
repnz
nop
cld
jae
cmp
out
nop
mov
and
loopne
cld
clc
repnz
nop
cld
jae
add
add
add
sbb
add
clc
repnz
nop
cld
jae
mov
mov
mov
clc
repnz
nop
cld
jae
add
les
test
rolb
lock
repnz
nop
cld
jae
add
add
pop
mov
clc
repnz
nop
cld
jae
push
add
pause
push
mov
leave
nop
jmp
mov
mov
add
inc
inc
popf
push
clc
repnz
nop
cld
jae
add
add
mov
and
andb
xchg
ret
cmp
pushf
pushf
add
and
mov
leave
nop
jmp
add
add
test
or
repnz
nop
cld
jae
push
add
pushf
in
mov
clc
repnz
nop
cld
jae
add
add
leave
clc
repnz
nop
cld
jae
add
mov
testb
nop
push
mov
leave
nop
jmp
or
test
push
mov
leave
nop
jmp
mov
ljmp
add
nop
jmp
add
clc
clc
repnz
nop
cld
jae
cmp
pop
add
add
mov
and
mov
xchg
ret
scas
add
pop
flds
aaa
jnp
mov
push
clc
repnz
nop
cld
jae
add
loope
add
mov
clc
repnz
nop
cld
jae
add
mov
mov
enter
mov
adc
push
mov
leave
nop
jmp
add
jns
je
call
and
inc
add
add
add
xor
test
nop
nop
cld
jae
add
lods
idiv
clc
repnz
nop
cld
jae
add
add
pusha
mov
clc
repnz
nop
cld
jae
add
les
fwait
push
clc
repnz
nop
cld
jae
add
fldenv
cwtl
add
inc
nop
push
mov
leave
nop
jmp
add
cli
add
push
add
push
clc
repnz
nop
cld
jae
add
add
mov
add
fcoms
nop
jmp
stos
add
add
cmp
clc
repnz
nop
cld
jae
testl
nop
nop
cld
jae
mov
sbb
add
jge
push
sti
cmp
add
cli
add
add
cmpsb
push
push
pushl
nop
push
mov
leave
nop
jmp
add
add
test
add
nop
jmp
add
add
and
mov
xchg
ret
push
loope
cmp
mov
xchg
ret
add
add
nop
push
mov
leave
nop
jmp
sbb
add
inc
mov
xchg
cld
clc
repnz
nop
cld
jae
jbe
add
push
add
add
fistpl
push
mov
xchg
ret
add
test
cmp
add
nop
cld
jae
add
jbe
add
mov
push
mov
xchg
ret
je
pop
add
mov
inc
mov
clc
repnz
nop
cld
jae
nop
mov
stc
clc
repnz
nop
cld
jae
add
add
push
nop
push
mov
leave
nop
jmp
mov
add
add
add
enter
inc
and
repnz
nop
cld
jae
and
add
ret
add
repnz
nop
cld
jae
add
dec
aas
movswl
nop
push
mov
leave
nop
jmp
xor
jmp
xchg
and
repnz
nop
cld
jae
add
pop
pop
push
mov
xchg
ret
pop
add
loope
add
jmp
adc
xorl
clc
repnz
nop
cld
jae
and
add
clc
repnz
nop
cld
jae
cmpsb
add
mov
clc
repnz
nop
cld
jae
aaa
push
loope
xchg
fsts
mov
xchg
ret
add
cmc
add
mov
push
sbb
addb
clc
repnz
nop
cld
jae
sbb
pop
add
add
push
push
mov
xchg
ret
mov
fnstenv
mov
nop
nop
cld
jae
and
jmp
inc
pushl
clc
repnz
nop
cld
jae
add
push
add
add
mov
clc
repnz
nop
cld
jae
xor
add
je
js
mov
xchg
ret
pushf
out
add
add
jmp
je
add
test
or
test
pop
cli
and
inc
mov
push
or
repnz
nop
cld
jae
add
add
add
jae
repnz
nop
cld
jae
add
mov
add
pop
push
mov
xchg
ret
push
scas
jmp
sbb
jbe
mov
rcll
mov
xchg
ret
cmp
jmp
add
add
add
push
add
sbb
add
add
fs
inc
pop
clc
repnz
nop
cld
jae
test
push
fnstenv
add
fistpl
clc
repnz
nop
cld
jae
mov
adc
add
clc
repnz
nop
cld
jae
add
sbb
add
xchg
inc
outsl
inc
add
push
popl
add
add
mov
push
mov
leave
nop
jmp
add
xor
add
call
clc
repnz
nop
cld
jae
push
add
das
mov
clc
repnz
nop
cld
jae
add
pop
add
nop
or
push
addb
cmp
ret
xor
sbb
or
add
mov
pop
clc
repnz
nop
cld
jae
or
jbe
add
pusha
jle
mov
mov
leave
nop
jmp
add
pushf
mov
add
repnz
nop
cld
jae
add
popl
add
add
pushf
in
dec
enter
jmp
add
out
add
add
aas
mov
stos
stos
add
add
clc
repnz
nop
cld
jae
and
add
add
cs
inc
add
loope
cmp
add
test
jmp
clc
repnz
nop
cld
jae
add
add
ret
clc
repnz
nop
cld
jae
loope
mov
add
loopne
and
data16
repnz
nop
cld
jae
add
add
mov
mov
nop
push
mov
leave
nop
jmp
gs
add
xchg
loop
jnp
mov
xchg
ret
je
add
mov
fildl
add
repnz
nop
cld
jae
add
cmpsl
add
clc
repnz
nop
cld
jae
and
aas
xchg
clc
repnz
nop
cld
jae
pushf
out
add
add
clc
repnz
nop
cld
jae
add
add
cmp
inc
jne
clc
repnz
nop
cld
jae
out
flds
jbe
add
add
pop
nop
push
mov
leave
nop
jmp
add
mov
mov
nop
add
pcmpgtw
xchg
ret
gs
jmp
add
add
cmp
nop
nop
cld
jae
jbe
gs
add
add
mov
push
mov
leave
nop
jmp
repnz
nop
push
movsb
add
cwtl
jbe
inc
rep
clc
repnz
nop
cld
jae
mov
mov
cmc
mov
add
clc
repnz
nop
cld
jae
add
push
push
mov
xchg
ret
add
mov
add
clc
repnz
nop
cld
jae
pop
sbb
cmc
pop
cli
shll
fistl
mov
cmp
ret
add
add
and
pop
ljmp
clc
repnz
nop
cld
jae
mov
aaa
pop
repz
clc
repnz
nop
cld
jae
xchg
add
add
call
cmp
push
mov
leave
nop
jmp
push
gs
add
add
push
clc
repnz
nop
cld
jae
add
jmp
add
les
repnz
nop
cld
jae
cmc
add
add
mov
xchg
ret
mov
or
out
mov
cmc
mov
push
mov
xchg
ret
adc
xor
add
mov
repnz
nop
cld
jae
flds
add
inc
mov
clc
repnz
nop
cld
jae
xchg
pop
add
or
add
mov
clc
repnz
nop
cld
jae
add
add
adc
sbb
and
add
add
add
decl
mov
leave
nop
jmp
aaa
add
xorl
push
mov
xchg
ret
xchg
add
cli
add
and
nop
push
mov
leave
nop
jmp
mov
mov
pushf
notl
repnz
nop
cld
jae
out
add
repnz
add
clc
repnz
nop
cld
jae
add
mov
add
mov
clc
repnz
nop
cld
jae
pop
push
add
pushf
or
xor
clc
repnz
nop
cld
jae
jbe
add
dec
out
call
nop
jmp
push
mov
clc
repnz
nop
cld
jae
add
sbb
dec
push
mov
xchg
ret
add
add
cmp
xchg
test
mov
clc
repnz
nop
cld
jae
jb
add
add
clc
pop
lea
push
mov
xchg
ret
mov
sbb
mov
add
push
push
mov
xchg
ret
fnstenv
int3
mov
add
jne
add
aaa
add
push
fldcw
add
nop
push
mov
leave
nop
jmp
cmp
pop
pushf
add
or
push
nop
push
mov
leave
nop
jmp
int3
sbb
out
xor
inc
addb
sarb
nop
cld
jae
mov
mov
add
mov
push
mov
leave
nop
jmp
test
add
sub
clc
repnz
nop
cld
jae
add
les
scas
loopne
fnsave
sar
repnz
nop
cld
jae
add
dec
addr16
clc
repnz
nop
cld
jae
jbe
add
loope
add
or
add
push
add
add
xchg
add
add
add
sar
repnz
nop
cld
jae
mov
add
out
lea
clc
repnz
nop
cld
jae
aas
mov
add
add
cmpb
clc
repnz
nop
cld
jae
or
add
jmp
cmp
add
jns
add
cli
add
stos
sbb
mov
add
orl
nop
push
mov
leave
nop
jmp
or
das
mov
push
mov
xchg
ret
fnstenv
add
add
add
aad
inc
add
add
add
push
push
mov
xchg
ret
add
add
add
test
nop
push
mov
leave
nop
jmp
add
cmp
mov
push
add
loop
mov
lcall
mov
scas
je
clc
repnz
nop
cld
jae
stos
add
mov
clc
repnz
nop
cld
jae
int3
aaa
xchg
cmp
add
repnz
nop
cld
jae
add
add
jbe
pop
push
clc
repnz
nop
cld
jae
add
cmp
add
clc
repnz
nop
cld
jae
add
xchg
add
jb
pop
xchg
push
mov
xchg
ret
add
add
int3
repnz
jl
xchg
nop
nop
cld
jae
popl
out
scas
add
xchg
push
repnz
nop
cld
jae
cli
je
add
jb
lret
jbe
clc
repnz
nop
cld
jae
add
lods
mov
mov
xchg
ret
pop
add
aas
jbe
xor
add
rep
clc
repnz
nop
cld
jae
add
fstps
bound
mov
clc
repnz
nop
cld
jae
pop
add
add
movzwl
clc
repnz
nop
cld
jae
add
mov
pop
test
nop
nop
cld
jae
cli
add
xor
nop
daa
push
clc
repnz
nop
cld
jae
add
pop
add
cmpsb
andb
inc
mov
jl
push
push
mov
xchg
ret
loope
add
aaa
cli
bnd
pop
mov
push
mov
xchg
ret
add
add
add
gs
mov
push
mov
leave
nop
jmp
add
aaa
add
fucom
clc
repnz
nop
cld
jae
scas
push
cmc
fldenv
repnz
nop
cld
jae
push
add
add
mov
inc
xchg
xchg
ret
add
jbe
xor
loope
or
pop
push
mov
xchg
ret
cli
fs
add
add
push
push
mov
xchg
ret
aaa
and
add
scas
call
nop
nop
cld
jae
add
adc
mov
push
clc
repnz
nop
cld
jae
sbb
add
xchg
clc
repnz
nop
cld
jae
test
pop
out
jnp
seto
in
leave
nop
jmp
jns
nop
xchg
add
sub
je
add
clc
repnz
nop
cld
jae
stos
add
pushl
add
jb
pop
and
push
xchg
rep
clc
repnz
nop
cld
jae
add
add
and
out
clc
repnz
nop
cld
jae
add
push
clc
repnz
nop
cld
jae
adc
flds
add
add
clc
repnz
nop
cld
jae
add
add
fsts
add
clc
repnz
nop
cld
jae
push
les
aas
mov
sub
add
repnz
nop
cld
jae
out
mov
jmp
rcrl
add
and
les
mov
nop
nop
cld
jae
and
cmpsb
add
push
mov
xchg
ret
push
stos
out
add
cli
add
mov
push
mov
xchg
ret
sbb
add
lea
clc
repnz
nop
cld
jae
add
jns
add
ret
ret
clc
repnz
nop
cld
jae
cmc
add
push
nop
adc
les
add
add
repnz
nop
cld
jae
add
add
mov
nop
push
mov
leave
nop
jmp
add
pusha
xlat
xchg
clc
repnz
nop
cld
jae
out
add
add
add
push
loopne
push
mov
pusha
or
and
loop
nop
push
mov
leave
nop
jmp
les
test
pusha
add
inc
in
push
mov
xchg
ret
add
add
lods
push
mov
xchg
ret
sbb
add
add
push
sbb
shr
push
loope
call
nop
jmp
or
xor
movsl
fistpl
nop
push
mov
leave
nop
jmp
push
out
pop
repnz
cmc
add
push
mov
xchg
ret
mov
push
add
push
mov
xchg
ret
add
or
adc
dec
xchg
psubusw
nop
push
mov
leave
nop
jmp
add
add
add
repnz
nop
cld
jae
add
stos
add
clc
repnz
nop
cld
jae
add
add
mov
clc
repnz
nop
cld
jae
jb
add
pusha
add
shrb
cltd
push
clc
repnz
nop
cld
jae
pop
add
add
mov
add
or
roll
add
repnz
nop
cld
jae
push
nop
add
movsb
and
sub
clc
repnz
nop
cld
jae
add
sub
repnz
nop
cld
jae
mov
jns
add
dec
or
add
nop
jmp
add
sbb
push
push
mov
xchg
ret
loope
xor
stos
das
sub
push
mov
xchg
ret
add
cli
add
xor
mov
leave
nop
jmp
mov
iret
add
push
mov
xchg
ret
gs
mov
add
jbe
mov
clc
repnz
nop
cld
jae
xchg
pushf
add
push
clc
repnz
nop
cld
jae
inc
test
cmpsb
add
inc
push
mov
xchg
ret
test
and
clc
repnz
nop
cld
jae
or
add
add
xor
mov
push
mov
xchg
ret
add
repnz
add
add
mov
rep
push
mov
xchg
ret
mov
add
out
call
clc
repnz
nop
cld
jae
push
inc
mov
jno
movsb
push
mov
xchg
ret
adc
add
xchg
mov
jmp
incl
add
and
mov
add
negb
push
mov
leave
nop
jmp
push
add
mov
fsts
pop
clc
repnz
nop
cld
jae
push
push
add
add
jge
clc
repnz
nop
cld
jae
add
add
das
mov
nop
push
mov
leave
nop
jmp
add
jmp
flds
out
test
mov
xchg
ret
cmp
add
stc
push
clc
repnz
nop
cld
jae
mov
xor
stc
fld1
nop
push
mov
leave
nop
jmp
add
sbb
nop
cld
mov
addb
cmp
ret
cmp
adc
loope
sbb
nop
nop
cld
jae
add
push
scas
add
nop
cld
jae
out
add
pop
cmpw
nop
push
mov
leave
nop
jmp
fnstenv
add
nop
cld
jae
xor
add
ss
nop
nop
cld
jae
add
add
add
xor
pop
fistpl
clc
repnz
nop
cld
jae
nop
push
pop
add
repnz
jmp
add
scas
xor
add
mov
mov
mov
add
push
addr16
clc
repnz
nop
cld
jae
loope
add
and
sbb
movb
nop
nop
cld
jae
add
pop
xor
clc
repnz
nop
cld
jae
add
add
mov
add
repnz
nop
cld
jae
add
aas
add
test
xchg
ret
add
add
je
add
mov
push
mov
xchg
ret
add
movsb
jb
add
jns
clc
repnz
nop
cld
jae
add
add
xor
pop
jnp
test
jmp
nop
nop
cld
jae
add
mov
nop
nop
cld
jae
je
push
add
clc
repnz
nop
cld
jae
loope
adc
xchg
popl
add
dec
or
add
je
add
loope
mov
clc
repnz
nop
cld
jae
xchg
add
add
ds
pusha
into
push
and
nop
push
mov
leave
nop
jmp
add
add
clc
repnz
nop
cld
jae
sbb
add
add
cmp
pop
push
mov
xchg
ret
jns
add
add
add
mov
xor
clc
repnz
nop
cld
jae
cmp
add
push
add
add
clc
repnz
nop
cld
jae
jb
add
test
movsbl
out
clc
clc
repnz
nop
cld
jae
add
add
cmp
dec
cmp
repnz
nop
cld
jae
add
push
push
add
dec
scas
inc
and
rorl
mov
xchg
ret
test
sbb
rcl
jge
cmpl
jae
add
or
repnz
nop
cld
jae
push
mov
cwtl
jno
lret
mov
leave
nop
jmp
push
add
flds
testl
bound
rolb
inc
pop
pop
push
mov
xchg
ret
add
out
and
add
adc
nop
jmp
mov
pop
and
clc
repnz
nop
cld
jae
and
push
jmp
add
add
mov
add
scas
add
cmp
fstps
leave
nop
jmp
mov
add
jne
clc
repnz
nop
cld
jae
add
xchg
dec
push
mov
xchg
ret
add
mov
push
test
mov
xchg
ret
add
adc
push
sub
clc
repnz
nop
cld
jae
mov
add
push
push
inc
ficomps
pop
push
mov
xchg
ret
add
add
add
add
mov
call
cld
jae
push
jb
je
add
cmp
push
mov
leave
nop
jmp
cmpsb
add
add
add
pop
mov
clc
repnz
nop
cld
jae
add
imul
clc
repnz
nop
cld
jae
cmp
pop
xor
add
mov
rclb
and
clc
repnz
nop
cld
jae
add
and
clc
repnz
nop
cld
jae
cmp
out
les
add
pop
not
clc
repnz
nop
cld
jae
or
add
add
push
mov
xchg
ret
add
add
lods
loopne
arpl
repnz
nop
cld
jae
mov
and
xor
push
mov
xchg
ret
sbb
scas
mov
add
add
push
mov
leave
nop
jmp
test
and
push
nop
push
mov
leave
nop
jmp
add
add
add
add
sbb
clc
repnz
nop
cld
jae
add
int3
add
cmpsb
dec
pop
push
mov
xchg
ret
add
int3
xchg
add
mov
xchg
ret
add
jns
mov
test
cmp
dec
pop
clc
repnz
nop
cld
jae
add
add
add
flds
pop
push
push
clc
repnz
nop
cld
jae
add
add
xor
repnz
nop
cld
jae
add
or
js
add
jns
add
add
mov
call
inc
add
sbb
add
mov
test
call
nop
jmp
add
pop
clc
repnz
nop
cld
jae
out
fsts
jmp
push
clc
repnz
nop
cld
jae
test
push
add
aaa
add
ds
adc
ffreep
jmp
in
leave
nop
jmp
cmpsb
cmp
add
gs
pushl
clc
repnz
nop
cld
jae
mov
add
jmp
xlat
pop
clc
repnz
nop
cld
jae
add
jns
jb
add
push
jl
pushl
sar
repnz
nop
cld
jae
movsb
add
xchg
add
shl
push
mov
xchg
ret
add
out
add
jmp
add
pop
inc
add
movsb
add
loope
add
push
mov
xchg
ret
add
add
dec
pop
push
clc
repnz
nop
cld
jae
push
add
mov
or
xorb
leave
sub
nop
jmp
or
add
cmp
fists
push
mov
leave
nop
jmp
add
add
add
out
cwtl
rorl
in
leave
nop
jmp
add
popl
add
roll
sti
nop
push
mov
leave
nop
jmp
add
xchg
dec
mov
clc
repnz
nop
cld
jae
pop
sbb
mov
and
mov
clc
repnz
nop
cld
jae
add
add
in
leave
nop
jmp
jns
flds
loope
add
loope
push
sub
nop
jmp
movsb
mov
rcll
repnz
nop
cld
jae
add
mov
adcb
push
push
mov
xchg
ret
test
add
or
push
xchg
add
add
repnz
nop
cld
jae
mov
test
mov
leave
nop
jmp
sbb
push
mov
test
rorl
leave
nop
jmp
jmp
mov
adc
nop
cld
jae
pop
add
add
pop
push
mov
xchg
ret
add
out
xor
sbb
repnz
nop
push
mov
leave
nop
jmp
add
out
jb
cmc
add
push
data16
add
cs
rolb
xor
add
repnz
nop
cld
jae
popl
add
xchg
add
clc
repnz
nop
cld
jae
sbb
or
rep
push
mov
xchg
ret
sbb
add
mov
push
mov
xchg
ret
out
mov
mov
mov
jecxz
push
mov
leave
nop
jmp
cmc
or
add
call
cld
jae
les
add
jecxz
clc
repnz
nop
cld
jae
add
mov
mov
xor
clc
repnz
nop
cld
jae
push
add
add
and
add
pusha
ss
jne
clc
repnz
nop
cld
jae
add
add
add
popl
clc
repnz
nop
cld
jae
fs
je
cmp
xlat
call
nop
jmp
add
add
mov
clc
repnz
nop
cld
jae
or
jmp
test
lret
clc
repnz
nop
cld
jae
push
add
repnz
lret
call
clc
repnz
nop
cld
jae
add
add
cld
clc
repnz
nop
cld
jae
add
test
mov
leave
nop
jmp
cmp
flds
add
repnz
nop
cld
jae
mov
add
add
popa
dec
nop
push
mov
leave
nop
jmp
and
cmpsb
add
flds
mov
cli
dec
pop
push
mov
xchg
ret
flds
add
test
out
popa
clc
repnz
nop
cld
jae
add
mov
test
pusha
and
clc
repnz
nop
cld
jae
push
les
and
and
mov
repnz
nop
cld
jae
add
adc
cmpsb
add
dec
xchg
lret
mov
nop
nop
cld
jae
stos
add
pop
mov
push
add
inc
adc
repnz
nop
cld
jae
stos
loope
push
sbb
test
nop
push
mov
leave
nop
jmp
add
or
pop
add
clc
repnz
nop
cld
jae
add
in
call
jmp
incl
xor
add
repnz
mov
add
or
mov
nop
nop
cld
jae
add
pop
add
sub
repnz
nop
cld
jae
add
add
mov
fs
xor
push
mov
xchg
ret
inc
add
cmp
mov
inc
add
mov
test
add
inc
fld1
clc
repnz
nop
cld
jae
loope
add
mov
inc
shrl
add
cmp
add
push
mov
leave
nop
jmp
les
add
cmp
push
sahf
push
je
clc
repnz
nop
cld
jae
add
repnz
nop
cld
jae
add
sbb
test
add
cmpl
leave
nop
jmp
add
push
sbb
cmp
out
mov
clc
repnz
nop
cld
jae
add
sub
mov
sbb
push
mov
xchg
ret
les
xor
add
push
mov
xchg
ret
push
xor
add
add
push
add
mov
mov
leave
nop
jmp
jb
push
add
nop
add
mov
clc
repnz
nop
cld
jae
nop
add
sbb
loopne
rol
clc
repnz
nop
cld
jae
sbb
nop
cmpsb
pop
jmp
pop
nop
push
mov
leave
nop
jmp
aas
add
xchg
mov
loopne
lods
andb
stos
push
mov
xchg
ret
add
test
add
sbb
ret
clc
repnz
nop
cld
jae
add
inc
xchg
xchg
adc
nop
nop
cld
jae
xchg
or
les
mov
add
push
clc
repnz
nop
cld
jae
les
fld
aaa
xchg
clc
repnz
nop
cld
jae
testl
mov
nop
push
mov
leave
nop
jmp
int3
jbe
cli
xchg
loopne
add
push
mov
xchg
ret
or
pop
push
push
mov
xchg
ret
cmpsb
push
mov
or
add
rclb
nop
jmp
sbb
xor
add
repnz
nop
cld
jae
sbb
jmp
add
xor
mov
leave
nop
jmp
add
push
add
add
repnz
nop
cld
jae
add
repnz
mov
stos
nop
push
mov
leave
nop
jmp
xchg
jb
test
out
mov
aaa
rep
nop
push
mov
leave
nop
jmp
pop
cmp
pop
add
add
sub
mov
inc
add
pop
add
xchg
clc
repnz
nop
cld
jae
add
aaa
pop
push
mov
mov
cli
adc
lods
add
lods
pushf
and
test
je
add
repnz
nop
cld
jae
adc
clc
repnz
nop
cld
jae
cmp
repnz
inc
nop
dec
push
push
mov
xchg
ret
mov
sbb
sbb
nop
nop
cld
jae
mul
add
dec
pop
nop
push
mov
leave
nop
jmp
adc
add
xchg
push
push
mov
xchg
ret
adc
add
mov
and
pop
mov
clc
repnz
nop
cld
jae
and
clc
repnz
nop
cld
jae
add
push
add
test
sbb
cmc
push
clc
repnz
nop
cld
jae
pop
add
pop
pop
add
add
fld1
push
mov
xchg
ret
add
add
bound
nop
cld
jae
add
add
inc
jmp
add
add
add
add
adc
add
pop
add
clc
repnz
nop
cld
jae
aaa
cli
add
or
mov
cmp
ret
cmp
mov
pushf
flds
cmp
push
mov
repnz
nop
cld
jae
mov
movsb
add
and
add
clc
repnz
nop
cld
jae
fs
add
nop
push
mov
leave
nop
jmp
jb
add
es
mov
andb
nop
cld
jae
add
pop
add
mov
and
push
mov
leave
nop
jmp
add
nop
testl
clc
repnz
nop
cld
jae
cmp
jns
pop
test
aas
nop
push
mov
leave
nop
jmp
add
add
testl
mov
repnz
nop
cld
jae
sbb
add
loope
inc
push
mov
xchg
ret
add
push
pop
xchg
add
out
scas
mov
push
mov
xchg
ret
flds
add
cmp
pop
mov
pusha
inc
outsb
mov
pop
add
clc
repnz
nop
cld
jae
aas
pushf
cli
stos
add
fiaddl
out
add
clc
repnz
nop
cld
jae
pop
test
pusha
sbb
es
mov
nop
push
mov
leave
nop
jmp
add
add
xor
add
dec
mov
and
and
repnz
nop
cld
jae
add
push
cmpsb
or
clc
repnz
nop
cld
jae
add
loope
xchg
xchg
clc
repnz
nop
cld
jae
cmpsb
add
mov
sbb
and
add
xor
pusha
shlb
loopne
sbb
in
leave
nop
jmp
push
sbb
add
jb
mov
xor
push
mov
xchg
ret
add
add
add
add
jp
dec
mov
mov
loopne
cmp
nop
nop
cld
jae
mov
xor
mov
and
repnz
nop
cld
jae
add
roll
sbb
inc
add
mov
add
stos
add
clc
repnz
nop
cld
jae
push
sbb
jno
rclb
jmp
mov
add
add
clc
repnz
nop
cld
jae
or
sbb
nop
nop
cld
jae
out
out
add
jb
or
and
mov
xchg
ret
add
scas
add
aas
ja
add
leave
je
add
mov
movsb
test
repnz
nop
cld
jae
add
mov
add
pusha
cmpsl
add
nop
push
mov
leave
nop
jmp
pop
add
psubb
nop
nop
cld
jae
or
scas
add
dec
int
clc
repnz
nop
cld
jae
add
inc
pusha
je
movzwl
clc
repnz
nop
cld
jae
idivl
mov
ds
add
clc
repnz
nop
cld
jae
add
pushf
push
add
lods
jo
add
sbb
aaa
add
push
push
mov
xchg
ret
xchg
add
mov
pusha
loope
clc
repnz
nop
cld
jae
cli
cmp
add
pushl
nop
push
mov
leave
nop
jmp
pop
add
pop
clc
repnz
nop
cld
jae
jbe
add
je
clc
repnz
nop
cld
jae
add
add
jb
clc
repnz
nop
cld
jae
add
sbb
andb
add
clc
repnz
nop
cld
jae
jmp
add
add
clc
repnz
nop
cld
jae
scas
cmp
push
add
adc
pop
pop
inc
add
add
blcs
jle
clc
repnz
nop
cld
jae
add
add
add
push
mov
xchg
ret
push
test
mov
push
mov
xchg
ret
add
add
cmp
in
mov
daa
add
test
add
add
ficompl
pop
loope
jae
mov
pop
push
inc
test
aas
add
add
adc
stos
cltd
cmp
rcl
push
adc
and
andb
and
adc
js
test
mov
addb
imul
loop
ds
mov
call
ret
add
int3
jo
cmp
add
es
pusha
cmc
xchg
cwtl
and
loopne
pusha
pusha
mov
and
mov
sahf
jb
and
pusha
pop
or
mov
lods
sub
cmpsl
xchg
dec
mov
add
mov
mov
mov
out
and
cmp
lahf
stos
shl
xchg
xchg
scas
and
xchg
cmp
ja
incl
mov
cmovae
add
add
cmp
jnp
jo
and
mov
cmp
cwtl
inc
push
jns
rol
jecxz
sti
aad
stc
cmp
mov
or
and
xor
mov
rorl
loopne
idivb
es
or
add
stos
and
into
or
shl
add
pusha
mov
mov
inc
pop
mov
mov
sbb
cmpsl
and
rorb
mov
inc
test
rol
stc
add
cmp
movsb
mov
mov
loopne
dec
negl
fsubs
pop
xchg
push
add
inc
jmp
outsl
xor
inc
inc
pop
jl
cmp
subl
mov
stos
loopne
pop
out
out
je
dec
jbe
orl
test
add
and
pop
or
leave
in
mov
lock
inc
out
int
sbb
int
xor
push
test
ss
sbb
mov
loopne
mov
idiv
jmp
jecxz
push
rolb
xor
scas
ds
out
mov
imul
mov
add
inc
mov
loopne
add
push
mov
shlb
mov
mov
sbb
shlb
aam
sbb
divl
mov
jecxz
mov
stos
jno
sub
inc
or
jle
lods
in
mov
pusha
movsb
addb
inc
adcb
daa
xchg
add
add
and
inc
arpl
mov
jo
mov
mov
inc
repnz
mov
pusha
push
mov
loopne
inc
bound
mov
lods
loopne
cli
and
inc
mov
aam
cmp
iret
fmull
inc
xchg
add
and
cmpsl
adc
sahf
xor
test
cwtl
push
gs
xchg
push
ljmp
xor
push
mov
scas
mov
add
dec
in
push
fs
pop
cmp
add
jnp
outsb
gs
sub
inc
adc
add
loopne
loopne
push
addb
add
in
repz
mov
pop
xlat
nop
xor
sub
and
and
pop
mov
mov
xchg
call
push
mov
pop
mov
cld
push
enter
mov
cmp
es
rcrb
fisubs
push
add
jmp
xor
int3
aad
lahf
pop
xlat
aad
add
pcmpgtw
ret
mov
mov
popa
jbe
lods
loope
sahf
sub
loopne
ret
sub
rcrb
sbb
mov
sub
pusha
rcrb
push
mov
insb
popw
push
ljmp
test
add
inc
ss
add
mov
mov
arpl
inc
and
sti
fnstcw
xchg
daa
call
add
addr16
cmp
jge
ret
xor
inc
fdivrs
mov
add
and
inc
das
mov
pusha
sbb
daa
cld
xchg
lea
inc
rolb
xchg
jbe
xor
negb
loopne
data16
daa
fadds
add
rolb
xor
loopne,pn
and
pusha
mov
mov
xchg
mov
add
adc
push
add
cwtl
pop
inc
stos
mov
mov
scas
cmpsl
add
mov
mov
stc
pop
xchg
insl
adc
repz
xchg
test
hlt
ficoms
sub
rcrb
addb
pop
mov
add
cmc
lret
xchg
mov
movsl
mov
inc
movsl
sbb
and
ds
das
mov
pop
add
or
movsl
lea
inc
push
xchg
mov
fldt
and
dec
xchg
loopne
scas
add
push
add
and
outsl
stc
xor
and
mov
lock
icebp
lret
frstor
pusha
inc
xchg
add
mov
subl
jno
cmp
pop
aas
adc
enter
push
or
mov
and
mov
ficomps
or
inc
and
loopne
inc
cmc
dec
or
loopne
shll
add
rorl
xchg
add
inc
jae
jnp
pop
sub
adc
add
jecxz
or
sarb
add
andb
rolb
test
loopne
xchg
dec
cmc
inc
xchg
and
add
mov
out
fisttpl
inc
push
inc
mov
mov
add
and
adc
jmp
lea
rclb
mov
mov
hlt
aas
dec
xchg
jle
fs
sub
inc
clc
mov
loopne
adc
mov
pusha
pusha
pop
and
rolb
sub
mov
cmp
je
loopne
mov
push
xchg
nop
mov
pop
je
stos
mov
test
rorb
inc
je
jne
stos
and
sbb
xchg
sbb
adc
cmp
icebp
mov
or
xchg
jno
lea
xor
lods
andb
mov
fwait
xor
add
mov
sahf
add
negb
sbb
and
xlat
dec
dec
testl
xor
and
dec
shlb
loopne
sti
movzbl
dec
push
mov
rorb
rolb
xlat
lcall
orb
in
out
popa
mov
xchg
stc
es
loopne
ljmp
fimull
lcall
pushf
push
and
mov
shl
push
lods
enter
pop
add
inc
leave
sbb
push
shlb
mov
inc
subb
dec
pop
mov
xchg
fdivs
xlat
push
add
xchg
stc
push
dec
mov
shrb
dec
xchg
and
push
popa
cmp
jae
leave
xor
ljmp
es
rclb
jmp
add
pop
ds
xor
in
and
xchg
addr16
push
mov
adc
or
pusha
pop
mov
and
ffreep
das
idiv
xchg
fdivrs
cmp
out
adc
pusha
rclb
clc
push
add
out
push
xchg
and
jo
andb
notl
loopne
js
in
sub
and
test
mov
dec
adc
shrb
ds
cld
movsl
stos
rolb
fwait
mov
das
in
movsl
adc
xchg
mov
push
add
andb
mov
fld
test
loopne
jp
or
scas
inc
pop
inc
shlb
sub
add
rolb
cli
adc
mov
loop
pop
and
add
mov
add
movsb
and
lock
adc
shlb
adc
or
loopne
inc
add
loope
lcall
aas
mov
jo
jmp
sahf
insb
dec
sub
inc
sahf
jns
inc
insb
and
push
cmp
jo
push
nop
test
or
adc
xlat
stc
adc
or
addb
push
adc
lock
mov
add
inc
jp
out
push
cld
xchg
aaa
fucomp
pop
cli
xor
inc
adc
cmp
adc
cmp
and
sbb
add
jae
mov
inc
inc
jbe
mov
jae
ret
fcoms
mov
iret
stos
pcmpeqb
fld
push
xchg
jnp
sub
rorb
mov
shl
loopne
lret
sti
push
leave
divl
sub
jnp
mov
mov
xchg
shrb
mov
mov
pushf
cmpsb
loopne
push
dec
mov
loopne
dec
bnd
add
dec
mov
add
add
add
push
cmc
loope
sub
mov
pusha
pop
cmpsb
rolb
and
clc
ljmp
loopne
test
inc
jnp
mov
loopne
lret
pusha
or
out
or
push
std
xor
adc
sub
loopne
into
bound
mov
pop
sub
loopne
add
loopne
pop
mov
inc
push
rcll
inc
vmread
and
rolb
cltd
das
cs
addb
addb
dec
xchg
mov
mov
mov
rolb
enter
popf
inc
pop
dec
outsb
std
and
out
andb
iret
jg
loopne
insb
rclb
pop
repz
mov
mov
and
jno
jecxz
sbb
jo
jo
and
sbb
and
test
xchg
pop
stc
fisttps
or
push
and
cld
ficompl
pop
xchg
xor
lcall
enter
xor
mov
dec
and
shr
cmpsb
and
enter
jge
xchg
add
sub
sarb
jns
inc
add
add
popa
sahf
xor
cmp
lahf
andb
out
leave
insb
mov
fstpl
in
cmp
xchg
fs
inc
in
loope
add
add
and
movsl
push
addr16
repz
push
bound
mov
mov
lcall
movsl
sahf
push
xor
push
scas
pusha
add
pop
mov
shll
jbe
mov
loopne
cmp
inc
inc
inc
pop
xchg
push
pop
push
addr16
stos
test
repnz
fbstp
push
inc
add
add
mov
iret
inc
or
and
add
and
loopne
ja
mov
sbb
js
add
js
ljmp
sbb
push
mov
out
fcom
icebp
movsl
int3
xorl
push
mov
xchg
ds
add
das
push
fldl
add
pop
fcoms
leave
add
in
push
or
sarb
xorl
shlb
aad
sbb
popf
andb
or
xchg
shlb
sub
mov
inc
and
mov
xchg
and
cmpsl
cmp
lds
cmpsl
sti
mov
fwait
push
jbe
jle
iret
push
inc
shl
jl
mov
jge
adc
outsb
jns
mov
mov
ja
out
xor
dec
cmp
popa
scas
and
arpl
jmp
jae
add
dec
mov
loope
inc
push
aaa
dec
inc
sub
mov
std
mov
shlb
and
mov
shll
sub
add
push
scas
loopne
inc
subl
inc
movsbl
mov
data16
dec
add
rolb
std
mov
mov
dec
loope
mov
xchg
dec
jno
mov
inc
ljmp
and
lret
sbb
daa
dec
pop
push
xor
ss
out
xchg
mov
stc
enter
pop
icebp
sar
scas
inc
pusha
jno
jle
out
sbb
and
hlt
fisubrl
cmp
xchg
lcall
xchg
ret
sub
and
repnz
add
and
jle
inc
mov
nop
sahf
in
andb
out
adc
out
mov
stos
inc
jnp
push
mov
inc
xorb
popf
push
and
clc
adc
inc
fbstp
pushf
loopne,pn
xchg
mov
pop
lret
rclb
leave
imul
shlb
adc
and
bound
add
test
pusha
scas
add
lret
jecxz
xchg
sbb
push
mov
pop
call
jp
arpl
dec
mov
adc
pop
push
fisubl
ja
fs
shll
dec
sub
mov
add
jge
pop
xor
push
inc
mov
loopne
adc
and
ret
repnz
mov
loopne
adc
pushf
mov
das
fldl
mov
insl
lods
jmp
int3
mov
shrb
in
dec
dec
lret
rolb
insl
xchg
mov
sti
std
jl
sbb
je
sub
and
mov
loope
andb
sub
and
pusha
or
pusha
rorb
sbb
jecxz
and
add
cmpsl
aam
cltd
mov
mov
test
and
rcrl
aam
nop
pop
loop
faddl
addb
push
pop
fisubs
cmp
aam
out
xchg
jp
arpl
movsb
inc
loopne
enter
xchg
dec
jnp
cmp
int3
jg
lret
scas
inc
and
cmp
pusha
mov
fsubl
stos
pop
adc
lock
mov
and
cmc
pop
or
into
inc
sub
shl
dec
pop
in
push
jge
xor
cmpsb
mov
push
sbbb
mov
push
cmp
inc
mov
mov
clc
push
mov
rolb
xlat
push
pushf
xor
aas
or
mov
movb
stos
lret
xor
ss
push
loopne
xor
inc
and
add
popf
jbe
rolb
mov
in
cli
add
inc
pushf
mov
adc
push
js
out
lods
loopne
lea
jne
mulb
js
mov
inc
fcmovnu
dec
ret
inc
nop
xor
mov
dec
dec
lods
and
mov
and
loopne
inc
dec
into
fwait
pop
bound
adc
loopne
jae
push
stos
or
leave
lret
loopne
insl
pop
mov
sbb
adc
shlb
pop
loopne
shrl
cmc
aas
popf
pusha
addl
pusha
out
or
inc
inc
out
call
pop
cmpsb
and
xor
popf
sub
out
adc
push
out
jbe
stc
andb
cmc
dec
mov
cmp
pusha
inc
in
popa
adc
xchg
and
roll
pop
sbb
repz
ss
pop
push
dec
out
xchg
in
test
cmp
lods
loopne
scas
rcll
mov
aas
ficoms
rolb
loopne
mov
out
add
loope
les
mov
lcall
loopne
cmp
push
rorb
std
sub
mov
clc
sbbl
jmp
loope
jb
es
add
test
add
inc
inc
js
jno
es
lods
and
adc
es
decl
mov
movl
inc
mov
scas
pusha
rcr
ljmp
scas
and
mov
add
shrb
push
xor
pusha
fwait
mov
mov
push
pop
add
push
inc
jp
mov
pusha
mov
push
scas
push
lock
in
test
orb
jle
fcoml
add
scas
sbb
imul
mov
mov
pop
addr16
movd
andb
sub
shlb
mov
mov
add
pusha
inc
and
lods
push
inc
push
stos
inc
dec
outsb
dec
repnz
cli
inc
test
inc
out
sbb
push
mov
sub
inc
int
pop
nop
cmp
add
push
pusha
and
popf
jg
sub
inc
mov
adc
inc
dec
rcrl
or
orb
adc
jnp
lret
sbb
pop
nop
out
mov
cmp
in
sub
rcr
gs
dec
das
mov
popa
popf
adc
loopne
fs
loop
addb
inc
mov
or
shlb
inc
mov
push
inc
cmp
andb
mov
push
loopne
in
iret
aas
push
adc
mov
repz
punpckhbw
lods
out
xor
pop
or
jno
cmp
add
mov
lahf
push
add
pop
cmpsl
lret
pushf
jbe
mov
mov
or
and
push
loop
adc
fldenv
and
adc
loopne
cmp
in
pusha
loopne
hlt
xchg
jnp
or
add
jnp
ret
inc
and
loopne
aaa
in
sub
and
push
loopne
lock
nop
inc
ret
fucomp
add
cs
mov
or
popa
xor
add
mov
jg
sbb
rcl
dec
inc
faddp
mov
loopne
jbe
adc
and
lods
add
rol
add
pusha
push
addb
sub
fnstsw
enter
push
inc
jecxz
bound
in
inc
pop
pop
mov
shlb
stos
and
jmp
fsubrp
jae
popf
popa
je
and
sub
mov
and
jns
inc
and
mov
sub
inc
in
loop
sub
jp
sub
sub
insl
sub
and
andb
xchg
or
aaa
lcall
loopne
mov
and
sahf
push
xchg
push
rcr
sub
shlb
sub
and
add
insb
xor
and
sbb
insl
dec
and
mov
mov
xchg
adc
leave
mov
das
ret
mov
pusha
inc
jge
mov
movsl
loopne
and
mov
loopne
in
and
add
pusha
sub
das
mov
pusha
add
and
or
inc
and
lret
sub
mov
adc
or
pusha
sub
mov
inc
ja
jae
repnz
iret
ja
ret
mov
pop
in
push
fiaddl
shlb
movsl
mov
and
cmpsl
loop
loope
and
fists
and
add
adcb
sbb
and
call
rolb
sti
mov
mov
mov
and
mov
mov
call
pop
mov
add
aaa
xchg
inc
dec
lds
int3
cmpsb
andb
rcl
mov
shlb
add
inc
add
adc
ja
cmp
ja
xchg
testl
andb
lret
mov
add
xlat
or
lahf
mov
iret
vmwrite
cmc
dec
sbb
scas
int
and
ja
mov
outsb
jnp
hlt
ret
mov
sub
negl
mov
mov
cmpsl
or
sub
adc
outsb
arpl
xor
xchg
xchg
dec
sbbl
mov
sahf
dec
mov
pop
daa
xchg
inc
fstps
cltd
mov
cmp
pusha
shrb
loopne
negl
and
cltd
cmp
leave
xchg
dec
imul
inc
mov
or
jmp
sub
add
sub
loop
and
sub
add
add
shrb
inc
sarb
mov
bound
subl
aam
adc
in
addr16
push
add
adc
movsb
pusha
and
mov
mov
and
fdivrs
arpl
cmpsb
inc
mov
das
imul
aas
rolb
int3
cld
pop
test
push
add
jbe
nop
push
movsl
inc
sbb
adc
fidivl
imul
jne
gs
sbb
mov
cltd
xchg
jle
out
loopne
mov
loopne
xchg
cltd
mov
aaa
inc
ficoms
lcall
pop
jmp
pop
lahf
and
inc
rorb
and
push
jl
out
push
call
cmp
imul
xor
jb
ds
pop
ds
mov
icebp
mov
mov
sub
call
icebp
movsb
add
aas
lcall
inc
int3
xor
shlb
cli
mov
call
mov
imul
pusha
mov
inc
push
mov
repnz
and
rolb
sub
xchg
aaa
popf
sahf
mov
iret
aaa
mov
mov
les
push
fstpl
add
loop
shrb
ss
test
fstps
and
enter
add
cwtl
or
pusha
and
cld
and
lret
adc
movsl
pop
push
pcmpgtb
iret
in
jo
mov
cmp
adc
mov
data16
push
pusha
pusha
enter
addb
inc
mov
andb
cmp
adc
unpckhps
pop
aad
imul
cwtl
and
out
jge
mov
sub
xor
add
add
pop
repnz
mov
mov
ficoms
insl
jnp
fsubl
mov
stc
mov
mov
fdivp
popf
and
pushf
outsb
or
shrb
cmp
inc
xchg
scas
fidivrl
inc
dec
pop
xor
cmp
mov
xchg
xor
fwait
xlat
out
pop
andl
sahf
addl
add
std
lds
mov
loopne
mov
xorb
and
mov
fsubrl
pop
icebp
jns
mov
pusha
aaa
cmpsb
pusha
loopne
pop
pop
jae
lods
adc
shl
and
inc
inc
dec
jmp
push
mov
gs
mov
andb
mov
dec
fwait
test
mov
shlb
cmp
inc
lea
clc
outsb
and
loopne
mov
pop
xchg
add
pusha
push
hlt
lock
movsl
mov
push
outsb
lods
addb
xchg
sub
jge
inc
pop
out
sbb
mov
mov
inc
mov
mov
rol
cmpsl
jno
pop
adc
push
dec
sub
cmc
or
and
inc
xchg
sarb
sub
xchg
push
ja
ret
jmp
or
andb
push
adc
hlt
sub
mov
mov
nop
sahf
sbb
andb
pusha
addr16
addb
pop
sbb
sub
rol
and
dec
add
les
inc
and
pusha
sub
sbbb
sbb
pusha
mov
shrb
push
pusha
and
andb
add
loopne
shlb
push
imul
andb
cmp
jmp
loope
mov
pusha
and
mov
fdivl
pusha
mov
mov
aam
pop
mov
or
in
sti
or
inc
adc
pusha
add
add
bound
sub
ret
jmp
pusha
xor
loopne,pn
pop
loope
mov
jne
pop
add
shl
addr16
test
mov
call
add
callw
loopne
dec
test
cmpsb
and
ja
pop
pop
fmull
and
das
shl
loop
pushf
xchg
add
inc
cwtl
pop
or
or
sarb
xor
movsb
mov
andb
mov
dec
popa
in
dec
and
loopne
scas
cli
or
cwtl
cli
rclb
mov
ret
lret
mov
loopne
ret
shr
int
inc
jbe
fcomip
shlb
pop
push
push
inc
adc
mov
andb
push
mov
adc
pop
dec
fimull
and
and
inc
mov
ja
xchg
xchg
insb
jmp
and
inc
cmpb
pop
pop
pop
cmpsl
ret
and
add
pop
aaa
les
dec
push
rcl
popa
xchg
cld
fisttps
add
imul
push
lock
inc
shrl
leave
cmp
and
dec
insl
or
fdivl
and
andb
sub
inc
es
loopne
add
mov
and
lock
jno
test
sub
rolb
test
loopne
dec
repnz
mov
push
out
push
sbb
mov
imul
test
ret
or
xor
dec
mov
adc
out
jae
adc
lods
addb
adc
lahf
fidivs
sub
lahf
repnz
loopne,pn
pop
push
mov
add
mov
and
in
add
das
cmpsl
stc
cmp
arpl
xor
enter
add
sti
int
dec
and
shr
scas
dec
push
jecxz
sub
orb
clc
dec
std
jb
jecxz
outsb
push
inc
mov
aam
mov
xchg
aam
add
and
inc
subb
xor
shl
xchg
push
cmp
sub
lock
jae
mov
inc
clc
inc
jns
aas
mov
sar
push
lock
lcall
aam
and
loopne
and
adc
addb
cltd
bound
sub
inc
pushf
inc
in
ret
mov
mov
rcrb
pop
ja
insl
mov
loop
mov
dec
cmp
push
add
pop
cmpsl
push
mov
mov
sub
cmp
out
adc
mov
ret
sbb
xlat
inc
mov
jp
push
shl
sahf
push
pusha
andb
icebp
xchg
ss
stos
loopne
pop
clc
iret
sbb
xchg
push
or
jb
imul
and
sbb
pop
aad
inc
and
push
shl
addb
sbb
dec
insl
mov
cltd
mov
pop
shll
lcall
add
and
imul
mov
pop
jg
fisubl
pusha
add
mov
xlat
cmpsb
and
int3
mov
mov
xchg
loopne
pop
push
out
leave
dec
dec
or
jo
in
push
andb
test
inc
aas
fstp
iret
cmc
jle
sbb
addb
or
and
push
dec
dec
je
inc
add
inc
add
out
lods
inc
mov
loope
fsubr
fsubp
das
xor
xor
pop
sub
sahf
xor
xchg
repnz
movsb
shl
ret
rcrb
mov
andl
and
mov
and
and
jb
pusha
shrb
dec
shrb
adc
fisttpll
jmp
insl
je
jp
andb
cmp
sti
shll
jns
lahf
ja
mov
push
mov
push
movsb
shlb
fdivl
cmp
or
pusha
jns
sbb
repz
mov
sub
pusha
and
jnp
mov
xor
or
shl
pop
dec
push
and
sbb
loopne
imulb
daa
jmp
and
jo
jl
and
jmp
xchg
shrl
shlb
outsl
lret
jns
xlat
mov
pop
xor
stc
inc
stc
mov
cltd
mov
cwtl
shlb
loopne
mov
pusha
rorb
aaa
push
punpcklbw
inc
jnp
je
or
mov
fucom
adc
mov
mov
push
lret
adc
dec
enter
jne
adc
add
inc
inc
mov
dec
adc
xchg
xor
adc
mov
popf
aad
inc
call
add
mov
scas
and
leave
insl
lret
mov
and
add
aaa
stos
inc
jne
sbb
cmp
nop
sbb
andb
pop
inc
das
push
mov
or
sbb
or
dec
mov
inc
xorb
lcall
and
and
inc
outsb
cmpsb
inc
and
icebp
outsb
jmp
scas
loopne
and
rclb
add
cmp
push
add
lds
shlb
aas
push
xlat
xor
pop
mov
aaa
sahf
imul
aad
inc
in
daa
jae
addb
mov
and
xor
cmp
jge
fldt
jns
rorl
push
jecxz
lock
movsb
loopne
xor
fwait
out
push
jae
cltd
add
loopne
xlat
inc
insb
es
add
fsubrl
in
rolb
xchg
lds
jbe
imul
xchg
push
out
ja
dec
xor
add
pop
inc
adc
cli
mov
subl
movsl
mov
clc
xor
shlb
ljmp
loop
addb
and
and
xchg
cltd
jo
lods
mov
rclb
inc
xlat
and
shlb
es
aad
int3
cltd
inc
sub
ret
mov
pusha
mov
mov
fdivrl
inc
iret
or
shl
sbb
inc
mov
shrl
add
es
xor
sbb
mov
jle
data16
sub
loopne
aas
sbb
lods
add
rol
add
sub
int3
ucomiss
cld
shl
xlat
in
mov
pusha
test
rclb
cmpsl
and
cmp
add
mov
cmc
xor
sub
mov
push
in
lret
mov
roll
add
cmpsb
pusha
shrb
mov
sub
sub
lods
rolb
sub
sub
fcoms
shr
jns
movsb
add
pusha
push
inc
or
inc
add
mov
add
adcb
ljmp
shrb
lret
sbb
inc
jnp
or
shrb
push
arpl
push
pop
pop
add
and
inc
das
sbb
pop
cmc
fsubrs
mov
je
xor
and
inc
ja
iret
sbb
push
xchg
cld
mov
aad
pop
int3
jle
fdivl
movsl
mov
fmull
jecxz
stc
lods
and
dec
dec
pop
aaa
test
sbbl
add
cmpb
pop
rcl
sbb
loopne
movsl
in
xchg
xlat
xor
aad
fsubl
and
mov
sub
inc
mov
out
xlat
cmp
ja
les
negl
lahf
andl
and
and
loopne
ficompl
mov
push
xor
add
loope
mov
fists
dec
cltd
cli
loope
scas
mov
sbb
shl
mov
push
loopne
pusha
dec
dec
test
bound
nop
comiss
shl
push
xor
xor
dec
jmp
fdivrl
inc
aam
pusha
clc
cmp
lds
jnp
mov
stos
icebp
imul
cmovp
xor
enter
shr
pop
popf
fdivrl
mov
sub
loopne
test
test
xor
incb
mov
jb
jl
iret
jg
xor
and
and
push
and
loopne
adc
sbb
adc
inc
pushf
add
pop
in
stos
push
dec
icebp
popa
cmpsb
mov
inc
mov
fdivr
mov
mov
xor
xchg
cmp
xor
pusha
pusha
data16
andb
lahf
sbb
push
rolb
iret
testl
add
add
je
out
out
or
pusha
call
andb
add
cwtl
cmp
jmp
push
and
mov
pushf
stos
pusha
xorb
add
xchg
int
andb
loop
fs
into
out
sub
inc
and
dec
pop
mov
inc
nop
insb
mov
sub
inc
repz
repnz
dec
in
std
mov
and
pop
mov
jmp
cmc
cmpsl
outsl
stos
push
addb
mov
add
add
or
mov
andb
inc
int
add
cmp
ret
mov
rolb
gs
cltd
enter
xchg
dec
mov
cltd
mov
nop
mov
loopne
pusha
add
jns
lods
loopne
in
mov
add
inc
mov
dec
inc
sub
shlb
adc
cmp
andb
add
fiadds
xor
pop
jne
jmp
sahf
xchg
cltd
test
ljmp
inc
shl
dec
mov
inc
lock
cbtw
out
and
repnz
rcll
sarl
sub
mov
and
add
pshufw
leave
mov
ss
mov
mov
or
xchg
dec
ja
pop
hlt
or
fimuls
xchg
adc
xor
push
scas
sub
inc
stos
inc
mov
and
push
mov
aad
pushf
or
add
test
push
test
loopne
add
and
loopne
cmp
mov
dec
cmp
leave
stos
andb
je
int
arpl
nop
dec
mov
shl
bound
addl
add
jno
xchg
lods
ret
clc
or
cmpb
fbstp
mov
and
xchg
xchg
mov
test
mov
push
mov
into
dec
mov
and
ret
aam
push
loopne
push
out
out
or
inc
andb
cmp
xchg
repnz
pop
xor
jb
mov
in
int
pop
iret
pop
in
enter
popa
pop
sbb
or
aad
inc
sarl
pop
mov
mov
and
mov
test
pusha
fwait
mov
push
ljmp
jbe
push
xchg
adc
add
adc
mov
movsl
cmpsb
add
cmp
and
pop
push
cld
out
stos
add
cmp
sub
shlb
jb
add
stos
inc
inc
scas
andb
or
and
jne
test
xchg
inc
dec
lahf
sub
subb
jmp
cmp
shlb
mov
pop
pop
fsubrs
xchg
inc
lock
xlat
les
add
nop
adc
ja
add
jp
adc
btr
add
pusha
imul
mov
subl
cli
rcrb
test
or
pop
xor
push
rolb
dec
jge
mov
mov
stos
addb
cmp
out
sub
pusha
into
cwtl
mov
nop
mov
insb
add
pusha
pusha
mov
subl
pusha
push
push
push
mov
adc
in
xor
jp
stc
rcll
add
or
adcl
mov
xor
gs
dec
sub
xchg
sbb
rorb
loope
push
dec
es
add
inc
push
add
in
inc
fstpl
mov
addb
and
decl
lret
addb
cmp
gs
add
arpl
inc
xlat
dec
cmp
adc
xchg
inc
fwait
lret
xchg
sti
int3
into
leave
push
sbb
shlb
and
lret
mov
cwtl
idivb
shld
xchg
pop
or
shlb
out
or
mov
sub
loopne
mov
lret
shl
ja
mov
push
cmp
aam
cmp
xchg
sti
jmp
lods
inc
and
inc
pop
and
andb
add
andb
add
shlb
ja
cmp
stc
sub
mov
loopne
data16
xlat
gs
cmp
sbb
sbb
inc
std
in
icebp
loopne
mov
std
adc
jns
outsb
jmp
inc
mov
clc
xchg
and
mov
dec
dec
inc
int3
and
push
sti
test
sbb
jecxz
xor
jae
cmpsl
mov
adc
cmp
mov
cmp
cmc
cmpsb
add
pop
push
int3
push
push
sub
dec
imul
popa
xchg
loop
add
std
sub
pusha
pop
mov
rorl
adc
outsb
cmp
and
add
pop
xchg
cmp
sbb
mov
jmp
and
pusha
iret
addb
pop
dec
repz
add
cmp
adc
inc
inc
cld
mov
xchg
ja
push
insl
stc
xchg
stc
pop
rcrl
adc
push
icebp
test
add
pop
or
mov
pusha
imul
and
dec
xor
js
mov
pusha
push
and
loopne
stos
xor
outsl
push
mov
mov
rolb
insb
ja
leave
int
addr16
cmp
dec
dec
rorb
das
mov
into
daa
or
and
add
and
mov
mov
ret
add
inc
dec
inc
jp
adcl
pusha
adc
rcl
adc
mov
sbb
fdivrl
inc
out
sub
jle
xchg
cltd
loopne
cli
out
jbe
and
inc
cmp
leave
sbb
push
addb
sbb
mov
xor
mov
incl
jmp
xchg
add
xor
or
xchg
andb
jno
pop
jb
sbb
and
ret
test
and
adc
repz
loopne,pn
pop
repz
cmp
stos
aam
jo
push
pusha
shlb
aas
sub
loopne
sar
std
hlt
pop
test
jge
cltd
xor
and
mov
add
add
scas
pusha
and
insl
dec
je
sub
or
mov
xchg
add
rorb
imulb
xchg
add
pusha
leave
adc
cmp
mov
hlt
gs
jae
les
mov
inc
mov
fcomps
ficoms
outsb
mov
in
adc
dec
xor
rolb
add
mov
pop
enter
loopne
cmp
data16
cmc
mov
push
push
rolb
shl
jge
or
out
push
sbb
adc
aas
and
loopne
sub
add
adc
jae
stos
ja
jno
ljmp
in
cltd
pop
adc
sbb
jmp
insl
jecxz
andb
inc
inc
xor
sbb
or
sbb
stos
and
pop
jecxz
adc
inc
mov
stos
pusha
inc
pop
inc
pop
mov
mov
loopne
js
pop
into
aad
pop
fisubl
mov
mov
cmpsb
and
lret
mov
mov
and
sbbl
jmp
mov
add
push
adc
pop
mov
push
and
loope
int3
cmpsl
push
incl
jbe
add
cmpsl
xor
and
and
mov
push
cmpsl
stos
scas
and
mov
pop
das
jmp
ss
inc
lds
rcll
adc
jb
loopne
pop
mov
rcrb
or
inc
mov
out
inc
and
mov
loopne
testb
xchg
add
and
loopne
push
cmp
push
sti
in
mov
and
ja
mov
shlb
les
andb
push
push
shlb
or
mov
pusha
rolb
subb
and
jne
jae
dec
xor
add
push
pusha
loopne
and
inc
dec
in
jmp
dec
loope
scas
dec
sbb
insl
rolb
xor
sbb
leave
fs
mov
pop
cld
adc
cmp
fimull
je
sbbl
jae
roll
mov
inc
xor
data16
movsl
cld
arpl
fdiv
jle
sahf
dec
push
divl
enter
jge
jne
gs
jecxz
loopne
jg
sbb
mov
jne
out
int3
pop
arpl
mov
andl
sahf
adc
nop
iret
sbb
mov
scas
mov
rol
pop
dec
sbb
in
cmp
lds
sbb
inc
test
inc
loop
xchg
xor
add
xor
inc
dec
cld
adc
add
mov
push
mov
mov
loopne
sub
jmp
mov
dec
add
loopne
mov
inc
adc
mov
pusha
insb
cs
and
cld
cli
sub
shll
lock
call
addb
dec
and
andb
inc
repnz
aas
pop
sbb
hlt
jno
push
cmp
sbb
adc
inc
inc
ss
mov
dec
add
mov
pusha
loope
imul
bound
pop
pusha
mov
daa
movsb
add
shlb
divl
lea
sbb
mov
mov
nop
jmp
loopne
inc
jmp
out
imul
dec
mov
jbe
andb
lahf
lahf
adc
lds
mov
xchg
jne
add
mov
push
pop
jne
xchg
sbb
sbb
subl
mov
pop
push
adc
jne
dec
stc
divb
hlt
inc
pop
clc
in
lea
pusha
mov
andb
mov
insl
in
adc
xor
lods
mov
and
and
mov
jo
sub
and
push
sarb
and
fldcw
addb
outsb
sti
dec
sbb
inc
sub
loopne
in
mov
add
cltd
andb
imul
pop
dec
clc
lret
inc
jbe
cmp
inc
test
ds
lods
mov
inc
rcr
jnp
lcall
sbbb
and
jb
leave
xchg
nop
insb
or
push
and
je
jp
shlb
loopne
out
jnp
sbb
xor
loopne
inc
cmp
push
fcom
lock
popa
xchg
push
mov
mov
div
mov
push
add
xchg
rclb
add
sbb
jmp
js
pop
dec
imulb
cmp
mov
xor
out
sbb
daa
add
or
loopne
loopne
mov
addb
lea
int
call
adc
or
sbb
mov
clc
mov
loopne
mov
pusha
pop
mov
pop
call
or
movsb
mov
or
loopne
dec
pop
pop
push
inc
mov
test
inc
add
movsb
mov
inc
enter
aas
sub
mov
idiv
jl
xor
cmpsl
mov
pushf
pop
sarb
lock
mov
dec
gs
bound
sbb
cmp
and
rolb
mov
adc
and
out
addb
mov
or
jns
fimull
loopne
int
les
cmc
add
pusha
jnp
xchg
xor
rep
andb
mov
xchg
mov
ljmp
or
pop
daa
sbb
rcrb
clc
xor
out
push
insb
xchg
hlt
pop
jnp
pop
mov
sarb
rolb
mov
inc
fwait
dec
mov
jnp
fsubrl
xchg
and
and
sub
push
sti
push
jl
jecxz
in
jp
sbb
and
ss
push
repnz
loopne
shl
sbb
pop
mov
loop
mov
outsl
cwtl
shl
cwtl
inc
lods
loopne
mov
dec
pop
mov
lods
sub
mov
or
pusha
jmp
pushf
loopne
xchg
cltd
loop
sti
mov
test
loopne
or
and
and
in
mov
push
and
addb
add
sbb
pop
sub
jnp
sarl
loopne
mov
repnz
aas
pop
fstl
mov
pop
andb
shr
pop
xor
loopne
add
mov
and
jmp
push
loopne
ds
into
inc
arpl
je
popf
iret
jbe
std
repz
cmp
push
mov
outsb
sub
loopne
pusha
loopne
ljmp
jnp
mov
loopne
popf
shlb
mov
addb
jecxz
mov
addb
loopne
mov
addb
rclb
mov
add
xchg
inc
icebp
mov
fsts
movsl
inc
xchg
cmp
rorl
fidivrl
and
mov
in
lods
push
cltd
xor
xor
pop
leave
push
pusha
jp
stos
jl
stc
lcall
jno
adc
xor
rcrb
sbb
imul
mov
xchg
add
mov
shlb
stos
and
jnp
in
mov
rolb
inc
add
sub
pusha
mov
add
loopne
mov
insl
pop
push
enter
int3
xor
sahf
jo
sbb
mov
ret
jmp
outsl
sub
inc
xor
xchg
cwtl
lods
pusha
and
hlt
call
jmp
mov
sub
or
ljmp
roll
mov
inc
add
nop
jne
mov
loopne
mov
insb
lds
andb
add
repnz
rcl
and
ret
std
mov
mov
andb
idivl
call
xlat
scas
hlt
outsb
and
jecxz
rolb
iret
popf
in
pushf
leave
cmpsb
loopne
sahf
mov
test
popa
xchg
xorb
add
mov
in
out
repz
inc
mov
jo
inc
loopne
or
add
cmp
ret
dec
dec
cmp
fnstcw
icebp
jbe
lahf
repz
mov
cmp
sub
adc
fstl
lods
add
ret
push
jns
out
mov
pusha
mov
pusha
insb
sbb
iret
outsl
mov
jge
inc
rclb
andl
mov
cmp
xor
lea
inc
jno
sarb
mov
mov
loopne
sbb
and
pusha
or
cmp
dec
test
inc
loop
frstor
loopne
aam
sbb
xchg
aas
sub
jns
sbb
cmc
and
add
notb
imul
mov
and
dec
aaa
cwtl
adc
jb
shr
hlt
lret
loopne
or
fcom
test
adc
add
mov
outsl
push
rcl
mov
and
mov
xor
sbb
sbb
add
add
cmp
sbb
in
adc
adc
loopne
sub
rdmsr
or
xchg
adc
mov
add
adc
cmpsb
add
lods
pusha
shl
dec
push
testb
rcr
fistl
add
mov
fbstp
fistpll
fadds
mov
sarb
jle
je
xchg
add
mov
add
sar
add
add
sbb
push
loopne
arpl
stos
addb
mov
and
mov
aam
sub
mov
gs
pushf
stos
loopne
and
andb
cmpsl
leave
sub
pop
inc
shl
lret
or
popa
nop
ja
gs
jmp
das
shl
rolb
shll
std
inc
xor
mov
loopne
imul
push
mov
out
pusha
jmp
and
fistpl
ret
arpl
mov
imul
mov
push
insl
sub
js
mov
sbb
rolb
test
jae
insl
pop
pop
push
and
daa
arpl
lcall
xchg
enter
pusha
pop
scas
pusha
add
pop
inc
ss
inc
imul
addb
rolb
int3
sub
dec
cmp
andb
js
cmp
loopne
inc
inc
sahf
and
mov
lea
out
jecxz
xchg
cmp
lods
xchg
nop
sub
mov
in
pop
xor
mov
comiss
fidivs
std
sbb
out
repnz
frstor
sti
sub
pop
cmp
dec
inc
clc
dec
xor
and
inc
push
inc
insb
andb
lcall
lret
pusha
inc
and
jno
mov
pop
and
pusha
lods
add
sub
addb
loopne,pn
and
in
mov
arpl
xchg
int
inc
in
xchg
inc
dec
adc
loopne
sbb
inc
adc
xchg
push
into
add
add
pushf
pop
pop
xchg
mov
jp
aam
mov
xor
jg
add
push
mov
in
aad
or
and
adcl
and
dec
enter
pushf
int3
fcoml
mov
mov
add
scas
sbb
cmp
loop
mov
sub
loopne
push
rol
add
add
pop
push
shl
inc
xor
std
dec
pop
repz
inc
jo
imul
cmc
cwtl
xchg
fldl
loopne
cmp
jno
iret
add
xor
and
in
out
mov
and
sbb
lahf
jp
in
add
mov
push
sub
movsl
addb
rorl
pop
inc
dec
adc
inc
bound
jg
clc
sbb
cmp
movsb
shlb
cmpb
jp
aam
sbb
jp
pop
xchg
pushf
bound
pushf
sarl
aad
wbinvd
rolb
dec
fnsave
pop
add
inc
jne
jne
add
lock
andb
adc
pusha
pop
fstps
gs
ret
inc
shlb
inc
mov
in
jb
je
fwait
popf
inc
mov
pusha
add
push
jne
dec
pop
jnp
ljmp
mov
pop
push
adc
loopne
test
movsl
mov
faddl
mov
dec
pop
inc
test
cmp
cmp
add
mov
or
mov
mov
cmc
test
addb
and
adc
push
inc
insb
jge
cmpsb
pusha
inc
adc
xchg
iret
push
xor
cmpsb
and
lods
and
dec
push
es
xlat
mov
adc
mov
and
lfs
sub
add
ret
andb
lds
mov
shrb
lcall
mov
mov
adc
mov
mov
test
pusha
in
jmp
insb
mov
int
lahf
mov
and
mov
inc
loopne
inc
lahf
rcll
test
mov
jae
cmc
cmp
add
in
push
sub
dec
jl
lock
lea
mulb
lret
xor
cmp
add
mov
inc
and
popf
je
push
dec
das
sti
call
lea
inc
insl
leave
cmpsb
rolb
andb
fimuls
jne
fld
mov
mov
cmpsl
or
jnp
ret
xlat
in
test
inc
dec
dec
pop
adc
push
stos
rolb
cmc
pop
mov
test
sbb
shlb
dec
mov
mov
outsb
or
or
shlb
mov
cwtl
imul
rolb
loopne
bound
ja
enter
cmp
push
mov
add
push
jg
xchg
mov
addb
out
clc
mov
xor
pop
mov
shlb
imul
cmpsl
daa
arpl
mov
in
lock
mov
push
shrb
out
shrl
and
lock
loopne
cmp
mov
xchg
mov
inc
or
je
adc
xor
std
jns
sbb
subb
inc
scas
sub
inc
je
xor
inc
mov
mov
ss
or
adc
xor
outsl
push
pop
push
and
pushf
mov
ljmp
adc
frstor
fs
push
and
fcomip
in
lock
frstor
shl
cmc
mov
mov
loopne
pop
cli
lea
cmp
adcb
inc
pusha
sub
test
jl
jge
scas
cmp
add
xlat
scas
loopne
lcall
mov
aad
div
dec
ret
stos
add
add
add
pusha
ret
andb
inc
mov
mov
fcompl
loopne
jo
lock
loopne
jne
push
inc
dec
loope
mov
add
jb
cmp
add
push
xchg
popa
push
imul
loopne
mov
scas
pusha
and
jmp
cmc
pop
mov
sbb
cmp
xchg
xchg
and
mov
lds
stos
add
ret
mov
clc
int3
push
addb
add
xor
aas
push
inc
inc
lds
cmc
pop
mov
add
andl
xchg
dec
jne
andb
mov
pushf
test
adc
cmpl
imul
add
cmp
dec
jns
insl
rcrl
data16
cwtl
or
jo
movl
mov
push
inc
andb
and
push
sub
mov
dec
pop
cwtl
add
inc
fwait
shl
push
xchg
inc
cmp
shll
js
ret
dec
dec
pop
cmp
mov
xchg
dec
fdivr
decb
mov
lahf
xchg
xor
add
jle
loope
pop
push
popa
mov
loopne
andb
dec
sahf
sar
call
push
mov
add
cmpsb
and
lods
inc
rolb
fiadds
jp
jbe
or
mov
loopne
fcmovu
push
add
jmp
inc
loope
rol
clc
mov
pop
or
testb
rolb
pusha
xor
test
sarb
sub
mov
shlb
loopne
adc
add
sti
negl
rolb
fidivl
xchg
sbb
push
mov
cmp
cs
cmpsb
pusha
pusha
jp
adc
loopne
rcr
outsl
push
cwtl
shlb
push
jae
push
push
mov
xor
std
lock
inc
xchg
ja
sub
mov
inc
push
mov
mov
andl
in
lcall
and
inc
pop
dec
cmp
ret
int3
push
stc
rcrb
addr16
andb
cmp
scas
movsl
mulb
sarb
dec
mov
inc
sbb
add
and
aad
and
arpl
sub
shrb
mul
push
jp
sbb
push
push
and
insb
rclb
fadds
push
pusha
inc
pop
cmp
loopne
lods
sub
shl
cwtl
arpl
mov
adc
test
mov
stos
push
incb
and
xchg
cmp
adc
inc
pop
mov
andb
xor
pusha
sub
xchg
adcb
loopne
push
inc
jbe
fwait
rcll
stc
lea
mov
add
je
imul
stc
push
add
adc
add
mov
sbb
dec
and
insb
mov
std
sahf
flds
push
xor
imul
aam
addb
add
lcall
fwait
ret
add
or
stos
pusha
repnz
xchg
daa
xchg
cld
push
popf
sbb
pusha
shlb
into
push
jns
das
pop
dec
inc
test
sub
adc
sti
adc
mov
shlb
inc
lahf
popf
aaa
push
cli
push
push
xchg
add
add
xchg
xor
pusha
and
stos
int
and
pop
data16
mov
cltd
sub
fidivrs
and
push
addb
iret
fs
mov
xchg
inc
mov
movsb
andb
sbb
push
add
rolb
lret
add
mov
sub
int
movsl
popa
adc
cltd
lds
andb
xchg
add
cmp
add
jp
sbb
mov
sbb
dec
xchg
cmpsl
nop
mov
insb
xlat
test
inc
cwtl
icebp
dec
insb
add
enter
mov
and
and
dec
ljmp
sub
mov
add
arpl
psrlw
jmp
mov
pusha
aam
sbb
mov
ja
xorl
mov
push
mov
scas
sbb
mov
cs
mov
pusha
rorl
sti
add
fidivs
sbb
mov
pop
push
cmp
pusha
inc
jno
and
addb
mov
outsl
xchg
lds
into
loope
push
ljmp
enter
pop
icebp
xchg
aad
gs
aas
lret
aam
arpl
loopne
jo
bound
mov
xor
sarl
xor
loopne
leave
push
add
cmp
cltd
xor
and
movsl
xor
dec
sub
adc
inc
rcrb
dec
dec
shrb
inc
arpl
pop
lcall
xor
in
test
jecxz
jecxz
pop
shlb
jb
and
movsb
loopne
adc
imul
push
dec
sub
add
and
aas
ret
and
loopne
xor
loopne
cwtl
lret
shlb
call
std
add
subb
mov
lock
stc
push
xlat
push
aad
and
cli
add
andb
or
add
loopne
shlb
cmpsb
inc
sar
mov
sbb
jnp
jno
loopne
add
ljmp
rol
test
inc
jnp
aad
in
mov
das
inc
test
inc
inc
orl
daa
mov
clc
and
bnd
xchg
inc
push
addb
subb
and
and
mov
loopne
addb
fwait
into
sbb
rol
popf
lcall
and
inc
lock
clc
rcrb
xlat
cmp
std
and
mov
adc
notb
xor
mov
or
inc
aam
data16
xchg
loope
shll
fwait
pop
fdivrl
cmpsl
outsl
jl
add
rcr
test
addb
xor
js
jmp
addl
icebp
stos
jno
lahf
add
inc
sti
jne
aaa
inc
mov
rcl
lods
out
jne
ficomps
mov
addb
aas
cmp
or
jge
dec
mov
rcl
push
mov
jnp
mov
push
add
fs
jo
mov
xchg
inc
mov
loopne
in
loope
mov
addb
xor
mov
cli
mov
inc
xor
imul
jle
lds
imul
cmp
xchg
ljmp
test
loopne
and
leave
scas
loopne
sub
mov
add
rolb
push
mov
add
in
enter
and
add
andb
xchg
sub
fsubrs
mov
mov
xor
lds
test
mov
pusha
add
mov
data16
movsl
sub
ljmp
mov
pusha
rol
mov
repnz
cmp
inc
out
cmp
sbb
mov
pusha
xchg
cmp
xchg
scas
shr
or
pop
push
xchg
and
inc
jbe
add
and
ret
jecxz
out
inc
loopne
pop
mov
out
dec
scas
pop
sahf
dec
mov
cld
rep
sbb
mov
shlb
gs
sub
pop
mov
mov
add
das
sbb
shlb
fidivrl
idivb
push
mov
addb
loopne
es
jecxz
scas
inc
mov
pusha
rorb
xchg
das
jo
dec
mov
addb
mov
jne
dec
xor
in
mov
mov
xchg
cmpsb
loopne
mov
pusha
orl
lock
ret
or
jge
inc
rclb
jae
rclb
mov
mov
cmpb
jecxz
rolb
mov
mov
clc
dec
push
fwait
adcl
sub
and
lret
leave
es
sbbb
cmpsb
loopne
hlt
jp
and
ja
jecxz
shlb
xchg
xchg
mov
pusha
sub
loopne
lahf
pop
fbld
inc
pusha
sbb
mov
les
enter
addr16
shl
pop
mov
ljmp
dec
icebp
xor
add
xlat
jns
mov
cmp
and
sub
mov
movsl
lods
rolb
scas
mov
push
mov
sbb
sbb
dec
sub
inc
lret
vphadddq
add
lret
repz
add
mov
mov
ret
loope
shll
idiv
xor
push
mov
jge
mov
xchg
rol
and
xchg
dec
and
and
xchg
dec
sub
mov
inc
andb
into
mov
add
mov
adc
rolb
pusha
and
rorb
loopne
push
je
sub
cmpb
push
lds
loopne
inc
and
add
xchg
leave
adc
push
mov
push
pusha
rclb
pusha
adc
outsb
out
das
lock
mov
das
push
mov
les
js
int
repz
movsb
add
dec
hlt
lea
cmpsb
add
stos
mov
ss
xor
mov
and
add
lea
repnz
and
je
ficoml
jecxz
xor
jp
andb
inc
loopne
das
pop
pop
stc
mov
pusha
clc
jae
sbb
repnz
mov
mov
add
cs
adcb
jecxz
test
loopne
mov
pusha
add
push
and
push
add
rorb
push
mov
mov
sar
pop
xor
aad
icebp
inc
in
ja
ret
cmp
mov
jae
mov
add
ret
pop
test
add
and
testb
mov
mov
mov
mov
in
test
push
mov
xchg
sub
sub
mov
js
xlat
hlt
mov
and
pop
inc
mov
rorl
das
pop
jno
jecxz
and
jbe
int
inc
add
in
mov
add
adcb
pusha
mov
imul
iret
and
mov
lock
mov
icebp
cmp
out
mov
cmpsb
and
fs
pusha
pushf
loope
aam
out
jg
mov
je
push
cmp
pusha
sbb
pop
hlt
enter
add
notb
jne
xor
fwait
hlt
rcll
push
icebp
dec
insb
ss
and
into
dec
outsb
gs
xchg
icebp
jecxz
mov
jl
mov
in
mov
es
inc
iret
int3
push
push
pusha
add
cltd
imul
pusha
jae
loop
add
loopne
pusha
pusha
je
gs
ljmp
fstpt
inc
and
loopne
out
scas
shl
and
into
and
andb
insb
mov
add
mov
xchg
cltd
sahf
dec
std
loopne
and
cmp
push
jg
sbb
push
mov
roll
dec
icebp
test
or
xor
outsb
push
popf
or
add
jae
into
pop
mov
sbb
aad
mov
stos
hlt
hlt
xchg
pusha
loope
push
rorb
pusha
or
hlt
mov
sbb
ja
add
pusha
mov
pop
lahf
mov
popa
addl
test
pusha
inc
mov
sub
pusha
loopne
test
add
mov
ja
test
add
shlb
cmp
fwait
stos
or
rorb
and
xchg
add
and
stos
shll
lods
addb
fidivrs
dec
xchg
andb
pusha
dec
dec
adc
orl
mov
int
nop
mov
push
sbb
jnp
addb
inc
jge
arpl
jae
xchg
inc
or
and
loopne
pop
std
aaa
mov
sbbb
mov
movsl
inc
dec
in
xchg
fs
movsb
pusha
shlb
loopne
pushf
cli
sub
and
shrb
xor
xor
ljmp
mov
jmp
sarb
enter
outsb
jnp
pop
mov
pusha
pop
push
push
in
sub
inc
mov
inc
andb
ja
pusha
mov
mov
jo
and
aam
inc
or
ret
cltd
test
cmpb
mov
xchg
cwtl
nop
or
and
shrb
or
gs
mov
rorl
inc
pusha
ficomps
fmull
pusha
pusha
ud0
mov
pop
int
xchg
mov
and
rol
mov
pop
inc
push
jnp
and
loopne
ror
xchg
jns
stc
pop
sbb
mov
add
mov
add
mov
das
cmp
inc
ror
dec
mov
scas
adc
dec
mov
std
mov
pusha
into
stos
ror
scas
out
xor
mov
fidivs
shll
scas
in
and
push
loopne
int
addb
filds
adc
pusha
mov
jne
cmp
xchg
cld
jmp
sub
inc
data16
jp
loopne
and
movsb
mov
mov
mov
aam
popa
lahf
mov
xchg
imul
inc
mov
aas
loop
or
loopne
fwait
cmp
add
pusha
daa
in
lret
mov
lods
inc
stc
data16
mov
add
test
push
loopne
xor
loop
adc
pusha
push
mov
in
stos
xchg
jb
add
mov
fistpll
hlt
pop
inc
fimuls
data16
mov
mov
stc
xchg
lret
cmp
ret
or
mov
sysret
inc
imul
sub
add
data16
push
mov
movsb
loopne
ret
and
pushf
cmp
adc
imul
or
xchg
mov
sbb
in
loopew
pop
mov
mov
aam
cwtl
mov
gs
sarb
pop
mov
andb
pusha
sti
divb
out
ficoml
cmpsb
shlb
fldl
xor
pop
outsb
loop
roll
dec
mov
ss
shl
test
mov
shr
repnz
inc
add
icebp
inc
jmp
mov
pusha
ret
mov
add
lret
loope
rolb
dec
fwait
cmp
mov
loopne
jl
bound
into
mov
dec
pop
out
pop
and
or
rclb
adc
pusha
add
mov
in
lds
or
inc
pop
fisubl
xor
add
andb
nop
mov
mov
clc
push
add
mov
push
les
movsl
mov
mov
sbbb
mov
cwtl
mov
lods
rolb
ror
pop
mov
jg
mov
inc
mov
rorb
dec
sbb
lret
sbbb
push
jp
cld
arpl
inc
add
mov
scas
push
xlat
std
es
loopne
pop
inc
mov
pop
fwait
lret
jg
shlb
pop
inc
dec
test
push
xchg
jle
add
aad
jnp
js
ficomps
pop
popf
xor
adc
lcall
movb
push
push
jnp
and
lret
hlt
cmp
mov
loopne
fs
popf
stos
mov
cmp
mov
inc
add
shl
icebp
flds
pusha
and
mov
out
subl
sarb
push
fistl
sbb
jne
arpl
pop
mov
adc
repz
or
lods
pusha
and
adcl
adc
repz
add
loopne
in
aaa
mov
cs
mov
sub
shlb
xchg
iret
mov
imul
std
jmp
out
addb
xor
jmp
inc
aam
arpl
adcb
and
adc
hlt
jge
mov
jg
push
shlb
out
add
addb
inc
dec
mov
add
push
adc
xchg
push
adc
rol
sub
pinsrw
aam
push
mov
sub
roll
pop
repnz
lock
shll
loopne
jnp
cli
scas
cmpsb
and
push
push
sbb
add
ror
cli
out
inc
sarb
loopne
outsl
call
mov
lea
movsb
loopne
dec
jp
popa
jae
dec
popa
lcall
aad
les
xchg
adc
insb
cli
sarb
out
sub
inc
and
jne,pt
imul
and
xchg
jno
pop
rcll
fsubrp
cli
out
sbb
jmp
pop
sub
jns
xchg
fwait
lret
mull
mov
pusha
push
aad
adc
sarb
decb
mov
popa
fldt
pusha
push
and
leave
andb
shlb
push
stos
sete
and
inc
ja
sbb
dec
in
mov
inc
pusha
and
outsl
insb
xor
or
ficompl
jmp
or
test
and
mov
and
jo
icebp
dec
lods
push
lret
lret
dec
push
mov
xchg
push
inc
in
scas
dec
ret
repnz
pop
lahf
xlat
push
inc
hlt
dec
cmpsl
lea
or
add
shl
out
clc
cld
cwtl
fcoml
js
jmp
mov
rolb
add
sbb
lahf
inc
dec
test
push
cmp
es
mov
mov
sarb
and
add
cmc
inc
mov
lcall
sti
xchg
in
jecxz
jp
out
and
pusha
loop
pop
push
pop
push
dec
jmp
xor
in
jmp
lahf
test
shlb
loopne
xchg
inc
xchg
std
movsl
push
test
mov
inc
sahf
cmpsl
imul
das
xchg
cmp
iret
call
xchg
jmp
dec
jmp
mov
cmpsb
and
outsl
mov
pop
test
add
movsb
shlb
inc
in
xchg
incb
pusha
and
jl
add
inc
cli
push
xchg
stc
sub
leave
fcmovu
clc
xchg
pop
imul
sub
sbbb
mov
ss
scas
xchg
mulb
cmp
adc
and
popf
xor
pop
filds
sahf
mov
add
ss
mov
pusha
loopne
xchg
loopne
lods
inc
pusha
rcll
push
pop
cli
aam
call
pusha
xchg
cmc
std
jl
jge
in
sbbl
and
mov
std
pop
lcall
jo
mov
mov
cmp
into
outsl
push
pusha
and
jae
jge
daa
stos
adc
jl
imul
js
sub
sbbb
mov
loopne
shlb
rcrb
in
lcall
aam
push
sub
push
add
nop
gs
scas
add
ficoml
dec
fxch
arpl
repnz
pusha
sarb
nop
mov
jmp
sbb
std
mov
into
ds
ror
mov
mov
add
mov
pusha
in
cmp
test
xor
mov
adc
movsb
pusha
loopne
cmc
ljmp
mov
adc
data16
fsts
push
push
shlb
and
add
mov
cmpsb
inc
add
cmp
hlt
cs
add
int
shlb
mov
cmpsl
push
scas
push
rol
mov
ret
jl
lret
aaa
mov
jg
jbe
aam
push
les
and
adc
add
loopne
outsl
fisttpll
sub
fcmovnu
xor
mov
mov
das
stos
shlb
bound
add
jns
adc
jns
add
push
xchg
sub
add
push
loopne
dec
mov
jl
push
test
shl
cld
push
std
jg
jnp
andb
in
ljmp
add
loopne
lahf
push
daa
aam
pop
inc
sbb
jmp
pusha
pusha
push
mov
dec
ljmp
jbe
andb
jne
pop
pop
mov
push
jge
shlb
mov
push
subl
sbb
sub
mov
add
stos
add
out
and
int
mov
dec
dec
ljmp
pop
push
stos
pusha
loopne
shlb
ss
inc
sbb
imul
add
rolb
mov
loopne
cwtl
jge
stos
mov
icebp
and
adc
push
and
xorb
mov
insb
or
outsl
out
and
jp
adc
lock
in
mov
out
push
jle
imul
push
jno
inc
jecxz
repz
cmc
outsl
dec
add
insl
mov
mov
insl
sub
ror
hlt
and
jb
push
sbb
loopne
stc
in
inc
divl
mov
ret
xor
cmp
bound
inc
es
mov
mov
ljmp
dec
adc
stos
jae
and
test
xor
pop
inc
pop
addr16
lcall
std
mov
mov
and
pusha
add
push
rcrl
outsb
cmpsl
outsl
mov
inc
scas
and
xchg
push
fwait
pop
fistpll
or
add
ss
sarb
add
rcrb
jp
push
xchg
jp
notl
data16
faddl
cld
jmp
and
sbb
and
and
and
add
mov
pusha
fs
push
jp
inc
std
iret
inc
jb
sahf
adc
mov
adc
outsl
mov
add
pop
inc
jge
ljmp
ja
adc
imul
adc
push
push
or
loopne
sbb
call
out
or
mov
pop
xchg
xchg
mov
popf
mov
insb
sbb
loope
sti
xchg
popa
sub
inc
jmp
add
push
pop
xchg
test
add
and
push
push
jp
xor
push
rolb
in
jmp
inc
out
leave
popa
xchg
push
mov
das
add
rcrb
mov
and
pop
cltd
or
fisubl
or
test
adc
js
jo
ja
jge
int3
mov
ret
push
rolb
cmp
mov
shll
and
push
pushl
enter
push
mov
rolb
add
out
cli
ljmp
adc
jl
push
loopne
or
loop
and
inc
add
dec
fucomp
jl
add
jmp
add
pusha
pushf
mov
inc
xchg
test
cwtl
jg
add
cs
rorb
in
mov
subb
mov
sub
add
stos
in
hlt
jle
sbb
loopne,pn
sti
cwtl
cmp
dec
push
adc
jne
sbb
lds
in
xor
adc
jl
mov
test
stc
mov
outsb
xchg
sub
pusha
pop
mov
cmp
push
andb
sti
push
jae
xchg
pop
leave
jb
stos
lret
mov
and
jg
jmp
int
pop
mov
jmp
pusha
and
dec
mov
test
sbb
lret
rolb
rcl
psadbw
mov
jns
ss
and
sub
pusha
and
inc
xchg
mov
jne
add
mov
xchg
rclb
push
xchg
xchg
test
and
xor
add
shlb
sub
inc
lods
and
outsb
mov
rolb
notl
cmp
std
ret
pop
andb
sbb
loopne
mov
mov
sub
loopne
dec
mov
jmp
shll
je
cmpsl
hlt
mov
pusha
adc
mov
movsl
lods
and
xor
or
mov
ljmp
xchg
mov
mov
cltd
mov
jge
data16
mov
cmc
addr16
gs
cwtl
scas
stos
addb
loopne
insb
and
jmp
pop
fs
pop
cltd
mov
adc
pop
xchg
lret
push
mov
cld
in
repnz
divl
and
cwtl
adc
test
mov
push
and
sub
xor
and
dec
dec
sbb
rolb
ret
inc
imul
mov
lods
push
ret
test
jp
nop
dec
loopne
shll
add
addr16
iret
pop
xchg
pop
iret
mov
jmp
clc
push
inc
clc
xor
adc
pop
xchg
das
or
cmpsb
pusha
pusha
rol
lret
enter
gs
shlb
rolb
jle
mov
inc
loopne
xchg
dec
idivl
push
loop
push
shl
cli
aam
decb
push
call
fbstp
pushl
xor
mov
in
mov
jae
push
jge
mov
pusha
mov
jle
xchg
sbb
fsubrl
je
adc
fldl
andb
mov
mov
push
shr
dec
cmpsl
mov
rolb
jmp
push
idivb
pop
sub
sar
add
orb
in
stos
push
lods
and
andb
andb
pusha
subb
xchg
jmp
pop
and
icebp
add
loopne
xchg
mov
ret
mov
outsl
push
sub
dec
adc
jbe
inc
jne
test
add
imul
rcr
insl
pushf
inc
inc
jne
les
mov
push
lcall
scas
sbb
loopne
sbb
jp
inc
mov
stos
loope
mov
jns
pop
jb
and
push
insl
ljmp
pusha
fcomps
lods
aaa
sbbl
pusha
inc
insb
push
push
jae
cmp
mov
add
xchg
addr16
loope
rcrb
call
in
loopne
sub
pusha
jbe
arpl
xor
add
loopne
sti
sbb
dec
insb
fisubl
inc
mov
nop
xchg
fadd
es
inc
push
rol
inc
add
fsub
inc
lcall
dec
dec
mov
ret
dec
mov
push
push
aas
mov
jne
xchg
pop
push
push
addr16
adc
xchg
add
adc
ds
addr16
push
xor
js
shrb
add
mov
jmp
pop
adc
mov
mov
and
pop
sub
inc
aam
cmp
mov
mov
pop
sbb
xchg
mov
stc
jnp
xchg
push
push
iret
ror
or
inc
lret
cs
inc
addr16
fadds
shlb
dec
mov
add
test
hlt
lahf
enter
aas
dec
es
adc
setae
xchg
insl
pop
push
push
xchg
mov
inc
lea
in
sbb
rcr
sub
push
shll
adc
dec
xlat
adc
mov
scas
scas
mov
add
xlat
aaa
jb
bound
pusha
add
inc
cli
pop
mov
addr16
andb
xor
icebp
mov
inc
xor
mov
push
add
cltd
inc
je
shll
in
xor
pop
jge
or
mov
lcall
push
loopne
inc
push
inc
mov
int3
int
adc
int
mov
pop
cmpsb
shl
push
lods
mov
scas
test
inc
xor
xchg
fdivrs
push
loopne
out
cmp
loopne
cli
or
and
mov
scas
ret
xor
insb
mov
pusha
add
mov
andb
sbb
mov
movb
adc
out
inc
mov
clc
pusha
popa
xchg
das
aaa
sbb
xchg
fstpl
loopne
sub
mov
cmp
jo
mov
fadds
push
roll
jbe
daa
mov
andb
mov
inc
fdivr
or
in
fs
in
call
shlb
in
les
inc
xorb
mov
xchg
adc
negl
xlat
add
loopne
inc
movsl
repnz
pop
repnz
mov
das
add
inc
xor
and
pusha
add
fcoml
lahf
dec
cmpsl
add
loopne
and
add
stos
mov
sar
jne
or
stc
push
xlat
aam
and
mov
mov
les
shrl
in
mov
ret
cmp
pop
xchg
mov
add
inc
fstl
popa
pop
or
enter
jne
pusha
cwtl
stos
cmc
xchg
inc
roll
xchg
data16
cmp
movsl
xchg
jle
or
loopne
incb
lods
pusha
loopne
loopne
dec
dec
jmp
push
dec
or
pusha
pushw
rorl
add
mov
inc
loopne
inc
jl
es
add
add
add
xchg
cli
ljmp
xchg
lret
sahf
lods
addb
aas
jns
add
cwtl
outsl
xchg
pop
jns
or
loopne
sub
xlat
inc
push
cmp
fldcw
shrl
js
inc
mov
int
loop
push
fwait
mov
rorl
and
mov
push
sbb
mov
mov
xor
mov
int
cmp
popf
sub
and
ds
pusha
test
loopne
lret
mov
xor
subl
loopne
lahf
popl
gs
andb
xor
inc
xchg
dec
adc
inc
pushf
jle
pusha
add
pusha
and
shl
lret
int3
pop
sbb
mov
add
fidivrl
pusha
push
mov
loop
inc
popf
inc
shl
and
jmp
add
pusha
add
outsb
mov
into
sub
xorb
into
adc
loope
adc
insl
pop
out
pop
add
and
bound
xchg
mov
jnp
cmp
fldcw
add
xchg
idivb
mov
push
xor
ja
pop
imul
addb
sahf
cmp
inc
sahf
hlt
testl
xchg
lahf
aad
cwtl
dec
push
xchg
pop
jge
movsb
pusha
shlb
xlat
pop
xchg
add
and
fmuls
xor
sub
add
shlb
lcall
mov
push
andb
gs
rcrl
mov
and
xchg
loop
add
and
and
and
rolb
inc
xchg
iretw
push
or
shrb
cld
stc
rorl
adc
call
and
mov
and
iret
pop
test
shlb
xor
pushf
jae
and
cmpsl
jnp
pusha
sub
xchg
mov
test
or
sbb
mov
mov
lock
pop
enter
mov
push
into
xchg
dec
incl
push
imul
xchg
addb
outsl
xor
jecxz
adc
and
call
add
and
add
fcomp
jge
pushf
lods
loopne
mov
xadd
push
into
or
andb
and
xorb
dec
insl
pop
sti
mov
ljmp
mov
pop
push
fidivrl
or
inc
push
mov
int
add
mov
push
xchg
jbe
mov
xchg
in
mov
xchg
lds
cmpsl
mov
push
mov
rorb
adc
scas
and
in
inc
add
rcrb
movsb
pusha
pusha
sbb
outsb
addb
jns
jb
push
stos
and
sarb
mov
ja
insl
push
cli
adc
mov
and
adc
jmp
jp
add
mov
inc
add
sub
and
int3
jbe
pusha
mov
push
xor
bound
add
sbb
int
jne
ljmp
mov
lods
ljmp
loope
xchg
ret
mov
jg
gs
loopne
cmp
and
and
mov
shr
mov
xor
mov
mov
add
loop
or
std
les
jle
mov
jno
or
loopne
dec
das
hlt
andb
jns
fwait
mov
adc
outsl
fs
iret
popf
jns
fcoms
dec
loop
test
ret
pop
push
jmp
and
inc
jle
pop
out
in
push
adc
andl
hlt
bound
mov
popa
xchg
dec
or
jo
mull
and
xchg
fstpt
lret
je
xchg
inc
fwait
dec
mov
outsl
jne
imul
cmp
xor
dec
clc
cmpsb
add
sub
add
movsb
mov
sub
test
fwait
sub
loopne
and
add
gs
js
and
add
stos
aas
test
sub
add
mov
sub
cmp
sub
addb
orb
jle
push
inc
pusha
cmp
mov
pusha
and
sbb
add
imull
pusha
cmpsb
rolb
and
test
mov
inc
xor
push
je
andb
arpl
sbb
pop
lock
mov
fdivrs
dec
ret
mov
adc
cmp
and
and
dec
ret
mov
pop
mov
pushf
jg
shl
lret
rclb
test
loopne
andb
sarl
popf
andl
push
testb
rolb
inc
aaa
add
loopne
inc
push
lods
loopne
jp
mov
stos
and
or
and
and
and
test
push
scas
rolb
rolb
loop
adc
in
mov
mov
pusha
pusha
xchg
mov
and
aaa
add
mov
int
ffreep
mov
sbb
cld
or
cmc
shlb
loopne
xlat
mov
ss
loope
sahf
push
ds
jp
xor
in
int3
pop
fldpi
mov
out
ss
nop
dec
and
and
pusha
aas
mov
insl
repnz
data16
loopne
xchg
push
jno
nop
sbb
adc
andb
repz
inc
subb
add
clc
jmp
mov
add
stos
inc
add
fstps
into
test
pop
push
or
inc
inc
push
cmp
dec
inc
cmc
pop
xchg
cli
in
sub
negb
rcr
loope
adc
rcrl
dec
ss
out
lret
jmp
rolb
inc
add
cwtl
lcall
xchg
push
dec
push
andl
add
adcb
sub
inc
loopne
flds
fimuls
decb
mov
popf
mov
pusha
jae
movb
inc
sbbb
sub
pusha
inc
pop
icebp
call
dec
inc
add
jnp
lods
mov
push
sub
jb
test
and
inc
add
loopne
xor
cmpb
pusha
cmc
jns
movsb
add
imul
dec
cmc
inc
mov
sahf
jle
mov
and
mov
sar
mov
outsl
cmc
outsl
shlb
or
sbb
pop
inc
rcrb
xor
frstor
xor
jae
dec
out
js
rolb
jle
xchg
fldcw
pop
inc
test
add
mov
fists
and
xor
cmp
pop
xchg
sub
loope
andb
leave
mov
es
inc
or
out
sbb
lods
rolb
add
adc
dec
xor
shlb
and
and
push
mov
shrl
arpl
sbb
adc
jno
push
and
mov
xchg
mov
mov
mov
std
mov
mov
cmp
mov
and
je
mov
dec
push
add
andb
pop
idivb
add
daa
inc
rol
pop
add
lods
and
rcl
and
arpl
rolb
sbb
sahf
shlb
and
pop
xor
lea
arpl
lods
or
push
inc
fidivrs
jb
jge
sbb
xchg
push
mov
add
shr
jmp
filds
cmpsb
inc
pusha
dec
rclb
pusha
and
aaa
pop
out
movsb
inc
pusha
pusha
mov
nop
sti
fwait
insb
sarl
popf
inc
lea
cmpsb
rol
outsb
movsb
shlb
sbb
loop
lahf
loopne
pop
pop
mov
add
push
js
sbb
push
mov
push
push
cmc
push
dec
mov
adc
sub
and
sbb
test
and
inc
mov
sbb
arpl
out
fcompl
rol
out
lods
add
icebp
data16
or
inc
repz
and
dec
mov
testl
into
push
add
movsb
loopne
xor
mov
nop
push
rol
test
andb
stos
jno
jl
test
sub
pop
aas
cltd
cwtl
ds
mov
jecxz
sub
shl
clc
add
decb
inc
cmpsb
addb
loope
jne
mov
insb
and
pusha
orb
test
xor
ret
ret
mov
mov
xor
in
shrb
jb
push
xchg
or
cmp
lcall
sbb
test
and
pusha
negl
push
les
xchg
mov
daa
xchg
mov
lret
dec
mov
repnz
cmp
mov
pop
int
mov
add
neg
popa
mov
and
mov
adc
jnp
jne
jl
nop
out
xor
push
leave
mov
add
add
test
lret
and
loope
iret
ja
cltd
pusha
lcall
cmpsb
andb
mov
mov
fistpll
mov
les
sahf
leave
addr16
scas
add
lods
stos
adc
jnp
addb
shlb
sbb
mov
cmpsl
cld
and
in
xorl
shlb
orl
cmp
and
and
sub
mov
mov
mov
pusha
sub
sar
std
ljmp
call
fisubs
xorb
sub
jb
outsl
mov
mov
into
mov
pop
push
push
xchg
mov
insb
clc
lret
loopne
data16
adc
movsl
mov
push
add
cmp
insl
mov
and
movsl
xchg
cmp
inc
cmpsl
bound
add
or
dec
mov
cmp
dec
imul
push
cli
ja
fmulp
inc
aam
ja
pop
dec
sbb
repnz
jg
mov
or
inc
jg
jmp
popf
pushf
shrl
inc
mov
cwtl
stos
popa
inc
je
sbb
cmpsb
addb
shl
jl
xor
add
into
cmp
pusha
add
stos
loopne
mov
push
dec
into
add
sarb
sbb
mov
ljmp
or
xor
inc
loopne
test
lds
mov
mov
add
add
fucomp
mov
jg
and
sahf
lahf
mov
pusha
mov
rolb
adc
sarb
xchg
scas
sub
add
shl
inc
dec
fildll
imul
sahf
das
mov
loopne
jp
arpl
pusha
mov
mov
rolb
mov
xchg
inc
test
stos
mov
loopne
scas
lcall
pop
test
test
cmp
adc
dec
ret
mov
pop
adc
mov
shrl
ss
jp
and
push
fistl
loopne
inc
jmp
and
aas
enter
push
arpl
inc
lahf
fs
jp
xchg
insb
adc
pusha
test
pusha
and
ret
xchg
push
lahf
pushw
mov
jae
iret
fs
fdivrl
and
pop
cmp
faddp
sub
adcb
sub
pusha
cmp
sti
push
push
nop
xor
or
mov
rorb
adc
rclb
mov
mov
test
mov
mov
in
and
dec
xchg
mov
mov
and
loopne
add
in
mov
out
jno
mov
xor
inc
outsl
mov
xor
mov
add
sub
cmp
fists
and
xchg
inc
jbe
andb
fmull
mov
mov
push
inc
subb
pusha
loop
sub
sbbb
shll
push
nop
inc
pop
pop
in
cltd
ja
dec
sbb
cmp
mov
addb
and
or
add
add
jle
lret
icebp
inc
imul
and
push
add
leave
pop
mov
and
jmp
rol
jmp
xor
insl
ret
insb
lods
rolb
rolb
sub
cli
fsub
pop
in
and
out
adc
cmpsb
mov
jge
xchg
test
loopne
inc
jbe
loope
addb
ja
imul
mov
mov
and
and
shll
shl
pushf
ja
in
fwait
xor
sbb
in
incl
rol
pusha
xchg
and
mov
and
inc
mov
push
loopne
xchg
push
pop
cmc
adc
and
sahf
test
inc
sahf
ss
jge
mov
pop
mov
sub
pusha
sbb
sbb
or
loopne
mov
lret
jp
test
mov
jbe
enter
outsl
xchg
fwait
xor
movsb
inc
mov
repz
jb
dec
xchg
sbb
scas
add
addb
sbb
pop
xor
or
mov
addb
and
sbb
ret
andb
push
rol
dec
mov
in
add
cmc
js
mov
xlat
mov
add
push
mov
push
adc
mov
loopne
or
pusha
bound
movsl
jae
fistpll
mov
addb
loope
fbstp
inc
outsb
fbld
rolb
imul
iret
fists
xchg
pop
pop
inc
movsb
mov
xchg
cmp
push
sbb
mov
cmp
mov
mov
add
inc
cld
hlt
mov
mov
dec
mulb
dec
cld
xchg
add
pop
cmpsb
pusha
add
into
adc
xchg
int3
jmp
imul
add
cmovl
sbb
cmp
loop
lods
push
scas
and
sahf
andb
or
mov
dec
push
mov
pop
cld
xlat
loopne
cli
test
orb
pop
sub
and
push
ljmp
inc
mov
scas
les
sahf
adc
pusha
rol
inc
and
cmp
push
data16
xchg
sahf
xor
mov
sbb
mov
loopne
xor
add
and
ficomps
mov
sub
ss
mov
pushf
jbe
fcmovnb
or
add
or
mov
std
stc
mov
pop
lret
mov
sbb
sub
pop
outsl
lds
mov
xchg
add
loopne
jmp
push
in
add
popa
xlat
int
add
aam
fmull
das
jmp
mov
aam
nop
sahf
mov
and
xchg
jecxz
pop
cmp
hlt
sti
xor
mov
icebp
cmp
shlb
and
scas
stos
pusha
adcb
loop
sahf
mov
pop
jae
xor
pop
repz
imull
pusha
mov
xchg
out
inc
shll
dec
push
push
and
ret
cmp
sbb
inc
lods
lahf
push
cld
pop
fisubrl
mov
loopne
mov
and
nop
mov
std
nop
mov
mov
popf
mov
and
sub
xor
dec
pop
pop
dec
push
mov
mov
insb
fwait
mov
dec
addb
pop
jne
pusha
inc
notl
jmp
stos
pusha
add
adc
fmuls
push
sbb
cli
xchg
mov
lret
fimull
pusha
mov
addb
addb
popf
push
mov
xor
mov
add
inc
sbb
lods
add
push
xchg
shl
push
leave
std
mov
fsubs
mov
pusha
add
adc
loopne
pop
jae
jmp
inc
shlb
push
inc
lret
pop
insl
jl
mov
rolb
sub
and
sub
xchg
pushf
jecxz
roll
or
xor
incb
jbe
adc
rol
push
mov
idiv
push
jmp
xchg
sahf
std
ret
cmpsl
dec
pop
adc
sub
ja
andb
adc
rorb
pop
std
ds
int
mov
inc
in
sub
daa
out
test
and
mov
sar
mov
mov
loopne
mov
insb
ds
mov
fdivs
stos
loopne
sub
and
push
push
cmp
dec
or
in
push
and
rol
iret
insb
lahf
test
cld
jo
rolb
and
add
scas
pusha
pusha
push
mov
movsl
adc
inc
mov
imul
insb
mov
and
xor
push
inc
mov
mov
add
cmp
add
mov
rclb
lds
and
cwtl
outsb
and
mov
cwtl
cmp
cmp
xchg
popa
hlt
jo
repnz
pusha
and
js
pop
mov
test
mov
loopne
movsb
pusha
inc
mov
shlb
pop
arpl
mov
rorb
inc
adc
ljmp
loopne
scas
rolb
jge
unpcklps
ret
dec
push
rolb
push
loopne
mov
add
insl
push
inc
and
outsb
repnz
jno
and
jge
mov
pusha
testb
sbb
push
adc
cli
xor
rcrb
mov
rcrb
rcrb
test
loopne
and
andb
inc
mov
jnp
std
rclb
xor
lods
adc
dec
sahf
push
jo
push
int
xor
lds
push
and
das
mov
dec
jbe
divb
pusha
cmp
aaa
or
inc
push
cmc
inc
not
repnz
cmpsl
imul
cmp
cltd
push
out
rcll
jle
dec
imul
test
addb
mov
mov
divl
add
mov
cmp
jo
or
cli
mov
jbe
sub
aam
test
inc
es
and
data16
pusha
sti
in
mov
xchg
mov
mov
inc
mov
cld
jbe
mov
xorl
add
int3
out
pusha
sbb
cmp
inc
add
mov
sbb
and
add
lds
inc
inc
push
inc
loopne
into
cmp
fbstp
in
sarb
std
pop
imul
mov
notl
or
in
mov
jo
pop
pop
insb
pusha
and
and
add
mov
hlt
cld
inc
jne
add
arpl
inc
loopne
jle
cmc
add
dec
dec
fimull
add
clc
lods
shlb
je
shlb
jp
fwait
jle
xchg
pop
int
cmp
lea
add
int
aaa
aad
bound
inc
loopne
loopne
xor
add
mov
jmp
xchg
cmpsl
addr16
dec
sub
aas
insl
fimull
repz
addb
pusha
loopne
fnstcw
lock
rol
cmpsb
add
push
inc
inc
test
loopne
inc
push
aas
dec
insl
cmp
inc
pusha
lods
shl
mov
rcrb
jge
inc
orb
loopne
scas
rolb
lods
enter
mov
insb
xlat
cmp
sbb
push
mov
cmc
js
add
push
loopne
scas
and
adc
aaa
movsl
mov
xchg
or
jp
xchg
dec
repz
pusha
add
fisubrs
addb
add
rcl
jo
fnsave
rolb
shl
addb
inc
xor
push
aaa
pop
fiaddl
mov
andb
ja
inc
mov
es
and
and
sti
mov
cmp
rcl
outsl
mov
push
mov
mov
and
jmp
ficompl
jne
pop
int3
add
pop
addr16
pusha
fidivrs
mov
aam
icebp
ficomps
popf
cmc
stos
loopne
addr16
add
xor
xor
in
not
inc
and
mov
push
add
test
pusha
pusha
outsl
outsl
jbe
push
es
adcb
test
negb
inc
push
popf
insb
fisttpll
and
or
jle
xchg
out
cmp
mov
pusha
mov
dec
xchg
inc
add
sbb
in
inc
out
pop
insb
jb
fadd
push
inc
cmp
insl
mov
cwtl
push
xor
and
addr16
xor
cmpb
cmp
movzwl
xor
lods
insb
fstpt
in
push
cmc
mov
mov
ljmp
shlb
shlb
popf
adc
inc
das
addb
sbb
cs
loopne
add
lea
sahf
xchg
mov
inc
subb
push
push
pusha
rol
psubq
aam
lret
test
add
fbld
int3
inc
jb
inc
rorl
inc
add
pusha
jg
adc
mov
inc
jecxz
xchg
mov
xchg
inc
fdivrs
add
out
shlb
cmp
pusha
mov
insl
lods
loopne
mov
shlb
jne
pop
jne
pusha
rclb
push
inc
cmp
andl
adc
loopne
push
jp
leave
dec
repz
pusha
add
push
add
ret
xchg
pop
push
pop
xor
pusha
subb
cmpsl
mov
mov
fisubrs
add
rolb
in
sub
rolb
dec
shrb
and
jbe
push
dec
jl
jg
mov
outsl
xor
sbb
sbb
or
cs
loopne
and
cmp
mov
pop
movsl
aas
inc
ret
push
js
lret
jge
push
out
fmul
cmp
pushf
notl
mov
inc
sub
lods
push
mov
insb
pop
js
mov
jae
out
je
jg
or
inc
rcrl
test
jmp
add
ret
and
or
shl
sbb
push
pop
repnz
scas
cmp
lods
shlb
add
orb
loopne
mov
inc
mov
stc
stc
loope
sbb
shlb
pop
mov
jnp
lret
push
xchg
std
adcl
add
dec
and
pusha
negb
mov
lds
out
fildl
inc
cmp
dec
jno
and
pusha
loopne
fisubs
int
add
test
addb
pop
ds
add
ds
push
pusha
pusha
aas
mov
outsb
jo
inc
jl
add
add
pusha
inc
xor
xchg
loopne
lret
xor
sbb
rcr
inc
inc
leave
into
jns
lret
pop
xor
loopne
lods
loopne
adc
mov
and
mov
subb
add
mov
sub
jno
add
sbb
daa
loope
pusha
inc
popf
inc
sbb
dec
jae
pop
inc
mov
cltd
shll
pop
dec
dec
dec
inc
and
pusha
inc
dec
push
into
dec
sbb
int3
push
add
push
call
loopne
push
jae
mov
sahf
js
mov
mov
xor
sub
and
shlb
shl
sub
inc
clc
push
in
popf
dec
pushf
das
outsl
aas
pusha
cmp
mov
dec
jnp
dec
cmp
out
xchg
arpl
sti
cmpsl
mov
shlb
xor
dec
mov
cmp
add
pop
adcl
ficomps
sbb
sahf
pop
fwait
xor
and
mov
loopne
jp
cmp
dec
mov
insb
mov
push
data16
push
adc
pusha
pusha
stos
enter
addb
sarl
xchg
xchg
out
xor
cmp
stos
shlb
lret
movsl
sbb
jns
in
fsub
adc
test
dec
lds
and
inc
mov
leave
xchg
cltd
xor
pusha
inc
inc
mov
add
jp
lahf
jp
jecxz
xor
loopne
fldcw
ret
pusha
inc
aas
imul
outsl
xor
mov
repnz
addb
xlat
scas
out
mov
mov
das
adcl
imul
mov
dec
ljmp
loop
outsb
jmp
cli
jb
pop
mov
into
jl
ret
dec
fucomi
xchg
and
sbb
pop
mov
outsb
out
lock
int
adc
inc
faddl
andb
fcomps
lret
adc
dec
iret
jg
or
dec
add
mov
and
xlat
push
daa
negb
pusha
hlt
lret
andb
loope
popa
push
sub
and
lds
xchg
out
cmp
push
lahf
sub
adc
in
add
add
aad
jne
mov
xchg
inc
repnz
mul
aaa
push
lods
pusha
mov
jmp
sahf
jnp
addr16
jge
test
push
push
mov
daa
icebp
aad
gs
add
mov
loopne
sub
pop
out
andb
jno
loope
rol
lods
movsl
jo
or
mov
and
loope
rcl
fisttpll
mov
push
rolb
push
cmpsl
mov
daa
mov
addb
shlb
add
jae
dec
mov
push
jge
and
sbb
xor
jnp
movsl
and
rcr
add
xlat
pop
stc
mov
add
xchg
test
mov
rol
jns
mov
es
popf
mov
addb
jl
xor
xor
mov
adc
cltd
pusha
int3
dec
cmp
inc
xor
jecxz
loopne
mov
ror
aas
inc
and
jbe
push
fstl
repnz
rcl
pop
pushf
outsb
mov
add
inc
addl
sub
mov
pop
cld
mov
adc
add
andb
or
inc
popa
ficoms
lds
faddl
stos
xchg
fcoml
popa
push
or
pusha
jl
dec
ljmp
test
mov
add
ds
in
add
bound
shll
and
das
jb
rolb
fnstenv
dec
leave
mov
fsub
adc
lret
andb
data16
loopne
push
loopne,pn
adc
loopne
sbb
fsub
push
and
inc
mov
mov
push
push
loopne
add
or
stos
pusha
cmpb
jp
movsb
pusha
pusha
mov
and
and
pop
pop
lret
xor
clc
push
xlat
jmp
mov
orb
mov
loopne
aad
inc
and
mov
outsl
fwait
xor
inc
xchg
fs
test
mov
in
push
stos
add
stos
and
push
ret
inc
int
jmp
lea
mov
jno
dec
sub
and
outsb
mov
arpl
xchg
scas
mov
andl
add
in
lea
sbb
sub
stos
lods
shlb
sub
pusha
gs
addb
sub
loop
fwait
push
lds
add
loopne
insl
cmpsb
mov
mov
or
add
cmpsb
addb
repz
ds
xor
outsb
hlt
bound
rolb
sbb
stos
scas
lock
pusha
sbb
add
scas
inc
loopne
mov
cltd
jg
orl
pop
data16
and
mov
insl
loopne
lahf
pop
mov
mov
jmp
mov
inc
and
dec
call
push
push
int
dec
data16
loopne
mov
and
pusha
inc
push
add
pop
addb
mov
add
sti
lret
out
sbb
pop
popa
cmp
push
xor
sbb
mov
add
mov
or
inc
js
and
inc
inc
push
xchg
cmp
add
xchg
loope
les
mov
lds
test
xor
pusha
inc
jmp
nop
add
pushf
out
mov
push
inc
inc
mov
test
mov
je
xor
aad
push
mov
lods
loopne
cmc
mov
add
inc
fs
inc
xor
in
ds
mov
ja
mov
cmpsb
add
jle
rclb
and
inc
loop
imul
andb
mov
cltd
push
pop
add
mov
xor
add
shrl
add
and
add
loopne
xchg
std
stos
and
inc
pop
cmp
shll
pop
inc
insl
inc
imul
fdivl
scas
in
inc
sbb
in
outsb
jo
bound
and
mov
push
pusha
loopne
sbb
fisubs
jne
jl
jo
insl
in
mov
fiaddl
inc
inc
adc
push
test
lods
mov
shl
stc
jae
dec
adc
nop
test
add
pop
out
cmp
nop
fldt
test
in
lret
repz
add
jecxz
and
popf
shlb
add
sar
mov
shlb
std
push
stos
mov
icebp
daa
test
mov
push
inc
sarb
stos
mov
adc
loopne
sub
xchg
jp
roll
pusha
sbb
loopne
or
cld
cmpl
in
jecxz
pop
push
bound
and
out
and
repz
pop
loope
or
outsb
push
lods
xor
movsl
scas
add
mov
and
addb
insl
or
jne
inc
ja
imul
sub
add
xor
adc
loopne,pn
out
in
cmc
cli
pop
std
pop
lock
stos
andb
jecxz
addr16
mov
and
jbe
sub
fucomp
mov
andl
xor
cmp
adc
add
shlb
push
sub
sbb
mov
subb
pusha
outsb
into
pushf
enter
add
cmpsb
addb
mov
add
pusha
push
sub
std
xchg
mov
lods
pusha
loopne
mov
nop
jb
lahf
jne
sbb
push
in
ds
adc
pop
faddl
movsb
inc
inc
dec
jp
adc
mov
aam
test
sub
rcll
popa
loop
and
je
add
jns
and
and
pusha
mov
sahf
lret
push
insl
in
cmpsl
adcl
rcl
ds
mov
outsl
gs
mov
scas
add
pop
shl
stc
sub
loopne
cli
test
lret
inc
and
and
lea
adc
test
rclb
cmpl
inc
movl
sub
inc
mov
inc
cmp
cmc
mov
cmc
adc
mov
xor
add
add
addb
adc
andb
mov
jb
or
dec
pop
insl
or
add
loop
push
std
jno
add
dec
les
cld
loop
push
lods
orl
pop
jge
dec
add
andb
out
dec
loope
inc
mov
xchg
subl
and
outsb
in
xor
ret
sbb
add
aad
sub
pusha
inc
imul
in
xchg
xchg
jne
stc
push
sbb
test
mov
scas
divps
mov
mov
lahf
ss
imul
inc
push
dec
stc
sub
push
mov
mov
push
sahf
loop
loope
int3
test
andb
dec
loope
jp
cmp
lods
mov
inc
cmpl
popf
xchg
mov
inc
fistps
shlb
xchg
mov
aam
dec
test
and
js
dec
fcompl
lret
mov
inc
shrb
iret
je
test
stos
or
and
shl
stc
adc
gs
jb
and
shl
and
rol
add
push
popa
xor
test
call
xor
into
sbb
icebp
negl
icebp
shll
scas
mov
ja
mov
testb
xor
dec
sub
pop
fcoms
fisttps
add
mov
sbb
xchg
lret
xchg
pop
mov
add
cltd
movsb
loopne
sbb
xor
in
and
pusha
fdivrs
mov
pop
loopne
push
pop
aad
gs
popa
or
movsb
inc
shrb
iret
cmp
leave
lret
push
es
mov
negb
dec
push
mov
in
lock
mov
lret
mov
mov
cmpsl
dec
insb
test
mov
fs
movsl
loope
add
fadd
adc
pusha
mov
pusha
ja
gs
mov
xlat
and
outsl
push
fs
dec
loope
std
sub
xor
mov
out
fisubs
andb
mov
imul
js
pop
loope
lret
fistpl
mov
ret
sbb
push
add
jnp
fnstsw
frstor
inc
or
adc
pop
call
pop
add
cmp
cmp
sbb
jecxz
adc
cltd
loopne
add
jl
mov
loopne
fsubrl
aas
popf
std
sbb
pop
xchg
xor
pushf
mov
mov
dec
mov
repnz
andb
sbb
or
loopne
pop
sub
sar
push
mov
jne
xor
jnp
bound
lret
sbb
sahf
push
or
cmp
mov
rcrb
in
push
addb
pop
cmp
mov
loopne
cmp
jb
aas
push
jae
ffreep
and
mov
pusha
and
lcall
std
clc
mov
xor
js
rolb
push
sub
xchg
popf
dec
test
push
inc
mov
loop
hlt
test
and
mov
in
xchg
xor
fidivl
pusha
jbe
add
popf
rcr
push
ret
fbld
rol
inc
mov
pop
sbbl
sbbb
jle
hlt
push
push
push
dec
xchg
fcoml
add
mov
sub
inc
jmp
xchg
pusha
dec
mov
movsl
jg
rcrl
andb
inc
shlb
or
xor
pop
inc
in
or
add
add
lcall
jecxz,pt
pusha
mov
sub
mov
jge
inc
jg
add
xchg
pop
mov
dec
push
and
sbb
adc
jo
mov
pusha
rclb
xor
dec
push
and
inc
out
inc
add
addb
fwait
data16
xor
pop
sbb
std
xchg
jo
scas
or
rcrb
jo
bound
jb
mov
fildll
sub
mov
mov
dec
sar
gs
mov
imul
push
and
pop
outsl
cmpsl
add
loopne
fstl
push
jecxz,pt
cmp
lcall
neg
mov
in
ljmp
aaa
clc
jbe
sti
add
add
fstpl
sub
movsb
shlb
inc
pop
sbb
jae
lahf
pop
ss
mov
inc
adc
sbb
add
and
xchg
xor
dec
cmc
imul
jmp
ljmp
out
andb
and
jne
inc
and
mov
jne
ret
xor
cwtl
cmp
addb
or
mov
sbb
rolb
mov
shlb
cmp
shlb
push
push
scas
and
cmp
xorl
add
xor
decb
mov
jbe
sti
mov
push
jecxz
push
jp
pusha
inc
imul
call
cmp
inc
cmp
mov
mov
rclb
xchg
sbb
pop
inc
rcrb
ret
cld
icebp
xor
imull
loopne
xchg
mov
pop
andl
mov
aad
jo
es
inc
ljmp
push
and
mov
adc
add
pusha
mov
aas
push
mov
movsb
and
rorl
add
mov
or
shrb
push
push
sub
add
xchg
lods
and
push
adc
pop
or
push
lahf
scas
mov
xorb
pop
jge
xchg
test
pusha
jl
test
sbb
lods
inc
mov
test
mov
add
mov
and
inc
inc
or
mov
pop
push
loopne
fldl
es
or
rclb
inc
ja
mov
pusha
sbb
xchg
pop
or
and
mov
loopne
sub
add
loopne
jno
mov
imul
ja
mov
rolb
pusha
pusha
in
add
add
rclb
mov
and
fisubrl
mov
jb
sbb
add
movsb
add
or
pop
xor
ja
jne
mov
rolb
fistl
xor
rolb
out
mov
or
pusha
mov
dec
insl
add
jae
mul
xor
mov
decl
test
gs
pop
adc
add
xor
mov
sub
fs
mov
les
movsb
pusha
shlb
fnstenv
into
lret
idivl
pop
adc
jg
inc
rcrb
pusha
inc
outsl
js
mov
nop
add
addr16
jnp
push
add
xchg
jae
outsb
push
lcall
insb
scas
outsl
adc
adc
dec
and
shrb
outsl
pop
or
dec
scas
inc
pusha
push
add
mov
sbb
inc
push
or
inc
xchg
mov
or
shrb
sbb
and
dec
pop
in
dec
xchg
pop
andb
fnsave
mov
and
pop
dec
push
push
scas
inc
loopne
clc
push
sub
rclb
push
std
repnz
movsb
rolb
xchg
and
jb
jp
xchg
or
add
and
adc
cmpsl
jp
lret
cli
call
sahf
stos
mov
add
cltd
mov
rorb
aam
inc
jmp
pop
fimuls
push
pop
sbb
lock
ss
cmp
and
sbb
dec
and
mov
sub
xchg
filds
popa
idivl
dec
andl
add
adc
push
adc
sbb
add
outsb
lcall
aas
arpl
xchg
ja
mov
mov
add
jge
mov
xor
inc
mov
and
add
and
and
lock
inc
aam
ljmp
adc
pop
shrl
sarl
in
outsb
mov
inc
lcall
jmp
jae
and
aaa
lock
je
fstpt
stos
loopne
into
cmp
out
or
mov
inc
int3
mov
out
test
mov
fwait
mov
cmp
xor
stc
push
add
sub
inc
inc
std
fcmovb
aad
std
loope
jno
inc
ss
jb
addb
fsubrp
xchg
fimull
pusha
shlb
mov
fwait
mov
jae
cs
sub
aad
stos
iret
lock
mov
push
movsb
rolb
and
and
add
mov
jle
js
shlb
out
fisubs
sub
pusha
addb
add
setb
in
cwtl
cwtl
negl
ljmp
pusha
rolb
fildl
fstl
fisubs
adc
scas
imull
jl
iret
mov
loopne
subl
inc
cld
aad
dec
or
sub
rcl
xchg
adc
rcl
test
addr16
cld
and
fildll
inc
mov
inc
or
mov
pop
push
inc
inc
pop
sarb
inc
xchg
add
xchg
xor
loopne
xor
jo
pusha
pop
cmp
push
lret
jg
scas
rolb
mov
mov
or
adc
adc
jmp
pop
push
cmp
sub
push
sbb
or
notb
aas
ret
loop,pt
loope
pushf
mov
jnp
notb
shlb
push
cli
push
fistpll
and
sub
add
shlb
loopne
shlb
and
out
pop
add
xchg
shrb
ljmp
out
add
and
dec
adc
jle
cmp
fimuls
inc
shlb
movsb
loopne
xchg
sbbl
shlb
add
lods
mov
cmp
mov
pop
cs
bound
jp
fcoms
movsb
rolb
enter
inc
inc
inc
icebp
js
lcall
xlat
xchg
ja
addb
adc
ret
cmp
xchg
test
orl
and
adc
jbe
inc
pushf
ljmp
inc
push
dec
pop
xor
ss
cli
andb
pop
and
inc
int3
xlat
aaa
cmc
xchg
adc
lock
rolb
inc
add
mov
sbb
shll
xor
dec
cmp
add
pushf
jl
push
mov
xchg
xchg
or
outsb
mov
inc
sub
fsubl
andb
mov
ljmp
mov
push
daa
addl
idivb
out
dec
jecxz
xchg
push
repz
mov
adc
push
test
cli
mov
pusha
mov
cmp
inc
jns
pop
add
mov
sbb
loopne
dec
leave
ret
pop
ja
cld
sub
add
and
push
add
mov
add
fwait
jmp
pop
cmpsb
inc
pusha
and
and
ljmp
and
loopne
shlb
inc
lods
jnp
mov
cwtl
jp
sbb
xor
add
cmpsl
add
dec
adc
jno
icebp
push
scas
mov
xor
add
push
add
in
sub
jle
movsl
mov
mov
and
loop
je
loopne
ja
mov
loopne
jp
jae
inc
orb
push
inc
and
lahf
inc
in
mov
loopne
aas
adc
add
pusha
inc
pop
inc
mov
inc
pop
mov
scas
addb
inc
or
mov
in
loopne
push
bound
inc
out
dec
fwait
stc
xor
cmp
lds
repz
cltd
jno
inc
cmpb
sub
loopne
cmp
roll
and
addb
sti
mov
pop
inc
push
dec
adc
and
mov
push
mov
rcrb
add
cli
xor
inc
mov
lcall
pop
adc
pop
cmpsb
and
cmp
and
fnstsw
jno
cmp
fsts
sbb
hlt
andb
xchg
mov
insl
popa
push
fcomi
movsl
push
into
pop
stc
imul
sahf
lods
and
sti
lahf
xor
adc
xor
mov
shr
cwtl
xor
addr16
dec
ja
andb
imul
jmp
mov
mov
mov
nop
sbb
adc
push
and
lock
data16
and
cmp
xchg
adc
or
and
popa
stos
adc
aad
push
repz
iret
sbb
ljmp
jns
jg
dec
pop
lcall
lock
lods
and
out
xchg
add
mov
insl
xchg
insb
imul
inc
add
mov
and
pop
pop
xchg
lcall
xchg
pop
stos
inc
sub
adc
addr16
imul
mov
pop
add
sub
push
cmp
sub
mov
out
dec
lods
push
out
pop
mov
xor
pop
jl
scas
and
data16
mov
jmp
push
loop
mov
cmp
mov
xchg
rcrl
outsl
pop
sub
add
int
pusha
add
inc
sub
pop
or
pop
cmp
pop
xchg
mov
lods
pusha
add
or
pusha
in
call
and
push
aas
aaa
push
jae
xchg
xor
mov
jle
mov
add
test
insb
fldt
inc
lods
dec
mov
inc
sub
shlb
shlb
push
test
jle
rcll
jb
movsb
mov
aam
fisubrs
xchg
cmp
je
xchg
mov
dec
adc
cld
mov
xlat
dec
pop
stos
and
arpl
fsubrl
adc
dec
mov
int3
mov
sbb
push
rcrb
inc
add
cs
and
sahf
test
loopne
push
js
add
add
loope
insb
adc
cwtl
sbbl
pop
xchg
adc
mov
repz
mov
and
pop
adc
push
in
lods
xor
gs
roll
in
sbb
fnstcw
push
sar
sahf
push
mov
and
lock
mov
or
xchg
pusha
icebp
xchg
aad
ret
push
repz
cmp
pusha
mov
cli
pushf
repnz
ret
inc
pop
xchg
dec
or
aad
cwtl
add
xor
jno
push
aam
bound
inc
inc
nop
cmp
rolb
test
inc
cli
jb
add
loopne
sub
inc
inc
push
cmp
loopne
add
xchg
and
pop
cli
cwtl
add
fsts
test
add
mov
mov
add
ljmp
mov
mov
daa
aas
adc
fcomip
sub
add
xor
sbbl
mov
pusha
or
mov
loopne
mov
pusha
jp
loopne
mov
push
mov
fcompl
xchg
jb
inc
pusha
icebp
adc
fbstp
xchg
adc
xchg
sub
leave
mov
cmovle
jno
cli
sahf
dec
mov
adc
shlb
cmp
mov
ja
loop
add
fwait
xchg
loopne
lret
pusha
loopne
stc
and
xchg
repnz
stc
sbb
jns
fsubl
movsb
inc
pusha
mov
cmpsb
add
pop
dec
sub
inc
jmp
sub
inc
push
xchg
nop
cmp
shl
add
xchg
mov
repnz
inc
jecxz
and
xor
inc
pusha
push
and
fnstenv
xor
test
add
loopne
loope
pusha
addb
add
int3
or
loopne
and
addb
jbe
add
pop
hlt
movsl
lds
shll
cmp
push
pop
or
sarb
add
mov
mov
push
adc
dec
cmp
mov
and
loopne
push
add
jnp
mov
xchg
ljmp
cmp
mov
inc
shlb
adcb
inc
pusha
ljmp
iret
and
loopne
sbb
fidivrs
xchg
mov
and
fnstcw
jge
cmp
cmp
repnz
test
push
push
jmp
mov
or
inc
add
out
add
imul
addr16
lods
inc
shlb
and
fldenv
sbb
shlb
add
loopne
test
inc
pusha
arpl
pop
std
mov
imul
scas
ret
roll
sbb
push
cwtl
pop
sbb
repnz
jne
les
loopne
pop
lock
and
mov
pusha
rorb
add
mov
adc
aam
mov
dec
jl
loopne
inc
mov
mov
inc
in
inc
je
push
loopne
icebp
out
aaa
cli
cwtl
mov
inc
addb
test
jg
icebp
mov
insb
pop
clc
lock
ljmp
mov
data16
sbb
jo
pop
leave
shlb
jge
or
xchg
xchg
outsl
popf
shrb
and
xorb
les
out
mov
andb
pusha
inc
fsubrl
test
add
in
sti
pop
mov
add
int3
lods
inc
pusha
add
incb
push
dec
mov
dec
cmp
mov
orb
mov
inc
add
fcoms
cmp
test
rclb
shll
push
push
pusha
pusha
add
frstor
cmpsb
rolb
dec
cmc
leave
or
int3
fs
icebp
aas
rcrl
testl
loopne
dec
test
jnp
pusha
and
test
cmpb
inc
mov
lods
pusha
and
mov
adc
sub
mov
mov
dec
xor
ja
mov
mov
add
ds
or
imulb
mov
iret
and
test
and
pop
hlt
mov
mov
lret
sbbl
or
push
or
add
xchg
fnstcw
pop
in
mov
dec
pop
lock
sti
mov
fwait
cmpsb
add
xlat
outsb
and
andb
enter
loopne
addb
xor
mov
pop
mov
adc
je
mov
cmp
andb
sbb
cmc
popa
jb
inc
push
xchg
adc
inc
mov
sub
pop
cli
frstor
jb
add
clc
lock
rclb
and
add
pop
cli
and
lods
addb
ja
sbb
inc
enter
or
scas
add
ret
xor
test
xor
std
mov
aas
pop
jb
dec
daa
dec
jg
scas
dec
mov
xchg
imull
mov
popa
divb
pop
lock
sbb
xchg
xchg
and
bound
mov
or
int
mov
and
pop
clc
push
loopne
dec
cmp
lret
inc
inc
lcall
inc
rol
shl
dec
stos
ss
sahf
mov
xchg
out
addb
mov
daa
leave
sub
mov
andb
insb
and
addb
sub
and
pop
push
loop
and
icebp
jb
dec
add
pusha
or
daa
dec
fcom
xchg
pop
mov
xlat
or
xor
push
jl
out
or
rolb
out
cli
or
fsubs
jnp
cmp
inc
xchg
imul
popa
ss
aaa
arpl
shr
mov
mov
andb
addb
lock
pusha
push
sub
in
mov
cwtl
shrl
mov
xor
lods
inc
loopne
shlb
popa
test
addb
scas
xchg
cmp
mov
bound
out
daa
pushf
jg
into
int3
cmpsb
mov
sub
mov
dec
push
mov
addr16
adc
or
push
dec
data16
imul
jnp
xchg
rclb
push
lods
arpl
mov
xor
push
inc
or
mov
and
push
das
fwait
cmpsb
mov
inc
pusha
movsl
mov
mov
jns
leave
lret
add
loopne
push
leave
ret
sub
addb
jecxz
pusha
outsl
repnz
mov
rcr
cmc
cwtl
addr16
stos
loopne
sub
mov
jns
hlt
inc
jecxz
jge
sbb
jae
arpl
scas
loopne
aam
push
xchg
out
pop
negb
jmp
push
lods
inc
pusha
mov
xchg
mov
and
sub
rcrb
and
inc
inc
mov
loopne
pusha
cmpb
in
xchg
push
jg
jmp
jb
pushf
jo
inc
mov
sub
pusha
inc
insb
ret
rorl
dec
lds
pusha
and
loopne
xchg
jnp
xchg
pop
mov
fcoml
push
cwtl
mov
mov
lret
push
bound
xor
and
mov
mov
mov
mov
les
lea
inc
and
inc
cwtl
cmpsl
aas
imull
hlt
sub
mov
mov
je
shlb
mov
shr
sub
add
out
xchg
dec
andb
mov
sbb
cld
pusha
int
inc
scas
add
inc
sbb
pushf
mov
inc
clc
mov
fcoms
int3
add
pusha
data16
out
sbb
xchg
xchg
aas
fsubl
rolb
dec
aam
lods
mov
sbb
scas
inc
loopne
xchg
daa
ds
out
loopne
dec
jnp
rorb
rolb
mov
pop
mov
repnz
mov
mov
test
lock
loopne
push
cwtl
xor
xorb
loopne
out
ljmp
out
dec
or
rcl
out
shll
shlb
and
jmp
jp
pop
out
test
sarb
mov
pop
pop
addl
nop
mov
mov
rclb
add
ja
cmp
out
sbbl
xor
sahf
rorl
inc
lret
cwtl
lret
sub
mov
stos
add
loopne
and
orb
ss
loopne
mov
inc
out
pop
fs
mov
mov
ret
mov
loopne
sub
mov
scas
pusha
loopne
add
rorb
mov
loopne
xchg
popf
repz
insb
fcoms
loopne
sbb
clc
xchg
xchg
js
leave
mov
ret
cmc
popl
aas
insb
fidivl
and
popf
push
js
mov
loopne
sar
inc
sarl
adc
cmp
addb
cmp
andb
and
dec
inc
sub
dec
mov
and
and
xorl
lock
test
and
push
das
aaa
movsb
loopne
mov
mov
je
lea
lock
hlt
imul
stc
xor
scas
xor
jmp
scas
clc
jmp
iret
fidivl
je
or
int
imul
mov
jae
cli
mov
subb
dec
jno
mov
das
sub
mov
pusha
mov
mov
test
sbbb
repz
push
jno
inc
mov
and
inc
add
scas
addb
inc
hlt
fdivl
ds
testl
xchg
roll
jp
std
inc
mov
pop
clc
and
pop
sahf
bound
std
gs
dec
and
mov
pop
loop
insl
test
jae
lret
ret
cmpsl
sbb
and
mov
addb
or
lcall
mov
shll
pusha
sar
out
repnz
cwtl
lock
mov
dec
inc
repz
xchg
ljmp
mov
pusha
adc
andb
cmc
pop
pushf
mov
nop
mov
pop
and
sbb
cmp
pop
pop
aam
mov
outsl
jno
sarb
loope
adc
add
shll
pusha
hlt
xchg
pusha
mov
movsl
mov
pusha
dec
adc
int
ds
add
test
adc
lds
rclb
and
and
jmp
ret
std
movsl
outsl
and
jecxz
test
mov
pusha
jns
in
fs
sarl
mov
cwtl
shll
in
cwtl
ret
push
mov
jne
cmpsb
inc
add
and
push
push
and
sarl
mov
cmp
adc
in
mov
shrb
mov
inc
out
fnstsw
flds
in
mov
aad
cmp
inc
fsubp
xchg
cmp
ja
nop
test
stos
add
jl,pt
loopne
or
sti
test
inc
sbb
add
mov
test
iret
pop
sarl
adc
scas
rolb
mov
add
testl
mov
jns
scas
add
push
adcl
xlat
out
inc
pop
ret
fsubrl
inc
fs
inc
adc
lea
subb
stc
inc
mov
fstps
daa
pop
pop
pop
mov
and
jle
and
xchg
and
enter
popf
jg
mov
inc
rclb
inc
orb
fcompl
mov
jp
and
mov
out
loopne
xor
mov
adc
dec
and
movsl
mov
loope
pusha
mov
push
loopne
imul
dec
movsl
leave
enter
mov
loope
popf
xor
cmpsl
hlt
jnp
sarl
std
mov
sbb
lock
shll
jae
imul
clc
test
cmp
and
inc
push
mov
xorb
cmp
dec
dec
dec
mulb
xor
add
jecxz
in
sub
mov
mov
dec
pop
sbb
outsb
cmp
push
aas
mull
sub
stos
and
mov
adc
js
js
in
or
push
add
dec
loopne
inc
push
pop
cmp
imull
and
jle
pop
xor
cmp
mov
push
inc
mov
out
add
mov
test
add
pop
repnz
adcb
or
insl
pavgw
lods
addb
xchg
sbb
and
sbb
mov
sbb
pushf
lods
and
mov
xchg
loopne
mov
jnp
push
int3
inc
ljmp
enter
and
loopne
cmp
pusha
pop
stc
and
inc
push
pusha
pusha
popf
sbb
or
push
sbb
shll
mov
adc
add
inc
or
sub
inc
xor
jb
push
loop
inc
inc
xlat
mov
jmp
mov
xor
sub
gs
pop
mov
andb
rolb
or
xchg
push
loopne
jmp
mov
mov
int
cltd
xor
std
jb
stos
jae
outsb
out
push
mov
mov
mov
add
imul
out
or
enter
stos
push
mov
insb
ja
cmp
and
vpaddd
add
dec
adc
pop
call
mov
jb
shlb
and
loopne
aad
mov
inc
lea
inc
and
jns
push
loopne
lock
push
add
push
push
rolb
sbb
stc
xor
fldt
test
and
aad
mov
jbe
add
push
in
movsl
adc
add
xchg
fs
rolb
shlb
outsb
lahf
test
lret
lea
daa
ja
push
int3
push
mov
fstp
xlat
lretw
rol
sub
pusha
testb
push
pusha
loopne
xchg
xor
xchg
and
add
ss
or
pusha
ret
or
add
push
sub
add
movl
or
divl
imul
and
add
jb
jp
xchg
fsubrl
rolb
and
jg
jno
adc
aas
jg
sbb
clc
mov
test
add
loopne
mov
push
or
xchg
mov
rol
iret
xchg
xchg
lds
sbb
sbb
jno
paddsw
cld
lods
filds
pusha
pop
jp
jbe
xchg
rcrl
test
and
xor
mov
and
loop
and
loopne
scas
pusha
dec
repz
inc
loop
cmp
xchg
js
dec
lahf
mov
ljmp
loopne
mov
addl
add
dec
add
lds
dec
mov
bound
mov
insb
xchg
outsb
stc
ss
lea
test
fcomi
outsl
adc
insb
cmp
inc
orb
rolb
movsb
rolb
mov
mov
add
inc
addb
shl
cli
inc
and
dec
sti
cmpl
push
mov
lods
pusha
mov
aad
pop
push
add
mov
imul
pusha
into
les
not
aaa
push
jne
lcall
and
jbe
imul
add
or
test
loopne
jns
mov
int
fwait
mov
fwait
shll
mov
in
shrl
movsb
pusha
add
jo
mov
pop
cmp
loopne
sbb
mov
xchg
stc
xchg
lcall
lret
test
mov
popf
sti
sub
sbb
enter
pop
xchg
add
call
mov
and
mov
sbb
and
xor
inc
addr16
jle
pop
adc
ds
test
xor
xor
inc
fldl
stc
ss
push
popa
adc
stos
sub
stc
cld
mov
pop
jnp
fsubrs
loopne
or
pusha
push
test
shlb
mov
jge
jb
rolb
repz
pusha
inc
add
xchg
out
in
xchg
mov
pop
and
mov
pusha
loopne
inc
das
mov
andb
pop
enter
jmp
js
test
cmp
mov
int3
test
and
push
push
sub
pusha
and
push
and
jne
idivb
out
mov
outsb
in
cmp
scas
loopne
mov
add
xor
jmp
lock
inc
mov
xor
add
loopne
int3
loope
mov
sub
add
mov
pusha
inc
push
test
add
scas
mov
push
lea
cli
xchg
test
or
mov
inc
mov
cmp
cmpsb
add
insl
outsl
pop
insl
xchg
into
cs
add
scas
add
andb
pop
pop
out
xor
adc
rolb
rclb
and
pusha
mov
jl
adc
mov
cmp
pusha
dec
fs
dec
add
insl
mov
push
add
data16
popa
xor
aad
aad
andb
add
std
mov
mov
loopne
rcrl
xchg
div
xchg
sbb
lcall
rolb
ror
mov
mov
xchg
and
shlb
add
cmc
or
mov
sbbb
cmp
ds
cltd
lock
rol
loopne
xchg
hlt
adc
inc
sub
mov
add
push
sti
mov
mov
fwait
scas
fstp
xor
addb
add
inc
mov
pusha
cmp
lock
add
andb
lret
je
ret
int3
dec
jg
sbb
mov
inc
xchg
jmp
les
mov
xchg
cltd
fcoms
pop
repnz
mov
mov
xor
pop
es
pusha
shlb
rcrb
jo
fadd
xchg
nop
dec
loopne
push
pop
inc
push
or
cmc
xor
mov
mov
addb
mov
shl
filds
addb
rol
aas
mov
and
out
sub
add
cmp
in
clc
test
push
pop
and
xchg
pop
ffree
mov
add
ja
in
fwait
add
out
andb
push
xchg
movsl
jle
call
or
test
loopne
sub
loopne
loopne
loopne
sub
sbb
add
pop
dec
jno
movsl
xchg
cmpb
mov
xchg
push
pop
addr16
dec
pusha
mov
or
or
jb
andb
loopne
push
int
loopne
sbb
add
dec
imulb
inc
andb
xchg
imul
daa
pop
stc
fdivrp
stc
fimuls
arpl
in
inc
inc
gs
dec
pusha
mov
mov
inc
adc
jbe
and
aas
mov
loop
cmpsb
pusha
and
inc
and
xchg
por
hlt
cwtl
sub
xor
iret
sub
xchg
add
jb
add
mov
hlt
int
je
arpl
inc
in
dec
mov
sub
mov
inc
jmp
and
and
mov
sbb
shl
test
loopne
rcl
sub
loopne
pusha
and
in
push
xchg
mov
gs
mov
mov
or
push
pop
scas
push
loop
add
repnz
rol
mov
lret
loope
pop
adc
xor
push
push
sbb
jmp
push
addb
xchg
sbb
sub
add
popa
decb
fs
xor
dec
fistl
adc
dec
mov
add
pop
mov
xchg
cmp
jmp
pusha
nop
jbe
shlb
xor
cld
andb
or
loopne
push
jge
xor
dec
mov
mov
testl
mov
shlb
and
jg
inc
pop
jb
mov
and
cmp
push
xchg
and
or
in
aas
aaa
shl
or
xorb
sar
mov
pop
js
xor
adc
jb
inc
pop
pushf
cmp
xor
aas
aas
mov
mov
repnz
loopne
mov
sub
rorb
mov
mov
repz
mov
and
repnz
mov
lea
or
mov
add
stos
and
shl
inc
mov
in
std
pop
cwtl
imul
xchg
or
pusha
xorb
xchg
mov
pusha
cld
adc
inc
fimuls
shlb
outsl
mov
and
or
add
addb
inc
mov
add
mov
jne
es
stc
lods
xor
jbe
lods
call
and
out
adc
das
in
mov
jne
xor
andb
push
int3
pop
pop
xlat
test
pusha
or
mov
pusha
stos
rol
cmp
sbb
and
ja
ss
call
loopne
lods
shlb
mov
adc
int
aaa
dec
andb
loopne
shll
leave
int3
ss
push
pop
xor
je
hlt
dec
out
mov
sub
xchg
cmpsl
out
inc
inc
cmp
or
pop
cmp
pusha
mov
fcoml
fwait
adc
xchg
imul
stos
loopne
sbb
cwtl
xor
cmp
and
inc
in
std
push
shl
std
repz
pop
int
cmp
push
jp
int
xor
and
shl
xchg
cmp
popf
rcr
in
rclb
fldcw
adc
enter
rorl
mov
subb
inc
mov
push
push
call
and
aaa
xchg
sub
add
insb
adc
sub
and
push
and
daa
dec
mov
ret
or
into
sbb
stos
pop
inc
jecxz
xchg
fsubs
loopne
cwtl
mov
loop
mov
cmp
movsb
inc
subb
and
rorl
test
push
and
push
out
mov
pop
inc
je
std
sbb
insl
cmp
loope
mov
arpl
jae
repnz
mov
fadds
push
mov
fisttps
dec
sbb
ss
loopne
sub
pusha
addb
xchg
rcl
jne
sbb
loop
fwait
sub
inc
andb
test
orb
and
hlt
addr16
jnp
push
jae
outsl
pop
inc
gs
loopne
jmp
addr16
adc
test
cmp
loopne
jb
sub
jge
jle
loopne
sbb
ret
mov
out
call
dec
aad
test
rclb
pop
lods
add
lret
xchg
pop
cmp
jle
stc
stc
in
pop
shl
lahf
in
push
in
data16
out
insb
jb
insl
mov
mov
rcrb
jno
and
cmpl
in
cmpsl
je
aam
mov
push
andb
mov
call
sarb
or
xchg
lods
add
sub
rolb
loopne
push
rolb
hlt
dec
mov
jg
jmp
mov
lods
and
loopne
out
jnp
jae
hlt
loope
test
out
sub
cli
cmc
icebp
mov
inc
pop
mov
stos
rcr
cmp
loopne
jo
or
pusha
shrb
add
cwtl
jno
arpl
pusha
inc
mov
es
orb
sub
inc
pusha
dec
test
and
stos
jns
addb
adc
mov
lretw
or
fs
sub
add
lock
js
bound
dec
dec
icebp
mov
lret
mov
pop
xor
bts
pusha
rorb
iret
imul
loopne
and
stos
xchg
fdivr
ds
cli
das
pop
add
push
dec
push
add
loopne
adc
pusha
rclb
sbb
or
sbbb
push
fistpl
dec
lock
shll
mov
add
push
adc
xchg
adc
and
add
rcll
jo
push
sub
idiv
mov
sub
cmc
jl
imul
add
sbb
fsubr
shlb
mov
add
data16
lods
mov
mov
add
inc
mov
enter
hlt
cmp
xchg
push
outsb
andb
fsts
out
xor
jmp
add
inc
loopne
jg
movsl
cmp
mov
or
adcb
aam
ljmp
xlat
hlt
lret
dec
xor
daa
stc
in
push
inc
pop
and
mov
or
sahf
pop
cs
subb
and
shlb
ss
out
andb
jns
insl
sub
imul
stc
pop
call
ret
lcall
jmp
xor
inc
pusha
push
testb
jae
pusha
add
imul
rcl
pusha
repz
cmp
insb
pusha
add
or
push
loopne
les
js
and
adc
shl
pop
stc
mov
sahf
imul
add
adc
push
mov
loopne
and
xchg
loopne
fwait
sahf
inc
in
mov
hlt
pop
shlb
and
dec
jb
pop
xchg
mov
pusha
jno
add
and
inc
subb
cmpsb
addb
out
and
jp
adc
mov
rolb
lret
test
repnz
pop
int
les
clc
sbb
rorb
shlb
lds
sahf
push
aaa
push
into
les
inc
jge
pop
cmpsl
mov
inc
les
filds
sub
adc
sahf
adc
mov
inc
sbb
sub
or
xchg
pop
loopne
shlb
or
add
inc
pop
push
jns
lret
das
mov
xchg
add
inc
jnp
repz
rolb
pop
sahf
testb
and
int
les
test
rcrb
inc
loopne
in
xor
lods
pusha
mov
add
mov
adc
fs
mov
inc
inc
decb
inc
pop
out
test
loopne
jne
mov
push
cmp
call
stos
inc
loopne
add
mov
insb
scas
cmp
imul
xchg
shl
xchg
mov
and
stc
es
pop
push
pop
dec
add
mov
movsb
add
mov
cltd
fiaddl
mov
xchg
mov
push
mov
and
stos
mov
pusha
pusha
push
jecxz
cli
inc
inc
dec
jb
pop
add
cmc
bound
mov
and
icebp
cmp
sub
add
jae
loopne
stos
loopne
jae
mov
add
jle
js
sahf
das
mov
adc
and
addb
pusha
je
mov
jns
xor
cmpb
in
std
ret
push
xchg
pusha
rcrb
pusha
and
push
jg
outsl
lahf
fldl2e
lods
in
scas
imul
repnz
or
mov
and
jl
mov
mov
sarb
inc
mov
cmpsb
mov
lea
loopne
sbb
fsub
popf
nop
push
andb
cmp
int
rolb
jns
or
inc
imul
or
mov
out
andb
mov
add
dec
lret
mov
ja
and
daa
ljmp
and
xchg
mov
loopne
jno
mov
out
xor
mov
andb
mov
and
andb
inc
dec
shl
jne
and
and
subb
inc
mov
test
mov
mov
loopne
mov
loopne
das
movsb
pusha
and
ljmp
loopne
add
xchg
cld
jb
and
jl
pusha
pusha
sub
sarb
imul
or
mov
cmc
dec
jmp
cmp
inc
adc
mov
clc
xlat
call
aam
sub
pop
sbb
repnz
xor
inc
mov
mov
jb
inc
add
pusha
push
mov
sub
shlb
mov
sahf
imul
inc
sbb
mov
mov
mov
xchg
or
push
push
or
gs
arpl
mull
xor
imul
sub
ss
mov
mov
and
inc
xor
jnp
or
mov
pusha
movsl
push
add
inc
xor
fs
mov
inc
pushf
mov
cmp
in
inc
dec
imul
into
stc
xlat
lock
pop
bound
inc
mov
pusha
inc
fdivrp
out
push
ret
mov
pop
push
inc
and
and
pusha
mov
inc
ja
bound
scas
fistl
inc
sub
iret
mov
pusha
adcb
fimuls
sub
jo
rcl
or
and
xchg
nop
add
shrl
add
and
shll
rcrb
push
pusha
xorb
or
mov
mov
push
push
and
cmp
popa
lahf
aas
pop
insb
dec
cmp
shl
mov
xchg
andb
add
inc
cli
and
add
mov
jp
ja
into
out
leave
aaa
mov
cwtl
inc
data16
in
out
bound
dec
lods
addb
inc
loopne
sbb
mov
or
mov
stos
pusha
sarb
dec
mov
xor
cmp
jns
flds
add
pop
inc
and
xorb
add
xchg
aam
cltd
xor
shrl
adc
loop
add
cmp
or
orb
rolb
add
icebp
add
hlt
mov
cmp
insb
cwtl
jmp
inc
out
sbb
sti
pop
std
ds
xor
addb
inc
cmp
lret
inc
pusha
out
sub
shlb
mov
inc
sub
inc
loopne
lea
mov
pop
dec
xlat
iret
cld
dec
inc
pop
arpl
mov
mov
sbb
mov
mov
ret
das
mov
inc
sbb
cmpsb
pusha
pusha
daa
xor
fucomp
pop
inc
pusha
mov
movsl
leave
push
rolb
ja
xchg
cmp
dec
or
pop
repz
jb
movsb
pusha
inc
retw
xlat
inc
rolb
pusha
pusha
xchg
int3
sbb
ret
xorl
movsb
add
ror
sbb
jb
cmpl
outsl
pop
lahf
fadds
sti
cmp
in
insb
push
push
or
and
or
out
popa
push
test
addb
add
mov
mov
and
mov
or
xor
std
neg
dec
cmp
imul
addb
mov
cmpb
in
imull
inc
movl
and
adc
aas
xor
mov
jmp
fsts
cmp
add
sahf
es
int
mov
fildll
xor
mov
jmp
movsl
mov
sbb
addb
add
cmp
mov
popf
outsb
add
sbb
sahf
push
rcll
xchg
js
pop
test
iret
bound
out
dec
jns
xor
lret
mov
popa
mov
ds
rcrb
stc
jle
dec
dec
outsl
frstor
add
adc
and
xor
lcall
in
das
aam
aaa
pop
mov
adc
mov
cmp
xor
repnz
rol
pop
sbb
xchg
ret
xchg
shl
mulb
pusha
and
es
rorb
add
and
pusha
movsl
enter
aas
repnz
lret
andb
out
cmpsl
andb
movsl
into
mov
loopne
shll
mov
fstpl
je
call
stc
jae
loopne
xor
sbb
xor
out
pop
fcom
and
cmc
into
outsb
ja
fisubl
push
mov
popa
dec
push
rorb
andb
inc
scas
inc
add
pusha
add
push
cmp
and
mov
cli
gs
sarb
or
add
lea
mov
mov
test
shl
cmpsl
inc
cmc
xor
sbb
daa
pop
dec
mov
or
pop
push
xor
loopne
repz
pop
mov
lret
loopne
imul
stos
xor
pop
sub
sbb
test
sarb
sbb
insl
xchg
pusha
lret
mov
lcall
and
mov
add
mov
pop
ss
dec
jg
push
pop
out
push
pop
addr16
push
and
xor
dec
test
inc
jmp
rolb
call
fistps
rcll
xchg
inc
mov
pop
gs
stos
add
lds
mov
inc
adc
mov
sbb
add
ss
shl
lea
sbb
inc
jecxz
pop
sub
and
add
mov
jl
andb
mov
rolb
add
paddsb
adc
cld
and
fildl
mov
add
adc
mov
xor
daa
mov
xor
dec
insl
add
add
mov
inc
mov
inc
ds
cmp
mov
or
ss
andb
fiaddl
call
and
shlb
ret
cmpsl
shrl
xchg
aad
xchg
lahf
jbe
stc
in
inc
test
outsl
mov
loopne
test
add
aas
fcompp
mov
cmpb
add
stos
enter
ljmp
movsl
loopne
shlb
rcrb
pop
adc
dec
fs
in
adc
mov
loope
addr16
mov
loopne
addr16
jae
mov
enter
xchg
loopne
repnz
lods
mov
pusha
loopne
sub
mov
lahf
pop
xchg
test
scas
and
and
mov
pop
test
out
add
add
ss
stc
xchg
adc
sbb
imull
lods
add
dec
scas
les
push
mov
subb
fdivrl
sub
bnd
iret
xchg
je
push
cli
mov
or
mov
lahf
fstpl
loopne
fdivl
xchg
jge
sub
and
clc
push
addr16
or
shrb
jmp
xchg
subb
test
loopne
jl
lods
mov
rcrb
and
fisttps
mov
xchg
sub
rolb
push
andb
inc
mov
daa
sbb
je
loopne
sbb
imulb
pop
insb
jl
popa
xchg
pushf
insb
push
imul
jmp
pop
jns
xor
adc
mov
int3
cmp
add
push
sbb
mov
pusha
mov
ss
in
lea
cmpsb
shlb
movsb
and
shlb
cmp
rcll
xchg
mov
xchg
jae
pop
repz
xor
out
xor
loopne
das
dec
mov
xchg
pop
testl
sub
mov
add
test
sbb
test
mov
repz
xlat
add
shl
shr
add
pop
jmp
push
shl
pop
mov
xor
andl
aam
inc
shlb
js
xchg
cld
call
dec
outsb
or
sarb
mov
lahf
cli
push
hlt
dec
sti
andl
mov
sub
adc
and
dec
cmpsl
cmp
loopne
push
icebp
fwait
push
lods
adc
mov
orb
xorb
jno
mov
lds
pop
shll
sub
loopne
add
and
push
xor
inc
out
rclb
mov
pushf
or
jae
stos
sbb
sbb
addb
pop
andb
mov
rep
fsts
sbb
mov
cmc
add
jmp
xor
hlt
sub
add
adc
pusha
mov
insl
andb
inc
mov
pusha
or
rclb
mov
dec
pop
ret
push
adc
inc
adc
hlt
test
xlat
stc
clc
shll
mov
mov
out
pop
cmp
push
add
adc
fiadds
push
dec
mov
jmp
jge
cmp
clc
sbb
push
jecxz
sub
clc
in
jbe
out
push
mov
arpl
cltd
inc
inc
loop
sub
orb
insb
outsl
dec
mov
push
test
andb
jp
pusha
rcrb
mov
negb
dec
ss
pop
dec
andb
pusha
insb
push
mov
ficompl
push
pop
stc
xchg
bound
loopne
leave
push
sbb
dec
call
inc
test
inc
inc
arpl
inc
mov
imul
repz
ror
mov
std
mov
jns
subl
lods
and
xchg
insl
popa
add
or
loopne
mov
pop
pop
adc
clc
xor
inc
outsb
cwtl
jp
lock
pusha
mov
mov
add
inc
ljmp
mov
adcl
mov
mov
push
cmp
sti
outsl
or
xor
enter
mov
sbb
gs
adc
arpl
daa
and
aas
call
mov
imul
int3
ss
loop
jbe
and
push
or
adc
pop
jno
add
lcall
pop
pop
push
addb
dec
jno
test
shl
jbe
jno
nop
push
rorl
andb
aam
sub
pop
push
jecxz
xchg
mov
inc
loopne
test
lahf
mov
inc
call
dec
mov
mov
mov
cmpsb
and
mov
mov
aas
cmp
loopne
jge
or
and
pop
insb
popf
pop
jo
or
jp
movsb
loopne
push
sbb
shrl
cmp
xor
cmpsb
add
sbb
xchg
and
add
mov
and
scas
addb
loopne
out
mov
add
negl
sub
inc
pop
mov
shl
xlat
imul
push
and
scas
mov
and
add
shlb
loopne
adc
inc
sbb
mov
and
iret
test
fildl
xchg
shlb
xchg
mov
mov
lock
mov
inc
lods
andb
js
lea
mov
repnz
cld
dec
xchg
lcall
out
out
not
dec
clc
adc
loope
testl
aad
push
add
mov
push
jge
xor
into
stos
imul
sbb
inc
mov
enter
dec
out
stc
rcll
mov
or
pop
mov
stc
imul
bnd
out
incl
icebp
mov
xlat
sub
out
dec
clc
jecxz
sti
add
mov
loop
push
sbb
pop
cltd
pop
shl
orl
add
repnz
outsl
inc
xor
imul
fnsave
xor
in
mov
imul
inc
mov
and
inc
das
nop
jmp
je
dec
xor
lods
add
mov
inc
mov
add
pusha
mov
jg
sub
and
or
fiaddl
mov
cmp
xor
lods
rolb
rorb
loopne
add
pusha
lods
inc
xor
rcr
cmp
rolb
pop
sbb
and
push
sbb
pushl
aad
pop
cmp
daa
push
ret
push
mov
loopne
sub
and
and
add
dec
mov
aam
cmc
xchg
movsl
hlt
int3
lods
out
or
loop
mov
xor
dec
and
pusha
fadds
addb
rol
sarb
pop
jne
or
pusha
sub
add
sbb
or
lea
sbb
das
ret
lcall
inc
andb
ja
cltd
mov
cli
sbb
add
std
push
adc
add
push
add
out
lret
mov
scas
add
jbe
stos
shlb
xchg
fwait
out
mov
inc
mov
rcll
je
data16
hlt
and
inc
cmc
push
mov
rclb
or
pop
adc
test
inc
ja
xchg
lods
lds
mov
xchg
adc
loopne
in
inc
fs
lods
shl
mull
mov
and
push
pusha
and
xchg
mov
mov
pusha
or
ret
aam
add
cltd
cmp
inc
inc
les
cmpsb
add
fdivr
cwtl
roll
int
pop
pop
xchg
jp
jmp
and
ja
mov
add
pop
stc
inc
hlt
xor
mov
jg
cmpsl
xchg
sar
or
shlb
dec
aas
jns
mov
pusha
cmp
cltd
insl
xor
pusha
mov
mov
scas
sub
inc
inc
jge
addb
orl
cmpb
sbb
xor
xchg
lcall
lret
cwtl
jbe
in
sub
cli
jb
rolb
lods
rolb
aas
jo
add
add
pop
stc
push
dec
push
repnz
cmp
jl
pusha
mov
ss
insb
mov
test
lods
rolb
punpcklbw
sbb
push
cmpsl
js
jo
arpl
pusha
add
loop
xchg
add
cmp
inc
aad
adc
fstl
arpl
push
sub
sbb
mov
movsb
inc
inc
xchg
mov
and
addb
inc
and
loopne
inc
and
fisubl
or
loopne
test
addl
sub
inc
int3
jb
lock
aas
sbb
inc
iret
jbe
dec
and
add
sbb
and
inc
xchg
pusha
repz
shrb
cmpsb
shlb
pop
add
dec
popa
test
inc
push
in
adc
xchg
test
js
mov
inc
dec
ja
stos
pusha
pusha
lret
fsubrs
mov
add
sub
add
out
lock
test
shlb
cmp
in
xor
xor
stos
and
rol
add
mov
rorb
iret
mov
jae
jnp
xchg
push
jp
rclb
mov
sahf
addb
and
loopne
add
loopne
add
hlt
add
sbb
and
xorl
test
pusha
or
rclb
and
cmp
sbb
push
roll
addb
push
in
sbbl
dec
mov
and
int3
cwtl
pop
push
lods
in
test
into
or
or
mov
or
add
sarb
iret
sbb
test
add
cs
inc
in
lret
inc
push
inc
mov
outsb
adc
dec
mov
pusha
bound
dec
lahf
lods
and
sbb
fwait
mov
loopne
add
pusha
mov
inc
imul
mov
xchg
outsl
or
enter
inc
add
mov
std
xlat
jmp
lds
repz
addb
and
fwait
in
cmc
dec
sbb
push
mov
dec
ror
xor
cmp
andb
pop
or
cmp
ds
pop
adc
jge
inc
lret
xchg
fimuls
jl
xlat
hlt
xor
or
inc
bound
insw
aam
popa
add
mov
add
test
and
push
sar
xchg
mov
loopne
xchg
sbb
xchg
adc
push
ja
je
fs
cmpsl
cmp
pop
rcr
pop
cmc
out
stos
rolb
and
pusha
sub
jnp
aas
fsubl
mov
test
add
pop
inc
lahf
mov
aam
push
dec
jno
and
sub
and
jmp
fsubs
loop
call
cmpsb
inc
add
daa
xchg
xchg
insb
lea
movsb
and
rorl
stos
mov
mov
repnz
mov
inc
xchg
ljmp
and
into
addl
xchg
mov
test
scas
mov
push
rolb
pop
enter
imul
add
add
xor
mov
fs
ret
jecxz
add
cmp
inc
jge
enter
inc
rcrb
cli
push
push
ljmp
loopne
out
pop
lods
inc
inc
fiaddl
pop
jnp
add
jb
call
jno
pop
aas
arpl
fbstp
add
ljmp
mov
adc
insl
push
aad
shll
mov
test
andb
clc
lods
sti
and
or
rol
addb
pusha
loopne
dec
add
enter
mov
mov
loopne
jecxz
lahf
mov
inc
add
movsl
rorl
and
loopne
and
pop
popa
outsb
or
and
add
scas
shlb
fsts
push
fbstp
and
cwtl
stc
push
rolb
xor
pop
in
loopne
xor
inc
mov
or
jmp
mov
jnp
shl
mov
add
repnz
add
and
int
in
js
fwait
push
cli
sub
mov
ljmp
test
inc
mov
mov
clc
adc
push
or
pusha
push
fsubrl
fldcw
fdivs
pop
push
pusha
mov
pusha
pusha
mov
aam
add
add
and
inc
jnp
jmp
jo
inc
xor
mov
dec
add
mov
loopne
clc
mov
dec
stos
add
inc
pushf
dec
pop
repz
dec
cltd
inc
aas
lret
pop
adcl
loope
into
mov
addr16
call
loopne
mov
jge
scas
mov
sti
inc
imul
int3
mov
and
mov
mov
mov
push
pop
sub
inc
mov
mov
sbb
mov
adc
sahf
push
pop
andb
jo
shrb
add
outsl
cmc
test
loopne
jl
gs
and
mov
es
pop
repnz
shl
aas
dec
cmpsl
fcmovu
jl
add
mov
addr16
add
sarb
sbbl
add
and
movsl
push
test
mov
out
push
pop
mov
rolb
inc
and
fbld
mov
mov
or
xor
scas
sub
sbb
ja
sbb
pusha
mov
and
in
push
mull
mov
xchg
add
fldt
mov
hlt
xchg
add
lea
loop
xchg
imul
cmp
sahf
xchg
add
dec
lcall
sub
mov
and
lock
ret
int3
push
je
lock
xchg
clc
aad
loopne
repnz
jae
sarl
adc
sbbl
cmp
jp
fsub
sub
out
rclb
pusha
lock
out
add
cld
faddl
sbb
dec
xlat
xrelease
loopne
sbb
das
repz
adcl
loopne
pop
fucompp
add
pusha
pop
roll
cmp
xchg
out
lods
andb
loopne
fwait
daa
cmpsb
pusha
sbbb
pusha
mov
vrsqrtss
data16
inc
push
outsb
sti
insb
lds
loopne
cwtl
ficomps
iret
xchg
fwait
pop
jb
adc
shlb
jmp
inc
cwtl
mov
xchg
in
repnz
cwtl
adc
mov
and
sarl
jbe
shlb
and
pop
popf
dec
xlat
neg
bound
in
iret
mov
or
xor
mulb
pop
shll
inc
loopne
divb
cli
xor
add
stos
cmp
fldt
inc
imul
cmpsl
mov
sbb
sub
and
scas
pop
pop
and
or
mov
ja
and
fdivrl
xchg
push
push
clc
xchg
repnz
movsl
pop
add
adc
sub
fistpl
movsl
inc
popf
mov
aad
imul
out
sarb
add
mov
lret
ret
stos
loopne,pn
push
mov
mov
xor
cltd
mov
sbb
mov
pop
pusha
mov
jno
stc
in
pop
in
dec
fiadds
sub
add
loopne
jbe
inc
cmp
ljmp
lcall
std
sbb
ret
inc
xorb
mov
pusha
movsb
rolb
and
mov
xor
xchg
out
mov
loopne
push
int
mov
gs
xchg
xchg
adc
cmp
dec
dec
and
loopne
lahf
push
rcll
or
push
xlat
inc
xor
add
adc
std
jecxz
jl
mov
addb
scas
andb
loopne
xor
jmp
xchg
sahf
jae
rol
das
roll
jge
push
inc
pusha
mov
ret
mov
dec
fnstenv
mov
mov
mov
add
add
dec
and
stc
pusha
jge
adc
sbb
rol
mov
push
mov
mov
outsl
mov
jbe
push
jne
in
push
fdivl
lea
inc
fiaddl
and
adc
std
clc
ret
test
addb
add
push
mov
int
out
xchg
adc
and
loopne
or
mov
fnstcw
and
aaa
dec
sbbl
sarl
popf
push
lret
shrb
xor
mov
cmpsb
inc
inc
xor
outsb
jnp
and
rorb
mov
inc
inc
lea
loopne
pop
pop
xchg
out
dec
test
mov
or
pusha
add
cli
arpl
and
loopne
out
pop
outsl
ret
jne
jl
mov
mov
push
mov
sarb
ret
push
mov
adc
rcll
xor
mov
adcb
mov
pop
stos
mov
lea
in
stos
lea
mov
mov
and
les
push
test
inc
push
mov
addb
repnz
inc
iret
pop
xchg
add
fucomi
into
std
cmp
add
mov
xlat
push
and
and
or
into
test
push
or
or
jae
scas
addb
loopne
inc
sub
jnp
lret
mov
rorb
addr16
and
icebp
xlat
outsl
int
mov
dec
mov
inc
and
int
scas
out
mov
in
fisubs
mov
shlb
add
xchg
cld
lahf
adc
iret
jae
and
or
movsb
add
sti
lahf
outsb
fsubs
and
add
add
rol
ljmp
loopne
pusha
cmp
loope
push
jp
out
pop
lret
and
adc
push
jns
dec
cld
insl
push
nop
enter
js
dec
addb
mov
xor
xchg
mov
push
movsb
mov
and
xor
mov
and
fildll
sub
andb
loopne
fidivrl
jp
lods
je
mov
ds
scas
mov
add
mov
clc
xchg
popf
inc
xor
loopne
pop
mov
aad
cmp
push
inc
sbb
loopne
cmp
stos
inc
dec
jae
add
mov
movsl
movsl
jp
ljmp
xor
scas
out
push
dec
bound
loopne
jo
push
test
loopne
mov
loopne
jo
js
lock
lea
mov
ja
sbb
xor
imul
aad
sub
add
subl
loopne
push
cmp
adc
inc
cmp
push
adc
ljmp
cmp
fimull
loope
mov
rorb
cmp
in
cmpsl
mov
mov
aas
pop
icebp
addr16
imul
sbb
push
mov
push
push
mov
enter
xor
rolb
fcomi
icebp
mov
aaa
lahf
or
sub
sar
andb
sub
inc
pop
pushf
mov
mov
sub
loope
in
xchg
int3
imul
jmp
pop
jbe
ret
xor
loopne
mov
dec
sub
gs
xchg
mov
pusha
pop
sub
dec
loop
imul
stos
mov
repnz
and
jg
mov
mov
mov
xchg
cmc
mov
pop
aaa
pop
shr
jmp
push
push
imul
cwtl
cmova
int3
imul
and
fst
in
popf
mov
loopne
les
rclb
lret
push
push
outsb
dec
pop
imul
cmp
cs
add
mov
xchg
inc
push
lret
add
adc
sar
mov
xchg
jg
inc
inc
xor
gs
test
sub
pusha
fs
dec
xchg
daa
movsb
loopne
sub
inc
std
sbb
xchg
in
xchg
cld
imul
push
data16
sbbb
imul
jmp
mov
xchg
sub
pusha
cmp
test
mov
ret
inc
loopne
nop
xchg
clc
lods
shlb
ficoms
loopne
jecxz
jns
adc
stc
shll
add
in
sub
mov
loopne
cmpl
or
pusha
xor
aam
push
shlb
mov
push
ffree
jp
scas
mov
cmp
inc
insl
mov
and
sub
shr
xchg
push
in
sarl
ds
jno
jns
mov
jae
inc
sbb
sub
and
add
push
add
and
sbb
insl
je
shl
cs
pusha
fldt
out
mov
out
lea
sar
mov
pop
imul
or
push
fidivs
scas
es
subb
xor
addr16
fiaddl
pusha
jo
mov
jecxz
xchg
movsb
loopne
jbe
loopne
loopne
dec
xor
daa
testb
loopne
or
fbld
jmp
jae
fisubl
aaa
cmp
cmp
popf
incb
pusha
pusha
iret
mov
scas
stos
and
jo
sarb
fwait
mov
hlt
ljmp
loopne
into
cmp
shlb
adc
js
adc
push
push
mov
mov
in
fstl
push
lcall
lret
loopne
pop
lods
mov
jae
xor
arpl
pop
xchg
mov
xchg
aam
xor
call
decb
pop
repnz
inc
add
shl
lret
enter
push
icebp
add
pusha
or
dec
cli
cmp
jo
mov
push
and
inc
ljmp
shll
rolb
push
jge
and
loopne
mov
aam
mov
and
and
pusha
loopne
popf
dec
cltd
or
into
sbb
cmpsl
int3
push
pusha
repnz
mov
mov
addb
mov
out
xor
jae
std
stos
pop
and
cmp
xchg
xor
std
testl
push
lods
mov
and
sub
mov
shlb
fldcw
pusha
and
cmp
xor
cmp
pop
cwtl
jbe
add
insb
and
pusha
insb
out
jo
mov
and
addr16
dec
scas
rclb
cltd
lea
fsubp
scas
pusha
ror
mov
test
jecxz
mov
outsb
repnz
lahf
adc
mov
repz
xchg
push
mov
adc
and
jbe
cmp
dec
popf
outsl
lea
sub
push
inc
lods
cli
enter
scas
pusha
pusha
int
leave
add
shrb
mov
and
dec
jle
mov
loopne
sbb
aaa
rclb
fsubrs
lret
rol
mov
fisttpll
push
adc
or
jle
and
inc
xchg
sub
jg
fbld
and
shl
push
and
inc
lods
inc
ss
pusha
rorb
mov
aaa
and
shl
cmpsl
jge
pusha
sbbb
pusha
and
pusha
mov
test
jo
sub
lret
inc
sub
add
jp
sub
inc
stos
pusha
orb
sub
jno
outsl
xchg
pop
sub
andb
mov
inc
mov
idiv
mov
out
xchg
add
ljmp
or
dec
rolb
push
nop
push
add
fidivrl
add
in
inc
add
add
adc
pop
clc
shrl
xor
push
in
sbb
and
xorb
xchg
or
shlb
and
out
out
xor
shl
cmp
out
mov
addb
rcll
data16
loopne
sahf
mov
hlt
imul
add
inc
stos
in
adc
push
and
out
dec
scas
xor
cld
and
and
lret
loopne
or
sub
nop
out
xchg
jp
xchg
pop
je
adc
and
inc
mov
adc
jnp
insb
lea
and
ret
mov
push
sbb
fcoms
and
push
jl
add
aad
jle
rorl
cmpsl
rcrb
cmp
lret
cmp
lea
cli
sub
add
scas
inc
loopne
daa
nop
add
loopne
dec
sbb
out
addb
aad
mov
jae
push
loopne
jne
rolb
int
xor
rolb
mov
outsl
repz
jecxz
addb
mov
cmp
pusha
add
test
xorb
dec
test
sub
pusha
stos
dec
sbb
popa
dec
and
dec
inc
outsb
aas
add
enter
pusha
jb
xchg
mov
and
xor
push
sbb
call
shll
cmp
pop
cli
fisubrl
mov
jae
xchg
cs
orb
ds
addb
hlt
cmpsb
shlb
clc
xor
jmp
pop
pop
cmpsl
mov
mov
pop
je
icebp
mov
sub
fbld
loopne
sbb
lret
cmc
cmp
xor
add
sbb
out
shrl
pusha
rcrl
pop
mov
xchg
pop
or
add
loopne
lret
lcall
shll
pusha
rolb
push
pusha
rcrb
and
jb
mov
mov
pusha
shl
enter
pusha
adcb
lahf
les
js
cmp
pop
add
shl
cltd
popf
push
and
in
cmpsb
add
fs
fisttpl
add
inc
sub
sbb
inc
mov
pop
xor
call
add
insl
sub
cli
push
sub
mov
sahf
movb
jge
in
cld
scas
push
cs
rorb
cmp
xor
ret
rolb
mov
cwtl
and
or
scas
and
bound
adc
fldl2t
leave
test
add
push
addr16
sbb
jge
les
cmp
pop
cmc
add
shrb
in
lret
and
pop
bound
xchg
xchg
pop
pop
icebp
stos
repz
pop
dec
ret
je
push
xchg
push
rorb
xor
mov
push
pusha
xorb
addl
sbbb
imul
loop
mov
in
dec
hlt
mov
xlat
daa
std
lret
push
mov
pusha
pusha
sbb
mov
ffreep
push
inc
mov
and
inc
or
mov
outsl
cmp
shlb
rorl
aad
shrl
fildll
iret
lret
leave
jae
andb
dec
adc
dec
fcomip
or
push
loopne
push
add
mov
jne
mov
add
push
sbb
addb
sbb
push
loopne,pn
push
aas
jbe
imul
inc
je
cmc
mov
pop
sub
or
fwait
roll
push
xor
inc
rcrb
fisttpll
ror
pop
pop
mov
sarb
mov
inc
pusha
ss
xchg
frstor
dec
mov
fsubl
inc
add
in
testb
add
inc
inc
add
or
and
lret
jle
xlat
dec
stos
inc
andb
sti
in
int3
popa
mov
sbb
sub
loopne
and
mov
imull
xchg
int3
mov
lahf
aad
loopne
addb
mov
out
and
mov
add
dec
mov
adc
inc
pop
mov
loopne
sub
lods
sahf
push
addb
bound
sbb
inc
mov
loop
sarl
in
and
jb
pop
movsb
mov
push
jno
lahf
imul
in
mov
xchg
pop
loopne
mov
nop
push
ds
lahf
loop
mov
shrb
fidivrs
cs
loopne
test
adc
xchg
push
cld
jo
mov
and
xor
mov
and
idiv
cmp
testl
movsl
cmovbe
add
inc
jge
mov
add
repnz
pusha
inc
mov
loopne
or
and
push
push
mov
add
mov
inc
cs
inc
cltd
xor
inc
push
inc
pop
nop
mov
and
int
les
loopne
aad
pop
xchg
mov
mov
enter
and
daa
les
nop
aas
mov
inc
add
mov
andb
xchg
loope
add
add
mov
lahf
jae
loopne
insl
and
imul
and
aam
aam
shlb
push
das
addb
shr
pop
out
stos
inc
add
mov
mov
push
outsb
push
leave
inc
mov
jns
and
mov
out
loop
mov
xor
dec
jns
pop
push
push
pusha
loopne
and
icebp
fs
sub
add
inc
clc
sub
push
popa
push
adc
stos
mov
sub
pusha
cli
dec
mov
add
in
add
leave
pop
lcall
leave
lret
sub
mov
nop
repnz
adc
rol
xor
sbb
mov
inc
dec
adc
loop
out
dec
sub
and
add
push
mov
loope
shrl
mov
mov
pop
fwait
mov
dec
mov
mov
loopne
insl
cmp
mov
xchg
inc
int3
xor
repz
js
inc
mov
mov
outsb
in
inc
leave
jno
pop
outsl
in
movsl
xor
xor
rolb
cli
xor
js
mov
cmc
cld
jle
xchg
push
dec
and
inc
cmp
add
cmp
push
stc
dec
ret
inc
add
js
insl
adc
add
xor
mov
pusha
and
inc
addl
add
fildl
pop
adc
inc
loopne
pusha
lahf
sub
loope
mov
xor
imul
roll
js
jmp
sbb
add
scas
mov
mov
xchg
cmpsb
pusha
ror
cltd
aad
mov
dec
mov
inc
mov
adc
inc
call
sarl
cmp
sbb
mov
shr
cmp
and
int
inc
loopne
je
add
cwtl
cld
inc
out
mov
sub
loopne
inc
xlat
pop
es
ds
mov
push
xchg
xchg
mov
ss
clc
cmp
andb
mov
add
pusha
js
imul
adc
psubw
out
dec
subl
arpl
lret
out
mov
jl
popa
mov
pusha
mov
lock
push
mov
or
add
xor
outsb
push
mulb
sub
mov
dec
mov
sti
leave
xlat
inc
push
cmp
mov
sbb
inc
inc
mov
int
mov
rcl
mov
fcomps
xchg
mov
ss
push
xor
add
mov
or
xorb
add
and
or
loopne
sub
push
pusha
pop
fcoms
aam
movsb
add
rcl
pop
bound
inc
movsl
into
xor
lret
test
shlb
add
sbb
hlt
insb
jae
mov
iret
cs
mov
sub
lahf
jo
imul
lods
and
ror
dec
aad
cmp
into
mov
mov
mov
jmp
xchg
scas
loopne
outsl
mov
inc
nop
daa
in
add
and
xor
cmp
xor
mov
sbbl
pusha
inc
jge
test
add
mov
frstor
rorb
lret
adc
ss
and
jg
ljmp
outsb
cld
lods
in
in
xchg
jp
pusha
clc
xchg
rorl
mov
cld
push
les
or
cld
in
jae
sarl
imulb
add
inc
int3
xor
dec
xchg
inc
xor
lods
add
pop
inc
mov
sub
out
leave
call
pop
outsb
inc
ja
inc
add
movb
aaa
mov
or
outsl
and
lret
jb
add
pusha
push
pop
or
sbb
cmp
jmp
add
cmp
cmpsl
je
lods
pop
mov
out
pop
rcrl
int3
mov
dec
jp
rorl
and
cmp
adc
pusha
pusha
lea
movsl
daa
out
xchg
mov
iret
add
add
or
inc
push
outsb
xor
pop
sti
lret
cmpsl
aam
hlt
mov
inc
inc
cld
and
pusha
pusha
iret
dec
lods
mov
outsb
push
jmp
ja
mov
or
add
mov
add
lahf
sbb
mov
add
aaa
call
and
push
pop
and
inc
adc
das
mov
xchg
loope
sbb
inc
inc
test
pusha
mov
mov
pop
sahf
mov
lock
sub
and
pop
fsubrp
sbb
fs
or
add
inc
pop
leave
cmpsl
add
add
mov
xchg
in
rcl
adc
decb
test
fistpll
cmp
dec
dec
negl
out
sub
sub
cmp
xor
and
adcb
mov
lea
out
jae
jle
inc
add
rolb
test
mov
loope
out
mov
push
lcall
xchg
popa
call
cltd
cmp
lcall
ja
lahf
repz
stos
xchg
pop
hlt
cmp
mov
and
push
cmpsb
pusha
add
aas
cmp
pop
or
popf
push
and
outsb
int3
add
and
incb
xchg
jmp
roll
into
sbb
sub
fcmovbe
in
and
inc
movsb
loopne
xor
pusha
pop
sub
mov
fwait
xor
cmpsl
es
mov
inc
shrb
xor
and
mov
aas
mov
sbb
out
je
inc
mov
shl
xchg
clc
in
repz
mov
loopne
dec
jle
insb
adc
mov
add
addb
fwait
adcl
mov
test
inc
lret
add
jo
shrb
add
inc
nop
in
push
out
call
loope
test
sub
jge
push
lods
sbbl
repnz
popf
inc
pop
hlt
pop
das
cmpsl
dec
clc
adc
and
add
pop
daa
and
pushf
or
in
xor
outsl
lret
adc
int3
jb
mov
add
fcomps
lcall
ret
je
inc
sub
bound
divl
test
add
dec
or
shlb
mov
add
and
clc
std
push
fidivrs
mov
push
addr16
cltd
jbe
jecxz
xchg
enter
in
mov
aam
and
jnp
pusha
inc
sti
andb
cli
add
pusha
cmp
hlt
addl
sbb
sbbl
je
and
iret
loopne
stos
sub
and
fmull
shlb
add
mov
movsb
pusha
mov
jb
addb
test
push
dec
int
sbb
mov
and
daa
push
xchg
xor
inc
std
call
add
test
pusha
imull
and
imul
stos
inc
loopne
or
cmp
add
mov
push
xchg
fisttpl
cld
xor
and
mov
jnp
jb
push
rcrb
fsubr
mov
je
arpl
fsts
sub
pusha
rclb
into
pop
hlt
xchg
pop
xor
push
mov
lcall
cld
ss
xor
ljmp
lahf
pop
jb
lea
mov
arpl
mov
jnp
jae
xchg
sub
out
add
lock
xorl
mov
mov
fimuls
jnp
cmc
sbb
loopne
int
pusha
mov
loopne
and
mov
jmp
lods
xchg
jecxz
push
cmc
jmp
aaa
and
lods
cmpsb
loopne
mov
mov
cmp
push
rolb
mov
aad
inc
andb
into
dec
lock
jmp
mov
lods
loopne
xor
fs
jge
mov
das
fwait
jecxz
out
and
sahf
jb
sub
movsl
ds
insb
dec
out
addb
stos
rolb
sub
jns
int
aas
js
xor
mov
push
jle
jo
aaa
lcall
adc
adc
out
push
push
pop
push
mov
pop
divb
bnd
inc
or
inc
aaa
js
fmull
jae
rolb
push
mov
pusha
in
jp
cmc
mov
mov
rcrb
mov
js
mov
mov
pushf
cld
test
orb
mov
stc
mov
jb
lcall
jns
stos
and
cld
lds
cs
or
sbb
adc
fcomi
incb
mov
sbbb
mov
mov
lret
leave
je
cmc
lea
aas
xor
cmp
sti
outsl
pop
ljmp
and
cmp
fcoms
ret
test
mov
fwait
aam
mov
pop
loop
int
loop
sub
jg
sub
pusha
and
pop
mov
push
int
push
fmull
pop
mov
popa
cmp
sahf
xchg
mov
rolb
movsb
add
add
inc
mov
sub
inc
and
ljmp
jg
call
sub
imul
mov
mov
in
pop
mov
inc
mov
and
rcrb
push
inc
mov
loopne
pop
inc
sahf
bound
nop
loopne
fldcw
cwtl
push
mov
mov
sbb
in
or
mov
mov
loopne
push
pop
dec
cmp
clc
push
jp
bndldx
mov
loopne
inc
shl
mov
inc
loopne
adcl
dec
mov
dec
mov
sub
and
shlb
ds
cmpsb
inc
inc
push
cwtl
add
stc
sbb
test
sbbl
jecxz
sahf
pop
addl
popa
add
mov
adc
xor
daa
sub
lcall
xchg
xchg
jo
call
or
jg
lret
mov
sbb
inc
jae
loope
dec
sub
nop
test
mov
fadds
and
add
sub
psubq
adc
in
jo
sbb
mov
test
pusha
xor
and
and
pusha
loopne
inc
in
push
dec
out
sbb
cmpsl
test
dec
into
mov
push
mov
mov
xor
sub
add
into
lret
cmpsl
push
and
or
mov
jnp
call
pop
sub
inc
inc
inc
scas
sti
cmc
roll
sub
gs
jno
rorb
or
and
pop
addb
adc
xchg
ret
add
mov
lock
cli
nop
sbbl
mov
pop
ds
and
and
cmp
in
jg
rolb
nop
xchg
mov
js
bnd
dec
je
and
mov
xchg
lds
imul
jle
andb
ret
popa
mov
ja
cmp
jp
jne
jb
lock
adc
pop
cld
mov
sub
add
and
mov
sti
push
rolb
jne
in
jno
add
in
cmp
push
add
adcb
adc
mov
movl
push
gs
cli
out
pop
frstor
aas
shl
jge
popf
cltd
movsb
mov
pop
sbb
les
xor
pusha
inc
cmpl
shrl
and
call
cmp
xlat
jg
in
xor
cmp
rolb
out
push
or
cld
mov
mov
bound
mov
inc
sbb
add
loopne
inc
sbb
adc
out
push
mov
scas
mov
mov
mov
adc
or
mov
sbb
into
push
mov
mov
sbb
in
inc
aam
jp
xchg
sti
lahf
push
lret
mov
divl
sbb
pop
add
cmpsl
lcall
or
addb
push
insl
push
add
add
xchg
add
cmc
jge
pusha
stos
inc
add
xchg
in
addr16
movsl
cmc
sti
iret
cmp
sub
pushf
xchg
ds
inc
sub
loopne
pop
fiaddl
xchg
lock
cwtl
lcall
je
lock
lahf
adc
mov
jle
mov
inc
pop
xlat
mov
mov
add
dec
jp
sbb
push
loope
fwait
and
lea
add
loop
test
in
cmc
or
mov
xchg
mov
lock
and
inc
jb
mov
sbb
test
mov
mov
jb
and
push
out
sbb
loopne
add
in
adc
orl
fwait
mov
addr16
arpl
scas
addb
mov
mov
inc
and
data16
cmpsb
and
or
pusha
ds
rorb
xor
xchg
nop
lret
shlb
cmp
int
mov
jbe
push
and
lret
mov
shlb
jo
shlb
nop
pop
fbstp
cmpsl
je
das
in
cwtl
mov
mov
rcl
aaa
mov
jo
dec
leave
cmp
mov
mov
mov
xchg
imul
add
ss
in
inc
mov
insb
mov
cmp
and
adcb
cmp
ss
cmc
pop
loop
sbb
rolb
mov
adc
not
cltd
jl
inc
add
inc
add
mov
inc
loopne
sub
sub
xor
mov
out
fsubs
and
or
inc
imul
sbb
mov
das
mov
arpl
cmc
xchg
mov
dec
pop
inc
mov
loopne
test
sub
inc
push
and
add
aad
arpl
sbb
jmp
imul
lahf
mov
sub
enter
mov
xor
and
add
pop
sub
aad
cmp
test
add
addb
pop
adc
inc
sahf
xchg
sbb
push
and
push
adc
pop
insl
test
rcl
scas
pusha
loopne
andb
push
cltd
fdivp
add
push
pusha
and
fsts
int3
outsb
lods
rolb
add
xchg
and
lock
mov
push
andb
jge
jno
adc
movsl
js
mov
and
notb
and
arpl
add
lret
pusha
loopne
jo
xor
iret
mov
add
pusha
stos
xchg
out
loopne
pop
jp
ja
jb
and
inc
int
fidivrl
pop
fisubs
rcrb
test
and
rolb
mov
lret
push
mov
lret
sbb
std
jle
gs
out
rcll
mull
popf
les
mov
enter
outsl
iret
aad
scas
xor
xor
jecxz
popa
adc
mov
cli
repz
pop
aam
ret
scas
andb
pop
stos
cmp
inc
das
dec
repz
mov
pusha
outsl
notl
mov
shlb
mov
jns
sbb
pop
enter
ret
sarl
and
in
lahf
mov
cmpsb
inc
pusha
sahf
scas
and
sti
outsb
ret
ficomps
and
call
lods
mov
insl
xchg
add
pop
sbbl
outsb
jno
mov
jmp
mov
mov
insl
xchg
mov
inc
adcb
xchg
call
daa
pop
out
rorl
add
nop
clc
and
loopne
add
add
addb
pop
or
cmc
addb
xchg
pusha
dec
cmp
aad
imul
jp
mov
divb
mov
shll
loope
xlat
dec
fs
in
pop
pop
jmp
inc
dec
jb
pop
xor
call
cmp
addb
mov
scas
addb
add
xchg
aas
mov
outsb
jp
addr16
inc
iret
cmp
ja
icebp
stos
mov
and
orl
cmc
push
rolb
loopne
pop
rorb
orb
gs
xchg
mov
cmp
add
sbb
repz
stc
xor
inc
mov
xor
xor
scas
sahf
mov
ja
mov
sahf
fldt
pop
or
pusha
and
les
test
add
lret
das
or
mov
push
pusha
add
mov
enter
insl
mov
jle
inc
aad
inc
mov
addb
inc
or
inc
je
or
sub
addr16
loopne
rol
lods
sub
fidivs
outsb
sbb
loope
add
jb
sub
jmp
std
lret
cmp
outsb
popa
inc
xchg
pop
addr16
push
sbb
mov
adc
jecxz
mov
cmp
and
inc
aas
push
jns
xor
pop
arpl
loope
sub
jb
mov
mov
add
pusha
imul
pop
les
jno
ds
lods
and
addb
sti
imul
push
inc
loopne
sbb
and
xor
testl
addr16
push
push
loopne
stos
push
fiaddl
test
fsubl
inc
dec
and
pop
sbb
xchg
loopne
mov
and
dec
adc
sub
andb
fsub
mov
xorb
and
loopne
mov
insl
dec
sbb
sub
push
add
andb
xor
stos
inc
mov
lret
xor
jecxz
mov
orb
add
loopne
fsubrl
loopne
cmp
and
mov
ljmp
jg
xchg
xor
cmc
cli
cmp
int
or
shlb
es
cmc
lock
push
sbb
mov
xchg
dec
inc
jo
inc
xchg
int
inc
jns
mov
inc
testb
imul
and
lds
out
fbld
lock
stos
mov
mov
fcomps
or
mov
push
inc
pusha
lods
andb
inc
lea
imul
stos
sub
addb
or
and
mov
gs
adc
and
push
cmpl
jg
and
mov
dec
int3
pop
insl
enter
loopne
mov
dec
mov
ret
add
arpl
jo
roll
and
jp
cli
fnstenv
xor
shll
rclb
jae
push
push
leave
mov
sbb
pusha
pushf
jae
pop
addb
inc
jb
jne
sbb
ss
pop
arpl
aaa
jns
mov
ret
insb
inc
adc
inc
sbb
push
lret
sbb
cmp
and
or
movsb
addb
mov
mov
inc
rcrl
mov
inc
cld
popf
pop
add
jg
mov
inc
dec
fwait
jp
or
sahf
push
sub
inc
and
sub
je
addb
and
pop
les
add
add
and
dec
or
inc
sbb
add
sbb
jp
pop
fdiv
fdivl
iret
sarl
es
and
xchg
sub
daa
mulb
mov
jg
div
jb
notb
mov
sub
stos
test
addb
add
addb
pusha
inc
xchg
addr16
inc
dec
xchg
testb
icebp
andb
mov
movsl
loope
fs
inc
test
cmp
mov
and
jmp
sub
push
in
loopne
mov
cmpsb
rolb
andl
add
daa
mov
dec
xor
cmp
mov
mov
jp
loopne
and
xchg
inc
xchg
cs
mov
fisttpl
out
imul
inc
jne
adc
std
stc
xor
addb
mov
and
mov
jbe
mov
out
xor
add
arpl
out
ret
and
rolb
inc
mov
ret
mov
je
push
xchg
push
andb
ret
sar
mov
inc
pusha
cmp
push
pop
sub
shl
dec
bound
jbe
xor
push
and
sub
inc
and
and
ja
adc
stc
mov
test
pusha
pusha
lahf
insb
sbbl
mov
jo
adc
stos
loope
loopne
pop
jecxz
loopne
xchg
sub
add
pop
jns
inc
pushf
scas
rcl
cli
stos
inc
int
popa
int
inc
and
add
mov
jp
adc
pop
xor
jnp
mov
pusha
add
jmp
ljmp
addr16
fcompl
cmp
mov
loopne
push
fwait
xor
mov
jmp
mov
rorb
in
mov
pushf
repz
lret
jb
jecxz
cmp
inc
shl
pop
pop
in
dec
cmp
inc
inc
dec
cld
xchg
ret
out
dec
pop
push
shlb
stc
push
loopne
loop
ja
inc
mov
jnp
daa
sbb
add
lods
add
inc
push
pop
and
pushf
bound
jle
sbb
push
push
addb
bound
xor
push
stos
mov
jmp
ljmp
mov
mov
sti
rcll
xorl
shlb
mov
lcall
adc
andb
and
stos
rcrl
mov
adc
add
pop
mov
test
dec
stos
or
cwtl
mov
in
les
add
loopne
inc
loopne
or
adc
pop
and
subb
inc
cmpb
js
and
jge
mov
mov
data16
int3
out
cmp
shlb
mov
add
xchg
cld
mov
xlat
dec
roll
enter
xchg
or
cmp
sbb
mov
and
add
sub
jmp
lcall
mov
jo,pt
loopne
adc
push
mov
mov
jno
out
inc
inc
mull
mov
push
add
aam
rol
or
jnp
fisttpl
adc
lcall
std
sti
stos
andb
sti
hlt
push
adc
xchg
push
sahf
push
fdivr
popf
cmpsl
outsb
movsb
and
jmp
inc
repnz
stos
or
inc
shlb
and
or
rolb
mov
or
out
sub
shlb
jb
mov
mov
pusha
mov
call
scas
negl
sub
mov
shlb
xor
ds
ret
push
out
rol
sub
loopne
lret
or
add
pusha
cmp
inc
loope
inc
subb
loopne
lds
cmpb
cmpsb
pusha
mov
push
inc
loopne
push
xchg
popa
cmp
mov
jne
inc
inc
movsl
icebp
repz
in
loopne
mov
rclb
in
rcrl
inc
add
or
loopne
lahf
fcoms
aaa
and
inc
cmc
inc
push
into
into
mov
mov
mov
andb
rolb
andb
outsl
aad
push
pop
add
cltd
loopne
mov
dec
dec
stos
lret
and
and
and
push
shrl
pusha
pusha
aaa
sub
pusha
imul
cmp
sbb
xchg
insl
dec
cmp
out
inc
push
fs
lds
insl
das
sub
sbb
xchg
mov
rolb
lods
shll
les
and
test
inc
andb
cmpsl
pop
test
mov
rolb
fldl
insl
xchg
inc
in
loopne
shll
lcall
lret
mov
lea
mov
mov
adc
inc
and
pop
xchg
stos
jmp
mov
shrb
shl
ret
inc
adc
mov
addb
xchg
dec
cmpsb
rolb
push
adc
aaa
mov
ljmp
in
mov
mov
out
or
shl
mov
data16
jge
lods
xor
pusha
pusha
adc
movsl
pcmpgtd
dec
fwait
cmpsb
shlb
aas
aam
in
xchg
hlt
leave
test
xor
in
cs
pop
inc
fwait
lea
into
leave
arpl
sqrtps
and
mov
and
add
fnstsw
adc
mov
cmpb
fsubrp
mov
and
cmp
mov
xchg
push
shl
push
push
xchg
pusha
jbe
loope
add
movsl
jecxz
add
xor
iret
repnz
sahf
test
loopne
ret
lea
add
rolb
mov
inc
jns
add
orb
shll
push
and
out
movsl
mov
mov
cmp
mov
sbb
and
adc
inc
mov
push
sbb
call
inc
push
and
jle
mov
ret
and
loopne
push
add
mov
and
pusha
std
in
daa
popf
testl
arpl
rcrb
cs
loopne
sbb
jg
out
sbb
je
cs
push
pusha
shr
jmp
stc
mov
shlb
xor
hlt
sbb
movlps
lds
dec
and
orb
or
out
rclb
out
cmpsl
push
lods
and
xchg
fldl
sub
cltd
pop
das
sbb
adc
or
repnz
pop
or
jge
sub
inc
repnz
icebp
out
imul
mov
loop
loopne
lret
jle
lea
rcrl
loopne
cmp
pusha
int
jno
push
or
and
test
add
cwtl
ljmp
fisttpll
and
psubusw
aaa
pop
shufps
orl
cltd
lcall
lahf
dec
add
rolb
add
in
jae
aas
cltd
fstpl
add
lcall
lods
loopne
push
jo
shlb
mov
and
loopne
test
addb
jns
jo
inc
pusha
dec
xchg
lods
mov
inc
lods
xlat
div
xchg
xlat
jge
insb
mov
cmp
dec
cmp
imul
mov
sbb
daa
in
jg
inc
or
int3
adc
and
xchg
test
pop
aas
dec
jg
inc
aam
out
and
mov
add
xlat
dec
fdivr
aam
addb
jnp
stos
decb
add
and
loopne
adc
mov
int
leave
pop
aaa
dec
hlt
add
and
and
cltd
pop
addr16
cmp
mov
sbb
lods
cmp
gs
pop
into
mov
enter
loopne,pn
repnz
out
aaa
or
sub
mov
test
cmc
outsb
xor
stos
lods
out
sub
popf
imul
or
pusha
in
lcall
mov
and
inc
inc
and
pushf
xchg
loop
adc
mov
leave
ret
mov
inc
int3
icebp
decb
dec
mov
arpl
and
jae
iret
adc
subb
nop
cltd
pop
jb
or
rolb
pusha
mov
push
rolb
clc
pop
mov
add
pusha
shlb
adc
loopne
fisttps
cld
sar
inc
dec
jecxz
jmp
xchg
clc
mov
cmp
mov
cmpsb
loopne
iret
xchg
pusha
xorb
fistps
and
ljmp
pusha
sbb
xor
fisubrs
lock
fidivs
into
mov
rclb
loopne
test
inc
lahf
imul
mov
pusha
add
fnstenv
jno
xor
push
mov
and
inc
jb
fidivrl
lods
add
mov
cmp
loopne
pop
test
inc
jg
in
inc
loopne
aad
push
sbb
pop
addr16
dec
out
call
dec
sarl
ljmp
into
sbb
stos
pusha
and
std
stos
andb
pop
dec
fwait
gs
jmp
mov
pusha
cld
outsb
adc
mov
inc
xchg
stc
xchg
pusha
rorb
mov
add
cwtl
add
inc
pop
repz
sahf
sub
out
js
outsb
out
sti
insl
in
andl
jmp
gs
sub
mov
xchg
mov
imul
push
mov
lret
imul
inc
xchg
int3
icebp
sbb
insb
pusha
inc
pusha
rolb
jo
dec
ja
pop
sbb
xor
mov
cmp
pop
leave
push
push
sbb
sub
xor
dec
loope
fwait
pop
mov
jge
pop
adc
cli
jge
xchg
aam
daa
or
lods
addb
inc
insb
inc
mov
and
data16
xchg
and
loopne
ret
pusha
pop
push
lahf
mov
mov
and
andb
push
mov
add
loopne
jo
lcall
sub
rolb
mov
inc
mov
mov
xchg
xchg
add
pusha
or
addb
shrb
mov
daa
sysret
outsb
dec
fcoms
cmc
int3
dec
pop
fdivrp
dec
and
and
mov
pusha
jp
das
jg
sbb
fisttpll
add
fistpll
sbb
scas
in
nop
sahf
lcall
sbb
loopne
in
mov
test
rclb
mov
add
sbb
lahf
jo
push
iret
rclb
mov
loope
sbb
cmp
popl
addb
ficoml
addb
hlt
pop
outsb
jmp
inc
pop
psubusb
into
stc
jmp
rcrl
xlat
xchg
mov
rcrb
pusha
nop
outsb
nop
sub
push
add
mov
mov
loopne
loopne
mov
inc
mov
xchg
imull
pusha
and
mov
loop
sub
loopne
mov
ljmp
das
movsb
rol
xor
movsb
and
jle
shlb
ss
cld
xor
cmp
pop
flds
shlb
dec
and
jne
and
pushf
inc
mov
js
scas
mov
mov
ss
xor
push
icebp
jae
push
into
stos
xor
mov
rolb
jp
test
pusha
push
incb
inc
cltd
pop
in
inc
rorb
pusha
scas
inc
cld
sti
mov
sub
sub
addb
outsb
ficompl
xor
add
jo
rolb
xchg
add
loopne
shrl
enter
ja
inc
mov
insb
xchg
mov
sub
loopne
ljmp
adc
dec
rolb
loopne
imul
pop
adc
lret
mov
push
rolb
js
mov
dec
cwtl
pop
call
addb
loopne
andb
mov
pusha
sub
mov
stc
inc
out
xor
sti
pop
and
xor
scas
aad
or
add
xchg
mov
adc
fmuls
adc
addb
xor
stos
push
pushf
aas
mov
add
mov
xchg
das
shll
push
leave
mov
jo
jb
lods
adc
add
fildll
add
mov
loopne
mov
push
rolb
mov
ret
inc
loopne
sti
insb
cli
cltd
push
std
fsubl
pop
repz
mov
push
in
es
add
xchg
addb
adc
hlt
cmp
loop
mov
dec
cmp
jns
movsb
pusha
rclb
fisubl
addb
repz
outsw
xchg
add
loopne
dec
mov
movsb
loopne
pop
scas
mov
inc
add
mov
mov
popf
or
popw
sbb
outsb
jae
sub
mov
pop
inc
mov
inc
in
jnp
pusha
add
out
or
and
xor
imul
ja
hlt
adc
rolb
imul
imul
sti
gs
sub
pop
bound
mov
mov
stc
loop
loopne
cmp
insb
sub
mov
sbb
xchg
push
pop
inc
ss
daa
lea
push
inc
shl
shlb
mov
xchg
int
jae
les
out
loopne
mov
ret
inc
and
xchg
cmpsb
loopne
push
lds
ja
shrl
mov
inc
fnstcw
loopne
mov
xor
stc
adc
inc
add
add
or
push
stos
or
shrb
pusha
rorl
sub
lods
and
cwtd
fnstsw
or
arpl
repz
sub
loopne
and
fldl2t
movsb
mov
inc
addb
fchs
je
mov
shlb
sbb
xchg
out
mov
and
les
sbb
or
add
shlb
jno
int
cmp
loopne
clc
add
iret
mov
jae
mov
mov
cld
or
mov
test
ror
aas
int
fwait
nop
hlt
mov
pop
scas
push
add
pusha
ret
in
out
in
cmp
or
sbb
rolb
negb
sti
addb
cmp
mov
mov
inc
sbb
outsl
push
sbb
and
or
repz
int
mov
pop
repz
aad
aas
mov
and
xlat
xlat
daa
stos
pop
sbb
jbe
mov
add
xchg
out
loop
push
subl
adc
pop
inc
daa
enter
mov
daa
push
adc
fwait
inc
dec
arpl
repnz
or
mov
fucomip
xchg
xchg
or
xor
shlb
cld
cmp
cmp
ss
xor
xchg
adc
insb
adc
xor
and
or
inc
push
add
inc
stos
mov
daa
ljmp
fcomps
mov
pop
lcall
adc
jle
mov
aam
mov
ja
hlt
int
or
and
push
sub
mulb
pop
pushf
sbb
lcall
outsl
push
jns
aaa
mov
inc
punpckhdq
loopne
rol
mov
out
xor
mov
xchg
and
adc
inc
pop
fwait
inc
cmp
pop
andl
lret
cwtl
stc
push
inc
mov
and
pusha
and
cmp
pop
push
fstps
pop
out
mov
dec
sahf
stos
add
sbb
jge
std
push
and
test
mov
fucomip
out
mov
loopne
cli
sbb
stos
inc
and
cmp
cmp
sub
rolb
int3
fnstsw
mov
sub
sar
out
mov
pop
inc
into
in
or
rcll
ljmp
or
rclb
cmp
fsubs
or
shr
rorl
and
push
in
or
inc
add
rcrb
orb
negb
out
hlt
or
dec
fwait
out
sbb
cmp
andb
adc
push
ja
lea
pop
out
push
sbb
fstpt
popf
sub
mov
inc
fnsave
rorb
je
cmp
sub
and
andb
add
loopne
outsl
cmpsl
add
cld
pop
mov
rol
pop
stc
insb
insl
iret
test
add
js
int3
add
add
and
pop
or
mov
je
std
fistpl
mov
pop
sub
cmpsb
inc
and
jmp
call
cmp
cmp
mov
loopne
cwtl
xchg
in
pop
cltd
xor
int
sub
ret
movsl
mov
jge
ficompl
aas
push
xchg
inc
cmp
jo
push
mov
leave
andb
int
inc
push
cmp
in
lcall
xchg
add
or
in
lret
xchg
fwait
ss
and
add
outsb
sbb
xor
dec
aaa
sarb
loopne
scas
push
stos
rolb
push
and
push
sbb
ds
and
sahf
xor
add
lret
in
aas
sub
inc
out
mov
add
dec
add
sub
mov
inc
fcmove
lock
pop
test
inc
iret
loop
and
js
pop
push
xchg
adcb
or
divps
jns
orl
xor
push
jnp
sub
add
add
out
jmp
stc
pop
jmp
push
addr16
aad
in
shlb
jbe
loopne
bound
cli
fwait
jbe
mov
subb
enter
mov
inc
xchg
and
loopne
adc
add
jne
push
inc
add
cmpsl
jno
gs
adc
fdivrl
inc
pop
cmp
xchg
pop
and
and
shl
aaa
mov
pop
lods
mov
pusha
adc
sbb
xlat
xor
outsb
jbe
xchg
or
outsb
pop
push
rclb
sub
and
or
loopne
popf
dec
and
rcr
cmpsb
add
icebp
lahf
mov
add
nop
xor
shl
push
mov
xchg
cmp
loopne
or
and
loopne
add
mov
inc
lret
sub
pusha
jbe
add
xchg
add
mov
out
enter
lods
loopne
adc
push
hlt
sub
rolb
addb
les
sar
rolb
add
repnz
repz
inc
add
xor
pop
ljmp
out
jmp
mov
add
push
xchg
icebp
pusha
daa
mov
pusha
ds
xchg
cmp
stos
mov
push
and
jae
jp
rorl
stc
xchg
adc
ja
pop
inc
push
cmc
cmpsl
cmp
xor
daa
out
shlb
add
mov
mov
mov
push
and
pusha
push
pop
xlat
sbb
jno
addr16
push
pusha
sarb
mov
andb
jno
cmp
cmp
xor
testb
rcll
cli
xor
fadd
sbb
popf
xor
rolb
jge
mov
in
cmpl
or
jbe
enter
add
add
fsubp
in
dec
mov
rcrb
loopne
pop
aaa
mov
add
outsl
mov
dec
ss
shlb
cltd
add
imul
xlat
jmp
push
loopne
dec
pop
std
jae
pop
xchg
fwait
mov
testl
loopne
adc
pop
adc
xor
aam
rolb
jmp
stc
adc
jl
lahf
cmc
xor
mov
and
pop
jle
xchg
leave
icebp
jl
shl
inc
call
mov
dec
jmp
lods
and
stos
icebp
movsb
and
adc
add
out
sahf
test
and
dec
arpl
mov
nop
jne
sbb
stc
out
dec
mov
mov
or
in
nop
add
rolb
mov
mov
and
dec
xorl
pusha
sarb
xorb
loopne
cli
mov
pusha
push
stos
mov
loopne
inc
rorb
pop
dec
fnsave
mov
inc
and
mov
dec
dec
or
add
mov
lods
pusha
loopne
fsubl
and
shrl
or
jle
jbe
pusha
sarb
call
and
aaa
dec
pop
fwait
sub
rolb
orb
stos
dec
outsl
popf
jle
sti
sub
pop
or
and
push
mov
fstl
inc
aas
mov
xor
cmp
xor
enter
int
and
xorb
and
pop
fcoms
iret
jmp
pop
mov
in
jg
xlat
pop
mov
shl
je
test
andw
fldenv
pusha
rcrb
out
mov
mov
fs
push
or
mov
mov
or
pusha
rcrb
xor
and
push
sarl
and
cli
or
pusha
add
shl
jnp
lock
int
and
mov
cmpb
arpl
and
arpl
enter
cmp
sahf
stos
loopne
jge
jo
pop
frstor
fwait
xchg
pop
push
xor
insl
rcrl
pop
mov
testl
mov
pushf
insl
and
in
or
add
inc
cmp
pushf
push
jge
or
inc
addb
insb
jmp
jg
imul
pop
test
insb
sbb
repz
rolb
test
dec
mov
xchg
loopne
mov
xchg
fmuls
mov
xlat
sbb
cltd
mov
pusha
sbb
pop
fcompl
addb
sub
push
inc
add
xchg
lret
jno
push
jns
shlb
sub
mov
inc
mov
sbb
add
cmpsb
pusha
andb
dec
pop
repz
rcrl
les
stos
loopne
dec
sbb
push
dec
lods
loopne
xchg
mov
xchg
sbb
les
enter
ds
and
lds
push
pushf
icebp
inc
pushf
jbe
xchg
mov
inc
mulb
loopne
adc
and
test
daa
test
inc
pusha
push
imul
lcall
or
mov
or
pop
push
pop
xchg
loopne
into
mov
or
scas
xor
push
out
lret
cmp
loop
push
xchg
daa
addb
inc
sub
cmp
dec
fcoml
outsb
movsl
xchg
rolb
sbb
jb
add
jns
inc
sbb
dec
gs
add
std
in
pop
daa
mov
test
inc
fwait
xor
mov
addb
int
jno
sbb
out
in
jnp
add
jge
mov
mov
lcall
pusha
repz
inc
lods
jb
addb
add
jl
lods
insb
in
adc
lods
pusha
pusha
fwait
mov
push
or
add
mov
lahf
std
ret
vpandn
jg
push
inc
shlb
imul
test
pop
mov
hlt
lods
add
sti
mov
jecxz
jno
stc
jb
shrl
je
inc
jl
push
sub
and
mov
pop
in
hlt
aaa
dec
jl
sbb
and
inc
mov
mov
xorb
dec
push
adc
shrl
cmpsl
popa
imul
add
push
cld
xchg
jg
ja
sbb
push
lret
sbb
cmp
arpl
dec
rolb
xlat
dec
les
jo
jg
insl
mov
fisubl
and
inc
loopne
mov
loope
jp
or
mov
add
or
mov
movsb
pusha
mov
aaa
das
mov
pop
test
xorb
pop
inc
pushf
shrl
aam
mov
and
and
push
push
cmpsl
daa
rolb
xor
aad
adc
call
push
cld
sahf
out
jmp
jno
lods
rolb
fsts
clc
mov
rclb
dec
sahf
dec
cmp
push
xchg
or
mov
loopne
xchg
cmpsb
mov
cmp
pop
push
in
lret
xor
jl
inc
dec
push
fisubrs
enter
xorb
scas
andb
pop
jl
add
inc
xor
in
jbe
mulb
jp
xchg
sub
xor
push
addb
addb
add
stos
nop
out
mov
jp
and
stc
pop
faddl
in
mov
and
sbbl
lods
fisubrl
hlt
xchg
clc
add
pusha
jl
pop
jo
shlb
addb
jle
test
mov
enter
sbb
out
jl
pusha
loopne
in
jb
mov
add
inc
loopne
sbb
adc
mov
shlb
sbb
movsb
loopne
icebp
sbb
fdivl
pop
push
sbb
push
lahf
inc
popa
lret
cmp
inc
adcb
mov
jecxz
outsb
cmp
push
scas
inc
loopne
ss
shl
pusha
loopne
jns
int
pusha
addb
shlb
lret
jle
inc
and
fisttpll
xlat
push
jge
pop
and
dec
aam
loopne
lahf
jecxz
inc
jecxz
sti
enter
and
push
lret
sub
pusha
mov
rcrb
add
arpl
pop
xor
sub
and
test
mov
ljmp
pusha
pusha
mov
cmc
xlat
lock
pop
fisubrl
add
and
incb
jns
cltd
test
mov
or
and
xor
inc
sbb
insb
mov
mov
or
clc
mov
mov
mov
cmp
and
cmp
jge
xchg
xchg
sbb
fcmovu
mov
loopne
jno
pop
mov
add
inc
pop
pop
inc
nop
mov
fwait
pop
es
mov
jmp
push
and
test
adcb
idivb
scas
add
flds
pop
sub
scas
fstl
fwait
adc
mov
fmuls
stc
mov
movsl
repz
add
and
jg
in
lsl
xchg
xchg
add
or
mov
pusha
inc
into
ljmp
add
inc
or
pop
jns
insl
js
mov
loopne
inc
xchg
adc
and
and
lret
mov
mov
and
daa
shr
roll
lcall
jns
pushf
xchg
dec
inc
push
inc
sbb
gs
jb
and
loopne
clc
sbb
sbb
or
xchg
cmp
outsl
stc
cli
or
rol
cmovs
ret
cwtl
je
rolb
jo
add
and
aam
inc
xchg
xor
xor
call
icebp
roll
adc
jns
pop
jb
pop
dec
xor
dec
xchg
in
xor
add
sbbb
mov
add
mov
fstpl
and
add
aas
add
or
add
mov
xlat
pop
add
cwtl
push
loope
shld
ficoms
roll
jb
inc
mov
aam
add
jb
cli
add
pop
xor
adc
push
mov
sub
rol
push
rorl
sbb
xor
jno
mov
les
mov
loopne
sbb
mov
cmp
xchg
mov
inc
mov
cli
mov
clc
fiadds
inc
pusha
and
icebp
dec
mov
pop
aas
ds
mov
mov
inc
mov
inc
xchg
repnz
sub
out
lcall
sub
mov
ss
adc
add
mov
adc
cli
adc
mov
out
int3
clc
add
and
gs
cmp
cld
adc
enter
jb
repz
mov
and
clc
movsb
add
inc
je
ficoml
mov
testb
aad
call
or
lds
or
mov
xor
mov
in
pop
stos
mov
add
andb
and
mov
test
mov
stos
and
jmp
fbstp
add
lret
jae
push
mov
pop
test
loopne
out
pop
pop
stc
shll
shlb
xor
and
shlb
inc
mov
pop
xchg
jnp
cmpsb
inc
loopne
sarl
cmpsb
inc
inc
jmp
test
xchg
sbb
lods
shlb
sbb
xchg
pop
cltd
or
in
xlat
xchg
aas
int3
sub
pusha
xor
jmp
sahf
dec
int
or
pusha
pop
movsb
inc
inc
add
mov
in
xchg
stc
insb
test
call
and
cltd
mov
cmpl
jb
lods
and
xor
addb
ja
cli
outsl
cmp
add
loopne
jmp
andb
adc
rcl
mov
and
mov
ffree
pop
sahf
pop
dec
xor
mov
cmpsb
inc
add
jno
pop
lods
inc
sarb
mov
clc
sbb
and
lods
pusha
loopne
push
xor
push
outsb
add
addr16
add
repz
add
sar
xor
bound
lahf
mov
cs
inc
pushf
inc
xlat
shll
push
jg
hlt
dec
or
mov
jge
aad
jns
test
popa
loope
and
enter
subb
je
nop
lret
andl
pop
pushf
push
pop
les
add
pop
inc
mov
scas
les
pusha
and
inc
mov
dec
mov
in
inc
mov
lock
sub
rorb
jno
std
xor
mov
lea
lds
andb
jno
fs
pop
aam
push
lods
sahf
mov
gs
inc
mov
scas
andb
std
lea
test
sar
jg
das
int
loopne
xor
ja
daa
inc
adc
mov
inc
sub
pusha
inc
mov
push
and
jne
cmp
jb
sub
loopne
gs
in
sbb
ficoml
lods
loopne
mov
mov
xchg
dec
sbb
or
rclb
sbb
sbb
mov
and
orl
xchg
sub
add
sub
sub
cwtl
jle
js
or
and
pusha
orb
rorb
cmp
orl
nop
out
out
pop
mov
loopne
push
dec
test
or
cwtl
clc
jno
hlt
cmpsl
xchg
lcall
sbb
or
stos
xchg
imul
test
mov
movsl
push
mov
xlat
push
addb
lahf
adc
fildll
inc
cwtl
imul
fdivl
mov
add
rorb
sbb
adc
frstor
add
pushf
dec
inc
jns
dec
inc
dec
pop
dec
xchg
push
test
lock
ja
sub
out
imul
inc
jmp
outsb
xchg
aas
mov
addb
adc
push
mov
pusha
and
rolb
inc
lea
inc
cmp
cmp
iret
jp
lods
out
fcmovnb
bnd
pusha
mov
rcr
jns
rolb
clc
test
shl
cmc
sub
and
adc
dec
mov
out
dec
sbb
inc
or
dec
jo
jbe
call
int
push
movsb
add
inc
lcall
cmc
cld
pop
mov
ljmp
mov
push
andb
notl
mov
addr16
jg
test
fs
or
adcb
inc
push
mov
stos
jbe
in
mov
int3
dec
cli
jo
popf
loopne,pn
and
andb
dec
xchg
add
pusha
inc
jmp
shl
dec
scas
shlb
fbld
dec
int
mov
repnz
test
inc
inc
aaa
stos
inc
shr
shlb
xchg
fcmovu
stc
in
lods
shrl
xchg
adc
js
in
mov
mov
rcrl
jae
adc
int3
xor
sub
aam
dec
scas
inc
inc
iret
mov
inc
add
pop
xchg
testl
adc
mov
rclb
test
xorb
mov
inc
mov
sbb
push
mov
ror
mov
and
fiadds
and
rolb
jbe
cwtl
mov
and
inc
xor
int3
add
jmp
or
and
loopne
jno
push
aam
nop
xor
pop
dec
inc
push
in
jo
lock
pusha
inc
sub
jno
jp
push
pop
mov
pop
xchg
dec
andb
or
and
lea
fcmovne
lods
sbb
cwtl
das
ss
cmp
addr16
stos
aam
aas
add
aad
sbb
mov
adcb
lcall
sbb
add
xorb
sub
inc
bound
sbb
xor
cmc
pop
mov
mov
repz
mov
je
addb
lea
sahf
dec
dec
ss
lret
jg
fcom
mov
lret
movsb
shl
push
jnp
mov
pop
sub
adcb
stc
sar
push
pusha
rcrb
andb
nop
lret
mov
and
inc
dec
inc
lret
clc
add
pusha
mov
and
arpl
add
xchg
sbb
xchg
ss
lret
dec
pop
fst
shll
jmp
shlb
ljmp
pusha
pop
or
hlt
push
mov
pop
scas
and
fisubrs
out
jl
mov
outsb
rcll
inc
pop
das
stos
inc
orb
pop
and
dec
cmpsb
and
mov
inc
loopne
fwait
cmp
movsl
add
cmp
or
loopne
cli
inc
xor
imul
ds
sub
bnd
sbb
dec
xlat
mov
or
int
add
inc
or
not
or
loopne
lret
mov
lret
cmp
xchg
pop
mov
push
jmp
sub
and
out
jp
dec
add
and
jo
jmp
adc
and
pop
mov
fstps
pop
out
or
sbb
bound
push
es
stc
ja
loopne
inc
adc
sti
les
pushf
sbb
xor
mov
add
das
adc
ljmp
cmp
std
fidivs
aam
and
and
bound
cmp
loop
movsl
aaa
popf
loopne
je
test
inc
rolb
push
or
testb
lods
pop
mov
out
pop
sub
adc
clc
jns
cmc
or
cmp
cwtl
adc
and
shlb
loop
std
loope
stos
or
fcoms
aad
and
loopne
sbb
mov
xchg
insl
cltd
ret
mov
or
loopne
jl
stos
pop
in
popf
jecxz
loopne
movsb
add
out
loope
xor
adc
mov
inc
dec
cmp
sub
pusha
bound
mov
inc
scas
mov
fs
add
subb
xor
sbb
or
addb
sbb
mov
mov
dec
pop
popf
cwtl
loope
dec
aad
rorb
repnz
jbe
out
mov
mov
mov
cmp
add
push
out
mov
jle
sbb
lock
ds
add
and
aad
or
loopne
out
inc
js
and
addb
xchg
out
lret
add
rolb
sbb
inc
mov
add
mov
inc
xchg
pop
loope
into
out
and
mov
cmpsl
pop
jle
out
pop
ret
aaa
cmpsb
add
loopne
fs
pusha
pusha
sbb
mov
lret
int
xor
add
mov
sub
popa
aaa
mov
les
loopne
ds
loop
or
leave
ljmp
mov
addb
cmp
pusha
repz
mov
adc
repz
sbb
jnp
and
and
andb
pop
push
icebp
cmpsb
andb
loopne
rcr
es
push
sub
pusha
dec
shrl
jmp
push
mov
cwtl
xchg
cmpsl
aaa
pop
ljmp
sti
notb
fwait
cwtl
and
lds
int
mov
ds
loopne
js
popa
int3
jnp
mov
rolb
lret
mov
loopne,pn
imul
test
xchg
xchg
or
push
loope
or
out
in
fwait
jp
stos
loop
ja
hlt
stos
push
ror
fnstenv
add
sub
loopne
push
pop
jl
int
xchg
mov
outsl
mov
cmp
lods
in
mov
cmc
sbb
lea
inc
and
addr16
js
addb
inc
pusha
mov
xchg
push
ret
adc
cmc
ret
outsb
popa
std
ljmp
and
dec
and
inc
mov
xchg
xchg
jo
xor
cwtl
and
lods
mov
add
pusha
imul
mov
pop
jge
in
les
inc
orb
shl
and
adcb
lret
aas
fsubl
addb
aam
dec
pop
and
ja
inc
shrb
xchg
loopne
and
testl
inc
nop
or
cltd
inc
les
add
sbb
push
loop
inc
sub
push
loopne
mov
fisttpl
in
sarl
mov
and
bound
mov
adc
sbbl
push
adc
rorb
stos
inc
andb
sub
and
xor
rolb
fucomi
jmp
inc
das
outsl
pop
test
push
pusha
ja
adc
and
cmpsl
aas
or
mov
mov
jle
pop
insl
movsl
mov
add
fs
pusha
pop
mov
mov
xchg
loope
dec
aaa
mov
mov
data16
sub
inc
adc
mov
sti
push
sub
inc
loopne
out
inc
mov
add
dec
sbb
adc
mov
jno
adc
pop
js
inc
inc
or
shlb
and
insl
mov
pusha
or
mov
mov
xchg
imul
cmp
mov
lock
mov
cmc
test
loopne
mov
pusha
push
out
out
fisubrl
jp
inc
pop
jge
sbb
or
pop
sbb
dec
test
rolb
inc
jp
aaa
int
push
filds
or
addr16
int3
fadds
inc
push
pop
sub
fstpt
mov
ficoms
repz
arpl
mov
shlb
sar
mov
lds
or
scas
repz
sbb
inc
mov
jp
shrb
inc
xchg
push
pop
add
sub
inc
in
pushf
mov
inc
mov
pusha
or
add
sub
jecxz
pop
pop
fldenv
add
data16
push
mov
add
shlb
sbb
or
or
and
or
loopne
repz
mov
js
jb
cltd
xlat
pop
dec
ljmp
add
insb
aad
add
pusha
inc
fs
out
out
jl
je
sub
jg
pusha
and
xor
xchg
popa
dec
cs
and
mov
lcall
ficomps
push
inc
mov
push
andb
push
pop
movsl
lds
cmpsl
ds
xchg
inc
or
cld
cmp
lahf
je
cwtl
mov
insb
in
inc
mov
shll
dec
inc
lret
int
ss
out
adc
mov
andb
call
sarb
repz
and
sbb
loopne
divl
xchg
jae
lret
mov
mov
mov
icebp
xor
add
and
jl
mov
inc
sub
inc
dec
jecxz
sub
add
outsl
pop
mov
addb
mov
fistps
pop
loope
das
sub
dec
int
fdivr
ret
mov
cs
add
loope
inc
jmp
mov
push
mov
or
sub
push
fistpl
aas
test
hlt
adc
push
gs
test
cld
scas
mov
and
loopne
pusha
pusha
sub
mov
lret
and
and
xchg
or
addr16
add
and
pusha
xor
out
test
add
add
pusha
and
mov
xchg
adc
sub
add
pop
pop
outsl
pop
xor
repz
add
mov
cltd
movsl
pop
inc
frstor
mov
sub
jecxz
insl
outsl
hlt
cmp
dec
mov
mov
repnz
sbb
pusha
and
mov
int
add
leave
and
dec
or
jl
dec
imul
mulb
xchg
or
and
loopne
xlat
inc
idivb
cmc
movsb
mov
call
movd
jp
pop
sub
orb
pusha
add
pusha
push
es
inc
lret
cmpsl
mov
sbbl
cmp
sti
rcrb
int
push
pusha
and
loopne
xlat
fistps
lock
or
and
sub
xchg
rorb
push
out
ljmp
cs
mov
or
and
sbb
xchg
pop
dec
push
add
mov
lods
loopne
sub
popf
lea
add
jbe
fcompl
int
jae
push
dec
dec
xor
mov
loopne
mov
popf
popa
aad
push
and
push
sub
add
pushw
rol
lods
loope
or
enter
bound
pop
push
jecxz
outsl
test
add
mov
mov
out
loopne
sbb
lods
rolb
lock
pusha
mov
mov
loopne
ret
lds
andb
inc
loopne
or
or
and
and
xor
and
mov
fiadds
into
aad
pusha
dec
and
push
roll
in
push
xchg
loop
pop
add
fdivrs
cmp
dec
adc
pushf
sbb
xchg
jl
andb
add
mov
fstps
sub
add
mov
rorl
adc
std
xchg
jl
or
and
cmpsb
add
imul
jae
es
leave
shrl
in
out
xchg
lcall
sbb
and
idivl
inc
sbb
sahf
popa
add
mov
movsb
inc
mov
mov
mov
aad
imul
pop
mov
loopne
andb
out
inc
sbb
xchg
fnstsw
push
sub
add
add
mov
inc
decb
and
mov
mov
or
pop
jecxz
addb
or
cmpsb
add
pop
mov
rolb
add
xchg
notl
mov
imul
mov
jl
push
mov
add
adc
stos
adc
lret
mov
mov
lods
addb
push
add
repz
loop
loopne
out
adc
mov
mov
popf
pop
cmp
loope
mov
loopne
inc
xchg
cwtl
roll
loopne
rcrl
pop
fcoms
loopne
pop
sub
in
je
test
testb
mov
push
dec
xor
xchg
adc
push
into
xchg
pop
mov
pusha
mov
pusha
and
fs
push
sub
adc
inc
push
sahf
sub
pusha
xchg
mov
inc
mov
clc
push
aad
and
mov
add
sub
jb
aam
and
inc
in
loop
push
pop
mov
lcall
push
xor
mov
dec
icebp
les
fcomps
push
shll
xchg
clc
xchg
mov
and
add
pusha
std
mov
or
pop
jge
add
push
mov
inc
and
iret
fidivs
cwtl
jg
loopne
or
sbb
add
mov
aam
jb
mov
outsl
insl
pop
jno
ret
lock
mov
sbb
and
mov
adc
inc
mov
mov
sbb
inc
int
fidivrs
or
jg
iret
dec
push
int3
xchg
pop
in
jge
cmpsb
inc
loopne
repnz
cltd
push
rolb
dec
call
aaa
push
cmp
and
add
fisubs
pusha
and
test
loopne
jg
adc
cwtl
leave
sbb
loopne
jb
pop
dec
fdivrp
pop
lds
mov
idivb
shlb
and
std
add
subl
cmp
test
pop
mov
rcrb
shlb
addb
cmp
ja
jge
in
sub
loopne
out
and
and
mov
pop
xor
add
shrl
ljmp
loop
shlb
or
loope
cmp
xor
add
loopne
scas
pusha
pusha
cwtl
pop
ljmp
xchg
sti
cltd
pushf
inc
push
sahf
inc
leave
rcrl
mov
and
pusha
sbb
mov
loopne
mov
xchg
test
divl
sbb
xchg
and
dec
mov
adc
xchg
ficoms
pusha
cmp
and
movl
fnstcw
dec
scas
inc
loopne
rcrb
mov
and
sti
in
pop
imul
adc
jb
xchg
or
and
sbb
push
jp
push
cmpsl
jg
enter
es
mov
test
lcall
add
shlb
and
in
out
gs
into
jmp
imulb
mov
jae
lods
inc
in
and
cmp
js
iret
dec
pusha
push
add
mov
mov
out
aas
or
shrb
xchg
pop
into
std
xchg
or
mov
test
and
pop
push
fwait
aad
pushf
pop
lea
xor
mov
scas
and
and
and
add
and
rclb
mov
mov
pushw
inc
xlat
adc
xchg
pop
lret
mov
pusha
and
sub
or
sub
and
cwtl
push
cli
lcall
adc
call
mov
cli
call
orb
arpl
loopne
and
and
mov
sub
mov
mull
add
push
and
pusha
adc
mov
pop
push
mov
xchg
imull
and
push
ljmp
lea
add
jbe
inc
stc
loop
andb
mov
rolb
div
cltd
jne
movsl
mov
repnz
mov
adc
add
mov
push
das
pop
and
jecxz
or
jae
pusha
loopne
jo
mov
xchg
push
int
shlb
ret
in
in
dec
outsb
xchg
dec
cltd
cli
int3
aad
mov
loopne
xchg
jl
inc
andb
mov
sub
shll
xchg
or
xlat
pop
cmp
push
add
sbb
and
sub
jno
in
loop
roll
sub
loopne
push
jg
push
pop
cmc
in
fldt
pusha
inc
push
pop
cmpsb
pusha
and
ret
in
rcrb
int3
adcl
rol
sub
ret
fs
jne
add
push
lea
out
xor
mov
sbb
ds
and
arpl
insb
repz
cmp
lcall
mov
pusha
adc
or
push
push
dec
gs
mov
mov
sub
mov
shll
jl
add
sti
out
pushf
jnp
daa
jne
enter
pop
sbb
icebp
sub
pusha
ljmp
and
add
idivb
idiv
mov
imul
cmpps
loopne
pop
insb
jle
imulb
pusha
loopne
pop
or
push
addl
dec
arpl
jecxz
out
jl
shlb
shl
shl
mov
inc
mov
and
add
pusha
loopne
pop
push
mov
inc
push
mov
sahf
mov
std
std
jecxz
mov
mov
in
inc
iret
lock
inc
or
mov
mov
lds
mov
cmpb
mov
testl
dec
repnz
fcoms
pusha
cmp
hlt
mov
addb
add
mov
int3
imul
jge
sub
repz
movl
sbb
adc
add
shrl
inc
sub
add
pusha
loopne
push
mov
fwait
je
dec
out
mov
out
mov
or
push
xor
cmp
sbb
and
add
pusha
fwait
jg
cld
mov
loop
insl
push
add
shl
pusha
scas
inc
add
iret
mov
add
pusha
mov
inc
push
repnz
fs
jp
les
int
cmp
xor
loope
movsl
leave
int3
outsl
lret
into
push
leave
xchg
dec
je
fnstcw
push
mov
je
mov
mov
jge
cmpsb
inc
sub
inc
mov
or
sub
rcrb
test
inc
inc
jmp
inc
push
pop
sbb
mov
mov
loopne
movsb
loopne
inc
fwait
int
addb
cltd
xor
into
aas
out
outsl
pop
push
test
fldl
gs
sahf
in
push
push
jle
pop
jmp
aas
and
into
jns
inc
jge
fldenv
jmp
scas
jge
sub
addb
xor
sbb
test
ljmp
andb
int
popf
mov
fsubrs
mov
je
loop
aad
mov
testb
iret
enter
xchg
into
insb
pushf
mov
sub
not
xor
adc
jnp
lcall
pusha
inc
out
and
loopne
add
fnstsw
mov
jns
mov
cld
dec
cli
aas
xchg
xchg
mov
and
pop
mov
sub
incb
inc
mov
push
in
lcall
pusha
pusha
sub
iret
outsl
jns
add
jbe
pushf
or
add
inc
loopne
mov
pop
xor
out
es
addb
xchg
push
xor
jle
test
icebp
repz
push
cltd
or
add
fcmovnbe
loope
cmp
clc
int
inc
inc
nop
mov
fldcw
sbb
fadds
pop
push
mov
and
ss
pusha
in
test
pusha
jno
push
insl
dec
lcall
in
mov
mov
add
push
mov
test
loopne
mov
and
test
pop
jp
sbb
pop
rolb
xchg
out
data16
shll
and
pshufw
test
vmaxps
xchg
into
repnz
cmpb
mov
mov
sahf
test
and
mov
neg
xchg
mov
loopne
enter
mov
fildll
mov
addb
jne
xchg
fists
lods
jnp
ja
and
add
in
adc
adc
xorb
je
cmc
mov
andb
inc
xchg
insl
aaa
decl
addb
push
or
repnz
pusha
mov
outsl
adc
jo
enter
and
sub
and
rcrb
push
sbb
or
add
cltd
scas
mov
test
adc
pop
jp
xchg
pop
pop
and
or
jmp
aad
jne
loopne
or
inc
mov
adc
loopne
pusha
and
sarb
pop
sub
and
shr
mov
fwait
lret
pop
fs
inc
mov
pusha
mov
cmp
push
shlb
dec
push
xlat
or
and
lea
fists
add
inc
dec
pop
test
adcb
sti
sahf
jnp
pop
insl
fldl
adc
js
xchg
ljmp
in
rcll
pop
int3
push
pushl
scas
pusha
pusha
test
and
arpl
dec
add
mov
pushf
push
mov
imul
andb
pusha
add
testl
cmp
xchg
cmp
jns
cmpsb
rolb
mov
scas
and
int
cmp
rol
shlb
fstl
pop
lock
addb
xor
mov
pusha
cmp
push
pushf
mov
leave
cmp
adc
mov
pop
loopne
mov
lret
and
bound
cmp
imul
xlat
mov
push
and
shr
sahf
or
jmp
or
daa
fimull
xchg
mov
out
cmp
rcll
xchg
std
and
mov
jae
ja
and
add
lock
cmpl
addl
or
loope
sbb
loopne
faddl
mov
lds
ljmp
pop
mov
add
dec
int3
dec
lret
orl
or
cmc
dec
sar
lock
dec
test
aad
lea
pusha
loopne
cmp
dec
repnz
rolb
inc
mov
inc
mov
jle
pop
lods
inc
loopne
xor
aam
rolb
sbb
inc
jne
or
add
aam
mov
loopne
les
mov
and
jle
test
adc
cld
sub
jle
push
out
out
aas
sbb
lret
jnp
mov
imul
inc
mov
mov
or
ds
popf
jns
jg
shl
mov
rolb
subl
lods
std
and
andb
sbb
ja
ftst
cmp
ljmp
inc
rolb
arpl
add
mov
jecxz
mov
adc
movsl
mov
mov
loopne
nop
push
push
pop
push
adc
add
int3
mov
rcrb
add
sub
and
ss
dec
std
sub
sub
test
rorb
filds
mov
mov
dec
shl
out
cmp
dec
movsb
andb
pusha
mov
add
mov
lcall
mov
jnp
push
fsubl
lods
loopne
cwtl
mov
out
je
loopne
sbb
js
pushf
jp
jp
xor
ffree
fs
mov
andb
sbb
mov
mov
dec
dec
push
addb
inc
rcrb
enter
cmp
movsb
add
ja
bound
jg
popf
xlat
test
mov
jne
das
lret
arpl
jnp
out
mov
mov
inc
sbb
fidivrl
cmpsl
cmc
movsb
inc
pusha
push
rolb
addb
add
push
ljmp
inc
and
insb
hlt
adcl
movsb
pusha
and
push
mov
mov
inc
fwait
pop
lods
rolb
sarl
or
inc
dec
pop
mov
push
jae
jo
clc
push
mov
loopne
cli
dec
mov
mov
push
add
pusha
dec
adc
cmpsl
jg
stos
jp
lds
jg
cmpsl
or
pop
fbstp
cltd
popa
push
or
pusha
mov
jle
xor
mov
addr16
mov
stos
addb
pusha
fldl
inc
nop
ss
addb
sub
add
les
out
mov
inc
xchg
or
pusha
sbb
xor
in
das
sub
rol
dec
adc
popa
mov
sub
movsl
jo
cmp
rolb
loope
mov
inc
sub
loopne
inc
xchg
les
jns
lods
lds
hlt
leave
mov
aaa
jg
rcrb
lcall
inc
popf
in
mov
jmp
icebp
xchg
popf
nopl
sbb
push
lds
jle
in
stos
lea
adc
push
loopne
adc
inc
xor
mov
jo
mov
addr16
add
sbbb
mov
das
test
sbb
mov
pop
pop
xor
cmp
rorb
loopne
movsl
popf
fwait
jno
xor
xchg
ds
cltd
out
push
or
cmpb
inc
xor
mov
add
ret
shl
sbb
dec
filds
adc
shlb
fwait
pop
test
daa
lret
mov
ret
jp
iret
andb
mov
ret
sub
inc
dec
cmp
inc
cli
add
imul
or
in
cmpsl
jmp
add
in
adc
into
push
ret
test
pusha
inc
shlb
pusha
and
enter
xlat
fistpll
sti
inc
lods
mov
in
push
mov
inc
jmp
add
xor
xchg
mov
mov
hlt
pushf
ss
jnp
add
jecxz
loopne
outsb
data16
out
test
add
outsl
hlt
push
mov
mov
add
lods
insl
js
rcr
iret
repz
jo
repz
ficompl
in
mov
add
mov
push
jmp
or
or
dec
dec
fistpll
shl
push
rcr
jbe
mov
sarb
andb
or
movsl
fbstp
int
add
inc
or
stos
call
inc
mov
xchg
divl
aaa
fwait
and
aas
pop
enter
mov
shlb
sbbb
outsl
jb
orl
imul
andb
jb
mov
mov
fdivl
mov
inc
jo
ret
aad
rolb
jp
ss
loopne
adc
mov
inc
loope
call
pop
cmc
in
jmp
xlat
mov
jb
cmp
push
insl
fisttpll
addr16
sub
pusha
loopne
and
xchg
sbb
stc
shrl
sub
iret
push
adc
inc
mov
cli
sub
xor
xor
pushf
cwtl
cmp
add
xor
stos
add
pusha
lret
ja
or
jmp
sub
mov
pop
and
add
sbb
out
mov
cld
mov
outsl
push
andb
pop
ja
loopne
mov
xlat
pop
xlat
xchg
dec
ss
shll
add
into
jmp
icebp
stc
jnp
push
inc
jp
shlb
andb
lret
out
shlb
jno
mov
pusha
add
mov
dec
fldcw
jp
test
inc
mov
faddp
sti
xlat
xchg
icebp
cmc
push
addb
pop
lret
and
and
dec
fisttpll
cmp
mov
shl
pop
xchg
fcomps
mov
push
pop
mov
inc
pusha
js
mov
mov
js
sbb
adc
jbe
cmpsl
aam
rolb
es
in
sub
daa
popa
cld
sub
pop
push
lahf
dec
jp
fidivrs
xchg
lods
stos
insl
cld
inc
jge
xor
stos
and
add
and
sbb
in
incl
out
and
and
fisttps
andb
xor
mov
or
pusha
test
mov
and
adc
les
inc
pop
pusha
fcmovbe
pop
pop
pop
xor
popa
repz
mov
push
sub
mov
push
cmp
js,pt
mov
shlb
jo
adc
out
pusha
cmp
and
push
andb
dec
xchg
stc
mov
mov
ret
fildll
cmp
mov
inc
pop
inc
push
loope
ja
cli
inc
pop
clc
and
shlb
mov
sub
loopne
pop
add
lea
andb
sbb
inc
mov
pusha
inc
icebp
inc
sub
add
repz
and
stos
scas
and
cmp
movsb
add
inc
inc
cmp
insl
filds
pusha
mov
ret
add
cltd
iret
mov
add
mov
sbb
pop
and
pusha
or
pop
jbe
or
out
in
std
inc
test
inc
iret
call
pusha
inc
xchg
cmp
addb
sub
add
cmp
std
or
sbb
int3
frstor
outsb
dec
rorl
and
aaa
and
cld
sbb
out
in
fisttpll
andb
sub
fildll
sub
and
sti
pop
dec
or
mov
cmp
cmp
rclb
mov
js
call
pop
enter
mov
and
and
lods
pop
mov
add
mov
xchg
push
inc
stos
ret
daa
pop
jecxz
or
loopne
xchg
cld
lds
mov
addb
xor
adc
pop
loop
cmp
sbb
jge
test
mov
mov
sub
and
or
and
cmp
ror
add
jmp
pop
xor
ss
add
mov
loopne
addb
or
mov
repz
add
rcr
push
pusha
shlb
jae
dec
imul
sahf
push
add
cmp
icebp
call
imul
icebp
mov
push
or
inc
and
loopne
into
jbe
or
add
fxsave
add
loopne
fldcw
pusha
enter
fistpl
cltd
jl
cmp
loopne
ljmp
jo
sbb
movsb
loopne
fcmovbe
shr
or
cmp
cmp
adc
aad
int3
mov
pushf
sarl
jns
ljmp
pop
ret
adc
rclb
xor
and
mov
ds
mov
adc
add
push
lock
sbb
shl
xor
adc
mov
insb
in
ja
pop
sbb
or
popl
add
lret
nop
pop
inc
mov
out
int3
in
xchg
movsl
sbb
pop
lods
je
pop
xchg
sbb
mov
les
rorl
mov
and
and
inc
out
rorl
push
xor
mov
mov
lock
mov
fsubs
push
mov
rolb
add
jne
adc
xchg
add
mov
and
add
inc
in
inc
mov
daa
arpl
test
pusha
pop
ja
sbb
and
xchg
pop
sbb
add
je
cmp
shll
add
add
push
jp
hlt
fldl
add
mov
inc
std
sbb
testb
stc
cmp
mov
cltd
mov
and
push
scas
and
shrl
sub
inc
mov
enter
sti
cmp
std
out
jg
inc
and
sbb
pop
or
cli
inc
in
add
sbb
testl
inc
xor
jo
pop
rolb
inc
pop
xor
loopne
jno
addr16
cmpl
out
ret
jp
insb
je
rolb
lcall
fiadds
jp
pop
mov
and
out
inc
push
loopne
into
sbb
lret
gs
push
push
mov
sub
add
add
mov
mov
insl
jmp
addb
addb
andb
loopne
stc
xor
pusha
and
push
sub
cmp
int3
sub
loopne
js
or
and
sub
lret
repz
sub
add
ret
lock
mov
fdivrl
aam
ljmp
test
inc
and
pop
cmp
loop
xchg
pop
addl
mov
sahf
pop
mov
shlb
inc
int3
cmp
lea
jmp
gs
lds
mov
pop
cmp
jmp
xchg
and
cmpb
int3
inc
lcall
lods
in
mov
mov
pusha
insb
je
dec
pop
cmp
or
popf
inc
xchg
mov
mov
jge
xchg
sub
xlat
pop
daa
sub
dec
mov
push
xlat
lock
test
ljmp
inc
shrb
ret
js
mov
cmc
std
add
xchg
je
pop
into
jmp
inc
ss
inc
mov
andb
test
add
test
pusha
xchg
ljmp
leave
inc
pop
clc
mov
add
pop
loopne
or
arpl
imul
sbb
xlat
xor
sbb
xor
push
or
add
popf
sahf
out
mov
xor
jmp
imul
shlb
and
int
lret
jle
nop
je
xchg
icebp
jmp
add
sahf
mov
xchg
inc
mov
dec
icebp
inc
dec
inc
lds
pusha
loopne
add
inc
mov
sub
mov
int3
daa
jbe
out
ret
or
or
cmpb
push
rolb
pusha
rorb
imul
rcrb
cmp
inc
dec
cli
shll
add
inc
fistpl
push
add
adc
rolb
xor
cmpsb
loopne
xchg
add
aaa
das
mov
in
inc
pusha
lcall
jb
sbb
test
shrb
mov
jne
pusha
inc
test
xchg
lock
or
test
or
or
sub
adc
jb
lcall
pop
sbb
bound
push
shl
mov
cmp
das
movsl
jmp
sbb
insb
jmp
xchg
mov
mov
add
pop
sbb
sub
ss
inc
out
out
dec
sahf
and
add
add
clc
sbb
call
dec
mov
arpl
push
xor
sub
add
xchg
outsl
pop
push
lods
inc
loopne
push
shll
mov
dec
ficoml
addb
mov
add
dec
xor
fidivs
and
cmp
add
loopne
pop
jnp
xchg
mov
add
mov
add
insl
arpl
cmc
jle
mov
call
out
test
pop
mov
cmpsl
add
mov
mov
lds
adc
imulb
cmp
inc
mov
pushf
push
adc
fisubrs
scas
push
stos
add
inc
rclb
xlat
inc
bound
mov
or
sarb
shrb
xchg
sbb
mov
leave
push
pop
pushf
pop
add
xor
adc
adc
push
mov
scas
rolb
and
aad
dec
hlt
nop
sbb
rorl
adc
jno
das
lcall
inc
gs
into
sbb
and
fsts
shll
xlat
add
rclb
mov
and
sbbb
popf
adc
dec
fwait
decb
pushf
dec
pop
and
sbb
clc
mov
loopne
add
cwtl
dec
test
sahf
incl
and
mov
and
test
xchg
std
xor
dec
mov
add
int
cmp
mov
rcll
and
sub
pop
mov
xor
pop
call
inc
aaa
xor
push
mov
mov
dec
push
inc
xchg
cwtl
ljmp
sub
push
arpl
adc
addb
sti
lods
je
mov
xor
adc
ss
imul
pop
popa
mov
cmp
xor
push
in
popa
imul
xchg
add
sar
retw
and
subb
sub
dec
xor
pop
in
dec
cmp
sub
pop
jmp
xchg
icebp
popa
mov
push
addb
sbb
scas
lahf
aad
icebp
cmc
jo
push
push
add
sub
fcmovne
jb
out
sti
fucom
test
inc
jg
test
and
mov
inc
fnstenv
fwait
push
ja
cmpsl
cmpl
mov
fisttpll
pusha
pusha
push
push
in
pop
fcom
in
rolb
add
push
adc
stos
loopne
cmc
push
loopne
fwait
je
clc
addr16
stos
inc
nop
xlat
push
loopne
cmp
addb
imul
xchg
mov
or
push
mov
xchg
lds
push
std
fwait
mov
pop
ss
imul
inc
stos
rolb
or
pop
or
sub
add
xor
jecxz
imul
push
mov
lret
xor
mov
sub
inc
add
inc
shl
movsl
nop
jbe
lret
mov
and
xchg
movsl
dec
xchg
jge
pushf
daa
push
iret
xlat
aad
xlat
xchg
and
out
pop
fdivr
loop
mov
mov
push
fistps
mov
add
inc
add
leave
shl
decb
dec
sbb
add
push
rclb
mov
imul
pop
mov
and
jo
mov
mull
xor
xor
in
mov
pop
sub
adc
cli
push
and
mov
pop
popa
scas
xor
fcmovnbe
pushl
ret
inc
xchg
jbe
cmp
and
pop
imul
stc
add
orl
mov
push
add
arpl
inc
and
fcoms
lret
loopne
dec
jno
loopne
pop
in
inc
orb
andb
adc
inc
loopne
cmc
or
iret
mov
mov
pop
ja
lret
add
loopne
mov
sarl
inc
adc
int3
pop
mov
inc
jmp
andb
test
dec
pop
out
adc
lods
fnstcw
and
mov
aad
cmp
inc
arpl
inc
mov
cmc
add
inc
mov
fwait
mov
aaa
in
lods
and
mov
add
sub
dec
sub
add
and
add
in
jb
and
loopne
sbb
loopne
mov
loopne
push
dec
lods
pusha
rcrb
add
or
gs
adc
jg
add
jl
push
insl
push
lods
inc
loopne
xchg
ret
popf
jp
in
sbb
dec
fwait
push
dec
scas
mov
fadds
mov
loopne
pop
push
mov
movsb
mov
pop
mov
mov
add
rorl
add
push
loop
pop
pop
je
addb
enter
iret
ret
push
aad
mov
mov
pop
cmp
sub
imul
mov
xlat
or
or
and
push
add
aam
add
mov
sub
aas
sub
xorb
mov
mov
pop
jnp
cs
inc
push
loope
sub
loopne
lock
jmp
lock
sbb
dec
mov
fdivrs
loopne
ljmp
xor
sahf
pop
cld
clc
lea
mov
adcb
pop
cmp
inc
add
fmuls
lcall
lsl
repz
push
add
adc
mov
out
pop
cmp
clc
dec
std
adc
cld
add
add
add
pop
test
stc
mov
mov
pop
xlat
fstpl
stos
into
mov
dec
xchg
fiaddl
push
push
jb
or
mov
mov
gs
enter
add
push
add
pushf
push
mov
imul
pusha
scas
adc
lcall
sub
dec
ds
and
je
ss
cmp
push
aas
sub
sbbb
repz
fidivrs
mov
mov
adc
shl
pusha
inc
repz
cmp
push
mov
iret
add
rorb
push
inc
jge
rolb
and
ja
dec
aad
addb
insl
mov
das
cld
inc
mov
inc
nop
adc
inc
stos
shlb
push
lods
add
inc
loopne
addb
andb
mov
mov
and
mov
sub
mov
and
mov
movsb
rolb
addb
adc
mov
add
mov
out
ds
pusha
sbb
xchg
shl
ror
mov
gs
cwtl
jecxz
pop
pop
fldt
test
mov
jmp
mov
sub
cltd
aas
lock
pop
popf
repz
lods
and
xor
add
push
jmp
pop
js
and
je
push
lret
or
and
inc
dec
popa
sbb
jns
adc
shll
ja
pop
movsl
or
mov
rorb
and
push
inc
andb
mov
add
cmp
test
mov
sahf
lcall
int3
jnp
dec
dec
aas
adc
insl
pushf
jns
or
lret
add
movl
add
cwtl
scas
test
loopne
mov
jnp
push
out
and
add
mov
mov
and
sub
jge
mov
inc
inc
cwtl
lea
rcr
jne
stos
movl
mov
clc
cmp
pop
mov
dec
lods
shlb
stos
icebp
repz
inc
push
xchg
lcall
cmp
scas
rolb
and
jp
js
fs
divl
or
enter
xor
repz
mov
sub
mov
dec
xchg
dec
jmp
shll
addb
jmp
cmp
or
movsb
and
dec
cmp
jmp
andb
sbb
cmp
sbb
cmp
outsl
cmp
jae
add
mov
inc
insl
add
lods
cld
sub
lret
and
mov
ja
xor
add
scas
inc
inc
lret
je
rcll
add
shlb
and
cmp
pop
push
add
adc
xor
stos
mov
mov
testl
or
mov
xor
lea
mov
int3
push
mov
ja
insl
pusha
popf
lods
pusha
loopne
cmpl
mov
loopne
pop
push
mov
mov
stos
mov
in
aam
addb
xor
imul
sub
cmp
mov
xlat
or
inc
sbb
xchg
dec
imul
cmp
subps
add
cmp
push
inc
loopne
push
aas
jl
push
ja
pop
mov
add
mov
jno
or
lcall
shll
add
dec
cmp
insl
outsl
dec
push
sti
out
push
dec
aam
inc
sub
and
pusha
add
enter
add
sub
pushf
mov
and
sub
jae
arpl
add
mov
and
mov
movsb
and
fs
stos
and
jo
mov
or
dec
jmp
rol
add
arpl
xor
addb
shlb
xchg
addr16
pop
xchg
repz
lods
dec
pushf
xor
shr
les
jl
cltd
xchg
xchg
or
pusha
iret
shrl
sbb
cmp
inc
mov
addr16
cmp
sub
and
jle
push
xor
negl
aas
sbb
add
lea
dec
loopne
inc
xchg
insb
or
shrl
add
fildll
lea
inc
and
mov
mov
mov
mov
insb
fisubl
ds
jg
inc
cmp
mov
loopne
sub
mov
and
loopne
dec
xor
and
inc
ljmp
daa
imul
adc
lahf
rcrb
out
sbb
addb
js
mov
pop
hlt
xor
int
xchg
jle
jl
subl
xchg
or
sub
add
sbb
and
inc
cmp
or
and
hlt
mov
stos
pusha
rol
sbb
add
mov
fnstcw
in
test
aad
push
pop
rorb
and
sahf
lods
inc
and
cmp
sbb
cmp
add
sub
test
inc
inc
std
daa
mov
sbb
pusha
mov
out
add
hlt
mov
mov
mov
lds
movsl
push
lret
insb
push
sahf
cmc
add
les
add
rol
hlt
out
mov
sbb
pop
roll
shlb
test
mov
lods
and
jge
jl
fldcw
xchg
jnp
xor
push
cmp
and
stos
and
xor
or
rorb
loopne
mov
hlt
fidivrl
ds
cli
loopne
roll
push
fsts
addb
sbb
adc
clc
and
orl
or
add
mov
add
xchg
insb
andb
andb
lock
mov
pop
dec
rcll
adc
xor
rcrl
or
and
pushf
into
fs
imul
aaa
into
daa
push
mov
xlat
jle
pusha
pop
shrl
iret
iret
jge
push
add
das
mov
pop
and
adc
jp
or
sub
push
andb
mov
and
movsb
mov
mov
push
mov
in
fcoml
inc
popl
jns
lcall
add
mov
add
out
mov
subb
mov
add
xorl
and
loopne
jo
rolb
inc
icebp
mov
dec
jle
addb
test
loopne
sub
shlb
mov
loopne
ja
push
jmp
mov
jo
sahf
loopne,pn
cmp
mov
sbb
outsl
in
xchg
adc
pusha
add
imul
sbbb
jge
rcrb
jne
jmp
ss
rol
shlb
push
or
push
std
cmp
fsubr
call
xor
enter
add
xchg
das
mov
sub
mov
jl
fsubr
loopne
popf
inc
xchg
xor
pop
loope
xor
push
push
add
das
pop
popa
jecxz
and
pusha
and
mov
sub
adc
and
pushf
mov
push
je
sub
inc
push
out
mov
lret
xorb
cmp
fdivrs
lds
loope
add
or
jg
sahf
insb
mov
fmull
add
nop
fsubrl
mov
sbb
sub
pusha
jmp
aas
xorl
shrb
and
xchg
test
loopne
sub
loopne
loopne
adc
xchg
sub
cmp
jmp
int3
mov
mov
inc
rclb
pop
in
sub
add
daa
in
popf
fwait
mov
aas
icebp
imul
enter
loope
and
mov
and
add
push
ss
rcrb
sahf
pop
repnz
faddp
mov
popf
dec
jae
mov
jne
xchg
inc
mov
pusha
mov
cwtl
lods
andb
mov
mov
test
pusha
out
cmp
aaa
shrl
lret
add
push
int
pop
and
adc
push
adc
std
pop
jp
icebp
int
pusha
aam
xchg
aam
in
mov
xchg
popa
add
xchg
bound
ss
out
cli
jle
adc
xor
or
rolb
push
hlt
test
rolb
leave
xor
add
pushf
test
loopne
ja
inc
shlb
dec
popa
inc
mov
call
pusha
inc
jns
add
cs
sbbb
sahf
xchg
or
mov
pop
dec
adc
ret
in
in
std
imul
xor
mov
pop
or
fnstcw
and
sub
sub
inc
fdivrl
in
std
clc
test
mov
add
dec
inc
frstor
shl
mov
inc
xchg
movsl
pop
pop
pop
repz
and
idivl
andb
pop
negb
loopne
cmp
imul
fadds
mov
inc
aam
mov
stc
mov
and
loopne
inc
repz
pop
js
pop
xor
push
enter
mov
out
fsubr
cmpsb
add
mov
cmp
cmp
rol
add
mov
mov
jbe
push
addr16
pop
iret
or
loopne
dec
mov
int3
test
inc
nop
or
jl
mov
inc
dec
dec
add
xchg
ljmp
ljmp
sbb
cmp
addb
pusha
mov
movsl
push
aas
repnz
in
stc
lret
insl
sub
cmp
xor
pop
pop
jnp
add
mov
push
in
and
loop
mov
ficomps
dec
aaa
sub
add
inc
rcl
lret
mov
xor
inc
shl
adc
adc
in
stos
loopne
push
jge
pop
negl
sbb
xchg
push
jg
fs
pop
and
adc
push
dec
mov
dec
jo
and
andb
jo
and
mov
mov
mov
adc
ficoms
add
fidivrl
xchg
push
and
add
pusha
loopne
in
inc
and
nop
gs
cs
cld
aaa
xchg
addr16
out
inc
cwtl
push
pop
fs
cmp
cli
lock
ja
dec
add
in
push
scas
rolb
ficompl
push
shll
xor
sbb
fcomps
notb
aaa
cwtl
mov
cmp
clc
sbbl
int
mov
test
lahf
pop
sti
push
adc
mov
pop
or
inc
xor
inc
pop
xchg
xchg
leave
fucom
xor
jge
push
mov
mov
mov
pop
punpckldq
mov
xorl
or
inc
pusha
enter
aam
jmp
repnz
sub
cltd
cmp
mov
push
sub
loopne
add
sub
cmp
pop
gs
out
movsb
pusha
add
popf
adc
addl
loope
mov
cmpb
and
inc
push
sub
cmpb
ja
mov
mov
jmp
shlb
sbb
repz
cmp
xchg
aad
push
xchg
adc
xor
cmp
and
inc
sbbb
adc
lods
cmpsb
and
and
aad
out
out
arpl
aaa
leave
cmpsb
shlb
loopne
lds
aad
inc
or
pusha
pop
ljmp
push
ds
fsubr
or
and
mov
sub
test
xchg
ret
add
dec
js
and
push
xchg
ficoms
and
and
xchg
lahf
cmp
loope
sub
mov
mov
mov
or
pop
scas
add
inc
dec
xchg
out
and
inc
shl
shlb
adc
mov
sub
icebp
test
fsubr
imul
lea
sub
mov
add
dec
mov
and
add
fwait
mov
adc
test
sbb
jp
mov
dec
aad
dec
jne
pusha
and
andb
jmp
pushl
or
cmp
xchg
addb
or
idivl
loope
add
test
inc
fdivrs
lret
mov
in
mov
mov
lock
loopne
fdiv
xor
mov
inc
loopne
daa
lods
pusha
rolb
fimuls
dec
sbb
jle
fwait
inc
push
bnd
mulb
mov
and
add
movsb
addb
mov
fsubrl
loopne
lods
xchg
andb
pop
mov
adc
push
mov
add
incb
psubb
mov
mov
xlat
dec
icebp
sbb
les
pop
pop
loope
inc
pop
loop
mulb
adc
pusha
add
mov
push
roll
out
add
aad
dec
mov
mov
jge
cmp
aad
inc
loopne
daa
adc
lods
and
mov
loopne
pop
cltd
push
inc
mov
js
add
shlb
aaa
rorl
mov
mov
andb
aam
jb
cli
es
sbbb
notl
pop
int
popa
popf
xchg
mov
andb
push
and
inc
jle
jp
push
sub
lods
add
inc
mov
cmp
inc
mov
sub
mov
inc
jb
sbb
rorb
fnsave
ds
adc
test
add
sub
addb
pusha
and
or
enter
push
add
jno
add
std
in
jg
jmp
jns
mov
shrb
lret
mov
pop
inc
inc
sub
ja
mov
pop
xor
repz
inc
arpl
loopne
mov
ds
sub
aad
mov
pusha
sub
rolb
cmpsl
cmc
jp
aad
pusha
add
and
pusha
push
sbb
ficoms
dec
sbb
aaa
sub
loopne
mov
lods
add
scas
ds
sbb
pusha
mov
movsl
jo
sub
cmp
push
leave
adc
inc
insl
aaa
or
and
sub
aam
imul
das
lret
mov
push
test
adcb
mov
ljmp
sbb
sbb
add
daa
in
inc
pop
xchg
cmpsl
insl
js
dec
add
mov
scas
shlb
add
mov
xchg
jo
hlt
xor
mull
adc
mov
and
jnp
mov
mov
icebp
test
adcb
scas
cmp
stos
imul
shlb
xchg
mov
dec
mov
sub
add
inc
lcall
pusha
xchg
xor
push
add
xchg
rclb
push
out
mov
jmp
ljmp
inc
and
out
aad
ficompl
hlt
loopne
das
daa
cltd
pop
push
dec
push
loopne
sub
pusha
lcall
inc
jp
inc
imul
pusha
push
or
rorl
push
out
sbb
dec
push
xor
dec
mov
mov
xchg
sti
push
mov
mov
or
inc
push
scas
adc
mov
xchg
icebp
mov
push
imull
dec
fs
dec
push
sub
push
lods
add
mov
cmp
inc
loopne
in
and
jno
loopne
daa
lods
mov
mov
mov
push
shlb
loopne
pusha
aad
add
sahf
push
cmp
adc
adc
mov
fs
and
xorb
mov
push
xchg
dec
inc
repz
cmp
insb
cli
xor
andl
mov
xchg
pop
mov
cmpsl
and
hlt
stc
adc
push
inc
mov
push
push
nop
out
mov
lds
xchg
ja
xor
inc
push
int3
xor
jecxz
jne
mov
xchg
stos
mov
pop
mov
loopne
std
sub
inc
sub
inc
mov
jnp
push
or
push
sub
pop
fs
loopne
addb
mov
aas
movsb
add
movsb
add
andps
repnz
push
mov
mov
push
dec
cmp
sbb
xor
pop
mov
mov
in
mov
xchg
mov
pop
cmpsl
dec
mov
imul
arpl
das
call
addb
insl
sub
sbbb
push
andb
add
rolb
loope
in
popa
in
and
jnp
adc
je
ret
mov
and
pop
scas
loopne
mov
cmc
out
or
add
xlat
into
sub
mov
jge
xchg
and
popf
and
and
js
fdivrp
xchg
popf
in
lret
xchg
addb
ja
sbb
jns
into
lret
xchg
and
cmp
adc
or
sbb
ret
fisubl
psubsb
dec
ja
add
xorb
adc
in
decl
sub
pop
test
add
cmc
in
and
adc
jmp
mov
addr16
lds
mov
ljmp
jecxz
mov
in
pop
dec
jae
inc
inc
or
es
mul
addr16
xor
and
or
cmp
and
clc
cwtl
out
or
fcomp
cmp
jle
inc
or
fcomip
mov
or
inc
aaa
jns
pushl
xlat
loop
loopne
xor
and
mov
adc
add
add
add
