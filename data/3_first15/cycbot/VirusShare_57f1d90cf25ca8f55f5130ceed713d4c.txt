movsl
movsl
movsl
filds
add
adc
adc
adc
add
add
add
cwtl
cwtl
cwtl
cwtl
add
add
jns
jns
lret
lret
lret
lret
lret
lret
jl
jl
jl
jl
jl
add
cmp
add
add
add
xor
xor
xor
xor
xor
xor
xor
xor
push
mov
mov
mov
ret
ret
ret
ret
add
add
loope
add
add
add
xor
add
add
arpl
arpl
add
add
in
in
in
in
in
in
in
in
in
in
in
and
and
and
and
and
cmp
cmp
cmp
add
and
and
and
and
aad
add
data16
mov
sbb
sbb
sbb
sbb
sbb
sbb
sbb
add
add
lret
lret
lret
lret
lret
lret
lret
lret
add
mov
mov
mov
mov
mov
mov
mov
pusha
pusha
push
push
push
add
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
lret
outsb
data16
sbb
add
lods
es
push
add
sub
add
sbb
sbb
add
jge
jge
jge
jge
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
mov
add
add
add
addl
add
add
sub
sub
sub
sub
add
add
add
add
jb
jb
mov
mov
add
add
add
add
add
rcl
rcl
rcl
add
loop
loop
loop
loop
loop
loop
add
inc
inc
add
add
ret
ret
ret
ret
ret
ret
ret
ret
ret
sub
add
repnz
push
push
push
push
push
push
push
add
movl
add
add
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
add
lret
lret
add
les
add
add
add
add
mov
mov
mov
add
ficoms
push
push
push
push
push
push
push
add
dec
dec
dec
hlt
hlt
add
add
push
inc
add
add
add
jge
jge
jge
rcl
rcl
rcl
rcl
rolb
add
add
inc
inc
inc
add
mov
mov
mov
add
and
and
and
fsubrl
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
add
inc
in
in
in
add
add
sahf
sahf
sahf
sahf
sahf
sahf
sti
pop
pop
pop
push
push
inc
inc
inc
inc
inc
inc
inc
and
and
add
add
repnz
add
pop
pop
add
aas
aas
aas
aas
dec
dec
dec
dec
dec
dec
dec
mov
mov
add
add
add
aad
sub
sub
sub
sub
sub
sub
sub
sub
add
add
or
add
dec
xor
xor
xor
add
add
inc
inc
inc
inc
ss
push
push
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
cmp
cmp
cmp
pop
pop
add
add
add
add
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
add
inc
add
add
fcmovnu
fcmovnu
fcmovnu
add
push
push
push
push
push
push
push
push
push
add
mov
mov
mov
jge
mov
mov
mov
mov
add
sbb
sbb
sbb
add
lea
add
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
mov
add
sub
sub
add
add
mov
popf
popf
add
add
add
add
add
add
add
add
add
push
push
push
push
push
push
push
push
push
add
sub
mov
mov
add
div
div
div
div
div
imulb
sub
add
add
add
add
add
add
add
add
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
add
push
push
dec
add
repnz
add
xlat
xlat
add
les
sub
sub
sub
sub
sub
sub
sub
add
add
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
add
scas
scas
scas
scas
add
add
add
rcl
rcl
rolb
add
add
add
jle
aaa
aaa
aaa
aaa
aaa
aaa
add
and
and
add
fdivrs
add
add
add
add
in
in
in
in
in
in
in
in
in
in
in
rcl
rcl
movsl
movsl
movsl
add
add
add
add
add
add
add
add
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
aam
aam
aam
add
dec
dec
mov
mov
mov
mov
mov
mov
mov
add
xor
xor
add
add
es
add
loopne
loopne
loopne
loopne
loopne
loopne
mov
stc
stc
stc
stc
stc
stc
stc
push
push
push
push
push
push
add
add
add
add
add
add
add
sbb
sbb
sbb
sbb
add
ds
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
and
and
and
and
and
and
and
div
div
div
div
div
cli
cli
cli
cli
cli
cli
cli
cli
cli
xchg
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
mov
mov
mov
pop
pop
pop
pop
pop
pop
pop
pop
pop
int3
int3
out
out
out
out
out
out
out
out
out
out
out
and
and
cmc
cmc
cmc
and
and
and
and
rcl
roll
add
or
or
or
or
or
push
push
arpl
std
bound
sub
sub
sub
sub
sub
sub
out
out
out
out
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
cmp
or
add
add
add
add
add
add
add
xor
jbe
add
add
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
push
add
add
add
xor
xor
xor
xor
xor
gs
add
push
push
push
push
push
lock
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
add
add
or
pop
pop
add
sbb
sbb
sbb
cmp
add
and
and
xor
xor
xor
xor
xor
xor
pop
pop
pop
pop
pop
add
add
jmp
jmp
in
in
or
add
add
add
add
std
std
std
std
std
std
std
std
add
adc
adc
adc
adc
adc
adc
adc
adc
add
add
add
add
clc
clc
clc
sub
sub
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
add
add
add
add
out
out
add
cltd
cltd
cltd
cltd
cmp
cmp
add
cld
add
outsl
outsl
add
add
cmp
cmp
cmp
cmp
cmp
cmp
cmp
add
add
jno
add
add
add
cmp
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
add
add
adc
adc
add
fadds
add
xor
jns
jns
jns
jns
add
add
add
add
enter
mov
mov
mov
mov
add
jecxz
jecxz
jecxz
jecxz
pop
pop
pop
pop
pop
out
out
sub
add
add
loopne
loopne
loopne
loopne
loopne
addr16
sub
div
div
pusha
pusha
pusha
pusha
pusha
stos
stos
insb
insb
insb
insb
insb
insb
insb
add
add
mov
pop
pop
addb
add
xor
ret
ret
pop
pop
cmp
cmp
cmp
inc
inc
inc
inc
add
add
add
add
add
sbb
sbb
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
in
in
in
in
in
addl
addl
add
add
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
add
add
add
add
aad
aad
testb
add
jmp
jmp
jmp
data16
add
std
std
std
std
std
std
add
add
add
add
mov
mov
mov
mov
add
inc
inc
inc
inc
inc
add
pop
pop
mov
mov
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
add
add
or
add
add
add
add
add
add
mov
mov
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
add
add
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
aaa
aaa
aaa
aaa
aaa
aaa
add
add
add
push
push
push
push
push
push
push
push
push
add
add
enter
enter
enter
add
dec
dec
dec
dec
dec
add
popf
popf
popf
popf
popf
popf
popf
popf
popf
out
pushf
pushf
pushf
pushf
pushf
pushf
inc
inc
inc
inc
inc
inc
add
add
add
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
add
add
add
cld
jbe
jbe
jbe
add
add
jno
jno
jno
add
add
inc
lret
lret
lret
lret
lret
pop
pop
pop
pop
pop
jnp
jnp
add
add
push
push
push
push
push
add
and
add
inc
inc
inc
inc
inc
inc
inc
inc
inc
add
add
dec
dec
add
add
add
add
add
js
add
add
rcl
outsl
outsl
outsl
outsl
outsl
add
push
push
push
push
push
add
add
fs
add
inc
inc
inc
inc
inc
inc
inc
inc
add
xchg
add
jb
jb
lcall
and
div
xor
xor
add
sbb
sbb
sub
sub
sub
dec
add
stos
stos
stos
stos
add
incb
add
adc
adc
add
push
push
push
push
push
push
push
push
push
rol
add
add
lods
add
add
aad
aad
add
add
add
push
push
push
push
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sbb
sbb
rcl
jae
jae
sbb
add
fadds
add
mov
mov
add
add
rcl
rcl
rcl
into
into
into
into
into
into
into
into
into
into
into
add
pop
pop
pop
popf
popf
popf
popf
add
add
add
mov
mov
mov
add
pop
pop
pop
pop
pop
pop
add
add
add
add
data16
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
addr16
addr16
popf
xor
add
fwait
fwait
fwait
add
add
add
shlb
and
add
add
inc
inc
inc
inc
inc
or
or
or
or
add
filds
xchg
xchg
push
add
add
aam
aam
add
in
in
in
in
in
jbe
cmp
dec
dec
dec
dec
dec
dec
jns
jns
jns
jns
jns
jns
jns
insb
insb
insb
insb
insb
insb
insb
insb
bound
add
adc
adc
add
add
mov
sub
call
add
jb
jb
jb
imul
add
mov
mov
mov
insl
insl
insl
add
add
add
add
add
add
cmp
and
and
and
and
add
enter
sbb
sbb
sbb
sbb
add
lods
lods
lods
lods
lods
lods
lods
add
add
scas
scas
scas
scas
scas
scas
scas
add
add
mov
add
add
add
sub
add
add
add
pop
pop
pop
push
push
push
add
add
add
add
add
add
inc
inc
sub
add
in
and
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sldt
add
push
push
push
push
push
push
push
push
push
push
push
push
add
lahf
add
mov
insb
insb
insb
insb
insb
insb
insb
insb
and
and
add
add
mov
lds
add
add
add
add
mov
mov
mov
mov
mov
add
add
push
push
push
push
push
add
ds
add
add
add
add
imul
imul
imul
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
mov
mov
add
mov
inc
inc
inc
inc
inc
inc
mov
mov
mov
mov
mov
mov
add
add
rcl
rcl
rcl
add
jno
jno
or
or
dec
dec
mov
sub
sub
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
loopne
loopne
loopne
loopne
add
push
push
sub
sub
sub
sub
sub
sub
sub
add
add
mov
add
bound
add
insl
insl
insl
add
add
jae
jae
jae
add
add
add
jae
jae
add
add
xor
xor
xor
add
add
or
or
add
add
stc
stc
stc
add
add
add
jbe
jbe
jbe
add
add
add
add
loop
loop
jge
jge
sti
dec
dec
dec
dec
gs
add
dec
dec
dec
dec
add
add
rcl
add
pop
in
daa
daa
daa
dec
xchg
xchg
pop
pop
pop
addl
or
or
or
or
add
add
add
add
into
into
into
into
into
into
into
into
into
into
into
add
add
dec
dec
dec
dec
dec
dec
dec
jns
jns
jns
jns
jns
add
add
adc
adc
adc
adc
adc
add
fs
fs
div
div
div
div
div
div
div
div
add
add
add
insl
insl
insl
add
add
push
push
push
push
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
into
into
into
into
into
into
into
into
add
add
add
add
add
add
loope
loope
loope
add
xchg
xchg
xchg
xchg
xchg
std
std
std
std
std
jne
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
xchg
mov
add
bound
add
lods
lods
lods
add
add
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
out
out
out
out
out
out
out
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
add
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
pusha
pusha
pusha
pusha
add
bound
bound
bound
add
add
cld
cld
add
ja
xchg
xchg
xchg
xchg
xchg
or
jae
jae
jae
jae
jae
add
add
add
xchg
xchg
add
add
jmp
sub
sub
test
int
int
add
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
sbb
sbb
mov
mov
mov
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
lods
lods
and
and
and
and
and
and
and
and
int
int
int
int
int
int
int
int
add
add
incl
add
add
pop
pop
pop
pop
pop
add
add
jl
add
add
add
add
mov
addb
cmp
sti
sti
add
add
jecxz
jecxz
jecxz
jecxz
jecxz
xchg
xchg
xchg
xchg
xchg
xchg
xchg
add
add
add
add
dec
add
and
and
and
loopne
loopne
loopne
cmp
cmp
cmp
cmp
cmp
cmp
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
or
jo
jo
jo
pop
pop
mov
pusha
pusha
enter
dec
dec
dec
add
add
dec
dec
dec
dec
dec
dec
hlt
hlt
hlt
hlt
hlt
add
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
add
out
out
lea
lea
lea
dec
dec
add
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
add
add
add
xchg
xchg
xchg
xchg
xchg
xchg
add
add
add
mov
mov
mov
add
rcl
rcl
rcl
add
lcall
add
cmp
cmp
lret
lret
lret
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
add
mov
mov
gs
leave
leave
leave
leave
leave
leave
leave
inc
inc
or
or
or
or
or
or
or
or
or
into
rcl
rcl
rcl
rcl
rcl
rcl
rolb
add
mov
pop
pop
pop
pop
pop
pop
pop
pop
adc
pop
pop
pop
pop
pop
pop
pop
mov
add
lds
add
add
add
loope
loope
loope
loope
add
ret
ret
ret
ret
pop
lea
enter
add
and
and
and
and
and
mov
jb
jb
xchg
xchg
xchg
xchg
xchg
xchg
add
add
popl
add
add
add
sbb
sbb
add
in
in
in
in
in
in
in
in
in
in
leave
leave
leave
enter
enter
enter
enter
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
push
push
push
push
push
push
push
push
push
push
push
add
add
add
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
add
je
je
je
je
je
je
je
je
je
mov
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
fstp
fstp
fstp
fstp
fstp
fstp
dec
dec
dec
dec
dec
add
add
js
js
push
push
push
push
push
push
push
push
push
push
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
add
add
pop
pop
pop
pop
add
xor
xor
pop
pop
pop
mov
add
sub
sub
sub
sbb
sbb
sbb
sbb
add
add
add
add
add
pop
pop
pop
pop
pop
add
rolb
add
add
add
add
add
pop
pop
add
add
rcl
add
xor
xor
mov
mov
add
add
add
data16
loop
add
add
outsl
outsl
outsl
outsl
outsl
outsl
outsl
add
insb
insb
insb
insb
insb
insb
sub
sub
fcomp
fcomp
fcomp
or
or
or
or
or
mov
mov
mov
mov
rcl
rolb
add
addb
addb
add
add
add
and
je
je
je
je
je
je
je
je
je
mov
add
flds
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
add
add
add
add
mov
add
add
ret
ret
ret
ret
add
add
int3
int3
int3
int3
int3
int3
int3
int3
div
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
loopne
loopne
xor
add
inc
sahf
sahf
sahf
sahf
sahf
add
add
lock
add
adc
adc
adc
adc
adc
adc
add
add
add
add
out
leave
leave
leave
leave
leave
gs
mov
mov
ljmp
ljmp
add
add
loopne
jmp
pop
mov
add
in
clc
icebp
fs
sub
add
xor
push
add
out
ljmp
insb
popf
xor
scas
add
scas
add
clc
inc
adc
lret
fcmovu
sub
add
sbb
int
cmpsl
mov
add
ljmp
jle
ljmp
enter
shll
adc
fdiv
lds
sbb
bound
dec
xchg
shll
sbb
outsb
data16
mov
jb
mov
imul
add
xchg
push
mov
add
aad
xor
or
add
add
mov
in
enter
inc
xor
scas
add
push
jo
scas
add
shrb
or
mov
add
fisubrs
add
add
add
lret
add
add
add
dec
add
xor
xor
add
cld
mov
addb
xchg
shll
loope
mov
jl
add
push
mov
ret
add
add
add
imul
outsb
stos
add
dec
int
mov
add
add
push
hlt
or
and
add
add
outsl
add
add
and
add
or
aam
inc
mov
mov
add
mov
add
stos
add
add
add
push
test
add
inc
aas
lock
mov
or
add
pop
mov
add
inc
push
out
js
add
add
add
shlb
pop
shlb
xchg
lahf
sub
add
xorl
movsl
push
mov
add
push
stos
cmpsl
sub
add
inc
push
cltd
inc
lock
sbb
add
arpl
sbb
lcall
sbb
shlb
add
inc
cli
inc
inc
add
loope
sub
add
scas
add
fsubrl
cmpl
cmp
arpl
xor
pop
les
enter
add
add
jmp
add
into
cmp
mov
add
loop
or
add
push
add
sbb
cmp
mov
add
or
add
xchg
adc
sub
add
add
mov
scas
add
shrb
std
add
add
add
in
adc
inc
push
cmc
icebp
leave
adc
fisttps
jg
scas
add
adc
and
add
add
ret
in
jnp
repz
mov
add
cmp
pop
adc
inc
imul
add
iret
push
push
xchg
addb
scas
add
add
loop
push
inc
mov
add
int3
dec
lahf
xor
add
xor
cld
mov
xchg
dec
enter
pop
lods
pop
int
xchg
sub
arpl
add
adc
out
pop
psadbw
loopne
and
lea
add
pop
push
rep
add
sub
add
add
cmp
adc
add
loopne
dec
xor
arpl
mov
outsl
xchg
leave
push
insl
sub
xor
push
mov
pop
sbb
imul
arpl
add
cltd
mov
outsl
leave
setne
xor
in
cmp
add
les
pop
sub
add
ret
sub
arpl
xchg
push
sbb
fistps
pushf
stos
lahf
mov
add
lock
pushw
push
add
xchg
fwait
addl
mov
lock
add
mov
push
jno
imul
sbb
ss
pop
push
add
addb
call
add
dec
lods
add
push
add
imul
add
jg
add
lret
sbb
mov
in
stos
rol
fistl
mov
cmp
aas
pop
insl
popf
dec
mov
notl
pop
addb
shr
decl
cwtl
or
add
cltd
fs
psubusw
add
inc
imul
add
test
lock
sbb
xchg
add
repnz
or
add
outsl
dec
jge
lahf
in
loope
arpl
call
in
jl
xchg
inc
pop
imul
and
test
add
and
das
cmp
and
push
testl
xchg
mov
mov
push
push
inc
xchg
nop
jne
sbb
shrl
add
jnp
pop
jae
shlb
repz
adc
inc
psllw
add
aaa
scas
add
rclb
mov
add
jecxz
mov
add
loopne,pt
mov
add
add
xchg
fcmovne
inc
jp
push
mov
inc
bound
mov
lcall
andl
xor
and
add
mov
in
xor
add
adc
dec
ljmp
xchg
out
add
add
loop
dec
adc
push
xchg
ja
test
push
out
jne
sbb
rcrl
fcoms
jge
scas
add
lds
pop
push
inc
push
adc
out
jno
addr16
xchg
test
fstpt
mov
and
pop
dec
adc
xchg
js
js
push
add
xor
pop
sbb
ds
pushf
mov
cmp
ss
xor
mov
cmpl
mov
add
adc
pushf
push
add
sarl
sahf
adc
dec
sub
jl
add
xchg
add
inc
cmp
pop
xor
fbstp
repnz
pop
les
mov
mov
ds
add
add
sub
pushf
sbb
test
add
add
ret
test
add
cmp
fisttpll
add
in
in
jge
ja
add
sti
cld
sub
lods
add
enter
test
add
and
or
add
mov
idivl
in
inc
sbb
and
mov
dec
movsl
mov
pusha
ds
push
xchg
sub
add
lea
pop
mov
add
ja
add
sbb
popf
je
add
and
add
adc
add
daa
sbb
mov
mov
add
mov
push
add
xchg
jl
push
leave
je
add
pop
lret
mov
xor
jecxz
mov
add
add
push
cmp
push
mov
aam
lods
add
pop
push
stc
aad
adc
xchg
sbb
aaa
and
lret
fucomp
jle
popf
imul
add
adc
pop
mov
lods
cmp
lea
jecxz
or
add
inc
cli
add
pusha
fs
mov
movsb
add
xchg
ffreep
add
push
gs
inc
movsb
add
outsl
sub
add
icebp
and
aam
add
sbb
lds
mov
xor
add
mov
ljmp
add
sarl
add
sbb
jle
repz
hlt
jecxz
out
sbb
mov
and
xor
add
cmp
add
out
push
xchg
test
add
add
cmp
scas
sbb
push
ficomps
sbb
push
push
dec
jmp
sahf
mov
pop
inc
movsb
add
add
add
mov
or
add
decl
dec
addb
mov
or
add
add
or
add
sahf
pop
dec
mov
mov
jecxz
aaa
ret
add
xor
enter
mov
inc
addb
repz
mov
bound
inc
xchg
push
and
add
adc
xor
adc
mov
sahf
dec
and
repz
lahf
inc
mov
mov
jge
pop
subl
add
stos
jle
add
ret
cmp
push
xchg
push
ljmp
add
out
xchg
call
dec
cmp
fcom
adc
add
or
add
add
movsb
add
mov
xchg
cmp
repz
fcompp
xchg
sub
add
int
fistps
pop
sub
add
or
add
js
popa
dec
sbb
scas
add
sarl
inc
mov
mov
ja
addb
xor
ljmp
jo
xchg
outsb
in
mov
add
add
xor
xchg
enter
clc
ds
adc
lods
out
add
cmp
add
mov
sub
movsb
add
cmp
leave
jns
jge
fwait
pop
shl
add
sbb
add
and
jbe
popa
inc
xchg
or
add
rcrb
jp
popf
sarl
aas
stos
dec
orl
jno
hlt
mov
add
pop
cmpsb
add
out
xchg
add
add
lahf
enter
rcll
or
add
push
add
lahf
inc
test
movsl
repnz
repz
add
popf
repnz
inc
add
mov
inc
mov
mov
aaa
in
mov
cmp
cmc
push
sub
addb
arpl
add
or
daa
repnz
ficompl
pop
mov
mov
ljmp
or
add
mov
loopne
sbb
push
div
movsb
add
lcall
gs
add
add
mov
mov
cmpsb
add
add
cmpsl
xor
push
pop
ror
pop
sti
test
add
out
movsb
add
js
fisttps
and
add
sbb
add
jne,pt
add
inc
adc
in
mov
stos
add
stos
add
scas
add
pushf
pop
mov
dec
inc
jmp
push
adc
test
dec
jecxz
pop
in
pop
scas
add
ret
inc
jae
or
add
ffreep
xor
push
add
pop
sub
aaa
or
add
sbb
sti
mov
jo
mov
das
shlb
jo
add
pusha
and
add
pop
mov
test
add
adc
add
pop
sarl
xchg
mov
jbe
mov
jno
jo
mov
add
imul
dec
cmpsl
or
inc
adc
add
and
add
xorps
jge
cli
cmp
jg
inc
pop
stos
cmp
lea
mov
ljmp
and
add
push
add
pop
ljmp
cmp
stos
add
xor
add
fisttpl
arpl
mov
add
xor
mov
pop
aad
movsb
add
push
mov
pop
in
push
and
add
xor
push
sbb
add
into
decb
test
add
insl
jbe
sub
mov
add
add
add
add
mov
stos
test
add
mov
sarb
push
jb
in
loop
test
add
mov
mov
jecxz
lods
add
xor
jno
or
cmpsl
or
xor
add
and
mov
add
adc
jl
imul
ret
js
nop
jnp
cmp
lea
sub
add
adc
jmp
test
add
pop
shll
cltd
mov
add
jo
add
pop
data16
add
jno
mov
jmp
add
sbb
add
mov
jg
adc
insb
into
inc
cld
dec
xor
rcll
fs
or
add
xchg
cvtpi2ps
add
xchg
xor
cmp
add
and
outsb
pop
out
icebp
in
jl
mov
xchg
push
inc
ret
mov
add
shrl
add
mov
mov
call
ret
or
add
add
add
das
jge
rolb
add
or
add
clc
ljmp
add
add
inc
xor
adc
add
lahf
jmp
jae
pop
icebp
lods
mov
xchg
sbb
dec
cld
sub
add
rorl
or
movsb
add
movb
cmc
push
jge
loop
xor
push
popf
movsl
sbb
mov
mov
das
add
lcall
popa
cli
pop
stos
xchg
sub
add
nop
lds
jge
mov
pop
cmpsb
add
pop
mov
add
mov
lock
mov
add
cltd
in
sub
add
lea
add
add
add
rorb
pop
inc
into
cmc
imul
xchg
std
jb
mov
add
shll
push
add
imulb
jnp
push
scas
stos
add
push
push
fucomi
addb
lret
pop
ret
mov
insb
mov
adc
add
add
addb
addb
add
add
mov
add
leave
addr16
push
or
add
orps
add
mov
ret
add
scas
cmpsl
adc
add
dec
int
push
orl
addb
dec
and
xor
sub
ret
xor
clc
push
das
mov
add
mov
push
add
lods
cmp
jns
fdivr
xchg
jno
ljmp
dec
scas
add
test
add
and
sahf
push
inc
adc
scas
popa
push
add
xor
push
je
rcl
push
inc
repnz
and
add
add
ret
inc
mov
mov
add
add
pop
popa
push
inc
rol
icebp
push
mov
add
insb
inc
insl
pop
stos
add
leave
ljmp
jno
add
imul
std
dec
mov
dec
pop
inc
inc
and
add
gs
ret
sub
add
push
add
push
pop
xchg
mov
add
lods
add
insb
jl
adc
cmp
cmp
inc
xchg
out
and
add
aad
jp
add
or
add
je
and
add
jl
jns
mov
add
out
scas
lods
jno
mov
xor
fidivrl
into
push
mov
popa
sbb
scas
add
ja
jno,pt
cmp
fcoml
jne
shl
imul
pop
lods
add
add
add
inc
std
sub
jb
scas
add
lahf
jbe
repnz
or
add
adc
pusha
jle
add
push
add
bound
pop
add
add
push
add
xchg
add
faddl
push
or
add
or
into
add
scas
add
sbb
fs
pop
enter
in
orl
adc
push
sub
add
sbb
add
cmpsl
xchg
popa
outsl
add
push
add
fisubs
in
lods
add
add
add
jg
and
add
cmp
add
aad
cltd
or
add
pop
in
xchg
leave
bound
pop
pop
push
add
int
add
movsb
add
dec
mov
add
jp
add
scas
add
mov
loopne
add
add
add
pop
daa
xor
rcll
fsubrs
add
fmuls
add
mov
mov
add
test
add
and
add
dec
xchg
enter
mov
add
daa
out
jg
lcall
dec
ja
xchg
stos
add
cmp
add
popa
sub
scas
add
cmp
popa
jo
jl
stos
add
sub
add
shlb
inc
fsts
sbb
gs
add
imul
mov
sub
add
add
add
add
cltd
mov
add
jge
add
jne
add
or
add
add
insb
lods
adc
mov
pusha
mov
ret
pushf
mov
cltd
push
mov
mov
sub
movl
lea
push
call
sub
add
and
mov
mov
and
test
je
mov
push
push
push
cld
call
test
jne
mov
add
push
push
push
push
call
test
jne
xor
push
ret
lea
andl
push
push
push
call
push
cmp
lea
jne
movzbl
or
pop
mov
add
not
cld
imul
and
jne
call
rorb
notrack
cmp
mov
add
ret
mov
mov
mov
inc
or
lea
lea
add
lea
shr
lock
sub
and
jmp
push
mov
jmp
scas
add
cmp
sti
dec
lods
add
rcrb
add
mov
scas
shll
add
jb
sub
add
or
add
cmp
aaa
cbtw
and
xor
pop
fwait
sbb
mov
add
inc
jle
lahf
lds
jnp
in
add
daa
clc
and
add
add
lcall
lock
inc
lods
add
sub
and
mov
add
in
mov
scas
add
xchg
sbb
adc
xchg
add
push
sbb
dec
mov
dec
and
add
add
add
aad
mov
mov
inc
sbbl
lcall
das
or
add
cmp
movsb
add
lahf
div
sbb
imul
in
cmpsb
add
jb
addb
or
add
or
add
xchg
mov
fcompp
out
mov
rcll
addr16
and
add
add
fs
stos
out
add
add
movsb
add
pop
stos
mov
add
lock
add
addb
in
cld
sbb
inc
push
add
ja
and
inc
mov
jbe
aam
mov
add
ret
pop
ret
fmul
xchg
pinsrw
ja
scas
data16
int
add
daa
sub
add
mov
xchg
lock
and
add
mov
xchg
add
add
loope
popf
push
mov
xchg
add
sub
add
pop
pcmpgtd
mov
add
test
add
sbb
sub
add
adc
cwtl
lds
xchg
or
xlat
in
push
ret
ja
cmpsl
cmc
daa
push
add
ljmp
icebp
roll
repnz
add
adc
mov
inc
out
xor
hlt
aas
popa
loop
xchg
xchg
scas
add
or
in
xor
jp
push
sar
inc
jecxz
sub
add
fldenv
push
add
adc
add
push
gs
cli
and
scas
cmp
imul
add
popf
shlb
add
mov
add
std
inc
insl
ja
js
add
push
outsb
add
add
popa
inc
cmp
jp
sahf
add
inc
xchg
std
bound
sbb
lods
adc
cld
cld
add
arpl
subl
add
add
pop
xchg
xchg
mov
cmpsb
add
dec
xor
aam
cmpsb
add
push
and
xor
or
add
std
push
add
testb
cmp
add
clc
jp
adc
ds
aam
jbe
arpl
add
repnz
mov
jnp
push
ljmp
pop
jle
stc
fmuls
add
or
add
jl
add
add
xor
sub
add
std
into
add
mov
and
add
shll
inc
or
add
out
in
inc
enter
addb
pusha
or
push
xlat
movsb
add
in
aad
pop
in
pop
mov
daa
fldcw
arpl
cwtl
sahf
lods
adc
push
mov
test
add
fisttpll
std
fcmovb
add
add
cmp
loop
enter
add
xchg
pusha
or
add
aas
roll
and
add
ljmp
push
xlat
test
add
leave
xor
xchg
add
inc
push
dec
insb
cmpsl
mov
add
cwtl
pop
adcl
xor
and
add
arpl
xchg
popf
push
xadd
xor
pop
xchg
daa
cmc
mov
add
mov
mov
add
add
xor
mov
lret
push
jns
jge
mov
xor
add
in
aad
fs
jecxz
cmp
jnp
jnp
aas
fsqrt
cmc
pushf
fidivs
add
jb
cmc
mov
mov
or
mov
add
add
and
add
mov
xchg
cli
sar
mov
mov
inc
in
and
dec
inc
std
loopne,pt
and
add
add
int
sbb
out
adc
pop
lcall
ud0
add
imul
pushf
scas
ret
lods
xor
scas
lds
mov
add
dec
cmp
aad
sbb
mov
data16
xchg
jnp
movsb
add
inc
pop
xchg
ret
mov
add
repz
pop
cmp
or
add
add
xchg
adc
jne
dec
mov
add
subl
jo
sub
add
add
rcll
mov
adc
jp
xor
or
add
int
pop
push
push
mov
jge
dec
pop
dec
mov
or
add
mov
jge
fisubl
add
and
stos
xchg
faddl
data16
pop
jecxz
test
add
hlt
sub
lods
add
jle
test
jg
jbe
imul
pop
adc
xchg
ret
test
add
push
outsl
xor
xchg
xchg
add
rcrb
ja
push
pop
loopne
fmull
add
int3
shrl
or
and
hlt
or
dec
xchg
xor
adc
int3
or
add
pop
arpl
jmp
insb
sub
pop
inc
and
shll
pushf
dec
jecxz
push
add
cmp
in
add
cmpsb
add
out
mov
add
shlb
scas
out
mov
push
ret
push
mov
mov
add
jmp
pop
mov
lcall
inc
mov
add
movsb
add
push
xchg
add
add
in
std
repz
mov
inc
mov
jp
add
sar
jecxz
mov
das
test
aad
pop
nop
cmp
loop
scas
add
mov
mov
fcomip
sub
add
sbb
push
hlt
mov
mov
add
add
popf
dec
loopne
dec
decb
pop
or
add
push
inc
xchg
mov
cmp
push
lea
testb
add
enter
inc
pop
inc
insl
or
add
mov
lahf
adc
pop
test
add
cltd
lods
xor
pushf
mov
add
add
enter
add
sbb
mov
outsl
jl
inc
add
xchg
mov
dec
das
push
jl
imull
rorb
addb
dec
les
mov
add
add
sub
add
xor
jle
xor
cmc
rcl
mov
cld
pusha
addr16
sub
cmc
loop
mov
cmpsl
je
lea
push
call
cmpsl
or
add
add
sbb
addb
fisubrs
add
pusha
sub
sub
add
add
mov
add
mov
lods
add
icebp
shll
add
cmpsb
add
adc
imull
add
aaa
sbb
mov
daa
mov
add
ret
sbb
insb
inc
xchg
lock
icebp
or
dec
fldenv
xor
js
jae
add
mov
hlt
jge
sti
mov
and
add
fwait
jg
mov
aam
xchg
cmp
add
add
repnz
insl
push
fcom
jp
addb
adc
pop
ss
dec
bound
nop
cmp
fnstcw
sub
add
add
dec
pop
mov
aaa
je
dec
fs
cmp
mov
xor
xor
les
mov
dec
xchg
insb
roll
add
mov
xor
sbb
jns
or
add
icebp
jo
sbb
mov
sbb
add
repnz
notb
jno
imul
outsl
cmpsl
push
jg
sbb
add
add
or
add
jl
fs
xor
inc
js
xchg
and
add
mov
and
add
call
add
mov
push
add
je
jo
and
push
add
adc
addb
pusha
mov
jmp
add
add
fimuls
add
adc
jno
add
pop
push
add
jp
add
push
add
mov
add
mov
rolb
xchg
and
add
mov
sti
dec
outsb
xor
add
shl
fcmovbe
xchg
add
add
mov
rolb
add
push
in
cltd
jne
xchg
mov
add
fbstp
and
add
and
add
inc
mov
test
push
mov
int
outsl
fldenv
push
mov
inc
dec
sbb
mov
or
add
loop
add
or
add
add
add
add
lret
jle
mov
aad
add
arpl
test
sub
add
dec
mov
jae
and
sub
dec
cmp
test
add
adc
add
add
je
or
les
ret
sub
shr
enter
add
push
mov
push
jb
push
push
mov
pop
push
add
fidivrs
pop
int
imul
js
repnz
psrld
add
mov
in
adc
add
add
add
pop
xchg
clc
mov
aas
lret
pushf
push
add
arpl
add
inc
insb
or
jge
inc
pop
xor
cmc
mulb
rorb
or
add
dec
add
leavew
sahf
js
enter
test
cmpsl
ja
in
inc
cmc
mov
add
out
imul
push
test
add
shll
dec
jbe
lods
lods
and
add
sub
add
add
add
lret
cmp
lea
popf
loope
dec
push
in
test
jns
call
cmp
add
inc
mov
into
in
shlb
add
pop
adc
add
dec
sbb
movsb
add
cmpsb
add
lahf
xchg
inc
stc
sbb
std
cwtl
add
xor
add
xor
insb
push
scas
pop
ret
add
add
adc
add
pop
lahf
jecxz
add
cmp
aaa
sub
add
add
mov
mov
add
lea
pop
push
int3
or
add
add
lahf
sbb
mov
shlb
fsubrp
enter
jp
add
les
add
pusha
and
dec
insb
pop
mov
repnz
inc
fisttps
mov
icebp
cmc
mov
cmp
lods
push
scas
mov
mov
push
sbb
pop
mov
lock
fsubrl
aas
stos
adc
iret
int
adc
xor
shll
add
cmpsl
or
dec
rclb
or
add
loop
add
mov
add
jns
out
out
sub
add
xchg
test
add
add
cmp
popf
add
add
addb
xchg
add
loop
add
push
add
into
jmp
dec
jae
xchg
shlb
in
jmp
add
fs
push
pop
int3
test
add
popf
cli
pop
call
mov
pop
imul
pushl
jp
lret
popf
sbb
sti
add
add
add
ror
cwtl
push
mov
jle
mov
xchg
lock
jp
add
or
sub
sbb
ja
inc
mov
xchg
sub
push
or
add
loope
jp
loope
mov
rol
add
in
jl
movsb
add
fs
xor
repz
into
and
add
xchg
scas
shlb
add
add
clc
sbb
ljmp
mov
push
jmp
daa
mov
shlb
test
add
mov
add
in
sbb
test
add
xlat
repnz
xchg
add
into
xchg
fbstp
xchg
adc
fucom
iret
in
das
cmpl
in
scas
add
mov
sarb
mov
add
xor
xchg
fwait
jb
sub
add
cmc
jle
xor
add
pop
push
jmp
cmp
movsb
add
shll
add
imul
lods
add
add
add
movsb
add
lret
add
and
pop
inc
adc
cmp
sbb
ficompl
jae
fisubs
add
xor
xchg
movsl
sub
add
mov
xor
sbb
fisubrs
dec
cmp
sbb
lcall
push
pop
dec
jbe
imul
add
or
xchg
dec
data16
add
mov
jae
fists
in
mov
xor
adc
jecxz
mov
add
sub
stos
add
in
xorl
ss
inc
mov
add
add
cltd
adc
scas
cmpsb
add
out
test
add
int
nop
jge
add
jo
push
add
clc
ljmp
add
jg
fstpt
cmp
add
sub
add
xchg
jae
xchg
out
sbb
mov
add
push
xor
jp
and
add
or
add
das
ror
mov
add
push
add
mov
add
sub
add
sub
inc
push
enter
rcr
mov
mov
lods
add
je
add
loop
and
add
inc
popa
aad
pop
and
add
add
add
mov
add
xor
add
mov
cmc
pop
lds
imul
add
lea
add
fldl
add
jmp
adc
jp
filds
jbe
andl
add
add
fsubrl
or
add
xchg
fdivrs
inc
sbb
add
inc
icebp
cmp
add
aad
add
push
xchg
imul
add
add
mov
add
ljmp
dec
sti
std
sub
add
or
add
mov
fmull
add
stos
add
jnp
addb
fwait
lods
cwtl
xchg
in
add
xor
add
inc
mov
xchg
pushf
cmp
add
fists
mov
inc
mov
stos
push
inc
std
inc
cmpsl
and
add
add
add
sti
fninit
mov
add
push
jb
pusha
mov
popa
addb
push
js
cmp
mov
in
insb
dec
test
add
out
and
cld
popa
lcall
add
add
fst
int3
das
xchg
or
sub
add
push
pop
adc
add
xor
aam
std
jb
add
sub
add
add
xor
add
popf
pop
jo
cmc
fcompl
mov
pushf
mov
add
push
rcr
adc
into
out
mov
add
add
or
ficomps
add
scas
add
test
add
mov
push
aad
stos
add
push
mov
inc
ficoms
out
clc
repnz
nop
nop
jae
rcrl
add
mov
pushf
jae
add
popf
stos
dec
xchg
add
xchg
stos
add
dec
rep
push
mov
xchg
ret
mov
stos
add
outsb
sahf
jg
add
push
mov
xchg
ret
fisubs
xlat
jl
dec
aas
ret
clc
repnz
nop
nop
jae
mov
jl
movl
rclb
outsb
inc
add
or
xlat
rcl
dec
clc
dec
inc
clc
repnz
nop
nop
jae
jns
data16
stos
fwait
clc
repnz
nop
nop
jae
add
add
mov
jle
push
mov
jmp
mov
ja
push
add
enter
test
jle
add
roll
add
stc
test
enter
add
jge
clc
repnz
nop
nop
jae
add
shrl
add
push
mov
xchg
ret
xchg
fs
add
add
add
call
clc
repnz
nop
nop
jae
xchg
add
cld
nop
nop
jae
add
mov
add
push
mov
xchg
ret
xchg
add
es
adc
add
outsb
cmp
cld
nop
nop
jae
add
shll
arpl
repnz
nop
nop
jae
add
mov
adcb
jmp
lds
test
clc
repnz
nop
nop
jae
jl
add
pop
add
inc
adc
repnz
nop
nop
jae
dec
add
jmp
mov
push
mov
xchg
ret
add
sbb
add
mov
aam
jmp
jns
or
add
data16
mov
mov
push
mov
xchg
ret
roll
mov
add
clc
repnz
nop
nop
jae
es
jg
add
xchg
mov
clc
repnz
nop
nop
jae
dec
add
dec
shlb
add
sbb
fistpl
push
mov
xchg
ret
add
add
mov
test
or
add
nop
jmp
lds
mov
xchg
ret
stos
add
mov
inc
iret
lss
clc
repnz
nop
nop
jae
add
clc
repnz
nop
nop
jae
add
add
add
lea
push
push
add
add
fildl
add
test
repnz
nop
nop
jae
add
add
sbb
cmp
mov
xchg
ret
add
add
mov
or
add
mov
clc
repnz
nop
nop
jae
lea
add
cmp
out
clc
repnz
nop
nop
jae
add
xor
mov
clc
repnz
nop
nop
jae
add
test
nop
cmp
repnz
nop
nop
jae
test
push
add
xor
add
clc
repnz
nop
nop
jae
aaa
add
add
rorl
mov
xchg
ret
outsb
add
sbb
xchg
popl
clc
repnz
nop
nop
jae
add
add
mov
jge
push
mov
xchg
ret
add
add
add
add
add
add
aaa
add
push
mov
xchg
ret
add
mov
push
mov
xchg
ret
lea
sbb
jg
lea
sub
clc
repnz
nop
nop
jae
add
mov
nop
nop
jae
mov
cmp
jns
pop
push
mov
xchg
ret
add
add
js
loope
jg
clc
repnz
nop
nop
jae
cld
js
add
scas
adc
add
repnz
nop
nop
jae
stc
xchg
xchg
pop
mov
clc
repnz
nop
nop
jae
rcrb
aaa
and
pop
jae
add
add
js
add
mov
clc
repnz
nop
nop
jae
test
add
clc
repnz
nop
nop
jae
add
add
add
clc
repnz
nop
nop
jae
add
jg
add
mov
add
cwtl
sahf
testl
nop
jmp
adc
add
xchg
add
add
add
cld
nop
nop
jae
stos
hlt
add
pop
jmp
es
repnz
nop
nop
jae
add
mov
xchg
and
mov
xchg
ret
add
add
add
sahf
arpl
popa
nop
push
mov
leave
nop
jmp
sbb
add
add
fs
mov
xchg
ret
stos
add
add
or
add
movzwl
nop
push
mov
leave
nop
jmp
adc
mov
push
mov
xchg
ret
add
add
mov
aaa
addb
xor
nop
nop
jae
fiadds
add
and
clc
repnz
nop
nop
jae
add
adc
or
add
jne
fdivrp
repnz
nop
nop
jae
add
fimuls
push
nop
push
mov
leave
nop
jmp
jg
lea
add
rcrb
repnz
nop
nop
jae
add
adc
add
add
push
cmp
ret
add
push
fdivrp
sti
insb
inc
or
add
push
push
mov
xchg
ret
aaa
outsb
lea
es
sub
jae
push
mov
leave
nop
jmp
gs
incl
movsb
add
sbb
jmp
call
inc
add
cld
add
add
mov
sub
add
repnz
nop
nop
jae
mov
jmp
call
clc
repnz
nop
nop
jae
add
add
mov
mov
xchg
ret
stos
add
add
dec
lock
mov
clc
repnz
nop
nop
jae
jmp
add
mov
mov
mov
add
pop
push
clc
repnz
nop
nop
jae
hlt
stos
sbb
add
insb
push
pop
pop
clc
repnz
nop
nop
jae
add
pop
ficoms
add
nop
push
mov
leave
nop
jmp
add
mov
xor
cld
nop
nop
jae
add
mov
xchg
roll
in
leave
nop
jmp
add
add
add
mov
in
leave
nop
jmp
xchg
add
testl
sub
add
xchg
add
add
adc
push
clc
repnz
nop
nop
jae
add
sbb
mov
xlat
std
mov
nop
push
mov
leave
nop
jmp
add
hlt
add
push
clc
repnz
nop
nop
jae
add
stos
xor
add
pushw
nop
push
mov
leave
nop
jmp
lds
add
pop
xchg
add
jno
sub
add
in
addb
cmp
ret
add
pop
stc
add
add
xchg
in
jbe
clc
repnz
nop
nop
jae
fiadds
popf
xlat
lds
lods
push
mov
xchg
ret
pop
adc
add
mov
push
clc
repnz
nop
nop
jae
mov
add
mov
leave
nop
jmp
add
cmp
xorl
clc
repnz
nop
nop
jae
stos
ret
test
add
nop
push
mov
leave
nop
jmp
dec
jg
mov
repnz
nop
nop
jae
mov
lds
add
clc
repnz
nop
nop
jae
mov
sti
add
call
clc
repnz
nop
nop
jae
jns
jns
inc
adc
add
repnz
nop
nop
jae
add
add
repnz
nop
nop
jae
repnz
aaa
jl
sbb
add
add
repnz
nop
nop
jae
test
call
push
mov
xchg
ret
rolb
add
xchg
clc
repnz
nop
nop
jae
add
add
jmp
jno
repz
mov
xchg
ret
mov
mov
enter
push
mov
leave
nop
jmp
stos
add
add
dec
popa
clc
repnz
nop
nop
jae
add
jmp
add
add
aas
adc
nop
jmp
gs
add
jl
cmp
and
add
repnz
nop
nop
jae
test
jle
add
out
gs
inc
add
add
dec
jl
add
fwait
push
mov
xchg
ret
add
xchg
add
stos
jmp
insb
jle
popa
clc
repnz
nop
nop
jae
sbb
pop
sar
mov
add
nop
push
mov
leave
nop
jmp
inc
dec
add
call
clc
repnz
nop
nop
jae
repnz
add
out
push
push
mov
xchg
ret
add
sarb
add
add
clc
repnz
nop
nop
jae
js
add
js
mov
clc
repnz
nop
nop
jae
sbb
add
push
test
add
cmp
add
clc
repnz
nop
nop
jae
sbb
lea
repz
repnz
nop
nop
jae
insb
jg
add
add
push
mov
add
add
xchg
mov
add
pop
movsl
push
or
push
iret
ret
clc
repnz
nop
nop
jae
mov
add
xchg
add
mov
xchg
ret
add
mov
xchg
dec
mov
pop
mov
push
mov
xchg
ret
add
push
dec
stos
add
lea
push
mov
xchg
ret
add
pop
dec
add
lahf
mov
clc
repnz
nop
nop
jae
xlat
add
add
nop
sbb
test
sub
add
repnz
nop
nop
jae
add
pop
movzwl
nop
push
mov
leave
nop
jmp
mov
in
pushl
clc
repnz
nop
nop
jae
add
push
stos
add
pop
shl
clc
repnz
nop
nop
jae
test
stos
lea
nop
push
mov
leave
nop
jmp
sti
inc
outsb
outsb
insb
stos
mov
in
leave
nop
jmp
add
mov
add
push
mov
xchg
ret
add
jns
stc
fcmovnu
subl
push
mov
xchg
ret
add
data16
vpor
repnz
nop
nop
jae
add
sbb
add
pusha
clc
repnz
nop
nop
jae
or
add
sti
add
add
push
clc
repnz
nop
nop
jae
add
add
and
in
leave
nop
jmp
xchg
roll
add
add
orl
sbb
add
add
mov
pushf
xchg
sub
push
mov
xchg
ret
test
mov
and
add
push
push
mov
xchg
ret
es
add
les
jmp
in
leave
nop
jmp
add
xchg
fiadds
dec
testl
pop
incl
xchg
sbb
es
rep
nop
push
mov
leave
nop
jmp
mov
add
imul
nop
jae
add
mov
clc
repnz
nop
nop
jae
mov
xor
jb
jmp
jno
add
add
dec
add
add
data16
add
add
clc
repnz
nop
nop
jae
add
in
push
mov
add
add
ret
add
sarb
scas
push
add
test
add
arpl
rclb
jmp
add
fstpt
push
call
add
fstpt
clc
repnz
nop
nop
jae
add
add
lcall
adc
repnz
nop
nop
jae
add
mov
add
add
add
add
clc
repnz
nop
nop
jae
lea
movl
add
test
add
jnp
push
mov
xchg
ret
add
incl
insb
sbb
loopne
clc
repnz
nop
nop
jae
cld
jg
mov
test
and
add
repnz
nop
nop
jae
jle
js
push
clc
repnz
nop
nop
jae
add
add
mov
push
mov
leave
nop
jmp
roll
add
fildl
jl
and
nop
nop
jae
sbb
add
add
push
mov
xchg
ret
add
add
add
push
add
addr16
nop
push
mov
leave
nop
jmp
add
gs
jle
jns
mov
sahf
cld
lea
repnz
nop
nop
jae
add
shll
mov
enter
in
leave
nop
jmp
mov
cld
adc
add
mov
push
mov
xchg
ret
sbb
jns
push
outsl
push
clc
repnz
nop
nop
jae
insb
or
icebp
add
clc
repnz
nop
nop
jae
add
inc
push
clc
repnz
nop
nop
jae
sbb
sti
xchg
and
add
sar
repnz
nop
nop
jae
insb
jl
add
add
or
nop
jae
repnz
add
nop
nop
jae
mov
add
xchg
mov
add
jp
jbe
nop
push
mov
leave
nop
jmp
lea
lea
add
clc
repnz
nop
nop
jae
add
add
mov
cmp
add
pushl
push
mov
xchg
ret
hlt
add
mov
add
dec
push
clc
repnz
nop
nop
jae
add
add
insb
out
sti
add
add
nop
push
mov
leave
nop
jmp
mov
roll
repnz
nop
nop
jae
js
mov
add
jns
adc
repnz
nop
nop
jae
aaa
xchg
add
sbb
sti
push
clc
repnz
nop
nop
jae
add
add
es
and
mov
xchg
ret
add
add
push
xlat
add
add
imul
jmp
insb
sub
dec
loope
sti
nop
push
mov
leave
nop
jmp
add
add
repnz
mov
nop
push
mov
leave
nop
jmp
pop
pop
add
add
imul
cmp
push
mov
leave
nop
jmp
add
add
sbb
xchg
push
clc
repnz
nop
nop
jae
fs
roll
mov
push
mov
xchg
ret
shr
mov
add
sbb
add
gs
mov
mov
dec
add
jne
clc
repnz
nop
nop
jae
add
add
mov
nop
push
mov
leave
nop
jmp
add
add
push
sub
add
jo
xlat
pop
clc
repnz
nop
nop
jae
mov
add
hlt
add
jne
clc
repnz
nop
nop
jae
movl
cld
nop
nop
jae
add
add
add
stos
nop
push
mov
leave
nop
jmp
sti
push
jmp
mov
es
in
pop
adc
clc
mov
xchg
ret
add
adc
mov
cld
nop
nop
jae
adc
add
add
clc
repnz
nop
nop
jae
mov
xchg
add
or
adc
mov
inc
add
mov
jg
add
inc
je
clc
repnz
nop
nop
jae
sti
add
xor
clc
repnz
nop
nop
jae
dec
add
xlat
fildl
or
repnz
nop
nop
jae
add
xchg
shll
cld
nop
nop
jae
xchg
add
jg
add
std
dec
nop
push
mov
leave
nop
jmp
sbb
cld
sub
repz
push
mov
xchg
ret
xor
mov
add
aaa
add
clc
repnz
nop
nop
jae
stos
add
add
ret
push
mov
xchg
ret
pop
aaa
add
xchg
xchg
add
sbb
mov
add
nop
jmp
add
pop
mov
repnz
nop
nop
jae
stc
dec
test
add
nop
push
mov
leave
nop
jmp
mov
add
repnz
nop
nop
jae
test
jg
add
je
js
repnz
nop
nop
jae
dec
add
jmp
notl
push
mov
leave
nop
jmp
add
sarb
cld
nop
nop
jae
add
add
mov
nop
push
mov
leave
nop
jmp
add
mov
and
add
pop
add
add
repnz
nop
nop
jae
add
add
push
mov
xchg
ret
add
jl
add
inc
jmp
nop
push
mov
leave
nop
jmp
xchg
mov
dec
add
push
mov
add
jo
add
incb
add
addb
mov
repnz
nop
nop
jae
add
add
add
mov
nop
push
mov
leave
nop
jmp
jg
add
lea
add
add
add
js
inc
add
test
add
xor
push
push
mov
xchg
ret
stc
add
jmp
add
mov
add
clc
repnz
nop
nop
jae
fs
add
dec
jmp
roll
js
add
jle
add
add
pop
add
nop
nop
jae
add
fildl
mov
add
nop
push
mov
leave
nop
jmp
xchg
mov
xor
push
mov
xchg
ret
add
mov
outsb
sbb
movsb
clc
repnz
nop
nop
jae
add
add
add
add
mov
roll
repnz
nop
nop
jae
stos
add
xabort
cld
nop
nop
jae
add
add
push
es
jecxz
repnz
nop
nop
jae
movl
nop
push
mov
leave
nop
jmp
add
add
fmuls
rclb
mov
add
add
add
lcall
cld
nop
nop
jae
fistpl
add
jg
fdivr
repnz
nop
nop
jae
add
xchg
pushf
out
add
data16
add
add
jle
popf
mov
push
clc
repnz
nop
nop
jae
xlat
xchg
add
pop
cmp
sub
rclb
nop
jmp
sub
add
jnp
push
mov
xchg
ret
add
add
je
add
daa
push
push
mov
xchg
ret
add
fldt
mov
sbb
add
nop
jmp
pop
add
xchg
push
mov
add
add
push
xchg
push
add
push
jae
mov
je
adc
clc
repnz
nop
nop
jae
incl
jns
add
repnz
nop
nop
jae
add
xchg
add
and
add
mov
push
mov
xchg
ret
cmp
fs
add
repnz
nop
nop
jae
data16
add
add
add
push
mov
xchg
ret
add
stc
add
push
mov
xchg
ret
add
xchg
insb
add
add
das
je
nop
push
mov
leave
nop
jmp
add
xchg
xor
add
clc
repnz
nop
nop
jae
add
add
sub
nop
push
mov
leave
nop
jmp
add
push
shr
jg
rclb
push
cmp
ret
add
add
or
add
mov
clc
repnz
nop
nop
jae
test
add
jnp
clc
repnz
nop
nop
jae
data16
fiadds
sub
add
push
mov
xchg
ret
adc
add
mov
push
mov
xchg
ret
sbb
es
push
stos
dec
add
sbb
push
mov
xchg
ret
add
rolb
cld
fs
push
push
mov
xchg
ret
mov
add
add
xorl
clc
repnz
nop
nop
jae
add
cld
lock
rcrb
mov
clc
repnz
nop
nop
jae
xchg
dec
add
and
mov
xchg
ret
stos
test
jns
or
add
cmc
popa
nop
push
mov
leave
nop
jmp
xchg
add
rorl
add
add
nop
jmp
pop
add
shlb
add
cmpsb
add
sarb
clc
repnz
nop
nop
jae
repnz
mov
mov
clc
repnz
nop
nop
jae
adc
sti
fisttpl
jmp
js
add
jl
lds
mov
jg
popf
lret
add
fmull
jne
push
mov
xchg
ret
add
add
add
jl
mov
clc
repnz
nop
nop
jae
add
add
repz
clc
repnz
nop
nop
jae
adc
add
jg
mov
clc
repnz
nop
nop
jae
es
pop
xchg
xchg
add
nop
push
mov
leave
nop
jmp
lea
addr16
clc
repnz
nop
nop
jae
add
xchg
lea
popf
add
add
nop
jmp
insb
or
mov
nop
push
mov
leave
nop
jmp
dec
add
xor
add
add
arpl
xchg
ret
outsb
roll
add
add
push
push
pop
clc
repnz
nop
nop
jae
stos
add
add
add
sbb
cld
nop
nop
jae
add
add
add
mov
add
stc
lea
clc
repnz
nop
nop
jae
add
mov
sbb
cld
nop
nop
jae
jns
mov
pusha
clc
repnz
nop
nop
jae
fdivp
stos
xchg
jmp
jg
decl
nop
nop
jae
mov
add
add
dec
gs
clc
repnz
nop
nop
jae
add
add
lds
push
sub
xor
add
add
js
lea
pop
clc
repnz
nop
nop
jae
add
add
jl
add
nop
push
mov
leave
nop
jmp
add
add
shlb
clc
repnz
nop
nop
jae
add
inc
mov
add
xor
fistpl
clc
repnz
nop
nop
jae
cmp
test
loopne
add
clc
repnz
nop
nop
jae
data16
hlt
roll
fmul
mov
sbb
clc
repnz
nop
nop
jae
add
xor
add
cld
nop
nop
jae
add
cld
pop
movzwl
clc
repnz
nop
nop
jae
stos
add
add
outsb
push
je
add
repnz
nop
nop
jae
sbb
xchg
jns
cmp
mov
add
loop
clc
repnz
nop
nop
jae
shrb
add
clc
repnz
nop
nop
jae
dec
hlt
test
rolb
loope
push
mov
xchg
ret
mov
add
jmp
and
nop
push
mov
leave
nop
jmp
add
mov
xor
repnz
nop
nop
jae
hlt
js
incl
add
test
jge
add
add
jmp
add
add
faddp
dec
pop
nop
push
mov
leave
nop
jmp
sbb
add
jl
je
clc
repnz
nop
nop
jae
jg
shr
fwait
clc
repnz
nop
nop
jae
shr
push
aaa
add
stos
sbb
push
push
add
add
ja
inc
add
add
add
pop
movzwl
nop
push
mov
leave
nop
jmp
add
lea
add
dec
cmp
nop
jmp
add
mov
add
filds
xchg
add
lea
test
insb
clc
repnz
nop
nop
jae
add
add
add
or
addl
cmp
ret
jmp
roll
add
add
mov
push
clc
repnz
nop
nop
jae
rolb
lea
rcr
add
fistps
repnz
nop
nop
jae
jmp
dec
pop
add
mov
mov
clc
repnz
nop
nop
jae
xor
sti
add
jl
clc
repnz
nop
nop
jae
popf
add
add
lea
push
mov
xchg
ret
add
add
add
insb
add
add
and
add
push
nop
push
mov
leave
nop
jmp
add
add
cld
aas
pop
nop
push
mov
leave
nop
jmp
fisubs
gs
inc
add
ss
sbb
push
mov
xchg
ret
adc
add
add
add
inc
push
add
add
stos
jmp
js
popa
push
clc
repnz
nop
nop
jae
lds
xchg
dec
add
xchg
stos
and
cld
nop
nop
jae
add
add
add
mov
push
mov
xchg
ret
stc
add
stos
add
clc
repnz
nop
nop
jae
add
adc
aaa
roll
pop
nop
push
mov
leave
nop
jmp
add
fildl
mov
add
jb
add
cmp
and
add
add
clc
repnz
nop
nop
jae
add
mov
add
pop
inc
add
sbb
cmp
rolb
mov
and
repnz
nop
nop
jae
add
fadds
add
clc
repnz
nop
nop
jae
add
jo
flds
in
leave
nop
jmp
outsb
fiadds
aaa
add
add
add
add
mov
add
dec
mov
jns
clc
repnz
nop
nop
jae
add
add
add
mov
add
fdivr
repnz
nop
nop
jae
add
jae
push
mov
xchg
ret
add
fistpl
add
jl
nop
push
mov
leave
nop
jmp
es
nop
jno
jmp
nop
nop
jae
faddp
add
push
lds
aad
test
stc
clc
repnz
nop
nop
jae
insb
roll
and
add
clc
repnz
nop
nop
jae
pop
fistl
or
outsb
mov
call
inc
add
fisubs
js
es
cmp
repnz
nop
nop
jae
add
fiadds
rorb
lods
push
mov
xchg
ret
sbb
pop
adc
repnz
add
cld
nop
nop
jae
add
data16
inc
mov
es
clc
repnz
nop
nop
jae
popf
add
add
push
mov
leave
nop
jmp
sarl
test
xchg
les
add
nop
jmp
jmp
dec
add
lea
clc
repnz
nop
nop
jae
add
mov
push
mov
xchg
ret
push
hlt
dec
rcrl
fstpt
clc
repnz
nop
nop
jae
add
xlat
add
add
repnz
nop
nop
jae
js
xor
push
scas
add
hlt
iret
mov
push
mov
xchg
ret
cld
mov
add
mov
leave
nop
jmp
add
dec
aaa
les
add
xor
mov
leave
nop
jmp
add
sti
add
inc
call
clc
repnz
nop
nop
jae
add
sbb
nop
nop
jae
mov
add
cld
nop
nop
jae
add
js
push
pusha
clc
repnz
nop
nop
jae
outsb
sub
or
push
out
orl
add
nop
jmp
add
hlt
dec
dec
add
push
mov
xchg
ret
push
add
xchg
add
mov
and
repnz
nop
nop
jae
test
add
push
mov
xchg
ret
rcl
xchg
jle
add
add
ret
nop
push
mov
leave
nop
jmp
stos
cld
stos
fs
add
add
clc
repnz
nop
nop
jae
mov
add
mov
add
nop
push
mov
leave
nop
jmp
add
add
maskmovq
testl
nop
push
mov
leave
nop
jmp
add
mov
nop
push
mov
leave
nop
jmp
add
add
add
daa
fwait
clc
repnz
nop
nop
jae
add
add
add
jl
push
clc
repnz
nop
nop
jae
add
sti
stc
xchg
mov
pop
dec
pop
pop
lea
nop
push
mov
leave
nop
jmp
add
add
add
mov
enter
nop
nop
jae
add
add
sbb
mov
mov
clc
repnz
nop
nop
jae
inc
add
data16
jle
cmp
movsb
nop
push
mov
leave
nop
jmp
mov
movl
add
nop
push
mov
leave
nop
jmp
add
js
sbb
push
mov
xchg
ret
add
or
jg
add
push
mov
xchg
ret
add
add
gs
push
loop
cltd
mov
clc
repnz
nop
nop
jae
xchg
fildl
repnz
repnz
nop
nop
jae
jg
add
add
pop
clc
repnz
nop
nop
jae
add
add
add
add
fwait
push
mov
xchg
ret
js
jmp
add
push
sahf
pop
sbb
xchg
push
mov
xchg
ret
add
add
call
add
nop
push
mov
leave
nop
jmp
aaa
add
mov
inc
outsl
movswl
nop
push
mov
leave
nop
jmp
or
xor
clc
repnz
nop
nop
jae
mov
xchg
cld
test
xor
nop
push
mov
leave
nop
jmp
cld
add
lcall
test
xchg
ret
test
cmp
mov
repnz
clc
repnz
nop
nop
jae
mov
xchg
xchg
mov
clc
repnz
nop
nop
jae
roll
sub
mov
clc
repnz
nop
nop
jae
lea
test
repnz
nop
nop
jae
es
jg
mov
fildl
jo
fistpl
clc
repnz
nop
nop
jae
cld
dec
pop
mov
push
push
mov
xchg
ret
stc
add
mov
xchg
clc
repnz
nop
nop
jae
jmp
hlt
add
roll
dec
stos
add
dec
aas
pusha
nop
push
mov
leave
nop
jmp
rolb
cld
mov
adc
nop
nop
jae
dec
or
add
jmp
jp
nop
push
mov
leave
nop
jmp
data16
add
add
ja
push
mov
xchg
ret
add
add
pop
adc
push
clc
repnz
nop
nop
jae
add
mov
add
fistpl
nop
push
mov
leave
nop
jmp
js
roll
lea
inc
or
repnz
nop
nop
jae
add
stos
pop
add
jp
adc
cmp
mov
xchg
ret
bnd
add
insb
adc
or
add
xchg
clc
repnz
nop
nop
jae
add
add
fildl
jne
pop
cmp
repnz
nop
nop
jae
mov
mov
mov
repnz
nop
nop
jae
mov
mov
fmull
add
in
pop
clc
repnz
nop
nop
jae
fcompl
test
add
add
clc
repnz
nop
nop
jae
sti
add
dec
nop
push
mov
leave
nop
jmp
js
dec
mov
dec
out
in
pop
push
mov
xchg
ret
add
aaa
add
jl
jl
aam
je
clc
repnz
nop
nop
jae
sbb
add
outsl
arpl
add
repnz
nop
nop
jae
mov
test
cmp
clc
repnz
nop
nop
jae
lea
lea
cmp
call
nop
jae
sti
add
cmp
mov
leave
nop
jmp
or
add
add
push
mov
xchg
ret
add
add
sbb
cld
nop
nop
jae
add
add
push
sbb
push
mov
xchg
ret
js
add
rorb
clc
repnz
nop
nop
jae
add
repnz
outsl
imul
clc
repnz
nop
nop
jae
repnz
decl
test
add
mov
leave
nop
jmp
add
clc
repnz
nop
nop
jae
cmp
add
inc
add
decl
push
mov
xchg
ret
sub
add
push
clc
repnz
nop
nop
jae
add
fistpl
add
add
dec
nop
push
mov
leave
nop
jmp
add
push
xchg
add
pop
push
mov
xchg
ret
dec
hlt
dec
add
add
push
mov
clc
repnz
nop
nop
jae
data16
add
es
sub
clc
repnz
nop
nop
jae
add
stos
cld
add
in
leave
nop
jmp
jle
add
add
repnz
nop
nop
jae
add
mov
add
leave
dec
nop
push
mov
leave
nop
jmp
stc
push
cld
xchg
xchg
lds
mov
add
add
push
pop
push
mov
xchg
ret
shll
fimuls
je
clc
repnz
nop
nop
jae
add
ljmp
push
mov
leave
nop
jmp
stos
sbb
jl
pop
testl
nop
jmp
add
add
inc
jbe
in
pushl
push
mov
xchg
ret
xor
add
stc
dec
push
mov
add
cmp
pop
add
add
popf
addr16
inc
cld
clc
repnz
nop
nop
jae
hlt
add
ljmp
mov
nop
push
mov
leave
nop
jmp
add
pop
or
in
leave
nop
jmp
jmp
stc
inc
movl
cmpl
mov
leave
nop
jmp
jg
jmp
sub
movsl
outsb
inc
add
add
addb
mov
add
add
clc
repnz
nop
nop
jae
xchg
add
gs
not
push
mov
xchg
ret
pop
js
add
add
cld
nop
nop
jae
jmp
add
add
add
add
clc
repnz
nop
nop
jae
js
jle
xchg
add
and
add
clc
repnz
nop
nop
jae
jl
jl
add
inc
inc
add
repnz
nop
nop
jae
add
xchg
insb
insb
mov
test
repnz
nop
nop
jae
fildl
add
std
mov
push
mov
xchg
ret
mov
lea
push
mov
xchg
ret
lds
add
popf
popa
push
clc
repnz
nop
nop
jae
repnz
add
add
sbb
call
nop
jmp
rcrb
push
rcrb
add
rcrl
repnz
nop
nop
jae
cmp
cld
stos
add
cld
add
repnz
nop
nop
jae
add
add
cld
or
in
leave
nop
jmp
xlat
add
add
inc
mov
push
mov
leave
nop
jmp
add
hlt
roll
pop
push
push
mov
xchg
ret
add
sbb
add
aaa
xor
nop
push
mov
leave
nop
jmp
add
mov
sub
add
mull
repnz
nop
nop
jae
push
popf
add
cld
nop
nop
jae
add
sbb
add
repnz
nop
nop
jae
xchg
hlt
add
add
incl
sti
sbb
dec
pop
add
add
xor
add
pop
sti
test
fistpl
loopne
mov
clc
repnz
nop
nop
jae
add
mov
es
clc
repnz
nop
nop
jae
add
add
cmp
add
sbb
or
clc
repnz
nop
nop
jae
add
incl
mov
mov
xchg
ret
xchg
jl
add
add
in
xchg
cld
nop
nop
jae
add
add
roll
jne
loop
clc
repnz
nop
nop
jae
insb
aaa
add
inc
add
fld1
clc
repnz
nop
nop
jae
add
add
add
es
imul
cld
nop
nop
jae
mov
xchg
add
lods
push
push
mov
xchg
ret
jns
cmp
add
pop
clc
repnz
nop
nop
jae
insb
js
add
data16
push
nop
push
mov
leave
nop
jmp
add
add
add
fstpt
imul
sbb
insb
rorl
mov
in
leave
nop
jmp
pushl
popf
add
pop
add
mov
sbb
clc
repnz
nop
nop
jae
pop
or
repnz
cld
xchg
add
sub
in
leave
nop
jmp
sbb
stc
popf
add
mov
cmp
add
add
add
sti
add
push
add
dec
je
push
clc
repnz
nop
nop
jae
add
add
add
hlt
sti
lods
add
clc
repnz
nop
nop
jae
add
pop
test
mov
leave
nop
jmp
sbb
add
insb
shll
repnz
nop
nop
jae
popf
add
cmp
repnz
adc
inc
add
insb
xor
pop
decl
add
pop
sahf
ds
mov
push
mov
xchg
ret
xlat
xchg
add
outsb
test
daa
add
nop
push
mov
leave
nop
jmp
add
cmpl
nop
jae
fstpt
sub
mov
add
repnz
nop
nop
jae
mov
fsubl
insl
inc
add
test
add
add
dec
sub
mov
xchg
ret
add
outsb
js
xchg
xchg
add
adc
add
add
sub
jg
fs
add
nop
push
mov
leave
nop
jmp
add
add
insb
mov
movsl
clc
repnz
nop
nop
jae
add
jns
add
or
add
nop
push
mov
leave
nop
jmp
rolb
add
ds
nop
nop
jae
add
stos
popf
add
mov
xlat
pusha
inc
add
add
add
rcll
add
repnz
nop
nop
jae
incl
add
add
shll
jbe
nop
push
mov
leave
nop
jmp
mov
adc
cld
nop
nop
jae
add
or
adc
push
call
nop
push
mov
leave
nop
jmp
add
sti
incl
add
add
roll
add
push
lret
cmpl
nop
push
mov
leave
nop
jmp
adc
add
jg
add
loop
and
add
push
mov
ss
popa
add
cltd
or
add
adc
aam
add
and
add
nop
nop
jae
movl
add
addb
repz
clc
repnz
nop
nop
jae
add
jns
add
cmp
pusha
mov
xchg
ret
incl
mov
aaa
or
cwtl
xchg
xor
add
jb
add
arpl
sar
cld
nop
nop
jae
add
add
add
aad
push
mov
xchg
ret
push
lea
add
cld
push
jne
nop
push
mov
leave
nop
jmp
add
cld
mov
pop
clc
repnz
nop
nop
jae
xchg
mov
xchg
add
xlat
add
push
push
mov
xchg
ret
lea
hlt
add
add
test
push
add
mov
nop
push
mov
leave
nop
jmp
add
add
jl
jle
add
add
mov
clc
repnz
nop
nop
jae
add
add
cmp
push
mov
leave
nop
jmp
xchg
add
xlat
rol
pop
clc
repnz
nop
nop
jae
cmp
add
xlat
add
scas
add
mov
and
clc
repnz
nop
nop
jae
xchg
inc
cmp
push
mov
xchg
ret
add
add
aad
test
push
mov
leave
nop
jmp
stc
xchg
js
lea
push
mov
xchg
ret
sub
es
sub
clc
repnz
nop
nop
jae
add
add
test
repnz
nop
nop
jae
push
ficomps
push
clc
repnz
nop
nop
jae
lea
aad
mov
add
jmp
add
add
popf
cmp
pop
clc
repnz
nop
nop
jae
add
sub
mov
clc
repnz
nop
nop
jae
xlat
add
add
roll
add
int3
in
xor
push
mov
xchg
ret
stos
lea
add
add
and
mov
xchg
ret
test
jle
cmp
mov
xchg
ret
dec
hlt
mov
mov
add
je
sbb
repnz
nop
nop
jae
mov
xlat
add
seto
in
leave
nop
jmp
mov
add
jne
nop
push
mov
leave
nop
jmp
add
cmp
add
mov
or
repnz
nop
nop
jae
stos
sbb
incl
add
inc
in
push
mov
xchg
ret
add
mov
add
jb
repnz
nop
nop
jae
stos
rol
sbb
bound
xchg
ret
add
inc
faddp
stos
add
nop
loopne
add
clc
repnz
nop
nop
jae
test
rolb
das
jne
clc
repnz
nop
nop
jae
xchg
add
in
push
clc
repnz
nop
nop
jae
lds
jle
lods
pop
push
mov
xchg
ret
add
pop
add
xor
nop
nop
jae
mov
popf
xchg
repnz
nop
nop
jae
xchg
inc
mov
add
mov
push
pop
mov
push
mov
xchg
ret
mov
mov
mov
push
mov
xchg
ret
add
add
repz
repnz
nop
nop
jae
js
add
hlt
cmp
add
nop
nop
jae
add
add
js
repnz
push
mov
xchg
ret
gs
mov
fs
add
adc
jg
add
add
clc
repnz
nop
nop
jae
test
daa
mov
clc
repnz
nop
nop
jae
add
cld
faddp
fmul
mov
clc
repnz
nop
nop
jae
add
add
add
clc
repnz
nop
nop
jae
adc
add
popf
js
je
lret
nop
push
mov
leave
nop
jmp
jmp
stc
add
pop
mov
fld1
clc
repnz
nop
nop
jae
dec
roll
data16
add
nop
push
mov
leave
nop
jmp
add
sbb
sub
adc
mov
clc
repnz
nop
nop
jae
stc
add
add
add
call
clc
repnz
nop
nop
jae
add
stc
pop
push
mov
xchg
ret
add
lds
mov
cld
nop
nop
jae
jg
roll
add
add
movsl
mov
clc
repnz
nop
nop
jae
or
sub
dec
mov
clc
repnz
nop
nop
jae
push
test
add
add
inc
nop
push
mov
leave
nop
jmp
es
fcomi
fs
mov
xchg
ret
es
es
add
sub
clc
repnz
nop
nop
jae
add
jl
fiadds
lea
lea
nop
push
mov
leave
nop
jmp
add
add
add
loopne
mov
nop
push
mov
leave
nop
jmp
add
jle
inc
mov
add
and
repnz
nop
nop
jae
jmp
fs
add
arpl
cld
nop
nop
jae
add
add
cld
shll
add
cmpsl
call
mov
leave
nop
jmp
pop
mov
push
mov
xchg
ret
sbb
test
add
jae
cld
nop
nop
jae
add
es
add
push
mov
xchg
ret
add
mov
roll
lea
shl
push
clc
repnz
nop
nop
jae
add
add
es
insl
sub
clc
repnz
nop
nop
jae
mov
cld
dec
add
fisttpl
cld
nop
nop
jae
ficoms
aad
mov
adc
repnz
nop
nop
jae
cmp
mov
dec
push
clc
repnz
nop
nop
jae
jns
add
add
jne
clc
repnz
nop
nop
jae
jl
add
nop
nop
jae
sarb
dec
fs
test
cli
in
add
mov
icebp
clc
repnz
nop
nop
jae
lds
add
add
dec
loope
ret
clc
repnz
nop
nop
jae
add
dec
sub
nop
push
mov
leave
nop
jmp
mov
es
fisttps
xchg
repnz
nop
nop
jae
lea
xchg
pop
clc
repnz
nop
nop
jae
add
add
add
pop
mov
push
mov
xchg
ret
hlt
lds
xchg
movsb
add
loopne
sbb
cmp
nop
push
mov
leave
nop
jmp
add
mov
cld
nop
nop
jae
add
xchg
add
sbb
xchg
clc
repnz
nop
nop
jae
cmp
popf
or
sbb
and
add
xchg
dec
clc
repnz
nop
nop
jae
xchg
jg
add
add
sbb
add
add
lret
out
clc
repnz
nop
nop
jae
xchg
add
rcl
sub
clc
repnz
nop
nop
jae
jg
xchg
add
mov
pop
push
mov
xchg
ret
push
add
js
add
mov
clc
repnz
nop
nop
jae
add
cmp
add
and
clc
repnz
nop
nop
jae
insb
add
fcos
jb
push
mov
xchg
ret
inc
add
cmp
add
call
clc
repnz
nop
nop
jae
mov
add
dec
fwait
nop
push
mov
leave
nop
jmp
mov
push
stos
add
or
out
call
stos
add
stos
add
add
inc
pop
push
icebp
push
clc
repnz
nop
nop
jae
add
rcrb
add
or
add
mov
xchg
ret
jg
js
add
lea
cmp
cld
nop
nop
jae
push
add
push
clc
repnz
nop
nop
jae
add
add
lea
es
xor
push
mov
xchg
ret
add
add
jg
xor
repnz
nop
nop
jae
push
inc
aaa
add
call
nop
jae
es
add
lds
mov
nop
push
mov
leave
nop
jmp
add
sbb
mov
add
dec
cmp
pop
clc
repnz
nop
nop
jae
add
pop
mov
lea
add
jge
testl
push
add
push
push
add
repnz
nop
nop
jae
roll
mov
sub
repnz
nop
nop
jae
mov
rolb
gs
add
nop
push
mov
leave
nop
jmp
mov
data16
add
pop
push
mov
xchg
ret
xlat
mov
add
movl
add
add
cmpsl
push
clc
repnz
nop
nop
jae
jmp
or
mov
and
repnz
nop
nop
jae
repnz
xchg
add
dec
jns
je
sub
nop
jmp
lds
add
imul
cld
nop
nop
jae
add
add
lea
sbb
cmp
cld
nop
nop
jae
add
add
test
nop
push
mov
leave
nop
jmp
fidivs
test
mov
leave
nop
jmp
sbb
xchg
add
add
repz
clc
repnz
nop
nop
jae
dec
test
pop
dec
and
nop
push
mov
leave
nop
jmp
repnz
add
adc
add
clc
repnz
nop
nop
jae
gs
lds
xor
push
mov
leave
nop
jmp
jle
add
test
mov
imul
cmp
ret
xchg
add
xchg
add
imul
add
xchg
mov
adc
sti
data16
xchg
mov
add
nop
nop
jae
roll
sub
stos
push
push
mov
xchg
ret
jg
add
popf
rcrl
jmp
nop
nop
jae
add
add
push
or
repnz
nop
nop
jae
add
add
add
pop
push
mov
xchg
ret
movl
add
add
add
stos
add
inc
bound
jge
cmpl
jae
inc
add
popf
fwait
clc
repnz
nop
nop
jae
aaa
sbb
pop
add
mov
aam
mov
aam
addb
adc
add
mov
leave
nop
jmp
add
ja
les
mov
xchg
ret
add
xchg
add
push
jmp
push
inc
add
add
add
mov
loope
shrb
add
insb
pop
test
fistpl
clc
repnz
nop
nop
jae
add
movl
stc
mov
clc
repnz
nop
nop
jae
js
add
or
dec
cmp
repnz
nop
nop
jae
test
add
clc
repnz
nop
nop
jae
pop
xchg
mov
mov
clc
repnz
nop
nop
jae
add
add
dec
add
xlat
test
push
mov
xchg
ret
add
jmp
mov
test
repnz
nop
nop
jae
dec
adc
pushf
out
cmp
nop
push
mov
leave
nop
jmp
add
stos
mov
mov
add
clc
repnz
nop
nop
jae
add
cmp
xor
jmp
ljmp
sbb
sti
jns
js
add
add
mov
clc
repnz
nop
nop
jae
jg
mov
mov
xchg
ret
add
rorl
add
add
add
xchg
not
clc
repnz
nop
nop
jae
add
lea
add
cld
nop
nop
jae
xchg
xchg
add
jns
test
add
jne
nop
push
mov
leave
nop
jmp
pop
add
add
insl
add
clc
repnz
nop
nop
jae
incl
es
mov
push
mov
xchg
ret
add
add
pop
stos
add
push
clc
repnz
nop
nop
jae
add
test
es
dec
testl
andl
jg
test
test
nop
push
mov
leave
nop
jmp
add
pop
sub
add
nop
jmp
movl
enter
nop
nop
jae
add
add
mov
adc
nop
jae
add
add
add
or
add
repnz
nop
nop
jae
cmp
add
loopne
pop
push
mov
xchg
ret
cmp
add
add
rcrb
add
push
mov
xchg
ret
popf
data16
add
pop
add
push
mov
xchg
ret
jmp
add
add
add
mov
leave
nop
jmp
jl
cmp
pop
stc
add
mov
in
adc
dec
sbb
xchg
add
add
push
add
sbb
add
mov
jbe
shlb
dec
pop
adc
fstl
pop
sub
add
arpl
xchg
cwtl
adc
int
repz
add
in
enter
or
add
add
xlat
ret
jmp
mov
shrb
fdivrl
testb
insl
xchg
add
mov
or
inc
pop
push
or
add
inc
mov
dec
or
fldt
add
mov
cltd
out
test
cwtl
stos
add
ror
and
sub
add
js
pusha
popf
popa
mov
add
add
add
std
or
loop
xchg
add
fwait
test
add
mov
repz
cmpsb
add
and
add
add
jecxz
pop
mov
shll
pop
and
add
add
bound
pop
add
add
and
or
dec
mov
mov
insl
mov
lahf
dec
or
add
popa
lahf
fdivs
cmp
xchg
inc
popf
push
cmp
add
rcrb
cli
in
xchg
out
lock
inc
xchg
mov
icebp
add
add
cmpsb
add
out
add
or
outsl
adcl
push
add
popa
push
mov
popa
out
rorb
add
incl
jecxz
jp
mov
push
scas
jno
add
dec
lcall
iret
mov
add
enter
cmp
testb
pushf
addb
adcl
insl
stc
into
add
add
add
xchg
loop
ja
outsl
mov
xchg
push
xor
fcompl
cmpsl
xchg
add
add
out
imul
sub
add
add
mov
add
pop
js
dec
mov
sub
add
outsl
jle
mov
add
inc
xchg
sub
mov
or
add
add
pop
mov
add
push
or
add
or
add
mov
sarb
bound
push
xchg
xchg
adc
lock
mov
add
dec
out
mov
addb
ffree
inc
test
add
add
ja
jnp
and
inc
pop
sub
add
and
sub
pop
insb
or
add
mov
mov
stos
sbb
shlb
add
cmp
int
bound
push
add
mov
mov
push
idivl
add
add
add
mov
icebp
or
cmp
sub
add
nopl
push
add
fldcw
add
sub
add
inc
repz
add
imul
pop
insb
mull
xchg
popa
inc
push
xor
cli
movl
pusha
call
add
addb
pop
jmp
enter
fsubrl
adc
add
add
sbb
pop
inc
pop
cmpsb
add
pop
adc
nop
aas
xchg
mov
push
pop
mov
pop
int
mov
dec
arpl
addr16
adc
aad
cltd
push
add
sbb
dec
test
fimuls
imul
faddp
sti
adc
in
push
or
testb
dec
jg
cld
mov
add
mov
mov
cmp
add
push
sahf
cmp
aad
adc
sbb
pop
pop
scas
add
sahf
fldcw
add
add
sub
repnz
add
push
aad
mov
out
sti
int
ret
aam
pop
xchg
add
cld
fwait
ljmp
jae
add
in
add
xchg
nop
imul
pop
ds
jno
aad
adc
add
push
shrb
imul
repz
in
push
add
lcall
icebp
xchg
jle
lret
jb
out
jns
and
add
leavew
scas
jge
in
imul
decb
add
ficomps
adcl
inc
inc
outsl
jge
dec
dec
add
aad
add
cmovnp
jnp
hlt
or
add
inc
call
push
in
adc
adc
sbb
into
sti
lea
add
push
and
add
sbb
add
push
push
mov
nop
add
pop
cltd
rolb
lock
fcom
in
sub
add
fcomp
mov
iret
popa
add
add
xor
add
hlt
insb
lret
jp
fldenv
rolb
xchg
addb
mov
mov
add
add
pusha
mov
sub
jp
push
xor
xchg
loop
in
stc
mov
aas
out
mov
insl
inc
bound
outsl
outsb
mov
and
add
or
add
mov
add
add
push
jae
frstpm(287
testb
mov
dec
push
repnz
mov
push
repz
cmp
sub
add
rolb
jp
fimuls
add
dec
or
imul
mov
add
add
sub
add
jae
pop
cld
mov
add
push
add
add
mov
add
jns
xor
mul
arpl
or
add
out
cmpsb
add
push
out
dec
or
add
xchg
add
sbb
mov
ret
mov
inc
js
mov
mov
cwtl
cmp
sbb
adc
mov
incl
lret
das
jae
adc
cli
in
scas
add
mov
push
xchg
dec
pop
pop
mov
add
icebp
add
xor
add
fwait
dec
cmp
pop
stos
rcl
push
inc
add
daa
mov
pop
jl
push
adc
pop
sbb
add
out
push
push
xor
xchg
pop
sub
lahf
xchg
jge
addb
push
vmulsd
sub
add
mov
jge
addb
gs
xor
and
sbb
fdivl
in
add
popa
enter
add
push
add
outsb
jmp
addb
movq
lock
call
or
mov
popl
inc
or
add
or
add
mov
add
ljmp
xor
lret
movb
sbb
jne
add
fcoms
add
test
add
outsl
sub
add
add
xchg
jle
nop
pop
adc
add
inc
cli
add
loopne
add
mov
add
leave
std
mov
add
mov
inc
outsl
popf
and
add
mov
push
nop
pop
jns
xor
jmp
add
andl
xor
add
jl
add
icebp
and
add
add
jo
add
fprem
pusha
rclb
or
add
add
imul
lds
jno
scas
add
test
add
inc
and
add
pop
js
and
add
int3
dec
mov
add
add
sbb
or
aad
scas
clc
das
mov
xchg
call
add
push
pop
insl
adc
pop
xor
add
sub
add
pop
fs
push
add
std
mov
add
mov
fdivl
pop
cmp
xchg
or
add
xor
adc
mov
push
xor
pop
dec
dec
jge
scas
jno
lret
ss
insl
gs
xor
inc
outsb
push
jmp
sbb
xor
jle
sub
cmp
xchg
and
add
icebp
mov
jmp
mov
add
jns
pop
lahf
pop
sub
xor
stos
inc
or
add
add
cmp
xchg
in
xor
inc
xor
pop
imul
test
add
add
add
or
add
aad
dec
iret
ja
shrb
add
jge
sub
add
jecxz
jbe
fldt
pop
ss
add
fwait
dec
cmovs
add
add
add
sub
add
add
add
leave
mov
add
cmp
inc
xor
xor
mov
xchg
dec
rorb
xchg
add
addr16
xor
jge
bound
in
add
xchg
sbb
xor
xlat
mov
add
pop
int
mov
pop
test
add
push
push
xchg
add
mov
add
inc
and
add
sbb
add
rcr
sbb
xchg
add
insb
add
insl
int3
mov
xor
add
add
mov
or
add
pushf
int3
and
add
or
add
or
inc
sbb
hlt
test
add
cld
loope
mov
push
or
je
mov
add
add
mov
in
insl
popa
scas
scas
mov
loopne
repnz
xchg
add
and
mov
lahf
jg
loop
ret
cwtl
push
pop
in
mov
fwait
lahf
cmp
xchg
pop
xor
or
add
pop
xor
push
add
and
sbb
mov
add
outsl
mov
mov
cmp
cmp
test
xchg
pop
imul
and
add
or
push
jecxz
leave
test
add
add
mov
add
lret
jo
aaa
and
add
subl
add
mov
add
add
inc
in
movsl
das
stos
add
push
jecxz
add
movsb
add
testl
and
add
movsl
mov
and
add
add
dec
pop
jl
or
add
pop
divb
fadd
push
inc
movsl
push
cwtl
mov
add
add
shrb
stos
aam
pop
cmp
pop
sbb
scas
add
lods
inc
fcmovnbe
push
push
mov
add
and
add
add
imul
sub
add
add
jae
cmp
mov
push
add
je
sarb
sbb
popa
sbb
push
dec
mov
arpl
jecxz
mov
mov
pop
inc
cwtl
add
add
add
in
jg
cmpl
add
loopne
aad
cmp
jae
jmp
jbe
lods
add
iret
and
add
sub
das
dec
push
cmp
imul
add
add
xchg
push
loopne
jp
add
loopne
sbbl
mov
out
mov
lock
daa
xor
sahf
push
dec
rcl
xchg
insl
xlat
fwait
lahf
mov
xchg
add
xchg
adc
jo
mov
mov
add
xchg
jg
int3
cmp
add
pop
push
pxor
cld
cmc
shl
and
xchg
out
mov
xor
add
sub
add
imul
xchg
shrb
outsb
out
and
add
add
and
add
sbb
daa
push
cmc
jae
sub
add
add
ljmp
pop
xchg
cmp
addps
repnz
inc
sub
add
sbb
mov
lock
lret
ljmp
movsb
add
mov
add
outsb
sbb
ja
imul
lds
cwtl
jnp
test
popf
jmp
imul
hlt
scas
xlat
or
add
push
je
addl
adc
iret
fnstenv
imul
jne
mov
aam
add
fwait
add
mov
add
mov
push
movsl
add
xor
aaa
mov
jecxz
rorl
js
fwait
xchg
jp
pop
addb
jb
dec
dec
mov
mov
add
lock
add
rcll
add
outsb
pushf
sbb
add
jle
add
push
add
out
and
push
jmp
push
add
dec
rorb
sbb
mov
add
pop
cwtl
xchg
loope
fdivl
movsb
add
lods
add
sbb
imul
fldl2e
ds
lahf
jmp
add
dec
test
add
add
sbb
mov
lods
add
inc
int3
jno
ljmp
sub
adc
add
add
nop
out
or
fidivrs
jne
add
adc
loope
stos
pushf
xchg
addb
xchg
std
stos
add
in
cmp
out
add
mov
add
pusha
sbb
and
push
mov
mov
pop
dec
sub
iret
or
add
add
mov
mov
jecxz
jle
jle
sahf
addb
xchg
jb
fstpt
pop
push
idiv
adc
ret
xchg
jne
sub
add
pop
mov
jg
xor
xor
in
flds
inc
jb
pop
lahf
mov
std
sub
add
stc
pop
xor
add
adc
in
xor
clc
xor
add
and
pop
push
add
mov
pop
dec
cmpsl
test
add
out
add
pop
scas
mov
fidivl
add
inc
adc
in
loope
add
mov
add
arpl
cmp
add
fcmovbe
popf
mov
sub
add
frstor
push
add
add
add
jnp
push
jb
scas
pushf
mov
jae
inc
jb
std
mov
shlb
add
call
pop
mov
ja
iret
sbb
inc
and
add
add
clc
xchg
cwtl
mov
pop
pop
mov
sbb
mov
jp
or
xchg
mov
je
cmp
lods
add
adc
inc
add
add
aaa
sub
add
scas
add
and
add
jp
dec
sub
adc
data16
into
push
jle
xchg
pop
mov
mov
add
int3
lea
pop
stc
mov
adc
int3
fstp
aad
xlat
ds
add
mov
jbe
into
rorb
lea
add
lock
movntq
out
test
jmp
xchg
add
add
sbb
xchg
enter
pusha
or
add
pop
out
xchg
jnp
add
inc
sub
and
add
push
pop
pop
push
pop
mov
add
sub
mov
popa
popa
dec
cli
das
rcl
out
iret
add
nop
imul
add
pop
lock
add
sahf
icebp
scas
fnsave
dec
adc
pop
xchg
or
add
add
jg
xlat
xchg
add
mov
bswap
add
add
add
ret
add
add
arpl
add
add
mov
add
outsl
icebp
cmp
fs
push
mov
add
add
pop
xlat
xchg
push
je
add
rcll
mov
movb
add
pop
out
push
mov
inc
jg
bound
add
add
rclb
add
mov
cmpsb
add
cltd
inc
nop
lret
in
bound
push
aaa
sub
add
add
mov
dec
push
push
xor
cmp
push
mov
add
sub
add
cmp
xchg
inc
enter
shlb
jp
or
push
imulb
data16
das
jp
pop
repz
pop
or
mov
dec
mov
subl
sbb
adc
add
and
add
fsubs
add
mov
pop
aam
std
mov
cmpsl
push
add
mov
iret
mov
add
add
int3
jl
pushf
aad
xchg
out
or
add
sti
test
sub
loop
fwait
push
ja
xor
add
lcall
add
hlt
cltd
dec
loope
sbb
fcomps
sub
add
jo
pop
jb
mov
inc
jl
pop
outsb
mov
add
xor
sub
add
add
js
aaa
test
cmp
pushf
fsts
aam
jbe
add
push
stos
add
dec
in
imul
icebp
xchg
shrb
add
xchg
add
push
icebp
and
add
mov
add
popa
pop
pop
sub
add
xchg
pop
add
add
cmp
clc
and
add
clc
mov
add
xchg
fs
pop
jge
inc
lcall
dec
push
dec
scas
add
cmp
jl
add
cmc
mov
inc
sbb
addr16
xchg
add
fiadds
mov
mov
add
xchg
cmp
push
xchg
push
loop
push
aad
add
jmp
ljmp
sub
add
rorl
jmp
int3
pop
sub
add
sbb
add
rcr
outsb
pop
add
les
xchg
push
jmp
sti
sub
add
xlat
mov
add
mov
add
xchg
sub
add
mov
jp
out
scas
add
stc
mov
ret
daa
push
add
and
xchg
repnz
sahf
mov
add
ja
int3
movsl
mov
push
and
add
aas
and
add
mov
mov
xor
inc
mull
imul
jb
add
fdivrp
add
inc
jecxz
dec
xchg
add
inc
jns
add
add
add
addb
roll
xchg
lret
shll
pop
jbe
add
add
inc
data16
jg
popa
imul
jb
int3
sbb
lcall
add
dec
je
add
mov
add
add
jp
mov
mov
xor
outsb
push
div
add
add
xchg
out
and
sbb
xchg
add
add
pushf
loop
test
add
add
loop
imul
xchg
dec
inc
stos
inc
mov
into
fcmovb
ljmp
mov
add
js
sub
add
pop
cmpsl
mov
jmp
nop
dec
jl
add
or
add
push
add
outsl
lods
imul
ret
clc
push
sti
aaa
stos
cli
nop
fidivl
adc
stos
add
das
shr
or
add
insl
jnp
xchg
xchg
dec
cmp
add
or
add
test
add
pop
enter
xchg
add
ficompl
jl
ss
outsb
loopne
pop
inc
adc
jno
sarb
cmp
cmp
nop
or
loope
sbb
add
inc
xchg
add
dec
ja
adc
in
test
std
sub
add
add
std
push
dec
dec
cmpsb
add
bound
mov
xor
add
or
aaa
in
add
cmp
test
add
dec
add
sub
add
mov
sti
test
add
pop
enter
add
xor
add
repnz
xor
shll
push
stos
add
shll
pop
hlt
in
arpl
add
xor
mov
sub
add
lea
sub
add
lds
mov
leave
les
add
add
iret
pop
jne
notb
push
xchg
add
scas
cli
and
fs
jnp
pop
or
add
cmp
adc
into
mov
into
dec
push
mov
test
add
or
push
push
sbb
repnz
je
xchg
stos
mov
rol
cmpsl
push
rorl
add
push
xchg
cmp
add
jae
mov
add
enter
add
cmp
or
add
mov
add
call
sbb
stc
rclb
pop
add
jl
pushf
jno
iret
iret
xchg
add
add
scas
add
bound
add
mov
add
xchg
add
add
add
das
loop
cwtl
or
push
cltd
sub
xor
sbb
lds
mov
aas
sahf
mov
nop
ret
scas
add
push
sbb
jbe
push
add
mov
mov
jmp
or
sub
add
mov
add
into
pop
in
leave
mov
add
insb
pop
dec
cmp
cmp
pop
inc
dec
jb
sbb
push
cmp
jg
cmp
add
fcmovnu
jp
mov
cmp
das
divps
add
or
add
sbb
lea
add
jge
add
jge
sbb
rol
into
dec
mov
repnz
add
add
mov
inc
stos
or
add
pop
xor
add
xchg
arpl
xlat
adc
push
cmp
sbb
dec
jle
out
jge
inc
dec
sbb
add
ret
sbb
mov
sub
add
pushl
mov
mov
add
js
push
cmp
jne
out
outsl
ds
lods
jecxz
mov
mov
add
stos
push
mull
inc
fdivrl
daa
xchg
outsb
out
fisttpl
idivl
add
lcall
jmp
add
xchg
add
add
test
cmpsl
test
leave
xlat
mov
add
or
add
jo
dec
push
popf
sahf
int3
aaa
lcall
sbb
add
ss
add
sub
add
into
cmpsb
add
xchg
add
mov
dec
cli
clc
jmp
sub
std
adc
pop
pop
mov
adc
enter
add
xchg
add
aad
add
imul
cmpsl
adc
add
push
add
push
cmpsl
pop
mov
push
cwtl
cmp
and
and
mov
out
aam
shrb
cmp
jnp
jmp
cmp
inc
clc
push
sbb
lcall
inc
ss
fwait
stos
add
lcall
add
add
sub
mov
add
in
outsl
add
add
shll
mov
add
pushf
ss
add
mov
add
out
loop
inc
aam
mov
pushf
dec
xor
pop
xchg
dec
fstpl
inc
arpl
xchg
xchg
or
add
and
add
addb
lods
add
hlt
out
stos
adc
imul
add
ret
fnstcw
push
xchg
mov
les
pop
popa
push
xor
addb
addl
jne
mov
add
add
pop
xchg
push
ljmp
lahf
shrl
cwtl
pop
push
add
add
add
xchg
inc
mov
add
jno
mov
add
scas
inc
shlb
add
pop
xchg
test
add
push
dec
push
and
add
shll
push
out
loop
out
xchg
push
int3
jmp
pop
out
xor
add
jl
mov
pop
rorb
imul
add
and
add
imull
add
scas
push
fsubr
jmp
pop
adc
push
xchg
popa
or
add
cmp
int
mov
sahf
cwtl
mov
add
or
add
in
add
leave
mov
inc
dec
sarl
enter
add
cmp
jmp
or
mov
jge
mov
mov
add
dec
add
out
jp
pushaw
add
bound
add
add
and
add
sbb
ljmp
add
out
stos
add
popa
out
sbb
mov
add
shl
xchg
adc
pop
pop
xchg
inc
pop
jp
jg
xchg
mov
add
fiadds
add
sub
jl
or
add
sbb
test
add
sbb
loop
ljmp
jae,pt
add
aam
mov
into
pop
or
add
test
add
jle
out
xor
aas
jo
add
sahf
scas
add
pop
sub
add
and
in
leave
push
dec
mov
hlt
loop
repz
xlat
enter
inc
lahf
sub
inc
das
push
loopne
push
add
adc
test
add
mov
fs
fstpl
lock
add
rolb
add
mov
pop
and
add
fdivrp
xchg
in
sahf
lods
fbstp
or
add
inc
mov
add
loop
imul
add
test
add
loopne
jno
add
hlt
mov
sub
add
or
jb
shlb
push
adc
addb
sti
xchg
inc
mov
pop
add
add
pop
pop
push
add
ss
inc
test
imull
nop
add
add
pop
cmp
repz
popf
inc
pop
mov
cmpsl
cmp
cwtl
test
add
jno
shlb
inc
das
pop
xchg
xor
inc
mov
add
out
daa
imul
add
ret
add
out
fisttpll
stos
add
push
and
add
jbe
out
add
xchg
fdivrl
mov
sub
add
add
jb
add
pop
fadds
xchg
mov
add
aam
fisttpll
add
jg
ret
mov
inc
push
fiaddl
dec
cmpsb
add
dec
mov
jmp
outsb
mov
mov
add
inc
test
add
fistl
cmp
add
lcall
in
add
add
xchg
mov
call
cmp
sti
mulb
ds
add
add
add
cmc
cmp
mov
cmp
add
dec
jo
les
addb
mov
mov
add
notl
pop
insl
loopne
adc
or
xor
movsb
add
stc
inc
orps
js
jne
test
add
mov
gs
add
xchg
outsb
in
push
cmpsb
add
push
clc
mov
add
jge
add
sub
add
mov
out
sub
add
add
xor
xchg
add
add
sti
push
add
dec
test
add
mov
dec
pop
testb
call
dec
dec
scas
add
xor
iret
mov
test
add
sub
add
test
push
repnz
jno
orl
add
ret
add
adc
jne
leave
repz
or
mov
and
add
cmp
fcoms
add
push
add
add
add
dec
push
add
dec
stc
add
add
out
mov
imul
cmpsb
add
sub
add
pop
ljmp
add
sub
push
cmp
adc
je
cmpsb
add
pusha
mov
mov
sbb
xchg
fiaddl
add
and
add
bound
add
push
add
test
add
aas
test
xchg
jb
dec
stos
add
xor
pop
hlt
out
in
pop
push
add
aaa
dec
sub
add
xchg
mov
and
add
dec
or
add
jp
jno
test
add
pop
sbb
dec
and
pop
jne
test
sbb
nop
and
dec
lret
and
add
mov
add
inc
fsubs
add
lret
jns
pushf
jb
xor
jp
lret
testl
data16
mov
add
ret
loope
add
mov
inc
and
dec
fistps
inc
stos
add
ja
sbb
test
add
fisttps
jmp
ja
rcrl
and
xchg
insb
inc
cmp
repz
mov
mov
and
les
fdivrs
ret
add
push
jbe
jl
mov
add
jg
jecxz
addb
push
add
xchg
and
add
leave
je
add
stos
sub
outsl
inc
stos
add
and
add
push
clc
loop
ss
add
add
dec
add
popf
aam
int
les
int3
fldcw
add
add
jle
sub
add
jae
add
and
cmp
add
mov
dec
push
add
xchg
loope
cwtl
mov
loopne
inc
inc
push
mov
mov
add
mov
sub
add
pop
xchg
add
add
xchg
cmp
xlat
bound
mov
add
mov
out
xchg
rep
add
mov
rclb
mov
outsb
pop
xor
add
dec
out
daa
mov
adc
lahf
loope
out
sahf
loop
or
add
add
outsb
adc
add
stc
repz
adc
or
add
jp
popa
add
add
dec
sub
add
push
jmp
jo
pop
push
lea
xor
pop
enter
sub
fisubrl
xchg
hlt
lahf
rorl
and
add
add
xor
lret
cmc
xchg
sbb
add
fcomip
test
add
add
jbe
in
xor
ret
loope
lret
add
add
inc
test
add
scas
add
inc
push
push
inc
in
aad
nopl
add
add
push
popa
add
jecxz
add
fildll
in
fcmovne
push
aam
fwait
push
sbb
pop
cmp
out
jmp
addr16
outsl
imul
sbb
add
push
pop
cmp
push
jns
rolb
stc
sbb
and
xchg
and
add
add
dec
jne
pop
inc
pusha
pop
xchg
xor
jno
popf
addb
or
add
xor
nop
add
add
scas
add
add
add
mov
add
jnp
stos
add
jp
add
ss
push
idivl
mov
add
and
cmpsb
add
data16
add
orl
add
add
aam
int3
or
add
add
idiv
jno
xor
gs
in
mov
add
sub
xor
sbb
jbe
daa
or
add
idivb
mov
add
negb
adc
out
or
add
jns
test
add
add
push
push
xchg
mov
inc
inc
inc
cmp
hlt
sahf
add
add
call
add
add
stos
and
mov
add
hlt
jecxz
mov
add
data16
mov
mov
inc
jo
add
pop
sbb
cltd
movsl
in
push
mov
push
cmp
pop
imul
in
insl
or
add
pop
fwait
pop
pop
das
mov
add
add
sub
ljmp
add
rcr
fadds
jae
add
dec
enter
into
fisubl
jecxz
add
push
inc
and
inc
loopne
mov
add
mov
pop
aad
lds
add
xchg
xor
xor
sbb
add
das
sub
add
ficompl
inc
mov
inc
or
lea
and
add
add
sbb
testb
add
dec
mov
daa
cmpsb
add
xor
scas
add
add
sti
adcl
shrl
mov
add
fadds
lcall
xor
pop
mov
add
pusha
insb
out
out
inc
inc
and
cmp
jb
test
jo
and
dec
push
add
pop
scas
add
mov
std
ret
cmc
cld
adc
ret
mov
sahf
jmp
cmp
out
loopne
lcall
dec
pop
jne
adc
sub
add
lock
pop
adc
jb
lea
pop
sbb
das
insl
jbe
sbb
jo
ret
add
add
int
sub
pop
fadd
jno
xchg
jns
ret
scas
sub
add
or
add
mov
mov
pop
cmc
je
pop
adc
add
add
xchg
sbb
push
add
repnz
sub
popf
jg
adc
js
out
and
add
add
jecxz
add
pop
push
adc
iret
ljmp
or
add
mov
add
mov
mov
mov
adc
pop
pop
cmp
jbe
xor
add
gs
dec
inc
inc
pusha
out
mov
pop
adc
movsl
xchg
jnp
add
and
add
cmp
push
and
add
iret
popa
fidivrs
dec
pop
jb
in
fstsw
xchg
add
push
test
add
sub
add
movsb
add
add
mov
push
stc
imul
aaa
push
add
xbegin
add
xor
lods
ds
jecxz
add
std
cmp
xor
add
sahf
lret
pop
pop
cltd
in
shlb
into
scas
aas
and
add
pop
and
add
mov
push
ret
cwtl
push
test
jmp
add
iret
adc
pop
pop
test
and
in
insb
das
lcall
mov
inc
sub
add
add
pop
inc
and
add
add
add
or
add
cli
xchg
mov
mov
les
mov
fsubrl
add
push
jne
push
jno
push
into
or
fadds
add
xchg
sbbl
xchg
mov
add
js
mov
mov
jb
aaa
or
cwtl
aaa
mov
cld
lret
out
mov
outsb
test
add
add
push
xor
imull
sub
and
add
fstpt
add
rcll
adc
addb
push
add
mov
xor
aam
lret
jne
rorl
add
imul
add
dec
jge
add
fsubrp
addb
outsb
cmpsl
xor
mov
mov
push
dec
loopne
mov
icebp
fcompl
add
outsl
lcall
fcmovbe
mov
add
aaa
add
out
bound
add
xchg
imul
ret
inc
cmp
add
add
hlt
ret
mov
pushf
dec
pop
push
std
in
mov
add
jg
loope
add
mov
dec
dec
add
cmp
pop
fchs
imul
sub
ljmp
xchg
dec
cld
imul
push
sbb
negb
xor
add
xor
fcoms
inc
xor
and
add
ret
popa
mov
adc
enter
adc
add
add
jecxz
stos
add
in
int
xor
loop
loopne
push
cmpl
add
sub
xchg
or
popf
fmulp
push
jne
or
add
dec
mov
mov
xchg
pop
mov
adc
xacquire
add
pushf
jp
jmp
aad
pop
fdivrp
lock
add
pop
pop
movlps
repz
and
dec
cmpsl
xor
sbb
sub
add
cmpsl
test
add
mov
dec
inc
mov
fisttpl
cwtl
xor
jae
call
push
xor
sar
sarl
mov
add
add
add
add
xchg
call
push
fwait
outsb
repz
imul
lods
out
pop
sbb
inc
fidivrl
mov
push
test
add
stos
add
push
cld
push
push
sub
xchg
test
add
add
cmpsl
idivl
add
add
add
and
scas
add
addb
in
or
add
add
push
jg
pop
push
jno
add
cmc
nop
and
add
aad
fisubrs
lods
add
jmp
fstps
mov
add
add
add
add
pop
cmovnp
mov
push
add
ret
jb
push
mov
aad
outsl
or
add
movsl
jo
fwait
mov
push
push
push
sub
add
addb
aas
pop
xchg
add
sub
add
mov
lock
or
add
out
push
add
test
fwait
adc
push
add
mulb
dec
out
mov
add
add
lahf
pop
adc
and
add
cwtl
cmpsb
add
mov
add
jp
push
or
inc
xor
cld
jno
ficoml
add
xchg
in
nop
and
lret
test
add
jmp
dec
enter
pop
test
add
add
test
add
lahf
and
add
cmp
inc
xchg
jmp
add
lock
dec
jle
inc
sub
dec
add
add
enter
cmp
pop
cmc
cld
jnp
add
xchg
xchg
inc
mov
addb
pop
sahf
stc
addb
gs
and
add
in
and
add
add
mov
cmp
mov
add
rclb
add
add
ljmp
add
add
xchg
inc
js
inc
hlt
ds
lods
fsubrs
ret
add
pop
add
add
add
jne
leave
adc
divb
and
pop
and
push
jp
mov
add
mov
ret
mov
add
mov
add
jecxz
sbbl
push
push
sub
sbb
cmp
fnstsw
ss
out
push
movsb
add
loop
add
add
jp
inc
pop
xor
inc
mov
push
adc
clc
sbb
cwtl
cmc
mov
inc
cmc
stc
movsb
add
xor
cmpsl
dec
jb
movsl
jo
decb
add
adc
mov
mov
push
add
lea
test
addb
pop
inc
cwtl
jo
push
dec
xlat
push
xor
clc
gs
ss
in
or
or
add
pop
loopne
add
jg
outsl
mov
pop
dec
jb
repnz
jg
fs
stos
add
add
or
add
push
hlt
sahf
lods
xor
mov
and
divb
inc
add
dec
dec
sub
add
add
cmpsb
add
or
add
lret
lret
popa
mov
add
add
add
add
mov
add
jb
xor
add
add
mov
dec
jb
sahf
fcmovnu
xchg
add
inc
in
fcmovu
xchg
jne
mov
cmpsl
mov
add
int
pop
push
ss
stos
adc
aam
out
out
out
cmc
xchg
ja
mov
or
add
pop
mov
push
mov
cmp
scas
add
pusha
add
add
add
xchg
add
xchg
in
addb
adc
inc
repnz
fimuls
add
movsl
xor
add
mov
sarb
mov
add
dec
test
add
in
hlt
pushf
or
add
add
inc
nop
dec
add
add
into
or
cmp
mov
cmpl
and
add
lods
lahf
test
add
add
sub
add
add
cmpsl
jle
add
call
movsb
add
mov
pop
jno
xchg
test
sub
add
pusha
cmp
hlt
dec
xchg
sbb
add
add
jae
inc
xor
or
add
adc
add
cmp
mov
inc
lret
push
add
movsl
test
clc
outsb
addb
pop
cmp
add
test
add
scas
fisubrl
add
outsb
mov
and
add
lods
add
xchg
xchg
push
jno,pt
jmp
add
sbb
add
push
mov
add
xchg
iret
insb
adc
dec
jae
mov
xor
test
add
sbb
sub
mov
lods
add
xchg
enter
popa
lds
loopne
frstor
dec
arpl
add
inc
fcoms
mov
add
push
mov
shlb
lret
mov
dec
push
aaa
sbb
add
or
mov
out
loope
scas
add
dec
daa
into
movsl
icebp
inc
push
push
or
add
int
add
iret
fidivs
sub
push
std
cmc
sbb
nop
stc
add
ds
lcall
or
shll
lock
push
lock
mov
jl
push
inc
push
add
mov
add
mov
add
pop
rcrb
sub
add
dec
and
cmp
xor
push
add
test
add
add
dec
fucom
mov
push
push
or
icebp
gs
lret
loop
incb
sub
xchg
add
add
add
dec
test
add
testb
add
add
inc
jp
pushf
sbb
jnp
insb
imul
add
lret
pushf
sti
lcall
ret
stc
ficoml
loop
stos
add
pop
pop
adc
mov
fnstcw
add
mov
add
mov
add
cmp
sbb
add
test
add
iret
pusha
fidivrs
in
xchg
out
fnsave
scas
pop
jns
cld
add
add
add
jmp
pop
jmp
lods
add
jno
out
imul
add
cmp
add
mov
outsb
pop
mov
test
add
hlt
adc
lock
int3
cmp
add
aad
add
fdivp
mov
add
mov
test
add
mov
rcr
inc
repnz
sbb
or
mov
movsl
in
cmpl
push
outsl
mov
jae
push
enter
jae
jle
cld
pop
popa
cmp
cmp
add
add
aad
divl
lahf
xchg
decl
xchg
pop
ss
pop
adc
dec
inc
daa
rolb
add
fistpl
repz
sbb
add
cmp
mov
add
fisubs
mov
out
add
lds
adc
adc
cmc
outsl
ret
cltd
loopne
popf
insb
mov
sbb
les
xchg
ss
mov
dec
add
add
pop
stos
fcompl
and
add
fisubrl
add
or
test
push
mov
add
sub
add
and
xchg
add
add
stc
xchg
pop
loope
bound
test
add
or
cmp
xchg
xchg
mov
insl
enter
test
add
mov
vpsubb
jb
lds
add
pusha
jg
add
pushf
pop
jmp
xchg
inc
aam
iret
jns
mov
add
jae
and
add
inc
cwtl
cwtl
pop
pop
fcomps
mov
fistpl
sbb
mov
add
loop
add
rolb
ret
or
push
add
das
ljmp
test
add
les
add
repnz
dec
pop
incl
insl
push
jl
pop
mov
add
dec
xor
sahf
out
shrb
push
adc
insl
frstor
enter
or
clc
adc
ljmp
mov
add
fcoms
jmp
jge
jae
stos
add
dec
roll
add
stos
add
fnstsw
add
xchg
dec
or
add
out
cmpl
leave
nop
or
add
popa
mov
mov
add
inc
out
xor
pop
sbb
add
adc
add
add
add
les
insl
xchg
add
sbb
pusha
push
and
add
cmp
add
pcmpeqd
ret
add
sarl
addr16
inc
mov
add
add
add
repz
xchg
imul
test
add
hlt
int3
arpl
nop
cmc
cmp
sbb
adc
aam
shlb
les
stos
add
addr16
add
add
add
add
xchg
inc
mov
add
daa
xlat
repnz
add
add
sub
add
add
pop
mov
push
iret
xor
dec
add
pop
cmp
filds
push
mov
add
jae
add
cmp
fcoml
add
pop
lret
sub
add
in
cmp
cmc
jns
mov
pop
aaa
pmulhw
jg
add
add
inc
outsl
adc
add
addr16
pushf
fs
arpl
fwait
push
lahf
add
add
add
leave
add
add
inc
lcall
mov
test
sub
push
xor
cmp
add
test
add
xlat
xor
add
dec
fidivrl
adc
add
xchg
repnz
lret
xlat
pop
imul
cmp
lea
add
out
lods
test
add
push
jecxz
movsl
and
add
out
je
pop
jno
sbb
push
nop
mov
xchg
addb
sub
add
add
das
sub
add
mov
add
aas
xlat
pop
cmp
jae
add
loope
addb
lods
add
repnz
pushf
mov
cmc
movsl
or
add
sbb
inc
cmp
outsb
inc
lret
add
or
add
add
or
imul
add
lcall
xchg
or
add
in
xor
and
add
aaa
mov
and
xchg
call
add
mov
add
cmp
addb
daa
dec
xchg
jnp
cwtl
or
add
ret
frstor
rcll
cmp
inc
pushf
jnp
jne
dec
int3
sbb
xlat
jae
mov
xor
xlat
jno
add
adc
pop
pop
jbe
inc
outsl
jae
jo
xchg
jecxz
data16
decl
jae
das
cltd
sbb
dec
jnp
sbb
add
sub
add
push
mov
add
add
cmpsb
add
sub
add
xchg
adc
fwait
xchg
inc
mov
int3
ficoml
cltd
push
add
mov
add
mov
add
add
outsl
insb
jp
xchg
cmpsl
scas
add
cmp
aam
pop
out
popa
pop
ret
sbb
push
add
and
adc
jae
mov
pop
in
jno
pop
lret
push
lret
inc
jns
add
pop
aad
add
lds
out
mov
add
cmpsl
and
add
cmp
add
mov
icebp
lcall
jmp
test
add
sahf
fimuls
insl
dec
mov
sahf
mov
scas
add
sbb
call
xor
mov
jo
bound
iret
ljmp
cmp
shrb
add
ret
int3
test
add
add
add
add
ficoms
or
add
mov
lods
add
nop
sbbl
paddsw
jns
ret
jecxz
mov
add
mov
mov
inc
shr
out
xchg
dec
jl
mov
imul
out
adc
stos
add
xchg
dec
sbb
add
adc
xchg
add
mov
repnz
ret
xlat
dec
scas
add
mov
addr16
cld
and
add
int3
int3
cmpsb
add
pop
bound
jnp
mull
or
add
jmp
bound
add
fdivl
add
loopne
and
add
xchg
xchg
outsl
movb
xor
pop
pop
sbb
add
dec
cmp
add
dec
sbb
js
add
xor
mov
ret
mov
stc
test
int
fmull
mov
and
add
ret
cmp
into
sbb
adc
jnp
lea
popf
repz
dec
or
add
mov
add
fsubl
sbb
jnp
movsl
sub
add
and
xchg
scas
scas
add
add
add
insl
shlb
cmp
popa
scas
outsl
mov
push
add
lahf
test
add
and
add
inc
faddl
stc
mov
or
add
addb
imulb
add
cmpsb
add
sub
add
je
aam
inc
sub
imul
addr16
add
lret
rorl
push
mov
jns
out
cltd
pop
push
and
add
mov
add
add
fs
jl
mov
push
cmp
les
and
add
lret
mov
mov
roll
sbb
fidivl
enter
mov
addb
clc
aad
xor
sbb
xor
cltd
xor
fnstenv
or
pusha
mov
aam
add
xchg
enter
mov
mov
fisubrs
jae
shl
add
add
test
add
repnz
or
add
add
add
pop
ret
lods
sub
add
dec
aad
mov
mov
jmp
jnp
ficompl
add
jne
or
add
add
jbe
add
movsb
add
xlat
out
inc
cmpsb
add
xchg
test
add
cmp
lods
add
in
dec
pop
jmp
sbb
add
fmul
sbb
ja
inc
push
repz
std
aas
scas
inc
jbe
test
add
add
push
adc
xchg
sbb
cmpsb
add
adc
cmpsl
fs
pop
cltd
jg
add
hlt
push
add
add
addb
dec
push
out
adc
add
call
mov
add
xor
jge
out
ret
add
mov
add
lds
mov
mov
push
push
cmp
add
jle
xor
push
push
add
repz
loope
inc
xor
sub
pushf
pop
mov
add
inc
stos
add
inc
and
mov
test
add
adc
sbb
add
inc
mov
incb
out
outsb
mov
or
add
andl
add
jecxz
jnp
add
pop
out
out
leave
pop
pop
jmp
add
jb
add
mov
addb
jecxz
aad
dec
iret
in
adc
inc
hlt
mov
add
add
aas
arpl
xchg
add
in
inc
and
add
adc
jge
adc
repnz
addb
dec
add
add
outsl
int
lret
add
data16
jl
push
scas
icebp
mov
add
add
jp
jns
and
add
sahf
lods
add
cmpsl
dec
stos
and
add
cmp
lahf
notb
inc
mov
add
pop
ret
fiadds
xlat
adc
insl
cmp
xchg
add
cmp
out
scas
imul
add
add
add
add
push
add
cmp
add
filds
shll
add
cli
addl
sti
sub
add
cmp
add
xchg
add
add
ret
fwait
xor
add
mov
jg
push
aam
sahf
scas
push
rcll
in
insb
repz
out
not
xchg
mov
add
add
cmpsl
mov
add
ficoml
fdivl
push
popf
stos
mov
and
stos
push
aas
pop
add
add
gs
lds
and
add
xor
xor
mov
push
sahf
push
lret
push
je
sub
add
add
and
shlb
mov
sbb
stos
add
cmp
out
ss
add
add
insb
outsb
rorb
addl
arpl
jmp
sub
add
mov
imul
cmp
inc
add
cltd
lret
ja
push
enter
push
fcom
clc
out
xor
daa
ror
adc
clc
out
cmp
cmp
add
mov
jge
push
add
mov
add
pop
scas
aaa
js
mov
xchg
nop
cmp
add
mov
inc
outsb
aad
mov
add
aaa
add
into
mov
ja
xor
add
sbb
add
ljmp
xor
ds
dec
push
dec
aaa
adc
or
add
popf
or
std
fildl
add
push
in
stos
xchg
push
ljmp
xchg
outsb
jae
or
mov
add
leave
test
add
add
jbe
push
inc
lret
mov
add
lret
add
sti
pop
push
pop
loope
xchg
mov
add
dec
or
stc
xor
pop
push
lret
or
add
mov
xchg
add
lds
push
test
pop
mov
add
add
mov
add
adc
sbb
stc
xor
add
push
arpl
xor
aad
xchg
sti
add
add
cmp
add
add
add
add
sti
jmp
mov
sub
add
dec
lods
add
lds
lret
fsts
add
repz
ljmp
add
add
jnp
mov
lods
cmp
and
xlat
jg
pop
fnstcw
mov
add
pop
cmp
sub
add
loop
mov
lods
sti
dec
jae
int3
in
jne
mov
add
andl
xorl
jp
inc
lea
stos
fcmovnb
xchg
mov
dec
jo
dec
hlt
lret
in
out
jae
xchg
add
mov
add
int
out
cmp
push
push
add
pop
movsl
mov
or
add
popf
mov
fidivs
mov
idivl
add
cmpl
add
add
add
add
mov
test
add
cmp
pop
cli
adc
aaa
dec
push
cmc
cmpsl
lret
add
addb
jg
or
cmp
jb
data16
vpminsw
adcl
add
inc
inc
jmp
imul
sub
add
mov
test
jp
pop
push
add
mov
addb
mov
test
add
iret
cmc
aam
add
aad
add
push
push
sahf
xlat
ret
insl
sub
add
mov
mov
dec
adc
fs
xlat
in
pop
jnp
add
std
jl
dec
push
push
add
add
add
add
or
add
dec
imul
mov
add
pop
in
inc
lods
dec
mov
sub
add
leave
shll
fadd
loop
jecxz
nop
int3
xchg
sbb
and
ds
popa
ss
aas
adc
jnp
add
adc
add
cmp
push
add
sti
in
data16
aas
cmp
test
das
lret
adc
mov
add
push
pusha
ja
add
scas
add
cltd
cmpsl
cmpsl
cwtl
xchg
ja
ljmp
sub
add
ficompl
clc
insl
add
xchg
add
dec
adc
in
lods
add
aaa
mov
add
add
sbb
adc
scas
add
mov
add
test
xchg
xor
and
add
add
push
or
sbb
and
xchg
int
and
imul
xor
mov
add
fs
inc
rcrb
sti
outsb
cld
xor
pushf
push
sbb
mov
movl
shrb
inc
cld
mov
mov
add
popl
fcmovnb
fmull
jnp
ja
scas
add
shlb
add
xchg
lret
push
shl
add
xor
add
lahf
dec
and
push
lret
sbb
lcall
jbe
loopne
nop
mov
adc
jp
ja
dec
scas
or
lods
add
mov
inc
je
push
add
negl
sahf
sbb
mov
xor
add
lahf
jns
jle
add
ret
add
test
add
leave
in
iret
jo
mov
mov
add
in
push
jl
out
push
mov
add
int
outsb
pop
inc
cmp
lcall
dec
mov
js
xchg
jp
jno
sub
mov
jge
xchg
loopne
fldt
add
mov
pop
and
add
cmc
lret
sub
fimull
push
fbld
inc
das
inc
insb
jge
fwait
out
cmp
mov
add
movsl
mov
or
add
mov
add
add
add
add
pusha
addb
or
pusha
shl
pop
mov
jg
or
cmp
notl
add
leave
rorb
outsb
and
add
mov
fprem
data16
ret
leave
xor
call
add
lcall
in
pop
aaa
mov
xchg
add
add
mov
jnp
xor
push
mov
icebp
mov
cltd
add
jge
mov
mov
sub
add
fs
dec
inc
int
jge
add
add
jg
add
cmp
lcall
pushf
pop
add
add
movsb
add
xchg
das
mov
add
jns
add
mov
movsl
mov
xchg
adc
fdivs
jmp
add
faddl
movsl
or
add
push
jle
add
movsl
shrb
out
sub
movsl
testb
xor
ss
add
mov
sti
movb
pop
add
add
fs
lahf
out
push
or
mov
scas
add
lret
pop
notl
mov
rclb
rcll
add
out
clc
dec
in
xlat
mov
add
je
dec
int
stos
add
mov
stos
add
test
add
btc
lds
in
add
in
or
add
mov
lea
dec
addb
inc
popa
push
sti
push
icebp
mov
add
fwait
push
cmp
sub
add
or
add
xor
add
push
sub
mov
xor
daa
loope
inc
ja
mov
add
fwait
dec
add
add
and
add
mov
adc
bound
mov
addb
push
xchg
push
rcl
adc
push
add
lret
pusha
or
add
stos
add
movsb
add
js
lret
mov
mov
push
scas
add
outsb
insb
mov
rorb
add
add
mov
add
cld
or
add
rcr
mov
adc
mov
stos
add
dec
das
scas
push
mov
push
loopne
aaa
ljmp
icebp
and
add
inc
sarb
outsl
dec
int
add
adc
mov
stc
out
xor
add
pusha
data16
push
lcall
add
add
icebp
add
fidivrs
mov
cltd
pop
dec
sbb
in
add
mov
add
imul
leave
stc
in
mov
sbb
mov
stc
add
add
add
jae
add
push
in
and
dec
repz
add
add
push
divl
sbb
jnp
add
or
mov
add
add
ret
pop
or
jne
scas
add
dec
push
add
imul
imul
call
push
xor
cmp
add
sbb
inc
pop
and
out
push
add
jecxz
xor
out
mov
xor
into
pop
pusha
jae
ja
insl
sbb
clc
or
add
mov
add
inc
push
mov
add
jb
sbb
xchg
cmc
mov
add
mov
add
cmpsl
mov
add
pusha
push
add
testb
adc
sub
add
add
push
fidivs
fs
jb
add
add
adc
jbe
mov
cmp
inc
negb
sahf
push
or
add
jnp
mov
add
adc
pop
mov
cmp
add
or
add
daa
imul
dec
movsb
add
ffree
outsl
pop
cltd
dec
xor
pop
pop
pop
call
pusha
dec
xchg
fidivrs
in
mov
add
fisubs
ret
add
inc
sub
add
add
mov
inc
fistpl
ds
inc
ret
sahf
cmc
xchg
push
cmpsb
add
scas
popa
pushf
cmp
cmpsb
add
adc
mov
pop
leave
mov
add
addb
mov
das
pop
std
inc
mov
sarl
add
sbb
cltd
push
adc
push
add
pop
clc
xchg
cmp
ja
inc
into
cli
lret
fistps
add
adc
mov
divb
jp
dec
outsb
xchg
or
add
cli
pop
push
addr16
fcom
jg
leave
outsb
jl
pop
call
lret
outsb
push
clc
fimuls
pop
popa
pop
jle
sbb
in
push
cmp
add
mov
sub
add
xchg
or
add
aad
dec
repz
add
cmovg
adc
mov
push
add
push
inc
pusha
inc
test
add
into
inc
je
rdtsc
xchg
add
aam
xlat
ss
jg
mov
test
cli
push
mov
bound
add
addb
xlat
icebp
clc
lret
mov
add
dec
aas
jbe
subl
rcr
loope
cwtl
ret
dec
adc
add
fimull
jae
fmuls
ret
lods
add
pop
mov
add
cmp
or
add
cmc
sub
add
add
push
cld
dec
scas
add
xchg
mov
add
cmpsb
add
stc
pop
jmp
inc
nop
sbb
jmp
adc
inc
sub
add
shll
adc
add
add
add
xor
sub
add
pop
ss
cmp
add
gs
dec
not
ficoms
dec
popf
add
add
ret
stc
leave
or
add
data16
loopne
xor
lret
add
test
add
add
fs
jg
fs
add
icebp
xor
lret
test
add
pushf
pusha
aam
pop
or
mov
xor
adc
mov
sti
movzwl
add
popf
out
aaa
dec
mov
add
lcall
fmuls
mov
adc
xor
mov
nop
test
add
adc
xchg
add
pop
sbb
adc
lret
or
shl
mov
pop
sub
add
sbb
das
inc
xchg
imul
fisttps
push
jae
cmpsb
add
aaa
outsb
pop
cmp
out
add
test
ds
push
add
daa
ss
and
jge
pusha
and
add
inc
push
or
add
clc
jno
adcl
insl
sub
cmp
nop
call
add
xor
cmpsb
add
and
add
add
add
mov
push
add
lods
add
push
jmp
addl
add
add
add
jge
sahf
cmpsl
inc
jmp
push
mov
lret
mov
add
call
add
and
add
inc
aad
sbb
add
jb
ucomiss
add
xchg
add
les
pop
cwtl
mov
hlt
ror
inc
sub
mov
add
add
ja
jno
mov
add
add
stos
add
pop
adc
add
mov
popf
jnp
pop
test
add
add
addb
fwait
mov
ja
loope
xor
arpl
pop
add
add
jns
jle
arpl
fnstsw
push
ret
sub
ds
add
incl
add
icebp
inc
roll
add
push
mov
add
mov
add
mov
xor
add
repnz
sub
pusha
in
divl
ret
ror
or
adc
add
sbb
in
das
sub
sti
add
xor
or
add
mov
inc
les
fildl
inc
sub
ss
adc
dec
xchg
xor
add
ret
outsb
xchg
lods
add
pop
push
mov
fisttps
arpl
xor
nop
adc
shrb
lds
mov
cmc
pop
dec
test
fdivl
inc
addb
lahf
cltd
dec
subl
push
cld
mov
add
mov
cmp
mov
jbe
out
mov
adc
add
je
add
sub
add
cmp
addb
mov
add
mov
scas
iret
or
lret
add
cwtl
jmp
insb
xchg
in
popf
imul
fwait
push
xor
add
jne
mov
pop
lcall
push
cmp
and
add
add
inc
out
xor
ljmp
outsl
xchg
mov
xchg
adc
mov
sahf
mov
pushf
ret
push
add
cld
outsl
push
cmp
negl
stc
sbb
sub
add
or
mov
lahf
pop
hlt
pop
out
add
add
add
add
sbb
sarl
aad
mov
add
in
inc
xlat
aaa
adc
add
mov
adc
sbb
inc
cmp
pop
dec
jl
lods
add
or
mov
mov
add
add
cmp
icebp
xor
mov
add
jnp
stc
fisubl
orl
loop
cmp
add
push
inc
add
stos
add
pop
add
add
mov
add
andl
xlat
xor
test
add
inc
add
add
jb
mov
add
popf
cld
mov
add
add
rolb
add
aad
xchg
sbb
xchg
hlt
pop
or
cwtl
cmpsb
add
aad
sub
add
xchg
sbb
cmpsb
add
int3
push
add
stc
push
stos
add
ljmp
add
jge
jo
mov
add
mov
push
nop
test
add
clc
mov
add
xor
add
pop
mov
pop
xor
and
push
scas
sub
cmpsb
add
aaa
ss
adc
cmp
jl
xor
sub
add
inc
in
cmova
ja
lock
push
add
test
add
add
fcmovu
push
aas
iret
xchg
dec
push
mov
add
sbb
mov
cmpsb
add
xor
sub
int
cmp
sarb
clc
mov
dec
and
add
add
add
testb
jae
push
insb
lcall
add
mull
scas
and
add
and
add
xor
fabs
inc
mov
push
xor
out
pop
pop
vphsubwd
int3
mov
sub
hlt
cmp
inc
or
or
add
bnd
xlat
ss
dec
mov
and
add
addb
pop
mov
add
daa
leave
pop
mov
add
add
push
pop
and
xor
add
sub
jo
sbb
fdivr
pop
cli
mov
dec
xor
in
push
xchg
leave
psadbw
pop
sarb
inc
or
cmpsb
add
sar
and
and
mov
addb
mov
in
fsubr
cli
push
xchg
cmp
xor
mull
add
add
adc
cli
mov
mov
add
sub
add
jge
mov
mov
inc
aas
push
pop
inc
add
add
sbb
or
add
or
add
aam
cli
std
push
stc
mov
sub
dec
out
dec
cmp
xchg
mov
repz
or
add
add
lret
mov
add
fildl
xor
jnp
pushf
jbe
add
insb
fidivl
add
adc
add
add
add
jg
add
sub
add
mov
add
cli
xchg
add
and
add
mov
add
inc
dec
dec
outsb
inc
xchg
adc
add
or
pop
adc
in
mov
cmp
jge
add
aam
add
inc
or
add
add
mov
xor
and
mov
add
push
fwait
mov
xor
and
add
cli
xchg
sbb
add
inc
lods
sub
dec
push
or
add
sbb
sbb
outsl
jl
dec
sti
jno
mov
xor
add
dec
in
jb
mov
shlb
add
sub
add
mov
sbb
xchg
and
add
pop
inc
inc
lods
add
insl
stc
mov
pushw
scas
jb
lods
popa
cmp
filds
add
xchg
nop
mov
and
add
add
andl
xor
ret
add
xor
add
add
cmpsl
imul
sahf
or
mov
jg
ljmp
jecxz
add
mov
sub
mov
and
add
aam
and
add
imul
jno
pop
mov
add
mov
rcr
dec
iret
mov
lret
xchg
add
add
loop
push
xor
add
in
pop
or
add
fwait
addb
negl
icebp
aas
insb
xor
mov
add
icebp
les
sbb
cmc
test
sbb
add
nop
push
dec
cld
mov
rcl
or
add
add
cmpsb
add
aas
sbb
add
push
add
je
mov
add
push
mov
push
movsl
mov
cmc
lods
inc
xchg
jbe
cmc
stos
add
insb
das
mov
aam
add
xchg
push
add
cltd
test
adc
insl
xchg
xchg
push
out
sub
mov
add
lods
add
and
add
test
jno
xlat
mov
add
add
fcomps
mov
adc
scas
add
jge
call
and
add
add
pop
fcmovne
mov
dec
mov
fistpll
inc
ret
dec
rorb
add
int3
ficoml
outsl
mov
in
stos
xor
add
add
add
leave
adc
add
add
add
dec
lea
xchg
inc
iret
cmp
fldl
add
add
push
gs
push
push
add
lods
add
add
mov
add
aam
jno
sub
add
loop
jp
add
mov
dec
inc
adc
dec
xlat
cli
fxch
icebp
jge
fcmovnu
jns
add
lods
repz
cmp
xchg
ret
hlt
jmp
dec
xor
ja
push
add
jne
call
pusha
xchg
add
pop
push
pop
mov
in
jbe
idiv
loop
add
jno
inc
push
add
lods
fwait
shr
cld
add
cltd
xchg
add
movsb
add
push
out
pushf
push
push
add
mov
push
addb
clc
call
add
jae
rol
add
clc
test
add
arpl
shlb
ljmp
dec
dec
mov
add
bound
add
jne
mov
sbb
add
jb
and
sub
add
add
pop
scas
add
cmpsb
add
push
pop
xor
lea
pop
jns
iret
sbb
add
push
idivb
cld
mov
shll
add
sub
add
jns
mov
add
inc
mov
add
dec
fmuls
lahf
jbe
stc
pop
movsb
add
mov
gs
push
cmp
cmp
fmul
push
cli
adc
xchg
add
dec
movsl
cmp
ja
cmpsl
add
in
mov
out
loop
clc
push
addb
mov
add
add
add
jns
jge
add
add
ret
or
popa
rorb
add
xor
fcoms
fists
add
mov
add
mov
and
xchg
jbe
or
add
push
pop
pusha
or
add
cld
sbb
pop
jb
push
or
add
or
add
loop
fcomp
sbb
sub
in
mov
sbb
sbb
addb
test
pusha
imul
add
call
mov
add
add
add
sahf
adc
mov
add
add
xor
imulb
inc
sub
add
or
fimuls
add
dec
sub
enter
mov
pusha
cmp
xchg
cmc
shlb
aam
push
or
add
lret
je
out
out
bound
jp
mov
loopne
add
leave
jnp
inc
jge
add
jp
xchg
stc
imul
push
mov
add
jecxz
jmp
mov
adc
cmpsl
hlt
jo
in
enter
sub
add
add
cld
leave
in
push
add
shlb
pop
jmp
xor
add
or
imul
sub
add
and
mov
pop
stc
push
add
in
sbb
push
add
xor
push
jbe
sub
dec
out
pushf
rorb
test
add
sub
popa
adc
das
mov
add
xor
mov
pop
jp
dec
lahf
mov
add
stos
add
addr16
ror
jp
jb
jno
pop
cmp
add
push
jmp
add
mov
roll
add
int3
mov
stos
stos
add
in
and
add
cmp
inc
dec
out
sbb
int
outsl
jl
adc
add
cmp
add
and
add
or
add
cwtl
mov
jnp
jge
hlt
inc
rol
loop
cmpsb
add
cltd
pop
lret
add
addb
in
test
mov
dec
shrb
ja,pt
in
fdivrs
cmp
aas
enter
inc
jecxz
insb
mov
add
daa
and
add
add
ljmp
fcoml
gs
mov
mov
xchg
add
xor
mov
jno
shlb
sub
pop
xchg
aad
sbb
insl
fwait
sub
adc
xchg
addr16
stc
mov
add
push
add
jno
jg
push
jg
add
iret
dec
add
add
sbb
imul
fldcw
pop
jbe
dec
dec
jb
jbe
mov
add
cld
cmpsb
add
cltd
ret
hlt
push
mov
xchg
das
or
add
enter
rcrl
mov
fwait
movsb
add
dec
or
add
xchg
sbb
add
roll
xchg
dec
iret
int
lahf
lahf
icebp
popf
adc
add
dec
push
add
adc
pop
xchg
lret
add
pop
xor
enter
outsl
add
sub
add
cmp
add
dec
xor
mov
int
xchg
outsl
xchg
or
add
icebp
dec
xchg
add
add
in
aad
movsl
fimull
loopne
andl
sub
add
push
mov
mov
mov
add
add
or
add
adc
rcl
cmp
pop
push
add
adc
adc
or
add
mov
cli
adc
add
mov
push
sti
jge
xlat
jl
inc
xchg
mov
push
mov
cmp
les
inc
or
push
add
add
sub
add
inc
sub
add
ds
rcrb
out
add
imul
ja
iret
adc
cmpl
fxch
data16
out
and
adc
add
fsubrl
add
add
push
ljmp
cmc
sub
add
add
ret
xor
adc
test
mov
int3
dec
push
jmp
push
pop
push
scas
sub
add
mov
aam
add
push
add
or
add
dec
int
mov
outsb
hlt
add
mov
dec
in
js
scas
add
pusha
loope
pop
std
mov
rol
mov
vmovaps
add
add
cmp
add
mov
or
jno
popf
add
add
clc
jo
push
add
cmp
or
add
fs
add
mov
mov
mov
mov
add
shlb
fwait
push
test
or
cmc
add
add
ds
add
ds
mov
add
clc
add
adc
movsl
lock
add
add
pop
xor
in
push
lcall
add
mov
push
or
add
mov
test
add
add
movsb
add
jmp
push
pop
bound
pop
movsb
add
sub
add
daa
lods
or
rclb
jmp
cwtl
adc
add
jo
in
divb
rorl
add
cltd
ret
mov
add
jl
cmpsb
add
cmpsl
movsl
mov
sbb
pop
xchg
pop
cmp
in
cmp
out
ret
cmp
add
push
adc
add
mov
push
xchg
add
fcmovnu
lcall
add
shl
ret
adc
mov
pop
push
into
push
js
mov
and
cmp
pusha
jnp
add
mov
add
lret
sbb
add
in
mov
add
inc
dec
fcmovne
add
add
lds
add
and
aam
jo
icebp
push
push
cmp
daa
in
lahf
test
add
fidivrs
mov
xchg
or
mov
push
std
repnz
jb
adc
cmp
out
clc
mov
pop
adc
insb
das
jp
fsts
push
ljmp
cmp
decb
jecxz
testb
push
dec
mull
add
jmp
pop
jbe
add
daa
in
clc
or
xor
or
add
stos
icebp
xor
or
add
add
into
lock
mov
add
add
cmp
add
xlat
repnz
and
add
pop
add
clc
mov
loope
lahf
inc
fdivp
add
add
mov
pop
jge
aaa
imul
inc
ja
aad
pop
addr16
add
mov
add
in
addr16
sub
add
push
movl
ja
inc
aas
int3
aam
add
aaa
sbb
push
js
add
jae
das
cmp
mov
push
testb
add
movntq
lret
inc
js
pop
mov
dec
in
mov
repnz
sub
jmp
rcrb
cli
shrl
add
mov
jg
add
or
add
add
ss
test
lcall
add
add
idivb
jge
ficompl
int
sbb
into
stos
add
push
mov
add
movsl
inc
ret
ja
add
and
add
dec
and
enter
xchg
push
xchg
out
outsl
in
data16
mov
push
ja
mov
add
ja
sub
add
mov
sti
in
or
int
or
add
fldl
add
pop
mov
jns
sub
push
lods
loope
fbstp
add
xor
movsb
add
in
xor
jne
mov
add
mov
add
push
xchg
test
add
pop
outsb
mov
add
add
jg
das
mov
add
adc
loop
add
add
xchg
pop
cmpsl
ror
sub
xchg
jno
cmp
cmp
add
inc
sub
cmp
out
mov
movb
mov
add
mov
movsl
arpl
enter
or
rcr
mov
jge
add
xchg
jo
or
add
mov
add
nop
jns
bound
add
or
add
movsb
add
lods
add
push
pmulhw
add
ret
add
dec
sbbl
bound
add
xor
cwtl
dec
and
add
pop
mov
aam
add
outsl
cmp
push
dec
fs
add
push
mov
add
in
dec
add
add
pop
stos
test
add
imul
add
add
shl
sbbl
and
dec
fwait
inc
or
out
stos
xchg
aad
and
add
push
and
pusha
cmp
xor
pushf
add
jg
mov
and
cmp
cmp
add
push
add
cvtdq2ps
subl
stos
add
dec
add
mov
push
ja
and
jmp
push
icebp
mov
add
and
fs
jo
mov
add
sbb
add
mov
add
pop
push
jb
movsl
xor
inc
mov
outsb
xchg
add
xchg
push
sbb
add
out
pop
gs
sub
and
in
pop
mov
inc
addr16
add
add
or
jg
xchg
sahf
add
add
push
inc
cmp
rcrb
xlat
dec
pop
dec
fldenv
add
pop
dec
jnp
out
mov
adc
dec
mov
jb
ljmp
sahf
xlat
into
jge
add
pop
call
mov
xchg
inc
push
add
movsb
add
aad
lock
xchg
scas
add
xor
enter
add
jp
loop
pop
xchg
adc
insl
mov
ds
jecxz
sub
add
lcall
repnz
stc
mov
add
pop
mov
jne
xor
dec
dec
sarl
inc
xor
mov
add
xor
repz
mov
sub
jge
push
stos
add
addb
mov
add
adc
push
pop
fsubrl
sbb
movsl
push
scas
je
xchg
or
hlt
cmp
mov
sbb
inc
call
add
lret
sub
ljmpw
daa
xor
lahf
movsl
daa
cmp
push
xchg
sbb
and
outsl
xchg
xchg
cmc
push
add
pop
cmp
push
add
hlt
ret
mov
xchg
jmp
add
std
xor
add
hlt
add
add
out
dec
stc
ja
add
hlt
xor
lock
test
add
jmp
mov
pop
mov
ret
cmp
sub
add
fwait
clc
cwtl
jmp
ret
push
out
jp
loop
cmpl
out
pop
xor
iret
sbb
imul
add
add
cmp
add
xor
add
push
addb
cmp
mov
test
add
push
pop
and
add
gs
sub
pop
pop
ja
cmp
push
pop
arpl
fwait
into
and
gs
add
pop
aam
std
pop
dec
lods
fsubrs
or
add
add
cmp
or
add
popa
cmp
add
dec
mov
adc
push
inc
sbb
inc
call
xor
leave
jle
and
add
lock
fsubl
add
inc
inc
mov
add
add
add
sub
cmp
cwtl
lods
add
icebp
adc
ljmp
into
pusha
cmpl
jmp
add
add
xor
mov
imul
add
imul
cmp
loope
leave
fldt
add
loopne
inc
inc
lret
push
add
pusha
adc
shrl
sbb
outsb
pusha
mov
repz
dec
int
and
arpl
bound
lret
xor
pop
cmp
add
add
mov
dec
adc
mov
pop
xchg
jmp
dec
arpl
loope
add
add
mov
add
xchg
scas
sar
sarb
xor
sub
cmp
outsl
aad
mov
add
addl
add
loop
test
add
cmp
gs
mov
jle
lods
and
dec
sahf
in
cli
jg
mov
add
xor
inc
add
scas
xchg
sbb
mov
lock
testl
add
test
add
jno
nop
mov
add
iret
cmp
mov
add
jne
add
shl
into
lahf
cmp
std
sub
add
fadd
stos
xor
in
inc
adc
inc
push
data16
lea
cmp
add
xor
out
mov
out
sbb
in
cltd
fisubl
cmp
mov
adc
and
add
mov
add
jecxz
outsl
test
add
pop
movsl
into
fistpll
add
mov
xor
sub
add
adc
rcr
out
mov
add
in
scas
add
push
add
add
xor
sbb
daa
addb
inc
xchg
mov
std
mov
add
xor
mov
add
add
add
pop
sub
ret
add
ja
shll
sub
sub
adc
jae
mov
mov
mov
outsb
adc
add
mov
les
adc
mov
pusha
insb
adc
xchg
inc
sub
add
jno
jb
out
pop
fmull
sub
add
shlb
dec
and
add
in
mov
add
jns
stos
add
in
dec
in
xchg
adc
out
sub
fmuls
jnp
cwtl
stc
fsub
sbb
mov
in
jp
jecxz
pcmpeqw
push
cmp
int3
adc
cmp
jge
and
add
mov
sarb
clc
dec
popf
sbb
fidivrs
leave
and
add
mov
add
lods
add
mov
add
dec
int
pop
push
loope
xlat
fwait
gs
jl
mov
add
add
pusha
lret
mov
add
mov
push
test
add
imul
add
and
xchg
fwait
cld
dec
xor
mov
add
fcomip
cmc
sti
push
icebp
scas
add
mov
incb
imul
pop
movsl
push
cld
jmp
roll
add
add
jbe
mov
add
in
xchg
and
mov
dec
sbb
add
mov
push
sub
insb
adc
adc
add
out
xlat
xchg
or
mov
add
fnstsw
add
mov
mov
add
and
adc
and
add
insl
pop
stos
add
fldt
add
fidivs
repz
mov
mov
add
jecxz
and
add
add
mov
add
sbb
jb
aad
aas
pop
les
mov
popf
adc
pop
push
jbe
pop
mov
add
sti
js
add
das
scas
add
bound
fcoms
jne
add
notl
and
xchg
pop
pop
movsb
add
aaa
mov
add
dec
mov
mov
adc
or
add
into
sti
xchg
xchg
add
outsb
lret
add
sub
add
icebp
or
js
addb
or
add
jb
push
icebp
xchg
xor
pusha
add
roll
add
pop
pop
imul
jecxz
mov
fisubl
hlt
rcll
pop
out
push
xchg
add
dec
pop
mov
test
xchg
sub
popfw
sbb
mov
jmp
insl
adc
outsl
xor
sete
pop
dec
sub
add
lock
add
add
lea
dec
mov
add
mov
adc
add
jge
sbb
inc
pop
jge
lods
cmpsb
add
pop
jmp
add
scas
add
loopne
cmp
xchg
add
xchg
add
add
inc
push
add
inc
test
add
in
pop
shrb
add
xor
add
flds
popf
flds
add
mov
add
lods
inc
pop
dec
shll
jne
jg
movsl
inc
in
js
neg
push
imul
dec
rolb
mov
repnz
or
adc
and
pop
addb
sbb
add
mov
mov
add
arpl
and
bound
or
cmc
lods
add
xchg
add
js
add
fsts
test
add
lret
add
cld
push
add
push
dec
ret
add
xor
inc
mov
adc
xchg
xchg
jle
inc
or
add
dec
aaa
and
pusha
xor
jne
cmp
adc
out
and
add
mov
pop
mov
add
into
xchg
popa
xor
hlt
or
add
test
add
rorl
xor
mov
pusha
cmp
lcall
add
fildl
add
nop
push
adcl
mov
sbb
std
addb
and
add
add
xchg
add
add
inc
pop
push
add
stos
adc
pushf
adc
fisttps
and
add
pop
cmpsb
add
int3
and
add
lahf
adc
sub
mov
push
add
adc
test
stos
pop
popf
out
rcll
jp
adc
testb
mov
sbb
insl
xlat
inc
dec
and
add
aaa
into
mov
add
adc
add
or
add
mov
and
lods
add
stos
sti
jl
lret
stos
add
mov
ds
xchg
sub
push
addb
jg
push
je
mov
add
dec
add
in
int3
popa
adc
shll
push
inc
cmp
and
out
inc
mov
add
mov
sbb
nop
mov
add
mov
icebp
sub
add
xchg
sti
rcll
out
sub
int
test
mov
mov
out
push
lods
add
xchg
add
add
mov
add
add
add
addb
xchg
jb
movsb
add
push
sub
add
add
mov
xchg
push
add
repnz
add
sub
je
pop
test
add
iret
je
push
cmpsb
add
int
mov
in
mov
add
pop
jno
push
out
add
inc
lahf
xor
test
stos
add
sbb
shufps
jg
jecxz
ljmp
adc
daa
cmp
sub
inc
push
add
sahf
dec
add
call
push
inc
dec
into
push
or
add
mov
add
mov
mov
subps
fcompl
js
pop
loope
dec
movsl
les
mov
add
and
pop
sahf
and
int3
ret
stc
stos
jge
pop
cwtl
and
add
sbb
mov
add
mov
rcl
or
add
out
aam
movsl
inc
dec
adc
add
addb
xchg
subl
hlt
leave
arpl
ja
mov
pop
lods
addb
jo
xchg
push
cltd
fcmovnu
or
add
push
cmp
add
popf
hlt
mov
into
push
add
pop
push
cltd
andl
add
mov
lret
add
add
test
add
pusha
or
add
lahf
pop
lahf
xchg
std
mov
xor
sbb
and
add
adc
dec
or
mov
mov
in
lods
mov
clc
test
add
iret
push
outsl
stos
inc
jmp
add
sub
stc
mov
xchg
out
or
add
add
add
pop
dec
mov
add
fists
fcmovnb
inc
push
cmp
addb
dec
in
test
add
add
adc
mov
xor
sbbl
mov
inc
mov
inc
sbb
cmp
je
hlt
fisttpll
add
add
idivl
push
jecxz
bound
push
xchg
add
icebp
lods
add
mov
add
xor
and
mov
add
add
add
dec
bound
cwtl
cli
push
add
aad
lods
add
insb
fidivrs
dec
push
add
nop
mov
jae
jns
adc
inc
cmpsb
add
in
nop
xchg
adc
inc
push
enter
add
add
shrb
scas
cmovs
fidivs
cmp
jnp
dec
in
lea
add
outsb
jne
int
clc
xor
push
rolb
jno
push
mov
je
push
test
xchg
loope
sub
add
imul
scas
add
icebp
add
add
jle
fsubrs
add
lret
add
add
xchg
nop
or
movsl
cmp
mov
insb
jecxz
dec
lcall
fcompl
push
pop
scas
add
xlat
rcl
dec
xlat
shrb
test
add
push
inc
ja
push
mov
and
add
xor
add
insl
insl
push
adc
je
jb
inc
fnstsw
push
inc
out
call
jmp
add
add
inc
adc
inc
insl
outsl
xor
mov
jnp
push
jae
addb
hlt
dec
xchg
ja
in
mov
dec
loopne
test
add
ljmp
outsb
mov
sub
add
loopne
adc
pop
push
jb
sahf
push
enter
add
xchg
adc
in
and
add
add
or
add
mov
addr16
jmp
mov
repz
std
test
add
adc
dec
stos
dec
mov
xor
jae
xlat
fistpl
movsb
add
or
add
cmp
jnp
scas
add
fsubrs
push
lcall
adc
jmp
add
xorl
movsb
add
lods
add
xor
daa
lods
loopne
xchg
cmp
jne
fnstcw
add
adc
call
add
cli
adc
add
and
add
add
adc
mov
add
add
add
js
sub
ret
push
cmp
add
repnz
out
movsl
jge
fdivr
lds
add
or
lret
pushf
jl
add
lea
pushf
mov
add
rorl
xchg
add
jne
sbb
push
dec
sub
push
xchg
add
xchg
shlb
cltd
add
mov
out
lds
adc
cmp
mov
jae
mov
call
mov
les
fsubs
pop
jo
ficomps
jl
lcallw
add
mov
mov
movsb
add
jb
enter
push
mov
ret
out
sub
repz
add
pop
clc
and
pop
push
cmp
lea
cmpsb
add
popf
aad
lea
fstpt
mov
add
lcall
cli
add
popa
mov
add
ret
stos
add
clc
fmull
add
push
outsl
jecxz
add
inc
ret
mov
ret
adc
cmp
test
hlt
dec
and
add
out
std
iret
jne
add
sub
add
mov
sbb
roll
add
lahf
add
add
inc
dec
xchg
add
mov
fstpt
push
repnz
vandps
add
gs
mov
sbb
dec
pop
push
loopne
dec
xor
or
pop
aas
mov
jno
add
dec
stos
sbb
cmp
push
or
add
jb
dec
mov
cmpsl
stc
jno
scas
repnz
clc
xchg
movsl
mov
pop
mov
cmpsb
add
lea
sbb
add
out
test
add
inc
movsl
push
lea
shll
mov
add
add
out
adc
inc
push
jg
jb
sub
add
pop
inc
push
mov
jecxz
xchg
or
add
test
add
dec
ja
mov
add
ds
and
jp
movl
stos
add
and
sbb
inc
and
add
add
pop
sbb
leave
mov
inc
xor
add
fdivrs
add
out
xchg
add
or
add
or
add
fldenv
push
les
lcall
lock
mov
add
jmp
arpl
pop
push
push
mov
pop
jecxz
out
fadds
mov
loopne
shll
pop
adc
lret
arpl
add
mov
fisubs
fwait
cmp
sbb
or
add
stos
test
mov
aam
inc
adc
mov
add
xchg
out
xchg
mov
and
add
cli
rcll
add
add
lock
sbb
into
ficoms
dec
mov
lcall
pop
sbb
lret
je
add
popa
pop
lcall
add
fstpt
lcall
je
add
inc
negb
mov
add
add
add
mov
or
into
add
leave
inc
inc
xor
add
inc
outsb
jl
add
and
insl
xchg
test
add
jp
loopne
adc
inc
sahf
test
mov
inc
jae
out
std
repz
add
add
cli
into
repz
add
in
xchg
xor
insl
aas
sbb
in
mov
aad
add
icebp
shl
adc
stos
add
pop
cmp
add
sub
test
add
add
inc
and
nop
mov
add
add
gs
push
loopne
loopne
add
call
mov
pushf
testl
add
inc
ficoms
add
fcmovnu
cmp
enter
add
add
out
or
add
xlat
jne
fwait
add
add
push
add
add
add
add
ljmp
add
xor
loopne
adc
pusha
pusha
test
add
out
in
pusha
pushf
movsb
add
repz
add
push
jle
inc
shll
push
repnz
jb
sti
ds
dec
inc
mov
movsl
jge
lds
or
and
add
add
push
in
ficoml
and
add
add
mov
jne
add
in
filds
lods
add
mov
add
add
dec
mov
push
shl
cmp
dec
addr16
rcll
add
adc
roll
add
aad
dec
aad
push
test
add
repz
add
in
mov
cmpsl
in
push
addb
jecxz
mov
add
add
mov
add
pushf
inc
pusha
jecxz
test
fbstp
pop
sbb
into
push
add
add
add
aaa
aas
push
xchg
add
fbstp
jl
addb
lods
add
push
aam
sub
and
add
cmpsb
add
lahf
jle
dec
cmpsl
add
add
push
jne
fwait
lahf
adc
daa
cld
add
lods
jns
popa
push
mov
add
xchg
out
xor
addb
push
add
push
and
or
add
daa
cmp
or
add
leave
data16
add
inc
loop
add
movsb
add
cltd
hlt
inc
aam
daa
pop
rcll
add
add
mov
les
rcl
add
xchg
cmp
mov
mov
ficompl
sbb
xor
and
add
vdivsd
sub
add
mov
idiv
int
mov
js
cmpsb
add
pop
clc
out
xor
add
out
add
sar
cli
mov
push
movsl
dec
add
jnp
push
lret
mov
fmuls
incl
xor
aam
inc
fsubr
pop
movsl
pusha
movl
repnz
fmull
add
jg
pop
test
add
in
cld
dec
js
pop
daa
pop
sbb
data16
add
fsubr
and
add
lahf
aaa
xor
movl
add
lea
cmp
sahf
jne
subl
or
push
sbb
inc
jmp
jbe
imul
out
cmp
iret
je
adc
dec
xor
xor
pop
push
fwait
outsb
jno
sbb
mov
out
clc
test
add
mov
push
add
aad
fistpll
sub
add
add
fdivs
sub
add
stos
jge
add
dec
xchg
jb
adc
add
adc
lahf
sub
dec
sbb
cmp
dec
push
rorb
add
shrb
outsl
rcrl
popf
or
add
sub
and
add
add
mov
idivb
push
dec
repnz
fndisi(8087
ficomps
adcl
ljmp
rclb
xchg
inc
add
or
push
xor
cltd
add
add
jecxz
pop
out
shll
imul
cmc
push
add
add
cmp
je
add
mov
sahf
rorl
popf
clc
inc
pop
popf
mov
out
sahf
lods
pop
subl
add
xchg
mov
jo
rol
fsub
sahf
or
add
xchg
xor
shll
scas
ja
enter
dec
sub
add
sar
ja
jle
test
add
sti
lahf
xchg
add
add
das
pop
sub
add
gs
shll
adc
iret
sbb
mov
add
sub
add
or
test
adc
add
sub
pop
ja
repnz
adc
stos
leave
aam
pop
movsb
add
addr16
xchg
add
pop
lds
dec
bound
push
das
movsl
mov
add
jbe
add
mov
jecxz
adc
out
add
add
sahf
mov
add
add
rcrb
mov
add
cmp
dec
jb
pusha
out
sub
add
push
scas
mov
pop
mov
jge
inc
in
jno
outsb
inc
popf
lea
adc
loope
adc
lret
data16
imul
mov
fs
mov
negl
jae
movsb
add
idivb
mov
cli
in
mov
cmp
adc
add
aaa
lea
add
inc
imul
test
add
insl
pop
lds
add
int3
sti
fsubp
mov
popa
mov
add
add
clc
mov
add
leave
hlt
fadds
add
pop
xor
push
ror
mov
add
mov
add
out
and
add
fisttps
ret
fistl
jae
iret
loope
jns
fst
jmp
add
pop
add
sahf
sub
cmp
cltd
pop
popa
fisubl
pop
arpl
lahf
and
add
notl
cwtl
xor
fldl
decb
stos
add
scas
add
inc
inc
xchg
sbb
pop
jge
subl
sahf
inc
outsb
movsl
mov
add
fldcw
add
add
mov
rclb
add
sbb
or
inc
dec
inc
out
mov
mov
lahf
mov
mov
add
add
cmpsl
fs
add
mov
shrl
add
aad
jl
or
add
out
sbb
dec
in
loop
pushf
pop
addb
pusha
fwait
mov
cmp
xor
pop
shrl
mov
inc
jge
popa
xor
leave
enter
sbb
sub
add
add
add
dec
jno
pop
fisttpl
add
mov
push
mov
add
mov
adc
add
add
sti
das
push
adc
sbb
sbb
stc
enter
adc
adc
add
xor
mov
or
add
xor
addr16
xchg
pop
mov
add
add
add
mov
pop
dec
sbb
push
cmp
mov
hlt
and
add
or
jne
fdiv
fwait
and
add
and
add
jns
loope
shl
add
out
lock
in
or
imul
stos
lret
add
in
push
repz
add
push
dec
sbb
cltd
icebp
push
add
push
push
cmp
add
xor
mov
ljmp
arpl
add
mov
add
pop
mov
add
pop
xchg
pop
rcrb
and
add
add
or
add
xor
in
push
pop
jp
sahf
xor
or
add
mov
adc
push
jne
add
push
or
add
push
addb
pop
and
add
add
add
cltd
and
cmp
jp
fwait
addb
cmp
addr16
les
add
or
sub
or
add
add
add
scas
add
cli
loope
enter
add
add
xchg
xor
add
cmpsb
add
jge
shl
lahf
test
add
arpl
add
add
ja
cwtl
sub
add
mov
add
add
lret
bound
and
add
or
add
cmp
add
xchg
add
add
xor
mov
mov
pop
cmp
adc
jb
push
sbb
xchg
mov
mov
add
int
ljmp
sti
ud2
cmpsb
add
imul
add
std
into
daa
and
call
add
cmp
idivl
mov
add
sub
add
add
mov
sbb
mov
pushaw
addr16
rclb
aad
call
push
and
add
add
cmpsb
add
into
mov
lcall
in
out
insl
stos
add
xchg
dec
mov
add
add
push
sub
cmc
loope
add
push
xor
adc
sub
in
add
inc
insl
jno
sbb
das
fimull
add
add
ret
add
jge
add
mov
xchg
xor
dec
dec
pushf
jae
insb
or
add
pop
mov
push
insb
push
js
pop
or
add
cmp
nop
and
jle
sahf
out
sub
add
cltd
sub
add
add
mov
out
into
rcrl
mov
sub
add
mov
add
ljmp
add
or
outsb
cmpsb
add
inc
stos
add
adc
popf
popf
push
xchg
jne
xchg
xchg
aaa
xlat
rorb
int3
lret
imul
aam
cwtl
xchg
jecxz
xor
arpl
cmp
repnz
lcall
or
add
add
mov
and
add
sub
add
into
popa
pop
mov
add
aaa
inc
outsl
addb
sub
add
mov
popf
in
lret
add
push
fucomp
hlt
or
jg
ret
push
xchg
pop
or
int
add
add
cmp
sbb
mov
inc
cmp
lcall
enter
call
add
and
add
lock
aam
sbb
jnp
imul
ret
xor
xchg
mov
cmc
scas
stos
add
xlat
stos
add
in
xlat
sahf
icebp
arpl
push
cmp
add
fdivs
add
pop
pop
cmp
or
add
cmpsb
add
xchg
test
imul
arpl
cmc
fbstp
dec
cmp
add
jae
test
call
add
outsb
mov
cmp
stos
fcmovnu
aas
daa
jae
adc
shrb
pop
popf
and
add
xchg
cmpsb
add
sub
sets
add
fldenv
icebp
pop
inc
lcall
into
mov
xchg
mov
add
test
inc
push
incl
add
mov
fstps
xchg
sub
scas
add
adc
add
lahf
dec
popf
cltd
mov
jmp
xchg
dec
stos
mov
add
ficomps
add
mov
add
repnz
add
jb
add
jecxz
out
jg
cmp
ficomps
add
negl
out
add
mov
xchg
test
add
add
sahf
mov
push
add
leave
jmp
out
xchg
mov
add
add
jg
push
fwait
mov
add
add
push
addr16
loope
fsubs
add
pop
fwait
inc
dec
and
add
movsl
pusha
pop
ret
test
add
aam
add
lock
add
pushl
fistpl
push
sbb
fs
cmpsl
sub
loope
loopne
in
insl
mov
sbb
add
stos
pop
mov
xchg
sbb
les
inc
push
jbe
pop
nop
pop
shlb
add
imull
push
jg
std
inc
rcll
add
jne
outsb
add
jb
imul
test
add
fcmovnbe
lcall
sarb
add
cmpsb
add
mov
add
inc
and
add
dec
das
xlat
shr
mov
ss
test
scas
rcrb
icebp
notb
add
pusha
out
das
mov
cmp
lret
jecxz
jns
call
addr16
cmc
stc
bound
test
xor
pop
fldenv
add
or
add
movsl
stos
add
enter
add
add
movsl
add
add
ds
out
flds
leave
movsb
add
pop
scas
add
pop
lcall
push
push
add
add
add
add
ja
push
add
sahf
mov
add
add
mov
add
xchg
xlat
gs
lret
mov
test
add
and
xchg
cli
int
gs
fsubr
into
fwait
pop
sub
ja
mov
lea
add
inc
pop
inc
inc
sub
movsl
add
add
rcll
or
mov
push
test
add
inc
mov
fsubrl
sbb
push
add
outsb
mov
mov
std
cmp
add
cmp
ljmp
rol
test
add
pop
mov
mov
cwtl
sbb
cmp
mov
and
add
add
outsl
inc
mov
cmc
push
xchg
jbe
add
push
add
clc
jno
add
mov
mov
pop
mov
repnz
adc
aas
push
aaa
cmp
fiaddl
aas
mov
inc
push
inc
xor
sbb
insb
mov
add
mov
add
add
add
add
loopne
inc
subl
push
xor
outsb
cmp
daa
aad
xchg
add
fdivl
dec
leave
sahf
mov
add
loope
fiadds
add
jle
adc
add
sub
add
add
add
sub
add
ret
arpl
pusha
ljmp
add
add
out
stc
cmpsb
add
ja
repz
loope
dec
xchg
adc
xchg
add
test
add
lret
test
add
add
push
mov
add
add
cwtl
adc
fwait
jnp
add
or
add
adc
pop
nop
movsl
pop
xchg
insb
in
insb
test
in
faddl
mov
aad
add
jo
push
add
in
mov
dec
push
add
add
add
dec
add
push
cmpl
inc
xchg
mov
cmp
pop
jl
addr16
mov
add
cwtl
mov
pop
and
add
rclb
je
xchg
mov
add
xchg
cmp
add
in
jmp
or
add
dec
lds
xchg
lcall
lock
inc
and
cmp
sub
adc
cmp
push
and
add
add
aad
lcall
scas
rcrb
jbe
pop
mov
add
or
pusha
outsb
loop
pusha
in
faddl
xchg
mov
add
jae
ret
lods
add
aaa
push
fwait
or
adc
aas
jne
sub
add
xchg
jne
out
inc
cmp
mov
out
or
add
sub
data16
xchg
leave
xor
sbb
fisubl
mov
or
dec
mov
add
mov
add
jp
iret
mov
mov
xlat
fnsave
mov
add
nop
mov
insl
adc
incb
add
scas
and
add
adc
loopne
add
mov
add
inc
nop
sahf
jnp
jecxz
cmp
add
xor
xchg
fidivl
xchg
add
out
repz
jecxz
add
out
jg
sahf
out
mull
sub
das
addb
and
add
add
cwtl
faddp
xchg
add
ret
les
jp
inc
xlat
dec
jg
dec
mov
add
into
fisubs
pop
shll
push
std
out
add
and
add
cld
pop
enter
xor
pop
jg
xchg
flds
loope
enter
cmp
and
insl
mov
add
or
add
add
aas
fidivs
cvtps2pd
out
xchg
inc
push
mov
or
add
loope
and
add
scas
xor
inc
mov
add
and
add
inc
push
test
add
popa
shll
fwait
pop
cld
or
add
add
dec
mov
jbe
add
cmp
add
xchg
sub
add
dec
gs
sub
loop
add
aas
das
and
add
gs
repnz
cmpsl
out
add
mov
add
dec
mov
test
das
ja
add
add
shrb
fsubrl
or
insl
mul
leave
testl
add
test
das
sub
add
jmp
popa
shlb
xchg
cmp
addb
aaa
push
add
xlat
fwait
pop
dec
cmp
imul
add
pop
insb
imul
fstp
pushf
test
add
push
adc
sub
add
add
jge
adc
popf
sbb
jmp
stos
popf
xchg
add
add
add
icebp
mov
mov
movsl
inc
adc
mov
dec
push
mov
lahf
in
pop
cmpl
xchg
push
mov
jno
stos
add
push
loop
enter
add
stc
out
add
mov
mov
leave
jb
jmp
int
ja
addr16
lods
addb
pop
stos
pop
pop
xchg
xchg
hlt
mov
add
out
ss
add
dec
outsb
leave
shll
jns
inc
lcall
sbb
in
arpl
jmp
lret
or
add
daa
push
pop
icebp
push
outsl
sub
add
add
add
push
pop
push
push
cmp
dec
adc
xchg
jp
push
add
cmpsl
pop
jnp
xor
add
push
add
add
scas
add
push
add
loop
addr16
push
xchg
mov
icebp
lahf
shll
pop
sub
push
add
js
in
add
imul
add
and
add
inc
insb
push
data16
fiadds
sbb
or
loopne
push
add
push
sub
add
addb
add
add
lret
dec
les
inc
pop
pop
lods
add
mov
add
adc
add
hlt
push
pop
rorl
sub
add
scas
push
lahf
imul
cld
enter
pushf
cltd
and
repz
add
stc
cwtl
fs
jns
enter
add
out
mov
add
fisubrl
jae
scas
add
sbb
jl
in
aas
dec
xor
xchg
add
sbb
cld
test
xchg
push
jg
cmp
arpl
decb
sub
add
add
add
loopne
imul
into
inc
ljmp
add
xchg
adc
and
add
pop
sbb
fldenv
lret
addb
jge
and
add
decb
jbe
mov
or
add
pop
fimull
out
ret
mov
add
mov
add
addr16
shl
sti
mov
add
push
loopne
or
add
add
push
add
ret
stos
add
jns
stc
inc
negl
fnstcw
add
stc
mov
xor
add
sub
add
sub
stos
xlat
and
add
adc
daa
ja
fs
sbb
jae
addb
test
sbb
jmp
dec
jecxz
inc
mov
add
add
add
and
dec
cld
sahf
push
add
pop
stos
add
call
mov
adc
test
mov
fstpt
xor
aaa
sub
add
or
add
add
add
mov
int
push
push
add
pop
mov
add
int3
mov
popa
cmpsl
lret
lret
add
add
add
stos
aam
addb
icebp
cmpsl
jg
add
inc
dec
or
add
into
pop
adc
add
mov
les
add
inc
pop
lds
aas
adc
inc
jge
or
xchg
add
mov
sub
add
dec
cltd
jns
stos
add
sahf
cmp
sub
add
add
add
mov
fwait
imul
add
aad
pop
movaps
std
inc
loop
xchg
pop
and
fsubr
int
cmpsl
into
insl
out
mov
add
xchg
add
cld
pop
pop
pop
add
lock
jb
push
repz
jno
push
add
sub
sub
add
dec
std
lods
aaa
mov
fwait
lods
add
imulb
add
cld
in
js
fxch
and
add
add
mov
cmc
dec
lret
outsb
fnstsw
out
and
mov
add
inc
pop
mov
int3
inc
jmp
cmp
mov
test
add
pop
lahf
rcr
out
in
jecxz
xchg
ficoms
add
je
arpl
daa
cmp
mov
add
fld
cld
out
pop
inc
mov
clc
or
add
add
xor
out
addl
xor
sub
push
les
mov
add
int
add
dec
or
add
fldt
bound
stos
dec
imul
push
add
add
inc
jne
je
shrb
dec
pop
xor
push
add
or
mov
add
add
add
inc
pop
mov
sbb
add
out
orl
mov
decl
add
jb
jae
push
add
pop
shlb
xchg
mov
dec
data16
add
test
add
popf
shrl
pop
cmp
in
jg
sub
add
cmc
ficoms
push
inc
pop
enter
and
add
mov
inc
and
shr
popf
jmp
add
add
rclb
xchg
ja
push
add
pop
mov
out
iret
inc
or
add
xchg
or
in
jo
xor
pop
cmp
xchg
add
xchg
sahf
adc
fs
inc
pop
xchg
add
add
into
aas
movsl
xchg
enter
testb
add
add
mov
add
lods
add
mov
loope
dec
rclb
int3
or
add
movsl
cwtl
jmp
dec
mov
sahf
mov
jbe
repz
pop
mov
add
loope
das
jle
add
add
rorb
or
negl
xorl
add
jp
add
mov
add
mov
pop
int
pop
push
lods
add
adc
ja
addb
inc
addr16
push
xchg
movsl
test
add
pop
popa
cmp
fisubs
imul
add
mov
dec
xchg
dec
ret
mov
lock
cmpsl
addl
add
out
pop
pop
dec
shll
push
add
add
mov
add
arpl
mov
and
mov
add
xor
add
ret
fcom
cmc
xor
movsl
test
add
sub
xchg
or
add
das
push
or
into
jp
add
dec
loopne
int3
pop
ret
pop
pop
xor
push
adc
loope
xchg
xor
ss
pop
sub
add
inc
or
add
dec
ret
mov
aas
enter
out
fistpl
lods
add
jecxz
addb
fmuls
add
xchg
dec
jbe
jmp
jae
shl
push
dec
add
add
std
adc
dec
les
sarb
movsb
add
outsl
arpl
add
je
shl
movl
adc
lock
lods
add
mov
aas
xor
push
xor
mov
cmc
xor
or
add
pop
push
mov
enter
mov
jmp
mov
add
pop
add
mov
incl
push
inc
xchg
and
mov
outsl
icebp
push
insb
pop
sub
mov
das
daa
dec
je
add
bound
cmp
std
push
dec
lock
lret
lea
popf
pop
jae
add
add
pop
mov
jb
mov
mov
fs
mov
mov
add
add
shlb
mov
ret
pop
sbb
cmp
and
add
sub
movsl
fbld
add
add
ret
xchg
xchg
sub
add
addb
sub
aas
in
add
dec
test
add
jbe
sbb
shl
mov
add
add
into
sbb
add
lds
push
imul
adc
orl
out
pop
mov
sub
add
cld
scas
add
data16
lock
clc
mov
add
sub
add
in
in
sbb
push
jno
add
inc
pop
ja
test
jnp
mov
add
mov
add
ficomps
dec
sub
add
push
pop
mov
add
inc
outsb
mov
mov
cmc
aas
ret
sbb
and
add
add
sbb
lret
enter
adc
add
xchg
adc
fistps
sbb
inc
test
add
push
add
lcall
test
add
add
and
fwait
pop
out
mov
add
mov
add
cmp
add
popa
or
daa
psrad
mov
add
orps
cld
jne
les
mov
pop
push
dec
cmp
mov
inc
jbe
sub
add
dec
mov
lods
jmp
fst
add
loope
xchg
xor
add
nop
mov
and
add
out
mov
loopne
stos
inc
pop
mov
rep
stc
jp
ret
jbe
add
xchg
sub
add
xor
fsubs
add
stos
gs
movsb
add
adc
jno
sahf
mov
add
jg
sarl
fstl
imul
add
out
mov
and
mov
add
push
pop
scas
add
pusha
mov
add
adc
add
pop
and
pushf
iret
xor
mov
add
aam
and
add
aam
pushf
pop
test
mov
push
add
cmpsb
add
xchg
add
jge
xchg
jle
add
mov
mov
add
popf
fisubrl
xchg
mov
xchg
sub
add
jbe
sbb
mov
add
sahf
jmp
cmpsb
add
lahf
rcl
cmp
aam
mov
add
inc
dec
popa
fists
sub
aam
add
loop
xor
icebp
mov
add
add
add
push
dec
inc
hlt
or
push
idivb
add
or
add
xchg
aas
rorl
decb
das
and
dec
stos
jno
aas
mov
add
pop
loop
or
mov
ljmp
and
aad
add
inc
inc
shr
add
add
lret
jae
sub
imul
sbb
out
negl
bnd
loope
test
mov
add
dec
aam
push
dec
in
jp
fadd
push
ja
loope
outsb
cltd
stos
dec
pop
pop
ret
into
sbb
mov
add
pusha
xchg
add
clc
xorl
or
add
mov
add
leave
xor
add
aam
add
add
mov
clc
cwtl
andl
add
hlt
pop
inc
jle
pop
and
aaa
popf
adc
movsl
jne
fs
pop
push
ljmp
sub
add
mov
add
and
add
pushf
mov
xchg
loopne
dec
and
add
add
iret
cwtl
xor
outsl
fisubs
lahf
pop
insl
shrb
out
add
fisubs
lret
int
mov
lods
add
adc
add
and
add
inc
jmp
jno
mov
add
sub
add
mov
gs
mov
dec
mov
and
jns
in
arpl
add
testb
xor
mov
pop
mov
jne
cmpsb
add
inc
fildll
add
addb
add
jl
fs
xorl
dec
xor
in
insb
rcl
pushf
cmp
mov
mov
jl
mov
push
fmul
mov
jo
add
add
lds
sbb
js
icebp
and
add
mov
add
out
xchg
add
mov
fwait
xchg
push
adc
dec
out
pusha
push
and
add
add
data16
push
adc
mov
push
cli
std
add
add
cmpsl
addb
leave
jnp
sbb
mov
lods
jle
xchg
in
call
je
pop
mov
sub
add
sbb
ljmp
add
jge
sti
pop
cmp
add
pop
sub
inc
leave
or
add
push
fbstp
in
inc
imul
pop
fcoms
testb
add
dec
lcall
add
fldl
sti
mov
sarl
or
fnstenv
movntps
add
push
addb
sahf
pop
inc
mov
mov
call
aaa
xchg
jge
push
cmp
into
popa
fstpt
addb
popa
xor
fldl
add
mov
cmp
add
cmpsb
add
xchg
xor
loop
aad
add
nop
les
mov
add
mov
pop
gs
mov
inc
hlt
dec
xor
sub
add
add
cmp
add
out
sti
fs
shlb
fisubl
leave
mov
lea
add
stos
and
xchg
add
push
sbb
add
push
rcrb
push
ret
or
add
push
sub
mov
mov
jmp
add
add
add
dec
mov
mov
adc
jne
shll
test
sbb
ja
jl
pusha
loope
movsl
test
add
inc
stc
in
mov
call
mov
add
mov
push
mov
add
add
push
add
lret
jp
pusha
mov
push
mov
push
xlat
push
add
add
and
dec
pop
repnz
insb
mov
jg
or
push
mov
bswap
lods
add
daa
push
pop
inc
xor
insb
fadd
add
xlat
hlt
fmuls
add
inc
cmp
in
pop
xchg
int3
push
sbb
xor
add
fisttps
add
bndstx
push
inc
add
lret
frstor
jae
insl
push
push
fistps
bound
int3
hlt
rolb
aaa
inc
testb
int
add
int
mov
fidivrs
or
add
and
add
movsb
add
stos
add
cmpsl
mov
test
add
arpl
test
xlat
mov
jne
test
add
imul
mov
cwtl
ja
test
add
pusha
loopne
xor
dec
ss
push
add
test
icebp
lret
adc
sti
pusha
daa
mov
icebp
pop
inc
outsb
pushf
scas
xchg
pop
mov
add
sti
dec
test
lds
clc
clc
jbe
inc
mov
add
mov
outsb
add
add
adc
inc
push
inc
xchg
movsl
push
shr
cmp
add
ja
add
outsb
dec
jo
sbb
repz
cmp
jmp
jns
xchg
ds
add
add
addb
les
lahf
inc
sub
add
add
or
mov
int3
xchg
ret
inc
or
add
and
add
add
arpl
pop
jg
add
or
add
xor
mov
leave
movsb
add
pop
test
add
jo
push
xor
inc
jno
lcall
enter
loop
add
and
add
cmpsl
push
mov
add
and
add
sbb
add
inc
jae
mov
mov
lret
mov
cli
lods
add
pop
mov
add
fiaddl
add
push
xchg
add
int3
add
add
js
xchg
add
mull
jp
inc
or
add
shrl
test
adc
sti
jecxz
add
out
pop
loopne
add
add
pop
test
mov
call
add
rclb
or
add
add
add
rclb
and
add
mov
add
sub
add
mov
mov
add
mov
add
add
add
mov
loope
xchg
mov
add
mov
outsb
or
pop
xor
sbb
add
xor
jns
imul
out
out
xchg
shrl
cmp
or
xchg
or
addb
sti
mov
insb
cmp
in
xchg
stos
jecxz
add
pop
pop
subl
add
jns
mov
sbb
add
imul
xchg
cmp
push
test
add
fbstp
adc
test
add
sbb
and
cmp
fcmove
fwait
insb
out
and
add
insl
mov
add
lods
lock
add
dec
shll
das
cmp
and
add
test
add
mov
fmull
add
in
add
addb
test
add
add
jbe
xchg
inc
fisubl
sub
add
add
push
inc
jle
bound
mov
adc
scas
in
les
popf
mov
arpl
insb
sub
add
dec
or
add
imul
push
add
add
add
add
add
ds
mov
mov
add
add
sub
lahf
fwait
xchg
fistpl
inc
fsubr
sbb
pushf
or
add
push
sub
xor
pop
xor
mov
add
or
add
sbb
jae
out
mov
jno
pushf
popa
sbb
xchg
jmp
add
jl
add
sbb
push
xchg
mov
add
mov
pop
jb
inc
mov
inc
push
out
lods
ss
sti
sub
add
sub
mov
add
icebp
sub
add
jg
cmp
pop
add
add
sbb
mov
adc
push
xor
add
jbe
push
lds
jle
test
add
out
nop
mov
movsb
add
push
mov
add
call
add
dec
push
mov
sub
add
xor
add
jns
dec
bndldx
add
icebp
push
sub
add
pop
mov
imul
insl
cld
xlat
inc
stos
add
mov
add
xchg
mov
add
rorl
pop
int3
loopne
push
in
insb
inc
push
cmp
add
add
adc
inc
popa
pop
pushf
loop
pop
std
sti
jp
nop
sbb
add
outsl
in
xor
push
xchg
sahf
xor
add
lret
mov
fsubs
stos
add
xor
xchg
and
adc
imul
add
je
inc
sbb
sti
shll
mov
movsb
add
or
add
add
jecxz
cli
mov
nop
mov
dec
adc
pop
mov
outsl
push
add
ds
mov
fsub
add
fisttpl
add
and
cmp
je
mov
add
sarb
dec
dec
mov
adc
out
mov
mov
xlat
out
mulb
and
add
or
add
js
cwtl
jle
test
sbb
fisubs
jmp
or
add
in
pop
test
cmp
outsb
jne
das
in
daa
dec
sarb
jnp
out
and
mov
lahf
add
add
scas
add
and
add
mov
inc
aad
loopne
pop
mov
add
jg
add
add
clc
sahf
aad
sbb
cld
outsl
cmc
jne
push
dec
in
cmp
je
add
insl
pop
stos
add
add
add
cmp
addb
sahf
push
mov
cwtl
fs
mov
add
lods
mov
mov
add
sbb
dec
in
aad
add
std
pop
jmp
mov
fs
cmp
cmp
push
add
add
out
jbe
xchg
out
adc
xchg
dec
sub
shrb
add
inc
mov
out
fs
lahf
lods
filds
xor
std
jns
cmp
push
or
add
sub
add
and
ret
add
add
into
inc
push
adc
int
add
addb
jae
jcxz
in
cmpsl
inc
mov
icebp
jo
jne
test
pop
addb
mov
pop
cmp
jae
add
in
jno
repnz
add
repz
sbb
stos
add
cmp
add
popf
jnp
add
cmp
add
lods
add
add
add
xchg
mov
in
aaa
or
sahf
mov
pop
dec
mov
add
out
daa
mov
add
daa
adc
xchg
bound
stos
add
xlat
push
xchg
jmp
adc
aas
push
test
mov
add
sub
shrb
scas
add
gs
test
add
add
add
add
add
jnp
xchg
dec
sub
add
movsl
lret
roll
add
pop
mov
add
dec
imull
mov
add
cltd
ljmp
add
jl
dec
std
addb
sub
mov
add
xchg
jmp
mov
jg
rcrl
sbb
add
daa
and
add
imul
add
sub
add
out
outsb
into
aas
inc
popa
dec
add
jmp
pop
jp
call
xchg
pop
dec
int
pushf
mov
add
jns
mov
add
xchg
adc
stos
add
xchg
outsb
test
add
sbb
and
add
add
iret
add
imul
add
aas
and
add
mov
push
orl
add
add
fcmovne
mov
xchg
mov
dec
jno
outsl
add
add
ficompl
call
notl
je
mov
add
push
add
sti
stc
and
call
add
hlt
fs
iret
or
add
push
inc
mov
cmp
push
fnstenv
adc
inc
repnz
call
incl
add
repz
sbbl
iret
out
rcl
push
iret
inc
js
add
pop
xchg
jg
dec
in
arpl
add
or
add
add
add
pop
dec
xor
repnz
add
add
add
cmp
repnz
jmp
add
add
notl
cmp
jp
cmc
and
add
push
nop
push
xchg
aam
cld
pop
push
cli
sub
add
lahf
pop
icebp
insb
pushf
enter
pop
mov
aas
addr16
leave
cmp
xor
dec
les
fwait
addb
pop
or
add
sub
add
mov
lret
pushf
xor
lcall
add
outsb
in
add
aaa
ret
adc
lcall
xor
cmp
fimuls
xor
and
add
sbb
cmp
mov
pop
add
in
fsubs
sbb
test
add
fsubs
cmp
mov
mov
add
mov
fcoms
add
jne
mov
add
rol
add
add
add
add
add
insl
int
dec
push
add
cmp
scas
adc
out
mov
add
clc
filds
add
aam
pop
mov
cmpl
add
lds
xchg
data16
repnz
add
cld
stc
data16
mov
push
add
xchg
fidivrl
clc
js
add
notl
mov
mov
sub
mov
arpl
adc
push
sbb
negb
ss
xor
test
andl
pop
stos
add
pushf
addr16
ret
pusha
or
mov
lock
iret
fsubrl
adc
adc
ret
or
cmp
sbb
push
sub
dec
insl
cmp
popa
or
shlb
add
jns
in
addb
mov
adc
add
testl
clc
xor
add
sti
xor
inc
loope
pop
sarl
jmp
push
mov
adc
add
rorb
add
js
das
pop
push
push
push
cld
mov
add
lcall
inc
test
add
pop
mov
add
mov
mov
add
fldcw
add
add
xor
leave
std
and
test
add
jge
mov
pop
jae
adc
popf
rolb
add
lret
jmp
js
cmpsl
stos
jno
nop
mov
add
dec
dec
loope
add
mov
add
inc
rcrb
mov
add
xchg
fnstenv
test
add
ret
fwait
or
add
dec
stos
add
sahf
ljmp
cmp
add
pop
pop
fidivrl
pop
dec
add
add
adc
add
pop
cltd
add
iret
push
push
xor
mov
add
jbe
out
xor
cmp
adc
xor
movsl
aas
pushf
cmp
add
cld
addb
in
cmp
mov
repz
xor
add
cmp
add
movsb
add
stos
add
fidivl
add
mov
add
dec
or
add
lcall
or
add
dec
loop
repz
push
nop
mov
mov
add
push
add
dec
cmovl
out
jmp
dec
jns
aad
sbb
cli
and
add
and
pop
ds
stos
inc
inc
sahf
cmc
sbb
or
add
add
out
pop
sbb
mov
mov
add
std
cmpsl
addb
incl
add
ss
addr16
lea
add
in
cmp
mov
add
push
rcl
ret
insl
sub
add
inc
pop
sbb
test
add
addb
add
add
push
pop
cmpsb
add
sbb
shl
xor
imul
fmuls
in
testl
mov
add
dec
sbb
insb
sti
mov
cwtl
push
mov
in
mov
add
xlat
decb
push
sbb
daa
shrl
add
add
outsb
int
cmpl
mov
add
fwait
in
jge
mov
mull
dec
into
mov
push
and
cmp
lods
ss
add
pop
mov
jmp
add
or
add
push
sbb
mov
push
mov
inc
mov
pushl
lcall
push
js
das
push
add
jge
add
jne
xor
mov
jge
push
jae
repz
sub
add
jmp
adc
jecxz
cmp
in
xchg
cli
cmpsb
add
aas
mov
insl
mov
add
out
insl
sbb
jle
and
add
add
test
add
sbb
jmp
add
mov
mov
xor
jge
jnp
cmp
sub
mov
add
sarb
xchg
stos
add
roll
arpl
adc
jle
mov
pop
adc
dec
sub
push
je
add
add
add
sbb
sbb
jle
mov
pop
sarb
add
out
add
mov
jg
add
outsb
push
add
jg
mov
add
scas
add
cmp
xorl
arpl
test
jo
cmpsb
add
pop
outsl
das
mov
addr16
adc
and
mov
add
push
ss
int
lret
scas
mov
shl
dec
sbb
add
add
add
fiadds
mov
mov
mov
xor
sbb
shlb
add
addb
ficoml
mov
add
ljmp
add
mov
add
mov
fdivp
pop
push
int
add
addb
lds
push
add
addb
push
mov
dec
rolw
mov
xlat
out
fs
dec
aam
add
add
push
add
imul
push
push
adc
testb
add
out
dec
hlt
mov
les
add
add
push
pop
das
movsl
pop
and
xchg
sbb
daa
pop
mov
dec
addb
push
enter
arpl
pop
dec
int
pop
inc
in
loopne
sbb
mov
cmp
std
pushf
and
in
stos
mov
add
add
jbe
lea
ss
add
inc
pusha
or
add
pop
loope
add
and
idiv
addb
add
add
or
add
push
bound
xor
incb
add
add
add
pop
push
add
idivl
and
jg
iret
out
jne
pop
or
ror
lret
pop
push
push
adc
push
in
daa
js
lret
out
gs
sbb
xor
popa
loope
mov
aaa
sarl
add
add
std
inc
out
popf
shl
stos
xchg
add
mov
leave
movsb
add
sbb
add
xchg
xor
xchg
or
je
pop
fstps
add
sub
add
cmp
fcmovnu
adc
rolb
pushf
aam
andl
add
add
xchg
and
mov
arpl
mov
add
cmp
add
cli
outsb
cld
inc
mov
in
lds
add
mov
add
cltd
cmp
fcomp
mov
cmc
outsb
jne
inc
addb
fistpl
add
pop
imul
adc
out
dec
imul
adc
ret
arpl
roll
add
lds
add
sbb
add
int
shrb
out
xor
fwait
bound
xchg
insb
outsb
adc
fcoms
shlb
sub
add
aam
add
jo
jmp
mov
outsb
adc
lds
cltd
cwtl
jne
data16
mov
movsb
add
sub
add
mov
jle
push
xchg
mov
mov
addb
mov
add
ds
movsl
aaa
lods
add
call
pop
testl
pop
sbb
xor
jae
pop
les
mul
mov
xchg
xchg
add
inc
lds
rcr
dec
add
add
sarl
aad
adc
add
mov
pop
dec
jge
add
pop
sub
add
or
add
cmpsl
icebp
dec
pop
mov
dec
mov
add
mov
xchg
adc
sub
add
les
in
int
out
inc
pop
and
add
add
mov
stos
popa
dec
inc
inc
add
mov
imul
sbb
imul
add
cltd
xchg
int3
faddl
add
dec
push
sub
sub
fnsave
xor
fidivrs
or
add
add
shrl
cli
xor
movsb
add
push
dec
push
js
test
add
cld
nop
movsb
add
jmp
pop
loopne
add
add
add
gs
aad
mov
add
popf
loop
jle
imul
ljmp
mov
add
and
add
add
std
inc
ss
ja
sub
add
jbe
push
idivl
sub
add
iret
gs
push
xlat
outsb
outsb
inc
ficoml
lds
out
jecxz
add
call
xchg
add
push
out
cmp
loop
push
ljmp
dec
pop
sub
add
sti
ljmp
inc
lea
test
test
adc
jbe
push
mov
movsl
lret
sub
sarb
mov
mov
or
add
lock
fwait
xlat
push
add
sbb
mov
mov
pushf
jle
pop
shll
and
imull
jge
add
outsb
fwait
in
and
add
insb
ljmp
jmp
icebp
inc
jae
pop
int3
clc
mov
cmp
mov
xchg
mov
add
pmulhw
push
jbe
jp
jb
jo
push
add
cli
add
add
push
add
xorl
test
cmp
jmp
mov
add
scas
jb
inc
sub
mov
fstpt
loop
addb
add
add
lds
push
das
rol
add
cmpsl
test
in
out
shr
fistpl
mov
add
lret
ljmp
add
add
xchg
pop
and
add
push
test
add
je
push
add
dec
mov
and
add
sbb
popa
ds
adc
stos
cmp
add
sti
pop
pop
fnsave
mov
add
add
add
add
stc
jecxz
or
int
mov
add
addb
pop
dec
xchg
add
add
jmp
cmp
roll
sbb
insl
pop
setb
xchg
fdivl
add
xor
hlt
sti
mov
pusha
dec
mov
add
fsubl
or
test
add
int
add
pop
xchg
addr16
mov
scas
adc
xchg
js
stos
add
pop
push
add
js
out
dec
test
push
fisttpl
or
clc
stc
fwait
jnp
add
push
pop
xchg
mov
sub
add
jno
xor
cmp
and
out
add
fwait
add
xchg
sub
add
jo
pop
push
js
lock
int
push
aam
xor
sbb
in
repz
shrb
dec
fnsave
mov
add
add
imul
add
stos
add
ret
add
leave
and
add
sbb
xchg
dec
in
sub
add
add
inc
adc
notl
out
lds
xchg
jge
dec
out
loop
add
aam
add
stos
xchg
add
push
lahf
lds
dec
nop
adc
mov
add
bswap
xchg
out
scas
pop
push
into
test
add
cmp
mov
or
mov
add
je
scas
push
mov
jp
fistpll
add
vpsrlq
lcall
clc
push
mov
or
add
jmp
sub
cmp
lret
repnz
add
sub
sbb
fstl
push
add
mov
xor
sbb
sbb
and
add
out
and
aad
js
add
inc
jg
mov
add
add
add
add
inc
shlb
out
adc
add
dec
test
add
outsl
dec
push
and
add
out
jg
test
add
cmpsb
add
xchg
in
lods
add
mov
add
sbb
into
xor
sub
add
or
jmp
sub
add
fwait
push
ror
shr
xchg
jno
add
xlat
lret
push
add
mov
jecxz
sbb
cmpsl
push
add
sub
add
add
jae
mov
mov
xchg
jae
xor
fisubs
xor
add
xor
sub
add
mov
dec
movb
add
sub
add
les
popf
jmp
jl
cmpsl
mov
add
push
in
movsl
in
adc
ljmp
dec
lea
dec
aad
add
jno
xchg
cmc
or
repz
insl
or
add
add
or
icebp
push
pushf
mov
cmp
jbe
sbb
cmp
loop
mov
test
addl
lcall
or
add
ja
add
stc
in
sub
dec
call
xchg
sub
add
xchg
leave
and
add
xor
fnsave
outsl
dec
mov
add
pop
pop
push
std
mov
ror
jbe
add
push
jl
arpl
add
addb
or
add
aad
xlat
mov
add
fisubl
add
out
les
pmaddwd
js
lods
add
xchg
mov
add
add
add
sub
add
cld
push
out
idivb
add
loopne
mov
add
in
pop
fisubs
idivl
and
test
add
pop
push
cwtl
aam
mov
data16
mov
add
add
sub
add
add
add
sbb
notb
add
addb
cmpsb
add
aas
sbb
iret
push
mov
lea
sahf
jmp
int
pop
sbb
add
outsl
scas
add
test
add
inc
add
lea
pusha
pop
cmpsb
add
xchg
push
jmp
sub
add
gs
or
cmp
add
insl
rcrl
mov
mov
push
adc
mov
addb
and
add
add
pop
or
add
mov
add
adc
js
xor
add
or
add
into
mov
movsb
add
lret
sbb
add
jmp
decb
add
rcll
adc
lcall
xchg
add
pop
mov
ljmp
inc
sub
idivl
adc
push
dec
dec
ret
addb
fmuls
push
add
je
or
add
add
shlb
add
loopne
add
addb
loopne
lret
push
add
outsl
dec
rcrl
push
inc
mov
xor
lret
aas
pusha
jns
frstor
sub
add
xchg
lret
adc
icebp
adc
add
jb
cmpsl
pop
mov
stos
add
pop
push
add
dec
outsb
xor
in
sahf
dec
pusha
mov
out
add
icebp
or
clc
adc
add
lret
addb
inc
lds
push
add
add
dec
scas
pop
jnp
jbe
or
push
pop
mov
add
sub
add
add
loopne
imul
pop
cmp
loope
or
mov
add
dec
add
fidivrl
add
clc
xchg
jmp
add
gs
sbb
movb
add
push
cwtl
insl
dec
cmpsb
add
inc
imul
add
add
sbb
push
jne
and
dec
lea
add
xlat
xchg
add
sbb
add
mov
mov
mov
mov
mov
add
stc
pop
xchg
jle
jnp
mov
add
dec
lret
xchg
jp
scas
add
lahf
add
add
xchg
push
add
sahf
inc
push
orl
test
add
xchg
dec
mov
mov
fs
mov
xchg
sbb
sbb
mov
icebp
push
add
mov
inc
movsb
add
mov
cld
les
cmpsb
add
push
repnz
mov
add
fs
cmp
test
add
cmp
out
adc
aad
pop
addb
lods
add
cmp
pusha
shr
cltd
cmp
jbe
jp
add
xchg
testb
dec
loope
pop
fwait
jne
adc
add
add
outsl
loop
rcrl
cli
ss
xor
dec
sbb
nop
inc
xchg
lea
add
adc
xorl
mov
add
cmp
mov
mov
mov
mov
repz
dec
cmp
jnp
add
fistl
mov
mov
add
test
addb
cmp
push
add
leave
jns
and
movsb
add
popf
jmp
xchg
fsubp
inc
push
adc
dec
xor
js
stos
add
sbb
xchg
pop
out
inc
push
jbe
iret
imul
add
add
lods
add
jmp
cmc
fcmovb
imul
add
add
add
mov
add
push
inc
je
cmp
mov
mov
cmc
and
add
test
add
lret
push
mov
inc
sub
aad
rclb
and
add
cli
inc
lahf
rolb
add
mov
add
js
add
add
add
or
sbb
in
movsl
sbb
daa
outsl
xchg
into
mov
aas
and
add
fstl
sti
pop
ljmp
sub
add
jb
loop
rorl
add
xchg
lock
lcall
sbb
insb
mov
stc
jmp
add
out
cmp
add
add
clc
dec
fs
aam
cltd
and
add
add
add
push
mov
add
jnp
add
fcom
int3
mov
sbb
xor
add
int
push
mov
outsl
mov
jns
mov
sbb
mov
add
and
add
sub
add
sbb
lods
push
int
xchg
sub
xor
lahf
xchg
jb
adc
add
add
fistpl
mov
mov
icebp
mov
add
sbb
adc
jge
adc
jge
inc
lahf
movsl
add
add
into
jg
in
outsb
push
xchg
inc
shr
ret
add
lods
cmpsb
add
push
sub
xchg
cmpsl
arpl
pop
xchg
and
enter
pslld
dec
cmp
clc
add
mov
je
leave
cmp
xchg
adc
rcl
jp
dec
pop
pop
lock
mov
test
add
adc
mov
xchg
addb
imul
cwtl
mov
add
adc
jg
sub
add
mov
jns
dec
lret
add
iret
add
inc
adc
add
cmp
or
out
test
add
test
add
dec
pop
fstp
leave
sarl
inc
sub
fadds
xchg
int3
sbb
pop
daa
add
add
jmp
add
stos
add
fisttpl
add
ret
add
jae
or
pop
pop
fcomp
xchg
sub
in
xor
sub
dec
jg
inc
dec
mov
je
outsl
pop
outsb
jne
out
jmp
add
neg
inc
rcrl
stc
lock
add
cmp
xlat
dec
into
xchg
loop
pushf
lret
xchg
out
add
mov
movsb
add
sbb
jbe
add
push
rcl
je
lds
out
test
add
adc
mov
mov
into
inc
jmp
movsl
add
in
or
add
mov
mov
or
add
out
fcompl
dec
rorb
mov
add
lea
movsb
add
rorb
xlat
cld
adc
add
test
out
mov
sbb
dec
push
lods
add
pusha
dec
sarl
mov
mov
bound
sbb
call
movsb
add
lds
inc
or
add
add
sbb
cmpsb
add
stos
add
scas
addb
outsb
mov
add
add
adc
sbb
adc
jp
call
xor
add
xchg
sbb
xchg
dec
and
add
and
mov
add
fisubl
out
in
push
add
xchg
cmp
xor
jae
push
cmpsl
inc
fildll
and
or
add
aaa
movsl
hlt
adc
mov
fsts
loopne
aaa
cmp
cmpsb
add
jecxz
mov
aam
push
lcall
add
mov
and
ljmp
add
pop
dec
stc
pop
loope
adc
mov
add
xor
mov
imul
data16
add
rcl
mov
xor
mov
mov
les
xchg
lret
stos
add
lret
dec
inc
nop
stc
jg
lret
arpl
cmpl
jne
or
add
mov
add
inc
test
xor
dec
or
add
lock
out
fwait
sub
add
cmp
add
bound
cld
mov
sti
lret
adc
add
pop
adc
add
sbb
cmpsl
lcall
nop
hlt
jp
call
or
sub
or
inc
dec
ljmp
ss
push
iret
add
mov
pop
popf
push
cmp
push
add
outsl
aas
ljmp
add
add
xchg
xor
inc
std
or
add
lds
movsb
add
sub
adc
jb
sahf
sub
add
stc
adc
rol
sbb
add
jne
int3
and
add
std
mov
mov
out
xchg
mov
xchg
jae
aas
shrb
enter
xor
rcrl
inc
add
jae
add
sub
add
add
pop
add
add
jge
rol
or
add
stos
rcrl
add
adc
sbb
call
add
scas
add
and
add
cltd
pop
sub
jmp
add
cltd
dec
mov
inc
xchg
xor
pop
test
add
mov
push
cmpsl
int
lods
add
loop
pop
or
js
arpl
arpl
out
or
clc
xchg
mov
ljmp
and
add
jne
mov
pop
sub
add
leave
fwait
stos
inc
cld
shll
pop
scas
add
or
add
adc
int3
xor
add
and
push
mov
mov
jge
lret
add
cltd
push
inc
outsl
fwait
push
and
subl
call
add
pop
push
add
push
sub
inc
mov
clc
cmc
mov
call
scas
add
repz
stc
in
out
nop
out
cld
inc
addb
lock
rcll
add
mov
sub
inc
inc
or
xchg
add
lods
add
pop
dec
and
inc
cmpsb
add
call
jnp
leave
pop
push
imul
mov
jbe
pop
data16
aaa
test
add
mov
popl
pop
iret
add
call
xlat
dec
mov
pop
push
pop
sub
add
mov
add
pop
aaa
mov
jge
xor
add
cmp
popf
fwait
pop
pop
sub
add
imul
add
mov
add
mov
adc
add
loope
mov
xchg
std
mov
push
add
jne
or
fsubrl
add
lahf
jnp
push
adc
stos
push
push
or
cltd
shr
add
repz
das
sub
add
pop
popa
out
or
cmp
mul
jb
rcl
cmp
or
add
scas
add
lods
pop
mov
add
aad
add
mov
jg
inc
cltd
mov
mov
mov
out
adc
push
add
inc
inc
jne
adc
push
pop
add
add
leave
sbb
decl
ss
or
dec
dec
aam
add
pop
call
cmp
btr
dec
mov
add
ljmp
fs
sub
ret
push
les
mov
lcall
shlb
add
or
add
mov
add
xchg
loopne
and
add
sbb
jg
icebp
ret
test
test
loope
add
sbb
or
add
bound
dec
inc
mov
jne
adc
mov
jae
xor
inc
or
add
mov
adc
add
inc
cmp
add
stos
add
xchg
rolb
cmp
loopne
test
add
add
popf
sbb
sbb
lret
xor
adc
mov
mov
mov
add
jne
mov
cmp
adc
cld
sbb
adc
lea
mov
mov
sub
add
loope
add
jg
iret
loope
test
add
inc
add
outsl
mov
mov
icebp
lods
add
xchg
mov
add
repnz
ljmp
and
mov
loope
mov
add
js
fwait
imul
add
rorl
sub
cmp
int3
xor
and
insl
aam
and
add
add
sbb
add
xor
add
cmp
or
lock
add
add
add
jns
add
mov
add
mov
in
add
sbb
cmp
sub
mov
or
add
sbb
add
xor
hlt
fwait
jle
das
popf
add
outsl
cmpsl
sbb
mov
or
add
push
push
jmp
push
cmp
add
fisubs
mov
rorl
out
test
or
add
jge
mov
ffreep
mov
iret
cmp
pop
adc
or
add
mov
add
jl
loope
jecxz
in
mov
loopne
rcrb
add
ret
int3
popf
std
insb
jo
fmulp
pop
maskmovq
cmp
out
in
inc
sub
jns
sbb
add
loop
fdivs
add
add
add
dec
push
add
xchg
jecxz
pop
mov
add
xor
add
inc
ja
shlb
lret
jle
insl
je
repnz
cmp
xor
add
fstl
loope
inc
jae
nop
insl
add
adc
cmp
xchg
lahf
aam
push
add
lea
inc
call
add
fildll
xchg
dec
enter
add
xchg
cmp
cmpsb
add
cmpsl
iret
nop
adc
add
int
push
scas
add
pop
pop
in
and
fs
add
sbb
aad
add
cmp
add
cmc
movsl
mov
mov
addr16
pop
add
sbb
jl
nop
ljmp
stos
dec
fcmovnb
lods
add
pop
test
add
je
and
add
cmp
fstpl
and
add
and
add
js
imul
mov
in
sbb
aaa
push
xchg
add
inc
test
xchg
add
add
add
jecxz
and
add
sub
add
xor
mov
xchg
add
das
dec
push
add
and
add
push
shrl
mov
fdivrl
fcomi
aam
lcall
shl
outsl
mov
in
addr16
fcomp
popf
adc
mov
add
pop
addr16
push
lods
out
cmpl
dec
ss
addb
or
sub
add
and
add
mov
push
test
addr16
jbe
fisubrl
jp
cmp
cmpsb
add
cmp
mov
stc
cmpsb
add
daa
mov
cmpsb
add
mov
mov
add
fs
mov
add
dec
gs
add
outsl
negb
scas
add
sti
ja
add
jp
jbe
push
mov
xor
pop
in
shl
test
or
add
add
mov
add
jne
dec
mov
ss
add
and
add
jp
ss
stc
adc
sbbl
addb
pop
fdivr
push
dec
or
add
sbb
incl
add
adc
ljmp
xor
fsubp
xor
and
inc
fldl
mov
mov
add
add
fistl
pop
in
push
lock
dec
aaa
add
mov
dec
cmp
jnp
jnp
pop
lahf
jne
add
pop
stos
sti
push
dec
xor
daa
push
jg
add
fcoms
inc
bnd
int3
jae
mov
add
add
add
add
xor
iret
arpl
inc
leave
in
add
lahf
cwtl
add
add
sarl
jo
mov
add
scas
aas
xchg
shl
or
imul
scas
xchg
xchg
int
or
mov
test
testb
pop
mov
add
hlt
and
add
xlat
push
fwait
js
xchg
fstps
sbb
les
mov
add
mov
dec
push
cltd
cmpsb
add
lds
aad
add
pop
sub
add
clc
add
add
dec
xchg
into
and
add
jge
ss
mov
filds
add
mov
xor
cld
scas
push
insb
outsl
hlt
loopne
dec
stos
add
insb
lahf
out
push
sub
scas
add
mov
sub
rcrb
xor
cmc
jno
add
cmpsb
add
addb
movsb
add
pop
mov
push
add
punpckldq
push
aam
in
sub
inc
cli
mov
imul
add
cmpsl
scas
add
cld
daa
mov
leave
outsl
mov
addb
mov
out
and
add
jne
fisttps
mov
add
mov
push
push
out
shrb
add
xor
xlat
js
add
add
add
and
add
fsubrs
sbb
jae
mov
add
adc
add
xchg
jno
add
lret
sub
add
add
mov
jge
push
add
lods
add
insb
loope
and
add
fcmovnu
sub
das
in
je
dec
rolb
add
jb
out
xchg
push
dec
inc
push
or
add
xlat
ret
out
jo
add
insl
add
add
sub
add
pop
sub
add
lret
pop
enter
aam
adc
inc
dec
test
add
cmp
add
dec
sub
add
add
pop
data16
cmc
or
add
add
jle
fs
shrb
outsb
fidivs
test
fsubrl
push
cmc
lds
add
test
add
add
inc
jno
cmp
ret
repz
addb
iret
les
cmpsb
add
sub
jne
ret
fdivrp
cld
sub
jmp
xchg
adc
add
mov
add
add
jmp
xchg
add
add
jbe
cmpsb
add
pushf
mov
add
push
test
cwtl
or
add
aam
mov
jp
push
push
icebp
sub
popa
ret
mov
add
lea
add
scas
add
scas
add
sbb
mov
add
push
inc
mov
mov
add
add
fcmovnb
push
call
mov
jmp
gs
imul
add
add
add
out
jmp
add
mov
add
sub
cmp
dec
cli
popf
lret
aas
mov
add
lea
pop
lret
add
cmp
test
data16
lods
add
int
and
mov
ficompl
xchg
movb
aaa
mov
add
mov
add
cmpsb
add
mov
push
push
xor
or
add
orl
aaa
addl
add
add
sahf
iret
xor
xchg
aaa
add
jmp
add
jmp
inc
aas
insb
in
in
insb
stc
mov
out
cmp
add
jae
stos
aaa
xor
xchg
call
pop
adc
cld
push
mov
cmp
sbb
jne
mov
dec
push
inc
cmpsl
movsl
nop
sti
ljmp
cli
add
insl
mov
rcll
cmp
movb
add
cli
mov
test
add
push
xor
cmp
add
popf
jne
ret
jle
xor
ffreep
inc
jo
adc
repz
aaa
rcrb
sbb
imul
jmp
adc
add
and
add
shlb
ret
add
add
cwtl
xor
out
rcl
mov
mov
add
pop
add
sub
add
xchg
pop
adc
add
mov
adc
shrl
pop
sbb
mov
add
adc
add
test
add
pushf
data16
add
scas
xchg
lock
lea
add
pop
sub
add
jge
and
add
add
add
add
add
add
imul
add
add
fldcw
subl
sahf
and
mov
push
leave
cwtl
cld
aas
sbb
add
and
add
mov
rcrl
jg
add
push
add
mov
add
add
mov
mov
jp
mov
add
add
pop
sti
jno
inc
psadbw
xchg
leave
mov
add
mulb
mov
push
mov
push
inc
push
add
xchg
add
aad
mov
jl
pushf
inc
adc
les
cmp
insl
stc
lcall
push
shlb
clc
in
mov
fisubs
idivl
xchg
push
das
scas
fmuls
stc
fnstenv
mov
add
dec
cmp
out
cltd
push
xor
add
inc
imul
xchg
add
pop
jg
xor
xchg
push
mov
add
xor
repnz
mov
mov
xor
mov
add
orl
add
outsl
sbb
push
lea
imul
mov
pop
mov
addb
int3
pop
cld
add
stos
add
and
jle
lods
dec
push
pop
test
js
call
or
shl
mov
add
and
add
mov
jnp
adc
xchg
hlt
ret
inc
mov
notb
pcmpgtb
jl
or
add
adc
adc
cmp
in
mov
add
pop
xchg
int3
stc
pop
ja
and
add
add
add
mov
sti
push
dec
fadd
pop
jg
mov
arpl
inc
jmp
xchg
cwtl
mov
cltd
cli
inc
dec
testl
lret
std
pop
push
add
sub
sub
add
add
lcall
shlb
scas
add
jbe
add
xchg
fdivrs
cltd
shl
jge
in
bound
add
mov
inc
add
addb
xor
popa
mov
push
pop
and
mov
mov
test
sub
add
and
add
jmp
sub
add
dec
add
add
outsl
jp
pop
adc
xor
insl
add
jmp
inc
scas
add
xchg
cmpsb
add
test
add
das
lds
adc
mov
clc
stos
add
test
cmp
add
inc
pop
adc
add
lods
and
add
add
add
ret
pop
jb
icebp
or
mov
push
addb
mov
add
ret
mov
fcomps
add
adc
fsubs
add
pop
inc
adc
mov
sub
add
mov
xchg
mov
cld
sbb
and
add
add
lahf
orl
lock
push
add
test
mov
pop
insb
aas
out
decb
pop
cwtl
ret
xor
add
jnp
rcrb
ficoml
enter
dec
mov
add
sub
add
les
mov
xor
sti
loopne
fsubrl
add
movsl
stc
xchg
add
loopne
inc
sub
add
push
jge
add
and
add
pop
setnp
push
inc
insl
loopne
add
inc
cmp
add
mov
mov
add
lds
or
icebp
mov
xchg
mov
dec
out
push
add
js
mov
nop
rcrb
add
push
lods
add
adc
add
into
and
add
cmpsl
push
and
pop
inc
xchg
arpl
add
fimull
add
push
add
mov
add
add
cmpsb
add
ds
xlat
stc
leave
add
or
add
cmpsl
in
cld
push
push
add
or
add
stc
jno
add
cltd
stos
pop
xor
std
loopne
adc
xor
mov
add
add
rolb
cmp
pop
jae
inc
xchg
cmc
test
add
out
add
flds
add
mov
in
mov
les
add
ret
imul
add
add
into
sub
add
js
je
add
cmp
add
cmp
add
add
insb
inc
inc
fwait
add
mov
add
aas
fs
xchg
dec
dec
adc
xor
aaa
fisubrs
out
add
mov
jmp
xorl
ficoms
and
add
in
out
aam
test
add
add
push
sbb
add
adc
mov
add
add
push
add
cli
hlt
inc
cli
lcall
mov
cmc
xor
mov
add
pop
ret
das
fistps
sub
clc
setp
pop
cmp
jns
add
test
push
dec
bound
shl
outsb
lea
lret
mov
jmp
and
adc
pop
jne
cmp
jno
add
nop
push
pop
repz
loopne
cmp
jo
cmp
or
and
add
jae
lret
ja
jb
xor
push
xor
adc
add
add
add
mov
add
jae
add
aad
add
test
xor
sbb
cwtl
pop
xchg
add
add
push
pop
in
fs
shr
scas
add
rcll
mov
add
arpl
jae
inc
arpl
jl
outsb
out
js
mov
inc
add
xchg
insb
mov
add
add
jl
aaa
cmp
dec
aad
add
lea
aad
jbe
les
add
sub
adc
add
add
iret
outsb
popa
lret
xchg
xchg
adc
int3
inc
sldt
add
add
jmp
dec
shll
std
addr16
dec
aas
fcmovu
dec
ljmp
sbb
fidivrs
jle
ret
mov
fidivrl
stos
addb
xchg
add
add
mov
loop
mov
out
add
lds
or
add
and
mov
daa
xchg
xchg
aad
xchg
cmp
insl
iret
add
add
dec
add
cli
fidivrl
sarl
jne
in
arpl
add
imul
lds
mov
jb
das
mov
jp
aaa
xchg
cmc
aad
hlt
fcmovu
inc
adc
add
mov
add
add
iret
jle
test
sub
add
imul
in
mov
mov
add
loop
xor
add
sarb
out
mov
mov
add
das
cli
add
dec
mov
jp
xchg
inc
and
fisubrl
add
aam
pop
sbb
stos
add
inc
mov
pop
sbb
add
add
sbb
repz
add
cltd
mov
fcomp
inc
pop
and
mov
mov
bound
add
notb
pop
gs
cmp
fcoml
push
xor
outsl
nop
mov
add
into
nop
std
mov
ficoms
add
cli
inc
js
rclb
imul
movsl
sbb
roll
int
inc
leave
jnp
std
mov
add
add
cld
mov
add
sub
add
cli
push
add
add
add
int
mov
add
out
sbb
add
sub
add
sti
fdivrs
fwait
pop
or
add
lods
add
outsl
fildl
mov
loope
add
push
pop
imulb
add
pop
in
add
push
or
addb
sub
add
lods
add
push
push
or
push
cltd
pop
fucomi
std
mov
add
add
xor
push
iret
imul
lahf
scas
sub
pop
adc
add
out
add
add
dec
pop
sub
popa
pop
bound
sub
add
mov
mov
sbb
out
push
add
bound
add
addl
loop
popf
dec
addr16
fs
mov
add
and
add
icebp
sbb
out
mov
aaa
test
pop
ljmp
scas
add
arpl
add
mov
add
inc
pop
scas
add
sarb
add
rcrl
add
sbb
loopne
ds
lock
cmp
mov
add
pop
das
cmp
add
stos
add
adc
add
ljmp
sbb
add
add
add
inc
pshufw
outsl
xor
insb
out
dec
lret
loope
xchg
add
fmuls
test
mov
mov
insb
stos
dec
mov
add
repnz
add
cmp
or
adc
sub
sahf
push
sbb
add
fdivrs
movsb
add
lret
call
lret
dec
add
or
jo
add
lret
cmpsb
add
les
pusha
mov
loop
leave
out
addb
lret
nop
fbstp
add
sbb
add
fsts
mov
add
bound
add
test
std
jecxz
leave
pop
adc
add
test
add
paddusw
push
mov
mov
and
add
addr16
lods
add
test
add
add
pushl
add
lahf
and
and
repnz
lods
add
leave
data16
mov
add
xor
inc
add
into
xor
cmp
add
popf
in
fsts
cmpsb
add
mov
lea
jo
add
call
add
push
pop
xchg
xchg
jnp
push
repz
insl
lret
adc
push
mov
mov
mov
add
add
test
add
je
add
add
leave
xchg
stos
xchg
in
jmp
sbb
add
dec
sub
jns
xchg
xchg
add
add
add
mov
in
addb
fmul
gs
fst
push
addb
pusha
pop
data16
fcoml
add
add
dec
push
test
add
pusha
nop
mov
add
add
rclb
sbb
mov
ja
mov
add
add
stc
jge
lds
add
add
add
push
dec
out
js
add
testb
add
push
cltd
shr
sub
pop
sub
add
add
int
push
push
roll
hlt
mov
into
sbb
add
fwait
aas
mov
cmp
out
cmp
out
and
ds
notb
cmp
rcl
iret
jne
pop
and
add
add
lret
xlat
fs
pop
xchg
fcompl
mov
loop
arpl
hlt
cli
outsb
dec
xchg
dec
std
mov
add
mov
or
add
insl
inc
pop
scas
add
in
add
stos
add
test
add
dec
pop
sub
add
xchg
xchg
jg
xlat
inc
inc
add
xchg
xchg
xlat
xor
fisttps
pop
ja
ficoms
mov
or
xchg
cmc
push
cltd
pop
fs
stc
xchg
fdivrl
adc
test
add
addr16
adc
jl
or
add
add
inc
mov
mov
dec
clc
mov
out
stc
cld
jo
dec
data16
imul
jl
pop
push
xchg
rcl
jp
das
mov
add
xchg
xor
addr16
fcoml
out
xchg
inc
jg
iret
test
pop
jle
mov
add
test
rorb
push
add
js
sub
add
xchg
xchg
nop
push
and
add
add
ret
lock
and
add
jg
add
add
mov
jno
mov
faddp
adc
loope
dec
je
add
jmp
ja
xchg
sbb
popa
mov
mov
add
popa
mov
sub
add
add
dec
in
adc
cmpsl
ja
add
xchg
add
dec
ss
add
arpl
mov
add
in
jnp
fdivrp
in
pop
lods
insl
pop
icebp
lret
add
sbb
in
add
add
add
cld
adc
add
mov
add
dec
pop
jl
out
sub
add
dec
hlt
push
insl
insb
dec
js
mov
add
add
out
cmp
add
data16
add
dec
mov
xchg
popa
sbb
add
xchg
or
add
add
das
xchg
sbb
imul
add
xchg
dec
fisubs
repz
mov
sub
add
ret
dec
sbb
adc
cmp
xor
add
std
nop
test
scas
adc
mov
mov
lret
add
push
pushf
jns
xlat
mov
add
leave
xor
add
bound
push
add
add
pop
dec
bound
enter
lret
addb
jns
jmp
cmp
mov
xchg
add
pop
push
xor
mov
add
or
daa
outsb
xchg
add
add
mov
add
adc
ret
add
push
add
testb
add
adc
adc
mov
add
mov
push
mov
aad
jno
push
cmp
stos
add
pushf
xchg
lret
xlat
icebp
sub
xchg
sbb
dec
push
je
sbb
fcmovnbe
mov
xor
popa
jmp
add
inc
shlb
les
in
and
mov
xrelease
add
test
ja
adc
imul
add
mov
dec
mov
push
mov
inc
test
add
stc
mov
add
add
cmpsl
lahf
cmc
lret
mov
add
add
notl
inc
xlat
push
jle
add
add
popfw
mov
add
pusha
mov
lea
ds
add
sbbl
sbb
add
sbb
mov
pop
insb
lds
add
mov
push
shlb
or
pop
mov
add
mov
or
add
add
sbb
pop
rcll
add
jl
sub
add
xchg
adc
dec
cld
out
adc
test
cmp
repz
add
mov
add
add
add
inc
imul
add
mov
imul
loopne
dec
aam
insl
scas
add
faddl
add
xchg
inc
inc
add
push
jne
hlt
fldt
call
add
xchg
mov
in
xor
lcall
outsl
dec
ffreep
push
out
or
add
pop
sub
add
pushf
lret
xor
test
add
repnz
nop
pop
incb
add
xchg
rcrb
lea
sbb
xlat
pop
idivb
add
xor
hlt
xlat
mov
roll
add
enter
adc
pop
mov
xchg
add
stc
cwtl
inc
sbb
mov
cmpsl
push
mov
add
xchg
push
pushl
add
mov
cld
loop
add
out
inc
xchg
addb
mov
mov
das
shlb
push
aam
sub
repnz
arpl
add
jno
add
cmpsl
shll
pop
pop
dec
xor
rorb
add
cmpsb
add
hlt
imul
sbb
add
jg
add
cli
xor
jnp
xchg
imull
add
pop
xchg
add
cld
adc
jb
xchg
fwait
cmc
out
fidivs
add
cli
xor
add
test
jp
jmp
add
jmp
add
in
sti
popf
mov
xor
add
dec
inc
and
add
dec
movsl
loop
xchg
add
pop
and
add
add
lsl
aas
or
add
add
cmpsb
add
or
add
movsb
add
popf
mov
ror
pop
test
push
mov
jns
icebp
and
add
jmp
inc
adc
iret
xchg
sbb
push
pop
data16
shrl
add
adc
jmp
add
imul
lcall
arpl
and
jno
mov
jno
xlat
pop
sti
mov
add
repnz
lock
push
xchg
push
cmp
dec
insl
xor
dec
or
add
add
popa
sub
adc
adc
mull
jns
icebp
ret
sbb
fwait
mov
add
sar
or
add
fisttpll
add
test
add
mov
push
clc
mov
add
fbstp
fcmove
daa
cmpsb
add
data16
add
lods
push
jae
adc
mov
inc
lods
add
js
add
je,pt
add
mov
cmp
push
fmull
iret
and
add
ss
mov
add
add
lahf
or
add
out
nop
xchg
xchg
and
sub
mov
cmpsl
imulb
loope
mov
cltd
add
pop
rorb
add
jnp
push
jb
and
add
and
adc
into
adc
pop
hlt
add
sti
push
add
jbe
sti
pop
cmp
out
pop
xchg
mov
mov
xchg
pusha
mov
les
lods
popf
xor
aas
or
int3
cmp
repnz
add
add
call
mov
sahf
addb
add
aaa
fstps
pusha
loop
add
dec
inc
cmpsb
add
repz
data16
in
cmp
jno
xor
mov
add
test
and
add
jb
xor
test
xor
jle
insl
mov
adc
dec
jle
dec
pop
aad
xchg
or
add
sbb
insb
xchg
fsubr
hlt
lret
shlb
enter
or
cld
cmpl
pop
adc
std
or
dec
and
add
sahf
mov
add
xchg
mov
pop
dec
popa
dec
xchg
dec
fstl
add
cmp
xchg
stc
inc
mov
pop
or
add
add
jge
add
ret
add
je
ret
dec
insb
push
rcr
repnz
shr
sub
and
add
pop
std
adc
lds
sahf
sar
mov
inc
mov
clc
push
adc
bound
xchg
rcr
xchg
imul
scas
aad
add
lret
adc
add
jae
int
comiss
add
and
cld
shlb
add
or
mov
cmp
dec
lahf
lahf
cmp
jecxz
mov
add
scas
jecxz
add
loope
xor
add
mull
add
dec
or
add
invlpg
add
cmp
sbb
cmc
flds
loop
push
movsl
shl
mov
add
add
sub
add
jnp
add
pop
leave
mov
rolb
xchg
test
dec
mov
shr
clc
outsl
arpl
add
call
out
jg
add
into
loop
mov
enter
cmp
jp
shlb
add
sbb
ss
mov
insb
push
jb
push
mov
add
mov
das
mov
jg
sub
add
cld
sbb
cli
xchg
add
mov
dec
repz
xchg
and
add
add
sbb
dec
mov
adc
add
or
add
mov
sub
add
data16
lret
xchg
aaa
bnd
loop
stc
dec
out
pusha
lods
roll
jle
add
mov
scas
add
pop
sbb
cmp
loopne
sahf
jae
mov
push
inc
fsubrl
aaa
push
and
iret
jno
inc
sub
add
xor
nop
in
add
gs
cmp
cmp
ret
xor
lds
xor
pusha
leave
push
hlt
addb
scas
add
outsb
xchg
add
mov
add
add
add
mov
call
push
sub
add
icebp
ret
add
add
sbb
add
icebp
adc
dec
repnz
clc
jg
sub
add
insb
addb
xor
mov
add
rcr
or
pop
xor
cwtl
insb
add
cmpxchg
add
push
add
out
jns
push
jmp
mov
test
add
addb
leave
mov
add
push
sub
add
or
pop
shrb
add
fldcw
dec
loopne
stos
add
ja
sbb
mov
lea
xchg
dec
sbb
cmpsb
add
push
mov
xor
mov
add
adc
add
xchg
xchg
call
jns
and
add
dec
mov
add
sti
push
xchg
mov
add
xchg
aam
and
add
sub
add
lahf
imul
add
and
shl
push
ret
sti
fstpt
push
jno
add
xchg
ss
add
fmuls
add
fcomp
iret
and
cmp
mov
into
jbe
sub
and
sub
add
sti
push
fsubr
test
or
leave
cmpl
add
outsl
repz
ljmp
lods
clc
adc
push
sbbl
inc
out
lret
mov
add
mov
add
insl
sub
add
sbb
add
inc
pushf
in
je
shll
add
stos
add
mov
jmp
adc
add
mov
mov
pop
lahf
aad
fistpl
add
aaa
inc
scas
add
mov
mov
lcall
dec
xchg
sub
add
lcall
pop
sahf
aaa
stos
add
jle
add
dec
add
daa
inc
ret
sbb
push
in
or
or
add
add
push
sub
add
fistpll
add
push
imul
add
nop
lahf
or
add
aam
push
clc
cltd
jle
push
lret
pop
lods
mulb
add
adc
add
add
add
add
jnp
inc
pop
test
lods
icebp
loope
add
and
add
jge
add
loopne
and
add
aas
sbb
add
add
add
sbb
cmpsb
add
mov
add
dec
movsb
add
inc
cwtl
movsl
loop
inc
sahf
scas
add
js
lahf
in
push
mov
add
loopne
push
xchg
arpl
cld
mov
mov
add
aas
paddsb
in
jne
negl
push
in
adc
inc
mov
mov
add
push
add
mov
add
xor
rclb
xchg
or
add
cmpsl
mov
push
sahf
std
mov
jmp
sbb
add
sub
aaa
fsubrs
dec
pop
fisubs
inc
popf
popf
xchg
pop
push
fnstcw
cwtl
and
add
fwait
cmpsb
add
jbe
add
scas
add
or
add
pop
add
cltd
scas
add
lock
mov
add
lcall
add
add
add
insb
repz
and
add
push
out
or
add
add
xor
rorl
add
add
jg
hlt
and
mov
xchg
add
ret
stos
and
add
fwait
test
add
leave
xlat
flds
std
push
sbb
scas
add
les
add
ret
hlt
dec
hlt
mov
add
mov
shlb
xor
xchg
lret
mov
add
push
bnd
or
add
add
add
add
push
xchg
add
cltd
or
imul
fs
ljmp
jae
pop
pop
lds
push
xor
inc
rcl
js
xchg
xchg
fnstcw
addb
adc
sbb
adc
add
pop
or
mov
mov
mov
add
xchg
bound
add
lods
add
push
lea
mov
or
mov
add
add
lahf
inc
mov
enter
pushl
inc
or
add
cmp
cwtl
push
mov
jge
mov
add
cwtl
jbe
cltd
stos
lods
mov
adc
xchg
add
add
ljmp
mov
inc
sub
add
xor
xchg
shlb
add
jae
add
add
icebp
dec
jle
push
push
cmp
adc
sbb
in
addl
xchg
push
add
idivl
mov
add
arpl
adc
add
and
add
cmp
outsl
popf
sahf
inc
sub
enter
daa
mov
add
fstpt
dec
out
inc
xchg
add
out
sub
fdivl
movsl
lods
add
sub
add
add
pop
adc
add
xor
jnp
add
jle
iret
and
add
cld
in
push
data16
inc
in
jge
int
loopne
add
mov
int3
popa
iret
leave
mov
int3
bound
lods
sbb
mov
jns
sbb
lcall
push
lahf
lds
lret
rcrl
in
push
pusha
in
ds
push
ljmp
inc
push
sahf
or
add
inc
sti
mulb
add
add
cld
in
add
aad
je
add
stos
add
jne
jl
shlb
mov
ret
sub
mov
aam
mov
and
add
push
add
and
dec
inc
sub
add
mov
out
stos
pusha
pop
xchg
mov
add
add
sub
add
jnp
int3
or
and
add
aaa
les
sub
add
mov
lods
add
jbe
sub
dec
push
add
xor
lret
add
cmp
add
lea
scas
mov
int3
sarl
lret
mov
add
push
push
add
ja
add
movsl
jnp
jne
bts
repnz
cmc
test
add
shll
cmp
ljmp
icebp
mov
movzwl
add
add
aad
add
add
pop
addb
cwtl
inc
in
cmp
je
add
xchg
clc
loop
xchg
sub
add
push
add
xchg
cmp
or
pushf
pop
jb
add
cmp
mov
mov
cltd
xor
cld
in
ss
lret
test
mov
outsl
push
add
xor
pop
js
rorl
or
add
in
sub
add
lds
add
and
mov
sbb
dec
in
cmpsl
or
add
lret
arpl
leave
cmpsb
add
incb
adc
ret
push
and
add
mov
jns
and
add
xchg
add
xchg
pop
leave
mov
xor
jns
lea
sub
add
add
sub
add
pop
js
lock
iret
and
sbb
call
mov
xchg
mov
ss
cmp
xlat
adc
sahf
mov
aaa
dec
cmp
stos
daa
mov
add
xchg
dec
inc
and
xchg
mov
sti
push
mov
cltd
mulb
loope
in
push
mov
inc
pushf
ljmp
jnp
pslld
xlat
out
lret
mov
add
aam
into
pusha
dec
mov
lods
add
sub
add
add
mov
add
lock
inc
dec
in
mov
repnz
packssdw
mov
das
sub
dec
jle
xor
ss
int3
sub
add
add
sti
mov
add
movsbl
push
movsl
push
pop
pop
stos
mulb
lret
push
cmp
cmp
sbb
in
jl
push
daa
ss
add
add
inc
jo
call
testb
jl
add
sbb
sbb
out
popf
xor
cli
enter
in
fisttps
add
jmp
jns
add
sub
lds
jle
sub
jbe
and
add
add
add
sbb
jg
add
mov
mov
add
fwait
repz
add
lds
add
js
push
and
add
add
xor
in
lret
xchg
popf
hlt
or
add
add
or
add
push
add
ds
outsl
in
fwait
and
mov
push
scas
push
jg
mov
add
lret
mov
add
enter
int
dec
stc
sbb
fwait
clc
cmp
repnz
mov
out
xchg
adc
cmp
xor
push
outsl
dec
out
or
add
dec
hlt
mov
cmp
int3
test
add
movsb
add
or
add
aam
or
add
popa
inc
jecxz
std
pushf
fsubs
mov
dec
push
mov
add
cwtl
inc
push
test
mov
aas
imul
xchg
stc
jo
pop
call
cmp
add
jp
repnz
imul
sti
mov
scas
add
push
aad
mov
nop
xor
add
add
add
insb
mov
adc
mov
insl
or
adc
popa
cmpsl
cmpsl
xchg
inc
iret
adc
call
add
fimull
add
aas
sub
scas
dec
call
mov
inc
ds
sbb
push
cmp
std
insb
test
insb
addb
add
push
outsb
enter
add
imul
sbb
xor
lods
xor
and
jae
add
pop
or
mov
add
outsb
sbb
lock
and
sti
pop
pushf
outsl
mov
fists
test
pop
lret
int
add
out
xchg
adcl
xchg
out
and
int
divw
and
add
dec
jnp
add
jecxz
lods
push
add
dec
push
dec
jl
adc
push
adc
popa
insl
mov
fdivr
sub
add
adc
fldl
leave
xor
lret
pop
loope
and
add
add
das
mov
cld
xchg
add
lret
mov
int3
xorps
sahf
in
jge
add
mov
roll
add
add
add
add
add
stos
loope
aad
neg
push
mov
add
inc
shrb
dec
scas
add
test
add
notb
imul
add
push
mov
add
and
add
fcoml
sbb
push
push
add
insb
pop
sub
add
inc
jnp
or
add
add
mov
add
pop
mov
mov
push
and
add
add
sbb
mov
add
push
or
add
add
mov
xchg
fbstp
add
test
add
sub
add
roll
add
shrl
aaa
pop
fsubr
icebp
ds
adc
cmp
add
xor
sbb
add
enter
mov
add
push
aaa
or
add
mov
in
dec
dec
or
add
aad
push
add
js
fldcw
xor
cmc
mov
adc
scas
add
jge
sbb
add
mov
dec
mov
int3
adc
add
rorb
cmpsb
add
lods
in
sub
out
out
mov
lcall
in
clc
lock
add
scas
sbb
xor
add
adc
add
out
add
mov
popf
les
daa
xchg
mov
add
aaa
pop
enter
sbb
jmp
fisttpll
fwait
xor
add
add
movl
adc
pop
dec
daa
add
mov
sbb
push
mov
sub
push
popa
stc
sar
mov
pop
jae
add
fsubrs
add
cmp
sub
mov
mov
mov
lods
popf
and
adc
sub
add
stc
mov
add
mov
int3
and
pushl
dec
inc
xor
jne
cmp
out
in
jmp
xor
lahf
jns
addb
cltd
add
popf
leave
insl
cmp
add
inc
lds
mov
jecxz
mov
sqrtps
add
mov
jo
fdivl
frstor
add
std
jecxz
dec
mov
push
jb
jne
or
dec
aaa
in
cmp
jecxz
das
insl
mov
add
and
add
adc
add
or
pop
or
adc
sahf
sarb
dec
stc
lock
int3
jo
sub
add
inc
cld
or
push
add
fmuls
add
add
add
std
push
add
notb
lcall
or
dec
dec
cmc
arpl
dec
ljmp
pop
push
jle
cmpsl
and
add
mov
add
test
add
add
popa
pop
fcomps
leave
mov
xor
mov
add
mov
sub
add
mov
add
add
sarl
daa
std
rcr
inc
lahf
adc
lea
ror
sub
add
add
xchg
add
enter
xor
add
ljmp
clc
fwait
pop
pop
imul
int3
shl
fdivr
in
into
nop
test
add
inc
jo
cltd
or
les
push
add
mov
inc
xor
fsubrp
inc
bound
mov
popa
pop
inc
mov
outsb
into
repnz
sbb
add
add
add
push
in
mov
add
mov
or
add
push
pop
repz
mov
push
mov
add
adc
sahf
ficompl
pop
push
xchg
add
mov
xor
inc
in
inc
cmp
outsb
cmp
loop
add
cwtl
sub
fwait
jns
test
add
inc
lret
enter
add
push
ss
js
inc
cltd
ret
addr16
jnp
cmp
add
int3
lods
add
ficomps
nop
daa
repnz
fstpl
add
mov
mov
add
sub
add
shlb
daa
xor
fnstenv
mov
add
dec
sub
add
orl
call
rcll
pop
push
add
fisubl
aad
pop
dec
popf
addb
sbb
add
imul
arpl
addl
js
push
sbb
insb
stc
add
jl
sbb
and
xchg
mov
je
shl
push
mov
add
adc
cmpsl
shll
popf
dec
mov
add
imul
hlt
mov
add
add
push
xor
adc
or
add
arpl
add
and
add
inc
dec
mov
insl
dec
lods
add
mov
jb
insl
out
pop
add
jg
inc
sbb
outsb
dec
xchg
out
sbb
cmp
cmp
test
add
add
insl
push
iret
jecxz
fisttps
add
das
int
mov
xor
add
hlt
stos
add
leave
in
dec
fnstcw
aas
jae
pushl
add
sub
add
lcall
inc
loop
lds
add
add
jnp
cmp
xor
and
add
sbb
add
pushf
or
add
cwtl
pop
call
xchg
test
add
out
push
inc
les
mov
nop
mov
add
hlt
push
pop
cltd
cltd
adc
add
mov
mov
popf
xlat
add
add
add
in
add
shll
add
pop
mov
add
andl
add
or
fbstp
lock
mov
rcrb
cmpsb
add
sti
sti
fs
sub
push
add
add
aaa
loop
iret
mov
and
add
enter
scas
push
fstpt
push
bound
arpl
dec
das
dec
dec
sbb
mov
push
and
jl
jl
mov
pusha
xor
pop
add
dec
fisubrs
leave
repz
add
stos
add
das
cmp
lret
inc
out
mov
sub
add
in
mov
cmp
lret
roll
add
cmp
inc
jns
push
cmp
push
movb
mov
xchg
adc
jecxz
iret
and
ds
fsubl
cmpsb
add
lahf
inc
mov
pop
subl
cmpsb
add
out
add
movsl
das
imul
adc
add
jns
cmp
or
pop
jbe
add
mov
add
jbe
sbb
xor
loop
adc
push
mov
pop
lahf
add
add
fsubp
jnp
js
add
add
ja
mov
mov
addb
jae
jg
ds
add
in
stos
add
jp
xchg
adc
mov
aaa
adcl
fsubrp
sarb
push
mov
add
xor
dec
jb
add
out
add
js
and
add
inc
in
jge
aam
mov
faddl
cmp
mov
adc
xor
shr
adc
push
sti
cmp
sbb
and
repz
add
xchg
push
repnz
xchg
inc
mov
mov
shll
add
test
add
das
hlt
sbb
inc
stos
aas
or
push
jne
add
repnz
jg
mov
add
add
add
fcmovne
repz
dec
stos
lock
add
inc
push
adc
xchg
scas
and
add
cli
orps
aaa
mov
lds
mov
ja
jecxz
add
loope
push
mov
pop
jbe
add
sbb
jecxz
xchg
jae
add
jg
inc
movsl
inc
jo
repnz
push
cmp
daa
cmp
lock
add
pusha
and
add
jecxz
adc
sub
loop
repz
pop
xchg
and
jmp
or
add
mov
add
out
pop
push
hlt
jmp
fdivr
sub
add
sarb
and
xchg
divb
mov
cmpsl
mov
add
fistl
rclb
add
mov
add
xchg
xor
pop
pop
dec
mov
add
mov
add
inc
sub
jecxz
loopne
xor
mov
add
add
sub
add
insl
mov
add
fwait
jno
ljmp
add
rorb
push
add
add
mov
add
fdivl
add
add
xorl
add
and
add
and
je
mov
dec
mov
jo
add
pop
jecxz
setle
and
sbb
aas
mov
push
jno
call
add
rorl
add
call
add
enter
scas
add
ljmp
aaa
movsl
sbb
add
adc
scas
add
out
push
test
sti
sbb
stc
imul
cmp
cld
add
add
pop
mov
add
addb
xchg
fwait
addb
scas
add
push
and
add
or
add
add
pusha
pop
je
fwait
cmpsb
add
and
add
inc
mov
add
adc
or
sbb
push
or
add
in
pop
arpl
rolb
pop
cli
stos
add
add
add
adc
add
and
add
in
sbb
mov
add
jae
cmp
add
inc
mov
inc
mov
in
imul
pushf
mov
out
pop
cmpsb
add
movsl
mov
add
add
cwtl
mov
loope
cmpl
add
xor
mov
or
dec
loop
push
mov
add
jl
adc
sarb
xor
dec
in
cmp
jle
mov
cmpsb
add
lret
add
pushf
push
add
add
mov
pushf
mov
xor
add
lret
mov
add
lret
push
pop
pop
lds
jne
out
mov
add
add
shl
or
add
add
jp
mov
add
add
sbb
xchg
cmpsl
inc
inc
fs
hlt
pop
fcoml
xchg
xor
mov
add
sahf
jp
cltd
test
in
int
outsl
jg
or
add
cmpsl
adc
xchg
dec
jmp
add
inc
data16
test
dec
push
dec
test
stc
jns
icebp
mov
add
or
add
push
dec
nop
dec
xor
out
push
push
outsl
jo
andl
add
and
sub
repz
insl
lahf
mov
add
cmp
int3
mov
add
add
add
add
inc
dec
mov
add
push
xor
or
add
dec
and
xor
psubsw
jl
add
enter
pusha
insb
push
daa
out
enter
and
cmp
mul
cmp
lahf
mov
jge
sbb
inc
mov
add
rclb
sbb
add
push
add
adc
psrlw
sti
jb
add
xor
mov
add
ret
addr16
cli
fidivrl
adc
xor
pop
fdivs
jns
add
add
add
rorl
push
int
lods
add
ficoms
and
mov
fnstsw
push
rcll
pop
add
add
add
push
lsl
jno
mov
add
decb
sahf
xor
cmc
lcall
ljmp
jb
jl
lock
add
sbb
imul
xlat
xchg
inc
ljmp
cmp
and
inc
cmp
cmp
add
lds
add
push
outsl
in
iret
push
xchg
imul
lock
shrb
test
add
and
outsl
jno
testl
mov
sahf
sbb
icebp
adc
mov
add
pusha
sub
cmpsl
int3
fistps
jecxz
sahf
jg
mov
mov
sbb
lcall
out
xchg
popa
test
xchg
mov
inc
mov
gs
xor
test
add
xchg
mov
shll
inc
movsl
popf
jno
push
pop
mov
add
stos
add
loopne
adc
add
jecxz
in
cmp
xor
icebp
sub
add
xor
insb
pop
jnp
fs
mov
add
push
stc
popf
data16
cmp
lods
out
lods
add
xchg
add
lock
dec
stc
mov
add
jmp
lods
fisttps
insb
fnstsw
lods
dec
aad
fwait
test
inc
jge
adc
jge
pop
add
add
mov
add
push
add
pusha
pop
lret
xchg
add
xchg
adc
inc
sarl
xor
into
std
sub
add
mov
add
add
mov
and
add
lds
inc
test
dec
or
lock
add
divb
mov
adc
pop
inc
xor
add
mov
add
add
add
call
mov
add
mov
add
mov
data16
movlps
and
add
inc
mov
lea
out
out
add
add
inc
out
dec
sub
add
stos
jne
in
lcall
push
mov
add
xchg
mov
lahf
mov
add
lock
add
xchg
mov
add
mov
add
mov
add
call
add
das
push
and
daa
stos
add
and
add
jmp
adc
add
xor
xor
jae
xchg
stos
add
mov
cmp
sti
stos
fldcw
js
pop
mov
inc
or
add
cli
push
lods
add
mov
cmp
add
dec
push
roll
add
cmc
cmp
sbb
lcall
pushf
imull
add
inc
jmp
push
add
imul
cmp
dec
movsl
cmp
std
push
out
mov
push
das
movl
sub
add
add
jp
sbb
pusha
push
add
dec
mov
add
add
lock
add
mov
add
pusha
cld
push
add
jp
out
js
stc
test
add
hlt
dec
jb
add
leave
rorb
call
ss
mov
fcomip
mov
mov
fmulp
scas
icebp
xchg
mov
add
xchg
xor
add
daa
xor
pop
insl
out
jmp
insl
cltd
adc
jne
int
sub
cmp
js
and
add
pop
sbb
mov
add
sbb
add
xor
jecxz
add
cmp
cwtl
mov
add
jmp
daa
fcomp
nop
pop
ljmp
addb
pop
pop
mov
loope
add
jg
rorb
mov
scas
add
call
add
add
add
pusha
mov
add
sti
adc
cmp
sub
ficomps
or
adc
fstpt
jl
pop
std
jge
test
in
in
sarl
loopne
aad
add
add
scas
dec
pop
inc
pop
ss
mov
add
xchg
lds
test
add
mull
mov
add
inc
push
inc
adc
add
add
push
sub
add
add
mov
fs
add
gs
add
add
in
inc
psllq
dec
xor
add
dec
das
das
dec
cmp
sub
add
bnd
add
add
out
jmp
aas
cmp
sub
or
add
repz
push
sub
mov
add
std
and
add
add
mov
push
mov
add
mov
shrl
add
sub
into
nop
stos
jo
add
cmp
inc
inc
out
dec
daa
jbe
jae
add
in
mov
or
add
jbe
jle
inc
test
add
jle
add
ficoml
fmulp
aaa
insb
inc
jnp
jno
add
add
add
mov
add
nop
adc
shrb
add
xchg
mov
scas
leave
into
jmp
jg
add
mov
add
mov
add
js
mov
jge
xor
cmp
sti
xchg
pop
jmp
cmp
add
mov
sbbl
xchg
hlt
lahf
push
cwtl
iret
sbb
add
cmp
sub
fwait
loop
pop
repnz
add
roll
add
lods
add
push
push
add
jmp
mov
fadd
sbb
fistpl
rorb
add
setno
pop
pop
bound
add
push
js
cmp
sub
stos
add
daa
dec
fucomip
sbb
mov
add
mov
mov
pop
push
add
jmp
xor
or
add
into
add
add
add
std
daa
pop
jle
scas
add
mov
add
lods
add
ss
sub
add
and
add
add
fs
adc
leave
xor
daa
push
add
dec
and
mov
lock
add
and
inc
pop
movups
add
add
xor
add
mov
add
rcl
add
loope
adc
pop
jne
enter
xchg
push
inc
ljmp
cmpsb
add
xor
xor
xchg
sti
mov
fists
ss
push
jbe
pop
rclb
adc
add
add
mov
mov
mov
add
sub
add
roll
aaa
jb
cmpsb
add
inc
mov
fisubl
mov
out
rclb
sub
add
add
xlat
adc
add
ja
in
ficoml
das
xchg
int
movsb
add
mov
push
mov
rcrl
mov
sub
gs
mov
or
popa
cmp
mov
imul
mov
and
add
inc
sbb
cmp
incl
add
dec
movsl
aad
add
adc
push
addb
mov
das
mov
jmp
pop
jnp
add
sub
or
add
movntps
xor
pop
push
jbe
and
das
inc
mov
dec
push
add
add
or
push
mov
add
loop
jg
insb
adc
cmp
add
mov
adc
add
sbb
add
lcall
insl
xor
bound
int3
push
jle
add
scas
add
push
jle
jno
sbb
pop
data16
add
add
add
fsincos
sub
add
ds
add
cmp
in
jl
add
push
mov
add
add
add
add
mov
or
add
sahf
push
fidivs
fs
add
mov
xlat
lret
push
loope
leave
pop
jnp
cmp
pop
dec
and
dec
pop
and
add
push
sahf
or
add
add
scas
add
stc
in
sbb
pop
mov
add
mov
out
das
pop
and
ret
movsl
test
xor
stos
add
or
pusha
push
mov
scas
add
push
pop
jae
insb
in
syscall
mov
add
rcrl
lods
push
dec
mov
add
pop
rcrb
fs
inc
jnp
fistl
mov
fcomps
cmp
add
dec
mov
add
jg
fdivl
pop
lock
jmp
push
pop
mov
inc
xor
pop
cltd
xor
dec
sahf
fadds
add
xor
add
popf
mov
mov
cmp
aad
sbb
add
mov
add
cmp
add
push
jo
pop
shll
inc
out
push
pop
xchg
jg
add
mul
mov
loopne
jmp
add
orps
pusha
js
hlt
cwtl
cmp
add
popa
xchg
negl
jmp
out
mov
add
int3
xor
add
cmp
lods
add
clc
or
add
hlt
sahf
repz
lahf
pop
imul
xor
fs
add
jb
inc
mov
jae
rcrb
push
jecxz
stos
addb
push
or
jnp
ja
and
add
stc
fcmovnbe
bound
stos
add
insb
or
inc
and
xor
mov
add
cmp
add
inc
cmpsb
add
cmp
cltd
fisttpl
stos
add
xor
nop
out
loope
mov
add
lahf
xchg
add
repz
popf
test
add
ljmp
push
outsl
cmc
jbe
dec
jg
jbe
aas
mov
or
add
fstl
ljmp
jge
js
shrb
add
add
xchg
add
dec
fldt
loop
imul
daa
xor
enter
add
mov
jle
dec
xchg
sub
repnz
loopne
sub
add
xchg
ret
aam
add
and
add
data16
jmp
cmp
outsl
adc
cmc
das
sub
cli
mov
fstpt
outsb
call
mov
aas
mov
dec
xchg
subl
add
xor
mov
push
cld
mov
add
mov
fiadds
cmp
popa
mov
and
add
hlt
sbb
xchg
jnp
ret
push
cli
xor
add
mov
jno
cmp
adc
out
xchg
and
iret
pop
out
add
movsb
add
inc
add
push
push
addr16
cmpsl
into
adc
add
pop
mov
add
rcll
enter
adc
insl
das
xchg
addr16
jp
add
inc
out
rclb
add
mov
and
add
dec
sub
add
out
out
fisttpl
add
repnz
repz
mov
jb
stc
aaa
scas
add
in
loopne
mov
fs
scas
scas
cmp
notb
out
add
xchg
push
pop
nop
out
fsts
push
add
lds
mov
add
push
sti
lret
adc
aam
int
or
inc
popf
out
lods
add
fadds
add
xor
push
mov
popa
adc
add
enter
xor
add
dec
daa
adc
add
mov
sbb
enter
add
cmp
lds
sub
add
stc
and
movsb
add
cli
lods
mov
loopne
test
add
mov
pop
in
jg
cmpsb
add
lods
adc
jl
dec
adc
add
addb
xchg
js
push
mov
add
sbb
and
cld
add
add
ret
add
daa
mov
outsb
mov
add
add
add
add
mov
push
sbb
pop
pop
xchg
mov
sbb
jl
jmp
sbb
or
adc
mov
push
add
sbb
out
popf
pop
cld
dec
int3
mov
dec
mov
add
cli
cmc
adc
mov
imul
add
ret
sti
sbb
add
dec
mov
push
add
add
leave
fs
add
cmpsb
add
insb
sub
int3
dec
sub
out
scas
add
mov
stos
add
cltd
imul
jp
ljmp
aaa
mov
add
adc
inc
iret
or
dec
lret
imul
iret
push
divl
ret
add
dec
mov
xor
add
add
inc
movsb
add
clc
cmp
lret
repnz
jbe
call
loope
sbb
adc
mov
add
cmp
lods
cmp
add
sbb
xchg
cmp
cmp
pop
pop
jbe
insl
push
ret
add
lods
add
sub
add
les
add
add
or
inc
jecxz
xchg
mov
insl
les
lcall
jge
hlt
jb
add
jbe
repnz
fildl
not
xor
into
lods
ljmp
add
add
inc
mov
add
xchg
mov
dec
roll
inc
mulb
icebp
mov
addb
cmc
popf
xor
mov
nop
inc
sahf
xor
je
out
inc
mov
xor
inc
mov
add
cmp
fildll
add
jp
je
aaa
dec
lea
jnp
add
add
mov
gs
ret
add
add
add
lea
xchg
add
add
ss
sub
adc
addb
jle
ficomps
shlb
jae
mov
inc
xchg
lods
add
cmpsb
add
fwait
lret
pop
pop
mov
dec
cwtl
lds
das
insb
push
push
mov
ljmp
lds
mov
add
stos
add
clc
xor
pop
pop
sub
add
push
push
add
inc
cmpsl
movsb
add
fbld
adc
adc
and
add
mov
inc
xlat
bswap
pop
adcl
push
jecxz
adc
inc
or
ljmp
pushf
lcall
push
add
insl
fildl
mov
add
pop
jle
add
ds
vpshufhw
add
xchg
sub
add
add
movsl
cmc
repz
fisubs
iret
cltd
sbb
dec
lahf
aaa
psrld
push
jg
add
loop
xchg
jo
mov
aam
add
fsts
mov
out
push
or
mov
cmp
inc
clc
testl
add
add
in
loope
or
insb
jl
testl
add
sbb
rolb
inc
sub
xchg
add
jns
out
movsb
add
ficompl
xor
in
add
lods
add
mov
push
or
imul
add
add
rcr
push
sbb
adc
test
add
test
mov
mov
shl
cmp
cmp
test
add
out
add
xlat
dec
sbb
pop
push
push
add
or
add
add
jge
movl
gs
xor
mov
sbb
out
lock
aaa
push
addr16
inc
daa
test
add
add
fucomip
add
add
mov
add
add
in
stos
add
mov
or
add
add
clc
mov
cmp
jns
popa
lcall
mov
mov
inc
mov
roll
xor
loopne
xor
cmp
idivl
test
ror
cld
shr
inc
enter
loopne
push
add
loopne
shrl
sbb
sbb
rorl
add
lods
lods
add
pop
xlat
ds
outsb
fldt
fcomps
or
add
add
imul
cld
jo
add
add
stc
or
add
cltd
push
add
mov
adc
popf
mov
add
add
add
push
outsb
jb
add
in
and
addb
insb
or
add
jmp
mov
push
add
xor
push
add
les
xchg
das
popa
mov
add
mov
test
add
in
add
addr16
add
push
mov
adc
add
push
lock
add
xor
test
add
push
jge
cld
aaa
xchg
vfrczps
add
add
mov
cmp
cltd
mov
add
push
enter
leave
iret
in
jecxz
mov
xchg
lds
test
lret
and
mov
out
fwait
mov
mov
add
test
enter
xor
xchg
xor
dec
xor
push
mov
xchg
std
pop
mov
add
add
mov
push
in
mov
add
add
shrl
adc
xchg
aaa
hlt
cmp
aad
subl
add
add
lret
lcall
add
sbb
shld
cmp
sahf
lods
add
or
add
stos
add
mov
cmp
xchg
mov
sbb
cwtl
shld
jecxz
add
add
pop
add
clc
sbb
inc
clc
adc
rcrb
push
mov
add
int3
popf
jbe
js
fdivl
stos
push
lcall
ret
adc
clc
cmove
add
adc
imul
fimuls
xchg
cwtl
sbb
or
xchg
pop
nop
xchg
mov
mov
add
add
aas
lods
push
add
push
clc
in
jnp
aas
mov
push
jno
mov
mov
add
sbb
flds
mov
mov
sbb
dec
jge
lea
into
xor
inc
pop
add
lcall
jge
notb
xchg
cmc
add
idiv
adc
add
in
inc
fwait
aad
pop
ret
pop
jecxz
xor
mov
loope
test
pop
js
dec
jp
xor
add
sarb
sub
add
add
and
std
mov
mov
jle
xchg
add
mov
add
mov
add
loop
mov
mov
add
mov
add
inc
mov
inc
mov
add
add
add
fisubs
add
adc
outsb
int
shlb
dec
jbe
xchg
cmpsl
push
inc
pop
out
sbb
sub
insb
mov
mov
pop
mov
arpl
jo
addr16
add
add
xchg
cmp
mov
add
je
add
or
cmp
inc
fcoms
call
add
pop
jb
sub
add
add
dec
sub
push
sbb
std
and
les
sub
push
stc
lods
add
fldenv
mov
add
int3
addb
cmp
mov
add
mov
movsl
adc
lahf
popa
loope
add
add
icebp
js
jp
xchg
and
add
mov
jl
je
not
and
repz
jbe
pop
jo
jg
in
lret
add
ret
call
add
testb
lret
add
xor
stc
icebp
xor
push
jle
lods
lahf
add
add
add
ljmp
or
dec
and
adc
add
lds
cmp
xor
adc
xor
add
sbb
aad
add
mov
add
or
add
int3
jmp
repz
ljmp
pop
or
add
add
pop
fsubrs
mov
mov
mov
fld
hlt
data16
aam
andl
enter
add
add
dec
repnz
add
add
add
adc
ret
sub
inc
sbb
adc
add
inc
push
xchg
in
push
int3
fstpl
xor
inc
xchg
jmp
sbb
imul
add
aas
cmpsb
add
and
add
add
gs
add
sbb
popa
fisubs
incl
inc
fwait
push
imul
fcom
jbe
add
mov
push
mov
adc
push
stos
add
mov
add
add
mov
push
push
add
adc
sbb
icebp
push
adc
or
add
add
adc
hlt
mov
pop
mov
add
cmc
sub
add
outsl
and
add
xchg
jg
cmpsb
add
je
or
mov
add
rcrb
loope
dec
addb
mov
push
or
add
stc
pop
out
cmp
add
pop
mov
sub
stos
add
lds
sbb
pop
xlat
imul
jecxz
pop
stos
add
sub
add
test
add
fsubl
sub
add
xchg
lahf
xchg
shrb
repnz
lcall
lahf
pop
sbb
inc
mov
loop
jo
push
ss
add
and
add
add
lcall
data16
mov
jp
add
iret
push
lret
add
add
cmpsl
jp
mov
xor
xchg
cwtl
xchg
mov
add
inc
cmc
bound
push
not
jbe
hlt
or
add
add
push
mov
add
xchg
sbb
decb
add
aaa
push
mov
cmpsl
inc
rol
pop
jle
inc
mov
js
outsl
pop
cmpsl
pop
fisubrs
aad
clc
repnz
aas
jle
adc
rclb
inc
jno
add
in
scas
cmp
scas
add
les
add
sti
sbb
or
xchg
mov
dec
ds
jbe
pop
imul
xor
adc
je
xor
mov
sub
jae
stc
in
mov
addr16
add
gs
xor
add
cmp
aaa
sbb
xchg
nop
jo
add
sahf
inc
jl
pop
mov
add
sbb
das
and
add
add
out
outsb
mov
add
add
fucom
push
mov
and
add
add
shrl
adc
int3
std
pop
jmp
int
jge
mov
add
clc
repnz
add
adc
enter
add
push
movsb
add
sbb
jbe
xor
add
mov
add
ds
inc
lods
push
add
je
pop
test
add
mov
pop
sbb
inc
inc
xor
xchg
add
jle
jle
cmp
imul
nop
xchg
push
or
sbb
and
add
add
loop
mov
sub
add
rorl
std
fucom
mov
test
add
add
ja
imul
add
add
xor
xlat
cmpsb
add
cmp
mov
lock
add
pop
mov
jmp
push
js
pop
shll
mov
xor
add
mov
adc
add
push
mov
insl
mov
add
add
push
fsubl
xor
sbb
add
rclb
dec
pop
mov
add
sti
out
inc
inc
sbb
iret
data16
hlt
sub
add
mov
enter
in
jne
pop
ss
or
add
popf
mov
xchg
mov
add
add
cmpsb
add
roll
and
add
jnp
mov
xlat
mov
add
pop
imul
