add
add
and
addb
test
add
or
pop
adc
addb
or
add
and
adc
add
add
and
add
add
add
adc
add
add
add
inc
or
add
test
push
add
add
add
inc
or
add
test
or
adc
inc
addb
or
add
add
add
addb
or
or
add
add
and
add
inc
add
loope
or
add
add
inc
and
inc
add
add
add
sub
add
sub
and
or
push
add
add
add
addb
cmp
add
add
adc
add
add
and
addl
add
add
add
and
addb
inc
add
push
inc
inc
mov
addl
add
inc
adc
and
add
adcb
add
daa
add
adc
or
add
and
adc
add
les
and
add
add
sbb
subb
cmp
lea
jp
insb
popf
test
cmp
jle
add
adc
and
mov
popf
adc
and
and
sub
pusha
cwtl
and
mov
mov
or
inc
ficoms
xchg
adc
add
xor
fildl
sub
lcall
fcoms
shlb
lock
cwtl
sbb
xchg
mov
scas
inc
lds
jae
ss
popa
adcl
add
cmpsb
or
fimull
add
add
ds
xlat
push
mov
inc
add
pop
xchg
mov
add
or
sahf
sub
dec
sbb
lea
sbb
adc
sti
fst
sti
mov
cwtl
add
push
stc
nop
push
jnp
pop
cmp
mov
dec
push
xchg
lods
add
mov
outsb
mov
adc
push
adc
jo
mov
popa
sbb
loop
mov
pushf
nop
jo
push
jo
push
outsb
sbb
push
xchg
xchg
mov
inc
test
mov
mov
jno
mov
subl
std
sub
adc
sar
pop
mov
adc
int3
lods
or
dec
jbe
mov
mov
fadds
pushf
cmp
mov
sti
je
paddw
pop
int
mov
scas
fdivrs
mov
mov
fildl
pop
mov
push
loope
sbb
lea
push
or
mov
push
adc
push
into
jecxz
inc
pop
push
mov
and
pusha
pop
std
mov
and
mov
clc
lcall
fcoms
rolb
cld
adc
or
xchg
cltd
clc
mov
and
pmuludq
icebp
rcrb
mov
adc
dec
xor
inc
mov
ficoms
and
in
into
pushf
adc
pop
test
hlt
jnp
sub
rclb
and
sbb
pop
fists
and
leave
into
pushf
adc
mov
nop
int
pushf
adc
mov
adc
add
mov
adc
push
sub
int3
pushf
pop
fs
mov
fwait
test
and
adc
rclb
rcrb
pop
and
and
xlat
pop
push
mov
and
add
adc
inc
fiadds
lock
adc
dec
fisttpll
data16
sbb
jnp
and
adc
xchg
mov
std
inc
mov
adc
sbb
cwtl
ficoms
mov
lock
and
pop
fisubl
add
cmpsb
add
outsl
pop
sbb
cwtl
pop
xchg
push
push
inc
push
fstp
xchg
std
mov
inc
int3
xorb
pushf
push
xchg
cwtl
sbb
adc
xchg
cs
sub
je
adc
add
mov
adc
sbb
mov
jnp
jmp
fidivs
sbb
imul
mov
push
mov
aad
popf
mov
lret
pop
push
mov
and
cwtl
popa
addl
push
inc
fwait
subb
xchg
xchg
movsb
sbb
push
fistl
push
xchg
loope
and
insb
movsb
fidivl
jne
scas
adc
outsb
xchg
sbb
cmp
inc
lods
gs
addr16
mov
adc
dec
sbb
adc
xchg
or
cwtl
pop
nop
pop
cli
xchg
fbstp
lock
jae
stc
xor
fdivrs
pushf
and
sbb
adc
lock
and
mov
sbb
mov
adc
xchg
sbb
rclb
jg
leave
lfs
or
jns
cwtl
test
push
dec
xor
hlt
adc
xchg
aad
adc
inc
sbb
mov
cwtl
cltd
sub
add
fists
xchg
and
sub
jg
adc
sbb
sbb
dec
aam
push
fs
outsb
xchg
inc
nop
sub
inc
push
enter
icebp
cwtl
pop
je
xchg
pop
cwtl
sub
insb
fists
push
bound
xor
xchg
sbb
mov
adc
aad
xor
and
das
pop
rcll
fmuls
jno
lahf
or
sbb
adc
mov
sbb
push
fists
bound
add
lret
rclb
pusha
sbb
xor
subb
aas
xor
mov
xorl
xchg
popf
fs
and
xchg
xor
xor
insl
adc
fisttpl
insl
nop
mov
lods
inc
jbe
sbb
orb
jp
rorb
dec
cwtl
adc
adcb
mov
sub
jbe
and
pop
wrmsr
inc
lock
xchg
insl
and
lea
sub
adc
cltd
dec
sbb
adc
pop
xchg
jg
sbb
pushf
into
movsl
xchg
pop
rclb
inc
enter
xchg
in
test
sbb
outsl
jge
mov
mov
cmp
repnz
loope
gs
dec
lock
js
faddp
lock
mov
adcl
xchg
jl
fidivl
les
add
mov
test
cmp
iret
lea
jp
push
lock
pop
lcall
mov
jo
insb
xor
adcb
or
inc
cmp
mov
xor
inc
mov
pop
xor
adc
and
insb
dec
cmpsl
push
sahf
pop
ficomps
push
xchg
insl
test
rcl
fmul
sahf
sbb
or
mov
insl
sub
insb
and
leave
popf
test
xor
xlat
push
cli
int
icebp
xchg
xor
daa
cltd
mov
jne
dec
mov
jge
and
insl
sbb
xchg
lahf
adc
push
leave
daa
js
bound
popa
sbb
incb
push
arpl
add
std
jnp
sbb
push
out
pop
add
cmpsb
testl
nop
push
and
jne
dec
mov
lock
cmp
sti
xor
fsubl
fs
sahf
adc
xor
push
hlt
rorl
add
xchg
jp
add
mov
fs
xchg
jge
adcw
adc
and
sbb
rcl
movsl
ds
push
stc
add
std
mov
adc
daa
std
pop
mov
xor
pop
jl
popa
mov
mov
cs
das
or
fdiv
inc
lret
ret
sahf
xchg
rorb
cmp
adc
mov
and
push
pop
xor
rclb
int3
sbb
xchg
out
loope
dec
push
ds
nop
pop
aad
dec
or
xor
sub
pop
test
movaps
dec
mov
and
jl
int3
dec
subl
es
lahf
aaa
xlat
add
jg
ret
in
sub
imul
dec
shrb
call
mov
dec
int3
push
pop
loope
nop
pop
mov
jg
insb
and
cmp
test
nop
out
lahf
adc
xor
mov
mov
inc
imul
pusha
push
dec
xor
or
rorl
or
mov
fwait
stos
negl
adc
push
or
lea
mov
adc
cmp
jne
aam
sbb
and
sub
mov
xchg
insb
mov
push
adc
and
mov
cld
mov
xor
enter
cmp
jbe
cmp
jo
xchg
lods
iret
push
jmp
fisttpll
jb
add
cmp
lahf
and
gs
mov
pushf
dec
ljmp
xlat
pusha
and
mov
arpl
pop
fwait
and
inc
cld
in
xor
xor
loope
mov
int3
fidivs
or
sbb
xor
fdivs
push
shll
dec
popf
clc
cld
jnp
dec
psubsb
adcl
xchg
cmc
subl
pop
mov
xchg
lahf
pop
shll
and
xchg
adc
sub
add
cmp
ss
outsl
fldcw
or
inc
enter
jmp
and
push
aam
std
outsb
aaa
xchg
push
lcall
jp
cld
push
popf
cltd
cmp
jp
jbe
add
and
push
xor
jl
test
inc
fsubs
mov
rclb
ss
jbe
push
ret
jne
jnp
adc
pusha
mov
sub
mov
sarb
dec
mov
sbb
add
adc
fwait
adc
bound
lea
outsl
inc
std
mov
inc
inc
inc
jp
dec
and
pop
aaa
xor
ficompl
xor
dec
shrb
adc
test
xchg
xchg
inc
lds
push
inc
pop
dec
or
call
push
cmp
into
repz
pop
mov
add
in
mov
cmp
mov
out
je
cmc
or
sar
xchg
dec
inc
sub
mov
shlb
outsb
rclb
xorl
cmpl
jg
lods
mov
ficoms
sbb
je
add
js
push
pop
in
sarb
inc
stos
add
jae
and
adc
pop
das
adc
addb
sub
punpckhbw
mov
adcb
enter
xor
ficoms
jo
lahf
push
add
les
fisubrs
filds
std
std
pop
outsl
push
arpl
xor
je
icebp
jb
aam
fsubl
mov
inc
mov
mov
xor
push
popa
andl
mov
dec
inc
js
out
lret
cmc
mov
inc
js
daa
enter
sub
call
dec
mov
lret
in
loope
clc
add
and
push
and
pop
pop
ret
sub
xchg
fcmovnu
addb
inc
out
cs
imul
bound
fcoml
push
xchg
mov
subl
mov
sti
xor
xor
jbe
adc
mov
mov
bound
pusha
dec
into
mov
and
dec
leave
fwait
cltd
loope
xor
in
mov
pop
push
push
lock
and
pop
test
pop
pop
jbe
pop
sar
add
cli
insb
mov
push
mov
rdmsr
orl
push
faddl
nop
subb
xchg
fimuls
xor
pop
cwtl
loope
jo
fs
inc
pushf
adc
mov
push
push
imul
jmp
addr16
hlt
mov
jno
lods
cmpsb
jno
push
jo
sbb
aas
cli
mov
mov
and
push
dec
sbb
xchg
nop
scas
add
nop
jg
in
out
lock
andl
mov
mov
int
mov
push
sahf
push
jo
mov
into
rcrl
outsw
add
mov
push
dec
dec
cmp
es
push
lret
jbe
fwait
imul
sub
jle
gs
mov
mov
jnp
and
jno
pop
enter
push
pop
imul
pop
mov
test
xorl
outsb
sub
fldl
dec
mov
in
addr16
adc
sbb
movsl
sub
jge
inc
jns
and
test
movl
fadd
xchg
bound
pop
sbb
sbb
cmpl
fisubl
jne
outsl
aam
sbb
je
and
push
fdivs
out
sub
fmuls
ret
ficoml
je
fwait
clc
xchg
pusha
push
mov
or
push
bound
scas
inc
lods
sarl
xchg
sahf
aad
dec
addl
inc
mov
inc
fimull
adc
push
icebp
ret
rcll
pop
fsubs
cld
cs
imul
lret
and
popf
cltd
xchg
imul
fisubl
adc
lcall
sub
ds
shrl
pusha
and
cltd
int3
cs
add
cmpsb
or
pop
xchg
outsl
push
pop
scas
add
lar
mov
pop
or
and
fcoml
xlat
adc
adc
mov
outsl
ds
xor
gs
clc
cld
mov
cltd
fisubs
mov
push
sbb
fs
test
xchg
dec
in
sbb
pop
js
xchg
std
mov
insl
int
add
scas
subl
std
loopne
nop
mov
inc
aaa
lock
and
jae
adc
and
dec
lcall
jae
dec
ss
arpl
push
and
ja
add
int
push
mov
sub
pop
dec
and
adc
lds
mov
fcomps
adc
shlb
dec
loop
out
or
inc
jo
outsl
sahf
in
fs
nop
leave
pusha
xor
in
add
fst
shrl
fdivp
shrb
mov
xor
lea
loopne
jnp
fwait
je
inc
insb
dec
cltd
imul
and
lds
rolb
xchg
cmp
popa
push
cmp
cld
push
iret
mov
mov
push
push
gs
sub
mov
jnp
and
cld
jecxz
mov
cmc
jmp
inc
sbb
fdivrs
mov
mov
mov
and
dec
nop
mov
popa
xor
insl
pop
mov
adc
in
inc
imul
jbe
jl
fisttpll
xor
mov
ja
pop
adc
sub
xchg
iret
jae
push
add
and
leave
out
cmp
cmp
cld
mov
aas
lods
cmp
cmp
jge
pusha
imul
mov
and
dec
pop
push
mov
mov
fs
push
xor
popa
pop
and
and
jno
mov
in
pop
ret
or
push
sbb
fisubs
mov
inc
pusha
add
loope
pusha
fcompl
add
pop
xor
push
call
mov
popf
lret
roll
inc
leave
arpl
data16
nop
xchg
cwtl
shll
dec
sbb
pop
into
clc
js
das
shrl
xor
into
fsubs
jp
adc
outsl
aam
adc
push
cltd
sbb
xchg
jl
xchg
int
pushf
xchg
adc
mov
push
cmp
xchg
mov
dec
jno
adc
adc
stos
dec
notl
cwtl
movsb
add
push
stos
loopne
lock
cmp
ret
addr16
push
pop
mov
push
std
jne
adc
pop
bound
sbb
lods
repnz
inc
ret
sub
shl
aad
divb
and
lods
sub
fldl2t
dec
mov
sbb
mov
popf
xlat
jno
outsb
orl
cmc
push
push
xchg
aad
xchg
mov
out
pop
mov
icebp
fldt
stos
iret
jg
shlb
nop
cmpsb
lret
out
mov
int3
in
test
popa
adc
sub
test
dec
xlat
jnp
sub
sbb
fcoms
or
stos
sub
cltd
mov
int3
adc
xlat
mov
aad
fbstp
mov
sbb
cmp
xchg
popl
inc
icebp
sub
pop
pushf
paddq
push
lods
lret
sbb
sbb
divb
loope
jle
mov
fcoml
xchg
sti
sarb
daa
push
jno
outsb
ret
mov
xor
ja
enter
pop
aad
pop
iret
insl
jl
incb
mov
xchg
fisttpll
xchg
dec
cmp
sub
xlat
xor
ss
xor
in
fimull
push
pop
faddl
adc
pop
fdivl
nop
jno
nop
setbe
jle
or
js
rclb
fcoml
jnp
pop
mov
mov
insb
jecxz
flds
xor
clc
dec
bound
sbb
fdivrl
adc
ljmp
call
xor
lcall
test
adc
mov
push
call
push
lret
add
or
xor
je
lret
push
push
nop
pop
cli
fcom
fcoml
push
data16
adc
cli
xchg
push
enter
push
add
mov
pushf
jae
fdivl
cli
pop
pushf
sub
pop
insb
sbb
fdivs
pop
shrb
pop
xchg
jg
pop
sar
cs
xor
mov
repnz
xchg
fucom
dec
shll
fwait
push
xchg
and
jge
and
les
and
push
cmc
cmp
dec
xor
std
int3
inc
xorl
pop
pushf
rcr
sbbb
xor
fwait
sub
loop
push
rcl
fcoml
and
pop
pop
inc
pop
int
xor
pop
pop
jbe
hlt
sub
xor
and
fsubl
outsl
andb
inc
pop
insb
aad
adc
notl
sub
call
dec
insb
scas
pop
push
pop
pushf
adc
mov
dec
fsts
pop
nop
adc
xchg
dec
xchg
xchg
jl
dec
cs
stos
lcall
out
add
mov
push
xor
cwtl
test
push
loop
mov
push
jae
adc
fs
push
jecxz
decb
gs
insb
pop
pop
xor
jns
faddl
bound
mov
out
jecxz
xchg
mov
xchg
inc
sarb
sbb
stc
inc
mov
cmp
push
icebp
rcrl
mov
inc
cs
push
jecxz
sub
push
loopne
sub
xchg
push
xor
cwtl
mov
popa
in
xor
dec
lret
cmpsb
inc
mov
mov
shll
jecxz
ret
inc
and
mov
and
popf
pop
and
xchg
dec
sub
mov
mov
cmp
popf
sarb
jge
pop
inc
mov
push
mov
jl
and
jae
mov
xor
lret
je
dec
notl
cld
inc
xchg
inc
xchg
int3
and
lea
daa
mov
sub
xchg
push
gs
pop
addr16
push
mov
jge
or
dec
stos
stos
dec
xchg
or
cltd
push
mov
adc
mov
sbbl
push
stos
clc
xchg
mov
daa
xor
js
stc
dec
mov
shll
cmp
dec
xor
mov
mov
push
mov
push
push
call
and
fcmove
mov
jl
dec
aam
mov
filds
nop
sahf
das
sbb
pop
pop
shl
ffree
adc
pop
push
icebp
inc
nop
jl
jmp
adc
xor
dec
cmp
mov
sub
aam
mov
dec
sahf
jmp
dec
pop
sbbl
loopne
mov
scas
pop
xchg
aaa
fldenv
adc
mulb
daa
mov
cmp
fldl
mov
insb
mov
fstpl
dec
push
es
lock
push
xor
test
mov
cld
sbb
adc
push
xor
dec
leave
sbb
xchg
xor
add
cmpsl
push
mov
mov
dec
mov
icebp
sbb
pop
test
cmpsb
out
cmp
jne
shlb
shlb
or
sbb
push
dec
push
xchg
cmpsb
and
and
push
push
sub
mov
in
inc
in
and
mov
or
jle
call
sub
sbb
stc
pop
jmp
and
cmp
aas
push
jge
imul
xor
pushf
push
movsl
mov
jmp
jnp
nop
push
cmp
mov
push
mov
xchg
aad
rorl
jnp
xlat
pusha
xchg
int
pop
out
pop
pop
sub
addb
sbbl
sub
dec
popa
xor
xchg
xlat
insb
xor
pop
xlat
test
daa
dec
inc
push
shlb
fmul
cmp
xchg
push
or
xchg
or
repnz
mov
add
and
ret
fstpl
stos
mov
fsubl
enter
pop
and
lods
xchg
push
pop
mov
addb
loopne
stos
push
mov
inc
push
inc
xchg
cli
pop
int3
lea
push
lods
imul
push
dec
mov
mov
loopne
cmc
sbb
loopne
loopne
jg
in
cs
fnstenv
lock
pop
cmp
sub
lods
inc
dec
add
jge
push
jmp
xchg
or
cmpsb
add
xor
cwtl
fildll
xchg
dec
aam
pushw
rcl
cltd
adc
cmpsb
cmp
cmp
out
push
das
fistps
and
fmuls
das
xchg
sbb
movsb
xchg
push
sbb
mov
mov
pop
call
xchg
roll
mov
inc
loopne
mov
xchg
imul
shl
and
lret
leave
xlat
cmpsb
jecxz
adc
jmp
mov
int3
popf
std
fsubs
aam
jmp
outsl
sbb
clc
dec
pusha
adc
lds
dec
jle
push
dec
subl
in
rclb
adc
pop
or
dec
push
push
outsl
cmp
sbb
sub
jbe
in
push
sbb
data16
jb
jge
jg
pop
push
fisttpll
lcall
call
mov
xchg
je
shr
push
fs
mov
sahf
push
int
ja
jecxz
lahf
pop
and
push
stos
cmp
fidivrs
lds
pushf
test
push
decb
notl
xchg
xchg
mov
jmp
jg
adc
mov
aaa
loope
ficompl
or
aad
sub
ret
pop
pusha
cmovne
aam
or
icebp
pushf
mov
sahf
int
adc
subb
in
aam
data16
pop
negl
xchg
insl
mov
sbb
add
jecxz
and
lret
lahf
push
dec
rolb
sarb
cmp
jns
adc
pusha
fmull
aad
push
leave
push
mov
into
mov
leave
xchg
push
add
arpl
add
popf
test
mov
imul
popf
pop
jmp
push
cmpsb
push
iret
call
push
fstps
stos
test
lret
inc
adc
cs
int3
xor
mov
out
cmp
gs
sub
add
rcrl
in
push
fbld
mov
repnz
addr16
jp
cmp
js
std
movsb
sub
jne
in
push
xor
sbb
jno
js
mov
inc
sub
scas
push
xor
pop
add
mov
mov
pop
lods
sbb
subb
pusha
mov
push
repnz
mov
sbb
or
scas
shll
aam
cmp
mov
xchg
pop
pop
call
cwtl
and
std
cwtl
cltd
add
cmc
xchg
fidivl
and
and
adc
jnp
mov
cld
mov
into
push
xor
es
dec
jle
not
xlat
pop
push
push
or
xchg
cwtl
adc
and
test
xlat
adc
les
dec
shlb
stc
xchg
mov
movsb
addr16
insl
cmp
mov
adc
pop
ficoml
lahf
dec
lcall
xchg
xchg
lcall
cmpl
rcrb
xor
lea
xor
std
sbb
jae
pop
lds
fdivrs
bound
inc
push
enter
daa
sub
cwtl
mov
or
les
outsl
sbb
xor
dec
add
adc
adc
dec
shll
xchg
stc
push
xor
push
jbe
cs
lcall
test
mov
fsubl
mov
scas
insl
fs
adc
lock
cltd
icebp
sub
in
pop
and
and
mov
ret
pushf
push
inc
mov
std
mov
xlat
inc
adc
add
icebp
pushf
push
mov
into
dec
stos
repz
shrb
and
es
sub
push
sub
and
js
mov
ja
call
jns
xor
cli
outsb
inc
cltd
pushf
fstps
cmpsb
pop
mov
jecxz
sbb
cmp
mov
inc
nop
outsl
jns
ret
jl
cmp
in
idiv
pop
out
mov
push
pop
dec
pop
mov
pop
mov
shl
out
dec
loop
call
inc
pushf
lea
in
ss
test
push
xor
and
pop
inc
mov
push
pop
pop
clc
push
loopew
aas
out
fcoms
dec
jno
inc
jo
call
iret
adc
xchg
and
out
cmp
dec
inc
and
cmp
test
pushf
int
fmull
inc
cltd
mov
mov
lret
mov
xchg
in
and
xchg
out
dec
test
mov
std
stos
dec
dec
lcall
sbb
xor
and
mov
mov
dec
pusha
filds
insb
pxor
xchg
sbb
ficoms
add
pmulhuw
rorl
sbb
roll
xor
in
push
sub
dec
and
push
sub
sbb
scas
or
xor
vpsubw
fisubrl
mov
imul
mov
cmp
ljmp
cmp
cmp
sbb
adc
ret
mov
pop
xchg
xchg
mull
mov
sbb
add
push
inc
loope
mov
add
pop
std
xchg
stos
add
insl
fwait
jl
jle
into
int
inc
pop
cmpl
aaa
jge
jle
cltd
sub
insl
push
aad
or
sub
xchg
shll
mov
mov
cs
pop
cmc
pop
add
clc
les
lret
xchg
sbb
addl
xor
and
xor
test
nop
inc
jo
or
inc
hlt
adc
xchg
cmp
outsl
sahf
jo
pop
std
fildl
xor
add
and
and
and
lods
ja
push
negb
fcompl
out
dec
xchg
int3
sahf
xlat
add
popf
push
and
cmp
push
inc
mov
jmp
fimull
or
xor
in
jl
daa
jle
jmp
sbb
stos
fsts
mov
cmp
or
popa
mov
les
mov
out
xor
mov
popa
mov
lock
jo
cltd
nop
fstpt
sbb
shlb
nop
mov
mov
mov
sbb
cmp
test
lahf
bound
xchg
mov
sbb
call
icebp
das
arpl
sbb
adc
add
aad
xor
pusha
das
andl
fs
inc
push
xchg
outsl
push
sbb
xchg
std
jno
iret
stc
jo
mov
xchg
aad
daa
daa
dec
xchg
fs
icebp
or
inc
push
push
insl
sub
gs
cmp
movsb
enter
dec
push
and
out
scas
xor
mov
into
fs
mov
jae
dec
imul
sub
mov
lret
adcl
jno
xchg
das
iret
pusha
mov
inc
xor
xor
jge
sbb
pop
out
dec
xor
in
sbb
jge
push
inc
sarl
sub
lods
pop
dec
ds
xlat
add
cmp
das
push
adc
jo
cwtl
pop
rorb
pop
mov
inc
pop
mov
data16
rcr
add
repnz
rclb
bound
fs
inc
incl
test
jo
mov
adc
and
inc
lcall
sub
mov
int
pop
xor
or
pusha
sbb
in
sbb
scas
mov
in
sub
js
enter
out
dec
daa
adc
sbb
adc
lret
jmp
push
hlt
std
sbb
jg
push
adc
and
pusha
scas
push
fs
adc
cmp
ss
dec
adc
mov
lods
mov
mov
or
mov
std
dec
dec
test
cmp
push
lcall
add
push
inc
mov
fstpt
mov
pusha
mov
push
and
std
cmp
rclb
push
mov
aam
rclb
mull
testl
add
rcll
fcmovnu
jne
cmpsl
adc
cs
aaa
mov
in
fs
adc
adc
repnz
mov
ja
cmpsb
fstl
jl
fimull
and
popa
out
rcll
ja
insb
jne
dec
test
cmp
adc
in
mov
in
mov
xor
daa
xor
jle
mov
stos
shr
jmp
pop
push
mov
cmp
dec
or
xchg
out
inc
lcall
sarb
cmpb
dec
cmp
fwait
or
cltd
inc
sbb
shlb
mov
aam
push
mov
xchg
loop
fs
pop
pushf
mov
arpl
lods
mov
rol
cmp
stos
xchg
push
xor
int
push
dec
cmpsb
iret
leave
sub
dec
adc
out
cmp
mov
mov
jle
xchg
cwtl
cs
jl
or
sbb
int3
xchg
jg
jae
sahf
xchg
ret
sarb
xor
pop
pop
xchg
mov
add
in
clc
or
cmp
adc
and
lret
es
sub
and
cmp
inc
test
mov
std
or
ljmp
xchg
add
aam
sub
loopne
xor
fcomps
or
add
mov
jmp
mov
xor
sub
data16
aam
adc
hlt
sub
das
pop
or
mov
scas
repnz
ljmp
orl
mov
xchg
movsl
xor
xor
mov
pop
shlb
movsb
aam
pop
dec
ss
sahf
xor
jb
push
mov
test
xchg
int3
bound
lret
push
mov
stc
jno
jo
inc
ret
clc
and
call
arpl
cltd
xor
cmp
add
imul
and
aas
adc
mov
pushf
or
jno
mov
xchg
cwtl
cmp
std
fsubrp
jl
adc
push
lea
testb
lods
cmp
pop
outsl
and
mov
int3
loop
int
sbb
push
ret
cmpsb
cmp
popa
push
clc
imul
andl
cmc
dec
and
xor
add
jno
arpl
popf
jns
cwtl
jle
sarb
xchg
mov
aam
fidivrl
incb
xchg
hlt
jecxz
cmp
pop
or
outsl
sub
adc
jae
in
dec
add
xor
ret
scas
in
pop
cmp
repnz
lea
mov
and
inc
mov
pop
cmp
push
pop
fwait
popa
pop
xchg
mov
cs
pop
mov
lods
xchg
lahf
pop
sbb
fadds
sbb
out
jmp
ret
gs
cmpsb
xlat
fs
jo
mov
leave
jge
sub
cmp
add
shll
jle
cltd
jl
insb
mov
mov
imull
clc
arpl
cltd
std
jp
or
mov
lds
adc
sub
pushf
roll
inc
pop
sti
orb
cmp
jns
jb
scas
or
fwait
sbb
cmp
jo
jns
pop
mov
inc
add
push
inc
popf
daa
xor
ret
clc
sub
sbb
cmpsb
shl
test
cmc
mov
sub
hlt
fmul
cmp
in
fmul
lahf
jecxz
dec
inc
pushf
xchg
call
loopne
push
mov
pushf
sbb
xchg
fwait
ds
shr
jmp
repnz
mov
outsl
sbbl
jae
cmp
lret
mov
ret
and
sub
jb
aad
add
xchg
cld
fidivrs
xor
fwait
mov
adc
pop
and
hlt
aaa
jns
pop
dec
rcrb
adcb
loopne
add
aad
add
frstor
or
xchg
clc
dec
push
adc
xor
or
dec
pop
movsl
push
lock
add
cmp
xor
cld
fcoms
mov
js
lds
mov
inc
iret
add
sub
lock
mov
mov
insl
fimull
repz
int3
pop
lea
mov
divl
sbb
pop
enter
sbb
pop
dec
hlt
stos
adc
xchg
and
cwtl
and
add
push
jb
and
bound
jge
sbb
cmp
imul
inc
iret
pop
pop
pop
adcb
jp
add
sbb
aad
pushf
popa
paddw
push
push
aad
ja
jecxz
sbb
cs
mov
push
cmpsl
mov
insl
mov
pop
pusha
add
sbb
sub
and
outsb
cmp
sub
rcrl
sahf
fdiv
jmp
sub
popf
and
lret
and
sub
pop
nop
ss
aam
and
stos
dec
or
mov
add
push
scas
push
xchg
push
jo
sbb
sbbb
or
cmp
jp
adc
dec
and
rcrb
inc
or
adc
pop
dec
sub
in
jle
arpl
mov
sbbb
aad
int
out
xchg
mov
cmc
cmp
cmpsb
push
push
sbb
or
cs
int
xchg
push
xlat
mov
iret
pop
jmp
cltd
roll
jns
adc
pmulhuw
or
mov
repz
nop
repz
push
out
sub
jae
lods
pop
mov
cld
mov
into
xchg
pop
push
pusha
push
das
pop
pop
adc
mov
pop
fistps
aam
pop
nop
loopne
arpl
fbld
mov
dec
sbb
xchg
lods
sub
lods
cs
xor
adc
paddb
leave
fsubrs
dec
rcr
in
imul
cmp
sbb
das
or
test
adc
and
pop
or
addr16
sbb
sub
add
jbe
dec
into
test
jnp
xchg
fldl
mov
lcall
repnz
dec
and
push
jg
jl
xor
lcall
out
xchg
int3
fdivrp
or
daa
fs
imul
sbb
cmpsl
shrl
mov
mov
jecxz
nop
push
fcmovbe
pop
test
shlb
cwtl
mov
jae
pop
adcl
aas
pop
pop
in
push
fsubs
mov
dec
mov
cli
xchg
push
pop
int
pop
cmp
aam
aad
pop
cltd
pop
ret
pop
mov
loop
loope
add
aam
ds
jo
add
xchg
push
aam
mov
pop
inc
aas
xor
jns
jecxz
imul
pop
mov
dec
in
out
scas
push
dec
fistpll
in
imul
lock
lds
mov
add
push
ficomps
imul
push
into
pop
in
xchg
int
imul
cmp
fs
fistl
lcall
icebp
xchg
fsincos
outsl
mov
dec
int
jo
push
push
mov
mov
insb
dec
dec
xchg
rcrl
lea
lret
jge
adc
lcall
cld
out
bound
sbb
jns
push
mov
pop
loop
int3
call
loopne
dec
adc
xchg
inc
and
pop
push
mov
xchg
cs
cmpsb
or
mov
ljmp
adc
jl
mov
xor
mov
adc
add
sbb
add
adc
arpl
repnz
sbb
cwtl
cwtl
adc
jne
xor
push
es
js
js
test
mov
mov
dec
shrl
out
imul
adc
movsl
lock
movsb
cltd
push
push
xchg
push
stc
popa
lds
outsl
xor
out
enter
aad
sahf
mov
xor
push
es
and
iret
insb
sbb
out
cmc
adc
sbb
and
bound
adc
rcll
dec
or
test
orb
mov
icebp
bound
js
or
mov
xchg
pop
lcall
js
push
fistps
mov
rcr
mov
and
les
dec
jno
adc
xor
jb
int3
xor
in
pop
insb
fldl
sub
jb
int3
in
test
adc
push
lea
inc
sbb
xchg
inc
and
pop
int3
pop
xchg
inc
mov
cmpsb
cltd
ss
xor
std
add
cmp
mov
jp
push
mov
arpl
sahf
xchg
and
sub
orb
xor
sbb
aas
add
mov
fs
xlat
inc
lret
xchg
movsb
push
pop
fadds
add
ds
loopne
cmp
arpl
push
and
shlb
and
pop
out
je
rclb
or
adc
xor
pop
xlat
stos
pushf
jne
sbb
int3
shlb
les
push
lock
sbbb
and
and
repz
stos
push
test
xchg
hlt
jbe
xchg
aaa
sbb
mov
jnp
xchg
bound
dec
mov
cli
mov
adc
arpl
and
add
mov
pushf
lock
outsb
cmc
addr16
rcrb
dec
cltd
imul
lds
jne
insl
ret
ficoml
int3
cmpsb
or
sbb
xchg
dec
stc
ljmp
fsub
out
add
loop
add
scas
xlat
cmp
jne
ficoms
dec
and
mov
negl
dec
dec
in
out
xor
popf
in
sarl
mov
notl
sub
pop
sub
xchg
adc
insb
insl
mov
clc
xor
fsubs
jne
daa
lock
outsb
les
xchg
sub
out
daa
shrl
insl
ret
adc
cmp
jns
pop
jno
mov
push
into
mov
mov
push
jae
mov
cwtl
mov
add
lods
sbb
sbb
lock
int3
repz
adcb
cmp
pushf
in
and
jl
popa
lods
push
cmp
mov
in
dec
sub
cltd
cmp
xor
cmpsl
or
fmuls
xlat
addb
and
lock
push
push
and
testb
cmpsl
aad
mov
push
loope
inc
movsb
pusha
cmp
subb
shlb
not
popf
iret
insl
jbe
icebp
sahf
or
or
push
push
fildl
jnp
adc
fcmovu
loope
scas
int3
pop
sti
movsl
ds
and
xchg
std
jns
and
imul
loope
int3
jbe
sysenter
in
push
icebp
das
jle
add
dec
fcoms
cld
push
push
out
les
mov
or
inc
or
loopne
mov
mov
imul
or
lret
xchg
mov
mov
pushf
pop
inc
movsb
add
clc
pop
jg
std
mov
aad
sub
lea
mov
fidivrl
jmp
or
mov
add
xchg
sub
or
jne
in
fsubp
jge
fsubrl
cmp
xchg
in
leave
insb
xchg
xlat
sbb
xlat
jecxz
int
push
adc
aam
fdivrp
ds
sub
outsb
mov
or
test
xchg
xlat
inc
call
shll
call
or
js
mov
test
sbbb
outsb
insb
mov
or
pushf
mov
loopne
loopne
dec
lods
shll
imul
push
sbbb
xchg
lock
xor
jbe
les
or
das
je
test
adc
es
icebp
adc
inc
rcrb
xor
cld
std
inc
mov
inc
shll
or
lock
sbb
jb
sbb
pushf
sahf
in
sub
subl
push
mov
scas
xchg
out
sbb
je
cmp
jae
sub
xchg
jns
xchg
dec
pop
dec
mov
and
fdivl
clc
popa
shrl
xchg
xchg
or
mov
jp
das
aad
nop
pop
adc
add
icebp
lock
aas
mov
shll
xor
xor
inc
sbb
pop
mov
dec
inc
test
mov
pop
xchg
xchg
int
enter
inc
jmp
ret
mov
idivb
mov
fwait
or
in
rorl
push
and
mov
adc
mov
outsb
pop
adc
pop
fildl
sub
ja
mov
fdivs
pop
rolb
adc
addr16
lcall
aas
fsubrl
outsl
adc
neg
adc
movl
cmpsb
sbbb
test
fistl
mov
das
cmpsl
jg
jecxz
shrl
add
xor
fnstsw
xor
jle
pop
out
xor
les
sub
push
outsl
ficoms
cwtl
push
xor
lret
scas
mov
push
mov
and
fldcw
shll
mov
add
out
movsl
adc
cwtl
mov
cs
pop
rclb
add
jo
inc
sti
push
mov
dec
loopne
divb
mov
push
dec
cld
pop
add
and
pop
push
jmp
pop
out
mov
mov
jmp
adc
icebp
adc
mov
cltd
fld
notl
aam
mov
jb
mov
or
sub
je
cmp
je
inc
mov
adc
stc
out
ret
adc
adc
test
mov
std
cmp
add
and
adc
pushf
mov
jns
lret
mov
dec
and
lods
dec
inc
lea
lea
test
add
out
scas
call
fmull
mov
std
daa
dec
push
cmp
cmp
sbb
lods
jg
or
mov
mov
xor
mov
dec
adc
inc
stos
sahf
cld
xchg
xor
xor
div
nop
push
pop
lcall
jns
insb
es
lock
jmp
sbb
vmovaps
insb
inc
out
xor
imul
adc
sub
dec
mov
jle
sub
insb
in
xchg
sbb
int
cmp
lret
mov
pop
adc
adc
mov
dec
inc
int3
jae
in
cmp
cmp
ret
xchg
gs
and
xchg
xor
pop
loope
rcl
outsl
push
mov
and
mov
je
cmp
es
fbld
xchg
pop
icebp
fs
adc
arpl
dec
mov
push
jg
mov
imul
les
sbb
enter
jns
dec
or
dec
and
fldl
cmc
and
mov
mov
lea
repnz
mov
std
sub
cmp
jo
push
out
push
jecxz
lret
jp
jbe
dec
cmp
mov
loope
push
or
aas
dec
add
stc
sub
sbb
ret
and
push
jae,pn
jne
je
dec
jns
xchg
jmp
jne
add
push
imul
push
ja
int3
xchg
inc
and
fwait
std
and
xor
inc
jo
clc
xor
sbb
jge
push
and
ficoms
and
push
loopne
cmp
outsb
std
jns
jp
xchg
hlt
pop
mov
pop
lcall
fwait
aad
in
add
pop
push
div
or
xchg
jge
push
cmp
jle
and
pop
xor
xchg
inc
pop
adc
add
pop
aaa
push
jae
mov
dec
test
call
dec
insl
sbb
pop
add
cmpsb
pop
inc
add
xchg
and
cmp
les
jno
push
jno
jbe
lahf
int3
dec
test
add
in
push
movsb
fsubrp
nop
aad
dec
push
scas
lret
cmpsb
dec
lods
sbb
xchg
cmpsb
in
cld
sahf
sbb
pop
mov
pop
push
nop
or
jl
outsl
pushf
std
imul
inc
pushf
cmpsb
cmp
inc
frstor
clc
jge
adc
mov
pusha
shrb
xor
pop
pop
jp
out
xchg
jne
ja
jo
jg
mov
or
mov
pushf
mov
std
jmp
out
adc
xor
jl
fcmovnu
pop
int3
inc
mov
ficoml
pop
inc
dec
icebp
std
cld
jge
sub
mov
loopne
sahf
pop
stos
jb
push
push
dec
cmp
dec
xor
mov
out
jns
mov
mov
aaa
out
nop
mov
in
xchg
jo
inc
popf
enter
out
popf
cmpsl
sbb
pop
pop
cmpsl
lahf
mov
sbb
dec
jmp
je
filds
ficoms
test
xchg
xor
call
sub
fucom
mov
aas
xlat
shrb
sti
ficompl
xchg
jl
xchg
lahf
bound
mov
xor
addr16
repnz
lahf
add
push
lock
in
js
mov
cltd
adc
hlt
loopne
out
pop
pop
cmc
daa
test
and
jb
xchg
cmpb
les
inc
push
loop
add
and
outsb
mov
es
dec
cmp
pop
fldl
xchg
push
inc
xor
push
movsb
push
mov
and
gs
or
fsubrl
cltd
mov
lock
lcall
out
ds
pop
lds
and
jb
nop
push
fcompl
sarl
xor
fcoml
mov
gs
fldenv
mov
pop
inc
push
and
mov
xchg
or
fdivrl
rorl
mov
cmp
or
inc
outsb
test
push
pop
int
jbe
das
push
movntq
fmull
roll
cmp
test
and
jp
pop
mov
gs
clc
xchg
add
push
cld
push
and
mov
fsubl
push
mov
clc
frstor
adc
mov
sar
jno
leave
mov
jg
mov
hlt
faddp
inc
int3
popf
xor
lods
stc
cs
add
ss
cmpsl
sub
rcl
call
pop
push
cld
test
out
std
jbe
inc
pushf
call
stc
pop
xchg
sar
fwait
xchg
push
lock
fs
xor
int3
jnp
push
ror
movsl
mov
lock
unpcklps
mov
or
pop
ja
shlb
outsb
and
add
es
lock
loopne
mov
in
ljmp
aaa
pop
push
in
jecxz
fbld
scas
add
leave
dec
sbb
sbb
mov
push
and
subl
xor
stos
lahf
fbld
lret
or
mov
or
add
push
aad
push
fucomp
pop
add
enter
sbb
mov
sbb
in
repnz
xor
xlat
nop
sbb
into
aad
ds
cmp
xor
add
sahf
aad
jmp
testb
in
inc
insb
xor
imul
scas
or
xchg
popf
lods
inc
xchg
pop
test
pusha
mov
ss
jmp
push
fdivr
rcll
inc
xorl
mov
clc
data16
pop
lock
mov
jb
dec
jp
dec
mov
pop
fmuls
sub
push
out
call
xor
aad
add
mov
fistpll
push
imul
test
es
mov
jbe
pop
pusha
popf
pop
ss
jnp
imul
jb
lock
jno
mov
shlb
outsl
pop
bt
leave
lret
mov
rcll
gs
fs
pop
jne
dec
dec
test
push
adc
xchg
and
stos
add
out
icebp
cmp
into
xchg
pushf
ss
adc
dec
in
or
out
add
xchg
pop
addb
decl
xchg
pop
adc
adc
jmp
pop
inc
adcb
add
ds
scas
pop
repz
push
in
cld
insl
fsts
pop
pushf
aad
imul
mov
mov
or
add
lds
dec
out
mov
pop
inc
iret
sbb
cmpsl
mov
inc
jb
ror
mov
pop
sub
jmp
xchg
inc
lcall
fmuls
in
mov
stos
push
es
push
testl
jbe
loop
mov
imul
ror
push
inc
lea
mov
fsubrl
cli
fs
pop
dec
dec
pop
sahf
add
dec
ret
popa
add
stos
pop
sbb
sti
cwtl
dec
out
cli
jp
je
pushf
fsubrs
cwtl
dec
pop
mov
mov
add
pop
add
xor
xor
xchg
push
add
add
shrb
into
or
addr16
movsl
cmp
jecxz
test
cmp
mov
cmp
dec
daa
mov
scas
popa
mov
cmpsb
sbb
or
popa
or
filds
cmp
xchg
mov
dec
add
push
les
and
jno
int3
in
rorb
pusha
icebp
popf
add
dec
xlat
jg
xchg
inc
or
jo
sahf
push
sub
adc
loopne
cmp
shrl
aad
mov
clc
xchg
sub
outsl
enterw
pop
stc
adc
mov
push
insb
in
push
mov
push
js
lret
lods
in
inc
inc
add
sbb
mov
cmp
pop
lret
push
dec
rcrl
addr16
jecxz
aaa
insb
gs
mov
dec
insl
into
std
out
outsb
push
pop
js
jbe
add
mov
orb
xor
jae
in
cld
je
jle
xchg
int
flds
sub
jnp
mov
inc
sarl
inc
xchg
add
mov
outsl
mov
rol
fisttps
add
es
mov
sbb
aaa
or
out
nop
push
push
rcrl
scas
aam
mov
sub
pop
add
call
mov
mov
fwait
xchg
adc
push
push
cld
sahf
pop
std
adc
hlt
lcall
inc
fwait
dec
mov
xlat
into
mov
sbb
sbb
or
dec
inc
jg
xchg
pop
add
adc
sbbb
enter
cli
popf
jne
mov
cld
in
in
ret
outsb
lock
scas
aaa
dec
adc
sbb
mov
inc
cld
mov
pop
jb
push
xor
pop
adc
mov
lahf
mov
imul
subl
mov
out
cmp
jno
mov
jb
jbe
cmp
sbb
test
lret
adc
icebp
lret
push
xor
mov
mov
xchg
lret
dec
jmp
add
sbb
jo
shrb
cli
xchg
pop
cld
ret
leave
fldl
leave
fisubl
iret
fcoms
mov
outsb
pop
repnz
adc
int3
lahf
jp
imul
aad
inc
and
jle
and
loope
pop
sbb
sub
ss
inc
or
jno
cli
das
mov
sti
aam
flds
jle
or
jne
adc
adc
xchg
add
fs
int3
std
push
in
mov
iret
popa
loop
gs
scas
push
sub
pop
cmpsl
arpl
outsl
stos
ds
sbb
out
sub
dec
mov
pop
pop
fdivrs
je
fidivrs
es
sbb
inc
push
pusha
adc
sub
movsl
mov
adc
xor
stos
jl
pop
pop
push
popa
jmp
mov
sub
mov
les
push
call
xchg
arpl
scas
out
ds
lcall
repz
int
mov
lock
and
loope
pop
xor
push
aad
jbe
cmp
xor
sbb
push
xchg
adc
mov
push
gs
fs
rcrl
ja
adc
les
add
cmp
adc
bound
fimuls
fildll
mov
cmp
or
lds
adc
dec
push
xor
hlt
jmp
enter
aam
lock
je
fxch
jl
dec
push
rorb
xchg
outsb
fisttpl
jle
hlt
adc
cmc
dec
jp
ficoml
and
loop
leave
fucomp
ja
daa
js
mov
jae
dec
mov
repnz
jnp
xor
xchg
leave
imul
fcoml
stos
stc
sbb
cmp
pusha
test
jp
mov
pop
and
xchg
xor
mov
test
and
int
ficomps
cmp
js
and
iret
adc
pop
mov
rcrb
pop
sbb
addb
cmp
xor
adc
xchg
sub
sbb
aaa
xchg
add
aam
stos
into
cli
and
xor
cmp
xor
gs
xor
xchg
mov
xor
les
mov
jmp
imul
sti
lcall
lret
les
clc
jl
jmp
fwait
stos
xor
in
push
push
cmp
dec
arpl
jnp
popa
sub
inc
stc
insl
xor
pop
mov
adc
rorl
enter
mov
in
dec
stos
std
call
push
xchg
aas
gs
js
mov
sub
inc
mov
enter
ja
inc
pop
arpl
fidivs
cmp
fstpl
xchg
mov
cmc
daa
mov
mov
es
mov
pop
cld
dec
sahf
jbe
push
jl
jg
pop
mov
repz
jl
sub
repnz
lret
pop
and
sub
sbb
cmp
scas
push
xor
mov
push
leave
sub
push
and
lods
push
cmp
pop
fistl
imul
cmp
iret
jne
rcrl
int
inc
bound
les
push
fstl
test
je
jnp
and
ljmp
mov
lock
out
push
bound
sbb
out
jl
int3
cmp
fwait
loope
dec
iret
scas
stc
mov
fs
and
xchg
sbbb
jp
jmp
inc
shrl
mov
movsb
movsl
push
gs
sbb
adc
adc
inc
test
mov
pop
dec
stos
jl
test
aam
pop
daa
int
sbb
test
jle
shll
xchg
mov
daa
scas
jae
pop
push
in
jecxz
aad
shl
cli
dec
ljmp
popa
sti
add
lret
pusha
add
cmp
gs
cld
adc
xchg
jp
jnp
fnstcw
jno
mov
aaa
cmc
mov
cmp
lcall
cmpsl
mov
jg
mov
clc
xchg
andb
sarb
in
mov
cmp
popa
xor
lfs
and
cld
imul
fs
roll
pop
mulb
sahf
jmp
jae
js
push
in
enter
nop
jnp
cmc
mov
lahf
xchg
and
mov
rorl
lahf
xchg
outsl
add
icebp
repz
nop
pop
jo
fs
mov
fcmove
test
and
stc
jne
lods
ss
ljmp
gs
icebp
rol
sbb
fs
mov
adc
cmp
and
shrl
cwtl
pop
pusha
arpl
movsl
lods
pop
xlat
arpl
pushl
insb
inc
fistpll
dec
jo
mov
dec
test
cmp
pop
loop
sbb
xchg
fisttpll
push
jns
outsb
enter
sbb
adc
pop
or
cmp
mov
and
push
cmp
aad
mov
mov
imul
dec
inc
repz
mov
sbb
cmp
pusha
adcl
mov
jbe
and
xor
ss
jge
aam
fsts
adc
dec
lret
fsts
notl
loopne
xchg
popa
lods
scas
nop
fdivl
dec
mov
add
jae
ds
dec
cltd
mov
imul
cli
sub
pusha
jle
aad
enter
jbe
insb
or
repz
ror
mov
mov
es
xchg
js
adc
aas
rorb
mov
inc
pushf
lcall
xchg
adc
sahf
dec
adc
cwtl
aad
jge
mov
push
in
adc
sarb
xor
mov
jb
cli
pushf
pushf
mov
and
mov
addr16
sbb
je
std
enter
aam
or
es
sbb
dec
xlat
and
outsb
jle
sub
push
sbbb
popa
fucomip
shl
insl
sbb
lahf
and
enter
xchg
js
nop
xchg
and
add
imul
je
dec
nop
inc
adc
pop
mov
sbb
daa
pop
jmp
add
push
cmc
or
sub
fnsave
popa
js
outsl
pop
lret
aaa
sub
pop
mov
bound
xor
mov
mov
ret
cmp
mov
xchg
aaa
sbb
shll
arpl
mov
imul
lret
mov
sub
or
js
jmp
xchg
fsubs
mov
ljmp
and
test
push
pop
cmp
nop
jo
adc
adc
adc
test
sar
and
outsl
popf
pop
xorl
jae
or
xor
inc
js
pop
push
inc
add
mov
push
loopne
xor
mov
push
jg
dec
addr16
mov
mov
bound
mov
cwtl
pop
int
push
lahf
and
movsl
fistl
push
mov
shrl
adc
lea
int
xor
mov
cltd
and
popa
mov
in
dec
add
dec
add
xchg
subl
faddl
jmp
aam
popl
addr16
sahf
loope
loope
adc
jo
ss
js
in
into
insl
call
mov
negb
out
pusha
repz
stc
aad
shlb
leave
sbb
in
and
jl
mov
sbb
je
xchg
das
enter
daa
pusha
test
popf
xchg
cmp
dec
inc
je
dec
and
xor
jne
cwtl
icebp
addb
adc
out
cmc
js
rclb
push
arpl
or
push
cmpsb
stc
bound
pop
cmp
lcall
sub
stos
inc
pop
sbb
sub
or
and
mov
adc
mov
pop
movsb
and
xor
rolb
rclb
add
mov
pop
insl
adcl
bound
dec
pop
lahf
cmp
cwtl
insl
addr16
cs
mov
adc
or
mov
popa
xor
add
lret
and
insb
jecxz
mov
dec
xor
mov
inc
adc
daa
push
jno
mov
loope
xlat
push
sub
xchg
jecxz
xchg
lock
outsl
xor
adc
jo
jg
es
xorb
ret
jnp
mov
mov
pop
pop
xor
enter
insb
lods
sub
jl
std
pop
and
ja
mov
push
fnstsw
je
shrb
jle
rclb
cwtl
lock
xor
and
repnz
jg
push
and
mov
xor
adc
mov
fisubs
imul
xor
mov
cmc
sbb
add
add
sbbl
xor
add
cmp
jge
xor
jecxz
addr16
push
jb
sti
ja
fidivl
test
inc
xchg
and
pop
int3
mov
mov
je
adc
xchg
sbb
push
or
sbb
mov
adc
push
push
sahf
or
inc
repnz
push
adc
stc
inc
test
jbe
lret
loope
sub
push
loopne
cli
jl
and
stc
and
outsl
leave
mov
insl
xchg
pop
sti
mov
push
and
push
cs
jo
addr16
cltd
sub
std
aam
xchg
aas
shll
dec
and
aas
xor
repz
fwait
xlat
cwtl
loop
out
stc
push
pop
jbe
pop
xor
dec
and
add
es
lahf
bound
call
push
dec
sbb
lea
ja
clc
inc
push
fldenv
xchg
out
push
lea
aaa
mov
inc
lret
out
pushf
pop
jg
push
xchg
push
adcb
mov
mov
dec
into
xor
nop
xor
sarb
inc
divl
iret
xchg
in
fwait
cltd
and
pop
lock
les
mov
push
clc
insl
inc
outsl
push
pop
cmc
adc
cmc
ds
nop
and
mov
xchg
push
imul
xor
outsb
shlb
jg
nop
cmp
pop
xchg
ret
cli
std
sbb
adc
lds
repnz
out
mov
movsb
dec
sub
sub
ficoml
pop
lahf
je
jo
cld
mov
in
jns
pop
lea
or
xchg
pop
and
loop
pop
or
pop
lods
adc
dec
push
adc
xlat
dec
call
xchg
push
lahf
mov
mov
sbb
jno
and
sahf
ret
xor
ret
repnz
inc
sbb
stc
mov
mov
adc
jmp
mov
aas
jp
dec
mov
push
pusha
cmp
dec
ret
cmp
rcrl
test
sahf
arpl
cmp
cmp
and
adc
or
loop
jge
lahf
sbbb
imul
mov
fwait
dec
ds
movmskps
fstpt
lahf
enter
sub
repz
push
into
jecxz
add
xchg
out
cli
fistl
hlt
jno
xor
xchg
movsl
push
aam
mov
mov
jno
sbb
nop
rorb
sub
sub
sbb
cld
pop
inc
dec
faddl
sbb
fisubs
jnp
jecxz
mov
out
sti
pushf
pop
addr16
or
outsb
xchg
xor
inc
shlb
out
mov
es
sbb
in
jno
adc
pop
xor
pop
add
idiv
push
adc
pop
repz
test
jle
adc
scas
scas
cmp
addr16
data16
xor
push
sub
enter
and
cmp
and
fwait
and
in
jb
int
cmpsb
cmpsl
test
jns
daa
adc
pop
cmp
xor
jo
fstpt
sub
adc
add
sbb
cmp
sbb
adc
or
shl
adc
fdivs
mov
jl
xchg
cmp
in
fucom
and
cld
jno
ret
pop
inc
adc
cmpsl
mov
lock
push
push
test
movsl
pop
cmp
adc
fisubs
aaa
lods
cmp
push
jb
pop
insb
aad
sbb
faddl
sarb
shrl
pop
sbb
sbb
cmp
ja
mov
mov
push
pop
and
out
pushl
mov
lahf
fcompl
mov
test
nop
dec
and
stc
jge
test
pop
add
xor
adc
dec
or
push
pop
stos
jbe
rcll
adc
test
xchg
xchg
and
hlt
mov
daa
jmp
cmp
lock
adc
jnp
mov
pop
popf
jne
lret
call
push
out
cmp
mov
cmpsl
sub
push
rcl
mov
inc
sbb
pop
popf
and
lahf
jo
dec
in
repz
inc
mov
mulb
dec
add
in
sbbl
cmc
sbb
mov
stos
pop
xor
mov
inc
inc
fcomps
fcoms
dec
xchg
push
and
xchg
loopne
stc
rorb
jp
pop
xor
xchg
cmp
and
and
pop
call
jbe
dec
dec
in
dec
cltd
pop
ds
insl
mov
fwait
mov
popa
mov
stos
sbb
fwait
cltd
xchg
pushf
fwait
fwait
jge
lea
lret
xchg
out
scas
sub
adc
in
aas
cmp
cmp
leave
jno
and
dec
cmp
pop
lock
pop
clc
fdivr
xor
add
mov
sbb
xor
cli
loope
xchg
push
add
xor
popf
xchg
ja
out
xchg
insl
es
lea
loop
int3
dec
mov
dec
enter
lret
roll
inc
adc
cld
pushf
sub
jmp
add
aad
xor
fstpt
shlb
inc
mov
scas
lahf
mov
adc
enter
insl
icebp
sbb
xor
adcl
add
std
mov
icebp
sbb
jns
nop
data16
inc
mov
dec
adc
xchg
jns
cmp
sar
ret
mov
repnz
push
rcrl
mov
jae
outsl
lods
repz
or
inc
xor
cmpsb
loope
cmp
and
inc
sahf
adc
sbb
les
lea
aam
pop
add
nop
call
lret
in
push
inc
xrelease
inc
xchg
les
cmp
fdivrs
out
push
gs
xchg
or
xor
jl
shlb
mov
aam
mov
lret
pusha
roll
xlat
adc
push
test
mov
fcmovbe
scas
push
xor
lods
jne
or
decl
inc
pushf
xchg
pop
cs
lods
popf
in
adc
inc
inc
stos
mov
neg
push
xor
mov
das
adc
loope
inc
add
shlb
hlt
push
fnstsw
add
push
mov
adc
or
aaa
pop
popf
and
xchg
rcll
cmpsl
pop
out
jl
xor
xchg
nop
and
fs
enter
lcall
or
cmp
or
and
inc
or
sub
ljmp
pop
push
xor
push
hlt
add
xchg
cmpl
xorl
sbb
jae
xchg
js
or
es
cwtl
pop
mov
in
pop
les
xchg
cwtl
dec
xchg
fiaddl
pop
call
adc
xlat
adc
dec
pop
fcmovnb
jle
jns
aaa
cmp
push
mov
das
inc
mov
mov
std
jnp
inc
pop
fwait
push
push
fistpll
addr16
inc
dec
insl
scas
popa
mov
subl
sbbl
ljmp
daa
mov
fs
ja
jl
xorb
mov
pop
inc
imul
sub
and
cmp
mov
in
and
inc
mov
data16
in
lods
xchg
ret
xchg
inc
jge
sbb
nop
loope
xchg
shlb
mov
mov
mov
int3
adc
cwtl
and
outsb
inc
xchg
adc
adc
push
xchg
out
dec
pop
aam
inc
nop
push
es
add
insb
lods
xor
adc
ss
pop
pushf
rcr
rorb
inc
cmpsb
mov
mov
cltd
sub
adc
dec
bswap
xor
mov
and
filds
sub
fldenv
ss
xor
adc
data16
mov
mov
addr16
add
lret
jmp
add
or
adc
sub
js
hlt
xchg
hlt
cmp
aaa
jae
clc
out
and
aaa
clc
cmpsb
cmpsl
rorb
push
es
gs
fmuls
aaa
jbe
jbe
repnz
xchg
ss
cmp
sahf
xchg
mov
pusha
mov
mov
fimuls
out
push
int3
xor
fsubl
lahf
add
fistl
mov
popf
add
out
xchg
lret
out
movsl
mov
mov
or
push
fisubl
lds
enter
scas
loop
insl
jmp
mov
in
push
mov
and
fs
xchg
pushf
jb
icebp
mov
cmp
das
push
adc
add
inc
mov
mov
in
dec
andb
adc
arpl
ds
or
push
inc
cwtl
pusha
xchg
ss
lcall
xchg
pop
jo
xor
pop
mov
clc
mov
aam
test
lods
dec
nop
xor
pop
pop
mov
cmp
test
jo
sbb
icebp
xchg
sbbl
sbb
dec
out
insl
pushf
sarl
pop
mov
adc
addb
fucomp
mov
shr
jg
cltd
xchg
jne
xor
decl
add
clc
add
mov
lret
sbb
ficompl
fwait
adc
xchg
cmc
nop
add
sahf
pop
xchg
rcl
jne
jg
jle
jg
mov
pop
int
flds
rcll
or
lds
push
mov
jecxz
repnz
loopne
xor
in
jns
jnp
sub
leave
loopne
fscale
cmp
cmpsl
xchg
cwtl
ljmp
sub
in
xor
and
xlat
sbb
xchg
out
jns
fisttps
shll
push
fcoml
or
lds
mov
test
jbe
imul
iret
cwtl
rclb
and
push
dec
or
es
imul
movb
dec
bnd
fcompl
fwait
and
mov
inc
repnz
xor
sahf
mov
pop
xchg
pop
jae
out
sbb
repz
nop
xchg
sbb
test
jg
cwtl
lret
adc
addr16
dec
push
ss
ret
clc
fldenv
jl
adc
sbb
test
pop
xchg
xchg
sub
lret
subb
fimull
lock
sbb
sub
mov
loopne
pop
dec
push
lods
dec
testl
in
mov
insb
pop
mov
clc
insl
out
loopne
sub
movsl
movsl
dec
adc
std
mov
mov
sarb
into
sbbb
jnp
movsb
mulb
shrb
in
mov
push
add
mov
shl
sbb
lock
out
mov
push
push
dec
jae
lahf
push
push
push
inc
hlt
fcoml
pusha
cld
lahf
cmpsl
movsb
aam
adcl
shl
adc
push
es
pushf
mov
dec
dec
push
cmp
push
dec
adc
dec
xor
pop
dec
setns
add
inc
jne
jmp
xchg
cmpsl
rcll
adc
jl
mov
push
aam
nop
sbb
test
movsl
enter
inc
pop
lret
in
fcoms
daa
cmpsl
dec
test
mov
lret
inc
xchg
jbe
adc
int3
mov
xchg
mov
inc
adc
pop
hlt
mov
das
pop
and
in
push
adc
jo
lods
add
pop
lock
cmp
sti
into
and
jmp
adc
lds
clc
pop
xor
lods
int
and
dec
lock
push
and
fsubrl
jnp
sbb
xchg
fucomi
mov
lahf
outsb
lock
jb
sub
movsb
mov
mov
push
mov
fstl
mov
data16
test
test
insb
fsubrl
mov
sbb
jmp
call
push
outsb
xor
jp
in
ret
fwait
sbb
sub
jne
push
add
sbb
mov
mov
test
xor
jp
dec
dec
xlat
pop
pop
test
inc
in
or
mov
pop
xchg
fcoms
pop
lahf
fwait
and
fisttpl
or
mov
lret
aam
jb
orb
nop
int
lods
call
push
push
or
test
xor
pop
dec
imul
xlat
addb
fimull
jno
fdivp
dec
lcall
xchg
pop
shl
dec
bound
lods
pop
cmp
xor
or
aam
add
jg
dec
jmp
xchg
test
popf
fwait
inc
jne
or
add
xchg
shlb
pop
xchg
xor
jg
dec
mov
popa
mov
jnp
xlat
jmp
lret
mov
lahf
fdivrl
xor
stos
nop
dec
fistps
or
aam
out
dec
subb
mov
jecxz
cmovns
inc
fistpl
repnz
inc
pusha
loop
mov
pushf
lods
sbb
jo
inc
mov
mov
insb
or
nop
xlat
aad
test
pop
sub
xchg
pop
push
out
xor
shrb
inc
fidivl
test
shlb
pop
xchg
sahf
pop
arpl
xor
int3
xlat
rorb
cwtl
mov
movsb
sub
xor
sbb
test
mov
insb
les
sub
sbb
mov
outsl
cmp
arpl
jnp
sub
xchg
add
pop
xor
pop
test
jg
jnp
add
xor
inc
mov
xor
sbb
gs
ljmp
nop
insl
call
inc
loope
mov
jl
and
xchg
fimuls
inc
nop
ljmp
xchg
jecxz
clc
cmp
dec
stos
add
mov
lods
jge
mov
inc
shlb
and
out
jp
nop
push
ds
lahf
popa
out
loopne
rclb
lods
lea
xchg
daa
nop
xor
ds
xchg
sbb
sbb
xchg
mov
add
out
subb
sbb
lods
push
push
int3
daa
push
enter
in
insb
in
dec
sub
jmp
cmp
and
sbb
out
push
sub
mov
stos
inc
das
adc
fwait
lcall
jg
push
lock
push
or
test
dec
loopne
and
jmp
jl
push
mov
aam
xor
and
movsb
loope
leave
pop
mov
cmpsb
sar
xor
repz
test
fs
push
imul
mov
icebp
gs
outsb
pop
mov
or
aad
fdivrs
inc
fldenv
mov
mov
and
pop
push
add
pop
sahf
lcall
and
pusha
inc
push
jns
stos
call
dec
nop
cmc
jmp
fdivrs
aad
je
dec
fadd
arpl
add
add
sbb
push
inc
cmp
fsincos
add
add
sub
sub
lods
push
jp
es
andl
aam
push
out
mov
lcall
leave
lret
jge
pop
mov
inc
ffree
rclb
mov
adc
push
and
in
mov
lock
jle
das
adc
and
sahf
aad
mov
pushf
adc
xchg
cmc
outsb
and
pop
xor
pushf
fimull
sub
pop
mov
mov
loopne
sbb
sbb
jbe
or
pop
aad
mov
sbb
xchg
js
mov
imulw
mov
movsl
xchg
cmp
test
aas
fistpl
and
and
enter
xchg
ficoms
in
cltd
push
lds
aad
inc
sahf
dec
pop
out
mov
mov
test
pop
fidivl
sub
in
cltd
jmp
sub
ljmp
jns
add
outsl
sahf
jge
lock
sbb
cld
inc
jle
into
in
pop
out
inc
sarb
lcall
add
sbb
sbb
push
test
mov
lahf
mov
mov
jmp
lock
ret
xchg
sbb
in
inc
or
repz
ror
add
sbb
imul
inc
adc
cmp
inc
cmpsb
loope
lods
and
sub
xchg
jne
repnz
test
outsl
xor
orl
cmp
jge
in
sahf
and
and
jb
pop
lods
xchg
dec
hlt
mov
les
movsl
in
inc
xlat
adc
sub
je
add
xor
cmpsl
push
mov
xor
inc
pop
daa
jge
jnp
stos
cmp
test
inc
mov
xor
iret
mov
pop
lcall
cmp
sbb
jge
and
adc
and
sti
cmpsb
and
mov
test
loope
shll
jno
aam
mov
sbb
push
add
std
mov
insb
jb
pop
mov
xchg
push
dec
je
mov
pop
add
push
xor
push
pop
in
dec
add
inc
lock
mov
repnz
sbb
dec
push
imul
mov
sbb
sub
gs
and
jo
pop
stos
icebp
xchg
enter
loopne
dec
imul
mov
xorl
mov
insb
inc
mov
add
into
pop
jae
bound
or
shrl
mov
mov
nop
pop
das
mov
loopne
jnp
arpl
scas
mov
dec
sub
lcall
fwait
int
psubb
pushf
adc
xchg
jge
outsb
lods
rolb
bound
pop
mov
int
fwait
mov
hlt
sbb
out
xchg
into
jecxz
xor
cltd
sbb
adcb
push
fstl
int
aad
paddsw
lahf
jle
bound
movsb
rcll
inc
hlt
push
lret
stos
je
pop
push
xchg
xchg
shrb
leave
cmc
testl
cmp
ljmp
fwait
call
cmp
cmp
fwait
gs
test
jl
divb
pop
jl
sbb
icebp
mov
sbb
and
lcall
dec
mov
leave
mov
fistl
mov
insl
inc
dec
jl
ds
insb
ja
or
and
xlat
lds
push
cwtl
lcall
nop
pop
sub
and
fs
hlt
sbb
or
ret
dec
push
mov
xchg
pop
jne
ss
pop
or
test
push
pop
xor
movsl
addr16
shl
loopne
insl
dec
daa
int3
lcall
jo
mov
push
pop
and
adc
xchg
sbb
mov
rclb
test
ds
das
jb
inc
inc
add
push
mov
inc
int
adc
mov
pop
into
mov
shlb
inc
pop
pop
and
mov
por
aaa
jg
add
push
popa
sahf
or
inc
inc
dec
shlb
xchg
outsl
movl
sub
imul
out
lahf
push
repnz
mov
xor
mov
xor
sub
jge
jbe
mov
and
add
and
sbb
inc
mov
lahf
addr16
lret
aam
adc
andb
ret
jl
fcoms
inc
fstl
dec
je
lret
pop
out
inc
xchg
add
jno
xchg
pop
or
and
sub
adc
lods
xchg
in
cmpsl
stc
xor
sbb
push
mov
out
pop
pusha
rorb
push
push
jns
std
cltd
sbb
movsb
push
mov
mov
mov
aad
in
scas
cltd
inc
rorb
pop
rol
xor
sbb
fdivrs
js
lret
sarl
mov
or
pop
pushf
pop
xchg
shlb
lret
jbe
fwait
es
or
mov
inc
mov
aad
push
xor
xlat
imul
fxch
push
or
adc
add
lcall
inc
xchg
mov
fbld
ss
or
xchg
dec
mov
mov
pop
pop
cmp
mov
insl
xor
cld
arpl
adc
in
and
shrb
lcall
cltd
pop
dec
mov
int3
aad
sbb
adc
imul
in
cwtl
mov
mov
mov
jge
test
nop
es
lret
insb
cld
mov
jecxz
adc
push
add
cmp
add
std
mov
and
out
or
jnp
testb
out
icebp
repnz
pusha
xor
stos
push
imul
jge
insl
in
mov
xchg
dec
aam
loop
inc
pusha
or
ss
orl
nop
inc
sub
les
cmp
js
pusha
es
pop
fists
cmpsb
sbb
jge
mov
push
jg
jae
inc
in
out
repnz
mov
rol
push
imul
movsl
out
ret
xchg
mov
scas
push
and
insl
mov
fcoml
push
dec
push
adc
outsb
loop
mov
minps
pop
pushf
push
mov
shrb
test
dec
daa
pop
insb
outsb
inc
jns
pusha
xlat
loop
adc
test
lods
cmp
sub
outsl
gs
popf
fisubrl
pop
lret
out
mov
adc
outsl
dec
xchg
adc
aam
jb
adc
dec
popf
push
cwtl
std
cmp
add
and
pop
les
and
push
inc
es
xchg
fs
pop
xlat
stc
adc
das
sti
rolb
mov
scas
sub
mov
add
mov
xchg
into
inc
push
ja
pop
cs
icebp
movsl
inc
insl
mov
sarl
leave
sahf
inc
adc
inc
in
arpl
mov
lahf
mov
add
mov
lret
fsubs
adc
sbb
ror
addb
std
andb
push
add
and
andl
lds
mov
js
sub
jae
or
and
dec
ss
lcall
mov
cld
rcl
test
push
mov
xor
iret
sbb
int3
and
bound
popf
pop
enter
pushf
jno
cwtl
sbb
xor
lock
pop
push
and
inc
mov
rorb
ret
or
popl
mov
addr16
xor
nop
lds
rolb
enter
inc
and
aas
insb
popa
loopne
pop
or
sub
jl
movsl
add
xchg
mov
pop
in
shrb
mov
decb
dec
dec
push
sub
aad
stos
es
pop
cld
std
aad
aas
jno
aam
imul
pop
adc
into
call
inc
pop
mov
sbb
int
and
les
callw
ret
aad
in
stos
jns
and
cmp
lret
mov
shrl
xchg
insb
push
ja
loopne
pop
pusha
push
or
mov
xor
jno
decl
test
pop
std
mov
xchg
jmp
add
pop
push
push
dec
pop
cwtl
lret
pushf
add
push
fwait
mov
pushf
std
outsl
loop
aaa
fisubrs
mov
inc
xchg
scas
fistps
jp
and
mov
adc
jnp
icebp
inc
and
jo
jg
sahf
orb
les
push
adc
jl
and
aam
fldt
mov
stc
in
es
pop
xchg
test
sahf
rsqrtps
ds
outsl
mov
daa
loope
adc
xchg
sbb
push
sbb
mov
push
sar
xchg
cmp
lcall
loop
mov
daa
ljmp
rcll
jg
stc
rolb
xor
sbb
mov
jno
fisubrs
addr16
jno
add
mov
rcll
in
pop
aas
mov
mov
cwtl
adc
and
cmp
aaa
pop
jmp
fs
lahf
insl
mov
popf
mov
addr16
sbb
rol
in
mov
inc
push
cltd
sbb
fmul
jo
out
pop
loopne
xor
pusha
jbe
lcall
sub
rclb
popl
and
adc
dec
hlt
and
or
mov
push
mov
xchg
into
lods
mov
sub
or
xor
add
repz
aas
xor
jnp
mov
sbb
lar
sbb
repz
mov
dec
dec
sub
imul
leave
add
add
sarb
sbb
ret
lds
lock
jns
jg
mov
or
add
mov
adc
cli
sub
das
xor
dec
aam
fdivrs
arpl
sarl
jo
mov
test
add
pop
sarb
xchg
loopne
sahf
mov
mov
add
pop
rol
xor
sbb
fadd
mov
rorb
jge
jae
add
lea
popl
roll
movsl
mov
adcb
aam
add
add
mov
js
pop
popf
rolb
xchg
xchg
mov
pop
lods
outsl
sub
push
call
lahf
repz
loopne
inc
cmc
fidivs
or
inc
pusha
xor
jbe
cwtl
jmp
push
pusha
enter
adc
das
incb
adc
xchg
jge
xor
push
mov
xor
iret
pop
ja
movsl
shll
cmp
into
jno
outsl
cmp
icebp
icebp
lock
jge
and
inc
sub
dec
lahf
push
lds
pop
insb
lret
or
push
scas
out
and
push
xchg
insl
lahf
sbb
jg
jns
ljmp
andb
popa
pop
xor
mov
adc
js
push
lahf
adc
mov
xor
sub
leave
and
fdivr
das
das
lock
mov
xor
lds
lret
imul
push
pop
sbb
repnz
shlb
pop
adc
stos
lea
fwait
sbb
and
push
mov
lods
push
je
sub
aaa
inc
xchg
adc
jne
test
mov
jo
in
and
mov
mov
pop
pop
cmp
add
in
out
pop
push
lahf
sbb
lock
adc
mov
sbb
ret
loop
cmp
sbb
imulb
xor
xchg
cmc
pop
pop
sbb
push
loope
add
push
lret
insb
aaa
lcall
popl
leave
push
jno
cwtl
cmp
dec
adc
add
cwtl
adc
adc
push
add
jno
test
xlat
and
fyl2xp1
xor
xor
popf
cmp
mov
pop
or
es
sub
fcoms
fldenv
lock
inc
mov
inc
insb
jg
jb
leave
popa
xchg
out
cmp
adc
jmp
pop
push
in
inc
mov
push
mov
xchg
or
push
fwait
in
sbb
aad
jbe
sbbb
rcrl
inc
pop
and
or
gs
cmp
fildl
inc
xchg
mov
fidivl
in
pop
insb
mov
mov
mov
in
cmp
xchg
lcall
inc
lods
mul
push
mov
push
add
and
xor
pop
sahf
push
out
lea
push
shlb
jnp
xor
mov
dec
out
jae
adc
imul
jbe
adc
mov
incb
jns
xchg
pop
adc
test
mov
pushf
mov
je
out
cwtl
adc
fdivrl
mov
add
mov
cmc
pusha
and
adc
je
add
movb
nop
into
jl
dec
add
roll
adcl
xchg
xorb
ftst
adc
fcompl
pop
inc
sti
lret
adc
and
daa
inc
add
aas
jl
and
push
add
jne
popf
mov
adcl
cwtl
sarb
aad
inc
fistpll
push
jne
lahf
mov
push
jg
or
push
pop
or
sbb
sbb
push
add
and
or
test
nop
dec
push
outsb
sbbb
add
inc
js
icebp
xorl
fldl
lret
sub
push
insb
cld
jno
push
push
sub
repz
pop
xchg
loope
mov
ljmp
xor
push
daa
xchg
fst
xchg
dec
cmpsb
inc
ret
in
mov
sbb
mov
add
out
leave
add
xchg
xor
ja
dec
cmpsb
sbb
add
cmp
imul
gs
ret
mov
imull
scas
fiadds
add
mov
push
push
push
fisubl
sbb
fdivl
cmpsb
jmp
dec
bound
loope
jl
inc
stos
pop
je
push
test
scas
push
sbb
push
sub
pop
adc
sbb
add
scas
or
add
test
push
outsl
push
lret
or
mov
popa
pop
aam
cmp
fsubrl
pop
call
adc
dec
arpl
in
loop
fidivrl
int3
cmp
xchg
loopne
pop
cmp
cmp
jmp
ja
lods
push
jecxz
jns
pop
imul
adc
adc
adc
test
add
pop
sbb
inc
in
scas
xchg
lods
nop
cmp
js
pop
mov
xlat
scas
jne
or
cmpsb
gs
cwtl
or
pop
cmc
mov
bound
insb
xchg
adc
sbbb
popa
jae
xchg
pop
jb
dec
imul
jecxz
and
push
mov
lret
pop
mov
push
cmp
adc
inc
setnp
notb
dec
or
sbb
add
jle
dec
pop
rorb
es
sub
xchg
cmc
add
dec
inc
xchg
xchg
pusha
ror
cli
cltd
xor
push
pop
push
stc
int3
xor
js
mov
mov
ficomps
popl
out
and
addb
and
xchg
xchg
iret
xor
xorl
lahf
push
mov
call
mov
push
jns
cs
adc
push
rclb
subb
push
xchg
mov
adc
ja
mov
xor
dec
add
inc
jnp
push
lock
jecxz
mov
jbe
sar
sub
pop
cmpsl
mov
inc
jae
cmp
pushf
pop
sub
daa
sbb
outsb
pop
bound
xchg
mov
dec
and
out
scas
aam
ret
push
add
dec
xchg
push
jb
mov
rcrb
aas
mov
sahf
pop
fs
add
jecxz
movsl
or
sbb
test
sbb
aas
mov
in
jnp
dec
std
adc
sub
leave
and
insl
dec
shrb
arpl
aad
lea
mov
xor
pop
mov
push
out
stc
sub
jns
mov
rcrl
lret
mov
pushf
in
fwait
inc
dec
sbb
icebp
mov
jge
add
mov
int3
pop
sbb
cmpsb
fwait
test
mov
jnp
adc
cwtl
sahf
mov
push
cmp
movsl
ss
sahf
pop
sbb
jb
adc
add
mov
mov
sbb
cmp
test
push
rolb
mov
es
lcall
and
lahf
aaa
in
sbb
push
dec
xchg
push
rcrb
push
iret
test
adc
pop
test
inc
and
es
shll
jo
xchg
subb
fcom
jno
arpl
frstor
sbb
jp
addr16
jno
cmc
repnz
in
daa
stc
shr
or
mov
sbb
scas
jo
pop
lock
pusha
leave
cmp
push
andb
sub
add
jg
mov
arpl
cltd
popa
aam
rcrb
pop
pushf
popf
or
dec
xchg
dec
xchg
mov
es
lods
test
mov
andl
add
adc
push
int
int3
arpl
sbbl
push
cmp
lcall
test
ror
cs
ljmp
xchg
mov
dec
xor
jb
insl
add
mov
add
call
cmp
adc
jno
pop
xchg
insl
push
ficomps
pop
mov
mov
cltd
push
sar
fistpl
fistpll
in
push
insb
xor
sahf
int
rclb
cmp
mov
in
pop
loopne
xchg
inc
mov
cmp
pusha
stc
push
jne
pop
dec
mov
push
int3
dec
adc
mov
insl
fadds
or
push
outsl
add
adc
inc
jae
test
stc
enter
sbb
outsl
sub
popa
aam
in
mov
jne
adc
testl
popf
fdivrp
nop
lods
ljmp
add
xor
xchg
add
in
jne
dec
xchg
mov
negl
aaa
loope
sub
mov
pop
xchg
sbbb
lods
xor
pop
push
fstp
shlb
sahf
push
adc
dec
loopne
std
add
xchg
lods
sbb
lcall
jbe
es
add
lea
dec
adc
sbb
lock
das
push
hlt
in
aaa
scas
orb
mov
fucomi
sub
inc
jb
fldln2
xor
mov
mov
pop
aas
cltd
ficoml
xor
adc
outsb
test
push
sub
insb
pusha
xor
inc
into
icebp
adc
lea
insl
add
xor
mov
into
jno
add
push
jae
sbb
movsl
addb
fcmovb
push
push
incl
push
je
repnz
aas
cmp
shl
arpl
mov
sahf
pcmpgtw
pop
push
sahf
std
push
pusha
inc
inc
inc
jp
test
cltd
inc
cwtl
xlat
pusha
enter
dec
xchg
pop
std
jmp
aad
lea
push
add
push
pusha
mov
jne
inc
ss
push
mov
data16
pusha
jecxz
mov
sahf
or
in
cli
push
lods
adc
sarb
out
stc
mov
sub
jnp
das
lock
mov
ja
push
sbb
and
leave
hlt
jbe
jne
xchg
hlt
ss
pushf
add
sarl
pop
push
pushf
outsb
add
sbb
out
fs
cmp
jno
inc
loopne
cmp
push
repz
inc
loope,pn
jae
and
std
pop
mov
fs
xlat
cwtl
fcoms
pusha
push
add
xchg
pop
sahf
cmp
int
hlt
pop
jle
mov
pop
sub
jge
mov
adc
add
cwtl
insl
dec
xchg
nop
shrb
sbb
dec
mov
mov
jge
in
arpl
out
pop
ret
std
sbb
int3
shll
adc
lods
popa
lret
andb
or
pop
es
cmpb
pushf
sqrtps
xchg
jno
fs
dec
pop
xchg
mov
mov
inc
aam
popa
adc
mov
adc
push
fbld
enter
dec
mov
ja
js
mov
imul
xchg
mov
andb
and
aas
iret
rorb
pusha
sbb
enter
sub
popf
bound
movsb
movsl
push
adc
fmuls
out
ljmp
mov
movsl
cmp
jmp
andl
sbb
lea
dec
in
stc
adc
sub
popa
subb
clc
sbb
nop
xor
xlat
xchg
xchg
leave
fsts
jae
inc
and
mull
or
xchg
push
dec
xchg
fisubrl
mov
cmp
push
negb
jb
addr16
xchg
outsl
pop
loop
mov
cmpb
test
stos
mov
pop
push
cmp
push
jnp
dec
cmp
mov
jb
insb
adc
mov
mov
xchg
outsl
arpl
jns
inc
dec
mov
mov
movsl
mov
or
jae
loop
jecxz
push
jno
pop
lea
jb
insb
pop
sbb
sub
int3
xor
jge
jno
pop
add
jnp
popa
repnz
sub
jno
mov
rcll
inc
mov
aas
jo
leave
xor
das
cwtl
imul
and
and
push
imul
aam
into
imul
adc
std
inc
mov
sti
lret
push
arpl
fnstenv
sub
cmp
jecxz
jbe
cmp
lahf
loope
push
mov
adc
sahf
push
and
push
or
sahf
in
push
movsb
jo
subb
rcrb
lods
and
sub
jl
xchg
xor
icebp
in
jo
popa
fwait
test
pop
sbb
scas
adc
mov
aam
sub
sub
ljmp
lcall
pop
adc
outsl
and
and
lea
shlb
pushf
xor
inc
lock
cltd
fnstcw
xor
or
mov
xor
inc
insl
sub
jl
ljmp
pop
sahf
mov
insb
jge
fisttpl
imul
std
sbb
inc
add
lock
mov
mov
fmull
stc
xchg
mov
outsb
or
scas
fstpl
pop
and
xor
icebp
test
inc
stos
stos
or
cli
lret
xchg
adc
or
test
daa
mov
lea
xchg
xchg
add
loop
std
clc
pop
aaa
mov
pusha
shrb
lea
xor
js
cmp
mov
popa
jne
pop
movsb
fidivrs
ss
lret
arpl
pop
sub
xlat
rorx
mov
test
cmp
jne
jp
aas
sbb
jno
sbb
xor
push
xchg
xchg
cmp
sub
mov
sbb
and
mov
scas
fsubl
nop
mov
cmp
aad
sbb
sbb
jg
stos
inc
and
pop
dec
push
and
xor
gs
adcb
rcl
pop
cmp
fistps
cmp
xchg
leave
inc
mov
xchg
push
popa
movsl
xchg
in
pop
ss
and
push
icebp
popf
add
inc
lods
aam
sar
jne
mov
or
pop
cltd
jo
bound
sub
hlt
mov
cmpsl
add
jp
mov
pushf
cmc
arpl
inc
xchg
das
push
jbe
adc
or
daa
out
xchg
dec
incl
out
adc
cmp
stos
add
je
sbb
cmp
das
dec
sbb
jne
hlt
cwtl
dec
fdiv
gs
sti
arpl
cmp
fistps
pop
dec
or
xchg
mov
push
lea
in
sub
dec
mov
aam
mov
pop
xchg
arpl
sub
insl
mov
mov
push
push
movsl
dec
and
or
sbb
and
daa
cmp
call
sub
lock
lahf
mov
andl
popa
push
or
scas
outsl
scas
jmp
daa
mov
push
or
loope
cs
pop
xchg
fs
mov
jb
mov
nop
mov
pop
sbb
nopl
pushw
adc
cmc
lock
pop
xor
shl
aaa
xor
adc
pushf
jecxz
lods
ds
mov
movsl
mov
inc
fwait
and
lea
mov
adc
and
sub
pop
dec
or
add
push
int3
nop
adc
push
and
xchg
mov
inc
push
js
shll
push
sbb
orl
clc
mov
leave
cltd
sbb
cld
and
cli
adc
pop
out
test
pushf
call
cwtl
out
mov
cld
outsb
mov
xor
es
inc
cmp
jne
int3
popa
push
push
inc
or
cmp
jnp
pop
jbe
les
lods
aam
xor
into
xor
enter
jne
mov
cmp
and
pop
test
xlat
jecxz
xchg
repnz
lret
xchg
je
dec
popf
dec
out
aaa
sub
cmp
in
jl
push
mov
clc
jo
or
nop
fadd
dec
in
pop
loopne
xchg
push
push
xor
mov
jge
adc
pop
jns
pop
icebp
negl
and
cmp
stos
mov
xchg
mov
inc
jg
pushf
insl
push
test
mov
xchg
mov
adc
mov
mov
pop
das
fisubrs
push
jl
repnz
mov
aam
sub
pusha
rcrb
mov
xchg
sub
mov
inc
nop
pushf
scas
es
hlt
jne
mov
rcrb
xor
pop
fdivr
cmp
sbb
clc
lahf
push
lds
lea
in
xor
mov
fwait
adc
icebp
pop
sub
scas
adc
sub
stc
jmp
mov
pop
pop
adc
dec
and
or
xchg
jbe
nop
xor
sbb
outsl
sub
adc
imul
jb
jg
clc
fsubr
hlt
rcrl
rorb
dec
ljmp
add
addb
mov
ret
push
pop
insl
sub
xor
add
mov
add
push
roll
aas
subb
out
jl
push
cmp
adc
orb
inc
jne
sub
shll
popa
sbb
shlb
fdivr
lea
ss
mov
dec
pop
pop
sbb
mov
add
xor
adcb
push
jp
sti
scas
xor
test
mov
xor
dec
icebp
xchg
loope
cmp
dec
stos
pop
push
sbb
cmp
movsl
insl
jbe
inc
and
stc
inc
pop
das
mov
sub
clc
pop
gs
outsl
cmpb
insl
loopne
jmp
loopne
lcall
sarl
aas
cmc
sbb
xchg
cmpsb
arpl
cmp
imul
xchg
daa
pushf
cld
into
clc
dec
dec
subl
shl
data16
roll
mov
sub
mov
lds
jl
mov
sub
xchg
dec
lock
pop
adc
pop
ficoml
arpl
jae
outsl
inc
adc
sub
imul
dec
inc
pop
dec
push
push
loopne
xchg
loope
inc
stos
and
push
clc
jg
jb
mov
cmp
arpl
mov
test
mov
and
loopne
pop
push
nop
jno
jg
cmp
imul
lahf
ja
lahf
jmp
cli
jne
push
and
imul
scas
sbb
xchg
es
mov
sbb
push
xor
add
dec
arpl
push
outsb
test
jle
cmc
or
rcrb
shll
cli
sbb
jg
mov
mov
movsl
icebp
mov
rcrl
sahf
stc
insb
pop
fwait
icebp
lcall
push
push
pushf
pop
dec
test
pop
pusha
adc
mov
add
or
incl
push
hlt
cmp
addr16
pushl
xor
jle
daa
push
inc
test
sub
mov
faddl
loopne
out
cmp
iret
mov
jle
pop
cwtl
cwtl
ss
and
lods
leave
jne
repz
sbb
ss
cwtl
sbb
pop
shrb
xchg
mov
outsl
inc
cwtl
and
add
imul
pop
lods
and
cs
dec
inc
jo
into
inc
repnz
cltd
ljmp
bound
pusha
inc
sbb
ret
mov
stos
mov
push
lea
out
fistpll
and
push
or
cmp
or
enter
mov
cli
cmpsl
sbb
lea
mov
jl,pt
inc
inc
mov
xchg
mov
jo
lcall
sub
push
test
incb
xchg
rorb
jg
out
outsl
mov
sub
imull
mov
pushf
cmp
jo
rcrb
addr16
pop
dec
outsb
testl
push
cltd
push
das
fisttpll
cmp
repz
rclb
jg
test
fisubrs
push
sub
stos
insb
xor
adc
lods
and
add
aad
xchg
mov
dec
dec
out
or
or
push
test
mov
mov
lcall
popf
cld
std
xchg
sbb
vprotq
mov
xor
inc
mov
cs
repnz
cmp
pop
xor
fildl
xchg
fcmovnbe
aaa
pop
adc
inc
pop
fdivr
cltd
sbb
addr16
inc
pop
pushf
lock
icebp
imul
or
mov
inc
cltd
mov
cwtl
xchg
cmpsb
push
dec
fists
push
and
mov
insb
je
mov
frstor
inc
cmp
insb
sbb
push
in
in
pusha
adc
repnz
dec
out
sahf
add
imul
and
shr
mov
push
cmp
cltd
adcb
cmp
inc
push
and
pop
fxch
and
out
lods
dec
push
or
std
test
into
push
andb
leave
mov
loop
jbe
decb
sub
pop
pop
les
adc
shr
mov
sub
inc
push
shrb
cmp
mov
pop
mov
ds
sbb
jae
pop
adc
adc
insl
jns
lods
mov
fcmovnb
pop
cmp
pop
or
mov
es
popa
add
dec
sahf
and
or
ds
into
cmp
push
insl
lret
sub
test
hlt
dec
add
adc
das
sbb
dec
jnp
sti
lret
jno
pop
xchg
and
jb
jno
mov
pop
cmp
mov
jl
xor
sub
and
or
mov
xchg
sbb
je
push
rcrl
xchg
or
pop
js
fldl
xchg
insb
insl
and
add
aad
sbb
xchg
lret
mov
in
ss
sbb
add
cmpsb
and
adc
cmpsl
stos
sub
mov
or
adc
sar
xchg
mov
bound
cmp
sub
inc
fisubrl
jo
sbb
pushf
push
test
frstor
push
popa
ljmp
sub
lret
xchg
iret
das
jp
and
dec
xchg
pop
dec
lods
pop
outsl
mov
sub
and
addr16
push
adc
jl
pop
jecxz
mov
push
push
dec
push
push
pop
or
inc
rcrl
mov
pop
pusha
lods
jg
pop
das
pop
or
popf
dec
mov
mov
mov
dec
lea
test
push
scas
nop
adc
jp
mov
notb
mov
push
lea
jmp
xor
xchg
cmp
pop
addr16
sbb
mov
sbb
jle
jns
mov
xor
and
fxch
dec
dec
imul
jne
adc
mov
daa
ds
push
lock
lcall
adc
ss
dec
fs
cwtl
scas
data16
dec
jbe
pop
adc
cmp
scas
push
mov
in
mov
cmp
cld
mov
xor
cwtl
iret
shrb
fcmovne
sub
inc
dec
push
inc
dec
and
push
dec
push
xchg
pop
lahf
addr16
lock
sbb
mov
add
pop
movsb
mov
xor
inc
cmp
iret
inc
jb
xchg
xor
sti
fldz
jbe
fisttpl
adcb
fcmovbe
nop
bound
push
jns
mov
movsl
add
pushf
insb
in
je
addr16
std
xchg
call
inc
loopne
xlat
and
popf
push
cld
cwtl
fbld
adc
lea
and
inc
popf
xor
je
dec
ss
mov
push
jle
ret
aad
gs
adc
pop
mov
stos
and
push
inc
jp
repnz
lahf
mov
or
cmc
fidivl
aad
into
push
jl
mov
imul
sbb
rorb
inc
sbb
dec
adcl
mov
bound
sbb
adc
cli
jno
std
vmaxsd
mov
mov
test
icebp
push
cli
push
jge
adc
gs
iret
adcl
sarl
xchg
and
dec
jg
stos
cs
mov
jns
lea
sbb
cmpsb
in
mov
xor
xchg
mov
pop
in
imul
mov
daa
ljmp
leave
mov
js
test
fdivs
fs
shll
dec
into
pop
xchg
xor
xchg
lcall
inc
pop
mov
sbb
pop
dec
push
in
int
shl
cmp
insb
or
dec
and
lds
fsubl
sahf
pop
ss
mov
pushf
dec
cmp
inc
pop
movsb
and
sbb
test
mov
push
or
inc
mov
loope
pop
xchg
inc
adc
in
cli
jns
es
cmpb
sub
sbb
xchg
adcl
dec
jnp
movsl
xor
add
mov
sahf
xor
xorl
out
jp
data16
cmpl
mov
loop
xor
insl
or
in
sbb
xchg
adc
and
mov
leave
jecxz
out
pusha
push
add
bound
les
jle,pn
jns
sub
mov
push
movsb
mov
clc
mov
xchg
mov
dec
xor
push
and
xchg
repz
fwait
test
stos
xchg
push
xor
icebp
inc
jno
andl
inc
xor
ficomps
clc
dec
mov
xchg
loope
out
push
call
mov
xchg
and
jge
rorb
push
jl
icebp
cli
nop
jp
js
lods
xchg
push
aam
mov
mov
jmp
aas
aaa
xor
jno
movsl
and
mov
mov
and
es
jo
popf
repz
es
test
jno
jb
pop
dec
mov
sub
icebp
mov
fwait
test
xor
ret
jp
das
dec
pop
xchg
les
aaa
dec
push
jo
and
dec
jae
sbb
cld
mov
mov
sti
push
dec
or
sbb
insb
xchg
dec
push
jg
xchg
lds
cld
gs
lea
inc
aad
jb
cmp
push
inc
or
iret
es
pop
pop
sub
test
dec
xlat
push
pushf
inc
and
cmc
xchg
push
stc
pop
xor
fidivrs
pushf
push
cmp
xor
loop
test
and
clc
cmp
call
push
mov
jb
xchg
xchg
out
aam
not
pop
fwait
test
arpl
fcompl
fdivp
mov
cwtl
fildll
mov
dec
and
mov
fwait
clc
xchg
jg
push
lock
jecxz
jns
xor
xchg
shlb
rolb
adc
repnz
xchg
insb
pushf
jno
xchg
pop
nop
in
in
repnz
xchg
loope
sub
fisubrl
xchg
dec
iret
cmp
shlb
outsb
and
mov
loopne
push
adc
sbb
cmp
push
adc
aad
cmp
sub
jmp
cld
call
fsub
mov
faddl
xor
out
mov
jbe
lahf
ret
fwait
mov
out
mov
sub
sahf
aas
cmpsb
add
out
cmp
cs
fdivrl
andl
je
and
adc
fdivs
shl
cmpb
push
xor
pop
xor
or
pop
ds
ljmp
daa
pusha
mov
cmpsb
movsl
loope
sbb
and
jmp
mov
iret
mov
or
and
fmul
pushf
xchg
pop
insb
pop
nop
pop
js
fisttpl
or
push
adcb
and
movsl
xor
mov
cmpsb
mov
dec
shlb
sub
jbe
pushf
rcr
pop
mov
pop
mul
xchg
fs
rorb
push
mov
push
inc
jecxz
cmp
cwtl
aaa
mov
fdivrs
arpl
adc
lahf
popf
lods
or
cmp
clc
xchg
cmpb
cmpb
insb
xor
cmp
xchg
in
jmp
xchg
mov
dec
mov
stos
add
popa
sbb
xor
cmp
pop
mov
test
xchg
mov
scas
das
pusha
push
and
mov
and
add
dec
daa
adc
frstor
clc
xchg
jo
push
stos
pop
enter
out
cltd
adc
cmp
add
je
sub
pop
nop
das
dec
insl
adc
dec
dec
cmpsb
rcll
mov
je
in
mov
jge
sahf
aas
sub
test
jae
gs
inc
std
dec
popf
je
dec
out
xchg
push
sub
push
pop
pusha
push
enter
mov
stos
mov
mov
and
loop
outsb
inc
mov
in
das
stos
arpl
nop
push
cmpsb
in
dec
loopne
dec
imul
arpl
ficomps
dec
sub
icebp
mov
add
jo
daa
mov
hlt
stc
dec
lods
pop
sub
and
lahf
pop
sbb
test
xchg
fwait
pmulhuw
sahf
lret
rorl
xchg
xor
jmp
xchg
inc
outsb
insb
ficomps
dec
sbb
pop
and
jnp
lods
push
addb
push
int3
nop
and
mov
imul
mov
cwtl
jmp
cmpsl
pop
shlb
je
aam
dec
sbb
enter
rolb
testl
pop
rcr
mov
adc
popl
mov
or
pop
and
bound
lods
mov
jbe
ss
and
ret
push
mov
loopne
mov
xchg
push
fidivrs
repz
ret
jbe
icebp
xor
and
dec
sbb
int3
push
out
aas
and
inc
scas
std
jge
xchg
push
push
xchg
xchg
pop
xchg
testb
shlb
aam
push
adc
jae
in
push
loop
jbe,pt
xor
aam
dec
pushl
pusha
into
es
cmpsl
ud2
xchg
rcrb
loopne
dec
mov
movsb
xlat
aaa
jnp
testb
push
xchg
inc
xchg
cs
pop
dec
std
xchg
inc
adc
sub
adc
mov
pop
xorb
push
dec
jo
jne
cmp
cmpsb
sub
dec
pop
in
pop
aad
jl
ret
std
cltd
pop
dec
fsubrl
xchg
aas
mov
push
dec
out
out
nop
jg
lock
mov
jp
cs
pop
loopne
in
leave
cmpsb
in
sbb
pop
out
addb
loopne
pop
pop
stos
add
divl
pusha
cli
lock
scas
out
pop
movl
imul
sarb
cwtl
mov
mov
xor
dec
arpl
push
rorb
mov
mov
or
int3
cwtl
sub
cld
pop
jge
sbb
cmc
mov
add
rol
ds
popf
jmp
xor
ss
rorb
cs
loopne
adc
fisubl
movsl
mov
adc
or
adc
repz
pop
fsubrl
mov
jecxz
sub
and
xlat
hlt
sbb
jo
add
bound
mov
mov
js
in
cld
fs
ret
push
xchg
cli
std
mov
into
mov
in
out
roll
sbb
dec
push
cltd
negb
dec
sub
mov
pop
ficoms
xor
out
ja
xchg
stos
dec
sbb
pop
addr16
pushf
jne
pop
lret
popa
stos
pop
into
aad
cmp
inc
shl
xor
cmp
mov
adc
dec
pop
push
xor
test
sti
cmpsb
lock
mov
inc
pop
mov
repz
int3
push
add
dec
mov
add
and
push
or
cltd
pop
popa
popa
lods
xor
les
enter
xchg
data16
sub
jecxz
ja
sub
out
adc
fwait
test
rcl
mov
jmp
popa
jbe
mov
lahf
push
in
in
sahf
push
aad
fdivp
inc
gs
mov
adc
push
push
jmp
gs
mov
leave
xor
call
sar
loopne
sbb
shlb
iret
in
or
push
add
outsl
insl
pusha
mov
loop
imul
fs
adc
shll
inc
and
inc
jecxz
das
mov
and
mov
cmp
push
rclb
popf
push
pop
push
lcall
ja
mov
in
jbe
mov
imul
rcl
or
mov
inc
cmp
sti
insb
sbb
pop
stos
push
cmp
insb
scas
enter
push
sbb
sub
popf
out
ret
xchg
stc
mov
xchg
fs
xchg
jb
mov
push
inc
cli
push
imul
popf
and
xchg
pop
jl
pushl
hlt
jns
fmul
dec
out
ss
dec
shr
sbb
test
into
jl
adc
jae
push
xor
les
jmp
fs
dec
push
cmp
in
mov
or
dec
dec
pop
adc
sub
insb
fldcw
mov
xchg
sub
stos
daa
or
cmp
xchg
xlat
inc
in
xchg
jge
dec
xchg
into
inc
test
push
cltd
loop
cwtl
insl
call
push
popf
cmp
fbld
loope
or
and
or
dec
dec
mov
fs
jnp
pop
std
xor
ret
int3
xchg
fisttpll
xorl
ljmp
repz
es
out
enter
hlt
cmp
mov
stos
aaa
jecxz
pop
test
aas
inc
lds
sbb
js
mull
xchg
aas
lods
sahf
test
popf
jno
divl
pop
xchg
fdiv
mov
fidivs
mov
cld
subl
mov
lds
jae
pop
das
pop
mov
pop
shrb
lods
adc
lret
sub
inc
add
bound
adc
push
dec
cmp
xchg
pop
sbb
push
jnp
push
mov
pop
push
dec
pop
orl
je
in
inc
stc
jge
les
nop
leave
jge
fstps
mov
pop
cmp
icebp
jbe
ret
cmp
lock
pop
mov
fwait
push
mov
fidivrl
mov
sbb
hlt
lcall
jg
fstpl
ja
dec
jne
jae
nop
mov
clc
fsubrs
and
push
in
mov
movsb
add
inc
insb
repnz
cld
sbbb
adc
cmp
jg
jae
inc
dec
xlat
pusha
add
enter
xor
sub
xchg
jns
cwtl
push
rdpmc
sahf
push
sbbl
sahf
aam
subl
fsubrs
xlat
push
mov
mov
mov
sbb
in
sahf
xchg
pop
rcrb
cld
adc
rcl
jb
mov
ja
sbb
fs
ds
and
je
adc
aam
pushf
jecxz
cmp
add
mov
jo
pop
sub
mov
xchg
inc
les
testl
push
mov
movsb
loope
jbe
sbb
push
adc
cmpl
inc
sbb
mov
and
fistpll
sub
dec
lock
sub
push
push
mov
or
add
jge
bound
xchg
adc
jns
dec
jne
cmpl
shll
loopne
test
insb
sbb
stos
cmp
popa
mov
inc
sub
sar
bound
ss
aad
add
icebp
punpckldq
adc
fcom
dec
xchg
jecxz
pop
int3
fisubl
xchg
lret
mov
add
mov
push
rcr
jb
aas
xchg
iret
cmp
cwtl
and
and
pop
and
pop
cmc
mov
shrl
push
xchg
add
dec
rcl
push
inc
jecxz
popf
gs
sbb
ret
cmc
adc
mov
lret
pusha
mov
fiadds
mov
aas
inc
dec
lahf
pop
xor
rep
movsb
cmp
dec
aad
rcrl
lcall
and
jbe
jno
dec
and
lods
push
adc
and
loopne
push
dec
xor
sbb
cwtl
dec
lcall
adc
imulb
popf
dec
mov
dec
jle
xor
sub
add
add
mov
push
ficomps
push
mov
push
pushf
adc
jae
lahf
out
adc
lods
cmp
pop
cmp
je
push
lahf
push
je
ja
or
arpl
push
js
rolb
dec
mov
pop
xor
sbb
fistps
je
mov
xor
or
pop
xchg
outsl
fs
roll
push
sub
lret
cmp
ficompl
xchg
int
out
ss
or
pop
xor
nop
imul
xlat
inc
stos
jne
ss
fistpll
repnz
push
dec
push
pop
dec
mov
xor
inc
dec
das
cmp
xchg
push
fists
xchg
push
pop
bound
adc
xchg
push
inc
std
pop
lahf
ds
pop
sahf
xchg
clc
jg
in
jg
cs
sub
adc
notb
mov
lahf
mov
sbb
jp
insb
mov
aas
pop
mov
adcl
out
int3
movsl
lds
mov
push
je
jo
repnz
dec
xor
xchg
mov
int
jb
int3
push
push
test
in
das
imul
xchg
mov
cli
xor
loope
insb
jmp
ja
push
jge
dec
sbb
and
iret
hlt
inc
lock
sbb
xlat
push
jns
lahf
xchg
sbb
add
mov
insl
pushf
daa
adc
push
or
fldpi
cld
push
cmp
xchg
xchg
mov
push
mov
mov
mov
xchg
nop
add
mov
push
dec
xchg
iret
jbe
push
ljmp
jge
addl
pushf
cli
push
pop
pop
ret
inc
dec
cwtl
fcoml
std
loop
int
push
and
lret
data16
inc
int
fdivrl
mov
repnz
mov
adc
jno
inc
sbb
scas
pushf
sbb
mov
loopne
push
cmp
and
pusha
push
gs
jo
add
sub
add
adc
or
push
inc
jnp
into
push
or
aam
mov
insl
pop
aad
inc
orl
push
and
arpl
jb
xchg
roll
movsb
pusha
shrb
xor
pop
mov
andb
add
das
sbb
insl
les
push
fldl
les
int3
sub
int3
cli
push
mov
sub
jbe
stos
subb
push
jo
adc
xchg
lods
test
cmpsb
push
xor
mov
iret
xchg
mov
or
xlat
mov
add
sbb
push
lret
inc
mov
mov
mov
and
mov
xchg
cld
push
int3
std
mov
bound
ret
pop
arpl
hlt
cmp
adc
fdivrl
lcall
xchg
lods
bound
into
mov
in
pop
add
add
xor
sbb
pushf
lret
mov
nop
lahf
inc
mov
les
pop
dec
out
xchg
sub
mov
xor
dec
xchg
and
je
cli
push
cmc
mov
int3
mov
sbb
xchg
lahf
inc
fmul
lret
xor
xchg
jp
andb
test
bound
sub
and
jae
pop
push
xor
push
sti
std
pop
xchg
add
jo
sbb
xchg
insb
xchg
jg
add
jnp
pop
mov
je
pusha
mov
cmpsl
sub
xchg
and
dec
aaa
arpl
cmp
push
nop
adc
ds
adc
cmpsb
cmp
sub
les
xchg
mov
pop
mov
push
stc
or
lods
mov
cmp
push
mov
repz
ss
xor
sub
push
add
aad
dec
push
mov
js
out
and
fwait
and
xor
pop
sub
pushfw
lret
movsl
roll
or
repz
divl
add
gs
pusha
movsb
sbb
add
arpl
mov
lcall
sub
add
xchg
push
jae
cmp
push
and
rcl
cmp
jno
add
gs
xchg
pop
sar
push
lea
push
cltd
lahf
cmp
ja
fisubrl
movsl
into
imul
dec
scas
sbb
fdiv
push
xchg
nop
xchg
xor
sub
push
std
clc
int3
in
cmp
loopne
insb
pop
mov
cmp
cmpsb
mov
add
cmp
daa
push
lahf
ficoml
fcoms
repnz
sbb
pop
les
sti
divl
push
and
lret
mov
mov
icebp
mov
push
sbb
lcall
jnp
mov
push
bound
sti
push
push
mov
adc
je
and
push
fldenv
xor
test
add
lods
pop
cmpsb
sbb
jg
out
cmpsl
nop
hlt
pop
jg
int3
cmpsb
jo
mov
je
mov
push
je
or
and
xchg
ficoms
mov
dec
jbe
sub
cmpsb
pop
fdivl
out
push
rorb
mov
popf
xor
testl
sbbb
pushf
xchg
fsubp
mov
jecxz
sahf
pop
mov
jno
mov
aas
jbe
mov
xorb
or
ror
aas
push
nop
je
xor
cs
jne
pushf
popf
adc
jbe
fisubs
cmpsl
sti
fs
nop
scas
ljmp
inc
loop
xchg
test
pop
mov
add
outsb
cmp
xchg
sub
aad
pushf
cmp
or
ror
das
push
lcall
sub
xor
loopne
ljmp
push
mov
inc
ficoms
fstps
mov
dec
pop
movsb
xor
push
mov
cwtl
jns
arpl
mov
mov
cmp
jno
les
xchg
dec
imul
sbb
mov
and
pop
push
fmuls
je
ret
ficompl
xchg
and
popa
ret
dec
mov
mov
fcmovnb
stos
movsl
rcrb
cmp
icebp
xchg
scas
xor
repnz
sbb
pop
in
mov
pxor
imul
bound
jl
lea
xchg
mov
fdivr
cld
gs
pop
push
inc
mov
push
pop
rorb
fs
adc
repz
pushf
pop
lock
xchg
hlt
cmc
dec
dec
notb
stos
ljmp
aad
fwait
jnp
icebp
stos
push
or
testl
cld
pushf
jns
push
dec
pop
sbb
scas
lcall
dec
and
repz
mov
dec
aad
push
cwtl
int
xchg
jb
adc
sbb
sbb
in
cld
es
push
repz
jle
lcall
inc
and
in
call
push
push
push
sbb
fs
loope
addr16
push
mov
nop
imul
push
outsb
fcomps
pushf
out
pop
mov
mov
arpl
mov
insb
sub
pop
xchg
add
inc
pop
cwtl
rcr
sbb
int
adc
pusha
clc
lret
cmpsl
xor
rcll
inc
stos
adc
gs
jge
aas
int3
sbb
jbe
out
push
add
ret
fisubs
bnd
movsl
cwtl
mov
add
cmpsl
mov
loopne
shr
add
pop
shll
dec
scas
int3
sbb
aam
push
jmp
xor
or
push
jg
icebp
jnp
rcr
lret
inc
pop
outsl
xlat
pop
dec
fnstsw
testb
pusha
cli
sbb
and
sbb
movsb
mov
outsb
jecxz
iret
adc
or
mov
and
cltd
or
int
fs
addb
jns
adc
shrb
stos
sbb
push
sbb
outsl
cwtl
lcall
dec
decl
nop
fiadds
pop
pop
rcrl
mov
mov
sub
loope
dec
pop
aam
pushf
xor
leave
mov
enter
daa
mov
xchg
adc
push
and
loopne
movsl
mov
fstl
jge
dec
je
sbb
fs
clc
fwait
inc
sub
mov
dec
mov
ret
xchg
gs
xor
mov
setp
cli
aad
mov
shrb
xor
cwtl
sbb
push
cmpsb
xchg
movsl
jne
inc
or
add
in
call
sub
adc
mov
sub
push
sbb
sarb
div
fs
das
xchg
push
jbe
enter
into
andl
enter
es
insb
mov
add
mov
inc
test
insb
scas
push
xchg
in
mov
js
sahf
lock
xor
push
pushf
js
test
dec
and
and
xlat
arpl
mov
in
sbb
repz
push
push
add
mov
sbb
shrb
int3
sub
jo
pop
xchg
inc
xor
in
in
dec
push
mov
mov
repz
movsl
push
scas
xchg
mov
call
imul
and
fadd
push
mul
repz
adc
adc
adc
xor
int
outsl
lea
clc
push
dec
daa
adc
in
bound
xor
and
lods
shl
jo
pop
mov
lock
movsl
int3
fcoml
in
cs
xor
mov
adc
adc
loop
jle
mov
mov
xchg
rorl
nop
adc
sub
sub
dec
push
stos
addr16
xchg
push
out
cs
xchg
dec
aam
xchg
push
test
clc
pop
cs
stos
and
fs
stc
stos
and
in
mov
pop
shl
cmp
pop
sub
mov
out
fcoml
jns
dec
dec
xchg
imul
mov
mov
mov
in
push
jl
aad
sarb
clc
mov
loop
cli
cltd
jne
fimull
mov
mov
sti
push
cli
das
pop
and
aaa
pop
xor
inc
pusha
sub
cwtl
sbb
rcll
stos
inc
sbb
xchg
mov
sbb
adc
pop
cmpsb
add
dec
and
out
push
xchg
dec
aaa
fmuls
sbb
imul
gs
sub
bound
fwait
add
repnz
inc
jp
mov
inc
jmp
adc
ret
andb
pop
clc
stc
mov
push
cli
rcr
fsubrs
and
xor
pusha
iret
in
sbb
lret
insl
js
stos
dec
push
aaa
std
push
push
cmpsl
cmp
push
mov
fdivrl
mov
int
sbb
sbb
aad
sbb
inc
jne
cmpb
lds
jno
in
insl
jg
mov
ds
push
les
or
or
add
mov
scas
ja
xor
sarb
daa
fsubl
pop
xchg
push
dec
cld
jmp
ja
cmp
mov
daa
and
and
mov
sub
dec
aam
pushf
push
inc
push
int3
mov
int
lret
jbe
inc
cwtl
mov
adc
inc
dec
rcl
mov
inc
jbe
adc
sub
mov
outsb
sbb
xor
xorb
es
fwait
add
mov
fwait
push
test
cltd
add
das
cmc
xor
fildll
aam
xor
les
push
add
pop
sbb
jmp
jns
movsb
and
xchg
push
lock
ret
xor
jno
push
cltd
fdivrl
lock
xchg
xchg
mov
pop
mov
arpl
pop
aam
loopne
andb
pop
push
out
in
jp
in
pop
call
mov
repnz
loopne
imul
mov
inc
push
fwait
xchg
pop
push
fcomps
xchg
paddusb
push
push
and
xor
push
xchg
pop
inc
lea
in
sub
pop
mov
jb
gs
inc
xor
jecxz
pop
out
shlb
xchg
out
fsub
adc
fstpl
dec
sub
stos
and
adc
shrb
arpl
je
push
imul
cli
push
sarl
dec
adc
lds
rcrl
repz
sub
fndisi(8087
aaa
repz
push
mov
adc
push
xchg
loop
mov
add
daa
lcall
rol
mov
out
xor
xor
and
mov
and
inc
int
push
adc
pop
adc
mov
ds
adc
lahf
cmp
jne
pushf
xchg
xchg
and
scas
sub
stos
lahf
and
xlat
fsubrs
push
push
cmpsl
cmpsb
lahf
adc
imul
sbb
xor
lods
aam
pop
lods
lret
outsl
jns
add
out
add
loope
and
int
call
mov
imul
sarl
fldenv
push
mov
cmpsl
add
inc
jno
addb
lahf
and
pop
push
shl
pop
sahf
into
and
mov
pop
cmp
jae
int
jmp
rolb
cld
pop
adc
cmpsl
ficoms
pop
lret
add
popf
inc
fs
sbb
faddl
call
cltd
add
call
or
cmp
push
and
loop
loopne
dec
add
mov
push
daa
lock
or
sub
mov
lcall
jmp
lock
dec
fs
xor
xor
lcall
inc
mov
mov
xchg
xchg
in
cmp
xchg
sbb
cli
or
sub
adc
fidivl
cmp
adc
jecxz
cmp
jae
insl
adc
push
mov
jmp
mov
subb
xor
add
daa
insl
xor
sahf
mov
pop
push
push
insl
jb
adc
loope
clc
xchg
jle
outsl
and
stos
xor
push
jp
and
addr16
xchg
mov
jnp
adc
out
fbstp
xlat
or
lret
xchg
mov
xor
add
fsubrp
jg
fdivp
clc
add
cmc
push
xor
push
daa
mull
fldcw
pop
loop
or
xchg
cld
cmp
in
aam
clc
jne
gs
popf
xchg
imul
stos
test
fistps
nop
int
mov
xchg
test
fisubs
stc
jne
fs
jb
sti
into
and
imul
fcoms
add
call
gs
cwtl
pop
lock
cmp
sub
inc
jecxz
pushf
fidivrl
lods
arpl
lahf
in
jb
dec
sub
es
push
cmp
sub
bound
dec
loop
xchg
jp
test
test
loop
popl
mov
test
jecxz
subb
int
xor
mov
jmp
mov
and
js
mov
jne
dec
push
insb
stos
leave
lods
sarb
scas
sbb
add
jecxz
inc
adc
adc
iret
ljmp
rcrb
sahf
add
sub
call
jle
addr16
test
out
es
aad
ret
call
mov
movsl
fistps
xchg
sub
jmp
fnstenv
out
jle
pushf
popa
mov
cmc
add
aam
mov
mov
loope
ds
mov
pushf
into
aaa
xor
fistl
mov
jnp
pop
or
jno
mov
out
pop
mov
mov
imul
movsl
hlt
outsl
inc
pop
in
in
inc
adc
xchg
rcll
cmc
cbtw
adc
out
fcomp
fstps
cli
fwait
adc
cmp
push
test
movsl
in
insb
lret
push
scas
mov
frstor
xor
mov
push
inc
fmul
and
jb
and
lahf
fisttpll
insl
sub
xor
mov
rcrb
inc
js
orb
push
jae
rorb
push
es
jns
and
orb
sub
xchg
ss
push
sbb
int
dec
cmp
mov
mov
repnz
stos
stos
stos
js
xor
ja
jl
cwtl
push
push
subb
aam
mov
fsubl
test
pop
push
insb
lods
cmp
mov
popf
pop
sbb
dec
and
repnz
jl
repnz
mov
frstor
jnp
or
and
and
insb
mov
aas
push
pop
inc
xor
pop
inc
je
sub
and
or
ja
mov
or
out
lahf
adc
sbb
dec
inc
pusha
aam
ret
testl
es
and
dec
gs
pop
adc
or
dec
or
hlt
xchg
mov
insb
mov
pop
dec
insb
xchg
rcll
adc
xchg
in
jnp
xlat
sbb
rcl
push
bound
mov
sub
push
int3
dec
das
pop
push
into
das
clc
inc
pop
jge
loop
aas
iret
jbe
inc
dec
pushf
dec
mov
imul
or
loopne
add
ret
and
adc
aam
mov
jmp
sub
icebp
inc
mov
sahf
pop
clc
push
icebp
push
mov
cmp
cwtl
rcrl
icebp
jle
or
mov
jo
hlt
jecxz
mov
insl
cmc
jnp,pt
jae
outsb
daa
cmpl
pusha
aam
cmpsb
and
adc
lods
test
rorl
sub
or
sbbb
es
mov
add
sbb
mov
lret
addr16
std
imul
cmc
push
mov
xchg
cmp
and
mov
push
dec
jecxz
mov
arpl
cmpsb
xor
add
sub
jg
imul
mov
inc
push
sub
lods
movsl
fwait
xchg
jo
loope
jl
mov
loop
inc
sti
or
stos
and
lea
das
push
jo
cmp
xchg
cmc
dec
mov
pop
pop
mov
mov
call
lea
xlat
jmp
cwtl
mov
mov
cltd
lahf
lahf
cmc
mov
cli
mov
outsl
sub
jge
gs
rclb
iret
cmpsl
clc
cwtl
sub
loop
jb
add
dec
pop
pop
in
or
fidivl
insl
aam
xchg
cmp
jl
leave
out
xor
add
cmp
pop
mov
out
sbb
adcl
pop
xor
lea
call
roll
push
gs
jbe
cmp
shll
loopne
push
inc
and
enter
shrb
mov
xlat
sbb
mull
rcrb
jmp
inc
fwait
sub
sbb
and
adc
mov
pop
out
adc
xor
shl
aas
and
jmp
push
adc
movsl
aad
pop
xchg
ret
idivl
xchg
mov
popf
call
push
leave
sub
call
andl
sarl
lret
int3
fistl
rorl
shll
call
out
outsl
push
pop
lret
js
mov
pusha
scas
cmp
mov
jo
ss
jne
sub
jle
fldcw
lcall
xchg
aas
in
xchg
jg
adc
push
push
ret
lret
mov
ret
testl
mov
cmp
xor
dec
lcall
pop
mov
popa
es
nop
sbb
pop
jecxz
sti
pop
popa
sbb
popa
mov
leave
sbb
adc
imul
dec
pop
sbb
xchg
mov
fildll
pop
xchg
push
xchg
aad
pop
mov
sbb
in
shl
ja
lahf
push
sbb
test
scas
stos
insb
mov
add
xchg
popf
lods
sahf
xchg
movsb
fisubl
arpl
xchg
lahf
cmp
adc
push
and
dec
ret
jbe
test
dec
push
pop
xchg
push
mov
test
jbe
xchg
sbb
js
in
mov
loopne
xlat
and
clc
sti
or
push
sub
jno
js
sub
dec
sbb
out
sbb
and
int
push
mov
and
es
add
sbb
jne
je
mov
fidivs
in
ja
adc
cmpsl
fisubs
cmc
push
aam
mov
fstpt
addr16
adc
xchg
sub
mov
pop
fwait
adc
sbb
jl
fildl
or
mov
std
in
notl
and
data16
or
sbb
insl
adc
adc
pushf
add
int
mov
test
dec
aad
xor
cmp
sub
iret
mov
inc
adc
rclb
fs
push
repz
enter
sbb
mov
jl
aam
les
and
and
std
xor
shrb
jno
xor
adc
rcr
gs
iret
sub
shll
adc
int
mov
jbe
nop
std
mov
jg
push
xchg
movsl
addr16
lcall
stos
push
fcoml
nop
sbbl
scas
pushf
sub
sbb
xchg
mov
mov
addr16
test
push
mov
dec
adcb
mov
in
inc
mov
xchg
xchg
lcall
pop
mov
push
mov
xorl
aas
in
clc
adc
jge
push
and
or
adc
sbbl
lods
inc
fs
and
mov
xchg
xor
add
cmp
sti
mov
std
idivl
in
loope
iret
pop
push
push
stos
push
xchg
scas
int3
dec
test
rorb
icebp
pop
pop
pop
fcoms
jle
test
data16
insl
mov
adc
ss
adc
jb
test
xchg
inc
ss
int
outsb
mov
imulb
pop
fsubl
inc
lret
dec
mov
cmp
sarb
inc
adc
add
add
dec
xor
ja
and
mov
sub
push
add
lret
dec
xor
in
seto
in
cmpsl
dec
sbb
sub
mov
sbb
sbb
sub
adc
pop
shlb
fstps
mov
jno
add
sub
fs
int
bound
inc
cwtl
test
adc
dec
out
jnp
les
inc
inc
rcl
pop
xor
in
xor
sahf
dec
push
mov
pop
xchg
and
mov
test
xchg
addb
loope
xchg
sti
jne
js
in
inc
sub
orb
sbb
push
mov
loop
je
sahf
adc
adc
js
jl
arpl
push
sub
or
jae
lcall
jo
add
insb
cmp
fldl
mov
outsb
and
sub
jl
in
test
test
mov
in
ja
adc
fcmovnb
dec
lods
cltd
std
psadbw
rclb
cltd
and
fcoms
xchg
adc
cld
arpl
cmp
xor
rolb
add
mov
or
aas
adc
xchg
aad
fstl
fldenv
in
sub
add
pushf
outsl
push
nop
mov
aam
xchg
add
add
fldcw
je
ss
roll
rcrb
lcall
sub
lods
idivl
js
nop
adc
push
sbb
mov
cltd
scas
pop
xlat
js
pop
and
lcall
xchg
push
jae
bound
fwait
lods
sub
fwait
daa
in
jl
leave
pop
sub
dec
jnp
cli
imul
in
mov
lret
mov
fdiv
add
xchg
rol
jo
and
push
push
shlb
xor
cmp
mov
adc
add
xorb
sbb
xchg
bound
lret
outsb
xchg
cltd
scas
adc
xor
xor
xchg
push
push
out
leave
int3
aaa
inc
pop
xchg
jne
scas
sub
aam
out
sahf
je
daa
sbb
and
inc
jle
jno
adc
xor
sbb
movsl
push
mov
xchg
lea
cltd
out
mov
sbb
xlat
push
sbb
sbb
push
xchg
xor
shrl
mov
xchg
jo
inc
xchg
dec
cmc
pushf
sub
mov
cld
in
push
fmull
pop
rcll
mov
out
xor
xor
jo
xorl
orb
test
pop
mov
adc
add
lahf
cmp
sbb
mov
lcall
inc
mov
cmp
popa
push
mov
add
in
inc
dec
adcl
les
mov
sbb
loopne
or
xor
addr16
lds
sbb
mov
xlat
and
dec
inc
add
mov
icebp
inc
xor
sti
sbb
and
push
cmp
xor
pop
popl
xor
jns
xchg
lods
mov
sbb
push
mov
lret
sub
mov
push
aam
jo
test
push
nop
pcmpgtb
js
sub
lcall
icebp
pop
inc
int
ret
sbb
leave
xor
nop
push
xchg
xchg
lods
sbb
fs
dec
push
and
cmp
jno
pop
fldenv
xchg
jg
dec
jbe
add
jne
div
mov
repz
test
in
outsl
pop
dec
sti
xor
imul
fcoml
and
ret
loop
push
xor
xchg
sbb
repnz
stos
xchg
cmc
sub
lea
popf
sbb
sub
pushf
jb
insb
dec
jle
cmp
lods
pop
cwtl
test
jo
mov
leave
adc
add
ss
mov
dec
lods
out
mov
and
in
arpl
in
mov
push
or
fcmovne
and
cmpb
int
mov
gs
enter
dec
and
cli
out
int
jb
push
xchg
inc
out
or
dec
push
jg
dec
xchg
cmp
daa
mov
push
jb
aaa
mov
sbb
cs
jae
mov
imul
notb
xchg
loopne
add
icebp
and
and
int
loope
fistps
imul
adc
xchg
push
shl
mov
lods
das
scas
lods
faddl
cmpb
jo
iret
sti
daa
ret
test
cmp
sbbb
and
add
inc
mov
add
add
add
jb
add
add
add
mov
add
scas
mov
add
mov
add
mov
add
mov
add
mov
add
add
cmp
add
add
pop
mov
add
add
xorb
lods
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
push
mov
add
add
push
add
xorb
add
add
shlb
add
cld
mov
add
add
add
mov
add
mov
add
add
add
add
push
mov
add
add
add
jp
add
add
add
xchg
mov
add
mov
add
add
add
mov
add
mov
add
add
add
mov
add
add
add
add
add
add
je
add
sub
add
xorb
add
add
add
add
or
add
and
add
int3
mov
add
add
xor
add
loopne
add
mov
add
lock
add
add
cld
mov
add
mov
add
add
mov
add
mov
add
mov
add
add
push
mov
add
add
jb
add
add
add
mov
add
scas
mov
add
mov
add
mov
add
mov
add
mov
add
add
cmp
add
add
pop
mov
add
add
xorb
lods
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
push
mov
add
add
push
add
xorb
add
add
shlb
add
cld
mov
add
add
add
mov
add
mov
add
add
add
add
push
mov
add
add
add
jp
add
add
add
xchg
mov
add
mov
add
add
add
mov
add
mov
add
add
add
mov
add
add
add
inc
push
xor
cs
dec
dec
add
add
push
imul
popa
jae
push
add
add
inc
gs
insb
addr16
je
insl
add
add
inc
gs
imul
outsl
arpl
add
add
jae
push
jne
je
gs
popa
add
add
data16
je
arpl
add
push
gs
jae
addr16
add
add
inc
gs
popa
jo
jne
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
add
inc
gs
gs
imul
add
inc
imul
inc
imul
outsl
popa
fs
imul
add
add
inc
gs
outsl
fs
gs
imul
add
add
inc
gs
inc
dec
inc
push
add
add
push
jns
je
insl
push
imul
insb
gs
imul
inc
gs
outsl
arpl
gs
outsb
outsw
push
add
add
inc
gs
je
imul
push
add
add
dec
outsb
imul
inc
jb
je
arpl
push
arpl
outsb
add
add
gs
add
push
imul
insb
insb
outsl
arpl
add
add
outsl
bound
inc
insb
insb
outsl
arpl
add
inc
gs
outsl
insl
insl
popa
outsb
fs
imul
dec
inc
dec
popa
jo
je
imul
add
insl
imul
outsl
arpl
jae
add
add
je
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
push
jne
jb
push
gs
outsl
jb
popa
outsb
arpl
outsl
jne
je
jb
add
inc
jb
popa
je
push
push
add
add
push
gs
popa
jae
inc
jb
outsl
jb
add
add
jne
inc
jb
popa
imul
add
inc
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
inc
gs
popa
jae
inc
jb
outsl
jb
add
add
push
popa
insb
imul
add
add
fs
gs
jne
arpl
add
add
je
jb
arpl
fs
jae
add
add
push
je
push
outsb
ja
outsb
add
add
je
jbe
outsb
je
add
add
je
jb
outsl
arpl
fs
js
push
add
add
je
jb
outsl
arpl
fs
outsl
insl
jo
jb
inc
js
push
add
add
inc
insb
outsl
jae
dec
popa
outsb
fs
add
add
outsl
bound
inc
jb
add
add
inc
gs
jns
je
insl
inc
imul
jns
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
dec
outsb
je
jb
outsl
arpl
fs
arpl
insl
outsb
je
add
add
je
outsl
outsb
jae
insb
gs
push
add
dec
push
push
inc
push
push
cs
dec
dec
add
add
pop
pop
jo
pop
insw
outsl
fs
add
pop
popa
insl
jae
pop
gs
je
add
add
arpl
inc
imul
push
inc
push
dec
xor
cs
dec
dec
add
add
inc
jno
popa
insb
push
imul
addr16
jo
outsb
dec
gs
add
add
addr16
jo
outsb
dec
gs
js
add
add
addr16
outsb
jne
dec
gs
js
add
dec
xor
cs
dec
dec
add
add
gs
je
push
outsb
add
add
je
imul
add
add
gs
je
push
popa
insb
gs
add
inc
xor
cs
dec
dec
add
add
gs
outsb
imul
imul
dec
push
dec
inc
inc
jb
insl
push
je
imul
push
dec
dec
dec
cs
dec
dec
add
add
jb
jne
jb
push
popa
insb
jne
inc
add
add
adc
push
mov
sub
cmp
jne
or
jne
cmp
je
cmp
je
mov
and
je
and
jne
lea
mov
cmp
jne
push
call
or
jne
push
call
test
jne
mov
mov
and
jne
xor
test
jne
mov
and
je
xor
mov
test
je
cmp
je
mov
mov
and
jne
and
jne
cmp
jne
mov
and
je
mov
mov
mov
cmp
jne
mov
xor
or
je
or
je
cmp
jne
cmp
jne
mov
cmp
je
cmp
je
and
jne
cmp
je
mov
mov
mov
test
jne
mov
cmp
jne
cmp
je
mov
and
jne
pushl
call
cmp
je
cmp
je
mov
push
call
cmp
jne
cmp
je
mov
push
xor
mov
cmp
je
mov
push
mov
mov
lea
mov
push
mov
mov
pushl
call
test
jne
mov
lea
mov
mov
and
je
xor
mov
mov
mov
pushl
call
cmp
je
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
mov
pushl
call
or
je
mov
mov
pushl
call
cmp
je
mov
mov
cmp
je
mov
xor
mov
mov
pushl
call
cmp
je
mov
mov
cmp
jne
push
call
cmp
je
mov
lea
cmp
je
pushl
call
and
jne
push
call
or
jne
pushl
call
cmp
jne
mov
pushl
call
test
je
pushl
call
cmp
je
mov
lea
and
jne
or
jne
mov
xor
or
je
xor
cmp
je
test
jne
cmp
jne
mov
mov
push
call
cmp
jne
push
call
cmp
jne
xor
lea
push
call
cmp
jne
mov
xor
mov
cmp
je
mov
mov
or
jne
mov
or
je
mov
lea
and
je
or
jne
cmp
jne
pushl
call
cmp
je
xor
mov
test
je
mov
lea
and
je
mov
mov
cmp
je
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
pushl
call
cmp
jne
mov
mov
cmp
je
mov
pushl
call
or
je
pushl
call
and
je
mov
lea
or
je
mov
mov
mov
or
je
mov
mov
mov
mov
xor
mov
cmpl
je
mov
mov
cmp
jne
cmp
jne
mov
mov
mov
mov
mov
cmp
jne
mov
decl
and
jne
cmp
je
cmp
jne
cmp
je
mov
mov
or
je
mov
xor
and
jne
cmp
jne
mov
cmp
je
or
je
mov
xorl
mov
mov
cmp
je
xor
or
je
cmp
je
and
je
mov
xor
mov
mov
subl
mov
mov
negl
mov
mov
mov
mov
rorl
mov
cmp
jne
mov
add
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
push
call
cmp
je
mov
lea
cmp
jne
or
je
cmp
je
mov
pushl
call
test
je
mov
mov
mov
pushl
call
or
je
mov
cmp
je
mov
mov
cmp
je
cmp
je
cmp
je
cmp
jne
cmp
jne
mov
mov
mov
xor
mov
push
call
and
je
xor
test
je
mov
pushl
call
and
je
mov
mov
cmp
je
mov
mov
mov
mov
test
je
pushl
call
cmp
je
xor
push
call
cmp
jne
mov
pushl
call
cmp
jne
xor
push
call
cmp
jne
xor
push
call
cmp
jne
pushl
call
and
jne
xor
pushl
call
cmp
jne
mov
mov
cmp
je
xor
mov
and
je
pushl
call
cmp
jne
mov
lea
mov
and
je
mov
mov
push
call
cmp
je
pushl
call
and
je
mov
or
jne
mov
xor
mov
pushl
call
test
je
pushl
call
test
jne
xor
mov
mov
and
je
cmp
jne
xor
mov
mov
pushl
call
test
jne
xor
mov
or
jne
mov
test
je
mov
mov
pushl
call
cmp
je
pushl
call
and
je
xor
xor
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
je
mov
mov
cmp
je
and
jne
mov
mov
or
je
mov
cmp
je
cmp
je
mov
pushl
call
cmp
jne
xor
mov
cmp
je
mov
cmp
jne
mov
mov
mov
pushl
call
or
jne
xor
mov
pushl
call
and
jne
mov
mov
mov
test
jne
pushl
call
and
je
xor
cmp
jne
mov
pushl
call
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
cmp
jne
xor
mov
mov
cmp
je
mov
mov
mov
pop
push
call
cmp
jne
lea
mov
cmp
jne
cmp
je
and
je
mov
test
je
cmp
jne
mov
cmp
je
cmp
je
mov
test
je
lea
mov
mov
mov
xor
mov
push
call
cmp
je
lea
xor
cmp
jne
test
jne
mov
lea
cmp
jne
cmp
jne
mov
mov
push
call
test
je
cmp
je
or
je
mov
mov
mov
pop
mov
mov
test
je
and
jne
mov
cmp
je
mov
mov
pop
mov
cmp
jne
xor
and
jne
mov
mov
mov
mov
mov
test
je
mov
mov
mov
pop
ret
push
and
and
add
cmpsb
movsb
and
mov
in
test
add
xor
lea
cmp
jne
mov
or
je
mov
mov
or
je
and
je
cmp
jne
mov
cmp
jne
mov
push
cmp
jne
cmp
jne
and
jne
mov
pushl
call
cmp
jne
mov
lea
cmp
jne
and
jne
cmp
jne
cmp
je
cmp
je
mov
pushl
call
and
jne
mov
cmp
je
or
jne
or
jne
cmp
jne
cmp
jne
mov
or
je
mov
xor
test
je
cmp
jne
cmp
jne
cmp
je
cmp
je
mov
cmp
je
mov
and
je
cmp
je
mov
mov
mov
push
push
call
cmp
je
push
call
and
jne
mov
mov
mov
push
call
cmp
je
mov
cmp
jne
mov
lea
mov
mov
push
call
and
jne
pushl
call
cmp
je
mov
push
xor
cmp
je
mov
mov
mov
xor
test
jne
xor
push
call
cmp
jne
xor
mov
or
jne
cmp
jne
mov
pushl
call
cmp
je
xor
push
call
and
je
xor
mov
mov
cmp
jne
mov
mov
and
jne
mov
mov
pushl
call
cmp
jne
mov
and
jne
mov
mov
pushl
call
cmp
je
xor
mov
mov
cmp
jne
mov
or
je
mov
or
jne
xor
mov
mov
push
call
test
jne
xor
mov
mov
mov
push
push
push
push
call
xor
mov
cmp
jne
cmp
je
mov
mov
mov
mov
xor
mov
mov
mov
xor
mov
mov
cmp
jne
cmp
je
pushl
call
cmp
je
xor
xor
or
jne
mov
mov
cmp
je
mov
cmp
jne
xor
mov
xor
xor
mov
xor
lea
and
jne
mov
mov
mov
and
jne
cmp
je
cmp
jne
cmp
jne
mov
push
call
cmp
je
mov
mov
mov
push
call
cmp
je
mov
xor
mov
mov
mov
mov
lea
mov
mov
and
jne
mov
mov
mov
cmp
jne
mov
mov
cmp
je
cmp
jne
test
jne
mov
cmp
je
mov
cmp
jne
mov
mov
or
je
lea
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
cmp
je
mov
mov
repnz
lea
mov
mov
cmp
jne
pushl
call
or
je
mov
mov
inc
mov
xor
pushl
call
test
jne
push
call
or
jne
push
call
and
jne
pushl
call
cmp
jne
mov
mov
cmp
jne
mov
cmp
jne
mov
mov
cmp
je
cmp
je
cmp
jne
mov
pushl
call
and
je
mov
mov
mov
mov
mov
cmp
jne
mov
mov
pushl
call
cmp
je
push
call
or
jne
xor
cmp
jne
test
jne
cmp
je
push
call
test
je
mov
xor
test
jne
pushl
call
test
je
push
call
cmp
je
mov
cmp
jne
mov
mov
mov
mov
cmp
je
test
je
mov
push
call
test
jne
push
call
cmp
jne
mov
cmp
je
mov
mov
mov
or
jne
cmp
jne
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
je
mov
mov
mov
xor
cmp
jne
mov
lea
cmp
jne
mov
mov
mov
or
jne
cmp
je
mov
mov
xor
mov
and
je
mov
mov
mov
mov
mov
mov
pop
and
jne
xor
mov
or
jne
mov
and
jne
mov
cmp
je
lea
mov
cmp
jne
mov
lea
mov
mov
cmp
jne
cmp
jne
mov
pop
cmp
je
mov
mov
cmp
je
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
je
cmp
jne
mov
mov
mov
cmp
jne
mov
pop
lea
or
je
xor
xor
mov
mov
cmp
je
mov
mov
mov
mov
mov
or
je
mov
leave
ret
adc
xchg
or
shrb
add
in
add
mov
pushl
call
or
je
xor
test
jne
or
je
or
je
cmp
je
cmp
jne
mov
cmp
jne
pushl
call
cmp
jne
mov
push
mov
mov
and
jne
mov
mov
mov
cmp
je
mov
push
pushl
call
test
jne
cmp
jne
pushl
call
or
jne
mov
mov
mov
pushl
call
cmp
jne
lea
mov
or
je
cmp
je
mov
cmp
jne
mov
push
call
cmp
je
cmp
jne
mov
push
mov
cmp
je
mov
test
jne
mov
push
call
test
je
mov
mov
mov
cmp
je
and
jne
and
jne
pushl
call
or
jne
mov
mov
pushl
call
or
jne
pushl
call
cmp
jne
xor
mov
mov
cmp
jne
mov
cmp
je
and
jne
mov
mov
or
jne
mov
mov
mov
mov
mov
mov
mov
pushl
call
cmp
jne
push
call
and
jne
pushl
call
test
jne
mov
xor
mov
cmp
jne
mov
cmp
jne
mov
mov
test
jne
cmp
jne
mov
xor
cmp
je
xor
mov
cmp
je
cmp
je
pushl
call
and
jne
push
call
test
je
mov
mov
mov
mov
pushl
call
cmp
je
pushl
call
cmp
je
xor
mov
cmp
je
mov
pushl
call
cmp
je
pushl
call
or
jne
mov
and
jne
mov
cmp
je
xor
and
je
mov
xor
mov
or
je
mov
xor
cmp
jne
mov
mov
cmp
je
cmp
jne
mov
mov
or
jne
mov
xor
cmp
je
mov
cmp
je
pushl
call
cmp
je
mov
xor
and
je
pushl
call
or
je
mov
mov
mov
mov
pushl
call
and
je
mov
mov
and
je
mov
xor
cmp
je
cmp
je
xor
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
or
je
cmp
je
and
jne
mov
cmp
je
mov
mov
mov
mov
pushl
call
test
je
pushl
call
cmp
jne
mov
mov
cmp
je
mov
cmp
je
mov
mov
or
je
cmp
je
test
jne
pushl
call
and
jne
mov
mov
mov
cmp
jne
pushl
call
cmp
je
mov
xor
cmp
jne
mov
mov
cmp
je
cmp
je
pushl
call
and
jne
xor
mov
mov
mov
mov
mov
mov
mov
mov
push
call
cmp
jne
mov
mov
push
call
cmp
je
mov
mov
cmp
je
xor
cmp
je
mov
mov
pushl
call
test
je
xor
mov
or
je
pushl
call
and
jne
push
call
cmp
je
pushl
call
or
je
mov
xor
mov
test
je
mov
cmp
jne
mov
or
je
mov
lea
mov
test
jne
pushl
call
and
jne
mov
mov
mov
mov
mov
mov
cmp
jne
cmp
jne
mov
cmp
je
mov
cmp
jne
mov
mov
mov
mov
lea
cmp
jne
mov
mov
cmp
je
mov
mov
cmp
jne
push
call
or
je
pushl
call
or
je
mov
pushl
call
and
je
mov
cmp
jne
xor
push
call
cmp
jne
mov
pushl
call
cmp
je
mov
and
je
mov
test
jne
mov
pushl
call
cmp
jne
mov
mov
test
je
xor
mov
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
mov
mov
pushl
call
cmp
je
mov
cmp
jne
mov
mov
mov
cmp
je
mov
lea
pushl
call
cmp
je
mov
pushl
call
cmp
jne
mov
mov
mov
cmp
jne
cmp
jne
xor
mov
mov
pushl
call
or
jne
xor
cmp
je
and
jne
mov
cmp
je
mov
pushl
call
cmp
je
push
call
or
je
mov
cmp
jne
mov
mov
test
je
cmp
jne
mov
cmp
je
or
je
cmp
je
mov
test
jne
mov
pushl
call
cmp
jne
mov
pushl
call
and
je
xor
lea
cmp
je
mov
pushl
call
cmp
jne
push
call
and
jne
push
call
or
jne
mov
mov
cmp
je
test
je
test
jne
pushl
call
cmp
jne
pushl
call
cmp
je
mov
mov
mov
cmp
je
mov
pushl
call
test
jne
pushl
call
and
jne
mov
and
jne
mov
mov
push
call
test
jne
pushl
call
test
je
xor
cmp
je
mov
pushl
call
cmp
je
push
call
cmp
je
pushl
call
cmp
jne
mov
cmp
jne
cmp
jne
mov
mov
and
jne
pushl
call
and
je
mov
pushl
call
cmp
jne
pushl
call
cmp
je
mov
pushl
call
and
jne
mov
cmp
je
and
je
cmp
je
mov
mov
pushl
call
and
jne
mov
mov
cmp
jne
mov
mov
cmp
jne
cmp
je
test
je
pushl
call
cmp
je
push
call
or
jne
xor
and
je
or
jne
cmp
je
mov
mov
mov
or
je
xor
mov
pushl
call
cmp
je
mov
mov
cmp
je
mov
pushl
call
cmp
je
pushl
call
cmp
jne
pushl
call
cmp
je
mov
cmp
jne
mov
pushl
call
test
jne
mov
cmp
je
cmp
jne
mov
pushl
call
test
jne
xor
mov
pushl
call
test
je
push
call
cmp
je
mov
mov
cmp
jne
xor
xor
and
je
mov
mov
mov
pushl
call
cmp
jne
xor
mov
cmp
jne
cmp
je
mov
mov
or
je
test
je
push
call
and
je
mov
mov
mov
mov
mov
mov
pushl
call
test
jne
mov
mov
mov
mov
xor
mov
cmp
jne
mov
lea
cmp
jne
mov
pushl
call
or
jne
mov
xor
cmp
jne
mov
or
je
mov
cmp
jne
test
jne
cmp
jne
mov
cmp
je
mov
pushl
call
or
jne
push
call
and
je
mov
xor
or
je
mov
mov
pushl
call
cmp
je
mov
mov
cmp
je
mov
xor
mov
mov
lea
cmp
je
mov
mov
lea
cmp
jne
mov
mov
mov
mov
mov
mov
pushl
call
cmp
jne
pushl
call
or
je
mov
lea
pushl
call
and
je
mov
lea
mov
pushl
call
test
je
mov
mov
test
jne
push
call
cmp
je
mov
cmp
jne
mov
mov
mov
mov
mov
cmp
jne
xor
mov
mov
pushl
call
or
jne
mov
mov
cmp
jne
mov
mov
cmp
je
cmp
je
mov
mov
push
call
and
je
mov
cmp
je
mov
cmp
je
push
call
test
je
mov
cmp
jne
mov
xor
and
jne
mov
or
jne
mov
mov
mov
and
je
cmp
je
mov
xor
mov
pushl
call
cmp
jne
mov
pushl
call
or
jne
mov
mov
mov
pushl
call
or
je
pushl
call
or
je
mov
or
je
push
call
cmp
jne
mov
cmp
jne
mov
and
je
mov
xor
mov
mov
cmp
je
mov
cmp
jne
mov
mov
pushl
call
and
je
mov
pushl
call
test
je
xor
test
je
mov
cmp
je
pushl
call
cmp
jne
mov
cmp
jne
xor
mov
mov
mov
pushl
call
or
jne
mov
cmp
jne
mov
mov
mov
pushl
call
and
je
mov
test
je
cmp
je
mov
cmp
jne
xor
cmp
je
cmp
jne
test
jne
pushl
call
test
je
xor
mov
mov
cmp
je
mov
cmp
je
pushl
call
cmp
je
mov
lea
or
je
mov
lea
cmp
jne
mov
or
je
mov
xor
mov
mov
mov
pushl
call
and
je
xor
and
je
cmp
jne
mov
pushl
call
cmp
je
mov
xor
and
je
mov
mov
mov
cmp
jne
cmp
je
test
je
cmp
jne
cmp
je
mov
cmp
jne
test
je
push
call
cmp
je
xor
xor
cmp
je
mov
mov
mov
mov
mov
mov
cmp
jne
mov
cmp
jne
mov
pushl
call
test
jne
mov
mov
xor
mov
mov
pushl
call
or
jne
mov
and
jne
xor
cmp
jne
pushl
call
cmp
jne
mov
mov
pushl
call
cmp
jne
xor
push
call
cmp
jne
mov
pushl
call
or
je
pushl
call
cmp
jne
pushl
call
test
je
mov
mov
mov
and
je
mov
mov
cmp
je
cmp
je
mov
lea
pushl
call
test
je
push
call
test
je
push
call
cmp
jne
mov
lea
pushl
call
cmp
jne
xor
mov
mov
mov
pushl
call
test
je
mov
cmp
je
mov
mov
mov
mov
pushl
call
and
je
mov
mov
or
jne
mov
lea
test
jne
or
jne
mov
cmp
je
mov
xor
mov
cmp
jne
mov
mov
cmp
jne
mov
pushl
call
cmp
je
mov
pushl
call
or
je
mov
mov
test
je
push
call
or
jne
push
call
or
jne
mov
xor
mov
mov
mov
cmp
jne
cmp
jne
cmp
jne
mov
mov
and
jne
mov
push
call
cmp
je
xor
pushl
call
or
je
mov
mov
and
jne
mov
pushl
call
test
je
xor
cmp
je
xor
mov
mov
cmp
jne
mov
mov
and
je
mov
push
call
cmp
jne
mov
or
jne
mov
and
jne
pushl
call
and
jne
mov
xor
cmp
jne
push
call
cmp
je
pushl
call
cmp
je
pushl
call
or
jne
push
call
or
jne
xor
mov
mov
test
jne
mov
mov
mov
cmp
je
mov
mov
pushl
call
or
jne
xor
cmp
je
mov
cmp
jne
cmp
je
cmp
je
mov
cmp
jne
cmp
jne
cmp
jne
mov
or
je
mov
cmp
jne
cmp
je
mov
mov
mov
cmp
jne
pushl
call
and
je
mov
xor
mov
mov
cmp
jne
mov
mov
cmp
jne
cmp
jne
mov
pushl
call
or
jne
pushl
call
test
jne
mov
lea
mov
test
jne
mov
mov
mov
cmp
jne
mov
lea
mov
pushl
call
cmp
jne
push
call
cmp
je
mov
and
je
mov
mov
mov
mov
mov
mov
cmp
je
mov
mov
or
jne
mov
mov
and
jne
mov
or
jne
cmp
je
xor
mov
mov
mov
cmp
jne
or
je
mov
xor
mov
cmp
jne
pushl
call
cmp
jne
mov
cmp
jne
mov
cmp
je
mov
mov
xor
mov
mov
mov
mov
mov
mov
push
call
cmp
jne
xor
and
jne
pushl
call
or
jne
push
call
and
je
mov
mov
mov
test
je
mov
and
jne
xor
mov
xor
xor
push
call
or
jne
pushl
call
test
jne
xor
cmp
jne
mov
cmp
jne
xor
mov
cmp
jne
push
call
and
je
pushl
call
test
je
pushl
call
and
jne
xor
cmp
je
xor
cmp
jne
mov
xor
mov
pushl
call
test
je
mov
test
jne
cmp
jne
mov
lea
mov
mov
push
call
cmp
je
pushl
call
cmp
jne
mov
mov
mov
cmp
jne
mov
xor
mov
mov
pushl
call
test
je
xor
mov
push
call
cmp
je
xor
mov
cmp
jne
cmp
je
pushl
call
and
jne
mov
mov
cmp
je
mov
pushl
call
or
jne
pushl
call
and
je
push
call
test
jne
xor
mov
cmp
jne
mov
mov
push
call
cmp
je
pushl
call
cmp
jne
mov
xor
mov
cmp
je
mov
cmp
jne
mov
mov
mov
and
jne
mov
mov
mov
and
jne
mov
mov
mov
lea
push
call
or
je
xor
xor
cmp
jne
mov
push
call
test
je
mov
or
jne
xor
mov
cmp
jne
or
je
mov
mov
cmp
je
xor
lea
mov
or
jne
cmp
je
pushl
call
and
jne
mov
mov
pushl
call
and
je
xor
mov
mov
push
call
or
jne
mov
cmp
jne
xor
mov
and
jne
mov
mov
mov
xor
cmp
je
mov
mov
pushl
call
cmp
jne
mov
mov
cmp
jne
xor
cmp
je
mov
mov
mov
pushl
call
cmp
jne
pushl
call
test
je
mov
mov
mov
and
jne
mov
mov
mov
push
pushl
call
mov
mov
mov
mov
pushl
call
test
je
pushl
call
test
jne
mov
mov
cmp
je
mov
mov
mov
and
jne
mov
mov
mov
mov
cmp
jne
push
call
cmp
jne
mov
push
call
and
jne
mov
mov
mov
cmp
jne
cmp
jne
mov
mov
mov
cmp
je
mov
pushl
call
test
jne
xor
xor
mov
pushl
call
test
jne
pushl
call
or
jne
mov
or
je
cmp
je
mov
xor
cmp
jne
pushl
call
cmp
je
xor
mov
mov
push
call
cmp
jne
xor
mov
pushl
call
cmp
je
pushl
call
cmp
je
mov
pushl
call
test
je
mov
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
cmp
jne
xor
pushl
call
or
jne
pushl
call
cmp
jne
xor
pushl
call
cmp
je
mov
mov
cmp
jne
cmp
je
mov
mov
cmp
jne
mov
cmp
je
mov
mov
and
je
mov
mov
push
call
and
je
xor
cmp
jne
cmp
je
cmp
je
mov
push
call
and
jne
mov
mov
mov
pushl
call
and
je
mov
mov
push
call
and
je
mov
mov
cmp
jne
and
jne
pushl
call
cmp
jne
pushl
call
or
je
pushl
call
and
jne
pushl
call
or
jne
mov
cmp
je
cmp
je
xor
mov
pushl
call
test
je
mov
test
je
mov
mov
cmp
je
push
call
cmp
jne
mov
mov
mov
pushl
call
cmp
je
pushl
call
cmp
je
mov
lea
cmp
jne
mov
and
je
mov
mov
push
call
test
jne
pushl
call
test
jne
mov
mov
mov
cmp
jne
mov
pushl
call
cmp
je
mov
mov
cmp
je
mov
mov
mov
push
call
cmp
jne
mov
mov
mov
cmp
jne
mov
push
call
and
je
mov
lea
mov
pushl
call
cmp
je
xor
test
je
mov
test
jne
cmp
je
xor
mov
and
je
mov
cmp
je
cmp
jne
mov
mov
mov
cmp
je
mov
test
je
push
call
test
jne
push
call
test
je
mov
mov
mov
mov
xor
pushl
call
cmp
je
mov
mov
pushl
call
cmp
je
xor
mov
pushl
call
test
je
mov
mov
test
jne
pushl
call
cmp
je
push
call
test
jne
mov
lea
pushl
call
or
je
xor
mov
cmp
je
mov
push
call
cmp
je
mov
cmp
je
xor
pushl
call
or
je
xor
mov
mov
cmp
je
mov
lea
mov
mov
push
call
cmp
je
mov
lea
and
jne
mov
and
jne
or
jne
mov
mov
and
jne
mov
lea
pushl
call
and
je
pushl
call
cmp
je
mov
mov
mov
mov
pushl
call
or
jne
mov
mov
cmp
je
mov
mov
cmp
je
pushl
call
cmp
je
mov
pushl
call
or
je
push
call
cmp
jne
mov
xor
mov
mov
mov
mov
mov
mov
mov
pushl
call
cmp
jne
push
call
test
jne
mov
lea
cmp
jne
mov
mov
cmp
jne
mov
mov
test
je
test
jne
mov
xor
cmp
jne
xor
mov
pushl
call
and
jne
push
call
or
je
pushl
call
or
je
xor
mov
mov
and
je
pushl
call
cmp
je
mov
xor
or
je
push
call
and
je
pushl
call
cmp
jne
xor
mov
cmp
jne
mov
pushl
call
or
je
push
call
test
jne
mov
mov
cmp
jne
mov
mov
pushl
call
cmp
je
pushl
call
cmp
je
mov
cmp
je
cmp
jne
xor
pushl
call
and
jne
push
call
cmp
jne
mov
mov
cmp
je
xor
xor
cmp
jne
mov
pushl
call
cmp
jne
mov
cmp
jne
mov
lea
mov
cmp
je
mov
mov
mov
or
jne
mov
mov
push
call
cmp
je
mov
mov
mov
mov
push
call
cmp
jne
mov
lea
test
jne
mov
mov
or
je
mov
cmp
je
mov
push
call
test
jne
pushl
call
or
jne
mov
cmp
jne
mov
and
je
mov
mov
pushl
call
or
jne
mov
mov
test
je
mov
test
jne
mov
mov
cmp
jne
cmp
je
mov
xor
mov
cmp
je
and
je
cmp
je
pushl
call
test
je
push
call
test
je
push
call
test
je
mov
cmp
jne
cmp
jne
mov
or
je
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
cmp
jne
mov
test
je
xor
and
je
mov
pushl
call
cmp
je
mov
mov
pushl
call
cmp
jne
pushl
call
cmp
je
mov
cmp
je
mov
or
jne
push
call
or
je
mov
cmp
je
mov
push
call
cmp
jne
xor
mov
pushl
call
or
jne
pushl
call
test
jne
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
mov
cmp
jne
test
je
or
jne
mov
cmp
jne
push
call
cmp
je
pushl
call
cmp
je
xor
mov
cmp
jne
xor
mov
mov
and
jne
mov
mov
mov
and
je
xor
and
je
cmp
je
cmp
je
mov
cmp
je
mov
mov
cmp
je
mov
mov
mov
mov
cmp
jne
and
je
cmp
je
pushl
call
test
je
xor
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmp
jne
xor
lea
mov
mov
mov
cmp
je
cmp
je
pushl
call
cmp
je
pushl
call
or
je
pushl
call
or
jne
mov
mov
and
je
test
jne
mov
mov
cmp
je
mov
xor
mov
cmp
jne
test
jne
mov
cmp
je
mov
xor
mov
mov
mov
xor
lea
cmp
jne
test
je
mov
mov
cmp
jne
cmp
jne
or
jne
mov
pushl
call
cmp
jne
mov
mov
mov
cmp
jne
mov
mov
cmp
je
pushl
call
test
je
xor
mov
mov
and
je
xor
mov
push
call
cmp
je
pushl
call
or
jne
xor
mov
cmp
je
mov
pushl
call
test
jne
mov
test
je
mov
mov
cmp
je
mov
mov
mov
test
je
mov
xor
mov
cmp
je
pushl
call
cmp
je
pushl
call
test
je
xor
mov
mov
mov
mov
mov
mov
mov
or
je
cmp
jne
mov
mov
mov
movl
mov
mov
cmp
je
cmp
jne
pushl
call
test
je
mov
or
jne
and
je
mov
cmp
je
mov
mov
mov
pushl
call
test
je
mov
push
call
cmp
jne
mov
xor
mov
or
je
cmp
je
mov
mov
mov
mov
cmp
jne
mov
mov
mov
mov
cmp
je
mov
xor
test
je
cmp
je
test
jne
mov
cmp
je
mov
call
mov
xor
cmp
jne
mov
mov
mov
cmp
jne
mov
mov
test
jne
mov
mov
mov
cmp
je
xor
mov
mov
mov
mov
mov
movl
pushl
call
cmp
je
mov
mov
mov
cmp
jne
mov
push
call
cmp
je
mov
lea
pushl
call
test
jne
xor
mov
push
call
or
je
xor
pushl
call
cmp
je
mov
and
je
push
call
cmp
je
pushl
call
cmp
jne
pushl
call
cmp
je
mov
mov
xor
mov
cmp
jne
mov
xor
test
jne
pushl
call
and
jne
mov
mov
cmp
je
cmp
jne
cmp
jne
xor
mov
cmp
je
mov
mov
mov
cmp
jne
mov
lea
cmp
jne
cmp
je
pushl
call
cmp
je
xor
mov
cmp
jne
mov
xor
mov
mov
push
call
cmp
je
mov
mov
mov
mov
pushl
call
test
jne
pushl
call
test
jne
xor
cmp
jne
mov
mov
mov
cmp
je
cmp
jne
test
je
mov
mov
and
je
cmp
jne
mov
cmp
jne
xor
and
jne
mov
and
je
pushl
call
test
je
xor
mov
cmp
je
mov
mov
pushl
call
cmp
jne
mov
mov
mov
cmp
je
mov
cmp
jne
xor
mov
mov
and
je
pushl
call
cmp
je
mov
lea
mov
mov
cmp
jne
mov
mov
mov
mov
pushl
call
and
je
push
call
cmp
je
xor
mov
cmp
je
cmp
je
mov
mov
pushl
pushl
call
cmp
jne
xor
cmp
je
mov
mov
mov
cmp
je
xor
pushl
call
and
jne
push
call
and
je
xor
cmp
je
or
jne
and
jne
mov
cmp
jne
mov
cmp
je
test
jne
pushl
call
cmp
jne
mov
push
call
test
jne
xor
mov
cmp
jne
pushl
call
test
jne
mov
lea
mov
pushl
call
cmp
jne
mov
xor
mov
mov
cmp
je
pushl
call
cmp
jne
xor
mov
mov
mov
xor
cmp
je
mov
mov
cmp
jne
push
call
and
jne
pushl
call
test
jne
mov
pushl
call
or
je
xor
mov
mov
cmp
je
mov
mov
cmp
je
mov
pushl
call
test
jne
pushl
call
cmp
je
pushl
call
and
jne
mov
xor
mov
pushl
call
cmp
jne
mov
cmp
jne
mov
cmp
jne
cmp
je
mov
cmp
jne
mov
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
test
je
cmp
jne
mov
mov
mov
push
call
and
je
xor
mov
cmp
jne
push
call
and
jne
mov
mov
push
pushl
call
cmp
je
mov
mov
mov
mov
shrl
mov
mov
mov
cmp
jne
mov
mov
mov
pushl
call
mov
mov
mov
mov
addl
mov
pushl
call
cmp
jne
mov
mov
mov
mov
mov
mov
xor
mov
call
lds
xchg
addb
inc
or
.byte
inc
