nop
nop
nop
nop
nop
nop
nop
or
or
or
xor
xor
xor
xor
xor
xor
xor
rol
rol
rol
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
ss
nop
nop
nop
nop
sti
sti
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
fcoms
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
repz
and
mov
mov
mov
sub
sub
sub
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
ss
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
inc
inc
inc
inc
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
xchg
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
pop
pop
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
shlb
ja
ja
ja
ja
ja
ja
pop
pop
pop
adc
addb
addb
addb
addl
cmpl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
push
push
push
push
push
outsb
outsb
outsb
jb
jb
outsl
outsl
outsl
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
nop
nop
nop
nop
nop
nop
nop
push
push
push
push
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
arpl
fisttps
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
and
and
and
and
inc
inc
inc
inc
inc
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
sub
sub
sub
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
and
and
and
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
and
and
and
and
and
and
and
and
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
dec
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
xlat
xlat
mov
mov
mov
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
daa
daa
daa
inc
mov
mov
mov
add
add
add
loop
loop
loop
loop
loop
loop
loop
loop
and
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
xchg
xchg
data16
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
aam
popl
inc
inc
inc
inc
inc
inc
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
test
nop
jle
jle
jle
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
nop
nop
nop
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
xor
xor
xor
xor
xor
xor
xor
sti
sti
sti
test
test
test
test
test
xchg
xchg
xchg
xchg
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
or
or
das
das
das
das
das
das
das
das
das
das
das
das
das
nop
nop
cmc
cmc
cmc
cmc
nop
nop
nop
nop
nop
nop
nop
nop
nop
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
nop
nop
nop
nop
nop
nop
nop
and
and
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
nop
nop
nop
nop
nop
nop
nop
nop
add
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
xchg
xchg
xchg
cld
cld
cld
cld
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
sub
sub
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
mov
mov
nop
nop
nop
nop
nop
nop
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rorl
mov
mov
mov
mov
mov
mov
mov
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
lahf
test
pop
pop
pop
pop
pop
pop
pop
pop
pop
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
fists
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
nop
nop
nop
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
sub
sub
sub
sub
sub
nop
nop
nop
nop
nop
nop
lea
mov
mov
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
nop
nop
nop
nop
nop
nop
nop
nop
nop
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
and
and
and
and
and
and
and
and
and
and
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
push
push
push
push
push
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
repz
repz
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
out
out
out
out
out
out
out
out
out
out
out
out
out
out
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
and
and
and
and
and
and
and
and
and
and
and
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
xor
xor
xor
xor
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
mov
fmull
or
or
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
sahf
sahf
sahf
cmp
cmp
cmp
cmp
cmp
nop
xor
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
add
nop
nop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
nop
nop
nop
nop
nop
nop
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
nop
nop
addr16
addr16
addr16
addr16
nop
nop
nop
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
and
and
and
and
and
and
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
and
and
and
and
and
and
and
and
and
and
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
push
push
push
push
push
push
push
push
push
in
in
in
in
in
in
in
in
in
in
in
in
in
dec
dec
and
and
and
and
and
and
and
and
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
imul
imul
imul
imul
lcall
lcall
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
mov
mov
mov
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
xchg
xchg
xchg
xchg
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
adc
adc
adc
adc
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
loopne
loopne
loopne
loopne
loopne
loopne
loopne
ds
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
aaa
aaa
aaa
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
xchg
xchg
xchg
xchg
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jae
jae
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
repz
repz
repz
mov
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
call
mov
mov
mov
mov
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
fstp
fstp
fstp
fstp
fstp
fisttpll
nop
nop
nop
nop
nop
nop
nop
nop
nop
std
std
std
std
std
nop
nop
nop
nop
nop
nop
nop
nop
nop
inc
inc
inc
inc
inc
addr16
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jb
jb
jb
jb
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
aad
aad
aad
aad
aad
aad
aad
aad
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
aad
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
bound
bound
inc
inc
nop
nop
nop
nop
nop
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
nop
nop
nop
nop
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
popf
popf
popf
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
aaa
aaa
aaa
aaa
aaa
std
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
data16
data16
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
add
add
add
add
mov
mov
mov
mov
mov
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
lds
mov
mov
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
les
sub
sub
sub
sub
sub
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
pop
pop
pop
pop
pop
pop
pop
nop
nop
nop
nop
nop
nop
nop
nop
nop
in
in
in
in
in
in
in
in
in
in
in
in
in
in
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
mov
nop
nop
nop
cmpsl
cmpsl
add
add
ss
ss
or
or
or
or
or
add
add
add
add
add
add
add
add
nop
nop
nop
nop
nop
rcl
rcl
rcl
rcl
rcl
rcll
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
xor
xor
xor
xor
jge
jge
jge
push
push
push
push
push
push
push
push
push
push
push
push
push
push
imul
add
add
add
add
add
add
add
add
add
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
lods
lods
lods
lods
lods
lods
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
push
push
push
push
push
push
push
push
push
push
mov
mov
mov
mov
mov
mov
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
addb
addb
enter
enter
enter
enter
push
push
push
push
push
push
push
push
push
push
push
push
test
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
jmp
mov
mov
mov
mov
mov
mov
or
or
or
or
or
or
or
or
or
or
or
or
nop
nop
nop
nop
nop
nop
nop
adc
adc
adc
adc
adc
adc
adc
adc
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
xor
xor
xor
scas
scas
scas
scas
scas
scas
scas
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
pop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
enter
mov
mov
mov
mov
mov
mov
fstp
fstl
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
mov
mov
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
imul
imul
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
add
div
div
div
div
div
div
div
div
div
div
div
div
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcll
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
bound
bound
nop
nop
nop
insl
insl
insl
insl
insl
insl
insl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
and
and
and
and
and
and
and
enter
jno
inc
inc
inc
inc
inc
inc
inc
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
or
or
or
or
or
or
or
or
or
or
or
or
or
or
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
nop
nop
nop
nop
nop
jmp
nop
nop
cmpsl
cmpsl
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
pop
pop
pop
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
nop
nop
sub
sub
sub
sub
sub
sub
nop
nop
nop
nop
nop
nop
nop
pop
pop
pop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
js
js
js
js
test
test
test
test
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
test
test
test
test
test
test
test
test
test
test
test
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sbb
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
mov
mov
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
mov
mov
add
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
outsl
jnp
nop
nop
test
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
pop
pop
pop
pop
pop
pop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
sub
sub
sub
sub
sub
sub
sub
cli
cli
cli
cli
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sahf
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
cmp
lock
nop
nop
loopne
loopne
loopne
nop
nop
nop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
add
add
add
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
pop
pop
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
fs
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
dec
dec
dec
dec
dec
dec
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
rcl
rcl
rcl
rcl
rcl
rcl
ljmp
ljmp
ljmp
mov
mov
mov
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
aad
aad
aad
aad
aad
aad
aad
aad
aad
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
mov
addb
addb
addb
and
in
in
enter
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
data16
adc
adc
adc
adc
adc
adc
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
xchg
xchg
jae
jae
jae
jae
jae
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
sub
int
sarl
add
or
movsb
add
sbb
sbb
add
mov
push
test
add
xchg
and
pop
push
add
outsl
adc
add
and
add
push
add
test
add
scas
addb
ja
add
cmp
out
sbb
cmpsb
add
mov
mov
adc
add
dec
adc
add
xchg
sti
push
push
in
mov
enter
cmpsb
add
addr16
mov
add
cmp
or
add
fidivs
mov
pop
adc
addr16
xlat
fldcw
sub
adc
xor
mov
testl
add
das
inc
sbb
mov
add
xchg
dec
gs
pop
repz
jmp
cmp
sbb
add
mov
add
add
notb
xor
xchg
xchg
dec
xchg
jmp
add
add
arpl
in
inc
shll
and
add
inc
into
adc
mov
add
lock
popa
insl
mov
fidivrs
ret
jmp
mov
jae
adc
add
ss
add
cmp
xchg
cmp
push
xchg
iret
out
pop
jbe
ja
mov
loopne
popa
xchg
xor
or
add
push
lcall
xor
stos
pop
in
loopne
adc
add
pop
jnp
add
and
add
add
push
into
lahf
in
jge
mov
push
push
mov
lods
fnstenv
and
add
inc
xchg
out
js
mov
add
sbb
add
xor
clc
or
add
imul
imul
jns
fsubr
fnsave
pop
pop
or
add
add
dec
jmp
jbe
scas
add
sbbl
mov
xor
sarb
pop
jns
mov
mov
das
cltd
mov
add
jp
nop
int3
hlt
sahf
clc
pop
pop
inc
movsb
add
xlat
test
xchg
xor
xor
mov
sub
xor
jle
pop
push
inc
inc
js
dec
shlb
push
and
add
dec
dec
addb
call
add
jmp
iret
movsl
fs
add
mov
add
add
inc
mov
pop
xchg
pop
jmp
mov
jbe
lods
loope
and
add
imul
arpl
push
sub
add
add
daa
ret
adc
add
popl
push
pop
or
cmpsb
add
mov
ds
stc
popf
imul
add
sub
add
fcom
cmpsl
mov
lock
insb
mov
rorb
pop
mov
and
add
out
lea
pop
jns
cwtl
jae
fnstsw
ud0
sub
xlat
adc
ret
add
inc
pop
fwait
xchg
addb
bound
clc
fwait
sub
pop
mov
xchg
pop
add
add
add
stc
push
or
add
stos
and
add
mov
rol
dec
bound
add
mov
out
dec
fisttpl
add
in
repz
dec
pop
lods
stos
add
mov
add
sbb
jl
adc
mov
xor
addb
mov
jl
add
ret
shrb
ds
xchg
iret
mov
std
sub
add
pop
cmp
out
dec
xor
cld
pop
mov
sbb
scas
outsb
loopne
mov
add
mov
lret
jo
push
icebp
and
mov
test
inc
dec
mov
clc
push
xchg
pop
add
mov
std
pop
jno
js
loope
out
test
add
shll
sbbl
mov
pushf
mov
add
jb
add
add
add
pop
or
add
mov
movsl
jp
xchg
rcr
push
add
out
cmpl
stos
add
sub
loop
adc
add
fdivr
dec
in
outsl
movsb
add
icebp
jo
cmp
add
ds
dec
aam
jnp
jne
jg
add
decb
cmp
or
add
sbb
pop
mov
into
pop
or
add
cmp
add
push
test
add
cmc
mov
lret
pop
scas
add
adc
adc
enter
add
or
add
mov
mov
sar
and
add
push
and
xor
and
add
cmp
out
je
out
imul
pop
into
or
aaa
sbb
pusha
mov
mov
add
dec
idivb
add
les
pop
js
cmp
add
push
cwtl
in
push
adc
fists
lods
add
or
add
inc
out
mov
mov
add
xor
add
adc
jmp
cmp
sub
add
add
push
jne
add
in
sarb
jle
mov
ljmp
mov
dec
flds
sbb
adc
shll
add
loopne
adc
inc
adc
xchg
std
ja
in
mov
add
out
out
icebp
std
in
repz
push
add
jle
les
xchg
jne
out
int
and
add
popf
rcrb
out
fdivl
movsb
add
xchg
mov
fucomp
js
dec
adc
enter
xchg
add
add
push
mov
test
mov
mov
add
fucomp
loopne
in
mov
xor
aaa
pusha
mov
in
mov
nop
scas
add
pop
movsb
add
push
or
dec
std
nop
iret
aas
iret
ret
push
in
jl
movlps
add
dec
outsl
cmp
push
add
les
popf
adc
inc
enter
xor
shrb
or
test
add
add
dec
subl
add
push
or
mov
add
mov
add
jbe
jb
lds
inc
or
add
mov
add
cmc
push
outsb
jae
push
mov
add
add
dec
push
mov
xchg
jb
lret
cmp
popa
dec
popf
jecxz
xor
out
sbb
sbb
imul
add
xchg
jnp
xor
test
add
jg
ret
and
add
xor
add
dec
push
add
lret
mov
inc
dec
or
add
test
loopne
pop
push
jle
lods
add
stos
push
add
xchg
daa
popw
xor
add
mov
add
clc
out
inc
add
add
cmp
popf
loop
push
roll
add
and
add
and
add
pop
pop
xlat
add
add
div
das
leave
mov
sub
mov
popa
cmpsl
repz
mov
pop
inc
divb
arpl
lods
add
sub
inc
xchg
xlat
push
ret
add
pop
rorl
jmp
xor
or
add
add
cli
adc
arpl
add
dec
ret
ret
inc
pop
ret
loop
fnstcw
std
pop
nop
jmp
fldenv
into
jl
int3
pop
imul
add
iret
ja
mov
ret
xor
add
aam
cmp
lret
pop
test
cwtl
scas
outsl
jmp
add
cmc
xchg
test
aad
add
xchg
loope
lret
stos
out
add
xor
add
mov
ljmp
pop
stos
add
push
mov
jne
add
add
push
inc
out
mov
fstps
clc
xchg
push
pcmpeqw
mov
out
ret
add
add
aas
mov
add
dec
addb
flds
inc
testb
adc
xchg
sub
add
inc
push
push
add
lods
icebp
mov
jb
add
push
cmp
ss
inc
lcall
add
add
add
adc
cmpsb
add
sbb
xchg
xor
cmp
add
fs
imul
addb
mov
lods
add
mov
cld
push
loopne
int
push
mov
pop
mov
mov
add
inc
xor
add
dec
insb
arpl
popl
xor
add
icebp
and
add
xchg
mov
push
imul
add
push
hlt
dec
mov
dec
call
cmp
arpl
or
mov
add
mov
data16
and
popa
mov
in
lcall
add
mov
add
add
add
add
test
add
stc
pop
popf
xor
loopne
mov
add
data16
mov
fwait
aad
test
rcll
dec
xor
add
fnstsw
push
pop
dec
loop
mov
add
mov
mov
jne
outsl
ret
repnz
pop
dec
inc
leave
aaa
xchg
stc
mov
mov
enter
daa
jecxz
lods
mov
dec
xchg
add
fwait
jo
test
add
add
and
add
inc
shl
mov
push
and
push
xor
data16
add
fsub
inc
js
cmp
jae
sbb
add
mov
jp
cmp
mov
rorl
add
jns
jo
aam
inc
pusha
mov
add
stc
addb
cmp
cmovs
sub
add
add
cmp
data16
add
lods
cmp
daa
mov
mov
fstl
add
jbe
mov
lds
add
and
add
xor
sbb
mov
fcmovne
int
test
out
dec
aad
sub
add
mov
fmull
add
aam
cmpsl
mov
add
jbe
inc
and
sbb
scas
add
bound
mov
bound
jb
das
into
insb
cmp
fcomip
sbb
repnz
add
decl
add
js
fcom
das
sub
add
cwtl
push
testl
pop
idivb
test
add
aas
add
add
push
and
pushf
xor
lcall
adc
xor
mov
sbb
add
insb
pop
addb
dec
ficoms
in
xorl
btr
imul
insb
std
sub
add
pop
insl
cmp
cmp
push
pop
bound
jnp
adc
out
push
jno
outsb
sub
add
pushf
test
aas
add
jo
and
add
fidivl
add
mov
xor
outsb
insb
lods
sbb
inc
xchg
repnz
test
pop
inc
movsb
add
je
out
fsubr
cld
add
push
sub
add
mov
add
push
add
push
jne
repnz
add
dec
scas
add
push
cmc
jg
daa
cmpsb
add
fsubrs
add
jl
cltd
jle
dec
jmp
pushf
test
bound
jmp
shr
add
dec
dec
mov
add
adc
sbb
xorl
ljmp
mov
add
test
add
mov
in
jg
outsb
cmp
mov
add
dec
mov
ja
insl
sti
sahf
mull
icebp
cmp
jae
scas
add
push
comiss
insb
xchg
add
rcrb
add
inc
xchg
mov
xor
testl
jo
mov
add
add
sub
add
mov
add
sbb
out
fstpl
scas
add
mov
pop
xor
cmp
add
cmp
loop
pushf
aad
add
outsb
inc
ftst
stos
jge
fidivs
and
mov
mov
mov
push
stc
aas
ja
mov
scas
shll
dec
arpl
pop
dec
std
aaa
shrb
xchg
sub
push
xchg
sahf
dec
adc
push
dec
sub
scas
ja
cmc
sbb
fsubs
sub
or
loopne
push
mov
add
xor
ret
add
call
add
js
mov
dec
leave
call
out
mov
xchg
movsl
pop
ja
sti
dec
pop
pop
inc
jno
addb
xor
ret
mov
inc
repz
add
in
cmp
pop
jae
push
lret
dec
and
stos
dec
ljmp
scas
add
lock
rolb
or
add
inc
aad
cmpsl
jne
inc
fildll
mov
push
cli
repnz
mov
enter
cmp
sbb
jns
cmp
add
fistl
jp
js
adc
mov
add
ja
dec
dec
sahf
add
add
scas
in
scas
add
adc
adc
push
inc
pop
or
cmp
add
mov
mov
pop
mov
rclb
imul
add
cmp
mov
clc
mov
add
xchg
rorl
lret
xchg
add
xor
mov
div
fbld
repz
mov
aam
add
add
and
xchg
cmp
nop
data16
mov
jecxz
jnp
xchg
xor
add
mov
push
add
mulb
add
or
add
dec
inc
movsl
mov
cmc
pop
ljmp
pop
leave
cltd
lods
jmp
out
inc
dec
sbb
out
insb
in
fcoml
add
ja,pt
add
test
add
stc
jns
add
xchg
pop
shl
int
push
rorb
ja
mov
sub
push
std
or
add
jnp
fisubrs
and
aaa
fs
add
add
clc
mov
add
mov
add
dec
jg
loopne
shl
xor
stos
xor
leave
sub
add
sub
add
imul
push
add
push
fsts
xor
stos
das
adc
xchg
dec
stc
sub
popa
in
pushf
and
mov
insw
insb
in
ret
aad
insb
cmpsl
loopne
rorl
add
add
cmpsl
adc
add
mov
test
push
add
xlat
cmp
pop
mov
add
test
add
popa
add
add
add
insl
stos
lcall
rclb
jmp
cmp
mov
add
fs
cmpsl
std
arpl
add
add
dec
xor
clc
jp
add
in
scas
add
scas
add
xchg
pop
and
add
mov
add
addl
repnz
add
push
nop
jbe
dec
lahf
iret
popf
call
fwait
iret
call
stos
mov
in
sub
add
addb
jge
cmp
sub
addb
adc
sub
add
and
pop
dec
stos
add
mov
push
add
sbb
sbb
or
dec
loop
les
add
xchg
pop
mov
jge
sbb
test
add
lret
pop
cmp
add
dec
lcall
lods
pusha
xor
pusha
add
add
add
pusha
and
add
add
test
sbb
outsb
mov
push
fcomp
into
sbb
dec
sub
add
sub
add
mov
add
mov
lea
jle
cmp
xor
pop
fbld
add
mov
js
sbb
xchg
cmp
push
push
data16
dec
sbb
or
add
sbbl
add
scas
sahf
pushf
fldl
daa
cmp
sub
add
pop
fdivrs
dec
int3
fwait
dec
sbb
cli
out
xor
mov
add
or
add
push
movsb
add
incb
add
adc
sbb
cmc
dec
or
inc
mov
or
aaa
sarl
cmp
outsb
insb
xchg
add
and
mov
sbb
addb
adc
addb
mov
lea
pushf
inc
xor
pop
push
or
int3
fstl
jl
dec
clc
inc
pop
pop
mov
pop
mov
cltd
test
add
push
stc
mov
cmc
leave
inc
mov
add
fidivrl
std
jb
add
test
add
out
sub
add
bnd
mov
pop
mov
lods
add
cli
mov
adc
out
jb
adc
add
pop
lahf
mov
add
xor
ja
or
add
pop
and
add
add
call
pop
mov
add
sub
bound
add
cmpsb
add
in
ds
outsb
repnz
add
mov
dec
or
add
loopne
mov
add
jmp
mov
pop
das
and
add
add
mov
xor
psubsw
movsl
ss
mov
add
cli
add
add
out
xor
imul
adc
jmp
push
gs
add
add
mov
add
push
mov
push
add
mov
scas
add
mov
sbb
stos
dec
xor
add
pop
xlat
lret
mov
int3
sub
add
pop
push
xchg
add
clc
data16
cmp
add
test
add
sub
add
sti
inc
and
repnz
xchg
cmpsl
int
pop
dec
inc
fwait
in
jb
adc
lahf
mov
push
ljmp
lcall
add
xor
jecxz
cmp
add
sarl
mov
adc
leave
repnz
call
inc
repnz
add
xchg
mov
jmp
jbe
inc
filds
pop
and
gs
add
fcmovnbe
push
jp
imul
add
cmp
mov
xor
push
or
add
leave
sti
xchg
out
mov
add
add
push
cli
ror
gs
je
or
mov
cmp
jmp
add
dec
aas
cmpsl
and
add
ss
add
cmpsl
mov
add
imul
mov
or
add
movb
add
ss
sbb
rol
int3
and
push
cltd
not
outsb
mov
mov
push
add
das
fldenv
popf
fldcw
loopne
faddl
jbe
jae
cmp
and
pop
add
mov
add
int
push
xor
jl
add
jb
movsl
mov
add
cmp
xor
mov
popa
shl
lds
mov
cld
sub
add
mov
or
bound
int
pusha
ds
push
dec
mov
add
add
enter
mov
lret
dec
xor
icebp
mov
dec
loopne
in
mov
mov
pushf
rorb
add
fistpll
xchg
and
add
stos
pop
mov
sbb
or
add
popl
sbb
frstor
psubsw
xorl
add
xchg
and
cltd
ja
jno
cmp
pop
inc
fs
add
add
xchg
dec
in
jb
in
jp
add
cmp
pushf
incb
fisubrl
lods
add
sub
mov
fidivl
aas
push
sub
and
add
xor
call
mov
add
in
lods
xchg
push
cmp
std
jge
fisubrl
in
addb
leave
sbb
add
pop
sbb
jmp
cmp
xor
daa
inc
test
mov
sub
movl
lea
push
call
sub
add
and
mov
mov
and
test
je
mov
push
push
cld
call
test
jne
mov
add
push
push
push
push
call
test
jne
xor
push
ret
lea
andl
push
push
push
push
push
push
call
push
cmp
lea
jne
movzbl
or
pop
mov
add
not
cld
imul
cmp
jne
call
rorb
mov
jmp
cmp
mov
add
ret
mov
mov
mov
inc
or
lea
lea
add
lea
shr
lock
sub
and
je
push
mov
jmp
push
fsts
pop
arpl
or
add
add
aam
add
int
je
popw
mov
mov
sbb
inc
sbb
mov
insl
xor
mov
fiaddl
fwait
repnz
add
add
sarl
add
add
inc
xchg
sahf
xchg
sbb
in
repnz
and
xchg
add
fsubrp
repz
dec
addb
scas
add
push
ret
fstl
add
add
push
and
add
sbb
adc
pop
call
jge
pop
push
sahf
push
int
add
sahf
in
push
add
adc
jo
divb
mov
mov
add
jb
test
out
std
jnp
mov
mov
add
add
sub
add
add
push
clc
pop
dec
sub
add
jge
jb
and
xchg
add
sub
mov
jne
iret
or
add
test
pop
adc
add
rcl
ja
dec
add
fdiv
cwtl
mov
push
sbb
xchg
xlat
xchg
xchg
or
add
adc
movsl
dec
push
xor
mov
out
push
rclb
mov
add
testl
fwait
xor
jb
dec
adc
add
sub
add
insb
fidivs
and
mov
and
add
out
jno
mov
mov
adc
cltd
xor
pop
sbb
add
mov
add
ret
dec
ds
push
fwait
sarb
mov
xchg
xchg
insb
push
pop
push
push
cmp
mov
add
dec
and
pop
or
add
add
jb
xor
sti
xchg
or
add
iret
mov
sti
data16
mov
add
mov
jle
add
lods
mov
lea
enter
or
add
xchg
add
add
cmp
sub
add
mov
add
icebp
jo
add
xchg
add
add
add
addb
mov
fsubl
addb
dec
add
add
add
sbb
add
or
sbb
pushf
insl
pop
out
stc
ret
out
push
call
add
pop
xchg
jle
sbb
loope
and
add
sahf
lods
add
rolb
add
lods
add
nop
mov
add
fdivs
add
imul
add
fs
mov
out
and
sub
add
mov
scas
push
add
std
pop
mov
add
add
imul
add
sbb
bound
mov
push
push
add
mov
add
add
cli
jmp
cmp
gs
fidivs
cmp
cmp
ds
lods
adc
lods
mov
pushf
sbb
add
frstor
jmp
fsubrs
add
and
add
aam
jb
mov
add
gs
and
add
xor
push
popa
cwtl
xor
cmpsb
add
jnp
push
add
jnp
jmp
inc
sahf
rclb
outsl
sbb
add
cmp
aad
add
mov
add
lcall
pop
sub
add
imul
add
add
mov
cmp
xchg
out
addb
sbb
cmc
lock
add
iret
cmp
add
sub
add
add
ret
fnop
jg
roll
enter
sbb
push
lcall
pusha
jge
sbb
add
mov
cld
dec
in
jnp
dec
adc
mov
dec
push
xchg
push
test
or
add
cmp
mov
adc
lods
in
dec
inc
out
daa
mov
movsb
add
outsl
ljmp
addb
pop
lcall
add
je
mov
jp
mov
lret
jge
cmp
addr16
mov
ret
jno
add
cltd
jle
mov
shrb
mov
lret
add
pop
inc
call
and
adc
pusha
insl
cmp
mov
mov
add
dec
std
mov
push
pop
outsl
jns
out
lcall
aas
mov
icebp
jecxz
add
nop
clc
test
jno
adc
fwait
xor
pop
xor
mov
stc
jl
clc
xchg
dec
lea
pop
push
sub
mov
mov
pushf
or
add
add
ret
std
xchg
daa
ret
xor
and
add
popa
jecxz
push
xor
in
inc
mov
mov
add
dec
mov
add
imul
jns
addr16
fildll
sarl
stos
popf
fsubp
or
cmpsb
add
add
xor
add
jge
repz
jl
add
adc
stc
add
add
divl
inc
push
ret
mov
sahf
lods
fwait
xlat
pusha
imul
lock
lahf
mov
add
dec
arpl
lret
aad
add
aam
add
shll
mov
insb
mov
push
lret
mov
add
adc
out
in
add
dec
daa
and
out
mov
lret
mov
add
pop
mov
in
stos
addb
lds
pop
fistps
add
adc
cwtl
xor
mov
jg
ficomps
mov
xchg
sahf
adc
add
jns
adc
les
or
add
xor
jg
jle
test
add
sub
dec
sbb
sub
add
cltd
jnp
pop
inc
test
add
sbb
add
jne
adc
out
fwait
add
insl
lahf
or
add
mov
add
cwtl
repnz
outsb
mov
mov
add
or
add
pop
mov
add
mov
add
xchg
mov
add
testb
add
add
or
add
and
add
scas
add
push
adc
xor
add
dec
icebp
popf
je
ret
sbb
arpl
push
sbb
mov
stos
add
push
mov
cmp
fldenv
dec
jns
imul
add
jle
sarl
and
add
adc
and
add
or
add
fdivr
add
push
pop
dec
dec
lds
mov
cmp
cmp
add
int
add
xchg
push
ljmp
add
ficoms
add
jmp
push
xlat
jns,pt
pop
cmp
cltd
jp
add
inc
xchg
sti
cmp
add
fs
addl
mov
jp
add
js
add
in
add
add
mov
push
addb
xchg
clc
rcr
call
cmp
pop
mov
inc
shlb
add
mov
jge
ds
in
nop
pop
xor
add
xchg
cmp
jg
adc
fwait
imul
stos
call
add
xor
cld
ljmp
insl
cld
and
add
out
jle
add
fdivl
dec
sub
sbb
add
add
sbb
inc
bnd
call
dec
movsb
add
pop
fisttpll
jnp
add
and
mov
push
sbb
xlat
mov
add
add
mov
sbb
add
cmpsb
add
xorl
mov
add
or
add
and
add
hlt
xor
push
push
xchg
movsl
mov
lods
add
mov
adc
push
push
popf
sub
std
xor
mov
add
mov
add
or
add
add
mov
add
stos
cld
fisubs
add
dec
addb
dec
lods
into
inc
adc
mov
jl
lret
imul
in
jbe
lahf
addb
in
mov
jb
add
mov
xchg
jno
addr16
pop
test
add
lret
push
push
mov
arpl
add
xchg
pop
mov
mov
add
add
xor
add
cwtl
mov
push
lcall
sub
add
jge
adc
adc
ja
add
shll
sub
bound
add
jb
inc
dec
cmp
sbb
mov
sbb
add
xchg
jo
int
add
xchg
mov
in
dec
pop
movsb
add
sub
xor
jae
call
xor
add
mov
addb
loopne
add
mov
enter
outsb
addb
add
add
cmp
mov
ret
das
call
jbe
pop
sub
add
aam
adc
jg
repnz
int
fidivl
add
rcr
negl
fidivs
add
shlb
aas
in
movsl
outsb
mov
add
add
mov
xor
out
ja
rdmsr
ret
ud2
imul
add
int3
les
add
push
add
mov
pop
mov
inc
call
lahf
fisubs
in
add
add
outsb
add
fisttpl
inc
js
rorl
les
movsb
add
mov
outsb
and
add
add
scas
jnp
add
jnp
inc
sub
les
int3
scas
add
ja
gs
add
jmp
in
cmp
add
pushf
push
mov
aam
enter
xchg
add
mov
add
jl
or
add
xchg
loopne
aad
enter
add
rolb
jecxz
add
add
imul
call
xchg
xchg
add
dec
push
rcrb
and
sarl
cmpsb
add
idivb
add
inc
mov
sar
cli
in
mov
add
ss
scas
add
xor
nop
sbb
add
pop
psrlw
push
add
rcrl
add
cmpsl
xchg
jno
mov
shll
add
sub
or
add
sub
add
inc
into
pop
xchg
pop
aaa
jb
push
mov
stc
adc
add
cmpsl
cmp
xchg
cmp
jmp
leave
adc
xchg
adc
and
inc
jns
cmpsb
add
loope
add
pop
pop
cmpsb
add
mov
cmc
popf
dec
loop
add
cmp
mov
mov
add
fisubrs
add
cltd
add
add
fildll
xor
pop
cmp
lds
lods
add
pop
add
add
in
sub
add
push
sbb
add
xor
out
je
xor
dec
js
xor
rclb
add
scas
clc
inc
addb
rol
mov
pushf
stc
pop
or
add
add
gs
fdivs
aaa
sbb
add
repnz
cmp
mov
sub
add
je
push
dec
pop
push
test
sbb
pop
arpl
add
xor
xor
scas
notl
dec
mov
xor
add
mov
add
jb
push
xchg
loope
and
add
bound
sub
cmp
fisttps
loope
sub
arpl
iret
add
dec
mov
add
sbb
in
in
pusha
adc
add
adc
popa
adc
in
push
fstpl
jmp
mov
jno
lods
add
sub
js
push
inc
pop
add
add
stos
add
out
pop
jecxz
pop
addb
lahf
aaa
and
add
lods
jmp
in
loop
pop
sub
add
xchg
rorb
js
pop
jnp
add
in
jnp
add
jg
mov
inc
int
stos
add
sub
add
inc
or
std
adc
test
add
add
das
ret
mov
adc
mov
or
add
loopne
dec
mov
add
add
cmc
fsubrs
add
clc
jmp
fists
dec
add
add
iret
cmp
add
shl
add
lods
mov
cmp
add
inc
sub
dec
dec
out
inc
popa
pop
repz
add
push
ja
dec
pop
dec
jnp
cmpsb
add
das
fs
lgs
outsl
imul
bound
pop
or
add
lods
add
ret
mov
add
rcrl
xor
inc
push
add
cwtl
stc
jne
jns
sbb
pop
gs
add
pop
inc
sbb
movsb
add
ljmp
add
rclb
add
or
add
lods
add
inc
sbb
and
add
cmpsb
add
jle
cmp
pop
sti
negb
mov
push
push
push
fcomps
add
add
add
and
and
imul
push
xor
xor
add
dec
fs
add
add
inc
pop
inc
fucomi
sarb
add
add
fldl
push
push
add
repnz
xchg
addb
sub
add
test
add
add
dec
pushf
sub
add
inc
sbb
dec
testb
cli
fnstcw
push
gs
stc
movsl
ja
lds
jle
ret
add
out
dec
cmp
xchg
add
add
icebp
lods
cwtl
int
loop
cmp
push
add
aad
popf
pop
addr16
mov
add
stc
cmp
call
add
movsb
add
lcall
lret
mov
add
stc
push
insb
or
jno
xchg
mov
mov
rcr
pop
or
add
add
je
in
pop
jns
lock
das
jle
sbb
add
and
add
imul
sti
and
add
mov
lds
push
dec
jb
fwait
inc
jne
lret
add
test
add
sub
add
xlat
xor
inc
repnz
jp
jbe
leave
shrl
and
add
inc
lea
jmp
imul
fbstp
adc
lods
add
and
fistpl
sbb
and
add
jo
pop
pop
adc
cmp
push
jge
push
mov
inc
jno
mov
sar
cmp
mov
cmp
loopne
add
fs
xor
leave
sbb
add
dec
in
inc
pop
outsl
repnz
arpl
ljmp
jge
mov
jmp
movsb
add
repz
xor
or
sbb
cmp
mov
add
or
add
fucomi
movsl
sub
add
mov
loop
dec
fs
add
test
add
mov
add
sbb
arpl
push
push
inc
and
mov
add
pop
frstor
jae
xor
add
adc
popa
mov
add
bound
push
add
add
jnp
sub
add
add
enter
add
negl
out
add
cld
push
add
inc
mov
xlat
imul
mov
bswap
negl
pop
push
clc
repnz
nop
nop
jae
xchg
clc
std
add
xor
fld1
clc
repnz
nop
nop
jae
add
add
sub
push
mov
xchg
ret
cmp
out
insl
sub
jae
clc
repnz
nop
nop
jae
pop
add
add
add
pop
fistpl
clc
repnz
nop
nop
jae
add
test
add
add
dec
xor
push
mov
xchg
ret
add
add
add
ret
mov
clc
repnz
nop
nop
jae
add
cmp
mov
push
mov
leave
nop
jmp
push
je
add
sbb
jne
clc
repnz
nop
nop
jae
add
push
mov
nop
push
mov
leave
nop
jmp
dec
add
insl
jno
push
mov
xchg
ret
test
add
add
repnz
nop
nop
jae
ret
add
aam
js
scas
mov
clc
repnz
nop
nop
jae
add
add
add
add
mov
xchg
ret
add
outsl
jl
test
add
into
mov
repnz
nop
nop
jae
add
pop
clc
repnz
nop
nop
jae
je
clc
pop
inc
cmp
andl
nop
nop
jae
movups
add
sbb
push
mov
xchg
ret
jns
jns
add
in
dec
push
clc
repnz
nop
nop
jae
add
mov
mov
nop
push
mov
leave
nop
jmp
cmp
or
cld
nop
nop
jae
add
add
add
lret
pop
clc
repnz
nop
nop
jae
xchg
pop
add
pop
add
insl
mov
add
jbe
push
mov
xchg
ret
cmp
add
sarb
insb
inc
jb
nop
push
mov
leave
nop
jmp
mov
je
stos
add
aas
add
push
mov
xchg
ret
push
add
xchg
cli
add
add
fcomps
or
arpl
repnz
nop
nop
jae
inc
add
call
nop
jae
mov
das
insb
lods
pop
clc
repnz
nop
nop
jae
insl
clc
add
push
mov
clc
repnz
nop
nop
jae
push
inc
lods
add
dec
icebp
push
push
mov
xchg
ret
es
dec
adc
movsb
add
lods
aas
mov
clc
repnz
nop
nop
jae
add
push
add
add
clc
repnz
nop
nop
jae
add
add
inc
clc
repnz
nop
nop
jae
add
jp
fs
sbb
pop
push
mov
xchg
ret
lahf
add
std
sbb
je
mov
add
add
repnz
nop
nop
jae
insl
add
popl
clc
repnz
nop
nop
jae
add
sbb
es
mov
clc
repnz
nop
nop
jae
dec
add
mov
dec
add
pop
rep
clc
repnz
nop
nop
jae
add
push
movsb
add
add
or
add
nop
push
mov
leave
nop
jmp
add
lret
add
div
nop
push
mov
leave
nop
jmp
sub
pop
test
nop
add
pop
and
repnz
nop
nop
jae
push
add
mov
mov
clc
repnz
nop
nop
jae
outsl
dec
lods
fs
mov
add
mov
sub
repnz
cmp
add
lret
add
dec
nop
push
mov
leave
nop
jmp
sbb
add
out
add
add
dec
push
clc
repnz
nop
nop
jae
sbb
nop
cli
mov
add
add
leave
nop
jmp
add
outsl
in
add
clc
repnz
nop
nop
jae
add
jl
add
add
popl
xchg
ret
pop
add
lods
add
outsl
add
mov
leave
nop
jmp
adc
add
addl
call
clc
repnz
nop
nop
jae
add
sbb
cld
nop
nop
jae
add
add
add
aam
movsb
add
push
push
push
mov
xchg
ret
push
dec
push
inc
add
add
xchg
add
cld
nop
nop
jae
add
add
add
outsl
pop
clc
repnz
nop
nop
jae
push
jp
aam
add
sub
in
add
add
add
out
add
add
aaa
test
in
add
data16
rcll
jg
int
stos
sbb
mov
nop
nop
jae
add
sub
clc
add
add
insb
cmp
nop
jae
add
add
add
push
das
xchg
and
clc
repnz
nop
nop
jae
push
add
push
add
push
clc
repnz
nop
nop
jae
add
pop
add
jns
inc
call
clc
repnz
nop
nop
jae
fs
push
dec
adc
cld
nop
nop
jae
mov
xlat
add
cmp
xor
nop
jmp
push
add
add
mov
add
inc
gs
clc
repnz
nop
nop
jae
jl
sbb
push
add
mov
xchg
ret
add
sbb
add
movsb
add
pusha
xlat
lods
push
mov
xchg
ret
add
movsb
add
push
xchg
add
jne
clc
repnz
nop
nop
jae
add
add
push
clc
repnz
nop
nop
jae
lods
add
push
aam
push
clc
repnz
nop
nop
jae
mov
cmp
nop
push
mov
leave
nop
jmp
add
mov
adc
mov
leave
nop
jmp
add
movsb
add
sub
mov
adc
mov
inc
add
add
ret
add
clc
repnz
nop
nop
jae
add
xchg
adc
and
add
clc
repnz
nop
nop
jae
imul
aam
rep
push
mov
xchg
ret
mov
adcl
add
test
add
das
xchg
add
xlat
add
nop
mov
repnz
nop
nop
jae
add
add
mov
clc
repnz
nop
nop
jae
lret
xchg
outsl
inc
push
add
add
loop
pop
add
clc
repnz
nop
nop
jae
add
sldt
clc
repnz
nop
nop
jae
add
add
out
nop
push
mov
leave
nop
jmp
dec
add
jns
insb
mov
repnz
nop
nop
jae
je
sub
testl
repnz
nop
nop
jae
ltr
push
push
push
add
mov
leave
nop
jmp
add
add
xchg
pop
push
fld1
clc
repnz
nop
nop
jae
add
add
inc
in
mov
xchg
ret
jns
add
imull
mov
push
mov
xchg
ret
add
push
iret
pop
push
mov
xchg
ret
aam
add
add
add
add
push
mov
add
add
jno
xor
xchg
repnz
nop
nop
jae
sbb
pop
add
lods
pop
jmp
nop
nop
jae
adcl
mov
add
add
clc
repnz
nop
nop
jae
add
lods
inc
cmp
mov
clc
repnz
nop
nop
jae
add
dec
lods
mov
nop
push
mov
leave
nop
jmp
add
add
lock
add
or
add
repnz
nop
nop
jae
cmp
les
nop
nop
jae
add
add
pop
test
nop
push
mov
leave
nop
jmp
pop
add
test
add
push
mov
leave
nop
jmp
pop
push
cmp
mov
clc
repnz
nop
nop
jae
push
push
ret
inc
aam
push
mov
cld
nop
nop
jae
add
add
add
sbb
sbb
mov
clc
repnz
nop
nop
jae
add
cli
aam
fistpl
nop
push
mov
leave
nop
jmp
add
add
cli
cld
pusha
int
clc
repnz
nop
nop
jae
add
add
add
inc
xor
clc
repnz
nop
nop
jae
testl
ret
test
repnz
nop
nop
jae
sub
inc
test
push
mov
leave
nop
jmp
das
lret
sbb
clc
repnz
nop
nop
jae
add
add
mov
add
nop
jmp
cmp
add
xchg
cld
nop
nop
jae
verr
inc
and
clc
repnz
nop
nop
jae
je
add
nop
movsl
mov
push
mov
xchg
ret
je
nop
cmpl
jge
clc
repnz
nop
nop
jae
sbb
xlat
mul
mov
inc
add
idivl
add
fisttpll
add
repnz
nop
nop
jae
add
xchg
or
mov
xchg
ret
adc
add
add
add
or
add
inc
add
std
add
add
movsb
jbe
xor
nop
push
mov
leave
nop
jmp
add
push
mov
test
cld
nop
nop
jae
add
xchg
mov
push
mov
xchg
ret
add
add
add
cmp
notl
nop
jmp
add
add
in
cld
nop
push
mov
leave
nop
jmp
xchg
add
add
pop
outsl
call
nop
push
mov
leave
nop
jmp
sub
aam
outsb
test
add
add
lret
add
nop
push
mov
leave
nop
jmp
add
add
add
fmuls
nop
push
mov
leave
nop
jmp
es
sbb
cs
clc
repnz
nop
nop
jae
add
add
sbb
cmpsl
mov
popf
clc
repnz
nop
nop
jae
add
add
push
nop
push
mov
leave
nop
jmp
lret
xchg
mov
add
add
push
mov
xchg
ret
mov
jns
or
mov
leave
nop
jmp
mov
inc
mov
push
mov
xchg
ret
add
cmp
inc
cmc
mov
nop
push
mov
leave
nop
jmp
add
add
inc
dec
fisubl
xchg
push
clc
repnz
nop
nop
jae
sbb
add
xor
clc
repnz
nop
nop
jae
imul
clc
repnz
nop
nop
jae
lahf
std
add
add
add
divps
repnz
nop
nop
jae
mov
push
push
dec
fstp
call
inc
add
add
je
add
add
sub
clc
repnz
nop
nop
jae
add
clc
repnz
nop
nop
jae
cmp
add
mov
clc
repnz
nop
nop
jae
xchg
das
add
dec
sbb
nop
nop
jae
add
sbb
xchg
add
add
add
push
mov
xchg
ret
add
push
xchg
je
jle
fimull
repnz
nop
nop
jae
je
dec
mov
or
jne
clc
repnz
nop
nop
jae
push
dec
add
nop
jb
call
cld
nop
nop
jae
add
imul
pop
clc
repnz
nop
nop
jae
cmp
add
dec
mov
add
push
mov
xchg
ret
insl
addl
bound
test
repnz
nop
nop
jae
add
dec
std
es
sbb
xchg
ret
clc
repnz
nop
nop
jae
adc
add
mov
add
cmp
push
mov
xchg
ret
xchg
add
add
push
mov
leave
nop
jmp
xlat
add
add
es
push
fadds
clc
repnz
nop
nop
jae
push
dec
add
divl
xchg
add
mov
cld
nop
nop
jae
movsb
pop
add
clc
repnz
nop
nop
jae
cmp
add
adc
iret
popa
inc
add
cmp
add
nop
nop
jae
add
add
add
lods
xor
push
mov
leave
nop
jmp
push
push
push
add
mov
repnz
nop
nop
jae
add
fs
roll
mov
leave
nop
jmp
add
dec
push
mov
xchg
ret
mov
xchg
pop
add
sub
aad
movb
or
add
add
addl
nop
push
mov
leave
nop
jmp
mov
add
lcall
mov
leave
nop
jmp
das
dec
add
js
add
sahf
pop
notl
mov
xchg
ret
mov
clc
pop
das
add
testl
inc
add
add
sub
idivl
clc
repnz
nop
nop
jae
insl
cmp
add
sbb
pop
inc
add
add
je
ljmp
or
add
jp
mov
jle
mov
clc
repnz
nop
nop
jae
mov
mov
clc
repnz
nop
nop
jae
add
add
add
add
clc
repnz
nop
nop
jae
add
add
cmp
add
clc
repnz
nop
nop
jae
dec
dec
add
xchg
jo
mov
nop
push
mov
leave
nop
jmp
insl
add
jns
add
addb
cmp
ret
add
das
add
je
add
add
clc
repnz
nop
nop
jae
dec
jns
notl
add
add
andl
jae
nop
mov
push
xorl
clc
repnz
nop
nop
jae
add
ss
cmp
push
mov
xchg
ret
pop
add
outsl
cli
sbb
mov
nop
push
mov
leave
nop
jmp
sub
add
add
stc
add
clc
repnz
nop
nop
jae
add
add
sbb
dec
mov
jecxz
repnz
nop
nop
jae
sub
mov
and
mov
xchg
ret
add
lret
push
mov
xchg
call
clc
repnz
nop
nop
jae
cmovle
mov
clc
repnz
nop
nop
jae
add
mov
nop
nop
jae
xlat
mov
add
pop
add
clc
repnz
nop
nop
jae
insl
add
add
push
jle
add
clc
repnz
nop
nop
jae
dec
testl
arpl
xchg
ret
dec
sbb
fs
incl
push
add
add
je
add
add
cmp
add
lret
clc
repnz
nop
nop
jae
inc
add
das
add
orl
push
add
add
repnz
nop
nop
jae
sub
dec
xor
call
inc
add
add
add
add
fs
dec
jno
movb
mov
xchg
ret
addl
add
jb
push
mov
leave
nop
jmp
add
nop
cmp
mov
xchg
ret
add
sub
nop
push
mov
leave
nop
jmp
add
lods
jns
dec
cli
call
clc
repnz
nop
nop
jae
dec
add
push
nop
push
mov
leave
nop
jmp
cmpl
xchg
mov
clc
repnz
nop
nop
jae
add
add
add
fucomi
sub
incl
add
add
add
push
add
add
ret
clc
repnz
nop
nop
jae
add
xchg
add
sbb
cld
nop
nop
jae
dec
add
add
sbb
add
nop
push
mov
leave
nop
jmp
add
fists
mov
xchg
ret
cli
add
add
xlat
fs
add
call
clc
repnz
nop
nop
jae
add
cli
aas
push
mov
mov
xor
bound
add
cmc
add
mov
mov
xchg
ret
add
add
insl
add
add
loope
clc
repnz
nop
nop
jae
je
add
mov
add
push
mov
leave
nop
jmp
ret
push
add
add
pop
add
push
mov
xchg
ret
dec
add
cmp
inc
xor
clc
repnz
nop
nop
jae
cli
add
add
ljmp
add
nop
jmp
cmp
clc
repnz
nop
nop
jae
aam
add
push
add
adc
add
add
inc
adc
repnz
nop
nop
jae
dec
std
ret
add
add
add
fdivr
add
clc
repnz
nop
nop
jae
add
cmp
lods
clc
repnz
nop
nop
jae
jp
add
add
add
mov
jne
push
mov
xchg
ret
movsb
add
add
add
jecxz
cmp
cld
nop
nop
jae
add
add
repz
mov
xchg
ret
add
add
movsb
cli
mov
mov
leave
nop
jmp
aam
add
inc
nop
push
mov
leave
nop
jmp
idivl
add
leave
add
jmp
add
mov
add
mov
out
out
clc
clc
repnz
nop
nop
jae
add
movsb
movntps
addb
nop
push
mov
leave
nop
jmp
test
es
mov
es
add
mov
add
push
clc
repnz
nop
nop
jae
add
xlat
add
shrl
inc
sbb
repnz
nop
nop
jae
dec
sbb
aaa
push
clc
repnz
nop
nop
jae
dec
cli
movnti
jp
ss
inc
clc
repnz
nop
nop
jae
add
add
dec
add
push
call
push
mov
xchg
ret
push
add
add
lret
or
add
repnz
nop
nop
jae
add
cwtl
sldt
clc
repnz
nop
nop
jae
add
push
inc
fld1
clc
repnz
nop
nop
jae
add
push
add
testl
push
mov
xchg
ret
xchg
add
add
mov
pop
clc
repnz
nop
nop
jae
ret
add
push
add
mov
push
mov
xchg
ret
std
sbb
push
add
jns
push
sub
clc
repnz
nop
nop
jae
add
fs
ret
aam
add
add
clc
repnz
nop
nop
jae
aam
add
push
push
mov
xchg
ret
add
add
push
pop
add
nop
push
mov
leave
nop
jmp
add
leave
add
clc
repnz
nop
nop
jae
testl
add
repnz
nop
nop
jae
ret
push
dec
mov
add
cmc
jmp
add
add
cmp
add
das
add
mov
add
clc
repnz
nop
nop
jae
add
add
push
loop
jb
adc
test
add
push
add
mov
nop
nop
jae
dec
mull
es
je
clc
repnz
nop
nop
jae
add
add
cmpw
nop
push
mov
leave
nop
jmp
test
pop
add
cld
sbb
nop
nop
jae
mov
inc
adc
add
mov
icebp
call
nop
jmp
testl
push
mov
xchg
ret
add
add
dec
jg
dec
sub
repnz
nop
nop
jae
pop
add
das
lods
add
cld
nop
nop
jae
dec
cmp
lods
jl
add
cmp
xchg
sub
repnz
nop
nop
jae
fs
addl
fisttpll
xchg
and
add
nop
jmp
add
add
repnz
nop
nop
jae
push
add
push
je
and
jmp
xchg
inc
add
sbb
pusha
mov
pop
inc
add
add
add
add
add
xor
clc
repnz
nop
nop
jae
add
pop
cli
add
add
xlat
push
clc
repnz
nop
nop
jae
je
add
add
clc
repnz
nop
nop
jae
dec
lret
add
push
mov
xchg
ret
adc
add
cli
add
add
xchg
push
push
mov
xchg
ret
add
sub
add
add
mov
add
add
push
mov
xchg
ret
push
cmp
add
mov
xchg
ret
push
clc
lods
add
je
add
push
mov
xchg
ret
jl
add
push
add
inc
out
or
clc
repnz
nop
nop
jae
add
add
dec
add
push
clc
repnz
nop
nop
jae
lret
sbb
cli
push
push
lock
inc
clc
repnz
nop
nop
jae
out
mov
std
add
movzwl
clc
repnz
nop
nop
jae
sub
cmpl
nop
push
mov
leave
nop
jmp
add
out
movsb
es
jb
and
add
mov
clc
repnz
nop
nop
jae
add
mov
pop
push
mov
xchg
ret
je
mov
je
inc
into
cmp
repnz
nop
nop
jae
cmp
pop
arpl
jbe
add
add
add
add
push
nop
push
mov
leave
nop
jmp
inc
jl
aam
dec
outsl
add
test
mov
fs
sbb
aam
xchg
sbb
mov
push
and
clc
jp
add
dec
pop
adc
add
jl
and
into
mov
xchg
ret
ret
add
imul
jmp
std
add
add
jne
add
adc
add
pop
add
mov
mov
leave
nop
jmp
add
add
clc
add
or
xchg
inc
add
add
lahf
add
add
nop
nop
jae
add
sub
imul
clc
repnz
nop
nop
jae
pxor
push
add
jo
test
mov
xchg
ret
add
add
add
add
in
jmp
je
add
fs
xchg
std
lret
je
add
clc
repnz
nop
nop
jae
add
xlat
add
cld
nop
nop
jae
add
add
mov
add
push
nop
push
mov
leave
nop
jmp
pop
cmp
mov
incl
add
nop
jmp
lret
rorb
bound
xchg
ret
add
add
cmp
push
xchg
xchg
push
mov
xchg
ret
out
add
add
nop
push
mov
leave
nop
jmp
add
xlat
jp
add
rcrb
repnz
nop
nop
jae
add
add
cmp
add
pop
fisttpll
mov
adc
repnz
nop
nop
jae
cmp
cmc
lods
jmp
add
mov
mov
imul
movnti
push
nop
push
mov
leave
nop
jmp
add
add
add
mov
inc
and
repnz
nop
nop
jae
imul
je
sub
clc
repnz
nop
nop
jae
mov
add
jp
add
icebp
pop
nop
push
mov
leave
nop
jmp
mov
xlat
xlat
pop
in
pop
add
push
mov
xchg
ret
add
add
add
dec
or
add
add
clc
repnz
nop
nop
jae
add
cmp
add
imul
lcall
in
leave
nop
jmp
add
cli
jnp
nop
push
mov
leave
nop
jmp
add
jl
add
cmp
clc
repnz
nop
nop
jae
add
mov
out
dec
or
test
repnz
nop
nop
jae
mov
lsl
clc
repnz
nop
nop
jae
jp
sub
add
out
mov
add
clc
repnz
nop
nop
jae
ret
clc
mov
and
cld
nop
nop
jae
adc
nop
add
mov
repnz
nop
nop
jae
sbb
dec
push
add
daa
pop
clc
repnz
nop
nop
jae
es
add
add
add
mov
push
mov
xchg
ret
add
add
xor
clc
repnz
nop
nop
jae
add
push
add
jl
stc
push
clc
repnz
nop
nop
jae
sub
add
lret
lret
rcll
repnz
nop
nop
jae
mov
nop
dec
add
clc
repnz
nop
nop
jae
je
lldt
and
sbb
clc
repnz
nop
nop
jae
add
add
imul
repnz
nop
nop
jae
add
dec
subl
repnz
nop
nop
jae
add
add
mov
push
mov
xchg
ret
push
outsl
das
push
lret
xchg
mov
clc
repnz
nop
nop
jae
add
ret
rorb
mov
push
mov
xchg
ret
add
std
lods
add
imul
push
in
std
add
dec
add
add
lahf
out
mov
sti
nop
push
mov
leave
nop
jmp
add
add
nop
mov
add
add
repnz
nop
nop
jae
add
je
lcall
cli
fnstcw
xchg
add
add
mov
mov
nop
nop
jae
das
adc
ret
pop
add
lods
add
je
mov
clc
repnz
nop
nop
jae
mov
es
xchg
and
lea
xchg
ret
outsl
add
es
add
push
cmp
nop
nop
jae
add
inc
jl
std
add
call
mov
xchg
ret
mov
test
cmp
mov
and
push
mov
add
push
test
nop
push
mov
leave
nop
jmp
aam
add
outsl
push
push
mov
xchg
ret
xlat
je
sldt
add
dec
imul
clc
repnz
nop
nop
jae
add
mov
les
nop
push
mov
leave
nop
jmp
sbb
pop
lahf
add
add
and
add
xchg
push
clc
repnz
nop
nop
jae
add
add
cld
nop
nop
jae
add
add
add
add
call
nop
jmp
add
xlat
lock
neg
add
inc
dec
inc
lds
fbstp
add
inc
add
shr
clc
repnz
nop
nop
jae
dec
add
cmp
add
sbb
jno
dec
push
nop
push
mov
leave
nop
jmp
fs
push
dec
inc
add
clc
repnz
nop
nop
jae
dec
bswap
das
imul
cld
nop
nop
jae
ret
dec
sbb
imul
repnz
nop
nop
jae
push
mov
push
das
dec
fld1
clc
repnz
nop
nop
jae
cmp
cmp
cmp
repnz
nop
nop
jae
add
test
push
jo
add
testb
push
mov
leave
nop
jmp
pop
pop
pop
add
add
lahf
dec
fwait
push
mov
xchg
ret
add
testl
cmp
cld
nop
nop
jae
cmp
add
push
pop
clc
repnz
nop
nop
jae
add
add
add
std
lods
add
outsl
je
clc
repnz
nop
nop
jae
push
mov
push
nop
push
mov
leave
nop
jmp
adc
add
push
clc
repnz
nop
nop
jae
add
pcmpeqb
add
mov
cmp
ret
clc
repnz
nop
nop
jae
add
outsl
add
add
jge
sbb
nop
push
mov
leave
nop
jmp
push
aam
mov
inc
notl
clc
repnz
nop
nop
jae
dec
lods
aam
add
sbb
push
clc
repnz
nop
nop
jae
fs
mov
fwait
push
mov
xchg
ret
cmp
pop
add
inc
adc
repnz
nop
nop
jae
cli
ret
testl
clc
repnz
nop
nop
jae
dec
mov
add
mov
jbe
mov
clc
repnz
nop
nop
jae
add
add
add
cmp
stos
nop
push
mov
leave
nop
jmp
add
dec
mov
addb
mov
clc
repnz
nop
nop
jae
out
je
add
add
add
repnz
nop
nop
jae
out
push
push
add
add
mov
xchg
ret
add
lods
sub
push
mov
xchg
ret
dec
add
subl
jecxz
push
mov
xchg
ret
add
inc
add
add
sub
add
repnz
nop
nop
jae
add
add
jmp
test
add
add
mov
je
test
repnz
nop
nop
jae
push
push
sbb
adc
lods
add
clc
repnz
nop
nop
jae
add
add
sub
mov
xchg
ret
out
add
insl
out
add
fsubrs
sub
clc
repnz
nop
nop
jae
std
sub
add
add
xchg
mov
nop
push
mov
leave
nop
jmp
cmp
cmp
mov
adc
repnz
nop
nop
jae
es
add
nop
mov
incl
das
inc
add
imul
lret
jecxz
push
mov
xchg
ret
imul
add
cmp
repnz
nop
nop
jae
add
fs
lahf
add
clc
repnz
nop
nop
jae
add
nop
mov
jmp
repnz
nop
nop
jae
cmp
add
add
mov
clc
push
mov
xchg
ret
xchg
jl
add
add
sti
pop
push
mov
xchg
ret
std
sbb
add
add
adc
add
add
clc
repnz
nop
nop
jae
add
lea
mov
xchg
ret
add
insl
push
cli
movsb
mov
inc
popa
mov
clc
repnz
nop
nop
jae
out
pop
das
push
inc
add
repnz
nop
nop
jae
fs
test
iret
cmp
nop
push
mov
leave
nop
jmp
cmp
add
mov
clc
repnz
nop
nop
jae
add
push
push
mov
push
mov
xchg
ret
clc
inc
insl
add
pop
clc
repnz
nop
nop
jae
not
cmp
add
add
cmpsl
mov
nop
push
mov
leave
nop
jmp
add
add
push
push
dec
pushf
xor
add
adc
cld
nop
nop
jae
add
push
cmp
orl
in
leave
nop
jmp
add
add
push
mov
xchg
ret
add
pop
add
jl
add
add
loop
add
repnz
add
push
clc
repnz
nop
nop
jae
add
sub
insl
mov
push
mov
xchg
ret
push
add
nop
cmp
and
repnz
nop
nop
jae
jl
add
dec
push
sbb
add
pushf
out
clc
repnz
nop
nop
jae
add
aam
add
nop
push
mov
leave
nop
jmp
add
add
sbb
add
add
test
mov
leave
nop
jmp
je
je
mov
clc
repnz
nop
nop
jae
mov
jl
xor
push
mov
xchg
ret
clc
addl
imul
imul
xchg
ret
dec
add
imul
jne
sar
repnz
nop
nop
jae
aam
dec
add
add
add
push
mov
xchg
ret
add
add
adcl
jbe
clc
repnz
nop
nop
jae
add
notl
mov
imul
nop
jmp
pop
aam
pop
inc
mov
clc
repnz
nop
nop
jae
dec
test
push
mov
repnz
nop
nop
jae
add
xor
cld
nop
nop
jae
je
add
dec
mov
nop
jae
sub
pop
add
je
add
mov
test
repnz
nop
nop
jae
pop
inc
add
repnz
nop
nop
jae
lahf
add
cmp
jmp
insl
add
add
cmp
add
lcall
nop
jae
add
add
std
movntps
sbb
repz
mov
xchg
ret
add
add
mov
add
push
mov
xchg
ret
inc
aam
jns
imul
repnz
nop
nop
jae
push
add
add
sbb
repnz
nop
nop
jae
add
add
clc
repnz
nop
nop
jae
cmp
push
int3
movsl
mov
nop
push
mov
leave
nop
jmp
add
cli
fs
add
test
add
add
add
xor
loopne
push
mov
xchg
ret
add
add
push
clc
repnz
nop
nop
jae
cmp
push
pand
clc
repnz
nop
nop
jae
lahf
negl
add
add
push
mov
xchg
ret
jns
xchg
dec
mov
fisttpll
mov
sub
repnz
nop
nop
jae
add
insl
das
dec
mov
jge
clc
repnz
nop
nop
jae
sbb
addl
nop
jae
add
adc
add
add
clc
repnz
nop
nop
jae
add
cmp
inc
add
clc
repnz
nop
nop
jae
pop
es
cmp
add
nop
push
mov
leave
nop
jmp
add
sbb
add
cwtl
xchg
decl
push
mov
xchg
ret
jp
cmp
jno
add
cmpsb
ja
add
push
xlat
add
push
add
jne
clc
repnz
nop
nop
jae
add
inc
xor
and
add
nop
push
mov
leave
nop
jmp
adc
jl
add
orl
clc
repnz
nop
nop
jae
lods
clc
add
add
lret
mov
clc
repnz
nop
nop
jae
add
add
push
nop
push
mov
leave
nop
jmp
addl
add
mov
nop
push
mov
leave
nop
jmp
mov
add
repnz
nop
nop
jae
jl
add
lret
cwtl
repz
clc
repnz
nop
nop
jae
add
add
add
movsb
add
add
add
push
and
je
add
add
cmp
add
test
add
clc
repnz
nop
nop
jae
das
cmp
push
nop
push
mov
leave
nop
jmp
add
je
out
add
repnz
nop
nop
jae
lret
addl
mov
nop
push
mov
leave
nop
jmp
clc
add
addb
cmp
mov
push
mov
xchg
ret
add
push
jp
xorl
repnz
nop
nop
jae
je
add
add
push
clc
repnz
nop
nop
jae
add
add
adc
dec
add
fcos
call
nop
jmp
xlat
add
mov
clc
repnz
nop
nop
jae
add
add
mov
mov
xchg
ret
cmp
add
mov
nop
nop
jae
add
sbb
sub
iret
push
clc
repnz
nop
nop
jae
sbb
add
mov
xchg
ret
fs
add
mov
ret
ds
addb
ss
add
xlat
push
push
mov
xchg
ret
outsl
cmp
mov
adc
repnz
nop
nop
jae
nop
xchg
mov
rep
clc
repnz
nop
nop
jae
add
add
outsl
add
add
sbb
add
aad
repz
clc
repnz
nop
nop
jae
lret
mov
nop
push
mov
leave
nop
jmp
add
add
add
jg
jne
clc
repnz
nop
nop
jae
add
xchg
cmp
push
pushl
push
mov
xchg
ret
add
add
add
shr
clc
repnz
nop
nop
jae
add
test
add
xchg
clc
repnz
nop
nop
jae
add
insl
test
add
call
mov
leave
nop
jmp
add
inc
pop
lods
add
or
add
outsl
fwait
clc
repnz
nop
nop
jae
pop
xchg
add
add
popf
call
clc
repnz
nop
nop
jae
add
add
mov
clc
repnz
nop
nop
jae
je
test
add
or
mov
xchg
ret
mov
add
in
mov
clc
repnz
nop
nop
jae
add
das
insl
add
add
clc
repnz
nop
nop
jae
add
add
das
dec
add
mov
clc
repnz
nop
nop
jae
testl
xchg
div
clc
repnz
nop
nop
jae
add
mov
test
pop
popa
dec
clc
repnz
nop
nop
jae
imul
hlt
xchg
inc
add
mov
add
add
add
cld
nop
nop
jae
push
push
add
mov
clc
repnz
nop
nop
jae
add
inc
inc
cmp
push
mov
xchg
ret
add
cmp
out
jl
add
pushf
into
or
add
xor
nop
jae
nop
push
test
mov
sub
clc
repnz
nop
nop
jae
add
push
add
das
fists
leave
nop
jmp
add
add
sub
das
ljmp
cld
nop
nop
jae
je
addl
add
aaa
add
clc
repnz
nop
nop
jae
add
nopl
add
repnz
nop
nop
jae
out
lods
dec
jle
add
aas
add
clc
repnz
nop
nop
jae
lahf
sub
je
stos
ret
add
add
add
imul
sbb
sbb
adc
mov
clc
repnz
nop
nop
jae
jns
dec
add
test
add
clc
repnz
nop
nop
jae
add
and
repnz
nop
nop
jae
add
add
add
lss
clc
repnz
nop
nop
jae
add
push
add
or
add
cmpsb
add
ds
add
iret
jmp
push
add
add
das
sub
add
jb
pop
nop
push
mov
leave
nop
jmp
pop
add
sub
nop
add
iret
push
push
mov
xchg
ret
das
add
lret
jp
sub
clc
repnz
nop
nop
jae
cli
dec
add
add
push
mov
xchg
ret
jl
xchg
add
call
clc
repnz
nop
nop
jae
imul
sub
add
je
inc
add
mov
cmp
mov
xchg
ret
pop
add
jl
add
call
push
mov
xchg
ret
add
add
xlat
push
add
mov
leave
nop
jmp
mov
dec
add
push
push
mov
xchg
ret
add
pop
mov
jl
mov
nop
push
mov
leave
nop
jmp
mov
insl
addb
stc
call
nop
push
mov
leave
nop
jmp
cmp
fwait
push
mov
xchg
ret
add
cmp
outsl
push
cli
jl
add
pop
clc
repnz
nop
nop
jae
lods
add
add
clc
repnz
nop
nop
jae
add
add
add
clc
repnz
nop
nop
jae
nop
mov
pop
je
clc
repnz
nop
nop
jae
lahf
jl
push
clc
repnz
nop
nop
jae
add
adc
push
mov
clc
repnz
nop
nop
jae
andl
leave
nop
jmp
add
pop
add
add
dec
mov
clc
repnz
nop
nop
jae
je
std
aam
std
cmp
inc
clc
repnz
nop
nop
jae
pop
add
add
xor
add
ret
push
mov
xchg
ret
sbb
outsl
add
jp
add
flds
mov
leave
nop
jmp
add
add
push
lret
push
mov
xchg
ret
das
add
dec
mov
jne
clc
repnz
nop
nop
jae
add
mov
xchg
ret
add
add
verr
repnz
nop
nop
jae
add
cmp
mov
clc
repnz
nop
nop
jae
add
dec
inc
add
add
nop
nop
jae
inc
push
cmp
jns
call
clc
repnz
nop
nop
jae
add
adc
mov
xchg
ret
jp
je
add
jnp
dec
cmp
repnz
nop
nop
jae
ret
add
add
dec
addb
fnstcw
clc
repnz
nop
nop
jae
cmp
push
push
mov
xchg
ret
push
add
testl
adc
clc
repnz
nop
nop
jae
xchg
xlat
push
push
mov
push
push
mov
xchg
ret
sbb
aam
pop
fs
add
dec
inc
imul
clc
repnz
nop
nop
jae
add
add
add
push
pop
fld1
nop
push
mov
leave
nop
jmp
push
xchg
mov
movsb
add
sarl
nop
push
mov
leave
nop
jmp
mov
push
push
mov
nop
push
mov
leave
nop
jmp
dec
add
pop
lahf
sub
pop
nop
push
mov
leave
nop
jmp
add
push
xlat
add
nop
add
aad
clc
repnz
nop
nop
jae
sub
add
adc
fs
in
adc
mov
push
clc
repnz
nop
nop
jae
add
add
jns
inc
add
push
mov
add
clc
repnz
nop
nop
jae
push
add
inc
sti
push
push
mov
xchg
ret
push
xchg
dec
add
je
add
push
ds
clc
repnz
nop
nop
jae
outsl
out
push
add
mov
xchg
ret
xchg
add
adc
je
fistpl
push
mov
xchg
ret
test
jns
movsb
mov
arpl
clc
repnz
nop
nop
jae
outsl
add
aas
adc
nop
jmp
add
add
xchg
lods
push
pop
clc
repnz
nop
nop
jae
add
add
adc
jo
nop
push
mov
leave
nop
jmp
add
sub
add
clc
repnz
nop
nop
jae
sbb
push
add
xlat
fld1
clc
repnz
nop
nop
jae
add
add
xchg
xlat
xor
cld
push
mov
xchg
ret
add
testl
add
dec
nop
push
mov
leave
nop
jmp
sub
add
scas
pop
push
mov
xchg
ret
dec
das
add
dec
add
xchg
add
add
clc
repnz
nop
nop
jae
lods
sbb
pop
pop
fld1
push
mov
xchg
ret
cli
add
add
add
flds
jmp
mov
xchg
ret
xchg
cmp
adc
fwait
call
clc
repnz
nop
nop
jae
add
dec
dec
xchg
nop
push
mov
leave
nop
jmp
cmp
inc
add
nop
nop
jae
add
add
lahf
adc
je
mov
clc
repnz
nop
nop
jae
add
dec
sub
add
movsb
clc
repnz
nop
nop
jae
add
push
add
pop
push
clc
repnz
nop
nop
jae
add
lods
add
xchg
lods
add
test
call
nop
jmp
je
add
cld
nop
nop
jae
add
das
cli
push
adc
dec
push
clc
repnz
nop
nop
jae
add
add
test
fdivr
clc
repnz
nop
nop
jae
nop
add
xorl
clc
repnz
nop
nop
jae
sub
xor
clc
repnz
nop
nop
jae
cli
add
xlat
sldt
fdivrl
nop
nop
jae
jns
add
add
pop
add
push
mov
xchg
ret
movsb
add
xchg
add
mov
push
mov
xchg
ret
add
push
pop
lea
mov
cmp
ret
add
std
add
orl
cld
fdivr
incl
out
push
je
test
add
das
sbbl
add
add
cmp
nop
nop
jae
out
add
dec
add
mov
repnz
nop
nop
jae
xchg
add
add
mov
jne
clc
repnz
nop
nop
jae
cmp
add
sbb
clc
repnz
nop
nop
jae
add
add
inc
add
clc
repnz
nop
nop
jae
add
add
lahf
add
clc
repnz
nop
nop
jae
add
std
lahf
je
int3
sbb
addl
cli
add
pop
add
jmp
clc
repnz
nop
nop
jae
out
jns
dec
out
add
arpl
cld
nop
nop
jae
pop
je
mov
lahf
test
nop
push
mov
leave
nop
jmp
xlat
add
add
dec
clc
dec
inc
clc
repnz
nop
nop
jae
add
add
movsb
push
mov
xchg
ret
add
add
imul
clc
repnz
nop
nop
jae
pop
paddq
loop
nop
push
mov
leave
nop
jmp
mov
add
test
nop
push
mov
leave
nop
jmp
push
add
inc
adc
mov
clc
repnz
nop
nop
jae
add
add
xlat
lret
pusha
clc
repnz
nop
nop
jae
je
push
add
dec
add
test
add
add
mov
clc
repnz
nop
nop
jae
inc
pop
add
nop
nop
jae
push
push
push
mov
add
repnz
nop
nop
jae
add
movsb
jl
cmp
add
clc
repnz
nop
nop
jae
lret
add
adc
test
nop
push
mov
leave
nop
jmp
add
das
sbb
test
add
push
nop
push
mov
leave
nop
jmp
add
xlat
add
add
sub
repnz
nop
nop
jae
add
push
jp
aam
shlb
add
clc
repnz
nop
nop
jae
add
outsl
imul
xchg
ret
add
sbb
add
stos
push
push
mov
xchg
ret
add
mov
push
add
repnz
sbb
clc
repnz
nop
nop
jae
push
mov
add
popf
mov
clc
repnz
nop
nop
jae
add
add
ret
add
rclb
pusha
inc
add
push
cmp
add
add
push
mov
xchg
ret
insl
add
mov
add
add
clc
repnz
nop
nop
jae
add
add
push
add
add
test
push
mov
leave
nop
jmp
clc
add
test
in
leave
nop
jmp
add
jl
add
es
mov
push
mov
leave
nop
jmp
adc
add
fistpl
and
repnz
nop
nop
jae
add
pop
mov
nop
push
mov
leave
nop
jmp
adc
fisttpl
mov
adc
push
mov
leave
nop
jmp
nop
nop
push
add
add
scas
jbe
add
imul
push
push
push
mov
xchg
ret
add
mov
add
and
cld
nop
nop
jae
pop
pop
mov
movzwl
nop
push
mov
leave
nop
jmp
lahf
push
add
or
add
nop
nop
jae
add
cmp
add
not
clc
repnz
nop
nop
jae
clc
push
dec
add
add
nop
push
mov
leave
nop
jmp
add
add
call
clc
repnz
nop
nop
jae
sub
add
cld
nop
nop
jae
add
add
add
ret
popf
push
clc
repnz
nop
nop
jae
std
inc
add
adc
add
add
clc
repnz
nop
nop
jae
inc
add
push
push
add
cwtl
pop
add
add
add
imulb
andl
nop
nop
jae
add
push
add
test
cld
clc
repnz
nop
nop
jae
lods
sbb
aam
add
stc
push
push
mov
xchg
ret
jp
add
xchg
pop
push
add
mov
movb
loope
inc
add
xlat
add
add
lahf
fistpl
push
mov
xchg
ret
jl
add
add
fiaddl
test
cli
clc
repnz
nop
nop
jae
push
je
inc
mov
clc
repnz
nop
nop
jae
dec
jp
add
add
add
clc
repnz
nop
nop
jae
das
add
add
arpl
clc
repnz
nop
nop
jae
add
clc
add
repnz
nop
nop
jae
cli
add
dec
add
sbb
lods
push
clc
repnz
nop
nop
jae
dec
add
add
mov
push
mov
xchg
ret
push
imul
add
sub
clc
repnz
nop
nop
jae
add
push
xchg
add
mov
xchg
ret
add
add
dec
push
dec
adc
inc
adc
mov
xchg
ret
mov
add
dec
pop
push
mov
xchg
ret
pop
cmp
inc
add
jno
pop
push
mov
xchg
ret
add
add
add
cmp
clc
repnz
nop
nop
jae
je
addl
pop
fidivs
xchg
xchg
ret
add
je
add
add
in
clc
repnz
nop
nop
jae
lods
lahf
mov
push
mov
leave
nop
jmp
mov
adcl
push
push
mov
xchg
ret
dec
add
add
add
add
nop
nop
jae
add
out
sbb
add
clc
or
clc
repnz
nop
nop
jae
add
add
mov
call
clc
repnz
nop
nop
jae
add
xchg
cmc
pusha
push
mov
xchg
ret
mov
add
mov
clc
repnz
nop
nop
jae
mov
push
add
add
clc
repnz
nop
nop
jae
add
lds
cld
nop
nop
jae
add
fs
mov
clc
repnz
nop
nop
jae
add
xchg
mov
clc
repnz
nop
nop
jae
add
mov
add
add
add
cmp
add
ja
jl
add
add
push
nop
out
mov
incb
dec
lock
movsl
and
add
dec
lret
inc
mov
pop
cmp
popa
inc
aam
outsb
mov
insl
movsb
add
inc
jae
cmpsl
cmp
and
jl
jmp
xor
hlt
cmp
jne
pop
push
rolb
add
popf
ljmp
add
add
addb
xchg
sub
add
sbb
dec
rclb
lret
dec
out
or
add
dec
insb
cmp
arpl
sbb
sbb
cmp
add
cld
scas
add
jno
movsl
aad
add
pop
clc
push
jbe
add
orl
fldt
and
add
cmp
sub
add
pop
movsb
add
sbb
dec
mov
add
xchg
fs
push
test
add
sub
add
add
fcom
rcl
xchg
add
xor
add
inc
pop
mov
add
pop
mov
dec
pushf
jmp
add
aaa
inc
or
add
add
add
pop
sbb
pushf
push
add
shrb
add
ljmp
pop
mov
push
push
add
fsts
adc
enter
mov
add
add
lcall
xchg
lahf
daa
rcrl
sarl
iret
pop
mov
cltd
shll
jmp
xor
jae
mov
push
add
pusha
sub
push
cmp
inc
rorb
out
add
ret
daa
fucomp
gs
add
add
rorl
adc
inc
mov
sub
add
jne
mov
int3
add
add
sub
add
xor
fisubs
add
cmp
inc
sbb
les
dec
xor
mov
add
mov
add
add
add
add
xor
test
add
add
jo
xlat
cmp
push
add
push
ss
xchg
stos
sbb
mov
cmp
sub
mov
or
add
add
xchg
pop
in
lock
add
addr16
into
xor
bound
xchg
in
imul
add
jbe
divps
push
add
mov
aaa
push
cmp
add
jae
stos
xor
addr16
push
add
pop
stc
dec
dec
mov
add
adc
mov
mov
add
xor
loopne
mov
add
cld
sub
bound
fdiv
mov
mov
add
pop
inc
jl
test
add
inc
xchg
fwait
aam
into
mov
subl
push
add
dec
xor
decb
sub
add
xchg
testb
add
adc
add
out
lahf
mov
mov
push
aas
dec
fcmovne
vandpd
add
arpl
adc
add
add
sbb
shrb
xor
dec
fnsave
outsl
or
add
mov
add
shll
pop
rorb
add
push
jbe
int3
nop
loopne
pop
mov
repnz
das
inc
mov
inc
out
cmp
jno
aas
push
add
inc
jmp
sarl
mov
xchg
xor
clc
pop
adc
sub
add
mov
loope
popa
mov
sub
add
lods
add
js
dec
aaa
loopne
or
enter
sub
add
add
add
inc
mov
push
add
jge
ret
xchg
mulb
add
add
jge
mov
in
adc
rcll
stos
dec
sbb
and
add
clc
mov
xchg
add
sbb
sub
xor
add
ud2
inc
lods
pop
mov
add
test
inc
add
add
out
imul
shll
ljmp
mov
add
test
inc
jo
mov
add
pop
and
add
add
or
add
cmpsb
add
popa
lds
shlb
cltd
mov
xor
in
rclb
ss
add
ljmp
dec
xchg
dec
xchg
add
xor
pop
pmulhuw
xchg
outsb
add
test
in
in
sbb
add
call
add
jne
cli
mov
and
adc
cmp
add
pop
sub
das
lcall
das
call
add
mov
pop
aad
add
dec
cmpl
fidivrs
xchg
sti
mov
add
inc
mov
fisubrl
jl
loop
stos
add
mov
je
sub
add
into
cmp
add
pop
test
add
popw
inc
enter
lock
push
mov
or
add
roll
add
dec
imul
iret
nop
sbb
jb
insb
jbe
pop
jns
push
push
aaa
xor
xor
loope
cmc
add
adc
or
add
lret
cli
test
add
test
addb
xlat
jge
dec
jp
pop
sbb
pop
inc
cmc
pop
popa
dec
or
add
push
lea
loop
xlat
out
into
jecxz
or
add
decl
add
pushl
add
add
movsl
ret
xchg
inc
lcall
lds
mov
jae
out
iret
mov
int3
push
std
mov
add
mov
popf
pop
add
insb
lods
dec
gs
dec
aaa
sub
add
repnz
cltd
jae
pop
out
fsub
fiaddl
add
fmul
dec
push
fs
mov
cmp
push
lods
add
inc
push
sbb
xchg
jae
jae
push
stc
popa
pop
push
pop
mov
lcall
mov
addr16
mov
pop
mov
pop
sub
add
add
mov
mov
dec
mov
iret
aas
scas
add
nop
jno
out
pop
add
or
add
add
fistps
rorl
in
add
jne
add
iret
imul
rcrl
sbb
add
imul
add
mov
add
pop
jecxz
mov
mov
add
mov
add
add
mov
add
addl
mov
add
add
sbb
aad
adc
test
add
lods
add
test
dec
push
dec
scas
add
ret
add
jb
inc
sbbl
fistpl
add
roll
mov
add
faddl
add
aaa
pop
inc
pop
jl
xchg
push
roll
add
mov
and
rcl
push
ret
add
sub
push
scas
mov
add
push
sub
sub
scas
faddl
aam
rorb
call
imul
cmp
add
add
jp
add
pusha
dec
xchg
add
insb
sub
add
pusha
fsubr
lcall
push
add
or
jp
ljmp
inc
cmp
hlt
int3
rol
out
add
mov
push
xchg
add
fcmovnb
sbb
mov
in
gs
mov
fcompl
test
add
add
lods
add
rcll
mov
test
or
add
add
jb
add
aaa
pushf
sbb
add
xor
mov
add
mov
pop
add
push
cmpl
pusha
je
push
and
add
add
add
mov
mov
popa
movsb
add
cli
into
pop
and
add
mov
arpl
test
add
dec
stos
in
add
add
add
add
testb
pusha
shl
cld
and
add
imul
fisubrl
add
or
add
pop
imul
mov
push
icebp
xor
out
pop
mov
mov
rol
pop
movsl
jecxz
jbe
jae
loope
push
inc
insb
dec
imul
cmpsl
out
dec
repz
add
fcmove
inc
sub
add
shlb
nop
aaa
add
arpl
sbb
movsb
add
push
jnp
ljmp
add
add
out
popa
mov
jl
mov
rcrl
mov
jbe
xor
iret
pop
jns
cli
loop
pop
lahf
dec
fmul
cmp
mov
add
out
push
pop
push
jo
xor
add
dec
into
push
xchg
fwait
jge
add
loop
xchg
mov
int3
lcall
pop
sub
aaa
adc
and
add
add
test
add
popf
push
fstpt
movsl
fldl
lea
rcrb
adc
jbe
add
loop
fwait
sbb
imul
insl
in
pop
pop
push
add
xchg
popa
insl
sub
xor
loopne
pop
sti
cmp
jnp
mov
bound
add
pushf
cltd
pusha
adc
push
icebp
mov
add
ret
add
add
push
cld
ja
add
sti
pop
jl
mov
xor
add
shrb
aas
sbb
je
add
sub
jno
lea
or
add
cli
stos
push
push
mov
pop
jecxz
jae
pop
aad
or
insl
cld
inc
mov
cmp
dec
faddp
pusha
stos
xchg
xor
add
add
and
add
ret
lret
in
mov
add
add
int3
sbb
add
add
dec
xchg
pop
inc
adc
dec
inc
pusha
xchg
jecxz
dec
cmp
add
inc
inc
dec
cmp
dec
adc
rcl
dec
lahf
hlt
iret
mov
lcall
or
add
add
dec
pop
dec
fistpll
pusha
stc
aaa
cmp
call
lret
and
add
pop
adc
lock
add
add
mov
push
mov
mov
xchg
mov
jg
add
pop
inc
dec
pop
daa
and
dec
cmp
jns
clc
mulb
mov
mov
or
add
lea
shll
xchg
mov
test
add
sub
pop
xchg
imull
add
mov
popa
sub
add
dec
call
sub
addb
sub
add
add
test
add
arpl
mov
add
cmp
out
addb
pop
jnp
out
adc
fildl
add
xchg
test
add
sar
imul
mov
pushf
dec
in
add
inc
xchg
add
add
push
dec
aaa
shrl
into
scas
add
inc
dec
test
add
jae
jp
push
inc
add
sbb
rcrl
scas
out
or
add
xor
add
pop
in
adc
rorl
lcall
sti
mov
inc
adc
push
add
xchg
push
popf
inc
fmul
arpl
cmp
testb
jmp
lea
add
mov
add
mov
sti
cmp
pop
fcmovnb
or
aam
cmp
loope
popf
repz
add
xchg
push
roll
xchg
mov
sbb
bound
cmpsb
add
lods
add
mov
add
popa
inc
push
adc
clc
adc
aam
test
loop
mov
jo
jae
push
add
mov
out
jmp
xchg
add
mov
add
inc
scas
add
imul
cltd
ss
sub
add
stc
mov
dec
out
loope
add
ljmp
sarb
int
shl
add
xor
dec
jmp
inc
mov
stos
add
add
add
hlt
ja
test
add
sbb
movsl
and
add
and
add
enter
lahf
testb
mov
push
add
and
aas
inc
in
add
addr16
outsl
cli
ljmp
mov
outsb
pop
fsubl
movsl
jbe
nop
outsb
enter
popf
and
xor
insl
mov
repz
scas
add
and
pop
addb
and
add
add
insl
shl
or
movsb
add
sub
add
ret
fcoml
cmc
push
inc
pusha
sub
in
scas
and
pop
lret
jle
lret
sbb
push
add
sub
add
jns
hlt
leave
les
add
push
aaa
and
xor
sub
shl
movsb
add
jbe
pop
cmc
sahf
sub
add
das
xchg
out
addb
imul
imul
lret
aad
js
mov
js
pcmpeqb
cwtl
lock
stc
dec
sbb
test
add
xor
dec
cmp
xor
imulb
add
insl
sub
stos
add
cmpsl
jns
add
dec
add
add
jne
add
loop
xchg
test
add
cltd
outsb
in
insw
cmpsb
add
mov
add
push
fnstsw
inc
addb
mov
cli
mov
add
test
add
mov
add
dec
add
and
add
outsl
cld
rclb
into
lock
mov
adc
sub
bound
xchg
xchg
sbb
mov
mov
fdivl
add
mov
add
or
add
std
fnstsw
testl
add
and
arpl
jl
add
jmp
adc
addb
xchg
inc
mov
dec
push
lcall
fcmovnbe
shrl
int
adc
add
outsl
push
add
mov
xchg
sub
jg
lock
add
rorb
movsb
add
popa
pop
cmp
lahf
fcoms
inc
mov
add
push
add
pushf
dec
inc
notb
pop
in
pop
faddl
mov
inc
xchg
pop
rcrl
cltd
inc
stos
add
push
add
pop
push
push
mov
add
cli
jno
fsubl
decb
xor
or
add
pop
outsb
mov
xchg
add
mov
mov
gs
iret
mov
xchg
push
push
lahf
je
lods
add
cmpsl
mov
add
imul
push
push
gs
addb
add
lret
lods
jnp
imul
lcall
idivl
jmp
add
push
pop
add
add
sar
jns
out
cmp
add
and
add
sbb
leave
in
aaa
fidivrl
scas
add
and
add
into
cmc
inc
shlb
xchg
sti
sbb
mov
add
pop
iret
test
test
mov
add
add
add
jmp
pop
mov
add
lcall
repz
int3
int3
push
mov
xor
add
out
cmp
jmp
add
or
add
add
clc
das
sbb
xchg
insl
cltd
icebp
sbb
enter
add
and
add
add
or
add
sub
popf
add
xchg
add
add
mov
xchg
ds
inc
sahf
jle
xor
add
mov
cltd
les
jnp
xchg
lea
xchg
aad
add
push
push
lret
sbb
pop
sbb
or
add
addr16
adc
add
add
add
test
add
cmp
daa
mulb
add
mov
testb
jge
imul
add
add
stos
mov
cmp
addb
popf
mov
adc
in
iret
scas
addr16
fnsave
jge
imul
mov
aaa
pop
inc
adc
add
pop
mov
popa
mov
add
add
fnstenv
cld
cmp
cmpl
repnz
mov
sub
add
mov
jbe
stos
add
rolb
repz
das
jo
daa
cmp
lods
add
jge
adc
sbb
adc
lods
mov
add
imul
or
add
ficoml
jmp
add
jmp
push
test
pusha
scas
sbb
imul
add
cmp
std
outsl
add
add
dec
inc
add
inc
and
add
pop
fwait
scas
xchg
sub
sbb
pop
mov
ffreep
cmp
add
cwtl
in
movsl
pop
cwtl
push
add
in
jp
out
and
add
insl
push
inc
sbb
add
jo
ret
inc
loopne
add
add
xor
test
add
mov
add
outsb
mov
add
add
fnstenv
fisubl
add
mov
leave
sbb
jecxz
mov
add
jae
popf
ret
and
mov
dec
xchg
xchg
out
cmc
scas
pop
jle
add
enter
fisttpl
add
push
xchg
scas
rcl
cld
mov
add
adc
add
ffree
sub
add
enter
incl
addr16
cmp
push
push
or
std
mov
add
clc
cmpsb
add
push
add
les
cmc
pop
add
add
js
xor
pop
call
add
and
add
xor
or
sahf
lods
add
aaa
ja
cmpsl
xor
mov
in
std
xchg
pop
aaa
jae
sub
and
fadd
xchg
js
add
add
sahf
xlat
sub
add
pop
sub
add
dec
into
inc
jge
add
add
adc
pop
xchg
ja
xchg
popa
clc
add
add
sub
add
repnz
add
and
add
jp
test
add
xor
push
add
xor
int3
mov
add
or
add
dec
jmp
xchg
push
add
add
add
mov
ja
js
sti
sub
add
xor
add
sub
or
add
cmp
and
add
push
mov
leave
out
test
add
arpl
pop
pop
or
add
fadds
xor
add
cmp
mov
add
fildll
movsb
add
call
xchg
sub
dec
enter
cmp
call
inc
in
add
add
je
mov
mov
add
or
dec
fmuls
jns
push
cmp
adc
dec
jbe
add
dec
jge
xchg
jg
cmc
stc
add
test
in
xchg
add
mov
add
iret
mov
add
sbb
mov
add
inc
adc
add
add
add
jg
cwtl
mov
add
add
inc
sbb
das
int
add
adc
add
je
mov
add
addl
push
add
sbb
jp
add
sbb
add
repnz
repnz
xchg
outsl
xor
add
int
in
testl
mov
cld
cltd
push
add
mov
iret
inc
jl
add
outsb
mov
outsb
in
pop
add
cli
sbb
out
pop
inc
cmpsb
add
adc
mov
pop
pop
sub
add
call
inc
lds
scas
aad
popa
test
add
xor
mov
mov
push
fnstenv
sahf
cltd
sub
add
mov
push
lahf
add
add
inc
js
pop
push
pop
cltd
or
add
les
sahf
adc
push
sub
add
and
add
das
cwtl
xchg
push
mov
add
sub
add
in
dec
dec
outsb
inc
inc
and
add
fcmovnbe
mov
jp
outsl
iret
les
addb
sub
lods
idivl
add
xchg
inc
cmp
in
push
jno
add
ficomps
jg
ret
loope
lods
add
ljmp
add
lret
dec
dec
testb
out
inc
dec
xchg
pop
cmp
cmp
lods
mov
push
add
mov
mov
ret
mov
cmp
sub
add
add
and
push
rorl
add
out
adc
jl
xchg
jnp
add
ret
jne
test
add
add
add
add
or
add
lods
add
push
dec
dec
inc
int3
mov
add
sub
add
dec
sub
add
sbb
lds
imulb
pop
ljmp
out
add
fistpll
mov
mov
pop
test
add
dec
jno
or
cld
adc
lods
add
mov
scas
inc
and
add
add
dec
adc
xor
add
loope
mov
and
add
add
or
add
push
jecxz
imul
jbe
iret
js
cmc
bound
cmp
add
xchg
dec
sahf
jp
jecxz
xchg
add
sqrtps
push
and
add
jp
leave
in
fdivs
sbb
loope
ret
pop
std
imul
add
imul
mov
jl
add
daa
aad
sbb
mov
pop
aas
addb
arpl
leave
lahf
dec
out
mov
add
cmp
sahf
fmulp
mov
add
aaa
lahf
movsl
sbb
pop
cmp
ljmp
imul
jns
mov
lea
incl
add
adc
jle
inc
sar
add
stos
add
xor
cmp
call
and
mov
aad
stos
add
lock
add
pop
movsl
fadd
and
add
jo
add
mov
add
imul
add
add
ljmp
push
inc
xchg
add
add
xlat
pop
js
cmp
dec
fidivs
into
sbb
add
pop
jg
mov
sbb
add
notl
daa
inc
div
repnz
enter
faddl
xchg
adc
sbb
mov
add
adc
outsl
mov
xor
shll
out
std
pop
mov
sub
add
add
push
add
mov
in
add
add
dec
pop
mov
push
out
add
dec
cwtl
loope
cmpsb
add
pop
cwtl
bound
inc
iret
bound
xor
add
xor
fs
popa
cmp
orl
xor
mov
bound
jecxz
dec
sbb
movsl
xchg
imul
int
test
push
pop
xchg
add
add
sub
add
mov
movaps
nop
mov
add
rcr
push
mov
shrb
xor
jns
aaa
ds
cmp
mov
fiadds
add
mov
jno
addb
mov
push
stc
iret
stc
fndisi(8087
jb
out
jge
mov
push
out
fistpll
add
aas
or
add
pop
adc
and
add
ficomps
add
add
insl
dec
fcompl
dec
scas
adc
leave
test
fisubrs
pop
aas
pushf
ret
inc
xchg
ds
arpl
negb
inc
adc
fwait
dec
inc
testb
add
fadds
negb
xchg
fsubr
das
add
add
mov
add
dec
shlb
mov
add
add
add
xor
out
add
aad
add
add
mov
loop
add
cmp
call
fstpt
xchg
cmpsl
mov
mov
test
lea
sbb
add
dec
scas
add
push
in
mov
xor
and
add
repnz
mov
add
stc
cmp
repnz
lods
add
push
jb
ret
add
rclb
mov
add
sbb
sub
add
adc
jne
add
addb
sbb
imul
xchg
dec
lahf
add
add
lret
and
add
movsb
add
dec
adcl
adc
mov
push
jg
add
imul
ja
pop
adc
jns
xor
mov
mov
repz
add
mov
sub
add
adc
scas
add
inc
mov
out
imul
mov
pop
lcall
add
sbb
pop
repz
scas
pusha
sub
add
std
xor
add
testb
add
lea
hlt
cmpsl
add
icebp
movsl
clc
pop
das
ror
inc
outsl
arpl
repnz
xor
popa
push
add
mov
out
je
push
mov
add
outsb
mov
inc
sub
add
fadd
xchg
xor
fsubs
sub
inc
dec
sahf
jb
add
and
add
sbb
ret
clc
bound
add
jecxz
enter
hlt
push
bound
dec
cmp
cmp
lds
add
xor
add
add
rolb
outsb
jne
andl
cli
aas
and
add
add
incb
pop
xchg
andl
mov
add
xor
cld
cmp
inc
lahf
gs
push
fcomp
mov
xor
mov
or
outsb
dec
cld
das
cld
lahf
or
adc
enter
add
add
fcmovnu
movsl
mov
add
rolb
daa
mov
add
repnz
xor
ds
arpl
add
mov
pop
sub
add
dec
mov
in
add
lahf
push
iret
push
xchg
add
imul
hlt
cmp
in
or
add
add
cmpsb
add
pop
mov
jae
mov
add
daa
arpl
rcr
mov
cmc
out
push
sub
add
iret
outsb
adc
add
xlat
dec
sub
addr16
je
jns
ds
inc
scas
add
sahf
daa
adc
mov
ret
inc
inc
push
xor
push
fwait
adc
mov
fs
jns
add
jmp
nop
bound
add
fwait
sbb
add
ret
cmp
outsl
fisttps
jb
arpl
jns
out
imul
cmp
mov
add
call
mov
bound
sbb
pop
pop
add
add
push
add
lahf
bound
add
or
xchg
out
mov
shl
nop
and
outsb
aas
xor
subl
cmp
jle
cli
into
sbb
mov
imul
aam
add
jbe
out
ss
jnp
add
add
fwait
jp
testl
or
add
lods
add
sbb
xchg
add
fldcw
add
jp
popf
jnp
or
add
jne
ljmp
or
call
adc
mov
mov
fbstp
add
push
add
mov
dec
in
push
add
daa
rolb
add
movsl
push
and
inc
jae
repnz
clc
mov
inc
jbe
xor
or
inc
sub
add
adc
add
add
std
jns
add
sub
add
jno
add
add
push
mov
xchg
add
sbbl
in
flds
and
adc
add
arpl
push
outsl
push
imul
xchg
xor
add
stc
insb
das
in
push
outsl
daa
xor
mov
inc
rorb
pop
and
add
adc
xor
sbb
xor
add
mov
xchg
mov
addr16
jne
adc
jge
or
add
in
add
add
out
mov
sub
fimull
add
inc
std
sub
add
add
add
bound
or
cmp
iret
sbb
add
jmp
lds
add
data16
pop
loopne
in
stos
add
xchg
cmp
and
add
test
fwait
pop
and
add
inc
mov
out
mov
xor
test
cmp
mov
xchg
adc
add
test
add
adc
aaa
jo
mov
sti
pop
push
mov
mov
xchg
mov
pop
mov
test
add
pop
out
daa
lret
pop
mov
add
icebp
pop
adc
xchg
std
and
add
add
and
test
inc
ja
call
mov
mov
lahf
insb
xor
sub
add
ret
pushf
imul
inc
mov
add
pop
fildl
jbe
das
xchg
in
mov
std
push
inc
push
jle
jmp
mov
fldt
add
add
into
dec
mov
inc
mov
clc
out
syscall
dec
xor
pop
lahf
xstore-rng
cmpsl
inc
dec
push
and
add
mov
pusha
jl
jns
and
lods
add
mov
add
add
idivl
js
rcr
sub
jecxz
popf
test
add
lods
test
lods
js
add
hlt
enter
mov
mov
pop
cmp
sub
add
xchg
add
push
mov
add
add
rcrl
shlb
adc
xchg
and
add
jno
and
mov
push
add
pop
pop
imul
push
cld
in
jl
add
and
add
fmull
call
outsb
mov
cmp
sahf
push
push
or
dec
xchg
jae
stos
xlat
loop
cld
xor
jp
add
in
sbb
dec
inc
in
jl
shrl
ficoml
mov
data16
cmpsb
add
xor
ljmp
sbb
ror
ljmp
leave
inc
add
lods
add
in
movsl
adc
add
xor
cli
dec
rcll
push
popf
in
fwait
jmp
mov
shlb
sub
add
mov
add
mov
dec
sbb
dec
jecxz
add
jb
cmpsl
out
or
add
imul
add
or
add
fdivr
pop
loopne
sub
jle
cltd
cmp
add
mov
add
iret
rclb
add
iret
mov
movsl
jmp
aaa
mov
je
cli
ror
and
add
lret
cli
sbb
mov
add
int
add
mov
fsubr
cmpsb
add
push
add
sub
add
arpl
xchg
xchg
pop
cmp
add
movsl
push
and
add
sub
test
les
sub
add
push
lock
push
arpl
jns
xchg
xchg
or
mov
sbb
xchg
push
mov
add
add
pop
faddl
outsl
idivb
xor
int
xchg
cld
push
xchg
test
add
sbb
outsl
cwtl
cld
ss
aas
fdivl
insb
js
xor
mov
dec
pop
and
add
scas
cwtl
ret
mov
add
pop
mov
add
add
xchg
add
jmp
push
stos
add
lret
mov
add
add
add
loop
outsb
sbb
sbb
mov
add
add
xchg
push
pop
lret
fsts
ja
jne
movsl
add
dec
add
add
push
js
sub
roll
add
add
notl
pop
stc
mov
add
and
add
hlt
adc
rep
add
call
ret
or
jg
jecxz
jle
or
add
addb
dec
into
out
push
out
add
jmp
fadds
add
popf
ret
fdivs
and
add
add
lock
add
sti
je
pushf
frstor
xor
scas
cli
jl
out
xor
inc
sbb
stos
arpl
add
cmc
shl
scas
repz
dec
popa
lret
jno
add
xor
push
jg
lods
add
xchg
in
rcrb
jg
mov
add
add
jno
or
xchg
sar
and
add
add
inc
push
sub
sub
add
or
add
cmp
mov
cld
lcall
add
pop
xor
xchg
add
add
add
loope
dec
push
add
dec
insb
sbb
fisubl
add
mov
push
outsb
cmpsb
add
jecxz
sub
inc
out
pop
jp
leave
mov
add
mov
pop
xchg
mov
inc
mov
add
mov
add
loope
loopne
pop
or
add
inc
adc
add
add
outsb
push
mov
push
xor
ja
call
jb
mov
in
xor
ds
aas
rol
jb
lcall
push
shl
mov
mov
inc
addr16
adc
sahf
sti
push
mov
xchg
xchg
xor
jp
mov
inc
push
jg
add
xor
out
dec
mull
dec
sbb
jp
sbb
addb
ja
adc
enter
lods
mov
add
xchg
inc
arpl
movsb
add
test
xlat
cmpsb
add
xor
insb
incl
add
shrl
imul
repnz
push
pop
movsb
add
in
jge
add
loop
add
inc
fistps
icebp
dec
push
add
adc
pusha
jnp
sub
add
jno
jb
xor
or
add
pop
fxch
xchg
pop
addr16
in
sbb
movsb
add
lahf
and
icebp
jle
mov
out
jmp
sub
add
add
mov
orl
lea
jnp
push
add
mov
cmp
add
inc
add
add
dec
add
mov
adc
aaa
testb
xchg
out
lcall
add
jecxz
xchg
mov
inc
adc
lea
push
dec
mov
add
add
push
add
sub
push
push
add
sub
add
sub
add
clc
cmc
mov
stc
sub
add
jle
shll
in
cltd
xor
adc
fcoms
add
cmp
add
cmp
ljmp
or
add
jle
rcrl
mov
and
push
lods
inc
push
sbb
fildll
add
mov
pop
jne
jp
sub
and
jno
sldt
add
mov
stos
add
add
popf
pop
scas
add
out
jb
cmpsl
cli
aaa
sbb
jo
xchg
or
add
loope
lret
mov
lea
pushf
push
pusha
pop
lcall
fbld
shrl
mov
into
daa
mov
add
pop
push
mov
add
add
add
aaa
inc
int3
pop
and
add
mov
add
dec
cmc
push
adc
inc
xchg
or
ja
scas
adc
adc
inc
inc
sbb
jmp
adc
add
lcall
or
add
add
sub
add
dec
mov
add
loope
sub
in
inc
sub
add
inc
mov
xor
and
add
and
add
push
add
or
add
inc
jne
inc
or
add
add
add
sub
aas
leave
in
iret
fwait
mov
clc
aaa
lds
pushf
dec
jmp
aam
add
outsb
shrl
push
mov
daa
addb
mov
pop
cmp
das
cmp
sub
add
jecxz
pop
aad
dec
loopne
ja
mov
xor
decb
add
lret
add
out
mulb
ficompl
dec
int
test
add
xchg
or
add
sub
add
cmpxchg
ret
lock
and
add
push
add
cmc
or
call
inc
out
xchg
add
adc
enter
scas
pusha
out
popa
je
test
add
jb
add
push
repnz
add
mov
or
add
out
push
out
icebp
and
sbb
and
xor
fs
add
add
add
andl
xchg
xchg
mov
mov
add
cmpsb
add
stos
add
insl
adc
add
imul
xor
lds
add
addb
jge
and
add
add
rorl
scas
add
dec
test
add
add
sbb
add
xor
push
aam
fnstcw
cli
lret
lods
add
add
add
cli
test
add
jo
add
sbb
fsubrs
inc
out
mov
cld
pusha
inc
xor
cmp
add
mov
cmp
fsubl
add
cmpsb
add
sub
add
xor
add
add
add
mov
add
add
add
call
mov
add
test
lea
ljmp
jp
add
scas
push
xchg
add
fsub
adc
add
adc
gs
jmp
ljmp
lds
add
call
push
mov
mov
add
ja
movsl
mov
outsl
in
mov
add
push
popa
and
add
push
add
jg
adc
push
insb
stos
outsl
xchg
mov
jl
adc
pop
test
add
xchg
sahf
add
addb
js
add
jnp
frstpm(287
das
add
pop
hlt
jb
fistpl
xchg
dec
adc
inc
leave
mov
add
add
and
add
mov
mov
add
jge
lods
add
addb
movsl
dec
adc
iret
mov
add
push
add
dec
xchg
test
add
subl
out
or
add
aas
sbb
and
add
dec
mov
add
fs
lahf
addl
rcll
cmp
add
ret
mov
jbe
jb
jbe
mov
add
stos
xor
push
sti
outsb
mov
adc
inc
pop
xchg
adc
aas
lds
xchg
add
mov
add
mov
add
out
xchg
mov
add
push
add
das
adc
ret
mov
add
jno
add
testb
add
mov
adc
arpl
sub
add
jl
add
add
sbb
fsubr
lds
xchg
cmp
cli
add
mov
add
add
lea
add
hlt
pop
call
cltd
fisttpl
add
jno
cmc
sbb
call
lret
add
nop
imul
gs
mov
ret
xchg
mov
xchg
adc
xchg
push
add
and
add
je
inc
sub
add
push
pushf
ljmp
out
stos
stos
add
loopne
add
les
xlat
movsl
and
add
jmp
xor
xchg
add
add
loop
add
and
add
cmp
xor
test
sbb
jns
add
add
imul
jmp
push
lret
pop
repz
cmp
sbb
jno
jo
adc
aad
ss
add
outsb
or
add
cmp
and
add
adc
in
cli
dec
adc
add
idiv
arpl
mov
jbe
pop
das
mov
or
xchg
test
xchg
in
enter
add
fcmove
in
or
add
in
adc
outsl
sbb
mov
add
repnz
add
jge
add
or
add
lods
add
jmp
nop
cmp
testl
inc
inc
or
add
add
add
sub
and
in
imul
out
add
out
add
rclb
pop
loope
add
mov
add
jmp
pop
cmp
dec
dec
inc
sti
dec
f2xm1
int
mov
jb
icebp
lahf
add
pushf
test
add
add
fwait
push
rol
daa
or
add
sbb
xchg
add
adc
or
add
dec
popa
je
sub
add
mov
add
xor
push
add
out
inc
dec
in
mov
add
adc
lock
adc
add
lret
fwait
jno
add
ss
fsts
insb
clc
add
add
sbb
add
imul
add
jbe
xchg
push
fwait
mov
add
jp
and
add
add
xchg
dec
add
add
add
and
xor
dec
add
push
cwtl
int
push
mov
mov
push
dec
scas
pop
xor
push
add
les
add
jne
lahf
adc
adc
xchg
sub
add
add
outsb
loop
inc
xchg
jg
das
or
add
inc
cmp
ret
aas
sbb
mov
fidivrl
xchg
add
push
cli
push
add
add
add
sbb
bound
and
add
repz
xlat
ficoms
cmp
add
add
jbe
push
add
cwtl
insb
shll
xor
xchg
movsl
xor
add
aas
sahf
imul
mov
add
and
repz
add
aas
test
add
lods
add
rorl
dec
mov
dec
mov
add
xor
xchg
fldcw
sub
add
xor
add
add
add
out
add
mov
add
xchg
inc
pop
outsb
adc
add
jle
lock
jmp
add
repz
sub
add
jb
add
mov
add
stc
imul
xor
pop
sti
sub
add
cwtl
ror
jno
fwait
pop
pop
and
add
fnstcw
addb
push
ds
push
lock
out
ds
daa
or
add
fidivrs
shlb
ljmp
rclb
mov
addr16
dec
clc
mov
add
add
lods
add
mov
add
hlt
add
pop
sbb
add
ret
sbb
add
lds
add
stc
test
cmp
cmpsl
loope
push
add
jnp
add
mov
add
and
hlt
cmpsb
add
pusha
mov
leave
push
pop
adc
add
dec
shll
out
rcrl
ret
jo
jge
dec
lods
add
sub
add
dec
lea
add
loope
addr16
or
add
add
add
jno
adc
mov
mov
out
orl
sbb
add
syscall
in
mov
jb
push
inc
dec
repz
pop
or
add
dec
std
mov
add
xchg
xor
add
test
add
aaa
test
loop
addb
add
lods
pop
mov
add
add
sbb
shrl
add
sbb
mov
lret
jg
addb
dec
add
xor
movsl
ss
xchg
add
fnsave
stc
repnz
add
add
fwait
xchg
sbb
and
add
cmp
sahf
adc
roll
inc
pop
unpckhps
add
je
call
insb
shl
add
add
cli
or
add
adc
dec
pushl
aaa
dec
or
add
lahf
pop
mov
add
dec
cld
jne
arpl
movsb
add
adc
add
inc
xchg
stos
jne
mov
mov
add
clc
addb
push
addb
addb
or
add
push
add
in
daa
aad
add
inc
push
add
adc
xchg
nop
sub
add
inc
push
add
imul
stos
out
sub
jnp
mov
add
aad
add
pop
mov
add
mov
cltd
add
push
pop
out
xchg
add
lods
ja
std
mov
add
data16
add
js
rclb
sbb
add
inc
inc
fwait
inc
movsb
add
adc
test
add
xchg
pop
aad
jle
add
mov
add
lods
add
cmp
test
add
add
aad
pop
push
lea
ljmp
fstps
add
xchg
cmp
and
add
cmp
jne
repnz
loopne
push
add
xchg
ja
shll
add
popf
mov
add
xchg
les
loop
pop
ret
int3
inc
mov
lcall
add
ret
popa
out
add
insl
into
adc
adc
outsl
and
add
std
mov
push
mov
faddl
jo
scas
mov
add
sub
add
add
test
pusha
pop
cmpsb
add
rcll
add
shlb
lock
xor
sbb
inc
cld
pop
jnp
sub
add
push
or
add
jae
xor
add
xor
imul
sbb
iret
mov
mov
add
sbb
mov
add
mov
add
rcr
mov
mov
add
scas
sub
add
xor
push
add
mov
push
add
shrl
cmp
inc
sbb
add
add
xor
mov
testl
pop
rolb
xchg
sahf
xchg
je
jns
jg
mov
das
test
add
and
cmp
iret
enter
add
cmp
sbb
shrb
jae
xchg
push
add
out
pop
in
add
ret
insb
std
stos
or
add
dec
in
decl
and
icebp
les
add
addb
outsl
inc
in
sub
add
imul
pop
insl
adc
pop
data16
lahf
push
xchg
popa
xor
cmp
push
jge
fmul
addb
decl
adc
add
scas
add
test
addb
sbb
mov
add
jmp
add
xchg
jns
enter
add
add
test
add
movb
add
inc
cmp
mov
add
add
inc
cltd
ret
inc
mov
fisttpl
pusha
and
mov
testl
adc
add
scas
add
fxch
mov
add
jns
adc
aaa
sbb
jnp
bound
push
add
test
inc
inc
xchg
jmp
push
pop
sub
add
aam
imul
stc
xor
pop
call
test
add
inc
add
scas
cmp
mov
add
or
add
xchg
incl
dec
test
add
mov
cltd
push
dec
dec
ficoms
lahf
pushl
dec
sub
add
ret
mov
add
movsl
fsubs
or
add
mov
add
add
push
into
pusha
out
add
fwait
dec
testl
iret
xor
andl
in
add
dec
idiv
mov
xchg
and
in
ret
inc
jo
std
pop
mov
adc
add
les
lret
fs
pop
add
add
int3
sbb
sbb
jle
add
jmp
enter
inc
xor
add
and
cmpsb
add
adc
pop
gs
add
sub
add
enter
inc
dec
ja
add
sub
add
adc
std
dec
daa
mov
jecxz
sbb
cmc
push
call
add
popa
sub
add
add
jae
xor
add
jecxz
fwait
mov
pop
pop
push
add
pop
xchg
test
add
out
enter
adc
test
add
pop
push
push
mov
xchg
add
push
add
mov
sub
add
mov
sbb
cmc
jmp
mov
stc
sbb
jl
and
add
stos
cmp
insb
rorb
mov
add
bound
sub
add
or
add
add
jge
pop
clc
inc
lret
add
aas
mov
xchg
stc
ss
jmp
mov
js
pop
mov
mov
or
dec
push
add
ja
cmp
add
ljmp
movb
add
push
addb
xchg
bound
dec
dec
dec
pop
and
and
add
cltd
mov
jmp
or
add
mov
add
add
mov
dec
pop
cmp
rorl
mov
loopne
jmp
push
dec
sub
add
out
push
or
pop
imul
negb
push
out
fadd
adc
cmp
decb
aaa
xor
cld
lods
jno
add
add
addb
fnstcw
fidivs
shll
shll
repnz
push
int3
pop
cmp
sub
add
adc
fmuls
arpl
xchg
add
add
insb
lds
loop
jno
movsl
sbb
popf
loopne
ja
jmp
sub
add
in
arpl
fwait
sub
vshufpd
addb
cmpsl
pop
addb
jns
enter
in
pop
icebp
enter
inc
test
or
add
jmp
push
outsb
push
sbb
in
add
sti
jecxz
ja
dec
das
ds
loop
add
jmp
stos
add
xchg
add
ret
jl
pop
mov
aaa
scas
add
inc
mov
pusha
adc
add
jp
sbb
hlt
iret
js
das
push
add
xchg
fdivs
movsb
add
add
xorl
repz
out
sbb
movsb
add
add
test
add
jne
js
clc
cli
insl
outsb
mov
add
stos
mov
xchg
ljmp
call
mov
aad
add
je
push
add
add
push
add
xor
jo
sub
mov
cltd
add
add
pop
test
cmpsl
push
add
sbb
dec
out
sub
add
add
in
mov
push
add
jmp
bound
add
and
add
add
add
stos
add
lock
add
xor
mov
or
add
inc
out
ss
push
aad
imul
xchg
fmul
jl
adc
add
scas
and
xchg
fsubs
add
clc
ds
add
sbb
mov
mov
fst
push
xchg
cmp
fdivl
pop
gs
inc
push
mov
aas
xor
pop
ret
pop
in
push
jg
push
inc
ret
cld
cmp
add
add
repnz
aaa
jmp
arpl
shlb
and
std
jp
cmp
mov
daa
cmpsb
add
mov
cmpsl
adcl
mov
push
inc
std
jmp
pop
insl
jns
adc
push
add
mov
add
dec
dec
and
popf
and
add
xor
gs
xchg
or
add
mov
adc
add
adc
add
inc
mov
adc
add
outsl
ja
test
mov
sti
fcomps
add
in
hlt
ljmp
mov
das
std
jge
or
add
dec
xchg
and
add
and
xchg
cmp
and
out
jbe
add
mov
js
stos
inc
mull
loopne
cmpsb
add
push
dec
dec
mov
mov
jbe
mov
addb
jae
cmp
sbb
add
add
imul
jne
and
add
push
cmp
xchg
add
push
add
push
popa
cmpsl
dec
mov
add
addb
cmpsl
mov
mov
push
pop
pop
or
hlt
daa
push
sbb
lret
nop
xor
push
add
xor
int
inc
ds
sub
add
add
test
add
dec
pop
mov
cmp
mov
fstl
add
repz
scas
pop
lahf
xor
or
inc
cmp
decb
and
add
xchg
jp
scas
cmp
outsb
or
add
sub
add
icebp
ficoms
lret
adc
sbbl
fisubrs
add
jb
clc
pop
fcoml
inc
inc
mov
xor
addr16
push
inc
push
add
rorb
add
in
add
arpl
nop
cmc
aad
movnti
mov
and
add
pop
loop
xor
mov
xor
leave
mov
inc
or
mov
sahf
xchg
pop
push
push
add
add
mov
aam
ret
insl
xor
addl
fdivrs
jbe
pop
repnz
dec
jno
xchg
test
add
add
test
inc
fiaddl
xchg
add
xchg
mov
add
daa
int3
dec
jo
jg
lock
cltd
jb
movsb
add
scas
stc
mov
add
mov
adc
shlb
aas
jns
add
mov
mov
add
fcomps
mov
jo
mov
leave
sbb
sub
add
add
add
pop
and
add
push
pop
js
add
xor
arpl
mov
test
js
xor
fildll
add
out
inc
inc
rcl
int3
aas
add
in
push
add
add
arpl
aas
or
and
add
xchg
ficoms
mov
iret
in
mov
fwait
test
add
push
cld
sahf
push
cmpsl
jle
fsubl
cltd
push
rep
add
xlat
cmpsl
or
push
js
ljmp
add
ljmp
mov
or
add
addb
cmp
movsb
add
cmp
add
mov
add
ss
add
pop
mov
add
insb
sub
dec
mov
inc
test
add
fs
add
push
mov
xchg
insl
inc
outsl
pop
sbb
int3
pop
push
into
pop
sarl
add
fidivs
test
add
lcall
xchg
mov
add
add
cmpsl
hlt
mov
add
lcall
jmp
imul
rcll
xchg
add
add
pop
cmpsb
add
or
add
shrl
add
outsl
fxch
push
test
repz
push
loope
ficompl
std
dec
fs
push
add
mov
loope
jmp
not
clc
nop
or
sbb
cld
jbe
bound
sub
adc
sub
aaa
xor
test
dec
fildll
push
xchg
fldl
or
add
add
stos
add
lret
and
xchg
pop
and
add
add
inc
lds
stos
add
rorl
add
or
add
add
dec
dec
ja
sub
add
inc
or
add
or
je
push
aas
xchg
call
push
dec
ds
ja
adc
imul
push
icebp
data16
add
insl
les
lret
repnz
jno
add
fcomp
and
add
pushl
jle
sub
add
ja
popf
push
pop
fsubp
cmp
in
mov
jmp
and
add
popa
push
lret
add
cmpsb
add
ret
aam
shll
jg
lcall
andl
add
mov
hlt
push
lret
inc
repz
add
add
push
addb
leave
mov
add
add
mov
push
push
add
and
add
lahf
mov
add
add
add
out
jno
add
or
add
fcmovnb
pop
inc
adc
lock
loopne
add
mov
mov
add
pop
out
adc
add
lea
mov
mov
add
adc
jmp
sbb
ss
adc
addl
mov
outsl
ret
mov
adcl
ficomps
dec
imul
push
add
add
add
push
fnsave
std
add
xchg
test
add
or
mov
add
enter
leave
vdivsd
adc
sbb
add
andl
add
jmp
add
fs
mov
mov
in
dec
sub
add
fdivp
fisttpll
add
ljmp
lock
xor
and
add
add
xchg
movsl
jl
add
mov
adcl
or
out
inc
adc
jnp
dec
int
pushf
push
mov
in
mov
add
add
out
in
add
in
add
scas
add
test
inc
cmp
adc
xchg
sbb
scas
add
test
daa
mov
add
add
mov
cwtl
pop
mov
add
jmp
out
mov
std
popf
andl
add
addps
add
testb
add
mov
and
and
add
adc
stc
shlb
out
adc
cmp
iret
lret
jmp
sbb
add
cmc
popf
jg
dec
dec
rolb
clc
in
je
mov
add
shr
popf
adc
sahf
lock
repnz
repz
les
test
add
dec
sbb
cmp
or
add
test
add
filds
cli
xrelease
add
in
dec
dec
pusha
imul
xor
aaa
pop
push
dec
pushf
scas
shll
add
scas
add
push
shrl
add
icebp
add
mov
add
shrl
push
sbb
mov
dec
cmp
shrl
add
mov
xlat
popa
mov
and
mov
psadbw
in
add
fidivl
sbb
and
add
or
add
push
pop
testl
push
add
push
cmpsl
add
add
jp
outsl
xor
add
test
fistpll
jge
outsb
cmpsb
add
in
fdiv
fisubs
add
out
mov
push
mov
push
fwait
add
ficoml
data16
pop
mov
out
mov
nop
cli
popf
rol
pop
mov
add
push
js
outsb
mov
add
leave
pop
or
add
add
into
pop
mov
pop
sbb
test
jmp
add
add
inc
out
or
add
add
repnz
test
add
add
push
push
jle,pt
or
add
outsb
mov
add
jnp
lahf
lods
inc
shl
outsb
dec
stos
add
sub
add
add
stc
test
push
cmp
add
add
and
out
mov
test
add
xchg
add
cmpsl
popf
ret
into
fidivrl
jp
mov
add
repz
enter
pop
inc
rcrl
loop
rcrl
push
dec
les
mov
add
add
mov
add
cmp
fbld
add
pushf
sub
add
adc
addl
add
fwait
mov
add
cmpsl
pop
xchg
dec
add
aad
mov
pop
popa
and
sub
add
cmp
sub
add
add
mov
add
dec
addb
outsb
push
outsb
push
hlt
push
inc
or
lcall
dec
mov
and
push
dec
adc
cmp
add
mov
das
ja
xchg
xchg
inc
lds
movb
aas
rcl
dec
cli
jge
add
sub
add
mov
add
das
or
inc
dec
push
iret
dec
add
add
push
mov
movsb
add
ja
add
into
push
cmp
adc
add
out
jge
dec
add
enter
add
mov
mov
in
add
add
jno
mov
add
pop
sub
ja
mov
push
mov
in
mov
ja
jl
out
xchg
mov
add
fsubr
xchg
fadds
out
push
add
or
mov
add
adc
add
add
mov
pop
shrl
adc
repnz
aad
sbb
jae
add
mov
mov
outsl
dec
sub
add
ds
push
addb
cmpsl
out
xchg
adcl
add
dec
jge
aaa
pop
pop
sbb
mov
add
aam
addl
loopne
test
add
add
in
mov
aas
adc
je
ret
mov
xchg
add
push
sbb
mov
clc
push
test
add
fbld
xchg
add
sbb
mov
add
jb
jne
dec
scas
std
int3
mov
inc
sbb
add
aam
add
dec
ret
push
xchg
fsubs
dec
cmp
or
adc
daa
push
sarb
pop
cmpsb
add
test
add
add
aas
mov
add
divb
add
out
popf
xor
add
pop
pop
test
add
mov
inc
push
pop
hlt
lods
mov
add
lea
dec
or
add
xchg
add
inc
fldt
add
push
out
cmpsb
add
test
add
push
addr16
sbb
arpl
add
aam
or
add
xor
pop
ds
xor
add
imul
add
xchg
add
in
filds
or
lods
add
addr16
subl
adc
dec
mov
cmpl
cmp
and
adc
in
add
add
add
addb
mov
cltd
jp
addb
sub
fs
adc
in
nop
mov
add
or
add
cltd
lret
mov
inc
dec
inc
or
mov
add
pop
dec
mov
dec
pop
std
dec
sbb
add
push
movsb
add
imul
andl
fcoml
mov
ds
gs
ja
pop
xchg
adc
imul
xchg
add
add
inc
jge
xor
ss
fs
bound
jo
jbe
add
sbb
imul
cmc
aas
les
rol
ljmp
scas
add
mov
add
stos
and
add
int3
test
add
lahf
push
mov
jbe
add
add
test
add
ss
loopne
insb
leave
nop
mov
pop
jae
dec
and
mov
arpl
mov
mov
push
add
dec
cmc
jecxz
pop
sbb
mulb
add
shrl
std
pop
out
icebp
js
xor
stos
add
lods
stos
add
xor
mov
pop
scas
add
imul
jb
pop
sub
dec
add
add
in
sub
out
push
add
xchg
mov
push
jge
pop
lock
repnz
shlb
sub
add
sbb
test
add
test
or
add
sbb
mov
lock
jle
add
fldenv
add
push
ds
push
mov
add
xlat
addb
jp
pop
adc
mov
sbb
or
dec
lret
sub
add
pusha
mov
add
aas
clc
pop
pop
mov
andl
add
xor
jne
sbb
push
pop
mov
dec
mov
add
add
fmull
push
add
add
add
mov
cmpsb
add
cmp
add
pop
cmp
cli
sub
add
andl
out
sbb
mov
mov
or
mov
add
add
cmpsl
mov
jg
inc
jns
dec
pushf
nop
sar
sti
xor
inc
and
xor
clc
cmp
notb
adc
mov
out
jmp
sti
dec
lods
add
arpl
pop
rclb
ret
clc
cmc
sub
mov
enter
mov
daa
stos
dec
loop
add
addb
push
dec
add
and
add
or
add
in
fnstenv
add
fcoms
lret
ror
lock
xor
test
sbb
lahf
ss
add
mov
add
fadds
fnstsw
cmp
aas
cmpl
add
jg
adc
dec
fisttpl
jnp
popw
mov
add
mov
add
fs
addr16
mov
push
add
jp
sub
push
hlt
fdivs
mov
mov
add
js
add
lret
sbb
sub
add
and
add
jnp
movl
mov
loope
add
pop
dec
inc
mov
pop
jae
push
inc
add
mov
data16
add
sbb
leave
mov
jl
sbb
add
sbb
popf
inc
mov
add
lds
mov
add
outsb
jo
test
mov
mov
nop
in
lds
inc
cwtl
mov
inc
add
sbb
inc
mov
or
add
jmp
or
mov
cmp
jmp
cmp
add
test
sti
out
jno
in
movsl
mov
aam
scas
add
adc
xor
ss
add
push
xchg
adc
cmp
xchg
mov
pop
cmp
cli
test
add
inc
sbb
je
xchg
add
movsl
add
mov
iret
mov
mov
mov
mov
adc
call
xchg
and
add
mov
mov
mov
add
dec
xor
sbb
add
mov
add
test
add
scas
cmp
add
fs
cmp
add
pusha
repz
push
push
add
add
jb
ja
pop
mov
mov
add
mov
add
add
mov
bound
add
call
xchg
fdivrs
and
add
add
loope
or
add
testb
xor
ss
mov
jge
jecxz
divb
dec
mov
add
clc
jg
mov
add
jne
arpl
add
into
lcall
daa
mov
fiadds
add
cmc
cmc
jo
ss
xchg
insb
ja
dec
mov
cmp
or
aad
testb
add
scas
dec
dec
push
add
adc
inc
jae
out
fildl
dec
mov
add
jno
pop
mov
cli
orl
add
xchg
pushf
xchg
aaa
adc
jle
add
dec
out
xchg
in
add
pop
pop
shl
sub
pop
add
add
cmpsl
mov
add
adc
xchg
add
push
cwtl
outsb
fcmove
mov
add
lds
ficomps
dec
or
add
add
inc
cmp
dec
add
add
adc
int
cmp
imul
add
pop
or
add
add
add
sub
imul
icebp
and
push
mov
add
inc
ljmp
or
mov
add
and
add
sub
or
add
add
pop
aaa
mov
add
lock
repz
mov
pop
add
add
mov
sub
sub
add
add
sbb
mov
cli
adc
add
fidivrl
add
pop
cmp
leave
xchg
adcl
sbb
out
cmp
xchg
push
rcrl
mov
sub
mov
add
pop
mov
add
pop
add
arpl
add
xchg
in
fmul
mov
xchg
lods
lret
cmc
icebp
pop
insb
xchg
cmp
add
ficoms
cwtl
adc
push
arpl
and
add
lret
mov
bound
xor
add
xor
and
add
add
addb
cmp
outsb
adc
add
mov
sbb
mov
fs
in
add
mov
mov
lea
arpl
cmp
sbb
pushf
mov
add
iret
inc
loopne
fisubrs
adc
popf
fadd
push
dec
jne
test
mov
push
add
sbb
add
add
add
add
stc
dec
adc
add
mov
daa
cld
orl
add
fisubs
dec
cmpsb
add
pop
jp
arpl
sbb
push
loope
insl
mov
negl
or
and
adc
dec
lods
add
into
sub
mov
idivb
jbe
or
lret
mov
add
fnstsw
fcompl
fdivrp
insl
mov
pop
jecxz
rcr
pushf
xorl
dec
sahf
sub
add
mov
insb
mov
xchg
int
dec
mov
dec
ss
ds
mov
add
inc
cmc
mov
jae
pop
mul
inc
adc
sbb
out
repz
add
add
cmp
negb
or
sbb
push
hlt
sbb
pop
sub
mov
outsb
cmpsl
sub
add
add
test
add
test
mov
jbe
mov
add
sub
mov
dec
lcall
add
and
add
cmp
inc
dec
sbb
mov
arpl
les
add
and
add
add
sbb
test
add
add
push
add
dec
push
jge
sub
pop
sbb
pop
adc
xchg
out
scas
add
xchg
adc
rcrb
push
fmull
and
jp
mov
add
jle
add
loop
pop
or
cltd
dec
inc
faddp
icebp
icebp
xlat
push
push
adcl
add
daa
out
pop
pop
xlat
in
mov
lret
inc
mov
xchg
repz
add
out
mov
iret
cmp
imul
outsl
sahf
fs
mov
add
pop
mov
jnp
fsubrs
jge
sub
push
addb
or
add
inc
sub
cltd
inc
outsl
jns
xor
add
sub
pop
xchg
aas
sarl
xor
inc
or
push
or
add
jno
in
add
dec
mov
mov
add
push
jecxz
fwait
xor
bound
add
idivb
or
add
dec
out
lock
adc
testb
add
cmp
sarl
cli
outsb
rorl
mov
jo
add
inc
mov
scas
mov
sub
add
scas
add
out
add
mov
test
add
std
dec
incl
mov
add
jne
add
add
mov
add
js
cld
adc
into
repnz
mov
xor
mov
pusha
add
adc
stos
add
pop
pushl
shlb
stos
jns
jbe
sub
mov
cmp
add
add
mov
lods
test
sub
test
add
hlt
lea
add
ja
sub
add
adc
cmp
jbe
add
xlat
lret
test
add
rcll
jp
fsts
cmp
dec
shll
mov
add
cmp
add
pop
pop
adc
dec
add
add
adc
add
add
add
add
add
add
fnstenv
pusha
fwait
mov
add
addr16
movsl
addb
addb
or
sbb
jne
add
xor
iret
cmp
add
imul
mov
add
add
lds
fisubs
add
dec
adcl
out
movb
add
add
movsb
add
mov
lock
cmp
add
mov
add
hlt
mov
adc
add
scas
add
add
xchg
pop
mov
add
mov
add
inc
mov
mov
pop
and
add
or
ret
mov
test
add
mov
add
add
fidivl
add
mov
add
xor
imul
add
inc
shll
add
push
popa
movsl
and
add
add
add
push
mov
mov
in
pop
pop
stc
repz
int
cmp
add
jl
add
push
lds
pop
int3
jno
mov
push
cmp
add
mov
add
iret
nop
sahf
push
add
or
add
loope
inc
jp
add
jmp
leave
sbbl
insl
mov
lds
and
add
or
add
dec
cmp
add
sub
out
andl
int
pop
fs
inc
pop
lods
jne
lahf
dec
rcrb
mov
add
lea
pop
mov
add
xchg
ljmp
add
addr16
jnp
dec
in
jo
pop
stc
mov
testl
aam
jb
scas
mov
add
pop
leave
mov
or
mov
mov
xor
std
stos
add
jo
clc
sub
add
daa
pusha
push
iret
adc
cmp
ja
lods
add
std
repnz
mov
mov
pop
call
add
addb
pop
cmc
mull
cmp
add
add
push
int3
clc
fcoms
mov
pusha
dec
insb
stos
add
into
ljmp
sti
movsb
add
je
insb
adc
mov
add
push
popa
into
jae
in
repnz
addb
iret
lahf
ret
dec
mov
add
je
in
out
mov
add
pushf
adc
lods
dec
jl
sbb
push
and
add
in
add
dec
and
add
cmp
cmp
scas
add
add
add
xor
enter
out
enter
mov
jnp
fs
xchg
cwtl
sub
add
pop
adc
xchg
pusha
inc
pop
mov
mov
lret
fs
div
push
adc
leave
sbb
add
dec
les
jne
jecxz
mov
pop
jb
faddl
cmc
fs
outsb
or
jl
add
push
add
push
jnp
cmc
inc
cmpsb
add
jg
push
add
pop
and
add
les
add
pop
in
fsubrs
xor
ret
adc
and
add
aam
add
repnz
addb
push
sub
aam
and
add
test
add
add
jne
std
pusha
movsb
add
add
add
add
xor
loopne
lods
add
fs
lahf
inc
aad
mov
mov
push
ljmp
add
loopne
cmp
or
icebp
cmp
jne
mov
pop
xor
cmp
or
add
inc
mov
mov
cmp
adc
mov
cltd
mov
add
xchg
add
dec
jmp
lea
inc
add
and
add
cmp
adc
addb
sub
add
adc
dec
inc
add
dec
in
dec
inc
inc
lods
lds
mov
sub
outsb
ret
lahf
fsubp
and
repz
cmpsl
jg
or
das
lret
inc
or
add
add
addr16
dec
fmulp
or
add
mov
out
aas
scas
add
leave
fcoml
add
or
add
xchg
test
aas
push
add
mov
add
mov
pop
mov
cmp
inc
addl
imul
outsb
xor
add
inc
mov
cmp
mov
stos
add
lcall
xchg
into
sti
test
add
leave
xor
mov
dec
jg
add
cwtl
jge
jbe
push
bound
nop
sbb
dec
pop
pop
cmp
fisubrs
add
fabs
sbbl
nop
inc
insl
push
pop
lahf
popa
cmp
pusha
icebp
data16
repnz
add
in
push
mov
add
or
add
dec
leave
jo
iret
sbb
add
xchg
dec
push
faddl
add
add
xchg
cmpsl
ret
addr16
dec
inc
rcrl
mov
add
push
add
lods
xchg
add
add
mov
add
movsb
add
jb
dec
or
outsl
outsl
lods
add
popf
pop
xor
aad
sub
sahf
and
add
jbe
add
xchg
mov
xor
sahf
and
push
in
cmp
pop
aad
fidivrs
jae
mov
sub
add
mov
add
insl
fdivrp
rcll
pop
call
stc
shrl
add
in
jno
xor
jno
pop
inc
push
add
imul
nop
jo
loope
and
sbb
loop
add
aas
mov
xchg
lret
repnz
mov
mov
add
inc
mov
cmp
add
outsl
lock
jecxz
faddl
add
fwait
push
inc
mov
and
add
out
inc
addb
cld
cmpl
out
xor
adc
add
int3
nop
xor
std
lea
fwait
out
into
push
add
ret
pop
rclb
cmp
push
sbb
dec
cmp
add
inc
pop
arpl
ret
mov
and
sub
push
mov
add
out
jb
mov
add
mov
hlt
fdivrl
adc
cmc
ss
call
cvtps2pd
pushf
fs
icebp
push
pop
sti
dec
jo
dec
mov
adc
hlt
ret
cltd
xorl
add
mov
add
xchg
xchg
and
add
ds
inc
jno
out
dec
sbb
js
jecxz
or
and
add
mov
add
add
mov
add
push
stos
in
mov
add
addb
leave
and
add
fstpt
cmp
in
outsb
movsb
add
dec
cli
jo
cpuid
add
inc
sahf
imul
outsl
gs
fbld
add
add
add
iret
stos
add
or
mov
or
dec
lock
and
add
add
lcall
fstpl
jle
mov
add
addb
out
les
insb
shrl
add
shr
adc
daa
mov
inc
dec
imul
pop
xor
sbb
jnp
push
out
and
and
add
add
cwtl
xor
add
add
fmul
inc
and
pop
fucom
dec
mov
jecxz
cmp
int
idivl
das
imul
mov
add
add
add
add
repz
add
stc
cwtl
sbb
add
inc
mov
xlat
push
inc
xchg
cmp
test
add
mov
jmp
ja
mov
add
add
outsb
cmp
add
adc
add
push
pop
add
sbb
ljmp
add
daa
xchg
addb
jg
add
stos
xchg
stos
add
fs
xor
aam
xchg
mov
add
gs
loopne
mov
cwtl
int
clc
xchg
add
sti
and
mov
add
add
xchg
pushf
or
aad
out
or
mov
ljmp
int3
js
mov
mov
mov
add
xchg
adc
adc
push
add
dec
inc
push
sar
xchg
loope
xor
xchg
add
inc
or
add
out
movsb
add
addb
push
jbe
mov
xchg
imul
enter
push
add
jg
imull
mov
cmp
rcrl
jo
add
sub
movsb
add
push
ficompl
fcmovnbe
addb
scas
mov
adc
popw
lret
icebp
and
sub
add
cmp
add
divl
or
xchg
movsl
mov
jns
lret
in
add
jecxz
sub
fld
cmpsb
add
mov
out
dec
mov
addr16
in
sbb
imul
pop
or
fbld
enter
in
loopne
push
pop
repnz
lret
add
add
fnsave
insb
cmp
hlt
leave
mov
add
push
add
adc
add
sub
repz
mov
add
bswap
jno
mov
inc
cmp
xchg
mov
add
and
add
repnz
enter
scas
add
pusha
scas
xorl
adc
and
loope
jno
jle
scas
add
mov
mov
and
imul
and
xchg
out
push
mov
sub
add
jmp
push
cmp
push
fstpt
hlt
fmul
test
in
notb
xlat
loopne
std
fistl
add
dec
int3
sub
cmp
cmp
les
ret
nop
jno
sbb
inc
movsl
jl
and
mov
sub
add
add
leave
fwait
aaa
mov
iret
rep
dec
sub
add
dec
notb
pop
lds
add
jl
pop
xor
into
xchg
dec
mov
adc
cmpsl
stos
loop
fstl
adc
and
add
inc
scas
add
xchg
imul
add
add
add
les
sub
bswap
shl
push
and
dec
fildll
inc
cld
addb
pop
or
fdivrl
add
test
xor
mov
fs
add
mov
mov
add
ja
pop
inc
fsub
and
add
add
adc
add
bound
dec
sub
add
ss
jmp
cmp
mov
mov
lahf
in
add
hlt
lods
nop
fbld
add
mov
mov
negb
mov
add
add
pop
sub
add
sbb
fdivrl
mov
pushf
mov
add
add
xchg
aad
pop
pop
push
push
loope
add
mov
add
mov
fidivs
sub
add
add
push
dec
lods
add
or
add
cmpsb
add
add
ffreep
in
xchg
adc
adc
add
lds
add
add
aam
pop
and
inc
jo
xchg
pop
daa
mov
add
pop
jge
and
add
jnp
into
aas
mov
jae
cmc
jl
adc
pop
jp
mov
inc
not
mov
ret
lds
push
add
int
add
add
add
fs
cmc
pop
dec
loope
push
test
cli
add
ds
shlb
xchg
push
push
dec
insl
gs
cld
pop
rcl
add
jp
stc
jecxz
insl
sbbl
add
add
orl
add
std
loop
mov
sub
add
scas
add
or
sahf
fcoms
or
insl
aaa
mov
add
sub
add
fldt
add
pop
aas
xchg
int3
arpl
dec
cltd
sub
add
mov
push
or
popa
pop
and
add
sub
add
dec
mov
add
aaa
popa
xor
and
ss
push
pop
push
add
mov
pop
scas
add
and
add
inc
jno
dec
mov
xor
push
lret
or
xchg
adc
test
fs
addb
loopne
aas
xor
rorl
sub
add
or
xchg
lods
add
imul
outsb
sub
add
jmp
ss
push
xor
call
stc
pop
ljmp
mov
lds
push
dec
or
add
add
movsb
add
dec
cmp
test
add
cmp
cmp
add
cltd
dec
jg
and
add
les
xchg
sub
add
scas
test
mov
lcall
repnz
add
add
les
add
sbb
add
inc
xchg
ret
dec
movsb
add
sbb
add
pop
cmpsb
add
sbbl
add
sets
push
push
mov
mov
add
ja
pushf
add
dec
in
add
add
add
add
jecxz
pusha
dec
sbb
jbe
or
add
fidivs
enter
fildll
add
xchg
fmuls
jp
inc
outsb
sub
xchg
pavgw
sbb
incb
jge
out
jo
js
or
mov
hlt
xor
cmpsb
add
cmp
pop
daa
lcall
sub
add
int
lret
insl
jo
xchg
insb
push
or
add
sbb
push
add
jle
je
inc
jp
jae
dec
sti
adc
add
lret
inc
push
fdivs
add
test
add
out
in
pop
cmp
add
fstps
into
in
jbe
pop
lea
insb
das
dec
or
add
sbb
and
add
add
clc
sbb
dec
fdivrs
iret
xchg
sub
mov
add
jg
push
pushl
jb
add
mov
repnz
add
xor
add
lret
add
add
add
popf
insb
push
mov
add
push
neg
adc
repz
push
in
test
jno
or
testl
or
add
jecxz
cwtl
mov
dec
sub
add
mov
leave
dec
test
add
loope
mov
add
inc
adc
ret
aas
pop
mov
adc
xchg
xchg
stc
cmc
and
add
leave
adc
out
add
iret
incb
add
mov
add
pop
push
bound
repz
or
add
mov
stos
add
xchg
insb
das
lea
fsubr
push
movsl
and
sarl
leave
divb
mov
add
rolb
or
add
add
aad
push
add
in
sbb
loop
push
add
mov
roll
clc
pop
and
ss
out
mov
test
mov
inc
sub
add
sbb
jge
je
shll
inc
fs
lahf
mov
add
and
gs
add
xchg
and
int3
xor
inc
cwtl
mov
cmpsl
inc
lds
add
xchg
add
push
sbb
push
add
addr16
mov
in
nop
jmp
add
xchg
xchg
mov
sbb
sub
add
inc
sub
sti
xlat
push
add
outsl
add
cwtl
setns
add
add
sarb
shll
lods
das
dec
les
mov
add
mov
pop
ds
add
dec
lds
add
mov
add
lds
or
sbb
mov
iret
fs
shr
stc
mov
add
lock
inc
icebp
pop
sub
add
jl
jg
mov
pop
loop
inc
pop
pusha
das
in
mov
add
jns
shll
add
fmul
aam
sbb
enter
jb
dec
loop
add
dec
add
add
push
rol
mov
stc
addl
dec
gs
push
push
add
sbb
mov
adc
out
xchg
mov
movb
add
xchg
call
clc
sahf
ficomps
in
aas
clc
call
add
clc
or
xchg
leave
and
sbb
lret
cmp
and
fbstp
adc
je
add
lds
jp
inc
adc
popf
inc
xchg
inc
pop
inc
pop
mov
push
add
mov
add
jns
pop
cmp
inc
stc
xor
std
popf
add
add
into
test
pop
add
add
adc
add
dec
or
add
mov
add
imul
add
add
jnp
xchg
fists
ljmp
add
arpl
and
ds
pop
xchg
ret
add
loope
aam
and
add
jecxz
cmp
lock
stos
pop
cld
cmp
cltd
in
movsl
sub
mov
sahf
mov
jno
mov
test
dec
fadd
or
add
cmp
inc
jecxz
cld
pop
pop
mov
jns
fisubrs
add
fldcw
fnstenv
repz
pushf
jecxz
xor
and
add
xchg
out
cmc
cmp
and
xlat
aad
xchg
ja
and
xchg
lock
dec
addb
out
rol
cmpsb
add
add
hlt
mov
add
or
lret
sbb
dec
push
je
pop
mov
jns
xchg
les
leave
repnz
stc
or
repnz
and
add
ljmp
lds
cmp
add
pop
mov
lock
cmp
outsb
addb
xlat
sti
jbe
fsubp
pop
dec
into
inc
dec
mov
add
and
mov
arpl
xorl
stos
add
test
add
sub
add
add
sub
add
sbb
je
rcll
add
shll
test
add
jae
jnp
fbstp
js
dec
add
push
add
jg
push
cmp
add
and
addb
stos
out
cmpsb
add
and
jmp
test
mov
mov
xchg
in
jp
add
jmp
scas
ret
cld
or
add
mov
add
mov
add
mov
add
jnp
mov
add
test
add
dec
lods
inc
xchg
xor
stos
add
stos
add
and
add
jg
jl
sub
add
xchg
add
and
add
mov
in
mov
jno
test
cmpsl
inc
add
add
add
add
add
and
add
xor
addb
sub
add
int
divb
enter
xor
movsl
mov
inc
aaa
dec
dec
repnz
or
add
movsl
jmp
shll
mull
add
cmp
jbe
mov
rolb
stos
cwtl
inc
inc
inc
clc
ja
xchg
sarb
or
cmpsl
xadd
xorl
rorl
push
shlb
stc
cmp
jae
sub
add
dec
fsubrl
inc
vpminub
pushf
push
addb
icebp
shr
loope
lahf
pop
inc
lea
out
inc
fidivrl
sarb
add
mov
gs
addb
test
add
loop
and
add
dec
push
mov
xor
into
repz
or
ja
jns
jo
add
cmp
int3
call
push
add
pop
pop
mov
jmp
add
daa
cwtl
pop
out
mov
adc
into
stos
add
xchg
xor
cmp
add
pop
jmp
mov
notl
and
inc
bound
aaa
add
test
and
add
negl
xchg
push
rolb
or
cmp
add
lret
add
ja
sbb
sahf
and
fidivl
add
scas
add
repz
mov
add
cwtl
and
add
je
add
idivb
inc
cmpsl
out
daa
fcomp
ret
push
add
addb
jo
add
pusha
pop
dec
orl
mov
add
add
add
iret
mov
dec
push
je
and
ret
insb
xchg
insb
sbb
push
inc
mov
add
lcall
test
loope
mov
cmc
fstps
insb
cmpsb
add
jns
stos
cltd
cmp
jbe
mov
test
add
in
ds
movsl
lret
iret
shrl
jp
outsl
mov
add
xchg
out
addb
sbb
jg
add
adc
in
into
loopne
cwtl
shlb
mov
mov
push
push
pop
and
add
bound
jge
push
aad
sti
sub
sub
add
addr16
mov
add
add
cmp
add
sub
push
popa
mov
mov
push
xchg
inc
push
push
push
jmp
imul
inc
mov
adc
out
xchg
add
rcrl
lock
add
pop
gs
mov
insb
dec
adc
adc
and
add
push
int3
addl
and
add
push
addb
out
push
jge
addr16
inc
gs
sbb
mov
add
xchg
jg
and
add
cmp
cmp
idivl
mov
out
test
push
or
add
sahf
add
in
addb
ficomps
add
ljmp
mov
ss
not
push
sub
cli
daa
xchg
sbb
add
sub
add
pop
pop
imul
add
inc
jmp
loope
pop
mov
add
mov
hlt
xor
or
add
add
sbb
int3
push
mov
add
cmp
test
clc
and
inc
fiaddl
jle
mov
add
xor
repz
pop
cmp
fstps
outsl
enter
test
or
pop
aad
cltd
dec
jl
out
mov
sub
add
push
add
out
xor
mov
add
jno
mov
add
in
jno
repnz
inc
fmuls
add
xor
add
in
icebp
cli
int
add
and
add
fstps
inc
adc
rcrb
add
dec
sub
add
add
add
mov
addb
xor
or
xor
adc
mov
lahf
adc
mov
test
add
mov
icebp
addb
and
rorl
mov
add
and
add
mov
xorl
add
add
lahf
add
add
sbb
negl
fbld
mov
add
lret
jge
jmp
add
jno
cli
out
jno
mov
add
iret
pop
daa
jecxz
out
sbbl
xor
jae
push
daa
test
add
ret
dec
loope
in
add
add
mull
xor
mov
repnz
sub
add
scas
int3
test
add
arpl
add
loopne
jle
test
add
dec
pusha
adc
stos
add
pop
arpl
xor
test
add
add
push
jg
adc
adc
iret
dec
cmp
mull
mov
add
addb
mov
inc
dec
sub
aad
movsl
mov
sbb
mov
add
xchg
push
ret
xor
xor
cmp
addb
mov
jle
xor
cmp
mov
pop
cmc
sub
shrl
sub
add
jecxz
push
inc
push
add
arpl
inc
dec
pop
ss
daa
imul
mov
dec
cmc
fisubrl
dec
cli
xchg
mov
add
les
mov
inc
dec
ds
addb
out
inc
enter
or
add
add
stos
add
pop
add
xchg
subl
add
add
jo
add
xor
push
add
fsubrp
jmp
mov
add
sub
add
aaa
inc
cld
ss
sbb
or
add
mov
pop
mov
or
scas
add
add
insl
arpl
push
dec
fyl2xp1
int
cmp
rol
cmp
pop
addb
pusha
adc
add
and
add
jnp
mov
xchg
adc
lret
add
inc
enter
aam
movsl
pop
jo
xchg
imul
fdivrl
mov
add
jne
addb
push
and
push
add
fmulp
adc
jl
repnz
ljmp
add
mov
add
aam
mov
add
add
lahf
fsubl
leave
mov
add
add
std
sbb
mov
add
pop
mov
add
fadd
or
add
outsl
xchg
mov
add
popa
push
fdiv
push
add
insb
adc
loopne
outsl
cmpsb
add
jg
notb
add
popf
and
add
mov
add
aas
mov
sbb
push
xchg
adc
add
mov
add
scas
add
rcll
add
sti
sub
jne
cmpsl
cmp
lret
stos
jb
jecxz
add
roll
add
fcmovbe
xchg
xor
push
aaa
fcoml
push
jae
xchg
add
adc
jbe
jnp
fs
test
pushf
orl
fmuls
add
inc
test
mov
dec
imul
mov
add
jecxz
addb
mov
add
lret
mov
inc
fbld
stos
add
lret
pop
scas
mulb
hlt
jbe
pusha
pop
jns
add
jno
lods
aam
jb
pusha
out
pop
in
loop
ret
jle
stos
add
pop
fs
addb
incl
sub
add
push
add
add
stos
add
fisubs
add
cli
nop
fildl
or
and
add
xchg
add
lock
sub
add
xor
repnz
outsl
fwait
xor
dec
int3
in
dec
cmp
or
lock
add
mov
or
add
adc
jl
xchg
in
jnp
add
lret
push
in
push
add
aad
mov
add
cmp
dec
loopne
pop
dec
or
add
aaa
inc
adc
cmp
add
aam
jge
popa
mov
aaa
cmp
test
cmp
dec
pop
enter
js
dec
std
insl
hlt
sub
push
xchg
pop
push
addb
rcll
mov
add
pop
jo
mov
add
jbe
cmpl
adc
add
mov
aam
shll
cmpsl
loopne
std
xor
sbb
add
mov
imul
xor
inc
push
add
mov
pop
imul
add
leave
jno
cmp
into
cwtl
dec
push
mov
rorl
outsl
xchg
loope
xor
push
jo
add
push
adc
js
xor
add
push
add
rclb
int
add
ljmp
aam
je
add
add
add
dec
stos
add
pop
xchg
scas
add
hlt
shll
sarl
add
mov
stos
add
mov
xor
js
and
clc
stos
mov
add
sbb
ds
add
sar
and
add
sbb
in
inc
sub
xchg
mov
mov
add
rcrl
pop
mov
movsb
add
pop
pushf
jp
sub
add
push
cmpsb
add
movsb
add
sub
add
jmp
sahf
out
daa
sbb
mov
jnp
ss
jno
aaa
cmpl
pop
dec
pop
add
sbb
iret
nop
jl
add
add
add
into
enter
add
leave
push
fwait
pop
out
add
push
xchg
insl
lods
pop
adc
add
icebp
rorl
sbb
and
add
xchg
mov
cmpsb
add
pop
cmp
mov
dec
outsl
out
xor
mov
out
or
xchg
fbstp
mov
add
inc
scas
add
xchg
loope,pt
ffreep
mov
cmp
jnp
je
clc
addb
aas
jmp
and
clc
jns
out
out
mov
add
add
xchg
mov
clc
outsl
xor
xchg
and
add
mov
jmp
mov
jae
xchg
add
and
cmp
aaa
lret
and
lret
pop
in
lods
add
or
add
jnp
jne
xchg
jns
out
daa
mov
lcall
incb
push
rorb
dec
cltd
aam
lret
xchg
cmc
nop
and
add
aad
bound
aad
mov
xor
jle
xchg
mov
in
mov
adc
add
mov
add
in
and
mov
push
repz
add
cmp
lods
movsl
mov
scas
add
fcomps
xchg
out
les
fsubl
jbe
sub
push
add
lret
add
add
add
mov
jmp
jmp
retw
mov
add
sti
loope
aam
add
add
add
insl
push
pop
mov
or
testb
add
sbb
enter
outsl
sub
fucomi
xchg
imul
out
dec
ret
ud1
sub
add
arpl
cli
ror
xor
cli
inc
ret
mov
add
aas
or
add
add
push
rcr
aad
aaa
mov
ljmp
addl
rcrb
out
mov
daa
push
ss
repz
pop
or
add
imul
xlat
xlat
mov
dec
mov
inc
xchg
int
in
mov
xor
mov
mov
inc
push
daa
xchg
fisubrs
xchg
add
pop
jae
mov
add
ja
aaa
fbld
fidivs
ss
sub
add
pop
in
rcrl
push
push
arpl
push
adc
mov
push
pop
sarl
push
add
dec
xlat
inc
into
test
mov
adc
add
test
add
add
mov
add
jo
or
pop
mov
stos
add
lcall
mov
add
push
xchg
jbe
add
dec
push
add
xchg
out
outsb
lcall
add
xchg
out
xchg
dec
cmp
test
add
jl
cmp
enter
int3
or
add
add
xchg
mov
pop
pusha
into
cmpsl
leave
or
add
sbb
add
jne
push
cltd
insl
jmp
add
dec
sub
add
add
add
adc
add
in
stos
cmp
add
pop
mov
dec
push
mov
mov
sbb
add
jnp
xchg
or
add
jbe
add
arpl
add
into
ret
mov
add
aad
call
aas
xchg
movsb
add
push
sbb
add
add
add
lcall
add
jbe
cli
movsb
add
dec
mov
jg
test
add
add
mov
add
add
daa
pop
cmp
out
icebp
cwtl
mov
hlt
jp
into
cltd
insl
addb
fwait
mov
add
pop
add
jb
pop
outsb
dec
lods
sub
add
int
and
lahf
xlat
jmp
dec
inc
mov
pop
push
fdivrl
cmp
add
punpckhwd
in
popf
push
cmp
roll
add
imul
add
add
scas
add
inc
icebp
aas
orl
dec
mov
sbb
sub
add
add
mov
add
outsl
mov
pusha
scas
add
xchg
push
fs
lret
addb
adc
out
int3
lret
call
inc
mov
add
add
pushf
cmp
add
scas
add
sub
add
add
add
incl
add
fwait
adc
inc
fildll
add
mov
inc
das
mov
adc
data16
jae
sysenter
mov
add
ss
dec
mov
add
imul
xor
in
xchg
push
push
ljmp
adc
or
sub
ret
xchg
shll
not
stos
add
jg
mov
mov
pop
dec
mov
mov
jo
std
test
add
frstor
scas
add
fists
xlat
hlt
push
lods
push
ss
add
push
and
add
add
add
add
rorl
jb
push
lods
add
popf
addb
or
add
dec
push
addb
adc
stos
add
cmpsb
add
fdivrl
mov
fldt
add
inc
xchg
je
in
loop
adc
test
dec
and
add
add
mov
repnz
andl
fidivs
push
and
inc
lock
sbb
aad
push
add
pop
addr16
testl
in
jle
hlt
lahf
ss
test
add
mov
mov
jae
cwtl
imul
add
dec
jmp
mov
or
mov
add
xchg
or
aaa
pop
mov
or
add
imul
add
xchg
push
push
jle
cmp
sbb
add
outsl
sbb
add
cmpsb
add
inc
lret
mov
mov
cld
fldcw
add
pop
push
inc
mov
add
stos
cmp
daa
xchg
cmpsl
pop
cld
pop
addb
dec
sbb
je
mov
add
aad
jp
daa
ret
add
sahf
scas
dec
psrlw
add
sbb
mov
movsl
add
jge
arpl
adc
addb
add
pop
arpl
in
jnp
cvtps2pi
mov
imul
mov
add
stos
mov
mov
fwait
pusha
and
add
mov
add
xchg
cli
rorl
rorl
enter
add
xlat
xor
add
aam
out
add
xchg
mov
clc
sbb
xor
add
push
int3
mov
add
pop
dec
ds
int3
add
mov
lahf
sub
jg
test
loope
mov
push
cltd
pop
ja
xchg
or
dec
cmp
les
movsl
pop
inc
out
mov
push
repz
dec
xor
imul
push
mov
addps
test
add
add
cmc
cwtl
xchg
lods
incl
add
shrl
addb
aad
iret
ds
pop
and
lds
sbb
or
add
loop
sub
add
xchg
loope
cwtl
cmp
cmp
dec
inc
in
popa
push
push
add
mov
sti
sub
add
inc
jg
sub
lahf
mov
mov
ret
mov
filds
jns
dec
or
add
add
aaa
jne
adc
or
add
add
jnp
push
fcmovnb
subl
fbstp
add
jb
xor
filds
dec
cmpsl
lods
add
add
add
add
or
add
lret
jmp
xchg
pusha
sbb
add
test
add
jmp
aaa
std
jne
add
scas
mov
add
fimuls
mov
add
bound
jns
add
loopne
jbe
addr16
cmp
cmp
cmpl
add
mov
inc
outsl
and
test
add
mov
ret
cmpsb
add
leave
jne
add
repz
test
xor
popf
repnz
cmpsb
add
test
divb
mov
or
push
call
or
add
lcall
pushf
fsubrs
push
add
add
add
push
add
jle
sub
test
lret
pop
xchg
fistpll
add
add
add
dec
mov
add
lea
mov
push
add
mov
add
add
fsubrl
add
in
inc
and
push
or
add
enter
aad
negb
add
sub
add
add
mov
cmp
add
mov
push
lds
jmp
add
insb
icebp
lret
dec
stc
pop
mov
mov
sarl
ret
add
lds
adc
fisttps
cltd
inc
js
dec
clc
adc
mov
test
add
mov
or
fsts
test
mov
add
movsl
mov
add
scas
add
cmovne
cmc
data16
jmp
fistl
xchg
fwait
out
mov
add
bound
mov
cmc
mov
add
push
lcall
add
loop
lock
add
add
mov
ljmp
or
lretw
cli
lock
add
add
push
stos
add
mov
fiaddl
in
xchg
aaa
or
add
clc
jbe
mov
inc
imul
add
sbb
ja
cld
or
add
mov
push
js
adc
push
mov
add
out
mov
ja
add
xchg
daa
push
xchg
scas
add
and
add
push
jnp
mov
push
push
adc
mull
inc
sub
add
push
add
mov
xlat
les
cli
cmpsl
jmp
xchg
fdivr
in
xor
loopne
out
loop
sub
out
bound
icebp
movsl
ret
jge
mov
shlb
add
xlat
outsb
hlt
sub
inc
mov
add
addps
add
test
cmp
daa
and
push
fcompl
mov
add
jg
add
push
add
add
sbb
inc
stos
add
outsb
fs
push
mov
mov
add
into
and
add
out
addb
cmp
ljmp
jb
add
add
out
add
or
add
add
dec
jecxz
ret
jmp
pop
fsubl
adc
sub
mov
add
cltd
lock
test
add
add
sub
add
cmpsb
add
jp
imul
aam
pop
xchg
sbb
test
add
test
add
add
test
add
clc
fs
add
push
fldcw
pushf
xchg
add
in
and
add
add
fdivp
mov
add
cld
adc
add
add
cmp
pop
jp
out
mov
mov
push
lds
add
xor
lea
add
adc
lret
pop
mov
pop
jbe
rcrl
mov
iret
cli
or
add
xchg
inc
pop
cmp
adc
les
dec
xchg
dec
pop
aam
fs
sbb
add
xor
add
lods
add
xchg
out
or
ss
add
sahf
cmp
add
cwtl
push
add
out
xchg
add
adc
xchg
add
sub
add
add
sahf
cltd
sti
add
outsb
add
add
push
add
dec
mov
xor
mov
push
xchg
push
cmp
add
repz
lods
add
popa
dec
sbb
js
pop
fs
mov
icebp
movsb
add
sbb
mov
jnp
xchg
xor
shll
loop
movsb
add
jbe
add
mov
sbb
dec
imul
dec
inc
inc
dec
or
add
or
add
add
sub
add
sub
add
push
mov
add
mov
add
pop
int
leave
nop
mov
and
add
cmc
movsl
mov
mov
sti
mov
add
jo
pop
pop
lret
jno
pop
fisubrs
out
mov
push
xor
add
ret
loope
ja
push
xor
sbb
pop
mov
incl
jno
mov
cli
lods
add
fsub
push
fisubrl
add
ja
jle
sbb
ds
add
mov
add
jne
push
test
pop
sub
add
add
test
add
xchg
movsl
and
push
orl
das
cld
scas
add
shll
add
cmpsl
test
hlt
dec
pushf
ss
sub
test
shll
mov
pop
lcall
add
sub
add
fld
lods
add
sbb
adc
out
xlat
test
add
add
shll
inc
mov
fstps
pop
xchg
pop
sbb
addb
jbe
test
aad
test
add
jl
mov
cmpsb
add
fists
lods
movsb
add
out
cld
mov
mov
sbb
add
cmp
test
mov
add
add
push
cmp
mov
data16
or
add
and
add
xor
sbb
push
or
imul
inc
mov
add
mov
insl
cltd
xlat
xor
test
in
fidivrs
xchg
jl
rolb
addb
sahf
mov
add
add
out
pop
cltd
mov
add
fucomi
lret
lahf
push
add
push
ret
xor
jge
gs
call
insb
ror
insb
dec
xchg
xor
aad
inc
add
loopne
push
dec
mov
in
add
add
mov
add
add
sub
test
add
adc
add
adc
sbb
add
rclb
mov
add
dec
stc
jg
dec
dec
and
int3
daa
int3
cld
shlb
xchg
mov
add
das
dec
adc
cmc
lcall
add
addr16
into
insb
pop
pop
aas
add
or
imul
cmc
pop
push
ljmp
cmp
push
add
pop
xchg
add
lret
ret
ret
mov
xchg
dec
decb
add
mov
aaa
dec
sbb
pop
aad
add
push
add
lret
cmp
add
xlat
hlt
cmpsb
add
lea
add
add
add
inc
add
add
mov
add
add
stos
sub
add
mov
pusha
mov
mov
fs
jbe
out
in
sub
add
push
add
push
add
or
int
lahf
inc
dec
xor
push
or
add
push
add
lcall
add
push
add
mov
lods
add
test
add
push
call
out
add
ljmp
je
add
push
jmp
add
dec
je
loopne
xchg
aaa
mov
ficompl
add
cmpsb
add
out
jbe
mov
paddusb
add
xor
add
aad
add
xor
iret
mov
mov
add
sub
add
push
lret
stos
movsb
add
sahf
movsl
push
in
or
xchg
popa
or
add
cltd
in
xchg
jg
fsubrp
push
add
mov
add
fdivl
ss
sub
add
sti
sbb
jae
fsubl
add
movsl
jb
lret
rorb
pusha
insl
insb
clc
mov
add
add
add
jb
shrb
dec
das
xchg
dec
dec
mov
fisubs
jl
testl
mov
add
inc
sarl
jb
ret
movsb
add
imul
push
add
pop
jno
pusha
call
fwait
lods
aas
testb
sbbl
rcrl
pop
fistps
pusha
xchg
or
mov
add
out
in
mov
pop
sub
add
js
jno
add
add
cmpsb
add
lods
arpl
push
call
push
or
add
lsl
add
cwtl
imul
jmp
iret
xchg
aas
adc
lock
xchg
mov
mov
in
push
xchg
and
dec
test
add
mov
add
clc
pop
inc
popf
test
mov
ss
cmp
pusha
movsb
add
add
add
iret
in
lea
push
push
repnz
into
sub
cmpsb
add
cmp
movsb
add
pop
mov
add
repnz
sub
add
add
jae
cmp
test
add
add
push
scas
add
out
adc
out
lods
mov
pusha
movsb
add
adc
dec
loop
add
ja
in
xorl
movsl
mov
push
loop
dec
cld
push
add
out
out
mov
repnz
imulb
mov
xor
push
inc
add
add
lock
add
pop
sbb
mov
xchg
adc
lods
and
add
xchg
push
out
jl
daa
lret
jmp
mov
add
rol
pop
and
xchg
pushf
fbld
addr16
sbb
cmp
xchg
mov
fxtract
mov
add
add
and
add
mov
idivl
add
push
incb
add
xchg
jnp
sub
fnsetpm(287
insb
mov
dec
dec
jb
xor
stc
sbb
add
aas
daa
shll
xor
pop
outsl
pushf
or
add
js
js
test
add
out
lret
add
add
aaa
into
fisttps
je
add
lock
enter
add
jb
mov
add
cld
test
add
arpl
stos
add
out
popf
xor
movsb
add
mov
imul
add
xor
imul
cltd
xor
in
jo
notl
inc
pop
cmpsb
add
lds
xchg
add
add
nop
test
addb
add
sahf
xchg
sub
add
fmulp
dec
lahf
fs
addl
add
fldl
dec
xchg
inc
add
xchg
mov
add
movsl
sub
add
jo
negb
cmc
fimuls
add
lahf
scas
push
sbb
inc
dec
push
cmp
xchg
add
and
add
adc
ljmp
sub
add
aam
add
or
iret
lret
lea
add
sbb
pop
outsl
sahf
xor
mov
push
mov
add
popf
and
add
repnz
mov
aas
mov
mov
js
mov
add
add
add
test
daa
test
add
mov
add
add
xor
cmc
imul
lcall
mov
xlat
lcall
add
add
cli
add
add
cmc
sub
mov
inc
int
xchg
sub
jp
adc
loop
adc
addb
dec
stos
inc
inc
or
add
sub
add
mov
add
jmp
cmp
mov
add
in
ss
outsl
lock
sub
ret
je
add
add
add
adc
inc
jp
sbb
mov
jg
loopne
imul
popa
daa
stos
into
mov
add
lret
ss
add
xor
mov
dec
pusha
mov
xchg
mov
add
aaa
push
jecxz
add
movsb
add
fildl
add
ja
add
scas
das
fldl
add
pusha
sbb
fimull
xor
in
addr16
outsl
sub
add
mov
aad
fisubrl
pop
sub
jns
add
sub
add
cmp
mov
jecxz
pop
ret
add
push
das
cmpsb
add
leave
jno
outsb
incl
add
mov
lods
or
push
in
add
add
lahf
cmp
mov
mov
dec
out
cmpsb
add
and
add
rcrb
js
stos
add
xchg
gs
xor
rclb
add
mov
sbb
add
int3
out
jbe
lret
das
les
inc
and
add
fmull
leave
insb
ds
sbb
mov
dec
das
mov
int
fcoms
je
xor
cmpsl
mov
mov
loope
fwait
fs
jns
add
add
add
mov
cmp
mov
sar
pop
int3
jl
add
cmp
or
add
xlat
mov
ret
mov
add
xor
aad
xor
add
addb
lods
add
push
xor
lret
fisubl
aam
mov
cli
cmpsb
add
out
xchg
push
cmp
or
ljmp
cli
rol
mov
inc
cltd
sbb
ret
add
test
add
sbb
test
add
add
cld
add
dec
mov
add
sub
add
add
xorl
scas
add
xor
add
fbstp
int
adc
xchg
lret
scas
add
in
adc
sub
push
sbb
fistps
imul
test
add
dec
addb
mov
lea
add
out
jmp
popf
or
add
and
add
int3
jo
or
add
xchg
add
js
daa
lea
jmp
add
mov
fucom
sub
movsb
add
test
add
add
nop
test
add
xor
ret
dec
xchg
add
add
add
inc
cmp
fdivrs
lahf
push
add
cwtl
cwtl
push
and
add
aam
add
and
xchg
ss
js
add
int3
or
mov
ja
xor
add
cli
addr16
in
mov
arpl
dec
or
add
add
ja
popa
add
xor
jne
xchg
fimuls
add
jne
lret
sbb
movsb
add
pop
add
add
pop
xchg
cmp
inc
adc
sub
add
push
mov
add
rep
add
mov
add
push
pop
push
ja
stos
add
mov
add
ss
xor
pop
sbb
pop
xchg
movsb
add
xlat
test
test
mov
add
add
or
add
jge
std
cmp
mov
add
add
add
bound
adc
sbb
sbbl
xchg
add
loop
loope
addb
out
lcall
lods
add
fwait
iret
test
outsl
fs
mov
add
je
dec
pop
stos
cmp
add
push
or
aam
int
sbb
addb
jb
xchg
add
data16
les
aaa
and
mov
lods
xchg
add
add
ja
cmpsl
lds
and
add
cmpsl
sub
idivl
popf
fsub
cmpsl
jmp
jne
sti
mov
fnstcw
sbb
sub
add
xchg
fisttpll
inc
repz
test
stos
add
ret
nop
in
mov
inc
lock
add
jle
movsl
addb
dec
cmc
cmp
add
push
add
and
add
cld
stc
dec
add
cmpsb
add
mov
cmp
add
aas
enter
ljmp
out
mov
add
clc
pop
mov
mov
adc
les
mov
pop
adc
out
cltd
add
add
loopne
push
add
aaa
mov
jb
push
dec
fisubl
mov
xchg
add
outsb
mov
lds
add
push
leave
pop
scas
add
adc
stos
clc
das
je
scas
add
jmp
jp
iret
clc
je
repnz
adc
les
sarl
jbe
daa
popw
fsubrs
mov
or
mov
adc
test
add
test
mov
push
push
sub
add
jge
mov
jno
dec
push
add
pop
jbe
roll
add
idivl
sub
add
dec
fwait
icebp
jno
jp
aaa
movsb
add
popl
dec
xchg
mov
mov
mov
mov
pop
movsl
jecxz
sub
mov
jno
add
das
in
inc
dec
leave
adc
add
add
add
mov
fwait
xor
add
notb
add
xchg
add
sub
add
inc
pop
mov
out
out
ds
popf
loope
jne
mov
pop
call
js
jae
push
lds
push
pop
xchg
out
icebp
in
cmp
sarl
push
pop
xor
push
add
or
add
sti
xchg
shrl
add
addb
sub
add
ljmp
sbb
fmuls
add
or
addb
in
test
shll
add
add
add
xchg
into
xorl
and
add
jmp
call
ret
xor
shll
adcl
and
add
mov
aad
jecxz
push
push
xlat
mov
fwait
jle
and
enter
mov
mov
add
roll
add
mov
insb
cmpsb
add
jb
lret
and
pop
sti
ret
or
add
cmpl
lock
test
push
pop
ljmp
add
jmp
pusha
popa
cmc
cwtl
ds
lods
add
add
cmc
lods
mov
mov
imul
sub
inc
jns
xchg
add
mov
add
push
add
add
sahf
and
add
je
dec
cmp
aas
adc
dec
push
add
push
std
mov
add
dec
sub
add
add
and
sbb
jle
xchg
cmc
hlt
popf
cmpsb
add
mov
sahf
aam
into
xor
xor
or
push
mov
push
add
in
xchg
mov
flds
mov
call
push
add
sti
movsl
jnp
adc
pop
fcoms
stos
add
in
add
shl
adc
cmpsl
xchg
movsb
add
or
add
cmovno
add
or
add
cltd
mov
insb
aas
inc
add
add
les
cmp
sub
jp
outsb
xchg
lcall
mov
pop
sub
add
pushf
pop
lahf
jmp
add
imull
mov
add
mov
jl
cwtl
nop
pop
aaa
cmp
add
push
cmc
in
mov
add
cmp
add
sbb
lds
movsb
add
add
mov
add
fcmovnu
fwait
inc
xchg
aaa
cmp
clc
stos
addb
cwtl
push
mov
add
jl
inc
mov
sbb
mov
loopne
adc
add
lret
add
fsubrs
add
sub
add
mov
icebp
dec
jno
add
dec
int
mov
sub
mov
push
jb
rcrb
add
add
nop
das
xor
imul
icebp
adc
adc
lcall
inc
fdivr
insb
lea
add
inc
push
ja
inc
cmp
lods
inc
fcmovbe
sub
sahf
xor
jb
test
push
pop
popa
xor
lret
inc
jmp
add
loop
ljmp
add
xchg
popa
mov
jl
add
or
add
ret
jns
add
add
out
enter
add
inc
cmp
xor
add
pop
dec
sbb
inc
push
cmpsb
add
lcall
out
jmp
popf
push
xchg
mov
notl
adc
repz
inc
fistpl
cmp
lret
outsb
int3
inc
mov
nop
cmc
shlb
leave
test
pop
xchg
out
std
fucomi
jl
adc
das
pusha
shrb
pop
movsl
movb
or
movsb
add
sahf
scas
xorl
pushf
mov
xor
roll
int3
xorl
cmp
fsubl
pop
data16
aas
inc
and
dec
push
repnz
add
pop
sbb
test
add
cmpl
fs
jmp
pop
rcr
hlt
add
add
mov
in
inc
popf
jno
mov
add
xor
inc
dec
cld
cmc
sub
add
xchg
inc
mov
mov
enter
std
repz
pop
hlt
add
add
stos
add
stos
add
adc
incl
idiv
push
xlat
arpl
into
cmp
jns
les
mov
xchg
imul
mov
lea
scas
add
out
add
dec
cltd
cli
fistps
aas
sub
jns
or
inc
clc
lods
add
jp
inc
ljmp
sub
add
add
arpl
mov
add
mov
add
in
xchg
add
push
psraw
out
lcall
cmp
add
addb
outsl
int3
jo
addl
bound
cli
aas
clc
lcall
mov
and
add
aaa
cmc
push
ret
add
lods
add
cld
cmc
add
add
cmp
in
dec
push
ret
push
cmp
lcall
popf
mov
add
fs
push
test
add
add
add
and
leave
adc
add
fs
jmp
addb
ficomps
mov
jo
add
ret
cmp
gs
add
add
insb
jmp
sub
cmp
lahf
sbb
arpl
repz
add
gs
and
add
add
rclb
call
mov
scas
add
loope
test
addb
cmp
sahf
enter
push
out
insb
pop
aad
fiadds
inc
or
add
add
inc
xchg
push
sarb
lahf
int
in
jecxz
cltd
or
add
inc
cmpsl
insb
adc
jecxz
add
mov
add
dec
jl
mov
nop
daa
sbb
add
lret
icebp
mov
or
add
bound
in
dec
xchg
sti
mov
iret
int
adc
pop
imul
shrb
fchs
xor
pop
and
adc
mov
add
jecxz
add
lds
add
ja
repnz
add
out
pop
jl
add
mov
add
or
popa
movsb
add
mov
mov
add
push
mov
mov
mov
dec
iret
mov
pop
in
mov
add
fiaddl
add
push
sbb
mov
outsb
adc
add
lock
pusha
dec
mov
push
add
into
push
or
mov
inc
pop
xchg
sbb
shl
pushl
push
mov
add
add
xor
fisubl
add
xor
adc
mov
loopne
fadds
mov
add
cli
push
cmc
mov
add
mov
add
xchg
add
orl
add
lods
add
jbe
and
add
xor
push
add
iret
and
add
js
mov
call
shll
aas
loope
mov
add
mov
add
rorb
or
add
inc
lods
mov
add
bnd
add
aas
fstl
add
pop
mov
aaa
out
je
out
add
movsl
lahf
je
jo
iret
push
jns
mov
mov
aam
add
add
daa
insb
jecxz
insl
add
aas
lock
ljmp
add
jle
push
add
mov
add
mov
ljmp
mov
add
and
sbb
stc
neg
mov
mov
push
sub
add
add
pop
loope
mov
cwtl
int3
add
add
mov
add
mov
and
add
test
inc
pushf
je
popf
jbe
xchg
pop
mov
mull
xor
add
jmp
jl
addb
lock
cmp
add
xchg
xor
cmp
std
mov
and
lods
add
sub
jp
add
andl
and
and
add
or
mov
sub
add
loopne
push
xor
and
mov
pop
mov
add
pop
lret
add
jno
fidivs
push
add
dec
rcr
xchg
sbb
add
jl
cmc
jne
sahf
xor
lret
imul
add
sbb
and
add
addb
mov
add
add
push
dec
dec
jmp
add
out
sbb
insb
fdivs
add
sub
lock
push
stos
mov
adc
add
scas
jl
jns
enter
mov
in
lock
out
pushf
in
out
pop
adc
ret
xlat
mov
sbb
push
cmpsb
add
test
add
adc
jecxz
pushf
stos
add
ljmp
aad
fiadds
mov
add
xchg
add
loope
lret
outsl
xchg
add
cmp
add
add
mov
add
xchg
mov
add
cmp
arpl
daa
icebp
mov
jno
cmp
add
ja
dec
cmp
mul
inc
test
addr16
add
loope
add
push
add
adc
cmp
lea
mov
fmull
push
shl
push
add
adc
pop
mov
ret
sbb
xor
dec
add
lds
add
mov
ret
aaa
bound
and
add
jae
xchg
aaa
jnp
sbb
test
or
add
pop
pop
sub
les
adc
pop
js
or
add
push
add
xor
arpl
or
add
sbb
pop
cmp
add
sub
add
ja
and
add
jmp
sbb
sbb
and
add
xor
and
add
je
not
mov
out
xor
xchg
sahf
out
pop
movsl
jge
in
push
pushf
enter
add
std
loop
lods
add
lds
inc
aad
std
call
pushf
add
add
addb
sub
add
shrl
add
add
out
in
cld
or
add
jg
add
sbb
daa
test
scas
insb
sub
jns
add
ret
shrb
add
dec
mov
push
add
sti
fimuls
scas
cwtl
dec
aas
loop
aad
add
ljmp
add
rcr
xlat
sub
add
aaa
xor
stos
add
out
lea
js
cmpsl
mov
push
xor
add
and
dec
pop
xchg
ret
add
add
imul
lea
sahf
xlat
pop
ja
inc
sub
rcrl
sub
add
push
test
ljmp
add
rclb
insl
divb
testb
je
out
in
xor
out
std
push
inc
xor
cli
out
adc
jecxz
xor
or
ror
mov
push
andl
mov
sub
add
pop
fisttpl
add
decl
add
sbb
jno
jmp
mov
xchg
push
add
rolb
movsl
push
loopne
xchg
add
loopne
jle
or
add
lret
stos
add
xchg
orl
into
movsl
sub
add
pop
push
add
pop
adc
push
enter
pushf
mov
mov
cmc
clc
insl
fstpt
or
addb
insb
pop
push
dec
test
test
stc
jbe
inc
mov
arpl
push
add
add
cmp
mov
dec
sub
call
xchg
add
movsl
xor
dec
lahf
bound
and
add
inc
mov
sahf
ret
in
xor
add
cmp
mov
add
and
add
dec
inc
inc
addl
cmpl
std
inc
int3
test
or
add
repnz
mov
adc
aas
sbb
or
mov
add
orl
add
jbe
or
add
xchg
or
cmp
add
add
pop
mov
add
pop
leave
add
add
lods
lock
add
push
add
or
add
mov
sahf
hlt
pop
fbld
add
mov
jnp
mov
mov
scas
add
lods
add
fadd
call
jecxz
in
jecxz
mov
mov
add
add
add
mov
or
rorb
lods
or
add
add
lock
jl
rclb
sub
add
daa
and
add
in
add
mov
or
lock
sbb
adc
mov
dec
out
sub
das
add
push
cmpsb
add
sbb
jp
push
xchg
sahf
push
add
outsl
lret
mov
ds
addl
adc
lret
add
jmp
add
mov
add
pop
push
ret
mov
xor
add
mov
sub
add
sbb
insl
sbb
xchg
dec
sti
inc
push
mov
aas
adc
cli
jmp
mov
addl
movsb
add
push
gs
add
hlt
cmp
add
outsl
enter
add
xor
add
les
mov
add
das
or
add
cmpsb
add
sub
add
add
xlat
xlat
cmc
mov
push
addb
rolb
sbb
scas
mov
rorb
push
and
sbb
movsb
add
inc
mov
add
pop
test
add
enter
std
icebp
rcl
add
sub
add
xchg
mov
add
test
add
mov
add
frstor
add
fsubrl
sbb
mov
mov
add
in
cmp
pop
cmc
adc
bound
call
jmp
push
add
das
out
add
scas
add
dec
jno
jnp
add
call
movsl
inc
addb
loop
add
push
cmp
gs
ret
or
cli
pusha
mov
add
inc
popf
add
add
aas
mov
bnd
jp
fs
add
sub
add
cmp
aas
push
add
sub
add
mov
pop
outsb
stos
movsl
jo
add
in
jge
out
testb
add
push
add
pop
inc
and
add
std
push
lret
addb
lds
or
add
movsl
das
call
aam
clc
stos
out
jb
add
cltd
int
psubq
fnsave
add
cwtl
cmp
sarb
add
add
fmull
add
std
mov
cmpsl
jmp
push
cmp
scas
nop
test
add
cld
scas
cltd
mov
sarl
and
cmp
sbb
add
subl
jne
out
inc
xchg
fwait
mov
dec
push
push
inc
jnp
mov
ja
ss
addr16
insl
dec
sbb
inc
xchg
add
mov
sub
sub
add
fs
pusha
xchg
dec
adc
push
test
add
and
add
mov
add
jecxz
push
hlt
enter
imul
jnp
dec
leave
xchg
jb
xchg
data16
add
ljmp
inc
jecxz
add
mov
add
int
xchg
inc
xchg
and
cmp
arpl
pop
mov
leave
mov
sub
add
mov
iret
stc
ljmp
iret
test
add
jecxz
ss
add
add
add
add
push
add
fidivl
or
add
xchg
lcall
aaa
rcrb
dec
mov
enter
push
add
addr16
sbb
aaa
lods
dec
out
inc
adc
adc
mov
add
jecxz
inc
sbb
fsubrl
add
aas
popf
ja
js
add
xlat
xchg
add
mov
push
add
pushw
push
into
add
push
add
or
add
aaa
shl
mov
jns
imulb
mov
push
or
add
add
and
insl
xchg
sbb
dec
pop
fs
mov
and
add
repnz
fnstcw
mov
add
mov
dec
sub
add
mov
add
incb
add
add
inc
pop
mov
pusha
mov
push
stos
inc
xchg
add
mov
add
test
add
inc
lds
dec
xlat
or
mov
adc
scas
add
sbb
add
cmp
fmull
xlat
xlat
imul
xor
mov
loop
mov
add
adc
insl
movsl
dec
cmp
inc
sub
add
mov
add
jo
xor
add
mov
and
cmp
ja
pop
jne
xor
in
mov
loope
enter
mov
add
addb
xor
mov
mov
aam
add
ja
add
xchg
mov
popa
sbb
xchg
xchg
xchg
stc
add
add
sub
add
lahf
jb
cld
push
push
div
or
add
or
add
fldcw
das
xor
xchg
lret
add
fdivp
cwtl
int
fisttpll
or
lcall
sbb
adc
adc
add
add
add
test
add
pop
mov
sbb
cmp
jb
enter
decb
inc
dec
loopne
add
adc
cmp
and
add
int3
stos
sub
mov
adc
repnz
imul
push
andps
cli
inc
sbb
push
mov
sahf
aas
mov
add
std
mov
in
mov
add
cltd
test
add
add
loop
cmp
push
add
and
add
mov
jnp
add
add
ret
mov
pop
xlat
cmp
add
in
movsl
pop
gs
add
pusha
add
inc
add
fmuls
add
inc
jnp
into
sarl
loope
aad
xchg
add
repnz
add
add
sarb
add
mov
add
jle
out
lahf
adc
out
pop
inc
popf
mov
add
shl
add
pop
outsl
loop
xchg
sarb
mov
and
add
imul
fcmovnu
lea
jae
addb
rcrl
add
mov
add
ds
cmc
ss
pop
je
in
loopne
add
pop
jno
sbb
pushf
adc
cmp
stos
push
cld
and
add
push
cwtl
imul
dec
in
loope
add
sti
fsts
ss
jno
aad
fsubs
dec
adc
mov
add
or
notb
out
add
scas
add
clc
push
add
or
cmp
mov
cmpsl
mov
stos
add
setb
std
jo
sub
pop
pop
test
add
pop
sub
and
add
add
add
mov
add
jp
call
jecxz
jl,pt
add
scas
jge
rorb
out
cmp
pop
addb
out
bound
add
fstpl
pop
adc
jmp
js
shrl
jle
sbb
cwtl
mov
add
scas
add
roll
add
pop
push
sub
add
jo
add
stos
add
mov
or
sub
add
lahf
loop
push
or
add
mov
add
imulb
cltd
outsl
mov
icebp
cwtl
sub
ja
jge
and
add
sahf
test
add
cmp
inc
test
sti
and
add
add
push
adc
out
lods
das
movsl
addb
aas
adc
std
push
cmp
push
int3
pop
inc
addb
popa
test
add
in
adc
cld
out
callw
or
sbb
add
push
add
push
insl
addb
jmp
mov
add
inc
adc
inc
iret
aad
mov
jns
rcll
popf
add
add
add
sahf
mov
add
and
add
jb
popa
inc
mull
sbb
jg
sbb
mov
insb
or
dec
in
lods
add
loop
loope
in
jmp
fwait
push
pusha
or
add
add
outsl
int
dec
or
mull
shll
add
popf
hlt
inc
ds
in
xor
dec
mov
sub
add
scas
add
sub
add
aam
jo
xchg
jmp
xchg
mov
add
add
add
and
ret
in
mov
add
xchg
fildll
pop
jmp
ljmp
stos
pop
test
add
nop
add
xchg
cltd
push
ds
data16
add
jmp
add
inc
repnz
or
xchg
sub
add
cli
ljmpw
add
sub
add
out
imull
sarl
jbe
add
out
inc
jmp
outsl
cmp
lods
add
or
add
xchg
add
jnp
add
int
add
ss
mov
add
loopne
jns
add
xor
mov
add
mov
mov
mov
pop
push
sub
add
add
add
repnz
dec
xchg
xlat
out
add
pop
pop
in
je
xor
dec
mov
add
std
dec
and
add
cwtl
xchg
add
mov
push
lods
add
dec
inc
pop
mov
das
push
lods
fcmovu
fsubp
lret
and
divb
sub
rolb
sbb
int
add
out
sbb
lcall
sub
add
mov
movsb
add
fdivrs
add
sbb
add
jle
mov
mov
out
jae
dec
xor
popf
sub
add
add
lret
je
pop
or
add
in
arpl
push
pop
mov
dec
pop
shrl
add
cmp
out
push
add
push
inc
nop
int
add
cmp
add
test
add
cli
jmp
or
sub
pop
loope
lahf
add
add
gs
mov
mov
les
pop
and
add
push
outsl
roll
lea
sub
add
mov
add
and
das
xor
scas
jns
scas
add
cmp
adc
xchg
cmpsl
and
add
inc
mov
add
xor
mov
subl
cmp
add
scas
add
jae
jmp
fistpll
mov
imul
cmp
rclb
repz
outsl
or
add
fdivr
ja
fsubr
mov
add
dec
mov
mov
je
jle
repnz
add
ljmp
sub
ficompl
push
jmp
xor
mov
add
add
test
orl
mov
mov
dec
adc
push
add
add
add
and
add
cmc
or
sub
add
mov
add
pop
cmc
sbb
fnstcw
dec
mov
lahf
jnp
xchg
idivl
bound
pop
aam
sbb
test
repz
insl
aad
inc
push
mov
add
xchg
inc
mov
in
and
add
pmaxsw
addb
sbb
or
loope
add
inc
and
add
add
push
add
sti
into
addb
add
mov
aaa
stos
add
aad
xchg
mov
add
add
jnp
or
add
add
and
leave
mov
sbb
daa
xor
add
xor
add
mov
add
cmp
stos
shll
add
mov
mov
add
mov
roll
add
sbb
xlat
adc
aas
dec
out
ljmp
add
fadds
int
clc
rcrb
jge
add
jbe
cli
mulb
add
xchg
add
add
mov
mov
xor
add
mov
cmp
loop
add
pop
or
add
push
dec
iret
mov
cmc
jno
lret
pop
push
int3
or
sar
ljmp
add
mov
hlt
jb
add
add
cmc
pop
shlb
ficompl
mov
push
ljmp
add
mov
roll
fs
std
and
add
fwait
xchg
insl
test
adc
scas
mov
jno
add
push
mov
add
loope
dec
popl
add
and
or
add
mov
into
cltd
call
cmp
pushf
call
push
push
loop
aaa
stos
add
lret
or
jb
mov
inc
mov
or
add
add
inc
ds
loop
roll
add
jne
sub
pop
or
sbb
mov
lret
add
xchg
dec
inc
addb
push
dec
test
add
mov
icebp
inc
stos
jb
ds
fisubs
shl
hlt
sbb
pop
push
xlat
lea
add
push
int
sub
add
xor
dec
pop
xchg
mov
addr16
int
popa
sub
add
adc
cwtl
inc
xchg
push
sub
add
pop
test
fisttpl
or
mov
add
add
add
xchg
xor
sbb
pop
mov
fwait
xchg
into
rcl
cmp
xchg
shll
and
sbb
mov
mov
inc
xchg
add
int
add
xor
in
xchg
pop
daa
jp
ds
jle
mov
and
add
add
fldenv
lea
ja
std
mov
sbb
add
bound
fcom
das
add
add
inc
xor
add
add
add
inc
mov
mov
dec
popf
hlt
dec
inc
test
jbe
xchg
add
pop
pushf
in
cmp
mov
cmc
clc
lods
add
adc
flds
loop
mov
xchg
imul
add
rclb
jae
imulb
or
add
fists
add
add
mov
jle
xchg
enter
jns
add
cmp
mov
adc
add
aas
push
repz
xor
jle
add
vmaxps
roll
outsb
out
lods
call
add
stos
add
lods
add
fwait
adc
test
add
jbe
pushw
ss
nop
popf
dec
fcmovu
lcall
les
movsl
cmc
aaa
enter
push
je
les
push
pop
xlat
mov
and
add
cmpsb
add
mov
xor
ret
cmp
enter
std
xchg
fsqrt
jge
and
add
daa
sbb
inc
repz
add
jnp
jecxz
add
aas
mov
add
jmp
jns
addb
sbb
cmpsb
add
setae
add
lahf
jns
aam
pop
pop
jl
add
daa
inc
adc
push
push
shlb
mov
in
xor
cmp
mov
add
rclb
mov
jmp
sar
movsb
add
icebp
imul
push
sub
ret
xchg
add
dec
and
add
scas
add
jnp
and
or
inc
test
add
mov
and
std
push
xchg
pusha
sti
dec
mov
push
push
add
mov
mov
in
and
icebp
mov
xchg
faddp
popa
push
mulb
stc
and
leave
and
add
xchg
adc
pusha
push
xchg
sbb
lret
add
and
and
add
or
lret
lods
add
add
add
mov
xor
int
xchg
push
inc
mov
add
inc
jb
add
add
mov
mov
or
add
fwait
mov
xchg
push
stos
add
and
add
int
add
mov
add
or
add
add
or
in
jbe
cmp
mov
loop
int
push
dec
mov
add
dec
dec
xchg
clc
fs
cmc
mov
add
sbb
mulb
xchg
or
add
add
popf
mov
cltd
push
add
xchg
add
mov
push
add
paddsb
or
add
add
jmp
jo
leave
cmp
pushl
aaa
adc
pop
adc
push
or
add
xchg
add
add
movsl
insl
dec
xchg
shl
and
add
int
int
mov
add
pop
sbb
add
sarb
ret
dec
sbb
xorl
out
pop
ret
jb
int
push
cli
mov
test
add
add
jno
add
mov
add
add
dec
out
push
mov
add
sub
add
out
enter
or
add
xchg
add
mov
add
add
jb
shll
outsl
mov
pop
inc
sub
add
push
adc
mov
testb
xor
sub
or
add
add
mov
inc
xor
cmp
dec
call
mov
add
int3
iret
cmp
ja
xchg
mov
add
icebp
push
sub
push
add
pop
push
add
jecxz
pop
xchg
lcall
out
ror
add
add
pusha
ja
xor
sbb
add
cld
in
int
cmp
pop
popa
and
mov
lock
push
pop
mov
lods
add
and
cmp
mov
ret
add
xchg
rorl
mov
add
ja
popf
aaa
or
add
andl
sti
jnp
and
out
add
push
sub
inc
sbb
movsl
imul
scas
add
adc
jle
loope
mov
in
add
shll
out
sbb
pop
push
add
dec
mov
rolb
add
push
jmp
out
and
add
lods
js
inc
add
add
faddl
negl
adc
lea
iret
pop
stos
add
jecxz
adc
aad
add
jle
add
mov
push
js
mov
nop
ljmp
and
popf
push
mov
add
jecxz
push
push
xor
mov
sbb
add
mov
add
stos
add
jne
dec
imul
ss
xlat
dec
xlat
and
add
jg
add
outsl
and
lcall
add
jbe
js
lahf
loopne
sub
push
ficoml
inc
fsubrs
jp
pop
jo
jp
inc
loopne
dec
add
out
xchg
mov
addb
dec
adc
or
push
out
dec
xchg
mov
mov
xchg
pop
and
add
xor
jge
mov
xchg
mov
add
pop
mov
enter
mov
notl
adc
inc
cmp
addb
cmc
push
mov
cmp
add
lods
sbb
shl
js
add
shlb
and
add
pop
lods
add
adc
mov
cmpsl
jmp
leave
inc
and
add
cmp
ljmp
adc
clc
push
add
lahf
imul
icebp
outsl
adc
add
idivl
mov
or
add
add
dec
dec
movsb
add
iret
pushf
dec
dec
sub
add
push
add
add
add
push
add
sbb
int
movl
xchg
ja
adc
inc
xchg
clc
arpl
cmp
mov
dec
xchg
cwtl
and
sub
add
ficoms
mov
nop
addb
mov
pop
sub
lods
jl
loope
and
xchg
pop
fidivl
add
sub
pop
push
icebp
and
into
dec
xchg
push
xchg
fwait
gs
lret
sub
add
pop
scas
fsubl
pop
and
add
mov
icebp
rcrl
pop
jae
int
fs
cmp
cmpsb
add
add
add
jno
scas
mov
add
fcoml
jmp
imul
xchg
dec
mov
ja
cmp
adc
inc
les
cmp
inc
and
and
add
scas
add
std
push
add
dec
imul
or
icebp
mov
out
xchg
jns
ja
mov
hlt
fmull
add
inc
fldt
push
add
jle
add
pop
mov
add
add
in
inc
and
mov
xchg
cltd
and
cmp
pusha
test
add
div
mov
push
add
add
xchg
add
xor
inc
inc
or
add
add
or
add
mov
mov
add
nop
xchg
shrb
ss
jecxz
inc
insl
scas
addb
sbb
xchg
or
push
sbb
add
push
mov
or
jnp
shl
mov
stos
or
add
lds
pop
adc
rolb
inc
mov
add
or
add
xor
and
add
ss
sub
add
or
push
aam
inc
push
xchg
and
fisubs
shlb
cmp
repz
xchg
enter
jg
jle
jp
add
push
repnz
jae
add
fdivrp
mov
and
add
pop
xor
jmp
call
mov
mov
cmp
mov
add
jae
lods
jbe
add
fistpl
xchg
outsb
sbb
rolb
inc
add
add
add
sbbl
push
mov
xchg
mov
add
addr16
loopne
inc
cmpsb
add
or
cli
ja
pop
pop
pusha
or
add
int3
xor
nop
mov
add
or
add
lds
add
sahf
fistpl
loopne
and
add
xchg
cmpeqps
add
fwait
pop
fdivr
sub
add
mov
mov
add
mov
add
lahf
outsb
jns
pop
stc
mov
push
inc
loop
mov
ficompl
inc
add
add
cld
ljmp
icebp
stos
add
pop
push
add
add
xchg
loop
pop
addb
dec
xor
jae
and
hlt
js
int
add
dec
inc
arpl
hlt
and
add
in
fadds
xchg
mov
dec
inc
addb
sbb
xor
imul
cmc
enter
pop
xor
les
fs
inc
dec
negb
loope
cltd
mov
push
enter
stc
or
add
js
addr16
inc
subl
roll
aaa
and
add
add
mov
add
jecxz
add
int
inc
xchg
mov
add
add
sub
add
pushf
dec
filds
jmp
add
xlat
sub
add
add
loope
sbb
iret
cmp
push
lods
repnz
add
sbb
add
clc
mov
in
add
jns
cltd
in
pop
push
stc
imul
mov
add
adc
mov
xor
cmp
push
add
xchg
push
stc
xor
hlt
jns
fdivrp
aas
jns
add
jbe
ja,pt
mov
stos
add
mov
add
cli
jns
dec
jmp
aaa
in
sti
cmpsl
ret
loope
jb
dec
push
movsl
aam
add
inc
mov
sbb
or
add
add
icebp
cltd
int3
fwait
aaa
add
xor
add
sbb
hlt
pushf
cwtl
pop
neg
mov
xchg
mov
add
inc
jle
jge
into
mov
adc
nop
push
push
les
mov
dec
testl
add
inc
add
add
push
fmulp
jp
and
add
lret
sub
ret
in
in
testl
lods
add
cmpsb
add
into
adc
add
lods
sbb
dec
pop
fwait
movsl
xchg
cmp
loop
xchg
shl
add
insb
in
fistpl
lock
mov
lods
mov
add
inc
and
pop
xchg
cmp
dec
movsb
add
shl
cwtl
add
lods
add
push
lret
js
cld
and
add
aam
lods
add
and
add
cwtl
cmpsb
add
in
inc
popa
scas
mov
add
mov
add
outsl
push
mov
dec
mov
add
int3
imul
fwait
add
repnz
ljmp
dec
negb
xor
sbb
fdivrs
add
or
add
jno
mov
fwait
push
ret
out
add
jmp
add
sbb
popa
daa
mov
pop
lds
enter
add
stc
ret
movsl
hlt
mov
mov
loop
xor
outsb
xchg
leave
inc
add
aad
adcl
lock
add
add
nop
pop
and
add
add
adc
push
je
dec
add
add
jns
add
mov
mov
push
inc
cmp
or
sub
add
inc
mov
xor
mov
pop
pop
mov
or
add
ret
or
add
aad
pop
pop
shrb
xchg
inc
je
repnz
mov
fsts
add
cli
icebp
aad
add
fisubrs
add
xchg
lea
add
adc
sub
add
dec
in
dec
cmc
scas
add
lods
add
sub
add
pop
pop
insl
loopne
jp
scas
push
mov
scas
add
mov
mov
jo
dec
add
add
shl
hlt
mov
add
sti
jmp
inc
enter
adc
cmp
jp
adc
add
xlat
roll
add
inc
xlat
ret
inc
push
inc
pop
pop
dec
popa
test
addr16
add
add
inc
jne
adc
add
jl
inc
add
add
and
add
je
push
pop
pop
insl
rclb
push
mov
add
sbb
outsl
lods
add
out
add
jb
aaa
mov
sar
int
je
sbb
decl
jl
inc
ds
sbb
mov
add
mov
inc
cmpsb
add
clc
cmp
arpl
inc
or
add
sub
add
add
add
adc
dec
mov
je
rorl
add
push
add
jno
repnz
add
or
repnz
adc
fstps
push
cli
jmp
xchg
add
shll
cmc
out
push
mov
add
data16
les
mov
add
or
add
sub
add
insb
hlt
pop
stc
fisttps
fwait
stc
or
add
add
idivl
outsb
dec
mov
sbb
adc
add
lock
stos
mov
add
pop
fldcw
cwtl
jae
push
mov
pop
xchg
push
add
cld
dec
addb
adc
cmp
add
test
add
or
add
add
cmp
push
or
lods
mov
imul
mov
cmc
bound
mov
add
add
test
adc
inc
clc
loopne
push
xchg
sub
add
popa
add
add
pop
shrl
add
dec
or
add
dec
pop
pop
push
sbb
std
push
mov
nop
and
xchg
shrl
sub
add
notl
rcll
fisubs
xor
mov
inc
mov
add
xchg
push
test
mov
mov
dec
xor
pop
add
into
daa
jb
sti
in
pop
jp
cmp
cli
jle
mov
jg
pop
lea
jnp
and
add
sahf
mov
jns
add
mov
add
mov
pop
lods
add
jne
pop
xor
add
xor
add
sbb
ret
fistps
and
add
add
cltd
test
dec
adc
add
mov
add
jl
dec
lcall
add
loop
mov
lods
or
jnp
pop
lret
outsl
sbb
adc
sub
add
jae
cmp
insb
cli
std
mov
repnz
and
sar
add
add
sbb
push
push
sbb
mov
or
xchg
cmp
add
mov
pop
or
add
out
jnp
add
aad
push
push
mov
jns
scas
dec
rol
push
and
add
xor
and
add
call
add
add
jmp
movsl
lds
mov
fisubl
cmp
fists
cmp
fs
lret
sbbl
or
add
shlb
add
jg
stc
mov
mov
jmp
lahf
lods
pop
sarb
add
ja
shll
inc
mov
ds
cmc
and
loop
ss
pushf
add
add
aas
jmp
cwtl
sbb
pop
mov
add
mov
jbe
fwait
or
lods
add
aas
ret
add
cmp
lret
lret
dec
fistps
and
add
inc
inc
lret
into
aam
ss
adc
jg
mov
scas
loopne
pushf
test
add
mov
shl
xchg
nop
pop
mov
hlt
ret
xchg
xchg
sti
mov
into
fabs
aad
add
pop
sbb
into
fimuls
pop
gs
int
add
int
int
add
push
dec
scas
add
mov
cli
les
add
das
fs
mov
add
add
pop
fdivrp
inc
add
add
stc
dec
mov
nop
xchg
clc
jmp
dec
jmp
mov
jns
gs
stos
add
mov
mov
sbb
rcl
add
daa
jne
imul
mov
cmp
test
add
mov
insl
pop
aaa
cltd
jno,pt
sbb
mul
mov
adc
adcl
jns
mov
dec
ja
and
cmp
cmpsl
adc
insb
cwtl
adc
jg
add
add
jecxz
or
add
sbb
add
cmp
pop
add
cmpl
cld
pusha
lret
cmpsl
sub
add
add
aaa
push
pushf
and
add
pushf
xor
test
and
add
out
test
add
in
cmp
xchg
lock
pop
call
push
std
ja
sub
add
add
push
test
add
scas
add
adc
jne
inc
xlat
mov
mov
jecxz
fmull
fcoml
lea
cmc
sbb
push
ja
sub
add
mov
xor
jns
add
stos
add
push
add
sbb
add
add
add
push
add
push
or
add
insb
pop
push
cltd
jle
add
jne
aam
add
sub
add
mov
sub
add
add
into
jne
pop
push
and
outsb
dec
dec
arpl
das
test
and
cltd
sub
imul
adc
pop
pop
mov
add
xchg
ja
mov
jnp
xchg
add
inc
stos
or
add
movsb
add
cld
adc
add
add
fwait
jae
xlat
mov
fxch
imul
fs
popf
sbb
add
cwtl
scas
inc
adc
dec
add
repz
push
pop
xchg
add
fldl
mov
add
addb
mov
add
sub
in
add
xor
dec
xor
add
mov
nop
mov
stos
add
outsb
sbb
sub
add
and
add
add
ror
bound
daa
arpl
xchg
aam
insl
bound
add
stos
add
std
mov
mov
xchg
mov
les
fmulp
test
lds
add
cld
enter
add
adc
ret
int3
adc
jle
int
loopne
mov
add
pop
shll
loop
lcall
ljmp
sub
add
imull
dec
jb
xor
add
push
mov
jns
aas
dec
cmp
popf
jb
jg
jne
das
cmp
mov
cmp
inc
dec
xchg
and
add
adc
adc
add
cltd
mov
lds
dec
cld
pusha
and
add
insl
xor
ret
inc
mov
pop
pop
sahf
lds
pop
cmp
mov
add
mov
fs
adc
pop
xor
fwait
pop
hlt
test
mov
and
add
inc
mov
cmp
mov
fstpt
jo
jo
mov
int3
scas
add
or
jnp
or
add
std
cmp
mov
push
xlat
mov
xchg
jb
flds
add
lret
addl
inc
add
jne
movsl
adc
mov
xor
add
dec
shlb
add
les
xchg
add
add
mov
sub
add
sbb
leave
inc
pop
out
mov
outsb
add
mov
adc
aas
idivb
add
mov
add
jae
push
xchg
add
add
add
mov
dec
push
andl
push
ret
mov
sub
mov
add
mov
mov
pop
ret
test
jns
or
add
ljmp
cld
dec
sub
add
andl
adc
add
jns
add
push
add
sti
aaa
adc
lcall
add
add
add
add
add
add
test
add
add
add
data16
add
mov
mov
push
xchg
push
add
cmp
in
mov
push
push
cmpsl
pop
movsb
add
sbb
addl
pop
mov
fs
add
icebp
sbb
jnp
bound
bound
push
pop
popa
hlt
mov
push
jae
sbb
imul
jmp
aaa
aas
mov
add
ds
adc
fbld
push
mov
mov
mov
add
icebp
mov
inc
shlb
add
xchg
jnp
add
icebp
stos
add
fsts
add
mov
push
mov
sbb
sbb
sahf
cmc
loop
out
add
repz
add
pop
jmp
sub
xlat
jmp
add
xchg
xchg
or
add
ret
ds
pop
cmp
insb
mov
mov
xchg
out
mov
add
hlt
cmpsb
add
and
xchg
jnp
add
inc
xor
inc
pop
dec
xchg
add
add
in
sti
imul
mov
cli
xor
mov
add
bound
or
std
xor
repz
in
add
ret
sub
pop
nop
cmpl
pop
xor
xor
fstps
cmp
into
mov
add
add
enter
inc
adc
mov
jmp
cmpsb
add
sbb
add
out
ss
add
xchg
lods
add
inc
add
add
roll
pusha
inc
call
jb
jbe
add
icebp
add
data16
sti
mov
jns
cwtl
push
mov
adc
scas
add
testb
add
ret
adc
lret
jbe
mov
mov
add
cmp
or
add
mov
cmpsl
sarb
xor
sbb
push
add
fadds
mov
out
pop
and
add
aam
add
add
xor
rolb
popa
dec
pop
cmp
sub
adc
mov
add
rorb
ret
in
shrb
adc
dec
rorb
push
cmpsb
add
mov
ret
sbb
xchg
add
mulb
in
jo
outsb
mov
aaa
mov
push
shr
std
push
add
fs
xlat
jo
add
int
lahf
push
pop
lahf
jns
mov
pop
mov
fs
or
std
adcl
mov
jg
lea
xchg
add
or
pop
xor
add
mov
pop
shlb
dec
xor
pop
mov
mov
jo
shrl
add
movsl
mov
insb
out
lret
ja
and
add
push
lock
out
aad
inc
ljmp
cmc
push
mov
add
jne
int
cmp
or
add
add
loope
or
or
add
add
pop
push
add
add
jecxz
lret
push
cmp
call
nop
sbb
in
or
aaa
movsl
ret
xchg
add
popa
in
outsb
xchg
mov
add
add
sub
leave
addl
jne
and
add
xchg
outsb
out
les
in
cmc
lock
add
aam
xchg
mov
xchg
iret
stos
add
fucomip
add
shlw
xor
sbb
je
pop
ja
xor
mov
stc
inc
add
rorb
cld
mov
fs
cmpsb
add
add
add
addb
ljmp
add
ficoml
sbb
add
push
xor
int
ret
leave
ja
add
lea
xchg
inc
adc
outsb
mov
add
adc
xor
fistpll
aaa
push
in
add
add
fwait
jae
sbb
pop
fsts
add
mov
lcall
xchg
insb
mov
add
repnz
jmp
xor
add
sarl
pop
cli
mov
add
outsb
jbe
in
xchg
dec
jg
add
cmp
jno
mov
shl
clc
aas
fs
adc
jmp
roll
push
xchg
push
add
addb
insl
lea
add
push
mov
loop
mov
inc
jl
movsb
add
inc
or
imul
push
stos
add
mov
add
sbb
dec
addl
mov
add
test
fnsave
pop
incb
push
insb
xor
jne
pusha
adc
add
jb
sub
add
xlat
inc
scas
jp
sbb
mov
add
pop
scas
add
mov
add
jge
icebp
xor
shl
ret
add
scas
inc
jp
add
ret
mov
movsb
add
mov
push
jno
loopne,pt
out
adc
fsubl
cmp
lcall
jp
push
add
jmp
add
xchg
mov
or
add
or
mov
add
fstps
sbb
iret
jbe
insb
ret
loope
push
add
mulb
add
pop
pop
inc
push
add
pop
shlb
scas
add
xchg
or
add
mov
js
jle
outsl
push
add
jbe
les
add
insb
aaa
pop
mov
adc
add
add
mov
shl
xchg
push
cld
pop
das
mov
sub
xlat
inc
cmp
add
add
adc
pop
inc
int3
les
sub
add
negl
xlat
jbe
jo
or
add
sub
imul
enter
lods
cmp
int3
lea
lods
dec
cmp
xchg
fldcw
adc
add
sbb
lret
jge
pop
dec
pusha
in
cmp
in
jno
mov
xchg
mov
gs
and
in
xor
movsl
pop
lret
xchg
pushf
jb
mov
imul
push
add
dec
xchg
mov
add
inc
jno
test
add
pusha
xchg
inc
test
xor
adc
pop
xchg
jle
shlb
pop
mov
in
xor
lcall
xor
js
shll
arpl
in
add
mov
cmpsl
imul
in
jo
aam
pop
shrb
add
enter
cmp
jbe
dec
mov
arpl
movsb
add
stc
mov
add
add
pop
xchg
and
add
add
add
repnz
aad
xchg
pop
adc
lea
jp
add
add
idivl
xor
fidivrs
push
aam
xchg
mov
xor
sbb
inc
hlt
cmp
mov
mov
cmp
aaa
imul
add
jbe
pop
pusha
lds
dec
add
test
add
lahf
pop
arpl
out
add
jg
jecxz
xor
cli
lahf
push
mov
inc
shlb
dec
inc
mov
add
xlat
cmp
sub
add
mov
add
and
add
xlat
pop
pop
and
shll
stos
xchg
add
ljmp
add
add
mov
add
pop
jo
xor
jns
add
add
lcall
loopne
add
push
jp
jae
adc
add
out
scas
sub
add
orl
clc
or
add
xor
test
add
xorl
push
or
add
rorb
add
mov
add
and
add
cmpsb
add
pop
add
add
and
add
xor
add
push
cmc
jbe
adc
adc
add
xchg
cmpsb
add
jecxz
jg
push
push
rcll
hlt
das
scas
add
xor
imul
test
jecxz
cltd
in
mov
clc
out
add
xchg
adc
js
add
add
fwait
sub
add
lds
pop
xor
pop
gs
out
xchg
xchg
xchg
jnp
call
mov
add
jno
add
repz
data16
insl
insb
xor
push
aam
adc
gs
add
push
add
or
inc
stos
add
or
in
mov
sub
add
mov
add
test
and
add
push
add
cmp
dec
dec
test
add
inc
cmp
xchg
push
pop
add
add
jb
fsubrs
das
inc
adc
lods
fucomp
xchg
test
add
add
mov
add
int
mov
adc
add
orl
add
pop
mov
add
push
enter
cmp
mov
fcompl
or
lret
arpl
ljmp
and
add
inc
push
or
outsl
lret
wbinvd
mov
pop
insb
mov
xchg
add
add
add
jl
mov
outsl
cwtl
jne
decl
add
outsl
in
shlb
mov
add
sub
or
add
scas
mov
add
das
xor
inc
mov
add
push
add
mov
add
test
mov
add
jecxz
jnp
inc
stos
push
add
add
add
dec
das
hlt
mov
js
pop
sub
add
and
add
test
add
lret
mov
fisubrl
fmuls
mov
inc
jl
push
pop
scas
add
add
sub
add
pusha
gs
and
add
int
sahf
add
pop
mov
jle
add
cmpsb
add
xor
adc
add
or
add
jno
lea
add
push
cli
fs
arpl
xor
add
addb
addl
add
adc
insl
jmp
push
lcall
add
or
and
lcall
xor
add
lds
je
call
add
ret
push
lds
push
inc
nop
pop
push
loop
add
in
sarl
cmovp
jp
sub
add
push
sbb
pushf
and
add
lcall
add
mov
add
fists
clc
int3
popf
or
add
imul
test
mov
add
add
dec
adc
movsl
in
mov
add
add
cmp
add
cmp
pop
xor
mov
add
mov
add
sbb
and
in
lods
jge
mov
loope
test
out
mov
add
add
mov
addl
aas
or
add
inc
out
lahf
inc
out
out
insb
push
outsb
mov
add
js
add
and
add
add
add
dec
aas
mov
add
sahf
jecxz
xor
popa
test
add
popf
fcos
jb
lret
xchg
add
out
inc
mov
in
adc
xor
add
jne
inc
jnp
pop
pusha
test
int
hlt
outsl
daa
insb
nop
xor
icebp
push
add
or
add
fcompl
cmp
add
xor
add
lods
je
and
xchg
ja
movsl
xor
add
push
das
addb
mov
push
sub
push
cmp
xor
or
add
add
lcall
push
cwtl
out
mov
add
and
add
sub
add
add
pop
gs
add
push
arpl
add
clc
sbb
pop
dec
dec
or
add
stc
ret
int
scas
test
pop
sub
add
aad
sbb
mul
mov
jo
jno
add
add
not
mov
xchg
add
xchg
inc
stos
add
xchg
leave
or
add
mov
jmp
cmp
shlb
xchg
add
inc
cmpsb
add
das
fcomi
sbb
mov
lods
add
inc
test
add
in
xor
add
lret
add
xchg
mov
mov
add
dec
inc
stc
int
movsb
add
cmp
add
lds
sub
mov
add
add
mov
add
je
xlat
or
xlat
pop
push
add
mov
je
lahf
popf
lret
shr
insb
into
arpl
loopne
jge
addb
daa
rol
rcr
mov
push
add
jmp
dec
mov
cmpsb
add
pop
hlt
pusha
xor
add
mov
fwait
sub
add
cmp
adc
sbb
out
stc
jmp
in
test
shlb
fisttpll
add
arpl
inc
hlt
mov
sbb
inc
xchg
pop
mov
inc
scas
add
les
icebp
mov
push
inc
imul
lods
add
or
add
add
add
xchg
xchg
insl
enter
add
insb
mov
lods
insl
mov
jmp
in
jb
cmc
add
in
xor
dec
out
arpl
inc
pop
pushf
lods
add
fdivs
mov
mov
add
inc
test
mov
rcrl
inc
push
icebp
xchg
andl
or
add
mov
aam
add
data16
jae
popf
jge
mov
movsb
add
sbb
or
inc
int3
add
dec
mov
add
dec
and
stos
add
and
lds
or
pop
into
add
and
add
jmp
or
add
hlt
push
and
add
jo
sahf
enter
jle
dec
rol
iret
mov
add
add
add
push
in
xchg
ss
and
add
add
add
add
das
ror
or
add
leave
int3
jle
sbb
add
dec
cld
add
pop
arpl
add
cld
cmc
sbb
inc
fsubrl
add
jl
sbb
sbb
and
add
sahf
sub
add
add
test
add
dec
inc
xor
loopne
add
jmp
push
mov
add
dec
mov
add
mov
xchg
cmp
hlt
adc
add
add
lock
sbb
add
adc
test
inc
inc
in
and
jl
mov
add
add
jo
ljmp
and
add
add
pop
mov
xchg
add
sbb
data16
popa
sbb
hlt
icebp
jno
sub
add
jns
fdivl
fs
daa
insl
adc
ss
xor
sub
add
aam
adc
mov
jns
ja
add
rorb
add
sbb
add
shr
lea
shrl
aaa
sub
lcall
test
adc
inc
aad
mull
lods
sub
enter
les
sbb
xlat
xchg
icebp
jecxz
push
xor
ret
inc
ja
sub
add
aad
push
sub
add
ret
sub
add
dec
cmp
inc
jmp
cwtl
lock
fmulp
ret
add
js
ljmp
pop
fwait
adc
bnd
fsub
std
mov
sub
add
add
add
add
jg
mov
repnz
add
out
scas
add
mov
add
mov
mov
mov
add
add
pop
out
std
or
add
jns
fistl
out
popl
inc
jne
loop
add
leave
mov
add
add
testb
stos
add
outsl
and
add
add
out
bound
in
inc
gs
movsb
add
mov
add
pushf
mov
fistpl
lret
jl
mov
lea
in
add
mov
mov
add
lock
push
add
mov
xor
leave
rclb
pop
pop
adc
jmp
add
lods
mov
repnz
add
xchg
push
in
and
add
add
add
cmp
addb
pusha
sub
and
add
stc
sbb
sub
add
aad
pop
dec
imul
scas
add
xchg
mov
jae
add
loopne
xchg
jne
das
cltd
ss
or
dec
jmp
jns
cltd
push
inc
std
pusha
add
fstp
xor
into
fcomps
imul
mov
insl
bound
test
add
pushf
pusha
mov
rorl
add
cmpl
xlat
xchg
fcomp
mov
mov
add
insb
pop
mov
add
addl
jl
push
mov
pop
and
add
sbb
pop
ret
outsl
iret
nop
lods
add
lret
add
int3
popf
int
imul
repz
lock
shlb
push
js
push
movsl
mov
add
arpl
add
sbb
push
add
fwait
xor
inc
clc
xlat
jbe
mov
movsl
add
ja
jno
scas
add
add
cmpsl
je
sbb
mov
lock
jno
sbb
xchg
add
mov
cmp
fnstsw
cmp
sbb
das
flds
push
push
mov
cmpsl
into
jle
xchg
loopne
mov
and
add
mov
inc
addb
lods
shr
pop
fisttpl
sub
add
xor
add
decb
mov
add
add
jae
call
std
inc
andl
add
dec
sub
add
ja
pop
hlt
fcoml
test
add
jle
hlt
dec
pop
cwtl
pop
lds
dec
adc
jp
insb
inc
xor
adc
std
mov
fwait
cwtl
lret
xchg
pop
cmp
push
pop
int
mov
push
jns
add
inc
and
add
inc
mov
add
add
add
insb
jne
ficompl
cmp
add
cmp
sar
ja
push
pop
pop
fs
out
xor
aad
dec
jne
sbb
dec
fidivrs
pusha
pop
inc
inc
ret
add
mov
or
mov
add
jns
scas
or
pop
outsl
test
aas
inc
into
xchg
xor
add
dec
ja
daa
mov
nop
inc
or
add
add
add
loop
dec
dec
jns
mov
stos
mov
pop
sbb
add
dec
jp
lods
jnp
pop
andl
push
jge
push
dec
xchg
movsl
out
adc
pop
push
push
out
fnstsw
dec
push
jg
mov
icebp
adc
add
pusha
lods
add
ret
jg
xchg
add
xor
negl
add
frstor
sbb
mov
add
lret
arpl
xor
sub
xor
fwait
mov
into
pop
pop
dec
in
dec
pop
aad
dec
scas
aas
stos
jmp
or
add
xor
pop
cmp
pusha
outsb
jbe
sub
or
je
pushf
mov
jecxz
jbe
dec
lcall
js
add
add
je
sbb
lds
ja
add
jmp
add
cmpsl
mov
adc
dec
fiaddl
shufps
roll
and
mov
add
mov
add
add
mov
test
movl
add
movsl
pop
stc
cld
mov
sbb
jecxz
and
mov
add
xor
mov
add
xor
mov
add
push
cmp
js
js
out
mov
cmp
cmp
xchg
sti
fdivrs
movsl
out
xchg
sub
add
dec
sbb
xor
inc
pop
lods
add
ret
hlt
nop
fbstp
mov
lret
stc
les
add
add
add
and
add
sub
add
xchg
and
push
fisttpl
shll
stc
inc
insl
ss
insb
rclb
mul
mov
std
dec
cli
lods
add
adc
add
fidivl
in
xlat
or
add
mulb
sub
add
inc
fnstsw
and
adc
cbtw
or
add
shr
repz
add
push
sub
add
jmp
or
cmp
cmpsb
add
mov
out
shrl
dec
cmpl
add
cmp
fwait
cwtl
sbb
lock
inc
fdivr
ja
jge
test
out
dec
mov
add
insl
jno
jns
sub
add
inc
jnp
pop
add
add
pop
dec
cmp
ljmp
add
xchg
and
rorl
shlb
in
out
fs
sub
add
pop
in
enter
dec
cmp
pop
in
jae
push
loopne
cmp
sub
add
add
call
xchg
add
sub
push
inc
mov
dec
cmpsb
add
sti
sub
add
sub
add
sbb
and
add
add
in
xchg
bound
movb
add
mov
add
addb
int
jae
aad
aam
push
fs
add
fnstcw
xor
icebp
in
pop
or
dec
loop
add
xor
dec
in
push
addr16
cmpl
add
out
and
ret
add
and
add
and
xorl
lret
lods
add
jb
adc
lahf
sub
add
inc
jecxz
lea
xchg
push
jle
add
jno
add
fsubrp
xchg
add
add
add
into
loopne
add
stos
push
dec
or
add
in
adc
sahf
xor
test
inc
shll
add
sub
add
out
out
mov
xlat
pop
xor
mov
mov
add
je
mov
add
add
add
sbb
jg
add
out
xlat
or
add
jecxz
add
or
add
jno
add
lret
add
xchg
mov
add
stos
add
pusha
jle
in
cmc
std
push
les
jp
out
xor
jno
dec
aam
test
cmp
add
mov
add
cwtl
push
sbb
lods
or
add
loop
dec
inc
sbb
sbb
push
stc
mov
add
imul
mov
add
add
cmpsl
jae
add
mov
in
add
add
movl
pop
mov
addr16
cmp
fst
dec
or
add
or
add
addb
sub
dec
insb
mov
add
add
out
out
dec
imul
mov
add
dec
insb
mov
add
mov
mov
mov
mov
add
add
add
dec
inc
fbld
repz
daa
enter
jns
bound
mov
sbb
add
add
cmpsl
ja
leave
xor
lock
mov
decl
adc
fstps
aad
cmp
xchg
mov
ljmp
add
cmc
add
add
jne
pslld
push
inc
loope
xor
add
add
mov
add
and
add
jle
insb
mov
add
data16
add
js
loopne
dec
add
add
pop
lcall
shrl
add
imul
lahf
shll
movsb
add
add
add
dec
xor
lret
sbb
xchg
dec
ja
stc
push
add
and
add
mov
add
mov
add
add
enter
add
orl
add
aaa
loop
pop
js
stos
pop
ret
pop
insl
add
dec
pop
sub
mov
jb
inc
daa
test
add
sbb
sub
add
or
add
and
add
std
jnp
scas
inc
sub
add
out
pop
cmp
sub
add
jle
cmpsb
add
mov
add
frstor
arpl
dec
fcoml
jb
xchg
push
fsub
inc
dec
inc
data16
mov
add
push
pop
mov
add
add
fistps
popa
mov
or
imul
mov
mov
stos
add
sti
pop
iret
sbb
push
lods
add
in
xchg
test
add
inc
xor
div
pop
xchg
dec
mov
add
pop
notl
mov
add
mov
jae
add
int3
mov
add
add
inc
pop
test
add
cmpsl
push
cmc
lahf
jb
inc
dec
add
inc
int3
cmp
jb
add
adc
call
add
pop
add
jle
lods
add
les
add
dec
in
addb
test
add
mov
rcrl
cmp
leave
mov
add
loop
sahf
jg
shl
mov
rorl
or
icebp
pusha
xchg
repnz
invlpg
nop
xor
loop
add
iret
adc
test
add
int
addb
jge
sub
add
data16
js
shlb
mov
or
add
add
add
lea
mov
cmp
xchg
pop
xor
xchg
mov
mov
add
add
xchg
idiv
cmpsb
add
sbb
cmp
xchg
jns
and
add
add
adc
add
adc
add
add
les
test
add
jmp
fisttps
in
enter
repz
jg
push
add
lret
jae
push
xor
stos
mov
jo
mov
add
add
test
pop
adc
add
hlt
cmp
imul
add
pop
in
or
add
and
mov
call
dec
in
sub
add
scas
sbb
xchg
add
cmp
or
add
add
movsl
pop
ljmp
add
lahf
mov
add
leave
in
pushl
inc
fs
cmp
pop
sub
add
aad
push
push
frstor
add
jbe
aaa
pop
push
pop
cmp
sub
add
adc
adc
add
clc
xor
add
xchg
lret
add
adcl
cwtl
sbb
add
cmpsl
pop
repz
sbb
jmp
add
stos
decb
cmp
add
mov
cmp
add
inc
mov
push
rcrb
mov
add
sbb
fisubl
adc
test
add
pop
sbb
add
ret
xor
call
add
fmul
repz
movsb
add
xlat
xchg
mov
dec
shl
iret
sub
lret
mov
add
sub
add
ja
mov
add
repz
in
add
lods
push
cmpsb
add
inc
cmpsb
add
scas
add
testl
add
dec
les
fsubs
add
xor
add
roll
sub
add
pushf
call
add
xlat
call
add
dec
sahf
xor
sub
add
add
cmpsb
add
pusha
jo
and
and
add
add
sbb
mov
add
add
mov
mov
sbb
jns
mov
call
xchg
add
or
push
in
push
or
add
pushf
ja
sub
sti
loopne
add
adc
sub
pusha
dec
mov
jb
mov
test
repz
add
pop
ja
add
xor
adc
dec
push
sbb
pop
inc
mov
add
cld
inc
stc
mov
pop
scas
add
jb
dec
sub
add
shl
jecxz
add
addb
int3
lods
add
out
jg
sbb
jo
addb
dec
mov
add
mov
adc
jmp
movsb
add
ljmp
adc
in
add
fsin
ret
mov
test
add
xor
xorl
jmp
outsb
inc
clc
das
fdiv
adc
inc
jnp
add
pop
cmp
pushf
xchg
int
out
sbb
mov
das
push
enter
ljmp
add
add
sahf
or
add
mov
in
jns
popa
push
add
lea
sbb
push
pop
out
or
cld
dec
jmp
pushl
add
sub
xchg
inc
test
add
push
lods
add
and
sbbl
add
jns
jge
or
add
popf
sbb
add
cmpl
sbb
lahf
jbe
sbb
aaa
pop
scas
add
jp
push
sub
add
jmp
add
mov
add
outsl
sub
add
jmp
jle
out
imul
gs
or
pop
out
fisubrl
jge
test
add
mov
add
out
ss
fidivl
in
xor
pop
sub
inc
lock
xchg
clc
in
std
and
push
add
push
add
add
ja
jp
xlat
dec
xor
jmp
cld
movsl
fcompl
into
nopl
dec
cmp
and
add
hlt
mov
add
push
or
add
add
pop
mov
mov
cmp
shrb
add
add
add
mov
aas
xor
add
add
add
cli
mov
cmp
mov
add
add
push
dec
push
add
cmp
adc
add
gs
push
sub
cli
lcall
jbe
adcl
xchg
jne
lahf
movsl
push
mov
add
icebp
repz
movsl
cmp
aad
pushl
sbb
push
add
add
add
out
cmp
xchg
lahf
stos
add
aas
outsl
jp
add
enter
push
inc
push
stc
scas
add
jecxz
or
add
ljmp
add
jmp
inc
push
add
add
jle
cmp
xor
add
sbb
or
pop
inc
adc
add
mov
je
out
sub
test
cli
cmpsl
add
in
bound
push
iret
pop
and
lret
push
je
int
test
add
xor
js
and
mov
ljmp
push
add
jae
jbe
jbe
or
add
add
mov
hlt
rcrb
xor
js
outsl
jns
scas
pop
add
xchg
shlb
jecxz
sub
mov
arpl
add
das
mov
xor
shll
sub
add
inc
jg
dec
mov
daa
fdivl
scas
add
std
mov
sub
add
ror
fadds
sti
jo
inc
addb
push
xor
shlb
stos
add
xor
pop
xchg
flds
add
fwait
add
add
outsb
jns
push
idivl
cmc
xor
aam
pop
fidivs
add
dec
or
add
xor
or
cmp
inc
lds
add
add
mov
add
add
popa
movsw
inc
fildll
shl
pop
mov
dec
pushf
inc
xchg
and
add
loopne
xchg
xchg
aaa
dec
add
add
add
daa
pop
jg
add
ss
push
outsb
push
push
add
add
add
das
inc
dec
cmp
out
out
loope
or
add
push
in
mov
add
arpl
dec
sbb
jb
fs
rcl
leave
push
adc
mov
mov
add
lods
jnp
mov
hlt
dec
jg
dec
stc
xlat
xor
sub
add
shrd
push
xchg
lods
add
jb
lods
add
sbb
pop
adcl
xchg
add
add
add
jb
outsl
pop
pop
pop
push
mov
add
pop
push
mov
stos
add
cmp
mov
add
add
aaa
nop
fwait
dec
or
add
lcall
fcompl
mov
in
and
shr
enter
pop
out
ficompl
lahf
scas
sbb
mov
loop
clc
cmpsb
add
adc
out
or
add
jge
hlt
sub
add
addb
dec
bound
cmc
add
mov
mov
test
add
mov
scas
lods
add
jb
xchg
leave
jnp
mov
sbb
sub
push
sub
add
sbb
jns
inc
pop
mov
insb
jne
dec
push
loop
les
push
adc
aam
clc
inc
mov
out
aaa
aaa
jg
pop
mov
add
enter
inc
add
xchg
push
std
aaa
add
add
dec
lretw
xchg
add
xor
mov
in
test
add
repz
adc
cmc
jne
or
add
in
ret
mov
mov
rolb
push
jp
inc
dec
insb
aam
cmp
adc
xchg
notl
dec
loopne
jnp
inc
ffree
rolb
add
in
xchg
loopne
dec
dec
dec
sahf
cmp
inc
inc
lret
pop
pop
mov
add
jge
stc
sub
ss
adc
add
add
addr16
aad
or
add
push
cld
jg
add
push
insb
or
add
push
aas
xchg
add
mov
lret
mov
test
movsl
cmp
xlat
ds
add
imul
xor
add
mov
addb
lock
outsb
test
add
cmp
add
add
add
jmp
bswap
xchg
cmp
add
or
push
popf
add
je
js
pop
xchg
pop
fdivrl
das
in
rcll
add
imul
dec
cwtl
adc
xchg
call
mov
fsts
jp
stos
add
std
iret
or
add
add
scas
add
mov
jb
pop
add
cmc
mov
das
iret
js
leave
jmp
pop
jno
and
aad
and
mov
movsl
jg
outsb
ljmp
or
add
add
enter
pop
popa
and
add
add
add
std
adc
add
mov
pop
adc
xlat
adc
sbb
sub
add
jo
ja
sbb
mov
sub
add
pop
fsubr
cwtl
fisubl
add
or
add
mov
jns
ja
jno
inc
hlt
jns
push
dec
xlat
sbb
add
pop
shll
lret
int
cmp
jae
pop
pop
jnp
mov
push
jmp
add
lods
jnp
push
stos
add
xlat
add
add
xchg
inc
jp
push
and
add
std
push
rolb
cmp
les
add
add
inc
cmpsl
je
add
fwait
or
add
push
das
or
mov
fsubl
add
out
lcall
xchg
ficompl
push
int3
or
int
add
in
data16
pushl
pusha
mov
call
loope
popf
gs
xchg
push
mov
and
loop
push
push
dec
shll
pop
mov
xchg
subl
mov
movsb
add
xor
icebp
rorb
add
jg
mov
add
xlat
or
add
loopne
add
jge
or
stc
mov
add
adc
scas
add
inc
xor
and
add
add
xchg
mov
add
aam
push
mov
dec
jecxz
lods
add
sbb
sbb
adcl
pop
or
jno
xchg
lds
add
add
inc
sti
fisubs
add
add
mov
xlat
repz
xor
roll
jns
jns
fldt
sbb
mov
add
fists
popf
push
out
push
rorl
add
add
add
mov
popa
mov
je
and
add
push
cld
jb
out
out
push
fistps
add
mov
add
lock
and
add
rcll
or
add
ljmp
push
add
test
or
add
std
jl
and
add
cltd
test
add
and
add
movsl
xchg
sbb
popf
mov
add
cmpl
enter
add
push
lock
jl
pop
add
mov
mov
cmp
rorl
add
stos
add
loop
add
push
aam
add
cmp
xchg
xor
mov
adc
or
add
xor
cmpsl
adc
adc
cmc
and
pop
fisubrl
add
add
sahf
add
add
lods
add
xchg
loop
in
mov
cld
jecxz
mov
pop
int
push
or
add
and
add
lret
xchg
daa
mov
sarl
stos
cmc
mov
addb
or
fs
lcall
mov
add
jae
inc
popf
mov
jne
xchg
rcrl
cmp
das
cmpsl
dec
push
xor
add
add
lock
add
inc
xchg
insl
jne
jae
lret
xchg
push
inc
and
dec
and
xchg
cmpsl
enter
add
push
scas
add
mov
add
jae
mov
dec
mov
fistpl
add
scas
or
add
push
addb
jnp
add
jae
adc
add
mov
shrl
add
mov
xor
add
sub
add
inc
inc
cmp
push
sahf
lea
ds
or
add
sub
in
push
insb
ljmp
add
shrl
sub
add
jne
push
das
xchg
xchg
mov
mov
imul
add
popf
adc
out
jge
dec
or
add
mov
add
add
mov
daa
inc
pop
addb
mov
ja
xor
aam
mov
sub
sbb
xchg
cmp
loop
add
push
pop
test
add
dec
add
add
cld
outsb
addb
push
loope
les
insl
pop
idiv
daa
dec
adcl
add
jns
fcoms
call
pop
inc
mov
shll
add
add
pusha
inc
mov
movsb
add
fwait
push
push
sbb
into
lret
add
in
pop
aam
loope
sub
lcall
cmpsb
add
mov
int3
aaa
sbb
pop
mov
in
outsl
in
sbb
out
cli
sti
push
add
fucomip
ljmp
add
jo
rclb
cmp
mov
sbb
inc
xor
add
movsb
add
add
add
enter
jle
jmp
dec
lods
divb
xchg
mov
adc
or
add
and
add
jo
sbb
cmp
xchg
mov
cmpsl
add
lods
xchg
out
xor
mov
jp
pop
lcall
push
add
dec
mov
mov
mov
add
out
addb
popa
and
add
xor
call
jae
mov
or
add
mov
xor
pop
or
les
inc
pushf
mov
add
and
add
pop
outsb
addr16
xor
push
stos
add
and
add
jae
push
cmc
std
aas
mov
push
adc
call
cmp
cmp
lock
lds
add
mov
imul
mov
inc
push
ret
iret
not
jnp
ret
cmp
jp
mov
add
add
add
add
xor
mov
adc
add
xchg
or
adc
add
je
jge
add
mov
add
cmp
add
iret
in
sub
push
add
cmp
jb
pop
out
push
push
add
mov
mov
or
add
outsl
push
fstpt
sub
add
cli
loopne
ret
add
inc
or
add
xor
mov
sub
add
add
lahf
movsb
add
lea
sub
addb
shrl
jae
add
addb
or
add
push
add
push
in
lret
in
sti
xchg
sub
add
add
push
pushl
mov
mov
js
ljmp
add
addb
sub
and
cmpl
repnz
pop
rcrb
sbb
xorl
add
pop
cmp
stos
jle
sbb
push
rorb
add
js
add
stos
pop
nop
in
push
add
cmp
in
test
cmp
sti
cld
add
add
mov
add
add
cmp
insl
in
test
push
add
addl
ret
nop
dec
jp
adc
and
push
iret
out
popa
mov
incb
add
mov
js
imul
xor
xchg
nop
mov
add
sub
pop
and
lods
sbb
push
pop
test
add
mov
push
mov
dec
out
out
mov
aaa
imul
mov
mov
loop
imul
add
sub
add
mov
add
addr16
add
jns
mov
add
jp
add
das
nop
add
dec
popa
cmp
cltd
lcall
push
add
pusha
fistps
mov
mov
mov
add
jo
mul
jmp
add
js
push
mov
mov
add
xlat
jl
sub
add
add
cli
addb
dec
add
add
addb
ret
shl
xchg
icebp
cmp
add
shlb
dec
jl
xlat
clc
mov
jp
add
mov
add
aas
ror
mov
xor
sub
add
add
push
fisubrl
sub
add
in
out
dec
cmpsl
mov
pop
loopne
add
lock
cmp
inc
add
dec
xlat
int3
mov
add
or
in
lret
add
mov
add
loop
xor
insb
cmp
fwait
sti
cmpsl
insb
push
mov
add
psllq
add
mov
or
add
push
add
add
pop
cmp
stc
adc
mov
push
sbb
ljmp
push
shr
out
xchg
inc
add
shl
mov
add
int3
adcl
add
inc
pop
gs
stos
add
inc
insb
rcll
out
fidivrs
pushl
roll
fcmovnbe
sbb
add
jp
pop
mov
sub
add
test
add
add
addr16
rcl
test
add
stos
add
xor
or
add
add
pop
push
dec
cmpsl
cmp
cmovno
fisubl
mov
add
jbe
addb
xorl
add
inc
pop
push
in
sub
add
sahf
int
test
add
add
dec
leave
cmp
add
xchg
or
add
sbb
add
add
jge
pop
sbb
sarl
gs
shr
loopne
and
add
add
jb
cmp
adc
add
inc
rol
sub
mov
add
xor
test
add
sarl
cmp
pop
lret
cltd
xchg
sbb
int3
jb
out
enter
mov
add
divl
call
out
adc
sub
add
sub
add
inc
pop
dec
lret
dec
pop
or
add
jb
cmp
xor
dec
ja
mov
sbb
cwtl
xor
pop
mov
add
add
lods
iret
pop
test
add
add
ja
mov
add
mov
repnz
add
jle
xor
sti
xchg
add
add
call
add
add
mov
xchg
clc
add
call
add
or
add
add
push
sub
hlt
inc
insl
sbb
jno
ljmp
dec
jecxz
fwait
lock
inc
sbb
mov
dec
or
add
push
add
out
in
jno
xchg
mov
idiv
out
cmp
and
add
xchg
push
add
cmp
pushf
rorb
mov
and
add
push
in
std
dec
in
jbe
add
pop
sbb
adc
dec
xor
mov
rdtsc
xchg
or
add
lahf
in
stos
add
jge
mov
sbb
fcoms
xor
je
lea
mov
add
adcl
add
pop
mov
add
mov
mov
pop
xor
repz
add
cmp
mov
add
add
jg
int
inc
pusha
insb
clc
rcrl
idivl
add
cwtl
out
xchg
jo
ret
add
pop
xchg
add
xchg
pushf
lock
sbb
add
add
clc
add
add
mov
addl
add
inc
jg
mov
icebp
push
push
enter
repnz
add
push
cmp
jae
jg
inc
push
sarb
cmp
push
or
jno
add
push
push
jmp
add
push
fistps
push
repnz
aas
cld
cli
iret
inc
imul
add
loopne
fisubrs
add
push
cld
mov
pop
and
add
lcall
cmp
and
or
xor
insl
sub
add
jle
arpl
add
clc
push
add
popa
stos
in
xchg
cmp
pop
sbb
pop
mov
add
sbb
add
add
loop
jne
add
jno
imul
add
pop
addb
sub
add
or
fdivrs
mov
add
add
or
add
pop
testb
or
add
sub
js
add
pusha
xchg
aam
mov
ret
mov
xchg
xor
jbe
jbe
mov
sbb
iret
ja
inc
std
gs
cmp
xchg
cmp
lock
add
lcall
enter
mov
add
add
fisttpll
pop
ds
dec
mov
add
lea
or
add
addl
inc
test
mov
faddl
add
sbbl
xor
ror
xor
movsb
add
inc
jnp
icebp
inc
or
jle
xchg
add
mov
add
push
mov
xchg
add
dec
pop
push
imul
push
fsubrl
cmp
das
pop
loop
jns
xor
pop
addb
xor
sub
into
inc
les
inc
popf
pop
inc
xor
mov
push
add
arpl
and
add
pop
mov
shll
das
add
jecxz
add
sbb
add
out
add
data16
inc
stc
scas
add
xchg
mov
pop
and
add
fsubrs
in
sti
in
into
mov
outsl
mov
sub
add
xchg
jle
movsl
fldt
scas
les
xchg
dec
inc
adc
out
addb
ret
and
pop
repnz
lahf
pushl
push
and
add
shlb
insb
scas
add
mov
add
sub
add
cmp
add
add
add
fsubrl
stos
test
outsb
insb
addb
out
push
in
push
dec
je
sbb
out
pop
pop
aas
imul
inc
lcall
mov
add
sub
add
jge
mov
add
or
add
imulb
add
nop
mov
add
add
add
mov
xchg
scas
mov
data16
pop
mov
mov
add
xchg
popa
lods
add
fwait
mov
test
scas
sbb
mov
add
dec
test
add
push
cmp
add
xchg
pextrw
jae,pt
add
xor
adc
push
xchg
stos
add
out
add
pop
iret
adc
dec
aaa
fstps
repz
lock
add
dec
das
outsl
sub
add
add
imul
pop
xchg
inc
insl
pop
adc
add
loop
inc
fcomps
mov
out
add
cmp
add
add
add
in
nop
loopne
add
mov
xchg
or
add
sbb
aam
add
xchg
divb
scas
add
in
jne
add
add
jecxz
ror
xor
or
add
xchg
ds
add
repnz
lea
ss
aam
add
aas
mov
jo
push
subl
add
ficompl
mull
mov
sti
and
add
sbb
sub
add
add
sub
das
inc
loop
dec
repz
push
nop
pop
jl
xchg
movsl
out
mov
sahf
lock
cmp
add
adc
nop
pop
lcall
lahf
sarl
mov
fwait
push
call
and
add
add
in
jmp
add
jbe
shll
add
add
pop
xor
add
pop
pop
sbb
lcall
or
add
loope
sbb
cli
addb
cltd
inc
cli
mov
inc
pop
pop
sti
mov
movb
fisttpll
xor
loop
scas
add
sbb
mov
out
js
out
jbe
jnp
add
hlt
add
mov
cmp
add
push
mov
add
jp
into
push
push
xchg
movb
add
mov
or
add
out
out
add
incb
add
cmp
test
dec
fsts
xchg
or
add
jle
cmpsl
adc
dec
and
add
insl
addl
js
shr
add
dec
stos
add
sbb
pop
sti
inc
mov
add
sub
add
movsb
add
inc
fisubs
cld
lret
enter
into
adc
fiaddl
addb
push
pusha
addb
cmp
add
loop
adc
adc
add
scas
decl
or
cmpsb
add
addb
sub
add
sub
add
std
push
xchg
push
push
push
lret
adc
jns
fcomip
js
out
loope
test
add
out
fwait
add
xchg
test
add
xor
xchg
push
add
ret
data16
sbb
adc
sbb
in
push
das
jecxz
xor
mov
ret
js
push
and
add
pushl
mov
xor
xchg
or
in
cmp
fisttpl
add
mov
add
aam
sahf
fistps
iret
adc
sub
add
mov
dec
or
add
and
add
add
add
inc
shrb
add
xchg
push
mov
std
jge
cmc
push
mov
fisttps
adc
add
aam
push
imul
sub
add
add
cmc
pusha
pushf
test
add
cmpsl
fildl
jg
daa
jge
pop
ds
mov
add
pop
mov
add
repnz
xor
xor
add
add
mov
add
cld
popa
aas
cmc
inc
stos
mov
or
lret
mov
icebp
insl
call
and
addb
out
sub
add
cmp
stos
add
mov
mov
jl
popf
and
add
popl
add
lods
out
add
ret
sbb
sub
add
adc
and
add
inc
leave
xor
gs
xchg
add
lret
push
add
in
or
in
dec
hlt
icebp
add
sbb
mov
add
xor
loop
loopne
arpl
pop
js
call
add
aam
inc
xor
rcrb
int3
out
push
mov
add
loop
push
add
or
or
sub
add
mov
add
add
and
add
fists
adc
mov
out
into
xchg
adc
jl
mov
cmpsb
add
lods
jg
imul
pop
popf
pushf
sahf
pop
adc
add
pop
out
adc
stc
lcall
addr16
leave
pop
mov
imul
add
or
add
mov
add
stos
gs
test
add
add
addb
xor
jae
mov
add
pop
pop
pop
shlb
scas
add
mov
add
add
push
fs
outsl
pop
loope
add
jle
push
add
in
and
add
shrb
mov
icebp
push
movsl
movsb
add
xchg
xchg
jp
pop
iret
aam
loopne
fldcw
add
add
adc
and
add
add
cld
xchg
stos
mov
add
addb
dec
dec
xor
add
jp
cltd
mov
add
sub
add
add
cmc
out
inc
fs
mov
scas
add
pop
and
xchg
pop
inc
lret
in
stos
add
mov
push
imul
addb
mov
add
scas
int3
inc
sub
ss
add
or
cmp
add
pushf
and
or
add
push
add
lods
add
in
mov
xor
cltd
xor
add
les
pusha
dec
arpl
imul
addb
push
add
push
test
push
add
in
add
xor
lock
addr16
inc
aad
testb
add
lcall
add
pop
inc
cmp
cmpsb
add
cmpsl
or
add
mov
inc
sarl
cmp
add
jecxz
or
add
negb
cmp
push
add
test
add
rcr
into
jns
jns
jbe
rcr
call
and
xchg
and
add
enter
aas
jne
in
daa
mov
sar
std
aam
add
ret
adcl
imul
bt
mov
or
xor
inc
leave
lods
add
rol
sbb
idiv
aad
adc
mov
stc
and
je
rorl
add
ret
jmp
mov
pop
fwait
cmp
mul
and
jnp
lods
sub
test
add
roll
jne
or
cmp
sbb
add
shrb
sbb
push
push
add
push
xchg
sbb
pop
test
test
lcall
add
dec
loop
flds
add
cwtl
movsb
add
gs
xor
into
push
add
outsb
jp
addb
and
add
inc
test
add
adc
add
imul
mov
add
add
xor
int3
push
jmp
out
cmp
add
adc
inc
jnp
cmpsb
add
out
jg
add
mov
and
add
movaps
mov
mov
add
push
add
ljmp
dec
push
gs
add
xchg
scas
inc
jne
dec
and
std
adc
push
add
jno
test
add
add
iret
or
add
ret
add
addb
out
xchg
pop
shll
add
add
shrl
mov
add
and
add
add
idivb
or
add
inc
mov
add
mov
add
mov
icebp
jns
jns
cli
popf
loopne
dec
lock
add
lret
mov
mov
hlt
mov
popf
push
mov
add
inc
jnp
fs
mov
jne
xchg
cwtl
dec
cmpsb
add
cmpl
ret
pop
sbb
les
add
fwait
mov
sbb
push
insb
clc
out
mov
inc
inc
je
jl
pusha
xlat
mov
aad
add
bound
or
inc
imul
cmp
cwtl
lret
clc
xlat
leave
sbb
mov
inc
fistpl
pop
arpl
adc
mov
mov
add
jle
int
xchg
mov
cmp
add
and
add
mov
std
cld
not
jbe
stos
add
incb
cmp
ljmp
xchg
into
rcrl
movsl
into
dec
push
sbb
add
add
or
add
push
arpl
jecxz
outsl
pop
les
add
in
arpl
jo
cltd
cmpsl
or
add
sarl
push
sbb
popf
hlt
mov
das
ffreep
xchg
sbb
lahf
fisttpll
push
dec
movsb
add
lods
add
adc
dec
push
mov
inc
out
add
add
in
jecxz
mov
add
adc
jbe
movsb
add
or
in
mov
and
add
hlt
jae
cmp
cmp
icebp
xchg
add
add
xor
movsl
cmpsb
add
stos
sarl
lret
add
and
add
xor
and
add
test
add
iret
nop
cltd
mov
imul
or
and
add
add
mov
adc
push
mov
pop
in
add
cmp
add
mov
add
neg
mov
add
bound
mov
call
in
adc
xchg
aad
outsl
push
add
cmp
xchg
xchg
mov
add
push
inc
in
icebp
int3
pop
xorl
das
loope
xchg
sarb
aad
xchg
mov
add
pop
nop
lret
add
outsb
dec
jecxz
out
mov
mov
je
sbb
ret
ja
sub
add
sub
add
or
sarl
add
fsts
push
xor
je
add
inc
dec
or
inc
insb
jo
add
xchg
bound
test
add
cmove
mov
xchg
insl
stos
mov
rclb
cmc
hlt
divb
lods
dec
shll
jb
push
incl
les
add
fsub
stos
add
sub
add
adc
or
add
jle
add
dec
mov
mov
jne
lret
mov
call
add
pusha
outsl
jp
mov
inc
sbb
bnd
bound
pop
add
adc
push
xchg
ljmp
out
add
fcmovu
pusha
and
push
add
andl
add
addb
inc
orl
jmp
add
jno
movsb
add
xchg
dec
arpl
loop
dec
lds
mov
add
js
and
cmpsl
sbb
inc
pop
dec
lods
add
fcmovnb
movsb
add
cmp
pop
sub
add
add
gs
test
add
push
lds
or
add
cmp
out
adc
xchg
in
add
enter
movb
add
add
ret
adc
cltd
add
add
pushf
inc
icebp
call
push
jns
hlt
sub
cmp
fstp
aaa
fisubrl
adc
pop
call
adc
fs
add
pop
mov
fldenv
jne
add
insl
pushf
sbb
inc
and
add
jp
xor
outsl
cmc
and
leave
adc
jo
add
lds
adc
xor
adc
jmp
popf
cli
mov
outsb
hlt
pop
xor
jnp
adc
jecxz
gs
call
aaa
shl
xchg
js
cli
test
add
adc
sub
add
cmc
jmp
mov
inc
mov
pop
mov
pop
loope
dec
pop
xlat
dec
push
lock
shlb
mov
loop
out
movsl
sub
sub
add
add
mov
add
add
cmp
jne
add
sbb
and
add
dec
sbb
das
mov
push
add
xor
and
sub
add
push
jbe
add
icebp
jns
hlt
adc
push
cmp
push
clc
xorps
insl
out
pop
push
add
mov
add
movsl
dec
adc
xor
pop
mov
add
test
add
lcall
mov
push
add
xor
adc
lock
add
sub
imul
jl
sbb
cmp
into
divl
sub
add
ficompl
lods
mov
lods
mov
add
enter
add
iret
fidivrs
sarl
add
xchg
ret
repz
lret
aad
push
sub
add
add
sbb
add
xchg
mov
add
in
stos
add
cli
sbb
inc
cmp
scas
lods
add
and
add
gs
xor
mov
or
jae
mov
add
mov
add
ljmp
loopne
pushf
iret
adc
imul
add
add
pushw
stos
add
mov
add
sbb
xor
push
add
add
xchg
and
add
or
lods
ficoms
mov
add
mov
ret
mov
jo
add
mov
and
add
dec
add
sub
add
pop
sbb
add
clc
sbbl
add
rclb
dec
push
lds
dec
mov
add
loopne
pop
push
jmp
fnsave
daa
test
add
sub
add
outsb
cmp
loop
and
add
iret
aam
cmpsl
dec
gs
push
lds
