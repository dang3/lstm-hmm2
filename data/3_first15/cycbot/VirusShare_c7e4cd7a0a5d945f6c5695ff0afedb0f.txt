sbb
push
adc
mov
sub
and
dec
clc
adc
fmull
xor
ss
scas
xchg
mov
add
hlt
xchg
add
or
mov
cmp
cmp
test
cmp
push
loopne
push
cmp
ror
and
push
adc
jb
xor
pop
lods
mov
mov
fistps
jp
popf
je
xor
xchg
add
out
movsb
dec
xor
ja
cmp
lods
xor
push
fsub
in
dec
cli
call
fsubrp
push
mov
sub
push
mov
push
push
push
push
push
push
push
push
bnd
mov
pop
dec
imul
cmp
ss
push
call
cmp
je
mov
lea
push
push
es
es
push
jmp
icebp
mov
nop
cs
lea
xchg
or
lock
lea
repnz
pop
add
ss
cs
push
push
lret
jmp
add
add
sbb
leave
inc
add
sti
in
xchg
jae
jo
out
and
in
sti
pop
lea
sbb
add
test
mov
test
push
sbb
pop
stc
sub
sti
xor
xor
adc
out
mov
jmp
ds
es
mov
jp
les
pushf
xchg
jl
pushf
fimuls
add
dec
pop
xor
clc
aaa
rclb
lods
rcll
test
aad
push
or
mov
rolb
shll
mov
sbb
ss
in
pop
sub
jne
push
stos
sbb
cld
stc
inc
out
mov
push
sbb
xor
leave
leave
dec
orl
cld
lret
push
jl
add
lock
insb
xchg
push
jno
xchg
aaa
mov
pop
pop
push
inc
add
add
test
fiadds
add
or
xchg
lds
pop
pop
shl
bound
pop
jle
dec
jl
lret
add
ret
push
mov
push
popa
in
xor
daa
adc
lock
pop
push
jp
or
loope
test
cmpsb
rorb
jne
inc
mov
add
sub
lods
cmp
jmp
fcomip
lret
rolb
adc
sbb
push
or
stos
data16
add
and
xchg
into
cmpsl
mov
pop
ds
sub
jp
pop
lds
mov
inc
leave
adc
push
test
xor
sub
add
xchg
ret
dec
aam
jge
push
nop
out
jge
xor
pop
push
mov
sbb
add
notb
mov
scas
movb
pop
bound
xchg
jno
dec
repnz
inc
ja
xchg
pop
ret
inc
add
movl
and
hlt
daa
mov
add
rorl
notl
add
mov
dec
sub
sbb
mov
inc
loop
cltd
rolb
jecxz
roll
or
clc
push
ror
mov
mov
pop
aas
mov
stos
adc
jecxz
push
outsl
and
mov
add
bound
xchg
cs
cld
aas
nop
aas
mov
nop
shrl
ret
cmp
pop
or
std
sbb
stos
aam
xchg
mov
pop
sbb
mov
cld
push
test
add
add
cmp
ds
daa
jne
add
loope
xchg
mov
inc
add
mov
icebp
mulb
sbb
popf
mov
xor
push
xchg
std
ficompl
jg
push
add
repz
repz
in
and
andl
sub
fwait
sub
add
jbe
roll
data16
insl
aaa
into
dec
sub
addb
mov
push
cltd
sub
test
adc
mov
or
shll
push
out
repz
test
stos
shrb
fldl
push
add
push
out
rol
inc
vcvttss2si
sbb
add
mov
jl
mov
push
mov
add
mov
mov
add
xor
aam
cld
xchg
rcll
nop
xchg
cmpsb
jnp
add
adc
scas
xchg
or
ret
test
setg
add
xchg
lods
fadd
add
cmp
mov
aaa
dec
add
push
lea
nop
jg
and
lods
xchg
stos
or
add
and
push
xchg
sbb
add
nop
jbe
pop
and
addr16
add
add
inc
adc
xchg
mov
lcall
cmp
mov
push
sub
mov
aad
mov
aam
pavgb
sbb
add
lods
jo
insl
mov
leave
movsb
cmp
xor
cmp
mul
mov
adc
jae
jmp
movsl
pop
negb
cmp
add
mov
and
cmp
cs
outsl
xlat
repz
or
rolb
xor
call
enter
push
and
clc
jle
pop
movsl
and
adc
cmpsb
sbb
dec
jno
dec
mov
stos
or
add
adc
cld
cmp
inc
sbb
lods
addr16
lcall
int3
mov
mov
push
xchg
jle
dec
ret
pushf
add
add
lret
push
ss
add
xchg
stc
jb
sti
xlat
je
inc
xchg
mov
or
push
sub
pop
fildll
mov
ret
outsb
dec
aam
lcall
pusha
add
es
repz
std
and
bound
stc
xchg
push
mull
ljmp
inc
add
adc
hlt
inc
mov
add
movsb
in
data16
outsb
pop
addl
jl
leave
rorl
xchg
jb
rcrb
pop
in
popa
shr
addb
add
push
mov
add
rolb
adc
cli
add
adc
enter
push
aad
xchg
mov
add
mov
jmp
sub
add
pop
rorb
sbb
mov
fmull
repz
jae
mov
insl
mov
sub
jnp
xor
push
in
mov
aas
clc
mov
aas
out
pop
jo
sub
or
addb
lahf
mov
inc
add
and
ret
mov
inc
add
pop
clc
cs
ss
aad
add
dec
or
xchg
insb
push
int3
adc
sub
cmp
mov
fimull
ds
pusha
add
roll
push
xchg
adc
or
fiadds
sub
es
xor
inc
xor
repnz
sbb
lods
xchg
lcall
rclb
jge
add
pop
cltd
mov
insb
adc
cmp
rorl
mov
ret
add
sub
sub
xchg
sbb
mov
rolb
add
pop
push
add
mov
aas
sbb
std
pop
xchg
cs
pop
dec
hlt
rolb
xchg
push
fsts
xor
add
popf
sbb
xchg
jecxz
lea
mov
iret
sbb
adc
jecxz
add
repnz
sub
fldl
movsl
sbb
or
mov
mov
pop
push
pushf
mov
jge
enter
add
dec
push
pushf
jl
ret
push
jmp
push
in
push
add
lcall
add
jl
movsb
push
cmp
aad
push
push
add
push
add
dec
in
das
mov
filds
scas
dec
lret
dec
fsubs
cmpsl
test
sti
mov
fildll
push
add
push
jb
repnz
add
jp
into
pop
das
mov
ficomps
mov
test
jo
ficomps
imul
lahf
lea
add
sbb
jmp
and
sbb
lret
xchg
insl
loopne
hlt
lcall
cli
getsec
and
stos
adc
lret
jp
call
jg
movsb
mov
lods
je
xor
push
push
int3
imul
mov
jmp
xor
add
cmc
mov
dec
or
in
push
ret
fsin
push
and
xlat
add
movb
in
aad
movsl
adc
sub
inc
add
xchg
and
adc
pop
sbb
jl
add
mov
add
xchg
les
sbb
inc
cmp
mov
gs
jo
push
add
mov
movsl
ljmp
fisubl
shll
sarl
gs
sub
mov
sarb
jbe
dec
cmpsl
int3
push
jb
dec
mov
xchg
add
mov
add
mov
ret
dec
popa
js
inc
addb
test
jg
jge
mov
cmp
adc
popa
add
xchg
mov
sbb
pop
inc
push
and
pusha
add
push
dec
inc
add
es
bound
xchg
cli
fwait
xor
fsubs
inc
pop
les
ret
mov
add
and
sub
push
in
add
push
pop
es
shr
scas
pushf
cmc
aam
add
xor
fimull
mov
pop
les
sbb
add
jne
xchg
mov
mov
jmp
insb
xchg
or
jmp
jl
lret
dec
lea
movb
jl
stc
sbb
ret
enter
call
add
das
xchg
popf
pop
movsb
aad
add
mov
mov
stos
pop
lds
xor
mov
add
mov
cmp
dec
ret
roll
test
jns
xor
lea
and
loope
imul
lret
xchg
pusha
add
pop
mov
in
aas
mov
xchg
repnz
clc
jo
mov
pop
jno
add
or
divl
mov
testl
fisubs
push
call
cmpsl
popf
ret
xor
add
fildl
lods
xor
movsb
rcrl
add
cld
lret
int3
push
outsl
gs
mov
dec
pop
movb
jp
mov
fdivs
out
fidivl
or
loopne
and
lea
sbb
push
cmp
call
fmuls
pop
pop
xor
mov
add
cmc
loopne
add
mov
cli
mov
mov
push
sub
fsubrl
and
adc
mov
dec
inc
add
mov
and
add
fists
das
in
or
test
xor
cs
xor
cwtl
std
lods
sub
add
xchg
mov
bnd
pop
incb
add
inc
add
add
flds
sbb
fidivs
sbb
add
sub
mov
push
add
rolb
iret
mov
push
xchg
add
mov
js
adc
cmpsb
mov
xchg
shlb
lods
psubsb
stos
and
xlat
xchg
lods
gs
add
inc
add
pop
or
int
out
jnp
ds
popf
or
fidivl
inc
push
xor
xchg
fistps
pushf
xchg
cmp
or
add
adc
cmp
addb
addb
dec
out
jmp
fisttpl
test
dec
fimuls
cmp
repz
jae
adc
scas
ss
pop
jmp
jmp
jne
add
sub
xor
add
scas
pop
les
loop
fildl
icebp
or
lock
adc
add
jmp
or
fsubs
mov
mov
roll
cli
negb
mov
add
outsl
fwait
dec
push
addb
sbb
adc
iret
pop
mov
insb
cmc
jecxz
fildll
jecxz
ficoml
push
pop
xchg
adc
add
test
scas
shl
jle
fbld
scas
dec
pop
dec
pop
into
mov
mov
je
repnz
xchg
adc
clc
dec
loop
xchg
pop
decb
hlt
jb
mov
mov
add
and
mov
loopne
test
inc
cmp
lahf
sub
add
xchg
stos
push
jns
mov
call
xchg
mov
jbe
cmp
insb
push
out
sti
push
dec
add
fsubr
pushf
loopne
jo
add
xor
dec
push
clc
sbb
adc
and
mov
nop
sub
inc
divb
outsl
jb
sahf
test
jb
leave
xchg
or
loop
sti
add
js
dec
insb
clc
mov
pop
xchg
mov
ret
bound
mov
add
add
adc
cs
roll
sub
lahf
mov
adc
or
les
jae
inc
mov
aaa
or
mov
mov
pop
mov
cmpsl
fwait
repnz
and
in
das
popf
lcall
xor
je
int3
mov
push
add
sub
sub
in
pushf
jae
sub
add
test
mov
push
jmp
adc
pop
int3
mov
jmp
aad
call
cli
aaa
pop
mov
mov
aam
pop
cld
dec
cmp
sarl
mov
push
jp
arpl
cmp
sbb
inc
add
clc
xlat
push
xchg
ljmp
mov
mov
aas
stos
leave
lahf
inc
add
ret
sub
lcall
popf
into
cmc
mov
inc
add
insb
xchg
pop
mov
fwait
addb
pop
mov
test
add
enter
adc
into
push
lock
add
ja
mov
add
jb
jecxz
pop
lds
xchg
shll
add
es
and
mov
stos
pop
stos
and
cltd
mov
sbb
jb
out
fs
or
testl
aaa
jne
out
adc
icebp
cltd
mov
jmp
mov
lods
sbb
sbb
jmp
add
stos
add
ret
sub
lret
pop
jmp
cmp
cmc
mov
shrb
push
push
sbb
repz
or
add
movsl
dec
push
les
adc
add
arpl
xchg
mov
lods
sub
aaa
jb
rcrb
and
sub
push
add
push
inc
ljmp
ror
fwait
aam
popf
jo
add
inc
add
sub
lcall
sbb
inc
add
sub
jmp
imul
or
mov
xlat
push
inc
add
jp
mov
fdivs
jae
aaa
popa
ret
sbb
and
in
cmp
add
adc
inc
cli
shlb
add
jp
cmp
mov
je
pop
repnz
xchg
add
in
lret
fists
aaa
xchg
les
call
adc
push
fs
repnz
addl
cmpl
lock
sbb
inc
std
push
ficompl
jp
in
xor
cmpsb
out
or
mov
and
fprem1
mov
fisubrs
mov
sbb
pop
mov
std
fistps
and
push
cmp
std
adc
outsl
adc
cld
mov
popf
movb
mov
cli
lret
xor
lret
and
call
push
call
andl
add
roll
xor
sbb
and
mov
add
fldcw
sbb
movsl
mov
pop
pushf
xchg
in
dec
cmp
mov
xchg
testl
sbb
inc
insl
lret
dec
daa
jl
std
or
mov
fbstp
dec
sbb
and
ret
push
dec
dec
shl
push
adc
add
outsl
lock
ficoms
in
cmpsw
push
and
ret
add
pop
shll
inc
add
push
adc
jo
hlt
rol
add
cmp
mov
lahf
call
shrb
pop
pop
adc
add
pusha
add
and
das
and
mov
and
add
sub
call
mov
dec
jb
add
jae
jns
out
adc
sbb
cli
les
jae
add
fiaddl
sbb
insb
mov
lds
jb
add
test
pop
mov
in
fs
mov
adc
push
pop
mov
into
push
mov
xchg
insl
jmp
inc
aam
cwtl
ret
int
loope
push
sahf
dec
pop
inc
cmp
pop
or
in
scas
cltd
scas
loopne
inc
cmp
xchg
fcompl
out
out
jbe
add
or
stos
lods
pushf
lock
add
adc
sub
xchg
test
stos
movb
push
cmpsl
clc
or
ss
mov
sub
movsl
stos
mov
popf
shll
mov
xchg
jmp
xor
imul
inc
add
fisttpl
outsl
lret
pusha
add
jg
arpl
lahf
jnp
lods
fnsave
test
inc
add
cmpsb
mov
ljmp
add
mov
and
lea
insb
push
daa
mov
add
imulb
repnz
addb
mov
or
pop
movsl
clc
inc
add
mov
popa
aam
aam
dec
int3
lock
add
push
fs
cmp
pop
in
push
cmp
cmp
in
mov
addr16
xor
mov
add
dec
arpl
xchg
mov
add
add
arpl
add
icebp
lret
sarb
jle
sahf
and
mov
add
ja
insl
test
sahf
std
insb
sti
cmp
stc
lret
loop
sbb
aad
sahf
adc
bound
in
add
lret
or
call
inc
push
fldt
cmp
sub
popf
mov
jp
add
mov
add
add
ja
sbb
das
daa
xchg
rcll
icebp
sbb
add
sbb
loopne
xchg
xchg
out
jmp
inc
outsb
mov
add
add
push
push
les
sbb
push
xor
or
pushf
jns
push
sbb
insl
adc
imul
pushf
lods
pop
out
jg
mov
outsb
xor
add
mov
mov
inc
pop
ds
sbb
inc
add
dec
cmp
popf
xchg
fsubrs
insb
mov
outsl
add
add
lock
mov
pop
addb
imul
out
je
pushf
addb
inc
rcll
jle
xor
lretw
lahf
mov
adc
jecxz
je
lahf
pushf
stc
jle
ret
xor
jecxz
sub
mov
hlt
shl
in
mov
jmp
push
push
lea
imul
add
xorl
fmulp
xchg
add
xchg
cmp
sub
mov
mov
inc
xchg
push
mov
inc
in
push
sub
mov
mov
add
cli
xor
dec
push
cmp
pop
addr16
pop
sub
adc
fs
fsubr
jp
fisttpl
add
ret
add
xlat
cmp
bound
lret
movsb
mull
xchg
mov
add
dec
pop
inc
add
dec
flds
add
mov
out
sbb
and
cs
testl
xchg
xchg
dec
arpl
out
loopne
aaa
xchg
mov
jnp
les
or
mov
mov
les
push
out
hlt
push
mov
add
add
lods
sbb
push
test
jge
sbb
mov
nop
cmp
std
icebp
cmp
add
out
test
cld
lods
mov
push
daa
sub
push
negb
cs
sbb
bt
sub
popf
cs
add
push
fdivs
and
mov
testl
mov
cltd
adc
hlt
inc
xlat
nopl
add
lcall
mov
inc
add
rcrb
rorb
incl
cmp
push
add
loop
aam
add
into
and
add
ja
add
add
sbb
jmp
nop
ss
adc
bound
nop
sub
cmp
and
add
mov
call
in
push
mov
jg
add
add
push
or
fwait
jbe
add
test
sbb
add
cmp
js
call
outsl
fcomps
xor
je
cs
lret
and
inc
add
fwait
cmp
adc
fwait
cmpsl
xor
xor
inc
cs
hlt
adc
movsl
lds
imul
pop
sub
lds
and
fists
clc
scas
xor
add
add
xor
pusha
add
sbb
mov
jbe
pop
xchg
jmp
jno
gs
loope
pop
int
adc
mov
mov
xor
add
sbb
and
sbb
out
push
cmpsb
call
jb
xor
rcl
rolb
es
into
dec
xor
xor
out
sub
add
mov
call
pop
cs
mov
push
sahf
inc
cmc
pop
fidivrs
dec
sub
add
jo
mov
cmp
in
aas
mov
fadd
and
jno
or
add
aad
fadd
add
add
sbb
cmp
add
int3
out
loope
jno
out
rcrl
es
inc
lea
mov
dec
cmp
icebp
cld
inc
and
incl
cmp
xlat
cmc
lods
test
add
add
adc
mov
jl
pop
inc
add
test
sarl
add
cmc
jecxz
cmp
movb
cmp
movb
fsubr
fldt
mov
add
iret
into
ja
mov
outsl
daa
sbb
clc
xchg
mov
outsl
lahf
int
mov
xchg
jns
cmp
adc
nop
mov
jecxz
add
addr16
sbb
sbb
aas
stos
add
add
in
repnz
xchg
ds
outsl
or
sub
add
scas
add
mov
loopne
and
loopne
or
dec
cmp
add
ret
mov
add
sub
adc
add
xchg
fmull
mov
fsub
dec
inc
add
adc
jg
psraw
pop
inc
add
push
div
and
sub
mov
stos
xchg
mov
sbb
imul
mov
fdivl
dec
pop
pop
loope
imul
aas
cwtl
inc
add
mov
leave
dec
sbb
stos
adc
sbb
sub
and
dec
scas
cmc
add
jne
loopne
inc
add
leave
mov
cmpsl
sbb
sbb
and
mov
mov
nop
jmp
notl
lret
inc
add
push
addb
mov
js
fsubr
rolb
add
fcmovnu
jo
fs
push
repnz
jo
dec
mov
or
lcall
out
jo
shll
test
push
push
es
scas
jecxz
popa
rcll
cmpsl
push
push
add
fs
stc
dec
inc
add
out
xchg
loope
mov
push
jb
mov
add
jecxz
sub
mov
imul
add
imul
xchg
in
xor
or
add
add
mov
push
push
in
push
iret
pop
xchg
in
xchg
cmp
add
test
or
add
inc
add
push
add
adc
into
and
inc
cmpsl
mov
mov
mov
inc
push
xor
lret
icebp
add
jmp
inc
push
add
movsb
sub
fmull
inc
add
xchg
addb
sahf
addb
adc
push
xor
jge
xchg
add
loopne
test
movb
dec
sahf
pop
scas
or
test
push
outsl
xchg
loop
jne
sub
mov
ljmp
mov
adc
push
mov
pusha
add
rcl
push
imul
rcll
fisubrs
mov
dec
xchg
insb
adc
sbb
pop
clc
insb
push
movsl
jnp
lods
adc
jmp
jle
pop
cmp
sub
or
das
mov
out
pop
jmp
add
mov
add
xchg
xchg
inc
push
bound
lods
push
cmp
and
test
mov
push
jmp
xor
hlt
adc
loopne
in
xchg
lret
xchg
dec
es
imull
sbb
add
sti
test
sub
dec
push
outsl
add
add
aad
add
imul
and
add
add
aas
inc
add
stc
lock
jge
add
push
pop
mov
ror
out
jne
fdivrp
popa
fdivrp
pop
add
insl
mov
bnd
dec
aas
add
jg,pn
adc
dec
and
inc
or
xchg
clc
cmp
pushf
pop
push
add
mov
pop
and
or
sub
add
xchg
shll
mov
mov
outsl
sub
jno
pop
xchg
lea
add
mov
fstpt
repnz
mov
jnp
fwait
fisubs
lcall
add
or
fisttpl
add
sar
arpl
outsb
lret
lcall
gs
sbb
pop
lods
mov
insl
cltd
dec
rclb
sahf
pop
sbb
xchg
lds
lahf
add
mov
jmp
scas
stos
mov
sub
shl
inc
add
push
inc
cmp
loop
mov
inc
mov
mov
nop
mov
fistpl
int
repz
mov
aad
or
sti
adc
jge
ficoms
mov
or
inc
aas
jl
hlt
xchg
std
cmp
aad
pushf
add
push
add
out
int
addr16
int
insl
lahf
out
stc
jg
cmp
pop
pop
sti
js
jmp
nop
sub
xchg
add
popa
jnp
dec
and
bound
mov
sti
and
mov
ds
iret
clc
pushf
outsl
cli
pop
clc
xchg
pushf
inc
lea
call
popa
mov
les
and
mov
add
inc
push
and
add
mov
int3
and
jl
pusha
add
jg
mov
out
push
push
jnp
add
ror
cwtl
popa
std
test
mov
mov
mov
iret
imul
xchg
and
es
lods
incl
je
test
test
jbe
popf
mov
jbe
adc
stos
or
inc
add
pop
sbb
inc
add
pop
int3
push
ljmp
xor
push
sbb
mov
pop
icebp
decl
fwait
sub
add
add
aad
xchg
sti
mov
xchg
sub
pop
xor
jge
in
inc
add
pop
sub
pop
mov
es
add
sbb
int3
cltd
inc
add
nop
aaa
adc
mov
jmp
mov
dec
out
sbb
in
pop
cld
xchg
sbb
mov
pop
std
ss
xchg
jl
fidivrl
mov
mov
cmp
lock
dec
sub
stos
es
push
mov
pusha
add
inc
dec
xor
jg
add
and
fcomip
add
gs
mov
divb
cmpsl
sbb
int
jle
cmp
push
stos
add
push
es
mov
mov
lret
rorb
pop
iret
iret
fwait
xchg
inc
movsb
sub
loop
pop
sbbl
cwtl
cwtl
iret
dec
shll
data16
mov
push
add
aad
and
add
lods
adc
lahf
fcoms
push
dec
and
jae
xchg
jle
xor
jmp
bound
fidivrs
jns
add
add
lods
dec
cmp
lret
mov
pop
ret
mov
filds
add
ljmp
inc
add
mov
pop
lods
movsl
xchg
cmpsl
jmp
les
mov
scas
dec
movsl
mov
xor
push
test
pushf
aaa
xchg
aad
add
rcrl
adc
in
int
inc
pushf
leave
dec
jle
out
shlb
sub
add
add
test
jmp
stos
pop
ljmp
mov
notl
push
outsb
mov
jo
push
imul
out
or
mov
pop
xchg
xchg
push
loopne
sbbl
mov
into
mov
mov
mov
fwait
mulb
add
add
imul
mov
jge
test
pop
nop
cmp
loope
movb
mov
adc
sbb
test
outsl
cmp
rorb
fisubrs
xchg
paddusb
xchg
jmp
mov
inc
add
int3
sub
movsl
shll
sub
cmp
add
repnz
filds
movl
insl
nop
jb
push
pop
sub
cmpsb
jg
adc
out
xor
push
cmp
outsl
pop
pop
int
scas
adc
fwait
xor
jl
add
popa
xor
add
push
jge
jno
xchg
inc
add
xchg
inc
add
dec
cmp
cmc
leave
mov
add
mov
fs
mov
sub
insl
in
call
jg
sub
mov
jl
movsb
push
and
sub
pop
out
icebp
repz
jne
inc
jge
xchg
imul
mov
xchg
insl
lods
negb
push
add
out
stc
es
jge
sbb
add
mov
jmp
cmp
jp
dec
mov
sbb
add
jne
mov
dec
fsubrl
add
lods
sbb
cli
jl
jns
xor
add
push
insb
icebp
leave
stc
nop
aad
gs
fsts
xchg
scas
in
push
add
add
sbb
or
inc
add
lea
lds
mov
jmp
add
hlt
ljmp
pop
sbb
into
sub
jb
repnz
xor
dec
or
mov
movsb
add
lret
xchg
es
data16
int3
push
sub
push
test
test
insb
sti
movsb
dec
dec
sbb
cmp
jecxz
adc
int3
pop
addr16
mov
jg
call
fisubrs
insb
or
adc
sub
mov
aas
movsl
mov
out
dec
insl
mov
jp
mov
out
push
add
rolb
fisubrs
pop
out
and
mov
test
inc
add
push
cmp
ja
rorl
leave
in
push
dec
stc
std
xor
sub
add
insb
lods
push
imul
divl
dec
lods
cmc
loop
scas
or
cmp
test
add
mov
loop
sbb
mov
in
mov
xchg
int
jbe
add
das
jno
cmpsb
fists
or
sti
jo
lcall
cmp
mov
add
jle
jo
push
fistps
push
rolb
mov
fcoms
pop
and
or
cltd
jnp
ja
and
mov
cmp
mov
cmpsl
sti
xchg
cmp
push
jnp
mov
sbb
stos
adc
push
cmc
pop
add
cld
adc
movsb
faddp
sarl
add
imul
ret
cmc
icebp
out
and
cmp
clc
xor
add
aad
insb
dec
adc
ja
faddl
add
out
outsb
xlat
in
bound
sub
mov
mov
aas
cwtl
inc
shll
pop
loopne
lock
add
movb
mov
stc
dec
adc
hlt
xchg
in
mov
or
add
sub
js
fidivl
cmpsl
mov
inc
add
jns
dec
xor
xor
ss
cmp
rcrl
insb
xor
nop
or
cmp
je
cs
inc
imul
iret
addb
call
jb
sbb
xor
cmp
movb
cltd
xor
cli
ljmp
nop
mov
das
pushf
xchg
cmp
popf
add
int3
inc
add
xchg
mov
xor
aas
xchg
inc
add
aas
rcll
aam
jl
lds
fwait
cwtl
scas
out
mov
mov
ss
jl
ds
adc
pop
push
in
cmp
adc
or
aas
repz
mov
add
mov
movb
lods
arpl
ss
mov
jmp
std
xchg
push
sbb
popf
fldcw
leave
lret
xor
stos
stos
popa
fcoml
mov
iret
adc
cld
sub
shrl
nop
xor
shll
xchg
pop
dec
mov
into
pop
or
adc
jo
scas
lock
repz
push
add
dec
jae
add
add
or
push
mov
xor
pop
xor
lds
add
dec
pop
bswap
nop
and
xchg
cmp
movsb
ret
repnz
movsl
in
add
fs
push
cmpsl
xlat
cmp
add
icebp
cmpsl
enter
dec
sar
pop
push
jb
cmp
add
iret
xor
add
pop
decl
and
mov
iret
ss
push
loope
pusha
add
cmc
mov
fldl
add
insl
movntq
out
mov
and
aad
insl
or
add
add
and
js
pop
pop
push
bound
sbb
mov
outsb
xor
imul
rcrl
fists
jmp
sub
iret
cmpsb
xchg
jp
rcrl
mov
mov
lock
cli
fucom
mov
imul
xchg
cwtl
push
enter
fs
mov
and
in
idivb
in
aas
stos
popf
inc
scas
or
cltd
sbb
jmp
cmp
pop
pop
ljmp
shll
js
cmpl
xchg
cltd
cli
int
inc
add
cmpsb
mov
and
and
rcr
pop
dec
add
jb
stc
inc
add
testl
lahf
jg,pt
rolb
push
mov
add
lcall
xchg
imul
out
insb
adc
add
shll
pop
cltd
and
dec
cmp
pop
and
imul
add
dec
cli
mov
loope
ss
testl
sti
aaa
sub
mov
or
sahf
mov
jno
dec
clc
cld
jno
fisubrl
movntq
popa
fdivs
push
call
iret
pushf
movb
add
and
xor
adc
shll
add
mov
out
dec
mov
xlat
lea
add
loop
xor
nop
sbb
pop
or
sub
loop
add
addb
cmp
inc
add
push
xchg
test
adc
fwait
xor
rep
mov
push
ret
lret
sub
and
xor
add
je
mov
movsl
icebp
jg
subl
and
add
mov
fnstsw
sbb
pop
mov
or
jge
jbe
in
leave
push
addb
ss
cmc
mov
pop
aad
xor
insl
jge
sub
add
sub
adc
das
lock
mov
adc
push
insl
lods
icebp
push
xor
add
leave
sbb
repnz
sbb
dec
jl
addr16
fwait
jno
repz
inc
add
mov
cmp
xchg
xadd
sti
mov
inc
mov
lods
push
add
lret
push
es
mov
stc
mov
call
xor
pop
or
push
lret
cmpsl
lock
fs
pop
push
adc
notl
movb
mov
add
jl
add
lret
dec
fs
add
xor
add
fbld
push
fcoms
and
lods
adc
and
xchg
rcl
and
xchg
dec
out
addb
cltd
loope
mov
push
xlat
and
fldl
mov
movl
pop
add
loop
addb
adc
cmp
mov
mov
pop
add
add
pushf
in
jnp
pop
int3
pop
mov
mov
add
es
pop
dec
cli
js
adc
xchg
popf
les
pop
sarl
jo
add
insl
in
fistl
inc
mov
ja
add
mov
popf
int3
jns
xchg
and
inc
sub
repnz
pop
xchg
mov
movb
cmp
in
adc
ja
mov
and
cltd
dec
into
jae
pop
sbb
mov
setns
jecxz
add
std
push
js
add
and
sbb
jbe
or
add
adc
scas
inc
or
rclb
fildl
fldcw
adc
jmp
enter
out
mov
rolb
jbe
pop
notl
out
pop
mov
call
jecxz
insl
cmp
mov
lahf
repz
fmul
imul
or
inc
jno
fs
shll
xchg
daa
mov
xchg
sub
add
xchg
hlt
and
icebp
mov
and
sbb
je
mov
out
movsl
imul
jne
xor
enter
je
test
int
xchg
call
divb
add
decl
sbb
dec
xor
sub
push
push
cmp
or
and
clc
mov
pop
sbb
xor
jbe
xchg
fbstp
sub
add
cld
sub
std
ret
stos
out
xadd
stos
int
inc
add
and
arpl
inc
add
and
cmpsb
mov
clc
cmpsb
mov
inc
push
std
int
sub
add
test
mov
jnp
adc
enter
outsb
in
mov
pop
mov
arpl
mov
fsubs
push
testl
clc
movsb
dec
fldcw
and
rol
push
mov
add
or
push
add
imul
adc
pop
pop
xchg
mov
xchg
mov
jo
and
inc
sub
movsb
shrb
jmp
fcoml
pop
add
mov
bound
aam
xor
cmp
sub
add
cmpsb
and
add
xor
scas
js
mov
push
lahf
dec
int
pop
cmp
repnz
test
add
push
fwait
cld
fwait
enter
popf
pop
out
sub
cs
sbb
sub
push
add
cmp
les
add
aas
bound
stc
add
cmpsl
cmp
dec
add
iret
jl
inc
add
in
xchg
pushf
jge
inc
jns
sub
dec
mov
ljmp
sbb
push
fwait
mov
add
sahf
icebp
add
mov
loop
push
aas
testb
mov
in
out
out
addb
gs
add
add
mov
mov
adc
inc
add
sar
mov
and
scas
inc
adc
inc
jne
or
xchg
dec
xor
lahf
mov
out
push
inc
add
mov
add
sub
mov
int3
xor
mov
xchg
inc
add
cmpsb
push
sbb
ret
nop
push
jo
inc
enter
xor
push
andl
movsl
jnp
int3
les
loope
lock
xor
mov
icebp
lret
adc
push
xchg
mov
add
dec
bound
xchg
stc
repnz
inc
jg
pop
pop
dec
dec
pop
or
dec
cmp
stos
or
push
xor
lods
cmp
add
pop
push
test
jle
inc
add
xchg
push
aaa
les
push
bound
cmc
sub
add
cwtl
pop
pushl
addb
addb
jbe
push
jge
mov
fcoml
push
add
aas
push
xor
jmp
jno
ficoml
dec
jle
es
shlb
addr16
les
lds
add
in
add
and
outsb
mov
add
les
mov
push
fistps
out
and
pop
popf
sub
push
sub
pop
pop
sbb
add
das
push
mov
mov
addr16
xchg
ret
add
jmp
push
dec
mov
sbb
cmpsb
cltd
mov
je
jno
ficoms
dec
add
and
push
repz
movb
repnz
scas
fcoms
cmp
lcall
rolb
pop
out
push
in
es
add
test
std
cmc
push
rolb
insl
cmpsl
sahf
mov
xor
xor
loope
mov
inc
or
mov
test
inc
pop
dec
mov
adc
cmp
jne
xor
lret
stos
mov
and
pop
jae
aas
jae
repnz
std
inc
xchg
lahf
push
ja
add
push
pop
push
cmp
jp
mov
add
int3
jecxz
mov
dec
sub
cs
push
ja
aaa
out
es
addb
lahf
outsl
insb
repz
mov
add
leave
adc
add
dec
pushf
mov
decb
add
lret
stc
cmp
les
mov
xor
sbb
insb
scas
in
jge
inc
add
movsb
mov
push
inc
add
test
xchg
call
dec
pushf
inc
add
int
imul
int
in
rolb
add
lea
popf
rcll
bndldx
and
mov
or
cmpsl
mov
mov
dec
int3
fistpl
sub
aad
in
jae
dec
addr16
mov
and
imul
cwtl
mov
aas
push
mov
fwait
push
sahf
cwtl
jecxz
add
add
xlat
jo
stc
sub
inc
inc
inc
add
mov
repnz
loope
test
cmpsl
into
xchg
cmp
loop
jl
mov
out
mov
int3
and
xchg
hlt
cmpsb
sbb
jmp
ret
stc
adc
add
jmp
sahf
xor
dec
idivb
call
sarb
sbb
jnp,pn
ss
xor
clc
pop
in
out
or
and
add
js
xchg
pop
mov
enter
push
fstpt
or
sbb
adc
cmp
xchg
push
jnp
add
add
testl
mov
pusha
add
nop
and
mov
dec
andl
push
adc
xchg
enter
adc
jl
sbb
xchg
repz
bound
jb
jg
mov
addr16
add
sbb
mov
adc
xor
in
sti
cli
push
mov
mov
mov
movsl
cmpsb
shlb
mov
imul
aas
lret
add
mov
xor
pop
aaa
sbb
dec
mov
fdiv
dec
push
add
imul
enter
lds
add
cmp
fisttpl
mov
add
js
mov
xchg
inc
rolb
enter
rcl
add
in
aaa
lods
adc
repnz
out
out
inc
aam
lea
icebp
fs
add
daa
dec
xchg
adc
add
add
dec
lods
rolb
sub
add
mov
or
ficoml
push
add
pop
sahf
push
push
sub
std
cs
jne
loop
addr16
les
jmp
add
or
das
cmp
imul
dec
inc
add
jl
inc
repnz
sbb
sub
mov
xchg
inc
add
sub
imul
jl
dec
or
rolb
mov
jmp
rolb
jo
add
mov
imul
sti
repz
sbb
loopne
mov
xchg
mov
push
sbb
ljmp
mov
rcrl
fcomps
in
mov
test
out
mov
pop
dec
das
in
addl
clc
ficompl
pusha
add
jg
sub
inc
add
pop
sub
inc
gs
cmp
clc
pop
and
mov
movb
add
jp
rorb
push
mov
adc
fwait
in
cmp
xchg
addr16
xchg
icebp
shrb
mov
pop
nop
lods
das
mov
fstl
jecxz
fs
scas
popf
insb
cmc
call
scas
dec
jnp
adc
repnz
ljmp
aam
addb
adc
mov
pusha
add
sub
rolb
cltd
in
mov
dec
push
add
mov
mov
sub
and
addb
jmp
cmpsl
in
sub
push
sbb
inc
add
daa
sub
fucomi
mov
mov
dec
daa
mov
enter
cmp
push
mov
sarl
pop
movb
ja
jmp
dec
jg
hlt
pop
fiadds
cmp
pop
scas
xchg
push
xor
out
or
mov
mov
and
imul
dec
aam
inc
adc
mov
shl
push
adc
xchg
jmp
jne
icebp
mov
add
incb
pop
jmp
ss
ss
ljmp
and
ret
dec
mov
fdivrl
inc
add
insb
lahf
pushf
pop
je
xor
xchg
jmp
mov
in
add
mov
mov
fwait
stos
sub
ds
or
pop
xchg
jle
sahf
add
loopne
cltd
push
test
add
add
pop
and
pop
out
inc
add
ss
sbb
add
push
popa
ret
sbb
pop
mov
fimuls
hlt
lods
pop
cltd
ss
sub
sahf
push
daa
ret
xor
imul
repnz
and
mov
stos
pop
ja
loop
add
shrl
add
in
mov
icebp
or
stc
jg
sub
adc
xor
mov
nop
sarb
loopne
mov
rcr
movb
adc
dec
test
cmp
jmp
pop
mov
sub
jnp
rep
std
das
push
in
push
sub
mov
icebp
in
jp
ret
cmp
lds
dec
lret
cld
dec
leave
push
add
or
push
xor
dec
adc
mov
dec
testl
sti
clc
sub
xchg
das
xor
aam
push
dec
sti
je
mov
sub
cmpsl
xor
enter
dec
xor
inc
imul
xor
xor
je
ficoms
push
dec
push
test
push
cmp
xor
add
push
add
pop
repz
int3
movsl
adc
add
enter
cltd
je
sbb
mov
add
fs
stc
cmpl
in
out
cltd
jecxz
xchg
sub
add
mov
add
jbe
pusha
add
add
inc
fadd
xchg
push
xchg
pop
iret
mov
add
fcoml
movsb
adc
push
sub
int3
jne
cmpsb
hlt
mov
add
add
push
sub
sub
xchg
pop
push
popf
push
push
jae
mov
sar
pusha
add
xor
add
fistpll
cltd
mov
or
lret
mov
mov
jns
jne
add
add
hlt
popa
lahf
test
rolb
xchg
mov
call
lret
enter
sbb
lods
push
inc
fsubrs
adc
cmp
push
add
mov
jg
add
adc
gs
cmc
mov
add
jno
cwtl
pop
pop
ficomps
out
push
iret
or
cmpsl
adc
aas
pop
lahf
imul
dec
movsl
cmpsb
movsb
push
add
stos
fs
mov
cmp
xchg
pop
pop
or
jg
add
cmpsl
inc
add
mov
not
cmpsb
fiadds
pop
inc
add
imul
movb
aaa
mov
popa
lock
arpl
rolb
and
push
inc
xchg
sbb
jp
push
add
out
mov
cmpsl
xchg
inc
cmpl
and
inc
push
mov
pushf
test
push
fsubr
or
movb
push
add
sub
mov
add
fildl
repz
and
insl
leave
es
add
pop
mov
adc
test
and
sbb
add
push
fstl
test
imul
add
xchg
fiadds
add
outsb
adc
addr16
inc
leave
dec
out
or
add
fisubs
scas
ljmp
mov
add
xor
pop
dec
lahf
arpl
mov
dec
icebp
add
add
mov
inc
add
dec
inc
add
add
jne,pt
std
mov
aaa
lcall
push
mov
repnz
add
add
ror
jl
jo
add
inc
add
add
and
pop
sbb
xchg
mov
and
rclb
dec
add
ss
and
movsl
loope
xor
lds
fdivrl
das
clc
pop
and
add
jne
inc
add
dec
mov
jge
mov
mov
or
out
pushf
stos
push
dec
out
cmp
ljmp
fstpl
sbb
bound
adc
add
add
pop
cmp
add
pop
mov
fucom
and
inc
xlat
or
aaa
inc
add
and
mov
dec
aad
add
inc
add
imulb
sub
mov
add
and
fidivs
add
shlb
push
loope
sub
xor
sub
mov
cmc
jmp
xchg
movsb
xchg
mov
fisubrl
lret
loope
addb
repz
or
pusha
add
stos
cmc
js
cmc
adc
xchg
int3
cmp
movsb
shll
repz
xchg
sub
mov
push
add
cmp
ja
in
mov
scas
es
out
out
arpl
mov
add
mov
repz
pop
sub
push
mov
fidivl
fldl
fstpl
outsb
mov
ss
push
adc
jl
add
clc
mov
cmp
add
xchg
test
add
daa
jmp
push
mov
cmp
jg
and
lds
mov
divl
push
imul
dec
sahf
xor
stc
push
lahf
out
arpl
adc
scas
iret
and
hlt
movb
add
mov
or
and
add
inc
fcmovnbe
cmp
dec
cmpxchg
mov
ja
add
stos
sbb
pop
cmp
add
push
hlt
stos
dec
mov
movsl
and
repz
in
or
or
pop
mov
pop
mov
mov
int
add
mov
pop
cwtl
xor
and
das
lret
xchg
and
pop
lcall
lock
sub
add
addb
jp
iret
loope
mov
scas
jo
idivl
leave
fs
push
or
movb
sti
jge
mov
dec
mov
ror
ja
bound
fiadds
cmc
dec
fsubrl
loope
stc
pop
ffreep
cld
pop
xchg
jge
arpl
int
sbb
cmp
orl
fs
sub
mov
ret
ljmp
mov
inc
add
mov
cmc
sahf
stc
cmp
pop
movsb
dec
mov
ja
and
mov
sbb
mov
insl
mov
jmp
js,pn
int
pop
movl
add
inc
add
mov
pop
nop
mov
xchg
xor
loopne
add
mov
cmp
fwait
loop
rorl
lcall
push
xchg
ss
daa
add
pop
out
jl
in
addr16
adc
or
dec
hlt
mov
xchg
adc
fisubrl
loopne
mov
inc
add
push
adc
cmp
adc
outsl
lods
das
stos
lea
lods
add
add
inc
add
das
movntq
xchg
or
sbb
dec
loopne
fsubl
add
int
insb
ds
mov
lret
sub
push
inc
add
adc
jo
stc
push
iret
mov
bound
fisubrl
loopne
add
mov
add
inc
xchg
and
clc
in
add
int
stc
xchg
mov
add
pop
dec
cmp
jae
aad
sub
lock
pushf
sti
mov
or
jns
test
rclb
rolb
das
out
inc
or
pop
movl
ficoml
addb
aaa
push
movq
jmp
inc
adc
aas
cli
mov
addb
shrl
fsubrl
cmp
outsl
addb
sbb
cmp
sub
or
sbb
cli
int3
xor
stos
cwtl
xchg
adc
fmull
and
inc
cmp
addb
sbb
bound
clc
add
iret
pop
and
mov
add
add
stos
into
arpl
jle
inc
shll
add
adc
aam
xchg
imul
adc
ljmp
push
add
xchg
xchg
mov
arpl
add
mov
add
in
mov
pop
pop
mov
call
add
cmpsl
repz
cmp
xor
jnp
mov
or
mov
pop
outsl
inc
into
mov
cltd
imul
add
cld
dec
hlt
xchg
ss
xlat
inc
adc
mov
push
rolb
pop
popf
jmp
sub
or
mov
sbb
arpl
cs
mulb
xor
mov
mov
mov
ss
add
and
fdiv
lahf
or
xchg
pushf
mov
adc
xor
cmp
aad
cmpsb
sub
add
add
cmp
icebp
in
pushf
test
jecxz
push
fs
inc
add
cmp
and
shll
xchg
fisttps
mov
xchg
mov
pop
jne
ljmp
ds
cld
sbb
jmp
mov
outsb
mov
cmc
pop
cld
push
andl
ljmp
sub
cmc
mov
add
push
fwait
sub
add
add
fisubs
adc
sub
mov
mov
leave
popf
aaa
xchg
push
sbb
aam
scas
and
es
dec
sub
popa
pusha
add
leave
sub
test
in
xor
mov
or
adc
add
or
add
add
add
add
outsb
test
jne
push
and
cmpsl
or
xchg
cmpsl
xchg
mov
icebp
gs
movb
enter
push
jg
mov
mov
add
xchg
idivl
cmp
push
mov
pop
xor
ret
mov
sub
jge
add
sub
xchg
lods
mov
xchg
pop
add
jl
dec
pop
je
and
add
stos
xor
jmp
cmp
add
es
aam
mov
sarl
cmp
xor
iret
xchg
mov
mov
imul
add
jb
sti
aaa
dec
movd
je
sbbl
ja
add
stos
and
inc
add
fsubrs
fistps
mov
jg
icebp
add
push
ja
movsb
or
mov
sub
push
adc
iret
call
pop
pmaddwd
ljmp
movsb
sub
mov
inc
add
sbb
js
xchg
push
add
inc
add
sahf
or
add
jae
push
mov
outsb
xchg
dec
scas
shrl
push
arpl
addb
nop
daa
ss
add
jne
cwtl
movsb
add
jmp
mov
push
add
mov
fisttpl
add
aas
fsub
xor
sbb
aad
pop
rcr
repnz
pop
rolb
jmp
data16
test
inc
push
jns
out
mov
add
cmc
mov
pop
ret
scas
pop
sbb
mov
dec
add
cmc
mov
ret
les
jbe
add
sbb
test
cmc
mov
add
add
inc
add
xchg
adc
sbb
dec
jae
cmpsb
cltd
mov
movsl
into
or
outsl
arpl
jle
xor
adc
add
mov
test
add
je
xchg
fcmovnu
std
leave
shll
scas
xchg
out
jge
cmp
pop
outsb
in
iret
inc
add
movb
loopne
rolb
loop
jl
les
daa
fwait
dec
daa
pop
sub
cmc
movsl
jp
bound
cmp
ret
leave
ret
adc
jb
jge
cmp
pop
xor
mov
dec
aam
pop
xor
or
dec
mov
add
movsb
mov
push
mov
out
mov
mov
jnp
fidivrl
mov
sbb
add
sub
icebp
mov
fisubs
gs
dec
movsl
push
xor
mov
pop
adc
or
cs
pop
jbe
add
shr
xchg
das
add
add
ds
adc
repz
es
xchg
and
mov
mov
test
pop
fdivrl
cmp
loope
aaa
jge
mov
movl
mov
add
cmp
add
xchg
inc
add
inc
loopne,pn
inc
add
or
jge
aaa
addb
cmp
and
out
jl
fdivr
addb
mov
add
fs
insb
cli
outsb
jns
enter
mov
lea
lcall
and
in
lret
push
jl
fadd
add
in
idivb
aam
xbegin
and
sub
xor
add
je
addb
and
fnstenv
fisubrl
fs
testb
push
jb
adc
insb
lret
out
into
mov
push
mov
imul
add
mov
fsubs
pop
lods
jp
nop
cmpsl
stos
scas
jns
loopne
mov
sbb
push
add
ret
xchg
adc
push
test
mov
mull
push
inc
add
push
mov
and
fwait
mov
mov
lock
add
or
ror
sbb
xchg
scas
pop
popf
inc
cwtl
sahf
mov
mov
cld
or
shrl
sub
and
jnp
imul
add
out
inc
test
mov
xchg
shl
adc
sbb
xor
in
rcrl
add
jae
add
mov
jp
xor
in
mov
repz
cmpl
shll
test
sub
lret
sbb
or
add
ja
cmp
jae
mov
sbb
adc
push
jge
jo
add
test
stos
or
dec
inc
out
ret
cld
jo
movb
add
push
vmwrite
dec
popa
pop
inc
leave
mov
icebp
in
fsub
pop
or
or
sbb
in
lret
xchg
push
push
sti
clc
les
push
mov
loope
cmpsb
rorb
add
add
and
test
aas
sub
xchg
mov
cmp
mov
aas
lret
adc
jp
dec
jae
push
xor
subl
jmp
lods
push
sarb
or
addb
add
fldcw
rolb
popf
dec
rolb
in
test
orl
add
and
rorb
push
sbb
add
push
mov
aad
aas
movb
repnz
and
sahf
adc
in
push
add
pop
test
push
enter
sub
xor
add
mov
add
sub
mov
pop
adc
aad
imul
mov
icebp
sub
sub
xor
mov
mov
add
cmpsb
les
xchg
test
add
jmp
shl
rcrl
dec
cs
movsb
fcomps
push
mov
test
sub
rolb
add
adc
mov
ljmp
test
loopne
adc
cmpsb
ret
push
cmp
pop
neg
add
fmul
sub
add
xlat
mov
je
adc
sub
inc
add
iret
sub
lea
aam
push
shll
mov
add
sbb
jo
xchg
cmp
gs
jp
aas
fucomip
dec
sti
or
push
fidivrs
and
dec
ret
scas
inc
add
aaa
mov
lea
inc
add
loop
std
rolb
mov
xor
mov
sbb
dec
roll
jle
add
adc
popf
jg
fucom
cmp
inc
add
cwtl
pop
adc
push
and
out
ja
lods
or
cli
pop
pop
dec
pop
in
popf
push
aas
push
xchg
or
cwtl
sub
fyl2x
out
loope
pop
dec
loop
movb
addb
xchg
dec
rcl
and
or
addr16
sbb
and
push
aad
ljmp
mov
add
cli
adc
jb
les
aad
test
inc
add
and
mov
fldenv
mov
push
add
ljmp
mov
movb
cmpsb
and
and
push
mov
pop
mov
jnp
mov
pop
decl
xchg
mov
xor
insb
mov
fwait
mov
out
cmpsb
dec
dec
sbb
cmp
enter
aas
addb
stos
pop
enter
mov
xor
push
test
dec
xchg
ljmp
xchg
inc
repz
int
xor
xor
xor
adc
sarb
or
movsw
les
sarb
imul
mov
add
ja
test
mov
jg
repnz
sub
xorl
add
out
popa
inc
add
mov
sahf
dec
sbb
inc
divb
xchg
mov
add
adc
aad
in
popa
sub
add
push
add
fadds
mov
rclb
mov
cwtl
out
in
hlt
out
ret
xchg
outsl
movsl
add
aaa
in
test
sub
add
scas
or
int
and
clc
sbb
rcll
mov
or
inc
fldl
insl
mov
mov
xchg
loop
cmpsb
loopne
cmp
xchg
xchg
and
mov
lds
inc
add
xorl
mov
call
cmp
xor
xchg
jmp
push
int
pushf
mov
leave
inc
and
add
add
insl
into
jne
lods
std
jge
cli
jl
les
and
hlt
hlt
jbe
sub
mov
les
mov
xchg
push
mov
addb
push
push
add
or
fcomip
mov
fdivrs
leave
loope
mov
pop
or
loopne
inc
add
scas
mov
jl
daa
cltd
mov
dec
sub
sbb
push
mov
inc
sar
cmc
pop
or
data16
mov
insl
mov
fsubl
stos
jge,pn
enter
into
or
xchg
inc
add
adc
mov
std
mov
jl
add
movb
xor
sbb
sub
jae
mov
insl
cmp
mov
adc
data16
pop
popa
or
dec
test
stos
and
pushf
add
add
icebp
popf
out
jp
cld
loopne
cmp
pop
popf
outsb
sub
dec
out
push
push
or
in
mov
cmp
cli
pop
mov
pop
inc
fstps
xor
or
lock
pop
xchg
xchg
das
fadd
add
sub
add
ret
mov
fs
dec
xor
mov
mov
enter
xor
loop
out
dec
shll
sub
mov
dec
outsb
jo
pop
dec
mov
loop
stos
ljmp
inc
mov
sub
frstor
pop
inc
add
cli
gs
movb
or
xchg
imul
inc
add
test
movsl
imul
call
inc
push
xchg
divl
dec
adc
enter
sti
cwtl
fst
inc
aas
lds
hlt
seto
add
cld
sbb
mov
mov
add
or
arpl
sub
movsl
fisubs
push
inc
add
jnp
cmpsb
cwtl
dec
push
clc
or
mov
push
pushf
dec
jne
ljmp
loop
fistl
test
add
mov
mov
sub
insl
movsb
pop
out
push
loope
push
adc
movsl
push
push
daa
sbb
addb
and
scas
pop
push
cmc
test
in
jge
dec
std
stos
cmc
jp
imul
jbe
adc
lret
sbb
jne
mov
test
add
or
lret
jle
clc
inc
in
daa
stos
adc
sub
enter
pushf
sbb
fsub
or
xor
sbb
sbb
add
sbb
jno
inc
adc
js
mov
inc
jne
add
lods
addr16
sub
roll
outsb
add
mov
out
orl
out
mov
sbb
mov
pop
loope
lods
sub
daa
jge
fwait
inc
add
ret
push
fcoms
adc
add
add
in
jae
jnp
add
push
add
outsb
inc
add
sarl
addb
sub
xchg
test
xchg
lea
repnz
aas
imul
push
pop
addb
or
and
dec
mov
pop
mov
enter
push
icebp
pand
lea
in
fwait
repnz
mov
mov
ror
addr16
and
daa
jbe
add
gs
in
inc
stc
mov
pusha
add
add
adc
push
das
adc
repz
popf
inc
dec
cld
in
add
xor
push
ljmp
imul
fs
push
dec
sub
add
imul
fildll
push
add
jns
mov
or
outsl
xor
icebp
or
inc
add
addb
pop
lds
or
movsl
sarb
sti
js
jecxz
insl
cmpsb
xchg
fsubl
gs
dec
sbb
cmc
imul
mov
sarl
addb
pop
addb
loop
ds
push
repz
and
and
loop
add
dec
enter
dec
repz
xor
icebp
sub
jbe
leave
push
add
inc
add
lock
in
data16
popf
pop
jnp
mov
push
xchg
xchg
mov
fidivrl
aas
sub
and
jl
mov
popf
mov
jae
movsl
cld
mov
sub
popf
jno
sub
cli
aam
ljmp
inc
add
lret
push
xor
add
lret
sbb
ret
and
sbb
cmp
pop
mov
xchg
jp
or
inc
push
xor
cmp
xor
mov
mov
jnp
rcrb
rolb
pop
push
sbb
xchg
sahf
dec
in
jb
out
aad
mov
insl
push
xor
add
fs
aam
xchg
mov
imull
mov
cmp
xchg
adc
sbb
movb
out
or
ja
sahf
dec
es
cmc
adc
hlt
jno
add
add
cld
pop
imul
mov
pop
and
add
xor
cmp
mov
inc
pop
pop
lret
mov
data16
stc
inc
cli
lods
jl
outsb
and
or
call
addr16
dec
pop
inc
out
roll
add
popf
jbe
rcrl
mov
jo
add
mov
xchg
in
int
call
sub
inc
add
cld
cltd
dec
cmc
jno
jo
sub
movb
rorl
push
adc
int
outsl
iret
cmp
pop
xor
jnp
xchg
xor
add
scas
dec
in
adc
pushf
shl
mov
pop
push
test
addb
cmp
jne
insb
adc
loopne
fwait
in
in
fsubs
repz
push
xchg
push
cs
dec
daa
dec
xor
or
xchg
dec
sub
adc
mov
cmp
fs
mov
dec
jb
xchg
cmp
stc
mov
lds
push
adc
push
in
add
mov
imul
pop
cmp
dec
jno
or
lahf
push
fadd
sbb
test
fadds
add
jne
and
jmp
in
sub
jl
imul
mov
xor
je
pop
std
xor
add
mov
and
push
xchg
cwtl
fistl
inc
add
xor
mov
add
jns
jnp
jne
lock
pop
rcrl
jnp
es
push
mov
push
ret
js
ret
adc
inc
mov
mov
rcrl
insb
out
sbb
dec
loop
stc
and
in
add
das
addb
test
xlat
push
pop
repz
sub
add
add
icebp
xchg
cwtl
das
addr16
pop
pop
cmp
xor
add
xchg
mov
into
loop
test
rolb
add
inc
add
loop
xlat
mov
pop
mov
jecxz
cmp
inc
leave
lods
or
mov
adc
mov
insb
cmc
push
xchg
or
add
sbb
xor
jg
cmp
arpl
dec
and
pop
testb
lock
ficomps
inc
sbb
inc
add
fwait
rclb
pop
dec
ret
inc
out
fs
scas
jns
mov
imul
xor
mov
cli
dec
mov
movsb
fildll
scas
or
daa
test
dec
lock
fdivp
jecxz
lds
sub
mov
sbb
and
add
add
sub
jp
cmp
fldt
add
mov
repnz
add
jmp
mov
test
orl
cmpl
push
dec
test
imul
cmpl
lds
enter
jae
mov
cmp
fsubrl
loope
pop
mov
divb
xchg
movsb
adc
sbb
pop
mov
hlt
mov
jmp
lea
add
test
insl
mov
movsl
push
cmp
mov
outsl
sub
test
xorl
mov
clc
cmp
add
pop
inc
and
mov
mov
and
push
addb
xchg
push
and
movsl
hlt
adc
cmc
inc
in
xchg
iret
jle
ds
lcall
mov
mov
cmp
push
fdivrp
cld
sub
fnstcw
cmpsb
fwait
scas
adc
movsl
sub
add
add
test
push
add
add
fnstcw
add
shlw
adc
jg
sub
lods
push
mov
push
add
jo
add
pop
std
jbe
push
add
inc
add
enter
out
addb
sti
cltd
insb
stos
or
test
sbb
lods
inc
add
bound
shlb
loope
lret
push
xchg
add
stc
cltd
xchg
cmp
push
add
inc
add
push
xor
mov
mov
movb
add
xchg
add
leave
adc
out
add
add
xor
orl
inc
add
lea
pop
popf
cltd
ljmp
add
push
add
in
rcrb
add
add
je
fcoms
adc
je
sarl
mov
add
in
sub
dec
stos
sbb
dec
xor
inc
add
push
add
repnz
in
and
push
adc
mov
popa
aad
or
mov
push
ja
aam
shl
inc
xor
pop
fsubp
add
sbbl
push
or
xchg
sti
mov
mov
shll
xchg
lods
or
dec
mov
fs
xor
or
gs
xchg
mov
fcomip
je
sub
and
nop
outsl
shll
sub
add
psllw
das
addb
cmp
hlt
adc
lds
mov
cmp
add
jmp
enter
add
xor
cwtl
aas
cmovo
dec
adc
add
gs
adc
daa
mov
out
push
xchg
jb
movb
inc
add
push
mov
mov
int3
xor
inc
pop
pop
mov
lret
in
flds
cmp
mov
loope
xchg
les
mov
push
xchg
add
xlat
add
aas
test
rdpmc
sbb
add
mov
movsb
aas
ret
xor
and
insb
sub
mov
test
das
push
fisubs
lods
pushf
shlb
ftst
mov
js
push
adc
cmp
xchg
movl
mov
inc
or
add
iret
rcl
mov
rcr
inc
add
and
mov
or
aas
scas
cmp
push
in
bound
addb
popa
mov
cmp
mov
stc
iret
add
xchg
sub
pop
push
nop
adc
mov
arpl
mov
xchg
adc
fisubrl
xor
adc
add
lret
es
ret
xchg
mov
adc
in
shlb
sbb
outsl
popa
dec
mov
js
stos
test
xchg
cltd
dec
lea
insb
bound
out
aad
cmp
sub
call
push
loop
cwtl
inc
add
cmp
shrl
dec
rcll
fiadds
addr16
dec
test
xchg
pop
repz
inc
add
add
add
lcall
mov
jmp
ss
test
mov
in
xlat
sub
fnstcw
das
push
cmp
adc
cmpsl
xor
test
dec
push
xchg
add
stos
push
xchg
sub
inc
mov
mov
hlt
jp
popf
push
ja
fwait
and
and
add
lcall
clc
fst
hlt
fisubrl
pop
sub
inc
add
fisttpll
sub
pushf
or
in
outsb
stos
arpl
xor
xchg
lahf
jmp
xchg
mov
cmp
pop
mov
sub
ja
mov
sbb
mov
rclb
les
data16
mov
ljmp
xchg
addr16
cmp
hlt
loop
out
std
push
in
test
pop
xchg
jle
or
dec
dec
dec
nop
aad
fildll
jl
ret
stos
stos
lret
addr16
push
sbb
cltd
js
pop
xchg
jb
rclb
leave
inc
mov
adc
imul
cmp
fwait
pop
daa
fldenv
push
inc
add
add
add
push
and
aas
aad
std
shlb
push
cmp
rcll
xchg
cmpsl
sbb
pop
cs
movsb
mov
aas
adc
add
leave
and
xor
add
lcall
xor
std
jo
xor
add
push
ljmp
sub
aam
addb
sub
cs
sbb
inc
add
cmp
xchg
xchg
mov
jns
fisttps
lock
sub
loope
mov
test
js
add
std
mov
test
pop
mov
pop
mov
push
sub
or
or
daa
push
fcomi
mov
xchg
xchg
mov
cwtl
popf
push
mov
addl
sub
adc
add
inc
add
xchg
cmp
ss
movsl
and
arpl
lods
insb
insl
in
rolb
fcoml
adcl
shll
add
clc
inc
testl
push
jmp
mov
inc
sbb
add
pop
sbb
bound
fmull
cltd
inc
add
mov
mov
cmp
fidivs
popa
ljmp
xorl
xor
add
pusha
add
loope
xchg
in
add
popf
repz
add
adc
outsl
sub
cmp
cmpsb
cmp
xor
jns
enter
add
add
arpl
push
scas
movsl
cmpsl
push
push
addb
mov
out
js
dec
pop
sub
mov
cli
xchg
dec
leave
mov
fwait
repz
mov
xor
add
mov
inc
hlt
aam
movsl
push
cmp
lret
popa
sub
jg
dec
mov
sub
icebp
add
insb
scas
into
xor
xchg
xchg
faddp
add
push
cs
mov
test
pushf
hlt
and
xchg
sub
add
insl
pop
into
ss
arpl
xchg
pusha
add
popa
mov
andl
cmp
adc
jo
xor
add
sahf
or
sbb
sub
call
xchg
or
ret
adc
xlat
mov
cmp
movb
add
jge
fsubrs
lds
pushf
in
sub
add
sbb
xchg
push
pop
fisttpl
add
add
cmp
ljmp
dec
mov
xor
add
dec
inc
add
cltd
or
addb
mov
in
mov
sub
lods
xor
adc
insb
xchg
leave
pop
stos
pop
sbb
rclb
dec
cmp
fsubrp
popf
add
sub
mov
test
jg
in
pop
loope
das
pop
popa
aaa
rolb
dec
sti
test
sahf
insb
loopne
sub
and
movsb
sbb
push
ss
ss
lahf
lods
pop
outsb
sub
nop
and
notl
mov
xor
sti
cli
mov
jae
mov
push
pop
and
xchg
dec
jae
xor
push
add
movb
test
add
sub
sbb
push
nop
bound
movsl
out
std
mov
add
cmpps
or
xchg
bound
xchg
nop
addb
iret
shll
cmp
es
repz
add
test
jbe
aad
jbe
or
ret
dec
imul
push
das
ja
fldenv
daa
or
or
or
movb
test
add
mov
cmp
jge
in
xor
fdiv
jmp
in
addb
cmpsb
push
mov
mov
add
mov
jge
lcall
mov
pop
mov
in
add
push
fidivs
adc
adc
mov
mov
add
and
test
pop
dec
mov
mov
es
clc
sub
sti
lock
pop
cmpsl
test
test
jbe
int3
xchg
mov
cmp
mov
int3
cmp
lahf
sbb
outsl
icebp
cmp
cwtl
insl
pusha
add
adc
js
add
add
fcompl
out
stos
pushf
add
into
jge
js
enter
jb
add
lret
mov
dec
xor
pop
ret
push
mov
push
test
add
push
out
jge
out
pushf
add
inc
add
mov
jecxz
push
add
mov
add
or
pop
bound
push
xor
adc
addr16
mov
in
jae
pop
das
lret
loope
add
loop
push
xchg
xor
rolb
mov
hlt
lahf
jle
daa
pop
pop
mov
xchg
jmp
clc
xchg
pop
inc
add
mov
movsb
jo
jmp
outsb
in
and
stos
aam
push
pop
enter
xchg
pushf
sarl
pop
addl
add
add
jne
jecxz
inc
sub
sub
add
jnp
ror
ret
cs
fcoms
mov
xchg
push
sub
add
out
jecxz
ret
lahf
sbb
add
adc
jo
push
xchg
jns
xor
and
sub
dec
mov
sub
imul
push
pop
in
pusha
add
fs
cmp
loopne
js
and
dec
xchg
iret
xchg
jecxz
adc
jbe
push
mov
xor
dec
xchg
outsb
ffree
js
adc
adc
ret
mov
repnz
xor
and
mov
pop
jbe
adc
add
fld
add
aad
cmc
orl
cmp
add
fildl
out
addr16
add
xchg
add
dec
or
out
in
fisubl
mov
rcrl
inc
add
cmpl
es
push
les
int
add
push
jp
xor
out
lods
push
add
test
add
dec
xchg
rolb
sti
sbb
inc
add
pop
mov
ficomps
aaa
pop
adc
lods
stc
stc
xchg
sub
cmp
xor
ss
repz
inc
add
addb
push
dec
arpl
enter
mov
sar
mov
test
jmp
and
leave
addb
popa
aad
sbb
inc
jae
cmpsl
mov
sbbl
pop
mov
cmc
fsubrl
jmp
xor
mov
xchg
jl
jp
std
decl
xchg
popf
push
movsb
stos
cmp
mov
xchg
out
test
xor
into
jno
adc
fs
mov
sub
jns
iret
out
pop
mov
inc
add
sbb
push
adc
xor
inc
pop
cwtl
push
or
cmc
lahf
movsl
inc
add
fs
mov
fsubrp
hlt
cli
push
jbe
mov
pop
push
test
pop
jle
add
imul
xchg
mov
dec
movb
adc
aas
shll
ljmp
bswap
imul
dec
stc
int
ja
dec
or
mov
test
popa
jp
std
push
mov
add
insl
jmp
cmc
mov
jo
das
negb
sub
and
pop
sti
push
into
arpl
sbb
adc
jg
repnz
cmp
pop
enter
dec
xchg
pop
sub
add
mov
push
mov
add
mov
push
pusha
add
xchg
ljmp
xchg
add
add
and
xor
dec
cmp
imul
call
sbb
add
test
aam
add
mov
jp
fidivl
outsb
iret
mov
and
iret
pop
out
sahf
scas
push
sti
xlat
jbe
lea
mov
or
pop
fnop
cmp
jecxz
xor
add
inc
add
adc
push
fs
pop
popa
jbe
in
testb
mov
adc
and
sub
sti
pop
push
insl
ret
in
pushl
add
dec
jmp
ret
push
stc
test
addb
add
stos
push
in
add
pusha
add
adc
stc
inc
add
ret
push
enter
in
add
sub
pop
cmc
sub
pushf
mov
in
push
lret
outsw
jb
fcoms
leave
call
popl
mov
pop
rcll
lods
dec
push
sti
mov
sub
push
jp
sbb
out
ret
pop
stos
xchg
xor
cmp
je
xchg
fs
scas
adc
cld
adc
stos
inc
dec
addb
push
rolb
pushf
xor
xlat
jne
rolb
fistps
xor
add
hlt
pmovmskb
ds
add
adc
mov
mov
mov
jbe
pop
stc
mov
in
outsb
xchg
mov
ja
add
inc
dec
or
push
mov
mov
and
push
sbb
add
clc
xchg
sub
adc
pop
jae
dec
stos
fcmovu
push
xchg
jb
bound
pushf
xchg
add
daa
rcrl
inc
add
add
sbb
dec
movsl
ss
add
mov
addb
cmp
mov
push
jmp
mov
lock
jge
push
pusha
add
push
sub
add
hlt
or
pop
not
outsb
outsl
int3
loopne
cmp
outsb
xchg
cli
lds
ret
inc
fldl
add
pop
push
pop
cmpsl
dec
out
mov
dec
fistpll
int3
stos
sub
rcrl
rol
add
add
or
lods
fmull
in
mov
pop
add
fdivr
sub
cmpsl
inc
push
out
mov
xchg
xchg
push
ret
std
pop
test
mov
sub
std
sti
mov
xchg
push
push
rorl
sbb
test
sub
add
and
stos
gs
xor
jne
mov
test
add
mov
arpl
sbb
adc
ret
cmpsl
iret
or
aam
push
jge
mov
or
jg
ja
out
icebp
int
bound
pushf
mov
xor
and
hlt
pop
pop
dec
xchg
loope
xor
testb
rcr
stos
jmp
mov
pop
xlat
dec
jne
jo
mov
cmc
inc
test
pop
or
lds
ret
mov
mov
jg
mov
mov
add
mov
mov
jo
icebp
inc
mov
fisttpll
daa
das
loope
xchg
cmp
in
movsl
addb
pop
movb
repz
nop
in
rcrb
inc
mov
shll
add
rorl
sub
xchg
xchg
jmp
or
sbb
test
add
or
inc
add
fsubl
dec
push
ds
loop
add
ja
out
jecxz
push
jae
add
imul
mov
pop
and
sar
imul
inc
or
mov
cmp
jl
cld
pop
xchg
adc
inc
add
dec
addb
inc
add
repz
ds
add
fiaddl
push
sbb
add
sti
push
push
rolb
mov
cli
jbe
mov
cmp
repnz
mov
jne
xchg
data16
or
jnp
in
das
gs
xlat
test
add
pop
mov
add
ja
mov
pop
dec
or
cmpsb
ss
add
dec
scas
scas
mov
jle
jl
adc
add
aam
xor
je
jmp
sbb
rorl
add
clc
in
ficompl
sbb
adc
cmp
int
or
fisubs
into
insl
xchg
in
test
jno
addl
lahf
dec
jle
leave
lea
fiaddl
mov
lahf
dec
inc
adc
popf
dec
cmpsb
dec
es
out
dec
push
xor
add
movups
add
pop
or
add
data16
sbb
sbb
fwait
ds
adc
xor
lahf
loope
stc
push
inc
pop
mov
addr16
lods
mov
mov
mov
div
in
xor
ss
jno
cmpsb
nop
loop
pop
sub
pop
push
add
out
sub
dec
xchg
mov
sub
test
jae
std
xor
fs
sbb
aaa
or
hlt
popa
adc
aaa
popa
fistpl
sbb
sub
or
push
dec
imul
rclb
add
movsb
pop
or
clc
fadd
leave
push
int
xchg
xor
xchg
adc
xor
es
xchg
cmp
xor
mov
sub
imul
cltd
xchg
mov
add
add
movsb
test
push
int3
gs
shrl
push
addr16
iret
mov
cli
mov
sbb
sub
mov
add
stos
rolb
xchg
mov
sub
cvtps2pi
popa
inc
add
add
add
cmpsl
addb
movsb
mov
cmp
sahf
movsl
fisubs
insl
mov
jae
bound
jle
dec
add
push
and
scas
pop
push
adc
add
push
xor
jecxz
add
or
fnop
jnp
mov
movsl
fs
movb
cmp
or
add
mov
dec
stos
movsl
ss
loop
in
dec
sarl
cmp
push
mov
imul
fcoml
in
mov
icebp
repnz
das
mov
dec
and
lock
xor
sbb
dec
pop
sub
mov
ffree
add
rolb
out
pop
jb
pop
popa
pop
fs
push
lahf
movsb
add
enter
cmp
aaa
inc
add
xchg
mov
pcmpeqd
mov
mov
pop
outsl
bnd
mov
add
mov
les
xchg
jge
sbb
or
or
xchg
lret
adc
in
insb
dec
cli
cmp
add
imul
sar
nop
push
add
nop
sub
fs
jge
ljmp
add
pop
push
or
push
stc
jbe
mov
repz
nop
jmp
test
bound
dec
scas
xor
stc
jb
cmp
movl
jb
imul
jbe
xchg
test
aad
add
pop
add
stc
jb
imul
add
das
fimuls
jb
add
sub
add
jb
cmp
out
sbb
xor
stc
jb
add
mov
icebp
test
push
stc
jb
add
pop
mov
std
ret
push
mov
xchg
ret
repz
add
pushf
mov
mov
xchg
ret
add
add
mov
stc
jb
imul
sub
cmp
add
pop
add
fisttps
push
pop
add
add
insb
test
cs
out
lods
push
mov
xchg
ret
mov
sub
test
jb
add
add
jmp
dec
add
add
stos
or
nop
jmp
movsb
sahf
das
add
xor
popa
nop
jmp
add
cmpsl
stos
add
mov
add
jmp
add
add
add
add
addb
imul
stc
jb
add
cmpsl
cmp
add
add
nop
jmp
movsb
cmpsl
jo
mov
pop
add
nop
jmp
imul
xor
or
nop
jmp
pushf
sbb
xor
stc
jb
movb
add
mov
push
stc
jb
add
ret
filds
adc
inc
add
popl
cmp
ret
push
mov
xchg
ret
imul
and
stos
stc
jb
add
or
mov
stc
push
nop
jmp
add
cwtl
add
iret
add
stc
jb
jbe,pn
insl
pop
add
popa
add
jb
add
cmp
das
insb
cld
imul
stc
jb
add
inc
lock
mov
sbbb
add
jb
cmpsl
xor
inc
in
jb
add
inc
add
and
push
mov
xchg
ret
add
add
inc
and
stc
jb
cmp
add
outsb
mov
stc
jb
lahf
pop
xchg
and
stc
jb
imul
movsb
pusha
pop
sub
or
jb
add
test
add
cmp
ljmp
mov
add
sbb
mov
xchg
ret
lea
nop
jmp
add
insb
ret
xchg
xchg
sub
jb
imul
add
imul
ljmp
stc
jb
sti
cmp
or
xor
add
das
add
sahf
jmp
movsb
sbb
add
jb
add
mov
les
push
scas
mov
stc
jb
cmp
add
leave
nop
jmp
add
add
add
sar
jb
mov
add
pushl
push
mov
xchg
ret
sti
movsb
add
sahf
sub
stc
jb
mov
pop
add
push
mov
xchg
ret
xor
add
xor
imul
add
add
dec
gs
aas
popa
stc
jb
pop
cmp
add
cmp
mov
xchg
ret
add
dec
xlat
mov
add
jmp
pusha
sahf
add
add
mov
stc
jb
bound
add
lds
add
add
mov
dec
stos
push
push
mov
xchg
ret
add
repz
out
add
add
mov
stc
jb
add
add
sbb
test
jb
add
add
push
nop
jmp
pusha
add
add
mov
jmp
add
add
pop
and
movsb
mov
stc
jb
mov
insb
clc
xor
stc
jb
gs
add
cmp
mov
add
pop
fstl
mov
xchg
ret
add
add
add
inc
add
je
nop
jmp
das
and
add
jb
add
ret
dec
add
mov
xchg
ret
add
sbb
jmp
nop
jmp
insb
incb
add
and
add
jo
das
add
stc
jb
add
insl
add
xor
xorl
inc
icebp
inc
add
cs
pop
push
stos
shl
stc
jb
add
subb
add
repz
pusha
add
movb
into
mov
stc
jb
add
mulb
lea
add
jae
movsb
cwtl
sub
jb
cmp
pushf
gs
mov
stc
jb
add
jecxz
test
nop
jmp
add
add
shlb
stos
xor
push
mov
xchg
ret
lock
xor
movb
push
stc
jb
aas
repz
jo
cmp
stc
jb
ret
mov
sbb
xchg
jl
stc
jb
mov
stc
jb
add
add
stc
jb
sahf
add
dec
mov
sub
mov
xchg
ret
dec
add
mov
sar
jb
repz
jo
add
mov
sbb
jb
bound
sti
aas
add
mov
xchg
ret
add
sbb
mov
nop
jmp
insl
insb
pop
add
stc
jb
stos
imul
ss
rep
stc
jb
pusha
mov
add
stc
jb
clc
add
jmp
add
mov
insl
add
add
stc
jb
clc
mov
addr16
cmpb
add
dec
lock
insl
mov
add
stc
jb
add
lock
push
stc
jb
jbe
mov
mov
add
mov
lret
add
add
stos
iret
mov
push
mov
xchg
ret
add
push
mov
lock
add
add
leave
sub
or
nop
jmp
pop
mov
add
decb
add
add
ret
out
add
orb
add
add
jbe
cmp
je
mov
push
mov
xchg
ret
add
pop
nop
jmp
cwtl
add
sbb
add
pop
add
mov
jb
add
repz
call
stc
jb
insl
add
gs
das
and
mov
stc
jb
jo
cmp
add
movsl
inc
add
stc
jb
add
add
sahf
add
insb
mov
stc
jb
add
add
push
mov
xchg
ret
mov
cmpsb
mov
pop
or
add
pop
pushf
pusha
mov
add
cmc
leave
mov
stc
jb
dec
sbb
lahf
add
nop
jmp
add
insb
add
add
stc
jb
xor
mov
jmp
je
jb
popl
sbb
dec
add
sbb
add
jb
sti
dec
add
sub
pop
and
jmp
and
add
mov
stc
jb
add
cltd
add
stc
jb
add
add
add
mov
adc
push
add
mov
stc
jb
sbb
jbe
repz
add
xor
inc
add
xor
add
fiadds
xchg
ret
mov
loope
cmp
nop
jmp
add
bound
cmpsb
ljmp
jmp
add
add
insl
pop
or
add
mov
movzwl
stc
jb
insb
aas
add
cmp
jb
xor
inc
add
clc
call
stc
jb
cwtl
add
cmpsb
jg
dec
add
mov
xchg
ret
sbb
add
push
stc
jb
add
aas
inc
jbe
cmp
mov
stc
jb
pusha
add
and
dec
mov
adc
nop
jmp
dec
insb
cmp
mov
push
mov
xchg
ret
mov
cmp
xchg
cs
push
mov
xchg
ret
imul
add
jb
test
mov
adc
mov
sub
ret
add
mov
sbb
iret
repz
add
add
loop
aaa
cmp
add
clc
fadds
xchg
ret
test
lahf
add
js
jb
pop
movsb
cmpsl
xor
sbbb
add
insb
add
jbe
add
test
cmp
andb
add
popa
stc
jb
add
jae
mov
add
cltd
mov
nop
jmp
jbe
add
xchg
pop
mov
stc
jb
mov
add
mov
push
mov
xchg
ret
add
mov
and
jb
ret
add
add
and
push
mov
xchg
ret
add
or
add
jb
test
add
imul
stc
jb
add
add
push
mov
push
mov
xchg
ret
xchg
add
and
and
nop
jmp
gs
cmp
mov
stc
jb
add
shl
push
mov
xchg
ret
add
add
idivb
adc
add
das
add
pop
lahf
hlt
clc
mov
stc
jb
leave
add
mov
push
add
stc
jb
das
add
dec
jo
add
push
push
mov
xchg
ret
clc
insb
sbb
mov
add
stc
jb
pop
mov
clc
pop
out
addb
xor
jb
dec
test
add
insb
leave
aaa
mov
sbb
add
mov
pop
das
dec
sahf
add
push
test
add
nop
jmp
add
add
icebp
out
mov
stc
jb
out
add
aas
xor
jb
add
and
add
adc
mov
stc
jb
bound
stos
out
add
lods
add
stc
jb
dec
xchg
add
add
add
stc
jb
add
and
icebp
ds
nop
jmp
xor
add
sahf
mov
jne
stc
jb
add
add
stc
jb
bound
incb
mov
stc
jb
add
cmp
add
add
pop
push
mov
xchg
ret
add
add
in
mov
stc
jb
jbe
dec
dec
add
sbb
inc
and
jb
add
mov
add
loop
push
nop
jmp
cmp
add
add
mov
stc
jb
stos
mov
or
jo
mov
stc
jb
cmp
pop
sub
clc
nop
jmp
add
ret
mov
jo
add
notl
and
push
mov
xchg
ret
out
add
and
inc
imul
add
add
sbb
xor
dec
sub
adc
inc
add
das
xchg
ss
loope
out
mov
nop
jmp
clc
add
dec
pop
add
xchg
andl
inc
add
add
imul
mov
stc
jb
test
cs
add
jb
add
add
add
pop
pop
stc
jb
mov
add
call
stc
jb
add
add
roll
xchg
ret
add
insl
stos
add
mov
or
jb
cmp
add
cmp
add
mov
add
fldl
cmpsb
add
add
sbb
ret
out
mov
jbe
stc
jb
ret
jbe
jae
adc
fldt
imul
stc
incl
sbb
dec
pop
stc
jb
add
add
cmp
nop
jmp
add
add
mov
stc
jb
add
add
movb
mov
xchg
ret
leave
sti
aas
fisubs
xor
add
stc
jb
add
repnz
jmp
add
mov
mov
stc
jb
add
add
mov
stc
jb
add
add
jb
add
add
add
sbb
jb
mov
mov
jb
xchg
dec
pop
add
mov
xchg
ret
cmpsl
add
add
es
stc
jb
add
push
stc
jb
add
add
cmp
pop
add
mov
jb
gs
jmp
mov
push
stc
jb
clc
add
xchg
add
out
push
stc
jb
ret
test
clc
sahf
mov
repnz
mov
stc
jb
add
insb
add
mov
xchg
ret
gs
add
jo
pop
push
mov
xchg
ret
add
add
inc
add
xlat
add
add
add
popl
insb
cmp
jp
leave
nop
jmp
xor
add
movsb
mov
pop
pop
stc
jb
pushf
bound
pusha
cs
add
mov
mov
stc
jb
test
add
dec
add
stc
jb
cmp
loopne
jge
add
andb
incl
adc
sbb
jne
stc
jb
add
inc
ljmp
or
mov
xor
popa
add
jb
add
mov
add
jmp
repz
inc
add
push
stc
jb
add
pop
sbb
jbe
add
icebp
add
mov
xchg
ret
xor
out
loop
push
adc
push
nop
jmp
mov
add
test
push
mov
xchg
ret
add
mov
stc
jb
inc
jo
ret
add
out
popf
ret
dec
add
gs
dec
sti
mov
pop
add
push
dec
jmp
stc
jb
leave
inc
and
in
popa
stc
jb
add
ret
add
add
add
mov
stc
jb
add
add
cs
rep
stc
jb
add
jbe
xor
push
mov
xchg
ret
test
inc
sbb
stc
jb
sahf
add
add
mov
push
mov
xchg
ret
add
mov
nop
jmp
add
add
xor
jb
add
dec
push
stc
jb
repz
add
cmp
adc
test
jmp
pop
insb
add
repz
inc
sub
mov
sub
ret
and
mov
mov
stc
jb
mov
bound
cmp
test
add
stc
jb
lahf
adc
sbb
ja
add
xor
and
pop
add
daa
xlat
xlat
insb
push
nop
jmp
add
cwtl
add
add
lock
xchg
into
mov
nop
jmp
cmp
xor
je
nop
jmp
insb
add
add
add
ds
stc
jb
sti
add
sbb
dec
xor
stc
jb
add
add
xchg
add
test
nop
jmp
mov
clc
jmp
nop
jmp
add
das
add
jne,pn
stc
jb
leave
mov
mov
xchg
ret
lock
mov
jmp
stc
jb
add
stos
mov
incb
inc
add
stos
mov
stc
jb
pop
popl
pop
test
test
jb
add
jbe
push
mov
xchg
ret
cwtl
inc
add
sub
jmp
add
out
add
pop
lret
jmp
pop
add
insl
add
mov
jg
stc
jb
add
mov
add
xor
add
stc
jb
mov
stc
jb
add
sbb
mov
push
mov
xchg
ret
add
add
jb
mov
and
stos
mov
stc
jb
xor
or
nop
jmp
sbb
jbe
dec
xor
nop
jmp
ret
insb
insb
add
jns
dec
sub
jb
add
mov
mov
jb
stc
jb
aas
mov
in
push
nop
adc
or
push
sub
add
cmpsl
mov
mov
nop
inc
add
jae
jmp
leave
add
mov
cmp
sub
ret
add
add
push
mov
xchg
ret
add
add
mov
nop
jmp
lock
and
sahf
test
icebp
stc
jb
add
xchg
pop
add
pusha
add
jmp
insb
add
mov
enter
cmp
jmp
add
dec
subl
stc
jb
pop
xor
or
xlat
je
push
push
mov
xchg
ret
cmp
and
add
pop
stc
jb
mov
mov
repz
jb
cmpsl
adc
add
sbb
mov
adc
jb
add
jbe
stos
add
push
mov
xchg
ret
jo
and
add
mov
stc
jb
aas
mov
sbb
pop
add
add
insb
add
movsb
lret
stc
jb
pop
add
add
loop
mov
stc
jb
cwtl
add
add
add
fldl
xchg
ret
insl
popl
stos
add
pop
stc
jb
jo
mov
jo
add
mov
stc
jb
mov
shrb
push
stc
jb
bound
gs
lock
add
push
inc
add
inc
stc
jb
add
insl
leave
add
xchg
add
rolb
add
add
xchg
add
ja
inc
add
add
insb
jae
movzwl
stc
jb
add
add
out
dec
lea
stc
jb
add
movb
add
jmp
incl
add
sti
mov
jmp
movsb
clc
xor
xchg
cmp
or
push
mov
xchg
ret
add
add
add
stc
jb
repz
pop
mov
stc
jb
add
test
add
push
mov
xchg
ret
add
lahf
sbb
add
inc
add
add
test
insl
pop
push
mov
xchg
ret
add
jo
add
jmp
mov
decl
insl
jmp
mov
add
movb
or
outsl
push
push
mov
xchg
ret
ret
add
add
and
add
add
incl
add
aas
add
lods
stc
jb
sti
lock
add
cmp
cmp
ljmp
bound
stc
jb
mov
dec
movsb
ret
mov
je
nop
jmp
sbb
sti
repz
cmc
inc
add
repz
pop
add
nop
jmp
add
ret
pusha
mov
push
mov
xchg
sub
add
add
add
ss
add
stc
jb
cs
mov
int3
mov
stc
jb
imul
add
stc
jb
stos
add
pop
add
push
lcall
jb
add
sbb
and
jae
imul
loope
stc
jb
pop
add
cmpsl
dec
mov
stc
jb
jbe
movb
pop
lea
stc
jb
add
sbb
pop
jns
xorb
mov
fldl
andb
jmp
add
fwait
xchg
nop
jmp
add
movsb
add
add
jge
stc
jb
insb
mov
call
movsl
aam
add
add
popa
stc
jb
mov
or
lock
add
push
mov
xchg
ret
das
add
add
xorb
add
add
add
imul
stc
jb
stos
add
lock
mov
mov
stc
jb
stos
ret
mov
cltd
add
stc
jb
mov
ret
add
jle
mov
add
jmp
add
add
add
dec
add
stc
jb
mov
mov
mov
xchg
ret
pusha
add
jmp
sahf
pushf
test
repz
sbb
add
jb
add
pop
add
stc
jb
ret
ret
cs
add
je
nop
jmp
add
add
stc
jb
add
sbb
mov
stc
jb
insb
insb
add
push
add
add
nop
jmp
add
add
add
fs
add
mov
stc
jb
sahf
mov
add
clc
add
add
incl
mov
adc
mov
add
add
jb
cs
leave
imul
stc
jb
add
add
out
and
stc
jb
add
pushf
repz
mov
push
mov
xchg
ret
or
add
add
jb
add
xchg
sbb
cld
cmpl
nop
jmp
movsb
add
dec
aas
sbb
add
stc
jb
add
mov
rclb
pop
fildl
xchg
ret
add
pop
loop
add
stc
jb
add
and
out
aam
push
push
mov
xchg
ret
sti
cmp
ret
and
lea
outsl
cli
ljmp
add
les
lea
orb
add
cmpsl
mov
add
jb
add
movsb
andps
xchg
faddl
xchg
ret
cmp
add
add
scas
xchg
stc
jb
add
or
mov
xor
cmp
add
inc
movsb
add
add
sub
stc
jb
add
add
repnz
jmp
insl
add
add
pop
loop
add
stc
jb
cmp
mov
lea
stc
jb
add
sbb
call
add
cs
add
stc
jb
add
sub
adc
add
mov
jbe
add
pusha
add
in
rep
push
mov
xchg
ret
mov
stos
cmp
fldenv
jne
stc
jb
add
xor
add
cs
stc
jb
add
add
repz
mov
xchg
ret
mov
add
or
add
sahf
add
test
add
dec
sub
or
inc
add
xchg
add
jno
leave
mov
stc
jb
gs
jle
mov
stc
jb
das
stos
adc
or
mov
adc
jb
add
add
adc
jb
repz
add
pop
xor
aaa
add
fisubl
jb,pt
nop
jmp
add
dec
pop
jbe
mov
push
mov
xchg
ret
insb
ret
lock
push
nop
jmp
pop
pop
add
xor
cs
mov
stc
jb
or
pop
mov
inc
stc
jb
jo
cmp
dec
add
add
add
jb
clc
gs
gs
jb
add
add
sub
dec
add
jmp
add
add
test
nop
jmp
and
dec
bound
add
mov
stc
jb
add
test
out
cmp
jmp
stc
jb
add
adc
lods
and
imul
sbbb
add
mov
sub
cli
stc
jb
add
add
insb
cwtl
add
scas
cmp
nop
jmp
sbb
add
push
call
add
das
add
movsb
repz
xor
mov
nop
jmp
insl
add
icebp
stc
jb
popl
pop
mov
push
mov
xchg
ret
add
and
add
push
stc
jb
mov
mov
stc
jb
mov
cmp
pop
push
stc
jb
mov
mov
imul
dec
cmp
jb
jae
add
push
gs
stc
jb
cwtl
add
cmp
jmp
add
add
ret
cmpsl
xor
add
or
incl
sti
pop
jae
sbb
clc
jmp
nop
jmp
mov
das
movzwl
stc
jb
movsb
mov
insb
add
add
stc
jb
mov
decb
jmp
test
insb
insl
add
out
fisttps
push
repnz
incl
mov
add
mov
nop
jmp
add
lock
movsl
nop
jmp
insl
insb
dec
and
pop
inc
cmpsl
push
call
fisttpl
add
add
pop
add
add
cmp
jb
sti
jbe
or
add
jmp
stc
jb
inc
add
pop
lea
stc
jb
repz
sbb
sti
add
and
stc
jb
cmp
sbb
add
jae
add
add
nop
jmp
sti
pop
add
add
add
jb
ret
pop
add
and
add
xor
loope
jb
add
insl
add
stc
jb
pop
movsb
stos
add
stc
jb
dec
mov
add
ja
aaa
pop
inc
push
mov
xchg
ret
add
add
loopne
nop
jmp
cs
mov
cmc
leave
test
nop
jmp
gs
and
cwtl
stos
add
push
add
nop
jmp
lahf
clc
pop
insb
out
add
xchg
dec
stc
jb
xor
insl
gs
stos
pop
scas
add
push
mov
xchg
ret
bound
cmp
mov
stc
jb
add
repnz
jne
stc
jb
add
mov
subb
push
out
and
mov
xor
mov
add
sub
add
add
cmpsl
bound
arpl
jb
stc
jb
repz
stc
jb
add
mov
add
stc
jb
add
add
movzwl
stc
jb
xor
add
pop
push
push
mov
xchg
ret
add
incb
cs
stc
jb
sbb
add
stc
jb
mov
add
pushf
pop
decb
addb
add
popl
add
and
push
mov
xchg
ret
add
mov
outsb
stc
jb
insl
add
jne
je
stc
jb
or
cmp
push
nop
jmp
add
lock
push
dec
add
push
mov
xchg
ret
add
pop
mov
push
mov
xchg
ret
add
add
add
nop
jmp
mov
add
add
sub
nop
jmp
sbb
xor
adc
mov
stc
jb
add
pushl
sbb
add
rcll
pusha
stc
jb
pop
ret
add
lahf
add
stc
jne
stc
jb
add
aam
push
stc
jb
add
test
add
add
add
incl
stos
sbb
ret
xchg
mov
flds
xchg
ret
pop
pop
movsb
dec
add
mov
push
mov
xchg
ret
add
outsb
add
stc
jb
pusha
mov
nop
jmp
mov
add
add
dec
and
nop
jmp
add
pop
push
call
stc
jb
xor
int
dec
add
jb
add
mov
pusha
nop
jmp
bound
add
add
jge
stc
jb
mov
add
mov
jb
out
adc
add
cs
add
adc
jb
ret
insb
add
add
xor
add
stc
jb
add
add
imul
or
incl
pusha
jo
add
mov
nop
jmp
sbb
mov
inc
add
adc
cmc
decl
add
add
add
and
stc
jb
add
mov
sbb
stc
jb
sahf
add
add
pop
add
jp
stc
jb
cmp
dec
cmp
pop
nop
jmp
add
mov
lock
sti
movl
mov
stc
jb
xchg
ret
adc
mov
add
push
mov
xchg
ret
clc
add
inc
add
out
in
pusha
add
stc
jb
add
cmp
mov
add
push
mov
xchg
ret
sbb
and
cld
push
mov
xchg
ret
pop
stos
pop
add
mov
add
stc
jb
imul
add
mov
repz
add
mov
cmpb
dec
test
jbe
add
sbb
sti
push
mov
xchg
ret
out
ret
ret
add
mov
xchg
ret
sbb
clc
pop
add
push
mov
xchg
ret
test
add
in
add
add
add
jbe
add
insb
mov
nop
jmp
xchg
mov
test
call
incl
pop
popl
mov
cmpb
decl
add
pop
push
mov
xchg
ret
pop
pop
dec
or
call
add
incl
repz
cmp
mov
in
incl
out
mov
dec
pop
cli
call
stc
jb
dec
adc
cmpsl
cmp
push
mov
xchg
ret
popl
sahf
pop
sbb
mov
nop
jmp
add
mov
mov
stc
jb
sbb
push
sti
incl
add
add
rep
arpl
stc
jb
add
lock
mov
data16
in
stc
jb
pusha
add
cmp
stc
jb
test
or
sub
add
stc
jb
test
out
daa
in
ret
stc
jb
gs
add
cwtl
ja
lea
nop
jmp
jae
add
add
push
and
mov
mov
incl
add
sahf
lock
lret
movzwl
nop
jmp
add
xchg
pusha
add
add
stc
jb
aas
add
add
push
push
mov
xchg
ret
add
dec
gs
leave
je
stc
jb
cmp
mov
imul
add
add
add
mov
nop
jmp
add
dec
movsb
cmp
add
out
and
push
mov
xchg
ret
add
add
jb
add
add
popl
xchg
add
lods
mov
nop
jmp
adc
cwtl
test
push
push
mov
xchg
ret
lock
push
mov
xchg
ret
add
rep
stc
jb
mov
cmp
add
stc
jb
add
bound
push
stc
jb
pop
aas
stos
inc
pop
add
add
nop
call
sbb
mov
add
push
mov
xchg
ret
sti
dec
pushf
das
mov
stc
jb
add
add
cmpb
jmp
and
insb
add
data16
pop
stc
jb
mov
pop
add
add
stc
jb
add
add
imul
inc
add
movsb
nop
jmp
incb
add
mov
add
sub
adc
jb
aas
add
add
pop
pop
stc
jb
mov
add
add
mov
aad
xchg
nop
jmp
or
sti
imul
mov
push
nop
jmp
add
add
add
add
jb
movsb
add
add
xor
stc
jb
add
push
shll
or
mov
xchg
ret
lock
dec
lcall
jb
add
dec
sub
nop
jmp
lahf
add
add
add
repz
or
add
incl
add
add
add
cmpsb
or
nop
jmp
stos
cmp
add
pop
jne
stc
jb
add
add
jb
jbe
cmpsl
mov
mov
call
incl
add
clc
add
cmp
incl
cmp
aas
push
push
mov
xchg
ret
imul
stc
jb
and
add
add
cmp
xor
push
out
pushl
add
jno
push
stc
jb
add
mov
add
popl
cmpsl
cwtl
pop
stc
jb
and
add
cwtl
add
rcl
insl
inc
stc
jb
ret
xor
pusha
pop
and
stc
jb
add
pusha
add
add
jmp
cmpsl
add
add
add
add
add
lahf
push
add
out
inc
add
mov
out
test
add
stc
jb
dec
das
add
bound
movl
push
mov
xchg
ret
add
add
stos
idiv
stc
jb
dec
mov
bound
add
adc
jmp
cmp
inc
pushf
cmp
cs
stc
jb
or
ret
xor
pop
mov
test
fdivr
stc
jb
add
pop
push
stos
cmpw
stc
jb
add
add
stc
jb
cmpsl
add
popl
inc
push
mov
xchg
ret
cmp
sbb
pop
call
lcall
pop
lods
mov
stc
jb
mov
add
add
outsl
add
stc
jb
pop
insb
movsb
add
jmp
mov
add
add
jns
nop
jmp
sbb
add
pop
stc
jb
sbb
sahf
add
insb
movswl
stc
jb
out
cwtl
pushf
cmp
sbb
std
call
incl
add
pop
xchg
inc
out
push
push
mov
xchg
ret
and
sbb
inc
sbb
fcmovnu
inc
add
movsb
mov
stc
jb
cwtl
lock
test
add
jb
jae
add
clc
push
mov
xchg
ret
insb
add
mov
xchg
ret
add
add
add
loopne
stc
jb
adc
sti
mov
nop
jmp
add
add
bound
add
jmp
add
pop
add
add
add
add
adcb
incl
add
test
stc
jb
xor
mov
jb
add
or
int3
hlt
stc
jb
movsb
add
cmp
adc
inc
add
add
add
add
incl
test
mov
mov
xchg
ret
sti
popl
add
mov
stc
jb
add
insb
add
in
jmp
incl
dec
add
cwtl
add
adc
push
jb
jb
dec
add
add
sub
stc
jb
add
cmp
push
mov
xchg
ret
aas
and
xor
popa
add
mov
xchg
ret
add
add
call
stc
jb
leave
xchg
add
xchg
stos
lea
nop
jmp
add
add
das
les
xchg
dec
les
stc
jb
add
add
les
stc
add
nop
jmp
add
add
je
stc
jb
add
adc
jb
xor
mov
push
enter
stc
jb
mov
pop
jp
cmpl
jmp
stos
sbb
jb
leave
insb
add
add
add
mov
jb
add
add
bound
push
stc
jb
add
sbb
pop
je
fistl
in
mov
addb
sbb
gs
into
aas
je
test
dec
mov
add
add
cli
bound
pushf
dec
scas
sahf
iret
mov
dec
adc
or
add
xchg
cmp
shll
and
mov
movsb
jo
pop
or
inc
loop
loop
jecxz
test
jmp
add
out
loopne
mov
fistps
add
imul
pop
or
shlb
sbb
loop
push
jp
and
push
push
sbb
pop
cli
pop
add
inc
add
fcoml
jge
add
sub
sub
xor
nop
xchg
fldcw
pop
fcmovnb
adc
sub
add
xchg
out
js
ret
cmpsb
xor
cmpsb
jge
xor
out
out
cmp
mov
inc
add
dec
scas
push
xor
mov
cmc
push
mov
pop
and
push
stos
pop
mov
std
fbstp
xchg
add
jno
mov
fistps
mov
and
in
xlat
xchg
inc
dec
pop
mov
cmp
cmp
pop
cmp
mov
cltd
lret
mov
add
xor
sub
pop
mov
sub
sub
adc
lahf
shll
cmc
int3
jo
fisubs
les
sbb
in
pop
arpl
and
add
mov
cmpsl
mov
cmp
sub
je
sar
sbb
xchg
pop
jecxz
jnp
mov
xlat
cmp
aaa
push
es
push
shrl
jns
cmp
xor
leave
lods
xchg
movups
int3
sub
cmpsl
inc
xor
jle
add
fbstp
xchg
add
enter
sbb
xchg
in
add
add
and
hlt
dec
xorl
enter
in
lret
mov
pop
adc
and
add
mov
jbe
mov
int3
or
or
push
testl
push
mov
adc
adc
xchg
adc
sub
sub
sub
mov
mov
pushw
data16
add
mov
mov
add
cmp
xchg
rolb
gs
xor
add
outsb
inc
and
sub
sbb
jp
movb
out
cwtl
jp
push
lret
test
xor
jmp
test
into
jmp
add
mov
inc
add
jnp
fisttpll
xlat
mov
xchg
inc
add
cs
add
out
int
pop
testb
dec
test
icebp
cmp
mov
push
mov
arpl
add
jae
pusha
add
add
push
popf
mov
test
std
scas
mov
cwtl
mov
sub
mov
cs
movb
or
add
and
mov
push
fcomps
inc
jecxz
xchg
sub
or
push
sub
mov
fsubs
inc
add
inc
xor
cmp
cmc
fidivl
lods
xchg
lods
ss
lcall
jo
push
fdivrp
xchg
scas
rolb
xor
cmpsl
push
push
mov
cmp
rcrb
arpl
sbb
cmp
push
scas
imul
adc
lea
cltd
jecxz
fisttpl
lret
cwtl
inc
add
popf
inc
add
divl
insb
dec
sub
or
add
add
sahf
jb
cli
loop
bound
pop
fidivl
or
cmp
add
mov
incl
cmp
sub
mov
push
cmp
xchg
adc
sub
xchg
adc
pusha
add
lret
add
mov
jecxz
sbbl
outsl
movsb
sbb
imul
lcall
and
cmp
xor
add
push
movl
cld
aad
add
mov
je
add
rcl
jno
movb
push
fwait
js
dec
les
out
cs
into
in
add
ds
pusha
add
mov
ja
add
adc
fisttps
sub
xchg
movsb
dec
movsb
mulb
js
push
jmp
cmp
mov
sti
test
ljmp
push
and
add
addb
mov
cltd
faddl
jge
dec
inc
jns
dec
and
outsb
icebp
lret
pushf
adc
push
mov
jecxz
cs
cli
int
sub
push
lahf
jl
jl
add
sbb
fadds
inc
mov
lret
mov
jg
add
das
leave
call
add
lret
roll
loope
xrelease
add
jle
push
ret
mov
add
jp
cld
les
testb
lahf
add
cmp
enter
add
fdiv
mov
or
in
or
pop
ret
cltd
push
lds
xchg
mov
push
cmp
add
loope
cmp
fimull
push
xor
adc
or
lods
xor
ret
push
aas
jp
add
push
clc
pop
lret
mov
push
jo
add
xor
and
stc
or
dec
mov
sbb
cwtl
imul
add
cld
and
sub
aad
add
aam
in
test
xor
push
out
pop
outsl
cmp
jne
outsl
lds
ja
mov
pop
test
ret
xchg
jb
add
in
out
push
xchg
cmpl
cmp
pop
lods
sbb
cmp
add
and
jnp
fstpt
mov
push
rolb
mov
enter
daa
cmpsb
xchg
fucom
stc
fsubrl
es
sub
add
mov
sub
clc
test
je
dec
ljmp
and
loopne
adc
adc
mov
and
push
pop
dec
cmpsl
dec
adc
dec
pop
jge
shrb
stc
test
push
gs
rcl
rorb
pop
sub
ret
dec
fs
mov
aas
xchg
out
out
mov
icebp
lods
mov
push
in
inc
add
mov
scas
jno
pusha
add
pop
scas
inc
sub
pushf
leave
mov
xchg
test
enter
js
mov
loope
push
aas
cmp
jecxz
xchg
sub
jg
leave
cmp
inc
add
inc
add
pop
adc
outsb
jl
lock
dec
xor
add
push
and
addb
cmp
call
rolb
outsl
shrl
addb
bound
rorl
setl
enter
stos
fsts
push
mov
pop
lret
sub
and
dec
sbb
mov
mov
out
mov
fs
adc
sub
cs
push
out
cmp
jge
mov
mov
test
gs
adc
ljmp
sti
test
cmpsl
push
mov
scas
sub
stc
arpl
cwtl
cmc
popa
xor
xchg
jns
test
frstor
add
aaa
mov
dec
jge
xchg
cmp
or
mov
outsb
loope
add
lods
lcall
pop
mov
xchg
pop
out
repz
fnstcw
insb
je
ja
bound
push
fsubrs
adc
mov
push
ja
je
rorb
add
cltd
lcall
les
pop
dec
mov
mov
push
in
pop
mov
xor
mov
fsubl
sbb
repnz
addr16
mov
add
ret
loop
jg
add
adc
push
fsubr
int3
rolb
push
cmp
sbb
ja
push
pop
addb
subl
pop
push
inc
add
loop
loop
xchg
ret
and
call
dec
dec
cwtl
imul
hlt
push
insl
xor
or
mov
lods
push
inc
add
jno
sbb
add
push
ret
add
movsl
test
js
incl
icebp
pop
insl
js
push
xchg
cld
mov
adc
stos
insb
bound
mov
dec
adc
in
aaa
push
push
mov
add
xchg
sbb
cmpsl
scas
add
sub
in
cmp
mov
and
testb
push
enter
imulb
push
imul
pop
dec
insb
push
in
sub
pop
shr
into
lea
ss
push
xchg
adc
inc
add
xchg
mov
adc
dec
jg
lea
and
shll
lret
add
sarl
cwtl
imul
add
add
add
lahf
std
jecxz
mov
adc
mov
movsl
add
pushf
mov
in
sar
lcall
jnp
xchg
mov
jp
addb
xchg
lea
pop
xor
ja
cmp
sub
leave
test
insl
and
mov
push
xor
push
add
enter
test
mov
add
imul
mov
add
add
jb
sbb
lods
fiaddl
or
add
jecxz
dec
mov
jecxz
inc
test
aaa
or
pop
scas
lahf
cmp
add
and
sbb
leave
and
jmp
sub
add
mov
mov
xchg
stos
aaa
lds
js
cmp
xor
xor
fxch
mov
add
adcl
cmpsl
fmull
cmp
jl
xchg
rcrl
sub
sti
mov
xor
rolb
outsl
push
sahf
repnz
adc
pushf
pop
sub
mov
mov
testl
fildl
or
or
into
xchg
and
in
cmc
add
and
cmp
add
dec
mov
imul
xor
pop
pushf
cmc
lods
jle
add
pop
and
or
sbb
int3
cli
push
jmp
cmp
lock
fnsave
jno
cmpsl
adc
mov
fcomip
mov
lods
aad
in
jecxz
roll
das
add
ret
pop
xor
jp
inc
lock
push
pop
add
inc
add
xor
movb
pop
pop
pop
mov
xchg
or
inc
jp
jne
dec
pop
mov
and
insl
or
or
cmp
scas
and
pusha
add
into
adc
lods
dec
lret
fs
sbb
add
cli
sub
add
out
sub
ja
insb
jp
or
pop
rolb
out
leave
test
dec
les
dec
jmp
mov
sti
and
push
add
or
fs
mov
jg
addr16
pop
fstpl
jge
inc
pushf
idivl
jne
in
sub
loope
add
sti
mov
jecxz
add
pop
mov
mov
in
loop
xchg
arpl
cmp
or
icebp
pop
inc
cmp
arpl
stc
popa
dec
pop
sahf
pop
dec
adc
ds
inc
add
imulb
sub
and
mov
cmc
fsubp
pop
sub
popa
jp
test
lahf
cmp
push
mov
shl
bound
paddsw
test
pand
fbstp
cmp
xor
rolb
mov
cmc
cmp
jno
mov
push
aam
imul
bound
sbb
jno
scas
or
sub
je
aam
insb
mov
pop
mov
daa
pop
xor
pop
rolb
bound
das
add
cs
cmc
dec
repz
push
sbb
mov
xor
out
in
orl
into
inc
imul
mov
jb
mov
sbb
add
std
int3
cmp
dec
or
scas
ficompl
push
mov
mov
mov
in
mov
add
mov
pop
pop
lret
mov
test
das
out
movaps
sub
mov
addb
loopne
aam
es
xor
pop
daa
into
sahf
lea
pusha
add
pop
roll
cld
aam
push
dec
adc
sbb
add
shrl
xor
fstpt
sahf
sbb
jo
int
adc
mov
inc
add
daa
dec
pop
roll
packuswb
data16
jbe
xchg
in
mov
cmp
pusha
add
xor
int3
iret
das
push
nop
push
push
leave
xchg
mov
mov
fistpl
cmc
shl
pushf
movsb
sbb
adc
stos
rclb
pusha
add
daa
xrelease
in
inc
add
add
int3
aad
arpl
cmp
imul
rolb
mov
or
mov
pop
lret
push
iret
add
inc
add
add
addr16
inc
cli
cmp
pop
roll
sub
pop
push
test
cwtl
ret
stos
movb
add
sub
mov
cmp
insl
jp
aas
mov
std
aam
das
ficoml
in
cmp
fneni(8087
movb
fnstcw
add
mov
xchg
mov
xchg
and
std
and
aaa
xor
adc
xor
xchg
cltd
jle
mov
and
sbb
bnd
add
or
mov
mov
mov
jo
leavew
sbb
std
cmc
movsl
jg
add
mov
cmp
test
xchg
pop
pushf
loopne
test
xchg
movb
sbb
xchg
in
int3
ds
adc
je
and
or
mov
dec
mov
sub
or
js
fdivrl
sbb
cmp
xor
scas
jo
add
mov
scas
xchg
and
adc
bound
fs
inc
mov
dec
cmpsl
pusha
add
cmp
out
or
sbb
aam
ja
addb
or
fists
lods
pop
out
cwtl
mov
pushf
test
cmpsb
lods
sbb
mov
aas
dec
call
cmc
mov
add
mov
mov
or
jle
xor
push
int
jecxz
or
xchg
lcall
ficoml
rcll
dec
popa
pop
out
lcall
leave
nop
or
mov
sarb
sub
cmp
aam
mov
push
jl
mov
jg
jl
lods
rcr
call
js
cld
push
and
mov
lcall
jb
loop
mov
loop
inc
add
ret
in
andl
xor
add
add
push
sub
fwait
ja
sbb
mov
lods
dec
ds
xchg
cli
lods
psubsb
je
mov
mov
aam
aas
enter
push
add
fwait
adc
jecxz
scas
add
pop
xor
pop
es
lahf
jle
jle
jne
lock
push
bnd
scas
cmp
inc
add
mov
sbb
push
mov
shll
pop
or
cmc
in
add
dec
test
add
xchg
or
sub
or
fsubrp
rclb
sub
fsubrl
outsb
mov
or
push
or
push
pop
cmp
sbb
add
loope
cli
or
xchg
xlat
cmpsl
or
add
push
sbb
addr16
aam
paddd
movsl
fcmove
rorl
jbe
lea
mov
adc
mov
or
add
mov
fstpl
xchg
es
mov
mov
mov
test
cmp
pop
push
xorl
sub
push
cmp
idivb
pushf
dec
cmpsl
xor
negl
jb
mov
cs
add
ja
xor
loop
mov
enter
test
insb
test
pop
jp
pop
push
jle
rorb
in
add
retw
inc
and
std
popa
push
dec
xor
fnstcw
push
int3
sahf
pop
out
push
add
add
xor
adc
sub
lock
add
xchg
in
ss
sbb
in
imulb
test
cwtl
add
pop
jbe
sahf
test
sub
add
add
aam
and
or
xchg
imul
xchg
mov
and
xlat
jl
lods
pop
mov
push
mov
add
out
mov
xchg
rolb
jl
je
daa
adc
popf
push
fcomps
cltd
xchg
pop
jp
sar
jo
pop
lds
repnz
sahf
rorl
xchg
call
int3
sbb
inc
adc
jecxz
daa
pop
out
push
sub
jo
add
dec
pop
mov
sbb
add
mov
pop
pop
das
mov
xor
xor
add
lods
jbe
sub
icebp
jmp
sbb
popa
adc
fcmovnb
loope
test
xchg
stos
lods
std
cmp
jns
add
into
adc
jb
mov
pop
imul
nop
adc
xor
cwtl
and
leave
inc
pop
jg
stos
xor
mov
arpl
adc
fadds
cmc
shlb
push
sbb
and
mov
popa
les
gs
push
mov
mov
addr16
xor
inc
add
xchg
dec
fcomps
std
std
cmp
dec
in
mov
rcrl
fldl
dec
outsl
jl
add
and
je
pushf
sarb
ss
mov
clc
bnd
add
sub
rorb
leave
or
push
outsb
xchg
test
jg
arpl
sub
aam
add
dec
add
sub
push
aaa
xor
cmp
pop
push
addr16
pop
imulb
mov
add
push
inc
add
nop
sub
mov
in
xor
and
mov
push
add
pop
sbb
jne
mov
jnp
ret
or
jo
jecxz
in
push
fldt
sub
test
add
xor
xlat
loop
mov
pop
cmpsl
addb
movsl
int3
out
movb
ljmp
roll
cmp
scas
inc
add
xchg
aad
das
out
or
xchg
xchg
scas
pop
and
lcall
pushf
addb
test
pop
mov
cmpsb
pop
xchg
scas
xchg
dec
cld
inc
lock
xchg
fidivl
lahf
int
sbb
xchg
mov
iret
inc
add
jge
mov
and
rolb
rorb
lcall
and
pop
movsb
addb
mov
arpl
push
xchg
fcmovne
vmovsd
dec
sub
dec
or
in
cmp
addb
cmpl
cli
jle
jne
add
gs
sub
mov
inc
adc
sub
lods
mov
jge
jno
addb
mov
add
notl
xchg
arpl
add
inc
add
lret
cmp
dec
mov
mov
sub
fisubs
push
xchg
add
mov
add
fidivl
add
push
adc
call
aas
cmp
jne
iret
or
jg
add
mov
dec
fiaddl
push
add
push
fmull
das
sub
pusha
add
mov
inc
add
cli
xor
cmc
sub
mov
add
mov
out
addb
test
sahf
pop
push
push
mov
jl
lahf
dec
aas
jp
bound
lods
or
mov
add
jns
ljmp
sub
adc
add
dec
aaa
rolb
mov
add
or
mov
sub
sbb
jle
add
fdivr
roll
in
jnp
outsb
dec
test
sub
lds
jp
das
outsb
mov
mov
cmp
in
dec
push
xchg
jge
inc
xchg
mov
mov
and
add
dec
lock
dec
mov
pop
inc
add
jge
mov
sbb
pop
push
sbb
adc
jo
or
test
sub
lcall
hlt
mov
push
add
jnp
insb
inc
add
setb
iret
inc
mov
in
addb
daa
scas
in
xlat
push
cmp
add
inc
add
vucomisd
mov
gs
xor
bound
or
add
addr16
loop
fs
movb
sti
jg
sbb
jle
mov
jmp
add
loope
or
mov
and
cli
mov
cmp
sub
and
sbb
dec
inc
pop
shrb
or
add
sbb
add
mov
int
push
add
mov
lock
ja
repz
cmp
lods
cli
mov
mov
mov
add
mov
push
xor
mov
ljmp
mov
mov
add
outsb
cmp
xor
movsl
sub
lret
fistps
mov
add
inc
add
lret
shll
xor
sbb
jmp
add
add
rcll
je
dec
gs
out
inc
add
movsb
dec
fucomip
push
push
push
lods
mov
stos
test
movb
lret
xor
rolb
sahf
sbbl
or
add
aad
xchg
xor
stc
xchg
iret
test
rolb
repz
cwtl
les
movsb
cltd
insb
pop
shl
ja
xchg
int3
and
clc
jl
jle
add
sbb
jle
dec
and
shlb
pop
rolb
insb
xor
and
hlt
dec
xchg
pop
pop
jns
lds
sub
pop
out
xor
nop
dec
sbb
sub
stc
jecxz
push
outsb
xchg
mov
je
xor
aas
out
enter
xor
incl
add
push
icebp
pop
pop
pop
or
jle
sbb
xor
fstpt
adc
mov
outsb
cmp
cwtl
inc
or
fldl
add
add
add
or
adc
stos
or
mov
adc
dec
fsubrs
and
push
out
rorl
cwtl
jns
add
mov
aam
movsb
add
ljmp
push
push
std
pop
lcall
shr
ret
out
cmp
add
mov
cmpsb
fisubrs
int
scas
lock
ss
cmpl
cmc
sahf
add
fs
mov
jbe
mov
scas
ficoms
movsl
pop
sarl
adc
das
push
in
adc
stos
adc
sbb
jg
ja
hlt
jne
cmpsl
rclb
test
in
cli
jae
xchg
addl
sbb
call
sub
add
dec
and
jns
dec
les
ret
push
add
and
mull
add
dec
arpl
hlt
jns
lea
out
pushf
sbb
neg
mov
add
loopne
xchg
and
add
add
movsb
xchg
pop
mov
outsb
xchg
xchg
add
mov
nop
mov
add
add
xchg
pop
and
xchg
lock
add
add
push
sub
xor
dec
mov
ljmp
push
push
sbb
add
gs
and
and
aam
mov
fistps
inc
repnz
inc
movb
add
ss
add
sub
xor
repz
rcrb
loop
sbb
sub
mov
push
mov
adc
inc
clc
or
adc
add
push
dec
scas
mov
adc
aas
inc
mov
sti
add
xor
push
lds
test
fwait
pop
xchg
sub
cmp
mov
fildl
rolb
mov
push
xchg
sub
mov
pop
fs
and
into
inc
add
push
or
sbb
ljmp
and
call
in
lret
mov
pop
jns
fidivl
lahf
pop
sbb
cmpsl
pusha
add
mov
pop
push
scas
sbb
popa
jnp
jle
add
xor
add
out
outsl
pushf
mov
push
push
lds
or
mov
adc
push
mov
cld
lods
adc
sbb
rolb
js
sbb
rolb
xlat
cmp
mov
je
or
pop
loope
xchg
popl
fnstsw
mov
add
xorl
ret
bound
add
xchg
les
mov
rcr
jns
test
andl
push
or
xor
add
jp
dec
test
sub
fdivs
aaa
nop
out
dec
inc
push
in
int3
loopne
lret
aas
push
scas
cltd
fsubs
ljmp
jae
add
push
hlt
xor
add
xor
das
testl
int
inc
test
xchg
in
test
xlat
lea
stc
in
push
inc
add
movsb
push
adc
cmp
stos
pop
popl
addr16
add
adc
inc
add
and
cmpsb
pop
es
insl
push
jmp
lds
cmp
inc
add
movsl
fildll
int
push
jae
lods
mov
shll
mov
aad
shrl
adc
jp
sbb
cltd
loopne
cld
fiadds
ja
mov
mov
push
cmp
mov
add
ret
ror
push
inc
add
cmpsb
std
int
lret
addb
adc
in
out
repz
mov
cwtl
mov
shlb
inc
push
cmp
add
call
aam
sbb
xchg
addb
das
ret
dec
adc
mov
leave
mov
add
push
jno
fsts
cmp
pop
cmp
inc
push
pop
add
add
mov
js
add
push
mov
cmp
adc
and
cltd
aad
inc
aas
cs
jb
lea
cmp
add
inc
add
adc
and
jl
fst
jno
and
inc
add
clc
in
jne
xor
pop
adc
add
xor
xor
dec
mov
sbb
nop
cmc
push
add
sbb
leave
aaa
lcall
rolb
movsb
adc
or
shll
add
add
clc
mov
pushl
aam
mov
into
and
aas
dec
out
leave
ja
scas
push
loop
dec
push
add
fiadds
mov
iret
dec
pop
adc
jae
loope
ror
je
push
pop
sahf
jns
adc
add
inc
add
mov
cld
scas
xchg
sbb
mov
sub
add
xor
add
andl
mov
or
sub
add
fsts
test
push
fwait
pop
pushf
fcomps
scas
pop
pop
sub
push
ret
xor
or
adc
sub
sbb
adc
pop
xlat
xchg
jae
mov
xchg
and
inc
add
cmp
mov
sub
daa
cmpsl
cmp
dec
dec
pop
push
adc
mov
pop
ret
test
mov
test
jle
cmp
dec
lds
mov
add
add
cmp
add
mov
cmp
push
jno
mov
and
repnz
sub
sub
push
lret
pop
jno
xor
push
jb
cwtl
daa
testl
add
push
mov
loopne
mov
mov
pop
xlat
lds
and
mov
out
jge
jo
inc
add
les
push
insb
iret
cli
dec
adc
jecxz
and
inc
cwtl
mov
fildl
stos
pop
jns
in
call
jbe
lret
in
movsl
inc
add
fildl
lret
xor
bound
mov
xchg
outsb
xchg
sbb
stc
in
xor
mov
add
mov
rcrb
ficoml
and
jp
in
jns
insb
imull
xchg
pop
sti
enter
sbb
add
xchg
repz
mov
shrb
and
xchg
pop
je
sub
cmp
cmpsl
add
mov
push
xchg
clc
negb
inc
and
mov
cmp
xchg
pop
stos
pop
insb
js
fldcw
add
loope
push
xchg
add
test
adc
add
add
pop
nop
addl
dec
push
es
jp
xchg
outsb
push
add
sub
enter
mov
cmc
in
mov
stos
xchg
jno
in
push
sti
adc
dec
push
inc
dec
add
cwtl
adc
add
inc
add
sbb
cwtl
aas
cmpsl
rolb
pop
dec
unpckhps
mov
pop
cwtl
pusha
add
out
jg
stos
push
push
push
jl
add
or
addl
popa
mov
xchg
and
in
loope
outsl
push
add
insl
cmpsb
mov
pop
stos
sub
out
andl
cmc
mov
mov
pop
push
repz
adc
lret
mov
inc
add
xor
lret
pop
sbb
jmp
sub
push
in
fwait
lock
not
push
push
sbb
mov
or
dec
mov
xor
push
dec
xor
shll
xchg
loop
jne
cltd
sbb
fs
insl
rolb
add
test
and
insl
les
mov
xchg
in
pop
notb
out
cmp
stc
pushf
xor
jl
mov
ficoms
xorl
stos
sbb
pop
dec
movsb
or
adc
mov
mov
or
js
adc
add
dec
push
ret
fistpll
cmc
or
stc
aaa
xor
cwtl
pop
add
sub
in
mov
fs
push
dec
aaa
cmp
mov
nop
lds
ret
addb
int
push
fwait
das
stos
mov
in
xor
es
lret
add
push
jbe
sbb
or
add
in
pop
incl
add
mov
movsb
push
add
loope
mov
mov
je
push
cmp
inc
add
adc
xchg
pop
add
lret
xchg
loop
jmp
popf
xor
addb
fcomi
lds
xchg
mov
cld
pushf
movsb
std
jae
push
addb
loopne
pop
mov
rcll
lds
inc
add
decb
outsb
imul
push
jb
fidivs
mov
insl
mov
dec
call
daa
out
lcall
iret
mov
int3
cmp
add
add
std
mov
pop
lret
sbb
inc
xor
mov
ljmp
push
dec
ret
iret
mov
mov
lret
push
push
push
add
fwait
add
cmp
add
add
dec
call
pop
sbb
lods
inc
jo
or
mov
jmp
mov
jbe
inc
add
push
sub
jnp
mov
inc
jle
fimuls
or
sbb
sbb
call
mov
inc
inc
add
jmp
add
add
fwait
jl
pop
lret
xchg
cmp
aad
test
jle
mov
shrb
xor
cmp
imul
inc
cmpsb
mov
mov
add
mov
xchg
jecxz
fldt
loop
sbb
test
scas
bound
mov
lods
pop
outsb
into
or
sbb
jns
sbb
cwtl
pop
loope
add
lods
cmp
dec
clc
cltd
lea
cmc
daa
add
aas
mov
xchg
xchg
and
icebp
iret
clc
adc
xchg
lods
mov
push
fidivs
push
sbb
mov
cmc
cmpsb
lods
and
pop
pop
sti
mov
lahf
ss
push
lds
push
pusha
add
call
rorl
ds
cli
outsl
mov
ficoml
add
add
iret
xor
lea
outsl
icebp
imul
repnz
mov
and
stos
cmc
cmp
xchg
lahf
inc
add
setp
or
mov
insl
sahf
xor
mov
xor
call
xchg
pushf
in
leave
bound
pop
inc
add
pushf
mov
jg
mov
addb
pop
or
sub
mov
cmp
mov
pop
xor
idivb
xchg
xchg
sub
mov
daa
sti
addr16
jnp
add
dec
dec
pop
fidivs
add
push
call
sti
out
xorl
stos
shl
movb
jge
add
jg
and
inc
fsubr
cmp
push
add
ss
pop
and
cmp
cwtl
in
xchg
pop
inc
add
and
inc
add
addb
add
push
aaa
jno
pusha
add
int
add
ret
outsl
mov
ljmp
sbb
inc
add
les
cmpsl
jmp
sbb
or
test
inc
add
push
sti
insl
pop
ds
movb
es
add
xlat
insl
jbe
push
fstps
arpl
sub
dec
or
cwtl
int
xlat
mov
icebp
pop
repnz
dec
push
mov
outsl
jle
stos
xchg
mov
push
out
push
movb
xchg
adc
mov
add
add
aas
scas
inc
add
xlat
in
add
mov
movsb
insl
ljmp
mov
cmp
out
cmp
push
test
inc
add
pop
mov
cwtl
inc
add
dec
xlat
jl
jns
cwtl
inc
fs
pop
inc
rol
add
test
sub
jo
test
ss
add
movsb
fsubr
sahf
decb
or
mov
and
add
test
or
imul
lret
sbb
js
xor
add
xlat
mov
into
in
pop
and
pusha
add
gs
xchg
add
ret
cs
mov
cmpsb
mov
lods
jp
push
add
adc
les
push
ret
inc
add
pop
mov
pop
movb
aas
cmc
push
xchg
fistpl
popa
and
jnp
sub
and
sub
mov
mov
pop
addb
test
out
xchg
ret
icebp
out
mov
add
pop
sub
add
imul
mov
sbb
jmp
cmpsl
sub
popf
js
jns
fs
push
sbb
hlt
pop
vsubpd
cwtl
aad
add
stos
cmp
inc
cmpsb
lret
mov
popa
pop
jg
icebp
dec
xchg
mov
bound
fstpt
pop
pop
out
xchg
add
push
xchg
test
cs
and
call
push
rclb
cltd
fwait
push
sub
mov
and
lods
mov
sbb
bound
es
enter
repz
inc
jle
cwtl
jp
add
fistpll
pop
xchg
xchg
mov
in
jb
jl
scas
mov
imul
cmpsb
in
jl
fwait
es
roll
xor
xchg
lods
daa
sub
pop
push
or
lds
pop
sub
add
xor
dec
jmp
aad
xchg
push
int
fbld
pop
mov
or
lret
add
imul
push
lods
cmp
push
sahf
adc
add
pop
cmp
out
out
mov
add
aad
add
pusha
add
or
cmpsl
add
jl
push
jg
shl
xchg
out
sub
ret
cwtl
jae
insl
insl
mov
cwtl
dec
cmp
leave
xchg
and
cmp
xchg
fistpl
outsl
fidivs
jecxz
mov
mov
loopne
jmp
cmp
fistpl
mov
movb
add
cltd
fistpl
outsl
sub
mov
add
fstp
lock
or
dec
loope
inc
add
push
dec
dec
hlt
add
cmp
popf
jmp
pop
mov
cmp
sub
xchg
ds
mov
fbstp
mov
inc
in
add
out
add
mov
in
insb
or
lahf
jge
into
dec
jbe
mov
mov
mov
push
std
add
cmc
mov
movsl
data16
call
rorl
rep
outsb
mov
pusha
add
push
lea
mov
add
mov
dec
xlat
inc
add
cmp
or
loope
mov
rorb
into
ror
imul
add
sbb
add
add
dec
es
loope
imul
mov
add
add
pop
or
push
jp
inc
add
inc
add
insl
in
jns
loop
std
cs
jbe
addb
push
pop
cmp
and
xchg
jle
jb
pop
add
mulb
int
push
pop
cmc
lock
mov
xchg
and
add
lahf
inc
and
xchg
mov
pop
js
push
pop
push
jns
inc
int
popf
nop
dec
fldl2e
dec
mov
cld
dec
push
aad
dec
pop
int
ja
fs
subl
sbb
xor
pavgw
js
mov
imul
mov
ficompl
rorb
nop
sub
add
imul
fidivl
sub
insl
pop
push
add
fldcw
outsb
aad
cld
and
xchg
jo
ss
outsl
iret
sbb
repz
add
data16
imull
inc
add
lahf
shll
test
rolb
movb
rcrb
clc
clc
ret
dec
lahf
fs
cltd
mov
and
jp
add
rolb
loope
add
add
repz
cli
outsb
adc
push
add
ficoml
aaa
ja
aaa
push
or
mov
push
inc
add
mov
mov
inc
add
inc
add
add
pushf
addb
data16
push
add
cmp
pushf
fbstp
dec
divl
fistpl
jmp
add
pop
xchg
mov
test
pop
cmp
dec
dec
pop
or
sbb
jle
loop
aaa
out
add
orl
ret
sbb
xor
add
inc
sbb
ja
js
out
movsl
stos
lock
mov
das
outsb
jge
sbb
inc
in
mov
inc
add
lods
daa
mov
sub
sbb
pop
rolb
daa
jmp
ss
int
pop
and
mov
push
sub
xchg
or
test
in
clc
and
jne
push
addb
mov
push
adc
scas
mov
imul
cmp
add
insb
gs
stos
pop
pushf
cli
bound
dec
repz
xchg
mov
push
sbb
pop
movsl
jg
fwait
push
jg
mov
jo
xchg
enter
add
add
add
cmpsb
or
fs
scas
sbb
test
gs
loopne
and
jmp
xor
lea
jge
mov
mov
addb
leave
sti
push
pop
and
addb
imul
cmove
pusha
add
int
xchg
test
mov
sub
sub
mov
mov
mov
in
sbb
lods
outsb
dec
or
mov
pop
inc
push
adc
cmp
add
pop
test
in
sbb
inc
add
add
add
add
xor
mov
cmc
fisttpll
mov
in
cmp
inc
add
push
fiadds
mov
inc
add
dec
es
adc
cmp
mov
loop
or
inc
add
adc
ret
sbbl
push
ret
pusha
add
sti
xor
pop
hlt
sbb
jbe
lcall
gs
aaa
cmp
mov
mov
cmpsl
or
mov
scas
std
fnsave
pop
shll
cwtl
sti
cmp
inc
add
cs
adc
push
cmp
and
les
xor
add
test
int3
insl
aaa
addb
mov
pusha
add
or
loope
sub
in
mov
mov
addb
mov
jne
cmp
add
in
test
leave
pusha
add
paddusw
push
addr16
popa
loope
imul
add
nop
fsub
in
xchg
xchg
sbb
dec
adc
inc
aam
or
int
cmp
xchg
xor
add
lret
jne
rcll
movb
add
mov
daa
adc
pop
mulb
add
or
jbe
xchg
sub
adc
in
insl
xor
or
cltd
and
int3
adc
rcll
aam
inc
add
xor
mov
or
and
pop
jmp
int
mov
sub
xor
mov
mov
jno
clc
xchg
iret
xor
outsb
je
negl
icebp
ljmp
cmc
popl
adc
push
scas
cmpsb
jg
addb
push
push
ret
sbb
mov
add
fidivrl
fadds
lret
arpl
aaa
xor
add
mov
and
inc
and
add
xor
call
jg
lock
adc
add
lods
sbb
pop
mov
jns
popf
test
les
add
movl
mov
repz
cmp
orl
cmp
insl
mov
xchg
push
call
lods
pop
pop
or
jno
add
sti
int
movb
add
jg
test
pushf
xchg
jnp
add
mov
mov
lret
shll
out
xchg
test
cmc
aad
test
lea
imul
jmp
sbb
icebp
and
jl
popl
ret
addl
cs
xchg
fcoms
cmp
cs
loop
out
jl
add
sbb
add
push
addr16
mov
std
jl
sbb
or
add
push
xor
movsl
mov
mov
xchg
fistps
aam
testb
lret
and
rcrb
push
mov
cmp
pop
ficoms
pop
jnp
repz
xor
movsl
adc
popa
sub
sub
or
jle
cmp
movsb
out
dec
dec
mov
mov
pushf
loop
gs
sub
shrb
aaa
repz
push
and
jne
je
add
mov
adc
jle
inc
pop
movb
imulb
push
jns
cmp
ljmp
inc
add
test
xor
xor
bound
js
lds
mov
mov
stos
cld
mov
sbb
int3
xchg
xchg
fcomip
jns
rolb
test
sahf
flds
cwtl
stos
mov
call
sbb
dec
int
add
mov
push
add
xchg
inc
xlat
aad
fdivp
mov
fs
pop
pop
shrl
jecxz
dec
inc
addb
xlat
rolb
sbb
adc
add
ret
pop
xor
xchg
mov
lcall
orl
pop
not
push
dec
jmp
xchg
je
push
stos
cs
xchg
sahf
xor
or
xchg
dec
outsb
mov
fldenv
jmp
pop
lret
add
add
lea
in
pop
shlb
mov
insb
sub
push
push
add
aad
pop
popa
xchg
or
or
mov
loop
test
add
ja
xor
popa
pop
xor
adc
add
push
negb
sbb
lret
push
movb
divb
jae
sbb
outsl
xor
push
lock
add
mov
out
add
in
sub
in
or
add
add
cli
mov
lahf
push
xchg
addb
pop
pusha
add
das
add
pop
xchg
sarl
xchg
aad
push
fildll
cmp
call
add
fsubs
dec
shll
fwait
mov
insb
and
mov
xor
aam
mov
aaa
mov
lahf
add
lcall
jns
or
cmp
jp
push
add
cmp
jp
xor
cmp
jns
xor
xor
movb
lcall
xchg
data16
inc
orl
cli
dec
loopne
add
dec
push
dec
icebp
pop
call
push
movb
aam
add
fisttpll
cs
mov
xchg
sbbl
pusha
add
add
stc
push
loopne
cltd
loope
bound
out
addb
and
jle
inc
fmuls
repz
aad
xchg
add
cwtl
sbb
add
adc
dec
mov
test
add
mov
lods
and
repz
dec
rorl
rcrb
dec
cmp
mov
rorl
cltd
cli
rorl
test
cmp
lcall
ds
ja
loopne
sbb
shrb
icebp
add
dec
and
jp
and
loop
stos
lea
adc
mov
mov
add
incl
adc
mov
sbb
into
add
jg
fldcw
xchg
xor
cmc
or
add
jb
lret
movsl
ja
and
cmp
scas
sub
mov
ficompl
adc
sbb
aad
add
jp
aad
mov
jb
add
je
xchg
lret
mov
push
cltd
loope
outsl
bound
mov
xchg
xrelease
fwait
leave
in
adc
pop
sbb
cwtl
dec
pop
cli
and
sub
jl
xor
xor
mov
mov
movsb
daa
test
push
add
dec
sub
inc
add
sti
insb
iret
push
test
icebp
cmp
mov
adc
lret
jl
lock
push
push
fimull
lds
aas
int3
xor
jge
cmpsl
fildl
sub
or
push
inc
add
loopne
mov
jp
pusha
add
push
jmp
iret
lret
add
jbe
repnz
pusha
add
arpl
int3
add
lret
mov
pop
out
mov
xchg
lods
lods
divl
pop
sub
fnsave
cmc
sti
dec
das
sub
push
leave
or
and
mov
in
lahf
mov
mov
adc
jl
or
dec
xchg
adc
mov
insl
insl
das
sar
and
adc
loop
les
dec
cmp
push
add
mov
mov
mov
scas
sbbl
xor
add
sub
inc
xor
pop
idivb
xor
fnstcw
sbb
cli
push
loopne
add
std
adc
pop
mov
lret
dec
sbb
addr16
fcmovne
jo
xor
shlb
inc
in
das
xor
rorb
jno
xor
add
cmp
add
add
mov
mov
test
mov
addr16
add
into
fisubrl
jp
outsl
in
xor
fnstcw
mov
sti
rcrb
cmpsl
sahf
mov
mull
push
into
ljmp
sbb
cmpsb
push
cmp
fiaddl
pop
ljmp
xor
ret
inc
mov
dec
mov
add
pop
cmp
pop
scas
mov
add
rcll
pusha
add
or
dec
push
pop
daa
push
mov
pusha
add
sub
push
inc
aas
aaa
fxch
repnz
mov
movsl
xchg
jno
lods
push
jecxz
movb
add
rolb
test
pop
cwtl
mov
movb
fisttpll
iret
mov
and
sar
mov
enter
pop
sbb
cmp
mov
xlat
outsb
push
jno
mov
add
or
je
decl
sub
sarb
xchg
push
adc
movsl
add
test
mov
ja
popa
xchg
pushf
ds
adc
ret
mov
rorl
or
jl
add
sbb
negl
adc
push
and
pop
cmp
addb
add
sti
dec
pop
leave
out
add
xchg
loop
in
xchg
bound
sbb
lods
mov
lret
inc
add
clc
scas
lods
xchg
pop
sub
sub
cmpsl
mov
add
mov
pop
pop
dec
lods
mov
fwait
test
add
sbb
int3
sub
js
movb
sti
bound
mov
shlb
ljmp
cmpsl
jo
add
jmp
add
xchg
xchg
cmp
adc
xchg
stc
xor
ja
push
aas
fdiv
dec
mov
aaa
imul
jae
add
daa
rolb
inc
or
sbb
imul
mov
int3
push
jo
add
movsb
push
mov
adc
rolb
xchg
pop
add
fmull
mov
push
add
cmp
popf
lahf
adc
cmp
add
push
sti
push
test
sbb
mov
out
mov
stc
mov
ds
adcl
add
loop
add
sub
add
outsl
in
dec
adc
add
and
les
push
and
add
aas
jnp
sub
cmp
or
xchg
dec
out
aaa
xor
movb
add
mov
add
les
push
lret
and
xor
dec
sbb
jo
mov
inc
add
test
test
jnp
mov
xor
and
add
fs
push
mov
xchg
daa
popa
js
add
sbb
lret
jns
repz
iret
pushf
sbb
stc
fdivrs
adc
pop
add
inc
add
mulb
add
imul
pop
hlt
mov
xchg
xchg
jbe
add
mov
scas
xor
dec
sub
testb
lea
out
cmp
xor
outsl
and
add
stc
xchg
sub
sbb
add
jo
popf
pop
push
fmulp
fs
mov
addb
lret
bound
jge
pop
push
movsb
fdivl
add
data16
adc
push
pop
lods
pop
pusha
add
mov
add
out
mov
jb
add
shl
daa
xor
test
stc
scas
icebp
push
add
bound
hlt
icebp
divb
adc
clc
aad
cmp
or
pop
inc
mov
mov
pop
lods
insl
outsb
call
push
out
test
mov
fwait
movq
add
test
add
int3
mov
lods
push
inc
movb
add
cmc
cli
jnp
mov
imul
cmp
mov
push
or
shll
adc
push
mov
incb
fstpt
cmpsb
inc
loop
test
xchg
inc
add
jg
mov
sub
insb
mov
js
inc
insb
fistpl
bound
adc
pop
mov
popl
loopne
cs
lcall
imul
xchg
add
fldl
add
sahf
push
jl
setg
int3
std
xor
lret
xor
sbb
test
inc
loop
and
fidivrl
jmp
movb
push
in
push
int3
rcr
movsl
iret
into
pop
mov
cmp
call
test
jae
lret
std
lret
addb
or
inc
add
add
cmpsb
popa
pop
xlat
inc
ret
pusha
add
fsubr
dec
scas
jecxz
nop
int3
sbb
add
xor
iret
add
cmp
addr16
ljmp
jns
repz
dec
rorb
popa
enter
add
dec
add
jle
sbb
sub
xchg
loopne
adc
rolb
add
pop
add
adc
sarb
lds
mov
lds
pop
sbb
or
xchg
pop
aam
addb
or
or
andnps
inc
das
or
cmpsl
mov
test
inc
add
add
in
insb
xchg
jb
add
fsubrl
ja
out
or
test
aaa
and
add
insb
sti
rcrl
in
shlb
rcl
mov
fwait
sub
add
pop
rcrb
add
add
int
int3
dec
cmp
sub
in
add
xor
jle
addr16
mov
jmp
lods
mov
mov
pop
out
xor
adcl
sahf
ss
gs
add
add
jns
mov
test
aad
mov
xchg
xchg
sub
mov
or
and
mov
fldcw
fdivrl
jmp
jecxz
scas
push
aad
hlt
jo
pusha
add
xor
mov
call
daa
push
dec
sti
inc
add
leave
shlb
in
out
test
push
cs
pop
xor
mov
jle
pop
fdiv
aaa
dec
push
xchg
xchg
add
aas
sti
clc
mov
lret
sar
rolb
lcall
test
cmovl
push
lods
jge
xchg
es
cmpsb
addb
lds
adc
xor
pop
mov
je
adc
imull
enter
mov
in
push
call
sbb
aas
mov
aaa
inc
std
ljmp
lods
push
das
shlb
cmpsb
clc
xor
mov
add
mov
pop
fs
fs
xchg
mov
cmp
cmc
test
xor
scas
push
pop
adc
mull
icebp
lods
lods
dec
es
sbb
cmp
push
xchg
outsb
hlt
jnp
icebp
push
mov
add
sub
fstps
mov
cmp
mov
cmc
ffree
and
add
cmp
popf
mov
test
sbb
xchg
psubusb
add
cmp
ss
dec
xlat
push
pop
or
cmpsb
sub
notl
add
nop
cmp
cmp
addb
ss
dec
mov
adc
add
dec
push
xor
add
add
xchg
push
cli
arpl
imul
popf
addb
pop
addr16
lock
add
sbbl
jno
adc
mov
add
into
test
sar
fwait
mov
or
and
xchg
dec
enter
xchg
xchg
fidivs
dec
jmp
pop
pop
mov
sub
cmpsl
pop
add
movsl
push
push
sbb
decb
mov
mov
aaa
in
mov
loope
cmp
jno
shrb
push
pop
rsm
push
cmp
sub
add
mov
xor
inc
stos
inc
lahf
imul
jmp
mov
in
daa
ror
jo
pop
aaa
cmp
jae
xchg
push
pop
aad
push
fnsave
cltd
shr
movl
sbb
mov
pop
lret
pop
add
sub
ret
dec
icebp
sbb
add
loop
sub
jbe,pn
pop
fucomip
mov
sbb
mov
push
add
add
ret
mov
adc
mov
es
fsubl
add
sub
add
and
sahf
xlat
test
neg
or
add
xlat
ret
pop
sbb
sbb
js
or
dec
push
jp
push
jae
imul
xor
out
clc
adc
inc
add
out
jbe
pop
push
add
dec
lock
sbb
pop
outsb
imul
push
insl
sarb
imul
int
cmp
xor
sarb
mov
jmp
sbb
and
testb
add
push
aad
pop
js
je
add
lret
mov
hlt
ds
xchg
sbb
sbb
mov
xchg
jbe
ss
pushf
adc
adc
nop
dec
je
add
cmp
insl
aaa
jbe
loopne
mov
das
gs
or
fidivrl
call
lret
insb
fstpt
fildl
and
psrad
insb
adc
nop
sti
mov
js
mov
add
dec
popf
xchg
loop
cmpsl
test
or
lds
push
roll
jns
push
mov
popf
fcmove
mov
cmpsl
mov
cmp
mov
pop
in
and
into
xchg
notb
jmp
cmp
push
imul
inc
add
inc
add
mov
pop
mov
ljmp
add
inc
lcall
mov
cltd
stc
mov
jl
loope
xor
push
mov
sub
mov
pop
mov
flds
dec
aas
add
xchg
sbb
adc
sub
fdivr
es
pop
push
push
xchg
negb
push
push
push
cmp
jle
dec
arpl
or
add
rolb
lods
dec
leave
dec
outsl
jbe
mov
jmp
add
sarl
push
nopl
sahf
inc
add
les
insl
clc
or
gs
dec
pop
push
mov
mov
xchg
inc
add
in
bnd
adc
xchg
add
popa
inc
add
sbb
ss
dec
jmp
bound
leave
inc
add
in
dec
lods
lods
je
xchg
inc
add
insl
lret
jecxz
into
stos
pushf
mov
pop
scas
cmpsl
dec
inc
add
pop
xor
movsb
pop
imul
sbb
in
imul
adc
mov
stos
jnp
or
ljmp
add
sbb
idivb
pop
aad
test
push
inc
add
xlat
add
ret
cmc
popf
add
and
sahf
test
sub
pop
aaa
fisttpll
cmpsl
ljmp
out
cwtl
lods
or
pop
mov
jp
test
bound
pushf
mov
mov
lea
test
test
xchg
sub
jmp
push
mov
scas
jb
xchg
dec
add
mov
cmp
push
jnp
outsl
ljmp
fwait
fwait
loope
loop
fidivl
pop
rclb
outsb
add
int3
popa
std
mulb
add
push
ret
pushf
in
inc
xor
fimull
inc
add
dec
std
pushf
cmp
add
or
jge
dec
cmpsl
jns
xchg
mov
dec
clc
daa
aaa
push
and
notl
rolb
iret
xchg
add
adc
cltd
das
inc
jb
mov
or
sub
inc
movsb
loope
outsl
xchg
dec
fwait
aam
adc
xor
mov
fcmovbe
sub
cmc
adc
fstl
add
xor
mov
cmc
scas
push
icebp
stos
mov
add
add
push
adc
fs
mov
fmuls
push
cmp
inc
add
cmp
inc
add
inc
add
imul
pop
idivl
add
cmc
scas
pop
mov
push
push
pop
int
loopne
iret
and
hlt
jno
repz
sbb
cmpsl
out
shrl
mov
js
xor
add
xchg
shr
stos
movb
je
dec
jl
mov
dec
add
imul
insb
scas
lds
sti
sub
xlat
sub
movsl
ljmp
ds
push
add
dec
inc
inc
pop
gs
add
pop
adc
add
into
sbb
and
lahf
cmp
sbb
sbb
stos
sahf
in
push
adc
adc
add
cmp
data16
cmp
xchg
cld
mov
cmp
xlat
jae
xor
cmpsl
sbb
xchg
cmp
jns
mov
inc
add
data16
jae
mov
cld
icebp
cmp
js
add
cld
cli
lcall
dec
adc
and
and
jae
test
and
shll
dec
iret
mov
movsb
xchg
jg
mov
es
jno
int3
mov
xlat
mov
jmp
fucomp
in
inc
or
inc
iret
bound
mov
int3
sbb
imul
add
movsb
fisttpl
and
mov
aad
xchg
jae
add
out
pop
loope
add
add
jg
fidivrl
stos
sarl
add
jl
cmp
pop
sarl
adc
add
jo
push
mov
cmp
inc
xchg
jle
and
push
iret
pop
xchg
and
outsl
lret
cmpsl
in
dec
aad
jns
add
int3
inc
inc
add
shll
add
test
out
mov
sbb
xlat
cmpsb
mov
pushf
insb
mov
stos
xchg
add
push
and
ss
addb
fsubrs
int3
pop
pop
push
add
xchg
mov
push
pop
mov
addb
mov
clc
clc
in
add
es
inc
add
jecxz
hlt
xor
sti
xchg
pop
and
imulb
push
loope
add
sahf
int3
push
push
fcompl
add
ds
or
test
mov
cmp
sub
push
or
mov
add
dec
rolb
aas
out
dec
nop
in
gs
add
or
cmp
icebp
inc
add
mov
int
sbb
cmp
push
dec
push
shl
imul
idivb
fisttpll
add
push
and
test
cmp
mov
sbb
addb
pushl
mov
push
out
fsubp
add
pop
pusha
add
mov
adc
faddl
jo
fcmovnu
lcall
into
ja
sub
add
fdivs
cmpsl
scas
xchg
sub
and
imul
into
mov
rcrb
push
test
add
movsb
pop
pop
pop
push
add
sub
lock
mov
and
add
pop
dec
mov
cmp
cmpsb
xchg
aaa
cli
cmp
popf
mov
sub
add
jno
ja
shll
inc
add
add
add
mov
xor
lahf
xor
xor
add
rol
xchg
rolb
add
dec
pop
bound
hlt
lcall
out
pusha
add
add
fdivrl
xchg
repnz
mov
mov
add
jbe
fistl
add
push
cmp
subl
add
sbb
mov
add
mov
mov
cmp
xchg
mov
or
push
dec
clc
adc
mov
or
cmp
add
push
mov
and
imul
cmpsl
cwtl
fucomp
sar
scas
out
ret
rolb
les
inc
add
add
adc
inc
xchg
incl
jnp
mov
add
out
push
test
stos
pusha
add
cli
adc
mov
xchg
push
sarb
cs
mov
dec
pop
jl
jge
dec
jo
shlb
push
or
add
das
and
sbb
add
inc
push
ss
sarb
pop
fcomps
xlat
daa
stos
push
jl
repz
insl
mov
mov
cld
es
shll
hlt
mov
aas
jp
push
orl
imul
sbbl
fisttpl
add
lret
push
mov
std
insb
mov
ret
nop
ljmp
dec
xor
movsl
mov
mov
scas
add
addb
inc
add
insb
sbb
add
gs
add
or
mov
cmpsb
orl
scas
jmp
bound
clc
xchg
or
out
or
and
mov
mov
jb
test
cmp
stos
lods
push
test
jecxz
mov
lds
je
mov
push
inc
add
cmp
mov
in
daa
inc
in
mov
scas
mov
mov
outsb
adc
sub
and
inc
imul
pop
mov
jge
cs
xor
pop
jns
mov
pop
mov
cmp
push
add
jbe
cmp
add
clc
enter
pop
push
mov
fmuls
push
das
or
add
ror
loopne
xchg
jnp
inc
push
sbb
push
hlt
repz
jb
mov
lcall
mov
push
dec
inc
pop
addr16
das
pop
dec
cmp
mov
fidivrl
and
add
pop
fidivrs
push
mov
add
or
test
in
arpl
scas
pushf
jnp
xor
add
cwtl
inc
mov
mov
add
push
fwait
sbb
push
and
insb
sub
mov
cld
sbb
movsl
rep
movsl
push
addb
add
call
add
add
clc
pop
je
out
enter
cltd
adcl
ret
jnp
ret
pop
cmpsb
cmp
inc
add
ret
cmp
rorb
add
mov
daa
push
push
push
jmpw
add
add
and
test
push
rorl
inc
add
sub
or
mov
out
add
pop
cli
incb
or
sbb
aam
add
add
adc
jecxz
addb
cmp
xchg
lock
adc
mov
jmp
cmpsb
add
add
add
push
pop
dec
dec
jl
push
aad
sub
mov
das
fcom
push
mov
aas
rcrl
cmc
fwait
mov
movsl
push
sbb
xor
dec
inc
push
lock
add
inc
adc
xchg
mov
add
stc
ret
add
scas
dec
imul
mov
gs
add
test
add
pop
pusha
add
movsl
or
popl
inc
add
and
std
pop
mov
add
add
add
adc
clc
ss
add
out
ss
xorl
add
xchg
push
and
add
xor
dec
mov
cmpsb
xlat
lods
inc
add
popa
rolb
fists
mov
jle
mov
xor
fdivs
inc
arpl
xchg
sahf
mov
popa
pop
out
jge
dec
mov
cltd
push
dec
bound
inc
filds
in
sub
punpcklwd
hlt
lret
test
movb
outsb
leave
lret
imul
add
add
test
addb
add
add
repnz
ss
adc
lret
outsb
xchg
int3
adc
or
shl
jns
dec
stc
movsb
imul
add
push
add
push
push
sbb
in
jne
dec
in
lods
call
cmpsb
imul
hlt
sub
add
data16
cmp
add
lds
mov
or
jmp
fs
mov
xor
cmp
mov
hlt
push
add
add
push
pop
xor
mov
jl
fsubl
add
cmp
and
pop
cltd
add
jecxz
add
loope
cmp
in
push
jae
scas
push
addb
xchg
add
clc
and
sbb
adc
out
test
scas
push
fwait
xchg
subl
js
ds
mov
push
add
and
xor
cli
sbb
loopne
dec
pop
inc
add
xor
xor
push
add
add
cli
cmc
jg
lret
mov
mov
pop
xchg
psubusb
test
out
xor
mov
pop
sub
das
or
lahf
sbb
in
jmp
xchg
push
out
dec
loopne
cmp
adc
pop
popa
cmp
and
mov
cmp
mov
add
cmpsl
push
out
out
out
push
sub
jno
fistps
pushf
lahf
cmp
popa
mov
jb
lods
xor
add
sbb
add
push
add
pop
sbb
addb
lret
call
add
ret
fiadds
inc
add
add
xchg
popl
data16
cld
adc
add
scas
das
and
sbb
rcll
push
sub
ret
push
add
jp
mov
and
sub
inc
add
add
xchg
and
sbb
repnz
test
jle
dec
mov
add
fbstp
inc
add
lods
stos
cmc
inc
add
fst
test
sbb
inc
add
leave
dec
and
cmp
enter
mov
data16
add
in
sbb
mov
loop
mov
push
pop
fsubl
add
sub
add
jge
mov
jecxz
es
add
aam
or
mov
call
fisubl
fnsave
enter
call
test
outsl
cmp
or
pop
out
sbb
inc
add
out
mov
les
cltd
sbb
lods
mov
insb
sub
inc
sub
scas
and
mov
jb
dec
sub
add
push
dec
addb
mov
dec
cld
mov
add
ret
sub
sbb
xchg
aas
mov
fwait
addb
cltd
xor
addb
jno
or
fyl2xp1
mov
stos
movb
adc
jecxz
xor
mov
sbb
mov
mov
scas
push
jbe
add
jae
out
ret
lds
shll
or
xchg
outsl
addb
jl
rorb
push
xchg
fmuls
rcrl
or
inc
jecxz
sbb
adc
add
pop
xchg
rorl
cmpsb
lret
jl
adc
inc
add
loop
pop
push
cltd
je
pushf
cwtl
pop
push
test
in
in
je
in
pop
fs
adc
or
pop
mov
pop
popa
iret
sbb
sbb
aam
sub
notb
mov
and
call
add
aas
sahf
push
cmp
iret
aas
jle
or
cld
push
stos
inc
add
mov
movsl
adc
mov
loope
dec
inc
add
push
mov
ficomps
aam
jns
mov
data16
dec
repnz
push
fisttpll
es
aas
cmpsb
mov
mov
jle
mov
mov
rorb
pop
into
push
xchg
xchg
xchg
aas
sahf
mov
les
ja
fwait
mov
or
mov
test
xchg
xor
push
stos
cmp
inc
add
pop
fldenv
outsb
jl
sub
mov
lods
outsl
adc
movb
call
mov
das
sbb
add
push
dec
and
mov
in
xchg
hlt
lret
movsl
pushf
aad
mov
add
jbe
and
dec
or
cmpsb
add
out
lds
in
shlb
stc
inc
or
mov
jbe
imul
cmpsb
lahf
out
repz
cmp
mov
int3
adc
jle
mov
pushf
xor
mov
jge
cmp
or
and
pop
sahf
xchg
imul
in
lds
divb
mov
add
lds
push
add
adc
cmpsl
adc
lcall
ret
sahf
fisttpll
or
inc
imul
add
push
aas
test
test
fildll
inc
icebp
xor
ret
cmp
mov
fidivrl
jnp
and
out
mov
jae
add
aam
jmp
mov
xor
stos
jmp
lcall
pop
dec
push
icebp
stc
fsubrl
mov
sub
enter
stos
cmc
inc
int3
jne
mov
lahf
pop
dec
ljmp
rorb
sbb
out
shl
jb
push
scas
inc
cs
add
xchg
fcomp
loopne
bound
out
iret
push
addb
lods
shll
cmp
inc
add
out
sarb
fsubl
aaa
cltd
stos
adc
dec
jne
add
sub
mov
xchg
dec
and
cmp
icebp
cmp
lods
push
loopne
subl
mov
cmp
add
or
xchg
stos
inc
mov
ja
jae
jge
add
mov
push
test
cmp
daa
jne
add
and
jp
pop
cwtl
sbb
fs
push
mov
rcrb
jbe
jo
fadd
add
rolb
push
out
adc
mov
popf
loope
push
push
je
cmp
inc
pop
pop
rcrl
addl
add
in
add
sub
jo
movb
pop
fs
fdivrl
lock
leave
inc
xlat
mov
add
negb
lcall
add
sbb
divb
xlat
imul
fmuls
loopne
daa
pop
aaa
adc
fcoml
adc
or
daa
std
or
xchg
and
addb
push
mov
xor
mov
std
add
notb
sbb
dec
and
add
mov
arpl
add
lcall
add
mov
xchg
xchg
mov
fldt
inc
add
ja
call
shlb
sbb
sbb
xchg
lods
jmp
pcmpeqw
jmp
mov
arpl
aas
dec
mov
rolb
add
adc
push
adc
jge
imul
addb
ret
mov
jle
arpl
fcmovnb
negl
sub
and
test
add
inc
in
in
pop
lahf
mov
sub
addb
cwtl
shl
adc
mov
pop
es
sbb
out
dec
pusha
add
adc
outsl
jae
and
cltd
es
mov
pop
movsb
pop
xchg
arpl
insl
movb
xchg
das
popf
push
add
push
mov
pop
add
aad
jge
push
adc
loope
stos
mov
dec
fcompl
sub
add
ljmp
js
in
hlt
loopne
dec
addb
dec
pusha
add
lret
dec
insl
jge
aad
sub
sbb
ljmp
push
test
in
pushf
data16
cmp
push
sub
sub
cwtl
xchg
dec
sbb
and
adc
out
in
or
mov
push
cwtl
and
insb
int
imul
xchg
fmull
dec
fldcw
loopne
add
adc
sub
dec
aaa
aaa
adc
pop
lcall
mov
or
daa
in
xor
cld
pop
xchg
or
std
int
out
pop
cmc
jo
lods
hlt
fisubs
movsl
rcll
sbb
data16
jb
pop
ret
rcrb
mov
filds
call
loop
add
fs
inc
out
addb
cltd
adc
popa
mov
out
ds
inc
sahf
jno
xchg
enter
sub
pop
and
bound
icebp
call
push
orl
mov
xchg
or
mov
cmpsb
daa
fadds
rolb
adc
add
rcrl
movsb
pop
insb
sub
mov
dec
in
imul
push
jl
sub
outsb
push
dec
out
mov
push
mov
daa
out
mov
add
cmp
addr16
mov
das
lds
add
xlat
lcall
imul
repnz
daa
xchg
mov
aaa
rolb
cmpl
fstpl
inc
cmp
pop
add
xchg
push
add
push
or
add
scas
mov
pop
mov
les
xchg
cmp
loopne
push
pushf
fdivrp
aad
dec
pop
lret
stos
sbb
fs
dec
xchg
push
int
arpl
jecxz
in
jmp
or
pop
push
adc
jns
add
jnp
inc
add
xor
mov
fnstcw
add
adc
add
adc
fwait
jp
pop
dec
les
jae
mov
add
add
insl
xchg
imul
mov
loopne
in
ficomps
xchg
jmp
rdmsr
lods
ror
mov
xchg
and
add
daa
mov
fbstp
add
lea
mov
std
add
mov
sbb
rolb
ret
ds
dec
and
push
adc
pop
push
sub
fwait
repnz
movsb
mov
ds
jg
cmp
cltd
mov
cld
in
xchg
daa
test
fs
adc
in
repz
xor
std
dec
mov
mov
add
adc
dec
dec
mov
in
fsubl
pop
add
add
cmp
ljmp
in
mov
and
gs
dec
shl
push
dec
mov
fwait
or
add
inc
pop
lret
or
movsb
loop
mov
call
les
inc
add
rcrb
lcall
add
iret
dec
movsb
push
repnz
pop
and
testl
and
jl
loope
mov
jns
xchg
stc
inc
mov
dec
popa
test
das
sbb
pop
scas
sub
dec
jg
rolb
fists
aas
cvtdq2ps
std
dec
dec
bound
stc
mov
repz
mov
adc
pushf
jg
lcall
ja
jp
push
inc
add
add
aaa
lock
dec
dec
mov
inc
add
and
add
and
int3
mov
aas
sbb
pushf
push
dec
mov
movsl
and
xchg
dec
or
mov
mov
scas
stc
addl
sub
cmp
addr16
sbb
lods
sti
clc
xor
arpl
scas
inc
add
add
adc
push
or
pop
cltd
icebp
loopne
sbb
dec
xchg
sbb
orl
xchg
sarl
jae
xor
add
add
mov
jle
jmp
pop
imul
xorl
add
push
je
outsl
or
aaa
inc
add
scas
pop
int
or
inc
outsb
int
add
shl
leave
or
push
sub
bound
push
cld
fbld
adc
les
in
js
add
sbb
lahf
lock
dec
xchg
or
cwtl
bound
aad
add
mov
shlb
mov
movb
inc
enter
add
mov
mov
adc
sub
cmp
pop
pop
or
outsb
shll
jne
scas
hlt
mov
out
cmpsb
mov
hlt
rolb
scas
subl
inc
lahf
push
push
add
inc
jle
add
rclb
push
push
xor
xchg
sbb
cmpsl
dec
adc
jns
cmpl
loop
int3
out
jns
pop
dec
jb
inc
daa
outsb
cmpsl
outsb
or
dec
xchg
rolb
loopne
fiaddl
add
jae
outsb
cld
les
inc
add
xor
or
jbe
mov
pop
cmc
pop
stc
imul
jae
mov
jo
xchg
rolb
mov
add
add
ljmp
jg
ss
dec
out
cli
xor
ja
mov
xchg
mov
ficoml
aaa
icebp
idiv
rorb
sbb
and
cmp
xor
jno
pop
cmp
pop
leave
sti
out
mov
or
sub
rcrl
add
add
jl
sub
inc
leave
cwtl
std
jl
iret
mov
arpl
enter
sahf
gs
aas
push
mov
outsl
repz
dec
out
out
ret
addr16
cmp
inc
jle
cltd
test
sbb
lcall
mov
and
inc
lock
pop
xor
idiv
ds
dec
pop
lods
or
add
mov
add
pop
sub
rolb
xor
js
mov
cwtl
insb
sub
mov
xchg
bound
sti
rcrb
out
add
jae
ds
test
add
add
fwait
arpl
les
xchg
jecxz
fildl
loop
fcom
inc
add
adc
adc
es
sbb
add
sbb
push
xchg
mov
jne
addb
mov
cmpsb
cld
inc
add
in
jne
in
sti
xorl
iret
daa
aaa
test
push
xchg
jbe
push
in
jns
out
xchg
sahf
es
adc
cmp
sbb
xor
inc
add
call
mov
scas
shll
xlat
pop
divl
cmpsb
jnp
test
fisubl
dec
les
xlat
cld
xor
xorl
and
sub
sub
call
push
ret
lret
pop
cld
sub
arpl
lods
aaa
xchg
jae
and
cmc
mov
shrl
hlt
pop
push
cwtl
in
outsb
adc
and
in
or
adc
add
and
cld
arpl
add
pop
out
mov
loopne
int3
xchg
pushf
mov
lods
add
mov
sbb
add
movb
cmc
rolb
ja
arpl
jns
and
arpl
mov
push
mov
mov
pop
cmpsb
fsin
arpl
les
jns
ja
test
add
sub
lret
stc
out
mov
addb
adc
jl
popa
lret
cli
out
mov
add
repz
comiss
pushf
sbbl
cmp
div
inc
add
popf
mov
adcl
xor
jb
xchg
xor
dec
cmc
into
xchg
sub
mov
push
mov
dec
mov
sub
mov
sbb
and
dec
addb
in
push
mov
add
lock
add
pop
add
add
push
es
sbb
ret
xor
out
inc
add
xor
mov
loopne
les
aas
adc
mov
pop
insl
jmp
mov
push
lcall
and
popf
fidivl
shrl
jae
adc
in
stc
mov
cmp
inc
add
push
fmuls
in
stc
stos
push
outsl
push
jmp
daa
mov
mov
jge
or
xor
lea
or
push
sbb
or
fwait
daa
lahf
xchg
fistpll
jae
aaa
in
push
movb
push
fwait
daa
or
jo
adc
dec
adc
add
rcrl
in
out
outsl
sarl
imull
ret
mov
aam
mov
cmp
and
add
pop
mov
in
rorl
or
imul
gs
hlt
aam
push
les
push
les
pop
daa
in
aad
ds
cmp
fldenv
add
pushf
mov
xchg
add
stos
or
add
jmp
aad
push
and
xchg
mov
enter
imul
pop
les
mov
or
outsb
add
mov
test
ljmp
mov
insl
and
shll
sbb
sahf
xor
add
mov
and
rcll
jno
loop
loopne
xchg
sbb
aas
fs
pop
out
arpl
add
xchg
into
divl
or
pop
inc
add
push
nop
jmp
pop
stc
ret
roll
add
mov
lcall
dec
aaa
push
cltd
das
sbb
add
fwait
outsb
bound
data16
mov
sbb
push
push
popf
add
repz
jae
out
add
popa
push
dec
push
lret
scas
pusha
add
mov
xchg
loop
dec
lahf
jnp
sbb
mov
pop
mov
addb
pop
mov
add
addb
add
xchg
rorb
rcll
jne
out
xlat
test
ret
movsl
push
fcmovne
sub
jg
inc
add
adc
pop
cmp
lea
test
in
add
addb
add
dec
bound
int3
pop
and
adc
stos
push
add
add
xchg
in
mov
adc
pushf
cmp
lea
push
or
xchg
shr
lcall
movb
cmp
rolb
mov
push
gs
shlb
insl
sbb
add
inc
add
lods
cmp
nop
aam
sbb
scas
adc
mov
jb
nop
repnz
xchg
mov
in
roll
mov
adc
push
les
ret
mov
mov
mov
in
sub
add
shrb
jp
and
push
icebp
rolb
xchg
jmp
fwait
dec
aaa
push
pop
clc
imul
sub
add
shll
xchg
and
add
add
sti
jp
leave
lahf
lea
add
mov
pop
repnz
add
popa
jne
or
jp
int3
into
adc
mov
jg
shlb
cld
insb
inc
nop
xchg
shll
std
test
add
aam
push
adc
test
loop
xchg
xchg
sahf
imul
adc
into
jle
pop
and
mov
and
pop
out
popf
mov
lods
sub
sbbl
scas
movb
lahf
mov
xor
sub
add
cmp
mov
shr
inc
add
icebp
sub
aam
xor
add
mov
test
xor
mov
push
data16
xchg
jp
push
stos
jbe
sub
mov
xchg
scas
lock
into
jg
jnp
scas
std
addb
mov
push
pop
cmp
mov
or
mov
push
and
mov
sbb
add
lcall
addb
dec
push
jns
gs
add
es
cwtl
push
add
add
push
popa
bound
jne
and
fsubr
in
int3
cltd
push
cmp
leave
mov
fildl
mov
loop
push
cs
aam
mov
cltd
and
icebp
jmp
fcomps
push
mov
cmpsl
in
sbbl
push
xchg
shld
ficoml
pop
int
outsl
push
or
or
dec
and
push
push
or
inc
loope
mov
movsl
mov
arpl
lock
inc
add
ljmp
xchg
imul
dec
xchg
mov
jp
loop
int
xchg
lahf
mov
push
sub
rolb
rclb
xchg
xor
dec
dec
inc
add
xchg
popf
mov
mov
in
fidivl
addb
loop
lods
lret
inc
add
ret
mov
roll
sub
test
dec
clc
ljmp
and
stc
inc
add
rorl
sub
pop
icebp
sub
add
mov
adc
adc
sub
jns
add
test
mov
fstpl
mov
dec
leave
inc
add
mov
mov
das
in
popa
and
shl
ljmp
jns
xor
outsb
mov
add
cmpsl
and
mov
popa
xchg
mov
pop
mov
sbb
mov
add
jmp
dec
sub
sub
or
pop
cmc
loopne
add
push
and
cwtl
xchg
xor
into
jmp
sub
xchg
outsb
add
mov
and
add
lods
outsl
mull
jns
add
shlb
pop
xchg
dec
aam
push
out
enter
cmpsl
popf
outsl
int3
mov
and
xor
inc
inc
inc
add
stos
inc
add
lret
jecxz
xor
mov
mov
push
dec
addb
pop
jo
pop
mov
aas
das
lret
vpsubq
addr16
mov
std
cmp
ret
jle
push
add
push
nop
pop
jecxz
je
sahf
sub
mov
insl
iret
pop
jle
add
pop
es
mov
mov
pop
adc
xchg
aam
xchg
push
out
ret
inc
add
pop
inc
add
mov
cmpsl
mov
add
subl
add
jmp
or
fisubl
add
fsubrl
inc
int3
outsb
mov
lret
mov
ds
push
xor
test
mov
and
fidivs
aad
xchg
mov
std
cwtl
mov
call
cld
push
add
sti
and
cs
test
add
popa
add
push
or
xor
icebp
xlat
hlt
push
xchg
jb
in
scas
mov
repnz
add
scas
addb
add
dec
lret
and
inc
inc
addb
add
ret
pop
stos
jb
pop
lahf
xchg
lret
sti
mov
fsts
dec
jno
fcoms
sub
or
add
add
push
jns
add
imul
sub
push
jle
frstor
es
add
inc
xor
xchg
sub
fistpl
fwait
mov
push
flds
cmc
js
iret
cmpsb
jb
daa
sbb
scas
loope
lahf
and
std
rcll
into
add
xchg
call
jmp
push
and
popf
push
add
and
jno
leave
pop
in
sahf
mov
arpl
and
cmp
dec
push
push
addr16
call
ss
lret
mull
add
jle
jne
adc
add
dec
xchg
mov
mov
push
je
add
out
push
inc
add
in
mov
test
in
cld
cmpsl
mov
mov
mov
ret
loope
not
and
sbb
fstpl
push
mov
jmp
ret
in
dec
ret
add
loope
mov
dec
dec
jl
cmp
outsb
xchg
dec
aam
mov
xchg
push
mov
arpl
and
and
xchg
mov
and
lahf
leave
xchg
data16
push
divb
adc
add
and
and
clc
pop
lods
push
call
stc
and
inc
add
mov
push
jae
sahf
aam
lods
repnz
movsl
adc
and
addb
add
dec
pop
add
mov
cltd
cmp
jl
out
mov
daa
sti
icebp
ret
xor
push
or
ljmp
add
dec
outsb
adc
add
mov
cltd
jnp
je
jp
sbb
jmp
mulb
nop
mov
ljmp
add
dec
push
jne
pop
sbb
cltd
addr16
add
fdivl
cmp
push
pop
push
mov
lret
adc
flds
les
repz
ret
add
js
sub
int
addb
pop
xchg
xor
xlat
add
fs
push
test
add
icebp
and
pop
mov
pop
icebp
sub
out
pop
cmpsb
int3
jns
push
cmpsl
rorl
mov
xchg
dec
add
ret
xchg
inc
add
push
inc
add
xchg
aam
test
adc
jmp
rcll
mov
stos
stos
lea
mov
ds
out
lahf
cmc
dec
jp
mov
cli
aas
mov
xchg
test
cs
sbb
shll
cwtl
hlt
xchg
cld
inc
inc
add
jae
int
xchg
mov
or
push
sbb
and
or
add
mov
xchg
push
rorl
pop
push
xor
add
stos
push
mov
add
ja
cwtl
mov
push
imul
dec
enter
fidivrs
pop
or
inc
add
stc
mov
add
orl
test
adc
jns
jmp
test
sbb
dec
xchg
fcoml
or
subl
push
data16
ret
bswap
je
xor
lods
mov
add
pop
mov
or
mov
testl
out
sar
add
adc
das
cli
lret
sub
adc
and
push
test
inc
pop
stc
or
add
mov
mov
ljmp
xchg
mov
out
insb
xchg
lods
cli
sbb
mov
loop
dec
popf
jecxz
pushf
daa
jge
shr
in
addb
add
add
addb
cs
sbb
dec
adc
aad
mov
cmpsb
jb
and
sub
test
push
out
cmpsb
push
and
out
add
icebp
sbb
mov
pop
mov
jb
test
add
push
add
xchg
push
adc
sti
shl
xchg
mov
les
adc
add
clc
push
sub
popf
loopne
add
imul
hlt
in
mov
ret
mov
mov
addr16
add
into
aam
popf
fcompl
ret
aas
jge
xor
leave
xor
add
add
pop
ds
scas
mov
pop
push
sbb
int3
mov
cmpsl
add
dec
scas
scas
arpl
mov
fisttpl
daa
adc
sbb
pop
cmp
pushf
rcrl
adc
push
decl
fcomip
aad
add
cwtl
pop
sbb
mov
jae
jecxz
add
xchg
aad
movsl
pop
pop
subl
add
cmc
clc
jno
push
add
jp
jbe
cmpsl
repnz
ds
es
dec
inc
add
push
shrb
notl
mov
add
cld
inc
add
dec
push
add
int
adc
shl
addr16
mov
push
xchg
adc
add
ret
jb
add
add
rcll
add
cmp
flds
add
sbb
inc
pushf
lahf
jb
add
inc
mov
adc
lahf
adc
xor
popf
adc
pop
mov
mov
xor
rcrl
or
faddp
add
add
testb
loopne
dec
rclb
push
sbbl
cld
repnz
sub
xchg
shlb
sub
cmp
cli
aad
icebp
enter
decl
repz
outsb
ret
mov
adc
push
mov
popf
out
cmc
shrl
loopne
mov
rol
xchg
xchg
ss
imul
movsl
push
aad
mov
pop
inc
add
in
pop
pushf
lea
xor
add
jno
inc
add
add
add
pop
ret
push
iret
sub
push
cmp
outsb
fimull
mov
dec
dec
cmp
loope
ss
jae
scas
push
aad
mov
add
pop
push
or
xor
xor
addb
inc
dec
pop
pusha
add
add
add
mov
inc
into
xchg
cmp
xor
jae
movsb
mov
fsts
pusha
add
movb
mov
enter
daa
repz
pusha
add
push
gs
in
jg
aas
movsb
jl
cmpl
add
push
sub
pop
aaa
int
in
cmp
loop
add
dec
mov
xor
fnstenv
mov
cld
mov
cmp
js
push
push
adc
aad
and
inc
add
imul
cs
push
inc
add
xchg
adc
mov
adc
xor
add
in
stos
push
pop
mov
mov
mov
jnp
add
nop
call
ja
jecxz
or
mov
or
mov
and
add
cmp
dec
jnp
cs
add
sbb
mov
rolb
pop
mov
fs
gs
dec
jmp
pop
stos
add
adc
jge
or
outsl
test
jg
std
xor
cmp
jmp
add
pop
jo
mov
outsb
adc
ja
sub
aas
repnz
addr16
sti
jb
fucomip
out
or
rcrb
push
adc
push
rolb
xchg
loop
pop
pop
lods
gs
dec
sub
sahf
data16
stos
mov
popa
mov
cld
ret
mov
test
add
add
gs
ret
lret
mov
movsb
cwtl
testb
and
sub
mov
pop
pop
subl
enter
frstor
std
adc
inc
add
adcl
shlb
push
mov
mov
add
mov
add
arpl
xor
add
leave
mov
outsb
xlat
cmp
cmp
inc
add
outsb
jne
add
movsl
scas
les
shlb
fs
stc
xchg
jp
add
lret
mov
lock
aad
addb
pop
cmp
imul
fisubrs
push
rcll
mov
ret
inc
add
leave
int3
jecxz
sbb
jecxz
xor
je
sbb
add
popa
leave
pop
iret
inc
add
stos
dec
hlt
popf
jge
mov
xchg
dec
lahf
cltd
ror
lahf
aad
add
push
in
aaa
fwait
xchg
add
out
push
and
aas
cmp
and
lods
jne
add
aad
int3
xor
popf
outsb
dec
cbtw
xchg
pop
add
adc
cli
ds
add
add
push
cmp
loopne
mov
inc
daa
dec
call
jne
mov
fwait
je
les
sub
ss
add
push
dec
clc
mov
imul
adc
sarl
rolb
inc
add
xchg
fwait
and
and
inc
loopne
and
ljmp
add
call
or
test
ret
mov
add
add
cmp
mov
add
cmp
pop
sbb
fwait
cli
leave
add
sbb
dec
push
xor
jno
or
pop
fstp
popf
pop
pop
lret
mov
xlat
mov
push
orps
stos
cmc
out
add
add
jge
inc
add
bound
pop
or
lds
push
add
jbe
addl
push
adc
jb
aam
cmp
inc
add
jge
cmc
ror
icebp
pop
addb
fisttps
pop
fcmovne
js
out
cmp
mov
add
pop
aam
fwait
jge
mov
aaa
and
ficompl
jge
cmp
dec
adc
jge
mov
xor
and
in
push
or
adc
mov
loopne
jg
inc
data16
jg
out
and
xor
push
cmp
jbe
in
testl
push
mov
pop
pop
or
add
sbb
mov
sbb
dec
mov
and
jo
add
xchg
test
push
jne
int3
jp
add
cld
sbb
gs
fldenv
cmp
push
ljmp
lds
add
add
fisubrl
es
add
lahf
imul
add
add
ret
jo
add
or
mov
fildll
dec
xor
jnp
and
mov
cmp
add
sbb
mov
pop
jns
mov
in
popf
fldenv
jp
and
stc
or
call
push
dec
icebp
xchg
scas
lods
adc
test
xor
fldl
std
mov
jmp
pop
inc
add
sbb
sub
ret
out
jecxz
xchg
fdivr
sub
mov
xor
mov
les
push
cwtl
in
iret
lods
or
mov
inc
decb
xchg
cwtl
pop
loopne
dec
fwait
int
add
mov
mov
push
add
js
push
das
ret
jg
sub
cmp
cltd
dec
sbb
movb
repz
mov
ret
dec
in
dec
fisubl
add
sub
jne
in
add
xchg
jecxz
add
call
add
call
sub
adc
sarl
and
jle
xor
test
insb
pusha
add
in
fchs
or
imull
cmp
push
pop
mov
mov
scas
inc
jae
add
dec
and
mov
jmp
scas
shll
xor
movsb
les
push
sbb
in
data16
cmp
and
pop
imul
jnp
push
movsb
sub
jecxz
mov
flds
imul
cli
rclb
jecxz
test
sar
movsl
and
xchg
and
mov
inc
add
out
add
fwait
nop
cmp
scas
cld
push
stos
or
cmp
or
add
mov
adc
je
xchg
lea
sbb
cmp
dec
adc
lods
mov
cmp
repnz
ds
rorl
cmc
adc
add
jecxz
popa
in
fists
cmp
aas
imull
add
ret
pop
inc
mov
adc
jl
push
xchg
adc
and
mov
inc
add
xlat
jbe
dec
adc
jae
daa
popf
sbb
or
clc
cli
mov
ret
mov
push
in
lds
sub
add
or
nop
dec
pop
inc
add
jb
and
cwtl
jmp
sbb
les
sbb
adc
aas
and
cmc
mov
cmp
test
bound
mov
out
fnsave
mov
mov
test
push
mov
flds
pop
fwait
insl
mov
and
test
insb
mov
les
adc
jne
dec
mov
xchg
pop
mov
ret
dec
sub
pusha
add
mov
jae
arpl
inc
ljmp
lds
cmp
repnz
cmp
or
icebp
or
add
ret
mov
pushf
aad
inc
add
mov
mov
jge
add
jmp
dec
mov
mov
icebp
xchg
aam
and
xchg
jne
add
adc
cwtl
aam
es
pop
cmc
sub
dec
ss
adc
div
xorl
adc
mov
inc
imul
pop
xchg
call
add
test
jo
dec
sbb
pop
icebp
or
cwtl
sub
sar
xor
arpl
xchg
mov
ljmp
mov
int3
shll
scas
mov
int
inc
add
addl
mov
dec
xor
add
into
ja
xor
and
add
mull
add
push
jp
add
and
xor
or
out
pop
add
out
cmp
addl
add
xchg
cmp
cmp
pop
jo
mov
outsl
and
add
add
xor
insb
cmc
sbb
lods
cmpsb
imul
fisttps
dec
ss
mov
ss
add
add
cmpsb
stc
imul
jns
es
add
mov
aad
or
repz
mov
into
stc
leave
rolb
test
push
aas
push
lea
push
addb
dec
repz
inc
add
roll
sahf
cwtl
call
jmpw
imulb
mov
mov
push
daa
push
pusha
add
into
sbb
das
jae
sub
add
aaa
psllw
add
xchg
mov
cmc
popf
arpl
xchg
test
scas
add
mov
cmpsl
pop
add
das
int
jo
cmp
cmc
mov
std
addb
inc
add
push
push
xor
dec
bound
hlt
mov
sbb
xlat
insb
mov
jne
cwtl
xchg
mov
add
cmp
int
jecxz
jne
pop
or
fidivl
int
mov
insb
push
add
test
sti
aam
push
sbb
mov
mov
rolb
fdivs
mov
adc
fstl
stos
je
add
ljmp
fistpl
cmp
daa
cmp
test
or
adc
cmp
movsl
lcall
data16
mov
mov
adc
pop
mov
fldt
mov
sbb
inc
add
lret
push
arpl
inc
add
push
lds
loope
mov
sbb
aaa
imul
sbb
scas
xchg
fs
mov
aas
enter
and
int3
sub
nop
aad
add
fst
in
cmp
inc
add
pusha
add
test
pushf
push
pop
lahf
addb
je
shrb
jge
cmp
shl
and
inc
add
test
stos
movb
xor
in
divb
cs
movsb
aas
mov
loopne
inc
int3
lret
inc
add
lahf
add
jne
aad
fists
push
sub
dec
sti
aas
loop
mov
or
out
lock
inc
sahf
ss
xchg
gs
mov
jecxz
or
hlt
dec
add
mov
pop
lods
push
mov
repz
add
lock
lcall
add
ret
pop
xor
push
and
fsubp
inc
add
aaa
addb
in
dec
fcomps
int
mov
pop
aas
imul
insl
popf
dec
and
xchg
sbb
and
pop
mov
in
scas
jg
lahf
pusha
add
das
push
stos
sbb
lahf
mov
xchg
adc
addb
xchg
sub
dec
test
pop
add
or
arpl
jnp
rolb
xchg
gs
dec
xchg
fwait
sub
push
lds
test
scas
insb
xor
fnclex
and
xchg
push
pop
and
add
int
int3
or
inc
add
add
inc
shl
lret
nop
adc
xor
mov
repnz
les
mov
enter
push
arpl
pusha
add
inc
and
sti
rcll
push
mov
add
add
add
lock
push
jecxz
addb
inc
add
in
sub
jo
xchg
pusha
add
arpl
cmpl
inc
add
pusha
add
push
inc
add
rclb
shrl
cmp
outsl
xor
or
aad
jne
xor
pushf
cwtl
clc
sub
and
sbb
pop
in
pop
push
add
adc
push
mov
popf
pop
fwait
mov
imul
adc
ds
push
mov
ffreep
add
jle
inc
adc
push
cmp
or
cld
imul
loope
mov
cmp
xchg
mov
jl
adc
shr
sbb
cmp
shll
and
mov
xchg
test
jno
sti
cmpsb
shr
jge
pop
mov
push
xor
push
xlat
out
push
aaa
adc
jge
fwait
test
jl
add
push
xchg
data16
rcl
and
add
xor
push
call
leave
je
and
icebp
lret
add
xchg
xor
push
das
sahf
popf
movl
sbb
aaa
movb
push
in
aas
aas
cmp
das
add
into
mov
fcompl
fdivr
subl
cmpsl
sbb
push
push
pushl
mov
jp
fildl
mov
pop
jmp
push
add
add
jbe
mov
sarb
jg
insb
jae
mov
pop
stos
push
les
dec
inc
or
imul
xchg
lcall
addb
sub
stos
test
and
cmp
stc
xchg
test
add
out
add
add
push
dec
jecxz
bound
cmp
fwait
cs
daa
mov
hlt
and
add
dec
inc
les
fnsave
adc
adc
sub
mov
sbb
cltd
mov
push
shrb
add
fldenv
sub
lcall
mov
mov
sbb
mov
insl
jae
push
sahf
cs
movsl
stos
or
mov
clc
xchg
lods
jp
jbe
cwtl
push
sub
cld
mov
mov
xchg
sub
mov
jbe
mov
cmp
push
shrb
sti
mov
mov
add
pushf
sahf
fs
or
fwait
inc
add
add
fstpt
jb
sbb
jo
add
bound
mov
xor
stos
negl
push
cmp
or
push
fwait
insl
cmpsb
push
cli
lret
int3
jo
ljmp
aam
push
add
jne
xor
nop
shll
jne
xor
cmp
int
dec
inc
adc
pushf
jmp
adc
lret
scas
fdivrp
outsb
ficoml
pop
and
les
stos
mov
add
lret
mov
add
and
out
mov
imull
add
mov
push
pop
pop
pop
jbe
cmp
mov
adc
addb
int3
sub
je
addb
push
stos
jns
add
pop
sbb
test
int
sahf
lock
jge
jp
push
xchg
cmp
xchg
pop
rorw
cmp
cmp
dec
mov
add
push
lcall
ret
adc
cwtl
ss
pop
sub
add
add
dec
into
imul
dec
xlat
cmp
pop
and
inc
add
push
aad
ja
jo
jb
xchg
roll
mov
pop
mov
mov
jo
out
push
inc
add
xchg
sbb
leave
das
ret
and
nop
pop
add
mul
sub
sbb
shr
imul
gs
mov
add
fnstenv
cmc
jle
ss
arpl
test
int3
pop
inc
add
add
mov
add
and
sbb
cmc
and
les
inc
xchg
sub
into
repz
nop
xchg
pop
jbe
adc
dec
mov
add
ret
add
and
jb
dec
jb
jmp
jns
add
lods
jmp
fcompl
gs
push
push
pop
insb
pop
and
cmp
pop
cmpsl
dec
icebp
iret
xor
add
add
and
sub
stos
sti
mov
xchg
fiadds
xor
xor
cli
jno
mov
adc
xor
pushf
popa
int3
loope
dec
punpckhdq
add
cmp
je
out
scas
sbb
cmp
xchg
xchg
sbb
or
add
sbb
push
inc
add
xor
sahf
pusha
add
sub
push
int3
sbb
xchg
mov
rcll
loope
dec
das
jp
add
lret
movsl
inc
xchg
imul
in
add
out
fs
pushf
popa
negb
add
lret
insb
fdivrs
add
mov
or
add
jmp
mov
xlat
scas
roll
push
iret
xor
add
add
scas
ja
aas
scas
imul
add
jo
dec
filds
add
shlb
add
xor
fdivs
outsb
and
fcmovb
movl
sub
add
xchg
imul
mov
jmp
ss
pop
aad
stos
pop
popa
adc
push
adc
dec
mov
mov
je
test
adc
and
xchg
adc
arpl
jne
test
out
sub
push
or
movb
mov
ficompl
lret
js
adc
mov
dec
mov
sub
jnp
lods
test
movb
stos
sbb
jns
and
lcall
pop
sahf
sbb
flds
adc
jl
jl
jnp
add
pop
ja
jl
add
bound
dec
mov
jno
gs
ja
add
neg
rorb
mov
xchg
sbb
cmpsb
inc
and
insl
cmp
cltd
mov
and
push
lds
addb
test
and
sahf
mov
sbb
fs
xor
ret
lods
addb
mov
test
add
mov
movsl
inc
add
jnp
mov
mov
ss
sub
sub
lods
jo
dec
or
push
xchg
dec
das
stos
cmp
add
or
scas
pop
jle
pop
pop
movsl
in
test
movsl
mov
xor
scas
pop
jo
lods
mov
es
and
jge
add
add
xorl
mov
mov
xor
ds
ja
push
mov
rolb
pop
mov
push
or
insl
das
loope
sub
movsl
inc
add
scas
jnp
add
add
cwtl
sbb
popa
lahf
push
xchg
mov
mov
std
je
push
add
adc
js
add
cmp
stc
rol
and
push
add
imul
push
pop
mov
mov
icebp
push
mov
add
gs
test
ret
pop
arpl
and
mov
inc
push
dec
push
add
mov
push
loope
cltd
cmp
lahf
pop
adc
pop
xor
aaa
das
or
loope
add
mov
mov
adc
sub
push
adc
shll
jmp
and
xor
add
jns
insl
inc
pop
gs
loope
fdivrs
push
jg
push
xchg
mov
pushf
repnz
add
cmpsl
repnz
fwait
data16
pop
mov
or
dec
daa
movsl
scas
or
jno
xor
add
xor
lods
inc
add
push
cmc
mov
xchg
imul
jecxz
push
or
pop
loopne
xchg
pop
rcrb
pop
subl
out
arpl
and
jp
pusha
add
mov
movsb
xlat
mov
dec
xor
inc
add
add
adc
add
xchg
cli
xchg
xor
test
popf
or
mov
mov
or
outsb
and
mov
cmpsl
add
stos
addb
ret
push
cwtl
daa
addb
je
add
test
or
jnp
dec
jge
inc
add
scas
inc
add
add
or
jb
jb
inc
add
mov
add
insl
dec
pop
in
xor
cmp
rcll
push
sbb
and
add
out
add
or
ljmp
rorl
dec
daa
pushf
push
mov
xlat
sbb
xchg
sahf
fnstsw
aas
xor
test
and
lret
sub
mov
pop
insl
sarb
imul
movsb
arpl
leave
std
add
in
inc
imul
js
ret
dec
adc
xchg
nop
mov
std
mov
cmp
add
add
inc
stos
pop
sbb
dec
arpl
aad
adc
and
adc
sbb
aaa
popa
loope
movsl
adc
xchg
popa
cmpsb
and
mov
cmp
xor
dec
sar
shrb
fmull
addr16
xor
push
xor
arpl
dec
aas
insb
or
rcl
pop
movb
xchg
in
xor
ret
lret
cld
rorl
loopne
clc
push
fwait
ljmp
repnz
or
popa
stos
dec
in
dec
xrelease
hlt
aaa
mov
or
inc
add
jnp
xchg
cwtl
faddl
lahf
int3
shll
sub
inc
add
pusha
add
iret
loope
adc
sbb
mov
mov
jecxz
xchg
push
pop
push
xchg
xchg
bound
mov
out
add
dec
fld1
pop
fcmove
imul
fnstsw
ljmp
mov
hlt
scas
pop
dec
sti
push
jnp
mov
dec
jns
out
inc
adc
and
dec
fsubrl
stos
cmp
inc
outsb
aas
xchg
xor
notb
sub
and
jp
pop
adc
mov
aas
push
add
add
xchg
jno
lahf
or
outsl
lret
movsb
jge
aam
ds
add
pusha
add
ret
pop
mov
fisubrs
adc
cmpsb
and
push
test
pop
test
jno
and
push
or
into
xor
lcall
mov
push
jo
jg
push
call
cmpl
add
popf
push
mov
ljmp
jp
cmc
xchg
in
aad
jl
mov
add
pop
aam
inc
repz
push
ja
repnz
shr
out
dec
push
addb
lret
push
call
adc
mov
ret
test
jns
adc
xor
out
mov
ds
cmp
ffree
rol
jmp
gs
mov
insb
shrb
add
mov
mov
push
and
or
mov
sbb
add
fmull
or
xor
cmpsl
aam
xchg
cwtl
je
addb
outsb
out
fidivrl
add
ss
jo
push
addb
add
add
mov
fisubrs
sub
adc
cmp
daa
loopne
add
std
subl
xchg
cvtps2pd
dec
sub
in
mov
fbstp
xorl
or
rep
sarb
adc
sbb
dec
and
popa
repz
add
mov
mov
repnz
adc
xchg
daa
mov
dec
sub
add
sbb
or
out
stc
mov
aam
sbbl
movsb
sbb
int3
fdivrl
icebp
cltd
int
mov
add
loopne
adcl
jns
add
ret
fdiv
aas
pop
sbb
inc
sub
bound
dec
sub
mov
loope
add
push
dec
lcall
loop
clc
add
fs
fprem1
mov
movsl
in
nop
aas
and
adc
or
push
leave
shr
popa
leave
push
pop
movsb
repz
lds
lea
push
movsb
or
test
inc
push
jb
push
int3
sbb
and
mov
lret
push
push
jo,pn
add
jge
repz
hlt
in
call
adc
lret
lcall
lahf
sbb
mov
in
inc
add
adc
call
add
daa
sti
test
lret
loope
jnp
sbb
mov
subl
pop
aaa
gs
fs
mov
pop
dec
mov
hlt
mov
xchg
mov
mov
cmp
in
sbb
cwtl
jno
fstl
or
add
add
pop
iret
sahf
incb
adc
fsts
out
mov
dec
push
cltd
adc
rclb
gs
mov
ret
sub
mov
push
pop
loope
xchg
fadd
jne
inc
add
sub
hlt
jae
loopne
push
add
std
ret
mov
add
imul
add
pop
mov
hlt
pop
shr
shll
xchg
or
ja
cli
jge
add
sti
or
inc
icebp
pop
movb
sbb
dec
xlat
cld
xor
scas
and
imul
mov
out
push
insl
dec
lods
xor
clc
movsl
adc
pop
add
pop
dec
cmp
or
mov
jp
and
sub
test
insb
test
cld
cmp
movq
dec
dec
hlt
mov
jb
add
testb
dec
or
in
or
mov
push
push
rolb
add
xchg
stc
insb
movsb
add
imul
cmp
movsl
or
pop
and
or
out
addb
mov
test
dec
out
push
fisttpll
inc
add
lcall
lods
or
cs
jno
mov
add
stc
jne
mov
push
push
daa
rolb
dec
adc
cmc
xchg
adc
incb
inc
sub
das
rol
add
xchg
sub
lret
or
sbb
sbb
jnp
lret
lcall
inc
add
add
pop
jmp
cld
mov
rcrl
xchg
out
jl
lcall
mov
cwtl
lahf
rolb
add
pop
jne
add
call
frstor
push
pop
scas
mov
call
mov
sub
sbb
aam
add
cmp
movsl
int3
or
xor
mov
daa
lcall
cs
add
aaa
icebp
cmp
jmp
aaa
jnp
lcall
add
jo
cld
cmp
mov
mov
addb
cld
sbb
lret
jnp
jno
addb
jae
test
push
je
push
mov
enter
xor
movsl
sbb
ljmp
add
mov
stos
out
jge
dec
mov
rolb
add
inc
add
fnstsw
or
es
push
jp
testl
mov
int3
pop
lcall
fwait
inc
lock
jg
add
sbb
add
pop
fdivr
sub
pop
mov
mov
std
outsl
shll
cmp
stos
jo
fildl
add
sarl
xchg
mov
lods
mov
xchg
dec
flds
cld
cmpsl
aad
jns
add
mov
push
add
mov
into
mov
pop
xor
push
inc
add
or
lods
and
ret
fwait
pop
xor
and
mov
xchg
aad
test
movsl
xlat
sbb
push
adcl
fbld
mov
or
cmpsl
stos
in
cmp
fnstsw
adc
rorl
push
mov
shll
stos
adc
pop
and
scas
lods
std
or
add
mov
or
push
ss
push
mov
ficompl
into
push
xlat
xchg
sub
pop
push
sbb
jo
hlt
jle
mov
mov
cmp
movsb
cmpsl
xchg
cld
movsl
ljmp
dec
cmpsl
inc
xor
mov
out
cmp
lret
jns
cwtl
imul
mov
jmp
mov
push
iret
xchg
pusha
add
inc
add
xor
es
std
sbb
movb
dec
dec
mov
add
xlat
sahf
pop
xchg
mov
out
addr16
xchg
xor
out
and
xchg
xchg
sarl
xor
call
or
pop
addb
ja
add
les
or
mov
aad
add
pop
bswap
xchg
sub
sub
mov
fidivs
leave
push
push
aas
or
sahf
mov
insl
test
push
add
add
ja
jge
in
testl
lods
outsl
mov
xor
mov
rolb
add
lret
cli
movsb
inc
inc
dec
jecxz
je
mov
into
push
pop
mov
or
xor
xchg
lods
adc
lea
add
or
add
or
pop
sub
idivb
shrl
jns
mov
add
mov
lret
inc
add
cltd
sub
fs
les
pop
mov
dec
push
lods
loopne
lret
insl
dec
lods
fs
push
sub
add
add
stos
or
jmp
in
mov
mov
out
add
fmul
pop
out
cld
lcall
add
mov
pop
ds
push
mov
pop
jne
rolb
cmpsl
xchg
inc
add
mov
addb
push
xchg
pop
mov
imul
mov
mov
sub
jnp
popa
jb
dec
mov
cli
mov
dec
dec
cmc
inc
aad
cmp
adc
jns
sub
daa
fs
mov
cmp
call
mov
add
push
movsb
mov
aad
and
cmpsb
or
jge
testb
add
sbb
or
rcll
add
push
push
xchg
pop
and
xchg
outsl
mov
jae
push
mov
cwtl
adc
pusha
add
dec
iret
pop
loope
cwtl
popf
lock
repnz
js
das
out
dec
xchg
cli
sub
jl
clc
or
sub
push
xor
rolb
fldcw
or
add
imul
ret
push
pop
mov
xchg
test
jnp
and
and
ficoml
or
stos
stos
add
sbb
adc
jb,pn
add
movsl
pop
setle
pop
mov
fs
dec
cmpl
pop
les
gs
xlat
lock
aad
mov
add
add
ja
les
sub
outsb
push
into
and
data16
dec
add
outsb
lret
push
pop
movsw
or
pushf
bound
add
stos
testl
and
xchg
push
add
sbb
mov
jae
xor
enter
push
loop
gs
xchg
rorl
cmc
mov
jg
xchg
xchg
pop
cmp
pusha
add
test
add
sbbl
pop
stc
pop
add
cmpsl
cld
push
add
divl
nop
inc
cmp
ret
push
bound
mov
lret
ja
inc
xchg
adc
cmp
adc
dec
xchg
inc
add
imul
lahf
imul
mov
push
xchg
notb
cs
je
mov
dec
jno
xor
popf
imul
das
mov
in
jp
cli
mov
add
or
add
addr16
adc
nop
push
cmpsl
lcall
in
inc
stos
movb
add
in
shrl
add
push
fnstenv
aam
dec
adc
lods
and
subl
pop
data16
mov
jbe
imul
test
xchg
mov
push
cld
lods
fdiv
xor
dec
loope
or
pushf
mov
dec
and
bound
add
dec
sub
js
push
addr16
imulb
add
jo
mov
add
or
inc
add
cmp
outsb
inc
add
into
movsb
adc
movsl
in
mov
inc
jo
adc
mov
pop
movsl
leave
repz
add
aam
inc
add
sbb
or
jmp
xchg
imull
push
icebp
xlat
rcll
iret
and
add
ljmp
cwtl
fs
pop
loope
fdivrl
pop
cld
cltd
cmpsb
arpl
xchg
test
push
inc
add
mov
and
sub
mov
aad
push
repz
mov
insb
test
add
inc
add
in
xor
popf
push
mov
or
add
out
fwait
fbld
cld
jno
cltd
subl
push
addb
add
sbb
movsb
popa
imul
mov
mov
int3
insb
enter
jge
jp
in
or
mov
sbb
xchg
stos
inc
add
enter
and
jl
xchg
push
add
push
les
iret
rolb
mov
add
int
movl
jge
push
icebp
orl
cli
mov
sub
shl
push
insl
add
das
mov
ror
into
fbstp
bound
pop
and
adc
adc
mov
inc
add
scas
xlat
addb
decl
xor
les
mov
sub
mov
jb
push
sub
jno
mov
pop
or
negl
jg
add
fstl
push
and
fwait
pop
and
jmp
pop
push
mov
xchg
push
and
adc
cmp
mov
dec
mov
pop
dec
fcompl
mov
xchg
adc
repz
jecxz
shl
scas
sbb
xchg
int3
cmp
xchg
xor
jle
daa
mov
xchg
inc
dec
inc
add
add
ficomps
push
into
cmpsb
and
or
out
pop
pop
add
cmp
insl
cld
vdivsd
add
ss
cmp
jge
ret
insb
loop
jno
adc
xlat
fsubp
inc
cmp
hlt
cs
mov
rcr
mov
inc
in
int3
mov
addl
fiaddl
ret
aam
mov
add
and
arpl
jg
pop
cmp
out
test
aam
out
nop
mov
lea
or
repnz
inc
movsb
sub
inc
add
test
pop
lea
sbb
stos
fbld
iret
sbb
inc
mov
add
cmc
insb
xchg
mov
mov
testl
lods
jno
cwtl
mov
jbe
jnp
add
sub
push
pop
or
shrl
push
hlt
sti
adc
pop
pop
enter
in
xor
add
xchg
outsl
mov
sarl
mov
addb
inc
add
cmp
loop
cmp
pop
or
add
add
fldt
inc
dec
add
repz
pop
jmp
add
jno
pusha
add
mov
xchg
inc
mov
add
mov
inc
and
inc
in
in
loope
xchg
xchg
xchg
mov
or
add
cmpsb
sub
test
add
sub
mov
xlat
dec
pop
imul
in
into
xchg
and
mov
fnsave
add
push
pushf
addb
xor
sar
mov
mov
fwait
mov
jecxz
mov
in
vcvttpd2dqy
adc
pushf
mov
push
inc
add
add
xchg
cmp
in
dec
and
ret
xchg
sub
jae
add
dec
xor
ret
popa
pop
mov
or
mov
insb
mov
add
inc
fildl
fisttpll
xor
mov
inc
in
or
sbb
xor
push
addb
add
jmp
int3
adc
les
scas
pop
fxch
sub
popa
push
mov
outsl
and
pop
fnstcw
fs
sbb
add
stos
mov
jae
sahf
mov
jge
xchg
fldl
sbb
pop
add
adc
xchg
dec
popa
mov
inc
les
cvtps2pd
xchg
enter
add
add
addb
nop
addb
scas
stos
sub
and
push
lret
jg
test
dec
inc
add
das
adc
cltd
push
adc
jle
sbb
xchg
push
cmpsb
sub
shrl
nop
inc
push
add
add
loope
and
les
or
jb
mov
inc
jmp
mov
or
jp
mov
sub
sbb
mov
cld
aas
mov
mov
mov
sub
mov
sbb
ficomps
jb
sub
mov
sbb
shrl
pop
outsl
mov
rcrb
jl
insb
cwtl
mov
cmp
add
das
aad
sbb
iret
out
push
xlat
jnp
jp
je
inc
add
pop
jbe
add
movsl
push
cmpsl
and
lods
jl
aaa
test
fldl
pop
add
aaa
lret
movsb
pop
cmp
outsl
xor
add
enter
mov
popa
jle
repz
add
bound
cmpsb
dec
cmp
add
aam
scas
push
fldl
jge
mov
in
add
xor
inc
push
sbb
add
jae
frstor
add
jne
icebp
and
lock
inc
jnp
mov
dec
jmp
cmp
shrl
and
imul
scas
cmpsb
imul
sbb
jno
pushf
fsubp
and
and
inc
and
push
sbb
ret
ja
stos
loopne
push
push
inc
add
push
add
dec
test
push
pop
pusha
add
daa
arpl
add
aad
adc
add
add
fcomps
cltd
sbb
into
repz
mov
jecxz
out
test
lods
ss
add
add
stos
data16
stos
add
mov
push
cmp
sbb
js
test
dec
dec
loop
add
arpl
call
test
jp
dec
ljmp
xor
ljmp
out
push
pop
add
rolb
ret
addr16
in
mov
inc
into
bound
xor
mov
aas
hlt
mov
inc
add
jbe
out
jl
add
adc
int
push
inc
add
sbb
mov
dec
sbb
test
mov
test
jns
add
push
inc
xor
imul
shll
lds
mov
mov
mov
and
ret
and
ljmp
mov
pusha
add
loop
popa
and
add
xchg
inc
add
mov
add
cmp
dec
outsb
movsb
pop
rcrb
sbb
clc
sbb
xor
ljmp
ds
jle
sbb
scas
movsl
bswap
jg
add
or
dec
push
enter
out
jge
pop
sti
mov
int3
inc
pop
xor
cli
loopne
mov
call
das
imul
add
mov
lods
cmpsl
je
mov
fs
jne
cmp
imul
lods
test
and
mov
dec
pushl
aad
imul
dec
xchg
lea
jl
cmp
xchg
adc
add
add
add
xchg
imul
xor
ds
dec
pop
xor
stos
sub
call
mov
push
fsubrl
ret
fistpl
xor
and
or
jecxz
aaa
imul
mov
movb
push
shlb
add
insl
ja
jae
cwtl
icebp
cwtl
aad
add
jmp
cli
inc
add
xchg
jmp
dec
add
inc
add
add
sub
sbb
jb
in
rclb
and
pop
cmp
test
dec
jg
stos
inc
mov
int3
mov
and
push
lret
test
sub
or
pslld
xor
inc
lahf
mov
xlat
andl
ret
or
insl
int
aas
adc
mov
gs
test
push
xchg
sbb
xor
xor
test
out
into
push
outsb
cwtl
loopne
xor
dec
xchg
inc
add
int
mov
pop
imul
mov
sbb
dec
das
scas
outsb
pop
sub
dec
enter
jns
outsl
dec
xor
insl
xchg
xchg
sbb
ds
movb
loop
cmp
rolb
sbb
js
stos
pop
jl
push
sbb
xor
popa
jae,pn
repnz
pop
pop
push
testb
pop
adc
add
mov
test
ds
xchg
xchg
sbb
cmp
jae
inc
push
add
imul
jbe
insb
add
mov
jae
sbb
sub
loopne
adc
jbe
add
mov
inc
jnp
in
dec
mov
jnp
xchg
icebp
mov
out
xlat
fsubs
mov
jbe
es
add
idivl
or
into
fstpt
mov
mov
fcoml
mov
sub
dec
fnstenv
adc
cld
out
ret
mov
mov
imul
stos
lret
addb
jne
push
and
pusha
add
loop
lcall
lods
xor
test
cmpl
bound
iret
push
in
int
add
lret
rcrl
pop
into
xchg
loopne
aaa
lahf
push
addr16
push
add
mov
cmp
insb
adc
int
ja
jge
mov
sahf
addr16
cmc
xor
push
aaa
and
rolb
lock
adc
jecxz
add
inc
add
clc
out
jne
pop
xchg
mov
or
push
stc
sub
lahf
mov
pop
mov
pop
mov
mov
les
ljmp
add
int
push
sbb
sbb
dec
out
add
dec
or
sahf
inc
mov
je
mov
lods
xor
add
push
adc
mov
rolb
pop
mov
inc
fistpl
mov
jae
push
loope
mov
add
dec
mov
jl
out
stc
jnp
pop
call
fwait
add
popf
imul
scas
js
cmp
add
jns
inc
popa
insb
and
push
sbb
sub
or
jbe
pop
popa
or
test
pop
cmpsb
mov
gs
lahf
adc
jge
mov
push
jo
inc
aam
lds
mov
fs
mov
fcmovne
popf
pop
push
scas
insl
insl
adc
push
adc
leave
rcrb
mov
ficomps
inc
in
orl
sub
add
in
movsl
leave
out
sti
add
sub
dec
in
addb
cmp
xor
add
out
mov
in
sbb
jmp
jb
aas
mov
mov
xlat
es
jns
ror
arpl
dec
enter
sbb
stos
sbb
pop
add
or
jae,pt
or
in
sbb
in
ss
cli
cltd
mov
test
std
adc
xchg
cmp
jne
or
add
add
jnp
ja
pusha
add
mov
dec
jb
lahf
pushf
push
push
xor
add
push
xchg
movb
fcoms
pop
mov
insb
fdiv
pop
jbe
and
out
xchg
add
add
stos
push
xchg
push
adc
or
pushf
mov
ja
pusha
add
int
ret
push
ja
popa
pusha
add
cmp
xchg
pop
jae
mov
and
and
int3
fwait
das
sahf
inc
add
arpl
add
add
outsl
imul
je
add
scas
add
cmpsb
mov
outsl
adc
scas
leave
lods
dec
sbb
add
sub
pop
bound
push
add
push
jmp
push
roll
imul
cmpsb
iret
push
insb
dec
cltd
shl
mov
mov
fmull
or
and
shl
ss
fcompl
xor
and
fdivl
xchg
add
enter
jg
out
movb
jl
ja
pushf
xor
adc
mov
add
test
xchg
movl
fwait
data16
lock
inc
sub
je
mov
outsl
imul
testl
add
popl
loop
add
xor
and
aaa
ljmp
out
nop
pop
bound
jne
xchg
test
mov
loop
addb
rolb
das
jo
ljmp
sti
rcll
pop
inc
add
or
cmpsb
xchg
test
arpl
jne
in
pop
sarb
jle
cli
pop
dec
inc
add
push
icebp
push
mov
sub
pop
fisttps
push
out
fmull
mov
mov
lock
fwait
stc
jbe
lea
jae
and
inc
add
lret
mov
add
outsl
lcall
sti
outsb
pop
ljmp
subl
adc
enter
sub
add
mov
test
pop
adc
es
lods
movsl
inc
nop
sbb
mov
lret
push
dec
sti
sbb
outsb
out
clc
daa
mov
add
int
add
adc
ljmp
mov
out
push
nop
mov
add
cmpsl
xor
jno
insb
repz
add
mov
test
push
pop
jbe
inc
add
jl
fwait
int3
jmp
dec
rorl
add
adc
cltd
fdivl
rolb
inc
add
leave
or
jge
rcrl
add
icebp
push
stc
ret
in
cld
mov
add
jg
rolb
lcall
popf
imul
add
js
outsl
dec
scas
bnd
inc
push
mov
rorb
pop
aad
add
out
sub
xor
test
dec
cmp
mov
push
lret
jbe
movb
add
add
mov
lds
adc
mov
pop
jno
sub
dec
sub
inc
stos
inc
add
mov
add
insl
loop
mov
and
dec
out
jno
mov
aaa
jns
xor
cmp
inc
sti
fdivs
test
mov
and
in
jns
xor
xor
add
mov
add
mov
js
add
aad
xchg
mov
call
mov
repz
fcompl
add
test
in
inc
add
mov
orl
inc
icebp
lea
push
add
test
movsl
xor
iret
cltd
dec
jns
sub
xor
aaa
fwait
pop
incl
out
jbe
fs
push
pushf
mov
nop
pop
inc
add
add
fistl
inc
push
add
xchg
xchg
xor
add
adc
jmp
lahf
pop
mov
or
push
mov
mov
fsubr
or
pop
pusha
add
mov
inc
add
dec
push
cli
lret
cs
and
std
fwait
inc
add
add
jnp
outsb
push
std
pop
adc
lret
inc
add
pop
aaa
add
bnd
add
inc
add
xor
dec
aas
out
push
add
add
jnp
rorl
push
sahf
mov
fcoml
jp
mov
adc
popf
cwtl
pushf
pop
fidivrl
jmp
sbb
xlat
jnp
cmpsl
lret
fdivrs
xchg
iret
jle
push
fsts
mov
sbb
cwtl
mov
add
das
rolb
xchg
cmp
xchg
ds
enter
ret
or
push
pop
inc
add
add
out
adc
add
hlt
sub
insb
movb
add
add
xor
call
cmpsl
ret
test
jmp
cwtl
lcall
push
cmp
xor
add
sbb
add
rclb
cmp
pop
inc
ljmp
push
fidivl
jge
cld
push
int3
add
aas
jmp
add
loope
sbb
dec
jno
add
add
push
jmp
add
sub
mov
in
dec
cltd
sub
add
push
cltd
loopne
adc
mov
repz
add
insl
das
fsubrs
sub
mov
pop
xchg
lea
xlat
dec
shlb
add
lods
sti
cmp
cld
cmp
jae
ljmp
jne
push
in
push
mov
dec
push
xchg
mov
sub
xchg
jg
loopne
push
pop
or
stos
jl
or
sti
or
cli
popa
in
loope
adc
jmp
adc
jl
push
push
push
pop
mov
ret
lods
adc
negb
mov
sub
daa
xor
xchg
add
push
or
arpl
mov
mov
outsl
stos
mov
push
adc
mov
xchg
lret
dec
jo
push
cmp
pop
xor
aam
lds
mov
mov
xchg
mov
aas
mov
in
decl
mov
xchg
orl
ret
pop
inc
adc
adc
pop
ljmp
add
mov
cmpsb
cmp
scas
rclb
lods
es
inc
adc
pop
aam
xchg
mov
xor
add
addb
add
mov
xchg
add
movsl
int3
mov
or
sbbl
ficompl
sub
xor
add
add
cmp
loopne
push
test
cmp
xchg
dec
lods
stc
mov
dec
enter
icebp
fstps
cmp
and
imul
mov
cwtl
add
mov
insl
add
push
push
xor
mov
arpl
xlat
mov
fs
sub
popf
nop
enter
xor
fnsave
out
in
aas
movb
jne
scas
hlt
or
push
test
or
add
in
in
addb
aaa
add
addb
jmp
stos
push
push
dec
and
or
add
addb
andl
in
fimuls
mov
jge
inc
ficoml
ja
sbb
imul
sub
outsb
stc
jbe
jp
int3
clc
hlt
addb
mov
leave
int3
repnz
adc
imul
add
add
add
adc
add
in
push
into
cld
mov
in
jb
mov
loope
add
add
addb
jmp
idivl
sbb
sahf
add
sub
push
ljmp
mov
xor
test
or
cmp
push
int3
adc
xor
add
pop
movsl
loope
add
in
mov
push
sbb
call
mov
lods
pop
push
mov
jmp
sub
in
je
add
xor
add
and
lcall
stc
out
add
cmpsl
add
mov
scas
inc
add
dec
outsb
lods
push
rclb
out
xor
pusha
add
push
into
pop
mov
dec
xchg
push
jnp
xchg
and
add
aam
xchg
xchg
mov
loopne
add
lods
or
data16
addb
inc
add
lods
shl
repz
daa
aas
std
ljmp
adc
pop
inc
add
jae
mov
icebp
mov
xor
lock
in
or
gs
in
outsl
insb
mov
dec
push
or
fsubrs
subl
rolb
mov
mov
jbe
add
xchg
movsb
es
lods
inc
and
cmp
imul
mov
or
dec
stos
cmp
arpl
lahf
loopne
stc
and
xchg
es
stos
push
add
arpl
add
mov
xchg
mov
dec
and
and
adc
add
iret
outsl
jo
enter
pushf
movsl
lahf
mov
adc
add
add
mov
outsl
fidivs
dec
movl
adc
inc
stos
sahf
insl
loope
add
xlat
dec
dec
dec
lcall
push
add
das
scas
in
push
sub
pop
shll
mov
sbb
pusha
add
adc
inc
lock
add
outsb
push
jg
rcrl
sbb
jnp
iret
enter
stos
dec
aam
mov
jp
leave
pusha
add
mov
cmp
enter
jg
add
sbb
and
sahf
pop
aam
lods
mov
dec
dec
sub
push
sub
dec
pushf
push
xlat
fstps
jns
and
bound
push
addr16
xlat
mov
add
dec
sbb
push
jl
mov
cltd
xor
add
jg
xchg
jl
arpl
add
nop
mov
rolb
pop
or
dec
xor
clc
icebp
in
jmp
scas
stos
push
mov
jge
mov
ds
sbb
adc
in
xchg
inc
add
pusha
add
sub
add
dec
shll
pushw
imul
loop
adc
add
add
pop
mov
loop
jnp
inc
inc
pop
mov
scas
sub
xor
pusha
add
imul
cwtl
sbb
cmp
sub
je
add
sbb
shll
adc
xor
rcr
out
pop
cmpsl
jno
cmpsl
pop
fists
popa
mov
imul
adc
pop
mov
rolb
repnz
clc
fwait
add
mov
add
pop
mov
mov
mov
adc
add
sub
stos
pop
jle
or
sbb
mov
mov
xchg
mov
outsl
push
add
add
add
adc
and
int
jo
fnstcw
loopne
add
sub
add
je
jge
pop
aas
fisubl
imul
adc
or
xor
dec
ljmp
pop
or
out
loopne
ret
fwait
es
shrl
xchg
cmc
add
popa
pushf
adc
or
push
xor
jo
sahf
out
inc
add
into
fidivs
or
sbb
sbb
out
pop
pop
imul
cmp
mov
add
pop
repz
clc
mov
mov
add
cmp
pop
lret
push
dec
mov
insb
jp
repz
outsl
xchg
xchg
ljmp
xchg
test
add
adc
out
pop
fstl
add
add
mov
addb
in
rolb
fs
cmpsl
pushl
add
popa
sbb
or
cmp
adc
mov
jg
test
iret
sarb
dec
cmp
js
add
fstps
push
add
ja
add
rolb
fldenv
add
dec
or
sub
lea
push
clc
push
mov
incb
jae
push
je
and
adc
je
or
jmp
fs
sub
mov
cmp
push
sub
push
xor
add
add
out
xchg
nop
mov
inc
add
mov
loop
push
cmp
aaa
imul
sub
outsl
movswl
movaps
push
je
jno
xchg
jle
lcall
cwtl
cli
jnp
fwait
mov
add
sub
xchg
sub
dec
push
addl
cmp
stos
mov
scas
fwait
xorl
in
addb
jno
mov
mov
out
add
jbe
and
jmp
xor
mov
jg
mov
push
add
scas
xor
inc
adc
int3
push
data16
lods
roll
fnsave
in
lcall
mov
and
aas
mov
add
add
daa
stc
mov
je
or
je
fwait
xor
fnstcw
dec
lret
pop
cmp
imul
jmp
xchg
push
sbb
addb
jge
test
mov
fdivrs
aas
mov
repnz
xor
jmp
insl
mov
into
ficoms
dec
cmpl
mov
scas
pop
lods
and
xor
stos
mov
dec
mov
mov
add
sysexit
insb
das
pop
ret
icebp
pusha
add
add
push
add
dec
in
lock
add
pop
ja
arpl
xor
jle
add
mov
fdivrl
xor
lret
add
add
xor
aad
cs
sbb
pop
jle
sahf
inc
add
jg
and
les
mov
add
push
pop
sti
iret
mov
loopne
add
shrl
or
mov
add
mov
add
test
inc
add
add
add
cmp
mov
add
mov
pop
mov
outsb
movsl
mov
aas
nop
and
dec
add
jmp
or
adc
jnp
mov
xchg
push
mov
push
test
jo
or
stos
pop
push
jle
movsb
cmp
movsb
jb
mull
popa
mov
int3
cltd
mov
data16
scas
daa
push
hlt
jge
mov
testb
in
jae
repz
or
popa
add
push
mov
ljmp
sub
add
push
cwtl
dec
clc
test
cltd
jg
jl
add
mov
pop
cmc
fldcw
iret
out
xor
dec
addb
xchg
jno
rclb
xchg
out
and
jmp
cmpsl
sbb
push
inc
add
jg
xchg
jmp
addb
mov
sahf
add
push
into
out
add
mov
push
arpl
cmc
aaa
and
push
xchg
inc
add
dec
push
mov
