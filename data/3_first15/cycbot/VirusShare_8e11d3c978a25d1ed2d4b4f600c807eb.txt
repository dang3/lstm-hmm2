lret
adc
pop
cld
cmp
pop
xchg
cli
test
std
in
push
loop
aas
adc
and
mov
dec
loop
mov
loop
dec
push
dec
xchg
mov
cmc
dec
out
add
xlat
mov
mov
into
sbb
adc
sbb
add
rol
pop
jmp
jge
aam
mov
outsl
mov
std
outsb
and
call
pmulhuw
ljmp
inc
jp
xchg
and
push
das
out
cmp
mov
sbb
movsl
icebp
ret
call
je
or
ja
rep
sub
pop
repnz
scas
xor
xor
idiv
enter
loope
pop
add
popa
inc
addr16
xchg
inc
movsl
sbb
dec
fsubrs
xor
rolb
pop
mov
imul
mov
movsb
lret
add
inc
das
cmp
adc
push
and
sbb
cmp
fstl
ret
in
cld
mov
into
jl
xchg
xchg
roll
mov
icebp
into
xor
jecxz
int
add
adc
mov
repz
or
adc
movsl
sbb
je
xchg
lock
adc
cmc
cmpsb
out
xor
test
pop
xlat
adc
ret
or
aaa
lcall
gs
popf
jne
cmp
push
fstl
clc
xlat
add
cmc
lretw
mov
jge
scas
ds
push
and
adc
cmp
stos
dec
iret
insb
sahf
jns
and
fldcw
cmpsb
mov
or
or
lret
xor
rorl
xor
out
push
xor
xchg
movsb
test
xlat
adc
lods
mov
xchg
lea
gs
jmp
out
xorl
push
rclb
sub
push
ret
std
ss
fiadds
inc
mov
mov
mov
push
push
push
jmp
mov
mov
lret
and
or
inc
cmp
and
xchg
sbb
ret
jo
push
xor
xlat
scas
push
and
fs
cmpl
dec
xorl
nop
push
shrl
jnp
pop
mov
add
dec
or
cvtps2pd
pushf
push
or
imul
mov
les
pusha
adc
shld
push
shll
or
clc
in
shlb
sub
jecxz
sbb
je
mov
out
and
int3
dec
sbbl
pop
push
imul
icebp
and
repnz
push
jle
adc
pop
or
leave
xlat
sbb
fcmovnu
test
sahf
loopne
mov
jecxz
lds
rcrb
loopne
dec
das
fidivs
fcompl
push
adc
pop
push
test
test
mov
ret
test
js
rorl
jb
repz
fildll
out
cmp
in
divl
fld1
sbb
test
xchg
xlat
rolb
push
loopne
outsl
xor
pop
mov
add
shlb
mov
shrl
repnz
lahf
xlat
pop
pusha
adc
fildll
or
xor
shll
jae
pop
and
dec
inc
jns
inc
rcll
cli
or
xor
sbb
push
mov
lret
lcall
push
clc
jecxz
arpl
filds
xor
cld
rol
mov
push
mov
dec
jle
jmp
cmp
push
sbb
push
popf
jns
mov
lret
ret
push
outsl
cmp
mov
and
ret
cmpsl
cltd
hlt
in
loope
arpl
sti
lods
sub
fwait
das
sti
ja
orb
xor
sub
cmp
mov
ds
cld
sub
mov
lret
dec
ds
das
je
mov
lods
push
xlat
mov
pop
fcoms
pop
ljmp
es
ret
xor
cmp
or
ret
pop
gs
lock
inc
incb
pop
in
cvtdq2ps
inc
mov
lret
sti
fildl
shrl
inc
jmp
sbb
movsl
adc
push
mov
leave
dec
inc
dec
xchg
sbb
fwait
dec
adc
pushf
dec
push
jle
test
xor
jle
add
jle
cmp
mov
ljmp
pushf
jg
and
dec
cmp
xchg
inc
pop
mov
out
int
inc
or
testl
dec
push
xlat
fbld
xchg
ja
push
push
inc
cmp
lock
sub
hlt
fadds
shlb
fdiv
ja
out
pop
test
and
std
out
vpunpckhdq
ds
xchg
fxch
dec
lcall
mov
add
dec
sbb
xor
and
push
insb
pop
scas
adc
pop
add
add
inc
arpl
out
sub
adc
fistl
cmp
outsl
fucomp
out
pop
dec
lcall
lahf
loope
in
sbb
push
jns
cld
js
cmp
push
lea
mov
inc
mov
int3
fcmovne
popa
add
add
push
and
pop
jnp
jg
mov
jb
sbb
add
daa
movsl
iret
stc
jmp
pop
push
sub
insb
jge
and
lcall
mov
in
enter
dec
inc
inc
cmpsb
mov
jbe
icebp
sti
jge
mov
imull
mov
cmp
fnstcw
jp
push
movsl
and
pushf
addr16
jnp
iret
push
push
mov
pop
into
stc
push
mov
xchg
and
and
and
sbb
mov
stc
sub
dec
stc
sbb
insb
outsl
jns
fs
in
sbbl
or
dec
mov
xor
push
inc
pop
pop
div
add
cmp
sahf
aaa
mov
fs
js
cmpsb
jle
std
movsl
fs
jnp
add
leave
ficompl
push
sbb
aas
jnp
xchg
inc
out
mov
jb
fldt
jp
inc
out
imul
xor
dec
jle
nop
pusha
and
jne
pop
or
data16
cs
pop
les
dec
jne
dec
iret
aas
bound
sbb
fcmovbe
aaa
inc
repz
aas
pusha
cmpl
add
adc
push
data16
stos
cmp
out
js
push
push
lods
std
aad
test
pop
add
cwtl
push
lret
std
das
jbe
push
inc
scas
sbb
lret
call
ss
les
fistl
outsl
loopne
test
js,pn
fidivl
push
xchg
cs
add
add
loop
es
jo
lock
cld
xor
pushf
mov
fisubrl
outsb
mov
cmp
xor
sbb
roll
cwtl
and
mov
dec
test
or
xor
aam
pop
scas
fildll
scas
idivl
inc
push
and
push
adc
inc
adc
pop
add
lahf
loope
xchg
inc
mov
mov
cmpsb
lods
dec
push
mov
movsl
imul
inc
mov
mov
xchg
mov
lds
sbb
mov
clc
inc
insb
xor
js
push
push
cmp
std
test
jg
dec
pop
and
inc
xchg
sarl
lea
mov
inc
pop
xchg
popa
push
mov
dec
sahf
scas
sub
dec
dec
fucomi
mov
es
iret
jns
pusha
jb
adc
int3
push
pop
enter
leave
out
jl
nop
sbb
leave
pop
pop
in
push
neg
cmp
test
ss
lahf
xchg
add
fdiv
mov
test
mov
rolb
test
jnp
js
pop
imul
cmpsl
inc
loope
xchg
jecxz
push
pop
loopne
xchg
std
fstl
jb
rorb
mov
lret
pop
inc
gs
or
sub
fwait
inc
or
xor
jbe
popa
sbb
adc
cli
mov
aad
mov
sbb
ss
shlb
jle
in
faddl
gs
ds
pop
inc
loope
xor
mov
mov
in
pusha
lods
popf
mov
push
imulb
mov
pop
or
ret
into
cmp
push
les
push
lea
jns
jle
clc
xchg
add
inc
cmc
jmp
divl
sbb
or
xor
imul
test
pusha
and
rolb
in
add
xchg
sub
andl
inc
xor
or
ret
cmp
out
adc
fadds
dec
mov
dec
lret
mov
icebp
das
or
xor
cmp
aas
add
cli
adc
fildl
loope
inc
ljmp
sbb
push
inc
imul
xchg
xchg
jae
jecxz
or
add
das
mov
cmp
cli
xchg
fucomi
jle
cs
adc
cmp
fwait
sbb
inc
jl
repz
lods
inc
sub
lahf
lods
jnp
les
subl
mov
push
lahf
icebp
xchg
addr16
mov
mov
daa
out
mov
mov
adc
mov
jns
sbb
sbb
out
jecxz
repnz
mov
orl
leave
scas
xchg
fsubr
jp
cmp
repnz
fstps
push
fcmovu
pop
test
jmp
cltd
pop
popa
jae
pop
clc
dec
fwait
xor
pop
jne
pop
arpl
jae
fcmovnbe
scas
jbe
mov
test
mov
aam
lret
cmp
add
test
cld
icebp
lahf
jge
xchg
mov
jno
imul
add
and
movsb
and
xor
push
or
dec
clc
outsb
out
xchg
lss
pop
outsb
mov
lods
arpl
and
cwtl
lods
xor
pop
cmp
or
das
mov
mov
nop
shl
aas
fsubp
rclb
sub
adc
bound
xchg
outsb
sub
scas
cmp
sub
loopne
jg
bound
pushl
add
adc
xchg
cmpb
test
fs
daa
dec
repnz
fadd
mov
pop
or
into
xchg
ds
add
xor
jne
ss
xchg
adc
mov
pop
xchg
xchg
sbb
adc
dec
jp
shrl
push
or
mov
push
lods
std
or
jge
mov
sbb
xor
mov
mov
sub
leave
inc
push
clc
jbe
enter
push
sub
repz
sub
xchg
ljmp
and
mov
bound
in
dec
ret
test
push
test
mov
cmpsb
mov
sbb
into
mov
mov
sub
test
xchg
push
sub
adc
dec
stos
addr16
cmc
or
pop
add
dec
xlat
jl
movsb
icebp
mov
aam
cmp
dec
cltd
das
enter
outsl
insb
push
mov
mov
repnz
add
ja
pop
sub
aam
lcall
jl
cmp
pop
repz
iret
or
pop
mov
xlat
push
popf
jmp
xor
sbb
mov
push
dec
cmp
dec
rcrb
es
shll
cmp
xlat
popa
sbb
lds
xor
mov
fnstenv
jmp
es
cmp
int3
stc
jae
sbb
dec
ljmp
or
sub
pushf
ljmp
mov
cmp
and
mov
sbb
ljmp
test
stc
jmp
xchg
outsl
aad
sub
mov
push
push
jmp
outsb
mov
je
fcoml
cwtl
mov
mov
aas
scas
lds
mov
push
or
mov
and
in
pop
cld
adc
jo
mov
sbb
pop
lahf
popa
dec
cmc
xchg
fadds
xchg
sub
cmpsl
xorb
mov
out
mov
les
mov
ret
nop
push
mov
push
div
inc
push
push
out
adc
mov
test
ret
sub
pop
push
push
sbb
scas
daa
jnp
cltd
loop
dec
rcll
pop
mov
jmp
cmpsb
dec
fs
into
mov
ljmp
scas
mov
roll
jg
xlat
aas
cld
fistps
cmp
mov
out
push
inc
push
add
sbb
sub
add
pop
insl
add
or
adc
jg
cmp
pop
arpl
pop
mov
rorl
mov
xchg
jl
test
js
lock
pop
je
mov
sub
inc
jle
push
clc
test
jg
repnz
jg
mov
scas
adc
jg
scas
jno
lds
xchg
jo
push
in
xchg
sbb
lods
rcr
and
xlat
fisubrl
pop
jmp
mov
pop
push
mov
loopne
jg
das
mov
pop
adc
dec
push
inc
aad
stc
cmp
lcall
addb
icebp
adc
or
in
ds
mov
dec
add
sbbb
nop
inc
orb
sbbb
inc
clc
inc
addb
test
inc
jg
jle
mov
pop
pusha
mov
xor
xor
aas
out
sub
pop
push
lahf
testb
mov
push
xor
fbld
lods
data16
outsb
outsb
bound
fistps
nop
xorb
adc
test
jp
xchg
push
adc
loope
mov
rcll
bound
lret
les
sbb
das
push
cs
pusha
addb
out
loope
sub
in
in
mov
andb
or
push
out
xchg
sbb
cmpsl
add
and
fldcw
cli
and
jecxz
add
fistpl
sbb
mov
addb
mov
mov
jmp
sub
mov
out
roll
scas
sar
sbb
inc
dec
mov
fistpl
orb
sub
cwtl
push
adcb
cmp
xchg
je
enter
test
sbb
pop
cli
sub
mov
jl
push
push
gs
adc
xorb
gs
test
nop
nop
adcb
adc
out
push
mov
xchg
ss
dec
sub
ja
mov
sbb
mov
rcrl
pop
xor
pop
and
popa
sub
pushf
mov
imul
jo
dec
sbb
lret
in
pop
sti
dec
inc
bound
incb
out
or
shrl
push
aaa
jnp
movsl
xor
std
adc
xchg
addb
testl
sub
sub
mov
dec
jp
lcall
sub
out
nop
rolb
out
mov
or
aas
sbb
adcl
sbb
loopne
mov
cmpsb
cmp
std
inc
pop
insb
dec
mov
lock
outsl
push
ret
adc
iret
push
sub
push
outsl
mov
jmp
lahf
inc
andps
pushw
pop
daa
or
jecxz
dec
adc
cmpl
int
pop
stc
lods
inc
bound
fistps
adc
orl
lock
jo
push
lret
cmpsl
js
sahf
jb
push
xor
ret
cwtl
mov
out
push
loope
xor
mov
cmp
cmp
lahf
daa
shll
nop
and
cmp
rcl
into
insl
ja
sbb
test
push
fwait
outsb
mov
out
push
or
adc
xorl
adc
mov
add
add
xorl
lret
rolb
andl
mov
sbb
loopne
jnp
mov
stc
xchg
push
and
in
icebp
and
in
adc
cli
push
or
sbb
xorl
mov
jecxz
in
add
addb
adc
cmp
pop
fucomp
out
add
andb
cltd
cmpsb
test
flds
in
mov
mov
inc
jp
stos
lods
ficoml
add
adc
or
adcb
ret
mov
aas
sahf
in
cmpsl
les
js
fsts
pusha
mov
in
testl
je
stc
sbb
jno
xchg
test
xor
mov
orb
push
in
sarb
inc
pop
notb
mov
ret
rolb
in
cmp
push
and
jg
adc
mov
in
cli
xor
mov
push
mov
addb
xor
mov
push
xorb
popa
insl
imul
sbb
popf
pop
je
lock
les
push
addb
stc
ret
cmp
aad
cmp
push
mov
push
push
les
cs
jb
iret
lsl
jge
sbb
pop
add
aaa
jo
loop
or
je
xchg
push
xchg
shll
adc
xchg
mov
jp
jb
mov
push
into
invd
add
and
jge
or
shll
popf
adc
andb
mov
jo
popf
jb
mov
hlt
js
js
in
fidivs
fwait
xor
jp
add
sub
movsl
iret
xchg
adcl
adc
rcll
loope
loopne
arpl
out
push
lcall
xchg
adc
xchg
movsl
jo
jnp
hlt
pushf
and
cmp
cmc
dec
jp
pusha
adc
xor
fisttpl
cmpsb
clc
cmpsl
insl
or
adc
addl
adc
mov
cmpsb
outsl
stos
fistpl
nop
sbbl
xchg
mov
out
and
dec
cmp
incb
int3
pop
fs
fldenv
mov
xor
xlat
sarb
into
jo
sub
sbbl
dec
in
inc
lret
sub
stos
sahf
and
jns
aas
xchg
idivb
xchg
stos
ficomps
mov
std
movsb
shll
les
js
int
fsubs
sub
sbb
adcl
adc
shrb
pop
mov
andl
inc
divl
aad
mov
mov
dec
inc
js
scas
popa
sub
pop
lods
inc
rorl
mov
mov
mov
dec
and
je
xchg
adc
mov
ror
sub
inc
out
and
or
rolb
mov
lds
shlb
and
gs
mov
pmullw
cmpsb
mov
or
push
lahf
decl
mov
sbb
subl
dec
fidivrs
das
cmpb
out
std
sbb
inc
jbe
add
andl
je
out
pop
push
aaa
inc
fld
shrb
inc
test
inc
scas
mov
aas
xor
idivl
push
add
adc
out
sub
pop
lea
or
fwait
shll
lds
add
mov
cmc
es
jb
and
mull
sbbl
loopne
shll
mov
xchg
jp
inc
enter
or
mov
adc
test
lods
jb
dec
ds
clc
test
imul
adc
xor
test
cwtl
loopne
inc
push
into
xor
enter
icebp
inc
mov
je
popf
sbbb
test
jmp
stc
push
dec
std
mov
or
test
or
mov
lea
mull
xchg
cmp
lods
stos
xchg
pop
mov
insb
clc
lahf
xchg
cmpl
ljmp
inc
call
gs
shlb
and
fsubrl
dec
loope
push
dec
iret
push
dec
imul
mov
sahf
adc
test
aas
cwtl
mov
xor
push
and
cli
stc
pop
sbb
sub
inc
cltd
aam
dec
mov
sahf
in
jo
sti
cmp
mov
pusha
test
pop
add
push
nop
nop
test
cmp
fstl
xchg
push
roll
test
cmp
xor
fdivr
cmp
push
xchg
push
and
ret
mov
repz
sarl
nop
jo
mov
test
nop
test
cmp
loopne
mov
icebp
mov
add
bound
cmpsl
add
ja
outsl
scas
sub
lods
push
xor
jge
and
add
in
cmpsl
jp
in
jns
push
sarl
and
and
sbb
push
push
push
mov
push
pop
cmp
loopne
mov
test
pushf
rolb
dec
mov
cmpsl
add
jb
mov
add
test
lcall
pcmpgtw
rcll
sub
sbb
push
xchg
adc
test
pop
testb
repnz
cwtl
add
add
mov
xor
test
inc
mov
dec
lds
jne
cmp
inc
sbbb
lret
sbb
mov
flds
jg
rcrb
mov
cs
push
stos
lds
inc
inc
lds
test
xlat
aad
loopne
mov
dec
aaa
pop
add
test
dec
or
lret
insl
xor
adc
push
jg
lock
pusha
test
imul
xchg
pop
mov
std
fcomi
inc
add
test
xchg
movsl
inc
jbe
jle
cltd
or
adc
sbbb
push
clc
scas
jns
jmp
rolb
xchg
cltd
jbe
xchg
sbb
adcb
push
sbb
and
cli
mov
adc
xchg
int
add
xchg
dec
je
jo
fadds
xchg
rorl
nop
xchg
xchg
mov
and
pop
cmp
fld
pushf
loopne
push
stos
gs
fwait
cmpsb
xchg
xor
jge
push
lahf
mov
dec
jns
mov
push
push
popf
jecxz
insb
pushf
addb
add
jle
pop
and
nop
lock
rorl
cwtl
push
xchg
push
aaa
xchg
rolb
sti
xor
mov
adc
xchg
and
movsl
test
jl
adc
or
xchg
mov
inc
clc
stos
cld
lahf
lret
push
adc
mov
cmp
sarb
or
popf
sub
add
hlt
fsubrp
daa
test
xchg
cmp
mov
mov
xchg
jl
repz
popf
push
data16
stos
jae
icebp
icebp
mov
into
pop
ds
mov
xchg
dec
in
jo
jmp
imul
lods
or
push
mov
fstpt
rcrl
jno
push
and
lea
mov
inc
xchg
xchg
lock
cmp
sbb
dec
mov
mov
xor
aas
mov
sbb
xchg
iret
cmpsb
ja
jo
lods
cli
ret
xchg
inc
xchg
sbb
jbe
cwtl
rolb
dec
imul
mov
stos
lods
xchg
push
movsl
inc
pop
push
sbb
mov
lcall
aam
ss
fists
add
jle
shll
push
xchg
push
loope
fsubrs
mov
xchg
mov
loope
mov
pop
mov
sbb
rolb
mov
aaa
and
out
lds
xacquire
in
mov
jnp
xor
push
xchg
arpl
cmp
and
loope
mov
mov
inc
xor
pop
jmp
cmp
jge
sub
in
adc
js
sbb
inc
mov
mov
xchg
into
inc
pusha
adc
int3
mov
xchg
sub
fdivrs
sahf
mov
sub
lock
jns
aam
pop
inc
js
stos
or
xchg
sub
adc
lock
xchg
mov
inc
mov
push
dec
inc
adc
insb
xor
hlt
cmpsb
popa
jg
or
cmpsl
pop
dec
cmp
bound
es
or
xchg
lock
cmp
iret
pusha
push
cmpsl
inc
stos
mov
in
or
xchg
outsl
loopne
xchg
adc
xchg
insl
mov
pop
or
inc
jbe
imul
push
mov
lock
sbb
and
inc
shl
js
xchg
or
aam
bound
xor
clc
scas
dec
add
mov
cmpsb
sub
cmpsl
xor
xchg
and
into
jge
scas
mov
mov
mov
stos
mov
sahf
mov
sbb
insb
sti
add
mov
rorb
mov
and
inc
sahf
in
sbb
mov
push
mov
in
jae
pop
sub
packssdw
inc
mov
dec
fwait
mov
imul
sahf
ja
adc
test
cmpsb
loopne
mov
mov
outsb
imul
xor
es
jo
push
jne
aas
inc
and
pusha
mov
jo
push
cmp
and
stos
push
xchg
add
stos
jp
movsl
add
dec
arpl
lret
push
dec
imul
inc
idivl
xor
aas
sub
jle
jp
test
imul
mov
adc
into
cmp
cs
ret
ljmp
mov
and
xchg
add
popa
inc
xchg
cmp
xchg
fcomi
xchg
das
andb
add
pop
jle
sbb
inc
mov
insb
ljmp
cwtl
xor
movsb
add
mov
pop
jmp
fnstenv
push
xchg
negl
jns
fidivrl
inc
lods
cmpsl
inc
sub
mov
mov
add
cmp
xor
push
xchg
adc
mov
mov
imul
repnz
mov
adc
pop
dec
test
jl
dec
cwtl
and
popa
xor
and
inc
xchg
rorb
pop
hlt
pop
je
pop
ret
fstps
mov
adc
pop
aas
xor
nop
mov
shrl
pop
sub
mov
xor
cwtl
orb
daa
cs
mov
cmp
nop
push
mov
scas
les
pop
cmpsb
test
dec
and
out
push
mov
inc
xchg
icebp
imul
inc
or
pop
out
das
std
ds
mov
into
rorl
sbb
imul
sub
outsl
fisttpll
and
fwait
mov
mov
ret
lods
rorb
ret
xchg
lret
daa
andb
xchg
cmpsl
imul
pop
js
inc
sbb
jmp
dec
mov
and
or
loopne
call
leave
ret
sub
dec
lret
je
sub
mov
adc
jo
insb
xor
cmp
repz
out
sti
sbb
sub
xor
push
aas
mov
adc
inc
and
js
adc
xor
push
mov
lods
xchg
mov
in
xchg
leave
and
mov
mov
dec
hlt
xor
sub
fidivrs
nop
add
mov
xchg
jp
push
sub
lods
les
mov
in
in
das
arpl
outsl
enter
pop
punpckhdq
fwait
idivb
cmp
sub
outsl
dec
mov
rorl
mov
jae
pop
lea
mov
mov
mov
mov
rolb
sti
xchg
xchg
cmp
divb
sub
mov
mov
ret
mov
out
pop
pop
add
mov
leave
xchg
adc
xchg
les
xor
add
add
leave
push
mov
add
lea
push
push
push
push
and
mov
lea
push
push
add
test
nop
je
push
pusha
call
clc
lea
mov
add
or
es
pop
lea
shr
add
push
push
push
call
or
sub
leave
ret
ret
sub
mov
and
mov
or
sub
add
add
lea
sub
shr
dec
not
mov
sub
mov
sub
mov
je
jne
push
pop
sub
add
lea
stc
pushl
bnd
push
mov
sub
lea
push
push
push
push
push
mov
add
test
jne
jne
adc
lea
push
push
movl
and
jne
call
mov
pusha
inc
add
mov
lea
push
and
pop
je,pn
adcb
mov
ds
push
scas
loop
and
in
push
mov
aaa
loope
xchg
dec
imul
pushf
loopne
bound
pop
aas
jl
out
mov
xor
mov
mov
out
in
cwtl
loopne
or
mov
and
into
or
jbe
mov
push
fwait
xor
sbb
mov
in
rcrl
mov
pop
dec
jb
xchg
cmpsb
les
int
pop
lahf
xchg
dec
push
movsb
adc
jo
and
adc
push
mov
jmp
mov
push
mov
lret
enter
fs
mov
or
xchg
test
fidivs
scas
add
mov
mov
sbb
mov
sti
sub
out
mov
inc
lret
dec
inc
push
xchg
pop
mov
inc
jnp
cmpsb
clc
out
shrl
adcb
cld
sub
xchg
mov
dec
add
arpl
mov
negl
je
pop
pop
mov
scas
sbb
sub
jae
lods
adc
movsl
mov
stos
andb
add
mov
push
das
cwtl
jo
fcomp
jbe
sbb
pop
sbb
mov
pop
leave
shrb
hlt
sub
mov
mov
mov
rorb
ja
outsb
leave
cmp
xchg
jle
push
xchg
das
xchg
iret
xor
sub
cmp
cmp
jno
and
out
sub
imul
imul
es
repnz
jo
sbb
mov
ds
stc
test
into
fs
and
out
mov
mov
jns
dec
fs
lret
sub
imul
or
mov
mov
mov
pop
outsb
jbe
shrl
adc
lock
sub
sub
stc
fiadds
mov
jo
iret
mov
add
pop
sub
icebp
pusha
js
mov
xor
add
insb
mov
jo
sub
cmpsl
and
inc
push
push
add
mov
push
xor
imul
and
out
xor
cmpsl
leave
inc
add
mov
jecxz
dec
cs
xchg
mov
dec
pusha
shrb
mov
fdivr
nopl
insb
sbb
fldlg2
jno
pop
out
out
repnz
inc
sbbb
test
or
and
mov
jbe
insl
mov
jbe
jns
inc
clc
or
mov
cld
dec
and
clc
imull
sub
pushf
nop
mov
dec
cmc
mov
jno
mov
mov
pusha
mov
fcoms
cmp
into
pop
nop
rorb
push
loope
xor
sarb
rorb
push
push
in
cmp
aam
cs
adc
test
mov
xchg
lods
incb
adc
popa
outsb
cmp
jmp
jl
notb
and
xchg
and
mov
mov
arpl
sbb
mov
imull
pop
test
push
xor
cmp
mov
pop
mov
std
or
or
mov
mov
sub
fstpl
shl
scas
push
les
adc
stc
sbb
mov
rorb
dec
xlat
ret
push
test
int
sub
jmp
repnz
iret
das
adc
test
mov
cli
loope
inc
jg
jbe
out
sti
sahf
bound
lea
jl
sbb
mov
mov
mov
fsubs
xor
bound
cmp
push
addps
mov
inc
and
inc
movsb
dec
cli
std
or
adc
decb
pop
into
inc
das
imul
mov
call
in
fbstp
out
mov
daa
or
xchg
addb
lea
addr16
sub
mov
dec
test
fdivrl
popa
loope
arpl
mov
bound
rorb
daa
pop
ljmp
jge
sub
sbb
pop
jbe
mov
lock
lea
mov
fcomps
fsubrl
adc
jo
pop
mov
shlb
sbb
stc
lret
ss
clc
stos
mov
or
mov
fwait
subl
test
jae
adc
lea
inc
pop
push
xchg
addr16
rorb
xchg
repz
pop
push
cmpsb
jl,pt
mov
cld
mov
jno
inc
fbld
scas
jp
sbb
mov
mov
fcmovu
jnp
out
inc
push
popa
sub
popa
jg
push
shll
rorb
jo
imul
mov
adc
movsb
cmp
xor
mov
mov
cld
out
je
pop
rorb
push
cmpsl
sbb
xlat
aam
mov
and
movsb
mov
movsb
adcb
das
dec
bound
jb
leave
fdivs
xor
inc
loope
lds
adc
lea
adc
lea
test
dec
popa
fadd
jp
popa
cmp
jbe
mov
push
mov
mov
jmp
push
imul
inc
stos
call
hlt
dec
cltd
push
int
push
sbb
lea
mov
add
in
push
pusha
jp
jo
mov
adc
fadds
mov
nop
orb
arpl
adc
lock
or
dec
andb
sbb
cmpsb
xchg
popf
jp
jmp
cltd
arpl
or
inc
cs
jmp
jg
inc
jecxz
or
sbb
or
mov
cmp
sub
cmpsl
out
hlt
inc
mov
xchg
into
cld
xchg
fdivrp
or
nop
mov
add
pushl
adc
mov
out
mov
pop
fmull
push
push
pop
out
outsb
sbb
mov
fsubs
or
sysexit
and
adc
mov
mov
js
iret
xlat
pop
mov
hlt
xor
pop
std
inc
sbb
or
xchg
shlb
ljmp
shll
out
sarb
mov
fisubl
jno
mov
repnz
mov
popf
cmp
clc
int3
in
mov
jb
loop
or
mov
cmp
jnp
push
mov
loope
add
rcl
ds
xchg
sub
repnz
test
jbe
inc
repnz
mov
imul
sbb
mov
nop
pusha
mov
mov
fdivrs
pop
xchg
cltd
push
pop
xor
je
xor
mov
push
and
lret
jbe
icebp
outsl
fisubs
adcl
mov
sbb
pop
in
rorb
mov
vpmacssdqh
loop
jne
push
iret
dec
leave
sti
js
xor
popf
enter
xlat
aad
shlb
ljmp
neg
sarl
push
stos
shr
popa
loopne
cmp
jns
fdivl
cmp
and
adc
mov
in
out
lods
aad
xchg
cltd
adc
inc
pop
movsb
pop
xor
int
or
mov
inc
push
pop
mov
les
cmc
and
movsl
ja
test
inc
rolb
into
dec
xchg
popf
lock
rorb
nop
rorb
jae
mov
xor
popa
mov
stos
inc
jmp
and
dec
test
sub
aaa
int3
loop
or
pop
inc
call
or
lret
test
mov
popa
subb
loop
movsb
push
jmp
sarl
int3
dec
cmc
pop
sub
inc
inc
hlt
int3
fadd
xchg
rorb
cmp
lea
xchg
ja
lret
pop
xchg
adc
rorb
sub
clc
repnz
lahf
lahf
outsl
loope
cmp
in
mov
cwtl
rorb
movsb
scas
xchg
pushf
mov
jo
lock
cltd
mov
jo
adc
sub
aam
cltd
xchg
stos
mov
nop
insl
mov
fbstp
jmp
pop
mov
sbb
and
mov
stos
jne
das
push
mov
notb
test
adc
ret
imul
push
mov
rclb
cmp
inc
nop
cmp
idivl
outsl
lahf
test
xor
rclb
gs
lods
sub
xor
cli
xchg
test
xlat
mov
adc
nop
in
pop
rorl
cmp
push
xlat
test
pusha
nop
add
nop
xlat
pop
mov
into
sub
inc
test
dec
stos
dec
adc
nop
test
jne
pop
cltd
das
jae
scas
cmp
sti
stc
mov
cwtl
mov
mov
flds
imul
movsl
push
fisttpl
xchg
ljmp
call
add
nop
and
or
sub
loopne
fs
rcrl
xor
xchg
mov
jno
push
mov
stc
lea
sub
das
xorb
in
daa
jp
sbb
cmpsb
cmp
pusha
nop
push
adc
nop
or
nop
mov
and
dec
hlt
lods
cmpsl
xchg
inc
adc
fs
lret
sub
pusha
nop
ss
clc
imul
add
pop
mov
test
aaa
push
test
nop
sub
dec
call
push
jle
ja
testl
dec
pusha
je
mov
lds
adc
sahf
pop
bound
mov
enter
inc
test
popf
mov
jae
or
jb
adcb
sub
mov
mov
xrelease
xor
mov
mov
sbb
adc
sbb
xchg
or
xchg
cmp
imul
xchg
int3
aad
mov
lcall
arpl
ss
xchg
fnstcw
mov
shll
xchg
daa
xchg
pop
push
and
lret
push
mov
xlat
int3
in
into
push
mov
sub
cwtl
push
xchg
lods
jne
es
int
popf
mov
xchg
aas
dec
jns
nop
xor
sub
movsb
and
sar
adc
xchg
loop
mov
lods
out
stc
das
rorl
cmp
hlt
inc
mov
pop
icebp
dec
mov
fiadds
jbe
mov
jo
cmp
cmpsb
pop
jnp
inc
aas
mov
cmp
dec
arpl
mov
jo
jg
adc
xchg
ret
lods
adc
mov
inc
xchg
push
fcoml
inc
sub
adc
ljmp
pop
lock
mov
pusha
mov
cs
pop
iret
xchg
cmc
pushf
jo
mov
and
sub
cmpsb
push
pushf
inc
xchg
gs
pushf
push
xchg
pushl
stos
insb
push
push
xchg
into
mov
nop
xchg
mov
inc
xchg
and
jmp
and
adc
aas
repnz
pop
je
xchg
nop
xchg
insb
xchg
mov
scas
xchg
aas
push
hlt
movsb
aas
clc
jo
cmpsl
jle
push
ljmp
movaps
shlb
push
repz
imul
mov
dec
inc
inc
pop
add
push
sti
adc
into
popf
or
sbb
mov
out
jbe
sahf
test
jae
push
arpl
add
or
pop
inc
inc
xchg
cmp
xchg
dec
cmpsl
jns
mov
sarb
repz
mov
cmp
cmp
mov
inc
sbb
fidivl
sub
je
adc
aas
dec
jmp
scas
sbb
xchg
push
sub
mov
adc
inc
je
pop
inc
hlt
insb
push
adc
mov
test
xchg
mov
xchg
jle
dec
pop
fildl
pop
dec
ss
loop
xchg
dec
js
jno,pn
mov
jnp
data16
sub
out
movsb
popf
pusha
shr
shlb
shlb
adcl
pop
and
xchg
pusha
xchg
mov
adc
xchg
xlat
fs
mov
sbb
mov
xchg
andb
adc
push
jl
mov
aaa
ret
loope
sbb
push
add
xchg
mov
xchg
aas
push
imul
inc
dec
ret
fsubrs
or
lret
mov
add
icebp
cmpxchg
dec
fsubl
adc
dec
push
rcll
clc
sbb
xor
pop
xor
and
lods
jp
cmc
dec
xchg
pop
jns
js
cs
push
mov
xchg
divb
inc
or
movsl
mov
orl
xor
pop
insl
push
hlt
jp
cli
adc
nop
add
out
lock
add
movsb
jecxz
xchg
lods
adc
cmp
in
mov
loop
jo
int
stos
cli
filds
sbb
nop
xchg
cmpsb
cwtl
rclb
test
fstpt
push
loope
inc
out
xor
xchg
push
ja
mov
and
adc
aas
pop
push
xlat
push
sub
lret
daa
pop
rolb
test
xchg
jge
xchg
xchg
imul
mov
inc
loopne
arpl
les
and
add
dec
and
test
cmp
or
inc
int3
loop
les
lds
xchg
in
pop
xchg
or
sub
popa
sbb
repz
add
mov
sahf
inc
cmpsl
ret
shrl
loop
xor
sbbb
ret
scas
jne
sub
lahf
rcl
add
loopne
pop
cmp
gs
mov
arpl
push
or
sub
dec
scas
dec
inc
in
leave
lret
imul
dec
outsl
cmp
pop
fwait
push
hlt
test
pop
cli
scas
cltd
loopne
arpl
pop
mov
add
jno
int
js
lret
fistps
je
dec
xchg
xchg
gs
rclb
sbb
sub
js
sub
ss
push
fwait
adc
and
jno
mov
and
cmpl
ja
repz
xchg
and
sbb
xchg
test
inc
addb
fwait
jp
xor
dec
das
les
insl
inc
inc
pushf
rclb
dec
outsb
iret
sub
rolb
xchg
rorb
ds
imul
mov
push
and
pop
fsubl
pop
fnstsw
fldenv
add
int3
lea
mov
enter
cmp
xor
push
dec
arpl
push
mov
xlat
jno
imul
push
dec
test
jmp
mov
push
push
repnz
inc
and
cmp
idiv
clc
nop
nop
nop
nop
jae
add
add
add
fisttps
test
add
clc
nop
nop
nop
nop
jae
xchg
cltd
add
fs
push
clc
nop
nop
nop
nop
jae
dec
add
add
add
pop
imul
nop
nop
nop
jae
add
add
add
rcr
mov
sbb
xchg
fstl
mov
xchg
ret
add
add
mov
loopne
fisubs
icebp
add
inc
pusha
mov
jne
clc
nop
nop
nop
nop
jae
inc
inc
pop
lods
add
loopne
add
les
in
cld
push
mov
xchg
ret
add
mov
rorb
add
push
mov
xchg
ret
add
add
and
add
add
push
lret
jne
clc
nop
nop
nop
nop
jae
imul
inc
xchg
add
push
push
pushf
mov
mov
nop
nop
nop
nop
jae
cltd
inc
add
add
testb
xchg
sti
push
push
mov
xchg
ret
add
ret
cmpsl
add
mov
push
loopne
nop
nop
nop
nop
jae
loopne
and
xlat
dec
add
call
clc
nop
nop
nop
nop
jae
add
or
xchg
sti
add
clc
nop
nop
nop
nop
jae
add
add
mov
rorb
add
inc
and
nop
nop
nop
nop
jae
push
inc
adc
mov
add
xor
nop
push
mov
leave
cs
mov
fidivrs
cmp
add
and
nop
push
mov
leave
cs
cmp
xchg
xchg
mov
inc
pop
mov
clc
nop
nop
nop
nop
jae
and
insb
cltd
add
add
hlt
xchg
add
jl
inc
add
insb
xchg
add
add
inc
add
dec
fistl
push
mov
leave
cs
xchg
add
add
add
and
mov
les
aam
add
and
add
mov
push
add
xor
add
repz
or
clc
nop
nop
nop
nop
jae
add
insb
notl
and
add
nop
nop
nop
nop
jae
rol
fidivs
repz
pop
push
clc
nop
nop
nop
nop
jae
add
add
cli
hlt
add
mov
mov
xchg
ret
add
loopne
adc
mov
push
push
mov
xchg
ret
add
add
xchg
or
inc
and
insb
insb
add
clc
nop
nop
nop
nop
jae
out
mov
cltd
pop
insl
push
mov
xchg
popf
add
add
and
jne
ja
jmp
sbb
clc
nop
nop
nop
nop
jae
and
add
icebp
push
fucomp
fistpl
add
add
and
cli
or
out
xchg
call
fdivp
aas
add
clc
nop
nop
nop
nop
jae
add
xchg
dec
xor
inc
insb
and
cmp
clc
nop
nop
nop
nop
jae
in
fidivs
push
dec
xchg
pop
push
mov
xchg
ret
mov
add
notb
add
add
add
push
mov
xchg
ret
cmp
scas
add
movsb
inc
movsb
mov
xchg
sub
sar
nop
nop
nop
nop
jae
xlat
and
mov
cltd
iret
je
clc
nop
nop
nop
nop
jae
add
les
add
add
nop
nop
nop
nop
jae
add
xchg
call
xchg
and
and
mov
clc
nop
nop
nop
nop
jae
insb
cmp
add
add
mov
clc
xchg
rep
clc
nop
nop
nop
nop
jae
add
cmpsl
add
mov
jg
clc
nop
nop
nop
nop
jae
xchg
add
add
inc
testl
clc
nop
nop
nop
nop
jae
and
add
add
add
je
jl
inc
subl
nop
push
mov
leave
cs
inc
dec
add
xchg
add
clc
nop
nop
nop
nop
jae
add
cmpsl
add
scas
add
push
inc
cli
add
push
mov
leave
cs
add
add
add
add
mov
xchg
ret
xchg
hlt
mov
add
add
cltd
inc
add
adc
jle
jo
xor
push
mov
leave
cs
add
and
in
nop
add
xlat
add
clc
nop
nop
nop
nop
jae
shlb
out
movsb
or
xor
clc
nop
nop
nop
nop
jae
push
add
add
add
mov
nop
nop
jae
inc
add
loopne
scas
add
or
xchg
cltd
mov
clc
nop
nop
nop
nop
jae
jp
cmpsl
or
add
xor
inc
add
insb
xchg
add
jp
mov
or
fld1
clc
nop
nop
nop
nop
jae
movsb
cli
add
les
add
les
clc
nop
nop
nop
nop
jae
and
xlat
insb
add
pop
rolb
inc
pop
lds
nop
nop
jae
cmpsl
add
add
add
xlat
cmp
nop
nop
jae
insb
add
hlt
and
or
xor
leave
cs
ret
mov
add
xchg
mov
add
testb
add
clc
nop
nop
nop
nop
jae
and
add
out
mov
scas
jb
add
add
add
add
add
and
add
cwtl
mov
pop
add
push
mov
xchg
ret
insb
add
xor
add
add
movsb
pop
test
add
nop
push
mov
leave
cs
add
add
xchg
rolb
idiv
clc
nop
nop
nop
nop
jae
icebp
xchg
and
add
add
aas
pusha
clc
nop
nop
nop
nop
jae
add
cmpsl
pop
add
and
mov
mov
xchg
ret
add
add
daa
movsb
mov
sbb
push
mov
xchg
ret
add
fidivrs
cli
nop
mov
nop
nop
nop
nop
jae
add
cmp
testb
icebp
and
add
mov
clc
nop
nop
nop
nop
jae
cltd
add
call
pop
clc
nop
nop
nop
nop
jae
dec
add
in
xlat
xor
lock
nop
nop
nop
jae
add
xchg
add
lods
add
mov
int
clc
nop
nop
nop
nop
jae
inc
add
and
add
cmp
pop
clc
nop
nop
nop
nop
jae
rclb
nop
les
testb
add
xchg
ror
clc
nop
nop
nop
nop
jae
add
inc
push
les
daa
mov
nop
push
mov
leave
cs
cli
icebp
negl
dec
xchg
inc
push
clc
nop
nop
nop
nop
jae
add
add
icebp
add
nop
nop
nop
nop
jae
add
add
add
add
arpl
test
pop
add
clc
nop
nop
nop
nop
jae
repz
mov
rolb
adc
push
clc
nop
nop
nop
nop
jae
and
insb
insb
pop
add
insb
sbb
add
push
mov
xchg
ret
testb
mov
add
add
icebp
sub
clc
nop
nop
nop
nop
jae
add
cmp
fidivrs
mov
xchg
ret
xchg
add
pop
cmpsl
add
add
scas
add
mov
xchg
ret
dec
add
insb
in
mov
xchg
add
clc
nop
nop
nop
nop
jae
or
add
inc
or
push
sbb
nop
nop
nop
nop
jae
cltd
inc
mov
icebp
add
in
scas
out
add
push
or
xor
clc
nop
nop
nop
nop
jae
mov
inc
add
add
clc
nop
nop
nop
nop
jae
in
xchg
inc
scas
add
add
add
mov
add
clc
nop
nop
nop
nop
jae
mov
add
insb
add
add
test
xor
add
nop
nop
nop
nop
jae
add
add
rcrl
nop
nop
nop
nop
jae
add
scas
out
add
out
icebp
add
add
add
clc
nop
nop
nop
nop
jae
daa
add
div
ret
test
push
mov
leave
cs
add
add
dec
cmp
nop
nop
nop
nop
jae
cmp
scas
add
mov
xor
add
nop
nop
nop
nop
jae
movsb
hlt
testb
add
lods
inc
inc
xchg
int3
adc
in
leave
cs
cltd
add
add
add
neg
mov
jle
clc
nop
nop
nop
nop
jae
add
add
in
scas
cmpsl
dec
stos
ja
call
nop
jae
add
in
xchg
xchg
add
jne
clc
nop
nop
nop
nop
jae
add
add
add
pop
xchg
nop
push
mov
leave
cs
mov
add
add
mov
add
add
inc
add
mov
add
add
add
add
call
leave
nop
push
mov
leave
cs
add
add
mov
add
xchg
cmpl
nop
push
mov
leave
cs
push
and
xlat
xchg
adc
xor
inc
and
nop
nop
nop
nop
jae
cmpsl
xor
add
mov
ja
sbb
push
mov
xchg
ret
add
mov
in
add
add
jne
clc
nop
nop
nop
nop
jae
add
add
les
jne
clc
nop
nop
nop
nop
jae
cmp
add
testb
insb
cltd
repz
clc
nop
nop
nop
nop
jae
repz
add
inc
call
mov
xchg
ret
xchg
nop
sarb
add
add
lock
add
cltd
in
out
out
mov
mov
clc
nop
nop
nop
nop
jae
cltd
xchg
add
xlat
mov
add
mov
xchg
ret
dec
mov
add
xchg
add
in
mov
mov
xchg
ret
and
add
dec
and
mov
mov
nop
nop
jae
in
les
add
push
add
add
out
arpl
mov
leave
cs
notl
lods
inc
and
add
clc
nop
nop
nop
nop
jae
xchg
xchg
cmp
mov
inc
mov
push
push
mov
push
mov
xchg
ret
add
out
pop
add
mov
lea
nop
push
mov
leave
cs
cmp
add
mov
inc
in
push
clc
nop
nop
nop
nop
jae
add
nop
mov
repz
add
add
in
adc
movsb
add
test
mov
cmp
addb
sub
js
mov
nop
nop
jae
xchg
push
mov
xchg
push
xchg
add
add
mov
mov
push
mov
xchg
ret
imul
insb
add
call
inc
clc
nop
nop
nop
nop
jae
mov
add
add
inc
add
imul
jl
ret
pushf
push
pop
push
mov
xchg
ret
lods
inc
xchg
add
add
xlat
cltd
and
jne
push
mov
xchg
ret
add
mov
add
add
and
inc
cmp
nop
push
mov
leave
cs
xor
add
mov
add
jno
clc
nop
nop
nop
nop
jae
hlt
pop
or
mov
push
add
add
cli
ja
mov
adc
nop
nop
nop
nop
jae
dec
push
mov
add
dec
push
clc
nop
nop
nop
nop
jae
call
insb
add
add
pop
add
inc
clc
nop
nop
nop
nop
jae
inc
add
add
inc
xlat
add
nop
push
mov
leave
cs
adc
and
add
inc
mov
push
loopne
mov
xchg
ret
add
hlt
repz
movsb
add
add
in
jbe
add
clc
nop
nop
nop
nop
jae
pop
jp
mov
xor
daa
push
mov
jns
add
stos
add
add
push
jo
sbb
lock
xchg
lock
add
js
add
add
in
dec
icebp
xchg
add
push
jp
pop
push
mov
xchg
ret
add
add
mov
test
nop
jae
add
add
and
icebp
lods
add
sub
inc
inc
inc
add
repz
nop
mov
inc
gs
nop
push
mov
leave
cs
xchg
and
testl
add
nop
push
mov
leave
cs
add
imul
dec
add
dec
es
mov
push
mov
xchg
ret
cmp
cli
add
mov
jp
xor
add
dec
rol
push
mov
xchg
ret
add
add
repz
cltd
or
mov
daa
jecxz
add
out
test
pop
adc
add
lret
jecxz
mov
nop
nop
nop
nop
jae
add
add
add
imul
sar
daa
test
nop
nop
nop
nop
jae
xchg
xchg
in
add
xor
mov
nop
nop
nop
jae
scas
add
push
add
jb
lods
mov
clc
nop
nop
nop
nop
jae
add
repz
mov
add
mov
nop
push
mov
leave
cs
call
add
mov
nop
nop
nop
jae
add
repz
cltd
inc
cmp
ret
cmp
adc
nop
jae
xchg
add
loopne
xchg
dec
nop
push
mov
leave
cs
add
imul
hlt
inc
add
test
nop
push
mov
leave
cs
mov
xchg
in
add
and
mov
nop
push
mov
leave
cs
xchg
add
add
rolb
cmp
std
add
clc
nop
nop
nop
nop
jae
cmp
add
cmpsl
inc
add
add
mov
call
inc
add
add
add
les
and
mov
stc
clc
nop
nop
nop
nop
jae
add
add
inc
les
jmp
testl
add
dec
add
xchg
pop
rep
clc
nop
nop
nop
nop
jae
add
insb
xlat
add
add
cmp
xchg
adc
nop
nop
nop
jae
in
add
mov
xchg
hlt
xchg
ret
or
sahf
dec
add
push
mov
xchg
ret
add
nop
cli
add
or
incb
add
nop
nop
nop
nop
jae
inc
icebp
add
cltd
add
or
mov
xchg
ret
mov
add
add
hlt
push
add
clc
nop
nop
nop
nop
jae
add
cmp
add
add
insb
inc
jb
clc
nop
nop
nop
nop
jae
or
mov
lods
dec
jb
add
clc
nop
nop
nop
nop
jae
inc
add
hlt
add
add
mov
clc
nop
nop
nop
nop
jae
add
icebp
add
mov
mov
add
push
clc
nop
nop
nop
nop
jae
cli
in
add
and
mov
mov
rorl
mov
xchg
ret
xchg
mov
add
add
cmp
out
add
clc
nop
nop
nop
nop
jae
add
cmpsl
daa
cltd
xor
add
pop
push
mov
xchg
ret
mov
imul
repz
xchg
fists
nop
nop
nop
nop
jae
add
add
repz
arpl
mov
xchg
ret
repz
les
and
xchg
dec
and
adc
nop
nop
jae
inc
pop
mov
add
add
push
push
mov
xchg
ret
nop
push
icebp
add
add
call
sbb
subb
xchg
ret
mov
cmp
add
xchg
pop
push
nop
push
mov
leave
cs
cltd
add
add
add
loopne
push
mov
clc
nop
nop
nop
nop
jae
scas
add
add
movsb
add
xchg
mov
in
leave
cs
add
out
call
add
scas
push
cmp
nop
push
mov
leave
cs
movsb
mov
add
inc
testb
add
pop
sbb
mov
mov
push
mov
xchg
ret
inc
mov
and
mov
inc
push
jg
jge
clc
nop
nop
nop
nop
jae
cmp
out
add
add
mov
push
mov
xchg
ret
and
add
dec
inc
inc
inc
addr16
clc
nop
nop
nop
nop
jae
daa
and
add
or
add
sbb
nop
nop
jae
cltd
adc
mul
add
repz
nop
nop
nop
jae
and
pop
add
insb
in
lods
add
or
call
inc
add
add
add
add
dec
push
clc
nop
nop
nop
nop
jae
add
inc
lods
or
cli
inc
inc
je
mov
clc
nop
nop
nop
nop
jae
add
add
or
nop
nop
nop
nop
jae
add
in
mov
add
ret
repz
pop
clc
nop
nop
nop
nop
jae
add
repz
add
repz
testl
loopne
add
clc
nop
nop
nop
nop
jae
call
icebp
push
mov
mov
es
nop
push
mov
leave
cs
or
add
mov
and
nop
nop
nop
nop
jae
in
xchg
xchg
out
add
add
lods
flds
nop
nop
nop
nop
jae
add
cmp
cmp
add
add
nop
nop
nop
nop
jae
add
xchg
add
cli
add
xadd
or
nop
nop
nop
nop
jae
and
movsb
xchg
add
out
mov
int
mov
or
push
repnz
add
add
clc
nop
nop
nop
nop
jae
mov
cli
les
add
add
add
ret
add
inc
add
add
add
cmp
test
in
add
add
mov
add
add
pop
add
lods
add
stos
fld1
push
mov
xchg
ret
xlat
add
insb
add
and
insl
mov
nop
push
mov
leave
cs
push
scas
add
imul
push
clc
nop
nop
nop
nop
jae
scas
ret
add
cmp
push
push
clc
nop
nop
nop
nop
jae
mov
or
movsb
xlat
add
mov
clc
nop
nop
nop
nop
jae
xor
adc
add
mov
rep
push
mov
xchg
ret
dec
add
add
add
inc
aaa
fistpl
nop
push
mov
leave
cs
add
lods
add
add
xlat
cltd
dec
mov
and
imul
nop
nop
nop
jae
xlat
add
dec
add
mov
test
push
mov
xchg
ret
ret
add
les
cltd
js
cmp
push
cmpl
nop
nop
nop
nop
jae
add
movsb
and
jne
clc
nop
nop
nop
nop
jae
add
mov
dec
shl
push
mov
xchg
ret
or
add
add
insb
rolb
cmpsb
scas
inc
nop
push
mov
leave
cs
les
inc
imul
add
clc
pop
push
push
mov
xchg
ret
ret
movsb
mov
add
mov
sub
in
test
cmp
pop
str
sub
add
sbb
test
andb
add
nop
nop
nop
nop
jae
add
mov
xchg
pop
popa
clc
nop
nop
nop
nop
jae
hlt
cmp
mov
hlt
add
xchg
mov
call
inc
add
add
imul
add
nop
nop
nop
nop
jae
cmpsl
jp
xchg
out
or
xchg
clc
nop
nop
nop
nop
jae
add
xchg
add
mov
xor
rolb
add
pushf
lock
push
mov
leave
cs
add
add
xlat
xchg
cmpsl
xchg
inc
add
sbb
add
clc
nop
nop
nop
nop
jae
xchg
and
mov
arpl
nop
nop
jae
ret
add
inc
inc
dec
add
inc
inc
fwait
push
clc
nop
nop
nop
nop
jae
loopne
shrb
add
add
dec
inc
les
mov
out
mov
lods
add
or
add
movzwl
repz
rolb
pop
mov
clc
nop
nop
nop
nop
jae
xchg
insb
les
add
add
add
test
mov
jp
mov
push
mov
xchg
ret
daa
add
inc
repz
roll
nop
nop
jae
inc
and
add
and
aas
push
nop
push
mov
leave
cs
add
add
add
mov
xlat
add
mov
nop
nop
jae
add
add
add
add
mov
leave
cs
add
inc
cmp
fiadds
movsb
or
clc
nop
nop
nop
nop
jae
cltd
repz
add
sbbl
mov
leave
cs
xchg
add
add
add
xchg
insb
loopne
inc
stc
mov
clc
nop
nop
nop
nop
jae
movsb
add
xlat
dec
mov
add
fistpl
clc
nop
nop
nop
nop
jae
insb
cli
div
and
sbb
mov
sub
nop
nop
nop
nop
jae
and
call
add
or
clc
nop
nop
nop
nop
jae
add
cmp
add
sbb
mov
dec
add
nop
push
mov
leave
cs
or
add
insb
jmp
sbb
push
mov
xchg
ret
add
add
inc
add
clc
nop
nop
nop
nop
jae
add
test
add
add
lds
in
add
add
aam
jl
pop
gs
add
popa
clc
nop
nop
nop
nop
jae
add
add
mov
and
mul
adc
movsb
mov
and
nop
nop
nop
nop
jae
repz
insb
push
push
lods
add
les
add
push
mov
xchg
ret
add
cmpsl
mov
xchg
add
mov
popa
push
mov
xchg
ret
negb
add
lods
icebp
cltd
daa
idiv
xor
clc
nop
nop
nop
nop
jae
add
add
cmpsl
add
repnz
pop
nop
push
mov
leave
cs
add
add
or
add
lods
xchg
add
clc
nop
nop
nop
nop
jae
imul
add
xlat
in
add
inc
push
call
clc
nop
nop
nop
nop
jae
add
or
les
add
add
mov
jbe
inc
add
inc
add
imul
mov
pop
insb
hlt
lcall
inc
add
add
add
jp
insb
insb
mov
in
inc
push
nop
push
mov
leave
cs
add
dec
rcl
and
insb
mov
sbb
push
mov
xchg
ret
add
dec
add
imul
in
fdivs
push
xor
inc
movsb
mov
andb
inc
add
add
cli
add
daa
and
cmp
fadds
js
clc
nop
nop
nop
nop
jae
add
add
xchg
inc
add
mov
clc
nop
nop
nop
nop
jae
mov
add
add
stos
clc
nop
nop
nop
nop
jae
add
mov
add
cltd
mov
mov
out
mov
cmpsb
mov
mov
mov
add
add
add
sti
add
nop
push
mov
leave
cs
add
add
daa
add
add
stc
push
add
cltd
divl
add
add
imul
fistpl
clc
nop
nop
nop
nop
jae
add
and
inc
inc
push
nop
push
mov
leave
cs
inc
icebp
les
div
inc
add
fld1
clc
nop
nop
nop
nop
jae
add
ret
icebp
add
mov
or
nop
nop
nop
nop
jae
add
add
xchg
xchg
inc
inc
les
out
sbb
push
mov
xchg
ret
add
inc
xchg
push
add
add
push
mov
leave
cs
les
insb
push
add
mov
dec
cmp
mov
xchg
ret
add
add
or
and
jns
sbb
nop
push
mov
leave
cs
cltd
add
lods
add
fdivl
nop
nop
jae
cmp
insb
repz
mov
xchg
add
add
mov
nop
nop
nop
nop
jae
xlat
insb
or
loopne
adc
pop
push
mov
xchg
ret
mov
add
inc
xor
dec
lods
push
scas
jecxz
jb
add
xchg
cmpsl
mov
cmpsl
add
add
repz
add
add
lcall
enter
test
jmp
nop
nop
nop
jae
add
scas
add
dec
outsb
sbb
rclb
jns
add
cmpsl
jp
add
add
mov
rclb
addl
or
ret
add
testl
xchg
add
out
fdivrp
clc
nop
nop
nop
nop
jae
add
add
push
push
mov
xchg
ret
and
or
xchg
icebp
add
add
nop
nop
nop
jae
add
add
add
icebp
inc
ficompl
cmpw
nop
push
mov
leave
cs
hlt
testl
adc
add
nop
push
mov
leave
cs
add
nop
add
add
add
clc
nop
nop
nop
nop
jae
add
add
jp
add
mov
clc
nop
nop
nop
nop
jae
xchg
mov
add
jg
nop
push
mov
leave
cs
call
adc
adc
add
not
push
mov
xchg
ret
mov
add
xor
in
aaa
test
push
mov
xchg
ret
cmp
testl
call
pop
clc
nop
nop
nop
nop
jae
add
mov
add
mov
clc
nop
nop
nop
nop
jae
ret
insb
daa
add
scas
add
sbb
push
mov
xchg
ret
add
add
jp
add
or
clc
nop
nop
nop
nop
jae
cltd
cmpsl
movsb
xchg
xchg
in
add
and
dec
push
clc
nop
nop
nop
nop
jae
movsb
mov
add
push
hlt
in
xor
cmpsb
add
add
lock
mov
fldcw
nop
push
mov
leave
cs
add
daa
add
push
nop
push
mov
leave
cs
cli
add
mov
add
add
add
clc
nop
nop
nop
nop
jae
add
or
and
nop
push
mov
leave
cs
add
and
xlat
rolb
testb
inc
in
test
nop
push
mov
leave
cs
add
cmp
loopne
add
scas
hlt
scas
pop
adc
push
push
mov
xchg
ret
adc
add
rolb
add
pop
push
add
mov
and
add
inc
add
add
mov
clc
nop
nop
nop
nop
jae
adc
add
nop
cltd
fsubl
mov
ret
out
add
add
push
add
add
sub
int
xabort
nop
nop
nop
jae
add
add
insb
add
shrb
adc
nop
nop
nop
nop
jae
add
rolb
add
stos
and
add
les
add
add
dec
icebp
popa
clc
nop
nop
nop
nop
jae
add
add
in
add
mov
mov
mov
push
mov
xchg
ret
add
add
cli
or
sub
push
mov
xchg
ret
push
add
add
inc
add
add
je
xor
clc
nop
nop
nop
nop
jae
xchg
repz
add
add
and
mov
nop
nop
nop
nop
jae
add
xlat
xor
mov
nop
call
push
mov
xchg
ret
add
daa
add
pop
xchg
out
lods
xchg
push
mov
ret
mov
idivl
fbstp
aaa
add
add
xor
add
nop
sbb
test
push
jl,pn
push
push
mov
xchg
ret
imul
and
lods
push
mov
fdivs
dec
add
clc
nop
nop
nop
nop
jae
xor
pop
cmp
add
and
notl
push
mov
xchg
ret
add
add
mov
add
add
dec
outsl
push
nop
push
mov
leave
cs
add
mov
insb
add
jecxz
call
in
leave
cs
cltd
xchg
add
xchg
stos
push
mov
xchg
ret
add
inc
add
add
add
add
and
pop
ljmp
add
nop
nop
nop
nop
jae
testb
xchg
and
and
jmp
test
nop
nop
nop
nop
jae
jp
imul
inc
inc
icebp
add
clc
nop
nop
nop
nop
jae
les
repz
mov
clc
nop
nop
nop
nop
jae
add
add
adc
cltd
push
clc
nop
nop
nop
nop
jae
add
add
repz
in
mov
shrb
or
add
nop
nop
nop
nop
jae
cltd
add
or
cmpsl
adc
test
push
mov
xchg
ret
add
icebp
lods
add
in
and
leave
add
clc
nop
nop
nop
nop
jae
add
ret
add
add
add
es
fdivrp
incl
in
add
add
les
add
mov
xchg
ret
in
add
and
adc
and
nop
nop
nop
nop
jae
cmp
and
lods
cmpsl
jne
clc
nop
nop
nop
nop
jae
add
add
pusha
clc
nop
nop
nop
nop
jae
rolb
testb
add
dec
add
mov
dec
mov
clc
nop
nop
nop
nop
jae
inc
inc
add
add
nop
nop
nop
nop
jae
nop
inc
add
add
cmp
nop
nop
nop
nop
jae
add
divb
clc
nop
nop
nop
nop
jae
add
jp
xchg
inc
add
pop
add
and
clc
nop
nop
nop
nop
jae
add
add
add
add
arpl
clc
nop
nop
nop
nop
jae
cltd
cltd
lods
mov
cmp
jne
push
mov
xchg
ret
xchg
insb
inc
jp
add
insb
testb
sub
nop
nop
nop
nop
jae
les
xchg
imul
mov
xchg
in
inc
inc
add
and
add
add
xchg
xchg
fdivp
cli
mov
stos
dec
inc
add
add
cltd
cmp
and
adc
nop
jae
repz
add
add
mov
inc
jecxz
nop
nop
nop
nop
jae
add
mov
add
lods
nop
push
mov
leave
cs
imul
add
add
rorl
sti
pop
inc
add
insb
mov
xchg
add
icebp
popa
push
mov
xchg
ret
hlt
mov
add
add
add
pop
clc
nop
nop
nop
nop
jae
add
testl
clc
nop
nop
nop
nop
jae
xchg
add
cltd
add
xchg
les
mov
add
add
add
bound
and
push
add
out
xchg
lods
mov
clc
nop
nop
nop
nop
jae
mov
add
add
add
fistpl
push
mov
xchg
ret
divb
add
scas
cmpsl
jp
inc
lods
push
mov
xchg
ret
and
cltd
add
mov
push
mov
xchg
ret
les
add
mov
call
nop
nop
nop
jae
insb
in
add
add
add
call
clc
nop
nop
nop
nop
jae
add
add
jp
xchg
mov
jbe
fwait
clc
nop
nop
nop
nop
jae
hlt
dec
add
adc
add
fdivp
push
push
mov
xchg
ret
or
xor
xchg
add
add
lods
dec
fld1
push
mov
xchg
ret
add
mov
add
lods
add
add
nop
nop
nop
nop
jae
scas
mov
and
in
scas
cmp
call
nop
push
mov
leave
cs
push
nop
add
mov
pushf
and
clc
nop
nop
nop
nop
jae
add
add
fisttpll
out
inc
add
inc
loopne
mov
ret
add
inc
jp
nop
push
mov
leave
cs
add
and
les
movsb
jno
clc
nop
nop
nop
nop
jae
mov
add
add
testb
xor
jnp
clc
nop
nop
nop
nop
jae
out
xchg
add
add
add
test
nop
push
mov
leave
cs
add
cmpsl
add
xchg
add
add
xchg
jle
xor
jg
nop
push
mov
leave
cs
mov
les
repz
mov
push
mov
xchg
ret
imul
add
add
inc
add
add
ss
inc
add
negb
add
cmp
mov
nop
nop
nop
jae
add
cmp
call
out
or
add
or
cs
add
push
add
cltd
dec
imul
clc
nop
nop
nop
nop
jae
add
xchg
rolb
add
test
fdivl
in
leave
cs
cltd
lods
mov
pop
add
add
les
add
add
nop
nop
nop
nop
jae
xlat
push
add
push
mov
xchg
ret
add
add
add
cltd
add
xchg
shrl
lcall
jae
mov
negl
cmp
outsl
push
mov
add
mov
sarb
or
inc
add
xchg
mov
push
clc
nop
nop
nop
nop
jae
add
add
add
loopne
and
cmp
add
clc
nop
nop
nop
nop
jae
xchg
add
daa
and
add
leave
add
clc
nop
nop
nop
nop
jae
push
cmp
cmpsl
mov
fstl
nop
nop
nop
nop
jae
add
hlt
nop
insb
add
add
mov
clc
nop
nop
nop
nop
jae
add
cmp
scas
add
loope
rclb
lods
jnp
add
div
dec
repz
loopne
pop
add
mov
out
insl
pushl
nop
push
mov
leave
cs
add
call
or
mov
xchg
ret
add
fiadds
icebp
xlat
jp
daa
int
sar
nop
nop
nop
nop
jae
inc
add
add
cltd
xchg
xchg
add
add
nop
nop
nop
nop
jae
and
lods
mov
pop
mov
clc
nop
nop
nop
nop
jae
or
xchg
mov
inc
pop
jne
clc
nop
nop
nop
nop
jae
imul
movsb
scas
or
mov
xchg
ret
xchg
add
ret
add
add
add
add
nop
push
mov
leave
cs
icebp
les
inc
hlt
add
push
clc
nop
nop
nop
nop
jae
add
xor
add
jp
add
inc
lock
mov
xchg
ret
xchg
add
add
lock
in
leave
cs
and
push
or
add
jo
push
nop
push
mov
leave
cs
xchg
imul
push
testl
clc
nop
nop
nop
nop
jae
push
call
add
mov
clc
nop
nop
nop
nop
jae
icebp
mov
add
add
loopne
fimull
sarb
xchg
ret
or
testl
dec
dec
mov
nop
nop
nop
nop
jae
add
add
inc
add
add
call
cs
mov
call
push
mov
xchg
ret
add
repz
inc
hlt
dec
inc
cli
add
mov
push
mov
xchg
ret
add
add
add
add
add
movsb
je
cmp
nop
nop
nop
nop
jae
and
add
testb
imul
loopne
add
mov
xchg
ret
add
insb
test
add
add
push
mov
xchg
ret
add
add
jp
add
add
add
jle
lahf
shr
nop
push
mov
leave
cs
add
inc
add
xchg
push
inc
add
cmpl
leave
cs
add
add
cli
add
add
fld1
push
mov
xchg
ret
add
and
and
add
or
addr16
add
add
ljmp
add
lret
inc
jb
add
push
clc
nop
nop
nop
nop
jae
add
add
add
and
xor
push
mov
xchg
ret
pop
add
or
repz
jmp
nop
jae
inc
push
add
out
inc
add
je
nop
push
mov
leave
cs
add
hlt
xchg
add
add
clc
nop
nop
nop
nop
jae
add
cltd
xchg
add
imul
xor
nop
pop
sub
push
mov
leave
cs
mov
add
clc
nop
nop
nop
nop
jae
out
movsb
cmp
les
clc
nop
nop
nop
nop
jae
cltd
jp
out
daa
add
icebp
add
clc
nop
nop
nop
nop
jae
add
or
xchg
mov
add
add
lahf
mov
clc
nop
nop
nop
nop
jae
add
add
repz
add
xchg
or
lret
lea
clc
nop
nop
nop
nop
jae
add
push
scas
add
add
rcl
insb
std
call
clc
nop
nop
nop
nop
jae
add
imul
add
add
shl
clc
nop
nop
nop
nop
jae
mov
cmp
inc
push
nop
cmpsl
loopne
push
mov
clc
nop
nop
nop
nop
jae
testl
mov
add
lahf
mov
clc
nop
nop
nop
nop
jae
insb
nop
adc
add
mov
inc
and
push
push
mov
xchg
ret
add
hlt
cmp
add
add
add
repz
pusha
scas
int
push
mov
xchg
ret
add
inc
or
out
insb
jp
add
add
inc
lods
push
mov
push
mov
xchg
and
add
inc
add
add
outsl
arpl
add
nop
nop
nop
nop
jae
testb
adc
pop
clc
nop
nop
nop
nop
jae
nop
inc
and
add
repz
add
call
clc
nop
nop
nop
nop
jae
and
push
add
repz
mov
xchg
ret
add
in
shlb
scas
and
push
adc
pop
push
mov
add
cmp
inc
scas
mov
add
push
inc
add
insl
jbe
mov
clc
nop
nop
nop
nop
jae
xor
adc
cmp
add
sbb
nop
nop
nop
nop
jae
testl
insb
insb
icebp
icebp
dec
add
je
add
hlt
daa
add
and
add
xlat
add
add
add
push
test
and
inc
add
add
jae
inc
add
pop
mov
clc
nop
nop
nop
nop
jae
inc
call
or
pop
mov
push
mov
xchg
ret
call
pop
add
data16
jbe
sbb
mov
leave
cs
push
icebp
add
xchg
testl
scas
fwait
push
mov
xchg
ret
xchg
add
mulb
and
in
xchg
add
inc
xchg
fldl
sti
clc
nop
nop
nop
nop
jae
add
adc
les
push
mov
in
bound
push
add
js
sub
cmp
pop
sub
inc
dec
add
cltd
jmp
jb
clc
nop
nop
nop
nop
jae
add
cmp
push
push
mov
xchg
ret
xor
add
add
push
inc
add
mov
jne
clc
nop
nop
nop
nop
jae
mov
add
mov
clc
nop
nop
nop
nop
jae
mov
in
les
add
mov
pushl
push
mov
xchg
ret
add
xchg
call
arpl
push
mov
leave
cs
rcrb
ret
add
cmpsl
xchg
add
popf
mov
nop
push
mov
leave
cs
mov
add
add
add
nop
nop
nop
nop
jae
adc
repz
cmp
nop
nop
nop
jae
xchg
mov
loopne
add
inc
jne
clc
nop
nop
nop
nop
jae
and
daa
fisubrs
imul
push
call
in
repnz
mov
or
add
jl
hlt
cmpsl
add
add
pop
aam
xchg
push
nop
push
mov
leave
cs
lods
inc
add
add
push
add
clc
nop
nop
nop
nop
jae
add
add
and
xchg
insb
outsl
movzwl
push
mov
xchg
ret
add
add
cmpsl
in
nop
mov
mov
test
add
clc
nop
nop
nop
nop
jae
add
add
and
push
mov
xchg
ret
add
add
call
sub
nop
nop
nop
nop
jae
add
inc
cltd
add
add
add
inc
imul
nop
nop
nop
jae
add
add
add
xchg
cli
add
jmp
add
add
add
add
xchg
mov
xor
nop
nop
nop
jae
and
mov
add
add
dec
jl
add
clc
nop
nop
nop
nop
jae
mov
repz
hlt
out
jnp
jle
add
cs
add
icebp
add
cmpw
nop
push
mov
leave
cs
add
icebp
inc
inc
mov
and
div
nop
push
mov
leave
cs
add
imul
ret
add
mov
push
mov
xchg
ret
mov
mov
mov
dec
add
push
mov
xchg
ret
add
cltd
add
add
xchg
and
add
push
mov
xchg
ret
add
add
add
mov
add
add
clc
nop
nop
nop
nop
jae
xchg
add
add
popf
xor
clc
nop
nop
nop
nop
jae
scas
add
in
cmp
jp
call
clc
nop
nop
nop
nop
jae
mov
xchg
testb
add
push
mov
xchg
ret
add
add
xchg
add
add
out
xchg
mov
push
mov
xchg
ret
add
add
scas
add
sub
sub
add
aas
pop
add
add
mov
or
nop
nop
nop
nop
jae
insb
add
ret
xchg
shlb
push
mov
leave
cs
add
add
xchg
add
in
leave
cs
fiadds
add
add
xchg
cmpsl
push
jbe
push
nop
push
mov
leave
cs
loopne
mov
in
xchg
inc
inc
xlat
call
clc
push
mov
xchg
ret
add
add
and
test
clc
nop
nop
nop
nop
jae
add
add
xchg
add
add
lea
clc
nop
nop
nop
nop
jae
add
add
cmp
les
add
out
inc
out
add
mov
mov
nop
nop
nop
jae
add
add
cmpsl
pop
nop
daa
fildl
repz
nop
nop
nop
nop
jae
movsb
mov
add
repz
scas
negl
inc
add
icebp
add
inc
add
add
add
add
sub
nop
nop
nop
nop
jae
hlt
add
add
add
add
or
nop
nop
nop
nop
jae
xchg
and
add
inc
pop
and
mov
add
clc
nop
nop
nop
nop
jae
testb
insb
add
xchg
or
mov
jg
clc
nop
nop
nop
nop
jae
mov
add
cmp
mull
mov
nop
nop
nop
jae
add
inc
add
cmp
push
or
test
mov
leave
cs
add
jp
mov
add
pop
nop
push
mov
leave
cs
insb
add
mov
add
repz
call
loope
incl
add
lods
jmp
dec
add
inc
pop
repz
add
call
ret
clc
nop
nop
nop
nop
jae
out
add
add
and
clc
nop
nop
nop
nop
jae
add
mov
add
les
xchg
add
inc
pop
lahf
push
mov
ljmp
add
leave
adc
pop
mov
pop
shlb
mov
xchg
ret
push
and
insb
add
shlb
add
clc
nop
nop
nop
nop
jae
cli
add
add
nop
push
mov
leave
cs
add
or
add
xchg
mov
push
mov
xchg
ret
repz
in
mov
push
mov
xchg
ret
add
xchg
lods
add
add
loopne
xchg
jmp
mov
add
add
add
les
add
test
fs
nop
nop
nop
nop
jae
add
inc
ret
daa
add
mov
jne
clc
nop
nop
nop
nop
jae
idivl
add
cld
push
inc
sbb
nop
nop
nop
nop
jae
add
in
add
mov
stos
sub
pusha
xchg
xor
push
mov
xchg
ret
add
cmp
ret
mov
inc
movzwl
nop
push
mov
leave
cs
add
add
mov
add
mov
pop
mov
mov
clc
nop
nop
nop
nop
jae
call
mov
loopne
add
mov
push
mov
xchg
ret
add
add
inc
add
imulb
push
clc
nop
nop
nop
nop
jae
add
add
xorl
arpl
xchg
ret
inc
mov
add
add
cltd
add
mov
sbb
nop
nop
nop
jae
add
mov
movsb
add
inc
je
clc
nop
nop
nop
nop
jae
add
inc
add
icebp
fcoml
out
jnp
call
push
jae
add
xchg
inc
add
cltd
mov
dec
cmp
nop
push
mov
leave
cs
add
adc
and
repz
add
add
nop
nop
nop
nop
jae
add
and
xchg
add
jp
mov
push
clc
nop
nop
nop
nop
jae
and
add
negl
xchg
ret
push
mov
xchg
ret
cmp
mov
daa
inc
dec
insb
add
clc
nop
nop
nop
nop
jae
push
insb
mov
div
add
daa
daa
fwait
push
push
mov
xchg
ret
add
add
add
cltd
add
and
shlb
icebp
clc
nop
nop
nop
nop
jae
notb
add
jp
add
add
cli
sub
push
push
mov
xchg
ret
mov
mov
add
xchg
xor
push
mov
leave
cs
add
mov
add
in
leave
cs
in
add
cli
add
cmpsl
xlat
int
add
add
leave
cs
out
push
adc
inc
cmp
cltd
ss
mov
clc
nop
nop
nop
nop
jae
and
add
inc
lods
add
inc
add
call
nop
nop
nop
nop
jae
jp
add
xchg
add
add
add
or
rep
nop
push
mov
leave
cs
add
movsb
add
les
sti
lea
push
mov
xchg
ret
inc
add
lods
and
movsb
in
add
nop
nop
nop
nop
jae
add
add
add
and
add
les
enter
add
test
mov
jb
add
xor
push
clc
nop
nop
nop
nop
jae
add
add
loopne
add
arpl
nop
nop
jae
add
add
mov
cli
lock
push
mov
xor
mov
jmp
push
popa
add
test
add
mov
nop
nop
jae
or
xchg
les
dec
in
cmp
mov
mov
xchg
ret
add
dec
repz
add
xchg
add
rep
clc
nop
nop
nop
nop
jae
cmpsl
les
and
add
mov
add
clc
nop
nop
nop
nop
jae
add
xchg
add
add
jmp
nop
nop
nop
nop
jae
testl
cmpsl
cltd
add
call
cs
add
adc
mov
nop
nop
nop
nop
jae
les
add
add
xor
clc
nop
nop
nop
nop
jae
xchg
repz
dec
repz
add
and
jb
nop
nop
nop
nop
jae
add
add
call
test
out
fistl
mov
or
ret
inc
xchg
add
icebp
add
and
mov
add
add
push
add
push
inc
xor
add
add
add
sbb
mov
push
mov
push
add
cld
add
cltd
add
arpl
add
add
and
mov
push
mov
leave
cs
or
add
dec
and
stos
mov
clc
nop
nop
nop
nop
jae
add
or
add
add
outsb
int3
popa
pop
push
mov
xchg
ret
out
out
add
add
pop
hlt
and
add
clc
xchg
sub
call
cs
xchg
les
hlt
call
mov
clc
nop
nop
nop
nop
jae
icebp
add
ret
cmp
add
loop
clc
nop
nop
nop
nop
jae
add
add
icebp
xor
add
in
jb
fwait
shl
push
mov
xchg
ret
add
ret
insb
push
add
insb
rolb
fwait
push
mov
xchg
ret
add
add
lods
sub
nop
nop
jae
xchg
add
add
call
mov
ds
decl
push
mov
xchg
ret
cmpsl
add
inc
lods
inc
imul
or
dec
inc
add
add
xchg
add
add
add
je
clc
nop
nop
nop
nop
jae
add
lods
add
roll
mov
xchg
ret
and
mov
add
nop
xchg
add
cli
jmp
nop
nop
jae
add
add
add
and
add
clc
nop
nop
nop
nop
jae
repz
in
lods
add
add
push
mov
xchg
ret
fidivrs
neg
mov
sub
push
mov
xchg
ret
add
dec
mov
testb
dec
divl
rclb
cs
insb
cltd
add
mov
add
xor
nop
nop
nop
nop
jae
add
in
in
rolb
insb
sub
nop
nop
nop
nop
jae
add
mov
cltd
add
icebp
and
stos
je
clc
nop
nop
nop
nop
jae
and
xchg
cltd
lods
add
add
push
mov
xchg
ret
add
or
add
add
sbb
cltd
popa
inc
add
add
add
inc
add
inc
add
add
insb
hlt
icebp
fiadds
add
add
nop
push
mov
leave
cs
mov
add
fisubrs
add
pop
movsb
aam
add
push
mov
xchg
ret
cltd
movsb
testb
or
insb
jp
and
push
aaa
fwait
clc
nop
nop
nop
nop
jae
add
mov
les
xchg
add
cli
cltd
add
pusha
int3
clc
nop
nop
nop
nop
jae
cmpsl
cli
xchg
add
add
add
mov
add
clc
nop
nop
nop
nop
jae
mov
push
insb
les
clc
nop
nop
nop
nop
jae
les
add
xchg
add
push
mov
call
cs
notb
xchg
insb
in
jmp
add
add
dec
xlat
add
add
add
add
add
repz
cld
clc
nop
nop
nop
nop
jae
cli
inc
add
loopne
xchg
daa
add
sbb
mov
leave
cs
rclb
add
or
xlat
add
icebp
or
fcoml
int
pop
jae
nop
nop
nop
nop
jae
fiadds
add
add
add
push
mov
add
mov
mov
mov
mov
and
popf
add
ret
mov
push
mov
xchg
ret
add
mov
add
push
and
inc
mov
mov
repnz
clc
nop
nop
nop
nop
jae
add
and
repz
repz
inc
pop
loop
jmp
and
add
clc
nop
nop
nop
nop
jae
add
cmp
add
add
sub
push
jo
add
nop
daa
mov
add
add
mov
xchg
ret
mov
add
daa
push
add
clc
nop
nop
nop
nop
jae
or
insb
in
add
add
ljmp
inc
add
ret
inc
scas
repz
les
inc
mov
xchg
jne
clc
nop
nop
nop
nop
jae
cmp
and
int3
mov
add
nop
nop
nop
nop
jae
cltd
add
jp
or
sar
nop
nop
nop
nop
jae
mov
xchg
mov
add
add
or
arpl
cs
add
add
cmp
adc
mov
nop
nop
nop
jae
ret
movsb
xchg
and
mov
add
out
add
clc
nop
nop
nop
nop
jae
xchg
shlb
add
scas
add
cmpsl
add
test
call
nop
push
mov
leave
cs
add
add
add
jmp
nop
nop
jae
add
add
add
xchg
add
dec
add
clc
nop
nop
nop
nop
jae
notl
add
mov
xchg
push
inc
add
mov
add
xchg
cmpsl
pop
add
add
pushf
push
mov
mov
leave
cs
add
add
add
add
and
add
nop
nop
jae
inc
mov
inc
mulb
call
cmp
dec
push
push
mov
xchg
ret
cmp
add
add
and
mov
cmp
in
imul
ljmp
aad
pop
adc
pop
cmp
push
mov
inc
xchg
add
adc
add
stos
jno
add
mov
add
add
mov
pop
clc
nop
nop
nop
nop
jae
mov
xchg
call
mov
inc
in
push
mov
xchg
ret
inc
xchg
and
insb
add
clc
nop
nop
nop
nop
jae
cli
jp
add
fiadds
add
mov
clc
nop
nop
nop
nop
jae
xchg
add
call
inc
mov
call
cs
add
add
add
add
and
nop
nop
nop
nop
jae
add
fiadds
insb
fiadds
add
add
nop
push
mov
leave
cs
les
repz
ret
dec
and
nop
nop
nop
nop
jae
add
inc
nop
and
add
fwait
mov
nop
push
mov
leave
cs
add
add
add
xchg
lods
add
clc
nop
nop
nop
nop
jae
out
add
add
add
icebp
loopne
mov
int
pop
jae
nop
nop
nop
nop
jae
and
add
nop
mov
dec
js
pusha
clc
nop
nop
nop
nop
jae
add
add
rcr
mov
mov
clc
nop
nop
nop
nop
jae
xchg
xchg
or
add
and
std
add
push
mov
xchg
ret
add
add
pop
or
push
clc
nop
nop
nop
nop
jae
add
inc
cmpsl
xchg
shr
xor
nop
nop
nop
nop
jae
add
inc
lods
push
add
cmpsl
push
xchg
addl
xorl
incl
add
jp
mov
inc
cmpsl
xchg
or
fdivr
clc
nop
nop
nop
nop
jae
add
or
add
mov
clc
nop
nop
nop
nop
jae
add
inc
add
cmp
add
mov
push
push
mov
xchg
ret
add
add
cmp
add
out
xchg
add
xchg
mov
insb
inc
add
icebp
and
add
icebp
add
rcrb
test
add
nop
push
mov
leave
cs
inc
add
inc
add
in
lock
ret
sbb
nop
jae
or
mov
adc
clc
nop
nop
nop
nop
jae
add
inc
in
add
add
adc
icebp
cs
clc
nop
nop
nop
nop
jae
inc
add
cli
add
add
roll
nop
nop
nop
nop
jae
cmp
xor
xchg
jp
and
add
sub
mov
xchg
ret
add
add
call
shlb
add
cs
add
xlat
add
repz
jp
je
clc
nop
nop
nop
nop
jae
fiadds
dec
add
inc
ret
push
mov
xchg
ret
fiadds
cltd
add
lods
nop
cmpsl
add
and
repz
jmp
add
xlat
add
xchg
xchg
add
add
add
lahf
jl
clc
nop
nop
nop
nop
jae
add
call
adc
imul
in
leave
cs
xchg
mov
mov
add
pop
push
mov
xchg
ret
add
add
add
add
les
push
mov
add
mov
pop
add
add
es
jo
add
hlt
dec
fld1
clc
nop
nop
nop
nop
jae
add
xor
add
add
add
xor
mov
xchg
ret
lods
add
add
add
fstl
mov
xchg
ret
inc
add
loopne
mov
mov
mov
cvtdq2ps
xchg
ret
inc
nop
or
repz
add
dec
inc
and
mov
xchg
ret
add
in
add
add
mov
pop
nop
push
mov
leave
cs
mov
mov
mulb
xchg
push
add
jmp
nop
nop
nop
nop
jae
xchg
ret
add
icebp
mov
adc
inc
sub
push
mov
leave
cs
inc
add
add
add
insb
call
fadds
inc
inc
push
clc
nop
nop
nop
nop
jae
add
hlt
hlt
or
fwait
push
mov
xchg
ret
lods
mov
daa
add
insb
add
nop
nop
nop
nop
jae
mov
and
adc
shr
shlb
mov
clc
nop
nop
nop
nop
jae
rolb
add
add
add
icebp
out
mov
inc
clc
nop
nop
nop
nop
jae
inc
xchg
add
add
and
add
mov
jg
adc
add
dec
iret
cmpsb
insl
push
daa
mov
in
add
enter
nop
nop
jae
add
loopne
jp
add
and
or
mov
xchg
ret
jp
add
xchg
add
mov
jbe
clc
nop
nop
nop
nop
jae
hlt
push
add
xchg
add
pop
mov
clc
nop
nop
nop
nop
jae
add
add
daa
imul
clc
nop
nop
nop
nop
jae
mov
add
add
imul
pop
clc
nop
nop
nop
nop
jae
xchg
push
add
add
inc
loopne
pop
push
mov
xchg
ret
cltd
add
jp
inc
add
add
add
hlt
xor
nop
nop
nop
jae
inc
add
add
add
inc
mov
mov
xchg
ret
pop
hlt
daa
add
add
add
loopne
dec
test
mov
mov
clc
nop
nop
nop
nop
jae
add
ret
add
xor
nop
push
mov
leave
cs
cltd
add
add
push
repz
or
add
imul
out
or
add
in
pop
test
movsl
xchg
jne
rcl
cmpsl
add
add
add
lea
clc
nop
nop
nop
nop
jae
xchg
add
inc
add
add
push
clc
nop
nop
nop
nop
jae
add
notb
fcomp
push
clc
nop
nop
nop
nop
jae
add
add
aaa
add
nop
push
mov
leave
cs
mov
pop
add
mov
inc
xor
clc
nop
nop
nop
nop
jae
repz
xchg
fisubrs
jbe
clc
nop
nop
nop
nop
jae
ret
xchg
cmp
add
xor
cwtl
xor
aaa
jne
clc
nop
nop
nop
nop
jae
repz
add
icebp
mov
nop
nop
nop
nop
jae
jp
cltd
mov
insb
dec
rolb
push
cltd
add
push
mov
in
jle
pop
add
dec
mov
into
xor
add
xchg
sub
fsubrs
mov
add
add
inc
scas
dec
cmpsl
cld
in
mov
sbb
sarb
sahf
cmp
jbe
xlat
insl
aas
adc
shr
imulb
and
push
testb
mov
andb
jg
ret
js
add
insb
lods
mov
bound
nop
sarb
in
sub
or
inc
push
fdivrl
xchg
mov
pop
mov
nop
shlb
push
or
movsb
aas
mov
add
shrb
push
testb
sub
or
jno
test
mov
shlb
inc
mov
int
rol
add
shl
inc
sbb
rol
inc
out
movsb
lahf
xchg
mov
sarb
daa
outsl
fwait
jno
mov
std
sub
push
icebp
and
arpl
outsl
imul
aad
or
push
clc
cmp
cmpsb
faddl
and
fstpt
inc
clc
es
cs
push
out
mov
add
shrl
push
pop
out
mov
test
outsb
sub
and
cmpsl
faddp
pop
sbb
shll
xchg
jnp
add
sar
fists
cmp
mov
jge
inc
adc
sarl
sub
or
loopne
repz
pop
pop
lock
mov
dec
jmp
clc
jl
and
jae
pop
adc
mov
cmp
mov
xchg
je
jecxz
xchg
mov
xor
jb
or
call
fsubrs
xchg
mov
mov
pop
cmc
sahf
aaa
sbb
dec
ljmp
push
gs
rol
xor
test
add
das
inc
xlat
std
add
dec
add
in
cltd
subl
jae
ret
int3
adc
rcll
cld
mov
jae
mov
and
xor
push
cmp
xchg
adc
sub
add
xor
out
pop
jle
mov
rcll
pusha
sarl
inc
call
pop
mov
aad
push
fstl
incl
ljmp
sub
jmp
add
test
jge
sbb
shl
and
and
sub
dec
repz
test
enter
in
xchg
inc
daa
xchg
mov
and
pusha
shll
je
sub
fidivrl
dec
mov
fdivrl
stos
mov
ret
or
ret
dec
pop
inc
dec
jns
negl
jnp
out
xor
ret
push
sub
aaa
xor
sbb
ret
fadd
repnz
sbb
mov
mov
mov
dec
dec
testl
dec
addl
mov
xor
lea
emms
mov
repz
lret
repnz
loope
cmpsl
pop
aaa
pop
imul
cmp
subb
cmpsb
out
adc
ret
cwtl
loopne
or
aaa
mov
repz
aad
mov
adc
ret
xlat
mov
aas
jne
popf
mov
mov
push
test
xlat
mov
sarb
jmp
cltd
test
das
lcall
shrl
pop
call
fimuls
push
mov
cmpsl
scas
insb
das
lret
cmp
jg
xor
neg
lods
je
jge
mov
mov
push
xor
mov
dec
fs
repnz
mov
inc
loop
inc
cmc
or
pop
mov
mov
lds
adc
xchg
nop
push
ret
jmp
add
inc
push
mov
ret
inc
xor
adc
out
or
cmp
adc
imul
mov
ljmp
jo
push
mov
xchg
imul
outsl
sti
iret
cmpsl
fdivp
mov
jno
and
rcll
test
test
fs
cli
outsl
adc
ret
mov
ret
data16
adc
clc
xor
fs
rol
mov
add
loopne
sbb
out
cwtl
nop
ret
fimull
mov
mov
stc
ds
orb
lret
cmp
lods
push
inc
lcall
rol
cmp
testb
adc
ja
int
incl
ret
mov
jbe
pushf
nop
ret
cmp
dec
repz
jns
popl
in
jo
cmp
xchg
mov
lods
pop
dec
dec
dec
push
mov
mov
push
ret
or
jle
mov
push
jns
add
mov
in
sub
sbb
pop
cmpsl
or
lea
fdivs
loopne
xchg
inc
ret
fistps
cmpsb
xor
mov
inc
ret
cmp
xchg
and
sbb
ret
fldcw
push
ljmp
ret
lods
les
push
dec
sahf
imul
pop
das
jnp
cmpsb
call
inc
ret
cmpsl
jno
icebp
test
mov
roll
in
into
lock
ret
push
xor
into
sbbb
int3
rcll
aad
xor
movsl
cvtps2pi
enter
test
pop
sbbl
adc
add
int3
gs
pushf
inc
ret
call
fldenv
pop
loop
mov
cld
fsubp
xor
mov
inc
aaa
cli
roll
movsb
and
ret
or
sbb
ret
dec
ss
sarl
xchg
aad
dec
mov
int
repz
push
mov
add
xor
cwtl
loopne
flds
jnp
pusha
les
stos
test
test
add
adc
les
addr16
inc
sti
xchg
pop
adc
xchg
insl
in
jne
leave
mov
les
les
les
stos
adc
push
adc
les
adc
xor
add
rol
stc
fwait
je
cli
mov
mov
pushf
pusha
les
mov
inc
dec
mov
xor
mov
pushf
jo
sbb
dec
jl
push
lds
fldcw
nop
rol
in
cmpsb
bound
adc
mov
insl
lods
test
and
loope
and
mov
les
arpl
mov
mov
pop
aad
pop
int3
imul
xchg
jecxz
adc
outsb
push
out
xchg
pusha
into
xlat
ret
mov
dec
jmp
jp,pn
lock
xchg
mov
ljmp
and
mov
pop
lods
xchg
mov
push
inc
imul
fdivr
ret
insb
and
int
jno
xor
inc
imul
repz
mov
out
sub
adc
sahf
and
mov
and
loop
out
xor
stos
adc
mov
lret
loopne
cwtl
push
fidivs
imul
nop
inc
lds
ds
cltd
pop
push
xor
cmc
sub
lret
test
in
dec
rcrb
subb
or
xchg
test
jle
andb
std
jmp
mov
sbb
popf
sbb
vmovaps
fisttpll
inc
imull
roll
lds
lds
fsubs
cli
xchg
xor
ljmp
scas
bound
adc
add
lds
pop
inc
mov
lds
cmpsb
xchg
adc
xchg
push
mov
push
lds
sbb
test
shlb
mov
mov
mov
test
jo
sbb
jno
cmp
je
fwait
xlat
pop
sub
leave
mov
pop
das
jae
cmp
push
movsl
dec
movsl
repnz
adc
adc
mov
test
or
jp
outsb
loop
or
mov
cs
outsb
sub
enter
inc
addb
pop
cmp
mov
pusha
bound
loopne
xlat
scas
push
ret
push
test
lds
out
rorl
mov
lods
mov
rol
or
out
jnp
sub
mov
sbb
xchg
cmp
pusha
loopne
sub
lods
rol
loop
std
fistl
lds
mov
lds
sarb
xchg
xchg
dec
cltd
repz
in
movsl
daa
repz
addr16
stc
adc
stos
jmp
lods
mov
nop
lds
add
int3
sub
aam
jge
xchg
pop
in
addr16
shlb
lcall
popa
pop
test
dec
jp
imul
imul
push
bound
push
dec
mov
mov
cltd
inc
int3
mov
test
lret
orl
lahf
pop
sbb
push
mov
jp
cwtl
add
subb
pop
mov
mov
xchg
sti
mov
xor
pop
pop
xchg
fdivrl
dec
andb
shrd
cltd
js
mov
cmp
mov
es
cmpsl
xchg
push
push
dec
arpl
or
sub
inc
pop
xchg
xchg
xchg
jle
popf
jne
iret
ficoms
shr
loopne
and
loopne
js
enter
xchg
icebp
addr16
roll
add
mov
adc
cmp
iret
adc
cmp
in
dec
cmp
pop
adc
inc
mov
inc
gs
jg
add
dec
mov
inc
and
test
lcall
cmp
xchg
scas
jp
push
daa
or
pop
enter
dec
lcall
loopne
iret
daa
test
movsb
add
adc
xchg
popf
pop
in
or
jbe
test
xchg
and
insl
rcrb
cld
inc
addr16
jmp
or
mov
mov
movb
hlt
xor
lock
add
outsb
dec
mov
jo
das
inc
sarl
movl
pop
test
and
cmp
mov
sbb
movl
jo
fisubrl
fdivp
imul
mov
add
and
adc
mov
test
shlb
lods
and
jbe
into
mov
out
ret
es
rclb
std
xor
jmp
xchg
lock
les
push
test
rorb
xchg
lods
mov
outsb
sbb
pusha
cld
pop
xor
stos
lcall
adc
sti
jnp
pop
jno
out
in
mov
add
lods
push
mov
mov
out
ja
xor
insl
jl
jmp
dec
lcall
jnp
addr16
dec
jge
test
cld
jge
xor
sub
or
in
cmp
test
in
push
gs
outsb
xchg
add
mov
sahf
lock
clc
pop
ljmp
loope
sub
test
dec
jb
cmpsl
testl
xchg
lcall
call
fst
mov
xorl
rcrl
enter
adc
and
jle
xchg
xchg
xor
mov
sbb
sbb
dec
pop
out
mov
stos
ret
fwait
leave
jnp
pusha
sbb
jp
jns
nop
add
mov
sbb
enter
enter
push
and
cmp
pop
cmp
xchg
or
cmp
inc
add
enter
lret
fs
in
lock
loopne
adcb
stos
mov
int3
cmp
mov
enter
imul
enter
iret
rcl
push
repnz
test
je
inc
push
es
push
or
push
fstpl
enter
shrb
xchg
cmp
fidivrs
xor
push
test
imul
repz
imul
xor
push
enter
push
int3
das
sub
rorb
enter
call
ds
rclb
mov
jo
frstor
mov
jp
adcb
fisubl
enter
xor
mov
cmpsb
xchg
push
jg
jg
iret
inc
insl
sub
ds
dec
shl
or
enter
js
or
mov
push
out
test
mov
fmull
popf
std
mov
sbb
cltd
fsubrs
adc
push
lock
clc
mov
xchg
mov
mov
cmpsb
out
aaa
push
mov
mov
enter
add
notb
lret
rcr
push
stos
or
add
lock
xchg
mov
jp
test
inc
in
int
pop
xchg
aaa
jecxz
add
lock
mov
ljmp
push
sbb
and
add
fldt
int
mov
mov
leave
mov
add
insb
test
sbb
sub
mov
mov
xor
add
leave
or
push
jne
popl
push
into
test
outsb
add
out
or
mov
fisttpll
mov
sbb
or
leave
dec
or
test
mov
fs
fisttpll
into
sub
ret
inc
lret
sbb
or
es
leave
mov
mov
insl
adc
cmp
fidivrs
push
ficoms
test
hlt
add
lret
leave
pop
push
aad
call
jecxz
adc
mov
test
cld
ret
add
leave
xchg
leave
movsl
shll
aam
xor
xchg
out
mov
add
into
pop
dec
pop
add
dec
mov
leave
cli
push
xchg
mov
sub
stc
sub
aad
pop
inc
sub
std
into
push
insl
adc
jp
dec
in
xlat
out
dec
jbe
sbb
fsubl
push
pop
sub
mov
cmpsl
lods
dec
sub
inc
and
dec
out
and
sbb
leave
addr16
cmp
cmp
lods
hlt
jno
or
leave
cmp
scas
sbb
push
sub
int
testb
mov
mov
cmp
jmp
jo
jb
sub
mov
out
dec
sub
push
pop
ror
lock
xchg
dec
push
xor
rcl
es
xchg
jmp
filds
lret
cwtl
adc
outsl
ljmp
movsl
jg
cld
clc
or
fwait
cltd
aas
xlat
push
xchg
push
in
rol
subps
outsl
loope
pop
outsl
pushf
ror
ja
psrlq
lret
shrd
addl
xor
adc
rcrl
test
add
xchg
xor
mov
cmp
aad
arpl
mov
mov
add
cmp
repz
fdiv
pop
cmp
daa
stos
mov
jo
mov
push
lods
je
int
enter
bound
loopne
or
ror
into
lret
adc
lret
and
test
imul
lds
lret
test
push
out
ret
jbe
mov
or
repz
test
sbb
cld
pop
adc
xlat
popf
jo
cmc
push
xchg
ret
ret
mov
xor
xor
movsl
clc
adc
pop
adc
lret
mov
cmpsl
fsts
lret
les
rcl
in
jb
out
in
repnz
mov
test
mov
jmp
nop
lret
nop
mov
loopne
into
cltd
adc
gs
xor
jmp
outsl
mov
outsl
test
loope
push
xor
cld
xorl
lret
sbb
lret
xor
cs
sbb
arpl
jns
arpl
mov
enter
pushf
adc
jnp
cmp
fidivl
les
repnz
rcrl
xchg
stos
and
jp
ss
test
addr16
jo
add
lret
roll
or
in
push
lods
cmpsl
ss
out
je
and
clc
lods
and
push
dec
lock
mov
loopne
xchg
gs
sahf
movsl
lgs
ja
cmp
rorb
and
cltd
mov
xor
mov
adc
loope
bound
pop
jns
sbb
lret
sarb
icebp
mov
jbe
pop
mov
ss
or
push
nop
lret
rcrl
jl
cld
dec
inc
jo
jnp
pop
xor
mov
imul
push
lods
lret
cwtl
and
pop
cwtl
pusha
lret
out
loope
pushf
adc
sahf
ds
cmpsl
je
ljmp
lret
fdivl
jg
mov
jo
mov
pop
sub
ret
fsubs
sti
push
mov
lret
xor
lds
mov
shr
jmp
repnz
sarb
dec
mov
loope
mov
stos
jge
sbb
mov
pusha
mov
lret
addl
cli
mov
push
cmpsb
push
test
dec
aas
stc
mov
sbb
adc
pop
aas
dec
or
adcl
scas
xor
sbb
pop
enter
or
inc
xchg
xor
mov
pop
aam
cmp
mov
loop
divl
mov
leave
lahf
cwtl
pusha
int3
push
fstpl
cmp
xlat
mov
pusha
fldl
inc
sub
lret
xor
fstpt
sar
dec
aad
dec
pop
jbe
dec
mov
sahf
ret
push
mov
mov
xchg
ret
pop
or
int3
in
pop
cmp
in
and
mov
subl
loope
stos
lods
pop
and
xor
inc
int3
xor
jle
lret
pop
popa
dec
xor
loope
shlb
cmp
and
jl
and
out
in
sub
pop
push
dec
jne
mov
ret
sbb
int3
pop
pusha
mov
js
outsb
pop
cmp
lret
inc
add
int3
or
xor
aaa
leave
lods
in
ss
inc
test
add
stos
and
sub
jp
fsubl
or
mov
int3
mov
cmp
test
and
jo
push
add
and
cmpsb
cwtl
and
in
mov
divl
cmp
in
inc
adc
adc
adc
shll
pop
sub
cmp
das
scas
push
sbb
and
outsl
sub
or
add
int
fildl
repnz
iret
mov
mov
or
lock
out
adc
popa
adc
test
int
mov
xor
in
outsb
sbb
ret
int
fstpt
push
pop
xchg
pop
ljmp
adc
dec
data16
cmp
dec
sub
data16
das
push
jo
loopne
popa
popa
sbb
sbb
pop
sbb
add
mov
mov
inc
lret
or
inc
add
int
dec
inc
and
or
insl
xor
inc
addr16
mov
shll
add
ror
jb
lahf
lret
aam
hlt
push
cmp
out
dec
sbb
push
or
int
aaa
mov
inc
push
cli
lea
mov
scas
fadds
mov
adc
int
cmp
popa
and
inc
jecxz
mov
stos
dec
lock
repnz
stos
daa
stos
jge
or
data16
mov
insl
mov
inc
cmpsl
stc
xor
lea
jns
dec
pop
cltd
pop
jo
sub
add
stc
xor
mov
or
out
sub
test
sahf
sti
loope
sub
pop
or
ror
repz
pop
mov
and
das
xchg
enter
int
cli
flds
dec
fstps
mov
push
rorl
push
int
sbb
mov
jno
push
pusha
int
hlt
dec
mov
dec
pusha
jbe
push
into
lret
mov
repz
aaa
add
out
xor
call
and
sub
xchg
int
scas
sub
mov
into
xchg
lret
add
stc
dec
imul
sub
mov
jmp
cmp
dec
xlat
test
and
or
gs
xchg
sub
jl
pop
pop
push
daa
addl
shrb
nop
or
inc
pcmpgtd
out
daa
inc
lods
in
cmc
push
inc
loopne
pop
push
jg
ja
mov
dec
lea
push
jp
loop
inc
nop
adc
rorb
push
cmp
xchg
xor
adc
fxch
pop
out
rcrb
add
mov
mov
rclb
jle
frstor
inc
adc
into
mov
js
in
xchg
dec
xor
das
sbb
xchg
popa
repnz
xlat
in
out
lods
lcall
add
push
inc
dec
xor
mov
push
out
xchg
xor
sahf
xchg
sub
into
enter
or
loopne
sub
jo
ljmp
popa
in
std
xlat
orl
negl
cmp
fbstp
xchg
cmp
ror
dec
shlb
out
mov
or
dec
popa
outsl
or
push
in
inc
xchg
jbe
icebp
pusha
mov
jnp
jo
hlt
pop
aad
xchg
aaa
mov
adc
into
lahf
lret
stos
cmp
loopne,pn
in
adc
jp
mov
jo
stos
mov
js
xchg
push
pop
xchg
mov
xlat
xchg
push
mov
iret
pop
aas
movsb
mov
add
add
shll
inc
iret
out
rclb
mov
iret
add
iret
push
dec
lods
test
les
mov
push
cmpl
cwtl
pusha
iret
scas
sar
aaa
xchg
loopne
sub
push
add
movsb
mov
push
xor
pop
inc
addr16
pop
xor
sbb
movsb
testb
mov
xor
xor
negl
mov
call
mov
sbb
iret
das
xor
pop
jo
popa
bound
inc
mov
sbb
out
dec
les
sub
lret
adc
iret
mov
inc
enter
in
sub
push
xor
xlat
loope
test
iret
jne
jns
lods
sbb
ret
popa
push
jge
inc
xchg
pop
push
shl
pop
clc
testb
sbb
cmp
mov
xchg
movsb
sbb
iret
xchg
push
addb
jp
mov
mov
xchg
cmc
push
or
sbb
aas
or
pusha
iret
jp
call
push
ret
sbb
lods
arpl
rolb
or
jns
aas
add
iret
xor
mov
movsb
in
push
lret
push
inc
test
pushf
loopne
insl
ja
imul
sub
lea
sub
int3
jg
lret
ret
adc
xchg
adc
jg
in
mov
fs
loopne
pop
popa
add
nop
rclb
rolb
push
enter
rolb
pusha
shlb
enter
and
add
sbb
imul
rcl
je
fists
push
ret
sbb
pop
insb
cmp
jbe
imul
pop
push
arpl
mov
mov
dec
xchg
incl
loope
repz
out
out
cmpsb
jo
scas
ja
rol
sahf
in
lods
inc
xor
xchg
mov
roll
shl
jno
mov
decb
ret
ss
mov
push
jnp
xchg
push
testl
mov
ljmp
inc
xlat
add
imul
pop
xchg
jle
scas
inc
scas
inc
xchg
mov
jle
lret
push
pusha
push
je
mov
pop
cld
mov
and
xchg
movsl
fdivr
push
add
outsl
fs
int3
pop
jmp
fs
fistpl
mov
repz
push
fstp
dec
jg
jg
mov
add
adcl
jae
push
push
dec
mov
pop
mov
and
mov
jp
mov
mov
rcl
cli
cmp
xorb
cmc
insb
mov
mov
in
sbb
sub
push
lret
cmp
fists
adc
enter
dec
mov
mov
lea
mov
sarl
mov
nop
rorl
or
adc
xor
int3
add
shll
sarl
pop
sbb
shll
sbb
sbb
rcl
pusha
jle
pop
dec
push
mov
mov
or
xchg
mov
insl
jae
cmp
mov
mov
out
cmpsb
add
dec
inc
daa
xchg
inc
mov
jns
lods
add
ror
movb
int3
push
andb
in
or
push
mov
xor
mov
add
dec
xor
sub
dec
bound
mov
mov
jmp
xorb
sub
mov
jmp
sti
cli
jo
adc
shrl
test
push
lods
jp
dec
push
sti
repnz
pusha
jno
push
push
push
fisttpl
adc
sbb
roll
xchg
xchg
mov
add
sub
pusha
rcll
mov
mov
pop
cmpsl
and
push
imul
roll
sbb
push
xor
fwait
sub
scas
js
mov
mov
sbb
loopne
rol
mov
fidivrs
shrl
repnz
adc
cmp
outsb
xchg
jecxz
lea
sbb
rcrl
mov
pop
push
lods
into
rolb
jo
xchg
loopne
stos
jmp
loopne
jae
movsl
and
arpl
dec
mov
incl
nop
rcrl
ljmp
cli
sbb
rcrb
pop
add
loopne
cld
inc
dec
out
fdivrs
inc
cwtl
mov
movsb
adc
sarb
rcrb
push
cmp
push
bsf
mov
rorb
push
cmpsl
adc
shlb
sarb
push
inc
sbb
sub
xchg
mov
sti
imul
sti
cmp
loopne
icebp
rcrl
xor
pusha
cli
test
mov
push
movsl
add
shrb
cmp
bnd
and
cld
or
sarb
dec
mov
xor
cli
out
adc
and
fs
adc
out
push
push
lahf
ljmp
cli
outsl
pusha
nop
rcl
lock
pop
cmp
sahf
sbb
adc
push
iret
sub
xor
shrl
dec
or
aam
and
aad
jmp
mov
mov
mov
jp
cmp
int3
rcll
xchg
addb
mov
mov
shlb
cli
xchg
sbb
rcl
push
add
mov
call
mov
inc
sbb
imul
pop
inc
loopne
xchg
iret
add
lret
and
or
je
pop
scas
fldcw
scas
data16
shlb
jg
pusha
pop
jg
mov
jmp
and
in
mov
add
xorb
add
ds
adc
sarb
xchg
inc
sti
outsl
mulb
adc
or
push
roll
cs
cmpsb
notb
push
test
mov
hlt
and
lods
mov
shrl
xor
daa
mov
jp
ret
inc
flds
insl
and
mov
jo
or
rorl
shrl
pop
and
bound
push
movb
cmp
inc
sbb
mov
repz
in
mov
sbb
ret
push
pop
es
xor
mov
xchg
subl
push
push
hlt
mov
mov
fwait
lods
push
mov
imul
jbe
nop
ror
mov
jo
lret
mov
adc
shll
inc
mov
push
rolb
rcl
lods
and
mov
inc
rol
jge
rclb
inc
gs
loopne
and
leave
stos
loope
mov
out
cmp
int
loope
mov
jl
and
adc
and
jecxz
jb
sbb
cli
cmc
push
sbb
outsl
fisubrl
leave
add
rorl
cmpsl
adc
adc
push
rcrl
sbb
shll
icebp
xchg
shrb
int
orl
mov
pop
fmul
sub
push
shrl
pop
gs
inc
scas
out
std
sbb
mov
sub
movsl
jno
in
fildl
xchg
mov
mov
mov
xor
sub
pushf
xor
lret
sub
js
push
daa
mov
inc
icebp
push
inc
out
pop
xchg
popa
adc
aam
pop
mov
aam
inc
aam
pop
pop
repnz
and
mov
xchg
inc
aam
inc
cli
pop
jns
lret
inc
add
sub
int3
icebp
push
inc
aas
dec
or
mov
inc
hlt
int
popa
icebp
pop
xor
cmc
sub
inc
lods
jae
lock
cwtl
nop
aam
hlt
jae
and
mov
pop
sub
in
pusha
aam
mov
xor
loopne
lods
filds
sarb
pop
pusha
xchg
mov
std
ret
push
stc
add
jo
pop
pop
scas
aam
sbb
aam
mov
ret
das
xor
mov
pop
add
pop
inc
inc
pusha
push
xchg
adc
mov
lret
lcall
jns
add
mov
ljmp
mov
jle
xchg
mov
mov
sti
mov
clc
jnp
push
ret
jo
and
enter
cmp
sbb
xchg
inc
aam
out
lret
sbb
push
and
jecxz
jmp
or
test
lcall
cmc
mov
xchg
das
dec
pop
pushf
adc
dec
lds
jb
fsub
in
pop
cmpsl
or
aam
pop
xor
mov
xor
cmp
mov
sbb
cmp
xchg
je
xchg
repz
add
aam
mov
inc
jmp
movsb
inc
push
mov
popa
adc
mov
jecxz
mov
into
les
mov
aaa
cltd
stos
dec
loope
mov
mov
and
mov
push
mov
lods
push
popf
adc
fmul
mov
push
loope
gs
xor
repz
pop
cmp
jmp
loop
pop
clc
or
mov
inc
mov
xchg
jecxz
add
pop
imul
push
mov
out
inc
cmpsb
into
lock
dec
inc
xchg
ja
mov
or
fcmovnu
jns
adc
ja
andb
fwait
push
fwait
xchg
ljmp
adc
in
xor
inc
xchg
adc
sbb
inc
lret
outsl
push
int3
shll
jge
leave
push
int
adc
aad
cmp
aad
inc
fwait
std
jne
popa
jnp
mov
fldt
and
mov
cld
cmp
js
xchg
stc
jbe
mov
mov
fxch
pop
or
aad
fld
add
aad
dec
cltd
ja
fdivrp
aad
aaa
cmp
fidivrl
fwait
pop
mov
adc
xlat
popf
xchg
jbe
mov
scas
shlb
dec
ljmp
or
aad
daa
repnz
push
or
aad
mov
mov
jbe
insl
clc
and
addr16
or
or
test
lods
pop
adc
aad
mov
jo
xchg
xor
push
lods
jbe
lock
jae
mov
adc
repnz
mov
sbb
imul
nop
adc
pop
jo
cmp
mov
loopne
fadds
pop
fisubrs
pusha
and
xchg
mov
shll
cmp
pop
push
jae
les
and
scas
arpl
in
fldlg2
data16
push
fs
lret
addb
sti
inc
jmp
cli
xchg
sbb
popa
inc
push
push
imul
and
out
fcmovne
shlb
aam
hlt
jmp
scas
scas
jo
inc
and
out
jl
mov
xchg
pop
imulb
jno
adc
xlat
jmp
cmp
adc
lock
in
xor
jl
and
cmp
xchg
dec
add
sahf
adc
xor
xor
pop
shr
dec
cmp
add
enter
rcl
xchg
jno
mov
mov
sbb
fadds
inc
mov
fwait
sbb
and
inc
repnz
xor
sub
jmp
inc
andb
sub
aas
iret
fildll
xor
pop
movsl
dec
lahf
pop
and
sahf
mov
std
fdivs
mov
aaa
xor
out
andb
jne
mov
jle
sahf
pop
cmp
xor
cwtl
mov
daa
push
sub
cmpsb
scas
mov
or
or
add
pop
or
mov
iret
xor
mov
movsl
insb
sbb
sbb
add
pop
subl
mov
lock
pop
in
xchg
add
and
cvttps2pi
pop
pushf
inc
xlat
cmp
adc
inc
mov
xorb
mov
adc
dec
dec
cmp
mov
pop
rcrb
popf
gs
jns
call
add
in
popa
ljmp
daa
mov
loop
loopne
xchg
out
fsubrs
cs
stos
jbe
xchg
and
es
jne
js
jecxz
addr16
adc
divb
adc
popa
jb
or
dec
push
jmp
adc
mov
movsb
lods
arpl
add
in
loope
or
jl
jg
jo
dec
inc
dec
mov
stos
sub
mov
mov
test
les
insb
out
ja
cmp
andb
push
mov
idiv
sarl
scas
and
popf
fiaddl
ljmp
pop
out
push
push
jmp
xlat
push
ds
rol
cmp
out
imul
adc
pop
xchg
mov
dec
inc
pop
daa
shll
cmpb
lods
sub
and
jo
and
mov
mov
add
adcb
xchg
movsl
push
test
nop
xlat
out
inc
mov
ljmp
fbstp
push
das
adc
stos
pop
aam
out
sbb
pop
hlt
clc
jno
fisubl
xlat
cwtl
adc
out
pop
shl
xchg
mov
mov
xor
test
jb
push
sti
enter
stc
fistl
fsubs
dec
jecxz
jp
pusha
fadds
rcr
aaa
rolb
je
ficomps
mov
mov
lods
lret
iret
xor
push
pop
shl
lock
fdivs
call
lcall
xor
das
add
fdiv
push
jnp
rorl
sbb
fdivr
in
mov
and
cwtl
nop
fdivrs
xor
fistps
sub
xchg
jae
cld
outsl
rorb
sbb
mov
mov
dec
dec
xchg
inc
fadds
jo
testb
paddusb
jo
scas
mov
jbe
test
test
repnz
inc
mov
add
push
cmp
xchg
in
and
aaa
fistpll
xchg
dec
jle
mov
mov
shll
fdivs
add
fsubs
push
addr16
mov
mov
cli
stos
lea
data16
mov
lock
outsb
pop
or
shl
inc
cs
pop
pop
outsb
sbb
fmuls
nop
fdivrs
fdivr
scas
stos
in
movsl
and
negl
aaa
ja
insb
lahf
std
mov
jp
out
pusha
xchg
sahf
aad
std
push
adc
imul
popa
rclb
fs
pusha
testl
mov
push
mov
sub
unpckhps
and
pop
mov
dec
mov
mov
fnstenv
jo
lret
mov
std
add
shlb
pop
in
mov
dec
push
iret
lret
cld
sbb
fsts
out
mov
jecxz
stos
pusha
stc
incb
loop
mov
loope
rcr
cmpsl
xchg
test
cltd
roll
inc
inc
push
fs
or
push
push
and
push
cmpsl
fcmove
cmp
fsubl
xchg
icebp
fidivrl
fldcw
aas
jo
push
pop
ljmp
fwait
push
xchg
shlb
push
jb
stos
ret
xchg
jle
into
ret
mov
dec
loop
and
cmp
lret
xchg
push
xor
jne
stc
add
inc
dec
arpl
push
fldenv
cwtl
rcr
aas
incb
int3
bound
xchg
nop
xor
je
jo
jbe
rep
nop
fstps
mov
cmp
or
pop
push
ja
fiadds
fxch
and
sbbl
inc
push
mov
mov
lahf
pop
mov
fcmovu
sarb
es
jo
in
roll
pop
dec
inc
sahf
fnsave
mov
iret
pop
cmp
push
das
pop
pop
mov
aaa
inc
mov
mov
jo
mov
les
mov
ret
lea
outsl
out
mov
lea
es
icebp
stc
movsb
subl
dec
movsb
iret
cmpsl
in
out
addr16
hlt
or
fdecstp
roll
rcr
xor
fisubrl
fisubrl
psrld
add
fmuls
fisubl
sbb
fidivrl
and
fcmovbe
mov
adc
push
cmc
or
mov
iret
imul
fiaddl
xlat
in
or
xor
loope
xor
or
add
lret
add
sti
ret
test
fiaddl
test
or
fisubl
cli
cmovne
rorl
xchg
sbb
movsl
hlt
mov
mov
inc
enter
sbb
xchg
xchg
pop
in
test
sbb
mov
add
out
lock
les
mov
scas
arpl
into
xchg
or
adc
enter
push
mov
fimull
sub
in
inc
and
pushf
add
daa
xlat
arpl
test
insl
stc
icebp
fisubl
push
fisubrl
xchg
rcr
lds
pop
shl
add
dec
fs
orl
mov
jae
sub
div
popa
xchg
or
int3
into
mov
pop
pop
add
clc
outsb
lahf
xchg
scas
cmpsl
sub
ret
xchg
rcr
ds
sahf
sbb
pop
mov
jo
push
inc
out
jmp
push
cs
fisubrl
xchg
stos
rclb
xor
test
shll
mov
jo
ljmp
fidivl
scas
or
fiaddl
add
sub
iret
and
xchg
or
dec
jo
push
add
lods
sub
std
jnp
ror
sub
jno
stc
imul
testl
push
xchg
cmpsl
repnz
cmp
push
jmp
and
pop
inc
bswap
jmp
inc
leave
stc
addb
pop
pop
fadd
mov
mov
jo
cs
nop
sbb
dec
mov
inc
mov
mov
mov
movsb
and
mov
push
lahf
inc
fisttpl
fcomi
scas
or
insl
add
nop
rcr
daa
cld
aas
in
mov
cmc
mov
mov
rcr
sub
pop
aas
idivb
mov
jno
sbb
and
cltd
out
pop
dec
sar
aam
ss
movsl
enter
lcall
mov
mov
fstpt
mov
sub
mov
or
fldt
sub
pop
sub
mov
test
xor
in
xor
rcr
jecxz
rcr
jp
test
fcmovnu
inc
jns
jp
lods
aam
dec
add
dec
aad
jp
fsubs
mull
mov
sbb
inc
stos
stos
add
cli
lcall
stc
cmp
pop
xchg
nop
add
in
xchg
cmp
mov
into
inc
jecxz
es
jae
or
stos
adc
fistpl
xor
jb
inc
push
in
adc
xor
rorb
leave
pop
enter
fisubs
sub
sbb
adcb
nop
fadd
cmp
push
mov
stos
add
adc
mov
jb
push
lahf
xchg
mov
sub
pop
add
push
jp
push
inc
int3
scas
xchg
movsl
stos
mov
daa
inc
movsb
jnp
cmp
fcompl
push
inc
mov
jl
adc
and
and
dec
lcall
ss
movsb
out
hlt
nop
loopne
lcall
faddl
push
test
fs
arpl
dec
ss
rcr
pop
jne
aas
out
repnz
and
dec
mov
inc
fdivl
sahf
iret
mov
test
fsubrl
mov
test
fsubrl
out
mov
rorl
fsub
mov
fcompl
xor
rep
fucomi
movsb
subl
es
fcompl
stos
dec
cmpsl
mov
pop
jecxz
cmpsl
cld
jno
jp
jle
into
aad
jbe
into
inc
jp
cmp
cmc
in
ds
scas
sbb
loope
pop
insb
loopne
jno
cmp
fdivrl
or
cltd
pop
xor
sbb
sbb
dec
repnz
dec
out
shlb
jo
dec
ja
and
adc
xchg
and
scas
daa
inc
shll
xchg
inc
hlt
fwait
mov
clc
in
mulb
jno
lds
mov
mov
push
ret
andb
xchg
adc
xor
hlt
dec
lcall
mov
push
ds
push
in
add
int3
mul
cmp
outsl
mov
xlat
mov
fstp
lea
ficompl
test
in
push
fsubl
jns
and
sahf
imul
js
dec
aaa
inc
addr16
rcr
mov
notl
jmp
ret
cmpsb
cmp
fstl
dec
pop
icebp
rorb
push
lods
fwait
sti
xchg
cmp
lock
test
jmp
popf
mov
aas
jg
cs
pusha
push
dec
frstor
or
inc
cltd
fcmove
mov
push
lahf
and
jmp
dec
pop
fdivrl
hlt
mov
ffree
mov
dec
pop
popf
add
mov
aad
jae
jnp
adc
sub
mov
sarb
lock
clc
fsubr
mov
or
arpl
jp
cli
mov
filds
jge
loopne
jno
pusha
andl
jle
je
imul
sbb
fstpl
sbb
lds
pusha
cli
stos
mov
int
int3
push
jo
js
cld
fcmovb
imul
outsb
dec
je
es
lahf
ficoms
hlt
lea
dec
lret
dec
xchg
es
jno
and
test
and
scas
insb
loope
sub
ljmp
xor
stos
and
jae
mov
push
fisttpll
add
and
fnsave
inc
sub
jg
imull
push
add
fnsave
rclb
xchg
cwtl
push
ficoms
xchg
leave
xor
adc
stc
out
insb
add
and
ja
arpl
push
cmp
push
fiadds
dec
out
daa
pop
es
pop
pop
adc
add
jle
jg
inc
mov
insb
rcrl
pop
sub
jbe
lcall
dec
out
hlt
add
les
mov
adc
fnstenv
je
inc
out
and
sbb
mov
jo
adc
fiadds
movsb
inc
xchg
sarb
int3
mov
aaa
vpsubd
out
negl
pop
dec
mov
aam
cltd
cli
dec
sahf
jbe
nop
and
test
pop
das
in
push
jbe
inc
out
and
xchg
xor
inc
adc
fisubs
add
gs
jb
int3
xchg
or
ficomps
imul
out
adc
fidivs
aaa
add
mov
imul
inc
mov
ss
pop
cwtl
rcr
cwtl
add
dec
aaa
mov
push
xchg
lcall
decl
add
test
ret
outsb
mov
fldlg2
js
out
mov
sti
cmp
adc
sbb
inc
pop
mov
fmuls
and
es
popf
shr
inc
data16
adc
jecxz
push
clc
xchg
mov
and
push
test
mov
rcrb
fimuls
mov
push
and
cmp
sbb
rcll
pop
out
movsb
xor
push
out
sbb
lds
cmpsl
pop
les
scas
loope
ljmp
in
repnz
lret
push
xchg
jo
xor
inc
stos
pop
roll
mov
stos
and
sahf
into
out
mov
jno
dec
cmpsb
mov
cs
lea
out
push
sub
inc
movsl
out
add
jmp
or
cmc
iret
jne
movsl
bound
addr16
bound
pop
push
jle
nop
mov
mov
fnstsw
xor
test
cmpsl
lret
mov
pop
xchg
pushf
nop
fbld
dec
shrb
fnsave
cmp
sub
dec
pmaxub
xor
inc
add
jg
jge
mov
hlt
cs
addb
mov
nop
sbb
pop
nop
nop
filds
filds
sbb
fists
or
fists
mov
jnp
sbb
fistps
and
std
outsb
pop
push
fldcw
inc
mov
xchg
insl
mov
sbb
add
or
insl
add
inc
fisttps
xchg
rcr
xlat
or
push
clc
mov
cmp
pop
cmp
aas
in
fwait
repnz
fisttps
test
nop
rcr
xor
mov
sbb
lret
lods
mov
out
push
push
mov
jg
mov
icebp
ret
fwait
and
loope
nop
lock
push
test
mov
jp
outsl
mov
ret
jl
ljmp
out
or
xchg
ljmp
scas
shrb
sti
jge
cmp
movsl
mov
gs
dec
push
popa
mov
inc
fucomi
fcmovne
cmpsb
mov
inc
sti
adc
loopne
dec
adc
in
rolb
pop
push
xor
mov
cmp
jbe
lock
jno
dec
jecxz
sub
adc
xorl
shl
sahf
data16
fstpt
frstor
and
sahf
and
push
test
clc
ret
ror
andb
dec
dec
sub
cmp
dec
mov
dec
ja
fsubrl
jnp
add
cmc
leave
cmp
push
enter
mov
pop
mov
dec
cld
xchg
inc
pop
mov
sbb
inc
cs
out
jnp
mov
les
lock
pop
xor
outsb
sbb
jle
sub
mov
fsubr
sbb
and
xor
into
add
adc
imul
xorl
loopne
cmpsl
lret
out
mov
loopne
push
cmp
xor
lcall
adc
cmp
addr16
mov
pop
fst
cmp
cmp
call
jae
lock
in
xchg
adc
mov
adc
mov
aam
test
in
push
xor
outsl
js
test
jne
fwait
add
loopne
jbe
stos
movsb
sbb
int3
leave
mov
enter
xchg
inc
loope
cmpsl
inc
jecxz
mov
mov
push
sbb
jl
lea
incl
adc
mov
faddl
jp
xchg
loope
rcrb
mov
sbb
repnz
dec
icebp
push
rcr
fstps
loopne
jg
sidtl
mov
loope
btc
mov
stc
inc
sub
xchg
mov
mov
push
dec
aaa
push
js
cmpsb
add
loope
xlat
xchg
push
ret
test
jl
xchg
out
and
mov
mov
dec
lea
mov
imul
aas
ficompl
pushf
push
loope
xchg
push
mov
sub
insl
mov
out
jns
fcompl
jne
push
inc
jnp
fnstenv
icebp
sub
outsl
mov
shr
xchg
rolb
loopne
sbb
sub
or
sub
cmp
loope
and
sub
loope
ljmp
dec
insl
xchg
iret
js
xor
in
jp
sbb
mov
mov
in
push
sbb
push
mov
and
and
std
mov
inc
gs
fwait
mov
mov
push
dec
xchg
stos
jb
inc
ja
inc
lret
jg
adc
shl
movsl
sahf
jb
fldcw
test
loopne
lock
pop
add
scas
xor
jae
mov
pop
addl
inc
xor
lea
fidivrl
pushf
loopne
lcall
xchg
scas
rclb
mov
add
push
lcall
ja
js
and
sbb
inc
mov
push
pop
lea
fst
xor
fs
cld
lcall
nop
lock
jne
sahf
pop
sbb
adc
jbe
test
shlb
cmc
pop
enter
test
cmpsb
pop
and
loop
fildl
mov
mov
loope
test
pop
mov
dec
outsl
cmp
jo
push
inc
andl
lea
ret
mov
out
and
jl
lods
dec
cmp
push
mov
fildl
fs
and
cmp
or
loop
test
loopne
repz
aaa
and
push
aaa
add
inc
test
loop
push
push
hlt
in
mov
mov
jb
lcall
cltd
sarb
or
aad
pop
and
rclb
lods
pop
aas
dec
push
test
in
pop
sub
jl
xchg
jo
test
mov
in
dec
or
loop
fmulp
push
dec
and
out
mov
mov
int3
push
push
sub
jle
iret
cwtl
push
loop
lea
xor
sub
push
mov
loop
mov
aas
lds
cmp
jb
jo
push
or
push
in
leave
dec
add
xchg
and
xor
imul
dec
dec
adc
nop
jecxz
aam
xchg
add
and
pusha
jecxz
sub
pusha
fnsave
or
jecxz
xor
jge
xor
pushl
lock
add
jecxz
loopne
xchg
inc
aad
sub
enter
test
xchg
fs
inc
das
push
dec
int
lcall
shrl
pusha
jecxz
mov
mov
fcmove
cmpsb
mov
inc
dec
and
sub
and
inc
sbb
jecxz
cmp
push
das
inc
scas
sti
xchg
xchg
and
xor
cwtl
lock
das
outsl
mov
rorl
pusha
push
lret
mov
or
jecxz
xchg
ficoml
jo
mov
orl
pusha
jecxz
fimull
mov
imul
add
pop
fisttps
adc
das
pusha
xor
jecxz
pushf
xor
popf
xchg
ret
lcall
shr
jecxz
jno
mov
dec
fbstp
je
fwait
fwait
aad
les
mov
out
sub
je
shrl
ss
and
addr16
jle
jp
xchg
das
imul
mov
repnz
addr16
mov
inc
sub
mulb
shll
aaa
in
xor
cmp
push
jecxz
outsb
mov
out
mov
das
mov
sbb
movsl
mov
in
jecxz
or
dec
dec
xor
push
sub
push
and
int
shl
repz
xchg
ljmp
push
in
and
xor
call
xlat
outsl
mov
and
iret
mov
mov
nop
in
xor
adc
xchg
imul
xchg
jo
arpl
and
popa
xor
or
adc
cmp
dec
aad
push
mov
out
mov
push
or
lods
xchg
push
in
cli
xchg
inc
push
adc
test
sbb
in
lahf
dec
jno
xchg
push
xchg
inc
in
fwait
movsb
fwait
out
stc
sub
jmp
jo
lret
mov
lock
inc
xchg
jae
mov
stos
rcrl
pusha
in
push
xor
jle
mov
into
add
repz
dec
jecxz
gs
movsb
stc
test
in
dec
mov
lret
adc
in
xor
clc
adc
in
js
xor
cmp
lret
data16
dec
mov
lret
adc
or
cld
jns
adcb
out
xorl
scas
mov
mov
cmp
rcll
es
jnp
xchg
inc
jge
fisubrs
mov
sbb
jmp
dec
pop
cmp
pop
inc
mov
test
or
push
jl
rcrl
nop
in
add
cmpsb
xchg
jecxz
fwait
push
repz
inc
out
mov
dec
xor
xor
in
sub
mov
sbb
loope
sarl
xor
adc
shrl
mov
in
stc
ds
jo
fimull
mov
lock
sbb
into
aaa
adc
in
ljmp
add
xorb
imul
pusha
in
shl
sahf
rol
shll
and
sub
scas
add
dec
dec
stc
push
add
subl
repz
jg
lahf
lods
xchg
lret
icebp
mov
negb
adc
in
push
sarb
out
dec
movsl
cmpsl
insl
out
mov
in
sar
or
lods
gs
test
dec
lods
lds
in
adc
lock
jp
mov
sbb
out
dec
pop
dec
jle
test
push
stos
xorl
rcl
add
clc
mov
and
and
dec
mov
not
adc
push
outsb
sbb
in
insb
ficompl
jns
xchg
cmp
mov
mov
jl
movsb
push
test
push
decl
xor
inc
add
mulb
fildll
mov
movsb
xchg
hlt
mov
mov
jbe
imul
aad
jmp
xchg
rorb
sbb
daa
jmp
dec
inc
add
mov
popf
fcmove
or
jmp
ds
pop
jp
sahf
dec
test
mov
jb
lds
shll
push
xchg
mov
jle
pop
in
mov
mov
addl
lcall
daa
add
out
dec
jae
sbb
out
insl
addr16
lods
divl
bnd
sbb
push
xor
iret
inc
xchg
pop
imul
add
adc
scas
mov
sub
mov
and
in
and
add
sub
adc
out
inc
xchg
outsl
sub
aaa
mov
jne
or
ss
mov
mov
daa
mov
notl
jl
sub
mov
xor
xor
cmpb
pusha
xchg
mov
xchg
add
jnp
jl
and
cld
xor
add
pushf
jo
fcoms
or
add
out
adc
sbb
inc
shl
push
cmc
push
mov
jle
in
xchg
mov
nop
out
ss
insl
and
xor
jle
mov
inc
lcall
lods
mov
sarl
pushf
loopne
cmp
inc
mov
sub
loopne
ss
hlt
imul
jecxz
ret
mov
dec
mov
outsb
lods
xchg
mov
push
out
sbbl
adc
sub
push
out
loope
fldenv
and
mov
cmpl
aaa
stos
sbb
adc
mov
xchg
cld
repz
xor
mov
fwait
insb
inc
sti
in
je
push
or
mov
mov
inc
lods
bound
xchg
mov
mov
js
mov
sahf
pop
cli
push
bound
cld
mov
pop
andb
push
lods
mov
sub
repz
or
comiss
mov
repnz
jb
mov
lds
fucom
test
out
add
mov
push
std
lock
mov
adc
out
pop
enter
test
inc
out
sbb
mov
push
add
setae
mov
sbb
sbb
out
scas
rclb
lea
insl
or
mov
outsb
push
in
mov
jno
xorb
sarl
push
hlt
jbe
push
and
outsb
mov
jno
sbb
jge
pusha
out
scas
ljmp
sar
jns
adc
outsb
stos
into
add
lock
mov
fimull
dec
sbb
xor
filds
xchg
adc
int
inc
mov
xchg
mov
ret
jge
out
inc
pop
hlt
pop
sbb
popf
int3
cmpsb
test
das
dec
mov
cmp
call
mov
and
dec
mov
cmp
push
cltd
pop
ds
loope
mov
mov
mov
or
add
mov
push
sbb
out
push
mov
sub
ret
jns
lret
scas
imul
pop
xchg
sub
mov
insl
aaa
xchg
not
iret
xchg
arpl
call
sarl
imul
mov
sbb
call
mov
lret
sub
push
gs
push
mov
aas
add
call
in
mov
das
inc
mov
call
add
mov
mov
iret
in
mov
stos
mov
push
pop
fs
ds
sbb
call
cltd
dec
and
call
sub
pop
push
inc
movsb
xorb
jecxz
dec
cwtl
inc
call
push
dec
jns
insb
pop
ljmp
mov
inc
fwait
xchg
jl
jae
shll
jno
and
add
or
aad
xchg
sti
inc
sbb
js
fucompp
pop
push
out
inc
loope
xchg
pop
rcll
aad
inc
call
dec
or
data16
jmp
fsubrl
rclb
sti
inc
das
sub
adc
call
dec
and
push
xor
adcl
xchg
jne
jge
ljmp
enter
stos
je
mov
test
adc
mov
popf
add
sub
xor
out
mov
dec
es
lcall
lahf
imul
insl
inc
push
pop
ret
adcb
ss
jmp
imul
rcll
dec
mov
push
dec
mov
fsub
das
mov
sub
ret
fnstsw
jmp
jno
mov
lea
dec
jne
mov
push
jge
inc
cld
outsb
jbe
sub
pusha
jmp
sar
fwait
add
fsubrl
mov
pop
xor
dec
mov
xchg
lret
ret
cmp
dec
push
mov
les
out
push
sbb
into
repz
and
and
out
imul
bnd
lahf
cmp
mov
in
test
movsb
int
jno
inc
mov
push
jmp
add
not
cmp
sub
shr
ret
adc
and
jmp
iret
aam
push
pop
adc
inc
lahf
xchg
dec
mov
mov
mov
pusha
jmp
mov
inc
dec
or
jmp
jmp
leave
movl
inc
mov
jae
ret
mov
out
pop
sub
rol
pop
das
push
pop
lret
sub
mov
add
sbb
pop
xchg
xchg
xchg
mov
adc
sbb
jmp
mov
inc
jmp
pushw
sarb
ss
fmuls
addb
cwtl
sub
sbb
pop
jg
testl
test
push
push
push
ds
pusha
repnz
sbb
ljmp
aad
push
loope
lods
push
mov
cmp
xchg
fdivrl
sub
fsubrp
out
andl
ljmp
ljmp
jo
std
push
repnz
cmp
nop
inc
ljmp
shrb
mov
inc
inc
not
and
fwait
mov
inc
sbb
ljmp
dec
push
out
aam
cwtl
mov
int3
pop
nop
and
inc
call
mov
iret
lds
icebp
cmp
bound
out
jae
dec
shlb
adc
into
scas
pushf
inc
ljmp
shr
nop
add
xor
pop
int3
dec
pop
inc
jge
mov
adc
fmuls
push
jp
mov
ljmp
dec
pop
dec
addb
mov
loop
rcl
mov
xchg
ss
inc
ljmp
push
sub
ret
shll
sub
pop
pop
scas
frstor
add
mov
add
lock
loop
addr16
add
mov
sahf
popf
daa
jp
lahf
pop
xor
cwtl
adc
push
xchg
ljmp
fists
push
push
and
mov
pop
lahf
js
sub
xchg
fwait
cmp
inc
shrb
lea
adc
push
out
fs
fwait
arpl
jae
xchg
mov
lods
fbld
dec
fs
jmp
pop
fmulp
pop
aam
cmp
fs
sub
jae
loop
incb
nop
add
mov
andl
mov
imul
sbb
xor
lret
icebp
and
pop
xor
arpl
sahf
pusha
int
mov
add
dec
inc
add
inc
pop
popf
or
jmp
jp
adc
call
mov
sub
or
cwtl
lock
pushf
xor
aaa
lahf
loopne
fdivs
lahf
mov
jmp
icebp
shrb
sti
add
jmp
test
mov
add
mov
aas
push
jns
ljmp
xlat
jne
clc
mov
jmp
dec
insb
movsl
loope
or
dec
xor
inc
ret
loope
mov
scas
movsl
cmpsb
aam
jb
imul
or
pop
bound
clc
mov
sbb
repnz
push
jno
test
inc
lock
lock
cmp
xor
push
iret
es
cmp
xlat
repz
jle
jbe
or
jmp
stos
clc
lret
lret
push
inc
dec
cltd
and
scas
pop
negb
and
cmc
and
das
out
xchg
sbb
or
mov
rcll
jo
test
or
popa
push
das
enter
rorb
jns
xor
push
dec
loop
pop
pushf
mov
dec
clc
inc
jp
stos
dec
jo,pn
jb
inc
data16
xor
aad
test
inc
cmpsl
std
fistl
scas
call
jns
add
mov
in
popa
je
dec
mov
add
dec
mov
sub
cmpsb
pop
add
xlat
pop
lods
cmp
test
in
jge
add
in
mov
testl
sub
jae
out
pop
loop
daa
push
les
sub
bound
sti
decl
and
mov
pusha
in
sar
and
cli
enter
jmp
push
jne
mov
in
stc
xorb
xor
or
cwtl
pusha
in
stc
fs
nop
inc
in
pop
jge
imul
push
xchg
shr
push
pushf
adc
dec
sub
and
pop
aas
int3
cs
pop
mov
in
enter
jmp
inc
fs
jl
mov
lea
jmp
stc
subl
leave
mov
in
push
and
stos
jo
lock
imul
dec
fs
jl
xchg
fcoml
hlt
dec
mov
push
in
push
cmp
and
xchg
adc
in
inc
mov
lret
sub
mov
in
divl
mov
ljmp
lret
lahf
lds
pop
xchg
lret
xor
mov
pop
ret
enter
je
push
push
mov
cltd
call
cld
lea
jp
ljmp
frstor
cwtl
and
lahf
xchg
aam
daa
mov
jle
pop
push
mov
icebp
negb
in
insl
dec
adc
ret
cwtl
jo
push
ret
sbb
pop
adc
out
cmp
pop
addb
and
int3
push
cmp
add
adc
mov
mov
out
dec
push
je
jmp
lods
sub
enter
out
lahf
pop
fwait
xchg
xlat
or
push
inc
adc
in
into
jp
cmp
push
shl
pop
jb
mov
xchg
iret
fstps
dec
cld
sti
in
rorb
in
lahf
iret
stos
cltd
adc
jae
fstl
cli
sub
loop
rorb
repz
andb
jbe
push
popa
inc
mov
or
movsl
and
shr
cmp
jle
cmp
inc
out
mov
or
pusha
push
ret
sub
xchg
shr
enter
in
stos
jne
jae
out
xchg
sbb
add
ljmp
or
and
jno
push
adc
imul
adc
repz
aas
sbb
nop
in
jecxz
inc
fnop
pop
xor
jns
xor
fldcw
lret
call
in
pop
aaa
ret
add
pop
insb
mov
dec
jnp
dec
adc
lcallw
pop
in
mov
xchg
shll
std
test
in
mov
mov
scas
and
add
insl
loop
adc
or
scas
jl
stc
mov
sbb
add
in
cmp
pusha
into
in
hlt
sbb
ss
int
fnstsw
xor
xchg
mov
lock
out
lret
and
shlb
xchg
in
pusha
out
fisttpll
pop
repz
add
fisubrl
mov
out
gs
into
ja
mov
out
mov
cmp
xor
cmp
lret
fildl
imul
shll
push
adc
xor
xchg
cmp
mov
mov
iret
cld
aas
aaa
test
call
jbe
xchg
mov
adc
out
sub
nop
out
adc
mov
dec
insb
lock
test
sbb
pop
lret
pop
dec
into
ds
jb
int3
call
sub
mov
out
push
mov
pusha
push
xor
mov
sub
inc
sbb
sub
popa
cmp
sub
and
adc
sub
push
out
pusha
out
iret
or
and
jg
and
pop
jmp
cmp
push
scas
push
pusha
or
out
adc
xor
pop
push
cmp
mov
push
lock
jl
pop
inc
and
pop
cld
pushf
and
push
mov
xchg
pop
es
sbb
mov
mov
shr
jae
push
ud0
in
loopne
arpl
jecxz
sbb
out
imul
mov
push
mov
out
or
mov
aaa
arpl
das
cmc
push
nop
xor
lret
dec
andb
inc
xchg
push
enter
adc
ja
std
mov
aam
pop
pop
pop
mov
jo
ds
pusha
imull
inc
mov
xchg
in
push
pop
pop
sahf
and
or
push
add
out
push
mov
mov
or
stc
lahf
push
push
imul
inc
out
test
push
mov
cwtl
add
popl
xchg
fsubs
sub
mov
pop
add
out
adc
out
jmp
push
jnp
fmull
lods
xor
sub
inc
xor
jmp
jo
stos
lret
nop
sub
push
xor
bound
stos
je
jmp
pop
cli
sete
out
test
arpl
mov
movsl
dec
fildll
pusha
out
add
out
fwait
mov
fidivrl
pop
repnz
loop
sub
dec
arpl
out
outsl
sub
add
mov
adc
adc
loopne
xor
xlat
cmp
repz
xor
xchg
dec
sti
sub
push
gs
loope,pt
or
cmp
hlt
addr16
or
out
cmp
sub
cmp
push
enter
pop
clc
cmp
repz
je
pusha
pop
inc
dec
jo
or
push
jecxz
fists
out
mov
jge
mov
das
clc
mov
stos
testb
mov
das
popf
rcrb
jno
sti
xchg
out
push
cld
addb
cwtl
and
and
pusha
out
lcall
loop
jae
nop
shr
lock
dec
popl
inc
stc
inc
or
mov
pusha
out
out
jmp
mov
add
lock
mov
add
loop
cmp
and
loope
aad
mov
stc
pop
repz
mov
pop
xchg
xor
and
stc
fimuls
ret
aad
mov
or
cli
mov
sub
pop
jb
loop
sbb
lock
add
xchg
test
lock
ss
repnz
push
mov
stos
mov
daa
rcl
or
mov
das
adc
lock
xchg
test
jecxz
mov
mov
imul
leave
mov
jbe
xor
stc
imul
fwait
adc
mov
and
and
jp
mov
mov
push
jb
push
aas
movsl
aam
arpl
test
lods
outsl
xchg
loope
push
cmp
test
mov
sub
frstor
push
shrl
sub
pop
cld
outsl
cltd
push
push
mov
pop
lock
into
loop
mov
aam
push
lcall
cld
icebp
adc
inc
call
lahf
lahf
lret
mov
fldt
pushf
xor
fnstsw
repz
sahf
push
sahf
in
popa
push
jmp
nop
lock
sub
add
xchg
or
lock
sbb
in
jle
lods
sahf
sar
out
pxor
lock
fs
mov
lock
jle
scas
and
xchg
or
fldcw
ja
push
out
mov
jae
or
fstps
adc
mov
jno
add
jmp
and
ss
je
aad
fldl
xchg
arpl
add
stos
jno
xchg
int
push
enter
pop
mov
mov
test
icebp
lcall
mov
jl
cmp
icebp
neg
sub
pop
iret
or
adc
cwtl
xor
push
lret
cmp
and
inc
dec
jb
pop
cmp
icebp
cmpsl
pop
sti
jmp
mov
pop
jecxz
push
ja
push
dec
dec
cmc
adc
icebp
jb
cld
clc
aam
outsb
sbb
icebp
mov
xor
jmp
jo
pushf
add
push
jle
inc
jnp
lahf
sbb
icebp
pop
insb
out
int3
das
insl
xor
gs
lock
and
sub
icebp
les
jmp
icebp
insb
test
pop
call
jo
icebp
jnp
inc
clc
outsb
mov
aad
sub
push
into
jge
xchg
outsl
cmp
push
mov
testl
jo
mov
dec
mov
xchg
xchg
sbb
test
fnstenv
inc
add
icebp
mov
roll
jbe
pop
lahf
jle
out
push
addl
test
fadds
push
add
repz
mov
sbb
lods
xchg
aam
bndldx
adc
icebp
test
and
shll
and
in
sbb
icebp
sbb
icebp
mov
mov
sub
mov
fldpi
lret
mov
dec
cmp
loop
mov
sub
test
cmpsb
xchg
jge
lods
cwtl
lock
repnz
mov
and
xor
mov
adc
xorl
jb
adc
iret
lret
popa
cwtl
and
scas
roll
xor
scas
lret
mov
dec
adc
cmp
xchg
cmc
mov
sub
sub
repnz
mov
aaa
push
and
adc
test
stc
push
scas
jae
repz
nop
repnz
and
or
ss
iret
and
mov
aas
out
shll
dec
adc
repnz
loop
jo
dec
loop
xor
leave
ja
movsb
cmp
push
pop
dec
shll
jns
clc
xlat
cmp
xor
jecxz
mov
add
test
fs
inc
jl
mov
stos
jne
les
jp
inc
je
add
in
out
mov
ret
push
bnd
andb
fcmovu
push
into
add
add
xor
test
in
cs
aad
repz
scas
sub
cmpsb
mov
xor
fsubs
mov
add
hlt
cmpsb
adc
das
push
jno
inc
adc
in
push
das
adc
loop
pop
jbe
repnz
jnp
ss
sub
xchg
or
repnz
outsl
inc
xor
and
inc
pop
addb
mov
mov
fisubs
imul
sbbl
repz
repz
inc
lods
jg
mull
inc
mov
repz
sbb
repz
cmp
lock
push
stos
gs
shl
fsubrl
in
scas
out
les
shrl
in
gs
cltd
ret
in
loope
mov
jmp
adc
repz
fsubrs
pop
inc
jecxz
fimuls
xchg
aas
mov
mov
data16
iret
inc
pop
pop
xlat
dec
sbb
repz
int
sub
loopne
repz
xor
addb
and
lea
push
fs
lea
ja
push
cwtl
and
fldl2t
bound
fmul
bound
sbb
lock
or
dec
pop
or
repz
repz
sub
mov
mov
in
int3
fwait
push
test
lahf
test
insb
lds
or
ja
jg
and
lods
sub
in
fcompl
cli
adc
cmp
pop
jle
mov
repz
mov
clc
imul
xor
call
cmp
push
repz
mov
repz
jle
loop
shl
mov
xchg
xchg
loopne
mov
loop
mov
add
repz
loopne
sub
dec
loop
imul
jbe
pop
inc
and
iret
fisubl
out
mov
lahf
lods
add
fisubs
adc
hlt
sub
rol
xchg
movsl
add
sahf
and
adc
xor
stos
movsb
and
ret
ss
xchg
dec
jle
cmp
testb
push
leave
mov
xchg
jmp
mov
sbb
hlt
lcall
das
push
adc
jmp
xor
scas
lcall
hlt
mov
imul
pop
mov
mov
imul
or
hlt
jne
add
mov
stc
ficoms
pop
lock
addr16
sbb
hlt
sbb
jmp
loope
push
aad
outsl
pop
dec
cld
adc
hlt
pop
push
cld
adc
pop
leave
push
jbe
out
pop
push
cmp
inc
enter
add
jne
loop
xchg
xor
pop
dec
rcr
jne
and
lret
clc
cld
movsb
jl
pusha
hlt
mov
hlt
adcl
xchg
enter
mov
arpl
jmp
pop
ja
jb
xor
lock
xchg
or
hlt
push
xor
push
jns
or
adc
imul
xchg
push
mov
enter
arpl
mov
push
and
hlt
push
enter
push
push
pusha
adc
sti
nop
nop
hlt
jmp
cvtpi2ps
jg
loope
xor
push
aam
mov
jbe
xor
xchg
jns
mov
scas
pop
push
fwait
push
je
outsl
prefetchnta
es
jmp
mov
mov
jae
jbe
pop
jmp
xor
jno
lods
dec
mov
lds
aaa
cmp
je
repnz
xchg
push
mov
push
rcrl
xchg
xor
pop
push
pop
add
cmc
out
shl
popf
iret
aam
aaa
paddb
mov
out
adc
dec
pusha
daa
cmp
adc
dec
push
xor
cmpsl
push
xchg
outsl
xchg
push
lcall
pop
aas
nop
xor
stc
sbb
adc
popf
jne
call
inc
cmp
pop
aas
xor
pop
clc
repnz
stos
jb
mul
cltd
and
ja
mov
jns
jo
jmp
outsl
pushf
nop
cmc
out
fistps
test
cld
pop
xchg
and
cmp
push
ljmp
jns
jne
jae
out
cmp
stos
sarl
lcall
dec
ja
or
cmc
add
cmc
jno
loopne
js
lret
jno
popf
iret
mov
adcb
syscall
es
outsb
repz
push
fwait
stos
dec
jo
push
test
adc
punpckhwd
cmp
outsl
imul
dec
mov
icebp
push
test
repnz
jmp
dec
pop
mov
or
jne
cmp
cmp
inc
notb
enter
mov
scas
xchg
cmpxchg
add
dec
pop
popa
inc
sub
ror
jge
xchg
mov
mov
sbb
sahf
arpl
movsl
cmp
dec
xor
loopne
imul
sahf
das
sbb
sahf
jmp
pop
xor
push
mov
jo
dec
rorb
pop
adc
ja
dec
out
or
in
add
testb
or
insb
sbb
scas
lret
lock
fmull
sbb
dec
dec
add
jbe
cmpb
dec
or
notb
mov
sub
shl
out
aam
and
div
dec
xchg
or
testb
in
test
adc
testb
imul
imul
in
sbb
xchg
iret
xchg
stc
aaa
addr16
dec
hlt
shll
repnz
pushf
pusha
testb
icebp
xor
adcl
mov
call
mov
fldenv
jg
cwtl
loopne
int3
shll
in
jecxz
inc
notb
mov
jnp
mov
ret
mov
mov
pop
mov
inc
test
or
test
js
fs
fistpll
je
pop
ja
popf
adc
testb
or
jp
dec
xchg
sbb
imul
inc
xchg
xor
lcall
testb
sbb
mov
test
xlat
and
mov
outsl
out
test
cmp
sahf
roll
fdivrs
xchg
jge
gs
out
cmp
push
fiaddl
imul
or
dec
fnop
ljmp
xchg
aam
aas
mov
divl
and
es
push
pusha
mov
loope
sbb
pop
stc
push
cmpsl
adc
arpl
lret
fsubrs
pop
push
add
notl
fs
andl
inc
mov
mov
jecxz
lret
mov
dec
mov
outsl
hlt
ja
pusha
notl
jo
jmp
negl
xchg
sub
and
mov
sub
dec
mov
lds
ret
xor
leave
scas
ret
lahf
sub
dec
in
xchg
lea
mov
sub
pusha
cli
cli
push
out
push
xchg
mov
negl
divl
dec
pop
ljmp
or
divl
fs
divl
not
sub
out
call
sbb
test
mul
xchg
decl
jmp
mov
fwait
pop
cmp
movsl
shrl
loopne
jne
fsubl
out
sbb
jb
scas
sub
shlb
mov
sbb
loop
push
aaa
sub
rcr
and
xor
pop
clc
insl
sbb
mov
pusha
not
xchg
sbb
idivb
ret
idiv
mov
push
push
xor
adc
adc
ljmp
inc
popa
lds
mov
push
test
push
dec
out
aam
and
scas
xchg
pop
pop
movsb
ficoml
add
pop
cmp
push
pop
add
clc
mov
mov
lret
out
fisubrl
inc
clc
fdiv
bnd
pop
and
jno
cmp
mov
out
loope
mov
xchg
imul
test
addr16
cmp
add
clc
pop
lahf
js
add
xchg
dec
adc
pushf
cmp
call
add
outsl
sbb
push
xor
and
and
lret
loopne
bound
test
jl
les
shll
in
int3
insb
std
mov
sub
mov
mov
cmpsl
test
outsb
mov
shr
adc
int3
into
mov
fsubl
divl
pop
addb
lret
sub
pop
xlat
mov
fxch
sub
fucomp
in
ja
aas
add
clc
popa
adc
repz
or
add
add
jo
mov
fsub
jge
mov
fstl
push
je
aad
in
adc
clc
sbb
clc
inc
xor
les
xor
aaa
cs
xchg
je
sub
int
les
xchg
cmp
out
push
sub
fldl
dec
arpl
jg
mov
jle
movb
out
and
add
clc
cmc
mov
pop
adc
push
imul
lods
add
aad
mov
adc
mov
and
rcrb
fadd
fcompl
dec
jo
dec
inc
sahf
push
js
push
out
fsts
mov
stc
fmull
div
xchg
push
and
dec
stc
roll
or
mov
mov
imul
daa
cmp
insl
dec
push
push
ret
out
mov
mov
add
lods
cmp
hlt
mov
daa
pop
add
stc
test
rolb
enter
jecxz
pushf
push
stc
in
pop
in
test
stc
sub
pushf
push
stc
stc
mov
call
inc
stc
jnp
push
cwtl
and
outsb
lcall
inc
stc
adc
stc
lret
sub
jp
fwait
jge
repz
lahf
mov
insl
dec
dec
inc
stos
daa
cmp
inc
into
fdivrs
and
cwtl
add
jge
in
and
stc
xchg
sti
sub
ja
daa
sarb
out
fucomip
test
adc
stc
testb
cmp
push
sbb
fwait
les
lahf
cmp
or
mov
cmp
ret
sbbl
mov
or
imul
cltd
dec
rol
arpl
dec
das
xchg
mov
lods
loopne
test
dec
jmp
dec
fwait
sub
insl
jo
inc
stc
scas
jbe
pop
xchg
sub
inc
scas
pusha
sub
xchg
test
and
ret
inc
pop
loop
adc
xor
pop
ljmp
dec
lahf
cmp
or
cltd
movsl
lods
cmp
sbb
subb
jge
pop
inc
imul
xor
movsb
loop
inc
daa
cli
cmc
push
out
adc
stos
mov
add
push
bnd
je
cmc
xor
lcall
das
loope
fsts
ja
pop
movsl
jnp
mov
jae
addr16
aam
jns
lret
xor
mov
jo
pop
leave
outsb
cmp
lock
daa
mov
cmp
cmpsl
inc
adc
xchg
std
std
cs
jl
add
movsl
rcrl
loopne
imul
jmp
inc
xchg
pop
mov
inc
stc
aam
adcb
adc
adc
mov
mov
cli
ret
imul
cmp
in
adc
dec
jnp
add
add
scas
in
jecxz
inc
mov
jae
and
out
add
jbe
gs
push
cld
cmp
dec
mov
scas
std
out
pop
jns
out
ficoml
mov
shlb
insb
cmpsb
js,pn
loopne
ja
cmp
jns
and
inc
cli
arpl
setge
inc
push
mov
sub
xor
push
sbb
cli
mov
arpl
int
xor
mov
rclb
lods
lcall
cli
rcrb
popf
push
mov
lds
fstp
cli
enter
into
cmc
fdivs
test
push
xchg
cmp
sar
jmp
pop
sub
sarl
cmp
das
or
jbe
iret
cmpl
loopne
or
sti
icebp
pop
andl
lea
push
add
and
xorl
mov
addr16
adc
sti
push
cmpsb
inc
and
sti
mov
in
clc
cmpsb
jge
stos
cmp
sti
lret
mov
mov
jge
jns
pusha
cltd
and
push
cmp
push
and
sti
mov
jge
popa
lret
rorb
mov
shl
es
jmp
fisttpll
mov
lret
dec
call
enter
mov
pop
mov
test
sti
aad
rcll
sbb
sti
jns,pn
mov
and
ds
sbb
sbbl
test
add
dec
addl
mov
in
sbb
sti
inc
push
outsl
cli
pop
jno
in
xor
out
xchg
das
stc
xor
mov
mov
sub
push
sti
adc
xor
and
es
mov
es
jle
dec
dec
xchg
push
push
sti
pop
sbb
sti
pop
dec
mov
jbe
push
aad
xor
jae
fisttpl
jl
aas
test
jae
lcall
lret
xchg
cmp
sti
dec
daa
mov
fstpt
sub
jbe
dec
loope
incl
insl
imul
les
int
sub
add
sti
pop
call
lret
cltd
pop
lds
nop
sti
dec
add
xchg
inc
cmp
sbb
and
inc
dec
mov
cld
popf
or
jbe
popf
mov
dec
push
je
nop
and
mov
jae
jmp
and
cld
icebp
cmp
mov
jge
mov
mov
sbb
xchg
adcb
jb
pop
xlat
sbb
sar
mov
daa
fwait
sbb
and
dec
call
dec
jp
data16
and
fwait
mov
or
push
jl
jmp
push
dec
insb
sub
arpl
mov
pusha
cld
pop
jno
notl
repnz
addr16
cld
sub
lcall
and
push
mov
fdivp
push
ljmp
cld
and
add
push
jp
push
xor
out
add
jne
call
in
sbb
cld
pop
fs
sbb
das
pop
push
sub
push
xchg
cmpsb
sti
lcall
insb
dec
jmp
mov
cld
inc
adc
mov
xor
flds
repz
jmp
mov
jns
pop
bound
cmpsb
jns
fstl
ds
mov
cld
into
sahf
xor
cmpsl
xchg
shl
inc
or
sub
mov
frstor
xor
xor
scas
lods
add
out
aam
aad
rcll
add
cld
cmpsb
and
sbb
jl
call
jae
pop
out
out
mov
push
sub
pop
jg
or
pop
xchg
loopne
mov
and
aad
push
sub
pop
fisttps
imul
xor
fmulp
addb
inc
xor
mov
mov
dec
dec
push
or
std
cvttps2pi
sar
scas
into
mov
mov
or
cmp
adc
std
or
std
fwait
in
rolb
inc
popa
aam
shrl
sahf
inc
test
xchg
xchg
ret
mov
pop
mov
sbb
std
dec
scas
icebp
and
movsl
scas
aad
dec
jno
js
push
adc
jp
shll
xchg
fucomip
cmp
sub
push
clc
sbb
mov
xchg
push
push
in
mov
nop
std
pop
es
xlat
xchg
pop
jb
mov
mov
hlt
add
mov
addb
std
jae
nop
mov
push
and
pop
std
adc
cs
movb
jb
ljmp
sti
dec
outsb
xchg
push
call
mov
and
xor
pop
loop
rolb
test
xchg
insl
jl
sar
lret
and
cwtl
push
std
idiv
dec
pop
add
mov
adc
pop
jecxz
jge
cmp
xlat
xchg
shrb
neg
in
int
and
xchg
and
adc
sub
sub
xlat
aad
jecxz
xor
popa
es
mov
sub
pop
xor
pop
iret
and
xchg
add
std
cli
mov
int3
jg
inc
sbb
std
lahf
ljmp
inc
das
adc
aaa
or
ljmp
std
scas
mov
dec
pushf
mov
xchg
lds
xorb
dec
loop
or
in
insl
pushf
and
inc
mov
xor
and
xchg
fistpl
add
sub
adc
mov
pop
xchg
and
loop
and
push
imul
xchg
push
adc
inc
movsl
adc
mul
sub
adc
inc
cmp
pop
push
fnsetpm(287
xchg
or
imul
ja
push
cmpsb
fs
or
push
lret
pushf
and
ucomiss
cmp
mov
inc
mov
sub
dec
sub
dec
pusha
call
lds
cwtl
loopne
addl
arpl
cmpsb
sub
mov
push
inc
daa
sub
mov
xor
daa
or
stos
sahf
lret
lea
hlt
and
jns
xchg
decb
add
insl
pop
call
neg
scas
pop
pop
test
and
es
inc
dec
in
das
push
stc
ficomps
push
daa
jecxz
jae
jo
mov
icebp
mov
pop
test
fldenv
xor
push
out
xchg
lock
adc
and
fbstp
sub
sahf
ds
sbb
clc
adc
jle
roll
mov
jns
xchg
adc
pop
andl
inc
jp
imul
sub
mov
pushf
lock
mov
or
addr16
psubsw
mov
mov
fidivs
xchg
sar
xor
addr16
addr16
adc
cmc
jecxz
hlt
cltd
popa
insb
out
popa
ds
sbb
decl
fldcw
cmpsb
dec
pop
sbbl
push
mov
jb
add
out
sahf
test
inc
decl
mov
ja
cmp
je
mov
not
jb
mov
push
scas
xor
and
xchg
xlat
xor
adc
adc
call
xor
popf
out
mov
sub
xchg
dec
ss
mov
inc
xor
mov
xor
inc
call
out
in
pop
rclb
mov
out
ret
push
ljmp
cmp
stc
xchg
adc
incl
mov
add
cmp
xchg
scas
stos
push
stos
jmp
xlat
add
push
mov
and
push
push
adc
inc
mul
xchg
lea
rcrl
xlat
out
mov
jb
leave
clc
imull
and
sbb
pop
out
xchg
mov
sub
out
jb
daa
test
mov
sub
fidivl
nop
sar
inc
cli
pop
pop
xchg
mov
pop
arpl
inc
mov
hlt
dec
xchg
int
ret
sub
lret
push
jp
xlat
shl
ss
sub
xchg
testl
mov
iret
hlt
dec
call
pop
stos
clc
cmpsl
adc
mov
pop
scas
lret
mov
xchg
popf
jp
push
push
dec
and
mov
xchg
lock
jb
addr16
lret
jbe
int3
push
ss
cltd
mov
mov
mov
pop
scas
fs
mov
sub
rcrl
add
pop
sbb
add
mov
test
add
add
pop
call
inc
out
les
sbb
or
and
testb
rorb
jne
stos
sbb
cli
pop
push
int
jmp
aad
adc
add
mov
lock
shrb
dec
cmpl
jno
dec
fsts
lret
ja
out
leave
and
pop
pop
pop
into
negl
mov
adc
jne
pop
jp
pusha
in
sti
jmp
mov
cmc
popf
aaa
push
ss
dec
jg
sbb
add
cmp
cmp
sub
pop
ja
out
in
mov
push
sub
ret
popf
popf
dec
loop
test
dec
mov
or
lret
push
cltd
pushf
jo
daa
test
adc
add
popf
add
mov
mov
xor
pop
jne
push
int3
jg
aam
push
pop
imul
xchg
inc
push
arpl
inc
test
loop
sub
inc
add
and
out
rolb
faddp
test
xor
mov
sub
mov
mov
loopne
sub
loop
push
iret
outsl
inc
data16
add
movsl
stos
inc
aam
jmp
mov
pop
pop
dec
ret
aad
or
add
std
mov
movb
lock
sub
hlt
xchg
mov
data16
loope
or
add
push
loop
inc
test
adc
int
adc
fadds
xchg
cwtl
xor
bound
cmpsb
lds
mov
lea
pop
jae
pop
loope
jecxz
xor
dec
cmp
xchg
int3
push
mov
test
lea
into
and
ljmp
push
test
in
push
aam
out
cmp
cmp
push
push
push
dec
ds
add
cmp
inc
add
movsl
outsb
std
mov
xor
mov
aam
fsts
sub
mov
xor
flds
vmread
and
xchg
nop
add
ret
xchg
jo
sbb
add
jnp
adc
add
addb
pop
push
adc
inc
pop
xchg
and
jecxz
insl
mov
cmc
stos
jge
xchg
addr16
xor
add
mov
ret
cli
jmp
outsb
invd
and
xor
add
mov
scas
mov
add
xchg
xor
add
lret
cwtl
lock
inc
xchg
add
repnz
iret
data16
cmp
lock
or
add
mov
xchg
ds
and
jbe
es
cs
or
loope
insl
cli
sub
jl
push
mov
add
jbe
sub
les
inc
ss
adc
add
lretw
dec
sub
js
dec
int
repz
mov
and
cmc
or
decl
add
jo
sub
sub
adc
out
andb
dec
test
xor
sti
enter
mov
aad
and
jl
push
and
cmp
push
add
hlt
fistpll
sbb
lea
pop
aam
sahf
push
jge
arpl
mov
add
add
add
int3
lahf
sub
stc
out
mov
pop
sbb
add
push
mov
fwait
mov
jl
adc
add
dec
test
cli
in
loop
mov
addl
mov
pop
mov
loop
adc
inc
sbb
mov
lret
add
fxtract
jmp
mov
test
sarb
out
je
dec
int
test
add
ja
cli
int
and
cwtl
add
pop
or
and
inc
insb
push
mov
xor
mov
cmp
add
push
and
xor
xor
mov
add
cli
into
data16
cmp
or
inc
add
sbb
pop
or
ds
test
add
xor
dec
sub
and
dec
test
mov
and
into
les
add
mov
in
js
pop
xchg
cmpsb
mov
cmp
jl
testl
push
sub
xor
sbb
cmp
push
push
mov
sarl
aas
dec
dec
inc
mov
pop
popa
sahf
xchg
mov
jb
xor
dec
lods
movsl
out
andl
mov
xlat
jle
lret
cmp
xchg
fdivp
sbb
inc
int
rorl
dec
adc
loope
jecxz
daa
mov
notl
out
jns
lret
test
cltd
insl
xchg
pop
dec
add
divb
test
rcrl
imul
std
ds
lods
push
bnd
inc
add
push
sub
rolb
push
mov
lcall
sbb
scas
icebp
xor
add
pop
mov
jno
hlt
jge
adc
int
sub
imull
jmp
push
nop
lock
ret
xchg
push
nop
push
add
push
pop
test
add
add
pop
and
notl
add
loop
mov
je
lods
jae
test
scas
mov
pop
enter
rolb
sub
dec
inc
out
std
mov
lock
lock
mov
sbb
add
lods
inc
adc
jg
fsubrp
lahf
lods
jbe
fadds
mov
loopne
xor
test
jmp
pusha
dec
xchg
repnz
jo
insl
movsb
pop
shl
out
xchg
popf
mov
jl
mov
mov
lods
test
cli
das
nop
xor
push
mov
and
mov
jl
mov
repz
add
mov
leave
jae
add
mov
insl
outsl
pop
cwtl
push
add
arpl
lods
push
push
add
addr16
or
add
mov
pop
cmpsb
push
lock
leave
pop
adc
add
jmp
rorl
ljmp
mov
js
xor
es
pop
test
adc
and
iret
sub
pop
push
inc
orl
std
and
jle
out
jnp
sbb
jae
jg
push
sbb
cltd
or
xor
or
std
test
add
lods
movsb
xchg
inc
out
inc
test
loop
jnp
jo
mov
inc
popf
push
ret
mov
repnz
and
add
add
jge
aam
pop
jmp
sbb
add
sub
or
loope
repz
faddl
jmp
mov
xchg
ja
popa
testl
add
add
add
mov
or
push
and
out
std
movsl
stos
arpl
jbe
lahf
pop
ror
cld
and
add
push
sbb
jmp
mul
and
jmp
test
insl
jns
mov
leave
sbb
sbbl
and
mov
inc
add
fldenv
sti
loope
adc
or
and
mov
sub
rolb
lret
add
addb
xlat
je
into
mov
aas
xor
mov
jecxz
jp
mov
xorl
pushf
addb
dec
mov
sbb
adc
pop
and
sbb
add
lea
cmp
hlt
pop
fwait
jl
dec
pop
mov
les
jne
inc
add
add
add
push
jg
sub
das
dec
in
movsl
push
pushf
rolb
mov
adc
insl
push
lods
shlb
fnstenv
xor
xor
pop
mov
into
pusha
cld
lret
daa
push
andl
repnz
bound
jg
xchg
das
and
aas
shll
mov
imul
jmp
mov
imul
sbb
add
push
cli
push
lock
push
mov
cmp
dec
lea
dec
pop
dec
hlt
aad
insb
xorb
jmp
adc
mov
add
inc
scas
push
push
or
jl
add
xor
pop
pop
or
test
sbb
mov
or
mov
mov
shrd
jp
push
mov
add
xor
cs
and
sahf
lret
mov
jge
sbb
add
xchg
inc
in
cmc
insl
imul
ds
add
mov
leave
hlt
test
cmc
aaa
push
jb
mov
xor
rolb
out
push
mov
lock
loop
pop
inc
inc
fisttpll
adc
xor
stos
jecxz
popa
pop
popf
jecxz
fdivrl
inc
mov
dec
cmp
dec
inc
shrl
push
int3
faddl
cld
inc
cmp
lret
loopne
xchg
push
cwtl
lock
test
nop
rolb
inc
xor
push
cmp
add
inc
adc
mov
adc
and
loopne
outsb
in
insl
pusha
fwait
inc
pop
push
test
sub
popa
push
pop
mov
lock
cmp
inc
mov
sti
pushf
addb
and
das
or
insb
mov
mov
pop
jg
dec
cmc
mov
shrl
xchg
in
insb
ret
sub
inc
loope
loopne
lret
inc
cmc
inc
ljmp
push
inc
bound
and
sub
sarb
clc
clc
mov
adc
outsb
sahf
fcmovnbe
gs
ss
xchg
sahf
xor
cwtl
mov
adc
push
jle
pop
cmp
jne
sar
mov
push
adc
cmp
mov
mov
ss
mov
xlat
pop
or
es
mov
enter
lea
sub
pop
push
roll
jae
sbb
xchg
es
dec
or
aam
rcll
jns
pushf
nop
push
push
cwtl
rolb
daa
mov
rcll
push
or
mov
pop
aad
dec
mov
pop
mov
iret
fstp
cmpsl
adc
stos
imul
out
idivb
pop
mov
push
pop
pop
les
je
pop
shrb
inc
pop
mov
repz
loopne
movsl
lahf
sbb
and
sbb
inc
dec
jge
xor
pop
out
int3
clc
shlb
or
pop
jno
dec
xor
bound
rolb
jge
pusha
mov
andl
sbb
jg
mov
lock
pop
lds
pop
cmp
call
leave
in
adc
mov
fwait
and
xchg
inc
call
push
jnp
enter
add
mov
enter
pop
push
arpl
repz
out
fbld
je
lods
loope
inc
xor
or
pop
adc
inc
shl
andl
test
or
and
pop
inc
inc
sarb
mov
mov
pop
add
inc
decb
push
push
jnp
stos
rorl
pop
addr16
adc
pop
in
mov
push
xchg
imul
adc
pop
cld
mov
add
adc
insb
nop
adc
adc
sahf
icebp
mov
xchg
xorb
push
jecxz
inc
lock
sub
loopne
sub
lock
divb
add
pop
and
adc
jae
or
adc
xor
insb
inc
xchg
loop
lret
mov
pop
lahf
jae
mov
pop
cltd
and
lds
ror
add
arpl
mov
or
js
jp
jg
add
or
adc
stc
xor
mov
nop
or
ret
pop
das
inc
xchg
popf
in
mov
lods
xorb
fstpl
xor
dec
cltd
inc
aaa
sbb
das
add
jo
push
sbb
jl
addr16
repz
insb
mov
pop
aas
imull
cwtl
loopne
out
jbe
shll
cmpsb
into
cmp
test
icebp
ljmp
cmp
call
or
or
jo
inc
sbb
xchg
rorb
or
repz
les
xor
test
add
jl
push
pop
mov
dec
xlat
ret
pusha
jne
mov
ror
sub
dec
cmpsl
movsb
push
dec
lcall
and
sub
mov
dec
negb
lock
out
add
or
hlt
nop
loopne
test
nop
or
decb
cmp
ret
xor
jb
xor
pop
popf
ret
add
mov
sbb
loopne
mov
stos
in
push
xor
arpl
bound
cmp
xor
xchg
lret
fsub
adc
stos
shl
mov
or
pop
dec
jno
push
stc
sub
rorb
xchg
ret
enter
inc
cmp
mov
sub
rcl
icebp
jb
xor
push
icebp
add
add
iret
pop
add
jno
movsl
popa
mov
lahf
push
and
adc
test
nop
and
mov
adc
pop
arpl
or
jp
adc
add
or
call
push
jecxz
ja
adc
insb
dec
jge
mov
cmpsb
add
in
adc
mov
pusha
jno
mov
cld
sbb
repz
pop
mov
adc
in
xchg
fisubrs
bound
ljmp
or
popa
shlb
scas
sbb
outsl
fildl
fcmovnbe
fdivs
icebp
gs
adc
dec
push
mov
add
lret
flds
outsl
pusha
fimuls
pop
mov
cmpsb
lds
mov
jg
mov
pop
pop
sub
and
aad
mov
dec
add
jmp
insb
divb
sahf
jp
inc
dec
pop
inc
jp
pop
add
or
je
fst
rclb
fldcw
icebp
lea
xor
and
in
mov
sbb
or
jmp
popf
in
pop
cmpsl
push
xchg
push
ljmp
dec
or
xlat
cltd
sbbb
or
and
mov
xchg
and
test
mov
or
or
or
aaa
jae
mov
xchg
lock
aam
xchg
cltd
in
jp
and
mov
cmp
xor
rcrl
out
mov
push
mov
cmp
out
xchg
or
adc
or
int3
push
scas
addr16
inc
jge
out
mov
xor
mov
lock
push
xchg
test
test
stos
add
or
pop
mov
sub
movsb
cmp
fists
jo
mov
or
inc
sbbb
jno
fidivrl
addr16
mov
jne
out
xor
xlat
repnz
add
or
xchg
scas
jbe
lret
test
loop
cmp
sbb
xchg
cltd
xchg
xchg
arpl
and
xlat
jle
xor
shlb
mov
mov
int
outsl
lcall
dec
pop
pop
stc
mov
jae
aas
aam
or
or
push
enter
in
mov
cmp
enter
ret
cld
imul
cmp
or
jmp
or
push
inc
dec
cmp
stc
popf
pop
leave
js
sahf
cmp
cmc
insl
jecxz
jno
mov
add
aas
cltd
jo
nop
or
fcom
repz
aad
inc
inc
pushf
lock
or
mov
push
daa
cmpsb
cmc
lds
push
xchg
mov
mov
ret
cmp
test
hlt
enter
movsb
sti
cmc
rcl
mov
aaa
popa
cmp
lahf
loopne
loop
cmpsb
imul
iret
jl
add
fucomip
push
jle
mov
pop
adc
cs
pop
ja
imul
mov
xchg
mov
pop
test
mov
mov
mov
mov
repnz
std
dec
mov
or
aaa
das
aaa
fisttpll
xor
jle
push
mov
inc
mov
stos
mov
or
mov
int3
out
daa
mov
clc
cmp
clc
int
aaa
adc
dec
icebp
and
sbb
or
jl
lret
lret
dec
push
inc
or
or
or
push
push
aad
mov
in
sti
dec
mov
mov
and
mov
pop
sti
mov
pmullw
adc
push
push
test
xchg
push
add
mov
jle
and
mov
rorb
lods
dec
or
or
outsl
sub
call
cmp
push
jno
call
sub
movsl
jo
out
sbb
neg
lea
loopne
bound
shll
push
lret
repnz
push
mov
repz
movd
int3
mov
shll
dec
ss
mov
inc
xor
mov
ret
push
dec
cmpsb
cmpsl
pop
scas
fsub
scas
fistpl
aad
aas
or
or
xorb
push
pop
cmpsb
jle
mov
and
xchg
into
ror
push
fcmovne
rcr
repnz
dec
cmpsb
cmp
xchg
out
cmp
push
es
fnsave
adc
loope
mov
mov
or
loopne
xor
movsl
fwait
jbe
mov
add
or
cwtl
pusha
or
mov
mov
orb
test
sarl
xchg
pop
data16
or
or
insl
out
out
sub
int3
mov
pop
in
inc
lahf
ja
sbb
cmpsb
dec
push
fildll
cli
int
das
stos
dec
xchg
inc
adc
xchg
dec
xor
push
addb
lods
sbb
or
stos
mov
movsl
aam
push
add
fdiv
outsb
xor
hlt
adc
jae
jbe
stos
push
push
jmp
movsl
gs
bound
push
loop
and
or
mov
pusha
mov
leave
pop
mov
or
or
push
add
jno
lock
rorb
add
or
test
lcall
jb
rorb
dec
dec
add
rorb
mov
xlat
jo
xor
loope
and
ljmp
inc
loopne
dec
mov
movb
xlat
mov
pop
popa
cmp
cmp
jb
mov
adc
xchg
scas
cmp
jg
xchg
clc
jne
pop
ja
adc
or
sbb
daa
test
sahf
sub
mov
xchg
and
xlat
idivb
mov
aam
pop
pop
jbe
xchg
push
aad
and
push
aam
adc
push
push
imul
lea
cmp
push
loop
adc
or
mov
fistpl
mov
aam
adc
mov
aas
sarl
push
hlt
mov
out
divb
cmp
sbb
movsb
xchg
lods
xorb
cmpsb
js
jbe
lea
lods
gs
jns
stc
push
mov
lahf
std
xchg
mov
or
cwtl
jo
mov
out
sub
push
stos
push
push
pop
xor
jo
inc
negl
pop
mov
aaa
subb
mov
in
test
cmpsl
adc
or
mov
or
int3
jle
cmp
andl
mov
or
lds
mov
push
mov
xor
cmp
mov
pushf
mov
sbb
jecxz
add
add
cmp
inc
mov
stc
pop
xor
cmp
or
or
dec
out
out
xchg
or
push
divb
inc
cmp
lock
loopne
pusha
push
in
arpl
mov
or
jmp
xchg
dec
pop
xchg
aas
pop
cmp
adc
movsb
stc
sub
xlat
or
dec
punpckhwd
adc
jb,pt
push
or
sahf
idivb
ror
bound
mov
daa
outsb
or
pop
jge
sub
ja
imul
sbb
enter
adc
cmpsl
hlt
insb
inc
fsubrs
sbb
and
cmp
jecxz
add
push
xor
mov
arpl
dec
imulb
out
outsl
and
bound
cwtl
loopne
or
and
loope
sub
jecxz
outsb
or
movsl
cli
xchg
jmp
mov
jecxz
pop
mov
mov
imul
shlb
mov
inc
push
dec
lods
mov
and
insb
xchg
pop
loop
hlt
cmp
in
inc
cmp
xor
dec
mov
iret
pmaddwd
inc
inc
sub
je
stc
cmp
inc
mov
push
or
push
cmp
sbb
lods
shll
int3
push
lock
push
decb
lods
fwait
add
rorb
sub
and
sbb
mov
lds
mov
in
jae
wbinvd
or
push
lea
inc
push
mov
mov
lret
cmp
xchg
cmp
orb
stos
movsb
mov
or
push
mov
mov
fwait
adc
rorb
xor
mov
jecxz
xchg
xchg
loope
dec
out
shlb
and
loope
pop
mov
sub
inc
push
adc
xor
popf
push
sbb
cmc
psubd
dec
aad
out
sub
sbb
push
stc
push
hlt
gs
inc
jno
insb
aad
in
mov
imulb
xor
pushf
rorb
test
lea
push
loope
push
rclb
jns
mov
enter
rorb
push
mov
sub
xchg
mov
js
stos
push
outsl
mov
xlat
xorl
inc
sub
lds
sahf
mov
xchg
rorb
dec
cmp
xchg
rcrl
lcall
mov
mov
shrb
lea
addb
out
faddl
insb
inc
sti
ja
fcom
sbbl
iret
jno
incb
in
das
jmp
mov
inc
mov
movsbl
mov
push
push
das
lretw
dec
ja
inc
into
and
and
mov
loopne
nop
push
pavgw
add
fimull
cmp
jbe
imul
repz
inc
test
prefetcht1
xchg
imul
adc
sub
mov
dec
add
cs
orb
add
repz
pop
shl
cs
mov
femms
add
mov
pusha
jno
fdivrs
cltd
and
adc
sub
push
cli
mov
out
popf
outsb
mov
xchg
jmp
jnp
adc
psubw
xchg
xlat
into
dec
dec
scas
push
pop
xchg
in
mov
lods
and
and
stc
lock
adc
std
sbb
stc
pop
mov
loop
jo
add
psraw
or
lds
sbb
adcb
xlat
cwtl
nop
adc
fldl
dec
or
daa
fistps
outsb
lods
stos
lods
mov
push
sbb
dec
mov
rcll
out
and
cmc
and
xchg
add
jge
cmc
test
lods
cmpsb
in
sub
xchg
popa
addr16
insb
sub
or
sbb
mov
adc
inc
xchg
xchg
call
jb
test
adc
insb
cmpsb
fs
mov
insl
sbb
gs
dec
and
lea
movsb
xor
subb
mov
les
pop
and
pop
decl
mov
add
cli
mov
test
mov
and
loop
sti
lahf
sti
dec
cmp
rcl
loope
add
push
pop
fisttpl
popf
repz
insl
mov
cmp
es
sub
dec
cmpsl
or
push
test
adc
push
jle
loopne
sub
cmpsb
rolb
leave
xor
jecxz
push
lods
aas
cwtl
add
mov
cmpsb
push
mov
jge
fists
ss
addl
add
adc
or
mov
in
cmpsl
adc
outsb
mov
outsb
cli
pop
sbbl
sub
in
pusha
adc
jne
ret
sub
mov
in
movsb
adc
into
jmp
pop
aam
push
mov
adc
enter
or
adc
lods
push
mov
adcb
lock
lcall
sarb
add
adc
out
pop
or
pop
repz
insb
adc
adc
std
es
sbb
adc
adc
jl
xor
int3
xchg
and
les
push
push
pop
mov
and
xor
and
sbb
adc
shll
push
push
add
sub
out
popf
xor
mov
adc
jp
sbb
add
adc
dec
hlt
cmp
cli
popa
dec
pusha
sub
imulb
andl
jmp
cld
test
inc
and
repnz
xchg
loop
rorb
adc
or
aaa
scas
es
rcrl
push
dec
and
sbb
add
mov
gs
hlt
sub
cmp
adc
insb
dec
ja
mov
lods
push
divb
pushf
rclb
dec
insb
inc
cltd
insb
xchg
cmp
aad
movsb
push
mov
mov
dec
bound
cmp
mov
sub
push
int3
fdivs
adc
xorb
add
sbb
pop
imul
out
mov
mov
push
pop
jle
or
xor
cmpsb
faddl
repnz
lods
aam
mov
mov
inc
mov
xor
lcall
inc
lods
scas
or
rol
mov
daa
fwait
fs
imulb
es
mov
xchg
aam
adc
jae
ljmp
push
jecxz
insb
sti
push
iret
inc
les
je
add
adc
out
jns
pop
not
and
xchg
jb
xchg
sar
push
pop
das
add
and
adc
movsl
sti
cwtl
pusha
adc
fildl
scas
push
leave
jbe
push
adc
mov
inc
in
lods
xor
cmpsl
lahf
xchg
cld
adcb
cmp
rcr
sbb
shll
inc
xchg
adc
fwait
xchg
push
adc
adc
xchg
xchg
ljmp
mov
xor
or
inc
fisubrs
adc
adc
lock
sbb
pop
xlat
push
outsb
fwait
pop
in
clc
mov
sub
xor
sbb
adc
movsb
mov
add
jnp
xor
cmp
sub
cmp
jle
mov
shlb
movsl
mov
outsb
push
int3
sub
or
in
outsl
push
lcall
jecxz
insl
cmpsl
stos
aas
andb
movsl
xor
adc
cmp
cmpsb
inc
enter
pop
xchg
mov
aaa
xchg
mov
aas
je
fnsave
jne
sub
mov
call
xchg
aam
inc
inc
test
mov
mov
cmp
dec
xor
movsb
sub
dec
cld
dec
adc
xchg
inc
xor
divl
pop
mov
int3
rcrl
addl
repz
scas
jp
lock
xlat
push
pop
jbe
mov
add
cld
into
mov
inc
sub
dec
dec
daa
out
outsb
jg
mov
adc
popf
cwtl
rclb
inc
xchg
adc
jl
std
dec
pop
lcall
jge
stc
fsts
cld
cwtl
lock
cmp
mov
cld
mov
dec
and
jmp
incl
call
hlt
pushf
rclb
inc
insb
adc
pop
cmp
dec
cmp
imul
rcrl
int
stos
jmp
jecxz
or
adc
mov
lock
push
addb
push
sub
fsubl
sbb
adc
negb
nop
adc
inc
sub
adc
loope
sbb
jg
mov
mov
mulb
and
or
ds
push
xchg
movsb
jmp
push
sahf
or
shrl
adc
cmpl
adc
jge
es
jae
daa
lods
mov
jno
rcrl
add
iret
xchg
or
sti
xchg
and
jecxz
xchg
loop
push
jecxz
imull
mov
bswap
or
adc
adc
xchg
inc
adc
mov
ds
and
cmp
in
in
mov
xchg
or
mov
mov
arpl
rorb
outsl
push
test
out
ja
inc
sahf
adc
adc
pop
jmp
lock
aas
fistpl
mov
pop
int3
mov
sahf
sarl
andb
xchg
leave
aas
ret
pop
fildll
test
or
adc
xchg
bound
sarl
jo
cmp
add
dec
sahf
fldt
mov
out
add
add
cld
std
outsl
and
sahf
ret
mov
adc
push
pop
dec
pop
pusha
inc
xor
xor
imul
and
rcrl
pop
or
ret
pop
fsubrp
xchg
add
dec
cmp
divl
out
iret
ret
pop
dec
loop
or
sarb
push
sbb
in
mov
mov
divb
cmc
dec
sahf
inc
xchg
ljmp
xchg
sbb
adc
adcb
push
loope
push
lds
add
lea
loop
mov
daa
hlt
mov
mov
rclb
out
mov
mov
ds
jge
je
les
rcll
cmpb
rorb
jl
popf
xor
xchg
xchg
dec
inc
addr16
shlb
test
jp
nop
lock
inc
icebp
shrb
jne
cmp
cmp
movsl
cmp
pop
mov
dec
inc
inc
mov
fcoml
loopne
pop
mov
mov
sbb
into
in
aas
dec
sub
pusha
jl,pt
mov
cmp
jmp
push
lret
jg
loopne
adc
test
mov
imul
repnz
rclb
imul
add
cli
jecxz
cmp
push
adc
adc
mov
and
subb
or
add
addb
aas
add
push
adc
fldt
push
inc
pop
popf
inc
lret
add
xor
mov
dec
dec
cmpsl
or
ror
ja
scas
xlat
sbb
outsb
stc
add
js
inc
sub
lock
mov
das
jge
cli
stos
dec
popf
es
int
stos
outsl
cli
mov
movsl
or
adc
lea
push
imul
out
or
movsl
bound
out
ret
shlb
cli
out
js
add
adc
mov
pusha
adc
push
xchg
inc
pop
sbb
adc
cli
out
mov
lock
push
sbb
adc
mov
lahf
loop
outsl
das
pop
scas
btc
fsub
sbb
adc
push
adc
inc
movsl
mov
lock
sub
inc
inc
andl
and
push
icebp
inc
add
cltd
mov
lret
cmp
mov
jbe
lcall
jo
loopne
pusha
pop
sahf
cli
pop
psubsw
xor
andb
dec
aaa
fldt
xchg
lock
push
into
rcr
rcr
xchg
mov
mov
lods
into
sub
cmp
lcall
loope,pt
sbbl
ds
cmp
mov
stc
dec
rcrb
push
iret
aas
mov
jb
add
jae
mov
les
xor
les
leave
lcall
out
push
pushl
rep
movsl
sarl
lea
xchg
cmp
jmp
and
mov
push
push
cs
hlt
or
test
daa
rolb
std
dec
sub
pushf
lock
mov
into
enter
mov
sub
push
push
int
add
xor
stos
pop
lahf
xchg
lea
inc
in
push
dec
sub
mul
test
or
push
call
push
xor
jns
and
lret
shlb
cmp
hlt
leave
idivl
pop
lcall
jns
pop
mov
iret
movsl
pushf
pusha
push
enter
add
push
cmpsb
clc
push
popf
mov
fcoml
jno
ja
adc
outsb
and
jo
mov
iret
scas
iret
jo
popf
aad
mov
test
cmp
dec
xchg
xor
push
shll
aad
ret
mov
lcall
lds
fstpt
jmp
out
popa
xchg
xchg
les
pop
dec
out
es
jmp
xchg
pusha
pop
adc
in
int3
repz
xor
test
int3
popf
nop
add
or
xor
aaa
popf
xor
and
fsubrs
rclb
mov
pop
les
and
mov
or
pop
ss
xor
fdivrl
or
pop
sbb
pop
push
cli
mov
ret
adc
cmp
lods
shll
call
sbb
xor
push
cmpb
push
pop
mov
nop
rclb
adc
jg
xchg
test
lods
sbb
mov
push
clc
xchg
or
pop
ja,pt
jo
pusha
dec
ret
dec
jl
cmc
imul
mov
or
pop
das
jb
or
repnz
fs
jecxz
and
pop
repz
mov
mov
lea
fdivl
sub
cwtl
pusha
pop
add
fnsave
sub
iret
sbb
pop
xorb
rclb
or
ljmp
loop
dec
test
stos
mov
pop
jae
not
mov
xor
cmc
sbb
pop
xchg
jo
repnz
mov
outsl
pop
xlat
xor
sbb
sbb
xchg
or
rclb
les
jmp
fadds
dec
push
test
pop
sarb
adc
mov
out
add
std
or
jae
insb
unpcklps
pop
icebp
push
mov
js
xchg
jo
push
cs
push
jbe
push
int
fninit
cli
sub
add
les
rorb
dec
arpl
jle
mov
inc
out
pusha
js
addr16
mov
add
sbb
sbb
shl
imul
ljmp
or
rcll
adc
cmp
aam
lock
xchg
clc
push
push
scas
cmc
add
fdivrs
inc
stos
mov
sbb
push
pop
mov
pusha
int
adc
rclb
fldl
push
add
outsb
mov
mov
mov
mov
addr16
decb
mov
dec
or
out
push
fsubl
imul
lahf
icebp
adc
xchg
push
cmpsl
lods
cltd
repnz
hlt
jmp
cmc
adc
sbb
mov
insb
xchg
mov
js
stos
inc
xchg
or
repz
mov
sbb
mov
mov
sbb
in
push
dec
inc
fmuls
sahf
cltd
sti
cmp
popa
aam
and
int
rcrb
mov
imul
fwait
push
stos
mov
inc
repnz
lahf
cld
pop
mov
shlb
fists
inc
mov
xchg
jge
sub
loop
je,pt
ljmp
shrl
pop
insl
mov
pushl
lahf
push
stos
mov
sbb
or
ficompl
and
out
add
inc
xor
popf
sbb
push
shr
loopne
loopne
out
pop
sub
rcrb
out
aas
and
in
and
dec
mov
rcrl
data16
rorl
and
mov
cmp
pop
add
push
test
aam
aaa
aas
cmp
or
mov
out
mov
sbb
testb
push
dec
sub
cmpsl
push
dec
fisttpll
cli
in
jne
iret
or
roll
dec
cli
cltd
out
rcrb
vmread
in
insb
push
lret
icebp
jge
cmp
pusha
add
and
or
sbb
sbb
bts
mov
movsl
test
cmp
das
jbe
mov
pop
data16
mov
aas
jmp
mov
and
mov
call
sarl
mov
jnp
fcomi
adc
ds
sub
dec
cmp
fmull
cmp
xchg
xor
les
repz
sbb
inc
daa
fmulp
jne
add
inc
sbb
into
adc
and
add
jecxz
cld
adcl
mov
adc
aad
jb
addr16
addr16
cmp
pusha
add
sbb
mov
sbb
jne
arpl
adc
sbb
ret
push
pop
rcrb
stos
clc
xor
or
test
sbb
xor
rol
cltd
adc
iret
aam
and
sti
jecxz
dec
pop
push
ret
lcall
mov
cmpsb
cltd
out
aam
and
hlt
xor
test
dec
ret
test
sbb
mov
in
cmp
adc
ss
add
sbb
xchg
daa
push
imulb
push
out
out
lea
mov
jns
cmp
comiss
dec
inc
scas
xchg
int3
bound
fistpll
inc
test
imul
cmp
xchg
push
sbb
sbb
int
jo
or
loopne
fdivrp
push
scas
fisubrs
inc
sbb
pop
xchg
jbe
dec
mov
sbb
cwtl
loopne
push
mov
pop
xchg
daa
in
sub
xchg
xchg
popf
mov
cmpsl
sahf
mov
cmpl
test
sbb
add
sbb
loopne
dec
ffree
popa
add
push
test
add
out
jg
or
scas
pop
loop
mov
rcrb
xor
andb
scas
lcall
sbb
pop
sbb
sbb
in
cmp
imul
jmp
fnstcw
sub
dec
push
xor
clc
push
jne
jecxz
shlb
jo
jbe
gs
movb
and
inc
jne
push
fisttpll
inc
jae
arpl
pushl
lret
push
lods
test
stc
fcoml
and
testl
and
loop
pop
test
add
bound
arpl
inc
fcomps
popf
and
leave
jae
std
pop
sub
adcb
dec
and
out
push
lock
lock
xorl
test
sbb
xor
sbb
out
lea
int
test
mov
dec
jle
mov
fwait
sti
push
mov
push
lcall
and
leave
clc
push
sub
and
fisubrl
rcrb
dec
adc
shrl
jge
nop
sbb
adc
subb
add
adc
fcoms
enter
fnstenv
repz
sbb
or
sbb
out
mov
sbb
pop
inc
mov
and
mov
stos
popa
inc
icebp
lods
andl
pop
popa
mov
mov
mov
mov
sbb
fistpll
inc
mov
xchg
inc
call
mov
jle
jmp
mov
mov
aad
aas
mov
mov
cmpsl
pop
ss
xchg
mov
xorb
ficompl
out
std
mov
mov
sbb
or
ss
stc
jg
aas
lea
mov
add
popl
add
and
sbb
adc
sbb
std
out
scas
scas
mov
int3
sub
test
sbb
xor
stos
cmpsb
push
mov
pop
pop
pop
mov
ret
clc
xchg
sbbb
or
add
sbb
mov
jle
repnz
or
rcrb
pusha
sbb
nop
mov
cli
xor
ljmp
push
dec
das
xchg
daa
and
cld
mov
mov
fiadds
sbb
cld
dec
mov
mov
mov
in
lahf
mov
xor
sti
push
mov
lcall
xor
inc
xor
lea
and
xor
mov
xor
jnp
lcall
insl
jg
fcoml
jne
aam
and
add
xor
lret
lcall
fisubrl
xchg
pusha
mov
pop
xchg
jno
cltd
fs
jg,pt
jmp
xchg
clc
fistps
test
sbb
sub
bound
and
sahf
push
sarb
fnsave
and
js
test
sbb
add
mov
loope
ror
mull
jo
sbb
sbb
or
sbb
xor
cs
mov
sbb
mov
mov
adc
sahf
repz
iret
xor
lret
inc
inc
inc
movsb
mov
filds
jb
pop
add
pop
mov
bnd
inc
scas
push
push
sbb
sbb
fwait
cmc
xchg
xchg
ljmp
arpl
and
aaa
push
fsubrl
push
mov
and
or
lahf
jne
add
fucomip
popf
cli
xlat
je
lock
cmp
cmp
inc
add
pop
fwait
imul
leave
xlat
dec
adc
test
xchg
mov
or
add
lea
sbb
cs
sbb
lds
xor
loopne
or
pop
pusha
mov
inc
int
inc
stc
out
push
andb
dec
pop
push
jecxz
movsb
cmpsb
jb
jno
popf
inc
lcall
adc
push
out
lret
mov
push
sbb
adc
sbb
icebp
movsl
dec
test
jo
js
addb
inc
xor
aam
repnz
xlat
iret
xchg
inc
pop
rcrl
loopne
mov
and
and
jle
subl
movsb
ret
cmpsb
mov
pop
adc
test
or
sbb
idiv
jl
shlb
cmc
jge
movsb
ficomps
nop
sbb
sbb
lods
insl
frndint
cmpsb
popf
and
mov
dec
test
mov
ds
lret
iret
ljmp
mov
adc
sbb
mov
imul
inc
pop
popf
loop
aam
dec
hlt
push
add
xor
leave
sti
mov
jmp
jns
or
jne
jo
loopne
xor
pop
sarb
rcrb
xor
test
xchg
add
jle
insl
pop
out
mov
jmp
add
add
push
inc
sbb
push
sbb
xor
ja
call
adc
negl
shl
sbb
dec
and
mov
mov
xchg
in
outsb
jp
dec
sahf
shl
dec
addr16
out
sub
mov
ret
pop
sar
sub
add
int
scas
or
or
push
mov
in
mov
cmpsb
test
sarb
mov
adc
out
add
lahf
fwait
loope
xchg
cmp
jo
lods
xor
dec
iret
das
sub
aas
test
fs
lcall
aas
jl
pop
js
fisttpll
movsb
lahf
and
push
mov
push
sarl
stos
adc
enter
mov
movsb
push
lods
xchg
inc
subb
scas
mov
or
add
shl
pop
push
xorl
lcall
push
mov
ret
aad
cmp
mov
icebp
bound
mov
push
insl
in
lcall
push
hlt
mov
sbb
mov
ret
cli
mov
jo
clc
or
jns
int3
int3
insb
idiv
popf
imul
fcmovnb
enter
or
push
mov
in
inc
adc
inc
cli
pop
icebp
notl
push
insl
inc
adc
push
xor
mov
std
adc
fwait
pop
push
int3
sbb
imull
and
dec
xchg
or
jbe
call
je
addr16
add
pop
xchg
xchg
insl
and
sbb
mov
je
xorl
test
pop
sbb
pop
out
mov
inc
push
push
adc
pop
jb
cmp
xorb
and
push
roll
dec
push
push
xchg
cmp
loope
jle
movsb
ljmp
mov
js
mov
push
adc
imul
pop
mov
dec
pop
lods
sbb
add
les
dec
inc
xchg
pop
inc
inc
cmc
mov
js
repnz
aas
stos
inc
aad
leave
aas
insl
das
aad
or
pop
and
jmp
lret
jne
wbinvd
add
jo
add
pop
push
dec
adc
pop
xor
pushf
lock
rclb
xor
mov
sbb
rcrb
mov
jns
frstor
push
fdivs
and
mov
loop
lods
mov
cmp
fidivrs
inc
jl
sbb
mov
fisubrl
in
inc
xchg
sub
call
sub
gs
inc
cli
inc
decl
stos
cwtl
push
pop
and
rclb
mov
lret
lret
and
in
das
frstor
cld
mov
sub
lret
jge
movsl
divb
mov
pop
lcall
jmp
jnp
leave
add
je
mov
sarb
xchg
js
mov
mov
pushf
add
pop
sbb
imul
or
cmc
fisubs
mov
pop
push
enter
xchg
adc
and
inc
push
div
clc
pushf
mov
in
mov
xlat
or
lods
cmp
push
sub
push
lods
jb
adc
xchg
push
or
and
jp
popl
jns
test
and
sbb
sti
add
and
mov
addl
sub
notl
pop
mov
jge
in
lds
adc
cmp
push
xchg
dec
or
and
les
mov
adc
rolb
in
psubb
push
sarl
inc
inc
pop
notl
ficomps
jb
pop
jmp
xchg
ret
pop
lea
cmp
out
dec
dec
test
and
cmp
outsl
cmc
add
xchg
rorb
pusha
and
or
sbb
mov
xchg
xor
and
jo
nop
loopne
out
sub
jge
add
daa
mov
and
lods
push
jno
jns
adc
rclb
pop
stos
ljmp
xor
call
mov
push
and
dec
sub
jg
xor
or
inc
mov
jle
cmp
and
inc
cmpsl
addr16
jnp
fsubrp
dec
in
lret
std
daa
inc
pop
jmp
dec
pop
mov
enter
adc
jae
mov
ror
stos
rcll
outsl
cmc
cmp
mov
xchg
mov
stos
ret
repz
lock
inc
mov
daa
rolb
clc
jnp
adc
add
xor
xchg
cmp
xchg
std
filds
adc
stos
push
mov
cmp
je
gs
enter
sbb
sbb
and
cmpsl
mov
push
fs
and
add
and
cmp
aad
in
sub
daa
pop
fildll
jae
andb
addr16
push
and
add
popa
repnz
push
lahf
pop
push
shlb
lahf
and
or
orl
pop
add
xchg
pop
loopne
call
fcoms
cmp
and
pop
sarb
mov
sub
pop
out
cmp
and
das
hlt
adc
int
ss
pushf
push
and
xor
pop
jb
fisubl
loopne
aad
xor
fldcw
data16
cli
push
decb
loopne
out
stc
data16
mov
icebp
pushf
add
mov
xchg
andb
lock
dec
add
notl
and
and
and
in
cmp
and
fucomip
test
mov
mov
and
jecxz,pn
dec
push
push
push
mov
adc
rorb
sbb
and
call
in
sbb
bound
adc
mov
hlt
mov
and
mov
mov
jp
fst
stos
xchg
das
xchg
push
adc
or
push
xor
mov
ljmp
pop
ja
out
add
sarb
in
scas
pop
fsubrl
ss
shrl
adc
and
and
stc
and
pushf
andb
dec
pop
jmp
orb
push
push
inc
sub
push
insb
jge
int3
jl
les
gs
mov
dec
sub
xchg
mov
mov
fs
jle
aad
lds
and
shlb
ret
adc
dec
sub
mov
dec
shlb
jecxz
jg
pop
pop
xor
mov
leave
dec
xor
pop
testb
test
addr16
xor
and
mov
fwait
push
into
jns
stos
int
inc
pop
inc
jb
test
cli
jno
shlb
in
xchg
jo
xchg
adc
insl
addr16
rclb
jns
xchg
movsl
scas
mov
fcompl
mov
and
add
jo
pop
sub
aad
inc
cs
pop
pop
cmp
pop
mov
or
fdivs
cmp
hlt
or
lret
icebp
or
inc
fcoms
enterw
lahf
out
jp
loope
mov
ret
cltd
mov
out
sbbl
pop
push
insl
jg
mov
cli
jns
imul
lahf
or
and
jmp
xchg
mov
cmp
lods
mov
cmp
pop
fcmovb
pop
push
jno
imul
adc
adc
movsl
push
mov
xchg
mov
push
xchg
addr16
mov
sahf
sub
xor
hlt
mov
loopne
and
mov
lea
and
shr
cmpsb
inc
add
stc
loopne
sub
pop
adcl
mov
pop
ljmp
pop
adc
iret
dec
cmp
and
pop
dec
lahf
pop
in
stos
outsl
mov
push
and
lods
loop
arpl
stos
arpl
xchg
push
push
and
fs
add
cli
sbb
cs
lods
jbe
xchg
jnp
pop
fucomi
ds
jecxz
inc
jmp
xor
scas
leave
pop
or
mov
arpl
push
and
jne
testb
shll
insb
cmpsl
push
inc
pop
push
jns
mov
test
addr16
das
ffreep
scas
inc
int
jb
out
popa
pop
jno
scas
mov
test
pusha
and
flds
push
lahf
add
and
mov
and
lds
inc
mov
int
adc
mov
loopne
pushf
add
test
mov
xchg
and
ret
fiadds
shlb
xlat
mov
pusha
push
loope
fistpl
jo
cmp
dec
lret
inc
in
repz
xchg
jp
pop
data16
mov
decl
mov
rorb
int
sti
mov
inc
and
pop
cmpsl
aam
mov
rolb
mov
movsl
inc
push
dec
or
shlb
test
and
sub
add
and
fwait
xchg
movsb
loopne
xchg
mov
push
and
test
xor
mov
mov
mov
jb
xchg
xchg
mov
das
shrl
cmp
push
mov
pop
testl
fstpt
sub
cmp
lret
mov
fdivs
loopne
cmpsb
push
jle
out
mov
aad
loopne
les
movsb
sbb
cmovge
icebp
lahf
cs
adc
xor
cmp
cmp
rcrl
mov
and
and
dec
xor
shrb
movsb
in
int3
sub
bound
lds
and
test
insb
inc
call
arpl
pop
xor
push
fildll
fsubs
shlb
sub
loope
shlb
add
and
js
lahf
adcb
addl
lock
mov
and
adc
xor
sbb
and
aad
add
and
cmovle
jmp
mov
mov
into
mov
enter
in
cli
sbb
sarl
bound
mov
dec
push
sbb
or
and
or
aas
or
adc
push
loop
pop
lods
sub
dec
mov
and
and
shr
outsl
dec
xchg
cmp
sub
ja
decb
rcr
jb
testl
repz
enter
sti
fcoms
mov
add
xor
push
sub
lcall
mov
and
xchg
dec
dec
push
lcall
mov
sbb
popf
mov
lods
sti
ja
loope
mov
xchg
and
ja
shll
pop
pop
cmp
sub
rcl
hlt
ret
in
loopne
fs
inc
mov
rcrl
movups
sbb
inc
mov
adc
adc
lcall
ficoms
rcrl
cmp
lret
mov
jne
jmp
push
lds
add
icebp
shlb
leave
push
lret
xchg
sbb
xor
xchg
mov
and
cltd
push
inc
push
xor
int3
pop
mov
and
leave
movsl
push
in
push
or
and
pushf
inc
and
in
cli
mov
fbstp
cli
push
jecxz
mov
and
dec
sub
sbb
jle
movsl
jp
loop
cmp
popa
jle
clc
xor
pop
stos
or
shlb
in
mov
and
cs
cmp
mov
frstor
lock
ljmp
notb
je
leave
xor
imul
test
jnp
sub
mov
movl
xlat
test
es
pop
and
scas
jb
outsl
dec
mov
es
pusha
es
push
out
std
mov
es
pop
pop
ljmp
incl
es
jnp
out
mov
jno
xchg
push
outsb
or
add
and
push
and
dec
movsb
test
sub
popa
mov
lahf
rclb
inc
jae
les
es
movsb
and
mov
sbb
es
cmpsb
jle
push
jmp
leave
rcll
push
pop
cltd
mov
sub
pop
add
aam
adc
adc
xor
adc
cmp
jo
ss
or
sub
mov
sub
push
push
outsl
popf
and
movzbl
push
and
jl
sub
jnp
inc
push
adc
xor
stos
sub
es
in
cs
aam
pop
fiaddl
aad
fsubrp
push
cmc
mov
mov
sub
push
sub
mov
pop
mov
inc
add
es
push
xor
shlb
sbb
or
cmp
es
mov
test
les
cmp
cmp
stos
push
aaa
stos
jo
add
mov
shrb
pop
dec
jbe
pop
ja
inc
das
sbb
mov
and
push
and
shlb
dec
std
into
adc
daa
inc
mov
fsts
xor
repnz
jmp
icebp
scas
loop
lds
add
sub
pop
cmp
push
pop
pop
cmp
das
lahf
jo
aas
les
mov
lret
out
xchg
mov
sbb
mov
popf
fwait
mov
cmpsb
enter
dec
or
adc
sub
pop
mov
mov
iret
or
scas
jecxz
test
daa
mov
fsubrl
dec
cmp
jne
xor
sub
sbb
and
cmc
and
pop
xchg
pop
test
out
add
daa
xor
pop
sahf
or
daa
dec
cmpsb
inc
inc
loop
cmp
out
push
and
sbb
xor
lahf
hlt
inc
fs
popa
bndstx
xchg
mov
fdivrp
dec
enter
jmp
mov
out
xor
stos
pop
scas
cmp
add
daa
cmpsl
cmpsl
insb
rcr
movsb
int3
fbstp
mov
cld
vmread
and
jg
popf
ljmp
dec
and
std
push
ja
mov
daa
inc
lcall
xorb
xchg
xor
mov
xor
adc
in
xor
dec
pop
push
shlb
adcb
add
frstor
cltd
push
push
out
es
js
and
out
and
pop
addr16
icebp
lret
sarb
faddl
sub
mov
leave
add
sub
enter
or
fstps
push
sar
dec
mov
rcrl
mov
push
cld
mov
clc
sarb
lahf
add
and
out
mov
cmpsl
lret
mov
cmp
mov
adc
sub
xor
lahf
jae
lods
gs
mov
test
jmp
les
pusha
mov
sub
popa
xor
jge
xchg
jnp
sub
cld
jle
or
mulb
mov
inc
lahf
std
repz
inc
lcall
sub
jns
pop
ret
sub
xchg
inc
sub
sub
pusha
sub
es
ja
xorl
popa
xchg
mov
movsb
and
pop
je
in
out
popa
and
inc
fsubr
sbb
sub
xlat
mov
mov
xchg
dec
ret
pop
subb
ret
pop
pop
lret
sub
orb
inc
jp
lods
fildll
pop
mov
rcrl
nop
sub
pusha
and
dec
mov
jne
push
push
or
bound
push
or
nop
jo
xchg
test
sub
lock
xchg
dec
lea
stc
mov
xchg
in
enter
xchg
push
xor
sub
push
leave
pop
lret
mov
sbb
enter
inc
mov
scas
bound
dec
rorb
add
insb
shlb
xchg
movsb
sbb
sub
push
fistl
or
imul
add
aam
popf
inc
mov
mov
out
arpl
mov
in
daa
orl
xchg
push
dec
sti
movsb
shl
inc
or
mov
ja
daa
ret
lds
pop
arpl
lds
fistpll
push
pop
hlt
bound
cld
cwtl
add
mov
jge
xchg
inc
or
sub
mov
inc
addr16
mov
sbb
sub
daa
jbe
dec
dec
lret
mov
dec
gs
mov
movsl
mov
adc
xchg
sub
loopne
gs
sub
or
mov
add
ret
sub
addb
ja
scas
sbb
sub
sub
out
int3
sub
dec
cmp
cli
mov
pushf
subb
mov
sub
pop
popa
mov
andl
pop
lock
into
mov
cmc
bound
jae
push
adc
sub
cmp
outsb
adc
mov
xor
and
add
out
xor
or
ja
loopne
ljmp
xor
xchg
loop
cmpsb
sub
lret
dec
arpl
add
dec
into
sbb
sub
push
sub
jge
sub
and
or
popa
ss
jne
ds
mov
cmpsb
test
sub
pop
jae
dec
imul
inc
push
inc
or
add
sub
sub
adc
sub
daa
lods
in
call
loopne
mov
mov
iret
stc
scas
inc
xchg
dec
and
call
xchg
xor
mov
out
lahf
adc
sub
insb
popa
add
jbe
les
cmp
dec
pop
nop
xor
mov
das
shlb
mov
sub
mov
pop
fsubrs
mov
hlt
push
xor
xchg
fiadds
adc
sub
ret
xor
mulb
pop
pusha
adcl
adc
fsubs
nop
inc
sub
mov
add
sub
les
jo
stos
mov
ret
adc
in
pop
in
rolb
push
sub
ret
sub
mov
mov
bts
jecxz
jo
divl
subb
cmp
push
les
adc
or
ret
int3
cltd
pop
je
ja
mov
out
orb
icebp
jno
adc
jle
push
sub
inc
jmp
sub
mov
and
cmpsb
es
aaa
or
xchg
push
nop
nop
sub
xor
hlt
addb
test
xchg
ja
add
mov
cli
cmp
mov
test
iret
std
lcall
xor
aad
add
cmpsb
sbbl
sti
xor
adc
sub
sub
xor
fwait
aad
and
push
inc
std
pop
mov
test
push
sub
push
sub
mov
fmull
jo
insl
arpl
stos
aas
inc
js
push
pop
out
lds
xchg
test
testl
sahf
cmp
ret
into
pushf
and
rcrb
shrb
sub
cmp
cmp
sub
jb
cwtl
mov
repz
stos
imul
data16
mov
jg
dec
jb
loop
cld
mov
adc
sub
fsin
pusha
mov
fwait
inc
lods
das
pusha
nop
subb
lret
fadd
pop
mov
sub
sbb
fidivl
push
lahf
mov
or
aad
inc
sub
icebp
cwtl
nop
sub
shl
push
mov
xor
add
mov
jg
sbb
sub
dec
aas
or
loope
jp
ljmp
mov
push
loope
stc
fwait
mov
push
inc
stc
pop
addr16
adc
xchg
test
out
inc
dec
add
sub
dec
xlat
inc
mov
sub
xchg
inc
dec
imul
sub
movb
push
or
sub
gs
pop
addl
rcrl
lods
ljmp
loopne
inc
jo
ja
popa
inc
sub
fyl2xp1
and
cmpsb
push
mov
jo
pop
jmp
aam
fistpl
or
sub
push
jg
lret
jnp
test
and
jle
adc
inc
add
mov
sub
fcmovnbe
scas
or
out
pusha
out
inc
nop
nop
sub
cmp
sub
sar
mov
dec
mov
fnsave
push
aad
push
and
jmp
or
std
inc
aam
and
stos
mov
enter
and
mov
or
pop
mov
sub
cmpsb
cmp
repnz
int
adcl
sub
lea
pop
dec
sahf
out
and
comiss
sub
add
sub
loope
ss
sbb
testb
mov
popa
push
pop
xchg
in
sbb
fisubl
sub
les
sub
dec
xor
push
and
xor
incl
aam
add
jecxz
or
sub
pop
mov
repz
adc
int3
out
adc
mov
sub
aas
pop
dec
fsubrs
xorl
xor
movsl
jb
lahf
xchg
push
mov
hlt
clc
mov
jo
arpl
xor
push
sub
jmp
dec
cs
lods
sbb
sub
add
push
js
pusha
add
sub
pop
mov
mov
jbe,pt
stos
mov
xchg
call
sub
sbb
loopne
mov
inc
inc
pop
lods
pop
lock
or
lds
fistl
mov
pop
fiadds
je
ret
js
pop
out
or
push
lods
fsubs
sub
lods
push
or
jge
pop
mov
sub
ljmp
aaa
lcall
mov
sub
fldl
mov
pop
cmp
and
add
lods
aaa
aas
push
inc
hlt
mov
sub
pop
ljmp
adc
fwait
jae
push
out
out
ss
mov
add
cmp
fwait
xchg
cld
jns
inc
push
lret
mov
addr16
repz
inc
push
je
cld
mov
popa
test
sub
and
scas
les
or
repz
cmp
fsts
pop
jl
notb
jge
in
jo
insl
test
aad
aaa
jecxz
ret
dec
std
fwait
mov
stos
shl
add
sub
mov
sti
inc
icebp
mov
and
daa
popf
lret
outsl
insl
int
jge
movl
or
imul
loopne
lds
div
xchg
sub
insb
xchg
lahf
and
jne
mov
mov
pop
call
sub
loope
sbb
stos
out
xor
ss
sub
push
xchg
mov
pop
adc
es
mov
and
lock
jne
nop
sub
arpl
in
inc
add
sub
fdivrl
imull
in
loopne
xchg
cmp
nop
sub
xor
movlps
mov
inc
pop
jl
es
imull
loop,pt
dec
mov
movsl
or
inc
andb
dec
dec
ja
pushf
xor
add
xor
lret
int
fbstp
adcl
test
adc
cs
or
test
pop
adc
and
push
inc
mov
ret
add
sbb
adc
xchg
sahf
push
in
sahf
std
push
push
loope
cli
inc
push
xorb
xor
lock
out
adc
int3
inc
pop
stos
mov
gs
aam
and
mov
in
inc
push
and
outsl
fldenv
adc
loopne
add
mov
sbb
cs
or
jp
inc
int
add
aad
and
notb
cs
mov
outsl
push
sbb
ss
push
cmp
mov
ret
ja
jmp
insb
or
pop
stos
mov
sti
ss
clc
test
cmc
sbbl
lods
cltd
push
stos
cmc
sti
xchg
jo
imul
test
enter
es
and
insb
sub
and
sub
sti
sbb
inc
push
outsb
sub
cmpsl
iret
pop
lods
sbb
sub
inc
cmp
out
je
imul
mov
push
push
data16
aaa
in
test
jnp
shrb
dec
das
sub
sarb
outsb
jge
and
mov
adc
ljmp
into
insl
outsl
inc
sbb
das
mov
xor
das
imul
js
lea
js
test
sub
jb
cli
mov
clc
pop
xstore-rng
cmpsl
ret
sbb
nop
das
sbb
shrb
aad
pusha
dec
sub
lea
lea
add
sbb
das
sbb
pop
lcall
push
dec
push
adc
hlt
lods
pushf
and
lock
xor
or
mov
rorl
das
flds
mov
inc
pop
rorl
mov
adc
push
rcrb
pop
shrd
ret
outsb
rclb
data16
pop
push
xchg
dec
out
pushw
ljmp
movsb
jbe
lahf
pop
jmp
xchg
adcl
xchg
outsl
sub
push
mov
mov
sub
in
jns
nop
das
xchg
out
mov
mov
or
jp
out
in
js
cltd
test
loop
lods
xor
das
sarb
out
add
arpl
pop
xchg
and
jnp
inc
xor
nop
das
insb
sbb
loopne
data16
xchg
mov
push
movsl
ds
sahf
hlt
dec
adc
sarl
fisubrl
shlb
scas
ja
rcrb
xchg
dec
cmp
or
lret
inc
out
leave
jle
rcrl
das
push
pushf
loopne
stc
pop
into
sub
rcll
xor
mov
shlb
out
int
aam
arpl
pushf
and
cmp
sbb
xor
xor
xor
lahf
mov
add
cli
lds
fcom
xchg
das
lahf
out
loop
xor
es
mov
adcb
je
jge
push
dec
icebp
mov
xor
leave
shrl
xor
xlat
arpl
int
ss
mov
adc
shlb
loop
out
repz
ret
push
or
xor
rorb
xor
cmp
mov
push
cmp
jb
jg
sbb
push
xorb
jmp
shrl
lock
rorl
mov
cmc
cmp
aam
int3
xor
xor
inc
scas
pushf
push
xor
mov
inc
cmp
inc
pop
cwtl
shlb
dec
or
es
xorb
stos
cli
jns
ja
push
dec
xchg
push
lret
das
xchg
into
push
aad
add
pop
push
xchg
or
xor
rorb
cmp
lahf
outsl
je
cs
mov
cmp
jo
out
lahf
fcomps
aam
aaa
into
dec
push
into
in
jge
lods
inc
xchg
mov
ss
adc
xchg
movsb
pop
push
in
pop
pop
push
xor
dec
hlt
subl
fcmove
cmp
cmp
xor
rolb
adc
sbb
aad
mov
add
jne
clc
cmp
xorb
add
fsubr
mov
enter
rcrl
mov
rolb
hlt
xchg
repz
xor
incb
mov
sbb
and
mov
mov
mov
cmc
mov
or
xor
xor
xor
int
mov
dec
lea
repz
dec
jecxz
rclb
fs
xlat
dec
xchg
fsts
push
jb
add
imul
pop
add
xor
fstpt
xchg
loop
sti
sahf
inc
leave
cmpl
mov
and
sbb
das
fwait
inc
mov
mov
dec
inc
inc
jecxz
push
mov
xor
rcll
mov
addb
movsl
jge
pusha
flds
pop
js
ret
inc
ret
mov
mov
cwtl
and
ss
sub
shlb
xchg
cmp
and
popa
sbb
cwtl
shlb
pushf
inc
xor
inc
push
push
cmc
push
js
inc
pusha
rorl
mov
xorb
inc
int3
aaa
cld
lret
push
mov
jns
mov
xor
jno
mov
mul
loope
sti
cmp
aas
imul
shlb
pop
lcall
jp
sbb
xor
adc
cwtl
xorb
ret
adc
inc
xor
mov
xor
xor
mov
popa
insl
mov
add
xor
je
xchg
aas
adc
pop
fstpt
inc
sub
ja
pop
inc
and
test
xor
mov
mov
repz
sub
ficompl
nop
adc
stc
or
dec
and
adc
xor
or
insl
push
stos
iret
push
fwait
gs
add
xor
icebp
cmp
int
xor
mov
jo
xor
fiadds
imul
push
mov
sbbl
jl
jge
sub
stos
pop
inc
inc
xchg
outsl
adc
mov
push
push
fdivr
jnp
notl
pop
push
ljmp
adc
shlb
popa
daa
mov
in
into
fisubs
sarl
mov
pop
pop
clc
icebp
mov
dec
sahf
dec
out
push
cmp
cs
jp
xchg
out
jns
adc
pop
jne
in
ss
mov
and
les
movsb
xor
add
mov
fs
jmp
mov
jl
and
inc
addr16
jne
xchg
xor
fstps
and
pop
call
or
pusha
pop
hlt
mov
mov
fdivrl
push
jne
mov
stos
stos
adc
xor
push
add
adc
xor
cmpsl
loop
dec
lds
sahf
pop
cld
pop
enter
icebp
repz
rcl
push
pusha
pop
cld
sbb
xorb
sbb
xor
sarb
sub
sbb
xor
arpl
paddw
adc
jecxz
xor
icebp
mov
fcmovbe
xchg
bound
mov
xor
dec
xchg
sub
ja
lock
mov
sbb
pushl
out
adc
shrb
and
mov
push
push
hlt
popa
fidivs
sahf
inc
xchg
pusha
insb
pusha
or
stc
lret
pushf
jo
sub
mov
lds
imul
aam
mov
ds
in
xorb
int
pusha
pop
jle
adc
mov
fiaddl
jns
push
add
fdivrp
xchg
sbb
push
mov
ds
fsubrp
lcall
imul
fldl
shlb
push
push
cli
pop
xor
and
sahf
or
xor
dec
fimull
mov
xchg
and
adc
mov
cmc
sbb
pop
xchg
into
enter
clc
pop
imul
and
xor
push
outsl
lret
ja
push
call
sub
adc
xor
pop
inc
xor
in
jnp
and
inc
jmp
icebp
stos
filds
mov
adc
out
mov
mov
cwtl
push
xor
sbbl
xor
fisubl
loopne
xchg
iret
mov
int3
mov
cmp
sub
sub
push
sahf
pusha
xchg
pop
in
dec
fldcw
aas
fldcw
xchg
mov
adc
xor
and
idivl
dec
sub
dec
adc
ret
or
addr16
ja
sub
mov
and
xor
mov
push
pop
fwait
decl
xchg
mov
pop
jl
add
jno
adc
add
xor
sub
push
and
sub
jo
sbb
xchg
ret
cmc
fs
pop
ret
mov
mov
icebp
xor
jmp
js
sbb
xor
xor
jno
loope
xorb
jmp
mov
movsl
pop
pushf
add
leave
pop
les
xor
adc
xor
in
push
sub
push
adc
push
xlat
test
mov
pop
lods
xchg
and
or
xor
sbb
xchg
xchg
dec
pop
dec
int3
testb
test
mov
popf
jl
rol
jg
mov
mov
in
scas
mov
mov
xchg
push
xchg
or
sbb
xor
aad
fnstsw
outsl
jne
int
fwait
or
pop
mov
addl
push
test
push
jnp
cwtl
nop
xor
sbb
insb
xor
fnstsw
adc
sbb
into
stc
sub
jmp
sub
arpl
lcall
popf
inc
jb
cli
push
push
popf
xor
mov
lcall
push
xor
jg
lahf
nop
add
in
jo
addb
push
int3
fwait
add
lods
mov
xorb
jl
push
fisubrs
sahf
xchg
cmp
or
xor
mov
adc
sbbl
fstl
in
ficomps
dec
add
imul
mov
pushf
inc
xor
rorb
pop
jl
xlat
jb
notb
jl
adc
adc
leave
insb
mov
xor
popa
test
add
lahf
popa
cwtl
shlb
or
xchg
pusha
rcrl
push
push
aaa
sbb
xor
jns
push
xor
xor
push
pop
cmp
mov
xor
xor
pop
and
cmp
mov
pop
test
pop
cli
dec
dec
mov
push
add
xor
das
jle
sub
pop
pop
mov
jne
push
add
enter
mov
jp
sbbb
xor
fldcw
and
cmp
mov
sarl
mov
adc
xor
xor
dec
sbb
xor
jo
lock
push
adc
cmpsl
icebp
cmpsl
das
and
in
xor
mov
iret
sbb
xor
stos
push
sub
inc
xor
jmp
xchg
push
stc
andl
roll
sti
divl
push
lret
and
mov
movsl
les
in
decl
cmp
in
lods
pop
jle
mov
and
push
ss
pop
je
add
fwait
pop
xor
adc
jle
dec
outsb
mov
mov
pop
mov
popa
pop
lcall
insb
cli
inc
js
cli
sbb
pusha
fidivrl
inc
add
xor
push
push
cmp
dec
sti
daa
fdivrs
inc
dec
mov
ss
test
ss
cmpsl
and
xlat
repnz
and
scas
lea
in
inc
loope
fistpll
inc
push
roll
ss
xor
sub
mov
and
outsb
fcoml
inc
ja
nop
fdivrl
add
push
fnstenv
lock
insl
insl
out
mov
lcall
sub
dec
repz
cwtl
jo
das
jmp
jbe
fistpll
sbb
aam
or
ss
mov
sbb
test
jno
add
ss
add
mov
mov
testl
push
adc
ss
andb
int3
xor
cmpb
adcl
int
popf
int3
pop
add
rol
xchg
ljmp
mov
fisubl
adc
ss
jp
ja
lods
mov
ss
pop
xor
test
ret
ss
popf
out
sbb
ss
dec
sti
cmp
out
stos
dec
insb
mov
addr16
sub
push
dec
pop
or
ss
rolb
jne
enter
mov
push
lods
and
rcl
or
fwait
mov
push
mov
xchg
mov
or
aaa
mov
cmc
pop
loope
les
test
aaa
fstpt
jl
iret
dec
dec
cmp
fmuls
in
outsb
movsl
or
push
push
femms
jl
into
cmp
push
sbb
aaa
outsl
mov
ljmp
xor
cmpsl
fwait
xor
lea
pop
push
inc
xchg
and
ret
aaa
out
jo
popa
loope
shrb
inc
mov
cmp
push
cwtl
push
aaa
into
pusha
push
int
cmpsl
or
sahf
outsb
jmp
bswap
and
push
and
arpl
test
fsts
sbb
test
nop
aaa
scas
stc
xchg
std
add
fiadds
addr16
pop
mov
jg
cmp
pop
outsl
and
scas
sbb
pop
ret
fs
aaa
sbb
aaa
or
mov
aaa
in
jmp
sahf
ror
jg
fsubs
xor
pop
mov
xchg
repz
and
subl
jle
mov
or
mov
leave
xor
stos
adc
jl
aad
outsl
pop
popf
xchg
imul
aam
mov
xorb
push
dec
cmpsl
sub
pop
aam
or
sub
adc
dec
shrb
jo
test
aaa
dec
clc
adc
xor
ret
pop
fnstcw
inc
ret
les
cmp
std
xchg
pusha
in
test
in
std
cli
add
bound
xor
outsb
pop
xor
cmp
call
jcxz
pop
jb
mov
xchg
aad
mov
lods
dec
xchg
inc
cmp
jle
sub
repz
cmc
sub
shr
js
addr16
sub
cmp
nop
inc
cmp
imul
lods
push
push
push
cmp
jp
shll
sbb
dec
xor
cmp
lcall
divb
push
js
lods
cmp
xchg
mul
cmp
jns
pop
jno
pusha
cmp
cmp
out
cmp
aas
push
push
cli
xchg
cmp
aaa
punpckhbw
mov
push
out
mov
add
cmp
mov
pop
mov
fsubl
cmpb
mov
jbe
dec
jp
xchg
jne
in
fimuls
add
add
idivb
inc
clc
lret
xor
gs
mov
or
jecxz
or
xchg
lahf
fistpl
xor
xchg
nop
cmp
add
cmp
lods
int
mov
aam
stos
repnz
fwait
mov
in
imul
int3
jge
inc
icebp
sub
loope
imul
xor
xchg
or
mov
cmp
pop
push
xchg
xor
cmp
mov
inc
test
adcl
in
mov
fwait
xor
jbe
mov
mov
cmp
cli
adc
cmp
mov
lock
adc
cmp
fwait
sahf
leave
dec
and
mov
sub
sbb
jmp
cwtl
push
cmp
mov
adc
icebp
fmull
mov
jnp
sub
dec
loope
inc
mov
insl
and
das
movsl
jb
sbb
cmp
dec
aad
add
mov
in
add
aaa
jns
sbb
imul
pushf
jo
ja
mov
in
fadds
mov
dec
push
stos
pop
mov
dec
dec
xlat
inc
adc
cmp
inc
iret
mov
jne
cli
repz
mov
outsl
cli
push
or
cmp
jbe
in
dec
xchg
xor
sub
insl
mov
icebp
stos
jl
push
enter
cmp
loopne
mov
lock
mov
xorl
jmp
fsub
in
int3
xor
sub
cmp
mov
cmp
lcall
cmp
inc
add
idivl
xchg
mov
push
std
adc
hlt
pusha
pop
add
cmp
sub
cs
mov
lods
push
and
je
cmp
test
mov
and
adc
sub
xor
mov
shrb
mov
inc
adc
mov
shlb
rorl
xor
nop
cmp
imul
out
xchg
xchg
xchg
incb
imul
pop
mov
sbb
adc
enter
xor
cmp
push
lock
fxch
push
lahf
sbb
sti
sarb
adc
xorl
inc
jo
jae
xchg
and
add
pop
jp
and
int3
or
cmp
xor
adc
sbb
mov
add
shlb
fwait
sar
xchg
cltd
inc
push
mov
nop
mov
push
insb
sbb
div
pushf
xor
jb
imul
mov
hlt
mov
sub
pop
jns
sti
out
pop
in
stc
inc
jmp
jecxz
add
mov
ret
sarb
test
dec
jae
scas
rclb
or
cmp
or
jne
add
repz
xor
xchg
mov
jle
xchg
inc
cmp
xchg
clc
add
xor
sahf
xchg
lock
mov
lock
imul
push
cmp
sub
mov
mov
addb
mov
or
sbb
cmp
lcall
push
cmp
cld
and
mov
out
loopne
mov
cltd
outsb
jns
push
fdivrs
movsl
jb
add
gs
loope
pop
jne
imul
mov
test
push
jb
mov
ljmp
sub
adc
je
fstpl
loopne
adc
xchg
daa
sub
inc
push
xor
cmp
cmp
push
outsl
add
sbb
cmp
mov
call
sti
cltd
xchg
lods
xchg
sbb
jnp
movsb
into
xor
pop
xor
jo
inc
push
push
ret
add
inc
or
inc
mov
dec
scas
cmp
ljmp
lcall
push
cli
dec
ss
fldt
cmp
pusha
sub
lea
sub
sub
adc
cmp
loopne
das
mov
pop
push
or
adc
cmp
mov
aas
pop
adc
xchg
push
jle
xchg
movsl
mov
cmc
push
dec
addb
mov
rep
cld
jbe
in
sub
jmp
pusha
cmp
movl
cmp
mov
movsl
insb
xchg
imul
outsl
adc
cmp
mov
adc
cmp
int3
lock
stos
pop
sub
push
push
xchg
into
xchg
movsl
out
insl
xor
xor
shrb
es
cmpsb
adc
cmp
jl
add
or
in
mov
jl
pusha
cmp
les
addr16
adc
cmp
outsb
aaa
xor
xchg
mov
fsts
pusha
pop
fdivs
insb
cltd
xchg
cs
inc
cld
shlb
in
mov
sarb
fwait
dec
mov
xlat
mov
xchg
lea
mov
pop
bound
nop
push
cmp
filds
xor
mov
jns
xchg
cmp
sbb
jbe
jle
dec
into
fisubs
dec
jne
sarb
mov
cmc
bound
xchg
lds
cmpsb
jne
aas
jl
lahf
imull
or
test
add
imul
sbbb
mov
cltd
dec
xor
or
sbb
cmp
pop
jmp
lds
mov
xchg
aam
ds
add
out
sub
and
cmp
pop
sbb
add
cmp
inc
pop
mov
sahf
jb
sbb
cmp
xchg
jae
insl
ret
mov
cmpb
ficomps
mov
js
sub
nop
xor
cwtl
mov
cli
not
fcoml
cli
mov
cmpb
dec
sub
jno
std
test
fwait
sbb
cmp
addb
insl
mov
cmc
pushf
and
popf
cli
jl
xchg
popa
lcall
mov
lcall
dec
jg
rorl
jmp
into
movsl
jne
test
cmp
push
push
loopne
out
ror
jmp
adc
stos
int
nop
mov
stc
or
je
adcb
pop
pop
sub
into
clc
movsl
sbb
cmp
xchg
mov
addl
jle
movsb
push
xor
jns
es
pop
mov
xor
lahf
add
jo
fwait
mov
dec
pop
adc
dec
mov
leave
flds
mov
les
test
inc
and
in
es
cmp
pop
xor
repz
cmp
xor
cmp
xor
cmp
xchg
jecxz
cwtl
jo
pop
popa
jmp
sarb
jo
movsb
stc
jge
jb
outsl
add
push
out
adc
cmp
rolb
mov
push
cmp
pop
in
sbb
pop
xchg
mov
fmull
in
mov
iret
into
sbb
cmp
xchg
xchg
mov
mov
scas
rclb
mul
push
sub
dec
or
cmp
adc
cmp
jmp
ja
sbb
in
ret
mov
xchg
add
push
add
in
mov
xchg
or
cltd
jmp
or
data16
leave
push
pushl
inc
lret
inc
inc
rorb
adc
cmp
sar
dec
inc
pop
in
sub
cltd
cmpsb
ljmp
mov
lcall
pushf
and
sbb
jo
mov
clc
insl
inc
lods
jo
sbb
cmp
xchg
into
imul
data16
inc
xor
jp
push
xchg
insl
leave
andl
cmp
cmp
adc
adc
pop
pop
jmp
add
dec
imul
in
cld
shrl
cwtl
loopne
jl
xchg
lock
in
xor
ds
pop
out
xor
mov
mov
pop
mov
jo
filds
ds
jo
dec
arpl
mov
cltd
ret
into
mov
cmp
ficomps
cmp
fsubrs
pusha
cmpsb
mov
jmp
or
ds
jne
lcall
mov
jno,pt
lahf
mov
inc
inc
daa
out
out
jno
push
cmc
mov
arpl
pop
push
xor
jb
jns
inc
addps
push
pushf
push
ds
mov
adc
fstps
mov
ds
ds
adc
andl
mov
icebp
cmp
ds
loope
sarb
mov
mov
pop
das
cmp
imul
ds
pop
ljmp
cmc
fstpt
or
xchg
fsubrl
mov
sub
test
xlat
arpl
fadds
mov
test
and
andl
xchg
imul
mov
push
inc
out
xor
je
pop
cmp
xchg
into
sbb
pop
gs
push
push
mov
sub
scas
stos
repz
dec
and
xchg
jo
jmp
mov
and
push
add
aas
push
mov
sub
fistpll
pop
xchg
scas
sbb
shlb
pop
adc
dec
andl
jo
mov
movsb
cs
rorl
out
push
daa
add
sahf
andb
xor
frstor
nop
push
aas
std
mov
nop
xor
outsl
iret
cmp
mov
clc
xlat
cmc
dec
pop
nop
jo
and
iret
aam
fcomi
inc
push
mov
sti
pop
sub
sahf
loope
pop
mov
xor
dec
les
in
xor
sbb
stos
je
dec
cmpsb
mov
push
fcoml
cmp
cwtl
pusha
aas
push
inc
mov
mov
mov
sbb
mov
pop
arpl
pop
push
cmp
outsb
in
loope
and
xor
sarb
fistpll
scas
fwait
addb
jbe
out
je
sbb
out
je
jnp
xchg
xchg
pusha
aas
mov
jg
and
and
jb
sub
dec
pop
pop
adcb
lods
inc
cld
sbb
loop
pop
mov
cmpb
popa
xchg
pop
div
cmp
or
mov
js
gs
push
cwtl
adc
lock
cmpb
aas
sbb
inc
inc
clc
jo
adc
popa
jae
or
pusha
or
aas
jnp
in
xchg
rcll
adcl
shrb
mov
jo
cmp
stos
std
mov
jle
lock
bound
xor
cs
xchg
fstps
rcrl
add
fwait
testl
push
in
movsl
pushf
rolb
mov
sbb
inc
movsb
sarb
push
add
fisubl
sahf
ljmp
ret
and
pop
bound
pop
outsb
int
nop
rolb
out
ss
pop
push
push
out
dec
jbe
xchg
stos
loopne
ret
inc
mov
add
and
adc
cwtl
addb
xor
add
loope
push
inc
inc
add
into
lods
outsl
pop
aaa
pushf
addb
push
loopne
mov
iret
mov
dec
sub
add
inc
pushl
sbb
jns
push
mov
call
add
xor
and
jp
inc
clc
xor
inc
sbb
mov
pop
and
fadd
lods
pop
pop
sub
and
ret
sbb
mov
inc
xchg
mov
lock
sbbl
out
xor
sub
push
movsl
add
or
shrb
add
inc
xchg
inc
mov
jle
dec
jmp
mov
addr16
inc
jnp
mov
arpl
mov
es
inc
out
xor
or
inc
arpl
mov
dec
rorl
cltd
jle
div
and
adc
sbb
inc
pop
sysret
shlb
jecxz
mov
inc
stos
mov
mov
lahf
sbb
inc
xor
add
sub
inc
mov
loop
add
inc
inc
rcrl
nop
inc
dec
addr16
or
mov
mov
int
ret
sub
push
push
leave
mov
inc
jl
lret
into
ds
mov
cmpsl
push
add
inc
push
inc
mov
inc
inc
mov
push
ljmp
mov
iret
addr16
enter
pop
imul
test
inc
dec
test
inc
pop
out
sar
in
scas
outsb
xchg
dec
or
ja
sahf
dec
jle
imul
inc
mov
fnstsw
enter
adc
inc
lret
enter
push
out
xor
stos
cmpsb
dec
fbld
sub
xlat
sahf
jb,pn
inc
inc
scas
ja
jmp
clc
mov
dec
in
inc
mov
ds
jbe
test
jo
dec
loope
fs
xchg
stc
fadd
pop
xchg
push
in
push
ret
in
dec
mov
adc
addb
mov
inc
fcoml
inc
xchg
enter
mov
xchg
sti
push
fbld
mov
add
adc
int
enter
inc
inc
mov
dec
xchg
pop
dec
ficoms
dec
ss
imul
adc
insl
xchg
loope
adc
aaa
ss
jecxz
clc
xchg
in
stos
sub
jb
xchg
repz
nop
inc
cmp
lahf
notb
push
xchg
dec
cld
shlb
inc
xchg
mov
push
mov
add
pop
mov
lea
icebp
insl
sbb
loop
inc
pop
adc
inc
adc
push
shll
cld
pushf
mov
addb
inc
scas
and
call
les
jae
mov
push
push
cmp
mov
pop
xchg
rolb
dec
fyl2xp1
xchg
lods
push
gs
sahf
and
mov
inc
cmc
mov
add
pop
pop
sahf
sbb
inc
in
cmpsb
scas
les
aam
push
test
push
ret
pop
rol
aas
dec
sub
cmp
add
adc
clc
test
stos
mov
add
repz
xor
mov
push
fiadds
nop
inc
cmp
nop
adc
xor
or
inc
mov
lods
pop
add
jo
and
addr16
xchg
notb
add
inc
sub
lahf
pop
jp
pop
hlt
sub
or
push
inc
xor
fildll
cmp
mov
sti
test
inc
out
mov
inc
arpl
mov
mov
inc
cmpsl
or
sarb
jb
xor
push
repnz
test
push
imul
jmp
shr
inc
push
sbb
sti
and
xchg
cmp
cmp
jmp
outsb
xchg
and
jmp
mov
neg
aaa
out
and
nop
inc
or
inc
cmpsl
cmp
xorl
or
lcall
in
and
sahf
jl
mov
repz
out
jne
jo
jns
lock
sub
daa
rorl
jbe
adc
stos
imul
lret
sbb
inc
in
jae
stc
xchg
mov
cmpsl
sbb
sub
mov
mov
jge
enter
or
fdivrp
pop
add
cli
sbb
test
aad
sbb
inc
pop
les
push
int
rolb
leave
imul
mov
aam
cmp
push
lcall
or
cmpsb
add
fcoml
divb
sub
imul
mov
add
outsb
shll
inc
or
mov
inc
aaa
mov
rolb
xchg
pop
jecxz
pop
lret
fistl
aas
adc
xchg
fisttpl
dec
mov
sbb
mov
mov
mov
js
push
or
test
pusha
inc
rorl
push
jo
add
push
clc
enter
inc
jbe
jo
jmp
aam
add
adcb
pop
dec
push
push
jl
cwtl
lock
mov
lret
inc
popa
movsl
sub
push
pop
and
jge
nop
inc
adcl
or
inc
scas
and
int3
jl
mov
pop
mov
inc
sqrtps
pop
loope
mov
std
cmpsl
mov
lret
cmp
mov
mov
fcmovnu
aas
push
push
test
subl
push
test
fs
in
into
mov
shll
nop
adc
mov
pop
cmp
popf
adc
inc
adc
mov
dec
pop
iret
loope
cmc
fcoms
push
mov
inc
and
push
dec
cli
outsl
mov
xlat
sub
inc
test
mov
xorl
push
jge
push
std
add
movsl
mov
or
lea
das
push
andb
lods
xchg
in
cmpsl
xor
adc
push
inc
jmp
enter
rolb
pop
sbb
inc
out
and
pop
repnz
adc
cwtl
and
icebp
rcrb
adc
les
mov
inc
jge
or
fldenv
daa
jg
pop
cs
jb
test
inc
sub
xor
inc
push
sbb
inc
and
jle
push
ljmp
jge
nop
add
dec
jne
xchg
inc
xor
adc
je
pop
stc
andb
mov
pop
test
jo
xchg
out
jbe
sti
push
xor
mov
movsl
popf
inc
fisttpll
add
lahf
push
xchg
mov
movsl
pop
jp
inc
loopne
cmpsl
cmp
loope
mov
mov
inc
inc
ret
popa
in
lret
scas
mov
sub
add
inc
pushf
mov
push
insl
fdivrs
inc
jg
adc
mov
inc
out
aam
dec
xor
rorl
push
fnstcw
test
hlt
cs
mov
cmpsb
sub
xchg
fcompl
mov
xchg
in
mov
mov
imul
pop
push
test
aaa
xchg
sub
and
inc
test
mov
dec
adc
std
or
inc
add
inc
mov
add
std
scas
xor
shll
repz
lahf
cmp
aaa
int3
mov
icebp
lea
sti
and
inc
leave
push
sub
outsl
testb
inc
mov
popf
pop
testb
dec
add
pusha
inc
hlt
dec
insl
js
loopne
pop
cltd
inc
pop
adc
push
inc
je
stc
mov
mov
sbb
xorl
jae
push
jns
movsl
scas
xor
jno
lret
test
inc
sti
push
mov
inc
sbb
out
mov
inc
inc
push
or
inc
sarb
test
jl
xchg
outsb
movsl
test
sub
pop
mov
jb
addr16
pusha
inc
cmc
inc
xchg
jo
out
je
enter
nop
inc
lcall
cmp
jp
call
imul
mov
mov
test
add
addr16
add
test
jge
inc
je
lock
add
mov
inc
cmp
jb
mov
push
add
aad
cmp
or
inc
or
ja
jb
bnd
std
mov
add
cmc
mov
mov
cmc
cmp
and
stos
push
fcompl
mov
in
pusha
incl
sbb
mov
fildll
adc
dec
test
stos
mov
push
lods
pusha
in
mov
push
subl
and
sbb
add
test
inc
xor
push
push
adc
adc
push
xor
stc
je
les
inc
xchg
daa
roll
jno
dec
add
inc
fdivrp
movsb
movsb
sbb
sub
inc
mov
inc
jp
jno
mov
stos
sbb
inc
inc
push
sbb
aam
imul
or
js
and
lock
cli
loopne
in
nop
rolb
and
sub
cli
mov
and
inc
aaa
lods
sub
mov
sti
into
inc
imul
adc
add
cmp
sub
push
jl
mov
std
dec
mov
or
sbb
mov
stos
mov
xchg
addb
in
xor
inc
adc
