stos
xchg
sub
adc
enter
std
push
scas
push
icebp
lods
dec
sub
or
add
fdivr
sbb
xchg
imul
fdivrs
add
add
rolb
add
add
mov
repnz
addb
pushf
add
add
add
add
ss
clc
loope
xchg
mov
in
mov
lds
sti
push
add
push
hlt
jne
add
mov
add
mov
sbb
add
sbb
pop
push
adc
add
enter
testb
add
add
sbb
xlat
and
lahf
sbb
insb
sub
add
add
lds
in
push
test
lret
std
in
cmp
int3
loop
add
pushl
enter
sahf
out
jne
lock
mov
pusha
add
add
add
movsb
add
add
jle
dec
out
das
mov
jl
add
clc
rolb
out
scas
addr16
add
leave
jmp
fs
add
add
add
addl
insl
pop
inc
add
add
cltd
or
add
mov
or
int
cmpsl
add
jecxz
dec
addl
iret
adc
movl
pop
add
add
add
rcl
pop
outsb
xchg
pop
pop
push
mov
add
add
adc
pmuludq
add
adc
add
add
add
mov
pop
xrelease
pop
adc
mov
xor
pushf
loopne
pop
push
setle
popf
ss
in
movl
mov
xchg
sub
arpl
jb
fwait
dec
mulb
out
inc
add
cmc
ret
add
ficomps
mov
push
ds
int
rcr
fwait
loopne
jns
cmp
out
shlb
fisubrs
xor
add
push
add
add
add
add
mov
addl
ficompl
xlat
fcom
and
in
jnp
add
inc
add
add
add
cmp
outsl
sti
sbb
repz
pop
xchg
xchg
iret
add
imul
negl
sub
imul
out
xor
inc
add
push
jnp
add
movl
add
xor
jge
int
stos
icebp
push
add
inc
add
pop
ja
js
add
jb
loopne
lea
aas
int3
fwait
xchg
push
jnp
add
add
add
repz
and
sub
mov
enter
imul
xchg
mov
in
jl
add
add
into
outsb
xchg
leave
imul
add
sub
inc
add
icebp
mov
sbb
cmpsb
add
add
pushf
push
fsts
add
add
add
xor
cmp
add
mov
add
in
sbb
je
add
cld
and
push
popf
xor
jmp
movb
add
add
into
iret
addb
sbb
dec
movsb
add
movl
add
and
clc
and
xor
push
rolb
dec
mov
cmp
sub
mov
add
aaa
mov
add
xchg
jne
pop
add
push
add
add
add
out
js
dec
jle
and
mov
inc
add
shll
lds
cld
movb
add
out
movsl
add
sbb
adc
addl
outsl
filds
les
adc
ja
clc
out
into
cmpsl
add
jge
dec
inc
add
daa
add
out
add
stc
xor
add
cmp
xor
lds
mov
add
scas
push
dec
std
aam
add
dec
outsl
add
add
pop
add
add
and
sbb
add
in
and
adc
ljmp
and
cld
les
dec
enter
push
add
movb
jne
xor
shrb
add
add
je
add
add
mov
add
add
lea
dec
xchg
movsl
add
roll
xor
push
test
add
add
sahf
add
add
shlb
aas
test
pandn
cltd
jae
pop
lcall
add
add
les
imul
lods
push
add
add
or
sub
push
dec
mov
and
mov
jg
push
xchg
data16
into
repnz
ss
pop
sub
add
xchg
xor
jl
add
cli
add
aam
dec
ljmp
leave
cmpsl
add
add
inc
add
add
pop
add
into
cmpsl
add
xchg
mov
push
lcall
ja
pop
in
inc
add
jne
add
out
in
jns
add
inc
add
cwtl
lock
add
add
aam
out
pop
xor
addb
add
cmp
sub
or
lods
push
iret
out
nop
push
jbe
add
jl
mov
pop
out
mov
cmp
pop
int
call
pop
mov
pop
jmp
cs
sbb
add
ficoms
pushf
ret
add
add
dec
imul
xchg
sbb
xor
push
daa
add
pop
pop
rol
add
xchg
mov
in
mov
add
ljmp
jo
and
movl
fisubrl
or
add
add
jne
cmp
out
xor
add
rcl
add
add
add
xor
pop
mov
xchg
pop
sbb
add
add
adc
popf
shl
or
add
add
mov
aam
add
add
mov
add
push
into
lods
push
inc
add
mov
into
mov
out
insb
jecxz
inc
add
add
fstl
xchg
es
push
movsl
add
push
addb
add
dec
and
add
add
push
push
dec
int
and
sahf
cmpsb
add
add
jae
jno
push
xchg
stos
mov
test
add
add
add
add
add
mov
add
leave
and
cs
sbb
jns
pop
add
stc
fwait
inc
add
paddd
lahf
cmp
xchg
sti
bound
les
scas
mov
lods
sub
add
add
add
je
add
dec
sub
pop
xchg
jns
fdivs
xchg
sub
ret
add
mov
add
add
mov
add
fldt
adc
add
mov
add
push
mov
add
ficoms
add
imul
or
sub
lock
data16
cmpsb
add
notl
or
add
add
add
rorb
cltd
stos
or
je
mov
xor
add
movsb
add
add
stos
add
repz
je
fcmovne
xor
rolb
les
fwait
pop
out
sub
add
icebp
adc
adc
add
jne
in
cmp
mov
lock
sub
sub
dec
sub
mov
add
mov
movsb
add
add
add
xlat
pop
add
add
and
je
add
add
ss
insb
rolb
icebp
jmp
add
cli
incb
add
fisttpll
pop
arpl
xchg
jl
add
ss
movsl
add
add
in
cmp
or
add
test
aas
jge
push
or
add
mov
sub
add
out
faddl
repnz
stc
arpl
stos
mov
roll
or
int
dec
xor
jbe
stos
popl
std
lods
cs
dec
cmp
add
add
pop
xor
add
add
add
add
into
or
add
mov
sub
lahf
xchg
push
sub
loopne
mov
dec
sbb
inc
add
add
jbe
add
inc
add
add
aad
jp
dec
push
data16
mov
add
mov
sub
pop
add
add
add
add
dec
movsb
add
adc
sbb
mov
addb
add
xchg
push
adc
add
xchg
stc
lds
sub
add
clc
aas
sbb
add
add
and
push
jbe
add
add
test
or
add
mov
add
mov
inc
add
movl
fmull
pop
xchg
rclb
cwtl
sub
dec
addl
add
and
add
fwait
dec
jmp
or
add
mov
cmp
addb
out
mov
ljmp
rolb
jecxz
jo
ja
push
xor
mov
add
test
xadd
test
adc
and
cld
cli
test
xchg
jbe
sahf
fwait
mov
mov
lods
push
arpl
fimuls
cmp
push
idivb
xchg
and
mov
in
jno
add
fmull
fstl
rolb
xchg
xor
add
jl
jle
sbb
ja
inc
add
loop
mov
cmc
cmp
addb
fs
sub
sbb
pusha
add
add
rclb
xor
out
cmpsb
add
add
add
add
xor
add
add
gs
call
mov
add
pop
cmp
jb
pop
mov
add
add
data16
fs
add
addb
int
add
jp
ret
jg
push
pop
mov
add
add
out
or
arpl
sub
mov
cmp
or
add
add
add
call
push
add
scas
cld
cmp
add
into
adc
add
inc
add
dec
addb
add
add
add
add
add
add
mov
add
add
add
imul
dec
arpl
or
sti
mov
jmp
push
add
add
movsb
add
fists
movb
xor
add
lret
scas
xor
out
pop
add
and
fsubp
add
inc
add
jnp
mov
add
add
mov
ljmp
mov
roll
dec
fdivrl
add
add
in
jno
mov
sbb
sbb
pop
jo
add
add
cld
mov
add
je
add
add
add
jne
test
add
add
mov
xchg
or
insb
mov
repnz
lds
jg
mov
out
xchg
xor
xor
add
mov
sub
add
int
int
add
and
sub
movl
mov
jo
add
add
mov
sub
jno
int
js
rcrl
imul
movl
outsl
push
cld
lock
sti
incb
and
dec
push
cmpsl
add
movsb
add
mov
addl
push
repz
add
ljmp
or
in
add
add
imul
inc
add
and
xlat
pop
mov
xchg
mov
das
cli
ret
add
jns
add
jo
popa
add
out
xor
add
add
add
ds
add
jo,pn
add
xchg
repz
scas
das
mov
int
dec
or
notl
aam
leave
stos
pop
mov
xor
push
bound
dec
add
addl
clts
add
imul
daa
add
jb
aas
xchg
roll
add
dec
addl
add
push
outsb
xlat
roll
dec
sub
jp
add
pusha
add
push
pusha
add
dec
jmp
add
fnsave
fstl
ss
add
add
xchg
or
add
and
mov
cwtl
jbe
mov
sub
movsl
add
add
add
imul
dec
sub
sub
pop
or
in
aas
pop
bound
xchg
xchg
sbb
mov
scas
out
sub
cmp
inc
add
add
lahf
or
lock
add
add
ljmp
fwait
movsb
add
add
ja
or
dec
push
loopne
mov
pop
stos
and
push
dec
fisubrl
pop
mov
sbb
add
adc
in
sub
xor
inc
add
push
push
push
push
dec
jno
roll
add
mov
add
mov
imul
add
add
movsb
add
add
xchg
enter
rorb
xor
add
mov
movl
mov
out
xchg
add
add
fidivs
jne
add
sbb
jg
add
icebp
rcr
jmp
pusha
add
mov
mov
sbb
push
popa
add
xor
mov
xor
pop
add
add
add
jns
xor
ljmp
outsb
outsb
mov
add
movl
cld
mov
test
mov
mov
hlt
addr16
aad
aam
outsb
cmpsb
add
fisubrl
out
or
add
dec
inc
add
push
inc
add
sbb
loopne
pop
lret
push
lock
sbb
sub
ja
add
add
xor
adc
inc
add
or
addb
add
cmpsl
add
add
mov
add
add
push
jecxz
lock
jl
pop
add
mov
rep
add
nop
dec
mov
and
push
add
add
add
jle
add
add
les
xor
add
inc
add
add
inc
add
add
inc
add
pop
insl
pop
ss
add
cld
fsubs
add
pop
repz
add
xchg
add
cmp
add
dec
bound
mov
adc
sarb
bnd
add
add
jg
cmp
add
sub
test
test
add
ljmp
sub
and
test
mov
sub
dec
insl
fbstp
int3
lods
and
mov
add
scas
and
xchg
lock
add
in
fsubrl
addl
les
dec
aas
add
add
mov
lret
ret
push
mov
mov
push
xor
cli
mov
imul
aad
add
add
lock
scas
add
add
adc
mov
xor
mov
outsl
xor
xor
adc
jns
in
ja
jns
nop
fsubrl
jno
mov
push
pushf
mov
add
arpl
dec
iret
jnp
add
add
jbe
stos
mov
out
decl
mov
clc
pop
xor
add
pslld
sbb
add
loope
fldcw
testb
inc
add
and
xchg
push
add
fcomps
adc
add
filds
add
das
jg
add
sub
leave
mov
mov
add
aaa
dec
push
jnp
enter
aam
imul
mov
mov
add
adc
add
add
cmp
jle
xchg
in
cmpsl
add
mov
xor
jbe
xor
xchg
cli
ret
das
roll
bound
stos
movl
daa
add
pop
bound
adc
dec
lods
les
outsl
pop
sub
into
roll
add
ljmp
jo
push
mov
cli
inc
add
jle
sahf
test
movsb
add
add
mov
out
push
adc
add
add
mov
iret
shll
sbb
push
adc
aaa
adc
mov
mov
lods
test
mov
add
jg
mov
push
movsl
add
cmp
mov
inc
add
add
nop
jb
mov
sahf
shl
add
add
add
bound
cmp
cmpsl
add
cmp
add
cmp
add
loop
mov
add
sarl
scas
jle
and
add
les
test
arpl
aad
inc
add
lret
out
pop
mov
pushf
xor
roll
cmc
roll
movsb
add
mov
add
sub
add
sbb
push
xor
addb
add
dec
xor
pusha
add
dec
ficompl
add
nop
inc
add
push
push
cmp
sbb
arpl
sbb
sti
pop
dec
cmp
pop
push
cwtl
and
test
pushf
mov
add
dec
mov
out
std
js
add
out
adc
out
sbb
add
add
dec
fildll
mov
mov
dec
sbb
jno
mov
sub
jmp
loopne
cmovae
fnsave
add
xchg
adc
mov
sub
lods
ss
or
pop
das
pop
mov
add
add
jbe
add
sub
add
inc
add
das
cmp
lahf
adc
add
inc
add
mov
lahf
adc
mov
cmp
movsb
add
iret
pop
inc
add
mov
pop
add
add
out
cmp
and
sub
xchg
jmp
fstpt
inc
add
hlt
add
add
push
xlat
fistpll
ret
out
test
xchg
enter
xor
jnp
add
pop
jg
into
fcmovnbe
int
add
add
cmc
ja
add
jle
decl
mov
jp
pop
dec
enter
ja
sub
test
clc
xor
push
je
add
add
add
test
add
mov
or
or
repnz
add
lods
xor
add
loope
test
or
add
cmp
inc
add
aaa
inc
add
jae
hlt
add
add
add
add
push
xor
jl
iret
mov
lret
addb
push
mov
add
xor
add
xchg
mov
addr16
add
adc
out
fstpt
push
xchg
xor
adc
js
fdiv
xchg
add
insb
pop
or
sub
jmp
and
pop
xchg
test
mov
and
add
add
or
fs
add
xchg
xchg
fstp
xor
fstpt
loop
repnz
enter
in
rolb
sbb
add
repnz
cmp
dec
adc
popf
or
fimuls
xor
pop
add
add
pop
jo
add
ja,pn
add
push
dec
dec
lahf
cmpsb
add
rolb
add
add
add
jo
add
xchg
pop
lds
shl
call
aaa
or
movl
add
jne
pusha
add
lahf
clc
mulb
cmc
mov
repnz
into
cmp
pop
mov
inc
add
xor
out
add
add
ret
add
cmpsb
add
push
add
add
scas
pop
add
add
repz
jbe
iret
jl
add
fsub
add
xor
dec
add
insb
insb
dec
xchg
pop
hlt
sub
ljmp
aad
adc
mov
pop
pushf
push
mov
dec
and
cld
roll
or
cmc
fcompp
pop
push
mull
xchg
mov
jnp
sbb
push
lcall
mov
cwtl
adc
cmp
in
lods
add
and
add
add
add
push
add
clc
mov
adc
mov
loop
clc
addl
add
inc
add
loop
mov
ljmp
add
add
add
mov
and
push
pop
cld
call
sarb
inc
add
or
arpl
cltd
data16
icebp
dec
test
jp
mov
lods
inc
add
gs
rcl
push
pop
jmp
aam
sub
pop
jecxz
arpl
imul
addb
mov
add
xchg
addps
sub
add
sbb
addb
jno
add
dec
scas
cwtl
and
mull
add
lock
add
mov
sbb
jbe
rolb
add
add
sub
jecxz
push
rolb
add
stos
stos
pop
xchg
push
xchg
mov
push
cmp
xor
add
loope
cmp
push
int
add
push
lock
inc
add
mov
mov
cmpsb
add
repnz
push
pop
dec
iret
jo
sub
add
dec
fldcw
add
leave
lahf
fcoms
arpl
mov
out
xchg
push
mov
add
fwait
bound
jmp
fistpl
push
cltd
call
ret
mov
popf
fisubl
add
stos
add
gs
ljmp
int3
jb
or
sbb
stos
adc
adc
loopne
fninit
add
sub
mov
in
push
das
bswap
push
add
adc
and
sbb
lret
add
scas
arpl
inc
add
add
into
pop
push
mov
push
add
push
cltd
mov
jnp
add
add
add
scas
dec
int
es
sbb
and
inc
add
mov
pop
adc
test
lea
dec
fsubr
movl
add
rcrl
jae
add
fildl
add
xchg
mov
call
add
push
sahf
fwait
loop
loope
and
add
into
pop
addl
add
xor
cmp
add
addl
notb
jp
popa
add
add
bound
jmp
sbb
add
and
fbstp
or
test
jnp
and
insl
mov
add
or
dec
loop
mov
les
into
out
sub
mov
ret
add
add
or
push
lret
das
pushf
mov
inc
add
add
jg
add
mov
add
stc
jl
nop
out
js
stos
movl
cmp
cmp
xor
fcomi
icebp
adc
add
ljmp
add
pop
stos
push
daa
add
mov
mov
mov
int
add
mov
add
xchg
add
add
add
out
arpl
addb
cmp
push
mov
add
or
mov
in
inc
add
das
cltd
add
add
jno
lcall
fwait
aas
add
add
jns
mov
sahf
mov
add
dec
call
je
iret
imul
add
repz
add
pushf
in
xlat
rorl
add
std
dec
jl
mov
mov
pop
out
inc
add
add
add
fldenv
add
iret
scas
pop
fdivrl
push
je
stos
and
cmp
aad
add
add
aas
inc
add
jo
xchg
stos
mov
add
pop
jmp
mov
cmp
jo
push
xor
jae
cltd
test
adc
daa
add
sub
or
mov
fstpt
mov
sub
and
mov
call
rorl
fstpt
add
inc
add
mov
loopne
pop
es
xor
mov
add
adc
ret
lods
pop
mov
jmp
loop
dec
sbb
add
test
add
fwait
ljmp
add
lret
insl
jb
std
test
ja
add
sub
shrb
std
or
add
inc
add
test
mov
jmp
das
ret
add
jno
movsl
add
push
jmp
leave
cmp
pop
loop
scas
mov
inc
add
inc
add
add
clc
mov
xchg
fcmovu
rorl
sti
jl
add
xchg
clc
gs
pavgb
dec
add
add
pusha
add
add
cmp
add
test
add
add
pop
and
dec
mov
add
mov
push
mov
add
outsb
lods
sbb
cwtl
add
add
push
or
add
add
or
jbe
push
jmp
negb
mov
mov
pop
mov
stos
hlt
cmp
add
add
std
fsubs
add
popa
add
add
xchg
mov
fildl
inc
add
add
aas
jbe
add
xor
addl
scas
xchg
adc
add
les
adc
shrb
daa
add
add
inc
add
mov
mov
add
mov
mov
sahf
jb
test
negl
dec
idivb
add
add
iret
add
add
or
pop
ret
xchg
push
mov
push
addl
lods
sbb
add
movsb
add
sub
xor
add
add
add
mov
jmp
das
inc
add
push
push
jecxz
roll
add
jecxz
xchg
in
rolb
add
negb
add
into
xchg
inc
add
add
stc
mov
sti
pop
push
pop
pop
scas
fcmovu
dec
enter
push
or
xchg
in
or
mov
xchg
jae
add
out
addl
rcr
xchg
xsave
or
shll
addb
inc
add
int3
cltd
cmp
in
in
addr16
icebp
xor
insl
inc
add
and
call
mov
sbb
xor
add
and
test
add
push
addb
lcall
add
add
push
mov
popa
add
add
add
enter
sub
add
inc
add
jg
add
add
loope
xchg
mov
mov
add
mov
cltd
push
or
add
sahf
dec
lods
in
cmp
add
enter
sbb
fnstenv
adc
add
repz
jnp
imul
in
push
adc
xor
adc
and
mov
add
hlt
sub
add
mov
dec
es
jl
mov
add
mov
xchg
cltd
out
bound
jge
add
lds
pop
add
add
movb
add
pop
add
add
ss
addl
divb
and
add
aaa
imul
sahf
and
cmpsb
add
xchg
insl
out
ss
xchg
push
loopne
dec
add
push
sbb
notb
inc
add
mov
outsb
pop
adc
stos
add
add
add
sbb
add
xchg
lods
mov
and
mov
mov
push
mov
dec
mov
push
das
arpl
mov
lahf
or
adc
add
add
ret
mov
daa
add
inc
add
fsts
add
mov
xor
add
adc
add
mov
and
jle
cmp
addl
xor
loop
or
fistpl
icebp
xchg
cli
into
ret
add
add
and
addl
add
push
and
arpl
sbb
sub
or
add
add
mov
add
xchg
mov
in
mov
mull
loopne
out
movl
sub
pop
ja
hlt
cld
movl
add
lods
mov
out
in
daa
add
mov
adc
add
add
xchg
movl
add
add
jns
push
xor
sbb
pushf
mov
adc
stos
mov
add
mov
add
add
iret
not
data16
jg
test
pushf
mov
fcomp
outsl
mov
int
or
add
iret
mov
pop
ss
pop
addb
xor
mov
cmp
movsl
add
jb
std
mov
aam
cmpsb
add
add
sub
pop
adc
add
movb
adc
push
insb
jge
cmp
data16
push
dec
xchg
test
pop
add
dec
mov
xor
loopne
adc
insb
test
daa
add
lods
pop
aas
dec
out
lcall
fsubp
add
add
cmc
jge
mov
dec
jne
and
xchg
cmp
inc
mov
in
sub
call
test
jne
push
call
mov
shr
push
push
movl
call
push
call
leave
ret
push
mov
cld
push
push
mov
lods
and
mov
sub
add
mov
add
stos
xor
pop
pop
leave
ret
jmp
jmp
jmp
hlt
aas
add
aas
arpl
xchg
mov
ja
test
mov
xor
dec
push
clc
xor
dec
fucomi
inc
add
mov
arpl
dec
mov
popa
add
add
add
adc
sbb
mov
push
movl
add
xor
add
sbb
fwait
lahf
das
repz
add
dec
sti
adc
adc
test
insb
and
cmpsb
add
int3
dec
sbb
sbb
sbb
jecxz
repz
out
mov
adc
in
inc
add
adc
shr
cs
lret
push
iret
pop
nop
test
movl
push
dec
icebp
scas
xor
add
stos
add
add
in
movsl
add
xchg
cmpsb
add
add
jecxz
cmpsl
add
into
inc
add
lret
sub
das
test
mov
add
sbb
add
xchg
lods
xor
add
add
push
adc
add
add
add
cmp
dec
lahf
in
mov
push
and
mov
add
push
push
ret
add
add
push
test
scas
push
movl
add
add
mov
jae
inc
add
add
add
arpl
jne
push
mov
xchg
ljmp
cmpsl
add
mov
sub
add
jmp
add
add
xor
sbb
movb
flds
add
add
add
js
ss
hlt
jg
add
jb
lret
add
out
inc
add
pop
add
add
js
inc
add
add
test
push
add
push
ret
fwait
addb
add
add
add
push
xor
mov
daa
add
adc
sbb
enter
add
fstps
inc
add
push
pop
jl
add
js
imul
mov
pop
sub
test
adc
ret
add
pusha
add
add
push
pop
xchg
jne
push
in
add
add
add
xchg
mov
lea
push
jecxz
mov
cmp
cmp
add
add
mov
add
scas
pushf
sub
jle
mov
jbe
add
add
hlt
add
add
jp
clc
xor
and
nop
jns
clc
or
mov
jmp
out
push
add
out
fdivs
hlt
inc
add
hlt
pushf
addl
add
insb
stos
fcompl
jae
pop
movsl
add
loopne
sbb
add
xor
add
cli
bound
xor
sub
mov
jge
add
inc
add
add
add
add
sbb
mov
pop
pop
les
into
aam
add
add
dec
call
pop
jno
add
add
dec
mov
push
mov
add
jae
cmp
xchg
outsb
dec
cltd
bound
test
leave
int
push
ret
add
add
and
adc
add
add
add
or
push
ret
add
add
imul
das
lds
bound
addb
add
push
or
mul
add
inc
add
add
or
add
add
leave
test
xchg
faddl
jmp
add
dec
push
movsb
add
add
aam
repnz
pop
add
inc
add
negl
in
movl
add
add
add
add
lcall
addl
add
into
xchg
jmp
add
jnp
add
lock
add
add
add
std
cmp
roll
inc
add
aam
add
xchg
dec
lahf
std
decl
add
add
add
mov
hlt
pop
hlt
outsl
call
and
cmp
pop
int
add
outsb
pop
addr16
xchg
jbe
testl
xor
pop
les
xlat
adc
jecxz
xchg
lock
add
mov
loope
jnp
adc
mov
lea
or
cmp
lcall
addb
mov
add
add
ret
add
lahf
inc
add
lock
lret
xchg
je
movb
or
test
cld
inc
add
add
test
call
mov
les
cld
sub
add
add
xchg
into
stc
mov
add
insb
faddl
call
add
stos
adc
add
add
sub
add
and
jno
sbb
add
ficoml
add
add
add
out
inc
add
jl
loope
repnz
fidivl
mov
in
mov
add
popf
daa
aaa
push
daa
push
jae
out
mov
out
cmp
adc
int3
addl
imul
dec
xchg
nop
fsubrs
add
add
add
fstpl
jmp
cmc
cwtl
and
jle
add
inc
add
stc
std
dec
into
insl
inc
add
dec
inc
add
addb
dec
not
push
fadd
add
xchg
mov
or
add
add
mov
dec
mov
outsb
jae
dec
push
mov
and
jecxz
xchg
dec
add
xor
fsubl
add
mov
jne
add
negl
add
dec
or
pushf
popf
inc
add
mov
icebp
mov
push
addb
jmp
cmp
stos
test
call
add
add
push
mov
push
add
add
pop
popa
add
cmp
jmp
mov
add
loopne
add
add
xchg
xchg
adc
movb
jle
dec
lret
xchg
push
and
mov
and
ss
lret
lds
add
aaa
pop
stc
add
add
lret
or
jl
add
add
pop
repnz
lods
add
add
mov
cmp
push
ret
add
mov
movl
mov
dec
mov
pop
jmp
add
add
in
movb
xor
add
add
add
add
and
xor
add
lea
inc
add
or
add
cmpsl
add
inc
add
add
add
dec
leave
inc
add
push
popl
add
sub
ss
and
repz
add
int
rcll
sti
adc
fsubs
add
push
cmp
add
adc
ret
push
lahf
jns
add
jg
add
add
cmp
addl
call
jl
add
out
add
dec
ja
xchg
sbb
imul
add
add
add
add
add
adc
leave
inc
add
add
add
enter
lods
jbe
dec
les
fisubl
add
and
enter
mov
popf
mov
movsl
add
outsb
add
add
movsb
add
das
outsb
pop
mov
pop
mov
add
inc
add
fmuls
inc
add
dec
inc
add
dec
adc
mov
lahf
aad
pop
lret
xlat
jmp
push
into
ja
add
in
push
enter
add
pop
adc
mov
sub
cmp
cmpsl
add
push
test
adc
leave
stc
mov
adc
repz
add
ds
fmulp
pop
pop
add
lcall
pop
cmpsb
add
jg
push
test
xor
inc
add
sub
movl
jmp
add
int
push
dec
add
add
add
add
push
jp
out
fdivs
outsb
sbb
or
test
mov
cltd
movsb
add
inc
add
xchg
aas
pushf
stos
add
push
mov
mov
mov
mov
jecxz
jp
add
movsl
add
add
hlt
mov
pop
scas
mov
add
hlt
inc
add
add
mov
or
or
cli
jbe
daa
add
ret
add
cmp
dec
mov
or
loope
negl
cmp
leave
gs
lret
nop
lock
adc
jb,pn
stos
and
imull
add
insl
mulb
add
or
addb
sahf
nop
pop
add
add
or
add
push
popa
push
ret
add
icebp
sbb
rorb
stc
loop
pop
or
add
add
push
add
mov
jmp
out
add
add
hlt
or
adc
add
sbb
into
and
xor
add
mov
movl
sub
jmp
mov
xchg
add
xor
pop
and
aas
movl
inc
add
jb
add
addl
jmp
cmpsl
fwait
inc
add
nop
xchg
add
lret
mov
add
mov
dec
addb
dec
insl
test
mov
fsub
add
cs
fcmovnu
pop
push
add
pop
inc
add
sub
in
cmpsl
add
roll
fdivrs
add
sub
add
add
sub
negb
pop
sahf
into
lods
pop
xor
aam
add
add
nop
or
adc
loop
add
add
add
xchg
rcrb
mov
add
add
pop
rcrl
daa
add
jl
decl
add
add
add
add
push
lret
add
add
popf
push
xor
jl
push
push
test
add
add
movb
pop
fdivs
pop
mov
xchg
jb
add
addb
fmuls
add
add
add
lods
divl
sub
xchg
dec
dec
repnz
icebp
movl
xchg
out
xor
aas
dec
scas
pop
stos
add
add
lock
add
out
lds
push
stos
outsl
std
movsl
add
int3
test
xchg
mov
jl
das
stos
adc
outsb
add
add
js
adc
add
movsb
add
add
jno
push
xor
xlat
mov
mov
nop
inc
add
mov
add
movb
dec
and
xor
out
cmp
stc
test
int3
lds
lea
add
add
movb
les
or
mov
add
add
inc
add
mov
add
roll
mov
sbb
out
cli
push
add
add
dec
pushf
mov
jb
add
add
les
push
std
pusha
add
push
push
movsb
add
stos
addl
push
add
add
ss
mov
mov
out
ja
add
xchg
xchg
xchg
mov
jae
and
movsl
add
fdivs
add
aam
add
push
add
xor
xlat
movsl
add
aaa
adc
push
dec
and
les
jecxz
neg
push
xor
mov
add
cmpsb
add
add
add
test
dec
push
push
sti
jl
icebp
xchg
mov
cs
shlb
add
add
ret
add
cmp
pop
jl
sbb
mov
cmp
pop
add
inc
add
negb
mov
add
out
lods
sarl
adc
adc
and
mov
rolb
add
cs
rcl
jecxz
or
lea
leave
and
dec
xchg
push
bound
jns
sbb
adc
adc
aas
sbb
inc
add
add
adc
add
icebp
or
pusha
add
cld
mov
shl
out
nop
in
inc
add
insl
or
mov
enter
pop
jno
test
add
aas
inc
add
cli
cltd
jge
add
cmp
pusha
add
push
add
mov
cmp
sub
enter
xor
add
add
ds
xchg
sbb
add
sub
les
ret
add
push
xchg
movl
jecxz
fwait
addl
fs
lret
ret
es
cmp
add
dec
std
jnp
add
dec
pop
jnp
mov
add
add
mov
shl
add
mov
sub
push
enter
add
jmp
xor
stc
and
roll
jno
cli
mov
xor
inc
add
add
add
movl
pop
ljmp
enter
cmp
rcrl
jns
add
daa
add
inc
add
scas
mov
push
add
add
add
fwait
data16
add
dec
add
cmp
add
imul
add
pop
cmp
out
mov
ljmp
pop
cmp
pop
mov
pop
xor
add
jmp
mov
add
jo
fisttpl
lods
fs
sub
add
jae
cltd
gs
inc
add
sar
addr16
inc
add
aaa
push
sub
mov
jmp
nop
nop
add
add
pushf
fisttpll
and
xlat
push
jb
add
sbb
add
pop
push
lods
mov
add
scas
sub
data16
add
movaps
pop
add
push
add
add
dec
add
add
repnz
cs
stos
enter
add
dec
and
test
sub
pop
xchg
mov
add
xor
loop
lcall
add
add
dec
jno
add
add
int3
mov
xchg
movl
or
cmpsb
add
add
fisubrs
test
cmpsb
add
jmp
xchg
xor
stc
xor
add
sub
add
sahf
fwait
mov
test
addl
sub
add
add
xchg
xchg
mov
add
in
pop
out
pop
mov
or
xchg
pop
fwait
xor
pop
je
cli
in
outsl
imul
xchg
jns
add
mov
loope
and
lods
cld
pop
adc
add
jo
add
add
fildl
in
daa
add
sbb
add
loop
pop
push
push
popf
jnp
or
add
lret
add
call
push
add
add
add
xchg
ljmp
es
sub
add
int3
cltd
xchg
fisttpll
out
push
ret
add
lods
or
sbb
mov
add
pusha
add
xor
add
pusha
add
xchg
sbb
add
imul
cmp
dec
pop
xor
dec
lcall
add
add
add
add
xlat
and
imul
add
mov
xchg
dec
xchg
rorl
pop
mov
cli
addl
add
mov
jne
add
je
mov
out
ds
sub
add
outsb
fsubrs
mov
cmpsl
add
adc
jle
sub
sbb
mov
mov
cmpsb
add
add
je
adc
xchg
pop
test
pusha
add
addl
jecxz
sbb
add
add
movsl
add
movl
and
mov
stos
add
add
mov
jmp
add
and
mov
shr
add
add
add
add
add
bound
pop
out
out
dec
pop
movl
adc
sbb
add
sub
add
add
hlt
mov
mov
jmp
add
add
dec
jmp
add
add
pop
jne
add
push
xor
add
frstor
pop
mov
add
dec
daa
add
push
xor
mov
add
imul
lock
jmp
add
inc
add
jl
add
js
out
push
ret
add
add
add
sbb
fwait
inc
add
push
lds
dec
mov
push
add
add
add
add
enter
mul
add
popf
cs
add
jmp
add
pop
inc
add
add
addb
add
xchg
out
or
jge
mov
fldcw
fdivs
xchg
aad
xor
mov
and
dec
addl
add
add
sub
adc
mov
add
in
mov
mul
add
push
pop
inc
add
adc
xor
mov
ss
call
bound
pop
loopne
clc
sub
mov
mov
mov
add
add
mov
add
xor
add
mov
inc
add
addl
add
pop
pop
add
add
add
add
mov
xchg
in
xchg
ret
jle
xchg
fwait
data16
or
add
outsl
xor
add
lahf
pop
roll
std
aam
add
lret
out
cwtl
in
or
aas
jnp
jb
add
add
sbb
and
push
test
dec
adc
xor
add
incl
push
jmp
add
sub
add
popf
mov
popa
add
dec
xchg
dec
pushf
enter
and
xchg
mov
lods
cld
cmpsb
add
push
iret
in
mov
push
add
add
adc
push
test
sub
add
add
pop
add
push
testb
adc
hlt
or
fisttpl
lock
addb
jle
add
mov
add
inc
add
mov
mov
outsl
dec
inc
add
outsb
xchg
outsl
dec
sub
imul
icebp
notl
insb
addb
push
les
sbb
cmpsb
add
ja,pn
adc
add
std
sub
addl
pop
xor
lret
jp
add
add
cli
hlt
ret
add
insb
sahf
into
push
and
cmpsb
add
scas
dec
rorl
faddl
stc
bound
aam
jne
hlt
roll
mov
add
dec
push
add
push
hlt
incl
push
addl
jnp
add
loop
in
stos
decl
inc
add
add
add
dec
lds
lcall
add
push
lret
sbb
push
add
add
cwtl
scas
xchg
mov
mov
jmp
push
add
repz
addb
rorb
add
dec
nop
cld
imul
jo
pop
push
ja
lock
hlt
in
push
outsl
insb
popf
or
add
ret
lods
pop
jbe
mov
repz
inc
add
add
imul
add
aad
add
add
sub
add
add
mov
add
lcall
out
dec
mov
add
sbb
ds
mov
add
in
loop
adc
mov
sub
jp
add
add
out
test
add
add
addl
add
mov
fiadds
or
and
movsl
add
mov
jge
add
add
add
aam
add
imul
push
ret
add
mov
add
add
ret
xor
jo
push
jle
outsb
mov
aad
add
mov
add
push
add
add
add
pop
out
cwtl
fimull
jecxz
movsl
add
lds
inc
add
ret
mov
lds
push
mov
loop
inc
add
inc
add
push
mov
mov
fs
pop
pop
lods
cmp
adc
add
into
jecxz
imul
add
movl
push
add
out
cmpsl
add
cmc
pop
cltd
push
cltd
mov
fiaddl
mov
pop
jmp
lret
add
imul
test
jge
add
pop
push
add
lock
add
loope
pop
inc
add
add
inc
add
add
add
cmp
ja
mov
je
add
test
incl
add
jne
test
xor
sti
jno
push
mov
inc
add
add
add
add
xchg
add
add
daa
add
add
add
aaa
arpl
fndisi(8087
add
je
insl
divl
mov
lret
add
testl
add
fisubl
add
add
ss
sahf
or
int
rcl
pop
push
add
jp
test
inc
add
mov
add
mov
xor
pop
ja
pop
fdivrs
mov
cld
je
mov
test
addb
inc
add
mov
test
repz
je
pop
mov
addr16
add
add
loopne
jae
sar
push
mov
push
push
pusha
add
sub
addl
adc
add
call
jmp
out
push
add
add
xchg
inc
add
add
jnp
add
dec
xor
cmc
mov
mov
jbe
pushf
js
cmpsb
add
ds
xchg
mov
sbb
ja
sub
mov
jae
add
mov
add
add
pop
jae
add
mov
pop
lock
repz
or
lds
repz
push
jl
add
rcrb
add
lcall
bound
add
add
add
add
add
adc
add
pop
mov
push
in
cmc
ds
mov
xor
mov
test
bound
dec
fwait
insb
xchg
fisubs
add
add
push
cmp
add
push
add
or
add
movsb
add
mov
lds
sub
out
mov
movl
fisubrs
push
mov
loop
jg
adc
and
or
xor
arpl
daa
add
inc
add
repz
dec
cmp
add
jmp
notl
loopne
xor
mov
fadd
add
addb
test
in
and
or
add
jg
add
movsl
add
add
add
add
xchg
pusha
add
movb
lds
pop
push
loopne
insl
out
xor
lock
jmp
add
add
data16
movl
jmp
jl
add
add
push
jb
jne
push
jl
add
push
add
leave
and
dec
mov
rolb
add
add
add
and
rolb
add
add
jge
sbb
add
js
pop
xchg
movb
and
mov
add
add
in
ja
add
add
push
pop
sahf
dec
push
aam
add
add
add
add
add
add
add
call
ret
add
mov
xlat
jne
add
imul
add
xlat
mov
add
add
adc
jbe
mov
jbe
adc
add
in
incl
dec
add
add
add
cmp
xor
add
pop
add
out
mov
and
cmp
pop
push
lods
jo
add
daa
add
bound
leave
add
jmp
pop
add
add
cld
adc
sub
add
je
add
movsb
add
addb
xchg
jbe
cmp
stos
out
das
sbb
mov
jno
jp
add
or
add
xor
jnp
sub
shr
mov
bound
add
add
and
out
push
mov
add
adc
lret
jle
add
inc
add
add
add
cmp
loop
lock
sti
pop
xchg
out
mov
lods
dec
push
jb
add
mov
inc
add
inc
add
or
dec
push
add
add
std
jo
add
xchg
inc
add
cli
and
scas
push
int3
and
je
jecxz
stos
push
test
xchg
enter
jl
out
stos
mov
add
out
add
add
xor
lea
mov
scas
jno
and
ja
dec
mov
add
test
ja
xchg
add
add
inc
lock
ret
pop
add
fld
add
loop
insb
push
add
pop
imul
add
add
add
mov
fdiv
std
pushf
mov
je
rorl
rorb
add
dec
das
and
popf
lcall
movl
add
stos
inc
add
add
push
mov
add
in
cmp
push
or
jne
jmp
lds
and
jp
pop
dec
fbstp
mov
sbb
lock
add
add
add
sub
pop
fstl
adc
add
aad
sahf
mov
add
mov
push
sub
bound
push
insl
decb
pop
repnz
add
mov
add
loope
sti
mov
dec
cmp
cmpsl
add
push
pop
and
add
clc
mov
ljmp
popa
insb
push
push
ret
push
outsl
bound
sbb
add
xor
xor
add
lods
test
push
mov
jg
add
mov
add
add
add
test
add
xchg
and
pusha
add
cmp
shr
jmp
add
add
push
iret
gs
mov
lock
cld
cmpsl
add
mov
roll
bound
jnp
add
popa
add
dec
pop
push
add
out
cwtl
xchg
shlb
test
rorl
add
dec
popf
and
into
dec
lods
call
out
fwait
movsb
add
add
jp
mov
imul
dec
fwait
les
enter
sbb
add
movsl
add
enter
add
add
in
cmp
xchg
test
push
inc
add
add
add
mov
stos
test
mov
jge
fsubrp
insl
inc
add
add
jmp
jb
dec
jp
addl
iret
mov
insb
jmp
mov
mov
inc
add
add
lret
shrb
fwait
lock
add
pop
lods
add
inc
add
int3
sub
data16
addl
add
cs
fcoml
les
iret
inc
add
int
add
add
add
dec
jg
fisttpl
add
arpl
jl
add
dec
xor
dec
mov
mov
fs
xchg
std
push
add
add
pop
outsl
jbe
mov
add
jp
sbb
push
icebp
pop
movsl
add
dec
or
push
movb
inc
add
aaa
xor
sub
lahf
adc
add
add
dec
add
int3
cs
movl
add
pop
push
jb
jmp
add
add
fcoml
adc
ja
mov
fs
or
add
dec
xchg
addl
mov
add
xor
add
scas
lret
insl
pop
add
add
mov
cld
rolb
mov
rorl
xchg
pop
pop
push
push
sarl
popa
add
dec
xor
add
add
add
jmp
push
add
add
push
test
or
test
adc
jae
and
sbb
daa
add
inc
add
outsb
sbb
iret
ret
xchg
add
and
sti
adc
aas
xor
js
jnp
ja
mov
inc
add
add
add
arpl
les
inc
add
movb
jnp
nop
mov
pop
add
xor
sahf
mov
pop
push
push
add
add
add
and
add
pop
movb
jne
add
add
add
inc
add
add
add
add
faddp
add
loopne
mov
add
add
mov
sti
add
add
xchg
lahf
push
data16
add
clc
dec
ret
add
cs
out
inc
add
sti
jne
adc
enter
sbb
mov
dec
sub
mov
jae
add
push
adc
aaa
fwait
pop
out
ret
in
mov
add
add
jo
add
add
loope
lcall
add
sbb
popa
add
daa
add
cmp
lret
xchg
int3
aaa
in
pushf
enter
call
sti
fnstsw
mov
jmp
add
ljmp
add
add
repz
add
add
add
xchg
mov
dec
icebp
add
add
add
adc
addl
add
rolb
add
jbe
ja
add
sti
leave
aad
pop
roll
add
fdivs
imul
or
jne
inc
add
and
mov
fcomps
push
xchg
lea
push
push
ret
add
add
add
add
dec
rcll
inc
add
sbb
pop
inc
add
adc
lret
lock
repz
imul
pop
popa
add
add
mov
inc
add
add
add
nop
dec
add
ja
ja
add
loopne
adc
dec
dec
push
mov
dec
xchg
xchg
dec
sahf
loope
ret
add
insb
test
mov
lock
jno
popa
add
inc
add
imul
in
jecxz
xchg
inc
add
add
aas
push
mov
xchg
push
scas
dec
push
push
mov
adc
repz
insl
test
cmp
add
mov
add
or
lods
sub
add
fsubrs
xor
adc
mov
insl
xchg
js
adc
add
sahf
jge
inc
add
xor
add
add
add
mov
roll
mov
in
add
mov
in
jg
sbb
push
or
aad
adc
outsl
sbb
add
add
sbb
jae
jnp
inc
add
and
addl
push
out
in
aaa
and
test
push
ret
nop
int
push
mov
loop
mov
sbb
movb
cmpsl
add
mov
sub
dec
push
cwtl
xchg
and
add
or
jno
sub
and
xchg
mov
pop
mov
fldenv
lcall
dec
das
xor
cwtl
jp
stos
pop
add
out
push
cs
mov
sbb
add
nop
add
pop
push
movl
lret
ficoml
out
and
adc
cmp
and
sub
and
pop
clc
cmp
mov
mov
jmp
cltd
pop
add
xchg
sbb
addl
pinsrw
add
add
add
neg
sub
sbb
add
xor
add
add
and
add
aaa
dec
mov
pop
fisttpl
mov
scas
push
ja
and
jmp
add
testl
add
addb
xchg
push
out
fdivs
repz
outsb
lcall
ss
adc
push
jnp
test
add
iret
aad
jl
add
push
jmp
nop
add
mov
add
scas
and
mov
icebp
jns
xchg
call
rcrb
jge
adc
add
mov
dec
mov
add
push
add
lcall
push
mov
icebp
or
mov
and
xlat
pop
adc
add
dec
pop
xchg
mov
cld
nop
pop
test
addb
jp
add
inc
add
and
shrl
fwait
mov
sti
push
mov
aad
ljmp
jae
push
repnz
cmc
in
adc
cs
cmp
or
cli
pusha
add
pop
lea
jno
add
testl
add
add
and
fcmovnb
add
insl
sbb
add
add
ret
add
sbb
push
mov
add
cmp
fld
add
dec
add
pop
inc
add
add
add
add
push
add
add
cld
decl
test
mov
add
jo
add
pop
call
mov
data16
add
add
imul
xor
mov
sub
mov
push
and
jno
cli
jnp
iret
dec
add
testb
fstpl
adc
add
into
sub
add
pop
inc
add
xlat
jg
add
add
pop
adc
jb
js
test
add
mov
enter
ret
testl
icebp
lods
lea
pop
push
imul
jae
add
xchg
add
mull
mov
leave
mov
inc
add
cmpsl
add
inc
add
fistpll
sub
mov
add
add
rolb
xchg
sub
add
xor
ljmp
add
add
push
ret
add
nop
add
test
mov
add
loopne
or
mov
pop
add
gs
jmp
faddl
add
mov
add
int
scas
insb
xor
jno
add
mov
mov
inc
add
adc
outsl
rolb
imul
jmp
push
add
ljmp
add
insb
jg
movsb
add
add
mov
les
jg
dec
jl
add
lock
sbb
cmpsb
jae
add
int
add
mov
jmp
out
shlb
add
add
add
mov
xchg
cmp
add
adc
int
hlt
dec
xor
sub
add
addb
and
rolb
add
jns
aad
push
std
stos
adc
adc
jmp
inc
add
add
add
dec
cmpsb
add
add
add
jge
pop
lret
pop
pop
push
jmp
push
add
imul
insl
cli
jne
add
mov
adc
add
int
add
sub
mov
mov
add
je
add
ds
add
out
imul
xchg
mov
repnz
mov
adc
roll
pop
mul
add
add
in
mov
mov
movl
push
ret
add
add
xor
add
mov
add
pop
les
leave
je
push
dec
or
add
add
mov
add
cmp
test
add
iret
xchg
adc
jge
pushf
push
mov
dec
adc
rol
add
fistl
xor
jg
lret
fwait
movb
loop
push
xor
add
add
mov
add
in
mov
jo
add
mov
mov
add
scas
in
fisttps
and
mov
add
mov
jae
rcr
xchg
sahf
mov
jnp
or
add
push
add
add
insb
movsl
add
cmc
aas
shld
mov
mov
add
add
insl
xchg
fldenv
add
outsl
out
pop
cli
cmp
add
mov
add
pop
add
add
add
xchg
pop
ret
add
jb
repz
stos
ljmp
add
add
push
xchg
outsl
aaa
movsl
add
or
iret
dec
pop
lods
lret
mov
cmp
lret
add
and
add
out
add
add
mov
push
mov
roll
addb
add
add
jo
das
mov
mov
ret
add
jo
push
addl
les
iret
sub
cltd
mov
daa
add
xor
sbb
sub
add
fs
shl
add
push
sub
ret
pop
int
cmpsb
add
mov
add
add
fwait
jns
imul
push
ret
add
adc
dec
jmp
cmp
add
add
add
nop
repz
stc
xor
add
jmp
add
inc
add
popf
clc
xchg
mov
popf
or
or
add
or
lret
pop
push
sar
add
add
addb
jl
and
xchg
push
lds
dec
roll
in
add
test
xchg
std
shl
pop
add
add
add
bound
mov
pop
dec
mov
add
mov
data16
xor
insl
test
cmp
std
pop
dec
sbb
add
mov
or
pop
or
dec
mov
cmp
mov
movl
lods
dec
pop
add
add
push
inc
add
add
add
add
pop
int3
add
movsl
add
lahf
dec
enter
jge
mov
loopne
xchg
xchg
movsb
add
pop
mov
jne
movsb
add
add
rolb
inc
add
mov
out
adc
std
mov
pop
add
imul
mov
add
cwtl
add
add
pop
xchg
cwtl
and
xor
cld
in
jo
lret
sahf
inc
add
add
roll
add
cmp
mov
add
mov
push
xor
fiadds
add
or
xchg
lock
mov
add
add
rcrl
cltd
and
xor
adc
xor
sbb
pop
rcr
sbb
arpl
mov
dec
enter
add
sub
add
dec
jmp
dec
jnp
or
stc
jle
add
add
lock
lock
xor
add
mov
rolb
outsl
push
leave
fldl2e
cmp
jo
btl
mov
add
mov
or
dec
std
or
add
insl
movb
jecxz
add
add
and
cmc
add
add
out
mov
mov
jmp
add
adc
sub
push
movsb
add
add
xchg
jns
gs
jmp
addb
movsb
add
adc
add
sbb
mov
lds
dec
mul
add
add
add
lods
ds
cmp
pop
fs
xchg
ds
add
les
add
cmpsl
add
add
scas
icebp
xchg
pop
add
xor
xchg
jge
add
add
into
sub
dec
loopne
fwait
sub
popa
add
inc
add
mov
jmp
xor
les
sub
add
mov
adc
jge
lahf
push
fxch
cli
leave
cs
jae
add
aas
mov
mov
add
lock
cmpsl
add
ljmp
jmp
add
testl
iret
rorb
in
pop
mov
add
pop
add
add
add
xchg
scas
push
pusha
add
or
add
roll
add
add
add
fisttps
mov
push
jae
in
scas
stos
sbb
add
add
cmp
rcrb
clc
daa
add
inc
add
and
push
mov
in
popa
add
add
cltd
jl
ret
add
add
mov
add
jmp
add
int
add
pusha
add
push
add
add
sahf
mov
sahf
fwait
add
add
add
add
addl
aaa
and
roll
int
jg
xchg
sti
adc
xchg
push
inc
add
adc
add
dec
adc
in
jno
add
sub
mov
cs
dec
xchg
xchg
mov
js
add
add
add
into
rolb
add
mov
call
rcll
aaa
or
pop
ret
add
add
fwait
clc
icebp
loopne
nop
xor
pusha
add
add
add
add
and
pop
incb
jmp
loop
call
negb
add
jg
icebp
fistpl
lcall
add
push
arpl
addl
pop
push
mov
mov
adc
add
pop
add
add
add
sbb
mov
and
and
add
sbb
cmp
add
xchg
mov
and
out
mov
add
pusha
add
dec
dec
roll
push
add
jbe
dec
jl
or
add
jp
add
add
mov
int
xor
mov
add
lock
and
push
sbb
add
cmp
add
add
jmp
push
fsubrl
mov
push
fistps
xchg
jecxz
xchg
shlb
dec
add
add
loop
arpl
repnz
add
add
adc
pushf
mov
add
dec
outsl
arpl
fiaddl
add
int
int
pusha
add
cmp
mov
arpl
xor
mov
add
jl
pop
rorb
push
jae
push
leave
loopne
lock
add
pop
sbb
adc
xor
pop
jb
pop
loope
jae
add
lea
test
add
popl
inc
add
in
arpl
out
mov
stos
add
dec
sbb
inc
add
add
push
jae
add
hlt
and
ret
add
xor
add
jmp
jo
outsl
dec
jne
icebp
pop
dec
cmp
movl
add
add
dec
daa
add
push
test
mov
add
or
add
mov
add
push
add
add
add
cltd
lods
adc
in
add
add
add
lods
aaa
jp
lods
ret
mov
leave
mov
cmp
push
mov
data16
jb
test
xor
stos
push
cli
push
nop
jmp
add
add
sti
movsb
add
mov
addb
add
mov
add
xor
outsb
movsb
add
aas
ret
add
nop
mov
fimuls
xchg
xor
add
pop
and
in
daa
add
dec
mov
jecxz
mov
inc
add
ljmp
push
add
pop
testl
push
add
shr
sub
jl
add
add
fiaddl
fwait
js
gs
fstpt
add
movsl
add
daa
add
add
xor
add
aad
sbb
movsl
add
and
dec
mov
sbb
sbb
xchg
adc
test
add
mov
loopne
testl
mov
out
movl
lret
xchg
dec
jmp
add
add
repz
sbb
cmp
cmp
add
mov
jmp
add
add
add
js
pop
add
add
mov
movb
insl
or
mov
add
add
xor
aad
add
add
inc
add
pop
adc
push
add
mov
add
pop
lret
aad
add
mov
enter
dec
pushf
mov
pop
lods
xor
das
call
movl
xlat
setbe
js
cs
cmpsl
add
fucom
add
daa
add
test
adc
and
mov
daa
add
add
and
stc
and
mov
add
repnz
or
add
pop
mov
push
popa
add
icebp
roll
add
mov
jmp
add
mov
test
pop
lea
daa
add
adc
jg
add
add
data16
add
jo
mov
mov
int
insb
ficoms
push
outsl
addl
adc
xor
add
push
fdivr
fsubl
popf
pop
jne
lods
adc
addb
call
adc
jnp
xchg
scas
adc
dec
push
rclb
pop
jle
add
aam
add
add
add
mov
loopne
incl
add
xor
add
pop
idivb
pop
mov
add
or
jg
add
add
jmp
add
add
mov
test
cld
dec
dec
sub
lret
inc
add
xchg
sysexit
jle
add
mov
cmp
adc
addl
or
add
add
mov
jne
inc
add
xchg
inc
add
push
jmp
pop
cmp
push
add
add
aas
sub
add
dec
mov
mov
addb
jae
add
test
jge
in
ds
mov
int
add
movsl
add
lret
mov
test
add
mov
add
add
cwtl
jmp
add
add
add
add
insb
rcll
addl
dec
lds
inc
add
mov
add
jmp
add
repnz
mov
push
inc
add
bound
ja
sbb
dec
add
inc
add
push
add
add
push
idivl
cmp
test
add
cmp
clc
jl
adc
shl
mov
jae
jle
add
add
add
stos
mov
add
add
js
pop
add
outsl
imul
cmp
pop
xor
mov
roll
mov
add
jns
push
out
inc
add
rolb
outsl
pop
adc
cmp
roll
ss
and
scas
decb
and
loopne
dec
jo
nop
scas
mov
pop
insl
jg
add
add
das
or
dec
jl
push
scas
aas
add
mov
dec
mov
mov
add
pop
adc
cmp
add
or
cli
ds
push
jb
inc
add
pop
bound
getsec
xchg
lods
or
or
add
add
add
dec
call
in
lcall
dec
xchg
mov
xor
inc
add
mov
jmp
mov
add
xor
in
mov
dec
dec
repnz
dec
ja
add
mov
addb
add
cmp
add
lock
add
add
add
add
add
bound
fmulp
out
push
mov
in
xchg
ss
imul
dec
dec
and
adc
in
ds
mov
pop
out
insb
jp
add
xchg
sbb
add
jb,pt
add
add
jb,pn
pop
ja
sub
scas
add
add
addb
ret
add
adc
aam
mov
pop
xchg
sub
push
xchg
in
nop
dec
pop
in
loope
mov
movb
fstpt
inc
add
add
push
inc
add
add
add
idiv
mov
sbb
add
push
add
mov
add
add
sub
add
dec
sbb
fidivl
addr16
loopne
jae
add
jns
and
pusha
add
xchg
lahf
aas
pop
inc
add
data16
xchg
jb
mov
movsb
add
sub
add
add
movsb
add
loope
lods
in
ret
add
mov
jle
add
add
adc
int
arpl
rcrl
imul
xor
xchg
push
fwait
add
add
add
ja
fnstsw
add
or
add
outsb
clc
std
enter
add
js
add
dec
cwtl
dec
inc
add
aaa
loopne
dec
xchg
mov
jne
add
or
cmp
add
pop
or
mov
nop
jmp
jmp
add
push
lret
and
pop
cld
dec
rolb
inc
add
loope
out
pop
aas
fisubrs
add
adc
add
adc
ret
add
add
adc
add
adc
loopne
addb
add
add
add
aad
inc
add
add
add
add
aad
adc
or
add
add
int
push
cmp
push
in
mov
add
movsl
add
rolb
add
scas
jg,pt
add
mov
add
rolb
add
add
add
add
add
lods
pop
mov
add
mov
mov
popa
add
add
addb
jmp
jle
lock
add
mov
jmp
xchg
push
xlat
dec
test
stos
mov
add
add
xchg
jno
mov
and
xchg
mov
xchg
mov
jmp
mov
push
loopne
mov
icebp
les
pop
outsl
and
add
add
icebp
add
add
addb
add
mov
add
pop
imulb
add
push
mov
mov
roll
mov
insb
xchg
inc
add
fcmovb
add
mov
cmp
les
dec
mov
add
inc
add
addl
push
add
jmp
cmp
jbe
add
add
add
aas
xor
add
jmp
xchg
add
popa
add
add
mov
call
stc
sbb
bound
pop
cmp
dec
mov
and
fxam
add
dec
sub
add
sahf
lret
mov
cmc
or
lret
adc
fsubrp
xchg
insl
clc
mov
add
add
add
out
jo
sub
push
cmp
addb
into
and
pop
das
frstor
mov
enter
mov
add
xchg
sub
mov
fs
pop
ljmp
add
loop
push
and
sbb
add
add
add
pop
jb
mov
push
ret
add
nop
nop
push
push
mov
and
imul
sahf
test
movl
add
jecxz
cmpsb
add
les
jmp
out
in
repz
in
mov
clc
and
fdiv
xor
add
add
jl
add
popl
js
repz
xchg
lret
xor
mov
daa
add
jg
add
sbb
add
test
adc
pop
xor
ja
mov
add
add
pusha
add
cwtl
data16
add
pop
aad
add
mov
movsb
add
mov
add
mov
adc
mov
add
pushf
fucomi
mov
jo
bound
jno
add
into
out
jle
cmc
in
mov
add
add
clc
data16
adc
adc
mov
add
insl
movl
daa
add
into
cltd
loopne,pt
mov
sub
roll
add
push
add
add
in
adc
add
dec
mov
add
lcall
adc
add
xlat
and
jo
popl
or
js
add
add
add
lret
jl
mov
or
add
outsb
push
inc
add
mov
testl
inc
add
sub
jo
and
push
enter
shrb
xor
lcall
mov
lret
iret
mov
add
daa
add
outsb
dec
jo
leave
and
sub
out
loopne
cmpsb
add
out
or
xor
push
jmp
add
cld
and
fwait
nop
mov
movsl
add
sub
inc
add
aad
dec
aam
addb
addb
push
xchg
popf
outsb
sbb
jge
cmc
and
add
xchg
pop
mov
add
add
xchg
ss
cmc
addb
add
mov
add
fisubrs
add
adc
add
in
out
mov
jp
xchg
sub
push
add
push
add
mov
add
add
add
add
stos
sbb
add
push
lret
repz
cmp
adc
mov
add
add
ljmp
cmp
pop
aas
xchg
aaa
add
jmp
add
xchg
cmp
mov
push
stc
fcompl
xlat
gs
arpl
shl
add
jmp
jp
sub
add
ljmp
lea
ret
push
add
add
push
les
cmp
ja
xchg
mov
movsl
add
fs
jno
lods
jg
mov
mov
insl
inc
add
cmp
dec
mov
add
xchg
scas
ret
or
cmp
lcall
push
jmp
out
add
add
add
lret
mov
pop
aad
roll
lods
push
pop
jl
cmpsl
add
call
sahf
push
add
add
add
add
add
xor
add
add
add
add
add
jae
mov
icebp
ret
fdivr
pop
loop
outsb
addb
xchg
sub
add
dec
in
xchg
lock
add
xchg
dec
mov
add
iret
pop
add
addl
add
in
push
push
or
add
aam
add
add
movsl
add
push
sbb
add
cld
jmp
add
notl
add
pop
pop
out
jb
aas
mov
cmpsl
add
out
fwait
lods
test
insb
test
test
sub
dec
jmp
mov
fwait
addb
insl
leave
push
lds
and
push
xchg
fcoms
icebp
sub
inc
add
rcl
or
pop
xchg
adc
out
mov
add
add
adc
dec
pop
sub
in
popa
add
add
int3
addl
arpl
lods
push
add
add
push
add
add
add
add
and
leave
mov
xor
sbb
rcll
pop
clc
mov
jns
pop
jmp
add
cmp
push
add
add
xor
add
add
outsl
push
add
loopne
or
jge
test
imul
rcr
mov
add
lods
rclb
add
inc
add
add
scas
int3
pop
lret
add
jg
daa
add
fidivrs
add
add
jae
dec
push
cwtl
cmp
rol
add
push
daa
add
into
and
fisttpl
pop
movsl
add
inc
add
xchg
addb
pushf
movl
add
xor
cmpsl
add
jp
or
and
enter
push
and
add
push
add
mov
cld
mov
sbb
addl
in
fisttps
stos
push
stc
and
roll
cmpsb
add
iret
pop
push
push
loopne
xchg
data16
add
shlb
clc
inc
add
aaa
sahf
data16
lret
loope
add
add
hlt
ja
inc
add
jmp
and
sub
pusha
add
add
and
push
test
sbb
stc
fs
loopne
pop
insb
adc
add
imul
sub
add
in
mov
hlt
xor
jnp
loop
imul
out
inc
add
call
iret
repz
sub
add
loopne
movsl
mov
xchg
push
mov
mov
test
or
jmp
add
add
add
sbb
mov
add
into
add
add
ss
in
popa
add
mov
cmp
or
add
movsl
add
mov
std
xor
dec
add
add
das
mov
add
add
and
or
add
add
stos
sbb
xor
incl
mov
add
ljmp
roll
mov
mov
add
add
inc
add
cmp
ficomps
mov
mov
js
add
jbe
jmp
xchg
pop
add
pop
leave
push
add
add
mov
xor
adc
add
insb
dec
int
add
rcll
lret
add
pushf
or
add
pop
mov
or
inc
add
pop
add
push
inc
jmp
add
dec
fcom
inc
add
add
xlat
loop
inc
add
mov
jecxz
fsubrl
imul
int
add
push
pop
icebp
ja
add
iret
ss
add
repz
pop
imul
push
popf
dec
cmp
bound
sub
test
stos
add
xlat
or
add
jle
xor
out
mov
add
add
popf
xor
adc
les
push
sar
dec
xchg
push
nop
add
mov
add
cmp
push
in
adc
and
xchg
push
loope
cli
sbb
outsb
sbb
add
push
xchg
xchg
addl
aas
jb
add
test
add
push
and
xchg
pop
xor
dec
cmp
add
add
xor
in
jno
add
add
mov
sub
in
pop
popf
daa
add
xchg
pop
call
xor
add
loope
in
rclb
add
push
jle
adc
add
add
int
addb
js
add
add
stc
pop
add
cmpsl
add
add
iret
clc
hlt
daa
add
xor
jmp
push
add
jns
ret
cltd
inc
add
or
add
push
add
insb
mov
xor
sbb
add
add
add
add
data16
pusha
add
add
ror
sub
enter
mov
hlt
mov
add
iret
cmpsl
add
mov
add
call
lods
push
stos
test
dec
xor
movl
jecxz
addl
fwait
xchg
adc
inc
add
mov
add
add
lods
jbe
pop
das
jle
pop
sbb
dec
mov
sbb
sahf
jae
rolb
int3
mov
js
pcmpgtd
mov
xchg
hlt
insl
pushf
and
add
xor
out
xchg
dec
mov
add
add
add
add
fwait
addb
in
cmpsl
add
jns
les
add
jmp
insl
xchg
loope
clc
add
nop
data16
push
push
ret
notl
add
mov
add
add
add
xor
mov
rcrb
add
cmp
mov
adc
xchg
sbb
inc
add
add
jo
mov
rolb
push
inc
add
xor
push
cwtl
inc
add
push
cmp
stos
add
add
test
adc
cmpsb
xchg
add
add
xchg
add
jle
mov
mov
sub
add
sbb
add
and
dec
or
ret
add
add
in
icebp
mov
add
or
add
xchg
fs
add
push
idiv
incl
mov
ljmp
add
or
fld1
sbb
inc
add
nop
lods
pop
or
fldt
push
cmpsb
add
add
jle
sbb
add
push
add
out
addl
test
add
sarb
roll
xchg
mov
add
add
cmp
push
pushf
adc
lcall
add
add
xchg
popf
outsb
std
in
mov
pusha
add
add
adc
mov
jns
add
cmpsl
add
sub
add
dec
mov
add
repnz
cmc
out
insb
sub
adc
roll
movsl
add
cli
xor
add
cmp
push
push
xchg
movl
adc
sbb
adc
push
or
movl
pop
xlat
clc
shrl
fdecstp
mov
pop
add
int3
je
fucomi
mov
add
add
rolb
push
jmp
xchg
int
outsl
lcall
push
jbe
add
and
int
call
in
add
daa
add
jae
test
jp
mov
hlt
inc
add
add
add
roll
lock
add
inc
add
jae
addl
inc
add
xlat
jno
ljmp
lret
sbb
divl
test
dec
mov
jg
mov
sub
add
add
imul
pushf
sub
add
xlat
clc
movsl
add
add
mov
add
pop
mov
and
int
mov
add
out
call
add
sbb
repnz
les
loopne
inc
add
stos
addl
add
cmp
stos
cwtl
fcmove
mov
fdivrp
pop
inc
add
nop
addb
xlat
jb
add
sub
add
push
push
mov
xchg
addb
jmp
and
mov
push
push
inc
add
insl
sub
aam
xor
cmpsb
add
mov
in
call
imul
add
inc
add
inc
add
sub
mov
adc
inc
add
sub
mov
add
xor
inc
add
out
add
add
fwait
rol
add
push
dec
ljmp
in
lods
add
add
push
add
mov
mov
add
mov
mov
add
loope
cmp
xchg
pop
ret
add
enter
sbb
jmp
adc
add
mov
xchg
sbb
cld
aad
movb
xor
stos
addb
adc
add
cmc
mov
mov
pop
popa
add
add
cmp
shl
add
add
dec
xor
icebp
jns
outsb
xor
add
fidivrl
jbe
in
fcompl
add
mov
sbb
call
mov
add
and
sub
add
sbb
cltd
call
add
sub
add
lahf
testb
movl
add
jno
lods
aad
cli
jle
add
push
add
xchg
add
add
add
sbb
mov
jp
dec
hlt
imul
add
mov
add
jmp
out
xor
mov
jno
addr16
add
movsb
add
add
xor
sub
add
roll
add
add
test
stos
push
mov
xor
cmp
push
ret
add
add
sti
testb
fmull
movsb
add
sub
push
mov
lcall
add
rolb
aam
add
add
sbb
data16
test
inc
add
pusha
add
add
out
lock
lcall
sub
adc
repz
add
mov
add
add
xor
cmp
xchg
jg
add
push
icebp
das
int
pop
jnp
cmp
mov
cwtl
fmuls
in
sbb
xor
outsl
xor
add
pop
movsb
add
mov
sub
xchg
sbb
or
add
or
pop
cmp
add
add
mov
into
pushf
push
push
add
push
ret
ret
add
addb
jbe
add
add
insb
cmpsl
add
add
lahf
je
jb
add
pop
jle
dec
push
or
add
cltd
cmpsl
add
arpl
fstl
pop
or
push
xchg
and
jbe
add
push
add
add
add
sbb
add
mov
sub
add
pop
stos
movl
add
stos
mov
lret
add
inc
add
fisttps
movsb
add
pop
adc
mov
mov
add
sub
int
repz
xlat
push
pop
add
add
add
add
add
addb
iret
bound
addl
add
pushf
add
cmp
mov
addl
cltd
popf
add
jl
ror
push
aam
lods
mov
jnp
imul
inc
or
add
add
add
fnop
lahf
into
sbb
or
dec
test
add
in
dec
xchg
cld
push
addb
add
roll
cmpsl
add
add
pusha
jmp
push
add
push
add
loopne
mov
cmp
cltd
pop
sub
popa
add
ljmp
add
add
add
add
add
ja
dec
xchg
daa
add
add
or
iret
xchg
jo
addl
add
lods
loopne
movl
jb
add
fwait
in
xchg
adc
mov
pusha
add
movsl
add
pop
enter
or
aas
pop
add
add
add
test
rolb
add
mov
add
icebp
mov
cmp
xor
mov
cmc
in
je
mov
cmp
add
aam
dec
in
xchg
xlat
jl
add
loopne
add
sahf
mov
inc
add
add
add
add
repz
mov
jmp
out
xor
add
decl
ret
add
add
sub
ficoms
int
stos
add
add
mov
je
lret
inc
add
sub
fists
ds
dec
or
addl
add
add
push
cmp
mov
add
dec
push
sub
mov
lret
fisubs
add
loope
int
push
push
jg
mov
add
add
jl
jg
dec
push
add
add
add
add
add
add
jne
adc
add
push
add
add
add
add
push
imul
add
add
out
daa
add
add
push
push
jmp
mov
data16
data16
add
stos
jbe
mov
lods
push
ret
push
mov
add
out
jge
add
cltd
roll
add
pop
imul
popf
mov
sarl
outsb
mov
repnz
add
add
dec
and
pop
outsb
addb
add
add
sbb
add
outsb
movsl
add
insb
jae
sbb
inc
add
mov
add
inc
add
add
mov
cwtl
add
mov
ljmp
in
cmp
push
jae
add
mov
xchg
pop
idivb
or
add
fimuls
aam
adc
ret
add
push
add
or
test
outsl
movl
or
xor
mov
sarb
jmp
add
xchg
out
mov
add
stc
in
insb
lcall
mov
in
data16
and
jbe
and
mov
add
roll
add
fwait
mov
pop
ja
xlat
leave
cli
push
leave
mov
mov
icebp
roll
inc
add
jge
aam
add
icebp
scas
push
mov
add
sub
push
add
mov
cmp
add
add
push
mov
xchg
nop
push
pop
in
push
add
add
add
test
addl
sbb
or
add
push
ret
sub
add
loop
mov
xor
pop
jnp
loopne
sti
mov
add
add
add
add
add
test
add
xor
test
lret
ljmp
mov
xor
fisubs
add
jl
imul
rcl
xchg
imul
jecxz
or
add
inc
add
in
std
mov
popa
add
push
fwait
sbb
jg
roll
arpl
fsubrs
push
add
add
add
or
adc
in
add
outsl
pop
sbb
add
fildl
ret
add
lods
jp
add
rcr
inc
add
in
add
jge
inc
add
pop
cs
popf
mov
or
pop
enter
add
add
jmp
add
lret
lret
lahf
mov
jg
enter
push
dec
hlt
lock
inc
add
and
mov
add
add
add
add
shrl
mov
add
pusha
add
add
test
add
add
pop
mov
insb
or
out
int
pop
outsb
cld
xor
add
scas
xor
add
push
sbb
inc
add
add
and
lcall
clc
stc
outsl
aaa
dec
frstor
in
xor
cmp
add
push
add
out
xchg
addl
add
je
push
xchg
in
inc
add
in
mov
aad
xor
mov
add
add
add
rolb
add
add
insb
mov
add
add
push
inc
add
add
add
je
jmp
add
add
xchg
loope
mov
out
movsl
add
add
or
les
iret
sub
or
inc
add
inc
add
aad
add
and
lcall
push
cmp
scas
icebp
dec
and
push
lea
in
sub
flds
add
pop
add
call
jmp
add
repnz
shll
push
enter
or
rcr
cmp
in
xor
roll
data16
insl
cld
mov
sbb
add
loopne
mov
jecxz
int
add
insb
xor
add
xchg
scas
cmc
push
add
and
sub
cmpsl
add
xor
add
add
sbb
ljmp
jmp
add
ljmp
mov
add
add
dec
idivb
mov
jmp
add
pop
stc
fldenv
add
xchg
ds
jle
add
in
xor
call
push
fwait
pop
ret
add
addl
popf
daa
add
add
in
out
movl
adc
js
cmp
or
push
ret
jle
mov
add
addl
sub
aaa
pushf
xchg
arpl
or
lods
sub
mov
add
xor
add
sub
ss
jp
add
mov
pushf
shlb
add
add
add
pop
add
fstl
add
push
ret
add
xchg
jb
add
adc
jmp
sbb
push
and
sahf
stos
add
mov
ds
adc
mov
add
adc
adc
mov
je
sbb
mov
and
movsb
add
mov
add
xor
test
jecxz
fdivrl
movb
movl
add
pop
cmp
add
jmp
add
add
adc
stos
mov
and
and
cmp
stos
pop
add
add
mov
jne
out
int3
add
mov
cmp
fcomps
push
lea
lds
mov
addr16
inc
add
lods
xor
stos
mov
fsubr
xor
incl
add
add
ds
mov
call
add
sbb
xchg
and
dec
sub
add
cmp
add
push
mov
loop
and
lea
xor
mov
xor
add
insl
loope
and
jge
add
add
cmp
push
in
ljmp
or
addb
pop
jns
pop
pop
dec
and
sbb
aas
xor
pusha
add
add
cmp
add
ret
jmp
add
push
add
inc
add
dec
jns
int3
lcall
pop
stc
in
rolb
mov
push
mov
dec
call
add
jg
add
add
cmp
add
add
add
sbb
iret
add
pushf
dec
cmpsl
add
add
clc
mov
add
add
testl
repnz
add
pop
add
add
add
loop
ja
sub
adc
test
pop
fwait
or
and
cld
dec
mov
jns
add
roll
or
and
js
dec
jo
add
in
inc
add
jbe
or
out
ss
addb
sub
add
add
mov
jo
cmc
lds
imul
add
into
cmpsb
add
cmpsl
add
add
add
add
mov
inc
add
push
int
addr16
add
in
adc
loopne
out
mov
add
stos
ja
outsb
push
les
add
add
lret
int3
push
add
add
xor
xor
push
inc
add
push
add
add
loopne
adc
scas
jno
mov
in
test
add
add
and
add
add
add
add
ja
jl
addl
test
imul
xor
add
mov
sub
sbb
mov
scas
fadd
add
jge
out
rolb
scas
stos
sub
out
adc
pop
add
add
cs
mov
fldcw
test
and
pop
mov
add
push
cmp
aam
fisttpl
nop
push
pop
das
jl
jmp
jmp
push
add
jne
jmp
push
add
int
addl
add
jno
adc
out
aam
cmpsb
add
pop
jbe
add
inc
add
pop
je
aad
incl
inc
push
ret
pop
add
test
rep
or
adc
sub
xor
jp
cwtl
adc
add
add
movb
push
inc
add
nop
in
cmp
add
fiaddl
xchg
aad
add
pushf
arpl
enter
push
cmpsb
add
add
add
jns
repz
inc
add
ficomps
push
add
inc
add
add
sti
icebp
lcall
aas
jno
add
pop
out
push
mov
ljmp
repz
mov
or
add
mov
int
add
jae
and
and
pusha
add
in
lea
inc
add
add
cli
add
add
ret
pop
cmpsb
add
add
inc
add
mov
mov
addl
jg
cmpsl
add
add
testb
add
add
dec
xchg
icebp
movzbl
and
clc
lret
daa
add
jne
mov
add
add
js
add
add
jo
dec
loop
and
movsb
add
add
add
mov
daa
add
xchg
push
mov
add
pop
lods
xor
jmp
add
int
out
jle
shll
pop
and
jl
dec
je
mov
out
mov
jne
add
add
and
lock
mov
add
pop
mov
aam
push
outsl
popf
xlat
pop
lods
jl
lock
add
pop
aam
add
add
mov
sub
fisttps
push
rolb
sub
arpl
cmp
add
add
jmp
push
add
add
add
addb
addb
addl
mov
mov
jle
aam
popf
addb
add
push
dec
popa
add
loop
jg
add
and
xor
push
push
ja
lret
dec
imul
push
inc
add
push
push
add
mul
add
push
xor
add
repnz
and
mov
addb
std
sbb
add
add
and
inc
add
nop
add
push
ljmp
xor
add
mov
xchg
push
cmp
insb
inc
add
xor
cwtl
nop
pop
push
add
add
pop
sbb
dec
and
mov
sub
push
pop
dec
cmp
or
mov
add
jno
push
sbb
add
jnp
push
addb
xchg
sub
pop
mov
cmp
adc
das
mov
mov
add
cmp
pop
ss
adc
fmuls
push
popa
add
minps
add
add
xchg
shl
je
add
out
inc
add
roll
xchg
lods
mov
mov
cmc
daa
add
cmp
mov
repz
jge
add
add
and
mov
imull
addb
mov
stc
push
sub
mov
inc
add
inc
add
addb
sub
rolb
sub
mov
or
and
xchg
cmp
lahf
test
jmp
lea
jae
adc
mov
jbe
cmp
add
push
addl
sub
add
lret
data16
inc
add
add
adc
xchg
xor
mov
lret
mov
cwtl
stos
mov
aas
pop
loopne
mov
insb
fldt
mov
jmp
push
mov
in
ja
divl
incl
push
add
ljmp
mov
jno
add
and
lret
or
dec
pop
cmp
movl
movsb
add
ds
mov
inc
add
cmc
cmp
add
pop
jmp
mov
jmp
add
adc
outsl
ffree
add
cmp
mov
sub
add
xor
dec
xchg
sarl
add
inc
add
in
addb
idivl
mov
incl
push
add
add
aaa
pop
xor
pusha
add
and
and
ljmp
xor
hlt
xor
sar
fimuls
out
inc
add
mov
jl
inc
add
stos
loope
xor
sbb
test
xor
sub
jmp
add
mov
add
dec
daa
add
add
xchg
imul
stc
ret
add
mov
add
aas
mov
add
jmp
add
cmpsb
add
movsb
add
std
jl
cpuid
add
and
add
movsl
add
repnz
ljmp
mov
add
add
ret
add
sbb
mov
jmp
add
add
clc
call
cmp
cmp
cmp
movl
pop
lds
add
cs
cs
xor
sub
adc
push
loopne
mov
movsl
adc
add
add
stc
shl
iret
inc
add
mov
pop
sbb
stc
jbe
in
mov
mov
outsl
inc
add
mov
pop
push
or
add
mov
into
or
mov
fwait
insl
lea
pop
jmp
aaa
incl
icebp
mov
and
stos
test
mov
xchg
idivb
aaa
imul
or
add
out
daa
add
leave
xchg
mov
add
add
loop
popf
shlb
add
ffree
add
stos
lahf
repnz
es
xchg
lods
add
pop
add
fistl
sub
cs
add
add
mov
add
xchg
mov
add
xchg
data16
adc
add
imulb
imul
push
insb
sub
in
test
addb
sbb
xchg
cmpsl
add
sbb
in
inc
add
pop
and
sub
add
call
add
add
add
ljmp
jge
pop
das
cmp
add
stc
mov
or
loopne
test
push
cmp
lods
daa
add
xchg
testl
adc
add
add
xor
shrl
int3
je
add
lcall
into
pop
insb
sub
pusha
add
add
add
cmp
std
mov
mov
add
hlt
out
xor
xor
mov
add
mov
add
addl
out
dec
lock
and
cmp
dec
mov
in
mov
add
add
pusha
add
or
xchg
jmp
mov
addl
add
add
add
push
nop
xchg
xor
pop
add
add
add
psrlw
add
aas
popa
add
in
bound
sub
add
jmp
leave
je
add
pop
pushf
data16
push
add
adc
in
or
aam
add
lret
and
dec
cmp
sub
ljmp
pop
lahf
out
sbb
imul
add
add
cmpsl
add
add
add
sbb
mov
ss
cmp
and
inc
add
lahf
pop
add
jns
add
test
mov
push
add
pop
xchg
movl
push
std
push
jbe
arpl
seta
int3
push
push
inc
add
int
add
mov
add
fildl
cmpsb
add
xchg
cwtl
xchg
out
clc
dec
mov
imul
enter
fmuls
outsl
mov
lcall
jg
jno
mov
add
cwtl
and
stos
mov
ficompl
add
add
add
xor
add
add
insl
sbb
arpl
adc
pop
sub
incl
repz
ret
add
add
jno
cmp
les
xor
add
add
jmp
add
and
mov
add
add
add
xor
add
iret
push
std
movl
mov
add
inc
add
cwtl
addb
add
add
add
test
xchg
xchg
mov
jl
mov
bound
data16
inc
add
pushf
iret
stos
xor
minps
pop
inc
add
add
xchg
dec
fxch
push
fsubl
movl
add
cltd
cmpsl
add
adc
add
add
jo
xchg
inc
add
imul
dec
jae
dec
decl
cli
incl
mov
daa
add
mov
fadd
add
stos
xor
decl
push
ret
add
add
xchg
sbb
mov
daa
add
add
add
add
jmp
add
mov
cmp
and
xor
add
loopne
sbb
add
add
std
jo
cli
cmc
mov
fiaddl
lret
mov
out
push
stc
ja
add
ljmp
push
push
or
les
mov
add
addb
add
inc
add
mov
rolb
add
lods
pop
lods
mov
jmp
add
mov
pop
cs
add
add
push
sti
into
test
movl
add
add
leave
mov
jecxz,pn
gs
push
mov
adc
add
dec
adc
or
rcl
rorb
add
sbb
bound
int3
jl
add
test
mov
add
scas
jmp
rorl
lock
bound
mov
add
pop
mov
and
cmpsl
add
and
cmp
stos
jnp
mov
je
fsubl
dec
mov
inc
add
je
jmp
divl
cmpsb
add
int3
out
mov
xchg
or
mov
imul
push
fildl
lock
or
fwait
je
inc
add
movsb
add
into
or
int
xchg
roll
addl
add
in
cltd
and
inc
add
into
xchg
jecxz
inc
add
hlt
sbb
add
je
mov
or
les
dec
imul
add
add
pop
add
bound
lcall
icebp
pop
push
fs
add
add
add
lds
cmp
std
and
push
mov
push
push
or
arpl
stos
inc
add
add
je
push
adc
add
jle
xor
push
outsl
sub
mov
cmp
lock
arpl
lahf
mov
add
add
xor
add
add
fwait
movsl
add
movb
das
cld
mov
inc
add
add
add
fidivrs
add
add
jbe
add
mov
mov
sbb
loop
jmp
add
dec
nop
js
adc
mov
add
cmp
test
addl
push
add
xor
push
xor
or
add
mov
push
shll
push
add
mov
cmp
lret
sbb
mov
addl
mov
jmp
add
add
xchg
dec
jbe
add
adc
add
lods
les
cmc
xchg
movl
cmp
add
lret
pop
xchg
lret
ja
adc
aam
add
add
mov
add
add
mov
add
jmp
cmp
pop
jmp
negl
add
add
pop
push
ljmp
jmp
mov
pop
or
add
mov
push
ret
add
lret
pop
hlt
rol
add
in
pop
mov
arpl
push
mov
add
pop
add
mov
fistpl
xlat
addb
aaa
jno
ret
nop
movb
out
sbb
test
adc
add
daa
push
add
sbb
add
jmp
add
xor
aad
test
and
test
add
cld
dec
rolb
or
add
adc
add
add
movsl
add
pop
sub
hlt
ds
inc
add
adc
add
add
jns
add
push
xchg
xchg
dec
daa
add
add
add
pusha
add
int3
js
int3
scas
cmc
add
add
adc
push
adc
add
add
add
sbb
cld
pop
mov
add
and
ss
add
mov
add
and
add
push
ret
add
push
repz
add
loopne
push
push
outsl
xchg
stc
cs
add
cmp
add
pop
jae
add
in
jno
data16
pop
pop
loop
push
sbb
movsl
add
lds
add
add
add
addl
bound
lods
push
lret
bound
and
call
out
dec
ret
add
cwtl
push
pop
add
add
add
stc
stc
inc
add
inc
add
inc
add
mov
pop
adc
mov
sbb
add
shr
ret
add
loope
hlt
addl
sbb
roll
xchg
div
cmp
add
je
pop
test
sbb
mov
add
adc
test
push
xorb
addb
push
out
int3
mov
mov
mov
cwtl
mov
add
mov
push
push
add
add
int
add
and
pop
lods
out
repz
js
mov
add
scas
sbb
addl
sub
mov
idiv
fwait
push
pop
es
add
bound
pop
add
add
xor
dec
inc
add
stos
enter
jne
push
ret
add
push
push
aam
loope
out
jmp
aad
push
lahf
fmuls
sub
add
out
movl
fprem1
mov
dec
jnp
and
mov
mov
iret
jae
mov
add
movsb
add
add
cmp
fnstsw
add
jae
bound
iret
scas
insb
xor
test
jmp
lahf
enter
add
xchg
add
add
aaa
outsl
movhps
sbb
add
jmp
xchg
mov
or
adc
add
shll
add
je
jmp
out
stos
mov
inc
add
xchg
add
mov
addl
das
xor
call
bnd
add
push
into
out
es
add
ljmp
push
dec
jge
or
add
fmul
sub
inc
add
add
and
cmpsl
add
add
jg
add
add
leave
cmp
stc
mov
add
ss
add
add
xchg
inc
add
add
int
sub
in
insl
add
and
pop
xchg
add
sbb
push
movsb
add
add
imul
mov
dec
inc
add
xlat
aaa
pop
pop
push
and
int3
nop
and
inc
add
mov
jmp
mov
add
push
add
add
add
pop
mov
or
arpl
clc
stc
jecxz
cmpsl
add
add
cmp
mov
push
rcrb
add
push
add
aad
add
push
adc
shll
cs
fabs
add
dec
push
test
add
dec
pusha
add
aad
add
mov
insl
mov
add
shl
add
test
pop
add
push
ret
dec
stc
rolb
add
and
sarl
and
popf
cld
cmp
add
ds
notb
add
lods
and
mov
scas
outsb
out
in
add
cmp
mov
push
jmp
add
add
out
and
mov
aaa
aaa
test
dec
ljmp
add
add
lret
inc
hlt
push
ret
add
pop
xlat
push
xor
add
xor
add
add
rolb
ficoml
aad
xor
mov
push
add
int3
inc
add
add
add
push
je
add
add
add
les
ja
push
pop
int3
repnz
or
push
jmp
ljmp
mov
mov
loope
push
jns
sti
addl
imul
mov
jp
ljmp
outsl
sub
ret
add
sbb
jmp
add
add
xchg
xchg
jle
lock
xchg
int
add
xchg
mov
push
add
or
dec
push
add
add
add
and
mov
add
jno
ret
add
cmpsb
add
cmc
inc
add
add
add
lahf
mov
mov
lcall
incl
testl
add
mov
mov
add
call
dec
addl
mov
lahf
lods
fmull
mov
adc
je
push
ret
lret
popa
add
or
add
pop
pop
ficoml
add
pop
add
xchg
xchg
sub
push
add
add
add
lret
add
inc
add
mov
add
shrl
loop
aas
xchg
or
add
test
jmp
add
mov
rcrl
notb
inc
add
mov
pop
je
jae
dec
hlt
push
add
add
or
add
adc
jno
cmp
add
xor
test
add
testb
adc
push
popf
addl
pop
mov
pop
jnp
add
add
loope
lock
add
cmpsb
add
test
in
loopne
loope
cmp
or
add
add
add
dec
jg
xor
sbb
test
jnp
repnz
repnz
pusha
add
mov
mov
add
push
in
addb
nop
dec
push
dec
hlt
and
roll
add
inc
add
shll
add
fidivs
sbb
roll
add
into
mov
xchg
sbb
add
int3
pop
push
add
fdivs
adc
add
jg
jb
add
ret
mov
add
add
jge
mov
add
dec
dec
add
add
add
add
add
hlt
xchg
cltd
xor
add
aaa
xchg
ja
imul
and
leave
arpl
divl
pop
arpl
not
xchg
xchg
push
std
mov
clc
xchg
jmp
int
and
cmpsl
add
arpl
daa
add
push
ljmp
cltd
test
dec
lret
add
add
mov
add
add
test
add
adc
movl
adc
addb
roll
scas
test
ljmp
add
add
out
hlt
cmpsl
add
cwtl
cmp
add
loope
jge
inc
add
daa
add
scas
sbb
stos
rolb
and
sbb
mov
pushf
nop
push
stos
push
sarl
adc
add
add
and
sahf
cmp
lds
dec
mov
leave
inc
add
add
mov
add
jle
add
jnp
add
add
ficoml
ds
std
and
push
out
sub
movb
pop
popf
dec
cwtl
mov
and
je
push
mov
fwait
in
xchg
pop
add
jmp
mov
or
pop
idivl
add
bound
push
dec
cmp
xor
addl
jecxz
sub
pop
add
add
test
or
add
hlt
arpl
lock
add
dec
push
mov
pop
mov
cs
push
hlt
and
add
testl
lcall
jns
adc
cmp
cmpsl
add
sahf
fwait
dec
jne
sti
movsb
add
add
rorl
sub
mov
jecxz
daa
add
add
sbb
cmp
mov
mov
add
mov
add
rep
cmp
pop
jmp
insb
fmull
sbb
add
mov
outsl
add
add
add
ljmp
rorb
push
push
js
lds
xchg
xchg
dec
jne
add
mov
cltd
outsl
sub
add
addl
push
movsb
add
sub
rep
jmp
push
push
mov
add
push
loope
lahf
call
xchg
xchg
ja
std
repz
add
add
push
adc
mov
push
add
pop
add
add
add
add
mov
shlb
add
loope
inc
add
sbb
fidivrl
ljmp
add
push
ret
push
add
add
mov
pop
addl
inc
add
add
add
add
add
push
clc
bound
inc
add
add
push
mov
cmpsb
add
movl
add
add
pop
sbb
add
movl
pop
mov
sbb
add
insb
testl
add
jnp
out
adc
inc
add
and
test
push
push
mov
add
add
addb
add
loopne
imul
jb
add
dec
je
add
aad
pop
jmp
mov
push
pop
cmp
or
dec
sbb
call
out
inc
add
add
add
clc
stc
ret
add
clc
roll
add
roll
addl
ret
add
push
push
adc
sub
addb
mov
xlat
add
add
fisubrl
add
cwtl
cmp
add
mov
insb
call
stos
inc
add
add
add
add
jae
add
scas
out
push
dec
xchg
pop
xchg
adc
jle
sbb
loop
pop
adc
pop
mov
loopne
lcall
add
xchg
mov
add
insl
sbb
popf
out
mov
push
fstpl
cmp
add
add
add
add
add
add
test
xchg
mov
add
scas
pop
and
pop
into
jmp
pop
jmp
push
add
add
add
incl
add
add
sbb
add
adc
pop
lahf
dec
pop
jg
add
mov
add
jecxz
sbb
repz
add
mov
fmul
push
enter
int
add
add
xlat
xor
add
leave
push
cmpsb
add
push
in
xor
add
addb
add
lods
xchg
add
out
cmp
outsb
ret
add
out
inc
add
pop
les
xor
mov
sbb
add
addl
scas
pop
add
and
cmp
cmp
roll
jnp
je
add
adc
sbb
cmpsb
add
int3
xor
leave
adc
aaa
leave
inc
add
test
les
adc
int
push
xchg
lret
xor
mov
mov
dec
jne
add
nop
jecxz
fnstenv
mov
cwtl
addl
aam
je
ret
add
pop
push
add
hlt
fcompl
add
mov
add
nop
push
add
int3
in
xchg
das
dec
sbb
fildl
fnop
push
stos
fldcw
jb
push
ret
add
test
and
mov
mov
xor
mov
xor
jne
add
inc
add
sbb
add
lret
cmp
pop
dec
je
stc
push
fcomps
jle
or
add
add
add
add
and
pop
fdivs
xchg
imul
add
mov
dec
mov
ja
add
shlb
add
inc
add
roll
jmp
pop
dec
test
mov
repz
dec
popa
add
mov
or
push
add
test
mov
jge
add
add
and
adc
adc
lods
les
pop
sbb
pop
movsb
add
cmp
or
xor
sub
stc
add
add
mov
add
jle
add
cwtl
add
lods
inc
add
jle
ret
add
daa
add
cmp
aam
cmpsl
add
ret
add
mov
add
fwait
xchg
xchg
aaa
or
push
outsl
stos
push
xchg
push
add
mov
add
add
cmp
add
fidivrl
add
add
add
lret
add
add
adc
lea
imul
push
icebp
sbb
and
inc
add
pop
dec
fsts
fists
add
out
adc
add
add
add
xor
add
je
jmp
nop
jne
push
out
inc
add
sub
inc
add
jl
out
push
dec
adc
fwait
add
add
jnp
imul
cmpsb
add
pop
push
loope
fmuls
adc
addb
push
enter
lret
add
adc
add
loopne
loope
inc
add
sbb
add
add
cmp
xchg
icebp
mov
data16
lds
popa
add
fnstenv
hlt
flds
and
adc
add
sbb
add
add
mov
jp
add
mov
jne,pn
mov
mov
and
cmpsl
add
pop
mov
enter
loop
aaa
mov
jb
shlb
add
add
xchg
or
stc
jne
mov
sahf
cmpsl
add
sbb
add
cmp
add
jo
out
sub
lods
mov
dec
hlt
incl
add
negb
clc
repnz
inc
add
push
add
adc
add
add
inc
add
dec
clc
les
jbe
push
jmp
out
add
negl
out
cmp
add
sub
add
xchg
inc
add
add
add
add
out
jmp
add
inc
add
stos
jge
xchg
mov
icebp
adc
fnstcw
les
outsb
in
add
sbb
roll
push
push
push
add
mov
addl
mov
shlb
icebp
loop
sysret
add
das
jg
inc
add
pop
dec
sbb
add
mov
push
pop
sub
incb
pop
shrd
ljmp
add
movb
add
test
js
data16
sbb
mov
roll
inc
add
icebp
fwait
jle
push
xchg
lcall
push
add
dec
adc
cmp
movb
add
roll
imul
add
push
cli
movb
push
cmp
add
mov
xchg
push
pop
push
xchg
jl
lods
std
sbb
stos
add
pop
xor
add
mov
cmp
mul
add
add
testl
int
test
insb
in
xor
sub
addl
mov
add
add
add
out
bound
sti
mov
jge
add
add
js
add
mov
arpl
cmp
add
jmp
xchg
add
mov
add
cmp
mov
call
clc
out
push
sbb
xor
lods
aad
sub
filds
stc
das
lret
add
hlt
lods
inc
add
scas
adc
sub
add
dec
xchg
data16
out
daa
add
add
mov
add
scas
fiadds
add
outsb
mov
add
int3
insb
mov
add
add
into
mov
ret
in
pop
es
add
jbe
dec
cld
add
add
add
jg
fmulp
imul
mov
sbb
xor
xchg
dec
pop
jmp
in
dec
jecxz,pt
aas
test
je
popa
add
push
add
jnp
ds
mov
lahf
testl
mov
negl
int
jp
add
add
arpl
or
add
jne
adc
add
add
fsubl
add
or
inc
add
push
add
enter
add
add
add
mov
push
jns
add
packsswb
jb
lcall
jae
or
jmp
add
add
add
xchg
add
mov
and
addb
jle
test
dec
cmp
xchg
xchg
inc
add
sti
roll
scas
mov
movsl
add
or
sub
add
mov
add
push
ret
shll
stc
aas
and
mov
loope
loop
fnstenv
ljmp
push
jmp
add
add
inc
add
outsb
xchg
xchg
enter
cmp
dec
hlt
adc
add
add
jmp
add
iret
inc
add
inc
add
sub
cmp
test
inc
add
add
add
adc
xchg
in
daa
add
or
lahf
xchg
xchg
push
jge
data16
pop
add
add
jg
add
jl
add
push
sbb
cmp
mov
outsb
mov
insb
aad
add
pushf
mov
cmc
mov
int3
int3
inc
add
push
pop
lock
xor
enter
pop
in
jno
add
test
or
add
stc
jecxz
jb
add
add
pop
adc
sub
adc
mov
adc
mov
add
pop
pop
add
add
add
sub
or
xlat
jno
roll
add
stos
popf
lcall
dec
sub
imul
jmp
add
add
aas
adc
add
mov
jmp
add
add
add
add
xchg
pop
movl
pusha
add
stos
mov
add
add
push
add
dec
mov
inc
add
sahf
call
jle
imulb
jmp
add
add
add
ret
add
add
and
dec
jp
sbb
enter
mov
add
lea
add
aas
dec
sub
add
inc
add
xchg
cmpsl
add
idivl
jg
sub
lock
or
and
leave
sub
roll
and
add
int
add
ret
add
push
daa
add
lahf
and
roll
add
add
add
in
xor
inc
add
and
mov
js
sbb
xchg
clc
jno
sahf
fiadds
add
add
in
mov
test
add
add
add
idivb
clc
adc
scas
data16
or
or
or
push
ret
add
add
pop
insb
stos
xor
jmp
sbb
addr16
push
insb
ja
je
in
adc
add
outsb
sub
add
sysexit
jl
lcall
add
mov
arpl
xor
pop
xor
add
loope
cmp
add
addl
push
adc
add
or
lds
or
les
test
mov
dec
jo
daa
add
add
sbb
dec
in
mov
mov
fisttpl
jp
ss
out
pop
mov
sbb
jl
push
fld
add
jb
mov
add
mov
adc
popa
add
mov
push
ret
add
add
ret
add
test
or
addb
add
cmp
mov
mov
jns
add
push
push
add
stos
shrl
lret
lret
add
dec
rolb
push
bound
lret
add
add
add
loope
cmc
mov
stos
dec
ja
mov
mov
js
int
sbb
jecxz
and
out
pop
lea
push
pop
jmp
adc
sub
hlt
cld
sub
add
test
movl
dec
mov
outsl
sti
sub
add
xor
add
add
add
lock
xor
les
mov
mov
mov
add
add
sub
das
fiadds
lret
aaa
rcrl
sbb
add
add
add
in
test
pushf
lods
sbb
xor
and
icebp
ljmp
sbb
lret
ss
sub
dec
lret
sub
dec
jmp
xor
add
mov
add
jo
adc
cmp
stos
rcrl
add
add
add
flds
sbb
add
addl
scas
hlt
mov
add
sarb
add
jmp
mov
xchg
add
pop
mov
gs
add
add
add
pushf
sub
inc
add
mov
add
add
inc
add
cmp
push
out
jo
or
adc
loopne
lahf
out
fwait
and
add
adc
add
add
sbb
cmpsb
add
cwtl
imul
push
cwtl
aaa
aam
fwait
mov
int3
mov
pop
jecxz
mov
addl
xchg
add
xchg
adc
add
add
mov
and
mov
das
sahf
aas
push
adc
adc
push
fstpl
outsl
cli
div
stos
shrl
push
adc
add
add
add
add
addb
inc
add
or
out
mov
add
sub
mov
scas
out
enter
add
add
add
mov
add
add
jae
mov
cwtl
push
xchg
movl
mov
test
stc
push
mov
add
pop
mov
je
jmp
add
mov
cmc
add
icebp
test
or
mov
mov
ret
pop
out
imul
dec
xchg
push
lods
test
ja
add
inc
add
sbb
nop
xchg
mov
pusha
add
mov
add
cwtl
inc
add
add
and
ljmp
xor
add
add
add
mov
add
add
add
add
xchg
push
mov
mov
je
add
mov
add
xchg
icebp
push
lret
lods
pop
pop
push
cmp
sub
shll
loope
stos
addb
mov
push
ret
pop
mov
negb
add
add
scas
pop
dec
movb
stc
sbb
pop
arpl
sub
out
mov
add
sbb
dec
pop
mov
sub
add
roll
sub
add
jb
mov
add
jnp
loopne
dec
jae
add
addb
push
call
push
in
outsb
sub
mov
out
jne
dec
xor
add
aam
add
add
nop
lods
jmp
mov
in
add
add
outsl
mov
add
mov
pop
ss
lds
sub
push
cld
stos
jae
and
cmp
add
dec
mov
or
add
lret
inc
add
sbb
jb
and
fistps
test
adc
add
rcrb
popa
add
lock
sbb
mov
mov
sub
or
pop
lcall
bound
aam
pop
jmp
add
xchg
mov
add
cmp
push
mov
ret
in
rolb
popf
add
dec
rolb
lods
or
push
and
mov
cmc
sub
jg
insb
adc
pop
ret
jae
cli
mov
jmp
movsl
add
add
scas
movl
inc
add
sbb
pop
xchg
xchg
repz
pop
call
mov
scas
cmc
dec
pop
mov
add
add
push
jmp
add
ljmp
lcall
pop
jmp
into
aad
add
add
test
std
pop
add
xchg
inc
add
testb
addl
pop
mov
pop
movsl
add
enter
add
cld
aas
hlt
loopne
sub
std
pop
aad
fdivrl
icebp
xor
jmp
xchg
add
lods
mov
add
add
addl
pushf
ljmp
bound
in
xlat
adc
lods
cmp
xor
imul
addb
add
sbb
addr16
int
sarb
imull
add
lret
pop
pusha
add
lock
lods
sub
xor
pop
add
add
lds
mov
add
add
rolb
in
xchg
mov
addl
add
outsb
add
add
int
pop
add
roll
pop
add
push
inc
add
jge
mov
roll
test
mov
add
push
sbb
dec
and
addl
add
aam
xor
add
add
push
lahf
dec
js
stos
sahf
lods
lret
add
pop
mov
data16
hlt
loop
iret
lds
movb
notb
add
nop
push
push
or
rolb
xor
pop
popa
add
add
add
add
mov
cmp
out
mov
mov
ja
add
add
add
enter
jne
and
adc
popa
add
add
add
addl
adc
jmp
pop
add
add
add
rolb
jae
xor
mov
in
fsubrp
sub
sub
add
add
pop
mov
js
loope
lods
jecxz
push
sbb
pop
outsl
pop
mov
add
add
jbe
lret
mov
xor
add
add
xchg
bound
in
not
data16
icebp
addl
add
in
push
cli
add
add
add
mov
push
ret
push
add
pop
fxch
add
pop
add
icebp
add
add
leave
lret
pop
xchg
mov
push
jmp
add
add
add
cli
add
icebp
cltd
cmc
bound
push
cmp
and
add
cmpsb
add
ret
add
add
fsubrl
add
xchg
mov
add
xor
sahf
push
test
cmpsb
add
in
sbb
cmp
sbb
lcall
add
sbb
mov
adc
add
add
jl
adc
out
cmc
imull
mov
xchg
daa
add
out
lock
hlt
dec
xor
stos
mov
int
pop
shrl
and
pusha
add
add
push
por
fdiv
mov
adc
mov
dec
jne
push
fidivrs
sti
jecxz
incl
add
out
mov
cmc
in
ss
frstor
add
add
pop
inc
add
add
add
nop
roll
xor
add
ds
add
lret
jmp
add
add
add
lods
pop
cmpsb
add
add
fcoml
inc
add
call
sub
mov
mov
jnp
add
push
xlat
jle
push
sub
mov
ljmp
lea
incl
add
cld
xchg
sbb
movsl
add
jl
add
scas
mov
mov
jmp
add
and
xor
xor
add
push
dec
cmp
je
mov
test
xchg
mov
idivb
mov
add
inc
add
in
insl
fnstenv
xchg
iret
pop
test
divb
in
jg
add
enter
sub
cmpsl
add
lds
testb
sbb
jle
add
add
add
scas
or
add
push
bound
xor
js
mov
comiss
push
fistps
sahf
les
out
out
sti
sub
gs
add
bnd
add
sub
mov
incl
add
add
add
imul
test
add
add
mov
addl
dec
popa
add
fnstsw
bound
add
mov
fs
pop
das
mov
mov
add
add
addb
add
dec
mov
add
sahf
lea
add
inc
add
sbb
add
call
jmp
int
add
outsb
pop
aam
mov
mov
add
mov
fimuls
sub
adc
dec
jg
lods
pop
enter
add
test
scas
inc
add
add
and
xor
insb
pop
add
mov
pushf
sbb
add
sbb
add
and
jmp
dec
sbb
cli
mov
cmc
ret
das
jnp
add
xchg
dec
or
add
add
mov
daa
add
add
xor
add
add
in
jl
add
xchg
add
out
lahf
cmp
or
add
mov
add
fsubrl
mov
xchg
dec
mov
addl
xor
inc
add
mov
fidivrs
add
and
push
fld
add
dec
cwtl
fwait
inc
add
add
push
sub
ret
add
add
adc
mov
jecxz
enter
mov
mov
fxch
sbb
push
cwtl
js
arpl
ja
movsl
add
ret
add
add
aam
cmp
add
stos
sub
add
add
popa
add
add
add
notl
fcoms
iret
test
add
iret
or
incl
add
inc
add
add
scas
loop
jg
dec
roll
fstp
or
roll
add
aas
xor
cmp
dec
iret
xchg
sbb
jb
mov
repnz
scas
into
add
sub
xchg
mov
and
jo
stos
lret
mov
add
add
into
adc
sub
pop
int3
sbb
pop
rcr
push
cmc
mov
cmp
add
icebp
popa
add
in
packssdw
or
xor
scas
or
mov
dec
mov
fwait
sbb
add
add
add
or
rolb
pop
xor
stos
push
jae
add
out
mov
bound
ljmp
cwtl
sbb
shr
addl
xor
add
push
jns
add
mov
add
pop
dec
out
movsl
add
sahf
idivl
popa
add
out
pop
sub
lahf
push
in
daa
add
test
mov
dec
cmpsb
add
nop
lcall
int
mov
add
pop
out
cli
jmp
add
jno
add
xlat
stos
imul
repz
fnstenv
add
nop
int3
push
rolb
mov
add
pcmpgtb
cli
in
push
xchg
sub
add
ja
add
add
lea
adc
add
add
xor
outsl
mov
bound
adc
cs
ror
aad
das
sbb
push
pop
sub
inc
add
mov
add
sub
add
add
xchg
mov
add
add
mov
add
lea
sysenter
sbb
add
call
imul
dec
repz
daa
add
out
pushf
xor
and
jbe
add
stc
jl
mov
sub
add
jno
add
inc
add
add
jmp
insb
out
pushf
data16
arpl
sbb
pop
push
add
enter
pop
pop
ret
add
imul
add
push
inc
add
add
fwait
mov
add
cmpsb
add
call
and
outsb
cmpsb
add
pop
mov
add
test
xor
pushf
sub
je
sub
dec
int3
imul
test
ret
add
ljmp
add
add
stos
jmp
int
inc
add
add
xchg
aam
add
xor
jmp
xchg
testl
call
sbb
inc
add
add
add
add
mov
inc
add
add
add
in
ja
mov
scas
outsb
add
add
add
jnp
cltd
loop
ds
xchg
jmp
add
adc
push
ret
add
add
or
addl
add
push
fucomip
jle
sar
mov
push
cmp
mov
or
add
lahf
ret
add
jb
mov
push
pop
call
sub
ret
add
fstps
aad
in
loopne
test
add
int
pop
cmp
addb
add
add
dec
repz
lea
test
add
add
and
or
add
mov
add
adc
add
add
adc
add
mov
pop
add
xchg
push
push
add
add
add
into
jge
xor
add
add
nop
and
cmp
sar
push
push
ret
pop
add
push
add
adc
add
enter
xchg
mov
add
and
inc
add
pop
add
mov
ljmp
fwait
jno
jmp
and
lahf
sub
out
fmull
adc
add
jg
cmp
call
jmp
add
mov
cli
mov
push
push
add
add
xchg
mov
lods
imul
add
add
push
ret
mov
stos
mov
mov
dec
mov
fidivl
add
aaa
push
test
adc
add
add
add
mov
xchg
mov
add
add
add
add
test
add
out
cmpsl
add
add
add
add
daa
add
jnp
add
push
test
or
add
add
nop
roll
cltd
jecxz
pop
xchg
mov
add
data16
add
push
add
add
test
in
pop
push
repnz
data16
xchg
movsb
add
sahf
cmp
add
add
add
testb
add
imulb
jmp
jmp
cmp
ja
jae
dec
xchg
inc
add
add
jle
int3
enter
pminsw
mov
push
ret
add
cmpsb
add
adc
sti
fstpl
jl
ret
add
add
dec
or
xchg
jmp
or
addb
add
cmpsl
add
mov
call
jmp
add
add
popa
add
add
movl
dec
icebp
add
pop
dec
adc
jb
push
or
fsubl
mov
cld
repz
inc
add
stc
mov
xor
dec
outsb
in
aam
add
add
rolb
add
add
insb
jg
sbb
cwtl
jmp
add
push
or
scas
stos
or
movb
push
iret
rol
add
push
lcall
bound
sti
adc
fsubs
inc
add
mov
adc
add
ss
cs
add
lret
adc
add
aas
inc
add
jbe
adc
stos
shrl
mov
push
mov
add
sbb
loopne
lock
push
inc
add
mov
add
add
int3
jecxz
inc
add
cmp
adc
sbb
les
inc
push
add
testl
add
and
popf
pusha
add
cmp
lea
add
xchg
aas
rol
add
stos
pushf
mov
mov
lods
push
ret
add
inc
add
inc
add
or
jo
push
adc
incl
add
inc
add
stos
mov
dec
mov
add
cwtl
jb
inc
add
js
add
add
roll
insl
movb
lret
dec
xchg
xchg
cmp
add
add
add
cmp
movl
addl
cmp
arpl
xor
or
mov
add
push
add
shll
add
cmp
lret
sub
xor
adc
add
add
add
adc
loopne
jl
add
mov
sahf
lea
xchg
fwait
lret
xor
outsl
adc
lret
add
dec
or
icebp
pop
add
out
ret
add
xchg
inc
add
jmp
ljmp
mov
sub
fisubrs
jle
add
add
add
jmp
cmc
pop
mov
add
mov
fistpl
in
jle
sbb
lahf
mov
negl
pop
daa
add
cmc
shlb
daa
add
push
iret
and
inc
add
cmp
roll
xor
add
add
add
add
sub
add
pop
add
inc
add
push
ret
add
notl
stc
jmp
add
sarl
xchg
mov
dec
cltd
inc
add
sahf
mov
push
in
rcrb
push
and
test
and
fnstenv
iret
data16
or
lods
adc
sbb
addb
add
add
in
xor
xchg
addl
fiaddl
loop
dec
mov
add
add
mov
sub
push
mov
push
ret
pop
add
add
add
add
pop
jbe
popf
mov
imul
mov
je
int3
adc
stos
inc
add
in
nop
or
add
ficompl
add
scas
cs
sub
add
sbb
add
mov
add
add
pop
int3
cli
lea
add
out
loopne
popa
add
mov
add
dec
mov
idivb
mov
push
push
add
cmc
xchg
push
iret
cmp
mov
add
and
addr16
xchg
and
xchg
int
add
add
in
cmc
mov
xchg
out
shll
add
push
cld
and
or
lret
mov
add
mov
jecxz
nop
movsl
add
cmp
add
and
pop
scas
inc
add
mov
add
sarl
xor
add
decl
add
push
add
mov
cmc
adc
sbb
push
pusha
add
pop
and
push
xor
add
jle
mov
out
push
xor
add
push
jp
mov
outsb
addb
add
inc
add
push
pushf
jl
or
dec
inc
add
bound
adc
cmp
jmp
add
add
add
xlat
mov
xor
pop
add
adc
jmp
add
loopne
loop
inc
add
inc
add
push
sub
shr
jmp
add
push
add
scas
sahf
jae
sub
add
add
add
xchg
and
stos
insb
fsubrl
scas
or
dec
movl
push
pop
iret
test
inc
add
add
dec
xchg
jno
mov
mov
add
jmp
and
cmp
dec
jl
add
or
call
mull
add
mov
loop
pop
scas
cmp
add
psadbw
in
xchg
jg
xchg
and
cwtl
mov
add
push
mov
cmpsb
sbb
faddl
add
add
jno
and
out
addl
stos
pop
add
jb
add
add
roll
add
add
add
std
jge
inc
add
jl
add
or
jmp
add
add
icebp
rorb
repnz
mov
frstor
add
xor
adc
mov
jmp
add
add
push
mov
add
add
add
add
lahf
int
xlat
xor
and
xchg
je
xor
mov
jno
sub
add
aam
and
cmpsb
add
negb
ja
add
pusha
add
jmp
add
add
rolb
ret
addl
xor
sbb
popf
sbb
movsl
add
add
ss
add
add
sbb
fwait
pop
lret
add
jmp
or
add
jmp
push
add
js
add
fdivrl
jno
add
add
mov
repnz
jae
out
ret
add
add
add
jno
js
mov
popa
add
push
add
add
test
xchg
inc
add
int
fbstp
add
add
add
jge
push
mul
add
in
mov
add
dec
hlt
push
mov
into
pop
stos
jl
ret
add
add
loopne
inc
add
mov
add
popa
add
xchg
or
xor
cmp
movb
or
fldl
in
pop
sub
add
mov
add
popa
add
add
test
push
sbb
jle
jmp
int
push
add
or
adc
add
inc
add
add
and
sub
dec
cs
add
xor
fwait
mov
mov
cmp
sub
pop
jns
fcoms
int
or
repnz
mov
adc
add
dec
inc
add
add
lods
das
movsl
add
add
add
mov
and
addl
cmp
add
pop
fldl
mov
lods
pop
jg
aam
cmovnp
jb
add
add
scas
jmp
add
mov
push
into
incl
push
out
add
mov
sub
adc
jnp
add
movl
ds
mov
xchg
mov
add
add
mov
add
add
add
add
jmp
add
mov
add
scas
add
out
insb
jg
add
cmp
jb
mov
pop
fldenv
jns
pop
xchg
mov
xchg
mov
ret
add
movl
add
inc
add
add
xchg
jne
or
dec
dec
inc
add
aas
into
lds
xchg
jns
add
mov
dec
mov
push
sub
mov
cmp
mov
jmp
xchg
add
add
lds
xchg
inc
add
aaa
movl
mov
test
add
add
rorl
add
add
inc
add
repnz
cmp
add
into
or
add
dec
mov
scas
jne
sbb
add
bound
xor
outsb
je
add
add
in
and
jmp
or
out
cmc
sarb
enter
mov
insb
dec
push
dec
xor
add
fdivl
inc
add
movl
js
add
pop
add
imul
lods
out
sbb
insb
pslld
push
add
add
xchg
clc
and
mov
inc
add
lock
or
gs
add
add
xchg
mov
cltd
cmpsb
add
or
mov
add
leave
cmp
rolb
push
call
add
adc
add
jo
adc
ja
jno
jbe
add
cmpsl
add
addb
sub
adc
jbe
mov
add
loop
mov
add
mov
mov
add
in
sahf
aad
add
xlat
jg
add
add
add
shrb
xor
incb
ret
nop
lret
mulb
pop
idiv
movl
jb
xor
iret
mov
sub
out
fsts
xchg
out
addb
mov
jne
ja
mov
jae
das
mov
fmul
lret
bound
dec
nop
mov
imul
dec
js
or
nop
outsl
fdivs
xchg
xchg
pusha
add
in
test
punpckhbw
mov
add
add
xchg
cmp
loope
sbb
and
repnz
mov
daa
add
mov
shll
add
add
pop
xor
add
add
sbb
clc
in
sub
dec
popf
fbstp
mov
cmp
cmp
push
push
xchg
lret
add
xchg
and
add
add
add
hlt
rolb
jmp
add
add
and
xchg
test
mov
dec
push
add
push
fcmovbe
mov
mov
lock
add
add
add
add
push
xchg
jl
mov
or
cmc
and
xlat
addl
aaa
fdivrl
daa
add
push
outsl
ja
stos
dec
or
and
shlb
in
mov
add
cs
add
loopne
push
xchg
imul
xchg
mov
add
mov
add
mov
pusha
add
incl
push
add
push
cmp
icebp
les
arpl
outsl
add
jmp
add
jp
repz
xchg
mov
stos
push
push
int3
ja
add
out
lret
in
movl
adc
cmc
jecxz
mov
js
aaa
dec
cltd
sbb
cmp
add
in
add
dec
sub
add
cld
push
sub
add
or
jb
add
add
hlt
and
pushf
loop
icebp
in
xchg
lahf
movb
in
or
push
pop
xor
add
lret
add
add
add
mov
ljmp
add
fwait
add
add
add
add
shrb
je
js
aaa
mov
ret
testl
add
xchg
scas
xchg
in
jmp
mov
dec
pop
ss
add
popa
add
add
pop
push
addr16
jmp
add
push
sub
adc
inc
inc
add
push
add
ljmp
cmpsl
add
add
mov
leave
mov
add
add
add
int3
leave
adc
imul
add
add
das
movl
sbb
push
aas
aad
push
sbb
mov
jmp
out
mov
add
mov
add
xor
sarb
addl
cwtl
int
mov
out
pop
cltd
ja
push
lods
shlb
add
addl
mov
inc
add
jae
js
add
sub
movsl
add
popa
add
test
push
add
iret
int
mov
add
addb
loope
fwait
out
push
movl
add
lahf
ja
idivb
fdivl
and
jb
cli
cs
in
xchg
cwtl
scas
pop
mov
ljmp
mov
pop
xlat
jmp
and
xlat
inc
add
stos
aad
add
add
add
pop
push
cltd
mov
call
fsubp
add
add
addb
inc
add
add
punpcklwd
push
mulb
add
add
cmc
fwait
xchg
push
mov
addl
add
sbb
and
lds
jmp
decl
and
inc
add
pop
int
imul
jbe
cmpsb
add
add
add
lret
xlat
jns
in
adc
add
rol
add
add
mov
add
mov
dec
and
call
les
pusha
add
aaa
cmp
push
loop
outsl
adc
and
stos
inc
add
pop
and
sti
mov
mov
jns
inc
add
test
and
add
add
mov
add
add
add
jbe
fsubrs
mov
xor
cli
adc
std
push
je
mov
add
cli
and
or
mov
xchg
cmp
push
notb
xor
cmpsl
add
cwtl
xchg
data16
xchg
sarl
test
out
xchg
sbb
pop
xchg
aad
jns
add
fnstcw
pop
lcall
sti
dec
mov
mov
add
add
cmp
or
pop
outsb
out
mov
aas
dec
inc
add
aaa
mov
xor
jmp
add
add
add
dec
jo
jl
mov
xlat
sbb
dec
mov
push
lods
add
shr
movl
sahf
or
add
into
cli
lahf
lods
arpl
and
into
xor
or
jo
pushf
aam
adc
or
mov
push
pop
aaa
dec
push
add
add
add
sbb
add
out
stc
pop
cmp
or
fisttpl
sahf
sbb
xor
test
mov
dec
cltd
jae
xor
adc
add
pop
jmp
ljmp
ret
add
aas
lret
add
push
mov
jo
sub
add
add
add
int
push
les
sub
add
push
sub
sti
in
mov
mov
aaa
mov
lods
inc
add
std
push
iret
out
mov
inc
jmp
push
mov
in
adc
movb
add
shr
xchg
inc
add
add
add
out
addb
pop
data16
clc
sub
add
lods
mov
add
add
inc
add
cmp
out
jb
add
inc
add
pop
pop
mov
js
jns
jecxz
pop
stos
addb
les
fnstenv
push
jmp
add
insl
rorb
or
add
sbb
addr16
add
xchg
outsb
xchg
cmp
ret
add
mov
cmp
cmpl
jmp
xchg
out
repnz
xchg
jmp
sbb
lods
movb
fistpl
add
in
stos
mov
add
popa
add
jecxz
shrl
out
add
xchg
lods
in
push
mov
ja
push
in
mov
ljmp
add
hlt
mov
frstor
push
add
add
add
add
adc
add
add
stos
inc
add
add
nop
and
mov
add
mov
sti
push
cltd
stos
mov
adc
add
xor
or
xchg
cmc
mov
mov
add
arpl
incl
out
add
xor
fsts
add
cli
cld
jg
cmpsb
add
jecxz
xchg
inc
add
pop
loopne
pop
testl
aaa
ljmp
xor
and
popa
add
add
mov
add
add
and
cwtl
push
pop
roll
or
add
add
push
cmp
lods
inc
add
cmp
lds
pushf
js
clc
insb
sbb
cmp
mov
sub
jl
add
inc
add
repz
push
inc
add
add
add
ljmp
incl
ljmp
add
jmp
pop
add
push
inc
add
fisttpll
rclb
add
movb
fadd
add
add
stc
add
movsb
add
cmc
hlt
inc
add
into
push
lods
mov
adc
jae
add
leave
out
dec
dec
dec
mov
fsubrs
addl
xor
mov
add
pop
lahf
je
loopne
xor
cmp
data16
ficomps
or
add
add
lret
jmp
ljmp
add
add
sbb
sbb
mov
mov
add
jmp
adc
test
xchg
add
fdivrs
add
add
out
movb
xlat
jl
add
mov
movb
jmp
lea
pop
mov
add
addb
sub
xchg
aam
add
add
add
add
add
daa
add
packsswb
push
insl
daa
add
add
add
enter
icebp
jp
fwait
sti
mov
lods
mov
and
sub
jns
add
xchg
xchg
inc
add
push
pop
cmp
xor
mov
fisttps
inc
add
add
add
add
icebp
cmp
xlat
addr16
cltd
ret
add
mov
jge
add
push
clc
lock
add
movb
loope
mov
add
pop
adc
jmp
add
add
jno
sub
imul
push
sub
add
mov
out
sbb
push
movsb
add
stos
pop
push
pop
mov
add
xchg
adc
push
cmp
lcall
push
aad
cmp
stc
and
std
dec
lods
push
sub
add
ret
add
mov
inc
add
mov
fwait
mov
inc
adc
add
std
push
das
fisttpl
in
jb,pn
add
int
add
add
loopne
lahf
push
ljmp
insl
inc
add
and
xor
fisttpll
pop
movsl
add
add
push
add
add
add
adc
add
addb
pop
push
mov
shrl
xor
mov
ss
fcompl
repnz
pop
sbb
add
pop
mov
cmp
mov
adc
push
dec
push
and
nop
or
lds
out
mov
add
ss
add
mov
add
add
add
pop
std
mov
adc
int3
fcmovb
add
add
sbb
repz
mov
xchg
out
or
inc
add
add
add
addb
sbb
test
mov
js
jmp
add
movl
add
add
add
adc
loopne
mov
daa
add
jb
adc
sbb
add
sub
arpl
jns
fnstenv
jbe
add
jmp
xchg
add
xchg
add
fmull
cmp
jge
pop
push
mov
add
dec
in
push
jne
push
add
jle
sbb
add
lret
pop
jnp
popa
add
lods
clc
mov
ja
ret
mov
int3
fs
add
inc
add
push
ret
add
add
add
gs
stc
push
hlt
pop
dec
inc
add
jae
std
enter
add
pop
inc
add
lahf
fsubp
add
xor
add
or
sub
add
mov
and
popf
mov
int3
das
pushf
std
addl
cs
cli
jecxz
mov
xchg
pop
sub
test
fdivl
add
push
or
dec
fcomps
dec
and
aaa
sbb
add
push
add
fisubs
add
sub
dec
aas
xchg
xchg
jbe
jno
add
add
add
xor
addb
mov
add
cwtl
push
cs
mov
adc
jle
add
add
pop
adc
data16
icebp
xor
cmpsb
add
imul
mov
add
hlt
add
add
add
add
arpl
aas
lods
inc
add
popa
add
add
add
add
add
mov
add
add
loop
jmp
add
ljmp
add
sbb
add
call
push
ret
add
add
mov
incb
pop
inc
add
add
inc
add
dec
xlat
jne
add
add
cmpsl
add
add
xchg
shrl
dec
out
inc
add
add
loopne
imul
push
popf
mov
pushf
jne
sbb
add
leave
jecxz
test
mov
add
pop
jmp
dec
push
clc
sbb
add
jp
arpl
je
inc
add
or
leave
clc
in
jae
add
bound
sub
sbb
das
lods
dec
jg
mov
in
mov
add
fwait
xchg
jns
add
mov
inc
add
xor
lcall
add
add
jle
add
add
rcll
in
mov
add
cmp
push
jmp
add
jno
addl
jo
pop
add
mov
cli
stos
adc
ficoms
ret
add
add
add
data16
push
add
add
xchg
pop
fnstsw
add
repnz
in
sbb
add
add
loopne
popa
add
dec
mov
pop
sbb
jg
add
std
mov
ret
jmp
int
add
xor
adc
add
xchg
jo
lret
push
in
and
sarb
sub
lea
cmpsb
add
lds
stos
lods
cltd
scas
inc
add
xchg
add
cmp
add
jl
xor
cs
add
test
jns
scas
insl
pushf
mov
rolb
mov
xor
fidivl
shl
adc
add
add
add
add
lds
xchg
xchg
dec
testl
add
xor
in
sub
jno
and
add
jl
aas
adc
mov
scas
xchg
lcall
sbb
cld
push
mov
bound
out
lds
fdivl
or
and
int3
jmp
roll
adc
dec
jmp
add
add
jecxz
push
add
push
jl
jne
push
ret
leave
push
xchg
xchg
xor
mov
dec
dec
hlt
sbb
add
shrb
add
push
add
add
addl
mov
std
testl
pop
add
mov
outsl
inc
add
out
xor
jmp
mov
nop
add
add
add
add
addl
sbb
add
and
popf
js
pop
jl
dec
jg
mov
add
ret
add
ljmp
int
shlb
add
mov
xchg
cld
jle
jno
add
fimull
lds
jne
call
out
jno
dec
push
dec
mov
inc
add
add
add
fs
stc
nop
test
jl
faddl
add
addb
jle
jnp
sbb
cmp
add
stos
jmp
mov
add
add
ret
add
xchg
les
xor
push
mov
rolb
std
cmp
cmpsb
add
addb
xchg
mov
xchg
or
jg
inc
add
add
jb
outsb
lret
jge
xchg
jmp
popa
out
incl
add
add
add
pusha
jmp
add
add
roll
das
sub
daa
add
sti
or
jno
dec
pop
addb
pop
sub
add
add
dec
push
int
int3
mov
dec
lcall
add
add
mov
inc
add
dec
loope
aam
fcompl
pop
add
jno
mov
jmp
add
add
xor
add
add
and
cli
outsb
mov
call
jmp
push
out
add
popa
add
add
pop
or
push
pop
insb
cld
add
xchg
fistl
addb
dec
jmp
add
add
add
add
add
addb
sbb
pop
mov
ds
movsb
add
adc
sub
jmp
add
add
imul
add
add
mov
add
add
jnp
jl
dec
aad
add
mov
aam
cmp
add
xor
mov
mov
xor
jmp
int
xchg
add
testb
xor
inc
add
mov
cmp
enter
jno
cltd
hlt
dec
xor
jmp
add
push
sbb
xor
add
sarl
sbb
adc
add
add
pop
xrelease
cmpsb
add
push
or
or
mov
add
add
aad
add
mov
cwtl
ret
pop
push
mov
add
pusha
add
rcl
and
sbb
dec
add
add
add
adc
add
pusha
add
add
xchg
int3
or
mov
pop
inc
add
push
pop
lahf
out
push
add
xor
movsb
add
mov
xor
add
call
add
mov
pop
mov
pop
mov
rolb
mov
add
add
sub
fidivs
add
push
sub
sbb
add
stos
cwtl
addb
test
dec
insl
lcall
out
test
nop
cwtl
popa
add
mov
std
fnstcw
mov
sbb
dec
int3
data16
xchg
cmc
out
xchg
mov
roll
cmp
adc
add
add
push
jmp
add
add
mov
or
out
cmp
cmp
and
popa
add
add
add
mov
add
mov
cs
mov
jmp
add
dec
adc
xor
in
push
aad
xor
cli
mov
mov
sarb
incl
mov
add
mov
sbb
add
test
aaa
and
test
test
leave
xchg
lds
out
pop
push
call
add
add
xor
jae
in
xchg
and
adc
jnp
shr
mov
add
add
add
add
cmp
mov
jae
popf
imul
cli
mov
out
push
dec
je
add
add
cwtl
pop
repz
sbb
adc
mov
cmp
add
add
and
lea
jno
add
pop
and
sub
ljmp
pop
scas
cmp
addl
je
aam
mov
aad
lock
or
lea
loop
mov
jne
mov
in
leave
lods
sbb
pop
cmc
mov
add
cli
stos
les
sbb
adc
imul
cmp
xchg
aad
mov
pop
push
daa
add
adc
cli
xor
add
cli
das
sbb
add
dec
icebp
cmpsb
add
add
add
mov
mov
push
test
test
xchg
mov
adc
fisttpl
test
xor
add
jbe
mov
test
add
add
jge
add
add
jmp
xchg
or
add
test
clc
imul
mov
mov
xor
add
pop
add
pop
xchg
cmp
stos
adc
jns
add
add
inc
add
cli
inc
add
jecxz
push
add
add
add
add
add
test
popa
add
mov
hlt
mov
sub
add
add
add
add
decl
lcall
sbb
sahf
mov
repz
push
imul
adc
ja
jns
add
std
imul
enter
pop
pop
add
ret
add
xchg
xchg
pop
sbb
push
jmp
cmp
push
add
and
adc
sbb
add
sgdtl
add
popf
xchg
test
and
lret
dec
adc
outsl
mov
mov
movl
or
pop
iret
addb
push
dec
cli
push
fistl
fdivp
sub
add
push
mov
add
adc
mov
push
movl
and
jne
call
add
xchg
sbb
ret
xchg
jmp
test
mov
add
lcall
and
pop
jno
cmp
cmp
jo
add
xchg
test
add
out
fsts
fnstcw
add
add
xor
adc
add
add
js
ds
iret
pmulhw
jnp
ss
pusha
jmp
add
add
add
mov
cmpsb
add
mov
add
adc
add
inc
add
xchg
cltd
popf
roll
add
jecxz
popa
add
scas
outsl
jbe
add
push
popa
add
out
push
cld
push
push
add
adc
add
add
xchg
add
adc
dec
movb
add
add
cmp
out
cmpsb
add
cli
bound
pop
lods
push
jbe
cmp
add
pop
cmp
add
add
fwait
aad
add
or
pushf
mov
push
ret
add
xchg
test
sbb
add
sub
jns
xor
jae
inc
add
and
mov
inc
add
push
add
data16
addb
ljmp
add
jns
lea
add
push
cmpsl
add
add
add
inc
add
daa
add
mov
push
leave
xchg
push
jmp
add
dec
add
jnp
popf
xchg
loope
in
jl
add
daa
add
inc
add
adc
nop
test
or
add
out
inc
add
loope
add
add
add
add
cmp
je
movsl
add
add
add
mov
add
addr16
cli
lret
rcrb
add
mov
movl
add
mov
add
pop
fcoml
pushf
or
jno
ljmp
mov
push
or
dec
cmpsb
add
add
lock
adc
enter
sub
add
add
pop
mov
pop
sbb
je
leave
pop
xor
loop
lds
test
mov
add
into
inc
add
add
cmpsl
add
outsb
int
add
cmc
or
sub
push
push
cmp
xlat
dec
and
mov
das
loope
jge
mov
popa
add
popf
int
pop
jle
add
pop
rolb
out
jo
sbb
mov
jmp
mov
add
gs
cmp
test
jne,pt
xchg
cmp
and
fisubs
out
cmp
add
clc
add
divb
repnz
cld
xor
sub
bound
addb
loop
dec
data16
cwtl
cli
sub
mov
xchg
in
testl
push
pusha
add
add
mov
js
add
mov
cmpsl
add
into
adc
xchg
nop
leave
inc
add
and
push
outsl
hlt
add
add
xchg
addl
fldl
add
mov
mov
mov
mov
addl
add
pop
rolb
mov
nop
lahf
pop
aas
test
mov
add
pop
push
jbe
roll
add
push
pop
or
inc
add
mov
add
ret
add
add
add
sub
add
das
testl
les
jns
popa
add
cld
push
jl
bound
cli
insb
sub
add
and
std
dec
mov
popa
add
xor
sub
adc
add
add
pop
icebp
sbb
test
or
fmuls
aaa
inc
add
xor
add
int3
push
out
jb
cli
test
sbb
repz
dec
cli
pusha
add
add
sarb
dec
adc
push
mov
inc
add
pop
xor
and
mov
add
adc
mov
add
inc
add
mov
mov
inc
add
fsqrt
das
lcall
add
fbstp
cs
pushf
data16
push
jecxz
fisubl
add
enter
pop
add
aas
jl
push
into
dec
mov
call
rcrl
add
bound
scas
movl
add
mov
add
add
mov
adc
imul
add
int
or
mov
jo
out
jnp
dec
clts
add
cmp
sbb
mov
jmp
mov
jmp
xchg
push
add
add
mov
int3
mov
add
cmp
push
push
add
add
push
sbb
xor
push
push
mov
adc
fwait
sbb
ja
add
or
rolb
data16
lret
add
add
test
pop
and
mulb
inc
add
dec
pop
stos
xchg
push
je
in
mov
push
negb
outsl
cmp
dec
fs
leave
mov
inc
add
and
data16
jnp
add
add
mov
add
add
mov
add
addb
cmpsl
add
add
add
and
movb
jle
xchg
mov
add
jno
add
lahf
xchg
cmp
add
add
add
add
add
add
add
or
out
lds
inc
add
hlt
xor
ret
add
pushf
mov
sbb
lret
mov
pop
pusha
add
add
push
jmp
int
out
out
lods
shl
mov
addb
aad
inc
add
add
add
into
mov
jbe
add
ret
add
push
dec
xchg
mov
or
aam
add
add
rolb
mov
add
add
add
add
mov
add
add
aaa
test
fadds
add
push
and
mov
mov
leave
or
or
add
cltd
inc
add
adc
add
add
add
and
inc
add
add
adc
xchg
add
add
mov
jl
rcrb
popf
loop
dec
outsb
push
rcr
push
or
xchg
test
in
pop
sub
add
das
shlb
jno
add
dec
pop
movsl
add
ffree
add
cmp
add
sub
sub
jg
add
lahf
jl
xchg
rolb
jl
jno
add
xchg
or
test
xchg
je
dec
dec
adc
jp
addl
push
push
add
add
mulb
clc
xchg
inc
add
addb
jnp
sbb
xchg
rcl
nop
xchg
xchg
and
icebp
adc
sbb
dec
dec
jae
add
xchg
incl
add
dec
mov
call
add
xchg
inc
add
add
add
addl
add
add
cmpsb
add
adc
in
addl
data16
roll
push
adc
cmp
leave
xor
mov
add
add
mov
add
dec
out
pop
cld
sub
dec
push
add
mov
jae
jl
add
fwait
cwtl
cmpsl
add
out
in
and
dec
mov
mov
lahf
mov
push
mov
fsubs
add
aas
lods
pop
loope
jmp
out
out
pop
ss
add
xor
pop
ss
and
jno
mov
das
scas
enter
xchg
adc
add
frstor
add
add
lahf
jno
movntps
fsincos
addb
stos
jmp
add
add
add
pusha
add
nop
sbb
push
mov
xchg
jmp
add
add
adc
cmp
cmpsb
add
fwait
cmp
aas
test
pop
add
test
add
inc
add
inc
add
mov
cmpb
mov
lods
pop
mov
pop
cmp
jmp
push
add
pop
dec
add
add
lret
pop
xor
decl
jmp
add
add
add
sbb
add
mov
jl
mov
jo
cmp
imul
and
jmp
ljmp
test
mov
nop
mov
xlat
dec
or
out
mov
add
mov
in
mov
add
cmp
add
jo,pn
mov
dec
xor
loop
insb
cmp
pop
loop
test
in
dec
mov
add
add
sbb
and
mov
arpl
mov
mov
add
add
add
pop
int
incl
add
mov
add
add
xchg
js
jge
xchg
cmp
add
aaa
xor
dec
and
cmp
or
lods
sbb
dec
hlt
in
mov
iret
test
push
cmc
out
insl
push
mov
xor
add
cld
cwtl
ljmp
movsl
add
jno
dec
nop
ja
add
jecxz
ss
enter
add
int
je
add
push
add
dec
shl
add
int
addb
xchg
push
arpl
cmpsl
add
rolb
add
sub
sbb
out
dec
mov
push
jl,pt
add
push
fldenv
add
out
xchg
or
test
push
jne
xchg
loop
pop
mov
add
mov
inc
add
add
fistpll
cltd
add
inc
add
add
pop
jmp
mov
add
iret
test
add
add
xchg
loope
test
jbe
dec
stos
insb
and
lods
cmp
adc
ficomps
sbb
sub
shl
add
add
add
add
add
mov
and
push
addb
sbb
mov
lret
add
lret
cmc
or
aaa
push
mov
ss
or
cli
or
adc
or
insb
adc
daa
add
out
add
inc
add
leave
stos
push
enter
mov
sbb
shrb
lock
lods
cld
fdivrl
add
add
add
div
cwtl
sub
out
int3
cwtl
das
add
pusha
add
jne
inc
add
pop
shlb
mov
push
fisttpl
push
je
hlt
sti
inc
add
add
arpl
in
iret
adc
push
aaa
imul
adc
add
pop
mov
jp
add
add
mov
movb
xor
in
fildl
mov
out
push
add
add
xchg
push
jmp
pop
icebp
push
push
iret
popf
adc
in
pushf
das
dec
xchg
mov
jnp
jmp
sub
mov
add
lods
push
xor
add
lcall
movsb
add
mov
pop
or
int
push
add
add
nop
in
mov
add
divb
mov
add
add
add
addl
pusha
add
add
and
lods
mov
clc
outsb
repz
pop
dec
popa
add
cs
add
add
insl
push
dec
pusha
add
pusha
add
pop
inc
add
xchg
je
pop
and
jp
arpl
or
sbb
loopne
mov
test
add
add
mov
insb
xor
cld
cli
and
jnp
addl
aaa
pop
ss
add
je
add
add
add
movsl
add
add
fistl
add
mov
dec
add
add
add
mov
ret
add
pop
sbb
pop
mov
add
es
push
sbb
ss
in
incb
add
lret
out
icebp
adc
jg
add
pop
data16
gs
xchg
dec
fisubrl
dec
ja
fwait
rolb
cltd
xor
add
dec
inc
add
add
jne
add
gs
insl
fidivl
mov
push
loopne
pop
fwait
or
mov
inc
add
add
sbb
add
add
cmpsl
add
test
push
jmp
add
add
mul
add
add
leave
jnp
mov
movb
mov
add
lcall
mov
cmp
inc
add
mov
push
add
out
lds
xlat
mov
push
pop
mov
mov
dec
out
add
add
xor
cltd
sub
cmp
add
inc
add
cmpsb
add
test
mov
mov
add
lea
add
pop
inc
add
add
cmp
jecxz
fistpll
xchg
push
add
add
daa
add
js
add
add
xchg
cmp
loope
stc
or
aad
add
mov
in
movl
push
jns
notl
cli
daa
add
cltd
fcompl
repz
mov
and
inc
add
xchg
nop
outsl
mov
lods
push
stc
jmp
mov
add
add
xlat
fcomp
push
cs
jae
scas
sub
test
push
incl
xchg
add
mov
pop
lret
seto
sub
sub
pop
sarl
insl
pop
push
loopne
mov
cmp
mov
jmp
add
pop
add
xchg
seta
add
clc
jmp
add
loope
and
inc
add
xchg
cmp
mov
add
add
sbb
xchg
jo
idiv
bound
dec
or
ss
repnz
sbb
add
add
add
jae
add
xlat
add
rorb
es
mov
sub
addl
and
xchg
mov
push
add
add
add
add
pop
mov
inc
add
hlt
rorb
mov
add
in
out
movb
or
movsb
add
add
rorl
dec
loope
pop
inc
add
add
fwait
sbb
shl
jmp
add
add
addb
add
add
adc
pop
jo
or
lahf
outsb
lret
add
add
ja
pop
cmp
mov
dec
xchg
and
add
enter
ret
add
cmc
addl
add
add
add
add
add
out
push
add
add
add
xchg
add
add
or
dec
repnz
xchg
call
push
outsb
xor
fistpl
add
in
mov
popa
add
dec
sub
stos
rcl
test
rcr
xor
or
cmpsb
add
or
sbb
data16
inc
add
movsl
add
pop
pop
add
repnz
push
xor
add
mov
sub
add
add
loopne
insb
roll
add
mov
add
roll
out
in
int
add
pop
addl
add
enter
lock
test
adc
sbb
add
pop
roll
wrmsr
cmp
loopne
roll
movl
shlb
add
mov
and
add
or
inc
add
add
ljmp
add
add
nop
addl
enter
adc
addl
cmc
jmp
out
call
in
add
add
sub
shlb
add
add
xor
adc
mov
push
call
add
add
divl
mov
ret
incl
add
testl
xor
add
add
mov
rolb
es
repnz
mov
sub
add
add
add
add
mov
add
jl
push
addb
mov
sahf
adc
test
push
xchg
cmp
icebp
and
mov
ret
add
test
inc
add
jle
jg
add
add
testl
add
mov
or
mov
incl
nop
add
add
sbb
or
lea
sti
ret
add
sub
rorl
popf
push
pop
push
add
jnp
dec
xchg
scas
ds
add
inc
add
repz
aad
xchg
test
dec
mov
add
add
add
add
cmp
adc
gs
add
add
add
icebp
data16
add
test
sbb
add
jmp
add
int
fdivrl
xchg
aad
sub
rcrb
sub
daa
add
pop
push
lods
cmp
inc
add
pop
pop
adc
add
cmp
add
add
add
shll
cmpsl
add
sti
ss
aam
add
add
cmp
inc
add
sub
add
das
rol
add
fists
mov
faddl
ret
add
add
mov
inc
add
push
dec
outsb
inc
add
out
fisubl
testl
sbb
inc
add
mov
jns
jae
add
add
icebp
lret
das
hlt
xchg
cmc
mov
jp
add
imul
xor
add
mov
mov
add
in
jmp
mov
lcall
ds
jne
xchg
pop
arpl
lods
mov
jle
aam
jecxz
movsl
add
dec
and
aaa
loop
xlat
test
testb
pop
dec
fisubl
inc
add
add
dec
mov
fildll
push
and
mov
ret
clc
int
add
cli
outsb
dec
pop
neg
sahf
mov
shrb
aam
xchg
scas
jno
add
jae
or
add
dec
ret
cmp
in
ret
add
es
fimull
and
mov
mov
add
adc
push
jmp
add
jge
add
mov
add
xchg
in
insl
adc
add
mov
in
imul
dec
xor
add
add
adc
add
mov
stos
lret
call
jmp
add
add
fisubl
insl
fisubs
add
fwait
leave
ret
add
or
mov
ja
lea
fidivrl
mov
cmc
les
int3
sbb
add
popa
add
add
mov
outsb
fiaddl
push
and
add
xchg
mov
add
add
daa
add
cwtl
mov
cmp
mov
mov
lret
rolb
push
movsl
add
dec
adc
into
or
add
push
add
cwtl
xchg
out
xor
push
dec
jge
fnsave
jge
add
inc
add
add
and
mov
sub
ret
add
ja
add
pop
pop
fsubrp
sbb
rolb
or
sbb
int
mov
enter
loope
pop
ljmp
nop
fsubl
add
push
fnsave
or
pop
out
addl
repnz
cmp
repnz
cmc
out
xor
iret
xchg
std
out
dec
addl
and
in
adc
add
lods
mov
xchg
cmpsl
add
lods
mov
jnp
adc
movsl
add
lret
or
cmp
add
add
loopne
inc
add
and
js
notb
nop
and
in
fistps
cmp
lahf
sbb
cmpsl
add
movsl
add
add
push
repnz
repnz
add
outsl
inc
add
inc
add
mov
add
mov
fcoml
add
call
insl
cmp
pushf
sub
mov
fisubrs
pusha
add
or
add
add
xchg
movsl
add
add
add
cmpsb
add
or
in
add
fstps
lods
in
sub
sbb
add
movsl
add
jnp
in
mov
cli
dec
push
icebp
hlt
sub
inc
add
add
in
fnsave
mov
xlat
and
jnp
add
aaa
or
add
or
add
add
add
pop
cmp
out
sbb
push
adc
add
add
add
add
mov
mov
ljmp
add
into
fnstsw
pop
addl
lods
das
rcll
xchg
sbb
lret
in
test
movsb
add
ljmp
popa
add
add
add
add
xor
hlt
jp
xchg
aas
sar
scas
push
test
xor
xchg
xor
std
loopne
ficoml
jne
jnp
jne
aam
loopne
shl
jo
add
popf
mov
movsl
add
fwait
xchg
movl
pop
popf
fcoml
outsl
rep
ret
xor
mov
hlt
inc
add
sbb
dec
lcall
cltd
stos
fmull
mov
sbb
push
sbb
cmp
mov
cld
add
add
adc
add
push
add
add
fldl
add
bound
repnz
imul
add
pop
jg
leave
adc
push
add
adc
adc
sub
movsl
add
imul
aas
cmc
aad
fdivrs
jae
jl
add
data16
sbb
mov
inc
add
add
cld
sub
dec
mov
mov
bound
adc
cltd
les
addb
cmc
pop
jnp
stc
das
rclb
pop
add
push
jmp
add
nop
out
movsb
add
cmp
pop
mov
hlt
ret
add
jl
lcall
movl
add
cmp
and
jnp
add
pop
mov
inc
add
mov
stos
fbstp
xchg
sbb
rolb
cs
sub
inc
add
repz
mov
movsb
add
add
inc
add
addl
stos
adc
add
push
ret
push
cmp
adc
xor
fisttpl
mov
lock
loope
sbb
ret
add
mov
or
loope
cmp
out
imul
sub
add
or
aad
xor
lret
xchg
dec
mov
in
pusha
add
add
add
sbb
js
xchg
lahf
mov
sub
and
add
mov
add
add
mov
add
add
jmp
add
push
loope
jae
push
lahf
in
inc
add
ja
icebp
add
adc
dec
adc
add
fidivrl
mov
stos
add
lods
insl
add
out
int
add
add
popf
pop
add
ss
xor
mov
add
in
inc
add
out
adc
xor
add
cmpsl
add
pop
push
xor
movb
loop
push
outsb
clc
in
in
mov
das
daa
add
add
nop
hlt
popa
add
add
inc
add
add
addb
add
movsb
add
cmpsb
add
push
cmpsb
add
enter
add
out
jg
in
or
popf
aaa
jne
add
scas
psubw
in
insl
rolb
add
cmpsb
add
in
ficompl
jg
jne
int3
lods
lahf
xlat
jg
adc
jmp
test
jnp
cmp
add
icebp
cmp
pop
sbb
add
add
push
add
add
addl
add
lds
xchg
mov
sub
push
pushf
or
ret
jmp
add
jbe
stos
mov
push
add
lcall
pusha
add
movb
jbe
add
int
xchg
dec
mov
mov
jl
add
pop
xor
add
pop
mov
ret
incl
mov
add
mov
mov
cmp
add
ljmp
add
and
sahf
cmc
inc
add
adc
and
addl
lret
shlb
cmp
dec
movsb
add
ret
add
jl
popa
add
inc
add
cmp
and
test
add
inc
add
iret
repnz
shll
add
mov
test
add
add
cmp
jmp
mov
push
add
push
ds
add
add
add
sub
pop
xchg
xchg
in
dec
add
add
add
xor
inc
add
cltd
gs
push
pop
sub
out
imul
incl
add
add
loope
lea
lock
jae
inc
add
inc
add
add
add
fmuls
mov
or
pop
lods
xor
movsl
add
lea
push
push
rorl
add
sbb
and
int3
or
mov
jg
push
or
add
fsubs
movsb
add
add
aad
jl
cltd
and
cwtl
pop
mov
ss
mov
pop
jge
sbb
stos
mul
add
jno
imul
mov
test
add
faddl
inc
add
add
and
inc
add
or
add
mov
mov
mov
es
add
add
incl
repz
add
add
cmp
test
fisttpll
neg
icebp
dec
into
inc
add
jo
add
cmp
sub
cmpsb
add
jae
iret
movl
jb
cmp
pop
dec
icebp
jb
dec
fisubs
add
insl
xchg
push
add
xchg
popf
dec
add
leave
enter
xor
lea
add
jae
add
pop
mov
addb
mov
inc
add
and
movb
add
movsl
add
call
push
pop
test
add
push
sti
nop
incl
add
add
push
mov
add
add
mov
in
imul
repz
add
jmp
add
xchg
add
outsl
push
xchg
pushf
and
pop
enter
add
sub
aad
add
cmp
add
adc
inc
add
into
pop
aam
out
repz
adc
inc
add
push
add
sbb
inc
add
movsl
add
sbb
add
jmp
add
xchg
add
mov
add
add
xor
divl
add
sub
xchg
and
cmp
add
add
add
sub
mov
lods
ljmp
scas
dec
sub
movsb
add
outsb
mov
add
xchg
into
push
insb
loopne
loopne
jle,pn
add
pop
test
arpl
push
ret
add
add
push
add
push
pop
incl
add
in
mov
xchg
aas
inc
add
adc
xor
add
out
add
test
pop
lcall
lds
mov
test
incl
add
add
inc
add
mov
add
mov
call
dec
push
adc
out
fwait
and
fsubs
jmp
leave
dec
push
cmpsl
add
add
aad
mov
scas
xchg
xchg
mov
mov
mov
add
shll
pop
add
aas
fstpt
lret
add
pop
pop
cmp
out
jle
add
add
add
add
out
popl
mov
mov
add
add
add
addb
rolb
add
push
mov
add
jb
movsb
add
add
loop
or
fadds
add
jge
xchg
xchg
mov
out
inc
add
mov
pusha
add
push
aad
add
repz
inc
add
push
dec
and
addb
add
cmp
add
fnstsw
arpl
lahf
fcoms
or
add
dec
mov
ret
add
test
add
mov
add
add
and
mov
sub
mov
and
or
add
add
cwtl
lret
rorl
add
add
jmp
push
or
movb
clc
or
add
sub
mov
fwait
add
add
mov
roll
addl
add
fst
push
int3
push
cmpsl
add
xchg
dec
dec
sahf
aam
sbb
add
add
loop
jbe
add
stos
addb
adc
add
inc
add
add
imull
sbb
ficoml
jbe
or
mov
adc
imul
out
ja
add
add
add
dec
fiaddl
add
sub
pop
jle
add
aaa
cld
test
lret
push
push
insb
inc
add
add
jl
add
cmpsb
add
fidivrs
in
xchg
test
mov
fidivrs
ret
add
movsl
add
xor
ljmp
cmp
add
add
dec
cwtl
adc
sti
test
movsl
add
add
add
push
or
add
add
add
mov
lods
sti
inc
add
loope
jno
dec
lods
pop
addl
add
mov
fsubrp
xchg
sbb
test
addr16
add
lock
roll
sbb
add
add
add
add
add
push
jmp
add
add
fnstcw
add
addl
add
push
adc
add
jle
jmp
push
add
nop
sti
and
loopne
lock
mov
add
dec
in
pop
xchg
inc
add
xor
dec
dec
ss
loopne
add
add
push
popa
add
add
inc
add
pop
ret
inc
add
and
fildl
fbld
mov
call
xor
je
xchg
lahf
imul
mov
push
and
add
add
in
push
cli
movsl
add
xchg
xchg
push
ja
imul
push
iret
xor
add
pop
incl
dec
incl
cmp
add
push
add
add
fnstcw
jns
adc
pushf
fsubs
add
add
add
jmp
cmp
add
movsb
add
add
add
add
js
xchg
repz
add
mov
mov
add
shll
pop
and
add
add
sbb
push
xchg
xor
leave
outsl
mov
mov
addl
mov
adc
gs
test
cmp
add
dec
into
and
bound
rclb
add
mov
adc
add
adc
icebp
sarl
jmp
test
mov
xchg
in
roll
rorl
je
jmp
add
mov
mov
les
add
addl
ret
bound
nop
mov
push
xchg
addr16
adc
insb
xchg
jle
sbb
jno
arpl
rcll
in
movl
add
inc
add
jl
faddl
add
adc
repnz
add
add
mov
push
add
mov
push
mov
loopne
sbb
sub
int3
imul
and
filds
push
into
mov
divb
roll
data16
hlt
cmpsb
add
add
das
inc
add
jmp
push
add
add
jmp
add
add
or
and
adc
enter
inc
dec
add
add
sbb
repz
fwait
cs
mov
jmp
add
add
add
repnz
cmc
xchg
std
rcr
jns
push
stc
xor
mov
add
pop
mov
dec
dec
jns
push
or
xor
add
adc
lds
sub
rolb
add
add
pop
add
addr16
inc
add
inc
add
jno
popf
add
add
sub
aaa
sbb
lret
fisttpll
addl
pop
movsl
add
xchg
roll
add
cmp
mov
add
shr
ret
call
pop
add
inc
add
xor
add
adc
nop
call
pushf
mov
add
ds
push
ja
idiv
cli
ds
in
lea
shr
push
or
nop
add
mov
push
ret
xchg
mov
jne
mov
xlat
xchg
pushl
addl
enter
jne
rolb
pop
fmull
call
jae
out
popa
add
add
icebp
leave
jno
dec
mov
add
add
add
add
adc
cltd
lret
jns
push
mov
loop
popf
movl
pusha
add
jne
add
into
xchg
sbb
add
lea
cld
sbb
inc
add
ret
add
in
nop
jmp
add
lock
mov
fidivl
movsb
add
lods
outsl
push
cmp
addl
lcall
inc
add
jne
jmp
add
add
fmul
aad
cmp
or
jb
rolb
add
add
add
pop
js
or
adc
add
lret
mov
add
add
add
add
cld
xchg
ljmp
cmp
adc
add
pop
nop
fstps
adc
add
stc
jl
add
stos
jns
les
bswap
add
add
push
xchg
xchg
or
clc
jmp
add
mov
and
push
out
cmp
dec
cmpsb
add
dec
push
test
out
hlt
jge
sub
add
pop
cmp
jo
mov
add
shrl
in
popf
nop
adc
lahf
iret
xlat
int
pop
daa
add
xchg
loopne
repnz
leave
rolb
mov
test
inc
add
add
fimuls
outsb
lret
push
in
push
sub
add
add
lret
imul
add
add
pushf
mov
inc
add
push
mov
add
sbb
jae
add
js
add
ljmp
sbb
aad
mov
test
jae
add
cmp
cmp
push
shrb
ja
add
sbb
adc
adc
or
jg
arpl
lods
rcl
enter
add
add
roll
add
mov
cmpsb
add
popl
add
jle
jbe
sub
add
add
adc
mov
mov
data16
movb
add
push
cmpsl
add
cmp
bound
fwait
bound
sbb
xchg
aam
add
add
mov
push
sbb
jbe
test
fldcw
add
rolb
add
add
and
add
in
dec
inc
add
sbbb
add
add
imul
aam
mov
jne
lods
loop
roll
popa
add
add
add
add
fcmovnbe
jle
add
clc
lock
add
and
fbstp
enter
and
push
les
pop
int3
dec
inc
add
add
add
add
movl
xchg
jge
loope
sahf
mov
arpl
lock
add
add
add
add
xor
das
aad
mov
imul
scas
test
sbb
pop
cs
mov
add
daa
add
add
ja
popf
lcall
addl
cwtl
les
mov
pop
dec
add
add
add
inc
add
jl
push
mov
mov
cmp
jne
push
ret
out
add
add
add
imul
jne
xchg
int
mov
push
ss
bound
pop
daa
add
loopne
ja
jnp
add
cmp
test
jne
mov
push
push
mov
call
add
add
or
int3
test
rolb
cmp
movsb
add
add
add
les
lcall
pop
push
dec
jecxz
push
pushf
insb
mov
add
add
mov
add
add
inc
add
xor
cmp
jle
inc
add
ret
add
movl
addl
xor
add
add
addl
xor
jmp
adc
push
adc
add
add
icebp
xchg
call
jo
add
add
add
or
mov
jmp
mov
mov
add
add
imul
add
stos
sub
jecxz
ret
add
ret
add
lock
dec
pusha
add
add
add
movl
js
add
add
inc
add
bound
jg
adc
jmp
mov
mov
outsb
push
add
mov
add
xchg
cmpsl
add
inc
add
add
jl
add
add
add
aad
mov
je
incl
add
add
dec
push
in
push
jge
mov
and
lods
cmpsl
add
add
add
add
adc
ret
jmp
js
call
add
jb
add
aas
pop
add
xor
lods
xor
add
addl
mov
add
add
inc
add
add
add
lods
pop
push
inc
add
fistpll
jnp
outsb
rcr
insb
add
fldenv
lret
in
aam
je
add
add
insl
fsubr
js
rcrb
pop
inc
add
add
hlt
push
enter
mov
push
jp
mov
movb
mov
add
or
add
add
push
mov
sbb
sub
lods
jp
aas
or
add
add
mov
mov
test
mov
jecxz
insb
mov
jo
in
adc
rolb
pop
addl
add
add
adc
cld
mov
sub
add
jne
fstpt
add
iret
dec
push
xor
and
cmp
add
sahf
aad
movsl
add
add
add
add
in
adc
dec
mov
add
imul
and
add
ja
cli
push
add
mov
add
inc
add
add
and
inc
add
or
fwait
mov
add
add
int
add
popa
add
call
jmp
xchg
add
shrb
dec
in
sub
inc
add
es
je
push
repz
call
add
cmp
adc
inc
add
push
jo
adc
call
add
pop
ret
add
xor
add
mov
jmp
add
push
negl
xor
mov
jg
pop
adc
inc
add
mov
sub
out
add
add
add
fdivl
fdiv
insl
outsl
and
mov
jl
inc
add
out
xchg
mov
addl
push
mov
xlat
jne
add
adc
add
add
xor
jb
mov
add
mov
sub
add
add
mov
insb
mov
divb
sbb
add
add
add
dec
into
mov
sub
mov
xchg
push
pop
outsl
add
addb
out
enter
in
movaps
movb
add
push
add
add
inc
add
sbb
add
add
mov
sub
int
add
add
repz
loop
jecxz
hlt
std
mov
imul
and
adc
jb
add
sbb
add
popf
xchg
push
push
pop
sub
add
push
jmp
add
add
mov
cmp
add
add
inc
add
cmp
insl
in
roll
les
push
jno
push
iret
clc
mov
in
cmc
add
add
add
xor
add
xlat
data16
test
rclb
fbstp
add
cmp
add
aas
cmp
pop
into
movsl
add
into
push
jb
and
addl
add
mov
sti
out
sub
add
aam
and
adc
add
add
add
push
jecxz
out
push
inc
add
push
out
push
jp
xchg
sub
xchg
inc
add
shrl
jbe
or
cmp
add
stc
xchg
movswl
add
lds
xor
add
push
mov
incl
xchg
add
or
insl
sbb
jns
sti
iret
iret
mov
add
jno
scas
jne
cmp
jae
jmp
pop
cmp
add
xor
std
sub
add
add
fsubp
add
fcmovb
add
push
jns
mov
xchg
mov
add
aam
mov
add
add
inc
add
inc
add
out
add
mov
jmp
add
lret
std
add
add
cltd
jno
push
sub
xchg
add
or
push
xlat
in
cmp
addl
cmpsb
add
pop
lock
ljmp
lds
outsl
out
sbb
mov
add
add
add
mov
push
ret
add
idivl
mov
addr16
movsb
add
add
push
pusha
add
add
cmp
and
mov
add
add
jns
inc
add
add
add
aaa
push
pop
xor
sbb
test
incl
add
add
std
mov
add
scas
cs
rolb
repnz
xchg
xchg
mov
add
in
jo
xchg
mov
sub
sbb
add
add
add
push
add
data16
jbe
or
add
add
fisttps
and
add
pop
pusha
add
xchg
jno
test
add
mov
in
add
or
add
les
cltd
lods
cmp
pop
addb
xchg
mov
sub
jmp
add
add
add
int3
movq
mov
push
mov
mov
iret
pop
jnp
and
sub
mov
push
add
add
test
and
ffreep
add
dec
enter
ja
mov
fmulp
pop
fwait
push
add
xor
lahf
push
add
inc
add
daa
add
lock
fstpl
add
addb
push
add
cmp
call
xchg
inc
add
add
aam
and
xchg
mov
mov
popf
in
xchg
pop
xchg
sbb
ja
ljmp
add
ret
adc
movb
sbb
xor
ret
add
sbb
dec
icebp
mov
in
lea
mov
test
jg
mov
add
jno
add
add
fmull
or
lret
pop
loopne
mov
loopne
ljmp
xchg
add
add
add
movsb
add
pop
mov
pushf
mov
add
sbb
popa
add
jge
or
dec
push
or
add
xor
cmp
mov
in
push
ret
ljmp
add
aas
ljmp
mov
add
xchg
pop
cld
in
les
aas
sbb
mov
add
out
repnz
jne
add
enter
add
mov
das
cmc
fwait
dec
dec
or
aas
cld
push
lret
push
sbb
pop
add
sbb
popf
pushf
jne
cmpsb
add
ror
insb
pop
push
mov
lret
flds
add
loope
ja
insl
push
stos
xor
sub
add
mov
sbb
cld
mov
clc
repz
add
add
pop
xchg
shlb
pop
or
or
add
ds
lock
in
fs
add
jp
pop
pop
lret
std
out
sbb
inc
add
int3
inc
add
stc
xchg
push
insl
or
add
outsb
jge
loope
xchg
data16
add
sub
test
sub
adc
inc
add
mov
fcomp
xchg
push
lock
test
loop
mov
inc
add
cmp
sub
add
rol
add
add
cmc
push
jl
add
add
adc
jnp
icebp
add
mov
add
mov
jns
add
add
add
fbstp
mov
inc
add
jl
add
add
scas
inc
add
into
push
cli
push
icebp
jmp
push
out
add
push
repz
jb
adc
add
add
fnsave
add
mov
insl
addb
jno
adc
shll
add
sbb
add
push
cmp
rolb
add
jmp
sbb
and
adc
add
sbb
adc
sub
add
pop
adc
shrl
mov
or
or
cmc
test
movl
add
ret
add
addl
or
aad
push
jno
push
or
arpl
jb
aam
addb
add
nop
xlat
ret
jecxz
xor
sbb
jb
add
insb
jmp
mov
push
add
adc
fwait
jo
sbb
lahf
add
add
and
add
add
dec
lds
pushf
mov
movl
push
jmp
add
lea
stos
jmp
ljmp
xlat
leave
pop
fsubl
das
jae
imul
pop
mov
pop
mull
data16
test
out
insl
adc
add
add
add
fdivrp
ret
add
add
add
mov
lods
sar
lock
div
roll
add
out
clc
pop
and
test
push
add
outsl
pop
in
lock
jnp
dec
arpl
xor
adc
or
bound
outsl
into
jno
xor
movsb
add
add
and
popf
xchg
cmc
sub
ljmp
outsl
je
jmp
add
lgs
add
mov
or
sahf
addb
add
pop
jb
mull
aam
add
stos
aaa
adc
data16
add
in
cld
sbb
pop
test
or
add
out
cli
rolb
adc
cmp
call
ljmp
std
cltd
pop
leave
into
jno
mov
inc
add
lock
or
sti
stc
clc
out
add
test
mov
add
mov
addb
mov
add
add
add
stos
mov
add
mov
imul
ret
add
adc
mov
cmc
imul
popf
pusha
add
cmp
loop
sub
pop
add
and
stos
icebp
leave
sti
test
pusha
add
stos
testl
test
mov
add
jns
jno
add
test
outsl
sbb
push
inc
add
xlat
sub
loope
or
inc
add
dec
or
xlat
cltd
mov
mov
mov
lret
add
add
jnp
add
adc
popa
jmp
add
add
add
insb
arpl
dec
mov
and
dec
jo
xchg
pop
push
push
sbb
movsl
add
mov
repz
jo
out
aad
mov
cld
mov
es
jecxz
push
mov
jl
sub
std
test
hlt
push
push
jmp
sbb
adc
xchg
icebp
inc
add
sub
jno
fsubl
outsl
into
mov
add
cmp
lods
xchg
mov
cmp
add
bound
add
loope
jmp
addr16
add
cmp
roll
xchg
psubsb
dec
dec
inc
add
add
leave
rorb
js
add
xchg
mov
dec
jae
add
lock
nop
sahf
and
lds
adc
rep
jmp
push
add
add
push
add
add
push
test
pop
mov
add
ds
xchg
jo
add
in
and
jp
movsl
add
add
stc
jae
add
add
add
add
add
outsl
rcll
loopne
cmp
jmp
addb
add
mov
incl
cmp
add
dec
test
adc
popl
add
add
fucomip
bound
lahf
mov
xchg
fsubr
clc
dec
xor
ds
aad
lcall
add
push
lds
testl
jge
add
test
xor
hlt
xchg
jecxz
xor
push
lods
cmp
adc
sbb
cmp
setp
loope
repz
fsubrp
cmp
add
add
add
sbb
add
std
sbb
mov
lods
xchg
cmp
addl
add
in
push
or
movsl
add
addb
cmp
lcall
add
out
sub
add
mov
jmp
add
add
add
jne
jmp
push
imul
add
fdivr
jmp
jmp
add
jnp
in
jne
fnstsw
les
outsb
and
sti
pop
and
sub
jmp
add
push
push
add
add
add
push
add
cmp
pop
repz
add
dec
cwtl
dec
das
dec
pop
stos
pushf
push
test
mov
incl
add
add
push
mov
adc
addb
add
lds
shl
repnz
shll
add
clc
mov
add
add
xlat
addl
insl
fisubrl
call
ja
add
clc
out
jg
fwait
out
dec
pop
xor
mov
int3
aas
sbb
jae
mov
add
mov
mov
jo
sub
into
mov
scas
outsb
movl
add
scas
out
fmuls
pop
or
jae
and
xchg
add
add
add
pop
lods
movsb
add
jb
and
add
cld
xor
mov
cmp
dec
mov
xor
push
or
adc
xchg
dec
jl
repnz
add
insb
add
sub
cmp
xor
mov
add
dec
push
jp
cli
test
xchg
clc
or
xchg
pop
add
push
jb
popa
add
mov
jbe
iret
mov
movb
add
inc
add
mov
add
jge
addl
jo
mov
ffreep
add
jnp
pop
inc
add
mov
roll
pop
jecxz
call
and
incl
push
add
add
mov
xchg
pop
push
add
add
lahf
cwtl
mov
push
xor
jb
xor
inc
push
ret
add
cmp
add
add
jo
add
out
inc
add
push
sub
cltd
sub
push
add
int3
push
out
in
mov
push
enter
mov
add
addl
add
sub
jg
jb
mov
add
insb
fldl
add
enter
stc
int3
mov
xchg
xor
notl
in
sub
addb
add
daa
add
bound
bound
pop
mov
inc
add
xor
mov
mov
add
testb
sub
addl
push
add
imul
cmp
pop
add
cltd
fs
cmp
mov
mov
add
fcmovbe
leave
call
mov
addl
pusha
add
add
arpl
insb
sbb
push
mov
aas
mov
testb
outsb
dec
mov
out
clc
movsb
add
adc
sbb
push
sub
xchg
jmp
add
loope
cmp
out
in
stos
imul
lock
adc
push
sbb
jle
lods
jge
decb
add
xchg
movsb
add
rorb
lock
cld
push
adc
dec
lret
or
push
into
dec
fs
testb
add
add
sub
mov
call
adc
ljmp
push
cmp
inc
add
roll
movsl
add
and
xlat
jle
add
add
sub
add
jle
add
aad
pop
je
mov
popf
xchg
mulb
add
xchg
scas
movl
sbb
in
adc
les
push
cmpsb
add
push
jns
push
mov
shrl
lcall
add
test
dec
mov
add
mov
push
js
movsb
add
nop
sarl
ljmp
cmovno
ret
inc
add
push
add
mov
fdivrs
pop
lret
add
inc
add
nop
add
push
nop
and
out
dec
adc
add
cmp
rcrl
mov
nop
or
sarb
insl
adc
add
jae
stos
sub
xchg
nop
fstl
add
or
cmp
int3
test
adc
pop
mov
add
add
roll
add
add
add
jmp
aas
lods
lahf
lret
call
push
sar
incl
add
pop
add
jns
cmc
outsb
and
push
xchg
fiadds
add
mov
add
repz
in
mov
inc
add
or
pusha
add
add
jmp
add
add
dec
in
repnz
outsl
jno
in
sub
daa
add
test
outsb
out
loop
cmp
push
inc
add
out
mov
jecxz
popa
add
add
lret
mov
movsl
add
adc
add
pop
faddl
xor
jmp
add
add
add
mov
ds
add
sbb
add
add
mov
pop
xchg
repnz
and
dec
dec
adc
sub
adc
insb
cmp
pop
jmp
int
int
add
popa
add
adc
sti
mov
incl
int
add
pop
in
test
push
rolb
add
add
add
push
icebp
mov
add
add
lahf
sub
aas
ret
loop
mov
lock
lds
pop
jbe
pop
jmp
mov
add
out
xchg
jae
add
flds
add
push
cs
push
pop
mov
ja
add
xor
xor
pusha
add
das
cs
roll
add
cmp
add
add
and
push
xor
sbb
add
movsb
add
loop,pn
cs
lahf
mov
cmp
inc
add
xchg
ret
add
xchg
iret
xor
add
or
add
imul
add
fdivrl
fildl
jle
fistps
sub
mov
add
xor
outsb
xlat
lea
scas
cmp
xchg
int
dec
xchg
mov
in
push
fisubrs
add
add
add
mov
inc
add
add
aas
outsl
sti
inc
add
pop
ja
add
cltd
add
cltd
fildll
imul
out
cmp
imul
sbb
xor
test
stos
stc
scas
lcall
mov
ficoms
addb
fidivl
in
aaa
xor
sub
ja
mov
push
add
add
push
add
xchg
xor
add
shlb
add
xchg
test
sub
jbe
add
bound
lcall
add
jmp
push
add
add
add
adc
add
dec
push
ret
push
add
add
inc
add
add
add
xchg
movb
into
pop
int
stc
outsb
pusha
add
test
push
sbb
add
cmpsb
add
fwait
pop
pop
push
sub
add
xchg
or
ret
in
sub
add
push
mov
dec
and
mulb
add
sub
negl
xor
xor
jno
add
cmpsl
add
cltd
out
sbb
add
popa
add
jle
xchg
push
sbb
mov
les
stos
sbb
mov
jmp
add
add
add
stc
addb
add
dec
sub
add
adc
cs
mov
inc
add
add
add
add
arpl
popa
add
sub
push
out
into
or
lea
push
lahf
push
mov
or
add
sahf
in
incl
pop
nop
push
add
add
add
add
clc
add
add
add
add
les
push
les
push
js
out
mov
add
add
and
movsb
add
xchg
push
add
add
mov
xlat
cmp
test
pop
add
adc
add
add
add
pushf
xor
add
movsb
add
cld
sbb
idivb
add
pop
cmp
mov
add
enter
add
fsubr
pop
adc
or
test
add
add
dec
das
mov
xlat
pop
pop
scas
mov
and
test
mov
insb
iret
mov
xor
cs
and
add
add
dec
mov
mov
add
mov
push
lods
cmp
cs
dec
add
push
mov
adc
add
push
daa
add
cmp
xor
iret
cli
adc
rcrl
addb
adc
and
pop
addb
add
sbb
shlb
inc
add
dec
cmp
inc
add
mov
pushf
into
rclb
push
mov
lods
or
out
fbld
test
les
nop
stos
js
das
cltd
dec
cli
icebp
iret
jg
add
add
inc
add
dec
out
adc
add
pop
daa
add
dec
or
xchg
jo
cltd
xchg
prefetch
xor
add
pop
repnz
sub
add
or
loop
test
or
add
mov
and
cmpsb
add
add
stc
fildll
add
addl
jbe
add
sbb
outsl
and
ficoms
shl
add
add
enter
in
cwtl
dec
pop
mov
roll
mov
add
xor
or
gs
add
add
add
inc
add
sub
lock
push
cltd
mov
add
movd
jge
sbb
xchg
fisubrl
and
add
mov
adc
add
outsl
inc
add
test
aam
cmp
add
in
movsl
add
jb
add
pop
cmpsl
add
sub
mov
add
ss
outsl
pop
jne
add
xchg
vpmacssdd
jmp
fsubl
add
sub
sbb
aaa
pop
xchg
cli
testb
and
bound
cmp
inc
add
mov
sbb
mov
add
pop
push
xorps
daa
add
add
jne
sub
pop
popa
add
add
add
add
bswap
addl
add
cld
aam
mov
push
popa
add
push
add
mov
push
lcall
fildll
add
xor
cli
jl
pop
jp
out
inc
add
addb
cmp
mov
sub
add
add
jle
dec
jo
mov
lods
addb
fisubrs
repz
add
add
mov
loope
call
dec
push
pop
lret
pop
xchg
insb
fistl
or
nop
mov
add
add
add
ficoms
dec
inc
add
and
pop
pop
add
sub
add
add
loope
dec
cmp
pop
shrl
ficoms
movl
add
je
das
jae
sub
test
pop
add
es
bnd
xchg
leave
mov
add
cld
stos
pop
repnz
mov
lahf
dec
leave
addb
pop
adc
add
adc
pop
sbb
pop
add
add
xchg
cwtl
mov
add
fnstcw
pop
cmp
push
add
mov
fmuls
mov
sbb
aad
in
dec
pop
dec
dec
lahf
not
pop
hlt
push
out
sbb
mov
pushf
addr16
outsb
inc
add
inc
add
add
sarb
adc
out
inc
add
mov
sub
cmp
push
addl
movb
mov
add
scas
xor
lcall
add
add
add
add
xor
add
sbb
add
clc
outsb
push
mov
call
push
into
repnz
pop
test
addl
adc
add
dec
add
add
push
shll
add
stos
or
call
sbb
xchg
movb
call
mov
add
movb
rolb
add
lock
mov
add
test
ret
add
add
add
add
add
dec
icebp
daa
add
add
add
mov
push
add
add
lods
jg
loope
stc
sub
nop
fldenv
pop
rolb
lret
sub
mov
push
add
add
add
addb
pushf
dec
jbe
enter
inc
add
arpl
enter
xor
mov
add
inc
add
adc
add
add
mov
jns
sub
inc
add
movsl
add
add
sti
mov
insl
rclb
jns
arpl
pop
push
push
fimull
negl
xor
add
mov
and
out
sub
dec
add
add
sub
sbb
add
sub
cmp
add
addb
inc
add
jmp
call
mov
or
pop
popf
or
and
je
aaa
loopne
or
add
add
xor
add
add
cmp
sbb
dec
dec
fprem1
lds
ret
mull
sbb
inc
add
stos
jno
add
js
add
sub
adc
fmuls
xchg
pop
roll
ret
add
dec
test
ret
xor
cmpsb
add
in
jg
xor
lods
into
xchg
pop
and
cmp
adc
push
sti
jns
inc
add
add
data16
movl
into
and
not
sbb
add
fisttpll
flds
and
pop
mov
mov
mov
cmpsb
add
add
fs
ficoml
mov
add
xor
and
imul
add
add
aas
mov
mov
addb
add
lds
mov
xchg
mov
add
mov
add
mov
pop
insb
xor
push
cli
or
add
mov
add
jmp
add
jo
imulb
in
jne
jb
jecxz
or
daa
add
fbstp
mov
jno
dec
mov
dec
das
je
add
adc
out
push
and
dec
aas
adc
dec
mov
add
sbb
out
dec
inc
add
inc
add
aas
adc
loopne
stos
out
mov
add
or
movsb
add
xor
fildll
xchg
ljmp
out
repz
lret
jne
add
dec
dec
nop
mov
sub
and
mov
addb
push
clc
addb
iret
loope
inc
add
add
add
imulb
iret
push
scas
leave
sub
std
cmp
call
mov
stc
movb
push
fdivs
push
add
add
sub
dec
adc
add
pop
test
add
add
jg
add
scas
test
add
inc
add
jno
add
dec
add
add
outsl
mov
mov
cs
rolb
push
sbb
bound
cmpsl
add
mov
push
jo
mov
add
bound
ds
xchg
test
repnz
xchg
ds
jp
adc
add
pop
mov
xchg
stos
int3
sub
movb
or
xor
pop
or
lods
scas
ss
add
cmp
jge
add
aas
sbb
xor
add
xchg
sub
daa
add
add
add
and
std
xchg
mov
add
inc
add
xchg
jnp
pop
addb
add
int
or
add
mov
mov
xchg
stc
and
iret
arpl
mov
and
mov
lcall
aad
xchg
adc
fisttps
ret
add
dec
dec
xor
xor
add
mov
ljmp
add
sub
cmp
mov
and
lret
dec
lods
sub
dec
iret
inc
add
add
repz
popa
add
cmp
cmpsb
add
add
sub
sub
jb
in
xor
cs
add
lea
add
adc
add
add
add
add
add
jbe
inc
add
mov
insl
mov
hlt
cmp
jl
mov
out
leave
inc
add
imul
add
add
add
xchg
dec
adc
sbb
insl
repnz
xchg
aam
movb
inc
add
add
bound
mov
add
add
mov
aam
add
int3
stos
sbb
add
movb
add
add
inc
add
dec
outsl
fistpl
add
mov
dec
inc
add
loop
ss
and
std
push
mov
jae
mov
add
movsb
add
mov
add
and
add
int
add
data16
add
outsb
dec
jne
scas
sub
add
mov
xchg
lret
addl
xor
add
add
or
add
repnz
add
jne
push
inc
add
testl
push
jns
and
mov
loopne
out
lcall
int
out
mov
int
push
add
mov
mov
fiadds
add
addl
push
push
lds
lea
aas
sahf
add
xor
cmp
in
dec
pop
cmp
cld
pusha
add
and
add
add
add
popf
fwait
pop
inc
add
jno
xor
cld
imul
xor
xchg
inc
add
xchg
pop
jl
xchg
add
mov
add
sahf
dec
xor
push
push
lahf
decl
loop
outsl
test
pop
push
inc
add
add
cld
push
pop
cmpsl
add
add
cmp
fwait
les
icebp
mov
into
inc
add
lds
sub
pop
dec
scas
nop
test
sub
cmp
shlb
in
xor
mov
mov
push
add
div
lods
xor
stc
add
pop
fstpl
adc
jbe
out
mov
js
mov
mov
aad
repnz
rolb
mov
sub
aas
mov
pop
lahf
xchg
movb
pop
in
xchg
sbb
pop
sub
add
aas
push
push
push
add
sti
xor
add
pop
push
movsl
add
mov
add
xchg
fnsave
add
add
push
sub
add
add
add
fsub
add
lcall
or
dec
addb
adc
cltd
into
cmp
add
jnp
add
and
int
add
shll
lea
jg
sub
repnz
mov
insl
aad
sub
pop
pushf
jno
add
xchg
hlt
sbb
mov
dec
lret
jno
stc
dec
or
add
movsl
add
add
mov
add
and
pop
cmp
test
inc
add
mov
add
in
pop
hlt
xchg
mov
inc
add
dec
xor
jb
outsl
or
inc
add
add
jle
xchg
push
xchg
stos
sarb
or
xchg
dec
insl
mov
add
ss
mov
addb
add
add
add
jge
pop
aaa
addl
in
fimuls
add
add
push
js
repnz
jle
fwait
fwait
mov
add
addl
lret
nop
add
add
add
shlb
addb
jl
add
jg
ja
add
lods
out
xor
add
mov
hlt
cmp
sahf
jb
lds
inc
add
cmpsb
add
aam
aas
sub
hlt
lcall
add
add
movl
push
icebp
je
jb
les
mov
xlat
bound
inc
add
dec
push
add
cmp
movl
scas
pop
adc
inc
add
fsubs
insb
pop
pop
data16
sarb
add
sbb
icebp
stc
in
cmp
mov
aas
jbe
add
cld
add
aas
jl
add
add
pop
cmp
loop
pop
dec
aaa
mov
push
into
out
in
out
loopne
loopne
fcoms
add
inc
add
mov
xor
add
aas
js
out
int
cmp
push
pop
mov
add
mov
cmp
rolb
movb
add
add
lea
sub
push
jo
addl
add
add
mov
xchg
add
dec
fcmovb
add
aas
cmp
or
das
enter
out
ss
lcall
xchg
mov
add
test
add
add
add
pop
scas
dec
push
sbb
xor
add
enter
imul
scas
jp
sub
add
push
cwtl
push
out
loope
jne
js
add
add
push
push
addr16
mov
loopne
adc
jno
add
inc
add
jbe
add
pop
leave
outsb
add
add
mov
aad
push
add
add
aam
aas
enter
ss
mov
dec
mov
add
jnp
loop
imul
jge
xchg
js
push
adc
add
test
sub
add
data16
add
ss
mov
add
add
fdivs
cmp
cli
cmp
addl
jnp
sbb
loopne
cli
xchg
mov
add
jl
xchg
xchg
inc
add
add
xor
add
add
ljmp
inc
add
add
sti
jl
add
jmp
mov
add
sbb
std
pop
ret
add
rorb
mov
loop
mov
lret
je
cmp
cmc
jns
add
jle
dec
loop
adc
pop
rolb
push
mov
dec
jg
xor
add
imul
int3
or
add
nop
pop
xchg
mov
in
and
mov
call
add
mov
xlat
inc
add
push
lret
pop
lea
mov
xchg
mov
bound
pop
data16
add
add
mov
add
sbb
add
in
mov
push
mov
fsubs
add
add
add
jecxz
pop
inc
add
pop
outsl
mov
xor
or
leave
movsb
add
pop
inc
add
scas
cli
movsl
add
push
fstl
xor
or
movsl
add
ljmp
iret
or
pop
mov
popf
mov
add
add
testb
clc
mov
xchg
jno
das
in
test
pop
ret
in
mov
jp
pop
add
enter
sbb
pop
icebp
cmp
inc
add
fldl
or
jp
add
lods
pop
xchg
movb
in
and
push
add
pop
into
insb
sub
pop
loopne
sbb
add
aas
std
lock
fstpl
mov
sub
add
and
xor
lahf
stc
mov
mov
arpl
aas
hlt
inc
add
add
add
jmp
add
add
idivl
popf
sub
es
daa
add
sti
mov
mov
sub
add
and
sti
cmp
cmpsb
add
iret
mov
sarb
lea
mov
add
push
sbb
add
mov
pushf
adc
stc
lods
std
data16
aaa
or
cmc
pop
inc
add
mov
test
mov
inc
add
add
repnz
jg
add
add
dec
jp
add
pop
add
add
arpl
lods
adc
inc
add
inc
add
aad
outsl
pop
aad
xor
mov
lea
inc
add
jp
add
repnz
pusha
add
xchg
loope
movsl
add
ds
outsb
mov
in
jns
mov
lcall
add
add
add
add
push
pop
and
jo
in
or
jbe
add
mov
pop
mov
daa
add
lock
mov
je
xor
add
add
add
popa
add
int
add
and
data16
add
pop
add
sahf
xor
add
add
cmp
push
cltd
xor
xchg
mov
scas
fidivs
add
xor
cmp
filds
mov
rorb
lcall
inc
add
add
addb
add
add
cli
inc
add
add
divl
add
add
add
and
cmp
mov
xlat
addb
mov
xchg
or
cmpsl
add
adc
roll
inc
add
test
add
loope
ds
imul
cld
mov
and
and
mov
and
inc
add
scas
rolb
hlt
stos
lahf
decl
xchg
add
testb
mov
enter
add
add
cmc
push
je
add
fisttps
sbb
or
add
imul
add
xor
or
add
add
add
xchg
add
add
adc
jbe
push
inc
add
add
add
ljmp
add
fwait
jge
add
add
lea
xchg
mov
pop
sub
dec
lcall
push
pop
loop
inc
add
sahf
jecxz
mov
add
sub
mov
mov
inc
add
js
add
in
loopne
fsub
add
mov
add
insl
push
cmp
scas
mov
inc
add
push
leave
inc
add
mov
add
sub
dec
jmp
add
add
add
jns
add
cmp
cmp
add
ds
push
lret
xchg
sub
imul
push
mov
fwait
cld
loop
or
or
add
notl
into
inc
add
ret
add
add
add
add
out
cmp
dec
inc
add
rolb
sub
mov
repnz
mov
add
xlat
push
add
add
jnp
add
push
push
or
push
push
stos
and
out
loop
in
xor
dec
dec
adc
test
or
cld
loop,pt
popf
pop
mov
xor
mov
cmc
data16
aam
in
pop
pop
sbb
dec
mov
lret
jae
add
jne
imull
add
add
test
mov
add
cmp
add
or
movb
mov
mov
insb
fildl
je
les
pop
add
mov
movl
sub
into
fistps
ss
mov
add
movsl
add
add
add
xor
mov
arpl
push
test
jg
pop
or
in
in
cli
scas
scas
xor
ret
add
outsb
sbb
add
add
in
pop
in
push
movswl
add
fidivl
sub
pop
add
lea
movsl
add
add
push
notb
add
in
fldenv
mov
or
outsb
into
xor
sbb
mov
hlt
mov
cmp
dec
cmpsb
add
pop
jo
pop
lods
and
pop
mov
adc
daa
add
mov
or
add
sbb
test
addb
repnz
add
add
add
movl
and
xor
add
daa
add
dec
or
add
das
rolb
divl
cmp
cmp
adc
add
test
in
add
or
inc
add
sbb
xlat
or
fnsave
outsb
dec
repz
add
xchg
test
test
test
cmp
add
xchg
ja
add
sbb
add
sahf
rolb
push
cmp
data16
cmp
sub
lods
test
addb
sub
in
lahf
jl
add
aas
out
push
cmc
jmp
outsb
mov
movl
mov
out
xchg
nop
mov
add
jno
add
icebp
je
addb
mov
add
adc
in
push
mov
ficompl
rol
add
push
pop
add
push
aad
adc
mov
add
pop
addb
data16
add
add
add
add
je
add
es
jne
add
dec
out
pop
dec
lock
rorb
xor
jne
xchg
lret
push
hlt
outsb
sldt
add
imul
pop
sbb
add
mov
inc
add
fucomp
dec
pusha
add
push
xchg
pushf
add
aam
push
cmp
add
pop
sbb
test
test
dec
shll
add
cmp
add
movb
dec
fidivrs
mov
addl
add
addl
iret
leave
test
push
mov
mov
inc
add
pop
inc
add
add
fdecstp
in
jae
xchg
jno
xor
cld
out
in
add
jl
add
scas
lahf
xor
inc
add
add
lcall
out
repnz
add
cltd
scas
add
add
mov
enter
clc
dec
stos
addb
add
adc
push
add
xchg
cli
inc
add
xchg
xlat
mov
mov
pop
scas
mov
movsl
add
add
je
push
add
add
scas
and
mov
stc
scas
int
add
clc
jbe
push
add
pop
mov
clc
push
sub
insb
fisttps
lahf
or
adc
add
add
mov
xor
pop
or
movb
add
jp
mov
arpl
push
xchg
jl
xor
adc
add
movsl
add
mov
adc
mov
pusha
add
add
add
ja
pop
shll
mov
aas
and
pop
adc
cmp
mov
mov
add
nop
sbb
push
leave
cli
ret
push
popf
insl
push
or
mov
and
fistps
aad
add
into
in
pop
xor
sub
and
dec
test
add
push
faddl
lds
xchg
in
mov
into
cld
in
dec
xchg
or
add
lods
and
loope
jp
jb
je
add
add
mov
js
mov
add
xchg
data16
add
add
lock
add
mov
add
out
sub
addb
add
add
mov
je
add
add
ret
add
xchg
sub
lcall
lods
popf
add
add
and
add
lods
cli
push
push
test
push
mov
rclb
adc
add
xchg
cmp
in
pop
add
int
cmp
add
lods
push
mov
ljmp
jg
out
ljmp
add
ja
or
ss
ret
cmp
add
add
add
hlt
xchg
dec
test
add
hlt
xchg
lds
icebp
enter
add
push
out
in
sahf
in
cmpsb
add
and
cwtl
push
sbb
xchg
fsubr
push
cld
jl
movsl
add
fistl
divl
ss
add
sbb
in
dec
mov
cmp
add
dec
dec
xor
data16
outsl
cmpsb
add
lahf
xchg
insl
sub
add
mov
sarb
mov
add
add
out
mov
add
lock
popl
add
data16
or
add
sub
and
lret
add
loope
aas
hlt
pop
xchg
sbb
add
add
gs
inc
add
cld
add
repz
aaa
movsb
add
hlt
roll
xchg
cmpsb
add
sub
xor
add
add
sbb
xchg
jbe
test
xlat
addb
mov
mov
add
add
test
lds
loope
jge
fcoms
add
std
ret
in
or
add
sub
stc
jo
std
mov
push
add
add
iret
leave
in
test
add
add
add
add
add
add
dec
add
imul
loope
roll
pop
sahf
mov
ja
and
push
add
add
call
std
xor
test
fadds
add
add
insb
sahf
ret
add
rorb
xchg
pop
cmp
dec
out
stos
hlt
cmp
add
add
mov
add
push
push
imul
add
pop
xchg
mov
imul
scas
pop
loopne
push
std
inc
add
inc
add
and
sub
ficomps
mov
sbb
add
add
lods
stos
pop
add
sub
add
mov
stos
and
or
ficoms
add
add
inc
add
add
sub
mov
add
jl
sub
cmc
add
add
add
mov
sarb
add
add
add
fldcw
add
ficoms
jmp
jae
call
dec
add
test
imul
test
add
push
mov
mov
and
add
jno
adc
add
add
mov
notb
adc
sbb
scas
adc
popa
add
fwait
sbb
add
add
jnp
add
add
cmpsl
add
inc
add
add
mov
and
test
mov
je
push
jns
add
sub
add
in
cli
mov
inc
add
cmp
jp
out
xchg
xlat
push
add
sti
sahf
stc
mov
enter
movb
add
add
lret
nop
lods
sub
push
mov
add
xchg
mov
mov
call
inc
add
inc
add
lock
mov
inc
add
dec
or
in
add
add
add
mov
movsl
add
pusha
add
repz
push
nop
nop
or
mov
add
test
lods
mov
pop
mov
and
addl
xor
add
std
out
pop
jmp
add
jbe
push
enter
popf
push
aas
lock
pusha
add
and
pusha
add
in
popf
xor
add
add
push
inc
add
rolb
add
jecxz
cmp
add
add
mov
add
decl
lret
repnz
pop
int3
repz
loopne
inc
add
mov
mov
pop
jae
add
inc
add
stos
addb
mov
iret
mov
jbe
add
sbb
add
add
ret
add
neg
mov
popf
sti
daa
add
add
stos
add
add
jno
add
push
imul
test
fcmovu
mov
ret
add
leave
mov
popa
add
sbb
add
test
xlat
sbb
push
in
in
and
mov
or
sbb
xlat
pusha
add
test
in
int
add
adc
pop
ja
and
or
push
add
add
inc
add
and
aas
dec
imulb
cmp
add
jle
and
cmp
lods
lods
mov
xchg
add
push
push
outsb
lea
sbb
hlt
push
mov
adc
pop
add
rcll
or
add
gs
test
mov
sub
mov
ja
roll
dec
fisttps
lret
lds
jb
mov
add
inc
add
push
push
addb
lret
add
mov
add
lret
add
addb
add
in
mov
insl
data16
in
sbb
dec
xor
push
dec
xchg
cmp
jmp
lock
outsb
inc
add
push
test
add
add
stos
cmpsl
add
cmpsl
add
push
hlt
xor
push
addb
je
in
ror
lcall
in
lods
out
mov
add
xlat
push
add
out
mov
imul
pop
pop
xlat
push
insb
out
roll
add
in
aad
add
cli
ret
jl
movsb
add
and
xor
ss
xor
add
sub
cld
pop
inc
add
sahf
jne
add
xchg
dec
mov
add
pop
push
dec
push
jno
repz
jae
and
mov
mov
into
out
fistl
daa
add
in
pop
add
add
add
adc
mov
add
loop
mov
cli
aad
int3
mov
sub
cs
push
add
mov
push
mov
cli
int3
mov
dec
add
add
dec
sbb
out
movsl
add
cmpsl
add
fbld
add
addb
leave
fdivrl
add
mov
add
add
add
jecxz
lds
mov
lods
mov
inc
add
in
inc
add
jge
int
add
cwtl
add
add
dec
xor
jge
dec
iret
pop
pop
in
cmp
in
ljmp
rol
add
add
imul
add
add
mov
cltd
jbe
add
std
fstl
pop
ds
nop
dec
hlt
aad
mov
data16
loop
ss
push
insb
leave
xor
test
mov
jmp
xor
dec
in
addl
bound
aad
jb
add
add
add
add
cltd
sub
jns
jmp
add
add
add
stc
mov
mov
mov
add
add
mov
roll
sbb
mov
jge
xchg
stc
push
xor
add
mov
add
push
movsb
add
mov
idivb
add
jbe
add
loopne
jbe
mov
sarl
add
lahf
out
push
loop
insl
pop
xchg
bound
filds
add
mov
movb
out
fsts
or
add
sub
enter
pop
sbb
add
add
cmp
add
mov
das
gs
dec
ja
add
add
add
dec
shl
add
add
or
add
hlt
mov
cmpsb
add
xor
cld
ret
add
add
ljmp
add
std
pop
cltd
negl
push
pop
sbb
add
hlt
movl
sbb
data16
shlb
xchg
cmp
mov
add
push
adc
addl
dec
addl
add
loop
mov
add
inc
add
push
pop
lcall
dec
aad
add
aad
sub
roll
lods
lods
push
mov
addl
je
jge
add
aam
adc
mov
add
pop
mov
jo
sub
insl
clc
shl
fsubl
mov
cmpsb
add
dec
enter
shl
pop
add
add
add
jmp
add
nop
push
add
add
sti
xlat
out
or
sbb
cmp
outsl
mov
and
jns
scas
hlt
pop
xchg
cmpsb
add
sub
push
adc
push
and
movb
add
outsb
popa
add
mov
add
xchg
cs
iret
push
test
pop
add
add
inc
add
mov
add
add
add
dec
icebp
dec
stc
fisttps
xor
scas
push
fiadds
add
add
lahf
movsl
add
sbb
push
add
add
into
scas
cwtl
aas
in
cmpsl
add
pushf
jo
iret
mov
mov
add
add
add
xor
xlat
add
add
mov
das
mov
add
pop
in
mov
add
mov
add
sbb
pop
xor
xor
cmp
aaa
jnp
xor
add
sbb
add
sbb
aad
add
add
inc
add
add
aad
fwait
push
mov
mov
ss
sbb
mov
in
in
idiv
mov
add
xchg
jae
mov
sti
cmpsb
add
dec
in
stos
jmp
ljmp
push
add
mov
jns
mov
push
out
rolb
popa
add
add
push
std
loopne
mov
add
jne
sahf
inc
add
mov
out
sbb
xchg
lods
pop
repz
movsb
add
ss
mov
clc
fwait
sbb
xchg
mov
add
add
rolb
add
in
pop
add
pusha
add
lret
pop
and
jnp
add
mov
adc
add
add
add
dec
or
push
mov
dec
enter
or
out
cmp
add
adc
add
loop
fldcw
cli
dec
fnstenv
push
fisubl
add
fildl
add
out
nop
lods
jg
lods
xchg
xchg
jbe
and
fldl
ds
add
fsubrl
add
and
test
push
dec
xor
push
int3
hlt
lahf
out
lcall
aam
add
cltd
sbb
gs
aas
sbb
rcll
sbb
push
add
add
or
in
movsb
add
test
loop
cltd
adc
lcall
inc
add
jg
add
mov
mov
into
push
loopne
in
stos
jns
inc
add
dec
or
or
xchg
loope
or
inc
add
add
js
add
inc
add
rolb
scas
mov
xor
add
dec
pop
pop
mov
push
cwtl
jecxz
push
add
and
mov
add
add
inc
add
mov
push
sarl
add
add
xor
mov
add
mov
or
cmp
jge
cs
or
add
add
adc
jbe
add
or
add
jo
or
cmpsl
add
add
shl
add
add
xchg
out
and
outsb
movsb
add
add
sbb
add
add
pusha
add
inc
add
outsl
lods
add
add
inc
add
lahf
mov
out
pop
in
xchg
xchg
stc
jecxz
jecxz
or
sbb
add
xlat
pop
jecxz
das
imul
loopne
leave
mov
add
push
add
add
mov
and
int
test
push
outsb
ds
sub
mov
pop
jo
sub
pop
cmp
push
add
nop
mov
mov
add
jp
jmp
add
add
fwait
inc
add
inc
add
cmpsb
add
add
xchg
lods
dec
xchg
push
sbb
sbb
add
add
or
pop
add
into
rolb
loop
sbb
add
mov
add
sbb
mov
add
dec
lahf
das
fwait
js
mov
pop
sub
mov
rcll
lock
jge
adc
into
jne
arpl
addb
add
pop
and
aam
sbb
xchg
repnz
jle
add
sub
imul
les
xor
pop
popa
add
mov
sti
push
pushf
dec
nop
outsl
jmp
or
add
lcall
imul
add
add
mov
add
sub
add
mov
insb
scas
test
mov
and
jb
add
insb
adc
xchg
mov
add
scas
mov
add
add
rolb
add
pop
int3
fsubrl
xchg
call
fldz
pop
mov
sar
xor
push
outsb
and
js
xchg
cmpsl
add
jns
scas
sarl
pop
test
xor
mov
add
add
jo
add
fldenv
add
stc
or
add
pop
nop
mov
movl
lret
pop
movsl
add
inc
add
add
add
jle
into
sub
add
push
sub
mov
cmpsb
add
push
inc
add
mov
add
movl
out
sub
push
push
outsl
neg
ret
add
sbb
add
test
popa
add
outsl
xchg
loop
in
or
add
fidivs
and
dec
data16
sub
cmp
jns
jge
mov
xchg
out
mov
mov
jo
mov
mov
add
sbb
add
js
inc
add
push
add
sbb
or
jbe
inc
add
fstp
add
add
add
mov
add
int
jecxz
addl
add
add
add
test
jl
arpl
mov
push
out
inc
add
lcall
xor
xchg
mov
add
mov
add
xchg
mov
and
add
add
add
push
push
add
add
sbb
pop
mov
add
out
shll
bound
bound
out
add
add
add
add
add
mov
mov
add
mov
xchg
push
pop
outsl
push
mov
add
add
add
inc
add
or
pop
xor
mov
add
add
dec
into
xor
les
loop
clc
adc
inc
add
add
add
addl
hlt
mov
add
jno
add
lahf
cwtl
mov
add
xor
jae
cmp
mov
add
hlt
add
and
shll
add
add
hlt
xchg
add
add
mov
xchg
addl
lcall
lahf
or
add
add
add
push
and
les
jp
imul
add
add
out
addr16
add
add
add
add
mov
shl
pop
xor
add
cmp
popa
add
fsubrl
xchg
fimuls
insl
add
add
add
cltd
xchg
pop
adc
add
add
push
sub
add
rorl
xchg
test
call
add
add
add
pop
stc
mov
add
xchg
sub
and
addb
lds
inc
add
lds
adc
lods
xchg
mov
mov
cli
mov
xchg
aaa
addb
out
and
sub
add
add
push
filds
add
xchg
pcmpeqw
add
addb
add
jg
scas
iret
popf
ret
add
cmp
xchg
mov
mov
lea
jg
mov
aaa
nop
jl
jbe
push
cmpsb
add
xchg
icebp
rcrl
insb
jle
add
mov
add
pop
fs
add
mov
pop
mov
mov
mov
add
add
inc
add
add
outsb
mov
add
je
pop
mov
mov
add
and
shrb
add
sub
movsl
add
cld
mov
push
and
outsb
mov
add
aaa
and
xor
dec
loop
pop
add
or
sbb
lahf
mov
je
popf
xor
xlat
xchg
test
add
and
mov
cmc
sbb
outsb
lcall
add
cltd
xor
inc
add
les
mov
jge
loopne
insl
sub
dec
scas
dec
cmp
scas
xor
sahf
out
inc
add
addl
aam
xchg
addl
push
and
cmpsl
add
ret
add
push
add
icebp
jmp
and
push
out
push
cmpsb
add
or
dec
add
xchg
xchg
cmc
rcl
adc
add
add
add
movsl
add
dec
push
ds
clc
dec
test
repnz
lcall
add
add
and
mov
xchg
add
add
pop
pop
aas
cmp
add
dec
popf
pop
arpl
insb
add
add
or
pop
lret
fsts
push
mov
add
xor
int3
jge
jge
add
add
add
test
cwtl
mov
addb
inc
add
add
and
in
aaa
shll
push
cs
addl
add
add
cmp
add
adc
shrb
add
add
add
push
stc
xor
add
dec
scas
hlt
std
imul
jp
in
inc
add
addl
aad
cmp
jle
jno
sbb
inc
add
xor
dec
fimuls
lds
sub
bound
sti
je
ror
stos
push
jno
in
adc
sbb
lds
mov
add
add
rolb
add
inc
add
shlb
jae
pop
add
xor
add
add
jo
flds
add
aaa
mov
jecxz
test
mov
add
out
inc
add
xor
sti
cmp
add
dec
imul
into
addb
add
stc
sbb
push
and
jmp
add
pop
fmuls
dec
xchg
mov
lock
iret
test
mov
in
cmc
psrlw
add
inc
add
xor
add
push
mov
add
jne
add
inc
add
loope
ds
sub
insl
add
add
mov
sub
mov
cs
push
jne
repnz
lock
add
add
add
mov
sbb
pop
add
loope
add
add
add
add
dec
jnp
sbb
enter
add
cmp
loopne,pt
or
out
fmull
add
movsb
add
hlt
lock
sahf
cmp
mov
frstor
sbb
das
mov
mov
add
int3
mov
out
nop
push
cmp
in
movl
dec
pushf
lcall
das
lret
or
add
adc
add
out
cmp
sbb
popf
pop
outsb
and
popa
add
in
dec
bound
cmp
jmp
push
adc
aam
es
xchg
inc
add
sbb
add
add
add
dec
daa
add
add
stos
push
jne
add
pusha
add
inc
add
insb
insb
pushf
add
add
sub
popf
std
cmpsl
add
cmpxchg
add
add
sbb
sub
int3
cmpsb
add
inc
add
decl
add
roll
xlat
sub
inc
add
add
pusha
add
add
mov
adc
loop
loop
flds
add
addb
dec
add
push
cld
lock
mov
mov
ja
outsb
movb
push
xor
add
pop
push
imul
lahf
movsl
add
xor
test
and
ffreep
add
adc
lcall
add
and
je
jns
cmp
mov
add
test
addb
cmp
dec
add
inc
add
xor
xchg
jg
mov
mov
out
lret
add
nop
pop
inc
add
add
cmp
notl
mov
pop
scas
das
stc
inc
add
insl
and
in
mov
repnz
add
add
add
add
movsb
add
or
push
sbb
dec
call
sub
iret
roll
or
fstp
adc
add
in
push
or
add
cmpsl
add
mov
or
push
stos
stos
lods
cld
stc
sahf
addb
pop
cmp
add
ljmp
lock
fistl
loopne
mul
add
add
push
xchg
dec
xor
stc
outsl
xlat
mov
pop
add
addb
add
xlat
enter
ja
xchg
pop
inc
add
mov
sbb
add
jmp
sbb
push
cmp
sbb
movsb
add
sbb
dec
push
add
jg
dec
hlt
negl
cmpsl
add
push
imul
movsb
add
hlt
pushf
daa
add
add
xor
add
pop
loopne
negb
add
int
pop
adc
jno
add
add
add
add
in
jae
add
push
fsubrp
out
jnp
jno
add
jbe
dec
iret
icebp
dec
and
cmc
aad
add
add
cli
xor
jle
bound
int3
xor
fwait
pushf
push
push
xchg
test
add
add
push
mov
add
fucom
add
inc
add
pop
call
xchg
cmp
aam
pusha
add
add
ljmp
out
add
mov
jecxz
test
add
sbb
loopne
sti
lock
clc
imul
add
adc
fimuls
jbe
ret
add
add
imul
ret
jge
jmp
imul
jne
in
inc
add
xchg
sub
aad
cmpsl
add
adc
loopne
cmc
cld
aaa
into
push
jo
mov
cltd
cli
in
aas
adc
add
mov
add
test
add
add
addb
add
ja
add
scas
icebp
bound
int3
addb
add
push
or
add
add
sahf
mov
lods
xor
mov
add
mov
add
adc
cwtl
jbe
mov
in
pop
jo
lds
mov
or
scas
mov
sbb
clc
daa
add
and
and
idivb
jbe
addr16
nop
lret
rolb
mov
call
data16
addb
jb
addl
add
add
sub
add
push
mov
inc
add
popf
dec
xor
add
add
add
add
mov
xchg
fdivl
add
aaa
fildll
jg
addl
pop
add
jae
add
dec
pop
cs
arpl
shrb
sub
cmp
add
jge
test
dec
aad
cmp
jmp
cmp
push
mov
add
push
arpl
aam
inc
add
loope
dec
daa
add
jns
mov
movb
add
add
push
int
pop
outsl
imul
jmp
add
push
rolb
and
add
cltd
roll
jge
fwait
pop
test
jbe
inc
add
fisubrl
popf
sbb
js
add
fs
sub
bound
dec
push
add
add
add
and
imul
add
int3
jns
xor
and
xchg
and
sub
cli
xchg
pop
xor
ds
inc
add
pop
cmp
adc
or
add
ss
sbb
into
loop
jl
adc
or
clc
jle
mov
fisubs
fdivrs
add
fwait
and
dec
lret
add
aad
xchg
sbb
cmp
adc
mov
xchg
jnp
inc
add
fucomi
outsb
add
add
roll
movb
mov
mov
add
add
cmp
inc
add
insl
or
dec
jmp
add
add
popa
add
add
add
leave
icebp
jnp
scas
pop
mov
test
insb
and
sbb
inc
add
test
jns
mov
roll
sahf
cmp
inc
add
outsl
popa
add
fmuls
push
add
sahf
cltd
aaa
lret
test
imul
xchg
rcrl
push
xchg
jp
test
add
test
add
out
jno
cmp
add
mov
lea
push
push
cli
pop
inc
add
add
pop
sbb
aas
cmp
add
inc
add
push
cli
cmp
add
pushf
loop
xchg
movl
repz
or
add
cmp
adc
in
mov
out
add
add
add
rolb
xchg
pop
dec
xor
cmp
mov
je
das
out
test
pusha
add
mov
add
rolb
add
in
rolb
lods
xor
pushf
rorb
add
dec
imul
dec
lret
add
pop
sub
add
add
add
add
xchg
or
mov
insb
mul
add
scas
or
ja
mov
add
add
ret
add
add
js
popa
add
movsl
add
mov
mov
xchg
xchg
push
push
insb
rcrb
sbb
mov
lea
dec
sbb
nop
lods
push
xchg
cs
ret
repnz
cmc
jmp
jbe
adc
jmp
add
aad
les
push
adc
pop
das
in
xchg
xchg
dec
cltd
push
add
add
adc
repz
loopne
bound
cmp
and
enter
cwtl
outsb
jle
sbb
cli
movl
mov
in
jl
rolb
insl
pop
int
push
addl
add
scas
mov
fdivr
pop
dec
add
add
add
dec
jp
jno
in
dec
ds
shr
loopne
mov
dec
push
and
sub
add
in
xchg
or
iret
outsb
fnstcw
cwtl
push
xchg
ljmp
imul
and
sbb
lahf
mov
add
jge
lcall
outsl
into
push
pop
std
movsb
add
push
mov
add
add
aas
aas
clc
xor
js
push
add
add
dec
mov
dec
cwtl
inc
add
xchg
cmp
add
arpl
inc
add
pop
scas
bound
lar
add
mov
fnstsw
cs
add
xchg
adc
mov
xor
rolb
imul
js
cs
cld
loope
jo
sbb
jae
add
cwtl
jns
icebp
add
add
add
add
cmp
fdiv
into
or
jmp
movlhps
outsb
add
add
cwtl
add
add
push
add
add
inc
add
add
jno
pop
jb
fcoml
enter
or
add
push
es
adc
mov
out
dec
mov
ljmp
pop
add
hlt
and
scas
cwtl
and
out
lds
jle
add
add
jae
data16
outsb
pop
xor
add
mov
add
outsb
not
mov
and
aas
aad
dec
xchg
dec
lret
movsl
add
stos
xor
add
jae
loop
jnp
add
add
jo
add
add
sub
add
lods
sahf
push
in
mov
add
add
xchg
and
les
pop
ljmp
imul
xchg
mov
mov
add
mov
push
sub
addl
add
sub
addb
inc
add
daa
add
add
sub
movsb
add
push
add
xchg
or
jnp
pop
add
pop
adc
jbe
add
imul
cmp
add
dec
in
faddl
add
pop
add
add
mov
add
jmp
jp
add
in
jo
out
mov
cmc
pushf
fstps
cli
xchg
push
dec
data16
movb
inc
add
add
add
add
adc
lret
add
pop
pushf
notl
testl
pop
fnstcw
roll
add
add
add
add
test
fst
lret
sti
mov
das
push
add
dec
xchg
test
je
add
sub
cmpsl
add
mov
pop
imul
cltd
xor
add
incl
mov
mov
add
das
into
xlat
add
add
add
add
daa
add
sti
jnp
add
fidivl
outsl
mov
loop
mov
mov
mov
or
jae
data16
cld
std
ret
add
adc
call
out
sub
add
add
in
cli
xor
addb
jne
pusha
add
bound
sahf
xor
add
pop
pop
jne
add
fsubs
cmp
and
shlb
pop
daa
add
fsubl
insb
inc
add
gs
js
adc
xchg
add
daa
add
dec
pop
hlt
add
xchg
int
push
pop
and
inc
add
and
add
add
add
test
sbb
add
push
jecxz
movsb
add
and
dec
xor
or
xchg
cmpsb
add
add
arpl
jp
add
push
push
pushf
outsl
sbb
jp
add
sahf
fcoms
jbe
jl
jo
addl
loop
sub
add
lret
bound
sbb
ret
add
fsubrl
das
mov
add
add
inc
add
add
inc
add
ljmp
push
lock
add
stos
xor
add
mov
movsl
add
add
movb
xlat
mov
iret
repz
add
add
pop
or
mov
mov
push
rcrl
add
mov
mov
add
mov
push
addb
xor
pop
movsl
add
bound
mov
jg
push
mov
dec
cmc
hlt
sahf
mov
jle
idivb
lods
cmc
mov
adc
add
test
mov
add
add
add
or
fdivrl
sbb
cli
pop
xchg
xchg
push
lods
mov
pop
mov
add
add
dec
adc
test
daa
add
cmp
add
xor
ljmp
add
les
push
adc
jno
push
dec
or
addl
add
mov
je
rcrb
repnz
aad
add
or
addb
inc
add
push
test
fistpll
add
cli
fisttpl
out
movsl
add
add
and
stos
fstpl
repnz
pop
adc
pushf
push
mov
or
add
fs
addr16
add
jmp
shl
xchg
aad
jbe
jl
mov
fwait
lods
aaa
movsl
add
and
or
addb
mov
add
mov
add
pop
nop
adc
add
lock
pop
dec
jl
dec
jmp
adc
jns
sbb
add
ret
iret
shll
lds
out
testl
fcompl
lock
cmpsl
add
addb
cmp
aas
imul
adc
push
add
xor
enter
push
push
add
add
add
add
fists
mov
fistpll
cltd
and
out
mov
jne
push
pop
in
pop
fmull
lds
xchg
sbb
push
xlat
fnstenv
add
add
jmp
add
ss
add
add
push
push
mov
lock
in
iret
xchg
addl
shl
add
int
cwtl
inc
add
in
dec
sub
add
jl
mov
mov
xlat
loop
and
sub
or
clc
dec
lahf
cmc
xor
xchg
sub
addb
addb
pop
sub
sahf
stos
stos
repnz
in
in
dec
pop
stc
lods
test
inc
add
sbb
add
test
data16
add
add
dec
xchg
fwait
scas
fmuls
cmp
or
roll
add
jno
cmpsb
add
mov
wrmsr
rolb
lret
test
and
cltd
popf
mov
iret
jge
addl
add
xor
mov
inc
add
add
jge
add
mov
aas
out
jmp
add
add
inc
add
pop
push
inc
add
add
sbb
cmp
cmp
ds
icebp
mov
add
call
test
push
out
add
adc
add
movaps
add
push
jp
mov
jle
roll
and
out
pop
mov
movsl
add
add
push
push
enter
fiadds
xchg
add
ljmp
test
add
add
aas
dec
pop
sbb
les
xor
xor
cmp
je
in
nop
lcall
add
add
addb
push
ficompl
add
add
rorb
fdivrs
outsb
and
lods
pop
add
xor
jmp
loope
cld
leave
lret
dec
mov
sbb
push
push
mov
inc
add
add
iret
stc
pusha
add
fcompl
dec
mov
add
add
int3
jns
outsl
cmp
loopne
push
or
pop
xchg
clc
aam
mov
cli
or
xor
mov
mov
add
add
add
or
and
test
cli
push
pop
mov
add
jnp
add
add
jecxz
loop
outsl
mov
jne
bound
pop
std
inc
add
lahf
xor
add
pop
sub
rolb
add
mov
fstps
mov
xchg
adc
add
jg
push
add
pop
mov
add
ljmp
add
enter
push
stos
loopne
push
repz
je
fwait
ljmp
outsl
lods
fiaddl
add
adc
insl
push
add
add
rolb
dec
push
or
adc
pop
add
ret
add
dec
out
sbb
add
push
push
add
add
add
ja
push
movb
clc
lods
inc
add
das
mov
add
xlat
movsl
add
add
add
pop
loopne,pt
mov
add
xchg
push
cmp
and
testb
dec
add
add
add
sbb
xor
add
add
cmp
mov
add
bound
arpl
lods
lret
pop
in
jl
add
push
sub
negb
fwait
xchg
xchg
push
jg
mov
movl
lds
mov
add
sahf
icebp
fwait
mov
mov
add
add
xchg
ds
dec
mov
stos
in
sub
mov
and
out
xchg
jnp
add
mov
adc
add
add
add
ficoms
addl
add
cmpsb
add
add
cmpsb
add
dec
ja
addl
add
add
or
cltd
lcall
call
add
jmp
xchg
test
mov
aam
or
add
inc
add
enter
jl
add
xor
pop
aad
xor
add
aaa
mov
imul
or
add
add
add
lea
lea
add
movl
cmpsl
add
and
push
adc
xor
add
add
movb
in
pop
xlat
ret
cmc
shlb
xchg
inc
add
hlt
mov
les
call
fwait
lahf
fidivs
jecxz
fsubs
or
out
lahf
mov
adc
add
jae
popa
add
add
push
loop
sti
arpl
add
push
sbb
jno
add
addb
jno
add
sub
add
add
jp
mov
add
in
sub
add
add
add
ret
add
add
sub
call
mov
mov
fst
imul
sbb
add
cmp
clc
int3
ds
jecxz
loope
icebp
into
into
mov
movsb
add
add
sbb
mov
add
add
add
icebp
sub
cmpsb
add
pop
and
insl
push
dec
xchg
add
add
cmp
cwtl
xchg
ss
and
cltd
int3
into
xor
add
push
adc
add
add
mov
and
mov
addl
add
mov
add
add
sub
fmulp
xor
or
add
int
xor
lret
dec
or
inc
add
test
lods
jle
sub
pop
or
fwait
ds
lea
adc
mov
xor
xor
mov
mov
inc
add
push
add
addr16
shll
ds
test
int
lret
inc
add
loope
dec
push
addb
add
add
imul
push
cmpsl
add
ja
push
adc
inc
add
sub
mov
rclb
push
cltd
jne
add
xor
add
ja
inc
add
add
add
mov
fdivs
mov
add
into
bound
loopne
pcmpeqb
or
lock
addb
add
dec
mov
lcall
test
lea
add
jno
add
imul
add
or
mov
dec
xchg
fsubrs
cmpsb
add
test
inc
add
push
jmp
add
aaa
popf
paddw
adc
jne
and
lds
mov
xor
movb
push
mov
push
aad
mov
add
jle
cli
mov
fistpl
movb
adc
add
arpl
mov
add
stc
xor
test
adc
mov
add
cwtl
aad
add
add
add
add
or
addb
add
add
sbb
add
sbb
add
roll
push
push
mov
add
in
push
clc
int
push
xchg
es
xchg
pop
add
pop
inc
add
out
sub
fwait
stos
cmp
data16
mov
add
add
addb
sar
jns
aam
aas
and
mov
lds
add
add
push
cs
mov
add
mov
aam
inc
add
mov
add
sub
mov
cwtl
movsl
add
dec
test
cmp
mov
std
bound
fildll
cs
xor
push
addb
ljmp
push
enter
mov
cs
adc
cmpsl
add
das
dec
popa
add
dec
inc
add
ljmp
adc
and
xchg
xchg
std
jmp
inc
add
add
in
mov
mov
sub
mov
idivl
jecxz
push
jo
jno
cs
add
mov
inc
add
xchg
sub
add
sahf
adc
add
inc
add
rolb
add
jns
add
add
dec
or
add
imul
nop
out
sbb
jo
xchg
push
jne
fbld
adc
add
jg
mov
and
jp
mov
add
add
std
fistpl
sahf
test
loope
cmp
add
adc
add
add
stc
push
mov
stos
js
jne
movb
sub
mov
add
in
pop
jge
dec
movsl
add
and
idivb
cld
test
and
data16
roll
lods
mov
scas
cmc
movsl
add
jns
je
and
xchg
insb
mov
mov
jo
add
mov
imul
repnz
mov
add
adc
pop
outsb
cmpsl
add
add
dec
nop
push
add
adc
loop
mov
sub
or
xchg
lods
ljmp
fdivrl
mov
aaa
insb
jge
add
add
or
lock
add
ffreep
add
pop
add
test
mov
adc
rorl
xchg
inc
add
or
add
add
int
add
dec
add
add
sub
add
sbb
add
stc
negb
mov
ds
jmp
test
ljmp
add
jne
add
add
or
mov
fwait
lret
aad
adc
jnp
and
dec
pop
add
jg
movl
xor
add
add
dec
jbe
push
insb
or
xor
into
inc
add
jecxz
fisttpll
add
add
mov
cli
sub
mov
jmp
jg
pop
out
cltd
mov
cmc
or
and
popa
add
lret
add
and
add
add
mov
inc
add
dec
fs
imul
les
add
dec
cli
jge
cli
push
adc
push
mov
out
movl
add
ljmp
add
mov
jecxz
jb
jmp
clc
int
jp
fisubrs
lods
addl
and
xchg
add
jl
add
adc
test
les
xchg
pushf
sub
scas
inc
add
xchg
jle
xchg
sbb
sub
sbb
fmul
loope
push
adc
sti
push
pop
lods
mov
add
pop
pop
outsb
xchg
jmp
add
xadd
stos
mov
inc
add
jnp
dec
inc
add
add
inc
add
inc
add
add
pop
outsl
loope
mov
dec
pop
stc
dec
ret
add
add
repnz
mov
add
mov
add
mov
movsl
add
jae
or
jl
push
iret
or
pop
mov
cmp
movb
cmp
xchg
cmp
inc
add
idiv
mov
xor
adc
dec
pop
mov
cmp
aam
test
movb
mov
mov
add
shlb
add
mov
add
loope
add
add
cs
add
aas
stos
inc
add
call
add
shlb
add
repz
jo
add
add
push
roll
add
jne
sahf
push
pop
aaa
or
add
movsl
add
add
add
add
cwtl
dec
fwait
xchg
in
add
aas
jmp
add
jl
jae
add
jecxz
mov
add
add
add
xchg
jae
pop
lret
out
pop
fimuls
movl
add
xor
mov
add
cli
jge
scas
addl
das
imul
enter
cmp
add
jmp
push
mov
mov
mov
add
add
add
add
mov
inc
add
add
xor
pop
mov
repz
mov
xchg
dec
out
and
dec
pop
add
sbb
add
add
out
test
pushf
pop
cmp
into
dec
aas
popf
mov
add
jno
sbb
xchg
scas
add
add
inc
add
js
add
adc
fcompl
enter
cmpsb
add
ja
xchg
test
out
sbb
ret
add
adc
sub
aas
mov
inc
add
addl
sti
cmc
pop
and
aam
or
adc
add
daa
add
pop
bound
cmc
aad
dec
ljmp
div
jp
cmp
ret
add
push
std
or
sbb
mov
fdivrs
test
sub
mov
inc
add
xchg
popa
add
add
fbstp
add
cmpsl
add
add
add
add
mov
addb
clc
adc
cltd
std
mov
add
mov
fwait
xor
movl
add
pushf
add
add
jnp
add
pusha
add
ret
add
or
add
jns
add
jo
add
insl
sbb
add
das
outsl
jmp
mov
add
cmp
pop
test
repnz
mov
push
negb
add
stos
inc
add
add
clc
decl
add
inc
add
push
pop
test
loopne
jge
inc
add
add
xor
call
addb
dec
fadds
add
add
sub
xor
or
scas
sahf
lods
fisttpl
pop
fildl
add
arpl
inc
add
arpl
pop
jmp
mov
sub
add
add
xchg
and
scas
mov
rorb
mov
dec
push
mov
data16
repnz
stc
and
shl
add
pop
add
sarb
imulb
mov
in
dec
test
add
add
xchg
rorb
add
mov
add
add
ss
push
add
add
movb
xchg
mov
pop
jno
out
loop
ds
cltd
out
addl
sbb
sub
bound
jns
icebp
mov
mov
add
add
loop
rolb
add
mov
adc
add
sub
pop
jo
das
pushf
aad
add
adc
jb
popf
mov
push
in
jno
stos
xor
lcall
mov
mov
add
inc
add
add
add
add
pop
ljmp
mov
or
mov
add
hlt
nop
lock
addb
loope
xchg
xor
jbe
fnstcw
iret
push
pop
add
add
jnp
add
and
xor
cmpsl
add
movsl
add
lods
inc
add
sub
inc
add
push
or
add
clc
shrl
sarl
movb
adc
addb
and
jae
sub
xchg
mov
data16
mov
outsl
in
lret
add
outsl
in
xchg
inc
add
jg
cltd
pop
ror
loope
jp
inc
add
xlat
jbe
add
nop
cld
roll
push
int
add
push
xchg
cmpsl
add
hlt
lds
add
add
add
fs
fcomip
dec
test
mov
call
ret
add
insl
fwait
push
xchg
imul
and
mov
add
add
data16
scas
pushf
push
xchg
or
push
mov
notl
ret
int3
push
sbb
mov
decb
ljmp
add
add
lock
inc
add
add
lret
out
testb
in
rolb
add
aad
cmp
pop
add
add
out
mov
sub
add
add
add
push
insb
push
add
jo
and
sbb
je
outsl
push
xchg
sub
testb
push
in
dec
and
aaa
xor
cmp
outsb
jne
ds
lret
add
xchg
cli
xchg
ljmp
add
add
add
add
add
add
xchg
fldl
push
addl
dec
sahf
addb
jg
jge
lods
addb
out
negl
jns
cli
les
mov
add
mov
stos
inc
add
sbb
add
icebp
sub
add
add
add
add
cmp
add
mov
cmpsl
add
aad
add
sub
add
fwait
out
push
xor
add
pop
add
fcmovne
ljmp
cs
das
nop
mov
push
pop
or
jmp
out
imul
movb
std
mov
js
pop
jmp
pushf
fistl
xchg
add
add
sub
push
cwtl
rolb
add
pusha
add
and
adc
adc
pop
cmpsb
add
loopne
loop
cmp
add
hlt
mov
dec
cmc
pop
push
stc
dec
jle
popa
add
lret
cmpsb
add
jmp
inc
add
add
jmp
cmp
xor
sbb
or
cli
pop
jp
xchg
mov
adc
adc
sbb
sbb
add
dec
mov
data16
add
dec
push
pop
adc
insl
sub
push
leave
in
pop
out
push
fwait
mov
fsubs
movl
xor
scas
sbb
inc
add
pop
inc
add
and
fs
add
add
add
fbld
daa
add
push
pushf
ljmp
rcll
add
or
leave
push
add
insb
mov
jle
test
scas
hlt
aaa
into
cmp
ror
mov
sub
add
ljmp
and
mov
je
dec
mov
cmp
int3
lret
mulb
add
inc
add
push
ficoms
movsb
add
or
mov
inc
add
add
lock
mov
jl
imul
sbb
add
adc
sbb
lock
add
add
mov
add
add
jp
inc
add
inc
add
jg
mov
or
xor
add
fs
add
xchg
mov
jbe
movsbl
addr16
je
add
mov
hlt
pop
out
inc
add
push
lods
js
push
loope
cmpsl
add
das
data16
mov
mov
mov
add
cmp
add
cmp
jb
add
les
or
jge
dec
scas
jp
jl
xchg
clc
out
cmpsb
add
mov
ret
adc
add
daa
add
add
or
pop
daa
add
pop
rorb
dec
cs
std
imul
jle
push
mov
in
add
add
add
cwtl
pop
shlb
add
mov
bound
fs
jmp
add
sub
add
les
scas
and
addb
jnp
addb
mov
push
add
js
pop
pop
lock
movsb
add
movsb
add
add
rcll
lods
inc
add
mov
sarl
mov
add
add
popf
test
sub
or
mov
cli
test
movsl
add
xor
scas
mov
add
jge
cmp
aas
sub
movl
push
movsl
add
das
add
fimull
sarl
lods
pop
inc
add
lahf
stos
add
add
rcrb
in
mov
add
add
pop
enter
mov
xchg
mov
ljmp
cli
xor
add
push
add
je
add
add
add
