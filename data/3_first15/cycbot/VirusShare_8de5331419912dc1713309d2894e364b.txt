add
add
add
add
add
jle
jle
jle
jle
jle
add
add
add
cmp
cmp
cmp
add
inc
inc
inc
inc
inc
popf
add
add
add
div
div
push
push
push
push
push
popa
popa
popa
popa
popa
scas
scas
add
jnp
into
into
into
into
into
into
into
into
add
bound
add
adc
adc
add
adc
or
or
or
inc
mov
add
add
inc
inc
inc
inc
inc
inc
add
add
mov
add
outsb
or
movsl
repz
mov
mov
mov
mov
mov
mov
mov
mov
dec
dec
dec
dec
jae
add
add
add
xor
mov
lahf
lahf
lahf
je
lcall
cmp
adc
adc
adc
lea
loop
add
add
addl
add
add
pop
pop
pop
pop
add
add
add
inc
inc
pushf
pushf
pushf
pushf
pushf
pushf
add
scas
add
add
add
add
add
add
push
push
push
push
push
push
push
push
adc
add
add
mov
xor
add
add
add
inc
inc
jle
jle
and
xor
add
mov
add
pop
pop
push
push
push
push
push
push
push
push
push
push
push
push
push
push
xchg
add
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
and
and
and
add
add
in
in
xchg
xchg
fcomp
add
add
stc
stc
stc
stc
jno
adc
cmp
cmp
or
or
or
or
or
or
or
or
or
insl
insl
insl
insl
add
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
add
add
mov
or
or
test
test
add
loopne
add
sub
xchg
xchg
xchg
xchg
sbb
popf
stos
stos
stos
stos
stos
add
scas
scas
scas
scas
dec
dec
dec
add
add
add
std
std
std
std
std
or
add
add
add
cs
inc
inc
loop
loop
add
into
das
xchg
xchg
xchg
xchg
xchg
mov
add
add
add
add
xor
xor
xor
in
add
cmp
add
jecxz
aad
aad
add
add
add
out
out
jge
nop
fs
push
push
dec
dec
dec
js
js
add
add
add
cltd
cltd
add
ljmp
cmp
sbb
sbb
sbb
add
add
add
aam
aam
aam
aam
stos
stos
stos
stos
stos
sub
sub
add
mov
add
add
lret
or
or
or
or
loope
loope
add
add
xor
repnz
les
daa
mov
mov
mov
xchg
add
filds
xchg
or
or
cmp
outsl
lahf
es
filds
and
test
add
sahf
sahf
sahf
sahf
add
add
add
sub
sub
sub
jmp
jmp
jmp
jmp
jmp
jmp
add
add
add
add
add
mov
cmp
cmp
cmp
add
arpl
arpl
leave
add
add
lods
stos
stos
stos
stos
jmp
cld
cld
cld
cld
jo
add
add
add
xchg
xchg
ljmp
push
push
push
push
push
add
sbb
or
or
or
add
xor
in
in
jbe
jbe
jbe
jbe
addl
add
add
gs
add
add
add
adc
adc
adc
adc
adc
adc
add
push
push
add
add
fwait
fwait
fwait
fwait
fwait
cwtl
aaa
aaa
aaa
add
pop
pop
pop
pop
pop
pop
addl
add
repz
out
out
out
add
add
add
add
add
mov
add
add
add
add
add
add
lret
adcb
add
mov
xchg
xchg
add
pop
pop
pop
pop
inc
inc
cmpsb
add
insl
add
add
rolb
lock
add
add
push
push
push
push
push
add
adc
adc
adc
div
div
div
div
testl
mov
mov
mov
mov
sbb
sbb
test
add
add
add
and
pusha
push
push
push
add
add
add
add
addr16
mov
mov
add
add
gs
add
add
rcl
add
add
add
add
add
lcall
jecxz
jecxz
add
add
add
rcl
rcl
shl
repz
mov
ret
ret
add
add
add
div
gs
gs
rcl
rcl
rcl
roll
jb
jb
lret
cmc
stc
pop
pop
pop
pop
pop
pop
add
add
jno
add
mov
pushf
pushf
pushf
add
add
mov
mov
and
add
fcmovu
fcmovu
fcmovu
rolb
add
ret
ret
xor
mov
push
lock
add
jae
jae
jae
push
push
mov
test
xchg
xchg
xchg
fisubs
and
and
jae
and
dec
dec
mov
add
add
mov
fcomp
add
ret
add
add
stc
stc
stc
add
int3
int3
int3
int3
add
add
add
dec
dec
and
and
or
jmp
jmp
outsl
dec
dec
dec
dec
dec
dec
dec
dec
pop
pop
pop
pop
pop
mov
mov
mov
mov
mov
add
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
jbe
jbe
mov
jp
jp
jp
jp
push
out
out
out
inc
sbb
sbb
rol
rol
dec
dec
dec
add
add
add
xchg
xchg
xchg
xchg
add
sub
sub
sub
es
push
push
push
push
push
push
push
scas
scas
scas
scas
scas
scas
add
inc
dec
dec
dec
dec
stos
stos
stos
stos
stos
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
add
add
or
clc
clc
clc
clc
clc
clc
add
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
add
add
add
add
rcl
rcl
rcl
rcl
roll
push
and
and
ljmp
rcl
rcll
adc
adc
popa
popa
popa
popa
popa
in
mov
mov
add
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
add
pop
and
stc
stc
stc
stc
push
push
push
push
lret
lret
clc
clc
out
out
add
std
add
add
push
sub
sub
sub
push
jne
jne
jne
add
nop
nop
nop
nop
nop
nop
mov
hlt
hlt
hlt
and
and
sbb
sbb
jl
jl
loop
cmp
add
adc
add
add
mov
mov
mov
push
push
push
push
jb
jb
pop
pop
pop
pop
pop
pop
pop
pop
add
popl
dec
dec
dec
dec
add
add
add
add
test
test
add
aam
aam
aam
aam
aam
push
push
push
push
push
push
push
add
sbb
mov
add
add
nop
nop
addb
cmpb
sub
sub
sub
sub
sub
sub
add
add
add
mov
jge
jge
add
mov
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
push
push
add
inc
or
or
or
or
jg
jg
or
add
add
add
add
jo
jo
jo
jo
jo
jo
inc
inc
inc
outsb
outsb
outsb
outsb
outsb
jb
popa
popa
xor
xor
xor
adc
adc
adc
adc
adc
add
add
loop
loop
and
popl
add
out
out
out
out
out
lea
dec
dec
dec
pop
pop
pop
aam
aam
aam
aam
aam
aam
aam
icebp
icebp
es
das
movsl
movsl
es
pop
pop
pop
pop
pop
pop
pop
pop
stos
stos
stos
stos
stos
stos
stos
cmc
add
ret
ret
ret
mov
add
add
add
ja
ja
rcl
rcl
rcl
rcrb
jbe
jbe
jbe
jbe
jbe
jnp
adc
add
jnp
jnp
mov
ljmp
sub
sub
sbb
scas
scas
scas
scas
scas
scas
cmc
dec
dec
dec
dec
dec
dec
dec
push
push
push
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
loop
scas
scas
scas
scas
add
lods
lods
lods
lods
lcall
and
pop
pop
pop
pop
add
insl
push
push
push
push
push
enter
xchg
add
inc
inc
add
mov
fiadds
xor
mov
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
sub
sub
sub
sub
sub
push
push
push
add
mov
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
add
add
mov
mov
loop
loop
loop
loop
loop
lods
add
add
add
add
add
add
jb
add
add
add
add
add
add
out
out
out
mov
mov
mov
add
add
add
jmp
jmp
xorb
cmpsl
cmpsl
cmpsl
add
add
add
vpminsw
sahf
sahf
sahf
sahf
sub
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
add
add
add
insb
xchg
xchg
xchg
xchg
add
add
add
add
add
add
add
add
xor
xor
and
and
and
and
and
and
and
and
and
pusha
popf
sub
add
add
mov
add
add
add
inc
inc
inc
inc
inc
les
jp
jp
add
add
enter
add
pop
pop
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
repz
pop
pop
and
nop
nop
hlt
hlt
hlt
hlt
add
enter
add
jno
jno
jno
add
add
std
std
std
std
std
std
std
std
push
push
push
outsl
outsl
outsl
outsl
outsl
outsl
outsl
add
add
fildl
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
push
push
push
push
push
push
push
push
push
add
dec
pop
pop
pop
pop
add
add
ss
jae
jae
fcmovnu
fcmovnu
fcmovnu
add
add
mov
in
in
in
test
add
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
ljmp
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
out
jbe
jbe
jbe
jbe
aas
aas
aas
aas
aas
aas
add
add
add
mov
mov
mov
jle
add
add
add
add
add
mov
mov
outsb
cmp
cmp
cmp
gs
sbb
sbb
sbb
xchg
add
in
in
in
in
in
in
in
in
in
in
in
add
add
fiadds
add
add
add
add
pop
pop
pop
add
sub
push
adc
jnp
jnp
jnp
mov
int3
int3
jo
jo
jo
jo
pop
pop
repnz
push
push
push
push
push
push
push
push
push
dec
dec
dec
dec
dec
dec
jp
popf
add
mov
mov
scas
scas
scas
push
push
inc
xchg
xchg
add
enter
enter
add
dec
dec
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
mov
add
pop
pop
pop
pop
pop
pop
pop
dec
dec
dec
dec
test
add
add
outsb
outsb
outsb
add
add
mov
in
in
in
in
in
add
add
add
xor
xor
std
std
std
in
in
in
in
add
pusha
pusha
pusha
pusha
pusha
ret
ret
ret
ret
ret
add
add
add
add
cmp
inc
inc
sub
xor
xor
xor
add
add
add
add
add
dec
dec
jb
jb
add
sub
add
add
add
add
push
push
push
push
push
push
push
push
into
into
into
into
add
add
add
or
or
or
addl
xchg
xchg
fiadds
add
add
lods
lods
lods
lods
lods
add
into
into
into
into
into
into
into
xor
xor
add
mov
div
div
imul
mov
lock
push
push
add
add
add
add
add
jp
jp
add
add
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
mov
dec
scas
scas
scas
add
sti
jl
jl
jl
jl
jl
jl
jl
jl
jl
add
add
add
and
shlb
lret
lret
lret
lret
lret
lret
add
add
add
cmpsl
incl
add
add
jbe
jbe
jbe
fs
loope
loope
sub
and
and
add
add
add
add
add
add
out
out
out
out
out
sahf
sahf
sahf
sahf
sahf
frstor
and
and
and
add
add
cmp
fstp
fstl
mov
push
push
push
push
push
push
rol
rol
rol
rol
faddl
xchg
push
push
push
push
push
push
push
push
mov
add
rolb
add
add
add
xchg
xchg
xchg
filds
add
add
add
add
hlt
hlt
hlt
hlt
hlt
add
add
add
pop
pop
pop
pop
pop
pop
pop
pop
mov
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
cli
cli
add
add
add
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
inc
inc
inc
inc
inc
rol
lret
sub
add
mov
sahf
sahf
add
add
add
xchg
xchg
add
adc
add
add
add
decb
adc
adc
add
dec
dec
dec
add
add
add
add
add
add
add
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
adcl
dec
dec
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
xchg
xchg
je
lock
mov
mov
mov
mov
adc
adc
adc
adc
adc
sti
cld
cmp
cmp
cmp
cmp
rol
add
mov
add
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
add
inc
inc
pusha
pusha
pusha
pusha
pusha
pusha
pusha
add
add
add
add
sub
add
add
andl
cmc
cmc
add
ja
adc
int
int
aaa
aaa
aaa
aaa
aaa
aaa
aaa
jbe
push
push
js
js
add
add
add
outsb
outsb
outsb
outsb
add
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
int
push
push
push
push
add
std
std
std
std
std
std
std
add
jg
jg
jg
jg
jg
add
icebp
icebp
icebp
or
or
or
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
inc
adc
adc
jne
dec
dec
dec
dec
dec
dec
add
mov
mov
lcall
push
add
inc
ja
iret
iret
les
add
add
add
add
add
add
add
add
add
fisubs
insb
insb
insb
add
add
add
aaa
aaa
aaa
aaa
add
cmp
add
jle
jle
jne
jne
add
addl
addl
add
mov
and
and
outsb
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
pop
pop
popf
popf
popf
popf
add
mov
leave
leave
leave
leave
leave
leave
leave
leave
add
jbe
jbe
mov
mov
inc
aaa
aaa
aaa
aaa
aaa
cmp
cmp
lret
add
test
push
add
add
add
add
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
pop
add
add
imul
imul
imul
mov
mov
mov
mov
jmp
jmp
and
and
and
filds
add
sbb
sbb
sbb
out
out
out
sldt
and
and
and
and
and
and
add
mov
mov
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
ret
xor
xor
je
je
je
je
je
daa
cmp
cmp
add
add
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
sbb
sbb
sbb
sbb
cltd
cltd
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
add
add
add
xor
mov
sub
sub
add
add
pop
pop
pop
pop
pop
pop
pop
xchg
xchg
xchg
xchg
xchg
inc
inc
add
add
add
add
push
push
addl
mov
int
int
int
int
add
mov
or
or
cltd
add
dec
jge
jge
mov
add
lods
lods
lods
lods
lods
lods
imul
imul
add
push
push
push
push
push
push
push
push
add
add
add
cld
cld
aad
aad
aad
jne
or
addb
adc
mov
gs
jle
jle
jle
jle
mov
mov
add
dec
dec
dec
dec
dec
dec
dec
add
add
add
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
lods
lods
lods
lods
lods
lods
lods
lods
lods
fadds
lret
lret
lret
lret
lret
add
add
add
push
push
push
adc
adc
adc
adc
inc
inc
sbb
sbb
sbb
push
push
push
push
push
push
push
push
push
maxps
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
and
cmp
cmp
add
add
add
jle
jle
jle
jle
sbb
add
mov
mov
mov
mov
add
add
add
ret
jecxz
inc
inc
inc
inc
aad
aad
aad
in
add
add
add
add
jno
mov
add
add
add
rcl
rcl
rcl
rcl
rcl
hlt
hlt
dec
add
popl
add
xor
xor
xor
xor
repnz
xchg
xchg
xchg
xchg
xchg
in
add
add
rcl
rcll
daa
xor
xor
xor
add
add
add
rol
nop
nop
fcompl
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
add
add
add
insl
insl
insl
add
add
call
add
add
inc
add
add
add
or
xchg
jg
add
add
jecxz
jecxz
jecxz
jecxz
jo
pop
pop
add
xor
cmp
add
mov
jbe
jbe
jbe
jbe
jnp
jnp
jnp
jnp
jnp
jnp
add
add
add
add
add
add
add
or
je
je
add
leave
leave
leave
leave
leave
add
mov
mov
add
addl
or
or
je
inc
inc
movsl
stos
stos
push
push
push
push
push
push
add
add
add
add
add
xor
xor
xor
stos
add
add
daa
add
or
or
or
or
or
or
imul
add
add
add
inc
inc
inc
push
add
add
xchg
add
add
jp
jp
add
add
add
fists
dec
cmp
cmp
lret
lret
inc
inc
inc
inc
jae
jae
jae
dec
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
add
add
xlat
xlat
xlat
add
sub
sub
add
add
in
sbb
add
add
add
xor
xor
xor
add
add
add
add
sub
rcl
rcl
rcl
rcl
rcrb
rcl
rcl
rcl
shrb
add
add
add
add
add
add
jmp
add
pusha
pusha
pusha
pusha
pusha
mov
or
clc
clc
clc
clc
clc
clc
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
or
iret
add
test
cmc
cmc
cmc
cmc
cmc
add
add
add
add
add
add
cltd
aam
add
add
dec
dec
cmp
cmp
ljmp
mov
add
add
add
add
mov
mov
mov
mov
cmp
cmp
cmp
inc
inc
inc
inc
inc
add
sbb
sbb
or
or
or
push
push
push
push
push
push
push
push
push
push
push
add
add
dec
add
add
add
cs
jb
xchg
xchg
inc
inc
inc
inc
add
add
daa
aam
add
add
addr16
pop
pop
pop
pop
pop
pop
pop
pop
pop
or
addl
add
add
jno
or
or
or
add
push
push
cli
cli
cli
cli
cli
xor
xor
lcall
push
push
push
push
push
push
push
push
push
push
push
push
push
push
data16
add
add
add
ret
ret
ret
ret
jbe
jbe
jbe
add
add
add
add
add
add
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xor
xor
add
add
add
add
addl
mov
push
push
push
push
pusha
add
add
add
add
fcmovnu
fcmovnu
les
add
add
in
add
addb
fcmovnu
fcmovnu
fcmovnu
add
add
add
mov
add
add
xor
add
add
add
rcl
rolb
add
add
in
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
mov
add
mov
or
or
or
add
add
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
data16
add
add
add
mov
mov
mov
mov
add
jmp
dec
dec
or
or
or
pop
add
and
and
and
and
and
addb
int3
int3
int3
int3
int3
int3
int3
int3
int3
std
std
std
std
std
std
std
std
or
sub
xchg
add
sub
ss
adc
outsb
add
xchg
inc
inc
inc
inc
add
add
add
hlt
xchg
xchg
add
mov
mov
dec
dec
dec
add
add
add
xchg
add
loope
mov
out
out
out
add
add
jnp
mov
sub
sub
sub
sub
add
and
and
addr16
daa
daa
daa
daa
add
adc
and
add
add
add
add
add
aas
add
add
or
or
or
or
or
or
mov
mov
popa
scas
scas
scas
scas
xacquire
add
enter
mov
test
imul
add
push
add
jle
jle
in
in
in
in
in
pop
cli
xchg
lret
lret
lret
lret
lret
es
scas
add
cwtl
in
in
int
pop
pop
pop
jnp
jnp
call
and
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
sub
test
test
test
sbb
sbb
pushw
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
add
add
adc
sti
fstp
fstp
out
out
out
add
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
push
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
hlt
hlt
hlt
hlt
xchg
xchg
add
aad
xchg
add
and
and
div
filds
add
add
add
pop
out
out
add
fcomp
fadds
add
adc
adc
add
add
add
jo
jo
jo
jo
jo
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
cmpsl
add
inc
inc
inc
inc
aam
aam
add
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
rol
rol
rol
rol
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
div
div
div
div
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
add
xchg
xchg
outsb
outsb
outsb
outsb
hlt
hlt
hlt
hlt
hlt
mov
mov
mov
mov
mov
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
or
add
add
dec
dec
dec
dec
dec
add
jecxz
add
add
loop
fwait
fwait
test
add
cmc
cmc
cmc
in
add
add
add
dec
dec
dec
dec
out
sahf
sahf
sahf
sahf
sahf
sahf
loopne
loopne
mov
mov
jge
xchg
xchg
xchg
xchg
call
adc
add
add
add
add
add
add
add
add
add
add
insb
insb
insb
insb
insb
insb
insb
add
add
dec
dec
int3
int3
add
add
dec
add
add
add
add
add
add
ss
mov
add
add
add
add
mov
add
add
addb
cs
ret
ret
ret
ret
ret
ret
ret
ret
ret
add
add
add
add
add
add
add
cs
add
fwait
fwait
fwait
jg
jg
jg
mov
mov
dec
dec
dec
dec
scas
scas
mov
mov
pushf
pushf
pushf
pushf
pushf
push
push
add
inc
inc
inc
lret
lret
add
mov
mov
mov
xchg
faddl
insl
insl
add
repz
cmp
cmp
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
iret
pop
pop
pop
pop
pop
into
into
into
add
add
sti
sti
sti
sti
sti
sti
sti
out
out
test
test
add
add
and
and
and
inc
inc
inc
inc
push
push
push
push
push
push
aam
aam
aam
add
imul
add
mov
mov
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
fcmovu
mov
das
das
das
das
das
das
das
das
add
les
popf
inc
add
add
add
add
les
add
xor
mov
ficompl
sbb
dec
add
mov
mov
cmp
cmp
in
in
in
aad
add
add
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
add
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
add
data16
cmp
rol
push
push
push
push
add
add
and
and
add
add
add
jmp
add
add
add
add
add
pop
pop
sbb
flds
add
dec
push
push
push
push
lcall
jb
test
add
add
adc
adc
sahf
sahf
sahf
add
add
add
push
push
push
push
push
push
push
mov
add
add
add
add
add
repnz
inc
xchg
add
add
fistpl
pop
pop
pop
pop
pop
pop
pop
pop
pop
jo
add
add
add
ds
repz
xor
xor
add
add
cmp
cmp
cmp
fcmovnu
fcmovnu
fcmovnu
fstpt
xor
pop
pop
pop
pop
add
cmp
ret
ret
add
add
add
add
push
push
add
cld
cltd
cltd
add
add
add
add
je
je
je
xor
xor
add
add
add
dec
push
push
push
push
add
add
in
in
jge
jge
jge
nop
nop
nop
nop
nop
lea
add
add
sti
sti
sti
sti
sti
sti
sti
sti
and
and
and
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
xchg
pop
pop
pop
pop
pop
pop
pop
pop
push
push
or
or
add
push
push
push
push
push
in
in
in
in
in
in
in
in
mov
or
dec
pop
out
pusha
and
ret
arpl
pusha
bound
test
mov
mov
and
rclb
in
aas
jb
push
andb
hlt
test
rcr
es
jb
fwait
or
pusha
bound
inc
sub
inc
cmp
stos
pusha
subb
jge
xchg
sti
and
add
in
fisubs
inc
inc
cltd
xchg
pop
xor
mov
hlt
mov
mov
cmp
push
je
pop
pop
sub
cld
cmc
dec
and
mov
add
stos
rcll
or
inc
push
and
mov
mov
in
sbb
or
fwait
jo
addb
call
push
rolb
fldenv
inc
pusha
mov
inc
add
add
mulps
lret
add
lret
aad
sbbl
dec
pop
xor
iret
imul
push
pusha
loopne
stos
sub
sbb
aam
into
jo
dec
mov
inc
lret
sub
dec
push
test
add
push
pusha
and
mov
or
and
cmp
ret
inc
pop
push
dec
dec
jmp
add
xchg
push
sbb
neg
sbb
inc
test
loopne
mov
test
aas
pushf
shr
add
pushf
pushf
insl
jne
dec
push
and
xchg
lock
inc
addb
cmp
pop
and
mov
fidivl
loopne
cwtl
iret
jmp
loopne
int3
aam
rolb
and
arpl
and
push
rcl
pop
pop
sbb
mov
rol
fldl
ret
add
adcb
add
inc
cld
jbe
in
repnz
xor
nop
call
push
jne
stos
pop
vaddsubpd
add
xlat
or
sub
and
mov
sub
add
in
addr16
test
or
imul
icebp
mov
push
jbe
pop
scas
mov
jne
push
test
loopne
jmp
add
call
inc
clc
pop
xlat
aaa
test
pusha
mov
add
pop
mov
jp
adc
inc
hlt
mov
jnp
xchg
and
inc
dec
jne
ja
mov
clc
dec
addb
inc
dec
mov
jno
stc
pop
mov
loopne
jmp
rcrb
push
mov
test
or
and
sti
push
or
rorb
int
int
inc
loopne
lods
add
cwtl
rorb
mov
cli
aad
rolb
pusha
ror
mov
mov
dec
xor
push
mov
test
adc
shl
mov
pop
jb
mov
xchg
addr16
cmp
loopne
mov
inc
loopne
icebp
stos
loopne
data16
mov
lret
andb
shlb
test
pusha
shrb
orb
jg
rclb
mov
mov
pusha
inc
cmp
addr16
dec
js
repnz
add
push
pop
icebp
iret
andl
rclb
popa
pop
inc
stos
rolb
xor
xchg
and
mov
adc
popa
jg
add
cs
jbe
ror
stc
and
scas
and
add
das
clc
jne
xchg
pop
je
loopne
pop
xor
in
addr16
push
shlb
fmull
addl
mov
lcall
jle
xor
mov
ret
cmp
int3
mov
mov
pop
fnstenv
mov
rcr
adc
push
sub
loopne
mov
in
into
dec
bound
pop
push
int3
faddl
ret
add
push
aas
lods
add
addb
pusha
pusha
push
pop
aas
into
xchg
test
or
movsb
mov
ss
test
clc
subl
jmp
mov
lret
push
andb
pop
mov
gs
andb
mov
sbb
ret
out
lahf
mov
es
inc
inc
add
shlb
mov
mov
cmp
test
stc
jbe
fists
add
cmpsl
fsubrp
jmp
add
add
shrb
sbb
out
pop
or
iret
fpatan
idivl
mov
add
stc
xlat
add
mov
jnp
mov
push
pusha
add
adc
mov
pop
and
mov
cltd
mov
insb
jge
outsl
sbb
cmp
dec
xchg
adc
and
mov
shr
inc
mov
xchg
jnp
mov
pusha
add
sbb
clc
xchg
pop
popf
loopne
shrb
or
and
mov
add
pop
mov
cmp
aad
aad
scas
stos
and
jl
aaa
repnz
pop
cltd
pop
xor
cmpsb
mov
loopne
mov
xorb
insl
mov
push
add
sarb
pop
out
je
inc
and
pusha
fnstenv
mov
in
pusha
lret
jl
into
clc
push
ljmp
adc
test
rcr
loopne
mov
test
pusha
aaa
pop
mov
stos
mov
pushl
add
repz
adc
push
sbb
or
loopne
mov
add
and
xchg
scas
mov
notl
dec
in
loop
aad
fwait
arpl
fisubl
xchg
xchg
fadds
and
push
and
sbb
pushf
dec
push
cmpl
mov
clc
lods
rol
mov
icebp
scas
shlb
mov
fbld
rol
test
addb
push
pusha
shl
imul
add
mov
andb
outsb
xchg
lahf
pop
sub
mov
mov
inc
sar
mov
pushl
cmp
mov
inc
mov
cmp
inc
shrb
and
sbb
test
inc
call
outsb
dec
lods
call
sbb
and
aam
nop
das
push
sahf
xchg
sbb
imull
mov
hlt
popf
cmpsb
inc
pusha
adc
nop
nop
je
add
cmp
inc
inc
add
xchg
aam
jo
sub
add
mov
movsb
and
outsl
inc
or
and
movsl
sbb
inc
stos
fidivs
aaa
jbe
mov
add
rolb
dec
xchg
out
jp
ljmp
add
mov
xlat
in
sub
and
inc
dec
cltd
xor
leave
add
mov
stos
mov
shrl
ja
sbb
xor
pushfw
mov
loopne
and
and
pop
mov
dec
subl
mov
and
sar
or
cmp
mov
mov
ficompl
add
rolb
test
and
arpl
push
xor
push
mov
lcall
iret
lret
loope
sbb
add
mov
add
insl
cli
scas
incb
push
clc
sbb
or
loopne
or
subl
adc
mov
ja
lods
mov
lock
inc
inc
arpl
jg
push
fcos
inc
xchg
inc
mov
in
mov
stos
inc
add
pusha
xor
scas
mov
dec
addr16
test
sti
mov
aas
ljmp
jp
test
adcb
add
or
loopne
and
xchg
push
sti
jmp
nop
and
mov
in
pusha
cmp
or
loopne
shll
and
push
push
std
dec
mov
pop
addb
pusha
rorb
pusha
xchg
test
adc
push
shl
sbb
adc
sbb
mov
pusha
in
int3
rclb
jmp
mov
mov
add
sub
push
scas
mov
add
and
mov
test
lret
loopne
in
jg
add
imul
xchg
sbb
pop
imull
andb
jmp
mov
xchg
and
or
add
enter
dec
xor
fs
mov
inc
fs
sub
jne
movsb
rolb
cmp
nop
shll
sbb
daa
pop
in
out
clc
xchg
bound
lds
mov
add
add
sarb
mov
push
xchg
mov
loopne
inc
inc
add
add
jmp
jmp
sbb
loopne
fsubl
pusha
shlb
loopne,pn
jmp
pusha
xor
push
fnstcw
lret
das
dec
sti
int3
lods
add
add
into
mov
pop
and
in
jg
sub
rcrb
popf
mov
js
xchg
mov
adc
lcall
rolb
inc
xchg
pop
sbb
jmp
lea
loopne
movb
fdivrs
pusha
inc
or
sub
in
imul
loope
xchg
push
or
pusha
adc
and
xchg
and
outsb
cmp
pop
jmp
lds
andb
cmc
daa
jns
adc
xchg
aaa
jnp
fisubrs
add
and
mov
and
sar
out
popa
lods
loopne
cmp
jnp
pcmpgtb
jge
cmc
jnp
leave
jge
pop
jg
push
shl
test
fiaddl
aaa
test
andb
cli
jnp
sub
rolb
sub
call
inc
les
xor
es
inc
test
decl
pusha
cmpb
and
pusha
sub
pusha
push
xchg
arpl
inc
push
and
mov
and
mov
mov
insb
pop
lods
mov
jb
movsl
add
jmp
pusha
sarb
jno
arpl
mov
sbb
cmovge
push
mov
test
orb
mov
dec
xlat
loopne
fstl
sub
and
pop
loopne
lods
cwtl
xchg
xchg
inc
fisubrs
mov
stos
pop
xlat
xchg
and
mov
out
cmpl
cmpsb
loopne
xor
fwait
cmp
rolb
mov
test
inc
add
mov
mov
pushf
or
std
or
lods
inc
loopne
and
rol
fcoml
les
inc
rcrb
mov
inc
cmpsb
add
mov
add
and
or
aas
frstor
je
scas
mov
add
jmp
and
mov
scas
mov
add
fmull
loopne
stc
mov
test
pop
add
add
sub
ds
dec
cmc
dec
insl
aaa
cli
pop
cmp
cmp
out
rolb
aaa
cld
sub
loopne
in
dec
ja
ja
dec
enter
repnz
pusha
shlb
push
push
mov
cwtl
pop
xchg
jne
roll
int3
loope
adc
mov
cmc
loopne
xlat
sbb
and
loopne
dec
rclb
or
mov
pop
nop
aaa
ret
push
fisttpll
mov
shl
sbb
adc
mov
nop
jge
out
psubusb
dec
bound
inc
or
and
mov
cmpb
test
inc
mov
pop
adc
mov
loopne
dec
and
dec
aad
arpl
inc
mov
and
xorb
ja
adc
push
pop
xor
or
inc
mov
sub
and
andb
pusha
pusha
sub
sbb
inc
mov
gs
xchg
insb
repz
pusha
dec
filds
sbb
pop
mov
xor
sbb
inc
adcb
lahf
fidivl
mov
dec
push
push
lods
andb
dec
pusha
gs
add
lcall
shll
add
xor
adc
xchg
mov
shlb
jge
das
dec
and
mov
add
rolb
loope
jbe
add
and
adc
push
pushl
mov
rclb
popf
outsl
xchg
push
shl
sbb
ja
shlb
repnz
in
fsubs
add
mov
cltd
les
shlb
popf
sbb
jp
inc
add
push
mov
shrb
frstor
push
loop
pusha
and
cwtl
add
idivl
cli
mov
arpl
dec
sub
add
enter
fcmovne
insb
hlt
mov
rcrb
test
addl
and
mov
icebp
int
and
fsub
pop
ficomps
stos
mov
lods
add
mov
pusha
mov
pusha
or
adc
stos
pusha
rclb
loopne
in
cli
pop
lods
fisubs
pop
test
jne
adc
movsb
rolb
lret
and
and
rolb
inc
inc
jns,pt
or
pop
dec
inc
divb
lock
pop
out
gs
pop
fstpl
cli
xchg
push
jne
xchg
push
and
jmp
push
arpl
notl
mov
and
loopne,pn
addr16
cld
out
add
push
imul
sti
dec
push
inc
jl
inc
and
adcb
addb
rolb
loopne
xor
jg
and
xchg
mov
push
jb
shl
into
leave
int
sub
add
sbb
lea
cli
movsb
shlb
insl
enter
insb
pop
push
mov
out
fcos
mov
and
rcr
mov
pop
pushf
repnz
add
add
sbb
popa
mov
in
push
das
jle
and
mov
test
insl
shl
in
leave
into
mov
shl
pusha
mov
mov
inc
dec
mov
loopne
or
iret
xor
jle
data16
mov
cmp
loopne
push
inc
dec
jne
scas
add
and
mov
loopne
push
mov
fistps
jmp
dec
jb
jo
jae
shll
fwait
out
lea
sahf
mov
pusha
sarb
daa
xor
rolb
and
loopne
jl
ret
mov
call
inc
loopne
dec
sub
loopne
xchg
sub
lock
xchg
test
pusha
popa
xchg
mov
mov
arpl
sahf
jne
sub
fs
adc
pusha
xorb
mov
test
sub
andb
jecxz
pop
mov
cmp
jmp
lcall
and
mov
mov
cmp
dec
lcall
jno
mov
aaa
imul
dec
push
mov
add
push
or
rclb
mov
loopne
inc
and
add
mov
inc
outsl
imul
loop
scas
pusha
add
push
arpl
shlb
push
push
push
xchg
cwtl
jne
xor
mov
push
pusha
ror
shlb
nop
test
cmp
out
add
add
shrb
mov
lea
jae
rolb
sbb
enter
and
xor
pusha
and
add
pusha
pop
mov
or
std
sti
pop
xor
inc
and
jno
jb
loopne
gs
inc
jmp
stos
sbb
sub
add
and
push
inc
rcrb
mov
push
lds
pop
add
and
add
loopne
add
movsb
add
dec
cs
orb
shrb
xchg
inc
pop
mov
xrelease
inc
push
jae
and
add
scas
xchg
iret
pop
inc
leave
cld
mov
loopne
call
sar
out
xor
add
mov
mov
and
jne
or
loopne
outsb
and
and
xchg
jp
xor
sarb
stc
ss
lea
cmpsb
pusha
inc
mov
mov
mov
cltd
add
pop
inc
adc
roll
mov
jne
loope
addb
out
rolb
sar
repz
mull
lahf
adc
jecxz
inc
and
inc
xchg
push
mov
loopne
inc
dec
movsb
andb
or
fisttpll
jne
and
inc
pop
mov
pop
or
jmp
xor
push
clc
popa
shll
mov
out
addb
inc
ljmp
stc
xchg
in
mov
subb
loope
loopne
into
xchg
pop
loope
jg
std
jne
jbe
add
mov
bnd
icebp
xchg
xor
add
fidivl
rcll
pusha
add
xchg
scas
dec
push
andb
xchg
dec
idivl
fs
shlb
mov
xchg
pusha
mov
cmp
and
lods
mov
xor
pop
cmp
and
cmpsl
mov
xorb
jbe
in
out
mov
add
and
inc
dec
xor
inc
addb
mov
push
sub
mov
ret
inc
pop
inc
test
pusha
push
or
mov
add
lods
or
add
jl
ja
jae
clc
andb
pop
in
insb
push
sbb
inc
fsubrl
mov
aas
pop
add
and
mov
mov
sbb
loopne
dec
push
and
push
push
loopne
add
pop
pop
orl
std
imul
mov
jo
data16
inc
jns
cmp
pop
hlt
push
and
mov
fsubrl
pop
mov
fwait
cmp
stos
inc
rcl
fisttps
mull
jl
cmp
ret
ds
sbb
sub
sbb
jle
movsl
mov
add
push
pop
xor
addr16
shlb
add
hlt
add
loopne
inc
cmp
add
add
out
inc
shlb
xor
adc
xor
out
std
arpl
inc
sbb
cmp
loopne
adc
mov
xor
cmc
jle
cltd
addl
and
push
push
lret
mov
mov
add
push
push
push
and
push
call
sub
add
imul
lea
mov
and
test
je
mov
push
push
bnd
test
cld
jne
mov
add
push
push
push
push
call
test
jne
xor
push
push
lret
lea
andl
push
push
push
push
call
cmp
lea
jne
movzbl
or
pop
mov
add
not
imul
and
jne
call
rorb
notrack
sbb
mov
add
add
mov
mov
mov
inc
or
lea
lea
add
lea
shr
add
sub
and
jmp
push
mov
jmp
mov
lahf
xor
mov
test
lret
or
andb
push
test
adc
jne
mov
ret
xchg
test
mov
mov
scas
add
roll
shl
push
dec
in
fnstenv
rolb
fs
in
shl
nop
enter
mov
aam
inc
dec
push
fs
xor
mov
inc
sbb
xchg
xchg
adc
icebp
xchg
pusha
ljmp
scas
shrl
shlb
mov
jnp
enter
pusha
jp
and
test
xchg
pop
jne
cmc
test
movsl
daa
inc
jl
in
or
pusha
push
or
and
pop
mov
mov
loopne
and
addb
or
inc
pusha
scas
in
and
xchg
push
mov
hlt
sti
loope
jns
mov
pusha
loopne
and
cmp
stos
add
push
mov
sbb
mov
lcall
fcmovnbe
jne
push
ret
lret
test
int3
sub
jb
in
fistpl
mov
mov
out
decl
pop
inc
push
and
add
rorl
dec
inc
mov
rol
xchg
loop
imul
andb
mov
and
out
in
xchg
xchg
stos
and
lods
pusha
rorb
add
adc
lock
fmuls
shlb
loopne
dec
mov
roll
arpl
sbb
cmc
xor
scas
or
push
and
pusha
inc
sbb
rcr
cmpsb
add
je
out
aas
pop
push
lods
and
pusha
rcrb
loopne
shll
mov
in
add
mov
push
ret
and
popa
gs
add
push
xor
out
mov
push
push
sub
cltd
pusha
push
push
jecxz
dec
stos
das
cld
dec
mov
adc
xchg
stos
addb
popa
sti
xchg
xchg
sbb
leave
js
loopne
mov
mov
mov
cmp
ds
sub
mov
shrb
inc
pusha
push
aad
out
mov
jge
insb
mov
and
rol
andb
adc
add
insl
xchg
mov
mov
push
out
xchg
cltd
pushf
or
loopne
push
sbb
in
mov
add
insl
lds
push
dec
insl
fdivrp
sti
mov
je
in
push
pop
sbb
xor
outsl
daa
fstpl
jne
shlb
cld
adc
ret
inc
xorb
inc
sub
inc
cmp
add
dec
xchg
pop
pop
ret
mov
popf
outsb
clc
leave
roll
jg
pop
xor
pop
push
mov
cld
push
add
xor
mov
push
into
in
ret
push
lds
ja
sahf
add
shrb
pusha
mov
pop
inc
cli
dec
ficompl
movsl
aad
pop
pop
mov
addb
leave
in
stc
mov
pop
mov
pop
mov
cmc
jae
jno
add
rolb
jae
adc
mov
leave
and
pop
cmc
aaa
or
mov
xorb
lock
or
cmpsb
and
aas
insb
aaa
jnp
pop
call
inc
aas
sbb
sub
pusha
ja
push
and
xor
cmp
jl
lret
das
xchg
or
and
inc
pop
rcrl
sub
out
or
and
mov
push
pusha
and
in
pusha
cmpb
aaa
scas
and
lcall
mov
xor
shlb
fwait
xchg
shrb
fdivp
cli
mov
add
mov
mov
sahf
xor
cmpsb
mov
ljmp
xchg
and
dec
stos
rol
mov
and
and
out
mov
inc
cmp
xchg
rcrl
mov
adc
push
addb
inc
cld
js
in
push
cmc
stos
and
js
shlb
pop
lods
inc
lret
inc
ffree
jmp
loopne
or
inc
inc
testb
pusha
pop
insl
stos
sti
mov
test
lcall
xor
repz
pusha
test
je
dec
psraw
inc
ljmp
cmp
ds
mov
pop
test
xor
movhps
mov
pusha
or
push
or
loopne
inc
and
inc
jae
or
pop
jecxz
or
xorb
pop
int
pusha
pusha
stos
ss
in
rol
shll
dec
xor
mov
test
push
loopne
mov
stos
fistpll
mov
adc
pusha
jne
xchg
mov
adcl
addb
rolb
sbb
hlt
pop
insb
stos
leave
addb
aas
sbb
fidivrl
mov
pusha
int
adc
cmp
popa
aaa
sahf
dec
cli
push
addb
adcb
inc
and
jo
andb
xorl
test
cmpb
je
loopne
fwait
divb
and
sti
sub
and
test
lea
inc
repz
dec
xor
xorl
fs
inc
dec
jae
or
loopne
pop
inc
lds
pop
mov
sbb
into
inc
jl
or
mov
pop
jns
sahf
push
dec
push
cmp
imul
or
mov
lods
and
fldt
sub
and
fistpll
mov
inc
inc
adc
subb
mov
inc
out
out
pusha
add
rcll
mov
andb
pusha
cld
aas
fcmovnu
cmp
std
inc
inc
insb
dec
rsm
inc
mov
lret
mov
dec
mov
pusha
inc
jno
pusha
jmp
jecxz
addb
or
pusha
xor
lock
andb
lahf
inc
push
lret
addb
shlb
shlb
subb
adcb
repz
cmpsb
mov
or
mov
imul
ds
fmull
xchg
ret
out
arpl
mov
int
mov
or
and
mov
add
jbe
push
test
add
loopne
jae
xor
fstpl
push
inc
xorb
andb
cmp
cmpsl
mov
negb
xchg
or
pusha
pop
sbb
aas
push
jl
rol
jb
xchg
rorb
into
mulb
inc
push
scas
fstl
inc
insl
mov
add
mov
loop
or
aas
lods
outsb
xchg
pop
int
aad
xor
jno
dec
xchg
and
dec
pop
fucomi
jns
jnp
and
rolb
pusha
mov
cmp
loopne
hlt
loop
lods
rorl
mov
pop
adc
push
cmpsb
pusha
rcl
daa
dec
das
repz
add
mov
push
data16
and
dec
hlt
adc
push
addr16
les
push
fs
in
mov
mov
js
jns
out
pusha
and
andb
push
loopne
incb
pusha
pusha
fmuls
lods
fidivl
movsb
and
nop
jno
or
rclb
adc
outsl
cmp
mov
adc
pusha
shr
test
cmp
stos
inc
inc
mov
in
bound
pusha
and
xlat
mov
mov
hlt
add
stos
add
popa
jns
fstpt
or
push
jns
out
xor
push
xchg
cli
popa
test
jns
insb
stos
inc
add
cmp
jo,pt
sub
mov
fisubs
andb
dec
cli
sahf
addr16
lock
ret
add
pusha
add
aam
add
mov
push
pop
je
ds
inc
mov
sbb
stos
inc
mov
push
inc
xor
mull
add
pop
fmulp
mov
inc
or
pusha
and
cmc
xchg
xor
pop
sbb
andb
jecxz
ja
into
fmuls
aaa
adc
stos
pusha
and
test
aas
adc
rcr
in
pusha
orb
xor
mov
pusha
cmpb
mull
les
orl
xchg
lcall
shlb
adc
adc
pusha
shlb
xor
or
loopne
aad
filds
shlb
leave
xor
sub
xor
movsb
and
and
dec
lock
stos
inc
add
add
mov
ss
insl
mov
sub
mov
sarb
push
movsb
shl
rcl
scas
add
sub
cld
mov
pop
push
test
pusha
mov
aas
mov
jnp
inc
jns
addb
jge
or
inc
pushf
bound
jge
ret
push
test
pusha
cmpsb
mov
mov
icebp
xchg
dec
pop
and
cmp
mov
mov
mov
mov
pop
mov
push
sbb
inc
pushf
int3
xor
jmp
adc
test
fadds
cmp
in
xchg
inc
gs
mov
stos
mov
and
shlb
insl
bound
sahf
in
mov
fidivrl
inc
ds
orb
xchg
add
add
shlb
sti
scas
pusha
add
add
adc
int
mov
mov
clc
pop
push
lcall
ret
add
ret
xor
stos
add
insl
or
mov
add
add
push
mov
add
inc
inc
dec
or
adc
mov
test
nop
sub
or
daa
mov
sbb
fcoms
pop
mov
lock
inc
outsl
jb
data16
and
sbb
push
push
imul
add
add
daa
xorl
mov
cmp
and
lret
lea
mov
nop
mov
cmc
testb
push
mov
or
loopne
adc
stc
loopne
test
les
mov
push
push
add
inc
call
adc
mov
out
loope
and
inc
gs
loopne
xchg
push
and
inc
mov
and
jmp
add
rolb
rcrb
stos
repz
inc
icebp
mov
pop
push
je
shrb
lcall
add
dec
and
rol
add
or
inc
ljmp
outsb
sub
test
cli
arpl
inc
rol
arpl
xchg
movsb
and
or
mov
out
sub
xor
sub
inc
fcomps
jae
imul
repz
jecxz
fisubs
add
imul
jb
xlat
or
add
mov
xchg
outsl
stos
mov
adc
push
jmp
in
mov
mov
rcr
into
inc
mov
leave
fnstsw
fwait
stos
or
loopne
dec
or
lret
jg
mulb
call
call
cmp
dec
pop
ror
mov
inc
lcall
xchg
aas
gs
int
mov
pusha
xorl
shll
ja
pusha
subb
fdivs
imul
cmp
xchg
xchg
inc
add
loopne
and
mov
rol
aad
ror
fisttpll
xchg
lret
jp
xlat
frstor
sub
mov
ja
dec
cmp
sub
add
pop
jae
sub
and
xchg
jbe
loop
add
mov
stos
inc
mov
xchg
or
mov
inc
mov
insl
call
dec
pop
adc
inc
call
and
dec
dec
dec
outsb
scas
je
mov
insl
or
xchg
pop
and
xchg
push
ja
xchg
int3
mov
mov
lock
sbb
adc
inc
jo
sbb
stos
loopne
lods
inc
mov
cmc
insb
test
loopne
enter
loopne
rorb
pusha
loopne
xchg
inc
icebp
add
movsl
add
mov
add
hlt
testb
and
mov
jecxz
shl
dec
ds
nop
test
cmp
cmp
imul
pop
mov
jmp
sbb
loopne
sti
sar
int
mov
js
and
push
jecxz
pusha
subb
loop
add
andb
jo
in
xchg
inc
push
jmp
sbb
pusha
iret
movb
and
shll
inc
addr16
rol
jmp
pop
cmp
sbb
mov
daa
insl
xchg
inc
sbb
mov
adc
rorb
pop
push
dec
xchg
push
inc
testb
pop
roll
sub
in
into
xlat
sbb
cltd
sbb
lret
cmp
push
mov
insl
pop
add
push
test
sarb
jnp
loope
sbb
rol
or
or
loopne
and
inc
push
movsb
rolb
je
mov
pop
ljmp
nop
cmp
fisttps
or
pusha
fldt
aas
pop
mov
inc
jno
test
shrl
mov
xlat
pop
sbb
mov
jle
and
aas
xchg
or
add
cmp
int3
adc
and
aas
adc
push
fcomps
lret
loopne
lds
add
test
and
sahf
mov
cmpsl
xor
mov
or
aad
inc
cmc
and
and
mov
fs
jmp
pusha
add
ficomps
and
inc
rep
cmp
push
add
outsb
mov
andb
push
mov
pop
inc
pop
dec
add
mov
call
jge
sub
fsts
andb
inc
shlb
sbb
pusha
pusha
xchg
mov
movsl
dec
cmp
cmp
sub
dec
mov
mov
mov
sbb
jns
or
mov
stos
mov
loopne
hlt
add
xorb
xor
iret
push
and
je
ss
int
sti
inc
pop
sbb
jmp
cmpsl
repnz
mov
inc
loopne
ss
movsb
mov
mov
xor
fwait
in
std
cmp
mov
push
les
and
or
scas
and
ljmp
neg
hlt
mov
std
push
clc
repnz
nop
nop
jae
add
add
or
repnz
nop
nop
jae
add
sbb
mov
mov
nop
jae
in
pop
les
push
push
mov
xchg
ret
jl
lahf
sub
sub
sbb
cld
nop
nop
jae
outsb
pop
icebp
scas
mov
xor
adcb
jmp
jbe
add
test
and
sar
repnz
nop
nop
jae
add
stc
stc
add
add
xor
jo
add
or
hlt
add
add
nop
push
mov
leave
nop
jmp
icebp
mov
add
add
push
clc
repnz
nop
nop
jae
pop
mov
rolb
jl
add
inc
and
clc
repnz
nop
nop
jae
add
mov
mov
adc
repnz
nop
nop
jae
jo
add
sub
sbb
add
repnz
nop
nop
jae
add
dec
shr
mov
cld
nop
nop
jae
add
add
and
ja
seto
in
leave
nop
jmp
in
les
add
insl
je
clc
repnz
nop
nop
jae
add
clc
repnz
nop
nop
jae
movsb
addl
add
pop
jne
clc
repnz
nop
nop
jae
add
pop
psubsb
repnz
nop
nop
jae
add
clc
repnz
nop
nop
jae
rcrl
mov
add
add
clc
repnz
nop
nop
jae
pop
add
mov
xor
mov
cld
nop
nop
jae
add
pop
aaa
jge
jns
or
repnz
nop
nop
jae
add
xor
add
repnz
nop
nop
jae
and
add
sub
jbe
clc
repnz
nop
nop
jae
sub
in
sbb
repnz
nop
nop
jae
rcrl
add
sub
pusha
mov
repnz
nop
nop
jae
shl
add
jnp
clc
repnz
nop
nop
jae
add
or
add
lahf
mov
cld
clc
repnz
nop
nop
jae
lods
movsb
pop
add
sub
add
clc
repnz
nop
nop
jae
mov
push
push
add
test
mov
repnz
nop
nop
jae
add
cmp
jg
clc
repnz
nop
nop
jae
pop
add
sti
loop
loopne
cmp
add
clc
repnz
nop
nop
jae
add
lods
jbe
sti
inc
test
nop
push
mov
leave
nop
jmp
add
clc
roll
add
bound
push
mov
xchg
ret
cmp
add
dec
movsb
xor
clc
repnz
nop
nop
jae
and
add
add
nop
nop
jae
add
add
add
add
test
shlb
loopne
addb
loopne
add
clc
repnz
nop
nop
jae
add
push
dec
loop
out
int
call
inc
add
add
sti
in
push
add
pop
push
mov
xchg
ret
dec
add
pop
add
es
nop
push
mov
leave
nop
jmp
add
xchg
add
add
and
mov
xchg
ret
rcrb
add
lea
nop
push
mov
leave
nop
jmp
leave
and
push
pop
xor
lock
loopne
push
clc
repnz
nop
nop
jae
add
in
add
stc
add
mov
xchg
ret
push
add
psubw
hlt
add
nop
nop
jae
xor
push
pop
add
lods
sbb
in
jmp
or
clc
mov
cmp
test
loopne
add
clc
repnz
nop
nop
jae
icebp
jne
add
add
add
clc
repnz
nop
nop
jae
and
add
add
stc
data16
clc
repnz
nop
nop
jae
mov
add
mov
mov
xchg
ret
addl
loop
je
clc
repnz
nop
nop
jae
lods
sar
stos
pop
nop
push
mov
leave
nop
jmp
add
add
rolb
mov
clc
repnz
nop
nop
jae
dec
jne
add
xorb
repnz
nop
nop
jae
add
jl
add
fistpl
clc
repnz
nop
nop
jae
outsb
add
sti
add
inc
loopne
call
clc
repnz
nop
nop
jae
cmp
mov
repnz
nop
nop
jae
push
add
add
dec
cmp
or
nop
jmp
in
add
add
mov
clc
repnz
nop
nop
jae
aaa
add
sti
imul
stos
inc
sbbb
adcl
repnz
nop
nop
jae
outsb
shrl
mov
leave
nop
jmp
add
add
shlb
jge
push
mov
xchg
ret
pop
or
sbb
pop
add
hlt
cmpsb
rolb
nop
nop
jae
add
add
push
mov
nop
push
mov
leave
nop
jmp
add
rolb
in
leave
clc
repnz
nop
nop
jae
sti
sarb
aaa
aaa
add
nop
push
mov
leave
nop
jmp
xchg
add
sub
jmp
aaa
mov
add
ficompl
adc
add
clc
repnz
nop
nop
jae
add
imul
nop
push
mov
leave
nop
jmp
dec
add
mov
das
pusha
clc
repnz
nop
nop
jae
add
or
add
lahf
cmpsl
add
push
mov
xchg
ret
add
in
mov
push
mov
xchg
ret
add
add
stc
pop
jl
add
nop
push
mov
leave
nop
jmp
add
add
pusha
and
cld
nop
nop
jae
add
jb
mov
jle
popf
pop
clc
repnz
nop
nop
jae
dec
cmp
add
mov
lods
mov
cli
and
add
repnz
nop
nop
jae
and
dec
roll
cld
nop
nop
jae
dec
sub
jbe
inc
shlb
lds
mov
and
sarl
add
add
add
add
add
pop
add
add
xor
hlt
add
add
sub
nop
nop
jae
add
lods
hlt
push
add
fisttpll
nop
nop
jae
clc
movsb
and
rolb
ss
and
icebp
fwait
nop
push
mov
leave
nop
jmp
push
xor
jl
dec
push
mov
and
clc
repnz
nop
nop
jae
and
add
stc
mov
inc
dec
xor
or
clc
repnz
nop
nop
jae
or
add
sbb
add
inc
adc
repnz
nop
nop
jae
add
xchg
add
repnz
nop
nop
jae
add
and
and
push
mov
leave
nop
jmp
add
add
int
add
mov
push
mov
xchg
ret
lds
sbb
icebp
andl
push
mov
leave
nop
jmp
sub
les
jbe
clc
repnz
nop
nop
jae
outsb
jge
in
fidivl
xchg
addl
jbe
clc
sub
clc
imul
and
add
repnz
nop
nop
jae
pop
stc
clc
ror
aas
clc
repnz
nop
nop
jae
add
add
popa
clc
repnz
nop
nop
jae
jne
add
add
mov
clc
repnz
nop
nop
jae
clc
rol
rcrl
cld
nop
nop
jae
or
add
add
lds
add
add
add
add
dec
sub
adc
xlat
nop
push
mov
leave
nop
jmp
add
pop
add
rol
sbb
test
cli
clc
repnz
nop
nop
jae
add
aaa
jne
out
out
clc
call
nop
jmp
dec
add
movlps
addb
mov
leave
nop
jmp
add
adc
add
add
icebp
fcmove
and
add
push
clc
repnz
nop
nop
jae
add
dec
add
push
lahf
add
fld1
clc
repnz
nop
nop
jae
pop
add
pop
imul
enter
mov
xchg
ret
ficompl
add
add
inc
push
mov
xchg
ret
add
add
or
mov
clc
repnz
nop
nop
jae
lds
add
roll
clc
repnz
nop
nop
jae
or
add
shlb
repnz
nop
nop
jae
lds
icebp
add
sub
aam
inc
add
cmp
add
rcll
mov
xchg
ret
pop
and
add
pop
dec
jne
clc
repnz
nop
nop
jae
add
add
push
mov
leave
nop
jmp
add
sbb
test
nop
push
mov
leave
nop
jmp
add
clc
fidivl
add
andb
rolb
mov
clc
repnz
nop
nop
jae
loop
aaa
pop
inc
jmp
push
imul
add
add
add
add
add
popf
fistpl
clc
repnz
nop
nop
jae
dec
add
jo
inc
xor
fistl
jae
inc
add
xchg
dec
xchg
pop
add
push
sub
lret
pushl
clc
repnz
nop
nop
jae
les
add
sub
mov
add
nop
jmp
add
pop
add
es
add
movzwl
clc
repnz
nop
nop
jae
and
pop
add
sbb
add
clc
repnz
nop
nop
jae
add
ltr
stc
adc
mov
push
mov
xchg
ret
in
outsb
pop
loop
add
clc
repnz
nop
nop
jae
sub
test
subb
pusha
imul
clc
repnz
nop
nop
jae
outsb
add
icebp
pop
add
repnz
nop
nop
jae
inc
sbb
cltd
jne
clc
repnz
nop
nop
jae
int
mov
and
clc
repnz
nop
nop
jae
movsb
add
pop
add
lods
pusha
inc
push
scas
push
push
mov
xchg
ret
stc
add
pop
add
dec
sub
shl
inc
inc
cli
push
loopne
insl
push
clc
repnz
nop
nop
jae
jbe
mov
outsb
pop
add
clc
repnz
nop
nop
jae
pop
sbb
inc
add
stos
add
mov
nop
nop
jae
lods
push
add
jo
add
push
clc
repnz
nop
nop
jae
pop
add
jne
add
cmpsl
shr
clc
repnz
nop
nop
jae
jbe
les
jbe
adcl
aad
inc
add
or
sub
mov
dec
cmp
repnz
nop
nop
jae
add
xchg
push
add
add
nop
push
mov
leave
nop
jmp
add
roll
add
adc
repnz
nop
nop
jae
add
stc
push
imul
push
mov
push
mov
xchg
ret
lds
dec
hlt
add
cmp
xor
push
mov
xchg
ret
add
add
add
push
add
in
stc
jne
clc
repnz
nop
nop
jae
add
cmc
cmp
nop
push
mov
leave
nop
jmp
sub
xchg
lods
icebp
dec
nop
push
mov
leave
nop
jmp
add
jl
add
loopne
loopne
int3
data16
mov
inc
add
and
aaa
jbe
add
addb
movzwl
nop
push
mov
leave
nop
jmp
jbe
cmovge
sti
mov
clc
repnz
nop
nop
jae
add
add
aad
xor
nop
pop
sub
push
mov
leave
nop
jmp
add
mov
push
mov
leave
nop
jmp
add
add
add
add
mov
xchg
clc
repnz
nop
nop
jae
add
add
push
iret
test
nop
push
mov
leave
nop
jmp
rolb
add
les
hlt
push
pushl
push
mov
xchg
ret
add
sbb
call
nop
jae
int
lds
jbe
jo
pop
push
nop
push
mov
leave
nop
jmp
jne
jl
movsb
dec
add
push
push
mov
xchg
ret
add
pop
rorb
pop
rcl
pop
jg
dec
cmp
repnz
nop
nop
jae
or
cmpsl
add
add
push
mov
xchg
ret
lds
roll
add
pop
fildl
lods
pop
inc
add
add
add
add
xor
mov
jb
push
mov
leave
nop
jmp
inc
jo
add
pop
push
mov
xchg
ret
xchg
add
pop
ficompl
add
nop
bound
in
cmpl
nop
push
mov
leave
nop
jmp
pop
dec
add
xor
popf
pop
clc
repnz
nop
nop
jae
add
leave
shrb
add
push
mov
leave
nop
jmp
leave
add
add
call
repnz
nop
nop
jae
or
add
jne
pop
mov
push
mov
xchg
ret
pop
psllw
add
rorl
mov
xchg
ret
sub
xchg
outsb
lea
inc
push
dec
clc
repnz
nop
nop
jae
stc
and
hlt
push
dec
clc
repnz
nop
nop
jae
pop
mov
inc
add
leave
sub
repnz
nop
nop
jae
clc
mov
icebp
mov
push
mov
xchg
ret
jge
add
add
push
mov
xchg
ret
add
xchg
roll
add
sub
repnz
nop
nop
jae
add
aaa
rolb
hlt
push
mov
push
mov
xchg
ret
lahf
add
lods
jl
add
jle
daa
mov
push
mov
xchg
ret
jge
push
fcmovb
aaa
sar
sbb
cld
nop
nop
jae
push
add
pop
add
adc
nop
jae
add
push
loop
add
scas
xor
clc
repnz
nop
nop
jae
shlb
xchg
add
lods
cmpw
nop
push
mov
leave
nop
jmp
add
in
loopne
pop
clc
repnz
nop
nop
jae
orl
cmp
add
nop
jmp
pop
add
lahf
add
push
mov
xchg
ret
push
sbb
xor
pop
dec
pop
lret
add
nop
push
mov
leave
nop
jmp
add
stc
add
pusha
sbbb
push
mov
xchg
ret
pop
add
leave
add
test
add
push
mov
xchg
ret
add
dec
add
add
rclb
addl
add
push
add
fiaddl
rorb
cld
nop
nop
jae
push
add
xor
repz
clc
repnz
nop
nop
jae
add
sub
add
repnz
nop
nop
jae
add
add
in
dec
add
mov
clc
repnz
nop
nop
jae
jbe
mov
fld1
push
mov
xchg
ret
add
inc
lds
test
xchg
ret
add
add
push
fidivl
jge
outsb
xchg
fdivrl
sub
and
lods
xor
aaa
lods
add
imul
adc
out
inc
add
add
lods
aaa
add
mov
and
icebp
clc
repnz
nop
nop
jae
add
les
and
add
clc
repnz
nop
nop
jae
pop
add
add
mov
rclb
out
pop
inc
add
add
add
stc
add
out
clc
repnz
nop
nop
jae
pop
add
mov
leave
nop
jmp
lahf
xchg
add
add
cmp
repnz
nop
nop
jae
lds
pop
pop
cmp
push
clc
repnz
nop
nop
jae
add
push
in
add
pop
notl
mov
xchg
ret
add
leave
add
icebp
leave
jo
rep
clc
repnz
nop
nop
jae
add
hlt
or
loop
mov
nop
nop
jae
add
dec
adc
scas
mov
xchg
ret
push
clc
outsb
lods
add
add
add
clc
repnz
nop
nop
jae
sldt
add
pop
cmpsl
shr
clc
repnz
nop
nop
jae
add
dec
add
add
not
nop
push
mov
leave
nop
jmp
mov
add
or
and
mov
add
nop
nop
jae
add
add
mov
clc
repnz
nop
nop
jae
add
and
pop
pop
push
mov
xchg
ret
leave
add
add
pusha
xchg
addl
nop
nop
jae
sbb
add
dec
add
add
and
add
nop
jmp
sbb
int
push
jge
sar
cld
nop
nop
jae
xchg
push
addl
push
push
mov
xchg
ret
jge
add
or
pop
add
movsb
and
fs
mov
clc
repnz
nop
nop
jae
add
stc
jne
stc
out
pop
clc
repnz
nop
nop
jae
add
jbe
int
add
ja
jmp
jp
nop
push
mov
leave
nop
jmp
loop
les
mov
push
mov
xchg
ret
imul
add
loop
add
shl
push
mov
xchg
ret
add
sti
add
mov
cmp
nop
push
mov
leave
nop
jmp
les
cld
push
mov
xchg
ret
jl
imul
movsb
pop
add
jp
jbe
clc
repnz
nop
nop
jae
add
jl
pop
pop
nop
push
mov
leave
nop
jmp
push
add
pop
movsb
xchg
lahf
add
add
clc
repnz
nop
nop
jae
add
add
cld
nop
nop
jae
pop
add
add
sldt
mov
clc
repnz
nop
nop
jae
mov
dec
decl
je
inc
add
add
add
add
cmc
add
clc
repnz
nop
nop
jae
add
rolb
cmp
clc
repnz
nop
nop
jae
lahf
lds
cmpsl
pop
push
rcrb
add
add
clc
repnz
nop
nop
jae
add
add
add
clc
repnz
nop
nop
jae
xor
sbb
add
cmp
nop
jmp
add
add
pusha
and
cld
nop
nop
jae
jl
add
stc
add
rorb
push
mov
xchg
ret
cmpsl
add
cmp
mov
push
mov
clc
repnz
nop
nop
jae
add
sub
push
mov
xchg
ret
dec
add
xor
add
push
add
repnz
nop
nop
jae
sub
add
jbe
add
clc
repnz
nop
nop
jae
lods
add
pop
add
inc
push
push
mov
xchg
ret
add
add
add
add
sub
add
rclb
arpl
xchg
ret
in
and
lahf
dec
xchg
js
rep
clc
repnz
nop
nop
jae
add
inc
jo
in
and
clc
repnz
nop
nop
jae
add
fisubrl
jne
mov
clc
repnz
nop
nop
jae
add
add
shr
ljmp
hlt
sub
mov
xchg
add
clc
repnz
nop
nop
jae
sbb
lahf
add
add
clc
repnz
nop
nop
jae
les
sub
movl
in
leave
nop
jmp
push
aaa
cmpl
xlat
pop
nop
push
mov
leave
nop
jmp
or
mov
add
call
clc
repnz
nop
nop
jae
stc
int
add
clc
repnz
nop
nop
jae
pop
loop
aaa
add
sub
adc
inc
xor
clc
repnz
nop
nop
jae
lahf
loop
cmovle
repnz
nop
nop
jae
add
lds
add
inc
xor
clc
repnz
nop
nop
jae
xor
add
mov
clc
repnz
nop
nop
jae
add
add
add
insl
lea
push
mov
xchg
ret
addl
clc
repnz
nop
nop
jae
and
xchg
imul
push
mov
xchg
ret
lods
inc
add
add
add
jmp
dec
loop
icebp
add
add
sub
stc
push
push
clc
repnz
nop
nop
jae
rolb
add
rorl
in
leave
nop
jmp
add
add
add
and
cld
nop
nop
jae
roll
xor
push
dec
push
insb
mov
sar
repnz
nop
nop
jae
pop
sar
lods
aaa
add
xor
jmp
push
mov
leave
nop
jmp
add
les
jbe
les
jl
sbb
repnz
nop
nop
jae
rolb
and
add
mov
nop
push
mov
leave
nop
jmp
push
add
add
push
adc
ja
inc
add
xchg
jne
add
add
sub
and
orl
mov
xchg
ret
add
add
pop
jl
sbb
inc
and
push
mov
leave
nop
jmp
dec
push
pop
pop
dec
leave
xchg
mov
inc
and
clc
repnz
nop
nop
jae
add
sti
add
pop
pop
push
mov
xchg
ret
add
add
dec
add
pop
add
inc
mov
xor
repz
repnz
nop
nop
jae
add
add
add
insl
mov
clc
repnz
nop
nop
jae
push
add
mov
pop
or
push
mov
leave
nop
jmp
add
shl
shr
clc
repnz
nop
nop
jae
add
add
movsb
clc
repnz
nop
nop
jae
add
sti
testb
clc
repnz
nop
nop
jae
stc
dec
lds
add
push
add
clc
clc
repnz
nop
nop
jae
xchg
hlt
or
add
add
add
repnz
nop
nop
jae
outsb
xchg
add
mov
les
mov
xchg
ret
inc
add
mov
add
clc
repnz
nop
nop
jae
jbe
sbb
nop
nop
jae
add
add
cmpl
addb
and
mov
fdivrp
repnz
nop
nop
jae
cmovns
add
andl
repnz
nop
nop
jae
add
lods
les
add
cld
nop
nop
jae
sbbl
and
add
push
mov
xchg
ret
or
in
sbb
les
lods
add
nop
push
mov
leave
nop
jmp
lahf
add
clc
insl
push
push
mov
xchg
ret
add
add
inc
add
add
je
clc
repnz
nop
nop
jae
sarl
xor
repnz
nop
nop
jae
pop
loop
add
movb
sub
cmp
ret
add
sbb
and
add
nop
push
mov
leave
nop
jmp
add
add
cld
nop
nop
jae
sbb
add
push
clc
repnz
nop
nop
jae
movsb
outsb
leave
add
add
stos
pushl
push
mov
xchg
ret
movsb
add
xchg
add
aaa
push
push
mov
xchg
ret
and
add
xorl
cld
nop
nop
jae
cmpsl
add
rolb
xor
clc
repnz
nop
nop
jae
dec
add
fidivrl
clc
repnz
nop
nop
jae
add
and
inc
jbe
dec
loop
mov
push
mov
xchg
ret
add
add
aaa
add
shll
decl
add
clc
repnz
nop
nop
jae
add
pop
pop
clc
repnz
nop
nop
jae
lahf
imul
int
aaa
dec
inc
sub
nop
push
mov
leave
nop
jmp
add
push
push
push
mov
xchg
ret
pop
pop
add
add
add
and
lcall
int
add
dec
pop
roll
les
mov
sar
cld
nop
nop
jae
add
add
add
pop
enter
mov
push
mov
xchg
ret
add
add
and
add
push
clc
repnz
nop
nop
jae
addl
add
ret
mov
cld
nop
nop
jae
add
push
clc
repnz
nop
nop
jae
and
xor
les
pop
add
pusha
xorb
jmp
aaa
stc
inc
add
cmp
clc
and
int
fwait
push
mov
xchg
ret
jl
lods
dec
hlt
pop
add
jl
mov
clc
repnz
nop
nop
jae
add
dec
add
push
sbb
clc
repnz
nop
nop
jae
stc
dec
add
fistpl
push
mov
xchg
ret
add
jne
dec
add
mov
mov
clc
repnz
nop
nop
jae
icebp
jl
add
add
test
cld
nop
nop
jae
add
inc
inc
inc
pop
push
mov
xchg
ret
int
add
add
xor
clc
repnz
nop
nop
jae
push
jbe
add
add
adc
cld
nop
nop
jae
add
add
pop
push
clc
repnz
nop
nop
jae
add
add
clc
repnz
nop
nop
jae
and
lods
add
add
mov
clc
repnz
nop
nop
jae
add
les
add
and
push
mov
xchg
ret
jge
add
sub
mov
rcrb
fld1
push
mov
xchg
ret
add
add
add
add
loopne
fdivrs
clc
repnz
nop
nop
jae
add
inc
icebp
add
add
enter
and
push
mov
leave
nop
jmp
addl
movsb
and
mov
add
clc
repnz
nop
nop
jae
inc
jne
push
dec
push
mov
xchg
ret
add
movsb
les
add
sbb
jg
leave
push
mov
xchg
ret
push
jl
jl
add
add
clc
repnz
nop
nop
jae
add
movsb
sbb
jbe
mov
clc
repnz
nop
nop
jae
pop
add
add
nop
nop
jae
rolb
add
roll
add
pusha
nop
push
mov
leave
nop
jmp
add
add
push
cmpsb
add
inc
cmpb
call
nop
jmp
lods
add
sahf
pop
orl
add
repnz
nop
nop
jae
dec
sbb
rcrb
xchg
ret
jo
add
add
add
or
mov
leave
nop
jmp
fisubl
jns
enter
cld
nop
nop
jae
outsb
add
push
stc
mov
inc
push
push
mov
xchg
ret
add
int
andl
bound
xchg
ret
int
pop
les
mov
cmp
repnz
nop
nop
jae
add
add
mov
lock
push
mov
leave
nop
jmp
jge
add
pop
add
and
pusha
gs
clc
repnz
nop
nop
jae
jl
sub
push
fwait
push
mov
xchg
ret
clc
inc
pop
jl
mov
push
ret
lods
clc
repnz
nop
nop
jae
xchg
inc
add
dec
hlt
les
and
subb
test
repnz
nop
nop
jae
add
or
push
imul
clc
repnz
nop
nop
jae
add
loop
sub
push
mov
xchg
ret
outsb
and
jge
pop
add
mov
mov
clc
repnz
nop
nop
jae
push
add
mov
and
push
mov
xchg
ret
add
add
push
dec
push
pop
cmpw
clc
repnz
nop
nop
jae
jge
add
xchg
shl
nop
push
mov
leave
nop
jmp
add
or
mov
sub
inc
add
add
add
add
xchg
cmpl
nop
jae
stc
add
out
out
add
clc
repnz
nop
nop
jae
add
orl
call
clc
repnz
nop
nop
jae
add
pop
fwait
push
nop
push
mov
leave
nop
jmp
sbb
lods
push
daa
mov
clc
repnz
nop
nop
jae
xchg
add
add
lea
mov
adc
push
mov
leave
nop
jmp
add
add
add
add
add
repnz
nop
nop
jae
lds
shl
ret
inc
adc
repnz
nop
nop
jae
mov
lods
jbe
cmp
inc
cmp
cld
nop
nop
jae
dec
add
add
xchg
leave
mov
clc
repnz
nop
nop
jae
mov
dec
sub
clc
repnz
nop
nop
jae
add
add
clc
aaa
push
clc
repnz
nop
nop
jae
les
fisubl
fld1
push
mov
xchg
ret
mov
add
add
repnz
nop
nop
jae
sub
xor
add
clc
repnz
nop
nop
jae
movsb
imul
xor
pop
jle
pop
mov
clc
repnz
nop
nop
jae
movsb
inc
add
mov
mov
popa
nop
push
mov
leave
nop
jmp
sub
pop
push
inc
cmp
nop
nop
jae
xchg
add
jge
dec
add
or
outsb
inc
add
add
add
sub
mov
test
clc
repnz
nop
nop
jae
add
movzwl
clc
repnz
nop
nop
jae
add
lods
add
mov
clc
repnz
nop
nop
jae
add
dec
add
jo
jge
sarb
repnz
nop
nop
jae
add
add
add
dec
addb
lods
clc
repnz
nop
nop
jae
add
add
and
movsl
xchg
clc
repnz
nop
nop
jae
add
add
add
and
clc
repnz
nop
nop
jae
movd
push
dec
add
clc
repnz
nop
nop
jae
pop
hlt
add
pusha
loopne
inc
pusha
es
fisttps
cld
nop
nop
jae
add
cld
cmpsb
addb
push
clc
repnz
nop
nop
jae
sbb
add
cwtl
jae
pause
push
mov
leave
nop
jmp
add
push
pop
int
push
pop
movzwl
clc
repnz
nop
nop
jae
mov
xchg
dec
nop
push
mov
leave
nop
jmp
dec
dec
aaa
imul
add
clc
mov
call
nop
push
mov
leave
nop
jmp
mov
push
nop
push
mov
leave
nop
jmp
add
add
push
sbbl
pop
inc
add
jge
add
sti
or
pop
mov
push
mov
xchg
ret
add
add
int
add
hlt
mov
add
repnz
nop
nop
jae
add
add
push
mov
xchg
ret
push
sbb
mov
add
fld1
clc
repnz
nop
nop
jae
push
add
outsb
add
fs
insb
nop
push
mov
leave
nop
jmp
add
add
shlb
stos
clc
repnz
nop
nop
jae
add
icebp
add
stc
add
in
xchg
repnz
nop
nop
jae
fcmovb
add
sbb
insl
inc
add
add
stc
xchg
testb
push
add
add
repnz
nop
nop
jae
dec
movsbl
loop
je
mov
pop
add
add
add
add
add
add
jne
cmp
add
repnz
nop
nop
jae
jne
dec
cmp
clc
repnz
nop
nop
jae
mov
add
xor
add
repnz
nop
nop
jae
pop
add
sbb
jle
inc
add
movsb
icebp
add
add
push
push
mov
xchg
ret
dec
add
lahf
add
sahf
add
xor
and
repz
nop
push
mov
leave
nop
jmp
sub
jbe
xchg
clc
repnz
nop
nop
jae
outsb
add
addl
clc
repnz
nop
nop
jae
add
add
jne
add
mov
xchg
ret
sub
rorb
repnz
nop
nop
jae
add
leave
push
jne
add
call
clc
repnz
nop
nop
jae
pop
and
pop
rorl
nop
jae
add
pop
add
sbb
jne
clc
repnz
nop
nop
jae
les
add
xor
jmp
clc
repnz
nop
nop
jae
dec
imul
cmp
nop
push
mov
leave
nop
jmp
add
loop
add
ret
push
clc
repnz
nop
nop
jae
add
and
repnz
nop
nop
jae
add
shlb
cmp
nop
push
mov
leave
nop
jmp
add
sbb
mov
push
mov
xchg
ret
add
xchg
or
jp
andb
mov
nop
push
mov
leave
nop
jmp
rolb
add
int
inc
cmp
xor
add
loop
les
dec
add
push
xchg
xor
nop
push
mov
leave
nop
jmp
add
add
es
pusha
inc
cmpsb
addb
add
clc
repnz
nop
nop
jae
add
add
sub
subb
in
leave
nop
jmp
rolb
add
jecxz
mov
sub
popa
fs
add
add
add
xchg
movsb
inc
pusha
shlb
push
push
mov
xchg
ret
pop
rorl
add
mov
xchg
ret
xchg
sbb
add
stc
add
clc
repnz
nop
nop
jae
lods
pop
nopl
nop
push
mov
leave
nop
jmp
hlt
sbb
add
outsb
fld1
push
mov
xchg
ret
add
add
pop
add
div
mov
clc
repnz
nop
nop
jae
add
hlt
sti
add
and
inc
sub
rol
test
add
clc
repnz
nop
nop
jae
dec
or
pop
popa
clc
repnz
nop
nop
jae
add
add
sbb
dec
mov
mov
fistpl
clc
repnz
nop
nop
jae
add
sbb
nop
nop
jae
add
jbe
push
sbb
mov
nop
jmp
sub
les
cmp
repnz
nop
nop
jae
add
add
push
jns
andl
nop
nop
jae
and
sar
mov
clc
repnz
nop
nop
jae
add
add
pop
les
inc
and
repnz
nop
nop
jae
add
add
lods
pusha
inc
hlt
das
and
clc
repnz
nop
nop
jae
pop
pop
add
add
fsubr
push
nop
push
mov
leave
nop
jmp
add
dec
add
add
daa
mov
clc
repnz
nop
nop
jae
add
andb
add
push
mov
xchg
ret
add
fadd
fucompp
mov
clc
repnz
nop
nop
jae
fiaddl
sub
add
push
mov
xchg
ret
add
jne
subl
repnz
nop
nop
jae
imul
add
push
mov
leave
nop
jmp
add
and
clc
repnz
nop
nop
jae
shlb
aaa
shl
add
cld
nop
nop
jae
icebp
add
or
xor
add
adc
xor
clc
repnz
nop
nop
jae
imul
add
loope,pt
jne
push
mov
xchg
ret
or
add
add
add
add
push
mov
xchg
ret
icebp
add
add
das
rep
push
mov
xchg
ret
addl
add
push
or
in
leave
nop
jmp
add
sbb
clc
repnz
nop
nop
jae
stc
pop
add
rorl
xchg
jge
jg
clc
repnz
nop
nop
jae
add
add
shrb
stos
nop
push
mov
leave
nop
jmp
xchg
add
movsb
add
clc
repnz
nop
nop
jae
sldt
pop
jl
leave
add
push
clc
repnz
nop
nop
jae
rorl
add
dec
mov
lahf
inc
int3
fidivrl
xor
clc
repnz
nop
nop
jae
add
dec
add
add
add
mov
into
pop
push
call
clc
repnz
nop
nop
jae
aaa
aaa
add
shrb
call
inc
add
pop
dec
add
neg
sbb
push
mov
xchg
ret
imul
lahf
sarl
cld
nop
nop
jae
add
dec
add
add
loopne
sbb
nop
nop
jae
add
pop
stc
jo
lahf
pop
popa
mov
push
mov
xchg
ret
jge
cmpsl
les
dec
add
repnz
nop
nop
jae
add
lods
pop
jge
out
inc
sub
sbb
xchg
ret
lods
push
mov
add
jl
xor
push
mov
xchg
ret
pop
add
mov
mov
call
clc
repnz
nop
nop
jae
xchg
or
add
mov
push
mov
xchg
ret
aaa
and
add
ss
jg
jbe
clc
repnz
nop
nop
jae
pop
add
add
hlt
push
dec
mov
clc
repnz
nop
nop
jae
add
cmpsl
add
fistpl
push
mov
xchg
ret
sub
roll
loope
inc
and
clc
repnz
nop
nop
jae
add
add
push
mov
xchg
ret
pop
add
outsb
movsb
add
addb
dec
arpl
xchg
ret
add
movsb
dec
dec
add
int
in
inc
out
fwait
clc
repnz
nop
nop
jae
add
or
add
push
mov
xchg
ret
or
fidivl
add
daa
jmp
sti
dec
pop
pop
add
add
add
sub
sbb
nop
nop
jae
xchg
add
add
jns
clc
repnz
nop
nop
jae
add
pop
push
or
push
nop
push
mov
leave
nop
jmp
clc
add
stc
rorb
cmp
sub
push
mov
leave
nop
jmp
add
pop
add
repnz
clc
repnz
nop
nop
jae
sub
pop
repnz
mov
clc
repnz
nop
nop
jae
add
hlt
add
lods
lods
xchg
mov
clc
repnz
nop
nop
jae
sti
dec
add
pusha
cmp
add
clc
repnz
nop
nop
jae
add
push
les
push
mov
leave
nop
jmp
int
pop
hlt
add
sbb
jnp
clc
repnz
nop
nop
jae
sub
add
les
add
mov
push
clc
repnz
nop
nop
jae
jbe
add
or
and
clc
repnz
nop
nop
jae
outsb
add
add
les
push
mov
xchg
ret
xchg
outsb
dec
add
add
jbe
fwait
push
clc
repnz
nop
nop
jae
xchg
push
add
add
or
add
add
repnz
nop
nop
jae
add
add
int
iret
or
inc
add
and
lahf
sbb
sub
sbb
repnz
nop
nop
jae
sub
pop
pop
call
clc
repnz
nop
nop
jae
add
jbe
sub
pusha
imul
sbb
call
nop
jmp
add
jbe
add
clc
repnz
nop
nop
jae
push
sub
add
clc
repnz
nop
nop
jae
xor
push
push
add
lods
std
add
clc
repnz
nop
nop
jae
add
add
mov
repnz
nop
nop
jae
or
fimull
add
add
xor
nop
push
mov
leave
nop
jmp
add
pop
clc
repnz
nop
nop
jae
rcr
outsb
int
pop
dec
mov
add
repnz
nop
nop
jae
imul
int3
xor
rep
nop
push
mov
leave
nop
jmp
sbb
cmp
cld
push
andb
add
clc
repnz
nop
nop
jae
stc
sti
movsb
or
xor
repnz
nop
nop
jae
stc
rolb
inc
pop
push
mov
xchg
ret
add
addl
and
pop
push
clc
repnz
nop
nop
jae
aaa
add
add
je
clc
repnz
nop
nop
jae
add
add
movsb
clc
repnz
nop
nop
jae
add
add
jo
lods
inc
stos
clc
repnz
nop
nop
jae
hlt
add
dec
cmpsl
and
xor
clc
repnz
nop
nop
jae
push
dec
add
ljmp
inc
add
pop
add
add
jno
jl
and
pop
jae
add
loop
pop
loop
xchg
subl
push
mov
xchg
ret
lahf
dec
pop
les
xchg
mov
call
push
mov
xchg
ret
pop
add
hlt
pop
add
popa
nop
push
mov
leave
nop
jmp
stc
add
add
push
es
jecxz
repnz
nop
nop
jae
add
les
repnz
nop
nop
jae
cmp
inc
and
and
clc
repnz
nop
nop
jae
sldt
add
clc
repnz
nop
nop
jae
or
add
les
add
nop
push
mov
leave
nop
jmp
xchg
add
lds
add
repnz
nop
nop
jae
movsb
add
xchg
push
mov
leave
nop
jmp
jo
add
in
add
loope
inc
or
push
mov
leave
nop
jmp
pop
add
rorl
rol
push
mov
xchg
ret
roll
or
int3
and
clc
repnz
nop
nop
jae
inc
pop
sti
rcrb
xchg
sub
clc
repnz
nop
nop
jae
shl
push
add
add
clc
repnz
nop
nop
jae
sti
add
jl
add
fistpl
clc
repnz
nop
nop
jae
add
dec
pop
add
and
mov
push
mov
xchg
ret
add
add
add
incl
nop
push
mov
leave
nop
jmp
add
add
ret
pushl
push
mov
xchg
ret
or
sub
mov
cwtl
pusha
inc
add
fiaddl
or
lahf
add
and
call
mov
add
jne
add
add
aas
mov
jp
add
cmp
nop
push
mov
leave
nop
jmp
imul
int
add
mov
addb
cmp
ret
clc
add
in
add
sbb
inc
stos
push
mov
xchg
ret
stc
add
add
add
shr
clc
repnz
nop
nop
jae
add
jge
add
jle
les
nop
nop
jae
outsb
add
sbb
add
lods
dec
pusha
push
mov
xchg
ret
add
or
and
dec
mov
push
mov
xchg
ret
mov
rol
and
add
and
loopne
and
dec
cmp
repnz
nop
nop
jae
pop
add
add
add
sbb
out
xor
push
mov
xchg
ret
add
add
add
jo
bound
pusha
xrelease
clc
repnz
nop
nop
jae
fimull
dec
xor
adc
in
leave
nop
jmp
in
add
filds
dec
nop
inc
add
add
add
clc
push
stos
lea
push
mov
xchg
ret
add
jl
in
xchg
pop
test
inc
mov
mov
cld
nop
nop
jae
add
add
or
clc
repnz
nop
nop
jae
add
lds
mov
mov
xchg
ret
loop
pop
add
add
and
sub
add
pop
clc
repnz
nop
nop
jae
pop
add
lods
or
pop
add
mov
xchg
ret
sbb
add
out
test
repnz
nop
nop
jae
add
pop
sar
push
push
mov
xchg
ret
hlt
add
pop
add
add
jae
nop
push
mov
leave
nop
jmp
sbbl
mov
mov
xchg
ret
add
pop
int
push
push
mov
xchg
ret
add
loop
icebp
sti
les
add
mov
clc
repnz
nop
nop
jae
pop
add
add
add
cwtl
nop
sub
mov
leave
nop
jmp
dec
imul
add
and
mov
xchg
ret
sbb
inc
and
add
inc
add
or
stc
add
in
xor
clc
repnz
nop
nop
jae
dec
push
or
cld
nop
nop
jae
xor
rolb
stc
add
sti
xchg
mov
nop
push
mov
leave
nop
jmp
les
add
add
les
pop
fdivrp
clc
repnz
nop
nop
jae
mov
add
mov
or
nop
push
mov
leave
nop
jmp
sbb
sub
cmp
repnz
nop
nop
jae
add
jge
psubw
push
js
add
add
rol
mov
pop
push
mov
xchg
ret
add
add
imul
push
repnz
nop
nop
jae
add
add
add
adc
repnz
nop
nop
jae
add
dec
add
test
push
mov
leave
nop
jmp
pop
clc
add
sbb
repnz
nop
nop
jae
jl
loop
cmp
mov
xchg
ret
stc
roll
add
push
add
or
nop
jmp
roll
cmpsl
push
jb
push
clc
repnz
nop
nop
jae
jbe
dec
add
mov
clc
repnz
nop
nop
jae
leave
lods
add
roll
mov
pop
xor
clc
repnz
nop
nop
jae
jo
lds
pop
add
clc
repnz
nop
nop
jae
pop
sbb
jne
in
pop
scas
andb
ja
add
aaa
addl
imul
psubb
cld
nop
nop
jae
les
lahf
add
add
cmp
cld
nop
nop
jae
add
add
push
mov
leave
nop
jmp
sub
jge
and
clc
repnz
nop
nop
jae
leave
outsb
push
add
dec
nop
push
mov
leave
nop
jmp
add
add
add
jmp
mov
xchg
ret
add
lds
jne
mov
pop
cmp
mov
xchg
ret
lods
add
add
int
push
and
loopne
jmp
mov
xchg
ret
add
and
jns
clc
repnz
nop
nop
jae
add
add
cmpsl
jbe
sbb
je
clc
repnz
nop
nop
jae
les
inc
ficoml
js
clc
repnz
nop
nop
jae
add
ds
mov
clc
repnz
nop
nop
jae
lds
shrl
cltd
into
decl
add
in
inc
sub
dec
hlt
imul
add
clc
repnz
nop
nop
jae
les
add
and
push
fistpl
clc
repnz
nop
nop
jae
add
leave
jne
add
and
sti
je
clc
repnz
nop
nop
jae
add
hlt
add
and
push
clc
repnz
nop
nop
jae
jo
outsb
add
add
addps
clc
repnz
nop
nop
jae
xchg
loop
hlt
add
sbb
nop
jae
add
pop
add
nop
push
mov
leave
nop
jmp
add
dec
and
push
nop
push
mov
leave
nop
jmp
add
add
inc
jmp
sti
add
add
clc
add
add
rcrb
dec
push
fldl
je
sub
repnz
nop
nop
jae
pop
and
jl
lcall
push
mov
leave
nop
jmp
add
mov
sbb
add
adc
clc
repnz
nop
nop
jae
clc
add
fcmove
hlt
xchg
ja
add
push
mov
xchg
ret
in
add
int
decl
cld
nop
nop
jae
add
push
lahf
inc
xchg
mov
clc
repnz
nop
nop
jae
roll
stc
dec
or
out
clc
repnz
nop
nop
jae
xor
lods
add
add
add
push
mov
xchg
ret
add
add
out
mov
clc
repnz
nop
nop
jae
jl
add
xchg
push
clc
repnz
nop
nop
jae
hlt
add
pusha
mov
xor
icebp
pusha
clc
repnz
nop
nop
jae
pop
lds
jo
loopne
pop
pop
push
mov
xchg
ret
inc
mov
add
aaa
leave
add
mov
leave
nop
jmp
add
add
jbe
and
add
cwtl
jp
add
push
mov
imul
mov
add
nop
jmp
pop
jbe
or
dec
cmp
repnz
nop
nop
jae
in
imul
ja
clc
repnz
nop
nop
jae
ltr
lret
clc
repnz
nop
nop
jae
add
push
iret
ljmp
add
add
sub
sub
add
clc
repnz
nop
nop
jae
jbe
add
rcll
mov
leave
nop
jmp
lahf
add
add
sub
and
add
mov
xchg
ret
add
shlb
xor
clc
repnz
nop
nop
jae
dec
les
adc
mov
push
mov
xchg
ret
add
pop
add
cld
nop
nop
jae
xchg
sar
pop
add
push
push
mov
xchg
ret
movsb
add
dec
add
add
xchg
fistpl
clc
repnz
nop
nop
jae
add
add
add
fistl
mov
xchg
ret
push
add
add
add
and
clc
repnz
nop
nop
jae
dec
add
dec
nop
push
mov
leave
nop
jmp
add
loop
leave
add
add
jne
clc
repnz
nop
nop
jae
add
push
icebp
add
rorl
call
cmp
ret
aaa
add
inc
add
add
mov
nop
push
mov
leave
nop
jmp
add
add
les
mov
in
clc
repnz
nop
nop
jae
add
xor
in
push
mov
inc
hlt
dec
add
jmp
jns
add
mov
mov
sahf
sub
xchg
mov
sbb
loopne
add
call
icebp
push
xor
and
add
push
ret
jnp
aam
loopne
andb
movsb
inc
add
and
jb
loopne
sbb
sbb
add
inc
out
mov
jg
les
sub
testl
andb
pusha
pop
cmpsb
and
stc
movsb
loopne
imul
fistl
js
out
imul
jg
out
lods
jno
hlt
loope
mov
mov
cli
xchg
fwait
mov
shlb
outsb
shrb
leave
sbb
pop
pop
jne
xor
add
sarb
in
int3
icebp
mov
aas
add
jg
and
and
pusha
and
push
xchg
sub
mov
add
dec
xrelease
dec
stos
pusha
ror
add
sub
cmp
and
and
jl
jo
pop
jp
and
hlt
dec
les
outsb
outsb
push
mov
loopne
add
inc
pusha
adc
insb
or
addb
mov
pusha
loopne
icebp
negl
push
imul
ja
imul
adc
inc
leave
mov
cli
xchg
cmp
xor
inc
lock
push
popf
scas
mov
ficomps
leave
sarb
adc
shl
dec
fnstenv
das
xchg
fldcw
dec
pop
pop
fcompl
push
das
out
testl
gs
in
and
and
mov
dec
hlt
fcomp
lock
aad
andb
adc
cmp
lret
xchg
mov
add
and
push
addb
fcomps
ret
in
pop
cmpsb
loopne
mov
adc
daa
push
rolb
pop
mov
or
loopne
jne
xor
inc
mov
inc
out
cwtl
stos
sarb
add
mov
mov
pop
jb
dec
mov
add
inc
fwait
push
xchg
push
pusha
cmpsl
fwait
test
and
and
xlat
notl
outsl
cli
scas
andb
or
pop
loopne
push
mov
xor
out
mov
shl
rorb
stc
test
ret
and
andb
push
dec
sbb
ja
pop
ret
pop
gs
inc
fldcw
add
fldl
loopne
aad
cmp
ss
xor
in
mov
mov
outsl
mov
add
cmp
pop
test
and
push
addb
mov
mov
shlb
ficoms
das
scas
lock
or
add
and
inc
jns
add
xchg
movsb
mov
cmc
andb
push
xchg
shlb
pusha
aam
fistps
mov
ss
mov
test
sub
rclb
add
shlb
push
mov
shlb
fidivrs
in
mov
pusha
cld
int3
loope
imul
and
cwtl
scas
idivb
testb
fstpt
push
loopne
sbb
cs
loopne
loopne
pop
ds
pusha
adc
icebp
xchg
add
mov
in
stos
inc
shr
xor
mov
int
repz
ja
pusha
add
xchg
mov
int3
shl
std
xor
cmp
pusha
addb
fsubrs
inc
repz
xchg
xor
in
mov
cmc
adc
cli
jge
cmpsl
stos
dec
mov
fcoms
or
into
sub
inc
mov
rolb
into
sub
sbb
xor
xor
scas
and
lock
loopne
sbb
cmp
aaa
push
fstpt
dec
sub
scas
loopne
mov
gs
pop
les
push
push
iret
testl
cmpsb
and
loopne
pop
stc
test
pusha
mov
or
mov
jmp
xchg
repz
push
pushf
cmp
repz
push
loopne
xchg
sbb
into
jmp
sub
je
mov
adc
jge
mov
pop
mull
sbb
bound
add
add
xchg
inc
clc
add
push
push
sbb
sub
and
mov
mov
xor
fstpt
xor
loopne
xchg
cmc
movl
les
adc
pusha
loopne
sbb
pop
mov
jne
and
xor
mov
rcl
sbb
mov
outsb
inc
lea
mov
jnp
mov
cmp
div
mov
addb
cmp
pusha
ret
lds
arpl
add
and
adc
jo
aam
adc
sahf
nop
ret
dec
cmpsb
addb
cmpsl
lahf
fcoms
movsb
add
in
and
lea
fistpl
daa
jle
mov
test
inc
pop
sbb
ljmp
sahf
test
loopne
dec
sbb
pop
mov
sbb
stos
and
jbe
and
pusha
xorl
testl
sbb
loop
mov
dec
lock
ja
mov
sti
xor
mov
insl
je
and
rorb
push
jle
addl
enter
inc
and
jae
push
inc
and
push
rcll
sbb
mov
mov
add
clc
imul
outsl
loop
andb
std
mov
inc
xchg
push
mov
daa
jp
test
inc
shl
shrl
lret
idivb
iret
icebp
fsubs
add
or
shlb
and
cld
in
lret
popf
mov
shrb
mov
pusha
loopne
cmpsb
addb
fld
push
andb
xchg
rorb
dec
stos
data16
jl
add
push
int3
xchg
aaa
xor
add
mov
pop
or
push
pop
lahf
std
cmp
fcomp
scas
int
psubw
je
inc
rorb
xor
rolb
rol
and
addb
push
xchg
mov
fisttps
jb
xor
xchg
push
inc
add
xor
aad
mov
lds
mov
shlb
xchg
mov
or
aas
or
movsb
rolb
or
xor
cs
and
rcrb
std
cmp
out
loopne
aaa
or
pusha
xchg
shl
xchg
pop
inc
mov
pusha
add
mov
loop
mov
pop
xor
ds
or
mov
mov
and
sahf
push
inc
lret
sbb
loopne
inc
data16
loopne
pop
daa
dec
push
mov
lret
xchg
arpl
outsl
dec
sub
cmp
mov
mov
fldenv
inc
pusha
pop
loopne
sbb
test
ss
xor
leave
stos
and
mov
mov
push
add
loopne
inc
addr16
sarb
pop
je
pop
xchg
lret
ret
push
addb
mov
out
push
sub
stos
and
jl
rolb
and
test
nop
daa
add
shlb
sbbb
xor
fadds
pop
mov
scas
push
add
add
mov
je
mov
inc
shl
nop
jmp
inc
pusha
or
loop
in
sub
add
daa
sti
int
mov
xchg
adc
jno
imul
ss
scas
subl
addb
hlt
mov
rol
lods
loopne
push
cmpsb
add
out
shll
loopne
mov
mov
or
mov
adc
mov
sub
cmp
mov
movsl
xchg
and
loopne
pusha
inc
xor
push
mov
shl
xchg
lods
addb
push
daa
cmpsl
pop
cmp
in
shl
sbb
mov
shlb
mov
inc
and
ret
daa
fimull
mov
cmp
push
gs
lea
push
popf
adc
push
mov
adc
fisubrs
and
inc
add
mov
cs
loopne
inc
push
and
jnp
loopne
icebp
es
sbb
scas
loopne
lods
mov
inc
jge
insb
cmpsl
jecxz
or
sbb
pop
enter
dec
ljmp
mov
mov
mov
mov
sub
lea
notl
mov
adc
pop
sbb
mov
and
ljmp
mov
or
dec
dec
cmp
dec
fdivp
xchg
push
scas
loopne
stc
and
sub
add
mov
pusha
pop
les
loopne
and
add
aas
scas
add
cltd
pop
pop
mov
movb
and
pop
pop
out
jmp
pusha
outsb
fcmovbe
clc
rolb
stc
pop
push
lret
inc
jo
inc
push
mov
jl
inc
and
mov
jae
mov
cmp
and
in
insb
inc
and
pusha
jmp
add
jmp
lea
addr16
jns
inc
and
add
mov
and
push
mov
push
test
cvtps2pi
outsl
jp
cmp
aam
and
add
and
std
jae
or
testb
mov
mov
and
add
dec
jns
lods
jmp
inc
mov
pop
fidivs
sub
and
pusha
mov
lods
inc
pusha
mov
iret
inc
bound
addb
sub
inc
xchg
add
rcl
and
xlat
push
mov
stc
mov
loopne
lods
pushf
lcall
loopne
cmp
subb
inc
jnp
test
mov
mov
lret
sbb
mov
loopne
xchg
mov
xor
mov
loopne
sbbl
stos
inc
loopne
inc
mov
and
mov
inc
xchg
das
and
xchg
cmp
stos
inc
loopne
addb
mov
outsb
sahf
mov
test
mov
push
call
xchg
pop
mov
mov
popf
push
pop
add
pusha
stos
or
ret
int
push
adc
loopne
loopne
pop
hlt
gs
pop
mov
loop
pop
xchg
rcll
jbe
repz
inc
andb
and
mov
cmp
sub
mov
insb
out
inc
xchg
xlat
mov
xchg
fidivrs
pusha
ror
in
out
inc
pop
iret
iret
ss
mov
jnp
mov
rol
addr16
sarl
js
push
add
jae
add
sbb
shrb
pusha
enter
pop
sti
mov
hlt
add
test
dec
aam
mov
push
insb
pop
sti
ficoml
into
jmp
sbbl
dec
inc
imul
add
sahf
sarl
inc
jnp
test
inc
fistl
std
dec
fldl2e
popa
mov
xchg
push
mov
push
and
jge
and
lods
sahf
decb
rolb
bndstx
lcall
fdivp
jnp
inc
shlb
push
sub
mov
andb
xchg
mov
jmp
mov
out
test
mov
lahf
fstpl
add
pusha
push
dec
ret
into
inc
and
mov
loopne
push
shlb
and
sbb
fildl
mov
aaa
icebp
fcmovb
loope
jl
mov
inc
adc
ljmp
loop
inc
add
xchg
aam
inc
icebp
jecxz
mov
andb
and
ficoms
sub
and
add
cmp
inc
daa
ja
ss
xor
and
orb
pusha
es
and
scas
in
stc
aam
das
sahf
outsb
inc
mov
pop
aaa
dec
push
pop
dec
and
loopne
jnp
es
data16
filds
in
inc
cli
andb
add
or
mov
test
loopne
loopne
xchg
stc
outsb
clc
adc
pop
cmp
fsubs
inc
popa
repz
add
inc
das
lods
jb
andl
pusha
in
add
in
adcl
insl
mov
or
pusha
xchg
lds
dec
lret
adc
loopne
fnstenv
push
loopne
es
movsb
loopne
push
inc
cmp
ljmp
and
dec
xchg
fcomip
dec
mov
jno
dec
and
loopne
mov
jb
sub
sub
adc
dec
int3
pop
mov
rolb
loopne
and
inc
test
into
and
pusha
clc
popf
repz
repz
fisttpll
mov
xor
fsubs
dec
test
loopne
or
inc
jns
mov
movsbl
iret
lods
inc
loopne
outsb
pop
add
inc
cmp
call
fstps
adc
lods
cmp
and
jg
addb
xchg
insb
push
lock
cmp
loop
jmp
or
in
scas
add
add
fwait
iret
jb
add
xchg
mov
mov
adc
jnp
pop
mov
loopne
movsb
add
and
mov
addb
test
shlb
fdiv
push
dec
jmp
add
adc
test
inc
pop
sub
add
std
pop
sub
pusha
negb
pushf
js
jle
loopne
push
or
add
adcb
pop
dec
lds
sahf
pushf
popa
and
fimuls
and
lret
jg
push
inc
mov
inc
out
fldcw
add
lret
inc
pusha
scas
inc
mov
add
add
xor
adc
das
pop
push
mov
mov
pop
mov
xchg
subb
adc
fwait
ret
mov
pusha
roll
lds
rolb
loopne
stos
cmpsl
imul
sub
ljmp
pop
mov
loopne
hlt
jmp
push
rcr
lahf
cmpsb
andb
jne
repnz
sbb
aaa
insl
outsb
dec
mov
adc
insl
cli
ds
sbbb
xor
pop
and
jo
enter
sub
rolb
xor
lea
loopne
stos
rolb
lcall
pop
cmp
dec
push
adc
shlb
loopne
call
ror
fwait
xor
shlb
mov
add
aaa
lock
in
mov
add
push
sub
arpl
adc
inc
test
ret
fxch
xchg
popf
dec
mov
insl
lret
iret
xchg
out
cmp
popf
pop
sub
sub
pusha
loop
or
mov
loopne
shrl
jmp
and
mov
inc
sub
dec
lcall
adc
inc
cmp
into
and
jmp
or
xor
dec
cwtl
dec
cltd
dec
inc
dec
sub
je
scas
andb
data16
mov
mov
sbbb
cmp
shlb
pop
adc
jle
pop
out
xchg
movsb
pusha
inc
loop
loop
add
dec
xchg
and
icebp
test
mov
jecxz
test
pusha
nop
pop
jae
pop
daa
mul
shl
stos
add
or
xchg
shll
jae
test
cmp
add
sub
jle
add
mov
xchg
jge
pusha
mov
aam
mov
pusha
outsb
xchg
in
add
xchg
cmpsl
and
sbb
inc
test
loopne
pop
std
sbb
add
shr
out
mov
mov
and
push
leave
adc
jmp
jb
out
into
out
test
loopne
pushf
xor
insl
in
movsl
cmpsb
addb
jae
sub
mov
loopne
dec
or
ljmp
sarb
daa
addr16
mov
rol
cmp
jp
stc
addb
xchg
cmc
jne
mov
test
loopne
ret
cmpsl
mov
cmpsb
add
sarl
test
and
ja
iret
or
add
sbb
push
pop
mov
pop
push
pop
in
xchg
pop
mov
pusha
inc
cli
fidivs
in
cmp
and
xor
ds
das
fsts
pop
jmp
pop
call
pop
lret
sbb
fucom
add
loopne
and
jbe
jns
inc
shlb
pusha
aas
lods
addb
add
cmp
lahf
aas
and
testb
and
cmpsl
xchg
xor
jns
add
sbb
filds
and
pusha
add
jge
add
shr
sahf
push
idiv
filds
out
loop
jne
fdiv
jg
xchg
push
and
and
cmp
cmpsb
mov
shll
add
pusha
sub
cmp
andl
pop
inc
mov
or
cli
add
and
cmp
loopne
iret
mov
insb
xchg
dec
idiv
pop
sub
sub
ja
shll
gs
decl
xchg
or
rolb
add
add
ds
icebp
or
pusha
mov
mov
insl
outsl
andb
adc
mov
and
xor
jnp
insl
jge
adc
loopne
mov
pop
push
and
jl
xor
in
or
mov
lret
jo
inc
xlat
movl
cmpsl
fiaddl
addl
sti
xchg
mov
idivl
and
xlat
or
jns
nop
jmp
mov
popa
xlat
jle
addb
fnsave
xorl
lods
sub
add
gs
push
add
outsb
push
add
inc
scas
add
sbb
or
jmp
xchg
xchg
adc
pusha
and
data16
jnp
stos
idivl
mov
adc
int3
sarb
pop
mov
lds
xchg
inc
outsb
pop
xchg
adc
add
stos
mov
aas
inc
int3
addr16
mov
inc
test
sub
repnz
add
add
pusha
in
lahf
addr16
pusha
adc
bound
loop
add
sbb
test
dec
inc
or
pusha
xor
inc
popl
and
in
ds
fs
leave
push
pop
mov
and
pusha
push
jmp
stc
mov
dec
jns
push
ret
cmp
push
scas
add
loopne
pop
jo
mov
rolb
imul
and
lock
cwtl
push
loopne
pop
push
andb
dec
xchg
out
mov
push
add
push
mov
lods
add
or
push
pusha
add
xchg
mov
dec
repnz
pusha
mov
in
push
jns
in
mov
sub
lret
data16
jns
mov
insl
mov
mov
call
inc
sbb
popl
sahf
add
mov
push
andb
mov
dec
pop
mov
push
jle
mov
lock
loopne
sbb
and
xchg
shr
jecxz
aaa
lcall
loopne
jno
add
and
sbbb
mov
popa
sbb
or
pusha
popa
ss
insb
pop
dec
xchg
xor
jle
fcoml
fwait
sbb
cmp
push
or
mov
notb
and
and
loopne
popa
adc
mov
mov
pop
movsb
andb
mov
pusha
sbb
add
inc
sub
push
and
dec
or
add
mov
loopne
mov
mov
dec
dec
mov
xchg
xor
outsb
pop
daa
or
ror
insb
add
dec
add
rcrb
pusha
and
inc
or
adc
xlat
les
jmp
xor
xchg
cmp
pop
jl
cmp
and
push
rol
and
rolb
ret
out
aam
cmp
pusha
cmp
jl
arpl
pop
das
xchg
imul
out
dec
mov
pusha
sbb
inc
or
and
sbb
jnp
dec
push
add
mov
mov
jmp
lock
push
sub
aam
cld
frstor
mov
rolb
loopne
and
cmpsl
cltd
pop
enter
imul
addr16
ljmp
mov
jg
int3
hlt
dec
mov
xchg
lret
cwtl
popa
pop
sub
mov
cmp
stos
push
jg
pusha
add
pop
xor
imul
mov
mov
outsl
test
aad
mov
mov
and
fwait
xchg
push
loop
mov
cmp
xor
and
mov
mov
jbe
stos
ds
or
enter
test
loop
addb
dec
sbb
and
mov
sar
mov
scas
pusha
rolb
mov
mov
addb
aad
repnz
sub
cmp
ja
push
mov
xchg
jle
loope
and
or
pusha
rorb
push
rolb
gs
and
and
lods
add
mov
fisttps
sbb
aas
iret
lock
pusha
mov
and
cmp
test
popf
in
mov
inc
add
mov
loopne
dec
imul
push
add
and
and
bound
sti
repz
mov
out
rorb
jae
stc
dec
ljmp
je
ficoms
dec
mov
loopne
cmp
and
or
inc
jle
gs
call
mov
loopne
aaa
and
mov
inc
pushl
mov
dec
cmpsb
add
adc
add
push
jmp
rolb
mov
pop
adc
dec
inc
xor
ja
pop
xor
dec
cltd
inc
ljmp
mov
mov
test
loopne
mov
pusha
inc
dec
out
cmpsb
and
loop
popa
int3
xchg
aam
adc
clc
ds
jo
stos
pusha
add
fistps
xchg
imul
iret
inc
xor
andb
mov
shr
or
inc
addb
mov
cmp
or
cmpsl
and
out
sahf
call
aaa
xchg
push
jge
std
mov
xor
imul
dec
repnz
out
jbe
outsl
insb
xchg
inc
jbe
and
sub
cmp
insb
jbe
mov
in
dec
orl
out
es
mov
lds
inc
add
fidivs
addl
xchg
xor
push
push
mov
pusha
bound
push
push
and
or
mov
sbb
xchg
jb
pop
pusha
sub
mov
cmp
xchg
xor
push
lds
mov
dec
cvtpi2ps
dec
std
pop
dec
stc
mov
popf
add
mov
mov
mov
dec
xchg
jp
mov
ret
jmp
sub
repnz
ljmp
sub
ret
add
ds
sub
mov
loopne
faddl
inc
loopne
jp
xchg
mov
rorl
mov
lods
mov
outsl
test
data16
pop
or
xor
jmp
icebp
mov
dec
aad
outsl
aad
fimull
mov
pop
mov
push
cs
and
and
sahf
imul
call
add
add
fdivrs
push
mov
jg
lret
cmp
movzwl
inc
xorb
or
shlb
push
inc
repz
pusha
pusha
sbb
stos
imull
inc
loop
ret
xchg
mov
shlb
pusha
cld
lcall
adc
add
ds
pop
frstor
xchg
jmp
inc
pop
pushf
mov
mov
pusha
pusha
mov
mov
and
jle,pt
pop
idivb
sbb
inc
or
and
hlt
ja
fistl
call
dec
lret
rorl
shlb
dec
xchg
nop
sbb
jo
adc
lret
sahf
pop
mov
mov
loopne
jae
movsb
loopne
mov
xchg
mov
test
xchg
ret
test
and
mov
fcoml
or
jnp
mov
test
sbb
mov
aas
cmp
push
stos
ret
push
jmp
insl
stos
and
and
or
mov
subb
mov
xlat
sub
je
mov
inc
xchg
jb
dec
inc
or
addb
lahf
imul
inc
in
and
cmc
ljmp
and
adc
mov
fadds
adc
jno
aas
imul
aad
andb
mov
loopne
adc
aad
inc
sbb
cltd
push
lea
mov
mov
movsb
mov
lret
and
aam
out
xor
pushf
aaa
inc
mov
pusha
inc
xor
push
mov
js
push
mov
lock
push
shl
and
fdiv
iret
adc
loopne
jae
xor
xor
xor
lcall
loop
aad
repz
mov
pop
mov
sbb
sub
loopne
addb
jo
mov
inc
or
add
pusha
jbe
push
in
xor
xor
add
sub
les
iret
inc
or
and
and
clc
xchg
scas
or
and
loopne
push
ss
rcrb
das
mov
jb
push
enter
pusha
fistpll
xor
add
push
iret
and
jne
in
sar
push
sbb
sub
and
add
nop
lods
push
shlb
clc
addl
push
pop
sbb
xchg
aas
je
shlb
and
sub
ljmp
sbb
bound
mov
scas
addb
cmp
ss
dec
push
test
dec
pop
jbe
call
js
mov
and
and
loopne
sub
add
lret
mov
push
mov
dec
shrb
add
push
cmp
push
stos
sbb
fistps
pop
lea
jge
and
add
and
cmc
xchg
das
xlat
outsl
or
jmp
cmpsl
add
inc
scas
pusha
sbbb
mov
loopne
int3
xor
and
xor
les
ficoms
ret
lods
inc
and
mov
mov
in
iret
roll
add
shll
stos
and
cmp
andb
add
mov
rolb
and
outsb
inc
mov
jbe
faddl
shrb
xor
imul
ret
sbb
test
and
js
mov
subb
jp
mov
add
loopne
es
orb
gs
pop
sarl
addr16
push
pusha
shlb
addb
aas
mov
inc
inc
xchg
jg
movsl
and
push
sbbl
iret
adc
xchg
idiv
jl
out
test
enter
in
jp
add
fwait
sbb
nop
inc
cmp
stc
js
add
repnz
dec
and
sbbb
pusha
inc
xor
repnz
inc
pop
fdivs
pop
pop
insb
mov
sub
cs
loopne
xchg
xchg
js
and
pop
dec
sub
mov
call
ljmp
fbstp
pushf
jl
sbb
add
popa
arpl
lds
inc
jl
roll
and
int3
leave
jl
lret
andb
xchg
stos
and
rclb
mov
jbe
add
pusha
and
cmpb
stc
push
mov
imul
inc
push
shr
stc
jno
cwtl
hlt
add
and
sub
inc
adc
sti
xchg
mov
pop
sbb
pusha
dec
mov
add
add
std
ret
test
add
fmul
mov
pusha
shlb
orb
mov
std
int
and
arpl
mov
outsb
scas
add
in
lea
mov
aad
cmp
test
test
sbbl
and
shlb
jne
xchg
lods
rolb
test
rcrb
xchg
xchg
sbb
push
frstor
mov
fcmovnb
cmpsb
add
jge
hlt
mov
lods
push
mov
adc
pushf
add
adc
pop
out
stos
outsl
movsb
inc
pusha
imul
inc
push
fnstcw
lods
jbe
outsb
leave
jbe
add
pop
jl
andb
pop
mov
pop
inc
jae
add
repz
inc
add
ljmp
sub
out
out
setno
or
cltd
adc
jecxz
scas
ret
cmp
jmp
push
outsb
je
adc
pop
hlt
fistpl
hlt
rcrl
jmp
add
mov
es
sarb
sub
pusha
test
lock
loopne
and
loopne
jmp
loopne
push
xor
add
sub
push
pop
lahf
cmp
lcall
push
mov
mull
add
in
frstor
mov
dec
int3
jg
lahf
outsb
mov
adc
mov
pop
ja
in
adc
decb
icebp
xor
jbe
pop
or
loopne
popf
imul
mov
jp
or
mov
pop
push
and
lock
cmp
pusha
inc
nop
negb
loope
fs
cmp
mov
inc
inc
ret
dec
shrl
sbb
arpl
xor
sub
pusha
call
sbb
loopne
bound
add
and
add
mov
sub
mulb
mov
mov
stos
inc
filds
addb
popf
xor
jne
mov
addb
clc
adc
jmp
inc
and
js
mov
inc
add
repz
fcoml
fidivs
cmp
add
das
sbb
and
cmpsl
sub
sub
inc
pushf
add
mov
mov
imul
inc
push
subl
loopne
loopne
sub
dec
add
loopne
mov
lahf
ficoml
sbb
ljmp
push
jbe
enter
imul
insb
call
cmp
mov
shrb
xor
loopne
add
jns
leave
mov
mov
sbb
mov
pop
lea
mov
xchg
sub
lcall
mov
pusha
in
scas
and
fiadds
inc
rorb
pop
push
ljmp
scas
push
xchg
lahf
lea
ss
fucom
mov
sub
fcmovb
imul
jno
dec
stos
dec
mov
inc
rolb
dec
shll
addb
mov
mov
adc
inc
mov
lcall
add
lret
jno
gs
invd
andb
adc
jp
pusha
sub
imul
sarb
ds
sbb
xchg
pop
es
scas
pushf
lret
jg
movsb
pusha
orb
js
addb
gs
mov
sbb
inc
add
test
sbbb
mov
rcrb
daa
aaa
dec
xchg
rorb
mov
xchg
mov
repnz
rclb
push
cmp
sahf
fs
out
int
xor
inc
std
cmpsb
and
add
iret
inc
inc
pop
xchg
cwtl
and
mov
dec
mov
pusha
push
test
and
lods
rol
loopne
pop
jae
mov
out
cmp
add
stos
andb
fwait
push
push
loopne
cmc
cld
test
and
insl
rcr
jle
std
out
rol
and
inc
mov
fisttpl
and
shrb
mov
add
and
cmp
addr16
ss
fsts
mov
pop
data16
leave
cmp
mov
add
clc
cmpsl
rclb
scas
fwait
sub
loopne
adc
inc
inc
xor
out
push
roll
mov
idivl
xchg
sarl
sub
pusha
int
stos
add
add
xchg
push
xchg
sub
mov
or
sub
test
adc
mov
cmp
aaa
xchg
xchg
jmp
inc
ffreep
fcomp
jmp
addl
addr16
faddl
mov
push
mov
inc
imul
call
in
into
in
jecxz
jmp
push
or
dec
fildl
or
pusha
jns
andb
inc
cmpsb
loopne
add
andb
out
mov
inc
xchg
push
ret
pop
das
pop
out
inc
add
inc
mov
ret
pusha
sbbb
add
mov
add
add
data16
add
add
test
loopne
out
pop
or
adc
repz
fnstenv
mov
xor
scas
mov
ja
addb
mov
repnz
int3
xor
mov
cld
pop
xchg
push
pop
and
xlat
pop
cwtl
jmp
mov
jb
aam
push
hlt
jecxz
dec
cmp
lock
cmp
mov
loopne
std
mov
jnp
and
xlat
aad
sarl
jmp
jo
rclb
xchg
stos
and
lahf
jecxz
aam
jmp
lret
mov
sti
cmp
in
xor
adc
pop
repz
mov
fildl
pusha
push
test
loopne
and
cmp
loopne
sbb
inc
iret
iret
adc
sbb
dec
add
sbb
add
outsb
mov
sti
cmp
fmuls
movsl
adc
andb
add
loopne
stc
icebp
pusha
or
loopne
popf
cmp
icebp
jp
mov
mov
pop
negl
aad
mov
inc
sbb
xchg
jnp
xchg
jg
push
icebp
and
loopne
clc
xchg
inc
sbbb
popf
cltd
imul
and
addr16
push
imul
ss
cltd
insl
daa
mov
fsubs
and
shrb
je
in
sti
mov
mov
push
and
xor
aam
cmp
andb
adc
ret
inc
inc
test
pusha
mov
xor
addb
pusha
rcrb
push
popa
cmp
ds
in
scas
adc
out
std
xchg
rcr
ss
les
das
mov
daa
aad
inc
inc
xchg
adc
je
aam
cs
xlat
test
add
mov
or
pop
xor
rcrb
in
pop
mov
cld
push
movsb
add
jecxz
cmp
inc
mov
imul
pop
mov
ret
je
inc
idivl
push
mov
inc
cltd
dec
mov
test
jno
and
push
push
stos
loopne
sarl
xchg
in
mov
loopne
adc
inc
adc
inc
add
push
add
ret
or
inc
pop
imul
rol
and
cltd
dec
repnz
cmp
outsb
push
loopne
out
inc
mov
andb
subb
incb
push
xor
out
push
pop
hlt
pop
sbb
loopne
cltd
adc
ds
addb
rclb
add
xchg
mov
imul
and
gs
sub
mov
xchg
pushf
xchg
movsb
pusha
add
push
mov
rcrb
mov
sti
test
inc
xor
mov
mov
cli
ss
pop
xor
in
lods
inc
loopne
cmpl
rcl
lock
stc
and
cmp
fstps
mov
loopne
loopne
loopne
mov
pop
daa
fs
adc
jns
add
pop
sti
jp
pop
xor
ret
sub
mov
xor
or
mov
rorb
rolb
andb
jbe
pop
push
push
add
add
mov
mov
pusha
jb
mov
ret
lret
add
sub
pusha
jnp
aad
cmp
pop
push
das
sbb
sub
in
rol
lahf
mov
icebp
or
negb
push
loop
lahf
cmc
or
pusha
mov
rolb
mov
push
loopne,pn
jbe
push
push
mov
add
shl
jnp
mov
addl
fsts
stos
stos
and
cmp
das
sub
nop
cmp
xor
out
insb
in
add
push
rolb
pop
dec
xor
xchg
shlb
mov
pusha
loopne
nop
iret
xlat
push
lahf
ja
push
and
and
pushf
ss
pushl
inc
cmp
xor
cmp
scas
pusha
mov
fnstcw
mov
pop
cmp
add
addb
xchg
sbb
xor
je
inc
lds
pop
repnz
pusha
dec
sahf
imul
test
rclb
cld
out
push
add
jle
fsubl
aam
dec
lods
xor
cmp
xchg
cld
mov
fdivr
jmp
add
je
cmp
xchg
xchg
insb
push
push
loopne
nop
repnz
lock
xchg
andb
push
sub
inc
mov
cmp
mov
xor
and
loopne
mov
shlb
cmpsl
jmp
addb
mov
andb
je
outsl
mov
nop
dec
add
and
int
pop
xchg
inc
xchg
test
outsl
pop
lock
push
dec
mov
mov
mov
add
or
fwait
mov
lret
dec
arpl
pusha
loopne
push
divb
lea
mov
out
mov
jle
mov
imul
shlb
pop
mov
cmpl
add
mov
shlb
cmp
pop
shrb
call
dec
mov
xchg
test
and
or
loopne
mov
sub
pop
fcom
cmc
loopne
into
cmp
aaa
outsb
hlt
popl
jmp
mov
xor
mov
and
addb
adc
mov
xor
outsl
addb
mov
in
sub
jge
jno
pop
arpl
js
dec
jge
dec
mov
pusha
inc
ljmp
loopne
and
std
add
out
dec
jo
mov
inc
dec
push
push
jl
popl
xor
dec
add
push
add
mov
gs
clc
insb
mov
jne
mov
and
rolb
test
lret
syscall
push
fcmovbe
rep
sti
dec
gs
and
push
push
rolb
sahf
mov
mov
test
sti
insl
mov
and
sbb
mov
cli
sahf
out
pop
shl
push
push
push
add
dec
and
inc
inc
sbb
loopne
mov
sub
gs
jne
xor
jl
scas
and
sub
inc
andb
or
xchg
rcl
cmp
add
inc
pusha
hlt
or
in
repz
mov
add
add
adc
jmp
sub
and
or
les
stos
push
dec
out
sub
xorb
lods
mov
mov
xor
cmp
jae
mov
ljmp
inc
cmc
loope
mov
add
test
stos
add
in
wrmsr
and
pusha
xchg
mov
rolb
rclb
pop
lret
pop
es
inc
daa
ja
cs
mov
stos
addb
xor
lret
adc
and
shlb
sub
jne
aaa
sub
and
lret
out
andb
and
lret
pusha
and
and
sahf
loope
xchg
push
jb
sti
sub
add
loopne
pop
inc
xor
cmp
jle
call
andb
add
fcmove
mov
out
insl
sahf
jg
inc
pop
js
inc
rorb
adc
add
add
add
int3
out
dec
pop
scas
aam
adc
int
push
cli
clc
inc
adc
fwait
xor
lret
out
push
ja
in
adc
test
inc
lds
cmp
inc
packsswb
mov
pusha
lds
adc
pop
sti
stos
mov
iret
ficompl
sbb
and
loopne
pop
cmp
pusha
add
int3
popf
cmp
andb
jp
pusha
inc
out
add
push
insb
mov
les
test
jg
sub
out
faddl
mov
out
push
add
or
loopne
mov
js
push
dec
fs
inc
xchg
loopne
sbb
push
cld
lock
adc
mull
pop
mov
and
mov
adc
sub
add
andb
pusha
rolb
in
jle
jmp
adc
mov
fwait
adc
jae
jmp
sbb
repz
add
popf
or
andb
pusha
rolb
jmp
sbb
push
lcall
jno
cmp
out
cmp
shlb
xor
sbb
inc
xor
cmp
mov
jbe
xchg
inc
loopne,pn
movsb
loopne
test
sbb
jnp
push
inc
rclb
and
xor
xor
and
inc
bswap
xchg
jge
inc
fcoms
roll
lods
fsts
sbb
add
add
xchg
pop
mov
faddl
sbbl
mov
popa
push
loopne
mov
inc
inc
mov
sbb
pop
sub
mov
scas
mov
test
pusha
sbb
sub
mov
adc
or
cmpsb
loopne
lret
pusha
loopne
inc
jmp
lods
push
test
sub
inc
std
sbb
sbb
icebp
sub
loop
mov
xor
xlat
stos
rolb
iret
adc
jmp
cld
push
dec
and
and
pop
imul
jg
mov
shrb
cli
inc
fnsave
ret
inc
add
mov
push
cmp
sbb
inc
push
shlb
ret
cmp
pop
mov
inc
notl
xchg
out
dec
xlat
xchg
lea
imul
shrl
addb
lods
and
mov
mov
addb
imul
cmp
mov
push
jae
fmul
test
test
fstpt
xor
repnz
mov
rolb
cmp
mov
and
in
adc
and
out
rolb
or
loopne
shrl
pusha
add
and
inc
mov
ja
dec
mov
fisubl
push
inc
sbb
adc
aad
xor
push
fistpll
cmp
shlb
mov
sbbl
and
aam
mov
das
and
in
les
pop
sti
jecxz
cmp
int
mov
incb
faddp
decl
pop
or
fildll
movsb
inc
mov
mov
cmp
xor
ror
pcmpgtw
xchg
jle
test
add
inc
xor
shrl
pusha
inc
mov
stos
loope
inc
mov
inc
and
mov
mov
neg
icebp
fwait
cmp
mov
mov
lods
pusha
and
cwtl
lods
mov
aaa
sub
push
push
mov
or
loopne
sti
js
test
xor
xor
repnz
dec
dec
outsl
cmp
sahf
sub
leave
inc
fdivr
mov
sub
sarb
and
rorl
dec
inc
loop
adc
push
sub
xorb
loopne
shlb
icebp
dec
or
mov
dec
xor
jno
rcrl
in
and
or
inc
call
adc
pop
or
shlb
xchg
add
inc
rol
arpl
adc
push
mov
xorl
popa
pop
loope
lds
pop
push
inc
shlb
and
add
fcmovbe
inc
push
lcall
inc
inc
aaa
xor
out
add
gs
and
rcl
cli
movsl
jne
sti
test
mov
mov
mov
push
addb
aas
cmp
sub
mov
push
mov
loopne
and
lods
addb
aas
aad
sub
lahf
mov
js
dec
push
out
and
hlt
mulb
shlb
push
pop
push
push
mov
addb
jmp
mov
jnp
pusha
pushf
add
jne
and
mov
inc
or
mov
pop
lcall
in
push
adc
pusha
cmpb
push
push
mov
add
pusha
push
call
ds
mov
cltd
push
mov
in
in
pusha
pop
xchg
shlb
lods
int3
cmp
fcmovnb
je
mov
sub
loopne
sbb
ds
mov
addb
push
int3
pop
outsb
jmp
cmp
data16
loopne
xlat
leave
arpl
mov
pop
dec
push
mov
jl
pop
mov
xchg
cmp
insl
fs
inc
and
loopne
fwait
lds
movsb
loopne
mov
jp
xchg
inc
push
in
fldenv
mov
xchg
sub
inc
test
shlb
popf
add
pushf
push
mulb
dec
adc
cld
fiaddl
ja
push
cmpsl
sahf
mov
push
and
and
push
bound
and
ds
xor
cmp
cmp
sahf
mov
cwtl
out
cmp
lea
cmp
addr16
or
xorl
out
cmp
add
mov
and
cld
in
cmp
and
jle
in
and
gs
add
mov
icebp
push
inc
lds
or
loopne
imul
pop
out
sahf
idivl
dec
cmpsl
push
or
add
sti
stos
andb
jb
inc
insb
mov
jecxz
cmp
jecxz
mov
data16
cmp
in
adcl
andb
fwait
cmp
push
mov
psrlq
loopne
mov
cmp
push
cwtl
mov
or
enter
xchg
sub
loopne
cmc
mov
pushf
adc
lods
loopne
addr16
stos
loopne
sarl
leave
negl
and
add
mov
mov
imul
shl
push
out
pusha
mov
add
jne
test
mov
dec
cmp
int
or
in
cmp
clc
popf
dec
movb
andb
loopne
lds
ret
and
and
lods
mov
or
inc
jge
jns
add
test
shlb
inc
insb
mov
cli
sti
call
adc
fcoms
ss
mov
inc
fwait
inc
jns
pusha
and
and
mov
mov
ret
mov
mov
adc
movb
sub
std
adc
pop
sub
outsl
hlt
je
std
ret
mov
inc
rcrb
pusha
adc
add
sub
push
mov
jo
or
stc
ret
pop
cmp
jno
cmp
xor
aas
jbe
addb
inc
add
mov
out
das
jp
xor
push
or
mov
andb
bnd
fucom
sub
lds
loopne,pn
fstps
sbb
inc
xor
dec
jmp
stos
or
mov
fmuls
andb
stos
mov
loopne
fs
fstpt
shll
lock
mov
mov
push
pushf
adc
data16
xchg
and
add
inc
fldlg2
int3
add
and
push
adc
jp
scas
aas
clc
xchg
mov
sbb
into
inc
lods
loopne
mov
sub
in
sub
popa
jmp
out
loopne
arpl
fs
xchg
loopne
jbe
jo
and
aam
js
sub
jno
pop
dec
sub
jno
jle
pop
rorl
rol
and
xchg
and
sub
and
mov
adcl
add
sti
out
jno
insb
pusha
addb
cmp
adc
inc
lods
mov
lock
or
jo
inc
fimull
sub
iret
cmpsb
loopne
lea
push
test
call
dec
jp
shl
mov
loopne
mov
andb
inc
insl
imul
inc
mov
and
add
loop
sub
pop
test
loopne
and
mov
mov
aas
roll
inc
xchg
in
add
pusha
std
xchg
iret
mov
xor
fisttps
mov
ficompl
adc
dec
in
aam
xchg
jmp
ljmp
dec
dec
icebp
ljmp
arpl
inc
inc
ljmp
and
pusha
pop
mov
or
adc
cmp
dec
pop
daa
jo
push
push
mov
add
les
imul
add
cwtl
divb
loopne
stos
add
pop
xsavec
andb
and
xchg
in
pusha
outsl
pushf
add
mov
daa
jge
fcmove
inc
pop
cwtl
push
test
mov
xchg
test
push
pop
jae
lcall
fs
pop
int
dec
icebp
jge
xchg
loopne
pop
inc
inc
scas
mull
mov
orb
shl
and
xchg
mov
lock
mov
das
lret
jmp
inc
shrb
addb
loopne
xchg
adc
xchg
add
loopne
jle
stos
cltd
stos
insl
cltd
jl
sarb
sbb
and
dec
and
scas
cmp
fst
jbe
repz
xchg
clc
loop
xchg
inc
bound
xchg
pop
stos
xchg
xchg
scas
mov
sub
and
jp
adc
inc
iret
add
jae
cmp
mov
add
add
pop
insb
into
addb
jbe
dec
mov
and
sbb
mov
mov
bound
shlb
loopne
arpl
mov
into
sbbl
cmpsb
inc
and
daa
inc
sub
sbbb
push
lahf
mov
xchg
mov
insl
xor
dec
mov
addb
fs
mov
inc
shlb
orb
and
push
mov
push
shlb
movsb
andb
lods
pusha
mov
push
xchg
nop
xor
pop
mov
xor
jge
dec
popl
scas
loopne
cmp
scas
loopne
andb
adc
pop
push
insb
jle
inc
mov
mov
rol
fwait
out
sbb
aaa
dec
cltd
addr16
insb
push
cmp
mov
xchg
stc
test
xor
leave
rclb
mov
sahf
sarb
adc
pop
lods
pusha
rcr
sbb
dec
bound
call
and
cmp
lret
shlb
loopne
loope
enter
sub
add
mov
fstpt
sbb
push
jge
sub
hlt
adc
pop
stc
add
shlb
fstl
jecxz
or
pusha
push
sbb
and
xor
or
inc
inc
dec
lods
and
mov
repnz
cmpb
jg
mov
mov
sbbl
mov
and
rolb
pop
jg
mov
loopne
pusha
add
lcall
inc
daa
stc
mov
dec
dec
out
rclb
scas
and
pop
or
xchg
xlat
int
dec
jnp
mov
mov
and
xor
call
sbb
xchg
inc
mov
and
and
sbb
sub
nop
ficoml
add
mov
loopne
ds
ja,pt
jb
mov
dec
pop
xlat
or
add
mov
es
in
push
notb
andb
rorl
xchg
andb
mov
add
sti
cmpsl
stos
pusha
add
sub
idivb
xor
sbb
loopne
xchg
sbb
mov
dec
gs
jecxz
rclb
inc
mov
pusha
inc
cmp
repz
add
lods
cltd
in
mov
movsb
pusha
shr
loopne
sub
loopne
or
adcb
clc
imul
int
ds
lock
enter
popf
adc
mov
orl
mov
call
pop
sbb
ljmp
out
mov
jno
and
in
cs
add
fwait
adc
and
mov
call
divb
scas
inc
pusha
mov
popa
pop
or
xor
rolb
ds
jecxz
daa
add
pusha
cmp
fs
pusha
xor
cld
add
sbbb
add
std
mov
mov
cmp
iret
notb
iret
xor
movsb
pusha
shrb
and
ljmp
insl
out
ss
pushf
fwait
dec
cmp
stc
mov
loopne
cmp
add
adc
adcb
jnp
xchg
and
bound
add
mov
iret
dec
divl
push
or
dec
push
or
aas
mov
add
mov
jmp
and
repnz
dec
fstpt
and
rcrb
out
or
orb
loopne
mov
add
enter
inc
out
sub
and
addb
mov
ja
in
iret
dec
and
mov
mov
xor
xchg
pusha
and
xor
divb
push
adc
and
push
pushf
lods
jae
pushf
cmp
sub
shrl
and
bound
loopne
cltd
sub
fisubrl
out
es
inc
jb
fistps
ja
rolb
and
shll
stos
dec
aas
cmp
arpl
int3
jne
fbld
lret
fisubrs
hlt
pop
and
cltd
mov
xchg
rclb
dec
or
mov
pusha
push
dec
daa
mov
sti
sub
rolb
sti
mov
mov
cmpsl
test
and
jle
lret
add
aaa
dec
je
loopne
fcmovu
add
pusha
mov
lods
rolb
sub
pop
xchg
mov
inc
push
clc
jae
hlt
dec
js
push
push
cltd
jl
sub
mov
xchg
and
xor
add
jle
inc
addb
shrb
loopne
add
add
shlb
sbb
mov
xor
andb
popf
aas
movb
adc
dec
ret
andl
movsb
and
inc
lds
loopne
loopne
cwtl
das
push
and
lock
int3
ficomps
sub
loopne
jmp
inc
xor
xchg
cmp
daa
nop
aaa
out
cmp
out
rcrl
xor
andl
loopne
and
pusha
mov
ss
add
and
iret
lcall
lcall
rolb
aaa
not
pop
push
inc
mov
mov
sbb
pop
cmpsl
inc
push
mov
sub
and
jle
mov
shll
iret
push
sub
loopne
stc
sub
xchg
aam
mov
and
loop
mov
mov
pusha
sbb
shlb
dec
jne
repnz
inc
insl
andb
insb
dec
gs
cmpsb
and
hlt
out
xchg
test
add
mov
xor
stos
and
int
call
lock
call
insb
pushf
cmp
sub
and
mov
cld
sub
stos
addb
mov
popl
mov
or
lret
sarb
dec
push
subl
mov
push
jno
fdivs
pop
inc
daa
test
inc
or
jne
mov
pusha
out
push
popa
mov
out
pop
push
fcmovb
shlb
loop
dec
mov
jle
repnz
loopne
cld
cmp
jbe
mov
stos
rolb
shl
cld
pop
popa
jecxz
es
popf
mov
add
arpl
fidivs
xor
mov
adc
loopne
ret
cld
pushf
jbe
pop
data16
js
rol
out
aas
push
jle
lods
inc
fisubrs
mov
mov
clc
popf
add
and
jno
dec
fwait
les
or
shlb
mov
stos
rol
jo
lods
and
addb
adc
dec
fmull
push
and
push
sub
mov
xor
push
outsb
outsb
mov
scas
inc
aam
inc
inc
or
inc
out
gs
add
dec
lods
cld
lahf
adc
std
xchg
mov
nop
fnstenv
nop
inc
or
pop
stos
pusha
and
jno
loopne
adc
ja
rcll
lock
jb
and
mov
mov
loopne
lahf
flds
stos
loopne
in
mov
js
jbe
sahf
shr
pop
stc
jp
jo
popf
mov
sbb
or
pusha
jle
or
mov
notl
aas
sbb
fldenv
jmp
ret
daa
sub
adc
lret
dec
dec
xchg
lods
rolb
pusha
sub
and
shrb
or
and
je
call
lret
out
jne
jae
lret
lods
clc
sub
inc
dec
shll
lahf
or
loopne
fwait
push
sbb
andb
xor
imul
mov
cmp
fcmovb
inc
repz
daa
orl
xchg
adc
into
jb
mov
loopne
mov
and
pop
adc
xchg
fs
fcoml
sub
mov
test
inc
push
mov
add
mov
and
and
addb
out
and
or
insb
pop
cmp
inc
cmp
push
sbb
ss
mov
pusha
mov
and
push
ret
mov
and
in
add
rcl
and
add
mov
mov
adc
pusha
lods
add
sbb
sar
mov
add
rolb
in
stos
andb
lahf
dec
movsb
mov
xchg
mov
pop
ljmp
pop
push
loop
daa
pop
cmpsb
and
loopne
dec
push
aas
or
pusha
cmp
ds
adcl
jae
and
add
pop
mov
dec
ffreep
mov
mov
pushw
test
aaa
shlb
inc
cmp
mov
js
out
inc
arpl
xor
xchg
fistpll
in
and
fcoms
js
jns
mov
push
pop
addb
popa
dec
std
jmp
push
dec
std
inc
push
lods
add
fstl
xlat
loop
mov
push
push
nop
dec
adc
ss
inc
pop
nop
sbb
xchg
loope
dec
aaa
clc
cli
call
dec
cwtl
mov
cmp
add
sarb
mov
addb
out
add
rol
sahf
inc
icebp
in
push
aam
xor
int
mov
popf
mov
sub
mov
loopne
or
pusha
xchg
push
dec
pop
mov
call
sub
shl
addb
lds
test
mov
cltd
add
pop
xorl
fucomp
iret
mov
jg
dec
cmp
cmpl
xor
inc
shrb
imul
xchg
out
movsb
and
add
push
pusha
inc
adc
and
inc
jl
push
jecxz
test
je
and
or
and
push
loopne
sbb
cmp
mov
xchg
lock
mov
add
sbb
out
push
sbb
xchg
xor
mov
jmp
sbb
fistpll
mov
loopne
jns
inc
inc
and
adc
jg
jmp
inc
mov
jmp
mov
or
js
inc
mov
jbe
sbbl
std
push
inc
inc
notb
testl
dec
or
decl
mov
mov
mov
mov
andb
add
xchg
jmp
fsub
and
bound
enter
add
loopne
popf
js
sub
sarb
adcb
mov
add
mov
push
cmpsb
and
and
enter
int
out
inc
mov
xchg
aas
test
dec
mov
add
sub
dec
push
and
xchg
out
pushf
fisubs
mov
or
lock
imul
jbe
and
loopne
test
shrb
rolb
add
test
cmp
push
mov
jbe
and
arpl
pusha
mov
push
js
xchg
jle
pusha
loopne
and
xchg
insb
fisubrl
inc
shrb
or
sub
pusha
sbb
push
jnp
andb
out
mov
jbe
sub
add
addb
dec
pusha
lea
mov
in
push
or
add
jg
data16
pop
ljmp
stos
andb
lret
nop
jmp
aas
cmp
mov
pushf
dec
adc
jbe
hlt
into
lret
cltd
dec
scas
rolb
mov
jbe
add
mov
movsl
cmpsb
and
jecxz
mov
mov
mov
aam
sub
jns
pusha
mov
add
mov
sahf
pop
imul
imul
push
push
rolb
adcb
inc
insb
mov
in
mov
push
adc
jbe
and
in
les
and
lods
add
dec
addl
iret
sbb
cltd
repnz
dec
in
and
mov
loopne
or
sub
mov
dec
jb
pop
sub
and
in
testb
cmp
push
and
les
out
sbb
in
ja
stos
fldcw
cmp
and
add
imul
cltd
sbb
xor
adcb
dec
add
jae
daa
push
ror
inc
shl
pop
mov
push
insl
roll
pop
push
and
push
test
jnp
pop
sub
pusha
or
inc
push
shlb
div
into
xlat
jmp
dec
adc
mov
iret
xchg
dec
jle
adc
test
rcl
jge
ror
push
mov
ljmp
ljmp
rorb
cltd
outsb
fisubl
push
bndldx
add
lret
inc
flds
xor
mov
push
xlat
daa
cwtl
inc
andb
cltd
in
pusha
inc
mov
xchg
gs
sub
adc
and
add
loopne
fnstenv
lds
sti
scas
push
stc
mov
add
xchg
jne
aam
or
repnz
mov
subl
xor
lods
and
fcomps
or
mov
jb
fisubl
add
rclb
loopne
cmc
scas
inc
bnd
ret
or
rcll
iret
inc
std
dec
je
movsb
inc
inc
push
adc
add
dec
dec
mov
jmp
fs
mov
and
mov
mov
push
rolb
pusha
and
mov
mov
push
mov
inc
lahf
adc
push
xor
loope
and
pusha
addb
imul
dec
add
pusha
sbb
mov
pusha
iret
lods
loopne
daa
imulb
loopne
mov
sbb
sub
into
fwait
push
sbb
adc
std
lret
lods
add
iret
outsb
lods
inc
add
inc
xchg
sub
mov
mov
and
inc
pop
and
shll
and
add
ret
add
pop
or
push
xchg
jp
sbb
add
cltd
push
add
dec
lods
xor
mov
sub
icebp
and
and
aad
mov
fwait
xor
loopne
push
test
pusha
shl
mov
shlb
test
pusha
mov
mov
out
pop
out
in
xchg
fldt
es
and
fisttps
shl
push
xchg
adc
and
in
cli
cmp
bound
xor
push
iret
scas
push
ret
mov
cmp
popa
lods
pusha
cmc
inc
jle
cli
aas
dec
add
push
push
fwait
movsb
mov
cli
cmp
or
inc
pop
jne
or
lock
pop
fstpl
pusha
sbb
sub
and
inc
xchg
inc
add
lock
das
fs
inc
scas
mov
add
pusha
popa
adc
pusha
fistpl
not
rorl
out
xor
xchg
pop
ljmp
add
loopne
adc
ljmp
orb
loopne
xor
sbb
loope
stos
inc
sbb
and
andb
addl
mov
inc
fwait
pop
mov
inc
stos
loopne
push
icebp
cmc
cmp
pop
pop
insb
cmp
fadd
jb
cld
bound
xchg
out
cmp
das
dec
cmp
loope,pt
and
pop
jmp
mov
daa
loop
out
mov
add
xchg
and
and
and
test
shr
and
xchg
mov
sbbb
mov
loope
lods
imull
loopne
mov
jg
cmp
xchg
sub
pop
int
adc
std
xchg
addr16
rolb
mov
adc
mov
imul
cwtl
out
mov
push
cli
mov
and
gs
call
inc
xor
add
mov
pop
out
jnp
xor
bnd
xchg
test
pop
add
inc
adc
lods
rol
int
test
mov
xor
push
jl
movsb
mov
mov
pusha
fidivs
outsb
inc
je
jmp
jae
js
iret
xchg
stos
in
push
or
or
inc
popw
cmp
bound
mov
add
pop
mov
jno
sbb
inc
and
dec
bound
pusha
inc
and
add
mov
shlb
mov
jp
jl
cs
rcrb
jb
es
cmpb
and
pop
fs
and
shlb
pusha
and
idivl
jne
int3
jl
xor
inc
pop
shlb
xor
into
lods
inc
pusha
cmp
adc
jnp
add
pusha
pop
into
dec
mov
and
xchg
rol
fs
lds
add
dec
cmp
je
cmp
or
push
mov
jmp
scas
add
sub
add
lcall
push
push
imul
inc
inc
movsb
add
xchg
cmp
inc
and
jne
sahf
jle
arpl
lret
sbb
repz
dec
lcall
jecxz
jmp
add
rcll
repnz
bound
lcall
mov
inc
and
add
cmp
jae
and
add
pusha
mov
das
imul
rcl
adcl
dec
sub
xorl
and
jecxz
cmpsb
andb
aad
arpl
jae
cmpsb
add
adc
rolb
add
iret
cmp
int3
jl
shl
pusha
xchg
inc
sub
adc
fsubrs
mov
cmp
inc
rcrb
sbb
mov
loopne
cmp
xchg
jecxz
rol
test
dec
sbb
ficoms
inc
rcrb
movsb
add
sub
add
sub
and
cmp
loopne
push
add
sbb
push
jecxz
pop
mov
cltd
aaa
inc
clc
mov
xchg
repz
es
xor
lods
inc
add
push
or
xchg
cwtl
imul
aad
cld
dec
push
jge
lahf
enter
insl
pop
loope
ret
lods
rolb
and
pop
push
mov
addl
cmpl
bound
push
clc
xor
dec
sub
shl
loop
adc
inc
mov
in
mov
mov
cmp
add
push
dec
mov
addb
into
in
inc
push
imul
add
rolb
in
decb
scas
shlb
sbb
add
and
push
fstl
cmpsl
iret
cli
test
mov
add
negl
sub
mov
push
add
mov
shl
cmp
andb
and
mov
xor
in
xchg
mov
inc
push
aam
xchg
fidivs
add
mov
and
pop
mov
and
xlat
fldcw
mov
and
cmp
xlat
jecxz
shlb
sbb
ljmp
cmp
outsb
test
loopne
sbb
mov
mov
iret
xchg
stc
dec
shrl
add
inc
out
or
pusha
mov
pusha
rcrl
clc
push
into
int
xlat
push
fcmovb
xchg
mov
mov
push
in
repnz
inc
inc
bound
stos
adc
mov
adcb
or
js
dec
sti
inc
sahf
or
call
push
call
dec
int3
push
cmp
repnz
mov
cltd
imul
test
cmpsb
loopne
sbb
orl
add
and
test
loopne
lock
shlb
mov
adc
popf
adc
mov
addb
mov
sub
jg
lahf
bound
mov
mov
test
inc
ror
push
mov
stc
adc
jns
xor
imul
aas
sub
and
loopne
adc
mov
bound
mov
sub
loopne
andb
mov
add
inc
test
fsubrs
push
imulb
adc
jmp
enter
push
fwait
addr16
out
inc
fidivs
loope
jg
mov
sbb
jge
addb
leave
adc
outsb
sbb
pusha
add
in
mov
ror
xchg
movsl
xor
imull
and
push
scas
addb
sarb
js
push
xlat
mov
outsl
in
or
shlb
jb
rolb
xchg
xchg
flds
shlb
mov
inc
lock
xor
push
stos
addb
scas
xchg
and
mov
cmpl
pop
inc
dec
ss
loopne
adc
addb
pop
dec
and
add
mulb
inc
fistl
sbb
push
jmp
cmpsb
and
and
sbb
jae
or
in
mov
rolb
mov
mov
mov
test
jb
pusha
stc
add
or
push
scas
cmp
das
dec
ficompl
pusha
sub
sarb
or
mov
shl
mov
rcl
lods
loopne
andb
mov
fmul
rcll
mov
fst
xchg
inc
lea
andb
push
mov
lods
loopne
xlat
jo
mov
shlb
xchg
dec
add
add
addb
mov
jp
popf
stc
xlat
push
pusha
inc
pop
or
and
outsl
lock
loopne
xchg
mov
lods
loopne
out
cltd
fldt
sahf
mov
jnp
jae
jg
pop
inc
cmp
aas
mov
and
and
roll
add
mov
mov
jae
testb
rclb
mov
jg
shl
pop
inc
and
lods
mov
cmp
pusha
pusha
hlt
xchg
sub
rcrb
arpl
sarb
shl
mov
or
xor
in
outsb
cli
pop
push
inc
mov
lea
insb
ja
out
lock
loopne
mov
inc
cmc
xlat
stos
rolb
imul
push
ret
push
out
jl
mov
lret
sar
cwtl
push
xlat
sti
outsb
pop
lcall
scas
out
jg
inc
loopne
pop
test
mov
mov
jnp
aaa
js
and
mov
jo
add
shll
frstor
aaa
pushf
or
and
mov
in
jle
loopne
sbb
inc
push
mov
lcall
andb
push
mov
add
into
scas
lcall
cmp
pop
xor
sbb
pushf
sahf
movsb
add
in
or
jmp
bound
add
push
negb
inc
cmp
jae
add
addr16
out
xor
movsl
test
and
or
addb
test
add
gs
and
mov
addb
call
mov
outsl
mov
add
jnp
adc
and
xor
jmp
and
or
cmp
lahf
repz
fistpl
mov
shll
cmp
repz
pusha
add
scas
mov
xor
inc
or
ds
pop
enter
jecxz
enter
inc
sahf
sbb
mov
mov
stos
inc
dec
mov
and
adc
addb
jbe
mov
lcall
mov
add
fisttpll
sub
and
loopne
mov
add
stos
and
mov
cmp
sahf
pusha
adc
popa
pusha
pop
mov
inc
addr16
push
dec
outsl
out
adc
sbb
daa
mov
sub
loopne
mov
dec
add
and
icebp
push
and
loopne
shll
sub
aaa
sbb
mov
jle
leave
rcll
mov
sarb
xchg
sub
std
mov
and
ret
out
adc
fcomps
loop
push
sbb
pop
scas
cltd
lret
fldenv
test
shlb
and
popf
mov
pop
nop
xchg
push
call
aas
pop
jae
mov
xchg
mov
testb
and
and
push
movsl
sub
test
mov
jns
and
mov
jo
add
ret
loopne
in
pop
xor
mov
sub
and
inc
mov
scas
loopne
and
and
scas
pop
out
sub
popf
addr16
lds
and
cmp
xchg
repnz
pop
stos
mov
add
dec
xchg
or
data16
cld
stos
add
rcrb
aad
xchg
test
stos
hlt
shr
fucomip
push
add
rcrb
inc
push
loopne
and
sub
out
dec
loop
shl
out
xchg
out
cmp
in
shl
pop
das
fnsave
adc
add
std
dec
push
xchg
stos
and
inc
rorb
loopne
sub
xchg
inc
andb
andb
add
xchg
jo
lahf
dec
cmp
test
add
hlt
or
adc
lret
bound
pop
clc
imul
aas
inc
cmp
bound
xor
push
sub
pop
scas
dec
jl
ljmp
inc
mov
xor
sbb
or
dec
pusha
ficoml
pop
rolb
shrl
xor
fcompl
pop
rcrb
and
add
adc
dec
xor
pop
imul
cmpsl
jnp
mov
jecxz
and
and
pushf
rcll
push
add
aam
mov
pop
mov
add
and
inc
sbb
inc
mov
dec
mov
loopne
pop
imul
aaa
pop
cmp
jae
dec
sub
pop
push
add
daa
sbb
dec
jno
bnd
sti
jnp
cmc
inc
push
mov
shlb
xlat
mov
inc
and
and
loopne
pusha
daa
dec
xchg
lds
mov
pop
lock
mov
int3
pop
in
mov
popa
out
jmp
and
sar
cwtl
outsl
fs
dec
in
lock
hlt
das
pop
dec
pop
loopne
pop
dec
xor
and
fists
cmp
pushf
sbb
xchg
or
lret
jp
push
shlb
inc
mov
pop
pop
mov
lods
fsubs
mov
cltd
push
or
push
sub
jo
loop
mov
mov
or
lods
and
mov
mov
fwait
mov
push
add
jmp
dec
scas
mov
arpl
stc
cld
ds
inc
loopne,pn
pop
mov
fmull
pop
pop
aam
js
pushf
sub
mov
mov
test
std
adc
push
aaa
jecxz
sub
cmp
inc
jo
lea
andb
out
or
inc
ret
inc
inc
dec
inc
incl
incl
loope
sub
loopne
fldt
inc
int
aaa
add
lahf
cmpsw
icebp
sbb
cmp
sub
in
mov
ljmp
push
fdivrs
fisttpl
dec
clc
lods
cmc
xchg
push
cmp
shlb
arpl
sbb
add
jle
jmp
push
cmp
push
pop
or
mov
add
mov
and
pop
adc
pop
int3
xchg
and
pusha
imul
push
add
ss
out
and
xchg
mov
add
shl
adc
dec
xchg
andb
fdivl
int3
sub
add
mov
mov
stos
loopne
or
or
mov
push
sbb
xchg
test
and
adc
repz
lods
ja
pusha
pusha
mov
loopne
dec
dec
mov
xchg
mov
and
fcoml
jo
test
add
xor
mov
fnsave
pusha
fiadds
add
mov
sbb
shlb
mov
and
push
or
and
ss
push
add
sub
ss
andb
cmpsl
mov
jmp
addb
ja
pop
mov
inc
xchg
out
jl
lret
jg
dec
pop
push
lcall
sub
pusha
cmp
push
jp
imull
loopne
jecxz
jns
andb
es
and
inc
pop
add
and
jecxz
push
dec
jle
rclb
inc
loopne
xchg
mov
aad
xchg
mov
loopne
jecxz
or
add
add
sub
mov
xor
mov
push
repnz
or
loopne
enter
aam
dec
sbb
idivb
mov
dec
sbb
pusha
and
xor
dec
sub
dec
sarl
pusha
ret
popf
xchg
or
lock
inc
mov
pop
mov
add
dec
mov
dec
push
clc
sub
add
cmp
mov
add
push
and
loopne
and
and
repnz
pop
loop
add
inc
push
inc
add
nop
jno
add
enter
push
push
xchg
ds
pop
mov
mov
in
arpl
sti
mov
loopne
leave
push
in
mov
add
and
xor
xchg
subl
pushf
popl
dec
pop
fwait
loopne
xchg
in
add
mov
sbb
in
aaa
xchg
mov
xlat
sbb
lds
jo
clc
lock
sar
cmc
pushf
push
pop
popf
repz
xor
dec
jle
sub
jg
mov
addb
mov
lock
andb
jg
loopne
xchg
push
clc
leave
popa
add
pusha
mov
fst
dec
xor
ss
out
jmp
fimuls
pusha
loopne
adc
push
negb
jecxz
mov
add
loopne
lret
cmp
mov
add
pusha
shll
out
xor
or
sbb
adc
fdivr
push
movsl
or
and
xor
mov
out
inc
xlat
mov
into
sbb
ss
repnz
adc
je
jle
fistl
loopne
adc
mov
andb
mov
addr16
jbe
mov
in
add
addb
bnd
pushf
mov
push
push
sub
outsl
mov
addb
pushw
and
and
lahf
inc
push
lea
cli
imul
mov
leave
dec
cmp
call
sahf
out
jle
xor
mov
mov
mov
test
sbb
mov
pusha
rorb
out
andb
xor
pop
cmp
dec
sub
sub
in
clc
sbb
loope
out
pop
addr16
inc
ret
or
or
xor
dec
xchg
xchg
sbb
xchg
inc
adc
and
add
pusha
mov
xlat
mov
mov
xchg
cmp
add
push
loopne
fists
loopne
sti
jmp
pusha
inc
cwtl
scas
mov
sbb
add
ljmp
addb
pusha
scas
mov
jae
les
dec
and
loope
call
jmp
sub
and
jl
add
insb
movsl
mov
dec
add
pushf
and
inc
mov
in
dec
jmp
xchg
sbb
pop
dec
xor
aam
scas
add
out
andb
scas
pop
lret
xor
test
fisttpll
ffreep
inc
pop
cmc
shlb
inc
and
push
xor
cmp
cwtl
fstps
jmp
and
pop
lret
andb
jl
and
mov
sub
and
pop
icebp
test
insb
sbb
fcmovu
lret
pusha
scas
cwtl
out
fimull
inc
andb
add
xchg
lods
pusha
add
push
sahf
jecxz
adc
add
mov
xor
insl
andb
movsb
shlb
jg
pusha
loopne
and
shlb
pop
xor
cmpl
mov
arpl
call
and
leave
jmp
and
int
sbb
pop
add
and
outsb
sti
int
insb
dec
mov
push
mov
mov
cmpsl
addb
push
call
lods
loopne
mov
out
cmc
cmpsb
loopne
dec
dec
push
repnz
jge
das
push
out
mov
loopne
sar
and
popa
pop
add
adc
in
lret
shlb
fildll
push
insl
adc
pusha
mov
pushf
cmp
inc
push
daa
mov
lahf
mov
icebp
dec
xchg
sbb
adc
xor
fldcw
lahf
lahf
bswap
sbb
rorl
jg
pop
test
addl
loopne
add
jge
mov
lea
sub
inc
movsb
shlb
cld
lret
or
mov
in
push
aad
mov
fs
pop
mov
dec
ljmp
shrl
mov
outsb
out
scas
and
test
add
or
mov
dec
lahf
pop
and
add
nop
stos
pusha
and
inc
xlat
idiv
test
inc
daa
sbb
gs
gs
xor
and
loopne
insb
dec
xlat
cmp
loopne
cltd
and
add
xchg
cmp
and
shrb
fimuls
andb
xchg
data16
add
sub
sbb
or
push
fldt
add
fists
test
loopne
xchg
lcall
ss
cltd
mov
cmp
inc
sbb
cmp
jl
inc
xor
out
out
push
movsb
loopne
inc
mov
jne
mov
andb
xchg
popa
jne
mov
xchg
add
add
ljmp
ret
sbb
lcall
push
sub
rcrl
sar
addb
and
mov
inc
jp
or
andb
pusha
pusha
xor
pop
decl
inc
dec
sub
das
adc
out
inc
dec
fcoms
ss
add
xor
fisttpll
dec
fbstp
pusha
movsl
cli
cmp
xchg
aas
add
inc
pop
pop
daa
xor
lea
cwtl
mov
cmp
jle
add
or
cld
cmpsl
mov
loopne
aam
test
inc
push
pop
pusha
push
dec
add
arpl
in
dec
repz
aad
test
add
dec
rcll
roll
pusha
inc
ljmp
mov
mov
and
dec
lds
andb
pop
pushf
mov
add
sbbb
mov
shll
adc
js
ret
mov
jae
and
loopne
or
add
loopne
mov
pop
xchg
sub
add
add
cmpb
jp
push
shlb
imul
ret
inc
pusha
pop
and
aad
loopne
pop
ljmp
test
shr
and
push
insl
dec
sub
add
icebp
mov
add
push
pusha
add
ret
sub
stos
loopne
fimull
inc
fwait
or
mov
add
mov
cmpb
fimuls
pusha
xchg
ror
push
jnp
mov
jge
mov
jns
in
lock
inc
in
pop
dec
ret
iret
outsb
mov
pusha
divb
adc
shrl
ret
mov
adc
cmp
sub
pusha
loopne
and
rclb
addb
pusha
shrb
mov
dec
fadd
lcall
testb
sub
std
loopne
outsl
and
int3
insb
dec
sahf
xor
inc
push
and
movsb
loopne
into
adc
mov
lcall
into
faddl
out
adc
and
rorl
andb
call
int
out
inc
imul
jmp
clc
dec
xor
ja
push
and
adcb
inc
loopne
add
mov
inc
rclb
pusha
das
xchg
les
mov
adc
daa
ljmp
push
add
add
daa
lods
mov
loopne,pn
sub
jae
mov
and
pusha
decl
vpcmpgtb
in
push
shlb
sbb
fs
push
sbb
jle
adc
cmp
mov
adc
push
rolb
ss
add
push
scas
loopne
push
xchg
inc
push
shl
or
mov
arpl
mov
jge
test
addb
imul
and
sub
rclb
xchg
mov
jns
addb
shrb
ljmp
push
aaa
inc
sahf
incb
loopne
dec
or
push
repz
mov
push
pusha
and
or
scas
loopne
pop
xor
jo
andb
inc
xchg
cmpsl
xchg
enter
mov
add
xchg
enter
mov
xor
loope
lods
xchg
movsl
push
rclb
popa
leave
dec
pop
call
rcr
dec
mov
fldcw
and
and
mov
add
and
dec
sub
dec
cmp
nop
insb
ljmp
xchg
push
andb
inc
adc
shlb
andb
jmp
mov
jno
imul
sbb
and
outsb
mov
dec
add
jp
loopne
sbb
jge
or
add
mov
and
repnz
sbb
dec
inc
push
jp
adc
and
popa
enter
addr16
pusha
push
jmp
mov
insl
cmp
mov
sbb
out
cs
inc
lret
clc
xor
fsub
adc
jno
hlt
aam
sbb
aaa
stc
push
mov
mov
mov
mov
push
and
inc
pop
add
rorl
push
sbb
icebp
rcl
xor
rcl
add
daa
idivl
and
test
pop
in
das
or
lahf
loope
lret
push
lods
sub
mov
add
cmc
inc
jb
mov
jo
cld
js
push
out
pop
rcrb
inc
pop
mov
pusha
mov
lcall
test
addb
xchg
ret
loope
jno
xchg
cli
mov
daa
sub
frstor
and
lods
add
leave
mov
sti
and
addb
flds
data16
mov
sub
inc
cmpsl
xor
das
fdivp
pop
inc
sub
and
loopne
enter
loopne
cmp
jp
jle
add
mov
std
push
push
mov
mov
aam
inc
inc
pop
insl
dec
push
mov
popf
int
xchg
pop
scas
jg
xor
cs
and
cmc
int3
lcall
add
loopne
dec
gs
push
inc
pusha
cwtl
xchg
xchg
bnd
fwait
jae
pop
dec
and
or
and
jns
or
and
scas
xchg
test
loopne
mov
dec
push
and
vprotb
pusha
mov
subl
jae
gs
neg
jae
out
add
pusha
push
rclb
mov
jecxz
ret
jmp
push
nop
fnstsw
and
je
ljmp
inc
orb
mov
push
add
negl
lea
mov
pop
fs
xor
cmp
sub
add
and
sub
and
xchg
test
and
xor
in
fcoml
sub
xchg
xor
and
sub
adc
dec
jl
addb
mov
cmp
xchg
loopne
inc
add
pusha
sub
sarb
ljmp
rolb
icebp
lret
loopne
mov
or
xor
cmp
adc
mov
push
shrb
dec
jg
dec
sti
push
mov
inc
out
sub
and
loopne
cmp
add
mov
cmp
aam
mov
sub
sbb
lods
pop
lret
repnz
xor
data16
rolb
pop
insb
jae
lcall
cmc
xchg
pop
dec
pop
ret
pop
jnp
jno
jl
and
add
push
sub
mov
cmp
shlb
pusha
xorb
call
mov
ja
cmpsl
addb
mov
inc
sbbb
pusha
movsb
and
aaa
mov
mov
test
jmp
pusha
mov
adc
outsl
in
aam
imul
dec
rclb
xor
cltd
xchg
ficoms
mov
lahf
jl
cmp
xor
lea
inc
add
add
ret
mov
mov
mov
adc
mov
data16
inc
xchg
test
mov
imul
jmp
mov
push
inc
shlb
and
pusha
outsl
mov
lahf
sbb
lods
and
outsl
xchg
in
ss
addb
pusha
in
subl
mov
jle
aad
push
dec
js
sti
mov
jl
test
cmp
test
adc
cmp
std
mov
sbbb
dec
mov
fcoml
stos
inc
pop
xchg
cli
sub
rol
outsl
cltd
std
inc
ret
pop
xchg
and
fstpt
stc
push
mov
adc
loopne
ficoms
jns
shlb
mov
lret
push
out
je
push
mov
fnstsw
insl
pushf
hlt
fcompl
jle
sub
jb
loopne
out
cmp
dec
xchg
fs
pop
addb
test
mov
rol
inc
pusha
mov
in
clc
test
cwtl
outsb
mov
or
cmp
sub
mov
loopne
lods
loopne
add
add
add
inc
call
shll
subb
jmp
jne
dec
flds
add
shll
movb
and
sbb
movsl
push
xor
ss
sub
push
and
popf
push
popf
push
lods
pusha
loopne
jl
mov
mov
rol
inc
rorb
pusha
or
inc
sub
and
and
xchg
pop
stos
loopne
push
iret
lock
cli
pop
xchg
or
fisubs
and
jl
movsl
imul
in
jecxz
addb
scas
rolb
sub
pusha
adcb
and
adc
add
orb
je
jg
push
or
mov
xchg
orb
test
add
adc
aad
ljmp
xchg
dec
rep
jns
pop
add
inc
cltd
pop
cmp
cmp
in
aad
adc
popf
or
xchg
pop
or
mov
pusha
and
sbbb
add
and
xchg
mov
add
es
pop
add
add
ds
jmp
repnz
inc
add
and
mov
push
sarb
and
ret
adc
repnz
rcrl
mov
into
mov
add
cmpsb
andb
and
lock
adc
and
pusha
and
push
push
mov
scas
loopne
push
mov
fwait
add
leave
fmuls
dec
jmp
test
loopne
push
shlb
inc
pusha
sbb
orb
lods
dec
mov
push
rcr
stos
dec
je
ljmp
repnz
jg
adc
dec
mov
jl
inc
fldenv
repz
lods
pusha
addb
mov
pusha
add
lret
pop
mov
ret
loopne
imul
mov
xorb
sub
cmc
arpl
lahf
int3
cmp
loopne
dec
push
stos
rol
cmp
mov
scas
mov
in
jo
jge
add
jl
test
testb
mov
lret
and
cmpsl
icebp
pusha
fiadds
mov
das
cmp
loopne
fdivs
or
mov
xlat
add
pusha
push
addb
cmc
xchg
dec
shll
mov
cmpsl
pushf
mov
shl
adc
add
inc
lret
sti
lahf
test
pusha
dec
dec
sbb
iret
pop
daa
pop
sub
loopne
fnsave
loopne
pusha
mov
test
ss
dec
imul
test
shl
daa
lods
inc
mov
mov
enter
stc
xchg
sarb
and
loopne
inc
nop
and
rolb
bound
mov
adc
and
stos
xchg
sub
lcall
jne
push
andb
andb
movb
cmpl
and
shll
fcoml
rcl
xor
mov
and
inc
shlb
mov
mov
cltd
aam
cmp
push
fadds
jmp
icebp
pop
jmp
mov
adc
cmpsb
pusha
inc
push
mov
fsqrt
inc
leave
fildll
daa
jo
pushf
jge
insl
lock
xchg
outsl
mov
jle
cltd
test
inc
mov
ds
add
outsb
jg
cmp
sti
cwtl
out
ds
rol
test
inc
lret
fsubs
andb
inc
add
add
rcll
in
mov
addb
push
dec
push
in
xor
cmp
push
in
mov
mov
out
jne
fadd
xor
loopne
adc
sbb
pop
pop
pop
fldz
and
jb
ret
push
andb
fs
lods
or
mov
xor
jne
mov
and
inc
cmp
and
ffreep
add
mov
jne
xchg
adc
imul
pusha
add
push
in
loope
fidivl
lock
testb
aaa
push
das
sbb
iret
mov
dec
je
aad
mov
ljmp
movsb
mov
gs
add
pop
jg
ljmp
subb
jge
inc
and
mov
dec
sarb
sarb
dec
stos
inc
pop
add
xchg
lods
adc
pop
push
int
push
aas
leave
sub
out
push
and
xor
cltd
repz
loopne
fistpll
test
xchg
inc
outsl
jl
lods
pusha
add
in
push
dec
xor
adc
mov
outsl
test
dec
ds
popf
jmp
xchg
cmpsl
ja
push
fisttpll
lods
xchg
jecxz
or
aad
xchg
inc
pop
inc
stc
sbb
loopne
jbe
add
shlb
loope
rolb
add
loopne
jo
mov
jo
aaa
shll
mov
mov
mov
jge
push
cli
insl
out
iret
stc
ret
in
push
fwait
inc
sarl
jb
push
into
dec
dec
les
xlat
fisubrs
inc
lods
dec
insl
push
aam
dec
bound
pop
add
dec
js
in
mov
cwtl
cmp
mov
xchg
mov
mov
cltd
inc
cmp
movsl
sbb
adc
mov
loopne
in
push
ret
mov
add
push
adc
and
push
inc
mov
loopne
push
lds
mov
aad
shll
fsts
mov
icebp
sahf
fistps
out
sahf
aam
and
addb
sub
shrb
xor
jge
cli
ds
adc
ret
fmull
add
mov
stos
pusha
and
or
shll
push
fildll
pop
jle
sar
pop
adc
add
shll
add
mov
sbb
sub
add
incl
loopne
jne
test
shlb
loopne
ljmp
lret
rol
jo
jmp
inc
push
ljmpw
jl
or
and
xlat
xchg
push
cmp
xor
pop
inc
cmp
sub
add
and
sbb
or
pusha
paddb
and
test
and
jle
iret
cli
adc
in
mov
jecxz
mov
xchg
out
fs
insb
mov
gs
inc
sbbb
pop
xor
xchg
add
mov
mov
adc
cmpsb
inc
sarb
dec
ret
and
rclb
xchg
mov
sbb
clc
idivl
xor
pop
push
push
jae
aaa
dec
stos
mov
mov
daa
xor
mov
and
lret
xchg
lods
cmc
jne
push
pusha
mov
inc
xor
pusha
shr
dec
mov
fistps
and
out
inc
rolb
addb
loopne,pn
dec
iret
jp
out
loop
add
cli
cmpl
xor
xor
ljmp
in
fdivrs
ds
lcall
pop
jae
std
xchg
pushf
mov
fmull
push
pop
xchg
pop
insl
jle
lods
inc
loopne
jb
js
je
push
adc
mov
aad
iret
cli
xlat
arpl
mov
test
loopne
test
fxch
cmp
inc
mov
inc
add
jle
pop
xchg
cmp
out
push
and
xchg
adc
outsl
mov
add
loopne
inc
and
mov
fcoms
sbb
mov
pop
adc
or
cmp
mov
inc
in
addl
add
rolb
jge
ficoml
mov
sbb
negl
das
es
or
xchg
mov
decl
lahf
das
ret
nop
push
inc
or
inc
jns
inc
or
dec
clc
movsl
sahf
scas
inc
mov
add
mov
add
out
fidivrl
jmp
mov
lock
add
sub
pop
ficompl
and
je
aaa
xchg
adc
add
es
pop
inc
jmp
rolb
and
push
mov
ret
xchg
jp
inc
and
or
pop
cli
sbb
sub
bound
pushf
mov
xchg
mov
js
jmp
fs
sbb
adc
dec
int3
or
ds
add
rcrb
outsl
outsl
lods
and
rorl
mov
in
jle
cld
ja
loop
mov
xchg
inc
stc
loope
push
add
loopne
fwait
jnp
mov
int
push
test
mov
fsubs
add
fadds
push
shl
call
sub
je
rclb
add
ret
andb
mov
or
xorb
les
mov
int
in
inc
les
arpl
jno
adcl
pusha
pusha
imul
sti
xor
or
and
add
orb
jle
or
push
shlb
mov
jbe
rol
pop
inc
inc
mov
pusha
add
scas
inc
adcb
int
cli
sub
pop
sbb
shl
loopne
enter
cmp
and
dec
pop
in
dec
cmp
sub
and
adc
or
xchg
les
xchg
push
fmull
shlb
add
aaa
mov
adc
lret
dec
cmp
mov
adc
in
push
inc
and
mov
sub
and
rcl
out
jae
xchg
and
inc
xchg
movsb
rolb
adc
jle
subl
cld
xchg
push
popf
in
lret
into
dec
gs
pop
loopne
push
inc
add
fbld
addb
xchg
jmp
mov
jg
pop
pop
sub
imul
mov
xchg
sti
dec
out
fmul
and
loopne
fs
dec
mov
pusha
cmpsl
cli
jno
cli
ljmp
push
adc
mov
rol
aaa
push
xchg
subl
popa
add
mov
test
pop
adc
mov
inc
adc
out
lret
aad
frstor
sub
andb
mov
xchg
lret
mov
xor
outsl
stos
mov
rcl
hlt
mov
repnz
fmuls
inc
inc
push
ret
xlat
cld
xchg
fistpl
and
jne
push
pusha
push
pop
rclb
lret
daa
pop
cmp
int
mov
pusha
lcall
mov
in
xor
rol
scas
cwtl
movsl
rcrl
add
arpl
test
lods
loopne
push
out
xchg
in
push
push
jmp
loopne
pop
int3
gs
inc
sub
mov
fidivs
and
test
cltd
outsb
pop
ficomps
mov
dec
int3
call
hlt
aaa
pushf
add
mov
shrb
and
dec
in
stos
es
popf
into
push
es
inc
mov
add
sbb
add
mov
mov
mov
ss
and
cmp
fadd
addb
and
mov
and
jae
mov
push
mov
jb
and
nop
mov
clc
pop
subl
shlb
in
stos
enter
inc
jge
sub
cmpb
shlb
aas
lret
mov
lods
and
inc
push
pusha
add
dec
mov
out
and
sub
pusha
or
out
or
ss
lods
mov
ja
addb
arpl
and
cmpsb
and
loop
ret
out
hlt
aad
add
pusha
dec
sbb
xchg
jnp
je
test
pusha
movsb
pusha
loopne
out
adc
clc
xor
shll
and
rolb
dec
and
andb
clc
xor
bound
enter
stos
inc
shr
rol
mov
dec
inc
cwtl
in
add
push
lock
mov
mov
dec
fucomip
shl
dec
cvtps2pi
into
fldenv
add
pop
push
and
xchg
and
inc
add
pusha
fs
shl
nop
int3
mov
insl
mov
fisubrl
ja
xchg
in
andl
pusha
inc
sbb
lods
loopne
and
inc
and
pusha
aaa
xchg
loop
sub
rolb
sub
sbbl
mov
shrl
ljmp
inc
rcrb
and
popa
pop
ss
jecxz
jmp
dec
mov
inc
pusha
aad
scas
loopne
mov
and
rclb
sub
fiadds
and
push
jo
mov
rolb
jae
pusha
shlb
mov
xor
icebp
loop
out
or
inc
pusha
stos
cmp
xor
repz
pop
cmovge
push
mov
adc
xchg
stos
shl
cmp
aad
sub
sbb
pop
pushf
call
and
pop
sbb
inc
mov
add
and
rol
les
push
mov
dec
xchg
mov
lcall
add
lret
mov
pusha
xor
xor
fs
xor
in
stos
loopne
in
dec
adc
add
and
xchg
movsb
mov
scas
scas
loopne
push
push
mov
xchg
movsb
pusha
shrb
andb
cltd
adc
mov
push
movsl
adc
clc
stos
dec
mov
jno
inc
pusha
ret
mov
or
subb
mov
mov
pop
test
inc
outsb
sub
loopne
sbb
rcll
sbb
sarb
divl
in
data16
dec
push
inc
dec
aam
xor
stos
inc
rolb
push
or
roll
inc
cmc
or
popf
and
and
sub
shlb
jne
and
pop
sbb
loopne
pushf
in
or
mov
rolb
push
and
mov
xor
push
jns
test
inc
enter
imul
pusha
mov
inc
loopne
xor
fidivrl
fsubr
std
divb
add
rcr
cmp
outsl
popa
push
mov
xor
push
leave
adc
and
pop
stos
inc
add
add
add
push
mov
shl
xor
aad
push
out
rclb
stos
mov
inc
pop
mov
adcb
sub
subl
xchg
fisubrs
add
add
add
add
mov
xor
mov
cmp
pop
mov
shlb
orl
mov
pop
jle
test
and
rolb
pop
roll
mov
shlb
jl
movsl
xchg
mov
test
add
loopne
lods
xchg
aaa
or
addb
push
xchg
xchg
ja
inc
shlb
mov
cmp
dec
popf
addr16
int3
int3
push
stc
faddl
mov
fldcw
pop
aaa
and
dec
adc
and
or
pusha
iret
push
and
inc
cs
adc
test
pusha
push
xchg
and
or
stc
imul
pop
fiadds
push
xchg
fstpt
inc
inc
in
xchg
sub
gs
sbb
sub
mov
cli
add
mov
jnp
cmp
test
cmpb
fisttpll
jecxz
cmpsb
and
in
sub
aam
inc
or
loopne
imul
dec
or
mov
inc
popa
adc
rclb
loopne
mov
shll
movsb
andb
int
and
fxch
data16
or
fcompl
cwtl
popa
mov
loopne
and
andb
addb
rolb
mov
xchg
mov
test
in
add
and
pusha
mov
add
ljmp
arpl
or
and
add
jno
cwtl
nop
inc
hlt
mov
adc
stos
sub
pusha
imul
push
addr16
jb
dec
inc
mov
insl
nop
leave
shrb
pop
adc
sbb
xor
mov
jae
pusha
mov
jo
mov
and
and
psubb
jg
mov
icebp
in
dec
xchg
ret
mov
xor
add
int
mov
subl
adc
shlb
lea
nop
xor
jns
outsb
push
mov
mov
scas
pusha
inc
xchg
inc
aaa
iret
fcoml
jl
add
loopne
cmp
imul
mov
push
lret
fldl
rcrb
in
loopne
xlat
add
pusha
stos
add
xchg
push
pusha
shlb
test
pusha
xor
lret
lock
inc
pop
xor
rorb
push
cmp
mov
das
mov
adc
fcomip
out
les
stos
loopne
pop
aas
scas
jle
test
mov
loopne
jg
xchg
loopne
push
in
push
jle
mov
pusha
pusha
inc
fadds
pop
pop
mov
into
sbb
call
call
push
movsb
inc
add
cmp
mov
mov
inc
pop
movsl
sub
sbb
or
mov
xchg
js
jge
idivl
rcrb
mov
add
int
sub
adc
add
add
sbb
and
fwait
cwtl
push
repz
out
rorl
sarb
movb
cmpsl
xchg
popf
inc
xchg
fcoml
push
mov
popf
jecxz
and
sbb
loopne
pop
sub
pop
lods
mov
out
inc
addb
rclb
imul
mov
adc
cli
cwtl
pusha
xor
xchg
inc
cmpsl
jne
mov
sub
and
cmpsl
jle
ret
call
cmp
loopne
pusha
inc
outsl
or
loopne
sarl
mov
ds
addb
test
mov
int
mov
ljmp
shlb
or
add
dec
mov
lods
repnz
fldl
std
xlat
mov
cmp
mov
punpckldq
loop
ds
loope
adc
push
ucomiss
mov
out
cmp
dec
pop
mov
ljmp
adc
mov
enter
add
inc
mov
sbb
inc
push
sbb
pop
jbe
sub
inc
xchg
xor
mov
or
sbb
jb
test
inc
sbb
pusha
inc
in
inc
push
andb
ret
pusha
ja
or
hlt
push
shlb
jmp
push
mov
inc
sbb
stos
pusha
pusha
fildll
add
mov
jg
xor
les
cli
cmc
add
rcr
in
cmp
fmuls
ds
dec
outsb
scas
and
push
cltd
push
add
lods
mov
enter
push
jb
sbb
fldenv
mov
cmp
inc
dec
in
into
lods
inc
and
add
mov
mov
imul
stos
loopne
mov
mov
ret
or
pusha
mov
and
or
sub
add
cld
mov
push
and
out
arpl
gs
dec
sub
jp
dec
xchg
in
lea
pusha
and
popf
shll
xchg
enter
push
xchg
dec
outsb
out
push
mov
and
add
and
mov
inc
shr
jne
ret
jno
iret
daa
pop
dec
lods
lcall
iret
je
shr
jle
addr16
xlat
xchg
test
sbb
mov
xor
adc
icebp
xlat
xor
shlb
dec
roll
jae
mov
and
mov
sbb
lret
jb
or
pusha
xor
and
aam
rolb
dec
lret
dec
mov
cmp
xor
sub
mov
lcall
data16
jb
adc
adc
pop
push
test
pusha
sbb
mov
xchg
dec
sbb
push
mov
and
add
rorb
jnp
jb
push
inc
loopne
bound
stos
sbb
jae
ss
cmc
incl
adc
jb
cli
add
subb
add
and
xchg
cwtl
and
arpl
call
inc
andb
add
out
mov
popf
mov
lock
pusha
adc
xchg
cwtl
or
pusha
sarl
or
pop
std
mov
rolb
or
in
sbbl
mov
add
subb
mov
mov
rolb
test
pusha
jmp
pusha
mov
push
pop
addb
lds
shlb
data16
jno
jle
lret
shrb
add
lock
and
inc
push
fistps
mov
xor
int
jge
mov
sbb
andb
rcrb
or
stos
imul
add
sbb
mov
test
stos
cltd
scas
rolb
mov
fidivrl
stc
inc
sbb
dec
mov
pusha
inc
loopne
mov
sub
in
out
jl
inc
pusha
and
dec
and
roll
inc
pop
sarl
mov
mov
es
xorb
sub
hlt
hlt
mov
pusha
inc
adc
sbb
mov
push
add
pop
ret
pusha
hlt
mov
loopne
mov
and
icebp
out
mov
jmp
in
jl
or
add
dec
cmp
or
cmpl
iret
xchg
jp
shufps
enter
adcb
inc
rolb
mov
ficomps
jbe
int
jecxz
rcr
adc
loopne
mov
push
hlt
adc
imul
outsb
repnz
push
add
jmp
scas
sbb
mov
ss
sbb
ret
mov
pusha
icebp
je
xor
jne
inc
mov
loopne
mov
sub
adc
loopne
lods
push
sub
cmp
push
and
pop
sbb
mov
shrb
add
leave
hlt
mov
test
jb
loope
int
ljmp
xchg
sbb
fdivs
js
out
std
in
and
sar
fidivs
icebp
inc
dec
aad
and
test
inc
cmp
fs
fdivrs
cmp
es
loopne
sub
mov
addb
fcmovnu
cmp
imul
lea
inc
repnz
lret
mov
push
mov
loopne
lds
aaa
mov
inc
testb
inc
dec
jmp
inc
scas
ret
pop
mov
inc
inc
mov
sub
loopne
fcoml
mov
rol
add
xor
jb
inc
and
pusha
ret
adc
add
inc
out
shrl
std
cltd
adc
inc
inc
jbe
add
rolb
lret
in
cwtl
inc
cmp
mov
xchg
andl
imul
and
and
inc
mov
adc
inc
shrb
xor
inc
adc
stos
addb
mov
push
lods
int3
jmp
rclb
scas
add
pop
jl
sub
add
loopne
adc
data16
insb
cmp
xlat
out
mov
add
inc
and
pop
sub
jg
mov
scas
pop
cs
and
mov
adc
dec
pop
pop
femms
inc
pusha
xchg
shlb
and
iret
jae
pop
nop
lret
pop
xchg
sub
or
loopne
in
insl
push
inc
rol
call
add
mov
and
pusha
inc
mov
loopne
into
add
add
pusha
pushw
jb
add
and
inc
in
add
xchg
test
bound
imul
mov
fisubrl
jmp
fldenv
and
aas
push
loopne
jge
jnp
shl
lock
icebp
sti
mov
enter
xchg
mov
ja
lcall
and
sbbb
inc
movsl
pop
ljmp
and
fwait
iret
mov
mov
loope
pop
cli
pop
xchg
push
mov
out
or
aaa
cmp
and
push
fcoms
shl
lea
add
add
jns
pushf
and
inc
xchg
js
add
sbb
and
outsb
in
loopne
repz
aaa
andb
inc
and
andb
dec
pop
bound
stc
mov
adc
ja
into
xlat
sub
inc
mov
xor
or
and
cmpb
push
push
push
fidivs
imul
test
pusha
int
mov
lret
mov
fisubrs
call
rclb
cmpsb
loopne
out
lea
icebp
ja
adc
sahf
hlt
dec
nop
out
insb
mov
mov
lock
sub
inc
add
pusha
dec
jle
or
loopne
mov
jns
cmp
sub
in
xchg
pop
xor
sub
add
adcl
adc
insb
mov
dec
mov
ds
sbb
jae
cmpsb
pusha
pusha
cmpsb
and
push
scas
negb
loopne
fisttpll
lea
lcall
inc
out
push
es
imul
loopne
popa
div
mov
rolb
xor
mov
cli
repz
inc
inc
pop
and
jg
sub
inc
mov
add
inc
inc
fidivl
rclb
je
jb
push
notb
jo
or
sub
loop
sarb
int
sub
and
dec
call
iret
xor
mov
ret
out
or
cltd
add
and
mov
and
jno
shrl
xor
mov
ljmp
repz
and
or
and
inc
or
orb
push
ret
addb
fwait
and
loopne
adc
inc
cmpsl
icebp
sarl
mov
shrb
xchg
or
loopne
rol
addr16
xchg
rcrl
xor
jae
cmp
into
lea
dec
inc
mov
push
nop
enter
mov
mov
jae
or
loopne
sub
sar
filds
or
add
xchg
xchg
loopne
mov
and
mov
or
inc
lds
sarl
mov
push
repnz
ljmp
jae
jb
sub
add
and
iret
or
mov
add
add
inc
mov
inc
pusha
lcall
bound
aas
and
outsb
pop
add
pushf
and
mov
lock
cmp
dec
sarl
rcrb
jecxz
inc
jle
mov
das
push
or
arpl
push
pop
sbb
fidivrl
stos
and
call
cmpsb
pusha
loopne
in
aas
mov
pop
scas
and
sahf
add
add
mov
lret
cmpsl
clc
xchg
das
pop
daa
iret
sbb
add
loopne
lret
jno
mov
or
sarb
aad
loope
xor
lock
inc
dec
loop
int3
mov
jo
cltd
pop
mov
andb
popa
inc
loope
shll
sbb
cwtl
js
jns
mov
inc
mov
mov
sti
push
loope
push
test
jge
imul
sbb
lret
mov
jo
sub
add
mov
sub
into
xor
mov
ds
js
stos
andb
sub
rolb
jo
pop
ror
out
mov
or
inc
xor
shl
movsb
and
mov
out
and
xorb
leave
or
andb
pop
imul
loopne
repz
jle
add
and
pop
adc
int
shlb
jae
adc
repz
or
add
rolb
popf
mov
stc
pusha
pop
cmp
imul
cmp
pop
xchg
mov
int3
xor
mov
pop
sub
xor
enter
pop
lsl
sbb
pusha
into
cmp
push
out
mov
andb
in
flds
jb
sbb
dec
adc
rcrl
mov
mov
or
and
aas
test
bound
outsl
mov
and
adc
inc
dec
add
xor
pusha
imul
outsb
inc
pop
imul
hlt
push
out
addr16
sbb
sub
ljmp
and
push
push
scas
addb
cwtl
lret
and
and
and
cmp
ficoml
nop
mov
psubb
jo
xchg
adc
xlat
sub
lcall
mov
mov
mov
fs
pop
add
pop
repz
cmp
mov
cli
sub
stos
push
movb
int3
dec
mov
adc
pop
popf
push
out
jnp
inc
loopne
addr16
cmc
shlb
cmp
dec
divb
inc
mov
push
push
shrb
pop
inc
aad
sbb
dec
pop
lea
cltd
lahf
imul
adc
sbb
and
in
jbe
mov
add
lahf
out
inc
subb
pop
and
sbb
xlat
mov
sub
loop
out
mov
or
ja
pop
mov
mov
in
fildl
sub
je
push
sub
sarb
stc
jge
xchg
mov
pusha
cmp
movq
addb
push
xchg
aas
push
fbstp
xchg
nop
or
dec
fisttpl
rolb
loopne
push
and
sub
pop
ljmp
add
add
mov
and
add
hlt
nop
movsl
popf
movsl
sub
jbe
cmp
jl
xor
in
call
rolb
xchg
lea
dec
in
sub
outsl
jb
cmp
idivl
rorb
jae
mov
xor
adc
sbb
dec
lods
inc
and
sub
and
mov
mov
mov
movsb
inc
add
push
and
in
andb
rcrl
iret
sub
adc
push
loopne
push
pop
mov
push
aad
andb
add
pop
pop
outsb
je
addl
mov
jb
xchg
mov
lods
cmpsl
ja
insl
or
xchg
int
push
aad
fdiv
int3
lret
leave
cli
mov
orb
sub
pusha
sarb
loopne
mov
xorb
or
pop
or
shrb
add
in
jae
out
out
rclb
movsl
popa
mov
stos
pop
xchg
mov
iret
lods
xor
idiv
sbb
imul
rolb
sub
test
dec
repnz
lds
mov
test
push
push
adc
mov
frstor
mov
enter
fisubrl
fisttpll
xor
sarb
sub
subb
testb
ss
je
inc
scas
mov
jg
xor
sub
sahf
lcall
loopne
and
and
aam
lcall
inc
enter
fdivr
push
sti
cmp
jns
fdivr
stc
fisttps
js
stos
cmp
inc
movsl
sub
les
inc
add
je
ljmp
jno
inc
stc
mov
pop
and
and
xor
loopne
mov
sti
mov
pusha
and
push
xchg
jg
add
push
mov
loopne
enter
and
add
sub
dec
cmpl
jae
dec
repz
jb
movsb
mov
ficompl
test
sub
mov
and
mov
andb
scas
addr16
adc
stos
pusha
add
fdiv
ss
enter
movsb
mov
xor
stc
sbb
paddusw
pop
cmp
lock
addb
cmp
ss
adc
mov
outsb
pop
add
jecxz
je
iret
popa
pop
sarl
addb
repnz
add
sbb
cmc
mov
test
ss
pop
cmp
and
mov
pop
pop
xchg
aad
inc
cmp
mov
arpl
shl
xchg
sti
lods
add
sahf
push
loopne
fisttpll
shlb
insl
ret
xchg
mov
adc
shlb
mov
sub
and
push
sbb
stos
shl
fs
lcall
andb
popf
jmp
in
mov
and
sbb
loopne
lahf
add
loopne
add
adc
ljmp
or
loopne
dec
mov
xor
and
pusha
mov
inc
fdivr
nop
sub
and
mov
and
pop
xchg
lods
andb
sahf
pop
cmp
loopne
out
rcrl
sbb
jg
repnz
sbb
add
movsb
loopne
xor
and
or
int
adc
pusha
and
jg
aas
jae
pop
cmpsb
mov
or
mov
mov
outsb
aas
xor
xchg
sarb
rol
sbb
push
push
jo
jmp
mov
fisttpl
xchg
pop
pop
adc
lret
and
cmp
lret
mov
loopne
jecxz
movsl
daa
out
sub
cmpb
add
adc
pop
out
xchg
push
or
push
inc
inc
add
shlb
data16
mov
xor
ror
cmc
inc
fs
push
rolb
mov
pop
dec
sbb
aas
jl
pusha
loopne
aaa
inc
push
and
mov
mov
or
pop
in
shlb
shlb
in
fnstenv
fldenv
data16
mov
test
pusha
test
sub
mov
add
sbb
inc
rclb
mov
ror
aas
xor
add
andb
mov
aaa
imul
rclb
mov
jp
roll
mov
rcl
push
or
repz
push
in
jne
mov
nop
inc
mov
je
adc
mov
pop
into
push
mov
repnz
mov
mov
outsl
js
adc
and
push
inc
rcll
cwtl
cld
int
jo
shlb
cmp
push
mov
mov
outsl
pop
pop
mov
js
sti
scas
rol
jne
in
cli
jge
shlb
inc
xchg
mov
cmpsl
stc
mov
loopne
and
or
pusha
inc
loopne
jecxz
add
add
andb
pushf
sti
mov
mov
aas
mov
inc
popf
inc
pop
loopne
in
inc
jne
inc
sbb
cmpb
push
pusha
and
cld
loop
mov
andb
push
out
sub
add
push
shlb
shl
rcr
mov
add
loopne
dec
fiaddl
push
imul
mov
das
shlb
cmc
xrelease
mov
jl
pusha
shrb
clc
lods
mov
cmpl
and
pop
ret
int
push
mov
or
lea
add
jecxz
sub
jecxz
jbe
add
scas
pop
cmp
int
push
loop
pusha
mov
lock
inc
jecxz
lret
pop
dec
jmp
and
cmp
add
ret
inc
jmp
xor
stos
nop
addb
into
pop
jne
cmp
test
cld
jg
xor
mull
pusha
sbb
mov
inc
pop
jmp
popf
lock
loopne
fldenv
or
add
push
jo
insb
inc
mov
js
add
and
add
inc
pop
testl
push
mov
pusha
shrb
add
loop
jge
inc
push
in
xchg
test
xor
and
cld
outsl
pop
pop
mov
add
mov
xchg
aad
push
aam
pop
fsubrs
adc
es
sarb
ds
rcll
pop
sbb
nop
xor
sbb
pusha
mov
lock
daa
das
in
mov
push
and
mov
jno
movsl
xor
fdivr
sarb
jne
dec
mov
popa
adc
mov
and
js
and
fdivrl
dec
out
jae
insb
ret
jge
xchg
pusha
sti
sub
rcl
push
push
loopne
sar
or
and
pop
inc
stos
mov
cltd
mov
pusha
out
and
xor
out
les
pusha
mov
clc
ss
in
mov
jmp
ljmp
xchg
sub
mov
sbb
sub
pop
dec
cmp
add
dec
pusha
scas
add
mov
lods
and
sbb
jne
pusha
jecxz
mov
dec
pop
outsl
adc
push
xchg
cmpb
movsb
mov
bound
mov
shlb
jl
shlb
and
jecxz
ds
and
push
push
mov
xor
adc
andb
fnstcw
jmp
daa
dec
pop
insl
jae
add
add
pop
rclb
and
mov
cli
lahf
add
pusha
cwtl
mov
lret
xor
dec
xlat
pop
ss
pusha
insb
sbb
pusha
cmp
pop
add
add
shrb
mov
push
dec
pushf
cli
or
mov
mov
aam
stos
adc
pop
mov
push
imul
call
mov
rol
mov
subb
inc
or
adc
fcomp
cli
je
add
cmpb
pop
outsb
mov
mov
add
mov
pop
xchg
xor
and
inc
mov
rol
xor
pushf
fists
shl
adc
lret
dec
adc
loopne
sbb
ret
push
jl
or
mov
dec
aad
cmp
xchg
divl
inc
push
pusha
pusha
jno
scas
add
add
rolb
lods
andb
lahf
sub
cmpb
xor
aas
mov
andb
adc
enter
test
cmpsl
xchg
ja
stc
stc
aam
test
add
sbb
xlat
cmp
loopne
jns
std
push
add
shr
sbb
push
scas
aam
xor
jl
lcall
add
mov
and
and
rolb
stos
add
cwtl
sbb
mov
testb
pusha
push
xor
jmp
fwait
subl
icebp
inc
enter
lret
or
pusha
pushf
or
ds
and
sub
pusha
jo
bnd
leave
leave
pop
ljmp
add
add
mov
and
or
inc
sub
icebp
jl
dec
jmp
push
jl
jg
aam
cmpsl
out
sbb
ljmp
inc
rolb
pusha
cmp
sub
imul
or
xor
dec
data16
fs
and
mov
cmp
rcr
nop
ficomps
scas
jmp
mov
mov
hlt
dec
mov
mov
and
jnp
loop
pop
outsb
rcll
sub
dec
push
fistpl
sub
mov
xchg
pusha
pop
cs
and
xor
addb
xchg
sbb
xor
inc
mov
and
loop
and
mov
pushf
icebp
cmp
inc
add
add
movsb
pusha
and
addb
cmp
mov
andb
aam
and
push
jl
cmp
loopne
mov
mov
out
mov
sub
popf
push
shlb
pop
xchg
loope
popf
jl
nop
mov
push
pusha
pusha
adcl
and
push
add
in
loopne
popl
mov
pop
aad
pop
jp
add
inc
cmp
lea
pusha
shl
fnsave
out
inc
sahf
sub
into
loope
fstpl
add
inc
lret
jl
mov
addb
sbb
cs
pusha
test
dec
push
xchg
inc
push
jecxz
cmp
gs
jge
and
cmpsb
and
push
cmp
fs
js
inc
std
dec
cmp
fidivrs
je
aad
add
loopne
cltd
push
and
jp
repz
inc
mov
mov
mov
rclb
jge
lret
stos
sbb
or
jl
test
rcrb
mov
addb
scas
loopne
sub
jle
jbe
out
inc
inc
outsl
bound
dec
add
sahf
mov
dec
fwait
inc
lahf
or
xor
iret
lock
lods
mov
jge
push
aas
insl
mov
gs
cwtl
fisubl
shlb
lds
out
xchg
mov
int
rolb
aaa
xchg
cmc
das
test
mov
punpckhwd
addb
pusha
daa
lods
pusha
mov
iret
rcr
push
pusha
pusha
std
scas
loopne
xor
popf
xlat
inc
rorl
mov
sub
jbe
clc
cmc
or
andb
iret
sarl
orb
mov
mov
mov
adc
add
xchg
xchg
push
ss
in
ret
sub
mov
push
xchg
clc
inc
push
loopne
mov
sub
pusha
cli
lods
out
arpl
mov
pusha
enter
cmp
loope
ret
lcall
pusha
and
pop
inc
sti
cmp
pop
cmp
rol
dec
and
inc
aam
xchg
push
dec
sbb
andb
cmp
fmul
inc
into
sbb
sbb
fbld
in
pop
xchg
dec
cli
cld
mov
dec
inc
iret
out
lea
xchg
sbb
shlb
rolb
loopne
jns
add
sub
push
pop
cwtl
xchg
add
shrb
fisubrs
add
lahf
fs
sub
pop
adc
orb
sub
add
or
push
sub
mov
mov
andb
pusha
inc
sti
xchg
in
jl
pop
pushf
mov
and
jmp
push
test
pusha
les
or
mov
in
pusha
loopne
mov
mov
adc
jae
adc
loopne
xchg
push
push
xchg
mov
mov
dec
pop
xchg
insb
fstl
call
imul
pusha
addb
push
loope
into
popa
enter
cmpsl
popf
cmpl
mov
mov
inc
mov
mov
cmpsb
and
mov
loopne
inc
xor
data16
push
sub
adc
cmp
inc
mov
pusha
pusha
addr16
rcrb
insl
pop
or
orb
fbstp
negl
inc
into
loop
roll
add
fnstsw
pusha
aaa
nop
fnop
mov
jp
les
and
fildll
push
xchg
jmp
add
aad
and
pusha
and
loopne
lret
lret
xchg
xor
lret
jb
cmpsl
addl
inc
and
mov
sahf
les
repnz
movd
mov
and
shl
mov
loopne
imul
inc
into
xchg
mov
mov
xchg
cld
mov
and
xchg
cmc
cmp
push
rolb
movsl
andl
nop
movups
mov
hlt
test
pusha
shr
pushw
andb
xor
mov
pusha
repnz
and
loopne
jmp
repnz
and
and
and
jae
mov
sub
out
insl
dec
and
pop
lock
mov
rolb
xchg
stc
add
dec
pop
das
dec
xor
cli
fs
mov
loopne
gs
andb
sti
out
xchg
out
pop
aam
pop
mov
inc
adc
and
flds
add
xor
cmpsl
push
dec
sbb
sub
pusha
inc
sbb
adc
pusha
add
inc
scas
inc
rcrb
loopne
testl
cld
testb
pop
in
lods
rolb
rolb
hlt
test
movsb
and
mov
pusha
add
rol
outsl
and
jbe
daa
mov
loopne
jno
sbb
mov
push
and
mov
rcrb
int3
add
add
loopew
andb
popf
cmpsl
nop
data16
and
add
test
pusha
sub
pusha
loopne
mov
push
push
adc
push
xchg
pusha
stos
cmpsb
loopne
enter
and
xor
loopne
lods
inc
mov
and
rorb
mov
pusha
dec
loope
out
mov
adc
inc
jns
int
int3
aaa
in
jbe
movsb
inc
loopne
pop
push
add
xor
add
ret
mov
inc
stos
xchg
cld
sbb
pusha
mov
cmp
push
add
out
in
int
xor
mov
cmp
and
mov
nop
leave
dec
pop
jl
js
out
fs
mov
leave
bound
add
add
fs
inc
into
leave
loopne
imul
lar
mov
inc
fidivrs
dec
je
mov
inc
cmp
addb
decb
test
mov
shrl
das
mov
mov
jp
sbb
inc
pop
jle
loope
sarb
lcall
cmp
lods
add
daa
aam
pop
je
xchg
rorb
call
mov
jecxz
pusha
pusha
imul
push
and
jmp
sbb
cmp
and
or
stos
data16
es
mov
mov
sbb
rolb
pusha
sbb
scas
add
in
xchg
inc
mov
or
ret
mov
pusha
add
stc
fld
inc
movsb
loopne
gs
cld
sub
cli
and
rcrb
lahf
out
in
hlt
mov
fwait
hlt
mov
or
clc
mov
mov
loopne
mov
inc
and
adc
jl
shlb
shrb
pop
sbb
mov
es
pusha
insl
int3
jge
sbb
pusha
sbbl
dec
popf
inc
fists
adc
pusha
loopne
loopne
loop
xor
push
jp
or
cmpsb
and
dec
nop
xor
or
mov
push
fcomip
aam
jb
rolb
push
jbe
nop
jae
es
shll
scas
mov
mov
pop
subl
inc
hlt
data16
stos
test
sbb
pusha
and
jae
add
shlb
out
mov
pusha
and
pop
andb
aam
sbb
outsb
cmp
ja
push
adc
call
sti
xor
sahf
movsl
xchg
data16
jl
push
pusha
call
cmc
mov
and
or
sub
push
jge
scas
jle
jl
pop
fwait
dec
dec
hlt
mov
cmp
or
inc
or
pusha
cld
test
jae
pop
inc
jb
leave
jmp
out
adc
jg
stos
push
jp
and
add
mov
loopne
jmp
xchg
pop
pop
dec
mov
pop
jb
sbb
fwait
adc
lods
insl
mov
mov
inc
mov
adc
sar
arpl
ret
push
xchg
mov
jp
syscall
imul
or
mov
add
ss
mov
movsb
pusha
inc
xchg
in
std
jb
je
and
sbb
nop
sub
in
inc
mov
xchg
dec
sub
adc
mov
lods
loopne
rcl
mov
and
fisttps
sbb
mov
shlb
and
mov
in
dec
xchg
mov
add
inc
sbb
movsl
and
fiadds
mov
and
jmp
nop
lods
add
inc
subb
iret
pusha
jmp
sub
and
inc
mov
rcrl
pop
cmp
mov
push
sti
sub
addb
flds
xor
lret
aam
insl
sbb
subb
pop
cwtl
cmpsl
stc
mov
and
mov
push
cli
xor
cmp
fstl
loopne
mov
pusha
mov
lea
or
loopne
cltd
ret
cmp
aam
pushf
mov
and
out
add
pusha
fld
movsb
addb
ret
icebp
add
mov
mov
pusha
mov
scas
push
cmp
fucom
int3
jae
shrl
mov
pusha
dec
in
rcll
jns
xor
xchg
lods
hlt
sbb
pop
in
sub
jge
dec
int
xchg
inc
pop
or
add
mov
aam
push
aaa
mov
loopne
push
add
roll
int
rcrb
mov
pop
push
dec
inc
mov
inc
and
and
or
jne
pusha
adcb
andb
mov
inc
out
stos
and
cli
add
add
jge
ret
mov
or
pusha
mov
lods
movsb
mov
inc
add
outsl
xchg
or
mov
pusha
sarb
rol
jecxz
loope
add
rclb
inc
aaa
das
sub
rcr
mov
adc
or
dec
cmc
iret
jg
loopne
mov
loopne
cmpsl
pop
pop
mov
in
mov
inc
loopne
in
dec
cmp
ds
fdivp
pop
adcl
pop
inc
sbb
sahf
sbb
js
not
imul
mov
add
and
sbbb
fs
dec
into
in
les
setno
ss
loopne
push
mov
jae
test
negl
bndstx
arpl
loopne
adc
insb
push
adc
push
jg
pusha
add
shlb
or
and
lahf
xor
push
sbb
loopne
xchg
xor
mov
cwtl
fbstp
popf
pop
inc
jbe
loopne
rcr
test
and
lahf
mov
orb
mov
and
rclb
inc
push
or
andb
jmp
jecxz
xchg
out
xchg
jns
mov
adc
sub
jae
push
popa
mov
pop
inc
inc
pop
or
loopne
inc
fidivrs
jp
xchg
mov
andb
xor
push
cmp
and
inc
in
addb
mov
and
add
push
in
das
movsb
loopne
cmp
add
loopne
orl
jl
int3
pop
add
mov
out
mov
mov
adc
and
mov
add
negb
fs
loopne
js
insl
sbb
inc
loopne
loopne
pop
hlt
cltd
mov
lcall
adc
adc
loope
mov
adc
sbb
popa
mov
rclb
add
loopne
repz
cmp
xchg
cmp
addb
shlb
je
shlb
or
sub
push
pop
push
add
jnp
push
dec
stc
jmp
insb
xorl
aam
int
repnz
aam
pop
mov
inc
xchg
sub
in
popa
mov
and
mov
pop
je
and
add
push
dec
pusha
mov
cli
addr16
add
pop
dec
fsub
repz
rolb
enter
cmp
shlb
in
int3
xchg
push
test
movsl
pop
pop
jecxz
hlt
out
sbb
sti
dec
cltd
add
lret
imul
jge
inc
loopne
je
and
hlt
cli
imul
loopne
xchg
and
sbbb
shlb
pop
mov
jno
fisttpl
sbb
enter
aas
lret
mov
rcrb
shlb
pusha
iret
inc
lret
cltd
push
cmpl
pop
cwtl
xchg
dec
pop
jo
dec
incl
shll
mov
pusha
das
aad
out
push
imul
mov
in
mov
mov
push
lret
inc
sub
sub
pusha
iret
push
add
sub
loopne
out
mov
lcall
xchg
mov
leave
cmc
xchg
adc
inc
push
movsl
inc
push
fwait
cmp
loopne
cmp
dec
popf
pop
mov
xlat
push
inc
xor
pop
ret
ss
jae
call
xchg
movsl
mov
mov
jge
dec
pop
mov
fsub
push
gs
sahf
idiv
jno
cmp
rolb
mov
inc
loopne
add
inc
mov
inc
and
xor
mov
inc
and
mov
stos
loop
dec
fs
ret
xor
int3
cmpsb
loopne
or
mov
rorb
mov
and
and
jb
cld
cmp
in
pop
cmp
and
pusha
adc
mov
insb
gs
hlt
jnp
aam
mov
shlb
push
and
inc
sbb
add
xchg
jmp
into
sbb
jl
mov
sahf
aas
imul
xchg
maxps
inc
inc
cld
repnz
xchg
sbb
push
inc
int
outsl
and
add
adcb
daa
push
shlb
push
int
loopne
pop
enter
adc
nop
and
out
sub
loopne
jecxz
and
inc
push
mov
jmp
cmpsb
andb
jo
mov
push
out
mov
loopne
pusha
and
push
stos
and
repz
add
pop
jl
or
fiaddl
jmp
add
jle
ds
in
and
add
dec
js
mov
add
inc
add
jecxz
sub
pusha
pushf
rclb
mov
sbb
sbb
mov
mov
mulb
rolb
insb
push
pop
mov
mov
andb
cmpsl
lahf
jnp
sbb
and
pop
aaa
or
stos
mov
add
dec
int
ret
ja
andb
dec
add
mov
mov
das
xchg
cmc
mov
nop
jecxz
and
punpckhwd
popf
mov
lahf
mov
inc
push
pusha
loopne
sarb
mov
push
push
lock
inc
jp
movsb
mov
addb
addb
sbbb
scas
fimuls
mov
pop
faddp
or
pusha
jge
les
fs
or
rorb
loopne
pusha
adcb
pusha
loopne
jmp
mov
pop
and
add
loopne
movsb
add
or
loopne
test
sbb
sahf
stos
andb
and
pusha
mov
jno
notb
cmp
lods
mov
rol
pusha
inc
dec
cli
stc
dec
push
cmpl
jne
js
ror
pushf
mov
xor
mov
xchg
dec
jmp
push
call
or
xchg
push
push
je
dec
pop
mov
addb
and
mov
xchg
sub
add
mov
clc
lods
pusha
and
pop
or
pusha
or
and
mov
cld
and
shlb
sub
roll
add
imul
mov
add
neg
xchg
push
add
push
or
xchg
pusha
and
xchg
adc
xchg
stos
add
dec
pop
adc
andb
outsb
test
nop
dec
repz
arpl
inc
mov
mov
inc
lock
push
inc
fucomi
sub
add
mov
inc
hlt
es
loopne
pop
cltd
les
nop
andb
fldt
mov
dec
mov
add
pushl
adc
cwtl
jne
xor
ja
or
jge
scas
addb
jno
or
inc
or
dec
add
popa
jo
in
loopne
mov
stc
fdivrl
lods
addb
addb
pop
xchg
loopne
sub
and
pusha
pop
mov
add
outsb
into
push
loopne
rol
imul
and
ffree
test
adcb
outsl
sti
mov
jb
test
push
cmp
and
xchg
addb
repnz
dec
pop
fcomip
mov
mov
inc
mov
pop
ljmp
test
loopne
pop
jo
mov
add
xchg
pop
inc
jne
adc
outsb
inc
push
inc
push
mov
fs
mov
xor
sbb
loopne
mov
pusha
loopne
inc
mov
add
mov
fsubr
push
xchg
and
pop
in
add
leave
mov
loopne
mov
add
adc
adc
mov
push
mov
loopne
nop
jns
cld
xchg
add
jnp
add
jecxz
and
push
push
mov
fadds
add
sbb
mov
addb
adc
xchg
aas
jns
dec
es
pusha
out
dec
mov
sub
loopne
xor
mov
loopne
add
pop
int3
shll
fwait
mov
loopne
clc
dec
dec
lahf
xchg
adc
dec
mov
std
js
shl
or
cmp
shll
pop
dec
mov
lcall
andb
xchg
xchg
stos
mov
push
inc
xor
xchg
add
mov
inc
dec
fisubl
or
repnz
fiadds
cmp
add
push
sbb
ja
sub
mov
add
or
sahf
lds
icebp
mov
popa
push
sub
adc
arpl
movsb
add
add
push
iret
add
or
xor
adc
xchg
sbb
movsb
pusha
mov
aad
xor
adc
enter
pop
aas
lret
mov
mov
addb
jno
mov
fstl
push
mov
push
push
orl
pop
or
adcl
sbb
lds
lret
out
xchg
mov
mov
inc
and
scas
fwait
sub
cs
inc
pop
sub
jns
inc
mov
insb
fisubs
sub
data16
inc
adc
push
andb
and
cmp
sub
adc
mov
test
adcb
cli
test
addb
and
mov
pushf
test
roll
pop
lods
pusha
add
or
inc
out
adc
shl
xor
push
push
xchg
insb
pusha
test
add
scas
pop
stos
aaa
das
pop
pop
add
int3
lret
lahf
ljmp
mov
add
push
arpl
pop
ret
sti
xchg
or
push
and
add
addl
sub
pusha
and
pop
xorl
mov
mov
add
push
sub
add
xorb
arpl
imul
push
inc
loopne
addb
pusha
inc
dec
lahf
sub
test
sub
mov
add
sub
cwtl
xor
push
xchg
jg
loopne
or
inc
ret
and
add
mov
xor
pop
ljmp
push
dec
sbb
enter
pop
xchg
in
jns
pop
loop
test
loopne
rcrl
movsl
mov
loopne
cmp
mov
cmp
fs
mov
cmpsb
mov
add
pusha
add
lea
arpl
mov
cld
ret
adc
jae
fsubs
loope
push
add
xchg
inc
out
pop
lods
and
push
push
pop
aam
inc
or
sub
rolb
test
inc
jge
mov
mov
imul
inc
xchg
jmp
add
jbe
xor
adc
mov
pop
jecxz
xchg
stc
push
jle
lods
pop
dec
push
shlb
push
lret
mov
and
shlb
std
pop
icebp
mov
loopne
mulb
cmc
loopne
loopne
in
ret
push
jns
bound
test
and
out
inc
mov
shl
loopne
push
lret
pop
cmpsb
inc
inc
mov
jmp
xchg
xchg
pop
loop
mov
mov
and
addb
loopne
and
mov
lcall
loopne
imul
jno
rolb
scas
mov
or
inc
ret
jmp
or
mov
imull
mov
shlb
pop
addb
mov
ljmp
out
mov
rolb
loopne
aas
movsb
inc
pusha
push
setb
mov
pop
jne
nop
sbb
sub
mov
mov
negl
pop
imul
and
ljmp
xchg
out
push
and
add
sbbb
xor
dec
out
xchg
inc
jnp
out
jae
lods
pusha
rorb
mov
add
mov
lds
std
cltd
dec
cmp
sub
add
pop
jo
movsl
adc
fdivp
pop
xlat
mov
mov
test
push
ss
movsb
add
ret
arpl
nop
push
sub
inc
lock
mov
je
mov
mov
ds
sbb
push
idivb
mov
add
iret
xor
jns
mov
ret
enter
sub
orl
pusha
ficomps
sub
pusha
add
lods
mov
mov
pop
xchg
imul
cmp
insb
and
mov
xchg
cmpsb
loopne
xor
aam
in
or
movsl
push
cmpsb
inc
sbbb
jle
mov
jl
imul
addb
in
and
jg
fs
popa
in
xchg
add
inc
aas
xchg
cmp
int3
inc
pop
leave
clc
leave
imul
jl
xchg
test
and
sarb
lcall
mov
loopne
dec
xor
jnp
adc
and
push
jne
xchg
leave
xchg
stos
mov
lock
pusha
dec
push
rcl
out
call
cltd
add
jl
shl
jb
lret
and
sbb
fimull
stc
xchg
jbe
cmp
bound
lock
add
add
lock
mov
mov
out
jl
popa
pop
and
lock
push
cmp
add
and
cwtl
andl
loop
sahf
lea
pop
xchg
pop
int3
fdivrl
js
adc
jno
and
and
int3
mov
shlb
mov
loopne
pop
sbb
shufps
ret
pop
add
inc
inc
xlat
sub
inc
adc
or
int3
outsb
mov
pusha
loopne
loopne
lahf
ja
decb
pusha
dec
xchg
loopne
inc
insb
nop
jge
mov
mov
xor
mov
lahf
hlt
aaa
mov
subl
adc
mov
mov
push
aad
xor
icebp
sbb
add
mov
jp
mov
mov
and
mov
orl
mov
and
icebp
push
add
daa
faddl
mov
outsl
adc
jo
addb
or
jbe
and
or
sub
jmp
mov
xor
push
mov
xor
clc
hlt
int3
sar
ss
addb
jnp
rorb
xchg
and
xchg
rcrb
sahf
jb
popa
xor
aas
insb
or
cmp
xchg
mov
jns
cmpsl
sub
inc
out
mov
loope
insl
push
enter
mulb
and
data16
loopne
andb
divb
xchg
loopne
sti
shlb
xorb
lock
enter
add
pusha
scas
add
sbb
pushf
lock
or
inc
rcrb
and
cmp
xchg
into
xchg
push
or
mov
mov
sarl
adc
xchg
and
arpl
orl
sub
mov
loope
mov
aad
cltd
dec
ja
lds
jne
push
dec
rolb
repz
jns
push
pop
shll
sub
rclb
mov
in
cwtl
push
fcoml
loopne
aaa
out
dec
stc
or
add
mov
cmpsl
int3
xor
adc
fcmovu
mov
jge
xchg
stc
stc
into
ds
jle
out
cwtl
xor
pusha
inc
push
loop
and
push
pop
sub
loopne
int
mov
cmp
mov
shrb
add
push
aas
cmp
neg
mov
mov
inc
mov
and
jmp
jg
mov
aad
inc
leave
dec
lahf
stos
or
aaa
dec
aas
jp
mov
sbbl
fs
dec
adc
fcmovbe
xchg
and
sbb
mov
add
xchg
mov
je
dec
pusha
setl
rorb
mov
and
mov
stos
pusha
and
dec
mov
inc
jl
enter
lock
jne
xor
into
leave
pop
mov
xor
call
movsb
mov
cmp
jb
pop
xchg
pusha
fldenv
adcb
mov
and
bswap
and
mov
xor
and
cltd
dec
sub
push
xchg
pusha
jbe
shlb
lods
andb
push
mov
pop
jo
pop
das
ret
mov
jnp
sti
pop
dec
jg
mov
mov
xor
bound
pop
cmpsb
inc
loopne
lret
movsb
and
mov
pusha
rorb
enter
mov
or
and
jp
pusha
addb
and
shlb
inc
dec
daa
add
mov
sahf
push
fnstsw
andb
sbb
into
imul
inc
inc
pop
sbb
andb
inc
loopne
dec
jecxz
and
add
lods
mov
and
shl
mov
pusha
rclb
add
mov
cmp
sti
mov
or
mov
xor
lret
sub
cwtl
icebp
xchg
jne
pop
lods
pusha
loopne
inc
jb
mov
inc
rorb
addb
repz
add
push
std
sbb
ds
inc
mov
push
adc
in
int3
jmp
outsl
mov
inc
mov
mov
inc
inc
mov
sahf
leave
or
and
dec
shr
pusha
loopne
sub
loopne
cli
cmpsl
jnp
into
mov
pop
nop
mov
fnstsw
stos
add
mov
loopne
mov
mov
add
mov
cmp
inc
test
outsb
ficoms
gs
push
movsb
loopne
faddp
psubb
or
xor
fnsave
mov
pop
mov
and
dec
lret
add
out
pushf
loope
or
adc
fstpl
add
xchg
int3
pop
insl
sbb
sub
add
fs
imul
sarb
lock
movsb
pusha
and
lds
mov
xchg
sub
add
add
insl
pusha
and
inc
mov
sub
pop
adc
shlb
jmp
loopne
jecxz
out
and
xchg
add
inc
sbb
add
inc
or
aad
sbb
ss
cmc
mov
out
div
pop
test
mov
loopne
sbb
loopne
insb
enter
shrb
lret
rclb
mov
adc
xchg
cmp
pusha
inc
xchg
in
xchg
jmp
add
out
or
sub
inc
arpl
xor
xchg
xchg
fcmovnbe
aad
fstpt
mov
add
jecxz
mov
jl
ja
mov
popf
cmp
loope
inc
rorl
cmp
loopne
fldl
add
out
test
add
aas
pop
dec
mov
mov
inc
movsl
lret
cltd
cmp
dec
ret
movsb
and
add
cwtl
jne
dec
inc
sub
addb
and
add
push
lret
jle
sub
lret
adc
aam
add
pushf
xchg
pop
inc
sti
fsubs
arpl
sbb
int3
inc
stos
sysexit
push
in
icebp
adc
mov
addr16
push
mov
out
shr
sub
inc
mov
mov
test
add
add
mov
stc
enter
mov
inc
mov
shr
hlt
jp
shlb
sar
mov
movsl
test
and
insl
jecxz
add
mov
shll
ja
les
shlb
addr16
lds
in
test
sbb
jge
xchg
hlt
sbb
imul
popf
xchg
lods
out
loop
pusha
xchg
fildll
shll
filds
adc
or
add
lods
and
mov
mov
inc
jnp
stos
stc
and
mov
cld
inc
add
fsubl
loopne
fnstcw
aas
mov
jnp
cmp
loopne
jo
mov
int
addl
cwtl
lods
lds
cmp
add
mov
xchg
sahf
ljmp
sbb
es
xor
data16
inc
loopne
andb
mov
cmpb
test
pusha
ret
inc
and
and
std
adc
rolb
or
fisttpl
add
mov
and
mov
cmp
add
mov
fwait
xor
xchg
mov
ds
mov
or
sbb
imul
push
push
and
inc
in
filds
and
outsl
nop
mov
ret
jns
adc
jb
addb
push
xlat
int3
insl
adc
popa
sbb
jp
push
push
fucomip
lret
cmp
sbb
xor
fxch
hlt
imul
add
mov
mov
subb
insl
and
sbb
inc
jae
cmc
popf
pop
je
sbb
into
or
add
ja
rorl
je
subl
push
aam
add
pop
outsb
rclb
jp
out
pushf
hlt
clc
adc
aad
and
loopne
lods
xor
je
int3
add
xchg
pop
rcl
pop
loope
aad
xchg
shl
outsl
xor
enter
and
add
xacquire
enter
cli
cmp
push
fiadds
sbb
fsts
subb
in
or
test
add
lea
mov
pusha
pop
mov
mov
dec
pop
mov
loopne
adc
xor
aaa
adc
inc
loopne
pop
mov
ds
lahf
dec
sub
shl
dec
push
test
out
enter
push
xor
ljmp
xchg
and
scas
inc
cmpb
mov
pop
ret
dec
pop
lock
mov
pop
push
rorb
loop
xor
outsl
xchg
lret
fsubrl
xchg
in
add
out
pushf
loope
daa
loopne
das
xchg
fiaddl
mov
add
inc
or
add
sbb
jmp
or
rcrb
add
inc
shrb
shlb
inc
lods
faddp
dec
jmp
jg
sub
mov
andb
inc
jae
push
andb
and
mov
out
add
mov
or
add
adc
iret
les
jmp
rcrb
mov
cmp
add
lods
dec
dec
jbe
rol
in
ss
and
ret
adc
mov
rolb
sub
subb
addb
mov
out
rolb
fstpl
mov
std
xchg
test
stos
xchg
insl
pop
ret
or
or
andb
shl
inc
xchg
add
sbb
scas
sub
js
test
mov
cmpsl
adc
sub
daa
aas
cwtl
push
popf
je
add
add
loopne
inc
dec
mov
mov
jecxz
test
xchg
mov
ret
loopne
xor
inc
add
mov
sarb
popf
hlt
pop
push
and
and
jle
cld
jl
cmp
imull
shl
fs
cs
mov
mov
aam
test
loopne
inc
lcall
into
cmpsl
sbb
or
daa
mov
inc
inc
rcrl
test
add
flds
es
movsb
loopne
cli
and
dec
mov
enter
jg
movsb
mov
hlt
leave
mov
jbe
xchg
mov
pusha
cltd
pop
xor
mov
cmc
push
mov
pop
mov
add
fistpll
loop
xchg
adc
adc
inc
cmp
add
jle
loope
sbb
imul
sahf
ds
outsb
xor
sub
js
loopne
add
inc
pop
cs
loopne
adc
outsl
imul
dec
sahf
dec
inc
int
mov
mov
mov
jge
cld
int
push
movsb
inc
add
rorl
dec
pushf
in
pop
sbb
addb
rcr
pusha
and
shll
push
lods
add
insl
pop
mov
test
add
cli
adc
dec
shlb
or
adc
out
add
sub
loopne
adc
loopne
or
stos
into
cmp
inc
bound
push
movsl
cmc
shll
inc
and
stos
outsb
mov
push
sbb
shl
sahf
sbb
lret
cmp
js
add
addr16
outsl
jg
leave
mov
js
xor
imul
jmp
pusha
pusha
adc
stos
sti
test
shlb
and
shlb
sub
stos
inc
sbbl
andl
jmp
jl
aaa
sarl
shlb
les
shl
dec
jne
jae
push
cwtl
xor
test
int
or
add
xchg
and
aaa
std
clc
lock
jo
or
and
mov
and
mov
adc
mov
jge
pop
cmp
add
stos
movsl
push
sbb
cmpsl
les
das
xor
pusha
mov
repz
xlat
xchg
nop
push
push
aaa
inc
mov
pop
stc
das
adc
xchg
xor
lret
in
mov
pusha
loopne
jbe
cmpsb
shlb
je
cmpsb
mov
mov
xchg
imul
andb
pushf
sbb
sar
rolb
mov
jb
testb
add
jg
inc
into
lret
loopne
rolb
out
and
push
mov
mov
je
mov
jno
ss
mov
inc
jo
mov
mov
in
shl
or
fs
xorb
test
and
pop
xchg
in
rcrb
fnsave
test
rcl
loopne
mov
add
jmp
mov
push
addb
mov
add
push
inc
xchg
or
push
pusha
loopne
xlat
jns
add
mov
loopne
out
or
mov
pop
xchg
in
call
pop
nop
cld
dec
sbb
cwtl
jb
mov
add
loopne
and
shlb
addb
mov
push
stc
test
dec
out
loope
push
mov
jb
push
add
insl
dec
dec
sbb
pop
rclb
les
mov
sbbl
adcl
push
add
imul
lods
shlb
cmc
push
scas
int3
gs
in
out
xchg
mov
mov
mov
andb
dec
or
sarb
and
jnp
inc
nop
add
mov
popa
stos
and
pop
mov
or
test
pusha
scas
loopne
mov
pop
lcall
aas
dec
or
imul
xor
mov
dec
test
addb
inc
pusha
push
or
inc
xchg
jmp
mov
sub
mov
pop
test
js
push
dec
mov
and
sbb
outsl
out
adc
imul
mov
adc
loopne
out
mov
loopne
inc
fxch
dec
scas
pop
pop
inc
cmpsb
add
or
xor
inc
xorl
xchg
sbb
loopne
pop
test
js
jb
in
nop
scas
jbe
dec
and
inc
pusha
push
lret
xchg
ret
mov
shrb
pusha
add
sti
sbb
add
inc
cmp
add
cltd
ss
pusha
and
mov
mov
push
inc
and
jle
mov
rcrl
push
adc
sub
hlt
mov
and
adc
fwait
in
lea
mov
mov
out
movsb
inc
andb
cmp
sub
fistps
add
mov
and
data16
repz
in
and
add
shrb
das
inc
and
add
jbe
ja
andb
leave
pop
outsl
mov
rolb
cmp
call
cli
jmp
rclb
add
loopne
pop
mov
pop
inc
pop
mov
jae
nopl
push
push
sbb
dec
lret
out
clc
adc
cld
jne
inc
cwtl
stos
loopne
push
iret
inc
pop
mov
add
jge
out
adc
add
sti
mov
jno
pusha
mov
inc
enter
stc
push
lods
roll
shl
outsl
fildll
sub
mov
push
imul
mov
add
or
and
fbstp
sti
jmp
pop
xchg
test
dec
mov
dec
or
lcall
into
pop
fs
dec
lea
and
inc
and
or
cmp
adc
mov
xor
jnp
insb
fimull
test
mov
testl
pop
pop
js
cmc
das
adc
inc
add
outsb
sbb
and
jl
inc
icebp
dec
xchg
cmpsb
and
cs
pusha
adc
out
push
mov
lods
jnp
mov
pop
mov
inc
and
pop
out
daa
inc
rcrb
and
adc
popa
cwtl
clc
and
and
xor
mov
or
pop
jne
test
addb
inc
or
and
adc
jge
mov
mov
cmp
addb
sahf
mov
stos
test
inc
jne
jne
lahf
and
sub
cmp
mov
int3
fildll
and
mov
add
daa
xor
test
fwait
lret
lret
mov
mov
dec
in
loopne
and
cltd
cmpsl
mov
mov
mov
pop
adc
aam
mov
and
jb
js
jnp
movsl
lods
inc
add
scas
aad
xor
jge
test
push
cwtl
lcall
loopne
shlb
movsl
mov
stos
andb
out
fmull
loopne
xor
inc
lret
push
repnz
decl
and
fstpl
mov
fs
and
sub
sub
add
out
loopne
imul
inc
or
mov
pop
roll
or
dec
xor
dec
mov
sub
adc
sub
pusha
mov
mov
cmpb
pusha
pop
imull
inc
mov
lret
loopne
fidivs
mov
sub
aam
pop
fcmovnu
int
shl
or
sar
fnstenv
cmpsl
and
and
mov
mov
push
nop
test
and
mov
and
das
fisttps
lods
mov
xchg
sbb
push
andb
ret
mov
mov
pop
in
scas
add
inc
out
or
pushf
sub
jp
sbb
ret
mov
arpl
push
sub
shlb
lahf
es
shrb
inc
xlat
enter
xor
lea
mov
sbb
push
xor
ret
sbb
dec
mov
iret
inc
and
addb
xor
call
or
lods
pop
std
pop
cmp
xor
mov
rclb
mov
cmp
jmp
into
mov
loopne
inc
push
filds
or
scas
and
arpl
xchg
adc
mov
pop
push
xor
xor
in
clc
lods
inc
shl
mov
inc
pop
pop
mov
ss
rolb
shlb
mov
mov
cmc
rorb
test
or
mov
xchg
jnp
std
sbb
andb
cmp
std
mov
idivb
push
rolb
and
sti
std
jns
jl
leave
push
sbbl
leave
mov
scas
shrl
mov
loopne
xchg
jbe
faddl
xor
mov
and
mov
subb
sub
dec
and
jge
xchg
test
aas
sub
sbb
sub
jp
push
pusha
rcll
das
adc
cli
inc
sbb
movsl
lret
lcall
mov
inc
jl
add
dec
pop
mov
mov
inc
sbb
shlb
cmpsl
shlb
rcrb
or
sarb
pusha
pusha
pop
sti
pop
mov
ljmp
mov
rorl
stc
fs
imul
lea
pusha
jbe
loopne
popf
fcoms
pop
lret
push
add
inc
dec
icebp
addr16
xchg
mov
cmp
or
mov
fists
inc
pop
mov
mov
pop
xor
cmp
testl
add
jnp
in
outsl
les
testb
mov
fs
xorb
test
divb
jg
cmpsb
and
push
ljmp
and
adc
cmp
jp
fcomip
mov
pusha
rclb
leave
scas
and
in
stos
lock
and
inc
sub
inc
sub
lahf
jg
mov
pusha
pop
and
xor
mov
inc
mov
test
mov
iret
mov
push
inc
jbe
dec
add
out
in
mov
andb
xor
xor
into
pop
shrb
and
pop
scas
add
adc
add
and
nop
cmc
xor
inc
in
lock
shll
jns
lret
mov
movsl
ficoms
add
std
sub
les
andb
rol
fisttpl
pop
mov
rolb
jl
cmp
cli
cmpl
dec
popf
outsb
adc
mov
pusha
insb
push
rclb
arpl
jp
push
dec
lock
mov
mov
inc
jo
jmp
xor
mov
sbb
in
stc
sub
add
ficomps
pop
sti
dec
pop
and
and
mov
test
andb
xor
mov
sti
data16
pusha
mov
vmovss
xchg
sub
inc
cmp
adc
add
mov
dec
lds
add
loopne
repnz
and
pusha
fs
and
add
bound
jge
shll
adc
lds
pop
add
mov
mov
push
loopne
jb
cmp
push
addb
imul
cwtl
mov
mov
imul
out
rcr
add
jbe
fcomip
dec
loope
pop
ror
xchg
enter
les
xchg
cmp
daa
shlb
adc
fisubrl
and
add
adc
iret
out
lahf
push
shl
jl
jmp
in
data16
inc
addb
lcall
loopne
scas
test
add
out
cli
push
mov
xlat
stos
out
test
and
and
inc
sub
push
pop
nop
sub
js
rcr
xor
cltd
shll
movsb
add
mov
push
repz
scas
mov
mov
mov
fmuls
cmpsl
pop
fwait
sub
shl
sub
mov
hlt
call
cmp
lret
gs
arpl
dec
repz
jne
xchg
scas
jns
cmp
rol
jae
and
shlb
stos
call
push
push
rolb
int
jmp
jns
dec
cmpl
aad
mov
add
xor
push
jnp
leave
xor
push
mov
pop
mov
xchg
mov
andb
insb
sbb
gs
loopne
push
test
and
jb
fadds
add
loop
jo
fimuls
inc
and
mov
lock
and
jb
adc
push
pop
xchg
loopne
shrb
and
mov
or
repnz
iret
aaa
jle
jl
pusha
loopne
mov
inc
ret
loop
shlb
rcrl
mov
inc
inc
sub
adc
xor
push
in
jle
inc
sbbb
test
and
pop
popf
mov
inc
cmc
xchg
add
in
sahf
and
andb
inc
sbb
stc
aam
test
jo
mov
jl
rorl
or
mov
add
in
push
lea
fwait
push
xor
pusha
inc
mov
mov
imulb
loopne
fs
dec
xor
shl
mov
inc
sahf
mov
sub
cmpsb
rolb
shrl
inc
pusha
fisttps
push
pop
sbb
lahf
or
and
pop
outsb
inc
adc
add
inc
dec
lods
test
pusha
pusha
sbb
shl
and
or
mov
fisubs
xchg
movsb
add
jne
cmpsb
pusha
inc
pop
dec
into
and
into
push
jp
fidivrl
lods
shrl
mov
xchg
dec
repz
in
ret
sbb
loopne
lods
xor
push
pusha
loopne
add
mov
out
inc
dec
dec
popa
test
inc
loopne
pop
adc
fbld
xor
jne
pop
je
and
pusha
clc
out
jp
push
iret
aas
pusha
fstl
mov
sti
int3
mov
les
xor
mov
icebp
cmp
add
add
jns
add
fwait
cmpsl
popf
pop
push
cli
add
and
xchg
out
push
dec
test
inc
fwait
xor
loopne
or
mov
adc
rolb
shlb
inc
cmp
into
ss
inc
clc
pop
sbb
loopne
inc
push
or
mov
and
cs
sub
mov
aaa
movsb
shl
pusha
mov
lret
jnp
pusha
mov
sub
mov
inc
loopne
add
mov
imul
shlb
andb
sbb
xchg
mov
pop
movsl
pop
or
adc
out
loop
inc
test
sarb
xchg
mov
cltd
mov
sub
rolb
int3
cltd
loopne
mov
ljmp
ja
arpl
pop
outsl
int3
jg
into
das
shlb
push
jae
add
and
mov
push
mov
jmp
mov
inc
mov
sub
iret
loop
adc
add
adc
shr
test
add
bound
pusha
and
shlb
insl
int
xorl
sub
mov
out
mov
and
cmp
jae
hlt
in
xbegin
lahf
mov
inc
adc
xchg
push
pop
push
pusha
pusha
pop
fstpl
or
test
loopne
bound
mov
fnstenv
xchg
inc
pop
out
pop
jmp
cwtl
inc
xor
inc
addb
in
pop
lahf
jmp
jb
lock
jnp
in
mov
inc
sub
sbbb
rorb
mov
mov
add
jae
jp
loope
fsts
push
sub
addb
mov
mov
mov
rclb
xlat
adc
cmp
orb
mov
inc
inc
enter
push
lods
andb
sbb
shlb
lods
pusha
mov
push
out
sti
inc
movsb
mov
sbb
add
adc
cmp
dec
fildll
mov
fstps
add
mov
addb
inc
pusha
pop
pop
int3
test
loopne
mov
mov
fwait
test
mov
inc
xor
adc
pop
movsl
xor
inc
fcompl
inc
hlt
sub
inc
push
sub
inc
sti
jmp
xchg
dec
in
addb
cli
sub
dec
popf
imulb
sahf
push
int3
jne
jl
outsb
mov
in
pop
sub
pop
addb
add
loopne
add
out
sarl
cmp
mov
xchg
andb
jp
rcrl
pop
lret
test
loopne
mov
fidivs
out
daa
stc
dec
push
in
outsl
sub
andb
mov
lods
inc
and
adc
loope
xor
push
xchg
mov
or
test
rcl
jno
shlb
sarb
cmp
mov
adc
clc
sub
fwait
je
sahf
xor
xor
and
jae
pop
fnsetpm(287
mov
mov
mov
imul
pop
out
sub
test
pop
andb
sub
xchg
leave
std
sub
pusha
fdivrl
andl
and
cmpsl
mov
and
add
dec
shlb
mov
loopne
lcall
movsl
mov
movsb
addb
and
or
out
in
rolb
fdivp
xchg
cmp
movsl
sahf
mov
daa
scas
pop
jg
cwtl
fstp
aad
insb
sbb
add
das
or
jecxz
std
inc
in
mov
mov
xchg
jb
sub
or
xchg
andb
mov
js
aad
outsl
ret
adc
jae
push
xor
add
arpl
and
mov
inc
dec
cltd
and
rcrb
inc
loopne
xchg
scas
scas
loopne
lcall
lea
inc
add
adc
push
cld
jle
roll
mov
xor
dec
dec
cmc
cwtl
ficoms
dec
enterw
addb
dec
out
jno
dec
cmp
loopne
andb
inc
push
jecxz
mov
andl
ror
insb
inc
sub
xchg
mov
sti
test
pusha
repz
aaa
arpl
inc
out
gs
inc
enter
scas
xchg
nop
pop
jge
or
inc
sub
sbb
cld
mov
rolb
xchg
xor
outsb
dec
clc
and
pusha
sti
shlb
adc
add
lods
add
inc
mov
imul
mov
mov
mov
je
cmp
loopne
mov
pop
das
pop
aaa
sbb
pop
or
pusha
push
add
adc
jns
lock
pop
push
js
rcr
es
subb
ret
cmc
jmp
and
sar
iret
movsl
push
mov
subb
lcall
and
mov
daa
jns
mov
rol
cmpsl
mov
cs
loopne
dec
pop
iret
scas
pusha
add
stos
hlt
mov
in
insb
std
call
imul
loope
icebp
sub
int3
rcl
addr16
dec
imul
xor
inc
mov
icebp
pusha
aaa
lret
sub
pop
icebp
cmp
mov
pusha
loopne
xlat
xor
fadds
into
aaa
mov
shl
inc
inc
xchg
jns
mov
subb
inc
popa
loope
icebp
stos
test
push
or
cmc
lods
and
pop
ljmp
add
pop
mov
jl
aad
repz
imul
insl
popf
push
mov
scas
shl
inc
and
and
aam
divb
mov
mov
add
roll
addb
in
dec
and
and
call
loopne
loopne
push
stos
imul
arpl
cmp
mov
rcr
int3
mov
ss
and
loopne
mov
sarb
mov
mov
add
xchg
sti
das
pop
sub
mov
repnz
xor
mov
fisttpl
or
lods
cmp
repnz
movsb
rolb
loopne
lret
int3
sbb
dec
les
test
and
xorb
mov
mov
add
push
mov
sub
add
insb
inc
push
sbb
mov
loopne
pop
pusha
cwtl
add
mov
iret
bound
leave
lods
mov
addb
jge
push
orl
mov
idivl
cld
pusha
pushl
aas
jg
mov
mov
adc
xchg
push
outsl
xor
mov
or
xchg
into
adc
lret
pusha
ret
shrb
lcall
sbb
sub
inc
inc
jns
mov
sahf
xor
mov
inc
dec
mov
fildll
and
shll
push
sub
sub
std
xchg
mov
pusha
fisttps
push
lret
mov
and
jae
xchg
jae
cwtl
cmc
jb
adc
in
lods
lret
loope
andb
mov
pop
pusha
inc
and
mov
addr16
je
into
fyl2x
mov
inc
xor
in
andb
inc
adc
int
and
adc
mov
xor
pop
jno
aad
mov
inc
and
inc
mov
mov
inc
xor
mov
mov
sahf
dec
lea
or
imul
cmp
jnp
dec
add
loopne
fidivrs
nop
push
iret
lods
add
movsl
mov
ret
out
mov
loopne
imul
sub
and
and
push
inc
mov
iret
jmp
rorb
data16
and
loopne
push
inc
mov
into
xchg
pusha
cmpsl
jg
sub
loope
xchg
cwtl
sbb
shlb
rol
jo
mov
rorb
and
mov
js
loopne
in
add
jle
dec
lahf
call
sbb
dec
and
addr16
jmp
add
movsl
iret
jge
mov
out
fldt
push
iret
fimull
fstpl
mov
loopne
jne
iret
aas
xchg
xchg
jmp
sub
loopne
imul
fidivl
icebp
cmc
or
lret
test
or
push
mov
dec
dec
push
repz
push
addb
sti
scas
add
push
push
shlb
out
inc
or
cld
mov
loopne
test
loopne
loop
jp
jp
mov
mov
xchg
mov
fildl
add
cld
stos
in
sahf
out
fsubrl
aad
fdivrs
arpl
xchg
dec
cmp
aaa
or
adcb
jl
pusha
pusha
dec
std
ljmp
add
and
add
jo
push
pop
sbb
cmp
sbb
push
push
shr
lods
add
jp
std
hlt
inc
lahf
pusha
mov
push
xchg
push
sbb
add
fs
and
inc
xor
les
fs
andb
cwtl
out
mov
ret
and
loopne
mov
jp
xor
push
cmpl
inc
shrb
and
mov
pop
sbb
sbb
mov
and
and
mov
insb
movsb
shl
fdivs
mov
push
stc
push
rcr
pop
pusha
sub
sub
add
pusha
andb
xor
jp
pop
push
sbb
repnz
jno
xchg
dec
dec
pop
sbb
inc
inc
gs
repz
sub
repz
add
and
sti
adc
lea
es
and
inc
out
rcrl
in
mov
cmpb
movl
jl
imul
sbb
jle
push
xchg
loopne
adc
pop
in
xchg
ret
stos
test
ds
dec
std
add
loopne
mov
inc
ret
ret
divb
fdivrs
mov
push
aas
inc
iret
arpl
popf
mov
add
inc
shll
movq
xlat
pushf
clc
outsl
push
arpl
dec
int3
stos
add
cmpl
shrb
insb
adc
push
sub
inc
xor
loopne
dec
dec
test
icebp
aas
xchg
mov
jo
rcll
inc
jb
xor
cli
fldenv
ja,pt
mov
dec
cmp
andb
add
les
inc
add
and
cmp
push
and
loopne
mov
aas
cmp
lret
push
out
mov
push
and
imul
mov
xchg
mov
mov
call
add
rorb
mov
pop
mov
andb
push
insb
sti
arpl
ljmp
add
mov
call
aad
jns
sbb
fildll
loopne
in
sbb
cltd
jge
mov
iret
adc
movsl
aam
pop
and
push
xchg
out
aas
enter
sub
add
pop
mov
loopne
shll
pusha
rol
jmp
fsubrs
rolb
jp
scas
and
shll
test
pusha
shr
es
mov
lret
push
mov
loopne
data16
mov
pusha
mov
pop
xchg
fnsetpm(287
and
push
in
jmp
mov
inc
pusha
mov
mov
sbb
daa
es
pusha
xchg
push
call
adc
push
adc
cmp
jge
dec
xor
push
inc
ficoms
lods
mov
cmpsl
fucomip
in
sbb
mov
adc
pusha
and
add
popf
test
and
repz
hlt
scas
mov
andb
jo
cwtl
lea
push
xor
in
rcll
jno
shr
loop
jg
mov
jl
mov
stc
inc
test
mov
mov
add
iret
or
ud1
xchg
add
movsl
xor
addb
pop
mov
rolb
jbe
mov
stc
jne
and
pusha
subb
add
in
scas
or
mov
cmp
rorb
loopne
dec
and
les
pusha
and
dec
push
and
mov
inc
sti
push
decb
jge
inc
sarb
adc
in
inc
pusha
cmp
leave
mov
inc
xor
fistpl
pusha
fstpt
mov
in
push
add
inc
scas
loopne
sub
mov
bound
je
add
or
aam
pop
jge
sarl
pop
inc
sbb
int
jb
mov
in
lret
insl
test
cmp
jae
push
add
dec
and
sbb
pushf
je
and
pop
cld
pop
aaa
fildll
or
test
scas
les
js
sbb
dec
sbb
cmp
push
mov
daa
xor
dec
xchg
pop
mov
sub
lret
mov
pushf
lods
and
loopne
sbb
xchg
adc
or
shrb
rorb
mov
adc
push
fisttpll
inc
pusha
aam
repz
cmpsl
dec
push
rolb
or
andb
jl
add
mov
lock
lea
fwait
push
arpl
sbb
xor
xchg
mov
test
xchg
bnd
repz
add
inc
adcb
fisttps
movsb
add
jl
xchg
mov
and
movsb
mov
rclb
mov
test
push
add
or
xchg
add
pop
dec
mov
negl
mov
jmp
xor
cmp
jmp
jbe
mov
cmp
sbb
popf
cltd
cmp
add
cli
ja
loopne
lds
push
and
jge
add
cmp
mov
pusha
rclb
mov
andb
adc
xchg
sar
aad
mov
pop
cmc
xor
lcall
push
mov
in
std
and
mov
sub
ja
mov
or
inc
cli
mov
filds
loopne
cltd
pcmpgtb
insb
jbe
das
and
fiadds
mov
sbb
pop
cmpsl
sub
sarb
lods
andb
xchg
dec
out
cmp
testl
inc
and
outsb
push
shl
outsb
xlat
imul
loopne
mov
mov
and
xor
out
testl
int3
cli
and
inc
aaa
lds
rolb
push
push
addr16
inc
mov
xchg
flds
sbb
aad
rolb
inc
mov
popa
or
pusha
loop
push
sub
orl
push
andb
fisubrs
loopne
dec
loop
test
mull
inc
inc
xchg
dec
in
dec
sarl
das
push
movsb
mov
mov
loope
decl
pop
inc
mov
pusha
pusha
fmulp
dec
jl
test
rclb
inc
sub
pusha
and
push
and
popf
inc
gs
xor
push
fimull
jg
data16
inc
cmc
push
adc
jl
add
inc
or
pusha
ror
rol
add
or
mov
xchg
repnz
or
lahf
inc
aam
adc
pop
ljmp
push
andb
pusha
shlb
push
call
mov
or
mov
leave
and
add
cwtl
jmp
jp
xor
jecxz
push
outsl
mov
cld
cwtl
or
pop
addb
cmp
sbb
arpl
dec
bound
cld
cmp
cmc
jbe
jb
or
add
addr16
in
sbb
fs
in
jmp
fdivl
int3
lret
les
in
pop
inc
pop
nop
repz
sbb
loopne
movsb
inc
sbbb
orb
andb
add
mov
inc
push
test
and
cld
push
mov
jge
mov
pop
popf
in
fmulp
std
add
adc
dec
mov
fdivrl
js
lret
adc
and
aaa
idivl
divb
xchg
subb
mov
push
je
lcall
xchg
sbb
std
mov
mov
outsl
and
and
pusha
pusha
fisttps
pop
js
sbb
lods
faddl
xorb
or
rolb
and
fwait
cmc
jno
add
sub
and
es
hlt
cmp
jg
adc
jecxz
sub
add
mov
es
inc
mov
outsb
and
rorb
ja
std
data16
fsubrl
cmp
jecxz
pop
out
pushf
decb
pushf
pop
xchg
push
shlb
xchg
sbb
mov
loopne
loopne
add
mov
mov
mov
add
jmp
push
jg
cwtl
ljmp
scas
add
ljmp
shl
adc
xchg
sub
out
add
imul
pop
push
add
or
xor
fwait
xor
push
ljmp
mov
pusha
shlb
cmpsl
xchg
and
and
repnz
jg
cmpsl
lcall
mov
mov
mov
inc
mov
add
adc
ja
inc
pminub
rolb
add
repz
pop
insw
pop
std
inc
lret
loopne
and
loopne
xchg
lea
inc
test
mov
push
sbb
lret
lret
adc
addb
jp
xchg
loopne
and
xor
jns
sub
inc
pushf
add
sarb
cmp
sbb
in
dec
jl
push
or
loopne
mov
inc
xlat
xor
test
test
mov
stos
leave
add
cwtl
jl
je
xchg
cmpsb
inc
and
mov
inc
shlb
out
es
xchg
scas
inc
or
shlb
xchg
add
or
mov
inc
loopne
jae
test
inc
cmp
mov
shrl
add
jecxz
movsl
sbb
pop
add
inc
out
push
fcoms
mov
inc
adc
or
mov
adc
arpl
jg
cmp
ja
pusha
fsubl
loopne
mov
mov
andb
push
cwtl
jmp
insb
and
imul
push
loopne
rcrl
repnz
test
sub
and
sub
pusha
stos
sbb
out
mov
shrb
xor
or
mov
addb
pop
dec
add
and
push
mov
stc
js
hlt
insb
sbb
lcall
sahf
push
adc
mov
pusha
test
xchg
je
imull
and
sbbb
add
mov
mov
ds
sbb
sbb
push
xlat
xchg
ret
setae
adc
inc
or
add
dec
out
mov
xchg
push
cmpsb
add
pop
pop
and
inc
add
adc
inc
rorb
insl
scas
mov
adc
int
jbe
pop
lock
mov
xorb
icebp
mov
or
test
inc
mov
mov
popf
jb
xor
and
fwait
rorl
pop
mov
mov
andb
xor
mov
mov
lea
jp
dec
lds
push
addb
insb
lcall
mov
imul
pushf
ret
push
mov
or
sbb
decb
and
xor
bound
pusha
pop
cmc
pop
inc
sbb
pushf
cmpsb
mov
jne
adc
inc
das
mov
mov
addb
dec
jp
arpl
cmp
and
loop
pop
push
pusha
inc
jp
sbb
sub
mov
jp
pusha
loopne
adc
mov
mov
xchg
inc
xchg
sbb
and
or
add
xchg
ss
dec
adc
pusha
shlb
or
adcb
dec
mov
add
dec
mov
sahf
call
cmp
add
shr
xor
pop
cmp
push
inc
andb
leave
js
dec
jp
mov
adc
test
pusha
jl
add
rolb
loopne
inc
outsl
lock
rolb
and
negb
lcall
mov
or
xchg
cmp
add
and
xor
shl
and
add
pop
ret
jmp
adc
adc
jg
andb
mov
adc
out
jecxz
add
pop
test
inc
hlt
cltd
jmp
sbb
leave
popf
add
inc
and
mov
and
jae
mov
in
sbb
shlb
add
lret
ret
xchg
jg
jb
fnstcw
dec
pop
cld
mov
out
mov
shl
call
movsb
add
add
cld
fimuls
out
xor
jp
or
cmpb
leave
repnz
and
or
orl
inc
loopne
pop
cli
insb
rolb
jl
bound
and
jl
outsl
cli
int3
inc
icebp
mov
outsb
push
std
lock
mov
inc
mov
ret
sbb
bound
or
add
xchg
mov
xor
loopne
out
out
or
adc
call
add
loopne
sub
mov
rcrl
sub
flds
addb
imul
push
sbb
cmp
jnp
out
shl
cld
ds
mov
rolb
cli
push
clc
not
add
mov
sub
sbbb
add
pusha
mov
jle
mov
sub
es
mov
inc
and
pop
cld
push
shl
ret
icebp
xor
aad
bound
xor
xchg
and
mov
sub
and
mov
and
mov
or
add
jo
or
add
mov
xchg
in
sub
mov
inc
add
and
sub
in
and
sbb
adcl
mov
lret
inc
push
movsl
jae
in
jecxz
xor
push
cmp
cs
and
daa
aam
ja
and
sub
jb
mov
add
jno
add
mov
mov
adc
shlb
out
xchg
and
popf
xor
push
addb
mov
pushf
test
add
test
lret
jo
aam
dec
push
dec
xor
mov
cmp
add
ljmp
shlb
xor
mov
fisubs
sbb
lods
sti
push
test
pop
dec
xchg
add
sbb
rclb
push
inc
push
loopne
sti
and
sub
mov
mov
lods
pop
cmp
adc
add
dec
addr16
push
out
adc
xchg
or
imul
mov
mov
rolb
dec
xchg
ss
or
mov
xchg
mov
inc
or
mov
fs
loopne
or
insl
jp
loopne
pop
inc
ds
cld
jae
movsb
mov
add
out
jmp
mov
rorb
adc
stc
mov
fwait
js
fcmovb
xchg
xchg
push
stos
add
rclb
addb
mov
add
bound
addb
aam
sbb
inc
mov
jae
repnz
xchg
push
add
inc
fcomip
push
andl
clc
mov
xor
or
push
pop
jmp
shll
jecxz
popa
mov
dec
jmp
push
dec
mov
add
add
pop
cmpsb
pusha
loopne
jle
ljmp
shl
inc
ljmp
push
pop
push
xchg
cmp
pusha
xchg
xor
cld
jne
test
pusha
push
xchg
sub
jle
cmp
add
add
dec
sub
pusha
mov
lock
jbe
ret
sti
lock
jge
aam
test
das
cmc
ret
in
and
inc
jbe
filds
shll
mov
out
add
orl
shlb
and
and
or
into
lret
rcl
mov
dec
ret
xlat
insl
mov
scas
add
xor
or
popf
sub
mov
adc
sahf
inc
jbe
jnp
add
mov
xchg
out
or
and
and
xor
cli
mov
mov
pusha
stos
inc
mov
aam
pop
fstpl
stc
cmp
and
mov
nop
lds
add
pop
js
mov
xor
shrb
loope
mov
jnp
pushf
movsl
push
push
jbe
or
cmp
inc
sub
loopne
and
inc
and
cld
jno
inc
lods
call
shlb
test
mov
xchg
xorb
je
inc
shrb
aas
sbb
sti
add
loopne
push
sbb
pusha
scas
and
push
xor
out
inc
push
loopne
imul
cmp
push
add
mov
add
mov
inc
in
cmpsb
rolb
out
call
loop
mov
sarb
imul
adc
dec
incb
inc
out
test
out
mov
pop
mov
pop
and
mov
pop
in
xchg
push
sarl
loopne
jmp
loopne
movsb
inc
add
lods
xchg
cli
enter
mov
lahf
gs
aad
push
inc
rolb
fdiv
xor
mov
outsb
sbb
std
push
clc
cs
add
cmpsl
cmc
push
shrb
inc
iret
or
pop
or
inc
xor
sbb
ds
lret
pop
shlb
push
cmp
roll
loope
divb
cmp
loope
pop
lret
imul
inc
pop
or
adc
add
inc
cmpsl
xchg
mov
arpl
xchg
cli
xor
popa
dec
and
mov
add
lds
andl
cmp
mov
mov
in
add
jae
and
wbinvd
repnz
mov
test
pusha
aad
stos
inc
mov
cmp
stos
loopne
push
jbe
nop
mov
and
jns
jo
lret
push
jbe
add
add
mov
mov
cmpl
add
and
add
scas
mov
jg
je
test
andb
jl
rcrb
push
and
pop
jp
push
push
xchg
add
mov
cmp
aam
jp
ror
jnp
lods
mov
call
ret
and
ja
xor
pop
dec
pop
lds
mov
rcl
or
addb
and
imul
cmp
loopne
das
inc
jmp
dec
or
mov
jmp
rol
cmp
pop
or
and
imul
cmp
xchg
addb
add
rolb
or
rcrb
sbb
add
mov
loopne
pop
inc
mov
lods
and
xchg
mov
adc
xlat
mov
mov
jae
rclb
xchg
loopne
push
leave
rol
sbb
pusha
rcrb
lea
xchg
je
dec
push
ljmp
dec
push
fdivrl
and
xchg
xchg
add
ror
push
inc
jb
xor
shll
sub
inc
dec
call
inc
dec
lret
shlb
jge
cmp
rol
cwtl
aam
jae,pt
les
push
shlb
shlb
mov
xchg
jae
dec
adcl
andb
push
inc
dec
xor
sbb
add
outsb
dec
icebp
and
push
mov
std
xchg
ret
arpl
repnz
sub
inc
jae
sti
in
mov
movsl
repnz
sub
xchg
jl
pop
or
cli
lea
je
sbb
roll
xor
mov
loopne
add
mov
cltd
sbb
xchg
outsb
lret
and
das
insb
jl
jno
repz
mul
or
inc
xchg
ret
stos
jne
sahf
insl
imul
pop
adcl
mov
inc
mov
pop
inc
popa
inc
dec
push
arpl
in
add
add
stos
xchg
add
mov
dec
mov
in
sbb
daa
add
insl
mov
mov
adc
jne
add
loopne
ja,pt
cmp
pusha
jmp
ss
inc
sub
ffreep
loop
repnz
scas
inc
ficoms
stc
pushf
in
ret
mov
cmp
loopne
pusha
jg
and
sahf
subl
inc
loopne
push
jecxz
sbb
xor
inc
push
loopne
stc
fucomi
add
out
add
pop
out
je
aad
mov
sbb
or
mov
mov
and
fbld
repnz
movsb
inc
loopne
inc
sbb
loopne
inc
movsb
mov
pusha
add
mov
inc
and
out
cwtl
push
inc
inc
sub
add
stos
imul
int
sub
mov
out
inc
outsb
loopne
shrb
mov
or
stc
pop
out
pop
fs
push
pop
jp
mov
jecxz
xchg
outsb
aas
lods
andb
addb
jmp
cmp
lods
int
mov
add
enter
jb
inc
fs
pmullw
adc
inc
pop
mov
push
jle
add
sbb
ljmp
lahf
ret
cmc
rcl
xor
mov
cld
inc
cmc
insl
js
adc
scas
add
mov
imul
inc
cs
inc
mov
adc
divl
andb
cld
outsb
movsl
mov
repz
cmp
push
push
fcoml
mov
imul
sbb
hlt
sbb
mov
jmp
stos
cmp
inc
push
sub
scas
fs
addl
andb
pusha
inc
jns
fadd
imul
sbb
xor
fimuls
call
loopne
andb
loopne
test
adc
push
mov
xchg
cmpsb
add
sti
dec
and
xor
pop
out
loope
loopne
pop
push
add
push
iret
jno
jno
lods
lcall
pop
xchg
loopne
shll
inc
push
inc
mov
lret
scas
shlb
int3
sub
mov
sub
fs
outsb
pop
andb
sub
shlb
clc
lods
adc
outsb
jns
xor
inc
out
jbe
in
cmpsb
and
and
fsubrs
andb
jno
arpl
add
fadd
into
dec
dec
add
data16
andb
addb
push
loopne
and
adc
push
mov
push
addr16
test
mov
pusha
add
aaa
fadds
mov
dec
bnd
sbb
fiadds
lods
cs
xor
inc
or
sbb
fmul
sahf
enter
sbb
cld
push
sbb
dec
rcr
jmp
or
inc
mov
xchg
sahf
fwait
in
cbtw
mov
andb
scas
mov
stos
and
mov
rclb
lock
pop
bnd
xchg
jne
adc
arpl
or
rclb
int
inc
adc
mov
adc
pop
imulb
pusha
imul
popf
xchg
jb
add
in
test
mov
add
mov
jbe
lcall
mov
pop
cwtl
adc
xchg
add
sbb
mov
roll
loopne
xchg
test
loopne
popf
and
inc
cmp
int
pusha
pusha
or
sub
rorb
loopne
jb
sub
mov
rcrb
aam
hlt
popl
add
xchg
out
push
rolb
dec
adc
mov
add
lods
add
aas
pop
mov
sub
xchg
into
dec
into
sahf
ja
dec
scas
addb
pop
mov
cmpb
jp
and
inc
pop
xchg
pusha
or
adc
sbb
add
gs
lods
lods
and
jecxz
sbb
pop
lcall
call
sub
xorb
sub
sub
andb
js
les
add
xchg
into
aas
push
lcall
dec
push
and
mov
ds
dec
xchg
cmp
pop
repnz
into
dec
push
pop
in
fildl
add
sub
add
stc
fnsave
lcall
mov
sub
inc
cvtdq2ps
ljmp
mov
les
hlt
xchg
xchg
sub
pop
push
test
pusha
xorb
bound
sub
add
sbb
imul
lret
dec
or
dec
bound
mov
and
shlb
sub
inc
cld
push
push
xchg
loopne
adc
mov
mov
lods
and
cmp
lret
pushf
adc
mov
inc
mov
sar
cmpsl
or
or
and
lret
aaa
and
ja
aas
add
pusha
addr16
push
ret
mov
cmp
jecxz
loopne
out
test
sarb
xor
sar
and
add
cld
mov
inc
and
fs
cmp
add
or
sarb
pop
rcll
jnp
pusha
loopne
sub
lods
bound
push
dec
pop
mov
jae
add
mov
jae
and
or
inc
outsb
lds
inc
and
add
leave
sti
push
sbb
idivb
rol
sub
in
test
sub
addb
mov
in
pop
or
or
rcl
mov
dec
in
push
cli
aad
xchg
and
jb
stos
add
adc
loopne
adc
pop
push
loopne
mov
dec
cld
push
adc
jae
hlt
mov
mov
test
int3
push
loopne
add
out
jle
data16
add
dec
adc
xchg
into
xlat
xlat
in
add
fsubrp
pop
adc
or
cli
xchg
enter
jle
inc
and
push
leave
push
shlb
jecxz
shlb
daa
jo
mov
add
xchg
push
cmpsl
sbb
add
inc
xor
shlb
pusha
add
loop
adc
jns
in
sti
insb
les
fxch
shl
lea
inc
inc
cmpsb
shlb
inc
mov
cwtl
sbbl
stc
cmp
push
push
mov
addb
bsr
inc
mov
lahf
int3
cltd
mov
xchg
mov
lret
ss
and
adc
inc
adc
lea
add
loopne
sarl
mov
ja
ds
loopne
addb
jecxz
mov
sarb
subl
dec
xor
mov
mov
inc
xlat
sub
movsl
repz
pusha
cmp
pusha
pop
adc
loopne
outsb
addr16
outsb
mov
mov
jbe
and
mov
shl
cltd
mov
addb
into
arpl
ja
jb
loopne
sbbl
dec
inc
cmpsl
orl
jecxz
ret
xor
add
data16
add
dec
sbb
mov
and
lock
shlb
pusha
mov
xor
sub
dec
movsl
lahf
cld
cld
xor
in
movsl
dec
mov
rorl
cmp
inc
and
mov
inc
cmp
dec
aaa
ret
in
leave
mov
call
and
inc
ja
scas
and
mov
add
insl
shrl
addb
add
mov
cltd
leave
push
pusha
add
mov
dec
mov
adc
cli
movsb
loopne
pop
std
jmpw
push
shlb
sbb
loopne
outsl
fmull
rolb
out
sbb
fcmove
cmp
lods
mov
mov
mov
cmpsl
cmp
push
sbb
insb
xchg
add
and
lods
and
stos
push
sub
int
push
icebp
pushf
mov
cmc
xchg
test
cltd
push
lret
xor
and
or
mov
dec
jne
push
mov
std
xchg
out
mov
inc
cli
mov
xchg
popf
dec
repnz
ret
cmp
xor
fcoms
or
pusha
lods
dec
in
insb
xchg
in
mov
add
pop
add
cmpb
pop
xchg
imul
mov
shrb
sarb
outsb
test
js
into
pop
xor
lea
jge
addr16
jbe
adc
push
outsl
outsl
insb
rclb
jno
fs
xor
mov
bound
pop
xchg
insl
push
loopne
cmp
in
rcrl
or
inc
lds
call
daa
pop
lahf
fimuls
mov
scas
xchg
addb
xlat
shrl
loopne
js
xor
daa
xorl
jle
fst
pop
fstl
rolb
xlat
ret
cmp
mov
into
test
push
shrb
andb
test
ja
and
rolb
cmp
iret
fsubs
jge
push
mov
inc
push
rolb
and
int
imul
add
jbe
and
scas
pusha
loopne
orl
rol
pop
cmp
mov
mov
int3
pusha
iret
inc
jbe
loopne
scas
push
gs
test
inc
sbb
add
push
mov
cmp
addb
inc
sbb
jecxz
addb
mov
sbb
inc
pop
leave
cmp
lock
fiaddl
and
rcrl
shl
dec
lods
and
and
cmp
dec
xor
mov
negb
aad
and
sub
inc
mov
jno
stos
cmc
mov
inc
mov
aad
pushf
pop
paddb
aaa
dec
jecxz
pop
xchg
clc
add
jp
push
push
xor
gs
push
mov
rorb
and
mov
lds
dec
pop
add
leave
add
rclb
adc
movsl
mov
mov
mov
mov
mov
insl
jno
ss
sbb
rcl
loopne
mov
mov
mov
loopne
mov
rolb
push
dec
repnz
mov
mov
repnz
or
subb
loopne
sbb
aad
addr16
mov
fs
sub
xor
shlb
imul
ss
orl
stc
pop
fstpt
mov
ret
inc
shrb
adc
mov
andb
add
rolb
daa
xchg
adc
inc
and
or
ljmp
sub
inc
mov
mov
out
pop
mov
ret
movsl
add
push
add
