add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
nop
nop
nop
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
hlt
hlt
hlt
hlt
hlt
out
out
out
out
out
out
out
xchg
mov
mov
nop
nop
nop
nop
nop
nop
nop
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
test
test
test
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
mov
mov
fcmovu
int
int
sub
sub
sub
jbe
jbe
jbe
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
mov
push
push
push
push
push
push
push
push
push
push
push
push
mov
mov
mov
mov
mov
mov
pop
pop
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
fwait
fwait
scas
scas
scas
scas
scas
nop
nop
nop
pfcmpge
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
cmpsb
cmpsb
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
push
push
inc
inc
inc
int
int
int
int
int
int
int
int
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
adc
adc
adc
adc
adc
adc
adc
div
div
div
div
div
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
jg
xor
xor
xor
xor
xor
xor
xor
nop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
popf
popf
popf
popf
popf
popf
popf
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
or
or
or
or
or
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
shll
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
bound
bound
bound
bound
bound
bound
bound
bound
bound
bound
bound
bound
bound
loop
loop
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
mov
mov
mov
mov
mov
push
push
push
push
sbb
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
jo
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
call
or
or
or
adc
nop
arpl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
nop
nop
nop
nop
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
lods
lods
lods
lods
lods
lods
lods
lods
lods
bound
bound
sbb
sbb
sbb
sbb
sbb
sbb
sbb
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
jp
jp
jp
jp
jp
cmp
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
decl
mov
mov
mov
lods
lods
cwtl
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
mov
mov
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
jl
nop
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
in
in
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
gs
nop
nop
nop
nop
nop
nop
nop
nop
sub
sub
sub
sub
sub
sub
outsb
outsb
outsb
outsb
cmovl
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
xchg
xchg
xchg
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
and
and
and
test
test
test
test
test
sarl
mov
loop
loop
loop
nop
nop
nop
nop
nop
nop
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
in
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
or
or
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
add
add
add
add
add
add
add
add
jmp
jmp
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
sbb
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
test
test
test
test
test
test
rol
rol
rol
rol
rol
rol
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmp
cmp
cmp
cmp
cmp
lret
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
jl
jl
jl
jl
jl
jl
jl
ja
ja
ja
ja
ja
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
adc
adc
adc
adc
adc
adc
adc
jb
jb
jb
jb
jb
jb
jb
nop
nop
nop
nop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
fcomps
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
mov
mov
mov
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jae
nop
nop
nop
pop
std
std
std
std
std
std
mov
lcall
and
sbb
sbb
sbb
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
bound
bound
bound
bound
bound
bound
bound
bound
bound
bound
bound
bound
bound
bound
bound
bound
bound
bound
bound
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
ss
nop
nop
sub
sub
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
lea
lea
xchg
xchg
xchg
xchg
xchg
xchg
xchg
sub
mov
mov
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
rol
rol
rol
rol
rol
rol
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fidivl
xor
xor
xor
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
popf
popf
popf
popf
popf
lcall
lcall
lcall
lcall
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
loop
loop
loop
daa
daa
daa
daa
daa
daa
mov
nop
nop
nop
nop
nop
nop
mov
adc
adc
adc
adc
adc
bound
bound
bound
bound
bound
bound
bound
bound
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
rcl
rcl
rcl
rcl
rcl
rcl
rcl
nop
nop
nop
nop
nop
nop
nop
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
arpl
arpl
sbb
sbb
sbb
sbb
sbb
sbb
nop
nop
nop
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
inc
inc
inc
inc
pushf
pushf
pushf
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
nop
nop
nop
nop
nop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
in
in
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
push
push
push
push
push
push
push
push
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
jne
jne
jne
bound
bound
bound
bound
bound
bound
bound
bound
bound
pop
pop
pop
pop
js
js
js
js
js
js
js
js
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
lods
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
out
out
out
dec
dec
dec
dec
dec
dec
dec
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
out
pop
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
and
and
and
and
and
and
and
and
and
and
and
and
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
nop
nop
nop
nop
nop
nop
nop
nop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
xor
xor
xor
xor
nop
nop
nop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
nop
nop
nop
nop
nop
nop
nop
nop
nop
pfcmpge
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
popf
popf
popf
popf
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
fcmovu
fcmovu
fcmovu
fcmovu
enter
enter
enter
enter
enter
enter
enter
or
or
or
or
or
or
or
or
or
or
or
or
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
scas
scas
scas
scas
scas
leave
or
nop
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
pop
pop
pop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
addl
addl
addl
orl
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
rol
rol
rol
rol
rol
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
cli
cli
cli
cli
cli
cli
cli
cli
cli
nop
nop
nop
nop
nop
nop
nop
lds
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
and
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
add
add
add
add
add
add
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
cmp
cmp
cmp
cmp
cmp
cmp
jns
jns
jns
jns
jns
jns
jns
dec
dec
dec
dec
nop
nop
nop
nop
nop
and
and
and
and
and
and
and
and
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xchg
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
je
je
je
je
je
je
je
je
je
in
in
nop
nop
nop
mov
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fsubs
and
and
and
and
and
and
and
and
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
fs
fs
fs
fs
fs
jae
jae
add
add
add
nop
nop
nop
test
test
test
test
test
test
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
pop
pop
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
add
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
scas
scas
scas
scas
mov
cmp
cmp
cmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
cs
lret
lret
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
imul
imul
imul
imul
imul
imul
imul
imul
imul
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
repnz
nop
nop
nop
nop
nop
nop
nop
or
or
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
mov
mov
mov
mov
pop
ret
add
add
add
add
add
add
cmp
cmp
cmp
cmp
cmp
cmp
cmp
nop
nop
nop
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcrl
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
nop
sbb
sbb
sbb
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
call
call
call
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
lods
lods
lods
nop
nop
nop
push
push
push
push
push
push
push
push
push
push
push
push
push
push
add
add
add
fldcw
outsl
outsl
outsl
outsl
outsl
outsl
nop
nop
nop
xor
xor
xor
xor
xor
aaa
aaa
aaa
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xor
xor
xor
xor
xor
xor
xor
cs
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
or
or
psubusb
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fdivr
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
or
or
or
or
or
or
or
or
or
fs
nop
nop
nop
nop
lcall
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
repnz
repnz
repnz
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
rcl
rcl
rcl
rclb
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
push
push
push
push
push
push
push
push
push
push
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
shlb
arpl
arpl
arpl
arpl
arpl
arpl
nop
push
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
push
ss
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
add
add
add
add
add
add
cmp
cmp
cmp
cmp
cmp
cmp
cmp
punpckldq
bound
bound
bound
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
ljmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmp
cmp
cmp
cmp
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
mov
mov
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
lret
lret
lret
lret
lret
dec
dec
dec
dec
dec
dec
dec
dec
dec
jb
jb
jb
jb
in
in
in
in
in
in
in
in
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
dec
dec
dec
dec
dec
dec
dec
dec
dec
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
sub
sub
sub
sub
sub
sub
sub
sub
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
or
or
or
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pusha
pusha
pusha
pusha
pusha
pusha
pusha
push
push
push
push
push
push
push
push
push
push
push
push
push
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
add
add
rol
rol
rol
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
add
add
add
int
int
int
int
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
xchg
xchg
xchg
fstp
fstp
fstp
fstp
fstp
fstp
fstp
nop
nop
nop
nop
nop
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
push
push
adc
adc
adc
adc
adc
adc
adc
adc
adc
je
je
je
je
je
je
je
je
je
je
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
test
aam
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
test
xor
xor
xor
xor
xor
sbb
sbb
sbb
sbb
sbb
in
in
in
in
in
in
in
hlt
hlt
hlt
hlt
hlt
hlt
push
push
push
push
push
fwait
fwait
fwait
fwait
fwait
fwait
je
je
je
je
je
je
je
je
xchg
or
add
add
mov
int
adc
add
testb
shlb
add
insl
loopne
add
add
xor
fcompl
lock
cli
pop
add
add
shll
lods
icebp
and
xchg
push
add
dec
mov
add
add
sbb
add
lahf
repnz
sbb
add
sbbl
js
test
add
loopne
pop
add
add
xchg
add
sbb
outsl
push
cmp
das
add
add
add
arpl
in
push
add
mov
cli
loop
and
xor
sahf
mov
add
imul
add
cmpsb
sub
mov
push
inc
les
cltd
push
fiadds
add
pop
add
cmp
pushf
aam
add
or
add
add
add
test
xor
add
addr16
mov
add
push
add
add
pop
mov
pop
cmpsl
push
add
jge
add
fistpll
xchg
sahf
push
add
adc
mov
enter
and
es
jno
push
add
andb
pop
popa
sub
cmp
adc
js
or
sar
xor
pop
mov
bound
call
inc
mov
jg
xor
test
mov
add
add
cmp
int
fildl
add
sbb
adc
dec
add
add
mov
adc
push
add
dec
add
dec
std
cwtl
scas
insb
add
sbb
loopne
add
xchg
adc
add
lea
inc
add
and
adc
or
mov
jb
pop
pop
cmpsl
out
add
mov
add
mov
repz
popl
and
mov
add
add
add
pushf
je
add
mov
add
mov
inc
add
addr16
ret
lahf
or
int
scas
pop
add
add
dec
add
mov
movzbl
sub
scas
in
push
or
pop
add
add
mov
pop
cs
mov
pause
cmpsb
test
add
das
movsl
and
fldcw
mov
shlb
out
mov
sub
clc
insb
add
add
add
jno
push
xchg
xor
pop
add
add
insl
test
sbb
adc
push
add
inc
add
in
and
neg
scas
sti
movsb
cmp
lds
add
sbb
jne
mov
lods
movsb
adc
xlat
dec
sub
xchg
pop
mov
add
add
gs
pop
push
add
lods
fndisi(8087
fists
fwait
jmp
loopne
jmp
xor
xchg
dec
add
add
in
fdivs
mov
pop
add
arpl
shlb
jno
scas
data16
push
add
cmp
jmp
mov
add
cld
mov
push
add
push
jnp
add
out
dec
mov
lods
das
cmpsb
aad
int3
cmp
jl
out
test
les
add
sub
add
inc
jns
add
cmp
lcall
ds
mov
add
cld
mov
add
pushf
sub
jp
mov
aaa
add
outsl
sahf
jp
sahf
lods
scas
ret
add
add
mov
mov
adc
add
imul
clc
imull
andb
sbb
inc
add
push
add
jno
xor
enter
int
pop
mov
mov
shll
lret
xor
add
add
fsubr
sub
cmp
add
xchg
test
mov
and
add
add
les
mov
jae
dec
fcomp
lahf
or
jne
dec
add
aam
mov
stos
cmc
inc
je
mov
add
add
xchg
adc
ret
ficoml
cld
repnz
add
add
push
popf
mov
xchg
mov
add
pop
fnstenv
xchg
jl
sarb
fildll
jb
add
add
add
sbb
pop
add
or
add
add
stos
cld
iret
mov
add
add
repnz
cmpb
add
xor
sub
jecxz
bound
jne
mov
add
inc
add
jecxz
cmpsb
jl
add
mov
dec
and
add
push
add
test
add
mov
add
sbb
stos
add
inc
add
or
add
stos
inc
ss
sub
adc
push
add
add
fidivrs
aad
mov
aaa
push
add
push
push
add
leave
leave
sbb
shll
test
push
mov
mov
or
and
inc
and
cs
add
push
add
outsb
add
loopne
add
ret
mov
js
fdivrs
aaa
or
pushf
mov
andb
fisubrs
inc
in
int3
inc
add
sub
add
jns
add
fmull
imul
xor
inc
add
sbb
in
pop
add
pusha
add
inc
insl
mov
xchg
call
stos
add
inc
dec
push
out
xchg
jo
inc
pop
add
xchg
cmp
je
xor
mov
incl
iret
sub
fs
shll
sarb
xor
xor
out
jno
add
add
inc
add
add
jecxz
mov
call
outsb
add
mov
mov
inc
rol
mov
push
add
push
add
xchg
push
add
add
add
outsl
pop
cmc
and
dec
dec
add
add
add
dec
add
add
and
shlb
and
sbb
mov
add
add
stc
js
xor
mov
pop
stc
sbb
movsb
out
xchg
lret
pop
add
fdivs
push
add
mov
out
fwait
add
in
jl
sldt
xchg
mov
je
pop
add
add
jg
pop
add
add
imull
stos
popa
inc
add
mov
cli
or
shrb
add
or
lock
add
imul
xchg
or
jge
pushf
add
in
lahf
mov
mov
add
rcrl
push
add
add
pop
mov
cmp
dec
cwtl
testb
sub
fsts
test
add
xchg
and
or
pop
scas
add
jp
mov
add
push
mov
add
outsl
fs
scas
sbb
or
inc
inc
jne
xchg
fldenv
pop
inc
mov
pop
add
lods
add
gs
push
lds
add
mov
sbb
loop
add
pop
movsb
cmp
div
add
add
hlt
pop
push
lea
inc
inc
add
push
add
int3
sub
cmp
shl
aam
lods
push
push
add
test
out
cmp
and
lods
ficoms
packuswb
std
cltd
sub
sub
inc
inc
add
add
add
inc
add
sub
outsb
add
xor
jae
cmc
je
movl
ret
cmp
cli
mov
pop
pop
inc
add
add
icebp
cli
loop
stos
mov
add
push
xchg
add
add
add
into
mov
and
roll
add
leave
test
notb
movl
add
add
out
mov
aam
add
add
fimull
repz
jno
addr16
adc
add
leave
jle
mov
lods
mov
push
add
add
outsl
mov
into
add
outsl
das
fdivr
or
mov
outsl
inc
sbb
mov
dec
add
inc
add
mov
cmp
cmp
bound
pusha
add
popa
mov
inc
add
fiadds
adc
xchg
or
mov
add
add
mov
jle
addr16
mov
aam
xchg
mov
mov
xor
das
and
pop
add
jns
jno
pop
add
add
arpl
lret
jns
into
or
ja
std
hlt
fsts
cmpsb
pop
add
add
cmc
sub
sub
jne
cmpsl
outsl
or
adc
xchg
in
and
and
in
fdiv
inc
add
repnz
das
mov
add
lcall
in
add
jns
add
iret
divps
push
mov
pop
xchg
adc
jmp
dec
adc
xor
movl
push
add
or
sbb
lahf
push
add
add
sub
jmp
cmp
xchg
js
inc
add
dec
cmpsl
fstl
rcl
out
add
add
push
and
daa
or
add
cmpsl
add
jmp
push
and
icebp
in
xor
cmp
fs
inc
adc
jne
xor
sbb
adc
mov
inc
add
test
call
mov
sti
lret
ret
leave
add
and
daa
movsl
and
xor
call
ss
dec
push
add
fwait
cli
mov
shrb
add
or
add
lds
add
and
jno
add
aam
sub
jecxz
add
inc
std
cltd
repz
clc
leave
jnp
out
dec
add
add
add
or
shrl
test
sub
fisttpl
sbb
mov
adc
xor
sbb
sub
jo
in
mov
push
add
adc
jae
mov
rolb
fcomps
jnp
add
push
add
imul
add
cmp
add
fsubrp
mov
stos
jb
bound
in
xchg
fbstp
pop
add
pop
add
add
jno
or
mov
push
add
add
imull
add
add
rorl
add
xchg
in
fsub
sbb
insl
aam
sbb
cli
push
add
sbb
daa
push
add
add
popf
inc
fdivrs
add
jmp
push
add
cwtl
les
outsl
lret
mov
repz
xchg
std
mov
fistl
xor
imul
add
mov
dec
mov
add
add
in
jae
sub
xchg
data16
aaa
cmpsb
inc
out
mov
les
add
push
add
mov
movsl
shlb
inc
orl
arpl
loop
dec
adc
push
adc
cmp
add
add
mov
adc
inc
add
inc
add
mov
pop
mov
xchg
mov
push
add
ds
in
cmp
movsl
lods
enter
iret
ficoml
mov
insl
loope
lahf
popf
mov
add
adc
nop
xor
push
add
mov
add
pop
and
pop
in
dec
push
add
fcomps
sub
sbbb
dec
add
lcall
loopne
add
pop
add
add
push
add
mov
add
add
mulb
stos
lahf
pushf
movsl
test
into
in
add
pop
mov
add
lods
js
sbb
rolb
jbe
mov
sbb
sub
xchg
push
add
adc
out
mov
xor
popf
rcrl
pop
rcl
sub
aas
mov
inc
add
shrb
jecxz
out
sbb
adc
fwait
mov
dec
add
scas
pop
add
add
out
add
mov
sub
mov
mov
add
cmc
jp
dec
push
push
add
cmpsl
addl
add
cmp
js
sti
jle
test
mov
pop
add
add
jp
mov
add
or
cmp
cmpsb
adc
outsl
sbb
mov
hlt
jg
testl
in
pop
add
add
add
xor
push
add
xlat
add
data16
ss
mov
imul
add
sub
jge
add
orl
int
add
add
add
dec
out
add
test
sarl
cmp
icebp
inc
add
dec
add
add
repz
xchg
out
add
dec
div
mov
sub
outsl
push
call
pusha
add
xlat
xchg
xchg
sbb
movsl
add
add
add
lods
pop
adc
xchg
mov
inc
add
jg
add
stos
mov
sbbl
add
add
popf
fs
addl
push
ljmp
push
mov
mov
nop
insb
add
pop
pushf
insb
add
out
add
in
adc
pusha
add
lock
cmp
or
out
add
mov
sub
xor
mov
aam
add
add
test
adc
std
jecxz
inc
dec
dec
add
push
add
cmp
sub
test
xchg
stc
add
add
fisubrs
add
add
aam
hlt
loop
test
add
mov
data16
add
add
ja
mov
add
jb
ret
dec
add
jmp
loope
icebp
out
adc
jecxz
into
lods
adc
sahf
movsl
mov
pop
stos
push
test
jecxz
add
inc
xchg
add
add
notl
jl
iret
lahf
out
pop
mov
sbb
nopl
add
rcll
add
xor
or
pop
add
cli
add
xchg
ja
lock
add
add
mov
dec
xchg
jo
mov
sub
cmp
push
add
or
cmp
lret
add
add
stos
adc
sti
push
add
adc
data16
mov
int
fsubs
add
pop
std
cmpsb
arpl
mov
dec
arpl
cmp
jns
lahf
les
push
push
add
out
add
dec
sarl
cmp
pop
push
add
and
inc
jmp
xlat
adc
in
add
movsb
out
popa
fstl
jbe
dec
add
add
push
add
cmpsl
xlat
out
add
stc
pop
add
hlt
mov
add
cltd
dec
stc
pop
add
test
sahf
loopne
add
cs
roll
stos
insl
xchg
cmpsl
mov
ficomps
dec
add
das
add
pop
icebp
inc
cmpsl
dec
add
test
fisttpll
add
add
imul
mov
jle
push
add
repz
pop
scas
nop
pop
fwait
inc
add
pop
add
repz
in
mov
add
cli
mov
sti
lods
in
clc
popa
xchg
movsl
scas
push
mov
lea
arpl
xchg
xor
data16
add
add
insl
mov
fisubrs
add
or
add
clc
fmuls
rcrb
mov
repnz
jge
add
add
arpl
adc
sbb
in
dec
mov
sbb
add
roll
aaa
sub
mov
add
pop
cmpsb
fildl
ret
and
shlb
jnp
add
add
ficomps
jns
loop
jns
sbb
fadds
add
xor
push
add
out
fistl
outsl
push
testb
add
data16
xor
fcmovnb
cmpl
cwtl
test
imul
jno
loope
in
pop
push
sbb
sub
aaa
inc
in
shlb
punpckhdq
fcmovbe
jecxz
add
jno
add
pop
sbb
dec
stos
push
add
add
jne
stos
cmp
jmp
addr16
jbe
out
add
jecxz
mov
add
lcall
jp
call
push
or
vpmacssdqh
dec
jae
repnz
add
out
es
push
add
cmp
sahf
sbb
stc
inc
add
jae
add
mov
mov
lods
lods
out
add
add
bound
dec
loope
stos
loop
and
sbb
test
add
push
jno
push
cmp
add
lret
sti
adc
dec
lret
sub
add
add
add
xchg
jo
sbb
out
push
mov
add
mov
add
sub
cmp
and
outsl
xlat
add
sub
add
jle
xor
sbbb
cmp
dec
arpl
and
out
roll
lcall
sub
dec
add
add
adc
mov
cltd
add
add
inc
loope
rcll
add
mov
xlat
adc
add
mov
je
dec
cmp
add
rcrl
xchg
fcmovnb
dec
add
add
inc
in
mov
ret
lods
shlb
push
push
add
add
and
add
add
pushf
ds
mov
pop
add
dec
add
nop
push
add
fisubs
add
lds
add
lods
sub
jo
fists
jp
sbb
push
add
mov
jge
out
lcall
push
add
add
loop
hlt
jne
sti
mov
sbb
sysret
inc
aas
out
inc
add
push
jne
or
push
mov
add
test
loopne
out
add
mov
add
sti
out
or
cmc
jno
insl
inc
add
aam
jae
pop
leave
cmpsb
sbb
ret
movsb
sahf
testl
push
jmp
add
nop
pop
dec
iret
pop
cmp
inc
add
lock
jb
jge
add
rcll
dec
add
inc
jns
sub
jp
andb
and
mov
add
and
jmp
shr
push
xlat
adc
and
iret
push
add
add
adc
add
ja
mov
popa
or
add
adc
add
jle
push
add
clc
inc
add
aaa
xor
sub
add
jmp
hlt
test
add
or
daa
and
mov
inc
add
int
add
lret
xchg
movsl
adc
xor
dec
push
add
add
add
jmp
test
sub
add
xchg
ljmp
out
gs
xor
lahf
out
in
mov
loop
movsb
sub
xlat
cmpsl
lret
jl
push
add
xlat
repnz
add
das
mov
add
inc
xchg
sub
mov
jae
add
add
xchg
rcll
add
lock
add
xchg
push
cmc
out
ja
addr16
xchg
mov
dec
add
jg
xor
addr16
add
je
pop
mov
add
out
mov
mov
add
add
adc
mov
sahf
mov
sub
hlt
xchg
stos
pop
or
rolb
add
test
jge
add
imul
imul
icebp
fisttps
mov
mov
sub
movl
cld
andl
lea
push
call
sub
add
and
mov
mov
and
test
je
mov
push
push
cld
call
test
clc
jne
mov
add
push
push
push
push
call
test
jne
xor
push
ret
lea
andl
push
push
push
push
push
push
call
push
cmp
lea
jne
movzbl
or
pop
mov
add
not
cld
xor
test
jne
call
ret
stc
mov
jmp
cmp
mov
add
ret
mov
mov
mov
inc
or
lea
lea
add
add
shr
lock
sub
and
je
push
mov
jne
out
add
add
popf
sbb
sbb
inc
add
notb
test
add
xchg
aad
mov
add
push
lcall
jg
or
aas
add
jne
addr16
push
add
xchg
add
mov
lods
sbb
add
rcrb
clc
sub
loop
push
add
jmp
js
push
pop
inc
add
das
and
jl
mov
add
and
mov
add
push
add
add
lahf
addr16
ret
mov
pop
inc
add
sub
xchg
pop
add
mov
add
cmp
mov
xchg
push
add
add
adc
add
aaa
jmp
adc
xchg
add
xchg
push
add
lds
jg
stos
call
cmpsb
inc
add
rorl
push
in
lods
cmpsl
push
andps
jb
sbb
lock
div
add
arpl
mov
add
xchg
pop
add
add
and
pop
add
movsb
lahf
sub
rcrb
jl
fstpt
add
add
mov
jge
jl
fistpl
xlat
and
push
push
add
xlat
mov
movsl
fistl
sub
jns
xchg
mov
pop
add
cmpsl
pop
add
outsl
mov
scas
insb
add
add
js
jp
mov
ja
add
push
loop
add
mov
cmp
xchg
imul
add
adc
aad
add
add
test
lret
pushf
stos
inc
add
iret
aad
add
fnstenv
add
sbb
rolb
push
hlt
cld
jne
out
jno
leave
mov
mov
popf
stos
pop
add
leave
jge
sbb
shll
jo
inc
add
bound
or
add
leave
push
add
add
hlt
pushf
movsb
add
sarl
cld
lds
xchg
std
xchg
sbb
aaa
jb
test
cmp
rol
mov
cmpsl
movsl
mov
dec
mov
add
sarl
and
out
sbb
faddl
push
add
add
nop
fbld
jne
jno
pop
movsl
js
pusha
add
hlt
ljmp
daa
inc
pop
pop
pop
stc
aaa
pop
cmp
in
jo
test
add
add
add
adc
pop
add
or
add
push
add
mov
pop
jl
ss
or
jl
mov
fwait
push
mov
shll
add
pop
icebp
inc
mov
and
push
add
add
jecxz
add
loop
into
dec
add
mov
add
js
pop
add
add
out
arpl
add
cmpsb
mov
add
popa
mov
cmp
outsb
add
cli
and
xchg
or
jne
adc
sar
movsb
aaa
mov
jecxz
jp
or
push
add
add
mov
mov
add
cmpsb
mov
pop
add
xor
int
add
xchg
add
add
aas
push
mov
clc
popf
ret
imul
aaa
mov
sar
sbb
sub
ret
xor
out
ret
out
dec
leave
ret
aaa
lea
nop
inc
add
add
fwait
pop
push
add
and
jg
cltd
cwtl
push
add
lea
jl
outsl
lods
outsb
add
mov
dec
add
xor
add
add
idiv
imul
add
add
ret
push
sti
jno
in
add
out
push
add
xchg
int3
push
add
dec
add
xchg
mov
jo
mov
jge
scas
movsb
add
add
jge
cmpsl
test
add
hlt
cmpl
xorl
cmp
add
into
out
int
add
int3
nop
jo
or
dec
dec
add
xchg
xor
mov
add
add
pop
cmpsl
gs
add
stos
pusha
add
popl
add
sub
pop
add
add
jmp
fadds
inc
add
mov
jae
add
mov
xchg
aaa
fldenv
jmp
add
cmp
pop
sbb
and
idivb
out
aad
and
add
sub
testb
imul
std
mov
push
out
adc
in
add
dec
in
add
inc
inc
pusha
add
btr
andl
insl
pop
rcrb
pop
add
loope
add
pusha
add
xlat
cmp
pop
add
shl
xor
cmp
jnp
add
jne
popa
fcmovbe
je
out
shl
sahf
adc
repz
sbb
add
out
add
popa
jmp
iret
imulb
cmp
pop
aam
push
mov
adc
iret
mov
in
add
mov
hlt
shl
and
lea
add
cld
mov
arpl
add
add
add
push
add
add
cmc
cmc
ret
repz
pop
add
xor
dec
cmpsb
push
add
loop
xchg
push
add
negb
or
mov
fwait
sub
pushl
add
pop
add
lea
mov
xor
dec
xchg
add
fcompl
scas
push
add
xchg
adc
ljmp
add
inc
cwtl
pop
xor
push
add
ror
mov
add
add
stos
push
add
push
add
pop
add
inc
add
cld
dec
insb
add
jmp
fisubs
lcall
popf
pushf
inc
add
jne
or
jo
in
add
or
add
add
xchg
repz
sbb
pusha
add
add
imul
jecxz
stos
sub
jge
ja
add
mov
push
add
ret
dec
imul
add
xchg
aas
mov
imul
sti
xor
pushf
mov
mov
bound
xchg
lds
add
dec
add
add
mov
cmc
push
xor
mov
xchg
mov
in
mov
add
xchg
lcall
add
add
jae
pop
add
cmp
add
ret
mov
or
push
cld
les
mov
cmp
mov
sub
das
pop
bound
aaa
push
add
scas
inc
add
add
inc
add
sub
jmp
sub
add
cmp
add
cld
imull
add
popf
imul
out
mov
jbe
mov
add
lahf
fildl
add
jo
xchg
fnstenv
jg
add
js
daa
arpl
test
ja
add
jl
cmpsl
fcompl
fsubrl
add
fsts
sti
inc
xchg
push
and
add
mov
mov
leave
rcll
lea
dec
mov
add
lcall
stc
sbb
pop
add
cmpsb
outsl
push
addb
cld
jmp
pop
xchg
roll
push
lcall
pusha
add
mov
jne
add
aam
adc
cld
inc
das
data16
xor
data16
mov
and
mov
add
or
cmc
mov
lock
push
cmpsb
out
add
in
pop
iret
es
sub
idiv
insb
add
add
add
pop
mov
jl
scas
and
sub
add
pop
leave
lds
add
add
iret
sub
gs
add
roll
daa
gs
fisttps
add
add
jl
add
dec
cltd
lea
jmp
lcall
and
add
add
je
sti
ljmp
data16
enter
add
add
add
test
xchg
aas
fwait
rclb
movsb
add
xor
idiv
pop
xchg
push
add
cmp
mov
stos
cmpsb
call
lods
mov
add
add
add
cmp
mov
add
in
push
add
xchg
push
add
add
lods
pop
add
fstl
es
pmullw
add
jns
jnp
add
add
ret
push
inc
add
addb
add
sbb
das
cmpsl
mov
and
mov
xchg
sub
push
dec
mov
add
scas
jl
xchg
add
add
mov
sub
or
fldenv
out
push
add
add
icebp
pop
add
aad
and
sbb
int3
shr
add
push
add
fbstp
add
mov
add
add
fdivrl
in
filds
inc
outsl
xor
nop
mov
add
mov
cwtl
pusha
add
xor
in
stc
push
add
add
sub
mov
dec
add
inc
or
add
stc
cmp
or
push
push
add
inc
add
les
inc
add
movntps
add
add
pop
dec
pop
sub
add
or
push
add
add
shll
pushf
mov
add
fdivr
jae
add
add
push
ljmp
xchg
das
dec
add
add
add
pop
test
sub
add
pop
into
fists
or
cld
cmpl
ret
add
add
cltd
mov
cld
add
add
push
add
lahf
stos
pop
outsb
add
jecxz
lods
pop
add
dec
add
or
or
movsb
and
sub
add
add
js
into
add
push
add
pop
call
jp
ljmp
add
add
inc
add
aad
int3
sub
test
push
jnp
mov
aam
popf
inc
xor
jnp
add
cmp
movsl
cmp
inc
enter
into
push
jg
loop
xchg
sbb
push
cmp
push
add
add
clc
sbb
in
into
push
add
add
add
xchg
pop
push
ds
jne
jmp
pop
movsb
sarb
ret
mov
add
cmp
xchg
shrl
add
out
add
push
add
add
fcmove
fwait
push
subb
inc
scas
call
add
or
mov
movsb
jl
scas
mov
pop
add
int
mov
add
shrb
test
cmp
cmp
js
xchg
cmc
jo
pop
add
xchg
mov
mov
cltd
out
or
daa
scas
sbb
and
sbb
add
add
lahf
add
repz
int3
repz
pop
sub
bound
fdivrs
cmp
pop
sbb
jmp
repz
leave
xchg
add
bound
stc
roll
cmpsl
jns
mov
sub
or
push
lret
push
jmp
shr
loopne
cmp
shrb
shll
mov
aas
lret
mov
jbe
jbe
push
add
lcall
test
out
dec
inc
or
cmc
mov
xchg
jne
add
into
mov
add
cmp
movsb
movsl
adc
nop
push
add
out
lods
lahf
or
adc
add
jecxz
push
out
and
daa
popf
cmp
add
sbb
out
adc
lods
pop
in
aad
imul
add
push
or
jnp
jp
inc
add
insb
add
jns
add
mov
sbb
jp
mov
add
jg
mov
mov
and
subb
movsb
lret
int3
sub
dec
add
cmc
mov
add
cwtl
lcall
cmp
pushf
test
shl
mov
outsl
hlt
jbe
arpl
inc
push
add
add
cmp
jne
add
int
or
add
add
sbb
addb
xchg
add
lds
or
mov
sar
jbe
dec
add
hlt
out
into
out
leave
mov
add
add
hlt
adc
pop
add
pop
add
pop
add
add
fcoml
daa
sbb
push
add
add
add
int
xchg
sub
arpl
into
jnp
cmpsl
or
xchg
aam
ds
aas
sub
shlb
int3
mov
add
sub
sti
in
stc
mov
inc
jg
popa
and
fcmove
and
push
add
out
add
mov
add
cmpsb
test
add
inc
add
gs
cld
ljmp
add
and
dec
add
ret
jbe
daa
xor
xor
push
add
cmp
bound
lret
loopne
lret
or
sarb
std
xlat
mov
cmp
inc
xor
mov
cmp
pop
dec
add
push
add
repnz
repz
dec
add
add
jle
sbb
cmp
cld
insl
push
pop
lods
arpl
add
fmul
orb
std
das
sahf
loopne
cli
xchg
push
add
add
inc
jae
add
gs
insb
add
lods
sar
add
mov
outsl
and
icebp
add
pop
enter
add
mov
add
pop
movzbl
add
add
test
sbb
leave
shr
sahf
jnp
add
test
add
add
pop
enter
sbb
mov
jns
dec
popf
je
into
int
stos
pop
add
add
jmp
cmpsl
cmc
nop
fnop
lds
jb
push
inc
add
jne
xchg
jmp
add
out
cwtl
rol
add
add
xchg
xor
repz
add
mull
add
push
add
push
adc
popa
loopne
or
pusha
add
sub
addr16
cmp
cld
insb
add
cld
adc
xchg
addr16
mov
out
add
add
xchg
mov
outsl
ror
shr
mov
pop
outsl
int3
les
add
test
push
add
add
decb
fstpt
add
add
add
pop
add
test
dec
add
lods
nop
dec
jl
imulb
add
add
out
js
xlat
loope
fimull
mov
add
add
cld
test
enter
add
xchg
and
cmp
push
add
add
xchg
cmpsl
outsl
jns
sahf
xor
add
add
int
add
add
bound
ret
scas
insl
add
xchg
test
shrl
lret
dec
jmp
pop
cld
add
mov
add
add
out
ja
add
add
push
clc
repnz
nop
nop
jae
add
add
add
inc
add
clc
repnz
nop
nop
jae
push
add
test
rolb
test
xor
nop
push
mov
leave
nop
jmp
add
add
xrelease
add
clc
repnz
nop
nop
jae
and
add
lds
xchg
ret
add
lock
mov
xor
pop
jno
or
pause
push
mov
leave
nop
jmp
add
add
sub
mov
add
sub
add
xor
add
pop
add
je
pop
add
jp
mov
add
fwait
clc
repnz
nop
nop
jae
scas
add
pop
add
pop
add
add
mov
clc
repnz
nop
nop
jae
add
enter
add
nop
push
mov
leave
nop
jmp
mov
test
sub
lods
add
and
and
cmp
push
mov
leave
nop
jmp
out
add
iret
enter
mov
outsl
arpl
add
repnz
nop
nop
jae
jbe
jbe
add
leave
nop
push
mov
leave
nop
jmp
add
xchg
add
addb
jbe
push
nop
push
mov
leave
nop
jmp
rolb
add
mov
add
add
mov
push
mov
xchg
ret
lock
pop
add
add
add
mov
clc
repnz
nop
nop
jae
add
xor
sar
adc
xlat
add
clc
repnz
nop
nop
jae
jp
mov
add
push
mov
xchg
ret
sbb
add
add
add
nop
push
mov
leave
nop
jmp
add
test
add
add
das
add
repnz
add
add
mov
mov
fs
add
mov
clc
repnz
nop
nop
jae
xor
cwtl
add
add
push
nop
push
mov
leave
nop
jmp
jbe
add
sbb
arpl
and
nop
nop
jae
jg
add
jg
pop
jno
leave
mov
push
mov
xchg
ret
sbb
xchg
jl
arpl
add
add
add
nop
push
mov
leave
nop
jmp
add
addb
add
add
repnz
nop
nop
jae
add
add
leave
das
add
je
lods
daa
call
clc
repnz
nop
nop
jae
add
add
fisttps
cld
nop
nop
jae
add
lock
add
call
inc
add
mov
jl
add
add
gs
push
mov
xchg
ret
add
jbe
leave
add
jno
scas
mov
mov
xchg
ret
add
mov
mov
clc
repnz
nop
nop
jae
sbb
add
test
xor
lock
maskmovq
notl
clc
repnz
nop
nop
jae
lods
lock
jbe
lock
pop
add
add
adc
nop
nop
jae
add
ljmp
out
add
ret
add
sti
pop
clc
repnz
nop
nop
jae
sbb
pop
add
lods
mov
dec
insb
add
add
clc
repnz
nop
nop
jae
add
add
add
dec
and
mov
clc
repnz
nop
nop
jae
iret
jp
jbe
subb
mov
mov
clc
repnz
nop
nop
jae
add
lock
sbb
in
push
clc
repnz
nop
nop
jae
add
leave
add
leave
add
test
push
mov
xchg
ret
add
sbb
add
movsb
jbe
mov
clc
repnz
nop
nop
jae
add
jno
stos
add
add
mov
leave
nop
jmp
push
xor
xchg
test
add
pop
call
nop
jmp
add
add
jb
cltd
push
clc
repnz
nop
nop
jae
leave
mov
add
sub
in
adc
sar
repnz
nop
nop
jae
add
mov
mov
cmp
nop
push
mov
leave
nop
jmp
add
add
out
add
pop
xor
clc
repnz
nop
nop
jae
enter
add
add
add
icebp
pop
push
mov
xchg
ret
add
add
lods
add
ljmp
repnz
nop
nop
jae
sbb
dec
stos
mov
add
push
mov
xchg
ret
jbe
inc
je
add
add
cmp
push
mov
leave
nop
jmp
addb
jg
add
push
add
add
push
clc
repnz
nop
nop
jae
add
out
mov
xor
aad
movb
cld
nop
nop
jae
repz
jp
jg
je
fsubs
pop
push
mov
xchg
ret
add
add
das
add
sbb
add
jecxz
roll
mov
xchg
ret
add
xor
mov
inc
jg
mov
clc
repnz
nop
nop
jae
ljmp
jg
add
mov
add
sar
cld
nop
nop
jae
add
arpl
jno
iret
mov
add
inc
mov
push
mov
xchg
ret
add
add
add
movsb
mov
jne
clc
repnz
nop
nop
jae
jp
addb
das
add
add
roll
cld
nop
nop
jae
ljmp
sbb
mov
nop
push
mov
leave
nop
jmp
add
add
add
and
jne
clc
repnz
nop
nop
jae
out
add
ljmp
add
add
mov
push
mov
xchg
ret
and
dec
add
sbb
push
mov
xchg
ret
add
sbb
add
add
out
or
push
mov
leave
nop
jmp
add
mov
pop
scas
test
sbb
lcall
repnz
nop
nop
jae
sbb
jg
add
add
movsb
xchg
call
clc
repnz
nop
nop
jae
mov
add
add
cmp
push
jle
add
lods
pop
enter
add
jno
fwait
jmp
xor
mov
je
add
xorb
cmpsb
add
add
leave
add
pop
jbe
add
lock
arpl
cld
nop
nop
jae
arpl
pop
add
inc
jae
clc
repnz
nop
nop
jae
add
add
arpl
lods
mov
adc
repnz
nop
nop
jae
inc
ret
add
add
xor
push
mov
xchg
ret
add
add
xor
pop
add
xlat
push
push
mov
xchg
ret
jno
add
jl
add
inc
add
adc
ret
add
rolb
pop
lods
add
mov
lahf
mov
clc
repnz
nop
nop
jae
sbb
xor
add
inc
add
add
clc
repnz
nop
nop
jae
xor
and
add
add
push
clc
repnz
nop
nop
jae
add
add
xor
add
add
daa
or
clc
repnz
nop
nop
jae
sti
add
arpl
cmc
mov
clc
repnz
nop
nop
jae
ljmp
pop
das
xor
push
call
clc
repnz
nop
nop
jae
add
xor
cmpsl
push
clc
repnz
nop
nop
jae
add
add
add
add
xchg
ret
push
nop
push
mov
leave
nop
jmp
add
mov
je
repz
mov
clc
repnz
nop
nop
jae
pop
je
add
test
mov
repnz
nop
nop
jae
sbb
sbb
ret
push
clc
repnz
nop
nop
jae
ret
add
mov
add
push
mov
xchg
ret
addb
add
iret
add
add
jbe
rcl
add
clc
repnz
nop
nop
jae
lods
addb
jbe
add
mov
clc
repnz
nop
nop
jae
jp
add
sbb
add
xchg
add
pop
mov
pause
push
mov
leave
nop
jmp
das
add
rolb
add
add
push
xchg
nop
push
mov
leave
nop
jmp
jg
add
test
sub
movsl
jmp
add
add
test
xchg
add
add
add
add
add
call
clc
repnz
nop
nop
jae
add
ret
mov
sti
popf
mov
clc
repnz
nop
nop
jae
xor
inc
add
pop
add
jno
xchg
inc
add
jmp
add
jbe
and
pop
jno
add
repz
add
clc
repnz
nop
nop
jae
add
add
add
ret
enter
call
nop
jae
stos
scas
pop
dec
je
add
add
add
repnz
nop
nop
jae
jp
add
jl
jl
and
aas
adc
nop
jmp
add
test
pop
add
mov
adc
nop
push
mov
leave
nop
jmp
add
mov
pop
add
add
push
mov
xchg
ret
and
add
mov
add
jg
nop
push
mov
leave
nop
jmp
inc
add
leave
add
add
add
clc
repnz
nop
nop
jae
add
add
iret
add
das
add
mov
rclb
insb
jle
add
jp
mov
add
cmp
dec
push
push
mov
xchg
ret
enter
pop
add
jg
leave
stos
inc
add
mov
push
mov
leave
nop
jmp
add
add
ljmp
test
out
inc
xor
push
mov
xchg
ret
add
sbb
add
scas
imull
sub
repnz
nop
nop
jae
add
pop
iret
cwtl
jbe
add
mov
clc
repnz
nop
nop
jae
ljmp
add
add
cmpsb
add
cmpsb
inc
push
push
mov
xchg
ret
jbe
add
das
or
mov
pop
clc
repnz
nop
nop
jae
add
add
add
sbb
sub
js
clc
repnz
nop
nop
jae
add
add
out
mov
push
mov
xchg
ret
xor
test
pop
leave
jbe
movsl
jne
clc
repnz
nop
nop
jae
jno
add
test
pop
or
jb
add
add
add
rep
add
mov
clc
repnz
nop
nop
jae
add
je
jbe
mov
fwait
push
mov
xchg
ret
lock
jbe
mov
jbe
add
jle
test
nop
nop
jae
pop
add
add
pop
add
jbe
add
push
mov
xchg
ret
mov
adc
dec
add
sub
xchg
mov
clc
repnz
nop
nop
jae
adc
xor
sti
add
push
adc
clc
repnz
nop
nop
jae
jp
stos
sbb
xor
clc
repnz
nop
nop
jae
add
mov
sti
sbb
call
mov
xchg
ret
xor
cwtl
sti
mov
add
out
call
nop
jae
enter
add
add
add
iret
pop
jmp
inc
add
add
add
jbe
add
adc
pop
add
add
mov
clc
repnz
nop
nop
jae
lock
pop
arpl
push
push
nop
push
mov
leave
nop
jmp
and
test
add
add
enter
in
leave
nop
jmp
add
movsb
add
add
jl
xchg
push
mov
xchg
ret
inc
jbe
pop
icebp
fld1
nop
push
mov
leave
nop
jmp
add
sub
jns
stos
clc
repnz
nop
nop
jae
add
add
add
push
jb
nop
push
mov
leave
nop
jmp
add
mov
add
push
mov
xchg
ret
add
arpl
add
add
aam
add
clc
repnz
nop
nop
jae
push
adc
add
shr
nop
push
mov
leave
nop
jmp
add
add
repz
nop
push
mov
leave
nop
jmp
add
add
add
mov
das
sarb
pop
pusha
clc
repnz
nop
nop
jae
pop
add
jbe
add
push
mov
dec
add
lds
xor
sbb
subl
add
cli
ljmp
push
add
clc
repnz
nop
nop
jae
lods
and
add
dec
clc
dec
inc
clc
repnz
nop
nop
jae
addb
sbb
xor
clc
repnz
nop
nop
jae
add
add
mov
clc
repnz
nop
nop
jae
sbb
add
add
xchg
int
adc
clc
repnz
nop
nop
jae
add
pop
mov
jl
xor
movsl
jbe
add
add
add
test
add
clc
repnz
nop
nop
jae
sbb
cmpb
ljmp
lret
mov
leave
nop
jmp
out
pop
pop
add
add
adc
and
in
leave
nop
jmp
lods
enter
arpl
add
xor
add
imul
xchg
ret
sti
add
add
xor
add
add
add
push
push
mov
xchg
ret
test
add
add
add
pop
add
pop
cmp
nop
push
mov
leave
nop
jmp
xor
add
mov
add
add
outsl
loopne
repnz
nop
nop
jae
je
pop
add
das
inc
add
cmpsb
lods
pushf
jmp
clc
repnz
nop
nop
jae
add
adc
add
mov
xchg
ret
adc
stos
sbb
sbb
add
mov
push
mov
xchg
ret
lock
add
rolb
ljmp
lock
repnz
nop
nop
jae
xchg
add
add
mov
add
add
clc
repnz
nop
nop
jae
mov
add
jg
add
sbb
imul
xchg
or
add
repnz
nop
nop
jae
add
dec
je
in
xor
push
mov
xchg
ret
add
mov
stos
mov
xor
push
add
add
nop
push
mov
leave
nop
jmp
add
add
mov
adc
repnz
nop
nop
jae
add
add
add
inc
clc
repnz
nop
nop
jae
cwtl
add
inc
xchg
mov
pop
push
mov
xchg
ret
add
add
add
add
leave
ret
ljmp
mov
leave
nop
jmp
add
add
add
inc
sbb
jl
add
push
mov
xchg
ret
arpl
scas
add
add
mov
clc
repnz
nop
nop
jae
add
jg
add
lock
pushl
push
mov
xchg
ret
add
arpl
add
mov
add
inc
nop
push
mov
leave
nop
jmp
out
add
ret
fs
xchg
clc
repnz
nop
nop
jae
inc
add
add
add
roll
mov
xchg
ret
arpl
leave
add
pop
mov
add
pop
push
mov
xchg
ret
add
add
sub
sub
repz
clc
repnz
nop
nop
jae
add
mov
clc
repnz
nop
nop
jae
test
add
add
add
ret
push
push
mov
xchg
ret
add
sbb
ret
add
sbb
add
cld
nop
nop
jae
je
add
add
add
repnz
nop
nop
jae
ljmp
and
add
mov
mov
leave
nop
jmp
add
add
add
pop
clc
repnz
nop
nop
jae
add
test
jl
adc
jb
shl
lret
test
add
clc
repnz
nop
nop
jae
add
jg
mov
xor
nop
push
mov
leave
nop
jmp
dec
test
scas
pop
ret
add
clc
repnz
nop
nop
jae
stos
add
add
add
addb
add
cld
nop
nop
jae
jbe
test
mov
mov
push
mov
xchg
ret
add
add
dec
lods
clc
repnz
nop
nop
jae
arpl
scas
add
pop
mov
add
clc
repnz
nop
nop
jae
add
add
je
add
sbb
push
mov
xchg
ret
pop
add
add
add
add
inc
add
xor
adcb
jmp
je
add
xchg
push
add
pop
push
mov
xchg
ret
xchg
test
add
ljmp
lods
testl
sbbl
add
adc
add
add
xor
jne
push
mov
xchg
ret
add
sub
das
je
stos
add
or
std
fwait
clc
repnz
nop
nop
jae
ljmp
sub
addb
fld1
push
mov
xchg
ret
mov
xor
add
add
xchg
fistpl
clc
repnz
nop
nop
jae
add
pop
add
xor
fiadds
mov
clc
repnz
nop
nop
jae
ljmp
add
rep
push
mov
xchg
ret
add
cwtl
je
jg
add
add
test
push
mov
leave
nop
jmp
add
enter
test
push
push
mov
xchg
ret
add
jp
add
rolb
sbb
lret
imul
clc
repnz
nop
nop
jae
add
add
jp
add
add
inc
push
clc
repnz
nop
nop
jae
add
sbb
roll
add
repnz
nop
nop
jae
sbb
jp
mov
clc
repnz
nop
nop
jae
repz
add
pop
in
mov
push
mov
leave
nop
jmp
jp
add
pop
add
out
jp
popl
mov
inc
add
jg
je
add
ja
clc
repnz
nop
nop
jae
movsb
add
add
mov
jle
pop
add
repnz
repnz
nop
nop
jae
add
je
lods
cwtl
test
mov
dec
push
push
mov
xchg
ret
ret
add
inc
add
mov
add
clc
repnz
nop
nop
jae
pop
add
jl
test
mov
push
push
mov
xchg
ret
adc
add
push
add
sub
pop
add
outsl
inc
add
add
push
sbb
fs
pop
adcb
mov
imul
jmp
add
add
rcr
sbb
clc
repnz
nop
nop
jae
add
mov
add
dec
adc
dec
insb
inc
add
jg
inc
add
xor
add
add
cld
nop
nop
jae
add
add
mov
daa
pop
clc
repnz
nop
nop
jae
mov
rolb
add
sarb
lock
mov
adc
inc
add
add
dec
repz
add
test
ljmp
mov
clc
repnz
nop
nop
jae
add
repz
cltd
mov
clc
repnz
nop
nop
jae
mov
add
add
lret
loopne
mov
push
mov
xchg
ret
add
sarb
fs
enter
push
inc
sbb
repnz
nop
nop
jae
pop
add
mov
and
cmp
repnz
nop
nop
jae
ljmp
add
jg
add
push
clc
repnz
nop
nop
jae
sbb
add
add
jbe
add
test
fdivrs
add
nop
push
mov
leave
nop
jmp
xor
add
repz
ret
clc
repnz
nop
nop
jae
add
add
sub
add
adcb
and
repnz
nop
nop
jae
test
add
add
add
mov
repnz
nop
nop
jae
add
push
pop
add
sbb
add
nop
push
mov
leave
nop
jmp
mov
mov
push
add
inc
add
fmuls
mov
leave
nop
jmp
rolb
inc
xor
fld1
clc
repnz
nop
nop
jae
add
add
add
xor
cld
pop
add
xchg
clc
repnz
nop
nop
jae
jbe
add
cmp
adc
repnz
nop
nop
jae
mov
add
sbb
push
mov
xchg
ret
out
add
inc
sti
test
ljmp
lcall
cld
nop
nop
jae
jbe
add
add
sbb
add
clc
repnz
nop
nop
jae
inc
add
sbb
add
je
push
nop
nop
jae
add
add
add
mov
mov
mov
push
clc
repnz
nop
nop
jae
add
add
add
add
sbb
xchg
adc
adc
jb
and
push
shl
clc
repnz
nop
nop
jae
dec
leave
sbb
enter
mov
clc
repnz
nop
nop
jae
test
add
add
add
mov
call
nop
jae
add
sbb
add
mov
repnz
nop
nop
jae
repz
add
add
add
jbe
and
adc
movsb
xor
imul
cld
nop
nop
jae
add
ret
stos
inc
andb
cmpsl
add
clc
repnz
nop
nop
jae
add
mov
pop
add
fnstsw
clc
repnz
nop
nop
jae
add
pop
push
je
clc
repnz
nop
nop
jae
das
add
test
das
add
add
fwait
clc
repnz
nop
nop
jae
add
and
das
test
add
add
pop
mov
xchg
ret
add
je
add
add
push
mov
xchg
ret
mov
jl
xor
leave
push
mov
xchg
ret
and
add
add
add
add
sub
call
leave
nop
jmp
push
add
sbb
add
fidivrl
add
nop
nop
jae
add
arpl
add
add
std
push
nop
push
mov
leave
nop
jmp
jl
add
add
add
repnz
nop
nop
jae
mov
adc
add
jno
sub
xor
nop
nop
jae
jl
jg
jg
je
cwtl
cwtl
add
cld
nop
nop
jae
push
add
arpl
jp
add
add
add
nop
jae
ret
pop
jbe
add
mov
pop
add
push
push
mov
xchg
ret
add
mov
lock
add
fs
mov
nop
push
mov
leave
nop
jmp
pop
sbb
add
cmc
dec
push
mov
xchg
ret
inc
je
add
xor
and
cmp
nop
push
mov
leave
nop
jmp
add
xchg
je
and
mov
clc
repnz
nop
nop
jae
add
ljmp
add
sahf
jne
add
add
repnz
nop
nop
jae
add
add
add
sbb
clc
repnz
nop
nop
jae
add
add
add
repz
clc
repnz
nop
nop
jae
xor
xor
mov
clc
repnz
nop
nop
jae
xchg
lock
add
sub
clc
repnz
nop
nop
jae
pop
mov
inc
add
stos
xchg
repz
ljmp
add
mov
and
jbe
nop
into
mov
add
sbb
jmp
nop
nop
jae
xchg
add
sub
sahf
dec
xor
clc
repnz
nop
nop
jae
add
test
add
jg
jmp
inc
push
add
enter
add
mov
push
add
add
clc
repnz
nop
nop
jae
pop
add
jge
push
mov
xchg
ret
add
pop
je
jbe
sbb
jg
pusha
add
xor
cld
nop
nop
jae
inc
out
repz
add
repz
nop
push
mov
leave
nop
jmp
add
sbb
addr16
clc
repnz
nop
nop
jae
scas
scas
add
sbb
into
xchg
stc
je
nop
push
mov
leave
nop
jmp
dec
jg
add
fwait
mov
nop
push
mov
leave
nop
jmp
jl
sbb
add
inc
adc
repnz
nop
nop
jae
add
add
add
aad
clc
repnz
nop
nop
jae
je
rolb
andb
lock
push
fld1
push
mov
xchg
ret
add
add
inc
add
mov
cmp
clc
repnz
nop
nop
jae
ret
je
add
call
inc
add
add
add
add
push
add
nop
push
mov
leave
nop
jmp
ret
test
je
jbe
add
cmp
popa
add
push
mov
xchg
ret
scas
jbe
add
add
test
adc
test
push
push
mov
xchg
ret
sbb
adc
movsb
add
or
repnz
nop
nop
jae
inc
adc
lock
jg
add
inc
add
mov
nop
push
mov
leave
nop
jmp
add
xor
add
sti
nop
push
mov
leave
nop
jmp
mov
test
je
add
add
sbb
cld
nop
nop
jae
pop
dec
add
add
add
sbb
mov
cmp
nop
push
mov
leave
nop
jmp
iret
jg
add
dec
add
mov
fsts
in
jle
fwait
jl
mov
sub
pop
inc
lahf
pop
lock
add
mov
clc
repnz
nop
nop
jae
add
dec
add
add
add
push
add
shr
push
mov
xchg
ret
xor
add
sti
jl
add
inc
clc
repnz
nop
nop
jae
ret
pop
add
das
xor
push
add
push
bound
and
outsl
nop
push
mov
leave
nop
jmp
pop
add
repz
nop
push
mov
leave
nop
jmp
mov
add
push
add
add
push
mov
xchg
ret
je
add
add
add
nop
push
mov
leave
nop
jmp
add
push
and
mov
clc
repnz
nop
nop
jae
ret
je
add
mov
clc
repnz
nop
nop
jae
mov
scas
mov
mov
incl
nop
push
mov
leave
nop
jmp
movsb
add
jg
add
add
push
clc
repnz
nop
nop
jae
iret
jbe
and
jl
dec
add
add
repnz
nop
nop
jae
add
add
add
jg
mov
clc
repnz
nop
nop
jae
add
add
mov
nop
push
mov
leave
nop
jmp
fs
movsb
mov
mov
loope
incl
add
repnz
nop
nop
jae
pop
add
pop
jno
mov
inc
add
clc
repnz
nop
nop
jae
jbe
pop
jg
add
add
inc
add
repnz
nop
nop
jae
add
add
jp
loopne
add
push
mov
xchg
ret
arpl
add
das
add
lret
clc
repnz
nop
nop
jae
xor
sub
pop
and
sbb
repnz
nop
nop
jae
jl
lods
add
sbb
pusha
add
add
push
add
add
add
sbb
add
add
movsb
add
mov
push
add
clc
repnz
nop
nop
jae
ret
jg
mov
inc
dec
es
repnz
nop
nop
jae
iret
movsb
das
and
add
icebp
clc
repnz
nop
nop
jae
jg
add
add
int3
sub
in
sbb
nop
nop
jae
test
je
add
test
add
push
mov
leave
nop
jmp
add
xor
add
mov
inc
add
movb
mov
xchg
ret
add
pop
add
testl
cmpl
je
add
add
add
mov
in
leave
nop
jmp
repz
jbe
jbe
sub
push
fwait
clc
repnz
nop
nop
jae
add
test
add
xchg
ret
clc
repnz
nop
nop
jae
inc
movsb
push
dec
xor
add
cld
arpl
sar
cld
nop
nop
jae
add
xor
add
pop
je
xchg
pop
add
mov
clc
repnz
nop
nop
jae
add
mov
dec
adc
stos
in
test
add
add
repnz
nop
nop
jae
ljmp
cmpsl
fwait
clc
repnz
nop
nop
jae
sbb
lock
add
jl
pop
out
dec
nop
push
mov
leave
nop
jmp
sbb
pop
ret
jno
add
lea
push
mov
xchg
ret
test
and
add
add
add
clc
repnz
nop
nop
jae
xor
add
iret
mov
dec
pop
clc
repnz
nop
nop
jae
jbe
inc
jp
adc
add
je
add
push
mov
leave
nop
jmp
jg
je
xor
xchg
jp
add
dec
cmp
repnz
nop
nop
jae
lock
pop
add
pop
movswl
clc
repnz
nop
nop
jae
pop
sbbb
pop
ljmp
add
jle
add
jl
jno
das
add
jbe
xchg
ja
sbb
push
mov
xchg
ret
add
stos
add
sub
mov
mov
jmp
nop
nop
jae
add
xor
inc
test
jnp
add
shll
add
add
mov
xor
mov
nop
push
mov
leave
nop
jmp
and
pop
repz
sti
add
push
add
mov
clc
repnz
nop
nop
jae
inc
xor
lock
sbb
je
inc
add
mov
push
add
mov
in
leave
nop
jmp
cwtl
add
mov
cwtl
rcl
jl
dec
pop
cmp
and
negb
pop
push
mov
xchg
ret
add
mov
add
sbb
add
mov
clc
repnz
nop
nop
jae
jp
fs
jg
and
dec
nop
push
mov
leave
nop
jmp
add
sbb
je
mov
add
enter
dec
cmp
repnz
nop
nop
jae
mov
stos
je
das
add
add
clc
repnz
nop
nop
jae
inc
add
add
jl
iret
add
add
add
nop
push
mov
leave
nop
jmp
add
add
add
leave
pop
add
add
mov
leave
nop
jmp
add
add
add
add
jg
clc
add
push
outsb
inc
add
add
add
add
pop
dec
add
pop
push
mov
xchg
ret
add
jbe
add
mov
fwait
push
mov
xchg
ret
jg
mov
add
add
test
add
add
les
push
mov
xchg
ret
add
add
out
je
add
outsb
add
clc
repnz
nop
nop
jae
add
add
add
add
and
pop
push
push
mov
xchg
ret
pop
enter
jl
add
idivb
add
repnz
nop
nop
jae
add
add
test
iret
adc
cmp
pop
cmp
push
mov
leave
nop
jmp
lods
sbb
jg
jg
jg
cmp
push
mov
xchg
ret
scas
add
add
jp
push
push
mov
xchg
ret
add
sub
and
add
std
decl
push
mov
xchg
ret
lods
add
jbe
cwtl
add
sti
add
adc
and
add
repnz
nop
nop
jae
add
add
mov
pusha
clc
repnz
nop
nop
jae
add
add
arpl
lock
add
nop
push
mov
leave
nop
jmp
add
add
add
popa
jmp
clc
repnz
nop
nop
jae
adc
repz
lock
mov
clc
repnz
nop
nop
jae
pop
add
das
inc
sti
lods
scas
sub
test
mov
clc
repnz
nop
nop
jae
jbe
ret
test
scas
add
test
repnz
nop
nop
jae
jno
add
add
clc
repnz
nop
nop
jae
repz
repz
stos
das
xchg
and
call
and
add
add
test
xchg
xor
add
test
repnz
nop
nop
jae
iret
mov
add
cs
clc
repnz
nop
nop
jae
add
add
jl
mov
cmpsl
mov
clc
repnz
nop
nop
jae
add
add
mov
rep
clc
repnz
nop
nop
jae
jno
add
add
xor
push
repnz
nop
nop
jae
jp
jg
add
arpl
pop
add
push
add
clc
repnz
nop
nop
jae
add
add
std
push
push
mov
xchg
ret
mov
adc
stos
sub
add
jecxz
push
mov
leave
nop
jmp
jbe
add
push
add
daa
cmpl
nop
push
mov
leave
nop
jmp
mov
ljmp
push
mov
xchg
ret
add
add
add
add
sti
add
inc
add
nop
push
mov
leave
nop
jmp
mov
mov
and
movsb
repz
push
add
call
inc
add
xor
jl
add
push
add
add
nop
nop
jae
add
add
dec
add
lret
add
clc
repnz
nop
nop
jae
add
jno
je
pop
add
add
add
xbegin
jae
add
lock
jbe
jbe
add
push
add
push
mov
leave
nop
jmp
scas
add
add
jg
call
nop
push
mov
leave
nop
jmp
ret
add
add
jge
push
mov
xchg
ret
mov
xor
test
add
jbe
inc
add
lds
nop
nop
jae
jl
sti
mov
mov
add
repnz
nop
nop
jae
jg
mov
add
xor
mov
xchg
ret
pop
rolb
sub
inc
ljmp
pop
clc
repnz
nop
nop
jae
xor
jg
add
lods
imul
repnz
nop
nop
jae
add
add
in
call
nop
push
mov
leave
nop
jmp
scas
add
mov
repnz
nop
nop
jae
leave
repz
jbe
adc
add
fisubrs
add
add
clc
repnz
nop
nop
jae
dec
add
add
add
rclb
int3
test
xor
add
add
je
xor
mov
mov
clc
repnz
nop
nop
jae
repz
jbe
cwtl
sub
add
pop
inc
add
add
rolb
iret
mov
add
push
nop
push
mov
leave
nop
jmp
movsb
mov
mov
mov
jb
push
mov
xchg
ret
add
xor
xchg
test
add
mov
addl
cmp
ret
mov
jl
add
pop
add
push
clc
repnz
nop
nop
jae
sbb
jg
inc
pop
leave
jp
push
add
pop
clc
repnz
nop
nop
jae
add
sti
add
xor
dec
lcall
addb
cmp
ret
test
add
inc
mov
jg
add
fcoms
push
clc
repnz
nop
nop
jae
iret
add
jg
test
lock
rclb
and
add
sbb
ljmp
cmp
adc
cld
nop
nop
jae
rolb
pop
jg
add
add
mov
nop
push
mov
leave
nop
jmp
and
test
jl
repz
iret
cmp
or
and
xlat
jl
add
xchg
add
add
pop
and
add
mov
cmp
int3
push
add
sub
nop
nop
jae
lods
add
add
test
add
add
add
clc
repnz
nop
nop
jae
enter
add
add
add
add
mov
cld
nop
nop
jae
enter
iret
add
sti
add
cld
push
mov
xchg
ret
test
out
pop
add
add
clc
repnz
nop
nop
jae
add
sbb
jg
ret
add
clc
repnz
nop
nop
jae
jbe
sub
stos
daa
mov
nop
push
mov
leave
nop
jmp
jg
lock
inc
sbb
sub
repnz
nop
nop
jae
add
je
cwtl
add
push
add
add
add
repnz
nop
nop
jae
pop
add
add
pop
add
jp
into
pop
mov
clc
repnz
nop
nop
jae
add
add
add
add
inc
nop
push
mov
leave
nop
jmp
test
add
iret
mov
clc
repnz
nop
nop
jae
add
jg
pop
jl
add
mov
or
repnz
nop
nop
jae
mov
arpl
add
add
adc
imul
xchg
ret
cwtl
jl
xchg
das
stos
add
mov
clc
repnz
nop
nop
jae
add
add
enter
clc
repnz
nop
nop
jae
enter
xchg
fs
add
fistpl
clc
repnz
nop
nop
jae
add
add
xor
inc
stos
mov
add
repnz
nop
nop
jae
add
das
add
stos
inc
mov
jmp
mov
scas
add
arpl
inc
add
arpl
enter
stos
add
out
daa
pop
push
mov
xchg
ret
lods
pop
add
mov
add
scas
inc
movzwl
clc
repnz
nop
nop
jae
jbe
movsb
add
xchg
scas
add
neg
push
push
mov
xchg
ret
arpl
mov
add
mov
clc
repnz
nop
nop
jae
push
add
adc
add
fistpl
clc
repnz
nop
nop
jae
add
add
inc
jbe
movsb
cmp
lea
push
mov
leave
nop
jmp
add
pop
mov
add
xor
mov
push
mov
xchg
ret
add
pop
sbb
sbb
xor
jmp
sbb
sti
add
pop
add
push
je
add
das
inc
mov
ljmp
mov
mov
fs
add
sub
shr
push
push
mov
xchg
ret
add
test
add
add
je
mov
push
mov
xchg
ret
add
add
push
ret
add
addl
je
sub
xor
add
add
add
cmp
mov
and
inc
add
stos
je
mov
push
sbb
add
push
clc
repnz
nop
nop
jae
scas
and
add
iret
mov
ljmp
add
mov
clc
repnz
nop
nop
jae
add
add
xchg
jbe
add
add
nop
jmp
sbb
inc
add
adc
loope
repnz
nop
nop
jae
add
add
and
dec
mov
clc
repnz
nop
nop
jae
add
add
xchg
clc
repnz
nop
nop
jae
inc
add
rcrb
lods
add
add
in
cmc
test
rolb
shr
add
add
flds
dec
add
daa
lea
add
nop
jmp
add
add
call
push
mov
xchg
ret
add
rolb
iret
pop
ret
or
inc
add
add
test
add
push
mov
xchg
ret
jl
sbb
mov
pop
add
nop
push
mov
leave
nop
jmp
ljmp
add
clc
repnz
nop
nop
jae
add
subb
arpl
daa
and
nop
push
mov
leave
nop
jmp
test
add
mov
add
mov
loop
push
mov
leave
nop
jmp
mov
jg
lods
add
push
mov
xchg
ret
mov
sti
out
movsb
jbe
je
lods
push
mov
xchg
ret
and
mov
mov
je
add
xor
and
nop
nop
jae
add
add
xor
inc
add
data16
add
dec
add
push
mov
leave
nop
jmp
xor
inc
add
je
add
add
clc
repnz
nop
nop
jae
repz
add
add
jo
xor
sbb
xchg
pushl
nop
push
mov
leave
nop
jmp
add
xor
sbb
add
add
repnz
nop
nop
jae
jl
repz
lods
inc
add
call
clc
repnz
nop
nop
jae
leave
add
add
add
flds
arpl
and
mov
jl
add
jns
clc
repnz
nop
nop
jae
add
scas
test
mov
das
jl
cmp
fmull
rcll
mov
xchg
ret
jl
add
movsb
add
out
movsb
clc
repnz
nop
nop
jae
add
jno
add
add
mov
nop
push
mov
leave
nop
jmp
add
add
fs
add
clc
repnz
nop
nop
jae
pop
movsb
add
jbe
jbe
jbe
movsb
bound
punpcklwd
repnz
nop
nop
jae
add
mov
repz
pop
in
fistl
inc
add
add
out
push
jbe
jl
pushf
push
add
add
add
fidivrs
jbe
inc
fistpl
clc
repnz
nop
nop
jae
add
lock
inc
jp
nop
push
mov
leave
nop
jmp
mov
iret
sbb
lahf
shl
clc
repnz
nop
nop
jae
add
add
jbe
sub
pop
dec
nop
push
mov
leave
nop
jmp
add
adc
iret
pop
push
mov
xchg
ret
add
fs
ret
add
sbb
rclb
fiadds
and
add
stos
enter
iret
stos
xor
push
push
clc
repnz
nop
nop
jae
add
push
mov
rolb
pop
jne
nop
push
mov
leave
nop
jmp
mov
add
mov
clc
repnz
nop
nop
jae
add
sti
and
add
add
decl
mov
xchg
ret
lods
pop
add
test
add
pop
lret
push
clc
repnz
nop
nop
jae
add
add
add
add
add
clc
repnz
nop
nop
jae
mov
add
add
add
cld
inc
add
sti
and
add
arpl
imul
clc
repnz
nop
nop
jae
add
add
pop
mov
xchg
mov
clc
repnz
nop
nop
jae
add
movsb
jg
addr16
clc
repnz
nop
nop
jae
add
inc
xchg
add
add
mov
push
mov
xchg
ret
das
sti
jp
add
add
add
add
fwait
mov
clc
repnz
nop
nop
jae
mov
add
adc
add
leave
cld
push
mov
xchg
ret
pop
add
add
insb
add
mov
leave
nop
jmp
inc
add
jp
das
mov
clc
repnz
nop
nop
jae
je
cwtl
ret
rolb
add
add
clc
repnz
nop
nop
jae
add
add
xor
jnp
pusha
inc
add
lods
sbb
sub
add
clc
repnz
nop
nop
jae
xchg
add
mov
sbb
add
repnz
nop
nop
jae
add
fs
mov
add
push
push
mov
xchg
ret
pop
add
ljmp
and
scas
in
xor
clc
repnz
nop
nop
jae
dec
xchg
ret
add
sti
pop
push
add
test
push
mov
leave
nop
jmp
jno
add
push
add
sub
push
mov
xchg
ret
lock
jbe
jbe
lods
xor
jl
xchg
mov
clc
repnz
nop
nop
jae
shl
sbb
add
clc
repnz
nop
nop
jae
add
add
sbb
add
pusha
add
fimull
add
jne
les
clc
repnz
nop
nop
jae
add
sti
add
jbe
add
jl
add
ret
add
nop
push
mov
leave
nop
jmp
add
ljmp
sti
xchg
mov
add
insb
divl
mov
add
inc
jnp
push
aad
mov
push
xchg
add
call
clc
repnz
nop
nop
jae
pop
add
lods
dec
add
outsb
add
test
in
clc
repnz
nop
nop
jae
add
add
sub
sarb
jno
rcrb
repnz
nop
nop
jae
add
mov
add
aaa
push
push
mov
xchg
ret
add
add
jno
add
dec
add
xor
push
mov
xchg
ret
sbb
add
xchg
add
lods
add
mov
cld
nop
nop
jae
movsb
mov
addb
and
clc
repnz
nop
nop
jae
add
add
iret
add
loop
xor
cld
nop
nop
jae
add
jl
add
lods
lahf
je
clc
repnz
nop
nop
jae
sbb
movsb
sbb
sti
sbb
cld
nop
nop
jae
add
add
mov
add
add
add
adc
sahf
mov
cld
nop
nop
jae
add
add
das
add
jbe
add
std
clc
repnz
nop
nop
jae
mov
mov
adc
repnz
nop
nop
jae
pop
add
add
pop
add
pop
add
mov
adc
repnz
nop
nop
jae
pop
add
add
mov
sbb
call
clc
repnz
nop
nop
jae
jbe
mov
jp
xor
jo
adc
test
repnz
nop
nop
jae
add
add
add
sti
jg
add
or
add
repnz
nop
nop
jae
add
repz
add
mov
clc
repnz
nop
nop
jae
sbb
pop
push
add
nop
nop
jae
enter
mov
add
clc
repnz
nop
nop
jae
dec
pop
ljmp
add
add
mov
adc
repnz
nop
nop
jae
add
add
out
mov
cmpsl
je
clc
repnz
nop
nop
jae
add
sti
pop
fs
xor
mov
clc
repnz
nop
nop
jae
and
ljmp
add
leave
push
clc
repnz
nop
nop
jae
add
and
pop
and
call
clc
repnz
nop
nop
jae
stos
and
xor
iret
das
sti
loope
clc
repnz
nop
nop
jae
add
scas
add
mov
sbbb
or
xor
xchg
repz
clc
repnz
nop
nop
jae
sti
mov
cwtl
dec
call
clc
repnz
nop
nop
jae
add
add
dec
add
sbb
repnz
nop
nop
jae
add
add
mov
xchg
fld1
clc
repnz
nop
nop
jae
add
sbb
je
pop
call
clc
repnz
nop
nop
jae
add
je
add
add
dec
rep
clc
repnz
nop
nop
jae
add
push
pop
pop
add
fistpl
push
mov
xchg
ret
pop
arpl
add
lods
pop
or
mov
call
inc
add
add
add
add
add
add
mov
repnz
nop
nop
jae
xchg
xchg
pop
iret
xchg
mov
test
add
add
repnz
add
int
pop
js
add
lret
inc
nop
push
mov
leave
nop
jmp
add
jg
sub
add
add
cld
nop
nop
jae
add
test
mov
push
mov
xchg
enter
scas
add
inc
mov
lea
loopne
xor
aam
popf
add
nop
push
mov
leave
nop
jmp
mov
and
roll
clc
repnz
nop
nop
jae
jg
adc
add
insb
add
pop
push
mov
xchg
ret
sub
mov
add
lods
add
cmp
mov
xchg
ret
add
fs
jg
add
push
push
mov
xchg
ret
pop
sbb
add
add
jbe
and
mov
xchg
ret
add
add
add
stos
add
pop
jbe
std
movzwl
nop
push
mov
leave
nop
jmp
add
pop
jl
add
rolb
cmp
int
clc
repnz
nop
nop
jae
add
repz
repz
add
mov
lock
div
nop
push
mov
leave
nop
jmp
xor
add
add
add
mov
mov
add
fistpl
push
mov
xchg
ret
add
pop
add
add
leave
add
sub
je
sub
adc
cmp
ret
add
scas
add
das
call
clc
repnz
nop
nop
jae
je
movsb
sti
add
add
jg
test
cld
nop
nop
jae
sbb
add
mov
push
clc
repnz
nop
nop
jae
out
add
mov
and
dec
leave
mov
nop
push
mov
leave
nop
jmp
pop
test
add
je
sbb
mov
xlat
mov
clc
repnz
nop
nop
jae
pop
and
add
enter
dec
add
clc
repnz
nop
nop
jae
test
add
inc
jg
dec
add
nop
push
mov
leave
nop
jmp
and
add
xor
and
clc
repnz
nop
nop
jae
stos
das
add
jg
add
and
clc
repnz
nop
nop
jae
enter
add
add
add
dec
push
mov
xchg
ret
add
add
arpl
stos
add
or
nop
push
mov
leave
nop
jmp
add
sbb
and
pop
push
add
clc
repnz
nop
nop
jae
ljmp
add
orb
add
daa
pop
test
ror
pop
mov
xor
add
testb
xchg
sub
push
mov
xchg
ret
pop
add
add
add
and
clc
repnz
nop
nop
jae
mov
jno
mov
add
clc
repnz
nop
nop
jae
add
add
add
clc
repnz
nop
nop
jae
and
jg
add
jbe
add
ret
pop
clc
repnz
nop
nop
jae
arpl
add
add
add
mov
sbb
push
mov
xchg
ret
add
xor
jg
inc
add
arpl
mov
clc
repnz
nop
nop
jae
mov
mov
rol
add
leave
jne
and
nop
jmp
add
sbb
add
mov
xchg
ret
add
add
dec
inc
add
mov
clc
repnz
nop
nop
jae
add
test
adc
add
add
sahf
lea
clc
repnz
nop
nop
jae
mov
add
jp
ljmp
push
mov
xchg
ret
xor
enter
mov
and
addr16
clc
repnz
nop
nop
jae
add
pop
sub
xor
mov
inc
add
scas
pop
ret
add
sti
sub
mov
xchg
ret
add
pop
mov
test
xor
xor
repnz
nop
nop
jae
pop
add
pop
pop
enter
pop
inc
jl
stos
cmpsb
mov
in
add
add
clc
repnz
nop
nop
jae
scas
je
sbb
ret
add
xorl
clc
repnz
nop
nop
jae
add
sbb
add
push
mov
xchg
fs
in
aam
add
jns
jns
cltd
cmp
add
add
adc
push
mov
leave
nop
jmp
mov
add
add
add
push
add
jmp
nop
jae
pop
movsb
add
add
mov
in
clc
repnz
nop
nop
jae
addb
add
sbb
push
mov
xchg
ret
scas
xchg
add
out
add
add
pop
clc
repnz
nop
nop
jae
add
add
rolb
rolb
xchg
push
rep
clc
repnz
nop
nop
jae
add
add
test
push
mov
leave
nop
jmp
mov
je
push
add
mov
rolb
and
add
je
add
pop
add
fmuls
add
mov
leave
nop
jmp
mov
add
sti
xor
and
push
add
nop
push
mov
leave
nop
jmp
xchg
add
add
mov
push
clc
repnz
nop
nop
jae
add
add
enter
das
add
add
aas
mov
nop
push
mov
leave
nop
jmp
add
mov
push
push
push
mov
xchg
ret
jp
add
add
arpl
add
subb
nop
push
mov
leave
nop
jmp
add
add
ja
cld
nop
nop
jae
dec
pop
xchg
jbe
jbe
jl
xchg
xchg
fistpl
clc
repnz
nop
nop
jae
add
sbb
add
test
cld
nop
nop
jae
pop
push
xorb
je
das
jmp
xchg
add
sbb
add
add
add
out
push
xor
nop
push
mov
leave
nop
jmp
add
add
push
sbb
mov
clc
repnz
nop
nop
jae
add
movsb
add
add
movzwl
clc
repnz
nop
nop
jae
add
add
add
jbe
add
repnz
nop
nop
jae
sub
jp
add
add
pop
negl
mov
xchg
ret
add
add
sub
sti
inc
jno
test
add
repnz
nop
nop
jae
enter
add
add
je
aad
rorl
repnz
nop
nop
jae
sbb
movsb
add
mov
add
stos
insl
push
push
mov
xchg
ret
add
ret
mov
lods
clc
repnz
nop
nop
jae
scas
jp
add
add
add
add
add
clc
repnz
nop
nop
jae
add
enter
xchg
nop
nop
jae
add
add
add
add
nop
nop
jae
add
add
andb
int3
push
add
icebp
mov
clc
repnz
nop
nop
jae
add
add
mov
add
add
jne
clc
repnz
nop
nop
jae
pop
add
shlb
push
clc
repnz
nop
nop
jae
sub
add
jl
je
movsl
push
push
mov
xchg
ret
scas
add
enter
xchg
push
pop
add
out
call
nop
jmp
add
das
das
jno
xor
imul
lret
clc
repnz
nop
nop
jae
mov
add
pop
pop
rep
clc
repnz
nop
nop
jae
fs
add
mov
jg
clc
repnz
nop
nop
jae
mov
add
stos
adc
push
mov
xchg
ret
push
add
add
add
mov
nop
push
mov
leave
nop
jmp
sbb
and
loop
push
nop
push
mov
leave
nop
jmp
mov
add
add
lds
test
in
clc
repnz
nop
nop
jae
sbb
lods
cwtl
add
mov
clc
repnz
nop
nop
jae
add
inc
ret
iret
add
clc
repnz
nop
nop
jae
add
sbb
mov
add
cld
nop
nop
jae
add
add
mov
fwait
rep
clc
repnz
nop
nop
jae
add
fs
scas
add
add
jae
repnz
nop
nop
jae
add
add
mov
add
nop
push
mov
leave
nop
jmp
add
pop
add
add
xor
jl
push
add
movl
add
add
add
sbb
add
jle
mov
nop
push
mov
leave
nop
jmp
scas
add
add
arpl
add
cmpb
mov
clc
repnz
nop
nop
jae
add
mov
arpl
and
mov
clc
repnz
nop
nop
jae
stos
add
and
push
pop
fwait
clc
repnz
nop
nop
jae
pop
repz
add
sbb
adcl
push
mov
leave
nop
jmp
add
or
sbb
clc
repnz
nop
nop
jae
xor
add
adc
repnz
nop
nop
jae
shlb
add
dec
add
arpl
cld
nop
nop
jae
repz
mov
pop
and
lcall
nop
jae
add
lock
add
arpl
jl
xor
dec
add
xchg
fistpl
clc
repnz
nop
nop
jae
add
add
add
repnz
nop
nop
jae
add
xchg
add
scas
mov
leave
dec
add
push
push
mov
xchg
ret
add
cwtl
add
add
add
pop
add
add
or
inc
add
clc
repnz
nop
nop
jae
je
pop
add
add
arpl
mov
cld
nop
nop
jae
add
jg
out
add
arpl
inc
add
push
push
mov
xchg
ret
jno
add
shlb
sbb
mov
push
nop
push
mov
leave
nop
jmp
xor
mov
jg
aad
mov
jge
ss
xchg
add
add
add
das
add
xor
sbb
aam
cmp
add
add
mov
push
sbb
jns
sub
fisubrs
add
ja
jg
add
add
loopne
cmpsl
inc
fcoms
in
pop
sbb
add
pop
repz
add
pop
add
add
mov
int3
data16
fdivl
add
push
add
cmp
add
add
add
add
sbb
pushf
jbe
out
push
push
mov
mov
add
push
bound
add
add
jle
rcll
cmp
data16
arpl
adc
cli
push
add
les
jb
adc
mov
icebp
push
add
sti
nop
xchg
add
xorl
inc
add
add
dec
add
insl
xchg
out
mov
loope
add
mov
aaa
push
add
sub
lret
xchg
add
ss
or
cltd
mov
add
add
pop
psraw
lods
and
inc
add
add
bound
iret
jno
lcall
pop
add
lods
movsl
sahf
add
fld
outsl
mov
xchg
xor
into
lock
pop
enter
mov
testb
add
add
ja
cs
test
jo
inc
bound
sbb
mov
out
ds
adc
cmpsb
fdivl
daa
xlat
sub
mov
mov
icebp
cmp
mov
in
and
in
test
mov
pop
add
and
loopne
outsb
add
mov
add
add
pop
mov
jae
add
sub
xchg
ja
add
pop
inc
add
nop
cmpsb
or
xchg
stos
sbb
xchg
dec
add
push
add
movsl
push
add
jne
add
push
add
cwtl
xchg
dec
add
aas
and
dec
pusha
add
jae
mov
pop
add
mov
ljmp
lock
jae
ja
add
lock
shrl
rclb
rcr
sub
xor
dec
add
test
mov
dec
add
fisttpl
and
push
add
out
pop
pop
lahf
fwait
push
and
adc
add
lahf
in
add
and
add
add
shr
scas
test
cmc
lea
popa
xor
cmp
add
or
ljmp
add
pop
test
adc
cmp
shll
sub
add
pop
aad
testl
mov
gs
mov
xchg
fdivl
add
sub
mov
hlt
daa
or
adc
xor
jo
sbb
add
lods
bts
insb
add
arpl
nop
cmp
std
xchg
sbb
mov
xchg
lcall
mov
or
mov
ret
add
add
jp
xchg
in
gs
outsb
add
sbb
sub
sub
sti
push
add
cli
mov
jge
add
add
lcall
aad
shlb
sahf
loope
add
add
add
add
cld
repnz
mov
pop
add
cli
and
sub
sub
lea
add
cmpsb
mov
rorl
add
out
scas
push
add
mov
and
movsl
js
push
cmp
ret
add
pop
scas
js
outsl
xor
test
cmp
push
cmc
into
dec
add
mov
dec
or
and
adc
and
aas
loop
adc
sub
add
pusha
add
add
lret
loopne
add
add
add
add
add
clc
inc
add
bound
xor
add
or
pop
add
dec
add
hlt
sub
add
add
js
xchg
mov
bsf
xchg
aad
push
add
mov
cltd
xor
dec
sbb
in
aaa
jo
mov
adc
jecxz
add
pop
push
add
leave
mov
add
sbb
add
push
add
inc
stos
add
iret
test
and
push
add
bound
or
add
mov
add
fsts
jl
inc
add
lcall
arpl
add
les
imul
sbbb
jecxz
addl
scas
aad
push
add
leave
xor
mov
adc
sub
dec
rcrl
add
in
stc
cwtl
mov
add
out
push
push
add
push
out
stc
pop
add
xlat
add
push
add
sbb
push
add
out
add
xor
les
add
test
cmp
data16
cmp
adc
mov
js
add
je
stc
bound
jg
inc
add
mov
divl
add
and
jmp
add
addl
add
dec
das
ret
add
inc
add
push
add
rclb
push
movsl
cmpsl
dec
mov
add
mov
mov
bound
push
loope
lret
jno
add
mov
cmp
jnp
mov
sub
mov
pop
sbb
or
mov
sub
stos
xchg
add
add
outsb
add
outsb
add
mov
sub
add
enter
add
add
xchg
cwtl
jmp
add
add
add
add
mov
add
cmp
xchg
mov
add
sbb
pop
jle
push
outsb
add
sub
add
mov
inc
add
add
xchg
jp
div
or
add
add
loop
pop
and
or
dec
add
add
cmpsl
aam
mov
add
xor
add
call
movsl
cmc
pop
mov
pop
add
add
xchg
ret
out
idiv
or
lret
dec
or
movsb
push
add
out
xchg
adc
les
add
mov
jl
fisubrl
add
add
loopne
stc
imul
cltd
pop
mov
push
lods
pop
movsl
jp
add
add
pop
repnz
cmp
add
leave
cmpsb
mov
cmp
pushf
inc
inc
jp
xor
loopne
and
cmp
addr16
inc
add
data16
or
mov
mov
ljmp
jns
je
int
test
add
dec
pop
add
push
add
add
out
add
and
ljmp
add
xchg
add
insb
add
jge
mov
push
add
jbe
popf
je
mov
leave
sbb
insb
add
lods
lahf
add
inc
add
sub
scas
jmp
xlat
dec
jnp
add
add
add
mov
add
dec
push
mov
push
mov
and
rol
arpl
dec
add
inc
inc
add
jbe
sbb
mov
mov
sub
shrb
add
push
add
jmp
cwtl
or
pop
push
mov
movsl
gs
inc
add
sub
pop
cltd
mov
and
mov
add
push
enter
cmp
mov
xor
popa
jle
add
daa
mov
rol
or
sahf
and
sahf
cwtl
mov
imul
add
xor
loop
test
add
add
sbb
dec
add
push
mov
cmpsl
push
or
push
add
add
in
imul
add
add
xchg
dec
mov
andl
jl
push
add
in
mov
push
divl
imul
in
mov
add
jno
add
inc
add
sbb
add
jbe
addr16
add
fcomp
stos
sub
jo
enter
stos
and
jl
mov
add
sub
outsl
leave
ljmp
mov
mov
or
nop
push
lahf
clc
add
fidivrs
mov
jnp
add
jne
add
mov
les
aaa
sahf
in
lret
repz
mov
add
mov
in
iret
nop
jge
sbb
cmp
sahf
push
push
dec
cld
outsb
add
add
add
outsl
sub
cmc
jp
mov
fldt
sub
cmpsb
mov
and
mov
loopne
fcoms
add
push
inc
add
add
xchg
add
sub
test
sbb
sti
mov
in
add
and
xchg
lahf
push
add
ja
add
pop
add
mov
xchg
sahf
pop
ds
fdivrs
add
or
mov
add
int3
repnz
lret
aaa
fcmove
push
add
xchg
add
push
add
add
movl
add
jbe
pop
add
cmpsb
xor
lcall
xor
jmp
imul
insl
test
xor
lods
data16
vunpcklpd
insb
add
mov
movsb
mov
add
out
dec
add
dec
add
pop
cmp
mov
fstpt
mov
test
pop
mov
add
js
xor
pop
jbe
fidivs
outsl
enter
add
xor
adc
int3
imull
adc
sti
dec
add
push
mull
add
and
jmp
xchg
fisubrs
xchg
xchg
jnp
iret
add
add
xor
jg
ja
sahf
fsub
and
icebp
bound
push
add
icebp
xor
dec
test
cmpsb
mov
lods
loopne
add
fcom
mov
jb
aad
add
add
add
int
add
or
popa
mov
js
test
fsubl
cmc
out
add
divl
dec
add
pop
repnz
je
push
push
add
jmp
aam
add
pop
add
pop
and
pop
xchg
pop
add
mov
add
sub
and
add
repnz
insl
or
icebp
xchg
sbb
sub
dec
push
add
loope
pop
les
movsl
dec
cmp
jne
add
push
add
mov
add
ret
sti
fisttpll
add
xchg
and
inc
enter
movsb
pop
mov
fnstsw
sub
sti
or
mov
or
sbb
fimuls
insl
mov
xor
mov
test
or
add
sub
xchg
loop
sarb
or
add
push
add
add
add
insl
push
in
add
repz
ret
xchg
shll
lea
xchg
test
inc
add
mov
add
fimuls
sbb
repnz
lret
add
cmp
mov
sub
xchg
psubd
leave
aam
sbb
lods
mov
sti
cmp
insl
rorb
leave
loop
mov
mov
or
or
sub
sub
aas
xchg
mov
pusha
add
add
outsl
mov
add
mov
xor
push
xchg
loopne
mov
add
mov
add
js
movl
stc
sub
add
xor
pop
xor
push
shl
add
jp
test
add
add
lahf
movsl
xlat
shll
cmpsl
or
test
mov
add
add
sti
mov
add
adc
add
out
js
ret
add
in
cmp
cmp
clts
add
cmp
cmovae
lods
push
xor
xchg
ret
inc
pop
xlat
movsb
pusha
add
add
add
add
cmp
clc
shll
or
jmp
xchg
inc
add
sbb
and
and
push
add
icebp
jp
sub
mov
adc
cmp
push
mov
and
mov
and
dec
insb
add
xchg
pop
add
add
add
push
add
test
lret
shl
dec
lahf
popl
popa
cmpsb
in
cmp
stos
sub
imul
sbb
int
add
cltd
push
cwtl
movl
add
and
adcb
fistl
add
aas
pop
add
add
sbb
test
add
out
lea
add
xor
pop
stc
jle
shll
sarb
pop
add
out
xor
mov
add
rcll
mov
lret
dec
add
stc
and
pop
mov
add
ret
sub
mov
sti
or
add
mov
cmpsl
jge
pop
pop
lret
fisttps
stc
mov
scas
inc
or
cld
in
dec
mov
movsl
and
lahf
cmpsb
adc
repz
data16
add
push
add
pop
mov
mov
test
add
arpl
popa
add
scas
enter
mov
xor
cmp
stos
dec
int3
stc
shll
add
out
lahf
cltd
pushf
mov
ror
add
add
jo
ret
fcom
push
add
add
add
add
test
dec
dec
add
add
ja
xor
lret
inc
dec
add
add
scas
sub
in
mov
add
fcompl
dec
stos
mov
add
add
add
outsb
add
stc
in
pop
popf
fildll
add
mov
sub
push
adc
test
loop
add
add
add
int
add
add
scas
mov
add
sub
mov
add
jp
fiadds
aam
fsubrl
add
call
adc
lds
lea
sbb
jmp
ret
sub
mov
inc
add
mov
add
lods
loope
shll
add
mov
push
add
rolb
lea
lahf
sti
sub
add
xor
add
fucomp
pusha
add
dec
inc
add
stos
fidivrl
and
add
jbe
adc
sti
add
shrl
out
xchg
sbb
sub
pop
mov
add
je
test
orb
add
subb
add
xlat
add
push
jg
nop
addr16
add
fsubrl
cltd
dec
add
add
leave
xor
adc
xor
rclb
pop
add
pop
aas
push
add
add
add
or
add
add
out
fwait
add
test
orl
jg
mov
jnp
mov
xor
ret
stos
sbb
mov
jecxz
aas
loope
mov
sbb
fnstenv
add
imul
or
fimuls
add
jp
or
add
add
push
je
cmp
enter
ret
stc
sahf
pusha
add
add
dec
mov
push
cmpsb
fwait
cwtl
enter
rcll
iret
bound
jle
ljmp
data16
sbb
cmpsb
cld
cmp
adc
adc
mov
mov
dec
add
cmpsl
inc
push
add
jmp
and
xchg
dec
jg
add
add
test
add
push
xlat
xor
cld
cmp
push
add
dec
add
mov
add
xor
sahf
pop
into
push
add
add
add
jne
add
adc
inc
add
dec
add
cmp
aaa
mov
imul
push
hlt
sub
dec
fdivp
mov
dec
add
shrb
add
add
sbbb
sbb
negl
rorb
scas
aam
outsb
add
add
sarb
push
add
xchg
or
and
cltd
jmp
add
adc
fimull
mov
arpl
leave
pusha
add
add
imul
add
add
add
aam
mov
lcall
or
daa
push
cmc
mov
pop
add
add
fwait
ja
sbbl
pop
sarb
das
cmp
inc
fwait
sbb
xor
pop
lcall
inc
add
sti
jge
push
add
ljmp
add
add
inc
add
xchg
mov
xchg
imul
xlat
repz
imul
adc
push
lods
ret
and
cld
fldl
out
mov
pushf
pushf
mov
xchg
jle
loop
sub
add
jbe
pushf
mov
or
negb
mov
neg
or
in
test
test
pop
add
pop
push
ret
add
xchg
sub
fimull
or
jmp
inc
dec
sbb
in
inc
add
add
outsl
mov
xchg
adc
ret
cmp
lahf
mov
mov
std
cmp
push
add
jmp
pop
push
add
fwait
inc
add
add
ret
lret
test
push
ficoml
add
mov
or
add
fidivs
add
add
jae
sbb
sbb
js
in
pop
adc
add
mov
xchg
insl
inc
les
shll
xor
in
outsl
cmpsb
ret
xchg
aad
inc
pop
mov
sarl
imul
add
dec
mov
add
push
sub
xor
add
out
test
pop
outsb
add
pop
add
add
add
fnstsw
or
cmp
push
push
jo
aaa
icebp
icebp
out
lock
add
or
add
and
cmp
out
xor
pop
ret
jno
lcall
into
sub
xlat
addr16
lcall
add
imul
add
jns
stc
scas
out
add
xor
test
push
add
mov
add
add
scas
jo
mov
add
add
and
mov
inc
add
outsb
add
adc
inc
add
test
add
xor
enter
loope
xlat
dec
addb
ljmp
add
mov
add
add
add
add
add
shl
fdivr
data16
add
dec
add
add
popa
in
xor
pop
lret
repnz
adc
roll
shrb
in
sbbl
pop
aam
rcl
sub
test
cmp
out
outsb
add
inc
add
or
jp
faddp
mov
sbb
inc
and
test
push
sbb
add
xlat
movsb
nop
inc
mov
add
push
add
cld
rorb
and
ja
sbb
fildl
xchg
fidivs
orl
add
lock
xor
movdqu
mov
sub
popa
xchg
jo
and
fwait
sti
push
cmp
jg
xchg
stos
nop
adc
dec
mov
outsl
lcall
mov
sti
xchg
mov
icebp
xor
xor
adc
add
sbb
out
leave
push
jae
add
add
prefetchnta
cli
inc
jge
je
adc
inc
mov
push
add
movl
inc
add
dec
add
add
or
sbb
xor
xor
fldl
imul
js
jno
add
loope
add
popa
sub
mov
mov
or
pop
add
add
mov
jno
mov
add
cmpsb
or
or
sub
and
jae
add
add
jmp
fisubs
add
stos
imul
push
add
lds
add
push
jle
pop
movsl
lock
jecxz
daa
into
mov
add
dec
add
rcll
fdivs
add
add
outsb
add
add
imul
loopne
add
sbb
lods
inc
jo
xchg
dec
loop
add
add
cmp
pop
add
and
mov
xchg
cmpsl
push
add
ljmp
sbb
mov
jne
imulb
add
ljmp
ficomps
mov
clc
pop
adc
add
push
pop
ret
jle
jl
jge
jnp
lock
add
and
or
test
imul
sbb
psubusw
mov
add
dec
add
add
loop
cmpsb
into
push
add
dec
mov
xchg
bound
mov
sub
pop
cmpsl
lds
sub
cmc
mov
inc
stos
add
xlat
test
outsl
ror
outsl
hlt
mov
in
add
pop
add
mov
pop
mov
add
popf
mov
mov
xor
cmc
add
sub
add
sub
aam
mov
mov
sbb
in
lahf
in
clc
jmp
xchg
pop
add
ficompl
mov
add
add
pop
cli
aad
push
dec
add
pop
dec
test
mov
or
sbb
add
pusha
add
lds
idiv
fcomps
js
lret
jmp
adc
dec
mov
add
add
adc
jns
ja
cmpsl
les
add
out
lods
mov
lret
dec
add
mov
pusha
add
add
pop
sbb
data16
cwtl
fwait
xlat
lret
add
aas
xchg
push
sbb
jecxz
mov
or
mov
or
and
push
add
add
and
add
push
add
jg
imul
push
cltd
fdiv
jmp
mov
and
stos
sub
push
xchg
adc
xchg
jg
add
pop
add
dec
dec
mov
ficoms
loope
stos
daa
test
je
cmp
adc
data16
mov
adc
inc
sub
add
mov
jb
scas
leave
xlat
ror
inc
add
add
mov
test
lock
rorl
jnp
mov
jge
push
sbb
sub
mov
add
add
cld
mov
int3
repz
adc
dec
add
add
je
sub
enter
out
inc
fst
lods
aam
sub
stc
scas
jb
int
add
xor
fnstenv
push
add
push
adc
inc
push
add
pop
add
hlt
enter
sbb
cld
inc
add
lcall
adc
xchg
adc
inc
jns
add
and
mov
adcb
or
dec
add
inc
add
add
imul
or
jl
int
add
inc
popf
fnstsw
jae
pop
sub
dec
add
xor
or
or
mov
ds
es
in
jnp
addr16
cwtl
out
cmp
js
aad
jne
add
sub
xor
add
add
imul
imul
adc
push
add
ljmp
out
and
sub
divl
xchg
adc
inc
add
daa
push
add
in
jmp
jmp
test
add
sbb
cld
int3
rcll
mov
pop
dec
lahf
add
add
sahf
test
push
and
pop
add
add
add
popf
jb
lret
cmp
push
xchg
ja
shlb
mov
add
sbb
jmp
adc
cmpsl
or
std
mov
ficomps
add
add
inc
inc
add
popa
xchg
rcrb
lcall
add
cmc
or
lea
add
add
insl
add
add
add
add
lds
sub
pop
in
mov
add
add
stc
jne
add
fisttpll
sub
add
add
add
mov
jne
loope
jbe
xchg
add
mov
add
add
lcall
jnp
add
add
fsubl
add
mov
mov
push
add
loop
add
add
scas
jnp
add
jno
add
inc
in
sub
aas
ja
adc
mov
xchg
iret
push
outsb
add
add
jle
pop
mov
ljmp
push
add
inc
add
out
add
adcl
test
add
je
inc
add
sbb
mov
ret
or
add
add
cmp
add
lcall
pop
add
out
mov
leave
out
mov
sbb
les
push
dec
add
outsb
add
leave
add
fldt
add
aas
data16
add
lahf
in
repz
cmp
iret
in
fdivrs
add
int
xor
stos
mov
popa
imul
call
stc
mulb
inc
pop
lds
add
jno
mov
lcall
push
add
in
movsl
jbe
pop
jle
bound
je
leave
lods
mov
mov
add
push
add
add
inc
add
cmpsl
fidivs
mov
int
js
loope
add
lds
add
add
xor
or
add
or
repz
or
xchg
outsl
pop
add
adc
cmp
lods
fisubrs
dec
add
add
addb
data16
aad
outsl
xor
add
data16
add
jns
add
inc
dec
add
or
iret
fsubrs
pop
cmp
push
add
jns
add
xor
mov
sbb
pop
add
jb
outsl
lret
les
add
mov
sti
insb
add
pop
add
lods
fimuls
jle
sbb
loopne
xor
add
or
mov
inc
nop
mov
xchg
in
add
add
subl
mov
add
add
pop
add
mov
mov
add
sub
test
ja
dec
mov
in
rolb
in
ljmp
dec
sub
push
cmp
pop
xchg
lahf
daa
and
jb
sub
add
sbbl
mov
add
loop
xchg
dec
add
lock
shl
aaa
fst
out
mov
pushf
xchg
jp
sub
fildl
sub
data16
lds
inc
add
adc
add
add
jmp
in
cmp
or
fadds
fdivp
pop
cmpsl
call
add
hlt
mov
add
popf
pop
xor
lds
leave
inc
add
sbb
xchg
pushf
divb
fsubl
push
add
xchg
icebp
lods
notb
add
mov
out
add
add
mov
xor
add
pop
lock
data16
nop
nop
mov
popa
hlt
mov
add
cmp
cmpsl
jbe
mov
mov
push
enter
add
mov
mov
add
inc
add
clc
sahf
fsubp
push
push
cmc
subl
aad
add
insb
add
push
outsl
jecxz
add
int
gs
add
aad
pop
add
or
lea
inc
add
add
dec
fidivl
js
cmp
push
add
jb
adc
sbb
in
inc
add
xchg
xlat
clc
pushf
push
sub
call
jmp
cmpsb
mov
inc
das
enter
notl
cs
inc
jp
cld
fsub
je
sub
lahf
das
in
add
add
add
clc
mov
add
loopne
mov
mov
inc
add
jb
packuswb
test
push
add
sub
insb
add
add
pop
outsl
jp
cmpsl
dec
add
repnz
mov
out
fdivrs
add
cli
sbb
xchg
xchg
jle
ja
clc
aaa
push
add
sbb
ja
lahf
clc
xchg
mov
sbb
lret
push
add
pushf
inc
add
loopne
rcr
xor
das
jns
xor
pop
add
pop
xor
add
nop
sub
and
sti
loopne
or
adc
xchg
nop
xchg
add
in
sbb
inc
outsb
add
add
add
cmc
push
add
add
stos
shlb
jl
xchg
test
mov
fucomip
das
daa
and
add
sub
cltd
mov
or
inc
add
imul
js
loopne
aad
xlat
or
add
paddq
add
or
xor
add
add
sbbb
int
add
adc
cmp
jb
sti
mov
sti
and
pop
add
incl
test
hlt
mov
cmp
insl
pop
add
add
jbe
and
add
push
add
or
jbe
data16
jl
pop
add
mov
or
in
add
add
mov
movb
out
add
add
add
add
leave
cld
adc
notl
add
jns
cld
ljmp
xchg
add
xchg
outsl
dec
mov
pop
jl
xchg
out
in
dec
add
sbb
jp
shll
add
jb
rol
push
add
mov
add
das
inc
add
add
cli
xlat
cli
and
xchg
lret
rcll
add
in
cmc
fldenv
int3
out
add
stos
push
add
push
fstl
and
aas
int
add
xor
add
pusha
add
sbb
stos
mov
loope
pop
add
add
repz
add
popa
test
jns
add
add
xor
stos
mov
add
pop
add
adc
jl
add
iret
out
pop
sbb
rcrb
add
mov
rcrl
loope
int
push
sar
div
mov
add
add
cltd
shll
push
push
addl
add
add
pop
add
jp
jne
add
sub
inc
add
or
ret
mov
inc
add
pop
add
cmp
add
add
setnp
add
pushf
cmpsl
xor
add
add
fstps
shl
inc
add
das
pushf
int
sbb
add
aam
add
add
nop
loopne
sub
mov
adc
faddp
or
dec
add
xor
mul
sti
lock
mov
add
add
test
push
add
ret
cmp
stos
adc
sub
xor
sub
sub
mov
pop
mov
lret
add
add
add
push
add
dec
jg
es
pop
fwait
gs
add
clc
inc
outsl
jae
dec
add
scas
jmp
out
pushf
mov
sbb
add
add
add
sub
je
jle
add
and
adc
out
loop
cmp
cmc
flds
test
add
add
cli
jmp
add
xor
or
ljmp
jl
in
add
mov
sarb
push
add
rcl
add
fsubrs
add
push
repz
inc
add
loope
sbb
lcall
cmp
push
mov
jmp
add
add
adc
xor
ret
add
xchg
cmpsb
xor
jbe
jbe
push
add
mov
cmc
sub
add
add
mov
or
add
cmp
add
mov
inc
dec
push
add
xchg
push
pop
add
xchg
in
add
stos
mov
add
mov
add
jnp
mov
in
xchg
cltd
or
add
push
add
out
enter
xor
sub
mov
repnz
and
dec
add
rcrb
xchg
add
aam
mov
add
add
jae
add
nop
dec
inc
add
jle
lds
das
push
and
test
jae
or
add
adcl
data16
ljmp
add
jp
shl
iret
adcl
test
sbb
dec
add
add
xor
add
push
subl
bound
or
movsb
inc
fsubp
scas
push
mov
pop
add
nop
mov
add
lret
sti
fnsave
add
or
jb
mov
sub
inc
bound
dec
add
cld
and
sub
pop
add
xor
mov
xor
push
add
pop
aam
add
add
or
fsubrs
mov
add
xchg
xor
imul
cli
and
mov
test
add
int3
jae
add
shll
repnz
fs
std
add
push
add
push
mov
orl
cmp
add
or
inc
add
add
add
mov
fiaddl
add
in
mov
jle
dec
nop
jnp
lahf
xchg
rcrb
sbb
inc
add
lcall
add
lock
mov
xchg
lcall
fistpl
pop
bound
pop
add
add
add
inc
movsb
inc
add
loopne
xor
adc
add
stc
dec
ror
push
rcrb
in
push
add
pushf
rcr
add
imul
jmp
push
repz
fst
inc
std
jl
das
je
mov
inc
xchg
incl
add
inc
add
dec
add
add
test
mov
add
push
xchg
clc
pop
add
aad
xchg
pop
add
add
add
mov
add
add
jnp
mov
jmp
jl
mov
or
push
add
xchg
xor
loope
fcmovnu
add
notl
push
add
lret
lock
add
sub
add
sbb
add
jae
popl
inc
add
shrb
mov
and
add
xlat
jmp
insl
lret
sbb
pop
mov
scas
xlat
test
add
mov
xchg
or
dec
jge
int3
js
lock
jae
jb
mov
push
shll
add
add
sub
movsb
ja
add
push
andl
mov
xchg
or
add
xor
sbb
add
pop
pop
add
lods
mov
mov
or
lds
push
mov
inc
add
sbb
scas
jne
decl
add
sti
std
pop
fisttpll
add
add
jle
and
or
add
dec
mov
push
inc
shrb
push
add
mov
leave
mov
in
inc
out
adcb
rcr
mov
frstor
lcall
sbb
add
dec
add
pop
add
and
add
xor
add
mov
ret
xorb
jne
cltd
testl
add
inc
cmp
inc
add
movq
xchg
je
lea
pop
gs
add
sbb
test
add
pop
popf
inc
push
add
mov
add
mov
xor
jne
add
data16
inc
mov
jge
subl
add
add
add
sahf
pop
add
bound
popl
les
pop
add
add
and
lahf
popf
mov
shlb
jo
test
dec
add
mov
cwtl
repnz
icebp
or
or
clc
mov
inc
add
sti
mov
in
pop
add
add
xor
xchg
daa
cmpsl
or
add
dec
fidivrl
add
add
push
add
dec
push
add
loopne
cmp
add
add
rclb
push
orl
jg
xor
sbb
jg
dec
mov
add
lea
cltd
cwtl
and
pop
add
and
lcall
xor
jbe
inc
add
fsubrl
xchg
add
pop
add
fdivrl
call
pop
sbb
int3
pop
or
cmp
pop
pop
adc
add
and
sub
xchg
mov
cmp
int3
les
jecxz
add
inc
add
add
out
inc
add
stos
push
add
add
add
test
add
je
and
les
push
add
push
add
dec
add
push
and
mov
scas
stos
sub
mov
xor
mov
add
add
popa
out
int
dec
add
out
lret
and
add
add
loop
imul
add
test
add
fsts
fimull
add
add
jne
add
xchg
mov
test
add
std
sbb
xchg
filds
int3
mov
dec
add
lahf
or
data16
outsb
add
add
das
fisubrl
jbe
inc
sub
and
jbe
dec
loopne
push
shll
add
and
add
mov
pop
cmpb
pop
jecxz
add
inc
mov
mov
add
lock
jecxz
cmp
dec
idivl
push
add
add
je
push
add
sbb
into
inc
mov
mov
adc
jno
mov
mov
in
fsubp
bnd
pop
and
sahf
dec
imul
or
adc
movsl
aam
test
dec
mov
add
jmp
out
add
pop
mov
add
jns
mov
in
add
fldt
xchg
inc
dec
mov
dec
mov
aaa
sub
cmp
in
dec
inc
shll
mov
xor
inc
xchg
and
insb
add
sbbl
mov
mov
add
add
sti
or
jo
push
mov
and
cmp
jl
adc
xchg
out
aad
xor
movsl
adc
xchg
sbb
imull
lret
mov
das
adc
test
push
add
add
adc
in
fisubrs
in
add
rcrl
add
add
imul
add
punpckhwd
add
lock
adc
loop
leave
ja
insb
add
add
add
dec
add
jno
adc
and
pop
jnp
add
loopne
inc
add
sbb
add
push
test
mov
lds
mov
sub
cli
and
dec
dec
xchg
lret
mov
fwait
out
test
add
add
pop
xor
mov
push
add
rep
xor
inc
sbb
add
data16
xlat
dec
cmp
out
imul
push
add
test
test
adc
jl
scas
xor
push
add
add
insl
subb
pcmpgtw
popa
int3
adc
mov
lret
adc
add
lods
jecxz
in
pop
es
push
add
xor
dec
add
into
movsl
add
fcoml
aam
add
in
cmpl
xchg
xlat
mov
cmpsl
jne
add
push
js
xor
fbstp
pop
add
push
add
icebp
popa
je
shlb
popf
and
xor
push
add
pop
jg
push
add
add
add
adc
add
mov
adc
out
pop
call
sbb
push
jnp
xchg
icebp
cli
push
dec
add
or
xchg
out
inc
and
daa
add
out
inc
add
les
std
aaa
mov
inc
mov
mov
out
and
pop
sbb
popa
lea
add
cmpsb
cwtl
or
adc
push
adc
jl
push
add
sbb
pop
add
add
add
lret
in
stc
lds
jle
fidivrl
mov
add
jne
jae
add
movsl
int
mov
aam
lcall
add
xchg
mov
mov
stos
jp
dec
add
xor
sub
add
clc
je
inc
jne
mov
adc
add
imul
add
dec
add
in
js
cmp
test
popa
push
add
cli
fdivrp
push
add
add
and
pop
add
and
jns
into
xchg
inc
sbb
or
add
jp
inc
mov
inc
add
jnp
add
gs
cmp
or
jae
subl
dec
fcmove
push
lcall
pop
add
add
mov
add
add
add
add
out
mov
lahf
add
bound
push
add
add
push
add
scas
pop
add
add
pop
and
push
add
add
lret
pop
mov
test
mov
xlat
adc
cmp
lcall
cli
dec
add
subl
iret
jl
pop
lret
sub
pop
add
arpl
js
pushf
and
in
and
xchg
lret
adc
or
adc
shll
icebp
xor
xchg
arpl
sbb
add
shll
lret
push
pop
jo
test
andl
insb
add
add
inc
add
adc
add
inc
add
roll
ficoml
int3
dec
add
mov
inc
aam
pusha
add
or
add
add
rcrl
pop
add
xchg
jg
add
or
into
inc
cli
shlb
push
fwait
sbb
add
add
inc
je
cmc
adc
jecxz
push
mov
jo
aaa
rorb
or
insb
add
and
mov
xchg
call
andl
xchg
add
divb
mov
push
add
repz
shrl
or
add
movsl
mov
in
and
inc
cmp
xchg
rcrb
sbb
out
add
push
fwait
out
movntps
mov
in
add
mov
push
sub
pushf
push
dec
jle
pop
popa
jl
stos
in
mov
cld
in
add
mov
arpl
xchg
and
fstpl
add
aam
push
les
sub
scas
pusha
add
push
dec
xchg
mov
add
inc
add
pushf
pop
mov
inc
add
add
sbb
adc
data16
divb
xchg
fninit
xor
pop
rcl
cmpsb
add
sub
dec
add
add
je
out
inc
add
add
les
rol
cmp
lds
add
lret
add
or
mov
push
add
pop
push
add
mov
add
mov
push
add
mov
imul
fmulp
int
mov
push
add
add
imul
iret
xchg
add
dec
push
aad
push
add
cli
faddl
pop
add
add
add
add
add
in
dec
add
add
lahf
imul
jl
pushf
data16
lds
add
mov
push
add
xchg
or
pop
push
add
insb
add
cmc
xchg
lods
out
pcmpeqd
sub
push
add
adc
add
mov
add
add
out
popf
mov
int
lods
aas
dec
out
add
in
jb
repnz
mov
add
xor
ja
mov
add
add
nop
fisubs
jne
cmp
gs
sbb
ret
pop
add
insb
add
test
loope
test
mov
adc
add
lret
xchg
pop
loop
pop
mov
push
insl
push
add
inc
add
fisubl
dec
add
mov
mov
lock
add
jp
shll
sbb
lock
lods
sbb
mov
add
add
push
add
or
xchg
adc
js
pop
dec
add
mov
repnz
ja
inc
add
loope
add
cmpsb
pop
xor
pop
mov
dec
inc
add
comiss
add
adc
mov
sub
add
orb
test
lcall
mov
repz
call
xchg
outsl
and
popf
add
cmp
sub
mov
add
lods
xor
popa
or
push
add
jb
test
xchg
inc
dec
add
roll
scas
enter
loope
bound
ret
mov
mov
outsl
pop
jecxz
popa
rolb
mov
mov
add
lcall
add
fs
push
add
add
add
and
outsl
push
add
mulb
add
cmp
inc
add
out
push
add
xchg
fwait
and
xlat
or
mov
xchg
lret
pushf
popf
inc
add
je
scas
test
aad
xchg
insb
add
add
js
pop
in
jl
rorb
dec
push
add
fndisi(8087
xlat
addl
daa
add
dec
int
cmp
cwtl
out
imul
ljmp
jo
stc
mov
pusha
add
les
cmc
imul
popa
add
rorl
hlt
sbb
push
adc
add
std
jge
jnp
cltd
pushl
mov
imul
add
xor
and
mov
mov
dec
add
sbb
aaa
adcb
roll
dec
add
mov
movb
lahf
and
jne
mov
add
or
addr16
jl
pop
std
inc
add
out
xor
mov
mov
scas
insb
add
jae
outsl
les
mov
gs
insb
add
mov
xor
aas
add
mov
add
sbb
shll
and
cmp
cmp
int3
loope
stc
loop
add
stc
inc
add
dec
add
adc
pop
push
add
cs
dec
add
xchg
and
xor
push
add
repnz
add
add
jg
loop
add
cmp
subb
push
xchg
scas
subl
add
add
or
scas
xor
push
arpl
add
insb
add
in
mov
out
repz
testl
dec
add
adc
repnz
xchg
add
sbb
add
mov
ret
xor
orl
test
imul
add
jmp
insb
add
mov
inc
add
add
xchg
in
mov
push
call
inc
add
jge
stos
adc
cmp
add
ret
add
addl
inc
pushf
cltd
loope
imulb
push
add
add
add
sub
js
inc
add
add
fnstsw
jns
mov
scas
xor
rolb
test
push
add
add
add
add
and
mov
sbb
jno
mov
iret
cwtl
mov
leave
divl
add
jb
xchg
push
add
push
pop
add
daa
sbb
dec
add
scas
popf
sub
and
dec
add
cmp
push
add
xchg
mov
jne
dec
add
add
scas
fldt
jo
pop
das
clc
stos
xchg
lds
xor
cs
cld
mov
popa
movsb
xlat
fisubrl
mov
sbb
aaa
imul
lcall
push
sub
add
scas
sbb
dec
add
push
add
sbb
xor
add
mov
jne
add
cld
nop
shll
add
arpl
pusha
add
and
aam
add
xchg
out
dec
jne
andl
bound
pop
add
shl
jo
out
fmul
int
enter
xchg
stos
cwtl
aad
loope
aaa
lahf
out
xchg
sbb
xchg
adc
test
add
lds
xchg
sub
add
and
sub
lods
adc
and
in
mov
jns
sub
add
add
pop
add
test
or
add
test
out
and
add
add
pushf
aaa
adc
add
fdivrp
or
lret
and
outsb
add
dec
add
add
cmp
aas
jge
popf
sbb
jmp
add
adc
add
dec
sbb
push
add
fwait
lds
notl
mov
push
add
movsl
cmpsb
lret
add
dec
add
adc
repnz
sbb
xor
add
out
sbb
mov
add
add
fistl
cwtl
jl
xchg
sub
pop
add
cmp
adc
dec
mov
add
push
add
add
add
mov
add
fldl
stos
call
add
add
jae
iret
sub
cmpsb
cld
mov
inc
add
stc
mov
inc
aaa
and
sub
push
add
xchg
add
mov
jnp
call
pop
add
add
dec
add
idivb
adc
data16
mov
cld
sub
dec
add
loop
iret
stos
mov
out
jo
test
out
add
pop
mov
aad
and
rclb
cmpsb
push
add
add
in
lahf
scas
mov
add
xlat
mov
scas
or
xor
jb
sbb
in
test
jbe
or
mov
pop
add
pop
cwtl
cmp
adc
xor
andl
mov
add
add
push
add
push
rorb
ret
rclb
in
jno
add
or
mov
lahf
insl
adc
cmp
pop
dec
aaa
fs
call
stos
jge
add
stc
cmpsl
push
mov
les
adc
add
mull
sar
ja
push
add
or
fidivs
pop
xor
cmpl
add
test
dec
cld
ljmp
mov
jbe
or
jl
ret
mov
add
arpl
add
push
add
call
in
inc
add
out
dec
pop
inc
add
pop
out
mov
add
fcompl
pop
mov
iret
scas
arpl
add
jnp
push
xchg
or
pop
stos
imul
add
jno
fcmovnb
add
add
loope
pushf
test
add
add
jle
inc
pop
pop
xchg
bound
adc
popa
sbb
lcall
pusha
add
mov
sahf
pusha
add
je
mov
add
adc
push
add
add
insb
add
add
pop
push
add
test
lahf
jno
and
jle
scas
cmp
add
aaa
lcall
jle
push
add
in
push
mov
add
lret
add
pop
add
mov
sub
pop
add
dec
add
adc
mov
push
rcl
push
add
add
out
clc
iret
fists
cmp
add
mov
sbb
cwtl
sub
add
into
cmp
aad
add
sbb
jo
pushf
inc
add
jbe
ljmp
mov
add
add
push
add
lret
aas
lret
dec
add
inc
loope
mov
cltd
imul
imul
icebp
push
add
push
decl
add
popl
add
hlt
xor
mov
adc
jnp
xor
sbb
add
insl
cmp
mov
and
cwtl
incl
add
lods
pop
rcrl
add
xchg
scas
xchg
je
mov
push
add
add
jbe
faddp
test
xor
cmpsb
std
and
cld
rclb
lds
cmpl
cmc
or
loop
je
jae
jmp
xchg
and
xchg
popa
xor
add
mov
jecxz
sub
mov
fwait
pop
adc
insb
add
mov
fwait
int
cmp
dec
adc
lea
sub
cmpsb
sbb
and
push
stos
divb
inc
add
xor
orl
add
sub
add
enter
jl
pop
mov
xchg
and
add
ja
add
jge
cmp
in
push
add
data16
test
add
mov
add
add
add
xor
and
lahf
test
mov
add
sbb
dec
add
pushf
repz
mov
add
xchg
insl
add
lods
bound
gs
dec
add
add
mov
insl
mov
scas
jecxz
add
xor
dec
lock
lahf
mov
inc
scas
xchg
into
cld
mov
pop
mov
out
pusha
add
test
dec
sti
rol
pop
push
aas
sbb
repz
mov
add
dec
movsl
pop
add
leave
fnstsw
add
add
jmp
add
fildll
add
mov
add
mov
or
inc
mov
aam
rcrl
add
sbb
xor
ret
mov
add
mov
add
das
jle
xchg
cmp
inc
add
add
and
sbb
push
add
jne
mov
xor
sarb
or
mov
shlb
pop
cltd
fbstp
add
adc
sti
mov
add
add
add
add
add
enter
sbb
pop
cmp
repnz
iret
jmp
dec
add
hlt
test
add
add
adc
in
movsb
cmpsl
pop
add
movsb
cmp
cmp
repz
add
sbb
inc
mov
push
aaa
push
fiadds
add
rclb
add
xchg
lods
ljmp
add
push
add
roll
data16
add
insl
dec
add
pop
pop
je
pop
cmc
fdivrp
loop
jle
pop
nop
pop
lea
add
dec
add
adcl
cltd
adcb
add
cwtl
mov
inc
add
sahf
pop
cmpsb
jg
add
pop
add
push
add
loop
add
add
push
add
mov
idivb
add
cmpb
arpl
pop
pop
mov
inc
jne
lahf
mov
add
xrstors
and
add
nop
in
add
in
add
bound
or
add
add
inc
cmc
int3
and
pop
aaa
push
sbb
push
loopne
fwait
mov
add
add
add
cmpsb
and
sbb
add
add
test
adc
cmp
stos
mov
add
popf
push
add
sahf
pop
pop
pop
add
int3
rol
outsl
cmp
xlat
lcall
add
sbb
dec
dec
lcall
add
xor
mov
and
inc
add
xchg
xor
sub
jmp
add
mov
roll
mov
sbbb
jp
fnstsw
mov
add
sub
dec
add
add
add
add
clc
pop
ja
sahf
into
shr
dec
add
sbb
inc
mov
add
xor
xor
inc
add
push
add
add
fsts
add
add
shr
ds
daa
movsl
pop
add
pusha
add
fidivrs
pop
jge
jb
ljmp
clc
add
add
add
sahf
mov
arpl
pop
add
pop
pop
mov
add
mov
ljmp
imul
imul
add
cmp
enter
add
cmp
add
add
cltd
inc
add
popf
and
and
dec
sub
dec
add
adc
stc
nop
daa
add
inc
add
popa
scas
mov
jae
add
pop
rolb
add
push
add
add
add
lods
mov
add
loop
cmp
mov
jmp
jbe
out
testl
out
sbb
xor
jnp
add
add
push
add
jae
pop
add
in
dec
add
lahf
sub
data16
pusha
add
adc
cmc
popa
mov
inc
mov
mov
cmpsb
dec
add
fiadds
add
in
fwait
dec
xorl
push
push
add
jo
xchg
inc
add
stos
sub
jns
add
add
add
stos
fadds
mov
rcll
jae
mov
data16
fwait
pop
ficompl
fdivrl
in
cld
das
ret
push
add
mov
loope
xlat
xlat
xor
pop
jo
mov
xchg
inc
and
aad
jb
cmp
cmpsb
aad
loop
mulb
mov
outsl
in
add
add
add
ret
insl
jo
xchg
clc
addr16
add
jge
sub
dec
add
jmp
pop
add
add
aaa
mov
add
mov
mov
fdecstp
or
in
sub
add
add
int
sbb
movsl
mov
arpl
add
add
add
popa
xchg
add
dec
add
pusha
add
jecxz
rorl
mul
std
imul
push
xlat
pusha
add
add
adc
sbb
cwtl
xor
push
add
jecxz
xchg
and
pop
pusha
add
idivl
add
mov
lret
add
iret
sarl
jno
push
add
add
cmp
dec
add
pop
lods
xchg
loop
pop
or
jg
add
dec
add
sbb
loope
add
add
dec
add
pop
sub
mov
add
incl
xlat
iret
or
test
add
jo
outsb
add
lcall
and
xchg
dec
aas
pop
les
ja
or
xchg
add
in
shlb
adc
cmp
sarb
cmp
mov
push
movl
add
cmp
test
add
and
sub
adc
push
pop
add
cmp
mov
jmp
add
pop
fcompl
push
add
fmull
add
add
or
fildl
lahf
xchg
jge
sub
shrb
jle
js
inc
add
out
or
xchg
jp
rclb
pop
push
add
add
add
add
and
cltd
add
mov
xor
add
mov
test
push
add
inc
mov
sbb
leave
enter
adc
add
add
add
push
add
add
push
mov
add
adc
call
loop
add
ret
mov
add
outsb
add
or
into
mov
xor
fbld
pop
loope
ret
xchg
add
mov
lods
stc
dec
add
repnz
or
jo
and
imul
repnz
stos
inc
add
test
cmp
add
inc
add
lock
sub
adc
repnz
xchg
pop
outsl
sarl
add
push
xor
and
rcrl
popf
insl
dec
push
add
add
jecxz
out
mov
sub
out
xchg
addb
call
add
add
add
pop
ret
mov
or
negl
add
popl
pop
mov
add
pop
add
push
add
imul
jle
pop
sub
lock
cmp
xchg
in
add
push
add
push
test
lds
cmp
add
add
mov
cmpsb
imul
xor
pusha
add
add
sub
fisttpll
or
enter
add
insb
add
or
hlt
add
mov
pop
cwtl
leave
repz
insb
add
add
lea
cmc
jne
test
outsl
jg
sbb
mov
jge
xchg
addr16
cld
add
ljmp
mov
xchg
sti
out
sbb
add
iret
clc
fwait
mov
cmp
sub
ret
mov
popa
sbb
push
push
add
scas
and
popf
adc
nop
push
add
sub
add
add
hlt
aam
test
inc
enter
add
push
pop
pop
add
push
andb
add
mov
add
jl
stos
outsb
add
push
add
mov
add
out
jne
mov
add
lahf
ffree
mov
scas
mov
test
pusha
add
pop
les
or
fwait
or
jle
les
and
cmp
mov
leave
les
bound
lea
mov
cmp
out
add
xchg
jae
lahf
sbb
add
add
sub
pusha
add
add
add
dec
add
xchg
pop
sbb
fnstcw
jle
push
add
lret
decb
dec
add
mov
add
hlt
pop
add
add
push
add
add
cmp
add
cmp
push
add
inc
sub
push
int
add
and
out
mov
add
push
nopl
stc
push
add
push
mov
add
add
sub
int3
fnstcw
jp
andb
mov
inc
add
scas
jne
int
dec
xor
xchg
xchg
sub
pop
add
popa
jmp
dec
sub
add
add
dec
fcoml
call
add
lods
add
add
lea
add
cmp
xor
lds
add
add
jmp
pop
add
aaa
dec
add
test
mov
mov
add
popf
dec
fisubrl
add
add
add
push
add
mov
jg
jb
mov
add
cmc
in
jle
sti
mov
add
and
xchg
inc
jns
sbb
in
mov
mov
pop
add
sahf
pop
inc
add
les
dec
and
ljmp
pop
add
add
and
je
push
add
cmp
aaa
pop
or
nop
je
add
scas
push
add
adc
mov
rolb
add
dec
add
dec
push
add
sub
lret
nop
and
cmp
jo
out
movsl
adc
push
add
add
into
inc
xchg
sub
xor
movl
sbb
stc
xchg
pushf
mov
dec
add
stc
sub
or
aaa
jmp
add
leave
cmp
movsl
push
add
mov
xchg
or
push
add
int3
daa
jl
push
add
and
push
add
and
pop
add
jg
jbe
dec
xor
arpl
scas
ds
popf
insb
add
aaa
adc
jp
sbb
rclb
add
add
out
int3
jo
sbb
inc
mov
insl
sahf
stos
jp
dec
add
loopne
loopne
add
pusha
add
pop
cltd
inc
add
cwtl
sbb
add
cmp
add
in
jne
aaa
push
sahf
lock
add
dec
divl
add
add
pop
push
add
push
add
pusha
add
add
mov
add
sti
add
mov
sub
aam
addr16
add
add
cmp
and
gs
add
and
inc
add
inc
testl
adcb
add
add
mov
mov
popl
imul
mov
add
out
es
js
jb
popa
add
faddl
stos
in
lahf
inc
add
sarb
add
add
add
add
add
add
mov
int3
ret
inc
add
pop
rep
cmp
enter
lods
xchg
add
popf
out
jl
or
pop
add
inc
add
xchg
lds
add
repnz
imul
lds
xlat
and
push
inc
add
int3
loop
add
add
mov
test
sbb
add
sub
add
add
mov
aaa
add
in
inc
add
ret
popf
in
shl
add
xor
shll
push
add
in
inc
add
add
mov
mov
add
add
dec
add
add
adc
sub
mov
add
add
jle
mov
xlat
gs
add
add
xchg
mov
div
dec
add
inc
and
and
pop
add
xchg
jp
mov
add
cmp
jle
test
adc
daa
jno
pushf
push
add
add
dec
pop
clts
add
add
push
add
add
inc
outsb
add
mull
cmp
leave
repz
sub
lods
stos
jno
leave
push
or
sbb
cmp
sarb
pop
push
pop
add
dec
add
push
int3
ljmp
fistpll
add
repz
decl
lds
ss
repz
sub
push
add
mov
lret
pop
pop
notl
fidivrl
popf
ret
add
lods
fisubrl
test
mov
sbb
and
push
add
adc
mov
cmpsl
sbb
xchg
cmc
mov
jmp
pusha
add
add
add
adc
imul
add
add
mulb
lret
mov
repnz
add
sbb
push
in
cli
xchg
int
insl
jns
aas
adcl
add
jp
in
add
or
inc
fldt
add
in
iret
fisttpl
test
mov
pop
add
in
mov
jae
add
rolb
mov
cli
dec
add
add
es
pop
add
add
loopne
push
add
ja
push
sarl
sbb
mov
add
pushf
adc
adc
mov
mov
push
add
push
pshufw
add
pusha
add
add
add
cli
mov
dec
add
add
add
or
dec
add
mov
pop
mov
add
adc
ret
mov
popf
pop
add
add
push
add
add
add
mov
mov
sbb
sbb
mov
sub
and
scas
mov
movsl
dec
add
out
imul
iret
out
add
mov
pop
add
add
add
ret
add
add
scas
jne
daa
mov
cmp
add
fbld
lret
insl
aas
nop
sahf
inc
add
movsb
add
add
int
add
bound
mov
pop
mov
xchg
jg
movsl
add
adc
add
lret
ja
stos
jno
add
add
add
ret
test
jb
stos
dec
add
add
mov
xchg
icebp
lea
mov
xor
inc
out
into
in
fiadds
inc
mov
add
pusha
add
adc
mov
push
add
inc
add
movsb
add
jp
xlat
mov
call
ljmp
pop
mov
add
bound
iret
inc
xchg
add
gs
ja
add
pop
add
stc
or
xchg
sar
test
add
repnz
cmp
xchg
and
addr16
xor
mov
jne
bound
inc
xlat
xor
adc
mov
adc
add
out
add
cmp
shrl
pop
xchg
imull
mov
les
inc
add
hlt
mov
movsb
mov
add
fsub
out
rorl
jp
aas
mov
dec
add
dec
add
bound
call
add
imul
mov
cmp
sub
mov
xchg
mov
sub
shr
and
mov
and
cltd
adc
add
mov
dec
add
sahf
out
or
fstpt
sahf
xchg
mov
add
or
jbe
add
jge
add
sbb
xchg
or
pushf
jo
in
adc
shll
rcrl
add
add
add
cmc
outsl
loope
jp
fcmovnbe
mov
add
out
add
add
lds
mov
add
or
divb
mov
push
shr
mov
add
add
push
and
data16
das
xchg
mov
or
shlb
mov
fwait
aam
add
add
sbb
or
mull
adc
movsb
add
insl
pop
add
lcall
jnp
test
add
jecxz
jns
xchg
sbb
add
pop
and
pop
add
pop
mov
add
push
iret
or
imul
dec
jmp
add
imul
imul
dec
add
pop
add
mov
jmp
pop
in
add
add
pop
add
cltd
mov
daa
fnsave
ficomps
in
add
xchg
jb
xor
cmp
add
add
push
add
add
add
rorl
add
adc
jo
sbb
adc
or
adc
pop
and
lahf
add
sub
add
mov
rol
iret
popa
inc
add
add
add
and
les
fcompl
lret
add
and
cmp
cmp
cmp
int3
pop
add
xchg
mov
add
into
dec
mull
add
pop
inc
add
pusha
add
or
jle
pop
xchg
icebp
loope
add
inc
add
add
add
push
add
repz
add
add
mov
cmpsb
int
mov
les
add
jecxz
add
add
lods
adc
add
jmp
mov
add
add
jne
sbb
rorb
jno
jle
jl
pop
stos
subb
pop
mov
and
sbb
pop
in
rcr
add
loop
movsb
cltd
dec
out
lods
mov
pop
jae
add
imul
xchg
cmp
add
add
pop
dec
add
adc
add
insb
add
out
pop
inc
in
dec
add
dec
sbb
push
cmp
add
inc
add
sti
mov
add
add
add
out
pop
jg
negl
add
push
or
jmp
add
add
cmpb
pop
hlt
dec
pop
add
je
or
jge
add
aaa
mov
add
inc
addl
add
push
add
add
xchg
mov
jno
lret
test
pop
lea
shlb
aaa
aas
aad
outsl
sub
lahf
sub
loopne
inc
add
add
jle
push
add
dec
add
dec
idivb
or
add
xchg
mov
lock
mov
mov
add
adc
jbe
imul
enter
or
xchg
repnz
add
das
lret
push
add
sahf
cmp
mov
add
push
add
into
or
xchg
int
fldz
out
push
lds
add
dec
test
mov
sub
sbb
not
add
or
fiaddl
out
mov
add
mov
xor
add
ficoms
inc
add
mov
dec
push
add
add
cmpsb
int3
negl
movsb
out
lcall
pop
push
add
dec
add
enter
add
inc
mov
in
lods
mov
leave
aam
inc
in
or
lock
xchg
imul
push
add
pop
jo
stos
push
add
xor
add
das
sti
mov
mov
rolb
add
lds
add
xor
gs
sti
ret
cwtl
rclb
add
mov
pop
add
add
mov
arpl
and
mov
add
cmc
push
add
jl
mov
loop
dec
add
pop
mov
jne
pusha
add
lods
mov
out
aaa
dec
mov
cltd
dec
mov
lods
push
icebp
xchg
pop
add
add
adc
aas
loop
mov
add
leave
push
dec
out
in
data16
call
and
or
mov
add
fcmove
ss
pushf
outsl
daa
icebp
inc
push
add
adc
addr16
add
arpl
in
ror
pop
add
xor
out
xchg
inc
add
call
jbe
xor
add
jg
add
sbb
test
imul
inc
add
push
add
data16
add
add
mov
adc
cmp
dec
insb
add
test
cmp
mov
repz
out
xor
add
cmp
add
sub
sub
out
sbb
nop
test
add
enter
add
add
inc
add
sbb
arpl
xlat
frstor
add
jo
rcr
mov
adc
add
scas
mov
nop
add
gs
ret
adc
push
add
je
xchg
sub
add
andl
pop
dec
add
shll
fbld
fisttpll
inc
add
xlat
inc
roll
add
jns
inc
pop
add
lods
arpl
inc
dec
pop
add
sub
pop
cmc
hlt
lods
add
push
or
jo
cmc
mov
add
popa
push
fwait
and
add
cli
out
add
mov
sbb
adc
lcall
insb
add
mov
ss
add
lea
add
pop
xchg
addb
ret
lds
and
lds
add
add
gs
and
fbld
inc
add
add
outsb
add
loope
das
xor
add
and
cmp
daa
push
movsb
and
js
sbb
add
stc
jle
pop
dec
add
adc
idivb
mulb
push
aas
add
jge
and
or
xchg
lret
int3
out
shll
pop
fisubrs
test
ljmp
ret
jb
add
mov
add
xchg
test
add
scas
add
pop
xor
xor
imul
cld
or
insb
add
inc
add
or
pop
mov
add
add
jl
lret
mov
data16
jo
mov
movsl
xchg
arpl
js
inc
dec
lret
pop
dec
add
pop
sub
insl
leave
jb
cmpsb
addr16
in
fsubrs
adc
add
mov
push
add
mov
imul
je
jb
sbb
dec
xor
test
pop
mov
dec
add
add
mov
int3
rcrl
popa
addb
pop
add
aam
add
add
mov
add
insl
test
pop
add
add
add
out
inc
add
xchg
aas
imul
call
add
mov
test
test
cmpsb
add
pop
inc
add
add
add
cmp
fwait
pop
mov
lock
repz
add
out
mov
add
pop
mov
imul
out
rcll
shl
add
cld
pop
xchg
add
add
sbb
out
mov
add
add
dec
xor
data16
dec
add
add
icebp
mov
adc
leave
outsb
add
es
lret
add
mov
add
mov
pusha
add
add
jecxz
add
add
lret
add
incl
ljmp
jg
sbb
sti
sub
add
pop
test
lds
add
mov
mov
add
fstl
jb
cmp
cmp
add
cli
iret
cld
ljmp
add
cwtl
inc
add
add
cmpsl
sub
inc
or
cmp
xchg
add
test
add
mov
pop
sub
imul
add
fists
add
add
leave
mov
adc
fdivrs
pusha
add
das
add
jo
mov
ja
cmpsb
or
push
dec
pop
push
or
and
dec
add
pop
add
bound
mov
add
sbb
mov
push
add
mov
xchg
outsb
add
xchg
and
adcl
das
push
clc
add
loop
int3
and
sbb
and
aam
add
add
add
mov
add
lea
lcall
push
adc
add
loopne
add
dec
add
daa
mov
popf
mov
cmp
add
mov
or
or
jl
and
mov
push
add
movsb
inc
add
add
aam
leave
sub
jg
fstpl
nop
addr16
add
add
stc
jae
and
mov
add
xchg
push
add
shl
pop
int
add
out
scas
insb
add
add
add
mov
into
and
pop
xchg
ss
or
das
xor
push
inc
pop
add
inc
add
xor
push
add
jae
adcb
add
lods
xchg
mov
jecxz
scas
inc
add
adcb
inc
add
add
push
add
jb
xor
push
sbb
jecxz
into
xor
mov
pop
sahf
imul
add
mov
mov
add
adcb
js
mov
mov
or
adc
pop
cmc
xchg
insb
add
ljmp
pushf
andb
inc
insb
add
sub
nop
add
shl
pushf
dec
dec
add
dec
and
mov
sysexit
mov
add
pusha
add
add
mov
add
decb
test
xchg
or
ficompl
add
push
mov
add
xchg
push
add
daa
sbb
push
add
pop
add
add
icebp
push
add
push
add
add
in
add
add
or
loope
fnsave
add
pop
and
stos
jb
out
jp
test
add
insl
add
or
test
mov
mov
popf
rol
xor
mov
ljmp
xchg
add
shrb
inc
add
push
std
insb
add
add
mov
inc
div
push
or
cmpsb
in
ja
insb
add
sub
lret
movsb
xchg
sbb
clc
outsl
ljmp
jb
and
shll
mov
sub
inc
mov
jle
cli
or
orb
add
add
add
cld
adc
mov
cwtl
mov
aam
add
cltd
in
xchg
test
and
enter
xchg
mov
movsl
pusha
add
pop
shl
mov
inc
push
add
add
nop
leave
add
jae
xchg
loop
add
test
add
add
pushf
mov
mov
fwait
sub
int3
pushf
popf
push
add
sbb
adc
in
sahf
lods
ror
mov
insl
jge
add
dec
sbb
inc
push
add
mov
clc
sbb
fistpll
jnp
add
xchg
pop
imul
lret
fidivrl
add
xchg
push
ljmp
sti
add
xchg
clc
push
cmp
fildll
test
add
sbb
or
and
pop
inc
loop
add
push
data16
loopne
or
in
mov
imull
loop
push
add
loopne
add
add
xchg
iret
fistl
mov
add
aas
aas
dec
add
xchg
xor
cs
cwtl
test
xlat
xchg
shll
add
mov
out
leave
nop
cmp
xchg
xor
out
in
rcll
out
addr16
or
xor
mov
loopne
lcall
cmp
outsl
fsubs
and
add
mov
inc
and
dec
add
push
add
mov
stos
or
fs
mov
ja
enter
test
add
jae
add
add
out
insl
sub
test
leave
mov
cmc
mov
mov
adc
push
add
dec
cli
stos
or
ja
xchg
inc
je
push
jmp
mov
xchg
mov
scas
sbb
cmc
cmp
add
sti
pop
subb
mov
fwait
add
add
add
add
mov
test
push
add
xchg
sub
les
ret
jmp
cmp
dec
shlb
add
hlt
push
add
add
out
or
or
add
je
pushf
sbb
inc
sbb
int
movsb
sarl
cmp
jmp
add
pop
add
flds
fdivp
repnz
mov
add
add
add
xchg
mov
rcll
mov
rcr
sbb
addb
pop
icebp
jle
cmp
mov
sub
add
pop
add
pop
add
add
pop
xchg
jnp
jmp
je
dec
jo
inc
cmp
xchg
push
add
outsb
add
mov
inc
add
add
add
int
add
inc
add
add
add
mov
add
mov
sti
stc
pop
add
cmp
jae
dec
repz
sbb
jb
out
fisttps
addr16
lds
add
xchg
add
add
lcall
bound
sbb
bnd
inc
fidivl
je
cmp
aam
mov
or
or
roll
dec
add
mov
sub
repz
inc
mov
in
pop
xor
add
scas
pop
add
cli
add
imul
insb
add
fldlg2
lcall
in
out
lret
jno
mov
add
fwait
pop
int3
add
xor
add
add
add
jle
lock
pop
add
push
lahf
adc
out
sbb
mov
ljmp
or
sbb
leave
jp
insl
xchg
cmp
mov
xor
mov
dec
add
pop
or
xlat
ret
add
int3
adc
insb
add
fsubr
xor
jb
xor
mov
pop
mov
nop
mov
testl
jle
pop
jb
push
add
lods
add
mov
fcmovne
mov
sti
daa
mov
imul
jb
mov
sub
xor
pop
ljmp
jne
add
add
imul
sub
sub
mov
add
jae
movsl
xchg
sbb
and
jo
adc
add
lahf
int3
sahf
fsubr
mov
pop
or
divb
xor
cmp
xchg
sarb
jnp
add
pop
add
cld
add
add
mov
jle
sbb
out
add
sbb
add
xorb
add
push
add
add
daa
push
aam
mov
add
mov
add
mov
insl
sbb
fadds
and
add
mov
in
push
add
or
add
mov
icebp
sahf
gs
xchg
outsb
add
int
jo
fimuls
sub
mov
pop
call
out
js
sub
add
sub
mov
lds
add
add
add
add
jno
push
into
dec
add
mov
cmp
push
add
lcall
repnz
sub
adc
repz
ret
push
sahf
repnz
movsl
pop
mov
daa
cs
mov
add
and
inc
add
xchg
orb
and
js
mov
xor
ja
mov
add
js
pop
sbb
inc
mov
add
jmp
dec
mov
cli
fadds
dec
sbb
jne
push
add
mov
add
cli
into
ret
dec
add
insl
push
add
add
stos
cmpsb
xchg
repz
fists
push
add
fistl
popa
aam
add
call
pop
sub
add
push
mov
lods
mov
add
enter
add
loopne
pop
add
pushf
ret
jb
add
popa
pop
mov
xchg
insb
add
add
mov
xor
lods
call
xchg
insl
outsb
add
insb
add
jmp
add
mov
shll
push
add
mov
xchg
mov
test
ja
pop
add
emms
push
add
push
add
xor
add
dec
add
sbb
test
clc
sub
out
in
fs
inc
add
cmpsl
mov
cld
stos
jns
cmp
adc
mov
fisubrl
pop
mov
add
jp
and
cli
jl
out
jo
xchg
dec
add
mov
movsb
mov
jb
sbb
add
push
add
and
test
mov
xchg
cmp
mov
jmp
cld
sbb
gs
mul
incl
xor
int3
insl
xchg
jno
mov
testb
cltd
push
add
cld
shlb
andb
add
add
push
jl
mov
ja
nop
dec
add
add
cltd
icebp
dec
add
inc
add
dec
adc
insb
add
mov
add
adc
add
add
or
add
mov
add
sbb
shl
cmpsb
and
das
jae
lahf
int
xor
fcompl
repnz
out
pop
std
shl
cmc
sub
add
add
add
add
mov
test
dec
push
add
push
add
out
imul
into
cmc
add
sti
mov
test
xor
gs
lahf
fdiv
orl
add
adc
lret
push
add
pop
add
mov
dec
adc
jo
cmp
jbe
int
dec
add
inc
popa
sar
add
fcmovne
shlb
add
xchg
xor
adc
lods
mov
rcr
dec
add
jb
jae
and
xchg
shl
push
aaa
add
into
insb
add
mov
xlat
xchg
inc
sti
fst
push
pop
dec
add
dec
add
addr16
int3
stc
std
mov
add
insb
add
rcrb
add
sub
leave
jl
addr16
outsb
add
and
xor
sbb
sbbl
add
out
ret
add
push
add
test
add
add
push
add
clc
mov
scas
loopne
add
sub
add
cmc
data16
jge
or
xor
cmpb
adc
out
add
pop
jecxz
popa
paddq
scas
fstps
add
xchg
add
xor
xchg
pop
add
add
sbb
imul
dec
aad
jo
add
add
pop
inc
mov
hlt
mov
mov
stos
ljmp
out
in
add
cmp
test
add
enter
jmp
add
push
add
lods
inc
add
inc
cmpsl
stos
test
add
fmul
sub
aam
push
outsb
add
add
outsl
push
mov
jg
lret
lea
cwtl
sahf
lret
dec
xchg
clc
jo
fsubrl
add
mov
push
add
scas
in
xor
adc
sbb
add
sbb
cwtl
outsb
add
add
cmpsb
jmp
or
sbb
adc
in
adc
sti
xchg
andb
inc
add
out
or
mov
sti
jno
stos
jp
mov
add
outsl
repnz
aaa
test
mov
add
add
add
popf
lcall
jo
repz
add
aaa
add
add
nop
or
pop
jge
cmc
lcall
pop
mov
push
add
add
mov
add
shrl
sbb
lcall
pushl
lret
std
xchg
pop
mov
cmc
mov
lods
in
gs
and
add
inc
add
add
in
xor
cmp
jl
cmpsb
and
xorb
dec
insl
lods
sbb
push
add
mov
add
xor
arpl
mov
inc
add
mov
sbb
shl
in
jl
mov
add
push
add
add
addr16
cltd
into
int
or
xor
dec
add
dec
xchg
and
neg
std
cmp
repnz
bound
or
add
jns
mov
add
jge
bound
int
bound
xchg
add
add
adc
xchg
outsl
insb
add
jno
mov
lea
push
outsl
dec
add
fldl
cld
add
mov
cmpsl
imul
add
inc
add
lock
add
scas
data16
test
push
add
mov
or
push
iret
sub
inc
clc
push
add
mov
lds
rcll
iret
adcl
push
inc
add
xor
add
ss
jbe
test
in
mov
imul
add
add
xchg
mov
arpl
pop
stc
or
in
inc
jl
mov
stos
pop
mov
into
scas
out
mov
push
inc
mov
add
mov
mov
adc
xchg
push
push
mov
insb
add
pop
add
add
add
xchg
inc
sbb
inc
add
and
pop
add
dec
aam
jo
sti
inc
add
std
cltd
add
add
cmc
fisttpl
adc
mov
repz
add
add
fistpll
leave
jg
add
sub
add
das
mov
insl
scas
scas
in
popa
inc
add
add
push
add
arpl
push
xchg
icebp
and
ret
push
add
inc
sub
mov
sbbl
adc
dec
push
call
add
mov
int3
lods
rcll
push
test
in
mov
add
in
ljmp
in
gs
jae
dec
add
adc
stc
xchg
ret
add
xor
fistpll
dec
ret
add
roll
cmc
lret
add
ja
orb
adc
loopne
sbb
or
mov
into
mov
xchg
das
in
jge
mov
add
mov
out
loop
stos
js
arpl
ds
jg
add
popa
xchg
mov
fcom
cld
popa
icebp
adc
mov
outsl
push
pop
add
add
cltd
addb
sbb
or
fcoms
add
and
sahf
out
sub
add
push
add
add
sub
sub
xchg
stc
sub
and
add
or
add
repnz
inc
xor
cmp
movsl
mov
add
lea
rol
in
dec
add
cwtl
inc
outsb
add
rolb
sub
add
lods
xor
dec
pushf
add
add
add
loop
nop
push
inc
add
adc
rclb
or
add
testl
add
lods
sub
lahf
mov
xchg
leave
inc
icebp
popl
aam
add
stc
mov
xor
xchg
adc
add
jne
das
cld
pop
push
add
scas
adc
sub
ror
aaa
loopne
into
les
jecxz
sub
loop
push
add
add
add
mov
add
add
add
sbbl
pop
add
icebp
ljmp
jp
mov
adc
loopne
add
and
add
out
clc
mov
add
and
add
popa
or
and
mov
outsl
mov
adc
add
add
xor
add
xor
inc
add
xor
into
adc
mov
adc
add
movsb
jae
outsl
movsl
imul
add
popa
inc
add
jae
add
add
leave
ss
iret
pushf
cmp
jo
ret
push
in
add
dec
add
lds
push
add
add
sbb
add
orb
fimull
out
sub
add
xor
mov
mov
add
add
mov
xor
adc
pop
add
dec
add
pop
aad
test
add
add
xchg
cmp
xchg
sbbb
add
add
mov
xchg
mov
add
or
sub
divl
jl
movsb
rol
jp
fwait
lea
icebp
pop
add
add
add
fisubrs
rcl
mov
sbb
test
aad
mov
addr16
mov
sub
scas
movsb
xchg
clc
jb
lahf
or
pop
and
aaa
repnz
xchg
pop
inc
add
jle
jno
xchg
adc
xor
jp
mov
js
les
add
add
divl
adc
aad
add
jnp
add
loope
xchg
inc
add
mov
out
xor
push
or
repz
push
popa
xor
dec
add
pop
add
cmp
push
das
ret
mulb
mov
ret
jle
jmp
push
add
lods
aad
in
add
inc
add
stc
xor
add
add
add
add
aaa
call
jns
mov
pusha
add
mov
roll
add
shl
int3
nop
inc
add
add
add
mov
add
pop
arpl
in
inc
sbb
je
mov
adc
divl
iret
jo
jmp
jecxz
add
or
and
adc
mov
add
dec
add
hlt
push
add
sti
xchg
lods
cmp
imul
movsb
xchg
jecxz
cmp
add
lea
xor
mov
xor
pop
popf
mov
add
sub
je
das
pop
add
int3
xlat
jge
sub
cmp
add
add
sbb
xchg
inc
add
add
add
add
test
add
iret
fildl
adc
and
and
pusha
add
loop
stos
jo
and
jns
add
icebp
fwait
aas
fwait
rcrl
add
sahf
ret
int3
inc
leave
sbb
loop
jo
cltd
add
rolb
inc
add
std
sysenter
add
inc
add
add
popa
ja
jb
inc
and
je
pop
add
add
sub
cmp
movlps
add
into
lea
adc
sahf
xchg
jecxz
add
repnz
in
add
mov
add
push
scas
cmc
add
dec
add
add
shll
xor
lods
lods
in
xchg
mov
add
out
add
pusha
add
add
scas
aaa
push
add
add
push
add
xchg
cmc
pushf
sbb
mov
pop
aad
add
and
outsl
push
add
cmpl
jg
add
sub
fisttpl
and
fstl
add
cmpsl
add
sbb
push
add
add
add
and
push
add
mov
mov
or
lods
or
xchg
nop
das
aaa
sbb
fdivp
jge
xchg
test
lcall
testl
push
fnstcw
add
add
sbb
jne
add
and
sti
adc
sub
movsl
add
pop
pop
repz
lahf
and
xor
rcl
push
cwtl
and
imul
add
sbb
push
cmp
test
add
movsl
adc
adc
or
int
add
fadds
sbb
xchg
scas
adcl
shll
mov
cmp
mov
mov
add
jg
add
pop
mov
xlat
adc
pop
mov
jmp
add
popf
and
mov
add
push
add
pop
add
xor
dec
adc
add
leave
sub
and
xor
mov
lea
lcall
xchg
xor
out
das
jmp
repnz
lock
mov
popa
add
data16
in
lret
sbb
push
add
push
sub
jns
imul
loopne
adc
cltd
je
mov
js
dec
leave
out
adc
cli
cld
test
push
add
imul
add
iret
adc
add
fiadds
mov
add
cmpsb
arpl
add
out
pop
cmpsl
outsb
add
sbb
and
sbb
jge
or
add
nop
dec
add
out
pop
es
adc
or
mov
sbb
lret
sbb
rorb
add
sti
push
add
jecxz
int3
int3
sti
pushf
add
jp
out
aas
das
inc
rcrl
out
scas
xor
mov
cmpb
or
ljmp
sbb
inc
add
les
hlt
popa
popf
dec
add
je
dec
add
add
cwtl
adc
stos
add
test
addr16
repnz
fstl
lcall
adc
mov
fimull
add
jp
sbb
mov
xchg
add
or
mov
fsub
pushf
rcll
mov
out
mov
jg
add
xchg
aad
xchg
ljmp
pop
mov
add
or
loop
xor
adc
popa
dec
add
dec
xor
add
sub
jge
add
add
sub
repnz
cmp
movsb
or
add
ss
das
int3
paddsw
aaa
cmp
cmp
popf
fisubrl
add
add
xor
out
popl
ficoml
add
pslld
fistpll
test
add
add
push
mov
add
or
mov
ja
mov
pushf
fwait
add
xchg
enter
fists
add
add
mov
add
sub
rorb
cli
mov
jb
les
add
add
cmp
out
cltd
aam
add
add
lock
mov
jb
in
add
mov
add
add
in
pop
add
cld
rolb
mov
int3
jne
add
inc
add
add
shrl
movsb
sub
sbb
pop
cwtl
std
hlt
add
dec
dec
sub
cmp
and
mov
rorb
inc
cmc
pop
add
push
aas
push
add
jp
jo
add
addb
loope
adc
add
push
divb
add
out
dec
push
arpl
loope
dec
add
dec
add
push
pushf
inc
sti
into
shlb
outsb
add
fsubrl
jge
cltd
or
add
push
nop
cmp
lahf
pop
add
fcoml
sub
popa
adc
cli
data16
cmc
pop
add
daa
idiv
push
add
add
loope
mov
push
hlt
dec
add
pop
add
xchg
pop
add
add
xchg
mov
pop
add
add
mov
add
jmp
mov
repz
add
or
leave
xor
add
add
add
mov
repnz
aas
ljmp
sbb
add
add
jp
mov
mov
pop
add
add
push
add
push
pop
add
xor
popf
pop
sahf
add
das
adc
or
mov
add
fwait
inc
add
stc
push
add
add
add
push
add
dec
add
push
fisubl
add
add
pop
push
add
aas
nop
add
pop
add
pop
cmp
aam
jae
pop
pop
jbe
repnz
jmp
imul
shlb
add
aaa
push
add
add
add
add
dec
add
aad
add
xchg
xchg
lret
or
fbstp
inc
jno
cmp
mov
in
xchg
mov
aad
xchg
or
dec
add
hlt
in
divl
mov
xchg
mov
xchg
mov
push
pop
add
push
add
add
add
add
inc
add
push
add
mov
cmp
rcrb
repnz
loopne
imul
loopne
xor
dec
add
sbb
mov
mov
pop
add
add
subl
add
add
add
sub
mov
into
pop
jg
add
cmp
push
test
ds
push
add
mov
cmp
mov
add
clc
mov
in
cmp
push
add
add
popa
movsl
dec
add
aaa
cmpsl
repz
es
insb
add
test
push
inc
add
sbb
mov
in
lahf
add
fcompp
cmp
in
cmp
popf
aad
sbb
mov
cmp
inc
add
in
jge
lods
xchg
xchg
push
pop
add
enter
adc
jno
add
cmp
std
cmp
and
rorb
repnz
div
sbb
add
insb
add
add
loop
adc
pop
into
aaa
andl
cmpl
daa
pop
inc
lods
add
rcl
push
lods
adc
jle
ret
push
add
or
lds
sub
fcmovnbe
dec
inc
add
add
xchg
jp
pop
dec
movsl
sbb
add
add
push
add
or
jo
into
xlat
scas
or
shlb
add
test
xor
cmp
stos
xchg
push
mov
push
add
add
mov
push
add
mulb
push
xor
xchg
jmp
lods
xor
sbb
stos
mov
cmp
ficompl
inc
loope
push
xor
add
jb
sti
loope
lds
outsl
stos
or
lock
stos
inc
add
xorl
sub
adc
adc
cli
negl
push
add
lea
repz
cmp
fisubl
inc
add
int3
adc
daa
adc
dec
push
test
xchg
jl
and
adc
pop
mov
add
add
add
pop
add
outsb
add
pop
movsb
inc
mov
inc
add
jnp
add
test
mov
insb
add
pop
das
mov
add
jecxz
das
fimuls
stos
jmp
adc
push
add
push
testb
add
leave
pop
mov
dec
xor
insl
in
mov
jg
add
clc
das
sbb
jl
cmp
cmpsl
xchg
xchg
enter
inc
into
cltd
fsubs
cmp
fsts
add
push
js
jmp
xor
mov
add
pop
pop
aad
pushf
mov
mov
sahf
fst
jns
nop
xchg
adcl
pop
add
jmp
inc
add
add
add
add
out
mov
fsts
iret
and
pop
stos
sbb
cmovge
mov
add
mov
mov
loopne
test
add
nop
mov
add
push
add
mov
add
pop
mov
add
add
add
xor
add
cmc
insb
add
dec
adc
mov
test
test
add
or
fwait
jl
in
add
sarl
add
cmp
leave
in
inc
add
cli
stc
xchg
in
out
push
add
fwait
cmpsl
push
add
jle
mov
insb
add
push
jbe
popa
data16
stc
cmc
ret
add
sbb
pop
inc
add
add
js
gs
addr16
test
lock
xor
adc
test
je
mov
add
imul
fwait
ret
pop
add
push
add
aas
mov
dec
dec
add
scas
test
add
cmp
sub
mov
pop
cmp
pop
add
out
dec
dec
add
push
add
xlat
scas
add
sbb
lea
add
add
add
les
int3
mov
xor
decb
add
jbe
xchg
cmp
sbb
cmp
add
mov
rolb
sub
inc
add
fs
sahf
rcll
and
cs
jae
dec
add
add
adc
repz
pop
add
loopne
add
and
call
test
dec
add
iret
dec
add
scas
mov
add
cmp
add
adc
outsl
dec
add
add
dec
add
cmpsb
adcb
leave
out
push
cmp
jne
jp
nop
fldenv
add
addr16
add
push
add
mov
add
aas
and
movsb
inc
cmp
sbb
lods
or
or
lret
add
add
jp
inc
lods
movsb
cmp
pop
add
xchg
jl
or
gs
lcall
movsb
xchg
notb
jecxz
jns
xchg
fsub
fildll
fcomi
jno
fsubs
mov
ds
icebp
push
add
out
pop
add
sbb
into
mov
inc
add
add
add
mov
add
pop
stc
insl
add
pop
mov
not
mov
add
add
pop
add
scas
fistps
dec
inc
xchg
ljmp
mov
dec
cmp
das
orb
add
stos
pusha
add
mov
sbb
adc
add
inc
add
xchg
cmp
cmp
jge
add
inc
add
xchg
ficompl
add
push
mov
sbb
xorb
add
rcrb
pop
pop
add
subb
dec
xchg
addl
ret
fadds
or
xchg
add
int
mov
add
lcall
iret
jno
inc
scas
xor
addr16
ja
cmp
dec
add
add
add
mov
add
pop
add
fiaddl
add
xor
mov
cmp
add
fmuls
add
xchg
pop
add
scas
hlt
pop
add
push
add
xchg
jo
data16
fildll
pop
add
lahf
and
mov
roll
mov
pop
add
or
mov
mov
bound
lahf
adc
xor
sbbb
test
xchg
and
jo
in
inc
rclb
loopne
scas
push
stc
adc
nop
movb
pop
add
sbb
popf
adc
cmp
insl
dec
hlt
sub
jl
outsl
out
add
cmpsb
aam
or
aaa
addr16
add
pushf
xor
daa
cmp
cwtl
jbe
jecxz
outsb
add
add
jge
add
and
test
mov
add
sbb
inc
add
add
les
or
jl
mov
lcall
sub
mov
ljmp
and
xchg
cmpsl
in
outsl
call
add
scas
popf
sbb
lods
push
xchg
jg
adc
int
push
add
bnd
add
and
add
mov
insb
add
inc
mov
inc
add
add
add
inc
add
inc
scas
jns
ret
xor
call
mov
adc
xchg
jne
outsl
push
add
add
add
add
add
add
addr16
add
fs
or
pop
stos
test
adc
inc
add
mov
mov
clc
aam
add
mov
add
andl
mov
push
add
mov
popa
or
xchg
add
add
add
xchg
jns
or
add
add
sub
adc
dec
jmp
aam
mov
xchg
mov
add
je
inc
bound
xchg
mov
add
lock
push
add
test
add
mov
add
add
gs
jle
incl
add
mov
or
push
jns
dec
clc
mov
in
lods
rorl
add
mov
dec
popf
shrl
jne
mov
and
or
jo
scas
and
push
add
mov
in
in
dec
sub
add
lret
xor
push
jecxz
add
add
in
adc
cmovl
sbb
add
cmpsl
sub
stos
mov
push
add
cwtl
push
dec
and
xchg
push
add
ss
cwtl
cmp
and
add
jp
stos
cltd
jmp
cmp
xchg
push
add
xor
inc
insl
pop
or
cmp
sub
sahf
jo
jmp
add
mov
rclb
add
add
or
push
add
jno
pop
add
add
cli
lods
mov
int3
addl
inc
or
stos
jne
dec
add
cltd
clc
into
mov
inc
adc
or
add
push
jmp
jle
loopne
add
test
sahf
inc
add
sti
adc
sub
sub
xor
add
or
aaa
fwait
subl
or
ret
dec
inc
add
sbb
mov
stos
dec
push
add
pop
cmpsl
jnp
mov
add
lock
popa
or
push
add
xchg
fcoms
cmpsl
push
add
cmp
sbb
ss
mov
stc
scas
imul
add
push
add
out
mov
add
jp
push
inc
push
add
add
pop
push
add
add
push
add
xchg
xor
or
jecxz
xchg
jno
sub
scas
push
add
push
jae
push
mov
inc
cli
sahf
jmp
jmp
test
jnp
jnp
pop
add
jl
jg
dec
or
jge
add
cmp
sbb
test
add
jg
add
pop
cmp
rorl
jne
add
mov
add
aam
add
cmp
ljmp
cmpsl
adc
add
inc
aam
sbbb
add
add
push
scas
jle
xchg
mov
aas
pop
push
add
jno
movsb
mov
push
fists
fdivrl
movsl
daa
insb
add
clc
shrb
add
add
add
int
mov
sbb
add
sub
add
adc
mov
add
add
or
stos
xchg
cmp
adc
xchg
add
lds
push
add
pop
mov
mov
add
add
add
or
add
test
sub
xlat
inc
pop
jle
shll
or
cld
movb
add
cmp
add
cmpsb
jae
mov
sub
fwait
jbe
cmpsl
cmc
cli
adc
sub
xchg
shlb
daa
cmc
jns
adc
popf
mov
and
add
fwait
or
add
in
fwait
subl
pushf
and
jno
out
fiaddl
sbb
add
movsl
xor
adc
cmpsb
mov
jns
add
adc
stos
and
aam
cmp
xchg
mov
xor
jns
cmc
jecxz
add
push
add
pop
add
pop
mov
add
xchg
mov
jnp
lock
lock
and
add
sub
mov
cmpl
and
stc
lret
push
add
shll
sbb
sub
hlt
movsl
fnsave
icebp
daa
dec
add
and
les
mov
nop
push
add
popf
popa
lods
jecxz
mov
cmp
outsl
addl
fsubp
push
cmp
add
in
call
sub
lret
jp
xchg
clc
xchg
fisubrl
add
inc
mov
cmp
pop
add
pushf
fxch
les
add
add
out
sbb
sbb
ja
add
mov
adc
lock
es
sub
add
jge
and
pop
lds
add
pop
flds
add
adc
sub
xlat
in
cmp
pop
add
add
xchg
fsubr
push
add
filds
pop
inc
add
xchg
dec
ljmp
add
or
mov
sub
cmp
and
inc
add
in
inc
test
push
enter
fwait
sti
sub
add
or
pop
add
mov
jo
xchg
sbb
test
dec
add
xor
sub
arpl
and
add
shll
mov
sub
add
mov
in
add
add
lods
nop
or
xchg
add
dec
cwtl
cwtl
dec
add
ja
fisttpl
in
jl
jo
sub
clc
test
add
inc
add
out
push
add
ret
idivb
add
add
jmp
insl
outsl
cmpsb
add
jno
les
xor
les
push
add
add
test
mov
loopne
jl
mov
aas
outsl
lods
addb
lcall
dec
push
ret
ja
add
sahf
inc
add
lods
cmp
add
lods
dec
add
add
push
ljmp
test
jecxz
add
and
nop
push
add
add
xchg
mov
jb
fs
pop
mov
adc
add
dec
sar
add
jp
and
mov
sub
js
into
sbbl
cld
ss
aaa
sub
stos
fiaddl
or
push
add
xchg
adc
xor
add
mov
ja
add
lret
out
ljmp
sub
jle
mov
add
fwait
sbb
sahf
fwait
mov
add
ja
add
aad
fiadds
add
add
mov
add
pop
out
outsl
jne
mov
add
add
add
push
add
pushl
inc
add
mov
enter
insb
add
xchg
cmpsl
push
add
cmp
lahf
jge
sbb
pop
dec
dec
lahf
inc
add
cmc
arpl
popa
push
aam
jnp
mov
mov
add
sbb
sub
xchg
cmp
add
jg
xchg
pop
push
add
jg
add
dec
jns
push
add
add
int3
jecxz
clc
jmp
add
into
sbb
adc
mull
cwtl
mov
inc
add
add
and
cmp
shrb
add
cmp
push
add
aas
cmpsb
loope
test
test
je
add
aaa
pop
sub
test
jle
nop
in
mov
std
or
sbbb
jns
arpl
or
mov
ficompl
add
push
add
push
add
add
pop
xchg
fcmovnbe
aaa
fnstcw
ss
aam
jle
test
es
aam
add
bound
fwait
mov
add
lock
jl
xchg
aas
insb
add
sbb
push
add
nop
leave
outsb
add
add
jp
lods
ficoml
out
sbb
pop
add
adcb
shlb
add
dec
add
add
cmpsb
outsb
add
dec
es
or
aas
inc
add
add
insl
mov
push
add
add
out
inc
fidivrl
xor
popa
xchg
push
xor
popf
pop
add
add
add
add
or
mov
dec
add
mov
pop
add
add
jg
aas
cmova
add
add
notb
jl
xchg
enter
imul
mov
iret
int3
mov
in
xchg
dec
pop
jbe
xchg
cmp
cmpsl
push
lret
addr16
test
add
fcmovne
and
jecxz
add
loope
jg
add
bound
and
popa
addr16
sub
aaa
jnp
repnz
add
lahf
gs
push
add
repz
sbb
mov
and
push
adc
je
mov
repz
jnp
mov
push
add
dec
add
sbb
xchg
push
add
inc
add
mov
push
add
hlt
dec
mov
hlt
mov
into
nop
rcll
fcomip
stos
stc
std
mov
adc
push
add
pusha
add
jle
js
cli
sbb
dec
add
add
leave
pop
add
mov
add
pop
pop
pop
cmp
loope
sub
cmp
mull
add
jns
pop
add
mov
inc
add
xchg
cmp
and
add
dec
add
in
cmp
xchg
xor
add
xor
add
popf
enter
add
cmp
lds
gs
sub
pusha
add
repz
sub
jo
push
add
mov
ret
xchg
sub
pop
lock
icebp
sbb
push
mov
addr16
sarb
mov
push
add
xor
mov
add
int3
stc
and
outsl
repnz
add
js
mov
add
jbe
lcall
cwtl
and
ljmp
and
fistpll
add
add
test
scas
inc
or
shlb
loop
f2xm1
rcrb
adc
imul
xchg
or
jmp
mov
inc
add
add
add
cmpsl
xorl
add
or
add
add
mov
mov
xchg
fadd
popf
inc
add
add
jmp
pop
add
pushf
js
jno
div
test
fstpt
hlt
pop
add
add
push
add
xor
xor
add
add
add
adc
add
out
xchg
je
movsl
sarb
or
in
in
add
into
out
cmpl
in
cwtl
jle
subl
inc
add
fsubr
dec
add
push
add
push
lret
or
jp
or
lret
bound
push
add
mov
add
add
adc
fcom
loop
pushf
jle
cmpsb
iret
inc
int
inc
add
cli
xor
inc
dec
add
mov
mov
push
cmp
fmull
jae
fyl2xp1
xor
xchg
cmp
mov
mov
add
mov
loopne
mov
shrl
xchg
cmp
mov
xchg
or
xchg
in
add
pop
mov
add
add
add
stos
sub
sub
mov
nop
stc
add
add
imul
fucomi
mov
cmp
xchg
dec
add
hlt
lods
xchg
outsl
or
mov
cmp
movb
dec
add
dec
add
sahf
jp
adc
cmpsl
outsl
push
imul
shl
repnz
data16
jle
and
mov
test
jge
scas
sar
add
xor
lods
rolb
add
cltd
outsb
add
pop
add
sbb
cmp
pop
outsl
dec
dec
jp
fcompl
pushf
jge
fldcw
add
add
add
add
add
sarb
push
add
or
jne
mov
adc
lock
dec
add
sbb
add
das
and
push
add
push
lods
rcr
das
xor
jo
in
pop
mov
add
scas
xchg
or
mov
pushf
jecxz
data16
sbb
cld
sub
add
jl
jl
int3
test
call
cld
sbb
sbbl
mov
movsb
lret
daa
in
add
pop
add
mov
stos
arpl
add
jns
xor
push
test
sahf
dec
add
popa
test
or
add
scas
insb
add
and
push
add
int3
out
add
lods
cld
cltd
loope
cmp
pop
jecxz
add
xchg
sub
jns
stos
mov
lahf
sub
es
add
test
out
into
aaa
cld
in
cmp
add
push
add
shlb
mov
add
sub
sbb
dec
push
add
jg
xchg
lret
bound
rorl
test
mov
cli
push
add
or
mov
imul
add
rorl
in
xor
adcb
cmp
push
add
mov
popa
fiaddl
inc
add
adc
pop
cmp
and
nop
aam
rorb
and
sbb
rcrb
jle
mov
dec
add
or
or
cmp
or
adc
pop
add
cmp
add
lret
cwtl
jno
sbb
cli
xchg
jle
add
add
call
jns
popf
cli
mov
add
add
outsl
dec
jns
add
lret
adc
add
add
test
dec
push
add
fstpt
xchg
xor
xor
add
hlt
pop
jge
or
aaa
jp
popa
jbe
or
add
xlat
test
jns
jo
pushf
cmp
leave
or
add
push
add
aaa
mov
mov
xor
push
inc
add
and
add
das
mov
nop
call
push
add
in
fadds
in
mov
fnstsw
cmp
push
add
adcl
dec
xchg
add
je
cli
int3
dec
fbstp
iret
ret
faddp
fsts
aam
jmp
cli
lea
add
ja
mov
mov
add
adc
push
add
test
dec
push
loopne
add
andb
repnz
xchg
ja
add
add
fbld
jnp
pop
inc
xchg
stos
sbb
jno
add
idiv
inc
add
in
in
sub
sbb
xor
ret
sub
js
push
add
cmp
mov
add
add
add
cmp
adc
mov
mov
ud2
xchg
pop
add
mov
add
hlt
fsubrs
popa
cmc
enter
add
add
add
add
pushf
das
out
jmp
cmp
add
in
insb
add
aaa
outsl
push
add
mov
aad
add
out
pop
into
mov
hlt
rcl
fwait
sbb
cmp
add
stc
dec
add
or
push
pop
inc
xor
inc
into
mov
lahf
cmp
push
add
dec
add
cltd
je
or
and
in
dec
xlat
cmp
sbb
movsl
inc
pushf
sub
add
add
fdivrp
pop
iret
or
mov
jns
stos
test
js
or
hlt
mov
xlat
mov
cmp
fildll
add
sbb
cmp
add
insb
add
outsb
add
add
sbb
sbb
jmp
pop
shll
sbb
fcompl
pop
into
or
and
notb
daa
push
clc
or
add
xor
jge
add
add
add
sub
fsubrp
cmpsl
add
orl
sbb
add
mov
add
add
sub
jp
shll
add
jb
aaa
or
push
add
add
cltd
or
outsl
pop
push
arpl
push
add
lds
jno
dec
jmp
sub
int
pop
adc
loop
cmp
sbb
sbb
ja
aam
dec
add
lock
rcr
push
add
aad
add
test
int3
cmp
pop
lods
inc
cwtl
mov
push
cmp
sbb
inc
lock
add
in
outsb
add
push
add
add
pusha
add
scas
push
cmp
push
add
scas
push
aaa
cwtl
ficompl
add
add
stc
mov
jno
or
rcrl
jbe
mov
add
mov
call
xchg
xor
out
mov
adc
push
push
xor
loope
add
add
in
mov
add
lret
aas
dec
std
adc
inc
sbb
and
jae
add
sbbb
add
lock
shl
sub
popf
lret
xor
sub
rcrl
add
popa
lds
mov
add
add
add
sub
add
jbe
mov
je
jecxz
adc
clc
inc
out
lret
cmpb
in
inc
and
shl
add
cltd
lret
add
add
shlb
icebp
test
add
add
and
push
add
or
test
add
add
cmp
fisubrl
das
push
add
push
mov
data16
bound
add
and
mov
xor
arpl
idiv
fwait
insb
add
cld
call
add
nop
xor
inc
add
sahf
xchg
add
add
in
das
cltd
sahf
jecxz
testl
add
add
add
add
popa
dec
add
xchg
cltd
ret
test
cmp
test
xchg
inc
add
jb
sbb
add
adc
mov
and
push
and
inc
add
cmc
or
cltd
ret
subb
push
add
mov
xchg
out
stos
pop
popa
arpl
pop
add
les
dec
stos
lds
adc
push
add
add
xchg
and
stc
mov
add
pop
jecxz
add
add
and
call
add
sbb
cmp
mov
nop
call
adc
add
add
sbb
mov
shr
push
outsl
pop
add
adc
xor
and
loope
cmc
in
add
test
jle
push
sub
sbb
jo
cmp
les
mov
add
sbb
scas
cmp
push
add
xchg
test
add
mov
add
add
push
add
add
add
cmp
xchg
cmp
mov
add
jmp
add
lea
dec
cmpsb
scas
cmpsb
jns
xor
std
aaa
int3
jle
or
cmp
xchg
mov
jge
add
in
loope
xchg
loope
and
xchg
jae
aam
mov
cli
popa
pop
lcall
rol
sub
sbb
push
add
mov
int3
mov
xchg
je
push
add
outsb
add
sub
xor
cmp
loopne
and
jmp
neg
fmuls
jle
inc
add
or
cmp
add
add
pop
mov
add
add
addr16
movsl
push
or
loope
add
and
pop
add
data16
push
cmp
mov
add
in
xchg
fsubs
sub
sbb
cmpl
and
xor
or
add
cmpsb
adc
sub
xchg
mov
add
mov
add
mov
add
or
sub
pop
jo
data16
xor
and
inc
adc
add
add
adc
jno
aas
inc
fcomp
mov
add
pop
xor
mov
xchg
repnz
sub
sub
xor
hlt
adc
gs
mov
idivb
add
pop
sbb
into
xor
hlt
lcall
enter
push
add
add
ja
cmp
add
add
in
fucomi
stos
pop
add
jg
pop
push
cmp
pop
add
add
sub
add
xchg
hlt
ja
inc
add
add
gs
add
or
mov
data16
hlt
js
arpl
add
lock
nop
out
jb
push
add
mov
into
mov
mull
mov
imul
fsts
fisubrl
and
pop
add
mov
add
das
cmpsl
jl
push
lret
mov
imul
fdivr
mov
xchg
inc
add
test
add
fsubrs
adc
xchg
in
push
add
cmp
and
add
mov
xor
adc
cmp
pusha
add
loop
sti
or
cmp
out
add
mov
aaa
jne
add
add
popa
outsl
ja
inc
sbb
adc
testl
add
sti
xor
cmp
mov
enter
enter
add
add
add
scas
push
mov
shrl
pop
add
or
les
or
add
test
lahf
dec
add
push
out
adc
adc
adcl
add
push
add
sub
fldenv
pop
jno
add
pop
push
hlt
sub
bound
imul
inc
add
addr16
in
add
std
push
and
movsb
add
push
fstpl
add
add
jecxz
add
xchg
mov
filds
add
mov
add
add
ret
jge
insl
adc
sbbl
cmc
mov
mov
inc
push
add
adc
popf
icebp
add
pop
push
add
iret
xchg
dec
add
xchg
cmp
inc
jno
sbb
popa
jae
int3
pop
pop
add
mov
and
aas
or
mov
lret
sbb
pop
enter
add
movsl
add
add
jo
shrl
mov
fwait
ret
fnstcw
sub
mov
movsb
jp
adc
nop
xor
and
or
xchg
sbb
add
xchg
add
add
mov
add
add
push
lea
xchg
xchg
push
add
push
add
sbb
pop
add
add
data16
in
pop
and
sahf
data16
dec
add
jl
arpl
jns
mov
add
fcompl
jb
add
fidivrl
aaa
mov
inc
add
add
aas
jne
lock
adc
push
add
add
mov
enter
arpl
sbb
cmp
lcall
mov
adc
add
add
stc
sbb
loop
push
add
add
push
add
fwait
movsb
mov
jnp
add
jne
mov
sub
or
mov
add
push
sub
inc
push
add
add
sbb
add
add
add
add
mov
lcall
cmp
mov
cmp
sti
dec
sarb
loop
int3
cmp
outsl
mov
add
add
add
lds
add
dec
cltd
pop
sub
out
add
mov
add
add
insl
push
push
nop
imul
out
lea
add
cmp
mov
ds
jns
push
vmptrld
or
sbb
sahf
cmp
mov
xor
popf
inc
push
les
call
stos
in
or
and
inc
push
loopne
add
add
mov
hlt
push
std
inc
add
inc
pop
pushf
imull
cmp
fmull
add
imul
inc
add
push
add
loope
push
add
mov
add
cwtl
imul
fdivrl
add
gs
add
jl
outsb
add
add
add
aam
add
enter
jg
xchg
mov
add
dec
or
repz
test
cmpsl
xchg
in
mov
add
add
push
jns
add
cmpsl
rorb
add
movsb
mov
add
cmpsl
int
add
add
or
push
add
adc
jge
sbb
lds
dec
movsl
mov
outsl
sbb
sbb
add
pop
add
rcll
cmc
je
add
add
imull
adcb
jnp
or
inc
add
add
or
push
add
cmp
outsb
add
hlt
enter
subl
add
jae
insb
add
inc
add
add
add
dec
movb
jp
or
and
mov
push
add
adc
scas
out
ror
pop
add
cli
iret
and
ja
add
add
push
test
aam
lret
add
and
pushf
add
add
add
add
add
pop
icebp
lret
fstps
push
add
lds
add
insb
add
sub
and
add
int
pop
add
movsl
popa
int3
adc
add
push
sbbl
js
mov
out
jg
add
jns
add
xchg
mov
dec
int3
test
add
out
add
shrb
nop
mov
xchg
addb
dec
add
popa
cmp
sub
adc
test
mov
fcompl
das
lea
inc
add
mov
out
stc
shrl
insb
add
jns
add
add
adc
push
je
push
scas
gs
lret
ficoml
dec
add
ror
test
mov
add
scas
cltd
call
add
data16
lret
dec
add
or
in
add
les
add
stos
inc
mov
cmp
mov
cmp
and
adc
inc
add
popl
add
add
jle
incl
add
inc
cmp
add
xor
out
adc
mov
add
stos
add
sub
adc
mov
add
add
add
in
pop
shl
xchg
dec
push
add
sbb
dec
add
add
add
jmp
rclb
dec
fisubrs
push
shl
rcrl
or
dec
add
out
push
add
int3
xor
inc
cmpsb
or
dec
mov
loope
add
add
add
rclb
add
jmp
add
or
les
or
sahf
scas
jge
je
xchg
dec
add
js
adc
add
dec
test
pop
lock
or
and
add
fisttpl
add
add
mulb
test
add
xchg
xor
add
pushf
pop
add
xor
inc
add
aas
mov
clc
xchg
xchg
fabs
push
add
add
and
cmp
add
xchg
sbb
pop
fwait
adc
pop
add
jae
push
add
add
jl
or
stc
pushf
mov
jecxz
rclb
ficompl
add
push
push
clc
fildl
stos
mov
ds
stc
cmp
add
push
add
lea
add
xchg
inc
dec
sub
data16
adc
sub
pop
add
push
aaa
das
jg
push
add
add
frstor
call
pusha
add
dec
addr16
xchg
inc
add
fisubrs
add
pushf
hlt
inc
add
pop
add
pop
lret
jmp
add
push
xor
std
and
imul
add
sahf
scas
sub
daa
xchg
inc
add
sbb
add
jae
daa
test
insl
addr16
dec
arpl
adc
shlb
adc
out
leave
mov
mov
mov
add
int3
in
and
xchg
sub
pop
add
mov
add
cmp
push
add
ljmp
into
lods
xchg
jne
lods
push
and
push
xor
and
ret
cmp
icebp
pusha
add
add
push
add
jg
mov
add
inc
in
mov
cmp
inc
dec
add
pop
add
in
add
or
mov
in
movsb
pop
add
add
mov
je
inc
jle
sti
sti
add
and
push
lret
mov
push
mov
add
cmp
lock
in
loop
add
add
dec
add
xchg
mov
push
cmp
dec
mov
and
or
or
mov
sbb
sbb
pop
add
mov
sbb
add
sbb
pop
jb
sub
stc
or
pop
add
les
add
fdivs
push
add
fcomps
push
add
add
pop
add
adc
add
add
sbb
jle
dec
scas
call
lea
add
in
xor
test
and
nop
mov
sti
pop
add
adc
dec
add
dec
sbb
fisttpll
add
adc
and
add
add
nop
iret
and
fs
push
aam
mov
add
add
sub
add
add
pop
inc
add
sub
sub
rcr
aad
xchg
roll
mov
add
xor
jg
stos
stos
in
dec
add
or
fidivl
inc
cmp
sbb
xchg
cmp
and
lret
push
add
outsl
pop
add
pop
aam
fstpt
push
add
rcll
decb
jb
inc
sarl
add
push
pop
add
add
hlt
sub
lcall
ficoml
call
add
rolb
cmpsl
mov
arpl
sub
sub
adc
pop
add
mov
adc
out
bound
jle
data16
mov
aaa
out
mov
add
pop
and
jle
add
in
mov
jp
arpl
mov
add
ficoml
add
xor
jns
cmp
add
add
jmp
stos
cmpsl
lea
adc
jo
adc
add
mov
add
add
or
jns
add
mov
add
add
sub
mov
out
adc
sti
out
out
repnz
addl
cli
or
rclb
add
ljmp
add
add
test
out
cmp
push
add
mov
out
xor
mov
cltd
mov
outsl
sbb
fwait
xchg
movsl
pop
add
fisubs
mov
xchg
mov
xchg
push
xchg
leave
lea
imul
add
loop
add
add
inc
sbb
sbb
rolb
scas
add
jno
test
inc
add
je
adc
xchg
xor
add
add
int3
dec
add
scas
dec
dec
add
add
add
ror
add
imul
push
sub
aam
and
lret
scas
call
jle
ret
cmp
mov
sub
movq
in
xlat
insb
add
xor
cwtl
xor
scas
fistl
jge
add
mov
add
add
add
ja
ror
int3
xor
sbb
inc
add
xchg
cmpsl
mov
out
add
movsl
das
pop
movsl
push
cmc
inc
lret
lea
dec
push
stos
inc
add
cmp
push
add
add
xor
sbb
add
rcl
jg
adc
add
inc
data16
lar
es
js
mov
inc
add
push
dec
adc
pop
rorb
nop
xor
aas
nop
inc
dec
nop
das
insb
add
cmc
out
mov
aas
mov
cmp
movl
adc
fstps
xor
add
add
lock
dec
repz
add
add
js
mov
rcrb
arpl
jg
je
and
dec
icebp
xchg
cmpsb
adc
push
add
in
js
sbb
cli
scas
dec
sbb
jecxz
and
add
pop
add
sub
jnp
jecxz
test
or
pop
add
cmp
add
add
xchg
push
add
dec
add
mov
shll
add
pop
addr16
mov
add
add
pop
add
add
leave
cmc
data16
fisubl
out
add
lret
call
in
add
add
push
add
dec
jmp
jecxz
xchg
sti
add
inc
shl
test
add
pop
jb
insb
add
lods
mov
add
int3
dec
add
leave
scas
cmc
shlb
xchg
out
enter
es
outsb
add
add
add
adc
out
and
dec
mov
aam
negl
insl
push
popa
sarb
mov
push
xchg
loope
mov
lock
add
mov
out
lcall
cmpsl
mov
inc
mov
sub
pop
jnp
jns
add
mov
int3
leave
add
add
or
jo
iret
jge
jb
inc
add
outsb
add
add
sub
pop
dec
add
dec
dec
mov
mov
sub
and
jbe
push
add
add
add
add
xchg
call
sbb
jecxz
lods
push
xchg
and
cmpsb
pop
sti
mov
insb
add
imul
sahf
je
mov
fstps
add
add
cmp
aaa
inc
add
repnz
scas
data16
push
movsb
cmpsl
cmp
enter
lcall
repnz
lret
stos
cld
jecxz
pop
dec
add
add
sbb
sub
mov
lcall
lods
push
add
out
cmp
cmc
lahf
iret
popf
cmp
inc
and
nop
jnp
aaa
sahf
dec
add
push
add
jne
punpckhbw
cmp
or
scas
arpl
add
sub
and
fldt
cmp
lock
adc
lahf
or
test
scas
pushf
sub
cwtl
js
fistpl
flds
sbb
in
mov
mov
insl
and
mov
scas
add
inc
or
add
sbb
pop
add
addl
add
mov
add
sbb
adc
orb
adc
xchg
jae
mov
sbb
repz
scas
pop
scas
dec
mul
add
xchg
adc
mov
mov
movsl
dec
scas
rolb
rorb
popa
sahf
inc
add
pop
add
or
mov
gs
cmpsb
adc
movsl
add
add
imul
cmp
jb
incl
sbb
mov
and
xchg
dec
add
in
inc
pusha
add
repz
lods
lcall
cmpsl
cmp
bound
insb
add
lea
add
pop
or
nop
scas
mov
imulb
test
cmp
icebp
lcall
stc
mov
add
into
sub
add
add
rorl
mov
inc
roll
mov
add
mov
mov
lret
cltd
jnp
jg
add
add
add
mov
fsubs
add
mov
fistl
xlat
test
fwait
dec
add
add
jbe
lea
add
mov
or
xchg
and
roll
mov
dec
add
mov
fistps
in
cmc
jle
sahf
sarb
mov
add
pop
fmull
hlt
jp
loope
adc
adc
or
add
cwtl
jns
daa
xor
outsb
add
jns
or
pusha
add
pushf
push
cmp
jmp
add
dec
add
add
xorl
fcmove
mov
and
cwtl
jle
add
je
or
jg
cmp
js
or
ret
imul
out
in
lahf
xor
jo
idivb
lret
in
stos
mov
bound
lahf
enter
xchg
inc
inc
add
cltd
jp
jae
jle
jge
scas
add
pop
std
clc
xchg
mov
jl
clc
outsl
outsl
divl
jp
in
cwtl
sbb
mov
push
add
jge
mov
add
and
movzwl
lock
jno
sub
cmc
inc
add
shlb
add
xchg
fwait
inc
bound
add
add
ficoml
pop
imull
add
xor
pusha
add
add
int
icebp
movsb
les
inc
xchg
mov
sbb
mov
dec
add
sub
stos
pushf
loope
jmp
add
and
inc
add
mov
cmpl
push
sbb
mov
aam
add
sti
fadds
add
add
add
sbbb
mov
add
negl
add
and
add
mov
scas
inc
add
push
add
sub
add
xchg
xchg
mov
xchg
xchg
data16
pop
add
out
jnp
dec
mov
lods
sbb
jle
mov
add
outsb
add
lahf
shrb
add
mov
mov
cmpsl
out
aad
and
adc
sti
insl
pop
add
mov
imul
xchg
xchg
mov
inc
add
inc
add
enter
jb
pop
add
cmpsl
lahf
jo
inc
add
fcoml
mov
mov
imul
add
sti
jmp
ljmp
jno
sub
dec
cs
cmp
sub
nop
std
int3
or
cmp
add
add
ret
sub
mov
mov
inc
pop
push
out
add
dec
add
mov
jle
int3
loope
add
xlat
xchg
add
pop
popf
or
popf
cmovg
sub
lret
insl
lods
subl
gs
sub
fsts
jno
add
and
fcmovu
imul
ret
mov
fimuls
inc
add
movsb
fldenv
add
sbb
mov
leave
inc
xor
xor
data16
mov
dec
add
inc
and
add
push
add
icebp
mov
mov
fdivr
rcrl
push
add
inc
jp
dec
add
cmpb
add
decl
add
pop
das
cltd
push
imul
ret
xchg
loopne
inc
add
mov
dec
add
int3
rolb
cmp
dec
add
pop
jmp
add
movd
push
add
or
add
mov
jg
add
aas
scas
fists
inc
ret
add
add
and
cmp
aam
in
dec
mov
push
add
fnstsw
pop
nop
jp
and
jb
xchg
mov
vpunpcklbw
in
data16
and
cs
adc
mov
and
add
movsb
mov
stc
insl
mov
loopne
clc
sbb
inc
add
jnp
add
adc
xchg
cmp
in
mov
add
ja
shrl
out
dec
add
insl
jl
insl
xchg
lcall
jecxz
push
add
mov
movd
xchg
sub
add
add
or
push
insl
cmpsb
insl
lea
add
mov
cwtl
push
add
add
shlb
mov
inc
add
xchg
add
dec
add
add
mov
hlt
mov
pushf
jo
mov
xchg
inc
jns
dec
addr16
add
push
add
adc
das
cld
or
adc
bound
insb
add
ljmp
icebp
mov
inc
cmpsb
mov
push
add
mov
add
in
add
jb
aam
sbb
cwtl
add
jle
cmc
cltd
test
add
add
push
add
push
add
loop
adc
sub
add
add
ret
add
add
sbb
fdivl
xchg
pushf
std
xor
fstpt
pop
jbe
push
add
push
xchg
xor
cmc
adc
mov
stos
repnz
adc
add
test
add
idivl
mov
mov
sub
adc
mov
mov
mov
add
adc
into
cld
ret
cmpsb
faddl
add
insb
add
divb
xchg
add
pop
push
add
lcall
add
push
add
sub
mov
jmp
add
and
inc
add
push
add
and
xor
test
inc
add
dec
add
push
add
inc
add
mov
xor
sbb
inc
sub
lods
add
repz
mov
cli
das
sub
xchg
jle
xchg
xchg
add
out
repnz
add
lods
mov
xor
ljmp
add
add
pusha
add
aam
add
scas
je
imul
insb
add
add
cld
in
add
mov
add
je
xchg
mov
jecxz
jmp
cltd
jno
lgs
inc
add
push
scas
mov
add
xchg
jnp
pop
imul
push
shll
lods
pop
stos
xor
dec
add
add
xchg
push
add
add
or
add
ret
jmp
lea
pop
ss
pop
add
xchg
mov
cmp
add
sti
data16
cwtl
repz
out
add
mov
pop
add
sbb
add
mov
and
add
cs
jbe
out
add
add
cmp
push
add
push
add
add
pop
mov
add
or
fstpl
bound
jns
add
out
sbb
adc
add
dec
pop
add
or
xchg
cld
adc
add
mov
pop
test
out
add
add
xchg
pusha
add
jb
sub
or
imul
add
add
mov
add
mov
sub
orps
testb
add
popa
sub
mov
out
das
nop
arpl
add
add
popa
add
add
push
xchg
loopne
add
add
push
sti
xor
sub
pushf
in
mov
add
push
add
in
lret
hlt
lock
stos
jge
add
sub
cli
ja
cmpsb
jno
add
addr16
icebp
jb
mov
add
sbb
pop
add
test
ficoml
and
xchg
ja
add
cmp
scas
in
ds
xchg
jnp
sbb
add
int3
pop
add
fcmove
fwait
mov
push
add
xchg
mov
fimuls
ljmp
into
scas
fcoml
in
mov
pop
jp
mov
xchg
xchg
gs
jecxz
push
add
xchg
test
lcall
out
add
loop
add
popa
jecxz
inc
add
add
add
xor
rcrl
add
das
push
add
add
idivl
add
add
jne
add
adc
mov
xchg
cmp
inc
add
add
inc
cwtl
jo
sbb
out
push
sub
test
add
add
loope
lock
xor
inc
inc
add
and
lods
iret
or
add
cmp
mov
jge
add
add
add
pop
cmp
xchg
popa
pop
out
imul
movsb
sti
scas
or
inc
cld
rorb
in
out
push
add
mov
push
sub
negl
aas
repnz
lcall
jp
xorb
xor
test
bound
fstps
dec
add
add
add
cmp
adc
jl
lret
cwtl
jecxz
inc
sbb
jne
pop
push
add
fisubrs
add
xor
outsl
int3
popf
cltd
sbb
pusha
add
inc
jg
cmp
adc
xor
sub
js
add
sarl
loope
pop
add
add
sub
lds
adcl
mov
adc
mov
xlat
xor
mov
pop
add
lock
test
in
pusha
add
add
pop
inc
pop
add
mov
imul
mov
add
add
xchg
mov
add
dec
fiadds
out
dec
dec
add
call
dec
add
imul
mov
add
or
rorb
push
mov
add
insl
xor
adc
xlat
pop
mov
ficoml
or
jb
inc
add
pushf
sub
pop
int3
cli
xor
prefetch
add
fadds
test
xchg
jae
add
xor
sarl
cltd
repnz
stos
jmp
cltd
xchg
xchg
lcall
imul
out
dec
add
and
mov
adc
cwtl
mov
lds
fistl
cld
add
add
outsl
fmull
cwtl
sbb
adc
xchg
test
mov
add
push
add
dec
add
xchg
inc
xor
clc
clc
adc
dec
or
icebp
mov
lcall
add
mov
sub
adc
cli
add
pop
sub
xor
iret
ljmp
and
xchg
shrb
or
add
fwait
mov
mov
inc
add
add
lock
iret
scas
lret
add
cmpsb
scas
sub
fnstcw
mov
xor
sbb
xor
lock
cmpsb
dec
add
jp
arpl
jl
mov
int3
mov
js
sbb
pop
rorl
xchg
xlat
sbb
sub
test
sti
fisubrl
test
or
pop
movsb
inc
add
add
test
add
sbb
in
push
add
push
add
dec
add
imul
fldenv
fs
mov
sti
movsl
ficompl
shl
mov
outsb
add
xlat
dec
add
add
mov
int3
jmp
aam
testl
sbb
ljmp
icebp
mov
xor
pop
lcall
add
and
int
aam
stos
mov
mov
repnz
cwtl
pop
outsb
add
or
xchg
loopne
mov
pushf
or
or
nop
ss
cmp
mov
add
mov
add
lea
add
or
jp
mov
xchg
mov
add
xchg
jge
mov
push
add
lret
loope
jmp
pop
add
pop
add
mov
aad
subb
add
add
call
mov
cmp
js
push
xor
dec
dec
xchg
fisttps
test
and
cli
pushf
daa
sbb
movsb
inc
mov
add
cmp
scas
add
inc
lret
add
gs
add
lcall
add
mov
add
std
or
push
add
jl
fiaddl
mov
add
add
cmpsb
dec
add
mov
or
adc
dec
add
js
pop
add
add
add
lods
test
shrb
mov
add
sbb
jnp
pop
sbb
add
mov
sbb
add
add
jmp
or
jo
shl
leave
nop
lea
mov
add
rcll
in
add
or
and
xor
imul
add
xor
addb
in
push
add
add
mov
movsb
sub
xchg
mov
mov
ds
dec
add
mov
add
aad
sbbl
jo
aas
add
arpl
jecxz
add
and
add
dec
add
cld
adc
jno
mov
add
pop
xchg
test
inc
add
add
sbb
mov
add
adc
sbb
add
add
in
add
add
cmp
sbbb
pop
add
add
sbb
lock
inc
add
inc
jmp
movsb
mov
add
cmpsl
lea
pop
dec
add
test
cmp
push
pop
add
inc
xchg
push
add
mov
sbb
jne
jnp
add
add
sbb
add
add
push
iret
add
add
cmp
cld
aad
outsl
insl
add
cmpsb
xchg
in
xchg
imul
inc
add
add
add
lea
sbb
das
std
xor
lahf
lds
insl
push
add
mov
jmp
add
pushf
notl
add
add
scas
popa
test
inc
adcb
lret
dec
test
subb
scas
mov
in
out
sub
pop
cmp
pop
fcmovnb
adc
add
pushf
lret
mov
arpl
adc
add
clc
scas
sahf
and
add
xor
sub
mov
dec
add
pop
add
stc
mov
sub
add
cmpsl
jp
jge
add
add
das
xlat
and
add
rcrl
push
cld
add
in
lods
in
add
movsl
xchg
cmp
jo
cli
pxor
inc
cli
add
dec
ret
cmp
add
sar
add
and
stos
sub
add
fmuls
add
add
add
pop
mov
outsb
add
xchg
push
add
pop
add
ret
add
jle
adc
xchg
lahf
test
add
add
into
scas
pop
stos
lock
and
lock
add
lods
nop
add
andl
add
sub
mov
push
call
add
add
adc
stos
fldcw
xchg
addr16
mov
add
cmp
push
fldcw
or
mov
aas
add
sub
jmp
fstl
sub
add
mov
int
and
and
outsb
add
jbe
jmp
sarb
add
rcrb
mov
jne
aam
pusha
add
add
add
mov
add
cli
mov
add
orb
add
xor
or
jb
pop
add
pop
add
add
jg
arpl
js
lret
or
mov
out
inc
inc
add
add
ret
insl
add
dec
add
ret
aam
sbb
push
dec
xchg
sub
mov
pusha
add
leave
inc
xchg
roll
test
add
int3
jae
mov
add
cmp
mov
add
outsb
add
mov
and
lahf
push
jno
scas
mov
lea
push
add
jne
fwait
pop
xchg
insb
add
xchg
or
add
add
test
and
mov
lock
add
mov
out
or
stc
iret
inc
add
cmp
jbe
inc
cmp
mov
mov
add
sbb
mov
xor
xor
rcl
mov
add
movb
out
and
sbb
add
notb
fwait
sbb
push
add
mov
shrl
mov
cmp
sbb
out
ficompl
cmc
and
sub
add
jecxz
add
add
adc
mov
push
add
sbb
mov
loopne
inc
add
cmc
lcall
pop
idivl
push
add
mov
and
das
iret
push
popa
jecxz
cld
inc
add
stc
jmp
add
lods
sub
cli
imul
add
mov
push
add
ja
add
data16
add
mov
add
add
xor
add
mov
add
sbb
add
xor
jmp
mov
mov
inc
dec
ret
outsb
add
lret
movsl
adc
dec
add
shll
imul
add
gs
outsl
jno
mov
movsb
mov
pop
add
inc
rcr
fbstp
xor
adc
push
add
loop
push
jmp
outsl
mov
adcl
add
loopne
icebp
jl
out
test
push
add
add
inc
xchg
imul
icebp
mov
xor
lea
idiv
lods
add
aas
mov
and
fisubl
aaa
cmp
add
in
dec
stos
adc
jmp
sub
imul
imul
andl
sbb
pop
add
add
lahf
shlb
add
das
out
dec
add
jnp
add
in
lret
daa
mov
inc
push
add
pop
xchg
add
jns
popf
fstl
add
add
mov
pop
add
clc
mov
test
add
imul
push
jp
push
repz
cmp
popa
ss
pmaxub
pop
add
mov
sub
test
push
add
xchg
sub
or
inc
pop
add
and
lret
push
add
push
add
add
xlat
lcall
or
pop
xchg
imul
add
inc
add
xchg
dec
xor
dec
pop
imul
std
clc
scas
mov
push
add
and
mov
cmp
test
lret
pop
xchg
add
pop
and
sub
test
sti
cmp
xor
add
test
inc
leave
int3
mov
dec
add
push
andl
insl
fstl
sbb
add
cmp
sub
mov
stos
insb
add
lret
daa
inc
add
xchg
adc
and
test
or
xor
jg
jb
xor
addr16
mov
push
add
push
in
mov
mov
adc
dec
add
cli
and
jmp
loope
mov
add
push
out
ret
add
bound
cmp
jmp
add
iret
leave
push
in
mov
push
add
cli
inc
add
xchg
mov
add
inc
popa
lahf
sbb
add
popf
pop
add
add
mov
jmp
add
mov
repz
out
add
xor
pop
add
sbb
int3
aad
mov
inc
cmpsl
add
add
add
xchg
sbb
outsl
data16
daa
sbb
push
add
mov
or
push
and
mov
add
ss
pop
add
add
mov
add
andb
push
add
push
cmp
addr16
jp
jno
lds
add
add
or
lret
enter
mov
add
shl
imul
js
or
repnz
lcall
test
xor
jbe
imul
add
sti
adc
inc
push
add
cmpxchg
xchg
lock
cmp
jmp
icebp
mov
add
cmpl
add
outsl
repz
add
add
gs
add
add
add
into
insl
in
sti
lods
jp
fnstenv
pop
add
scas
mov
add
daa
mov
mov
add
inc
subl
add
data16
add
add
movsl
or
mov
insl
xorl
shll
add
arpl
add
icebp
add
add
lea
jbe
xchg
out
pop
xchg
daa
lock
outsl
sub
xchg
sti
and
and
je
je
cmp
aaa
pop
stos
mov
push
mov
adc
add
call
lret
add
jnp
call
jno
cmp
adc
aas
scas
in
add
jo
mov
and
and
xchg
inc
popa
fdivl
pop
daa
mov
add
add
test
jae
sub
lods
fwait
or
add
pop
add
pop
add
mov
popa
aad
ret
add
in
sahf
int
add
or
mov
into
testb
cmp
daa
add
sbb
inc
fwait
pop
mov
add
push
add
in
xor
hlt
daa
aaa
lret
xor
xor
add
je
or
pop
add
pop
ss
loop
mov
add
or
and
adc
out
sbb
cmp
inc
add
add
mov
pop
add
lds
lock
aaa
sub
xchg
ja
add
mov
mov
add
loopne
fistps
mov
inc
xor
subl
add
mov
out
repnz
add
sahf
xor
outsl
and
push
xchg
dec
pop
mov
sbb
adcl
or
jnp
push
mov
adc
ljmp
or
repnz
add
out
add
add
add
fdivl
ljmp
pop
lret
add
add
jecxz
add
test
and
cmp
inc
movsl
push
les
lret
or
pop
movsl
mov
dec
add
mov
call
gs
out
lahf
xor
fnstcw
add
push
cltd
cmp
cmp
add
xchg
into
outsl
mov
cmp
add
add
add
add
xor
push
add
add
xchg
jmp
push
push
add
push
add
or
int
add
add
add
xchg
lods
filds
add
jmp
in
outsl
and
jns
add
pcmpgtw
inc
ret
dec
shrl
jecxz
or
mov
add
scas
mov
cmp
or
jno
mov
xor
xchg
xor
outsb
add
in
das
mov
idivb
add
fs
fwait
mov
add
push
xor
xchg
mov
lds
add
mov
push
add
ret
outsb
add
push
mov
in
bound
xchg
mov
add
fsin
jl
loopne
inc
add
jnp
push
add
test
add
lods
arpl
add
add
mov
cld
cmpsl
and
out
sub
mov
add
dec
mov
int3
mov
repnz
and
call
jbe
push
add
add
mov
add
mov
aas
lgs
aam
enter
pop
scas
aas
lret
xchg
shll
int3
dec
add
add
and
cld
cli
cmc
fdivp
notb
outsl
mov
add
add
add
xor
sbb
push
dec
and
aaa
adc
xor
add
jmp
add
add
cmp
add
jb
inc
adc
add
inc
add
dec
popa
dec
jno
mov
add
aas
sti
sbb
push
add
pusha
add
clc
orb
xor
dec
lret
add
xchg
dec
ficomps
imul
aad
add
add
imul
and
hlt
dec
add
inc
mov
test
mov
push
xlat
inc
add
cmp
xor
and
cmpsl
andl
mov
xchg
add
aaa
jl
stos
xchg
hlt
jno
ret
sbb
and
xchg
add
adc
inc
add
out
inc
add
int3
out
sub
leave
rol
or
mov
cmp
and
dec
add
lods
test
insl
sub
add
inc
add
jo
jns
imul
mov
mov
push
add
mov
mov
xchg
lods
mov
inc
add
add
sbb
mull
add
cltd
xchg
add
mov
imul
jb
out
add
lea
push
add
loop
add
push
ljmp
add
add
add
jg
add
push
add
call
push
cli
test
pop
add
inc
cmp
add
add
add
push
leave
adc
pusha
add
ja
loopne
add
add
dec
add
std
lahf
xchg
mov
in
push
add
loope
das
loope
add
add
add
add
das
cmc
nop
mov
out
mov
add
mov
add
dec
lcall
out
jno
dec
add
add
orb
aas
sti
loopne
add
dec
add
add
js
jns
add
data16
or
sub
test
orl
mov
nop
mov
cmp
lret
add
mov
pop
xchg
pushf
repz
mov
lds
jecxz
out
inc
push
add
dec
xchg
or
fistl
xlat
mov
mov
lods
cwtl
push
add
fdivrs
sbb
fildl
mov
idivl
jecxz
clc
and
push
add
cmpsl
negb
add
fldcw
cltd
add
imul
pop
dec
add
fninit
jmp
push
add
cli
fisubs
push
xchg
add
nop
call
and
add
idivb
add
add
push
add
stc
shr
popa
cmp
mov
cmp
add
je
into
cmpsl
xchg
rcrl
push
add
or
test
push
add
add
add
xchg
add
mov
jae
jecxz
mov
add
add
adc
add
mov
hlt
aaa
in
stos
pop
add
add
ret
mov
add
rcll
add
test
add
add
add
adc
rcrb
pushf
mov
rcll
push
inc
pop
add
mov
sbb
mov
movl
mov
pop
add
add
test
pusha
add
sbb
or
pop
add
push
bound
pop
add
sbb
lock
mov
jecxz
fsubs
add
adc
and
cmc
lcall
scas
add
push
add
add
popa
mov
add
loopne
das
xchg
movsb
xchg
mov
aas
xchg
mov
cmpl
add
mov
push
mov
jne
or
outsl
pop
add
lahf
xor
setle
and
fistpll
add
push
add
and
jge
add
add
cmc
outsl
ret
dec
jge
and
mov
xor
rclb
add
fisubrl
bound
rorl
and
inc
add
js
ret
jb
mov
add
add
add
js
add
in
jne
inc
add
mov
xchg
dec
add
add
aam
inc
aas
call
or
and
xor
test
jne
push
bound
mov
dec
clc
shrb
add
dec
add
pop
add
mov
add
cmp
scas
in
repnz
push
add
leave
ret
sbb
inc
add
call
bound
pop
ret
lea
or
and
sub
call
add
ljmp
pop
shl
pop
jbe
lods
adc
in
push
add
pop
add
push
dec
add
jg
add
add
add
orb
adc
add
or
cmp
add
or
loope
mov
aaa
jg
lret
inc
add
add
push
add
mov
add
add
pop
lods
inc
add
out
push
add
push
mov
pop
xchg
mov
pop
pop
testl
xchg
sbb
add
int3
out
add
add
push
mov
push
add
add
loope
inc
add
sub
sub
pop
add
jl
arpl
mov
push
sub
popl
inc
mov
add
xlat
mov
or
push
add
push
sbb
negl
add
lock
jb
in
cmp
fisttps
cli
push
add
xor
shlb
in
out
test
jg
adc
pop
xor
add
mov
shll
push
popa
lret
iret
mov
add
mov
jg
pop
movb
movsb
loop
add
pop
stc
push
add
add
add
imul
sbb
jecxz
and
mov
add
dec
add
fcompl
addr16
mov
fstpt
stc
or
dec
add
andl
pop
insl
push
cs
jne
jo
sub
add
popa
mov
add
je
inc
add
lock
fdivr
jne
hlt
or
mov
push
in
rcl
pop
or
mov
push
add
lahf
hlt
lret
shll
jns
add
sahf
fstps
add
inc
lret
rorl
enter
inc
lahf
jle
xchg
xor
addr16
out
pop
pop
add
repz
mov
push
pop
jl
cld
movsl
and
int3
andb
pop
xchg
lret
sbb
ret
shrb
mov
xchg
push
add
mov
fbstp
or
push
add
xchg
test
pop
add
xchg
mov
or
add
sub
mov
sub
jge
pop
sahf
int
add
mov
mov
fsubs
lods
mov
mov
mov
daa
inc
add
out
mov
mov
dec
pop
jge
mov
add
add
cmp
add
sbb
dec
add
insl
pop
cmp
insb
add
or
xchg
xor
inc
mov
add
sub
sub
xchg
enter
push
add
daa
fisubs
add
mov
aad
iret
jb
xor
mov
add
fs
cmp
leave
cli
movsl
mov
out
inc
add
push
enter
mov
add
sarl
add
add
enter
or
ja
add
movsl
std
repz
add
fnstenv
stos
xor
data16
xchg
xor
mov
mov
add
scas
cmpsl
mov
inc
pop
popa
xchg
out
pop
and
or
in
add
xchg
inc
mov
add
push
sbb
mov
mov
jmp
push
sub
lret
adc
add
punpckhbw
jle
into
cld
inc
adc
adc
in
push
cltd
pusha
add
add
dec
add
addr16
add
add
add
add
or
mov
arpl
inc
jne
mov
testl
mov
add
in
pop
add
push
add
clc
icebp
das
outsl
pop
pop
jmp
add
test
add
mov
add
scas
fnstenv
add
repnz
add
mov
js
mov
lahf
fisttpll
daa
push
add
push
inc
add
mov
add
cltd
pop
pop
add
add
sarb
in
cmp
int3
jecxz
and
add
xor
adcb
add
fwait
sbb
sar
sub
adc
fstpt
mov
lea
xchg
lods
sub
add
pushf
mov
add
jns
mov
and
pop
mov
add
in
test
call
or
test
out
stos
inc
add
inc
and
add
pop
and
xor
xchg
mov
add
add
xchg
std
mov
mov
pop
sbb
sbb
xlat
out
push
add
cmpsb
push
shlb
je
jecxz
leave
lea
pop
cwtl
mov
aas
lods
in
jns
add
inc
test
aam
inc
add
adcb
dec
jno
add
xchg
inc
jb
idivl
outsl
cmpsb
xor
xorl
enter
jne
cmp
push
add
jp
mov
add
add
add
push
add
pop
dec
add
out
add
add
pop
add
aad
cltd
hlt
xchg
jg
add
jg
jns
xor
add
in
aam
adc
je
cmpsl
cmp
mov
add
adc
push
data16
add
add
repz
mov
lea
sub
sarl
mov
xchg
adc
or
jnp
and
aas
test
data16
mov
xchg
xchg
push
pushf
jge
jb
push
add
loopne
add
add
cmp
add
add
add
add
addr16
js
jp
mov
add
fs
ljmp
test
test
shll
loope
add
icebp
jno
aad
add
jnp
add
cmpsb
fucom
fninit
movsb
imul
add
stos
nop
fstl
push
add
sub
aad
xchg
ja
sub
mov
add
cmpsb
clc
and
cs
leave
test
add
xchg
xor
cmp
aad
xlat
test
push
add
and
bound
and
clc
mov
sbb
sahf
pop
test
add
and
idiv
xlat
call
notl
cmp
enter
add
xor
icebp
mov
jbe
repz
loope
add
imul
add
aam
add
add
xchg
in
jne
sbb
sbb
push
add
ror
add
or
push
inc
xor
lock
add
xchg
leave
dec
mov
fwait
dec
add
dec
add
mov
popf
add
and
push
inc
add
outsl
push
add
add
add
xor
arpl
cmp
arpl
push
add
incl
mov
ja
push
add
mov
dec
add
mov
pop
add
std
inc
mov
add
mov
inc
add
fnstcw
and
pop
add
add
xor
loope
enter
push
add
out
xchg
mov
add
loopne
add
je
xor
push
push
sarl
add
add
fld1
mov
addr16
jle
daa
push
add
mov
adc
jne
xchg
movsb
sbb
mov
add
jbe
mov
into
clc
test
sbb
sbb
pop
add
les
mov
insl
js
lahf
xor
add
mov
adc
cmpsb
testl
stos
xor
mov
lret
stc
jns
pop
mov
inc
cmpsl
popa
aas
dec
xor
xor
fwait
arpl
lcall
add
xchg
mov
loopne
mov
lahf
std
push
add
rorb
add
subb
in
fstp
fisubrl
iret
push
add
adc
add
add
add
enter
add
add
add
rorl
out
sahf
insl
add
outsl
cmp
popa
popl
add
mov
scas
push
test
jns
mov
daa
popa
dec
add
jo
lods
testl
add
in
sub
add
xchg
aas
or
jnp
test
mov
add
and
aad
cmpsl
jns
sbb
xchg
add
sub
aaa
jb
jecxz
add
dec
daa
ret
in
pop
xchg
adc
add
and
mov
in
nop
lea
add
add
add
mov
or
js
sbb
aaa
adc
roll
add
pop
popf
test
add
push
rcr
push
jge
dec
add
add
bound
add
data16
dec
add
jb
push
add
lret
xchg
fldl
sbb
add
add
pusha
add
popf
movsl
cmpsl
std
mov
push
pusha
add
add
fildll
call
push
add
fxch
popa
inc
add
and
test
add
cmp
cltd
addr16
add
add
push
add
add
lret
add
bound
bound
aad
add
mov
adc
push
add
icebp
jge
aad
push
add
in
stos
call
dec
jmp
sub
or
lret
ljmp
add
ljmp
add
ret
sbb
je
jg
out
add
add
jnp
add
add
and
jecxz
xor
mov
add
scas
mov
add
aam
adc
shlb
cmp
xor
cmp
xor
and
lcall
dec
add
or
loope
and
mov
or
dec
add
add
cwtl
add
fidivrl
mov
mov
add
sub
xchg
xor
popf
dec
sub
mov
mov
stc
jns
add
pop
xchg
push
jl
sub
lds
inc
add
dec
ret
subl
add
fisubs
fs
out
call
jle
hlt
test
sar
shll
pop
fwait
stos
xlat
lea
push
add
mov
mov
mov
add
outsb
add
pop
add
cli
negb
add
pushf
sbb
cmp
and
jmp
and
shl
xchg
hlt
fcmovbe
sbb
aam
add
enter
or
sub
mov
sbb
movsl
outsb
add
out
cwtl
xor
inc
mov
add
dec
add
lds
add
and
xor
add
add
jns
mov
xchg
ficomps
xchg
mov
add
add
rorl
add
xlat
mov
sarb
sarl
add
inc
add
mov
push
add
clc
push
add
mov
test
jae
cld
lcall
sbb
stos
fiadds
je
cmc
jnp
out
add
push
add
add
add
mov
or
push
jle
adc
add
jnp
std
push
add
insb
add
scas
sub
cmpb
add
mov
xor
cli
repz
in
imul
in
pop
sbb
dec
stos
sbb
scas
add
sahf
push
add
mov
add
add
aad
dec
std
sub
jle
jno
lea
mov
add
cltd
addb
add
cmp
mov
stos
ret
es
mov
add
push
add
sub
push
pop
add
cmp
push
rolb
cld
daa
xchg
ffree
xor
cltd
bound
fidivl
push
add
xor
sbb
adc
pushf
adcb
add
adc
jne
sarl
inc
sub
test
jecxz
add
add
add
xorb
dec
xchg
clc
inc
arpl
jnp
add
mov
xor
or
sbbb
fsts
add
pop
mov
sti
shl
aam
divb
movsb
movsb
icebp
lods
xlat
jne
add
aam
cmpl
int
shll
stc
pop
add
sub
ret
aam
movsb
and
jle
das
cmp
mov
test
mov
add
add
lock
xor
add
mov
add
fcmovnbe
in
add
inc
add
push
add
or
mov
popa
jns
add
iret
pop
arpl
cltd
dec
lea
add
adc
data16
outsb
add
ret
stc
stos
subb
pop
xorb
add
pop
fbld
pop
add
aam
movsb
jne
add
cmc
mov
mov
adc
mov
inc
pushl
add
push
cmp
out
add
mov
call
pop
in
sar
pop
add
push
fldl
lods
or
lret
mov
pop
push
mov
adcb
add
add
rorb
cld
mov
add
xchg
call
push
stc
mov
mov
push
add
and
cmp
mov
mov
adc
sbb
and
inc
add
and
pop
add
add
int
popf
dec
cmp
push
add
cmpsl
push
cmp
aaa
mov
fcom
cmp
or
mov
cli
sbb
xor
test
add
popa
sub
pop
mov
push
add
out
push
add
aad
lret
or
or
jne
xchg
js
mov
jg
sahf
pushf
inc
add
stc
push
adcb
rcr
mov
push
add
xchg
imul
push
add
sub
lock
daa
xchg
movsb
mov
rolb
xchg
stc
int
add
dec
add
add
add
pop
add
add
jno
add
lahf
xchg
jbe
notl
cld
mov
xchg
xchg
add
jl
inc
add
jo
arpl
add
dec
add
xchg
stc
inc
pop
dec
outsb
add
dec
out
sbb
cmp
clc
xor
mov
mov
sub
fsub
mov
add
add
fistl
dec
bound
sub
cli
ja
imul
xchg
jno
pop
add
cmpsb
jae
add
push
add
lret
xor
pop
and
popf
xchg
faddl
jb
xchg
push
add
fdivs
add
mov
sub
ljmp
xor
decl
add
add
xchg
push
mov
add
add
or
add
add
in
push
movl
out
pop
pop
add
lock
sub
sub
pop
add
xchg
jae
aaa
sbb
ss
pop
xlat
out
orl
jno
shl
imul
add
add
mov
icebp
pop
add
xchg
dec
leave
inc
add
add
mov
adc
add
add
xchg
push
add
test
pop
mov
pop
or
sti
pop
xor
pop
cmp
add
add
pop
add
sbb
jecxz
xlat
lahf
sbbb
pushf
sbb
loopne
and
std
mov
xchg
shlb
mov
mov
dec
aaa
dec
add
push
add
add
sub
xchg
jmp
add
lcall
push
push
add
pop
ret
insb
add
push
add
mov
rcrb
add
push
add
hlt
and
xor
add
repnz
add
mov
daa
je
pop
test
jae
inc
add
adc
add
fsubrl
and
cmpsl
and
pop
add
loopne
shlb
add
insb
add
sti
adcl
add
mov
add
negl
push
sub
add
icebp
shrb
mov
pop
nop
xor
icebp
shll
sub
fmull
and
mov
mov
iret
sub
push
add
add
sarl
or
push
add
push
add
dec
mov
bound
cmp
fstpt
add
sub
pop
add
mov
cwtl
outsb
add
mov
jno
add
cld
mov
mov
inc
or
jnp
xchg
lret
rcrl
xchg
mov
sti
inc
xchg
sub
adc
sahf
inc
add
fimull
adc
add
decl
xor
dec
sub
pop
leave
int3
pop
loope
adc
iret
lea
mov
and
and
data16
lahf
jg
arpl
add
in
and
cmp
pusha
add
cmp
lahf
cltd
scas
gs
sbb
leave
mov
add
add
lock
dec
add
add
sub
push
add
add
pop
add
add
mov
dec
add
sbb
and
or
and
lods
test
lods
call
loopne
mov
clc
add
icebp
adc
sbb
or
notb
add
push
add
xor
mov
gs
fcmovbe
mov
xor
in
movsl
cs
xchg
lds
dec
or
cli
mov
add
xor
add
test
pop
lds
dec
and
sub
xchg
jnp
sub
adc
shlb
jb
mov
pop
add
hlt
jmp
mov
add
idivl
add
dec
add
and
or
and
push
jbe
je
xchg
and
or
jmp
add
xor
ret
xchg
mov
push
xor
or
pop
add
cltd
and
stos
jl
jne
add
int3
lods
dec
enter
add
inc
add
jp
imul
mov
pop
jp
repz
dec
dec
add
add
add
ja
popa
test
mov
add
jecxz
mov
inc
add
mov
jbe
xchg
mov
add
cmp
mov
das
shr
inc
add
jae
outsb
add
inc
add
cmp
inc
inc
xchg
pop
scas
xchg
jge
add
rorb
and
add
lret
jmp
int
push
add
mov
data16
add
add
imul
jg
sub
mov
add
dec
dec
ja
add
mov
cli
shr
aad
add
rorl
jno
push
jns
xorb
leave
push
add
pop
movb
pop
add
push
add
jae
and
jo
imulb
stc
test
and
popa
sti
sbb
push
add
sarl
add
mov
testl
add
mov
mov
mov
adc
add
nop
sub
add
dec
add
cmc
add
fs
fsubl
xchg
push
in
add
fwait
push
inc
decl
jnp
cmpsb
cmpsl
mov
addb
cli
push
add
add
pop
xlat
sbb
cmp
les
gs
mov
jbe
je
mov
fisubl
clc
add
mov
xor
add
jo
mov
cld
xchg
and
dec
add
add
add
dec
xchg
sbb
mov
add
lods
pmaxub
sahf
int
mov
in
sbb
push
add
ret
arpl
add
pop
fimull
add
adc
sbb
mov
add
add
push
add
das
call
imul
push
add
jge
add
push
call
xorl
insb
add
mov
xchg
mov
add
dec
add
jbe
data16
imul
add
add
add
add
outsb
add
cmc
dec
add
push
dec
add
add
add
xor
inc
inc
add
xchg
add
cs
sub
xchg
cmc
push
add
adc
add
sub
mov
sub
movsb
dec
add
or
faddl
and
jp
popf
pusha
add
repz
scas
movsl
mov
jl
sub
popf
push
sub
sbb
add
mov
add
add
not
lea
addr16
popf
dec
add
add
add
xlat
enter
cli
lock
ret
jecxz
mov
inc
add
add
xchg
inc
add
pushf
mov
xorb
add
add
outsb
add
add
pop
sbb
sbb
in
repnz
xchg
push
add
lret
nop
cmp
xchg
pop
rorb
mov
add
shl
push
or
out
jle
insb
add
cmc
jb
mov
add
mov
add
mov
sub
add
add
adcb
stos
scas
and
mov
add
add
jne
add
out
jnp
mov
add
dec
cwtl
test
lock
push
push
add
sbb
add
cmpsb
mov
adc
shr
sbb
or
stc
cmp
mov
mov
push
lea
add
ljmp
cli
imul
mov
dec
add
mov
jmp
jge
pop
mov
or
mov
sti
pop
or
std
popf
test
insb
add
shll
add
mov
add
add
std
in
fnsave
andb
mov
add
pop
ret
add
fstpl
mov
add
add
out
inc
add
je
mov
add
aas
inc
add
mov
into
iret
cmpb
insl
mov
add
aaa
mov
mov
mov
arpl
add
hlt
push
add
mov
lahf
sbb
add
fwait
mov
lea
loopne
aas
test
add
ljmp
adc
xor
dec
cmpsb
xchg
xchg
add
call
xor
sbb
loop
mov
sbb
les
sbb
sti
adc
ret
add
loopne
xor
and
mov
lods
mov
add
add
mov
add
sbb
in
add
add
and
jno
add
add
shrb
fstpt
mov
sub
mov
and
stos
and
das
out
lods
shr
pop
add
add
mov
cmp
mov
add
add
mov
add
add
add
jg
add
test
push
fnsave
cmp
inc
add
xor
repz
adc
pop
add
outsb
add
cmp
sbb
test
cld
mov
add
pop
pop
add
or
pop
add
add
xchg
add
inc
and
repz
sub
add
lds
adc
xor
in
cmp
paddb
add
adc
lds
gs
sub
adc
add
xchg
add
outsb
add
aad
ret
js
ficoms
std
or
mov
cmp
xchg
adc
std
cmp
mov
add
sub
add
inc
shrb
jno
nop
xchg
jne
xor
or
mov
jle
adc
in
pushf
ret
int3
cmp
sti
push
push
or
daa
sarb
inc
mov
popa
fstpl
pop
add
rcl
xor
lods
lock
in
cltd
add
inc
adc
das
add
mov
pop
inc
mov
or
out
testb
stos
dec
add
rcll
add
add
pop
xchg
jo
std
cmp
mov
xchg
push
and
add
popf
or
xor
sbb
adc
and
sbbb
cmp
xor
data16
addr16
add
cmp
in
mov
inc
loope
shr
out
nop
mov
lock
add
add
add
add
push
add
pusha
add
lea
add
jbe
ds
andb
jb
cltd
daa
fnstcw
dec
add
mov
and
dec
push
add
fisttps
xor
test
add
rcl
inc
add
add
inc
shrl
cmpsb
and
pop
mov
jp
xor
add
add
imul
jp
dec
popf
loop
push
aam
add
inc
mov
out
add
mov
icebp
mov
jne
add
pop
dec
add
xor
das
into
and
add
add
notl
imul
cmp
jo
dec
add
sub
mov
add
test
add
add
dec
add
add
xchg
dec
stos
jecxz
mov
xchg
mov
scas
dec
or
fwait
lods
push
xlat
jns
cmp
imul
jge
xor
cld
inc
add
xlat
pop
je
aam
cli
lret
ret
ds
xchg
mov
add
add
add
stos
lret
outsb
add
xchg
aam
loope
push
add
add
add
add
sub
mov
sarl
jle
cmpsl
jle
nop
aaa
sbb
fisttpl
add
sahf
inc
dec
add
pop
addl
mov
aad
add
int3
cmp
xor
and
add
add
adc
add
jp
mov
or
pop
add
loop
cmp
into
or
dec
add
mov
add
ljmp
enter
add
cmp
adc
flds
sahf
jb
popa
loope
add
and
hlt
outsl
iret
ja
adc
pusha
add
sub
aad
mov
jmp
xchg
xor
rcr
pop
add
outsl
addr16
test
push
sahf
jns
das
mov
add
sub
fcomps
das
insb
add
jecxz
int3
imul
popa
clc
ljmp
cmp
repz
sub
enter
popf
push
add
add
cmpsb
lcall
add
add
pop
adc
add
lock
cli
mov
or
pop
add
add
mov
pop
sub
push
outsb
add
jb
add
add
fdiv
or
popl
les
out
daa
xchg
repz
xchg
mov
fistpl
cld
aas
cmp
jp
iret
mov
push
pop
add
jmp
add
rcr
stc
mov
jg
add
dec
nop
mov
pop
add
add
lods
std
pop
add
cwtl
sub
rolb
inc
mov
cmp
xor
cmpsl
cmp
data16
inc
add
add
inc
add
add
fisubrs
xchg
out
divl
push
add
jno
add
loope
fiaddl
sbb
lock
mov
adc
jmp
add
pusha
add
mov
mov
mov
out
and
push
add
aam
int3
add
add
xchg
daa
jmp
imul
add
add
jo
sbb
push
add
bound
sbb
dec
iret
loope
add
jmp
pop
jle
push
add
add
push
incb
add
lods
fsubr
pop
dec
add
add
js
lods
mov
hlt
out
add
add
ret
test
fisttps
cmp
divb
aaa
iret
addr16
sub
add
sub
stc
testl
adc
sbb
or
pop
jae
mull
mov
out
add
cld
sub
stos
add
loopne
sbb
add
outsb
add
add
add
add
mov
jae
das
fyl2x
mov
xor
pop
add
add
bound
fcompp
mov
mov
push
add
mov
xor
add
sbb
ficoml
hlt
in
shll
sub
add
cmp
jg
add
jne
cltd
subb
out
add
cli
fwait
aam
movsb
pushl
inc
xchg
mov
inc
loope
adc
in
mov
add
add
or
jnp
push
xor
lea
mov
add
daa
lret
bound
popa
into
mov
add
jmp
mov
add
pop
rcrb
add
jle
mov
xchg
or
pop
in
pop
add
inc
add
pop
mov
add
inc
repnz
inc
add
xor
mov
add
lret
add
fcomps
jle
inc
add
pop
or
lock
out
mov
out
adc
jb
mov
mov
adc
lds
stos
in
dec
cmc
loop
add
ljmp
jp
push
add
test
xchg
jnp
fstps
add
push
push
adc
int3
sbb
add
and
cmp
dec
mov
push
add
mov
pop
sub
std
xchg
rolb
add
add
add
pusha
add
mov
data16
add
mov
mov
cltd
jno
sbb
xchg
pop
into
int3
add
ja
dec
add
add
jmp
adc
cmp
mov
add
jo
mov
jg
pop
add
mov
add
add
call
mov
jo
jmp
add
ret
ret
fisubrl
stos
out
data16
add
nop
cltd
jp
lods
push
add
mov
movsb
jns
mov
add
or
pop
push
add
dec
addr16
add
flds
pop
add
sbb
add
add
repz
add
pop
sahf
out
cld
scas
xchg
xchg
mov
dec
mov
scas
jg
pop
repz
push
add
stos
mov
out
or
sbb
mov
add
add
mov
mov
add
int
add
add
add
adc
sahf
ffreep
divl
add
push
add
cmp
pop
insl
les
push
add
sbb
or
push
pop
mov
add
xchg
lcall
add
fdivl
call
mov
sti
js
pop
test
loopne
add
add
fs
dec
add
call
adc
fstpt
add
jmp
mov
add
out
test
add
add
mov
add
and
add
fiadds
add
sub
xchg
out
jbe
orl
addr16
fwait
jp
dec
sub
add
and
int3
mov
repnz
or
add
fnstenv
add
xchg
or
push
add
sbb
sbb
repz
xchg
add
add
loopne
add
or
lds
jl
movsb
cwtl
std
sahf
add
xlat
lds
push
add
add
add
fisttpll
add
add
or
add
lock
fstpt
push
xor
adc
mov
push
or
add
rolb
add
add
imul
and
icebp
jl
in
add
cmp
test
adc
jo
xchg
fs
filds
outsb
add
push
xchg
mov
inc
pop
add
out
dec
stos
inc
add
bound
inc
add
mov
pop
add
fsubp
xchg
and
push
push
add
data16
sbb
sahf
fisttps
loope
add
cmp
cmp
jb
testl
out
mov
pushf
mov
add
mov
in
sbb
inc
add
addr16
jo
bound
lret
add
pop
int
test
cmpsl
aas
roll
dec
add
xchg
daa
ljmp
adc
aas
xorl
jle
or
out
add
loopne
add
bound
roll
add
add
add
sub
inc
cmpsb
dec
push
mov
lock
jge
add
add
cmc
pop
cwtl
dec
add
ss
xor
add
nop
sti
out
push
pop
inc
add
add
push
ja
mov
add
add
mov
push
aaa
lea
xor
aam
ljmp
outsl
fs
data16
stos
push
add
ljmp
mov
mov
add
sbb
cmp
negl
mov
add
or
mov
fs
ja
add
jae
leave
hlt
or
icebp
jbe
repz
roll
ljmp
das
jnp
sbb
xchg
adc
mov
movsb
fstpt
dec
add
xchg
jg
int3
test
out
xor
fwait
sbb
idivl
pop
add
mov
inc
add
adc
mov
pop
add
mov
divb
cmp
in
push
xchg
insb
add
test
add
jle
dec
add
jmp
in
add
insl
iret
sbb
int3
push
aad
fldcw
mov
frstor
bound
shlb
cltd
mov
lea
add
inc
into
das
rorb
mov
test
add
mov
inc
add
and
pop
jg
test
add
add
xchg
insl
sbb
in
fcomi
xor
adc
jle
add
hlt
pop
add
adc
pop
add
sbb
rorb
pop
jns
cwtl
mov
test
push
add
push
mov
shl
or
sub
ret
call
xor
pop
es
xor
add
add
mov
dec
add
add
jbe
in
roll
xchg
bound
jge
push
shl
sbb
add
add
out
leave
add
xchg
mov
add
into
or
dec
add
jge
or
shl
and
add
add
cwtl
mov
lea
xchg
mov
add
jge
mov
and
push
add
push
add
add
add
add
push
jne
bound
pop
add
add
gs
stos
jl
add
stos
add
outsl
pop
add
push
add
lcall
out
push
sub
pop
add
add
xor
inc
add
mov
dec
stos
je
xchg
mov
push
add
add
add
xchg
mov
les
cmp
lret
imul
or
adc
xchg
xor
mov
add
mov
adc
xchg
add
mov
add
dec
jp
pusha
add
add
push
add
dec
add
test
jb
mov
test
mov
cmp
jmp
std
xchg
jno
out
or
scas
mov
fsts
add
fistpll
add
xchg
xor
inc
add
sbb
add
daa
test
add
add
dec
add
mov
adcl
shl
cmc
inc
add
add
fstpl
and
loopne
cwtl
push
add
xlat
mov
add
inc
in
add
add
pop
add
add
clc
and
lahf
cmc
imul
mov
jns
add
add
pop
add
add
fimuls
scas
es
cmp
add
xchg
sbb
add
sti
cltd
aad
add
adc
pushf
cmp
add
inc
ljmp
add
rcll
in
add
pop
sub
adc
fistpll
shrb
sub
roll
add
and
push
push
add
xchg
inc
add
test
xchg
int3
cmp
dec
mov
repz
repnz
leave
dec
add
pop
in
popf
xchg
sub
sar
leave
inc
add
cmp
incl
add
jne
add
dec
out
add
je
add
in
xchg
inc
add
add
and
repnz
mov
add
add
shlb
mov
not
lods
xchg
add
aaa
sti
aas
and
add
jle
adc
insb
add
lds
add
cmc
mov
add
clc
sub
je
int
add
xchg
dec
push
inc
jne
xlat
hlt
inc
add
fstp
sub
mov
pop
movsl
loop
add
sub
cmc
aas
mov
fists
add
daa
rclb
sarb
int3
xchg
repnz
xchg
or
xchg
mov
outsl
stc
sti
mov
cld
fdivs
jb
sub
imul
add
ficomps
stos
sti
cld
mov
addr16
fisttpll
and
mov
dec
add
add
mov
fwait
into
movsl
xlat
lods
xor
mov
outsb
add
mov
add
add
cmp
lods
orb
cs
add
mov
dec
add
lds
add
ret
sbb
inc
movsb
push
mov
fists
add
add
jno
add
add
mov
add
add
jnp
adc
sub
add
push
mov
mov
pop
pop
add
popa
decb
mov
repz
loope
shr
pop
add
add
cltd
cmp
pop
mov
adc
faddl
add
push
add
add
cli
arpl
xor
popa
dec
add
nop
jns
jbe
sub
cli
imul
fwait
pop
add
scas
lods
clc
mov
add
add
dec
sbbb
cltd
loope
xchg
movsl
cwtl
add
mov
pusha
add
add
push
xor
add
add
rcrl
orb
push
sbb
clc
imul
mov
pop
add
adc
repz
loope
xor
xchg
add
add
lret
enter
dec
fidivl
shl
test
xchg
inc
mov
add
test
add
cmp
add
dec
add
inc
add
add
movl
xor
cmc
frstor
arpl
pop
xlat
or
adc
dec
sub
movsb
add
add
add
inc
add
jae
mov
scas
scas
push
fcompl
or
add
add
fimull
jl
adc
loopne
add
cmp
sub
pushf
dec
add
or
fidivl
imul
mov
adc
xchg
test
add
aam
push
add
add
add
pop
in
sbb
add
add
add
push
add
rclb
add
inc
mov
jecxz
add
jmp
in
andl
in
ret
das
imul
inc
add
add
testb
call
mov
in
pop
add
ret
clc
popl
dec
add
push
add
add
mov
xchg
or
rcl
fdivrp
loopne
aas
sbb
shll
out
test
gs
mov
je
pop
test
add
cli
testb
sbb
sarl
add
out
add
pop
test
into
in
xchg
cmc
loopne
add
inc
call
pop
inc
sbb
xchg
or
push
add
add
aas
fnsave
add
add
cmc
jb
imul
lock
mov
add
cmp
pop
add
pop
push
add
push
add
inc
sub
divl
pop
repz
out
iret
filds
add
mov
fstpl
add
mov
cmc
ss
in
popf
shll
call
in
in
push
add
sub
add
sbb
adc
int3
or
add
add
addr16
or
add
add
std
mov
add
pop
and
jno
in
push
shll
and
push
add
add
orb
cli
pop
cmp
test
test
add
push
add
mov
adc
scas
pop
add
add
rcr
sbb
orb
call
and
mov
add
bound
imul
mov
push
push
add
out
add
add
std
div
pop
xlat
pop
add
add
pop
add
pop
outsb
add
mov
fadd
ficompl
loope
pushf
xlat
inc
add
add
outsb
add
inc
add
push
add
add
dec
lock
adc
jp
aam
data16
add
lret
add
adc
fwait
mov
add
sub
pusha
add
or
add
cld
out
jo
rcr
test
pop
pop
add
mov
add
pop
sahf
jl
test
xor
cli
data16
stos
push
add
test
stc
push
add
jns
pop
add
add
lcall
add
add
insl
gs
sar
add
xchg
fwait
mulb
jno
imul
cwtl
cltd
xchg
insl
dec
loopne
shrb
jg
cmp
pusha
add
sub
scas
orb
dec
add
push
adc
out
insb
add
add
popl
test
shrb
pop
xor
out
cmpsb
cmp
cmp
push
add
aam
and
insb
add
xor
xor
sarb
adc
mov
add
pop
scas
mov
fwait
ret
pop
add
xor
sbb
xor
dec
popa
sub
jl
sub
repz
mov
cmovo
pop
inc
negb
divb
xor
rorb
orb
add
cmpsl
push
add
add
fwait
lret
mov
ss
xlat
adc
aaa
scas
fisubs
pop
daa
sub
add
fwait
rclb
push
push
add
in
sub
jge
dec
add
push
add
add
aas
xchg
les
add
cmc
bound
lea
add
xchg
mov
cld
mov
loope
add
add
inc
repnz
lods
and
int3
sbb
jmp
add
add
fsubp
push
sub
or
pop
fistpll
sbb
stc
push
lea
push
add
add
pop
and
lcall
add
pushf
ljmp
fdivl
loope
icebp
dec
push
add
or
fldl
xchg
or
sub
pop
push
add
mov
add
jno
add
add
lcall
push
add
add
add
add
insl
movsl
ret
bswap
cmp
outsl
adc
jnp
inc
add
dec
add
add
cltd
push
add
push
mov
add
dec
add
inc
xor
fimull
stos
imul
push
scas
call
jl
dec
pop
add
dec
add
add
cltd
xor
pusha
add
jmp
add
add
mov
pop
bound
stos
out
add
and
and
and
mov
cld
cmp
add
outsl
xor
dec
inc
add
fildl
push
add
inc
add
mov
add
xor
inc
stc
xchg
cmp
mov
jno
add
push
add
push
add
in
mov
add
aam
in
fstps
add
add
lds
sahf
push
and
in
add
add
cwtl
stos
push
add
fsts
lock
add
lret
dec
add
push
add
enter
sbb
data16
mov
jae
cmpsb
mov
pop
add
adcb
fcmovnu
or
push
add
or
or
add
dec
add
jbe
pop
and
xchg
scas
stos
cmpsb
add
pop
add
add
test
rcl
lar
into
clc
and
je
gs
mov
add
adc
rcrl
adc
push
push
jmp
insl
inc
add
add
or
cmpsl
inc
je
xchg
cmp
subl
xlat
imul
aaa
dec
add
add
add
jl
mov
gs
xchg
out
inc
or
adc
pop
mov
jnp
stc
jnp
mov
mov
clc
in
pop
fdivl
pushf
mov
add
sub
cmc
sub
popf
and
xchg
add
data16
sub
add
add
add
clc
rcrb
ljmp
test
add
add
mov
fwait
lods
dec
add
add
test
or
ret
mov
add
sub
cmp
lcall
add
jns
pop
movb
add
inc
pop
dec
test
test
pop
add
pop
jecxz
add
add
cmp
mov
jge
jle
out
fnsave
cmp
sub
xchg
lahf
dec
add
fwait
xor
stos
dec
mov
rorb
mov
add
mov
jne
or
cld
or
add
and
push
add
push
add
add
out
add
add
mov
fimuls
loop
mov
negb
mov
jae
dec
push
add
je
imul
mov
lods
daa
ja
andl
and
in
push
ret
and
add
hlt
mov
inc
adc
add
mov
add
pop
test
xor
push
add
in
add
and
adc
push
add
xchg
jg
adc
mov
jmp
sti
movsl
lcall
cmpsl
inc
out
mov
add
lea
add
add
xchg
fsubs
jle
dec
add
push
add
add
add
cli
movsb
mov
add
cmp
test
pop
out
add
xor
adc
jmp
mov
mov
out
adc
sbb
push
add
add
or
lea
or
push
add
pop
add
adc
insb
add
mov
mov
std
iret
push
stos
and
dec
add
lock
xchg
mov
push
add
dec
xor
or
xchg
mov
add
add
add
push
mov
add
dec
add
movsl
rcr
mov
shrb
or
mov
jnp
xor
lret
xor
js
sub
dec
fwait
pop
fwait
repz
sbb
xchg
test
lcall
gs
add
add
mov
jns
cmc
adc
out
push
add
add
sbb
cmpl
ja
lds
add
loope
in
mov
shl
push
add
ret
and
sub
mov
inc
incb
add
push
ljmp
add
test
daa
inc
add
add
int3
jp
mov
and
adc
adc
dec
cwtl
xor
jecxz
mov
xorl
icebp
jo
lds
clc
push
add
fldt
xor
sub
aas
push
inc
add
add
push
push
mov
loopne
add
add
lods
mov
jnp
pop
push
push
add
or
popa
in
cmpl
cld
jns
add
add
add
movl
and
xchg
cmp
mov
xor
push
add
add
add
push
add
add
add
push
jno
add
les
add
test
cmp
out
inc
add
data16
mov
mov
outsb
add
push
sub
mov
lods
and
sbbl
outsb
add
add
add
mov
lret
imul
jge
mov
in
pop
sub
inc
add
sbb
jnp
cmp
insl
or
movsl
or
add
or
daa
cmp
out
fadds
dec
add
xor
mov
jecxz
add
mov
leave
insl
jp
in
into
mov
mov
xchg
incb
stos
in
cmp
das
das
pop
add
sbbb
add
jmp
push
add
loop
add
sub
les
popl
add
or
xor
add
xchg
nop
jp
push
add
push
add
int
dec
add
xchg
lcall
add
fcmovnb
js
or
clc
jo
arpl
notb
fdivr
roll
scas
rcl
lock
scas
xchg
cmp
test
sti
adc
lcall
xor
or
fisubrs
add
xchg
mov
xchg
inc
add
add
xor
add
fidivs
out
xchg
gs
xchg
mov
add
cs
push
add
add
clc
cwtl
lcall
jno
xor
movsl
xor
sbb
cmc
xchg
lods
faddp
adc
add
lcall
arpl
jp
js
int
push
add
sbb
pop
add
cmc
popa
sar
add
daa
mov
push
add
xorb
add
andb
fdivl
push
adc
adc
add
xor
imull
add
xchg
add
adc
repnz
inc
xchg
add
fcomps
add
les
cmc
pop
add
add
bound
add
je
data16
add
std
repz
xor
push
sub
add
std
fistps
xor
imul
inc
add
out
mov
ljmp
add
and
add
add
add
add
daa
sub
pop
adc
ret
sbb
inc
add
lock
es
push
add
std
add
push
add
adc
pop
add
mov
or
add
ljmp
aad
add
add
add
jmp
out
fldcw
pop
add
adc
inc
xor
lret
scas
jo
xchg
sbbl
pop
sarb
add
scas
push
add
test
leave
push
add
ret
push
cmp
subb
sbbl
mov
outsl
inc
loopne
arpl
mov
add
cmp
scas
fdivl
xchg
aad
add
push
mov
scas
cmp
xor
add
jnp
add
add
aam
push
add
test
in
inc
add
add
std
ljmp
outsb
add
lahf
pop
cwtl
adc
add
push
add
add
add
mov
add
arpl
repz
add
xor
ret
dec
add
mov
int
push
add
cs
sbb
add
in
lods
or
add
add
mov
fisubrs
insl
mov
push
or
add
add
add
notl
test
mov
add
dec
add
add
add
and
sbb
fsub
or
js
pop
add
ds
js
lret
pop
add
add
mov
add
inc
add
add
and
xor
xchg
add
mov
popf
stc
pop
mov
orl
mov
insl
ret
adc
push
leave
or
stos
in
add
das
add
add
add
mov
mov
das
add
movsl
sbb
mov
add
stos
loop
mov
add
data16
or
and
or
inc
test
push
add
jp
arpl
popa
flds
add
add
insl
popf
and
jae
fisubrl
xchg
xor
add
lcall
sub
jg
add
pop
rcr
lods
out
sub
push
add
loope
add
add
nop
dec
cmp
cmpsl
ja
mov
sbb
cmp
cwtl
mov
add
and
jne
add
mov
ficoms
xchg
mov
inc
add
add
mov
inc
add
push
add
add
add
jmp
aas
or
xchg
stc
add
cmc
add
add
add
xchg
push
add
andl
leave
cmp
sub
in
sub
mov
pop
outsl
jne
add
push
add
jmp
mov
cmp
lcall
addb
fidivs
mov
add
xor
sub
add
ret
add
jl
pop
add
or
lret
and
sub
pop
mov
lret
mov
dec
mov
xchg
add
scas
inc
add
jae
add
addr16
ljmp
jo
mov
or
mov
xchg
jle
and
daa
pushf
out
add
jae
add
arpl
add
cmpsb
jmp
insl
dec
fistpll
dec
int3
insl
mov
add
adc
scas
arpl
mov
add
add
xchg
push
add
cmc
loop
test
icebp
repz
inc
xchg
lock
ljmp
mov
mov
or
xchg
stos
sahf
pop
add
pushf
adc
add
cmp
or
add
xchg
out
loop
bound
sahf
jge
add
dec
add
stos
stos
cmpsb
in
jmp
add
scas
add
pop
xor
mov
out
push
add
xchg
popa
push
rcrl
stos
xor
lock
add
call
add
mov
mov
sbb
lods
orl
imul
jbe
push
add
push
add
and
xchg
movsl
mov
dec
add
and
dec
movsl
inc
sahf
test
add
add
jnp
sub
mov
fsubrs
mov
add
pop
add
add
lds
add
add
xchg
cmpsl
das
xchg
push
dec
sub
add
jg
ret
idivl
add
outsb
add
add
jp
sti
pop
add
xor
add
jnp
jmp
xor
pop
add
mov
jmp
int
sub
add
add
out
xchg
jae
sbb
pop
faddl
insb
add
ret
add
xchg
add
leave
cwtl
jle
mov
xor
push
lret
lds
push
add
xchg
fnstsw
fmull
gs
or
lods
xchg
mov
jne
rol
xor
or
jmp
push
pusha
add
adc
mov
mov
add
cmpsb
inc
add
daa
aaa
mov
jl
jecxz
add
or
add
sub
add
mov
add
push
add
push
add
xchg
sub
add
xchg
in
lods
mulb
add
fsubrl
add
and
xor
sbb
mov
in
mov
and
loop
jns
mov
push
fwait
jge
ret
xchg
add
xor
imul
pushf
testb
lahf
adcl
mov
cmp
mov
fistpll
mov
mov
aaa
repnz
iret
icebp
sbb
mov
lock
add
push
mov
jg
add
mov
add
mov
lock
add
arpl
add
add
jno
add
push
and
mov
add
sbb
repnz
lods
rolb
add
push
cmpb
cmp
filds
fstps
add
sub
add
lret
jbe
adc
insb
add
add
lret
cmp
xor
add
pop
jge
push
add
inc
add
push
add
jg
add
jge
rcrb
shlb
push
add
js
xor
push
les
push
or
mov
les
add
sub
mov
je
mov
lret
or
mov
adc
dec
add
popf
mov
cld
xchg
pop
lea
add
inc
add
and
mov
or
add
les
test
inc
add
jmp
sbb
pop
inc
xorb
add
ds
pusha
add
or
xor
mov
add
popa
dec
into
cmp
js
rcl
inc
add
out
mov
cli
jb
push
pop
add
test
or
add
add
je
jne
rclb
pop
add
mov
and
xchg
dec
and
cmpsl
mov
sub
add
jle
mov
push
or
addr16
add
sahf
ret
add
test
push
sub
in
rcrl
adc
cli
mov
add
pop
add
je
popa
cmpsl
cmp
mov
add
mov
add
add
rorl
mov
add
enter
add
add
add
mov
arpl
lcall
adc
cmc
int3
fwait
lret
add
add
add
cld
fld
jb
mov
add
xchg
xor
test
add
negb
imul
movsl
lea
cld
loop
add
enter
and
lock
sbbl
cmp
call
sub
fisttpll
xchg
std
xor
lret
out
add
or
ds
xchg
ret
or
jmp
pop
add
jmp
jl
das
ficoml
xchg
mov
add
and
mov
add
add
add
add
jmp
cmp
sub
jl
adc
xor
xchg
add
fisttpll
sub
rcrb
rorl
mov
add
js
jno
inc
add
add
out
xchg
cmp
add
pop
mov
or
add
stc
xor
inc
add
mov
cld
test
test
repz
adc
xorl
mull
shll
pop
add
loop
inc
add
aam
xchg
jecxz
add
mov
seta
cld
outsb
add
add
add
cmp
xor
sbb
sub
ret
add
add
fsubrl
add
or
out
mov
je
mov
loopne
testb
add
jl
dec
cld
popa
movb
sbb
fadds
push
adc
enter
mov
stos
sbb
adc
test
add
and
add
shll
add
out
xchg
movl
das
in
add
add
add
push
add
enter
mov
pop
add
mov
add
je
decb
add
cmc
adc
xchg
mov
arpl
adc
pop
add
mov
add
add
adc
add
hlt
push
add
aam
add
add
add
xchg
push
pop
cmp
xor
pop
cmpsb
push
add
add
sub
push
add
data16
xor
outsb
add
jno
add
add
stc
add
ljmp
roll
adc
xor
xchg
adc
subl
cli
loope
dec
add
add
jmp
jno
xchg
mov
add
stos
dec
add
rcll
pop
add
das
dec
out
xchg
sbb
lahf
mov
dec
je
sub
lds
add
aad
mov
cmpsb
xor
mov
ljmp
sbb
insb
add
xor
mov
rcll
add
add
inc
add
mov
nop
int
lret
hlt
pop
and
cmp
data16
pop
loope
pushl
add
lahf
pop
add
mov
jmp
jo
cmp
stos
std
cmp
rolb
aas
add
rorb
add
inc
add
xchg
or
orl
mov
inc
xchg
mov
add
int
dec
add
add
rolb
shrb
xlat
adc
pop
add
inc
add
add
cmp
mov
add
dec
add
mov
pop
add
add
enter
test
add
mov
add
and
pop
out
scas
mov
imul
sbb
js
mov
push
add
cmp
add
mov
add
add
mov
mov
cmp
jb
pop
add
jl
sub
xchg
sub
add
mov
add
mov
cltd
fldl
xchg
jne
add
jge
and
cmp
add
ffree
test
rclb
icebp
imul
cmp
push
add
cwtl
xor
add
adc
add
lret
shr
jae
out
add
push
add
or
insb
add
cmp
pop
data16
in
and
push
add
pushf
or
jecxz
jo
push
add
add
pop
dec
mov
rorb
loopne
add
add
nop
fwait
cmp
imul
addb
shlb
and
dec
add
in
pushf
fldt
pop
add
sbb
imul
aam
sarl
jg
adcb
push
sbb
push
add
aam
jns
jno
mov
add
sbb
mov
lret
add
jg
mov
add
and
outsl
sbb
push
add
add
popa
xchg
aaa
mov
out
les
add
xor
hlt
sti
mov
add
add
add
dec
rolb
pmaxub
shlb
add
xlat
sbb
jnp
xor
sub
adc
add
dec
add
mov
add
mov
sub
arpl
mov
push
add
add
cmpsb
out
lcall
pop
stos
enter
xor
in
mov
sbb
add
ja
add
cmp
mov
ja
sti
mov
add
add
lds
bound
lods
insl
inc
sarl
data16
xor
loop
mov
sbb
clc
test
xor
inc
add
add
bound
pop
call
sbb
cld
xchg
fldl
insb
add
xchg
add
ret
push
das
jl
jle
enter
rorb
add
outsb
add
repz
mov
cli
dec
xor
shrb
mov
push
add
fimull
add
xchg
and
test
add
pop
add
mov
ja
mov
loopne
inc
add
adc
je
inc
add
leave
in
add
dec
add
jmp
shll
cli
xlat
sbb
add
je
pop
call
xchg
and
inc
fs
mov
hlt
fldl
je
cltd
add
xlat
jecxz
add
sbb
cmpxchg
fcoms
enter
enter
push
add
aam
add
add
cmc
mov
push
add
mov
repz
orb
xor
test
dec
add
push
add
sub
add
add
xchg
fcmove
scas
or
and
cmp
pop
aad
or
cwtl
push
add
or
and
add
iret
jbe
cmp
push
add
insl
lret
pusha
add
sub
mov
add
daa
or
add
mov
add
add
negl
int
inc
add
jecxz
fsubr
add
push
add
add
add
incl
xor
jnp
pop
icebp
les
adc
enter
mov
add
adc
dec
adc
dec
add
dec
add
add
je
sbb
xor
adc
enter
add
cmpsl
adc
popf
and
add
add
repnz
add
sbb
push
add
and
fadds
cli
pusha
add
adc
lods
sti
test
sub
add
add
add
fldcw
add
daa
cmp
sbbl
les
mov
add
mov
out
jo
jle
mov
nop
imul
pop
arpl
jbe
movsb
sti
jmp
mov
and
dec
add
dec
add
dec
add
sbb
inc
push
add
lret
add
jo
rcll
add
sub
add
mov
adc
nop
adc
movsb
sti
inc
add
nop
lea
outsl
and
and
ret
jg
aaa
popf
inc
cmpsl
mov
sbb
inc
shl
pop
andb
rcll
xchg
insb
add
gs
subl
xchg
scas
sbb
or
mov
push
mov
std
push
push
loopne
sbb
rcrb
lret
mov
aas
data16
mov
jae
add
mov
add
pop
adc
outsb
add
add
add
pop
add
mov
aad
add
hlt
dec
add
inc
ret
push
push
add
inc
je
mov
add
enter
add
hlt
sbb
push
add
add
dec
in
add
loopne
lret
dec
add
add
xor
movsb
shll
aaa
jbe
xchg
mov
or
loop
inc
pop
add
mov
add
mov
add
add
inc
add
inc
add
jbe
adc
sub
test
add
add
add
xlat
jb
lahf
push
xchg
xchg
add
call
add
aam
add
repz
mov
outsb
add
adc
jne
andl
xchg
rcrl
out
lcall
add
fbstp
mull
add
lods
lods
repz
les
stc
add
aad
add
fsubr
push
add
pop
and
test
popa
jp
adc
in
xor
mov
add
add
lods
inc
in
add
add
mov
stc
out
popf
cmp
sbb
jmp
mov
rol
add
add
and
outsl
jmp
xor
and
outsl
mov
add
fwait
add
mov
mov
xlat
stc
xchg
xor
xlat
in
fs
inc
lods
mov
add
inc
add
add
sub
cmpsl
mov
and
mov
add
outsl
fdivl
add
push
add
scas
ljmp
add
add
loopne
xor
movsb
scas
xor
xor
lods
mov
add
inc
add
jecxz
cmp
dec
add
add
or
scas
push
add
pop
add
shlb
jle
fstpt
add
popa
dec
dec
add
lahf
jno
dec
and
mov
mov
cmp
stos
in
jecxz
add
orl
push
add
rclb
scas
cmp
push
add
add
mov
popf
xor
subl
push
add
jbe
push
add
add
outsl
pop
lds
add
int3
stos
sbb
sub
inc
imul
jge
add
add
push
add
add
add
mov
pop
les
add
dec
fsubl
add
or
adc
loope
stos
mov
pop
cld
cmp
pop
in
mov
lds
add
imul
add
nop
cmp
add
add
test
jnp
add
in
ret
add
add
add
enter
add
add
jg
aad
push
add
add
add
push
xchg
push
mov
cmp
mov
mov
add
aaa
xchg
add
adc
add
add
and
xchg
sub
sub
cmc
jmp
shll
mov
add
add
adc
sub
xchg
fldt
stc
fsubl
add
jo
jno
or
xor
lock
jne
lods
push
stc
movsb
sub
xchg
dec
sub
mov
or
add
ljmp
cmp
sbb
insl
or
add
add
and
pop
add
aaa
pop
pop
add
add
cmp
add
add
dec
lods
inc
add
jecxz
cmc
orl
add
mov
add
push
add
add
hlt
test
test
add
and
push
add
jbe
xchg
stos
push
idivl
add
push
jp
cmpsb
sbb
push
andb
add
push
out
sti
inc
jns
decb
inc
jl
int3
mov
add
pop
inc
mov
push
js
xchg
push
inc
add
xchg
test
add
sbb
inc
add
mov
mov
mov
lea
cmpsl
push
add
inc
add
adc
or
dec
or
enter
movsl
add
add
add
add
clc
arpl
jbe
daa
inc
add
addr16
ror
adc
push
add
shl
add
add
add
add
jbe
lahf
test
add
fidivl
add
ds
pop
loopne
add
sbb
add
add
gs
add
and
fimuls
add
ret
test
nop
icebp
outsl
mov
add
add
cmpsl
add
jnp
sub
jecxz
mov
push
add
into
sbb
xchg
sahf
stc
mov
sbb
inc
stc
stos
imul
pop
adc
cmp
or
cmp
xor
xor
enter
out
add
pushf
lret
scas
fwait
aaa
sbb
pop
jl
jae
mov
or
mov
mov
outsb
add
xchg
rolb
jp
xor
sbb
xchg
cmp
cmp
sarb
sbb
fwait
mov
push
adc
push
mov
xor
mov
mov
rcrb
nop
cmpsb
and
loopne
add
inc
push
add
jnp
add
add
add
out
add
and
jbe
dec
add
add
stc
sub
icebp
mov
add
fldenv
imul
dec
movsb
xor
add
add
add
negl
fstps
push
add
and
pop
sti
pushf
call
add
test
add
into
arpl
add
add
add
mov
push
add
das
cmpsl
inc
rclb
push
add
cmp
add
and
loop
jbe
mov
stos
push
add
lods
shlb
out
bound
mov
int
add
add
pushl
fmuls
mov
add
movsl
fisubs
test
mov
add
pop
pop
leave
mov
sbb
add
pop
test
xor
fildll
pop
lcall
je
aaa
push
add
cmp
in
add
xor
add
xchg
dec
add
decl
lds
std
inc
add
or
add
push
add
outsl
ja
shrb
cmp
ret
gs
mov
or
xlat
out
insl
sub
in
ficoml
xchg
and
mov
mov
add
cmpsb
add
and
lods
inc
or
and
clc
jo
insl
lret
push
push
jl
mov
out
sti
push
jno
add
push
add
add
add
out
test
in
cli
negb
jns
add
mov
push
sbb
jb
add
in
daa
in
mov
cmp
jge
lahf
xor
popa
fimull
dec
sbb
pop
add
sahf
in
test
arpl
and
cmc
push
and
ficoms
push
dec
add
in
xchg
xor
orl
mov
mov
jns
data16
jne
out
xchg
ljmp
add
stos
cwtl
add
lret
add
sub
add
push
add
mov
inc
add
add
and
or
int
aam
and
pop
inc
add
mov
les
ja
add
in
lea
add
pop
xchg
add
loopne
cmp
xor
loopne
and
cli
sarb
in
add
lcall
add
add
sbb
sbb
or
dec
add
add
dec
cmpsl
lock
fsubl
jnp
gs
add
cmpsl
nop
out
add
add
add
add
inc
xchg
roll
cmp
sub
insb
add
shll
les
add
xchg
test
add
dec
mov
loopne
jbe
sub
xchg
cmp
cmp
inc
add
xchg
mov
daa
lahf
xchg
pop
in
add
lret
fisttpll
pop
add
je
popa
hlt
xchg
call
or
add
shrb
mov
inc
outsb
add
daa
in
jo
xor
sub
popf
push
add
push
rorl
add
mov
add
xchg
out
sub
or
jnp
mov
mov
push
js
sti
push
negl
sub
imul
add
inc
push
add
inc
in
add
pushf
add
add
sbb
in
add
sub
js
ret
sbb
add
jmp
add
or
out
jo
aad
add
sub
std
fidivrs
add
mov
out
js
and
cmpsl
fsubrs
add
cmpsb
out
mov
add
pop
scas
cmp
pop
mov
insb
add
divl
add
stos
mov
add
mov
add
sbb
lcall
cmpsb
les
mov
add
mov
jbe
jle
pop
dec
add
pop
add
and
cmpsb
jo
sub
add
xchg
add
push
add
add
jp
xchg
add
lea
pop
mov
js
in
repnz
scas
movsl
mov
and
out
out
mov
add
movsb
push
add
mov
add
lods
or
inc
add
out
add
daa
pushf
xchg
inc
insl
push
add
jmp
sti
xor
cwtl
pop
add
ret
and
jne
add
shlb
data16
cmc
stos
les
cltd
inc
and
lds
push
add
push
movsb
loop
adc
add
xor
out
fsubl
mov
psubsb
or
les
lods
mov
data16
imul
lds
inc
add
add
add
adc
mov
cmp
pextrw
out
inc
or
pop
loope
iret
outsb
add
sahf
jns
add
mov
fildll
mov
in
test
adc
cltd
or
and
jg
add
dec
add
add
cmc
or
adc
std
mov
lods
aas
lea
pop
loope
lea
add
add
ret
cmp
mov
add
aam
add
lahf
movsl
mov
rcll
pusha
add
test
add
movsl
push
mov
arpl
sub
lea
jp
fildll
aas
sbb
xchg
imul
push
add
add
add
scas
repz
icebp
sub
cmp
je
andl
lods
lock
add
xchg
add
sbb
cltd
xchg
add
into
jae
add
add
add
add
add
mov
sub
hlt
pop
mov
add
mov
add
sub
stos
mov
add
push
add
and
pop
mov
pop
add
mov
add
add
jge
cwtl
sti
ffree
icebp
cmc
mov
or
cs
cltd
adc
sahf
jp
push
inc
add
outsb
add
add
add
in
adc
cmp
mov
loop
es
mov
sti
idivl
cwtl
dec
add
add
lock
cmp
mov
add
popa
movsl
or
sbb
mov
xlat
daa
jl
sahf
rolb
fwait
xchg
jl
fidivrl
jmp
clc
sti
addr16
in
je
lods
pop
ret
rcr
dec
pop
add
mov
das
lret
add
test
cmpsb
idivb
stos
jnp
xchg
sbb
inc
sub
mov
add
push
add
xchg
xchg
lret
jg
jmp
add
ljmp
pop
add
aam
sub
mov
xor
data16
ljmp
sbb
sbb
inc
add
add
add
add
incl
xlat
xor
push
xchg
loopne
ja
pusha
add
lods
inc
add
lret
xchg
sti
or
push
add
add
rclb
mov
pop
add
dec
add
cmpsl
xchg
lods
jbe
jo
push
mov
add
mov
lds
add
add
add
and
out
enter
js
rcll
mov
fldt
pop
mov
add
add
add
ss
dec
add
mov
addr16
fistps
outsb
add
and
jl
lods
arpl
adc
les
call
outsb
add
data16
in
test
insl
xor
add
mov
push
add
add
add
pop
and
push
add
add
roll
test
aad
xchg
or
jl
xchg
push
mov
mov
aam
scas
mov
xchg
dec
inc
jns
push
add
xchg
pop
pop
sbb
daa
lahf
xchg
cli
xchg
aad
lds
adc
fwait
fwait
aaa
das
jne
hlt
inc
loop
lea
xlat
lret
dec
add
dec
fucomip
jbe
dec
add
mov
test
xor
jl
ret
pushf
push
add
sub
repz
adc
cmp
mov
cmpsl
xor
jne
xor
movsb
mov
jmp
add
ret
jg
add
loope
aad
loope
push
add
int
add
test
aaa
pop
xchg
add
push
pavgw
int
and
out
add
dec
and
movsl
ljmp
add
xchg
xchg
sbb
jns
add
inc
jnp
dec
add
push
add
fistps
xor
pop
add
add
adc
aas
sub
add
fisubl
add
std
in
out
add
jmp
cmp
bnd
pushf
cmpsl
std
pop
scas
or
aaa
adc
jle
mov
pop
pop
pop
cli
mov
mov
push
add
repnz
add
lods
or
stc
pop
popf
add
lock
push
add
jge
mov
add
dec
add
pushf
loop
dec
add
jmp
mov
sbb
std
movsl
fidivrs
les
aad
add
add
stc
enter
test
add
add
ljmp
dec
in
push
jge
mov
pop
sub
cmp
andb
lret
mov
ja
xor
mov
xchg
fst
ja
add
xor
sub
mov
in
add
or
add
sti
xor
inc
hlt
scas
lds
jmp
ret
xlat
push
push
add
sbb
push
add
dec
xor
dec
add
aas
dec
movsl
ror
je
cli
test
pop
mov
sarb
and
mov
add
rolb
add
pop
add
add
push
add
push
add
insb
add
jb
jo
push
mov
jns
push
add
jmp
inc
dec
addr16
adc
xchg
mov
mov
ds
jae
add
mov
js
adc
aam
insl
dec
add
pop
mov
sbb
test
push
xor
aad
test
push
add
cmpsb
fmull
add
jb
add
add
notb
add
add
std
or
add
sahf
dec
add
dec
add
add
dec
add
lret
lret
xchg
push
mov
lods
xor
push
add
adc
jbe
enter
add
add
mov
add
add
jno
inc
add
outsb
add
dec
add
dec
add
add
ds
cmp
or
cli
into
push
mov
mov
rorl
mov
fwait
mov
std
push
lcall
add
out
add
cmp
inc
add
cmove
lock
add
and
xor
iret
pop
aam
add
scas
insb
add
out
dec
sbb
dec
add
add
movsl
cmpsb
and
in
ja
rorb
insb
add
icebp
fbstp
dec
lahf
add
add
sbb
cmp
add
add
shr
sahf
jp
je
adc
push
add
imul
cmp
fidivs
inc
and
addr16
push
add
bound
cmp
add
adc
jb
push
add
add
cwtl
cmpsl
jo
pop
jae
std
jmp
jns
xor
dec
cmc
adc
xor
aad
and
loop
add
dec
add
rdmsr
add
inc
add
fmull
add
pop
add
jecxz
or
loop
jg
add
roll
add
cltd
cmp
add
add
cmpsl
shll
pop
cmp
xchg
ret
dec
add
add
cmp
fimuls
add
add
pop
into
mov
outsl
jno
jle
xchg
jne
jo
loop
test
add
ss
mov
mov
movsl
sub
pop
add
sub
sti
aam
mov
jb
mov
mov
notl
dec
add
popf
mov
ret
pop
notl
xchg
push
or
add
or
adc
sar
scas
pop
add
xchg
lahf
jae
or
shl
lock
lods
push
add
shl
stos
clc
pop
add
bound
add
andb
mov
or
add
jge
loopne
add
mov
pop
add
fcoms
add
test
les
add
pop
add
fldcw
add
sbbb
inc
fldt
add
neg
punpckhwd
sbb
add
jb
mov
add
xchg
jecxz
rorl
mov
add
or
dec
xchg
mov
out
add
add
aas
sub
dec
fmul
push
add
nop
fists
iret
stc
in
sbb
popf
lods
mov
add
fisttpl
scas
xor
push
mov
mov
add
lea
out
add
mov
sti
in
cmpsb
dec
add
cmc
loop
rcll
data16
dec
into
xchg
ret
add
push
add
add
or
add
iret
stos
push
add
add
add
jae
xor
cmpsl
das
push
add
inc
add
mov
sbb
jp
fmull
add
pop
jmp
add
gs
je
or
or
jge
or
pop
add
and
lret
jle
inc
pop
add
in
jne
add
or
jecxz
mov
add
or
pop
add
mov
enter
add
add
icebp
push
scas
mov
sbb
and
or
add
repnz
add
dec
imul
dec
sbb
cmpsl
mov
and
add
sbb
jnp
push
add
stc
push
jmp
mov
and
pusha
add
add
repnz
add
sub
jne
dec
add
inc
add
add
into
mov
fdivr
sbb
test
mov
div
xchg
xchg
pop
add
ret
push
bound
ret
sbb
fwait
or
incb
push
add
add
push
lods
pop
dec
add
fldenv
into
mov
push
pop
cmpsb
imul
mov
cmp
jge
sub
push
xchg
movsl
sub
bound
aas
scas
mov
add
add
dec
add
add
inc
adc
negb
add
mov
add
add
in
lea
add
add
out
idiv
mov
pusha
add
push
add
roll
out
ljmp
pop
cli
or
pop
inc
popa
add
pop
add
call
add
xchg
in
xchg
data16
add
imul
add
add
add
popa
das
out
lock
dec
int
lret
push
add
inc
or
mov
push
dec
add
bound
in
xchg
and
rcr
push
add
add
out
add
sub
call
ficoml
popa
repz
inc
outsb
add
xchg
or
add
addr16
lcall
add
add
mov
mov
scas
add
in
pop
dec
add
arpl
add
inc
add
lds
lock
adc
call
add
add
mov
aas
add
mov
add
je
test
subl
scas
psrad
push
add
popa
add
add
rcrb
cltd
push
cmp
mov
add
js
xlat
push
add
scas
sbb
mov
sub
cmp
stos
popa
mov
cmp
pop
dec
fistl
or
sarb
jl
sub
into
cmp
sti
sti
jmp
inc
jle
adc
shll
mov
add
ja
add
loope
loop
xor
push
add
movsb
ss
jl
ficompl
push
push
add
and
test
shlb
add
and
add
add
add
add
jl
insb
add
xchg
test
mov
mov
test
mov
sub
mov
add
add
xchg
inc
add
inc
push
test
xchg
mov
or
mov
movsl
lea
movsb
aad
sbb
imul
lods
aam
sti
enter
insb
add
mov
adc
fidivrs
jecxz
add
stos
rclb
sbb
test
inc
add
jne
mov
mov
add
or
add
fldl
add
xor
int3
add
cmp
pop
add
rorb
dec
push
add
orb
imul
add
aaa
xchg
add
js
push
add
lret
pop
add
xchg
lret
xchg
cmpsb
fnstenv
fisubrl
dec
xor
clc
lahf
aas
mov
add
stos
sub
mov
outsl
mov
pop
push
pop
data16
and
jne
add
sub
add
and
in
add
add
jns
cwtl
adc
mov
jge
call
add
mov
add
int3
cwtl
add
add
jb
ljmp
frstor
add
adc
push
test
fsincos
add
jbe
adc
mov
xchg
lods
dec
add
sbb
add
cmp
mov
mov
and
rclb
ret
jg
pop
mov
out
xchg
sbb
fs
mov
dec
xchg
gs
add
scas
inc
add
cmp
int
mov
add
shrb
xchg
xor
add
and
mov
xchg
push
add
add
pop
add
pop
sbb
adc
push
add
fwait
jle
sub
cmp
or
or
add
xchg
fistpll
xchg
mov
and
push
add
inc
add
in
xchg
add
adc
popl
sti
fmull
sbbl
in
cmc
sti
lret
xchg
call
mov
add
xchg
adc
add
cmp
mov
xchg
in
add
add
addr16
dec
push
add
add
ret
rorb
insb
add
jl
pop
mov
add
add
les
push
add
daa
jge
in
mov
mov
lock
cltd
mov
or
xchg
inc
or
xor
fistps
inc
xchg
dec
mov
orl
data16
lds
cmpsb
xor
pop
aad
mov
lock
mov
movups
scas
pop
rolb
add
popl
jge
jnp
or
dec
movsl
inc
pop
add
loope
add
dec
add
add
add
or
dec
add
fwait
orb
xchg
mov
push
in
std
inc
test
dec
lock
jo
fidivrs
add
negl
xchg
lea
sbb
aas
stos
cmp
dec
loope
add
adc
adc
add
xorl
fwait
jl
lods
enter
stos
cli
aad
add
add
add
cmp
hlt
int3
mov
js
repz
dec
test
add
jge
add
inc
add
inc
lock
push
add
jmp
icebp
add
add
je
je
push
mov
neg
into
test
cmp
push
sbb
repz
add
sub
daa
cli
lcall
add
mov
pop
ljmp
lods
pop
cli
push
add
test
test
into
sub
sti
out
add
add
dec
scas
sbb
add
pop
lahf
inc
aas
jne
inc
shr
jp
stos
xor
clc
or
pop
add
dec
add
push
add
add
add
popa
iret
jnp
sahf
lods
inc
add
add
cmpl
divl
call
add
pop
add
add
add
icebp
dec
out
pop
les
mov
cltd
add
lds
fnstcw
not
stc
fldcw
ret
lods
aaa
mov
test
mov
add
sub
xor
sub
cmpsl
hlt
lods
pop
add
add
stos
push
stos
cwtl
add
loopne
pop
add
lcall
jo
mov
add
cmp
repz
push
add
mov
lahf
shrl
mov
mov
in
push
add
xor
mov
add
ror
mov
ret
mov
inc
sbb
adc
les
add
mov
pop
add
fcoms
add
cmc
xorl
fcoms
out
jne
add
negb
add
jg
clc
lcall
xchg
inc
add
addr16
mov
add
add
movsb
mov
mov
pop
bound
das
sbb
test
pop
lret
in
sarb
pop
data16
mov
push
push
xor
jg
in
push
int
pusha
add
int3
sbb
sbb
add
cmp
add
shrl
push
add
ret
push
add
add
stos
push
add
add
sar
jp
sub
jbe
call
pop
add
and
dec
add
add
pop
pop
add
enter
jne
bound
test
mov
add
and
add
lods
aaa
adc
rclb
inc
repnz
xor
outsl
hlt
add
xor
adc
shrb
bnd
add
fmuls
int3
add
insb
add
setb
add
xor
jne
sbb
mov
loop
add
scas
loopne
mov
and
add
imul
inc
add
lret
xor
push
add
ficomps
xchg
sahf
in
in
jg
jmp
add
inc
out
add
sbb
jge
je
jl
and
mov
outsl
sbb
push
push
add
lahf
mov
xlat
mov
cmp
mov
add
ja
mov
xorb
and
add
cmpsb
xchg
std
jge
add
neg
fiaddl
pop
add
mov
in
mov
es
rcrl
mov
sbb
ja
cmp
mov
xlat
ja
call
cmp
xchg
xchg
imul
add
push
add
movsl
movsl
fcmovne
jnp
cmc
jae
mov
je
pop
fcmovnb
daa
cmp
cmp
xchg
ficoml
mov
add
sbb
sbb
add
add
add
mov
jg
pop
add
out
cld
orb
add
add
cs
dec
stc
fwait
in
cmp
cmp
pop
sub
fwait
mov
out
daa
lahf
cltd
add
movsl
daa
push
add
add
out
mov
out
mov
add
loopne
iret
movsl
test
fcmovnb
pusha
add
add
mov
add
adc
je
push
add
sahf
dec
add
add
loope
xor
add
ret
dec
inc
add
mov
add
add
add
add
mov
pusha
add
test
loop
inc
add
loope
mov
imul
xor
jg
fs
mov
fiadds
adc
leave
shr
mov
in
sahf
sbb
icebp
xor
into
scas
pushf
loop
or
dec
add
or
and
xchg
mov
das
pop
add
mov
cmp
add
xchg
imul
std
pop
add
scas
jg
sbb
imul
sbb
mov
add
cmp
clc
add
pop
add
mov
icebp
stc
ljmp
pop
add
scas
jmp
out
inc
add
add
mov
mov
sbb
sbb
or
add
pusha
add
mov
test
add
jo
xor
bound
rcll
sbb
push
add
xor
dec
mov
test
outsb
add
lock
add
add
or
and
pop
or
xor
cmpsl
test
in
and
addr16
add
adc
sub
add
pusha
add
into
es
pop
jecxz
popl
fsqrt
lds
mov
pop
xchg
dec
add
push
add
sub
aaa
loope
scas
push
add
out
inc
add
pop
add
pop
add
movsl
in
sbb
xor
add
pop
outsb
add
or
ficoms
add
cmpl
xchg
les
add
push
add
sarb
mov
aaa
pop
imul
out
mov
mov
adc
stos
mov
nop
in
fcoms
or
push
add
lods
inc
sbb
rcrb
divb
ret
call
cltd
push
add
add
add
addl
mov
push
add
xor
jecxz
repz
xor
jecxz
xchg
and
mov
add
add
add
push
push
add
pop
add
or
push
add
aam
xchg
add
jno
inc
push
pushf
xchg
mov
lcall
mov
sbb
add
lods
and
repz
scas
das
lea
leave
je
frstor
add
jg
add
sbb
fistpl
add
sbb
inc
xchg
xor
rcrb
pop
add
adc
add
push
add
repnz
xor
shl
or
add
add
add
hlt
inc
add
shll
mov
add
dec
xor
mov
add
fidivs
outsb
add
sub
jb
jg
popa
rolb
movsl
sarl
and
cmp
mov
fidivs
add
test
add
cltd
jle
mov
cmp
add
add
stos
popa
les
sub
add
add
mov
pusha
add
adc
mov
fdivrs
add
jo
stos
xor
bound
cli
cmc
cmc
push
add
les
js
pusha
add
add
add
add
test
add
jl
test
nop
std
sbb
icebp
cmp
sti
push
dec
add
add
cmp
lods
push
pop
fstpl
dec
sahf
jl
std
ret
pop
add
or
test
stos
ret
jg
add
add
imul
xor
mov
movl
mov
subl
jl
xchg
push
add
inc
add
mov
repnz
inc
fcomps
push
sub
enter
add
push
add
add
fwait
add
shrb
add
jne
add
mov
sub
or
outsb
add
push
add
add
jecxz
jle
decb
add
add
add
in
int
scas
xor
stos
fstpt
sbb
pop
add
lahf
daa
adc
add
mov
sbb
mov
add
and
mov
andb
add
call
ja
add
bound
sub
mov
add
cltd
scas
mov
aaa
push
add
push
add
push
add
add
add
jp
mov
push
add
push
add
pop
add
add
add
mov
adc
xor
aaa
test
dec
adc
push
add
add
xorb
or
aaa
loope
add
pop
push
add
add
mov
xchg
xchg
std
and
push
add
add
pop
pop
add
push
add
nop
cmp
dec
data16
jo
pop
jne
adc
sbbb
add
add
shrl
and
ret
push
add
cmpl
add
les
add
add
jecxz
mov
test
scas
neg
fcoml
xchg
inc
add
out
ja
add
push
add
dec
add
adc
lcall
add
frstor
add
pop
movsl
push
add
ljmp
insl
push
add
jns
or
cmp
bound
jp
adc
aad
push
add
hlt
fmuls
ds
jle
in
cmp
push
add
xor
mov
call
or
ljmp
adc
push
jno
lods
push
add
pop
add
adc
mov
out
mov
aaa
mov
xchg
arpl
jg
pop
mov
pushf
add
or
mov
mov
data16
sub
div
fistpll
add
addr16
data16
mov
test
push
add
dec
std
jne
add
add
push
pop
xchg
pop
add
mov
stos
in
or
jnp
add
jecxz
add
add
add
push
add
aad
or
into
lea
out
push
data16
add
and
mov
int
inc
add
shl
pop
add
loope
add
add
leave
movsl
pop
lret
and
mov
add
das
sbb
gs
mulb
sbb
mov
hlt
xchg
addr16
add
jg
add
add
add
add
mov
adc
push
add
rorb
mov
push
add
add
stos
xchg
jno
add
pop
add
xchg
xchg
pusha
add
fcoms
clc
mov
add
add
add
call
add
pushf
mov
cmpsl
fsubrp
or
mov
cltd
fwait
jne
lahf
xchg
inc
add
add
add
sbb
sahf
pop
dec
cmp
push
add
xchg
loopne
add
add
push
add
xor
gs
cmp
inc
inc
or
inc
add
fisubrl
mov
xchg
jb
push
popf
pusha
add
sub
xchg
into
adc
inc
mov
dec
and
xchg
sub
jnp
in
roll
add
or
movsb
pop
add
dec
xor
aad
add
jg
inc
sub
lahf
pop
stos
lds
dec
add
add
cwtl
repz
repz
add
mov
and
ret
xchg
pop
add
and
push
add
clc
xchg
lock
adc
pop
int3
sub
pop
pop
add
push
add
add
cltd
test
sub
adcb
mov
je
clc
ja
xor
and
sbbb
pop
inc
add
lods
insb
add
add
mov
push
add
add
mov
cld
dec
add
add
sbb
push
add
add
dec
or
add
push
add
lods
fs
sub
repnz
add
push
dec
add
add
faddl
in
icebp
mov
cmpsl
mov
add
add
out
and
das
pop
popa
push
add
mov
in
and
int
arpl
mov
mov
cli
and
popf
sub
and
add
add
and
scas
sub
jno
bound
inc
add
inc
push
add
add
popl
andb
jnp
pop
or
add
push
add
jae
add
push
add
add
stos
or
xor
pop
add
fldenv
out
imul
mov
ljmp
add
addr16
add
pop
add
pop
add
imul
je
dec
out
add
mov
sub
mov
jp
out
dec
mov
fiaddl
test
jmp
push
add
add
push
lock
cmp
out
filds
stos
push
imul
add
add
mov
sbb
xlat
add
add
out
cmc
daa
insb
add
popf
and
popf
mov
add
add
xchg
adc
loope
mov
or
xchg
sbb
and
test
push
add
push
add
add
xor
pop
add
jle
cmp
ljmp
add
pop
add
repnz
pop
add
inc
add
add
cmp
aas
sub
xchg
jb
inc
ljmp
or
cmp
and
add
movsl
aad
add
sub
cwtl
push
iret
cmp
je
push
or
aad
ja
add
jl
cmpsl
test
cmp
inc
add
push
data16
sbb
push
add
add
adc
add
add
add
cld
adc
jne
cmp
add
sub
add
mov
hlt
mov
test
stos
push
push
movl
les
into
xlat
add
add
jb
jmp
push
scas
jp
mov
cli
jbe
loope
xchg
movsb
mov
mov
or
or
add
add
mov
pop
mov
mov
mov
add
mov
out
or
sar
push
popf
fmull
fsubr
movsb
or
push
add
sub
cwtl
sub
or
add
jecxz
mov
add
adc
inc
add
add
mov
insb
add
jmp
add
mov
push
add
add
hlt
cmpsl
pop
add
add
inc
adc
add
addr16
inc
xchg
mov
add
leave
shll
add
xchg
add
add
cmp
add
add
xor
add
xchg
gs
add
add
imul
lcall
ljmp
int
stc
xor
jbe
sub
imul
or
mov
add
add
dec
out
repz
cmpsb
data16
add
add
mov
out
add
add
add
add
add
fimuls
mov
dec
add
pop
stc
rorl
scas
jae
adcb
sub
sub
ret
stos
mov
push
add
mov
xor
jno
sub
dec
add
add
pop
add
inc
add
inc
mov
xchg
add
add
inc
add
fdiv
int3
cmpsb
fucomip
loope
das
cmp
add
add
pop
add
add
call
add
sbbl
add
add
add
lea
lahf
push
jne
enter
fists
sbb
pop
or
add
pop
add
rcr
or
or
cmp
add
lea
popa
mov
pop
add
cmp
pop
mov
jl
add
lds
add
add
data16
jle
aas
jle
xchg
jge
add
out
or
dec
addr16
push
add
pop
cmp
mov
mov
and
in
push
add
mov
sbb
or
movl
add
addl
add
mov
add
pop
popf
int3
lods
sbb
or
mov
add
xlat
outsb
add
add
add
add
movsb
push
and
jmp
add
fs
and
or
in
push
add
inc
mov
inc
add
or
out
mov
psubw
or
add
xchg
dec
repnz
sti
sete
push
mov
mov
adc
lret
xor
leave
push
add
add
out
lahf
cmp
mov
leave
mov
imul
pop
and
xor
int3
jge
cmp
mov
bound
mov
add
cmp
js
mulb
add
int3
and
shl
lods
pop
or
aam
inc
icebp
cmp
inc
add
mov
mov
dec
jl
push
aaa
push
add
movsb
adc
into
lock
add
dec
mov
jl
push
dec
add
mov
add
mov
add
push
add
fsubp
jmp
add
mov
stc
mov
push
add
mov
int
add
xchg
adcb
ret
mov
add
cmp
outsl
ficoml
mov
jno
and
cmpsb
and
mov
xchg
fmuls
push
icebp
aad
push
add
push
add
pop
add
add
jno
add
lock
insb
add
add
in
hlt
push
add
or
int
inc
and
ljmp
sbb
jns
cmp
movsb
jbe
push
add
cmp
pop
and
pusha
add
mov
push
add
jb
mov
in
ja
stc
adc
and
add
jnp
loope
sbb
jmp
xor
mov
add
xchg
rcr
mov
add
sub
xchg
lret
sti
and
imul
add
add
mov
and
and
xchg
add
jae
dec
cmp
into
nop
inc
xchg
je
xchg
xchg
dec
fnsave
add
add
cmp
sbb
imul
add
pop
fisttpl
mov
aaa
inc
adc
jb
add
shrb
jne
add
popa
cmc
xchg
xor
xchg
adc
sti
mov
jo
into
push
add
mov
add
xchg
dec
add
add
and
dec
dec
or
cs
dec
pop
jl
mov
add
add
mov
sub
push
add
hlt
cmp
add
add
add
push
push
lret
iret
mov
jl
shl
add
add
xchg
hlt
in
xchg
pushf
insl
xor
adc
jnp
mov
sbb
nop
pop
or
add
add
xchg
add
out
jne
mov
sarl
push
cmp
mov
add
mov
iret
fistps
int3
fcomps
push
add
jns
xor
add
adc
in
add
adc
mov
loopne
jg
outsb
add
add
add
int3
popf
mov
jl
inc
ljmp
dec
add
pop
out
add
add
add
cmpsb
pop
add
out
dec
mov
xchg
scas
rol
cld
adc
fwait
scas
xlat
dec
pushf
mov
lret
jmp
pop
add
add
add
pop
inc
and
lods
bound
loop
adc
cwtl
push
cs
popf
mov
add
rcrl
outsl
inc
add
outsb
add
sub
sarl
stos
jecxz
shlb
jl
ljmp
add
inc
add
add
in
mov
pop
add
mov
and
loope
icebp
fwait
mov
jl
mov
dec
lea
xor
or
out
loope
scas
inc
push
add
mov
stos
mov
repnz
add
add
mov
mov
add
into
push
add
push
int
dec
jp
outsl
cmpsl
sub
sahf
rcrb
add
add
js
mov
add
mov
adc
add
sbb
mov
loop
in
jle
lret
jle
sbb
add
loopne
xchg
mov
sbb
mov
mov
nop
scas
pop
outsl
push
add
stos
jl
jg
add
add
pop
add
bound
adc
rcr
in
adc
rcrb
add
popa
mov
xor
das
mov
outsl
inc
ja
andb
loopne
jae
mov
nop
jg
push
in
mov
inc
add
add
jmp
xchg
sbb
push
add
add
jl
xchg
mov
scas
daa
call
mov
les
xchg
in
add
add
add
mov
add
add
sahf
xchg
nop
leave
xchg
cld
jmp
pop
add
add
mov
add
mov
pop
and
xor
lcall
out
and
mov
add
lahf
sub
cli
and
push
mov
aaa
add
scas
mov
add
into
add
add
iret
fbld
add
and
loopne
and
test
lret
xor
jb
dec
add
inc
add
push
add
scas
nop
das
ja
xor
push
add
push
add
in
std
bound
push
scas
inc
add
add
add
insl
mov
ret
inc
mov
sahf
dec
cs
outsl
xchg
subl
add
add
cmp
scas
std
shll
mov
add
add
xor
out
add
add
cld
std
stos
cmp
mov
mov
ljmp
add
add
sbb
xor
xlat
incb
movsl
pop
mov
dec
cli
imul
stos
sbb
out
mov
mov
cmp
test
sbb
add
sarb
lahf
mov
push
add
dec
add
pop
cmpsb
repz
and
add
cmp
shlb
adc
add
data16
popa
dec
add
out
xor
out
out
pop
xchg
adc
lock
pop
add
mov
jbe
not
repz
mov
xchg
popf
ret
add
add
add
xchg
ret
lea
bound
loopne
xlat
mov
js
jae
lods
ffree
add
nop
daa
add
xor
imul
add
pop
jp
repnz
add
pop
fnstsw
add
xor
dec
add
add
add
add
adc
cs
stos
stc
dec
cmp
test
fisubrs
jle
sbb
sbb
add
bound
mov
xor
mov
add
mov
sti
sahf
push
add
add
cmpsb
sbb
out
mov
sub
insb
add
add
sbb
jecxz
sub
in
ret
dec
add
int3
mov
cmpsb
ret
lahf
add
fstps
add
push
add
dec
add
xchg
push
add
sbb
push
add
add
add
cmp
xor
pop
outsb
add
fdiv
xchg
subb
add
add
mov
or
test
sbb
popf
push
add
repz
shll
sub
jl
cmp
add
mov
shlb
add
call
jno
add
and
inc
lahf
sbb
add
pop
lods
inc
dec
inc
test
add
pop
add
sub
cwtl
fs
dec
popa
stc
xlat
add
adcb
out
scas
mov
push
adc
add
imul
add
dec
sub
add
mov
sarl
or
sbb
mov
ret
jae
add
add
in
es
cmpsb
add
sub
ja
mov
xor
cld
andb
sahf
lods
test
into
inc
pop
add
xor
cmp
jmp
fists
ret
ficoml
sbb
repz
jmp
cwtl
mov
add
nop
ja
lcall
loope
mov
pop
je
inc
add
lods
enter
call
add
ja
add
sar
jl
pop
add
mov
loope
cmpl
adc
xor
cmp
lea
mov
sub
push
ret
xor
add
inc
inc
add
ret
adc
add
add
scas
cmc
test
pop
xor
mov
pop
add
xor
icebp
shl
loopne
sub
inc
add
out
loope
add
add
shll
inc
add
add
ljmp
and
ret
iret
push
or
stc
aas
dec
add
xchg
bound
pop
out
aad
add
add
or
mov
ret
adc
add
jecxz
mov
jno
jo
xchg
xchg
jbe
inc
add
mov
add
jmp
add
add
popf
cmp
dec
stos
cmp
jge
xor
daa
test
dec
add
repnz
cwtl
lret
sub
mov
add
sub
pusha
add
add
aad
test
inc
inc
cmp
pop
adc
test
fstpl
inc
add
sbb
shl
xchg
daa
lahf
in
pop
pop
add
xchg
cltd
cmpsb
outsb
add
sbb
add
cmp
add
add
push
movsb
addl
pop
aaa
xchg
test
add
adc
sti
sbb
cmp
insl
dec
xor
sbb
push
add
in
cmp
stc
dec
add
add
add
add
scas
les
xchg
add
test
or
add
aam
jae
jecxz
dec
add
xor
imul
insl
xchg
push
add
mov
add
add
pusha
add
or
jle
bound
jns
sbb
mov
or
jns
bound
out
fwait
adc
add
adc
jmp
sub
add
dec
add
pop
call
add
jb
xor
mov
add
out
add
lahf
mul
or
push
orb
ja
pop
cmp
adc
popf
cltd
pop
add
mov
add
nop
int3
mov
mov
xchg
out
add
add
push
add
cmp
sub
loop
jecxz
add
stos
lahf
xchg
outsl
add
cmp
pusha
add
mov
add
xor
sbb
inc
add
adc
mov
add
mov
add
add
xchg
fisubs
ljmp
enter
add
rcll
call
mov
data16
add
js
jecxz
xor
add
sbb
and
add
add
xchg
sbbl
xchg
add
movsl
cmp
add
pop
xor
xor
add
add
mov
add
and
add
add
inc
into
push
add
mov
push
faddl
push
adc
push
add
dec
mov
add
add
jnp
add
sub
xchg
inc
adc
sbb
add
dec
mov
pushf
pushf
out
mov
std
lret
mov
push
add
or
sbb
cltd
xchg
push
lret
sub
push
negb
sub
inc
add
dec
mul
popf
mov
into
adc
add
or
push
add
call
cmp
inc
pop
data16
icebp
push
add
out
cmpsb
pop
into
mov
test
cltd
insl
shll
sti
mov
imul
inc
add
popf
sbb
in
push
ret
popf
adc
xchg
and
movsb
sti
add
sub
add
repnz
cmp
cmp
add
jmp
enter
adc
and
xor
add
mov
xor
out
sbb
les
cmp
add
mov
xor
add
add
outsb
add
outsl
lret
cmp
jnp
add
loop
cltd
cmp
jae
add
add
test
seto
inc
mov
add
jns
dec
dec
in
imul
adc
mov
lea
in
add
adc
mov
jnp
in
inc
movsl
lods
xchg
mov
xchg
ss
cmp
sti
xlat
mov
add
mov
in
xchg
and
add
add
add
add
or
fiadds
cmpsb
add
add
mov
outsl
leave
inc
add
jno
add
shlb
add
or
mov
mov
xor
sbb
cltd
cld
inc
add
jp
cmpb
cmp
nop
cmp
insl
mov
stos
sti
rclb
icebp
repz
sbb
loop
add
xchg
fwait
stc
fsubrp
fsubs
add
mov
stc
aaa
fbstp
clc
rclb
addr16
pop
xchg
jmp
dec
add
dec
jle
gs
decb
add
int3
inc
add
ret
clc
std
ljmp
fimull
add
test
xlat
push
xor
scas
into
cmp
add
xor
mov
add
push
add
cmp
fisttpll
pop
ja
add
jne
test
mov
shll
sbb
ret
push
cli
std
movsl
inc
test
mov
in
jl
fstl
ds
sbb
add
scas
in
add
aam
scas
sbb
inc
add
aas
in
mov
add
add
add
add
sub
test
ficoml
add
jg
and
mov
add
mov
cli
clc
dec
mov
sub
xor
cld
pop
sbb
mov
sahf
arpl
pop
stos
adc
add
data16
in
sahf
xchg
cwtl
xchg
int3
or
jp
outsb
add
jle
dec
add
add
add
and
testl
add
add
add
push
add
jne
mov
roll
add
stos
fucomip
mov
loopne
lds
add
add
mov
data16
addl
add
add
add
cld
mov
imul
ret
scas
je
dec
mov
add
add
add
dec
or
sbb
mov
add
add
add
mov
mov
les
in
scas
and
push
mov
add
sub
in
ret
fcomip
pop
add
add
arpl
or
add
cltd
cmpsb
icebp
xor
push
push
add
cmc
lods
push
add
add
data16
and
lock
jne
add
cli
xlat
push
jb
cld
test
scas
fcmovbe
mov
add
add
mov
mov
add
xlat
or
xlat
cmpsb
js
cmp
out
ljmp
add
scas
cmc
mov
int
add
arpl
testl
mov
fsubrl
bound
or
add
inc
add
add
jo
mov
push
push
add
les
lahf
jge
push
add
jecxz
push
add
xor
add
jle
cltd
clc
in
xchg
shll
jae
or
scas
out
in
or
sahf
jnp
add
shll
clc
cmpb
or
add
push
mov
add
ret
sbb
pop
cmp
stos
pop
sti
mov
push
mov
mov
add
aaa
fisubs
inc
add
add
push
add
add
cltd
add
inc
or
in
lahf
div
add
jbe
push
add
test
pop
push
add
add
fcomps
sbb
pop
mov
xchg
fists
aaa
cs
cmp
cmpsl
and
fisubrs
push
stc
jb
int
divl
add
dec
adc
cwtl
pusha
add
push
mov
add
or
push
add
repz
pusha
add
add
sub
mov
pop
add
pop
btrl
jl
add
add
jmp
jp
stc
pop
sub
call
jae
mov
shll
ja
je
lahf
jecxz
add
arpl
fidivs
push
push
add
add
or
or
push
add
ss
inc
add
adcb
add
add
enter
das
mov
jbe
es
pop
add
int
add
mov
loopne
add
sub
mov
mov
sub
pop
add
add
enter
add
add
mov
add
mov
insl
or
std
jae
roll
add
jne
add
push
lcall
jle
xchg
pop
popf
aaa
fwait
mov
add
add
mov
mov
in
mov
mov
dec
add
add
add
pop
add
sub
scas
push
int3
lret
cli
mov
sar
jae
adc
mov
aad
cmc
es
ret
dec
insb
add
xchg
and
add
pop
add
or
jb
add
add
add
loopne
add
sarl
adc
push
add
stos
pop
add
leave
xchg
int
fucom
jl
out
int3
insb
add
add
xchg
sarb
movsb
stos
mov
add
add
add
call
push
add
fnstenv
cmp
add
mov
mov
push
add
push
add
es
push
jg
lock
sbb
sbb
adc
lods
mov
add
lock
pop
add
push
add
sub
add
add
add
mov
xor
push
mov
or
mov
popa
mov
add
shl
fadd
ret
scas
jno
clc
xchg
scas
cwtl
xchg
mov
cmp
cmp
push
loop
xchg
xchg
jb
iret
add
dec
add
loop
xor
mov
adcb
test
push
add
aam
sarl
imul
push
add
lods
imul
add
setns
mov
test
stc
shl
lods
jmp
lods
jecxz
push
add
dec
add
mov
xchg
out
pop
add
add
xchg
mov
imul
jb
jno
pop
add
jmp
mov
add
aam
dec
add
add
mov
arpl
popf
popf
idivl
and
mov
inc
add
popf
rcl
xchg
insb
add
movsl
arpl
dec
add
lret
jno
add
subb
xor
ror
jecxz
add
add
ret
mov
data16
mov
repz
dec
bound
andl
add
mov
jne
repz
pushf
mov
adc
or
lods
and
aaa
inc
add
outsb
add
add
mov
cmpsl
lock
aad
add
pop
cmp
fwait
dec
add
jne
out
or
repz
ret
jge
add
in
mov
pusha
add
sub
dec
fst
sbbb
add
cmp
out
cmpsb
sti
xchg
dec
pop
xor
mov
mov
pop
add
enter
sub
repnz
pop
mov
clc
inc
add
stos
dec
add
popf
stc
jmp
add
outsl
jmp
inc
add
xchg
add
outsl
stos
gs
add
add
popa
enter
pop
add
imul
fidivl
mov
add
add
jo
dec
add
jg
add
andl
mov
pop
lret
daa
xlat
std
negb
add
inc
add
mov
fs
dec
mov
add
mov
or
cld
in
ret
ret
std
in
dec
add
dec
add
mov
jo
addr16
int3
scas
clc
in
push
add
sub
movsb
xor
aam
jbe
sbbl
add
sarb
mov
repz
ret
mov
ffree
int3
dec
loop
inc
add
add
add
cmp
mov
inc
into
sub
jno
bound
cmp
lahf
jle
lret
add
data16
scas
cld
out
data16
icebp
or
sub
outsb
add
sarl
pop
add
add
in
add
cmp
dec
xchg
xchg
push
add
jnp
out
mov
lcall
add
add
jmp
sub
or
add
sub
in
popa
imul
js
lods
jne
cmp
ret
je
aam
cwtl
xlat
xchg
pushf
push
in
sahf
dec
add
in
cld
je
subb
icebp
sbb
fisttps
add
mov
inc
add
insl
pop
push
add
fwait
sub
add
mov
jbe
pop
repz
icebp
mov
add
shlb
add
cmpsb
dec
xchg
pop
cmpsb
adc
jmp
mov
cmpsl
cmp
daa
inc
add
mov
mov
sbb
or
in
xor
add
inc
dec
add
or
ficomps
mov
adc
sbb
sahf
add
sub
xor
inc
add
mov
sbb
pop
stos
lock
das
add
testb
push
cmp
fists
add
add
loopne
fsubr
insb
add
data16
rcr
add
loopnew
cmpsl
mov
add
cmpsl
jl
mov
imulb
add
cmc
sarl
jle
in
add
add
add
pop
add
and
mov
push
add
jb
fsts
sarl
sbb
jl
ret
mov
push
fstpt
addr16
cmp
add
ret
stos
xchg
add
data16
fwait
stos
jbe
cmpsb
mov
push
push
arpl
sub
or
dec
add
and
and
push
add
push
add
adc
test
xor
and
adc
std
cmp
pop
xor
jmp
shr
test
in
mov
inc
add
pop
xchg
cmpsb
pop
add
add
repz
add
fadds
cmp
add
add
inc
add
mov
add
xor
cmp
add
mov
add
in
imul
lock
add
add
lret
cmp
lahf
in
add
mov
imul
or
dec
fdivrl
add
inc
in
sbb
icebp
sbb
repz
add
sbb
mov
add
ror
xchg
jmp
add
fcomps
lods
mov
mov
add
or
orl
scas
dec
mov
dec
add
jo
lods
sarb
add
add
cmpl
xor
jnp
rcr
add
add
add
fists
repz
inc
add
mov
rol
push
icebp
lea
adc
pop
add
fldenv
add
mov
cmpsl
jge
cwtl
insb
add
jbe
mov
pop
jge
add
add
inc
add
add
mov
add
dec
add
xchg
jne
mov
add
sub
call
add
inc
in
loope
stc
inc
push
mov
add
mov
add
sub
mov
les
add
add
add
cmp
shll
ljmp
les
in
rep
sbb
add
rcll
add
add
add
xor
add
add
pop
add
and
inc
bound
lods
sub
sub
in
or
aas
cltd
mov
mov
add
xchg
mov
add
ret
pop
cmpsl
jl
sub
xchg
fsts
or
adc
addb
call
and
dec
add
inc
add
xchg
adc
cli
xchg
or
add
jae
mov
jecxz
jbe
add
xchg
mov
aam
mov
mov
add
cmp
cmp
jg
mov
add
mov
add
subb
xchg
xchg
dec
add
adc
lock
add
std
test
fwait
fwait
subb
stos
mov
clc
aas
bound
pop
or
movsb
stc
mov
sti
mov
add
loop
bound
sbb
add
xchg
sbb
sbb
xor
adc
repnz
add
add
add
cmp
pusha
add
test
stos
fnstcw
inc
add
ljmp
icebp
mov
push
pop
add
and
cmpsb
add
lcall
rorb
xor
add
movsb
aaa
imul
add
test
mov
cmpsb
gs
ja
dec
add
scas
jo
pop
add
xchg
mov
or
hlt
jns
cmp
ljmp
jb
js
dec
add
xor
add
inc
sbb
push
add
xor
pushf
imul
add
jnp
fcoml
add
ss
sub
fbstp
and
pop
movsb
scas
push
pop
fwait
inc
add
xor
mov
inc
add
call
aam
add
dec
add
inc
add
sub
insl
lea
push
add
js
int3
cmp
shll
data16
cmp
mov
jmp
add
add
cmp
and
scas
movsb
hlt
inc
pusha
add
std
enter
stos
mov
add
sbb
arpl
mov
fwait
in
add
out
dec
push
add
add
inc
popl
add
jge
add
fistpl
xchg
lods
xchg
nop
inc
add
jnp
sbbb
call
test
aaa
fistl
add
add
jo
aas
cmp
adc
dec
add
mov
imul
imul
mov
and
add
push
add
add
bound
push
movaps
data16
imul
add
xor
add
adc
pushf
iret
or
flds
repz
add
rcrb
add
add
add
and
xor
mov
add
and
dec
repz
movsb
mov
inc
add
scas
rorb
add
stos
sbbl
test
gs
add
mov
add
mov
add
push
sub
sub
sub
bound
adc
dec
add
and
sbb
mov
add
jne
aam
in
add
pop
inc
add
add
mov
xchg
lock
arpl
add
mov
dec
add
rol
cmp
into
cmpsl
lahf
xor
lock
lods
data16
lahf
pop
add
add
cmp
mov
add
int3
cli
lds
add
jno
rcl
ja
daa
or
push
mov
loop
dec
fs
fmul
fsubs
push
pop
jbe
xchg
add
loopne
add
out
pusha
add
add
lock
cmp
lahf
std
fadds
in
test
add
add
test
pop
cmpsl
insb
add
xchg
out
cmp
shlb
out
shrl
add
jle
hlt
daa
nop
mov
jle
push
fsts
add
xchg
cmpsl
inc
add
jo
xor
lea
stos
sbb
in
add
loope
jmp
add
repnz
add
mov
mov
sub
push
fisttpl
add
xor
leave
movsl
mov
dec
add
add
cmc
test
and
ja
sahf
add
outsl
fildll
add
xchg
pop
js
mov
inc
add
inc
add
add
jecxz
add
outsl
repz
add
sbb
sbb
ret
jg
test
rorb
mov
push
add
mov
add
in
push
add
test
fiadds
inc
add
pop
push
add
rcr
outsb
add
in
fmull
fmulp
push
das
mov
add
dec
popa
in
les
outsb
add
ret
push
add
jge
add
pop
add
add
mov
push
xor
add
add
mov
cmpsl
sahf
inc
push
add
lock
sarb
cld
adc
aaa
push
add
pop
jmp
add
add
jmp
loopne
add
test
push
add
fildll
add
push
add
add
or
jge
imul
jg
jb
flds
sub
adc
jo
out
add
add
add
add
mov
lock
mov
add
ret
add
loope
mov
lods
fstl
add
add
add
sbb
add
jle
pop
add
iret
mov
add
sub
in
mov
dec
add
lcall
add
jg
cltd
stos
dec
add
int
call
jp
push
add
repnz
and
add
out
loope
push
add
cld
mov
add
cld
outsb
add
sub
cmp
push
std
pushf
in
add
mov
sub
pop
inc
add
add
mov
add
add
pop
mov
add
add
pusha
add
add
repnz
xchg
xchg
jl
stos
stos
loope
cmp
jno
divl
subl
adc
out
xor
add
xchg
testb
orl
andb
insb
add
mov
std
adc
pusha
add
scas
ret
and
enter
test
cmp
add
add
add
inc
add
mov
add
js
cmp
cmc
jmp
push
pushl
sahf
loope
scas
aad
test
add
subl
add
sbb
add
add
add
mov
int
inc
add
push
add
sub
jge
stos
xchg
or
out
scas
adc
scas
add
sub
jecxz
cmp
out
addb
movsb
shll
add
add
cmpsl
dec
mov
out
xor
cs
sbb
add
out
imul
sti
sub
mov
add
lock
add
test
jbe
adc
add
xchg
stos
scas
mov
sbb
dec
sbb
cltd
loopne
add
cmpsl
popa
insb
add
add
push
add
xchg
add
add
add
es
mov
pop
js
les
test
jne
in
lea
loop
add
dec
adc
lods
rcrb
push
mov
aam
lcall
iret
xchg
sub
rcr
imul
add
bound
shr
cltd
mov
add
sub
jnp
adc
jg
add
mov
xor
add
add
add
add
inc
add
adc
fdivl
add
mov
dec
add
iret
xchg
dec
dec
add
jae
add
dec
add
pop
add
stc
xchg
add
lea
popl
add
shr
lret
or
fwait
and
fidivrl
jle
dec
add
add
push
or
out
add
test
sub
test
cmpb
lcall
loop
insb
add
add
push
add
aad
add
fistl
mov
not
mov
int
add
aad
das
lret
add
mov
jle
lret
scas
inc
mov
popf
add
add
cld
bound
mov
xchg
enter
add
jp
bound
cltd
mov
rdmsr
add
arpl
and
gs
cmpsb
xchg
xchg
rcrb
add
and
das
sub
xchg
jno
out
cmp
cmc
jno
icebp
ljmp
jno
inc
mov
add
add
dec
add
ja
add
loopne
jp
nop
shrl
test
xchg
or
gs
flds
stc
jo
mov
add
decl
mov
or
jns
add
data16
xor
jne
add
jno
add
je
imul
aam
add
add
cmp
or
pusha
add
out
nop
inc
add
add
dec
add
push
mov
cli
add
imulb
add
add
xchg
loop
or
jnp
dec
cmc
cltd
outsb
add
add
sbb
ja
xchg
add
add
add
add
mov
int
jbe
or
mov
push
add
xchg
mov
add
repz
add
icebp
cmpsl
pop
cmp
cmc
add
push
jno
add
test
jbe
loope
jle
shlb
sahf
mov
add
cmp
cltd
out
push
add
cli
sub
pop
les
add
test
add
mov
dec
jp
bound
lahf
outsb
add
cs
jo
inc
imul
fidivrs
ja
add
sub
mov
subb
add
add
scas
pop
add
scas
push
call
cmpl
add
repz
jl
repz
push
add
xchg
movsb
jne
pop
adc
test
sub
stos
sbb
lret
stc
incb
dec
into
stc
pop
add
xchg
add
adc
xlat
mov
add
mov
ja
dec
add
add
repnz
add
mov
dec
add
movsb
xor
adc
std
xor
pop
cmp
into
pusha
add
dec
add
add
mov
xor
cmp
dec
add
jle
xor
insl
lock
add
dec
scas
mov
xchg
sub
jmp
repz
testl
push
add
aas
addl
paddsw
add
or
in
shlb
push
add
mov
xlat
push
add
xor
mov
add
add
add
sti
xchg
sarl
lea
rcr
decl
or
call
add
add
add
add
add
add
xchg
xchg
and
pop
add
add
and
add
enter
add
add
mov
add
leave
mov
add
daa
push
adc
add
add
pop
add
fwait
push
add
out
into
sub
outsb
add
rorl
add
add
xlat
decl
add
sarb
add
xor
push
xor
and
les
add
stos
mov
add
sbb
cmp
pminsw
add
push
push
adc
add
cmp
cmp
and
push
add
add
add
add
es
fsubrl
or
stc
add
add
add
add
mov
or
movsb
cwtl
pop
add
add
dec
subl
je
movsl
pop
add
pop
add
mov
cli
jge
out
xchg
cmpsb
or
lds
push
add
inc
stos
and
repz
push
add
sbb
add
jnp
imul
pop
imul
push
add
mov
add
ret
xchg
pop
mov
cmp
fstpt
adc
andl
add
add
adc
fisubrs
sbb
insb
add
xchg
test
adc
jne
xor
sub
and
cli
adc
data16
popf
es
jmp
sub
add
mov
mov
jl
ljmp
dec
mov
add
add
push
outsb
add
mov
dec
add
add
sub
mov
iret
movsl
inc
mov
shrb
cmp
sti
imulb
add
ret
sbb
out
add
xor
add
aad
add
mov
mov
gs
int
push
add
orb
shl
add
clc
xchg
xchg
sbb
and
push
push
mov
xor
mov
stos
pop
push
add
add
ja
fwait
std
or
adc
add
add
pop
insl
mov
xchg
sub
add
cmp
lahf
adc
movsb
icebp
cmp
fsubrp
xchg
xchg
jmp
add
es
add
dec
add
add
aam
stos
xchg
clc
cld
jae
cmp
xorb
push
cmp
add
xor
add
clc
mov
inc
add
out
faddl
xor
lods
pushf
lock
lahf
clc
into
daa
in
nop
mov
and
call
add
add
mov
sbb
add
adc
scas
add
cmp
xlat
xchg
decb
leave
add
add
scas
in
dec
insb
add
test
xor
sti
add
pop
push
lcall
add
xlat
fadds
pusha
add
pusha
add
test
add
add
js
repz
sub
and
jle
lret
sub
mov
inc
add
loop
test
mov
jecxz
fiadds
mov
add
bound
inc
add
add
mov
arpl
add
add
cmpsl
insl
in
add
push
add
jbe
mov
dec
add
and
dec
ret
cmpsb
popf
out
aas
push
sbb
or
or
insb
add
add
or
subb
lret
shrd
mov
enter
andl
mov
jmp
dec
cmp
mov
loop
add
add
js
fwait
iret
pop
add
dec
add
push
jecxz
inc
inc
add
add
jl
fnstcw
add
and
data16
pop
jnp
add
add
repz
jl
mov
sbb
aas
fsubl
add
int
add
test
mov
mov
xchg
insb
add
push
addr16
inc
add
add
add
in
push
add
mov
dec
out
push
sub
and
fs
add
and
add
orl
cmp
or
mov
push
add
lcall
dec
outsl
mov
add
add
sub
lock
jae
add
push
add
int3
sub
add
pop
xchg
dec
and
add
xchg
orb
div
call
add
adc
gs
ljmp
push
add
mov
stos
mov
out
mov
call
enter
add
ja
aas
out
xor
add
push
cmp
and
sub
loop
adc
icebp
xlat
mov
mov
fstpt
pop
insb
add
fists
add
leave
inc
aas
xchg
sbb
stos
xor
loope
add
add
xor
lock
in
aam
add
sub
ja
insl
add
int
push
add
lahf
pop
aas
nop
push
repz
mov
pop
add
mov
add
mov
sbb
dec
jno
loop
dec
add
mov
sbb
testl
xchg
xlat
jb
lds
jmp
scas
add
and
mov
add
std
mov
in
imul
sub
movsl
daa
sbb
add
fimull
sbb
jb
popf
lods
and
std
jl
loopne
add
sbb
add
lods
data16
xchg
mov
dec
add
std
push
add
mov
push
add
add
dec
mov
add
add
push
fwait
xchg
insb
add
xchg
test
add
iret
or
add
cld
adc
dec
add
rcll
aas
mov
mov
xor
inc
add
add
or
jmp
imul
in
inc
mov
add
enter
jle
sub
daa
push
adc
sub
sbb
mov
dec
add
dec
add
cmpl
inc
add
fsts
and
and
push
dec
add
add
and
adc
pop
add
add
dec
add
add
dec
add
sub
cmp
mov
cltd
cmpsl
orl
adc
cltd
mov
sbb
jnp
scas
push
add
mov
mov
add
jmp
test
jle
sbb
leave
push
add
xlat
add
add
loopne
add
jmp
xchg
hlt
int3
or
add
clc
add
cmp
sub
gs
ret
sahf
mov
mov
lods
dec
add
or
mov
add
add
imul
lret
xor
add
hlt
divl
add
pusha
add
lods
stc
imul
in
js
sbb
aaa
fldcw
je
xchg
push
sbbl
add
jno
dec
pushf
pushf
mull
jp
test
cmp
in
nop
loopne
lea
jp
insl
mov
les
push
aam
mov
jnp
jnp
lcall
mov
add
mov
jmp
mov
dec
inc
add
add
mov
stos
bound
mov
or
sub
push
sbbb
add
in
xor
push
sarl
cli
clc
hlt
mov
dec
jbe
mov
cmc
cmp
lds
cmc
cmc
mov
add
add
lods
iret
fdivs
sbb
movsb
sub
arpl
pushf
push
add
add
icebp
dec
add
testb
pop
jne
jbe
lea
pop
add
inc
add
mov
jne
xchg
add
mov
sbb
in
cwtl
fdivs
add
add
add
mov
add
pop
add
hlt
sub
push
pop
add
test
add
es
mov
add
add
add
je
pop
cmpsl
fimuls
mov
push
add
mov
jle
mov
std
add
sub
shll
sub
mov
add
add
les
or
push
add
aas
xor
jbe
cmpsb
add
push
pop
push
add
popf
ja
xchg
pop
cld
and
cmp
hlt
jae
add
sbb
int
xchg
imul
add
add
jmp
xor
sbb
inc
pop
xchg
cmp
pop
xchg
mov
pop
ss
push
add
aad
jecxz
cld
push
add
rcl
and
push
add
lock
push
mov
ja
add
adc
sub
inc
outsb
add
pusha
add
pop
dec
add
orb
or
mov
jb
xchg
push
mov
or
jo
pop
add
and
mov
testb
out
cmc
cwtl
xor
loope
ret
add
imul
mov
and
mov
jecxz
and
add
je
push
add
das
mov
popf
mov
std
pop
add
cli
mov
sub
das
or
add
loop
lret
add
add
pop
add
push
add
jecxz
sub
loopne
and
mov
and
int3
inc
call
xor
ja
xchg
cmpsb
scas
jo
xchg
push
add
stc
nop
sbbl
add
xchg
mov
ret
xor
push
add
or
and
add
xor
ljmp
add
dec
xor
sti
pop
hlt
rcl
out
or
xchg
scas
jmp
lds
add
mov
push
cwtl
les
mov
cmc
adc
pop
je
inc
add
add
add
adc
add
in
loope
in
out
daa
mov
outsl
add
dec
sbb
daa
shlb
add
repnz
push
add
add
loopne
cmc
iret
cmp
xchg
rcll
data16
push
addl
or
or
int3
sbb
addr16
and
mov
add
mov
cmp
int
add
mov
push
sbbl
or
aaa
data16
test
inc
add
and
stos
insl
cmp
xchg
xchg
loopne
mov
add
imul
add
dec
add
add
add
jnp
movsl
mov
js
push
add
pop
daa
mov
add
add
mov
in
sahf
shrl
movsb
scas
sub
test
insl
pop
sbb
sub
add
insl
lahf
std
sub
inc
add
pop
repnz
dec
outsb
add
lea
add
add
mov
repnz
xor
ja
ljmp
push
add
out
inc
add
dec
inc
add
inc
add
pop
pop
add
mov
ljmp
add
jl
rol
enter
pop
out
cmp
mov
add
outsl
adc
movsl
lahf
xchg
mov
xchg
and
push
add
cmp
cltd
fcoms
add
mov
add
add
add
lock
arpl
rclb
jmp
add
mov
sub
mov
mov
mov
add
icebp
adc
lea
hlt
and
loop
or
add
lcall
jecxz
add
mov
adc
clc
ret
xor
insb
add
sti
add
jecxz
clc
cli
cld
popf
in
pop
test
ja
add
jecxz
add
add
add
xor
add
and
add
cmc
fdiv
sarl
add
sbb
sbb
ret
push
add
add
push
insl
imul
jno
adc
add
jns
sub
pop
pop
pusha
add
ret
shrb
popa
jo
xchg
aad
xchg
call
push
pushf
cmp
cmpb
mov
jg
add
fmuls
sbb
jo
movsl
mov
jo
and
add
out
mov
enter
loope
add
adc
add
xchg
mov
push
add
imul
sbb
jne
std
inc
add
xor
mov
test
push
jle
cmp
fidivs
mov
add
jno
add
mov
push
cmp
pop
inc
add
add
dec
add
add
js
mov
add
outsb
add
add
gs
mov
add
clc
dec
push
add
push
sarl
add
jns
add
add
mov
sarb
ffree
xor
inc
add
adc
mov
aas
adc
add
dec
aas
dec
mov
pop
sub
pushf
loope
add
inc
add
mov
xchg
mov
in
xchg
nop
aas
mov
sbb
ja
call
stc
sbbl
daa
fstpt
and
add
leave
loop
xor
inc
push
add
dec
pop
insb
add
adcb
lods
xor
sbb
sub
mov
sub
add
movsl
mov
out
sbb
mov
mov
add
add
add
push
aad
or
cmp
cli
std
mov
add
nop
call
jg
pop
cmp
daa
sahf
mov
lods
int
cmpsb
push
add
add
xchg
sbb
ljmp
add
fnsave
add
scas
lock
cmp
push
add
test
pop
jg
movsb
stc
push
test
inc
lds
add
dec
loop
adc
int3
pushf
sbb
sbb
add
gs
add
outsb
add
push
jnp
mov
adc
loopne
movsb
push
add
orl
adc
icebp
mov
sub
jns
add
pop
inc
add
mov
mov
scas
add
jg
stos
mov
addb
and
mov
shlb
add
in
shll
icebp
mov
stos
vpmaddwd
add
inc
call
mov
ljmp
add
add
add
loope
into
cltd
lea
add
je
in
jb
in
push
adc
or
push
sbb
ja
loopne
inc
add
addr16
jge
add
adc
lret
add
cli
inc
add
cld
std
xor
inc
roll
movsb
jo
cmp
mov
add
add
add
add
insl
inc
mov
fmuls
lret
xchg
loopew
and
mov
loopne
pop
pop
leave
dec
or
in
pushf
aam
movsb
push
add
add
aaa
iret
xor
push
add
add
add
pushf
mov
sbb
dec
add
add
add
out
add
add
push
pop
pop
insl
jns
push
call
add
mov
inc
add
ret
mov
filds
clc
push
pextrw
insl
orl
jecxz
xor
add
fadds
sub
roll
add
insl
stos
nop
cmpsb
sbb
and
iret
int
dec
add
out
pop
mov
add
inc
mov
cmp
cmpsb
mov
scas
ficompl
scas
push
mov
pcmpgtd
dec
add
leave
mov
insl
popf
lods
mov
add
rolb
xlat
decb
add
add
add
add
stc
dec
add
ljmp
add
pop
pop
add
and
mov
xchg
jge
add
je
xor
xor
add
dec
add
inc
repz
sub
rcl
dec
sarb
rcrb
lea
add
arpl
lret
or
xor
add
add
fimuls
lret
push
xlat
clc
sahf
aad
mov
sti
and
cmp
xlat
pop
jae
add
add
add
push
add
add
mov
mov
add
adc
pop
add
add
add
mov
ret
lods
mov
dec
add
pop
mov
hlt
pop
xchg
call
aad
out
xor
add
sbbb
add
out
arpl
les
stc
int
add
mul
push
outsb
add
and
add
inc
and
icebp
sub
jmp
inc
fdivrs
add
cmpsl
dec
cmp
jo
repz
inc
add
in
add
add
stos
lods
insl
lods
jo
cmp
les
xchg
add
imul
mov
ret
cltd
mov
movsl
out
inc
add
cmp
add
lcall
add
add
add
mov
fisubrl
sbb
fbstp
shlb
xchg
incb
clc
scas
dec
dec
push
add
add
mov
imul
mov
add
arpl
sbb
in
arpl
mov
outsl
lds
inc
add
popf
add
sub
cmp
movsb
sbb
xlat
gs
add
fbld
dec
jno
jns
add
sub
and
add
add
pop
add
add
insb
add
in
mov
movsbl
pop
add
data16
mov
in
scas
movsl
mov
add
fwait
inc
add
add
add
jb
fstp
lods
movsb
add
fistpll
jbe
adc
inc
add
add
xor
les
sub
shrl
add
cltd
push
out
dec
in
add
adcb
mov
out
add
cmc
add
or
xlat
jne
inc
popf
jecxz
arpl
rcl
sub
add
mov
xlat
or
and
mov
add
call
or
imul
add
test
mov
sbb
xchg
gs
mov
data16
out
out
jno
adc
add
xor
movsl
sub
add
jmp
shrl
dec
add
and
lods
inc
add
pop
add
add
add
push
add
mov
les
add
movsb
pavgb
jmp
add
add
sbb
adc
lret
add
rcr
cli
pop
aam
shrb
adc
rcll
fiaddl
xor
loopne
mov
mov
out
and
or
popa
mov
fadd
jns
cmpsb
lds
outsb
add
xchg
add
test
ret
dec
xchg
js
ret
add
ret
mov
sbb
mov
add
add
pop
add
add
fcomip
test
xorl
adc
in
imul
and
push
sub
gs
jb
out
add
aad
add
loopne
cmp
call
and
add
out
je
cmp
lock
test
xor
fbld
sbb
xor
push
add
js
fcmovb
jp
dec
add
add
add
push
add
cmpb
pop
and
mov
mov
add
std
push
add
pop
mov
add
and
stos
jnp
xor
push
add
lds
add
les
lahf
cmp
int3
fisubl
xor
mov
bound
pop
add
add
daa
lret
and
adcl
mov
mov
lods
and
aam
into
push
pop
add
add
add
cwtl
pop
add
add
or
imul
mov
pop
test
mov
sub
dec
cmp
add
stos
in
out
and
int3
dec
add
enter
add
fdivrl
add
repnz
sub
sarl
add
or
mov
sub
dec
add
add
add
sbb
fbstp
add
add
add
add
je
push
add
or
fists
mov
cmp
jnp
jb
jl
sbb
jns
fldenv
add
xchg
cmpsb
cmpsl
add
mov
and
jp
insb
add
std
clc
push
mov
mov
push
add
add
dec
add
ficoms
and
add
ret
aad
add
cmp
push
cmp
adc
js
mov
lcall
cli
mov
jecxz
push
imul
inc
and
jns
in
sub
pop
xchg
jp
xorl
sahf
push
add
add
add
sub
mov
add
sub
pop
les
std
les
push
cmpsl
cmp
fstl
sub
mov
into
in
add
add
pushf
and
test
and
push
push
mov
jns
gs
ret
push
add
adc
add
jecxz
sbb
mov
scas
mov
ficoml
mov
push
add
add
add
jmp
or
xor
push
ja
add
dec
cmp
pop
movsl
jb
cmpsl
or
mov
insb
add
add
out
ja
add
test
add
cmc
ljmp
push
add
add
rorb
fwait
dec
xchg
lock
cmp
rorl
add
dec
add
xchg
pop
xchg
lea
cmp
enter
inc
lcall
popa
into
dec
add
add
add
inc
rolb
mov
add
sbb
inc
add
test
add
cmp
xchg
add
cmc
fwait
adc
jmp
push
add
and
xor
add
insl
add
push
add
mov
lods
test
addr16
cwtl
insb
add
add
rcr
cli
push
add
lret
cmp
sub
xchg
insb
add
jnp
dec
add
popf
sbb
shll
movb
add
add
loop
sbb
mov
add
adc
aas
push
add
push
add
or
and
jbe
popf
aaa
xor
daa
push
add
jmp
ud0
sub
mov
movsb
lahf
ret
xchg
jge
add
icebp
or
push
add
fcmovnbe
sbb
addr16
dec
jb
mov
mov
les
jp
fstpt
add
add
and
add
add
in
jns
add
xchg
loop
add
push
add
in
pop
add
out
sub
xchg
cmp
lea
xchg
xor
pop
xor
and
mov
sub
out
inc
add
add
shlb
inc
add
mov
jge
outsb
add
mov
add
js
movsb
push
add
ljmp
nop
jb
xchg
nop
leave
stos
xchg
inc
add
rcrb
add
push
add
std
call
pop
xchg
aam
add
in
add
aas
inc
cmp
clc
sub
repnz
mov
push
add
mov
add
stos
add
push
xchg
sbb
negb
xchg
xchg
movsb
lds
loop
add
add
sub
mov
pop
sbb
jl
movsl
pop
add
cmp
push
addr16
add
jnp
add
lock
xor
rorb
add
les
cmpsl
xorb
orl
test
inc
insl
cmp
inc
add
test
add
lahf
push
out
jecxz
pop
pop
testl
push
iret
loopne
add
add
add
mov
add
fsubrs
out
cmc
je
sub
cmpsl
or
std
rorb
mov
mov
add
repz
daa
fwait
scas
ret
in
icebp
pop
or
addr16
rep
jne
add
pop
xchg
lcall
add
or
fnsave
add
sub
or
add
bound
je
xorb
or
aad
lods
cmpb
pop
out
data16
sub
mov
orb
lcall
xor
dec
xchg
pop
pop
mov
add
xchg
xchg
sub
addb
subb
adc
xor
aam
sub
jmp
add
les
push
add
dec
scas
jo
andb
push
add
and
hlt
pushf
cmp
imul
jge
push
add
mov
stc
and
add
inc
add
dec
mov
mov
sbb
addb
inc
push
add
add
enter
test
add
ficompl
and
adc
insl
sub
hlt
add
nop
and
dec
push
add
rolb
jp
outsl
arpl
call
iret
mov
add
mov
incb
inc
adc
add
sub
enter
xchg
or
mov
or
sbb
add
add
mov
fstps
add
add
add
ret
jo
lcall
add
add
cmpsl
xchg
int3
cld
stos
aas
stos
jno
inc
outsb
add
mov
loope
les
sti
mov
dec
pusha
add
or
push
add
jnp
push
mov
loope
add
mov
adc
out
int3
pusha
add
add
enter
hlt
sahf
shrb
pop
mov
add
std
mov
in
adcl
enter
cwtl
push
add
cmp
scas
rcll
push
add
imul
add
daa
and
add
adc
dec
cmp
push
add
jns
enter
outsb
add
add
add
outsl
mov
out
mov
sub
mov
and
jae
add
push
add
sub
pop
add
sub
arpl
push
add
int3
or
cld
mov
add
push
jb
repz
add
mov
les
or
outsl
je
sbb
mov
add
add
adc
sahf
mov
leave
cmc
cwtl
pushf
sub
or
jp
push
add
aam
in
add
iret
rcrb
or
ds
lock
xlat
das
pop
add
mov
into
inc
add
inc
add
pusha
add
add
scas
cmc
movsb
jmp
cmp
stos
lods
sarb
xchg
insl
popf
loopne
fnclex
aaa
sbb
add
sahf
add
ret
or
xchg
add
ffreep
dec
jmp
mov
sbb
sbb
add
add
or
mov
fimull
aad
fistl
adc
dec
mov
paddusb
movsl
je
dec
add
pusha
add
sbb
xchg
arpl
sub
mov
push
xor
push
add
movsl
xor
hlt
xchg
daa
sub
add
dec
push
xor
push
add
add
add
add
mov
lock
add
add
sub
popl
not
lcall
movsb
add
add
int3
push
lret
add
in
push
add
mov
addr16
ficomps
add
dec
add
enter
leave
sti
sub
push
add
or
ja
jecxz
notl
add
push
add
loopne
xchg
fildl
and
incb
ljmp
add
cli
or
int3
movsl
das
lret
pop
add
shlb
add
jg
inc
add
dec
mov
mov
scas
add
mov
mov
add
loope
cmp
cmp
shl
add
test
fistpl
loope
add
andb
add
push
add
xchg
leave
dec
add
jne
aam
in
in
arpl
add
add
pusha
add
add
jmp
fs
jb
lock
push
add
sahf
dec
add
insl
sub
fdivs
push
cmc
incl
add
movsl
xor
js
cmp
add
sbb
ficompl
add
push
add
ret
cmpsb
call
push
loopne
stos
cmp
lods
push
add
das
addl
push
jmp
orl
test
test
add
mov
add
cmp
add
mov
push
add
add
gs
adc
data16
add
push
add
enter
add
xor
sub
fadds
inc
add
movsl
into
pop
data16
or
sbb
add
xchg
scas
sahf
sarb
add
stos
jmp
aam
aam
add
outsl
jno
mov
leave
jb
pushf
mov
jmp
or
mov
push
jne
push
add
shll
add
movsb
add
loope
gs
lcall
ret
inc
add
adc
fidivrs
loopne
add
add
jle
add
insl
mov
test
or
add
adc
pop
add
add
mov
cwtl
test
jmp
add
adc
adc
sbb
add
inc
add
sbb
imul
out
test
jmp
and
lcall
mov
adc
daa
sbb
add
add
lret
mov
dec
add
or
mov
filds
add
or
push
mov
aam
test
cmpl
sbb
or
pop
imul
or
xchg
pop
test
rcl
xchg
aad
add
add
fistps
add
aad
arpl
pop
add
pop
fdivs
es
lock
inc
add
add
push
add
add
add
pop
pop
add
and
lods
cld
or
inc
cmpsl
inc
jb
pop
inc
ret
lahf
scas
mov
ja
pushf
cmp
fwait
cltd
dec
add
push
add
test
inc
test
add
jo
push
add
add
add
push
leave
xor
dec
mov
add
or
negl
out
push
add
data16
add
add
add
add
xchg
dec
arpl
add
aad
lahf
sub
sub
cmp
bound
stos
cmpsl
ljmp
sub
add
cmp
sbb
and
mov
enter
fidivrl
aas
into
pop
xchg
loop
dec
mov
add
pop
popa
push
aas
xchg
xor
cwtl
pop
sti
cmpsl
aaa
pop
mull
add
add
js
push
jecxz
push
add
imul
add
jne
pushf
shl
testb
nop
repz
call
test
iret
adc
push
jp
data16
adc
mov
add
add
add
lahf
les
add
stos
mov
adc
out
pop
add
clc
sbb
fldl
ljmp
icebp
add
add
in
mov
out
mov
add
adc
adc
lds
rolb
enter
cli
ficompl
sbb
add
add
add
add
add
add
add
jmp
add
loope
pop
add
jg
in
jge
add
xchg
jmp
add
add
add
test
adc
add
push
add
add
sub
and
push
add
push
andl
pop
inc
add
test
pop
add
add
inc
add
add
xchg
aas
xor
xchg
mov
mov
add
sbb
push
add
pusha
add
add
jno
arpl
adc
cmp
adc
subb
into
or
fisttpl
lret
loopne
add
add
stos
notb
add
add
mov
add
add
xchg
pop
pop
add
fwait
scas
dec
dec
add
sub
sub
mov
add
dec
push
pusha
add
add
std
shrl
stc
in
add
add
dec
test
fidivrl
push
add
push
add
in
add
scas
sbb
lahf
dec
add
leave
push
add
ds
jne
mov
cld
out
xchg
push
add
add
add
adc
add
add
add
in
mov
add
add
add
mov
add
sub
xchg
xchg
fdivl
mov
iret
outsl
shlb
add
jno
std
enter
mov
arpl
xchg
les
insl
addr16
int3
nop
or
push
add
add
jae
inc
add
imul
dec
call
add
add
cmp
and
xchg
mov
xor
add
cwtl
sub
roll
movsb
add
and
dec
gs
add
in
lods
mov
lcall
dec
repnz
add
sahf
xorl
xor
add
jg
adc
mov
add
and
add
or
daa
stos
repnz
dec
add
test
imul
inc
aaa
in
cmpsl
push
add
and
add
fidivrl
add
les
fisttpl
mov
into
nop
repnz
adc
and
mov
push
add
xchg
pop
add
outsl
outsl
and
sub
lahf
push
add
aad
out
ja
mov
sahf
mov
cmp
sub
xchg
xchg
and
in
mov
pop
aam
out
hlt
test
hlt
clc
dec
push
add
xchg
push
push
add
cs
dec
iret
mov
stos
xchg
xchg
add
xchg
or
add
add
add
add
ja
fsubrl
fimull
loope
loopne
fldl
daa
mov
inc
and
arpl
fptan
je
sub
adc
xchg
dec
push
add
add
add
int
lret
int
stc
out
sbb
fisubl
xor
movsl
xor
mov
add
mov
add
jp
xor
inc
add
dec
pop
push
dec
add
pop
add
mov
add
insl
mov
push
add
add
add
and
push
add
pushf
sub
sub
fcomps
sub
ret
and
loopne
add
dec
add
push
mov
jecxz
add
add
pushf
jl
mov
mov
rclb
add
js
dec
sti
addr16
test
loopne
sbb
add
jae
mov
mov
shrl
sub
add
in
clc
push
pop
jbe
int3
jns
sbb
add
ljmp
add
mov
dec
cwtl
push
sti
jmp
sub
test
popa
dec
sti
xor
insl
sbb
data16
inc
js
nop
xchg
out
xchg
push
sub
xchg
adc
out
repnz
add
or
pop
add
push
add
xorb
in
sbb
jae
add
add
push
fdivrl
in
fmuls
loopne
mov
inc
add
and
aaa
adcl
add
or
mov
pop
add
lret
subb
jg
add
fwait
jnp
push
add
pop
insl
ret
jmp
add
popf
push
test
adc
shlb
inc
pop
add
jnp
add
or
jae
add
add
ficompl
add
pusha
add
jg
jg
popf
jbe
push
add
mov
mov
add
cltd
test
data16
jg
loop
jne
rcr
cmc
test
pop
push
add
es
jae
int
add
dec
add
adc
pop
ret
sbb
data16
inc
lock
xor
add
test
les
and
jne
lods
call
xchg
les
adc
sub
hlt
xor
adc
out
cmp
mov
test
xor
lds
add
mov
into
dec
add
add
mov
pop
and
fdivrs
add
cmp
mov
icebp
dec
add
and
jl
mov
cli
cli
and
mov
dec
push
add
lock
jmp
daa
lods
aam
and
lds
mov
add
and
push
cmp
mov
inc
add
add
int
into
mov
test
push
push
add
shrl
cmp
and
popa
xchg
jnp
cmp
inc
add
shl
popf
rorl
std
data16
dec
add
gs
add
xor
push
hlt
test
lret
add
mov
ret
jnp
mov
shll
lcall
pop
and
fwait
cmc
jmp
and
repz
push
add
mov
add
mov
aad
popa
mov
shrb
adc
fnstcw
add
cmc
dec
add
add
inc
add
jo
xorb
add
add
pusha
add
push
gs
jne
into
sub
aas
enter
aas
adcl
add
dec
scas
or
pop
jmp
fcoms
rolb
outsl
mov
inc
mov
mov
push
ror
add
add
jae
xor
add
add
push
add
add
push
add
pop
add
fst
insb
add
add
dec
insl
xchg
pop
movhps
mov
add
add
movsl
jmp
add
inc
add
add
mov
add
pushf
clc
scas
stos
mov
cmp
add
aad
mov
add
dec
add
pop
divb
mov
or
dec
fildl
add
mov
jne
pop
mov
js
cld
push
xchg
mov
mov
inc
cmp
ds
leave
adc
or
popf
out
add
add
adc
xchg
push
add
nop
lods
and
add
lods
inc
add
popf
or
aam
mov
aas
popa
lods
pop
or
iret
cld
inc
add
aam
jg
sbb
aad
add
cmpsb
aas
xchg
inc
mov
add
add
add
adc
test
pushf
jns
fnstenv
or
icebp
push
add
mov
in
lods
dec
add
in
adc
xchg
adc
cmp
loope
add
in
add
mov
fwait
out
mov
add
mov
lods
mov
add
push
add
add
outsb
add
push
add
jmp
sbb
pop
add
roll
xlat
dec
hlt
xor
add
push
pop
add
add
loop
add
add
cld
aad
js
jb
dec
add
add
hlt
jle
lret
hlt
fistps
add
movsb
adc
add
add
add
add
adc
mov
add
add
add
ljmp
into
cli
dec
fwait
insb
add
add
inc
mov
mov
sbb
add
jecxz
adc
add
push
add
xor
arpl
add
add
cltd
jg
pop
movsb
sub
push
idivl
add
mov
sar
add
fs
jp
inc
add
add
stos
sahf
shlb
and
mov
inc
add
outsl
adc
lcall
add
in
pop
shll
add
add
dec
jne
adc
in
cmc
jno
les
add
sub
dec
fldl2e
rcrl
add
dec
inc
add
lcall
xchg
cmp
jo
jle
adc
add
dec
add
sub
jo
repz
jmp
adc
adcb
add
rolb
lea
add
add
lods
pushf
inc
inc
add
dec
test
xor
fwait
divl
add
pop
outsb
add
push
add
pushf
sbb
shlb
test
inc
add
jae
lock
aad
int3
push
add
dec
add
xor
pushf
jno
add
test
dec
add
jae
add
add
adc
sub
sbb
sub
sti
xchg
scas
idivb
inc
add
cmp
or
or
icebp
xchg
inc
sub
or
pop
add
add
das
mov
sti
xrelease
or
pop
add
add
add
jmp
fstpl
shrl
jns
push
add
fldlg2
cmp
mov
add
inc
add
ret
cmpsl
out
mov
and
fists
push
bound
adc
sub
enter
lea
adc
jo
ret
movsl
cltd
sbb
clc
int
add
jo
adc
mov
jecxz
fistps
add
add
add
sub
push
addb
iret
or
add
test
ret
icebp
xlat
and
xchg
adc
push
add
out
add
push
das
data16
add
mov
add
mov
int3
cli
pop
add
add
push
add
xchg
or
inc
jecxz
inc
cmp
mov
icebp
dec
out
lock
xchg
cmc
mov
shrb
inc
orb
mov
shlb
xchg
jl
or
and
inc
add
rclb
add
add
ja
lret
xchg
xchg
popf
sbb
add
add
xchg
ret
push
pusha
add
add
add
fdivr
insl
push
add
ret
inc
ljmp
mov
jge
add
insb
add
fcmovbe
or
pop
clc
push
inc
add
fistl
xor
add
clc
add
jno
add
adc
outsb
add
dec
add
push
add
pop
inc
add
add
movsb
pushf
int3
xchg
cwtl
pop
bound
jmp
adc
mov
jg
insl
sbbb
subb
les
add
add
jecxz
add
test
add
addb
add
add
and
in
add
loopne
inc
out
mov
shl
aas
cmp
mov
add
lcall
add
jl
lock
mov
sahf
pop
fwait
and
in
push
add
add
popf
cmp
mov
mov
mov
add
and
push
add
adcl
iret
mov
add
jl
lods
rclb
adc
mov
je
test
fwait
out
mov
mov
sti
cld
pslld
cmp
jle
movsb
add
decl
jle
ficoms
inc
add
add
mov
sti
fsts
sub
hlt
sbb
and
add
inc
test
lock
xor
push
ljmp
add
add
sahf
sub
hlt
mov
cmp
cmp
push
add
xor
cmp
push
add
pop
leave
out
add
and
add
add
shl
adc
in
aad
sub
cmpsl
xor
int3
cwtl
dec
sbb
cmp
xchg
repz
add
push
add
cmp
pop
adc
out
pop
jne
mov
inc
lcall
add
push
add
fwait
jg
or
fstpt
jp
idivb
add
fcompl
dec
add
lods
add
fcmovb
pop
add
aas
arpl
iret
and
mov
jmp
or
cli
enter
loope
testb
lods
clc
scas
push
add
pushf
test
addr16
je
in
stc
into
rcll
addr16
add
or
in
je
bound
mov
push
add
push
jg
jne
add
add
imul
sbbb
in
loopne
dec
add
add
add
xchg
fsub
das
ret
cs
inc
add
push
add
add
stos
xchg
cmp
inc
inc
jle
push
add
nop
xchg
ss
mov
push
add
mov
mov
out
outsl
mov
inc
add
scas
dec
add
add
mov
in
add
addr16
mov
adc
or
dec
jno
pop
xor
dec
add
xchg
dec
inc
dec
jo
sbb
push
add
fs
pop
mov
inc
mov
jnp
push
cmpsb
out
add
xor
sub
ljmp
add
add
iret
mov
add
xor
jle
test
std
aas
and
xor
lcall
add
add
mov
jbe
xor
xchg
scas
push
add
lods
xchg
ja
bound
xor
cwtl
loopne
or
inc
fimull
add
ror
mov
dec
mov
jg
sbbb
xor
xchg
xor
repnz
push
add
cmp
add
push
punpckhdq
xor
jle
movl
stos
aas
sub
mov
addr16
add
pop
add
sub
mov
sub
add
sbb
pop
imul
sbb
mov
mov
mov
add
add
add
add
fwait
hlt
xor
xor
and
lret
add
inc
add
outsb
add
data16
testl
dec
adc
xor
mov
mov
popa
fldt
add
add
add
add
hlt
loop
and
pusha
add
add
mov
stc
test
add
sbb
js
out
pop
test
add
ss
jecxz
aas
xchg
xchg
and
mov
inc
add
pop
pop
filds
setnp
mov
repz
not
and
int
jo
xchg
push
jae
sub
stos
insl
xorps
xchg
pop
push
add
push
add
add
mov
inc
dec
sbb
scas
jb
in
cmp
mov
sub
jl
insb
add
imul
pop
jle
push
add
mov
pop
add
out
add
je
dec
mov
decb
fsts
cmp
sarl
dec
add
mov
inc
add
xchg
push
add
inc
jbe
add
ret
iret
pop
addr16
add
or
lahf
pop
repz
dec
add
add
add
fistps
add
fstpt
adc
movb
add
add
mov
dec
ds
in
xchg
xchg
test
sbb
out
xchg
or
xor
fidivl
xchg
pop
enter
and
and
add
dec
add
jno
notb
xchg
push
xchg
movsl
xchg
push
add
in
mov
iret
xor
or
push
add
mov
loopne
add
movsl
imul
ret
add
adc
stos
inc
add
stc
xor
mov
cmp
add
pop
in
cwtl
pop
rcrb
lods
pusha
add
mov
nop
stos
adc
inc
add
xor
aas
push
add
add
add
adc
add
add
add
add
add
inc
xor
jl
insl
mov
or
movsl
dec
add
lcall
mov
or
mov
add
loop
sbb
inc
and
or
or
cmp
add
ret
cmp
sub
push
add
mov
popa
mov
push
push
add
add
sahf
fistpl
mov
jge
sbb
mov
clc
int
dec
xor
cltd
insl
or
pop
add
add
out
pop
adc
loope
cmp
lret
add
add
sub
add
add
add
jae
sub
mov
jno
cmc
arpl
xor
stos
mov
add
mov
cs
mov
xchg
aaa
sbb
xor
add
add
ljmp
adc
sahf
xor
mov
pop
add
insb
add
hlt
xchg
pop
add
ficoms
fcoml
sti
sbb
add
add
xchg
xchg
aam
or
pop
inc
xor
mov
add
faddp
jnp
xchg
movsb
jg
mov
lcall
mov
fmull
adcb
movsl
mov
mov
add
ret
pop
add
call
mov
cmc
sahf
dec
add
stos
scas
inc
inc
add
inc
fbld
mov
add
mov
jns
add
bnd
jb
xor
add
pop
popa
pop
add
pop
push
add
cli
jecxz
test
add
adcb
mov
lahf
sub
inc
add
cmp
into
mov
add
cmp
clc
inc
roll
adc
fistpll
add
ret
pushf
sbb
xor
xchg
shrb
and
popa
scas
shufps
mov
mov
push
sub
cmp
fnstsw
faddl
xchg
push
add
add
push
inc
add
sub
add
mov
add
or
inc
loope
jb
dec
out
in
sub
xchg
rorb
mov
add
add
mov
add
movsb
and
fisubl
add
loop
sahf
lcall
gs
pusha
add
mov
add
add
mov
adc
dec
add
mov
add
fildll
xchg
add
jmp
add
out
in
cmp
add
leave
xor
lock
jbe
jmp
mov
inc
ret
bound
dec
test
add
fistps
and
clc
inc
add
adc
add
dec
aas
out
addr16
test
add
add
clc
in
push
add
pushf
or
inc
add
iret
out
lods
pop
add
add
add
jns
add
fbstp
dec
je
pop
jg
cmp
stos
inc
add
mov
jecxz
inc
add
xchg
jbe
test
scas
xchg
movsl
test
adc
mov
push
add
add
add
rcll
add
aad
addr16
or
dec
add
in
cmp
add
add
add
cmc
dec
cmp
test
or
xchg
out
sbb
or
lods
test
ljmp
sarl
add
fwait
ljmp
sub
sbb
data16
mov
mov
pop
data16
in
xor
arpl
add
cli
add
daa
adc
in
add
add
fiadds
jae
ret
add
ret
add
sub
sub
aam
fiadds
gs
sub
xor
shll
and
lcall
add
cmp
test
add
inc
daa
push
add
add
in
fsubl
add
xchg
adc
or
push
add
add
ret
sub
mov
dec
add
pop
imul
out
rcr
or
das
in
cmpsb
lret
jecxz
add
movsl
das
cmp
add
js
sahf
add
xor
shrb
add
add
std
xor
xchg
dec
jp
sbb
and
xlat
cmp
jl
orb
jo
and
or
lret
stc
flds
add
add
and
movsl
jmp
jle
in
push
imul
push
cmp
mov
add
add
push
add
ficomps
shll
add
mov
add
rcrl
push
stos
lahf
out
ja
add
cltd
add
add
stos
sbb
sub
je
mov
add
sub
test
jl
clc
pop
add
add
lods
inc
popf
cld
out
and
mov
add
shr
lret
imul
aam
add
mov
mov
adc
sbb
add
fcmovnbe
pushf
jmp
add
icebp
push
add
add
add
in
push
add
pop
add
add
add
xor
mov
lods
imul
jle
movb
cld
call
arpl
add
pop
add
push
in
sbb
jnp
xor
jp
lods
pop
pop
in
xchg
add
dec
add
add
sub
enter
pop
add
push
add
add
sti
and
push
add
push
add
xor
mov
push
add
fldl
mov
or
outsb
add
push
adc
movsl
cs
lahf
int
cmp
cmp
dec
scas
inc
insb
add
xor
add
mov
imul
lret
popf
pop
xor
repz
inc
add
cmc
mov
mov
loope
add
pushf
popa
int
sub
push
add
test
fists
lcall
mov
adc
loopne
push
add
add
and
adc
test
ret
mov
add
in
add
mov
insb
add
frstor
imul
sub
test
pop
add
add
add
mov
ljmp
add
cwtl
inc
add
iret
clc
test
xor
add
jae
add
jns
popa
nop
dec
add
add
jbe
xchg
cwtl
cwtl
add
cmpsb
xor
popl
in
fsts
ss
cmp
cmp
andl
lock
mov
add
xchg
das
jp
into
loopne
mov
push
sub
mov
pop
add
out
daa
jno
inc
add
popa
fistpl
pushf
ret
cs
daa
xor
adcl
adc
in
js
push
add
rolb
sbb
push
dec
mov
inc
add
aaa
mov
outsb
add
jmp
add
add
add
aaa
loope
div
mov
add
dec
rclb
mov
add
push
add
add
pop
mov
mov
xlat
push
add
xchg
daa
pushf
dec
fdivs
xor
ljmp
imul
push
ret
add
mov
add
jno
sbb
sub
repnz
push
add
dec
add
test
testl
insb
add
loopne
in
jle
insb
add
lcall
or
test
dec
mov
jge
addl
ja
ret
test
sub
xchg
mov
xor
pop
add
rcl
xor
mov
leave
ret
adc
adc
cmp
dec
pop
add
mov
mov
lods
xlat
repnz
hlt
push
add
into
dec
and
add
add
add
mov
sub
cmp
dec
bound
das
jge
xor
xor
int
push
add
cmp
xor
outsl
mov
lea
and
dec
enter
out
jecxz
inc
xor
cmp
in
sub
dec
add
ja
cmpb
data16
das
mov
aam
fldcw
int
or
sub
fists
and
mov
outsl
aad
adc
cmp
mov
repnz
repz
sbb
jne
je
out
add
loope
push
add
in
dec
mov
pop
cmc
les
add
clc
dec
jg
pop
pop
aas
ret
insl
mov
add
xchg
xchg
and
xchg
lret
mov
shll
xchg
add
pop
cmp
jns
stos
push
add
lcall
daa
aam
addl
add
lret
add
imul
cli
shl
repnz
add
lahf
cld
push
add
add
add
jae
dec
xor
mov
pop
add
out
jl
xor
adc
cmp
out
clc
or
push
add
sbb
test
add
mov
test
xchg
add
add
sysenter
add
push
add
xor
jmp
dec
add
sbb
mov
sub
shrl
push
add
sub
add
lcall
data16
push
add
cmp
add
adc
push
fiaddl
lret
stc
push
sub
sahf
cmc
scas
add
pop
adcb
xchg
jne
iret
xor
or
cmpsb
pop
add
cltd
push
add
xchg
cmp
cmc
add
add
jle
cmpl
mov
jbe
and
jmp
add
mov
add
add
aas
mov
or
fistps
and
movsb
in
add
lahf
sbb
add
das
rorl
or
fstp
pop
add
mov
xor
sub
add
fdivr
push
add
mov
test
lock
inc
pop
outsb
add
mov
add
ret
inc
add
xchg
add
subb
pop
mov
cmpb
sub
call
cmp
notb
mov
sbb
loopw
in
int3
cwtl
pusha
add
add
lahf
xchg
add
sbb
test
in
mov
xchg
enter
add
fucomi
xchg
insb
add
cmp
int3
imul
sbb
cmp
add
adc
xchg
add
mov
xor
add
jg
cmpb
repz
jbe
push
adc
daa
mov
mov
add
push
push
daa
mov
add
mov
aaa
xor
and
push
ret
mov
or
xor
out
mov
sub
sbb
test
data16
pop
add
lds
add
cmp
cmpsb
aaa
mov
mov
mov
mov
data16
add
xor
outsl
push
add
add
pop
xor
lcall
lock
push
add
add
sub
notb
insb
add
lcall
rcrl
jge
insl
aam
cs
jecxz
pop
lahf
aam
add
add
cli
ret
adc
add
inc
rcl
add
add
add
pop
add
cmp
push
std
mov
mov
inc
scas
adc
leave
add
add
ljmp
sub
jbe
out
add
add
fistpll
sub
dec
add
mov
or
sub
jnp
add
add
jb
and
loope
xchg
add
add
adc
xor
mov
popf
jno
add
out
add
xchg
imul
inc
add
sub
movsb
jge
das
cmp
add
sub
pop
mov
cltd
out
cltd
and
cmp
push
leave
pop
add
push
add
inc
xchg
sbb
fisubrs
rolb
add
js
imul
push
add
not
stc
test
add
add
add
adc
cltd
mov
add
lods
daa
and
add
jmp
add
lret
adc
xchg
add
add
in
les
fcoms
insb
add
mov
add
icebp
inc
jno
sub
movsb
cli
imulb
add
cli
pop
cmp
cmp
add
adc
or
lret
sub
mov
and
mov
insb
add
push
add
sub
mov
add
add
std
fsubr
ficompl
pop
jl
fstpl
adc
fadds
arpl
add
add
test
inc
add
adc
add
add
in
add
or
ret
add
das
in
push
add
fisttpl
add
cwtl
dec
cmc
xor
add
mov
jge
mov
lods
add
movsb
andl
jbe
cmp
rorl
jns
aas
movsl
dec
add
lods
jno
fcomp
add
popa
fwait
jbe
int
push
add
add
add
xchg
popf
push
dec
jg
adc
sbb
dec
add
xor
sub
add
mov
add
xor
cltd
mov
mulb
or
aam
add
sbb
jo
lahf
mov
jge
cmpsb
mov
add
into
iret
add
add
xchg
les
sbb
xchg
sub
daa
insl
jo
lods
dec
add
sbb
add
push
add
out
mov
add
lcall
sbb
ret
adcl
add
mov
cmp
nop
loop
add
add
add
stos
pop
imul
add
adc
add
adc
in
pop
in
jmp
js
mov
test
nop
push
add
add
add
mov
mov
mov
inc
push
add
jg
add
pushf
pop
add
popa
scas
jg
call
mov
push
add
xor
hlt
aaa
mov
lcall
mov
add
sarl
add
nop
adc
add
cld
mov
fcmovnu
cmpsl
xchg
fdivrl
imull
add
gs
add
add
imul
ret
pusha
add
add
loopne
inc
add
add
nop
cmp
in
add
std
bound
xchg
js
les
and
enter
jnp
movsl
movsl
aaa
and
sahf
ds
popa
sub
sbb
push
xor
add
cmpb
pop
mov
div
xor
in
add
std
stos
loop
jnp
or
and
and
pop
add
xor
mov
add
adc
push
add
add
lret
lret
jb
pop
sub
add
cmpsl
insb
add
aas
inc
mov
cli
mov
js
mov
add
or
push
add
xchg
xchg
jmp
cmp
sub
add
add
add
add
pop
push
into
outsl
in
jp
mov
add
fbld
add
xchg
and
and
or
add
dec
mov
xchg
repnz
push
add
aaa
jecxz
ret
add
into
push
add
add
add
xor
mov
dec
sbb
maxps
xlat
nop
aas
push
add
push
add
repnz
notb
cmp
lea
jp
aas
push
xor
add
add
popf
pop
ret
add
addr16
add
sbb
mov
add
icebp
jb
daa
push
cmc
xor
sbb
add
mov
cmpl
mov
jae
add
pop
mov
add
cwtl
or
jmp
and
xchg
and
sti
and
jge
add
xor
mov
inc
add
add
xor
cmp
hlt
lahf
test
mov
aam
add
and
add
ret
xchg
shlb
mov
inc
push
push
outsb
add
cmp
push
add
add
jnp
notb
lods
orl
add
fstsw
sbb
daa
mov
add
or
pop
in
cmp
std
addr16
add
pop
add
cmp
push
add
mov
test
add
and
lock
jp
adc
ror
mov
push
add
jg
cmp
cwtl
dec
add
stos
or
std
aam
add
add
add
jo
mov
add
add
int
xor
xor
jns
add
inc
add
mov
or
repnz
add
add
aaa
scas
lret
ja
fwait
mov
dec
add
adc
sub
pusha
add
xlat
fidivrl
jbe
push
add
add
xchg
sub
inc
add
add
lahf
sbb
lahf
imul
add
xchg
sub
jo
outsl
divl
push
cmpsb
sub
fsubs
por
jbe
outsl
aam
paddb
mov
add
cmp
pop
add
xlat
js
adc
test
and
data16
cli
add
mov
mov
sbb
inc
sbb
rcr
pop
adc
mov
add
flds
dec
add
cmp
rol
fdivs
sahf
shll
dec
add
test
sahf
adc
push
pop
add
pop
idiv
adc
out
out
add
in
adc
dec
push
sbb
add
pop
dec
add
add
add
enter
cwtl
repnz
and
xor
cmc
int
in
xorb
inc
add
mov
jg
jno
test
add
sbb
shlb
sbb
in
fisttpll
call
push
add
cmp
out
and
imul
add
pop
and
push
cwtl
mov
add
add
add
aam
add
lods
std
sbb
cmpsb
jl
aaa
cli
sub
xlat
ffreep
cmpsb
aas
mov
in
in
mov
adcl
add
add
in
push
adc
add
add
arpl
xchg
cld
addl
add
xchg
jmp
add
adc
jbe
das
xchg
or
shlb
add
add
out
push
popf
mov
or
int
pop
add
sti
test
or
add
ret
xor
add
jnp
jno
dec
add
inc
add
popf
call
cmc
sbb
xabort
mov
add
add
cmpxchg
or
jne
loope
add
sarb
add
fimull
dec
dec
add
lret
add
xchg
and
hlt
and
js
mov
add
add
add
and
bound
xchg
fildll
js
cld
mov
or
mov
jle
inc
push
xor
cmp
mov
ret
test
sub
add
hlt
cmpl
add
add
lds
loop
fisubrs
lods
inc
add
rol
lret
lret
add
and
xor
arpl
stos
insb
add
pop
mov
sbb
push
add
daa
xlat
daa
into
lock
or
add
insb
add
jg
jne
xor
bswap
add
out
add
add
add
shl
adc
or
imulb
add
add
mov
mov
add
and
fiadds
add
add
push
add
jbe
adc
push
mov
mov
add
add
cltd
fisubs
add
mov
subl
lock
jb
mov
add
mov
inc
ljmp
add
xlat
dec
add
jnp
add
add
je
add
add
rcll
add
dec
add
ret
or
cld
dec
add
adc
add
mov
fdivrs
add
add
lods
jle
popf
adc
mov
add
enter
out
loope
hlt
mov
cld
loope
mov
ret
test
clc
js
sub
and
jmp
stc
int
sbb
add
mov
loopne
dec
fsub
add
pop
insb
add
add
inc
add
add
add
add
push
add
mov
add
add
add
mov
les
std
pop
add
add
rcl
push
add
mov
enter
aad
add
add
add
sbb
pop
pop
add
add
data16
inc
cld
push
add
add
rolb
add
add
sub
push
add
xor
mov
add
xchg
imul
add
mov
sbb
loopne
std
dec
jne
out
in
mov
cmp
xor
pop
add
add
pop
leave
in
in
addb
add
imul
mov
add
ljmp
jp
aas
inc
add
dec
add
add
imul
add
pop
insb
add
add
mov
in
add
pop
jns
add
lods
and
add
and
lods
dec
cmp
arpl
and
ret
out
jl
cmp
add
cld
lret
push
mov
xor
and
nop
jb
dec
add
xchg
aaa
movsb
push
push
add
stos
lcall
popf
push
stc
repnz
jmp
fistpll
jl
sub
or
add
lahf
stc
pop
add
les
scas
imul
jno
add
dec
fcoms
and
add
add
push
or
add
repnz
add
add
mov
mov
add
add
adc
mov
cmpsl
xchg
adc
sub
add
shll
add
mov
mov
add
imul
lcall
add
add
add
inc
add
out
stos
popf
xchg
call
jnp
movsb
and
inc
add
ret
lret
es
rolb
fisttpll
add
mov
aam
jns
add
add
pop
add
cld
pop
dec
add
lret
imul
jmp
aam
pop
cmp
mov
sub
imulb
add
xor
inc
insl
dec
add
push
add
jne
jmp
add
mov
fbld
add
or
loopne
mov
lods
popl
push
add
add
mov
inc
hlt
imul
shll
add
pop
add
add
dec
loope
pop
xor
mov
ret
fwait
addb
or
push
push
add
jg
add
call
push
add
add
or
sbb
push
add
add
cmp
sub
in
sti
iret
stc
push
add
out
add
add
add
mov
add
add
std
add
pop
add
adc
bnd
pop
add
gs
add
leave
filds
loop
das
sbb
shll
add
pop
shl
xchg
or
jmp
sub
mov
pop
in
clc
xchg
jp
mov
outsl
popa
fndisi(8087
ret
popf
or
jnp
adc
inc
xchg
jp
icebp
clc
inc
fisubs
fs
or
jg
or
and
push
hlt
int
mov
inc
add
shll
imul
stc
or
add
inc
rolb
add
das
fcoms
add
sti
mov
add
and
dec
mov
xchg
enter
popf
iret
mov
out
std
aad
in
xor
int
mov
aam
add
add
xor
add
fidivl
dec
add
dec
add
lods
rorl
mov
popf
xlat
push
add
mov
inc
or
fsts
push
add
xchg
subl
test
adc
test
andl
xchg
scas
data16
pop
dec
add
hlt
push
add
pusha
add
cmp
jbe
iret
sbbb
add
stos
dec
addr16
and
shlb
add
add
add
mov
loopne
mov
loop
push
repz
add
mov
rcrb
xchg
sarb
andl
mov
aam
add
add
shlb
add
add
jae
popa
sahf
push
add
out
cmp
xor
sub
sbb
sbb
mov
cwtl
aaa
adc
add
pop
cmp
loopne
mov
pop
sub
insb
add
dec
add
inc
add
loopne
data16
bound
lods
xor
add
int3
aas
xchg
jb
shr
add
test
add
mov
add
test
sbb
test
pushf
sahf
mov
sub
add
and
and
lret
inc
add
add
add
scas
sub
mov
mov
int3
es
outsl
loop
or
mov
add
add
mov
add
jg
fcoml
cmp
sbb
arpl
mov
pop
mov
leave
dec
jp
mov
int3
pop
add
push
add
adc
out
mov
imul
jp
popf
mov
cmpsb
inc
push
add
add
dec
call
xchg
repnz
dec
add
add
jecxz
cmp
mov
add
add
add
add
mov
sbb
mov
add
mov
push
stc
add
je
dec
add
popf
rolb
sbb
add
pop
femms
add
dec
add
cwtl
mov
rcl
add
loope
add
jmp
je
or
and
sub
insb
add
push
add
add
cmpsl
push
add
lods
mull
push
or
add
inc
add
jbe
pop
leave
push
out
repnz
cmp
add
add
add
lret
enter
imul
sbb
inc
dec
add
sub
cld
stc
pop
push
mov
ret
mov
std
add
insl
xchg
or
scas
fwait
sbb
add
lret
mov
cli
dec
add
fsts
add
jo
xor
stos
mov
stos
orb
add
cs
nop
fcompl
int
fstps
mov
in
in
add
and
lahf
mov
mov
add
dec
add
adc
rorl
add
push
add
add
data16
inc
add
lods
testb
add
adc
xchg
mov
pop
push
xchg
xlat
push
jecxz
cmp
mov
xchg
or
sub
insl
and
mov
sub
pushf
stos
or
jmp
add
pop
push
test
idivl
pop
add
fistl
xchg
lcall
add
xchg
fucom
push
lds
add
sub
add
inc
add
mov
dec
in
insb
add
add
loope
add
mov
add
das
adc
cmp
add
lret
sbb
add
stos
dec
add
mov
add
jg
cmp
add
add
repz
mov
dec
mov
push
pop
add
xchg
subb
and
push
add
add
or
mov
ja
mov
mov
sub
mov
jecxz
push
xor
add
loop
adc
inc
add
jne
pusha
add
add
add
bnd
loope
add
add
cmpsb
add
in
lcall
add
mov
inc
dec
add
add
add
sbb
pop
add
xor
mov
add
jno
add
dec
push
inc
shlb
subl
add
xor
push
add
add
xchg
add
pop
cmpl
test
sahf
scas
cmpl
xchg
jmp
add
add
insl
loopne
push
add
lcall
xchg
daa
jmp
pop
add
push
add
lret
pop
add
add
fisttpl
adc
insb
add
in
sub
fsubl
cmc
sub
sub
in
xchg
gs
repz
fbstp
push
xchg
hlt
push
sub
add
out
div
inc
out
add
dec
add
add
push
out
decb
add
call
sub
dec
add
fdivrl
add
cmpsl
pop
push
add
popa
adc
mov
jb
loop
lahf
jmp
and
push
add
sbb
jle
jb
jne
leave
push
cwtl
sbb
add
xchg
jmp
add
add
add
add
lods
mov
mov
add
test
mov
sbb
pusha
add
xchg
mov
add
add
adc
inc
add
aad
push
dec
and
add
cmp
inc
lret
xor
inc
xor
lret
push
add
pop
cmpl
add
add
popf
fwait
loopne
add
add
fistpll
add
mov
das
mov
add
test
mov
add
pop
jae
fcmovnbe
pop
int3
mov
cmp
js
mov
sub
orl
mov
popa
mov
adc
pop
imul
xchg
into
jl
test
xchg
add
add
mov
xchg
push
add
clc
stos
dec
add
adc
adc
pop
ja
or
cmp
clc
add
adc
add
cmp
lret
add
ljmp
add
aaa
test
daa
jp
out
add
push
add
add
pushf
aas
jb
sub
jbe
push
add
adc
repnz
add
add
pushf
cmp
xchg
push
das
sbb
add
inc
subb
mov
xchg
adc
jecxz
add
shlb
popf
out
ljmp
loopne
add
ret
push
add
sub
mov
aaa
and
stc
mov
push
jnp
add
fistpl
mov
lahf
je
push
add
dec
add
sbb
mov
jb
in
sbb
push
mov
add
mov
lock
call
add
add
mov
add
cmpsl
sbb
push
add
add
mov
adc
lods
lret
xchg
mov
loop
loope
xchg
jne
add
in
jecxz
add
add
add
add
jne
jb
ja
or
add
jbe
int3
sbbl
add
lds
add
cmpsb
xchg
xchg
adc
mov
sub
add
test
xchg
or
shlb
pop
add
sbb
dec
add
add
add
das
cmp
add
daa
mov
dec
add
pop
add
lods
les
add
mov
add
sti
stos
xor
in
jge
add
cmpsl
out
add
add
dec
add
jg
pop
mov
js
xchg
imul
rep
gs
dec
cmpsl
leave
divps
movsb
jge
add
add
add
or
inc
shlb
cli
rcll
ds
jle
sbb
push
add
addl
add
xor
jo
into
cld
cld
push
sarb
add
add
dec
add
cltd
dec
dec
in
cli
ror
add
jmp
mov
jge
pop
xchg
xor
add
add
les
add
add
mov
add
mov
add
cli
dec
add
gs
add
cmpsl
xchg
adc
or
mov
push
add
mov
add
add
pop
mov
add
and
add
data16
add
mov
aaa
xchg
push
add
rorl
add
add
xor
xchg
int3
js
mov
dec
add
sbb
mov
pop
out
sub
jno
