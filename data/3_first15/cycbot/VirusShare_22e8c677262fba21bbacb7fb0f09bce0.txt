add
and
and
inc
xor
jo
and
add
jb
adc
inc
xor
pusha
pusha
jo
add
add
inc
push
xor
xor
and
add
add
pusha
and
adc
add
add
jb
pusha
add
pusha
adc
xor
xor
pusha
push
push
inc
push
adc
push
adc
adc
adc
push
push
jo
xor
bound
jo
adc
add
jo
and
add
adc
bound
add
adc
inc
jo
add
bound
push
xor
and
pusha
push
jo
jo
add
pusha
adc
xor
bound
adc
bound
add
push
push
inc
inc
pusha
and
xor
jo
push
and
adc
xor
push
bound
xor
and
add
xor
inc
xor
xor
xor
xor
adc
add
and
xor
push
adc
and
add
xor
jo
inc
push
inc
xor
push
jo
and
bound
jo
inc
xor
adc
and
add
jo
xor
and
push
adc
inc
pusha
xor
adc
jb
push
and
inc
inc
push
bound
xor
add
and
push
push
inc
add
push
adc
pusha
and
and
and
jo
push
inc
adc
xor
add
add
adc
jo
inc
push
pusha
adc
inc
push
add
and
xor
add
and
add
xor
pusha
push
add
push
add
pusha
inc
and
inc
add
adc
jo
inc
inc
push
pusha
jo
inc
and
xor
xor
xor
jo
pusha
add
add
xor
pusha
and
and
add
push
add
xor
inc
jo
add
jo
pusha
inc
add
add
adc
push
inc
inc
and
add
pusha
adc
xor
and
add
adc
add
inc
add
xor
xor
inc
adc
jo
and
jo
add
xor
add
inc
pusha
xor
and
jo
jo
and
add
xor
push
adc
jo
add
push
xor
add
jo
pusha
xor
push
add
add
jo
adc
adc
jo
jo
add
push
and
inc
push
inc
add
adc
add
inc
and
push
jb
and
pusha
jb
jb
push
add
inc
and
pusha
jo
push
pusha
jo
pusha
push
adc
inc
and
add
xor
push
and
adc
pusha
and
pusha
jo
jo
add
add
inc
adc
inc
add
adc
jo
inc
bound
xor
inc
inc
jo
jb
push
adc
pusha
xor
jo
inc
bound
push
add
push
push
inc
and
add
and
jo
jo
add
and
jb
adc
adc
xor
pusha
and
push
xor
xor
add
pusha
jo
adc
bound
push
pusha
pusha
add
xor
adc
adc
and
add
adc
push
adc
add
adc
and
add
push
inc
xor
add
pusha
bound
and
push
xor
xor
add
xor
bound
add
adc
xor
add
jb
adc
pusha
add
add
adc
xor
push
xor
xor
adc
and
and
adc
xor
add
add
adc
xor
and
push
jo
bound
jo
push
inc
inc
push
jb
jo
inc
inc
add
jb
inc
add
jo
jo
adc
adc
and
xor
xor
add
push
jb
push
push
push
xor
jb
bound
add
add
add
xor
xor
add
adc
add
inc
xor
push
and
adc
add
jo
xor
inc
xor
jb
add
add
xor
adc
jo
xor
jb
inc
add
push
jo
xor
inc
add
xor
add
add
pusha
inc
xor
adc
jo
add
xor
push
push
pusha
and
push
inc
inc
inc
and
add
add
inc
pusha
and
and
add
and
jb
add
add
xor
inc
jo
push
xor
adc
pusha
and
bound
inc
jb
pusha
xor
push
add
adc
push
push
inc
adc
adc
jo
pusha
add
add
add
add
push
inc
and
xor
push
and
add
adc
push
add
bound
add
adc
xor
inc
xor
add
xor
add
add
add
add
xor
adc
add
inc
adc
push
add
pusha
inc
xor
adc
add
jo
jo
add
bound
inc
pusha
xor
and
adc
push
jo
push
and
adc
and
xor
pusha
jb
adc
add
xor
jo
add
and
xor
inc
push
and
add
xor
inc
pusha
bound
xor
jo
jb
adc
add
add
jo
adc
inc
bound
inc
inc
push
inc
add
push
add
pusha
jb
pusha
add
add
jo
add
adc
inc
inc
add
inc
adc
xor
xor
pusha
inc
jb
pusha
push
and
xor
pusha
pusha
jo
bound
inc
inc
adc
jo
jb
xor
jo
and
add
push
jo
and
inc
push
inc
inc
jb
pusha
add
adc
add
add
bound
add
and
adc
pusha
xor
and
jo
push
jo
pusha
xor
and
push
adc
and
push
add
add
xor
jb
pusha
push
add
inc
jb
push
push
and
add
push
adc
push
xor
add
adc
xor
adc
push
add
and
add
add
inc
adc
and
xor
and
push
add
push
xor
jb
and
and
bound
inc
pusha
jb
xor
add
adc
add
xor
xor
and
add
inc
adc
adc
add
jo
bound
jo
bound
add
bound
add
and
add
adc
push
push
xor
jo
add
pusha
and
inc
adc
inc
and
push
push
adc
inc
adc
add
and
jo
and
inc
inc
add
inc
push
xor
inc
bound
adc
inc
add
push
pusha
pusha
bound
and
xor
inc
push
inc
and
inc
pusha
and
inc
inc
push
add
pusha
inc
bound
add
pusha
xor
xor
add
adc
and
add
and
pusha
jb
adc
jo
xor
adc
jb
xor
jo
add
inc
xor
adc
inc
add
pusha
and
xor
jo
pusha
adc
and
and
xor
add
jo
adc
add
jo
and
add
inc
and
adc
add
add
push
inc
jb
inc
inc
push
inc
adc
and
add
and
and
push
and
adc
pusha
xor
inc
add
jb
pusha
pusha
add
xor
add
add
and
add
inc
inc
add
jo
jo
add
xor
adc
push
pusha
inc
jo
push
bound
add
push
xor
inc
adc
pusha
add
inc
add
bound
push
add
add
and
jb
push
pusha
and
xor
inc
jo
and
jo
add
and
xor
and
and
and
push
add
and
bound
xor
xor
add
jb
adc
xor
pusha
adc
add
push
jb
jb
inc
add
adc
push
xor
xor
bound
inc
inc
add
jo
jb
pusha
add
inc
add
push
bound
add
add
xor
inc
pusha
inc
jb
push
pusha
adc
and
jo
jo
add
add
adc
jo
push
pusha
adc
pusha
push
inc
inc
jb
push
and
adc
bound
add
add
and
push
jo
xor
push
inc
add
and
inc
adc
inc
add
inc
add
pusha
and
add
add
inc
inc
adc
jb
xor
xor
inc
adc
and
pusha
add
pusha
add
pusha
pusha
push
xor
adc
pusha
pusha
inc
bound
xor
push
jo
xor
jb
jb
add
pusha
jo
add
and
pusha
adc
add
add
push
add
inc
bound
adc
and
push
pusha
and
add
jo
pusha
pusha
and
jb
adc
jo
add
xor
adc
and
add
add
jo
add
and
adc
bound
inc
jo
pusha
inc
adc
and
adc
jo
add
jo
xor
and
push
and
add
xor
and
pusha
xor
xor
xor
adc
and
push
jo
adc
push
add
jb
adc
add
push
bound
bound
add
push
adc
adc
inc
adc
push
xor
xor
bound
jo
add
push
and
pusha
pusha
pusha
inc
add
xor
inc
adc
and
push
inc
push
jb
adc
inc
and
inc
inc
add
pusha
add
add
jb
adc
pusha
jb
inc
xor
and
inc
add
xor
adc
push
add
and
add
inc
jo
push
xor
push
pusha
xor
and
and
inc
xor
push
jo
add
jo
add
adc
inc
add
adc
xor
push
add
push
jo
inc
jo
bound
xor
and
add
and
adc
and
adc
jo
and
push
add
adc
and
add
jb
bound
add
add
push
and
add
xor
adc
add
push
and
inc
add
xor
adc
add
xor
pusha
jo
add
jo
xor
inc
pusha
xor
xor
add
push
inc
xor
push
add
inc
inc
adc
jo
xor
xor
push
and
adc
adc
add
jo
add
pusha
push
inc
adc
and
pusha
add
add
inc
xor
add
adc
pusha
and
add
bound
adc
and
jo
adc
xor
add
bound
adc
inc
add
add
adc
add
add
pusha
pusha
push
add
inc
and
adc
push
add
push
bound
pusha
add
inc
adc
add
add
inc
xor
xor
inc
xor
pusha
inc
push
add
bound
add
push
add
pusha
and
inc
push
add
add
xor
pusha
add
xor
pusha
inc
add
bound
bound
add
jb
and
add
push
xor
inc
and
jb
jo
inc
and
inc
bound
add
bound
inc
xor
adc
push
xor
add
push
add
inc
inc
add
push
push
add
and
push
xor
jo
inc
add
adc
xor
jb
inc
xor
xor
add
add
add
add
jo
inc
pusha
adc
add
push
jo
inc
inc
add
inc
pusha
and
bound
add
adc
jb
push
jo
adc
jo
inc
push
add
xor
and
inc
inc
xor
jo
inc
push
pusha
bound
inc
inc
pusha
add
xor
and
add
and
push
pusha
jo
add
bound
adc
add
adc
and
push
inc
push
push
and
add
xor
inc
inc
jo
xor
and
xor
add
add
add
add
xor
bound
inc
adc
jb
bound
add
and
and
jb
and
add
inc
inc
add
adc
xor
jo
push
push
add
push
pusha
add
and
pusha
and
jb
push
and
add
add
jo
and
add
xor
xor
adc
add
jo
adc
inc
add
adc
xor
and
inc
and
inc
adc
adc
add
pusha
jo
push
add
xor
push
xor
adc
push
bound
add
push
add
push
inc
add
pusha
and
pusha
add
xor
pusha
and
inc
add
adc
pusha
add
adc
xor
push
add
jo
add
and
jb
adc
and
jb
inc
jo
and
and
add
jo
pusha
pusha
jo
add
and
adc
add
pusha
add
xor
add
inc
xor
adc
and
and
adc
xor
adc
pusha
add
add
and
and
push
add
push
jo
add
and
bound
adc
xor
and
jb
bound
pusha
adc
inc
inc
push
xor
and
xor
xor
adc
adc
adc
adc
add
and
xor
adc
inc
inc
pusha
push
jo
push
adc
add
jo
add
xor
inc
jo
push
xor
xor
adc
push
pusha
adc
adc
and
adc
push
push
add
inc
and
jo
add
and
pusha
xor
and
adc
adc
add
adc
bound
inc
inc
pusha
xor
xor
inc
jo
inc
add
add
push
add
adc
jo
add
inc
pusha
adc
inc
adc
add
inc
pusha
bound
xor
xor
bound
adc
push
and
adc
pusha
and
inc
inc
push
inc
push
push
jb
push
add
adc
and
add
push
inc
adc
add
xor
adc
and
add
jo
inc
and
add
adc
adc
add
adc
and
add
jo
adc
bound
inc
push
jb
jb
inc
add
add
and
inc
xor
bound
push
adc
adc
inc
inc
xor
jo
inc
xor
jo
and
add
inc
add
xor
adc
jo
pusha
adc
inc
jo
xor
xor
inc
and
xor
adc
inc
xor
xor
add
xor
pusha
jo
jo
inc
pusha
add
adc
and
add
xor
xor
inc
bound
inc
add
pusha
inc
jo
add
adc
and
add
xor
and
push
add
adc
push
pusha
inc
pusha
inc
add
jb
push
add
push
jo
adc
inc
add
jo
and
add
add
xor
inc
adc
xor
pusha
jo
push
inc
jo
add
add
adc
inc
add
inc
push
adc
and
pusha
xor
and
push
jb
and
add
jo
and
xor
inc
inc
push
push
pusha
and
inc
inc
jb
and
add
push
inc
adc
jb
xor
xor
and
and
inc
xor
add
push
and
add
add
inc
jo
jo
add
inc
pusha
add
inc
jb
jo
and
add
xor
adc
and
jo
add
inc
add
adc
pusha
inc
add
inc
xor
jb
adc
add
pusha
add
push
xor
jb
and
inc
and
add
xor
pusha
adc
add
add
jo
add
xor
and
jo
push
xor
and
jb
add
push
pusha
add
add
xor
adc
and
add
pusha
and
and
inc
and
xor
adc
add
jo
pusha
inc
inc
inc
jo
push
push
inc
inc
xor
bound
adc
add
inc
inc
and
xor
add
xor
add
push
adc
and
inc
push
xor
add
adc
and
add
pusha
jo
adc
pusha
xor
and
inc
inc
adc
jb
push
jo
add
and
and
adc
adc
push
inc
and
bound
inc
adc
pusha
xor
inc
xor
push
inc
add
add
jo
adc
adc
and
jo
pusha
jb
inc
pusha
and
adc
add
adc
inc
add
and
adc
and
pusha
pusha
add
push
and
pusha
add
jo
jo
inc
xor
xor
pusha
and
inc
add
adc
inc
jo
inc
inc
pusha
xor
inc
and
add
inc
and
and
add
inc
bound
add
pusha
inc
xor
push
inc
add
xor
push
pusha
add
adc
jo
inc
push
xor
push
pusha
push
add
pusha
adc
adc
add
bound
pusha
push
add
inc
jo
and
bound
push
xor
push
adc
adc
jo
inc
push
jo
add
jb
inc
xor
xor
add
jo
xor
inc
xor
pusha
add
add
inc
adc
adc
jo
push
xor
pusha
push
add
and
adc
adc
xor
and
inc
add
pusha
adc
pusha
add
jo
pusha
push
pusha
xor
xor
jo
inc
jo
inc
adc
xor
inc
add
jo
push
inc
inc
add
and
inc
inc
adc
jo
bound
push
push
jb
xor
push
push
xor
add
pusha
pusha
jo
xor
jb
add
xor
xor
add
add
adc
bound
jo
add
jo
add
inc
push
and
push
inc
and
add
xor
jo
inc
add
xor
add
xor
bound
jo
and
jo
xor
pusha
adc
jb
and
and
inc
add
jb
add
xor
add
adc
xor
inc
and
xor
push
add
xor
inc
adc
xor
xor
adc
xor
and
push
inc
inc
and
pusha
inc
and
and
adc
push
and
inc
bound
push
bound
xor
push
xor
add
add
jo
push
add
add
pusha
adc
and
jb
jb
push
and
add
adc
adc
and
bound
inc
pusha
adc
add
pusha
inc
jo
jo
inc
push
inc
inc
inc
adc
add
xor
xor
bound
and
pusha
adc
bound
and
add
inc
push
inc
push
jo
push
adc
add
jo
adc
jo
adc
add
adc
add
add
inc
adc
xor
pusha
push
adc
add
xor
xor
add
inc
push
adc
adc
adc
xor
pusha
inc
inc
pusha
pusha
jo
inc
and
xor
push
and
add
pusha
jo
adc
add
and
adc
adc
jb
and
inc
push
add
inc
add
jo
inc
inc
and
and
inc
add
jo
inc
adc
adc
adc
jo
add
and
jo
and
jo
adc
push
inc
inc
add
adc
add
add
bound
jo
add
inc
inc
push
xor
inc
jo
adc
bound
add
push
xor
bound
and
adc
inc
xor
adc
bound
jo
push
inc
xor
and
adc
inc
xor
xor
inc
add
xor
inc
pusha
adc
bound
bound
and
add
inc
xor
adc
add
and
add
inc
pusha
and
inc
jb
inc
add
jo
push
inc
pusha
jo
push
pusha
push
xor
adc
jo
push
add
bound
and
and
add
push
jo
xor
and
inc
adc
inc
pusha
adc
adc
inc
bound
xor
jo
add
and
push
xor
xor
jo
add
add
jb
and
and
adc
and
push
add
adc
adc
inc
inc
pusha
jo
pusha
jb
add
adc
inc
and
pusha
pusha
xor
and
add
add
jb
push
add
pusha
jo
xor
inc
add
adc
bound
add
inc
add
pusha
jo
add
push
add
push
add
xor
xor
adc
jb
add
inc
adc
inc
inc
pusha
add
add
add
jo
push
jo
pusha
add
pusha
inc
push
push
pusha
inc
adc
xor
xor
add
adc
xor
inc
xor
xor
inc
pusha
adc
jb
xor
pusha
pusha
pusha
inc
xor
and
and
push
jo
xor
jo
inc
add
pusha
push
adc
add
and
jb
jo
xor
xor
xor
adc
pusha
inc
add
add
push
and
inc
add
add
pusha
jo
and
push
adc
xor
jb
and
pusha
inc
inc
jo
pusha
and
jo
inc
inc
xor
pusha
adc
and
adc
jb
adc
add
inc
push
add
pusha
inc
pusha
xor
xor
xor
jb
adc
xor
jo
adc
push
add
and
and
and
inc
pusha
inc
adc
adc
add
adc
and
add
adc
inc
push
adc
add
bound
push
inc
and
jo
jb
bound
add
and
adc
and
add
add
adc
add
adc
add
add
inc
pusha
adc
adc
push
jo
inc
bound
add
and
inc
adc
add
and
jo
jo
xor
add
xor
add
adc
pusha
add
push
xor
jo
add
adc
add
xor
jo
jo
and
add
push
xor
and
add
jo
inc
and
add
jo
xor
jo
add
adc
pusha
and
inc
and
bound
push
inc
add
push
inc
and
pusha
push
and
xor
add
adc
add
add
jb
and
push
add
jo
and
and
and
push
add
pusha
push
add
pusha
and
add
xor
and
inc
xor
and
xor
add
adc
xor
push
inc
add
jo
add
add
jo
jo
pusha
bound
adc
add
xor
inc
jo
pusha
and
inc
bound
xor
push
xor
adc
and
push
and
add
xor
add
add
add
pusha
push
jo
inc
inc
add
add
inc
add
and
pusha
adc
add
and
jo
pusha
adc
adc
xor
adc
inc
jo
xor
inc
bound
adc
push
jo
push
jo
and
pusha
jo
adc
xor
inc
and
bound
jo
add
pusha
and
add
add
add
adc
xor
jb
jo
jo
push
adc
push
push
add
adc
add
inc
add
and
adc
and
adc
jo
xor
xor
jo
inc
jo
inc
xor
jo
push
inc
add
adc
push
add
add
and
inc
xor
and
adc
add
push
add
adc
push
and
add
and
bound
inc
adc
add
add
add
and
add
add
adc
xor
pusha
jb
push
and
inc
push
jo
inc
adc
add
add
add
jo
add
adc
and
xor
adc
add
add
and
add
add
add
add
inc
xor
inc
jo
adc
inc
add
jo
push
jb
jo
and
bound
and
add
xor
add
inc
inc
add
pusha
jb
add
inc
adc
inc
jo
jo
bound
and
and
add
jo
inc
pusha
bound
inc
bound
and
inc
add
push
add
add
xor
adc
xor
jb
adc
xor
inc
bound
push
adc
push
add
push
add
xor
add
push
pusha
jb
pusha
add
adc
push
push
add
adc
and
add
jo
jo
and
pusha
pusha
add
adc
add
xor
push
inc
push
add
add
and
xor
add
bound
push
inc
inc
add
adc
push
add
push
jo
pusha
xor
jo
jo
pusha
jo
xor
pusha
and
inc
add
xor
jo
add
inc
inc
xor
inc
adc
pusha
push
add
add
and
add
bound
xor
and
add
bound
and
push
inc
add
add
pusha
pusha
xor
and
and
inc
push
add
and
xor
xor
xor
inc
push
pusha
and
adc
pusha
adc
jb
xor
jo
add
add
pusha
adc
inc
jo
add
jo
xor
inc
add
xor
pusha
inc
add
adc
adc
inc
add
jo
add
and
adc
bound
adc
and
add
inc
jb
and
add
adc
push
inc
add
pusha
and
and
push
inc
inc
inc
and
add
inc
push
bound
inc
inc
xor
xor
pusha
and
push
add
inc
add
push
add
add
xor
add
and
xor
jo
jb
pusha
jo
jo
add
jo
push
adc
push
add
xor
inc
inc
xor
add
pusha
inc
jb
and
inc
add
push
adc
add
inc
xor
push
xor
xor
and
add
inc
push
and
push
add
pusha
bound
jo
add
and
add
and
jo
adc
adc
jo
add
adc
inc
adc
jo
jo
add
jo
add
inc
add
xor
add
pusha
add
pusha
adc
xor
xor
xor
add
adc
inc
pusha
xor
jo
inc
jb
pusha
push
bound
add
xor
inc
jo
push
add
add
xor
push
add
adc
jo
xor
inc
adc
add
pusha
pusha
add
push
bound
jb
and
jo
push
jb
adc
push
inc
xor
bound
inc
inc
add
push
and
add
push
xor
xor
add
jo
add
inc
push
add
jo
jb
inc
inc
xor
jo
and
add
xor
inc
xor
inc
pusha
xor
adc
inc
adc
jb
xor
xor
bound
inc
jo
add
add
add
jo
push
and
inc
and
add
xor
add
xor
inc
add
add
jo
add
adc
jb
bound
and
add
jo
jo
push
and
adc
and
add
xor
add
jo
add
push
inc
xor
pusha
add
adc
inc
xor
add
jo
adc
inc
jo
and
jb
inc
adc
push
inc
adc
inc
xor
jb
bound
jo
push
pusha
and
pusha
inc
adc
and
add
and
adc
adc
add
xor
mov
add
loop
das
jle
adc
xchg
pusha
add
add
push
mov
sub
das
xor
mov
mov
lret
dec
cli
or
jmp
fistps
ds
cmp
adc
sahf
addl
jmp
pushf
ficompl
mov
repnz
mov
add
ss
outsb
mov
adc
add
add
and
lea
mov
xchg
ss
add
sbb
xor
xchg
add
sahf
jl
sbb
add
fstpt
jno
and
fimuls
jp
fisubs
mov
mov
cmp
mov
add
add
out
xchg
gs
ds
push
and
add
jnp
cmp
adc
or
add
add
popf
pop
cli
movsb
lahf
insb
add
add
cmp
loope
popl
clc
dec
enter
dec
sub
sub
add
add
aam
xor
xchg
xchg
mov
adcb
add
lahf
or
popf
push
xor
push
dec
xchg
adcb
add
divb
jp
pop
pop
shr
adc
data16
push
cwtl
push
mov
cmpsb
cltd
movsl
in
stc
sub
add
add
sbb
add
add
jbe
mov
inc
mov
add
add
sbb
inc
add
stos
xchg
ret
fdivrl
push
lea
add
add
add
add
add
add
jnp
or
mov
add
clc
loopne
xor
leave
xor
xorl
mov
xor
pop
stc
mov
arpl
mov
mov
add
add
mov
mov
enter
mov
iret
fdivp
enter
add
inc
jle
add
or
js
mov
pusha
add
add
xor
push
sub
add
add
inc
mov
push
mov
lahf
and
mov
test
test
cmp
mov
mov
lds
push
pop
sti
mov
and
add
add
notb
iret
into
xor
add
pop
pop
dec
leave
movsb
jae
mov
cmc
in
cmpl
cli
repnz
sbb
add
add
iret
xor
push
jb
sahf
and
lret
jae
int3
pop
and
stos
fmul
add
add
add
add
rdpmc
inc
repnz
sbb
mov
or
mov
mov
sbb
rcll
outsb
lahf
cli
jle
mov
pop
sub
mov
add
dec
sbb
arpl
push
xchg
adc
adc
inc
xchg
sbb
mov
pusha
add
mov
sbb
add
cmpsl
pop
push
or
adc
add
adc
adc
aaa
inc
add
jl
sbb
mov
add
add
ret
pop
loopne
dec
add
add
cmpsl
call
jle
ja
loop
mov
repnz
pusha
add
jno
aaa
mov
push
adc
and
and
mov
lods
lcall
mov
stc
push
mov
out
push
push
jb
fwait
mov
insb
add
add
xlat
jb
add
add
fcoml
jmp
jo
pop
push
jae
add
add
jle
xor
repz
dec
dec
lahf
test
jge
out
cli
inc
adc
inc
add
add
mov
or
add
add
mov
jp
mov
add
add
cmp
ljmp
dec
add
add
jg
dec
mov
add
mov
add
mov
mov
cmp
sbb
cmc
fildl
adc
loopne
not
xchg
push
jns
idiv
fisubl
jge
xor
pop
ja
add
das
cmp
je
jb
sub
mov
xchg
adc
sub
pop
jne
outsb
push
add
int
mov
add
add
subl
popf
cld
mov
jae
jns
out
dec
out
insb
add
add
int
mov
jp
and
xchg
fstpt
xor
ret
test
mov
add
pop
pop
daa
push
push
dec
sti
dec
jbe
mov
add
add
adc
pop
jns
loopne
mov
jmp
pop
jg
jle
in
and
out
stos
adc
dec
pop
xor
add
push
sbb
add
mov
lret
mov
cmp
add
inc
add
add
xchg
sub
add
mov
loop
xchg
xchg
xchg
loope
movsl
cltd
mov
or
mov
jo
mov
popa
mov
or
mov
imul
add
outsb
and
add
add
cli
mov
xor
insl
xor
sub
mov
aaa
rol
imul
xorb
add
or
in
add
add
sarb
addr16
add
mov
add
add
or
add
les
add
jo
mov
call
mov
jecxz
mov
add
add
ficompl
add
icebp
divb
cmp
rol
push
jne
cmc
cld
jmp
add
sbb
outsl
lcall
jl
pop
out
push
call
sub
add
add
mov
in
adc
add
adc
test
les
add
add
add
cmp
jge
cmpsl
sahf
stc
sti
mov
mov
aam
mov
or
jecxz
pushf
mov
add
jno
cli
stos
cltd
push
cmpb
and
add
add
add
add
cs
cmp
add
jecxz
pop
rorb
mov
pop
jecxz
dec
mov
fwait
mov
jbe
out
jno
pop
call
mov
xlat
jb
arpl
xchg
in
jg
sub
jmp
jg
xchg
jl
jo
sub
fcmovu
jns
jmp
inc
add
add
int3
movsb
sub
add
add
cs
bnd
int
add
add
rolb
nop
sbb
cmpsb
mov
negl
pop
mov
add
imul
add
jb
cs
jae
ljmp
and
ljmp
add
mov
movsl
pop
ret
les
xchg
dec
mov
mov
fcomps
xlat
loope
je
repz
pop
adc
jnp
into
jp
lcall
sub
lea
daa
mov
fsubl
add
add
jns
cmp
add
sbb
push
lret
jno
scas
mov
repz
or
mov
icebp
dec
sub
shl
mov
inc
nop
sbb
add
cltd
out
insl
mov
mov
push
mov
mov
pop
ret
mov
dec
fbld
mov
aam
xor
outsb
adc
add
push
jmp
jg
addr16
mov
jmp
loopne
or
dec
mov
inc
inc
pusha
add
add
inc
imul
sub
adc
scas
pop
repnz
or
add
add
add
lods
or
mov
pop
test
and
pop
xor
iret
mov
and
mov
jbe
ficomps
inc
sbb
add
dec
add
add
lock
add
add
jne
add
pop
imul
mov
gs
test
xchg
pop
stos
fbld
test
pinsrw
add
sbbl
add
inc
mov
add
jne
inc
mov
stc
xchg
or
cwtl
jno
jmp
mov
add
add
sbb
xor
ret
scas
mov
inc
scas
rcrb
pop
mov
lret
adc
sub
mov
dec
ret
lds
xchg
mov
jae
in
call
pop
lret
add
add
ljmp
scas
sbb
inc
out
mov
mov
cs
mov
shr
into
popf
pop
pop
push
adc
add
dec
cmp
mov
dec
adc
mov
jo
aaa
dec
sahf
pushf
dec
add
add
pop
fistps
and
mov
lcall
add
xchg
imul
add
imul
inc
add
sbb
cmp
shll
mov
add
inc
add
inc
shrl
add
add
add
ret
mov
loope
add
inc
add
add
lods
and
fwait
lds
add
mov
std
stos
sbb
out
repnz
add
add
add
cmp
cmp
add
mov
movw
sbb
mov
mov
mov
mov
lods
cmp
sub
dec
jmp
call
pop
dec
add
add
push
jge
sbb
shlb
shll
mov
leave
jl
ja
popa
inc
loop
addr16
pusha
add
add
dec
ret
mov
mov
add
add
add
add
add
sbb
lds
stos
sbb
mov
sub
in
adc
lock
scas
cmp
rorb
add
xor
addl
or
add
add
nop
or
stc
imul
pop
inc
icebp
nop
hlt
clc
dec
or
ror
cmp
sar
hlt
mov
add
or
or
aaa
sbb
inc
lcall
clc
fidivrl
dec
int3
insl
data16
or
add
add
add
add
sarl
dec
fistl
sub
jbe
jbe
out
das
arpl
xchg
repz
out
pop
and
push
jns
push
aas
into
xchg
and
add
add
lret
out
mov
insb
add
adc
jmp
dec
notb
mov
add
fst
push
push
add
and
add
add
hlt
mov
insb
add
outsl
sbb
add
mov
cmp
add
lock
add
add
add
aam
xor
iret
je
out
adc
sub
dec
test
sub
scas
dec
gs
out
mov
cwtl
add
add
stos
mov
add
push
addr16
dec
decb
xchg
dec
test
adc
add
add
and
mov
mov
outsl
sti
clc
xchg
mov
add
add
mov
xor
mov
mov
movsb
sub
add
add
add
cmpsb
aaa
add
add
add
add
add
cmpsb
movsb
cmc
lock
add
add
adcb
jecxz
add
add
adcl
mov
push
cmpsl
mov
mov
inc
add
add
enter
in
sub
add
mov
add
cwtl
mov
mov
add
outsl
jne
lock
gs
decb
jne
and
mov
pusha
add
xor
mov
add
popa
or
scas
sarl
adc
leave
sahf
outsb
mov
out
sbbb
or
mov
add
xchg
ficoms
dec
dec
test
jle
add
or
mov
loop
sbb
fildl
jecxz
or
dec
or
add
add
or
add
add
out
clc
dec
jp
push
lahf
into
enter
mov
mov
popa
fbstp
pop
daa
mov
add
lock
test
out
mov
add
popf
hlt
and
mov
push
pop
call
jno
xchg
mov
ret
and
pushf
sub
add
add
cmp
jecxz
jne
scas
dec
add
into
dec
in
pop
or
sets
insb
add
add
icebp
pop
outsl
cmp
inc
and
mov
add
sbb
sub
call
cmp
push
sub
add
add
mov
xor
mov
inc
xor
jne
sub
lods
dec
adc
pop
jmp
push
and
mov
mov
and
add
loopne
add
cmp
mov
sarl
loopne
shr
aad
movsb
xchg
cmpl
sub
mov
push
dec
out
push
inc
cmp
push
lds
inc
insl
aam
stos
or
add
add
lock
popa
cmp
in
adc
and
add
add
mov
add
testl
sub
adc
popa
insb
add
add
add
pop
aaa
xor
fistps
xchg
ret
and
insb
add
add
test
cmp
hlt
es
shl
insl
test
loopne
rolb
add
cmpb
insb
add
push
and
inc
je
and
add
add
loopne
inc
add
adc
add
mov
xchg
push
out
adc
add
loop
add
add
es
dec
cmp
xlat
sahf
test
clc
sbb
mov
dec
inc
jns
pop
jae
iret
scas
jae
dec
movb
mov
mov
cmpsb
in
cmp
push
lock
jne
test
push
mov
sub
sarb
cli
movsl
sbbl
add
dec
xor
or
add
add
pop
into
enter
imul
rcrb
inc
mov
lea
outsl
paddsb
repz
imul
cmp
add
mov
add
add
add
lcall
ficoms
and
add
cmp
idivb
mov
add
movsl
insb
add
add
ss
cmp
or
add
add
dec
mov
icebp
sbb
add
add
mov
add
add
or
mov
in
cltd
inc
lock
add
mov
or
add
add
add
add
fmull
in
add
popl
jp
push
cld
data16
inc
xor
sub
mov
jmp
inc
pop
mov
mov
add
mov
inc
add
add
xchg
daa
stos
jg
lods
push
or
mov
stos
mov
int
push
sub
mov
mov
fnstsw
mov
dec
jno
jle
filds
add
add
add
js
push
mov
test
cmpl
fdivs
repnz
es
and
mov
popa
mov
xchg
dec
out
fstpt
outsb
cmpsb
outsb
std
arpl
and
mov
add
add
add
inc
pop
daa
and
mov
test
jb
push
and
mov
sub
add
add
fsts
roll
lods
jg
stos
insl
mov
loope
add
jb
fdivr
dec
leave
outsb
push
ret
jns
xor
adc
lret
lahf
ret
jp
test
add
scas
mov
sub
data16
clc
lods
push
fcomip
mov
push
mov
ret
jge
repnz
add
jl
add
mov
xor
adc
xor
jne
xchg
jae
sub
dec
push
aas
shl
int3
rolb
add
cld
sbb
les
xchg
mov
cmpsl
mov
xor
add
test
push
rcr
popl
add
push
mov
sub
cmp
jne
lea
push
push
mov
push
call
or
mov
shr
shr
mov
add
push
push
push
push
push
call
leave
ret
ret
mov
mov
mov
or
cld
lea
lea
sub
shr
not
inc
sub
mov
je
push
pop
add
lea
clc
jmp
ret
push
mov
sub
lea
movl
movl
push
push
push
push
push
push
cld
call
test
jne
push
bnd
ss
mov
add
adc
mov
movsl
dec
iret
xchg
je
push
dec
ret
push
mov
add
add
xlat
insb
add
add
add
sub
mov
add
add
adc
sub
and
add
add
mov
push
lods
inc
mov
add
push
cbtw
incl
mov
add
add
repnz
mov
add
add
mov
icebp
loopne
add
add
repz
cltd
pop
mov
xchg
lock
add
add
mov
lret
lret
xor
or
push
or
add
add
add
add
push
aam
xchg
out
dec
add
adc
push
loope
insl
in
add
jno
sbb
aad
add
sub
idiv
xchg
push
dec
outsb
iret
and
mov
repz
push
lods
add
add
or
mov
adc
mov
stc
in
push
imul
add
sbb
and
pop
jg
mov
add
add
add
lock
jne
add
data16
mov
push
pop
cmp
sbb
dec
add
add
test
dec
add
daa
dec
lods
xor
pop
mov
mov
xor
jnp
test
test
xor
mov
ja
loopne
mov
int
stos
push
out
fadd
aad
inc
and
cli
mov
out
test
in
das
jp
dec
push
mov
fisttps
add
add
mov
stos
push
cmp
cmpsl
into
inc
push
mov
dec
add
add
movups
add
mov
mov
jae
inc
add
add
or
incl
add
xchg
mov
dec
add
lret
lods
imull
xchg
xchg
sub
push
add
insl
dec
add
mov
test
pop
pop
xchg
test
mov
add
jl
xchg
add
add
add
movsl
pop
adc
mov
lock
add
add
adc
push
jbe
add
push
icebp
mov
jmp
test
movsb
jbe
movsb
add
add
add
pop
test
add
add
jg
add
sub
mov
jmp
add
mov
movsb
sub
add
add
mov
out
add
mov
adc
add
add
ljmp
or
mov
xor
sbb
jg
insb
add
add
or
out
cmp
pushf
sub
mov
cmpsl
into
shlb
add
stos
frstor
push
and
add
repnz
mov
mov
add
enter
mov
hlt
aam
xor
add
add
test
cmp
jmp
rolb
sub
add
add
cli
add
aad
scas
popf
jle
clc
inc
imul
arpl
jae
shlb
pop
mov
inc
adc
mov
call
inc
mov
outsl
xchg
test
mov
mov
pop
and
insl
fnstcw
sarl
add
add
jmp
push
aam
int3
lock
mov
add
sub
testb
mov
pop
xchg
mov
shlb
in
cli
fcmovne
add
add
cli
xor
bndcl
scas
cmpps
stos
jl
mov
stc
stos
inc
pop
nop
lods
mov
add
add
dec
xor
in
xor
cmp
mov
xorl
sbb
ffreep
pop
mov
sub
add
add
ja
add
mov
out
enter
hlt
and
push
jmp
fadd
rcrl
add
loop
test
add
add
add
mov
add
adc
sub
add
add
sub
mov
repz
push
pusha
add
add
xor
test
dec
fwait
lcall
add
add
sahf
dec
cld
sti
mov
adc
jp
push
jl
ljmp
test
aad
mov
setne
sbb
cmc
inc
add
add
mov
out
adc
dec
rcr
pop
in
repnz
dec
jnp
mov
add
add
cmpsb
add
add
add
ja
fisttpll
push
add
cmp
add
add
sub
xor
add
dec
add
xchg
mov
lcall
xor
mov
cmp
and
mov
fincstp
adc
add
xor
add
cld
push
sbbb
inc
push
xor
call
lahf
rorb
insb
add
mul
addr16
or
imul
or
xchg
loopne
mov
lret
icebp
push
inc
add
add
sbb
enter
hlt
sbb
mov
cmc
insl
mov
and
add
add
add
mov
xlat
or
mov
mov
data16
jecxz
popa
in
add
add
add
inc
sub
push
adc
push
push
add
add
add
outsl
fdivl
mov
fists
add
dec
ljmp
pop
pop
incl
mov
push
in
or
jg
aas
push
xor
cmpsb
xor
mov
sub
xor
add
add
fidivs
cmp
mov
pop
clc
mov
test
xchg
sti
in
cmp
add
pushf
insl
pushf
adc
jo
rorl
xchg
xchg
xchg
jno
jns
shr
mov
rolb
add
jmp
mov
daa
daa
cmp
fdivl
pop
sbb
fidivrs
push
cmpb
call
dec
sub
add
test
mov
adc
and
mov
push
cltd
cmpl
ljmp
insb
add
xchg
sbb
add
mov
idivl
cmp
ljmp
lods
loop
pop
loope
add
add
orb
add
add
arpl
or
add
add
mov
ljmp
add
add
test
fisubs
add
ret
lods
mov
mov
push
cmpsb
xchg
mov
add
add
add
bound
jmp
shrb
add
mov
scas
pop
and
cmp
adc
mov
es
mov
mov
inc
sbb
cld
xor
sbb
push
shll
inc
lods
jmp
add
add
lds
lret
imul
dec
inc
and
or
mov
aad
pop
shll
popa
cmp
sahf
jmp
jno
mov
repz
les
add
add
cmpsb
mov
dec
add
outsb
sbbb
pop
mov
clc
fdivrs
and
daa
jp
jae
es
xchg
cmpsl
sub
aas
or
mov
inc
out
add
ret
xchg
add
dec
xlat
sub
add
add
movsb
mov
jg
pop
cmp
cld
xchg
rcrb
inc
add
fucom
cmp
hlt
pop
scas
mov
jnp
aaa
aaa
xor
xorb
mov
sti
jle
pop
mov
aas
loopne
mov
mov
cwtl
enter
add
lret
push
add
mov
lods
xchg
rcll
adc
arpl
add
or
mov
mov
or
add
add
outsl
adc
mov
xchg
fiaddl
pop
cli
or
mov
mov
mov
xchg
pop
add
cmc
imul
sub
add
and
mov
aam
xchg
pusha
add
add
add
dec
add
aad
nop
dec
add
add
jb
scas
push
mov
loopne
add
neg
mov
test
push
in
add
mov
fstl
mov
jmp
mov
test
add
add
je
icebp
fsubr
mov
jp
call
xchg
mov
popf
xlat
jecxz
dec
sahf
xchg
movsl
jb
jnp
ficompl
add
xchg
push
sub
add
add
jo
fst
jge
movsl
ja
sub
fimuls
add
popf
add
je
mov
inc
add
les
int3
mov
push
iret
into
clc
pop
leave
pop
stos
xchg
mov
pop
fbld
add
add
jnp
sbb
int
out
ret
xor
add
pushl
stos
cmp
popf
adc
add
xchg
sub
mov
pop
push
add
inc
aam
mov
cli
loopne
add
xor
pop
out
enter
add
add
add
jne
inc
dec
add
loope
sub
arpl
shr
rorb
add
pop
out
mov
xchg
inc
mov
imul
add
imul
pusha
add
add
adc
lods
shlb
dec
add
add
sub
mov
sbb
add
test
std
push
xor
sbb
sbb
fwait
arpl
cmc
mov
leave
scas
sbb
fwait
inc
das
dec
push
bound
jge
jbe
inc
not
lock
push
jnp
cmpsb
mov
sbb
add
add
lret
pop
pushf
nop
and
jmp
inc
add
xor
add
add
xor
mov
and
stos
cmpsl
fucomip
adc
iret
ss
test
dec
pusha
add
stc
frstor
cmp
dec
cmp
mov
inc
cs
jg
test
inc
jge
pop
imul
mov
jbe
lods
subps
jge
stos
pop
nop
and
pop
cs
sbb
lahf
cli
or
shrl
add
add
add
pop
pop
jo
sbb
lea
pop
dec
data16
int
push
das
mov
sbb
adc
add
inc
pop
xchg
iret
inc
add
data16
mov
add
add
mov
sbb
mov
ds
sbb
jae
mov
and
xor
inc
add
add
pushf
jbe
xor
mov
or
imul
out
pop
xlat
test
add
es
mov
add
add
ljmp
add
cmp
fisubl
mov
add
add
jg
cmp
mov
xor
arpl
in
push
pop
cmp
pop
aaa
pop
cmp
mov
repnz
add
mov
inc
add
jp
pop
lcall
or
push
add
add
add
in
lods
jl
dec
fldt
pop
sbb
jl
pop
cli
iret
sub
mov
out
fdivs
and
add
add
add
add
scas
push
xor
push
sub
daa
and
mov
aam
call
rorl
add
adc
ret
adc
aaa
lock
mov
sbb
stos
sbbl
insb
add
add
iret
movb
add
rorb
loopne
xchg
jp
mov
ljmp
or
in
stos
aas
ret
add
add
aaa
dec
das
shrb
mov
add
add
xor
add
adc
leave
cmp
xor
mov
or
mov
push
xor
mov
mov
add
add
add
sub
add
test
jae
jne
xor
add
add
inc
sahf
sub
add
add
sbb
inc
stc
mov
or
mov
mov
mov
les
push
jb
jle
mov
push
pop
xchg
lods
jge
js
or
add
arpl
sbb
add
movsl
sbb
aam
mov
inc
add
add
outsb
clc
xchg
mov
leave
push
fmul
jo
mov
gs
mov
inc
pop
test
add
mulb
jge
lea
jmp
add
push
add
add
add
sbb
mov
out
jp
cwtl
mov
xchg
cmp
repz
add
imul
add
mov
cvtps2pi
jne
sbb
and
fcomps
mov
or
icebp
push
rcll
pop
or
addr16
ljmp
sub
add
add
push
repz
xchg
push
or
mov
jg
adc
daa
add
add
in
out
or
add
add
xor
add
int3
jb
ja
sub
sub
notb
sti
and
add
jbe
imul
movsb
iret
mov
add
lods
fistpl
mov
das
xor
lock
arpl
into
je
cmpsl
pushf
sub
rdpmc
bound
aam
cmp
in
repz
add
add
test
lahf
in
dec
inc
sub
add
add
push
mov
mov
inc
add
lds
or
add
add
cmpsb
cmc
ret
xchg
lea
add
add
cli
or
add
add
aam
popf
into
or
mov
gs
fildl
jo
or
adc
mov
andb
push
ficoml
or
lea
scas
gs
data16
aam
push
js
push
loope
add
add
pop
mov
fildll
clc
pop
or
lret
rcrl
inc
nop
xchg
xor
pop
mov
dec
mov
add
mov
add
inc
add
add
or
xchg
sti
insb
add
mov
fwait
movzbl
lods
fcompl
jno
imul
mov
or
add
add
push
or
add
fidivl
hlt
pop
xor
pop
pushf
jns
inc
sub
inc
add
mov
inc
add
add
add
sbb
test
or
scas
mov
pusha
add
add
add
add
add
jbe
les
add
inc
push
jle
add
repnz
rcll
add
add
inc
pop
out
lahf
adc
push
and
mov
cld
and
adc
add
add
sub
clc
cld
hlt
loopne
stos
cwtl
cmp
das
jl
dec
xchg
or
pop
add
add
pop
popf
push
nop
push
mov
leave
nop
jmp
lcall
ror
mov
clc
repnz
nop
nop
jae
shll
adcb
pushf
add
mov
clc
repnz
nop
nop
jae
xor
and
xlat
push
push
mov
xchg
ret
pushf
pop
jmp
jmp
roll
roll
add
add
nop
nop
jae
add
add
add
add
lods
add
clc
repnz
nop
nop
jae
sub
roll
pusha
sbb
scas
add
inc
fmuls
repnz
add
clc
repnz
nop
nop
jae
add
repnz
push
add
add
push
clc
repnz
nop
nop
jae
add
push
mov
xchg
call
nop
push
mov
leave
nop
jmp
out
pop
rcll
add
cmc
add
adcl
das
insb
push
add
inc
mov
cld
pop
loope
incl
subb
mov
clc
repnz
nop
nop
jae
push
add
push
je
push
imul
outsl
mov
clc
repnz
nop
nop
jae
add
add
add
dec
pop
add
dec
roll
nop
jae
add
or
cmc
outsl
fwait
add
stos
mov
mov
test
repnz
nop
nop
jae
and
add
add
clc
repnz
nop
nop
jae
and
push
push
mov
inc
inc
loopne
mov
clc
repnz
nop
nop
jae
add
pop
pusha
sbb
lcall
add
js
lock
add
repnz
nop
nop
jae
add
add
repnz
add
shlb
je
clc
repnz
nop
nop
jae
add
add
add
add
repnz
nop
nop
jae
add
mov
add
cmp
mov
xchg
ret
lds
and
sub
aas
push
nop
push
mov
leave
nop
jmp
push
add
out
repnz
push
adc
adc
add
fsts
repnz
nop
nop
jae
add
xor
hlt
xchg
add
add
or
cld
nop
nop
jae
and
add
add
dec
add
dec
add
add
mov
push
mov
leave
nop
jmp
xchg
add
add
add
in
mov
cmp
xor
push
mov
xchg
ret
sbb
add
cmc
in
adc
push
inc
add
add
xor
andb
je
insl
mov
clc
repnz
nop
nop
jae
add
jmp
add
mov
std
inc
clc
repnz
nop
nop
jae
add
mov
in
add
repnz
nop
nop
jae
repnz
add
add
sbb
pusha
push
mov
xchg
ret
add
add
add
add
add
testl
adcl
add
dec
add
add
in
xor
push
pop
clc
into
cmpsl
pop
nop
push
mov
leave
nop
jmp
outsl
add
and
xchg
push
clc
repnz
nop
nop
jae
in
add
add
add
add
and
mov
dec
sub
cmp
add
je
add
add
mov
push
clc
repnz
nop
nop
jae
je
xor
imul
js
add
aas
clc
repnz
nop
nop
jae
fwait
lods
cmc
add
sub
rcll
sarl
repnz
nop
nop
jae
popl
add
xor
add
in
pop
push
inc
mov
dec
nop
push
mov
leave
nop
jmp
add
repnz
and
gs
cmp
decl
add
add
add
test
mov
add
add
push
mov
add
xchg
imul
ret
out
popf
ljmp
mov
clc
repnz
nop
nop
jae
addb
sbb
mov
movl
jae
pop
add
add
movsb
aas
add
push
mov
xchg
ret
lods
test
add
push
push
out
mov
clc
repnz
nop
nop
jae
add
dec
pusha
mov
out
xor
insb
add
add
dec
add
push
mov
xchg
ret
add
outsl
add
lock
pop
inc
shr
nop
push
mov
leave
nop
jmp
add
add
add
and
mov
call
nop
jae
dec
add
push
add
imul
push
mov
add
nop
push
mov
leave
nop
jmp
mov
add
sbb
push
mov
xchg
ret
in
add
add
add
and
repnz
nop
nop
jae
add
add
add
add
lea
nop
push
mov
leave
nop
jmp
imul
and
dec
fistpl
push
mov
xchg
ret
mov
add
add
out
lahf
push
clc
repnz
nop
nop
jae
add
gs
add
inc
inc
ret
add
jmp
add
sbb
and
lock
dec
mov
xchg
repnz
nop
nop
jae
pusha
js
and
pop
je
sub
clc
repnz
nop
nop
jae
add
add
pusha
add
add
pop
jle
mov
clc
repnz
nop
nop
jae
add
add
and
inc
push
mov
xchg
ret
cmc
xor
xchg
add
add
in
sbb
std
cmp
add
mov
add
scas
dec
jmp
leave
clc
repnz
nop
nop
jae
repnz
and
fnstcw
nop
push
mov
leave
nop
jmp
mov
add
cmp
jne
clc
repnz
nop
nop
jae
add
and
add
xor
add
push
loopne
mov
xchg
ret
dec
addb
sbb
mov
pop
clc
repnz
nop
nop
jae
add
mov
add
and
test
push
mov
xchg
ret
push
cltd
xor
gs
inc
push
push
cltd
dec
test
repnz
in
fistpl
push
mov
xchg
ret
and
roll
inc
imul
add
add
add
shrl
add
leave
add
mov
add
mov
clc
repnz
nop
nop
jae
add
je
add
add
gs
clc
repnz
nop
nop
jae
inc
mov
add
xchg
test
xchg
ret
add
add
in
add
add
add
push
mov
xchg
ret
mov
dec
test
pusha
add
add
add
nop
nop
jae
leave
dec
xchg
add
fwait
add
push
je
sub
sar
cld
nop
nop
jae
add
xor
add
add
add
cwtl
mov
cld
nop
nop
jae
sbb
repnz
add
add
xor
nop
pop
sub
repnz
nop
nop
jae
add
lods
shll
xor
add
clc
repnz
nop
nop
jae
add
add
add
daa
fistpl
clc
repnz
nop
nop
jae
adc
add
inc
add
add
test
mov
xchg
ret
push
rcl
test
leave
sbb
daa
popa
push
mov
xchg
ret
leave
rcrl
xor
add
push
int
ret
mov
xchg
ret
push
fwait
or
add
outsl
lcall
add
pop
stos
fwait
nop
push
mov
leave
nop
jmp
and
repnz
and
test
add
add
push
mov
xchg
ret
lds
add
add
add
push
push
test
jne
clc
repnz
nop
nop
jae
mov
cltd
add
add
xchg
or
cli
jo
push
push
mov
xchg
ret
cmc
xor
inc
add
in
mov
push
clc
repnz
nop
nop
jae
dec
add
sbb
add
scas
js
push
insb
add
jmp
in
leave
nop
jmp
mov
add
jmp
push
or
add
inc
push
mov
xchg
ret
scas
add
inc
shll
pop
addb
add
repnz
nop
nop
jae
add
addb
mov
mov
clc
repnz
nop
nop
jae
add
and
add
nop
nop
jae
shrl
sub
and
add
add
scas
stc
pushl
push
mov
xchg
ret
add
adc
add
add
add
add
pushf
sbb
push
add
add
mov
add
push
push
pop
push
mov
xchg
ret
mov
sbb
add
add
add
mov
or
dec
xor
inc
inc
adc
dec
add
jne
push
mov
xchg
ret
in
hlt
hlt
imul
lcall
inc
sbb
nop
jmp
outsl
test
lock
pop
clc
repnz
nop
nop
jae
test
je
mov
mov
add
add
add
add
imul
jae
add
push
push
cmc
je
mov
jle
jmp
clc
repnz
nop
nop
jae
add
sbb
sbb
xor
rolb
and
add
mov
add
add
outsl
mov
nop
push
mov
leave
nop
jmp
shr
or
sbb
add
or
les
repnz
nop
nop
jae
sbb
je
add
sub
add
repnz
nop
nop
jae
mov
xchg
sbb
adc
mov
xchg
ret
add
add
add
in
add
roll
and
and
mov
xchg
ret
add
add
cmc
add
lods
mov
add
mov
pop
add
clc
repnz
nop
nop
jae
or
sbb
add
mov
loopne
clc
repnz
nop
nop
jae
js
in
add
add
mov
pop
les
addr16
add
leave
inc
cmc
add
add
adc
add
sub
clc
repnz
nop
nop
jae
add
add
add
add
push
mov
leave
nop
jmp
add
in
inc
and
add
pop
fld1
push
mov
xchg
ret
add
mov
add
mov
sar
cld
nop
nop
jae
xchg
xor
test
je
add
scas
enter
nop
nop
jae
and
lds
mov
mov
sbb
cld
nop
nop
jae
sbb
sbb
add
add
add
add
push
mov
xchg
ret
add
and
test
add
add
and
iret
call
nop
push
mov
leave
nop
jmp
add
mov
scas
clc
repnz
nop
nop
jae
add
andb
xchg
rcll
add
xchg
imul
push
mov
xchg
ret
dec
sbb
push
add
add
aas
imul
clc
repnz
nop
nop
jae
add
mov
push
push
mov
xchg
ret
adc
vpsrlq
add
push
mov
xchg
ret
sbb
add
roll
add
imul
adc
add
jmp
push
and
movl
add
fldl
ljmp
ret
test
mov
add
add
or
and
add
add
and
addb
call
inc
add
mov
sbb
add
xorl
add
repnz
nop
nop
jae
add
add
and
ljmp
mov
leave
nop
jmp
lock
fwait
add
out
call
inc
add
add
adc
pushf
add
imul
add
add
mov
add
add
inc
push
mov
add
add
int
add
int
add
add
fists
inc
popa
shl
push
mov
xchg
ret
add
js
add
push
clc
repnz
nop
nop
jae
add
mov
add
pusha
pushf
repnz
dec
add
add
clc
repnz
nop
nop
jae
pusha
add
pop
add
add
adc
nop
push
mov
leave
nop
jmp
add
add
lcall
add
clc
mov
repnz
nop
nop
jae
test
add
add
nop
nop
jae
add
add
add
add
lock
jge
add
nop
push
mov
leave
nop
jmp
hlt
add
add
add
jnp
movsb
nop
push
mov
leave
nop
jmp
in
add
inc
add
add
mov
clc
repnz
nop
nop
jae
add
add
add
lds
add
ss
roll
in
leave
nop
jmp
in
cltd
inc
add
mov
add
mov
leave
nop
jmp
lods
lock
pushf
lods
add
add
dec
cmp
repnz
nop
nop
jae
and
cltd
add
mov
add
or
clc
repnz
nop
nop
jae
add
add
add
push
sbb
push
push
clc
repnz
nop
nop
jae
add
or
mov
test
push
mov
leave
nop
jmp
inc
add
je
add
add
test
push
push
mov
xchg
ret
add
add
cltd
scas
add
sub
sbb
add
add
jmp
add
add
lds
add
pusha
mov
add
mov
mov
clc
repnz
nop
nop
jae
and
add
add
push
push
add
clc
repnz
nop
nop
jae
adc
add
xchg
lret
testl
nop
push
mov
leave
nop
jmp
mov
add
add
addl
nop
nop
jae
add
addb
add
pop
push
add
mov
clc
repnz
nop
nop
jae
mov
push
add
out
imul
cltd
push
clc
repnz
nop
nop
jae
add
add
push
in
add
dec
test
add
add
add
aas
add
imul
add
add
xor
shr
clc
repnz
nop
nop
jae
add
and
push
sbb
repnz
nop
nop
jae
hlt
add
hlt
pop
imul
add
lods
or
fld1
clc
repnz
nop
nop
jae
repnz
xor
add
add
push
mov
xchg
xchg
clc
repnz
nop
nop
jae
mov
jmp
pusha
dec
add
call
clc
repnz
nop
nop
jae
leave
and
mov
lods
pop
push
nop
push
mov
leave
nop
jmp
add
add
add
add
sub
mov
clc
repnz
nop
nop
jae
mov
in
add
add
ret
add
add
shr
nop
push
mov
leave
nop
jmp
add
je
or
add
add
leave
push
push
mov
xchg
ret
mov
mov
cltd
lods
add
cld
nop
nop
jae
add
sub
adc
add
nop
push
mov
leave
nop
jmp
hlt
xchg
add
add
pop
test
jge
jbe
clc
repnz
nop
nop
jae
add
add
xchg
fdivrs
cwtl
jnp
jne
add
rcrl
add
push
add
mov
push
outsl
stc
add
nop
push
mov
leave
nop
jmp
mov
movl
add
repnz
nop
nop
jae
add
add
add
popl
push
sti
pop
push
mov
xchg
ret
and
and
add
leave
add
add
loope
clc
repnz
nop
nop
jae
add
cltd
add
pop
lods
add
add
inc
add
clc
repnz
nop
nop
jae
add
add
mov
roll
repz
clc
repnz
nop
nop
jae
lock
mov
dec
lcall
mov
cmp
ret
add
and
add
shr
clc
repnz
nop
nop
jae
scas
jmp
mov
mov
clc
repnz
nop
nop
jae
add
mov
and
add
add
and
mov
sbb
push
mov
xchg
ret
mov
out
lock
sub
add
mov
add
out
push
inc
add
add
roll
push
add
inc
add
nop
push
mov
leave
nop
jmp
test
and
add
test
add
std
add
clc
repnz
nop
nop
jae
test
and
add
add
add
lcall
nop
nop
jae
add
mov
add
add
int
add
incl
nop
push
mov
leave
nop
jmp
or
add
push
inc
fwait
mov
add
add
clc
repnz
nop
nop
jae
push
inc
and
mov
jae
add
clc
repnz
nop
nop
jae
add
mov
add
mov
xchg
ret
and
add
mov
mov
xchg
ret
dec
add
test
add
cmc
pop
fwait
add
jl
addr16
mov
testb
add
sub
add
xor
out
add
add
cmp
nop
push
mov
leave
nop
jmp
add
add
add
push
repnz
mov
pop
push
mov
xchg
ret
mov
add
add
in
push
mov
add
add
repnz
nop
nop
jae
pop
rcrl
mov
int
nop
push
mov
leave
nop
jmp
sub
add
add
pusha
add
subl
nop
nop
jae
add
add
add
dec
stos
clc
repnz
nop
nop
jae
or
outsl
add
push
add
test
cltd
adc
push
mov
xchg
ret
in
mov
add
and
add
add
add
xor
clc
repnz
nop
nop
jae
popl
dec
lock
push
cmc
add
das
add
clc
repnz
nop
nop
jae
andb
dec
xor
add
push
rep
clc
repnz
nop
nop
jae
add
outsl
add
add
add
sub
xchg
lock
and
and
add
add
in
mov
or
dec
je
add
add
add
add
mov
clc
repnz
nop
nop
jae
repnz
add
lcall
dec
clc
dec
inc
clc
repnz
nop
nop
jae
in
add
add
add
lcall
clc
repnz
nop
nop
jae
add
xchg
mov
add
add
repnz
nop
nop
jae
or
sub
mov
clc
repnz
nop
nop
jae
fwait
inc
pop
add
add
xchg
addb
pop
clc
repnz
nop
nop
jae
push
add
pop
in
lcall
add
add
repnz
nop
nop
jae
in
add
add
push
fwait
pushf
xor
mov
mov
leave
nop
jmp
add
add
add
mov
clc
repnz
nop
nop
jae
add
test
dec
and
add
add
sar
repnz
nop
nop
jae
lds
popl
add
sbb
xchg
mov
clc
repnz
nop
nop
jae
push
add
lcall
leave
nop
jmp
push
add
or
sub
imul
add
nop
push
mov
leave
nop
jmp
pusha
add
sbb
push
mov
leave
nop
jmp
mov
roll
add
and
add
cmp
mov
clc
repnz
nop
nop
jae
add
mov
add
add
xchg
jne
sbb
push
mov
xchg
ret
sbb
add
cltd
add
inc
pop
clc
repnz
nop
nop
jae
repnz
add
add
add
jb
mov
clc
repnz
nop
nop
jae
add
add
sbb
clc
repnz
nop
nop
jae
add
add
mov
pop
inc
add
movl
add
push
mov
call
clc
repnz
nop
nop
jae
and
xor
and
mov
xchg
ret
mov
add
rcrl
movl
repnz
nop
nop
jae
cmc
add
addb
or
add
call
inc
add
add
push
popl
in
jmp
push
add
stc
mov
clc
repnz
nop
nop
jae
dec
add
and
add
sub
add
mov
xchg
ret
dec
sub
add
scas
add
jne
clc
repnz
nop
nop
jae
pop
add
in
add
sub
push
mov
leave
nop
jmp
gs
add
add
test
outsl
add
xor
clc
repnz
nop
nop
jae
add
hlt
cmc
add
add
add
or
add
add
mov
nop
push
mov
leave
nop
jmp
imul
add
jmp
inc
push
mov
xchg
ret
roll
mov
add
xor
add
cld
nop
nop
jae
addb
add
mov
sbb
out
add
mov
add
repnz
nop
nop
jae
and
mov
andb
je
nop
push
mov
leave
nop
jmp
xchg
test
push
nop
push
mov
leave
nop
jmp
dec
dec
push
add
add
repnz
add
mov
xchg
ret
add
add
pop
sbb
push
clc
repnz
nop
nop
jae
fwait
dec
je
sbb
pusha
add
rcrb
adc
add
nop
jmp
add
mov
add
add
push
jne
clc
repnz
nop
nop
jae
push
pusha
out
add
add
mov
les
push
mov
xchg
ret
add
add
add
xchg
mov
xchg
ret
lods
add
add
add
add
mov
mov
clc
repnz
nop
nop
jae
add
or
lock
add
xor
add
add
adc
mov
xchg
ret
add
lds
add
popl
add
mov
repnz
nop
nop
jae
cltd
add
leave
in
push
mov
ret
clc
repnz
nop
nop
jae
jmp
and
add
push
hlt
dec
add
dec
mov
dec
cmp
repnz
nop
nop
jae
and
add
leave
add
cld
nop
nop
jae
push
add
mov
sub
add
add
mov
enter
nop
nop
jae
and
mov
add
js
mov
call
nop
nop
jae
jmp
movl
add
cld
nop
nop
jae
add
add
js
add
pusha
add
clc
repnz
nop
nop
jae
cltd
add
add
in
add
mov
mov
nop
push
mov
leave
nop
jmp
addb
inc
mov
add
dec
inc
mov
insb
gs
repnz
nop
nop
jae
push
add
push
sbbb
add
mov
leave
nop
jmp
add
and
test
repnz
nop
nop
jae
add
add
push
clc
repnz
nop
nop
jae
imul
and
add
lcall
cld
nop
nop
jae
add
and
add
lds
add
push
mov
leave
nop
jmp
movl
scas
inc
and
mov
clc
repnz
nop
nop
jae
pop
lods
sub
leave
cmc
dec
and
sar
cld
nop
nop
jae
push
cltd
inc
add
mov
cmpsl
popa
clc
repnz
nop
nop
jae
mov
mov
add
lock
push
inc
add
and
add
xor
xor
cmp
lcall
add
sub
pusha
lds
jmp
lods
jnp
push
mov
xchg
ret
lods
add
mov
add
aas
fld1
push
mov
xchg
ret
add
add
add
add
hlt
mov
and
push
mov
xchg
ret
movl
js
adc
aas
pop
clc
repnz
nop
nop
jae
mov
pushf
lcall
add
clc
repnz
nop
nop
jae
hlt
popl
add
lcall
add
clc
repnz
nop
nop
jae
dec
add
fwait
add
add
popl
test
pop
push
mov
xchg
ret
add
test
add
add
push
je
leave
stos
bound
dec
inc
add
add
add
and
push
xchg
pop
clc
repnz
nop
nop
jae
addb
mov
push
add
nop
push
mov
leave
nop
jmp
lcall
add
lea
clc
repnz
nop
nop
jae
add
add
lock
stc
es
clc
repnz
nop
nop
jae
add
add
add
add
fwait
add
testl
cmp
ret
add
cltd
rcrl
add
shll
test
push
push
mov
xchg
ret
add
inc
add
dec
pop
add
add
push
push
clc
repnz
nop
nop
jae
add
add
xchg
xchg
repnz
fcoms
fwait
clc
repnz
nop
nop
jae
add
pop
scas
lds
addb
dec
scas
add
call
nop
jmp
dec
and
and
mov
movzwl
nop
push
mov
leave
nop
jmp
pop
add
sbb
cltd
rol
jmp
repnz
nop
nop
jae
add
cltd
popl
shll
add
scas
add
adc
aaa
mov
push
mov
xchg
ret
mov
add
dec
sbb
pop
dec
clc
repnz
nop
nop
jae
add
repnz
add
inc
mov
pop
add
clc
repnz
nop
nop
jae
inc
outsl
add
add
add
stc
add
add
addl
add
jne
add
fidivrs
inc
and
repnz
nop
nop
jae
repnz
add
sbb
nop
push
mov
leave
nop
jmp
gs
add
repnz
psubb
cld
nop
nop
jae
adc
hlt
mov
and
cmp
cld
nop
nop
jae
repnz
add
leave
pushf
popl
test
adc
nop
jae
add
in
repnz
popl
add
add
arpl
mov
adc
push
mov
leave
nop
jmp
add
mov
push
mov
xchg
ret
add
mov
add
add
add
add
add
push
sub
mov
push
mov
leave
nop
jmp
push
push
movl
sbbb
jge
sar
cld
nop
nop
jae
dec
add
popl
add
movl
movb
das
jg
add
pop
add
add
add
add
add
popf
add
push
mov
xchg
ret
mov
pop
pop
push
js
outsb
sub
dec
cmp
repnz
nop
nop
jae
add
add
adc
in
add
add
mov
rcrb
mov
xchg
ret
add
add
test
add
push
and
repnz
nop
nop
jae
add
pushf
out
add
adc
add
nop
jmp
add
outsl
mov
add
clc
repnz
nop
nop
jae
add
push
sbb
add
nop
jmp
sbb
add
sbb
push
out
push
mov
jl
mov
xchg
add
leave
adc
fisttpll
mov
dec
pop
nop
push
mov
leave
nop
jmp
add
push
dec
lods
xchg
pop
xchg
shr
clc
repnz
nop
nop
jae
add
add
roll
add
add
sub
add
add
pop
nop
push
mov
leave
nop
jmp
add
mov
xor
add
push
inc
add
mov
add
add
and
orb
repnz
nop
nop
jae
add
mov
or
jne
sbb
clc
repnz
nop
nop
jae
test
cmc
add
lds
lcall
cs
sbb
xchg
repnz
nop
nop
jae
add
hlt
add
push
mov
add
push
movsl
add
mov
dec
add
mov
stc
push
clc
repnz
nop
nop
jae
in
add
test
je
add
idiv
and
clc
repnz
nop
nop
jae
sbb
push
add
and
repnz
nop
nop
jae
add
lcall
push
movsl
fwait
clc
repnz
nop
nop
jae
add
lods
add
out
cltd
repnz
add
add
pop
clc
repnz
nop
nop
jae
add
and
and
mov
dec
add
inc
push
clc
repnz
nop
nop
jae
add
add
xchg
xor
clc
repnz
nop
nop
jae
add
dec
add
add
add
shll
or
repnz
nop
nop
jae
add
inc
je
add
push
fwait
lcall
nop
push
mov
leave
nop
jmp
add
xor
add
add
lds
or
in
leave
nop
jmp
add
lods
add
add
pushf
call
push
mov
xchg
ret
and
scas
test
js
pusha
pop
add
xor
mov
shl
push
mov
xchg
ret
and
or
lcall
iret
ja
clc
repnz
nop
nop
jae
add
mov
sub
repnz
nop
nop
jae
and
adc
in
add
lods
add
call
nop
jmp
add
add
clc
repnz
nop
nop
jae
push
add
xor
lds
or
clc
repnz
nop
nop
jae
outsl
add
lods
add
mov
movsl
pop
push
mov
xchg
ret
rcrl
add
and
add
xor
mov
add
add
icebp
xor
es
mov
lods
jnp
out
mov
clc
repnz
nop
nop
jae
add
add
add
jne
nop
push
mov
leave
nop
jmp
dec
add
lcall
push
mov
xchg
ret
add
add
add
add
scas
and
add
add
repnz
nop
nop
jae
add
add
add
add
outsl
shlb
clc
repnz
nop
nop
jae
sub
add
repnz
mov
roll
add
out
sub
mov
test
call
nop
jmp
pop
repnz
fwait
add
pop
cmp
nop
push
mov
leave
nop
jmp
add
hlt
roll
add
nop
push
mov
leave
nop
jmp
xchg
add
add
test
add
sbb
js
repnz
nop
nop
jae
sbb
add
negb
push
clc
repnz
nop
nop
jae
add
and
lcall
push
mov
leave
nop
jmp
add
add
sub
and
int
pop
jae
repnz
nop
nop
jae
add
add
adc
add
nop
jmp
mov
sub
aaa
mov
nop
push
mov
leave
nop
jmp
sbb
push
add
hlt
and
mov
nop
push
mov
leave
nop
jmp
gs
cmc
add
and
add
clc
repnz
nop
nop
jae
dec
add
add
add
and
mov
nop
push
mov
leave
nop
jmp
add
sbb
push
add
add
lds
cld
nop
nop
jae
outsl
lock
mov
and
clc
repnz
nop
nop
jae
inc
dec
out
inc
or
je
push
add
out
lods
ds
sub
clc
repnz
nop
nop
jae
and
leave
add
dec
add
sbb
mov
clc
repnz
nop
nop
jae
adc
mov
shl
rclb
inc
arpl
xchg
ret
pushf
add
add
push
add
add
hlt
sbb
repnz
nop
nop
jae
add
push
add
add
or
and
repnz
nop
nop
jae
add
pop
hlt
add
add
add
mov
sti
nop
push
mov
leave
nop
jmp
jmp
add
add
add
add
cmp
repnz
nop
nop
jae
mov
add
adc
lock
push
mov
xchg
ret
add
lock
fwait
sbb
add
mov
aaa
xchg
push
mov
xchg
ret
sbb
add
cmc
cmpb
add
clc
repnz
nop
nop
jae
roll
test
add
add
add
mov
mov
xchg
ret
add
jmp
lcall
add
insb
add
add
and
mov
xchg
ret
imul
and
test
add
mov
popa
nop
push
mov
leave
nop
jmp
pop
sbb
imul
mov
add
repnz
nop
nop
jae
inc
and
add
and
pop
mov
sbb
push
mov
xchg
ret
add
xor
cmc
add
movzwl
clc
repnz
nop
nop
jae
jmp
add
inc
add
add
add
add
dec
add
clc
repnz
nop
nop
jae
mov
lods
adc
mov
or
repnz
nop
nop
jae
add
addb
lods
roll
add
dec
add
push
push
mov
xchg
ret
fwait
pushf
push
add
push
add
test
repnz
mov
leave
nop
jmp
pop
in
lock
add
lock
add
cmp
test
repnz
nop
nop
jae
mov
outsl
mov
repnz
nop
nop
jae
add
hlt
add
sub
or
addl
nop
nop
jae
repnz
add
pushf
push
ret
clc
repnz
nop
nop
jae
push
and
add
xchg
outsl
add
mov
clc
repnz
nop
nop
jae
add
sub
add
add
lret
jge
clc
repnz
nop
nop
jae
add
mov
sub
mov
repnz
nop
nop
jae
and
add
cltd
add
push
add
sbb
push
mov
xchg
ret
jmp
popl
jmp
add
add
pushf
add
push
clc
repnz
nop
nop
jae
out
add
or
test
add
orl
and
clc
repnz
nop
nop
jae
pop
fwait
mov
sbb
fistpl
clc
repnz
nop
nop
jae
mov
xor
movsl
nop
push
mov
leave
nop
jmp
mov
and
add
add
repnz
push
mov
leave
nop
jmp
inc
roll
add
add
add
xchg
pusha
nop
push
mov
leave
nop
jmp
add
add
push
test
int3
mov
mov
xchg
ret
add
js
jmp
and
or
add
cmpw
nop
push
mov
leave
nop
jmp
add
dec
gs
pop
movzwl
push
mov
xchg
ret
roll
lds
add
add
add
mov
clc
repnz
nop
nop
jae
inc
add
add
add
adcl
mov
leave
nop
jmp
and
lds
add
mov
fdivl
mov
or
nop
jmp
fwait
mov
add
add
mov
add
stos
lcall
xchg
not
add
add
adc
jmp
sub
test
hlt
add
add
lods
add
sbb
repnz
nop
nop
jae
add
add
mov
lods
dec
mov
clc
repnz
nop
nop
jae
add
add
lcall
sahf
push
xor
mov
xchg
ret
test
sbb
add
js
add
sti
clc
repnz
nop
nop
jae
sbb
and
fisubl
clc
repnz
nop
nop
jae
shll
cmc
sbb
sub
and
cmp
nop
push
mov
leave
nop
jmp
add
addb
add
add
nop
push
mov
leave
nop
jmp
add
and
inc
and
clc
repnz
nop
nop
jae
dec
lcall
mov
sub
repnz
nop
nop
jae
push
add
add
in
cs
nop
push
mov
leave
nop
jmp
add
add
xor
cmc
add
dec
add
dec
add
add
test
test
nop
push
mov
leave
nop
jmp
add
dec
in
add
test
cltd
lds
mov
leave
nop
jmp
cltd
add
add
push
clc
repnz
nop
nop
jae
repnz
add
add
pop
push
call
clc
repnz
nop
nop
jae
add
lods
add
fwait
adc
push
xor
mov
leave
nop
jmp
add
add
fwait
add
lds
mov
add
rcll
jmp
add
push
push
jmp
add
inc
add
cmpl
nop
push
mov
leave
nop
jmp
mov
lock
jmp
hlt
add
mov
lods
addr16
clc
repnz
nop
nop
jae
add
fwait
hlt
add
add
sbb
add
mov
xchg
ret
gs
add
mov
mov
clc
repnz
nop
nop
jae
mov
imul
clc
repnz
nop
nop
jae
add
dec
push
and
and
repnz
nop
nop
jae
add
add
scas
outsl
add
push
mov
xchg
ret
add
sbb
pop
and
add
orb
adc
push
inc
add
outsl
hlt
add
add
add
jne
push
mov
xchg
ret
add
add
dec
inc
fwait
and
add
repnz
nop
nop
jae
add
add
push
dec
push
push
mov
xchg
ret
add
pusha
add
je
dec
mov
push
mov
xchg
ret
add
mov
leave
add
or
fwait
dec
add
push
mov
xchg
ret
add
fwait
cltd
lcall
add
add
cld
nop
nop
jae
lods
add
pop
add
mov
nop
nop
jae
in
dec
add
add
mov
mov
xor
cmp
ret
rol
mov
mov
add
add
dec
pusha
nop
push
mov
leave
nop
jmp
leave
movl
add
test
add
xor
clc
repnz
nop
nop
jae
mov
add
add
cld
nop
nop
jae
mov
lcall
in
lods
add
xor
adcl
repnz
nop
nop
jae
sbb
add
mov
clc
repnz
nop
nop
jae
add
add
jae
clc
repnz
nop
nop
jae
dec
cmc
out
scas
mov
lods
and
pusha
clc
repnz
nop
nop
jae
add
add
mov
push
clc
repnz
nop
nop
jae
add
hlt
add
add
or
mov
add
fistpl
push
mov
xchg
ret
add
add
add
mov
add
ja
clc
repnz
nop
nop
jae
xor
add
and
sub
push
xchg
xchg
ret
add
add
fwait
test
fidivrs
repnz
nop
nop
jae
lds
test
add
and
popl
fsubrs
call
push
jo
add
push
add
and
add
outsl
mov
add
ds
clc
repnz
nop
nop
jae
add
sub
add
add
popa
xor
clc
repnz
nop
nop
jae
add
adc
lcall
push
clc
repnz
nop
nop
jae
hlt
add
cltd
movl
clc
repnz
nop
nop
jae
add
add
add
js
imul
pop
and
repnz
nop
nop
jae
add
add
test
add
pop
mov
clc
repnz
nop
nop
jae
add
add
shrl
add
add
daa
push
clc
repnz
nop
nop
jae
add
inc
xchg
shl
add
inc
mov
repnz
nop
nop
jae
mov
add
jmp
clc
repnz
nop
nop
jae
add
sbb
push
add
push
push
nop
push
mov
leave
nop
jmp
dec
push
add
lock
addb
movl
add
cld
nop
nop
jae
add
fwait
add
mov
outsl
add
test
push
mov
leave
nop
jmp
dec
test
and
je
xor
repnz
nop
nop
jae
add
out
add
push
lock
xor
push
mov
xchg
ret
imul
mov
dec
add
lods
clc
repnz
nop
nop
jae
and
add
push
add
je
movsl
add
clc
repnz
nop
nop
jae
and
mov
fwait
add
pusha
add
nop
push
mov
leave
nop
jmp
pushf
sbb
mov
in
nop
out
stos
push
push
mov
xchg
ret
in
add
add
add
add
js
jl
add
add
jp
je
clc
repnz
nop
nop
jae
add
sbb
add
test
add
add
nop
jmp
sbb
scas
add
outsb
aas
push
push
mov
xchg
ret
sbb
add
pop
mov
sahf
js
sub
clc
repnz
nop
nop
jae
mov
cmc
add
dec
mov
add
and
push
mov
leave
nop
jmp
mov
leave
push
dec
in
and
inc
clc
repnz
nop
nop
jae
add
push
lods
and
repnz
nop
nop
jae
add
inc
add
pushf
add
mov
mov
enter
cld
nop
nop
jae
and
add
add
clc
repnz
nop
nop
jae
add
sub
push
popl
mov
clc
repnz
nop
nop
jae
mov
add
add
or
xor
mov
push
mov
xchg
ret
push
sbb
pop
inc
lds
out
cmp
lahf
mov
push
mov
xchg
ret
push
in
xor
add
add
add
mov
lods
push
mov
xchg
ret
add
inc
dec
push
add
add
adc
cmp
mov
push
mov
xchg
ret
mov
add
or
xor
add
call
nop
push
mov
leave
nop
jmp
add
cltd
push
add
pusha
lods
scas
mov
clc
repnz
nop
nop
jae
shll
add
add
gs
mov
add
repnz
nop
nop
jae
add
xor
add
and
add
add
imul
cmp
ret
and
scas
test
add
add
imul
add
push
clc
repnz
nop
nop
jae
mov
add
adc
add
mov
leave
nop
jmp
dec
repnz
add
scas
push
add
xor
clc
repnz
nop
nop
jae
add
add
add
clc
repnz
nop
nop
jae
add
cltd
add
inc
fwait
imul
add
add
cmpl
nop
push
mov
leave
nop
jmp
lods
gs
popa
clc
repnz
nop
nop
jae
adc
add
add
add
xor
dec
cltd
lea
clc
repnz
nop
nop
jae
and
and
add
push
mov
xchg
ret
sbb
in
sbb
add
cmp
push
nop
push
mov
leave
nop
jmp
add
popl
add
add
add
call
clc
repnz
nop
nop
jae
add
add
rcll
dec
pusha
clc
repnz
nop
nop
jae
popl
xor
cmc
pushf
lock
sub
add
pop
push
mov
xchg
ret
add
sub
push
dec
add
lds
push
mov
mov
xchg
ret
add
xor
pusha
sub
mov
clc
repnz
nop
nop
jae
and
add
add
pusha
xchg
inc
nop
push
mov
leave
nop
jmp
cmc
roll
outsl
add
add
out
add
add
repnz
nop
nop
jae
add
add
cmc
add
in
clc
repnz
nop
nop
jae
add
scas
add
mov
repnz
nop
nop
jae
out
add
xor
add
or
mov
xchg
ret
add
add
mov
jmp
push
clc
repnz
nop
nop
jae
and
add
add
rep
nop
push
mov
leave
nop
jmp
add
hlt
sub
mov
push
clc
repnz
nop
nop
jae
push
sub
push
add
xor
clc
repnz
nop
nop
jae
add
lods
je
add
add
add
sub
add
add
mov
leave
nop
jmp
add
roll
add
ds
sub
clc
repnz
nop
nop
jae
pushf
add
xchg
add
add
mov
add
add
add
clc
repnz
nop
nop
jae
add
in
lods
mov
mov
clc
repnz
nop
nop
jae
pushf
add
mov
lcall
add
push
push
mov
xchg
ret
mov
sub
xchg
ficompl
push
push
mov
xchg
ret
push
and
repnz
adc
add
inc
rorl
clc
repnz
nop
nop
jae
add
and
and
xchg
fistl
mov
leave
nop
jmp
add
leave
and
add
add
sub
push
and
nop
push
mov
leave
nop
jmp
add
sub
add
add
add
pop
mov
clc
repnz
nop
nop
jae
add
jmp
xlat
xor
push
mov
xchg
ret
add
in
shll
pushf
jmp
outsl
add
pop
add
clc
repnz
nop
nop
jae
xor
lds
add
add
cmp
inc
ja
add
add
add
add
outsl
add
push
mov
xchg
ret
add
and
add
repnz
nop
nop
jae
pop
inc
and
roll
add
and
mov
jmp
add
add
sbb
inc
dec
or
imul
add
dec
add
add
xchg
push
nop
push
mov
leave
nop
jmp
push
add
add
and
pop
addr16
push
mov
xchg
ret
js
mov
xchg
repnz
pop
push
mov
xchg
ret
adc
add
pop
and
add
add
hlt
mov
jmp
call
nop
jmp
mov
popl
add
movb
cld
nop
nop
jae
add
xor
add
add
je
mov
clc
repnz
nop
nop
jae
sbb
jmp
add
jns
iret
or
nop
jae
test
add
adc
sub
pop
inc
add
roll
scas
add
in
lock
add
and
add
clc
repnz
nop
nop
jae
add
pop
outsl
add
repnz
nop
nop
jae
add
push
add
roll
pushf
sbb
cld
nop
nop
jae
add
pop
add
in
imul
es
outsl
add
clc
repnz
nop
nop
jae
add
adc
roll
ss
mov
jnp,pt
pop
movsb
add
mov
dec
call
jo
movsb
and
add
add
clc
repnz
nop
nop
jae
add
add
roll
add
int3
push
jns
fcoms
mov
cmp
ret
add
add
add
scas
jmp
add
add
add
xchg
rolb
add
add
sahf
leave
add
adc
mov
call
leave
nop
jmp
inc
add
pusha
rcrl
movsl
mov
nop
push
mov
leave
nop
jmp
add
add
popl
inc
add
add
call
nop
jae
test
add
mov
stos
fdivrp
clc
repnz
nop
nop
jae
and
add
jb
jb
mov
clc
repnz
nop
nop
jae
gs
dec
jmp
and
fnstsw
clc
repnz
nop
nop
jae
out
lods
mov
add
call
nop
jmp
add
add
push
add
add
nop
push
mov
leave
nop
jmp
push
xor
adc
repnz
nop
nop
jae
push
add
mov
add
add
mov
push
mov
xchg
ret
pop
add
js
add
xor
and
jg
push
es
jecxz
repnz
nop
nop
jae
add
popl
add
inc
push
xchg
mov
clc
repnz
nop
nop
jae
add
add
popl
pushf
sbb
sub
mov
cmp
ret
inc
add
add
scas
add
jo
je
nop
push
mov
leave
nop
jmp
pushf
dec
add
push
ss
add
add
nop
nop
jae
add
outsl
add
add
in
add
add
add
jbe
stos
pushl
clc
repnz
nop
nop
jae
lods
xor
inc
and
push
add
les
push
call
cld
nop
nop
jae
add
mov
pushl
push
mov
xchg
ret
add
lds
add
add
add
mov
ret
pop
clc
repnz
nop
nop
jae
add
cltd
imul
cmc
and
lods
xor
add
add
lret
add
add
add
addb
jbe
icebp
mov
push
mov
xchg
ret
pushf
add
adc
dec
add
and
scas
clc
lret
mov
clc
repnz
nop
nop
jae
add
mov
mov
add
clc
repnz
nop
nop
jae
adc
xor
xor
imul
roll
push
push
add
nop
push
mov
leave
nop
jmp
add
add
or
add
add
lock
add
adc
inc
hlt
add
and
mov
dec
nop
push
mov
leave
nop
jmp
add
je
jmp
hlt
sub
lods
pushf
test
call
leave
nop
jmp
add
sbb
mov
sbb
pop
clc
repnz
nop
nop
jae
sbb
add
pop
add
add
add
mov
push
mov
xchg
ret
dec
lds
test
add
mov
fwait
lods
xchg
push
fistpl
clc
repnz
nop
nop
jae
add
add
add
inc
or
pop
repz
add
add
or
add
push
add
and
add
add
xor
add
clc
repnz
nop
nop
jae
add
add
add
mov
adc
test
repnz
nop
nop
jae
add
add
push
clc
repnz
nop
nop
jae
add
add
add
add
pusha
add
mov
clc
repnz
nop
nop
jae
lods
add
add
add
test
insb
jo
clc
repnz
nop
nop
jae
out
push
mov
pop
cmpsl
add
nop
push
mov
leave
nop
jmp
jmp
dec
add
imul
sub
icebp
nop
push
mov
leave
nop
jmp
add
lods
add
xchg
rcll
repnz
nop
nop
jae
add
add
mov
and
cmp
push
mov
leave
nop
jmp
add
add
lcall
add
push
mov
xchg
ret
js
add
add
test
add
clc
repnz
nop
nop
jae
and
add
inc
lods
repnz
cli
clc
repnz
nop
nop
jae
add
add
lcall
mov
xchg
ret
add
add
mov
xor
clc
repnz
nop
nop
jae
dec
test
xor
add
xchg
test
repnz
nop
nop
jae
addb
jmp
rcrl
repnz
nop
nop
jae
mov
or
add
add
add
roll
repnz
nop
nop
jae
add
add
inc
or
and
inc
lods
clc
repnz
nop
nop
jae
add
push
mov
add
mov
or
repnz
nop
nop
jae
add
add
scas
roll
test
jmp
test
cld
nop
nop
jae
imul
pusha
add
rcll
mov
xchg
ret
js
add
add
inc
mov
push
mov
cltd
insb
add
add
popa
int3
movsl
leave
out
add
jo
or
push
push
mov
xchg
ret
imul
add
add
leave
fwait
pop
xchg
clc
repnz
nop
nop
jae
and
lcall
add
jae
jne
push
mov
xchg
ret
scas
push
and
add
dec
add
push
sub
je
clc
repnz
nop
nop
jae
add
in
add
and
clc
repnz
nop
nop
jae
leave
repnz
scas
and
push
mov
xchg
ret
add
in
js
add
add
dec
add
add
xchg
leave
clc
repnz
nop
nop
jae
add
add
in
mov
add
movsb
push
or
mov
clc
repnz
nop
nop
jae
mov
pusha
add
je
stos
clc
repnz
nop
nop
jae
imul
add
add
hlt
je
fistpl
push
mov
xchg
ret
cmc
dec
add
lock
inc
test
nop
push
mov
leave
nop
jmp
add
mov
out
add
mov
clc
repnz
nop
nop
jae
add
add
pop
inc
test
add
mov
mov
push
mov
xchg
ret
pushf
add
add
add
js
dec
bnd
cld
nop
nop
jae
add
add
add
in
add
stc
pushl
clc
repnz
nop
nop
jae
cmc
add
add
inc
inc
or
bound
xchg
ret
xor
add
mov
add
push
outsl
clc
push
mov
xchg
ret
mov
add
add
and
nop
push
mov
leave
nop
jmp
add
imul
imul
dec
push
pop
mov
clc
repnz
nop
nop
jae
rcrl
add
inc
movsl
mov
clc
repnz
nop
nop
jae
add
add
push
add
sub
nop
nop
jae
lcall
scas
push
add
sbb
push
mov
leave
nop
jmp
push
add
add
mov
lods
add
add
loope
clc
repnz
nop
nop
jae
mov
add
and
add
jmp
leave
nop
jmp
push
add
dec
add
jmp
test
push
mov
xchg
ret
mov
cmc
push
movl
push
mov
cmp
mov
test
add
addb
add
mov
push
ret
inc
sar
call
nop
jmp
push
add
push
dec
add
inc
scas
sub
push
mov
xchg
ret
xorb
and
add
mov
xchg
ret
add
add
and
je
adc
pop
push
mov
xchg
ret
add
add
mov
test
add
cli
outsl
fistpl
nop
push
mov
leave
nop
jmp
add
add
or
pop
add
mov
push
mov
xchg
ret
js
add
add
add
mov
pop
lds
rcr
and
mov
xchg
ret
add
shrl
mov
clc
repnz
nop
nop
jae
test
inc
mov
add
jmp
in
jne
nop
push
mov
leave
nop
jmp
add
inc
push
inc
add
add
jmp
lods
js
bound
pop
mov
add
dec
add
out
push
add
xchg
lret
mov
leave
nop
jmp
orb
lods
add
test
add
push
and
add
add
aad
push
mov
xchg
ret
add
lds
roll
sub
in
add
push
mov
xchg
ret
add
add
and
mov
fsub
inc
adc
add
stc
xor
and
push
add
mov
nop
push
mov
leave
nop
jmp
hlt
dec
leave
mov
out
adc
add
cmc
add
jmp
mov
mov
cld
nop
nop
jae
inc
lods
repnz
push
xor
add
dec
nop
push
mov
leave
nop
jmp
add
sbb
add
add
mov
nop
push
mov
leave
nop
jmp
mov
add
add
leave
nop
jmp
add
mov
dec
hlt
scas
dec
dec
add
mov
inc
ss
jae
xor
repnz
nop
nop
jae
add
mov
outsl
pushf
js
adc
fmuls
ret
dec
add
out
add
add
insl
mov
clc
repnz
nop
nop
jae
add
push
push
add
imul
mov
mov
clc
repnz
nop
nop
jae
xor
pushf
add
add
adc
test
add
add
nop
jmp
fwait
and
dec
push
nop
push
mov
leave
nop
jmp
add
add
add
add
je
push
push
mov
xchg
ret
pushf
movl
add
add
add
add
dec
cmp
push
mov
leave
nop
jmp
mov
add
and
and
mov
nop
push
mov
leave
nop
jmp
pop
xchg
add
je
push
mov
cld
nop
nop
jae
add
and
mov
adc
push
clc
repnz
nop
nop
jae
add
scas
repnz
fdivrp
clc
repnz
nop
nop
jae
and
mov
add
clc
repnz
nop
nop
jae
add
add
add
outsl
lss
clc
repnz
nop
nop
jae
add
add
in
je
push
clc
repnz
nop
nop
jae
push
test
sbb
cmpb
mov
xchg
ret
add
pushf
jmp
add
add
lock
dec
adc
nop
nop
jae
add
push
and
add
nop
push
mov
leave
nop
jmp
sub
add
add
dec
jle
push
clc
repnz
nop
nop
jae
inc
outsl
add
add
insb
add
add
xchg
mov
clc
repnz
nop
nop
jae
roll
add
test
and
and
dec
inc
add
mov
test
fwait
cmc
add
pop
xchg
push
sbb
xor
clc
repnz
nop
nop
jae
add
out
mov
add
jb
xor
call
clc
repnz
nop
nop
jae
add
add
lods
mov
in
add
add
push
mov
nop
push
mov
leave
nop
jmp
js
push
add
js
imul
pusha
dec
je
clc
repnz
nop
nop
jae
add
or
pop
repnz
mov
xchg
ret
xor
and
add
and
add
jmp
push
mov
xchg
ret
test
xor
push
pushf
add
add
je
add
in
push
mov
xchg
ret
outsl
push
pushf
add
jmp
add
or
push
mov
leave
nop
jmp
add
push
pusha
add
test
inc
add
add
movsl
fwait
push
mov
xchg
ret
add
xor
mov
fld1
clc
repnz
nop
nop
jae
je
dec
add
add
push
push
pop
clc
repnz
nop
nop
jae
add
add
add
test
daa
popa
clc
repnz
nop
nop
jae
lods
lock
add
add
add
jmp
add
mov
clc
repnz
nop
nop
jae
and
and
gs
nop
push
mov
leave
nop
jmp
add
and
add
je
add
inc
add
add
add
leave
nop
jmp
popl
add
add
cs
fwait
nop
push
mov
leave
nop
jmp
add
je
add
add
pop
xchg
mov
lock
call
nop
jmp
roll
sbb
add
add
mov
jb
push
mov
leave
nop
jmp
or
xchg
test
hlt
xchg
movsl
mov
push
mov
xchg
ret
add
in
add
add
push
add
loopne
loope
rclb
outsb
inc
add
and
and
pop
push
scas
add
clc
repnz
nop
nop
jae
out
add
iret
cld
nop
push
mov
leave
nop
jmp
add
add
test
add
add
add
imul
and
add
add
ror
add
js
add
mov
bnd
lret
add
aas
jg
jo
cmp
ss
and
pop
lods
mov
ss
notl
and
mov
lds
or
pop
outsl
std
sub
add
add
mov
inc
add
add
mov
mov
int
std
aam
mov
ret
enter
mov
add
lds
add
add
movsl
cld
paddw
cmpsb
jle
add
xor
mov
add
clc
push
jle
mov
add
cli
sti
stos
sbb
ss
push
jle
cmp
sub
add
add
es
mov
mov
dec
data16
filds
and
add
add
add
add
xchg
xor
jmp
ljmp
add
add
push
jo
js
mov
pop
outsb
ljmp
add
add
les
shll
pop
mov
fdiv
jmp
adc
add
add
scas
xchg
cmpb
and
jbe
adc
add
sahf
sub
add
add
cwtl
test
push
jns
insb
add
add
sbb
iret
enter
add
loop
add
xchg
mov
xchg
ds
xchg
jne
repz
adc
push
cmpsl
inc
aas
ficompl
add
adc
icebp
scas
out
mov
add
inc
push
aam
clc
nop
sub
mov
clc
inc
out
xor
mov
mov
arpl
aam
add
add
fsts
lds
shlb
add
adc
dec
add
add
js
fcmovne
mov
push
or
and
add
add
aad
aas
insl
movb
mull
insb
add
mov
dec
xor
int
mov
sbb
xchg
test
popf
shlb
add
add
add
cmp
push
movsb
mov
mov
mov
add
and
xor
int3
stos
cmp
mov
xor
call
xchg
mov
es
imul
ret
lods
aaa
sbb
lret
cwtl
push
and
loop
adc
repz
adc
cmpsb
ja
cmp
out
push
jg
push
fcom
ss
add
mov
jb
dec
mov
cltd
dec
out
arpl
pop
ret
sahf
imul
addr16
xchg
push
sbb
rorb
push
adc
dec
mulb
leave
out
clc
jbe
inc
add
mov
lahf
or
mov
mov
mov
leave
pop
push
jnp
dec
push
or
add
dec
bnd
insl
sbb
dec
imul
faddl
push
loope
mov
out
lcall
add
pop
push
scas
rcll
shlb
add
jnp
test
pop
ret
push
fistl
iret
daa
mov
mov
jo
sub
roll
notb
cmp
outsb
inc
push
cmp
xor
aad
andb
jmp
rcll
jecxz
aaa
sbb
mov
xlat
loope
mov
sub
add
sbbb
aad
or
push
mov
pop
jb
and
mov
in
add
add
add
push
jp
int
adc
push
mov
inc
push
mov
cmp
bound
adc
add
ds
shl
add
add
add
dec
pop
imul
or
mov
add
add
add
add
mov
stc
xchg
and
add
add
ja
jecxz
pop
repnz
sub
add
add
mov
jmp
add
adc
mov
jmp
cmp
add
add
roll
out
push
pop
ds
xchg
pop
inc
adc
mov
pop
xchg
int3
mov
add
sbb
cltd
or
mov
xchg
mov
gs
add
ds
fldl
mov
cmp
nop
sbb
ja
das
mov
dec
add
add
mov
xor
add
push
inc
inc
push
add
mov
pop
sbb
mov
add
add
mov
out
dec
sub
mov
int3
mov
cmpsl
pop
lock
xor
add
jnp
pop
mov
je
inc
scas
cmp
aam
mov
add
jp
int
insl
cld
popf
and
jecxz
mov
add
add
std
leave
jno
add
add
stos
lock
inc
add
cmpsl
rorb
inc
add
add
lds
add
cmp
pop
lret
push
sub
add
dec
xor
ret
dec
ss
inc
add
mov
push
loopne
cwtl
cwtl
fmuls
add
add
mov
negb
dec
sbb
mov
lock
push
mov
cmp
pop
xchg
shll
lods
xchg
sub
add
add
fistl
add
mov
add
lcall
mov
jno
pusha
add
xlat
scas
inc
cmp
adc
add
add
mov
add
je
iret
add
in
in
xor
cmp
add
add
add
xor
movsl
fwait
mov
addr16
sub
cmpsb
xchg
std
call
fcompl
jg
sbb
loop
dec
sbb
popa
in
repz
or
cmpsl
outsb
add
mov
and
out
dec
pushf
pushf
leave
mov
faddp
xchg
out
mov
mov
xorl
cmp
loop
push
nop
mov
mov
lret
sub
pop
push
or
movsl
xchg
jbe
outsl
shrl
add
add
iret
hlt
xor
mov
fwait
mov
cmc
ss
xlat
insl
xchg
jns
cmpsb
jge
adc
and
outsl
jmp
jno
sbb
mov
movb
movsl
ret
pop
push
sti
loop
das
jne
mov
add
pop
jge
add
mov
lock
sub
add
add
lods
cmpb
xlat
pop
mov
inc
xor
lret
or
mov
sbb
dec
add
pop
xchg
sub
add
mov
ror
sbb
xchg
cltd
and
or
push
mov
stos
dec
jns
sbb
add
popa
out
and
shrl
mov
stc
les
test
nop
daa
xor
add
lret
and
add
cmc
sbb
jae
push
mov
sub
mov
mov
gs
mov
add
add
add
add
jns
sarb
cld
repz
push
repz
subl
mov
sldt
add
add
xchg
jns
dec
xchg
adc
cmpsb
subb
pop
repnz
inc
ret
cmp
xchg
mov
movl
mov
add
jmp
push
das
enter
add
push
xchg
es
cmp
sbb
add
add
xchg
mov
add
dec
add
in
sbb
mov
fildl
pushf
repz
mov
mov
push
lods
enter
mov
addr16
inc
push
pop
pop
pop
adc
into
or
mov
add
mov
and
mov
mov
push
scas
icebp
inc
dec
in
mov
xor
gs
ret
jb
aam
mov
add
addr16
mov
add
add
dec
push
push
xor
xor
xor
add
mov
dec
xchg
gs
notl
adc
push
inc
push
cmc
sbb
or
push
loopne
js
testl
pmaxub
add
jnp
xor
mov
pop
ret
fwait
inc
add
mov
in
rolb
mov
dec
add
ja
xchg
dec
add
add
xchg
and
out
pop
popf
lods
aas
addr16
xchg
push
pushf
adc
mov
sub
add
cmp
cmp
or
mov
fadd
call
shrb
xor
add
or
and
sub
add
push
xchg
xchg
aam
add
add
cmpsb
push
push
je
dec
mov
mov
imul
lahf
mov
in
jo
int3
adc
xchg
add
add
mov
push
inc
cmp
adc
cmpsl
sub
int3
shlb
add
push
repz
xor
lods
popf
sub
add
add
dec
jne
xchg
sbb
ja
jb
jmp
not
dec
test
add
add
mov
test
add
cltd
mov
xchg
cmp
mov
ret
fisttpl
xchg
mov
jns
jne
fwait
xlat
ret
mov
add
add
movsl
pop
test
add
in
les
lds
cmp
add
mov
mov
mov
rcrl
nop
jg
es
sub
add
add
iret
and
mov
mov
dec
add
or
mov
popf
inc
cwtl
add
or
mov
rcrb
scas
imul
and
xlat
sbb
push
jno
fldt
push
push
fstpl
sbb
add
pushf
out
pop
sbb
mov
mov
sub
mov
add
add
ret
outsb
repz
sbb
xchg
sbb
mov
push
or
repz
mov
popf
mov
inc
add
add
in
pop
aaa
jmp
lods
adc
aaa
xchg
aam
movsb
jb
add
jae
mov
lods
fdivrs
aas
push
xchg
test
in
push
jp
mov
outsb
pop
xor
add
add
lcall
push
dec
testb
pop
std
and
inc
pop
iret
dec
mov
pop
push
add
add
add
cmc
and
sti
cmp
out
or
add
lods
mov
popa
ljmp
add
fwait
loopne
call
aas
xor
outsb
imul
add
add
xchg
repnz
stc
insb
add
imul
mov
sarl
sbb
inc
pop
lret
mov
add
pop
mov
xor
jnp
xchg
jns
dec
rclb
mov
add
movsl
push
addl
pop
dec
add
hlt
push
mov
add
fwait
lock
insb
add
jmp
leave
out
lods
pop
lret
mov
out
clc
cld
push
mov
xor
testb
shr
movsb
in
outsl
enter
ss
adc
sbb
outsb
popa
test
add
add
test
push
xchg
inc
outsb
loope
adc
fwait
add
lret
mov
scas
xchg
push
pop
cltd
leave
test
push
lock
jo
aaa
sbb
adc
shrb
add
add
add
in
sub
out
mov
cmp
jp
popf
or
pop
out
pushf
pusha
add
cmp
je
aas
inc
lret
add
sbb
lret
mov
add
add
dec
ds
pop
inc
add
test
ficoms
push
leave
popf
dec
les
xchg
out
in
push
push
add
mov
std
sub
aas
mov
cmc
adc
aas
mov
xor
pop
jae
push
inc
add
mov
mov
push
ljmp
add
add
jne
pop
mov
pushf
lds
add
push
cld
dec
inc
ret
mov
mov
mov
test
jecxz
ja
nop
or
add
add
outsb
sbb
add
rorl
add
mov
sbb
or
bnd
rolb
add
add
and
outsb
mov
sbb
add
sbb
stc
lret
je
les
movb
add
add
add
mov
dec
add
add
adc
lahf
loope
inc
add
add
xchg
loop
xlat
sti
mov
add
pop
lahf
push
shrb
and
je
xchg
daa
adc
add
orb
push
daa
cmp
ja
lcall
fwait
out
push
inc
nop
add
add
sub
mov
adc
mov
adc
sub
pop
pusha
add
in
sub
add
imul
mov
add
sub
mov
inc
add
insl
cmp
add
add
xor
inc
mov
add
in
cltd
dec
add
add
clc
cmp
jns
add
lret
rep
add
mov
xchg
cmpl
push
insb
add
scas
adc
jne
or
adc
pushf
cwtl
mov
add
das
and
mov
add
add
add
int
fwait
pop
sbb
ja
adc
push
mov
test
loope
daa
in
das
stos
and
mov
jmp
cmpsb
ds
jbe
push
rorl
xlat
push
je
xchg
pop
shl
sbb
push
iret
shll
js
dec
add
add
repz
mov
jg
jl
mov
mov
je
add
and
gs
idiv
xchg
mov
xor
in
mov
push
aam
arpl
fisttps
add
add
cli
push
insl
ja
mov
mov
mov
jne
test
mov
sahf
adcb
pop
add
movsb
push
popa
adc
fwait
or
sbb
out
fistpll
add
add
mov
insb
add
fucomip
add
pop
js
pusha
add
add
pop
mov
cmp
inc
mov
nop
sub
push
xchg
sub
cld
jb
aam
arpl
push
add
add
add
dec
roll
add
add
mov
add
add
lahf
pop
mov
std
fisttpl
add
add
and
mov
inc
movsl
push
push
nop
adc
sub
cld
mov
xchg
repnz
repz
fisttps
sbb
add
add
sub
add
mov
test
cmp
icebp
mov
in
add
add
jge
sbb
mov
add
add
push
movsb
stos
das
mov
add
icebp
mov
add
pop
push
out
mov
sbb
xchg
add
shlb
mov
cwtl
negl
pop
ficoml
in
scas
mov
ja
jae
pop
xchg
cs
dec
xchg
lret
add
add
mov
xor
sti
lahf
pop
mov
add
add
add
add
ds
sbb
ror
ja
je
and
add
add
sarl
lods
xchg
add
xlat
daa
lods
push
mov
fisttps
add
mov
xchg
add
add
fistpl
outsl
and
adc
mov
fimuls
into
mov
inc
add
add
mov
and
push
xor
pop
xchg
xchg
or
add
add
out
pop
cwtl
addl
jbe
add
add
add
pop
das
add
jns
sub
mov
or
add
add
push
inc
rcll
add
add
and
add
add
add
scas
rorb
fwait
and
add
add
shrb
jecxz
das
pop
xchg
mov
adc
test
sbb
cwtl
loope
je
or
add
add
sbb
es
and
add
add
std
push
loop
pop
mov
sub
push
push
mov
lea
mov
add
outsl
aad
leave
enter
dec
push
fcoms
pop
dec
clc
test
bound
mov
stc
pop
push
xchg
loop
les
iret
out
pop
fwait
in
shl
add
mov
add
add
add
or
dec
add
pushf
sub
aas
roll
sub
add
add
add
add
add
subb
mov
add
add
or
hlt
ss
inc
fmulp
out
pop
mov
sub
jbe
fisubrs
and
ret
icebp
mov
jnp
mov
andb
and
das
sahf
mov
mov
fwait
dec
jg
sub
sbb
in
mov
outsb
sarb
dec
push
in
sbb
xchg
sbb
movsl
cmp
adc
jae
xor
push
popf
mov
sub
mov
xchg
add
fistpl
mov
jl
add
add
aad
lds
adc
and
mov
and
add
mov
lcall
leave
mov
dec
iret
push
je
out
add
add
add
mov
add
lcall
add
adc
repz
add
daa
xlat
in
testl
ss
test
adc
cmpsl
adc
lret
lock
int
decl
add
mov
in
cmp
fisubrl
sub
add
add
es
pusha
add
add
inc
jns
jmp
mov
add
mov
xor
div
jg
mov
movsb
dec
movsl
cmp
ret
adcl
mov
dec
aam
shlb
add
mov
incl
fsubl
imul
cs
in
js
cmpsl
adc
arpl
dec
mov
hlt
dec
add
add
test
mov
push
or
add
js
and
mov
add
add
ret
scas
fidivrs
xor
gs
sbb
subb
shlb
add
inc
cmp
cmp
mov
jbe
sub
mov
sbb
ror
mov
pop
add
add
add
add
jmp
testl
push
mov
aaa
xorl
sbb
je
add
add
xor
mov
aad
adc
adc
mov
add
mov
mov
lcall
add
add
int3
mov
ljmp
jnp
and
mov
push
rolb
mov
rorl
inc
aam
fldcw
cmc
insb
add
inc
test
sbb
mov
push
fadd
push
mov
mov
sbb
loop
mov
or
repnz
add
adc
sbb
hlt
sbb
cmp
dec
orb
popa
adc
arpl
cmp
add
add
add
fstl
add
add
mov
add
add
or
pop
outsl
add
mov
add
add
out
ds
aaa
pop
push
cwtl
enter
mov
push
push
cmp
mov
fcomi
pop
insb
add
add
rcll
inc
add
add
ljmp
mov
sub
add
add
xor
cmpsl
int
rcr
popa
mov
mov
cmp
push
or
add
add
push
cwtl
loopne
sbb
stc
and
bound
pop
xor
mov
out
mov
imul
stos
xor
loop
pushf
fsubrs
ss
adc
and
das
stc
ljmp
cmpsl
clc
inc
cmp
mov
mov
add
add
in
sub
push
mov
loopne
mov
add
and
xchg
mov
mov
dec
mov
add
or
fcmovnbe
inc
or
add
add
mov
add
pop
xor
fstps
ja
dec
push
inc
in
mov
lds
fdivr
pushf
stos
sbb
jnp
in
jle
loopne
add
sahf
stos
inc
inc
je
sbb
std
add
add
ja
add
add
push
mov
add
cwtl
test
aas
insl
adc
das
out
push
out
inc
cmp
test
hlt
push
adcl
mov
rcrb
add
add
testl
adc
aas
test
adc
pop
mov
cltd
aad
fldt
push
stc
xchg
dec
add
add
sub
jge
lret
pop
into
dec
test
popa
iret
pop
jb
out
xlat
repnz
add
add
add
push
test
xorb
cmpw
dec
push
push
pop
lcall
add
out
scas
mov
push
dec
push
test
jmp
mov
sbb
testl
adc
sbb
hlt
cmp
jbe
movsb
mov
add
add
js
dec
add
jbe
les
pop
popf
shll
add
cmp
mov
in
fisubrl
dec
jne
aad
mov
mov
in
inc
aad
sar
repnz
adc
inc
add
and
insl
cmp
push
mov
pop
push
test
add
into
pop
adc
js
leave
sbb
push
orl
lock
mov
fcoms
mov
xchg
sti
repnz
bound
shrb
add
lods
pop
mov
mov
add
fwait
xchg
mov
daa
cmc
add
add
add
mov
push
insl
test
add
add
mov
add
int
add
add
fistpl
dec
into
xor
add
and
add
xchg
ja
outsl
push
push
aas
ret
lds
mov
lods
cs
add
add
mov
push
fistpll
shrb
outsb
add
add
add
add
dec
sub
xchg
add
mov
add
add
push
jns
sahf
stc
and
mov
in
mov
daa
mov
les
inc
push
int3
jl
inc
pop
and
pop
ret
into
es
mov
mov
lahf
or
mov
aam
loop
mov
aaa
mov
cmc
mov
pop
es
in
cmpsb
inc
add
add
lea
pop
jge
out
dec
sub
and
popf
add
add
add
call
rorl
call
add
add
and
lret
cmp
leave
inc
add
jns
enter
inc
xchg
sub
add
add
es
incl
hlt
ja
daa
adc
out
xchg
mov
add
add
sub
fstl
add
or
dec
or
cs
pop
cmp
cld
push
lcall
mov
pop
or
jae
add
add
sub
test
repnz
mov
iret
mov
mov
sub
mov
outsb
neg
adc
pop
lcall
adc
mov
dec
sub
mov
stos
adc
fmul
mov
out
popa
mov
pushf
popa
fcmovbe
xchg
es
lds
xor
or
mov
testl
into
xor
adc
test
xor
add
add
in
push
or
fcmove
xchg
in
ret
push
lods
int3
mov
mov
js
pop
arpl
or
sub
and
pop
aam
leave
jmp
mov
push
adc
loopne
push
lcall
ficompl
mov
sbb
fcoms
cwtl
cmpb
scas
mov
jbe
pop
and
add
add
or
add
add
movsb
popf
cmp
or
xchg
daa
pop
fadd
cltd
push
shrl
mov
or
inc
or
push
mov
push
cmp
fldlg2
rorb
add
dec
sub
xorb
subb
add
inc
daa
clc
push
jae
insb
add
push
loope
stc
std
mov
fistps
cmp
cld
aad
xchg
leave
add
mov
or
xchg
sahf
cmpsb
xchg
mov
or
aad
addb
add
repnz
lock
jb
mov
aam
shll
loop
xchg
insl
fstpl
jno,pn
mov
push
js
cmpsb
pop
lods
js
loop
jecxz
inc
add
add
inc
cmp
pop
jge
sbbl
and
xor
jo
lods
mulb
mov
mov
flds
add
add
add
ficoml
add
add
add
aas
dec
add
push
out
jbe
sub
mov
in
das
inc
sbb
inc
mov
push
std
pop
leave
mov
xor
fildll
int3
or
add
add
sbb
push
es
push
xor
add
add
lret
repz
loop
rcll
add
mov
sub
jb
repz
in
mov
std
out
push
mov
arpl
mov
add
add
nop
mov
sub
mov
mov
xchg
add
mov
pop
imul
add
mov
jp
clc
movsl
ficoml
fmull
lds
mov
jns
cmp
add
int
shlb
dec
lret
add
add
add
add
jne
iret
jp
lea
out
lods
sub
add
add
jns
or
add
cmp
inc
lcall
das
fsub
pop
dec
dec
cld
std
popa
iret
test
dec
add
add
add
mov
fcoml
not
stos
daa
out
cmp
stos
lcall
add
add
push
out
sub
cmpsb
cmp
imul
add
mov
pop
add
mov
or
mov
stos
or
add
add
sub
add
push
fwait
popf
call
repz
mov
add
add
add
movsl
inc
add
push
aaa
xor
or
pop
stos
scas
add
mov
bound
add
add
xchg
ljmp
add
ss
push
push
mov
scas
mov
pop
test
sub
xlat
int
mov
mov
negb
add
mov
ljmp
xlat
test
or
jb
jnp
pop
aam
mov
fsubrl
inc
jle
outsl
mov
lock
xor
pushf
das
test
mov
add
adc
insl
pop
sub
add
add
es
mov
mov
hlt
xlat
adc
push
fldt
add
mov
pusha
add
add
shrb
push
in
add
and
sub
in
or
mov
in
jle
xchg
pop
fadd
mov
sbbl
pop
out
sbb
jae
mov
xor
shlb
ret
xor
filds
sub
mov
jne
insl
push
pop
ficoms
adc
rcl
pop
xor
cmp
xchg
mov
xchg
xchg
mov
add
add
int
mov
rcrl
push
es
es
inc
jmp
add
add
es
cwtl
sbb
add
push
dec
xor
add
mov
mov
add
mov
ret
pop
data16
sbb
sar
sub
push
imulb
sub
cli
pop
mov
movsl
insb
add
add
dec
add
cmp
in
or
inc
shrb
xor
inc
add
pop
adc
idivb
fsub
inc
stc
and
ds
mov
ljmp
push
xor
add
add
jl
pop
and
test
push
stc
bound
mov
sbb
add
add
add
add
or
dec
add
dec
mov
out
mov
add
mov
or
aas
int3
sub
add
addr16
mov
push
out
les
mov
gs
add
ret
in
add
mov
ret
cli
dec
push
cmp
in
loope
add
pop
mov
filds
loope
sbb
mov
adc
jbe
push
pop
xor
aam
rol
xchg
es
in
leave
mov
push
inc
popl
and
loope
int3
and
adc
dec
dec
loop
inc
insl
push
mov
add
xchg
add
jmp
push
add
test
cld
imul
aas
loopne
fdivrl
cwtl
xchg
addl
in
iret
iret
and
add
add
mov
daa
inc
pop
jns
cmp
leave
or
mov
add
push
sti
fwait
pop
aam
adc
xor
push
or
mov
or
pop
or
mov
outsb
xchg
incb
xchg
add
jmp
mov
sbb
repz
pop
or
and
mov
add
fidivl
push
xchg
lret
jle
add
xchg
sub
jmp
fstpl
ret
cltd
mov
clc
cltd
pop
push
jne
sub
mov
dec
movsb
bound
dec
sbb
jns
cmp
add
add
mov
addb
rorl
add
add
add
jb
adcb
roll
test
mov
inc
add
add
das
dec
and
mov
dec
xchg
out
int3
jle
lret
sbb
push
into
xchg
add
inc
mov
dec
add
add
movsl
sbb
fwait
jne
add
repnz
mov
add
mov
sarl
fistps
int3
rcll
mov
orb
add
lret
xchg
cmp
sahf
fsub
enter
and
add
add
test
push
mov
pop
adc
xor
jnp
xchg
or
mov
rcl
daa
fimull
add
aam
scas
push
hlt
push
cmp
mov
push
jl
inc
jno
and
mov
shlb
xchg
dec
ds
jecxz
add
add
add
sbb
add
mov
add
mov
xchg
stos
insl
insl
jb
and
add
add
daa
or
xlat
incb
cs
daa
repnz
jl
outsb
test
xchg
or
sbb
cmpsb
imul
fists
inc
add
add
mov
call
xchg
cmp
pop
dec
lds
push
scas
pusha
add
stc
pop
adc
mov
dec
push
lret
ret
cmp
inc
mov
popa
movsl
loope
mov
jmp
add
test
lock
add
add
add
in
and
mov
mov
mov
test
lds
mov
push
leave
fstpl
jno
add
dec
fidivrl
pop
call
add
loope
je
ljmp
repz
test
mov
add
and
add
add
add
add
inc
in
push
scas
test
mov
test
add
test
jae
cmp
icebp
out
fnstenv
add
add
sbb
popa
add
add
adc
stc
pop
into
xchg
push
pop
jns
pusha
add
add
fimull
add
imul
inc
popa
adc
push
cmpsl
arpl
imul
mov
je
dec
mov
mov
dec
add
add
jge
xor
jno
or
add
add
xchg
push
les
push
out
adc
out
lea
mov
insb
add
add
inc
push
movsb
pop
inc
pop
add
sub
add
add
mov
mov
and
jl
cmpsb
push
lret
out
or
dec
pop
jg
mov
cmpsb
mov
aas
push
stos
test
aaa
pop
scas
gs
leave
sbb
jno
cld
jae
outsl
sub
mov
push
jb
jl
and
cs
xor
pop
addb
and
add
add
mov
idivb
stos
fmulp
lods
int3
mov
clc
xchg
popf
and
leave
arpl
push
imul
call
push
add
add
inc
add
nop
or
or
out
add
add
add
test
or
aas
push
adc
push
int3
fcompl
in
test
es
icebp
mov
out
loopne
xorl
or
jge
ljmp
pop
jns
movzwl
pop
lods
mov
fldl
mov
xor
mov
repnz
cli
idivl
cmp
mov
leave
xchg
out
cmp
add
inc
mov
add
add
aaa
mov
sbb
lret
pop
out
out
xor
add
xchg
jb
adc
fcomp
mov
xor
into
iret
in
negl
inc
movsb
mov
stos
pop
jmp
add
movq
add
inc
out
and
add
add
add
add
add
xchg
mov
mov
lret
mov
or
mov
loop
add
add
push
js
js
cli
sub
sub
mov
and
mov
jp
mov
sbb
mov
dec
add
add
push
sub
repnz
jae
lcall
add
add
icebp
cmp
call
push
ljmp
jbe
pushf
scas
dec
add
icebp
scas
rorb
push
lods
out
mov
add
add
test
es
int3
stos
out
push
int3
lcall
add
aad
xchg
adc
aam
dec
sbb
add
add
leave
inc
mov
add
add
add
cmp
sarb
adc
add
add
xchg
or
add
add
add
add
push
pop
pop
add
adc
rorb
fsub
sub
lods
jp
negl
xchg
stos
and
mov
mov
xor
xchg
cld
jmp
mov
fwait
cmp
lds
push
in
add
out
outsb
xchg
das
scas
lcall
ljmp
add
sbb
add
or
mov
mov
xchg
push
xor
sub
add
add
push
xor
sarl
adc
add
mov
adc
or
mov
pop
xor
ja
mov
mov
adc
lcall
in
repz
and
aas
aam
das
call
lods
mov
insl
fsts
xchg
sahf
iret
roll
mov
rcrb
aam
roll
out
outsl
imull
mov
adc
scas
jecxz
or
into
pop
jbe
popa
sti
xchg
sbbl
xlat
repz
add
movsb
mov
add
add
push
enter
add
add
sbb
add
das
fiadds
add
mov
add
add
inc
rcrl
jae
aad
jbe
cmp
add
mov
loop
orl
push
pop
pop
test
jecxz
add
add
and
add
add
cmpsl
mov
movsb
or
add
add
sub
xlat
jmp
inc
in
mov
add
add
shr
cwtl
pusha
add
add
mov
jb
dec
or
jnp
stos
push
adc
push
test
add
add
xlat
sahf
or
xchg
stc
xor
test
mov
sbb
mov
mov
mov
ret
xlat
mov
addr16
sbb
jecxz
and
add
add
cmpsl
das
xchg
mov
lcall
pop
jle
push
outsl
lock
int
outsb
push
xor
add
add
pop
pop
sub
mov
js
int
add
mov
imul
add
push
jecxz
xchg
aaa
inc
and
leave
jbe
mov
and
fwait
sbb
jnp
fidivl
ja
scas
insb
add
sbb
fwait
inc
outsl
and
add
add
inc
dec
pop
push
xchg
inc
pop
hlt
cmpl
leave
xor
sbb
stos
push
sub
lcall
add
mov
ja
das
push
xchg
push
loope
xor
adc
les
clc
push
and
jo
movsl
cmpsb
mov
test
add
gs
ja
repnz
dec
clc
add
mov
jge
insl
roll
mov
in
sub
cs
add
add
xlat
pushf
aaa
push
popa
push
pop
enter
push
fmull
lret
xorl
push
cs
xchg
sti
lret
cmpsl
mov
cmpsl
sbb
mov
adc
xchg
mov
aaa
cld
ficomps
cld
int
xchg
xchg
cmp
divl
xchg
imul
and
add
add
sbb
mov
add
gs
add
mov
dec
jle
xchg
and
xor
mov
ror
add
fisubs
add
mov
sbb
add
lret
jmp
cmp
sbb
add
add
cmp
push
bound
add
push
out
sbb
dec
add
add
sbbb
fnsave
in
mov
mov
out
into
jl
mov
sbb
mov
xchg
loopne
sbb
add
sub
testb
mov
pushf
shll
pusha
add
hlt
outsl
pop
sbb
fstps
and
add
add
mov
push
jns
cmp
add
add
insb
add
add
mov
pop
add
add
add
pop
jge
aam
xchg
test
std
mov
add
cwtl
push
fsubs
add
or
add
add
sub
int3
push
jno
jne
rorb
ss
ljmp
xor
cmc
pop
addr16
rcrb
cmp
sbb
roll
push
and
dec
stos
add
and
add
add
add
add
pop
stos
xor
fidivl
add
add
inc
mov
loopne
or
sar
add
add
cmp
fdivp
arpl
dec
ffreep
insl
in
call
fists
push
shlb
add
lods
jae
sbb
bound
cmpsl
mov
mov
mov
ds
add
loope
jp
xchg
test
push
xor
xchg
jmp
movsb
adcl
les
out
add
add
mov
ss
lret
cmpsb
or
add
jbe
addr16
in
movsl
push
mov
sbb
adc
test
call
cltd
dec
pop
out
stc
in
ja
int3
push
xlat
cld
scas
inc
jle
sub
pop
std
imul
arpl
into
inc
or
repz
out
stos
stos
pop
fcmovne
push
mov
add
jecxz
test
insb
add
add
add
jle
cmp
add
add
add
outsl
and
add
add
add
jge
out
cmp
add
add
add
ret
loope
add
mov
fldt
add
int3
test
in
mov
dec
add
add
dec
or
push
xchg
add
add
popf
out
stc
stc
xor
adc
xchg
stc
jb
in
and
add
add
stos
scas
mov
mov
add
adc
pop
ficoml
add
mov
cmp
add
fwait
imul
pusha
add
add
je
sub
add
add
sbb
pop
sahf
rol
test
xor
arpl
rcrl
mov
imul
pop
fiaddl
mov
mov
or
movsb
loope
cld
adc
insb
add
add
mov
jle
aaa
imul
das
and
add
add
mov
lret
loope
in
shrb
mov
cmp
xorb
cmp
add
and
add
add
fistpll
cmp
cs
or
push
stos
fdiv
mov
lea
add
add
mov
push
mov
jp
in
push
daa
stos
xor
cmc
cmp
mov
minps
std
cli
je
lods
aam
stos
lods
mov
enter
es
sub
mov
sti
lock
jp
pop
push
jp
repz
mov
mov
mov
mov
cmp
dec
xor
pop
aam
add
xor
sbb
push
cltd
xor
mov
cld
testb
add
xchg
std
cmp
stc
xlat
loope
negl
pop
xchg
pop
jmp
cltd
aas
daa
popa
cwtl
push
cmpsb
call
ret
enter
leave
push
cmp
int3
insb
add
add
addl
dec
orb
insl
clc
cmp
gs
mov
insl
xor
xor
ja
or
sbbl
scas
das
iret
in
jae
mov
mov
dec
jo
je
push
adc
mov
cmp
iret
add
jno
rorl
subl
push
js
call
sub
add
add
les
add
out
add
add
out
jge
in
dec
test
dec
sahf
cmpb
cld
mov
movsb
mov
mov
jns
inc
xor
mov
and
mov
into
push
xchg
and
jne
push
ljmp
add
movsb
fstps
jge
xor
add
jl
adc
addr16
hlt
mov
jae
jae
rcpps
pop
ret
mov
popa
add
divl
add
or
add
add
fnstsw
add
add
pop
aas
aad
mov
loope
outsb
add
mov
insb
add
add
add
out
lods
mov
add
jo
inc
add
add
xchg
and
mov
add
add
add
lret
xchg
inc
stc
lcall
lret
inc
popa
cwtl
mov
imulb
aaa
nop
sub
mov
add
add
jecxz
sahf
out
jecxz
inc
les
add
mov
and
mov
push
inc
and
add
add
dec
xor
cmp
test
push
stos
popf
imul
movsl
and
xchg
adc
push
xlat
inc
sub
bound
dec
or
mov
pop
sbb
and
mov
add
add
add
dec
stc
push
inc
add
add
fdivrs
gs
or
add
add
outsb
push
jmp
add
add
fwait
hlt
aaa
adc
xchg
fdivs
sbb
pop
adc
add
pop
pop
adc
cmp
repnz
add
cld
push
lods
jno
and
mov
jae
out
mov
jmp
ss
sbb
mov
add
mov
into
js
dec
fwait
mov
add
decl
and
scas
fwait
sahf
push
sub
divl
addr16
test
and
add
sbb
sbb
sub
data16
add
add
xchg
lret
jmp
add
add
add
andb
add
lcall
cmp
inc
bnd
imul
add
icebp
xchg
cli
mov
adc
int
sahf
and
pop
and
add
add
in
sub
add
vhaddps
out
push
pop
jo
aaa
shl
pop
aam
leave
cmp
jle
sbb
xor
in
sub
mov
pop
fcmovu
push
test
aas
xor
adc
mov
xchg
fisubrl
add
add
add
fsubs
rorb
add
mov
add
add
mov
pop
in
jg
jne
jb
lds
pop
out
cmp
and
add
add
jae
fnclex
jmp
mov
popa
loop
into
jae
jne
jnp
gs
push
push
fcmovbe
adc
add
movsl
push
outsb
add
es
push
jo
div
test
add
add
rcl
sarb
sbb
or
mov
cli
xchg
daa
mov
pop
add
ljmp
xor
add
add
add
push
jbe
mov
outsl
mov
mov
in
add
add
add
lods
in
out
mov
add
add
pop
jmp
daa
xlat
push
aaa
pop
dec
dec
loope
movsl
nop
mov
cmc
in
aas
dec
add
add
sbb
das
xor
push
jns
or
mov
jecxz
mov
add
add
sbbb
ja
clc
and
add
add
fistl
dec
adc
das
jg
fisttpll
sub
sarl
add
add
imul
add
inc
add
add
mov
inc
pop
cmp
add
pop
or
add
add
add
nop
jmp
dec
add
cwtl
cmpsb
pop
push
cmpsb
dec
inc
cmp
push
mull
cmp
push
and
add
add
movsb
imul
add
scas
aad
push
or
add
add
hlt
cmp
mov
add
leave
xchg
push
dec
mov
push
jle
add
mov
inc
push
rcll
in
in
sub
add
mov
add
add
loopne
les
add
add
jno
repnz
inc
add
add
cmp
cltd
fisubs
dec
and
test
pop
sub
ficomps
in
pop
and
mov
test
loop
pop
sbb
push
test
ret
or
mov
mov
popa
sub
mov
inc
aaa
jl
sbb
add
sbb
cmp
add
add
inc
jmp
imulb
xchg
pop
hlt
jbe
rep
movsl
dec
mov
mov
dec
sbb
sti
test
push
or
mov
add
mov
or
fnsave
fcomps
sbb
enter
pop
aad
dec
mov
add
push
cld
inc
jb
sbb
fldcw
or
cmc
jno
or
mov
rclb
vpsllq
sbb
pop
js
push
xor
outsb
lret
pop
js
fwait
ret
and
das
mov
rcrb
lret
xor
push
sarl
stos
add
add
add
jns
add
mov
cmp
mov
es
pop
xchg
mov
jle
ja
jmp
test
add
add
adc
add
add
dec
mov
mov
jbe
mov
out
push
adc
sbb
push
shrb
add
or
jp
add
dec
push
cmp
lcall
iret
into
out
mov
data16
push
sub
add
mov
mov
inc
add
jp
jb
sbb
lods
pop
and
add
add
xchg
and
es
jp
add
add
jmp
js
clc
lahf
jbe
mov
dec
pop
pop
rcrb
xor
add
mov
jecxz
or
adc
adc
jo
pop
jns
fisttps
push
mov
mov
adc
cmp
adc
mov
add
add
cld
lret
in
clc
rorl
fdivrl
xchg
jp
sbb
mov
fisubrs
mov
sbb
or
lods
cmp
mov
pusha
add
add
sbbb
test
int
js
xchg
lcall
inc
add
bnd
push
lods
inc
xchg
jne
ret
adcb
loop
add
add
add
add
add
cmp
lret
pop
or
xchg
jae
cmovns
xorl
add
leave
lahf
lods
cmp
mov
add
xchg
loope
xchg
das
lods
ret
and
scas
push
jbe
add
add
daa
loopne
cmp
push
xorb
cmp
inc
add
sti
mov
and
pop
cli
pop
push
add
mov
jp
add
add
add
mov
add
jge
push
popa
fwait
pop
outsb
enter
xchg
outsl
jo
pop
mov
adc
add
inc
mov
add
add
out
push
mov
xor
std
out
lcall
test
stos
icebp
or
mov
sub
jmp
adc
mov
mov
cli
lahf
adc
mov
xchg
add
lret
add
popa
mov
pop
movsb
adcl
add
insb
add
jnp
movsb
mov
add
mov
fstl
cld
test
stos
insl
imul
pop
aaa
xor
pop
mov
loop
aaa
ror
sub
cmp
into
mov
lods
xor
add
ret
or
repnz
shl
adc
gs
and
mov
mov
mov
adc
add
add
add
adc
mov
sub
mov
mov
jle
add
pop
jo
add
add
call
clc
adc
push
xor
add
incl
loopne
in
ffree
sbb
mov
sarl
clc
ja
mov
sbb
movsb
mov
iret
jecxz
push
pop
gs
add
add
inc
mov
push
insb
add
add
hlt
and
jae
or
mov
sub
or
mov
jle
mov
add
dec
scas
out
fcompl
mov
outsl
push
dec
mov
adc
sbb
add
aad
jp
jge
lret
add
add
test
mov
ljmp
mov
test
ljmp
leave
adc
rclb
lock
cwtl
lods
jb
add
xorl
mov
xchg
cli
pop
outsl
fnsave
enter
cwtl
push
jge
das
cltd
adc
outsb
sbb
jns
bound
add
mov
mov
mov
add
dec
add
xchg
or
xor
push
mov
stos
daa
aad
cwtl
mov
clc
add
and
int3
inc
add
inc
andl
or
sahf
mov
jae
adc
or
add
ret
stos
enter
aaa
pop
xchg
cwtd
cmp
pop
out
mov
jmp
push
roll
add
add
lcall
scas
rcll
sti
inc
out
inc
jo
mov
pop
iret
ret
lahf
andl
shll
jns
xchg
sbb
jnp
rorl
add
lds
test
inc
xor
repnz
add
mov
or
add
add
jmp
mov
sub
mov
addb
add
or
add
add
dec
lahf
cmp
mov
lods
dec
call
add
add
xchg
dec
jb
cmp
add
add
movsb
jne
cmpsb
add
add
xchg
inc
fcmovnu
scas
jl
push
testl
or
xchg
loopne
add
adc
add
add
xlat
xchg
ret
sahf
mov
push
lock
fimuls
add
add
arpl
jle
mov
inc
add
sti
clc
sbb
sub
add
add
sbb
int
fidivl
jmp
int3
ret
sahf
int3
fcoml
inc
lods
xor
sub
add
add
or
mov
fimuls
outsl
cmp
mov
jl
test
mov
outsb
ret
push
loopne
add
add
mov
loope
out
inc
add
xchg
cmp
add
add
pop
cmp
fmull
lret
je
mov
adc
test
xor
sub
inc
lods
jl
add
add
lret
fwait
repz
jne
jl
fmuls
outsb
dec
and
fiaddl
rorb
xchg
push
call
outsb
xchg
imul
mov
repnz
call
sub
mov
aam
xchg
add
push
sub
cwtl
dec
jecxz
hlt
jmp
add
add
cwtl
xchg
jne
dec
cmp
xchg
dec
xchg
add
mov
out
std
jp
xlat
push
lods
mov
add
or
xchg
fisubl
test
jmp
shrl
fdivl
sbb
jb
sbb
push
or
sbb
mov
pushf
fidivrs
cli
loop
loopne
out
jno
dec
and
mov
cmpsl
loopne
xor
add
add
ds
adc
sarl
cmp
add
adcl
sti
dec
push
jmp
add
dec
push
xor
jg
mov
xchg
add
add
cwtl
ljmp
and
test
push
call
leave
inc
adc
dec
add
add
inc
lods
shrb
pop
or
sub
ss
call
in
xchg
xor
or
xchg
or
test
and
mov
mov
lods
adc
push
mov
lret
cmp
xchg
or
add
add
movb
xchg
dec
xor
mov
push
mov
jp
mov
imul
add
xchg
cmpsb
ljmp
dec
out
cmp
jl
cmp
rcrb
cltd
mov
popf
and
mov
push
xor
add
add
lahf
cld
mov
add
push
adc
loop
icebp
inc
and
scas
test
andb
lahf
cs
movsl
cmpsb
add
mov
add
add
ljmp
fwait
stc
icebp
cmc
xchg
adc
sbb
aaa
cmc
sbb
sbb
repnz
add
mov
cld
xchg
or
testb
add
cmc
pop
filds
cs
push
push
and
push
clc
lea
pop
loop
cmp
movsb
cmpsl
mov
pop
loope
and
mov
loopne
movsb
or
add
add
xchg
jecxz
dec
js
mov
pop
in
cltd
gs
in
add
add
add
add
add
xchg
mov
xor
nop
cmp
and
or
scas
sbb
out
cmp
push
mov
cmp
push
push
cmc
pop
outsb
mov
ja
add
add
add
bound
movsb
shl
push
loopne
add
add
repnz
imul
adc
aam
jno
insl
sbb
sub
dec
add
out
and
add
add
jo
jg
adc
dec
add
add
leave
ffree
pop
jg
loope
cmc
jmp
adc
loope
bound
add
add
lods
and
rorl
jle
or
pusha
add
and
jne
div
popf
jge
xchg
rorl
xor
dec
add
add
test
test
pop
idivl
fistpl
and
mov
adc
lock
leave
mov
add
mov
fsubrs
add
or
add
add
mov
mov
adcb
dec
ljmp
add
decb
sbb
and
add
les
pop
mov
xchg
mov
mov
xchg
pop
insb
add
cmp
mov
and
jp
int
bound
add
add
xor
stc
sahf
sti
push
aaa
out
je
std
popf
arpl
out
pop
push
cmp
jo
clc
nop
loop
test
sbbb
add
add
fcompl
xchg
stos
push
pop
and
mov
pop
push
shlw
add
add
scas
fimuls
adc
movsb
cltd
aaa
push
stos
sbb
mov
shl
sub
mov
add
pop
stos
sub
mov
inc
pop
jl
add
add
add
add
xchg
nop
test
or
mov
out
cmp
push
pop
push
push
sti
test
mov
add
add
xor
jecxz
mov
add
dec
jecxz
cmpsl
je
inc
stos
dec
sbb
mov
insb
add
add
popf
mov
jno
inc
fisubrs
stc
repnz
add
rcll
pop
push
stos
push
stos
faddl
mov
or
pop
mov
jmp
pop
mov
add
add
add
aam
lret
and
mov
stc
adc
cwtl
xchg
sub
mov
jg
mov
rcl
pusha
add
add
cmp
mov
incl
push
lcall
clc
push
xchg
mov
fimuls
mov
pushf
jns
sbb
cmp
mov
jbe
cltd
sbb
inc
mov
jp
ss
jecxz
or
or
mov
insl
or
mov
mov
jge
xor
push
aaa
mov
xor
rorl
cmp
add
sbb
sahf
cmp
mov
movsb
push
mov
and
pop
push
xor
fcomi
push
test
movl
pop
add
add
xchg
push
mov
push
in
in
cmp
mov
push
ja
cmp
xchg
xchg
push
pushf
call
mov
xchg
shll
ficompl
cwtl
outsl
jge
and
add
add
pop
scas
add
mov
out
mov
lahf
call
lahf
mov
lahf
push
test
xor
jp
push
dec
test
mov
lock
adc
mov
fbstp
add
cltd
inc
xor
imul
decb
xchg
xchg
and
cmpl
xor
xchg
sbb
push
xlat
stc
cmp
mov
imul
add
stc
push
sti
cmpb
xchg
int
shr
add
stos
stos
xchg
orb
inc
add
add
pop
jae
hlt
adc
add
add
das
xlat
ret
adc
mov
cmp
add
add
mov
add
mov
loope
lods
mov
push
and
add
add
pop
rorb
inc
add
add
mov
xlat
mov
dec
rolb
test
jns
orb
cmp
add
outsb
hlt
cmp
and
add
add
mov
push
icebp
mov
and
int3
xchg
js
sub
mov
lea
mov
dec
fnstcw
lret
ja
test
mov
jb
pop
jb
push
inc
scas
shrl
fidivrs
add
add
jecxz
mov
cmpb
cmp
jb
bound
inc
into
sub
mov
sbb
push
add
sub
jmp
push
inc
shll
xchg
and
mov
jecxz
dec
push
push
sar
pushf
pusha
add
mov
repnz
jnp
jnp
pop
fsts
ljmp
push
sub
mov
rclb
pop
sub
mov
int
out
push
inc
add
xor
mov
sub
jb
dec
out
pop
pop
and
out
rolb
and
add
xor
xchg
mov
dec
pop
xchg
add
mov
rcrl
iret
fsubrp
jl
jne
jp
js
add
add
in
add
lods
adc
push
mov
sbb
add
add
add
stos
or
xchg
rolb
stos
ss
out
mov
jne
aas
cmpsb
enter
or
sub
mov
movsl
jg
xchg
add
lahf
inc
popa
lret
je
xor
popa
cs
popa
ret
jno
stc
insb
add
add
push
mov
push
jbe
sub
add
add
and
and
cwtl
ret
sub
mov
xor
in
add
cld
mov
and
cmp
mov
fsubrl
fdivl
adc
add
lcall
das
pop
or
add
add
add
ret
or
add
add
add
lds
jmp
aas
shrb
add
or
adc
adc
xor
loope
setae
xor
mov
out
std
decl
pusha
add
add
pop
test
add
ror
add
mov
xchg
sub
xchg
pop
insl
sbb
add
add
push
sahf
mov
push
cmp
add
add
sbb
pop
in
daa
push
pop
data16
push
mov
hlt
call
add
lahf
sbb
dec
dec
jns
fstps
cmp
add
add
sbbl
js
lcall
adc
stos
mov
data16
hlt
jmp
xor
inc
mov
xor
imul
aaa
push
add
outsl
mov
add
test
fmulp
or
or
xor
ss
mov
cmp
add
pop
add
add
add
loop
add
add
add
out
cmp
add
add
mov
jbe
lods
push
xor
sub
add
add
mov
add
add
inc
orb
test
mov
test
pop
jg
mov
ret
loop
ret
adc
xchg
add
lea
fcomip
insl
inc
add
shlb
mov
add
and
add
add
or
mov
push
jbe
mov
add
pop
jg
out
inc
add
pop
xor
mov
lods
mov
ret
subb
push
jg
cmp
ja
hlt
pop
mov
inc
adc
lahf
sub
add
add
call
arpl
mov
add
cmp
dec
add
std
dec
inc
int
test
pop
loopne
mov
sarl
cmpsl
mov
pop
or
add
int3
mov
cld
jmp
dec
xchg
cmp
fdivrs
das
push
test
add
jb
push
pop
or
add
adc
or
mov
rcll
fisttps
adc
addb
add
jnp
insb
add
add
xor
cmpb
push
jne
flds
add
add
add
add
daa
icebp
inc
xchg
push
jl
dec
add
add
lock
add
cmp
cmp
sbb
mov
addr16
jbe
dec
incb
push
inc
add
add
add
jnp
imul
repnz
fxch
or
add
add
sub
sbb
std
dec
add
aaa
test
adc
add
lahf
dec
add
add
and
add
add
ss
inc
mov
pop
ffree
cwtl
movd
repnz
lahf
les
shrl
cmc
das
insl
mov
outsl
dec
add
add
fnstsw
test
in
and
test
jg
outsb
test
add
aas
pop
ja
fdivr
clc
or
add
add
sbb
ja
setle
pop
lret
jno
test
xchg
jb
push
clc
pop
int
movsb
lret
les
mov
mov
xchg
in
ljmp
outsl
xchg
or
cmpsb
jbe
out
in
dec
push
cwtl
das
or
test
inc
aaa
mov
out
add
add
adc
adc
outsb
add
pop
lcall
mov
add
add
lret
inc
add
fidivl
mov
xchg
movsb
mov
mov
add
xlat
add
pop
pop
dec
add
popf
je
imul
add
add
shr
xor
pop
mov
push
aaa
pusha
add
add
xor
sbb
mov
pop
test
adc
mov
jo
test
xor
add
add
jmp
popl
add
in
outsl
pop
inc
add
add
mov
or
xor
lods
mov
aad
dec
xor
cld
mov
lock
imul
test
inc
push
aam
add
add
pusha
add
xor
popa
test
add
add
subb
lock
outsb
std
sub
mov
addr16
add
inc
add
add
add
add
add
mov
and
addr16
xlat
fwait
call
loop
clc
lcall
nop
icebp
test
stos
xor
inc
xchg
sub
mov
mov
test
mov
inc
add
add
xchg
fcoml
addl
cmpsb
push
pop
shlb
pop
dec
add
mov
xchg
aaa
test
or
add
add
add
xor
mov
inc
add
jle
dec
sub
and
add
ja
in
mov
out
or
hlt
int
repz
xchg
stos
popf
icebp
xchg
fsubs
cmp
xor
adc
out
lcall
push
movsb
jo
mov
mov
scas
ret
push
test
out
leave
in
adc
mov
cmp
add
add
and
push
stos
adc
add
mov
aaa
and
add
add
inc
std
clc
in
lret
add
add
add
fcoms
das
pop
sub
and
add
add
mov
ljmp
lea
inc
sbb
mov
mov
stos
andb
into
call
dec
popa
cltd
xlat
mov
inc
xor
cmp
in
mov
sbb
add
add
add
shll
add
add
mov
rcrl
add
cmpsl
pusha
add
popa
incl
mov
push
sbb
add
sbb
das
xchg
rcr
sub
call
lods
mov
jns
orl
mov
loope
mov
xchg
in
jmp
pop
pop
lcall
fbstp
cmp
ret
sbb
add
pop
and
mov
mov
sbb
fcompl
pop
in
movsl
out
mov
mov
add
jae
add
daa
xor
in
pop
push
inc
mov
scas
rcr
arpl
sub
into
xchg
add
add
cmp
cs
jns
addr16
aam
push
or
jne
dec
fisttpll
add
and
mov
fistps
add
add
add
inc
add
add
sbb
sbb
fsubs
add
gs
clc
mov
mov
mov
adc
add
mov
push
add
sbb
push
rclb
loope
iret
mov
add
push
xorb
addr16
pusha
add
add
add
add
jle
adc
push
mov
fwait
sbb
aam
sub
lahf
out
pop
mov
add
cmpsl
jnp
pop
add
and
mov
out
pop
xchg
pushf
xor
add
mov
mov
sub
loope
add
add
pop
jp
mov
shll
xor
in
pop
ja
fmul
add
mov
add
add
fwait
test
jbe
sub
scas
scas
mov
mov
mov
adc
pop
jge
adc
dec
hlt
das
mov
push
cmp
test
ljmp
add
add
imul
add
fbld
and
mov
jb
cli
inc
aam
imul
lods
out
xor
push
lea
pusha
add
add
add
add
pop
enter
add
add
adcl
push
jge
cmp
lret
sti
xchg
push
xchg
ja
inc
fdivrs
add
add
shl
and
dec
add
adc
and
popa
into
or
es
repnz
xchg
mov
jnp
and
mov
fmuls
out
sub
add
add
add
or
add
add
add
and
mov
inc
call
add
jb
mov
stc
imul
mov
mov
inc
jne
das
mov
cltd
xchg
sahf
lret
js
push
dec
dec
std
mov
xlat
xorl
popa
and
mov
mov
stos
fwait
gs
add
add
jmp
ljmp
add
addr16
add
add
ror
inc
out
sbb
xor
push
test
push
xchg
mov
adc
or
inc
fdivp
subb
push
xor
add
inc
adc
pop
inc
scas
imul
test
cmp
mov
mov
out
push
scas
xchg
mov
dec
add
pop
aam
cmp
add
jb
imul
add
inc
rcrl
sbb
add
add
fbstp
lds
add
add
ss
mov
pop
push
imul
mov
pop
lods
out
in
ret
les
add
add
add
xchg
inc
jne
arpl
imul
cmp
into
jno
inc
add
add
stc
ja
mov
lock
fcmovbe
add
sbb
mov
xor
add
sbb
mov
add
add
and
add
add
push
pusha
add
or
mov
decl
add
call
push
sar
lea
dec
stos
loop
sbb
fsqrt
ret
pop
bound
mov
add
push
ret
in
or
or
mov
inc
cmp
out
movsl
xchg
xor
in
xor
push
sub
popa
dec
add
add
jno
add
mov
add
add
lret
push
loop
subl
push
mov
xor
add
add
cmpb
mov
pop
xchg
xchg
and
mov
sbb
arpl
cmp
and
add
add
daa
mov
sbb
shl
cmp
push
cmp
mov
sbb
add
sahf
inc
jo
cmp
adc
mov
mov
add
add
or
mov
mov
add
shrl
fcmovnu
mov
sbbl
jle
shr
push
push
pop
je
dec
and
mov
xor
ljmp
scas
push
test
ja
pop
icebp
or
mov
mov
scas
ja
insl
mov
inc
es
xor
setp
fimuls
and
lret
dec
mov
mov
sbb
add
out
subb
add
add
add
jmp
xor
push
xor
pop
rcl
test
add
xor
cmp
pop
inc
adc
imul
adc
js
add
sub
dec
int
push
out
sbb
pop
aad
xchg
pop
fldt
push
sahf
xchg
enter
add
or
test
lods
sti
push
cwtl
lods
cmp
sub
mov
mov
and
arpl
in
push
sub
loopne
mov
xchg
lock
ficomps
je
cmp
mov
add
add
add
mov
jns
sub
add
add
daa
push
out
mov
in
stos
jno
add
add
mov
xor
setge
add
push
jae
push
popa
mov
mov
push
mov
jo
mov
xor
aad
lret
xrelease
mov
cmp
add
mov
mov
xorb
iret
fsubp
cmpsb
lds
push
rcll
sub
mov
add
arpl
insl
hlt
jae
loop
add
xor
fwait
push
pop
loop
lcall
add
mov
pop
ss
mov
lock
orb
add
xchg
cmpsl
rorl
adc
lahf
pop
decl
cmp
jecxz
mov
ss
gs
add
add
xchg
mov
in
dec
and
add
add
adc
dec
add
add
add
jg
sbb
and
mov
int
orl
add
cmp
mov
xchg
jns,pt
mov
daa
sahf
arpl
lret
test
fcomi
insb
add
add
rorb
mov
push
je
jmp
xchg
sbb
push
inc
repz
shrl
js
leave
inc
xchg
imul
inc
add
add
inc
stos
sahf
pop
lods
hlt
in
popa
mul
sbb
or
sub
sbb
mov
add
add
add
add
lods
sti
lcall
fisubrl
clc
lcall
mov
shll
or
add
jmp
sahf
and
inc
inc
add
add
stc
shll
pop
push
ja
jno
cmpsl
push
jge
mov
sahf
mov
add
into
inc
mov
lea
dec
shll
mov
pop
mov
ficoms
adc
cs
adc
mul
inc
sbb
xchg
push
dec
outsl
stos
pop
sbb
sub
ret
or
in
flds
call
idivb
xor
adc
add
data16
aas
mov
add
push
adc
push
lcall
add
inc
dec
jbe,pn
inc
jnp
subl
add
add
jno
mov
ret
sub
mov
inc
add
add
add
or
add
add
add
add
aad
scas
add
mov
mov
add
add
clc
mov
cmp
cmp
push
jno
sub
fstp
and
xor
add
add
add
pop
lods
push
mov
adc
xchg
push
shlb
fsubs
xor
pop
xor
jmp
add
shll
jl
mov
cmpsl
or
xor
xchg
addb
repz
dec
add
add
mov
add
add
add
adc
add
add
and
mov
add
add
add
movd
add
sub
mov
sbb
mov
inc
gs
adc
dec
add
pop
imul
dec
fstpt
iret
or
add
add
add
outsl
sbb
xchg
ret
pop
xor
add
add
add
add
add
add
rol
fimuls
bound
or
mov
mov
call
das
iret
or
add
add
sbb
xchg
fsubrl
mov
ficompl
in
xchg
xchg
adc
bound
dec
push
and
add
icebp
andb
lret
push
or
or
add
add
push
fidivrl
pop
out
cmpsl
jo
mov
pop
or
mov
add
sbb
movsb
push
xchg
mov
cltd
lcall
add
rorb
add
add
add
xchg
cmp
insb
add
add
fsts
cmp
add
add
pop
movsb
repz
or
xchg
movsb
ret
sub
add
add
add
add
fbld
xor
lea
mov
adc
int
sub
mov
add
repnz
and
push
mov
movsb
cli
xchg
in
xchg
cmpsl
test
sub
mov
push
mov
in
xlat
ror
popa
lock
imul
jbe
or
mov
adc
in
rorb
xchg
pop
mov
filds
mov
fbstp
push
std
push
frstor
mov
cwtl
mov
inc
add
add
pop
cwtl
in
lods
inc
adc
popa
adc
ds
add
add
scas
outsb
jb
mov
fsubrs
xchg
outsb
repnz
and
add
add
add
or
ljmp
outsl
inc
stos
xchg
and
stos
push
lcall
add
setae
dec
jp
inc
mov
aas
fwait
pop
orb
add
add
add
push
stos
push
add
mov
adc
fmulp
ds
pop
leave
das
jmp
add
call
in
stc
cltd
fwait
orb
cwtl
into
inc
inc
xor
dec
mov
stos
sarl
mov
mov
pop
scas
dec
movsb
ret
pop
movsb
or
adc
mov
jle
out
xor
jmp
and
add
mov
inc
adc
xor
inc
xchg
lods
jle
cmp
mov
out
xor
movsl
pushf
loopne
jnp
lret
arpl
pusha
add
add
in
stos
aaa
add
add
add
add
sbb
es
jg
xchg
inc
add
add
and
mov
mov
lcall
push
push
inc
or
les
movsl
jmp
sbb
test
roll
mov
jmp
roll
jl
mov
mov
pop
adc
mov
movsl
jmp
cwtl
sbb
mov
subb
fdivp
sub
pushf
pop
movsl
jb
dec
lods
jb
mov
push
push
mov
clc
dec
mov
cmpsb
in
jns
xlat
sbb
cltd
rcrl
xor
sub
mov
jmp
andl
add
mov
add
mov
add
jno
les
sbb
es
mov
push
fcomip
sbb
es
add
add
loope
xor
ret
add
dec
stc
xor
test
mov
add
add
add
test
xor
add
adc
jmp
mov
xchg
jle
leave
mov
mov
cmpsl
nop
mov
xchg
sbb
outsb
pop
dec
jp
out
push
dec
cltd
lret
inc
add
data16
mov
loopne
jp
jg
add
dec
cltd
lods
sub
les
divl
outsl
arpl
dec
cmpsb
movsb
fidivl
mov
hlt
mov
add
cmp
or
loope
add
add
insl
inc
mov
push
sub
add
add
lahf
fldenv
pushf
inc
add
add
cmp
in
cltd
push
repz
push
adc
add
mov
pushl
and
mov
iret
sbb
xchg
ds
mov
pop
sarl
xchg
hlt
mov
mov
adc
mov
jp
pop
jne
add
add
pop
or
mov
test
add
scas
es
pop
mov
sbb
add
add
sarb
cltd
jnp
mov
cmp
add
add
add
jb
add
add
add
pop
in
in
repnz
jl
mov
ficoml
xor
aas
std
ss
ljmp
ljmp
xor
lods
xchg
xchg
popa
mov
xchg
aas
rcrl
out
mov
stos
xor
inc
cld
in
cmp
notl
mov
in
jnp
mov
imul
push
stos
push
add
cmp
mull
push
loopne
mov
xchg
fisubl
jb
lods
vdivpd
iret
inc
add
add
jno
and
add
add
inc
cmp
repnz
jns
xlat
mov
test
outsl
push
sbb
repz
inc
xor
std
xlat
adc
in
jnp
sarl
and
pop
inc
add
jle
dec
pop
add
mov
scas
and
add
add
nop
inc
push
push
add
aas
loopnew
cmp
add
out
xchg
fwait
in
sub
add
add
push
xor
jecxz
jne
inc
add
jg
pop
and
daa
je
mov
xchg
mov
fucomp
ret
addr16
push
aaa
lock
loopne
aaa
imul
add
add
add
pop
pop
idivl
cld
sub
orl
lret
dec
ja
std
mov
add
add
xor
jns
and
add
add
test
add
add
jge
repnz
imul
mov
add
add
cld
movsb
mov
int
sub
lret
stos
xchg
sub
add
add
daa
xchg
fcmovnb
out
pop
into
mov
xrelease
jnp
jmp
push
test
jne
xlat
ljmp
add
ret
lods
push
mov
imul
xor
adc
pop
cmp
cmc
dec
clc
rcll
push
add
push
lcall
cli
sbb
int
stc
xor
negb
inc
lcall
or
add
add
mov
ljmp
icebp
lcall
jns
push
data16
bound
loop
add
add
sub
cwtl
test
mov
fisubrl
add
add
add
and
add
add
and
shrb
add
add
imul
inc
dec
lcall
int3
lret
xor
out
dec
mov
std
and
mov
push
inc
sbb
add
add
fildll
add
add
or
add
add
dec
ss
or
mov
add
movsb
or
add
add
lcall
push
or
pop
or
xchg
ds
mov
add
push
imull
add
cmp
add
roll
mov
add
add
add
mov
std
add
cmp
add
add
add
lcall
add
cmp
mov
pusha
add
add
cli
popf
sbb
mov
add
add
scas
push
ret
lods
sbb
imul
xor
add
add
add
shlb
pop
pusha
add
add
mov
mov
add
add
add
sub
mov
and
pushf
pushf
insb
add
cmp
mov
adc
push
outsl
cmpb
mov
out
mov
inc
add
add
add
add
add
mov
pusha
add
add
icebp
xlat
mov
orb
add
pop
jnp
mov
subl
pushf
inc
inc
icebp
xlat
sbb
shll
add
scas
push
add
imul
lahf
or
xor
shll
pop
jbe
pop
mov
sbb
int3
inc
add
sub
jns
adc
cwtl
lret
jle
cwtl
sar
and
mov
add
imul
dec
test
push
lea
mul
lods
dec
add
dec
in
dec
jnp
xchg
lods
sarb
pusha
add
aaa
jl
shll
insb
add
add
dec
out
push
lods
xchg
jno
inc
jle
add
add
and
add
add
sub
add
inc
add
lods
in
jnp
lcall
jo
jnp
mov
dec
imul
push
fistpll
inc
or
mov
mov
fisubrs
add
and
cmp
or
inc
ljmp
add
xchg
mov
add
add
add
lret
iret
enter
jae
push
cmp
mov
xchg
stos
sahf
xchg
fnclex
lret
iret
fcmovnb
lahf
ds
cltd
push
xchg
xrelease
xchg
add
mov
mov
ljmp
mov
test
outsb
dec
or
add
add
mov
mov
ja
push
or
ljmp
mov
add
add
mov
sub
mov
xchg
pop
push
stos
xchg
popf
cltd
mov
in
mov
xchg
aad
ret
jns
das
arpl
popf
adc
pop
mov
inc
scas
mov
mov
add
mov
jns
inc
inc
add
add
iret
sbb
cmp
fcmove
mov
adc
dec
add
xchg
add
fists
dec
loopne
loopne
cmpsb
in
sar
push
mov
mov
add
fisubs
cmpsb
mov
jbe
fcompl
mov
dec
mov
pushf
imul
xor
xor
mov
jne
mov
cmp
in
pushf
mov
je
inc
fld
jno
mov
mov
lahf
loope
push
mov
pop
adc
jnp
push
sbb
popl
push
arpl
mov
inc
insb
add
add
add
xchg
adc
adc
ss
in
mov
arpl
jbe
jno
cmp
les
pop
jle
push
mov
ret
cmc
jb
or
out
icebp
mov
add
mov
pop
arpl
inc
add
push
sti
adc
jne
lahf
cltd
jne
paddq
fiaddl
mov
and
mov
ret
icebp
jae
pop
jae
out
dec
sahf
pop
imulb
fstpl
lret
sbb
movsl
jae
xchg
inc
inc
mov
mov
aas
rcrl
daa
ss
pop
adcl
and
mov
pusha
add
and
adc
repz
int
push
jge
push
bound
jns
mov
adc
mov
mov
push
pop
sub
add
add
mov
lds
add
cmc
sarb
pop
or
out
mov
xchg
sbb
cmp
add
add
cmp
add
add
mov
add
lods
mov
idivl
adc
cltd
aaa
bound
or
mov
out
and
inc
pushf
adc
scas
jne
loop
orb
cwtl
jmp
jns
add
add
add
scas
jae
xchg
out
cmp
ljmp
fisubrs
mov
dec
adc
jl
lods
loopne
lods
xchg
xchg
pop
popa
jmp
lock
loopne
adc
cld
xor
or
jp
mov
add
or
in
sbb
xchg
add
sbb
add
add
jle
push
sub
push
sub
add
add
out
pop
jle
jae
adc
xchg
movnti
jne
add
add
setns
push
mov
mov
pop
or
add
add
mov
add
cld
test
pop
loopne
pop
ret
icebp
test
xor
icebp
aam
rcll
adc
cwtl
outsb
mov
stos
or
add
addr16
inc
add
insb
add
fistpl
xor
xor
test
fbld
fstps
imul
mov
dec
jnp
lret
xor
mov
cmpb
pop
jge
ret
std
mov
mov
jge
outsb
mov
rcrl
jmp
scas
repz
jg
adc
lock
cmpsl
ret
add
rcll
cmp
ds
push
jle
js
imul
jle
add
add
insb
add
add
mov
cmp
add
add
stc
push
pop
inc
pop
inc
adc
cmp
add
sub
sbb
add
je
add
add
mov
add
insb
add
add
pop
inc
xor
mov
sbb
scas
mov
add
imul
xor
test
add
add
mov
stos
jno
ret
sbb
add
dec
inc
lea
cmpsl
stos
push
mov
enter
add
add
add
sahf
dec
jmp
movsl
add
cmpsb
xor
clc
lock
dec
nop
push
arpl
lahf
sub
mov
loope
adc
mov
xchg
or
inc
add
mov
int3
or
add
add
pop
scas
rolb
mov
push
movswl
add
loope
push
sbb
scas
or
add
pop
addr16
sbb
rcrb
add
add
add
lea
xchg
jns
dec
mov
cli
lea
or
sub
mov
xor
loop
stos
mov
iret
mov
inc
sti
mov
add
add
sbb
xchg
lds
mov
add
mov
sbb
add
add
andl
add
add
or
add
add
outsl
cmp
xorb
dec
je
mov
mov
mov
add
mov
cmp
rcrb
mov
mov
inc
or
mov
mov
push
dec
sub
add
push
adc
add
add
mov
jmp
jmp
push
out
insb
add
add
aaa
lret
shlb
mov
add
inc
add
ret
sub
cmp
or
mov
divb
add
adc
hlt
repnz
push
testl
pop
imul
xor
sbb
push
or
not
fucom
sub
mov
outsl
fisubl
or
add
add
push
daa
pop
add
cs
cs
and
cmp
rorb
add
jecxz
push
shlb
aad
out
add
test
test
cli
lods
cmpsl
notrack
rcll
add
add
pop
sahf
pop
sahf
in
jb
inc
adc
jnp
testl
add
into
push
stos
and
mov
arpl
lret
fnstenv
jbe
mov
cltd
sarl
sti
in
dec
xor
mov
fcompl
hlt
test
iret
scas
cmpb
mov
pushf
push
sub
cmp
adcl
enter
mov
push
pop
lahf
sub
pop
shrl
add
ret
mov
jo
inc
dec
pusha
add
add
cs
inc
int3
pop
dec
add
add
jne
add
add
loopne
mov
repnz
adc
movsb
imul
xchg
inc
add
add
push
mov
sbb
add
add
imul
adc
lretw
lock
les
sbb
repz
mov
add
out
mov
mov
pop
jp
add
test
sub
add
add
or
lret
sahf
lahf
scas
aas
jg
lcall
xchg
add
rcr
mov
add
push
cmp
inc
shrl
ds
std
xchg
adc
jmp
push
repz
dec
sbb
rcrb
push
inc
jns
das
clc
add
sbb
leave
mov
xor
xchg
dec
add
add
inc
mov
ret
or
add
add
add
dec
or
inc
sbb
mov
jnp
pusha
add
add
out
fsubrl
ljmp
clc
ror
movsb
push
lret
lret
imul
pop
cs
stos
mov
jno
call
mov
cmpsl
cmp
hlt
mov
add
push
jb
test
movsb
mov
xchg
jl
dec
add
push
inc
add
mov
dec
pop
dec
add
add
in
adc
xor
pop
and
ljmp
mov
test
scas
test
lret
dec
cld
fimull
js
ret
sub
mov
out
into
pop
in
pushf
movsb
mov
popa
mov
lock
xor
add
cmpsb
lock
lahf
pop
jns
push
xchg
dec
push
push
sbb
and
lods
sub
je
fcoms
call
sub
add
add
cs
ret
in
adc
imul
cltd
mov
xor
sbb
addr16
js
and
add
dec
add
jge
mov
add
add
add
add
add
add
ljmp
lahf
push
aas
pop
lcall
pop
pop
add
movsb
iret
les
xchg
ljmp
cmp
or
data16
push
leave
imul
jge
add
cmp
in
add
mov
or
mov
lahf
arpl
ljmp
shrb
cmp
add
out
jae
jge
hlt
movsb
aam
xchg
jmp
aaa
inc
repnz
inc
add
add
ljmp
or
adc
ret
mov
jno
add
pushl
in
stos
and
add
or
add
add
arpl
add
add
ja
stos
movsb
cmp
cltd
xor
add
iret
imul
fldenv
cs
dec
ljmp
pop
cmp
data16
add
add
and
mov
fdivrl
gs
push
rcrl
jnp
cmp
add
add
push
pop
cmp
and
push
xor
hlt
jns
add
add
fisttps
out
repz
imul
dec
fldcw
add
mov
adc
add
add
mov
jg
mov
inc
add
add
and
adc
popf
outsl
dec
sub
add
mov
add
add
adcl
push
mov
add
add
sub
jg
insl
cs
outsl
outsl
movsl
xchg
ret
or
scas
and
cmpsl
fsubs
add
or
mov
mov
add
das
stos
loope
fcmovne
mov
out
call
cld
iret
sub
add
add
xchg
add
adc
xchg
cmc
scas
andl
addb
add
fbld
bound
stos
sti
or
add
inc
jno
add
add
insb
add
add
cmc
insb
add
stc
notb
add
add
out
testb
mov
add
add
dec
pop
loope
mov
mulb
insl
dec
add
es
cli
bswap
lret
pop
mov
fbstp
ljmp
out
cmpsl
mov
sbb
xchg
fwait
out
rcr
or
jmp
add
inc
cmp
lods
sub
sbb
inc
add
add
aam
into
pop
insl
into
pop
gs
call
add
dec
or
add
add
nop
jne
aam
jp
ss
xchg
and
add
add
push
inc
fwait
je
mov
mov
add
in
ja
or
mov
add
xchg
mov
dec
lods
sbb
or
adc
les
inc
mov
push
outsl
daa
xchg
add
add
push
pop
inc
fnstcw
daa
ud0
cld
sub
cltd
sub
add
add
cmc
adc
and
xchg
sahf
adc
push
sbb
ljmp
add
les
adc
jg
outsb
add
mov
or
mov
mov
inc
out
das
inc
icebp
jecxz
mov
cmp
push
outsl
bound
add
add
xor
jnp
inc
adc
cld
cmp
mov
mov
mov
sbb
push
cld
test
cmpsl
lahf
jle
scas
xor
xchg
repz
mov
fistpl
add
mov
dec
nop
rcll
xchg
push
pushf
push
ds
nop
pop
adc
inc
add
cmp
repz
call
je
mov
data16
fnstcw
fimuls
add
add
fisttpl
sub
mov
xchg
or
ljmp
loopne
sbb
out
iret
cmpsl
jge
in
cmp
scas
sbb
ss
push
je
aas
aam
pusha
add
shll
int
pop
enter
shll
rcrl
mul
fwait
add
cmc
push
mov
add
add
test
add
out
ja
pusha
add
add
fimull
push
sbb
mov
add
iret
jecxz
call
or
mov
ret
lcall
scas
adc
in
cs
pop
fwait
push
sub
sbb
pushf
sub
mov
mov
mov
adc
clc
movsl
insb
add
imul
aad
lods
mov
test
push
rorl
ret
xchg
jbe
sub
add
mov
fsub
and
les
or
mov
mov
pop
push
push
adc
scas
es
adc
mov
imul
jnp
sub
add
mov
xor
stos
popf
mov
stos
jp
mov
cmp
mov
cmp
out
sub
mov
lcall
add
xchg
push
loope
test
mov
dec
cs
push
aaa
ds
mov
aad
sbb
outsl
out
jne
and
daa
arpl
and
iret
pop
xchg
pop
xchg
dec
adc
es
fstpt
xchg
arpl
in
add
mov
cli
fwait
and
pop
repz
shl
and
add
add
push
inc
add
add
push
daa
adc
pop
cwtl
ficoms
pop
pop
idiv
cmp
xchg
xchg
inc
jnp
int3
pop
in
sub
add
loopne
jl
lahf
mov
sbb
in
push
mov
and
add
out
pop
int3
xchg
push
jns
add
add
add
jp
rep
xchg
inc
ret
mov
pushf
pop
add
sub
add
iret
jl
call
test
lock
cmp
add
mov
mov
push
cmp
xlat
repz
mov
fstpt
jne
loope
cmp
gs
sbb
add
mov
push
ss
and
add
outsl
into
sub
mov
mov
cltd
je
dec
pusha
add
add
and
add
icebp
xor
sbb
mov
in
cmp
sub
fldl
int
and
cs
add
lock
faddp
int
adc
dec
cmp
lds
in
xor
cmp
lods
or
jp
pop
xchg
add
add
add
pusha
add
add
xor
mov
sbb
mov
inc
push
or
test
mov
adc
and
xchg
jae
in
xchg
pop
test
out
into
pop
pop
or
mov
stc
xlat
xor
dec
xchg
sbb
mov
mov
add
into
loopne
sahf
ss
push
dec
leave
shrb
jmp
xor
je
mov
jnp
cltd
icebp
xchg
scas
xchg
scas
ret
add
add
lods
ss
mov
sbb
inc
iret
adc
xlat
je
call
pop
cld
sbb
add
jge
push
icebp
in
adc
mov
lcall
xchg
mov
mov
jl
sbb
adc
jl
mov
lret
jmp
cmp
mov
add
pushw
add
jp
and
add
add
and
add
add
call
jge
cmp
push
and
aas
pop
movsb
hlt
pop
movsl
pop
sar
mov
push
dec
add
xor
jp
xor
xor
dec
mov
pop
insb
add
add
add
scas
fucomi
test
sub
cmpsb
mov
add
add
cmovle
adc
loopne
mov
outsb
add
mov
jmp
test
pop
out
add
jmp
sbb
pushf
sbb
sbb
jmp
sahf
pop
sti
pop
sub
mov
inc
orb
add
sbb
mov
into
jge
xchg
or
add
sbb
inc
add
add
sub
add
add
out
mov
or
mov
pop
out
dec
add
mov
xchg
sbb
jp
push
inc
xchg
add
test
adc
push
sar
in
fsubr
rcl
mov
push
leave
cwtl
pop
push
mov
nop
xlat
lret
cs
xchg
lods
add
add
mov
sub
add
add
add
add
fld1
dec
mov
pop
mov
inc
add
add
pop
xor
pop
jg
lock
repnz
cmpsb
stos
data16
dec
add
add
insl
xchg
pop
int3
add
repnz
movsl
mov
mov
xchg
jb
and
shr
or
mov
dec
std
fucomi
pop
mov
lcall
sub
lea
adc
add
pushf
pop
lods
add
mov
push
ret
jae
in
xchg
add
add
or
ret
faddp
arpl
popf
imul
sub
and
aaa
cs
loope
xchg
push
shrb
add
stc
loopne
cmp
jg
hlt
mov
lret
outsb
pop
mov
cmc
inc
jmp
sbb
mov
add
and
add
add
push
enter
and
mov
mov
jmp
adc
subl
loopne
lods
ja
cli
cmp
mov
jl
xor
add
inc
add
push
add
jge
loope
cltd
ret
add
add
test
clc
xor
jae
in
div
add
mov
mov
xlat
out
dec
add
mov
std
orl
ljmp
inc
mov
pop
jnp
push
lret
cld
sub
push
xchg
dec
jecxz
inc
push
xor
add
add
dec
add
add
jne
fmul
movsl
xchg
add
pop
hlt
int
push
jp
popf
flds
add
lock
xor
hlt
push
pop
add
fcmove
adcl
dec
add
movsb
fcomps
add
add
and
push
or
add
add
fisubl
out
movntps
sub
in
mov
aaa
mov
cltd
dec
ret
subl
xlat
ljmp
dec
add
add
outsl
in
dec
add
add
ss
xor
dec
add
sbb
leave
pop
or
mov
push
inc
add
je
in
sbb
addl
add
mov
pop
or
shl
sub
in
out
ja
add
fistpl
push
daa
sbb
jmp
add
cmp
enter
jne
enter
pop
popf
sub
add
xchg
sub
into
pop
xor
dec
add
addr16
rclb
sti
jo
jne
mov
inc
xchg
dec
ds
das
jb
mov
add
pop
out
les
add
orb
xchg
int
cld
aam
pushf
rcr
add
mov
mov
aad
dec
mov
aad
or
jmp
inc
in
jae
movsb
xor
sub
add
add
cmc
into
mov
fcomps
push
jge
sbb
sti
xor
push
dec
jo
cmp
push
lea
call
add
add
mov
paddusb
cmc
inc
sub
push
pop
loopne
out
out
dec
mov
jecxz
add
add
mov
inc
inc
add
add
test
add
lahf
cltd
jle
adc
and
shlb
dec
std
ret
pop
pop
add
inc
stos
fdivs
stos
scas
test
les
mov
mov
arpl
outsb
pop
sbbl
arpl
push
cwtl
sbb
lret
jl
in
ds
bound
jb
adc
mov
out
imul
add
rorl
inc
and
add
add
add
add
cmc
loop
clc
or
mov
insb
add
add
iret
testl
add
add
mov
mov
cmp
mov
out
mov
mov
pushf
jg
iret
loop
fsubrs
mov
into
mov
popf
pusha
add
add
in
dec
cmc
ss
push
stos
jnp
in
add
add
fists
stos
adc
andb
add
mov
inc
pop
fildll
cmp
fwait
and
push
sub
sub
test
mov
iret
inc
sub
imul
pop
pop
mov
and
add
adc
js
icebp
adc
fldenv
add
add
fmulp
dec
aaa
fbstp
jne
xchg
sub
movsb
call
movsl
push
xchg
jp
ds
repz
add
add
es
mov
jae
inc
sub
add
add
pushf
mov
mov
mov
jo
xchg
mov
repz
frstor
add
add
hlt
mov
add
add
add
jae
in
mov
imul
cmp
pop
fldl2e
xchg
test
stos
sub
mov
cld
push
lods
stos
add
addr16
ret
pushf
aaa
ret
mov
lods
pop
add
dec
add
rorb
imull
add
or
fwait
adc
cltd
cmp
jne
shlb
insb
add
add
je
dec
add
add
add
icebp
lea
add
add
sbb
and
add
add
adc
scas
cmpsb
cmp
xchg
inc
inc
xor
and
add
add
inc
adcl
ds
repnz
ja
jmp
imul
pop
push
mov
loop
add
add
xor
out
push
pusha
add
add
jnp
arpl
lahf
scas
loope
push
shrb
pop
cmp
jl
popf
movsl
stos
dec
add
add
mov
pop
aaa
data16
aad
xor
add
cltd
nop
sub
add
add
in
popf
add
xchg
shll
sbb
mov
add
add
inc
xor
dec
jmp
shl
cmp
mov
add
jo
xchg
iret
popf
mov
push
clc
cltd
inc
mov
push
pop
das
mov
xchg
mov
fildl
add
add
xchg
xor
stos
loop
js
pop
add
add
add
jne
inc
xor
add
scas
cmp
jbe
std
sub
shrb
add
inc
mov
xor
mov
add
add
and
push
iret
pop
lret
mov
lea
frstor
out
dec
mov
add
icebp
push
insl
inc
add
add
iret
int
add
add
lds
mov
pop
push
add
inc
jno
mov
daa
arpl
sbb
movsl
daa
je
fcompl
and
outsb
mov
add
add
cld
push
shlb
add
lods
popf
out
rorl
add
and
add
push
xchg
sbb
call
icebp
test
mov
incb
mov
into
push
adc
in
pop
add
fstp
gs
mov
xor
insb
add
add
fdivl
add
and
mov
add
ds
subb
adcl
add
je
pop
inc
pop
pop
sub
pop
jl
inc
inc
xchg
add
mov
mov
add
add
sub
mov
ja
fistpl
dec
inc
dec
in
ds
in
mov
add
add
fcomps
push
scas
ljmp
call
mov
lcall
add
add
fdivs
lea
pop
andb
test
dec
add
insl
cmp
mov
add
shr
dec
ja
out
repz
mov
shrl
add
add
jbe
xchg
pushf
in
mov
adc
div
stc
xchg
dec
and
xor
jbe
and
mov
fcoms
add
out
fdivrs
add
mov
pop
enter
add
das
sbb
je
imul
add
add
lds
std
pop
mov
lahf
aad
and
gs
add
adc
jl
or
add
add
inc
shr
and
add
rcr
lds
sti
stc
mov
roll
add
repz
add
adc
mov
ljmp
mov
insl
orb
add
xchg
and
mov
xchg
sahf
stos
in
and
add
add
xor
inc
gs
mov
xor
xor
enter
lea
add
or
push
add
add
add
and
les
push
inc
cltd
mov
cmp
mov
add
add
add
ljmp
add
sub
orb
fcomps
add
jmp
cli
psrlq
test
mov
jns
add
add
sub
mov
dec
pusha
add
add
mov
add
add
jmp
lahf
or
and
add
add
xchg
push
insl
dec
scas
mov
add
push
stos
or
sbb
in
sbb
fistps
jl
jno
xor
add
clc
jecxz
repnz
add
movsl
fbld
adc
jb
add
add
repnz
pop
xlat
sub
add
rcrl
pop
lret
dec
lods
mov
sub
add
data16
mov
fmul
imul
mov
shl
lods
int3
in
or
add
add
xchg
adc
mov
cmp
xchg
mov
add
add
cmp
add
ficomps
lahf
and
pop
cmp
pop
iret
push
jg
stc
sub
out
jno
mov
sbb
fisubrl
pushf
and
mov
add
dec
je
hlt
adc
jle,pt
rclb
sbb
fld
sub
inc
scas
sub
das
aad
movsb
dec
popf
sbb
add
push
add
xchg
pop
ss
push
inc
cmc
inc
mov
das
clc
xchg
mov
xor
inc
testl
jne
push
jecxz
adcb
ss
maxps
sub
mov
xlat
imul
stc
mov
mov
inc
add
add
pop
insl
jae
test
aad
ljmp
ljmp
outsb
mov
imul
fbld
add
pop
out
je
xchg
mov
add
add
add
cmp
jmp
cli
daa
mov
cli
jmp
in
in
mov
in
pop
es
aad
xor
aas
stos
in
out
xchg
jle
push
push
int3
stos
xchg
test
mov
xor
out
in
scas
or
add
add
xchg
jp
test
lea
gs
movsl
and
mov
mov
in
or
mov
add
add
add
cmc
movsb
outsb
js
fbstp
lds
enter
jne
shll
add
add
jp
xchg
xor
into
cli
push
pop
adc
add
inc
add
cs
add
insb
add
add
jns
sub
mov
or
add
add
mov
xlat
adc
add
add
addb
inc
add
xchg
xchg
mov
shlb
mov
mov
in
push
mov
add
bound
add
add
mov
xchg
jbe
pop
xchg
mov
mov
lret
leave
repnz
sbb
in
test
fstl
loop
fistpl
jae
insb
add
cmp
adc
pushf
mov
fcmove
jecxz
pop
mov
add
cmp
pop
mov
mov
and
xor
and
add
std
shll
xchg
cmp
pop
sub
mov
add
loope
ljmp
sub
add
add
jne
sub
and
add
add
sahf
lret
jbe
orl
and
jg
imul
sti
inc
ret
mov
mov
push
sbb
push
imul
out
jle
stc
or
and
cmp
aam
pop
imul
movsl
mov
add
add
aas
adc
add
and
pop
jmp
mov
pop
jmp
imul
test
add
dec
push
imul
loop
xor
pop
mov
add
add
lret
icebp
dec
add
ja
inc
lahf
add
add
adc
mov
lea
movsl
jae
outsb
ds
sahf
loope
outsl
adc
gs
dec
cmpb
dec
mov
je
fadds
add
add
cmp
sbbl
popf
ljmp
lods
hlt
mov
mov
add
add
mov
xchg
fisubrl
loope
aaa
stc
mul
ja
sub
push
int
adc
adc
push
add
call
cmp
sub
mov
add
icebp
in
cmp
xchg
cwtl
repz
sub
mov
mov
jge
mov
add
add
pusha
add
add
adc
jmp
add
in
xor
lcall
cmp
ret
sbb
push
jno
lods
and
add
mov
add
icebp
ja
xor
add
add
or
mov
jp
jb
arpl
mov
out
and
xor
mov
sbb
dec
add
add
je
mov
into
mov
cld
push
test
add
adc
mov
mov
mov
out
outsb
sbb
not
fucomi
fisttpl
add
add
push
mov
xchg
mov
and
testl
lods
mov
ficompl
xor
mov
out
push
and
int3
movsb
lods
movsb
negb
outsb
xlat
imul
loopne
mov
cld
cmp
into
call
add
mov
add
lahf
pop
and
add
add
repnz
iret
inc
add
add
loopne
sub
add
add
movsl
movsb
xchg
dec
add
mov
mov
mov
mov
add
repnz
daa
cwtl
push
sub
orl
mov
mov
mov
jno
mov
add
aaa
cmpsl
and
enter
das
sbb
dec
add
mov
mov
dec
dec
push
xchg
mov
out
decb
jbe
xchg
push
sub
push
rcll
inc
shll
or
pushf
data16
sub
add
add
jns
push
xor
js
leave
mov
add
pop
fnstenv
add
or
add
add
inc
pop
stos
pop
out
xchg
lods
xchg
add
addr16
das
add
mov
clc
push
js
pop
jne
popf
movsb
loopne
cmpsb
mov
lods
sbb
ss
add
push
adc
add
add
jb
or
mov
pop
xchg
lods
insb
add
leave
mov
push
cwtl
xchg
sbb
inc
adc
pushf
test
jbe
data16
int3
insl
popf
push
jle
fcompl
loopne
mov
loope
jbe
or
add
add
scas
pusha
add
mov
xchg
inc
add
add
cmp
cmp
add
rolb
movsl
out
ss
inc
add
add
add
pop
cmp
cmpsb
pop
jmp
cmp
or
mov
cwtl
or
add
add
fdivl
popa
pop
arpl
scas
adc
aam
mov
cld
fisubrs
popf
xchg
xchg
or
mov
fdivrs
clc
add
xor
xchg
xchg
mov
loopne
mov
add
fadds
daa
pushf
jbe
lods
stos
pop
or
mov
testb
mov
cld
into
testl
lahf
inc
insl
xor
fcmovnbe
into
shll
pushf
or
add
add
add
leave
std
scas
pusha
add
add
push
nop
and
mov
jp
mov
add
add
cmp
xchg
in
push
add
add
mov
add
ficompl
mov
insl
iret
stos
ja
divb
add
mov
mov
add
nop
iret
scas
aaa
test
add
fsubrs
stos
xlat
xchg
sbb
push
lock
xchg
xor
push
add
sub
mov
cli
shlb
add
add
aaa
or
mov
cld
jge
es
inc
push
mov
data16
add
test
add
mov
add
add
add
pop
je
add
inc
adc
insb
add
add
clc
dec
inc
in
mov
mov
push
pushf
loope
fxch
js
test
cli
sub
add
add
int3
and
or
shrl
push
nop
inc
daa
movsl
sarb
pop
stos
clc
js
xchg
inc
jne
leave
arpl
adc
cmc
add
push
dec
add
into
pop
clc
clc
insl
out
sbb
dec
add
add
icebp
cmp
jmp
sub
cmpsb
in
add
and
push
adc
frstor
add
test
cld
push
add
aam
std
adc
test
push
pop
dec
in
dec
add
add
pop
cmp
push
scas
les
xor
xlat
inc
dec
jo
ret
jnp
mov
add
add
inc
xchg
xchg
sub
add
add
add
or
push
cld
dec
loope
sbb
add
add
add
aam
loope
adc
es
nop
jnp
stos
pop
add
add
add
popa
pop
lcall
test
inc
addr16
add
add
pop
mov
mov
add
add
add
push
xchg
rorl
add
fldl
add
push
testl
mov
nop
and
add
add
pop
movsb
jmp
leave
cs
inc
clc
loopne
lock
sub
xor
in
jno
gs
push
cld
lret
pop
shlb
or
add
add
add
ret
inc
add
add
xchg
push
lahf
bound
sarb
pop
rcll
adc
xlat
sbb
les
add
mov
mov
add
xor
ljmp
ds
add
add
mov
add
enter
mov
shlb
add
add
and
mov
int
sbb
and
add
add
push
aaa
cmp
movsb
xchg
or
add
add
pop
jl
or
ss
in
adc
mov
add
add
imul
add
add
sbb
xchg
cld
inc
adc
popa
in
mov
leave
sqrtps
push
shlb
lret
cld
push
adc
pop
and
fnstcw
lods
xchg
int
fidivl
mov
adc
sbb
sub
mov
cmp
pop
inc
in
sbb
add
outsl
int3
stc
push
inc
clc
xchg
sub
and
push
jb
jbe
mov
xchg
cwtl
cwtl
dec
push
cmp
hlt
rcl
adc
or
mov
sub
mov
dec
mov
hlt
imull
in
enter
add
fwait
push
mov
insl
pushf
lock
in
mov
mov
add
add
add
add
jno
cli
nop
mov
cs
push
test
add
push
aam
or
mov
inc
and
cwtl
xchg
icebp
jno
and
mov
xchg
cmp
mov
inc
xor
xchg
jge
add
add
add
add
add
icebp
push
add
add
je
pop
mov
insb
add
add
xchg
test
sbb
dec
jl
add
add
push
add
add
xor
fstl
mov
or
add
add
add
sub
add
add
inc
nop
jmp
pusha
add
stc
mov
add
mov
and
add
add
je
leave
and
add
add
add
pop
push
sub
lds
mov
sub
leave
rcll
mov
lret
aam
clc
in
jle
inc
xorl
or
add
add
test
in
ror
lahf
aaa
xor
lret
add
add
sahf
ret
mov
add
add
in
aas
repz
fimuls
jo
hlt
enter
xchg
pop
inc
add
add
addb
add
adc
notl
mov
repz
imul
add
add
add
mov
mov
xchg
std
xchg
adc
xchg
xor
mov
mov
stos
add
add
add
mov
ds
add
mov
sub
ljmp
mov
insl
shrl
push
xchg
add
sbb
inc
imul
mov
push
push
push
fistl
dec
mov
rcrl
cmc
and
cltd
adc
xorl
add
dec
mov
in
loope
jbe
sbb
push
mov
imul
and
push
stos
jecxz
fldcw
sub
mov
call
add
sbb
add
add
popf
mov
iret
inc
mov
xchg
and
xor
ljmp
es
xor
stc
adc
add
sbb
pop
adc
jmp
or
pop
jne
sbb
imul
xchg
rcrb
inc
iret
cltd
pop
in
imul
dec
imul
leave
data16
pop
jge
aam
scas
sbb
mov
ljmp
ret
out
xor
es
cmpl
mov
add
adc
test
fadds
out
dec
daa
xchg
lret
call
add
xor
sbb
sub
add
add
fistpl
mov
xlat
adc
mov
movups
jb
add
add
xlat
mov
add
aad
add
mov
ret
into
jp
addl
add
in
hlt
mov
add
inc
push
jns
cmp
cmp
inc
add
add
mov
jp
aam
aad
xchg
jb
add
add
jbe
or
add
add
add
add
rorl
sbbb
hlt
inc
add
mov
push
rol
popw
sbb
arpl
jecxz
xlat
push
dec
cmp
arpl
fildl
add
mov
ret
mov
loopne
std
fwait
outsl
dec
add
add
xchg
dec
add
add
out
imul
add
pushf
sub
add
add
aaa
dec
add
adc
jo
cmp
in
xchg
imul
movsl
fisubrl
add
pop
aas
push
out
ss
ficoms
mov
out
outsl
and
add
add
xor
xlat
mov
add
add
sbb
loope
add
ffree
addl
add
add
ret
mov
xor
push
repz
jb
pop
daa
dec
enter
jge
pop
icebp
shll
sti
or
mov
inc
add
fdivs
in
sbb
mov
fnstcw
repnz
pop
jmp
lret
cmp
stc
fld
sbb
rcrb
mov
adc
xlat
jae
xchg
sbb
mov
adc
xor
ficoms
add
iret
push
mov
nop
inc
add
cwtl
out
cli
into
inc
jb
and
lods
push
mov
scas
pop
xchg
sbb
das
inc
js
divb
push
hlt
es
pop
pop
mov
sbb
adc
call
das
or
data16
fistpl
mov
mov
add
mov
jae
jp
mov
test
popf
stos
nop
mov
jne
fstps
mov
xchg
mov
push
es
cltd
cmc
or
sub
outsb
mov
cli
pop
sub
mov
mov
test
pop
jno
enter
sbb
fistl
mov
sub
cmp
icebp
stc
add
push
dec
fdivs
add
and
push
fidivl
inc
add
aaa
loope
ja
arpl
data16
or
add
add
repnz
sub
pushf
gs
mov
push
cwtl
pusha
add
add
jge
sub
mov
cltd
shl
dec
fdivrs
fdivr
dec
add
jp
inc
movsl
rcr
xor
pop
push
cmc
nop
lahf
sbb
xchg
xor
mov
cmc
repnz
add
add
in
outsl
cltd
movsl
push
push
push
test
mov
xchg
push
add
add
add
mov
push
pushf
inc
orl
xor
dec
sbb
mov
push
ret
gs
xor
loope
psrad
imul
test
mov
and
add
mov
mov
pop
stc
pop
loopne
mov
xchg
js
mov
cltd
inc
push
shrb
pop
sbb
push
mov
ret
daa
pop
idivl
cmp
dec
lds
fisubrl
add
mov
mov
jnp
xchg
inc
cwtl
stc
in
push
das
jb
sbb
push
or
es
clc
arpl
sub
addr16
mov
jno
imul
pop
push
sub
jb
add
filds
leave
jmp
cmp
xor
scas
cld
sbb
int
pop
mov
mov
into
xchg
stc
jecxz
cmp
mov
add
add
add
fwait
rcrb
push
enter
adc
test
pop
dec
add
xchg
sub
pusha
add
fimull
adc
cmpl
cmpsl
jae
xor
cmc
cli
movsl
daa
lods
lahf
push
pop
pop
jo
sahf
into
inc
xor
sbb
jg
mov
add
sti
adc
adc
popa
sbb
cwtl
push
dec
jle
add
notl
cmp
xor
and
and
add
add
mov
jge
movsb
mov
jns
ja
dec
inc
sarl
fdivrl
or
mov
sbb
movsb
adc
add
add
pop
jmp
shufps
add
pop
push
xchg
adc
push
cmp
mov
jl
leave
sub
cmp
lcall
fidivl
lea
lods
repz
add
jg
mov
xor
lods
movsl
sub
shll
add
cmc
into
ljmp
mov
xor
add
gs
and
mov
stos
pop
mov
add
mov
or
enter
push
mov
fwait
dec
push
mov
xchg
cld
xchg
adc
dec
add
inc
xor
jge
div
cmp
fmul
mov
je
pop
ficompl
lahf
cmp
xchg
jmp
cld
xor
movsb
lock
mov
mov
xchg
mov
inc
cmp
inc
movsb
pop
sub
popf
sub
push
iret
lret
ret
push
cmp
addr16
pop
jg
dec
loopne
adc
lcall
cmpb
jno
push
rcrb
add
or
out
xchg
sti
jno
jmp
sub
sbb
test
cmp
or
pusha
add
add
or
inc
add
add
add
mov
push
in
lds
add
loope
jge
into
out
add
add
cmp
aas
mov
xor
call
bnd
in
bnd
lds
add
jae
arpl
insb
add
xchg
dec
push
dec
cmp
jmp
nop
iret
sbb
mov
in
mov
and
add
add
dec
xchg
faddl
add
add
cld
sbb
add
xchg
insl
pop
int
cmp
jp
xchg
outsb
xor
fcmovbe
xor
sub
mov
add
test
in
sbb
sti
dec
add
add
iret
mov
add
add
out
popf
mov
add
add
dec
jne
and
add
add
jb
into
int
mov
push
or
cmp
add
add
dec
add
cmp
inc
xor
cmp
cmp
inc
add
fisttps
dec
mov
enter
push
add
mov
mov
outsb
mov
mov
ret
push
mov
add
inc
add
add
out
pusha
add
push
imul
jecxz
sub
mov
add
fwait
mov
jg
mov
pop
cli
and
jno
push
xor
mov
add
add
loop
into
outsl
mov
sti
and
add
add
xchg
aam
pop
lret
ret
imul
add
add
add
aaa
pop
push
mov
xchg
jnp
ror
call
add
dec
add
add
cmp
inc
add
leave
sbbl
icebp
es
jne
pop
push
or
add
add
bnd
je
xchg
popf
rorb
add
add
int3
lods
dec
add
mov
lcall
xor
clc
js
out
or
mov
aaa
into
mov
push
out
lock
pop
out
inc
cmpsb
sub
adc
mov
pop
ss
mov
xchg
xor
scas
push
cmpsl
or
leave
std
jle
cmpsb
sbb
and
sbbl
cmp
popf
push
repnz
lds
loop
adc
xor
mov
add
add
add
and
jecxz
lea
in
adc
dec
adc
sbb
xchg
push
fidivs
outsl
inc
fiadds
inc
add
add
sahf
dec
sub
inc
cs
push
pop
nop
jmp
xchg
add
icebp
mov
and
add
add
out
movl
frstor
sub
add
mov
mov
push
sbb
mov
add
add
jp
mov
sbb
pop
cli
shrl
add
add
dec
cmp
lahf
jmp
test
inc
mov
fnstcw
sbb
shll
stos
mov
sbb
adc
out
in
push
mov
stc
pushf
mov
jge
into
push
stos
or
mov
lods
addr16
cmp
cltd
fcmovnu
xchg
fildll
push
lret
inc
dec
movsl
jo
es
push
test
xor
stos
shll
push
jb
add
into
addb
add
mov
cld
push
ljmp
dec
add
lods
aam
pop
pop
inc
sbb
mov
inc
sbb
or
out
data16
xchg
gs
shll
popf
mov
loope
pop
xor
fwait
add
movsb
push
xor
pusha
add
add
pop
call
mov
addr16
pop
in
cwtl
test
add
aas
mov
rol
inc
add
movsl
cmp
dec
lcall
xorb
or
arpl
add
add
add
icebp
mov
push
push
es
push
insl
cmc
lret
out
push
loope
add
add
or
gs
les
inc
jae
dec
fdivrl
inc
data16
fimuls
lods
push
cmp
push
int
loopne
in
stos
fisttpll
add
js
test
das
subb
mov
mov
add
push
outsl
xchg
add
andl
add
adc
mov
or
pop
sbb
add
add
add
and
fidivrl
xlat
add
add
jmp
pop
enter
jg
jno
mov
sub
pop
dec
add
add
cld
adc
les
push
movsb
adc
push
and
add
add
sub
mov
dec
cmp
das
ja
aas
jno
js
add
add
add
and
add
add
add
push
mov
jp
xor
add
push
inc
out
outsl
or
adc
push
jae
jb
add
add
mov
mov
xor
add
mov
cmc
sbb
int
add
add
mov
scas
cmpsb
dec
adc
add
add
lret
add
mov
add
sbb
or
or
inc
outsb
mov
test
pop
dec
pop
mov
out
push
ds
sub
add
inc
add
mov
mov
test
mov
cmp
sbb
jecxz
dec
push
or
mov
add
mov
out
mov
aam
flds
xor
data16
out
and
lret
lcall
pusha
add
add
sti
outsb
fdivs
fwait
cltd
push
dec
aaa
mov
inc
add
jns
dec
push
sub
rcrb
arpl
or
in
and
add
add
cli
adc
mov
notl
sahf
jecxz
outsl
sub
jnp
mov
xor
and
cmp
cmpsb
cmp
add
pop
xor
xchg
add
sbb
fidivs
in
add
inc
das
popf
mov
push
leave
sbb
mov
mov
popl
push
pusha
add
add
rcll
mov
mov
fdivl
lcall
mov
mov
add
add
xchg
mov
jmp
lea
push
add
mov
sti
aam
cmpsl
xchg
test
add
add
mov
push
or
adc
addr16
sbb
mov
add
mov
ret
cmp
mov
sub
add
inc
insl
pop
iret
in
int
push
push
aaa
mov
mov
sbb
mov
add
add
pop
inc
cmp
xlat
dec
add
xchg
loop
add
insb
add
add
fsubrs
nop
lods
iret
mov
js
rcrb
pop
mov
lret
add
add
add
aaa
mov
jne
mov
sbb
jbe
xor
lret
leave
into
pusha
add
add
je
sbb
fdivrl
loope
test
and
mov
mov
std
ret
push
or
sbbl
add
add
xor
inc
movsb
les
adc
push
or
add
add
adc
mov
cltd
cmp
out
or
mov
jno
add
pushf
negl
mov
iret
pop
int
cwtl
or
push
aam
dec
push
or
add
add
adc
mov
inc
pop
adc
inc
add
add
and
add
add
cwtl
mov
add
mov
and
inc
into
pop
sub
add
adc
pop
add
stos
mov
add
jl
jno
add
add
mov
shrb
movsl
sbb
std
push
fisttpll
mov
mov
xor
cs
add
add
mov
add
sub
mov
xlat
push
in
lods
pop
sar
inc
dec
add
pop
or
dec
add
rorl
or
add
mov
dec
xchg
xor
movsb
lahf
shll
xchg
hlt
iret
mov
xor
mov
mov
jecxz
xchg
scas
add
cmpsb
stos
adc
add
test
add
inc
scas
sti
xor
lods
cli
xchg
ja
imulb
mov
xchg
lods
mov
add
add
dec
add
add
add
repz
add
add
add
fistps
dec
and
xor
sub
cmp
js
lahf
add
lods
pop
pop
fistpl
lods
push
adcl
mov
xchg
push
xor
cmpsl
adc
push
cmp
add
add
jne
subb
popf
xchg
out
mov
push
add
inc
xor
mov
gs
pop
mov
jle
lret
mov
jecxz
aad
add
xchg
xor
add
int3
in
cmp
rcrl
arpl
shrl
dec
ljmp
add
add
dec
pusha
add
add
add
lret
rclb
cmpsl
add
clc
mov
out
loope
xchg
aad
ss
out
cmpsl
arpl
inc
mov
push
sbb
mov
aam
xchg
add
mov
xor
or
lcall
int3
jecxz
inc
or
add
add
inc
mov
pop
aad
pop
pop
adc
filds
iret
in
jmp
jl
pop
mov
shlb
add
add
add
pop
out
cld
mov
stos
xchg
or
add
mov
pushf
xor
popa
dec
xor
add
mov
imulb
add
push
sbb
xchg
xchg
iret
adc
add
add
mov
outsb
sbb
sbb
mov
jecxz
jmp
jg
xor
add
add
scas
cmp
ret
mov
push
lret
les
std
ss
loope
dec
mov
jle
sub
mov
adc
pushf
outsl
add
shl
popf
xchg
outsl
stos
outsb
clc
jmp
in
imul
mov
sbb
out
jns
mov
add
add
mov
mov
shrl
stos
xor
sahf
popf
outsl
pop
xchg
mov
xchg
adc
push
jl
jmp
mov
mov
add
add
mov
stc
dec
add
add
mov
cmc
xor
mov
dec
pop
inc
lret
adc
add
add
pop
pushf
pop
pop
adc
and
mov
push
add
add
add
xor
push
nop
loop
daa
popl
inc
jmp
pop
mov
scas
push
fdivl
repnz
stos
xor
cmp
add
add
arpl
movsb
inc
add
add
adc
movsb
aad
negl
xor
add
add
or
add
add
je
shlb
and
inc
scas
lcall
js
mov
out
mov
push
gs
loope
mov
add
add
sbb
and
cltd
add
add
sub
rorb
rcr
inc
mov
add
cli
mov
sar
mov
push
in
pop
cmp
add
add
jp
push
xor
cli
cmpsl
push
mov
add
mov
insl
imul
add
clc
out
cmpl
xor
dec
es
dec
lret
shr
mov
sub
jno
jp
cmp
aam
xor
adc
lahf
pusha
add
ja
in
aam
pop
xchg
and
mov
mov
sub
fiadds
mov
mov
add
or
pop
pop
mov
cwtl
bound
or
aam
or
add
xor
ret
sbb
add
add
add
movsb
sbb
mov
mov
mov
xor
lods
sar
mov
cld
bound
push
xchg
test
in
add
add
jne
mov
arpl
add
add
mov
dec
add
add
inc
add
add
pushf
jno
xor
cs
pop
daa
push
mov
mov
cmp
adc
sbb
cmpsb
fnstenv
xchg
mov
add
add
std
adc
push
lcall
and
insl
test
sbb
cli
into
es
mov
add
sbb
call
repz
inc
add
add
scas
adc
lret
xlat
dec
push
inc
sub
mov
in
xchg
cmp
nop
pop
mov
xor
push
xor
cmp
add
dec
icebp
rcrl
add
rorb
add
add
add
pop
add
jecxz
mov
aas
mov
je
cwtl
ficomps
cmp
pop
outsl
pop
jb
cmpsb
jo
push
push
ffreep
leave
popf
dec
add
add
sti
mov
shl
loopne
ja
call
mov
subl
add
add
add
aaa
jl
popf
imul
cmp
ret
add
add
add
aaa
popa
test
push
rcrl
xchg
in
mov
movb
inc
add
jb
sbb
js
sti
jae
add
repz
push
xor
add
ljmp
aad
fistpll
out
xchg
sub
aam
add
lcall
mov
jg
xchg
or
mov
testb
call
mov
xbegin
test
or
add
add
mov
add
lods
iret
lcall
add
sbb
das
push
es
bound
add
add
xor
or
jnp
and
pop
sbb
shl
adc
jecxz
push
add
add
add
add
mov
mov
rcll
sub
fwait
inc
popa
ds
loopne
mov
xchg
adc
add
scas
in
sub
mov
add
add
mov
loop
out
sbb
aam
notb
jle
addl
add
loopne
inc
add
mov
add
mov
cmp
add
add
aam
cmc
mov
jbe
cmp
iret
pop
sub
cmp
sub
arpl
add
movl
movsl
xchg
adc
pop
in
or
add
add
imul
fisubrs
push
incb
add
push
dec
dec
insl
or
pop
lods
and
es
and
out
rclb
es
pop
jmp
hlt
repnz
sub
mov
jno
add
add
sub
dec
add
add
add
and
pop
mov
jp
add
sbb
mov
mov
mov
add
lcall
sub
mov
add
cmc
sbb
mov
inc
add
cmp
cs
imul
into
pop
in
stos
test
push
mov
add
jmp
cmp
mov
jl
add
xchg
sbb
jge
mov
cmp
add
pop
pop
sahf
push
push
push
pop
lock
and
push
jae
add
add
pop
mov
add
pop
mov
fwait
imul
aad
sti
inc
add
add
imul
mov
pop
ret
pop
pop
mov
into
push
in
cmp
dec
fadds
add
test
das
inc
add
add
dec
les
pop
and
add
add
ss
jmp
dec
sub
fsqrt
lcall
jg
lock
sahf
pop
jecxz
push
mov
push
xchg
push
mov
imul
pop
push
or
add
add
add
mov
aam
add
icebp
aam
getsec
xchg
mov
mov
shrb
cwtl
stos
movsb
jns
dec
and
sub
mov
add
add
xor
insl
aad
mov
ss
push
inc
add
lea
gs
add
add
add
movsl
dec
mov
push
rolb
and
push
adc
pop
add
sub
mov
inc
xchg
adc
inc
popa
inc
add
add
es
out
jecxz
jg
jns
icebp
sub
jg,pn
push
pusha
add
add
iret
mov
call
dec
adc
or
add
add
sub
lret
pop
mov
xchg
and
pop
add
cmp
icebp
sarl
add
cmp
mov
adc
add
insb
add
add
add
push
leave
adc
aas
lock
gs
or
mov
add
add
dec
add
push
xchg
dec
cmp
or
sbb
mov
ss
ret
clc
jmp
xchg
movsl
mov
inc
and
add
xchg
out
jl
add
add
cmp
dec
add
mov
outsl
lcall
xchg
cmc
enter
lahf
mov
mov
dec
mov
out
mov
adc
ja
loope
pop
and
mov
es
add
pop
shrb
add
lahf
fcoms
xchg
call
test
mov
test
int3
sbbl
sub
je
sub
clc
jbe
cmp
dec
mov
mov
add
add
add
add
sub
mov
mov
add
xchg
mov
xlat
push
mov
mov
pop
dec
aad
mov
jbe
sbb
aad
push
mov
inc
sub
mov
movsl
mov
hlt
repnz
mov
es
int
icebp
mov
and
add
add
add
and
sub
add
add
add
add
jno
inc
inc
add
add
push
lret
mov
fldcw
test
in
dec
shrl
jp
ret
int
push
xchg
push
lods
aas
add
lds
loop
and
mov
add
add
add
mov
add
add
aaa
mov
imul
cmp
daa
sbbb
add
mov
cli
sbb
push
push
inc
ss
outsl
add
cs
add
add
and
adc
sti
inc
sahf
or
dec
mov
pop
sahf
adc
pop
lods
xor
cmp
add
add
jo
pusha
add
pushf
xchg
test
cmp
mov
cmp
mov
jbe
sub
scas
adc
stos
xchg
ds
push
add
add
add
sbb
mov
test
cmp
movsb
jl
repnz
aas
repnz
jbe
mov
adc
dec
pop
push
push
fidivs
xchg
add
mov
lods
pushf
fstps
add
mov
subb
enter
add
and
add
add
push
jns
cmp
dec
scas
test
imul
js
fwait
pop
sti
pop
cmp
add
jns
mov
xor
in
adc
and
mov
adc
mov
out
repz
add
jmp
lahf
call
add
add
mov
add
add
cmpsl
or
add
add
rol
dec
and
mov
fmul
sbb
jo
repz
cmp
push
xchg
inc
add
or
idivb
xchg
addr16
pop
xchg
pop
out
mov
int
imull
mov
cltd
xor
jns
rol
inc
das
pop
sub
mov
lret
out
adc
lods
mov
popa
shl
sub
mov
cltd
mov
pop
cmp
fucomp
test
xorb
pop
add
add
add
mov
add
int
cwtl
xor
and
mov
add
inc
add
mov
cmp
add
add
add
pushf
jp
jmp
xor
negb
push
addl
mov
fnstsw
lods
inc
add
add
add
mov
inc
test
mov
rcrb
out
add
mov
and
inc
subb
out
or
mov
roll
push
and
add
add
dec
add
xor
jecxz
mov
or
add
add
add
jae
loop
xchg
jnp
and
mov
cli
bound
add
add
notl
aam
outsb
push
fwait
add
loope
stc
out
mov
jne
jmp
leave
sub
mov
adc
xchg
sbb
push
jmp
xchg
scas
enter
jl
das
push
cwtl
movsl
dec
fcoms
xlat
das
stos
mov
clc
dec
xor
pop
xchg
pop
pusha
add
add
xlat
lahf
and
mov
sahf
addr16
fistpll
mov
jb
push
sbb
outsl
pop
or
lret
stos
pop
stc
pushf
lcall
add
iret
xor
out
add
add
add
push
pop
jnp
mov
lods
lret
jnp
insl
js
mov
cmp
or
mov
sbb
icebp
shl
and
scas
outsl
or
add
cmp
aam
imul
add
ret
jne
dec
add
aad
add
incb
xchg
cmp
push
jb
sbb
lahf
mov
test
add
add
inc
add
add
pop
push
pop
xchg
sub
add
add
ret
adcb
xchg
add
cmc
mov
cmpb
mov
dec
dec
adc
int
das
adc
add
add
add
add
add
mov
inc
insl
out
sbbb
jp
scas
jmp
fldenv
lahf
cmp
test
sbb
jno
sbb
daa
inc
bnd
dec
fimuls
push
and
sbb
add
jbe
add
loopne
outsb
jbe
int3
add
movsb
mov
adc
push
add
dec
add
add
dec
repnz
lret
xchg
sbb
jecxz
ss
rorb
xchg
insl
mov
add
mov
add
fwait
mov
scas
mov
add
adc
in
xlat
xor
pop
push
mov
lds
jns
add
xor
jne
dec
add
test
repz
es
fidivs
add
dec
dec
add
add
push
notb
movsl
popf
insl
inc
add
inc
add
cmc
add
mov
mov
les
aaa
xor
leave
sbb
lret
mov
hlt
les
ja
xor
sahf
aaa
imul
es
xchg
sahf
movsb
nop
loop
sub
in
xchg
leave
or
add
add
push
xor
inc
dec
push
adc
in
add
out
pop
sbb
jo
add
js
fidivl
xor
add
push
sbb
push
add
jne
xchg
jae
jge
or
iret
das
in
push
out
add
jns
addr16
add
mov
add
mov
or
add
add
repz
jns
pop
xchg
mov
lret
in
dec
push
adc
add
and
and
les
mov
cmp
sub
dec
out
cmp
add
ljmp
fdiv
cmpsb
adc
jbe
bound
insb
add
mov
mov
mov
pop
je
cltd
sub
in
xor
stos
and
xlat
or
mov
insl
push
js
ja
xor
sbb
or
mov
xchg
sbb
add
jge
mov
inc
add
int
push
fidivs
jo
in
dec
xchg
or
cmp
mov
sbb
mov
add
add
add
call
jo
data16
cld
adc
fnsave
sbb
add
add
ret
ds
mov
xor
push
add
testl
mov
das
int3
xchg
sbb
fsubl
add
pop
rclb
add
add
imul
mov
lods
xor
mov
dec
or
add
cmp
add
lret
jo
add
mov
lea
ja
aaa
out
jg
idivl
pop
xchg
sub
mov
jbe
scas
loopne
fsubl
and
jg
cmp
leave
xchg
add
xchg
inc
sbb
add
xchg
or
adc
cmp
jo
add
push
add
mov
das
repz
out
dec
fdivrl
cmp
ljmp
mov
mov
iret
mov
mov
pop
mov
clc
pop
adc
adc
add
add
lods
jae
cmp
popa
cmp
inc
push
xchg
xchg
push
xchg
stc
sub
lods
in
ja
push
pop
call
pop
sahf
jae
jmp
inc
xchg
cld
in
shll
mov
aas
rcl
ljmp
lds
ja
add
adc
hlt
inc
add
stos
mov
mov
mov
adc
xchg
mulb
add
xchg
mov
lcall
xor
shll
pop
pop
test
cmp
gs
adcb
loope
jge
mov
shr
add
add
push
push
jge
in
pop
adc
mov
inc
push
jno
ret
push
cmpsl
xor
int3
fwait
sbb
addb
sbb
loopne
icebp
xor
sbb
mov
xchg
and
inc
jo
mov
stos
inc
popf
jnp
xor
nop
sub
mov
add
add
icebp
fiadds
push
jmp
add
push
rorb
push
xchg
inc
mov
movsl
out
aad
xchg
add
inc
repz
inc
in
lods
inc
hlt
pop
inc
shlb
rorb
out
inc
clc
out
cmp
add
cmc
insb
add
imul
int
es
mov
or
pusha
add
mov
xchg
in
lock
fbstp
mov
dec
orb
jecxz
xchg
fcmovnu
and
mov
or
mov
or
mov
ljmp
imul
fsin
add
add
add
xchg
mov
out
in
mov
add
add
mov
xchg
xor
orl
add
add
call
subb
add
cli
inc
add
add
repnz
int
adc
les
test
add
add
bound
mov
lods
repnz
mov
movsl
inc
and
push
mov
add
insb
add
add
int3
fnstsw
lods
and
xor
jle
or
mov
dec
bound
inc
mov
add
pop
push
push
pop
cmp
add
add
lcall
jne
mov
negb
in
ret
xor
push
adc
add
in
dec
adc
lea
push
ljmp
add
mov
femms
push
es
sub
dec
add
add
sti
lods
fsubrp
cmc
nop
cwtl
jb
ja
push
rorl
add
cmc
sub
mulb
fadds
add
add
arpl
add
add
add
and
loopne
dec
out
push
mov
ds
add
add
shll
dec
inc
lock
xchg
jmp
add
add
push
rorl
add
add
lods
in
cmp
lods
jb
fwait
sbb
push
and
mov
jns
jmp
add
add
add
lret
sbb
adc
adc
and
jmp
dec
add
cld
or
mov
mov
and
mov
xchg
cmp
add
add
orb
jnp
push
movsl
std
inc
add
arpl
ljmp
xchg
outsb
sahf
xchg
jb
lea
jae
hlt
push
repnz
lahf
inc
push
dec
dec
mov
popf
pop
mov
sbb
add
mov
add
add
sbb
and
call
inc
icebp
clc
rclb
aaa
mov
ja
add
push
cs
add
xlat
mov
andl
lahf
les
jns
mov
xor
insl
cmp
jmp
sbb
mov
fwait
adc
inc
stc
push
pusha
add
add
inc
add
add
arpl
xor
add
add
dec
loop
and
lock
pop
sbb
add
add
mov
add
add
clc
mov
ret
movsl
sub
add
add
sbb
cmc
sarb
repz
xlat
pop
push
cmpsb
stos
mov
mov
pop
mov
xor
pop
jo
add
xor
mov
jl
out
lahf
mov
add
xor
add
sbb
mov
mov
call
and
add
add
lret
mov
add
sbb
imul
in
pop
cmpb
negb
sbb
out
arpl
xchg
icebp
loopne
fdivrl
rcrb
mov
add
dec
movsb
jo
inc
add
mov
in
mov
sub
shl
add
add
push
dec
add
jne
mov
jle
push
pop
sub
dec
add
add
pusha
add
and
mov
add
inc
cmpsb
lods
sbb
mov
sbbb
xchg
jno
xor
mov
sbb
dec
pop
push
push
lret
enter
dec
sbb
dec
outsl
push
lret
or
mov
test
pop
gs
jle
xor
lods
xchg
sub
add
add
popf
mov
mov
mov
jmp
add
es
adc
bnd
in
dec
aaa
or
movsl
movsw
gs
ljmp
add
arpl
and
arpl
out
shrl
pop
push
pop
ficompl
sbb
add
jae
xchg
cmp
mov
cmp
add
adc
call
cmp
xchg
cs
add
lds
add
cmp
sub
insb
add
add
mov
and
sbb
gs
add
add
mov
inc
xchg
mov
mov
add
add
fimuls
jle
adc
lret
mov
outsb
loopne
jmp
cwtl
test
add
scas
stos
mov
loope
nop
sti
cli
or
loope
ljmp
lahf
mov
loope
int
inc
dec
sbb
dec
cmp
rolb
lcall
dec
xchg
or
mov
dec
icebp
mov
mov
mov
cmpsb
jl
enter
and
repnz
xor
dec
add
add
push
je
imul
sti
jbe
out
or
lods
lock
aam
movsb
shll
pop
jl
mov
add
add
add
adc
xor
inc
push
jle
leave
lahf
cmpsl
sbb
adc
add
add
mov
fcoms
pop
and
in
mov
pop
jns
xchg
mov
fcmove
push
adc
loope
inc
pop
hlt
xor
push
xorb
fisttpl
jbe
push
stos
inc
cs
outsb
jg
jp
adc
add
sub
jmp
adc
ja
int
pushf
scas
add
add
adc
ficompl
mov
cld
cmp
mov
shrl
enter
jno
scas
jg
test
cmp
out
mov
jbe
xor
sub
xor
enter
adc
movsl
shll
add
add
divl
sub
jecxz
xchg
xor
pop
enter
ret
xor
xchg
mov
jg
scas
mov
add
add
add
mov
inc
outsb
test
jae
rclb
cmpsl
addr16
lods
iret
xchg
rcrl
hlt
add
mov
add
add
add
lret
mov
mov
xor
negl
push
mov
les
cmpsl
dec
add
add
cmp
shll
adc
and
mov
or
frstor
loopne
es
xor
mov
pop
sti
insl
bound
add
add
lds
mov
add
add
add
ljmp
add
add
mov
jp
fwait
icebp
pop
cmp
adc
test
sub
add
add
cld
push
mov
sbb
fidivs
push
arpl
pop
xor
cmpsl
jbe
movsl
xchg
lea
fldenv
mov
cmp
repz
stos
imul
fadds
lea
lea
jbe
mov
ds
mov
ret
rol
or
popa
xor
shl
ja
stc
into
lcall
fstpl
insl
test
lret
mov
push
test
jae
aam
add
negb
dec
dec
push
ret
mov
mov
add
add
inc
lret
clc
mov
cld
add
mov
add
mov
icebp
adc
add
add
bound
dec
jmp
sub
mov
add
xor
clc
pop
rcrl
and
mov
call
std
stc
jnp
xor
push
outsl
nop
jecxz
shrl
add
cmp
ljmp
mov
add
add
add
mov
jge
xchg
sbb
add
add
and
xor
xchg
add
push
shll
add
cmp
add
add
mov
add
or
jmp
popa
sub
push
xchg
add
cld
and
add
add
add
or
lret
cmp
lds
into
add
in
dec
ss
sbb
fists
pop
icebp
mov
inc
lods
inc
jl
cmp
add
pusha
add
xor
in
mov
into
and
cmp
mov
popa
sbb
cli
inc
lea
out
add
add
jl
adc
repnz
mov
add
xlat
lea
xor
push
dec
mov
pop
ja
fldl
add
push
jne
shrb
insl
xchg
adcl
add
add
mov
frstor
ja
shll
mov
pop
cmp
jns
jecxz
jge
imul
or
aaa
into
ret
fldl
dec
sbb
xchg
cwtl
sub
mov
out
enter
add
loop
fcomps
fsub
push
jb
xchg
pop
or
mov
and
mov
add
add
test
rcr
xor
lea
icebp
loope
mov
add
ss
fnstsw
loopne
stc
pop
roll
cld
icebp
dec
add
add
fmull
push
sbb
push
rol
sbb
sbb
jo
cmp
lahf
insb
add
add
add
push
ja
adc
pushf
mov
pop
fucomp
pop
sbb
add
mov
add
add
loope
sarb
lret
inc
add
mov
rcrb
sti
mov
pop
loope
sbb
pushl
xchg
dec
push
test
push
add
adc
mov
insl
je
mov
mov
add
mov
mov
pop
xchg
dec
add
mov
fists
or
add
cld
cmp
mov
sub
mov
cs
pop
in
inc
add
add
icebp
ficoms
pop
cli
cmp
insl
andl
xor
adc
and
mov
mov
imul
push
jno
in
ret
lret
cld
pop
adc
add
add
add
jge
xor
ljmp
ja
ret
arpl
addr16
mov
lea
outsl
mov
and
mov
cmpsl
aas
mov
add
adc
fistpl
clc
cmp
push
in
loop
es
sub
add
imulb
add
add
ficoms
add
dec
mov
mov
or
add
add
enter
xchg
imul
or
sbb
sbb
xchg
or
adc
mov
mov
mov
add
cmp
vpcmpgtb
mov
push
sarl
cltd
outsb
xchg
dec
aam
add
pop
mov
rcrl
pop
aam
out
sti
adc
push
jne
jne
rorb
cmp
mov
ud2
adc
mov
fiadds
sbb
ljmp
add
imul
dec
roll
add
mov
in
in
jmp
mov
pop
cmp
mov
sahf
push
and
add
add
pop
hlt
jns
mov
adc
fiadds
js
cmc
push
cld
test
cmp
mov
mov
ds
loope
lods
and
pop
push
sbb
add
and
add
add
xchg
add
add
add
outsb
sub
lea
enter
aam
shlb
sub
add
add
fdivl
loop
cwtl
adc
jmp
sbb
mov
enter
in
push
adc
or
js
stc
mov
add
add
add
add
add
add
jg
scas
aam
sahf
and
jno
jecxz
sahf
stc
scas
xor
xlat
mov
add
cmp
test
das
cmpsl
es
loope
jecxz
add
add
cmp
mov
bound
mulb
sbb
add
adc
add
xor
jbe
add
mov
add
pushf
mov
ret
cmpsb
orl
jne
add
add
add
and
add
add
add
add
add
mov
dec
daa
inc
into
popf
add
pop
cmp
lea
add
mov
cmpl
xor
ja
repnz
cmp
sbb
dec
loope
in
dec
add
add
in
and
mov
in
lock
mov
mov
push
out
xchg
enter
popf
xchg
inc
add
add
pop
xchg
sbb
pop
dec
ficompl
mov
lea
push
daa
test
loope
mov
pop
push
push
fistps
lcall
sbb
popf
js
test
jmp
jmp
sub
sarl
or
dec
pop
jno
test
addl
push
daa
or
mov
or
add
add
add
xchg
shl
sahf
arpl
insb
add
add
out
es
add
lds
add
add
int
mov
fidivs
into
inc
mov
or
pop
inc
add
add
sub
and
loope
iret
in
rclb
add
add
gs
ret
dec
add
add
fdiv
lods
mov
sbb
lahf
push
pushf
mov
mov
sbb
int3
fdivl
movsl
xchg
jl
lahf
in
gs
movsb
mov
jle
xchg
fdivl
gs
inc
shll
repz
or
add
and
add
add
adc
test
je
loop
jne
test
add
aad
test
jae
stos
mov
add
add
lea
adc
fcomps
push
dec
lods
test
mov
xchg
mov
sbb
pusha
add
add
nop
mov
add
push
inc
dec
dec
add
add
push
mov
sbb
push
xor
add
sti
dec
rdtsc
lcall
mov
das
add
mov
push
pop
lret
addb
data16
cmp
clc
push
jl
adc
orl
cmpsb
fistl
xchg
lock
jge
xor
fcoml
xor
jns
sbb
movsb
jmp
insl
mov
push
add
jo
popa
jle
push
sarb
cmp
and
sub
add
add
add
mov
adc
setl
jg
jle
or
mov
or
add
add
js
jnp
push
loopne
iret
pop
and
mov
cmpsl
mov
add
loope
ljmp
notl
mov
sbb
lods
jns
and
bound
pushf
aaa
push
stc
rcrl
dec
call
add
dec
add
nop
scas
cmpsb
push
aas
mov
lea
pop
aaa
sbbb
insl
dec
add
loopne
popf
add
popa
fnsave
cmp
add
add
hlt
fmuls
inc
add
add
jge
gs
icebp
int3
xchg
mov
jmp
cmc
push
xor
insb
add
imul
mov
xor
xor
add
add
icebp
mov
xchg
add
mov
mov
leave
lea
lret
test
push
ret
push
sbb
inc
idiv
jg
mov
push
in
call
add
add
add
or
mov
cmp
add
mov
js
or
sti
out
jmp
mov
das
mov
in
maskmovq
testl
dec
add
dec
movsl
dec
dec
add
mov
add
add
fisubl
push
hlt
cmp
ret
sub
sub
push
test
aaa
daa
int3
push
add
inc
mov
fdivr
repz
sub
and
dec
sub
cmp
add
add
dec
add
add
mov
sbb
add
add
add
or
add
aam
xchg
inc
mov
jp
hlt
sub
add
add
mov
mov
add
int
je
imul
enter
stos
add
add
and
mov
mov
test
jno
mov
xor
cmp
cmp
jne
pusha
add
loope
xchg
in
mov
xchg
lcall
mov
test
add
ds
xchg
call
or
hlt
sar
add
add
rolb
lds
adc
inc
xor
mov
in
inc
cmpsl
stos
ljmp
add
jmp
cmp
je
arpl
jb
gs
mov
push
lods
cmc
adc
mov
xor
testl
add
mov
scas
sbb
cs
jecxz
insl
loop
mov
mov
mov
add
add
mov
out
add
mov
inc
sbb
add
add
lret
std
sbb
out
add
add
push
scas
add
add
add
lcall
xlat
insl
je
cmpsl
leave
data16
adc
inc
or
add
mov
adc
add
jge
cwtl
inc
enter
int
mov
add
inc
cmc
test
neg
jl
std
dec
add
add
mov
in
pusha
add
add
dec
add
add
fcmovne
divb
mov
ficoml
mul
mov
cli
push
jmp
add
jmp
js
mov
out
cs
sbb
push
sub
pusha
add
add
sbb
lret
arpl
jb
int
orl
call
fldl
aaa
push
lahf
xor
mov
xchg
mov
add
lds
lret
and
jns
outsl
pushf
insb
add
imul
cmp
add
add
sahf
inc
aad
out
out
mov
int
pop
cmp
add
add
lock
cmp
int
sbb
roll
xlat
in
cwtl
xor
sub
add
add
scas
xchg
pushf
in
inc
add
add
fildl
arpl
adc
out
mov
add
lods
pop
lock
hlt
mov
daa
les
adc
sbb
inc
jno
pushf
scas
lods
sbb
mov
add
push
stos
lods
cmp
add
add
mov
mov
add
mov
add
lock
cmp
lea
adc
add
mov
sub
pop
imull
add
leave
shl
les
dec
ss
xlat
popf
dec
gs
inc
mov
fsubs
add
dec
sub
scas
cmp
add
adc
add
add
loope
mov
jno
clc
pusha
add
add
pop
xchg
movsl
xchg
xchg
sub
adc
push
cmp
ret
rclb
int3
mov
jno
sbbl
fdecstp
mov
mov
push
jae
add
add
and
bound
add
cmp
ljmp
movsl
mov
sub
das
inc
stos
repz
sbb
test
add
add
mov
loopne
mov
stc
sbb
xor
into
lahf
add
movsl
in
xchg
and
add
add
add
push
add
aas
aaa
bound
pusha
add
add
adc
jns
leave
lahf
outsl
insl
xor
push
ffree
call
xor
neg
sub
scas
mov
add
add
test
mov
sbb
pop
gs
or
mov
adc
push
movaps
add
add
jae
daa
lret
sbb
sub
pop
or
mov
and
mov
scas
pop
inc
jo
adc
inc
push
mov
add
add
xor
cmp
push
arpl
fidivrl
xor
mov
cmp
ret
sarl
and
mov
mov
sbb
pop
jecxz
cmp
and
scas
or
adc
mov
add
add
mov
aam
movl
add
add
add
xchg
mov
or
mov
mov
or
mov
pushf
cmp
nop
pop
jbe
repnz
add
add
push
sbb
jl
pusha
add
add
mov
pop
out
fdivrl
push
push
fldl
pop
iret
mov
jbe
mov
sub
sub
xchg
pop
xor
out
std
dec
add
aas
pop
stc
xor
jo
into
dec
add
add
xchg
test
aam
add
or
add
add
mov
rclb
pop
pop
sar
stos
sub
clc
sbb
push
loopne
enter
and
mov
adc
jns
pop
jmp
add
sarl
add
add
push
push
mov
add
add
add
adc
xchg
sbb
dec
pop
gs
jns
add
mov
xor
add
out
cs
pop
repz
call
roll
add
je
or
mov
pushf
and
add
add
add
add
add
mov
pop
sbb
pop
out
inc
or
out
fwait
xor
mov
add
movsl
dec
idivl
sbb
mov
movsb
sub
add
add
pop
imul
lret
movsb
shll
dec
push
mov
into
cmpsl
inc
les
push
dec
adc
mov
add
ja
mov
jle
jp
add
add
sbb
xchg
push
fwait
cltd
rorl
add
add
jo
aaa
add
cwtl
insb
add
imul
and
mov
mov
dec
xor
add
add
cwtl
fcoms
cli
iret
mov
add
add
adc
add
adc
aad
dec
aas
inc
mov
mov
jb
and
mov
xorl
popa
dec
sbb
xchg
out
xchg
jo
loope
into
jo
xchg
lods
or
add
jle
adc
push
and
cmpsl
push
lods
es
lods
fimull
mov
repnz
jge
sub
pop
daa
not
xchg
gs
inc
push
sub
das
arpl
ds
mov
popa
test
cmp
push
jbe
lcall
int
push
js
lods
pushf
push
imul
icebp
adc
mov
xchg
mov
js
test
add
repnz
push
das
mov
in
and
and
loopne
mov
add
ja
or
sti
push
xlat
inc
aad
nop
insb
add
add
cmpsb
insl
add
add
xor
mov
movsb
mov
sub
pop
or
mov
pop
sbb
subb
pop
ret
mov
jo
scas
xchg
xorb
int3
movsl
or
mov
and
add
add
mov
jge
cltd
sbb
xor
xchg
aam
scas
cmp
pop
fistl
push
cmp
mov
add
ljmp
es
jl
inc
sbb
call
out
mov
pop
out
loopne
adc
sub
mov
outsl
sti
lcall
fisttpll
add
add
add
mov
aaa
sarb
jmp
neg
ljmp
add
and
push
push
mov
outsb
test
and
mov
add
sbb
or
mov
cwtl
mov
cltd
cmp
add
add
aaa
push
loop
call
lret
in
add
pop
adc
pushw
add
jne
cs
mov
add
add
cmp
adc
pop
imul
and
push
xchg
inc
push
mov
mov
sar
out
add
add
cld
sub
add
add
lock
adc
add
xor
add
add
jmp
add
fisubl
add
test
iret
pop
pop
add
add
add
dec
xor
scas
sbb
nop
cmpsl
fisttpll
addl
lcall
insb
add
inc
or
add
add
jecxz
lods
nop
pushf
pop
lock
mov
cmpsl
rcrb
jecxz
in
mov
mov
or
in
lret
adc
add
add
enter
dec
add
adc
push
subb
fistpl
leave
dec
test
ret
imul
push
dec
xchg
mov
cs
xcrypt-ctr
cmpsl
sbb
and
lret
push
movsl
and
js
gs
movsb
fsubr
cmp
sub
ret
add
pusha
add
adc
sub
add
add
mov
mov
jb
mov
not
push
mov
sub
add
add
std
out
xchg
inc
jge
adc
push
push
movl
out
aam
mov
add
jle
push
test
mov
mov
cmp
add
dec
repz
push
add
fdiv
sbb
addr16
out
je
mov
sbb
clc
adc
es
out
lea
decb
dec
add
mov
xor
adc
ss
aaa
lcall
add
ret
or
add
and
mov
mov
cmpl
lret
and
mov
je
push
lret
and
xlat
addl
test
fstps
jmp
add
add
insl
cmp
fnstenv
jmp
dec
add
add
push
mov
dec
mov
add
add
pop
mov
sbb
add
sbbl
or
fwait
and
add
add
xchg
shr
and
add
add
div
sbb
lods
xor
aaa
fstl
movsb
stos
push
add
dec
pop
movsl
xchg
push
sbb
push
jb
int
pop
in
push
cmpsl
sti
neg
xchg
dec
lock
gs
add
add
pop
movsl
call
pop
fisubs
add
add
cmp
mov
mov
add
fcmovnbe
movntps
inc
add
jp,pn
adc
add
push
jmp
hlt
imulb
lods
cmp
add
add
jno
clc
and
std
in
inc
add
xchg
pop
ret
add
add
sub
bnd
mov
aas
push
cmpsl
pop
sbb
sbb
jp
fisubrl
adc
add
std
inc
mov
idivb
mov
shrl
add
inc
add
xchg
or
mov
xchg
inc
inc
aaa
flds
out
aaa
push
adc
lods
call
fnstcw
add
add
jmp
rcr
push
mov
das
xorb
sahf
mov
and
mov
xchg
mov
lret
cmp
mov
test
sub
add
add
or
add
add
pusha
add
add
divps
cmpb
and
mov
xlat
mov
repz
add
leave
xchg
mov
add
add
add
add
ds
add
add
stos
or
in
ret
fmuls
cmc
mov
cwtl
mov
adc
pusha
add
outsl
mov
add
rorb
add
add
jmp
jge
outsb
inc
jle
add
jb
outsb
repnz
andb
and
popf
pop
cmpb
push
pop
lds
cmp
mov
add
add
dec
aad
jge
daa
jmp
add
xlat
int
sub
sbb
sahf
iret
xchg
ja
add
add
pop
out
bound
incb
or
push
sub
mov
xchg
test
sbb
fldcw
jle
std
in
ret
pop
pop
loopne
mov
jge
or
ja
ret
push
punpcklbw
mov
jae
add
jns
add
add
add
test
dec
ljmp
add
in
outsl
xchg
clc
push
xor
subl
mov
lcall
cli
xlat
mov
repnz
jbe
pop
mov
jl
outsl
push
add
mov
stc
stos
in
stos
jecxz
mov
cmp
jge
shrb
clc
fdivr
loopne
loopne
cmp
lret
dec
mov
mov
pushf
jae
inc
push
arpl
add
push
in
cmp
or
mov
mov
mov
and
notl
or
cmp
jmp
aam
xlat
shlb
mov
stos
inc
or
mov
cmpb
mov
pop
pop
mov
cmp
scas
insl
mov
fildl
into
sahf
cli
jg
ret
cmp
mov
jo
jmp
adc
add
lds
add
xchg
addr16
repnz
cmc
shrl
mov
add
push
fdivl
divb
fidivs
mov
push
inc
push
jmp
stos
adc
jmp
add
in
rolb
cltd
enter
pop
xlat
jne
inc
add
shll
add
add
arpl
xor
add
mov
pop
push
add
add
mov
inc
add
add
jno
sub
mov
icebp
in
icebp
imul
pushf
movsl
jns
xchg
pop
and
add
add
out
ret
pop
jns
cmp
gs
lcall
xor
ficomps
cld
in
mov
cmp
popa
mov
pop
sub
mov
sbb
add
cwtl
pusha
add
add
je
stos
fimull
mov
xor
mulb
mov
mov
xor
jle
aam
push
mov
clc
and
mov
iret
lods
and
push
loope
add
sarl
xor
out
sbb
cmp
sahf
lds
hlt
daa
cmp
add
add
add
sub
mov
imul
test
sub
add
add
push
sub
dec
subl
add
push
icebp
leave
pop
lahf
or
mov
mov
push
outsl
pop
mov
add
jns
xor
add
jne
dec
ret
std
lret
xor
aam
jecxz
mov
dec
mov
shll
cmp
jl
mov
add
add
pop
je
add
push
in
imull
add
jl
add
mov
rorb
clc
sub
add
add
adc
andl
adc
movsl
call
add
add
push
or
adc
sub
mov
pop
aad
inc
add
add
add
push
fistpll
mov
jae
sbb
add
xlat
stos
call
lret
bound
mov
sub
jecxz
or
in
or
add
pop
negl
or
add
add
in
cmp
add
add
jmp
leave
cmp
dec
repnz
add
add
cmpb
add
ja
sub
add
add
orl
lcall
fnstsw
add
add
ret
mov
sub
adc
roll
mov
mov
push
lods
pop
ret
and
pop
and
outsl
call
fistpl
mov
stos
and
mov
jae
lcall
clc
and
add
push
sbb
movsb
repz
add
jnp
add
add
pushf
xchg
cli
sbb
pop
push
dec
cmp
add
sbb
rclb
pop
test
es
jg
jg
add
add
add
pop
sub
loopne
out
mov
inc
out
xchg
jb
sub
frstor
mov
out
pop
int
xchg
adc
hlt
xchg
je
pop
dec
inc
xchg
call
bound
xchg
mov
inc
adc
rcrb
cmp
dec
mov
inc
add
add
movsl
pusha
add
push
das
xchg
and
push
add
mov
std
stos
iret
ds
xor
outsb
sahf
and
cld
ficompl
sbb
xlat
jns
movsl
dec
jns
adc
test
out
mov
inc
add
add
add
lahf
movsb
cli
pusha
add
add
pushf
sbb
cs
cwtl
cmpb
add
add
jb
cmp
add
mov
sahf
cmp
adc
add
ds
sbb
cmp
fdiv
insb
add
insl
add
add
add
xor
mov
mov
add
mov
mov
dec
add
mov
sti
add
data16
fstl
mov
jnp
mov
adc
lods
push
mov
adc
add
add
and
mov
xor
xor
xchg
mov
inc
add
xchg
bound
mov
add
shlb
stc
mov
fiaddl
xor
outsl
jle
dec
test
add
rol
push
add
add
add
mov
sub
pop
xchg
mov
hlt
mov
pop
call
mov
icebp
mov
leave
cmp
sti
sbb
cmpsl
pop
inc
shr
shll
xor
subl
push
pop
mov
sbb
add
add
and
mov
xor
add
jae
sahf
mov
add
add
adc
xchg
adc
movsb
pop
add
add
and
mov
xchg
icebp
cs
mov
sti
mov
and
add
add
out
mov
inc
add
add
int
jle
add
add
test
jle
shrl
add
lods
xor
addl
mov
nop
cmpsb
cmp
inc
add
out
pushf
data16
sub
mov
mov
mov
add
lods
and
or
movsl
ret
popa
jo
dec
in
call
push
push
sbb
jo
call
add
add
add
add
xchg
cmpsb
jne
inc
xor
mov
lock
sbb
cmp
jmp
jmp
scas
mov
xchg
xchg
mov
jnp
jno
dec
lock
mov
add
std
flds
push
cli
test
xor
int
sub
add
dec
leave
outsb
jl
outsb
cmp
call
data16
aad
aas
lods
fidivrs
add
test
ds
aas
jg
xchg
in
test
mov
push
adc
mov
call
pop
decb
outsl
int3
cmp
in
mov
push
cmp
push
jne
xchg
cwtl
cmp
mov
lret
xchg
lcall
mov
cwtl
pusha
add
mov
add
icebp
xor
mov
stos
loope
rorl
pop
cmp
gs
andb
imul
loopne
adc
dec
xchg
sub
in
lock
lods
vpminub
and
mov
xchg
data16
test
or
mov
add
add
add
in
cs
push
pop
pop
mov
pusha
add
add
sbb
pushf
sbb
and
and
mov
cmp
inc
test
das
push
or
test
ljmp
mov
cmc
cmp
xor
add
mov
mov
xchg
mov
lret
mov
mov
mov
add
add
sub
pusha
add
add
popf
xchg
sbb
aad
lds
add
dec
or
add
add
add
add
xor
mull
pop
xor
lret
mov
mov
inc
add
add
shlb
inc
ficoms
loopne
add
add
add
clc
cmp
xor
ss
imul
cld
repnz
cmp
fldl
shrl
add
fwait
and
mov
pop
cmp
dec
add
xor
or
fcoms
dec
add
mov
jo
sub
mov
sarl
mov
jge
push
jl
mov
mov
test
inc
add
or
mov
and
mov
add
add
loopne
push
ss
cmp
dec
mov
add
add
movsl
sbb
add
dec
clc
adc
xor
movsb
dec
add
inc
add
add
sub
xor
xchg
outsb
add
add
inc
mov
mov
or
dec
add
add
add
add
cltd
imul
jae
lahf
jb
roll
test
fwait
lds
mov
jl
mov
add
add
inc
xlat
and
mov
in
insl
ret
mov
add
dec
add
add
lcall
aas
out
cmp
insl
push
lock
add
mov
push
mov
add
add
stc
add
add
add
cld
inc
inc
mov
jmp
test
dec
lea
aam
dec
test
lock
xor
es
dec
xor
mov
jge
mov
mov
rcrl
lods
pop
lcall
fdivrs
pop
ljmp
mov
mov
add
add
or
pushf
push
mov
xchg
mov
sub
add
fimull
pop
sti
and
int3
sub
add
add
push
test
cltd
xchg
leave
sti
stos
lcall
iret
pop
adc
jne
add
add
pop
xchg
pushf
xchg
sbb
jle
mov
add
lods
mov
add
sub
add
inc
mov
mov
mov
mov
jecxz
cld
ret
dec
xor
bound
cwtl
xchg
jnp
inc
and
add
add
mov
sbb
xchg
and
popa
mov
and
add
and
add
add
add
adc
mov
lahf
rorb
add
ss
mov
cmc
fcmovb
push
das
dec
pop
cs
scas
mov
add
insb
add
ret
fwait
or
paddq
add
push
jo
ds
out
mov
mov
add
add
xchg
or
push
outsb
cmp
icebp
mov
push
adc
arpl
push
cmpsl
jge
test
xor
outsl
push
es
mov
add
lods
js
mov
mov
xlat
push
pop
das
scas
mov
add
cs
inc
jg
das
cmp
shl
jg
sbb
add
test
pop
fstpl
lret
nop
cwtl
or
ja
sub
inc
cld
aam
cli
inc
sbb
rcrl
in
pop
jmp
stc
jp
jno
xchg
imul
mov
fwait
out
jbe
mov
popf
dec
xchg
mov
lahf
test
add
adc
add
add
add
sbb
add
push
aaa
imul
xchg
lcall
add
add
lock
or
add
ljmp
mov
sub
add
add
into
xchg
sub
push
ret
add
add
das
call
in
push
jb
jl
dec
imul
jp
sbb
add
add
fildll
sbb
add
push
in
add
ja
jnp
aaa
and
add
add
orl
add
add
add
loopne
shll
cs
fldcw
add
add
hlt
les
xchg
sahf
xchg
jecxz
lcall
fwait
lahf
mov
dec
roll
popf
ret
cmovl
mov
adc
mov
dec
add
add
jno
xor
add
add
out
fcos
mov
add
mov
or
mov
icebp
sub
adc
cmp
xchg
push
imul
imul
and
push
aad
xchg
cmc
sub
gs
xchg
pop
jle
pop
inc
lahf
xlat
xor
add
add
dec
add
add
add
add
into
mov
arpl
sbb
add
sarb
stos
fwait
mov
sbb
inc
add
aaa
lock
mov
in
inc
sbb
add
aad
pop
lock
pop
xchg
fisttps
mov
dec
fadd
fimull
add
cmc
outsl
xlat
xchg
ror
aas
stos
sub
add
stc
inc
insl
cvttps2pi
mov
add
add
pusha
add
cmpsb
xchg
ret
or
jnp
sub
add
add
mov
pop
fwait
rcll
ret
adc
jb
movsb
in
aaa
xchg
pop
sub
imul
add
mov
cld
jne
add
mov
jno
or
xchg
fisubrs
lea
inc
out
ss
jl
add
add
ss
sbb
aam
mov
add
add
add
add
push
imul
jmp
subl
loope
mov
cmp
inc
add
add
push
or
clc
mov
mov
movsl
cmpsb
jns
adc
and
repz
add
add
mov
in
add
add
add
add
sahf
loope
cmpsl
sub
mov
cld
add
and
mov
xor
stos
leave
nop
mov
inc
add
add
xchg
push
daa
add
mov
push
lods
xor
push
dec
xor
hlt
lock
add
add
sub
mov
sub
sbb
js
xchg
cwtl
mov
dec
ret
push
test
push
fcoml
sub
mov
insb
add
adc
mov
xor
aam
add
add
mov
lods
jle
mov
add
stos
adc
sub
jne
mov
ficoml
xor
mov
add
add
add
cmp
inc
inc
add
pop
push
enter
insl
pop
adc
mov
roll
or
mov
cmpsb
sbbb
pop
mov
out
loop
jb
mov
fmuls
mov
add
sbb
mov
lahf
jae
arpl
fdivrs
pop
sbb
call
sbb
nop
mov
in
loopne
add
lcall
add
add
fmull
add
add
insb
add
add
das
cmp
shlb
add
add
pop
stos
add
out
sub
ret
test
ljmp
adc
inc
sub
add
add
inc
jno
or
jecxz
xchg
in
rclb
adc
xchg
arpl
xchg
cmp
shl
mov
fnstsw
lea
out
mov
enter
add
fisttpll
or
mov
jnp
jmp
lret
int3
outsb
fcomi
pushf
inc
xchg
movsb
scas
xor
add
mov
stc
inc
fisubrl
add
mov
jg
xchg
fmuls
ret
push
decl
jmp
add
sbb
dec
cmc
xchg
cmpsb
cmp
les
inc
push
or
mov
xlat
jbe
xor
push
pop
and
sbb
inc
add
out
lods
sub
add
add
ret
pop
jns
mov
sub
add
add
add
mov
mov
pop
scas
outsb
mov
sub
call
pop
cwtl
cmp
loop
mov
ret
sbb
mov
mov
add
mov
xor
mov
dec
ljmp
insb
add
add
mov
lods
call
cld
mov
popa
mov
mov
mov
lcall
cmc
sti
mov
jb
repz
mov
or
popa
out
scas
mov
cmp
or
mov
mov
mov
sarl
pop
dec
jbe
push
jb
pop
icebp
mov
imul
mov
xchg
jne
dec
add
enter
add
negb
add
arpl
mov
inc
repz
add
mov
add
add
or
and
cwtl
fadds
loope
or
cli
les
push
push
loopne
daa
xchg
je
adc
push
sub
fucomp
jbe
movl
xchg
jne
clc
mov
add
lods
aam
and
mov
movsl
lods
jne
push
fisubs
add
add
icebp
pop
pop
jo
add
jmp
xchg
movsb
cmp
fiaddl
cmpsl
out
xor
and
xchg
pop
mov
sbb
jge
mov
add
add
ror
leave
or
add
das
int
int
mov
jno
stos
add
sub
mov
in
add
add
add
mov
jb
ja
push
cltd
jno
dec
jmp
add
pop
repnz
pop
mov
jl
inc
hlt
cmc
push
or
mov
flds
add
jbe
add
std
jp
imul
xchg
push
ret
stos
movl
lods
fwait
mov
movsl
push
fptan
pop
ret
sbb
push
test
dec
add
add
push
xlat
push
rcrl
push
loopne
jp
leave
sub
add
add
std
or
mov
adc
outsl
arpl
gs
call
rorb
add
add
cmp
mov
test
aam
or
xor
rcrl
test
cmp
jnp
push
test
or
add
inc
add
mov
inc
loope
add
adc
add
add
int3
push
dec
cld
stos
mov
je
mov
cmc
inc
out
or
mov
dec
jo
add
add
ffreep
cmpsb
lods
jae
pushf
ret
inc
or
pop
mov
add
add
mul
int3
mov
das
push
mov
sbb
pop
inc
lock
add
add
or
mov
add
aam
jno
add
jnp
add
mov
adc
add
mov
mov
xor
sub
mov
mov
mov
test
jne
lods
cld
push
pop
popa
mov
xchg
cs
jle
scas
pop
loop
dec
aad
mov
mov
push
inc
jge
push
arpl
xchg
enter
mov
mov
mov
xor
outsl
jo
mov
pop
dec
add
add
xor
cmp
popf
xchg
cld
xor
pop
incl
jl
lods
xor
out
fdivrl
imulb
add
fwait
les
pop
pusha
add
add
jge
inc
aam
jnp
mov
add
add
adc
dec
in
packuswb
push
in
cli
mov
add
sub
mov
mov
and
js
add
mov
adc
push
ja
ficoml
xor
adc
add
mov
mov
cmpb
xchg
mov
lea
in
mull
addb
jne
ficoms
sbb
pop
gs
add
mov
pop
mov
movsb
sbb
out
loopne
adc
push
inc
add
dec
add
bound
add
add
add
jp
sti
call
inc
add
add
add
mov
jbe
scas
pop
dec
jns
cmp
insb
add
fldenv
lea
jnp
subl
add
mov
les
movsb
ljmp
jg
and
shlb
add
lods
ds
jo
iret
sbb
repz
mov
les
add
shrl
add
andl
or
add
jb
test
add
mov
test
add
add
outsb
sbb
sbb
push
mov
test
xor
test
xchg
xchg
cltd
jg
xchg
stos
inc
add
add
loop
or
add
add
insl
pop
daa
cmp
test
inc
or
filds
add
mov
clc
fidivrl
jne
jle
and
add
add
rcl
rcll
dec
add
add
push
int3
orl
add
add
push
sti
stc
int3
pop
sub
mov
and
cmpsl
scas
dec
loopne
mov
pop
das
aad
imul
orl
add
mov
imul
mov
and
cltd
adc
add
add
call
ret
inc
imul
cmp
add
add
pop
test
addb
add
mov
mov
mov
add
push
test
cs
pop
inc
add
add
add
mov
data16
adcl
xchg
jno
fsubs
sub
add
mov
lds
jmp
add
add
leave
icebp
in
cmp
add
add
pushf
jp
mov
or
xchg
aas
cmp
and
dec
jne
push
ret
scas
paddw
shrb
dec
mov
addl
add
add
stos
add
add
add
out
movsl
lret
mov
push
add
add
add
ret
and
add
add
dec
mov
loopne
jp
sbb
sub
jmp
add
out
outsb
push
addr16
cmp
jbe
cmp
add
add
push
adc
scas
bound
pop
outsl
cmp
inc
xor
jle
add
add
add
test
hlt
mov
jno
lods
leave
pop
sahf
inc
add
add
or
add
add
add
mov
testl
and
xchg
mov
cmp
mov
add
cld
and
xchg
xor
push
jle
inc
pop
pusha
add
add
sbb
fdivl
in
stos
sub
jge
ss
mov
or
mov
aaa
bound
sub
mov
sbb
mov
push
dec
pop
xchg
xor
jne
popf
pop
sub
add
add
test
add
mov
inc
jg
ret
mov
fisubrl
mov
test
xor
rcll
dec
xor
rcl
and
pop
fdivr
adc
and
sbb
loop
dec
add
add
mov
sar
lahf
sbb
in
out
jp
mov
mov
pop
mov
sti
xchg
stos
push
fcoml
pop
xchg
das
and
fsubl
sbb
add
add
popf
jecxz
popa
xor
std
call
fnstcw
mov
orb
mov
int
scas
mov
push
aas
daa
pop
jae
lds
pop
pop
ficompl
sub
mov
or
mov
and
sti
xor
xlat
mov
adc
jecxz
les
incb
mov
fldl
sbb
rcr
pop
sub
add
adc
fisubl
add
out
das
mov
jl
cmpl
add
mov
pushl
cmp
jnp
gs
add
add
add
fldt
add
dec
push
hlt
or
push
movsl
popf
push
xchg
pop
xor
and
add
add
mov
or
add
add
push
ret
sbbl
pop
pop
dec
fcompl
push
xchg
outsb
and
push
fmul
pop
ja
mov
push
and
add
add
and
mov
xchg
hlt
lea
test
imul
cltd
cmc
cmp
sbb
adc
and
add
add
adc
inc
mov
adc
push
outsl
mov
shll
dec
add
add
cli
fwait
call
add
mov
push
stos
mov
inc
and
movsl
stos
push
cmpsb
xor
std
mov
cmp
push
cmp
andl
add
mov
bound
fisttps
add
add
das
mov
add
xchg
push
lea
jb
push
xor
sub
add
loop
inc
bound
iret
push
jns
cmp
xchg
setae
sbb
in
in
daa
mov
rolb
push
cld
sub
or
add
add
insb
add
mov
add
add
ja
mov
ret
dec
push
ss
add
add
inc
in
add
add
add
mov
pushf
movsl
xchg
mov
pop
mov
movsb
cmp
mov
int3
mov
dec
ror
sahf
cmp
stos
popf
add
test
add
add
inc
push
inc
inc
subb
add
add
rolb
add
adc
push
sahf
xor
andl
cmp
subl
dec
push
mov
mov
add
pop
cld
ja
add
jbe
test
add
lds
inc
cmpsl
mov
pusha
add
test
or
mov
mov
push
add
add
negl
mov
sub
add
add
mov
lret
push
imul
rcrl
sbb
add
cmp
push
int
mov
jae
mov
mov
addl
add
cmp
add
add
mov
out
jno
pop
xchg
in
and
xor
adc
mov
mov
jne
sbb
mov
cmpsl
jbe
fnsave
popf
adc
mov
adc
pop
mov
cmpsb
inc
pop
jns
fmull
add
jbe
inc
cmc
test
add
subl
adc
push
adc
adc
movsl
sbb
jns
lahf
shl
rcl
bound
stc
sub
add
add
sti
cmp
add
movsl
mov
in
pop
into
add
mov
orl
lahf
js
cwtl
xchg
jle
add
mov
xor
xchg
loopne
add
add
clc
pop
fwait
testb
add
mov
idivl
aad
rorb
add
add
scas
jb
add
mov
sub
add
add
mov
push
xor
test
xor
inc
push
loop
inc
xor
cli
cwtl
cmpsb
in
jge
inc
jl
add
mov
push
and
and
xchg
jb
dec
jmp
mov
lods
push
lds
aas
xchg
iret
enter
push
xor
pusha
add
add
mov
and
add
add
add
ja
imul
les
push
xchg
mov
lods
xchg
mov
jne
test
ds
jmp
adc
add
add
loope
out
jns
hlt
mov
pop
dec
pop
inc
cli
jle
aaa
push
iret
sub
add
add
add
dec
insl
sarb
add
mov
add
add
out
popa
inc
into
xor
add
fadd
inc
fwait
scas
loop
xchg
in
add
fldenv
clc
jmp
lea
add
mov
lret
dec
mov
cmp
cmpsl
in
call
adc
add
add
test
out
jb
inc
mov
test
mov
les
or
add
add
leave
jns
pop
pop
mov
add
add
add
mov
dec
cmp
nop
arpl
sub
add
add
dec
add
add
xor
stos
mov
cmp
add
add
mov
hlt
mov
es
add
hlt
xor
xchg
sub
mov
lods
and
mov
sub
or
call
scas
es
aaa
mov
dec
add
add
add
orb
dec
add
add
movsb
and
mov
mov
xor
add
mov
nop
in
and
sub
mov
add
lahf
add
mov
je
loope
dec
add
add
int
ss
pop
dec
xchg
in
and
mov
jg
or
mov
cltd
loopne
mov
sbbl
add
mov
add
add
iret
fwait
adc
xor
mov
sub
mov
out
xchg
sbb
filds
test
test
das
stos
cmc
push
mov
add
insl
sub
addl
scas
push
hlt
out
fisubrs
aaa
insb
add
mov
pushw
test
add
add
add
in
pusha
add
add
dec
test
outsl
xchg
xchg
mov
fidivs
jp
jg
add
mov
push
mov
aad
sbb
push
inc
cld
dec
add
add
xchg
push
jle
pusha
add
add
sbb
lock
stos
lods
cmc
mov
clc
iret
jnp
pop
ret
pushf
dec
add
outsb
cld
data16
mov
add
add
add
mov
add
adc
in
insl
mov
add
add
and
mov
adc
jno
adc
pop
int3
stos
test
mov
outsl
nop
and
mov
cmc
xchg
dec
into
sbb
adc
mov
inc
add
add
sub
mov
call
lea
add
add
fwait
adc
jge
imul
add
pop
sqrtps
cmp
je
cmpsl
mov
sbb
mov
add
sahf
inc
xor
arpl
mov
ja
jmp
push
es
push
sbb
je
mov
rcll
mov
leave
icebp
hlt
test
cltd
out
cmp
in
repnz
add
lahf
jmp
mov
jp
add
add
add
add
les
pop
fsts
sub
mov
mov
push
xchg
dec
movsl
mov
cmp
ja
aas
clc
mov
mov
mov
ds
cmp
mov
cmp
dec
repz
ret
ficompl
cli
pop
push
pop
int
aas
jmp
jmp
aaa
and
mov
cld
subb
bound
arpl
xchg
rcrl
rcrl
inc
add
mov
mov
push
movsl
aam
int3
int3
xchg
out
xor
add
add
fidivs
sbb
mov
add
add
fstps
mov
aas
ljmp
add
lods
add
aam
mov
add
add
or
iret
mov
aas
xor
xchg
pop
sarl
mov
scas
add
add
add
add
push
stos
fiadds
push
adc
sbb
add
pop
xor
sbb
add
push
stc
in
add
pop
aaa
decl
add
add
push
shl
and
mov
or
or
xchg
cltd
mov
add
add
dec
aaa
xchg
mov
pop
addr16
pop
inc
add
add
jle
repz
add
add
and
add
add
add
jo
call
es
in
ja
jle
xor
push
xchg
jp
ud2
xor
pop
xor
cmp
xchg
test
inc
and
and
add
add
test
js
add
out
push
cmp
rclb
sbb
lahf
jl
insb
add
mov
jg
pop
jp
je
in
mov
ljmp
cmp
pop
sbb
fnsave
sub
push
inc
cli
imul
add
std
loop
sbb
cs
and
rcrl
and
jp
jg
jae
aas
sbb
sub
mov
push
dec
add
add
or
add
add
add
ja
sahf
outsb
adc
fcompl
add
add
repz
add
add
imull
dec
add
fwait
les
inc
out
test
add
add
test
bound
iret
inc
add
add
add
cwtl
mov
push
das
push
push
test
dec
push
add
mov
add
add
xchg
in
jle
test
sbb
subb
fsubs
sbb
add
add
inc
nop
adc
loope
clc
sti
inc
add
add
jns
xchg
clc
mov
mov
gs
mov
add
add
test
add
mov
mov
mov
jge
iret
push
inc
cmp
add
add
das
pop
add
mov
adcl
add
add
push
sarl
xor
mov
add
enter
add
lock
push
cli
mov
jns
out
rolb
stos
xchg
cmp
shrl
push
cwtl
faddl
inc
jl
fcmovnu
pop
dec
sub
mov
xchg
insl
sbb
and
repz
imul
add
mov
adc
roll
sahf
jle
loopne
sti
outsl
je
aas
sub
add
lcall
negb
ds
mov
add
hlt
inc
add
add
adc
es
mov
add
add
cmpsb
out
cs
xchg
jmp
rcr
shll
add
jns
add
adc
imul
jle
movsb
movsb
mov
mov
in
xchg
in
push
push
xor
mov
bound
inc
or
add
add
pop
lds
inc
mov
add
int3
jle
add
add
test
fisttps
pop
cli
out
push
mov
or
jb
add
pop
ret
push
sahf
jp
mov
je
lahf
insb
add
add
inc
outsb
cs
inc
testl
iret
fcomps
sub
jae
adc
cltd
mov
outsl
push
andb
jno
xor
push
mov
mov
jo
add
mov
push
push
mov
sub
sbb
loope
inc
mov
add
mov
sahf
pusha
add
sub
mov
jbe
in
add
lret
pushf
pop
sbb
push
sub
add
stos
scas
nop
pop
pop
mov
in
pop
test
scas
je
ret
movb
add
mov
andl
mov
nop
or
add
add
adc
je
por
arpl
mov
icebp
cli
nop
mov
sti
push
lret
and
xor
add
sub
add
add
ret
add
add
add
stc
ret
add
add
call
fnop
lods
leave
cmc
jmp
add
push
cltd
je
pop
dec
jmp
push
cmp
sub
dec
clc
mov
icebp
xchg
das
mov
mov
add
test
inc
or
mov
push
test
mov
add
add
add
xchg
lret
push
call
add
lret
sti
subb
test
mov
and
mov
and
out
mov
cld
fists
decl
lods
out
dec
mov
dec
push
dec
clc
xchg
jecxz
ds
mov
movb
sti
lcall
aaa
insl
int3
icebp
mov
add
add
nop
aad
es
add
call
loop
push
push
adcb
dec
mov
aad
sti
aaa
jb
dec
adcb
outsl
stc
ficompl
xor
jecxz
cs
lods
jecxz
add
mov
add
js
insb
add
add
lock
mov
ds
mov
fiadds
cli
lea
das
pop
add
sbb
xor
loopne
jae
push
sub
add
add
int3
add
inc
ret
inc
inc
aam
adc
mov
addl
xorl
mov
lcall
inc
cmc
es
fldcw
xchg
stos
pop
je
mov
cwtd
jne
les
popf
cli
cmp
sbb
inc
mov
mov
lahf
scas
scas
dec
cmp
jae
pop
sahf
cltd
test
sbb
or
add
jae
xchg
imul
fsts
pop
movsb
nop
fnstcw
int3
repz
mov
add
xor
xor
aas
jno
in
sub
add
pop
xchg
dec
add
add
or
add
cltd
inc
add
jle
mov
ja
int3
dec
pop
jbe
add
add
sbb
adc
push
jmp
pop
dec
negl
jnp
xor
adc
inc
cwtl
daa
lcall
mov
push
mov
add
adc
or
mov
addr16
test
addl
add
mov
pop
dec
mov
xchg
ss
negb
push
pop
stos
shrb
adc
add
add
movsl
sarb
out
mov
add
and
xchg
std
fists
aas
mov
sbb
lahf
ja
jg
mov
rorb
mov
mov
add
add
mov
and
test
push
mov
add
ss
shl
pop
adc
ja
ret
out
outsl
mov
lods
cmp
jecxz
xor
add
popf
jb
xchg
and
add
add
add
repz
in
das
loopne
mov
add
aas
ss
add
add
or
add
stc
out
or
mov
dec
outsb
sahf
hlt
pop
iret
bound
jle
sub
mov
lock
push
or
add
xchg
dec
add
add
mov
sbb
add
add
in
and
mov
xor
rcl
or
add
add
add
sub
or
cwtl
mov
cmc
mov
pop
movsl
dec
stc
mov
jb
pop
dec
lock
xor
add
mov
ret
pop
stos
sbb
pop
adc
out
mov
shlb
xor
out
add
add
cmc
jge
jb
adc
jno
add
icebp
cmova
lods
aas
xchg
mov
add
add
je
adc
mov
nop
xor
mov
mov
adc
add
add
add
jge,pn
add
out
int
xor
aaa
or
sbb
jno
cli
cmp
pop
dec
stos
jl
ljmp
xchg
pop
push
es
add
add
pop
popa
pushf
out
scas
fstps
aam
out
xor
cmpsb
enter
bound
sub
pop
and
jne
add
inc
mov
inc
dec
xor
xchg
in
pop
mov
mov
inc
add
mov
inc
add
add
jge
ret
sahf
loopne
int
decl
mov
mov
pushf
outsb
fwait
xorb
sub
cmpsb
push
cmpsl
stos
mov
and
mov
sar
push
jp
and
stos
les
faddl
add
add
movhps
jmp
add
dec
jb
add
mov
in
jbe
or
mov
xor
xchg
xchg
push
into
mov
jecxz
pavgb
pop
and
xor
jns
cmpsl
out
mov
or
dec
ja
xor
cmpsb
aad
stc
sub
add
add
add
add
add
mov
xchg
lcall
inc
icebp
dec
out
fadd
inc
in
sbb
add
test
mov
and
xchg
dec
pop
in
push
test
outsb
fistps
mov
add
sbbl
jns
push
imul
xor
add
or
add
add
inc
mov
cmp
aad
arpl
push
sbb
xchg
cli
lea
iret
push
add
orl
mov
inc
push
jg
dec
xchg
lahf
mov
pop
jmp
adc
cli
and
add
add
or
jno
mov
bound
and
xchg
imul
add
add
xchg
jg
enter
mov
gs
inc
or
outsl
stc
sbb
sbb
fstl
test
adc
mov
cli
mov
punpcklwd
add
add
insb
add
add
mov
add
jnp
adc
or
mov
lods
sbb
jns
cmp
fcoms
cmp
add
jge
test
jp
arpl
add
fbstp
add
add
enter
add
sub
movsb
xorb
cmovge
add
pusha
add
add
ljmp
cmc
lds
hlt
mov
add
ja
int
adcb
lsl
mov
addr16
cmpsl
mov
mov
stos
ljmp
rcll
cmp
add
add
add
xchg
pop
push
push
rclb
es
les
enter
insb
add
std
push
ret
add
mov
xchg
icebp
cltd
repnz
sub
mov
adc
add
add
enter
mov
cmovl
mov
loopne
jge
xor
add
xchg
faddp
les
mov
les
call
imul
mov
push
and
rolb
xchg
inc
xchg
gs
btr
cmp
fisttps
int3
adc
inc
xlat
data16
popf
mov
add
add
add
add
loopne
mov
pop
sub
mov
mov
mov
xor
add
add
push
cmp
xchg
cld
xorb
inc
add
scas
xor
cmp
in
cld
sub
mov
in
aad
mov
fnsave
push
mov
loope
addr16
scas
std
test
add
sub
cmp
add
adc
mov
sub
mov
mov
bound
je
aad
add
mov
xchg
pop
mov
loopne
icebp
add
mov
pop
mov
adcb
mov
js
or
add
add
push
and
add
add
jecxz
fdivrs
mov
xor
mov
sub
add
add
cmp
fwait
das
mov
in
frstor
ficompl
push
popa
fmuls
add
xchg
inc
jmp
pop
xor
jecxz
inc
add
xchg
icebp
lahf
xchg
cmp
mov
test
jecxz
jge
orb
dec
add
repnz
add
jbe
dec
insl
dec
dec
sub
add
add
add
or
fimull
and
add
add
sbb
xlat
jp
push
fsubl
es
or
cmp
add
ljmp
das
push
aas
jmp
int
cmp
sbb
sbb
aad
add
add
hlt
lds
in
add
mov
add
add
ja
aaa
sarl
rol
mov
or
pushf
sarl
iret
or
mov
hlt
in
lcall
add
mov
stos
popa
andl
mov
mov
add
mov
or
lahf
lret
das
add
mov
cwtl
gs
xchg
imul
fincstp
cmp
xchg
mov
add
mov
sti
push
pop
arpl
add
jb
fsubrs
imul
add
iret
repz
dec
add
repnz
aam
stos
xchg
jle
mov
ret
mov
add
add
xchg
xchg
inc
call
add
dec
add
mov
loope
mov
add
add
sbb
add
mov
dec
fucomip
sbb
popf
jge
add
add
je
repnz
fld
jno
mov
loope
or
push
in
test
in
lcall
add
mov
jo
sahf
mull
outsl
lcall
add
and
mov
push
inc
dec
mov
add
mov
cmpl
add
add
inc
cmpb
mov
add
sub
dec
push
add
and
test
push
push
pop
outsl
push
ret
decl
mov
stc
pushf
movsb
hlt
rorb
adcb
mov
or
mov
xchg
cmp
stos
xor
adcb
xlat
dec
test
add
jne
fldt
jnp
add
push
outsb
bound
dec
ljmp
shlb
adc
add
jl
add
mov
loop
add
js
dec
fstp
insl
push
popw
sub
mov
repz
call
std
and
and
add
push
gs
or
jbe
mov
mov
popa
or
add
add
mov
adc
dec
js
push
rcll
dec
cmp
shr
add
add
add
roll
out
jp
sbb
std
mov
aas
fistpll
loope
in
inc
andb
xchg
je
push
mov
push
fdivrl
cwtl
loop
add
add
imul
sub
mov
aam
mov
cmp
cmpsl
and
mov
loopne
mov
add
add
addr16
gs
add
add
inc
xor
dec
lahf
insb
add
cmp
cmp
mov
add
and
mov
inc
into
aas
pop
mov
jo
mov
rcll
scas
lds
insb
add
xchg
xchg
adc
mov
add
dec
adc
cs
ret
mov
cmp
and
mov
jnp
cli
pop
ret
sbb
pop
xchg
pop
hlt
repz
and
push
rorl
aam
xchg
lret
test
add
adc
daa
jp
lret
adcl
add
add
fsubrl
test
mov
sub
add
out
out
add
add
add
testb
push
dec
rcrl
data16
cmp
loopne
inc
cmp
mov
dec
push
pop
mov
rolb
add
out
or
mov
mov
add
add
mov
ljmp
sarl
ret
cmp
cmpb
incb
pop
sub
mov
sahf
mov
jb
jb
push
dec
popl
in
xchg
aaa
mov
add
add
mov
icebp
popa
dec
in
push
cli
xor
ret
cmpb
xor
sbb
add
add
mov
movsl
mov
daa
ds
xor
pop
adc
loop
mov
push
into
cmp
and
add
add
jns
decb
int3
scas
pusha
add
add
add
xchg
cmp
push
sbb
add
loope
imul
lods
rcrl
mov
xchg
std
movsb
mov
lods
xchg
ret
arpl
fldt
push
imul
inc
aam
das
adc
add
mov
mov
mov
pushf
shrb
push
cmp
add
std
and
add
add
dec
cmp
xchg
pop
fwait
xor
and
push
ret
dec
add
roll
dec
ss
repz
inc
mov
add
add
movsl
inc
add
ljmp
pop
out
inc
int
xchg
mov
arpl
aas
in
and
mov
insl
dec
and
mov
pop
add
lods
shrl
add
add
icebp
ja
mov
add
add
scas
sub
mov
cli
cld
cmp
mov
ja
mov
pushf
mov
add
add
cmp
dec
insl
dec
fisubl
add
or
iret
gs
subl
popa
stos
sub
insb
add
aad
jbe
int3
jb
ret
shll
add
repnz
shl
sbb
add
jecxz
call
or
mov
mov
out
add
leave
setp
mov
mov
decl
maskmovq
notl
sub
mov
mov
pop
std
xorb
test
add
mov
or
mov
and
pusha
add
out
sbb
jnp
push
mov
mov
nop
and
add
add
mov
and
dec
add
or
mov
add
add
rcll
cltd
push
xchg
xchg
lods
push
mov
mov
add
cmp
inc
arpl
in
fiadds
mov
add
add
jle
fbstp
add
add
push
pop
adc
cmp
jbe
idivl
jo
jbe
jecxz
scas
or
xchg
call
orb
faddl
push
femms
insb
add
or
dec
adc
push
fxam
subb
add
add
add
add
add
or
add
cmp
aas
inc
in
popf
and
mov
fisttps
add
add
mov
aad
adc
mov
fnstsw
and
add
add
xchg
hlt
adc
jbe
mov
add
push
cmp
jecxz
je
andb
add
xor
adc
dec
ret
fucomi
imul
inc
add
add
add
inc
add
add
cmp
add
add
mov
rcl
and
add
add
mov
cmp
adc
push
sbb
mov
xchg
movsl
or
add
add
lret
aaa
xor
pop
sbb
loopne
inc
add
add
mov
popf
push
repnz
adc
dec
add
add
push
mov
xchg
xchg
pusha
add
imul
inc
or
and
lods
inc
add
add
mov
das
and
add
add
arpl
add
mov
imul
or
add
add
mov
add
test
add
add
add
add
add
and
add
add
test
push
xor
xor
dec
sbb
add
add
mov
pop
fistps
xor
lods
push
sahf
insl
rol
add
adc
ss
rcrb
faddl
add
cmpb
mov
dec
xorl
out
orb
sub
push
test
sbb
lods
and
add
add
add
xchg
andb
add
bnd
cmp
dec
add
add
std
or
mov
lret
cli
xlat
jno
or
xchg
out
popf
test
adc
add
add
add
cmp
mov
movsl
push
lret
pop
aam
ret
jmp
imul
cmp
push
dec
out
stc
xor
push
sub
add
cli
inc
add
add
clc
fistl
add
pop
push
ds
add
aad
add
aas
lea
add
push
iret
icebp
xor
cmpsb
testb
push
jo
mov
imul
add
test
addr16
add
fwait
rcll
inc
push
jo
ljmp
pushf
fstpl
push
mov
sbb
add
jp
xor
imul
add
add
add
add
add
and
add
add
sbb
test
add
xlat
mov
fsubr
xor
mov
add
loopne
rcrl
add
test
in
stos
add
add
cld
pushfw
call
add
in
adc
add
add
lcall
stos
pop
jbe
loopne
mull
push
mov
pop
loopnew
addr16
pop
xor
sub
mov
push
outsl
jns
jno
imul
jge
in
inc
pop
loopne
jg
ret
ret
sbbb
outsl
test
sbbb
add
leave
sarb
cvtpi2ps
sub
fisttpll
nop
pop
pushf
xchg
xchg
jmp
imul
mov
inc
add
add
jae
scas
je
movsb
mov
insb
add
add
add
add
add
shrb
push
ret
lea
xchg
push
push
std
in
mov
mov
add
mov
add
gs
mov
mov
mov
push
scas
inc
cli
xchg
mov
and
add
js
out
std
mov
and
add
push
add
aaa
adc
add
add
aad
inc
pop
jmp
cmp
add
add
out
or
cs
int3
jge
cmc
in
shlb
fwait
sbb
jmp
add
xchg
pop
sub
mov
jp
mov
es
lds
pop
jle
aas
dec
add
add
jge
jb
add
add
add
mov
pop
loope
hlt
lcall
dec
add
mov
shlb
sti
add
adc
data16
gs
cli
lds
add
mov
imul
or
rol
sub
ret
cmp
and
add
add
pop
jmp
das
push
push
pop
ret
sbb
loop
cmp
jno
push
rol
dec
sub
mov
mov
inc
add
add
push
jbe
popa
mov
add
addr16
add
lea
lahf
jb
mov
sbb
popa
cltd
push
adc
xor
xchg
outsl
lcall
hlt
aad
pop
xchg
adc
fucomip
and
mov
jno
pushf
addr16
or
push
cli
fnstcw
add
add
aad
das
inc
jmp
fcmovbe
adc
mov
sub
add
add
sub
mov
mov
inc
add
xlat
xchg
add
cmpb
push
scas
sbb
add
cmc
rolb
mov
gs
and
inc
add
push
iret
stos
xlat
xchg
adc
push
inc
mov
add
push
mov
and
push
push
imul
add
pop
daa
int3
hlt
bound
fildl
add
mov
test
add
sbb
cmp
push
dec
or
mov
pop
cmp
add
cmp
mov
mov
int3
jae
add
push
sbbb
icebp
sti
testb
add
lcall
push
xlat
pop
dec
mov
add
add
or
mov
int3
mov
lods
adc
add
add
mov
bound
data16
push
in
pop
jo
sub
jecxz
sbb
add
add
sbb
jb
sbb
dec
mov
dec
add
add
cltd
or
mov
addb
imul
movsb
loope
repnz
aam
cli
or
jo
das
pop
cmp
add
add
test
sbb
inc
add
lcall
mov
int3
mov
test
add
xchg
mov
lret
cltd
lock
leave
lods
pop
pop
imul
xchg
cmp
add
imul
cmp
jbe
ljmp
arpl
push
rol
adc
mov
in
and
add
add
mov
gs
test
dec
mov
add
xchg
out
out
mov
test
loop
mov
in
aad
enter
dec
add
add
ffree
cmp
push
pop
cmp
sub
outsb
ss
push
test
mov
out
fsub
push
mov
jns
add
add
and
lahf
mov
jl
test
push
jae
xlat
xchg
xchg
rorl
add
jbe
sub
mov
sub
add
add
idivb
inc
add
mov
lods
in
es
stc
jg
add
add
jnp
aaa
cmpsb
inc
add
add
xchg
fadd
aas
xor
aas
mov
cwtl
test
dec
dec
mov
stc
push
lds
sub
ror
aam
cmp
dec
xchg
stos
inc
add
add
add
mov
inc
rcr
scas
ret
dec
jnp
inc
add
mov
lock
xor
inc
in
fsubrl
mov
mov
pop
cmpl
andb
stos
sbb
sub
or
mov
call
enter
cmp
test
or
ljmp
mov
mov
mov
sub
std
scas
xchg
push
jge
add
add
jb
mov
add
add
add
add
test
mov
and
add
jge
jp
gs
push
cmp
pop
cmp
fsubl
mov
push
sti
scas
xchg
insb
add
add
hlt
lahf
ja
inc
cltd
or
add
add
in
push
cmp
inc
aad
pop
xor
gs
add
dec
ret
aam
mov
mov
pop
int
sbb
xchg
adc
pop
add
mov
lods
setp
out
add
lahf
or
mov
ljmp
jo
jmp
xor
mov
mov
mov
add
movl
push
jle
xchg
pop
jne
add
mov
enter
jbe
movups
pop
ds
mov
add
pop
clc
pop
push
xor
jo
test
popf
lock
pop
mov
dec
add
add
cld
imul
add
sbbb
dec
add
add
sbbl
lea
sahf
cltd
cs
xchg
xor
sbbl
repz
and
mov
inc
xchg
and
add
add
imul
shl
mov
push
mov
add
ret
push
pop
loop
cld
push
inc
test
add
push
inc
cs
add
add
arpl
mov
push
repnz
add
loopne
aas
jmp
jp
sbb
add
add
cmp
int
lea
shll
add
cltd
leave
pushf
inc
lods
xorb
inc
movsl
cmc
push
or
in
sarb
add
or
add
add
push
or
add
add
mov
mov
add
mov
push
das
fwait
dec
test
lods
loopne
test
mov
insl
iret
bound
push
xor
call
lret
icebp
mov
cmpsb
or
mov
push
pusha
add
mov
push
xlat
das
dec
cmp
xchg
adc
push
xchg
insb
add
sub
push
dec
push
jl
out
mov
rcr
add
pop
xchg
fcomps
add
lret
sbb
rcll
out
imul
sbb
add
add
in
arpl
cld
movsb
adc
js
jo
inc
or
fnsave
sub
pop
cmp
add
add
sub
add
add
stos
inc
xor
xor
daa
out
stos
ror
xor
or
mov
mov
imul
in
sbb
lds
xchg
inc
mov
add
jge
or
out
lods
jo
insl
cwtl
and
cld
je
js
pushl
nop
and
add
add
push
push
dec
add
push
fsts
pop
mov
andl
add
pop
movsl
aaa
leave
inc
addr16
sbbl
add
add
cmp
loope
add
add
add
mov
push
push
icebp
in
fcmovnu
sbb
rcll
mov
mov
mov
xor
fldt
add
add
add
loop
outsl
jecxz
shll
push
nop
mov
add
sbb
cmp
into
ror
pop
mov
nop
mov
cltd
pusha
add
pop
std
cmpsl
push
xchg
ret
adc
add
add
lods
or
into
inc
loop
ror
notl
cmp
adc
add
mov
jmp
add
inc
ljmp
pop
cmp
mov
jle
pop
insl
clc
dec
int3
xlat
add
mov
add
add
popa
add
loopne
lcall
inc
add
add
push
xlat
jb
mov
jae
iret
loope
mov
outsb
dec
pop
cld
out
hlt
or
add
add
aad
ljmp
loop
lock
data16
sbb
mov
mov
lods
sbb
das
mov
add
add
dec
add
add
adc
push
mov
ffree
js
mov
ljmp
lods
cmp
dec
sub
loop
and
fxch
sub
add
imul
ljmp
ret
ret
out
mov
in
jecxz
das
ljmp
cmp
mov
roll
cmp
shrb
xchg
jecxz
inc
mov
and
add
add
add
mov
subb
mov
int3
push
decb
data16
sub
sub
xchg
lcall
mov
mov
and
mov
or
or
lcall
vmovsldup
add
lock
fdivl
rcll
jle
mov
xchg
mov
cwtl
jecxz
mov
xor
aas
rcrl
lahf
xchg
adc
mov
pop
insl
insl
inc
into
add
popa
dec
hlt
mov
mov
cmp
out
test
add
mov
in
icebp
mov
fwait
add
sti
jae
cs
push
xor
push
aad
cmp
mov
mov
ret
repnz
pop
stc
add
push
adc
adc
or
add
mov
add
imul
add
push
sahf
insb
add
mov
fnstenv
cli
mov
inc
add
add
add
cli
dec
out
loope
inc
add
add
add
xchg
xor
dec
sub
mov
loope
aas
mov
add
sti
pop
fldl
mov
xor
mov
ficompl
pop
jno
jmp
cmp
out
mov
add
sbb
mov
add
add
insb
add
xchg
sub
cmp
scas
sahf
in
inc
das
into
dec
adc
movsl
das
insb
add
add
ret
pop
cli
pop
lock
inc
add
add
addb
cmpsb
aam
icebp
in
into
xor
jmp
dec
or
ss
mov
pop
mov
add
xlat
lods
adc
add
push
mov
xor
jbe,pt
popf
jmp
push
test
fnsave
or
add
add
addr16
outsb
scas
inc
daa
push
mov
into
in
inc
inc
fsubl
int
xchg
jnp
push
jae
xchg
adc
xchg
sbb
lcall
jne
mov
pop
xchg
or
loopne
pop
mov
sbb
dec
add
aam
jge
mov
insb
add
add
lods
je
jl
mov
add
outsb
xchg
cs
inc
xchg
adc
push
fimuls
jne
adc
jae
stc
lds
ljmp
in
pop
xor
sub
add
sub
mov
test
push
adcb
xor
xchg
ja
add
mov
add
jecxz
loop
add
dec
mov
mov
sbb
push
addl
outsb
call
sub
int3
data16
add
add
add
stos
dec
push
xchg
int
js
xor
dec
ret
sub
aaa
int3
in
push
sub
jp
or
or
xlat
push
ret
push
mov
jno
mov
ret
sub
clc
pop
xchg
cmp
add
push
push
fwait
add
add
add
xor
mov
dec
or
cmpb
mov
fwait
repnz
rorb
es
test
pop
in
pusha
add
add
test
int3
jbe
jo
icebp
or
out
gs
lret
lds
add
jp
fimull
adc
stc
jo
mov
inc
es
out
mov
add
add
dec
add
add
xor
mov
mov
xchg
add
and
cmc
cmp
jo
out
add
add
xor
add
add
add
mov
aaa
xlat
imul
dec
les
cmpsl
pop
out
into
jo
lea
or
cmp
lret
ss
add
fdivp
sahf
push
or
mov
jp
rcll
push
sbb
hlt
aad
push
inc
cwtl
mov
fidivrl
push
add
cmp
dec
mov
push
mov
jg
shl
mov
hlt
pop
lret
sub
js
xchg
mov
gs
leave
fnstsw
add
add
scas
adc
lret
int3
and
add
add
add
add
ss
inc
mov
leave
ds
cmp
ljmp
add
xor
add
jnp
add
cmpsb
push
lret
cwtl
cmp
adc
add
hlt
add
mov
shrl
add
or
gs
add
push
shrl
movsl
repz
call
push
shll
add
add
int
lahf
mov
dec
pop
sub
or
cmp
movsl
inc
add
out
icebp
and
sub
addl
add
push
scas
mov
fildl
add
add
mov
dec
add
sbb
pusha
add
add
sub
add
adc
cwtl
or
pop
xchg
mov
add
stos
adc
xchg
mov
and
jne
out
inc
add
lcall
dec
test
arpl
cmc
mov
call
js
inc
mov
scas
call
add
mov
mov
pushf
adc
sub
adc
or
divb
jmp
out
xchg
xor
xor
ffreep
ja
push
xchg
add
add
pop
xchg
lock
jl
and
pop
sbb
xor
jecxz
orl
push
aad
jne
sub
jno
iret
cli
dec
add
add
std
add
add
add
add
sub
add
add
mov
add
add
mov
add
pop
jmp
add
mov
add
fadds
mov
jb
xchg
mov
jno
push
or
mov
pop
cmp
mov
mov
out
scas
sub
mov
cmpsb
dec
pop
adc
out
add
ja
test
add
jne
or
mov
pop
xchg
test
add
movsb
in
mov
add
sub
std
lcall
add
xchg
mov
add
icebp
imul
add
and
push
adc
add
sbb
loop
fwait
decb
mov
and
in
ljmp
icebp
mov
or
add
add
es
cs
div
int3
stc
jl
je
dec
imul
sahf
adc
outsl
or
cli
scas
enter
movsl
sbb
inc
add
nop
cmpb
je
rcr
pop
inc
add
jp
add
add
enter
cmpsl
sahf
pushf
std
pop
add
mov
sub
push
inc
adc
jge
fisubrs
iret
ja
fwait
decl
adc
push
lahf
or
bound
mov
cmp
imul
dec
adc
cltd
dec
jb
xchg
pushf
sbb
jns
scas
inc
jnp
adcb
neg
add
add
xchg
cld
notl
xor
add
add
add
in
sahf
lahf
xor
inc
mov
stos
insb
add
add
xchg
repz
std
xchg
ljmp
add
mov
outsl
std
fidivs
adc
repz
jne
andb
jns
mov
push
mov
add
add
mov
dec
inc
in
sub
lds
cmp
arpl
add
aam
jge
jl
sub
mov
aaa
in
pop
or
push
fnstenv
out
ljmp
js
subb
push
insb
add
add
xor
sahf
cld
into
and
fcomps
cltd
mov
dec
stos
in
test
add
jl
jmp
imul
mov
jns
stos
test
or
add
add
mov
pop
sbb
sbb
push
test
shll
add
add
rolb
enter
call
adc
outsl
xor
gs
data16
popf
cwtl
add
mov
cmp
sbb
mov
aad
icebp
cmp
adc
add
add
iret
mov
movsb
xor
loop
ret
pop
push
test
cmp
flds
lock
add
fstpl
pop
std
xchg
je
icebp
add
inc
inc
mov
sbb
xor
outsl
fadd
mov
dec
add
add
pop
inc
xor
test
int3
sarb
push
jl
scas
adc
rorl
mov
scas
cmp
pushf
pop
pop
in
mov
xchg
out
incb
or
add
add
xor
clc
pop
xchg
jmp
pop
push
ret
lds
add
mov
add
add
xchg
xchg
dec
in
aad
add
or
add
add
push
adc
dec
adc
xchg
je
ror
into
mov
movsl
loope
clc
xor
js
dec
xchg
pop
sub
mov
out
jnp
pop
mov
xor
push
sub
add
inc
jg
or
scas
cltd
mov
aam
cmp
or
jo
scas
adc
mov
or
push
pushf
jnp
add
insl
adc
mov
push
add
out
loop
ss
jb
lods
jecxz
mov
add
pop
pop
clc
inc
push
aaa
pushf
pop
fsubs
sub
sub
inc
cwtl
out
cvtps2pi
jl
mov
hlt
and
sub
call
xchg
test
test
add
je
pcmpeqd
mov
pop
mov
cltd
mov
ss
movsb
test
sahf
push
push
out
lret
pop
pop
aad
aam
iret
push
outsb
push
orl
adc
mov
dec
repnz
test
cmp
xchg
sbb
loope
inc
mov
jg
push
mov
cwtl
jp
dec
dec
add
mov
out
pop
shrl
jg
faddl
add
jle
cmp
out
int3
arpl
add
xor
add
add
gs
jbe
add
lret
inc
adc
mov
in
sbb
mov
xchg
mov
add
movsl
aam
negb
fisttpll
shrb
add
cld
pop
xchg
nop
mov
stc
ljmp
xchg
sub
into
int
sbbb
jne
scas
pop
mov
cmp
jle
pop
mov
pop
jne
imul
int
clc
int
cmp
or
ljmp
ror
jns
test
movsl
insb
add
add
ljmp
mov
cmp
push
push
mov
popa
int
jnp
jge
sbb
sub
shlb
fnstsw
dec
dec
ss
pushl
call
add
add
and
or
add
add
jle
push
das
hlt
cmp
push
jg
mov
mov
pop
fwait
icebp
or
call
loope
aam
aam
movsl
jecxz
les
subl
add
jo
jno
clc
mov
xor
sarb
mov
or
add
repnz
out
adc
mov
into
pop
in
out
sbb
shrb
lret
xchg
mov
jbe
data16
xchg
testb
pop
sbbb
add
cld
xchg
dec
iret
pop
add
add
add
testb
add
dec
jg
ret
out
sub
mov
push
sbb
add
arpl
inc
les
dec
add
add
sbb
cmp
and
add
add
add
add
mull
inc
sub
add
add
mov
add
movsb
arpl
add
add
cltd
pop
pop
imul
loope
adc
imul
xor
pop
lock
and
pop
inc
in
std
mov
add
add
cmc
bound
mov
xchg
aad
sarl
add
inc
jb
scas
sbb
cmpl
mov
lods
imul
cmpl
mov
xchg
dec
add
add
sub
push
ljmp
adc
inc
or
jg
jne
xchg
mov
mov
push
ja
cmp
cmpsb
mov
cltd
lcallw
adc
add
mov
mov
mov
fbstp
add
cmp
scas
rorl
fcoml
push
rcll
dec
add
insb
add
add
pop
add
add
add
test
je
insb
add
add
loop
push
js
jmp
insb
add
add
cmp
hlt
enter
xchg
mov
add
add
out
cmp
xor
dec
add
add
loop
push
icebp
roll
add
ds
pop
aas
and
xlat
test
outsl
xchg
jmp
ficoms
jl
daa
popf
andl
mov
push
add
bound
xchg
fcmovnbe
movsl
mov
adc
jle
xchg
jmp
add
add
ljmp
mov
pop
mov
lock
sti
pushf
and
daa
mov
mov
mov
mov
and
sbb
lahf
out
xchg
insb
add
ljmp
add
pop
and
jl
add
add
mov
pop
ficomps
mov
add
sub
arpl
pop
jnp
inc
push
cmc
jno
rolb
out
mov
fcomps
xor
mov
add
lret
push
cli
fldenv
sti
or
cli
jne
mov
push
mov
add
es
add
add
add
push
push
or
cmp
stc
in
das
inc
add
add
stos
out
jno
dec
pushf
jl
stos
mov
push
lret
in
in
sbb
dec
aam
daa
jno
mov
lret
ljmp
mov
push
fwait
mov
push
and
add
add
dec
add
xor
stc
inc
lret
jae
icebp
sahf
mov
push
pop
mov
enter
add
add
dec
xchg
and
test
mov
push
sbb
add
mov
cmpsb
cmc
loop
test
mov
outsb
jmp
fptan
test
jb
pushf
jmp
jl
dec
shlb
mov
movsb
dec
add
add
ja
dec
xchg
inc
pop
sarb
xchg
sahf
xchg
std
jge
int
sub
mov
mov
xchg
mov
push
jae
loop
xor
sub
add
add
add
insl
xor
jmp
mov
push
dec
pop
daa
ss
cli
sub
in
hlt
cmp
jnp
or
xchg
add
xchg
repnz
shlb
repz
pop
xchg
xor
add
and
mov
cmpsb
dec
add
loopne
add
add
outsl
scas
dec
lea
sbb
pop
shrl
push
int
xchg
cs
add
add
mov
adc
mov
xchg
inc
add
movb
jae
sub
mov
test
test
xor
push
add
add
add
in
and
jge
push
nop
std
dec
add
call
imul
mov
add
add
add
je
loop
sub
mov
pushf
hlt
inc
push
aam
fbstp
mov
fistps
test
pop
cltd
add
mov
jae
pusha
add
add
testb
ds
lret
xchg
jb
add
movsb
je
stos
or
ficompl
bnd
push
outsl
dec
fldenv
add
add
es
shl
mov
mov
popa
pop
gs
mov
jp
test
repz
lret
into
xchg
cld
xchg
clc
fnstsw
shll
shld
addb
cmp
ds
dec
stos
orl
add
dec
fwait
mov
cmp
add
cmp
cmp
int
sub
ret
and
mov
or
add
add
je
addr16
insb
add
add
pop
stos
test
js
jle
jecxz
mov
enter
jb
add
add
pop
sub
add
add
out
dec
add
push
leave
dec
call
and
ds
and
mov
into
push
xor
ret
aam
add
imul
insl
out
lret
cmc
mov
push
lds
add
insl
jmp
sbb
mov
push
push
xor
add
add
add
xlat
repnz
sub
add
add
test
in
and
mov
mov
jmp
xor
add
xor
and
sbbb
cmp
sbb
test
cltd
lods
and
mov
mov
add
push
arpl
add
add
outsb
bswap
push
pop
in
sbb
clc
lahf
sub
add
add
ds
mov
add
add
add
add
out
xor
scas
int3
cwtl
cwtl
aas
shlb
cmpsb
cli
mov
add
add
and
add
add
imul
sbb
stos
lcall
jmp
sub
add
add
loopne
sarb
adc
fidivs
andl
insb
add
pop
xchg
mov
mov
lds
add
add
into
enter
lahf
add
cli
hlt
stc
cmc
mov
lret
fnstsw
add
add
dec
fwait
xor
in
add
sub
add
add
push
mov
add
leave
scas
xchg
pop
iret
bound
fidivrl
xchg
nop
adc
xchg
xchg
pop
pop
insb
add
add
in
lods
push
ja
jmp
inc
add
add
xchg
add
add
push
mov
shll
mov
push
add
add
add
add
sbb
aad
sbb
fsts
cmp
add
mov
push
xchg
push
cwtl
jb
mov
adc
and
mov
insl
mov
pop
mov
add
cmp
add
add
dec
add
add
daa
pop
shlb
mov
cld
iret
mov
cmp
or
mov
sbb
add
add
or
dec
decb
add
add
out
dec
add
add
je
leave
and
add
add
xlat
adc
sub
push
jecxz
jge
push
mov
and
push
aas
jge
sub
aam
ds
jmp
aaa
jbe
in
ret
jle
mov
in
fnstsw
sar
loop
cmp
hlt
cmp
mov
mov
mov
adc
jl
xchg
scas
fisttpll
dec
js
dec
add
pop
mov
pop
mov
xchg
xor
mov
ficoml
add
dec
sarb
push
cmpsl
mov
out
add
data16
cmp
adc
add
filds
cmc
mov
sub
add
add
jno
pop
rorl
and
mov
aad
repz
out
jb
aaa
xlat
jne
mov
pop
inc
and
mov
add
add
dec
add
add
pop
push
popf
ja
aad
loop
mov
daa
adc
cmp
add
mov
sub
fmuls
mov
cmp
jge
icebp
cmp
stc
fistl
mov
xchg
in
scas
jne
out
xchg
fsubr
pop
jae
sub
add
add
mov
sbb
roll
mov
into
mov
cmpsl
jb
mov
cmp
xor
lret
add
add
add
movsl
ljmp
shlb
js
mov
and
push
xlat
inc
sub
inc
inc
xchg
movsb
out
add
add
add
mov
add
add
sti
out
stos
mov
movsl
push
stc
inc
into
lret
cld
push
lods
mov
shlb
int
ss
in
mov
out
lock
push
adc
add
add
mov
popa
dec
add
add
bound
lret
lret
roll
loop
stc
fisttpll
lock
add
pop
mov
cmp
mov
pushf
daa
sub
or
mov
xchg
test
dec
mov
scas
mov
add
add
adc
add
sub
iret
sbb
add
jle
pushf
push
sahf
push
inc
add
add
jo
xchg
push
push
cwtl
inc
sbb
aam
icebp
lock
add
ficoms
dec
orb
add
mov
xchg
dec
in
insl
aas
mov
add
sub
add
add
add
enter
lds
xor
mov
mov
add
int3
ljmp
addl
sub
mov
subb
test
enter
bound
dec
add
jae
imul
es
lea
push
mov
fsts
idivb
ja
aaa
gs
sbb
inc
adc
inc
clc
xchg
in
imul
add
add
and
sbb
stos
or
adc
mov
pop
jne
push
dec
add
add
inc
and
add
add
out
jecxz
lcall
and
sbb
dec
pop
mov
mov
add
icebp
jnp
add
add
stos
enter
or
int3
adc
jnp
pop
xchg
cmp
hlt
lret
lret
lcall
add
add
icebp
or
adc
add
add
cmp
gs
cmp
jp
pop
ror
inc
cli
fwait
push
xchg
and
add
add
imul
add
add
add
add
add
add
add
int3
xor
xlat
xor
mov
nop
pop
xor
iret
std
sub
xchg
in
adc
and
pop
add
add
test
sbb
call
jg
or
push
xchg
mov
lds
out
cmc
push
std
out
pop
mov
mov
dec
fwait
popa
leave
jae
js
add
mov
push
mov
je
aaa
sbb
add
cmpl
add
add
movsl
push
sarb
add
or
add
add
or
xor
bound
in
add
pop
push
daa
das
and
loopne
sti
sbb
adc
leave
jns
lcall
jp
int
or
cmp
cs
test
rolb
mov
mov
addb
les
sub
mov
jae
lods
xchg
cmp
out
loop
out
shl
arpl
movsl
dec
rcll
mov
sbb
cmpsb
orl
aam
adc
in
out
cmp
push
xlat
cltd
jmp
add
push
inc
pop
mov
xor
add
out
gs
ss
ja
pop
sub
add
add
push
inc
or
mov
pop
cmp
pop
lea
sti
pop
pop
sub
cltd
sahf
add
add
add
dec
sbb
or
mov
leave
cmp
in
sbb
and
pop
dec
add
insl
fcomi
fcoml
jecxz
and
add
add
fstps
pop
mov
add
jg
mov
and
pop
addr16
push
outsb
shrl
notl
pop
int
add
xor
add
js
inc
insl
push
push
pop
fcmovb
scas
loopne
or
mov
or
add
add
mov
mov
sbb
adcl
add
mov
add
popf
cmp
stos
test
add
add
add
pop
roll
add
movsb
push
add
out
jo
dec
mov
test
add
add
inc
xlat
sarb
add
add
roll
int3
test
add
ja
movsb
mov
add
or
push
push
psubusb
add
pop
jmp
cwtl
jno
dec
les
jp
pushf
add
mov
lret
add
mov
cmpsb
inc
lret
mov
mov
dec
scas
xlat
jecxz
cld
add
xchg
xorb
dec
adc
add
jl
fimuls
sub
dec
rcrb
or
mov
dec
movsb
and
add
loopne
stos
mov
inc
dec
add
push
push
repz
rcll
add
add
rolb
mov
add
lcall
mov
add
add
cmp
and
push
push
push
and
push
fidivl
pop
imul
and
inc
lahf
out
gs
add
add
imul
push
mov
add
add
test
mov
rorb
stc
fimull
pop
iret
mov
fstpt
dec
dec
aaa
mov
jne
mov
into
es
mov
push
adc
pop
inc
out
jle
out
int3
test
cmpl
shl
and
xchg
mov
lcall
add
scas
mov
jp
outsb
ret
xchg
add
add
ret
shrb
loopne
repz
cmp
popf
pop
stos
insl
and
dec
add
push
add
mov
ljmp
sbb
push
movb
add
cmpsb
xchg
mov
add
int3
jp
int3
stc
fsts
into
pop
inc
sbb
scas
in
aas
insl
bnd
push
xchg
mov
pop
add
pop
dec
in
pop
add
loope
xlat
movsb
lret
inc
rclb
add
loop
into
inc
add
add
fisubl
add
loop
test
adc
cwtl
cmp
add
out
mov
sbb
fidivrs
imul
mov
push
jnp
mov
mov
rorb
xchg
xchg
cli
sbb
mov
inc
add
add
xor
frstor
pop
pop
loopne
add
ljmp
sbb
add
sti
rorl
add
add
jmp
into
cmc
or
add
add
in
push
bound
hlt
push
pop
jg
add
and
pop
fmuls
xchg
adc
push
jae
orl
scas
into
std
sbb
ja
and
mov
rcrl
test
in
in
fwait
movsb
adc
sbb
je
pop
les
add
rol
dec
insl
push
insb
add
das
push
or
mov
inc
cmpsl
dec
insl
sub
mov
sbb
push
or
add
add
jbe
fsubl
add
add
iret
pop
and
xchg
das
inc
dec
add
add
aad
inc
roll
xor
mov
xor
lock
aas
mov
cmpsb
pop
lods
pop
mov
push
add
mov
mov
cld
movsl
cli
or
jae
addl
out
lret
sbb
push
cmp
add
ret
mov
add
add
addr16
addr16
ret
pop
and
add
add
call
test
xor
push
dec
addb
out
mov
in
or
ret
and
es
jecxz
jle
dec
add
dec
adc
cld
cld
dec
sbb
mov
in
sarb
rorb
add
loopne
xchg
cmp
lods
jb
gs
int
sbb
ret
mov
sub
add
add
or
int
rclb
cmp
mov
add
data16
jne
xor
xchg
inc
or
cmp
add
aaa
push
inc
daa
inc
sbb
jne
mov
add
and
mov
mov
jae
mov
ficomps
add
add
adc
sub
lret
adc
or
pop
dec
xchg
mov
out
jae
iret
xor
popl
add
push
insb
add
outsb
add
add
std
ds
lcall
xchg
dec
jb
dec
cmpsb
cmpsb
inc
aas
in
sbb
add
pop
or
add
add
xchg
lods
cwtl
pusha
add
dec
movsl
sbb
or
daa
pop
outsb
add
add
add
adc
daa
aas
jmp
and
sub
add
add
add
add
sbb
fbstp
sbb
push
xor
mov
mov
ja
add
mov
pop
and
lahf
xlat
lds
adc
and
mov
outsb
lds
aas
test
jnp
lret
adc
jns
sub
add
add
stos
mov
add
add
pop
mov
add
out
mov
scas
mov
nop
shrb
add
jp
pop
fcoml
xor
add
xchg
adc
push
repnz
test
dec
cmpsl
scas
addr16
andl
add
add
sbb
int
in
xor
and
imul
out
dec
out
or
cmp
lea
xchg
sbb
ljmp
hlt
and
mov
imul
in
lea
xchg
mov
mov
mov
sbb
push
jp
stc
and
lods
dec
test
dec
add
insl
lods
in
mov
add
add
int
and
or
cld
pop
mov
push
dec
add
add
sub
dec
add
push
outsl
adc
mov
add
pop
testb
mov
add
add
and
add
add
mov
inc
add
lock
mov
push
cmp
lea
add
add
add
popa
scas
rclb
hlt
sub
add
add
add
push
imul
or
mov
into
es
jle
sahf
data16
clc
cli
rcrb
cmp
pop
ret
xlat
jne
popa
popa
sub
ljmp
nop
arpl
mov
add
add
push
cmp
dec
fstl
jne
bound
push
shl
jg
jecxz
in
negl
stos
loop
xlat
jae
bound
adc
push
add
add
pop
push
mov
es
lret
iret
int3
mov
imul
mov
je
xchg
sbb
ja
add
cld
jecxz
mov
sub
mov
rorb
mov
and
mov
inc
aam
mov
inc
or
mov
sub
dec
rorl
popf
mov
sbbl
xchg
cmp
mov
xor
add
test
xchg
inc
mov
mov
xchg
pop
push
xchg
or
mov
lods
sahf
jae
add
imul
imul
dec
add
test
jp
dec
sbb
addr16
push
adc
add
add
jecxz
sub
add
add
adc
sbb
and
push
mov
imul
mov
push
aas
insb
add
scas
mov
push
mov
add
add
xchg
rolb
jb
fldcw
inc
add
subl
ss
add
xchg
xor
cmpsb
test
pushf
xchg
int3
sbbb
sub
add
add
mov
pop
scas
std
stos
adc
movsl
push
pop
sub
mov
sbb
push
jecxz
xor
add
add
and
add
add
dec
scas
aam
test
add
add
fldenv
add
mov
cs
ret
jnp
shlb
int3
add
ficomps
insb
add
add
inc
mov
sbb
xchg
jmp
add
cmp
adc
adcb
add
mov
ficoml
cmp
daa
xchg
pop
jmp
frstor
mov
iret
in
push
jne
pop
dec
add
xchg
insl
inc
out
dec
and
push
mov
outsb
movsl
or
add
add
add
add
xor
push
sub
add
add
inc
cwtl
or
popa
addr16
dec
mov
mov
xor
mov
mov
mov
adc
push
in
add
add
xchg
das
jmp
fadd
mov
xlat
mov
cmp
or
mov
jae
dec
jae
cmp
add
hlt
inc
push
repnz
inc
int3
jecxz
add
xlat
cltd
testb
mov
sbb
mov
add
pop
xchg
adc
movsb
adc
add
add
hlt
dec
xchg
popf
stos
jg
cmpsb
imul
add
add
add
outsl
pop
sub
icebp
and
js,pn
stos
mov
lret
test
imul
add
add
add
pushl
daa
loopne
test
add
add
jmp
js
add
add
push
cmp
add
inc
cmc
pusha
add
add
lea
dec
sti
aam
or
les
mov
push
pop
sbb
xchg
aam
inc
orb
fwait
stos
sbb
pusha
add
ljmp
xchg
add
add
add
sbb
mov
comiss
cmp
aad
mov
cwtl
call
ret
cmp
test
add
jecxz
jle
fildl
add
inc
idiv
leave
pop
bswap
ss
insl
fildll
in
add
add
test
bound
iret
xlat
in
push
cld
jg
xor
inc
movntps
xchg
or
xor
aad
mov
add
sub
add
add
negb
enter
scas
mov
ret
mov
rorb
mov
andl
insl
adc
add
add
push
out
mov
lods
iret
sub
repnz
add
push
cmc
outsl
shlb
sub
in
push
push
data16
dec
add
add
inc
fucomp
sub
add
add
pop
fwait
push
mov
lret
dec
lea
sarl
add
add
push
push
enter
add
mov
xchg
dec
pop
lock
dec
outsb
xchg
subb
mov
jge
cmp
push
mov
push
sub
mov
cwtl
orb
mov
cs
or
or
xor
add
mov
shll
scas
ljmp
add
pop
pop
lea
mov
add
add
repnz
add
add
add
cmp
mov
add
or
and
and
aaa
push
or
fisttps
jnp
add
sbb
push
cmpsl
repnz
add
add
add
add
testb
sub
add
add
mov
push
frstor
pop
dec
out
imul
sbb
add
cwtl
mov
and
add
add
mov
shll
push
ljmp
and
add
add
inc
add
add
xchg
pop
insl
das
sbb
add
add
sub
mov
cli
sbb
add
add
ja
mov
sub
mov
or
add
add
es
dec
sub
lods
fwait
movsb
aam
cmpsb
insl
ret
call
add
mov
mov
rcrb
push
scas
idivl
mov
xchg
movsl
mov
pop
mov
outsb
es
test
jmp
xchg
or
mov
pop
jp
and
lds
push
rcl
mov
pop
cli
jg
cld
cmp
add
cmpsl
mov
ret
mov
icebp
shlb
add
fidivs
adc
adc
xor
mov
pop
add
sub
fnstenv
add
inc
push
xchg
out
fcmovu
aam
jle
lret
sub
dec
add
xchg
sub
add
add
sahf
sub
inc
add
add
out
rorl
mov
imul
inc
test
mov
in
fnstcw
pop
mov
inc
add
ret
lds
add
add
lea
pop
fildll
or
dec
xlat
dec
add
add
test
popa
mov
fsts
inc
fsts
mov
fisttps
add
notb
sbb
jmp
lahf
or
add
add
mov
call
sub
lret
pop
mov
xor
mov
mov
lahf
and
add
add
add
add
jl
cmp
outsb
jns
mov
imul
add
add
pop
fisttps
pop
mov
inc
insb
add
add
pop
dec
shlb
xchg
and
add
add
push
sub
mov
icebp
rorl
jnp
cmpsl
scas
aam
pop
add
int3
add
mov
pop
test
push
dec
add
repz
out
push
dec
add
or
add
add
cmpsl
test
rol
dec
pushf
cmp
add
push
sbb
mov
pushf
lods
adc
sbb
mov
out
pop
xchg
cmp
pop
jnp
push
ret
leave
mov
cmp
add
add
les
jnp
out
or
dec
add
and
aam
inc
negl
add
add
pop
mov
mov
mul
sbb
jg
inc
add
add
lcall
into
and
add
add
add
fcomps
aad
lods
stos
pop
adc
sub
cld
and
mov
xor
jg
add
jecxz
leave
xor
pop
inc
xor
mov
aam
int
xadd
rcl
push
adc
pop
pop
data16
add
lret
jmp
dec
sbb
mov
push
or
mov
imull
mov
xor
dec
push
or
add
add
jno
call
add
shlb
imul
insb
add
add
pop
loopne
pop
cmc
or
add
add
add
call
mov
jno
jg
popf
lret
mov
xor
cmp
and
jb
jl
cmpsl
jbe
mov
add
add
push
mov
lret
add
add
add
jns
push
inc
add
add
cmpb
or
push
adc
outsb
into
adc
sti
pop
push
das
sub
add
add
es
test
js
icebp
or
sbb
adc
inc
add
add
ret
jl
mov
jnp
hlt
call
imul
pop
inc
lret
loopne
add
add
and
add
ss
jo
add
add
int3
insl
and
add
add
add
add
shll
lock
jnp
push
loopne
mov
icebp
mov
jecxz
add
add
cmc
sub
mov
pop
sbb
mov
dec
xchg
insl
in
sti
ss
jl
lds
fnstcw
daa
lcall
add
mov
add
add
add
test
inc
add
sbb
mov
jge
sub
inc
sub
mov
dec
fldenv
sbb
imul
push
scas
int
ljmp
mov
or
ljmp
icebp
cltd
pop
push
mov
pop
or
add
add
stos
inc
pop
push
dec
add
add
repz
inc
mov
add
out
pop
mov
add
add
add
add
lods
std
and
into
in
pop
cmp
add
mov
fisubrs
add
add
add
test
in
jmp
stos
lret
sahf
arpl
cwtl
aad
jl
in
mov
add
add
and
loopne
push
cmp
push
lds
xor
sbb
test
aaa
rcr
lea
mov
pushf
mov
jnp
outsl
dec
add
repnz
jl
popf
mov
add
pop
mov
sub
call
lret
sbbl
fstpt
sub
add
add
cmp
xchg
faddp
insl
and
pop
add
xchg
mov
adc
shrb
fmuls
pop
pop
ret
mov
sbbl
pushf
sbb
pop
ret
int
pop
push
outsb
mov
jae
sti
pop
aas
cmp
cmp
add
add
adc
mov
aam
clc
cmp
shrb
stos
lods
push
xlat
repnz
inc
and
mov
inc
repz
add
add
add
dec
add
add
sub
xchg
mov
arpl
pop
and
jno
std
lock
adcl
es
mov
bound
fisttpll
jbe
jge
xchg
and
sbb
or
mov
rol
enter
sbb
dec
add
add
test
mov
out
es
cmp
sub
add
add
mov
orl
adc
inc
sub
mov
push
xchg
add
mov
cs
jp
int3
mov
pushf
lds
mull
imulb
loopne
cmpsb
dec
stos
and
add
add
jno
mov
dec
fiadds
cmp
ljmp
aam
cmp
roll
add
add
add
fcomps
jo
fcmovnb
repnz
movsb
pop
inc
add
add
push
and
iret
insl
lock
jg
gs
pop
daa
add
mov
shl
add
dec
loop
or
leave
fildl
mov
es
or
or
add
add
scas
jne
aaa
pop
addb
add
inc
add
pop
xor
sub
mov
mov
sbb
add
test
inc
inc
addr16
mov
es
fimuls
push
inc
adc
lret
call
dec
add
add
or
jo
pop
sbb
add
add
jae
js
mov
add
lret
inc
leave
and
arpl
push
mov
push
lods
xchg
popf
sbb
into
xchg
jg
lods
fildll
mov
add
add
mov
sarl
cmpsl
ja
xor
ja
rcl
push
mov
and
cmc
aad
pop
int
je
mov
aam
dec
mov
fcmovne
push
dec
ret
xchg
push
fisttps
inc
add
push
test
outsb
fwait
jno
push
loope
and
cltd
ss
mov
dec
movsb
rcrl
aaa
jae
jmp
test
mov
negb
jne
icebp
lret
push
fcomps
push
jg
push
lret
sub
stos
add
fucomp
mov
add
loopne
sbb
fadds
pop
add
add
add
fildl
add
dec
es
add
push
sti
out
insl
mov
in
shl
adcw
int
mov
adc
jne
cmp
jne
pop
loope
sbb
cmp
insb
add
add
out
iret
xchg
sarl
mov
push
sahf
xchg
pop
add
addr16
mov
int3
repz
fstpl
jl
jge
test
leave
jnp
aad
add
add
add
cmpb
sbb
cmp
daa
loopne
jae
sbb
xor
lea
add
add
add
inc
iret
sbb
pop
inc
add
mov
or
inc
cltd
dec
add
inc
ficoml
addr16
lret
les
mov
sahf
xor
add
mov
xchg
iret
xchg
mov
jmp
add
int
add
cmc
lods
push
outsl
popaw
xor
loope
add
add
scas
sti
or
xchg
mov
adc
dec
dec
mov
je
stos
jecxz
add
add
add
mov
decb
inc
add
add
add
add
in
mov
loop
xchg
mov
mov
add
add
add
add
add
pop
push
mov
insl
leave
aas
scas
inc
nop
hlt
add
add
add
ljmp
jp
push
pmaxub
aad
in
bswap
inc
mov
mov
jae
add
add
add
xchg
insb
add
add
ss
lds
mov
push
mov
mov
ja
stc
cmc
int
or
mov
mov
jecxz
lods
jge
inc
cmp
jno
sbb
add
add
mov
arpl
jl
mov
add
inc
add
add
jbe
adc
jecxz
test
fbstp
cli
jbe
sub
add
add
mov
cmpsl
insb
add
add
rolb
add
add
rolb
add
dec
ljmp
call
divb
xchg
aaa
or
xor
jbe
inc
adc
fcmovu
pop
mov
and
add
add
pop
aad
test
loope
popf
add
jecxz
shl
loope
daa
and
add
add
add
mov
je
dec
test
push
adc
dec
add
add
add
lcall
add
mov
or
lahf
repz
shlb
add
enter
in
test
pushf
icebp
sub
outsb
scas
test
adc
cwtl
add
add
add
fiadds
cmpb
lods
push
add
xchg
sbbb
fsubrs
in
ss
mov
sbb
and
fcmove
mov
repz
add
add
xchg
movsl
mov
stos
ss
int3
add
add
es
dec
mov
shr
inc
jnp
outsb
jle
in
jo
fildl
mov
sbb
cwtl
xchg
enter
test
xchg
mov
push
subb
ja
lahf
imul
fwait
or
lea
pxor
sbb
jl
push
adc
and
leave
daa
nop
mov
arpl
faddl
jg
add
add
dec
or
mov
shrl
mov
add
add
add
add
and
mov
add
pop
rcrl
std
fidivl
mov
scas
in
sbb
add
add
xchg
je
filds
in
xchg
fstpl
dec
add
add
xchg
or
add
pop
movsl
fmull
mov
mov
insl
cmp
pop
add
sub
add
add
push
jae
test
add
add
adc
dec
xor
add
and
out
adc
call
push
data16
insb
add
add
sbb
xchg
das
aas
sub
add
add
sub
mov
loop
fxch
ljmp
add
add
pop
fisttps
add
fcoml
pop
push
push
mov
inc
and
mov
add
add
sbb
jl
push
test
cmp
push
pop
pop
cmp
je
cs
fsub
lcall
ja
push
loopne
mov
test
xchg
push
fstp
dec
mov
dec
push
xchg
lret
dec
sbb
aaa
jb
adc
test
pop
mov
add
add
mov
popl
push
movb
fdivs
dec
sbb
mov
loop
mov
push
movl
xor
push
cmpsb
add
add
inc
jo
cmp
add
nop
imulb
push
inc
add
lods
or
nop
rcr
scas
inc
inc
jg
sub
leave
pop
mov
add
mov
cmp
add
int
aas
xchg
and
sbb
sbb
mov
add
and
cltd
adc
add
sbb
sub
add
add
and
out
xlat
push
mov
jo
adc
hlt
inc
add
add
clc
stos
dec
dec
add
add
ss
xchg
xchg
sahf
outsl
inc
xor
movsl
dec
and
mov
xchg
xchg
dec
das
mov
ret
jns
jmp
add
pop
dec
push
inc
mov
mov
scas
xor
cmpsl
or
add
add
out
xchg
add
push
dec
sub
mov
sub
sbb
movsb
adcl
sub
add
sahf
test
jge
add
test
jecxz
jb
fcmovnb
xchg
cmc
sub
jo
jns
mov
dec
sbb
call
add
add
add
lods
scas
mov
pop
aad
cmpsb
fcmove
fisubrl
lahf
mov
and
cld
mov
je
xorb
mov
add
add
das
scas
insl
inc
xchg
cwtl
mov
jnp
pop
sub
add
add
loop
mov
jl
adc
add
add
adc
inc
add
add
call
add
dec
add
push
and
in
mov
add
pop
aam
dec
mov
mov
pop
adc
aad
or
and
cmp
outsb
jecxz
adc
mov
add
daa
test
cmpsb
sbb
mull
add
add
add
add
jae
lea
adc
pop
testb
mov
out
pop
ret
pop
cmpsl
pop
andl
add
add
push
mov
std
xlat
fsubl
lds
movsb
hlt
movsl
push
in
test
cmpl
and
mov
add
pop
rol
add
add
jo
jmp
or
push
icebp
add
jne
bound
inc
daa
mov
inc
cmp
add
add
sti
cmp
add
add
cli
in
jno
rcll
sbb
stc
mov
jnp
loop
je
mov
pop
movsb
cld
xor
mov
mov
or
fwait
test
add
push
cmp
add
add
xor
call
enter
negb
jbe
jmp
cmp
jge
add
add
inc
in
pusha
add
mov
dec
add
add
mov
jns
shll
mov
inc
in
mov
mov
adc
sbb
fwait
pop
in
push
scas
mov
mov
or
add
add
adc
push
mov
out
add
add
test
xchg
hlt
bound
mov
arpl
add
xchg
xor
adc
pop
std
cltd
fdivs
inc
pop
lea
mov
xlat
inc
imul
xchg
cmp
cmpb
and
jmp
mov
stos
add
mov
add
add
nop
dec
add
add
movq
jp
in
ss
rorb
add
std
fists
ljmp
mov
add
jmp
repz
cmp
inc
add
add
stc
rcr
rsqrtps
mov
cs
lea
inc
in
loopne
mov
stc
addr16
aas
aaa
jns
mov
into
jg
add
add
add
shr
add
push
pop
enter
mov
adc
xchg
jne
je
iret
mov
jno
inc
push
xchg
sbb
inc
add
add
pop
xor
add
aam
jb
scas
shl
pushf
cmpl
movd
add
add
adc
add
shll
pop
mov
out
or
mov
add
add
inc
add
add
add
outsl
inc
or
movsb
int3
inc
repz
xchg
mov
loop
and
add
and
mov
shrb
cmpsl
divl
and
add
add
mov
rorb
mov
mov
enter
xor
lret
orb
sbb
xchg
jmp
sahf
dec
add
mov
addl
fcoms
out
fstpl
pop
sub
add
lock
adc
cwtl
in
loopne
pop
mov
push
mov
add
stos
push
stos
lret
call
lret
jnp
add
add
add
and
andl
add
lods
test
lods
scas
fsub
sbb
push
dec
sub
add
add
mov
sbb
pushl
fwait
out
or
adc
inc
add
lret
push
lcall
jae
adc
sub
jno
mov
mov
nop
xchg
lcall
add
dec
popa
jp
leave
mov
lock
das
mov
dec
adc
jnp
lcall
add
add
ss
dec
add
add
cmpsl
add
add
aaa
adc
push
pop
xchg
cmp
in
adc
xchg
mov
pushf
jno
cmp
iret
call
rorl
bound
add
add
or
lahf
imul
outsl
repnz
aas
and
add
add
sarl
add
ret
aad
or
mov
pop
les
mov
mov
add
cmc
jns
out
dec
out
les
mov
mov
adc
es
cmp
adc
std
push
fwait
xchg
push
cmp
dec
push
int
lret
fisubrl
pop
outsb
in
mov
imul
gs
ret
push
push
mov
mov
aaa
outsl
xor
inc
sbb
add
add
mov
fstl
adc
in
inc
fdivrs
jg,pt
mov
or
cli
pop
movl
pop
cmp
add
cli
imul
fiaddl
add
dec
add
xchg
jo
je
push
stc
out
add
add
add
xchg
push
popa
jp
and
mov
add
add
iret
jbe
sbb
xor
jae
test
jl
adc
lods
loopne
pop
das
rcll
xor
enter
dec
sbb
in
and
mov
fidivs
xchg
out
cs
repnz
call
shr
add
icebp
cmp
dec
cmpsb
psubw
add
inc
call
cmp
popa
mov
sbb
cmpsl
jbe
loop
inc
add
add
or
mov
add
add
loope
pop
gs
ds
lock
scas
outsl
lret
add
add
negb
mov
bound
adc
add
leave
and
mov
add
add
dec
ds
jnp
inc
das
jge
decl
add
lret
pop
jle
mov
arpl
fwait
cs
enter
jmp
xor
enter
pop
mov
xchg
je
sbb
fildll
stc
push
sbb
mov
mov
xchg
xor
or
mov
mov
push
repnz
divl
add
mov
popa
xor
stos
fldcw
mov
sub
mul
mov
or
pop
cltd
inc
les
hlt
cld
enter
fcomip
dec
cmp
lock
aad
add
and
sub
addl
icebp
and
jge
inc
inc
inc
inc
add
add
jnp
mov
in
xchg
cmpsl
lret
xorb
xor
cmp
add
add
pop
sbb
dec
fwait
cmp
ficomps
aaa
outsl
lret
and
movb
inc
out
out
pusha
add
aam
out
leave
insb
add
add
mov
cs
or
bound
jae
rcl
jle
add
add
mov
das
not
xchg
sbb
push
stc
notl
jp
ret
push
dec
add
lret
add
add
mov
mov
mov
and
mov
jae
inc
xor
add
mov
or
add
add
pushf
inc
add
cld
and
out
arpl
dec
add
add
add
and
dec
xchg
sbb
or
mov
push
xchg
add
add
add
in
lea
shll
pop
or
add
add
enter
mov
test
call
pop
push
push
add
mov
mov
fildl
xor
xchg
addl
add
add
jnp
insb
add
add
push
inc
inc
cmp
fwait
sub
orb
push
shl
xchg
cmpsb
pushf
fucom
jbe
mov
in
pop
gs
jecxz
jg
cmp
mov
in
pop
jge
cmc
and
aas
push
jmp
mov
jecxz
xchg
loopne
stos
int3
divl
inc
add
gs
sbb
out
dec
mov
cmpsb
les
mov
out
mov
mov
dec
loope
rcr
cmp
test
out
add
pop
xchg
sub
inc
add
test
add
add
lret
mov
jnp
or
add
add
nop
xor
pop
pop
jns
pop
cli
jge
jb
mov
add
add
sbb
dec
sar
xchg
pop
icebp
lods
mov
loop
pop
push
sbbl
testl
mov
mov
cmpsl
lods
maxps
in
and
add
cmp
loop
add
jo
mov
out
dec
add
add
gs
divl
jne
push
jnp
inc
popf
or
cltd
outsb
xor
dec
xchg
jae
add
mov
inc
add
sbb
dec
je
push
ljmp
mov
mov
push
mov
arpl
out
ljmp
nopl
pop
xor
xchg
mov
fstpt
mov
fildll
or
insl
movsl
sbb
cld
test
mov
xchg
mov
popf
jp
adc
sub
mov
jnp
loop
cld
jb
ja
add
insb
add
jno
xchg
and
xchg
icebp
addr16
aad
mov
cmp
add
inc
cmp
lret
das
sbb
jne
add
jb
lcall
jno
int
cs
sahf
filds
ja
add
dec
adc
cmp
sahf
cmpsb
aam
lcall
mov
pop
jbe
mull
testb
mov
or
dec
add
lret
cli
fidivl
mov
mov
cmp
mov
cld
push
sub
add
add
movsb
aad
imul
add
imul
add
add
cmp
add
rcl
call
and
add
add
inc
xchg
xor
cmp
int3
inc
xchg
inc
mov
add
shrb
add
shrb
mov
add
jge
mov
fiadds
mov
les
add
loop
add
jecxz
add
add
add
adc
jnp
mov
xor
test
xchg
js
insl
ret
add
add
jb
pop
mov
mov
add
add
lods
mov
sub
nop
inc
daa
jae
and
mov
add
add
xor
pop
aad
mov
pop
xor
sub
cmpsl
sbb
sti
push
cmp
push
and
jl
mov
pop
mov
inc
add
add
test
pop
inc
mov
mov
xor
cmp
mov
pop
or
pop
mov
add
mov
mov
push
mov
outsb
xor
cld
mov
popa
out
hlt
out
inc
arpl
add
add
fwait
inc
shrb
jle
test
pop
subb
jge
push
stos
inc
lret
cs
int3
movsl
jns
xchg
mov
int
aam
push
inc
jecxz
int
out
cs
pop
subl
dec
add
add
push
dec
push
push
xchg
outsb
ret
mov
aad
shll
add
add
mov
enter
bound
jmp
loop
fmul
xor
xchg
xchg
test
mov
pop
push
mov
das
outsl
movsb
loopne
or
add
mov
push
and
push
sti
lods
popf
ds
xchg
lret
add
add
xor
add
lret
ss
add
jle
push
orl
dec
mov
iret
sub
outsb
inc
add
inc
mov
mov
imul
add
and
add
add
rorb
add
add
add
inc
repz
cld
outsb
ss
ja
je
add
int3
sti
pop
cmp
xchg
sub
jns
aas
lea
add
pop
sub
xchg
fildl
add
jmp
xor
sbb
test
int3
jge
cmpsb
mov
jl
mov
cmp
add
ret
mov
sub
xchg
dec
mov
pop
xor
pop
push
pop
xor
shll
add
add
lea
mov
int
fcoms
xchg
or
mov
adc
stc
add
add
data16
xor
pop
std
rcrl
push
mov
mov
stc
out
test
dec
mov
xor
push
push
pop
xor
out
js
inc
bound
andl
daa
or
add
mov
or
mov
jle
add
add
sbb
mov
add
add
cmp
jl
add
jge
arpl
sarl
dec
out
adcb
add
adc
xor
fistpll
aas
mov
mov
add
add
cmc
cli
mov
inc
sub
fcomps
fists
sub
add
negb
jecxz
in
xor
lea
popf
adc
in
jbe
mov
shll
outsl
jmp
jne
add
repz
arpl
inc
stos
movsl
add
add
add
mov
add
add
pushf
push
aad
dec
jge
fildll
dec
sbb
out
push
mov
jl
mov
int3
dec
pop
xchg
sub
add
mov
add
add
into
lret
insb
add
cmp
lds
and
add
mov
add
adc
testl
inc
cmp
sub
jge
inc
add
stos
fidivrl
movsb
mov
lea
xchg
pop
outsl
insb
add
adc
add
stos
sub
jl
mov
mov
mov
mov
pushw
jmp
add
cwtl
jp
mov
sub
add
inc
cltd
fwait
in
sbb
add
jbe
mov
adc
pop
cmpsb
inc
fildll
mov
add
lcall
sub
mov
repz
mov
jnp
push
imul
add
out
mov
add
add
mov
shl
mov
push
shr
in
stos
xlat
jge
outsb
jge
call
scas
xor
in
jne
push
mov
jo
test
scas
cmp
lret
mov
and
inc
push
filds
or
sbb
add
add
leave
jbe
idivb
das
ficoms
fistpll
lret
hlt
xchg
inc
cmpl
data16
sar
aaa
mov
add
lret
mov
jne
xchg
sar
adc
jne
fsub
sub
mov
ret
and
add
add
sbb
inc
xlat
push
or
add
add
mov
add
outsl
xlat
dec
add
movsl
fstpl
dec
and
rcll
lret
pop
fstpl
pop
inc
leave
dec
ret
and
icebp
jo
sbb
fwait
outsb
iret
xor
adc
adc
fcmovb
dec
pop
xor
das
mov
pusha
add
add
jo
mov
or
mov
nop
les
add
pushf
pop
inc
xchg
or
mov
adc
mov
pushf
and
mov
lret
mov
in
xor
rcrl
inc
add
add
sahf
iret
test
add
add
and
add
add
xchg
lret
sbb
xchg
into
sub
and
mov
pusha
add
add
sub
add
add
dec
add
add
and
icebp
ja
fisubl
add
dec
je
xchg
dec
mov
mov
jmp
lret
fisubs
dec
add
add
add
bound
xchg
lcall
scas
inc
add
xchg
mov
adc
mov
xor
or
xor
fsubr
xor
int3
or
fwait
xchg
repz
sub
add
hlt
xlat
add
add
add
pop
jle
mov
sub
add
add
fisubrl
sub
dec
jp
lock
mov
stc
xchg
repz
push
inc
add
add
sub
add
add
mov
mov
or
add
add
or
and
mov
lahf
lock
jbe
aam
sub
mov
nop
stos
xor
iret
popa
push
adc
orb
adc
jbe
sbb
dec
and
add
fcmovnbe
clc
movsb
cmpsl
jbe
push
adc
js
test
shlb
sti
shlb
mov
lds
mov
xchg
rcr
xor
add
ret
outsb
jo
dec
mov
jge
mov
fsubrl
idivb
mov
int
and
add
add
std
sub
shrb
mov
pushf
data16
shl
repz
repnz
adc
out
add
add
add
jp
xor
xchg
movsb
shlb
sub
iret
cmp
fmulp
clc
out
jbe
inc
rorb
add
cmc
xchg
xchg
rcr
xor
push
jge
mov
in
mov
xchg
inc
add
add
mov
popf
dec
sub
sbb
shlb
add
add
inc
mov
mov
outsl
lret
sbb
dec
add
add
jbe
dec
cli
pushf
pusha
add
add
jg
das
adc
xchg
insl
in
xor
push
fnstcw
ss
cmc
aad
xor
idivl
mov
orb
add
add
add
add
dec
inc
js
xchg
cmp
mov
pop
lods
out
cld
adc
or
push
sti
cli
mov
mov
add
cld
push
cmpsl
rolb
mov
cltd
fstpl
sub
rcrb
xor
add
cmp
lds
ja
sbb
push
ffreep
sti
xor
inc
add
add
popa
sbb
fcmovnbe
repnz
sbb
in
fnsave
std
mov
add
add
pop
cmp
jb
add
add
outsl
fwait
or
mov
adc
pop
mov
scas
fstps
gs
add
add
add
jl
ljmp
call
add
pop
rcrb
jl
mov
add
and
inc
push
and
add
add
mov
inc
scas
push
mov
add
ds
cmp
add
pop
pop
out
daa
shll
es
push
fidivrs
enter
add
jne
add
in
out
inc
sbb
and
add
add
mov
inc
cli
push
and
sub
add
add
add
pop
sub
jl
dec
jb
jp
dec
outsl
insb
add
add
add
mov
jp
push
pop
repnz
jne
lds
repnz
add
add
jp
inc
inc
push
shlb
and
ret
loope
push
roll
insb
add
das
mov
jo
subl
add
jecxz
add
testl
push
fcoms
sbb
xchg
push
jecxz
sub
push
mov
jne
rcrl
icebp
push
test
repnz
mov
dec
add
or
and
lret
and
test
cltd
repnz
push
add
add
lret
ljmp
push
insl
pusha
add
xor
pusha
add
add
sbb
loop
les
ret
or
into
data16
pop
mov
arpl
sub
lods
cld
mov
mov
push
clc
sbb
add
lret
orb
test
add
add
jmp
xchg
xchg
inc
add
mov
fimull
add
add
leave
addb
and
mov
add
adc
adc
and
mov
xorb
add
xchg
cwtl
push
mov
daa
js
repnz
mov
lret
cmc
pop
dec
push
adc
mov
inc
jmp
andl
fistps
lods
in
subl
sbb
pop
xchg
jno,pn
arpl
lret
cmp
add
clc
addl
xchg
fstpl
jb
dec
jg
insl
push
loope
or
add
stos
jbe
jo
jl
push
or
add
add
repz
add
int
push
ds
into
and
ljmp
mov
xchg
cwtl
xchg
out
or
hlt
push
dec
nop
or
add
add
add
add
add
sti
sbb
repnz
add
add
inc
mov
push
aad
lods
cli
mov
call
lcall
add
add
lahf
imul
lods
push
ja
sbb
ret
mov
add
add
mov
icebp
test
xchg
push
shlb
add
add
xchg
dec
loope
xor
lcall
mov
xchg
mov
in
mov
jae
add
add
jp
jmp
xchg
es
sub
div
mov
outsl
dec
add
or
add
add
ret
test
popf
dec
fistpll
aad
cmp
add
dec
lret
fcmovbe
jne
xor
ret
push
mov
scas
xor
jno
popf
add
mov
arpl
add
test
cmpsb
xchg
mov
cmp
add
add
add
aaa
mov
sub
scas
cltd
pushf
out
scas
xchg
push
mov
mov
jo
ds
xor
addr16
mov
adc
sbb
add
add
lahf
sub
outsb
xor
mov
xchg
test
jo
dec
add
add
imul
push
cmpsb
add
add
and
or
sbb
xor
mov
les
in
pusha
add
add
ret
cli
cmc
sub
shl
idivl
cwtl
push
cmp
cmp
mov
and
fsubrl
ret
dec
push
sahf
stos
mov
lret
push
sbb
std
int
jno
cmp
jne
imul
mov
mov
add
add
add
imul
loop
out
mov
adcb
leave
dec
push
xchg
add
xlat
dec
shll
push
xor
cmpsb
fnstcw
jb
inc
or
add
add
stos
aaa
out
bound
loope
dec
add
mov
mov
aas
inc
add
add
wbinvd
rcr
xor
scas
das
fistps
out
sbb
pop
add
add
add
andl
add
leave
imul
mov
mov
add
adc
push
and
cmp
movsl
cwtl
sbb
movsb
popl
mov
add
add
aaa
jae
hlt
cmp
mov
cmc
pop
lret
repz
add
into
xchg
stos
mov
push
ror
imul
mov
inc
mov
add
add
lea
add
add
stos
cmp
loop
out
adc
add
in
and
mov
repz
loop
and
push
fadds
mov
popa
sub
jle
mov
dec
xchg
inc
cmpsb
rolb
add
add
ret
mov
cld
repnz
mov
and
aad
mov
add
aam
sbb
xor
test
add
xor
xor
add
push
iret
clc
popa
xlat
inc
clc
out
jge
lods
mov
xchg
std
push
sbbl
sbb
les
xchg
adc
and
aaa
or
add
add
add
pop
fcoml
pop
hlt
push
pop
fwait
lods
push
inc
int
jg
sbb
add
lock
jmp
imulb
outsb
cli
les
push
push
and
mov
orl
mov
xor
push
mov
jl
xchg
dec
add
add
insb
add
add
mov
repz
mov
mov
add
xor
sti
and
and
mov
popa
dec
aam
cmp
std
jge
sub
rcll
sub
add
add
add
mov
push
js
push
push
pop
shlb
xor
push
cmp
add
and
mov
lcall
popa
insl
lret
fimull
add
js
lret
adc
add
dec
cwtl
pop
cltd
ja
aaa
add
dec
ficoms
cmpsl
cmpsb
aad
adc
jge
pop
fucomi
out
mov
xchg
sbb
les
mov
add
add
aas
inc
stos
xchg
sub
fists
addb
lret
outsb
arpl
outsl
push
jae
add
add
lret
pop
adc
lock
imul
add
inc
and
sbb
sbb
push
js
lods
call
into
mov
stos
shlb
add
push
xchg
lea
dec
add
add
ds
ret
aas
push
mov
je
mov
xor
imul
add
int
inc
cmp
outsb
sahf
mov
push
and
cld
xor
xchg
int3
stos
cmpsl
cmpsl
stc
lods
test
pop
add
js
mov
lds
add
mov
gs
add
mov
xchg
mov
jle
xor
sbb
mov
leave
loop
sbb
das
mov
int3
insb
add
add
faddp
imul
xlat
push
mov
jno
xchg
jno
inc
pop
jno
out
out
lret
jecxz
mov
sbb
sbb
xor
mov
and
pusha
add
add
mov
xor
sub
mov
testb
add
lcall
fidivl
add
mov
add
jecxz
add
xchg
hlt
in
inc
add
or
mov
rcrb
mov
cld
sbb
pop
inc
add
add
push
mov
mov
cltd
roll
cmpsb
or
add
add
add
mov
add
add
pop
jg
and
add
mov
and
mov
fcmovne
movsb
int3
je
ret
dec
mov
mov
loopne
cli
test
outsl
std
mov
jp
add
sbb
sub
loopne
or
pop
push
bound
jmp
filds
mov
pop
mov
add
mov
and
jae
push
lahf
push
xor
sbb
add
pop
jo
sub
lea
push
je
pop
inc
xor
add
add
mov
emms
test
cli
adc
xchg
pop
imul
insl
mov
fildl
scas
in
scas
mov
sub
add
add
add
add
lock
xor
inc
xchg
dec
in
add
mov
sbb
sbb
mov
add
xchg
pushf
testl
ret
xchg
or
cmc
pop
int3
lret
dec
dec
fcoms
push
js
call
dec
add
add
cmp
add
rcrb
cvtdq2ps
fildl
add
xchg
sbb
sub
add
add
lret
shrl
add
sahf
decb
mov
test
out
daa
inc
daa
fstpt
xor
mov
jge
loop
aas
mov
es
adc
test
add
add
add
push
dec
add
push
jo
add
add
push
mov
arpl
add
mov
mov
in
out
mov
add
add
lcall
arpl
repz
clc
dec
insb
add
add
imul
mov
cli
add
add
jmp
add
xchg
adc
add
or
in
add
add
cmp
dec
adc
rorl
fcomip
jl
in
mov
sub
add
add
push
rolb
lret
and
mov
add
add
adc
pop
jle
jo
push
insl
adc
cmp
ficompl
add
add
sbbl
jae
push
out
jb
push
and
mov
mov
xchg
fistpll
dec
cmpsb
inc
add
add
add
imul
dec
lods
in
fsubl
add
add
ljmp
and
add
add
in
mov
add
out
push
sarb
stos
lahf
in
add
add
imul
xchg
pop
sub
jp
cld
xchg
lods
mov
call
mov
add
add
add
adc
push
adc
push
rep
sbb
enter
add
andb
sub
sbb
call
add
add
imul
inc
add
add
sbb
pop
sbb
test
inc
clc
sub
mov
in
jp
push
mov
ds
xor
daa
mov
xor
cltd
add
mov
mov
shrb
add
add
clc
incl
loop
add
add
aad
dec
add
scas
jge
or
and
add
add
dec
mov
cmp
pop
out
in
lea
mov
rcll
mov
push
negl
in
and
mov
adc
in
outsb
pop
sbb
mov
loope
dec
sbb
add
jne
xor
outsb
arpl
mov
aad
das
jo
sub
push
xchg
push
add
aad
pop
xlat
cli
icebp
add
icebp
out
push
jle
rcl
movsb
xor
mov
loop
jge
dec
jmp
out
and
mov
add
sub
mov
sbb
outsb
sbb
push
sub
add
pop
pushf
int3
sbb
fst
mov
arpl
bound
add
jle
imul
inc
into
jbe
fsubl
add
add
xchg
iret
push
xorb
fsts
jmp
adc
or
mov
mov
loope
jb
les
inc
jb
cmp
sbb
add
or
add
add
cmp
add
hlt
xchg
lcall
lods
aas
dec
mul
cmp
mov
push
mov
stos
data16
add
add
jae
sbb
cld
movntps
add
push
mov
jmp
jns
add
add
add
add
cmpsb
lret
gs
mov
fadds
daa
addr16
les
add
scas
scas
repnz
add
add
fdivs
pop
in
mov
sbbl
pop
mov
aaa
hlt
pop
das
scas
jnp
push
rol
xorl
les
into
inc
pop
lock
ja
pushf
dec
add
add
add
mov
xlat
mov
add
lods
cmp
lods
pop
scas
cmp
test
sbb
pop
ret
aam
adc
mov
or
faddl
mov
mov
lret
in
outsb
les
loope
mov
aaa
mov
cs
mov
add
add
pop
icebp
mov
jle
push
mov
mov
add
mov
jnp
xlat
mov
mov
xchg
sti
lods
rorb
das
and
aad
lock
lret
jo
imul
pusha
add
adc
popf
mov
mov
mov
jne
xchg
sbbl
sub
add
add
loop
mov
mov
clc
shl
imul
add
add
add
adc
add
add
stos
cli
rorb
add
push
sbb
add
out
xchg
inc
push
pop
mov
jb
cmp
sub
mov
adc
cmpsl
ret
add
push
adc
loop
fidivrl
fldt
or
add
add
pop
int3
inc
jno
sbb
daa
gs
push
or
add
add
cmp
jnp
add
mov
add
add
and
sub
add
add
jno
xor
and
mov
add
mov
insb
add
fnstsw
gs
lock
or
mov
hlt
shrl
add
add
jmp
lea
inc
das
pop
jae
push
popa
movsb
jecxz
jg
mov
out
pop
xor
clc
bound
lret
imul
add
add
pop
aam
xchg
mov
xchg
cmp
add
inc
add
add
stos
sbb
stc
cmc
fcoml
xor
add
add
push
adc
daa
mov
popa
mov
out
jns
std
repnz
mov
andb
mov
mov
pushfw
pop
dec
add
dec
sbbb
int3
adc
push
rol
fnsave
push
jbe
daa
enter
push
add
jl
cltd
int3
call
and
push
push
sbb
add
mov
inc
imul
dec
add
fisubs
cmp
mov
bound
inc
mov
xchg
pop
cmpsb
loop
inc
mov
jns
scas
les
in
ljmp
sar
and
sbb
loop
jmp
data16
inc
shrl
xchg
fstpl
lods
sbb
popf
ljmp
aad
pop
cmpl
sbb
add
shrb
cs
jl
sub
adc
add
add
xchg
mov
repnz
mov
movsb
mov
push
push
inc
add
add
jg
stc
rcl
pop
jg
mov
xor
cwtl
pop
inc
add
add
pop
adc
add
add
dec
add
add
frstor
adc
xchg
cmp
pop
push
out
dec
pinsrw
hlt
jns
scas
jns
aas
mov
bound
xchg
inc
lds
outsl
fistpl
push
inc
cmpsb
adc
jb
mov
inc
xor
inc
lret
loope
inc
push
imul
ljmp
sub
add
jle
sub
mov
ret
cmp
pop
mov
outsb
pop
mov
mov
cmp
sbbl
add
add
popa
test
add
add
sub
cmp
mov
in
sbb
adc
push
xor
loop
das
or
add
sub
jns
push
mov
movsb
in
pusha
add
add
push
outsl
in
push
add
add
add
jle
aas
pusha
add
xor
add
jns
jo
test
cltd
dec
xchg
xor
scas
outsb
push
mov
into
xchg
jl
scas
shrl
mov
adc
scas
jp
sbb
jne
adc
rolb
aaa
and
mov
mov
js
pop
stc
jns
fsubp
sub
push
add
mov
xor
mov
mov
cmpsb
inc
add
mov
repz
negb
cmpsl
pop
jl
mov
lods
aam
inc
add
add
sbbl
lahf
ljmp
out
lds
repz
xor
jp
test
fidivrl
stos
add
gs
add
add
into
add
add
push
xchg
adc
xor
aaa
cmc
dec
push
repnz
lods
out
add
add
nop
sub
aam
repz
call
out
sub
mov
mov
mov
leave
mov
lret
lret
fwait
inc
ret
inc
clc
cwtl
inc
add
add
mov
add
movsb
xor
repnz
add
add
jne
jno
or
add
add
ret
loopne
adc
popf
pop
imul
add
add
add
mov
and
addr16
jg
cltd
pcmpgtb
add
add
add
loope
inc
in
testb
xchg
dec
add
fisubrs
adc
add
lea
add
add
dec
mov
adc
sbb
cmpsl
sub
in
js
out
push
dec
jns
cmp
sahf
insb
add
mov
push
andl
add
add
addr16
mov
pop
dec
push
push
dec
std
xchg
out
jne
mov
mov
add
add
enter
pop
pop
mov
out
sbb
ficoms
or
add
add
add
push
pop
mov
pusha
add
add
dec
push
movsl
call
mov
fcmove
mov
add
in
jmp
in
sbb
adcb
mov
xchg
fdivr
dec
dec
and
add
add
pop
dec
lods
cmp
cmp
lcall
add
jae
cmc
shrl
idivb
out
pop
and
add
add
sbb
add
sbb
mov
jo
sub
add
add
jp
out
sub
icebp
xchg
lods
adc
sbb
push
inc
cmpsb
or
mov
pusha
add
xlat
cmp
int3
imulb
add
rolb
add
push
sysenter
jo
cmp
and
dec
add
addps
adc
in
mov
mov
cmp
add
xchg
xchg
repz
in
loope
test
and
adc
out
jbe
and
and
add
add
xor
ret
lods
test
or
push
mov
mov
aas
repnz
lret
add
add
mov
add
idivb
out
add
add
add
add
push
add
or
jne
push
sub
add
push
out
std
divl
mov
repz
fwait
mov
mov
xchg
and
mov
mov
add
movsl
push
xchg
push
jecxz
cmp
ds
pushf
in
int
xor
imul
jne
dec
add
add
jle
xor
pop
frstor
mov
fbstp
and
cmp
add
data16
add
add
and
fisubs
add
add
push
xchg
cmp
jg
cltd
out
dec
lods
inc
lret
add
xchg
mov
arpl
das
add
sub
push
mov
mov
mov
jecxz
dec
xchg
xchg
imul
addb
add
add
add
or
xor
mov
jp
adc
lea
dec
insl
scas
pop
inc
sahf
cwtl
push
and
add
add
xchg
mov
push
ds
adc
out
packssdw
iret
pop
and
mov
mov
lcall
add
dec
icebp
sbb
shl
cmpsl
das
cs
sbb
inc
add
add
movq
pop
xchg
pushf
jae
outsl
sub
pop
and
add
add
leave
push
into
jne
add
mov
push
fwait
add
add
gs
dec
movntq
mov
or
cs
and
push
and
orl
aad
sbb
mov
iret
xchg
leave
cmc
sti
cmp
mov
pop
roll
sbb
mov
add
jl
xlat
call
pop
rcr
mov
sub
fnstcw
push
pop
mov
add
adc
lcall
scas
stc
mov
cli
add
add
sbb
sub
add
add
fldlg2
sub
or
shrb
add
add
aaa
movsl
dec
add
into
xchg
cmp
and
mov
clc
push
lret
daa
mov
add
das
add
test
adc
ret
into
cmovl
add
add
mov
add
popf
jp
dec
add
out
aaa
push
das
sbbb
rclb
fsub
sbb
pop
pushf
movsb
sahf
roll
es
bound
lret
popf
add
xor
rcrl
mov
ss
pop
xlat
xor
push
xchg
mov
inc
push
fistl
xchg
pop
jg
mov
adc
add
stos
sbb
add
add
sbb
or
adc
jmp
outsb
jbe
rcrl
add
add
stos
in
mov
mov
and
mov
ss
lret
pop
push
jmp
add
arpl
loope
jmp
daa
ss
outsl
cmpsl
push
fdivrl
das
fwait
sarl
notb
add
outsb
jge
xchg
fwait
pop
adc
hlt
jns
add
add
lods
inc
add
add
jmp
add
out
fbstp
call
nop
add
lcall
add
mov
fdivrs
add
flds
test
push
and
jne
cli
mov
xor
into
and
mov
cs
jne
add
lds
mov
pop
cmpsb
aam
sub
cmpsl
push
rclb
mov
pop
call
jle
fldenv
xchg
imulb
pop
inc
lods
or
mov
shll
sub
add
in
xchg
sahf
xchg
xchg
lret
or
add
add
gs
in
sub
pop
lods
and
add
add
cli
cmpl
or
sbb
int3
insl
sub
mov
mov
call
repnz
and
mov
into
popf
sahf
jo
adc
ja
sbb
adc
and
add
add
mov
daa
push
xchg
push
stc
jae
aaa
out
push
test
add
add
aad
add
add
add
inc
mov
negl
xchg
sub
sub
mov
or
jns
mov
mov
push
xchg
mov
cld
xchg
es
decl
cmpsl
and
ror
idivl
ret
push
push
stos
sbb
mov
add
stos
lret
repz
dec
mov
add
add
out
sub
add
add
or
add
xlat
mov
xchg
add
add
push
es
mov
jns
push
inc
xlat
scas
or
push
xchg
adc
lods
movb
add
mov
popf
ljmp
dec
das
fidivrl
pop
cmp
jae
fcoms
out
dec
sbb
push
and
mov
in
add
add
xor
lea
aaa
sbb
xchg
test
je
lcall
sbb
jge
sub
mov
xor
xchg
sbb
sub
jl
rolb
xchg
adc
fisttpl
arpl
add
btr
ja
test
xor
add
fwait
les
xlat
xchg
out
imul
lcall
test
cwtl
ret
call
jl
stos
pop
cmp
aam
stc
test
add
add
mov
nop
out
jo
xor
mov
jg
and
jecxz
push
fidivrs
frstor
cld
ror
icebp
push
aam
insl
enter
add
ds
add
add
push
sub
add
xor
inc
adc
mov
jg
bound
fiaddl
adc
push
test
rcll
aaa
loop
mov
add
add
add
push
scas
mov
cld
clc
in
xchg
mov
xchg
mov
aas
jno
ljmp
popa
and
and
mov
mov
inc
testb
scas
cmp
mov
adc
jbe
call
inc
in
xchg
sti
fsts
rol
inc
scas
mov
stos
loop
lea
or
or
xor
mov
cmpsl
mov
add
orb
add
repnz
repz
sarb
sub
add
add
int3
cld
les
pop
aam
and
outsb
or
fldcw
mov
xchg
or
add
add
mov
add
mov
repz
add
mov
fldt
popa
xor
mov
pop
js
jns
lea
pop
push
inc
jno
pop
movsl
test
aas
dec
xchg
adc
and
add
stos
orb
mov
cmp
out
mov
adc
rcl
in
fcom
inc
cmp
inc
add
loope
xchg
fsubl
cmc
fcoml
add
outsl
cmp
sbb
jge
or
mov
lea
adc
fistl
add
jmp
test
jns
je
mov
jae
lods
xchg
sbb
mov
xchg
xor
ss
pop
or
rcl
add
subb
js
out
shll
sar
call
adc
xchg
add
out
lock
std
or
add
add
clc
sub
add
add
mov
iret
mov
jle
loop
or
add
add
jmp
insb
add
add
das
push
in
bnd
xchg
in
js
dec
sub
js
gs
jge
imull
mov
dec
inc
mov
mov
mov
cmovs
add
add
pop
add
add
add
push
add
push
in
cmc
sbb
or
dec
movsl
adc
dec
add
xor
add
add
add
xor
enter
arpl
sbb
sbbb
mov
fisttpl
insb
add
add
cwtl
xor
pop
lret
ror
pop
call
cs
clc
cmp
and
mov
nop
sub
mov
pop
mov
sbb
cmp
add
add
or
fdivr
dec
add
add
add
push
jne
cmp
jl
jmp
push
xchg
test
sbb
iret
loop
xchg
cmc
rcll
cwtl
aaa
lahf
jbe
insb
add
add
add
push
add
lea
xchg
in
add
cmp
inc
adc
add
add
insb
add
sahf
ficoml
xlat
pop
lret
call
add
gs
and
out
insb
add
jp
daa
insl
andb
into
mov
jb
sub
in
divl
cltd
inc
repz
aad
inc
add
stos
mov
add
add
stc
lcall
test
pop
jl
repnz
mov
popa
mov
pop
lock
sub
mov
add
sahf
int3
adc
xchg
stos
dec
mov
add
sub
mov
mov
and
push
stos
lods
insl
mov
add
add
icebp
fisubrs
cmp
add
add
pusha
add
sahf
stos
rcrl
sbb
dec
sbb
xor
test
or
add
add
mov
jo
je
mov
mov
jne
ja
lcall
inc
or
jmp
or
mov
sub
pop
stos
sarb
roll
aaa
fsubs
mov
dec
pop
ss
mov
sub
add
add
push
movsl
mov
or
mov
and
jo
add
add
add
cmp
jp
pop
xor
lods
push
out
inc
sbb
adc
and
out
mov
cmp
xlat
jo
push
je
sbb
imul
push
int
fwait
push
cmp
xchg
mov
ja
and
add
add
js
add
aas
xor
mov
push
or
add
add
dec
cmp
jge
enter
ljmp
add
push
inc
add
add
xchg
enter
add
das
pop
fldz
adc
ret
mov
lock
dec
jno
mov
shlb
out
cmp
cld
sbb
add
add
loop
cld
dec
mov
cltd
fnstsw
pop
cmp
ljmp
add
cmp
daa
pop
sub
jle
xor
int
push
dec
add
add
dec
lret
lods
add
xchg
addr16
sbb
sti
daa
jg,pt
xchg
jl
xor
add
add
dec
pop
push
add
mov
add
add
pop
mov
addr16
dec
add
add
repnz
and
mov
push
inc
add
add
or
mov
mov
xlat
dec
cmpsb
jne
lock
sbb
add
dec
add
loope
outsb
daa
scas
outsb
add
mov
mov
shrl
mov
repz
cmp
loopne
fsubs
dec
iret
xor
frstor
add
add
push
fsubl
pushf
gs
mov
js
adcb
enter
mov
push
jmp
add
xchg
jp
call
stos
mov
push
addr16
jns
pop
sub
mov
mov
jno
mov
int
cmpsb
test
xor
add
add
dec
mov
pop
out
mov
mov
add
outsb
icebp
movsl
leave
call
push
fwait
out
xor
cld
mov
imul
callw
inc
and
scas
ret
sbb
fsubl
add
add
add
add
add
pop
push
xchg
in
push
out
sub
and
add
shlb
pop
insb
add
add
ret
imull
das
lods
out
inc
jecxz
sub
fbld
xor
pop
out
jbe
mov
add
add
lea
inc
add
add
fsubrp
negb
sub
mov
xor
mov
cmp
adc
jnp
rcll
push
into
fwait
jge
jne
das
arpl
nop
shl
xchg
ljmp
jmp
pop
icebp
frstor
nop
xor
mov
loopne
jbe
add
jne
pop
sti
loopne
loop
sub
add
add
test
add
add
fildll
mov
xorb
and
adc
mov
ficompl
jbe
sbb
fstps
jmp
add
xor
hlt
mov
sub
add
jbe
loope
mov
jae
out
sbb
and
mov
add
add
add
hlt
dec
or
outsl
xlat
bound
add
mov
jmp
cmpsl
and
loop
push
fldcw
xlat
jmp
mov
mov
xchg
mov
imull
lods
mov
adc
add
fsubs
mov
pop
jne
call
out
jne
add
add
loopne
sub
cs
aas
dec
xchg
hlt
inc
scas
cwtl
fisubs
outsb
mov
fwait
inc
add
add
adc
imul
ja
or
addl
gs
push
loope
cmp
les
mov
xchg
cmc
aad
addl
add
jnp
cmp
das
pop
mov
pop
push
cmpsb
xor
jbe
add
xor
add
cmp
mov
dec
addr16
push
pop
fsts
pop
add
sbb
out
or
addr16
adc
mov
pop
push
jne
pop
andb
add
std
into
add
mov
arpl
pop
cmpsl
adc
outsb
dec
loop
mov
in
les
sarl
xorl
xchg
mov
test
test
mov
add
add
xchg
inc
pop
push
mov
and
add
add
mov
push
mov
add
or
add
add
xlat
sub
add
loop
cmp
in
xorb
add
add
pop
fwait
or
mov
add
add
shl
mov
mov
push
fldt
call
idivl
mov
add
and
aam
pop
dec
xlat
lock
add
add
pop
cli
pop
jno
mov
pop
or
add
pop
xchg
adcl
push
cmp
add
xor
mov
aam
xchg
add
insb
add
mov
add
xor
and
adc
jne
pop
mov
fiadds
pop
mov
fucomp
push
out
lods
mov
jno
inc
inc
shrb
add
add
adc
xchg
xchg
out
imul
lcall
aad
xor
shlb
arpl
insl
push
daa
enter
sbb
inc
add
add
add
int
mov
mov
insl
hlt
sbbb
add
add
xchg
push
adc
cmovl
add
add
mov
mov
in
movsb
pop
addr16
xor
aaa
repnz
cmpsb
icebp
or
add
add
jg
es
rcr
bound
add
add
add
add
and
add
iret
out
ficompl
ljmp
add
add
add
add
incb
add
sarl
sub
fstps
push
test
mov
pop
push
add
add
add
xchg
mov
add
aam
test
push
mov
test
lock
mov
sub
add
add
jge
add
mov
jle
pop
mov
xchg
sarb
decb
or
add
add
xchg
sub
add
add
loopne
or
xchg
es
imul
lock
sbb
bound
add
loopne
push
loop
movsl
mov
push
aas
add
dec
inc
add
scas
inc
sbb
mov
or
or
inc
mov
jo
in
or
add
add
sbb
xchg
sbbb
add
sub
gs
and
subb
mov
cli
lcall
mov
clc
imul
jl
mov
sti
pcmpgtb
mov
or
clc
add
mov
mov
cmpsl
mov
aaa
inc
cs
shlb
add
add
cld
aad
xlat
xchg
push
jnp
and
mov
daa
jl
notb
out
ret
iret
imul
add
jecxz
or
in
movsl
loopne
mov
add
pop
mov
add
mov
add
add
mov
jns
imul
xchg
mov
mov
arpl
sbb
enter
jb
mov
mov
add
add
rorb
fstl
dec
add
add
inc
and
xor
fsubp
ds
cmpsl
int
pop
daa
jo
ja
jp
mov
lods
jb
das
mov
pop
jbe
popa
mov
add
mov
add
add
rcrl
push
std
fcmovnbe
add
loope
gs
push
lods
xchg
sbb
dec
pop
adc
andl
add
add
cli
mov
jmp
pop
sti
sub
test
int
sbb
xor
add
fisubl
xchg
inc
cmc
mov
int3
xchg
ret
adc
dec
pop
mov
testl
sti
mov
xor
jb
aam
int3
rolb
int3
in
mov
pop
jg
pop
jl
lret
xor
ljmp
sar
mov
mov
mov
es
jae
sbb
and
add
add
mov
xchg
stos
push
sbb
xchg
push
dec
add
add
add
ret
outsb
jns
xor
int3
push
sbb
stc
cmp
add
and
mov
push
sbb
lahf
das
xchg
stc
and
mov
add
add
sbb
pop
iret
jo
mov
add
add
test
add
add
add
sbbb
lcall
inc
add
add
imul
popa
pop
shll
sub
or
cld
fidivl
dec
add
jmp
push
sub
add
add
lret
add
gs
nop
mov
clc
adc
jle
clc
enter
mov
scas
bound
add
add
mov
inc
add
push
andl
sbbb
mov
pushf
mov
gs
and
xchg
enter
fimull
or
andl
push
push
mov
add
in
mov
push
cmp
or
mov
mov
out
mov
add
mov
add
add
add
out
arpl
in
and
cmpsb
jbe
mov
mov
jg
jo
ficoml
movsl
pop
and
mov
add
add
pushf
lods
add
mov
rcll
sbb
mov
add
mov
mov
or
add
add
mov
mov
add
inc
sub
add
mov
sub
xchg
or
sbb
dec
clc
testb
inc
popf
in
or
lcall
push
imul
adc
sub
jecxz
scas
repz
inc
and
sbbl
add
push
movsb
jecxz
gs
aad
out
inc
popf
andb
inc
leave
aad
inc
loopne
cmova
daa
jnp
shll
aad
aad
cmp
leave
lock
adc
mov
dec
xchg
lock
rcrl
jmp
lcall
dec
xor
pop
xchg
push
iret
gs
fidivrl
cmp
insb
add
add
clc
js
rcl
adc
pop
test
lods
mov
mov
pop
sbb
mov
fucomip
mov
cmp
and
lock
mov
fsubs
sub
sti
sub
and
add
add
stos
jne
shll
scas
jno
or
add
add
add
aas
adc
push
imul
pop
enter
aas
repnz
dec
mov
push
movsb
cmp
jmp
xchg
lods
mov
fdiv
ret
insl
jno
das
inc
add
cwtl
js
adc
dec
xchg
add
xor
ss
fcmovne
cs
mov
jmp
shlb
pop
sub
mov
loopne
jnp
out
and
mov
sbb
mov
pop
add
add
add
mov
add
add
mov
insl
cmp
mov
mov
and
add
add
mov
push
pusha
add
js
mov
push
mov
pop
adc
in
negl
lret
add
int3
jecxz
xchg
sub
add
add
push
icebp
inc
sub
add
add
add
sbb
jp
rol
xor
inc
add
push
mov
cmpsl
mov
cmp
add
jle
movsb
mov
xor
daa
jl
popa
mov
hlt
or
push
and
add
add
add
inc
add
add
inc
aam
mov
scas
je
adc
mov
dec
pushf
xchg
insb
add
jge
out
stos
mov
add
loope
stos
jo
mov
pop
pop
pandn
mov
add
loope
and
mov
inc
ljmp
js
leave
in
movsb
jg
pop
nop
das
iret
adc
xchg
push
test
outsb
and
add
add
mov
int3
jo
mov
add
xchg
mov
add
int3
daa
jbe
jg
jne
fwait
and
add
add
or
add
mov
jbe
sub
mov
push
icebp
rcll
cli
mov
iret
ds
negl
loope
inc
dec
pop
pop
jo
iret
mov
mov
popf
sub
add
add
jno
test
sarl
inc
loope
lcallw
lcall
jle
scas
mov
nop
aam
ljmp
add
pop
mov
es
ja
pop
call
adc
push
clc
xlat
rcll
pop
pop
pusha
add
add
iret
jp
mov
cli
or
add
add
dec
testl
push
int
mul
jo
in
mov
int3
andl
add
and
mov
cmp
pushf
leave
mov
add
cmc
js
cmpsb
pushf
daa
sbb
repz
jp
mov
push
mov
sub
push
lret
imul
aas
xor
xchg
icebp
and
push
lret
in
mov
add
add
daa
xor
test
jns
dec
add
add
xor
aam
adc
ja
pop
adc
repz
aam
push
mov
adc
test
cmp
loope
jne
xchg
sub
setp
or
add
push
inc
or
add
add
int3
int3
xlat
dec
into
and
pushl
cs
xor
dec
add
add
loope
out
out
sub
imul
push
push
lea
cmp
sbb
jecxz
and
add
add
mov
popf
mov
add
add
mov
shrl
cmc
adc
add
add
fnstsw
std
mov
add
popf
cmpsb
xchg
mov
add
mov
cmp
jno
out
push
lds
dec
test
mov
pusha
add
mov
loope
adcb
adc
add
add
mov
inc
jecxz
push
lock
add
add
add
mov
add
int3
pusha
add
add
cltd
jg
int3
mov
js
mov
cmp
add
add
push
fcomi
movsb
adc
inc
add
add
pop
sti
lret
cmc
rorb
add
add
pusha
add
add
mov
add
mov
mov
dec
and
add
add
ficomps
mov
movl
jno
xchg
adc
add
xchg
add
xor
inc
test
mov
push
adc
outsl
push
push
dec
aaa
imul
je
sub
add
add
pop
mov
push
stc
test
add
pusha
add
add
mov
xor
es
cmp
mov
push
xor
add
add
add
aaa
add
mov
js
add
add
aam
or
and
dec
xor
in
test
and
stos
mov
test
outsl
adc
push
mov
lcall
jae
mov
cmp
add
add
dec
add
outsb
xlat
push
add
mov
aad
aaa
rcr
mov
or
add
add
and
mov
mov
rep
lea
lods
mov
inc
add
mov
sbb
mov
cmp
add
movsb
in
cmp
add
add
js
add
mov
push
jg
jecxz
out
bnd
cwtl
nop
pop
or
xor
jne
jae
test
adc
sbb
dec
mov
enter
inc
or
ret
cmp
push
loope
ret
pop
ss
and
add
add
add
iret
xor
loope
push
inc
sbb
insb
add
add
sbb
add
pusha
add
pop
repz
stos
mov
cmc
out
adcl
insb
add
add
inc
inc
movl
es
add
jg
adc
mov
add
fwait
jbe
mov
xchg
push
int3
xchg
jns
xchg
adc
adc
clc
or
sbb
mov
inc
add
dec
bound
sbb
and
xchg
push
push
mov
lret
pop
dec
xor
add
mov
pusha
add
xchg
mov
jge
rclb
and
mov
mov
xchg
daa
popa
sub
movsb
mov
mov
inc
adc
sub
mov
cmc
out
push
jne
sti
adc
testb
add
add
decb
add
add
pop
mov
jecxz
cmp
xchg
xor
add
xchg
ret
imul
adc
sub
pushf
subl
add
int3
jmp
mov
enter
or
out
xchg
cmp
test
shrl
inc
mov
neg
sbb
leave
inc
cltd
sub
add
sbb
adc
or
add
add
jg
mov
jnp
push
sbb
xchg
jo
sbb
add
add
test
fisubrs
add
add
xor
xorb
pop
test
add
mov
fcmovb
jl
add
sub
leave
push
push
movsl
push
jne
clc
cmp
enter
dec
and
mov
cs
cmpsb
lret
pop
add
lock
sub
mov
test
or
shrl
mov
add
add
xchg
mov
push
ud0
jecxz
jmp
lret
cmp
pushf
jmp
jle
icebp
cmp
in
into
cwtl
mov
inc
loopne
sahf
fmuls
or
cmp
lods
dec
pusha
add
int
mov
dec
add
add
das
leave
mov
les
mov
mov
shll
mov
arpl
inc
les
pop
lahf
aad
mov
cmpsl
pop
int3
adc
scas
dec
add
add
stos
inc
aad
push
mov
mov
mov
das
lds
inc
es
mov
out
sub
mov
add
add
dec
add
xlat
adc
xchg
add
add
nop
cmpsl
mov
dec
loop
pop
push
loope
add
push
inc
rorb
sbb
add
add
movsb
dec
pop
mov
rcll
fldcw
loopne
imul
add
add
ds
add
das
shll
pushf
in
xchg
in
enter
mov
jmp
xor
sbb
imull
add
mov
lret
icebp
aaa
aas
mov
insl
rcll
rorl
add
mov
ret
dec
pop
add
cmp
loope
dec
add
add
push
push
fmull
add
add
add
sbb
add
adc
add
add
out
les
xchg
mov
aaa
xchg
loopne
lds
pop
mov
subl
add
mov
es
lods
xchg
adc
loope
push
inc
jg
xorl
mov
pop
mov
add
add
xor
pop
inc
test
stos
stos
scas
popa
mov
mov
lea
leave
sbb
cmc
mov
adc
bound
mov
xchg
and
das
mov
cmp
add
add
xorb
jmp
dec
add
inc
push
lock
mov
fcomi
insb
add
add
idivb
lock
mov
sti
jle
sbb
push
add
add
pop
mov
clc
push
js
push
push
cmpsb
sub
pop
loopne
xor
subl
xor
mov
int
test
mov
test
jo
in
mov
adc
push
pop
addr16
dec
add
es
add
add
push
push
sarb
popa
pop
imul
scas
ss
push
jp
or
add
or
xor
lret
fldcw
cmp
or
mov
jno
or
dec
jnp
push
and
mov
aam
add
add
fldl
mov
dec
add
js
xchg
cltd
sti
and
xchg
out
ljmp
stos
out
mov
ss
mov
pop
clc
jg
cmp
add
mov
pop
cmp
pushf
insl
fisubl
push
packuswb
dec
mov
and
add
mov
call
orl
mov
adc
sbbl
pusha
add
add
out
sub
sti
repz
lds
stos
lds
vmwrite
pushf
frstor
pop
push
mov
icebp
scas
jmp
loopne,pt
pop
bound
adc
test
add
push
inc
inc
icebp
or
mov
jne
mov
mov
mov
cmp
jle
mov
xchg
xor
cwtl
scas
pop
idivb
cli
das
and
mov
adc
in
out
fisttpl
add
mov
add
and
jae
sub
add
in
sub
add
add
jns
aam
sub
mov
fmul
popa
mov
cmp
sub
int3
stos
cmp
xor
jbe
imull
lea
test
aaa
push
stos
sahf
jbe
add
lahf
sarb
js
sti
sub
fwait
adc
and
add
add
push
adc
insb
add
insb
add
add
movsl
clc
loope
icebp
pop
scas
cmp
push
ficomps
inc
add
add
pop
js
add
add
adc
inc
in
push
adc
push
xor
cmp
xor
cs
add
add
mov
mov
dec
ljmp
xor
push
mov
insb
add
add
sub
pop
cld
scas
xor
cmp
insl
mov
into
movsb
push
push
out
cltd
inc
add
add
insb
add
cmp
pop
sarb
inc
sbb
add
add
add
add
xchg
and
out
addl
cmp
add
add
test
sub
mov
push
pop
cmp
pop
inc
add
adc
push
push
cmp
mov
test
dec
cs
add
movsb
mov
in
jp
jae
int3
dec
ljmp
add
add
inc
pop
jp
sub
cltd
jl
test
daa
add
add
add
add
add
jmp
dec
popf
push
mov
flds
add
jae
push
hlt
cmc
pop
popa
lret
lods
mov
cmp
sub
xor
lea
xchg
adc
mov
inc
out
testl
sarl
xchg
add
inc
push
mov
sbb
lods
and
xchg
dec
add
adc
les
adc
les
inc
add
mov
and
and
add
loopne
push
sub
lds
adc
hlt
aam
sarb
leave
into
cwtl
add
decb
mov
jmp
stos
rorb
pop
xchg
xchg
cmp
jae
pop
clc
dec
add
sub
insb
add
movsl
aad
in
cmp
fcmovnu
xchg
jge
xlat
push
pop
or
mov
in
and
mov
ja
call
sub
sub
sbbb
cmp
lods
lods
outsb
jno
xor
rorb
jge
jbe
and
add
add
mov
mov
and
aas
jne
inc
add
call
out
push
cmp
sbb
ret
cltd
loopne
cwtl
sub
jp
xor
stos
add
jno
in
dec
add
add
rcll
cmpsl
pop
inc
test
xchg
iret
sub
mov
out
mov
call
jb
movsb
jle
push
mov
add
sbb
ss
mov
icebp
push
pop
out
jno
icebp
popa
scas
cwtl
and
cmc
sbb
add
add
fistl
or
stos
adc
lret
data16
or
xchg
ljmp
add
add
pushw
dec
add
inc
add
mov
push
mov
inc
or
popf
cmp
add
add
push
lahf
sbb
popa
je
aam
adc
add
test
add
add
sti
lret
js
test
xchg
idiv
or
add
add
xchg
out
push
add
mov
aam
loop
in
rorb
add
mov
out
push
pushf
mov
xchg
enter
push
and
add
outsb
or
mov
add
add
add
test
sub
mov
lock
sbb
cmp
in
and
and
add
add
mov
add
aaa
add
add
add
shlb
adcl
pop
add
add
add
cmpsl
leave
mov
mov
test
fisttpl
or
and
decb
arpl
loopne
movsl
inc
lods
addb
std
dec
or
mov
mov
mov
inc
xor
mov
cs
stos
ljmp
int
sub
ret
pop
jo
dec
add
add
enter
add
add
loop
cmpsb
xchg
jle
jl
inc
push
cs
leave
loopne
mov
add
inc
xlat
push
or
mov
mov
mov
jb
inc
add
test
ss
imull
add
cmp
gs
add
sahf
inc
push
push
out
loop
andl
pop
or
ss
mov
push
cs
jge
add
add
lahf
jns
dec
add
add
jnp
push
push
xor
add
add
loope
lods
mov
out
fsub
flds
dec
mov
add
add
add
adc
mov
call
jl
add
add
xlat
xor
cmc
int3
bound
outsl
push
in
sbb
sbb
fildll
add
inc
addb
and
nop
pop
inc
scas
sub
mov
xchg
mov
add
push
mov
sub
sub
jg
pushf
fsubrs
add
cmpsl
jmp
add
add
xchg
jmp
add
add
loope
jl
mov
inc
mov
cltd
and
add
add
imul
jbe
dec
mov
push
xor
add
add
inc
cli
je
cmp
xchg
sub
gs
inc
adc
and
mov
mov
xorb
xor
dec
add
into
leave
subb
pop
mov
push
mov
cmp
xchg
mov
mov
pop
push
xor
dec
movsl
xchg
sub
shl
mov
mov
add
jg
stos
or
or
add
add
testl
lret
test
mov
andb
mov
add
fldl
sarb
pop
test
divb
and
cmp
loopnew
popf
pop
addr16
loopne
xor
ja
xor
rolb
jge
jle
inc
add
ja
stos
mov
in
xor
mov
out
je
add
add
bound
adc
ss
test
loopne
push
pop
subl
mov
adc
add
add
dec
sub
add
add
xchg
aaa
into
add
add
jae
pushf
adcl
add
in
adc
push
mov
mov
xor
add
add
jae
enter
xchg
mov
lahf
fwait
and
add
fmuls
mov
push
sbb
clc
sahf
mov
ret
andb
leave
stos
and
add
mov
add
cld
out
lahf
cmc
mov
jmp
lea
das
dec
lcall
xlat
pop
or
mov
mov
cltd
daa
jle
xchg
into
addr16
add
add
add
js
gs
repz
add
test
jecxz
enter
jmp
add
movsb
pop
add
mov
mov
popa
lahf
adcb
fnstenv
insb
add
add
add
add
add
cwtl
mov
xchg
mov
add
add
mov
and
add
add
push
sarb
jecxz
and
add
add
pop
mov
pop
or
lods
mov
call
data16
subl
cmp
xchg
cmp
pop
bound
lret
jae
add
add
add
jge
dec
stos
daa
rcll
ret
outsb
inc
outsb
mov
and
add
mov
add
add
mov
add
add
add
into
jmp
mov
add
add
add
add
add
lods
sub
add
add
cmp
xor
scas
fstpt
add
add
add
loopne
xor
mov
or
and
in
cmpb
pop
add
stos
pop
test
mov
fists
cmp
dec
add
add
add
jecxz
add
pop
lds
mov
loope
rcrl
rcrl
or
mov
sub
add
add
mov
es
xchg
mov
add
xor
mov
push
out
xor
stc
lock
xchg
mov
adc
fisubs
mov
adcb
mov
add
repz
add
add
xor
add
adc
dec
stc
rorl
add
add
adc
xor
orl
in
mov
ficomps
orb
out
fcoms
es
pop
je
ss
ficoms
xchg
sub
add
cltd
jns
filds
xchg
fnstcw
inc
add
add
and
mov
popa
dec
mov
add
cwtl
push
mov
push
pop
out
xor
xlat
aas
adc
jmp
jnp
mov
in
fdivrp
cmp
pushl
popa
jle
addr16
xchg
int
into
jbe
sub
data16
cltd
hlt
daa
adc
inc
inc
pushf
push
paddw
movsb
mov
mov
add
add
sahf
push
mov
test
jl
pop
mov
mov
mov
mov
add
pop
out
xchg
mov
std
mov
add
add
out
xor
push
dec
add
mov
in
addr16
movsl
arpl
add
or
add
add
fwait
sbb
sbb
nop
inc
add
xchg
add
cmp
es
add
sti
mov
lds
xchg
hlt
iretw
insl
insb
add
mov
out
cld
inc
add
add
push
inc
icebp
in
push
add
mov
add
push
arpl
mov
add
sahf
xor
clc
scas
clc
cld
lahf
xor
xchg
mov
outsl
and
bound
test
sub
pop
adc
pop
push
push
or
pop
or
mov
add
test
add
add
sub
mov
inc
or
arpl
pusha
add
shlb
mov
xchg
enter
add
cld
fisubrl
negl
and
popf
add
add
add
pop
fwait
mov
gs
in
incb
lock
popf
icebp
in
jb
sbb
cmc
push
mov
ret
jge
mov
shrb
add
push
sbb
nop
shrl
rorl
ret
cmp
mov
lcall
mov
mov
insb
add
add
les
sub
lcall
pop
or
lea
dec
inc
mov
add
add
add
adc
xor
add
add
xor
repz
adc
dec
jle
pop
xor
sub
or
ret
push
jns
out
sti
pop
arpl
push
gs
jmp
add
push
inc
push
sub
cmpsl
stos
leave
add
add
or
pop
xchg
faddp
loopne
scas
loopne
pop
mov
inc
add
add
aaa
cmp
jge
xor
cs
add
add
add
xor
push
test
aas
fwait
sub
adc
add
mov
add
add
jmp
pop
icebp
div
jecxz
mov
push
and
rolb
sbb
jl
add
add
add
adc
push
sarb
add
add
mov
sti
mov
pop
stc
out
xchg
mov
jmp
add
add
cmpsb
mov
ja
cmpsl
ficoms
gs
adcb
add
add
int3
xchg
sahf
xor
roll
add
add
jl
mov
jp
cltd
push
inc
xorl
jnp
jb
dec
adcl
mov
test
push
test
add
add
iret
mov
mov
cmc
mov
cmpb
sub
mov
cmp
ret
push
mov
add
add
out
adc
pop
ret
cmc
cltd
std
lea
add
add
stc
adc
das
mov
inc
add
sub
orl
lcall
aaa
pushf
imul
pop
sub
add
jno
mov
iret
pusha
add
add
mov
cmp
mov
adc
loopne
test
insl
xchg
es
mov
push
test
push
jp
pop
jmp
mov
jns
add
mov
filds
add
add
sub
add
add
pop
repnz
out
push
into
outsb
pop
imul
add
xor
adc
sahf
mov
enter
sub
mov
mov
xor
jecxz
jbe
jbe
negb
cmp
add
mov
and
add
add
das
faddl
lods
push
sbb
cli
mov
cmp
adc
add
add
add
sti
dec
mov
cmpsl
leave
arpl
sbb
imul
lret
jg
clc
sbb
xlat
mov
in
pop
mov
add
add
andl
add
xchg
in
sbb
and
xchg
add
mov
les
inc
dec
add
add
add
in
adc
or
mov
add
das
mov
fidivrl
cmp
test
mov
in
mov
insb
add
mov
jl
cmp
in
pop
pop
pop
popf
mov
push
shrl
fldcw
pop
mov
cltd
add
mov
dec
cmp
out
test
xchg
addr16
lock
movsb
mov
xchg
xor
cmp
dec
adcl
or
dec
add
andl
fcoms
add
scas
popa
sub
inc
add
sbb
cmp
sub
mov
push
and
mov
jae
add
mov
add
shlb
add
add
aas
pop
ret
movsl
jle
sbb
add
xor
xchg
mov
and
les
inc
pop
loop
into
inc
add
cmc
pop
ret
pop
mov
adcl
xchg
repnz
sub
add
add
xorb
xor
mov
sbb
add
add
sbb
mov
insb
add
mov
xchg
les
scas
mov
bound
or
idivl
in
popa
flds
jmp
push
insb
add
add
lds
jo
jb
mov
jns
xchg
call
or
out
outsl
cmovbe
cmp
add
shll
add
add
push
pop
rcrl
out
into
rclb
mov
jno
or
stos
push
js
push
mov
test
jl
fldl
push
add
inc
pop
add
add
add
jle
mov
add
mov
pop
sbb
or
push
popf
mov
lods
cmp
mov
jb
cmpsl
cmp
mov
cmp
loope
decb
add
add
xor
into
lods
xchg
in
lahf
sbb
push
add
xor
add
add
add
lcall
xchg
sbb
daa
loop
inc
mov
fcmovne
popf
mov
mov
xchg
xorl
sub
sbb
incl
pop
mov
gs
jge
int
add
mov
arpl
shrb
testl
adc
and
xor
out
xchg
scas
aad
mov
jbe
cmp
and
mov
pop
lret
jo
cltd
movsb
jp
or
test
sarl
daa
xor
lahf
in
jno
cmp
popa
enter
outsb
imul
add
sbbb
lock
les
lcall
mov
pushf
fdivrs
push
or
mov
bound
cmp
fnstenv
sub
mov
xchg
insb
add
add
arpl
aaa
les
add
imul
jge
add
add
add
lds
out
insl
sbb
xchg
in
and
bound
adc
add
add
add
mov
mov
fstl
imul
je
sub
add
add
mov
add
add
xchg
xchg
and
mov
inc
xor
mov
mov
cmp
add
dec
mov
ljmp
dec
push
inc
add
add
ja
or
push
stc
xor
add
add
add
add
adc
xchg
loope
mov
sub
movsl
insb
add
add
ja
pusha
add
add
cmpl
add
sub
add
adc
mov
inc
pop
mov
jns
ret
rolb
xchg
add
mov
shlb
ljmp
add
add
mov
ljmp
mov
or
jmp
frstor
add
add
push
ror
cld
and
lods
icebp
ss
dec
aas
sbb
dec
add
push
xchg
adc
push
in
push
xchg
enter
sbbb
and
add
add
dec
add
pop
in
insl
in
arpl
jno
sub
add
add
sub
add
add
shrl
adc
or
sbb
adc
pop
imul
pop
ret
and
mov
or
mov
addl
shll
fwait
popf
push
imul
pop
and
or
sbb
pop
add
cmp
xlat
or
mov
cmp
mull
pop
shlb
outsb
pop
pop
and
data16
jmp
addr16
pushf
in
int3
std
out
xchg
jp
sahf
arpl
mov
push
xorb
aam
pop
js
push
std
mov
xchg
pop
stos
cltd
outsl
push
mov
push
fwait
inc
jbe
and
add
add
adc
pop
cmp
test
add
fisubrl
add
addl
jle
add
add
push
inc
add
add
fmul
add
push
shl
xchg
out
add
add
add
aam
jns
divl
cmp
fwait
adc
out
push
mov
add
add
add
call
scas
rcrl
cltd
adc
mov
in
fcmovnb
pop
inc
mov
lods
jo
sub
mov
jge
stos
lret
mov
add
dec
das
pop
adc
adc
add
inc
loopne
xchg
mov
add
add
out
rorb
lods
test
in
inc
add
pop
pop
and
dec
sbb
or
insl
xor
fwait
push
sti
adc
add
add
iret
lds
add
mov
cmp
pop
fidivs
add
icebp
xchg
hlt
imul
insb
add
add
add
add
movsl
xor
aad
lcall
mov
cli
fidivl
hlt
aas
into
mov
loop
add
add
add
xchg
dec
nop
cli
or
in
jne
and
ret
in
iret
into
imull
pop
in
adc
mov
insl
dec
out
cld
stos
sub
ljmp
or
mov
testb
xor
xchg
jae
pop
fdivs
out
jmp
pop
sub
cltd
arpl
xchg
mov
xchg
add
add
insl
lods
shlb
xchg
aam
xchg
jbe
sbb
popa
pop
add
add
add
test
mov
sub
mov
sbb
sub
sub
cmp
mov
dec
fnsave
roll
sarl
ljmp
leave
xchg
hlt
lea
cs
jbe
inc
add
add
mov
enter
add
add
pop
pusha
add
adcb
cmpsl
adc
add
mov
add
push
repnz
dec
inc
add
or
mov
xorl
jno
jecxz
pop
out
lcall
add
dec
mov
outsl
test
cmp
test
sar
mov
sbb
add
add
push
adc
inc
add
loope
add
add
push
imul
mov
add
push
enter
loop
cmp
pop
les
popf
mov
add
nop
cs
movsb
jnp
cs
roll
dec
jle
mov
dec
mov
out
mov
test
ret
stos
lods
xchg
jb
add
add
addr16
dec
shrb
mov
pop
mov
add
add
outsb
sbb
in
or
add
add
imul
mov
or
cmc
jmp
add
repz
mov
add
add
xor
jae
add
push
mov
insl
insl
xchg
fsubrl
mov
dec
add
mov
mov
or
pop
int3
mov
test
pop
stc
jne
mov
or
sub
push
pop
jecxz
scas
jle
fdiv
push
mov
add
add
test
movl
call
push
lcall
add
popa
rolb
ljmp
jmp
add
sbb
cmpsb
pop
popa
ss
aas
push
sbb
into
jbe
daa
xchg
push
pop
rcrb
and
add
add
cmpsl
add
add
add
insb
add
add
sub
shrb
jecxz
add
jbe
int
mov
adc
push
jl
icebp
inc
add
lods
cld
mov
orb
sarl
xor
sbb
adc
push
mov
sti
pop
mov
jb
rorb
aam
mov
pop
mov
loop
jmp
push
add
add
cmp
and
arpl
test
or
rcll
cmp
sbb
xlat
das
inc
ss
ret
cmp
add
adc
cmpsb
fnsave
or
add
add
add
add
xor
imul
das
negl
push
jno
or
mov
jp
or
add
add
mov
cmp
inc
add
inc
add
out
mov
adc
cld
pop
fists
pushf
adc
xchg
cli
cmp
add
add
stos
mov
out
xor
add
mov
int
pusha
add
add
outsb
xchg
mov
add
or
mov
mov
add
fidivrl
lds
xor
xchg
insb
add
mov
les
add
add
and
mov
mov
in
pushf
adc
xchg
xchg
jecxz
jo
mov
scas
and
ja
xor
and
cmpsl
lods
cmp
jns
xchg
shll
mov
sbb
pop
jge
imul
ja
add
xchg
inc
in
int3
dec
push
in
in
lret
add
add
sahf
mov
add
add
inc
dec
lock
into
push
lods
rolb
nop
mov
jmp
mov
add
add
clc
pop
mov
adcb
add
add
sbb
lea
add
arpl
aam
xor
cmpsl
out
cmpsb
out
pop
cmpsl
and
hlt
les
mov
scas
adc
subb
jns
cld
add
add
jns
sbb
jnp
add
add
int3
or
add
add
cltd
xchg
adc
add
pop
fadd
in
out
xchg
inc
dec
adc
imul
jb
add
mov
and
gs
repz
rcrl
fwait
bound
stos
jae
clc
mov
dec
das
jne
sub
add
pushf
pop
sahf
pop
push
mov
cld
xchg
rcrb
test
pushf
or
push
xor
je
lcall
add
add
test
and
mov
aad
flds
cs
addr16
les
in
mov
add
jg
mov
int
mov
mov
sub
xchg
arpl
or
out
mov
divb
add
add
aas
movsl
ds
ret
cmp
push
mov
int
mov
xchg
fimull
xor
imul
add
add
adc
add
shlb
add
add
fnstcw
cmpb
add
add
mov
ljmp
arpl
add
add
xchg
aam
dec
repnz
aas
fisubrl
je
cmp
fistps
inc
pusha
add
add
cmp
sub
scas
mov
sub
mov
add
mov
lcall
sub
mov
rcll
mov
int3
push
out
adc
lcall
cmc
arpl
adc
out
fisttps
inc
add
mov
or
pop
dec
add
rclb
test
pop
and
mov
mov
push
lods
out
xlat
mov
add
xchg
sbb
mov
jmp
shrb
in
movsl
testl
xchg
insb
add
add
mov
mov
pop
add
mov
loope
ret
mov
push
push
pop
lods
cmpsb
cltd
mov
pushl
add
hlt
and
add
add
aaa
jbe
add
push
push
and
dec
push
out
sbb
test
add
lods
in
std
lods
ret
mov
xor
mov
sbb
push
fsubrs
mov
add
add
das
idivb
aam
or
cmp
add
outsb
cld
stos
shl
add
push
testb
pushf
pushf
cmp
in
fcomp
push
popaw
notl
sbb
out
fsubrl
add
inc
loopne
repnz
je
cmpb
adc
sti
lds
push
xorb
mov
add
add
pop
aam
addr16
out
ja
add
movsb
cltd
jmp
push
inc
into
or
aad
cmp
loopne
mov
cmpsb
js
aam
xlat
xchg
xchg
movb
test
cwtl
pop
push
push
sub
mov
dec
push
xchg
sub
lods
icebp
call
add
add
xor
xchg
and
mov
sahf
xchg
loope
ja
push
adc
add
ljmp
dec
mov
outsl
lret
jbe
or
cmp
andl
mov
fstpl
clc
mov
cmc
dec
lcall
mov
dec
out
push
popf
xor
data16
add
add
mov
and
jecxz
add
add
stos
cmpsl
lock
jmp
int
push
add
mov
inc
push
cmp
in
pop
ret
loope
faddp
push
rorb
add
add
jl
nop
sahf
xor
adc
pop
mov
dec
cs
mov
pop
int
or
mov
add
add
inc
add
add
add
push
or
add
add
ss
add
pop
and
cld
mov
jo
add
cmp
add
add
xor
test
fbstp
scas
lret
fisubrl
jnp
dec
fneni(8087
xor
jecxz
xchg
jge
data16
mov
ja
mov
ds
popf
push
js
dec
push
cmp
cs
mov
dec
mov
mulb
add
fldenv
xor
in
lahf
jmp
movsb
shll
jo
xchg
fidivrl
stos
adc
std
les
mov
lods
loopne
push
push
adc
sti
jmp
mov
es
or
add
add
mov
int3
mov
in
xchg
lea
ret
mov
cmp
test
add
add
add
jle
xchg
dec
push
mov
fadds
mov
aam
dec
add
add
sub
mov
jno
fldt
add
shr
pop
loopne
adc
add
add
xor
dec
add
add
popl
rorl
mov
xchg
cwtl
xchg
mov
push
sbb
je
stc
repz
jne
in
xchg
out
pop
loop
add
add
icebp
pop
imul
or
add
add
gs
movsb
insl
xor
push
call
dec
jmp
scas
bound
add
shll
or
mov
pusha
add
add
ret
add
add
sub
add
add
leave
jbe
insl
ds
icebp
pop
fisttps
push
sub
mov
add
int
stos
stos
and
add
add
xor
add
push
jle
inc
add
xchg
mov
imul
je
dec
enter
bound
and
add
add
int
xchg
cmp
add
lock
sub
mov
mov
mov
inc
mov
inc
jns
shrb
in
movsl
jno
jecxz
arpl
cmp
add
sahf
jp
test
mov
mov
add
add
cmp
das
sub
mov
outsl
iret
out
cmp
pop
loope
jo
sub
imul
mov
adc
daa
push
dec
inc
lcall
out
cmpl
pop
xchg
cmp
pop
adc
jno
add
add
jnp
ss
push
std
ljmp
mov
jnp
mov
scas
popa
inc
gs
add
add
jl
or
lds
pop
sbb
jne
imul
add
add
xchg
inc
iret
loop
add
add
scas
inc
add
add
jae
jmp
add
loope
gs
int3
push
call
add
rclb
fnstcw
adc
inc
insl
push
cmp
add
int3
adc
pause
pushf
js
sub
rclb
jns
mov
loope
sbb
adc
or
mov
jb
mov
and
cli
fistl
add
ss
mov
add
mov
and
add
inc
aad
dec
add
add
dec
add
pop
mov
out
push
add
pushf
imul
addr16
xchg
ret
add
add
shl
fbld
add
add
jns
jns
xor
test
add
and
add
sbb
mov
xorl
inc
lods
repnz
cltd
add
sub
add
add
test
add
add
sbb
dec
add
lock
add
mov
mov
clc
in
dec
add
add
or
mov
cs
add
rorb
shrl
add
add
mov
adc
jl
cwtl
push
cmp
fimull
je
xchg
cmp
jb
mov
add
fwait
stc
in
add
cwtl
add
xor
add
add
aas
in
jge
mov
paddsb
add
add
in
xchg
add
jg,pn
mov
add
stos
iret
mov
fmuls
xchg
cmc
enter
push
mov
out
iret
mov
adcl
sbb
jge
sbb
add
add
jbe
mov
sbb
pop
push
ret
mov
test
sub
add
add
xchg
iret
jl
mov
pop
sub
lods
into
mov
pop
mov
jae
call
inc
pop
sbb
int3
hlt
movsb
in
mov
addr16
add
leave
shufps
arpl
cmp
add
mov
loope
imul
lahf
addr16
add
ja
inc
rol
push
nop
adc
fisttpl
inc
sahf
inc
push
sbbl
in
ljmp
fwait
aam
inc
add
add
fadd
mov
ss
dec
ret
jle
dec
add
add
int3
in
add
push
inc
mov
shrd
orl
or
fcmovbe
pop
cmpsb
call
add
shll
add
mov
std
pop
dec
ss
cmp
js
or
add
test
aad
stc
lret
lcall
xor
mov
add
add
addr16
mov
jge
iret
ljmp
add
and
add
add
mov
mov
pop
jp
or
add
add
add
je
sbb
mov
push
aam
cmpsb
push
add
add
add
xchg
or
mov
and
into
push
add
in
ljmp
mov
ret
fwait
and
add
xor
rcl
popf
or
add
add
ret
and
add
pusha
add
mov
int
inc
icebp
push
inc
fwait
add
insl
ja
push
je
push
into
fsubr
int3
sub
mov
add
add
add
sbb
add
add
add
sbb
add
test
lcall
jmp
push
test
jns
add
add
mov
add
fnstenv
call
nop
aad
out
addr16
or
jl
push
sub
mov
sbb
cmp
jp
xchg
fistl
push
inc
add
sti
addr16
pop
or
mov
sub
add
add
xlat
sbb
add
sbb
mov
lret
leave
jmp
add
scas
ret
cltd
sbb
mov
nop
nop
xor
adc
fstps
lds
out
pop
pop
int3
pusha
add
out
ret
pop
mov
add
mov
scas
xchg
daa
ret
inc
push
stc
lret
xor
add
add
fisttps
filds
add
sub
cmp
or
adc
add
mov
fdiv
lret
add
ja
push
adc
push
jmp
add
add
adc
add
hlt
lret
mov
jbe
pop
sub
mov
cli
shll
mov
add
add
jae
aad
jl
and
cli
hlt
cmp
mov
sbb
sub
and
add
add
add
add
fcoml
cld
add
add
add
add
add
add
inc
arpl
add
xchg
jg
mov
xchg
sbb
add
add
add
lods
xchg
fildll
imul
dec
adc
mov
clc
jo
std
cld
jns
cld
inc
adc
push
cltd
inc
mov
and
test
add
add
add
add
or
jmp
jae
add
flds
jne
push
pop
push
push
push
push
push
mov
loopne
add
add
adc
movsb
movsl
pop
roll
or
add
add
int
hlt
int
test
adc
add
cld
xchg
mov
stos
jecxz
jmp
sti
adc
pop
bound
add
add
add
js
lods
dec
jb
add
inc
ret
addl
sbbb
lret
lock
add
add
xor
sub
sub
jp
xor
sub
add
add
ljmp
sar
pop
cmpsl
shll
add
inc
or
add
add
mov
pushf
or
add
cmp
ret
adc
or
dec
add
add
jno
imul
cmp
cmp
ds
pop
rorl
mov
xchg
jnp
add
add
add
mov
out
rorb
add
je
cmp
add
mov
std
fsubrp
fildl
cmp
xchg
stos
push
inc
add
add
pop
stos
push
ret
decb
add
add
push
sbb
xchg
xor
les
sub
pop
mov
add
adcb
mov
sub
sahf
insl
mov
add
pop
mov
add
js
fmuls
mov
add
sti
adc
dec
jbe
adc
add
add
add
mov
add
jnp
stos
xor
push
xchg
daa
ret
repnz
jecxz
add
add
xchg
jns
inc
mov
shll
sub
and
mov
enter
push
pop
push
xchg
imul
add
add
dec
lea
push
hlt
repz
or
inc
in
mov
fnsave
cmp
adc
xchg
cmp
daa
pop
lods
pop
jns
movsl
adc
sub
push
test
fwait
sarl
sub
add
add
sbb
mov
sbb
iret
jg
adc
sub
add
ljmp
stos
and
xchg
sbb
add
add
movsl
inc
orl
into
adc
mov
or
mov
je
jmp
out
pop
dec
add
add
test
les
lret
gs
jecxz
inc
inc
mov
popa
adcb
fisttpll
fdivl
add
jns
xor
test
std
insl
xor
jg
sub
mov
lahf
add
add
add
dec
inc
add
sbb
add
inc
dec
es
mov
lods
or
add
add
cmp
test
aad
stos
jmp
pop
pop
sarl
inc
sbb
bnd
movsb
mov
js
les
add
dec
cmp
add
inc
fidivs
adc
add
add
push
cmp
jo
mov
leave
adc
sub
jg
js
pop
insb
add
add
mov
addr16
adc
sbb
adc
ret
lahf
dec
add
fsubrs
and
add
add
stos
inc
push
mov
cmp
and
mov
lea
sub
add
icebp
loopne
add
add
inc
into
lock
sbbb
mov
aam
mov
pop
cwtl
adc
and
add
and
fadds
pextrw
lods
push
mov
aaa
mov
add
jbe
mov
add
add
add
xor
push
jb
cwtl
jb
xchg
sbb
add
add
pushf
and
cwtl
or
add
add
fmul
xchg
mov
outsb
loop
inc
pop
jl
or
mov
pop
decb
add
jmp
mov
dec
cmp
push
orl
add
push
jp
stc
xchg
pop
add
add
out
inc
dec
add
out
pop
lcall
add
outsb
xor
add
lret
lock
lods
adc
loope
pop
imul
mov
stc
mov
mov
mov
xchg
adc
add
add
add
fcmovbe
mov
add
mov
add
mov
enter
add
dec
add
add
jmp
call
xor
push
inc
add
pop
rorb
pop
stc
add
add
add
imul
xor
inc
sbb
inc
rolb
add
mov
mov
in
xchg
daa
adc
jno
cmp
and
mov
andl
in
push
data16
jbe
cmp
pop
inc
testl
pop
subb
mov
and
mov
jle
add
mov
fsubrl
mov
test
add
bound
sbb
mov
stos
push
shll
mov
ljmp
dec
xor
push
xor
mov
add
xor
ret
or
inc
aam
add
dec
out
roll
add
int3
frstor
out
shl
test
sbb
mov
add
add
popf
jbe
arpl
cmp
fadd
clc
scas
xchg
icebp
add
mov
cmp
fisubs
cli
cltd
cmp
inc
adc
and
mov
adc
add
inc
hlt
out
lahf
fwait
push
leave
loopne
add
dec
add
add
add
dec
mov
add
lret
cwtl
lea
jp
dec
add
data16
mov
add
sbb
add
add
add
lds
pushf
lahf
in
xor
lods
lret
adc
jne
notb
arpl
jne
ret
adc
xchg
and
or
add
xchg
mov
xchg
mov
rorb
add
add
int3
nop
pop
xchg
and
or
cmpsl
test
dec
add
outsb
lds
xor
aad
sti
push
add
lds
xchg
add
in
sbb
add
add
add
dec
xchg
add
sbb
or
mov
add
add
jno
adc
mov
add
addb
or
mov
add
add
inc
add
add
fcompl
inc
or
out
lods
fstpt
mov
cmp
jecxz
cld
sub
into
push
int3
xchg
fisttps
push
sub
add
add
sahf
add
es
outsb
pop
cld
mov
add
add
cwtl
outsl
or
hlt
popf
int3
push
repz
or
adcb
nop
fdivs
mov
cmp
ret
cltd
cmpsb
repz
add
jae
and
add
pop
negb
daa
jg
add
dec
mov
sbb
sub
add
add
add
add
dec
dec
pop
dec
pop
lea
jno
or
insl
mov
movsl
enter
add
daa
mov
mov
stos
jb
incb
adc
xchg
out
cmp
push
mov
push
pop
pop
jae
add
add
mov
pop
imul
imull
call
pop
pushf
inc
cwtl
in
aas
aam
or
pop
ds
pop
and
daa
rolb
and
mov
dec
fsubrs
je
out
int3
pop
ret
loope
jg
mov
jmp
outsb
loope
rorb
add
pop
add
cmp
inc
add
add
add
add
imul
in
push
insl
aas
notb
aam
js
mov
add
add
sbb
push
dec
xchg
add
add
add
add
ret
adc
xchg
push
inc
std
pop
clc
sarl
mov
or
mov
imul
sub
movsl
movsl
or
add
ret
mov
shr
fsubl
add
add
add
and
add
add
clc
add
or
aad
sahf
fsubrl
pushf
mov
mov
add
add
mov
add
xor
mov
xchg
stc
aaa
je
notb
mov
stos
inc
inc
inc
and
data16
mov
add
add
add
jb
outsb
push
mov
je
fwait
mov
add
imul
add
mov
ret
pushf
mov
sub
add
mov
mov
add
add
mov
xor
jp
jne
sub
jmp
add
push
fxtract
dec
inc
and
enter
jl
test
add
add
adc
fcmovne
pusha
add
into
pop
insl
xchg
dec
add
cmp
aas
pop
sub
xor
cli
xchg
popa
mov
and
pop
jp
orb
cmp
icebp
repz
or
dec
pop
jmp
jg
dec
push
cs
aas
pop
mov
add
xor
and
mov
push
dec
leave
sbb
xor
add
leave
cltd
out
pop
aam
add
in
mov
add
and
add
push
dec
add
hlt
xchg
mov
add
and
enter
ds
shll
add
add
pushf
es
xchg
push
sub
add
add
mov
add
add
loopne
mov
cmp
add
xchg
and
insl
pop
ja
add
das
scas
lahf
dec
add
add
cwtl
es
lock
xchg
es
insl
lahf
repnz
mov
or
cltd
xlat
dec
add
outsl
pop
sub
jg
sbb
add
mov
mov
mov
xchg
mov
inc
movsb
and
cltd
jle
out
xor
fbstp
mov
movsl
or
dec
add
mov
add
push
mov
stos
xor
in
ret
and
xchg
sub
add
rcrl
mov
push
xor
int3
icebp
into
dec
movsb
jmp
or
insb
add
add
ss
lds
sar
out
add
add
pop
fistpl
push
mov
int3
xchg
lret
pusha
add
add
into
loope
add
loop
xchg
insb
add
add
fisubl
mov
mov
out
mov
add
add
and
mov
mov
in
or
fisubl
sub
add
leave
inc
repnz
ds
int3
ja
and
add
add
lret
push
xor
mov
xor
xor
and
mov
sub
add
jl
mov
and
mov
sbb
add
add
insl
sbb
inc
inc
add
push
ret
mov
lcall
dec
das
cmp
mov
add
push
stc
sub
sub
add
add
out
aad
xor
add
fidivrl
sub
add
add
pop
adc
leave
out
adc
cmp
js
sbb
ret
ss
and
xchg
andb
enter
lea
add
xchg
daa
test
and
gs
inc
and
cmp
and
add
add
mov
lea
cmp
jmp
add
add
test
lods
jg
aaa
push
imul
adc
sbbb
inc
filds
mov
sbbb
sti
lea
push
mov
xchg
call
stos
mov
std
sbbb
mov
fistl
xchg
push
out
adc
dec
add
add
nop
mov
stc
cmc
cld
je
mov
lock
xchg
sub
mov
sti
arpl
dec
add
add
test
pop
aam
out
call
dec
or
push
pop
pop
pop
sbb
add
add
add
pop
jecxz
jmp
add
add
push
das
mov
aad
int3
sub
jmp
add
gs
cmpsl
sub
add
add
jecxz
repnz
add
add
aad
mov
add
add
aad
cmp
cmp
shll
sbb
mov
jecxz
sbb
xor
aaa
adcl
lea
xchg
mov
xor
sbb
add
dec
push
cmp
sahf
mov
in
div
cli
loope
cmc
dec
push
into
gs
mov
or
add
add
imull
add
cmpsl
sarl
in
push
repnz
sbb
mov
inc
call
icebp
decl
or
mov
xchg
or
add
inc
add
mov
add
rorl
nop
rorl
mov
pop
pop
popa
test
bound
jge
jp
mov
popa
jmp
int3
and
or
mov
sub
mov
sbb
cwtl
lret
int
stos
arpl
out
and
mov
push
ljmp
mov
add
add
aam
movsb
cltd
jmp
inc
pop
sub
cmpsl
mov
xchg
add
das
negb
add
add
xor
mov
fwait
mov
add
fisubl
cltd
insl
sbb
push
xor
add
add
jmp
add
add
and
fidivrs
iret
and
add
add
hlt
jle
sub
add
add
shll
sbb
les
lahf
and
mov
lods
jno
mov
enter
insb
add
add
stos
ffreep
js
nop
push
sbb
add
sti
cmp
out
add
jmp
ljmp
add
add
cld
data16
xor
jl
add
add
mov
pop
clc
add
add
add
mov
cwtl
scas
mov
add
enter
jbe
out
sbb
pusha
add
add
xchg
jecxz
mov
and
or
add
add
add
stos
fistl
in
sub
push
xlat
jmp
sahf
je
call
arpl
sub
add
fisubrl
fstps
js
stos
push
outsb
mov
add
add
gs
fistpl
sbb
into
mov
mov
add
lods
rorb
ds
test
mov
hlt
sbb
lret
jle
lcall
cmp
add
out
add
add
add
out
xor
lret
add
add
xor
add
add
add
add
add
xchg
sbb
pusha
add
add
pop
xchg
pop
push
mov
cmp
mov
roll
scas
jae
dec
aaa
fsubl
mov
add
clc
insl
sub
addr16
xchg
and
mov
mov
or
sub
cwtl
stc
lea
push
lods
roll
mov
add
dec
cmp
ja
adcl
pusha
add
loop
fwait
adc
inc
add
pop
xor
and
add
add
inc
push
mov
in
xchg
inc
push
mov
or
and
aas
bound
sub
mov
out
pushf
sahf
mov
sbb
inc
aas
push
xor
fcoms
pop
out
sub
cmp
ja
popa
out
cmp
jl
pop
cmc
test
testl
push
or
jp
add
add
repnz
test
and
mov
pop
push
push
je
sub
add
add
push
adc
and
add
add
lahf
jb
push
outsb
std
sub
add
add
add
mov
in
scas
js
pop
out
jp
bnd
movsl
scas
sar
add
mov
cwtl
xchg
insb
add
fnstcw
mov
insb
add
add
inc
shr
rcl
ljmp
add
imul
divl
hlt
push
inc
mov
test
add
enter
mov
fldenv
xchg
fcmove
fdivl
cmp
adc
sti
dec
mov
sbb
or
popa
into
jg
add
add
es
and
mov
pop
push
cs
and
fistps
sub
push
push
add
mov
cld
test
push
xchg
add
add
xchg
test
cmp
lret
cmp
add
mov
xchg
jno
addr16
sub
jmp
xchg
xchg
movl
fsts
mov
add
cmp
mov
jo
lock
pop
test
cmc
inc
cli
cmc
out
insl
dec
movsl
aam
nop
arpl
cmpsl
mov
add
add
pushf
loopne
jl
or
imul
add
add
jmp
add
sti
sti
popf
sub
mov
scas
mov
push
iret
cmp
push
add
mov
ja
jge
and
mov
jo,pn
aad
std
rcl
inc
add
add
or
mov
jbe
xor
mov
addb
inc
repz
jne
insl
cmp
inc
mov
rcll
add
add
xchg
pop
mov
leave
lcall
inc
imul
shrl
adc
add
fldcw
les
repz
add
subb
xchg
int3
inc
stos
sbb
mov
aad
add
add
adc
nop
sbb
jo
stc
adc
mov
mov
lock
ja
ja
jbe
jp
mov
push
cmpsl
gs
add
add
sbb
ljmp
pop
dec
add
add
out
mov
mov
lret
jns
push
movsl
add
inc
add
inc
add
add
pop
bound
mov
aas
loopne
enter
xchg
inc
lret
xchg
cmp
in
sbb
xor
fiadds
lea
and
pop
or
xchg
fwait
daa
ja
add
test
into
cmp
icebp
xor
add
mov
or
add
add
sub
mov
sti
sti
mov
add
fcoms
xchg
ja
mov
jb
test
je
arpl
dec
add
scas
ja
lods
inc
andb
add
sub
xor
dec
add
add
stos
push
dec
add
add
push
hlt
mov
ret
ja
lahf
nop
mov
mov
into
or
mov
shrb
mov
add
mov
ljmp
std
mov
xor
shr
mov
sub
mov
pop
adc
cli
dec
add
add
mov
jbe
int3
xchg
push
sbb
inc
add
mov
dec
add
sbb
mov
mov
popa
mov
add
add
pop
adcl
add
aam
sbb
cmpsl
push
adc
das
lret
test
mov
pushf
cmpsb
scas
jb
add
add
add
add
jg
inc
mov
sbb
ud0
mov
add
stos
out
out
xchg
cmp
jge
inc
push
ficoml
rclb
jecxz
repz
ss
mov
add
shll
jae
jns
xchg
das
insl
js
mov
inc
add
add
out
or
add
add
shll
iret
jecxz
iret
mov
aam
jo
incb
add
add
cmp
pop
loopne
lods
add
in
cli
pop
pop
inc
hlt
push
rorb
cmp
dec
negb
add
xchg
cs
jle
lahf
idivb
add
push
sahf
or
add
add
ljmp
add
mov
and
lods
jecxz
xchg
inc
add
add
add
out
ficompl
jp
jl
inc
fmul
or
mov
in
int
dec
shl
cs
scas
adc
fsub
fnstenv
insb
add
cmpsb
ret
ja
push
xor
jb
pop
adc
xchg
add
lods
xor
jo
jmp
ja
jne
cwtl
cmp
mull
inc
mov
je
icebp
icebp
int
mov
dec
add
add
or
lret
fisttpl
sbb
enter
mov
push
xchg
dec
adc
cmpsl
mov
loope
pop
mulb
inc
add
add
adc
aaa
setb
add
add
out
sbb
das
mul
cmpsb
stc
pop
cmpsb
inc
add
inc
add
add
out
xchg
fdiv
push
or
mov
sbb
adc
add
jecxz
outsl
in
loope
add
mov
add
add
push
pop
jg
test
cli
dec
add
push
mov
cmp
fidivrl
jo
mov
cmc
sbb
sbb
out
pop
cld
es
push
mov
mov
and
cli
adcl
sbb
jmp
add
int
push
outsb
sub
xor
add
add
add
add
add
pop
movsl
jns
roll
add
fldenv
add
das
push
adc
loope
mov
add
push
mov
sbb
out
xchg
int
inc
into
push
cmp
xchg
add
icebp
fcmovne
sub
xor
ljmpw
fistps
add
test
or
pusha
add
sub
mov
add
add
cltd
mov
insl
cmpsl
push
and
dec
pop
push
stos
xor
adc
add
add
movsb
or
das
mov
push
test
push
add
add
xor
and
add
add
push
addl
imul
inc
mov
mov
cmpsl
add
notl
add
or
outsl
and
jnp
ljmp
add
add
mov
add
add
add
mov
insb
add
pop
sub
fsubl
out
add
mov
pop
or
into
sub
add
add
sbb
ja
mov
lds
mov
test
jno
mov
inc
jns
and
xor
sahf
repz
pushf
mov
fidivrs
mov
sarb
jg
pop
daa
in
fcmovb
pop
sarl
int
add
add
jg
test
fadds
ja
lret
xchg
int3
pop
add
add
xchg
jecxz
ljmp
jmp
xchg
lods
cmp
pop
sub
add
add
sbb
mov
test
xchg
add
mov
add
push
imul
push
sub
arpl
lahf
movsl
das
test
aas
add
mov
and
dec
adc
leave
push
out
lret
xchg
cmp
mov
jmp
add
add
dec
out
and
mov
cwtl
outsb
sar
jge
cmp
cmp
add
add
inc
add
add
dec
int3
cmp
mov
mov
xor
add
mov
shlb
sbb
je
sbb
loopne
mov
or
add
add
push
xchg
fwait
dec
cvtpi2ps
mov
