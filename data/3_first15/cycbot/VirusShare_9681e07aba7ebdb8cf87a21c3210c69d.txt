cvtps2pi
dec
iret
test
sbb
mov
cmp
out
lods
dec
fldenv
sub
cmc
push
fidivrs
cmp
add
lods
popa
cmp
add
mov
xchg
sbb
js
push
add
sub
add
cmpsb
iret
mov
add
jp
add
and
ss
xchg
pop
cmpsl
push
add
cmp
mov
cs
inc
add
xor
addb
idivb
mov
cmp
push
add
pusha
add
add
loope
or
fldenv
add
xchg
cwtl
pop
mov
or
mov
orl
cmpsb
fisubl
out
leave
mov
add
add
ffree
in
sbb
aas
arpl
mov
push
add
outsb
mov
sbb
push
dec
int
ljmp
mov
mov
cmp
pop
push
popf
addr16
inc
add
movsl
mov
add
mov
push
add
pop
arpl
mov
add
mov
loop
mov
mov
out
inc
add
mov
sbb
adc
xchg
jnp
fs
fimuls
xchg
dec
loope
jnp
push
mov
mov
add
mov
add
xor
repnz
add
sbb
and
dec
data16
jno
sbb
add
mov
mov
cmp
push
add
add
jg
xchg
xor
xchg
inc
mov
popa
aaa
aas
outsb
add
shll
stos
test
btsl
jnp
movsb
ret
int3
mov
pop
mov
js
data16
mov
pop
inc
add
push
add
pop
clc
push
inc
cmp
xor
jo
mov
add
jns
int
add
outsb
std
dec
mov
testl
out
xchg
jmp
and
test
mov
push
mov
aam
mov
mov
jmp
mov
dec
jno
add
sub
push
mov
or
cmp
mov
mov
aad
dec
imul
jmp
push
xchg
xor
loopne
mov
rolb
mov
test
mov
or
add
xchg
clc
jbe
bound
mov
add
dec
mov
add
xor
add
add
and
das
fldcw
fistl
jecxz
add
ja
add
sub
out
mov
rol
ja
mov
mov
mov
dec
and
aas
fsubrs
mov
mov
add
xlat
inc
xchg
add
fidivl
mov
les
loop,pn
mov
std
add
mov
add
or
and
sub
rolb
mov
fwait
dec
mov
mov
add
jbe
aad
rolb
nop
add
mov
mov
add
adc
loope
je
add
popf
dec
stos
nop
add
cltd
mov
add
in
jmp
xchg
adc
add
out
aad
pop
push
lahf
or
or
cmc
rorl
ss
xchg
add
std
test
das
xor
add
rolb
mov
sbb
fwait
bound
mov
add
adc
jp
pop
mov
add
dec
inc
mov
call
sub
mov
aam
add
add
dec
mov
mov
mov
add
pop
ja
and
lahf
sub
rolb
mov
iret
inc
das
and
sbb
push
add
sbb
inc
adc
add
test
sub
add
push
pop
rcl
inc
push
fs
inc
loop
mov
add
out
cmpsb
lret
pop
lahf
xchg
add
jae
add
dec
js
repz
insb
inc
add
mov
add
addb
iret
sub
test
into
test
add
mov
sti
call
add
sbb
add
adc
push
mov
mov
pop
in
sbb
int
xor
mov
cmpsb
in
in
or
add
inc
fcoml
fildll
jp
in
addb
ret
icebp
mov
hlt
fdivrl
movsl
sub
es
or
add
stc
pushf
push
ret
mov
adc
inc
add
movsb
outsl
cmp
sbb
or
and
rolb
enter
sub
aas
adc
mov
xchg
outsb
lods
ret
adc
jle
pusha
add
mov
mov
lea
fldcw
arpl
add
mov
add
movb
bound
mov
cmp
jb
mov
fadds
push
insb
pop
xchg
add
cltd
mov
add
push
sbb
add
xor
mov
aaa
and
inc
inc
push
pmovmskb
bound
mov
add
mov
adcl
xchg
sub
out
or
testl
mov
and
pusha
add
lods
jecxz
pushf
lds
xchg
jle
leave
dec
jo
mov
pushf
sub
add
sar
rolb
mov
dec
ljmp
popf
std
cmp
mov
xchg
lds
sbb
mov
mov
rolb
outsl
das
cmp
jge
mov
andl
mov
dec
adc
pop
add
mov
lcall
sub
aad
add
mov
sbb
lcall
push
add
mov
and
dec
dec
shll
xchg
mov
sahf
loopne
mov
ja
and
mov
int3
sub
out
sub
pop
stc
imul
lods
call
outsb
enter
in
insl
inc
add
pusha
add
ljmp
cmpsb
int3
cld
inc
add
inc
cmp
add
pop
jp
add
mov
int3
sub
sub
scas
sub
add
mov
cwtl
mov
mov
add
sti
pusha
add
add
jl
xchg
loop
mov
mov
pushw
xchg
cmpsl
pushf
add
inc
dec
add
mov
les
cmpsl
sbb
out
add
mov
push
das
inc
in
add
into
jbe
fnstsw
add
mov
add
mov
imul
jbe
xor
mov
sub
or
push
loopne,pn
mov
add
add
add
pop
lahf
push
pop
add
mov
pop
add
aam
repz
pusha
add
xlat
repnz
or
pop
aam
aaa
push
inc
fwait
pop
cmp
pop
cmp
cmpsl
rolb
adc
add
adc
mov
mov
loop
mov
dec
stos
out
das
popf
and
in
sub
sub
mov
int
int3
cmp
xchg
xor
mov
pop
jge
pusha
add
add
ret
jl
mov
ss
mov
add
addb
insb
into
pop
mov
dec
sbb
push
mov
mov
add
popf
fsubs
add
mov
inc
loope
xchg
and
mov
xor
mov
add
hlt
addb
lock
cmp
xchg
push
xlat
faddl
add
mov
mov
mov
jl
aaa
fildll
dec
sbb
das
mov
pop
pop
xor
xor
fnstenv
or
outsb
add
sbb
mov
cmp
loope
int3
arpl
aaa
jg
fdivl
add
adc
mov
sub
mov
pop
insl
lret
mov
mov
das
in
testl
insl
xchg
add
pop
jb
mov
rolb
add
mov
movsb
es
fucom
or
pusha
add
add
out
hlt
int3
clc
sarl
jp
in
add
cld
fsubr
jnp
add
add
repnz
adc
pop
pop
das
mov
jmp
add
add
xchg
pop
and
mov
inc
out
add
push
cmp
fmull
add
std
mov
rolb
mov
or
fcoml
mov
xchg
stc
aas
sahf
scas
jge
xor
lock
je
mov
add
mov
fsubp
inc
mov
mov
adcl
mov
in
inc
movsb
push
les
pop
mov
mov
add
mov
mov
pop
sar
xchg
push
ja
and
add
pop
aam
into
ljmp
std
les
push
cmpsl
jo
mov
jo
mov
aam
mov
pop
xchg
imul
movsb
push
sbb
in
mov
mov
add
add
and
xor
push
add
add
fcoms
xor
pop
ss
test
aaa
pushf
xchg
movsl
loop
mov
cmp
pop
dec
mov
add
add
add
add
mov
mov
loope,pt
add
lret
add
mov
mov
add
cmp
and
cmpsl
test
add
add
rolb
movsb
notb
or
ror
add
adc
mov
add
pop
adc
cmc
xchg
ss
fsubp
and
add
addb
adc
gs
xchg
add
lret
lcall
xor
ja
mov
add
mov
push
cmp
add
in
fs
ss
xchg
add
in
xchg
add
add
lret
inc
aad
mov
mov
out
out
pop
mov
sbb
add
push
lds
stos
pushf
rcrl
lea
add
or
outsb
fs
push
addb
ds
fmul
cld
mov
sbb
or
add
xchg
add
out
popf
fmuls
es
jmp
das
or
testb
mov
sbb
sub
insb
sarl
insb
push
or
sub
dec
enter
mov
mov
fsubl
mov
mov
dec
push
icebp
inc
xchg
add
mov
fdivrl
mov
into
repz
push
in
popf
ret
sahf
mov
pop
les
add
pushf
into
mov
mov
jo
mov
mov
bound
mov
inc
ljmp
jb
mov
movsb
dec
fistpl
je
add
xlat
mov
jbe
aam
sub
lret
push
fbld
repz
cmp
xor
inc
cmp
dec
es
rorl
stos
insl
pop
lret
lret
push
das
ss
pop
and
mov
insl
out
pop
fsts
fs
mov
lahf
fistps
sbb
push
dec
cmpsb
fdivl
scas
test
hlt
dec
dec
mov
push
pop
scas
je
enter
add
mov
mov
dec
pop
std
pop
xchg
add
mov
mov
test
sbb
mov
in
push
mov
mov
add
dec
aaa
mov
aaa
ficompl
cmp
add
mov
inc
add
add
add
add
lret
jno
pop
jl
les
sbb
testb
mov
sub
add
mov
mov
mov
mov
subl
or
add
sbb
jb
mov
add
mov
xchg
bound
mov
adc
sub
push
push
push
cld
call
sub
mov
push
imul
pop
movzbl
cmp
ss
push
push
call
cmp
je
es
lea
cs
sub
mov
es
call
test
jne
jmp
leave
push
lret
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
lea
lea
sub
add
mov
sub
sub
push
pop
push
je
jmp
add
add
pop
add
mov
divl
cmp
fistpll
inc
pop
jae
cltd
inc
shl
mov
jnp
movsl
loop
mov
add
mov
fadds
push
jp
add
cmp
aad
add
mov
cwtl
fwait
xchg
aad
inc
adc
mov
or
add
push
dec
sub
xchg
mov
and
pop
test
add
jmp
push
pop
mov
dec
test
dec
out
push
jno
xor
aad
add
dec
repz
loop
mov
js
popa
pop
xor
sub
mov
adc
cmp
xor
mov
add
mov
lahf
in
add
cmp
movsb
iret
fldl
mov
add
cmpsl
stos
scas
sahf
adc
jbe
aam
cltd
imul
cmpsl
or
loope
cmp
sbb
imul
sbb
mov
aad
add
mov
add
mov
lock
add
arpl
xchg
addb
cmp
loopne
mov
ret
into
shll
push
in
and
movsl
jns
sub
decb
adc
mov
push
imulb
imul
add
jnp
push
xchg
mov
cs
dec
ljmp
rolb
mov
mov
mov
into
pop
cmp
enter
jmp
pop
lds
test
addb
jl
pop
loope
jnp
push
in
cmp
add
xchg
xchg
add
enter
in
lea
sub
jecxz
add
cld
mov
push
repz
adc
mov
xor
adc
cmp
jno
test
out
sahf
outsl
pop
adc
mov
fidivrl
mov
repnz
xrelease
incl
push
dec
xlat
jbe
lea
add
int3
add
lret
xor
add
push
and
jno
jbe
mov
in
add
mov
bound
mov
add
add
mov
add
mov
inc
nop
add
test
sbb
mov
jecxz
das
out
lret
mov
pop
jecxz
and
mov
mov
push
jnp
test
addb
outsl
cmpsb
repz
iret
mov
xor
mov
fldl
test
bound
mov
inc
mov
add
mov
mov
imul
lahf
mov
in
jae,pt
mov
add
add
icebp
imul
mov
mov
js
dec
imul
add
and
add
mov
stos
adc
mov
int
inc
add
jns
inc
dec
pop
inc
add
ret
jbe
adc
mov
sti
lock
mov
lea
mov
pop
cmpsb
mov
sub
lea
add
ja
mov
test
add
ret
or
or
mov
je
repnz
lea
add
push
or
imul
cld
push
pop
dec
mov
cltd
add
cmpsb
xor
icebp
push
mov
add
pop
int3
and
mov
sbbl
mov
sbb
add
flds
push
add
mov
pop
andl
das
pusha
add
sbb
push
cmp
into
add
mov
packssdw
jne
cwtl
mov
in
das
out
pop
lods
loopne
mov
mov
dec
sti
mov
fbstp
sbb
add
add
sar
and
jae
cmpsb
jno
movsl
jo
mov
add
dec
gs
mov
loop
mov
add
or
cmpsb
push
add
add
cmp
mov
addb
test
std
adc
mov
ja
or
add
sahf
or
or
fwait
push
pop
pop
mov
dec
jmp
mov
rcrl
cmp
frstor
push
out
cmpsb
fwait
or
cmp
bound
mov
jmp
add
inc
add
mov
add
repz
lods
add
add
int
add
out
or
jbe
cmp
ret
mov
mov
pop
and
int
jne
enter
cmc
insb
inc
fsub
add
jmp
aas
bound
mov
or
or
pop
std
mov
add
lods
lods
xor
inc
add
insb
pop
inc
pop
out
jae
mul
or
add
mov
lods
push
adc
lea
lret
dec
mov
pextrw
mov
scas
iret
dec
and
sub
das
xchg
add
jns
xor
add
jne
add
imul
mov
test
mov
mov
pop
lock
ret
xlat
add
and
mov
jmp
add
add
mov
mov
add
jo
mov
add
stc
cli
cmp
imul
sub
out
sbb
push
sbb
imul
lea
orl
add
sub
add
mov
add
sub
inc
aaa
outsl
add
sbb
mov
insb
adc
mov
mov
shr
mov
mov
add
aas
ds
jge
mov
ret
test
stos
and
mov
add
add
or
cmpsl
mov
cld
and
mov
or
mov
mov
rolb
mov
filds
xor
hlt
mov
add
imul
push
add
outsb
into
jne
outsl
xor
mov
ficompl
mov
and
data16
add
push
add
xchg
push
add
adc
add
xchg
test
ljmp
pushf
std
cli
and
in
out
and
mov
rol
addl
jmp
mov
push
xchg
mov
lock
cld
sub
add
mov
lret
cmp
fsubl
sbb
or
mov
inc
mov
add
add
loop
mov
mov
pop
in
add
mov
add
mov
xor
int3
shll
jmp
popa
add
leave
stos
cmp
add
adc
adc
add
cmp
lret
add
adc
mov
ret
mov
mov
mov
mov
out
xchg
jmp
sub
sub
out
cltd
popf
test
push
xor
dec
add
add
mov
ret
cld
rolb
mov
mov
mov
je
dec
sbb
rolb
mov
ret
mov
addb
dec
ss
aam
fstpt
icebp
movsb
jl
add
sub
loop
mov
cmp
gs
rolb
pop
and
addb
dec
sbb
mov
ret
or
sub
fnstsw
adc
mov
add
add
loopne
mov
sub
enter
loopne
mov
mov
add
dec
pop
fmuls
loope
add
push
in
movsl
push
add
mov
xchg
adc
mov
gs
mov
mov
rcll
mov
mov
add
xor
jns
add
xchg
daa
sub
int
int3
xor
jbe
out
push
add
rolb
cld
sarl
rorl
shll
popf
imul
add
pop
js
inc
add
imul
and
lods
popa
repz
addr16
add
fs
add
jns
pusha
add
jecxz
or
test
stc
push
mov
mov
call
mov
xor
loope
out
bound
mov
xchg
out
push
outsb
lea
sbb
imul
jmp
mov
mov
in
fstp
addb
popf
fistps
aam
addb
sbb
pop
sbb
jo
mov
mov
fwait
mov
loopne
mov
fstpl
and
mov
arpl
xor
mov
add
mov
xor
mov
into
or
xchg
add
mov
rolb
mov
mov
aas
out
add
movlps
mov
add
popa
pop
inc
push
clc
addb
ja
loopne
mov
add
add
mov
ret
jnp
cltd
dec
xor
jnp
repnz
add
loopne,pt
mov
pop
add
inc
push
jge
fwait
rolb
mov
add
jno
popf
xchg
mov
mov
dec
ret
inc
rolb
mov
mov
ret
or
mov
loopne
mov
inc
push
add
cmp
or
xor
call
jg
fstps
xor
fbstp
inc
inc
scas
sbb
fadd
add
out
xor
push
clc
shl
sbb
je
add
mov
pop
aas
cmp
lods
loopne
mov
mov
mov
cmp
fst
addb
lahf
cltd
loop
mov
outsb
xchg
or
mov
add
add
test
sysenter
push
add
mov
divb
xor
add
mov
mov
inc
xor
int
add
mov
fwait
dec
jnp
jmp
xchg
lahf
sub
aas
leave
xor
mov
dec
mov
add
test
jg
jo
mov
add
mov
sbb
in
insl
cmp
mov
movsl
xchg
movsb
jns
push
rolb
mov
dec
jnp
les
lret
stc
cmp
mov
mov
in
add
inc
dec
push
lea
dec
xchg
add
mov
pushl
adc
mov
mov
mov
into
mov
mov
sbb
sub
pop
and
cld
movsb
sarl
xchg
aaa
pop
sahf
push
enter
add
mov
push
mov
mov
pop
add
sbb
outsb
cli
push
add
sbb
xchg
jns
cs
jne
mov
test
fwait
inc
jp
clc
out
pop
inc
iret
in
cmp
mov
pusha
add
clc
loope
ret
mov
std
arpl
mov
add
in
sbb
add
addr16
adc
mov
add
xchg
dec
insb
cltd
mov
testb
mov
mov
push
movsb
dec
in
add
mov
sbb
push
sbb
xchg
xchg
test
add
pop
cmc
mov
fs
movsl
mov
mov
push
mov
iret
test
loop
mov
mull
enter
jmp
js
push
push
lods
mov
outsb
xor
mov
sub
sbb
adc
leave
jmp
xchg
and
mov
add
insb
mov
pushf
jno
lret
add
cmp
jg
scas
cmp
mov
test
test
jg
cmp
shrl
add
xchg
jb
mov
push
inc
rolb
test
rolb
mov
das
rolb
mov
cmc
mov
mov
lock
inc
add
or
mov
xchg
add
sub
cmp
add
lds
dec
movsl
and
mov
jae
nop
add
xor
mov
jmp
addb
loopnew
mov
int3
inc
outsl
in
enter
jno
lahf
je
push
jne
ljmp
mov
jne
dec
add
sub
addr16
add
add
out
xor
in
mov
fnsave
scas
fcmovbe
lcall
add
stos
dec
popf
jne
xor
addr16
add
mov
add
or
mov
arpl
push
add
mov
sub
jae
add
xor
mov
cmc
fcoms
fcoml
popf
pusha
add
mov
mov
insl
popa
mov
cmp
mov
mov
xchg
sbb
cmp
pop
xchg
nop
add
jecxz
add
dec
icebp
popl
data16
sub
xor
mov
cld
mov
jb
mov
aaa
fsubrs
popa
roll
add
dec
addr16
sub
in
or
sub
xchg
dec
xlat
cmp
dec
or
mov
or
add
inc
pop
fidivs
add
mov
rolb
mov
jge
xchg
scas
pop
lock
jl
add
mov
inc
mov
mov
xor
rolb
mov
xchg
jo
mov
mov
cmp
push
xchg
out
sbb
out
fsubrl
push
add
clc
gs
sbb
add
add
in
pushf
add
add
mov
mov
mov
mov
addr16
mov
xchg
repnz
add
scas
lods
out
adc
inc
mov
lock
imul
insb
xbegin
popa
int
xor
movsl
stc
cmp
cmp
mov
sub
inc
fldt
inc
rolb
mov
cmp
mov
aad
add
mov
or
int
pop
jle
clc
pusha
add
push
mov
mov
adc
xlat
jo
mov
int3
inc
add
add
add
add
xchg
rcr
aaa
lods
in
dec
mov
mov
push
int3
in
dec
cmp
out
imul
cmp
rolb
jp
mov
arpl
andl
mov
lahf
int3
in
in
fdiv
sbb
popa
outsb
cmp
sbb
jns
repnz
mov
pop
and
mov
pop
jmp
or
shr
out
pop
mov
dec
popa
dec
mov
rolb
add
stos
jae
push
lds
fs
xchg
sbb
test
add
add
add
push
mov
push
call
mov
inc
jmp
xchg
arpl
movsl
insl
js
movsb
xor
mov
add
ret
push
in
dec
out
add
orl
xchg
aam
int3
cmc
enter
jmp
mov
shrl
lcall
pop
jp
push
cmp
aad
and
mov
ret
cmp
jmp
mov
aam
mov
and
data16
add
or
shl
add
in
mov
addr16
lret
mov
mov
jmp
outsb
fwait
adcl
popf
gs
movsl
pop
adc
dec
pop
push
test
or
inc
repz
cltd
out
jb
mov
mov
fistl
mov
jo
mov
outsl
stos
rcrl
jne
add
cmc
call
mov
add
push
mov
lcall
or
lods
mov
jns
adc
mov
fnclex
add
hlt
jmp
mov
jne
sbb
add
jl
or
cmp
sbb
add
stos
dec
aaa
xor
mov
xorl
ja
imul
adc
mov
sbb
cli
mov
iret
sub
add
or
add
mov
lahf
adc
mov
mov
add
pop
pop
jnp
and
mov
xor
mov
out
test
push
add
push
sub
or
push
add
and
dec
sub
addb
aas
sbb
fbld
add
not
add
cltd
sbb
sbb
int
mov
dec
std
movsl
xchg
adc
mov
call
add
xor
aas
and
mov
jne
or
dec
cmp
lock
or
push
push
cmpsb
adc
sub
in
jecxz
push
test
and
out
xor
adc
or
add
add
rolb
mov
cmp
sti
aaa
scas
xchg
dec
popa
dec
pop
mov
in
or
outsl
stos
clc
xor
xchg
sub
mov
das
jae
dec
ja
ja
jbe
adc
mov
sti
in
mov
lods
aam
mov
mov
sbb
mov
add
jb
mov
mov
cmp
bound
mov
fimuls
addl
sub
push
js
push
add
fmulp
xchg
int
push
insl
rorl
mov
out
dec
dec
loope
nop
add
push
sub
cmc
mov
in
lret
jl
into
es
popf
and
je
xorl
inc
nop
add
out
sbb
fs
xor
mov
cmp
xor
add
mov
dec
pop
mov
mov
mov
sti
into
loopne
mov
xchg
xchg
xor
mov
mov
pushl
dec
sbb
jne
jle
cmp
add
adc
ficoms
add
xchg
add
push
add
mov
divl
mov
mov
mov
addb
lahf
dec
cmp
dec
aas
pop
inc
add
and
mov
out
lock
mov
mov
mov
cmp
inc
mov
xchg
sub
or
add
mov
mov
les
or
gs
cmc
out
dec
mov
mov
add
mov
sub
cwtl
sbb
mov
cmp
add
popa
cmpsl
push
add
ja
popa
mov
add
or
mov
xlat
repnz
sbb
adc
mov
lods
jle
xchg
stos
push
add
push
add
test
mov
xchg
xor
add
pop
push
out
jmp
dec
add
push
loopne
mov
add
mov
outsb
aaa
dec
ja
dec
push
les
out
pushl
push
xchg
inc
dec
dec
xchg
add
sub
daa
rolb
mov
add
mov
jp
pop
clc
fimuls
inc
add
mov
mov
popf
aam
iret
sub
mov
pop
cmp
enter
pop
mov
imul
rolb
lahf
ret
stos
mov
add
je
mov
add
adc
pop
dec
les
mov
aas
push
add
mov
add
int
add
cmpsl
jb
mov
cmp
cld
sub
fldt
add
frstor
pop
out
pop
xchg
dec
stos
cmpl
movsl
ss
cmc
testl
cmp
pop
xor
mov
push
rolb
dec
mov
add
mov
in
jns
push
xor
mov
aam
cmp
push
call
in
negb
mov
add
mov
test
sti
mov
push
int3
inc
std
iret
fsubrl
insl
lods
lea
push
add
icebp
or
add
fcmovnb
add
movsb
lahf
and
mov
sti
sub
jl
out
or
and
mov
sbb
ret
jnp
mov
out
repnz
xlat
lock
sub
sbb
push
idivb
push
pop
dec
dec
lods
lods
mov
mov
sbb
imul
pop
scas
jno
fimull
xchg
mov
dec
rorl
mov
pop
and
dec
mov
pop
and
ret
lods
mov
inc
push
pop
iret
or
push
add
mov
fcmove
mov
mov
add
add
adc
enter
dec
dec
rolb
mov
fimull
inc
push
or
fmul
in
xor
add
add
mov
mov
mov
add
popf
loope
sub
daa
stos
lds
jnp
and
xchg
push
cld
repz
stos
scas
xchg
dec
and
mov
or
dec
adc
cmc
addr16
jge
add
mov
ja
mov
test
inc
adc
dec
sti
inc
add
sub
rcrl
shll
stos
jae
nop
add
outsl
pop
xor
mov
sbb
and
sarl
mov
lods
add
mov
adc
out
lret
inc
add
test
out
outsb
push
ret
sbb
movsb
inc
mov
popa
dec
and
push
add
rolb
mov
push
mov
mov
jb
mov
adc
mov
cmc
sbb
jbe
ret
cmp
xchg
xchg
pop
adc
jge
pop
push
adc
repz
add
mov
pop
repz
dec
out
movsb
cwtl
or
xlat
xor
fisubrs
jmp
gs
add
stc
jmp
int
out
test
mov
add
clc
sbb
push
jo
mov
add
out
add
lods
mov
add
cs
add
pop
in
jbe
push
sub
dec
icebp
jle
loop
mov
loopne
mov
jl
fcomip
push
or
adc
mov
or
mov
add
adc
push
jno
sub
add
mov
repz
or
hlt
cld
pop
fdivs
pop
mov
and
mov
add
or
fidivrl
xor
cmpsb
loope
inc
in
sub
sbb
fcomps
adc
mov
push
or
iret
adc
add
dec
fcoms
push
pusha
add
iret
sbb
jae
fs
leave
call
pushf
fists
mov
dec
mov
movsb
lcall
cmp
jle
xor
test
mov
jns
pusha
add
fincstp
subl
add
loopne
mov
out
mov
add
mov
shr
xor
mov
pop
adc
mov
sti
inc
add
add
sbb
dec
mov
add
orl
mov
mov
add
aaa
or
xlat
call
xor
mov
inc
test
jl
not
mov
inc
dec
sbb
add
add
nop
add
mov
loop
mov
dec
or
add
jns
sahf
stos
gs
jo
mov
push
add
scas
movsl
int
mov
mov
sbb
push
add
mov
gs
sbb
mov
inc
ror
xchg
scas
sub
add
mov
rolb
xchg
cmpsl
jp
outsl
insw
jp
sti
fildl
mov
or
jmp
or
outsl
xlat
mov
mov
mov
add
dec
ffree
or
movsb
or
jge
add
push
mov
lea
adc
fimuls
icebp
invlpg
add
mov
stc
add
cmp
das
add
mov
or
rolb
push
xor
pop
mov
adc
bound
mov
icebp
add
xchg
add
xchg
ret
jp
add
mov
mov
mov
cld
imul
mov
cld
mov
int3
sub
shrl
push
xor
sub
sbb
mov
stc
cmp
sar
sti
jb
mov
data16
cwtl
add
or
testb
pop
aas
addb
push
sbb
push
scas
inc
scas
mov
adc
es
dec
xchg
cmpsb
addb
es
daa
call
fcmovnbe
aaa
aas
dec
mov
sahf
pop
mov
add
add
leave
and
pop
scas
sub
pop
aaa
iret
movsl
and
into
or
mov
les
scas
arpl
imul
mov
pop
dec
inc
inc
subl
inc
xchg
mov
xchg
fwait
sti
fnstenv
addr16
scas
inc
add
cmp
pushf
rcl
add
jae
arpl
add
rolb
jns
outsl
dec
ljmp
repnz
mov
add
cmp
cs
addr16
add
sbb
subl
iret
pop
sub
add
rolb
mov
xor
mov
cli
add
mov
add
stos
fadd
xchg
mov
loopne
mov
imulb
mov
push
push
jecxz
push
add
cli
or
pushf
aam
add
xchg
outsb
and
fldenv
mov
out
mov
loope
add
mov
push
pop
pop
adc
mov
ret
in
sahf
inc
rolb
pop
bound
mov
popa
adc
pop
test
pop
insl
pop
sub
lock
loopne
mov
icebp
in
dec
jge
add
outsl
cltd
pushf
adc
mov
sbb
push
movsl
pop
addr16
add
add
mov
addb
inc
sub
iret
sbb
cld
mov
mov
bound
mov
aam
add
cmp
add
add
jmp
fstps
cmp
add
scas
out
sbb
mov
mov
jbe
sbb
das
call
push
inc
jecxz
mov
mov
cwtl
int3
fcmovnbe
xchg
aas
sahf
clc
dec
pop
ret
add
cmp
icebp
ficompl
xchg
imul
mov
mov
inc
test
adc
roll
lret
jo
mov
mov
sahf
mov
stc
cmpsl
pop
mov
jle
pop
in
jnp
mov
outsl
lret
inc
cmp
pop
xor
jg
or
cmp
add
xor
mov
mov
mov
addb
std
inc
mov
push
xchg
sub
or
xchg
ds
inc
add
iret
fsts
dec
popf
jne
pop
jb
mov
push
add
xchg
pusha
add
mov
add
into
xor
add
xchg
popf
pushf
push
aaa
inc
add
out
jne
lock
mov
push
test
aas
icebp
push
add
mov
dec
xor
jg
add
je
das
mov
mov
aas
test
push
adc
mov
adc
sub
add
sub
jnp
popf
sbb
mov
jle
jmp
pusha
add
or
add
iret
cmp
loop
mov
mov
ficoms
addl
clc
movq
jo
mov
jb
mov
lds
adc
jae
push
cmc
je
sbb
mov
sbb
push
mov
addb
gs
addb
ret
enter
arpl
pusha
add
add
mov
mov
loop
mov
lds
pop
mov
add
mov
add
pop
xchg
repnz
inc
jg
pop
mov
xchg
arpl
pusha
add
mov
xor
xor
mov
add
movsb
sbb
cmp
push
outsl
pop
pusha
add
dec
mov
push
fadd
clc
pop
lret
nop
add
mov
loope
daa
sbb
add
add
imul
adc
mov
js
addr16
imul
add
inc
add
add
into
add
insb
hlt
sub
push
ret
pop
ljmp
mov
arpl
mov
mov
pop
loopne
mov
mov
xchg
and
mov
fmuls
daa
rorl
sahf
push
inc
cwtl
and
mov
iret
gs
enter
addb
jnp
int3
js
mov
add
mov
add
popl
or
mov
mov
fstpt
pop
icebp
mov
xorl
mov
mov
mov
popf
repz
mov
add
pop
mov
rolb
mov
mov
repz
enter
xor
pop
lods
dec
fisttpll
clc
push
shufps
out
push
push
sbb
add
and
mov
ret
leave
cmc
fs
jmp
sbb
mov
add
add
fsubrs
add
icebp
cmp
add
mov
add
mov
leave
lret
pop
outsl
cmp
rolb
mov
loop
mov
icebp
popa
xchg
hlt
rolb
mov
add
mov
pop
les
cmp
or
lahf
int
add
mov
mov
inc
das
lods
repnz
adc
mov
pop
lock
or
xor
mov
add
push
jbe
and
mov
add
add
movsb
pop
inc
dec
push
jnp
sbb
add
cmp
add
add
and
mov
std
push
add
pop
rolb
mov
aas
add
mov
and
add
lahf
xchg
js
icebp
push
and
mov
popa
popf
and
mov
and
inc
out
pop
jbe
daa
movsb
add
mov
cmp
dec
fdivl
mov
add
mov
repnz
cltd
fiadds
add
arpl
test
add
cli
mov
out
ret
mov
std
push
outsl
lods
mov
mov
addb
popa
psubd
add
xor
mov
add
lcall
faddl
mov
add
icebp
mov
movsb
sbb
xor
mov
mov
dec
cmc
sbb
add
mov
mov
adc
popa
pop
cltd
xor
add
add
add
pop
pushf
lods
dec
int3
mov
dec
in
lods
or
add
or
addr16
mov
sbb
lock
dec
insl
dec
push
add
cmp
mov
sbb
sub
xchg
andl
ret
or
ret
mov
mov
in
ret
cld
and
mov
mov
xchg
and
add
add
mov
mov
repz
mov
push
cli
jnp
test
pop
jo
mov
cltd
out
lock
cmpsb
jp
add
xor
mov
in
or
and
mov
push
call
add
mov
mov
jl
push
jae
pusha
add
push
push
loopne
mov
mov
pop
mov
add
in
into
inc
fstps
jge
xchg
rcll
into
push
mov
or
xchg
sbb
aas
pop
push
dec
jno
mov
addb
ret
rcrl
addb
fisttpll
add
in
inc
add
rolb
mov
jno
mov
fwait
push
pop
adc
add
dec
push
imul
mov
outsb
xor
add
fdivs
sahf
pop
jmp
add
mov
rorl
add
add
aam
cmp
add
jmp
jg
stc
and
push
lret
imul
push
psubsb
mov
push
outsl
jle
out
push
scas
scas
fsubrs
mov
std
cmpsb
push
fcoml
pusha
add
iret
pop
push
in
jne
fisubl
xor
fucomi
or
mov
fadd
add
adc
lods
data16
dec
xchg
cwtl
sub
pop
icebp
mov
scas
loopne
mov
fstpl
mov
stos
test
add
add
and
mov
mov
negb
inc
dec
mov
out
cli
xor
push
loop
mov
add
inc
push
xchg
dec
pop
lock
mov
mov
add
aaa
jmp
sahf
sti
adc
into
jbe
xchg
cmp
add
mov
add
mov
outsb
cmpsb
push
aaa
aaa
idiv
or
add
mov
adc
lods
lcall
mov
or
sub
push
sbb
dec
xor
mov
cli
sub
cwtl
xor
mov
add
pop
mov
mov
cmc
push
add
fsubs
in
mov
inc
inc
jb
mov
inc
stos
repnz
in
jne
test
in
imul
mov
sti
dec
leave
and
sbb
adc
mov
lds
je
es
inc
pusha
add
in
xchg
sbb
mov
mov
pop
dec
push
mov
jb
mov
aas
in
cmpsl
dec
enter
pop
push
addb
enter
icebp
rolb
mov
dec
xor
mov
add
add
shll
mov
add
add
mov
scas
cli
sub
inc
xchg
add
rolb
mov
fs
add
add
push
add
add
lea
or
or
cmp
fwait
rolb
mov
push
dec
sbb
push
je
jecxz
cmc
imul
add
pop
push
rolb
mov
inc
nop
add
sbb
add
push
mov
insl
push
and
fstpl
inc
add
iret
jo
mov
fs
cmp
lock
mov
mov
fiadds
mov
cmp
inc
icebp
mov
bound
mov
mov
adc
mov
cmpsl
xor
lods
rolb
mov
cli
out
dec
xlat
mov
mov
rolb
wrmsr
add
jg
cmpl
mov
jb
mov
fnstcw
sti
dec
xchg
add
jnp
iret
orl
dec
and
adc
mov
mov
or
xor
mov
xor
mov
add
ret
test
push
mov
add
mov
loopne
mov
and
inc
add
mov
in
or
sbb
jns
popa
jecxz
jl
mul
xchg
daa
lcall
push
add
add
mov
mov
add
ret
mov
lods
sti
jp
int3
cmp
sub
mov
cmp
jno
aaa
mov
ss
add
mov
mov
push
lea
mov
push
xor
rorl
inc
cs
mov
aad
lods
in
cld
fstpl
pop
iret
jnp
repz
imulb
addr16
test
pushf
mov
dec
or
jnp
xlat
jl
insb
or
test
add
testb
das
dec
mov
mov
pop
or
or
pop
loop
mov
ljmp
pop
push
adc
sub
xchg
mov
ret
inc
jno
mov
lret
add
or
dec
arpl
push
xchg
test
or
pop
push
jmp
inc
add
cltd
in
pop
xor
mov
push
jne
icebp
mov
mov
dec
xor
and
mov
jmp
data16
mov
pop
or
and
fcoml
mov
xchg
popf
xlat
shrl
popf
jo
mov
push
add
mov
mov
iret
push
mov
push
ficoms
aaa
lods
or
add
dec
jns
in
test
push
adc
pop
pop
inc
add
stc
xchg
push
mov
imul
push
pop
arpl
mov
pushf
xor
addb
sub
mov
add
mov
add
push
call
cmp
aaa
push
push
add
hlt
in
pop
mov
inc
int
rolb
push
jo
mov
add
adc
add
ds
cmc
jecxz
in
adc
arpl
sbb
jbe
loope
into
push
pop
rorl
pop
mov
add
mov
ljmp
sbb
fistl
adc
into
lret
lahf
sbb
fldcw
inc
add
mov
xor
mov
mov
enter
jne
or
lea
add
rolb
loope
push
inc
jecxz
xor
mov
dec
aaa
and
cmp
sti
cld
cld
sub
in
pop
in
pushf
jg
loope
mov
inc
and
add
je
and
mov
sbb
loopne
mov
add
cs
xchg
xor
mov
xor
mov
sub
jge
dec
add
mov
xchg
adc
mov
mov
cmp
mov
inc
iret
inc
arpl
pusha
add
inc
inc
mov
std
sub
xchg
adc
xor
sbb
fnstcw
adc
mov
or
push
jg
clc
cmpsl
mov
add
add
gs
clc
push
pop
adc
xchg
ss
add
mov
add
sbb
add
rolb
mov
out
insl
lea
ljmp
add
mov
or
jg
rol
pop
mov
insl
pop
xchg
js
lods
loopne
mov
mov
mov
mov
add
mov
lock
add
mov
int
inc
mul
xor
aad
add
mov
addr16
xor
add
dec
xor
mov
xor
mov
scas
fwait
js
lahf
iret
jns
lahf
and
mov
add
push
mov
add
mov
icebp
xchg
movsb
in
cmp
xchg
adc
add
and
jno
mov
mov
hlt
mov
sub
mov
sbb
dec
jg
inc
test
cmovnp
mov
adc
aad
and
mov
sbb
adcl
or
mov
mov
inc
out
or
add
jnp
inc
add
push
and
mov
mov
and
movd
dec
lret
sbb
add
add
adc
jae
mov
add
mov
or
test
ret
sti
xchg
add
out
inc
jnp
add
xor
inc
mov
push
stos
mov
xchg
lcall
cmp
mov
add
push
sub
das
fbld
jnp,pt
add
add
jno
add
sbb
setg
add
outsl
fstpl
jg
adc
xlat
into
cmp
dec
mov
and
cmp
out
inc
add
sbb
cld
inc
repnz
add
cmp
dec
jmp
jp
stc
sub
mov
sbb
jno
repz
mov
mov
inc
pop
xchg
lahf
cli
in
inc
add
subl
lea
enter
add
rolb
lock
mov
inc
add
addr16
mov
push
test
sarl
enter
sub
mov
lcall
lcall
add
lods
sbb
cltd
jp
add
jns
jge
or
lahf
or
movsb
pop
sbb
mov
in
imul
aaa
or
mov
add
cltd
mov
mov
xor
cmp
stc
arpl
aaa
and
mov
mov
adc
adc
mov
insb
call
ret
loope
add
ljmp
dec
lahf
push
push
loop
mov
cmpsl
shl
fld
addb
xchg
lret
jp
add
mov
push
in
add
jne
negb
adc
inc
stc
fcomps
sti
xor
cmp
push
in
sahf
iret
mov
mov
add
add
adc
mov
push
pop
ljmp
adcl
jo
mov
mov
jno
adc
iret
jl
push
cmp
sub
popa
lret
sub
mov
add
mov
mov
add
jae
ljmp
in
pop
mov
aad
add
mov
sub
and
and
mov
sti
mov
mov
mov
fnsave
fucomp
lods
and
mov
jb
mov
hlt
sarl
adc
add
inc
add
movsl
adc
mov
mov
es
or
cmp
xchg
pop
lods
fmul
mov
outsl
mov
xchg
stc
mov
push
daa
xchg
or
or
psubw
and
iret
insl
cli
mov
mov
data16
push
sti
out
dec
cmpsl
mov
push
pop
xor
mov
imul
sub
shll
in
pop
push
add
add
jmp
repz
pop
sbb
sub
aas
mov
in
scas
dec
into
cmp
sub
cmp
xor
mov
sbb
test
mov
or
fisttpl
add
ja
test
rcll
addb
pop
divl
mov
or
sbb
sub
mov
mov
clc
leave
mov
push
add
test
pop
repz
or
add
lods
fstl
jecxz
fdivrl
rcll
add
add
nop
add
out
adc
jne
or
into
popf
pop
and
mov
leave
das
into
leave
movsb
inc
out
add
sbb
jg
xchg
call
mov
cmc
mov
xchg
dec
pop
roll
mov
imul
in
pusha
add
lcall
add
add
add
mov
pop
scas
jge
and
mov
das
hlt
xchg
pop
js
in
add
cmp
add
loope
clc
cmp
push
or
ret
sarl
xor
or
mov
jl
je
mov
mov
and
pop
addb
jnp
imul
cmp
cmp
add
xor
mov
add
movsl
cltd
addb
push
jmp
fwait
mov
cmpsl
les
adc
mov
add
pushf
arpl
dec
jge
stos
or
mov
sbb
jne
ficomps
dec
daa
int3
and
shl
add
pusha
add
add
mov
xlat
sbb
mov
icebp
stos
lahf
or
inc
xchg
dec
stc
aaa
mov
faddp
add
and
lahf
mov
xchg
mov
add
push
push
mov
test
cltd
test
and
xor
mov
sbb
cmpsl
stos
clc
fldcw
lock
add
ljmp
fisubs
sbb
lret
fcmovnbe
pop
xchg
pop
push
jmp
mov
xchg
cmpsb
sbb
dec
or
cmpsb
sbb
mov
insb
mov
int3
or
in
dec
aad
sbb
daa
stc
imul
jo
mov
iret
inc
add
and
scas
mov
mov
jno
push
or
mov
add
rolb
mov
shr
add
add
mov
mov
push
addr16
imul
cmp
mov
dec
not
movsl
and
mov
cmc
mov
in
push
mov
push
add
mov
add
hlt
push
divl
fbstp
jns
sti
pop
shll
jecxz
add
pop
mov
lods
inc
out
or
xchg
add
mov
add
jno
popf
adc
mov
inc
xchg
cwtl
push
mov
cli
adc
add
cmp
test
fldt
inc
ds
mov
ljmp
inc
xchg
inc
add
sub
popa
and
lret
test
outsb
cmp
add
add
sbbl
in
cmp
cltd
push
in
or
or
dec
or
push
mov
xor
lea
dec
jbe
decb
xchg
jnp
lods
loope
daa
push
dec
js
add
lea
cwtl
ds
mov
lds
add
mov
cli
mov
mov
std
sub
les
push
mov
or
push
add
rolb
xor
mov
xchg
add
popa
inc
mov
push
add
mov
or
roll
pop
sub
push
cld
add
mov
dec
aas
jg
mov
pop
push
pop
pop
popl
add
mov
xchg
shrl
adc
mov
int3
fidivs
dec
insb
ret
insb
lahf
jl
sbb
and
mov
cmp
mov
lods
cmpsb
cmp
xchg
xor
mov
add
ds
mov
mov
dec
mov
xor
sbb
mov
clc
dec
xor
mov
mov
dec
push
out
loope
popa
jno
mov
mov
addb
xchg
mov
sbb
add
fwait
pop
pop
xor
icebp
loop
mov
es
inc
ss
push
push
jno
jns
add
add
mov
xchg
cltd
lds
mov
movsb
cmp
repnz
sub
mov
lds
sarl
jecxz
cmp
inc
or
mov
popf
and
aad
jecxz
into
addb
add
mov
lods
xchg
notl
add
pop
je
addl
add
lods
jecxz
adc
mov
add
add
mov
xchg
pop
dec
adcl
mov
add
out
jns
pop
mov
sub
hlt
inc
and
and
mov
mov
add
add
push
add
mov
add
out
mov
push
fwait
and
popa
or
mov
add
mov
and
xor
mov
pop
sbb
mov
lahf
sbb
or
mov
dec
mov
dec
mov
add
dec
cwtl
jnp
add
push
repnz
imul
xor
out
and
cmp
add
lods
cmp
mov
mov
add
mov
xchg
add
out
testl
cwtl
pop
xchg
daa
mov
add
xchg
stos
push
aas
inc
rolb
mov
jne
mov
mov
add
adc
mov
or
cmp
add
push
add
and
mov
add
add
lods
std
xchg
xchg
ja
push
lods
mov
ja
add
pop
xchg
sbb
imul
les
dec
clc
cmp
stos
lret
pop
dec
adc
jne
je
xchg
pop
rolb
mov
pushf
add
add
add
mov
mov
lods
movsl
sub
mov
add
in
xor
add
gs
cltd
xor
mov
add
push
popf
lds
pop
std
mulb
sbbl
mov
add
jnp
xchg
cmc
xor
add
enter
xchg
mov
repz
mov
push
add
add
cmp
adc
add
add
shrl
cmpsl
movsb
pusha
add
add
xchg
out
pop
in
bound
mov
dec
cmp
and
stc
popf
fisttpll
ja
sub
ds
mov
mov
into
adc
jmp
imul
inc
add
pop
frstor
add
test
imul
push
hlt
je
fisttps
mov
mov
dec
jae
add
mov
fstl
rolb
mov
sbb
dec
out
adc
mov
mov
mov
lods
or
push
adc
mov
dec
sub
mov
xlat
mov
mov
jmp
in
sub
mov
inc
sub
add
adc
xor
xchg
roll
pop
popf
repnz
xor
add
xchg
divb
addr16
and
mov
mov
sbb
mov
jmp
add
mov
and
mov
add
pop
cli
xchg
add
stos
mov
add
out
testl
jle
ret
push
add
add
add
lret
mov
add
int3
pop
test
iret
int3
inc
jecxz
xchg
add
icebp
fs
fdivl
mov
gs
rcrl
xchg
add
or
add
adc
mov
jns
std
insl
in
sbb
je
fisttps
or
sbb
mov
add
mov
add
and
mov
mov
pop
jl
add
out
jnp
add
mov
subl
pop
and
mov
loop
mov
data16
add
daa
mov
jmp
add
jbe
clc
add
std
push
fidivrs
cmpsl
xor
add
xchg
in
add
ret
outsl
in
lock
sarl
xor
mov
out
lcall
ljmp
lods
push
scas
push
add
in
jecxz
jns
add
sbb
adc
mov
add
jo
mov
les
test
es
fstpl
or
or
jle
mov
aaa
int3
xor
add
xor
jg
repnz
sub
cld
jge
add
hlt
fsubrl
pop
jo
mov
sub
dec
jecxz
pop
sub
out
push
add
cltd
aad
bound
mov
mov
icebp
mov
mov
repnz
popf
pop
inc
cld
add
test
mov
mov
mov
cli
dec
jmp
or
testl
add
loopne
mov
mov
or
add
in
and
fsubl
mov
jnp,pt
mul
or
cmp
mov
lret
jl
arpl
bswap
jae
xchg
mov
or
int
cwtl
nop
add
cmpsb
int
add
mov
xchg
cmp
jo
mov
add
push
xchg
or
lahf
jb
mov
mov
mov
add
setno
add
rolb
mov
jle
sbb
in
xor
xlat
jle
add
pop
aam
or
fisubrl
xchg
pop
jne
dec
jg
outsl
dec
sbb
add
mov
mov
and
mov
mov
inc
add
mov
pop
sti
xor
mov
or
clc
pop
add
mov
mov
add
mov
xchg
add
mov
mov
sub
mov
mov
xor
mov
mov
mov
fs
pop
mov
mov
incl
ja
add
add
cmp
stos
dec
ret
mov
lcall
rcll
sbb
push
mov
lahf
mov
ror
lods
loope
roll
push
or
push
repnz
inc
rolb
mov
lds
add
mov
add
add
xchg
aaa
push
pop
icebp
ret
mov
mov
push
mov
dec
and
mov
mov
or
jge
lcall
imul
icebp
pushf
jae
add
rcll
jno
add
addl
add
mov
mov
cmp
ja
addb
aam
or
ja
add
dec
push
cmpsb
out
nop
add
adc
jmp
add
outsb
push
xchg
xchg
add
test
and
mov
push
add
add
mov
icebp
dec
orps
addb
mov
subl
jmp
dec
shll
push
add
ja
add
add
add
add
or
je
add
in
mov
push
xchg
cmp
inc
jbe
les
fcompl
jmp
sbb
mov
add
or
gs
sahf
mov
js
mov
add
add
add
mov
int
rolb
mov
push
mov
adc
mov
mov
aam
inc
cmp
pusha
add
sbb
ret
repz
mov
mov
sub
data16
sub
out
psubq
out
sub
pushf
movsl
xor
mov
lds
mov
push
sti
pop
fsubr
jno
push
jmp
popf
lret
add
pop
pop
fdivl
outsb
and
add
sbb
add
or
shrl
add
fidivs
add
mov
or
loop
mov
xchg
add
inc
add
mov
cmpsl
cmpsl
adc
mov
sbb
or
lahf
lods
mov
mov
mov
xchg
add
mov
ret
fidivrl
dec
sbb
push
cs
fimuls
pop
rolb
mov
push
add
add
mov
or
sti
loop
mov
ss
dec
push
arpl
mov
lds
jns
add
shrl
mov
xchg
inc
test
aad
adc
mov
outsb
imul
xor
mov
mov
add
movb
popa
xchg
xchg
sub
push
add
mov
add
and
dec
outsl
fstl
jo
mov
add
fisttps
ss
scas
adc
mov
add
xor
mov
pop
mov
add
or
aam
dec
js
jmp
in
dec
push
mov
add
add
and
mov
mov
add
addr16
pop
mov
mov
add
adc
and
mov
push
add
pusha
add
add
lods
dec
pop
lea
sbb
notl
ret
pop
mov
cmpl
push
xchg
fsubl
sub
lds
add
mov
call
addb
lock
jmp
mov
mov
or
lea
adc
mov
bound
mov
rolb
mov
pop
sub
mov
sub
jnp
add
mov
xor
mov
imul
fdivp
inc
addb
sub
jnp
loope
loope
adc
mov
mov
xor
jmp
fnstcw
mov
add
xchg
incl
xlat
cli
or
mov
sbb
cmpsl
sub
mov
mov
mov
add
pop
push
out
lds
ja
outsl
lods
mov
cmp
syscall
rolb
mov
sbb
jne
fists
lds
rolb
mov
add
js
addr16
rorl
popf
cmpl
fwait
dec
repz
out
cld
push
push
add
cmp
fimull
sbb
aam
add
ficompl
test
aas
mov
push
cmp
mov
add
cmp
fimull
rolb
mov
jnp
pop
stos
enter
xchg
imul
test
and
xor
add
into
adc
add
add
add
out
scas
fimull
add
imul
adc
popa
ss
mov
mov
dec
and
mov
sub
lds
ja
mulb
popa
test
arpl
push
jmp
dec
mov
enter
imul
in
mov
insb
hlt
ds
mov
mov
add
add
xlat
cmp
push
icebp
cs
cmp
addr16
dec
adc
sub
movsb
mov
stos
mov
pusha
add
cmp
xchg
add
loope
xor
loop
mov
add
add
dec
addb
and
clc
scas
mov
mov
add
add
lret
mov
shld
mov
mov
add
dec
inc
pop
cmc
adc
pop
lcall
pop
mov
add
xor
xchg
add
out
fadd
push
in
imul
mov
ret
jb
mov
lret
sub
add
jl
test
sub
add
add
hlt
sbb
add
push
fs
xchg
cmpsb
adc
cmc
pop
fldt
mov
adc
insb
outsb
dec
lea
lds
cli
or
test
add
jno
test
add
mov
jecxz
pop
sbb
sub
rolb
mov
mov
mov
das
sub
test
add
mov
mov
and
xchg
push
add
mov
cs
out
xlat
adc
fstpl
add
xlat
jge
mov
in
out
mov
lock
movsb
pop
jns
mov
mov
daa
in
ret
insl
cmc
insb
xchg
or
add
jge
ja
add
mov
mov
mov
xor
add
call
add
sahf
xchg
hlt
xchg
add
adc
mov
pop
stc
scas
push
push
sub
add
add
addb
mov
mov
pop
popf
cmp
clc
jecxz
push
movb
mov
sahf
mov
add
and
mov
out
dec
cli
and
mov
das
ja
push
add
sbb
mov
mov
clc
lret
add
jbe
push
add
in
mov
aam
jno
add
and
bound
mov
and
mov
icebp
fisubs
mov
mov
dec
in
jg
adc
ds
loopne
mov
lret
pop
in
add
add
es
add
mov
add
mov
lds
test
call
cmovnp
fxch
cld
push
dec
pop
inc
add
mov
mov
or
jecxz
xor
add
arpl
xor
cmc
hlt
bound
mov
stos
push
mov
out
enter
mov
sbb
add
jmp
add
mov
bound
mov
pop
or
and
mov
xchg
sahf
ss
sbb
mov
adc
mov
shll
add
test
scas
inc
adc
inc
add
fdiv
mov
jl
icebp
push
add
pop
xor
mov
jae
cmpsl
inc
ljmp
or
stc
iret
hlt
pop
inc
fsubl
add
mov
xor
add
mov
leave
ds
in
rol
mov
add
test
mov
adc
inc
add
add
dec
in
stos
ss
aas
adc
out
lock
mov
add
cltd
fwait
pop
xchg
subl
inc
add
das
std
cmp
clc
inc
jl
mov
in
add
mov
scas
push
sahf
orl
xchg
inc
dec
push
rolb
mov
xchg
inc
inc
add
mov
add
addb
sbb
out
icebp
iret
jo
mov
fldenv
mov
inc
repz
adc
inc
add
add
and
addb
aad
fisttpl
lock
shll
lahf
lods
jmp
push
aas
dec
jmp
cmp
xchg
push
ret
mov
jmp
icebp
ss
mov
jmp
sub
clc
and
cwtl
dec
or
icebp
lods
xor
mov
mov
lret
lock
popa
frstor
outsb
mov
int
in
push
and
or
std
jno
fstp
pushf
divb
add
ret
add
pop
mov
pusha
add
cmp
out
jg
adc
and
bound
mov
pop
xor
mov
mov
push
sbb
mov
cld
jbe
xchg
sbb
cmpsl
ds
fcmovu
mov
mov
and
mov
add
mov
outsb
mov
enter
repz
movsl
daa
cmp
xchg
or
add
push
addb
dec
sbb
sub
sti
inc
addb
je
ja
jp
add
pop
data16
movups
addb
addb
data16
test
out
fs
mov
xchg
fdivs
add
mov
inc
add
inc
jecxz
add
fwait
hlt
push
addb
push
cmp
adc
xchg
xor
insb
aas
jns
pop
in
lahf
addb
stc
sub
out
pop
mov
mov
stos
or
out
inc
lret
or
mov
mov
and
mov
add
int3
and
jnp
add
repnz
ds
add
mov
das
lods
mov
repz
add
sbb
test
mov
stos
iret
dec
jno
icebp
cld
inc
mov
add
push
add
add
mov
lcall
rcr
xchg
rolb
mov
add
mov
add
das
arpl
cwtl
mov
cs
repnz
int3
jns
pusha
add
out
pop
aad
test
xchg
adcl
inc
push
sub
in
cmp
mov
mov
repz
add
ret
mov
mov
cmpsb
or
mov
sub
sbb
mov
fwait
lds
add
enter
rolb
pop
mov
pop
sub
adc
mov
pop
jb
mov
mov
add
pop
sbb
fdivrl
fistl
mov
mov
xor
test
cmp
mov
mov
insl
dec
shll
imulb
adc
or
add
out
lock
mov
and
cmp
inc
add
cld
xor
mov
lods
mov
mov
adc
mov
inc
push
or
cli
dec
stos
loopne
mov
sub
and
mov
add
mov
test
jle
cmc
mov
add
test
inc
int
adc
mov
jle
inc
add
mov
daa
jmp
mov
inc
jae
xchg
add
clc
xchg
out
sub
mov
in
enter
inc
repz
mov
es
negl
push
adc
pop
addb
imul
sbb
cmpsl
mov
cltd
adc
mov
insb
rolb
mov
iret
arpl
leave
mov
pusha
add
movsb
rolb
push
add
mov
add
sbb
xor
mov
add
mov
mull
add
dec
lods
add
mov
add
inc
testb
sbb
add
add
stc
ljmp
mov
daa
test
fisubs
sbb
out
addl
stos
cmc
cmc
sub
in
repnz
cmpsb
add
mov
mov
leave
ja
mov
popa
movsl
cmp
fstpt
data16
sub
mov
aad
les
mov
jg
add
hlt
mov
sub
fsubl
mov
push
pop
cmp
adc
mov
popa
out
pop
dec
sbb
dec
adcl
cmp
aaa
cmp
das
xor
int3
out
and
add
mov
rorl
add
jns
or
rolb
mov
add
cs
or
adc
mov
add
add
mov
fnsave
sbb
out
add
ret
cltd
jl
lahf
loopne
mov
jno
adc
mov
test
nop
add
stc
cld
add
mov
cmc
enter
fisttpll
xchg
mov
add
fldt
ljmp
inc
add
add
mov
subl
mov
bound
mov
outsb
test
push
popf
dec
jnp
inc
add
mov
jbe
movsl
mov
sti
fcomps
cmc
movb
dec
idivl
push
mov
mov
pop
push
out
xchg
sub
sub
mov
mov
and
mov
stc
aad
rolb
mov
add
cli
das
loopne
mov
add
cld
cmpsl
sbb
inc
add
or
rolb
mov
adc
insl
in
xchg
int
testb
adc
add
inc
push
loop
mov
cmc
cmp
mov
xchg
ja
add
mov
mov
adc
mov
push
push
js
add
add
add
mov
add
mov
push
add
jae
fsts
insl
xchg
add
pushf
push
mov
inc
mov
add
out
and
pop
addb
insl
cmp
add
mov
or
add
xor
scas
outsb
repnz
mov
add
add
jmp
mov
inc
call
out
sbb
mov
pop
add
mov
mov
add
stos
mov
push
lret
jo
mov
adc
mov
mov
add
mov
xchg
mov
movsb
dec
add
mov
stos
dec
ss
jb
mov
mov
popl
add
mov
lret
xchg
adc
add
xlat
or
xchg
cmp
add
lret
mov
add
inc
out
je
pop
mov
add
fwait
and
addb
push
sbb
loope
push
mov
fisttpll
or
jbe
rolb
mov
jbe
pop
cli
cs
imul
add
mov
js
xor
push
xchg
cmp
adc
addr16
dec
push
add
leave
aas
arpl
fsubs
sub
loopne
mov
add
mov
mov
pushf
sbb
add
jnp
xchg
pop
sti
clc
sub
mov
mov
fwait
push
adc
add
mov
enter
xchg
lret
or
push
fsubrl
ret
mov
jecxz
fmulp
and
inc
add
mov
loop
mov
je
sti
mov
and
mov
sub
push
cmp
lret
add
xchg
adc
je
jle
rolb
jl
add
mov
xchg
pop
or
jae
daa
add
mov
sbb
add
mov
mov
xchg
hlt
sbb
add
aaa
push
sub
sbb
popa
fmull
pop
aad
push
xchg
or
add
and
inc
or
xchg
dec
icebp
lods
cmp
addl
mov
xchg
jae
test
aad
lea
xor
fists
add
test
pop
xor
mov
mov
cmp
rolb
mov
inc
push
push
add
add
mov
ss
add
cld
leave
xchg
stc
push
add
mov
add
icebp
cmc
daa
xchg
cmp
popf
and
mov
stos
xlat
inc
enter
testb
add
enter
aad
daa
test
push
shrl
add
push
fidivrs
adc
mov
dec
test
add
mov
loope
add
mov
bound
mov
loopne
mov
xor
cmc
cmp
sbb
and
out
dec
inc
push
add
push
dec
dec
sbb
fcmove
cmc
fnsave
and
xchg
jp
enter
test
stc
mov
add
fdivrp
mov
shll
mov
repz
mov
int3
lret
mov
lods
rolb
mov
mov
add
mov
and
mov
scas
mov
je
add
or
addr16
movsl
pop
jb
mov
test
mov
add
cld
fwait
jae
cltd
pop
dec
test
cmp
repnz
sub
mov
mov
jmp
pop
xor
shrl
mov
mov
insb
jmp
adc
mov
mov
hlt
dec
ds
dec
sbb
cmp
pushf
xor
fnstenv
mov
repnz
add
xlat
setnp
add
lock
add
out
enter
sar
inc
bound
mov
jle
lods
in
out
add
add
mov
pop
jmp
cs
sbb
jp
add
cmp
add
xor
sbb
sbb
pop
addr16
aam
inc
add
and
mov
mov
mov
mov
xor
mov
add
mov
xchg
add
xchg
adc
mov
mov
lds
mov
add
add
add
js
add
decl
add
add
mov
test
fidivs
stos
ret
dec
mov
inc
add
xlat
popf
mov
mov
ljmp
fcompl
scas
bound
mov
mov
lods
sbb
int3
xor
jge
adc
mulb
and
popf
push
add
andps
pop
xor
mov
mov
push
repnz
mov
sub
inc
fsubrl
adc
rolb
mov
or
popl
mov
scas
inc
add
mov
add
lcall
popa
insl
mov
std
jbe
jne
rolb
mov
testl
pop
mov
jp
mov
mov
mov
and
mov
mov
adc
cltd
icebp
xor
mov
push
adc
or
push
jnp
dec
sbb
mov
mov
int
mov
stc
cmpsl
lcall
mov
mov
out
add
xor
add
mov
jno,pn
jns
cmp
push
xchg
cmp
shll
pop
jns
add
cld
xchg
add
or
pop
popa
jo
mov
stos
cmpsb
movsb
xor
dec
rcll
imul
add
add
mov
xor
mov
pusha
add
dec
inc
add
or
add
adc
setae
add
lock
aad
add
add
mov
mov
sbb
mov
mov
in
cli
scas
test
popa
sub
rolb
inc
add
jle
mov
arpl
pusha
add
push
inc
or
test
cmpsl
add
mov
pop
pop
sahf
jmp
mov
ss
cmp
jnp
adc
sbb
fists
leave
andl
xlat
outsl
jae
fwait
sub
repnz
mov
out
sbb
dec
mov
mov
add
test
add
inc
aad
add
jmp
cmp
out
mov
flds
jle
insb
fnstsw
int
add
add
jp
add
add
cmp
mov
push
add
bound
mov
add
out
cmp
aad
push
push
sub
push
sub
out
es
sub
pop
aam
dec
push
mov
mov
mov
imul
adc
mov
fnstcw
insl
adc
enter
loopne
mov
stos
xchg
jge
cmpsl
mov
lock
sbb
xchg
add
push
xchg
cmp
dec
xchg
cmc
addb
dec
xchg
xchg
dec
or
add
mov
sub
jae
das
xchg
sarl
inc
add
or
rolb
jle
ljmp
aas
sub
mov
lret
icebp
pop
lea
xchg
movsl
pushf
nop
add
int
add
scas
sbb
cli
subl
mov
dec
test
lret
sub
inc
jo
mov
xchg
js
in
xchg
add
add
mov
into
fisttpll
int
add
push
icebp
xor
mov
mov
icebp
jbe
jno
pop
xor
mov
repnz
mov
popa
cmc
inc
push
add
add
mov
or
or
add
push
or
jo
mov
mov
add
fimull
jge
movsb
lret
shll
add
add
add
mov
loopne
mov
ret
repz
add
dec
xor
imul
add
mov
mov
add
add
sbb
and
repz
sub
add
add
mov
adc
mov
mov
lret
mov
adc
add
mov
jo
mov
and
mov
xchg
sub
scas
sub
add
or
mov
and
sub
add
in
imul
pop
imul
dec
adc
mov
lcall
push
or
fs
cmp
add
testb
in
push
loop
mov
jle
ret
scas
xchg
jl
mov
xor
mov
add
mov
push
pushf
adc
das
mov
fisubl
add
cmp
mov
add
xchg
dec
jmp
movsb
cmp
fsubrp
xchg
loopne
mov
mov
cmpl
ljmp
mov
call
pop
cmc
add
nop
add
cmp
add
sub
out
pushf
idiv
sahf
mov
in
lds
rolb
mov
in
add
add
mov
mov
pop
sbb
adc
mov
ret
push
mov
fldt
dec
add
xchg
rolb
mov
add
jp
test
lods
cmp
pop
pop
jmp
lods
mov
mov
inc
data16
sahf
pop
dec
cmp
test
add
sarl
xor
mov
add
mov
mov
add
outsb
pop
jle
pop
xchg
dec
hlt
std
out
or
mov
subl
add
mov
int3
xchg
mov
mov
inc
add
mov
inc
fiadds
fldl
dec
sub
scas
scas
cs
dec
push
or
rolb
mov
push
sub
add
add
add
mov
mov
push
in
popl
aad
stos
mov
jecxz
test
scas
xchg
add
test
ljmp
insl
pop
mov
mov
add
popf
mov
sub
gs
cmp
icebp
mov
nop
add
negb
or
lods
cmpsb
das
scas
iret
pcmpgtd
and
adc
mov
add
inc
cmp
pop
inc
add
add
lret
add
mov
mov
arpl
fadd
add
popf
insl
jo
mov
xchg
cs
sbb
test
ret
bound
mov
or
adc
inc
add
jae
stc
in
push
pusha
add
add
es
adc
add
enter
mov
ja
or
add
xchg
mov
in
push
aam
cmp
add
add
nop
add
outsb
lcall
inc
mov
shll
lcall
mov
and
add
push
and
mov
add
in
dec
mov
inc
pop
xor
jno
daa
pushf
xorl
fidivrl
xchg
cs
inc
aad
ss
je
mov
jge
add
dec
xor
mov
aad
sti
push
mov
les
ds
es
jbe
add
sbb
pop
mov
clc
popa
scas
mov
inc
mov
jp
cmp
shll
stos
xchg
not
add
cmp
gs
in
cmc
test
adcl
jecxz
inc
pop
cltd
mov
cmp
mov
add
mov
imul
js
repnz
and
mov
or
xor
test
test
cld
sahf
inc
adc
sbb
mov
dec
sbb
ja
aas
xor
sti
sbb
out
das
push
repnz
mov
mov
xor
sub
in
fistpl
jp
mov
adc
push
add
mov
or
pusha
add
mov
mov
pop
out
and
mov
cmpsl
jae
leave
out
outsb
jno
enter
add
mov
cmp
gs
cltd
xor
sub
pop
jle
inc
and
pop
sarl
adc
aam
das
into
addb
mov
paddsb
and
and
mov
jmp
pop
outsb
loop
mov
loop
mov
lahf
push
push
sbb
pusha
add
leave
shll
iret
bound
mov
add
add
sub
add
out
rolb
mov
int3
add
mov
andl
lock
divl
imul
add
roll
scas
push
xchg
data16
add
dec
pop
cmp
add
xor
mov
ret
sub
inc
and
mov
pop
popf
nop
add
inc
push
mov
push
adc
push
dec
lret
iret
or
mov
add
into
hlt
cmpsl
cs
pop
adc
aas
imul
xchg
sbb
mov
bound
mov
std
and
mov
sbb
fnstcw
inc
add
xor
mov
fcoms
ljmp
mov
pop
popa
ret
int3
mov
cmp
mov
repnz
enter
xor
pop
aas
jo
mov
push
cmp
or
add
cmp
mov
pop
mov
add
div
test
push
sub
adc
mov
mov
stos
out
adc
mov
out
loop
mov
test
pop
jb
mov
jno
scas
nop
add
int
and
cmp
pop
or
fucomip
adc
mov
in
or
sbbl
mov
pop
test
dec
cmc
dec
pop
xor
mov
mov
imulb
pslld
mov
repnz
add
xchg
insb
arpl
mov
mov
jmp
fsts
mov
mov
nop
add
push
add
loope
das
and
mov
mov
mov
aad
decl
mov
aaa
mov
test
loopne
mov
popf
xorl
and
mov
mov
fsubrl
xchg
dec
xchg
cltd
test
jle
mov
int3
inc
mov
mov
mov
pop
xchg
rolb
mov
jne
cmc
std
test
sbb
enter
aam
lods
out
cmp
add
mov
stos
xor
mov
jns
movsl
xor
pop
push
add
sub
inc
xor
mov
cmp
add
mov
outsb
mov
mov
repz
adc
inc
cmp
or
lcall
rolb
pushf
jp
add
jp
jbe
das
add
mov
adc
adcl
inc
int3
push
xchg
and
mov
pop
cwtl
mov
sub
or
js
std
daa
fwait
inc
add
mov
mov
mov
push
jo
mov
mov
test
adc
int
lret
add
cmp
dec
mov
mov
sbb
mov
inc
add
fs
inc
xchg
ror
ljmp
mul
out
adc
add
loop
mov
lods
mov
sub
in
mov
jb
mov
jg
fsub
popa
jmp
cmpsl
add
mov
lods
push
fimull
add
ja
adc
xchg
mov
cmp
add
pop
mov
inc
jno
push
sbb
in
roll
or
and
mov
pop
jl
add
incl
cmp
icebp
jge
sar
negl
add
inc
movsb
xchg
cwtl
xchg
dec
mov
adc
popa
sub
aas
inc
add
add
mov
frstor
add
or
imul
mov
std
ret
sub
loope
xchg
mov
or
imul
gs
mov
pop
in
adc
mov
sti
dec
das
mov
loopne
mov
pop
lea
loope
mov
mov
les
add
fsubrs
mov
mov
inc
fdivr
movsl
jbe
sahf
sbb
jo
mov
jo
mov
ret
js
std
xchg
mov
mov
mov
and
mov
inc
icebp
cmpsl
cmpsb
lret
and
mov
scas
addr16
add
xor
mov
push
jo
mov
in
mov
sbb
sbb
lcall
mov
pop
sahf
push
add
and
mov
mov
scas
clc
aas
cmp
sbb
or
jecxz
lods
add
xchg
aas
adc
mov
add
mov
rolb
mov
add
mov
pop
cmpsl
mov
mov
jg
pop
cmp
or
sub
cmp
add
mov
cltd
outsl
pop
imul
jge
inc
not
dec
sub
pop
mov
mov
add
outsl
cli
insl
ljmp
add
ljmp
mov
sub
or
and
mov
shrl
mov
or
aaa
enter
aam
mov
push
xchg
push
pushf
test
cmp
jecxz
js
dec
xor
pop
repnz
push
insb
fisubl
mov
andl
hlt
or
lds
mov
inc
xlat
and
out
aaa
leave
aam
or
sub
mov
fnstsw
fwait
cld
nop
jmp
add
add
lea
popa
add
mov
xchg
ret
jns
rolb
out
mov
clc
repnz
jae
xlat
xchg
jle
mov
mov
clc
repnz
jae
rolb
pusha
add
mov
adc
repnz
jae
xor
add
push
mov
add
cmp
clc
repnz
jae
ds
ss
xchg
call
clc
repnz
jae
insb
aam
add
add
clc
repnz
jae
pop
jno
inc
jns
push
enter
jae
aaa
insb
jns,pt
insb
jle
mov
push
mov
xchg
ret
jle
add
mov
jae
repnz
jae
mov
std
push
push
mov
xchg
ret
aaa
fiaddl
jecxz
cmc
fadds
nop
jae
add
push
add
test
jae
add
add
mov
jae
xlat
add
push
and
and
push
clc
repnz
jae
add
aam
mov
add
fisttpll
nop
jmp
add
add
in
jns
pusha
clc
repnz
jae
add
pop
add
cmp
mov
je
clc
repnz
jae
xchg
add
add
add
clc
repnz
jae
jno
loop
int
popa
add
mov
xchg
ret
add
incl
add
sub
clc
repnz
jae
jno
inc
sldt
add
cld
nop
jmp
add
mov
cltd
jl
clc
repnz
jae
push
addr16
pop
push
mov
xchg
ret
add
and
add
push
mov
xchg
ret
xchg
loop
jcxz
and
repnz
jae
in
jnp
add
mov
mov
nop
jmp
jle
add
and
stos
clc
repnz
jae
addl
call
add
outsb
mov
clc
repnz
jae
jnp
jns
icebp
jl
test
add
fwait
cld
nop
jmp
insb
add
push
sbb
jae
jns
add
add
pop
inc
sub
in
mov
cmc
add
push
add
add
lret
lea
fwait
cld
nop
jmp
and
and
add
dec
mov
clc
repnz
jae
add
mov
clc
repnz
jae
repz
xchg
int
add
mov
inc
add
add
pop
clc
repnz
jae
sub
jns
push
mov
jge
jmp
add
jp
add
add
add
clc
repnz
jae
add
add
add
inc
and
mov
clc
repnz
jae
add
add
cs
insb
clc
repnz
jae
inc
outsb
add
fs
cld
push
mov
xchg
ret
add
add
mov
add
push
ljmp
push
outsb
add
and
push
push
mov
xchg
ret
add
jg
aas
incl
lods
rep
clc
repnz
jae
add
cmpl
add
repnz
jae
dec
xor
ret
clc
repnz
jae
pop
add
aaa
push
pop
push
mov
adc
cmpl
add
push
add
pop
adc
mov
cmp
ret
pop
add
add
rep
push
pop
push
mov
xchg
ret
add
push
jno
add
lret
push
push
mov
xchg
ret
add
add
jmp
dec
rolb
lds
scas
jno
add
lock
add
mov
inc
jle
mov
clc
repnz
jae
xchg
add
mov
add
clc
repnz
jae
repz
ds
add
add
mov
insb
ficoml
fwait
cld
nop
jmp
add
add
insb
outsb
fiaddl
pop
mov
push
mov
xchg
ret
scas
jns
jno
pop
mov
fwait
cld
nop
jmp
add
add
add
add
repnz
jae
add
jnp
int
sub
movsb
clc
repnz
jae
add
add
add
add
mov
fwait
cld
nop
jmp
movq
add
xlat
sub
add
clc
repnz
jae
add
enter
jae
add
add
inc
lock
clc
clc
repnz
jae
repz
and
add
adc
repnz
jae
aaa
add
add
std
push
clc
repnz
jae
mov
add
jns
add
pushf
lea
clc
repnz
jae
jecxz
add
add
and
pop
push
mov
xchg
ret
add
rolb
jno
push
add
mov
xchg
ret
add
pop
addl
xchg
add
sub
fwait
cld
nop
jmp
sub
add
and
clc
repnz
jae
push
or
add
addb
ljmp
jge
add
dec
sub
sub
add
dec
mov
push
mov
xchg
ret
add
add
push
add
pusha
push
mov
xchg
ret
add
jno
lea
lds
sahf
mov
clc
repnz
jae
insb
incl
add
pop
fwait
cmpl
fwait
cld
nop
jmp
faddl
dec
push
addr16
add
add
fwait
cld
nop
jmp
jecxz
pop
xorl
movb
mov
xchg
ret
add
jne
clc
repnz
jae
inc
outsb
add
jae
insb
repz
mov
in
dec
sbb
jle
fwait
cld
nop
jmp
add
mov
push
clc
repnz
jae
jno
add
nop
jmp
add
pop
push
push
push
add
add
jmp
cmpl
add
insb
jns
shlb
pop
pop
inc
mov
xor
add
fwait
cld
nop
jmp
push
push
add
loope
mov
fwait
cld
nop
jmp
add
jle
movzwl
clc
repnz
jae
repnz
jg
and
mov
push
fwait
cld
nop
jmp
add
outsb
add
cmp
inc
add
repnz
jae
add
jle
imul
repnz
jae
add
jno
sbb
repnz
jae
mov
add
sub
add
mov
add
add
dec
push
clc
repnz
jae
add
aaa
add
jg
out
clc
repnz
jae
add
add
add
add
pop
and
shl
call
repnz
jae
jns
xchg
add
push
pop
rcpps
repnz
jae
add
add
add
sbb
ss
clc
repnz
jae
add
jae
add
sub
push
jg
popa
add
mov
xchg
ret
add
lret
jbe
fwait
cld
nop
jmp
mov
outsb
pop
mov
clc
repnz
jae
repnz
add
push
aad
pop
mov
clc
repnz
jae
xchg
cmpl
cmc
mov
repnz
jae
add
aam
insb
push
repz
jno
add
mov
lock
sti
lcall
sbb
add
add
insb
jmp
mov
xlat
cmp
xchg
add
add
prefetch
jne
push
mov
xchg
ret
add
push
jp
inc
loopne
repnz
jae
outsb
add
cmp
test
or
add
repnz
jae
rolb
imul
and
add
mov
jae
mov
clc
repnz
jae
mov
in
pusha
fwait
cld
nop
jmp
xchg
push
cmc
add
movsl
in
xor
clc
repnz
jae
aaa
fisubrl
sbb
aas
jecxz
add
add
add
ja
test
push
mov
xchg
ret
pop
push
pop
add
mov
lret
nop
jmp
add
add
add
imul
jae
scas
add
and
nop
jmp
sub
add
add
add
fstpt
clc
repnz
jae
add
inc
add
mov
push
clc
repnz
jae
addr16
add
push
mov
mov
in
add
add
fiaddl
add
add
push
sub
jae
loop
push
add
add
ds
je
fwait
cld
nop
jmp
in
push
push
psubsb
or
add
and
add
add
add
and
repnz
jae
repnz
add
add
mov
clc
repnz
jae
xchg
add
add
mov
clc
repnz
jae
add
jns
add
add
nop
jae
add
mov
xchg
ret
cmp
add
push
and
repnz
jae
faddl
faddl
add
and
mov
repnz
jae
jle
and
loop
mov
fwait
cld
nop
jmp
in
add
jne
clc
repnz
jae
scas
add
push
add
dec
test
fwait
cld
nop
jmp
add
xlat
add
add
add
nop
jmp
mov
add
cmp
mov
mov
push
mov
xchg
ret
add
insb
add
je
clc
repnz
jae
add
rorb
mov
clc
repnz
jae
bnd
aas
push
cmp
xchg
jmp
and
add
add
clc
repnz
jae
int
add
add
mov
mov
jae
repnz
jae
ds
push
out
mov
clc
repnz
jae
add
pop
xchg
fwait
and
clc
repnz
jae
dec
add
mov
push
mov
xchg
ret
and
xchg
insb
inc
jb
fwait
cld
nop
jmp
dec
xor
fiaddl
xor
mov
nop
jae
add
repnz
scas
fistps
repnz
jae
jno
sub
mov
mov
clc
repnz
jae
jno
int
xchg
clc
repnz
jae
insb
add
add
push
scas
mov
add
repnz
jae
add
shlb
je
mov
clc
repnz
jae
add
sbb
mov
xchg
ret
fimull
ss
add
andl
xor
clc
repnz
jae
jno
add
clc
repnz
jae
add
add
cmp
and
push
mov
xchg
ret
sub
add
lea
add
sub
repnz
jae
mov
add
push
clc
repnz
jae
add
aas
add
add
enter
nop
jmp
add
dec
push
mov
dec
xchg
add
add
cld
or
jmp
add
xchg
jns
inc
dec
cmp
fwait
cld
nop
jmp
add
add
mov
clc
repnz
jae
add
call
mov
xchg
ret
loop
scas
jns
or
outsl
fwait
cld
nop
jmp
add
add
pcmpeqw
mov
xchg
ret
aas
in
add
add
jne
clc
repnz
jae
addl
cli
add
clc
repnz
jae
add
jg
repnz
inc
add
add
fwait
cld
nop
jmp
xchg
inc
add
and
fwait
cld
nop
jmp
outsb
add
add
iret
call
clc
repnz
jae
pop
add
mov
mov
cmpl
fwait
cld
nop
jmp
xchg
add
jecxz
incl
mov
cmp
ret
add
pop
outsb
jno
mov
clc
repnz
jae
pop
add
fiaddl
lods
mov
fwait
cld
nop
jmp
add
push
add
lret
rep
push
mov
xchg
ret
pop
add
add
push
aas
mov
clc
repnz
jae
add
add
fs
add
clc
repnz
jae
jns,pt
dec
and
lods
inc
push
mov
xchg
ret
jns
add
and
mov
push
mov
xchg
ret
add
add
add
add
clc
repnz
jae
jns
pushl
push
cltd
pop
fwait
cld
nop
jmp
push
push
in
push
add
ja
mov
clc
repnz
jae
pop
add
and
push
mov
xchg
ret
add
jns
repnz
pop
add
clc
repnz
jae
mov
in
push
push
mov
xchg
ret
pop
add
add
insb
add
add
clc
repnz
jae
lds
mov
add
fwait
cld
nop
jmp
add
add
repnz
test
dec
adc
lahf
lock
add
and
add
inc
insb
mov
clc
repnz
jae
add
repnz
imul
cmp
repnz
jae
add
add
adc
repnz
jae
xlat
fisubrl
repz
push
push
mov
xchg
ret
add
add
add
popf
mov
clc
repnz
jae
add
lds
repnz
jae
add
add
add
xchg
xchg
je
fwait
cld
nop
jmp
push
add
mov
add
add
repnz
jae
push
add
add
xchg
daa
loopne
mov
xchg
lret
push
push
mov
xchg
ret
jno
mov
dec
xor
push
mov
xchg
ret
add
add
int
and
nop
jae
lds
add
shrb
les
clc
repnz
jae
add
insb
add
mov
xor
mov
fistl
mov
xchg
ret
and
add
add
add
mov
xchg
ret
add
add
add
jae
add
pop
add
add
insl
xor
clc
repnz
jae
addr16
add
in
add
nop
jmp
in
add
aaa
add
add
jno
clc
repnz
jae
add
insb
xchg
mov
loopne
repnz
jae
and
add
repnz
jae
rolb
and
add
add
mov
add
add
and
add
add
add
lds
pop
adc
je
clc
repnz
jae
add
xor
add
push
mov
xchg
ret
add
add
mov
pop
dec
clc
repnz
jae
dec
fidivl
add
lea
clc
repnz
jae
mov
into
add
clc
repnz
jae
jle
xlat
int
aas
int
or
fwait
cld
nop
jmp
inc
add
jns
adcl
popa
add
repnz
jae
mov
minps
pop
add
clc
repnz
jae
jg
add
push
pop
loop
add
push
mov
xchg
ret
add
in
add
fwait
cld
nop
jmp
add
add
add
cmp
add
int
repnz
push
aaa
add
mov
fwait
cld
nop
jmp
rolb
add
add
add
pop
pop
push
mov
xchg
ret
add
mov
mov
xchg
ret
aas
and
add
jns
int3
mov
fwait
cld
nop
jmp
and
add
sub
mov
add
repnz
jae
add
jno
add
jnp
shr
clc
repnz
jae
xchg
add
add
push
add
add
jmp
cmp
ret
add
lea
pop
addr16
mov
mov
xchg
ret
add
add
push
mov
mov
mov
xchg
ret
dec
push
add
in
pop
and
fwait
cld
nop
jmp
xchg
repz
in
add
push
fwait
cld
nop
jmp
add
add
add
add
add
jne
clc
repnz
jae
rol
add
clc
repnz
jae
add
add
add
rep
clc
repnz
jae
jns
add
add
mov
add
out
lcall
or
add
ret
push
mov
jmp
add
mov
add
fwait
cld
nop
jmp
mov
loop
mov
in
pop
shl
push
mov
xchg
ret
jno
push
insb
jno,pt
cmp
fwait
cld
nop
jmp
add
cmc
sldt
pop
push
clc
repnz
jae
add
add
aam
insb
and
mov
xchg
ret
cmp
add
insb
sub
clc
repnz
jae
in
add
add
dec
add
repnz
jae
add
repz
faddl
jbe
clc
repnz
jae
add
fimull
outsb
mov
add
mov
cmp
add
clc
repnz
jae
push
add
or
cld
nop
jmp
mov
ds
cld
nop
jmp
push
jno
insb
loop
push
fwait
cld
nop
jmp
add
xchg
pop
add
cld
pusha
clc
repnz
jae
xchg
dec
pop
add
ret
clc
repnz
jae
add
add
jns
insb
insl
mov
clc
repnz
jae
xor
xlat
add
add
filds
xchg
ret
add
dec
fsub
jns
xchg
bound
mov
add
clc
repnz
jae
push
cmp
addb
mov
add
cld
nop
jmp
add
inc
insb
mov
mov
clc
repnz
jae
repnz
insb
add
mov
nop
jae
add
add
repnz
clc
repnz
jae
int
add
add
jns
jne
fwait
cld
nop
jmp
add
jg
xchg
clc
dec
push
mov
xchg
ret
xlat
add
jnp
push
aaa
faddl
js
fwait
cld
nop
jmp
jecxz
dec
and
xlat
add
and
mov
push
mov
xchg
ret
add
mov
add
add
clc
repnz
jae
add
add
xor
add
fwait
cld
nop
jmp
add
xchg
pop
sub
add
push
mov
xchg
ret
mov
sbb
mov
nop
jae
xchg
add
outsb
mov
fwait
cld
nop
jmp
dec
jno
outsb
ss
add
jne
lea
sti
clc
repnz
jae
add
decl
add
dec
pushl
fwait
cld
nop
jmp
fiaddl
aaa
add
add
sub
push
mov
xchg
ret
add
add
add
repnz
jae
add
mov
rol
add
lods
pop
fwait
cld
nop
jmp
add
dec
insb
jnp
and
je
mov
clc
repnz
jae
setb
add
add
clc
repnz
jae
in
push
add
rolb
push
fiaddl
xchg
ret
add
add
lds
cmc
push
add
and
mov
xchg
ret
push
and
add
cmpsb
dec
and
fwait
cld
nop
jmp
jns
xchg
incl
mov
test
xor
mov
clc
repnz
jae
aam
sub
jae
push
mov
xchg
ret
push
repz
add
ret
ret
push
add
adc
jmp
addl
xadd
add
verr
xchg
add
outsl
mov
clc
repnz
jae
and
inc
out
xchg
mov
clc
repnz
jae
dec
int
add
mov
push
mov
xchg
ret
add
vxorps
arpl
inc
add
add
add
loope
mov
clc
repnz
jae
and
add
add
repnz
jae
add
jno
add
and
mov
clc
repnz
jae
jg
mov
mov
clc
repnz
jae
add
add
fwait
cld
nop
jmp
add
pop
jns,pt
push
shl
lds
mov
fwait
cld
nop
jmp
xchg
add
cmpl
nop
jmp
inc
add
jno
push
shl
fwait
cld
nop
jmp
pop
faddl
xor
add
testl
fwait
cld
nop
jmp
add
add
add
clc
repnz
jae
add
lock
mov
push
mov
xchg
ret
lds
mov
mov
cld
nop
jmp
scas
add
repz
mov
add
fwait
cld
nop
jmp
dec
ss
add
and
push
push
mov
xchg
ret
dec
add
int
xchg
inc
inc
mov
jae
push
add
rolb
jns
movsl
clc
repnz
jae
add
dec
jns
in
fimull
nop
jae
add
add
add
add
cmpsb
in
inc
add
add
add
outsb
mov
repnz
jae
add
mov
clc
repnz
jae
cmp
add
add
icebp
and
mov
push
push
clc
repnz
jae
pop
pop
add
aam
or
nop
jae
in
outsb
inc
cmc
add
add
cld
nop
jmp
add
add
xchg
jecxz
xor
clc
repnz
jae
jle
dec
fwait
cld
nop
jmp
mov
verw
add
repz
add
add
cmc
xchg
add
jo
mov
pop
clc
repnz
jae
add
add
add
push
mov
xchg
ret
mov
add
jnp
xchg
clc
repnz
jae
add
scas
repz
jno
push
mov
mov
cmp
add
add
jns
add
clc
repnz
jae
add
xchg
add
xchg
jae
mov
push
mov
xchg
ret
add
insb
fiaddl
iret
xor
push
mov
xchg
ret
jno
mov
push
mov
loopne
xchg
or
add
sbb
imul
mov
clc
repnz
jae
add
aaa
add
dec
adc
xor
push
mov
xchg
ret
add
orl
add
dec
mov
fwait
cld
nop
jmp
dec
xor
aaa
aas
add
inc
cmpsl
inc
jbe
push
push
mov
xchg
ret
jns
add
xchg
ss
repnz
jae
jno
xlat
add
add
cmp
add
pop
dec
faddl
add
jno
addl
sub
fwait
cld
nop
jmp
add
and
add
or
test
cld
nop
jmp
and
add
adc
mov
repnz
jae
mov
int
adcl
repnz
jae
push
push
lds
jno
add
bound
mov
xchg
dec
adc
dec
fldl
xchg
ret
add
enter
clc
repnz
jae
add
add
add
xor
mov
adc
rep
push
mov
xchg
ret
add
mov
push
xor
add
fidivrl
mov
aas
add
rcr
mov
add
repnz
jae
and
repz
repnz
jae
add
add
add
push
mov
fwait
cld
nop
jmp
add
aaa
add
outsb
lea
clc
repnz
jae
repz
fs
call
clc
repnz
jae
add
add
sar
subl
clc
repnz
jae
jno
mov
add
inc
jmp
add
add
and
add
in
add
popa
cmp
sti
push
mov
xchg
ret
add
adc
mov
add
clc
repnz
jae
inc
jns
add
cmc
inc
dec
add
fwait
cld
nop
jmp
scas
add
add
lea
cmpl
ljmp
cwtl
mov
push
mov
xchg
ret
in
dec
add
mov
nop
jae
add
adc
add
stos
ret
clc
repnz
jae
cmp
push
addr16
int
mov
mov
xchg
ret
mov
xchg
js
mov
and
in
add
add
repz
adc
add
pop
xor
clc
repnz
jae
in
add
jecxz
jns
mov
fwait
cld
nop
jmp
cmp
add
outsb
and
enter
repnz
jae
mov
xchg
pop
mov
sub
xor
add
fwait
cld
nop
jmp
add
add
mov
mov
clc
repnz
jae
cmp
in
dec
add
pop
clc
repnz
jae
mov
add
fiaddl
push
add
mov
mov
xchg
ret
inc
in
int
mov
mov
cmp
ret
and
xor
clc
repnz
jae
lea
dec
jno
add
test
cmp
ret
xor
ljmp
jns
clc
repnz
jae
add
in
repnz
popa
clc
repnz
jae
dec
scas
int
add
dec
leave
imul
clc
repnz
jae
add
scas
bnd
jns
subl
fwait
cld
nop
jmp
push
add
in
pop
pop
jb
clc
repnz
jae
add
jno
add
add
clc
repnz
jae
add
mov
sub
nop
jae
add
push
add
add
loopne
add
add
add
add
lock
lcall
repz
incl
pop
insb
rorb
jmp
dec
add
add
mov
push
mov
xchg
ret
add
sub
rcrl
repnz
mov
add
add
push
push
mov
xchg
ret
add
add
fcoml
add
cwtl
pusha
push
mov
xchg
ret
sarb
add
dec
add
add
clc
repnz
jae
add
add
add
addb
repnz
mov
push
cmp
add
repnz
jae
add
mov
mov
xchg
ret
mov
icebp
sub
leave
idiv
clc
repnz
jae
pop
add
mov
repnz
jae
pop
add
sub
add
mov
push
mov
xchg
ret
cmp
jno
mov
clc
repnz
jae
add
scas
inc
xchg
add
mov
clc
repnz
jae
add
pop
nop
clc
repnz
jae
ss
add
clc
repnz
jae
add
aas
jle
jno
aam
push
clc
repnz
jae
push
rolb
cmc
xchg
dec
add
decl
fwait
cld
nop
jmp
mov
add
movb
mov
push
mov
xchg
ret
add
and
xlat
pop
int3
inc
push
mov
xchg
ret
repz
xchg
add
add
nop
jae
add
add
add
arpl
push
mov
add
xchg
shrl
add
cs
add
test
stos
les
sbb
cmp
repnz
jae
add
cmc
sbbl
ja
lcall
add
add
add
mov
clc
repnz
jae
add
push
mov
sub
repnz
jae
jnp
insb
add
add
add
repnz
jae
add
inc
pop
push
inc
lcall
repnz
jae
mov
jmp
push
aam
add
xchg
add
add
jno
pop
sub
clc
repnz
jae
add
xchg
cmp
add
add
mov
inc
add
cmp
add
nop
jae
repnz
add
ss
scas
push
push
mov
xchg
ret
aaa
add
add
add
idivl
enter
jae
mov
add
int
add
clc
repnz
jae
add
add
or
clc
repnz
jae
add
push
push
mov
xchg
ret
add
push
add
xchg
xor
add
push
mov
xchg
ret
jnp
jnp
xchg
mov
imul
nop
jae
add
repnz
repnz
jae
mov
jns
add
shlb
stc
fwait
cld
nop
jmp
xchg
mov
push
add
rol
clc
repnz
jae
add
jnp
dec
add
push
mov
cmc
popa
movsl
add
sub
add
repnz
jp
sbb
cld
nop
jmp
add
add
pop
add
add
add
repnz
jae
add
add
add
jg
push
mov
clc
repnz
jae
mov
add
push
mov
xchg
ret
pop
insb
outsb
and
addr16
cmp
cld
nop
jmp
add
cmp
add
add
fwait
cld
nop
jmp
add
add
add
sbb
repnz
jae
add
and
and
pushl
in
clc
repnz
jae
and
shlb
movzwl
clc
repnz
jae
pop
add
add
inc
mov
fwait
cld
nop
jmp
push
dec
aam
add
movsl
add
mov
inc
or
repnz
jae
jg
add
push
cli
movzwl
fwait
cld
nop
jmp
add
addl
add
jmp
add
lds
add
jno
mov
add
push
jp
clc
repnz
jae
jno
add
dec
add
repnz
jae
scas
orl
mov
clc
repnz
jae
insb
dec
aam
add
pop
pop
and
clc
repnz
jae
add
repz
sub
ret
repz
clc
repnz
jae
add
add
nop
add
aad
push
mov
loop
aaa
add
add
nop
jae
add
and
aas
add
jnp
mov
push
mov
xchg
ret
mov
repz
leave
add
clc
repnz
jae
verr
mov
dec
cmp
repnz
jae
add
dec
dec
add
dec
mov
clc
repnz
jae
push
loop
add
add
mov
push
mov
xchg
ret
mov
push
fcoml
lea
fwait
cld
nop
jmp
scas
add
add
add
jae
pop
clc
repnz
jae
add
in
rolb
add
cld
nop
jmp
add
in
add
push
das
push
fwait
cld
nop
jmp
jns
dec
add
jns
movb
mov
mov
xchg
ret
add
jecxz
cmp
cmc
inc
add
jns
jnp
jnp
inc
je
push
push
clc
mov
clc
repnz
jae
add
aam
add
lea
fwait
cld
nop
jmp
add
add
repnz
negb
mov
push
mov
xchg
ret
add
xor
add
fisttps
stos
testb
cmp
ret
scas
in
repnz
pop
clc
repnz
jae
add
add
add
jno
lret
and
cld
nop
jmp
insb
in
outsb
pop
pusha
add
fwait
cld
nop
jmp
add
insb
push
mov
aaa
arpl
or
in
sarl
add
add
sub
add
stos
mov
fwait
cld
nop
jmp
jnp
add
add
add
add
clc
repnz
jae
dec
add
add
inc
adc
cmp
repnz
jae
rolb
repz
mov
mov
loopne
clc
repnz
jae
add
xchg
adc
scas
mov
fwait
cld
nop
jmp
add
pop
aas
mov
add
repnz
jae
add
fcoml
dec
pop
add
clc
repnz
jae
jns
add
lea
loop
add
clc
repnz
jae
mov
add
rolb
mov
add
mov
add
popf
add
pop
adc
bound
cwtl
add
mov
clc
repnz
jae
push
add
inc
insb
inc
pop
add
clc
repnz
jae
add
jp
fwait
cld
nop
jmp
outsb
add
jno
add
dec
push
mov
xchg
ret
add
add
lea
add
ret
clc
repnz
jae
mov
in
add
nop
jmp
add
aas
rolb
sub
jns
inc
add
fiaddl
add
jg,pt
cmp
nop
jae
add
in
mov
mov
jne
clc
repnz
jae
jg
add
add
add
repnz
jae
shlb
add
dec
mov
xchg
clc
repnz
jae
jns
pop
add
xlat
add
add
repnz
jae
inc
repnz
cmc
add
int
pfcmpge
jae
add
add
jmp
add
add
add
mov
rolb
mov
push
add
in
incl
insb
incl
cmc
lahf
shr
clc
repnz
jae
jnp
add
aas
decl
nop
jae
add
add
push
sub
mov
adc
repnz
jae
add
xchg
add
test
push
mov
xchg
ret
and
in
add
jae
add
mov
xchg
ret
ss
jns
add
cld
nop
jmp
jnp
jg
int
add
in
add
clc
repnz
jae
add
jle
dec
pop
push
mov
xchg
ret
mov
faddl
pushf
mov
push
mov
xchg
ret
add
add
gs
popl
fwait
cld
nop
jmp
add
add
add
pop
call
fwait
cld
nop
jmp
add
leave
mov
clc
repnz
jae
add
ss
push
clc
repnz
jae
loop
rolb
sub
scas
push
mov
loop
xchg
add
add
outsb
gs
pop
clc
repnz
jae
insb
add
add
jno
pusha
add
clc
repnz
jae
add
inc
aas
add
in
push
clc
repnz
jae
call
add
popa
addb
hlt
ss
pushl
push
mov
xchg
ret
repnz
add
adc
jmp
addl
add
inc
add
adcl
repnz
clc
repnz
jae
and
jecxz
add
shrl
cmp
mov
xchg
ret
add
scas
fcmovb
in
add
clc
repnz
jae
add
cmp
repnz
jae
add
push
add
add
aaa
fadds
xchg
ret
aam
add
xlat
fmull
or
nop
jae
jno
movhps
add
add
sbb
repnz
jae
mov
add
mov
out
add
push
mov
xchg
ret
add
in
add
push
mov
xchg
ret
fcmovbe
cmp
add
rolb
inc
add
nop
jae
add
aam
push
push
insb
pop
push
push
mov
xchg
ret
outsb
add
push
add
decl
adcl
add
push
mov
dec
cmp
repnz
jae
add
xlat
push
inc
push
bound
mov
add
cld
nop
jmp
add
repnz
rorb
push
mov
xchg
ret
addr16
inc
jns
add
add
clc
repnz
jae
lea
addl
sub
mov
clc
repnz
jae
cmpl
je
inc
push
mov
xchg
ret
repnz
add
add
mov
clc
repnz
jae
add
push
add
jns
ljmp
xchg
pushl
add
jecxz
xchg
adc
cld
nop
jmp
in
add
add
pop
aam
out
add
clc
repnz
jae
add
in
popa
clc
repnz
jae
push
push
add
push
and
jecxz
dec
jmp
add
repnz
repnz
or
in
pop
sub
xchg
mov
add
test
clc
repnz
jae
and
mov
repnz
jae
jnp
add
xchg
push
test
in
lcall
clc
jmp
mov
jg
add
clc
repnz
jae
and
push
add
pop
call
clc
repnz
jae
jnp
jecxz
cmp
fadds
add
in
incl
fidivl
clc
repnz
jae
mov
addr16
repnz
fdivr
clc
repnz
jae
in
add
clc
push
clc
repnz
jae
repz
add
ror
push
mov
xchg
ret
add
push
jg
add
repnz
jae
pop
pop
add
add
lcall
incl
jnp
add
cmp
repnz
jae
ds
dec
fcmovbe
add
dec
aas
add
push
mov
xchg
ret
sub
add
pop
push
inc
clc
repnz
jae
add
sarb
fwait
cld
nop
jmp
and
add
add
xchg
cmc
cmovbe
mov
clc
repnz
jae
xlat
add
add
add
nop
jae
add
faddl
add
add
mov
xchg
hlt
jg
clc
repnz
jae
add
jle
add
add
nop
jmp
push
add
aaa
xchg
int
and
in
adc
add
out
or
into
add
in
mov
clc
repnz
jae
add
xlat
insb
pop
add
push
clc
repnz
jae
add
push
sub
push
aas
imul
add
insb
dec
add
inc
repz
add
dec
pop
jne
clc
repnz
jae
add
push
test
movsb
clc
repnz
jae
loop
add
add
repnz
jae
add
add
fimull
sarl
iret
icebp
inc
add
jno
add
aas
mov
repnz
jae
add
push
add
xchg
mov
nop
jae
inc
add
mov
cmpl
fwait
cld
nop
jmp
jns
add
push
push
mov
xchg
ret
add
add
add
nop
jae
mov
add
insb
in
addb
mov
cld
mov
push
mov
xchg
ret
lds
add
adc
mov
pop
pop
fwait
cld
nop
jmp
add
add
jle
add
nop
jmp
push
add
dec
rorb
add
add
fwait
cld
nop
jmp
push
jle
dec
add
dec
add
add
jmp
nop
jae
jno
inc
add
push
mov
xchg
ret
repnz
jle
insb
mov
jl
icebp
fwait
cld
nop
jmp
int
add
add
int
add
clc
repnz
jae
add
faddl
add
mov
pusha
push
mov
xchg
ret
cmpl
add
add
inc
add
inc
add
pop
lds
add
add
mov
in
push
push
mov
xchg
ret
shlb
hlt
data16
jecxz
shr
clc
repnz
jae
in
add
add
mov
clc
repnz
jae
add
jno
out
call
fwait
cld
nop
jmp
insb
push
inc
add
push
jmp
popa
fwait
cld
nop
jmp
in
jno
cmc
jg
push
push
decl
test
repnz
jae
pop
add
fsts
in
fprem
add
fdivs
add
jmp
add
mov
push
mov
xchg
ret
jg
xor
repnz
adc
mov
clc
repnz
jae
pop
add
add
add
push
mov
xchg
ret
fcmovbe
add
add
and
jmp
incl
add
aam
add
jecxz
mov
mov
xor
push
mov
xchg
ret
add
cmc
jnp
aad
add
repnz
jae
xor
jecxz
add
cmp
push
mov
cmp
stc
add
mov
add
add
add
nop
jae
add
add
add
aaa
add
fwait
cld
nop
jmp
add
jg
add
dec
add
mov
jmp
add
add
and
mov
inc
shrl
popa
clc
repnz
jae
add
add
pop
loop
add
xor
push
mov
xchg
ret
add
mov
push
mov
xchg
ret
add
add
jge
add
or
cmp
ret
xchg
add
push
dec
add
cmpl
fwait
cld
nop
jmp
add
mov
cmp
xlat
incl
add
shrb
jne
clc
repnz
jae
in
add
add
out
clc
repnz
jae
add
enter
jae
add
add
add
add
inc
in
add
add
jns
add
mov
mov
xchg
ret
add
add
or
mov
xchg
ret
ss
lea
mov
repnz
jae
add
and
shl
addb
xchg
ss
hlt
stos
jmp
add
add
aas
add
jnp
xchg
add
stc
or
clc
repnz
jae
scas
lds
add
repz
jne
clc
repnz
jae
add
and
xor
push
mov
xchg
ret
scas
add
add
jno
and
clc
repnz
jae
add
add
push
clc
repnz
jae
outsb
cmp
add
aam
jnp
add
shrl
repnz
jae
add
add
xchg
mov
repnz
jae
inc
add
xchg
faddl
lods
push
clc
repnz
jae
cmp
add
movb
mov
xchg
add
repz
mov
clc
repnz
jae
add
jg
mov
add
sbb
repnz
jae
jno
sub
insb
shlb
add
out
or
add
jbe
add
dec
add
jb
xor
daa
insb
jne
insl
push
adc
arpl
add
mov
add
push
xor
mov
call
pop
icebp
or
inc
sub
lods
lret
loope
add
xchg
add
mov
add
sub
xor
jae
daa
sahf
in
mov
gs
inc
test
add
add
addr16
stos
push
stos
insb
aad
push
push
cltd
pop
cli
and
mov
pusha
add
add
add
movsb
mov
out
push
aad
in
xchg
aad
enter
xchg
in
lahf
cmpsb
icebp
sub
mov
js
jle
push
add
pop
sbb
sub
cld
mov
mov
jp
movsl
in
push
xor
fstpl
xchg
add
mov
sub
into
ds
dec
sub
pop
lcall
cwtl
inc
outsl
dec
sbb
mov
adc
add
mov
add
adc
mov
sti
mov
xchg
mov
add
js
movsl
test
mov
insb
test
mov
add
mov
add
lds
jg
aas
loopne
mov
cmpsl
add
mov
mov
lock
mov
test
pop
mov
jge
das
xchg
pop
jne
int3
stos
ret
pop
ds
imul
pop
dec
mov
hlt
mov
or
cli
mov
test
mov
rolb
sub
ficoms
or
sahf
fistpll
pop
xchg
jmp
pop
dec
repnz
add
push
jge
mov
bound
mov
and
mov
add
and
mov
mov
add
inc
inc
leave
mov
shll
dec
adc
xlat
pusha
add
lods
data16
mov
mov
jns
pop
mov
jae
and
lds
or
repnz
pop
call
xor
add
std
pop
loope
dec
or
mov
mov
dec
xor
add
push
fcoml
mov
sbb
pop
enter
mov
outsb
lock
out
movsb
daa
ret
mov
mov
xchg
add
in
insb
les
add
cmpsb
rolb
mov
fimull
sub
add
loop
mov
add
add
out
test
add
pop
pop
lock
pop
cmp
fcmovnb
mov
mov
lods
push
add
add
mov
adc
or
lods
inc
add
pop
es
add
pop
add
add
cmp
in
daa
cmp
push
push
xchg
add
mov
add
lret
mov
dec
insl
add
dec
les
gs
xor
xor
out
xlat
popa
jns
or
add
cmpsl
mov
cmp
std
sti
ljmp
xor
pop
inc
cltd
push
jg
sub
add
cmp
mov
mov
arpl
mov
mov
xor
fcompl
add
xor
mov
mov
jg
cmp
add
jo
mov
and
push
add
sbb
loope
imul
adc
ficomps
dec
pop
outsl
mov
mov
test
dec
fsubrl
ljmp
insb
push
jle
test
mov
adc
mov
add
test
add
mov
ljmp
test
add
and
movsl
lret
dec
fldcw
cli
mov
jge
dec
inc
add
std
adc
and
repz
mov
mov
fadd
jno
xor
mov
and
xchg
add
sti
mov
add
sbb
add
push
gs
mov
xchg
add
mov
or
jb
mov
add
pop
or
xchg
add
mov
adc
mov
mov
hlt
pop
push
call
repnz
sbb
cmp
test
add
mov
xlat
out
stos
mov
mov
nop
add
enter
xchg
mov
fimull
cmp
xlat
mov
shrl
scas
mov
sub
jmp
aaa
test
inc
and
mov
add
pop
fcmovb
inc
and
push
mov
mov
dec
test
call
push
bound
mov
pop
cltd
dec
xor
ja
mov
add
add
in
mov
xchg
mov
test
mov
add
iret
push
ret
jae
bound
mov
lock
mov
js
shrl
add
add
rolb
mov
jg
inc
test
imul
scas
cmp
sbb
in
inc
add
dec
mov
add
mov
sbb
notl
add
xchg
mov
pop
ljmp
lods
and
mov
add
add
mov
cmp
jecxz
inc
fdivrs
mov
mov
add
mov
add
mov
ja
gs
jns
js
cwtl
xor
popa
insb
in
and
popa
movsb
sarl
imul
add
or
mov
int
sbb
popa
mov
mov
push
out
xchg
xor
mov
pop
and
mov
dec
mov
xor
mov
jo
mov
mov
int
add
inc
push
add
xchg
pop
xchg
dec
jns
inc
lock
mov
out
jo
mov
mov
mov
loopne
mov
lds
notb
ret
dec
mov
cmpsb
mov
arpl
stc
std
gs
jmp
add
cmp
mov
xchg
add
ja
je
xchg
iret
fiaddl
inc
dec
fwait
pop
cmp
loope
add
dec
jae
jne
stc
mov
mov
mov
data16
int3
jecxz
fnsave
add
cmp
popa
adc
mov
insb
lret
pop
mov
add
ret
mov
mov
cmp
add
jl
xchg
jl
xchg
out
inc
add
idiv
stos
mov
mov
and
cs
cli
jl
adc
or
pusha
add
add
sub
add
mov
push
aam
and
mov
sbbl
mov
fs
add
push
arpl
lds
add
mov
flds
mov
adc
out
negb
add
fisttpl
int3
dec
in
xor
inc
mov
cmp
mulb
adc
xor
push
ds
xor
nop
add
mov
mov
enter
add
cmp
add
scas
mov
fwait
xchg
fimuls
or
mov
push
adc
push
xchg
nop
add
iret
xchg
xor
jmp
push
sbb
mov
sub
pop
lahf
push
xor
jecxz
push
cmpsl
aas
xchg
jp
bound
mov
add
jg
gs
add
add
push
add
frstor
iret
xor
mov
add
out
movsl
test
pop
xchg
std
fwait
addb
cld
mov
xchg
negb
cmp
mov
and
ds
sub
mov
cmp
add
mov
mov
pop
jge
sbb
add
ret
adc
cmpsb
adc
inc
addb
push
add
sbb
add
push
push
int
add
mov
or
add
ja
jae
mov
mov
addb
mov
stos
enter
cltd
xchg
icebp
lock
mov
adc
sub
mov
outsb
cmc
fisubs
test
enter
mov
adc
mov
dec
push
jae
fbld
addr16
test
pop
ss
mov
cmc
call
daa
inc
into
pop
jo
mov
jo
mov
lds
mov
add
pop
pop
adc
mov
jp
add
fwait
into
aad
addb
xchg
xor
rolb
mov
popf
loope
or
mov
xor
jo
mov
dec
push
cmp
pop
mov
mov
jno
inc
mov
leave
test
add
data16
cs
jge
or
mov
pop
ss
jge
adc
add
divb
add
lods
rcrl
outsb
sub
add
mov
mov
mov
add
mov
in
xchg
mov
sub
add
shrl
xor
or
xchg
ja
dec
pop
out
jnp
in
ljmp
aaa
cld
int3
js
xlat
and
sahf
mov
pop
jle
insb
imull
pop
push
pop
rolb
mov
rorl
jns
insb
cmp
add
jnp
sahf
loop
mov
movl
or
mov
data16
mov
mov
cmp
clc
push
lock
dec
mov
add
lcall
pop
gs
and
dec
out
addr16
mov
sub
adc
fst
xor
xor
mov
jnp
push
outsl
aas
fldl
sub
cwtl
bound
mov
int
js
call
xchg
nop
add
out
mov
jge
add
jecxz
add
dec
sti
adc
aas
lods
push
jnp
mov
cltd
xchg
pop
mov
mov
xchg
push
xchg
addb
push
icebp
sbb
loope
add
mov
ret
es
mov
lea
add
add
mov
ds
sub
add
dec
fisubrl
stc
jge
pusha
add
sub
pop
adc
add
jnp
lods
gs
sbb
out
aaa
stos
pop
ret
rolb
mov
lret
frstor
lock
push
inc
mov
adc
jg
add
mov
cmp
add
add
mov
mov
pop
inc
ljmp
inc
add
dec
pop
jnp
sbbl
in
lahf
das
insl
cmc
and
cmp
or
mov
add
add
jg
clc
cmp
mov
mov
out
std
pop
push
add
mov
xchg
pop
adc
mov
pop
stos
sbb
or
jp
add
xchg
adc
mov
mov
into
adc
push
jl
jg
js
mov
mov
sub
xor
mov
push
jmp
push
jns
scas
mov
pushf
scas
repnz
fs
and
mov
lret
js
add
add
add
ret
xchg
imul
mov
mov
aas
cli
bound
mov
addb
xor
mov
aaa
dec
and
mov
adc
insl
cmp
or
jmp
xchg
mov
xlat
lret
or
imul
loope
xchg
mov
mov
add
loope,pt
insb
or
mov
sub
jne
gs
adc
mov
mov
and
clc
pop
in
dec
repz
pushl
iret
movsb
xchg
sbb
adc
clc
orl
add
add
and
mov
mov
lds
xchg
dec
mov
add
insb
cs
mov
js
scas
add
aam
pop
jae
cs
sbb
cmp
imul
addb
dec
scas
mov
mov
cmpsb
ljmp
push
mov
sbb
or
mov
shll
mov
fisttpll
mov
in
xchg
rolb
mov
outsb
xchg
out
pop
jl
hlt
push
into
loope
fs
fadd
add
dec
cs
outsl
push
add
pop
dec
inc
mov
jmp
rolb
mov
js
or
push
xchg
jp
jns
cmpsl
adc
mov
mov
xor
mov
xbegin
test
bound
mov
in
mov
add
into
mov
call
ljmp
mov
add
cltd
pop
lock
jne
push
add
clc
pop
mov
lock
jmp
or
mov
aam
mov
mov
mov
add
lods
cld
cmp
fnsave
sub
add
mov
dec
dec
rolb
mov
loope
rorl
addb
cli
xor
dec
cmp
div
popf
clc
mov
out
aam
int3
add
xchg
addb
fists
push
stos
and
pop
out
jg
stc
addb
mov
pop
dec
pop
cmp
xlat
out
jae
bound
mov
adc
mov
xchg
fstpt
mov
xor
mov
clc
xor
and
mov
sbb
sbb
stos
mov
push
pop
rolb
mov
aam
sub
or
or
arpl
sub
ret
cmp
ficomps
inc
add
dec
loopne
mov
add
das
addb
push
jb
mov
xor
ja
add
ds
scas
lahf
jp
aaa
pop
push
xor
pop
lods
jb
mov
ja
add
and
mov
add
ljmp
or
ret
mulb
inc
add
adc
add
fs
push
push
add
ret
xchg
add
stc
sub
sahf
jne
out
jl
cwtl
inc
add
leave
inc
add
add
and
add
xchg
in
mov
add
mov
dec
fcoms
pop
mov
fcomip
add
add
mov
popa
mull
mov
pop
je
xchg
add
xchg
loope
mov
xchg
loopne
mov
call
xchg
adc
add
push
lret
popa
cld
or
sysenter
pushf
fcomp
insb
mov
pusha
add
popf
outsb
aas
and
data16
push
inc
sbb
cmp
pop
lcall
push
push
cmp
cmp
fcmovnb
dec
mov
inc
insl
mov
mov
in
pop
dec
test
push
jae
dec
sub
stos
ds
lret
jg
loop
mov
out
mov
movsb
jmp
xor
push
aas
cs
add
popa
int3
sub
nop
add
and
cli
mov
xchg
xchg
cmp
das
xchg
cwtl
mov
push
add
rcll
divb
push
arpl
and
adc
mov
add
mov
mov
jl,pt
cwtl
leave
icebp
pop
mov
arpl
sbb
and
add
add
dec
fmuls
add
lcall
cmpl
add
jns
aad
insl
xor
jno
cltd
xchg
add
mov
outsl
xchg
add
add
mov
mov
cmpsl
mulb
add
or
inc
ret
icebp
add
mov
xor
add
add
and
adc
mov
xchg
out
add
mov
int3
inc
jne
add
mov
pop
data16
add
jno
xor
mov
add
in
sbb
std
mov
das
shr
enter
cwtl
pop
rorl
cmp
add
scas
mov
mov
jg
adc
mov
xlat
sub
xchg
mov
pop
call
movsb
ljmp
cmp
xchg
add
add
les
add
add
lock
or
add
ret
pushf
dec
mov
in
lods
loop
mov
add
push
ljmp
aaa
fisubs
add
int3
and
mov
leave
call
pushf
fdivs
pop
mov
mov
mov
movsl
leave
dec
ret
mov
mov
lahf
into
mov
and
fwait
enter
outsl
pop
xor
mov
sti
sub
insl
jmp
add
cmp
clc
xor
popf
arpl
mov
add
jle
rolb
mov
add
add
mov
dec
enter
das
sub
and
in
add
in
mov
dec
mov
cmpsb
scas
in
mov
outsb
in
andl
mov
xchg
cmp
push
test
add
adc
shll
mov
cmp
imul
mov
adc
dec
jns
mov
adc
sbb
jle
test
out
call
mov
xor
add
add
sub
mov
pusha
add
shll
lret
sbb
out
imul
mov
sbb
mov
fcmovnu
jmp
push
add
aas
and
push
add
add
xor
add
out
hlt
and
cmpsl
push
jbe
dec
jns
pop
popl
enter
sti
jb
mov
pop
or
adc
mov
xchg
mov
inc
xchg
test
add
cs
or
leave
outsb
arpl
syscall
mov
mov
mov
imul
ficomps
mov
jbe
cmp
add
add
mov
and
mov
leave
jmp
mov
jge
pushf
cltd
mov
lret
cmp
push
dec
push
hlt
movl
inc
or
xchg
jmp
dec
xor
mov
mov
bsr
push
add
pop
fprem
shrl
jmp
ret
inc
cmp
lahf
push
pop
inc
and
mov
shrl
xchg
cwtl
mov
test
pop
xchg
mov
cwtl
mov
add
cmp
add
mov
jb
mov
sub
xchg
lods
push
jmp
sub
jp
into
popa
adc
pop
es
cmp
push
lock
cmp
arpl
mov
dec
in
lea
rolb
mov
adc
xchg
mov
mov
movsb
inc
pop
xor
sar
mov
fcmovb
xor
jecxz
lret
aam
push
pusha
add
or
add
add
in
fistl
mov
add
adc
aam
add
adc
mov
add
decb
insb
mov
add
sub
lahf
sbb
or
rolb
mov
dec
pop
call
jg
or
add
lret
dec
jl
lcall
dec
jbe,pn
xor
ss
xor
sahf
pusha
add
nop
add
xchg
push
movsl
sbbl
aad
loop
mov
mov
jp
mov
xor
mov
ljmp
scas
sub
jmp
jmp
mov
iret
fidivrl
sub
add
out
jae
testl
mov
push
add
andl
jns
aad
xchg
pop
cmp
add
and
xor
xor
dec
push
and
mov
jle
push
sub
insb
neg
xchg
adc
dec
adc
add
jnp
movsb
into
fisubs
mov
lock
add
test
cmp
cld
test
push
popf
repz
xor
inc
cltd
add
jae
add
jg
lahf
or
mull
mov
std
int
addb
imul
mov
add
add
lods
xchg
negb
cwtl
int
add
stos
add
mov
sub
add
or
dec
pushf
add
and
outsb
add
mov
sub
sti
adc
leave
mov
mov
add
dec
xorl
inc
inc
inc
out
clc
mov
sub
fildl
inc
adc
mov
and
add
jmp
jo
mov
add
xchg
add
orl
mov
mul
add
dec
and
add
popf
insb
hlt
mov
jmp
shll
add
daa
out
lahf
xchg
loope
adc
stc
leave
mulb
stos
pop
test
lret
shll
mov
das
lods
sbb
rolb
mov
pop
xchg
sbb
pusha
add
sbb
xchg
add
add
mov
fstps
push
mov
lret
stos
stc
mov
mov
js
popa
mov
adc
mov
adc
mov
mov
sub
cmpsl
jmp
cmp
add
adc
mov
fs
pop
jo
mov
xor
addr16
xor
mov
pop
and
add
adc
cld
mov
mov
push
add
mov
test
jne
outsl
cwtl
repz
mov
add
sbb
and
arpl
out
dec
cmp
in
add
sub
add
iret
xchg
jl
fdivrl
std
enter
dec
imul
pop
insl
int
lock
test
addb
test
leave
xchg
test
cmc
push
in
and
pop
popf
jmp
sbb
mov
add
add
mov
pop
and
mov
mov
jo
mov
loope
sub
mov
popf
pop
sbb
xor
mov
insb
xchg
ja
sub
xchg
scas
ja
sub
sbb
sub
mov
inc
add
add
push
sub
add
outsb
movsb
jp
ret
add
dec
scas
in
stos
sub
push
xchg
add
xor
mov
rolb
mov
lahf
dec
cld
adc
add
loopne
mov
mov
or
rolb
mov
fcomp
ret
mov
add
daa
arpl
cli
dec
fwait
jb
mov
mov
into
xor
adc
mov
test
add
addb
lahf
sbb
add
xor
add
stos
push
pop
jl
xchg
cwtl
cmp
mov
nop
add
mov
add
out
sarl
cltd
xchg
sti
mov
mov
jecxz
hlt
or
add
fimuls
dec
inc
fildll
add
mov
cmpsl
mov
and
test
mov
push
add
add
outsl
jne
cmp
xor
mov
add
rcrl
add
mov
add
xchg
mov
aam
mov
mov
mov
outsl
scas
mov
insl
mov
jl
ds
mov
add
test
mov
sub
push
pavgw
jecxz,pt
ja
ret
stc
adc
cmp
or
add
mov
push
cmp
cld
bswap
loope
fisubs
mov
mov
aam
aaa
es
mov
add
mov
and
mov
mov
mov
lcall
xchg
mov
cmp
mov
push
cmpsl
pop
hlt
movsb
inc
dec
rolb
mov
push
jae
popa
rolb
add
ljmp
add
loope
mov
in
arpl
iret
push
mov
aam
je
aas
sti
fwait
nop
add
fdivl
push
inc
add
lods
nop
add
xor
fisubl
mov
mov
push
popf
imul
mov
movsb
lds
add
jg
mov
ljmp
mov
pop
mov
add
icebp
pop
jmp
sti
aas
scas
mov
dec
es
shll
add
add
mov
push
add
mov
inc
xor
mov
inc
add
mov
add
jle
add
imul
and
in
add
add
or
sbb
adc
mov
popf
adc
stos
add
addb
adc
mov
aaa
xchg
inc
xor
mov
jle
jne
ds
xor
or
add
add
add
pop
les
cmp
outsb
xor
jmp
fnstcw
xchg
iret
imul
sbb
outsl
jno
aas
pop
imul
mov
sub
decl
sub
xor
push
shl
push
add
mov
add
xchg
cmp
jo
mov
and
mov
and
shll
fcmove
push
cli
sub
add
stc
mov
mov
mov
pop
mov
mov
adc
fldcw
jp
and
mov
or
mov
mov
xchg
aam
mov
jne
sbb
mov
enter
mov
mov
mulb
mov
push
add
jbe
add
int3
push
sbb
movsb
mov
popa
cli
enter
sub
stos
sbb
adc
mov
push
inc
dec
loopne
mov
sbb
sbb
sbb
adc
mov
loope
add
mov
mov
add
nop
add
sar
scas
rorl
insl
lea
pop
dec
fldcw
js
lods
jl
mov
add
testl
xor
and
jo
mov
push
add
add
mov
jb
mov
out
insl
test
test
aad
cmp
sub
mov
mov
adc
push
mov
leave
pop
aaa
std
cli
inc
stos
pop
add
daa
popf
iret
mov
cmp
clc
xor
mov
outsl
or
mov
mov
out
pop
sub
lock
push
mov
mov
arpl
xchg
ds
inc
mov
xchg
add
adc
add
sub
xchg
popf
jne
cmp
push
loop
mov
xor
adc
mov
adc
mov
add
int
lahf
dec
or
add
add
mov
int3
dec
aad
into
jbe
dec
dec
in
cmp
test
out
sub
ljmp
dec
fidivl
add
jb
mov
jns
jp
jge
jl
mov
mov
or
lcall
xor
mov
pop
imull
cltd
jmp
jge
and
mov
aaa
icebp
push
test
rolb
mov
mov
mov
xor
scas
xor
call
test
xchg
sbb
fwait
popf
mov
add
cld
aaa
jbe
mov
add
or
push
adc
mov
mov
mov
mov
add
inc
lds
mov
aam
mov
mov
popa
pop
insl
sti
test
jae
leave
popa
dec
jno
add
js
test
cltd
dec
bound
mov
xor
ret
dec
and
mov
daa
in
add
add
test
clc
sbb
or
adc
and
mov
mov
and
mov
mov
mov
fbstp
mov
xor
inc
addl
shll
adc
leave
push
test
add
ffreep
add
aaa
pop
mov
xchg
orl
and
mov
adc
lods
into
lret
pop
cmp
jp
aaa
inc
ss
test
mov
in
sbb
or
cwtl
sarl
mov
pop
mov
mov
mov
aaa
mov
sbb
jno
or
sub
stos
les
pop
mov
add
jge
pushf
ja
xchg
jns
sbb
rolb
mov
jnp
ljmp
loope
add
and
push
bound
mov
jb
mov
pop
scas
test
add
clc
test
pop
inc
sbb
cmpsb
iret
int
xor
sbb
jno
add
mov
ret
push
sub
mov
add
xor
xchg
pop
xchg
insb
arpl
mov
mov
mov
outsl
push
add
lods
sbb
test
sbb
jae
stc
lret
bound
mov
in
out
ljmp
mov
cs
dec
lods
shl
add
dec
leave
mov
fs
sub
nop
add
fldl
scas
rolb
mov
test
addb
push
mov
add
sub
add
mov
in
fimull
and
dec
add
jl
fidivl
mov
xchg
add
andl
jecxz
jge
test
mov
xor
aad
sti
xor
mov
das
jb
mov
ja
jmp
pop
cmp
popa
ret
ret
outsb
cs
and
mov
add
mov
cltd
lahf
pusha
add
push
imul
add
xchg
xlat
sti
jecxz
hlt
lret
jg
inc
mov
cli
imul
dec
xchg
jne
int3
jbe
cmpsl
sub
mov
inc
movsl
jp
add
in
adc
mov
sub
push
inc
pop
mov
xlat
test
add
mov
lahf
ror
cli
xchg
cld
cmp
daa
loope
pop
fldenv
test
add
mov
jne
test
std
jno
lret
push
add
add
int
add
imul
pop
inc
addb
cmp
sahf
xchg
aam
aad
fimuls
or
mov
movsb
rol
jl
fistpll
in
fldl
mov
add
lret
in
ja
sbb
in
sbb
or
rolb
mov
mov
add
roll
add
mov
mov
jne
push
add
das
jnp
in
lods
mov
jno
popa
mov
mov
in
in
movsb
dec
hlt
ljmp
mov
pusha
add
push
pusha
add
mov
rcll
and
mov
ja
adc
movsb
jg
add
in
repnz
push
or
sbb
mulb
add
add
test
add
cmp
jnp
pop
mov
add
add
mov
icebp
sub
mov
aaa
out
inc
or
push
adc
add
cmp
mov
mov
stos
mov
xchg
jnp
mov
rolb
aaa
add
mov
fucomi
sub
jl
or
push
jo
mov
arpl
test
inc
outsb
adc
and
mov
push
int
inc
push
mov
aam
or
and
dec
mov
mov
pop
test
rolb
mov
xor
mov
mov
imul
xor
addr16
jbe
lods
push
test
xor
mov
add
mov
popf
pop
dec
sub
pusha
add
xchg
inc
adc
push
xchg
addb
jmp
add
loope
push
mov
outsb
push
xchg
add
mov
adc
nop
add
repz
fstps
add
mov
cmpsb
ror
adc
mov
add
add
mov
pop
xchg
sub
in
add
mov
adc
movsb
or
adc
mov
test
mov
pusha
add
add
mov
add
rep
cmpsl
xor
lret
jmp
imul
add
out
pusha
add
and
insl
xor
add
insl
je
or
clc
incb
add
mov
push
pusha
add
arpl
mov
add
mov
lock
mov
std
push
pop
mov
mov
aaa
xchg
ds
arpl
rolb
negl
in
adc
mov
in
subl
mov
jno
sbb
mov
dec
lahf
ret
roll
loope
lahf
or
sbb
mov
dec
and
mov
movsb
cmpsb
scas
cmp
pop
lods
cwtl
push
add
out
cltd
xlat
lods
mulb
xchg
mov
aam
cltd
loope
add
jmp
xchg
mov
mov
inc
add
mov
insl
lds
call
outsl
push
popa
push
sub
jle
daa
pop
leave
adc
inc
and
add
cltd
pop
mov
add
mov
add
xor
jmp
add
mov
mov
push
inc
lock
loopne
mov
add
xor
mov
dec
sub
fsubr
fldl2t
outsb
inc
int
add
xchg
icebp
roll
jge
stc
push
pop
jmp
lea
mov
and
pop
add
xchg
mov
shrl
loop
mov
mov
pop
adc
mov
add
mov
mov
ss
inc
xor
mov
add
xchg
testl
pop
sub
mov
add
mov
imul
sub
add
mov
mov
mov
add
xor
sub
push
scas
cmpsb
pop
push
add
add
jecxz
xchg
xchg
insl
cmp
fmulp
sbb
sub
ret
mov
add
hlt
nopl
cmp
push
jne,pt
je
lock
push
xor
dec
jecxz
rolb
mov
fsubrl
je
mov
add
add
sub
add
mov
pop
aad
xchg
daa
mov
lcall
mov
addl
lretw
inc
lcall
mov
fiadds
pop
push
movb
mov
mov
add
in
mov
cltd
xchg
scas
sbb
jge
or
xchg
push
add
jns
out
mov
cmpsb
add
mov
adc
mov
lock
fsubs
jns
pop
adc
outsl
aam
pop
mov
pusha
add
arpl
add
cmc
push
pop
mov
add
leave
or
leave
dec
or
dec
fidivl
or
stos
adc
mov
add
xchg
xchg
push
add
mov
ljmp
aaa
test
add
imul
rolb
fwait
sub
nop
add
jecxz
and
mov
cmpsb
out
ss
mov
add
mov
inc
add
mov
mov
out
dec
push
inc
data16
mov
rolb
mov
inc
mov
stos
ja
and
cmp
clc
rolb
mov
mov
add
mov
sbb
mov
and
loope
iret
xchg
add
xchg
clc
in
sbb
and
cmp
mov
jecxz
dec
sbb
add
add
adc
mov
adc
rolb
mov
adc
add
ljmp
fistps
je
ljmp
or
xor
mov
add
sub
out
sub
cs
xchg
jb
mov
pop
add
add
mov
ret
dec
pop
xchg
in
pop
test
test
lock
jae
xchg
push
adc
mov
mov
xchg
rolb
mov
add
addb
rolb
mov
test
mov
addb
cmovp
mov
mov
inc
stc
shr
and
xchg
push
mov
jbe
inc
add
ret
xor
mov
iret
pop
mov
add
movsl
aas
mov
mov
sbb
add
add
mov
mov
test
hlt
cli
daa
mov
sbb
int
rolb
jns
lret
test
out
dec
sub
scas
cmc
scas
call
dec
repz
rcr
dec
movsl
test
inc
addb
inc
add
and
mov
push
out
loopne
mov
xchg
adc
xchg
cmp
sub
mov
add
mov
ret
sub
mov
sbb
sbb
cmc
pop
lods
test
add
pop
push
xor
mov
mov
add
or
jb
mov
jno
add
xor
push
sti
aad
hlt
mov
mov
call
push
or
push
inc
aad
mov
sbb
bound
mov
mov
rolb
mov
xchg
jbe
loop
mov
popl
mov
movsl
pop
xchg
add
mov
aas
out
testb
aam
mov
mov
sub
xor
mov
add
mov
and
lea
fwait
mov
repnz
add
out
out
adc
loopne
mov
add
stos
imul
sub
pop
outsl
ja
pcmpgtw
fcompl
dec
pop
adc
sbb
xchg
js
insb
test
cli
adc
mov
sbb
fadd
mov
push
add
mov
addb
adc
sahf
and
add
dec
pop
addb
cmp
dec
sbb
cmp
mov
xchg
rolb
add
mov
repnz
iret
iret
fsubl
movsb
xor
add
add
imul
adcl
es
xchg
rolb
mov
sub
mov
add
addb
rolb
or
cmp
dec
mov
mov
lea
outsb
mov
mov
xchg
cli
dec
cmp
pusha
add
rolb
mov
add
mov
add
mov
add
mov
jnp
add
mov
lods
mov
mov
sbb
mov
inc
add
or
daa
or
jge
jbe
decb
ss
fsubs
mov
xor
mov
js
inc
sbb
add
loopne
mov
add
mov
push
ret
icebp
or
dec
ret
jns
cmp
inc
mov
std
cmp
mov
test
add
add
sub
popa
add
mov
test
pop
lahf
lock
addb
dec
or
add
inc
cmp
mov
add
sti
mov
or
adc
sbb
mov
jle
xchg
add
mov
inc
inc
jnp
push
sub
xchg
rolb
mov
adc
mov
out
out
add
gs
mov
push
xchg
jmp
add
scas
sub
xor
mov
jmp
clc
lods
push
daa
stos
lret
pop
rolb
mov
ret
xchg
add
addr16
stc
add
push
cmpsl
and
rolb
mov
add
ret
inc
xchg
scas
sbb
add
push
addl
lds
pop
push
lds
icebp
fimull
cli
sub
xor
mov
xchg
and
dec
sbb
ret
test
mov
int
jae
sbb
cld
mov
gs
mov
aas
push
sbb
add
add
out
fimuls
xor
jge
sbb
add
js
sbb
xor
add
js
mov
fucomi
fdivr
add
add
rolb
mov
test
fldcw
and
jl
leave
cmp
sbb
pop
daa
into
jl
add
xchg
mov
xor
add
rcll
lds
into
mov
add
lret
lods
lret
add
dec
gs
sub
push
xor
mov
or
lea
aam
or
insb
lea
and
mov
out
inc
add
inc
add
cli
mov
add
mov
pop
dec
adc
stos
popa
push
shrl
cmp
call
mov
ss
mov
add
mov
mov
lahf
xchg
xor
jmp
jecxz
lcall
scas
cli
add
mov
mov
inc
add
mov
js
inc
xchg
ja
pusha
add
mov
mov
xchg
add
add
mov
sub
mov
xor
dec
jns
xchg
shl
mov
jno
loope
rcll
pusha
add
mov
adc
mov
add
out
jmp
or
xor
jmp
loopne
mov
jbe
pop
cmp
adc
mov
add
push
pop
mov
dec
sahf
inc
div
pop
iret
jle
add
jbe
pusha
add
pushf
mov
jae
add
xchg
adc
mov
or
push
add
test
mov
pop
out
faddl
mov
pop
xor
xchg
xchg
stc
int3
lds
mov
mov
add
or
mov
insl
add
mov
mov
fistl
sub
mov
addr16
adc
add
add
push
loopne
mov
add
cmpsb
in
mov
es
repnz
adcl
jae
mov
mov
mov
add
xchg
add
rolb
mov
adc
mov
or
add
jno
inc
mov
mov
jbe
mov
mov
cmp
pop
fs
in
add
clc
sbb
xchg
jbe
push
mov
xor
mov
call
mov
sbb
pushf
loop
mov
add
mov
std
pushf
loopne
mov
add
sub
jns
push
sub
push
jnp
aam
mov
data16
scas
test
pusha
add
jbe
mov
loope
js
mov
popf
mov
in
cmp
or
push
clc
daa
or
mov
cmp
push
add
xchg
int
dec
xchg
pop
loope,pt
inc
ss
cmpsl
cmp
push
aaa
sbb
lods
out
add
pop
clc
jbe
jp
add
bound
mov
xchg
sub
aam
inc
adc
add
pop
aam
gs
adc
mov
mov
mov
mov
mov
dec
pop
lods
mov
adc
mov
outsb
cmp
jne
insb
xchg
push
lret
xor
mov
hlt
mov
arpl
add
mov
add
adc
mov
add
mov
pushw
jge
bound
mov
and
mov
pop
mov
inc
lahf
xor
mov
pop
push
lea
jb
mov
add
bound
mov
add
test
inc
sbb
int
clc
aam
ss
fcoms
je
out
vcmppd
int
push
push
push
mov
jnp
test
adc
mov
add
lcall
jns
gs
in
icebp
xor
mov
icebp
or
sti
mov
test
sub
inc
inc
add
add
dec
dec
jno
mov
ret
jbe
inc
insl
into
in
rorl
mov
data16
mov
lods
xchg
rcpps
add
mov
add
sahf
pushf
xor
or
sarl
cs
aad
mov
je
je
add
mov
xchg
je
roll
inc
sarl
dec
mov
mov
add
lods
sub
sti
jo
mov
xor
mov
sarl
inc
pop
push
aaa
cmc
mov
add
aas
push
cmc
jb
mov
outsb
daa
or
jg
or
fld
jmp
pushl
mov
add
add
out
add
xlat
pop
stc
leave
xchg
push
popa
sub
and
mov
sub
ss
pop
in
ljmp
xchg
nop
add
mov
add
push
fsts
nop
add
std
mov
or
add
aas
outsl
test
sub
xchg
or
stos
notb
add
mov
xchg
jnp
mov
sti
pop
popf
xor
jl
fsub
adc
xor
mov
sti
push
sbb
stos
pop
call
push
pushf
mov
jle
dec
fdivrs
sub
add
add
add
lret
jg
addb
jmp
jb
mov
push
add
pop
movsb
xchg
lret
popf
mov
mov
or
mov
add
jo
mov
pop
or
inc
add
fs
mov
push
repz
add
push
add
sub
rcr
repz
mov
cmp
lds
adc
mov
pop
pop
ret
stc
fdivl
dec
pusha
add
dec
aad
rorl
fbld
xchg
rolb
mov
addb
xor
cmp
inc
adc
aad
dec
sti
ja
jle
pop
icebp
inc
jecxz
insb
push
add
cmp
mov
cmp
xchg
jle
jp
les
mov
add
mov
addb
jbe
stos
add
and
mov
jbe
add
add
insl
loop
mov
or
adc
mov
or
cld
int3
repz
dec
daa
mov
xor
mov
lcall
rcll
fnsave
mov
add
fs
sbb
add
in
jl
sti
lods
ljmp
imul
out
xchg
xchg
jg
mov
push
add
add
add
lods
add
mov
sbb
xor
mov
add
mov
data16
int
flds
mov
mov
cmp
sub
add
rorl
jp
stos
nop
add
inc
popf
scas
in
movsb
mov
push
add
cmp
test
add
and
mov
loopne
mov
mov
fisubs
sbb
aaa
sahf
movsl
das
mov
xchg
add
addr16
into
fwait
sti
orl
testb
cld
cmp
decb
mov
rol
jae
cmpsb
addb
xlat
mov
add
xchg
sub
sti
push
jns
push
test
sbb
and
mov
mov
jne
xchg
stc
enter
cmpsb
pop
imul
add
xor
rcll
mov
loope
rolb
mov
rolb
xchg
add
ja
stos
mov
lods
mov
js
in
pop
and
mov
outsb
fsubrs
sahf
and
sbb
mov
add
mov
das
ss
and
mov
mov
out
insb
xor
test
loopne
mov
mov
aad
repz
push
js
scas
sbb
or
imul
xchg
xchg
je
mov
sbb
add
inc
cmpsb
test
fadds
jb
mov
mov
in
dec
sbb
sbb
clc
movsb
ss
aad
sbb
pop
test
sti
xor
test
dec
ret
cltd
enter
dec
sarl
xorl
lret
jb
mov
out
frstor
xor
mov
in
inc
dec
dec
push
fwait
sbb
out
cmp
and
add
add
lcallw
fdivrp
mov
mov
pop
add
inc
dec
sbb
xor
repz
sbb
rolb
mov
mov
jns
jo
mov
mov
sbb
xchg
pop
pop
xor
into
lea
call
push
mov
aas
into
mov
fstpl
aad
fiaddl
outsl
and
cltd
aas
loopne
mov
add
inc
mov
add
xlat
adc
adc
mov
mov
jns
inc
cmpsl
jl
les
xchg
mov
in
addl
mov
in
dec
lea
xor
xchg
jmp
add
mov
jp
mov
arpl
mov
add
lock
jnp
and
add
jnp
je
mov
push
add
mov
scas
jae
mov
mov
xor
mov
mov
scas
jb
mov
push
sldt
mov
add
adc
cmp
jno
daa
mov
fs
add
add
jg
push
or
dec
in
pop
jl
mov
pushf
fs
outsb
movsl
test
sub
loop
mov
aas
xchg
lret
pop
pop
mov
cmp
add
cmc
stos
mov
xor
mov
imul
ljmp
add
ja
mov
ret
jmp
adc
mov
leave
jmp
mov
addb
push
mov
jge
adc
xchg
lcall
sub
mov
cmp
nop
add
ret
pop
out
add
popa
cltd
pop
ds
scas
dec
cmp
cmc
cli
or
jbe
mov
mov
xor
mov
mov
add
add
flds
xor
mov
mov
notb
add
in
xor
mov
popa
pop
push
add
out
lds
add
xchg
stos
ret
mov
add
shll
stos
sbb
mov
push
imul
jbe
xchg
hlt
das
or
aam
xchg
add
mov
mov
mov
or
daa
int3
mov
pop
xchg
cs
fldcw
imul
mov
push
cltd
out
xchg
add
dec
in
add
mov
sti
dec
int3
les
daa
xchg
std
movsb
inc
inc
add
push
push
mov
jp
jg
jne
jmp
int3
adc
mov
or
pop
mov
add
add
jnp
sub
jg
xchg
adc
add
add
mov
xchg
mov
push
mov
dec
push
xchg
mov
int3
cmc
sahf
jns
add
cli
lahf
mov
mov
jns
leave
sbb
aad
push
mov
imul
mov
mov
ret
imul
push
sahf
loopne
mov
bound
mov
out
pop
add
mov
xchg
cs
mov
jb
mov
xlat
arpl
dec
loope
xchg
cmp
mov
pop
das
rolw
mov
pop
mov
cli
xchg
inc
sbb
xlat
std
jbe
jno
sbb
orl
inc
mov
mov
mov
xor
xchg
lods
ret
sbb
mov
pop
test
sub
adc
add
or
ja
repz
or
cmp
jl
add
mov
add
pop
hlt
ret
push
add
push
xchg
jp
and
push
scas
sbb
sub
mov
or
inc
test
rcl
add
add
mov
stos
popf
je
je
rolb
mov
mov
mov
add
fistps
or
mov
adc
repz
sub
dec
cmp
sub
xchg
add
jl
cmpsb
cld
push
or
sub
in
inc
rolb
insl
cwtl
sub
jne
addb
lea
add
pop
adc
mov
in
xchg
out
jns
out
aam
add
sub
fs
mov
mov
call
add
or
outsl
fsubp
sub
cmp
sti
push
lret
bound
mov
xor
mov
imul
jmp
mov
mov
pop
jne
push
add
mov
pushf
stos
sarl
outsb
xor
mov
add
lcall
ja
rorl
cmp
add
pop
xchg
outsb
push
int
add
mov
in
add
cli
mov
fisubl
out
pop
int
inc
add
pushf
push
pop
fwait
dec
push
call
pusha
add
je
jl
fsubl
or
inc
and
mov
addb
std
lret
mov
ds
or
inc
add
imul
sub
imul
xchg
mov
mov
adc
mov
ror
pop
test
lret
lret
or
leave
xor
mov
lock
or
mov
mov
mov
ret
adcl
psubq
outsl
addb
and
mov
cmp
ss
add
repnz
insl
lret
jnp
add
push
and
cmpsb
sbb
xchg
pop
sub
cmp
add
mov
xchg
xchg
cmp
push
add
faddl
pop
adc
stos
repz
add
das
mov
add
mov
cmp
add
dec
out
rolb
mov
sbb
xor
lcall
push
mov
ret
in
dec
pushf
hlt
das
cmpsb
mov
fnsave
mov
add
add
jl
loope
lret
stc
mov
push
ror
jo
mov
cmpsl
or
dec
adc
add
mov
inc
dec
rolb
mov
push
push
sub
jl
add
adc
cmpsb
dec
imul
sbb
out
std
dec
dec
aas
movsl
test
rolb
mov
fsubs
inc
add
dec
add
mov
xor
in
fdivl
mov
aam
out
jnp
xor
repz
add
mov
add
mov
mov
mov
mov
sbb
mov
mov
mov
mov
sbb
dec
dec
cmp
pop
dec
out
push
cmp
mov
adc
mov
aam
add
loop
mov
xchg
add
filds
and
mov
or
inc
add
mov
mov
insl
push
pushl
pop
inc
add
and
mov
in
pop
add
add
cli
repnz
dec
push
adc
add
aad
adc
out
pop
jecxz
mov
and
add
lea
inc
sbb
mov
mov
mov
add
add
out
aad
sahf
xchg
inc
addr16
rolb
mov
xorl
pop
or
fs
push
add
mov
dec
xor
inc
xchg
mov
cmpsb
cmc
mov
icebp
cld
mov
mov
xchg
add
inc
or
add
jmp
rolb
xor
mov
mov
dec
jl
cmpsl
lcall
add
sar
xor
outsb
jbe
xchg
shll
loopne
mov
add
xchg
test
fdivp
es
or
push
pop
mov
jg
repz
imul
push
push
add
and
fcom
xor
mov
adc
mov
dec
jl
insl
int3
pop
jge
popf
add
mov
xor
dec
jns
xchg
push
movsl
cmpsb
lods
mov
add
mov
mov
add
sbb
vmovq
js
add
mov
jne
mov
fimull
rcll
add
in
cmp
mov
les
cmp
popf
fadd
jle
push
and
aam
mov
mov
movhps
scas
test
rolb
or
adc
mov
add
add
add
mov
fcmove
sbb
cmp
pop
adc
pop
and
mov
paddusb
and
mov
daa
jp
pop
cmp
insl
jns
ljmp
mov
ss
add
in
out
xchg
mov
in
mov
or
shll
push
mov
mov
mov
add
lahf
arpl
loope
dec
das
lcall
mov
add
lock
add
cmp
mov
pop
jmp
test
loopne
mov
jo
mov
nop
add
fs
rcr
cmp
fdiv
imul
jp
add
lds
fwait
pop
dec
loopne
mov
xchg
and
add
inc
enter
jne
add
jp
stc
jne
rolb
mov
outsb
add
mov
lret
lea
adc
add
pop
push
aam
mov
sarl
mov
enter
mov
push
jne
or
xor
aad
ret
into
pop
cmpsl
dec
xor
mov
add
jo
mov
and
mov
mov
add
add
rcll
add
add
mov
stos
loop
mov
add
aad
xor
mov
std
mov
add
add
rolb
mov
jno
xchg
iret
inc
bound
mov
add
mov
dec
push
mov
rol
inc
cs
add
shl
mov
test
mov
mov
lods
mov
fs
enter
add
fs
add
mov
mov
sub
clc
iret
inc
add
aam
lds
test
mov
leave
push
lds
push
mov
mov
sahf
icebp
add
mov
movsb
mov
cld
ret
cmpsl
test
mov
push
in
flds
pop
push
sbb
mov
sbb
pop
inc
add
push
rolb
mov
cld
sarl
aam
movsl
aad
push
add
mov
add
mov
addr16
movsb
sbb
mov
cmp
pop
sbb
pop
scas
push
xchg
dec
pop
jnp
mov
sub
jae
cmp
add
mov
imul
adcl
add
adc
mov
mov
add
add
cmp
sbb
bound
mov
cld
xchg
or
xor
add
and
add
xor
adc
mov
and
push
and
cltd
xchg
sub
test
inc
cmp
shrl
and
mov
and
jo
mov
iret
fists
addb
dec
bound
mov
mov
push
jecxz
mov
inc
rolb
mov
jo
mov
orl
add
aad
push
divb
adc
jns,pt
fldenv
fisubrs
out
adc
adc
test
test
pop
out
or
push
add
nop
add
rolb
mov
adc
push
iret
movsb
sub
add
out
cmp
dec
jmp
mov
fimull
negb
add
mov
jne
in
or
out
add
mov
aaa
xchg
push
sub
mov
cmp
push
jg
mov
add
and
mov
mov
sbb
popf
test
xchg
and
je
dec
mov
xor
xorl
imul
add
and
mov
outsb
mov
push
roll
mov
adc
jns
push
rcll
jae
movsb
in
mov
data16
push
mov
mov
mov
mov
data16
popf
dec
sbb
mov
cwtl
loopne
mov
xor
add
sub
outsl
dec
mov
mov
out
insb
cli
fistpl
xor
sub
and
add
nop
add
mov
fcomps
add
and
nop
add
add
mov
filds
fsts
add
ss
xchg
testb
add
adc
outsl
outsl
data16
xor
bound
mov
jno
test
adc
test
xlat
push
rolb
mov
out
add
ljmp
int
imul
jecxz
in
rolb
mov
int3
mov
cmpsl
hlt
call
xorl
test
add
jb
mov
cmpsb
lds
add
stc
sbb
nop
add
jmp
add
mov
addb
dec
xchg
add
add
and
mov
mov
mov
aad
sub
inc
jae
adc
mov
mov
push
inc
xor
mov
mov
into
jnp
xor
lret
test
sub
adc
mov
movsb
dec
pushf
sbb
cmp
and
mov
rolb
mov
jnp
iret
inc
mov
loop
mov
xor
jae
inc
add
jns
adc
mov
mov
and
mov
lods
movsb
lret
lea
test
pop
xchg
mov
mov
mov
add
repz
sbb
sahf
xchg
jle
push
mov
dec
mov
cmp
push
arpl
mov
dec
test
cmp
imul
rolb
or
mov
fstpl
add
mov
pop
and
mov
add
sub
rolb
outsb
mov
mov
mov
jl
add
mov
mov
push
cmp
sahf
arpl
dec
add
pushl
rolb
imul
sahf
pop
rolb
cld
adcl
nop
add
add
jnp
add
xor
mov
mov
xchg
arpl
pop
pop
pop
adc
mov
inc
add
mov
bound
mov
jb
mov
mov
ja
sub
leave
xor
mov
dec
push
dec
mov
adc
pop
mov
mov
js
clc
outsl
cmpsl
sahf
addb
loopne
mov
jno
loope
dec
xchg
sub
out
sbb
mov
loope
jmp
dec
pop
test
aas
movsb
jg
sub
insb
daa
hlt
adcl
add
in
call
stos
hlt
test
ds
lret
popf
sub
and
add
and
cli
xchg
lahf
dec
pop
add
mov
test
dec
in
xchg
insb
cmp
addb
cli
add
mov
iret
lods
xchg
add
mov
push
lret
popf
jae
mov
xchg
mov
icebp
mov
push
imul
mov
lret
pop
xor
and
mov
test
xor
mov
and
mov
rorl
daa
mov
js
mov
inc
paddusw
add
mov
mov
pop
or
add
add
sub
jp
or
push
add
mov
xchg
cmpsb
rolb
mov
dec
lods
inc
add
loop
mov
jg
xchg
xor
mov
or
jmp
mov
sbb
jge
lcall
push
add
outsb
or
data16
mov
mov
add
mov
repz
jle
cwtl
pusha
add
mov
jbe
jbe
or
sub
shl
inc
push
inc
add
mov
adc
in
lods
push
mov
push
sbbl
add
sbb
mov
mov
add
mov
inc
add
pop
inc
dec
test
and
mov
mov
inc
add
xchg
je
sbb
mov
add
rolb
mov
add
sti
mov
mov
fsubl
es
orl
imul
fisttps
daa
sbb
repnz
icebp
cld
inc
cld
pop
push
daa
cmpsl
mov
addb
mov
add
mov
icebp
adc
mov
mov
cld
addr16
mov
mov
dec
pushf
push
add
mov
xchg
sbb
and
dec
pop
adc
adc
sub
hlt
dec
aas
ja
jns
jp
pop
cltd
cmpsl
cli
push
or
mov
mov
mov
mov
add
mov
push
addl
mov
add
imul
xchg
add
push
add
mov
mov
mov
jecxz
add
add
addb
push
pop
xlat
mov
sbb
hlt
jno
add
in
jbe
daa
lock
push
imul
fistpll
pop
jg
lock
sbb
add
mov
stos
mov
scas
sti
decl
aad
dec
xchg
and
add
sub
mov
adc
jge
add
outsl
fmull
add
xor
lock
add
sub
add
mov
push
sbb
dec
mov
cmp
push
in
add
mov
mov
mov
loopne
mov
das
jne
ljmp
mov
add
fstl
add
mov
push
lret
dec
mov
mov
add
mov
push
or
mov
inc
sbb
faddl
mov
sbb
xchg
inc
add
push
add
xchg
pop
dec
mov
xor
mov
dec
xor
js
addr16
mov
jnp
push
scas
les
cmp
int
loopne
mov
xor
ds
jae
push
push
imul
in
leave
pop
adc
lds
aaa
iret
dec
jb
mov
adc
mov
or
and
mov
in
jo
mov
add
mov
cmp
push
add
cltd
fwait
into
or
cmp
cmpsb
ja
add
imul
xor
hlt
daa
shr
loope
gs
imul
add
cs
add
add
mov
lea
mov
add
in
pop
adc
add
ds
mov
jmp
add
mov
test
add
rolb
mov
dec
dec
bound
mov
xor
push
imul
rcrl
jne
adc
fs
hlt
leave
lahf
mov
adc
mov
add
addr16
test
std
gs
mov
addps
cmp
rorl
cmp
add
cmp
add
add
inc
push
add
sbb
fiadds
cmp
pusha
add
aaa
xor
push
add
and
in
mov
jecxz
repnz
je
aaa
mov
js
add
xchg
or
push
addr16
mov
add
xchg
add
mov
dec
cld
sbb
sbb
movsb
mov
jmp
add
add
mov
popf
rcr
dec
je
xor
adc
jp
dec
mov
mov
jle
je
push
dec
addr16
lcall
and
xor
pop
pop
movsb
sub
inc
ficoml
inc
rolb
mov
das
cmp
mov
xchg
push
dec
xor
stc
imul
pop
jle
jnp
add
insl
sti
mov
in
xchg
mov
cmp
cld
aad
push
push
fidivrs
cmovne
cli
inc
sbb
aas
xchg
mov
lahf
cmp
cltd
rolb
insb
push
imul
adc
mov
inc
std
push
or
add
mov
rolb
mov
jmp
mov
rcrl
xor
lret
add
stos
push
clc
cmp
add
add
mov
loope
add
add
je
gs
lret
ja
outsl
mov
add
daa
out
add
nop
add
out
ret
rolb
pop
aam
jge
into
cmc
fcmovnbe
mov
dec
inc
test
iret
aad
or
test
xor
mov
mov
lret
mov
add
sub
xor
or
jecxz
dec
mov
and
stos
shll
add
call
inc
jbe
leave
push
in
out
mov
and
cltd
dec
cli
cmp
mov
mov
add
mov
enter
add
add
mov
cltd
repz
xor
mov
mov
mov
xlat
push
or
leave
scas
jmp
add
aad
popa
mov
ja
mov
add
mul
out
divl
mov
cwtl
xchg
add
mov
addl
mov
mov
cmc
cld
lods
xchg
out
dec
jl
int3
cs
dec
in
jno
movsb
nop
add
shl
cmp
mov
pop
or
jns
push
leave
repnz
xor
mov
lea
push
sub
scas
dec
dec
cmp
shrl
test
cli
mov
add
mov
add
sub
and
in
std
xor
mov
add
jge
aad
push
lock
add
mov
mov
add
dec
leave
das
ja
jnp
cmp
repnz
jp
psubsb
inc
add
inc
add
xchg
inc
mov
popa
enter
xlat
sbb
mov
rolb
mov
or
rolb
cmp
bound
mov
add
mov
cld
in
fnsave
mov
xchg
push
sub
mov
and
xor
mov
inc
imul
nop
add
lahf
iret
in
and
add
pop
xlat
lret
push
int3
pop
push
out
fs
jmp
xchg
add
in
pop
jo
mov
adc
out
add
mov
jg
in
jecxz
dec
mov
add
mov
in
outsb
mov
mov
adc
mov
add
xor
mov
add
mov
sbb
mov
lret
rolb
mov
leave
push
add
mov
aad
push
xor
mov
movsl
sti
mov
ret
je
fwait
rolb
test
add
leave
add
inc
add
xor
test
roll
push
dec
jo
mov
cwtl
mov
add
mov
add
adc
mov
into
div
imul
inc
nop
add
or
insb
dec
daa
push
mov
add
pop
test
inc
add
push
sub
add
mov
xchg
inc
loopne
mov
push
add
push
xor
cwtl
scas
daa
jo
mov
mov
mov
mov
mov
je
pop
daa
insl
hlt
dec
cltd
addb
mov
ja
or
insb
or
add
xchg
icebp
fiadds
mov
aam
psllq
stos
addr16
icebp
cmp
lahf
cwtl
popl
out
adc
dec
leave
cmp
push
hlt
xor
mov
lret
add
inc
adc
mov
add
push
paddsw
sahf
or
dec
jmp
jp
jnp
jb
mov
adc
scas
and
hlt
cs
push
sub
mov
add
out
rorl
mov
jecxz
add
cmc
xor
sahf
add
stc
fisubs
jae
jmp
and
mov
jnp
cmp
jle
add
dec
push
stos
push
mov
aam
out
cltd
gs
repz
jge
int
sbb
xchg
cld
clc
mov
pop
int3
add
pop
call
add
sbb
mov
cltd
mov
addl
adc
jmp
movsl
fbld
lea
insl
rorl
xor
mov
dec
mov
imul
mov
add
jbe
jae
jo
mov
sbb
mov
int
mov
mov
cmpsb
jecxz
aam
test
jno
cs
mov
mov
pop
lds
and
in
movsl
loop
mov
cmp
ds
mov
jo
mov
adc
add
add
mov
popf
add
and
push
xor
mov
jne
fiadds
pop
or
jle
mov
mov
jmp
xor
lods
or
add
mov
lret
xchg
xlat
pop
mov
cs
add
jmp
xor
shr
sbb
add
add
mov
hlt
sbb
push
in
lods
pop
mov
inc
push
mov
add
mov
cmp
clc
sbb
push
sbb
dec
imul
das
xchg
enter
mov
fdivl
add
mov
in
in
jle
add
add
mov
or
lock
daa
pop
xchg
je
add
mov
cmpsb
cli
lret
mov
addb
inc
mov
imul
mov
inc
xchg
in
dec
adc
push
add
mov
push
add
inc
gs
insb
das
pop
les
add
out
enter
into
sub
adc
loop
mov
dec
loopne
mov
mov
add
push
push
mov
mov
mov
jae
pop
repz
lea
cwtl
inc
and
mov
mov
xor
ret
lret
cmp
xor
inc
add
add
mov
sub
hlt
sbb
cmpsl
test
mov
rolb
loop
mov
add
sbb
add
xchg
jnp
dec
aas
bound
mov
sub
add
mov
mov
add
jno
mov
add
push
adc
lea
mov
nop
add
pop
sub
lret
mov
mov
add
nop
add
pop
cs
cmp
jl
or
mov
in
out
psubusw
xor
and
fsubl
lret
mov
sahf
iret
dec
loopne
mov
loop,pt
mov
xor
jbe
sub
sti
imul
scas
inc
mov
rolb
mov
mov
imul
lret
jle
cld
push
mov
dec
xor
inc
mov
int
idivb
stos
mov
cmp
sub
fld
out
ficompl
addr16
push
add
mov
scas
xchg
mov
xlat
cmc
mov
sub
les
addr16
insb
mov
mov
fildl
add
cwtl
scas
outsl
aaa
rcrl
add
pop
lock
out
movsl
inc
aad
add
xchg
test
test
add
ret
push
lods
or
add
mov
fmull
adc
loope
out
jae
test
inc
add
push
int3
inc
mov
jmp
in
add
mov
dec
rolb
mov
mov
clc
out
fcoml
jg
jns
cltd
in
rcrl
push
add
mov
mov
into
mov
outsl
fwait
ja
iret
mov
pop
scas
pop
mov
and
loope
js
adc
repnz
mov
xchg
mov
xchg
add
fisubrs
sbb
fs
jns
mov
cmp
add
add
jg
add
mov
addb
sbb
testb
adc
add
fidivrs
fsts
mov
xor
test
add
pop
sbb
incl
inc
andl
neg
cmp
add
mov
inc
add
cmp
xlat
fdivs
sub
addb
inc
dec
fidivs
add
bound
mov
and
fdivrp
xchg
ja
aaa
mov
xchg
add
or
pop
arpl
sub
mov
jns
ja
lock
mov
and
sbb
adc
mov
adc
mov
sti
mov
rcl
and
add
sub
push
roll
mov
in
add
mov
add
loop
mov
addb
addb
xorl
mov
mov
js
pop
adc
sti
testb
mov
popa
inc
outsb
xchg
repnz
ret
cli
mov
xchg
lahf
sub
fdivrs
adc
sub
mov
xor
bound
mov
push
dec
das
and
mov
mov
mov
fcoml
jl
rolb
mov
inc
cwtl
cltd
mov
cmc
jle
mov
fildll
adc
mov
lea
mov
mov
mov
adc
shll
push
add
popa
daa
cmp
aaa
stc
mov
add
jno
mov
add
repz
xor
fadds
adc
jecxz
fmull
cmp
rcll
sbb
xchg
add
sbb
push
push
push
dec
jp
pop
sub
mov
adc
mov
lock
jg
jo
mov
add
mov
add
mov
push
add
mov
adc
mov
add
cli
jg
les
in
mov
das
fnstcw
arpl
and
aas
and
xchg
add
inc
sbb
add
add
xchg
mov
inc
add
cli
jno
cmp
pop
imul
mov
push
cmpsl
sub
outsl
push
int
cmp
add
loope
sbb
pop
shrl
lods
sbb
add
jmp
cmpsb
hlt
xchg
mov
inc
xchg
ja
mul
add
mov
mov
pop
cmp
int
mov
mov
pushw
and
or
add
frstor
mov
dec
or
adc
mov
add
rolb
mov
lods
dec
ljmp
les
cmp
add
pop
enter
gs
adc
hlt
pop
push
lods
or
sub
out
sub
or
pop
cmp
mov
mov
arpl
es
gs
mov
popf
into
rolb
cmpsl
mov
mov
rcll
data16
mov
pop
mov
mov
add
mov
std
dec
lret
inc
adc
add
mov
pop
in
or
int
add
iret
pop
into
add
jp
data16
and
pop
rolb
mov
jbe
scas
add
jg
popl
add
add
push
or
outsl
jecxz
vpminub
add
rolb
mov
sub
add
lea
mov
into
adc
mov
add
add
sub
mov
rolb
mov
into
mov
in
mov
add
dec
or
add
add
xchg
rolb
mov
jnp
add
mov
dec
sub
mov
add
add
add
push
mov
aaa
push
fidivrs
add
adc
mov
insb
mov
rcrl
add
lods
clc
mov
sbb
dec
adc
leave
mov
lcall
add
jge
or
push
sub
daa
cld
outsl
sub
xor
add
lea
sub
and
sarl
mov
inc
inc
and
mov
movsl
mov
cli
mov
jbe
stc
or
push
cltd
aad
dec
sbb
mov
push
add
ljmp
sbb
xor
xchg
mov
mov
or
movsl
xchg
mov
insb
lea
and
mov
rolb
mov
sbb
lods
ljmp
orl
mov
or
add
inc
sarl
mov
mov
test
add
stos
incb
xor
fbld
pusha
add
dec
ljmp
jb
mov
add
stc
pop
test
sbb
inc
stos
mov
mov
divb
xchg
jg
cwtl
mov
xor
ret
mov
imul
push
call
jecxz
ljmp
add
data16
out
lcall
inc
push
es
in
add
mov
mov
mov
pusha
add
add
mov
jbe
mov
add
sub
pop
dec
mov
jp
inc
fnsave
cmp
stos
push
adc
adcl
scas
add
imul
add
fisttpll
addb
mov
jecxz
add
or
aaa
xor
mov
sbb
add
aas
outsl
inc
stos
insb
lods
mov
lods
lock
out
and
stos
pop
sub
sbb
outsl
xchg
push
xlat
movsb
mov
jp
adc
adc
inc
add
adc
lcall
cmova
dec
lds
insl
les
sti
sbb
les
insb
repz
add
mov
mulb
xchg
sbb
mov
jb
mov
shll
xchg
inc
add
clc
imul
data16
pop
addb
xchg
xor
xchg
jle
sbb
fucom
add
aaa
insl
lock
add
add
mov
icebp
insb
add
lcall
fcmovnb
add
imulb
xchg
lcall
and
and
jae
add
mov
ret
mov
test
add
hlt
add
push
int
adc
mov
lret
add
cmp
stos
adc
outsl
popf
pop
pop
int
add
mov
mov
ss
sti
push
add
adc
add
add
xor
fldenv
addb
sub
jl
in
push
jge
pop
mov
insb
ss
mov
nop
add
jb
mov
jmp
mov
pop
dec
es
nop
add
xchg
mov
jbe
push
leave
cmp
rolb
cmpsl
fs
std
scas
mov
push
or
lret
jecxz,pn
adc
mov
out
dec
aad
int3
fidivrl
lods
cmpl
out
enter
sbb
push
ja
mov
add
xor
cwtl
sub
rolb
mov
pop
dec
adc
xchg
jp
add
aad
sub
repnz
mov
aas
js
pop
jmp
aad
xchg
addb
call
cmp
jmp
mov
add
dec
mov
cmp
ja
icebp
rolb
mov
mov
mov
jmp
add
data16
xchg
add
out
mov
cmp
test
add
aaa
adc
push
pop
mov
add
lret
stos
aad
cmpsb
inc
dec
push
add
add
add
inc
pop
mov
cmp
das
pop
mov
add
jle
xchg
mov
add
in
mov
gs
add
mov
negl
popf
fstpt
rolb
mov
pop
repnz
inc
xchg
scas
test
pop
rcll
add
fsubrs
arpl
add
ja
cmp
mov
pushf
add
mov
insb
push
add
fcom
add
ret
adc
mov
mov
mov
jns
and
fsts
mov
pop
clc
dec
jp
add
dec
addb
mov
sub
jo
mov
insl
xchg
add
add
xor
into
bound
mov
mov
rcll
das
out
outsl
add
sub
dec
int
mov
cmp
add
iret
cmp
mov
add
sbb
add
adc
jmp
xor
add
rolb
mov
pop
adc
add
add
aam
pop
add
inc
add
mov
sahf
jmp
dec
aad
fdivs
adcl
adc
mov
imul
inc
test
xor
mov
xchg
test
mov
add
mov
mov
pop
pop
popf
push
hlt
cmp
xlat
mov
daa
xchg
add
mov
iret
lock
add
push
add
mov
push
mov
addr16
or
jnp
push
fimuls
mov
push
into
xchg
add
xchg
fstp
xor
add
cmc
popf
test
repz
inc
or
lods
in
add
jb
mov
adc
ja
arpl
mov
aad
fwait
pop
jg
pop
decb
sub
jecxz
xor
mov
out
test
mov
dec
jne
mov
es
enter
mov
sbb
jne
addr16
mov
je
jmp
mov
mov
dec
es
leave
mov
cmp
pop
inc
add
add
addb
and
mov
in
xlat
jl
add
rolb
lret
dec
and
mov
mov
jb
mov
movsb
add
add
movsb
mov
dec
push
xchg
xor
stos
jecxz
mov
arpl
add
or
lret
and
mov
add
xor
mov
out
mov
js
pop
sti
xlat
sbb
ss
stos
cli
mov
push
stos
xlat
dec
clc
mov
xor
mov
xlat
popa
js
add
push
add
mov
out
cltd
dec
sti
xchg
das
push
lds
cmpsl
xor
das
add
mov
mov
aas
push
shll
mov
mov
dec
add
mov
add
jbe
jnp
sub
mov
add
jnp
sbb
ljmp
in
push
out
dec
mov
loope,pt
aad
clc
into
mov
add
pop
int3
and
mov
bound
mov
pop
add
mov
outsl
cwtl
in
pop
inc
nop
add
mov
xor
push
xchg
jl
repz
inc
add
mov
mov
jb
mov
movsb
int3
mov
dec
jecxz
rolb
mov
iret
push
ret
scas
xchg
jl
inc
jmp
lea
push
aad
add
add
fs
movsl
nop
add
or
add
add
fucomip
dec
xchg
add
arpl
add
pop
mov
jge
aas
push
mov
sub
test
add
adc
mov
inc
out
movsl
cli
cwtl
pop
inc
sub
xchg
dec
add
xor
and
mov
hlt
outsl
xchg
sbb
add
add
icebp
xchg
out
xchg
das
popf
xor
int3
cmp
adc
xchg
test
push
xchg
lock
add
outsb
add
mov
insb
adc
mov
add
cmp
adc
xchg
test
add
sub
push
and
mov
sbb
or
pop
mov
and
mov
cmp
mov
jle
pop
pop
xchg
add
mov
dec
adc
mov
mov
test
adc
mov
sbb
arpl
mov
add
mov
jnp
push
lcall
inc
add
add
lea
in
clc
dec
mov
test
pushf
pop
jno
fdivrs
add
and
mov
add
mov
dec
inc
sbb
xchg
pop
mov
add
clc
cmpl
mov
lea
out
sbb
add
cmc
lock
cmpsb
cmp
and
mov
dec
lods
adc
add
movsb
fdivrl
mov
cmpps
aad
int3
test
dec
cmp
jle
inc
pop
xchg
inc
jnp
rorl
lret
add
and
mov
pop
ss
mul
into
je
add
rolb
mov
jb
mov
loopne
mov
mov
sbb
mov
and
cmc
xor
scas
mov
pop
mov
mov
add
mov
icebp
cmp
xchg
mov
in
loopne
mov
add
in
push
adc
add
jl
addl
jne
scas
lret
sbb
cmp
in
mov
push
icebp
fsubl
xor
mov
push
lret
scas
adc
xchg
push
add
add
add
cli
rolb
aaa
lcall
mov
cltd
push
add
hlt
sti
inc
add
adc
bound
mov
addb
popa
mov
add
mov
add
cwtl
data16
sbb
lahf
xchg
adc
mov
mov
add
xor
mov
jbe
mov
add
movups
push
pop
inc
dec
jbe
pop
jmp
repz
dec
push
add
mov
or
lea
add
add
enter
addb
pop
pushf
mov
xchg
add
pop
mov
fcom
add
pop
sub
push
add
mov
add
mov
pop
repz
add
mov
add
inc
dec
enter
adc
icebp
cmc
jp
mov
push
jno
pusha
add
push
cmpsl
movsl
cmp
pop
and
mov
dec
sub
mov
repnz
mov
fisubs
mov
mov
add
scas
rcll
cld
dec
aad
cmpl
add
neg
adc
mov
jae
push
repz
add
cmp
jae
lret
xchg
adc
mov
or
clc
mov
mov
add
pop
addr16
pop
cmp
xchg
xchg
mov
mov
aad
in
stc
xlat
imul
add
movl
imul
std
dec
mov
lea
jne
mov
mov
loop
mov
or
jo
mov
xchg
lods
push
daa
cmpsl
xchg
pop
mov
mov
icebp
push
add
mov
insl
fcoml
jnp
iret
xchg
dec
ja
push
lcall
mov
add
push
mov
xchg
add
add
fs
cltd
leave
arpl
ss
inc
lds
dec
outsl
and
mov
sbb
jne
rcll
mov
mov
nop
add
jp
and
mov
sub
sbb
inc
add
add
sbb
mov
xlat
imul
xchg
aaa
or
pop
addb
lret
mov
push
ja
push
js
stos
out
and
mov
mov
sub
jg
daa
hlt
mov
jae
add
add
pop
cli
stos
push
xchg
shll
add
jmp
push
jle
push
add
popf
in
mov
std
cld
adc
inc
stc
test
jmp
adc
xchg
add
mov
pop
cmp
popl
mov
mov
xorl
gs
cs
add
and
mov
enter
fwait
pop
leave
cmp
inc
mov
push
push
add
push
add
mov
jecxz
popa
adc
call
mov
lods
inc
add
into
push
fcoms
add
cwtl
pop
jbe
jmp
mov
jb
mov
and
add
inc
mov
ja
insl
repz
pop
cmp
iret
scas
rolb
outsl
cmpsl
xchg
xor
mov
mov
test
push
icebp
pop
scas
rcll
xchg
add
into
pop
mov
lods
xchg
jmp
adc
addb
sub
mov
inc
add
add
add
lods
clc
inc
ret
aaa
pop
out
sbb
mov
pop
es
daa
test
fs
add
js
das
imul
ljmp
and
int
mov
cmpl
mov
add
inc
pop
mov
dec
jp
test
rolb
mov
ficoms
push
iret
jg
sub
scas
fidivrl
popl
add
mov
imul
sub
outsl
pop
scas
int
and
je
jb
mov
sub
test
dec
pop
cmpsb
roll
add
sub
sub
jae
add
in
test
nop
add
jg
add
inc
div
push
push
cld
sub
arpl
jnp
add
fists
add
add
mov
pop
loope
jmp
add
in
repz
push
add
mov
int3
jae
dec
jbe
pusha
add
addl
mov
add
cltd
cltd
xor
sub
add
mov
sahf
dec
xor
cs
out
lea
add
mov
hlt
jb
mov
push
mov
push
cmp
mov
mov
add
xchg
loop
mov
mov
cltd
out
inc
fdivs
test
enter
mov
fistpll
jmp
and
mov
mov
stc
in
pop
fcomp
jg,pn
lcall
jl
hlt
mov
pop
mov
mov
pop
ss
add
jo
mov
mov
add
add
out
ss
add
mov
repnz
mov
push
cltd
into
jl
add
jle
xorl
pop
pop
mov
pushf
and
mov
lahf
xchg
jg
fwait
mov
das
lods
mov
pop
sbb
xor
movsb
mov
fsubrl
aas
mov
mov
mov
mov
aas
xor
std
es
cld
or
add
daa
jne
mov
lahf
cmp
stos
ss
aam
and
mov
sub
add
mov
add
dec
xlat
and
in
in
and
inc
dec
scas
stos
sub
add
mov
add
lds
mov
or
sub
call
add
push
push
std
fwait
movsl
and
mov
mov
dec
sbb
outsb
out
lahf
push
out
aas
sub
popa
jae
dec
adc
push
xchg
push
and
cmp
add
xchg
inc
add
mov
cmc
adc
jnp
mov
mov
enter
cmc
jnp
push
lret
mov
add
add
popa
pop
xlat
dec
inc
imul
add
mov
add
sbb
arpl
je
ss
mov
subl
hlt
jle
add
add
ret
add
aam
sbb
pop
xchg
repnz
mov
mov
sub
inc
loope
pop
push
sbbl
jg
cmp
cmc
inc
and
mov
add
sbb
fsubr
cmp
add
jecxz
add
out
rolb
mov
adc
mov
stos
add
jbe
scas
outsb
push
dec
int3
push
or
test
cmp
lock
lods
out
inc
add
xchg
addr16
pop
in
testb
mov
outsl
push
movsl
dec
lahf
ljmp
mov
imul
add
mov
add
sbb
pop
dec
xor
flds
or
inc
sbb
mov
mov
jecxz
add
add
pop
or
add
mov
cmp
add
mov
pop
or
dec
sbb
rolb
mov
btr
mov
push
mov
repnz
pop
je
or
rdmsr
add
jb
mov
xchg
push
sbb
dec
pop
mov
and
push
push
jno
or
add
mov
mov
je
pop
mov
mov
daa
adc
mov
pushf
or
xchg
and
add
fistpl
in
je
les
enter
sub
shll
sub
lret
call
aad
xchg
js
add
or
add
in
iret
xchg
pop
lea
add
or
add
fdivs
mov
lods
out
fldt
mov
in
mov
xor
mov
dec
add
cli
jo
mov
cmpsl
mov
xchg
cmp
mov
notl
aam
mov
push
and
mov
mov
mov
push
sti
push
add
incb
mov
sbb
cmpsl
jmp
mov
and
stos
adc
lret
xor
mov
xor
mov
imul
add
mov
movsl
xor
sbb
adc
test
jns
dec
sub
xchg
adc
out
shll
push
cmp
iret
mov
mov
repz
mov
lea
mov
add
inc
add
adc
mov
fbld
add
push
adc
cmc
rolb
xor
mov
pop
lods
add
dec
fimuls
test
inc
add
lcall
add
shrl
mov
xchg
scas
ds
inc
jno
dec
push
add
inc
jne
dec
cli
in
add
scas
testl
add
mov
out
xor
iret
pop
pusha
add
repnz
rcrl
xchg
into
lret
xor
ret
in
mov
addb
xchg
iret
sti
and
mov
stos
fldl2t
dec
rol
lea
adc
mov
test
xlat
fdivl
adc
mov
push
int
movsb
mov
add
in
pop
mov
clc
mov
add
mov
dec
fisttps
inc
jge
hlt
adc
mov
inc
xchg
push
add
mov
in
adc
mov
test
iret
add
jnp
stc
test
inc
mov
inc
jmp
add
inc
add
add
mov
mov
add
lret
addr16
mov
inc
or
mov
xchg
mov
scas
cmpsl
xorl
add
mov
dec
arpl
sub
jae
adc
test
add
mov
mov
or
lods
out
add
daa
mov
xor
add
push
add
outsl
jecxz
into
push
add
arpl
add
fisubrl
adc
ja
sub
or
lret
add
cmpl
fcmove
gs
xchg
es
cltd
cmp
icebp
mov
add
add
outsl
pop
ror
mov
out
pusha
add
add
mov
jae
cmp
add
dec
rolb
mov
rol
cld
ret
scas
xor
mov
inc
addb
clc
dec
xchg
inc
add
or
adc
mov
inc
popa
lds
jno
addl
aam
addb
or
and
add
mov
xchg
add
mov
sbb
lret
movsl
hlt
jmp
mov
bswap
sbb
aas
mov
lahf
bound
mov
mov
mov
mov
ds
pop
fisttpl
push
jp
fs
jb
mov
test
int
stos
nop
add
or
or
das
sahf
inc
int
add
add
pop
xlat
push
cltd
or
add
stos
out
mov
add
or
inc
add
insb
xchg
add
popf
adc
mov
psubw
cmp
ja
icebp
pop
jge
add
mov
loope
std
in
in
mov
jmp
hlt
hlt
pop
out
ljmp
adc
push
jno
mov
mov
loop
mov
fstps
add
popa
lods
xor
xchg
mov
add
lock
mov
mov
addb
stos
fmul
orl
jo
mov
add
mov
insb
lret
xorl
xchg
xor
sbb
in
mov
jecxz
dec
mov
popf
ror
aam
add
inc
mov
filds
rcll
addr16
sbb
lea
add
or
out
emms
roll
stos
dec
push
divl
adc
sbb
cmc
xchg
add
lahf
enter
mov
sahf
outsl
push
loope
insb
fstpl
sarl
aam
test
add
add
mov
add
in
aad
xchg
and
adc
and
mov
or
mov
aam
push
or
cld
dec
imul
jne
pop
mov
sub
outsl
and
pop
bound
mov
out
pop
pop
les
mov
push
mov
jge
jnp
pop
mov
mov
mov
dec
mov
mov
mov
fildl
mov
add
mov
xlat
arpl
xchg
add
mov
inc
add
bound
mov
mov
mov
imul
rolb
sub
dec
push
jl
test
mov
add
mov
sets
out
lea
add
or
repnz
rolb
fcomip
add
negl
push
rolb
adcl
cmp
xlat
dec
lds
test
add
and
mov
push
jns
pop
or
rcll
cmp
sarl
add
add
jg
aaa
cwtl
cmp
adc
jle
stos
stos
jb
mov
aas
stos
jne
rep
movl
imul
xchg
jnp
mov
in
enter
push
outsl
pop
sti
in
add
or
test
out
mov
mov
mov
mov
and
mov
mov
sbb
add
and
mov
sub
in
stos
into
fimuls
sbb
pusha
add
jg
jae
dec
jb
mov
mov
add
sub
add
pop
cltd
sub
add
emms
ds
mov
lea
cmp
dec
into
test
mov
popf
negb
cld
fbstp
dec
lret
mov
mov
mov
and
jmp
mov
imul
cmpsb
inc
mov
or
push
fs
push
js
jbe
pop
sub
cmp
test
sbb
jae
add
mov
mov
mov
mov
mov
hlt
add
lods
mov
mov
cld
out
nop
add
imul
mov
bound
mov
inc
add
arpl
jmp
iret
jle
idivl
xorl
sub
jo
mov
fsubs
aaa
adc
pop
mov
cmp
jns
aaa
mov
or
fucomp
pushf
js
loopne
mov
pushf
add
jno
add
fwait
addb
mov
adc
sbb
mov
cmp
dec
aam
add
dec
out
cld
lcall
mov
out
inc
addr16
push
add
cmp
mov
ret
shll
int3
xchg
push
les
popa
or
xchg
and
inc
add
mov
daa
icebp
je
loopne
mov
or
aas
mov
mov
push
mov
pop
push
in
push
dec
lret
mov
mov
std
push
add
test
mov
mov
push
add
sub
jae
add
sub
mov
add
mov
mov
mov
add
add
scas
sub
xor
out
add
add
imul
xchg
jbe
andl
jno
das
aas
repnz
add
jmp
xchg
daa
and
mov
stc
xchg
add
mov
push
cli
mov
cmp
loope
test
dec
dec
les
mov
add
lea
jmp
bound
mov
bound
mov
add
add
jmp
xchg
es
mov
leave
arpl
adc
addb
sub
sbb
scas
pop
scas
mov
add
repnz
xchg
push
and
dec
test
push
dec
insb
addr16
inc
dec
sub
add
lods
ret
sbb
add
je
rcrl
insb
sub
jno
fistpll
cmpsb
adc
mov
mov
mov
out
cmpsb
xchg
aaa
out
test
add
leave
ret
sbb
xor
test
sbb
adc
add
push
pop
pop
out
fisttps
ret
fisttps
mov
stos
mov
mov
out
add
cld
push
aaa
cmp
add
and
cs
sbb
mov
jno
lret
enter
subl
xor
mov
fs
outsb
xchg
xchg
pop
pop
ret
or
inc
mov
mov
je
outsb
lock
add
add
push
cwtl
ret
addr16
adcl
push
sbb
xor
mov
or
sub
mov
mov
mov
dec
repnz
cmp
out
es
lods
add
test
add
add
mov
dec
fwait
imul
jmp
sbb
jnp
arpl
jns
sbb
lahf
int3
fstps
cmp
cltd
repz
std
xor
mov
popf
or
lock
ljmp
ret
and
mov
jns
out
inc
sub
add
dec
outsb
and
rolb
mov
jno
add
and
mov
sub
add
bound
mov
fwait
movl
push
xor
mov
stc
addb
iret
and
out
and
jne
sub
les
faddp
pop
inc
add
fstpl
mov
insl
or
aam
pop
sahf
dec
mov
mov
mov
mov
adc
mov
and
mov
sbb
add
add
add
movsb
pop
inc
pop
ljmp
sbb
ja
cmp
inc
addr16
in
fwait
loopne
mov
add
add
mov
cltd
mov
push
iret
xor
dec
je
lds
sub
pop
jecxz
add
mov
adc
mov
in
out
lods
data16
popa
jecxz
repnz
add
mov
sahf
mov
rolb
mov
and
fcomps
cs
xchg
add
push
loop
mov
outsl
jmp
pushf
mov
imul
aad
daa
xchg
rcrl
into
dec
ret
or
mov
add
imul
pop
mov
add
loopne
mov
ffreep
add
lods
lcall
or
adc
ret
inc
add
add
sahf
divl
and
mov
add
push
daa
out
mov
rolb
mov
repnz
add
xor
mov
mov
mov
add
add
mov
add
mov
add
mov
js
add
pop
std
test
mov
bound
mov
xor
mov
addb
jmp
aam
or
jg
mov
jmp
movb
lods
dec
std
dec
sbb
adc
jecxz
add
jae
add
inc
xor
icebp
xchg
or
loopne
mov
mov
inc
ret
dec
out
jns
push
ljmp
add
add
fs
out
push
push
frstor
jle
or
jae
lock
sahf
outsb
loopne
mov
mov
jle
cmpsl
adc
push
add
adc
and
mov
sbb
sub
cwtl
loop
mov
push
mov
hlt
mov
push
xor
inc
sbb
es
sbb
lds
mov
imul
adc
je
out
hlt
std
mov
jecxz
add
xchg
lret
mov
and
mov
adc
jge
add
mov
fstpt
pop
sbb
outsl
rcll
sub
cli
repnz
pop
leave
mov
in
mov
push
sti
xor
mov
das
cmpsb
inc
test
add
jno
fldcw
insl
sbb
mov
or
loop
mov
mov
ja
fmul
aad
call
inc
add
sahf
xchg
test
jg
outsb
pop
xchg
mov
or
addb
and
rolb
mov
dec
adc
out
add
addb
push
xor
mov
jne
repz
sbb
mov
mov
mov
scas
fsts
or
push
mov
mov
jne
repnz
adc
add
adc
mov
mov
jne
push
imul
shll
out
mov
add
pop
xchg
lods
push
lret
adc
cmp
add
push
mov
stos
push
ss
jle
lcall
inc
fisttps
movsb
loop
mov
cmp
add
pushl
inc
stos
add
sub
push
mov
fcmovnbe
scas
lods
xor
mov
jne
add
sbb
icebp
cmp
movsl
shll
add
mov
mov
add
lods
in
popf
push
lea
dec
mov
add
jnp
push
add
mov
and
cmc
mov
hlt
cs
jle
add
or
mov
jg
pop
test
int3
adc
sub
mov
int3
sbb
pusha
add
les
mov
mov
dec
lods
fiadds
mov
jmp
mov
jecxz
pop
pop
ret
inc
ds
jp
pop
popa
adc
xor
add
mov
imul
movsb
mov
jns
out
fcmovnb
pushaw
add
mov
int
inc
add
add
fcmovnbe
add
push
add
add
mov
xchg
mov
fcoml
jno
loopne
mov
xchg
jns
mov
rolb
cmp
mov
push
jle
lds
mov
mov
xor
pop
push
add
adc
sbb
mov
mov
add
frstor
push
sbb
mov
jbe
aaa
add
mov
cmpsb
lods
scas
and
mov
rorl
or
or
je
or
jbe
and
add
outsl
ljmp
add
sub
je
jge
lcall
add
mov
add
int3
repnz
mov
sub
mov
sti
cmp
popa
mov
mov
sub
or
mov
pop
loop
mov
or
test
mov
movsl
outsl
sub
bound
mov
into
lds
fstpt
add
aam
fwait
movsl
aas
pop
fsubl
pop
das
sahf
xchg
xchg
out
push
ja
add
test
jo
mov
arpl
ret
cmc
ret
cmp
cmp
mov
adc
mov
popf
or
add
add
xor
xchg
cs
push
sbb
mov
rolb
sub
fstpl
push
fbld
sti
inc
lock
mov
jnp
in
add
sub
insl
out
in
out
mov
dec
pop
jnp
scas
add
adc
jecxz
mov
lea
insb
jo
mov
dec
jg
sbb
out
push
insl
cs
mov
scas
push
addb
sub
out
es
mov
test
add
rolb
mov
pop
pop
dec
jp
inc
addr16
add
rcr
out
mov
in
cmp
into
fwait
loope
movsb
leave
xor
mov
mov
mov
mov
mov
scas
mov
mov
add
xchg
push
in
dec
jl
stc
xlat
jle
and
mov
mov
and
jmp
insb
mov
sub
leave
sub
add
sbb
add
bound
mov
out
add
mov
mov
adc
jo
mov
scas
popa
jno
add
adc
rolb
mov
mov
cs
adc
mov
pop
mov
xor
mov
nop
add
dec
pop
cmpsl
iret
idivb
fs
dec
test
jmp
imul
or
cmp
mov
jne
add
add
cmpsb
pushf
add
dec
fadds
add
mov
popa
or
lcall
add
mov
jg
jle
aad
je
ljmp
pop
inc
loopne
mov
jmp
std
cs
fs
jge
cmp
sub
cs
adc
add
cld
add
mov
add
dec
mov
mov
mov
sub
jb
mov
mov
adc
mov
add
pop
and
mov
mov
pop
loop
mov
cwtl
clc
insl
aas
dec
and
add
dec
cmpl
mov
orl
inc
mov
aas
xchg
mov
add
loop
mov
nop
add
xchg
mov
mov
or
scas
mov
mov
mov
outsl
std
xor
push
mov
ret
adc
call
movsb
sub
dec
jecxz,pt
mov
add
xlat
xchg
leave
cmc
mov
mov
add
mov
pop
scas
rolb
mov
ja
addb
test
iret
addb
mov
mov
mov
adc
jp
mov
loop
mov
add
jg
popf
lea
mov
mov
add
out
push
mov
jmp
mov
insl
pop
mov
mov
or
add
insb
rolb
push
mov
pop
cmp
add
xor
mov
jecxz
mov
ret
fwait
xchg
test
mov
jae
add
mov
sbb
das
mov
test
addr16
paddsw
xlat
ss
or
add
mov
push
das
lods
adc
arpl
lret
mov
inc
ret
pop
jmp
inc
lret
sub
push
add
aas
shll
rolb
mov
mov
jae
add
nop
add
imul
cmpsb
movsl
mov
add
mov
add
ficoms
or
std
scas
fdivl
mov
lea
insb
sbb
pop
in
adc
add
negb
lahf
bound
mov
in
test
sub
into
aad
add
add
adc
mov
mov
add
aas
imul
push
xor
mov
pop
or
add
sti
mov
xlat
rolb
pop
xor
mov
or
and
popa
sarl
cmc
mov
xchg
cltd
dec
mov
push
popf
bound
mov
pop
js
in
jmp
pusha
add
push
pop
repz
or
mov
mov
add
xchg
jns
add
ss
add
cli
insl
dec
jecxz
cli
inc
xchg
add
mov
iret
adc
xor
mov
xchg
adc
mov
idiv
repnz
dec
add
mov
pop
out
and
mov
sub
xlat
and
mov
enter
lea
add
insb
jb
mov
fs
add
pop
cs
mov
sub
arpl
add
enter
and
mov
imulb
sahf
nop
add
lcall
sub
pop
sub
adc
add
cmp
pop
scas
jb
mov
je
mov
inc
add
movsb
push
add
mov
add
push
bound
mov
shll
sub
lock
jb
mov
push
add
mov
mov
jbe
and
push
add
add
jnp
add
in
xchg
ljmp
mov
add
ja
inc
add
xchg
mov
mov
xchg
jne
mov
mov
inc
fwait
lcall
in
ss
xor
mov
cli
push
shll
push
xor
sbb
in
add
add
cli
int3
mov
mov
cltd
push
add
test
adcl
inc
xor
add
test
xchg
push
les
mov
add
mov
inc
add
jo
mov
stc
pop
push
xchg
add
push
add
mov
jae
int
les
in
xchg
jns
ficompl
xchg
rolb
and
add
push
sub
sub
stc
pop
push
lock
push
add
outsb
push
mov
sbb
fwait
xchg
sbb
int3
lret
push
in
adc
out
cs
rolb
inc
andl
test
jnp
mov
add
add
test
cld
xor
mov
add
mov
mov
add
cmp
clc
xor
add
imul
mov
cmp
aad
pop
ljmp
sbb
dec
sti
test
arpl
inc
rcll
mov
in
mov
and
lods
push
loop
mov
push
add
loop
mov
cmp
add
inc
inc
add
frstor
popf
sub
out
push
inc
add
stos
lods
inc
pop
cmp
push
adc
repnz
push
movsb
leave
inc
add
sub
mov
xchg
mov
mov
mov
inc
add
mov
cwtl
out
scas
insb
push
enter
ret
and
mov
add
insl
mov
push
adc
add
in
leave
push
dec
neg
inc
add
inc
mov
add
push
scas
outsl
pop
or
daa
sub
rcl
add
ret
sar
rolb
repnz
xchg
xor
mov
insb
bound
mov
cmp
out
icebp
aam
outsl
je
addb
iret
jb
mov
pop
icebp
jns
xchg
xlat
enter
mov
es
pop
mov
and
inc
mov
enter
mov
fdivl
aaa
fs
cmp
stc
test
cmc
xchg
pusha
add
mov
clc
ficomps
lcall
divb
sbb
pushf
movsb
jmp
in
inc
cmp
add
xor
dec
dec
mov
jecxz
push
frstor
jo
mov
jns
icebp
mov
mov
pusha
add
es
in
push
inc
adc
fcmovnb
add
test
xchg
lcall
sub
xor
mov
add
mov
adc
mov
cld
sbb
cwtl
pop
or
add
xchg
test
js
nop
add
mov
pushf
iret
lods
insb
movsb
adc
add
add
daa
inc
test
sub
in
sub
mov
xor
sbb
dec
rolb
mov
mov
mov
push
mov
add
xchg
cwtl
das
jae
data16
dec
mov
mov
ljmp
lods
out
aaa
addb
scas
loop
mov
stc
into
es
imul
sub
test
lods
xlat
or
add
lods
mov
jnp
outsl
movsb
mov
xlat
sub
jge
pop
cmp
adc
mov
imul
xchg
push
fsubrl
cld
faddl
imul
add
pop
leave
scas
and
bound
mov
push
adc
out
jp
imul
dec
push
push
std
add
fdivrs
fcoml
pusha
add
in
cmp
into
insb
push
add
cmp
push
mov
sub
mov
punpckhdq
and
addb
cld
sub
mov
add
test
popa
mov
lret
ljmp
mov
mov
mov
pop
in
std
ja
gs
and
add
push
add
enter
xchg
sub
addr16
cmp
mul
inc
add
repz
inc
and
mov
add
cmp
mov
shll
out
test
adc
mov
xchg
add
add
mov
add
ja
add
ljmp
mov
jl
cmp
ss
testl
xchg
mov
stos
daa
push
scas
cmp
outsb
imul
add
mov
or
repnz
sbb
leave
addb
in
jns
xchg
rolb
mov
shld
add
fbstp
jp
pop
out
xchg
sbb
sub
into
xchg
dec
ss
adc
pop
dec
add
add
jo
mov
test
dec
push
pop
sbb
mov
sub
nop
add
add
add
adc
mov
xchg
xor
mov
xchg
add
push
cs
addb
xlat
mov
mov
mov
add
fists
das
cmp
fimull
lds
sub
push
mov
rolb
test
sub
sti
mov
notl
mov
rolb
mov
test
jo
mov
mov
mov
add
cli
dec
pop
sbb
jno
pop
pop
pop
inc
and
aaa
js
jno
add
insb
stos
mov
inc
add
add
mov
dec
das
lds
jmp
add
nop
add
mov
shll
inc
cmpl
and
fcoms
mov
pop
int
add
or
subl
xchg
mov
xor
mov
test
mov
int
cmp
pop
cltd
pop
bound
mov
xchg
mov
push
sbb
mov
mov
mov
jl
add
mov
jbe
aam
push
jl
add
cwtl
cwtl
in
jbe
add
mov
jns
adc
mov
add
insl
icebp
rolb
mov
in
mov
les
std
add
movsl
add
xchg
stos
repnz
add
xchg
add
add
fwait
pop
fwait
adc
sub
aas
addr16
js
lods
mov
add
mov
cmp
stos
mul
add
and
in
decl
test
add
mov
lret
sub
mov
mov
add
dec
xchg
push
inc
imul
pop
mov
jg
adc
dec
add
mov
add
mov
fcom
sbb
mov
cmp
lods
addl
xchg
movsl
leave
lods
mov
add
xchg
dec
fstps
jl
dec
pushf
add
pop
mov
sub
mov
icebp
xor
mov
and
push
test
popf
test
xor
fs
add
mov
cli
scas
xchg
or
mov
inc
add
mov
mov
fstpl
adc
sub
add
xor
in
xchg
stos
int
add
mov
pop
mov
les
call
test
out
addb
movsb
stc
and
mov
mov
jp
cmp
lret
loopne
mov
mov
out
jne
push
addr16
push
pop
rolb
mov
dec
cmp
mov
arpl
inc
mov
pop
ficomps
lods
out
out
fst
outsb
inc
out
mov
or
lahf
push
fwait
mov
repz
loope
mov
cmp
sbb
pusha
add
xor
mov
sbb
xor
pop
lcall
cmp
mov
rcrl
dec
adc
adc
xor
loop
mov
and
add
pop
mov
lret
pop
cwtl
inc
jle
mov
inc
leave
rolb
mov
mov
add
cmp
adc
lcall
loope
pop
or
add
or
std
fistps
popa
dec
add
push
test
cmp
push
pop
add
add
fstps
mov
dec
mov
sbb
addb
negl
xchg
mov
mov
inc
pop
imul
xchg
lods
daa
mov
inc
add
sbb
xor
mov
lcall
add
mov
leave
mov
xor
das
jmp
add
jns
fmul
adc
mov
add
jmp
mov
sarl
push
add
add
mov
hlt
mov
sub
push
rolb
push
and
push
icebp
add
push
call
mov
push
sbb
dec
add
inc
adc
add
add
push
idivb
out
xchg
sub
sub
add
and
or
mov
mov
gs
jnp
push
push
push
adc
xor
jae
sti
cmc
xlat
mov
rolb
mov
push
add
out
je
int
jne
pop
movsb
push
inc
inc
add
lret
pop
outsl
leave
inc
jl
loop
mov
adc
dec
jnp
cmp
mulb
inc
add
push
int
push
sub
mov
add
xchg
mov
push
adc
mov
gs
sbb
dec
pop
repnz
or
test
add
stos
jno
clc
js
cmp
push
mov
mov
mov
icebp
pop
into
and
add
xchg
and
mov
add
ja
xchg
das
ja
add
mov
xchg
add
jae
aam
inc
pop
dec
mov
adc
mov
sbb
mov
jge
add
movsl
daa
pushf
push
mov
and
mov
add
mov
pop
ja
add
aas
mov
lcall
dec
test
dec
test
addb
inc
lret
pop
jne
xor
mov
cmp
push
sbb
mov
mov
scas
pop
repnz
jnp
cmp
jg
sbb
addb
movsb
push
xchg
inc
add
push
idivb
or
repnz
add
xchg
add
add
loopne
mov
lea
add
aas
jl
out
add
aaa
mov
xor
mov
pusha
add
sbb
les
rolb
mov
inc
add
inc
add
les
lods
add
and
mov
jne
add
out
adc
inc
add
ss
or
mov
test
mov
rolb
cmc
xor
mov
adc
mov
cwtl
decl
test
inc
or
mov
sub
shr
xor
add
aaa
int
test
ficoms
pop
inc
sbb
clc
add
jmp
mov
jle
ljmp
and
push
add
ljmp
mov
fcmovnb
enter
mov
push
scas
je
addb
push
cltd
mov
mov
mov
idiv
ds
mov
dec
sbb
punpckldq
mov
add
hlt
sub
stos
pop
adc
jbe
mov
mov
adc
popa
lods
bound
mov
add
mov
or
insl
cmp
and
sti
cltd
add
mov
mov
je
ss
loopne
mov
add
stos
lds
fdivrl
xor
mov
add
add
jb
mov
jecxz
mov
stc
mov
mov
cmc
movsl
subl
mov
add
pop
hlt
bound
mov
sbbl
and
mov
mov
cld
mov
add
js
jle
lock
and
mov
aaa
push
dec
pop
enter
lret
lret
adc
mov
pop
mov
negb
add
je
add
push
into
jl
add
and
pop
in
sbb
xchg
xchg
mov
add
lea
push
fsubs
cltd
sub
fwait
repz
mov
sub
addb
outsl
or
jb
mov
mov
shll
dec
dec
push
int3
mov
add
add
mov
outsl
fwait
lcall
mov
or
add
and
cmc
push
cmp
sub
pop
push
xor
dec
xor
test
add
es
rolb
dec
and
mov
add
inc
adc
add
add
sbb
out
dec
cmp
mov
clc
jo
mov
add
mov
or
aaa
es
jne
loope
stos
mov
negb
test
lret
add
cmp
pop
cli
out
jno
add
add
mov
or
nop
add
add
adc
lock
cwtl
and
mov
or
mov
iret
sbb
lods
lea
adc
add
aaa
pop
gs
dec
dec
mov
mov
fstl
mov
sub
movsl
int3
sbb
mov
adc
mov
adc
mov
or
pop
popa
mov
push
mov
mov
add
arpl
add
pushf
pop
loop
mov
add
sub
push
mov
bound
mov
mov
repnz
xchg
dec
xlat
add
mov
cltd
das
cmpsb
jecxz
mov
movsl
rolb
sub
jl
test
pop
lods
pop
in
jle
shrl
mov
mov
sub
repz
xor
sti
push
aaa
cmp
or
cmp
popa
mov
lods
add
xchg
add
mov
aas
mov
idivl
add
ret
scas
dec
lret
mov
addb
jp
add
sub
pop
adc
mov
aam
sub
and
mov
or
add
inc
cltd
push
add
xchg
ret
das
and
mov
std
mov
in
cmpsb
and
add
mov
mov
mov
not
test
mov
add
mov
add
jecxz
add
mov
mov
mov
cli
pop
sti
or
cmp
dec
in
mov
roll
pop
aam
cmp
add
cwtl
out
add
mov
and
insb
scas
sbb
or
addb
pop
loope
mov
mov
add
test
xor
loopne
mov
add
inc
addl
loop
mov
add
rolb
mov
sub
popf
inc
mov
mov
mov
mov
lods
or
mov
add
mov
out
sbb
jg
pop
mov
mov
cmp
inc
dec
addr16
mov
fwait
and
xor
mov
sub
data16
lea
lock
out
test
or
in
inc
add
lods
push
add
xchg
scas
mov
and
add
fsubrp
pop
inc
lret
rolb
mov
pop
lods
adc
mov
rolb
mov
add
mov
leave
pmaxub
mov
mov
lds
int3
add
popf
mov
adc
mov
add
push
repnz
dec
jle
lock
dec
cmpsl
test
std
in
pop
lcall
rcll
mov
add
fadds
mov
xor
mov
add
imul
mov
mov
mov
mov
test
xchg
add
loopne
mov
imul
stos
js
int
push
add
add
movsb
sbb
lods
push
add
add
fdivl
push
push
add
in
sbb
inc
add
xchg
mov
scas
push
add
push
nop
add
stc
and
add
add
loope
lock
mov
add
aaa
jne,pn
repz
xchg
sbb
jmp
inc
add
outsl
mov
ret
stos
arpl
jg
lock
and
mov
adc
add
cmp
xor
add
add
addb
xor
xchg
inc
shl
jns
cwtl
push
add
int3
push
xchg
push
inc
add
sub
add
test
mov
push
inc
subl
mov
add
in
jl
notb
adc
cmp
outsl
inc
add
jnp
push
mov
cli
mov
add
mov
les
sbb
add
into
cmc
lahf
insl
idiv
mov
inc
xchg
scas
addl
add
mov
mov
add
addl
mov
or
aaa
ss
rcll
mov
jno
fdivrl
push
ss
mov
ret
movsl
pop
cmp
mov
test
adc
add
pop
sahf
adc
mov
into
mov
andl
popa
lods
and
cmp
mov
xchg
add
adcl
sub
add
push
add
jbe
lcall
mov
add
xor
mov
mov
sbb
fs
scas
mov
sub
add
add
sub
xchg
addb
fistps
add
xchg
mov
addb
mov
jp
mov
inc
in
add
popf
mov
mov
cmpsl
jmp
add
mov
mov
stos
mov
push
jo
mov
mov
cmpsb
sub
or
add
stos
addb
cld
lods
mov
mov
jns
mov
subl
adc
mov
inc
add
add
mov
andl
cld
call
add
cmp
fisttps
jecxz
add
mov
mov
add
hlt
jge
imul
mov
insb
mov
add
aas
cmpsl
dec
mov
mov
mov
xchg
orl
add
mov
or
daa
cmp
add
jae
pop
sarl
arpl
add
add
pop
lds
adc
mov
pavgw
pop
repz
mov
rolb
mov
cwtl
mov
cmp
mov
fisubl
mov
cmpsb
sub
sub
push
ljmp
scas
rcll
xchg
insb
jne
test
adc
mov
mov
hlt
push
mov
mov
xor
aad
add
cmc
imull
push
insl
popf
cmp
cli
mov
dec
dec
xchg
inc
push
testl
mov
xor
mov
xchg
add
mov
mov
mov
add
mov
imul
pusha
add
pop
ja
push
int
push
addb
cmp
fistl
jae
add
xchg
add
add
aad
cmpsb
cmp
or
mov
arpl
add
adc
mov
cmp
xor
mov
inc
sbb
inc
mov
mov
mov
mov
add
jno
jle
dec
out
mov
mov
addb
adc
scas
int
insb
mov
clc
cli
xchg
xchg
mov
outsb
mov
cmp
in
out
sbb
sub
xchg
es
add
pop
test
push
add
in
pushl
jmp
inc
add
adc
mov
insb
test
add
add
in
add
pop
or
adc
mov
or
pop
sub
cld
rolb
mov
sub
rolb
imull
sbb
ja
add
mov
xlat
xor
and
mov
lods
mov
mov
insb
jne
mov
add
mov
pop
data16
fisttpll
mov
add
dec
or
addb
iret
ljmp
push
out
push
das
out
mov
cmpsb
cmpsl
lock
bound
mov
stos
pop
xor
mov
add
mov
arpl
mov
or
outsb
xchg
loopne
mov
add
and
xor
sbb
mov
mov
mov
and
mov
xchg
pop
movsb
setge
test
in
imul
add
push
fisttps
xchg
lea
mov
lret
je
fldt
lods
notl
add
insb
movl
add
mov
mov
jae
adc
mov
mov
mov
aam
push
mov
jl
and
mov
dec
out
aam
sbb
jbe
fisttpll
stos
hlt
pop
into
cmp
push
jnp
lret
in
or
dec
pop
mov
rolb
mov
das
dec
cmpsb
mulb
add
add
out
xor
mov
sbb
add
mov
add
sub
sbb
int3
ror
push
jp
je
and
mov
add
sbb
add
xchg
mov
add
inc
xchg
dec
dec
or
gs
scas
mov
jb
mov
js
fwait
rolb
mov
adc
cmpsl
lcall
push
insl
rolb
mov
popa
loopne
mov
push
add
jmp
int3
or
stc
pushf
imul
mov
add
add
mov
cmpsl
enter
sub
push
insl
inc
adc
mov
add
xchg
xor
or
cmp
imul
add
pop
cmc
or
add
xchg
lock
cld
pop
inc
add
push
roll
mov
mov
mov
add
mov
daa
outsb
cmp
ret
out
sbb
add
inc
adc
mov
push
or
xchg
inc
arpl
xchg
push
xor
mov
es
mov
add
icebp
arpl
cmp
outsb
adc
mov
out
push
loop
mov
pop
cmpsb
pop
in
pop
lea
loop
mov
mov
cmpsb
mov
add
mov
mov
pop
jne
repz
cmc
pop
inc
or
add
out
xor
add
in
adc
mov
jae
push
jmp
inc
add
xchg
mov
mov
in
inc
mov
sub
mov
add
mov
testl
mov
add
mov
mov
repz
test
imul
push
push
je
clc
mov
popf
pop
xchg
arpl
pop
je
mov
push
mov
cmp
pop
ret
and
cmp
imulb
or
add
enter
aad
dec
addr16
pushf
jne
add
mov
popl
stc
adc
mov
mov
mov
pushf
push
sub
jg
in
leave
add
add
dec
sub
lock
pop
xor
sub
and
mov
subl
jg
adc
xor
cmp
cmpsb
js
add
xchg
mov
pop
sbb
and
jmp
mov
add
jp
mov
sbb
ss
popa
ficomps
mov
rolb
jae
push
std
mov
pop
dec
std
ss
loopne
mov
pop
outsb
pop
and
jns
mov
or
jno
add
movsl
out
sbb
ret
icebp
xor
mov
jne
ret
sbb
dec
test
scas
adc
mov
shrl
sbb
or
lret
mov
dec
imul
test
add
dec
mov
insl
jae
jle
jge
into
dec
hlt
xchg
add
mov
test
adc
mov
add
repz
add
sub
push
leave
insb
and
js
out
jge
add
add
sbb
fstpt
or
loop
mov
add
xlat
mov
js
lock
add
push
pop
xchg
mov
add
or
cltd
and
cmp
int3
cltd
shrl
push
sbb
and
xchg
inc
nop
add
push
mov
mov
ss
mov
adc
mov
jg
test
inc
adc
add
pop
ds
loope
rolb
mov
cmpsl
xor
mov
and
pop
bound
mov
mov
addr16
sub
cltd
movsl
mov
sbb
add
mov
add
add
ret
sub
or
dec
cmpsl
dec
incb
sub
push
xor
cmp
inc
add
jecxz
pop
dec
sti
adc
mov
inc
lret
mov
addb
xor
mov
cmp
dec
icebp
jns
add
add
inc
add
addb
pop
in
cs
add
mov
movsl
xchg
pop
outsl
movb
int
sub
sub
icebp
xlat
mov
cmp
aad
ljmp
xchg
ja
pop
push
das
fidivrl
cwtl
sahf
std
adc
sub
add
mov
popf
scas
sahf
repnz
into
or
jo
mov
push
add
sbb
scas
sbb
repnz
dec
adc
outsb
fistl
lods
imul
mov
mov
add
dec
and
jbe
movsb
jmp
cmpsl
cli
fisubs
add
add
add
mov
mov
stos
or
int3
mov
xor
imul
imul
sub
push
pop
xlat
mov
add
jp
jb
mov
js
inc
add
dec
lahf
test
sub
add
add
mov
fsubs
add
adcl
sub
iret
xor
mov
neg
pusha
add
add
in
cmp
rolb
mov
cmpsb
pop
rolb
mov
add
popa
rolb
mov
mov
popl
fxch
int3
mov
jle,pt
xchg
add
lods
sbb
jbe
xchg
sub
add
mov
arpl
sbb
xor
lcall
add
mov
or
add
add
xchg
add
bound
mov
enter
cmpl
add
fisubl
mov
add
mov
or
add
sbb
scas
dec
jns
int3
inc
mov
and
pop
addb
xchg
addr16
sub
mov
pop
or
movsb
xchg
stos
cmp
mov
mov
add
cmp
cld
xchg
add
inc
add
dec
mull
mov
push
inc
dec
scas
int3
mov
lods
inc
movsbl
mov
and
mov
adc
mov
stc
mov
sbb
mov
add
orl
rcrl
dec
adc
mov
imul
mov
sub
mov
jge
out
test
sub
cwtl
sbb
stos
xor
mov
push
jnp
fwait
sub
inc
jecxz
or
out
std
and
mov
or
push
or
inc
iret
lret
and
mov
ret
fstps
pop
and
mov
xchg
ficoml
jle
sarl
pop
inc
add
mov
add
xchg
out
add
push
add
or
mov
std
das
and
push
xor
mov
in
sbb
push
mov
in
jae
xchg
fstpt
mov
or
mov
insb
jge
sub
test
mov
cmpsb
es
jp
xchg
jle
sbb
lods
loop
mov
das
mov
add
addb
loopne
mov
pusha
add
mov
cmc
push
rolb
mov
movl
fstpt
adc
