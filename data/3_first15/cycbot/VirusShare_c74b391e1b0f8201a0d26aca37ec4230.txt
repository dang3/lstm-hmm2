add
sbb
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
addb
addb
gs
push
push
push
push
push
mov
fiadds
add
cmp
cmp
cmp
cmp
cmp
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
and
and
and
and
and
add
add
inc
inc
inc
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
addl
addl
addl
and
and
and
and
and
add
add
cmp
add
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
leave
leave
leave
leave
leave
leave
jmp
inc
add
or
or
or
or
or
or
or
or
or
lods
lods
lods
lods
or
or
mov
sub
push
push
xorb
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
jmp
jmp
jmp
rcl
rcl
rcl
shrl
push
cltd
cltd
cltd
cltd
cltd
cltd
out
out
or
or
or
or
add
dec
dec
dec
dec
dec
dec
dec
dec
rcll
push
add
add
add
lea
lea
lea
push
push
push
push
push
stc
mov
mov
mov
mov
mov
add
add
sbb
jmp
jmp
jmp
and
and
and
and
and
and
and
and
add
add
addb
add
add
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jmp
jmp
jmp
jmp
jmp
add
into
into
into
into
js
js
js
js
js
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
in
in
in
in
in
in
ret
ret
ret
ret
ret
popl
add
add
jnp
jnp
jnp
jnp
jnp
jnp
jnp
pop
pop
pop
lods
lods
lods
lods
lods
lods
lods
es
es
add
add
add
lret
lret
lret
lret
shl
add
and
and
and
add
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
add
add
sbb
loop
add
add
add
add
add
add
aad
aad
aad
aad
add
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
mov
mov
mov
mov
jmp
jmp
scas
scas
scas
scas
scas
jae
jae
jae
jae
adc
adc
adc
adc
jle
jle
jle
jle
jle
jle
jle
jle
jle
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
mov
add
sub
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
in
in
in
in
in
in
in
in
in
in
in
in
in
add
inc
inc
inc
rcl
rcl
rcl
rcl
rcl
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
xchg
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
add
add
clc
clc
clc
clc
add
add
add
jns
jns
jns
jns
jns
jns
jns
jns
add
gs
add
add
mov
pop
pop
pop
pop
pop
xor
xor
xor
add
add
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
scas
scas
scas
scas
scas
scas
scas
cld
lahf
lahf
lahf
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
into
into
into
into
into
and
fwait
fwait
fwait
fwait
fwait
fwait
add
add
add
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
cmc
cmc
into
into
into
into
into
into
into
into
into
into
into
into
into
stos
stos
stos
stos
stos
stos
stos
jno
jno
add
sldt
add
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
add
add
add
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
xor
cli
cli
cli
cli
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xchg
addl
mov
mov
mov
or
or
or
mov
mov
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
sub
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
add
add
xor
xor
adc
adc
adc
adc
adc
adc
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
push
push
push
push
push
push
and
and
and
and
or
xchg
fidivrs
mov
mov
mov
mov
pusha
add
add
jg
add
add
add
add
add
fiadds
add
add
cld
cld
add
add
add
add
add
add
and
and
and
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
add
add
add
add
add
jnp
jnp
jnp
jnp
jnp
jnp
jnp
add
add
add
out
out
out
out
out
out
out
out
inc
inc
inc
inc
push
push
push
push
push
push
push
push
inc
inc
inc
inc
inc
inc
add
add
add
add
add
jb
test
out
out
out
out
out
out
out
out
out
out
out
loop
loop
loop
loop
loop
loop
loop
aaa
aaa
aaa
aaa
aaa
aaa
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
jne
jne
jne
jne
jne
jne
jne
jne
jne
pop
pop
pop
pop
pop
pop
pop
pop
mov
mov
mov
sub
sub
sub
sub
sub
sub
add
inc
inc
inc
inc
inc
inc
add
add
pop
pop
pop
pop
pop
pop
add
xor
rcl
rcl
rcl
rcl
rcl
gs
gs
cmp
add
mov
add
mov
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
and
int
int
int
add
add
mov
mov
mov
add
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
mov
and
and
and
and
and
and
and
and
and
and
add
add
dec
dec
dec
dec
dec
dec
dec
dec
dec
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
popa
popa
popa
popa
popa
add
add
add
arpl
arpl
arpl
add
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
jecxz
movsl
movsl
movsl
movsl
adc
adc
div
div
inc
inc
inc
inc
inc
inc
inc
xchg
outsl
outsl
outsl
outsl
push
push
push
push
push
push
push
add
add
add
add
cmp
or
or
or
or
or
add
add
add
add
adc
adc
adc
adc
sldt
add
add
add
push
push
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
cmp
cmp
cmp
cmp
cmp
cmp
jbe
jbe
jbe
sbb
sbb
sbb
sbb
push
push
push
push
push
push
imul
es
es
es
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
add
div
div
div
notb
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
add
in
in
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
ds
add
add
cs
int
add
add
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
mov
mov
mov
mov
jg
jg
jg
sbb
std
std
das
das
das
das
das
das
cltd
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
ret
ret
stc
stc
stc
stc
stc
pop
pop
pop
pop
pop
pop
pop
pop
cmp
cmp
cmp
cmp
cmp
cmp
pop
pop
pop
pop
jl
mov
mov
add
stc
stc
stc
stc
stc
stc
stc
stc
push
push
push
push
push
push
nop
nop
nop
nop
nop
nop
nop
xlat
xlat
xlat
aaa
aaa
aaa
aaa
aaa
aaa
jo
add
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
mov
mov
mov
mov
mov
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
repz
sub
sub
sub
sub
mov
mov
mov
mov
mov
mov
in
in
in
in
in
pop
pop
pop
pop
pop
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
in
in
add
adc
repnz
repnz
add
xor
xor
xor
xor
dec
dec
dec
dec
dec
dec
dec
dec
add
add
jo
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
add
and
repz
aas
aas
add
daa
daa
jne
jne
jne
jne
jne
jne
jne
jne
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
xchg
xchg
xchg
dec
dec
dec
dec
dec
dec
dec
div
dec
add
add
add
jns
jns
jns
jns
jns
jns
jns
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
imul
imul
add
add
jbe
jbe
jbe
jbe
add
add
add
add
daa
daa
daa
daa
daa
add
add
add
push
push
push
push
push
push
and
and
and
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
repnz
pop
cmp
cmp
cmp
mov
mov
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
add
add
enter
mov
mov
add
add
push
push
push
push
push
push
add
jne
jne
jne
jne
pop
pop
pop
pop
pop
imul
add
add
cs
divb
xchg
pop
pop
pop
pop
pop
pop
pop
pop
mov
mov
mov
mov
data16
and
mov
cmp
cmp
xor
mov
mov
movb
add
add
add
add
mov
mov
mov
mov
fcmovu
fiaddl
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
mov
add
mov
mov
mov
mov
add
add
xor
xor
xor
xor
arpl
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
je
jae
jae
jae
and
and
and
and
and
and
and
and
and
and
and
and
scas
scas
scas
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
add
add
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
inc
inc
mov
mov
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
add
add
xchg
rcl
rcl
rcl
rcl
rcl
rcl
rcl
adc
adc
jle
jle
jle
jle
push
push
push
push
addr16
sub
add
add
ljmp
ljmp
stos
stos
stos
stos
add
das
das
das
das
das
das
das
das
lea
lea
lea
ret
ret
ret
ret
icebp
icebp
icebp
icebp
icebp
icebp
add
add
or
or
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
xchg
xchg
inc
inc
inc
inc
inc
inc
inc
inc
add
add
add
adc
and
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
mov
mov
mov
mov
mov
jae
jae
jae
jae
jae
jae
jae
jae
jae
ret
ret
ret
ret
ret
ret
add
adc
adc
adc
pop
pop
pop
scas
scas
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
adc
push
push
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
mov
mov
add
add
pop
pop
and
jb
jb
jb
jb
adc
or
aaa
aaa
aaa
aaa
aaa
aaa
add
mov
mov
incl
add
add
add
inc
inc
inc
inc
inc
inc
lcall
lcall
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
or
or
or
or
or
or
mov
add
jo
jo
xchg
xchg
xchg
xchg
xchg
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
fcmovnu
fstpt
mov
add
aaa
aaa
pop
pop
mov
mov
mov
mov
mov
mov
mov
mov
mov
xchg
xchg
xchg
adc
adc
mov
add
adc
adc
adc
adc
add
push
push
push
push
push
mov
mov
mov
mov
mov
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
add
pop
pop
pop
pop
pop
pop
mov
aad
aad
aad
aad
into
sbb
sbb
sbb
sbb
sbb
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
bound
bound
bound
bound
bound
bound
bound
add
push
push
add
add
dec
dec
dec
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
js
js
js
js
js
js
js
js
mov
sbb
sbb
sbb
xchg
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
add
add
add
add
add
add
mov
mov
mov
mov
mov
mov
mov
mov
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
mov
mov
xor
xor
xor
xor
xor
jp
jp
jp
jp
add
cmpsl
cmpsl
xchg
xchg
lock
xor
xor
xor
enter
enter
stos
stos
stos
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
das
das
das
das
das
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
stos
stos
stos
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
add
add
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
fisttps
or
ja
adc
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
add
call
call
call
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fidivrl
aas
aas
aas
aas
aas
aas
aas
test
test
test
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
jbe
jbe
jbe
ljmp
add
nop
mov
mov
mov
add
movsl
movsl
movsl
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
jecxz
jecxz
mov
mov
and
and
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
cmpsl
cmpsl
cmpsl
popa
popa
jo
jo
jo
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
and
xor
hlt
hlt
hlt
add
and
fcmovu
fcmovu
add
add
push
push
push
push
mov
mov
push
push
push
push
push
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
ds
jg
jg
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
loop
loop
loop
loop
out
out
out
out
out
out
out
out
out
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
ret
ret
ret
ret
mov
mov
add
add
add
add
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
arpl
arpl
push
push
push
push
push
xchg
add
add
jle
jle
jle
add
add
cld
cld
xchg
xchg
xchg
les
nop
nop
cmp
add
ljmp
ljmp
ljmp
ljmp
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
gs
outsb
outsb
outsb
outsb
outsb
mov
mov
stc
incb
xor
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
es
jae
cmp
cmp
cmp
cmp
cmp
cmp
cmp
je
je
pop
pop
pop
pop
pop
pop
push
push
push
push
push
push
push
push
rol
div
div
div
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
out
out
out
out
out
out
fsubl
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
mov
mov
mov
mov
mov
mov
mov
xlat
xlat
xlat
xlat
xlat
notl
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
out
add
add
popl
add
add
add
sbb
sbb
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
sbb
sbb
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
mov
add
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
mov
aam
aam
aam
aam
aam
aam
add
lods
lods
lods
lods
lods
lods
lods
add
jmp
jmp
add
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
add
add
add
jb
rcrb
sbb
sbb
sbb
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
pusha
pusha
pusha
pusha
pusha
gs
push
push
push
push
push
push
push
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
incl
inc
inc
inc
inc
inc
inc
mov
jb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
bound
bound
bound
bound
bound
insl
insl
insl
insl
insl
xor
xor
xor
and
and
lret
lret
add
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
je
xor
jmp
jmp
div
test
int
int
int
int
int
int
int
int
int
int
mov
mov
mov
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
mov
cli
cli
cli
cli
bound
bound
bound
bound
bound
bound
bound
add
lret
test
and
and
and
and
add
insb
insb
insb
insb
insb
insb
insb
ret
ret
ret
test
test
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
rcl
rcl
rcl
rcl
rcl
rorl
addl
addl
mov
iret
iret
iret
or
or
or
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
adc
adc
adc
adc
adc
adc
adc
adc
adc
jp
jp
jp
mov
mov
mov
jb
jb
xor
xor
loopne
loopne
loopne
loopne
loopne
jp
jp
stos
stos
sbb
sbb
int
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
mov
mov
in
in
add
add
add
add
sbb
sbb
sbb
jge
jge
jge
rcl
rcl
rcl
rcl
rcl
shrl
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
add
add
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
add
sbb
sbb
sbb
sbb
sbb
and
and
and
and
and
and
imul
imul
imul
imul
imul
imul
imul
pop
pop
pop
pop
pop
add
add
mov
mov
add
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
in
in
in
in
in
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jbe
jbe
add
add
add
add
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
sti
sti
sti
sti
add
add
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
xor
xor
test
test
test
test
test
test
push
push
push
push
div
div
div
div
lret
mov
psubb
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fisttpl
dec
dec
dec
dec
dec
loope
loope
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
lcall
incl
add
sldt
add
add
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
xor
xor
xor
add
sbb
sbb
adc
adc
adc
lock
add
add
ret
ret
ret
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
mov
xchg
add
add
mov
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
mov
pop
pop
pop
or
or
setl
and
and
and
and
and
and
and
and
and
add
add
add
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
add
add
add
add
ljmp
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
or
rcl
roll
ja
ja
xor
xor
jmp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fnstsw
jle
jle
jle
jle
jle
jle
jle
jle
sub
fcomp
out
out
jle
jle
jle
jle
add
add
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
add
inc
inc
inc
inc
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
xor
xor
out
test
test
add
iret
jmp
add
add
add
add
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
add
add
add
incl
adc
adc
adc
adc
adc
add
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
out
out
out
out
out
out
out
out
adc
adc
adc
adc
add
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
add
es
xor
xor
xor
xor
add
add
add
ret
mov
add
add
enter
add
int3
xchg
negl
pushf
push
xor
cmpsb
add
mov
dec
pop
sbb
js
divl
add
imul
push
mov
jbe
add
ret
xor
gs
inc
and
add
rcrb
or
add
mov
mov
fsubrl
sbb
into
repz
lret
fmul
jle
jle
add
cmpl
xor
fdiv
mov
adc
out
pop
roll
dec
inc
push
bound
call
or
add
mov
xchg
add
add
arpl
lret
push
jns
dec
push
jmp
jl
aad
js
jl
addb
add
xchg
lcall
add
sub
mov
add
xchg
inc
shll
add
shrb
add
loope
add
add
add
sub
add
imul
dec
sub
nop
cmp
or
add
add
pop
sbb
push
add
mov
add
add
outsb
and
add
mov
and
add
ja
out
ret
mov
add
mov
in
mov
jns
sbbl
add
or
add
mov
add
adc
xor
shl
aas
insl
or
lock
mov
xor
add
mov
dec
mov
add
dec
movsl
inc
ds
dec
testl
or
add
adc
inc
mov
add
ret
inc
xchg
add
mov
dec
or
add
mov
into
mov
mov
dec
mov
xor
add
add
shrb
add
add
add
jae
sub
add
sub
in
add
dec
movsl
pop
movsl
mov
mov
add
pushf
loop
test
add
stos
in
xor
jle
add
push
add
add
push
jne
pusha
sahf
ficoml
pop
data16
js
add
pop
bnd
mov
cmp
push
add
jecxz
add
into
cmp
fdivs
mov
pop
xorl
hlt
jg
popf
sub
add
insl
dec
scas
std
out
iret
adc
xchg
cwtl
clc
xchg
lock
insl
cld
ja
js
xchg
enter
insb
lods
add
int
in
and
add
inc
rcll
add
outsl
arpl
sbb
insb
aad
add
jmp
adc
mov
stc
add
add
or
add
add
and
inc
push
imul
sarb
sub
add
add
enter
add
jg
add
addr16
or
ds
aad
cwtl
cmp
aad
sbb
add
sub
add
add
imul
leave
fisubrl
sub
add
push
add
dec
mov
add
nop
sub
and
add
daa
into
int
ja
dec
push
pop
clc
and
add
jno
add
xor
fldcw
lret
add
test
out
daa
pop
and
das
nop
repz
scas
add
cld
add
cmp
add
add
mov
add
pop
mov
cmp
mov
add
add
inc
fisubrs
cltd
inc
add
movsl
inc
jno
add
jnp,pt
add
rolb
int3
or
add
add
mov
shlb
pop
fcmovnu
sbb
add
dec
push
out
pusha
mov
cmpsl
hlt
push
add
pop
les
insb
mov
xor
call
lahf
scas
add
pop
int
lcall
add
cmpsb
add
scas
add
xchg
cltd
jmp
lret
cmp
jmp
int
shrb
add
mov
add
push
push
and
in
mov
dec
push
test
xchg
inc
or
add
imul
mov
add
addb
js
mov
add
jo
insl
push
pop
into
mov
add
inc
jg
inc
das
sub
add
push
add
enter
add
add
popf
add
add
pop
dec
pop
xor
cmp
push
lret
push
out
bnd
cmp
mov
and
add
pusha
ret
arpl
sub
jmp
add
xchg
push
xchg
popa
jle
fmuls
add
jg
sub
cmpsl
mov
stos
and
add
mov
fidivs
fucom
and
add
rcll
add
add
push
add
or
repz
jnp
mov
pop
add
add
adc
enter
cmpsl
push
inc
popa
fwait
mov
addr16
out
inc
mov
jge
bound
add
ret
ret
div
iret
push
in
mov
movsb
add
mov
add
mov
mov
adc
add
ljmp
add
gs
mov
add
shrl
add
ja
pop
inc
aaa
xor
pop
xchg
sub
mov
iret
xor
jb
lods
push
add
xor
inc
inc
jp
addr16
pop
js
push
xchg
pushf
add
sbb
mov
jl
push
jmp
cmc
xchg
xor
or
outsl
enter
add
add
push
add
xchg
pop
arpl
inc
mov
fwait
outsl
mov
dec
ljmp
lods
push
mov
ret
jmp
jl
push
imul
insl
popa
outsb
xor
inc
sarb
ret
enter
add
add
mov
loope
add
movsb
add
xor
test
add
or
add
ret
add
add
add
fildll
add
sub
add
test
add
cli
push
mov
add
dec
dec
out
mov
add
out
insb
xchg
jno
push
add
add
cld
in
repz
fucomp
add
add
xchg
inc
or
xor
push
outsb
lods
call
in
jle
jo
cmp
dec
sub
add
mov
mov
pop
xlat
movsl
sbb
add
mul
dec
dec
and
add
addr16
mov
xchg
fprem
ss
add
cld
lea
lret
xor
std
xchg
test
jecxz
loopne
bound
fwait
push
sub
add
push
test
add
mov
call
sbb
jmp
jecxz
pop
push
jp
mov
lods
push
adc
add
cld
xchg
dec
adc
mov
and
clc
mov
jecxz
repnz
push
push
add
push
call
add
pop
xor
jp
movsb
add
xchg
and
inc
clc
xor
out
pop
lea
sub
lahf
pop
lods
add
sbb
cwtl
outsb
mov
pop
je
rolb
add
jo
or
add
jge
add
push
pusha
pop
xchg
pop
xor
aas
mov
subl
mov
cmpsb
add
pop
ds
pop
and
add
pop
inc
sarl
add
icebp
jno
aaa
in
iret
mov
jge
mov
loope
lret
enter
xchg
pushf
test
xchg
add
add
daa
sub
add
mov
xor
or
popf
jle
add
add
mov
fbld
aam
add
adc
mov
inc
inc
xchg
lret
mov
loope
add
or
mov
mov
add
loope
sub
insl
fidivrl
xchg
loop
and
add
add
les
sbb
jb
dec
icebp
and
add
aaa
push
add
sti
xchg
add
xor
add
pushf
sti
cmpsl
pop
add
in
dec
fwait
cmc
into
inc
roll
add
mov
jp
ja
ret
bound
addr16
stc
addb
or
add
add
inc
pop
rcrb
cwtl
in
sbb
ret
mov
enter
int3
add
add
cmp
sahf
mov
imul
mov
mov
add
addb
jne
repnz
push
clc
dec
ja
xchg
mov
add
jns
mov
sbb
mov
add
loop
daa
fnstenv
mov
repz
pop
mov
xchg
adc
imul
or
add
std
cwtl
mov
loopne
nop
test
add
les
daa
inc
pop
out
add
pusha
xor
test
add
cmp
ret
add
imul
xchg
add
hlt
push
hlt
sbb
jg
mov
xor
jne
jne
or
dec
mov
xchg
add
insb
cltd
push
adc
inc
xor
jge
add
add
sub
add
test
add
insb
jp
mov
cld
ljmp
ss
or
lret
cmp
or
add
inc
or
add
adc
clc
fsubl
das
test
in
cltd
aam
movsb
add
lods
add
xor
add
fisttpll
sbb
les
inc
daa
imulb
call
and
add
aaa
addb
adc
add
and
add
nop
test
mov
push
or
add
test
push
inc
inc
test
add
xchg
jb
add
jo
cmc
pushf
daa
ret
jmp
jae
loopne
out
xchg
leave
mov
sbb
dec
loop
sbb
movsl
cmp
or
add
xor
jo
pushf
ljmp
push
lea
sarb
pop
daa
popf
xchg
js
or
add
sbb
or
add
mov
add
add
or
add
fnstsw
xchg
ljmp
xor
xorl
lret
jmp
push
stos
xlat
mov
add
inc
lods
inc
sti
push
outsb
add
add
out
mov
cld
scas
mov
add
arpl
jbe
add
fcomps
xchg
lea
int
jle
and
mov
bound
mov
mov
push
inc
mov
add
add
aas
addb
mov
add
adc
add
jnp
xor
sub
add
inc
div
sub
leave
outsb
insb
cmpsl
addb
leave
adc
outsb
mov
add
outsl
sub
cmp
fmulp
dec
or
add
xchg
adc
add
fcmove
pop
mov
add
xchg
xor
xlat
repz
ret
sub
aad
cmp
movsb
add
fnsave
mov
and
lock
and
lea
jns
pop
inc
rcll
push
push
hlt
outsl
scas
add
sbb
add
jno
cli
repnz
cld
xor
rcl
inc
fwait
sti
lods
test
in
rorb
mov
aas
std
sbbl
mov
add
out
jecxz
mov
test
mov
sub
add
inc
into
sahf
pop
inc
stc
sbb
lret
ret
push
dec
fstl
ds
xchg
xor
mov
mov
cmp
imul
aad
add
add
into
stos
add
add
lods
add
jb
out
cmovge
daa
and
paddusw
sahf
or
nop
sub
inc
xchg
mov
mov
add
cmp
jmp
add
add
mov
cmc
pop
loope
cmp
add
jl
xor
cmp
add
add
jns
inc
push
fnstcw
push
rcr
jmp
jg
add
or
add
mov
ret
add
add
test
add
mov
cmp
inc
dec
mov
add
std
mov
and
xchg
fisttpl
add
in
add
and
add
add
add
cmp
loope
sub
mov
push
add
shll
pop
test
add
iret
mov
add
insl
adc
popa
pop
call
mov
sbb
push
dec
sub
add
mov
mov
stos
mov
fistpl
xchg
daa
inc
dec
mov
movsl
inc
mov
pop
insl
dec
mov
test
dec
mov
pop
mov
rolb
add
idivb
pop
jg
cmp
das
outsl
clc
jle
cmp
adc
pop
aam
and
add
clc
sub
add
jge
add
push
or
add
mov
jne
ret
mov
and
add
xchg
and
add
test
add
add
dec
or
add
cmc
iret
pop
pusha
nop
jae
mov
mov
push
stc
pusha
cmpsl
cmp
repnz
jg
imul
call
test
test
cmp
xchg
push
adc
sbbl
add
ret
popa
ret
pusha
mov
cli
iret
jb
xchg
mov
xchg
mov
in
adc
insl
cmpsl
sbb
lods
add
push
jmp
cmpsl
jno
ja
push
fisubl
aas
push
jle
fstpl
inc
pop
mov
imul
lds
sahf
inc
mov
add
xchg
xchg
icebp
xor
or
add
add
adc
lahf
xor
mov
jno
add
ds
fsubl
mov
jbe
out
data16
into
int
test
je
push
outsl
jp
inc
adc
xchg
mov
daa
idivl
push
inc
xchg
jp
femms
add
daa
and
jp
cmp
loope
daa
fnsave
out
jg
pop
sbb
xchg
ds
dec
mov
in
sti
jb
dec
dec
lcall
cmc
test
pop
jns
iret
pop
xchg
push
add
mov
add
lods
add
imul
mov
add
mov
sbb
sahf
imul
add
out
jecxz
movsb
add
lock
sbb
jno
inc
jnp
or
add
xor
addr16
out
ds
xor
add
testb
out
les
nop
mov
push
add
adc
dec
cli
pop
push
dec
aaa
pop
lahf
dec
mov
repnz
add
dec
pop
cmp
pop
arpl
push
xchg
add
fdivrs
dec
adc
add
add
or
add
xor
subl
sbb
pop
pop
cld
out
jae
add
out
pop
out
and
add
daa
test
fsub
arpl
out
test
stos
aam
addb
scas
push
adc
popa
clc
repnz
mov
cmp
pop
push
xlat
movsl
mov
fisubl
stos
add
add
add
rcr
xorl
lret
sbb
cmp
xchg
nop
insl
out
or
add
cld
jl
ss
sbb
fstpl
pop
ds
fadds
fstpt
jmp
les
test
jmp
insb
into
daa
mov
cmpsl
insb
mov
mov
sbb
add
push
loope
cli
into
sbb
test
add
fisttpll
add
xor
stos
add
pop
or
loop
jae
pushf
scas
adc
mov
loopne
or
fsts
pop
cmp
dec
lahf
loop
xor
jns
aam
add
clc
stos
ljmp
jo
mov
lods
leave
mov
xor
dec
push
mov
and
add
and
add
hlt
imul
add
add
sbb
push
mov
add
pop
addr16
lods
cmp
mov
add
add
xchg
inc
or
into
jecxz
jp
cwtl
ljmp
adc
pop
insb
adc
add
daa
shl
sub
add
push
ret
pusha
push
push
add
popf
add
inc
sub
add
imul
or
mov
les
inc
stos
add
js
add
cmpsb
add
xchg
ja
fdivr
jl
cwtl
jbe
sub
add
adc
mov
imul
cli
mov
add
dec
xchg
loop
leave
pop
lds
add
inc
das
add
add
adc
inc
mov
mov
aam
stos
inc
sub
add
mov
add
in
xor
add
xor
pop
push
add
add
add
jbe
add
call
add
cmc
pop
mov
loopne
out
add
or
add
and
xor
or
add
mov
pop
push
shlb
sbb
inc
mov
jge
jg
add
jmp
cmp
add
add
or
cwtl
pop
outsb
xchg
mov
mov
sub
fwait
cmp
add
insl
les
sub
xchg
roll
add
mov
xchg
cmp
in
mov
mov
push
push
sbb
int3
cwtl
inc
test
xchg
test
add
sarb
add
add
add
ja
daa
std
adc
add
nop
pop
dec
jl
jg
pop
stc
loopne
inc
pop
jle
xor
add
push
mov
add
mov
shll
shll
mov
aaa
mov
add
xchg
dec
sub
add
aaa
dec
in
push
dec
fidivrs
xor
mov
add
dec
add
add
add
mov
add
inc
icebp
cld
fxam
fidivl
imul
lds
push
push
sahf
movsb
add
dec
dec
mov
mov
adc
inc
repz
mov
xchg
sbb
sub
scas
add
mov
imul
cmp
xchg
add
movsl
push
xchg
idivl
sub
fldt
jmp
sub
out
sbb
clc
sub
add
jne
stos
mov
xchg
ret
xchg
add
and
add
pop
add
adc
push
aad
stos
jecxz
shrb
addb
cmp
dec
add
or
xor
mov
pop
jne
push
mov
addr16
jmp
push
cmp
into
cmp
ficompl
ret
and
aas
cwtl
push
sub
xchg
add
inc
mov
add
or
add
add
mov
add
cmc
jle
push
dec
push
movsb
add
dec
in
inc
jmp
jge
and
add
test
add
out
ret
jmp
mov
jae
dec
cmc
jg
cmp
mov
jmp
jns
sub
add
addr16
cmp
push
pop
add
cmc
xor
mov
add
push
add
cwtl
daa
and
add
mov
testb
pop
sub
add
push
jo
add
mov
add
dec
pop
jne
add
mov
mov
adc
xor
cltd
stos
add
mov
add
addr16
ret
cmc
push
add
pop
addb
mov
mov
icebp
push
cwtl
lcall
aam
iret
mov
xor
repnz
pop
jns
jmp
adc
add
push
xor
adc
or
add
pop
cmpsl
jmp
add
scas
dec
shl
shl
and
add
stc
cltd
popf
adc
push
decb
xchg
popf
fisttpl
pop
mov
add
mov
or
inc
addb
in
xchg
sahf
xor
movsb
add
inc
in
dec
aaa
loop
jge
add
lahf
addb
dec
add
push
add
add
add
pop
rorb
add
loopne
insb
pusha
int
xchg
dec
hlt
out
mov
and
add
push
inc
xlat
fcoms
jno
push
add
fiaddl
fcmovnbe
arpl
mov
aas
cwtl
mov
add
sbbl
add
cmp
dec
mov
mov
xchg
inc
pop
mov
jnp
mov
in
scas
add
jl
shrb
xor
in
js
mov
add
add
add
add
cmp
xor
divb
jns
xlat
outsl
fistps
les
sub
add
add
jns
imul
and
pop
fnstenv
sarb
out
fmull
add
adc
aad
arpl
std
mov
aad
mov
xor
aam
das
pusha
pushl
inc
push
mov
mov
add
movsl
mov
pushf
stos
into
jl
in
add
add
outsb
clc
cmpsl
icebp
dec
and
aas
lcall
or
add
daa
popf
mov
push
lret
add
jb
xor
leave
jno
xchg
dec
in
mov
out
dec
sub
insl
xor
mov
cmpsl
jb
loope
add
addb
adc
mov
add
xor
jne
test
add
xchg
pusha
add
add
xchg
jae
or
add
js
add
xor
sbb
mov
flds
xchg
pop
mov
add
xor
repnz
lahf
lret
mov
jb
mov
loope
gs
add
mov
mov
sbb
mov
dec
dec
movsb
add
lahf
sub
add
mov
add
jle
pusha
je
pop
lea
in
mov
dec
in
and
or
add
add
cmc
fs
or
add
data16
popa
outsb
pop
sbb
jecxz
sub
add
das
das
push
aas
cmp
xor
push
popa
pop
lods
add
sub
add
add
and
add
mov
push
push
ljmp
jecxz
jae
jp
mov
dec
aas
pop
inc
gs
aam
pop
jg
add
lea
cmp
add
out
std
jo
push
and
add
out
out
jns
add
mov
pop
mov
lcall
fiadds
mov
test
add
add
mov
pop
hlt
shlb
mov
push
rolb
cmp
add
cmp
mov
push
dec
ljmp
lods
fmul
sub
pop
stos
lods
xor
add
in
dec
ret
adc
add
jb
xchg
insb
lds
inc
xchg
inc
lcall
xchg
and
add
mov
lahf
enter
sub
bound
fs
add
push
jne
mov
xchg
xchg
test
add
in
push
jge
xchg
xchg
pop
sub
mov
loope
xor
and
mov
lods
add
or
sub
add
scas
add
add
add
and
add
out
and
add
sar
jle
rorl
add
inc
jg
roll
adc
add
cmp
sub
add
movsb
add
add
sub
add
jb
add
cmp
inc
ja
add
add
xor
xchg
insb
xor
add
add
add
pop
jecxz
fnsave
sbb
rcr
lahf
cmp
test
add
add
jl
add
arpl
add
sti
fcomp
mov
cli
shll
sbb
clc
test
add
mov
enter
cmp
xchg
fs
xchg
pusha
sub
add
popf
dec
or
add
xchg
sbb
adc
cmp
bound
jl
hlt
cmp
fldcw
sub
add
and
cmp
sbb
mov
add
mov
add
push
mov
adc
repz
add
or
mov
jae
je
push
add
arpl
pop
cmpsb
add
test
adc
push
popf
out
adc
cmpl
cltd
data16
icebp
sub
add
add
mov
enter
adc
add
call
add
mov
out
mov
lock
cmc
dec
mov
push
or
sbb
cmp
add
xor
test
mov
lret
or
in
dec
adc
leave
jnp
pop
ret
and
je
test
add
dec
dec
loopne
push
dec
shll
add
adc
inc
sbb
add
jae
movsb
add
lcall
sbb
xor
add
jns
sbb
push
hlt
cmc
xchg
lods
add
mov
jno
push
addr16
add
cwtl
xorl
lds
add
jae
sub
add
add
outsb
cmp
and
loopne
add
ja
or
mov
inc
mov
cmp
jo
jg
add
dec
out
xlat
lcall
add
std
and
add
add
pop
xchg
mov
add
add
pushf
sub
add
lcall
add
aas
lcall
sti
pop
mov
in
pop
popf
call
add
das
loop
mov
inc
dec
shll
dec
aas
hlt
push
adc
inc
out
add
jns
push
jg
cmp
xchg
lods
lret
xor
inc
test
pop
movsb
add
enter
pop
adc
add
add
inc
dec
adc
jne
mov
add
dec
jae
jmp
loopne
xor
sbb
and
add
dec
jecxz
add
loopne
add
xchg
sbb
idivl
add
lock
enter
les
add
pop
mov
add
push
fmull
add
push
pushl
in
fsubs
loopne
add
mov
add
push
int3
cmc
int
and
add
inc
mov
lret
jno
or
add
std
inc
adc
add
jecxz
sbb
or
out
in
jmp
mov
arpl
mov
stos
add
shl
or
push
and
add
push
mov
rclb
sti
addr16
dec
xchg
mov
add
clc
fs
imul
or
add
add
stos
push
add
dec
xchg
adc
mov
push
xchg
jae
push
fcoms
outsl
and
xchg
mov
icebp
jo
add
divb
lret
test
add
add
nop
jge
je
sub
add
pop
int3
aas
xor
setle
lcall
fsub
xchg
addb
loopne
ret
dec
xor
jmp
push
add
jge
sbb
inc
mov
jecxz
in
push
add
pop
insl
xor
add
adc
inc
and
add
dec
icebp
adc
and
add
add
xor
in
pop
lods
add
push
add
mov
arpl
sbb
jbe
mov
jmp
shll
jge
jb
add
iret
jp
fmuls
xchg
call
jg
push
sbb
add
andl
xchg
push
and
add
pop
sub
jbe
add
mov
add
mov
jns
add
lods
mov
mov
lods
add
xchg
outsb
mov
push
xchg
adc
lods
jne
push
pop
ljmp
je
shll
add
insl
push
sub
add
dec
imul
addr16
jp
add
mov
add
mov
mov
daa
mov
out
add
lock
ret
fidivl
ja
mov
add
sub
add
loopne
inc
pop
ljmp
aaa
sahf
pop
outsb
add
add
insl
das
lsl
mov
repnz
xchg
xchg
mov
add
pop
hlt
popa
push
fildl
mov
or
add
movsb
add
lock
push
popa
in
aad
add
and
add
loopne
addb
jmp
addb
mov
adc
cld
push
loopne
xchg
jae
inc
xchg
pop
cmp
jge
cwtl
add
stc
dec
sbb
push
mov
add
sub
jg
mov
imul
test
push
sub
sbb
lcall
or
add
add
push
xlat
sub
add
ss
add
sub
add
jp
cmp
push
clc
jo
stos
add
les
bound
pminub
movsb
add
cmp
pop
int
pop
jo
add
add
mov
ficomps
dec
outsl
xchg
and
int
inc
or
mov
out
jae
jp
ljmp
ret
adc
dec
inc
enter
mov
jg
xchg
and
inc
jecxz
scas
roll
add
add
jbe
pop
cld
clc
xor
in
push
repnz
cltd
stos
xchg
pop
loop
mov
add
push
lea
leave
inc
xchg
orl
stos
dec
scas
mov
pop
and
in
mov
out
and
es
lods
sub
sbb
mov
mov
sub
movl
lea
push
call
sub
add
and
mov
mov
and
test
je
mov
push
push
cld
call
test
jne
mov
add
push
push
push
push
call
test
jne
xor
push
ret
lea
andl
push
push
and
call
push
cmp
lea
jne
movzbl
or
pop
mov
add
not
cld
imul
and
jne
call
rorb
jmp
cmp
mov
add
ret
mov
mov
mov
inc
or
lea
lea
add
lea
shr
lock
sub
and
je
push
mov
jmp
fs
mov
cmp
test
sub
add
into
loope
sbb
loope
int
mov
add
adc
cltd
xchg
sarb
inc
icebp
add
mov
add
imul
cmp
add
pusha
adc
imul
add
push
add
adc
lahf
pop
fsubrl
add
pop
aas
icebp
in
aaa
in
repnz
fmull
lret
fmul
xchg
pop
hlt
out
lea
xchg
jp
xor
hlt
jge
add
xchg
add
sub
add
add
add
orl
mov
ret
pusha
and
add
sub
sti
and
add
test
add
stos
fdivs
icebp
sub
stos
add
push
add
data16
adc
adc
add
add
sbb
stos
insl
adc
fildll
outsb
cmp
clc
sub
add
xor
mov
mov
add
outsl
shlb
jge
mov
js
xor
mov
adc
adc
cmp
add
mov
fs
sub
add
test
inc
inc
mov
push
lock
divl
jno
das
jae
add
inc
arpl
add
and
sub
imul
addb
fnsave
test
add
in
push
add
sahf
inc
pop
mov
sbb
adc
inc
in
stos
mov
add
aaa
jbe
mov
add
adc
add
dec
pop
dec
aam
add
sarl
jnp
out
mov
push
popl
cmp
add
add
cmp
lret
jns
push
inc
sub
adc
add
inc
lods
lret
cmc
push
add
or
ret
xchg
xchg
popf
ss
inc
mov
adc
leave
movb
dec
xor
add
pop
out
mov
pop
and
add
scas
mov
sar
dec
mov
add
in
and
add
xchg
add
or
add
divb
pop
insb
rol
push
push
add
loop
add
dec
scas
enter
rolb
mov
add
adc
adc
iret
sub
add
add
mov
ss
dec
scas
add
or
add
mov
pop
or
add
add
add
and
mov
add
xchg
jae
lret
add
jecxz
xchg
add
loop
xchg
mov
inc
stos
add
and
pop
cmc
inc
sub
push
rorl
inc
mov
jae
cli
hlt
test
add
inc
cli
fs
add
pop
andl
add
push
push
pop
or
add
add
add
rcrb
and
add
pop
lea
loope
stos
leave
dec
push
ja
into
adc
push
dec
and
add
into
push
mov
stos
mov
add
imul
add
mov
insl
push
daa
pop
push
add
dec
sbb
stc
cmp
mov
cwtl
mov
jecxz
mov
ss
loopne
sti
js
sbb
fs
mov
add
add
test
add
test
pop
aaa
push
push
add
mov
pop
mov
add
jnp
dec
push
or
shlb
out
pop
cmpsl
int3
mov
scas
or
sub
add
mov
add
add
push
lret
mov
mov
ds
and
add
insb
fisttps
pop
outsb
mov
mov
xchg
mov
addb
add
adc
add
lahf
jecxz
iret
mov
add
ja
add
sbb
cld
add
add
call
xchg
aas
frstor
cmp
sub
add
sbb
loopne
add
leave
popa
xchg
jmp
add
mov
out
add
dec
cmp
leave
push
addr16
mov
dec
jecxz
pop
popa
cmp
lock
rcrb
js
lods
add
xor
add
dec
loopne
sbb
xchg
xor
aad
rolb
popf
xchg
mov
add
aaa
pop
push
add
loope
mov
or
add
add
and
add
xor
test
jmp
mov
and
adc
sbb
ret
movsb
add
sbb
cmpsl
jg
int3
rol
pop
sarb
add
pop
add
add
xchg
add
add
add
xor
or
sbb
mov
lahf
add
fsubs
xchg
pop
sbb
shll
add
and
pop
data16
add
add
mov
inc
outsl
lods
add
add
test
add
add
shll
fistps
and
add
iret
gs
ljmp
xor
add
add
and
daa
mov
add
add
popf
add
add
ljmp
mov
add
mov
add
clc
push
inc
movsb
add
rorl
dec
loope
jno
mov
adc
add
add
cmp
call
cmp
cmp
pop
sbb
lods
adc
inc
rolb
xor
cmp
mov
add
insl
repnz
xlat
pop
dec
in
mov
in
mov
jns
add
in
pop
rorl
or
add
dec
add
scas
fidivrs
mov
bound
add
mov
arpl
lock
inc
pushf
xchg
mov
add
and
add
repnz
int3
mov
xor
sub
add
arpl
add
lahf
push
popf
out
roll
in
fs
data16
add
mov
add
ret
insl
xor
add
add
fistpl
push
mov
add
inc
aam
add
fmulp
mov
dec
lret
pop
mov
cli
inc
ljmp
add
add
xchg
mov
mov
mov
add
jae
mov
cmp
pop
push
mov
add
add
add
add
dec
adc
nop
mov
and
add
test
sbb
add
add
mov
clc
xchg
xchg
add
inc
sarb
or
add
add
cmpsb
add
repz
jo
les
inc
fstpt
push
mov
add
loopne
push
xor
stc
imulb
add
mov
scas
add
cli
mov
in
pop
add
scas
add
mov
add
out
pop
mov
lahf
scas
add
mov
or
add
add
push
add
jnp
add
jle
je
insl
mov
lea
add
push
pop
mov
add
loop
mov
xchg
add
mov
mov
add
or
add
pop
popf
jb
sarl
loope
add
cld
ret
movsl
add
add
dec
pop
push
push
pop
mov
push
aaa
frstor
cmpsl
mov
add
mov
ret
add
lds
pop
in
fdivrl
add
ljmp
xchg
mov
imul
jbe
les
add
test
and
adc
add
lret
mov
add
xlat
pop
outsl
sbb
add
sub
jmp
add
dec
cli
jnp
and
add
add
pop
xchg
add
lret
stos
push
add
pop
outsl
lods
addb
push
dec
shll
add
and
pop
cmp
loopne
add
mov
aaa
movsl
ret
loop
add
movsb
add
out
or
add
mov
pop
sub
add
out
cmp
jns
daa
out
sbb
push
xchg
dec
cld
mov
insb
into
test
add
std
gs
sub
push
nop
stos
add
inc
in
xchg
ret
inc
lcall
shll
out
dec
push
rclb
fisubrs
add
inc
mov
sbb
pop
sub
add
add
adc
mov
add
jmp
ss
add
jno
outsl
mov
xlat
xlat
out
dec
sbb
loopne
faddl
add
sub
add
cmp
sbb
mov
add
or
push
cld
add
pop
jbe
add
xor
mov
lahf
sarb
xchg
fmull
dec
int
add
in
js
inc
stos
add
jecxz
arpl
push
movsb
add
out
push
xchg
mov
xor
and
add
add
daa
pushf
xchg
add
clc
cld
jmp
add
dec
into
cmp
add
add
test
in
sub
add
stos
mov
push
push
sub
movsb
add
outsb
mov
adc
jecxz
pop
mov
fisttpll
cmp
mov
add
pop
cmp
sub
add
roll
or
fmull
xor
sarb
arpl
add
imul
push
cld
push
rorl
mov
jge
popa
cld
aas
fsubrs
push
sbb
pop
jecxz
add
mov
sbb
fcmovnb
push
xchg
xor
mov
stc
jmp
lods
add
lahf
xor
aaa
mov
sbb
mov
inc
icebp
arpl
jge
ret
imul
fcompl
mov
add
jge
sub
add
jecxz
movsl
dec
pop
cmp
aas
in
xchg
add
dec
test
sub
pop
dec
testl
xchg
dec
enter
mov
insb
jnp
fcomip
lods
add
movsl
pop
fidivrs
mov
and
add
in
inc
repnz
pop
xor
inc
hlt
or
add
int
inc
adc
sbb
or
add
jle
mov
pop
inc
fistpll
jmp
add
shlb
add
mov
add
add
mov
add
add
jne
add
add
int
lret
jecxz
lock
roll
aaa
sub
add
add
or
add
in
xchg
nop
int
lock
and
and
ljmp
add
mov
add
xchg
pop
int3
xor
jge
ja
dec
adc
aas
jge
pop
mov
int3
daa
scas
add
ja
and
popf
loop
mov
into
and
add
jge
add
ja
push
pop
cmp
pop
daa
push
add
lods
add
mov
pop
or
add
mov
add
dec
out
cmpsb
add
test
sbb
inc
addr16
sub
add
add
mov
add
add
push
mov
add
add
iret
out
in
aaa
mov
add
mov
add
pop
and
add
add
or
add
push
lods
add
sbb
inc
xchg
in
movsb
add
mov
dec
out
cmp
xor
mov
adc
in
iret
jno
add
shll
int
lret
mov
lea
add
add
mov
add
mov
add
sub
add
popf
hlt
ljmp
add
pushf
dec
imul
add
shrb
das
inc
loop
push
ret
pop
sub
add
add
hlt
mov
add
add
push
addb
jne
insb
jae
sub
add
mov
add
imul
mov
mov
add
mov
cmc
adc
pop
push
and
add
js
pusha
or
add
pop
imul
mov
push
fdivrs
xor
add
cmp
loope
add
insl
push
std
inc
mov
add
add
cmp
xchg
movb
cld
int3
aas
in
add
dec
fidivrs
xor
sbb
add
sysret
leave
inc
add
pop
mov
or
add
icebp
mov
add
add
ljmp
add
outsl
jnp
mov
pop
mov
jg
inc
cmp
pop
movsb
add
icebp
dec
mov
mov
adc
loope
jns
sub
add
dec
rcll
push
add
push
xchg
scas
xor
lahf
xchg
push
xchg
add
push
jne
xchg
nop
mov
add
notl
pop
jns
sbb
mov
add
ss
std
test
add
add
or
add
repz
pop
popa
jp
mov
adc
and
add
clc
push
cmp
jno
imulb
jg
hlt
xor
loop
add
pop
in
je
mov
add
mov
sub
add
push
stos
add
addb
xor
add
or
xchg
add
add
mov
aaa
test
inc
loopne
idivl
out
mov
xchg
hlt
cltd
and
add
enter
mov
cltd
push
lahf
pop
push
mov
add
push
jle
add
ljmp
dec
or
add
dec
or
add
pop
xchg
shll
pop
or
add
aaa
pop
dec
scas
je
add
adc
iret
cld
fcompl
nop
inc
lret
add
adc
out
pop
and
add
pop
aas
shl
mov
lcall
fists
xchg
subl
push
daa
dec
aaa
and
incl
add
cmp
shrl
add
data16
js
aam
add
cmp
ss
faddl
add
addb
jbe
add
add
xchg
std
dec
pop
pop
pusha
dec
aas
popf
test
sbbl
add
push
mov
add
movsb
add
push
push
icebp
dec
negl
negb
mov
add
test
add
aad
imul
sub
add
lcall
pusha
ss
fistps
cmp
add
add
insb
jb
addb
jl
pop
sub
add
jae
add
addb
xchg
sbb
xor
add
pop
add
add
add
faddl
movsb
add
mov
mov
xchg
mov
add
add
push
cmpl
add
sub
add
jmp
jno
out
fstpt
cmp
mov
fbstp
push
sbb
xor
test
add
fimull
pusha
cmpl
xchg
ljmp
inc
inc
xor
dec
inc
mov
add
add
lret
sbb
pop
inc
adc
cld
test
add
add
sbb
arpl
push
or
add
push
add
fstps
mov
add
and
cmp
push
pop
jno
push
je
add
fwait
pop
loopne
les
out
call
nop
jmp
add
add
cmpsl
mov
popf
clc
repnz
nop
nop
jae
add
rorb
cld
nop
nop
jae
pusha
jmp
xor
push
clc
repnz
nop
nop
jae
add
rorl
add
clc
repnz
nop
nop
jae
add
add
add
inc
add
clc
repnz
nop
nop
jae
out
add
push
add
mov
add
cwtl
sub
add
mov
nop
push
mov
leave
nop
jmp
add
fs
mov
dec
nop
push
mov
leave
nop
jmp
add
add
mov
jnp
add
addb
jmp
xchg
fwait
clc
repnz
nop
nop
jae
add
add
fs
test
adc
mov
leave
nop
jmp
cmp
int
add
mov
add
push
mov
xchg
ret
subb
jmp
mov
xchg
ret
je
mov
filds
jmp
nop
push
mov
leave
nop
jmp
add
mov
cwtl
loop
xor
clc
repnz
nop
nop
jae
add
mov
xchg
lss
clc
repnz
nop
nop
jae
adc
add
sar
jb
push
mov
xchg
ret
pusha
out
fists
push
add
nop
nop
jae
cwtl
rclb
add
stos
add
mov
repnz
nop
nop
jae
jmp
cwtl
fists
fsubs
or
add
add
rolb
roll
add
add
nop
dec
cmc
mov
push
mov
xchg
ret
iret
add
or
subl
push
mov
xchg
ret
incb
jnp
jge
clc
repnz
nop
nop
jae
add
add
roll
push
mov
leave
nop
jmp
repnz
movb
mov
leave
push
push
mov
xchg
ret
add
add
fstp
cmp
mov
cld
nop
nop
jae
add
je
dec
push
scas
mov
clc
repnz
nop
nop
jae
add
add
cmp
or
mov
leave
nop
jmp
xor
add
mov
nop
push
mov
leave
nop
jmp
add
add
out
pop
add
repnz
nop
nop
jae
dec
fs
incb
add
add
nop
nop
jae
add
add
mov
stos
pop
push
mov
xchg
ret
add
push
add
push
push
mov
xchg
ret
out
imul
push
mov
jns
inc
add
mov
adc
mov
mov
add
sar
cld
nop
nop
jae
add
add
add
pusha
inc
inc
pop
nop
push
mov
leave
nop
jmp
xor
add
add
add
repnz
nop
nop
jae
push
mov
shrl
and
repnz
nop
nop
jae
add
filds
addb
mov
nop
push
mov
leave
nop
jmp
and
add
add
lds
push
mov
leave
nop
jmp
add
mov
add
pop
es
nop
push
mov
leave
nop
jmp
push
mov
iret
add
dec
push
clc
repnz
nop
nop
jae
add
add
adc
inc
and
clc
repnz
nop
nop
jae
add
add
pop
pop
cltd
add
nop
push
mov
leave
nop
jmp
repnz
add
add
add
inc
clc
repnz
nop
nop
jae
andb
add
int3
mov
repnz
nop
nop
jae
mov
pop
into
ljmp
incl
add
repnz
nop
nop
jae
add
shrl
repnz
nop
nop
jae
roll
sub
mov
lods
mov
clc
repnz
nop
nop
jae
mov
imul
mov
push
mov
leave
nop
jmp
xor
test
xor
sarb
mov
xchg
ret
add
adc
int
push
push
iret
inc
jne
clc
repnz
nop
nop
jae
out
add
insl
mov
clc
repnz
nop
nop
jae
add
push
jmp
add
add
clc
repnz
nop
nop
jae
dec
add
add
add
nop
push
mov
leave
nop
jmp
add
sub
add
repnz
nop
nop
jae
add
add
add
insb
pop
ret
stos
clc
repnz
nop
nop
jae
outsl
add
push
add
add
mov
add
pusha
clc
repnz
nop
nop
jae
fucomip
xor
out
adc
ret
call
clc
repnz
nop
nop
jae
add
dec
push
jnp
les
add
add
nop
jmp
sbb
pop
pop
cld
push
mov
xchg
ret
addb
xor
add
add
inc
loopne
mov
xchg
ret
add
adc
adc
add
stos
add
sub
add
mov
clc
repnz
nop
nop
jae
fnstsw
sbb
clc
repnz
nop
nop
jae
pop
push
int
fisttps
push
clc
repnz
nop
nop
jae
adc
xor
add
xor
cld
nop
nop
jae
add
cmp
add
movb
mov
xchg
ret
add
push
add
cwtl
mov
nop
push
mov
leave
nop
jmp
movsb
add
add
mov
cld
nop
nop
jae
repnz
xor
fistps
sti
xor
push
mov
xchg
ret
add
push
incb
add
add
add
nop
push
mov
leave
nop
jmp
sub
push
outsl
add
mov
nop
nop
jae
jmp
jmp
insl
mov
push
mov
xchg
ret
mov
push
xchg
add
add
clc
repnz
nop
nop
jae
add
cmp
push
push
mov
xchg
ret
adc
movsb
add
pusha
add
and
add
clc
push
mov
xchg
ret
imul
mov
test
in
leave
nop
jmp
test
add
out
add
add
push
push
mov
xchg
ret
add
xor
imul
nop
jae
add
xchg
add
scas
popf
cmpl
nop
push
mov
leave
nop
jmp
add
add
clc
repnz
nop
nop
jae
push
insl
add
push
push
add
enter
adc
repnz
nop
nop
jae
int3
add
nop
push
mov
leave
nop
jmp
or
add
mov
jbe
clc
repnz
nop
nop
jae
add
add
xchg
sbb
jne
clc
repnz
nop
nop
jae
scas
jmp
xchg
add
mov
push
mov
xchg
ret
cwtl
addb
or
add
addl
cmp
ret
add
push
add
or
add
nop
push
mov
leave
nop
jmp
int3
push
add
push
clc
repnz
nop
nop
jae
repnz
inc
roll
and
repnz
nop
nop
jae
pusha
sub
add
mov
cld
nop
nop
jae
movsb
fldl
push
xchg
decl
nop
push
mov
leave
nop
jmp
rolb
mov
clc
repnz
nop
nop
jae
mov
add
clc
sub
add
mov
add
pusha
clc
repnz
nop
nop
jae
mov
add
adc
add
in
leave
nop
jmp
mov
adc
pop
push
jmp
clc
repnz
nop
nop
jae
add
add
add
or
inc
add
push
add
add
lret
xchg
clc
repnz
nop
nop
jae
add
adc
adc
leave
jns
add
out
push
test
mov
nop
push
mov
leave
nop
jmp
add
imul
xlat
add
push
mov
xchg
ret
rclb
add
dec
shr
push
mov
xchg
ret
add
out
int3
add
push
scas
fistpl
push
mov
xchg
ret
add
rcl
add
cmp
lds
clc
repnz
nop
nop
jae
add
mov
push
mov
xchg
ret
imul
pop
xor
repz
repnz
nop
nop
jae
add
xor
add
in
fwait
clc
repnz
nop
nop
jae
movsb
add
test
add
dec
fistpl
nop
push
mov
leave
nop
jmp
add
cli
addl
nop
jae
roll
add
cwtl
add
std
insb
inc
add
sbb
add
add
orb
pop
pop
clc
repnz
nop
nop
jae
add
add
add
mov
push
mov
xchg
ret
scas
mov
fs
add
bound
call
clc
repnz
nop
nop
jae
xor
push
add
pop
push
mov
xchg
ret
xor
mov
add
add
clc
repnz
nop
nop
jae
int3
iret
cwtl
fs
nop
push
mov
leave
nop
jmp
push
xor
je
mov
clc
repnz
nop
nop
jae
pop
shrb
test
repnz
nop
nop
jae
add
fs
add
push
push
dec
push
clc
repnz
nop
nop
jae
fldl
out
add
adc
repnz
nop
nop
jae
fs
iret
add
ss
test
push
mov
xchg
ret
add
add
jp
add
clc
repnz
nop
nop
jae
pop
add
add
imul
sub
add
add
clc
repnz
nop
nop
jae
sbb
add
subb
push
mov
leave
nop
jmp
iret
mov
imul
clc
repnz
nop
nop
jae
jmp
mov
jg
ret
sbb
nop
jae
add
add
hlt
in
push
mov
xchg
ret
push
scas
mov
add
fisttpll
clc
repnz
nop
nop
jae
add
push
dec
add
clc
repnz
nop
nop
jae
add
sub
je
add
sysexit
ret
cmpsl
ret
repnz
nop
nop
jae
int
insl
push
lock
jle
add
nop
jmp
filds
add
test
xor
scas
enter
nop
nop
jae
sub
add
movsb
sbb
rep
clc
repnz
nop
nop
jae
out
xor
sbb
push
notl
push
mov
leave
nop
jmp
add
add
inc
rep
clc
repnz
nop
nop
jae
or
int
rcrl
cld
nop
nop
jae
add
imul
sahf
cmp
mov
leave
nop
jmp
add
dec
out
add
add
addr16
clc
repnz
nop
nop
jae
int
add
inc
clc
repnz
nop
nop
jae
push
pusha
incb
add
clc
repnz
nop
nop
jae
add
fs
insl
mov
je
lea
push
mov
xchg
ret
add
frstor
movsb
clc
repnz
nop
nop
jae
add
add
add
sub
repnz
nop
nop
jae
add
add
int
pop
jae
repnz
nop
nop
jae
out
xor
xor
adc
or
clc
repnz
nop
nop
jae
add
scas
adc
add
add
lahf
push
push
mov
xchg
ret
shll
add
add
add
clc
repnz
nop
nop
jae
add
add
and
add
add
clc
repnz
nop
nop
jae
add
push
out
add
sub
add
push
fistpl
clc
repnz
nop
nop
jae
add
imul
fildll
add
adc
add
xor
or
cld
nop
nop
jae
pop
add
mov
add
stc
add
push
mov
xchg
ret
add
movsb
mulb
nop
nop
jae
scas
fldl
add
add
cmp
nop
push
mov
leave
nop
jmp
repnz
mov
nop
push
mov
leave
nop
jmp
out
add
add
add
push
add
clc
repnz
nop
nop
jae
cmp
cmp
repnz
clc
repnz
nop
nop
jae
add
add
cmp
cld
nop
nop
jae
jmp
mov
push
clc
repnz
nop
nop
jae
incb
mov
jb
je
clc
repnz
nop
nop
jae
movsb
sub
iret
pop
clc
repnz
nop
nop
jae
mov
add
xchg
cld
nop
nop
jae
adcb
mov
mov
xchg
ret
add
add
stos
add
jg
clc
repnz
nop
nop
jae
add
add
add
push
and
push
mov
leave
nop
jmp
add
test
xchg
mov
push
clc
repnz
nop
nop
jae
fldl
sbb
insl
add
mov
add
add
add
dec
fidivrl
nop
push
mov
leave
nop
jmp
add
filds
add
out
fwait
clc
repnz
nop
nop
jae
or
add
clc
repnz
nop
nop
jae
add
and
add
repnz
nop
nop
jae
add
jmp
jb
clc
repnz
nop
nop
jae
out
cmp
add
add
shr
nop
push
mov
leave
nop
jmp
add
fldl
add
mov
cld
nop
nop
jae
test
out
add
int3
repnz
add
add
test
add
clc
repnz
nop
nop
jae
add
and
add
mov
push
mov
xchg
ret
add
movsb
add
push
add
add
nop
push
mov
leave
nop
jmp
add
add
clc
repnz
nop
nop
jae
int
repnz
mov
add
repnz
nop
nop
jae
and
mov
imul
jmp
nop
nop
jae
add
and
add
or
add
xor
add
sub
nop
nop
jae
or
add
add
add
test
repnz
nop
nop
jae
pop
add
add
add
add
add
clc
repnz
nop
nop
jae
xor
iret
xor
int3
cmp
nop
nop
jae
add
push
filds
mov
push
mov
xchg
ret
add
add
add
xlat
je
clc
repnz
nop
nop
jae
xor
add
add
add
nop
nop
jae
add
add
cwtl
shr
jne
jb
clc
repnz
nop
nop
jae
add
add
clc
repnz
nop
nop
jae
add
xchg
add
int3
push
mov
xchg
ret
push
add
dec
add
add
lock
jne
clc
repnz
nop
nop
jae
add
sbb
jle
add
nop
push
mov
leave
nop
jmp
add
add
sub
imul
clc
repnz
nop
nop
jae
add
xor
fld1
push
mov
xchg
ret
add
iret
pusha
add
fs
xchg
inc
add
mov
test
mov
pause
push
mov
leave
nop
jmp
push
add
add
add
add
inc
xor
clc
repnz
nop
nop
jae
adc
iret
add
sbb
adc
mov
add
clc
repnz
nop
nop
jae
addb
mov
add
repnz
nop
nop
jae
add
shl
or
add
clc
repnz
nop
nop
jae
mov
sbb
mov
clc
repnz
nop
nop
jae
add
ljmp
xchg
inc
add
add
add
cmp
call
inc
add
add
mov
cmp
int
mov
clc
repnz
nop
nop
jae
add
add
sub
dec
je
add
movsb
sub
add
mov
call
nop
jae
add
add
add
loopne
mov
clc
repnz
nop
nop
jae
scas
jl
add
je
mov
clc
repnz
nop
nop
jae
test
roll
xor
adc
nop
push
mov
leave
nop
jmp
add
imul
mov
xchg
ret
push
iret
add
jbe
nop
push
mov
leave
nop
jmp
add
not
clc
repnz
nop
nop
jae
add
cwtl
add
rorl
fld1
push
mov
xchg
ret
movsb
add
add
add
pop
lahf
add
clc
repnz
nop
nop
jae
add
mov
xor
repnz
nop
nop
jae
out
int
fisttps
add
clc
repnz
nop
nop
jae
mov
add
add
add
push
mov
push
mov
xchg
ret
out
rolb
mov
jb
add
pop
add
add
int3
add
jp
add
push
jbe
mov
push
mov
xchg
ret
fs
mov
add
nop
nop
jae
mov
or
imul
mov
xchg
ret
out
out
add
dec
xorl
clc
repnz
nop
nop
jae
add
mov
clc
repnz
nop
nop
jae
push
je
out
popl
fdivr
push
nop
push
mov
leave
nop
jmp
add
add
cld
clc
repnz
nop
nop
jae
push
shll
fstpl
repnz
nop
nop
jae
int
pop
pop
push
imul
mov
add
dec
push
call
clc
repnz
nop
nop
jae
push
jl
ljmp
cld
nop
nop
jae
add
movb
int
inc
dec
nop
push
mov
leave
nop
jmp
shrb
add
add
dec
idivb
xor
clc
repnz
nop
nop
jae
addb
rclb
jmp
add
xchg
add
add
fistpl
clc
repnz
nop
nop
jae
add
cwtl
add
xchg
repnz
nop
nop
jae
cmp
add
add
lahf
jmp
add
scas
add
push
add
add
je
add
popf
jmp
mov
subb
cwtl
add
repnz
nop
nop
jae
cwtl
add
add
fdivs
mov
nop
push
mov
leave
nop
jmp
int
addr16
clc
repnz
nop
nop
jae
cmp
add
pusha
add
and
push
mov
xchg
ret
or
fbld
clc
repnz
nop
nop
jae
mov
mov
xchg
nop
push
mov
leave
nop
jmp
cmp
iret
push
loopne
mov
push
mov
xchg
ret
les
repnz
sbb
imul
repnz
nop
nop
jae
add
mov
add
add
repnz
nop
nop
jae
or
out
mov
call
nop
jmp
push
xor
nop
nop
jae
mov
out
mov
je
clc
repnz
nop
nop
jae
add
pop
push
add
clc
repnz
nop
nop
jae
add
pusha
add
push
mov
leave
nop
jmp
add
add
movsb
add
div
call
repnz
nop
nop
jae
add
movsb
cmp
cmp
push
jne
nop
push
mov
leave
nop
jmp
pop
add
call
nop
jmp
add
add
push
push
mov
xchg
ret
add
add
or
repnz
nop
nop
jae
add
push
mov
lds
mov
xchg
ret
add
add
je
jmp
nop
push
mov
leave
nop
jmp
mov
add
nop
push
mov
leave
nop
jmp
push
add
add
mov
add
push
mov
leave
nop
jmp
add
add
add
jb
lods
push
mov
xchg
ret
add
pop
add
outsl
add
jg
clc
repnz
nop
nop
jae
pop
push
add
nop
nop
jae
add
add
add
fld1
push
mov
xchg
ret
incb
mov
int
mov
std
pop
clc
repnz
nop
nop
jae
incb
add
add
add
xchg
add
add
cmpsl
movzwl
clc
repnz
nop
nop
jae
add
add
cld
nop
nop
jae
jmp
push
or
add
add
repnz
nop
nop
jae
add
outsl
ror
mov
push
mov
xchg
ret
add
add
xchg
rolb
push
add
clc
repnz
nop
nop
jae
add
cwtl
add
add
and
clc
repnz
nop
nop
jae
insl
add
add
mov
repnz
nop
nop
jae
cmpb
add
add
sub
repnz
nop
nop
jae
pop
add
add
mov
add
rorl
nop
nop
jae
mov
add
push
mov
xchg
ret
add
add
sbb
or
mov
leave
nop
jmp
rcl
add
sbb
nop
jmp
push
add
add
repnz
nop
nop
jae
add
push
add
add
insl
movzwl
nop
push
mov
leave
nop
jmp
incb
movsb
sub
jmp
cld
nop
nop
jae
scas
mov
add
add
test
xchg
inc
add
fnsave
push
add
cld
nop
nop
jae
mov
out
add
push
add
nop
push
mov
leave
nop
jmp
int
test
fs
movb
mov
xchg
ret
push
add
add
mov
clc
repnz
nop
nop
jae
add
add
add
cmpsb
add
pop
stos
push
mov
xchg
ret
add
add
push
sub
cmp
cmc
add
clc
repnz
nop
nop
jae
pop
add
cwtl
adc
mov
nop
push
mov
leave
nop
jmp
add
add
int
pop
ficoms
add
clc
repnz
nop
nop
jae
roll
add
jmp
movb
jecxz
inc
add
int3
push
addb
add
add
push
inc
xor
nop
push
mov
leave
nop
jmp
add
xor
mov
clc
repnz
nop
nop
jae
iret
pusha
cwtl
fldl
daa
push
clc
repnz
nop
nop
jae
add
add
out
scas
data16
pop
mov
clc
repnz
nop
nop
jae
jmp
add
repz
clc
repnz
nop
nop
jae
push
incb
mov
sub
add
mov
inc
add
add
rorl
out
movswl
clc
repnz
nop
nop
jae
cwtl
pop
or
pop
clc
repnz
nop
nop
jae
add
push
add
add
add
mov
sbb
push
mov
xchg
ret
add
add
fld1
push
mov
xchg
ret
add
dec
push
add
fbld
add
mov
clc
repnz
nop
nop
jae
roll
add
and
clc
repnz
nop
nop
jae
dec
pop
add
push
jmp
mov
xchg
ret
add
xor
add
mov
clc
repnz
nop
nop
jae
add
add
jmp
repnz
nop
nop
jae
add
add
add
repnz
nop
nop
jae
add
add
repnz
nop
nop
jae
add
add
addb
test
nop
push
mov
leave
nop
jmp
add
add
cmp
cmpb
push
mov
leave
nop
jmp
rcll
add
insl
add
push
gs
push
mov
xchg
ret
sub
add
add
add
out
push
mov
xchg
ret
jmp
pop
out
mov
push
ret
sar
repnz
nop
nop
jae
fucomp
add
cmp
insb
loop
call
nop
push
mov
leave
nop
jmp
add
orb
cmp
clc
repnz
nop
nop
jae
imul
add
adc
clc
repnz
nop
nop
jae
fs
mov
add
lcall
add
nop
jmp
fst
int
mov
nop
push
mov
leave
nop
jmp
fldl
add
add
push
clc
repnz
nop
nop
jae
xor
insl
add
mov
leave
nop
jmp
cmp
add
add
or
mov
xchg
ret
adc
add
loope
out
nop
push
mov
leave
nop
jmp
inc
or
je
clc
repnz
nop
nop
jae
add
push
clc
repnz
nop
nop
jae
jmp
movb
nop
nop
jae
add
testl
cmp
add
add
add
nop
nop
jae
imul
insl
add
mov
clc
repnz
nop
nop
jae
int3
push
adc
add
add
inc
clc
repnz
nop
nop
jae
add
out
rolb
sub
in
add
arpl
fdivl
add
test
sahf
mov
cmp
repz
inc
add
add
add
add
push
clc
repnz
nop
nop
jae
or
add
add
xor
inc
push
mov
xchg
ret
add
add
push
add
clc
repnz
nop
nop
jae
fldl
add
push
add
adc
add
repnz
nop
nop
jae
and
xor
mov
mov
push
mov
xchg
ret
sbb
shl
xor
jmp
dec
add
push
mov
xchg
ret
test
je
add
add
std
mov
nop
push
mov
leave
nop
jmp
add
add
add
jp
add
clc
repnz
nop
nop
jae
add
add
mov
and
mov
xchg
ret
add
pop
xor
mov
cmp
ret
xor
add
in
inc
nop
push
mov
leave
nop
jmp
test
mov
sarl
cld
nop
nop
jae
dec
add
push
add
nop
mov
clc
repnz
nop
nop
jae
add
add
add
push
push
mov
xchg
ret
add
push
add
push
add
fs
lods
push
mov
xchg
ret
scas
push
add
add
dec
add
xchg
add
cmp
push
mov
xchg
ret
add
add
pusha
add
dec
jle
cmpsb
add
cmp
repnz
nop
nop
jae
add
outsl
add
push
mov
xchg
ret
push
jmp
push
add
shl
clc
repnz
nop
nop
jae
add
mov
clc
repnz
nop
nop
jae
mov
xor
push
pop
push
clc
repnz
nop
nop
jae
mov
add
xor
movsb
clc
inc
push
clc
repnz
nop
nop
jae
push
out
mov
adc
push
mov
xchg
ret
fists
add
add
add
mov
add
add
add
mov
jb
add
push
mov
lea
nop
push
mov
leave
nop
jmp
add
pusha
adc
push
dec
nop
push
mov
leave
nop
jmp
add
add
add
int
push
clc
repnz
nop
nop
jae
add
add
add
add
fdivr
repnz
nop
nop
jae
dec
add
les
add
add
push
mov
xchg
ret
mov
test
add
add
clc
repnz
nop
nop
jae
add
xchg
add
jmp
push
mov
xchg
ret
out
add
add
mov
mov
add
repnz
nop
nop
jae
cmp
add
mov
nop
jae
cmp
roll
add
mov
js
lock
add
mov
sbb
repnz
nop
nop
jae
add
add
iret
lea
nop
push
mov
leave
nop
jmp
add
add
mov
icebp
clc
repnz
nop
nop
jae
out
add
popf
mov
clc
repnz
nop
nop
jae
add
sar
mov
add
add
nop
nop
jae
add
add
and
add
mov
clc
repnz
nop
nop
jae
add
out
mov
add
repnz
nop
nop
jae
add
insb
add
mov
xchg
ret
outsl
add
adc
mov
out
push
dec
nop
push
mov
leave
nop
jmp
add
add
add
xor
push
mov
xchg
ret
adc
add
cmpb
mov
repnz
nop
nop
jae
rolb
mov
add
mov
nop
push
mov
leave
nop
jmp
mov
add
test
repnz
nop
nop
jae
iret
push
add
add
cld
nop
nop
jae
dec
add
push
data16
pop
clc
repnz
nop
nop
jae
fs
pop
add
jmp
and
add
mov
push
mov
xchg
ret
out
add
out
out
or
nop
push
mov
leave
nop
jmp
add
xor
fists
add
and
jmp
add
mov
add
or
mov
icebp
add
clc
repnz
nop
nop
jae
add
add
adc
nop
push
mov
leave
nop
jmp
add
add
decl
mov
leave
nop
jmp
repnz
call
imul
add
add
mov
add
clc
repnz
nop
nop
jae
roll
add
mov
add
sub
push
mov
leave
nop
jmp
filds
push
add
dec
clc
repnz
nop
nop
jae
add
add
rcrb
insl
call
mov
xchg
ret
fldl
add
add
jne
clc
repnz
nop
nop
jae
add
add
push
mov
leave
nop
jmp
add
add
add
fstl
in
add
cmp
add
imul
add
mov
add
mov
gs
repnz
nop
nop
jae
add
add
lods
pop
clc
repnz
nop
nop
jae
push
add
add
mov
cld
nop
nop
jae
add
add
pop
adc
or
mov
leave
nop
jmp
add
add
add
add
fld1
clc
repnz
nop
nop
jae
add
add
add
add
pop
push
mov
xchg
ret
filds
pop
int
add
int3
mov
cld
nop
nop
jae
push
add
xor
add
test
repnz
nop
nop
jae
movsb
int
clc
repnz
nop
nop
jae
add
mov
pop
cld
push
clc
repnz
nop
nop
jae
add
incb
imul
mov
mov
repnz
nop
nop
jae
pusha
add
fmull
dec
push
clc
repnz
nop
nop
jae
shl
adc
add
repz
clc
repnz
nop
nop
jae
xor
pop
shr
jne
clc
repnz
nop
nop
jae
out
add
push
mov
leave
nop
jmp
add
add
cmp
add
je
pushf
pop
jo
ds
clc
repnz
nop
nop
jae
add
xor
add
clc
repnz
nop
nop
jae
add
add
push
add
push
sub
clc
repnz
nop
nop
jae
push
add
in
rolb
add
cmpsl
pop
lcall
sti
cli
add
add
rep
push
mov
xchg
ret
add
push
sub
add
push
fidivrs
clc
repnz
nop
nop
jae
les
push
clc
repnz
nop
nop
jae
push
add
jecxz
dec
and
push
mov
xchg
ret
add
add
pusha
add
xorps
xchg
ret
add
add
add
jmp
nop
jae
int
xor
lds
addl
add
mov
add
sub
clc
repnz
nop
nop
jae
sub
add
add
pop
push
clc
repnz
nop
nop
jae
les
incb
sbb
add
add
dec
mov
clc
repnz
nop
nop
jae
jmp
jmp
repnz
nop
nop
jae
add
add
roll
fucomi
mov
frstor
add
add
fs
xor
stos
nop
push
mov
leave
nop
jmp
add
add
mov
filds
inc
cmp
mov
xchg
ret
push
add
push
add
xor
push
mov
xchg
ret
add
add
add
ret
mov
push
mov
xchg
ret
add
rolb
movsb
sbb
mov
clc
repnz
nop
nop
jae
add
or
add
repnz
nop
nop
jae
and
cmp
sbb
add
push
pop
pop
push
mov
xchg
ret
fs
add
incb
fs
lcall
clc
repnz
nop
nop
jae
add
add
in
leave
nop
jmp
add
les
add
seta
xchg
ret
pusha
add
fnstsw
repnz
mov
xchg
ret
int
add
pusha
addps
pop
xchg
inc
add
roll
add
addb
iret
aas
mov
push
mov
xchg
ret
add
insl
cmp
add
push
add
pop
mov
push
mov
xchg
ret
add
add
rcrl
add
sub
add
fs
mov
push
add
cltd
mov
push
mov
xchg
ret
cmp
lea
repnz
nop
nop
jae
add
jmp
add
nop
nop
jae
scas
rcrl
out
add
add
add
dec
loop
rep
nop
push
mov
leave
nop
jmp
add
sub
add
popa
mov
clc
repnz
nop
nop
jae
incb
add
add
adc
cld
nop
nop
jae
add
add
pusha
add
and
push
mov
leave
nop
jmp
xor
cwtl
mov
push
mov
xchg
ret
add
jmp
pop
fdiv
notl
push
mov
xchg
ret
cwtl
cwtl
incb
add
cltd
fwait
clc
repnz
nop
nop
jae
outsl
add
jmp
jg
adc
repnz
nop
nop
jae
add
sbb
sub
aad
mov
push
add
outsb
movb
js
jo
add
imul
add
pop
jnp
add
push
cwtl
add
adc
repnz
nop
nop
jae
add
add
mov
sar
cld
nop
nop
jae
pusha
adc
add
add
add
mov
call
repnz
nop
nop
jae
add
add
outsb
into
cltd
pop
clc
repnz
nop
nop
jae
out
add
add
rclb
dec
sub
repnz
nop
nop
jae
xor
add
add
add
clc
repnz
nop
nop
jae
add
mov
pop
push
clc
repnz
nop
nop
jae
add
add
add
fsubs
add
je
sub
repnz
nop
nop
jae
add
add
add
popa
clc
repnz
nop
nop
jae
xorb
sub
add
shr
add
push
insl
mov
clc
repnz
nop
nop
jae
fs
mov
aaa
add
clc
repnz
nop
nop
jae
jmp
xchg
test
add
nop
nop
jae
add
addb
popl
add
add
nop
push
mov
leave
nop
jmp
add
add
repnz
nop
nop
jae
add
add
clc
repnz
nop
nop
jae
add
add
or
nop
jmp
cwtl
ror
add
mov
pop
clc
repnz
nop
nop
jae
mov
add
imul
test
add
clc
repnz
nop
nop
jae
add
push
clc
repnz
nop
nop
jae
pusha
and
roll
movb
cmp
dec
stos
add
mov
and
clc
repnz
nop
nop
jae
sub
mov
add
repnz
mov
push
mov
xchg
ret
int
incb
scas
add
in
jmp
add
scas
out
insl
add
scas
push
add
mov
in
add
add
clc
repnz
nop
nop
jae
cmp
pop
cwtl
xchg
mov
clc
repnz
nop
nop
jae
fs
addb
mov
sbb
push
mov
xchg
ret
dec
iret
xor
roll
out
push
je
clc
repnz
nop
nop
jae
adc
rcl
add
clc
repnz
nop
nop
jae
add
jmp
inc
mov
nop
push
mov
leave
nop
jmp
filds
out
fcomip
rclb
nop
jmp
add
add
movsb
fs
push
nop
push
mov
leave
nop
jmp
push
adc
add
sub
decl
repnz
nop
nop
jae
iret
add
loop
nop
push
mov
leave
nop
jmp
addb
push
add
sub
add
addr16
push
mov
xchg
ret
push
add
add
incb
xor
in
ss
add
mov
push
add
add
xor
clc
repnz
nop
nop
jae
add
add
repnz
push
mov
xchg
ret
add
add
add
jg
clc
repnz
nop
nop
jae
add
int3
push
test
add
mov
clc
repnz
nop
nop
jae
pop
repnz
jmp
ja
inc
add
xor
imul
mov
clc
repnz
nop
nop
jae
int
add
fsubrp
mov
repnz
nop
nop
jae
xor
enter
add
xchg
push
clc
repnz
nop
nop
jae
iret
add
add
add
cmp
lcall
push
xchg
add
adc
data16
push
push
clc
repnz
nop
nop
jae
xor
iret
fcmovnu
sbb
push
mov
xchg
ret
add
dec
add
add
push
mov
push
repnz
nop
nop
jae
push
imul
cmp
repnz
nop
nop
jae
add
out
add
je
ds
push
clc
repnz
nop
nop
jae
sbb
add
iret
call
nop
push
mov
leave
nop
jmp
add
je
add
repnz
nop
nop
jae
rcl
out
xchg
add
add
add
clc
repnz
nop
nop
jae
add
int3
sub
mov
mov
leave
nop
jmp
add
add
add
outsl
scas
push
push
mov
xchg
ret
mov
sbb
rol
adc
ss
add
clc
repnz
nop
nop
jae
add
mov
push
mov
xchg
ret
sub
incb
pop
add
add
repnz
nop
nop
jae
push
mov
jns
ljmp
out
add
push
add
add
add
add
lret
add
nop
push
mov
leave
nop
jmp
add
add
mov
dec
cmp
push
mov
leave
nop
jmp
push
repnz
jmp
and
sbb
add
sbb
mov
add
adc
cld
nop
nop
jae
xor
je
add
add
jns
sar
repnz
nop
nop
jae
add
add
mul
add
clc
repnz
nop
nop
jae
add
cwtl
int3
add
and
inc
add
add
add
xor
clc
repnz
nop
nop
jae
add
add
add
add
clc
repnz
nop
nop
jae
mov
out
test
ret
clc
repnz
nop
nop
jae
int
out
rolb
test
mov
add
cld
nop
nop
jae
out
add
add
add
pushf
cli
ret
mov
clc
repnz
nop
nop
jae
repnz
repnz
jbe
stc
jmp
dec
or
add
sub
mov
cmp
mov
mov
pop
cmp
repnz
nop
nop
jae
add
roll
add
clc
repnz
nop
nop
jae
out
insl
orb
cld
nop
nop
jae
add
adcb
add
xchg
xchg
ret
add
add
add
add
clc
repnz
nop
nop
jae
add
outsl
add
test
jae
push
mov
xchg
ret
or
int
incb
add
push
jb
mov
nop
push
mov
leave
nop
jmp
sbb
movsb
adc
add
repnz
nop
nop
jae
jmp
add
cmp
nop
jmp
mov
xor
xor
lret
mov
leave
nop
jmp
int
mov
add
add
jae
push
mov
xchg
ret
shlb
add
repnz
nop
nop
jae
filds
xchg
imul
mov
clc
repnz
nop
nop
jae
push
int
add
push
pushl
nop
push
mov
leave
nop
jmp
mov
add
jmp
movsb
adc
add
fs
add
jg
push
mov
xchg
ret
scas
add
mov
add
push
test
nop
push
mov
leave
nop
jmp
add
xor
push
add
je
clc
repnz
nop
nop
jae
dec
sti
push
clc
repnz
nop
nop
jae
add
fs
sub
test
push
mov
leave
nop
jmp
push
add
lret
loopne
clc
repnz
nop
nop
jae
sub
jmp
incb
jne
clc
repnz
nop
nop
jae
insl
int
mov
mov
xchg
ret
add
add
sbb
fdivs
inc
push
add
add
insl
out
mov
movsb
clc
repnz
nop
nop
jae
add
add
xor
in
leave
nop
jmp
rcll
add
add
insl
push
clc
repnz
nop
nop
jae
add
add
imul
roll
repnz
nop
nop
jae
cmp
add
push
int
add
clc
movsb
add
add
xchg
add
clc
repnz
nop
nop
jae
add
test
movsb
test
dec
movsb
add
loopne
push
push
mov
xchg
ret
push
incb
add
cmovns
repnz
nop
nop
jae
int
add
mov
add
out
and
repnz
nop
nop
jae
cmp
pop
mov
clc
repnz
nop
nop
jae
add
andb
cld
clc
repnz
nop
nop
jae
add
movsb
imul
cld
nop
nop
jae
add
push
or
add
clc
repnz
nop
nop
jae
add
pusha
xor
cmpsl
add
nop
push
mov
leave
nop
jmp
sub
sbb
add
inc
es
push
mov
xchg
ret
push
add
pusha
fs
pop
push
clc
repnz
nop
nop
jae
cmp
outsl
add
outsb
mov
push
mov
leave
nop
jmp
int
cmp
mov
div
nop
push
mov
leave
nop
jmp
add
add
roll
outsl
add
repnz
nop
nop
jae
add
add
popl
cld
nop
nop
jae
add
add
add
push
adc
add
push
pop
out
push
push
mov
xchg
ret
repnz
xchg
xor
inc
and
clc
repnz
nop
nop
jae
push
pop
mov
add
js
xchg
add
jl
xor
repnz
nop
nop
jae
add
adcb
clc
repnz
nop
nop
jae
mov
xor
add
add
movb
cld
nop
nop
jae
out
outsl
sarb
add
cli
lret
jg
clc
repnz
nop
nop
jae
shll
xchg
push
mov
xchg
ret
add
add
push
push
sub
clc
repnz
nop
nop
jae
mov
add
cwtl
dec
rep
clc
repnz
nop
nop
jae
out
add
sbb
xchg
addb
mov
add
push
mov
xchg
ret
cmp
out
add
push
mov
xchg
ret
iret
push
add
pop
shl
nop
push
mov
leave
nop
jmp
add
in
xchg
mov
clc
repnz
nop
nop
jae
add
add
push
mov
xchg
ret
add
add
pusha
add
sbb
push
clc
repnz
nop
nop
jae
mov
add
nop
nop
jae
xor
add
jmp
movzwl
clc
repnz
nop
nop
jae
add
add
cld
sub
add
push
push
mov
xchg
ret
add
add
outsl
xor
sub
add
addl
xor
push
int3
add
xor
cld
nop
nop
jae
scas
sub
out
jmp
mov
test
xor
add
int3
je
imul
fdivr
clc
repnz
nop
nop
jae
scas
mov
mov
cld
nop
nop
jae
add
add
add
nop
nop
jae
add
add
and
cwtl
add
add
push
add
sti
push
push
mov
xchg
ret
outsl
int
jmp
push
add
cld
nop
nop
jae
int3
add
out
negl
mov
xchg
ret
add
mov
add
add
mov
push
mov
xchg
ret
pop
or
add
clc
repnz
nop
nop
jae
add
add
outsl
rclb
lea
nop
push
mov
leave
nop
jmp
push
add
add
dec
push
clc
repnz
nop
nop
jae
add
adc
icebp
clc
repnz
nop
nop
jae
mov
add
pop
mov
nop
push
mov
leave
nop
jmp
add
pop
insl
add
add
clc
repnz
nop
nop
jae
scas
cmp
adcb
xor
nop
pop
sub
repnz
nop
nop
jae
add
shlb
push
mov
xchg
ret
insl
add
mov
add
add
clc
push
mov
xchg
ret
int3
mov
add
dec
add
push
mov
xchg
ret
les
add
lock
jb,pt
nop
push
mov
leave
nop
jmp
sub
cmp
mov
push
mov
leave
nop
jmp
xor
mov
mov
nop
push
mov
leave
nop
jmp
out
mov
dec
push
push
xchg
clc
repnz
nop
nop
jae
add
sbb
inc
stos
sub
clc
repnz
nop
nop
jae
add
int
roll
dec
mov
inc
clc
repnz
nop
nop
jae
and
add
mov
push
clc
repnz
nop
nop
jae
rolb
add
push
add
mov
xchg
ret
add
cwtl
add
repnz
nop
nop
jae
add
test
add
add
inc
push
clc
repnz
nop
nop
jae
add
xor
xchg
push
nop
push
mov
leave
nop
jmp
imul
clc
repnz
nop
nop
jae
add
int
repnz
repnz
nop
nop
jae
out
jmp
iret
or
inc
add
add
loopne
je
nop
push
mov
leave
nop
jmp
adc
add
inc
and
clc
repnz
nop
nop
jae
add
out
add
mov
xchg
ret
add
jmp
mov
test
clc
repnz
nop
nop
jae
add
int
push
mov
outsb
jmp
cmp
dec
cmp
add
mov
add
lods
and
push
mov
xchg
ret
add
push
add
push
test
add
clc
repnz
nop
nop
jae
dec
add
add
add
ja
clc
repnz
nop
nop
jae
roll
add
xchg
cmc
lea
clc
repnz
nop
nop
jae
jmp
int
popa
nop
push
mov
leave
nop
jmp
cwtl
jmp
int
pop
mov
clc
repnz
nop
nop
jae
jmp
fistpl
nop
push
mov
leave
nop
jmp
add
xor
orb
nop
jae
cmp
pop
or
cmpsb
add
lea
repnz
nop
nop
jae
movsb
adc
repnz
scas
fdivr
call
nop
jmp
sub
add
insl
pop
clc
repnz
nop
nop
jae
cmp
add
decb
int
movsb
add
pop
je
nop
push
mov
leave
nop
jmp
add
add
repnz
nop
nop
jae
out
add
out
add
movzwl
clc
repnz
nop
nop
jae
xchg
mov
mov
clc
repnz
nop
nop
jae
pop
add
out
outsl
mov
add
cli
mov
add
xchg
mov
clc
repnz
nop
nop
jae
add
add
clc
repnz
nop
nop
jae
add
add
fwait
push
mov
xchg
ret
int3
push
int3
add
add
fs
orl
cld
nop
nop
jae
xchg
add
and
imulb
add
sbb
test
nop
push
mov
leave
nop
jmp
add
add
adc
xor
add
mov
add
in
jl
clc
repnz
nop
nop
jae
add
xor
test
nop
push
mov
leave
nop
jmp
dec
mov
push
mov
xchg
ret
add
mov
or
add
xor
repnz
nop
nop
jae
jmp
add
jne
clc
repnz
nop
nop
jae
sbb
add
add
leave
clc
repnz
nop
nop
jae
out
xchg
add
sub
push
mov
leave
nop
jmp
shl
cmp
add
add
lea
nop
nop
jae
add
add
add
sub
pause
push
mov
leave
nop
jmp
add
dec
outsl
xor
cmp
lods
or
lret
add
add
jmp
jno
add
jnp
in
ret
shll
sub
add
add
lea
fistps
fistl
add
addb
gs
xor
xchg
in
fadd
sbb
lahf
rclb
in
mov
dec
pop
adc
loopne
rolb
dec
pop
gs
pop
push
cmp
mov
pop
mov
jl
jecxz
add
mov
add
add
mov
leave
xor
mov
stos
leave
bound
add
fistps
push
loopne
mov
add
in
adc
icebp
or
aas
inc
subl
cmc
pop
outsb
xchg
out
call
popf
lahf
mov
add
in
add
push
leave
rorl
inc
xchg
ss
addl
xlat
xchg
lods
inc
xorl
aam
dec
and
xchg
jg
inc
stos
mov
in
out
push
add
cmp
and
lcall
mov
dec
das
push
imul
scas
orl
add
mov
fistpll
lock
add
ficomps
les
insl
xchg
ret
cwtl
mov
add
xor
int
imul
jb
sbb
add
mov
add
clc
jnp
add
mov
push
jmp
mov
insb
pusha
iret
xor
adc
out
outsb
inc
pop
outsb
fcoml
out
lods
mull
out
dec
xchg
xor
add
or
dec
pop
aam
insl
repnz
add
jbe
sti
inc
inc
cmp
mov
sbb
aas
sahf
mov
jle
add
pop
push
int3
xor
sub
add
in
and
add
and
add
mov
loopne
add
sub
add
cwtl
adc
sub
jle
sub
out
sub
add
xor
xchg
leave
adc
fsubrl
aas
test
ret
pop
inc
jns
popa
pop
addb
add
add
std
je
sub
add
xchg
mov
jb
dec
test
add
cmp
push
or
sub
lret
lea
adc
push
mov
xchg
rolb
pop
cmp
jle
mov
pushf
ljmp
out
adc
or
add
lret
jae
data16
add
sbb
popf
imul
and
sub
xor
add
add
cmpsb
add
fsubrl
fsubs
add
test
add
out
pushl
sbb
mov
std
je
adc
add
xor
in
pop
mov
push
mov
fldl
fistpll
dec
add
hlt
stos
add
mov
add
mov
or
add
repnz
int3
roll
add
push
push
add
xchg
xor
test
push
add
mov
mov
jl
addb
rclb
aam
pop
cltd
fnstcw
popa
xchg
jbe
add
xchg
data16
xchg
or
add
add
add
cld
adc
or
add
push
repz
adc
pop
mov
icebp
add
jb
dec
imul
add
shl
mov
fstps
das
push
lock
sbb
and
xchg
add
adc
jb
inc
adc
stos
add
cmp
add
push
cmp
add
sub
xor
std
arpl
int
fidivrl
addb
mov
push
jno
cmp
dec
test
cmp
addb
cltd
leave
jp
cmp
xlat
int3
xchg
int3
ds
cmp
add
cmp
mov
pop
cmc
ja
pop
test
out
push
popf
mov
add
fistpll
add
mov
sbb
lods
add
test
add
push
testb
add
pop
movsl
insl
lea
pop
pop
mov
dec
mov
bnd
ljmp
xor
mov
mov
sbb
fildll
add
and
add
fdiv
or
lds
lods
gs
popa
push
fnstcw
arpl
mov
push
cmp
adc
int
cmpsb
add
out
mov
fwait
sub
add
jg
pop
in
add
loopne
call
sbb
add
jl
add
mov
and
add
cmpsl
jp
jae
sbb
add
ret
leave
outsl
fidivrl
inc
mov
cmpsb
add
mov
lods
add
add
push
dec
mov
add
xchg
jo
cmp
inc
mov
add
aam
xlat
inc
xchg
dec
addb
add
dec
lret
pop
pop
add
push
mov
add
lret
xor
fsubp
test
add
mov
xchg
aas
dec
adc
out
add
jnp
xchg
add
cmpl
fistpll
mov
push
cmp
adcl
and
push
pop
sub
or
mov
mov
push
mov
jg
inc
xchg
xchg
fidivl
sbb
add
jnp
js
clc
dec
punpckhdq
shlb
mov
add
jp
xor
adc
cmp
pop
xchg
adc
mov
mov
das
jmp
or
add
and
or
jecxz
add
sub
add
loopne
insl
fidivs
jno
shrb
add
add
cmpsl
in
ffree
dec
arpl
cmpsb
add
dec
in
les
mov
dec
push
aad
inc
test
mov
add
add
jp
sbb
sbb
add
fidivrl
push
test
add
sub
add
xor
sbb
data16
push
in
aam
mov
push
mov
add
mov
mov
xchg
mov
adc
push
mov
fcoml
lcall
add
sub
sub
add
add
or
add
add
pop
loope
test
add
std
mov
rorl
inc
inc
pusha
mov
enter
adc
shlb
jp
add
jno
test
add
idiv
repz
popa
sbb
pop
jnp
push
lcall
ret
int
push
pop
jge
sub
add
dec
int3
loopne
fs
scas
pop
iret
dec
mov
add
mov
out
in
add
add
shlb
add
and
add
xor
pop
xchg
add
sub
or
add
adc
xchg
sub
add
sarl
and
pushf
aaa
sub
sbb
and
add
add
or
add
mov
aas
outsl
lahf
jbe
fistpl
sub
add
push
cwtl
xor
add
roll
pop
pop
push
subl
fsubr
dec
in
and
add
add
add
psubw
or
add
jnp
lea
lcall
insl
lret
imul
push
pop
and
rcr
scas
out
loopne
pushf
nop
cmp
xchg
mov
shll
add
scas
jecxz
add
sub
fistpl
lcall
and
out
add
out
hlt
sub
add
addb
push
add
pop
pop
das
jg
add
mov
xor
jg
add
sahf
lock
mov
add
or
adc
and
add
inc
jmp
mov
cmp
add
add
xchg
sbbl
add
popa
and
add
and
add
repnz
mov
out
add
shrb
push
sbb
add
adc
out
int3
test
add
pop
mov
add
mov
add
xchg
mov
add
test
add
jl
movl
add
cltd
inc
leave
push
sbb
xchg
fs
cmp
lds
push
add
fnstcw
sbb
or
add
lahf
pop
das
clc
sub
pop
movsb
add
cwtl
xor
test
add
movsb
add
dec
push
and
in
in
pop
push
lds
fnstcw
mov
adc
dec
clc
inc
mov
xchg
add
ljmp
add
add
and
add
movsl
push
sarb
push
addr16
add
hlt
jg
inc
out
sub
subl
add
outsl
cld
push
mov
and
add
push
add
jbe
scas
das
pop
lahf
jmp
ljmp
cli
push
jmp
cwtl
xchg
add
test
add
push
mov
add
loope
testb
add
add
add
push
jb
stc
fidivrl
jg
pop
testb
add
add
add
pop
dec
xor
add
mov
add
push
scas
add
inc
in
sbb
xlat
mov
pop
sub
add
mov
fisttpll
add
pushf
fidivrs
sub
xchg
pop
adc
cmp
push
inc
sub
add
and
les
int
cmpsl
movb
add
add
mov
pop
les
test
add
add
pop
test
sub
jnp
dec
andl
insb
add
sbb
jle
pop
and
add
lods
or
mov
add
jno
scas
add
push
negb
sti
xlat
jbe
jns
loope
inc
jl
jp
adc
jae
xchg
mov
mov
scas
add
fcomi
movsl
lcall
outsb
std
mov
add
cmpsl
scas
add
inc
shll
test
add
or
or
add
adc
mov
add
insb
divb
icebp
pushf
rolb
ret
dec
pop
mov
add
inc
das
mov
add
push
add
push
loope
arpl
bound
out
dec
inc
hlt
jbe
mov
pop
push
or
add
shl
addb
insb
or
add
sahf
xchg
stos
in
dec
xor
ret
push
addr16
fwait
adc
sub
jmp
cmp
add
jl
fdivrp
sbb
sub
add
or
add
fstps
sbb
cmp
les
jge
jmp
push
stos
add
in
inc
cmpsb
add
ret
push
xor
in
test
add
xchg
nop
sbb
addr16
add
mov
add
xchg
std
shr
sub
add
sbb
xchg
add
xor
add
lret
imul
add
mov
addr16
add
mov
add
jle
mov
dec
pusha
aas
cmp
mov
scas
shl
push
xchg
sub
add
pop
jns
inc
dec
lds
add
gs
sti
lods
add
js
and
aad
mov
push
inc
out
or
sub
fstpt
add
push
mov
add
pop
push
add
sub
add
data16
add
and
jb
add
push
push
push
js
add
insl
sbb
jl
xor
add
push
pop
push
add
insb
dec
push
loopne
push
add
loopne
mov
mov
fdivrs
cmp
loopne
repz
inc
leave
xchg
orl
int3
shrl
add
fsubrl
add
add
xchg
sahf
pushf
cwtl
dec
sbb
add
pusha
leave
sbb
jno
int3
add
add
jmp
sbb
negl
fcmovb
inc
inc
out
push
mov
add
bound
add
mov
add
cmp
lahf
sti
lods
add
push
push
add
andnps
and
add
mov
jnp
loopne
add
cmpsb
add
adc
into
std
inc
loope
add
add
add
out
mov
dec
sarb
mov
add
leave
pop
pop
adc
jmp
mov
mov
and
add
cmp
idivl
add
xchg
add
add
sub
push
add
xchg
in
inc
repnz
dec
xor
fisubl
cmc
test
add
add
dec
cmp
cmp
or
insb
loop
jg
inc
into
jle
and
mov
add
add
inc
out
and
mov
sti
add
sarb
icebp
sbb
out
mov
mul
pop
aas
inc
idiv
pop
lock
enter
add
cmp
xchg
repz
in
xchg
mov
jns
cmc
xor
mull
add
pop
jo
shr
cmpsl
inc
loope
jno
mov
push
add
and
add
fwait
xchg
adc
xor
stc
fdivrs
icebp
push
add
rcll
in
push
sbb
lahf
sbb
aas
cmpsl
push
dec
mov
xor
inc
ret
add
add
pop
les
add
xor
add
mov
inc
add
mov
sbb
stos
loope
fisttpl
sti
mov
add
daa
loope
mov
sbb
add
pop
add
scas
pop
lea
stc
outsb
in
pop
mov
lahf
jg
pop
adc
imul
add
lret
add
lods
add
xor
add
add
jge
cld
shlb
add
lods
xchg
add
add
cli
data16
add
loope
sbb
cmc
sbb
loop
aaa
int3
mov
mov
push
imul
add
add
test
add
in
icebp
fcmovnbe
sbb
clc
or
add
ret
jno
out
outsb
mov
into
or
add
cmp
adc
pop
jae
imul
lods
add
xchg
fistpll
or
add
ja
iret
imul
add
icebp
js
mov
add
push
ss
ror
jge
test
add
add
pop
jecxz
mov
inc
enter
inc
inc
xor
adc
add
in
add
sub
add
dec
mov
add
or
add
sbb
inc
addb
add
adc
jbe
inc
js
aaa
in
lods
add
cmpsl
mov
fildll
mov
add
add
push
pop
stos
xchg
mov
pop
pop
test
add
inc
adc
cmp
shl
add
add
insb
sub
add
add
mov
add
xorl
jns
lods
add
jns
test
add
stos
sub
xor
jle
add
adc
outsl
cmp
pop
jae
outsb
shlb
arpl
add
test
add
cld
cwtl
std
pop
mov
pop
mov
add
add
outsb
std
shll
lods
dec
insl
xor
xchg
and
add
pop
divl
mov
add
movsb
add
xor
and
mov
movsb
add
out
loope
xor
addr16
repnz
out
mov
add
xor
add
cltd
hlt
lret
rorb
add
shld
fwait
test
add
sarl
xor
scas
jno
xlat
push
push
out
sahf
add
add
inc
in
dec
push
add
jl
fcoml
add
jae
sbb
and
push
add
repnz
lock
xchg
and
add
arpl
dec
adc
add
add
mov
stos
roll
cmc
js
mov
add
les
pusha
mov
add
pop
cld
stos
add
daa
mov
add
pop
iret
or
add
add
and
add
cld
lahf
sub
add
rclb
pop
xor
add
add
out
outsl
gs
repnz
fisubrs
push
std
pop
fxam
pop
mov
dec
push
dec
lods
add
jb
fwait
adc
roll
cmp
aas
and
cmpsb
add
loopne
je
pop
jnp
xchg
hlt
push
ficoms
jecxz
filds
jecxz
add
iret
adc
mov
add
mov
and
add
scas
push
push
cmp
inc
xchg
add
xor
cltd
call
lods
test
add
nop
negb
adc
add
and
jge
fwait
xchg
testl
add
sub
add
add
repz
ret
add
pop
ss
xchg
lahf
and
pushf
loopne
mov
cmp
data16
add
test
add
adc
push
scas
pop
jecxz
icebp
lret
dec
mov
add
add
test
add
addr16
sub
add
popf
sahf
inc
pop
xchg
add
add
add
sbb
cmpsb
add
test
loopne
int
pop
lcall
add
test
mov
and
add
mov
rorl
rcl
sub
add
addb
cld
pop
pop
cmpsb
add
lods
add
and
add
shlb
xchg
enter
mov
aam
push
jge
push
add
pop
mulb
add
popf
mov
inc
mov
jnp
gs
sahf
out
cmp
icebp
inc
mov
add
repz
cmpsb
add
inc
out
out
adc
loopne
lods
loop
test
add
add
add
jo
jmpw
or
mov
mov
adc
add
jecxz
in
jg
neg
cltd
and
sbb
pop
jge
decb
outsb
ds
insb
fisttpll
mov
dec
ficomps
add
jb
insb
or
lods
add
xchg
jmp
jns
scas
add
jb
sub
add
jno
fcoms
hlt
and
add
add
or
add
sub
leave
push
pop
xchg
add
arpl
sub
add
inc
fiadds
add
add
lods
add
mov
add
nop
jmp
pop
or
add
add
add
scas
int
add
icebp
mov
loope
mov
add
cmpsl
jne
jne
add
add
clc
push
lds
les
add
outsl
lea
lar
add
inc
xchg
in
loope
insl
and
pop
int
mov
add
cmpsb
add
lcall
push
shrb
xchg
pop
fxsave
add
jne
cmpsb
add
dec
pop
ret
mov
out
adc
rcll
add
xchg
dec
js
jno
fdivrs
mov
fcomi
push
mov
cmp
in
pop
add
ret
and
add
xchg
sbb
cmc
jg
mov
aad
sbb
shrl
jno
repz
movsl
lahf
dec
push
imul
jnp
add
pop
xchg
jp
aas
inc
add
add
mov
mov
js
cmp
lea
add
shlb
add
mov
gs
add
inc
aaa
sti
inc
js
cmp
mov
fxch
insb
add
add
js
jmp
mov
cwtl
out
inc
addb
or
add
adc
test
clc
daa
push
add
imul
and
add
cli
mov
add
gs
out
sub
int
add
in
jns
cmp
jae
add
js
and
add
inc
ja
add
sti
sti
stos
add
dec
xchg
outsl
pop
dec
adc
jle
stos
out
add
inc
popf
mov
add
cmp
mov
and
add
add
push
je
pop
push
call
adc
add
push
into
jns
push
cmp
add
fxch
push
pop
in
push
icebp
fsubrs
add
aam
jmp
cld
test
mov
mov
fsts
or
add
mov
mov
mov
insb
bound
push
insl
faddl
xchg
nop
push
sub
data16
inc
xor
in
in
xchg
scas
add
addr16
or
xchg
sub
add
mov
add
out
je
test
pop
xchg
ds
iret
and
dec
stos
loopne
hlt
addb
pusha
push
lret
subl
fs
rcl
xor
add
mov
mov
jge
fildl
add
add
mov
mov
repz
add
push
and
add
pop
push
sbb
fistpll
pop
dec
ficomps
mov
sbb
or
and
repz
xchg
fs
sub
sbb
lret
add
rcrb
lea
jae
outsb
jle
mov
add
js
ss
jmp
shrl
add
pop
xor
add
stos
add
ror
add
dec
imul
jmp
add
dec
push
add
aas
mov
dec
cmp
imul
add
arpl
adc
pop
pop
xor
or
add
add
lcall
out
and
push
mov
xor
ja
mov
pop
push
leave
sbb
xchg
add
inc
out
das
rcrb
push
and
add
in
addr16
add
popa
daa
loopne
inc
add
add
xchg
mov
add
ret
add
mov
fcmovnbe
mov
aad
xchg
or
add
cmp
adc
add
mov
pusha
cmc
dec
dec
inc
or
add
inc
sbb
dec
pop
fnstsw
jb
xor
mov
gs
clc
call
push
test
add
enter
add
stos
add
xor
mov
add
cmpsl
pop
sbb
outsb
outsl
cmp
jmp
pop
xchg
jnp
jnp
xlat
mov
ficomps
sarl
in
xchg
add
movl
adcl
insb
aad
add
lcall
push
push
add
out
cmp
lret
imul
add
add
cwtl
popf
stos
lea
mov
xor
mov
hlt
ds
xchg
dec
cld
sti
aas
or
add
add
ds
pop
call
pop
push
fildl
add
test
add
push
stos
fldt
fcompl
je
movsl
mov
add
add
aad
add
nop
addl
or
add
mov
add
or
or
sbb
roll
mov
add
sub
add
outsl
dec
mov
add
or
addb
lods
add
jle
imul
mov
add
mov
popf
jb
mov
jb
test
add
push
out
jno
nop
divb
fisubrl
clc
jae
loope
mov
test
mov
stos
cld
push
stos
add
and
or
cmp
and
add
or
or
add
sub
scas
hlt
dec
call
push
repz
xchg
add
aam
bound
push
xor
insl
mov
add
mov
test
add
sbb
add
add
mov
or
add
nop
data16
loop
inc
insl
inc
cmp
dec
mov
adc
sbb
add
add
ss
pop
pop
incb
jecxz
xchg
add
imul
add
push
mov
jge
mov
xor
sbb
add
sub
add
push
neg
movsl
icebp
mov
mov
dec
out
stos
mov
ja
jl
aaa
in
add
or
add
pop
sbb
xor
mov
roll
pop
jo
sub
add
xchg
pop
add
add
pop
mov
sub
cmp
or
add
push
add
lods
add
ljmp
xor
mov
stos
fs
jns
mov
dec
loopne
test
add
addb
push
add
xchg
outsb
mov
fistpll
ds
aas
jp
movsb
add
cmp
jns
jmp
add
pop
aaa
cmp
push
movsb
add
push
add
dec
add
scas
data16
mov
add
mov
add
lahf
shll
test
add
add
adc
popa
pop
call
add
add
cmp
mov
add
xchg
pop
inc
xlat
push
mov
imul
repz
add
xchg
pusha
lahf
addb
pushf
ljmp
xchg
ret
test
add
mov
push
inc
lcall
xorl
push
mov
add
add
inc
add
add
jnp
pop
mov
add
cmp
mov
rcrl
jne
add
add
lahf
std
scas
add
xchg
dec
pushf
dec
mov
add
or
add
inc
sub
leave
decl
add
rcrb
repnz
lahf
cmp
int
push
xor
adc
add
sarl
incb
rclb
loope
stc
subl
mov
adc
jg
daa
add
add
add
cltd
add
add
fwait
adc
push
shll
mov
sbbl
aas
inc
stos
add
cld
ss
mov
sbb
mov
add
sbb
sub
xlat
bound
or
sbb
add
cmp
pop
add
test
add
pop
inc
mov
lods
add
add
inc
popf
mov
xchg
sub
add
or
add
popa
add
add
sbb
dec
xchg
mov
stos
movl
pushf
daa
sbb
mov
add
sub
add
mov
add
loope
cwtl
stos
and
add
mov
insb
movl
aas
dec
jno
push
js
std
xchg
sbb
sub
jecxz
add
jnp
mov
movl
int
mov
add
or
add
out
add
mov
add
add
mulb
add
inc
dec
fmuls
ss
je
add
sub
cvtps2pi
out
add
cmpsl
stc
mov
add
xchg
push
daa
test
fldt
and
add
dec
adc
imul
adc
or
add
in
rorl
inc
mov
add
pusha
push
jno
repz
inc
scas
push
push
mov
inc
imul
or
add
and
add
aas
dec
lret
pop
add
add
outsb
dec
lea
add
inc
je
daa
leave
lret
or
pop
push
jle
fisttpll
in
lcall
lds
sub
add
dec
mov
add
das
movsl
xchg
add
add
into
ret
repnz
out
mov
push
add
mov
testb
add
sbb
scas
add
sbb
adc
add
add
pop
mov
pusha
cmp
pop
les
add
sub
les
sti
scas
scas
add
hlt
sbb
add
jle
in
cmp
addb
xchg
xchg
pop
sub
out
pusha
or
add
add
sub
add
or
add
mov
stos
das
and
insb
in
mov
sub
add
xchg
dec
lods
add
mov
add
rorl
das
sbb
test
xor
insb
fst
sub
add
ret
push
add
mov
adc
ret
push
sarb
arpl
add
sub
add
add
add
add
addr16
dec
repz
add
outsb
add
dec
jl
cwtl
add
pop
lds
insl
stos
mov
add
daa
loopne
daa
shl
jns
xchg
mov
add
add
sbb
orl
add
add
inc
cmp
add
fstpl
add
in
movsl
fs
xchg
dec
mov
rcl
sbb
and
add
mov
lahf
ds
sbb
lods
add
jno
lea
pop
and
add
add
popa
lahf
inc
mov
imul
das
jae
jle
or
add
or
add
pop
jnp
push
add
int3
cwtl
out
cld
icebp
mov
mov
add
and
add
add
fistpll
inc
xchg
and
add
mov
add
mov
mov
add
fistps
into
out
mov
add
out
mov
idivl
xor
pusha
and
add
xchg
pop
scas
add
test
add
pop
jmp
adc
add
jns
xchg
sbb
add
sahf
leave
aaa
std
ret
add
or
add
pop
and
mov
add
add
fisubl
add
ja
add
shll
add
mov
add
or
outsl
mov
add
or
add
adc
cltd
mov
add
loope
sub
xchg
jae
xor
fwait
mov
in
sbb
aam
jp
xchg
mov
xchg
fidivrl
sti
out
add
int3
outsb
push
fwait
sti
push
add
aad
fadd
fsubrs
add
mov
sysret
add
add
loopne
add
lahf
push
cmpsl
jnp
pop
or
leave
hlt
dec
push
and
add
int
xor
inc
dec
jmp
xor
shrl
sub
add
aas
sub
push
ja
push
xor
ja
outsl
jmp
in
add
push
sub
sub
add
ret
add
dec
and
out
mov
addb
rcll
movsl
test
add
push
add
inc
add
pushl
std
sahf
test
add
rcrl
add
push
push
adc
pusha
insl
int
rclb
mov
mov
test
pop
mov
out
ret
int
int3
jno
aad
add
loop
cmp
frstor
add
add
call
adc
inc
stos
aam
movsb
add
cmp
scas
add
call
in
cmpsl
packssdw
mov
test
loop
mull
sti
dec
repnz
add
ficompl
out
cmp
dec
push
push
fwait
sbb
ret
test
je
mov
add
lahf
and
add
xchg
push
add
xchg
xchg
add
lcall
pop
fninit
scas
add
cmp
and
out
pop
mov
int3
daa
xor
xchg
xor
inc
imul
sbb
add
data16
add
das
mov
add
cltd
and
add
mov
adc
nop
cltd
jo
add
loope
xchg
bswap
xlat
incb
rorl
add
pop
test
add
mov
cmp
add
xchg
xchg
mov
add
xor
inc
xchg
add
test
xchg
fucomp
sub
outsl
fistl
pop
out
dec
rorb
add
std
fstps
add
mov
test
pop
dec
jbe
adc
xchg
arpl
jnp
daa
imul
push
aad
negl
add
out
add
lock
add
andl
lret
cmp
add
add
data16
mov
sub
lret
inc
jge
add
xor
jbe
test
add
leave
lret
int
daa
fadds
cmp
add
ds
loope
adc
jge
sbb
fdivrl
lds
add
add
add
imul
sub
add
jns
mov
add
add
mov
lods
sbb
out
nop
test
xchg
xchg
add
add
and
sbb
xchg
bound
dec
fisubrl
dec
xchg
popa
xor
cmp
push
add
pop
mov
stos
xchg
mov
add
sbb
and
add
add
adc
pop
pop
mov
ret
jmp
lahf
leave
cmp
addr16
icebp
test
add
inc
imul
das
mov
add
add
gs
hlt
jl
cmp
add
add
add
xchg
sub
xchg
sbb
mov
add
sbb
test
add
jnp
fwait
add
add
out
adc
add
pop
push
xor
xchg
stos
adc
mov
add
push
mov
shll
add
lea
add
lods
sub
add
add
sahf
xorl
add
xor
add
scas
add
ds
in
adc
enter
dec
adc
movsl
jle
add
inc
or
add
add
or
loop
insb
sbb
add
ss
ja
sub
jnp
shlb
pop
out
cmpsb
add
inc
push
add
mov
add
into
lcall
push
imulb
fnstenv
pop
out
adc
iret
mov
and
add
sbb
ljmp
dec
fstl
cmp
in
or
add
out
pop
mov
sti
addr16
stos
inc
pusha
mov
add
adc
addr16
addb
jp
xor
neg
add
sub
add
add
add
push
add
sbb
sti
sbb
cmp
xchg
add
add
repnz
loope
mov
add
adc
inc
fidivrl
in
xchg
mov
mov
add
addb
aaa
mov
cmc
fimull
add
pop
pop
movsl
xor
add
mov
mov
pop
adc
into
push
sbb
xor
fcompl
mov
jbe
xorl
xchg
add
call
push
outsb
mov
xor
lcall
adc
xchg
lret
cld
out
arpl
iret
adc
cmp
jg
bound
dec
sbb
scas
stc
lahf
or
lods
add
push
pop
ror
mov
add
aaa
imulb
jl
push
xor
inc
iret
outsb
int
inc
mov
sahf
dec
ss
ret
mov
fadds
mov
shlb
cmp
mov
sbb
add
cwtl
fwait
jle
adc
mov
add
pusha
or
add
je
shll
cmp
push
jb
addb
xor
add
jle
xor
push
mov
jb
pop
lahf
vpaddsb
mov
inc
or
add
dec
mov
cmc
repz
add
add
aaa
jp
scas
insb
adc
clc
loope
jle
push
sbb
clc
xor
sbb
add
add
shrl
lret
sbb
mov
add
add
add
aaa
adc
test
add
push
out
push
cmp
pop
in
int3
mov
xor
lret
add
inc
dec
into
xchg
aad
add
call
mov
lahf
push
inc
pop
jmp
cli
adc
dec
or
add
shl
push
add
sub
movsb
add
jno
lcall
movsb
add
xlat
jg
mov
or
mov
pop
in
jae
add
sub
add
lcall
sar
inc
ret
add
in
add
hlt
push
add
pop
std
rcr
sub
add
mov
dec
jo
xchg
loop
ficoms
cmp
and
and
add
jns
out
loope
sbb
add
mov
inc
cmpsb
add
mov
add
cmp
lods
push
mov
js
js
or
add
lret
aaa
xlat
mov
add
int3
xor
cli
push
aam
lods
add
xchg
or
add
lret
outsl
test
add
mov
inc
shl
add
gs
mov
or
add
aas
xchg
add
pop
mov
imulb
out
sub
add
inc
and
add
into
loopne
pop
push
jmp
jle
adc
add
sub
add
push
xchg
sti
hlt
xor
push
insl
xchg
loop
add
xchg
or
add
or
jbe
ret
rclb
add
clc
xchg
add
jns
loopne
push
imul
fwait
cmp
into
fldt
add
mov
mov
pushf
hlt
ljmp
jmp
cmp
mov
scas
jb
scas
int
aad
push
mov
add
int
xchg
add
pushf
push
add
mov
dec
ret
xchg
out
int
add
lods
imul
sub
add
mov
cmp
js
addb
pop
aas
mov
jp
enter
push
jecxz
sti
pop
pop
jp
add
jbe
adc
jae
pusha
nop
jp
xor
add
aas
sub
or
add
cmpsl
sub
add
add
idivb
arpl
leave
push
daa
sub
scas
adc
push
add
sbb
or
mulb
sbb
xor
mov
nop
stos
add
jp
arpl
montmul
cmpsb
add
out
xor
add
inc
push
mov
jb
adc
sbb
add
and
sbb
push
add
loop
bound
add
sbb
add
xchg
push
add
sbb
mov
mov
addb
cmp
add
ljmp
add
sbb
sbb
dec
dec
rcrb
enter
pop
mov
insb
dec
adc
idivl
and
in
sbb
lods
imulb
add
cvtdq2ps
mov
add
dec
adc
aaa
jnp
imul
nop
addl
add
inc
lods
add
jg
pop
outsb
sarl
je
cmc
and
in
pop
xorl
scas
loope
fwait
jno
and
add
rolb
add
in
pop
loopne
add
add
add
leave
lcall
shr
cmp
dec
mov
push
in
push
popf
popaw
xor
mov
cmp
jae
stos
into
roll
pop
add
mov
push
dec
pusha
push
int3
fwait
clc
sbb
push
add
test
add
add
add
testb
aas
mov
and
jns
outsb
lahf
adc
lods
add
pop
lods
fsub
push
dec
inc
mov
add
scas
add
enter
movb
add
mov
dec
and
add
jbe
mov
add
cmp
jo
add
out
pop
js
add
dec
pop
cwtl
ss
je
pop
sahf
lds
das
pop
xchg
sbb
dec
pusha
xor
fcoml
ffreep
jmp
mov
add
jg
iret
push
into
shrb
add
push
pop
shrb
xor
stc
add
xor
cli
lcall
div
sub
cltd
pusha
pop
addb
imul
lret
out
add
popf
subl
add
lret
xor
popl
lods
mov
add
add
mov
pop
add
outsb
sub
ret
add
jp
mov
add
jge
rcrb
add
adc
add
push
clc
repnz
xchg
fnstcw
inc
dec
dec
push
xchg
mov
decl
sub
add
push
stos
jns
inc
mov
push
ret
lods
add
pop
stos
fisttpll
test
mov
add
divl
aam
add
push
push
add
loope
push
xlat
mov
add
and
push
in
cmp
sahf
mov
xchg
popa
mov
add
cli
mov
push
push
imul
insb
inc
lahf
addr16
cmp
add
mov
iret
sub
add
or
add
sbb
mov
jl
mov
int
push
push
mov
add
sub
add
arpl
add
pop
xor
add
pop
push
push
aad
pop
pop
add
add
xor
add
and
dec
add
xor
icebp
sub
add
jmp
pop
ret
xchg
stos
mov
add
cmp
pop
and
add
enter
mov
jg
mov
mov
sub
and
insb
loope
ljmp
in
movsb
add
loopne
cmp
jbe
popf
leave
imul
xchg
mov
out
stos
pop
sub
add
and
add
pop
fcoms
push
in
nop
xchg
push
enter
iret
out
jmp
add
test
icebp
xchg
nop
out
push
push
add
jae
xor
test
add
jmp
adcl
cmp
jns
add
outsb
ljmp
add
sbb
add
cmp
mov
add
mov
and
add
jge
inc
mov
add
cmp
add
je
and
add
mov
bound
pop
and
add
mov
fcompl
xor
lods
fwait
and
add
add
pusha
jne
xchg
adc
add
in
jbe
or
add
jo
add
push
outsl
jle
add
nop
fcoms
jns
jle
sub
add
fucomi
cmp
mov
add
test
add
or
add
mov
add
dec
ret
sbb
popa
loope
ret
mov
jg
pop
cld
mov
add
add
cmp
pushf
cltd
adc
dec
push
lahf
push
xchg
mov
cmc
mov
pop
mov
add
add
js
sar
or
jl
add
ret
mov
loop
add
inc
pop
hlt
dec
mov
jns
add
push
add
sahf
mov
xor
aas
cmp
add
add
add
iret
mov
push
add
push
fbstp
add
jmp
jge
push
inc
mov
pop
sahf
fbstp
and
add
inc
loopne
add
cmpsb
add
repnz
and
fimull
aas
inc
push
add
outsl
xlat
dec
xchg
add
loop
jl
pop
iret
ficomps
pop
cmpsb
add
pop
test
test
add
mov
in
jae
jle
push
js
or
sub
add
sub
mov
addb
mov
enter
push
push
cmc
sub
add
mov
add
jmp
in
and
cmp
add
sarl
pusha
and
add
cmc
dec
stos
add
mov
add
add
add
dec
push
push
pop
shr
scas
mov
add
add
add
push
push
add
mov
jle
add
lock
bound
loopne
adc
dec
and
add
cmp
cltd
mov
ret
scas
xchg
fmuls
add
shl
das
dec
leave
outsb
push
or
push
fcomp
add
sub
add
cltd
or
ljmp
stc
add
add
xchg
mov
dec
mov
repz
mov
add
add
shlb
pop
sahf
ss
mov
mov
movsl
push
push
fwait
sbbl
lds
jle
ret
popf
and
aam
sub
lahf
lcall
sti
imul
add
push
clc
push
aas
mov
mov
sub
leave
add
add
rorl
push
in
jbe
push
mov
xor
das
outsb
cmp
add
shll
movsb
add
dec
pop
mov
mov
lea
sarl
in
sbb
popf
push
mov
mov
dec
pop
addb
cwtl
push
jae
push
cmp
clc
lods
mov
int3
aam
out
mov
mov
push
data16
add
pop
or
and
add
xlat
xor
shlb
add
sbb
mov
pop
sti
mov
and
add
sub
add
mov
fs
popa
lret
add
testl
add
add
add
lods
add
jle
sahf
stc
test
add
std
xor
stc
cli
cltd
mov
lcall
cmp
jns
or
jmp
ret
das
imul
icebp
mov
in
mov
pop
shrl
add
lret
push
mov
or
mov
push
sub
outsb
pop
addb
xchg
fdivrp
push
add
dec
movsb
add
aam
adc
int
dec
pop
int3
into
and
add
mov
push
cmc
insb
loopne
push
xor
lea
pop
lcall
push
mov
add
jne
pop
pushf
leave
mov
movsl
cmp
into
bound
imul
out
loop
lods
add
push
rep
xor
enter
adc
test
aaa
cmpsl
aaa
ret
aas
mov
fistpll
add
add
dec
jg
stos
xor
sbb
add
inc
mov
pop
ljmp
sahf
or
add
mov
add
enter
jge
in
add
add
adc
and
cmc
stos
add
push
add
sti
push
f2xm1
cmp
sbb
shlb
add
lea
cmp
add
sarb
pop
or
nop
sbb
test
and
add
ret
mov
fiadds
dec
ret
iret
cmpsl
test
and
add
adc
in
add
add
adc
xor
add
add
mov
xchg
mov
mov
popf
clc
xchg
movsl
in
shll
fbstp
mov
cltd
sbb
clc
pop
cmc
dec
inc
fmull
imul
adc
add
mov
scas
add
faddl
in
cmp
add
xor
int3
mov
addb
jae
loopne
push
add
mov
add
xchg
dec
mov
push
add
imul
sahf
lods
mov
push
pop
jle
add
repnz
and
add
repnz
add
mov
gs
outsb
dec
mov
add
mov
in
lods
cwtl
and
mov
cmp
repz
add
mov
xchg
sbb
add
mov
pusha
in
shll
or
cli
imul
pop
xchg
arpl
add
add
jge
pop
cmp
add
into
ss
shll
push
mov
add
lahf
clc
mov
xor
add
daa
shl
sub
add
in
add
xor
lock
jb
xchg
add
mov
fsubrl
add
add
jmp
mov
add
mov
or
pop
cmp
jnp
popa
js
add
xor
jb
das
jp
cmp
hlt
cmpsb
add
fsubrl
adc
test
add
add
loop
inc
imul
add
sbb
mov
add
mov
mov
add
mov
add
pop
and
into
dec
lock
push
mov
loope
int3
addb
pop
rcll
xor
push
mov
xchg
cmp
pusha
xor
jo
shlb
add
add
jne
inc
cmp
pop
insl
push
shr
cmpsb
add
int
add
test
add
xor
jecxz
icebp
xchg
addr16
fdivl
into
push
inc
xchg
ret
pop
pop
push
stos
mov
addb
into
aam
pop
cmp
cmp
fistpl
push
and
out
inc
sahf
lea
add
fldenv
leave
das
lcall
xor
push
outsl
mov
mov
inc
in
push
or
add
stos
gs
add
dec
out
add
pop
test
mov
in
jae
add
mov
push
das
pop
jb
adc
insb
stc
ficomps
imul
rorb
push
lcall
add
pop
or
scas
add
in
mov
push
movl
add
add
push
add
sub
add
lea
sarl
cmp
jecxz
mov
jecxz
add
fcmove
mov
xor
mov
in
dec
or
add
add
xchg
pop
and
add
fists
xchg
add
add
push
xchg
leave
cmc
fcoml
xchg
mov
pop
inc
mov
and
add
and
add
add
dec
cmpsl
xor
mov
add
repz
popl
add
sbb
add
adc
mov
icebp
test
add
sti
cmp
push
add
cwtl
inc
dec
or
hlt
dec
or
add
clc
push
sbb
add
add
xchg
call
cmc
mov
lds
dec
inc
xor
imul
pusha
xchg
sbb
fldt
ljmp
cmp
jg
pop
inc
xchg
sub
adc
test
add
and
add
xchg
xor
dec
jg
out
add
add
xor
rcr
pop
ret
jno
push
lds
mov
pushf
mov
cmp
ret
push
jae
dec
inc
cli
jg
mov
lret
sbb
adc
repz
xchg
fistps
inc
test
cmp
mov
pop
sar
pushf
outsl
test
xor
lock
mov
push
insb
addb
pusha
call
add
add
mov
add
pop
xor
add
push
jno
sub
xchg
ss
xchg
xor
out
adc
xor
icebp
xor
add
add
mov
scas
inc
push
dec
daa
cmc
push
div
add
add
rcrb
repz
cmc
sub
mov
add
add
add
ds
mov
into
mov
gs
hlt
lea
dec
addb
push
test
dec
mov
add
je
add
jne
add
jno
xor
add
bsf
sub
add
call
addb
pop
addb
add
pop
mov
fdivr
xor
adc
sub
add
lahf
test
add
cmp
out
cmp
pop
test
add
mov
dec
xchg
nop
icebp
pushf
push
test
out
inc
sbb
mov
add
add
icebp
cmp
add
xchg
test
add
add
idivl
shufps
cwtl
xchg
dec
add
add
sub
add
outsl
xor
sub
sti
and
add
add
mov
add
add
sub
movsb
add
jmp
in
lds
push
xchg
out
pushf
inc
pop
aaa
inc
bound
add
and
add
mov
testb
dec
adc
outsl
or
add
das
and
add
dec
loope
decl
sub
add
and
add
add
mov
add
aas
jecxz
ret
pop
nop
test
add
scas
add
sbb
addb
cmc
ficompl
fisubrs
cmp
mov
int3
incl
mov
xchg
fs
jg
test
movsb
add
js
and
sbb
fs
pop
jg
mov
add
inc
addb
cmpsb
add
outsb
repnz
jmp
adc
push
xlat
push
xchg
test
stc
push
add
sub
add
pop
daa
loopne
add
call
add
sahf
or
pop
loopne
fcmovbe
lcall
push
repz
js
hlt
lea
add
mov
cli
jb
add
lock
add
add
push
add
daa
push
pop
imul
add
add
jb
dec
xchg
inc
cmp
push
mul
mov
add
add
add
mulb
jmp
add
sub
fidivs
jecxz
ret
jmp
add
sti
lcall
add
dec
mov
fucom
xor
fs
cmp
or
clc
lea
jge
add
lcall
addb
dec
mov
xor
enter
or
xchg
add
movsb
add
aaa
inc
imul
add
add
xlat
mov
add
and
sbb
lods
add
dec
imul
dec
dec
mov
or
add
xor
into
inc
cmp
cmpsl
cld
mov
sbb
xor
add
add
in
push
fdiv
inc
into
mov
dec
ficompl
mov
fmull
add
dec
jo
std
dec
bound
and
dec
cmp
repz
adc
pop
xchg
lahf
aas
jmp
push
add
dec
into
aad
add
leave
add
add
mov
in
in
jae
in
imul
add
arpl
push
add
sbb
cltd
mov
pop
cmp
dec
test
mov
add
insb
call
xor
add
cmp
add
in
push
push
mov
rcll
repnz
mov
add
sub
add
imul
add
lret
add
insb
aad
xchg
or
add
add
sti
das
cmp
iret
negb
add
add
enter
in
push
inc
cmp
aas
jl
cmp
add
push
inc
push
in
jg
add
pusha
mov
and
add
int3
mov
pop
mov
jae
cli
lea
add
dec
and
add
xor
sub
lret
js
push
inc
mov
add
add
mov
jmp
add
pop
pop
pop
mov
cmp
add
aas
mov
add
and
add
add
mov
jnp
adc
jae
outsl
ljmp
add
repnz
push
inc
shl
mov
notl
ret
add
inc
mov
out
xchg
xor
push
mov
add
stc
fcoms
jno
out
xor
pusha
cmc
add
adcl
out
into
inc
or
add
pusha
pop
xchg
add
jecxz
fmulp
push
pop
pop
xchg
xchg
pushf
and
add
aam
and
add
fldcw
add
inc
stos
icebp
jg
out
icebp
mov
add
jne
mov
xor
adc
adc
aaa
in
xor
xor
imull
jo
cmp
scas
add
xchg
je
lahf
push
outsl
repnz
add
xlat
xchg
in
mov
mov
add
xchg
out
mov
xchg
add
add
add
mov
add
cmp
shll
jle
dec
movsl
test
add
add
lock
push
scas
loop
faddl
add
mov
or
add
add
mov
fwait
int
pop
sub
add
imul
mov
jnp
idivb
ja
and
pushf
push
fnstcw
add
adc
out
xchg
add
lods
addb
movsb
add
rolb
add
adc
and
add
xchg
stos
fdivrs
mov
xor
std
fldl
add
sbb
and
and
add
in
xchg
dec
push
aad
je
add
mov
add
xor
or
enter
dec
or
adc
ss
cmp
jmp
add
cmc
mov
and
xor
xor
dec
fildll
add
jne
mov
and
add
cmp
xchg
cmpsl
pop
int3
xor
xchg
and
add
and
add
and
or
mov
and
add
adc
inc
mov
fisubrl
sti
mov
add
fs
les
nop
jg
lea
out
add
pop
inc
mov
int3
mov
add
or
jl
cmp
pop
test
add
inc
push
in
pop
sbb
and
add
add
or
lret
add
add
mov
push
push
xchg
add
mov
loopne
add
out
aad
add
mov
add
repz
add
mov
push
int
arpl
in
add
in
fiadds
icebp
insb
test
je
ret
adc
xchg
popf
mov
push
andl
inc
call
sti
sti
jbe
add
push
imul
pop
in
mov
out
add
cwtl
or
inc
cmp
mov
add
xchg
add
mov
rol
nop
in
mov
jmp
aaa
mov
add
mov
add
leave
push
mov
fmulp
cmp
jle
ja
add
jo
clc
out
xchg
popa
leave
sbb
add
mov
aas
out
in
add
add
or
add
mov
add
aam
rcrl
aas
movsl
inc
xchg
add
jno
add
add
add
pop
flds
mov
add
mov
add
mov
les
mov
adc
daa
repnz
add
int3
fcompl
xchg
dec
mov
jmp
add
insb
enter
mov
mov
add
push
js,pt
filds
push
add
scas
or
add
add
out
cli
xor
mov
add
xor
imul
add
sub
or
jo
pop
push
roll
add
loopne
fdivrp
sub
xor
adc
add
xchg
repz
add
mov
add
out
mov
xor
mov
add
add
lret
add
add
inc
sbb
mov
int
fidivrs
mov
pop
jae
mov
add
stc
lcall
insb
jo
in
dec
and
xor
add
pop
mov
das
jae
mov
pop
sbb
add
mov
jno
mov
pop
lods
pop
mov
int
cmp
jae
xor
lcall
cmp
add
and
in
in
pop
pushf
jmp
dec
push
lods
repnz
add
sub
add
ret
cmp
add
pop
adcl
pop
dec
mov
ljmp
movsl
inc
jae
lods
add
fisubrs
add
xlat
push
outsl
cmpsb
add
mov
cli
jmp
lods
add
pop
rolb
stc
adc
addb
inc
xchg
xchg
add
icebp
in
cmp
jp
sub
add
ss
add
xchg
dec
push
push
dec
enter
or
add
add
add
inc
jne
call
add
xlat
mov
add
add
dec
test
add
lret
test
add
or
add
das
scas
add
xlat
cld
and
mov
shl
and
mov
sub
pop
pop
jg
pop
aad
lods
add
xchg
xchg
test
add
je
pop
sarb
rolb
and
add
add
shld
mov
repz
push
xor
loopne
or
add
xchg
xchg
inc
mov
pop
jle
sti
out
cmc
xor
arpl
in
xchg
inc
addr16
std
jle
add
sub
pop
and
add
out
test
add
test
add
loope
and
and
add
add
rcrb
add
xlat
pop
test
add
aaa
pushf
inc
pop
push
imul
add
out
rorl
stos
movsb
add
fwait
lcall
dec
mov
add
add
push
add
addb
push
xor
clc
in
mov
lret
pop
dec
lods
add
pop
pop
stc
xchg
pop
xlat
ja
xor
rclb
in
mov
add
sti
add
mov
rolb
dec
scas
add
addl
add
in
out
out
dec
jno
mov
add
call
add
aas
sbb
push
pusha
mov
add
ljmp
add
pop
dec
mov
add
test
add
pushf
add
sbb
les
lret
jns
mov
jae
add
add
and
xor
mov
sub
mov
add
loopne
cmpsl
and
add
push
pop
rcrb
pop
adc
jle
sbb
outsl
cli
mov
add
addb
mov
mov
or
add
mov
add
push
pop
fsubrs
scas
add
test
cmp
jge
bound
pushf
addr16
mov
adc
sub
add
nop
jge
push
in
repnz
testl
in
idivl
fs
sub
cmp
addr16
popf
das
test
add
cld
mov
prefetch
add
dec
jns
jmp
jbe
add
pop
call
add
mov
add
add
mov
push
inc
fstpl
pop
mov
sub
call
add
xchg
mulb
adc
rol
dec
sub
mov
add
mov
test
add
mov
addr16
data16
fdivrl
and
pop
xlat
mov
sub
add
mov
test
rcrl
mov
add
ret
adc
add
cmp
mov
add
out
add
add
add
dec
push
mov
add
mov
sub
addr16
loope
xlat
and
add
add
adc
cmp
add
jne
sbb
lods
add
or
add
sub
add
arpl
lcall
addb
push
jnp
sub
add
mov
add
lods
add
mov
cmpl
dec
sbb
push
mov
aad
in
and
and
add
enter
outsl
push
add
adc
js
add
popa
inc
inc
inc
clc
cltd
pop
xchg
lods
add
sahf
repz
rorl
add
dec
adc
cmpsl
mov
rorl
stc
dec
xchg
popa
pop
add
mov
shl
adc
add
lcall
pop
push
add
jge
push
and
aaa
jl
or
xor
gs
push
shl
repz
cmp
push
arpl
pop
xchg
in
mov
add
mov
add
sub
mov
rcrb
aad
add
dec
test
or
add
pop
push
test
add
add
add
jle
cmp
movsb
add
sub
add
add
int3
ret
dec
dec
mov
jns
sbb
mov
add
pop
mov
add
dec
jb
xchg
sbb
dec
fistps
add
out
sarl
ret
les
dec
sub
incb
rcr
pop
mov
jge
sub
mov
adc
mov
add
jg
call
ljmp
add
add
push
add
sar
lahf
std
lea
clc
fbld
add
sahf
in
ljmp
mov
jecxz
sbb
add
gs
mov
mov
add
and
add
jbe,pt
sbb
jecxz
in
in
cwtl
ja
mov
add
xor
add
outsb
mov
push
pop
pop
cmp
and
add
in
sub
add
add
jmp
add
mov
add
out
pop
jo
xchg
or
add
jbe
stos
add
aam
lock
aad
stc
jb
out
inc
mov
add
sbb
push
jmp
pop
int3
mov
loope
test
jge
push
dec
cmc
dec
mov
add
mov
pop
in
xchg
adc
mov
mov
dec
imul
sub
mov
insl
xor
addb
in
cwtl
sbb
repz
add
notb
mov
adc
clc
xchg
je
xor
mov
xchg
add
add
movsb
add
popf
xchg
mov
mul
inc
xor
stos
add
sub
jg
mov
add
push
cmp
lret
jge
in
jp
les
add
xchg
nop
push
and
in
adc
inc
mov
jae
pop
pop
test
sbbl
add
cmp
jmp
add
mov
lahf
jbe
lds
sbb
add
pushf
cmp
xchg
add
test
add
add
sub
stos
add
int3
jle
pop
add
ss
pop
lea
add
call
xchg
cmc
mov
add
xchg
pop
hlt
sbb
or
add
imul
pop
mov
aad
stc
fbld
insl
adc
push
add
mov
jnp
add
leave
adc
clc
mov
add
xor
add
add
and
add
jb
or
add
pop
xor
sbbl
hlt
add
add
lea
add
pop
xor
stos
add
repnz
pop
pop
jl
add
cmp
xchg
mov
mov
mov
les
ret
jne
xor
add
add
mov
push
dec
xchg
add
inc
pop
lcall
imul
hlt
add
rorb
mov
add
mov
push
or
add
add
push
pop
test
add
push
xchg
bound
add
arpl
in
push
mov
add
adc
dec
or
add
xor
dec
mov
add
ficoms
dec
outsb
or
add
mov
add
jl
orl
test
add
inc
cltd
push
arpl
fstps
repnz
add
add
mov
dec
pusha
xchg
ss
rolb
jbe
adc
ds
mov
mov
arpl
arpl
daa
shlb
jno
jnp
pop
inc
cli
mov
add
add
add
add
pusha
mov
jle
imul
add
js
into
or
add
mov
add
add
shlb
add
add
test
add
mov
add
pop
test
add
xor
mov
fnstsw
lcall
sub
add
xor
popa
xor
lret
jp
xchg
pop
add
add
or
add
lcall
or
add
test
add
push
cmp
add
fdivrs
dec
inc
iret
xor
repz
cwtl
and
sub
sbb
lcall
fmulp
aas
pushf
mov
shrb
out
jg
add
enter
call
mov
sbb
rolb
enter
mov
stc
inc
cmp
dec
pop
les
add
inc
cmpsb
add
into
dec
add
sti
mov
pop
mov
add
out
add
add
add
mov
add
add
lea
sub
add
push
jnp
cmp
inc
mov
adc
add
mov
insl
jae
test
or
add
add
add
jp
iret
repz
cmp
mov
add
push
pushf
xor
lahf
mov
add
xor
jnp
adc
jo
sbb
and
fisttpl
mov
mov
fmulp
not
push
pusha
jns
xor
cmp
add
aaa
inc
jne
int3
xor
inc
sub
add
insb
and
add
add
cltd
aaa
lock
add
jne
iret
or
pop
mov
fcompl
xor
add
sbb
sbb
addb
scas
add
inc
mov
add
pop
rcl
leave
inc
pop
inc
into
or
adc
jns
mov
ret
sahf
pop
sti
jcxz
inc
das
mulb
add
xlat
out
clc
test
add
inc
addb
lods
sahf
inc
lcall
push
test
lods
data16
add
xlat
into
scas
out
sub
add
outsb
mov
cwtl
addb
stos
push
xchg
jp
addb
mov
add
xchg
mov
dec
xchg
add
out
add
lahf
inc
add
add
dec
mov
aad
inc
loop
dec
xchg
scas
mov
repnz
popa
xchg
into
jns
negb
mov
push
loope
push
mov
lods
pop
ror
add
popf
das
pop
xchg
sub
or
add
adc
dec
mov
mov
shrb
sub
add
add
add
daa
mov
sbb
cmp
rolb
fwait
out
push
add
xchg
fs
adc
or
add
add
fnstsw
jns
add
pop
mov
sub
jge
call
js
leave
cmc
insb
fsubs
add
cmp
imul
test
add
xorl
add
add
or
jo
aam
adc
add
cmc
data16
mov
add
push
mov
add
or
add
adc
mov
inc
pop
pusha
sub
add
xor
add
inc
aaa
gs
jp
rcll
add
cmp
add
mov
add
dec
mov
les
outsb
sbb
out
pop
push
add
sahf
int3
add
add
imul
add
loope
and
add
add
inc
add
les
je
pop
aaa
cmp
outsb
pop
cmc
mov
aas
cmpsl
push
sbb
fildll
aad
mov
roll
fsubp
mov
popf
mov
add
loope
add
int3
adc
sbb
add
pop
ds
cmp
xor
pop
mov
add
dec
cmp
add
add
pop
lods
add
sub
cmpsb
add
in
add
loop
and
add
jno
pop
or
add
movsb
add
or
inc
push
push
lds
dec
mov
add
dec
fsubl
mov
nop
xchg
pop
jecxz
sub
xor
shll
sbb
lds
in
inc
jmp
xlat
frstor
add
into
addb
cmp
enter
out
add
inc
sub
add
jo
sbb
mov
ja
push
movsb
add
pop
inc
add
and
mov
mull
add
push
add
mov
pushf
xchg
jmp
fcomps
xor
int3
mov
or
add
outsl
scas
add
sbb
cld
jp
sub
add
aam
insl
std
push
or
mov
out
jl
add
cwtl
ja
lret
lahf
bound
push
xlat
in
repnz
inc
mov
test
xchg
add
repz
lock
mov
out
push
sub
add
or
scas
xchg
arpl
add
mov
mov
jle
stos
add
stos
pop
call
ja
mov
add
jnp
addb
jmp
mov
pop
pop
mov
add
fdiv
mov
add
jb
mov
mov
icebp
xchg
add
add
aaa
popa
ficompl
pop
add
add
sbb
add
and
shrb
outsb
lret
jne
sub
add
out
adc
dec
ds
add
fcmove
rorb
add
ret
enter
dec
dec
test
add
out
mov
imul
xchg
mov
arpl
and
sub
add
into
aaa
scas
add
test
add
add
add
mov
jge
stos
add
test
movsb
add
mov
cwtl
cmp
add
scas
jae
sbb
and
fdivr
ss
in
or
jns
cmp
pop
movsl
xchg
arpl
outsl
add
add
add
cli
in
das
cltd
popf
gs
fcom
scas
pop
push
sbb
add
pusha
mov
jl
cwtl
mov
add
add
lret
cltd
or
add
add
outsl
scas
test
add
add
push
or
add
add
mov
cmp
sub
out
add
insl
lods
sbb
add
sar
inc
add
add
add
add
jecxz
mov
pusha
mov
icebp
iret
cmc
loop
dec
mov
push
add
sub
add
mov
add
addb
or
add
sub
add
or
add
inc
cmp
add
scas
jecxz
cmp
popf
pop
push
push
sub
add
push
push
jnp
add
sarb
push
add
and
add
add
repz
add
xor
add
jae
mov
mov
add
xchg
xor
add
add
add
add
add
jmp
sub
add
mov
add
push
test
outsl
out
add
mov
mov
add
add
and
pop
and
push
lods
xor
imul
in
push
scas
add
int3
and
add
imulb
add
aas
stos
xchg
push
mov
jns
ret
pop
add
add
ds
mov
hlt
shll
gs
out
mov
pushf
mov
cltd
dec
cmc
movsl
pushf
pop
xor
jbe
lahf
stos
sbb
scas
nop
repnz
add
mov
pop
cmp
fsubs
add
add
add
aaa
sbb
jns
loope
add
mov
add
or
add
cmpsl
dec
mov
add
inc
out
pop
dec
adc
sbb
add
mov
dec
out
mov
add
bound
inc
pop
cli
jge
pushf
stos
add
push
or
add
pushf
sub
add
repnz
jnp
or
add
lock
mov
dec
test
add
and
add
in
inc
add
jmp
mov
mulb
add
fadd
adc
add
push
add
xor
and
xchg
mov
mov
add
addb
pop
jg
mov
add
add
in
in
or
add
xor
add
cmpsl
test
adc
cmp
add
sub
add
sub
add
mov
cmp
add
pop
pop
mov
jnp
add
sub
xor
mov
lods
add
frstor
add
push
test
add
shll
add
push
insb
xchg
jno
movsl
loope
mov
and
cwtl
pop
inc
mov
inc
dec
sub
add
outsl
imull
fnstsw
pop
int
int3
xchg
sahf
in
test
sbb
add
cmpsb
add
dec
jecxz
ljmp
jge
ljmp
mov
add
lret
add
add
orl
iret
sbb
lods
sarb
adc
adc
adc
and
dec
fdivrl
fnsave
lahf
or
add
dec
add
pushf
jne
add
das
jecxz
inc
pushf
sbb
add
lret
gs
sbb
out
sub
add
or
add
add
jns
add
insl
repz
mov
add
inc
push
push
dec
jp
add
cld
dec
arpl
add
xchg
pusha
ds
dec
into
push
add
mov
sub
add
fsubrs
lea
sbb
clc
enter
in
mov
xchg
aam
nop
adcl
jae
icebp
push
pusha
add
ljmp
test
add
pop
push
bound
add
in
mov
mov
jnp
cmpsl
aaa
popa
mov
jg
ljmp
push
add
jae
add
loope
cmp
inc
ja
mov
mov
js
daa
sub
add
sub
add
ror
pop
mov
sbb
lcall
mov
ret
push
pop
cmp
cmp
xchg
sbb
jge
add
and
add
repz
add
scas
add
mov
into
jl
in
cmc
popf
fsubs
aaa
test
add
pop
mov
arpl
mov
aad
inc
aam
out
addb
repz
fadds
add
stos
add
sahf
jmp
push
or
lret
add
add
push
sbbl
lds
inc
add
outsl
or
add
xchg
cmpl
add
inc
cmp
cmpsb
add
sub
add
add
fsubl
mov
sub
add
xor
repz
xor
mov
add
mov
add
pop
xchg
pop
push
xor
dec
insl
jnp
cwtl
ret
hlt
iret
inc
push
ja
loop
out
cli
nop
sbb
ret
cmp
add
leave
mov
add
shrb
add
arpl
fldt
decb
mov
add
flds
xor
add
sub
add
sbb
in
jmp
add
add
add
mov
push
add
push
repnz
jno
add
jno
add
jl
dec
jmp
push
mov
test
mov
add
add
aad
add
ljmp
test
add
add
sbb
outsl
sbb
mov
lret
mov
js
test
add
pop
add
jp
pusha
dec
imul
add
cwtl
arpl
inc
or
add
or
sbb
ja
fucomi
popa
jmp
and
add
out
mov
xor
cmpsb
add
addr16
mov
pusha
outsl
sub
add
xor
adc
xor
les
aad
pop
and
loop
add
test
add
sbb
cmp
imul
ljmp
cld
sbb
dec
les
movsb
add
scas
add
js
mov
add
nop
mov
je
add
pop
loopne
push
xchg
addr16
subl
outsl
stos
mov
cmp
mov
ror
sub
add
ljmp
sbb
sar
call
add
andl
jl
inc
inc
jge
mov
add
add
sti
addr16
shr
fs
adc
mov
jmp
add
xchg
stos
dec
xor
in
cmp
iret
ja
add
repnz
add
add
push
pushf
addr16
mov
les
cmp
test
add
add
shlb
sbb
shlb
sbb
xchg
add
aaa
jecxz
outsl
inc
xchg
je
ret
inc
out
aas
inc
test
sub
add
lcall
cmp
add
add
add
lret
mov
jb
cmp
mov
insb
jbe
lret
adc
add
add
cmp
add
mov
sub
add
in
and
cltd
push
sbb
rcll
mov
cli
push
sarw
jg
mov
or
addb
jmp
add
add
fucom
add
add
add
add
push
add
std
nop
jns
lea
lea
or
dec
pop
sub
add
lcall
loope
ret
jns
mov
xchg
das
addb
addr16
gs
dec
xchg
mov
jmp
mov
add
inc
arpl
scas
add
pop
pushw
mov
add
popa
aaa
sub
add
add
or
add
int
xor
add
sbb
add
jl
add
sub
add
sub
add
les
or
add
jb
and
add
js
insb
jb
daa
mov
fdivrs
add
repz
mov
subps
mov
push
repz
into
gs
lea
enter
add
push
add
jb
push
add
int3
mov
lock
test
loopne
push
add
add
imul
mov
mov
fcoml
loop
daa
mov
add
cli
das
shll
inc
in
sbb
int3
push
scas
shr
pop
xchg
jno
clc
and
in
add
addb
mov
or
add
fistl
pop
cmp
into
mov
add
mov
addb
or
add
mov
aad
aaa
jno
add
add
and
lahf
pop
jae
addb
xor
mov
arpl
fisubrl
aaa
addb
xchg
adc
cmpsl
iret
cmpsl
push
add
pop
fwait
ret
lahf
fldt
shr
jle
push
add
and
add
add
int
xor
cmc
xor
fidivrs
insb
xchg
pop
sahf
jb
daa
and
add
dec
mov
mov
add
cltd
inc
sbb
pop
jl
scas
add
jle
mov
popl
mov
stos
add
sbb
add
add
push
push
add
repnz
jp
cmp
test
sbb
add
xchg
and
xchg
xor
jbe
shr
and
add
add
in
xor
cmpsb
add
fidivrl
push
imull
and
add
push
out
filds
pushf
and
icebp
iret
sub
popf
enter
mov
out
dec
in
imul
jmp
jae
cwtl
dec
adc
cltd
loope
inc
je
and
add
imul
scas
sbb
jg
int
add
mov
add
mov
add
sub
add
add
xor
push
add
cltd
jmp
mov
add
xlat
sub
add
add
adc
cmp
mov
dec
lcall
data16
add
fadd
bound
in
enter
dec
pop
in
and
add
add
sbb
nop
into
push
mov
mov
pop
adc
push
pop
or
pop
int
hlt
mov
jg
sbb
add
fcoml
clc
sarb
xchg
adc
jnp
sbb
cld
movsb
add
stc
addb
adc
add
add
inc
enter
iret
pusha
dec
pusha
loopne
sub
add
icebp
pop
mov
mov
jl
pushf
pop
fucomi
jecxz
mov
pop
nop
outsb
lds
add
add
add
add
cmpsb
add
mov
pop
ss
add
mov
add
movsb
add
sub
pop
mul
shlb
repz
inc
mov
iret
jae
mov
add
and
sbb
jg
mov
in
xchg
outsl
or
add
jo
jg
pop
je
mov
dec
adc
fildl
mov
sbb
aaa
out
pop
inc
mov
mov
add
pop
ja
ss
add
sahf
mov
xchg
add
dec
mov
in
roll
add
add
dec
add
test
pop
add
dec
mov
add
add
jl
int3
loope
aas
stos
arpl
outsl
addr16
int3
aad
enter
fwait
mov
inc
mov
mov
std
xchg
jae
int
adc
sahf
add
add
call
sti
pop
add
add
fcomps
mov
add
arpl
xlat
push
lods
or
ljmp
add
cmpsl
loop
ja
pop
and
add
add
imul
add
xchg
add
add
inc
xchg
push
xchg
mov
mov
add
pop
fnsave
cmp
adc
test
jl
sbb
add
ficoml
push
outsb
fldcw
add
or
dec
add
icebp
add
push
repnz
jae
lock
or
add
mov
add
movsb
add
hlt
scas
add
cmp
mov
fidivrs
pop
xchg
ds
mov
aad
arpl
xchg
movsl
mov
testb
add
add
dec
mov
adc
movsl
xchg
sub
xor
enter
mov
add
mov
add
testl
sbb
lret
pop
int
out
sbb
add
rcrb
pusha
mov
test
add
mov
out
pop
ds
mov
add
sti
push
add
and
add
dec
pop
push
ljmp
add
sub
add
gs
add
add
test
add
ror
in
cmp
add
dec
sbb
add
sbb
push
into
pop
cli
adc
filds
test
add
add
and
sbbl
add
adc
mov
add
add
add
push
lds
sbb
sbb
add
pop
or
dec
in
jb
xor
lods
add
jns
lods
add
ljmp
add
add
add
add
add
out
sub
add
fists
scas
add
cld
idivl
add
sbb
adcl
inc
sub
add
int3
int
int3
xchg
cmc
ds
adc
fistpl
mov
add
add
dec
addb
push
xlat
jl
daa
mov
jo
sub
add
cltd
push
add
out
cwtl
mov
rcrb
xchg
nop
fsubrl
mov
test
add
or
add
sbb
fidivs
sub
aaa
sbb
sub
mov
cmpsb
add
cmp
imul
leave
inc
sbb
test
mov
add
push
mov
jp
nop
sahf
inc
ja
enter
push
out
inc
push
lcall
sarl
sub
xor
fcmovnbe
out
add
int
pusha
cmc
jp
lods
fcoml
sbb
push
bound
add
aad
addb
inc
out
gs
and
fildll
add
pop
fildll
xchg
fs
setne
cmp
add
xchg
sub
arpl
push
dec
xlat
xor
mov
add
push
pop
data16
jmp
add
insl
push
fmulp
add
add
mov
out
and
ficoml
fcmovu
je
lret
hlt
popa
and
add
add
xchg
stos
cmpsl
or
add
adc
cmp
add
mov
add
adc
ljmp
dec
sbb
in
jecxz
incb
in
xor
test
add
clc
in
fwait
cmp
inc
les
add
push
jo
cmpsl
loop
pop
shll
sbb
push
lock
jp
xchg
std
ja
popa
mov
push
mov
je
cmpsl
mov
add
jne
mov
push
and
addb
mov
fsubrl
add
ret
add
scas
add
push
ss
bound
and
add
addr16
aam
push
cltd
lret
sbb
cmc
iret
icebp
lock
push
jl
pop
pop
jb
hlt
mov
add
and
clc
repnz
je
sarb
sbb
jo
clc
push
mov
fisubrl
add
into
xchg
or
pusha
push
add
lods
add
clc
addb
fmul
push
out
add
inc
sbb
cwtl
orl
add
ja
fstpt
stos
movsl
add
push
mov
lea
jnp
add
sub
or
add
test
add
sbb
xchg
and
add
mov
add
in
pop
pop
stos
add
and
xor
xor
add
xlat
adc
std
push
inc
mov
and
xchg
and
xchg
push
jl
rolb
hlt
add
add
cld
daa
mov
push
add
xchg
leave
aad
push
ret
and
bound
jno
popf
sti
sahf
adc
add
dec
ljmp
cli
inc
mov
or
popa
ds
xor
or
pop
mov
mov
popa
push
and
add
leave
sub
add
cmp
sub
add
add
enter
add
loopne
sahf
aad
add
add
insl
xchg
mov
add
push
add
shll
sbb
stos
mov
cwtl
cmp
cmp
add
or
mov
add
sbb
and
sub
add
xchg
add
lock
add
data16
in
sahf
push
pusha
inc
sub
add
bound
xchg
mov
add
mov
cmp
test
add
icebp
pop
push
or
add
stos
add
sbb
add
js
sub
insl
mov
jbe
mov
data16
add
add
add
jmp
stc
xchg
inc
outsb
cmp
add
addb
push
pop
loopne
adc
and
add
mov
add
mov
and
add
add
add
adc
les
iret
arpl
add
cld
loope
cmp
outsb
arpl
add
sub
add
add
insb
xchg
ljmp
arpl
sbb
xchg
push
add
add
ja
out
mov
add
add
add
xchg
ljmp
xchg
stc
int
jbe
rcr
add
add
scas
add
push
sbb
add
bound
pop
jg
pop
insb
pop
scas
add
bnd
dec
fadds
add
fnstsw
jmp
and
add
xchg
fcmove
and
lods
daa
jmp
xchg
push
stos
add
loopne
add
sbb
cmpsl
jle
cli
jmp
add
lahf
lock
add
add
inc
addb
xchg
add
fnstsw
jp
push
dec
lock
dec
and
add
bound
je
mov
add
mov
mov
mov
lret
fstps
ljmp
xchg
pop
ret
add
ret
jnp
fs
popa
stos
add
out
cmpsl
out
adc
dec
cld
and
add
dec
jnp
sub
jle
inc
jne
add
push
cmp
jp
dec
lahf
xor
js
push
push
jns
cltd
mov
jns
leave
add
rcrb
sbb
incb
add
stc
cmpsb
add
sub
add
add
mov
outsl
jp
xchg
cmp
add
add
mov
adc
inc
mov
add
nop
das
jns
ret
add
jbe
in
in
and
pop
cmc
scas
mov
add
imul
lahf
adc
mov
shrb
sub
add
imul
and
add
loop
aad
cmp
lods
xorl
add
inc
xchg
xor
add
popa
bound
nop
sub
add
add
mov
add
dec
dec
mov
add
ss
js
shl
cmc
pop
arpl
adc
sbb
add
push
iret
mov
dec
mov
test
enter
cmp
add
in
int
stos
add
arpl
add
rclb
iret
push
stc
mov
add
add
and
fxtract
cmp
push
add
jno
outsl
mov
adc
push
outsb
jae
dec
sar
data16
sbb
std
leave
testl
fistps
arpl
xorps
inc
out
aam
test
imul
jo
sub
sub
add
mov
idivl
test
add
add
int3
push
add
add
add
push
loop
ja
mov
jge
nop
push
add
lcall
add
add
rcll
add
mov
add
xor
stc
lods
add
cli
js
jle
and
mov
xchg
mov
jl
add
cli
inc
sbb
out
jns
jmp
push
insl
push
xchg
sbb
mov
je
into
mov
mov
pushf
rcrb
scas
jg
aad
cmp
mov
xor
bound
push
ret
popf
mov
mov
lret
jnp
pop
lea
push
add
cmp
push
out
inc
ss
mov
add
test
add
mov
pop
pushf
out
fsave
jl
add
aaa
pop
enter
shlb
pop
lds
mov
push
out
mov
je
xchg
add
add
mov
daa
mov
fwait
jl
inc
cmp
daa
mov
mov
add
push
add
iret
lahf
and
add
add
add
pop
dec
push
mull
add
dec
insl
in
fisubl
cltd
fistpll
test
add
add
dec
ds
dec
jne
xchg
dec
inc
sub
cmp
push
jge
push
xchg
clc
inc
mov
add
xlat
push
add
shrb
dec
rorb
add
and
rcl
push
fsts
call
lods
add
lds
pop
pop
or
add
inc
loop
das
xchg
rcrb
add
mov
jae
push
sar
add
cmp
imul
jo
mov
or
add
add
pop
add
add
out
jb
cltd
js
add
in
and
add
xchg
movsb
add
imul
maskmovq
mull
add
jmp
inc
jb
pop
clc
xchg
push
orl
shll
enter
imul
sub
scas
add
push
xchg
xchg
inc
lcall
int3
sbb
push
sub
add
scas
add
fnstsw
and
add
add
je
xchg
mov
add
sarl
mov
mov
nop
mov
mov
add
push
sbb
sub
mov
xchg
cld
rorb
add
mov
jnp
sub
xlat
or
push
rcrb
leave
or
sbb
addr16
decl
sub
add
inc
cmpsb
add
pusha
jecxz
pop
dec
jp
rorb
add
add
mov
aas
xchg
add
in
xchg
mov
arpl
add
mov
add
add
mov
jb
into
les
leave
mov
sub
jno
xchg
add
fbld
int3
pop
mov
and
add
dec
add
xor
cmpsb
add
test
pop
addb
mov
loop
add
push
sbb
add
movsl
dec
inc
insb
aad
xchg
pop
push
rcrb
inc
mov
insl
mov
shlb
aad
mov
inc
push
pop
loopne
xchg
ljmp
insl
add
add
pop
sbb
cmp
pusha
les
add
dec
mov
inc
push
add
cmpsl
stos
push
stos
inc
add
and
dec
fwait
fwait
cmp
les
and
add
mov
push
std
fadds
adc
dec
inc
push
xor
fs
dec
mov
mov
mov
mov
fs
push
mov
inc
cli
push
add
ss
addb
out
test
add
clc
dec
or
add
add
add
lds
mov
sub
add
insb
dec
mov
mov
add
cmp
pusha
je
push
mov
or
jmp
sarb
and
add
push
dec
cwtl
add
add
icebp
pop
rclb
dec
adc
mov
sub
add
add
divb
inc
lret
stos
sahf
jb
testb
sbb
pop
mov
add
sub
mov
dec
dec
mov
add
lret
rcrl
cld
sbb
add
add
or
xchg
and
add
add
push
add
std
or
repz
sarl
jnp
and
popf
jg
dec
dec
cmp
add
iret
icebp
cmp
mov
out
sub
xor
push
in
mov
add
aam
sti
jbe
mov
xor
mov
add
popf
fcomip
add
xor
imul
adc
pusha
sub
mov
mov
mov
imul
adc
call
add
mov
xchg
in
xor
nop
in
cmpsb
add
sbb
test
and
add
aad
lret
xor
jnp
jp
inc
or
add
add
inc
xlat
cmp
xor
mov
push
xchg
outsl
int
mov
add
mov
leave
cmp
stos
add
xor
adc
sbb
xor
jo
xor
adc
jo
xchg
rcrl
mov
aad
dec
xor
sub
add
cmp
cmc
jge
and
xor
add
ficoms
adc
xchg
xor
stos
add
out
gs
outsl
add
into
xor
test
push
add
in
sub
add
fwait
xchg
pop
jg
loope
outsl
loop
add
add
sub
add
push
int3
addb
push
std
sbb
cli
cmpsb
add
fiaddl
add
les
pop
rolb
add
or
add
mov
dec
mov
mov
popl
cmp
dec
stc
data16
test
add
jmp
rolb
jno
dec
shlb
add
add
add
pop
fnsave
leave
pop
pushl
cmpsl
inc
lret
add
cmp
xchg
add
test
fisubrl
rolb
add
add
pop
pop
jnp
repnz
stos
add
int3
and
add
roll
out
and
add
xchg
sub
add
xor
dec
add
movsl
gs
mov
push
incb
pop
je
jmp
stos
flds
scas
add
cmpsl
loop
nop
or
pop
jmp
ret
add
lret
push
sub
push
push
pushf
addb
mov
jns
outsl
fisubs
add
popf
or
mov
add
ss
jg
enter
mov
jl
and
add
or
add
in
repz
xchg
and
and
add
add
or
add
lds
aas
cmp
xchg
mov
stos
pop
mov
pop
jno
xchg
dec
inc
faddl
sub
add
sbb
xchg
add
out
mov
add
push
add
pop
aam
mov
insl
or
add
sti
add
in
movsl
ja
mov
mov
add
sbb
push
arpl
add
xor
add
ljmp
sub
add
inc
out
mov
add
push
add
aaa
hlt
jecxz
addb
xlat
je
int
xlat
jns
test
mov
sbb
mov
int3
sbbl
or
add
jecxz
popa
jge
fld
push
xchg
add
add
push
mov
push
mov
mov
add
mov
dec
aam
add
jae
bound
add
jge
add
mov
ss
jp
add
pushf
dec
jb
fsubl
pop
bound
leave
add
add
add
sub
pop
lds
or
add
add
mov
push
hlt
aam
mov
cld
and
add
add
inc
pop
jb
fisubl
fsubs
add
cmc
stos
add
sbb
push
sbb
lods
pop
pop
cmpsl
fsts
stos
add
ret
and
add
add
add
cmpsl
fdivs
add
push
andl
movsb
add
adc
jl
notl
das
out
ss
mov
call
add
pop
lea
add
mov
or
outsb
xor
jle
pop
pop
mov
sbb
js
xchg
insb
sahf
mov
int
popf
sbbl
push
xchg
jo
push
jae
insl
sub
add
add
mov
addb
into
loope
imul
add
xor
cltd
cli
cmp
jge
loop
fcompl
in
movsb
add
xchg
or
call
push
in
add
mov
add
and
int3
push
sub
add
ljmp
jmp
inc
test
xor
jbe
hlt
xchg
lds
lcall
lea
mov
sub
add
leave
ja
rol
test
adc
shl
test
jb
rcll
ficoml
xlat
addb
das
lods
add
xchg
push
inc
add
add
lock
add
dec
idivb
add
add
add
add
in
in
jb
add
repnz
push
jns
movsb
add
shlb
add
xorl
lock
push
nop
adc
sbb
sbb
push
add
add
ficompl
add
sbb
insb
sub
xchg
arpl
add
stos
lds
inc
mov
jmp
stc
lret
xchg
cwtl
jp
in
lret
push
insl
in
ss
in
jmp
add
xchg
mov
sub
add
fwait
jge
cmp
lret
cmp
pop
push
add
adc
xor
and
scas
test
add
add
pop
repnz
add
aaa
inc
inc
rol
sub
mov
bound
insb
scas
add
sbb
adc
add
iret
sub
add
pop
jp
xchg
push
add
mov
add
jp
add
sbb
mov
mov
pop
adc
ret
call
loop
push
cmp
inc
daa
mov
cvtps2pd
insl
bound
adc
sbb
aad
add
pop
lock
add
sbb
cmp
inc
add
add
dec
cmp
shr
jl
mov
add
mov
add
add
test
add
sti
repz
rorl
add
push
or
cmpsb
add
fstpt
cmpsb
add
adc
add
add
add
add
pop
addb
cmpsb
add
pop
add
imul
pusha
pop
data16
ja
fsubs
add
push
add
sub
add
add
and
add
add
shr
pop
shll
add
popf
mov
and
add
psubq
pop
push
aad
lcall
jmp
mov
out
mov
in
and
add
mov
sub
jg
out
or
add
xor
pop
sbb
and
add
jo
test
add
movsl
arpl
xchg
mov
and
xor
sub
nop
push
fidivl
add
inc
mov
arpl
mov
add
ljmp
pop
add
add
and
das
push
sbb
add
add
xlat
adc
mov
add
add
push
pop
ljmp
addb
test
sbb
add
pop
push
add
dec
push
lahf
outsb
inc
or
add
and
arpl
mov
loopne
scas
add
adc
mov
in
and
add
add
sbb
ficoml
xor
jnp
popa
add
add
xchg
and
add
push
mov
add
in
les
and
xor
push
add
pop
popa
inc
jl
fdivs
out
dec
aas
jae
add
push
and
add
imul
add
inc
adc
lock
sbb
addb
push
or
add
add
clc
jecxz
jb
add
mov
xor
xchg
iret
jmp
addl
lret
mov
lret
cmp
fwait
jmp
pop
mov
loop
sahf
adc
fldenv
jecxz
mov
int
pop
ffreep
cmp
cmc
add
in
loopne
add
lcall
fs
and
mov
and
add
pop
dec
adc
fcoml
in
add
mov
jno
push
add
add
lea
rolb
xchg
adc
icebp
add
xchg
push
add
fldl
push
add
inc
push
cmpsb
add
or
add
lea
add
das
cmc
arpl
add
inc
cmp
in
mov
ss
add
cmpsl
and
add
iret
out
loopne
jle
and
add
scas
add
ret
lock
jg
add
cmpsb
add
imul
push
mov
call
inc
jle
mov
xchg
add
movl
xor
jge
cmp
adc
sub
xchg
adc
sub
add
add
add
add
add
daa
call
dec
call
iret
push
or
outsb
mov
add
add
jecxz
mov
add
or
add
add
push
add
imul
add
sub
add
inc
dec
xor
mov
jnp
lds
add
imul
call
add
jno
adc
das
out
mov
cmp
shll
add
mov
add
adc
and
add
jbe
inc
loop
pop
cmpsl
addb
pop
add
add
lock
imul
add
das
stos
add
cmc
push
aad
test
add
inc
out
dec
and
push
ds
cmpsl
stos
pop
add
add
nop
dec
jae
sahf
fwait
sbb
lea
push
pop
and
jnp
lcall
aad
sub
add
mov
shlb
mov
inc
xlat
arpl
add
dec
sahf
inc
sub
cmp
inc
inc
adc
inc
cltd
jl
ret
add
iret
pop
into
jmp
and
xchg
or
into
inc
push
add
adc
add
push
add
faddl
test
add
jmp
leave
inc
addb
mov
xor
jle
aad
fstl
imul
ljmp
xor
outsb
ljmp
inc
out
addb
or
scas
adc
icebp
cmpsb
add
pop
hlt
xchg
scas
add
outsb
mov
add
in
cmp
add
adc
add
push
mov
add
push
add
mov
data16
dec
out
add
mov
push
push
out
add
in
add
add
bound
mov
add
mov
push
jl
add
mov
inc
jp
pusha
outsb
out
das
dec
push
fstl
xor
push
add
je
loopne
xlat
adc
enter
insb
js
outsl
dec
xchg
mov
sti
xchg
push
pop
and
push
dec
jp
pop
add
add
mov
scas
xor
popa
adc
dec
rcrb
mov
loop
addb
adc
shlb
add
rcr
xor
hlt
cmpsb
add
rorl
scas
add
fisubrl
fldt
sahf
cmp
jmp
das
dec
test
add
mov
mov
add
dec
mov
sub
add
hlt
ja
push
js
ret
add
xor
stos
add
imul
insl
mov
add
cli
push
xchg
push
push
mov
add
fbstp
lds
rclb
jns
js
sbb
and
icebp
into
call
sbb
ds
add
add
dec
push
testl
add
add
sbb
or
cltd
pushf
fiadds
add
ret
dec
mov
int3
fcmove
push
mov
add
imul
add
aas
dec
push
push
out
lahf
xchg
dec
inc
stos
jl
xchg
in
repz
add
notb
xor
xchg
fdivrl
ret
movsl
inc
in
jns
xchg
dec
stc
mov
enter
mov
test
xchg
hlt
scas
mov
clc
lea
add
pop
and
dec
pushf
fldcw
test
add
cmp
pop
xlat
testl
dec
jl
hlt
pop
jno
sub
add
xchg
sub
add
jns
mov
push
add
aam
inc
mov
add
jo
aas
gs
inc
hlt
and
add
cmp
add
mov
or
add
dec
mov
add
and
add
xchg
rcll
xchg
lret
add
inc
adc
add
addr16
scas
mov
and
add
sbb
jne
notb
jl
add
addb
jae
xchg
fidivl
cmp
add
dec
test
mov
out
pop
jnp
in
fnstcw
decb
mov
movsl
cmc
popa
jae
xor
int3
in
dec
push
aam
xor
xor
adc
mov
dec
mov
sbb
add
add
mov
push
outsl
sub
or
pushf
shrb
pop
cmp
jo
add
push
cmc
pop
mov
movsb
add
push
jns
pushf
jo
call
sub
sarl
add
lahf
or
add
lret
add
rcrl
xor
aad
pop
push
addl
pushf
pop
sbb
add
add
mov
insl
out
out
shr
sub
add
pusha
dec
add
add
add
add
out
pop
jl
addb
push
lahf
mov
pop
or
add
pop
aaa
mov
and
jg
in
inc
fnsave
rol
adc
add
ljmp
inc
mov
add
add
push
pop
stc
xchg
push
jnp
in
repnz
push
xchg
int
ret
jle
sub
addb
sub
or
jg
addb
cmp
pop
out
mov
popa
sbb
icebp
cltd
insb
cli
push
add
pushf
push
add
mov
pop
mov
sbb
adc
jne
inc
dec
pop
inc
mov
rorb
add
mov
add
in
sub
sbb
sbb
and
sub
add
add
rcll
and
add
out
and
add
add
add
dec
jns
push
in
inc
push
jo
stc
scas
clc
stos
dec
fists
pop
push
daa
fisttpll
in
sbb
push
xchg
divl
push
aam
sbb
mov
jl
fisubrs
arpl
rcrb
shrb
adc
mov
sub
add
pop
jno
mov
add
mov
add
mov
xchg
add
add
mov
push
cltd
mov
add
inc
aaa
pushf
repnz
add
mov
adc
or
add
imul
bound
or
fidivrs
inc
insb
pop
cmc
lds
or
xchg
and
add
pop
pop
inc
outsb
fimuls
push
mov
add
xor
mov
sub
stos
add
mov
jl
and
add
jo
imul
cli
xlat
sarl
xor
enter
mov
adc
inc
sub
add
loop
add
inc
add
add
add
fiadds
xchg
add
push
ljmp
sbb
push
add
adc
enter
add
and
add
add
jmp
adc
push
nop
add
add
add
push
or
mov
repz
adc
xchg
sub
add
add
loope
lfs
sub
sub
add
add
imul
add
cmpsl
rcll
jmp
mov
stos
add
inc
and
add
mov
adc
testb
aaa
scas
fldenv
add
adc
add
xchg
add
sub
add
mov
aad
add
mov
add
pop
sbb
adc
inc
jne
add
or
xor
mov
pop
jmp
mov
popf
xchg
sbb
add
add
add
and
mov
arpl
shrb
add
in
shll
lds
sahf
pop
test
pop
inc
mov
jo
cmp
xor
adc
lods
inc
sarb
daa
xor
push
add
dec
int
jae
add
jne
out
push
push
jmp
outsb
lret
mov
and
add
dec
sub
orl
cmp
shll
xchg
mov
sbb
mov
add
cmpsl
cmp
aad
mov
add
jmp
jmp
jp
cmpsb
add
je
outsl
mov
pop
shll
mov
xor
mov
scas
std
sub
add
adc
push
leave
fstpl
sub
call
and
add
dec
cmp
or
add
push
ds
jb
add
push
in
dec
inc
add
add
outsl
mov
add
cld
prefetch
add
sub
sbb
jecxz
rorl
add
pop
add
jp
das
or
dec
test
add
in
lods
mov
jmp
add
mov
std
cld
insb
adc
out
xor
jnp
iret
adc
pmaxub
add
insb
sahf
inc
in
pop
adc
add
pushf
pop
add
add
or
add
inc
in
or
outsl
lods
add
and
add
lds
sub
sbb
add
mov
add
add
movsb
add
insb
push
cli
jae
xchg
add
add
add
add
test
in
outsl
sub
sub
xchg
imul
jmp
cltd
ljmp
fwait
sti
shr
sub
add
out
mov
add
add
push
mov
sbb
repnz
dec
insb
lds
shll
adc
jge
mov
mov
in
xor
pop
test
add
inc
movsl
push
int
add
pop
pop
lcall
dec
jg
add
pop
gs
adc
add
cltd
push
lcall
mov
push
shlb
mov
adc
add
addb
cmpsl
loop
or
xlat
leave
dec
sti
jg
je
lods
add
mov
enter
add
mov
xchg
add
mov
mov
leave
pop
cmpsl
adc
fucomp
loopne
add
sub
add
xchg
cmc
shlb
and
add
repnz
popf
jnp
shrb
int3
rcll
or
add
xchg
add
add
add
popa
stos
add
xchg
pop
into
inc
fwait
pusha
inc
mov
ds
lret
and
xlat
sbb
sbb
jmp
mov
cmpsl
dec
dec
mov
cmc
mov
sarl
push
enter
add
add
sbb
in
cmp
imul
add
jnp
std
cmp
add
dec
rcrb
cli
jae
add
xchg
inc
das
mov
add
andl
xchg
movsl
cli
mov
mov
xor
add
fnstsw
sbb
sbb
mov
repz
test
add
out
in
push
mov
jle
pushf
dec
fidivrs
sahf
mov
xchg
adc
rorl
dec
jmp
add
add
cmc
addb
int3
sbb
inc
jno
add
add
xor
add
cltd
jns
and
add
mov
popf
outsb
nop
jp
pop
jnp
subl
add
mov
je
fadds
add
add
and
add
inc
sub
add
call
jmp
sbb
xchg
call
push
mov
add
inc
xor
test
mov
dec
push
fstpt
lahf
push
insb
cltd
xchg
and
fdivs
adc
add
aam
sbb
add
sti
jp
ret
popf
repnz
gs
mov
addb
imul
add
not
jecxz
lcall
imul
jmp
stc
xchg
add
fs
mov
add
cld
nop
mov
pop
les
sbb
add
add
test
add
dec
cmp
test
xor
cmpsb
add
mov
sub
add
cmp
fcoml
sub
add
sahf
out
test
jno
mov
add
add
add
push
jb
xor
add
add
pop
adc
add
add
mov
inc
cmp
xchg
jns
add
dec
movsb
add
ret
add
pop
je
enter
sbb
xlat
mov
mov
aaa
jecxz
jne
pop
addb
sbb
jp
add
push
xchg
pop
push
add
jp
pop
out
adc
addl
sbb
sbb
pop
inc
add
cmp
outsb
repz
jo
push
adc
inc
cmpsl
data16
dec
mov
or
add
add
inc
pop
mov
aam
rorl
imul
das
push
fdivs
hlt
cmp
jmp
adc
mov
hlt
push
add
outsb
jnp
js
add
cmpsb
add
jbe
and
jne
add
jnp
jg
add
or
add
cmp
add
add
xchg
xchg
ljmp
mov
inc
in
inc
stos
add
cltd
mov
add
arpl
and
add
in
outsb
sbb
or
xchg
ss
das
mov
add
add
add
sar
mov
add
psubq
mov
aas
mov
loop
pop
out
add
or
add
adc
and
add
addb
adc
cmp
add
fdivrp
pop
jb
pushf
aaa
icebp
sbb
jge
dec
lock
add
dec
lea
add
ret
xor
add
popf
in
pop
loopne
inc
roll
mov
add
bound
add
hlt
pop
mov
mov
mov
fcmovnu
call
insw
mov
outsb
cltd
pushf
mov
add
sub
add
fidivs
inc
sbb
inc
jns
jnp
test
pushf
sbbl
xchg
mov
stc
test
popf
std
fidivrl
pushf
int
popa
outsb
sbb
pop
stos
add
mull
sbb
jb
int3
loop
repnz
cwtl
outsb
cltd
fistpl
pop
test
stos
add
mov
test
add
inc
lahf
scas
add
shr
divb
les
inc
mov
add
popa
push
add
jne
add
test
sbb
jle
jp
add
cmpsb
add
or
add
add
or
add
jb
cwtl
xor
ds
adc
push
sub
aad
pop
mov
js
pop
jmp
ds
gs
pop
dec
ljmp
add
push
rorl
add
mov
ljmp
outsb
sbb
and
add
xor
pop
icebp
or
or
add
add
enter
sub
add
push
add
jb
fstl
add
add
or
add
jno
jb
sti
push
and
pop
out
fwait
mov
add
add
fmull
jo
or
add
jge
add
lahf
pop
push
add
out
out
scas
add
rcl
xor
rcl
xchg
add
inc
or
gs
add
mov
push
and
add
push
js
xchg
cld
xchg
xor
lret
add
das
out
repz
aam
data16
push
jnp
rcrb
stc
sub
call
adc
pop
aaa
dec
push
mov
sarb
xchg
add
or
add
xchg
in
push
mov
add
jo
test
add
nop
cmpsl
sub
add
test
add
popf
mov
adc
mov
inc
push
test
add
add
xchg
pop
js
xchg
sbb
add
and
add
mov
dec
xchg
mov
add
pushf
outsb
cli
mov
mov
add
loope
add
or
and
add
insb
pop
sub
lock
xchg
inc
or
andl
add
adc
and
int3
ficoms
fstp
mov
inc
pushf
ret
rorl
popl
in
pop
cmp
mov
loopne
and
add
out
adc
fsub
jnp
in
cmpsl
mov
add
loope
fucomi
ret
jae
add
aas
pop
mov
add
mov
push
mov
fcmovne
std
cld
xchg
mov
add
aas
jne
jbe
cmp
cmpsl
lods
imul
in
aaa
std
mov
add
adc
and
addl
dec
push
addb
loop
mov
add
push
add
call
cmp
ja
add
aam
ja
cmp
pop
push
push
leave
lea
inc
negl
clc
xorl
push
or
add
add
jmp
loopne
lea
orl
cmpsl
loop
mov
jg
inc
outsb
xor
js
addb
fs
ret
add
mov
xor
xor
daa
std
test
cld
inc
gs
lret
aam
mov
add
ficoml
add
inc
xor
jns
add
addb
dec
or
enter
adc
xchg
add
mov
add
push
or
add
pop
mov
add
pushf
xchg
adc
cmpsl
jb
xchg
adc
adc
inc
pop
adc
cmp
add
cmpsb
add
jecxz
sbb
test
add
ficompl
lock
or
add
adc
in
add
add
outsl
mov
lods
dec
mov
mulb
mov
add
fmuls
add
sbb
jge
add
add
decb
enter
out
lods
add
sub
add
adc
push
add
stos
in
addb
pushf
dec
lea
loop
fwait
push
jmp
popf
sub
add
push
mov
idiv
fdivr
scas
dec
loope
add
add
xchg
and
sti
dec
loope
cmpsb
add
mov
fildll
add
notl
and
stc
add
add
ss
ljmp
xchg
shrl
xchg
sbb
pushw
add
mov
lret
lock
mov
inc
loope
mov
and
cmp
fs
subl
add
aaa
addr16
xchg
cmp
dec
xchg
scas
xlat
push
mov
add
pop
stos
leave
das
push
or
notl
add
orl
jmp
or
add
add
inc
fldcw
add
fcompl
pop
sub
jecxz
fcomps
cltd
xor
mov
xor
add
add
pop
shll
add
add
jl
sub
addr16
adc
add
popf
bound
pop
lods
mov
and
add
cmp
add
sub
cmp
pusha
cld
in
dec
mov
inc
cmp
icebp
sub
add
addb
sbb
inc
jo
sahf
inc
shll
mov
push
xchg
mov
or
add
pop
xchg
xchg
mov
add
aaa
pop
jnp
jne,pt
outsl
sbb
enter
jmp
add
addb
je
add
sarb
int
or
pop
shrb
add
leave
sbb
das
dec
stos
add
and
add
or
mov
mov
add
jp
in
xchg
lds
inc
sbb
and
add
xchg
sub
cmp
aam
loopne
pop
dec
shll
add
add
add
arpl
dec
loop
into
stc
cli
fistl
mov
add
scas
xchg
lret
pop
ret
add
call
mov
pop
push
sub
sbb
lods
fisttpl
aam
stc
call
stc
aam
sbb
xor
fadds
add
push
shlb
movsl
or
add
or
add
push
imull
cmp
mov
pop
xor
add
in
iret
mov
sub
add
das
cmpsl
dec
scas
add
bound
aam
shll
cmpsl
push
cltd
faddp
cmpsl
stc
aad
pop
jne
xchg
stc
mov
add
dec
dec
test
and
add
imul
icebp
ds
iret
jmp
xor
pop
out
loopne
sar
sbb
repnz
inc
in
jne
jp
jnp
gs
jae
mov
and
gs
push
idiv
repnz
insb
repnz
out
addb
addb
sub
add
add
pop
popa
mov
mov
dec
enter
or
add
shrl
add
cmpsb
add
rorb
scas
test
add
xchg
sbb
sbb
sbb
ja
cmpsb
add
lock
add
ret
cli
sub
add
pop
lret
add
sbb
scas
add
push
inc
jmp
lret
sbb
loop
rorb
mov
add
dec
mov
inc
in
add
sarl
jb
test
add
scas
lahf
hlt
cmc
ja
leave
rcrb
push
xchg
in
repz
jmp
xchg
add
das
cltd
jp
push
jb
jp
add
pusha
sub
add
dec
xor
daa
mov
mov
add
ss
jmp
and
add
dec
and
add
cltd
mov
add
mov
mov
bnd
cli
and
scas
ljmp
fimuls
repnz
mov
add
sub
add
enter
int3
movsl
lret
add
das
add
test
add
cld
or
add
add
out
jge
mov
add
loopne
add
xchg
test
add
test
lods
add
adc
pop
inc
enter
int3
and
add
cmpsl
mov
adcl
call
mov
push
mov
xor
mov
mov
cli
sub
add
xchg
cmpsl
negl
popa
outsb
imul
fstpt
add
dec
popf
test
add
add
and
pop
sbb
add
mov
pop
repz
cli
xchg
mov
gs
sub
mov
add
daa
idivl
add
sub
add
dec
lods
add
ret
stos
add
orl
add
add
cmpsb
add
lret
mov
push
add
sahf
cmp
add
lods
add
jne
in
xor
add
push
test
add
cmpsb
add
cvtps2pd
int
adc
dec
and
jae
int3
test
pushf
popa
and
add
add
add
pop
mov
add
push
fsubrp
cmpsl
sbb
add
int3
pop
jnp
xor
pop
or
add
xchg
inc
dec
add
ds
dec
int
rcrl
mov
add
cmp
aas
xchg
ss
mov
inc
jb
mov
add
xchg
add
mov
rcl
cmpsl
xchg
xchg
pushl
cmp
xchg
in
mov
ret
jae
or
add
lahf
pop
mov
add
dec
or
add
xchg
and
add
std
jg
out
mov
jnp
in
jmp
jl
repnz
add
sahf
mov
add
add
add
or
inc
scas
add
push
push
sbb
pop
subl
add
mov
add
cmp
add
add
xchg
pop
adc
add
cmp
pop
mov
negb
adc
fiaddl
mov
repnz
xor
enter
xchg
nop
xor
xchg
aad
movsl
xchg
mov
dec
stc
pushf
and
dec
mov
xchg
mov
sarl
call
bound
aaa
or
add
adc
push
and
add
jecxz
cmp
inc
jl
add
dec
adc
lret
add
mov
mov
nop
xchg
mov
add
add
pop
stos
jp
dec
sahf
push
addl
xchg
pop
push
or
out
or
add
aaa
outsb
cwtl
dec
rcl
sbb
je
sti
clc
lret
mov
mov
gs
pop
scas
add
stos
add
movsl
lock
mov
cmp
add
jae
insl
lock
movsb
add
inc
test
enter
sbb
aaa
mov
add
jp
pop
insl
mov
add
fsubrl
mov
cld
and
add
aad
xlat
out
fwait
or
add
xchg
add
xchg
jns
and
add
add
insb
dec
xchg
ss
lods
xchg
arpl
lods
add
gs
push
add
push
test
repnz
lcall
sub
int3
dec
fwait
jbe
adc
popf
movsl
imul
push
lods
or
add
add
mov
mov
add
and
add
cmp
int3
xchg
add
add
fldt
add
mov
movsb
add
mov
add
test
call
add
add
add
pcmpeqb
pop
popa
lock
add
jno
je
mov
aad
shlb
imul
ret
add
in
dec
leave
xchg
push
das
mov
add
aam
sub
push
dec
jo
add
cmp
add
mov
xchg
and
add
or
add
pop
dec
scas
add
out
add
inc
into
imul
add
pop
loope
fdivrl
inc
loop
cmpsl
jg
push
add
cmp
imul
cmpsb
add
or
add
int3
mov
push
add
mov
add
mov
add
add
xchg
adc
stos
arpl
push
xor
pusha
jnp
test
push
inc
inc
xchg
loope
add
ss
pop
mov
add
aas
sbb
mov
or
movsb
add
gs
mov
add
push
mov
add
iretw
or
add
cmp
push
push
sti
sti
repz
mov
adc
add
pop
ja
add
cmp
jno
xor
inc
jns
xchg
js
mov
xchg
std
sbb
clc
push
std
pop
movsb
add
notl
mov
test
add
fcomip
inc
js
daa
and
add
sub
add
xchg
mov
xchg
add
xor
lods
add
xchg
add
add
in
mov
pop
mov
adc
imul
add
imul
jecxz
loop
xchg
add
inc
cmp
in
adc
mov
pop
jo
xchg
sub
hlt
add
add
jecxz
cmp
xchg
stc
ja
add
add
add
lahf
int
lods
jp
add
cmp
sbb
lock
insb
iret
sub
jg
push
xor
sbb
cltd
popa
push
cmpsb
add
fldt
sahf
xlat
jne
repnz
add
mov
add
add
les
test
add
inc
add
ljmp
add
pop
je
mov
cmp
xchg
mov
lock
in
outsb
push
cmp
outsb
add
inc
dec
mov
sbb
out
push
add
mov
push
add
xchg
add
inc
mov
jl
add
add
movsl
or
jl
push
inc
lea
daa
test
add
add
push
ficomps
pop
pop
aas
add
adc
test
add
or
add
pop
imulb
add
lea
inc
mov
pushf
push
iret
mov
inc
and
daa
shrb
scas
inc
jle
lahf
xor
stc
fwait
push
popf
out
add
fisttpll
add
mov
and
add
xchg
and
add
adc
cmp
cmp
mov
add
in
add
dec
stos
add
push
sub
add
mov
add
mov
popf
loope
out
sub
add
add
in
lret
dec
dec
outsl
stos
and
mov
mov
movsl
sbb
or
testl
push
dec
dec
repz
add
movsl
arpl
clc
pop
in
pop
push
add
push
hlt
repnz
add
fimull
shrb
xchg
push
repz
xchg
lret
bound
mov
add
xor
pusha
iret
lods
push
jecxz
push
mov
add
add
mov
pop
xchg
rorb
cmp
or
sti
or
add
cmpsl
out
dec
jmp
jbe
inc
mov
xchg
mov
add
js
mov
inc
fwait
rol
arpl
mov
jb
and
add
pop
add
add
add
mov
add
shlb
or
add
dec
int3
inc
sub
sub
add
mov
lock
cli
mov
add
sbb
jns
inc
nop
mov
lock
addb
push
mov
add
mov
jno
xchg
test
sbb
fisubl
push
in
cmp
movsl
sbb
xlat
push
add
pop
js
add
outsb
inc
mov
add
add
inc
or
add
mov
leave
imulb
call
add
add
push
and
in
inc
adc
add
xlat
jbe
mov
inc
or
add
imul
cmpsl
push
add
mov
xor
mov
add
and
add
add
pop
outsb
in
stc
sub
add
add
mov
add
bndstx
add
cmp
sub
add
xchg
jp
pop
cmp
add
mov
push
scas
add
add
add
add
sahf
inc
enter
mov
xor
loope
inc
inc
sbbl
inc
in
jge
xchg
inc
dec
mov
add
mov
loopne
mov
inc
jle
jo
pop
arpl
sub
add
shll
add
or
add
add
dec
test
sti
mov
movsb
add
inc
imul
lahf
push
add
popa
out
add
dec
add
pop
cmc
xchg
cld
pop
jae
popf
pop
jecxz
sbb
add
je
insb
mov
pop
xor
add
cmpsb
add
aaa
and
add
jle
jmp
add
stos
add
sbb
and
push
test
add
add
and
inc
pop
jno
das
rolb
xor
repz
inc
push
test
inc
je
xchg
sub
add
test
andnps
repz
add
mov
xchg
shrb
xor
adc
addb
sbbl
addb
push
add
inc
push
fs
adc
mov
or
add
or
outsl
test
xor
dec
fstl
out
ljmp
and
add
or
fsubl
add
pop
fwait
cmp
mov
add
test
add
and
add
out
setle
add
popa
mov
add
mov
mov
push
add
xor
xchg
xor
pop
lods
add
jb
pop
ret
push
add
add
inc
xor
mov
inc
sbb
push
add
cmp
add
outsb
jno
in
bound
add
sub
mov
add
or
add
scas
add
mov
outsb
mov
fs
jmp
jecxz
out
mov
add
pop
xchg
add
sbb
repnz
loop
mov
ja
nop
mov
push
inc
xlat
clc
lods
add
pcmpgtd
arpl
inc
add
add
test
shll
lahf
mov
mov
or
add
add
and
mov
add
inc
lcall
add
add
arpl
add
jecxz
add
or
xchg
stos
add
and
test
adc
ret
aad
mov
loope
add
xor
cmp
add
add
loope
scas
je
in
or
add
aas
aad
in
icebp
rcll
add
cmp
xchg
repz
mov
mov
push
add
pop
cld
mov
add
or
loopne
add
test
add
pushf
pushf
cld
xor
in
mov
add
adc
add
jecxz
lea
add
inc
out
add
xor
add
adc
adc
add
dec
insb
lods
mov
out
jns
int3
or
add
lock
add
add
add
add
or
fisubrs
lret
jnp
jo
cmp
lret
pop
dec
shll
inc
stc
addb
mov
add
dec
jmp
add
add
jge
insb
out
insb
into
or
add
mov
add
aas
or
loop
sub
add
xchg
add
ficompl
and
add
je
int
hlt
or
mov
hlt
lret
add
rorb
adc
or
add
add
jle
add
sub
mov
lods
add
arpl
xor
adc
add
jnp
pop
add
pop
cmp
lock
sbb
pop
push
ret
add
lcall
ljmp
lahf
fdivp
sub
das
push
jle
adc
xchg
pop
pop
pop
rcl
xor
or
stc
and
jb
imul
cmp
add
ljmp
push
sbb
pop
jae
add
addb
dec
adc
rol
insb
jl
gs
cmp
jnp
or
inc
pop
cli
loopne
jmp
or
add
add
cmp
fwait
sahf
enter
scas
cmpsl
fsubl
dec
xchg
lods
add
mov
add
cli
cmp
ret
lcall
add
into
push
lcall
jmp
shl
inc
stc
pop
shll
add
rol
dec
xor
adc
jnp
into
in
mov
ja
add
xor
addb
fsubrp
fcoml
test
nop
or
add
add
iret
xchg
add
sbb
add
adc
icebp
xchg
mov
lret
and
lds
dec
sbb
add
add
add
push
mov
das
and
xchg
add
scas
add
push
sub
sub
mov
outsl
sub
inc
fcoms
cli
mov
or
add
inc
enter
les
add
popf
testb
add
mov
std
or
cmpsl
ret
mov
push
sbb
mov
add
or
add
ss
and
add
xchg
jb
add
call
test
add
add
xchg
popf
xor
adc
pop
jl
stos
add
jns
push
sahf
mov
add
out
cwtl
lcall
inc
push
add
xlat
imul
add
inc
xor
add
add
or
decb
add
push
cmpsb
add
stc
scas
add
jne
sbb
xlat
and
add
add
mov
jb
add
jge
add
cli
sub
add
pop
xor
ljmp
inc
sub
cmp
lcall
jmp
or
idivb
icebp
shlb
add
in
dec
in
dec
sub
add
xor
aad
mov
out
or
add
inc
in
and
push
imul
or
add
lcall
jmp
into
xlat
mov
jle
ret
add
repz
and
add
add
inc
push
add
lock
rcr
dec
sub
add
adc
ret
mov
add
push
add
inc
sbb
mov
aaa
addb
mov
jmp
ret
loop
jecxz
jns
rolb
mov
add
add
dec
sbb
inc
pop
push
add
fstpt
mov
dec
shll
aaa
xchg
add
int3
js
add
in
push
and
add
xor
add
leave
push
adc
fcoms
clc
inc
or
add
add
jl
pop
ror
jbe
cmp
pop
pop
int3
mov
add
xchg
sub
lea
add
jbe
fdivl
inc
loope
leave
add
add
cmpsl
aad
lds
movb
add
add
push
add
shll
add
push
cltd
fisubrs
add
inc
sub
adc
dec
arpl
pop
addb
mov
notl
add
add
test
je
and
add
jb
inc
aaa
pop
hlt
insb
fstpt
negl
jecxz
add
add
rclb
add
in
xor
pop
xchg
add
mov
clc
and
in
test
add
lahf
addb
jne
aad
push
leave
and
add
jecxz
mov
add
or
add
sbb
rorb
aas
test
pop
or
add
xor
add
pop
testb
add
push
enter
aaa
mov
add
mov
pusha
mov
xorl
add
add
ret
out
cmc
in
test
add
push
enter
inc
jns
xor
xchg
jg
into
in
adc
mov
leave
outsb
call
add
incl
lock
aaa
add
add
mov
ljmp
fsin
mov
add
add
in
aam
inc
mull
sarb
add
add
int3
inc
dec
decb
add
pop
mov
inc
cmp
add
lock
sbb
ret
fcomps
leave
jecxz
cmc
loop
sub
ror
add
jecxz
lods
pop
loope
popa
adc
add
push
sbb
and
add
loop
addr16
sub
adc
inc
cmp
jmp
xchg
mov
add
xor
popf
fucomp
mov
and
add
add
pop
sarb
fs
sti
mov
sbb
cmp
jns
add
xchg
jg
mov
add
or
add
leave
out
add
lea
xchg
mov
mov
add
sbb
bound
cmp
sub
add
pop
testb
sbb
add
mull
xor
xchg
add
mov
add
add
cmp
add
add
test
add
shr
jge
stc
add
adc
add
std
movsb
add
mov
jmp
jp
lcall
add
jnp
adcl
or
rcrl
testb
add
push
xchg
pop
ret
pushf
out
sub
fwait
jle
xchg
add
into
pop
push
sub
fldz
cltd
pop
mov
shlb
into
aad
adc
outsl
lret
jb
add
jg
inc
sti
popf
aad
sub
mov
aam
ds
sbb
jl
imul
add
movsb
add
jo
add
movsl
mov
dec
std
inc
cmpsl
adc
jmp
cmp
and
or
add
std
int
cmpl
xchg
add
outsl
test
add
dec
mov
add
aam
add
das
ror
sub
add
jecxz
mov
add
in
adc
xchg
dec
stos
cmovs
add
jge
xchg
add
or
dec
lds
pop
loopne
dec
dec
cmp
ss
call
mov
add
pop
lcall
imul
icebp
stos
pop
pusha
stc
fs
shll
mov
add
cmpl
or
add
in
outsb
add
inc
and
add
adc
imul
cmp
mov
add
cmp
jno
xchg
and
subl
rorl
lahf
cwtl
mov
add
ja
into
je
add
stc
mov
hlt
fidivs
shl
sub
mov
xchg
lret
dec
loopne
add
testb
push
add
daa
daa
xor
pop
add
add
lods
dec
stc
push
push
lock
test
add
add
cmp
add
shrb
add
test
add
mov
or
add
sahf
or
add
add
imul
add
lcall
and
add
dec
addb
pop
push
add
testl
lahf
add
add
add
add
jle
jl
test
hlt
jecxz
out
jo
mov
movsl
hlt
imul
add
jp
je
mov
add
or
add
fdivrl
pop
push
xchg
cmp
dec
in
or
add
sub
or
add
lahf
sub
add
jae
cwtl
mov
mov
mov
add
add
adc
add
ret
sbb
xor
push
mov
mov
js
bound
sbb
add
test
scas
add
dec
js
dec
jmp
movsb
add
ljmp
test
add
push
add
gs
add
add
rcll
add
aas
jge
add
xchg
mov
loope
les
sub
add
mov
add
dec
mov
fs
cmpl
movsb
add
xor
cmpsl
imul
add
adc
dec
push
sub
ljmp
mull
or
add
or
add
jmp
push
add
les
mov
aam
ds
add
add
xchg
test
add
sub
popf
dec
cmp
cmp
lahf
xchg
xchg
stos
rorb
add
addb
mov
mov
add
add
addb
add
lods
cmp
add
push
mov
pop
divl
leave
lahf
push
xchg
or
add
lods
add
aam
and
add
lret
sub
add
lret
cmp
cmp
aaa
ret
in
mov
mov
jae
adc
iret
addr16
mov
jecxz
add
fwait
lods
mov
add
mov
scas
add
lcall
sarb
jne
loope
mov
fimuls
add
jecxz
out
loope
sbb
dec
inc
popf
inc
sub
lods
add
xchg
and
stos
add
cwtl
sub
add
lods
lock
jg
and
add
or
add
add
mov
rol
adc
mov
mov
enter
into
lea
mov
add
mov
add
scas
add
jmp
push
xor
push
arpl
ss
dec
js
push
add
add
push
add
lcall
pop
arpl
mov
add
xchg
adcl
jbe
add
lods
outsl
mov
sub
add
pop
add
add
fwait
loop
mov
mov
add
pop
loopne
add
das
push
jmp
push
or
add
xchg
inc
add
add
pop
popf
mov
add
cld
mov
lret
cmpl
in
inc
and
add
in
loopne
lock
inc
add
iret
pmaddwd
push
xor
mov
cmc
xchg
push
or
add
in
stos
or
add
cmp
incl
test
and
add
enter
sbb
std
xchg
out
jbe
fwait
cmp
add
out
scas
out
out
subl
sbbl
pop
jbe
jb
sbb
add
popf
cmpsl
shl
cmp
push
add
aam
inc
enter
pop
mov
add
dec
mov
add
mov
outsb
jp
push
add
stc
push
add
cmp
jns
dec
popa
sub
add
scas
lcall
add
aaa
ljmp
popl
add
ret
aad
add
aas
push
loopne
stos
sbb
xor
add
add
push
cmc
inc
ljmp
push
fisubs
add
add
push
add
insl
fidivrs
add
loopne
add
stos
lods
add
push
addl
add
or
addb
dec
scas
add
aas
imul
adc
add
mov
mov
movsl
mov
add
fsub
rclb
mov
scas
test
add
push
jp
into
iret
imul
or
add
mov
add
imul
dec
push
leave
push
pop
scas
mov
scas
insl
rorb
or
add
dec
inc
js
dec
jnp
sbb
in
and
add
add
scas
std
lcall
mov
fwait
in
add
cld
fimuls
loope
pop
inc
gs
loop
or
add
add
push
stos
add
add
add
jne
xor
dec
push
add
mov
add
add
add
out
add
mov
add
inc
xchg
lods
add
jl
cmc
lret
std
out
mov
and
add
in
jns
inc
pushf
cmc
fildll
add
mov
xchg
sub
push
add
add
add
or
cmp
pop
inc
adc
add
mov
frstor
test
xchg
sub
add
xor
ret
cmp
inc
ja
inc
in
sbb
rol
fldenv
xor
movsb
add
outsb
sub
add
inc
lret
mov
outsb
or
addb
iret
notb
jp
dec
or
sbb
out
addr16
movsb
add
jg
jmp
cld
push
pop
into
adc
adc
add
pop
test
outsb
ljmp
adc
jge
leave
mov
add
in
mov
mov
jno
add
and
add
outsl
mov
dec
xchg
jno
inc
push
add
and
add
or
jl
cld
je
jmp
out
add
pop
push
add
aas
stos
les
test
add
pop
imull
mov
fisubl
and
add
or
leave
mov
add
cli
fdivrl
pusha
rcr
aaa
sbb
push
and
add
pop
mov
std
mov
add
sahf
hlt
mov
add
cmc
xlat
pop
int
inc
mov
pop
das
jns
out
lea
cmp
jbe
aaa
in
mov
das
sub
adc
jne
add
add
ljmp
add
pop
xchg
je
out
sbb
mov
adc
rclb
iret
aam
xchg
out
ret
mov
add
inc
add
add
mov
inc
xor
add
lods
add
incl
gs
add
test
roll
mov
add
add
shlb
add
mov
jae
mov
add
add
add
mov
pushl
idivb
jno
sbb
pushf
aad
movsl
push
add
mov
add
dec
das
std
sub
add
insl
scas
dec
int
sbb
ficoml
push
xor
insl
adc
rorb
add
dec
sbb
popa
jp
dec
adc
add
adc
shll
pop
mov
xor
cwtl
loop
add
xor
out
insb
or
add
add
push
mov
add
add
mov
add
xchg
add
fildll
or
out
imul
sub
imull
add
imul
imulb
lods
add
xchg
add
mov
mov
add
pop
daa
push
sub
add
lcall
mov
sbb
sahf
scas
add
ds
add
add
xor
adc
test
add
rclb
pop
fyl2xp1
loopne
out
incl
add
out
add
add
js
pushf
fbstp
aam
clc
insb
aas
and
add
adc
add
in
cmp
push
xlat
cmc
pop
imul
movsl
dec
jl
das
sahf
ja
cwtl
mul
mov
mov
mov
aaa
xchg
out
adc
add
jno
xor
add
aad
lahf
or
add
add
pop
jmp
aad
jnp
addr16
mov
sub
add
dec
rcll
add
sub
add
push
mov
sarb
les
mov
adc
cmp
add
add
add
inc
leave
jl
mov
bound
loop
push
fpatan
xchg
add
and
jmp
orl
jne
pop
cmp
inc
jl
jp
pop
cmc
lea
mov
mov
mov
mov
loope
add
jecxz
shrb
fmuls
adcl
ljmp
cli
movsl
data16
add
fistpl
sub
add
js
aad
pop
data16
mov
fistpll
add
add
jo
fcmovu
lahf
and
add
and
insb
and
add
iret
test
add
les
push
or
add
out
add
add
add
mov
mov
lcall
adc
ret
lret
add
jecxz
sbb
shrb
inc
sarl
add
cmpsl
ds
out
cmpsl
fiadds
pop
push
pop
xlat
sbb
dec
lahf
fimull
cld
cmp
add
jmp
shr
sti
call
add
fidivrs
rorb
lea
outsl
xor
xchg
out
cmp
add
shrl
popa
adc
push
cwtl
adc
add
xor
sbb
add
cmpl
pusha
rcrl
xor
add
fcomps
push
add
mov
add
in
jmp
aam
push
jae
nop
or
add
push
stos
add
movl
mov
add
xchg
sbb
add
pcmpgtd
jbe
divl
insl
mov
push
jo
cld
cmc
inc
pop
ficoms
sbb
cld
pop
mov
cmpsl
cmpl
sub
addb
cmova
add
mov
add
and
cwtl
jl
aaa
or
add
mov
rorl
add
push
add
lods
roll
lahf
add
add
or
jae
gs
lods
add
mulb
sti
mov
imul
add
jl
add
add
sbb
cmpsl
pop
pop
dec
test
add
add
aad
insl
das
repz
popf
mov
cltd
jo
adc
lds
gs
xor
xor
sub
push
inc
clc
xchg
mov
push
push
aam
enter
mov
fsubs
or
add
mov
cmp
pop
sbb
pushf
add
jmp
filds
or
add
sub
add
js
jecxz
mov
leave
aas
adc
lcall
movsl
mov
add
add
and
add
test
add
mov
adc
leave
out
cmp
xor
add
add
pop
loop
push
mov
daa
addb
cmp
add
lahf
sub
fs
loop
add
cmp
adc
pop
xor
cmp
call
add
imul
or
add
in
jns
popf
fs
insb
push
scas
add
dec
sub
dec
stos
mov
add
inc
mov
mov
ret
daa
cmp
je
pop
lcall
and
push
sbb
ds
sbb
jl
daa
das
adc
dec
mov
push
divb
jns
add
inc
xchg
popa
repnz
add
add
pop
cld
stos
add
mov
jb
aam
mov
add
add
add
xchg
rol
ficoms
sub
add
and
add
sub
add
lahf
iret
push
ds
mov
add
jecxz
ss
aas
addr16
lahf
ret
ljmp
fs
cwtl
inc
inc
mov
and
push
scas
add
xchg
push
enter
test
or
add
cwtl
mov
sahf
lret
outsl
test
add
imulb
int3
jp
dec
shl
xchg
mov
xchg
push
fwait
mov
dec
push
cmc
cmc
sarl
in
dec
into
incl
cmpl
push
movsb
add
iret
sbb
jo
call
lods
add
mov
add
fisubrs
mov
jge
xchg
add
jg
ret
or
loope
aam
cltd
push
add
dec
xchg
mov
mov
scas
int
shll
cmpsb
add
push
into
rolb
out
je
add
xchg
fsub
jbe
add
mov
add
jg
xchg
dec
jecxz
inc
addr16
rcrb
pop
pop
fiaddl
mov
add
lock
cld
movsb
add
xor
xor
sub
stos
add
cwtl
push
xchg
lea
addb
rclb
pusha
sub
add
add
sub
add
push
mov
subl
mov
add
pusha
xor
mov
add
arpl
and
imulb
mov
and
add
push
add
jmp
in
loope
push
dec
add
mov
add
mov
add
add
and
add
mov
aaa
mov
add
sub
enter
and
add
mov
add
jae
ljmp
insl
mov
add
add
sub
jle
enter
jnp
pop
jb
jge
imul
mov
add
mov
add
jg
sbb
add
out
cmp
push
pop
add
sti
mov
add
mov
lahf
jp
push
inc
sbb
inc
cmp
pop
sub
add
mov
add
cmp
and
sbb
mov
movsb
add
mov
cmp
pop
inc
gs
test
add
add
aas
roll
push
cmp
mov
popf
mov
aam
stc
add
pop
pop
jae
push
mov
inc
adc
js
sbb
jae
mov
incb
and
popf
fistps
iret
sbb
push
hlt
and
add
in
leave
or
add
add
cmp
add
jmp
and
in
or
add
xchg
std
sbb
loopne
add
add
add
mov
add
int3
js
cltd
sbb
je
add
lcall
int3
jle
pop
cltd
dec
rcr
repnz
and
enter
xchg
inc
xor
insl
fdivrl
jl
test
add
mov
cli
mov
mov
add
jno
add
repnz
add
add
mov
cmc
out
mov
add
add
loopne
mov
add
and
add
dec
inc
mov
add
sbb
jmp
add
add
shlb
adc
shl
icebp
cmp
add
xchg
and
int3
fimuls
fnsave
pop
and
mov
daa
dec
mov
cmpsb
add
pop
add
add
test
shlb
add
pop
stos
add
sbb
loopne
sbb
sarb
add
adc
add
dec
mov
das
stc
mov
cwtl
and
add
cmp
xchg
aam
add
sar
sub
add
sbb
ret
mov
sbb
out
sti
push
cltd
jo
repnz
add
add
add
das
sub
add
add
xor
pop
jno
jg
cmp
filds
call
xor
fimull
roll
test
or
add
ficoml
add
std
and
add
adc
add
ss
test
xchg
cltd
pop
rolb
add
push
jae
cmpsb
add
arpl
add
pop
mov
rorb
add
add
add
add
out
je
sbb
jecxz
add
ja
adc
add
mov
mov
fildl
insb
out
cmp
into
in
adc
add
js
mov
add
iret
pop
cmp
add
call
inc
lret
add
xchg
cli
sarl
push
enter
sbb
addb
or
add
pop
dec
repnz
add
nop
mov
lret
cwtl
jge
sub
ret
stos
mov
sarb
inc
in
insb
lock
add
stc
out
outsb
jo
cmc
rcrb
stos
dec
adc
outsl
sbb
add
push
mov
fsubrl
add
jle
mov
stc
mov
in
mov
push
aam
jg
jns
push
add
pop
cmp
inc
pop
push
mov
testl
adc
add
or
add
add
pop
inc
popa
xor
fdivl
push
adc
or
add
add
adc
and
and
je
add
sub
add
loope
sbb
mov
rorl
dec
xchg
or
inc
sub
add
bound
test
clc
stos
mov
gs
in
pop
out
aaa
lds
add
add
xchg
mov
aaa
faddl
lahf
cmc
gs
jns
fbstp
lock
xchg
ja
inc
std
hlt
mov
push
mov
loop
or
add
iret
sbb
je
add
bound
sbb
inc
push
mov
push
dec
iret
lods
inc
sbb
pop
jae
orl
pop
into
and
sub
add
cmp
mov
add
and
add
js
sbb
out
pop
dec
adc
adc
fistl
inc
push
jmp
aam
dec
mov
lds
jp
push
bnd
add
loopne
mov
pushf
std
pop
cmp
pop
lcall
add
rolb
add
sbb
pop
dec
stos
inc
mov
add
add
add
aam
test
add
sub
add
fstpl
push
add
pop
pop
dec
sbb
cmp
add
rcll
lret
loop
add
mov
add
and
add
xchg
shlb
push
in
addb
hlt
or
add
mov
addb
mov
rcrl
lock
add
lods
int3
sbb
add
or
add
icebp
mov
add
mov
push
inc
xchg
dec
and
add
jecxz
insb
ret
mov
add
adc
icebp
stos
push
ret
int
arpl
mov
dec
or
add
xor
and
add
movsl
out
fcoml
jecxz
add
mov
cmpsb
add
cmp
ss
sti
push
call
mov
mov
and
add
stos
add
pop
adc
imul
loopne
icebp
mov
add
ja
add
xchg
sub
aam
add
loop
add
stos
add
add
inc
leave
std
add
scas
add
test
xchg
inc
xchg
adc
add
jge
jns
jg
gs
in
push
pop
popf
sahf
mov
add
addl
dec
cmpsb
add
xor
and
sub
add
or
add
int
pushf
clc
mov
imul
das
jne
dec
fistl
sbb
inc
ja
roll
mov
xor
fldenv
ljmp
iret
sub
inc
mov
cld
mov
adc
lcall
add
jns
adc
out
inc
dec
lds
inc
ret
jns
ffreep
addb
inc
or
mov
mov
mov
adc
lahf
jbe
loop
add
in
mov
lods
add
jge
movsl
popf
addb
xor
mov
rolb
lcall
cltd
push
jl
dec
sub
js
sbbl
insl
push
jmp
add
mov
add
add
and
jl
testb
xchg
mov
xor
pusha
sub
add
ja
inc
loope
movsb
add
mov
shr
mov
add
and
add
inc
cmpsl
cmp
push
or
add
mov
add
and
mov
outsl
pop
js
add
fcompl
sti
pop
jae
subl
in
imul
rorl
add
movsb
add
jle
in
pop
jbe
xor
dec
mov
add
mov
or
add
repnz
pop
pop
cwtl
xlat
sub
rcrl
sub
inc
out
repnz
push
sbbl
test
jb
faddl
add
int
mov
jae
into
xlat
gs
xor
neg
mov
add
add
mov
cmpsb
add
test
add
popf
enter
xor
xchg
adc
dec
icebp
mov
sti
and
add
xor
add
in
out
insl
cltd
shlb
add
dec
adc
xchg
insb
xchg
or
xor
out
pop
push
cmp
sarl
mov
xchg
add
add
jb
add
sarb
and
add
push
cli
xchg
add
jnp
sbb
hlt
out
pandn
cmp
sbb
orl
xchg
lea
add
push
repnz
rcrb
and
jb
leave
jnp
add
jecxz
add
pop
sub
add
push
mov
outsl
mov
add
lahf
cmp
jno
sahf
cmp
add
cmpl
cmp
add
sub
add
add
add
cmp
push
lea
das
push
popa
mov
addb
ret
sahf
jo
adc
push
loopne
mov
aad
jecxz
push
add
push
addb
inc
scas
and
xchg
add
imul
mov
idivl
xchg
lock
xor
cld
mov
sarb
movsb
add
je
add
jl
inc
dec
in
pop
cmp
inc
loopne
fs
lods
shr
clc
pop
inc
addb
ds
test
sbb
mov
inc
dec
and
add
add
dec
and
add
clc
pop
mov
ds
xlat
pusha
aaa
xor
mov
inc
mov
testl
push
add
rcl
vcvtps2dq
shl
add
push
add
jp
add
mov
add
jge
inc
dec
popa
push
addb
mov
add
push
fidivs
pop
jle
lds
push
scas
idivl
add
cwtl
jl
int3
mov
mov
outsl
mov
shl
mov
sub
push
and
push
pop
loopne
add
das
dec
mov
add
stc
jg
loope
add
mov
adc
add
in
adc
std
cmp
dec
mov
add
ds
inc
cli
into
xchg
pop
push
add
mov
in
adc
fldl
add
mov
add
add
jg
inc
xor
xchg
adc
push
add
adc
inc
repz
and
add
nop
stc
int3
mov
mov
inc
fcmovnu
cltd
or
add
and
add
push
xchg
add
add
jp
and
add
push
add
xchg
jbe
lods
add
fistpll
mov
push
mov
xchg
inc
jle
push
xchg
pusha
sub
add
insl
fcoms
or
or
add
add
cmc
aaa
stos
add
incl
stc
iret
jne
inc
cmp
addb
push
cmp
add
out
push
call
xchg
outsb
adc
add
lcall
lea
dec
shlb
adc
add
in
scas
add
push
enter
jle
test
xchg
inc
lock
push
xor
jle
xchg
xchg
mov
aas
or
pusha
add
push
leave
add
add
add
jg
push
add
dec
aam
inc
sub
add
cmpsb
add
jno
dec
aam
xchg
add
pop
shlb
int3
xchg
fistpll
push
fisubrl
das
add
add
or
adc
dec
imul
mov
adc
pop
lods
add
in
mov
insb
mov
and
add
test
test
add
mov
add
or
add
ficompl
repz
stos
add
sub
add
movsl
dec
call
adc
mov
xor
add
push
and
cmp
movsl
mov
ret
xchg
aaa
jecxz
add
lods
add
add
pop
and
les
cmp
outsb
cmp
pop
push
pushf
inc
data16
sub
add
sbb
add
push
sbb
test
mov
push
mov
and
add
ret
dec
inc
xor
sub
adc
dec
jae
add
repz
add
add
dec
cmpsl
dec
dec
aad
in
daa
inc
cltd
mov
adc
fcomps
loop
fs
mov
add
pushf
fs
and
outsb
lea
push
add
bsr
adc
sbb
mov
mov
test
rcr
lret
cwtl
shlb
add
insb
mov
add
in
sti
repz
xchg
xchg
xlat
mov
inc
mov
cmpsb
add
stos
icebp
adc
out
les
add
cmp
clc
subl
add
jo
add
push
add
loop
pop
mov
push
push
push
add
or
add
shrl
or
add
lea
int
pop
imul
jnp
sbb
push
push
add
push
add
stc
push
iret
push
mov
lret
jnp
pop
push
jle
add
mov
mov
arpl
xchg
push
shl
adcl
push
loopne
outsl
loope
cwtl
lret
add
ljmp
sahf
ljmp
ja
xor
add
sub
add
addr16
add
push
iret
jge
repz
pop
hlt
inc
pop
fldcw
loop
mov
add
arpl
cmp
das
mov
add
icebp
mov
repz
jno
jecxz
sahf
sub
add
jl
fiadds
jmp
push
adc
sub
add
outsb
cmpsl
ret
arpl
mov
loop
stos
add
loop
rclb
mov
add
cmp
xorl
add
stos
ljmp
mov
cmpl
inc
call
cmc
dec
into
cmp
mov
add
sbb
addb
inc
or
add
je
lcall
mov
add
push
mov
add
add
fs
lods
add
add
add
cli
mov
aad
dec
out
inc
or
add
inc
repnz
inc
lods
add
in
xchg
lret
dec
cltd
pushf
scas
add
sbb
mov
iret
mov
int3
icebp
sbb
mov
aas
jbe
aam
fistpll
imul
add
sub
add
xchg
push
leave
or
xlat
in
cld
mov
and
lods
ret
mov
add
repz
xchg
fwait
jl
inc
push
mov
xchg
mov
add
add
xchg
jp
vpsubb
out
pop
inc
int3
fnstcw
xor
add
fdivs
testb
pop
or
add
add
xlat
dec
ror
jnp
cli
arpl
pop
aaa
repnz
fadds
mov
mov
add
dec
pushw
adc
insb
mov
sbb
add
movsl
xchg
sub
add
jae
mov
mov
add
and
add
jmp
dec
out
xchg
add
jle
inc
adc
test
add
jge
adc
icebp
jnp
xchg
ret
cmp
cwtl
call
in
add
adc
call
or
add
add
movsl
lods
push
and
add
jp
cmc
aaa
inc
popa
push
sub
add
mov
add
xchg
push
popl
add
add
xor
xor
out
dec
cmp
jge
and
push
dec
xor
hlt
movsl
shrl
test
leave
das
cvttps2pi
add
fldl
je
inc
sub
add
and
jbe
mov
lret
mov
add
ret
mov
or
add
aaa
xor
insb
ss
cwtl
out
cld
and
add
into
aad
sahf
fs
test
add
call
mov
sarl
or
add
dec
lret
push
je
fs
add
add
cmp
outsb
addb
out
cmp
dec
je
jmp
add
cmpsb
add
xchg
inc
mov
repz
add
hlt
pop
repnz
rorl
rol
push
inc
mov
mov
dec
jge
repnz
add
std
addr16
addb
adc
pop
not
sbb
enter
jbe
add
fcmovb
mov
out
nop
cmp
mov
add
add
jl
mov
add
and
add
or
mov
inc
xchg
add
stc
xchg
sub
add
outsb
fistpl
daa
subl
and
test
add
mov
inc
dec
inc
add
mov
add
sub
add
and
sahf
mov
add
fs
jecxz
adc
jge
lock
mov
add
mov
ss
add
inc
cltd
in
add
push
add
std
or
add
outsb
ret
mov
add
addb
push
cmpsb
add
add
inc
sbb
pop
xor
adc
outsb
jecxz
xchg
jge
add
xchg
test
push
dec
scas
xchg
cmp
pop
xor
add
clc
jo
pop
or
add
lcall
ret
push
lahf
pop
push
mov
xor
jbe
int
mov
add
xor
add
stos
add
out
fcmovnu
and
add
xchg
addr16
and
fiaddl
add
ret
das
cmc
in
cwtl
add
and
xchg
xor
rcrl
lea
mov
add
pop
roll
aas
inc
mov
xor
mov
cmp
mov
cmp
pop
aas
loope
inc
and
add
jne
dec
arpl
add
mov
add
add
mov
push
push
sarl
scas
jae
sub
dec
test
add
push
pop
iret
inc
jno
or
push
and
je
insl
shrl
inc
fwait
xor
outsb
out
push
add
add
js
cmp
sbb
push
inc
popf
or
out
ret
sti
adc
adc
add
insl
adc
mov
add
push
add
add
cmp
mov
cmp
or
add
add
pushf
dec
cli
mov
push
cmpsl
pop
jmp
in
scas
mov
insb
adcl
mov
jmp
pop
ds
cmc
xor
add
mov
xor
mov
add
inc
lods
add
sti
mov
add
lods
iret
mov
out
sahf
pop
mov
add
jmp
and
add
loopne
test
add
cmp
mov
inc
xchg
addr16
adc
add
fimull
push
xchg
mov
sub
or
add
push
pop
aas
jle
lret
out
mov
add
test
lret
push
jo
repnz
add
mov
add
cmc
divb
stc
hlt
pop
mov
add
pop
push
mov
out
and
add
dec
testb
sub
add
sub
shrb
add
add
dec
shll
add
jne
add
pop
out
ret
xorl
add
icebp
pop
in
int
jle
test
add
and
push
mov
fcmove
xchg
lods
cltd
mov
add
xchg
add
add
insb
aam
bound
or
lock
cmc
movsl
and
add
sbb
imul
add
fcomps
fildl
push
imul
and
add
mov
add
and
add
outsl
cld
push
icebp
dec
sbb
mov
aam
popa
leave
jge
push
add
mov
add
sahf
add
add
add
add
cmp
mov
test
add
add
xor
inc
dec
and
add
fimull
add
push
and
add
dec
inc
jg
sarl
pop
fiadds
add
into
mov
add
or
mov
les
scas
add
pop
adc
add
inc
std
adc
add
decb
lret
add
jnp
mov
add
rolb
add
cmp
push
add
mov
add
lret
sub
add
out
test
loopne
sub
add
pop
pop
xchg
jmp
cmc
lock
test
mov
and
add
push
xorps
fmuls
add
adc
sbb
int
lcall
xchg
cmp
jbe
push
sub
pop
dec
dec
int
cmpsl
jp
and
add
xchg
xor
add
inc
pop
js
inc
iret
in
lret
cmp
sbb
scas
add
loope
sbb
lods
add
push
lcall
inc
fistl
xor
add
adc
scas
cld
ret
jg
aam
adc
sahf
and
add
pop
pop
je
adc
add
pop
in
jns
xchg
jbe
jne
dec
xor
add
sub
add
mov
jl
outsl
fnstcw
lods
popa
rcll
ja
xor
testl
add
lret
scas
add
loop
data16
or
add
mov
mov
out
popa
xlat
rcl
aad
imul
add
dec
notb
les
jne
xchg
jae
rcrl
loopne
jnp
inc
pop
inc
lea
and
add
add
in
push
jecxz
and
jle
jne
add
sbb
popf
pop
jo
in
call
loopne
mov
out
push
adc
repz
scas
add
add
add
adc
add
imul
add
daa
imul
add
adc
add
jo
sub
dec
sbb
xor
lcall
add
or
add
jmp
stc
pushf
iret
das
or
jmp
jg
add
movsb
add
push
add
adc
lea
add
dec
add
mov
add
add
or
ljmp
add
xlat
lock
add
add
loop
fldt
add
cmp
jg
hlt
jo
dec
mov
push
add
lods
add
call
sbb
jge
sbb
adc
lcall
add
je
in
mov
add
repnz
add
addb
cmpsl
popa
jbe
xor
mov
add
adc
fmuls
xchg
lods
push
push
add
push
mov
mov
push
add
aad
adc
cmp
or
add
cmp
out
and
fdivl
outsl
or
mov
add
mov
add
adc
je
fimull
add
mov
std
mov
fisttpl
add
ret
shrl
add
pusha
lock
mov
enter
push
add
xor
add
jmp
add
add
add
outsl
xchg
sub
add
bound
add
sbb
add
sbb
add
jo
fwait
movsl
scas
sub
lahf
dec
data16
nop
sbb
lret
add
add
mov
shl
out
out
or
push
or
xchg
push
and
inc
in
out
mov
xchg
cmc
mov
adc
faddl
add
addr16
sahf
dec
lods
stos
lcall
add
xlat
test
mov
jnp
test
lods
add
pop
dec
pop
or
add
add
push
pop
cmp
push
sbb
push
subl
jb
add
in
jg
aaa
mov
int
mov
mov
sbb
fsubs
add
ja
jbe
adc
movsl
fistpl
mov
arpl
add
jle
in
imul
loopne
mov
mov
add
add
cmp
cld
mov
lahf
and
push
xchg
sbb
les
add
jle
cltd
dec
mov
add
dec
movsl
fcompl
pop
adc
int3
and
add
mov
add
movsl
repnz
or
add
sbb
pop
sarb
add
sbb
lds
stos
je
mov
inc
imul
or
outsb
jmp
mov
ljmp
add
addr16
mov
rorl
and
add
add
addb
sub
add
mov
addb
push
push
dec
dec
push
or
test
ss
jecxz
aaa
and
jge
cld
lahf
out
sbb
or
insb
jg
leave
or
iret
push
adc
push
js
cmp
dec
push
jle
movsb
add
outsb
js
dec
js
jg
pop
xlat
mov
add
iret
stos
lret
push
push
dec
mov
add
or
popa
js
loope
inc
in
add
in
dec
inc
add
lret
adc
sbb
add
mov
rcrl
into
push
add
add
loope
dec
sbb
add
mov
inc
push
mov
mov
je
cltd
lcall
add
pop
rep
cmp
std
sub
je
je
push
mov
fucomi
inc
jnp
dec
icebp
sahf
scas
add
outsl
outsb
pop
lds
sbb
add
ffreep
out
mov
push
cmp
jns
imul
push
lahf
loopne
cwtl
mov
add
repnz
mov
and
or
add
or
add
add
adc
add
in
xor
idivw
dec
inc
add
mov
jae
mov
add
lret
adc
lock
mov
lea
add
add
mov
push
test
cmp
pushl
mov
inc
xchg
or
add
dec
xor
fdecstp
cmp
lret
pop
aad
sbb
mov
add
add
gs
int3
lahf
addb
ret
test
pop
and
add
cmp
sub
dec
mov
add
movsl
ret
add
fmuls
add
xchg
aad
add
in
xchg
xchg
xor
cmp
pop
inc
cmp
xchg
rclb
add
add
or
out
adc
fwait
clc
or
add
int3
fbstp
mov
add
push
add
repz
mov
adc
sub
call
je
mov
adc
xor
addb
sahf
insl
in
stos
add
aas
into
fldt
xor
cmp
lods
aaa
les
add
cmp
inc
dec
in
fwait
mov
movsb
add
xchg
add
add
add
sbb
pusha
inc
fdivrl
push
dec
rcll
mov
add
jecxz
cmp
and
fstl
or
sub
sub
out
lds
and
insl
icebp
dec
enter
les
rcrb
dec
pusha
add
rclb
aad
testl
rcrb
cmp
add
shl
sbb
iret
fldt
repnz
add
je
shlb
add
sub
add
jb
and
lds
movsl
sbb
lret
ds
cld
inc
test
add
push
inc
sub
scas
jp
test
add
fidivs
leave
scas
add
cmp
push
out
rorb
outsl
sbb
fisttpll
mov
push
packsswb
xor
inc
add
ljmp
xor
shrl
sub
add
push
add
insb
jmp
add
lcall
mov
fldenv
jmp
cmpsb
add
jo
mov
add
fwait
call
add
inc
ret
cli
inc
xchg
push
add
mov
add
pop
mov
int
xchg
add
sub
fsubrs
add
sub
bound
imul
or
mov
add
xorl
lret
jle
out
push
add
sbb
aaa
adc
adc
jle
inc
in
or
add
dec
add
add
cwtl
sahf
and
pop
roll
add
mov
pop
popf
stos
ja
inc
dec
int
ret
push
lcall
inc
dec
inc
mov
pop
push
add
fwait
inc
and
mov
cwtl
jnp
adc
lahf
dec
flds
add
mov
js
pop
cld
and
add
ja
sbb
or
add
mov
add
add
pop
movsb
add
inc
aas
addr16
sbb
in
add
jnp
add
dec
push
add
jl
mov
or
add
addb
xchg
push
cmp
mov
call
add
xchg
test
int3
int3
aam
movsb
add
xor
adc
dec
jae
outsl
mov
dec
pusha
pusha
scas
addb
inc
std
dec
sbb
or
add
xchg
push
ljmp
aad
inc
shll
add
sub
add
aam
pop
dec
aaa
mov
jno
add
and
add
pop
loopne
aam
jp
fstpt
mov
rorl
add
add
cmp
inc
sbb
add
sub
add
ret
sub
add
push
add
sub
add
mov
add
mov
cli
ja
mov
fdivr
inc
xchg
out
mov
out
adc
stc
test
add
cmp
add
mov
add
add
popa
add
add
jle
add
stc
rorb
pop
in
add
fadds
pop
cmpsl
and
out
mov
push
add
pop
and
add
icebp
jb
xchg
aam
repnz
pop
ja
xchg
mov
movsl
rcll
adc
add
sub
cld
je
shll
lock
push
pop
mov
lret
call
ficompl
repz
xchg
and
icebp
scas
add
dec
daa
xchg
pop
inc
cmovo
cld
stos
mov
sahf
lods
testb
enter
add
test
add
xchg
mov
xlat
inc
dec
cmp
inc
std
aad
cmp
jmp
add
mov
sub
add
pop
xchg
and
dec
mov
inc
cmp
lahf
into
push
pushf
push
add
cmp
sti
mov
add
repz
cmp
add
das
inc
xchg
mov
xor
add
add
or
movsb
add
loopne
int
adc
cmp
sarl
sub
add
add
add
cwtl
and
add
adc
adc
add
xor
add
add
push
add
sub
add
xchg
gs
mov
add
xlat
dec
dec
stos
add
xchg
aas
mov
pushf
jb
mov
add
xchg
jnp
push
add
lret
lock
push
rcll
mov
add
cmp
push
add
mov
mov
dec
dec
dec
rcll
aam
scas
xlat
out
and
aas
stc
ds
xchg
call
jne
xor
cmc
loopne
push
add
pop
in
jb
inc
inc
jge
lcall
imul
jb
dec
xchg
cmp
mov
mov
add
inc
lret
mov
jne
mov
outsb
pop
push
std
insl
push
loop
lcall
xor
inc
in
lods
gs
inc
test
in
loop
add
add
add
out
or
add
dec
mov
add
movsl
fdivrs
mov
add
pushf
mov
cmp
pop
iret
adc
add
mov
add
push
addb
popa
or
add
inc
call
lods
add
fisttpll
add
sub
or
add
lods
add
out
sbb
js
add
jecxz
addr16
gs
into
xor
inc
aaa
neg
test
add
dec
fisubl
mov
into
pop
fs
jle
mov
sub
add
fs
loope
icebp
cli
scas
xor
lcall
xchg
mov
add
ja
or
add
ljmp
add
js
add
repz
std
sahf
mov
mov
cmp
insl
xchg
mov
add
aad
imul
sbbl
pop
push
and
add
dec
mov
push
nop
adc
add
xchg
arpl
outsl
and
xor
add
cmp
mov
sub
add
pop
xor
sub
mov
sbb
mov
jge
in
orl
in
shr
add
add
roll
add
aam
xlat
out
cmp
inc
dec
addb
pop
xchg
inc
and
add
fisttpll
mov
xchg
add
dec
add
push
or
add
add
xor
cli
add
out
mov
add
test
add
add
jg
decl
jmp
adc
hlt
sub
add
add
std
xchg
push
dec
in
les
pop
movsb
add
push
add
sbb
jle
dec
sahf
loopne
movsb
add
push
add
mov
add
push
lahf
test
cmp
fisubrs
retw
add
mov
jbe
enter
mov
add
and
mov
int
jno
xor
fsub
jo
popf
jae
std
movhps
dec
mov
add
pusha
or
out
dec
hlt
mov
add
test
add
mov
mov
xchg
pop
or
add
inc
jne
add
push
cmc
in
ja
xor
dec
scas
add
pop
mov
sbb
add
dec
add
add
movsb
add
rclb
add
sub
add
xchg
adc
int
lcall
xchg
add
inc
sub
add
add
pop
mov
leave
and
add
or
fsts
jbe
data16
and
add
dec
leave
cmp
rcrb
and
mov
loop
aam
sub
icebp
xchg
push
add
inc
addb
movsl
jae
div
mov
jae
fnstenv
jmp
add
mov
add
in
sti
jno
lods
addb
negb
pop
outsb
mull
jns
aad
call
mov
pop
imul
mov
je
sbb
daa
scas
adc
test
add
jns
pusha
data16
pusha
addr16
lcall
lods
push
or
add
jb
push
add
mov
adc
mov
ljmp
mov
add
fisttpll
mov
add
sbb
add
aas
adc
add
add
xor
add
add
and
add
add
add
pop
sub
cmpsl
mov
test
jmp
shlb
xchg
mov
or
add
ds
jl
push
loope
add
movb
add
sbb
cmpsb
add
shll
add
nop
hlt
cmp
rolb
repnz
push
pop
and
add
js
xor
into
stos
add
hlt
fstps
cmp
inc
sub
add
add
sbb
add
adc
add
in
jns
cwtl
jne
mov
in
lret
stos
and
out
cmp
movsb
add
mov
push
pop
add
cli
mov
lcall
ret
jae
adc
push
push
in
mov
pop
shll
lret
shlb
add
push
push
mov
add
sti
loop
or
add
jbe
add
call
std
add
dec
iret
dec
mov
inc
jle
add
call
mov
add
adc
mov
mov
lds
add
mov
add
vsqrtsd
nop
das
icebp
sub
inc
mov
mov
das
or
jge
add
hlt
loop
rcrl
adc
lcall
add
sbb
and
jmp
fsub
pmaxsw
cmpl
pop
cmc
pop
js
dec
popl
xchg
icebp
or
sbb
pop
test
push
add
xor
add
pop
lds
adc
clc
sub
in
jae
jne
outsb
repnz
mov
pop
lock
push
add
mov
add
mov
repz
add
les
mov
sbb
repz
leave
lods
jnp
gs
mov
add
gs
gs
push
addr16
add
sub
add
pop
jecxz
rorl
decl
add
xchg
push
mov
add
and
add
add
add
lahf
fdivrl
out
inc
jle
push
mov
add
cmpsl
adc
mov
stos
mov
js
add
sbb
sbb
add
mov
add
sbb
setle
test
xchg
add
xchg
lods
add
imul
add
add
sbb
stos
add
pop
mov
aad
mov
add
dec
hlt
pop
pop
popf
or
pop
xchg
lcall
in
jg
xor
push
adc
and
ret
in
mov
add
xor
insl
or
cwtl
aad
rol
add
add
adc
mov
mov
mov
je
fcmovbe
in
negl
test
add
xchg
incl
aad
mov
sub
add
and
add
lods
add
sbb
ret
popf
bound
mov
push
test
add
sub
ja
pop
aad
push
add
mov
insl
adc
adc
or
add
add
jge
ds
sahf
mov
add
das
jnp
jbe
mov
add
ja
add
iret
outsl
shrl
xchg
cld
insb
fdivl
dec
xor
push
enter
std
sbb
jecxz
nop
stc
push
adc
in
push
or
adc
add
test
adc
add
loop
out
push
add
cli
xchg
sbb
subl
xchg
aaa
fisubs
shlb
add
or
add
add
dec
sbb
add
adc
lock
pop
mov
jp
jo
inc
lock
push
bound
lret
mov
mov
jp
xor
jno
mov
add
rol
in
push
imul
pop
xor
lds
jecxz
aas
cmp
lds
inc
roll
push
data16
mov
add
cli
stos
jns
push
or
add
sub
xchg
movsb
add
lahf
stc
mov
add
add
inc
or
add
add
addb
mov
lahf
testb
add
pop
jmp
add
ret
rcll
cli
jne
std
lds
inc
dec
xchg
repz
mov
frstor
movsl
xor
dec
push
add
sbb
adc
dec
call
fdivl
xor
cmp
leave
outsl
arpl
call
and
add
outsb
pop
test
and
xor
push
gs
pop
imul
stos
add
pop
cld
dec
lock
dec
addb
cmpsl
outsb
pop
mov
jecxz
aas
add
mov
lret
test
add
mov
sub
add
fistl
daa
xchg
add
xor
mov
add
cmp
std
pusha
sbb
jns
aam
lods
mov
mov
add
data16
icebp
mov
mov
add
addr16
add
add
add
or
cltd
jae
mov
add
mov
xor
xchg
mov
sbb
add
aaa
cmc
aam
mov
xchg
jne
addb
adc
mov
fs
sbb
sti
dec
xor
lods
loop
xor
lea
fildl
stos
cmc
ss
add
jge
mov
add
mov
inc
mov
scas
dec
sub
add
mov
mov
xchg
cmp
mov
push
add
ret
data16
mulb
sahf
inc
ljmp
add
push
sub
cli
pop
sub
add
ficoml
cmc
outsb
aaa
fdivl
mov
add
js
xchg
add
hlt
cli
jb
ret
mov
cmp
aas
xchg
sub
add
push
shl
mov
insl
cmp
sbb
add
dec
xor
lds
fisubrs
dec
xor
add
gs
jno
pop
stos
add
sbb
add
add
add
cld
mov
test
add
cmp
inc
in
mov
xchg
popa
mov
jns
or
jo
cmp
add
mov
loopne
out
pop
scas
add
sbb
sti
inc
and
add
int3
shrb
movsl
xor
dec
fwait
in
add
loopne
add
dec
movsl
dec
popa
in
xchg
mov
out
popf
mov
btr
xchg
mov
pop
jp
add
add
insb
and
add
jnp
mov
xor
adc
mov
add
add
addr16
aaa
jno
mov
add
jle
cld
mov
ret
nop
push
add
xchg
xchg
ss
test
add
add
add
pop
jb
or
add
mov
popf
lahf
cmp
das
iret
iret
loopne
inc
das
push
arpl
notl
cmpsb
add
cmp
jae
test
sub
add
stos
lock
movsb
add
cltd
jp
movsb
add
shrl
xor
push
jb
or
add
inc
test
fcoml
add
push
daa
dec
pop
cmp
and
adc
add
dec
int
lahf
aam
add
push
jecxz
add
in
jne
ljmp
add
loopne
int3
out
loope
inc
aad
pop
dec
je
or
rorb
cltd
arpl
mov
add
jbe
repz
shll
out
enter
stos
add
out
fadds
jecxz
add
push
hlt
aaa
scas
ret
adc
pop
addr16
sub
add
add
addb
int3
xor
lret
xor
out
sub
add
add
repnz
xchg
mov
and
add
divl
clc
inc
xor
gs
inc
imul
add
fld
mov
add
repz
aas
sbb
add
sub
add
xlat
and
add
inc
bound
cwtl
incl
add
outsl
dec
scas
add
mov
add
mov
add
and
xchg
pop
enter
lea
push
dec
xchg
call
jnp
xchg
cmpsb
add
add
sub
in
add
idiv
dec
or
dec
sub
aas
mov
fisttpll
cmp
sbb
or
add
xchg
rorl
fiadds
add
add
and
add
psrlq
sub
dec
in
cmc
mov
lods
add
add
add
add
or
or
add
add
add
gs
mov
sub
add
sub
popa
popf
xchg
jbe
add
cld
adc
add
cld
mov
add
or
add
push
cltd
fstpt
imul
add
adc
dec
lods
add
jle
jb
sbb
sub
add
mov
icebp
int
ret
icebp
xchg
add
xlat
repnz
mov
call
aaa
or
add
lods
add
lea
add
mov
add
gs
add
push
add
add
pop
adc
dec
pop
stc
shll
and
add
dec
xlat
iret
shrl
sbb
movsb
add
add
stc
std
outsb
bound
add
sub
add
add
add
add
mov
xchg
add
cmc
pop
stos
push
pop
ss
jo
pop
addb
cld
sahf
dec
cmp
out
add
popf
dec
cmpsl
mov
add
add
mov
pop
cltd
cltd
call
mov
jp
je
add
mov
addl
add
fidivrl
dec
mov
push
mov
add
push
lret
call
jp
or
add
xor
ret
xchg
jmp
mov
test
and
add
icebp
add
pushf
add
add
add
movsb
add
dec
push
iret
addb
xchg
lahf
cmp
add
stos
mov
sub
add
add
inc
adc
std
out
mov
add
aas
sub
add
inc
dec
jmp
sub
push
add
lea
arpl
jg
xchg
sti
fcoml
dec
mov
gs
sahf
or
add
jns
and
add
jle
push
pop
mov
xchg
int
inc
addb
xchg
add
and
and
add
push
leave
push
dec
xchg
lahf
sarl
push
lret
mov
and
ret
or
add
mov
add
je
push
mov
mov
mov
add
out
adc
rolb
dec
fst
jecxz
inc
jb
fnstsw
out
or
add
out
mov
add
lds
cwtl
mov
and
add
mov
mov
add
add
add
mov
mov
mov
pusha
xor
add
mov
divl
or
add
sbb
gs
cwtl
push
addb
sbb
stos
add
popa
jnp
add
and
add
mov
add
add
ret
repz
test
ds
daa
out
jne
pop
push
fs
xor
inc
mov
ss
fnstsw
mov
pushf
jae
add
jns
insl
dec
imul
pextrw
or
add
xchg
stos
add
push
cmp
mov
add
mov
add
add
xor
sbb
data16
adc
add
jmp
xchg
pop
sarb
mov
je
dec
xchg
sub
add
add
dec
lods
add
or
dec
call
add
add
arpl
std
adcl
add
mov
push
or
add
inc
jns
add
jge
and
add
add
insl
sar
shl
shl
call
sbb
cmc
shrl
cmp
push
movsb
add
push
xor
add
pop
mov
aam
lret
lret
lock
mov
add
mov
add
aaa
cwtl
mov
insb
jns
add
pop
dec
adc
pop
inc
sbb
push
ds
into
lock
je
or
add
and
add
add
mov
hlt
sarl
pop
and
out
mov
add
movsl
adc
in
add
add
mov
add
loopne
push
add
mov
fisubrl
sti
or
sub
adc
add
adc
xchg
dec
aas
dec
or
add
jb
lods
add
fcomps
cmp
outsl
push
jno
test
add
stos
add
cli
xchg
rorb
and
inc
xor
xchg
pop
fistps
and
add
add
inc
shr
addb
adc
dec
sub
mov
or
add
out
in
aas
int3
mov
pop
int
mov
add
pop
push
mov
add
dec
fsubrs
add
dec
adc
sbb
shlb
add
gs
push
addb
fimuls
dec
mov
pushf
jmp
jmp
xchg
pop
addl
or
add
out
dec
mov
add
mov
add
scas
insl
popf
ljmp
add
test
add
sarb
xor
dec
mov
add
pop
jmp
and
add
into
daa
in
push
xchg
add
imul
inc
sbb
out
adc
subl
xor
jecxz
pop
pusha
sbb
icebp
mov
iret
inc
mov
xchg
loopne
movl
jo
mov
aaa
adc
dec
pop
dec
lods
add
mov
add
insl
pop
iret
hlt
cltd
stc
jnp
add
add
aaa
sbb
cld
pusha
fcomi
ljmp
cmp
add
ja
push
mov
add
fs
pop
lock
inc
pop
inc
ja
cmpsl
jmp
adc
rorl
fbstp
shlb
push
test
add
mov
add
mov
add
push
cwtl
js
ret
mov
mov
add
dec
adc
cmpsl
repnz
xchg
test
add
pop
sbb
pop
xor
test
add
add
orl
xchg
nop
insb
jge
jb
shlb
add
loop
add
inc
orl
add
aaa
jecxz
mov
add
mov
add
outsb
arpl
sahf
clc
int3
mov
addb
fsubp
mov
add
add
imul
add
add
or
add
ja
cmp
dec
fiadds
jl
rorl
mov
xor
jno
jb
in
aas
dec
sub
lret
cmp
inc
sub
add
add
test
push
mov
xchg
ret
sbb
pop
pop
test
add
inc
pop
or
cmpsb
add
sbb
push
mov
fidivrs
testb
add
adc
or
jmp
pop
adc
call
add
aad
mov
add
mov
mov
sub
add
add
add
push
mov
xchg
mov
push
jb
test
add
mov
add
xchg
cmp
pop
test
add
mov
sub
add
add
dec
adc
lret
jle
sub
add
add
sbb
add
sbb
pop
pop
dec
cli
call
pop
loopne
jnp
add
pop
addb
lock
pop
shr
dec
icebp
in
cld
xchg
mov
int
subl
cmpsl
add
add
inc
inc
xchg
out
subl
loopne
xor
sub
add
outsb
adc
lcall
push
add
mov
add
add
add
push
mov
sarb
fidivs
add
fildl
out
add
add
aad
xchg
inc
inc
cli
mov
add
dec
stos
add
sahf
inc
sub
sbb
mov
add
jecxz
add
adc
pushf
popa
fs
xor
jg
iret
nop
and
add
inc
ret
stos
add
stc
adc
cmpsb
add
das
aaa
and
add
inc
data16
xchg
pop
fistpl
imul
lods
add
dec
lcall
pop
xor
adc
outsb
out
lock
das
mov
jge
adc
xchg
out
inc
sbbl
xchg
cmp
addb
outsl
fcompl
jmp
sbb
in
hlt
jp
or
add
add
stos
add
xchg
lret
add
aas
jb
sub
add
inc
mov
add
sub
dec
push
hlt
pop
xor
pop
stc
sbb
pusha
xchg
or
add
icebp
movsb
add
sbb
movsb
add
ret
sbb
add
out
out
push
cli
test
loope
enter
aas
xchg
and
add
mov
add
fdivrl
jbe
push
dec
mov
nop
sub
add
dec
shrb
fidivrs
iret
xchg
ror
inc
call
add
daa
sub
mov
add
rcrl
jge
and
aas
inc
push
add
movsl
cwtl
xor
enter
in
and
add
push
lret
mov
pop
ucomiss
add
sahf
mov
jmp
push
dec
test
add
inc
mov
ret
mov
sahf
xor
out
jle
add
enter
in
add
in
arpl
pop
jmp
add
pop
or
mov
push
jg
add
pop
int
add
icebp
and
insb
repz
pop
rcr
push
add
push
lds
daa
roll
mov
aas
inc
inc
push
jl
filds
jbe
icebp
and
add
dec
cld
jecxz
daa
test
add
rcrl
add
xchg
inc
dec
lods
add
inc
negb
mov
add
add
pop
sti
lret
add
shl
imul
adc
add
push
pop
jns
jb
push
fmulp
and
add
xlat
aam
xor
mov
push
add
add
scas
add
add
xchg
add
add
sbb
push
add
loope
ret
add
adc
xchg
sub
add
fcmovbe
xchg
mov
sahf
cmpsl
test
add
add
dec
mov
or
inc
sbb
les
inc
push
add
sbb
cmp
sbb
inc
bound
add
cmc
add
adc
add
shrb
and
pop
inc
pushf
and
xor
jno
push
addb
ret
dec
bound
lcall
addb
xor
xor
dec
fwait
sub
mov
xchg
fs
add
xchg
icebp
and
lret
ja
pop
xchg
push
ljmp
outsb
push
outsb
mov
lods
xchg
add
push
adc
push
add
add
pop
and
mov
add
insb
into
mov
add
xor
andl
mov
add
xor
aam
cmp
cli
jg
push
cmp
jne
rcrb
jno
cmp
aad
ret
add
xchg
add
mov
jnp
and
sub
test
add
add
pop
inc
jecxz
int3
ljmp
add
inc
out
cmpsb
add
ds
xor
movlhps
or
and
orl
loop
cwtl
out
add
sbb
add
sahf
ss
lock
add
icebp
fcomps
add
ja
mov
add
adc
sbb
out
lea
lds
fdivrp
aaa
roll
and
jb
jp
in
test
add
leave
mov
cmp
mov
add
push
inc
jmp
mov
add
mov
call
lods
add
outsb
mov
lods
add
jg
aas
test
add
jbe
add
add
jbe
add
jo
insl
cmp
add
cli
cmp
fnstcw
adc
add
faddp
stos
mov
mov
add
loop
je
jb
xchg
cld
rclb
add
xchg
add
xlat
add
add
xor
add
add
add
dec
dec
mov
add
and
jne
iret
aaa
arpl
push
dec
jne
add
sub
les
sub
add
shlb
cmp
popf
and
add
mov
add
and
add
movsb
add
call
addb
shr
imul
xor
bound
mov
add
push
jmp
out
jge
push
add
add
mov
popf
adc
push
scas
jmp
and
inc
orl
sbb
add
adc
adc
test
add
add
xor
and
add
sbb
jnp
loopne
jns
in
add
add
cmpsl
lcall
addb
enter
mov
add
add
rorb
xchg
mov
lods
push
lods
inc
add
add
add
sbb
lock
push
movsl
je
adc
test
add
add
addb
jp
pop
daa
inc
fiadds
roll
inc
or
int3
mov
cmp
add
xor
or
dec
xor
add
mov
stos
add
in
test
add
pop
pusha
xor
add
stc
dec
mov
add
out
adc
je
dec
int
cwtl
inc
arpl
jecxz
dec
push
jne
adc
or
mov
lods
add
call
pop
repz
add
cmp
movsb
add
push
dec
insb
fwait
loopne
mov
fs
pushf
in
and
and
add
jbe
mov
outsl
sbb
mov
ret
mov
mov
add
mov
add
pop
xor
cmp
daa
xchg
icebp
dec
jae
xchg
lret
andl
add
into
lcall
or
add
inc
clc
sub
add
add
jl
add
sbb
dec
inc
int
and
add
popl
adc
mov
push
out
sahf
inc
fadd
or
add
add
lods
sub
add
add
pslld
pop
cmp
mov
insl
std
imul
ds
adc
mov
lods
sbb
icebp
pop
or
cmp
insb
add
add
filds
xor
enter
push
loopne
mov
sbb
add
add
lods
aaa
mov
std
outsl
rolb
add
pop
addb
popa
push
fldcw
add
jg
and
add
loope
jg
in
and
sbb
jmp
sti
les
mov
add
add
mov
dec
das
sub
add
lret
add
mov
daa
jb
pop
sbb
jg
add
test
add
and
add
push
add
inc
int
mov
sbb
divb
out
in
hlt
pop
inc
test
add
pop
dec
mov
add
dec
mov
lock
or
mov
mov
insl
test
jmp
lock
mov
add
or
add
xor
jnp
insb
cltd
test
nop
pop
sbb
cmc
cmp
add
add
add
test
add
add
push
jecxz
mov
add
out
push
test
add
inc
jle
and
add
add
popa
and
cmp
std
pop
test
add
mov
add
add
pusha
shlb
add
repz
in
jmp
insb
inc
mov
add
jmp
fsubrs
add
popf
mov
add
ja
add
leave
mov
add
lock
add
mov
pop
dec
and
add
mov
xchg
xor
add
enter
fsubl
xchg
hlt
add
movsl
push
in
jne
cltd
cwtl
sarb
inc
push
adc
and
std
pop
add
stos
push
sar
lret
insb
inc
lea
xchg
sbb
mov
add
cmp
out
mov
adc
add
add
mov
add
sub
or
sbb
add
dec
mov
add
in
jb
shrb
mov
enter
fwait
or
sahf
or
add
fs
lcall
mov
add
subl
jg
inc
sub
ljmp
loope
adc
js
add
adc
int
add
lret
loope
pop
dec
insb
sbb
js
mov
jle
fsub
shrl
xchg
add
lret
add
add
mov
pop
jmp
paddsw
psubb
jb
bound
add
icebp
sub
add
add
cmp
adc
jl
adc
andl
add
xchg
jnp
mov
ret
lock
add
sbb
xor
mov
add
push
push
or
add
addb
and
pop
sahf
ds
mov
add
add
push
jecxz
lcall
dec
rcl
getsec
dec
push
mov
add
add
add
inc
js
push
add
and
add
shr
mov
stos
pop
filds
add
fucomp
jae
aaa
pushl
scas
jl
testb
add
pushf
ret
fadd
aam
ret
addb
insl
and
add
les
add
xchg
pop
xlat
test
add
add
pop
dec
std
pushl
dec
lock
add
mov
hlt
adc
movsb
add
sub
add
add
fsubs
xlat
stos
add
jp
jbe
add
xor
pop
loope
stc
test
add
mov
add
leave
mov
add
push
fcmovnu
mov
jmp
cmp
xor
xchg
mov
test
add
sub
bnd
ss
decl
add
push
outsb
pop
lods
add
aad
mov
mov
and
xor
pop
int
push
xor
arpl
psllq
test
add
data16
dec
fdivs
pop
sbb
stos
xchg
jo
add
add
and
add
xchg
or
add
pop
iret
sbb
xchg
test
ja
or
add
add
inc
test
mov
xchg
xor
dec
push
mov
add
aad
adc
or
add
cmpl
test
add
jecxz
mov
sbb
or
add
add
test
mov
int
divb
cmpsl
pusha
repnz
mov
jbe
in
sub
add
enter
add
std
xor
fstps
test
add
gs
fisubrl
loopne
cmc
packssdw
addb
ud0
lods
add
std
xchg
idiv
aas
andl
sbbl
mov
push
jae
out
insl
int
mov
add
lock
jo
xchg
add
lods
adc
addl
sahf
out
push
cmp
dec
push
add
and
add
mov
popa
lret
push
jb
add
lds
add
sub
int
xchg
mov
pop
movsl
fildll
xor
pop
or
sahf
rorl
add
add
add
lret
xor
or
add
imul
sub
lahf
mov
add
xchg
or
add
iret
and
add
xchg
dec
jne
xchg
insb
test
add
pushf
adc
outsl
in
gs
jb
pop
pop
mov
addr16
push
mov
xchg
rcrb
add
add
xchg
xor
pop
int
add
movsl
xlat
sbb
stos
lds
add
xchg
jns
add
jae
xor
addr16
mov
out
or
add
add
add
jecxz
repz
and
add
lods
or
dec
rclb
imul
add
mov
xor
push
adc
mov
pop
popa
lea
add
mov
jle
add
leave
movsl
add
add
clc
dec
sub
add
add
cmp
data16
add
add
add
test
add
in
inc
fists
push
out
ds
nop
mov
mov
xor
mov
mov
aad
scas
or
inc
loope
mov
pop
imul
add
stc
push
mov
std
lea
call
push
inc
pop
std
pop
and
add
sahf
and
mov
test
add
add
sahf
add
jae
xor
add
loopne
and
add
xchg
cmpsb
add
xchg
aaa
addb
testb
add
mov
fdivr
mov
add
data16
aad
add
sub
into
mov
add
shll
in
inc
xchg
adc
push
adc
icebp
lahf
stc
test
call
add
mov
imul
imul
sarb
xor
add
jnp
dec
mov
add
test
add
jne
imull
add
sbb
dec
sahf
xor
jp
add
std
push
inc
sbb
add
jo
jae
push
leave
call
add
loope
jnp
sbb
test
add
add
aad
xor
scas
mov
add
xchg
add
push
add
sbb
fwait
cmpsb
add
or
sbb
add
add
sbb
and
adc
pop
sbb
add
fsubs
lret
mov
add
cmp
add
xor
fcomp
adc
aam
cmc
insl
dec
dec
mov
fidivrs
push
add
xor
cmp
add
loop
xchg
add
push
std
pop
push
aas
rcrb
outsb
cmpl
shr
testb
lcall
add
in
push
add
jge
sub
add
xchg
push
test
cmpsb
add
xchg
in
or
iret
pusha
movsb
add
push
in
cmp
or
xor
inc
mov
add
add
cmp
mov
add
sub
lock
jne
into
rorl
fdivrs
xor
mov
dec
pop
scas
add
xchg
in
ret
addb
sbb
data16
js
movsl
mov
gs
jns
add
add
mov
add
mov
idivb
pop
mov
add
test
add
add
pop
aad
enter
xchg
xchg
sub
add
sbb
and
add
sarb
test
add
add
call
or
pop
mov
shlb
inc
icebp
add
add
dec
out
aas
xchg
movsl
sbb
xlat
or
add
xor
add
jmp
pop
adc
sti
sub
add
andw
xor
add
cmpsl
push
insb
push
xor
push
add
adc
lock
sbb
inc
fidivs
mov
sub
sbb
pop
insl
pop
repz
inc
lods
add
retw
add
push
sbb
add
daa
and
add
inc
pushf
jg
fisubrs
add
loope
popa
xor
add
add
add
lock
add
mov
cmc
mov
ja
ret
add
outsl
cmp
add
stos
add
fwait
cmp
xor
cmp
pop
aad
mov
mov
ss
notb
adc
jg
popl
jae
int
cli
fdiv
xorl
and
add
pop
scas
add
addb
pusha
repnz
add
ja
adc
add
int
and
add
ret
les
add
lods
int
mov
scas
mov
add
pushl
nop
loop
lea
add
mov
mov
sar
adc
ret
mov
out
add
add
add
pop
or
add
dec
mov
cmp
add
add
sbb
daa
jp
inc
ds
jmp
add
push
punpckhwd
xchg
dec
gs
mov
xchg
loop
sbbl
fwait
jae
add
mov
into
mov
add
xor
pushf
popa
inc
jl
push
xor
adc
push
push
jg
add
add
in
add
out
mov
add
push
lcall
push
call
pop
or
bound
loop
cmc
xchg
jp
add
ret
jp
add
push
push
push
inc
js
xor
xchg
push
stc
test
add
movsb
add
subl
push
xchg
sub
inc
and
test
add
shlb
xchg
loop
inc
jg
dec
mov
jbe
add
push
jl
aad
inc
arpl
jns
dec
sub
add
out
cmp
nop
push
mov
add
mov
push
or
add
out
pop
inc
fildl
addb
andl
add
mov
lcall
incl
pop
or
add
xchg
ss
sti
lahf
scas
add
mov
adc
push
out
das
into
and
sti
sti
jp
cld
pop
lret
adc
ja
dec
lahf
mov
adc
mov
add
jns
loop
add
loope
scas
add
sbb
out
pop
fidivrs
jge
sub
pop
add
jecxz
add
nop
or
sub
add
add
add
cmp
add
jnp
add
xor
xchg
inc
sub
add
cmpsl
aam
add
and
add
pop
in
les
aam
mov
add
lds
add
arpl
add
jmp
add
loop
jmp
pop
bound
mov
push
aad
rol
nop
push
jmp
mov
in
cmp
add
scas
add
pop
add
add
lods
add
add
add
ja
cmpsl
test
add
add
add
add
add
lock
add
leave
mov
add
inc
dec
xor
xor
pop
and
push
add
shl
and
add
push
add
push
iret
cmpsl
std
sub
add
imul
and
add
mov
movsl
mov
mov
xchg
mov
inc
adc
in
sub
out
xorl
mov
mov
mull
add
inc
fs
les
add
xchg
xor
pop
xchg
jmp
and
add
mov
lret
inc
jle
sub
inc
or
add
daa
test
add
fs
in
imul
shll
or
push
add
add
or
add
add
imul
lods
add
out
add
mov
add
push
add
dec
aaa
test
dec
rcr
call
or
add
mov
add
add
mov
lods
add
jb
nop
mov
add
insb
hlt
in
mov
jo
mov
add
fnstenv
inc
je
mov
add
push
pop
test
mov
sub
add
mov
fisubs
outsb
sbb
xchg
jge
mov
mov
pop
faddl
adc
xchg
inc
mov
add
repz
jl
push
xchg
lock
add
add
inc
xchg
mov
add
xlat
clc
push
cwtl
ds
les
add
xor
xor
vmwrite
add
push
xchg
inc
xchg
add
sub
add
mov
cmpsl
arpl
add
inc
movsb
add
push
lods
add
xchg
enter
sub
add
or
add
push
xor
mov
pop
and
or
add
add
push
pop
pop
cwtl
or
add
mov
xor
mov
add
test
add
pop
mov
add
xor
mov
rcll
stos
sbb
sbb
push
push
lods
mov
nop
int3
push
add
add
rcrb
adc
add
dec
movsb
add
inc
call
mov
push
sahf
bound
sbbl
mov
ret
add
jmp
add
dec
shll
call
stos
in
adc
in
adc
sbb
add
and
lret
addb
dec
dec
pop
xchg
add
add
negl
sbb
mov
sbbl
mov
jl
add
mov
mov
push
loopne
add
mov
cmp
fistps
cmpsb
add
lret
daa
push
push
inc
in
cmp
add
idivb
shrb
mov
enter
push
pop
add
stos
loopne
mov
add
add
test
add
out
loope
fisubrs
in
inc
adc
mov
add
xchg
xchg
jle
pop
xor
mov
insl
push
inc
ret
fsub
pop
pushl
pop
out
in
jle
mov
add
pop
insl
mov
pop
mov
mov
add
pop
imul
xchg
or
add
push
add
stos
add
ja
ljmp
movsb
add
shld
inc
pusha
fdiv
mov
mov
add
pop
adc
std
out
sub
add
xchg
add
add
int
xor
sub
add
cmp
cli
das
or
testl
rolb
push
pop
add
add
into
push
add
orl
add
cmp
adc
xor
iret
add
mov
xor
mull
cmp
popa
mov
add
add
inc
push
insl
cld
inc
and
add
xor
jecxz
bound
pop
arpl
add
add
mov
adc
adc
and
mov
mov
jb
or
add
jb
lret
xor
in
lret
pop
push
addr16
xor
inc
fisubrs
lret
add
scas
add
icebp
pop
scas
lods
sub
jae
jne
mov
pop
cmp
add
mov
sahf
sub
add
add
lock
scas
add
jl
rorb
add
xor
ds
cmp
imul
aaa
push
pop
loope
jmp
dec
movsb
add
pop
popf
out
add
roll
mov
add
outsl
xchg
xor
lcall
pop
or
add
sub
add
add
add
add
ror
sub
add
hlt
jb
lcall
icebp
push
imulb
pop
xchg
and
add
stos
and
add
out
push
jo
std
mov
add
inc
xchg
lea
add
dec
jl
ljmp
add
or
add
add
gs
push
pop
aam
fdivrl
cmp
xor
dec
loopne
or
shl
sbb
ss
leave
movsl
aad
mov
unpcklps
cli
dec
xor
jno
aam
mov
add
pop
or
push
gs
inc
popa
dec
cmp
add
add
mov
fistpl
bswap
lds
loop
pop
divl
or
add
out
out
mov
insl
outsb
notb
mov
imul
add
add
adc
push
dec
pop
jecxz
insb
jge,pt
sahf
mov
jns
add
adc
jecxz
loopne
jnp
shlb
stc
cmp
pushf
sbb
xchg
aam
test
xchg
add
and
add
add
lret
cltd
fildll
shl
xlat
xchg
add
lcall
dec
jmp
add
push
push
jnp
roll
daa
aam
add
add
add
fstpl
lods
jg
fsts
jno
data16
mov
outsw
std
pop
in
js
cmp
add
add
jle
into
mov
shlb
or
add
add
add
push
sbb
sbb
push
inc
mov
jle
xchg
sub
push
add
push
outsl
dec
or
add
addb
adc
das
pusha
adc
add
icebp
mov
pop
dec
ret
aad
sub
outsb
jbe
push
push
sarl
addb
ret
jb
pop
rcrb
add
xor
add
dec
or
add
add
enter
sahf
inc
and
in
mov
addb
pop
ja
add
dec
icebp
xchg
add
add
push
aas
in
inc
jg
and
add
ds
lock
pop
aad
add
or
add
arpl
out
mov
mov
shlb
inc
lds
int
test
add
add
je
inc
add
add
ret
jns
jns
mov
into
cmp
mov
cmpl
mov
and
add
jle
sub
pop
push
lea
add
dec
mulb
push
dec
lods
jnp
mov
jno
or
test
add
test
add
mov
add
add
iret
lret
jae
cwtl
xor
jge
add
incb
loop
or
jo
jmp
cmp
add
out
adc
pop
cmp
jb,pt
orl
sbb
sbb
xchg
add
lcall
ficoms
fst
addr16
xlat
std
push
ret
sbb
mov
hlt
sub
push
dec
push
push
jne
mov
add
mov
pop
add
dec
pop
movsl
enter
pop
movl
jno
or
lea
cli
mov
sbb
xchg
fcmovnb
jns
into
push
add
xchg
and
add
pop
add
add
insl
into
cld
data16
add
dec
pop
ljmp
mov
rcrl
add
rorb
fcomps
js,pt
loop
sub
add
insb
mov
pop
mov
add
mov
mov
add
sub
mov
jnp
dec
add
xchg
cmp
add
add
dec
ljmp
mov
loop
ret
lds
add
cltd
addr16
lods
add
sarl
add
nop
xlat
stos
add
js
xchg
negb
and
pop
lods
add
outsb
in
pop
repnz
sbb
add
lcall
mov
add
add
mov
add
mov
add
stos
and
call
jnp
fimuls
pop
cld
fidivl
xchg
xchg
adc
mov
add
notb
popa
dec
pop
mov
sahf
dec
ljmp
add
scas
adc
cmp
add
popf
pop
aad
sub
stos
add
test
add
dec
jle
pop
movsl
movsb
add
add
add
idivb
cwtl
mov
sbb
iret
xchg
sarb
add
add
lock
xbegin
push
add
test
add
insb
mov
loope
or
insl
and
mov
and
add
mov
inc
ret
xchg
pop
adc
add
aad
cld
inc
xor
movsb
add
sub
add
and
dec
bound
into
cmp
scas
out
jnp
push
shl
sbb
loope
lds
fisttpl
add
cmpsl
addb
jmp
mov
js
pop
scas
add
pop
xadd
mov
js
add
lretw
inc
frstor
stos
jmp
arpl
shl
into
jbe
sbb
or
daa
lret
add
jle
sbb
lcall
add
mov
add
push
iret
rol
mov
hlt
cmp
xor
sub
dec
xor
cmp
mov
xchg
add
out
stos
add
dec
pusha
add
cmpsb
add
push
lods
icebp
pusha
add
add
lret
dec
adc
dec
insb
das
xchg
or
add
ffreep
lret
add
add
or
add
cmc
pop
xchg
xchg
jge
dec
movsl
aam
add
stc
lahf
loope
add
mov
in
inc
popf
movb
test
add
mov
xlat
jno
lock
push
aad
loopne
scas
inc
push
rolb
push
add
rcll
sarb
call
icebp
sbb
add
jmp
aas
rcrb
pop
lret
xchg
into
out
inc
inc
sbb
mov
add
les
push
lcall
and
add
enter
xchg
mov
pop
add
add
fdivrs
dec
jbe
push
mov
add
dec
jp
test
imul
out
rcll
sbb
inc
jg
das
push
add
fldl
mov
xor
push
push
in
loope
fwait
movsb
add
cmp
jae
sub
add
dec
lahf
rcrl
into
and
sub
add
stos
add
mov
repnz
add
xchg
in
cmp
and
add
and
in
push
push
mov
add
xchg
lret
daa
and
add
lods
cmp
cltd
add
nop
cli
dec
into
add
add
call
pop
mov
add
adc
add
add
add
add
and
cmp
fists
hlt
or
mov
add
mov
and
adc
cwtl
js
add
add
pop
sbb
add
xlat
jp
dec
jge
add
add
xlat
jge
fs
je
jb
out
push
push
cli
dec
out
add
sahf
into
out
lds
jge
or
add
and
xor
jne
mov
mov
rcll
test
add
sbb
cmp
out
add
push
xlat
dec
jno
add
mov
push
add
pop
out
scas
sub
push
mov
shlb
xchg
add
or
xchg
scas
mov
add
mov
repnz
adc
popl
into
insb
mov
xor
sbb
add
inc
push
hlt
fs
pop
enter
sub
addr16
xor
aaa
in
cli
push
dec
sbb
jl
cld
inc
ss
std
insl
rorl
add
add
sub
add
clc
xor
into
fisttpl
in
idivb
xor
mov
lods
add
xor
rol
dec
mov
add
lock
aad
xor
insl
sbb
and
adc
add
in
push
mov
cwtl
push
fsubr
arpl
xchg
pop
sub
outsl
addb
sbb
add
jg
fwait
and
add
add
mov
add
add
add
push
add
iret
or
add
cli
xchg
adc
dec
cli
xchg
mov
mov
push
mov
dec
mov
mov
rorb
mov
add
lcall
add
mov
ffree
test
adc
mov
out
push
xor
rcll
push
xor
push
loop
gs
adc
fisttpl
xor
add
dec
mov
cmpsl
and
add
mov
mov
add
and
pop
mov
cmp
fs
add
add
cwtl
cli
add
cmp
dec
mov
or
add
mov
add
xchg
mov
jns
jno
push
xchg
cmp
inc
je
cli
inc
and
add
loopne
test
add
les
add
pop
mov
mov
cwtl
xor
fcomp
and
add
rcll
imul
cltd
gs
repz
add
add
adc
movnti
add
jg
jae
mov
add
lahf
scas
add
popa
movsl
dec
sub
add
addb
lret
pusha
cltd
fadds
int
inc
out
test
sbb
sbb
jo
add
xchg
mov
add
add
ljmp
xor
mov
cmp
pop
jns
add
loope
push
add
cld
xchg
and
popa
xchg
aaa
xor
call
inc
xor
and
add
add
ljmp
add
add
add
add
xchg
and
add
mov
mov
pop
add
add
inc
push
addb
sub
add
iret
xorl
std
test
sub
add
mov
sub
add
add
in
add
movb
inc
mov
dec
sbb
add
clc
repz
xchg
mov
stos
push
add
or
xchg
insl
mov
xor
add
stc
fisttpll
mov
int
xchg
in
and
add
sub
add
jne
mov
cmpsb
add
lea
add
inc
sbb
inc
out
ss
lret
movsl
xor
add
xor
pop
outsb
movsb
add
push
insl
and
add
mov
loop
push
adc
jg
push
xor
std
shll
jbe
xchg
adc
sbb
add
dec
cmp
xchg
and
in
jg
pop
push
adc
pop
nop
jg
add
int3
movl
dec
cmp
int3
jg
js
sbb
push
add
and
lods
xchg
lds
addl
das
std
xchg
mov
enter
push
mov
xchg
imul
adc
lahf
jg
jmp
cmp
loop
adc
ss
push
imul
les
pop
inc
mov
xlat
icebp
jge
cmc
fisttpll
push
call
adc
fs
dec
nop
pop
in
mov
add
and
add
push
add
add
add
mov
mov
jge
sbb
mov
stos
lret
test
add
xchg
fcoms
data16
add
lret
sub
add
clc
mov
pop
rcll
arpl
cmp
inc
push
aad
adc
mov
add
sbbl
and
sar
addb
loopne
call
scas
jns
mov
lock
add
xor
test
lret
ljmp
pop
sub
add
xchg
lea
xchg
in
aad
push
sahf
xchg
ljmp
repnz
pop
stc
movsl
enter
jno
movsb
add
jp
mov
add
xor
mov
cmp
push
add
mov
xor
imul
in
add
mov
mov
add
inc
and
add
or
fsub
aad
mov
push
fdivrs
repnz
in
incl
fwait
sub
add
add
xor
dec
inc
sbb
add
xchg
test
out
push
push
loopne
mov
dec
jmp
dec
push
and
mov
pop
cmpsl
cmpsb
add
je
xor
sahf
lods
add
mov
popa
fdivrl
add
add
add
popf
out
addr16
sub
add
pushf
cmc
mov
add
mov
xchg
lcall
or
add
push
test
add
push
ret
pop
test
add
push
ficoml
out
or
add
rclb
add
push
mulb
outsl
pop
lock
mulps
mov
mov
add
dec
pop
pop
shl
mov
add
dec
shlb
movsb
add
push
adc
addb
addl
sub
add
js
add
sub
faddl
add
mov
add
arpl
sbb
add
xchg
add
push
mov
add
dec
icebp
rcrl
mov
mov
in
fistl
add
adcl
in
jl
mov
add
mov
add
stos
cmpsl
fwait
sbb
add
dec
fwait
mov
add
pop
leave
rorb
mov
add
sub
push
sti
add
lret
adc
lea
xor
fisttpll
mov
or
add
mov
add
xlat
fdivl
ds
lret
cmc
add
ss
sahf
dec
xchg
movsb
add
jne
aad
aam
add
ret
mov
test
add
lcall
sub
pop
or
cmp
icebp
std
xchg
fistpl
add
mulb
dec
pop
outsl
popa
cmpsl
cmp
mov
jmp
lock
in
xchg
adc
inc
push
add
out
adc
mov
dec
mov
add
add
push
cmpsl
fwait
cmp
imul
adc
lcall
and
push
mov
repz
cmpsb
add
pop
fbld
add
popa
pop
dec
mov
add
sub
mov
add
and
add
add
jmp
mov
lcall
mov
loope
outsl
jns
stc
mov
sti
andl
jl
pop
out
aaa
cwtl
lret
add
fimull
add
adc
add
ficomps
dec
lcall
sbb
loope
and
add
mov
cmp
pop
scas
add
push
fdivrp
push
jns
insb
cwtl
adcl
and
add
clc
cmp
or
and
repz
jo
add
add
bound
xchg
mov
add
mov
imul
add
push
xchg
mov
out
sub
add
icebp
dec
lock
add
mov
cltd
xchg
in
mov
add
cmp
add
inc
clc
fmuls
add
shlb
ret
int
add
frstor
add
lret
movsb
add
stc
loope
inc
mov
cltd
jbe
js
fstpt
xor
add
mov
mov
jb
xchg
adc
add
lret
repz
inc
push
mov
stos
and
add
mov
addb
stc
mov
add
add
mov
add
mov
les
cmp
shlb
or
sub
std
mov
add
pop
jp
add
jnp
lods
add
inc
mov
add
add
push
sbb
add
mov
les
test
add
and
inc
sub
add
ret
in
je
add
ss
imul
add
sub
outsb
jbe
xchg
pop
das
dec
fs
add
push
jo
add
mov
add
arpl
add
mov
fadds
push
cld
jecxz
call
cmp
pop
jo
js
mov
xor
mov
inc
fadds
lcall
andl
sub
add
add
inc
jnp
arpl
js
pop
mov
cmp
add
xchg
sub
jl
mov
add
sbb
sbb
adc
pushf
cmp
pop
test
add
add
add
sub
add
cmp
iret
pop
jmp
push
hlt
js
jecxz
or
add
xor
add
cwtl
cmp
aad
add
addb
add
sbb
stc
push
addb
xchg
repnz
mov
xchg
and
add
mov
add
sub
add
xchg
and
add
fisubs
in
insb
sub
add
add
cmpsl
inc
jge
sbb
outsl
lock
fwait
pop
int
xchg
add
cltd
pushf
push
imul
popf
xor
cltd
test
mov
add
enter
andps
jp
cmp
out
mov
ds
add
add
add
jns
stos
add
jno
cwtl
jge
xchg
xchg
add
add
inc
inc
icebp
cmc
iret
xor
repnz
inc
push
lods
add
sub
xchg
add
sbb
and
xor
add
and
iret
sub
add
fisubs
pop
mov
add
add
add
popa
movsb
add
loope
push
and
add
ja
cmc
pop
mov
add
mov
sub
fsubp
gs
clc
xorl
ss
pop
xlat
xor
clc
cmpsl
lcall
dec
shll
inc
imul
cmp
mov
add
inc
int
add
mov
xchg
test
add
add
pop
or
add
add
adc
ljmp
add
jbe
aad
add
push
dec
faddl
lret
stos
vmread
xchg
shlb
add
xor
jmp
pop
loopne
mov
loope
scas
jmp
push
push
mov
and
add
int3
sbb
add
dec
cltd
cmpsl
lret
daa
push
xchg
jle
add
add
add
out
out
cmc
imul
fcmovbe
and
mov
call
or
add
dec
leave
jmp
xor
outsl
icebp
cmp
add
in
subl
jns
add
xchg
fisttps
jne
scas
add
push
or
add
sbb
sbb
cld
xchg
add
clc
jge
jo
add
in
js
adc
push
sbbl
cld
push
add
sub
clc
mov
sar
push
inc
fucomp
cld
and
dec
fs
xor
add
push
pop
les
cmpsb
add
cmpsl
lea
movsl
repnz
popa
jmp
sbb
addb
lcall
mov
lret
rorl
cmpsl
fsubs
xorl
add
fdivrp
movsl
repz
out
xor
std
stc
bound
add
add
js
add
icebp
xor
or
lahf
mov
ret
pop
int
sub
add
mov
jmp
mov
or
add
xchg
mov
xchg
mov
add
jl
pop
sbb
call
add
movsl
lret
xor
filds
jae
popf
mov
mov
add
lahf
xor
sbb
cmpsb
add
xchg
outsb
mov
sahf
addb
insb
test
add
xor
add
stc
out
jae
xchg
out
sbb
mov
and
add
fcomi
cli
xor
pop
shll
inc
sbb
pop
mov
add
insb
inc
mov
mov
add
int3
inc
add
pop
adc
in
repnz
divb
mov
movups
out
pop
outsl
pop
adc
cli
sbb
add
aam
xor
shll
mov
add
out
adc
ds
add
enter
mov
add
add
mov
lcall
or
lcall
add
mov
add
push
mov
add
dec
or
add
ss
sarb
add
mov
loope
pop
sahf
je
pop
mov
neg
inc
and
add
insb
inc
adc
lods
jmp
add
imul
mov
pop
stos
addb
data16
add
out
out
push
pop
fsubrs
aam
repz
push
adc
in
arpl
nop
lcall
mul
adc
mov
imul
add
mov
add
leave
mov
push
push
mov
out
insl
lock
push
mov
add
scas
dec
jbe
dec
bound
cwtl
pop
push
jno
lods
add
push
inc
orl
sub
dec
cmc
cmpsb
add
mov
repz
add
cld
stc
fisubl
repz
sbb
add
cmp
int
in
lods
add
hlt
neg
push
and
add
pop
lahf
dec
in
loopne
pop
call
push
imul
out
out
xor
add
jg
jbe
add
divb
pop
iret
inc
mov
add
pusha
rclb
or
out
fwait
sbb
outsl
loopne
xor
add
jge
lds
add
sub
add
filds
jl
add
or
outsb
loop
or
xrelease
add
add
adc
leave
push
into
int
sub
mov
adc
sti
ss
add
dec
lds
inc
insl
loope
movsl
mov
cmp
add
aas
fwait
stos
add
lods
cmp
fimuls
bound
pop
enter
push
lods
add
popf
xor
add
pop
outsb
adc
add
lea
repz
gs
push
jo
pusha
pop
add
add
add
mov
add
dec
lret
adc
xchg
adc
add
fsubrp
repnz
push
add
pop
in
cltd
cmp
ret
inc
and
add
add
add
jnp
add
popf
frstor
jnp
test
add
in
sbb
scas
push
add
mov
add
scas
add
add
push
sahf
lcall
aaa
lds
add
dec
stc
mov
sahf
andl
adc
xor
adc
repnz
pop
les
cmp
in
fiaddl
add
push
sub
cmp
inc
scas
add
popa
xchg
pop
xor
pop
and
add
xchg
clc
add
out
insl
or
mov
into
leave
and
push
adc
push
or
add
lahf
stos
add
int
iret
jmp
add
and
fcmovbe
sbb
fsub
add
pop
outsb
pop
call
add
stos
add
lock
add
add
loope
inc
mov
add
jb
push
xchg
add
inc
out
jae
fs
sbb
fsubl
add
rcll
ret
aam
pop
test
add
add
sub
add
rorl
cmp
add
add
mov
push
xchg
add
mov
int
addb
xchg
fdivrs
not
inc
xchg
popf
xor
addb
cmp
mov
jmp
mov
int3
jno
sbbl
stos
add
in
jge
push
add
dec
ljmp
sarl
aaa
dec
pop
xor
shrb
xchg
sti
pop
mov
repnz
loopne
ds
loopne
scas
add
push
mov
stc
mov
cmp
ss
xchg
nop
mov
add
sub
add
or
add
mov
mov
shlb
mov
fcompl
add
add
int3
cmp
push
push
or
add
fdivl
outsl
aam
or
add
sbb
stc
mov
add
repz
enter
sbb
push
enter
movsb
add
in
addb
lahf
lcall
or
or
add
test
add
lock
loope
sbb
pusha
movsb
add
insb
adc
add
pop
xchg
call
add
cltd
jmp
or
add
push
imul
add
fidivl
mov
lods
in
mov
or
add
aas
cmpsl
fildl
adc
add
add
das
lahf
into
pop
das
orl
fstps
or
add
cld
mov
add
push
add
data16
inc
and
ljmp
in
dec
imul
scas
add
mov
pop
jp
pop
cwtl
and
adc
mov
mov
inc
xor
add
lock
call
mov
hlt
inc
out
adc
dec
mov
mov
mov
add
sbb
adc
out
inc
sahf
xchg
scas
jecxz
sar
ret
icebp
test
add
add
jp
in
in
jg
adc
outsl
andl
jo
or
push
out
out
out
daa
mov
push
push
icebp
xchg
dec
mov
rep
push
jmp
add
push
insl
repnz
sbb
aad
sub
add
add
outsb
xor
mov
add
xchg
sbb
fidivs
xchg
movsb
add
je
inc
notb
int3
arpl
scas
add
addr16
push
hlt
mov
pop
dec
sti
sbb
daa
adc
mov
add
push
push
ret
add
push
lds
ss
pminsw
adc
mov
add
sbb
cmpsl
cmpsl
insb
mov
lock
out
jbe
das
jnp
ret
add
lahf
int
movsb
add
mov
push
imul
add
clc
xchg
cmp
imul
add
in
pop
out
ret
add
add
pop
inc
sarl
add
or
add
addl
add
or
push
mov
movsl
fisubrl
in
insl
ss
out
add
ret
movsl
aas
and
cmp
mov
add
dec
cmp
clc
int3
popf
jmp
and
add
add
sub
add
stc
or
add
fdivs
movsl
lods
add
add
adc
into
cld
sub
add
xchg
xchg
add
add
scas
lea
add
addb
ljmp
outsl
cmp
movsl
aas
or
hlt
test
in
imul
cld
std
xor
jecxz
mov
mov
pop
sub
mov
sub
add
add
rcll
popf
inc
push
push
mov
mov
mov
pop
jns
or
add
add
lods
xchg
pop
sahf
push
int
add
sub
fnstcw
add
lock
fsubs
jbe
jne
or
inc
mov
movsb
add
and
add
and
add
leave
mov
add
cltd
enter
cmc
inc
or
stos
ss
addr16
fcoml
lret
add
lea
mov
add
popf
imul
add
adc
and
int3
sti
sbb
or
or
add
sub
add
inc
cmp
add
sbb
icebp
int3
pop
xchg
lea
lahf
sub
xor
inc
inc
cmp
add
sbb
icebp
aad
add
add
add
shl
dec
fcomps
addr16
lods
add
in
negl
add
enter
add
or
add
push
call
gs
dec
std
mov
pop
push
outsl
dec
popf
les
add
adc
ja
or
punpcklbw
cmp
push
add
cwtl
cmc
cmpsb
add
lret
xchg
xor
push
fdivr
mov
cmp
cmpsb
add
sub
adc
push
mov
lahf
test
add
sti
outsl
lock
out
cmp
add
add
mov
mov
push
add
sbb
dec
xor
pop
sub
aaa
mov
enter
movsb
add
sbb
fs
rorl
jle
in
jb
mov
jle
sbb
add
add
lds
pop
or
mov
mov
fists
mov
add
xchg
clc
xlat
aas
jns
mov
jg
and
jns
xchg
nopl
push
lret
stc
add
add
inc
pavgb
xchg
ficompl
fldcw
or
sar
adc
lods
add
xor
ret
jbe
jp
js
mov
add
xchg
inc
mov
cld
and
add
or
sti
jno
sbb
add
addb
adc
add
cltd
out
in
stos
jno
add
je
dec
pop
mov
repz
add
add
das
xlat
xor
jb
add
add
sub
call
mov
pop
int3
ljmp
dec
call
lret
dec
iret
stos
add
xchg
sub
add
sbb
scas
add
movsb
add
insb
popf
adc
fwait
push
mov
lods
add
mov
xor
and
add
add
jp
repnz
add
add
add
pop
imul
add
loop
sbb
ds
adc
add
jmp
fstps
add
call
inc
add
outsb
or
add
add
inc
mov
add
add
jle
sub
add
pop
sti
sarb
dec
inc
icebp
sbb
xor
idivl
int3
nop
mov
jb
dec
mov
add
sub
mov
add
mov
pop
pushf
jo
ljmp
jecxz
add
push
idivl
popa
out
pop
dec
push
addb
repz
add
outsb
pop
nop
push
add
pop
and
add
dec
sbb
andl
add
int3
shlb
leave
add
add
add
xor
add
add
mov
jns
pushfw
arpl
stc
lock
add
and
add
nop
fs
xchg
test
push
loope
hlt
scas
daa
push
and
and
add
mov
call
ror
mov
inc
enter
add
mov
jge
jecxz
inc
mov
xor
add
loope
cmp
leave
out
sub
pop
and
add
sti
nop
dec
js
add
mov
jmp
push
add
lock
loop
add
add
cmp
dec
ljmp
jns
mov
sub
add
insl
jo
dec
cmp
pusha
mov
test
jmp
shlb
cwtl
pop
icebp
rol
loope
sbb
add
add
add
iret
movsb
add
jae
std
sbb
ss
repz
jmp
xchg
cmp
add
sarl
pop
cwtl
ds
pushf
add
jns
popa
jl
xor
jb
xchg
mov
add
mulb
enter
xchg
ret
pop
xchg
xchg
mov
add
push
into
inc
push
jle
add
mov
add
fcmove
pop
aaa
jns
dec
jbe
mov
add
xchg
dec
push
xor
sub
clc
xchg
push
mov
mov
add
pop
add
add
and
jg
pop
ljmp
dec
dec
fcmove
mov
add
imul
cwtl
fwait
cmpl
sub
dec
sub
add
sbb
pop
notb
outsl
xlat
adc
adc
orl
mov
adc
add
add
cmp
subl
add
xor
inc
mov
sub
add
xchg
cmp
jp
jnp
adc
xchg
pop
call
clc
pop
js
ja
add
add
fwait
mov
ds
push
roll
add
push
add
out
in
insl
xchg
and
add
enter
popf
mov
push
sar
cmpsl
hlt
cmp
sti
add
aam
fists
jno
push
test
ret
aaa
fwait
pop
sbb
stc
fwait
pusha
add
add
and
add
inc
stos
imul
jno
mov
lahf
inc
inc
pop
call
imul
add
pop
addb
xchg
jno
mov
test
add
lahf
mov
and
add
push
add
sbb
rorl
cmpsb
add
bound
xchg
add
mov
add
pop
sub
jno
lret
xlat
fisubs
push
mov
jnp
jbe
cmp
cld
mov
aas
jmp
rclb
pop
xchg
add
insb
decl
adc
jnp
mov
add
pop
scas
add
pushf
aad
xor
mov
add
into
sub
add
jo
add
insl
cmp
mov
shlb
jg
imul
inc
inc
pop
or
add
mov
cmp
mov
jbe
loope
insb
fldcw
add
ret
add
ds
std
scas
sbb
movsb
add
jno
mov
mov
stc
test
ja
popf
jae
fcmovne
jle
sbb
add
xlat
xchg
mov
cmp
je
nop
mov
popf
test
pushf
jne
push
add
jb
jl
xor
pop
mov
shlb
pusha
inc
xchg
into
adc
mov
push
sti
sub
add
add
xchg
mov
add
add
stos
add
popf
roll
add
add
gs
je
pop
mov
adc
adc
xchg
addb
jg
add
or
mov
stc
cmp
enter
shl
mov
mov
or
addr16
jns
aaa
jg
outsl
add
les
aaa
or
add
add
inc
xchg
xchg
cmp
mov
cli
dec
pop
ficomps
js
lods
xchg
add
loopne
pushf
into
packssdw
inc
sub
add
ret
adc
add
pop
aam
adc
sbb
mov
add
adc
add
and
add
lret
add
outsl
out
fstpl
imul
ds
pop
decb
add
and
add
mov
shrl
add
add
int3
mov
add
jecxz
pop
pusha
and
add
add
rorl
sbb
daa
loope
add
cmp
test
adc
lods
add
and
add
addb
rol
add
and
pop
test
add
dec
mov
in
pusha
ljmp
mov
add
push
sub
add
lcall
add
ss
pop
add
add
inc
test
add
add
xchg
mov
test
add
add
loope
jno
add
jb
mov
popa
and
and
notb
sbb
inc
rcl
pop
in
pop
jl
add
lahf
addb
pop
lret
push
add
call
cmp
adc
dec
adc
jae
cld
jmp
dec
jmp
mov
jg
sbbl
add
sbb
mov
mov
inc
stc
mov
add
push
add
add
cmovge
xor
add
lods
add
xor
add
in
push
add
add
xchg
xchg
add
add
jecxz
incl
xor
cmpsl
and
add
rcrb
test
sbb
pop
pop
dec
pop
push
gs
dec
xor
mov
add
add
add
jnp
mov
jle
add
mov
add
out
jg
jo
add
pusha
ds
int3
pop
aaa
pop
or
add
add
test
mov
jo
add
jmp
add
add
xchg
xor
add
fmul
and
add
dec
enter
lret
dec
xchg
pop
addr16
add
xor
fs
mov
enter
sbb
add
cmc
mov
flds
add
into
mov
xchg
iret
shll
cmp
popf
leave
sub
lock
lcall
fldcw
movsb
add
lss
dec
pop
pop
or
add
testl
push
add
push
repz
cmc
mov
popf
mov
movsb
add
push
shrl
pop
jge
cmp
xchg
stc
fistpll
adc
out
ja
test
and
or
shrb
cli
cli
push
xchg
sarb
cmc
xchg
vmovshdup
pop
addr16
lods
shlb
and
add
popa
mov
add
hlt
mov
inc
sti
mov
add
add
xchg
add
in
inc
pusha
repnz
and
popl
xlat
pop
ss
add
sub
add
xchg
bound
aad
icebp
popa
insl
mov
push
xchg
aas
add
add
dec
les
mov
fs
lret
push
ja
add
pop
shl
loope
js
cmp
mov
cmp
mov
test
add
mov
sti
mov
data16
or
add
mov
popa
sbb
je
fistl
mov
out
mov
jp
out
add
out
add
ret
cmp
aaa
push
loop
cmpsb
add
stos
icebp
in
mov
mov
lahf
pop
or
test
out
into
sbb
xchg
fiaddl
testb
add
stos
int3
pop
ret
push
pop
in
lret
add
inc
add
add
movsb
add
sub
sub
add
sahf
push
xchg
xchg
pop
ficompl
add
xchg
aam
pop
call
add
jbe
add
sub
leave
lea
loopne
cmpsl
jne
jle
pop
ret
fnstcw
push
push
out
sub
add
jl
xchg
std
mov
popf
in
inc
rol
and
add
mov
sub
jae
xchg
fwait
mov
add
aam
stos
add
xlat
sbb
std
shlb
pop
into
xchg
in
xchg
add
mov
add
add
mov
stc
or
add
add
add
add
add
inc
xchg
neg
sub
add
xchg
mov
leave
pop
scas
add
inc
mov
dec
sarb
adc
aam
mov
movsb
add
inc
out
add
xor
pop
stos
mov
add
pop
sbb
jne
nop
fldl
adc
mov
add
rcll
inc
or
add
dec
bound
add
add
pop
xchg
pop
sub
add
add
jmp
xor
push
add
or
nop
xor
xchg
add
xorl
mov
js
add
add
ret
fs
mov
add
pop
dec
mov
jp
cmp
inc
cltd
test
sahf
call
sub
imul
mov
add
rcrb
insl
jg
add
fldcw
dec
addb
aad
adc
add
cmp
loopne
mov
add
add
je
add
mov
add
push
ficompl
jns
push
arpl
sub
icebp
mov
add
decb
add
sti
dec
frstor
add
xchg
mov
jbe
lods
popa
pusha
xchg
pop
jbe
mov
data16
out
cmp
sbb
cmc
cmp
ds
js
xor
xlat
pushf
stc
cmp
int3
pushf
test
add
mov
jne
add
xor
add
push
mov
inc
lcall
add
push
pop
push
cld
in
mov
je
pop
xor
xchg
cld
movl
add
adc
mov
das
pop
and
sbb
or
add
shr
pop
pop
cmp
mov
movsb
add
movsb
add
cmc
push
add
mov
add
cmp
add
and
jmp
std
xchg
add
cmp
aad
imul
inc
and
add
cmpsl
call
call
and
fistps
pop
inc
sarb
lret
add
mull
aam
dec
or
jne
sbb
nop
add
shl
ljmp
push
jns
rorl
add
idivb
adc
jb
sbb
mov
fsubl
push
or
add
mov
jns
sbb
add
outsl
mov
add
int3
add
add
in
and
add
movl
push
add
add
xor
add
ret
add
adc
add
loope
jno
inc
add
add
inc
xor
mov
add
push
pop
mov
out
xchg
and
add
add
in
ds
ds
or
mov
xor
aam
idivb
enter
popa
into
jno
jl
add
pop
dec
mov
push
movsl
roll
mov
sbb
push
cmc
mov
add
or
imull
xchg
fdivp
test
add
cmp
pushl
adc
push
ficoml
movsl
push
xor
jnp
and
cmp
add
shll
sahf
mov
add
add
or
add
push
insl
daa
lret
sub
add
xor
push
js
cmpsb
add
movsb
add
push
push
jo
add
sub
add
or
add
rclb
pop
add
int
je
and
add
add
add
xchg
and
add
fcompl
add
xor
and
add
leave
xchg
jae
daa
daa
mov
jg
jbe
shll
enter
add
mov
cmp
add
or
call
je
pop
mov
mov
xchg
addb
loope
setnp
cmp
pushf
jbe
scas
add
add
pop
xor
pop
jle
gs
cld
jno
int
in
push
clc
pusha
mov
add
add
add
dec
shll
in
int3
cli
mov
jae
dec
mov
dec
rol
sbb
add
aas
out
xchg
hlt
push
jle
push
add
dec
sbbl
add
inc
rcr
jne
stc
mov
add
jae
xchg
sbb
cld
add
add
add
add
add
add
add
mov
pop
adc
add
mov
in
stos
sub
adc
push
add
or
add
push
ret
das
aam
lock
add
add
fwait
mov
sub
jge
test
add
int3
int3
enter
rol
mov
repnz
mov
jb
insb
push
add
cmp
add
add
dec
jecxz
imul
mov
rcll
mov
lods
shlb
add
add
fnstsw
sub
jg
push
xor
add
jle
inc
cmpsb
add
scas
jo
data16
and
add
push
mov
pop
push
and
add
leave
je
and
add
adc
hlt
jnp
loop
test
add
insl
bound
add
mov
rcrb
add
add
aad
mov
xor
dec
push
mov
in
flds
add
out
daa
push
add
push
out
inc
cmpsb
add
movsb
add
lcall
or
add
das
sub
add
add
dec
push
lods
add
jnp
inc
add
add
nop
pusha
mov
subl
jp
mov
push
add
imul
in
je
xor
adc
mov
add
arpl
jmp
lret
scas
pop
mov
adc
and
mov
add
add
add
das
mov
sbb
adc
movsl
in
sahf
sarb
test
add
dec
dec
out
xor
stc
mov
add
int3
mov
add
sysenter
cmp
rorb
adc
push
add
add
add
or
movsl
cli
lods
add
stos
xor
push
add
jle
add
inc
movb
jb
into
add
xor
cltd
mov
movsb
add
ja
nop
fisttps
add
mov
add
add
mov
add
out
pop
pop
xor
test
add
push
add
pop
mov
add
dec
cltd
pop
push
repnz
je
bound
mov
scas
add
cld
pop
in
insl
xchg
popa
cmp
add
call
add
xor
icebp
mov
ret
test
add
faddl
adc
pushf
jg
je
fsubrl
rcll
ds
xlat
mov
add
insl
inc
leave
hlt
or
add
add
xor
and
add
push
aad
loop
sub
add
test
add
sti
mov
jno
add
ds
in
outsl
jge
sbb
add
in
lret
jb
sbb
xor
lret
rcrb
add
fstpl
or
add
das
repnz
add
das
jg
sub
add
or
add
add
ljmp
add
out
sub
add
pop
push
lods
adc
lds
sbb
mov
add
jmp
enter
lret
push
pop
fisubrs
inc
stc
inc
lcall
push
daa
jae
fcoml
fnstenv
popa
xchg
and
add
bound
xor
xor
test
mov
add
addl
ja
xchg
add
add
stos
inc
js
rcrl
addb
add
add
testb
add
jg
aam
pop
mov
add
cld
test
add
dec
daa
push
add
ljmp
ret
cmp
or
add
lcall
inc
mov
jle
push
popf
inc
mov
jecxz
std
fsubrs
sbb
sub
add
shlb
enter
add
jne
fisubl
add
add
loop
dec
push
negl
addb
aaa
scas
mov
dec
mov
sbb
mov
adc
fldz
jecxz
mov
add
mov
add
ja
add
repnz
xchg
loopne
inc
sahf
ljmp
int
add
addr16
fsub
inc
div
inc
aas
shll
add
stos
add
in
shlb
or
add
cmpsl
cltd
pop
data16
cltd
shll
or
add
rcr
cmp
cmp
push
imul
add
and
sub
das
pop
ja
add
add
xor
pop
adc
pushf
pop
pop
xchg
lds
add
sub
test
add
add
repnz
jae
and
add
fld
mov
repnz
mov
dec
inc
push
addb
add
add
add
xchg
mov
add
mov
aaa
pop
ja
and
sub
and
add
pop
ret
pushf
pop
mov
icebp
mov
add
icebp
xchg
or
bound
add
lock
add
insl
xor
scas
dec
cmp
sahf
or
add
outsl
popa
ret
mov
push
mov
sub
add
test
repz
pop
fs
nop
jecxz
fldl
add
stos
loop
mov
insl
ljmp
cmp
loope
push
xor
add
adc
or
arpl
test
into
clc
adc
std
cwtl
mov
add
mov
fs
ror
xor
mov
cmp
add
jmp
add
lods
add
outsl
xor
lds
call
mov
lcall
mov
add
mov
add
add
rep
nop
xor
mov
add
cmp
test
add
ficompl
add
add
jnp
mov
xchg
add
scas
add
or
or
add
pop
and
add
add
gs
dec
fidivl
imul
xchg
rorb
add
movsl
test
loopne
cmc
std
cmc
das
pop
shrb
out
sbb
add
rorb
add
add
lods
rcl
int
cmpsb
add
adc
add
xchg
loopne
jbe
sti
int
add
subl
adc
add
mov
add
lock
pop
clc
dec
shr
in
sbbl
pop
pop
mov
inc
xor
cmp
mov
pop
int3
sbb
sub
add
addb
jp
mov
add
mov
in
imul
aas
addb
hlt
pop
add
add
jmp
and
stos
dec
inc
das
fidivrs
pop
popf
ret
cwtl
std
mov
add
notb
lcall
and
add
sbb
add
add
pop
scas
scas
push
jg
and
and
add
outsb
ja
sub
add
add
fnstsw
add
mov
and
add
sub
add
movsb
add
mov
add
jmp
movsl
pusha
adc
xor
int3
sbbl
adc
or
test
mov
arpl
fdiv
addr16
mov
add
add
mov
inc
dec
inc
out
enter
dec
addr16
add
lods
add
ror
jo
jp
enter
test
add
push
inc
lret
mov
outsb
or
rorb
push
sbb
mov
ficoms
jns
rolb
inc
adc
loop
scas
add
mov
add
add
pop
sub
add
in
pushf
div
xchg
lret
movsb
add
mov
imul
loope
xor
push
popa
mov
divb
add
fistpll
jp
cmp
push
add
mov
add
movsb
add
xchg
mov
add
in
push
add
fwait
je
daa
dec
add
ja
test
push
sub
add
mov
add
push
jg
je
mov
add
sarb
movsb
add
ret
add
mov
add
jno
bound
jg
add
out
cmp
fcmove
rcr
ror
add
inc
mov
add
push
push
fisttpll
xlat
repnz
popf
dec
outsb
sub
add
stc
xchg
add
js
mov
add
add
or
add
add
adc
mov
add
xchg
add
adc
xchg
arpl
jl
clc
and
and
lahf
inc
adc
rol
mov
add
push
enter
add
incb
jae
add
add
mov
add
push
fwait
cmp
cltd
std
lret
add
int3
sahf
add
test
add
cmp
jge
mov
add
in
or
push
mov
add
add
in
mov
add
loope
jnp
cli
gs
mov
insl
inc
and
outsb
lods
in
frstor
xor
sbb
add
dec
lret
push
add
xchg
add
xor
or
add
dec
push
push
xchg
add
add
ljmp
and
jne
xchg
add
mov
add
scas
add
mov
add
jp
or
add
add
jle
add
and
or
add
mov
jno
or
add
jae
add
cmpsb
add
inc
mov
out
in
popf
cmp
adc
aam
cltd
and
cld
in
sbb
loope
adc
in
call
aad
xor
cmpsb
add
nop
fistl
cmp
cwtl
fistpl
add
cmp
insl
sub
add
mov
add
add
mov
out
push
imul
or
add
ret
in
add
sub
push
daa
shll
mov
call
std
or
add
add
ss
int3
out
add
xchg
pushf
inc
stos
add
test
push
mov
hlt
xchg
outsb
enter
fwait
scas
scas
add
lret
ja
jl
add
xchg
xor
fistpll
push
and
add
loope
stc
mov
push
sub
add
or
jbe
and
add
cmp
sub
add
jl
or
add
ljmp
or
xor
fisttpl
fs
lcall
mov
add
add
add
clc
test
or
add
sbb
cwtl
adc
add
cmp
addb
add
add
cwtl
in
fwait
repz
or
add
insb
adc
stos
add
dec
cmp
pushf
sbb
jp
les
shll
les
jne
mov
mov
add
jmp
fsubs
lahf
sub
dec
dec
xor
add
bound
std
stos
add
xlat
inc
int3
test
sbb
add
sbb
jno
add
xor
shll
cmp
pop
addr16
lods
rcrw
mov
mov
lds
push
aad
push
add
into
push
pushl
call
dec
pushf
inc
xor
jbe
repnz
pop
addb
sahf
imul
ret
fucomip
pop
xchg
pop
or
add
add
add
aaa
pop
push
lcall
addb
movsb
add
cmpsl
add
fwait
out
lock
leave
mov
dec
mov
add
shrb
jl
or
push
out
or
add
add
das
sbb
add
ja
addb
js
and
add
and
add
sbb
mov
dec
idivb
ds
add
xor
inc
dec
or
mov
test
add
out
stos
add
mov
and
add
iret
inc
cmp
add
jmp
sahf
jle
cmp
cmc
dec
cld
outsb
loop
inc
not
pushf
hlt
sub
cmc
outsl
xlat
idivb
int3
movsl
cmp
sub
stos
add
add
sub
jmp
cmc
jne
pusha
fidivrl
add
add
pop
aas
ljmp
add
lea
arpl
rcr
addb
inc
adc
mov
add
mov
xchg
sbb
call
xchg
add
dec
sub
add
in
sub
add
stos
add
pop
sbbl
jle
aaa
test
fidivrl
lods
add
je
in
rol
inc
lods
add
lea
push
inc
dec
add
inc
in
ja
jo
mov
add
inc
add
add
data16
add
movsl
push
mov
aad
pop
push
pop
rorb
push
add
add
add
pop
inc
xor
aam
sbb
lock
or
add
push
xor
push
shl
scas
add
mov
add
mov
add
cmc
lock
pop
inc
mov
mov
rorb
int3
sbb
syscall
lds
add
sbb
int
pop
loopne
pop
dec
sub
push
mov
add
mov
nopl
adc
in
or
add
jle
cld
sub
add
outsb
push
inc
cmc
push
data16
jo
mov
push
test
cli
xor
mov
add
mov
add
mov
dec
cwtl
sub
mov
fwait
xchg
push
imul
add
add
insb
push
jecxz
cwtl
inc
mov
cmp
add
mov
sbb
or
add
add
addr16
cwtl
fmulp
shr
add
mov
jg
add
xchg
jne
pop
ds
add
lcall
flds
adc
mov
add
loope
cli
jmp
mov
add
shr
adc
jge
and
mov
add
cmp
and
add
loopne
add
dec
cmpsb
add
rcr
insl
cmp
add
arpl
jp
add
add
mov
xor
add
jns
fdivl
mov
dec
xlat
int
pop
daa
jg
add
lods
inc
jo
add
sbb
or
add
sbb
push
mov
sbb
int
das
push
stos
add
ss
addb
repz
je
inc
stos
add
push
xchg
xor
pusha
push
sbb
cmp
pop
out
int
scas
push
loope
sbb
add
add
rcrb
xchg
mov
push
add
jns
inc
cld
adc
dec
aad
xor
add
add
aaa
jbe
xchg
or
int
imul
add
jge
or
add
jp
cli
hlt
insb
jmp
cwtl
jl
add
imulb
pop
in
cltd
pop
jl
addb
adc
and
or
add
add
add
inc
or
add
jmp
jp
add
repnz
inc
into
fbld
add
popa
xchg
insb
sub
xor
and
add
add
adc
in
sub
pop
or
add
cmp
insb
loop
ficoml
lock
mov
xchg
sub
add
rorl
add
in
cmp
mov
add
mov
jns
sbb
add
add
jp
dec
pop
sahf
xor
add
das
push
flds
jge
in
inc
cmc
das
xchg
add
jno
rolb
add
adc
cld
rclb
add
pop
rcrl
out
popl
add
decl
mov
cmp
inc
and
mov
sbb
add
and
add
xlat
push
enter
adc
fcoml
stos
mov
addb
fsubrl
movsl
pop
ror
xchg
mov
mov
cli
outsl
jl
sub
add
jl
pop
xor
pop
pop
or
add
xchg
add
sti
loope
and
add
pop
push
add
addr16
hlt
xor
xorl
add
add
ja
dec
dec
fadds
mov
pusha
iret
mov
add
xchg
aam
push
mov
insl
pushf
dec
cwtl
xor
push
or
xor
jle
xchg
cli
shrl
add
xor
nop
sbb
pop
or
add
out
xchg
add
bound
cmp
add
mov
add
insl
xchg
ja
add
or
add
push
mov
jmp
push
add
xor
test
add
push
mov
je
and
push
add
fcomip
inc
cmp
add
add
add
xor
add
stos
movsb
add
sub
jecxz
mov
stc
imul
pop
repz
add
add
aam
add
popf
dec
add
bound
fldenv
add
xor
lcall
fs
arpl
lds
cmp
test
mov
add
movsl
pop
inc
mov
add
sub
cmp
outsb
repz
mov
das
rorl
add
xchg
push
fdivrs
adc
add
mov
cmp
fcompl
idivb
sbb
std
in
int3
sbb
mov
add
mov
shl
sahf
test
add
add
add
jge
cli
jb
aaa
push
add
pushf
shrb
add
hlt
jmp
rorl
xchg
add
loope
mov
jmp
sub
add
sbb
sahf
mov
or
add
mov
pop
jnp
into
inc
inc
fisttpll
mov
jmp
xchg
scas
out
aam
sub
add
das
add
loop
fsts
add
outsl
fisttpl
lock
test
add
push
incl
add
shlb
call
shrl
jo
out
xor
ret
xlat
fimull
add
fs
or
add
sub
add
xchg
test
add
add
add
mov
add
add
pusha
dec
inc
repnz
add
lret
jp
pop
xchg
add
fsubrl
test
mov
stos
add
adc
push
pop
cmp
sbb
test
mov
add
popf
mov
imul
pop
jle
add
adc
decb
or
mov
add
or
pop
sarb
add
add
inc
shl
mov
fwait
sbb
jbe
icebp
lret
add
adc
add
scas
add
test
add
roll
add
repnz
xchg
pop
jnp
call
test
test
add
sub
jno
dec
mov
addl
ljmp
faddl
adc
hlt
adc
add
sub
jnp
in
add
lock
in
jo
dec
xor
add
sti
mov
add
pop
sti
sbb
mov
leave
jbe
icebp
lods
leave
test
rorb
add
pop
mov
or
add
add
mov
popf
jnp
add
adc
add
jo
jecxz
mov
repnz
mov
adc
in
jge
push
inc
ret
cltd
cmp
dec
or
add
test
add
jmp
add
dec
ja
add
push
add
add
inc
ret
ljmp
add
add
add
iret
addb
mov
nopl
add
sub
add
in
push
ja
in
sub
inc
cltd
das
sahf
or
add
pop
mov
add
xchg
add
lods
add
sbb
cld
out
je
cmpsl
sub
add
out
cmpsl
aam
add
xor
inc
into
int3
nop
inc
stos
test
add
push
adc
sbb
or
test
add
cwtl
mov
out
ror
add
push
push
add
jmp
xor
sahf
ljmp
dec
icebp
sbb
int
xchg
sti
loop
nop
sbb
aad
sbb
mov
stos
add
insb
insl
mov
dec
push
stos
add
repz
aas
dec
xchg
enter
xchg
mov
push
in
lcall
add
or
into
sahf
cltd
adc
add
bound
push
std
fs
out
cwtl
out
iret
and
lds
add
xchg
sbb
add
ret
pop
rcrl
inc
jnp
movsl
movsl
iret
lods
xor
mov
mov
add
movsl
xor
rorl
add
out
movsl
fstpt
cltd
pushf
lret
sbb
adc
add
pop
dec
daa
ret
outsl
inc
stos
adc
sbb
add
add
sub
add
cwtl
ja
int3
cmp
xchg
stos
add
or
add
arpl
imul
sbb
add
mov
xchg
add
ret
pop
cmp
jb
jo
push
mov
add
add
pop
popa
cmp
fiadds
pushf
xchg
jle
add
mov
pop
stc
mov
add
add
add
aam
add
sub
je
lock
nop
jle
movsl
inc
pop
xchg
shrb
push
add
add
add
jp
push
rcrl
imul
xchg
cmpl
adc
sarb
xor
xchg
and
mov
inc
loope
rcrl
int
in
rclb
mov
dec
xor
cmp
and
add
and
add
out
scas
xchg
out
leave
clc
repnz
add
cmp
out
add
add
add
insb
outsb
in
leave
xchg
pop
repz
add
clc
inc
das
jb
pop
push
add
add
mov
ja
pusha
ljmp
jle
sbb
insb
or
add
jg
pop
stos
inc
fwait
loopne
inc
sbb
add
push
add
out
xor
stos
add
mov
fstp
xchg
hlt
outsl
lret
sbb
add
adc
push
mov
addb
test
addb
mov
push
fiaddl
xchg
jmp
mov
mov
dec
xrelease
cltd
adc
rclb
add
push
sub
add
jbe
add
mov
popf
fldenv
int3
add
sub
add
addb
xor
repz
jae
pop
out
pop
int3
mov
jae
mov
dec
pop
shr
int3
rsm
add
arpl
add
push
mov
add
jle
adc
stc
rorb
add
fwait
jne
push
fs
push
stos
cmp
add
loope
and
add
mov
jp
test
adc
adc
hlt
mov
ss
stos
add
test
outsb
xlat
xchg
fsubl
scas
add
je
inc
dec
cmp
add
mov
jg
inc
or
sub
mov
std
out
push
rcrb
jmp
bound
call
add
shll
ret
jmp
push
push
add
in
push
notb
adc
jmp
add
lret
into
dec
lret
dec
out
add
mov
push
sub
add
mov
ja
mov
add
add
xchg
add
add
and
repz
lods
add
jmp
outsb
xchg
sbb
adc
push
mov
inc
or
add
sub
add
rorl
add
int
xchg
push
adc
mov
mov
add
add
addb
add
add
add
mov
stos
in
xor
mov
loopne
scas
lret
daa
dec
ficompl
nop
mov
add
les
lret
dec
mov
scas
cmpsb
add
rorl
nop
movsl
rolb
add
stos
daa
lods
in
xchg
jle
add
sti
fcoms
in
ds
bound
and
aaa
clc
xchg
push
jne
jle
push
repz
int
xor
mov
add
or
push
ljmp
inc
jns
mov
push
mov
xchg
pop
xorl
cmpsb
add
mov
xchg
popa
mov
out
add
mov
in
cmp
add
mov
test
xchg
and
dec
stc
push
insl
lahf
sub
lcall
inc
in
lret
pop
mov
add
mov
pushf
cmp
add
rep
add
pop
dec
jmp
mov
mov
jle
rclb
xor
mov
add
rorb
mov
add
inc
fldt
loop
sub
add
icebp
mov
mov
insl
mov
add
fnstenv
mov
jae
add
add
add
add
stos
mov
add
push
stos
add
sub
add
hlt
lret
lret
pop
lret
inc
hlt
push
imul
add
add
xchg
stos
mov
jl
lahf
inc
xor
insb
pusha
ss
mov
add
push
add
idivl
mov
xchg
loopne
sbb
dec
dec
or
pop
add
nop
aam
inc
dec
adc
pusha
cwtl
dec
mov
mov
add
fildll
pop
sbb
imul
pop
mov
jle
neg
adc
les
mov
mov
adc
add
add
pop
push
add
pusha
sub
inc
aam
icebp
mov
push
push
sub
add
out
push
lock
popf
jle
lods
clc
and
add
loopne
shl
sti
int
out
mov
add
out
push
cmp
add
mov
sbb
push
sub
add
insl
dec
mov
inc
push
mov
jp
mov
insb
lea
rcl
mov
inc
loop
jne
add
loop
ss
outsl
lret
or
in
pop
add
add
xor
xchg
call
add
inc
and
cmp
mov
mov
add
das
add
rclb
add
out
ror
pop
pusha
adc
mov
add
jae
inc
insl
daa
adc
neg
lcall
add
add
movsb
add
jb
int
in
sar
ljmp
add
xor
in
cmp
add
add
mov
add
pop
inc
andl
std
xchg
dec
das
and
add
and
add
loop
icebp
daa
inc
gs
dec
cmp
push
mov
loope
mov
add
mov
add
add
add
jns
sti
push
and
add
add
into
adc
sarl
out
sub
add
jg
fdivrp
push
icebp
mov
dec
loopne
fldl
shr
ret
push
adc
dec
lock
pop
movsb
add
xchg
push
add
dec
movsb
add
sbb
add
xchg
fldl
cmp
shrb
inc
mov
sbb
xor
add
add
mov
add
add
dec
xor
add
cmp
add
dec
popf
mov
jns
jg
data16
add
cmpsl
and
add
and
add
mov
add
shl
int
fdivp
cmc
lret
sub
add
in
push
scas
add
adc
fldenv
add
pop
data16
xor
fcomps
or
add
jge
add
daa
push
or
add
mov
mov
int3
xlat
xor
add
xchg
jl
movsl
adc
add
pusha
hlt
cmp
cmp
pop
aam
fs
mov
les
sub
add
decl
dec
cmp
inc
loope
sbb
xor
push
add
in
scas
fsubl
data16
add
push
divb
add
and
jbe
test
cmp
mov
add
add
push
add
in
outsl
push
inc
fisubrs
mov
xor
dec
inc
cmp
out
add
or
add
sbb
mulb
sarl
jmp
add
dec
insb
out
je
lahf
jb
add
fs
lods
jns
push
into
jp
xchg
mov
mov
fistpll
mov
add
pop
push
hlt
fidivrl
arpl
sbb
or
add
loop
or
add
add
adc
pop
sbb
push
jne
add
mov
xchg
jl
jle
and
rol
xor
add
dec
mov
stos
push
pusha
xchg
ret
mov
add
fucomi
add
add
or
dec
or
add
cmp
inc
lds
add
pop
inc
dec
stos
adc
xor
outsb
mov
add
add
mov
loopne
add
pop
add
stc
mov
mov
or
sub
add
mov
pop
lret
sub
add
push
stos
fistpl
mov
add
nop
mov
add
sub
add
add
adc
add
and
add
dec
push
xchg
jecxz
insb
adc
mov
test
add
jo
add
mov
add
sti
jg
jnp
add
cli
leave
loopne
add
mov
jne
daa
inc
pop
stos
add
push
jge
add
jle
movsl
ss
mov
cmp
fcom
add
lock
xchg
mov
adc
fadd
jecxz
pop
adc
xchg
pushf
add
movb
add
mov
lahf
add
hlt
mov
add
add
mov
sbb
test
add
lea
sub
add
add
insb
jb
lahf
xor
data16
call
add
fcomip
rcrb
sub
jge
sbb
pop
mov
arpl
add
adc
insl
out
add
pop
pop
daa
int3
jmp
rcll
or
add
lea
sub
add
add
ret
inc
mov
imull
dec
insl
inc
mov
lcall
pop
ret
xchg
adc
push
add
scas
xchg
push
add
rcrb
add
scas
add
inc
leave
repnz
out
repz
lret
add
bswap
push
or
add
mov
jl
xor
xor
jle
daa
loopne
cmp
mov
and
add
sbb
fldcw
sub
sbb
sbb
pop
mov
add
cmp
pop
lea
mov
adc
ret
aam
je
lds
leave
mov
aaa
test
add
xor
ror
fs
xlat
fs
rclb
rcrb
insb
jnp
pop
dec
adc
inc
pop
push
pop
cmc
out
adc
rol
ss
jg
sbb
outsb
loope
fldcw
push
mov
add
add
mov
add
repnz
in
cmpsb
add
fbld
add
jo
pop
out
int3
rcrb
adc
and
movsl
push
xchg
imul
pop
pop
data16
add
cmpsb
add
push
push
popa
pop
push
dec
push
outsb
outsb
pop
push
push
pop
inc
xchg
mov
scas
in
pop
cli
lcall
icebp
push
dec
loope
rcrb
out
add
js
inc
cltd
jbe
adc
inc
test
std
jl
add
lods
sbb
jg
xor
jmp
mov
ja
jl
xchg
cmc
xchg
xchg
add
xchg
add
add
xor
add
add
inc
int3
push
movsb
add
inc
mov
add
push
repnz
add
add
xchg
add
or
loop
push
loope
push
cld
arpl
dec
push
add
add
add
scas
inc
negl
sahf
dec
popa
sbb
mov
leave
repz
jne
add
adc
sub
add
nop
inc
test
add
sbb
cmp
jns
or
add
clc
leave
test
add
add
inc
jl
loopne
rorb
into
inc
aad
gs
pop
std
lock
add
mov
pop
inc
push
add
cmp
mov
mov
cmp
add
sbb
pusha
jecxz
out
pop
in
or
add
add
pop
jne
mov
xchg
push
inc
mov
pop
aas
cmp
jecxz
and
add
ss
inc
mov
add
bound
add
adc
mov
addb
or
fistpl
ss
push
fmulp
aaa
les
jbe
adc
mov
add
inc
test
add
dec
repnz
push
fld
aam
in
repnz
jo
or
int
movsl
xchg
call
lret
sbb
addb
loopne
subl
xchg
sub
movsb
add
stos
add
call
add
and
add
wrmsr
enter
cmp
and
je
movsl
add
add
popf
sub
lcall
mov
add
cwtl
pop
loop
lcall
das
addb
mov
mov
xor
cmpsb
add
or
popa
sub
mov
dec
sub
jno
jecxz
cmpsl
mov
jp
jns
fwait
mov
iret
pop
mov
xor
dec
dec
cmpsb
add
or
scas
add
xchg
mov
add
add
or
movl
call
gs
ror
mov
insb
outsb
xchg
repz
push
xchg
popa
pop
pop
push
repz
ficompl
frstor
test
call
cmp
add
push
cmc
leave
mov
add
addr16
ret
add
add
fwait
aaa
icebp
outsb
jno
mov
adc
test
push
fidivl
mov
adc
cmp
outsl
faddl
shrl
nop
ret
add
inc
add
add
leave
gs
test
add
xchg
jbe
mov
sbb
or
lock
or
add
add
add
add
cmp
call
and
inc
mov
push
mov
and
mov
add
sarl
and
add
inc
ds
jecxz
jne
dec
dec
lock
add
test
add
add
loop
js
pop
pop
push
push
pop
and
shll
add
add
jmp
mov
add
jmp
stc
pusha
add
add
jecxz
test
add
add
lods
add
aaa
dec
bound
int3
dec
pop
gs
jne
dec
push
add
negb
addb
popa
pop
mov
lret
add
adc
add
arpl
stos
and
add
stos
add
adc
mov
push
sbb
jno
push
xor
xor
add
add
dec
add
add
popw
ret
call
test
add
inc
sti
outsb
jp
aam
ss
cltd
popa
inc
sbb
repnz
dec
outsb
mov
add
call
add
outsb
sar
cwtl
int
rcl
add
out
pushf
sarb
add
sbb
ja
nop
mov
add
xchg
inc
xor
add
mov
add
jge
dec
push
add
adc
fwait
xchg
ljmp
add
xor
hlt
fdivs
mov
xchg
test
add
dec
into
add
add
cmp
test
add
and
add
pop
sbb
jns
fdivrl
add
rcrb
stc
xchg
mov
sahf
push
add
test
xlat
flds
sbb
xor
mov
add
rcll
pop
mov
sub
add
push
mov
add
repz
scas
dec
shlb
add
add
sub
add
out
inc
mov
inc
lcall
les
add
lret
cwtl
mov
aas
jmp
sub
xor
popf
add
fs
mov
add
add
adc
xor
push
xlat
in
xchg
aam
xor
test
add
add
add
in
add
repnz
lods
add
cpuid
add
xchg
add
pushf
inc
aas
out
push
addb
fs
add
enter
test
add
dec
stos
push
add
push
sbb
addr16
jecxz
xchg
cld
adc
outsb
out
addb
loopne
lahf
pop
roll
xchg
cmp
iret
dec
sub
add
lods
sub
les
loop
invd
add
lea
mov
push
cli
js
add
xchg
add
add
js
push
data16
and
add
in
sbb
mov
add
add
add
sub
add
push
or
add
push
insl
push
add
cwtl
mov
xchg
lret
fadds
scas
arpl
pop
imul
add
std
fcoms
sti
gs
mov
fldt
sbb
add
popf
xchg
daa
or
add
fisubrs
lahf
rcll
mov
jns
dec
insl
scas
and
add
std
mov
pop
xor
or
push
call
sub
xchg
pop
or
add
movsb
add
cmc
das
scas
pushf
adc
inc
fldl
ficoml
add
push
pop
or
add
inc
jmp
imul
bound
or
ja
add
addb
insl
sahf
js
aad
push
add
cmp
jl
cmp
jl
pop
pop
mov
out
lods
add
cmp
cmp
add
jns
and
add
jg
xlat
mov
mov
call
pop
mov
add
xchg
cli
out
pop
jns
add
mov
inc
js
xlat
xor
loopne
mov
dec
cmc
sahf
ja
iret
and
inc
add
sub
add
add
test
add
into
inc
in
lock
jmp
sub
add
call
ficoms
pop
cmp
push
mov
ret
outsb
mov
add
inc
jl
outsb
push
xchg
fnstsw
ficoms
add
lret
add
add
add
add
mov
add
push
int3
aas
jmp
cltd
js
mov
mov
add
stc
out
mov
leave
std
inc
jo
jne
loop
mov
add
dec
mov
out
insl
mov
xchg
xchg
test
add
add
add
sbb
addb
or
add
xchg
inc
add
push
mov
add
xor
adc
call
lahf
mov
dec
push
push
fwait
mov
shrl
stos
add
ljmp
dec
lcall
sub
push
add
int3
lcall
insb
sub
add
mov
push
add
lahf
imul
and
add
fnstcw
aas
clc
popa
fistpll
enter
icebp
test
add
hlt
xchg
jae
add
xchg
addb
mov
inc
test
add
xor
inc
mov
push
movsb
add
pop
into
arpl
push
push
inc
jno
pusha
fsubl
push
adc
jmp
pusha
inc
mov
add
add
dec
dec
add
dec
jae
add
lds
add
mov
add
jmp
push
mov
out
clc
push
xchg
sub
add
mov
add
shll
add
cwtl
dec
mov
repnz
ds
in
in
clc
mov
add
fiadds
fneni(8087
push
or
add
int3
addb
pop
dec
fs
add
mov
addb
lcall
subl
add
add
add
sarb
add
arpl
sbb
sub
nop
inc
ret
insl
enter
leave
add
insl
lret
dec
stos
add
xor
jo
test
add
add
int
out
addb
mov
add
scas
add
call
push
pop
xchg
xchg
add
pop
mov
movsb
add
cmp
add
inc
mov
add
jge
add
sahf
push
pop
mov
add
add
inc
jg
mov
jp
in
icebp
adc
add
xor
std
dec
cmp
push
daa
sbb
cmpsb
add
pop
lods
sbb
loopne
xchg
push
add
stc
mov
dec
lahf
mov
xor
test
add
loope
add
add
mov
cmp
dec
pop
test
add
or
lods
pop
loope
inc
mov
and
add
add
out
xchg
rcll
cmc
mov
aas
pop
cmp
add
nop
shrb
icebp
pop
add
mov
call
inc
pop
out
jne
cmpsl
or
add
movsb
add
fnstsw
insl
mov
add
push
push
pop
ljmp
add
xchg
xlat
mov
add
add
mov
add
sbb
mov
xor
je
test
add
dec
fsub
rcr
push
mov
add
divb
mov
aam
ds
xor
popf
cmp
ret
insl
push
movsl
xchg
lods
add
hlt
fildl
add
not
addb
adc
stos
add
cmp
add
add
sbb
pusha
mov
add
stc
scas
test
add
add
cmp
sbb
add
add
lahf
push
add
jae
xor
push
int
add
xor
ljmp
pop
or
add
push
mov
add
jge
cmp
xor
add
imul
mov
add
cmp
and
add
mov
mov
sub
mov
add
mov
jmp
add
lock
inc
js
add
cmpsl
and
add
add
cmp
aam
stos
add
mov
add
mov
ret
aaa
rcrb
bound
xchg
xchg
fstp
icebp
rcll
test
push
xlat
mov
lods
movsb
add
jno
jae
lods
add
orl
addb
cli
inc
dec
scas
add
aad
add
xor
fsubrl
or
mov
xor
push
test
stos
in
add
or
add
add
js
in
mov
data16
stos
add
and
add
pop
or
add
call
add
je
jbe
pop
cmp
and
xor
test
add
mov
lods
sbb
add
ret
add
add
jb
cmc
bound
mov
mov
add
ret
insb
lods
pop
add
add
add
push
or
add
in
and
mov
add
mov
sbb
mov
dec
addb
fisubl
mov
add
outsl
push
cli
cmp
fdivrl
xor
jmp
and
add
sub
add
add
push
std
xor
sbb
pop
pop
cmp
mov
pop
mov
data16
push
movsl
unpckhps
push
add
daa
testl
ljmp
add
mov
mov
add
add
add
faddl
xchg
in
push
add
or
add
repz
add
pop
inc
xchg
push
inc
data16
dec
xor
add
call
sbb
add
fneni(8087
mov
add
cmp
add
add
pop
into
sub
outsl
mov
add
lret
movsl
and
in
nop
lcall
bound
fwait
add
add
les
add
xchg
loope
push
sbb
andl
add
add
lds
loopne
addb
nop
cmp
repnz
inc
aad
out
inc
jl
push
and
add
les
mov
pop
sub
add
add
in
aaa
dec
jmp
mov
ficomps
sbb
add
das
dec
imul
dec
jmp
push
insb
ja
adc
jg
lret
cmp
lea
xor
adc
add
cmc
ret
add
iret
add
lods
add
fistpll
add
xchg
sub
add
push
pop
test
add
xchg
add
cli
cmp
stos
add
mov
xchg
mov
add
mov
add
add
fildl
gs
fs
lock
pop
jl
add
xchg
popl
add
push
add
addb
je
add
arpl
jge
lock
inc
fmull
add
ljmp
add
repnz
lods
add
cmp
dec
push
lret
add
push
test
add
bound
add
push
out
add
int3
in
cmp
sti
mov
mov
pop
sbb
add
add
mov
add
cmp
cmc
int
dec
mov
adc
mov
add
add
addr16
sub
add
jg
sub
add
adc
add
jne
int
les
inc
jae
add
add
add
mov
or
fnstcw
sbb
add
add
and
or
add
sbb
or
inc
ds
sti
sahf
ficoml
add
sbb
jg
loop
jl
add
mov
sarl
add
sbb
add
jp
mov
dec
dec
mov
enter
xor
mov
pop
and
add
into
mov
push
add
mov
pop
push
jg
aam
dec
lret
add
jno
in
in
mov
lods
add
jge
fstl
ja
pop
addr16
ljmp
add
add
dec
cmpl
popa
jo
inc
imul
add
pop
dec
jno
and
add
jo
push
and
add
jns
lcall
addr16
in
adc
add
jb
addb
pusha
add
add
ret
add
fbld
repnz
nop
lcall
fcomps
cli
push
add
cwtl
pushf
and
pop
xorl
add
pop
pop
and
add
sbb
lcall
push
lret
popf
pusha
call
aaa
aas
xchg
ja
jl
push
out
adc
sbb
jbe
pushf
push
add
xchg
leave
xor
or
add
sbb
mov
mov
push
fidivrl
mov
imull
pop
outsl
pop
fists
add
fmuls
das
inc
test
add
or
add
add
cmp
pop
xchg
inc
rcr
sbb
out
test
and
add
add
sbbl
add
jns
paddd
fdivl
outsb
fsubl
dec
xchg
dec
mov
rcrl
inc
jl
test
add
mov
int3
add
inc
adc
pop
sbb
aad
pop
mov
mov
fwait
mov
mov
dec
mov
in
addb
cmp
add
xchg
pop
sub
add
aaa
adc
pop
and
add
aaa
push
mov
jae
dec
pop
addb
or
add
add
and
add
or
add
js
pop
cmpsb
add
ds
pop
mov
jae
clc
bound
add
ljmp
add
jle
lret
fs
add
gs
sbb
movsl
std
jb
push
aam
addb
xchg
je
add
add
pop
push
fildl
rcr
int
ret
add
rolb
movsl
cli
pop
fistps
mov
and
push
ret
and
add
lahf
call
cmp
repz
out
xor
xor
push
insb
aas
hlt
xchg
inc
jno
add
sti
mov
add
add
aad
stc
shll
and
add
scas
add
leave
mov
shl
pop
addb
or
jecxz
nop
mov
stos
jb
pushf
ja
js
in
mov
add
add
jne
add
cmpsl
mov
add
les
or
add
add
iret
ja
jnp
sub
add
clc
pop
loopne
pop
cmp
fisubrs
add
int
sbb
add
mov
add
mov
ja
add
add
aas
or
add
fnsave
jecxz
mov
ja
lods
jb
movsl
xor
add
icebp
lcall
hlt
rol
or
movsl
jno
adc
push
add
adc
sub
add
fs
mov
into
and
fs
push
mov
add
adc
fs
in
out
mov
loope
scas
add
or
add
sub
push
cmp
mov
fwait
cmp
daa
insb
cmpsb
add
cmc
repnz
fdivs
jne
add
dec
pop
fnsave
jns
cmc
addb
xchg
addb
pop
mov
ret
jle
inc
jmp
std
xor
push
push
mov
sbb
add
xor
add
sbb
jno
add
xor
jb
add
inc
xor
ret
jae
mov
test
add
and
jbe
add
negb
test
add
add
hlt
lods
aaa
mull
inc
pop
repz
sarl
jp
inc
add
in
xchg
add
clc
enter
xor
push
and
in
sbb
aas
push
stos
inc
icebp
xlat
add
add
xor
add
pusha
pop
bound
jmp
insl
mov
add
or
add
push
shrl
add
shll
stos
add
mov
add
inc
decl
add
pop
in
test
cmpsb
add
out
scas
xor
fldcw
adc
jecxz
add
pop
call
pop
mov
mov
mov
stos
add
nop
in
jge
add
add
add
ja
add
int
out
add
fwait
mov
sbb
pop
and
add
aas
leave
std
push
xor
or
add
roll
fcompl
sbb
jl
add
imulb
add
xchg
test
add
fstps
add
stos
rol
in
lds
add
cmp
movsl
vptestmd
and
add
mov
add
shr
cmp
add
mov
cmp
mov
pop
and
jg
sub
dec
imulb
pop
scas
add
lcall
add
dec
int3
outsb
ja
jecxz
add
aaa
push
jbe
and
add
cmp
add
stos
add
and
add
push
in
ret
jmp
add
cmpsb
add
inc
mov
add
aas
inc
pop
xchg
int
pop
pop
scas
inc
outsb
pop
or
add
or
add
mull
call
pop
adc
in
mov
mov
add
into
jle
mov
inc
lret
hlt
jle
push
pop
xor
add
bnd
stc
loope
ljmp
aaa
sub
add
adc
cmpsb
add
adc
pop
and
add
add
inc
out
out
add
push
mov
mov
fmul
lcall
aam
inc
insl
inc
clc
fwait
jle
add
fdiv
testb
and
add
fsubrp
and
add
bound
sti
out
inc
jns
mov
scas
rcl
jns
add
jmp
jp
inc
mov
add
sbb
pop
jge
xor
add
fidivl
aad
insl
test
in
xchg
push
add
mov
add
dec
inc
cmpsl
cld
dec
cltd
jnp
add
icebp
pusha
jl
add
lret
jb
movsb
add
rcr
dec
push
mov
or
add
cmp
inc
xor
add
movsl
mov
lea
aam
aas
mov
push
xchg
mov
mov
pcmpgtw
test
add
hlt
sbb
mov
push
inc
scas
add
gs
add
enter
mov
stos
inc
xchg
pop
test
add
jno
adc
add
sub
add
mov
add
xchg
cwtl
lea
add
outsl
xor
mov
add
enter
inc
jo
incl
pop
or
add
add
xchg
xchg
std
cmp
dec
dec
push
add
jge
add
add
lret
xor
les
add
xchg
add
xchg
lea
sub
adcl
sbb
aam
movsb
add
xchg
add
add
addr16
lret
in
xchg
nop
push
xchg
mov
and
out
add
andl
add
mov
and
rcll
xchg
mov
add
add
xchg
daa
loope
inc
pop
or
clc
sti
lea
add
lret
aad
and
add
mov
add
add
mov
enter
add
aas
mov
add
or
add
jb
icebp
inc
hlt
sub
add
inc
lret
rcrb
mov
add
cmpsb
add
mov
scas
add
cmp
add
sub
add
adc
iret
sub
fstps
add
add
sub
adc
add
add
cmp
mov
add
adc
inc
sahf
mov
mov
add
fcoms
cltd
mov
add
push
push
inc
pandn
pushf
cmp
aas
dec
scas
add
dec
js
add
outsb
lods
arpl
inc
push
add
jl
pop
push
or
add
repz
add
stos
fidivrl
or
std
test
add
fs
add
mov
xchg
add
add
xchg
add
add
imul
loope
push
add
dec
shlb
add
enter
sbb
xlat
dec
or
add
or
add
mov
out
rcll
fcompl
xor
sub
inc
and
add
lret
add
test
add
vhaddpd
cld
mov
add
sub
add
add
aaa
shlb
movsl
push
and
movsl
mov
add
xor
xchg
mov
test
add
mov
scas
dec
pop
repnz
stos
add
and
cltd
addr16
jl
dec
loop
sub
add
add
add
into
imul
add
inc
clc
insb
xchg
add
outsb
cmp
add
fimuls
add
mov
dec
fidivrs
mov
add
stos
add
jecxz
fs
test
add
sub
push
stos
add
mov
cmc
push
imulb
add
mov
cld
cli
cmc
lret
add
add
add
and
add
sbb
mov
add
std
mov
push
add
test
icebp
call
add
ljmp
add
xor
repnz
repz
xor
dec
pop
fildll
jl
add
in
pushf
arpl
inc
lret
sahf
adc
pop
mov
add
add
mov
add
sbb
scas
iret
adc
repnz
pop
xor
js
xchg
add
add
shrl
fidivrs
mov
lea
add
push
add
sub
in
int
jne
add
popf
mov
add
popa
xor
test
add
or
add
cmp
add
scas
add
xor
stc
hlt
daa
xchg
mov
add
jnp
push
shlb
inc
pusha
pop
pop
jnp
push
add
cltd
adc
add
add
addl
insl
mov
add
add
push
test
and
add
add
push
sbb
insl
mov
clc
mov
add
std
int3
pop
scas
add
scas
add
cmp
shlb
add
pop
testl
lret
sub
add
add
imul
xor
add
xchg
mov
push
sub
add
nop
mov
cltd
cli
out
scas
mov
fcom
pushf
movsb
add
inc
lock
add
sbbl
mov
in
jl
cmp
jns
or
aad
inc
popf
lahf
fadd
add
je
mov
add
repnz
daa
sub
add
add
movsb
add
dec
hlt
hlt
adc
add
mov
jo
sub
add
in
pop
insl
mov
out
xor
add
mov
mov
xor
mov
add
scas
add
fwait
int3
add
add
add
and
filds
adc
adc
in
add
lret
js
add
add
add
or
adc
mov
ret
xor
cmp
mov
fmul
pop
sti
pop
mov
pop
mov
aam
sbb
adc
mov
add
imul
ds
mov
add
add
sub
inc
data16
addb
fistps
stc
push
into
lahf
imul
add
add
add
sub
add
cmpsb
add
push
fcomps
add
xchg
add
cmc
out
push
loop
mov
loopne
jo
cmc
xor
in
xorl
add
mov
add
sbb
addl
mov
dec
and
add
cli
ficomps
rcl
mov
and
add
add
je
pop
mov
xchg
jo
rcr
push
data16
add
loop
cmpsl
add
add
scas
add
iret
sub
add
cmc
scas
add
jns
and
sub
add
ss
cmpsl
push
cmp
add
lret
rcll
or
add
jnp
aam
add
int3
das
ret
addr16
iret
cmpsl
inc
fstp
mov
add
lret
pop
add
add
rorb
adc
adc
addr16
cmp
pop
push
add
int3
pop
and
add
inc
pop
leave
sbb
mov
dec
in
std
ret
sbb
cld
mov
mov
xor
jl
mov
add
js
push
adc
add
inc
or
hlt
stos
add
dec
cmp
push
imul
sbb
dec
pcmpgtb
xor
lcall
cmp
ja
jbe
mov
test
sbb
add
add
jbe
pushf
stos
stos
cmpsb
add
ss
add
mov
add
cmpsb
add
in
dec
adc
add
into
bnd
lock
add
cmp
add
sbb
dec
push
add
push
add
add
pushf
jecxz
mov
add
test
add
out
stc
sbb
les
xchg
sub
add
dec
sbb
pop
lret
xchg
pushf
inc
mov
add
leave
pop
sub
inc
pop
je
adc
sti
jle
or
add
mov
repnz
xchg
icebp
jecxz
inc
sbb
ret
int3
mov
add
aaa
dec
enter
pop
jno
add
ja
sbb
add
sbb
push
mov
lret
add
and
add
add
add
add
lods
add
stc
loope
inc
add
pop
cmp
add
cmp
sbb
push
jmp
jne
sub
add
into
bound
add
adc
lcall
in
mov
call
out
jecxz
sub
add
out
test
lock
push
outsb
insb
jg
cltd
mov
cli
cmc
jecxz
add
add
add
ja
xchg
add
pusha
divb
add
xlat
aas
js
fdivrp
and
add
adc
in
xor
ljmp
sbb
das
sar
pop
lods
jb
inc
ficoml
and
add
mov
and
add
sub
add
mov
add
push
cmpsl
xor
push
add
xchg
imul
aaa
push
push
into
xor
xchg
lcall
add
add
cmp
add
or
add
sti
dec
data16
add
jno
fnsave
jns
cltd
test
add
in
aam
add
js
adc
loope
or
aaa
cmp
xor
pop
adc
sbb
jbe
add
cmp
add
sbb
sar
mov
inc
adc
cltd
mov
add
dec
sbb
add
popf
jno
call
push
add
mov
test
add
jl
add
cli
das
aaa
mov
add
push
imul
xchg
ja
add
sbb
out
pop
js
add
stc
fistl
inc
adc
sub
lahf
jp
push
xchg
cmpsl
xchg
jmp
jle
and
add
add
sub
add
jb
fdivrl
add
test
aam
push
mov
add
aaa
pushf
sarl
sbb
adc
ret
fld
addr16
push
cmp
add
adc
sti
lea
or
add
addb
or
add
mov
add
mov
jnp
fistpll
add
sahf
insl
add
add
dec
push
aaa
add
add
adc
adc
fwait
mov
pop
cmpsb
add
push
mov
into
repnz
addl
mov
add
addl
sbb
jecxz
insl
adc
sbb
or
add
outsb
sarl
repnz
xchg
cmc
inc
pop
sub
add
ss
mov
mov
add
inc
inc
ljmp
das
xchg
xor
adcl
scas
cmp
stc
dec
ss
shll
ja
ret
js
popf
movsb
add
cmpsl
xchg
adc
push
mov
dec
aad
je
push
cmpsl
cmp
jmp
mov
mov
and
add
add
mov
add
push
lods
add
add
jbe
pop
xchg
add
or
add
add
outsb
add
add
inc
xchg
inc
mov
lret
cmp
xchg
lahf
or
add
aaa
sub
cmp
add
add
add
loopne
xchg
out
dec
addr16
mov
daa
dec
fisttps
pop
sahf
or
add
pop
shrl
sbb
daa
or
nop
dec
push
mov
add
call
add
mov
fidivrl
add
mov
clc
push
mov
mov
add
dec
fistps
imul
xor
sar
xchg
sbb
inc
jnp
jmp
popf
vmovaps
ret
pop
sub
mov
arpl
ds
addr16
add
jg
fsubrl
js
and
add
rclb
pusha
sub
add
add
mov
ret
fs
add
dec
pop
inc
testl
mov
add
jg
movsl
rorb
movsl
mov
add
cli
ljmp
cmp
jle
and
notb
sub
add
test
add
push
lea
dec
push
add
pop
les
add
repnz
je
cmp
push
add
inc
popf
push
add
or
add
mov
pop
cmp
imul
pop
pop
jo
loop
into
cmpsl
arpl
addb
xchg
mov
push
mov
add
jno
adc
pop
filds
push
sub
add
cli
aaa
mov
sbb
hlt
aad
ret
out
or
addr16
and
add
add
or
add
add
add
mov
add
icebp
xchg
mov
add
shlb
add
pop
or
add
bound
sahf
lret
test
add
push
add
xor
jb
lahf
push
add
loope
xchg
fisubl
in
cltd
clc
xchg
add
xchg
add
add
or
add
arpl
loopne
adc
das
mov
add
mov
lods
lods
add
add
sbb
fldcw
add
xchg
add
gs
movsl
in
pop
push
imul
out
pop
mov
clc
sub
add
mov
jge
add
data16
sbb
test
add
add
add
hlt
inc
inc
push
imul
jp
jno
xchg
mov
add
add
pop
adc
stc
inc
mov
int3
adc
lods
add
adc
jg
sbb
in
sarb
mov
add
loop
scas
add
mov
cmp
lea
push
or
add
stos
add
pushl
add
test
pusha
adc
adc
xchg
ss
ficomps
shrl
cmc
lahf
jg
mov
fstps
mov
xor
xchg
test
repnz
push
ss
not
loop
push
add
mov
add
test
test
pop
push
push
xchg
dec
icebp
lods
aad
mov
stos
add
add
add
add
sahf
loope
xchg
inc
rcrb
sarb
add
mov
add
mov
in
xchg
and
hlt
pop
clc
mov
cld
jecxz
popf
fisubs
add
addb
shrb
std
and
add
adc
ret
popa
mov
xor
pusha
das
mov
cmp
rol
pop
addb
pop
xlat
aam
push
add
xchg
add
sbbl
iret
je
mov
add
add
cmpsb
add
add
add
sbb
das
out
in
lea
test
add
cmp
inc
and
add
call
lods
add
fdivrl
mov
push
ljmp
add
in
out
bound
add
movsb
add
add
add
lcall
sub
add
loopne
sti
jns
mov
stc
mov
test
cwtl
xchg
push
cmpsb
add
out
ds
xchg
pop
fcompl
add
sbb
pop
addb
insb
cmp
jae
push
xlat
pushf
sbb
jp
in
jns
or
add
idivl
sti
imul
adc
mov
in
cmp
scas
add
or
mov
add
shl
add
arpl
add
push
aam
jmp
roll
cli
mov
jns
sub
mov
add
test
mov
add
in
lea
add
insl
dec
adc
add
mov
adc
add
fistpl
inc
push
push
rol
push
mov
add
loopne
pop
fnsave
repz
inc
xor
mov
dec
mov
push
push
add
xchg
mov
add
and
add
push
enter
lods
int3
pop
ret
pop
fwait
cmpsl
xchg
mov
mov
jns
mov
ds
lock
xor
and
add
in
xlat
aas
test
add
stc
shr
mov
inc
aaa
or
add
inc
push
loope
add
xchg
push
gs
add
aam
gs
into
or
adc
stc
xchg
int3
ja
nop
pop
fsubrs
arpl
jne
test
add
sub
add
notl
cld
jp
add
dec
daa
jmp
addl
scas
and
add
mov
fstl
pop
add
add
stos
cmp
add
add
imul
xlat
add
add
mov
cmp
mov
add
jecxz
add
cmpsl
mov
add
add
arpl
mov
cltd
pop
push
inc
rcll
add
mov
xchg
jl
inc
icebp
bound
xchg
add
nop
in
test
mov
add
mov
clc
and
add
add
arpl
in
sahf
ss
push
xchg
roll
add
or
stos
add
fldenv
add
sbb
or
add
push
add
jl
add
jp
pop
pop
js
add
add
ljmp
jnp
add
add
push
add
mov
popf
xchg
cmc
popa
push
sub
push
push
mov
add
add
loopne
pop
fsubrl
add
push
jl
enter
inc
sbb
push
aad
movsl
or
add
cmc
test
add
adc
cmpsb
add
ja
cmp
push
sbb
push
add
adc
lret
jg
jg
addr16
out
lea
gs
xor
addr16
fldenv
add
mov
add
jne
dec
push
aas
push
cwtl
or
add
loopne
in
in
repnz
fs
movl
outsb
sub
adc
add
popa
jns
pop
fmulp
dec
or
sub
add
lods
add
iret
jae
lods
add
cmpsl
sbb
adc
popa
les
inc
cmp
mov
add
push
xchg
ljmp
cld
aad
lods
add
lret
jo
out
inc
pop
xchg
jae
popf
test
add
push
jp
mov
push
fmulp
clc
jecxz
loop
ss
shlb
out
lods
add
mov
fistpll
mov
dec
fs
jl
add
cwtl
popa
daa
xchg
insl
inc
aaa
dec
pop
je
flds
add
sub
adc
push
lahf
pop
iret
lock
loopne
mov
xchg
mov
inc
add
push
dec
add
les
or
rclb
test
jne
add
loopne
push
outsl
or
add
jne
stos
ror
sub
fmuls
ret
xor
lcall
in
pop
orl
mov
fstps
aam
mov
jl
add
xchg
ret
lea
fsubl
add
fsubl
lret
in
repz
out
lret
fcmovu
imul
add
mov
mov
bound
iret
pop
lahf
loopne
repz
add
fadds
add
or
add
rcrb
leave
push
call
and
add
mov
add
push
das
add
add
pop
push
daa
sbb
add
add
pop
aaa
xchg
push
pop
icebp
test
repz
imul
rorl
out
xchg
gs
add
add
out
arpl
jl
dec
mov
fs
push
add
das
push
push
add
lds
hlt
xor
mov
add
inc
lret
in
js
and
leave
jp
lahf
sub
sub
add
mov
add
sub
add
and
loopne
add
push
mov
add
aad
ja
jmp
ret
into
dec
imul
add
out
into
popf
inc
addb
fwait
cmpsl
outsl
addr16
jge
dec
out
icebp
xor
add
dec
mov
ficoml
jl
dec
jg
cmp
add
call
out
daa
mov
push
xchg
dec
cmpsb
add
push
inc
repnz
jb
push
or
pop
push
xchg
mov
lds
pop
in
pusha
out
nop
inc
adc
inc
rcrb
jns
loop
flds
add
test
add
and
xchg
fnstsw
mov
fldl
popa
dec
fs
xor
xchg
je
mov
lods
add
jns
xchg
aad
ljmp
add
iret
sub
add
nop
lods
add
arpl
addr16
pop
test
add
add
pop
inc
lock
stc
fwait
mov
add
insl
and
add
xchg
push
js
jmp
movsl
bound
or
add
and
loope
fs
ds
inc
or
add
scas
push
pop
pop
jb
inc
dec
cmp
addl
add
mov
cmp
add
xor
jecxz
movlps
lahf
cltd
mov
add
xlat
push
adc
push
in
fisubrl
add
sub
add
ljmp
ss
sbb
cmp
stc
call
lcall
cmp
inc
add
add
pop
xchg
mov
rorb
add
jno
int3
addl
pop
lods
add
push
sbb
jmp
add
cmpsl
sub
add
jl
das
aad
add
ja
xlat
popa
and
add
add
add
add
mov
add
add
push
or
dec
mov
loopne
add
cmp
or
add
ljmp
jmp
cltd
xchg
adc
add
mov
stc
or
movsb
add
fildl
add
mov
cmp
shl
imul
add
sbb
out
hlt
repz
xchg
and
add
add
mov
nop
jae
lods
add
movsb
add
test
mov
add
stos
js
jbe
add
xchg
or
add
repz
add
pop
shlb
add
sbb
xchg
out
test
xor
push
sbb
sub
add
imul
aaa
outsb
cld
mov
mov
lret
or
add
cmp
add
mov
cmp
dec
or
add
dec
negl
mov
and
add
xor
in
out
into
mov
mov
add
jo
arpl
sub
sbbl
xchg
jae
push
push
sbb
add
test
movsl
clc
lock
sbb
jg
jg
add
push
push
fistl
addr16
sub
outsl
mov
xchg
cltd
ss
out
pusha
out
jp
or
jge
filds
adc
out
incl
nop
hlt
lea
mov
orl
and
add
add
rolb
add
mov
add
cmp
js
sbb
sbb
repnz
or
xor
inc
nop
jmp
add
inc
flds
scas
add
add
lret
sti
in
ljmp
jl
jno
add
cmp
out
inc
jae
cmp
dec
fildl
mov
add
sbb
fwait
jp
pop
jnp
fistpll
pop
mov
popf
imul
mov
adc
scas
adc
jl
addb
lock
sbb
addb
dec
mov
loop
add
sbb
pop
push
pop
fldt
dec
addb
test
push
loopne
leave
mov
add
add
mov
dec
mov
add
xchg
stos
inc
fwait
add
add
inc
mov
mov
add
das
lea
xchg
or
add
inc
mov
add
ljmp
adc
icebp
sti
daa
test
add
xor
add
sbb
add
ret
xchg
mov
je
pop
mov
add
inc
lods
add
sub
add
mov
add
add
mov
add
out
ds
sbb
push
push
ss
sahf
or
add
add
add
adc
xchg
loopne
call
jle
jno
gs
ds
aas
xor
sub
add
loop
mov
add
mov
ffree
jbe
push
xchg
ret
cmp
cmp
mov
add
and
add
and
add
jl
xor
cwtl
aas
mov
add
add
cmp
add
mov
cltd
pop
jno
addb
xchg
sbb
push
loop
out
ret
test
and
add
add
and
add
pop
mov
lcall
popf
pop
cmp
push
jne
outsb
lods
add
or
add
jecxz
aas
add
pop
imul
or
mov
jno
sbb
idivl
test
jp
mov
mov
jge
invd
add
sub
mov
stos
xlat
sahf
pop
and
push
dec
mov
add
add
jmp
add
push
mov
imul
add
out
cli
repnz
movsl
xor
and
add
add
push
in
repz
call
add
mov
xor
clc
xor
add
jns
or
add
and
add
cmp
add
pop
test
add
out
add
xchg
sub
add
add
add
ja
repz
add
pop
addb
dec
inc
das
stc
and
add
mov
add
shll
jns
lcall
inc
pop
movsb
add
inc
in
lea
das
daa
push
lds
add
add
and
xor
in
in
xlat
inc
push
mov
addr16
or
add
jb
into
pop
mov
add
add
sbb
fimull
xlat
inc
push
das
mov
nop
or
add
jne
lods
add
xor
mov
jne
jns
lahf
xor
add
in
sub
not
jge
add
ret
cmc
subl
sub
add
sbb
mov
test
add
outsb
pusha
jns
ret
mov
pusha
add
mov
add
pop
and
xchg
int
add
xor
add
mov
js
cmpsl
fwait
sbb
xchg
loop
lock
push
int3
sbb
add
addl
xchg
add
mov
add
mov
add
jmp
xchg
stos
loope
add
mov
add
add
add
movsb
add
popa
roll
add
xchg
push
fisttps
cmp
xchg
add
shll
add
movsl
push
dec
repnz
inc
dec
nop
lcall
add
ficomps
dec
add
add
sbb
ret
jae
dec
xor
pop
pushf
cmp
aas
in
bnd
bnd
add
jbe
fcoml
cmp
xchg
mov
aam
in
add
btr
add
ds
add
pop
mov
add
lds
jnp
dec
xor
sub
in
fisttps
sub
add
in
add
pop
int
cld
roll
adc
xor
das
shlb
mov
xchg
xor
addb
inc
dec
in
repnz
mov
mov
add
cwtl
add
subl
aad
lcall
fisttpll
add
mov
add
adc
pop
jle
sub
add
out
sarl
out
mov
add
mov
sub
add
jge
sub
and
add
xchg
add
sub
add
xor
ret
repnz
movsb
add
jg
sub
and
les
mov
ret
mov
push
enter
mov
add
cmc
pop
cltd
push
mov
jno
add
jle
insl
add
xor
scas
pop
add
jbe
xor
pop
stc
dec
add
push
lahf
testl
pushf
and
push
cltd
or
jo
jns
lock
push
clc
inc
cmp
xchg
sub
add
sub
add
add
mov
push
std
jno
add
push
jno
ss
bound
or
add
inc
and
add
movsb
add
push
xor
xor
lds
outsl
sub
add
xchg
sbb
jb
add
cmp
scas
add
jns
xchg
mov
pop
cmpl
add
pop
imul
add
add
add
loop
mov
add
cmp
mov
pop
out
call
add
add
negb
pop
jl
push
xchg
mov
add
add
add
add
cmp
push
les
add
insb
jp
lods
mov
mov
add
scas
cld
xlat
pop
int3
sti
mov
add
mov
push
and
add
fcoms
add
shl
push
jmp
imull
add
mov
add
xor
shrb
add
cmc
cli
sub
inc
mov
add
add
pop
in
cmpsl
fadd
cltd
jo
add
dec
insl
dec
or
out
insb
xor
cltd
ss
stos
push
xchg
in
inc
xchg
scas
xor
movntq
pop
test
cmpsb
add
iret
xchg
outsb
mov
addb
xor
in
test
add
leave
cmp
push
mov
xchg
mov
addb
sub
add
add
dec
mov
add
add
mov
pop
add
add
fwait
sbb
nop
lcall
mov
push
addb
xchg
jle
cmp
rorb
rcrl
add
loopne
jns
jb
rol
sub
add
pop
fs
andl
movsb
add
jns
and
add
add
add
int
push
sbb
add
outsl
addb
mov
add
cmp
mov
std
mov
int3
loop
movsl
xchg
add
out
add
movsl
test
loopne
push
add
leave
add
push
add
dec
lea
xchg
add
push
add
decl
repnz
xor
out
mov
add
inc
or
add
int3
and
add
shll
sub
outsb
into
psrld
add
pop
push
mov
lret
and
add
mov
popf
nop
xor
insl
add
addb
add
add
mov
shlb
add
push
add
mov
inc
push
add
jno
add
or
add
push
add
out
in
add
add
jns
dec
stos
add
dec
sub
add
add
add
add
add
stos
add
hlt
push
push
add
pop
dec
mov
add
outsb
jae
sbb
add
cli
jp
rorb
xor
arpl
sbb
and
add
in
mov
sub
mov
int
call
cli
jnp,pt
xchg
jp
add
sub
add
fs
add
mov
mov
sub
add
call
adc
mov
add
in
cmp
out
add
mov
xchg
add
adc
out
leave
jecxz
test
add
pop
jl
add
out
mov
add
and
ss
add
add
mov
adc
xor
adc
mov
push
add
addb
mov
lock
add
test
add
add
cwtl
out
inc
xor
push
test
xchg
mov
add
or
add
pop
stc
divl
lahf
sahf
dec
and
dec
addb
inc
and
add
add
push
dec
dec
mov
add
movsl
sbb
or
add
jp
mov
fstpl
mov
fwait
pop
mov
add
add
add
shlb
fs
jecxz
add
jo
cmp
add
daa
mov
inc
test
test
add
add
cmc
addb
mov
dec
sbb
mov
sbb
add
stc
sbb
cmp
cld
jno
add
xor
mov
add
sub
add
push
inc
bnd
push
mov
add
xchg
dec
ss
jl
lcall
cli
push
and
add
arpl
xor
add
add
mov
mov
add
add
push
jecxz
push
stos
enter
add
mov
push
shrl
fsubrs
add
lretw
xor
fcomi
decl
add
add
rorb
ss
hlt
repnz
in
mov
push
insb
aas
adc
add
xlat
aad
mov
sub
add
xchg
add
in
add
xor
in
jbe
sbb
mov
test
add
scas
add
add
sbb
add
inc
add
daa
sub
sub
add
jge
sbbl
xchg
shlb
add
jo
mov
ret
jo
jg
or
add
fsub
aas
insb
cmc
pop
iret
pushf
pop
and
movsb
add
gs
std
xor
push
add
push
ljmp
movsb
add
sub
fisttpll
mov
in
aad
pop
mov
push
mov
cmp
ss
sub
add
pshufw
test
sahf
push
pop
add
add
cmpsb
add
mov
pop
adc
add
rclb
call
gs
push
fs
add
fcomip
push
test
sub
ljmp
mov
add
sbb
das
cmp
cmp
or
add
jns
add
and
dec
and
add
popf
movsl
dec
mov
ret
add
adc
ds
jl
sbb
jnp
fmuls
aam
add
jnp
adc
add
push
mov
add
inc
or
add
iret
scas
add
movsl
repz
ss
sti
fcmovu
fisttpl
pop
iret
sbb
inc
xchg
mov
add
xlat
negl
cmp
add
add
xchg
adc
add
jne
clc
pop
jbe
inc
lret
jp
add
xchg
add
mov
sbb
loopne
pop
add
xchg
aad
or
jle
add
pusha
xlat
mov
add
scas
add
pop
addb
movsl
dec
fnstcw
clc
sub
add
shl
loopne
cmp
pop
pop
out
clc
sbb
dec
les
cmp
shrb
aaa
dec
loope
stc
xor
push
push
add
jle
add
test
add
jo
mov
push
add
fdivr
push
add
sbb
mov
inc
jecxz
fldcw
int3
mov
into
add
xor
in
mov
subl
sar
int3
adc
lods
fstpl
add
iret
add
and
add
lods
add
xchg
push
xchg
in
lret
lret
bound
lcall
jne
xor
add
or
push
dec
xor
out
addb
lcall
dec
lds
mov
push
ficoms
xlat
repz
addb
sub
cmp
popf
into
add
add
fidivl
fldt
add
add
and
add
push
aas
stos
add
mov
bound
lret
add
jg
mov
mov
add
test
dec
jnp
jno
jp
inc
stc
xchg
mov
add
outsb
sub
mov
add
jecxz
mov
adc
inc
push
cltd
ljmp
add
push
add
or
add
mov
add
aaa
insl
mov
add
add
mov
push
xchg
mov
mov
add
in
sahf
xor
mov
sbb
push
fsubs
dec
mov
stos
add
xor
cmpsl
int
inc
add
int
pop
mov
add
push
or
std
mov
out
cmp
add
gs
jge
sbb
or
add
iret
dec
and
add
das
push
mov
clc
sbb
testb
fstl
aaa
cmp
pop
mull
lods
pop
inc
cmpxchg
dec
sub
add
lock
mov
clc
push
lret
addb
xchg
dec
pop
cmpsl
leave
lcall
add
xor
arpl
rol
xchg
stos
add
mov
enter
fistpll
inc
ret
or
add
dec
fs
mov
xchg
push
sarb
cld
or
add
mov
add
cwtl
or
stos
or
sub
add
add
sti
inc
out
add
push
add
pop
idiv
sbb
add
lret
xchg
add
inc
mov
lock
pusha
inc
mov
add
jecxz
add
xor
in
xor
sti
adc
imul
and
add
scas
jno
mov
add
lea
arpl
leave
pop
push
add
and
add
mov
add
sbb
adc
add
lds
add
rcrl
sub
and
add
fcmovne
jae
fstl
add
mov
add
or
add
add
cwtl
outsb
popa
jg
rcll
stc
popa
adc
xchg
mov
add
adc
or
add
dec
dec
leave
pop
out
add
xchg
cmpsb
add
addb
clc
jae
inc
sbb
add
add
out
insb
dec
mov
lods
add
lock
pop
add
daa
fcompl
mov
mov
and
add
xchg
jl
add
dec
inc
sti
test
add
pushf
sub
fprem
lret
iret
push
sbb
pop
fsubrl
cmpsl
into
arpl
daa
sti
xchg
mov
add
add
js
jnp
inc
sub
add
dec
adc
push
or
out
cmp
cltd
adc
dec
adc
add
insl
push
xor
imul
push
jp
call
orl
xchg
stc
les
xor
add
loop
dec
jecxz
xor
test
add
xlat
mov
icebp
mov
jge
movsb
add
inc
mov
cld
imul
mov
fstl
sbb
mov
add
cmp
lds
add
mov
and
push
adc
mov
pop
cmp
push
add
add
add
add
add
ror
ret
xchg
addr16
add
xchg
and
add
fadds
push
add
lcall
pop
inc
mov
add
sub
lret
enter
xor
xor
in
xlat
mov
repz
dec
lock
into
inc
test
orl
insb
xchg
add
add
push
stc
push
scas
add
mov
aad
xchg
xchg
ficomps
dec
jl
lcall
cltd
idivb
inc
addr16
sbb
add
xor
add
aas
cmp
jnp
xchg
in
stc
pushf
leave
ss
mov
test
addb
gs
add
mov
add
add
push
add
ss
sahf
in
test
or
std
mov
add
outsl
dec
xchg
jge
mulb
cmp
push
mov
jns
incb
pushf
adc
scas
and
sbb
test
add
sub
popf
int
sbb
add
popf
mov
add
out
add
fldl
cmp
aad
scas
add
xor
add
add
xor
jp
fidivrs
add
mov
add
push
scas
add
mov
std
jge
add
mov
inc
lcall
pop
mov
add
or
add
test
cmc
maskmovq
mull
popf
xchg
out
sahf
jo
cmp
call
lret
cltd
push
cmpsl
popa
popf
pop
mov
add
add
xor
or
xor
int
add
add
add
add
jp
add
mov
andl
cmp
pusha
pop
out
imul
add
or
add
sbb
test
add
and
or
add
jnp
cmp
lods
add
scas
ds
std
enter
add
or
add
xchg
ds
xchg
cld
cmp
add
adc
and
in
adc
xor
nop
pusha
out
dec
jl
jb
pushf
sbb
add
in
daa
pop
mov
pop
mov
jne
mov
in
push
add
xchg
inc
inc
popa
pop
mov
xchg
adc
lahf
leave
mov
js
pop
repnz
add
roll
outsb
mov
inc
jecxz
xor
sub
ds
add
les
add
lods
add
xchg
cmc
std
mov
add
add
repz
add
add
and
dec
lds
or
add
and
test
add
cmpsl
dec
fs
cwtl
mov
stos
add
in
and
and
add
aam
jle
jb
inc
test
jl
inc
cmpsb
add
testb
jmp
arpl
add
add
sbb
xchg
and
add
and
inc
push
repz
pop
and
add
xchg
btr
scas
and
repz
arpl
sahf
addr16
pop
imulb
mov
inc
xor
out
push
mov
sbb
cmpsl
in
std
imulb
lods
scas
push
push
mov
add
pop
roll
lock
xchg
pushf
cmp
rcr
or
add
push
mov
stos
add
push
testl
jmp
sub
add
add
adc
adcl
mov
add
adc
add
ljmp
cmp
js
cmp
in
add
cmp
ret
xchg
xchg
inc
add
add
lret
jp
pushf
lea
movsl
sbb
add
sbb
loop
enter
add
lret
jge
add
add
mov
add
stc
idiv
les
and
add
add
std
add
enter
xchg
push
jg
outsl
je
pop
addb
je
jge
add
dec
mov
xchg
push
lods
and
dec
jae
or
add
fwait
dec
loope
pushf
aaa
cmp
add
jb
add
jg
out
int
pop
stc
out
push
shrb
xchg
add
push
loopne
push
xchg
xor
pop
and
add
inc
sub
add
push
mov
jl
test
add
add
addr16
addb
xor
add
and
add
cmp
add
shrb
sub
add
dec
cmp
xchg
test
inc
outsb
push
fs
scas
mov
xor
rep
add
add
mov
add
pop
xchg
sub
add
add
inc
mov
jge
mov
xor
cmp
fisttpl
dec
stc
into
mov
mov
movsl
jae
mov
add
ja
insl
xchg
inc
cmp
jbe
add
mov
add
add
add
and
add
push
mov
xor
push
xchg
jg
sti
jae
add
mov
add
call
add
pop
test
add
add
add
add
and
add
add
lahf
cmp
add
adc
mov
cli
pop
jns
dec
rcr
addb
add
add
xorl
std
add
add
dec
pop
dec
dec
mov
outsl
gs
pop
mov
sub
mov
cmpsl
ret
add
or
add
aas
jle
sbb
jle
add
mov
pop
ds
add
add
lds
pop
ljmp
mov
cwtl
icebp
fsubrp
ljmp
ljmp
add
fiaddl
add
enter
add
out
add
mov
scas
add
imul
adc
add
popa
fisubl
push
push
js
mov
add
cmp
sbb
cmp
inc
sbb
test
dec
add
scas
add
pop
insl
pop
les
inc
lods
add
cmp
add
lods
fstl
add
jns
iret
and
push
sbb
pusha
cmp
dec
mov
fdivrl
testb
ss
in
xor
dec
mov
sbb
pop
sub
add
adc
add
mov
or
add
add
jae
addb
imulb
add
add
add
sbbl
mov
ficoms
test
addb
xchg
push
mov
std
mov
xor
dec
jecxz
adc
sub
add
int3
mov
add
pop
call
jp
push
sub
add
pop
das
mov
shll
add
dec
test
add
add
xchg
sub
clc
or
add
mov
filds
dec
ja
mov
ret
add
shll
cmc
and
add
add
fldcw
xchg
adc
add
shlb
xchg
inc
popa
out
sub
add
idiv
or
add
add
jmp
push
ds
mov
add
xor
adc
mov
aas
or
add
jl
add
mov
cli
jle
into
dec
or
iret
xchg
stc
and
add
sbb
cmpsl
shl
mov
push
mov
shll
add
clc
push
imul
add
add
jo
sarb
aaa
xor
mov
lds
jb
rclb
add
out
mov
cli
fildl
add
sub
push
imul
add
push
pop
aaa
add
addl
out
cli
xchg
push
add
jnp
add
xchg
lret
mov
cwtl
jle
fs
inc
enter
fdiv
js
pop
mov
jbe
add
jne
int3
sub
add
jg
xor
xor
xchg
enter
lret
mov
dec
add
shl
dec
rcrl
add
add
repz
dec
jecxz
xchg
aaa
bound
mov
add
insb
sbb
add
sub
add
jnp
mov
out
sbb
xchg
shll
adc
jp
mulb
roll
add
cltd
jnp
add
add
adc
xacquire
add
mov
cmpsb
add
cmp
sar
add
push
add
adc
into
insl
cmc
pop
in
jbe
add
in
dec
xor
or
int3
rcl
daa
addr16
add
flds
add
ret
cmp
addb
sub
add
add
xlat
aam
lock
dec
jb
cmp
add
jns
repz
mov
add
dec
bound
movsl
mov
add
add
push
add
int3
les
jecxz
into
mov
add
mov
ficoml
add
mov
fmulp
flds
xchg
fucompp
outsl
rolb
add
sbb
in
pop
das
stos
add
add
inc
sub
add
addr16
pop
daa
sahf
std
push
jbe
jecxz
add
ja
addl
pop
inc
adc
movsb
add
outsb
cmc
mov
call
paddb
push
jmp
loopne
aaa
lret
jl
push
cmp
inc
adc
adc
add
cwtl
outsl
stos
add
inc
gs
inc
gs
and
add
shrb
add
out
jl
rep
mov
add
lods
add
push
push
out
rcll
je
jae
pop
daa
rcrb
in
notb
dec
mov
add
add
je
mov
in
jne
xchg
or
pop
xor
jge
outsl
test
add
mov
add
pop
int3
mov
xchg
das
lret
sbb
mov
add
scas
add
leave
mov
add
add
xchg
adc
mov
xor
je
or
adc
add
inc
jg
jne
int
data16
dec
cmp
in
xchg
lahf
aam
inc
pop
cmc
lahf
sahf
cltd
cmp
push
add
pop
add
inc
gs
add
add
push
ret
or
mov
add
mov
stc
ss
mov
or
add
inc
daa
hlt
mov
add
pop
push
add
dec
push
nop
cli
test
lds
mov
daa
or
lods
mov
test
add
int
mov
imul
popa
pop
adc
mov
add
xchg
sub
fildl
add
add
cmp
xchg
cmp
inc
dec
mov
add
push
loop
outsl
mov
add
pop
inc
lcall
add
sar
add
add
pop
mov
xchg
push
add
hlt
mov
jns
lods
add
enter
mov
icebp
loopne
iret
roll
ja
push
out
adc
or
xchg
les
rcr
into
iret
sub
sub
ja
pop
and
add
sub
pop
aas
lret
fstp
aam
add
movsl
les
add
cwtl
jmp
jae
addr16
mov
push
xchg
add
xlat
ss
and
mov
negl
dec
rorl
pop
jmp
add
add
ljmp
mov
add
add
out
inc
cmp
add
dec
inc
cmp
cli
xchg
fs
jmp
outsl
pop
stos
inc
or
or
add
in
add
mov
into
xchg
add
or
lahf
pop
hlt
loopne
fdivr
call
arpl
jmp
jle
mov
ret
dec
icebp
sbb
add
ljmp
lret
rcl
cld
mov
hlt
fwait
popa
push
std
int3
mov
xor
inc
js
sub
add
and
add
outsl
lea
mov
mov
aas
cmp
add
add
repz
icebp
out
push
orl
push
push
add
out
rol
ds
and
insb
hlt
popf
xchg
adc
adc
push
add
mov
lcall
add
xchg
popa
cmpsb
add
xchg
call
sub
add
xchg
adc
add
or
add
and
loop
imul
add
outsl
lret
cmp
mov
and
mov
in
pop
outsb
mov
sub
stc
popf
and
add
stc
jecxz
mov
add
cmp
add
mov
add
sub
add
lods
and
add
or
add
int
add
xchg
jo
dec
cli
cmp
pop
lret
inc
dec
stos
add
rol
xchg
add
pushf
pop
addb
addr16
ja
lea
repz
pop
dec
je
mov
add
cwtl
inc
out
insl
cmpsb
add
or
mov
add
lds
fstpl
scas
add
and
fdivrl
out
dec
or
push
cmc
jmp
and
add
add
add
test
inc
and
idiv
jnp
icebp
call
lret
dec
adc
xlat
cmp
add
push
jbe
dec
mov
xchg
mov
pop
or
add
push
pop
jns
decl
ds
add
add
stos
leave
test
add
sub
stos
add
cmp
cwtl
cmpl
xor
iret
out
test
pop
cmp
enter
pop
push
add
test
add
mov
add
add
enter
add
inc
movsb
add
in
add
xlat
push
iret
pop
pop
fsubr
mov
inc
addb
pop
aas
cli
xor
add
dec
pop
mov
add
add
xchg
fdiv
cltd
push
mull
lcall
add
xchg
add
add
sub
add
pop
sti
in
adc
add
mov
dec
mov
add
push
xor
cmovb
inc
add
add
push
add
pushf
test
add
lcall
mov
add
test
add
shl
adc
sub
add
sti
inc
push
mov
sbb
add
in
fcmovnbe
mov
push
mov
cmp
imul
out
pop
adc
loop
aaa
test
iret
and
add
cld
sbb
xor
push
ficoml
jl
mov
cli
andl
cmpsl
xorps
stos
and
add
add
addb
push
push
int
pop
hlt
in
loope
or
add
jge
add
mov
sbb
testb
push
adc
xor
add
arpl
add
les
test
add
fists
ds
repnz
xlat
push
mov
add
xor
xchg
test
in
inc
or
add
inc
imul
mov
clc
add
jecxz
js
push
insl
lock
add
in
repnz
mov
add
les
and
add
in
sub
add
add
mov
cltd
pop
imulb
shll
add
jne
mov
add
mov
add
adc
xor
sarb
test
add
mov
add
aad
cmp
bound
add
leave
subl
out
adc
jnp
fs
inc
scas
add
roll
mov
add
mov
sub
add
iret
test
repnz
mov
lock
jl
shlb
pop
mov
add
shrb
pop
dec
loopne
add
adc
inc
out
ret
cmp
ret
ljmp
bound
aam
push
xor
add
in
rcrl
mov
rcr
packsswb
add
dec
movsl
xchg
mov
sub
add
and
add
push
hlt
sub
add
fs
add
add
int3
test
add
dec
icebp
adc
add
mov
mov
add
fldenv
outsb
jnp
test
adc
lods
mull
pop
cmpsl
fwait
pop
pop
pusha
outsb
or
add
iret
push
mov
add
test
add
rcrl
lret
ret
mov
add
in
push
adc
xchg
jnp
movsl
leave
xchg
les
xor
testb
and
add
add
adc
fidivrs
cwtl
push
loope
add
fists
sbb
lea
xchg
stos
outsl
pop
jnp
inc
xor
adc
xor
pop
pop
push
iret
lock
mov
xlat
xchg
test
add
mov
pop
mov
loopne
mov
jge
inc
cmp
adc
inc
push
pop
adc
add
add
inc
mov
aas
cmp
mov
dec
pop
xor
or
add
add
in
xchg
out
aad
lret
sbb
out
xorl
mov
js
or
add
xchg
push
add
jmp
mov
iret
pop
ja
mov
out
popf
data16
mov
test
or
add
in
cmp
xchg
data16
add
xchg
ljmp
add
loop
in
add
ror
or
add
add
inc
dec
ficomps
and
add
push
outsl
xchg
jnp
mov
add
xor
popf
out
fs
add
add
out
lcall
rclb
rcr
out
dec
sbb
add
pop
jnp
adc
add
inc
lods
inc
jmp
push
in
fs
leave
addr16
add
cmp
lcall
popa
lods
or
mov
pushf
and
add
stos
ret
in
mov
add
or
add
sub
icebp
loope
add
sbb
mov
add
outsb
dec
in
movl
add
xchg
fcomps
outsb
inc
add
add
ret
incl
add
loopne
add
loopne
add
mov
cmp
mov
movsb
add
mov
add
cmp
add
leave
xorl
add
test
pusha
xchg
in
rcll
mov
mov
divl
push
ret
lahf
adc
xor
mov
arpl
pop
dec
cmp
or
inc
mov
std
pop
idivl
or
cld
sti
insb
stos
sti
addb
xlat
jp
cmp
adc
enter
cmp
shrb
sbb
or
add
sar
mov
push
adc
and
add
negl
add
inc
or
call
imul
loop
sub
add
cmp
pop
or
cmp
xor
in
mov
push
add
add
mov
arpl
insl
imull
xor
test
add
dec
sub
add
outsl
pop
cmp
jl
mov
ret
push
dec
sub
jno
add
pop
aam
jns
fistpl
push
sarb
add
add
cld
shll
xor
out
jae
repnz
fwait
ror
push
cli
adc
xchg
mov
or
add
out
mov
mov
cmpsb
add
and
out
add
mov
sbb
xor
cmp
push
dec
test
lcall
push
add
je
fldenv
popa
aas
addb
out
mov
in
dec
out
js
mov
je
lcall
cmpsb
add
adc
cltd
cmpsl
add
and
add
ds
jle
test
insb
xchg
mov
jo
inc
in
mov
add
cmp
rorb
add
aas
das
jmp
rolb
mov
or
add
add
fwait
dec
loop
adc
stc
inc
out
sub
add
mov
lock
add
mov
add
fs
repz
lahf
movsl
test
ljmp
xor
add
nop
or
and
add
jg
add
mov
pushf
mov
add
xorl
add
mov
test
add
pop
add
add
mov
or
add
dec
imul
add
leave
in
pushf
iret
mov
add
jge
sbb
ret
or
mov
add
jbe
fldcw
insb
insb
arpl
mov
inc
pop
lea
jno
jmp
cld
int3
push
sbb
sub
add
inc
jle
sbbl
push
jne
icebp
insl
push
push
repz
fcomip
stos
add
add
mov
add
cld
mov
add
sub
out
mov
outsb
nop
jge
add
and
addb
movsb
add
fstpl
loope
dec
int3
dec
gs
pop
daa
jge
sub
xchg
add
sub
add
add
test
add
add
add
outsl
sbb
mov
push
add
mov
dec
adc
imul
jle
and
xchg
dec
or
pop
inc
add
lret
into
pop
pop
lcall
sbb
aaa
jns
xchg
pop
cmp
mov
sub
add
add
xchg
sub
loope
push
cmpsb
add
in
lods
out
ja
xchg
add
add
mul
fwait
push
in
arpl
decl
add
add
and
xchg
sub
repz
jnp
jecxz
sarb
arpl
in
pop
leave
pop
int
or
add
cli
pop
mov
jns
sbb
dec
add
push
jp
pop
mov
xchg
mov
add
inc
dec
popa
insl
outsb
loope
cwtl
fcmovnu
jae
and
xor
or
sbb
push
ja
aad
cmpsb
add
xor
adc
add
push
add
and
add
aam
fstpl
movsl
shr
stos
add
push
add
xchg
jmp
add
sbb
add
and
sub
add
mov
add
cmp
and
add
mov
add
push
and
mov
add
ds
add
add
push
push
out
fsubrp
enter
add
cltd
test
add
sbb
inc
loope
add
dec
fists
cld
out
xchg
mov
mov
xor
add
xchg
cltd
sbb
xchg
test
add
add
dec
jb
ret
ret
mov
cmp
jecxz
fstpl
out
add
test
add
popf
push
pop
jo
and
add
mov
imul
xor
jbe
adc
dec
addb
add
enter
shrl
arpl
loopw
lcall
mov
mov
add
cwtl
pop
jl
mov
add
nop
inc
mov
add
lret
adc
jns
imul
sti
add
jno
test
cld
adc
inc
add
add
popf
sbb
xchg
cmpsb
add
push
adc
clc
std
push
or
add
xchg
add
adc
loop
ds
repz
and
rcrb
test
add
pop
in
mov
mov
push
sub
add
mov
add
adc
push
test
add
add
add
popf
out
xchg
add
js
mov
add
cmp
add
lds
test
add
mov
aaa
xor
push
lods
fucomp
mov
jmp
add
mov
add
inc
push
fistps
add
jecxz
enter
add
int3
test
add
add
add
add
or
js
je
inc
cmp
push
loopne
sub
add
or
add
iret
inc
ss
test
jno
add
add
scas
add
loope
idivl
jbe
test
add
mov
pushf
repnz
out
mov
sub
add
add
inc
xor
in
addr16
dec
stos
sub
add
lahf
or
add
loopne
jb
insb
test
push
daa
cmp
add
xchg
sub
add
and
xor
mov
jae
dec
out
lods
add
dec
push
cmp
cmp
sub
add
add
ss
imul
add
mov
push
mov
add
pop
out
popf
repz
sub
jns
ja
mov
and
add
dec
mov
add
add
ss
aas
aad
sbb
nop
jge
mov
pusha
cmp
imul
add
or
leave
add
add
push
sub
xor
inc
cli
mov
cwtl
bound
repz
and
aad
mov
insl
mov
ret
mov
aaa
mov
popa
test
push
inc
pop
je
xchg
lcall
xchg
leave
popf
js
xchg
aam
psrad
cmp
add
jle
std
mov
jp
mov
stc
sbb
dec
movsb
add
inc
jp
jnp
mov
cmp
cmp
add
lds
jmp
xchg
and
add
mov
repz
insb
mov
sar
iret
push
mov
push
or
sbb
stos
add
mov
xor
imul
repnz
int3
mov
popf
jl
mov
cli
sub
add
or
mov
add
add
add
jl
fsts
jp
movsb
add
fisubrl
add
and
loope
cmpsl
inc
jmp
add
stos
or
push
inc
push
inc
xchg
mov
mov
ljmp
daa
push
add
adc
scas
add
dec
stos
add
fsts
scas
dec
lahf
fwait
xor
pusha
add
add
push
cmp
pop
inc
inc
pop
xor
add
mov
add
mov
jecxz
scas
add
iret
shrl
lret
std
pop
ret
cmp
add
jmp
push
push
movsl
xor
dec
rorb
add
hlt
jnp
add
ret
add
add
bound
push
or
cmp
fnsave
or
add
mov
cmp
loop
fsubl
int
dec
push
inc
pusha
or
pop
int3
stos
mov
mov
inc
in
test
sarb
in
add
jo
cmpsl
and
push
les
jmp
pusha
mov
repnz
mov
das
push
divb
mov
add
cmp
jle
add
inc
pusha
dec
cmp
add
adc
sbb
and
movsb
add
or
add
add
sti
mov
add
loopne
add
aas
push
jmp
arpl
add
sbb
scas
in
outsb
mulb
into
in
in
mov
or
js
pmuludq
loop
in
sbb
or
add
imul
add
call
aad
fisttpl
shrl
sahf
jbe
divl
adc
add
xchg
std
dec
ret
push
imul
add
add
xor
add
loopne
jp
shl
fmull
jecxz
pop
dec
cli
xor
repnz
scas
add
rcrb
cmp
hlt
pop
cwtl
loope
add
out
lods
shll
add
in
add
aad
mov
add
call
dec
mov
in
ret
mov
add
fs
ret
rorl
adc
nop
addb
xlat
sarb
dec
shrl
sbb
add
cmp
fsubl
add
enter
mov
iret
push
sub
ror
mov
out
outsb
mov
mov
test
add
ss
std
xchg
addb
mov
add
mov
add
insl
faddl
add
adc
cwtl
fbstp
pop
popf
aam
push
xor
pusha
cmpsb
add
and
push
gs
test
add
loopne
add
xor
add
cwtl
pop
dec
imul
mov
add
jo
sub
add
in
pop
iret
mov
jecxz
sub
adc
cwtl
cmp
sub
add
sub
add
add
imul
arpl
add
shll
addb
fucom
lds
jecxz
addb
jbe
clc
ljmp
add
add
lock
push
mov
add
add
imul
adc
inc
jb
mov
bound
add
lcall
je
mov
add
mov
dec
lock
shrb
test
add
pushf
cmpsl
int3
js
sbb
pop
rcr
pop
pop
mov
add
inc
or
add
ss
mov
nop
inc
jecxz
xchg
aaa
and
add
sub
add
add
add
mov
enter
add
fldcw
jno
add
ja
cmp
repz
scas
add
loope
cmp
inc
add
pushf
fisubrl
add
pop
loop
add
mov
das
push
push
cli
push
pusha
shrb
arpl
dec
lds
lock
push
push
pop
or
add
add
push
pop
aam
std
inc
scas
insb
stos
and
adc
nop
aaa
mov
add
mov
lods
mov
repz
inc
lods
add
xchg
add
mov
data16
