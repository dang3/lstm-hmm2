add
ja
mov
xchg
out
out
add
div
divl
fdivrl
dec
dec
stos
stos
xlat
xlat
xlat
jb
jb
jb
jb
jb
addb
push
push
fcomp
fcomp
fcomp
fcomp
aaa
aaa
aaa
aaa
aaa
addl
addl
mov
cwtl
jge
cmp
cmp
cmp
cmp
cmp
in
add
add
add
mov
mov
or
or
or
or
cs
add
ljmp
xor
xor
xor
xor
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
sub
sub
sub
jne
jne
jne
dec
mov
xor
cli
push
push
mov
leave
mov
mov
mov
mov
xor
mov
fs
mov
mov
mov
mov
mov
jecxz
jecxz
jecxz
lods
lods
ljmp
mov
mov
mov
fcomp
fcomp
fcomp
fcomp
fcomp
add
sub
sub
sub
sub
xchg
xchg
ret
cmp
cmp
dec
add
add
add
adc
adc
or
mov
mov
in
in
test
adc
adc
mov
imul
imul
add
add
add
add
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
aaa
aaa
aaa
aaa
aaa
dec
dec
dec
dec
inc
inc
data16
lret
and
and
and
push
addl
push
push
push
push
push
add
cmpsb
fs
into
bound
div
div
div
div
div
div
div
negl
sbb
sbb
sbb
sbb
bound
in
stc
stc
stc
stc
stc
stc
stc
stc
stc
sub
sub
sub
sub
sub
sub
sub
sub
out
lock
mov
mov
stos
stos
stos
or
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
jmp
jmp
jmp
jmp
jmp
pop
mov
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
or
or
or
or
or
or
scas
scas
scas
scas
scas
jns
push
push
push
push
push
push
push
push
sbb
int
in
in
in
mov
push
in
inc
add
push
mov
mov
ret
ret
ret
ret
ret
sub
sub
and
and
or
or
or
or
mov
mov
push
push
push
push
push
push
push
push
push
push
push
push
mov
inc
inc
inc
inc
inc
inc
pop
pop
pop
pop
pop
pop
add
push
pop
pop
pop
pop
pop
pop
in
in
in
out
out
out
out
add
add
add
je
je
je
int
int
int
int
int
int
in
in
in
in
in
in
add
add
push
push
push
push
push
push
push
push
push
push
fs
pop
pop
pop
pop
pop
adc
aad
cltd
mov
mov
mov
add
xchg
xchg
mov
mov
add
add
add
add
rcl
rcl
rcl
add
or
or
or
xchg
xchg
xchg
adc
adc
push
jmp
aaa
aaa
aaa
aaa
aaa
arpl
and
cmp
pop
pop
pop
pop
jl
jl
sbb
sbb
sbb
pop
pop
pop
sbb
ljmp
add
add
add
add
add
add
add
add
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
and
cs
add
enter
std
std
std
std
std
inc
add
mov
test
xchg
xchg
xchg
xchg
xchg
xchg
xchg
and
and
push
push
push
push
push
push
push
push
push
inc
inc
bound
bound
dec
mov
jnp
jnp
sbb
sbb
sbb
sbb
sbb
sbb
sbb
inc
inc
lock
push
push
push
push
push
push
push
push
push
push
add
add
add
add
add
add
pop
pop
mov
insl
insl
insl
insl
popa
popa
popa
popa
popa
popa
popa
popa
add
aam
cltd
cltd
cltd
cltd
cltd
cltd
cltd
div
div
div
div
div
div
xchg
add
add
add
add
dec
add
add
sub
push
push
push
push
mov
mov
bound
bound
bound
bound
fidivl
sbb
sbb
add
add
movsb
movsb
movsb
movsb
movsb
mov
mov
mov
mov
mov
mov
mov
test
test
hlt
das
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
jne
mov
mov
mov
mov
mov
mov
mov
ss
ret
ret
add
add
pop
call
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
add
repz
add
add
sahf
xchg
xchg
xchg
stc
stc
adc
aaa
pop
pop
pop
pop
add
jle
out
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
mov
mov
mov
inc
loopne
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
jl
jl
jl
jl
jl
jl
jl
jl
jo
jo
jo
jo
mov
mov
jle
add
into
into
into
into
into
into
into
into
pop
pop
mov
mov
outsl
outsl
outsl
outsl
rol
rol
rol
rol
rol
rol
rol
rol
rol
gs
xchg
xchg
xchg
xchg
xchg
xchg
xchg
rcl
rcl
rcr
fcoml
push
div
div
testb
xchg
and
and
and
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
add
add
repnz
ljmp
add
add
add
add
in
in
in
fwait
fwait
sti
sti
sti
sti
xor
xor
xor
xor
xor
icebp
icebp
icebp
repnz
sbb
sbb
push
push
rcl
insl
insl
insl
insl
insl
insl
insl
add
out
imul
inc
inc
inc
inc
sub
sub
sub
sub
sub
sub
add
xor
or
or
add
sub
sub
sub
sub
sub
fcomp
fcomp
fcomp
fsubs
addr16
imul
xchg
xchg
xchg
xchg
mov
add
xor
xor
xor
fcomp
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
addl
jp
add
add
add
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
into
into
into
into
ja
ja
ja
test
test
xchg
xchg
outsb
outsb
outsb
enter
xor
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
aad
aad
aad
in
in
in
in
in
in
in
in
in
in
in
in
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
test
add
out
test
test
sub
scas
scas
scas
scas
scas
scas
scas
sub
es
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
adc
mov
xchg
xchg
xchg
add
add
add
out
out
out
out
out
test
test
outsl
outsl
aad
lods
lods
add
add
add
push
push
add
int3
int3
je
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
pop
inc
inc
inc
es
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
lea
lea
lea
push
push
push
push
push
push
push
push
push
push
push
jle
icebp
icebp
icebp
icebp
icebp
icebp
icebp
out
out
out
out
out
out
add
add
add
add
add
jl
mov
mov
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
das
das
das
das
das
das
das
das
das
das
das
das
das
das
and
and
and
and
push
lcall
add
add
div
div
es
sbb
sbb
sbb
dec
dec
dec
add
add
std
std
std
std
std
std
std
std
std
push
in
in
jecxz
or
or
or
or
or
or
or
or
or
mov
sub
sub
sbb
sbb
lcall
mov
inc
add
push
push
call
pushf
pushf
pushf
pushf
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
arpl
out
out
out
and
add
lahf
lahf
lahf
lahf
lahf
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
js
push
push
push
push
push
push
push
push
push
jno
jno
jno
jno
jno
jno
jno
jno
jno
sbb
sbb
sbb
sbb
sbb
sbb
adc
adc
adc
adc
adc
repnz
cmp
cmp
cmp
inc
cs
mov
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xor
in
in
in
in
in
in
in
in
in
mov
mov
mov
or
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
jb
jb
mov
insl
insl
insl
js
js
test
pop
pop
pop
pop
flds
add
add
testl
rol
xor
xor
fcmovu
fcmovu
fcmovu
fidivl
jno
jno
jno
jno
jno
jno
jno
enter
enter
ret
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
andl
and
and
and
and
and
and
and
and
and
and
and
and
div
div
div
imul
mov
repnz
add
fisttpl
or
cmc
cmc
cmc
cmc
cmc
cmc
cmc
clc
clc
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
cwtl
cwtl
cwtl
cwtl
jge
jge
jge
jge
add
add
add
adc
lea
add
add
add
test
pop
pop
pop
pop
pop
add
add
xchg
mov
mov
mov
mov
mov
mov
fisubs
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
ret
ret
ret
test
fstp
fstp
fstp
fstp
fnstsw
jl
jl
jl
jl
add
add
add
add
add
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
add
mov
mov
rol
rol
rol
rol
rol
roll
data16
scas
sub
add
scas
scas
scas
scas
sbb
sbb
les
and
and
and
and
and
and
pop
pop
pop
pop
pop
pop
or
mov
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
aas
add
cli
cli
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
jg
jg
jg
jg
mov
aam
mov
lea
add
add
add
rclb
bound
bound
bound
bound
bound
bound
bound
and
and
and
push
push
push
push
push
push
push
push
pushf
pushf
pushf
ret
clc
clc
clc
clc
clc
insl
insl
insl
insl
mov
mov
push
push
push
push
push
push
push
push
push
push
push
push
push
push
add
add
aaa
into
into
into
into
into
into
into
into
into
into
into
sti
sti
gs
add
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
jg
jg
xchg
mov
addb
and
mov
mov
mov
sub
sub
loopne
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
in
lret
lret
lret
lret
lret
lret
mov
ret
xor
add
add
add
lods
lods
lods
lods
add
es
rcl
rolb
inc
inc
add
add
add
jge
jge
xlat
xlat
xlat
xlat
xlat
xlat
xlat
sub
sub
sub
sub
std
std
std
std
std
pop
bound
bound
bound
add
cmc
cmc
cmc
mov
sbb
sbb
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
pop
pop
pop
pop
pop
sbb
lock
pushl
ss
div
div
div
div
sbb
sbb
sbb
add
insb
insb
insb
insb
insb
insb
stos
add
js
nop
nop
nop
nop
nop
nop
nop
nop
lahf
lahf
add
push
push
push
push
push
push
push
push
push
push
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
dec
dec
dec
or
or
or
or
or
or
or
les
and
and
and
ss
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
xlat
xlat
xlat
fcmovnu
fcmovnu
fcmovnu
out
out
out
out
out
out
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
xchg
adc
adc
adc
adc
sub
es
stos
stos
stos
mov
or
or
add
add
xor
xor
add
rol
xchg
lock
push
push
push
jnp
jnp
push
push
push
push
push
push
addr16
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
inc
inc
inc
inc
add
sub
sbb
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
add
add
mov
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
out
out
test
add
add
add
add
add
adc
mov
mov
insl
insl
cmp
mov
popa
popa
popa
les
inc
inc
inc
inc
xor
xor
xor
xor
in
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
iret
iret
iret
iret
jno
jno
xchg
xchg
pop
pop
pop
xor
xor
xor
xor
xor
pop
pop
pop
pop
pop
pop
add
add
add
add
add
add
add
add
add
sbb
jge
jge
jge
jge
jge
jge
jge
es
or
or
or
or
int3
neg
add
xchg
add
add
lods
lods
xchg
test
addb
and
outsb
outsb
outsb
loopne
loopne
mov
mov
mov
fsub
loop
loop
outsl
outsl
outsl
outsl
outsl
rolb
add
add
sbb
sbb
mov
mov
fwait
fwait
fwait
fwait
fwait
daa
daa
daa
daa
daa
daa
daa
or
add
add
mov
sub
sub
js
js
in
in
imul
imul
imul
jmp
dec
dec
push
push
push
push
push
push
push
push
push
sbb
sbb
ljmp
ljmp
ljmp
ljmp
mov
mov
test
add
rol
rol
rol
rol
rol
rol
rol
xor
and
add
add
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
add
rcl
rcl
rcl
rcl
rcl
rcl
add
add
add
add
out
add
add
add
clc
clc
clc
pop
add
add
scas
scas
scas
scas
cmp
cmp
cmp
cmp
cmp
cmp
mov
mov
mov
mov
jecxz
jecxz
jecxz
jecxz
mov
arpl
arpl
xchg
xchg
xchg
xchg
sub
lret
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
mov
sub
sub
sub
sub
addl
mov
mov
jecxz
jecxz
jecxz
jecxz
jecxz
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
lea
cld
cld
cld
cld
cld
cld
cld
cld
cld
imul
ret
add
add
popa
popa
icebp
icebp
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
cmp
add
add
add
add
add
add
add
add
add
test
sbb
and
add
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
jg
jg
inc
inc
loopne
loopne
lret
bound
sbb
sbb
sbb
sbb
mov
mov
or
or
or
or
or
or
or
or
or
or
or
out
out
out
out
out
out
out
fs
out
out
out
cmp
cmp
cmp
push
push
push
sbb
sbb
sbb
sbb
loopne
loopne
loopne
loopne
loopne
enter
mov
mov
mov
lods
adc
mov
mov
mov
sahf
sahf
sahf
sahf
sahf
push
loope
add
add
add
add
add
add
add
add
ret
ret
mov
mov
mov
mov
mov
jge
jge
jge
jge
aam
aam
aam
aam
aam
aam
aam
aam
xor
or
or
or
or
or
or
push
add
addr16
addr16
xor
xor
xor
mov
mov
mov
mov
xchg
xchg
xchg
xchg
pop
ljmp
ljmp
ljmp
ljmp
jnp
jnp
jge
or
sub
sub
sub
sub
daa
daa
daa
daa
test
test
test
test
test
mov
or
or
add
add
push
push
fcmovnu
fildl
inc
inc
inc
inc
inc
and
and
fwait
inc
inc
inc
inc
inc
hlt
add
xchg
xchg
xchg
xchg
xchg
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
test
imul
imul
imul
imul
imul
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
add
cmpsl
cmpsl
dec
dec
dec
dec
inc
inc
pop
pop
pop
pop
pop
pop
pop
pop
pop
faddp
mov
rol
roll
inc
inc
inc
inc
inc
inc
les
stos
add
repz
add
scas
scas
scas
scas
scas
scas
push
add
add
add
fcmovnu
fcmovnu
fcmovnu
fcmovnu
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
addl
sbbl
out
out
out
sub
sub
sub
xor
xor
add
sti
sti
sti
div
div
div
mulb
sub
sub
fwait
fwait
sbb
sbb
sbb
sbb
sbb
sbb
inc
inc
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
xlat
xlat
mov
out
out
out
add
add
sbb
mov
pop
pop
pop
pop
mov
fmul
int3
int3
mov
leave
leave
leave
leave
leave
leave
push
inc
inc
inc
inc
inc
inc
add
jmp
sub
add
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
sbb
sbb
iret
iret
iret
addl
adcl
fs
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jb
jl
jl
jl
jl
jl
jl
jl
mov
mov
mov
xor
xor
xor
jecxz
scas
scas
scas
scas
scas
scas
scas
scas
scas
in
in
in
in
in
in
cmp
cmp
test
jecxz
sbb
sbb
sbb
ljmp
div
testl
pop
pop
pop
pop
into
into
into
xor
xor
xor
xor
xor
push
push
push
push
push
push
push
jae
jae
hlt
hlt
hlt
hlt
hlt
pusha
pusha
pusha
pusha
pusha
pusha
pusha
add
add
add
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
int3
int3
int3
jne
jne
add
add
and
and
and
and
add
add
add
lret
lret
lret
lret
lret
lret
lret
lret
add
add
enter
enter
xlat
xlat
xlat
xlat
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
sahf
jns
jns
jns
jns
jns
jns
test
test
test
outsl
outsl
outsl
outsl
cmp
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
mov
push
push
fstp
fstp
push
push
push
push
push
push
push
push
add
or
imul
mov
mov
pop
dec
dec
dec
mov
mov
mov
in
in
add
add
add
bound
bound
bound
bound
call
daa
daa
daa
daa
daa
stc
stc
add
ja
ja
ja
dec
mov
mov
mov
mov
mov
mov
test
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
sti
sti
sti
sti
sti
sti
sti
sti
popa
xchg
jb
sub
sub
sub
sub
sub
sub
sub
sub
sub
gs
fs
mov
cld
cld
cld
popf
popf
popf
popf
mov
mov
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
xor
add
add
add
add
pop
cmp
cmp
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
fstp
fstp
fstp
fstp
fstp
fldl
in
in
jg
jg
js
js
js
sti
sti
sti
add
add
cmpsb
cmpsb
cmpsb
cmpsb
pushl
fs
add
add
push
push
push
mov
in
in
in
in
in
in
in
pop
pop
rcl
fcomp
fcomp
fcomp
cli
out
out
iret
iret
iret
iret
iret
iret
iret
addr16
add
pop
pop
hlt
hlt
hlt
hlt
add
add
add
add
add
add
gs
inc
pop
add
ret
ret
ret
ret
ret
ret
ret
jnp
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
and
and
fmulp
lret
mov
stc
stc
stc
sti
sti
sti
sti
aaa
aaa
aaa
sbb
sbb
sbb
sbb
sbb
jbe
jbe
jbe
add
add
dec
dec
dec
dec
and
push
int3
int3
int3
int3
int3
int3
int3
ds
aam
aam
pop
pop
outsl
outsl
outsl
outsl
outsl
outsl
push
push
push
push
push
push
push
push
add
add
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
pop
pop
pop
pop
pop
pop
jg
jg
jg
jg
push
leave
leave
leave
leave
leave
leave
leave
leave
leave
out
out
out
out
out
xor
test
jmp
jmp
add
add
sub
sub
sub
sub
stc
stc
push
push
push
push
ss
adc
adc
adc
adc
mov
mov
or
add
add
inc
inc
inc
inc
inc
inc
inc
inc
inc
and
inc
inc
inc
inc
add
and
and
rol
rol
rol
div
div
div
div
div
test
lret
lret
lret
lret
lret
or
or
or
mov
add
data16
sub
sub
add
std
std
std
std
std
in
test
or
xor
rcl
shll
mov
mov
push
push
push
push
push
push
mov
outsl
outsl
outsl
lock
cmp
cmp
leave
leave
leave
in
add
xchg
insl
insl
insl
insl
insl
insl
insl
pop
pop
pop
pop
add
add
repnz
sub
sub
sub
sub
mov
mov
mov
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
mov
jo
jo
jo
or
or
adc
adc
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
adc
adc
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
add
mov
mov
mov
ret
ret
cmp
sbb
lods
lods
lods
lods
loope
mov
push
outsb
outsb
outsb
outsb
fcmovnu
fcmovnu
fcmovnu
fcmovnu
mov
mov
jae
jae
jae
jae
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
xlat
xlat
add
add
add
inc
inc
inc
and
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
sbb
add
add
sbb
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
jge
fcmovu
fcmovu
fcmovu
ficoml
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
add
imul
xor
xor
add
add
pop
pop
fistps
cltd
mov
jns
jns
jns
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
arpl
arpl
arpl
lret
lret
lret
lret
lret
lret
add
sub
sub
sub
sub
sub
enter
cmp
cmp
cmp
cmp
adc
adc
xchg
xchg
xchg
xchg
xchg
idivl
mov
rcl
ss
and
fcmovnu
or
or
cmpsb
cmpsb
pusha
pusha
pusha
pusha
pusha
pusha
pusha
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
xor
xor
xor
xor
out
out
out
out
out
out
das
mov
or
or
or
or
or
or
or
mov
or
or
mov
int3
int3
pop
pop
pop
add
fcomp
fcomp
fsub
jecxz
jecxz
pminsw
sbb
sbb
sbb
pushl
xor
into
into
into
into
into
into
into
into
into
into
or
or
mov
mov
mov
mov
jl
jl
jl
dec
add
add
movsb
movsb
movsb
movsb
movsb
movsb
movsb
or
or
or
call
mov
das
das
push
push
dec
dec
lahf
xor
xor
xor
xor
fwait
fwait
fwait
fwait
fwait
fwait
fwait
xchg
xchg
xchg
xchg
add
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
ds
cmp
out
out
out
mov
or
or
jnp
jnp
jnp
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
mov
repz
lea
cmpsb
cmpsb
add
add
andb
and
rcl
rcl
shlb
push
push
push
pop
pop
pop
push
push
push
push
push
push
push
mov
mov
mov
jne
jne
jne
and
lcall
aad
aad
sbb
sbb
sbb
sbb
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
addr16
mov
push
in
in
in
in
in
in
in
in
in
in
cmpsl
jbe
mov
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
xor
xor
xor
add
add
mov
sbb
sbb
add
add
fnstenv
ss
add
add
push
push
push
push
rcl
rcl
rcl
rcl
rcl
rcl
add
jne
jne
jne
jne
ret
ret
ret
ret
ret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
or
or
or
or
or
and
fwait
leave
leave
in
in
in
in
in
in
in
in
in
in
in
sti
add
add
add
add
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
sbb
vpsubsw
jmp
mov
mov
mov
mov
mov
mov
push
imul
imul
imul
add
add
add
lcall
data16
dec
dec
dec
pop
pop
pop
repz
adc
mov
dec
dec
dec
dec
dec
dec
flds
and
div
div
div
divl
xlat
xlat
xlat
cmpsl
cmpsl
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
sub
test
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
push
push
push
push
sub
sub
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
push
push
push
push
push
push
push
push
push
push
push
push
addb
addb
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
imul
add
add
icebp
icebp
icebp
icebp
sarb
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
call
call
loop
data16
ret
ret
ret
ret
ret
ret
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
or
sub
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
adc
enter
rcl
shl
cmc
cmc
cmc
cmc
cmc
add
daa
lret
lret
lret
lret
lret
and
aam
sub
mov
mov
mov
fs
imul
or
or
jp
jp
add
sahf
sahf
sahf
add
add
dec
dec
dec
dec
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
shrl
pusha
pusha
pusha
pusha
iret
iret
iret
iret
iret
add
add
add
add
in
in
pop
pop
pop
pop
pop
pop
pop
pop
pop
sbb
sbb
add
cs
add
add
aam
insb
insb
insb
insb
insb
insb
insb
xchg
xchg
xchg
xchg
xchg
xchg
xchg
add
mov
arpl
arpl
add
add
add
loopne
das
das
das
das
add
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
cmp
cmp
sti
sti
sti
add
adc
adc
adc
adc
adc
adc
adc
dec
dec
dec
jae
jae
pusha
mov
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
cmp
add
data16
loop
loop
add
add
scas
scas
scas
scas
scas
outsl
outsl
outsl
outsl
outsl
cmp
cmp
cmp
cmp
iret
iret
iret
dec
dec
dec
dec
dec
dec
dec
add
add
add
data16
push
push
add
or
or
or
or
or
inc
inc
inc
inc
inc
inc
inc
inc
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
arpl
arpl
arpl
or
add
push
xor
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
mov
mov
mov
mov
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
mov
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
cmc
cmc
add
jp
jp
jp
dec
xchg
xchg
out
out
arpl
add
add
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
push
push
push
push
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
pop
pop
add
adc
adc
adc
adc
adc
adc
fcomp
jae
ss
dec
dec
dec
dec
jg
jg
jg
push
push
push
push
push
push
push
push
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
add
add
add
cmp
dec
dec
dec
add
inc
jg
jg
jg
jg
jg
jg
jg
div
mulb
and
gs
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
add
popf
popf
popf
popf
inc
inc
pop
pop
pop
pop
pop
pop
pop
pop
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
sub
sub
sub
sub
sub
push
xchg
sub
cld
cld
cld
cld
or
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
add
add
mov
mov
mov
mov
adc
adc
adc
adc
adc
sbb
add
adc
adc
adc
jae
jae
jae
addr16
add
sub
jle
jle
jle
jle
stos
stos
pushl
scas
scas
add
sti
dec
dec
add
push
push
push
push
clc
clc
clc
clc
and
and
and
and
inc
inc
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
xor
xor
xor
xor
inc
inc
add
add
loope
loope
loope
loope
loope
inc
shl
div
div
div
div
div
cs
rcl
rcl
roll
add
add
add
add
popf
or
dec
out
push
or
aaa
xor
cmpsl
push
xchg
ret
pusha
loopne
or
mov
movsb
mov
jmp
sub
pusha
dec
arpl
addb
test
call
andb
lret
pop
ljmp
mov
jge
cld
mov
and
clc
ljmp
loopne
cmp
and
fstpl
push
ja
xchg
in
test
add
sahf
jbe
pop
sub
dec
push
pop
shlb
jg
adc
enter
inc
sub
mov
pusha
mov
or
inc
outsl
stos
loopne
lret
and
daa
xor
jmp
addb
aaa
data16
dec
xlat
push
pushf
push
mov
std
pop
insb
aas
outsl
jecxz
inc
mov
cld
and
mov
clc
pop
rcll
xchg
cmp
xor
push
addr16
and
mov
pop
call
pusha
das
loope
into
shlb
sub
stos
rolb
and
ljmp
mov
and
adc
adc
or
cmp
jle
adc
cmp
and
inc
mov
test
rcrb
cmp
rolb
xchg
js
mov
inc
push
shlb
sbb
fdivl
addb
inc
dec
hlt
clc
jp
jbe
and
dec
xor
push
repz
jl
jmp
in
scas
push
sub
and
and
pusha
dec
test
and
fdivrp
in
and
mov
mov
xchg
cmc
push
jl
mov
add
addr16
pop
lock
xlat
lcall
icebp
popa
dec
lahf
xchg
sub
cli
stc
sti
add
and
ljmp
sub
cltd
movsl
shll
loopne
das
mov
subb
inc
pop
sub
loopne
loopne
sub
pusha
xchg
inc
cmp
cmp
xchg
sti
sti
into
gs
scas
js
inc
in
sub
shlb
mov
loop
cmp
cmp
shlb
addb
and
pusha
shlb
push
dec
stos
sub
inc
jnp
pop
cmc
out
push
loop
and
add
cmp
test
inc
mov
and
shr
inc
pusha
push
gs
sbb
insb
push
mov
jno
sarl
adc
ja
jmp
or
js
inc
test
and
out
jbe
mov
xchg
xor
push
xchg
dec
push
pop
jge
sti
mov
insl
push
loopne
mov
and
push
xchg
jns
in
mov
lret
addr16
inc
jb
or
addb
adc
and
rolb
insl
insl
jg
mov
arpl
js
and
ljmp
xchg
clc
sub
mov
lods
stc
sbb
shlb
fidivrl
push
and
mov
cli
flds
and
rol
aas
jle
xchg
aaa
xchg
inc
sub
insl
jns
std
xchg
popa
and
pusha
mov
andb
gs
lock
adc
mov
add
loopne
add
cmp
std
sub
loopne
bound
stos
push
rol
mov
mov
loopne
clc
pop
pusha
inc
push
out
mov
jle
pop
mov
xorb
out
stos
shlb
arpl
sub
lret
cmp
cmp
mov
dec
push
clc
push
add
sub
loopne
nop
jge
stos
pushf
cmp
lret
mov
add
fistps
push
mov
sahf
xor
jp
jmp
std
icebp
ret
mov
push
xchg
jle
outsl
lret
mov
fmull
adc
imul
clc
xor
out
push
mov
sbb
in
push
jns
cmpsb
inc
and
mov
sarl
add
inc
movsl
cmpsb
rolb
xor
jmp
leave
fidivrl
fsubrs
pusha
inc
out
ret
push
loopne
sbb
ds
andb
rclb
cmpsb
loopne
pop
push
and
fxch
stos
mov
jl
int
mov
ljmp
xor
push
and
insl
das
out
adc
push
rolb
aam
mov
pop
sub
cmp
cli
mov
push
mov
je
or
jbe
mov
test
jecxz
and
fisubs
mov
ja
outsb
hlt
sub
jo
lea
mov
push
pusha
mov
shrb
fsubrl
js
rolb
mov
or
pusha
mov
mov
mov
cmpb
cmp
mov
mov
outsb
xchg
cmp
cmp
ret
push
loopne
jp
lret
aas
cmovge
data16
xchg
addr16
mov
add
xchg
dec
mov
sbb
adcl
das
sub
fadds
movsb
rol
jae
cltd
cmp
sub
pop
ret
and
mov
int3
in
mov
mov
cmp
rolb
ljmp
outsb
xlat
sub
mov
dec
dec
bound
clc
and
fcom
mov
sub
loopne
lea
xchg
lahf
mov
loope
fistpll
aas
in
adc
aam
aam
in
dec
mov
inc
loopne
test
test
inc
xchg
out
test
mov
shl
cmp
rolb
xchg
sbb
push
xor
mov
dec
or
mov
cmpsb
loopne
xchg
sbb
push
mov
stos
sbb
stos
inc
call
repz
hlt
mov
cmc
fidivs
sbb
fsubrs
dec
jo
cmpsl
fwait
sbb
and
or
andb
inc
jge
cltd
dec
push
xchg
stc
cmp
inc
pusha
or
iret
adc
mov
into
inc
mul
in
inc
jge
test
push
inc
cmp
inc
xchg
test
inc
add
push
xchg
sbb
and
bound
mov
dec
test
js
icebp
xchg
sbbl
add
shl
scas
xor
addb
sahf
or
sahf
movsl
xor
and
and
add
pusha
dec
pusha
lods
mov
mov
imul
scas
inc
and
scas
sbb
mov
mov
enter
push
jp
and
add
add
aam
fs
sbb
mov
loopne
lds
andb
enter
sarb
pusha
andb
shlb
add
gs
roll
daa
leave
lret
loopne
loopne
ja
imul
push
mulb
sahf
jne
add
shlb
pusha
rolb
test
pop
arpl
outsl
popa
popa
mov
add
mov
ret
pushl
pusha
mov
gs
lock
cli
xchg
dec
or
add
jmp
dec
enter
add
std
push
mov
mov
jmp
loop
test
loopne
outsl
xchg
stos
add
in
andb
stos
shl
pop
decb
jl
cmp
stos
add
inc
dec
rolb
ds
push
jmp
outsl
lds
ja
lods
sub
in
rcrl
cmc
dec
pop
adc
add
sub
pop
sbb
bound
pop
out
sub
aas
test
mov
inc
es
pusha
mov
xor
loop
add
sub
add
and
inc
addb
add
mov
mov
adc
std
movsb
and
pop
xor
add
addb
mov
call
xchg
mov
loopne
aaa
dec
aas
or
pusha
in
xchg
inc
cmp
add
rcll
ret
xor
out
roll
inc
xorl
sbb
push
push
inc
xor
lret
inc
pusha
aaa
or
rclb
push
pop
mov
push
in
adc
addb
lret
sahf
lret
inc
insb
andb
ret
pusha
inc
and
add
fs
sub
pusha
bound
movl
xor
mov
or
cmpsb
and
dec
lock
jnp
dec
dec
cmp
loope
push
sbb
mov
fidivrs
push
add
jnp
sub
lods
add
cltd
pop
or
sbb
pop
push
jb
incb
add
pop
aad
subl
pushw
cmp
iret
push
rol
push
negb
rolb
adc
test
cwtl
pop
fnsave
cmpsb
addb
aas
loopne
pusha
add
add
rorl
sub
sbb
mov
cli
sbb
dec
daa
mov
push
adc
dec
or
mov
and
fsts
push
sbb
roll
sahf
or
loope
mov
ret
pushf
xor
jne
jnp
or
or
sub
mov
pusha
and
pop
imul
inc
pop
push
or
inc
lods
mov
mov
cmp
loopne
movsb
addb
or
jmp
jle
test
ror
gs
fmul
xor
imull
jmp
pushf
jecxz
rcl
mov
inc
popa
daa
adc
and
push
mov
int
pop
mov
sub
data16
mov
scas
inc
int3
div
sbbl
out
mov
mov
pusha
inc
call
push
pop
fcoms
int3
sbb
sar
leave
jl
out
push
data16
mov
dec
add
inc
stos
mov
stc
dec
sub
and
orb
lcall
loop
scas
adc
mov
pop
inc
pop
lret
lods
out
bound
or
rcrb
popa
sbb
loopne
frstor
push
mov
aaa
inc
add
mov
inc
xchg
and
jne
iret
addb
mov
rolb
fwait
into
insb
xchg
loope
adc
sub
push
jp
lret
pop
cmp
sahf
loop
outsb
cmp
or
jbe
push
sub
jp
cltd
and
pushf
push
pop
jne
in
sub
sbb
dec
push
and
sub
mov
cmp
and
inc
pop
adc
fnstsw
fbstp
cs
add
je
add
out
dec
psubb
insl
dec
std
jg
and
or
or
and
pop
mov
inc
scas
popa
imul
mov
sbbb
ja
out
imull
mov
inc
mov
repz
rolb
add
outsl
ljmpw
call
jp
adc
ss
sub
xor
ret
movsb
inc
subb
enter
or
dec
out
dec
or
push
repz
inc
pop
xor
pop
inc
push
mov
cmp
inc
mov
push
fsubs
mov
in
addb
dec
sahf
out
inc
sahf
in
inc
fidivl
sub
enter
mov
movsl
icebp
pushf
fcoms
fisttpl
pusha
shlb
pusha
and
mov
cmpb
sub
mov
pop
filds
lcall
test
pusha
sub
ret
jge
jecxz
mov
mov
shl
icebp
test
adc
sbb
jge
icebp
push
enter
sar
daa
sahf
pop
fdivl
int3
sub
dec
push
pop
aad
push
or
dec
cmp
and
mov
inc
sub
and
sub
and
jmp
je
adc
sub
std
mov
fsubrl
mov
pusha
shlb
scas
pusha
xorb
pusha
jns
jnp
pusha
loopne
lods
mov
pop
fdivl
addb
push
sub
cmpsb
inc
pusha
lods
loopne
push
or
inc
ljmp
mov
xchg
cmp
mov
movsb
pusha
loopne
mov
pusha
inc
dec
andl
jne
pop
imul
push
xor
jae
xchg
std
mov
or
addb
xlat
shlb
loopne
inc
fnstenv
into
xor
sub
add
jns
xchg
fwait
scas
lods
and
mov
mov
shlb
mov
mov
jbe
sbb
out
imul
cmp
jle
orl
mov
lcall
pusha
inc
pusha
jle
into
iret
cmp
inc
cmp
jl
imull
rol
adc
iret
fldt
pusha
sbb
in
movsb
loopne
int3
je
lea
push
cld
inc
jmp
lock
inc
and
mov
andb
push
hlt
mov
andb
mov
add
loopne
or
imul
or
sbbb
mov
and
pop
xor
pusha
sbbb
add
fcom
js
loop
add
movsl
adc
mov
loopne
icebp
push
dec
push
jg
sbb
add
pop
ret
int3
in
add
inc
pop
stc
xor
inc
inc
mov
hlt
andb
inc
and
jns
les
mov
push
mov
mov
fwait
shlb
orl
inc
pusha
popf
or
mov
xchg
test
bound
jmp
xlat
adc
mov
inc
dec
cwtl
aad
popf
adc
ljmp
inc
and
sub
rclb
mov
loopne
pop
test
add
inc
insb
stos
dec
mov
pusha
xor
je
loopne
fisubrs
rolb
sub
and
andb
hlt
ret
js
cmp
loope
jnp
outsl
pop
popa
jle
je
cltd
in
test
push
mov
lea
fidivs
xlat
sub
and
loopne
push
or
fbld
addb
fstpl
negb
push
xchg
inc
dec
insl
outsb
jnp
je
pusha
rorb
pusha
dec
jp
jnp
in
repz
sbb
pusha
add
and
rolb
and
nop
sbb
fcmovb
pop
pop
shlb
sub
jb
mov
orb
and
addr16
imul
and
mov
xor
xchg
jns
jno
loopne
loope
mov
dec
in
lcall
push
sbb
sbb
hlt
sub
mov
loopne
add
and
adc
add
mov
pusha
inc
xor
popa
pop
icebp
fildl
push
fisubs
push
pusha
sbb
loope
loop
xlat
sahf
push
test
cmp
scas
stc
mov
pusha
or
pop
pop
xlat
push
mov
adc
mov
faddl
and
and
sub
dec
repz
call
imul
inc
pop
mov
andb
outsb
daa
jae
mov
pop
cmpsb
mov
cmp
lret
in
adc
sbb
xor
data16
rcr
push
fwait
loop
sub
mov
movsl
xor
jne
cmove
call
addb
repnz
addb
call
mov
jae
cmp
inc
mov
pusha
sub
xor
cmp
inc
mov
jp
add
mov
sbbb
cwtl
fsubrl
push
mov
shl
test
mov
and
push
xchg
sbb
inc
push
xor
loopne
mov
icebp
mov
and
xchg
sbb
pop
add
mov
xchg
xor
repnz
add
sub
jp
mov
and
and
ljmp
in
fnsave
bound
repz
mov
mov
aad
pop
xlat
xchg
addr16
jne
sti
inc
je
add
fbstp
mov
cli
fcmovu
in
add
sarb
pop
dec
add
mov
sbb
test
and
and
ss
sub
shrb
pop
mov
aas
mov
inc
jae
or
mov
sti
mov
dec
adcl
lock
sqrtps
shrb
andb
leave
mov
orb
pusha
mov
mov
xor
rolb
lcall
jmp
mov
jle
cmp
mov
mov
test
sub
lods
cmc
pop
fs
jns
mov
xor
adc
roll
xorps
insb
sar
adc
shll
mov
jge
dec
loop
and
stos
inc
rorb
mov
andb
negb
xor
inc
stos
in
pop
das
cmp
push
mov
in
push
addb
cmpsl
into
inc
pop
in
push
shr
rclb
stc
push
push
in
out
push
lahf
xor
mov
lods
xchg
outsb
das
scas
mov
scas
fs
stc
cmp
cmpsb
andb
leave
mov
mov
fs
cmpsl
inc
fstps
add
adc
in
iret
mov
xchg
lock
and
loope
xor
cmp
and
mov
add
pusha
sbbb
inc
in
jo
rorb
mov
add
jp
push
movsb
shlb
outsb
sub
pusha
mov
add
fisubrs
xor
inc
aaa
jns
adc
mov
sti
xchg
das
mov
pusha
sahf
or
loopne
xor
dec
inc
adc
lods
xor
int
xchg
xlat
push
test
add
mov
fadds
mov
mov
in
loope
je
mov
dec
cli
mov
andb
flds
mov
sub
and
push
mov
loopne
xchg
sbb
inc
adc
insl
cs
mov
inc
inc
and
loopne
dec
imull
into
sbb
cmc
inc
out
jo
add
aad
loop
repz
and
test
loopne
and
mov
not
addr16
data16
pop
dec
sub
loope
andb
pusha
lret
pop
frstor
out
and
fnstcw
inc
sub
aam
aad
xchg
cmc
add
rolb
inc
inc
movsl
pop
hlt
adc
nop
sub
rorb
adc
pushf
inc
or
push
inc
loopne
push
icebp
mov
and
loopne
popf
push
in
lea
addb
rolb
mov
and
ret
push
mov
lcall
mov
aam
xchg
mov
loopne
or
pusha
cwtl
in
shlb
das
add
add
push
aam
cmp
test
leave
stos
mov
adc
mov
rol
addr16
pusha
mov
add
push
push
cmp
adc
out
adc
mov
inc
in
std
or
push
dec
popf
mov
add
adc
mov
loopne
xchg
pop
fsts
jl
roll
shlb
add
inc
push
clc
inc
push
jp
cmp
pushf
and
inc
adc
int3
test
inc
jns
dec
jle
pusha
pusha
xchg
inc
xlat
push
and
mov
sub
and
jmp
ret
mov
adc
inc
and
ljmp
bound
mov
roll
jge
or
push
lcall
pop
sbb
negb
out
mov
loopne
lret
js
fucom
mov
add
sti
jo
hlt
icebp
loop
xchg
pushf
into
mov
add
sub
push
mov
stos
sub
push
cmp
cmp
loopne
mov
sub
inc
fimuls
push
mov
loop
and
fildl
pusha
mov
jbe
push
iret
mov
add
fimuls
test
pop
cwtl
ret
int3
xchg
xchg
lock
rcr
fidivl
xor
mov
mov
inc
sub
jle
push
repnz
loopne
pop
out
scas
andb
movb
cs
pusha
lea
sub
imul
dec
out
lods
addb
or
cmp
filds
cmp
inc
adc
insb
sbb
mov
mov
popf
ds
rcr
add
add
xor
shl
jb
xchg
xchg
sbb
insb
xor
and
in
adc
lret
out
roll
mov
std
loopne
mov
jle
iret
push
loopne
outsb
test
inc
subl
push
loopne
add
sbbb
andb
xrelease
adc
mov
stos
andb
inc
sbb
mov
and
loopne
aam
push
loopne
imul
addr16
mov
shl
daa
iret
dec
jle
movd
mov
jecxz
nopl
sbb
stos
xchg
and
nop
xor
push
mov
push
or
loopne
jnp
fcompl
shrl
and
arpl
jecxz
loopne
in
or
inc
vmread
and
inc
fcoms
xlat
pop
mov
mov
and
loop
push
push
rcl
and
add
mov
or
stos
mov
imul
ljmp
and
xor
stc
push
stos
mov
and
std
decl
enter
mov
add
xlat
inc
sbb
or
mov
or
arpl
or
shrb
pusha
jne
add
test
subb
sub
xchg
cs
dec
pop
stos
inc
inc
jnp
lods
pusha
rol
xor
xchg
lahf
adc
or
mov
ret
jl
data16
mov
pop
mov
rolb
sbb
gs
xchg
inc
mov
out
cmp
test
inc
aam
push
mov
cltd
jmp
and
inc
test
mov
test
sub
jge
cmpl
lahf
xor
push
jno
addb
dec
dec
movl
ljmp
mov
mov
pusha
sbbb
mov
mov
xor
mov
imul
xlat
sahf
test
and
in
push
fwait
mov
dec
popa
roll
rolb
cld
addb
out
push
mov
loopne
mov
nop
dec
jns
in
dec
pop
or
andb
into
loopne
pusha
loopne
mov
loopne
aas
adc
stc
movsb
pusha
inc
js
mov
add
jns
pusha
loopne
test
or
pusha
shlb
int
fistpl
mov
daa
ds
mov
push
add
pop
fadds
pusha
loopne
xor
pop
dec
lds
adc
add
test
jcxz
or
jnp
dec
lds
mov
mov
popf
sbb
mov
out
stos
pusha
and
ja
stos
pusha
and
sbb
out
mov
loopne
cmpsb
and
xlat
lret
aaa
shl
add
loopne
inc
loopne
adc
in
adc
push
movl
pop
sti
inc
in
mov
and
mov
mull
or
ficomps
and
xor
popa
andb
mov
mov
sub
fidivs
test
mov
and
stos
cmp
cmp
pop
mov
pusha
pusha
enter
cwtl
das
adc
aas
pop
lods
pusha
add
pusha
addb
fcomps
pusha
and
mov
rol
imull
jmp
into
adc
add
out
pop
sbb
mov
pop
jecxz
inc
imul
insl
cmc
mov
pusha
or
mov
ds
mov
add
iret
mov
das
push
or
shrb
out
push
std
push
lahf
adc
and
xchg
cmc
fbstp
add
mov
jno
adc
addb
add
sub
dec
call
jmp
loopne
inc
dec
int3
testl
loopne
mov
ja
or
jb
ret
xchg
or
in
push
push
push
xor
cmp
jne
pop
leave
ret
nop
nop
nop
nop
nop
push
push
call
call
mov
mov
test
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
test
jne
lea
push
call
mov
call
call
mov
call
ret
nop
nop
nop
nop
incl
add
add
incl
add
add
push
enter
leave
xchg
jbe
nop
nop
nop
nop
mov
push
mov
pop
jmp
nop
nop
nop
nop
nop
mov
push
mov
push
mov
mov
cmp
je
cmp
je
cmp
je
test
jne
pushl
call
test
jl
andl
xor
pop
pop
ret
nop
nop
nop
nop
nop
push
push
call
xor
mov
mov
mov
mov
mov
call
mov
mov
movzwl
cmp
jb
test
jne
cmp
je
mov
test
je
and
and
movl
test
jne
mov
add
movl
mov
mov
mov
mov
and
or
shl
mov
mov
andl
andl
test
jne
call
testb
jne
and
lea
cmpl
jne
push
push
pushl
push
call
mov
cmp
je
push
call
mov
cmp
je
testb
jne
test
jl
mov
mov
mov
mov
mov
call
ret
nop
nop
nop
nop
nop
nop
nop
incl
add
add
add
add
out
add
xchg
jbe
nop
nop
nop
nop
mov
push
mov
call
push
pushl
pushl
pushl
pushl
pushl
call
pop
ret
nop
nop
nop
nop
nop
push
push
call
xor
mov
mov
call
mov
mov
mov
cmp
je
cmp
je
cmp
je
mov
cmp
je
mov
mov
cmp
je
mov
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
mov
call
lea
push
lea
push
lea
push
push
call
mov
cmp
jne
push
lea
push
call
cmp
jl
addw
mov
test
jne
pushl
pushl
pushl
pushl
lea
push
push
call
mov
mov
mov
call
push
push
call
mov
call
ret
nop
nop
nop
incl
add
add
add
add
mov
int3
xchg
push
push
push
call
mov
mov
call
mov
push
lea
push
lea
push
call
test
jl
xor
push
mov
cmp
jae
dec
mov
mov
mov
mov
pushl
call
test
jne
cmp
ja
movzbl
mov
and
js
xor
inc
mov
shl
shr
test
jne
cmp
je
cmp
jge
movzwl
inc
decl
cmp
jl
xor
inc
pop
pop
mov
xor
pop
call
leave
ret
incl
add
cmp
add
adc
mov
push
mov
pop
jmp
cmp
jne
test
jne
jmp
nop
nop
nop
nop
nop
mov
push
mov
pop
jmp
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
mov
push
mov
mov
sub
push
xor
sub
jne
mov
push
lea
push
call
lea
mov
lea
push
push
lea
push
movl
mov
mov
mov
mov
call
cmp
jl
mov
pop
leave
ret
nop
nop
nop
nop
nop
nop
nop
pop
add
add
outsb
add
insb
add
bound
push
add
je
jae
pop
add
add
dec
add
insl
add
jb
jns
inc
add
outsb
add
add
add
outsb
add
add
add
add
incl
jne
xor
jmp
cmpl
jne
cmpl
jg
mov
jmp
nop
nop
nop
nop
nop
mov
push
mov
sub
mov
xor
mov
push
mov
cmpl
jne
mov
xor
pop
call
leave
ret
nop
nop
nop
nop
nop
mov
push
mov
sub
mov
xor
mov
andl
push
mov
push
mov
lea
push
lea
push
push
call
cmpl
je
test
jne
pushl
push
push
call
test
je
xor
pushl
push
call
mov
mov
pop
xor
pop
call
leave
ret
nop
nop
nop
nop
nop
mov
push
mov
sub
push
push
mov
xor
cmp
jne
push
lea
push
call
lea
mov
lea
push
push
push
movl
mov
movl
mov
mov
call
test
jne
xor
inc
pop
pop
leave
ret
nop
nop
pop
add
add
imul
jb
jns
pop
add
popa
add
push
add
pop
add
outsl
add
je
ja
popa
add
add
add
arpl
jb
outsl
add
outsl
add
je
pop
add
imul
outsl
add
jae
pop
add
imul
outsl
add
jae
and
inc
add
jb
outsl
add
and
push
add
jo
outsl
add
je
imul
pop
add
dec
add
add
nop
nop
nop
nop
nop
mov
andl
andl
ret
nop
nop
nop
nop
nop
mov
push
mov
sub
mov
xor
mov
push
push
mov
lea
call
mov
cmp
je
lea
and
mov
jmp
nop
nop
nop
nop
nop
mov
push
mov
mov
cmp
je
cmp
je
cmp
je
mov
and
push
cmp
je
call
pop
ret
nop
nop
nop
nop
nop
jmp
mov
add
cmp
jb
cmp
jae
jmp
call
andl
jmp
nop
nop
nop
nop
nop
mov
push
mov
pop
jmp
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
mov
push
mov
call
push
pushl
pushl
pushl
pushl
pushl
call
pop
ret
nop
nop
nop
nop
nop
push
push
call
xor
mov
mov
call
mov
mov
mov
cmp
je
cmp
je
cmp
je
cmp
je
mov
cmp
je
mov
cmp
je
cmp
je
cmp
jne
testl
jne
cmp
je
cmp
je
cmp
je
mov
call
lea
push
lea
push
lea
push
push
call
mov
cmp
jne
push
lea
push
call
test
je
addw
mov
test
jne
pushl
pushl
pushl
pushl
lea
push
push
call
mov
lea
push
call
mov
mov
call
push
push
call
mov
call
ret
nop
nop
incl
add
add
add
add
push
lret
xchg
jbe
int3
xchg
jbe
nop
nop
nop
nop
mov
push
mov
sub
push
push
xor
pop
lea
movl
rep
mov
mov
cmp
je
push
mov
push
push
push
mov
lea
push
push
push
push
call
test
jge
pop
pop
leave
ret
nop
nop
nop
nop
nop
mov
push
mov
pop
jmp
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
mov
push
mov
pop
jmp
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
mov
push
mov
push
push
pushl
call
pop
ret
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
mov
push
mov
pop
jmp
nop
nop
nop
nop
nop
mov
push
mov
pop
jmp
nop
nop
nop
nop
nop
mov
push
mov
push
push
pushl
lea
push
call
test
jl
call
mov
push
lea
push
pushl
call
test
jl
xor
inc
leave
ret
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
mov
push
mov
pop
jmp
nop
nop
nop
nop
nop
mov
push
mov
cmpl
push
push
push
je
push
pushl
call
pop
pop
test
je
push
push
pushl
call
pop
pop
pop
pop
ret
nop
je
popa
imul
insb
insb
add
jmp
nop
nop
nop
nop
nop
mov
push
mov
pop
jmp
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
mov
push
mov
pop
jmp
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
mov
push
mov
pop
jmp
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
push
push
loop
enter
fs
push
gs
jno
mov
rcr
mov
movsl
scas
mov
movsb
loopne
lret
testb
and
pop
xchg
and
pusha
addr16
pop
ficomps
or
rclb
push
and
mov
inc
inc
ret
xchg
cmp
shlb
push
sub
rorb
rol
pop
gs
mov
in
popa
pop
pusha
cmp
xchg
mov
xchg
pmaddwd
mov
sar
icebp
outsl
xchg
add
movsl
adcl
stos
add
stos
lret
sbb
rol
cmp
inc
test
rclb
pop
mov
cli
jae
lods
inc
loopne
enter
pusha
mov
orb
sub
and
adc
mov
dec
ror
sbb
add
add
push
mov
dec
data16
cmp
in
inc
sbb
cmpsb
mov
fstps
mov
mov
in
pusha
adcb
push
cmp
pusha
xor
inc
outsl
lret
inc
lds
adc
test
mov
imul
scas
loopne
push
rol
rolb
sti
add
add
gs
les
sbb
jnp
ljmp
out
scas
and
lret
sbb
push
dec
ss
setle
mov
dec
data16
mov
pop
adc
xchg
mov
out
cmp
loopne
mov
scas
shlb
enter
push
inc
add
sarb
fsubs
outsl
fcoml
cli
lret
sbb
rorl
and
cmc
fdivrl
ret
int3
add
inc
int
mov
mov
sbb
mov
and
sahf
rcl
cwtl
sbb
pusha
dec
jecxz
add
in
loopne
lods
rol
loope
shl
aad
adc
nop
mov
or
cmp
sub
pop
cmp
arpl
loopne
cwtl
pop
mov
js
or
sub
stos
pop
stos
inc
and
repz
insb
dec
push
sti
adc
mov
mov
add
jp
push
loopne
scas
add
add
jmp
dec
or
mov
inc
rcl
inc
and
shlb
andb
fwait
imul
cli
dec
adc
in
add
mov
pop
adcl
loopne
cmc
adc
lret
mov
and
loopne
arpl
jne
jecxz
jo
mov
and
enter
bound
add
popf
sbb
cmpl
dec
testl
popl
mov
rorl
add
das
inc
into
popa
push
sub
loopne
lret
adcb
imul
ds
shlb
pusha
pusha
push
int3
stc
xchg
inc
andb
or
sbb
xchg
pop
mov
pop
rolb
inc
imul
or
lods
add
aas
push
subl
xlat
dec
loope
imul
jge
ss
aam
mov
add
pop
inc
mov
adc
nop
popa
std
add
outsl
inc
faddl
dec
mov
lods
xchg
pusha
ljmp
mov
and
mov
data16
push
or
inc
sub
pusha
jb
pop
pop
or
mov
mov
pop
adc
pusha
mov
mov
shl
mov
mov
into
ljmp
std
jno
clc
shlb
movsb
andb
jns
stos
loopne
pop
mov
mov
mov
jo
inc
outsb
jno
dec
add
loopne
xchg
jp
loop
and
pusha
inc
enter
lret
lret
pusha
int3
cmp
xchg
cld
inc
mov
mov
adc
out
js
push
test
add
jb
aam
cmp
test
loopne
or
inc
and
inc
inc
or
loopne
push
xor
mov
movl
mov
mov
stos
rol
ljmp
ja
shrl
ljmp
cwtl
mov
mov
mov
sarb
jae
mov
lods
pusha
and
aam
inc
lds
repz
mov
mov
mov
repnz
inc
loopne
jnp
mov
cmpsl
push
repnz
in
sub
add
lds
push
sub
jo
mov
movsb
add
in
inc
mov
sub
loopne
add
insl
add
pusha
adc
das
cmc
sub
xchg
pop
jno
fisttps
outsb
leave
pop
imul
pop
pop
cmp
pushf
iret
mov
or
pusha
scas
addr16
daa
cmp
mov
jmp
or
shlb
rcrl
imul
and
flds
loopne
mov
test
loopne
pop
pop
gs
mov
xor
aad
enter
shl
flds
andb
cmc
add
push
and
mov
lcall
nop
mov
pop
pop
out
in
xchg
push
mov
mov
jb
jg
shrl
add
inc
mov
xchg
int3
pop
and
cmp
outsl
adc
fisubrl
sarb
pusha
rcr
in
sub
fdivp
adc
lret
shlb
insl
cwtl
xor
fimuls
sti
xchg
push
xor
das
clc
sti
sub
and
add
xor
pop
js
pop
cmpl
or
lret
fsubrs
in
sti
int3
aaa
sbb
xor
add
icebp
pop
loop
fistl
mov
cwtl
push
fisttpll
pushf
gs
sarb
xor
clc
jns
pop
sti
sub
sar
pushf
aam
pusha
inc
fwait
mov
out
shl
shll
mov
mov
andb
into
pop
xchg
inc
lea
cmpsb
rolb
lret
mov
int
lods
scas
sub
rolb
enter
std
or
test
loopne
xchg
mov
lret
mov
aam
pusha
and
cmp
mov
push
addb
pusha
sub
and
mov
add
xor
icebp
insb
loop
push
sub
push
mov
out
enter
and
add
sub
pusha
outsb
hlt
xchg
rorb
test
into
xchg
and
add
mov
sub
adc
push
aas
repz
jge
ss
pop
ljmp
cmp
lds
in
jecxz
outsb
or
adc
or
xchg
stos
andb
stos
lret
cli
or
mov
pop
sub
and
fcomps
fldt
mov
dec
inc
xchg
jmp
pop
repnz
mov
inc
loop
in
xor
pop
in
adc
dec
mov
fs
insl
mov
les
popf
iret
or
mov
daa
push
addl
lret
mov
lods
test
and
rorb
inc
les
in
rolb
rcrb
mov
mov
jnp
mov
call
faddl
jmp
jmp
ret
xor
loopne
ljmp
movl
and
lcall
mov
and
and
xorb
add
mov
inc
or
cwtl
ret
sub
out
lock
pusha
sbb
pusha
orb
sub
pusha
add
pop
int
insl
mov
mov
js
dec
adc
js
test
rolb
mov
das
xchg
xchg
or
pop
or
dec
mov
pusha
enter
mov
xor
xor
pushf
testb
inc
mov
rcll
xchg
or
or
jp
mov
lods
mov
loopne
or
shlb
xchg
cmp
pusha
inc
std
iret
incb
pop
add
add
into
fwait
pop
or
movsl
out
inc
fists
addr16
push
out
or
pop
hlt
movsl
mov
add
and
mov
sub
dec
add
and
cltd
pusha
cltd
subl
pop
jne
add
gs
xor
movsl
in
test
mov
sub
loopne
push
jne
cmc
dec
outsb
fmulp
or
aaa
mov
int3
in
ret
jge
and
movsb
inc
sar
pusha
mov
inc
mov
and
inc
xchg
mov
jmp
andb
shll
inc
rcrb
inc
rcr
je
add
mov
jno
xlat
mov
mov
and
cmp
out
add
jge
pop
add
lods
jne
stc
push
dec
out
scas
and
inc
and
add
cmp
sahf
sub
cwtl
sub
sbb
cmp
dec
addb
filds
and
jmp
inc
mov
loopne
mov
dec
pop
jl
gs
xchg
push
dec
pop
xor
xchg
cli
sub
shlb
lretw
aam
fnsave
mov
cmpl
mov
jge
inc
add
orb
and
inc
and
push
pusha
and
add
addr16
sbb
ljmp
repz
adc
push
test
jp
js
mov
add
in
cmpsl
sbb
repz
sbb
in
mov
sub
mov
shl
sbb
and
cmc
lods
pusha
inc
and
fsubrl
pop
add
mov
xchg
and
rcrb
lret
pop
stos
adc
sti
xchg
pop
pop
test
mov
jne
pusha
orb
mov
mov
inc
fdivr
insl
test
cmp
jle
hlt
fidivrl
js
insl
and
shlb
cwtl
mov
dec
cli
in
les
mov
mov
mov
push
ret
fdivrs
fstpl
or
addr16
mov
std
test
inc
pop
rorb
andb
jns
push
lcall
or
mov
mov
cs
test
pusha
add
or
pusha
sub
and
mov
push
rolb
out
test
lea
cmp
andb
dec
mov
cmp
ss
mov
adc
sub
and
push
dec
lods
mov
xchg
jg
jmp
mov
in
ret
jnp
hlt
loope
test
or
add
scas
pusha
and
mov
loopne,pn
jl
jmp
fs
dec
js
test
cmp
cli
jecxz
mov
xchg
adc
in
jno
mov
rcrb
and
fisttpll
xchg
mov
and
stos
stos
adc
fwait
xor
lock
imul
repnz
bound
cld
icebp
pop
mov
cmc
jb
adc
adc
dec
rol
fwait
notb
inc
add
inc
mov
and
das
xor
lret
cmp
shlb
cmc
mov
aas
lods
add
das
outsl
push
and
mov
adc
jmp
mov
orb
pop
xlat
mov
cmpb
pop
rcll
pop
dec
jo
shl
mov
iret
add
add
enter
lds
jbe
bound
repnz
push
add
lock
lock
out
addl
scas
inc
and
shl
jge
or
mov
int
je
sbbl
mov
ljmp
mov
insb
mov
adc
mov
sarb
or
lcall
mul
addb
in
and
and
and
inc
mov
or
add
add
cmp
mov
jne
cwtl
dec
inc
pop
sbb
push
adc
sub
dec
push
out
inc
mov
pop
popf
cli
fucomip
aas
or
addr16
lods
mov
rcrb
stos
and
cmpsb
loopne
jp
dec
adc
jecxz
add
add
sub
ret
jge
out
inc
fists
or
pusha
mov
mov
inc
sbb
lahf
jmp
adc
push
jmp
and
inc
notb
pop
divb
loope
pop
fnstenv
xchg
mov
sbb
sbb
sbb
sbb
jecxz
bound
or
mov
pop
jnp
sub
cmp
push
inc
mov
lahf
add
xor
fcoml
fistpl
rorb
inc
mov
addr16
push
mov
or
and
mov
js
mov
test
test
xor
inc
hlt
or
aad
mov
sar
outsl
mov
adc
dec
fstpl
xchg
add
loop
pop
addb
mov
jne
int
jg
xchg
jge
push
lea
and
and
les
mov
mov
rcrb
insl
sti
outsb
mov
je
int
data16
pusha
add
fdivrl
ret
addb
in
and
jmp
and
int3
les
shlb
cmp
loopne
and
rolb
lcall
adc
sti
pop
stos
cli
shlb
cmp
andb
pop
mov
dec
subl
fwait
notl
mov
aam
and
mov
add
in
push
mov
or
xchg
mov
push
or
sarb
sub
andb
push
fdivl
movsl
sti
adc
hlt
or
loopne
lret
loope
add
shrb
shlb
mov
adc
sbb
lahf
scas
pusha
pusha
jmp
jmp
adc
enter
cwtl
icebp
inc
out
pusha
pusha
inc
ja
aad
jo
inc
sub
orl
mov
shlb
pop
fistps
add
fidivl
add
les
mov
popf
sub
mov
lods
inc
rclb
fptan
inc
mov
pusha
inc
rclb
push
mov
and
repnz
js
andb
scas
pusha
loopne
pop
push
pusha
add
sub
inc
cwtl
and
inc
mov
lods
mov
add
sbb
loopne
mov
arpl
mov
dec
sub
andb
add
jecxz
pop
addl
mov
jnp
sahf
stc
pop
mov
xor
inc
mov
clc
mov
push
nop
clc
repnz
cld
jae
ds
sbb
clc
repnz
cld
jae
add
add
push
clc
repnz
cld
jae
push
jbe
add
add
jg
and
nop
clc
repnz
cld
jae
mov
add
or
orb
loopne
xchg
mov
nop
push
mov
leave
nop
jmp
add
inc
inc
add
jne
nop
push
mov
leave
nop
jmp
daa
push
into
add
xor
push
add
push
nop
clc
repnz
cld
jae
mov
add
nop
clc
repnz
cld
jae
add
mov
add
cmp
nop
clc
repnz
cld
jae
add
mov
add
add
fdivl
pop
push
mov
xchg
ret
add
cmp
into
mov
push
mov
leave
nop
jmp
pop
add
add
xchg
add
nop
push
mov
leave
nop
jmp
push
in
insb
or
sti
xor
push
mov
xchg
ret
add
movl
pop
stos
nop
clc
repnz
cld
jae
in
mov
add
add
lret
push
push
mov
xchg
ret
add
cmpl
add
movsl
nop
clc
repnz
cld
jae
inc
pop
jg
add
imul
nop
clc
repnz
cld
jae
data16
sti
add
lds
mov
xchg
ret
mov
lret
mov
add
les
nop
clc
repnz
cld
jae
lcall
mov
nop
clc
repnz
cld
jae
int3
pop
data16
mov
lods
rol
mov
push
mov
xchg
ret
add
pop
add
pop
add
lea
repnz
cld
jae
mov
mov
loopne
push
rcrl
mov
xchg
ret
sbb
call
test
clc
repnz
cld
jae
add
push
mov
leave
nop
jmp
add
add
add
dec
cmp
clc
repnz
cld
jae
or
xchg
mov
add
adc
inc
add
xor
add
xchg
out
inc
aas
push
nop
clc
repnz
cld
jae
addl
add
add
jnp
xor
dec
ss
nop
clc
repnz
cld
jae
daa
add
jb
nop
clc
repnz
cld
jae
or
adc
nop
push
mov
leave
nop
jmp
add
fs
add
add
add
nop
clc
repnz
cld
jae
xchg
xchg
add
mov
nop
push
mov
leave
nop
jmp
add
sbb
fwait
push
mov
xchg
ret
push
lret
push
adc
mov
jno
nop
clc
repnz
cld
jae
mov
add
mov
clc
repnz
cld
jae
add
add
in
leave
nop
jmp
add
push
inc
jne
nop
clc
repnz
cld
jae
adc
cmpsl
imul
nop
cld
jae
add
adc
add
nop
clc
repnz
cld
jae
add
call
js
inc
nop
clc
repnz
cld
jae
and
addb
mov
nop
clc
repnz
cld
jae
add
mov
pushl
nop
clc
repnz
cld
jae
mov
push
movl
and
mov
xchg
ret
pop
add
add
mov
inc
inc
nop
push
mov
leave
nop
jmp
data16
add
mov
je
add
lds
mov
xchg
ret
mov
xchg
cmpl
in
insl
add
push
mov
xchg
ret
je
add
push
mov
add
xchg
nop
push
mov
leave
nop
jmp
add
lret
add
add
xor
nop
push
mov
leave
nop
jmp
mov
insb
mov
adc
sub
nop
clc
repnz
cld
jae
in
add
xchg
add
in
leave
nop
jmp
add
add
or
inc
add
call
nop
clc
repnz
cld
jae
and
add
mov
add
jae
inc
mov
jbe
ret
mov
nop
clc
repnz
cld
jae
mov
test
push
add
nop
push
mov
leave
nop
jmp
mov
add
nop
cld
jae
add
in
add
lret
mov
push
mov
xchg
ret
and
in
add
push
add
mov
nop
clc
repnz
cld
jae
cmpsl
dec
mov
xchg
je
jmp
cmpl
repnz
cld
jae
add
sub
repnz
stos
nop
clc
repnz
cld
jae
push
add
jbe
imul
push
mov
xchg
ret
in
jbe
add
lret
nop
clc
repnz
cld
jae
add
add
add
add
fistl
aad
inc
add
pop
push
add
xor
push
test
and
mov
leave
nop
jmp
mov
xchg
add
clc
repnz
cld
jae
xor
ds
into
jbe
jne
nop
clc
repnz
cld
jae
add
in
inc
pusha
inc
aad
nop
push
mov
leave
nop
jmp
sti
movl
add
xchg
add
nop
clc
repnz
cld
jae
data16
push
rolb
xchg
call
nop
clc
repnz
cld
jae
daa
add
dec
jns
nop
push
mov
leave
nop
jmp
insb
add
add
push
push
mov
xchg
ret
mov
add
xor
add
addr16
push
nop
clc
repnz
cld
jae
add
mov
add
pop
mov
nop
clc
repnz
cld
jae
lret
add
add
mov
loopne
popf
pop
push
mov
xchg
ret
out
add
fiaddl
inc
add
dec
lea
nop
clc
repnz
cld
jae
adc
add
in
mov
nop
clc
repnz
cld
jae
int3
add
add
push
nop
push
mov
leave
nop
jmp
int3
addr16
into
add
add
mov
nop
clc
repnz
cld
jae
add
jb
mov
dec
sub
jae
out
mov
xchg
add
arpl
clc
nop
clc
repnz
cld
jae
push
je
daa
add
jmp
push
push
adc
add
add
xchg
mov
nop
clc
repnz
cld
jae
add
push
add
clc
repnz
cld
jae
add
add
add
nop
push
mov
leave
nop
jmp
repnz
into
add
mov
leave
nop
jmp
lcall
add
jne
push
mov
xchg
ret
addr16
inc
push
into
add
mov
leave
nop
jmp
add
add
or
faddl
pop
or
clc
repnz
cld
jae
add
add
add
mov
nop
push
mov
leave
nop
jmp
add
add
mov
rclb
jae
out
in
hlt
add
inc
sbb
add
add
nop
clc
repnz
cld
jae
mov
add
or
test
clc
repnz
cld
jae
pop
je
stos
pop
nop
push
mov
leave
nop
jmp
pop
ds
pop
adc
je
fistpl
push
mov
xchg
ret
add
sbb
pusha
nop
clc
repnz
cld
jae
addl
or
cmp
push
mov
leave
nop
jmp
adc
adc
mov
jbe
fwait
nop
clc
repnz
cld
jae
dec
jbe
daa
sbb
sub
jl
mov
push
mov
xchg
ret
addr16
push
adc
mov
nop
clc
repnz
cld
jae
add
inc
add
mov
nop
clc
repnz
cld
jae
lcall
das
add
nop
clc
repnz
cld
jae
xor
cmpsl
jbe
pushf
push
push
and
loopne
in
add
nop
push
mov
leave
nop
jmp
add
adc
ds
in
fimuls
mov
nop
clc
repnz
cld
jae
mov
or
movzwl
nop
push
mov
leave
nop
jmp
jg
cmpsl
jg
or
lret
popf
inc
add
add
lret
addb
lea
nop
clc
repnz
cld
jae
cmpsl
mov
sbb
inc
and
nop
push
mov
leave
nop
jmp
add
movzwl
nop
clc
repnz
cld
jae
or
jbe
sti
xchg
or
pusha
movsl
rep
nop
clc
repnz
cld
jae
jbe,pt
xchg
jbe
data16
loopne
push
shlb
xor
nop
clc
repnz
cld
jae
add
in
out
add
jnp
inc
lock
mov
xchg
ret
and
push
pop
add
add
mov
push
mov
xchg
ret
jbe
add
jbe
add
nop
clc
repnz
cld
jae
data16
into
pop
sbb
mov
mov
xchg
ret
add
add
in
pop
je
data16
inc
inc
xchg
or
clc
repnz
cld
jae
add
je
inc
out
call
push
mov
xchg
ret
sti
add
dec
andl
push
je
nop
push
mov
leave
nop
jmp
add
add
lea
nop
push
mov
leave
nop
jmp
add
into
add
repnz
dec
nop
clc
repnz
cld
jae
daa
mov
add
mov
mov
clc
repnz
cld
jae
and
adcl
add
push
push
mov
xchg
ret
add
add
add
push
inc
push
push
mov
xchg
ret
push
fs
or
hlt
add
nop
clc
repnz
cld
jae
add
int3
sbb
pop
nop
clc
repnz
cld
jae
mov
add
add
push
and
mov
push
nop
clc
repnz
cld
jae
add
push
out
add
insb
movsl
mov
push
mov
xchg
ret
adc
mov
pop
addr16
nop
clc
repnz
cld
jae
sub
add
jp
in
and
mov
leave
nop
jmp
add
sti
add
and
clc
repnz
cld
jae
daa
add
je
push
jae
inc
push
mov
xchg
ret
add
add
pop
push
mov
xchg
ret
movl
add
fdivrs
sub
rcl
mov
nop
push
mov
leave
nop
jmp
mov
add
push
in
jae
jo
nop
push
mov
leave
nop
jmp
add
pusha
rolb
test
clc
call
jae
xchg
add
add
jp
push
push
mov
xchg
ret
add
int3
add
sbb
in
nop
push
mov
leave
nop
jmp
add
push
into
add
subb
clc
repnz
cld
jae
add
and
xchg
push
xchg
call
pop
nop
clc
repnz
cld
jae
add
add
add
and
adc
pop
div
nop
clc
repnz
cld
jae
add
je
add
into
and
and
xor
repnz
cld
jae
addr16
add
jle
nop
clc
repnz
cld
jae
insb
add
add
cmp
nop
clc
repnz
cld
jae
pop
add
xchg
cmpsb
shlb
pusha
add
loopne
call
nop
clc
repnz
cld
jae
add
and
push
push
mov
xchg
ret
dec
add
xchg
aas
fld1
nop
clc
repnz
cld
jae
add
xchg
and
add
nop
clc
repnz
cld
jae
in
push
add
push
push
nop
clc
repnz
cld
jae
inc
sbb
add
add
and
and
add
push
mov
xchg
ret
adc
add
ds
and
clc
repnz
cld
jae
xor
addr16
nop
clc
repnz
cld
jae
je
push
data16
add
add
pusha
loopne
sub
nop
push
mov
leave
nop
jmp
push
add
xor
nop
cld
jae
mov
add
pop
jmp
sbb
cmpsl
in
xchg
push
je
sbb
add
jno
add
add
add
cmp
insl
jne
nop
clc
repnz
cld
jae
xchg
xchg
add
pop
nop
push
mov
leave
nop
jmp
imul
add
add
or
nop
jmp
add
addl
add
jecxz
dec
cmp
mov
xchg
ret
adc
push
add
mov
xchg
ret
add
add
repnz
add
cmp
nop
cld
jae
xchg
add
xor
or
repnz
cld
jae
add
add
add
nop
clc
repnz
cld
jae
add
xchg
xorl
incl
pause
clc
repnz
cld
jae
addw
add
loop
cmpl
nop
push
mov
leave
nop
jmp
push
imul
lods
and
imul
xorl
mov
inc
dec
xchg
jae
addr16
push
testb
clc
repnz
cld
jae
add
add
push
add
je
enter
add
nop
clc
repnz
cld
jae
push
add
mov
xchg
ret
int3
adcb
stc
jmp
nop
clc
repnz
cld
jae
add
mov
mov
addb
add
jae
add
push
mov
mov
nop
cld
jae
or
add
iret
jmp
dec
add
adcl
add
xchg
add
pushl
nop
clc
repnz
cld
jae
add
je
mov
inc
jge
cli
nop
clc
repnz
cld
jae
add
sub
pusha
nop
push
mov
leave
nop
jmp
repnz
subl
mov
nop
push
mov
leave
nop
jmp
addb
xor
mov
nop
clc
repnz
cld
jae
add
add
jg
nop
clc
repnz
cld
jae
add
insb
sbb
xor
nop
push
mov
leave
nop
jmp
add
addb
cmp
add
nop
clc
repnz
cld
jae
add
add
add
leave
nop
jmp
add
add
xchg
call
nop
push
mov
leave
nop
jmp
add
imul
nop
cld
jae
add
push
pop
xchg
jb,pt
nop
push
mov
leave
nop
jmp
add
add
adc
in
leave
nop
jmp
data16
inc
add
mov
add
jmp
push
add
add
in
dec
push
add
push
nop
clc
repnz
cld
jae
pop
adc
add
imul
nop
clc
repnz
cld
jae
add
mov
add
lret
cs
insb
nop
clc
repnz
cld
jae
add
insb
es
and
pushf
inc
add
pop
lret
add
add
add
add
nop
jmp
push
inc
xchg
jmp
push
mov
leave
nop
jmp
add
add
rclb
subl
incl
add
add
adc
lea
nop
clc
repnz
cld
jae
add
and
adc
sbb
mov
leave
nop
jmp
fiaddl
add
mov
nop
clc
repnz
cld
jae
add
mov
add
faddl
dec
add
push
mov
leave
nop
jmp
lcall
stos
inc
and
pusha
nop
clc
repnz
cld
jae
push
cmp
add
add
push
mov
xchg
ret
mov
add
ja
add
push
mov
xchg
ret
sub
mov
daa
push
mov
hlt
jae
inc
add
out
push
sbb
sbb
jne
nop
clc
repnz
cld
jae
mov
add
push
nop
clc
repnz
cld
jae
mov
repnz
add
dec
data16
inc
insb
int
nop
push
mov
leave
nop
jmp
int3
mov
add
add
fld1
push
mov
xchg
ret
add
or
mov
mov
pop
and
push
mov
xchg
ret
add
rclb
addl
add
adc
add
add
clc
repnz
cld
jae
mov
add
add
push
mov
leave
nop
jmp
add
je
jg
xchg
call
sub
nop
jmp
add
push
dec
and
add
loopne
mov
nop
clc
repnz
cld
jae
inc
push
add
clc
repnz
cld
jae
add
mov
add
mov
mov
nop
clc
repnz
cld
jae
mov
fs
into
xchg
push
nop
push
mov
leave
nop
jmp
mov
add
add
rolb
addb
fistpll
nop
push
mov
leave
nop
jmp
mov
add
pop
mov
nop
clc
repnz
cld
jae
add
add
shlb
nop
clc
repnz
cld
jae
data16
add
inc
pop
cmp
nop
push
mov
leave
nop
jmp
add
add
nop
push
mov
leave
nop
jmp
lret
or
mov
jge
nop
clc
repnz
cld
jae
add
add
in
add
sbb
push
mov
xchg
ret
push
and
xchg
add
jg
rolb
push
mov
leave
nop
jmp
add
sub
clc
repnz
cld
jae
add
hlt
add
test
add
nop
clc
repnz
cld
jae
add
int3
sub
repnz
cld
jae
add
xor
xor
hlt
add
repnz
cld
jae
sbb
data16
add
mov
xchg
ret
int3
add
and
je
add
fwait
push
mov
xchg
ret
add
je
and
add
mov
mov
mov
adc
clc
repnz
cld
jae
in
add
xchg
pop
nop
push
mov
leave
nop
jmp
add
sub
add
cmpl
cld
jae
add
jbe
mov
test
sti
call
jae
add
add
stos
notl
nop
jmp
lret
xchg
pop
pop
nop
clc
repnz
cld
jae
add
add
mov
mov
nop
push
mov
leave
nop
jmp
insb
add
cmp
push
mov
xchg
ret
add
adcl
add
nop
clc
repnz
cld
jae
call
mov
mov
clc
repnz
cld
jae
in
add
in
inc
loopne
test
nop
push
mov
leave
nop
jmp
and
add
add
push
nop
clc
repnz
cld
jae
int3
mov
push
add
lret
add
push
mov
xchg
ret
add
out
ret
jne
nop
clc
repnz
cld
jae
sub
cmp
xor
nop
clc
repnz
cld
jae
add
in
mov
xchg
and
sbb
rolb
inc
push
mov
xchg
ret
mov
add
movl
add
clc
repnz
cld
jae
add
add
and
push
nop
clc
repnz
cld
jae
add
add
push
mov
clc
repnz
cld
jae
in
add
add
add
shl
push
mov
xchg
ret
mov
lcall
xor
nop
clc
repnz
cld
jae
add
add
out
int
call
jae
xchg
adc
or
popf
add
nop
clc
repnz
cld
jae
daa
add
and
loopne
mov
add
nop
clc
repnz
cld
jae
add
mov
in
jb
push
push
mov
xchg
ret
add
or
add
add
xorb
clc
repnz
cld
jae
mov
add
adc
mov
nop
clc
repnz
cld
jae
xor
add
fs
ret
push
nop
push
mov
leave
nop
jmp
add
add
adc
mov
xchg
ret
add
add
mov
add
adc
test
inc
add
add
hlt
pop
add
ja
test
call
jae
add
nop
push
mov
leave
nop
jmp
pop
add
dec
mov
or
push
mov
xchg
ret
xchg
push
add
add
nop
clc
repnz
cld
jae
or
add
lods
mov
nop
clc
repnz
cld
jae
add
cmp
add
inc
and
std
add
nop
clc
repnz
cld
jae
add
mov
push
les
addr16
nop
clc
repnz
cld
jae
push
and
add
add
nop
clc
repnz
cld
jae
add
in
mov
shlb
xor
adcl
clc
repnz
cld
jae
or
and
insb
imul
xor
call
jae
inc
jg,pt
andb
adc
add
push
mov
xchg
ret
xchg
or
add
add
nop
clc
repnz
cld
jae
add
mov
xchg
add
nop
cld
jae
sub
mov
add
clc
stc
mov
nop
clc
repnz
cld
jae
add
popa
nop
push
mov
leave
nop
jmp
add
mov
call
push
mov
leave
nop
jmp
add
add
mov
push
mov
mov
xchg
ret
adc
push
push
add
add
add
jae
jg
adc
mov
mov
test
call
jae
or
call
nop
clc
repnz
cld
jae
dec
add
add
mov
sub
cld
push
mov
xchg
ret
add
add
add
add
push
mov
xchg
ret
movl
add
repnz
cld
jae
add
addr16
add
scas
push
add
nop
clc
repnz
cld
jae
je
inc
dec
in
fwait
push
mov
xchg
ret
mov
cmp
push
add
push
add
nop
clc
repnz
cld
jae
add
add
loope
and
push
fs
clc
repnz
cld
jae
into
or
push
mov
xchg
ret
add
lcall
insl
mov
push
mov
xchg
ret
mov
insb
and
add
fwait
nop
push
mov
leave
nop
jmp
add
add
push
mov
leave
nop
jmp
add
xor
add
call
nop
push
mov
leave
nop
jmp
add
add
add
mov
nop
clc
repnz
cld
jae
je
push
mov
add
or
and
add
in
add
fists
mov
xchg
ret
add
in
add
cmp
and
mov
nop
clc
repnz
cld
jae
addl
add
call
inc
add
cmp
hlt
add
add
jae
push
mov
xchg
ret
add
in
add
sar
nop
clc
repnz
cld
jae
add
mov
ficoml
into
inc
fistpl
nop
clc
repnz
cld
jae
xor
add
add
popl
xchg
ret
mov
xchg
je
out
add
xor
repnz
cld
jae
pop
lret
sbb
fistpl
push
mov
xchg
ret
sub
add
daa
subl
add
add
push
mov
xchg
ret
add
add
and
or
or
adc
mov
nop
clc
repnz
cld
jae
sbb
lret
mov
leave
nop
jmp
je
add
add
sub
push
nop
clc
repnz
cld
jae
add
add
adc
jne
nop
clc
repnz
cld
jae
dec
cmp
test
shr
movsb
nop
clc
repnz
cld
jae
sbb
add
xor
or
clc
repnz
cld
jae
out
add
xchg
add
arpl
push
mov
xchg
ret
dec
add
add
add
mov
jl
xchg
mov
nop
clc
repnz
cld
jae
sub
add
repz
call
jae
add
xchg
add
add
add
hlt
add
add
je
dec
dec
fld1
nop
push
mov
leave
nop
jmp
add
add
cmpb
nop
clc
repnz
cld
jae
adc
pop
mov
nop
clc
repnz
cld
jae
add
inc
pop
push
mov
xchg
ret
or
mov
add
sub
repnz
cld
jae
add
push
movl
mov
nop
clc
repnz
cld
jae
add
add
mov
add
push
mov
xchg
ret
add
xor
add
xchg
pop
push
mov
xchg
ret
sbb
sbb
pop
sub
orb
call
jae
xchg
and
lds
clc
repnz
cld
jae
add
add
add
je
cmp
nop
push
mov
leave
nop
jmp
xchg
lret
repnz
clc
repnz
cld
jae
xor
fwait
push
push
mov
xchg
ret
add
push
add
movsb
nop
clc
repnz
cld
jae
push
in
xor
add
mov
nop
clc
repnz
cld
jae
add
and
add
ljmp
jae
xchg
add
adc
je
pop
nop
clc
repnz
cld
jae
sbb
mov
lcall
xor
push
mov
xchg
ret
call
inc
dec
fs
sub
inc
fsub
mov
nop
clc
repnz
cld
jae
pop
add
pop
push
push
mov
xchg
ret
add
add
xchg
or
mov
xchg
ret
mov
mov
out
aas
nop
push
mov
leave
nop
jmp
push
push
xchg
add
add
movsb
add
mov
adc
icebp
nop
push
mov
leave
nop
jmp
add
call
cmp
nop
push
mov
leave
nop
jmp
add
test
out
call
jae
push
add
test
clc
repnz
cld
jae
daa
add
pusha
mov
cmp
mov
xchg
ret
add
sbb
add
add
nop
push
mov
leave
nop
jmp
add
push
add
nop
clc
repnz
cld
jae
inc
add
push
push
mov
adc
clc
repnz
cld
jae
add
mov
clc
repnz
cld
jae
movl
data16
push
nop
clc
repnz
cld
jae
mov
movl
push
fldt
rolb
nop
push
mov
leave
nop
jmp
xchg
imul
sub
call
inc
add
mov
cmp
xchg
mov
push
mov
xchg
ret
push
xchg
add
mov
mov
nop
clc
repnz
cld
jae
add
xchg
adc
add
mov
nop
clc
repnz
cld
jae
add
add
pop
fadd
add
nop
clc
repnz
cld
jae
add
sub
sbb
cmp
mov
nop
clc
repnz
cld
jae
add
not
push
mov
xchg
ret
xor
push
imul
add
jne
nop
clc
repnz
cld
jae
add
rep
nop
clc
repnz
cld
jae
mov
and
and
jbe
nop
clc
repnz
cld
jae
add
addr16
add
push
push
nop
clc
repnz
cld
jae
pop
add
lret
jmp
nop
cld
jae
add
and
adc
fwait
nop
clc
repnz
cld
jae
adcl
jg
mov
nop
cld
jae
cmp
add
add
or
call
cld
jae
add
or
std
test
nop
push
mov
leave
nop
jmp
pop
in
mov
sub
xchg
and
add
int3
and
andb
add
add
nop
clc
repnz
cld
jae
xor
push
mov
xchg
ret
add
add
add
add
pop
nop
clc
repnz
cld
jae
add
add
nop
clc
repnz
cld
jae
add
or
cmp
nop
push
mov
leave
nop
jmp
add
add
addr16
add
add
jae
add
sub
lcall
mov
xchg
ret
mov
cmp
dec
xchg
adc
xor
popa
nop
clc
repnz
cld
jae
lret
call
enter
rolb
add
add
nop
jmp
add
add
xor
rcll
mov
xchg
ret
add
xchg
xor
inc
dec
add
call
inc
add
add
mov
xchg
push
push
add
nop
clc
repnz
cld
jae
add
add
ds
mov
mov
mov
add
clc
repnz
cld
jae
add
add
add
fistpl
nop
clc
repnz
cld
jae
je
and
push
add
mov
nop
push
mov
leave
nop
jmp
call
add
push
push
mov
xchg
ret
dec
add
pop
push
add
adc
mov
nop
push
mov
leave
nop
jmp
add
repnz
inc
inc
add
add
je
add
add
add
andl
repnz
cld
jae
xor
into
add
add
sbb
in
nop
push
mov
leave
nop
jmp
add
push
sbb
push
mov
idiv
dec
add
into
add
xor
add
push
mov
xchg
ret
cmp
add
add
nop
clc
repnz
cld
jae
add
add
push
nop
clc
repnz
cld
jae
add
add
adc
and
mov
rclb
jne
add
add
push
adc
push
in
add
nop
clc
repnz
cld
jae
lret
out
add
mov
nop
clc
repnz
cld
jae
data16
add
push
push
mov
xchg
ret
hlt
in
add
movl
mov
nop
clc
repnz
cld
jae
push
add
cmp
mov
xchg
ret
je
daa
add
add
add
lods
rolb
xor
sub
mov
leave
nop
jmp
and
add
pop
inc
pop
shr
nop
clc
repnz
cld
jae
cmp
push
add
add
add
add
jae
add
xor
inc
pop
lcall
clc
repnz
cld
jae
add
xor
lds
clc
repnz
cld
jae
mov
in
add
in
inc
mov
mov
nop
clc
repnz
cld
jae
add
add
mov
inc
add
and
add
fildl
insl
inc
add
out
mov
jbe
decb
push
mov
leave
nop
jmp
add
fiaddl
push
adc
icebp
mov
nop
clc
repnz
cld
jae
add
pop
add
add
add
and
mov
xchg
ret
mov
add
nop
clc
repnz
cld
jae
jbe
add
add
out
or
repnz
cld
jae
pop
xor
add
call
repnz
cld
jae
add
or
daa
add
in
add
push
mov
xchg
ret
add
sub
mov
nop
clc
repnz
cld
jae
pop
add
add
test
push
mov
xchg
ret
mov
add
fistpl
nop
clc
repnz
cld
jae
pop
data16
mov
and
pop
and
clc
repnz
cld
jae
add
dec
push
push
mov
xchg
ret
adcb
xor
cltd
popa
nop
clc
repnz
cld
jae
mov
add
cmpsl
cmpsl
pop
push
mov
xchg
ret
or
imul
add
stos
nop
clc
repnz
cld
jae
call
insb
or
sbb
nop
push
mov
leave
nop
jmp
insb
imul
add
jno
add
mov
add
scas
push
push
mov
xchg
ret
add
add
and
add
jl
addb
clc
repnz
cld
jae
push
add
xchg
nop
clc
repnz
cld
jae
int3
add
add
add
nop
clc
repnz
cld
jae
push
in
mov
push
mov
xchg
ret
xor
add
insb
xchg
add
push
mov
xchg
ret
add
add
ret
push
nop
clc
repnz
cld
jae
or
lret
out
xor
nop
clc
repnz
cld
jae
add
sti
push
add
mov
in
inc
sub
dec
mov
and
insb
jg
jbe
add
mov
and
nop
jmp
xor
in
mov
nop
clc
repnz
cld
jae
add
add
xchg
add
call
inc
add
add
int3
dec
call
nop
clc
repnz
cld
jae
add
pop
in
rorb
leave
nop
jmp
je
daa
add
in
and
nop
clc
repnz
cld
jae
dec
add
add
fistpl
push
mov
xchg
ret
and
add
aad
mov
repnz
cld
jae
sbb
movsb
nop
clc
repnz
cld
jae
int3
hlt
in
out
imul
clc
repnz
cld
jae
add
add
sub
out
nop
clc
repnz
cld
jae
or
add
aad
rclb
jae
and
add
add
sbb
add
add
nop
clc
repnz
cld
jae
hlt
add
xchg
repnz
add
nop
push
mov
leave
nop
jmp
push
add
and
mov
fcoms
nop
jmp
sub
je
movl
mov
xchg
ret
push
fiaddl
addb
push
add
adc
rcll
nop
jmp
add
add
jg
sti
sti
dec
nop
clc
repnz
cld
jae
xchg
lcall
pop
ret
pop
repnz
data16
int3
dec
mov
add
add
je
push
push
mov
xchg
ret
je
mov
data16
add
sbb
nop
clc
repnz
cld
jae
insb
in
add
lcall
clc
repnz
cld
jae
add
sbb
je
adc
add
and
cmpl
add
shr
nop
clc
repnz
cld
jae
mov
hlt
pop
add
cmc
mov
nop
clc
repnz
cld
jae
add
add
mov
mov
xchg
ret
pop
mov
add
dec
push
nop
clc
repnz
cld
jae
add
add
call
jae
add
cld
jg
inc
and
nop
push
mov
leave
nop
jmp
add
mov
jle
mov
push
mov
xchg
ret
add
mov
push
add
dec
push
shlb
push
mov
xchg
ret
add
add
mov
test
adc
jmp
in
jbe
adc
push
addr16
add
add
add
repz
push
mov
xchg
ret
add
xchg
add
jge
sbb
add
nop
clc
repnz
cld
jae
mov
add
or
push
mov
leave
nop
jmp
add
add
jg
nop
clc
repnz
cld
jae
in
mov
add
in
popa
pop
push
mov
xchg
ret
je
add
popa
mov
nop
clc
repnz
cld
jae
push
repnz
jno
nop
clc
repnz
cld
jae
add
call
test
push
mov
xchg
ret
add
mov
insb
push
add
repnz
cld
jae
add
add
add
add
inc
outsl
xor
nop
clc
repnz
cld
jae
mov
jge
nop
push
mov
leave
nop
jmp
in
add
add
add
nop
clc
repnz
cld
jae
in
xor
inc
push
iret
xor
push
mov
xchg
ret
mov
add
and
je
call
jae
mov
call
nop
clc
repnz
cld
jae
cmpsl
or
xchg
cmpsb
loopne
rcl
push
dec
nop
clc
repnz
cld
jae
data16
cmpsl
lods
je
nop
clc
repnz
cld
jae
add
addb
push
nop
clc
repnz
cld
jae
out
add
int3
mov
imul
adc
jae
add
xor
call
ret
add
fcmove
add
mov
xchg
ret
add
add
sub
add
mov
jmp
dec
add
and
adc
add
nop
push
mov
leave
nop
jmp
lret
dec
jns
fistl
fiadds
and
ds
movl
jl
xor
nop
push
mov
leave
nop
jmp
add
movl
push
mov
xchg
ret
inc
sbb
jg
mov
inc
xlat
mov
nop
push
mov
leave
nop
jmp
into
jbe
add
add
push
push
lods
mov
nop
clc
repnz
cld
jae
jg
add
add
sub
mov
les
push
mov
leave
nop
jmp
sbb
sti
add
mov
dec
xor
nop
push
mov
leave
nop
jmp
add
nop
push
mov
leave
nop
jmp
mov
in
push
add
mov
push
fwait
nop
clc
repnz
cld
jae
mov
mov
sub
data16
jno
add
jae
mov
xor
mov
add
test
das
add
nop
clc
repnz
cld
jae
add
add
mov
xchg
ret
pop
cmp
and
arpl
repnz
cld
jae
jg
data16
in
mov
nop
clc
repnz
cld
jae
cmpsl
add
add
fs
xchg
mov
nop
clc
repnz
cld
jae
jbe
add
mov
jecxz,pt
call
jae
ds
fs
add
nop
clc
repnz
cld
jae
add
test
andb
pusha
mov
nop
clc
repnz
cld
jae
add
xchg
or
lcall
cmp
mov
xchg
ret
je
add
mov
lock
clc
repnz
cld
jae
push
add
rclb
clc
repnz
cld
jae
lret
add
fs
jne
nop
push
mov
leave
nop
jmp
add
call
cld
jae
lret
ds
xor
rclb
sbb
call
add
addl
inc
xor
inc
mov
pop
loope
push
push
mov
leave
nop
jmp
jg
lret
addb
mov
push
mov
xchg
ret
repnz
add
nop
clc
repnz
cld
jae
add
cmp
add
incl
nop
push
mov
leave
nop
jmp
add
pusha
fisttps
push
mov
leave
nop
jmp
daa
add
mov
in
ret
nop
clc
repnz
cld
jae
in
mov
out
je
daa
pop
push
mov
xchg
ret
add
je
push
in
je
pop
push
mov
xchg
ret
add
hlt
add
data16
add
notl
jae
add
push
int3
add
pop
sbb
fwait
push
mov
xchg
ret
sti
add
add
add
add
lea
nop
clc
repnz
cld
jae
add
mov
jle
movswl
nop
clc
repnz
cld
jae
and
repnz
xchg
mov
sub
add
jae
add
lret
inc
jp
add
nop
push
mov
leave
nop
jmp
mov
cmp
add
mov
nop
push
mov
leave
nop
jmp
sub
mov
push
or
add
push
mov
xchg
ret
add
je
add
add
in
push
nop
push
mov
leave
nop
jmp
push
cmpsl
imul
and
xchg
push
cld
mov
addb
clc
repnz
cld
jae
add
sti
add
add
fstl
push
mov
leave
nop
jmp
and
add
push
mov
xchg
ret
add
daa
xchg
add
addr16
adc
nop
jmp
xchg
je,pt
jge
push
mov
xchg
ret
je
int3
lcall
add
clc
dec
inc
nop
clc
repnz
cld
jae
add
daa
add
push
mov
xchg
ret
push
add
in
dec
add
and
mov
clc
repnz
cld
jae
pop
add
in
ds
mov
push
mov
xchg
ret
add
add
inc
push
mov
xchg
ret
or
add
add
mov
outsl
loopne
mov
xchg
ret
pop
add
pop
add
add
push
mov
xchg
ret
pop
dec
je
xor
inc
int
movl
jae
add
pop
in
pop
add
mov
nop
clc
repnz
cld
jae
add
insb
add
add
call
mov
leave
nop
jmp
imul
int3
sbb
add
sbb
clc
repnz
cld
jae
add
add
insb
das
push
nop
push
mov
leave
nop
jmp
add
into
sti
dec
cmpl
nop
push
mov
leave
nop
jmp
add
add
sub
pusha
push
add
nop
clc
repnz
cld
jae
in
adc
add
cld
nop
clc
repnz
cld
jae
add
lret
fld1
nop
clc
repnz
cld
jae
insb
mov
add
add
push
mov
xchg
ret
add
add
add
fldl
jne
nop
clc
repnz
cld
jae
pop
add
dec
add
xor
mov
nop
clc
repnz
cld
jae
lcall
call
cld
jae
add
inc
lret
xlat
add
nop
push
mov
leave
nop
jmp
add
cmpsl
sbb
mov
clc
repnz
cld
jae
add
jbe
subl
or
add
jae
in
add
add
mov
clc
repnz
cld
jae
cmp
add
push
add
mov
cmp
nop
push
mov
leave
nop
jmp
add
lret
push
fildl
repnz
cld
jae
add
add
mov
ret
add
jae
dec
add
xchg
dec
pushl
push
mov
xchg
ret
repnz
mov
add
sti
jb
nop
push
mov
leave
nop
jmp
push
add
in
nop
clc
repnz
cld
jae
add
in
cmp
add
call
nop
jmp
xor
dec
clc
cmp
mov
xchg
sbb
pop
push
mov
xchg
ret
hlt
add
add
add
andb
nop
clc
repnz
cld
jae
add
add
add
fistpl
nop
clc
repnz
cld
jae
add
int3
xchg
into
mov
sub
adc
inc
add
xor
cmpsl
in
add
xchg
push
push
mov
xchg
ret
add
add
lret
cmpsl
cmp
repnz
cld
jae
add
in
movl
mov
xchg
ret
add
add
cmpsl
add
nop
clc
repnz
cld
jae
inc
sub
insb
or
clc
repnz
cld
jae
add
add
push
add
nop
clc
repnz
cld
jae
add
add
mov
movsl
pop
nop
clc
repnz
cld
jae
add
xchg
add
clc
repnz
cld
jae
insb
add
add
push
push
mov
xchg
ret
in
add
add
add
add
call
jae
add
pusha
loopne
push
nop
clc
repnz
cld
jae
add
add
add
nop
push
mov
leave
nop
jmp
add
xchg
and
rclb
mov
nop
clc
repnz
cld
jae
out
and
jle
xor
mov
xchg
ret
add
mov
add
add
or
and
add
nop
clc
repnz
cld
jae
add
jbe
and
adc
nop
cld
jae
xor
mov
push
out
add
fists
nop
jmp
xchg
or
push
mov
xchg
ret
add
xor
into
add
push
in
mov
dec
cmp
push
mov
leave
nop
jmp
add
or
loop
nop
clc
repnz
cld
jae
add
jno
dec
cmp
push
mov
leave
nop
jmp
or
in
hlt
clc
mov
push
push
mov
xchg
ret
xor
lcall
popa
nop
push
mov
leave
nop
jmp
pop
and
xor
mov
jge
push
mov
xchg
ret
add
mov
add
inc
and
nop
clc
repnz
cld
jae
in
in
in
add
movsl
mov
nop
clc
repnz
cld
jae
add
add
movsb
mov
loope
dec
push
nop
clc
repnz
cld
jae
add
add
bnd
jmp
ss
clc
repnz
cld
jae
add
add
add
push
inc
add
inc
mov
add
mov
sahf
jp
push
push
mov
xchg
ret
andb
add
mov
rclb
jae
add
xchg
cmpb
jae
mov
leave
nop
jmp
in
push
pushw
add
nop
clc
repnz
cld
jae
in
int3
into
add
jne
nop
clc
repnz
cld
jae
add
mov
push
push
mov
xchg
ret
add
lret
movl
loopne
add
nop
clc
repnz
cld
jae
lret
sub
add
sub
and
int3
add
out
mov
fldt
nop
clc
repnz
cld
jae
mov
add
out
rclb
xor
and
sbb
add
data16
hlt
pop
cwtl
les
in
leave
nop
jmp
add
add
mov
or
jmp
xchg
in
add
add
push
cmpsl
mov
add
mov
xchg
ret
mov
add
add
add
rclb
nop
jmp
add
mov
data16
add
nop
clc
repnz
cld
jae
mov
sti
sub
or
call
nop
clc
repnz
cld
jae
inc
add
add
stc
mov
nop
clc
repnz
cld
jae
add
add
xchg
xchg
nop
clc
repnz
cld
jae
mov
push
sbb
call
nop
clc
repnz
cld
jae
push
lret
aam
add
nop
push
mov
leave
nop
jmp
into
add
xchg
add
pop
jmp
out
add
add
mov
adc
mov
nop
clc
repnz
cld
jae
add
xchg
mov
add
nop
push
mov
leave
nop
jmp
add
jbe
push
nop
clc
repnz
cld
jae
mov
je
testb
loopne
jne
nop
clc
repnz
cld
jae
sbb
imul
jg
nop
clc
repnz
cld
jae
imul
sub
add
inc
and
nop
push
mov
leave
nop
jmp
cmp
add
add
and
mov
add
jae
add
fiaddl
imul
cld
jae
sti
add
bound
xor
cmp
ret
add
mov
insb
add
add
loopne
add
jae
mov
mov
fwait
push
mov
xchg
ret
insb
mov
daa
add
jg
sub
and
idiv
incl
fiaddl
mov
mov
add
cltd
fistpl
nop
clc
repnz
cld
jae
mov
cmp
lcall
jle
add
mov
mov
xchg
add
nop
push
mov
leave
nop
jmp
add
or
jmp
movb
clc
repnz
cld
jae
inc
inc
add
add
mov
mov
nop
push
mov
leave
nop
jmp
push
add
add
mov
clc
nop
push
mov
leave
nop
jmp
xor
xor
inc
imul
nop
push
mov
leave
nop
jmp
add
cmpsl
add
add
addb
cmp
ret
imul
push
xchg
mov
rolb
adc
mov
xchg
ret
mov
add
or
imul
inc
in
nop
clc
repnz
cld
jae
call
orl
inc
add
mov
add
add
add
mov
nop
clc
repnz
cld
jae
push
add
add
outsl
add
nop
clc
repnz
cld
jae
push
add
sbb
rep
push
mov
xchg
ret
add
sti
push
push
push
nop
clc
repnz
cld
jae
add
add
add
in
jp
push
mov
add
add
add
mov
push
jae
xacquire
xor
into
and
inc
jae
nop
adc
push
stos
cmp
or
gs
in
push
aas
add
mov
and
popf
jmp
jge
inc
and
cmp
imul
mov
mov
or
jno
sub
lock
fnstsw
mov
sti
xchg
adc
cs
mov
in
hlt
push
add
sbb
call
gs
dec
adc
pusha
subb
push
nop
in
jmp
lcall
pusha
repnz
jmp
shll
jnp
addb
push
lcall
fstpt
pusha
loopne
fmul
pop
icebp
in
jne
loope
and
xchg
push
pop
scas
rolb
insl
dec
negb
push
push
test
sub
and
pop
sti
inc
or
mov
xlat
je
inc
rclb
mov
bound
xor
popa
inc
push
call
inc
call
cmp
sub
loopne
inc
lret
push
add
and
dec
shlb
rclb
fwait
sti
or
shlb
rolb
add
repz
ficomps
addr16
out
rcr
cmp
mov
adc
rorb
pusha
mov
shlb
fnstcw
mov
mov
inc
mov
loopne
mov
in
fcos
fwait
xor
pusha
xchg
loope
into
scas
mov
inc
sub
push
add
mov
or
and
ror
lret
add
jmp
pop
cmpsb
shlb
dec
pop
lret
rolb
mov
xor
lods
addb
add
mov
adc
mov
rcrb
inc
js
or
inc
mov
lcall
andb
sbb
cmp
in
mov
fwait
insl
das
lcall
iret
jnp
pop
leave
xor
andl
mov
dec
xchg
into
loopne
rol
fsubp
dec
sbb
mov
and
jp
sub
mov
fisttpl
xchg
or
and
mov
pusha
loopne
pop
jmp
inc
and
int
stc
jl
inc
inc
aad
mov
pushf
arpl
add
mov
xor
sbb
stos
aad
mov
andb
xlat
pop
mov
and
jmp
and
daa
ret
addb
loopne
and
or
test
inc
jmp
jnp
add
in
shrl
aad
test
mov
push
mov
and
add
lods
pop
pusha
push
pusha
mov
xor
sub
xchg
jne
leave
mov
loopne
pop
inc
imul
rolb
inc
inc
push
cmp
add
das
sbb
and
dec
scas
leave
mov
mov
mov
cmp
xchg
mov
dec
push
push
sbb
inc
cs
loopne
mov
popa
popa
sub
addb
xchg
ror
mov
adc
pusha
inc
push
pop
fisubrs
pop
loop
push
pushl
mov
and
cmp
adc
sar
int3
pop
mov
repz
mov
jg
dec
cmpl
inc
pop
out
into
sub
sub
cmp
movsl
dec
add
iret
mov
cmp
mov
xorl
cmp
mov
nop
inc
mov
jae
rorl
ret
adc
pusha
xor
outsl
lahf
sub
pusha
push
mov
inc
and
xchg
cmp
adc
fbld
scas
mov
push
jmp
pop
mov
andb
mov
add
shrb
inc
outsb
add
mov
add
lock
insl
ds
mov
cmp
mov
leave
cmpsb
mov
sarb
sbb
xchg
int3
popl
xorb
pop
pop
add
mov
mov
pop
icebp
clc
aas
popa
xchg
add
ror
xor
inc
lea
xchg
dec
mov
mov
inc
sub
clc
sahf
xchg
sub
sub
xchg
fnstenv
cmp
mov
fwait
pop
outsl
cmp
sahf
jmp
rol
adc
gs
and
stos
loopne
pop
inc
mov
ja
jl
or
movsl
popf
push
mov
stos
mov
inc
dec
mov
add
mov
and
inc
cmp
loop
pop
push
sub
add
ljmp
xchg
adc
and
and
ret
fdivl
out
mov
add
push
addr16
adc
mov
push
jb
leave
clc
pop
outsl
inc
mov
mov
mov
sub
add
sub
stc
out
out
addb
mov
pop
push
mov
and
call
sbb
jmp
fsubl
mov
mov
jbe
mov
mov
and
test
adc
adc
push
das
pusha
mov
mov
xor
pop
imul
popf
pusha
sti
clc
cmp
xchg
shlb
arpl
rorl
lahf
stos
xchg
mov
sub
xchg
cld
loopne
mov
bts
xchg
pop
iret
dec
pop
dec
aam
addr16
test
jg
pusha
pusha
sbb
jae
xor
mov
and
xchg
dec
sub
stc
push
mov
jb
add
and
loopne
loope
test
shr
or
pusha
cmp
stc
mov
dec
jbe
sbb
or
mov
in
and
sahf
rcr
daa
inc
mov
adc
movsb
add
rolb
sbb
pop
pop
mov
inc
mov
jae
dec
or
xchg
rclb
pusha
xchg
mov
xlat
mov
addb
inc
scas
push
cmp
dec
mov
jle
sub
add
push
leave
add
mov
imul
outsb
sbb
outsl
push
loopne
lahf
or
pusha
push
cmp
pusha
add
add
jae
lret
cli
sub
repnz
pusha
addb
call
add
jle
loopne
daa
insb
rcrb
adc
rcrl
fldt
pop
push
mov
gs
icebp
xchg
push
popf
inc
mov
xor
xchg
add
mov
fldcw
sbb
push
mov
jb
fwait
and
cmc
dec
mov
sbb
subl
out
repnz
lahf
cmp
cld
mov
rol
daa
jnp
ja
lods
out
je
scas
and
icebp
jno
iret
ret
cmp
pop
jmp
sub
mov
addr16
mov
mov
rcll
lds
aas
stos
out
xor
xor
and
lods
rolb
pusha
mov
mov
pusha
pop
push
fs
adc
cmp
data16
inc
mov
and
xchg
inc
sub
fimull
shlb
push
pusha
inc
push
mov
jmp
stc
dec
adc
fdivrl
insl
fdivrs
mov
and
and
aas
repnz
ss
and
dec
or
pusha
and
add
xchg
mov
cli
lret
ljmp
rcrb
mov
test
cmc
xchg
sbbb
sub
inc
popa
outsl
stc
imul
fsubs
xor
dec
push
loop
xor
test
loopne
add
pop
dec
insb
xor
mov
mov
dec
sub
pusha
and
loopne
rolb
add
pushf
xor
jle
loop
dec
mov
js
and
shl
add
inc
push
mov
add
pusha
push
and
adc
addb
adc
mov
ds
in
in
pop
add
inc
and
and
inc
into
sub
or
loopne
cmp
xor
inc
imull
cmp
xor
pop
push
cmpsb
shl
rol
and
jns
lods
lds
dec
mov
xchg
jge
pushl
xor
clc
pop
lods
addb
pop
pop
push
loopne
les
add
add
add
add
and
and
fcom
dec
xchg
push
add
fwait
gs
fisubs
inc
adcb
nop
inc
xor
xor
inc
movb
call
mov
and
shlb
mov
push
jo
mov
mov
dec
mov
cmpsl
xchg
dec
mov
shl
push
push
add
push
addb
or
mov
inc
xchg
mov
movsl
cwtl
adc
test
xor
leave
xor
mov
dec
arpl
shrl
and
orb
cmp
sbb
fadds
fdivrl
inc
lret
js
xor
repz
xchg
movsl
div
sub
pusha
lods
mov
loopne
fimull
sarl
cmp
loopne
mov
xchg
stc
jl
scas
xor
push
inc
inc
imul
push
push
push
inc
xor
rolb
and
shlb
xchg
pop
hlt
xchg
addr16
and
mov
xor
pop
sbb
stc
inc
push
mov
pusha
pusha
mov
ja
mov
inc
fldcw
and
in
xchg
pop
adc
xor
pop
mov
out
lret
or
sub
cmp
loopne
nopl
loopne
and
test
add
push
and
jecxz
std
jb
push
xor
cld
xchg
pusha
cmpsl
push
rcrb
inc
mov
lds
jmp
jns
loopne
dec
jge
jp,pt
mov
dec
mov
add
test
and
add
push
add
mov
inc
mov
shlb
push
pop
icebp
push
loopne
xor
test
and
loopne
lea
xor
push
mov
pop
popf
jo
sahf
cmpsl
push
push
int3
mov
out
pusha
pusha
out
mov
loopne
xchg
popa
push
repnz
in
ds
test
loopne
lea
jmp
push
cmpl
and
loopne
loopne
outsl
push
int3
xor
sahf
insb
mov
mov
sbb
inc
add
pop
daa
push
popa
and
pushf
imul
jp
mov
and
negl
loopne
mov
dec
pop
xchg
adc
add
mov
in
inc
call
test
dec
pop
fwait
pushf
orl
xchg
andb
addr16
mov
mov
mov
rolb
jmp
jmp
aad
inc
add
or
add
mov
pusha
pusha
ret
scas
mov
rol
test
sub
add
orl
mov
mov
je
scas
sbb
xchg
cmp
add
leave
adc
lods
sar
or
mov
mov
iret
fiaddl
outsl
movsb
and
nop
and
adc
in
sbb
mov
pusha
sbb
and
stos
mov
mov
sbb
ret
mov
or
xorb
sbb
sbb
sub
pusha
or
mov
fbld
add
mov
into
push
pusha
inc
xchg
stos
jae
inc
jb
xor
and
add
data16
les
fldpi
lcall
in
cmp
shrl
push
lahf
xor
inc
pop
and
test
push
jp
xlat
call
add
mov
cld
sbb
bound
xor
mov
xor
jp
add
add
popf
lds
outsb
ds
add
mov
and
shlb
lds
shl
dec
pop
sbb
xor
stos
and
sub
into
mov
fucomi
pushf
call
fsubs
mov
mov
pusha
orb
cltd
push
iret
pop
sti
shll
scas
imul
inc
mov
or
or
loopne
test
andb
shl
mov
cmp
mov
cmp
out
popf
xor
imulb
pop
aas
jns
mov
int3
je
shlb
jmp
and
imul
rol
inc
cmp
sarb
sbbb
and
xorb
push
negl
jns
add
andb
adc
lock
loope
ret
lea
inc
rcrb
inc
int
push
mov
pop
push
jnp
sti
jnp
add
fsubl
mov
subb
inc
inc
xor
xchg
sub
sbb
mov
in
inc
iret
in
loope
gs
sub
inc
mov
rolb
add
add
add
pop
xchg
xchg
stos
mov
add
test
and
push
rclb
xchg
cli
push
jns
xor
dec
adc
mov
mov
mov
rclb
clc
xor
mov
subl
push
and
nop
mov
test
hlt
mov
cmpb
shlb
sub
outsl
imul
sbb
rol
andb
sbb
adc
lret
ja
lahf
std
push
cmp
add
orb
daa
push
test
loopne
popfw
inc
cmpsl
stos
addb
pop
push
movsl
mov
add
mov
mov
xchg
das
inc
repz
mov
rcrl
kandnw
xor
movsb
inc
shlb
loopne
fnstcw
cmc
rolb
popa
mulb
inc
adc
lcall
in
pop
adc
adc
int3
xor
notb
sbbl
andb
leave
loopne
inc
mov
loop
or
pusha
pop
loop
xor
shl
nopl
cmp
xchg
mov
and
cmp
jg
mov
add
add
cmp
mov
push
or
add
inc
push
add
mov
leave
aas
lods
pusha
sarb
jne
loope
fimuls
fs
mov
inc
loop
cld
sbb
or
add
flds
pop
pop
pushf
cltd
jmp
mov
dec
bound
je
xchg
rcr
cmp
xor
sub
and
sbb
cmp
add
sbb
pusha
loopne
mov
mov
pop
clc
dec
lea
pusha
or
lods
inc
stos
add
xchg
js
mov
je
addr16
rcr
mov
xor
dec
sbb
std
pusha
jne
inc
and
add
sarl
test
insl
or
pop
lahf
adc
cwtl
daa
cltd
jne
ds
adc
in
pusha
loopne
adc
and
inc
mov
add
insb
sub
add
and
inc
nop
mov
lcall
xchg
dec
test
and
loopne
out
fld
jmp
and
out
iret
pop
push
out
push
pop
shll
fstl
jb
cmp
aaa
mov
mov
addb
push
dec
xchg
mov
add
add
out
mov
lea
addb
mov
andb
ljmp
outsb
aad
cmp
mov
out
push
andb
nop
movsb
loopne
test
mov
mov
mov
andb
sub
aam
sbb
and
adc
in
push
addb
lret
loope
shl
loopne
ret
ret
ret
shr
imul
andb
and
xchg
fdivrl
pop
aaa
ret
cltd
inc
stc
and
aad
and
pop
and
in
mov
loopne
jae
inc
xchg
xor
pusha
rolb
add
add
test
jne
inc
loopne
mov
mov
mov
dec
pop
push
and
cmc
sbb
mov
lret
push
dec
xor
pop
scas
shlb
xor
pop
or
rcr
pusha
repz
andb
mov
fldenv
mov
inc
sahf
addl
ss
cmp
add
ret
pop
adc
lock
cmp
iret
outsb
leave
aam
rolb
add
nop
stos
and
xchg
and
mov
andb
out
mov
pop
rorl
aaa
les
addb
mov
idivb
movsb
and
pop
inc
sbb
sahf
dec
scas
scas
mov
add
adc
test
and
shrb
dec
push
xlat
jecxz
les
lahf
fiaddl
fldpi
or
add
mov
gs
scas
pusha
and
pusha
aam
in
imul
mov
scas
add
pushf
inc
xor
in
cmp
mov
loop
or
push
rcl
mov
inc
inc
das
gs
mov
decl
ss
jle
mov
mov
push
rcrl
fiadds
mov
pop
push
cmc
and
and
enter
pusha
mov
roll
xor
inc
xor
push
add
loopne
dec
mov
xchg
mov
loopne
fidivl
andb
mov
out
inc
pop
dec
lods
mov
push
xor
addb
cmp
dec
addb
shl
mov
rolb
push
jb
cmp
scas
and
mov
fdivr
and
jle
mov
inc
mov
or
shlb
cwtl
repnz
cmpsb
mov
add
jge
cmp
dec
xor
cmp
add
mov
les
aam
jns
mov
cmp
mov
mov
mov
add
loopne
add
loopne
fwait
jle
scas
mov
sub
andl
or
inc
loopne
aaa
mov
mov
iret
jecxz
into
mov
ds
ficompl
adc
lret
stos
pusha
mov
testb
mov
lods
and
stc
ljmp
jo
and
mov
mov
mov
and
and
lahf
and
loopne
mov
sub
in
lret
lock
jnp
imul
pusha
fisttpl
mov
and
lret
fucomp
push
addb
add
into
test
sbb
and
arpl
jp
and
mov
shrb
sbb
add
xor
daa
sbb
add
hlt
lods
jle
mov
pusha
sarb
loopne
xchg
lock
mov
cmpb
int3
inc
add
jbe
fbld
loopne
jo
in
jle
cmpsb
pusha
inc
mov
rcl
nop
pop
loop
add
cmpb
insl
andb
pop
cmp
loopne
add
inc
pop
and
ljmp
xor
dec
mov
cld
mov
mov
subb
shlb
or
add
fistpll
push
test
cmpsb
and
mov
insl
rcll
addb
xchg
adcl
mov
push
pop
je
push
sti
je
and
movsb
mov
inc
inc
pop
mulb
jo
dec
insl
daa
dec
adc
jge
add
mov
ret
ret
xor
sbb
mov
stos
in
cmp
add
xchg
jbe
pusha
loopne
add
sahf
loopne
idivl
and
inc
cmp
xchg
mov
sbb
out
push
pop
mov
mov
sbb
sbb
sub
loopne
lea
fsubs
loopne
dec
in
aaa
lcall
jae
cmc
add
das
adc
adc
sarb
rolb
pusha
add
jmp
rolb
ret
sub
cmpb
push
gs
xor
push
shlb
mov
jnp
cmpsl
sahf
stos
xor
pop
jno
inc
mov
pusha
leave
out
adc
xchg
mov
andb
jl
jbe
xlat
stos
xor
icebp
rclb
int3
jl
xchg
cmp
dec
adc
xor
repz
sbb
roll
sbb
or
idiv
aas
push
push
sub
pusha
xchg
sub
les
loopne
cwtl
or
mov
and
sub
jne
xor
cmp
fistl
xchg
mov
cmpsl
sbb
scas
sti
into
data16
cmp
pop
imulb
andb
mov
sbb
pusha
shlb
andb
cld
cltd
rolb
push
and
ret
popf
jmp
data16
jno
int
addb
ss
pop
mov
insl
jge
dec
in
jb
rcll
pusha
inc
add
in
mov
andb
xchg
push
xor
mov
push
mov
pusha
xchg
into
bound
inc
mov
add
xchg
mov
push
cmp
pop
daa
sub
cmp
jo
rol
xor
sar
nop
inc
jb
add
je
and
mov
inc
xchg
addb
and
inc
pop
push
in
jo
mov
add
cmc
pop
gs
xchg
arpl
xchg
std
andb
imul
mov
movsb
add
and
in
dec
lods
andb
scas
mov
aaa
popa
inc
popf
cmc
xor
in
pop
dec
push
fmul
test
inc
pushf
les
add
xchg
nop
mov
out
push
in
pushf
addr16
add
imul
es
addb
add
shlb
sarb
adc
adc
cmp
mov
test
and
pop
mov
inc
test
inc
shll
mov
add
outsb
pusha
mov
pop
sbb
sbb
inc
ss
inc
js
sar
rcll
rolb
push
jle
hlt
jae
nop
sub
and
pusha
addb
dec
inc
pop
cmp
mov
and
add
and
and
add
pop
inc
and
repnz
std
pushf
jae
nop
repz
add
loopne
pusha
loopne
popa
movsl
std
lea
mov
push
or
shl
mov
in
imul
mov
mov
dec
cmc
xchg
fsubs
mov
push
add
and
les
pusha
loopne
fiadds
in
js
sub
add
aas
sub
imul
lcall
cmp
pusha
and
and
sub
and
pusha
and
jae
cmpsl
sub
xor
repz
pushf
or
add
call
jo
dec
jmp
or
shlb
loopne
aam
inc
inc
sbb
mov
arpl
aam
lcall
push
mov
push
mov
mov
adc
mov
inc
mov
cmp
inc
xchg
inc
gs
sub
add
int
lds
dec
rcrl
stc
aas
jmp
inc
adc
cmp
jb
jnp
iret
xorl
cmc
pop
inc
pop
cs
sarb
aas
adc
addl
pusha
jecxz
lret
fsubr
fisubl
loop
sub
add
or
lret
push
pop
rcll
add
jae
icebp
int3
mov
and
pop
inc
jmp
test
mov
sub
dec
stc
fcompl
pop
inc
fsubr
jle
shrb
push
andb
sub
lds
movsb
and
inc
inc
cmpsb
inc
mov
pusha
loopne
push
sbb
btc
adc
push
push
inc
add
ret
ret
xchg
stos
add
addr16
movsl
dec
ljmp
addb
dec
pop
adc
shl
arpl
add
js
xor
lods
inc
sahf
inc
nop
mov
aad
push
out
iret
nop
sahf
sub
inc
jg
cmpsb
inc
add
inc
inc
xor
lea
xlat
clc
sub
inc
xchg
push
sti
xchg
pop
addb
xor
outsb
lret
add
dec
inc
jmp
rolb
and
test
loopne
mov
and
sbb
aas
mov
mov
push
out
js
addb
or
int
adc
jg
pop
cmp
sbb
stos
xor
ds
jne
mov
xchg
in
push
dec
pop
push
aam
in
test
arpl
sti
je
sbb
or
test
loopne
popf
add
loopne
add
sbb
hlt
mov
xchg
xor
aaa
enter
add
loopne
int
addb
dec
test
mov
mov
sbb
shlb
das
jg
xor
andb
insl
dec
pop
jne
xchg
fidivs
stos
push
dec
dec
loope
lds
dec
mov
push
cmc
fsubrl
lock
pop
pop
dec
jp
cmp
out
add
movsb
rolb
xor
mov
rol
andb
incl
inc
loopne
pop
out
jb
jle
add
shr
lahf
sarb
faddl
mov
pusha
push
call
and
mov
inc
loopne
mov
and
loopne
fnsave
mov
xor
clc
mov
add
and
add
rorb
mov
mov
test
add
push
dec
dec
sbb
inc
inc
icebp
add
insb
rorl
cmpsb
and
leave
mov
loopne
iret
movq
daa
jl
sub
subb
push
test
insl
cltd
pop
cmc
push
mov
sbb
dec
jns
ds
ja
lds
pusha
add
andb
mov
inc
or
and
pusha
inc
mov
rcrb
mov
loopne
popf
sub
fisubrs
mov
xlat
lret
mov
dec
popa
fsts
es
andb
lret
andb
rclb
imul
mov
popf
addb
jge
jle
pop
jns
cmp
jge
sub
add
pop
xchg
aaa
mov
sub
repz
andb
inc
jno
je
and
mov
loopne
mov
rol
daa
cwtl
pusha
stos
inc
sbb
test
sub
add
inc
or
rol
les
sub
test
push
sub
orb
cs
pusha
outsl
jg
cmp
jo
loopne
cmp
dec
sbb
iret
pop
fld
xchg
test
lods
cmpsl
adc
and
loopne
in
shrb
popa
xchg
add
imul
shlb
push
inc
mov
xor
mov
add
outsl
mov
lret
ret
sub
shl
movsb
shl
sbb
jmp
roll
jno
dec
dec
fwait
inc
shlb
inc
adc
movsb
and
lods
add
sbb
xor
inc
shlb
xchg
push
icebp
int
fcmovne
rcrb
cmpsb
addb
jecxz
add
lret
rorb
rorl
aam
scas
add
bound
sbb
push
push
push
daa
sub
cmp
and
rclb
pop
xchg
mov
nop
rcrb
lds
mov
int3
mov
or
inc
fcom
xchg
mov
or
dec
pop
jp
inc
loopne,pn
into
sub
fstpl
add
jg
es
jl
and
cld
jg
mov
pop
andb
popa
leave
scas
test
add
or
addb
adc
in
arpl
rolb
psllq
rcrb
ljmp
ss
cmp
add
shl
loopne
push
inc
mov
or
fistpl
and
jno
jno
jnp
cmp
pop
mov
xchg
loope
jp
adc
xor
pusha
pusha
dec
and
and
fwait
mov
mov
add
cmp
sbb
jb
pop
int
loop
fbstp
loopne
popa
sbb
jecxz
loope
xchg
and
mov
add
adc
inc
test
aam
cmp
cmc
mov
adcb
pusha
ret
inc
add
cmp
jl
cmp
lock
test
fs
iret
mov
and
pop
lcall
lcall
dec
mull
push
ret
mov
icebp
jmp
mov
outsl
or
jge
pusha
inc
leave
xchg
jbe
andb
mov
daa
pop
push
sbb
push
loopne
add
and
jmp
in
iret
int
cmp
xchg
js
push
pop
or
loopne
ljmp
pusha
mov
dec
jo
pushf
dec
push
add
cltd
enter
nop
inc
pop
out
mov
hlt
xchg
cmc
mov
add
adc
inc
rolb
sbbb
cmc
icebp
adc
addb
inc
inc
dec
fistpl
cmp
and
mov
add
mov
jecxz
loopne
call
add
daa
das
lret
mov
adc
mov
jae
add
cmp
mov
push
and
mov
movsb
mov
insb
ss
out
sub
xchg
xor
lds
xor
inc
xor
aaa
dec
mov
hlt
mov
cwtl
adc
pusha
movb
fwait
cld
cmc
in
mov
loopne
inc
mov
fmull
rolb
xor
int
jle
test
add
add
aad
scas
mov
xchg
pusha
sub
sub
pusha
bound
inc
test
pusha
or
pusha
mov
outsb
lret
inc
jbe
inc
stos
inc
loopne
and
jno
shl
add
pusha
mov
sub
loopne
lcall
clc
data16
dec
mov
xor
xchg
adc
loopne
xor
arpl
or
and
and
out
fidivrs
or
fs
sbb
inc
push
push
or
inc
and
sbb
cmc
and
and
arpl
inc
and
dec
ret
fscale
cwtl
xchg
insl
lahf
mov
andb
inc
inc
mov
mov
mov
andb
gs
movsl
out
mov
and
add
push
add
enter
mov
pusha
xor
add
jb
and
xchg
push
loopne
sbb
inc
adc
jge
shlb
adc
pop
mov
pop
jae
sbb
aad
std
addb
pop
or
xor
cmp
sbb
or
sub
pop
cwtl
aad
cld
les
xor
int
or
jo
or
loopne
cmpl
dec
addb
add
shlb
sub
pop
adc
iret
pop
and
std
add
loopne
cmp
and
subb
popa
mov
movsl
jecxz
notb
add
mov
leave
mov
xorl
lret
les
fwait
and
add
test
loopne
cli
inc
push
mov
dec
xor
mov
sbb
aaa
aas
std
mov
dec
mov
and
add
adc
mov
or
cld
inc
jg
pusha
pusha
pop
push
popa
jae
aaa
xor
or
inc
xor
xchg
push
inc
ljmp
xchg
inc
dec
pop
and
sub
sbb
aad
mov
xor
inc
cmc
out
in
xchg
rcr
loopne
adc
or
mov
enter
imul
shlb
xor
fstpl
mov
xor
sub
and
popa
pop
mov
bound
xchg
xchg
mov
xchg
faddl
xchg
loopne
add
mov
pushf
out
cmp
lcall
and
cld
imul
inc
aaa
imul
mov
int
addb
add
pop
incl
or
push
iret
sub
andb
inc
jl
shl
les
adc
mov
test
inc
mov
xchg
jae
mov
add
or
and
sahf
imul
push
aad
movsl
sub
stos
sbb
je
push
pop
dec
jge
loopne
or
rolb
enter
cli
cmp
std
xchg
inc
shrl
stc
and
add
rorl
lds
rclb
dec
pushl
bound
fadd
dec
push
in
push
andb
or
xchg
mov
xchg
scas
andb
inc
inc
das
pushf
inc
mov
imul
stc
dec
sub
fdivl
add
sbb
test
in
out
mov
les
cmp
movsb
inc
pusha
lahf
int
and
jmp
sbb
pop
xlat
push
rorl
rorb
pop
iret
pop
inc
sub
rclb
xchg
gs
push
pop
xlat
mov
into
sub
pusha
inc
fwait
sub
loopne
insl
ret
stc
mov
rol
test
jno
mov
call
popa
xchg
shrl
pusha
imul
pusha
pusha
jge
jge
stos
loop
push
decl
loopne
inc
cmp
cmc
mov
push
sub
mov
sub
xor
dec
sahf
fnsave
ds
fdiv
shl
pushf
push
nop
dec
and
cli
xchg
jmp
mov
and
inc
push
inc
repnz
xor
sbb
pusha
or
mov
nop
push
clc
inc
push
lcall
pusha
imul
addr16
dec
cwtl
mov
push
outsb
mov
pusha
pop
ljmp
add
and
loop
popa
jecxz
mov
push
mov
dec
into
fstpt
adc
inc
inc
lods
add
addb
pop
fimuls
add
subl
imul
sub
sub
mov
add
dec
dec
jns
stc
sahf
sub
and
push
pop
pop
iret
test
jb
xchg
nop
ret
push
popf
aas
lea
mov
roll
inc
scas
rolb
sbb
out
dec
jns
xor
ret
inc
jne
sarl
mov
sub
fcompl
addb
fcmovbe
adc
adc
pusha
pusha
pop
arpl
add
pusha
shrl
xorl
ds
cltd
ret
fcomps
loopne
jno
clc
push
dec
test
pop
mov
pusha
inc
call
pop
xchg
and
or
loope
fs
pusha
mov
push
bound
into
sbb
sbb
rol
andb
adc
out
inc
cli
adc
stos
inc
or
add
add
aas
js
pusha
adc
push
ret
cmp
push
pop
push
mov
sub
add
daa
rolb
sbb
cmp
mov
repz
mov
mov
call
out
pop
in
push
fs
mov
loopne
femms
inc
loopne
cmp
add
shl
cmpsl
dec
lcall
mov
lods
int3
inc
push
sahf
push
jne
movsl
push
out
mov
xchg
add
mov
jg
enter
pop
pop
or
aad
push
das
insl
jnp
sub
mov
clc
cmp
rolb
pop
loopne
test
js
lret
add
insb
mov
ljmp
outsl
je
addb
and
mov
xchg
imul
xor
xor
push
xlat
fbld
and
shlb
dec
mov
adc
jnp
push
and
scas
xlat
cltd
sbbl
mov
popf
cmp
out
cmpsb
loopne
adc
add
mov
mov
shlb
mov
lahf
int
or
gs
imul
sub
fisubs
and
rorl
cs
hlt
addr16
push
std
das
sbb
pusha
ret
dec
loopne
bswap
pop
sti
xchg
dec
gs
dec
xlat
inc
add
daa
xchg
mov
cmp
ljmp
pop
adc
addr16
fdivrs
xor
cmp
xchg
fwait
or
pusha
sbb
mov
loope
push
out
in
jg
jo
jg
and
mov
in
das
nop
call
das
sbb
loope
rolb
or
out
sti
dec
mov
pushf
mov
inc
shlb
loopne
or
pusha
add
and
sub
imull
push
cmp
call
in
leave
adc
cmp
mov
das
test
int3
sbb
xor
mov
mov
inc
inc
mov
pop
in
je
inc
mov
pusha
ror
loopne
xchg
test
inc
mov
loopne
cmp
ret
jmp
and
mov
bound
mov
rol
add
loopne
mov
mov
inc
mov
and
xor
dec
mov
inc
inc
fldlg2
mov
subb
pop
or
pusha
aam
xor
loopne
cld
mov
inc
insl
fcmovb
jnp
loopne
mov
mov
loopne
loopne
add
test
mov
ficompl
mov
jge
incl
xor
pushf
jbe
loop
xor
jae
mov
out
and
inc
and
and
pusha
or
add
mov
scas
mov
fcoms
fnstsw
mov
or
jne
jg
imul
push
sbb
enter
inc
mov
andb
push
cmp
int3
lcall
inc
xchg
push
stos
add
scas
and
add
loopne
out
decl
andb
push
das
mov
sti
and
xchg
call
or
cmp
and
fmul
push
xor
sbb
xchg
inc
rorb
ret
jecxz
or
mov
and
adc
jb
mov
test
add
jp
js
ds
xchg
loop
repnz
negl
push
inc
adc
ret
pop
lret
push
shl
jmp
inc
mov
add
inc
shrb
popf
pushf
mov
jg
movsb
shlb
pop
filds
inc
lret
sub
jne
jle
cmp
xlat
ret
cmpsl
lret
sub
adc
cltd
jbe
loopne
in
adc
out
mov
dec
dec
sahf
into
cmp
adc
jecxz
sub
xchg
inc
sbb
push
inc
push
dec
mov
mov
dec
fsubr
inc
pop
jo
inc
into
xchg
mov
repnz
lret
shlb
and
inc
mov
rclb
lcall
add
shlb
push
sub
loop
xchg
push
dec
or
xorb
loopne
mov
loopne,pn
sar
push
fisttpll
mov
fs
cwtl
xchg
dec
pop
cmpsl
xchg
cmp
push
inc
inc
push
dec
push
xchg
cmp
sti
xchg
mov
push
pushf
addr16
ja
clc
mov
and
add
outsb
fwait
push
adc
mov
rol
imul
movsb
pusha
add
cmp
mov
and
sub
loopne
mov
rolb
arpl
sbb
xchg
lock
loopne
pop
cltd
in
rcrb
cltd
add
mov
add
and
and
or
sub
push
pusha
add
adc
xlat
test
loopne
and
scas
and
dec
jnp
andb
enter
mov
loop
push
data16
sub
loopne
int3
add
inc
ljmp
fisubl
test
adcb
push
xchg
push
nop
or
inc
jae
test
ja
aam
adc
rclb
adc
insb
mov
xor
dec
lret
xchg
push
ror
rcll
mov
and
sbb
and
xor
inc
sbb
into
add
and
adc
addb
cmpsb
rolb
or
cmp
loopne
je
ret
pusha
loopne
les
les
push
pop
cmpsl
xor
pop
adcl
stos
addb
push
shlb
sahf
mov
xor
repz
insl
and
sbb
cmp
jne
xor
addr16
cltd
push
outsl
repz
and
mov
shlb
and
or
rorb
sbb
int3
cli
or
loopne
dec
repnz
dec
xor
inc
push
pop
mov
push
or
rclb
xchg
inc
adc
jmp
rcrl
sysexit
jmp
and
and
out
push
or
add
mov
mov
add
add
cltd
inc
clc
fdivrl
es
and
aam
or
push
xor
in
data16
add
loopne
add
fwait
pushw
pusha
mov
mov
mov
fwait
into
push
and
or
inc
scas
test
add
adc
sarb
or
jo
sub
and
push
andl
inc
xchg
cmpsw
sub
or
sub
sar
jne
add
inc
rclb
mov
aam
cmp
rol
lahf
push
ficomps
xor
cmpsl
jg
jae
dec
rcrb
jns
mov
add
add
add
and
inc
repnz
pop
xor
jg
inc
mov
add
xor
int3
push
sub
lret
mov
fsts
add
cmp
shlb
pusha
std
pop
lahf
sti
and
and
sub
shrb
mov
stc
dec
js
int
int
or
testl
int
mov
add
pusha
mov
and
add
mov
out
lret
aaa
or
sub
and
dec
es
mov
arpl
mov
inc
push
push
dec
insl
test
xchg
adc
pop
jnp
stos
loopne
inc
movsl
daa
popf
inc
int3
lcall
loopne
mov
and
addb
jmp
stc
cli
into
outsb
mov
outsl
pop
jnp
push
into
popa
loope
mov
in
jbe
loopne
and
shlb
in
fcompl
push
xor
xchg
sub
inc
cmp
mov
xchg
test
xor
cmp
popf
xchg
ficompl
test
xor
das
dec
or
addb
data16
dec
sahf
xor
push
adc
inc
sti
cmp
loopne
in
fldl
pusha
add
testl
fisubrl
fwait
cltd
xchg
lods
inc
and
mov
movsl
add
dec
jb
dec
xchg
inc
iret
sbb
adc
dec
push
mov
inc
mov
inc
mov
cwtl
test
pusha
pusha
or
inc
xor
inc
sbbb
into
fldl
or
loopne
loopne
add
jb
ds
outsl
gs
sbb
ljmp
aas
jo
push
cli
mov
adc
xor
inc
stc
bound
jge
pop
push
push
inc
adc
jno
pusha
pusha
ret
in
cwtl
mov
jns
out
sub
shlb
lret
sub
or
dec
mov
or
loopne
pusha
xchg
test
and
push
add
stc
dec
gs
or
shr
sti
xchg
mov
jne
jne
mov
inc
and
rcr
or
movl
rclb
ljmp
adc
pop
repz
xor
mov
sub
aaa
sbb
insb
bound
pusha
andb
and
and
aaa
push
or
movzbl
movsl
lods
mov
sahf
lds
cld
mov
lea
leave
out
sbb
add
mov
dec
sbb
and
loopne
pop
daa
or
stos
iret
mov
or
cwtl
mov
inc
call
sahf
cld
xchg
popf
stos
fs
mov
negl
andb
or
cmc
jae
stc
push
jb
pop
inc
or
sub
loopne
leave
pop
xchg
xchg
inc
xchg
lcall
mov
xchg
inc
repz
adc
adc
enter
lods
scas
xor
or
add
or
mov
mov
ret
stc
cmp
inc
mov
pusha
jne
adc
mov
loopne
out
dec
fisubs
loopne
adc
push
mov
hlt
or
pop
jno
add
pop
mov
push
arpl
jne
xor
loopne
mov
shlb
and
or
sub
xor
mov
mov
lock
mov
adc
dec
test
push
xor
pop
push
das
add
loopne
jns
jno
adc
mov
mov
bound
pusha
rorb
clc
frstpm(287
test
shrl
jbe
sbb
sarl
xor
int
fcmovne
filds
jnp
push
add
idivb
cmp
push
xchg
push
ret
cmc
xor
mov
add
shl
lret
and
pusha
inc
or
pusha
aam
dec
fcmovnu
sub
inc
add
test
pusha
movsl
pushf
gs
or
xor
mov
or
outsb
cwtl
push
or
sarb
fwait
inc
negl
lods
inc
push
mov
stos
pusha
addb
cmp
xchg
popf
cmc
add
push
jecxz
cwtl
xchg
adc
std
push
fs
mov
xchg
push
push
pop
out
jle
push
pop
rcll
xchg
xchg
mov
xchg
mov
adc
pusha
loopne
in
mov
das
adc
push
mov
lods
inc
or
andb
inc
mov
jno
push
lock
jbe
test
int
ret
movsl
into
and
movsl
or
inc
jle
movsb
mov
mov
xchg
int
inc
nop
sbb
out
push
and
and
dec
loop
mov
sbb
mov
adc
mov
loopne
popf
dec
jae
scas
addb
loopne
push
and
jae
pop
push
cmc
xor
xchg
lods
inc
shrb
shlb
mov
arpl
subb
and
in
sti
in
mulb
ljmp
mov
adc
push
pusha
loopne
jnp
mov
xor
pushf
inc
mov
mov
shlb
adc
jecxz
lea
sbb
jecxz
inc
sub
call
sub
inc
push
sub
andb
mov
and
inc
arpl
sbb
cld
mov
out
sti
fistpll
and
loope
dec
ja
xlat
out
out
adc
xor
loopne
icebp
rorb
and
insl
inc
inc
stc
stos
in
andb
stos
cmp
bound
shlb
repnz
lods
inc
mov
fdivr
test
shr
inc
repz
push
sub
shll
adc
enter
inc
sub
sbb
mov
stos
add
call
adc
jnp
jl
fisubl
cmp
fstpt
rolb
dec
inc
mov
dec
repz
inc
or
fwait
sbb
sub
jns
lret
cmp
mov
dec
cmp
mov
or
rolb
insl
mov
inc
pop
jns
mov
hlt
mov
dec
cmp
andb
dec
arpl
movsb
mov
mov
pushf
dec
frstor
cmpsl
rolb
hlt
push
sbb
hlt
dec
out
popa
add
add
mov
pusha
mov
dec
out
add
addb
pusha
inc
int
cmpsb
pusha
add
mov
scas
add
pop
jno
out
adc
popf
test
inc
push
ss
iret
lods
mov
cmp
xchg
dec
ljmp
inc
push
jecxz
push
dec
in
mov
movsl
jns
mov
aad
mov
rcrb
mov
jmp
shll
pushf
inc
adc
pop
pop
scas
rorb
fists
adc
sbb
mov
mov
and
inc
jp
cmp
mov
rclb
lahf
push
jno
cmc
push
sahf
aaa
out
pop
jo
pusha
shlb
inc
mov
xchg
mov
cmp
sub
add
fidivl
repz
xor
mov
add
add
cmp
es
out
xchg
in
pop
sbb
add
sar
loop
jnp
or
cmp
stos
loopne
aam
stc
mov
mov
cmc
jo
loopne
inc
dec
aas
mov
and
pusha
inc
xchg
rcll
test
and
loopne
inc
inc
pop
outsl
jnp
shr
div
fimuls
add
inc
in
push
pop
dec
stos
pusha
and
xchg
pop
push
ja
addr16
fucomp
movsb
andb
out
and
shl
cmc
sbb
ss
xchg
lret
mov
add
pusha
popl
pop
pextrw
stos
mov
arpl
mov
mov
frstor
fnsave
and
loopne
les
mov
adc
xor
aam
jle
popa
jl
stc
push
mov
fnsave
cmpsl
sub
sbbb
daa
sub
movsl
bound
or
mov
cmp
sbb
insb
and
xchg
pusha
sub
add
lahf
fldt
mov
cwtl
sti
loopne
add
inc
stc
insl
inc
sbbl
movsl
mov
pusha
roll
mov
xor
pusha
fmull
lea
and
shlb
fdivrl
mov
movsb
inc
pusha
pusha
scas
and
dec
cli
mov
addb
aad
add
out
rclb
mov
inc
or
pop
out
xchg
dec
add
mov
and
paddsb
pop
adc
or
mov
loopne
outsb
pop
add
inc
xchg
sbb
mov
jl
fdivrs
loop
inc
xor
cld
clc
stos
loopne
mov
sub
mov
xchg
std
in
pop
test
add
or
sti
xchg
inc
mov
cltd
cmp
xchg
push
lods
inc
sbb
arpl
out
pop
stos
or
inc
andb
cmpsl
sub
leave
lods
inc
rcrb
or
mov
jae
loope
out
mov
fisttps
negb
call
xchg
std
adc
pop
dec
cmpsl
lods
enter
sub
cmc
mov
enter
aaa
push
pusha
and
add
loop
lods
dec
push
sub
xchg
or
scas
mov
inc
pusha
and
inc
clc
stos
lcall
and
loopne
jl
mov
enter
push
mov
sbb
lds
adc
loopne
lods
shlb
add
lock
aad
sti
sbb
dec
ja
cmp
jp
ljmp
xor
mov
and
add
cmp
sbb
inc
outsb
sbb
mov
mov
shlb
or
sub
sub
and
pop
test
das
and
inc
mov
sbb
and
add
add
cli
xor
mov
inc
and
addb
mov
inc
inc
pop
stos
rorl
pop
jnp
inc
or
rol
sbb
push
mov
clc
mov
loopne
shlb
add
xorb
aas
test
push
sub
pusha
mov
rcrb
add
cmp
push
jo
mov
fcmove
stos
imul
inc
test
inc
cmp
inc
loopne
shlb
fistl
mov
dec
out
popf
stos
in
fs
test
sahf
dec
popf
dec
dec
mov
inc
call
push
add
xchg
mov
jl
pop
or
add
lea
and
or
movups
add
and
sarb
scas
pusha
or
mov
and
add
ja
jne
and
mov
paddq
dec
scas
add
inc
add
mov
fadd
negl
loop
scas
inc
shrb
test
dec
inc
inc
and
cltd
mov
adc
jl
mov
push
loop
cmpsl
add
adc
lock
incb
test
fsubrl
rolb
inc
xchg
mov
in
sti
and
inc
xchg
arpl
std
out
movsb
pusha
add
xchg
sahf
fwait
out
leave
pop
push
inc
ds
ja
add
xor
inc
in
or
xchg
and
addb
js
xor
add
out
mov
xchg
lcall
jo
push
sbb
in
sarl
pusha
push
mov
push
xchg
call
fstpl
add
out
sub
loopne
stos
dec
imul
jl
jnp
loopne
sbb
cmp
adc
push
adc
inc
rcrb
mov
xchg
pop
fisubl
shlb
les
popa
mov
jp
pusha
add
cmp
in
add
lea
mov
jle
mov
movsl
push
shll
inc
jle
or
rol
add
mov
jl
push
shlb
popf
std
jmp
jp
pop
fucomip
int
into
hlt
xor
loop
dec
cmp
lods
jno
lods
xchg
sbb
and
cmpb
adc
dec
mov
inc
dec
mov
pop
nop
and
fs
movsb
loopne
repz
subb
pusha
jecxz
movsl
push
loopne
lods
and
and
xchg
lcall
lods
icebp
dec
popa
push
inc
loop
rcrl
push
push
loopne
cmp
push
repz
loopne
sbb
inc
sbb
mov
repnz
mov
add
and
arpl
addb
pop
cmc
jb
jecxz
jg
lcall
cwtl
imul
jb
xchg
test
mov
loopne
dec
out
stos
and
mov
push
and
cmp
nop
mov
fidivs
add
pshufw
loopne
mov
stos
rcrl
push
xor
xchg
rcl
aam
add
cld
hlt
sub
out
outsb
and
shlb
rcrl
pop
shrl
cmp
std
push
pusha
inc
push
push
outsl
and
out
imul
mov
jbe
push
cmp
or
pusha
int
addb
sub
scas
addb
addb
imul
or
mov
jmp
enter
sbbb
pusha
sbbb
push
cld
mov
iret
fs
out
push
xchg
jnp
xchg
in
rcll
mov
mov
or
shrl
mov
sub
shlb
mov
xor
and
pop
fsubs
add
loopne
and
rol
and
out
lods
push
fwait
rolb
pop
push
xchg
mov
mov
aam
push
dec
sbb
dec
inc
mov
add
add
cli
loopne,pn
mov
xchg
pushf
mov
test
loopne
loopne
arpl
xchg
imul
repnz
movl
sub
ja
mov
add
aam
bound
mov
sub
fcompl
data16
leave
adc
add
and
repnz
notl
pop
cmp
pop
push
pusha
shrb
xorb
imul
and
mov
and
fs
lods
add
nop
pop
inc
and
sub
loopne
test
pusha
cmc
enter
sahf
or
ret
mov
push
insb
in
popa
mov
and
push
fcmovnu
jmp
xchg
cmpsb
loopne
lcall
in
jmp
jmp
push
sbb
jnp
jg
mull
lcall
and
mov
dec
dec
dec
cld
or
mov
push
loopne
pop
stos
pusha
loopne
sbb
xchg
push
imul
pusha
inc
lds
sarb
les
lret
out
daa
jecxz
dec
xor
xor
and
jnp
jg
xchg
test
rol
dec
mov
outsl
lds
rcrb
stos
aad
mov
in
jmp
stc
dec
xor
pop
cmpsl
and
fwait
cmpsl
fs
loope
testb
adc
adc
push
sbb
addb
sbb
add
pusha
adcb
int3
mov
rorb
int3
out
lahf
andb
addb
fdivrl
rol
pop
cmp
add
enter
inc
mov
frstors
xchg
mov
loopne
xor
adc
pusha
or
sti
popf
repnz
and
lods
lods
sub
and
pop
lret
sti
and
add
in
cs
std
mov
lret
in
test
ljmp
rcrb
jns
in
jl
test
inc
sahf
mov
daa
into
pusha
mov
pop
testb
mov
mov
pusha
adc
ss
imul
leave
into
xor
and
and
push
mov
ret
mov
pop
shr
mov
and
fildl
and
scas
and
dec
imul
xchg
add
adc
in
gs
addb
adc
dec
push
stos
lahf
dec
scas
loopne
pop
push
xor
adc
lods
lea
push
and
or
mov
outsb
jl
call
ljmp
pop
lret
loopne
outsl
mov
test
pop
or
andb
add
lret
and
sbb
pusha
and
add
mov
adc
jecxz
inc
jp
aaa
std
push
xor
lea
push
int
call
dec
xchg
pop
outsb
push
loope
mov
adc
cmpl
pusha
cmpb
out
cli
popf
push
jmp
mov
xchg
ljmp
add
adcb
pop
aad
mov
mov
in
mov
push
dec
jl
jp
or
call
ror
sub
pusha
mov
dec
bsf
mov
int3
in
je
leave
movsb
add
imull
shl
cld
andb
mov
mov
loopne
call
mov
loopne
clc
inc
push
mov
mov
sub
adc
adc
pushf
inc
jl
loopne
jbe
pop
out
outsl
push
dec
shll
ret
orb
rcr
pop
push
ljmp
mov
push
and
and
and
and
inc
and
faddp
popf
fcomi
add
testb
and
dec
xchg
xor
out
xchg
dec
out
jle
loope
jo
push
movsb
loopne
inc
mov
hlt
mov
mov
rcrb
mov
mov
cmp
mov
pop
sarl
nop
sub
inc
xchg
sbb
push
jno
cmp
pop
xor
cltd
mov
gs
jl
shrl
xchg
mov
dec
movsl
push
sbb
mov
mov
mov
stos
or
loopne
in
jo
jb
sahf
jb
jae
notl
and
xchg
dec
lea
add
orb
sbb
cwtl
mov
and
mov
scas
iret
movsl
clc
ds
inc
in
repz
push
les
pop
stos
loopne
bound
icebp
sti
leave
pop
or
xchg
inc
js
les
push
outsl
dec
lods
test
inc
pusha
std
xchg
out
addb
pop
pop
lret
aaa
xor
push
mov
inc
stc
xor
jmp
imul
mov
sarl
inc
jnp
inc
pusha
sahf
or
mov
and
sub
sarb
and
and
and
xchg
xor
cmc
xchg
pop
icebp
sbb
or
adc
pop
add
addb
jo
dec
out
nop
or
add
scas
xchg
adc
movsl
jp
popf
int3
imul
daa
mov
mov
cs
xor
sbb
jns
insl
jl
dec
pop
or
ss
sti
pop
fidivs
mov
mov
pusha
cmpl
add
xchg
maskmovq
test
push
and
mov
adc
pusha
sarb
int3
loopne,pn
imul
jne
out
cmpsl
ficompl
adc
adc
xchg
cmp
arpl
aas
lods
pop
fistpll
call
shlb
clc
iret
lods
and
inc
and
addb
rolb
scas
loopne
cs
pusha
enter
pop
cwtl
fidivs
jo
loope
pop
add
pusha
pop
mov
in
imul
xor
fcomps
xchg
dec
in
or
rolb
addb
pop
repnz
inc
and
gs
addb
loop
mov
push
sti
jnp
xchg
mov
pusha
leave
clc
or
inc
and
and
mov
loopne
adc
adc
hlt
repz
scas
fldt
cmovae
and
or
add
jnp
clc
popf
jmp
jmp
jl
xchg
out
popf
sbb
mov
rolb
mov
in
mov
andb
lods
inc
mov
cmpsb
inc
inc
arpl
aam
mov
push
inc
push
jo
jp
pop
mov
push
outsl
xor
push
sub
inc
bound
addb
ljmp
ret
scas
loopne
lods
inc
inc
mov
or
or
inc
sbb
sbb
mov
test
stos
inc
loopne
test
add
fnstcw
mov
movsl
lea
pusha
push
push
lods
addr16
jns
pop
inc
cmp
call
jb
test
shlb
loopne
sbb
mov
cmc
loop
push
push
cld
xor
dec
pop
hlt
loop
jecxz
js
in
pop
push
inc
loopne
pop
pop
enter
pusha
inc
movl
nop
xchg
or
test
pushf
popf
xor
idiv
adc
cmp
ja
mov
andb
cmp
iret
insl
pop
clc
mov
inc
pop
sub
bound
loopne
in
fstpt
mov
and
das
icebp
inc
pop
mov
and
jmp
mov
adc
mov
sub
roll
sar
decl
out
dec
dec
mov
das
scas
and
xor
fstpl
fcmovu
jno
cmp
mov
mov
in
ret
mov
sbb
js
stos
xlat
mov
sub
notl
adc
xor
pop
in
mov
iret
clc
add
add
mov
and
cltd
lcall
lock
mov
and
loopne
sub
loopne
adc
mov
push
notl
leave
aam
pop
movsl
jae
testb
add
mov
xchg
fimuls
adc
xor
fdivp
inc
aaa
or
aaa
push
push
nop
mov
xchg
stos
addb
notl
sub
loopne
or
lods
pop
adc
cmp
inc
mov
fistpl
repz
outsb
cmp
pusha
xchg
aad
mov
outsb
loope
mov
clc
sub
push
cmp
js
jae
push
lock
sbb
popa
fdivrl
cmp
aas
andb
aam
inc
test
and
add
ret
sbb
testl
repz
mov
pop
leave
jmp
enter
inc
sbb
mov
sahf
push
pushf
rcll
sti
sbb
inc
add
inc
sub
loopne
adc
outsl
jb
mov
mov
loopne
or
shl
in
loopne
loopne
and
inc
in
xchg
iret
outsb
test
and
test
sbbb
sahf
fisttpl
movsb
add
inc
lret
dec
hlt
imul
orb
shrb
stos
and
mov
fcompl
es
jo
andb
dec
jae
jmp
aam
ja
das
aas
jno
lcall
outsb
insb
outsb
ljmp
insb
andl
add
inc
fnstenv
inc
push
popa
jne
shlb
loopne
call
push
or
and
roll
add
add
inc
aaa
mov
out
xchg
popa
ret
sbb
cmove
test
push
stos
mov
add
sldt
mov
test
scas
aad
push
mov
jg
or
and
inc
test
pusha
imul
jmp
mov
aaa
int3
lahf
mov
test
inc
sbb
xchg
mov
mov
lea
inc
sahf
insl
stos
add
mov
aas
pop
mov
add
push
sub
xor
mov
and
andb
inc
stos
mov
xchg
sahf
jns
push
fists
fcom
cmp
cwtl
mov
cmp
mov
inc
cmpb
and
scas
mov
mov
mov
cmp
addb
cld
nop
iret
je
inc
xlat
dec
push
pop
add
pop
mov
and
int
adc
pop
jne
mov
dec
loopne
xor
outsb
popa
pop
ficoml
cmp
add
xchg
stos
shlb
sub
cmp
sub
inc
mov
stos
xchg
fwait
xchg
call
jle
and
test
mov
popf
out
lret
xchg
xor
jmp
lods
into
mov
jg
mov
push
add
inc
ja
add
pop
test
mov
push
arpl
xchg
bswap
push
cmp
dec
cmp
cmc
add
inc
jl
scas
stc
pop
int3
repz
test
sbb
lahf
decb
and
jle
mov
sar
lahf
jmp
loopne
sub
pop
sbb
movsl
pop
iret
sub
loopne
loopne
rcl
loopne
jmp
add
arpl
daa
push
jae
jecxz
imul
xor
mov
imul
mov
psrlw
push
sub
pusha
pusha
lock
outsb
mov
aam
pop
cwtl
and
add
cvttps2pi
pusha
enter
aad
icebp
jmp
dec
out
push
or
mov
add
loopne
mov
and
inc
cmp
add
mov
add
das
les
ljmp
and
movsb
inc
inc
cltd
bound
mov
sti
cmpsb
pusha
andb
adcb
shrb
mov
push
mov
js
ret
mov
mov
ss
lret
add
mov
movntq
and
jl
pop
pusha
and
je
xchg
pop
fsubrs
lods
jge
addb
mov
out
pop
xchg
fcoms
mov
testl
daa
into
inc
dec
outsb
push
or
es
mov
call
cmp
pushf
push
sbb
loop
scas
mov
mov
popa
cmp
cmc
mov
lahf
aaa
xor
insb
push
rol
and
into
repz
mov
cmpb
mov
add
mov
lock
add
or
and
jo
out
inc
insl
lods
std
out
arpl
mov
cmp
and
dec
jg
shll
enter
test
loopne
dec
ljmp
mov
push
mov
mov
ret
push
ja
outsb
adc
push
mov
xchg
aaa
fimuls
pusha
je
add
lret
jecxz
or
mov
push
add
sar
in
rep
and
xchg
cmp
aam
rcll
or
rcrb
sub
outsl
jmp
sub
rorb
in
dec
fld
jne
cld
repz
mov
clc
xchg
or
out
scas
and
add
xor
popf
and
inc
ss
pusha
add
add
iret
jl
fdivl
jnp
sarb
cmp
add
push
pusha
rcl
mull
add
mov
andb
xor
jb
shlb
add
mov
mov
pusha
xor
and
mov
movsb
addb
inc
loopne
rolb
inc
jp
jecxz
xchg
push
push
jb
arpl
mov
cmp
dec
cmp
mov
cmc
xor
or
and
add
popf
int3
out
loop
push
dec
jp
inc
and
ret
mov
in
mov
imul
aas
out
mov
jg
andb
add
lret
fwait
test
rolb
inc
imul
xchg
clc
ja
add
add
pop
sti
std
lahf
or
lcall
jnp
xchg
lahf
ret
or
mov
and
icebp
das
shl
inc
clc
mov
out
sbb
dec
scas
and
adc
fcompl
and
rorb
pusha
test
and
fadds
cld
mov
mov
mov
pusha
xchg
out
shl
adc
ret
pop
xor
jge
mov
add
loopne
ret
inc
andb
cwtl
mov
loopne
and
lcall
dec
push
shlb
mov
repnz
inc
sarb
loopne
call
sbb
dec
popa
fisttpl
jae
pop
push
arpl
fists
fdivl
mov
idivb
or
loopne
pop
hlt
icebp
and
rclb
insb
jle
pop
xchg
and
jmp
add
loopne
mov
xchg
dec
add
adcb
adc
and
pusha
sbb
and
test
rolb
fnstcw
lcall
lods
ret
lcall
push
sahf
jg
and
int
cmp
add
stos
add
mov
add
lea
jne
cltd
daa
jmp
andb
sahf
xchg
push
sbb
add
jmp
adc
mov
adc
jp
xor
xchg
outsb
dec
inc
outsl
outsb
inc
mov
loopne
mov
test
loopne
jb
xor
dec
cmpsl
sub
pusha
jb
mov
aam
add
push
imul
pusha
mov
inc
and
xchg
xchg
mov
push
sub
mov
or
shrb
or
aam
into
mov
data16
shl
loop
push
pusha
add
aaa
dec
imul
cs
rorb
jge
xor
pop
stc
addr16
mov
mov
shlb
addb
lret
add
pusha
sub
pusha
adc
js
je
ljmp
sub
mov
and
loopne
push
cmp
movsb
pusha
and
jmp
and
rcrb
dec
lcall
inc
subb
je
adc
mov
mov
jmp
int3
lods
icebp
push
sbb
lds
icebp
dec
mov
xchg
lret
insl
pushf
lcall
adc
mov
and
test
movsl
sbb
xlat
push
inc
aaa
pop
mov
sti
imul
add
jge
mov
loopne
fs
popf
dec
jl
add
shl
cmp
pop
in
insl
push
dec
lds
scas
loopne
lds
dec
mov
or
test
add
jle
ds
leave
outsb
xor
push
sbb
jmp
or
dec
jne
pop
xchg
xchg
pop
push
popa
cmpsb
and
and
es
push
int
cmpsb
pusha
inc
cmp
cmp
out
hlt
popf
xlat
loopne
mov
out
mov
jno
inc
push
shrl
mov
loopne
lock
sbb
push
test
ror
mov
mov
xor
lods
aam
and
mov
and
stos
inc
and
out
sbb
addb
and
dec
push
xor
pushf
xchg
int
add
pusha
mov
mov
daa
imul
roll
mov
push
and
repz
cmpsb
and
push
fmull
push
addr16
cmp
inc
ss
add
adcb
lahf
icebp
pop
scas
shlb
or
xorb
mov
loopne
rclb
push
cmp
push
cmpsb
and
sbb
xchg
xchg
inc
cmp
add
out
cmc
cli
push
dec
mov
and
sbb
pop
push
aam
inc
loope
sub
das
out
or
mov
fstpl
das
out
test
pusha
popa
inc
in
inc
cmpsb
and
sbb
sub
out
rcrb
cmp
stc
bound
mov
push
sbb
test
mov
jns
test
add
stos
inc
and
js
sbb
push
pop
aad
mov
xor
sbb
adc
xor
cwtl
insl
icebp
mov
dec
lods
add
mov
mov
and
mov
inc
add
inc
pop
add
pop
movsb
pusha
pusha
lcall
pusha
loop
jmp
mov
rcrb
lods
adc
adc
pop
adc
outsb
cld
add
xlat
and
test
mov
ret
pop
mov
out
iret
ja
xchg
fnstcw
sbb
rcrb
dec
je
and
jp
xor
mov
lds
lea
mov
add
and
addb
fiaddl
dec
fmuls
mov
sbbb
shrb
mov
cmc
cmp
add
add
inc
loopne
rolb
inc
inc
pop
lods
pop
pop
dec
out
mov
xchg
adc
pusha
andb
lcall
aad
adc
mov
ja
sti
sbb
andb
bound
lret
jnp
dec
cmp
repz
test
and
ret
or
dec
inc
loope
gs
test
fsubl
jg
mov
xor
xor
mov
rcr
fistps
int
adc
loopne
arpl
scas
loopne
cltd
adc
xchg
or
xlat
ds
pop
repnz
cmp
rol
xlat
xchg
scas
cmc
ds
fimull
movsb
andb
rol
xchg
sbb
push
xor
adc
and
lods
add
pusha
and
rclb
and
sbb
xchg
aad
sub
cli
pop
cmp
and
jne
fistl
mov
addl
cmp
test
push
cmp
mov
test
pusha
mov
pop
das
pop
push
inc
mov
pusha
mov
jmp
arpl
pusha
inc
call
pusha
fnsave
mov
pusha
push
push
inc
mov
scas
add
data16
jl
clc
das
data16
xor
push
repnz
int3
xchg
fstps
scas
mov
jl
jg
mov
shlb
xor
mov
inc
lods
icebp
inc
sbb
loopne
inc
mov
mov
or
inc
push
pusha
and
inc
das
lret
imul
rolb
xor
dec
ret
mov
adc
push
jb
shl
xor
jo
dec
lret
mov
and
loopne
add
cli
inc
mov
mov
mov
jnp
mov
neg
je
and
and
movsl
mov
shrl
pusha
mov
bound
repz
lahf
repz
adc
stos
in
fs
loopne,pn
int
dec
arpl
lea
stos
inc
mov
mov
inc
mov
xchg
into
push
jb
jno
sti
repz
aad
xchg
hlt
leave
std
dec
jno
mov
cmc
fists
gs
andb
add
mov
mov
dec
les
pusha
adc
imul
loope
test
lcall
iret
sub
mov
sub
fildll
mov
cmpsl
ret
mov
pop
or
sbb
pusha
repz
adc
sbb
outsb
and
loopne
stc
sbbl
push
fisubrl
mov
add
outsl
jae
imul
pusha
add
loope
insl
xor
and
push
mov
inc
inc
xor
or
loopne
sub
loopne
mov
and
pop
data16
dec
shr
out
cld
out
push
sbb
pusha
add
jge
stos
sahf
mov
inc
sarb
fists
loop
fdiv
jb
mov
repnz
jne
dec
mov
sub
and
and
loopne
adc
pusha
mov
pop
push
sub
cmp
addb
out
jecxz
push
xchg
and
xor
in
rclb
aas
and
mov
pusha
dec
lock
push
xor
and
test
rcll
mov
cmc
repnz
or
inc
dec
dec
cwtl
dec
cmp
loopne
fimuls
loopne
mov
cmp
and
mov
cltd
xlat
pop
mov
aaa
jo
mov
ss
std
add
and
cld
ja
jo
jp
sti
test
rcrb
mov
dec
cmpsl
dec
add
xor
cmp
adc
nop
pushf
ss
aam
and
das
jecxz
fnstcw
add
rolb
addb
dec
mov
mov
idivb
jle
add
test
mov
and
add
rolb
shr
addr16
mov
add
dec
enter
xor
in
or
mov
xchg
xchg
mov
pusha
outsl
add
sbb
aam
cmp
int
mov
xlat
sbb
imul
icebp
int
jmp
pushf
leave
mov
jecxz
stos
add
loopne
nop
std
cltd
push
in
inc
mov
test
and
loopne
and
and
cmpsl
nop
sbb
data16
sbb
mov
decl
cmp
dec
cltd
pushf
or
pusha
addb
fsubs
sbb
call
mov
jnp
mov
stc
loope
inc
add
xchg
test
shlb
shl
pop
int3
sub
xchg
add
or
ljmp
inc
jl
movsb
inc
add
into
jge
mov
jne
cmp
pop
cmp
xchg
addr16
mov
test
sbb
mov
dec
iret
pop
add
inc
or
lcall
mov
and
loop
cmpsl
mov
jp
mov
imul
cmp
xor
or
loopne
loop
pop
sti
aad
xor
sbb
push
pop
int
pop
addb
andb
push
cli
popa
arpl
rorb
fldl
daa
ret
jge
test
add
je
ficoml
pop
push
out
repz
movsl
add
adc
push
dec
xchg
mov
pusha
gs
mov
andb
pop
dec
xor
pop
aaa
push
xor
call
je
mov
sbb
stc
stos
mov
rcrb
sbb
test
shlb
movsl
js
inc
aas
scas
mov
add
add
xchg
fs
mov
repnz
mov
mov
repz
lahf
dec
cmc
xor
push
loopne
andb
inc
add
cld
jle
shr
sub
cmp
dec
and
inc
pushf
cld
inc
sbb
mov
mov
stc
add
std
cmc
pop
pop
pop
cmp
sbb
sub
movsb
add
filds
out
jnp
imul
ss
lcall
leave
and
mov
inc
and
mov
lcall
mov
inc
loop
leave
adc
andb
and
and
xchg
push
js
sti
adc
sub
add
inc
scas
andb
xor
inc
and
and
xchg
fcmove
sarb
nop
dec
adc
pusha
cmp
loop
movsl
push
and
nop
cmp
mov
pop
aas
test
mov
and
jno
movsl
cli
icebp
aas
cmp
inc
ja
test
mull
ja
bound
cmp
add
fidivrs
jmp
jne
and
cmp
mov
inc
mov
adc
js
fsts
mov
add
cltd
push
xchg
bound
push
xor
inc
fdivs
inc
xor
test
pusha
xchg
push
and
mov
inc
out
flds
and
add
loopne
dec
jp
push
add
sbb
fldt
cmp
loopne
mov
shlb
sti
test
jbe
lds
cmp
addl
inc
push
and
push
mov
in
fisubl
and
adc
hlt
cmp
addb
dec
dec
aad
test
add
add
sub
pop
xor
sbb
add
dec
mov
mov
aaa
inc
popf
cmp
xor
mov
lock
cld
adc
lds
ret
and
pop
repnz
arpl
cmc
cmpsl
dec
rcr
shl
xor
mov
pusha
in
mov
rol
into
inc
push
jmp
xor
shlb
mov
inc
insb
or
out
push
gs
stos
sahf
vunpcklps
out
jbe
es
add
jae
push
sbb
ret
jge
cmc
adc
andb
or
out
sbb
shlb
mov
fcompl
add
lcall
dec
leave
hlt
out
mov
sarb
add
cmp
adcb
es
add
mov
shlb
fdivl
push
out
add
movsb
and
dec
push
cmc
movsb
rolb
push
pop
inc
cmp
or
rclb
jno
inc
ret
pop
adc
pusha
sbb
fidivrl
push
lods
fsub
mov
add
push
mov
sbb
fadds
inc
inc
and
subl
lods
mov
outsb
inc
cs
xchg
fistl
les
fistpll
rol
mov
fucomi
mov
out
or
aam
fsubrp
push
dec
jbe
jmp
mov
movsb
and
adc
loopne
inc
jno
js
test
shl
pop
in
mov
rolb
xchg
add
loopne
mov
loope
outsl
fcomip
lret
dec
into
iret
pop
jle
lock
imul
mov
inc
jecxz
mov
add
std
sbb
sbb
addr16
stos
addb
popa
jns
dec
inc
xor
pop
test
inc
push
enter
add
xchg
loopne
pop
mull
jmp
xchg
inc
xchg
rcl
dec
and
std
xlat
dec
stos
cmp
sub
gs
mov
ss
fcomps
repz
pop
cmp
mov
mov
add
ss
loopne
test
sti
mov
mov
inc
repz
ss
push
cmpb
mov
cmp
pusha
sub
andb
ss
rolb
jp
ret
std
pop
cltd
iret
jne
xor
mov
sahf
mov
fldt
repnz
inc
add
xor
out
pusha
loopne
out
scas
pusha
mov
dec
xchg
loop
call
sbbl
test
mov
stc
xacquire
pop
cmp
pusha
fscale
xchg
xchg
mov
adc
sbb
jns
pop
jg
push
jae
xchg
xor
adc
stos
or
rol
push
pusha
jns
mov
in
adc
pop
inc
repz
imul
sbb
inc
sub
pusha
shlb
and
add
mov
je
shlb
and
mov
scas
loopne
xor
add
jmp
aad
fcmovnu
es
xlat
cmpsb
pusha
inc
leave
in
subl
aam
out
push
popa
add
cmp
adc
and
mov
lret
and
add
bound
cmp
mov
pusha
inc
and
shlb
imul
pop
jbe
sbb
cmp
test
sbb
repnz
movsb
inc
pusha
xor
mov
sbb
popf
js
mov
push
xchg
stos
push
insl
sub
add
bnd
cmpsl
rolb
mov
insl
hlt
push
mov
int
and
inc
mov
dec
cmp
bound
outsl
ret
inc
adc
pusha
adc
or
pusha
jne
loopne
mov
push
mov
inc
ss
push
cmp
mov
push
stc
sti
cmpsb
inc
inc
mov
hlt
mov
sub
das
lcall
mov
lods
rcr
adc
cmp
inc
js
pushf
or
inc
insl
pop
dec
sub
inc
or
xchg
scas
add
aaa
push
andb
and
aad
mov
and
int
pusha
pusha
and
push
cmp
xchg
ret
loopne
sahf
mov
push
icebp
cmc
cmp
in
xchg
cmp
mov
cmp
movq
push
pop
xchg
mov
or
shlb
inc
in
in
lds
lret
adc
sub
loopne
out
cmpsl
pop
arpl
gs
mov
inc
test
pusha
es
adc
shl
fcmovu
pop
lahf
xchg
mov
imull
loope
adc
sahf
scas
loopne
mov
scas
xchg
cmpsb
shlb
testb
mov
ret
lret
movsl
aam
fidivrs
popa
push
int3
push
add
and
xchg
mov
mov
repz
rolb
aad
add
scas
ds
mov
or
aas
pop
fsincos
push
popf
push
mov
rcl
fbstp
adc
addb
imul
daa
mov
xchg
addr16
ljmp
cltd
addb
mov
mov
inc
sbb
mov
xlat
out
daa
mov
cli
mov
pop
mov
andb
ret
mov
push
arpl
filds
inc
add
aaa
aad
push
loop
add
in
mov
jl
out
xor
lahf
daa
pmuludq
shl
dec
in
xor
push
mov
add
sbb
xor
loopne
lret
cmp
inc
mov
enter
loopne
sbb
sbb
inc
or
shlb
ret
pusha
or
loopne
sub
jae
pop
stos
mov
inc
out
daa
push
dec
cmp
adcl
pusha
test
into
dec
cmp
inc
pop
push
in
pusha
loopne
mov
add
es
inc
mov
divl
pop
mov
xchg
popa
push
add
shlb
or
and
lods
add
pop
ja
loopne
xchg
in
scas
and
arpl
cmpsb
and
leave
lret
fwait
add
inc
inc
test
out
xor
inc
leave
xchg
and
imul
aad
mov
mov
loopne
xor
clc
leave
outsl
cmc
and
shl
dec
incb
jle
inc
xchg
and
add
lock
lret
mov
in
lcall
jnp
sahf
dec
scas
push
je
aaa
add
addb
shrb
testb
fnstsw
mov
aaa
nop
scas
inc
xorb
pop
into
cmp
iret
push
or
mov
out
push
and
inc
xor
mov
fs
cld
lret
jmp
push
pop
inc
lret
pop
sbb
imul
mov
pusha
mov
pusha
fcmovnbe
pop
push
fwait
and
and
je
in
jmp
scas
xor
add
pusha
or
jmp
pop
jge
movsb
shlb
pop
jle
nopl
sbb
and
fsubr
cmp
movsb
loopne
sub
mov
and
add
dec
sti
jno
mov
adc
adc
and
movsb
andb
rcr
arpl
sar
push
cmp
inc
mov
rolb
sti
les
add
push
loopne
mov
inc
mov
pushf
das
push
jl
fidivrl
test
mov
xchg
scas
pusha
and
fistpll
aad
or
pop
sbb
push
add
vmovapd
inc
xor
jmp
loopne
scas
and
andb
pop
inc
insl
inc
mov
mov
jnp
loopne
mov
jns
and
xchg
and
or
sarb
sub
mov
mov
out
xchg
imul
pusha
in
add
push
and
xlat
adc
arpl
inc
rcrb
sbb
cmc
cmpsl
bound
rol
push
dec
jmp
xchg
loopne
adc
loopne
jg
pusha
rorl
int3
add
cli
mov
lahf
pusha
stos
andb
outsb
push
mov
mov
inc
mov
popf
adc
cmc
adc
xchg
xchg
call
cmp
xchg
add
rorl
rorb
sub
pusha
movsl
sbb
or
add
insb
push
std
ja
push
inc
push
inc
fs
lock
lds
pop
xchg
fbld
jecxz
test
mov
rorb
lods
loopne
mov
push
mov
sbb
popf
jle
cli
push
ja
shll
mov
mov
add
andb
dec
and
lahf
jge
lret
inc
in
sub
out
cli
lea
pop
inc
das
sbb
xlat
dec
int
lret
mov
push
and
test
orb
cmpb
push
mov
hlt
pushf
movsb
mov
dec
aad
jg
and
pop
movsb
loopne
add
cmpsl
test
and
ja
mov
mov
stos
push
add
cmpsl
lea
xorb
xorb
shll
push
test
dec
popa
mov
sbbb
adc
imul
sti
dec
ljmp
add
add
xchg
clc
ret
push
lea
scas
mov
nop
mov
add
test
subb
pusha
push
and
mov
pusha
add
adc
ds
jns
mov
fwait
jbe
leave
lret
mov
shll
mov
add
cltd
sahf
movsb
inc
pusha
stc
out
out
imul
adc
rolb
enter
repz
rcll
test
mov
enter
loopne
insl
data16
jle
cld
sarb
in
push
fs
inc
xchg
cmp
pop
pop
adc
xor
and
lret
pusha
mov
rolb
fiadds
jge
xchg
sub
popf
dec
out
xlat
addr16
out
mov
mov
pusha
pop
imul
add
movsl
jg
pusha
add
pop
pop
mov
push
in
cmpsb
pusha
rorb
sbb
lods
add
mov
rcr
mov
adc
pusha
and
dec
bound
or
and
out
xchg
cmp
inc
gs
mov
cmp
sub
jge
es
pusha
push
push
dec
shlb
xchg
call
int3
lods
mov
mov
cmpb
xchg
jo
push
add
and
pop
imul
xchg
aam
mov
mov
push
push
and
loope
add
push
bound
jp
loop
mov
lahf
fbld
and
xor
fwait
add
loopne
js
pusha
inc
hlt
inc
sub
loop
sbb
push
and
repz
sarl
and
and
mov
shlb
hlt
xor
inc
movsb
pusha
and
nop
clc
push
mov
shlb
jno
aaa
pop
sti
and
xor
inc
push
mov
and
inc
scas
jne
out
fisubl
das
mul
cwtl
std
dec
xchg
xchg
shlb
scas
sub
loopne
sti
shr
loopne
add
insb
lcall
push
shlb
push
or
push
cmp
movb
addb
jecxz
sub
shlb
iret
push
pusha
loopne
xchg
jmp
cmc
nop
cmp
pop
and
mov
in
push
xchg
sub
inc
inc
mov
add
mov
loopne
scas
mov
loopne
stc
lea
add
dec
mov
push
mov
push
cmp
jg
mov
repz
or
and
lret
adc
andb
jno
and
loopne
aad
jb
cld
in
outsb
shlb
jl
fmul
cmp
mov
pusha
inc
jb
cmpsb
and
pusha
rclb
sbb
dec
std
push
in
repnz
jmp
jle
push
mov
nopl
sub
dec
fstps
ret
dec
icebp
mov
sbb
ljmp
sbb
and
outsl
ja
xor
lahf
mov
push
push
add
xchg
jl
cmp
dec
in
mov
fcmove
mov
inc
cwtl
push
rol
sti
mov
inc
outsl
test
lahf
push
lcall
pop
pusha
mov
add
add
sarb
movsb
add
insl
enter
ret
in
aad
push
in
stos
addb
pop
mov
shlb
insb
ror
cmp
xchg
cwtl
stc
dec
mov
mov
ficompl
jge
adc
out
or
mov
test
and
cmp
mov
or
jo
loope
cmpsl
mov
push
and
and
test
inc
sub
cmpsl
cmpsb
mov
add
sub
inc
mov
lret
lret
rcrl
imul
js
andb
and
rolb
xchg
loope
xor
in
jl
enter
pop
inc
inc
xchg
jmp
repz
jns
cmp
lcall
div
mov
out
mov
and
inc
push
dec
xor
inc
pusha
mov
pop
sbb
rcr
sbb
inc
loopne
mov
or
mov
andb
dec
ficoml
movsl
push
ret
and
pusha
stos
mov
mov
mov
adc
scas
add
or
subb
loopne
jae
movsl
gs
in
xchg
sahf
data16
popf
sbb
pop
xor
or
xorl
loop
xor
jmp
jge
or
sub
cmp
pop
sbb
lock
sub
xorb
pop
mov
addb
add
pop
inc
data16
sahf
cmpsl
ret
enter
mov
sbb
mov
or
adc
xor
xchg
arpl
hlt
repz
rcrb
xchg
stos
sbb
push
add
xor
icebp
mov
mov
pop
cli
mov
and
fwait
movsb
add
fwait
inc
adc
pop
pop
sub
pusha
test
clc
push
pusha
inc
push
aas
dec
lock
test
and
xchg
pop
and
inc
mov
orb
cmp
xchg
cmp
sub
xor
dec
add
mov
shlb
sbb
sbb
cmc
arpl
fdiv
fiadds
repnz
adc
scas
add
pop
sbb
mov
dec
adc
sub
and
lret
sub
cmpsl
push
mov
mov
and
inc
add
inc
pop
pop
sbb
add
clc
lods
loopne
popa
mov
insb
cli
cmp
popa
leave
sarl
mov
mov
testl
jb
xor
clc
lock
push
in
sbb
xor
xchg
rclb
pusha
mov
rcl
xchg
mov
ss
ret
xchg
inc
in
out
pop
call
mov
negl
pop
push
and
and
mov
andl
inc
std
iret
mov
xchg
or
test
xor
and
inc
jns
addb
and
add
push
jns
jne
jno
inc
and
xor
js
ja
push
daa
popa
mov
fs
js
xor
rorb
pushl
adc
push
jl
push
add
mov
andb
mov
out
insl
or
loopne
push
shl
addl
pop
fistpll
push
pop
xchg
jns
fistpl
mov
pop
dec
testl
mov
cli
and
and
jecxz
outsb
pop
out
mov
pop
fcmovu
mov
or
scas
xor
dec
pop
addl
test
dec
dec
adc
stos
leave
dec
or
push
dec
adc
cld
xlat
gs
mov
sbb
mov
add
and
mov
dec
aaa
or
add
mov
cmc
or
and
pusha
mov
mov
xchg
mov
mov
xor
jno
or
in
sub
and
pusha
shlb
incb
adc
adc
sub
add
mov
ret
jp
push
outsb
dec
mov
scas
pusha
inc
mov
js
lds
xor
andb
mov
push
ljmp
jns
aam
and
dec
setno
mov
ds
shll
mov
mov
fsub
sbb
rolb
xor
in
xchg
inc
sub
or
or
add
lods
leave
pop
or
rolb
out
cwtl
scas
repnz
ljmp
fmull
xor
sbb
inc
lods
add
scas
rolb
mov
cmp
test
pusha
jbe
xor
call
into
lret
add
push
sub
mov
and
fs
je
pop
add
insl
sub
loopne
mov
and
jle
add
pusha
outsl
fiadds
sahf
ljmp
scas
bnd
or
loopne
cmp
and
or
sbb
es
pusha
lods
rclb
imull
inc
popf
inc
test
or
inc
decb
addb
push
mov
ret
test
add
mov
rcrb
or
jns
add
rcrb
pop
popa
test
mov
sahf
call
jmp
and
lcall
pusha
pusha
cld
rorb
mov
xchg
js
ljmp
dec
mov
or
addr16
sbb
fildl
mov
fsubl
mov
subb
add
xchg
xchg
mov
mov
sbb
scas
pusha
inc
clc
ss
dec
cmp
adc
adc
rolb
andb
mov
shlb
push
adc
call
and
rolb
lods
pusha
xorb
mov
mov
dec
fdiv
xchg
jg
jmp
cmp
mov
push
and
addb
ret
dec
cmp
and
xchg
xchg
fists
push
add
lcall
rolb
inc
out
push
mov
inc
push
add
imul
shrl
jmp
ss
sbb
std
cmp
sbb
loopne
test
and
sbb
popa
sbb
jp
daa
test
ror
xor
inc
je
add
push
mov
sbb
pop
addb
cltd
or
pusha
dec
les
fildl
cmp
cmp
push
push
pusha
shl
ret
push
loopne
add
xor
lea
addb
cmp
addb
movsb
pusha
subb
push
gs
jb
ds
mov
mov
cmpsl
cmc
mov
shr
addr16
sub
adc
push
insb
lods
and
loopne
loopne
inc
mov
loope
push
xor
in
pop
inc
pop
dec
fsubrs
inc
pusha
aad
rorb
add
pusha
andb
rclb
inc
pusha
ret
rcrb
pusha
mov
loopne
sahf
lds
inc
sub
and
jbe
pop
repz
pop
and
lds
add
rolb
mov
rolb
jecxz
xchg
xor
xor
repz
insb
or
push
stc
and
rcrb
adc
leave
js
out
cmp
and
mov
loopne
idivb
rcrb
jecxz
jo
mov
jbe
jns
cmpsb
and
ja
add
mov
cmp
ljmp
inc
sarb
dec
lods
pusha
shlb
jle
imulb
or
aaa
cli
push
add
mov
jecxz
ds
test
je
lds
inc
adc
or
loopne
outsb
lea
and
test
mov
cmpb
mov
and
and
and
addl
dec
adc
test
mov
mov
shlb
andb
sahf
xor
cmp
mov
sti
cwtl
movsl
add
addb
lds
cmc
ss
pusha
add
rolb
ret
dec
icebp
sbb
push
cmpsb
mov
adc
rorl
mov
rcl
inc
sub
pusha
mov
insl
fisttps
jbe
mov
out
sahf
inc
mov
jle
inc
ror
clc
jb
test
add
dec
cld
push
movaps
inc
push
andb
les
mov
add
loop
jp
mov
icebp
sbb
xchg
insb
call
xchg
pop
pop
xchg
add
shlb
orb
pushl
jne
andb
fildl
inc
rcr
mov
nop
adc
fidivrl
out
xor
lcall
inc
and
xor
fmuls
jns
sub
lea
mov
mov
fnstsw
pop
lahf
jb
and
mov
sarl
jp
pop
mov
imul
dec
xor
mov
cmc
pop
inc
sarb
and
inc
popf
cwtl
adc
add
addb
sbb
lret
inc
ret
loopne
inc
sarb
mov
cmp
ljmp
sub
and
and
and
pop
lea
out
or
rorb
test
add
out
pop
test
mov
pop
push
addr16
mov
inc
aas
adc
mov
add
fcomp
push
and
inc
lock
sbb
cmp
lcall
loope
pusha
loopne
pop
mov
loope
leave
add
rolb
addr16
fldz
loop
rolb
divl
cmc
ret
push
dec
rcl
mov
adc
inc
inc
stos
loopne
mov
inc
inc
push
pop
in
in
xchg
mov
mov
mov
pusha
jb
mov
rcrb
les
outsl
and
add
loopne
and
rcll
ja
ret
test
adc
inc
mov
or
pop
jae
pop
lea
es
mov
jle
loopne
jnp
or
or
inc
adc
adc
fstpt
fsubl
loopne
sub
add
dec
mov
call
and
lahf
icebp
mov
adc
and
inc
int
mov
outsb
repnz
fs
pop
dec
push
push
test
fadds
cmc
ss
and
cmp
jne
pop
pop
mov
das
dec
cs
mov
orl
int
mov
loope
sbb
das
shr
repz
rcl
ret
lock
addl
fwait
mov
adc
adc
rol
in
and
mov
test
pop
int
push
push
xor
inc
cmpsl
addr16
addb
push
vpinsrw
je
sbb
pusha
pusha
dec
add
repnz
insl
mov
sub
rclb
jo
and
pushf
pop
bound
jecxz
push
fcoml
cmp
stc
scas
andb
sti
xchg
or
and
jmp
mov
push
stos
bound
mov
dec
jmp
cwtl
push
xor
cld
jno
cmp
inc
pusha
aad
pusha
mov
add
mov
shlb
add
int3
ret
add
pop
in
add
jg
add
lret
addl
lds
pop
aas
jnp
and
jl
xor
pusha
inc
popa
roll
add
imul
mov
inc
popa
adc
andb
fnstenv
shrl
in
outsb
push
jl
inc
movsb
add
aas
gs
push
repnz
cmp
sbb
jle
cmp
icebp
js
stc
movsl
sbb
cmpsb
add
gs
inc
das
arpl
mov
ds
fisttpll
test
and
or
loopne
jno
inc
enter
lret
test
and
pusha
sbb
ss
mov
repz
cwtl
jge
xchg
or
inc
sbb
and
sbb
add
add
mov
inc
mov
cmp
mov
mov
push
iret
cmpsb
and
inc
rclb
xchg
lock
xor
and
xor
icebp
stos
addb
outsl
xor
test
mov
inc
cmp
in
inc
shll
addb
push
jne
mov
cltd
repnz
lret
aam
shlb
sbb
dec
iret
imul
aas
jl
pushf
inc
repnz
orb
sbb
xchg
push
fsubr
adc
or
pusha
loopne
or
add
popf
push
inc
mov
jbe
sbb
js
or
cmp
loopne
ret
outsl
insl
mov
sarb
outsl
adc
cmp
arpl
mov
loopne
cltd
icebp
or
pusha
add
add
dec
addb
call
dec
outsl
aad
inc
and
or
loopne
fldt
and
and
jmp
pop
xchg
and
cmp
adc
imul
inc
and
repz
push
cli
xlat
sub
mov
das
decb
loopne
push
jp
insl
shlb
test
mov
popf
pushf
mov
mov
xchg
fistl
mov
cli
frstor
les
pop
mov
pop
add
and
mov
mov
imul
inc
fistl
sbb
adc
xor
rorb
pop
jecxz
sub
cmp
mov
mov
sub
and
cltd
or
push
jle
data16
add
inc
arpl
enter
out
jle
mov
rorb
mov
loop
dec
out
inc
lea
cmp
xor
fstpl
inc
mov
stc
push
jg
xchg
rcl
jge
out
jne
jmp
lcall
pop
aad
data16
loopne
add
and
vpsubsb
dec
mov
and
inc
inc
ss
inc
cmp
inc
enter
jo
add
and
jg
add
pusha
sbb
jne
sub
xor
add
add
jnp
loopne
mov
pop
mov
out
lds
gs
inc
test
rorb
and
je
pop
xor
sbbb
inc
aas
iret
cltd
or
and
addb
xor
popa
js
test
push
aam
imul
fimuls
rclb
mov
and
pushf
push
movsl
lock
mov
das
jge
rolb
cltd
ret
add
sub
and
test
add
pusha
mov
inc
add
fisttpll
pusha
loopne
inc
inc
pop
jnp
lods
dec
xchg
ret
mov
or
sbbb
mov
mov
inc
jle
call
sub
andb
inc
xchg
imul
out
shll
out
js
jg
fs
push
rcrl
cwtl
hlt
dec
xchg
aas
je
in
adc
pusha
cltd
inc
lods
int
ja
xchg
dec
lock
push
inc
add
xor
movsl
inc
inc
sbb
aaa
add
mov
dec
fsubl
lods
sub
mov
repnz
fwait
sub
jnp
movsb
pusha
pusha
jbe
int3
lods
add
movsb
loopne
sbbl
sti
in
and
and
sahf
inc
mov
decl
mov
out
jle
pusha
inc
inc
or
sub
pop
push
pusha
adcb
xor
loopne
xor
jl
aas
shll
addb
inc
push
movsb
shlb
and
sub
add
rcr
js
xchg
mov
in
mov
sbbb
loopne
fisubrs
fidivs
fdivrl
inc
mov
out
mov
inc
shlb
sbb
rclb
mov
jp
gs
add
mov
or
cwtl
fisttpl
and
mov
rorl
das
aaa
in
dec
pop
mov
mov
pop
sub
loope
xlat
lret
loopne
lock
push
rolb
pop
sub
mov
cwtl
into
xchg
mov
sti
adc
test
shl
lahf
fisttpl
and
int
aad
sahf
lret
xchg
sbb
dec
cmp
jp
icebp
lret
sub
mov
push
ds
pop
xor
push
inc
pusha
aam
xchg
add
and
lret
inc
xchg
enter
jl
addb
push
xchg
popa
sbb
test
shlb
push
fdivrl
inc
mov
and
or
mov
scas
jnp
pavgw
loopne
addb
and
inc
xchg
cmp
loopne
mov
shlb
sahf
into
inc
scas
rolb
and
test
gs
cmpsl
mov
enter
add
imul
or
add
mov
mov
mov
shr
add
fldl
pusha
add
mov
loopne
scas
mov
ja
jge
call
fidivrl
jnp
ds
and
jo
insb
mov
call
push
in
not
jl
adc
imul
andb
xchg
sub
push
mov
adc
mov
in
push
idivb
push
out
jmp
fadds
insl
sbb
pusha
ret
jmp
test
and
mov
mov
push
fcoml
pushw
and
sbb
xchg
cli
popf
xchg
mov
xchg
pop
cmp
and
insb
jo
add
push
aaa
xor
mov
rcrl
jno
sub
popa
cmp
in
stos
mov
mov
add
dec
pop
outsl
adc
sbb
int
or
negb
data16
fwait
test
add
dec
pop
imul
mov
mov
mov
mov
shlb
int
rolb
aaa
jns
mov
mov
lods
mov
add
mov
or
jl
es
pusha
adc
xor
mov
adc
nop
loopne
jle
neg
add
inc
xchg
push
xor
orb
cwtl
ds
loop
or
pusha
daa
mov
inc
loopne
pop
ret
and
sbb
pushf
ret
into
inc
inc
addb
movsb
pusha
mov
subl
cmc
cld
push
dec
xchg
fs
push
in
out
sahf
scas
lret
inc
int3
xchg
xor
scas
mov
or
pop
adc
mov
imul
lcall
insb
shlb
aad
rolb
lods
scas
inc
and
shlb
hlt
push
fcmove
inc
fdivp
xor
sarb
xchg
cltd
cmp
pop
push
sbb
pop
pop
mov
pusha
in
sti
xchg
pop
in
pusha
add
daa
daa
inc
mov
cmpsb
inc
pusha
mov
jl
and
and
push
adc
xor
sub
sarb
jl
jecxz
ss
mov
orb
add
loopne
sbb
add
negl
das
inc
jmp
push
in
sbb
insl
lret
sti
gs
in
les
pop
sbb
imull
shlb
pop
sub
cmpsb
inc
add
pop
divb
mov
mov
jmp
jg
sbb
aas
inc
bound
xor
rolb
addb
loopne
repz
mov
sub
and
add
adcl
ficompl
xor
cmp
jl
bound
xlat
sub
jp
or
mov
and
push
in
pop
push
jp
loopne
adc
dec
xchg
pop
bound
adc
jno
loopne
and
sub
add
cltd
mov
scas
rolb
inc
xchg
pop
mov
aad
cli
add
and
enter
cmp
pop
push
insl
mov
xlat
mov
ret
add
xchg
jmp
push
jl
lods
add
and
mov
mov
in
pop
push
ss
fisttps
mov
push
push
xor
sbb
out
addb
jge
ljmp
pop
mov
dec
cmpsb
addb
call
sub
pop
cmp
dec
mov
inc
mov
ss
cmp
fisubs
inc
pusha
cmp
mov
push
pop
inc
push
cmp
mov
dec
insl
into
cld
in
mov
sub
and
cmp
adc
andb
dec
lock
mov
popf
mov
pop
daa
add
mov
lock
jmp
subb
imul
lret
sub
loopne
cmp
test
add
mov
int
dec
fs
ficompl
mov
inc
stos
adc
cmp
imul
mov
mov
fidivs
mov
insl
jnp
jns
cmpsl
sbb
inc
push
andb
shlb
fwait
mov
sub
add
ret
and
add
leave
pop
pop
stc
jo
and
xchg
sarl
pop
xor
aas
or
lods
xor
mov
ror
mov
cmpsb
rol
lret
fwait
in
jb
fimull
xor
cltd
pop
or
pop
fwait
rcrb
leave
shll
xchg
xchg
add
mov
xor
rol
add
xchg
icebp
sub
adc
and
fidivl
ljmp
call
scas
ret
add
stc
cltd
dec
fists
xor
in
loopne
aad
mov
dec
add
movsb
addb
mov
stc
xor
je
decl
ljmp
push
add
sbb
cli
cmp
push
mov
inc
outsb
xor
inc
sarb
rcll
adc
andb
mov
jae
das
cmp
pop
sub
add
test
xor
inc
xor
xchg
cwtl
mov
loopne
repz
loopne
xor
mov
xchg
cmp
and
xlat
push
pop
movsl
sub
sbb
jecxz
mov
pop
aaa
notl
movsl
mov
hlt
lock
push
xchg
push
inc
shl
outsb
mov
xchg
and
pop
or
mov
add
cmp
repnz
ss
jnp
test
inc
add
test
xchg
jno
push
inc
ror
push
ljmp
addb
mov
fidivrs
mov
add
pop
shlb
cmp
push
test
inc
push
mov
imul
loopne
pop
pop
and
mov
sub
pop
outsl
cmp
mov
and
test
rorl
inc
negb
imul
mov
popa
xchg
mov
out
cmc
cmpsb
and
xchg
nop
cmp
dec
sbb
push
mov
jns
cld
xchg
mov
and
arpl
mov
sub
sbb
add
ja
andb
popa
adc
and
xchg
xchg
andb
sbb
leave
aam
inc
mov
sub
int3
mov
sub
loopne
mov
or
adc
cmp
rolb
lea
daa
mov
iret
dec
adc
and
rolb
mov
loopne
dec
rolb
mov
shl
or
fisubrs
mov
inc
mov
fwait
shrl
adcb
dec
or
repnz
push
cmp
inc
inc
add
push
insb
call
aaa
inc
movsb
shlb
pushf
repnz
inc
xchg
add
comiss
loop
daa
bound
mov
inc
rcr
adc
loopne
andl
cmp
data16
xchg
movsb
add
loopne,pn
fmul
xor
nopl
mov
test
adc
mov
mov
jne
mov
dec
sub
rcl
mov
push
fcomp
stos
out
mov
push
mov
pusha
stos
pushf
cmpsl
jecxz
aam
into
loope
dec
dec
lret
out
aas
ret
pusha
mov
pusha
push
xchg
inc
cmp
pop
dec
lock
cwtl
mov
cltd
or
fldcw
adc
fsub
lret
sahf
scas
ret
cmp
mov
mov
ret
insl
jb
insl
sub
sub
repz
pusha
loopne
sub
pusha
pop
in
lods
addb
arpl
dec
push
dec
or
shlb
lcall
mov
mov
pop
cmp
xchg
test
lcall
das
add
and
test
pusha
fists
arpl
es
out
lds
add
loopne
adc
into
or
inc
add
and
cwtl
int3
mov
adc
pop
test
add
xchg
push
out
test
jno
pusha
add
pop
jbe
or
cmp
push
fldenv
xor
and
shlb
in
pushl
sbb
and
inc
lds
jl
mov
add
loopne
loopne
outsb
or
insb
outsb
dec
lods
mov
loopne
decb
xchg
loop
pop
xor
dec
iret
pop
insb
add
cwtl
adc
sub
mov
loopne
andb
sbb
inc
push
es
inc
mov
add
ss
scas
xor
fwait
pop
lods
inc
shrb
in
orl
xchg
fsubrl
inc
mov
xchg
adc
sub
mov
and
add
punpckhwd
add
inc
xchg
pop
cwtl
mov
repnz
inc
loopne
insb
adc
out
bound
push
rol
pusha
rcr
push
inc
push
pusha
add
lods
pop
adc
fisttpll
or
popf
mov
fcmovnbe
test
shr
stc
outsb
jne
mov
mov
mov
loopne
and
loopne
rolb
xor
jbe
xchg
pusha
fsubrl
mov
cli
je
adc
and
stc
in
cmp
outsl
push
rorb
shl
and
mov
jg
insl
cmp
xchg
sub
rclb
sbb
test
and
adc
mov
xor
mov
jle
add
and
xchg
orb
and
rclb
ret
mov
cwtl
pop
adc
pop
cwtl
mov
inc
scas
hlt
xchg
and
jle
jnp
inc
bound
insb
mov
orb
xchg
shl
push
pop
xchg
or
mov
mov
iret
cmpsb
mov
or
shlb
in
jbe
mov
loop
pop
xchg
hlt
cmp
out
imull
jecxz
jge
loopne
fs
mov
addb
rcrb
andb
idivl
stc
dec
andb
shr
shrl
mov
jg
dec
fcmovnb
mov
pusha
inc
fcmovnu
ss
xor
adc
leave
gs
adc
xor
sahf
and
cmp
xchg
mov
loopne
jnp
in
stos
inc
sbb
mov
xor
fnstsw
das
lahf
insl
mov
push
aaa
sub
lock
or
add
cs
andb
pop
xor
dec
cmpsl
lcall
mov
sbb
sti
mov
pusha
sahf
xchg
dec
mov
icebp
push
xchg
mov
pusha
xor
fildll
inc
mov
addl
inc
sub
inc
xor
or
and
xchg
jbe
sbb
jnp
and
jns
daa
xchg
repz
mov
lock
dec
cmp
out
sbb
call
inc
in
pushf
jg
mov
bound
andb
loopne
pop
sahf
dec
push
pusha
pusha
cmp
push
add
mov
loopne
cmp
sub
jmp
fiadds
andb
add
pusha
rcll
lods
mov
popf
out
popf
jle,pt
xchg
hlt
inc
mov
out
loopne
inc
mov
inc
enter
mov
loopne
in
jns
addb
adc
aaa
fadd
test
mov
add
mov
pusha
add
inc
imul
shrb
stos
int
lcall
push
xor
iret
cli
leave
sarl
inc
sbb
mov
enter
xchg
lods
add
andb
inc
xlat
loop
adc
iret
push
push
xchg
in
lock
push
fcompl
outsb
inc
cmpsb
rol
sbb
nop
rcr
hlt
lahf
mov
push
jle
jmp
cmp
rorl
add
pop
xchg
test
inc
or
and
sti
mov
push
mov
jmp
mov
sbb
insb
shl
sub
push
and
loopne
jbe
mov
mov
mov
ror
int
pop
and
mov
idivl
mov
lods
pusha
xor
mov
mov
aad
in
xchg
rclb
scas
and
stc
cmp
dec
sete
fstps
gs
and
test
add
daa
pop
cld
cmp
loopne
and
in
shlb
xchg
and
jp
jb
cmp
dec
insb
sbb
pop
mov
js
cmpsl
pop
movsb
pusha
loopne
sbb
pop
jnp
jnp
mov
or
outsb
lods
and
jl
pop
lea
fs
xchg
rorb
rolb
movsb
inc
loopne
test
push
mov
loopne
cmp
ljmp
ror
enter
pusha
inc
push
adc
loope
ds
cmp
mov
frstor
add
fwait
fwait
aam
push
add
mov
or
loopne
rol
sub
inc
and
sub
fsubrs
inc
adcb
lret
in
movsl
lods
push
negb
pusha
js
mov
pop
fsubr
mov
add
je
fadds
shl
mov
arpl
mov
jg
mov
jg
ret
adc
mov
pop
add
sbb
jecxz
push
or
jno
jne
pusha
rcr
cmp
lcall
sub
and
adc
mov
lods
shlb
shlb
jns
bound
ss
ret
mov
xchg
orb
ss
and
pop
lods
andb
xchg
call
std
out
push
mov
adc
xor
int
or
jecxz
pop
je
insl
xchg
shlb
xor
test
pusha
aam
loopne
pop
daa
inc
jnp
jge
add
mov
push
dec
jp
andb
mov
or
jle
lods
shlb
inc
or
adc
out
popf
xchg
test
mov
inc
pop
jbe
or
xchg
xchg
out
scas
mov
scas
negl
shr
filds
in
sar
push
cld
mov
mov
fsubs
add
js
test
inc
xor
mov
in
ror
pop
fisubrl
mov
or
push
and
add
popf
mov
out
addb
xchg
fdivrl
pusha
das
and
shlb
mov
mov
pusha
int
pop
xchg
sub
pusha
sbb
mov
das
dec
mov
dec
add
dec
jp
jge
add
or
and
dec
int
cmpsl
imul
loopne
arpl
imul
inc
loopne
xor
scas
jp
enter
aad
jg
mov
push
notb
sub
lret
mov
mov
mov
cmp
stc
ja
pop
leave
outsb
gs
mov
mov
mov
into
clc
insl
mov
movsl
imul
pop
les
loopne
xchg
call
repnz
loopne
unpcklps
push
push
aam
add
inc
sbb
mov
ss
das
fnstcw
loopne
add
dec
leave
mov
in
sbb
mov
repnz
sub
inc
aaa
stc
jo
cmpsb
inc
inc
in
add
shl
dec
xor
push
aad
dec
icebp
pop
mov
add
nop
sti
insb
xchg
push
insl
hlt
adc
test
add
dec
inc
in
cmpsb
pusha
rcrb
jne
push
push
sbb
push
add
sub
sbb
lods
int
xor
int
out
jecxz
loop
shl
push
stos
mov
inc
negb
mov
mov
sub
shrb
add
jge
xchg
vpmaxsw
dec
pop
dec
cwtl
mov
call
stos
idivb
pusha
rcl
push
dec
push
pop
mov
mov
and
pop
inc
push
inc
sub
imul
inc
add
lahf
pop
dec
fcoms
lret
mov
push
outsl
mov
adcl
adc
mov
lret
inc
cli
push
or
pop
ss
int3
sarl
add
lea
inc
mov
and
aas
cmp
jg
jecxz
imul
or
shlb
pop
imul
pusha
inc
aad
mov
inc
xchg
pusha
push
push
dec
addr16
out
sub
xorb
arpl
sahf
sub
into
mov
xlat
insl
lret
std
add
inc
inc
adc
scas
imul
add
add
pusha
sbbb
es
mov
jno
out
ljmp
inc
fisubrl
add
or
mov
idivb
mov
push
cwtl
les
mov
sub
mov
iret
lahf
dec
aaa
mov
jp
jno
data16
pop
jmp
das
scas
rolb
shll
mov
je
and
inc
adc
pop
inc
pop
dec
mov
mov
loopne
pusha
shlb
loopne
outsb
test
and
cmc
lahf
test
pop
mov
fidivrl
xchg
int3
sub
inc
je
fldcw
fbstp
addr16
shlb
adc
and
pmaxsw
ret
dec
ror
adc
jae
fists
inc
pusha
test
mov
aaa
push
aas
gs
and
inc
mov
sbb
xchg
loop
pop
jne
pushf
jmp
pusha
mov
aaa
jo
push
cltd
gs
lea
rolb
or
pop
mov
inc
gs
repz
sub
repz
dec
fnstsw
les
addb
inc
pusha
imul
and
movsl
lcall
jne
xchg
mov
inc
test
pusha
clc
or
out
jmp
and
push
jp
outsl
mov
and
stos
pusha
inc
lods
loopne
xor
cmpsb
inc
and
sbb
xchg
pushf
xchg
iret
cmc
fidivs
and
loopne
ret
cmp
ret
xor
popa
imul
rcl
sub
mov
hlt
shll
stos
loopne
mov
cmp
sarl
push
mov
addb
adc
adc
cwtl
pop
sbb
jecxz
shlb
pop
inc
jne
jge
push
cltd
jecxz
outsl
jecxz
or
and
shl
fldl
out
lea
fstps
mov
or
dec
push
jge
test
mov
xor
cltd
pop
dec
push
sbb
push
mov
mov
and
pop
cmc
or
inc
inc
mov
inc
js
xchg
xchg
in
pop
int3
stos
add
rorb
insl
jg
scas
add
mov
add
cmpsb
inc
add
in
jmp
pop
and
or
addb
movsb
inc
loopne
and
and
ljmp
jns
push
or
jecxz
jge
sbb
loopne
mov
test
and
lock
leave
sbb
add
mov
shlb
and
pop
xchg
dec
insb
int
and
jp
adc
adc
dec
pop
add
sbb
mov
bound
cltd
pop
inc
andb
dec
lods
addb
and
sbb
jg
xor
fldl
repz
pop
test
sti
sbb
dec
addb
enter
xchg
scas
add
xor
mov
rorb
pusha
loopne
lahf
nop
ljmp
add
dec
push
cmp
xchg
rolb
and
adc
loop
or
sub
add
mov
pop
sub
inc
add
mov
dec
sub
lcall
or
jle
jmp
xchg
sub
pop
lahf
stos
adc
arpl
jmp
shlb
inc
inc
push
sub
cmp
in
mov
mov
test
mov
inc
sarb
xchg
shll
imul
sbb
in
jg
les
arpl
andb
push
mov
xlat
cs
inc
dec
mov
or
pusha
jns
pop
popa
push
sbb
mov
push
pop
rcrl
in
adc
mov
inc
rolb
and
mov
test
inc
mov
jmp
xchg
hlt
add
loopne
int
or
jb
xchg
pop
out
out
cwtl
shll
insl
lea
movsb
and
xor
pop
cltd
mov
inc
xchg
xchg
inc
ljmp
xor
loopne
xchg
popf
loope
push
out
xchg
jne
sahf
in
lret
mov
add
rclb
jno
mov
push
stos
pop
pop
clc
pop
lret
push
lahf
sti
push
and
imul
xor
push
cmc
adc
pop
hlt
repnz
and
inc
cwtl
sbb
or
addr16
fists
dec
out
dec
and
and
fwait
mov
add
inc
pop
fincstp
jb
add
mov
loopne
inc
jge
loope
out
hlt
mov
aaa
pushf
push
aad
add
rclb
mov
shrb
call
mov
fdivrs
call
and
loopne
jbe
sub
inc
pop
or
adc
lods
out
lds
pusha
adcb
and
mov
mov
cmp
stos
rclb
xchg
cmp
ret
shlb
cmc
scas
or
pop
aad
jns
andb
and
xchg
inc
inc
fwait
push
scas
add
and
rclb
and
lods
fisttps
adc
mov
dec
push
int3
push
and
idiv
aad
inc
rclb
cmpb
outsb
movsl
lcall
inc
shl
mov
xchg
add
and
loopne
jmp
xor
mov
add
andb
test
je
mov
iret
icebp
sub
data16
add
lods
sahf
inc
dec
sub
rclb
bound
add
rolb
inc
lret
scas
cmp
movsl
dec
and
cwtl
jmp
jge
and
mov
dec
ljmp
lock
scas
and
sub
mov
add
inc
or
scas
pop
test
xchg
rcll
pop
pop
nop
inc
xchg
or
cmpb
jne
pop
sub
mov
scas
gs
adc
pop
aaa
jae
jg
cmp
jg
xchg
adc
scas
les
rcll
sub
imul
jg
fldt
test
xor
cmp
test
xorb
mov
je
sbb
inc
ds
mov
push
mov
push
out
dec
inc
dec
mov
mov
mov
xchg
add
in
mov
sbb
popa
mulb
loopne
loopne
sbb
aas
imul
add
mov
and
jge
loop
xor
jns
jnp
lea
int
mov
push
jo
and
push
addb
arpl
daa
out
pop
outsl
mov
in
adcl
push
jge
cmpsb
and
push
add
arpl
movsb
inc
pusha
jge,pt
movsb
pusha
rol
and
mov
mov
mov
sbb
in
fs
insl
inc
ljmp
addb
sbb
adc
mov
push
sahf
imul
push
xor
sbb
mov
lods
call
mov
inc
jge,pt
push
xchg
arpl
mov
or
pusha
push
mov
pop
outsl
stc
dec
push
loopne
fists
mov
in
or
mov
xor
notb
out
movsl
jno
push
into
mov
pop
lods
inc
pusha
jne
loopne
pop
sub
xorb
out
leave
cmp
repnz
fdivs
jbe
xlat
sub
inc
sub
and
mov
js
orl
jmp
sbb
shlb
pop
insb
cmpsb
rolb
fsts
shl
stos
shlb
mov
pop
loopne
xchg
mov
sub
inc
pusha
test
add
std
ret
loope
in
mov
addb
stos
shlb
or
sub
sbb
mov
and
out
and
add
add
aad
cmp
je
inc
loop
or
add
or
cmc
out
mov
inc
inc
enter
cmp
add
fcompl
sbb
leave
xor
jbe
sub
mov
dec
in
cltd
sti
outsb
rcrl
int
pusha
mov
sahf
xchg
test
mov
xchg
pusha
cmpsb
rolb
ret
leave
adc
mov
mov
adc
xor
popa
bound
inc
loop
clc
xchg
jg
cmp
cmp
xchg
fnsave
addb
xor
add
sub
add
xor
xchg
add
pusha
pusha
sahf
mov
out
addr16
or
loopne
and
inc
jecxz
pop
rcll
pusha
inc
test
and
andb
and
rolb
aaa
lea
sbb
gs
out
loopne,pn
xchg
mov
sbb
loopne
xchg
adcb
mov
pop
push
ja
nop
pop
mov
dec
stos
loopne
xchg
into
ret
cld
ljmp
arpl
repnz
loope
or
xchg
inc
or
loopne
cli
clc
ja
ss
ds
sub
and
pop
outsb
xchg
add
and
dec
sub
pop
test
std
movsl
jge
dec
mov
clc
imul
hlt
fidivl
sbb
repz
out
mov
shlb
and
pop
lock
push
cmp
imul
data16
rolb
xchg
mov
icebp
lods
and
push
fidivrl
mov
loopne
adc
sub
mov
das
cmp
insl
out
ja
inc
mov
cmc
pop
sub
dec
add
push
icebp
adc
push
movsb
and
outsb
push
mov
pop
mov
pusha
sbbb
in
inc
inc
jbe
into
inc
pushf
sbb
loopne
xor
pop
adc
mov
inc
add
scas
inc
adc
popa
mov
inc
pop
andb
push
and
loopne
inc
mov
inc
cmp
cmpsl
out
jb
mov
add
mov
mov
mov
sbb
mov
jge
push
ret
cmp
int3
mov
out
push
movsb
addb
subl
inc
add
mov
inc
and
loopne
pusha
inc
js
mov
mov
call
or
and
in
in
push
mov
stc
mov
dec
nop
mov
add
pop
scas
dec
inc
in
int3
push
ja
and
add
and
pusha
xchg
push
iret
sub
adc
add
jmp
cmp
mov
add
and
dec
mov
xlat
mov
clc
xlat
out
loopne
test
loopne
cmp
imul
rclb
adc
fildll
mov
inc
icebp
add
xor
insl
mov
enter
push
cmp
cmp
ss
gs
popa
inc
sbb
test
rcrb
loop
movsl
mov
sbb
push
pop
pop
xchg
cmp
mov
xchg
pushf
sar
and
mov
push
cltd
int
cmp
push
ret
fstpt
and
lock
mov
pusha
sub
nop
sub
out
dec
inc
adc
jecxz
cmc
sar
dec
and
mov
cmp
adc
or
loopne
xlat
jl
addb
inc
loopne
ljmp
mov
stos
and
lret
loop
test
loopne
es
fadd
fisttpll
lods
rolb
loopne
and
sti
dec
xchg
xor
cltd
mov
or
mov
daa
iret
adc
iret
inc
repnz
pusha
pusha
sbb
shll
int3
sbb
dec
cmp
cmp
out
jbe
add
cmp
shlb
mov
inc
push
mov
jbe
xchg
inc
mov
push
out
or
push
mov
xor
xlat
xor
lock
pop
jecxz
cmp
mov
jne
addb
je
sub
pop
fcoml
adcb
mov
mov
and
dec
add
in
clc
push
les
pop
sub
test
dec
mov
add
mov
and
loopne
rolb
rolb
pop
stos
xchg
xor
add
pusha
test
dec
pop
sub
inc
loop
push
pushf
lret
pusha
loopne
pop
jns
rol
xlat
loop
xchg
fs
push
lahf
inc
or
aaa
fnstsw
mov
popa
push
jge
popa
ds
cld
add
ret
sbb
xlat
sbb
mov
xor
lods
shl
andb
xlat
dec
in
popa
popf
loopne,pn
ret
es
and
add
lods
inc
add
ss
mov
ret
movsl
nop
outsb
add
mov
pusha
loopne
xchg
out
sbb
jp
and
push
sahf
and
inc
inc
add
mov
add
stc
pop
aam
sub
dec
cwtl
sbb
cmp
add
and
add
mov
stos
shlb
push
pusha
sahf
insb
mov
push
lds
mov
test
rolb
andb
cmpsl
and
shl
jle
push
sti
or
loopne
or
push
loopne
daa
sub
and
and
jp
dec
lcall
inc
push
push
cmp
sbb
mov
adc
and
insl
push
shlb
lods
inc
and
mov
mov
lods
dec
in
xchg
fsts
sarb
mov
xor
andb
andb
mov
fsubs
push
movsb
pusha
and
out
fisubrl
dec
cmp
loopne
out
mov
xchg
stos
pop
xchg
cltd
outsl
dec
or
mov
popa
fwait
stos
push
adc
fwait
sbb
and
xchg
mov
aad
leave
lea
mov
mov
shr
mov
push
dec
rcrl
addb
rolb
iret
data16
pop
jns
rolb
mov
cmp
jl
les
jne
xchg
adc
or
inc
push
lods
pusha
adc
mov
sub
pusha
cwtl
inc
sub
outsl
jmp
fldcw
outsb
das
pop
xor
push
xchg
and
pop
mov
test
mov
xchg
pop
clc
jns
push
popf
xchg
inc
xlat
sbb
stos
push
popa
xchg
sub
jl
into
sub
mov
lea
sub
loopne
pop
xor
xor
push
add
iret
mov
inc
pop
push
imul
sub
adc
inc
dec
bound
dec
loop
and
xchg
add
push
pop
and
mov
inc
inc
xchg
and
shll
mov
loopne
xchg
in
ret
jl
pusha
andb
pusha
fsubrs
dec
and
jg
and
add
xchg
loop
jle
mov
aam
push
aaa
xorl
imul
out
cmp
cmp
add
dec
sbb
mov
loopne
nop
outsl
jnp
in
mov
fstps
sbb
andb
mov
inc
lods
mov
cmp
or
and
jmp
xchg
xchg
cld
push
pop
lret
add
aad
xchg
mov
inc
pop
pop
mov
mov
mov
out
cmp
imul
adc
sub
and
sub
pusha
inc
stos
and
pop
jnp
pusha
inc
imul
into
mov
addb
mov
mov
xchg
dec
out
int3
or
stos
pop
ds
inc
lea
popf
jp
arpl
insl
inc
push
add
and
ds
shlb
mov
insl
adc
cltd
mov
rolb
add
test
sub
push
insb
fisttpll
and
notl
jnp
cli
xchg
icebp
loopne
pusha
xor
andb
cltd
add
pop
shlb
shl
cmc
xchg
inc
xchg
add
loopne
cli
int
xchg
cmp
and
addb
mov
and
and
mov
cmp
into
sbb
mov
and
mov
inc
xor
pop
cmp
dec
xchg
daa
xchg
movsb
and
test
pusha
loopne
mov
int
lcall
int3
xor
jl
andnps
arpl
push
loopne
sahf
push
jo
cmpsl
jge
cmpsl
iret
into
dec
xor
cmp
out
and
insl
out
ss
in
in
dec
ret
dec
loope
xchg
pushf
sbb
js
insb
sub
mov
addr16
mov
sbb
sarb
push
loopne
mov
int
sub
jns
les
add
imul
insb
std
test
popf
xor
xchg
push
arpl
mov
jb
lahf
and
add
in
sub
add
mov
cmpsb
shlb
into
sbb
xor
imul
dec
movsb
pusha
add
stos
and
out
je
push
mov
ret
int
mov
xchg
jecxz
or
mov
and
je
jl
mov
mov
dec
mov
xlat
loop
mov
sbb
hlt
add
subb
inc
add
adc
push
cltd
test
loopne
cmc
push
push
int3
mov
mov
paddsw
loopne
jnp
loopne
sarb
call
inc
add
add
andb
and
int3
lds
xchg
push
cld
movsb
addb
pop
xchg
cwtl
fs
pop
sbb
addb
inc
into
add
xor
bound
pusha
inc
fildll
shlb
arpl
mov
in
dec
test
and
out
adc
rorb
inc
pushf
ljmp
clc
fwait
dec
push
mov
xchg
push
andb
add
in
and
clc
and
xchg
cmp
and
loopne
insb
add
aam
and
mov
add
lahf
jnp
fsubrl
fisttps
jns
rolb
andb
aas
in
mov
mov
inc
sub
sub
mov
xchg
sub
pop
imul
inc
inc
mov
push
pop
pop
in
pusha
inc
aad
mov
and
rorb
adcb
mov
inc
mov
push
ret
testb
mov
aaa
scas
inc
rolb
mov
add
rolb
mov
pop
pop
loop
xor
adc
cmpsl
ljmp
add
imul
dec
lds
stos
add
jae
add
adc
inc
mov
es
pusha
sti
je
shlb
adcb
in
out
mov
mov
mov
inc
xchg
stos
shlb
sbb
shlb
xchg
std
in
je
rol
rolb
adc
mov
mov
or
aad
outsb
lcall
sbb
inc
into
iret
je
and
mov
cmpsb
addb
dec
inc
mov
mov
pusha
mov
scas
test
push
cltd
inc
cmp
pop
sub
cmp
test
addb
cli
ds
lea
ss
dec
addb
push
sub
pusha
jmp
int3
xchg
or
and
fcompl
add
data16
ror
mov
lcall
sbb
shlb
inc
mov
cmp
andb
cld
rorb
test
ds
inc
xchg
jns
rcr
dec
scas
lock
repnz
pusha
rolb
icebp
call
loope
lods
out
mov
arpl
xor
mov
inc
and
lret
into
jnp
push
imul
pop
adc
adc
pusha
sahf
lcall
fists
mov
jecxz
xchg
adc
adc
add
lods
and
pushf
cmp
loopne
pop
push
jne
mov
cli
imul
mov
mov
popf
inc
pop
push
aad
hlt
enter
adc
je
inc
pop
das
mov
clc
inc
test
rorl
ret
les
and
cmp
sahf
xor
xchg
jo
std
scas
loopne
jo
push
cmc
xchg
adc
inc
sub
add
pop
cmpsb
pusha
and
and
aam
lcall
add
rclb
stos
cmpsl
rclb
xchg
adc
sub
add
pushf
mov
shlb
mov
mov
or
out
mov
and
inc
jae
inc
ret
or
and
mov
hlt
jge
fidivrl
mov
pop
cmc
xor
fists
fldenv
jp
out
dec
out
lcall
cmp
dec
mov
push
mov
in
cmp
lea
mov
sub
dec
cld
stc
ss
dec
and
pusha
subb
mov
pusha
into
adc
and
lea
call
jo
mov
mov
inc
cld
mov
pop
rclb
in
jne
push
sbb
mov
imul
ss
movsl
ljmp
imul
mov
sbb
loopne
rclb
stc
add
nop
or
popa
jne
mov
icebp
lods
loopne
jo
or
outsl
inc
push
mov
sub
push
and
test
and
lock
add
loopne
inc
fcmovnbe
add
pop
addb
ret
xchg
pop
jb
aad
fidivrl
jns
jne
ficoml
mov
movsl
and
data16
std
jbe
and
enter
push
pop
add
inc
push
das
in
push
pop
dec
push
loope
and
data16
fldl
sub
mov
inc
adc
add
push
push
cmp
aas
bnd
push
dec
pusha
jecxz
lods
mov
icebp
sbb
loopne
inc
sub
sbb
sbb
push
mov
add
inc
das
ljmp
mov
and
notb
addb
cmpsb
and
lcall
mov
mov
rolb
add
rolb
add
push
cwtl
jno
lret
jne
mov
adc
popa
adc
shlb
xchg
shlb
add
inc
mov
sti
dec
sarl
push
mov
subb
out
inc
add
mov
mov
orb
push
ja
negl
adc
lods
cmpsb
rol
filds
mov
pop
inc
imul
inc
gs
mov
jno
pusha
shl
fisubrl
sub
pusha
xchg
stc
inc
cmp
movsb
add
sub
pop
ret
lods
pusha
pusha
out
pop
xor
cmp
mov
mov
loopne
cmpsb
and
xor
xor
add
and
add
sti
and
fsubrs
and
mov
mov
cltd
stos
add
inc
outsb
mov
inc
cmpsl
ja
jae
xchg
subl
and
pusha
xor
mov
push
mov
inc
ljmp
pusha
sti
shl
in
mov
into
bound
pusha
daa
and
arpl
adc
inc
xor
ret
fwait
xor
xorb
inc
call
imul
rcrb
push
push
push
rcl
jne
shlb
addb
andb
loop
ret
inc
and
adc
sbb
mov
cwtl
cmc
aam
mov
addb
or
stos
mov
mov
cwtl
jmp
cltd
mov
mov
roll
add
loope
xlat
cmp
push
ja
aam
bnd
mov
add
stc
xchg
push
lea
mov
fs
push
stos
adc
imul
jmp
jae
movsb
and
pop
shlb
sub
inc
movsl
rcrl
and
insl
add
fistps
fs
xor
test
add
shlb
loopne
inc
xchg
mov
test
lds
mov
insl
int
jp
dec
outsl
add
faddl
adc
add
push
mov
sbb
mov
inc
loopne
add
andb
xchg
push
or
push
shlb
jne
or
shlb
ljmp
add
jecxz
pop
pop
sub
jg
jne
inc
adc
pusha
add
mov
iret
jl
aam
push
mov
pop
out
mov
lods
pusha
orb
testl
into
cld
mov
add
lods
and
fldt
adc
push
inc
cmp
or
fstpl
inc
call
add
and
and
xor
test
inc
comiss
inc
cmp
cmp
sub
add
imul
les
orb
outsb
mov
pusha
mov
pop
add
movsl
add
add
add
inc
xor
xchg
insb
jbe
hlt
jne
scas
add
in
inc
mov
pop
jecxz
popa
or
loopne
add
ja
xchg
and
ds
inc
pop
rolb
and
andb
lock
pusha
rclb
clc
outsl
scas
fimull
ficompl
jge
push
sub
lcall
jne
mov
ja
mov
loopne
rolb
jne
fadd
sub
add
add
jb
enter
xlat
lcall
adc
push
jae
mov
pusha
les
std
pop
jecxz
push
jno
or
lcall
movl
sbb
fimull
xor
mov
loopne
aam
lods
sbb
addb
inc
inc
sub
push
mov
mov
sub
jnp
imul
fstl
out
lretw
adc
cmp
push
jle
xor
bound
mov
sub
add
xor
push
enter
sbb
ret
adc
lcall
leave
lock
pop
cmc
or
mov
jo
sti
push
push
pop
xchg
xchg
mov
orl
xlat
insl
push
daa
mov
xchg
arpl
pop
lds
aam
popf
aaa
sbb
gs
sbb
mov
inc
jg
stos
xor
cltd
scas
inc
pusha
stc
push
je
jae
mov
cwtl
mov
sub
pusha
xor
rolb
in
and
cwtl
insl
loope
sub
sarb
mov
xchg
addb
aaa
jno
jne
insb
jne
dec
cli
imul
sub
add
sub
and
mov
cmp
rolb
aas
mov
and
ljmp
xchg
pop
icebp
mov
cmp
xchg
and
xor
mov
adc
inc
sub
pusha
popf
aas
in
dec
pushf
ljmp
and
and
daa
shll
mov
aaa
mov
mov
inc
rorb
imul
test
ljmp
cli
lahf
lock
fistl
outsl
mov
sub
pusha
rcrb
add
loopne
loopne
sbb
stc
push
icebp
bound
xchg
pop
mov
sub
xor
xor
adc
enter
xor
lcall
or
and
lcall
mov
and
loopne
lods
mov
gs
add
shr
add
addr16
shl
push
push
xchg
and
loopne
push
adc
mov
sbb
jmp
js
mov
popa
add
cmp
notl
lret
scas
loopne
sbb
out
jns
mov
ret
xchg
orl
ds
push
push
mov
inc
add
or
cmc
sub
jae
sti
scas
rolb
jae
addr16
push
jnp
rolb
mov
add
pop
push
imul
jno
gs
xchg
lret
or
push
dec
out
mov
adc
cwtl
les
out
xor
jl
pop
adc
ds
bound
xor
or
xchg
and
addb
rcrb
inc
andb
jae
inc
inc
sbb
and
inc
arpl
xchg
mov
jle
push
dec
insl
jg
js
call
mov
rol
les
and
pusha
pop
cmp
mov
pop
outsb
fnstsw
sahf
imul
pusha
add
stc
out
shl
and
call
loopne
les
pop
and
mov
addb
aam
sub
lock
add
mov
push
mov
rorb
jl
jp
loopne
lea
ljmp
fisubs
stos
mov
andb
loopne
pop
mov
lods
cmpsb
add
gs
mov
mov
pop
fsts
and
in
and
and
mov
mov
xchg
test
adcb
imul
outsb
cmpsl
adc
sub
sbb
mov
sbb
jge
mov
adc
mov
mov
mov
insb
jo
stc
xchg
sub
loopne
jmp
movsl
sbb
xorl
rcrl
repnz
mov
sbb
mov
xchg
or
and
pusha
mov
mov
jg
enter
cmp
mov
addb
pop
inc
inc
add
add
loopne
cwtl
stc
test
mov
add
pop
sub
in
lea
mov
cwtl
sub
push
rcrl
push
inc
lret
mov
push
pop
lock
cwtl
or
pop
into
shlb
adc
jae
loope
outsb
xchg
movsb
mov
pusha
and
mov
pop
jo
inc
mov
sbb
ret
clc
out
cli
cwtl
xor
int
lahf
faddl
pusha
inc
or
inc
push
stos
mov
pusha
shlb
loopne
pusha
inc
aad
mov
mov
fs
push
cmc
jecxz
add
sub
and
pop
push
pop
xor
sub
dec
mov
xchg
imul
inc
ljmp
jecxz
mov
cld
jl
cmp
insb
inc
pop
mov
pop
xor
out
inc
pop
data16
pusha
subb
lret
add
aas
jne
mov
loopne
arpl
in
fistl
cmp
or
inc
adcb
and
pusha
mov
test
inc
loopne
shlb
fcoml
jecxz
mov
mov
dec
pushf
les
push
adc
stc
and
and
rcll
imul
outsl
xor
test
and
loopne
xchg
sub
pusha
cmp
fwait
mov
data16
scas
test
pop
ret
xchg
fs
mov
xchg
inc
cmp
inc
stos
leave
pushf
jp
fs
pusha
mov
push
addb
inc
mov
test
dec
push
rolb
nop
mov
mov
and
in
out
dec
inc
cmp
inc
cmpb
add
adc
ror
sti
movsl
jae
subb
stos
mov
dec
fisubs
lret
sbb
loopne
rclb
xlat
xor
mov
push
aad
hlt
test
inc
adc
lods
mov
je
mulb
mov
mov
pusha
negl
or
pusha
sub
add
call
push
dec
lret
jle
inc
loopne
sub
shlb
jge
test
shrb
xorb
mov
xchg
sbb
rol
adc
and
jmp
ljmp
ds
adc
inc
xchg
add
sarb
mov
addb
aam
pusha
and
mov
rol
adc
and
fxtract
and
arpl
prefetch
inc
loopne
inc
mov
lods
loopne
icebp
xor
add
mov
rcrb
inc
shrb
in
sub
lods
inc
loopne
and
loopne
inc
rclb
inc
scas
imul
adc
inc
ds
out
aaa
xor
add
ljmp
add
loopne
lds
add
lods
pusha
cmpb
call
ds
cmp
and
shlb
rcrb
jb
xor
test
add
sbb
or
inc
mov
sub
fs
vcvtsi2ssl
pusha
xchg
shll
jae
test
add
push
loopne
jmp
push
add
inc
push
testb
pusha
lret
sub
and
jno
sbb
mov
mov
sub
mov
int3
inc
cld
sub
orb
sbb
adc
mov
pusha
inc
popa
xchg
add
test
rcrb
sub
add
inc
fisttpl
lods
filds
mov
lret
inc
pop
push
fimull
and
bound
and
push
shlb
jecxz
jbe
mov
jne
rcr
shrb
mov
lret
subl
dec
loop
andb
cmp
js
push
idiv
mull
or
and
mov
pusha
pop
cmp
or
rcl
xchg
test
and
and
lret
int3
insl
mov
sbb
pop
pusha
jp
imul
mov
and
call
cld
cmp
imul
push
bound
loopne
mov
dec
in
add
inc
jbe
in
clc
in
xchg
mov
xor
shll
imul
add
loopne
or
mov
enter
dec
in
inc
popf
inc
jnp
test
out
jne
imul
rorl
mov
adc
js
stc
dec
rolb
adc
int
push
cmc
xchg
mov
inc
bnd
jecxz
xchg
daa
insl
push
mov
xor
xlat
mov
dec
pushf
int
sub
mov
movsl
decb
dec
jae
add
add
push
int
sub
test
add
or
jmp
xlat
scas
inc
aam
lcall
inc
push
jns
push
pusha
loopne
add
mov
ficomps
mov
fs
and
js
mov
movsl
popf
and
push
scas
sbb
dec
mov
sbbb
jg
add
add
push
aas
mov
movsl
or
inc
jmp
imul
iret
addb
adcl
sub
adc
pop
test
jne
xchg
mov
lea
andb
and
add
les
sarb
xlat
les
and
repz
add
add
shlb
popa
in
mov
shll
dec
fdiv
jno
rcrb
mov
mov
shl
xlat
ljmp
or
adc
mov
es
jns
movsl
repz
shll
loopne
pop
loopne
sbb
jae
push
jns
cmpsb
add
add
cmp
rorb
rclb
mov
dec
ds
pusha
and
aad
rolb
and
mov
inc
icebp
push
or
inc
fisttps
rolb
pop
jl
call
mov
or
dec
dec
shrb
pusha
pusha
sub
and
in
bound
push
cmp
vfmaddpd
lret
fs
subl
scas
sbb
and
mov
fisttpll
add
test
add
push
inc
or
add
test
mov
sbb
mov
and
in
mov
pop
pusha
sti
inc
sub
jne
je
mov
mov
adc
xchg
into
push
addb
inc
loopne
jno
mov
jecxz
in
enter
inc
rol
imul
or
insl
loop
mov
and
loopne
call
and
cmp
mov
jmp
jl
lods
inc
and
fadd
mov
lcall
and
lods
andb
pusha
shl
dec
push
pop
pop
leave
pusha
lds
mov
adc
das
jno
shlb
cmp
mov
adc
arpl
pusha
loopne
xchg
dec
aas
sub
stc
les
test
mov
pop
cmc
jne
cwtl
in
ds
loopne
fbld
jle
fidivl
sub
insb
fimuls
pusha
loopne
mulb
and
shll
inc
rcll
mov
and
push
repz
inc
or
jns
or
cmp
ja
sbb
adc
add
cmp
inc
mov
mov
sbb
rolb
loopne
mov
inc
sbbb
stos
or
das
aaa
negl
inc
mov
adc
addb
loope
jg
shll
mov
jb
adc
fld
mov
sbb
addr16
and
stc
push
les
sbb
adc
pusha
mov
inc
mov
mov
and
and
mov
fwait
push
jne
mov
aaa
xchg
lea
aad
lds
out
movsb
pusha
and
rcr
aam
stos
outsl
dec
out
test
mov
add
xlat
les
xchg
popf
cmpsb
add
icebp
push
and
mov
pusha
loopne
mov
mov
aad
test
mov
loop
sti
stc
sub
mov
mov
add
inc
push
rolb
xor
cmp
lahf
inc
divb
lcall
rcll
xchg
cmp
add
stc
or
add
fcmovnb
mov
loopne
lds
loopne
add
mov
xchg
inc
inc
insl
pop
fisttpl
add
mov
push
mov
mov
push
inc
mov
inc
xor
fsubs
inc
add
fnstcw
mov
mov
pusha
add
in
cmc
pop
add
or
repnz
mov
mov
rorl
sbb
lock
hlt
cmp
sbb
sub
shlb
and
andl
fimull
scas
mov
sub
add
push
push
in
fadd
dec
imul
loopne
mov
mov
ret
pusha
jmp
cmc
adc
test
pop
adcl
shrb
test
andb
jb
loopne
popf
dec
cmc
das
lods
addb
push
testb
sbb
mov
and
lock
mov
add
xlat
outsl
fistpl
dec
add
loopne
xchg
mov
lcall
add
dec
push
xchg
jg
mov
sub
shlb
inc
insb
xor
and
push
adc
fimull
shlb
pop
sbb
push
and
mov
adc
pusha
mov
addr16
out
mov
push
and
sub
mov
xchg
adc
and
je
bound
pop
cmpsb
rolb
xor
mov
and
repz
or
loope
pusha
jnp
dec
sub
mov
mov
adc
mov
inc
andb
xor
lahf
hlt
lcall
and
sbb
and
sub
jmp
loopne
cmpsb
inc
add
mov
loop
ljmp
push
xor
lods
and
daa
jg
stos
push
dec
sub
dec
bound
pusha
movsl
mov
cmp
inc
hlt
ss
aam
inc
jbe
sub
loopne
jns
xor
and
cmpsl
negb
lret
pusha
pusha
fwait
cmp
add
inc
rcrl
push
cli
dec
inc
stos
loopne
xchg
add
pop
or
mov
sahf
push
pusha
inc
dec
mov
push
out
out
popf
and
stos
inc
pusha
sarl
sub
loop
data16
ss
add
hlt
push
loop
mov
outsb
insl
inc
mov
pop
loopne
push
mov
hlt
cld
scas
std
repnz
fisubrl
movsl
xlat
pushf
sahf
pop
push
xor
mov
loopne
lahf
rorb
sbb
sub
in
loopne
xchg
push
cmp
lods
sub
int
mov
ja
mov
add
inc
cltd
lods
mov
xchg
andb
sub
mov
lods
andb
js
mov
bound
dec
out
popa
andl
loop
cwtl
shlb
inc
mov
clc
dec
or
orb
or
rolb
mov
dec
stos
rolb
and
add
cmp
add
sbb
adc
call
popa
add
sub
movlps
and
xchg
jge
sbb
mov
add
xchg
in
mov
mov
mov
add
or
cmpb
add
and
insb
push
cmp
push
mov
fsts
andb
push
dec
inc
adc
data16
andb
inc
outsl
lcall
shlb
ret
pop
out
pushf
ret
shlb
and
pusha
adcb
push
mov
add
and
xchg
hlt
stc
loope
jne
loop
int3
add
hlt
enter
cld
mov
je
mov
dec
mov
shlb
rolb
pushf
mov
mov
jmp
mov
sbbb
adc
loopne
lcall
add
jp
and
daa
pop
mov
sbb
sub
and
nop
js
mov
cmp
sbb
jb
jmp
mov
mov
out
sbb
or
pusha
adc
push
mov
xchg
sub
rcl
lods
mov
inc
adc
std
arpl
jmp
pop
mov
int3
or
mov
mov
lds
bound
and
rcr
mov
sub
shrb
je
fildl
test
and
inc
imul
xchg
inc
je
insl
les
in
pusha
adcb
mov
popf
and
aas
adc
out
cwtl
negb
xchg
ja
inc
loopne
jns
mov
shrb
push
jae
and
xchg
adc
mov
jmp
rcll
aas
adc
aaa
and
inc
arpl
sbb
test
cmpsb
inc
mov
mov
mov
mov
sahf
and
andb
pop
cwtl
xchg
xor
adc
push
add
in
dec
das
xchg
test
add
nop
fstpl
mov
data16
add
add
loopne
mov
fs
adc
andb
mov
iret
push
aad
shll
addb
mov
inc
jb
mov
pop
hlt
cli
jg
fld
mov
add
xchg
push
push
mov
inc
jecxz
push
testb
jecxz
xchg
mov
jb
mov
jecxz
sub
movsl
mov
pop
xor
inc
inc
sub
mov
mov
arpl
mov
mov
addr16
dec
out
loope
int3
test
negb
jae
scas
ds
pop
aas
mov
subb
jl
pusha
inc
mov
popf
mov
lea
and
das
ret
jmp
and
xor
add
scas
andb
repz
insl
jmp
subl
movsl
jle
outsb
sti
fs
sbb
sub
add
mov
lcall
jmp
inc
dec
cmp
mov
sar
mov
pop
xor
add
add
ret
push
cmp
cli
pop
lcall
sub
and
add
mov
cmp
xchg
mov
cltd
popf
inc
fstpt
mov
adc
lret
mov
scas
andb
test
cmp
xchg
jne
insb
rolb
jle
inc
sbb
pusha
and
mov
sti
movsl
bnd
outsb
arpl
xchg
cmpsb
inc
mov
cltd
loopne
cwtl
or
data16
sti
pop
xchg
jle
mov
mov
inc
pusha
outsl
out
mov
add
sbb
fsts
sub
add
mov
movsb
add
out
pushf
testb
and
repz
bound
test
shlb
lock
add
mov
leave
xchg
xchg
cmp
test
push
mov
sbb
add
inc
leave
cld
addr16
ret
lods
inc
js
add
dec
fldl
dec
push
sarb
in
adc
out
sbb
add
push
andb
frstor
cmp
stc
mov
out
mov
mov
fcmove
sbb
xor
pop
pop
push
cmp
bound
sbb
sub
andb
js
pop
add
add
fcmovb
scas
add
aad
mov
stos
pusha
shr
in
push
lret
loopne
out
adc
shlb
push
push
rolb
xor
loopne
mov
cli
sub
loopne
xlat
pop
popa
mov
xchg
inc
gs
pusha
and
mov
xchg
rcr
jecxz
add
or
jmp
cmp
aam
std
xchg
cmp
pusha
pusha
mov
and
fistl
add
push
xchg
cld
pop
gs
sub
mov
enter
lret
les
and
stos
sub
fdivr
xchg
repnz
test
sarb
mov
pusha
addb
adc
sahf
imul
sbb
out
faddp
scas
fdivp
adc
sub
shlb
imul
fldl
das
add
mov
cmp
pop
arpl
dec
dec
nop
jecxz
lods
or
rolb
jo
stos
push
add
aas
inc
add
rol
jge
imull
mov
pusha
and
rcll
neg
mov
jno
fldcw
pusha
add
addr16
out
dec
inc
push
pop
sub
rolb
loopne
aaa
scas
addb
mov
and
pusha
jo
out
ja
repnz
jmp
imul
push
ret
push
idivb
rolb
jp
pop
js
xor
cmc
mov
pop
inc
jno
mov
jecxz
push
sbb
loopne
or
rorb
sti
sub
inc
jb
sti
add
mov
mull
scas
mov
add
pop
or
or
push
mov
cli
push
ds
sbb
inc
sub
push
scas
addb
inc
mov
rcrb
adc
sbb
shll
loopne
dec
out
dec
arpl
and
adc
push
jbe
push
cmp
dec
push
aam
jp
insl
idivl
fimuls
inc
cmp
movsl
mov
sbb
jnp
insl
cmpsb
pusha
add
fdivrl
push
enter
sarb
add
cmp
iret
jle
lods
scas
inc
inc
pushf
adc
xor
inc
pop
mov
push
cs
pusha
mov
enter
and
inc
lahf
adc
adc
xor
push
adc
fistps
mov
or
rcl
add
push
adc
cmp
addr16
dec
xlat
cmp
js
jmp
jp
sahf
out
jbe
pushf
daa
sub
inc
stos
icebp
push
addb
add
shr
and
test
pusha
pop
pop
lret
inc
xchg
mov
lock
inc
add
adc
cmpsl
pop
cmp
icebp
rcrl
aad
pusha
loopne
lods
pusha
loopne
cld
fwait
outsb
adc
fs
loopne
push
pusha
pusha
jnp
in
cmp
aad
add
xor
popf
mov
and
push
inc
neg
cwtl
sub
pop
loop
cmpsb
add
fidivl
adc
rorb
loopne
pushf
jb
pushf
mov
cmp
and
mov
push
repz
andb
cmp
add
imul
inc
sbb
stos
inc
mov
or
mov
pushw
inc
loopne
and
mov
pusha
push
mov
sarb
and
xor
inc
imul
mov
dec
or
push
mov
mov
push
jge
push
pop
cmp
dec
mov
jl
in
fiaddl
movsl
push
dec
jmp
addb
inc
jecxz
jg,pt
ror
js
loope
decl
and
or
popa
cmp
or
and
incl
out
aaa
loope
popf
mov
mov
shr
std
dec
je
aad
push
andb
push
push
in
and
inc
inc
or
ljmp
insl
pop
imul
xchg
sub
and
test
out
xor
and
mov
add
mov
std
lahf
or
lds
lds
jecxz
jnp
stc
sbb
jo
stos
rolb
rolb
add
sti
jbe
sub
loopne
ljmp
pop
aad
loopne
mov
and
inc
addr16
test
pusha
imul
jbe
jmp
jne
inc
pop
mov
pop
arpl
mov
and
inc
lods
jae
push
jns
jg
xchg
in
adc
fninit
fwait
dec
daa
push
sbb
add
inc
inc
adc
add
repz
fdivrs
fnstenv
mov
out
mov
cmp
out
mov
test
test
or
loopne
mov
mov
xchg
push
ja
or
call
and
push
ja
iret
jae
iret
fdivrs
inc
xchg
dec
dec
movsl
shlb
jo
rorb
sbbb
lds
dec
aas
popa
shlb
rol
push
imul
xchg
and
jecxz
clc
scas
inc
cmpb
mov
jae
mov
sahf
cmp
jg
or
test
mov
and
aam
or
sub
mov
loopne
lods
add
inc
fcoms
enter
mov
or
inc
xor
fdecstp
divl
pop
pop
inc
hlt
in
adc
lods
loopne
jno
or
gs
mov
addr16
cmc
add
in
fwait
cmp
pusha
xor
loop
andb
repz
inc
loopne
pusha
add
and
loopne
daa
xlat
ret
sti
ds
aas
addr16
addb
and
adc
inc
inc
popa
mov
shlb
jl
dec
arpl
or
pop
sar
adc
cltd
pop
sbb
dec
bound
inc
lds
loopne
lds
mov
cmc
out
popf
add
xor
xor
or
dec
adc
adc
rcl
add
and
decl
addb
jnp
mov
mov
aaa
popa
sbb
aad
loop
pop
in
cmpsl
dec
or
add
in
fildll
pop
xchg
cmpsl
stos
mov
loopne
mulb
pushf
jle
insl
and
inc
inc
sub
mov
jp
rol
xor
fucomip
stc
js
int3
mov
ret
js
mov
cs
mov
mov
in
jecxz
push
lea
sar
mov
pusha
pusha
adc
add
mov
icebp
push
push
sub
mov
loopne
test
inc
mov
mov
xor
cmpsl
xor
mov
fs
jge
es
andb
mov
test
pop
jl
std
mov
aaa
aaa
pop
cmp
adc
hlt
add
pop
jo
stc
sub
sbbb
loop
pop
xor
loopne
or
jg
or
mov
inc
push
cmp
sub
and
sub
inc
xlat
dec
hlt
int3
jae
mov
and
cmp
or
or
loopne
outsb
xor
sbb
lret
nop
cmp
call
rorb
mov
mov
jp
dec
mov
pusha
inc
xchg
cmc
push
cmp
sub
sub
adcb
lret
cwtl
pop
icebp
stc
and
jp
mul
ret
cmp
and
xor
loop
mov
pop
jl
jl
push
add
shlb
add
ror
push
cmp
mov
add
sti
lea
add
add
lret
int
outsb
jno
sbb
pop
cmpsb
and
inc
ror
in
sahf
or
andb
std
fxch
dec
insl
int
push
pusha
and
in
ret
adc
xchg
addb
push
mov
inc
mov
insl
xchg
add
cmp
or
add
pop
repz
loopne
loopne
bound
lret
adc
insb
loopne,pn
xor
in
arpl
rol
dec
dec
jg
addb
ret
jae
inc
ficoml
xor
xor
test
mov
imul
push
rol
and
pop
enter
arpl
push
test
addr16
inc
inc
mov
gs
out
jbe
jo
pop
inc
xor
jae
inc
mov
inc
push
dec
push
cmp
mov
sahf
mov
xchg
je
sbb
mov
sbb
test
push
add
ret
aam
shrl
mov
sbb
loopne,pn
ss
fistl
add
push
ficomps
leave
loopne
push
outsb
movsb
and
push
pusha
rolb
lods
shl
xor
int3
inc
cmp
out
and
cltd
cmpsl
and
fs
or
inc
shlb
push
stc
or
cli
add
leave
mov
cmp
or
cmpsb
and
pushf
mov
idivb
mov
shlb
dec
mov
loopne
mov
mov
js
sbb
dec
hlt
jne
movsl
loop
addr16
fcomps
xor
rolb
repz
rorb
je
xchg
mov
mov
popa
call
mov
and
xchg
shrb
mov
xor
sbb
xor
cltd
imul
ror
jbe
add
mov
stos
mov
and
int
xor
cmp
push
jb
imul
rolb
or
mov
sbb
cld
roll
loopne
jns
imul
fsubrs
pop
lods
repz
push
jae
inc
std
mov
imul
daa
fs
sub
fists
inc
add
data16
es
out
dec
sub
pusha
cltd
sub
add
out
dec
mov
cli
fstpt
fisttpll
pusha
fcomps
pop
xchg
and
add
lds
adc
cmp
imul
rolb
shrb
or
out
pop
pop
sbb
loopne
aaa
xor
mov
xor
adc
lock
mov
sub
jns
inc
and
or
rclb
and
cmpb
add
add
cmc
fisttpll
mov
pusha
add
addb
jg
xchg
fs
loopne
cli
add
add
lahf
pop
movsl
cmp
sub
jmp
in
dec
add
xlat
sub
sbbb
test
cmc
fildl
add
in
inc
mov
push
out
xlat
push
daa
xchg
fidivl
fnstsw
pop
mov
fsubl
lea
push
add
cmpsb
add
mov
daa
in
push
push
js
push
addb
mov
push
aas
out
lcall
out
pop
cmc
leave
mov
mov
pop
popa
es
pop
mov
pusha
popf
xor
arpl
test
add
mov
and
lret
mov
and
or
cmovne
sbb
sbb
es
movsl
mov
shr
and
sbbb
pop
adc
pushf
adc
cmp
adc
pusha
rcrb
mov
xor
or
dec
push
sub
pusha
sub
aad
loopne
xlat
jl
add
inc
stos
pop
adc
fiaddl
add
cmpsb
shlb
loopne
fnstcw
or
mov
das
pop
stos
andb
push
push
push
jle
roll
sarb
call
loope
cmp
mov
or
sbbb
stc
sbb
aam
adc
sbb
mov
stc
lret
and
testl
rcrb
into
inc
pop
in
jae
outsb
add
mov
loope
fistpll
pop
and
orb
xor
sti
mov
std
dec
mov
aas
imul
pop
cmp
mov
and
adc
test
insb
sbb
or
and
or
js
test
jmp
fsubrl
sbb
or
dec
lods
mov
rol
mov
loope
pusha
and
push
mov
loopne
adc
in
and
imul
sti
mov
das
xor
add
and
icebp
cmp
gs
cmpsb
mov
cmp
sbb
mov
mov
add
pusha
xor
ficomps
push
cmp
addb
sbb
jno
addb
jb
cmp
out
mov
sub
inc
out
dec
mov
pop
test
sub
pop
setbe
inc
mov
sbb
xor
and
rolb
adcb
adc
ret
adc
sbb
dec
cld
jecxz
loop
shlb
and
nop
jp
loopne
xor
mov
xchg
add
fwait
add
loopne
loopne
lods
inc
inc
add
popf
mov
loopne
sub
and
mov
dec
cwtl
rcrb
pop
sub
loopne
sbb
fstp
dec
lret
leave
mov
les
rol
lea
mov
rorb
mov
mov
loopne
rcll
inc
aas
lea
inc
add
mov
pop
cmp
int3
push
mov
in
in
push
xchg
dec
adc
in
cwtl
stos
lcall
std
or
loopne
icebp
mov
cli
inc
movsl
add
cmp
push
jb
mov
pmaxsw
adc
aad
call
jne
repnz
sti
mov
js
mov
jae
stc
inc
cltd
add
jle
or
bound
js
mov
and
test
rorb
inc
mov
sbb
andb
shlb
fiaddl
dec
cmc
int
lods
loopne
mov
and
and
insl
insb
inc
dec
jle
add
roll
jge
lret
push
mov
add
loopne
in
sti
push
adc
dec
pushf
jne
or
inc
jae
xchg
dec
jo
inc
mov
js
loope
mov
jl
pop
arpl
push
jae
out
ljmp
and
xchg
cmp
insb
xchg
push
push
xchg
pop
or
orb
pusha
cmp
or
or
loopne
jae
pop
push
addb
push
shlb
insl
cmp
repnz
insl
sahf
pop
fsubrp
orl
andb
mov
ds
pop
pushf
call
in
loopne
mov
loopne
mov
jge
xor
mov
inc
movsb
shlb
mov
loopne
int
sub
stc
mov
xor
loopne
cltd
add
jmp
cmp
lret
movsl
xchg
mov
jl
and
rol
and
add
inc
addr16
jmp
inc
adc
andb
lret
inc
adc
push
dec
or
xor
mov
and
stos
inc
loopne
cli
sub
inc
mov
fs
aam
pusha
idivl
pushf
inc
daa
leave
pop
fimuls
ds
or
and
shlb
fimull
dec
push
adc
test
cmp
and
ss
popa
mov
add
sbb
mov
cmp
add
jb
pop
sub
inc
cmp
in
jae
xchg
cmp
shl
aad
leave
pop
mov
loope
or
jle
inc
ret
in
dec
pop
std
fists
pop
andl
loopne
cmc
pop
xor
out
pop
mov
fistpl
inc
rcrb
lods
shlb
pop
hlt
loopne
dec
mov
inc
sbbb
loopne
push
jmp
xorb
lcall
mov
rclb
out
loopne
pop
shl
mov
xchg
push
cmp
push
push
enter
and
mov
aam
sub
in
int3
cld
mov
repz
pop
sbb
shrl
pusha
dec
loope
dec
mov
nop
cli
mov
cld
aam
jbe
incb
lods
pusha
pusha
lea
push
mov
popf
pop
push
cli
inc
out
jl
jge
and
pusha
adc
andb
repz
xchg
sbb
inc
loopne
int
ss
ljmp
jne
push
insb
cmc
mov
mov
into
xor
push
push
outsb
inc
jo
scas
jp
inc
mov
mov
subb
mov
movsb
inc
addb
and
inc
mov
data16
shlb
sbb
adcl
inc
bound
mov
inc
mov
ret
test
rclb
imulb
mov
and
dec
mov
cmp
mov
inc
sahf
repz
xor
stc
push
xor
test
pop
mov
enter
mull
mov
rolb
or
push
push
test
loopne
dec
mov
loopne
jne
add
inc
pusha
jnp
mov
pop
bound
loopne
xor
mov
xor
add
mov
repz
jp
daa
fisubl
mov
loopne
mov
and
clc
sbb
cltd
mov
lea
cmp
pop
arpl
add
andb
jmp
pop
adcl
sub
pusha
pusha
cltd
mov
sub
addb
or
cmp
pop
fisubrl
mov
hlt
icebp
xchg
dec
pusha
mov
push
outsb
mov
in
in
mov
rcr
flds
adc
mov
addl
pusha
and
out
cmp
addb
mov
and
mov
mov
stc
lret
fcoml
xchg
and
inc
cltd
ljmp
cmp
push
loopne
cltd
enter
js
cmpsb
pusha
andb
xor
adc
addb
addr16
sub
cmp
andb
inc
dec
lret
or
out
aad
lods
add
out
add
popa
jle
aam
sub
mov
cwtl
mov
sbb
sbbb
inc
mov
and
movsl
data16
sbb
xor
mov
or
mov
jmp
pusha
loopne
pusha
sbbb
jg
loopne
ret
loopne
mov
bound
outsl
add
pusha
pop
mov
pusha
sbb
sar
mov
add
and
sub
in
sub
dec
shlb
add
mov
xor
daa
int3
jl
lds
pop
popf
mov
lret
mov
mov
fidivrl
daa
mov
andb
imul
movsl
sbb
roll
pusha
sahf
dec
iret
xchg
imul
jb
imul
add
jbe
push
inc
hlt
fistpl
mov
pusha
je
inc
adc
xor
shlb
js
shl
dec
adc
leave
icebp
popf
mov
subb
loopne
jb
or
xchg
and
dec
outsb
xor
mov
mov
arpl
cmp
push
cmp
andl
inc
pushf
cmp
add
mov
pusha
lock
sbb
stc
ret
inc
leave
test
loopne
inc
or
and
or
das
out
outsl
and
and
loopne
lcall
sbb
jmp
std
push
clc
sti
push
cmp
jg
xchg
xchg
icebp
adc
rolb
incb
push
xchg
jl
leave
mov
shlb
popw
adc
lock
mov
pop
idivb
test
jl
cmp
stos
mov
push
scas
cli
sarb
lds
and
insb
scas
shlb
loopne
sahf
ds
and
and
fwait
call
aad
xchg
mov
xchg
inc
cld
or
pusha
xor
xor
jno
sub
xchg
lcall
mov
dec
sbb
inc
subb
ret
dec
or
and
sbb
add
pop
sbb
mov
testl
cmp
pop
test
add
mov
ljmp
fldt
mov
adc
sbb
nop
inc
push
mov
sahf
dec
xchg
add
rorb
out
sub
sbb
cmp
mov
pusha
inc
mov
mov
shlb
or
xchg
mov
add
add
ja
add
clc
and
insb
lret
push
mov
xor
jno
out
shr
ret
mov
les
rolb
addb
pop
stc
jl
lcall
xchg
sub
mov
data16
pusha
sarb
aaa
jl
adc
add
loopne
addb
add
and
jne
andb
pop
inc
insb
sbb
push
scas
push
dec
mov
and
lea
aas
test
jo
ja
subl
xor
lcall
inc
adc
int3
mov
sub
rcrb
cmc
pop
fldt
inc
xor
cli
test
cmp
rcrb
ror
shl
xor
jns
nop
cmpsl
movsl
mov
mov
sarl
test
inc
add
test
push
push
in
jo
jb
cltd
mov
rorb
xlat
cmpsb
andb
cs
and
insl
rol
add
mov
pop
push
jmp
ss
jg
adc
push
shl
loopne
in
cmp
pop
mov
xchg
icebp
sbb
int
push
dec
popf
inc
fwait
dec
enter
jle
out
lcall
shlb
fwait
xlat
pop
inc
cmpsl
lahf
adc
mov
addb
push
aas
jle
and
lahf
mov
jnp
xor
sub
mov
and
pusha
jb
xor
test
add
movsl
and
pop
xor
cli
lods
shlb
outsb
sbb
rolb
andb
and
add
or
dec
add
jno
sub
cmpb
out
lds
cmc
scas
mov
outsb
xor
xchg
aas
xor
mov
sub
mov
lret
jge
push
out
imul
inc
loopne
lret
pushf
inc
and
lods
add
sub
add
sbb
data16
js
mov
lahf
adc
and
inc
arpl
dec
add
addb
popa
mov
cltd
dec
stos
pop
pop
pop
lods
pop
sub
mov
cmp
lods
push
scas
nop
sbb
in
or
in
mov
xor
inc
loope
cmpsl
cmpsl
or
sti
sub
sub
pop
jb
fdivrl
xchg
andb
add
inc
or
mov
loopne
lret
dec
or
push
mov
out
leave
push
lock
jns
cmp
mov
jo
stc
xchg
add
insb
or
pusha
xchg
mov
push
push
in
dec
cmp
call
fiadds
inc
or
pusha
fs
cmpsb
mov
pusha
pop
popa
cmpsl
pop
cmp
push
lahf
sub
stc
and
loopne
repnz
and
ds
sub
xorb
nop
shlb
test
sbb
sar
xchg
imul
and
pop
ds
dec
movsl
dec
imul
cmp
adcb
lds
jbe
mov
dec
fdivrl
jb
adc
dec
dec
pop
pop
sar
mov
inc
pusha
cs
and
inc
ja
notl
xor
mov
faddp
lahf
cld
lods
lret
rol
mov
pop
test
mov
sbb
sbb
jge
jno
call
and
mov
imul
imul
loopne
mov
test
dec
addr16
je
jno
rcrl
lods
and
adc
jmp
ljmp
mov
cld
int
std
adc
xchg
stos
mov
adc
out
shl
inc
das
aas
mov
dec
or
loopne
and
pop
mov
pusha
inc
jne
or
inc
mov
and
inc
inc
add
jno
pop
jge
sub
add
push
mov
rclb
stos
mov
push
adc
in
fidivs
push
rolb
ds
andb
int
jns
add
inc
mov
ret
andl
sbb
add
or
or
mov
xchg
push
add
icebp
das
mov
mov
sub
into
cltd
mov
in
add
gs
aas
xchg
pop
or
popf
xor
adc
addr16
push
adc
fs
sarb
out
push
jg
insb
fldcw
adc
andb
addb
imul
sbb
inc
addr16
aas
test
jg
sarb
pusha
inc
add
mov
xor
jo
imul
psubd
add
loopne
test
push
and
jle
jb
mov
test
idivb
dec
mov
mov
in
xor
mov
add
push
push
out
icebp
mov
pop
xchg
jns
cltd
loop
mov
xchg
stos
arpl
cli
int
lods
andb
lods
add
nop
hlt
outsl
mov
lcall
rcrb
cmp
in
test
pusha
ror
sar
cmc
and
fisttpl
sbb
xor
sbb
add
in
stos
and
jl
int
addb
jl
movl
and
aad
pop
fsts
add
cli
stos
mov
loopne
add
inc
mov
fs
xor
cmp
sar
mov
lret
push
pusha
mov
aad
aas
mov
cwtl
push
mov
jmp
jge
sub
inc
cltd
pop
data16
mov
rolb
add
stos
inc
sbb
pop
sub
lods
std
sbb
and
out
xchg
sub
jns
js
lahf
ret
inc
mov
mov
test
sbb
mov
add
in
add
or
and
mov
xor
dec
and
movsb
and
push
mov
loopne
scas
andb
ljmp
sub
jo
loopne
dec
jno
inc
outsb
inc
lahf
mull
mov
mov
cli
xor
ljmp
lods
xchg
ds
mov
scas
pusha
mov
mov
add
add
and
out
push
cmpl
jecxz
fldt
adc
push
inc
mov
sub
daa
cmp
xor
es
pusha
mov
shl
xchg
ja
lret
lods
lea
inc
mov
xor
inc
add
xchg
in
adc
sub
sbb
scas
movsb
rolb
cmpsb
add
loopne
test
movsl
dec
dec
lods
inc
and
and
test
and
jns
sti
jb
sahf
sbb
jecxz
mov
int
cmp
xor
xchg
std
cmpsl
sbb
rolb
add
adc
jmp
js
lea
shlb
sar
xor
mov
rol
cwtl
push
loopne
xor
mov
hlt
jo
sbb
cmp
rcrl
not
pop
xchg
xor
in
mov
add
pop
icebp
loope
sbb
xchg
and
iret
xchg
mov
pusha
xchg
add
rolb
fidivs
out
andb
mov
xchg
and
subb
inc
push
cmpl
ja
xchg
mov
insb
mov
pop
loope
int3
popa
inc
push
fnstenv
sahf
outsl
add
push
jg
addb
imul
add
addb
mov
sbb
inc
test
rolb
std
andb
mov
movsl
stos
mov
sbb
or
or
mov
rolb
je
inc
loopne
subl
push
jle
adc
inc
mov
and
or
rclb
inc
loopne
je
rcrb
inc
push
and
xorb
jp
xor
and
and
sbb
out
jecxz
inc
addb
sub
sub
add
push
add
rcrb
imul
out
sub
sub
mov
inc
ljmp
xor
xor
into
push
xchg
mov
xchg
add
clc
sbb
mov
add
inc
add
inc
mov
push
mov
popf
cmpsb
and
repnz
jae
dec
out
das
int
dec
arpl
sahf
movsl
call
add
mov
xchg
and
test
jb
and
pop
and
and
fimull
mov
cmp
ljmp
dec
jns
cmp
sub
dec
in
rolb
add
shrb
add
push
nop
cld
fcmovnb
fs
iret
sub
xchg
pop
jg
dec
lcall
mov
lcall
pop
int
fimull
add
rolb
nop
lods
shlb
pusha
jo
push
addr16
fucom
jne
cmpsl
push
cmp
fdivl
setle
add
and
xchg
inc
sub
addb
cmp
pop
add
inc
pop
movsl
xor
sbb
pusha
mov
ret
xor
xor
addb
push
mov
push
daa
clc
scas
repnz
leave
xor
aad
add
push
fdivl
mov
enter
jns
cwtl
iret
xchg
cmp
rolb
je
sbb
repz
lret
je
jl
js
push
imul
js
mov
sub
inc
jo
loopne
and
loopne
and
mov
sbb
addb
lahf
adc
test
and
and
add
xorb
or
rolb
fimull
lcall
inc
adc
mov
movsb
inc
and
movsb
and
das
test
orb
xor
mov
outsl
jecxz
les
xor
or
or
pop
lods
loopne
outsb
fcompl
ret
jbe
call
add
inc
movsl
add
mov
aad
and
les
outsl
mov
add
add
pop
outsb
jg
loopne,pt
add
dec
cmc
out
pop
xor
xchg
add
daa
cmc
and
add
dec
xchg
dec
in
push
cli
fwait
shll
pusha
rcrb
insb
shl
out
cmp
imul
aam
add
fwait
lods
xor
dec
jg
imul
cld
xor
loopne
add
push
push
push
jp
pop
jns
in
push
mov
mov
mov
pop
mov
sarb
mov
mov
jno
xor
push
jnp
inc
in
mov
and
jnp
jo
popa
fdivl
inc
and
inc
into
testl
add
add
and
sub
pmuludq
jle
jg
stos
mov
loop
dec
adc
xlat
test
xor
add
addb
and
sarb
dec
imulb
pusha
jge
call
jnp
ss
sub
clc
shrb
ljmp
addb
fwait
sbb
int3
mov
inc
mov
mulb
addb
xchg
pop
sub
pusha
arpl
addl
loopne
lds
lret
jg
xor
rcrl
sub
push
or
xorl
pusha
push
or
rcrb
add
and
push
stos
shlb
jecxz
jle
mov
inc
loopne
mov
adc
addb
add
pusha
xor
add
mov
and
rolb
fdivs
sbb
jg
xchg
mov
add
aaa
jle
je
sub
rclb
sub
jmp
movsb
inc
rorb
pop
mov
push
pop
fcmovu
mov
mov
outsb
out
mulb
sub
lds
jne
mov
cs
and
push
andb
je
js,pt
shr
xlat
pop
or
nop
stc
mov
jle
call
inc
dec
and
and
cld
imul
imul
mov
mov
inc
addr16
mov
shlb
pusha
popa
sahf
movsl
adc
sub
xor
pop
dec
jge
mov
push
shl
mov
lods
addb
push
inc
rolb
or
mov
push
jb
adc
cltd
cmp
jns
dec
xlat
repz
sub
in
imul
jecxz
popa
sub
pop
jmp
addr16
imul
pusha
loopne
pop
jmp
add
jae
lds
add
and
loopne
cmp
fwait
mov
iret
cmp
pop
test
andb
adc
push
das
mov
je
sub
fsts
mov
data16
neg
mov
cmp
sbb
cld
and
or
mov
aad
fidivl
mov
mov
aad
jns
test
pusha
or
mov
les
or
or
push
scas
pusha
add
mov
pop
xchg
and
cmp
push
rorb
fxch
xchg
in
pop
ss
lds
in
and
mov
pop
sarb
lahf
cmp
jne
hlt
into
repnz
pusha
xorb
mov
rolb
lock
dec
in
jb
lock
enter
rorl
shlb
mov
mov
and
adcb
cmp
pop
jmp
xchg
roll
xchg
jo
out
mov
mov
mov
rclb
push
in
aaa
fisubrl
loopne
aam
dec
mov
mov
and
add
xchg
and
enter
mov
inc
push
andb
mov
loopne
mov
mov
jge
insl
test
pusha
icebp
push
pop
movsl
sbb
push
xor
mov
inc
sub
inc
jo
pusha
inc
sub
cmp
leave
jnp
roll
leave
cmp
jne
pusha
xchg
cmp
fsubrs
cmp
enter
fwait
xchg
into
int3
xor
mov
cmpsb
add
int
or
pusha
inc
dec
andb
cwtl
jae
push
and
loopne
addb
enter
rolb
add
mov
iret
out
frstor
loopne
push
inc
fcomps
sub
pop
jbe
imul
std
pop
xor
fimuls
inc
stos
add
dec
lods
mov
into
roll
mov
outsb
jl
test
les
loopne
ljmp
js
xchg
mov
loopne
cmp
adc
movsb
loopne
shlb
les
ljmp
xchg
xchg
pusha
inc
fstpl
aad
sbb
sbb
inc
addb
cli
sbb
mov
and
loopne
dec
add
cmp
loop
outsl
lods
and
movb
mov
add
rclb
shl
out
in
out
and
imul
xor
pop
jg
andb
sub
inc
adc
mov
cmp
shlb
shl
and
loopne
add
mull
outsl
push
fsubl
add
repnz
stos
mov
lock
xor
mov
pushf
push
push
outsb
cmp
pusha
pusha
cmpsl
mov
call
ljmp
pop
dec
clc
inc
jnp
adc
mov
lahf
lods
inc
pusha
addb
addb
pop
cltd
fiaddl
loopne
ljmp
inc
dec
or
pusha
test
shrb
cli
mov
dec
loope
push
sbb
dec
push
mov
mov
jnp
mov
mov
ror
ljmp
inc
mov
or
and
mov
inc
fincstp
sbb
xor
subl
popa
mov
scas
mov
loopne
add
in
inc
loopne
mov
jmp
pop
push
out
pop
test
stos
mov
test
inc
rcl
mov
jmp
cmpsl
xchg
add
and
adcb
xor
enter
mov
movsl
pop
fstpl
mov
dec
adc
mov
inc
push
xchg
xchg
mov
mov
add
repnz
ss
in
loopne
sub
xor
and
and
and
aas
jbe
sbb
jecxz
in
arpl
rolb
out
add
jo
xchg
in
push
mov
and
mov
jge
cld
cmp
add
sbb
cmp
push
out
in
je
cli
into
sbb
xor
mov
mov
add
mov
adc
cmp
and
mov
shlb
in
cmc
pop
inc
arpl
pusha
shrl
push
mov
mov
pusha
imul
fstl
xchg
cld
dec
mov
js
shl
push
fistps
inc
and
addb
push
and
sti
inc
sbb
mov
cmp
pop
xchg
cld
pop
xchg
xor
lret
sbb
jns
cmp
sub
das
sarl
mov
sbb
fcompl
cmp
loopne
test
jae
arpl
xor
repz
pop
test
push
xor
inc
mov
cmp
adc
rol
sub
sub
jb
dec
test
scas
loopne
out
loopne
hlt
inc
xor
adc
pushf
out
aas
and
loopne
and
pop
cmpsl
xchg
cmc
ret
jg
ss
cmpsb
mov
push
pop
or
shl
push
jns
cmp
add
cmp
stos
loopne
int3
nop
leave
mov
mov
add
addb
mov
dec
push
push
sbb
mov
inc
pop
in
and
sbb
pop
inc
das
or
mov
sarl
adc
jle
and
xor
into
shrb
jg
push
sti
xchg
cmc
loop
mov
sti
adc
add
inc
lock
jp
add
hlt
dec
cltd
les
add
push
repz
add
pusha
xchg
aad
cwtl
jg
fisttps
jnp
loopne
push
cmp
es
mov
aam
stos
and
mov
cmp
ret
mov
addb
loop
and
mov
ds
movsl
dec
test
loope
xor
fnstsw
jne
push
rcrb
add
fiaddl
add
and
cli
add
push
aad
sbb
mov
mov
and
call
push
scas
mov
in
cld
add
sbb
rolb
in
dec
out
push
ret
push
aas
jns
fists
iret
gs
mov
and
mov
fldenv
add
jbe
fcomps
mov
cmp
add
mov
push
cmpsb
add
pushl
inc
shl
je
and
subl
loopne
mov
mov
push
jne
sbb
je
add
loopne
loopne
sbb
or
data16
shlb
dec
test
out
ror
cmp
xchg
xor
shlb
out
insl
or
in
or
add
sbb
stos
pusha
loopne
cmp
xchg
xor
out
es
sub
lret
aam
mov
pop
fmuls
add
ja
pop
mov
add
lret
sbb
pusha
pop
xchg
pop
or
or
sbb
insb
fists
fbstp
call
je
mov
and
add
mov
cmp
pusha
fcom
push
pop
loope
dec
test
mov
pushf
dec
cmpsb
shlb
addr16
or
rolb
andb
jmp
jl
pushf
mov
loope
rol
add
shrl
mov
mov
inc
sbbl
or
add
inc
nop
in
xchg
loopne
ss
or
jge
sbb
js
aad
sub
and
daa
aas
mov
rolb
mov
lods
loopne
mov
inc
sub
call
pushf
jge
and
jbe
jno,pt
nop
mov
fsqrt
sahf
test
cmp
pusha
mov
sub
shlb
test
inc
int
loop
add
out
jns
dec
sahf
and
push
bound
loopne
les
or
scas
push
inc
rorb
mov
inc
fcmovnb
fsubr
push
mov
mov
xchg
dec
or
add
mov
pop
cmpsb
and
pop
pop
stc
cmp
jnp
fisttpll
dec
cmc
sbb
inc
stc
scas
xor
mov
jle
gs
and
pop
scas
jecxz
shl
jno
push
and
int
test
jmp
and
inc
mov
add
inc
jmp
and
mov
add
cmp
dec
push
pusha
xorb
fidivrs
mov
test
xchg
loope
fs
and
sub
aas
xchg
lods
pop
xchg
lods
and
mov
aas
arpl
inc
sub
dec
ficoms
cltd
push
add
inc
dec
cmp
ret
in
push
rolb
pusha
loopne
pop
xlat
ja
mov
sarl
add
cltd
push
mov
sbb
ret
aaa
popf
aaa
jl
xchg
mov
fsubl
and
add
std
cmp
mov
in
hlt
pop
jo
dec
loopne
lret
and
mov
sti
mov
jmp
daa
jp
pop
xchg
out
mov
and
bound
shl
add
or
and
jo
sti
ficompl
pusha
pushf
sbb
cld
xchg
fisubrl
inc
xchg
in
fsubrs
pop
jbe
dec
mov
cmp
aaa
cmpsb
and
inc
loopne
andb
and
cmpsb
pusha
pusha
stos
loope
aam
push
testl
das
fsubrs
and
shrb
jmp
mov
stc
sbb
xchg
cmc
and
mov
aam
leave
addb
lret
add
adc
inc
js
clc
inc
out
and
call
rolb
cmc
lods
lock
enter
pop
add
hlt
fsubrl
pusha
inc
and
dec
ret
ja
add
movsl
movsb
andb
dec
add
inc
pop
divl
les
pop
add
mov
sarl
and
test
and
divl
shll
inc
cmp
sub
mov
xor
sub
add
andb
push
xor
cld
aad
rclb
aaa
dec
or
push
fists
outsb
cltd
jns
push
aam
ficoms
adc
mov
cli
and
rcr
mov
mov
fnstcw
add
adc
sub
movsl
add
fistpl
cmpsb
add
push
pop
dec
int
popa
xchg
addr16
and
adc
mov
into
mov
pusha
and
mov
pusha
fsubl
aaa
and
lods
or
ds
icebp
std
outsl
rcrb
xchg
fdiv
jne
mov
push
xor
xor
xchg
and
mov
jb
stc
jb
xor
pop
popa
jle
push
jnp
fwait
sub
cmp
pop
jmp
pusha
mov
hlt
mov
inc
lcall
mov
mov
shlb
int
pop
or
xchg
xchg
adc
fldt
addb
xchg
mov
and
add
jbe
and
lahf
push
aam
cli
xor
jb
pop
sahf
cmp
mulb
or
push
add
out
mov
mov
mov
in
xor
jmp
and
jb
and
pop
cmp
xchg
pusha
imul
inc
fldcw
add
dec
dec
sti
mov
adc
add
shr
cmpsb
mov
xlat
shll
or
shr
repnz
repz
scas
iret
inc
mov
push
das
cmp
addb
test
inc
or
subb
dec
xchg
sub
rolb
mov
add
pushf
mov
mov
jmp
add
outsl
mov
cmp
ss
sub
mov
push
and
pusha
cmpsb
and
jg
stos
imul
jmp
and
fiadds
test
addb
inc
shr
sub
in
xor
cwtl
push
andb
and
push
jno
mov
or
inc
dec
jae
xchg
inc
push
arpl
xchg
jl
mulb
lock
add
pop
sahf
mov
out
rcl
mov
jns
pop
shll
int3
cs
mov
mov
xchg
sahf
cli
push
dec
jo
outsb
lock
rorb
pusha
mov
fcmovnu
push
and
std
repnz
sahf
cmp
shlb
loop
test
mov
inc
gs
cmp
cmpsb
add
dec
sti
mov
cli
sbb
mov
jp
lret
pusha
pop
insl
sbb
mov
cmp
add
sti
mov
push
test
mov
and
test
pusha
pop
dec
jbe
xor
aaa
out
outsb
pop
lock
pop
cmp
push
sub
and
mov
mov
popf
call
pusha
out
cmp
bound
mov
sub
mov
rcr
and
stos
xor
nop
test
xorb
inc
cwtl
jno
sti
xchg
cmp
pusha
add
adc
jg
and
sarb
sbb
loopne
cwtl
mov
and
scas
imul
std
fs
popf
cmp
imul
andb
xchg
dec
inc
xchg
mov
adc
sbb
jl
pusha
rolb
and
shl
sub
sti
add
shl
cmp
movsb
and
imul
rolb
pusha
idivb
sarl
dec
mov
pop
mov
mov
fstps
pusha
add
loopne
repz
sbb
lret
lahf
out
jno
lods
inc
and
std
xor
enter
mov
test
push
insl
xor
test
add
mov
loopne
sub
dec
fcoml
test
arpl
dec
jb
loopne,pn
je
dec
test
ficomps
shll
jg
andb
xchg
aam
and
xor
sbbl
shlb
out
ljmp
andb
sbb
cli
lret
and
enter
jmp
repz
ds
out
repz
cmpb
in
xchg
std
mov
inc
and
rcrl
loopne
pop
jb
inc
rcrb
adcb
pushf
xor
and
push
mov
rolb
sbbb
lcall
and
ss
pop
rcr
cmp
jno
cmpl
test
pusha
mov
pusha
cmp
stos
add
and
inc
sub
and
mov
sub
inc
adc
xchg
and
jnp
rorb
pusha
add
pop
sub
mov
adc
sbb
pop
cmp
popa
fldt
rolb
cmp
and
add
add
adcb
push
jmp
pop
push
mov
shrb
mov
aaa
imul
or
push
fisubl
shr
cmp
subb
pusha
clc
mov
dec
mov
addb
lret
xchg
and
inc
cld
fimull
mov
leavew
push
jne
push
fcomp
lock
inc
daa
mov
inc
dec
xor
sbb
xchg
add
add
scas
pop
jp
shlb
sti
dec
push
loopne
cmc
and
pusha
adcl
add
divb
test
sub
mov
aas
sub
cwtl
pop
sbb
das
jnp
mov
inc
push
inc
cmp
mov
xchg
mov
daa
imul
icebp
js
popl
mov
cmpl
loopne
out
mov
add
bound
fldenv
addb
xor
test
adcb
andb
js
clc
pop
sbb
or
and
dec
scas
xchg
sub
sub
mov
sbbb
pusha
pusha
and
xchg
fwait
xchg
jne
adc
inc
sub
aam
mov
loopne
shlb
add
mov
add
fsts
in
lcall
adc
inc
xor
sbbl
or
pop
mov
pop
andb
inc
popa
mov
out
pusha
imul
xorl
and
shrb
in
out
test
and
incl
loopne
gs
btr
xchg
jl
inc
add
jge
js
pushl
popf
inc
xor
or
push
sbb
adc
addb
adc
pop
std
cltd
insb
mov
mov
or
push
jnp
sub
shlb
mov
lar
rcrb
add
add
xchg
xchg
jnp
add
add
dec
out
leave
lret
ficomps
nop
sub
pusha
sbb
dec
in
test
and
cmp
mov
sbb
call
pushf
popf
lret
xchg
pusha
les
add
xchg
std
adc
in
iret
repnz
mov
mov
addr16
fstpt
dec
daa
mov
int
pusha
inc
sbb
inc
inc
add
add
daa
jmp
inc
add
push
add
shlb
mov
in
loopne
mov
popa
jns
xor
pusha
xorb
and
mov
lods
jno
lock
test
ja
les
dec
out
xchg
mov
js
push
jns
xor
mov
inc
aaa
adc
inc
rolb
and
nop
sub
jo
popf
idiv
cmpsb
and
mov
das
and
sbb
inc
push
lret
out
pop
mov
mov
rolb
dec
push
ja
mov
inc
cmc
xchg
int3
dec
and
aas
and
add
jno
pop
push
in
arpl
pop
mov
loopne
mov
add
sbb
and
test
lret
vmwrite
mov
mov
out
test
sub
subb
loopne
push
inc
push
mov
cwtl
mov
add
test
inc
mov
andb
inc
fwait
in
lahf
clc
add
andb
push
sbb
xchg
mov
cmc
inc
inc
repnz
sahf
cltd
lret
out
jmp
idivl
in
decl
inc
loopne
jmp
sub
mov
inc
and
add
jle
adc
scas
movq
pop
inc
test
ss
test
je
sub
add
push
addr16
jl
sti
xor
adc
inc
inc
ja
pusha
loopne
add
pop
test
mov
inc
mov
mov
inc
lahf
dec
ret
aas
dec
lahf
jnp
popa
or
pusha
fwait
push
inc
pusha
fs
mov
mov
pop
mov
movsl
adcl
mov
je
mov
sub
inc
adc
aas
xchg
sbb
sarb
xlat
jecxz
rol
test
pusha
shlb
mov
loopne
mov
inc
pop
aaa
aam
and
pusha
and
shlb
xchg
fnstsw
ficompl
dec
xchg
mov
lea
cwtl
add
and
mov
sahf
rcll
movsl
mov
leave
out
nop
fs
mov
push
sub
stos
add
and
pusha
pop
inc
mov
mov
sbb
arpl
loopne
stc
fs
ret
ljmp
cld
xchg
add
xchg
outsb
dec
cltd
mov
cmp
mov
push
xchg
cmp
pusha
inc
mov
inc
aaa
mov
fsubr
add
lock
fistpl
cmp
fcompl
pusha
out
inc
add
push
andb
lret
mov
ljmp
xchg
jbe
and
loopne
cmc
mov
pusha
inc
clc
out
cmp
lods
add
jb
addb
rcl
loop
push
das
dec
lret
icebp
insb
scas
andb
add
pop
leave
xor
loopne
push
mov
xchg
lcall
and
addb
jecxz
pop
out
push
pop
stc
arpl
inc
and
fimull
cmc
andb
mov
lods
shlb
in
das
add
adc
adc
test
mov
xchg
in
or
dec
lret
notl
ds
sbb
scas
mov
mov
mov
sbbb
mov
sbb
sti
in
mov
add
mov
and
movsl
adc
lds
jb
aam
mov
push
addb
lds
pusha
loopne
push
imulb
pop
add
mov
test
loopne
fstpl
test
add
xor
xchg
sbb
aam
pop
ds
push
mov
push
insb
jae
pop
sub
mov
daa
int3
xchg
ret
cmpsb
loopne
outsb
hlt
add
ret
and
das
xor
gs
aad
jmp
mov
xchg
mov
pusha
data16
and
insb
mov
arpl
xor
mov
loopne
fs
addb
fwait
and
xlat
lahf
xor
ja
dec
pop
xor
pusha
and
bound
pusha
mov
mov
xor
shl
ja
sarb
lock
out
and
add
or
repnz
pusha
loopne
aam
andb
sub
inc
jg
fwait
mov
xchg
jbe
sub
and
add
mov
xor
cltd
mov
cmp
fs
mov
or
subb
mov
ret
addr16
cmp
mov
rorb
jae
rcl
cmp
pop
lahf
test
add
les
stos
and
aas
and
rclb
and
mov
rcr
push
loopne
jnp
sub
loopne
aaa
pop
bound
pushf
test
mov
inc
jo
ret
aam
cmp
jns
sbb
mov
push
push
jp
cmp
dec
xlat
xchg
pop
jne
notl
enter
mov
xor
mov
call
and
pop
pop
popa
xchg
sub
roll
sub
and
sbb
hlt
jecxz
out
or
pusha
imul
inc
icebp
icebp
push
xor
or
inc
mov
xchg
addr16
and
mov
and
mov
aam
pop
int3
push
and
jle
cld
dec
sbb
cmp
adc
dec
dec
ja
push
iret
aas
andb
clc
outsl
pop
sti
xchg
dec
in
mov
sbbb
pop
mov
inc
jno
sbb
mov
outsb
cli
sub
mov
scas
andb
or
pusha
pushf
adc
stc
push
dec
loop
sub
rcrb
in
inc
orb
mov
or
nop
push
dec
incl
fucomip
push
loope
in
imul
mov
and
fisubl
shlb
das
or
icebp
jmp
pusha
subb
shlb
hlt
icebp
cmp
sbb
mov
pop
lods
xorps
rol
jae
jae
repnz
inc
rclb
shlb
andb
iret
lods
shlb
addb
dec
inc
imul
pushf
and
and
push
mov
stos
mov
loopne
xchg
imul
in
out
sti
insl
inc
shll
lds
inc
sarb
dec
mov
stos
and
loopne
add
mov
inc
pcmpgtw
add
mov
sbb
sahf
movsl
mov
push
inc
lret
sub
add
cld
outsb
jns
fs
scas
adc
je
fcoml
adc
int3
rcll
ja
and
lcall
pusha
and
fwait
shl
testw
add
and
arpl
aad
shrb
sahf
jbe
clc
imul
call
jecxz
xor
xchg
nop
or
lock
cmp
insb
and
mov
aam
mov
loopne
xorl
or
scas
mov
add
pusha
inc
jb
sub
jmp
sbb
mov
rcrb
push
mov
pusha
add
add
pop
dec
rcll
lcall
mov
pusha
xor
in
inc
xchg
sar
stos
push
add
pop
fdivl
sub
pop
or
out
rorb
xchg
iret
adc
aaa
or
adc
outsl
add
cmp
jns
mov
inc
adc
loopne
mov
enter
adc
nop
dec
push
push
add
mov
mov
mov
add
mov
mov
sbb
pop
sub
pusha
mov
pusha
inc
pop
xor
add
xor
out
dec
sub
call
sarb
push
and
adc
dec
stc
lret
das
pop
aaa
jne
add
jne
jl
stos
lock
push
fistpll
jns
mov
adc
test
dec
fwait
icebp
lock
loopne
jnp
push
js
adc
mov
push
test
dec
cltd
push
cmp
pop
mov
xchg
sbb
shlb
loopne
sbb
jnp
int
bound
loopne
xchg
jo
sahf
jne
sbb
fsubrs
lcall
addb
mov
popf
cltd
mov
loopne
or
add
xchg
adc
in
mov
sub
fimuls
testl
adcb
rcll
loope
inc
and
clc
into
jl
add
mov
pusha
xorb
inc
ljmp
inc
push
inc
mov
ret
or
pusha
mov
daa
mov
in
ret
jbe
ss
lods
cmp
mov
cmp
mov
add
insb
cwtl
loope
addb
or
lock
adc
orl
addb
mov
pusha
and
inc
loopne
inc
into
loopne
dec
adc
mov
cmpb
mov
out
gs
addb
mov
inc
mov
add
mov
inc
decl
rolb
add
or
outsl
xchg
mov
fidivrl
push
fadd
pop
mov
loopne
pop
mov
dec
fs
sar
inc
pusha
int
ds
cld
cs
pusha
jns
mov
aad
inc
adcb
in
pop
notb
and
inc
mov
insb
push
mov
ror
rcl
pusha
dec
push
stc
add
add
inc
jne
lock
popf
pushf
movsl
lods
push
into
stc
into
aaa
xchg
jle
cli
shl
jle
loopne
das
xor
hlt
mov
mov
pop
pop
fdivrp
sub
ror
mov
xchg
shl
in
lods
mov
mov
in
outsl
dec
mov
and
nop
jb
mov
push
mov
ret
incb
out
jne
cmpl
sbb
sub
repz
gs
pop
inc
pop
daa
push
pusha
sub
bound
inc
xor
pop
loopne
or
rclb
shl
flds
push
jmp
or
movsl
sub
pusha
call
and
inc
push
ret
lcall
ret
aam
push
cmpl
gs
int
push
inc
xor
mov
jg
mov
xchg
in
push
and
xorb
jecxz
mov
lods
and
inc
add
jb
mov
mov
adc
mov
sarb
test
loopne
hlt
jmp
test
pusha
mov
and
loopne
dec
movsb
add
inc
and
add
pusha
pusha
fwait
jne
in
mov
jne
inc
mov
fcomip
cmp
sti
loope
mov
or
cmc
cmp
lret
xchg
add
or
inc
xchg
inc
ss
andb
dec
jl
outsl
lcall
loopne
mov
movsb
mov
pop
mov
ja
inc
pusha
or
pop
dec
aaa
push
jbe
mov
jne
outsb
xor
pusha
pop
fdivrl
push
sub
mov
outsb
idiv
and
or
adc
adc
push
mov
lea
out
lret
stos
test
pusha
push
inc
loopne
std
jmp
xor
pop
xor
mov
xor
xchg
mov
cwtl
leave
xchg
shl
mov
push
and
icebp
mov
dec
stc
jo
lcall
add
xorb
inc
fsubs
add
repnz
sbbb
dec
pusha
stc
push
inc
inc
shr
mov
scas
jb
mov
push
rorl
loopne
add
and
repz
out
imul
add
inc
adc
int3
call
dec
ja
add
dec
scas
lods
stc
stos
int
pop
pop
xor
push
mov
pusha
loopne
aam
repnz
dec
das
das
inc
mov
jo
mov
add
fwait
mov
data16
dec
out
mov
insb
pop
push
test
inc
add
mov
and
aad
pusha
mov
inc
mov
subl
insl
sub
inc
mov
or
leave
add
jp
xor
fisttpll
sbb
mov
loope
mov
daa
adc
add
rolb
das
ds
ret
add
mov
mov
outsb
xchg
cmpsb
inc
shlb
mov
out
aaa
shrl
sbb
and
dec
les
cmp
adc
inc
sbb
xchg
pop
xchg
and
and
fwait
xor
mov
sbb
daa
imul
mov
loope
pop
sub
adc
cli
stos
mov
mov
mov
loope
int
aaa
cld
sbb
and
and
mov
inc
or
or
cmpb
xchg
leave
int3
xor
add
adc
and
shr
in
push
add
xor
jae
add
mov
cmpsl
lods
mov
add
loope
or
mov
and
mov
scas
rcrl
dec
cmp
jle
fs
jg
sbb
dec
adc
std
and
jmp
sub
mov
jg
mov
loopne
aad
daa
xchg
mov
popa
stc
mov
daa
push
test
sbb
mov
push
push
inc
subb
loopne
sbb
orb
cld
pop
mov
xchg
nop
mov
mov
cmp
mov
in
stos
sub
and
cltd
stos
xlat
nop
sbb
jecxz
jmp
int3
call
xchg
addl
dec
test
mov
sahf
inc
popaw
in
add
insb
ja
rolb
rolb
jb
clc
aad
cld
adc
test
sub
and
mov
add
mov
pusha
jmp
inc
push
sbb
jo
cmp
in
pop
pop
outsl
pop
mov
jo
imul
pusha
add
mov
fbld
mov
shl
jl
ljmp
sub
pop
pop
dec
xor
jg
xor
add
xorb
inc
mov
ret
imul
push
mov
add
adc
sbb
cs
loopne
aaa
notb
dec
lock
notb
rclb
dec
outsb
mov
pop
roll
and
xchg
xchg
shlb
and
or
pusha
jbe
cmp
andb
and
and
sbbb
sbb
inc
and
ds
test
loopne
cmp
das
cli
or
loopne
test
loopne
mov
sub
addb
inc
pusha
sub
repnz
loopne
pop
mov
gs
das
sti
mov
loopne
push
mov
mov
inc
mov
mov
or
pusha
rolb
and
loopne
xor
loopne
and
xor
jecxz
cli
xchg
xor
pusha
inc
movsb
and
xchg
or
inc
cli
stos
inc
add
sub
inc
out
aas
sbb
dec
or
pop
sbb
in
or
dec
imul
shlb
fstps
push
idivl
and
icebp
out
mov
or
pusha
rorb
pusha
xchg
sbb
int3
inc
inc
cmp
arpl
and
and
iret
xchg
lock
aaa
adc
jg
fldl
repz
add
mov
andb
fwait
out
insl
aaa
or
inc
movsl
das
jb
sub
inc
push
bound
sbb
stos
shlb
rclb
xchg
xchg
sub
cmpsb
pusha
rolb
adcb
inc
mov
mov
leave
sub
faddl
bnd
sub
mov
ret
mov
mov
add
hlt
pusha
inc
pop
push
mov
add
sbb
rol
sub
lahf
add
push
roll
scas
and
ret
dec
aas
mov
shrb
dec
leave
scas
shl
adc
and
sarb
mov
lock
enter
into
mov
add
and
add
fld
dec
lret
arpl
sub
sbb
fsubs
loopne
hlt
bound
repz
mov
mov
rolb
pop
ret
mov
loopne
daa
lea
sbb
cmpsl
push
add
ror
js
arpl
add
mov
clc
dec
in
xchg
out
xlat
outsl
lods
push
cmp
mov
pop
push
iret
jg
mov
repnz
in
loope
aaa
orl
and
xchg
decl
dec
and
pusha
jg
idivb
jnp
dec
lea
mov
outsl
clc
cmpsb
mov
mov
cmc
add
mov
ss
dec
pop
loopne
rol
js
xlat
mov
push
fstl
inc
repnz
xlat
insb
jecxz
pop
pop
mov
loopne
mov
iret
jp
shrl
sub
imul
add
sbb
inc
mov
aam
cltd
mov
pusha
shrb
aam
mov
loop
popa
push
or
adc
mov
scas
addb
adc
int3
lods
loopne
cmpl
in
xchg
push
mov
pusha
sbbb
inc
pop
sbb
pusha
mov
adc
daa
repz
sub
xor
icebp
or
adcb
pop
mov
sub
mov
pop
or
sarb
or
andl
mov
sbb
mov
xor
mov
fs
jmp
push
ffree
jg
lret
mov
inc
sbb
xchg
or
add
insl
mov
xchg
outsb
int
mov
leave
jno
inc
out
imul
push
jecxz
frstor
cmp
add
add
mov
andb
imul
test
pusha
lret
sub
inc
mov
addb
cmp
mov
cmc
jo
mov
add
adc
into
jne
fidivrs
mov
decl
push
push
mov
jo
out
sbb
out
mov
pop
or
jp
imul
xor
cmp
std
sbb
pusha
loopne
mov
cmp
iret
xor
pop
xchg
xchg
dec
pop
ds
mov
aaa
fmuls
and
xchg
jmp
stc
xchg
cwtl
sbb
inc
inc
sbb
jno
rorl
pusha
pusha
adc
xchg
add
mov
pop
cmp
in
mov
xchg
sbb
push
xchg
cltd
in
or
add
dec
xor
adc
cmp
dec
mov
sbb
pusha
repz
inc
mov
mov
daa
push
mov
shl
mov
inc
fbld
test
loopne
mov
aam
mov
inc
xor
xor
jg
sti
push
sub
andb
xchg
in
aas
fdivs
pop
or
inc
dec
scas
mov
and
shlb
lcall
incb
loopne
inc
push
inc
sti
dec
cld
and
adc
shlb
cmp
loop
mov
adc
add
add
pop
push
push
mov
sahf
mov
add
xor
xchg
fcompl
cmpsl
nop
es
mov
or
rolb
inc
pop
repz
or
push
sub
int
loop
sub
inc
test
inc
jg
xor
aas
push
lock
movsl
mov
shll
lods
rolb
jle
cwtl
mov
js
shlb
and
popa
inc
ja
add
js
lock
inc
sub
mov
xchg
lahf
dec
add
repz
jmp
ss
orb
cmp
test
loopne
inc
adc
mov
fildll
rcll
or
addb
add
inc
lods
mov
shlb
cmp
xor
je
sub
push
push
dec
inc
std
jg
in
xor
arpl
sbb
or
xorb
lret
pusha
pusha
stos
push
scas
inc
inc
mov
shlb
cmpsb
and
loopne
fwait
pop
mov
and
jmp
clc
imul
jle
and
loopne
xor
cmp
push
mov
loopne
in
or
ret
shll
clc
xchg
movsb
addb
push
pop
xlat
ljmp
inc
cmp
xchg
xchg
xor
add
popf
movsb
loopne
lods
inc
and
shl
add
pusha
mov
outsb
popf
adc
ljmp
push
jae
arpl
jbe
loopne
or
or
mov
or
add
stc
inc
sbb
pop
cmp
push
ret
loopne
push
into
loop
xor
loopne
jmp
into
inc
aad
lods
cmp
or
mov
ret
mov
adc
aad
add
mov
lret
pop
enter
cwtl
hlt
ret
stos
mov
in
jnp
jbe
rorl
outsb
fsubs
shlb
mov
insl
aam
xor
dec
jae
and
mov
pusha
sarb
dec
sahf
loop
dec
dec
lahf
imul
add
mov
in
in
enter
outsb
ret
int
mov
inc
les
and
loopne
mov
ret
int3
dec
lea
movsl
push
sub
ljmp
loopne
xor
push
loopne
dec
mov
dec
sbb
add
mov
cmpsl
pop
lds
andb
fsubrl
arpl
push
pusha
mov
std
js
mov
cmp
fbld
push
cmp
loope
andb
adc
mov
cmpsb
add
dec
mov
inc
mov
and
add
and
pop
fxch
and
or
and
loopne
fadds
pop
stos
lret
pushf
in
mov
and
rolb
hlt
cwtl
aas
or
xor
loopne
rol
or
paddusw
jp
mul
inc
movsb
loopne
xor
adc
adc
pusha
add
lcall
mov
je
stos
jecxz
hlt
test
stos
mov
leave
lret
push
cmp
mov
inc
mov
mov
jge
fs
lret
inc
mov
push
lret
fcoms
aas
mov
push
sahf
dec
mov
jg
mov
fstpt
mov
outsl
inc
adc
push
repnz
repnz
and
jp
lock
sahf
enter
faddl
shlb
inc
xor
out
xor
mov
rcrb
repz
mov
lret
mov
imul
divb
cwtl
cmp
add
cltd
xchg
push
jb
int3
jl
div
and
and
xor
sahf
out
sub
loopne
push
loopne
repnz
pop
test
jno
shrl
inc
mov
sbb
add
add
mov
push
push
inc
loopne
add
sbb
loope
mov
or
add
pushf
andb
aam
mov
dec
jg
leave
cld
ret
shlb
and
outsb
pop
out
xchg
inc
xchg
cltd
pop
out
cmp
dec
dec
mov
mov
gs
lods
cmc
mov
leave
mov
pusha
pop
xor
jp
jp
pop
adc
sti
inc
ss
mov
jg
or
loopne
scas
mov
pusha
orb
pusha
loopne
lahf
ja
dec
insb
sub
clc
repnz
and
insl
out
push
rcrl
and
and
stos
rol
mov
lcall
pop
push
sahf
jb
in
inc
je
adc
loopne
out
icebp
movsl
jge
mov
mov
icebp
inc
mov
loopne
loop
xor
adcb
adc
je
loope
add
mov
mov
xchg
and
mov
dec
dec
jecxz
and
push
mov
addr16
xchg
inc
repz
jp
add
mov
testl
mov
fisubrs
pop
jmp
mov
inc
pushf
mov
test
andb
and
pushf
cli
les
stos
mov
mov
loopne
outsb
xchg
xchg
movsl
je
mov
icebp
pop
mov
test
pusha
stos
loopne
pop
pushf
stc
pushl
pop
int
lret
out
movsb
add
outsb
jecxz
inc
rol
push
jae
inc
pusha
movsb
loopne
jecxz
fs
xchg
mov
mov
pusha
mov
or
add
sarb
rolb
sahf
movb
scas
add
mov
loope
loop
xchg
je
pop
rol
loopne
dec
andl
lcall
inc
frstor
icebp
xlat
adc
inc
sub
test
enter
pushf
clc
xor
jb
xchg
and
clc
ss
mov
add
mov
sub
inc
insl
or
mov
cmpsl
in
mov
pusha
in
xlat
cmp
out
mov
shlb
mov
add
sbb
sti
cltd
cmp
cs
add
jmp
jp
and
pusha
mov
lret
fstl
and
out
imull
pusha
rclb
dec
inc
sub
andb
pop
and
call
pushf
xor
inc
add
fcmovu
ds
in
mov
imul
out
dec
sarb
idiv
adc
lcall
add
pusha
cmpsl
push
mov
subb
mov
inc
out
push
pusha
mov
xorl
add
pop
leave
movsb
and
xchg
or
cmp
inc
jecxz
jp
clc
push
dec
inc
sti
cli
loope
loopne
lret
pusha
lret
and
pusha
rorb
loopne
xchg
adc
cmp
push
lcall
mov
add
jp
sub
and
ficomps
jbe
lcall
mov
and
stc
pop
sub
and
inc
inc
xor
jnp
outsb
cmp
cmp
pusha
mov
add
addr16
out
sbb
ljmp
mov
and
insl
sbb
sub
pushf
xlat
js
mov
pop
iret
and
loopne
orl
lcall
shlb
subl
add
adc
pusha
mov
mov
cmp
mov
mov
fucomp
xchg
daa
xor
mov
xchg
push
dec
jp
shl
lock
sbb
push
and
xchg
mov
add
mov
sti
cli
push
adc
out
fdivl
add
pop
enter
fldenv
push
add
and
aam
ljmp
and
mov
pusha
shlb
imul
call
jecxz
shlb
inc
aam
mov
mov
mov
test
push
ds
add
bound
push
dec
add
test
nop
or
sbb
mov
loopne
cmp
sbb
andb
pop
jno
ds
in
adc
ficoms
add
scas
inc
pusha
mov
mov
addb
and
loopne
or
pusha
sub
loopne
test
inc
jle
inc
subb
mov
and
jo
cmp
pusha
mov
and
push
rcll
int3
call
call
rolb
jg
jnp
mov
pop
movsb
shlb
mov
add
push
jbe
add
dec
fstpl
mov
test
jp
lds
mov
test
rcrb
scas
pushf
cmp
add
push
int3
out
iret
les
pusha
out
cmp
mov
inc
dec
mov
adc
inc
pop
add
mov
jns
mov
fstl
push
mov
inc
fs
dec
adc
or
fisttpll
fdivrl
inc
loopne
addr16
repz
push
jnp
mov
sbb
imul
add
sub
imul
or
lea
xorb
test
sub
jg
out
sbb
xor
add
inc
mov
adc
int3
add
shlb
dec
adc
hlt
mov
inc
mov
imul
pop
fsubs
cwtl
cmp
and
fs
sti
mov
pop
push
ror
gs
mov
pusha
je
lods
jns
imul
xchg
adc
pusha
pusha
loopne
xchg
cwtl
mov
add
pusha
es
add
xchg
jp
push
ds
pop
mov
dec
pushf
jno
icebp
fstps
jae
xchg
pop
mov
cmp
dec
and
mov
andb
addr16
push
popa
mov
cmpsl
sub
pusha
rclb
pop
lcall
andb
pusha
pusha
in
jl
or
into
mov
xchg
ljmp
mul
ss
sub
adc
scas
add
inc
dec
in
add
add
test
roll
add
ficoml
inc
jnp
movsb
and
testb
xor
xchg
xchg
jbe
pop
mov
imul
shl
outsl
sub
mov
lea
test
and
mov
imul
cltd
movsb
pusha
and
fs
xor
sbb
add
popa
rcll
imul
fisubrs
loop
jecxz
std
stc
and
pusha
lret
or
shll
rcrb
sbb
lret
loopne
cmp
xchg
inc
sahf
add
sub
pusha
add
mov
xor
push
jo
sub
mov
adc
lret
notb
pusha
inc
bound
add
mov
pusha
adcb
fldenv
xchg
fiaddl
insb
in
shlb
cmp
int
sti
out
push
push
andb
rclb
int3
or
fstl
dec
leave
pop
sbb
lahf
ja
imul
mov
cmc
push
aaa
pop
sub
mov
arpl
push
push
push
cmp
mov
mov
push
je
inc
inc
inc
cmpsl
lret
lcall
cmp
jo
mov
jne
shl
aam
mov
jbe
aam
scas
xchg
xor
mov
fmulp
loope
pop
mov
mov
mov
cmpb
add
cmc
dec
cmpl
inc
inc
mov
sbb
shlb
xchg
int
or
hlt
loop
sub
sub
inc
and
adc
addr16
cltd
push
adc
push
sbb
in
cmc
outsb
add
testl
xchg
ss
mov
iret
arpl
mov
mov
dec
test
inc
sahf
push
xchg
jae
xor
add
add
cmp
jg
jg
rorb
subl
fyl2x
fs
stc
ds
addb
xchg
stos
andb
mov
popa
push
je
mov
mov
mov
addb
mov
pusha
pusha
cmp
bound
rorb
add
fidivl
and
sbb
push
mov
ret
sbb
aam
lods
and
add
inc
pandn
inc
pusha
loope
xlat
sub
loopne
push
psllq
outsb
jl
add
mov
mov
inc
fidivrl
rcrb
test
inc
sbb
xor
fwait
gs
and
jp
cld
inc
xor
push
rol
cmp
mov
sbb
adc
inc
xlat
push
insb
fidivrs
insb
cmp
gs
adc
or
and
mov
mov
xchg
cmp
pop
popf
out
sbb
aad
fidivrs
and
jo
xchg
jae
sbb
and
and
outsb
or
loopne
repnz
test
pop
ja
arpl
test
fwait
mov
lret
mov
andb
inc
lock
std
and
dec
fstpl
les
popf
enter
in
sbb
and
cmp
jp
pop
mov
lret
xor
push
mov
fisubs
and
pusha
lret
mov
pop
call
and
push
mov
pop
call
mov
rolb
dec
cld
in
jp
xchg
ss
pop
mov
pusha
and
loop
or
fstps
inc
inc
cmp
ret
and
lret
dec
out
dec
jne
or
pushf
xchg
sar
imul
inc
cmp
sbb
pop
xor
jecxz
data16
int
clc
mov
mov
pop
test
andb
mov
sti
outsb
xor
and
hlt
addb
ljmp
lea
shlb
das
xor
int3
pushf
jae
mov
scas
add
mov
imul
adc
mov
mov
fistl
lods
inc
fiadds
pusha
and
loopne
add
add
out
cmc
add
and
mov
fistpl
xchg
jmp
clc
sub
loopne
iret
pop
aad
inc
mov
sbb
pusha
shlb
and
shl
sahf
insl
sbb
into
cmp
mov
loopne
aas
mov
mov
test
jb
fwait
mov
addr16
mov
xchg
stos
add
xor
pusha
rcr
les
cmp
and
push
inc
add
daa
xchg
adc
add
loopne
mov
cld
sbb
pop
lods
and
inc
dec
shll
mov
and
std
icebp
add
xor
inc
jl
sub
cmp
je
cmc
cmpsl
cs
xor
jbe
mov
pop
xchg
popa
loopne
pop
dec
sbb
aad
push
ljmp
insl
sbb
fsubp
stos
rolb
push
inc
or
xchg
cmc
inc
repz
xchg
mov
test
and
or
shll
ja
mov
push
sub
aaa
mov
popf
xchg
mov
cmp
pop
sbb
test
shrb
or
imulb
pusha
pusha
sub
pusha
and
imul
add
arpl
in
lret
mov
sbb
cmc
insl
push
repnz
pushf
cmp
ficompl
and
lock
cmpsl
inc
rorb
mov
mov
fimull
and
xchg
inc
push
insl
out
xchg
sub
inc
xchg
cmp
es
fbld
call
mov
out
sub
push
out
adc
fstpt
andl
sub
out
push
and
ret
xchg
mov
imul
mov
insb
xchg
xchg
jmp
shl
cmp
lea
lods
push
pusha
pusha
mov
rolb
notl
test
pusha
enter
pusha
adc
mov
cmp
mul
sbb
stos
inc
andb
sub
and
sbb
test
loopne
add
inc
inc
cmp
cmp
ljmp
fadd
pop
das
inc
aas
fstl
mov
loopne
pusha
loopne
xor
dec
outsl
xchg
jnp
enter
xor
fcoml
dec
fs
and
mov
inc
aaa
cmpsl
sbb
orl
add
ja
rclb
js
mov
jne
scas
and
ss
mov
rclb
and
stc
mov
push
pop
incb
aaa
mov
mov
jmp
add
addb
shlb
jno
out
cmp
les
sbb
movsb
rolb
mov
pop
pop
shrl
jbe
dec
xor
outsl
gs
les
mov
out
mov
jp
scas
pusha
add
jae
out
mov
or
daa
cmp
push
pusha
and
fsubl
xchg
lods
inc
pusha
inc
and
inc
cltd
fwait
xor
out
sbb
mov
rolb
loop
sbb
notl
mov
pop
jge
inc
mov
jmp
cld
loop
ljmp
add
adc
jle
notb
aaa
fsubl
dec
push
adc
loopne
fisubl
outsb
es
adc
loopne
gs
mov
js
les
movsb
pusha
loopne
scas
and
inc
and
shlb
je
movsl
repz
xchg
int3
push
leave
out
or
out
das
push
push
je
sbb
and
repnz
cmpb
into
and
add
xchg
decl
cmpb
mov
test
ret
decb
add
inc
aad
nop
sub
pusha
jae
lret
fldt
xchg
mov
mov
out
jecxz
andb
add
push
adcl
popa
test
and
add
int
shrl
mov
andb
xchg
xor
cmp
mov
aad
addb
movsb
shl
mov
jl
shlb
in
jno
pop
mov
movl
and
daa
cmp
mov
loopne
jge
sub
xorb
mov
cmp
loop
add
cltd
and
add
rorl
jp
jne
aam
lcall
and
pusha
out
lcall
inc
loopne
xchg
and
into
mov
mov
stos
add
test
cmp
xchg
jno
xchg
cmp
cs
xchg
push
nop
fnstcw
movsl
push
sbb
mov
mov
pusha
mov
inc
or
insb
mov
mov
shlb
imul
mov
or
loopne
fwait
xchg
dec
push
and
and
xchg
pusha
sbb
pusha
inc
mov
loopne
roll
xchg
mov
mov
pusha
xlat
das
pop
ret
mov
pushw
sbb
and
xor
inc
loopne
mov
add
adc
loopne
fists
xchg
aaa
mov
out
add
dec
pop
andb
and
loopne
and
cmp
xor
adc
inc
inc
cmp
pop
dec
in
push
adc
push
xor
rol
and
cmpsl
add
xor
fsubs
loopne
cmp
pop
jl
xchg
out
sub
xchg
lret
lea
fstpl
mov
faddl
mov
dec
lods
loop
lock
dec
xor
mov
fwait
pop
mov
pusha
or
nop
fdivrl
bound
in
daa
jg
xchg
pushf
or
sbbl
sbb
pushf
in
imul
mov
add
and
and
gs
in
loopne
hlt
outsb
push
sbb
shl
jne
xchg
push
mov
mov
fldcw
pusha
add
lcall
dec
jge
shrl
mov
loopne
dec
popf
pop
jo
mov
stos
sarl
imul
out
pop
insb
rcll
ja
pop
or
pusha
fs
fbld
js
repz
cwtl
xor
dec
lahf
dec
fadd
cmp
add
and
cmp
jmp
loopne
adc
adc
mov
inc
in
cmp
scas
pop
sbb
fistpll
hlt
dec
adc
in
dec
mov
mov
pop
xchg
push
sub
mov
shl
jno
push
and
and
mov
mov
fcmovnu
js
mov
stos
push
pop
outsl
flds
and
lret
je
shlb
loopne
push
data16
push
aad
sbb
lods
lock
out
jbe
mov
outsb
xchg
test
xchg
into
sub
mov
cmp
inc
push
add
test
pusha
jge
inc
mov
or
add
test
sbb
test
pop
jb
fucomp
or
andb
inc
adc
sti
mov
rcrb
jmp
and
andb
lods
sbb
andb
loope
pop
loop
add
add
add
sar
loopne
stos
add
add
add
xor
cltd
and
adc
cmpsb
and
test
aad
sub
ror
std
and
inc
scas
enter
mov
stos
adc
lret
or
je
mov
xor
jl
roll
and
xor
dec
mov
addb
inc
mov
lods
mov
inc
jge
inc
lock
movsb
and
test
pusha
jle
mov
xor
mov
mov
jle
shll
rolb
xchg
lods
test
std
mov
xchg
jg
mov
sar
lret
jns
or
adc
loope
pop
bnd
test
inc
fldt
mov
rclb
rcrb
mov
push
addl
into
ret
or
fdivrl
test
and
dec
out
neg
xchg
lret
rclb
insl
sbb
add
pop
and
rcrl
loopne
stos
mov
rolb
sub
add
loopne
push
sub
aad
mov
testb
push
loopne
dec
pop
pushf
pusha
fcompl
jbe
jae
fucom
lcall
inc
in
test
mov
sub
jnp
orl
jl
sub
or
flds
pop
sbb
andb
xor
fwait
push
cmc
aas
aam
mov
mov
out
loopne
insb
jae
imul
xlat
sub
add
aaa
jp
rol
sub
inc
inc
or
add
or
xorb
mov
in
or
sub
addb
xor
push
inc
ficoms
cmpl
out
sbb
popf
inc
andb
ret
aas
aam
aas
push
xchg
in
sbb
imul
xor
xor
cmp
pop
loop
loopne
or
and
add
jnp
inc
int
pushf
pop
in
cwtl
je
add
pusha
popa
sub
add
jno
idivl
fidivrs
or
and
xor
movsb
pusha
add
mov
jno
stos
push
adc
in
pop
loopne
out
iret
in
push
sbb
cmp
cwtl
add
adc
sbb
ret
aaa
sti
ficoms
hlt
les
loopne
iret
push
fsubr
jecxz
add
loope
mov
adc
fdivrl
inc
addr16
add
or
loopne
andb
pusha
mov
iret
gs
mov
loopne
sbb
push
mov
enter
rcll
ljmp
mov
mov
xchg
hlt
addb
mov
lea
js
and
mov
loopne
xchg
and
popl
clc
pop
pop
into
add
jo
loope
xchg
jle
cmp
mov
cltd
xor
pop
fimuls
fistpll
sub
mov
inc
cmpb
loopne
shlb
jb
xchg
and
inc
cmc
stos
cs
loopne
push
in
add
mov
pop
mov
test
mov
inc
test
add
addb
mov
add
lods
loopne
push
or
adc
dec
shlb
pusha
inc
neg
or
inc
mov
mov
pop
push
cmp
cltd
mov
sub
mov
mov
pusha
daa
test
mov
mov
adc
sub
cmp
ret
addb
addb
bound
in
rolb
addl
loopne
fnstenv
rcrl
adcb
ss
test
shlb
jmp
rolb
fs
pushl
int3
test
sbb
dec
mul
ja
out
rorl
sbb
jne
in
lods
shl
ss
inc
adc
sbb
jl
cmpsl
push
and
inc
sub
jb
jge
ds
or
xor
and
std
pop
in
jnp
xor
xchg
pop
bnd
and
mov
aam
aaa
and
mov
fstpt
pop
outsl
sbb
and
add
add
lret
dec
es
andb
mov
lds
xor
addb
lds
addl
mov
jp
in
xor
loopne
xchg
movsl
pop
mov
cmp
out
enter
int3
leave
dec
leave
mov
pusha
hlt
std
mov
add
and
push
xchg
pop
pop
adc
pop
add
loopne
inc
pusha
imul
mov
rorb
inc
pusha
mov
movsl
leave
loopne
out
js
cmp
add
cmp
loopne
pop
push
add
push
scas
loopne
lret
xchg
cltd
xor
aad
add
mov
or
inc
test
add
fs
xor
imul
out
sbb
add
xchg
push
push
pop
iret
adc
jne
sub
mov
inc
data16
sahf
push
sub
subb
add
cmp
inc
xor
aas
fiaddl
jle
adc
sahf
xchg
add
mov
iret
mov
loopne
rorb
cmp
inc
and
cmpsl
pop
popa
add
and
and
iret
mov
pop
sahf
sbb
mov
inc
loop
lods
pusha
add
and
mov
and
int3
xchg
popf
cwtl
xor
mov
mov
icebp
rolb
leave
mov
iret
mov
adc
or
mov
add
int3
mov
mov
xor
mov
leave
xor
mov
sbb
xorl
inc
sbb
pusha
ss
push
sbb
push
inc
add
mov
mov
outsl
or
inc
adc
andb
pusha
xlat
lret
or
xchg
xlat
jecxz
pusha
shlb
js
jae
mov
rorb
andb
jle
shl
push
sub
pusha
fwait
xor
lds
fwait
add
shrb
repz
and
inc
xor
jl
addr16
in
cltd
loope
repz
outsl
pop
mov
cmc
decb
inc
inc
imul
aam
inc
and
movsb
inc
andb
andl
loopne
and
addb
aad
add
add
lock
mov
shll
pusha
or
inc
sti
add
or
das
dec
movsl
adc
addb
or
shr
cltd
fucomip
or
subb
fucomip
loop
lea
add
mov
mov
ss
outsb
in
add
cmp
insb
test
mov
mov
jb
ficomps
nop
xchg
mov
add
xchg
divl
pop
jnp
pop
fcoml
rol
sub
out
cmp
cmc
pop
fmuls
loopne
lcall
mov
pusha
add
lds
mov
test
pusha
mov
push
leave
ljmp
shlb
jecxz
shll
in
mov
mov
ret
rolb
movsb
and
pop
fs
sbb
fsubrs
pop
clc
mov
loopne
dec
loop
sub
add
mov
and
xchg
mov
iret
dec
sub
js
and
ljmp
test
loopne
shl
imul
cmp
mov
mov
jnp
cmpsl
inc
cld
cmp
inc
daa
cli
shlb
and
test
push
movsl
fwait
mov
subb
hlt
hlt
pop
jns
jno
add
inc
push
inc
fnstenv
adc
lahf
lret
cmpsb
add
mov
sbb
pop
aad
clc
ficoml
roll
or
loopne
inc
pop
push
pop
lds
test
mov
and
sahf
in
dec
repz
mov
pop
push
in
cs
and
mov
push
jp
add
call
sub
and
nop
xchg
jge
jb
rorl
movsl
sbb
adc
add
push
shlb
popa
push
mov
cmp
jmp
icebp
push
or
pop
and
aad
loopne
mov
stc
scas
sahf
gs
adc
push
shl
cmp
gs
repz
dec
imul
sbb
fwait
loop
ds
sbb
add
gs
paddsw
or
cmc
clc
inc
repnz
hlt
mov
push
dec
lea
inc
sbbb
xchg
test
shll
outsl
enter
jno
lock
pusha
inc
jecxz
aas
into
xor
and
cwtl
adc
jne
xor
fxch
sub
shrl
jnp
hlt
aas
cmp
fs
shl
mov
bound
pusha
mov
xlat
mov
add
and
mov
or
scas
sub
mov
mov
inc
cmp
sbb
fsubrs
sbbl
dec
inc
jns
or
mov
cmpsb
and
aas
sbb
or
test
add
inc
pusha
pop
or
mov
pop
sub
inc
inc
xchg
jno
test
cmpsl
adc
andb
cld
ret
cmp
jnp
sbb
js
jo
inc
loopne
sub
jg
and
add
add
add
