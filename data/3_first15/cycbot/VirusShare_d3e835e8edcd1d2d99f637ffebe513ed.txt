add
loopne
loopne
loopne
loopne
loopne
add
fcmovu
fcmovu
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
add
add
and
and
add
rcl
rcl
rcl
rcl
pop
pop
pop
add
sub
sub
sub
sub
sub
sub
sub
add
add
cs
add
pop
add
add
add
xchg
xchg
xchg
xchg
xchg
add
add
add
add
add
lea
add
dec
dec
add
push
push
push
add
add
add
dec
add
das
das
das
das
das
das
das
das
das
add
add
lods
lods
lods
lods
lods
lods
lods
add
add
fcomp
fcomp
fcomp
fcomp
fadds
add
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
add
add
mov
addl
add
add
in
in
in
in
in
in
in
in
in
in
in
in
in
sub
sub
add
add
add
in
insb
insb
insb
insb
add
add
in
in
in
in
in
in
lcall
add
add
add
add
add
add
mov
add
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
add
add
fcmovu
fcmovu
in
add
dec
dec
dec
dec
dec
dec
mov
mov
mov
mov
mov
add
lcall
push
push
add
inc
inc
add
jns
jns
jns
add
mov
mov
mov
mov
mov
mov
add
add
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
add
repnz
add
arpl
arpl
arpl
arpl
add
push
push
jno
jno
jno
add
add
pop
pop
pop
pop
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
add
add
add
add
add
dec
dec
add
add
add
mov
mov
mov
mov
add
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
mov
mov
and
add
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
add
add
add
add
add
popa
popa
popa
add
cmp
cmp
add
add
out
out
out
out
out
out
out
add
add
or
or
add
add
jecxz
jecxz
add
pop
pop
pop
pop
add
add
lods
add
xor
add
popf
popf
popf
popf
popf
popf
popf
add
aad
aad
aad
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
add
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
loop
loop
loop
loop
loop
loop
loop
add
push
push
push
push
push
push
push
push
push
push
push
push
push
mov
mov
add
add
add
add
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
add
mov
mov
mov
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
dec
dec
dec
dec
dec
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
rcl
push
push
push
push
push
push
push
push
push
push
push
push
push
iret
iret
iret
iret
iret
iret
iret
add
add
add
push
push
push
push
push
push
push
push
push
push
push
push
add
add
sldt
pop
pop
pop
pop
add
popl
add
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
addb
addb
add
in
add
add
jno
jno
jno
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
rolb
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
add
lea
lea
lea
lea
lea
lea
rcl
cmp
cmp
cmp
cmp
cmp
repnz
or
add
add
insl
add
movsl
add
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
add
xor
xor
xor
xor
xor
xor
add
filds
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
add
add
adc
add
add
adc
adc
adc
adc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
outsl
add
data16
add
add
addb
addb
addb
mov
mov
int3
int3
movsb
movsb
movsb
movsb
movsb
movsb
pop
pop
pop
pop
pop
pop
pop
add
inc
outsb
dec
andb
dec
ljmp
cltd
loope
mov
inc
push
insb
sbb
lods
cmp
mov
mov
loopne
dec
sub
mov
cwtl
sub
loope
adc
repz
mov
push
rolb
andb
addr16
add
sar
xchg
clc
jle
sub
and
sbb
pop
push
cld
sub
and
xor
cltd
mov
rolb
xchg
xchg
pushf
mov
mov
addb
lahf
pushf
sbb
inc
cld
sbb
inc
mov
je
faddp
loopne
andb
push
pusha
add
mov
and
jg
mov
rolb
loopne
mov
mov
cmpsb
mov
sub
inc
mov
inc
push
or
add
sbb
pusha
movsb
pusha
add
rcrb
or
shl
shlb
mov
arpl
leave
iret
push
rorl
adc
or
shlb
loopne
arpl
jecxz
push
imul
sti
add
inc
xchg
pusha
add
mov
add
sar
sub
xchg
dec
mov
daa
mov
mov
pop
mov
and
dec
pop
mov
adc
mov
loopne
adc
add
inc
xor
test
push
cli
es
loopne
push
add
dec
mov
loop
lahf
gs
and
cmpsb
rolb
push
push
or
lahf
mov
xor
fwait
dec
xlat
jp
rcl
jb
mov
sbb
int
mov
sahf
int
add
pusha
cmp
addb
sahf
stc
lcall
popf
inc
test
rcr
mov
icebp
sarb
adc
lahf
mov
and
fs
les
loopne
mov
bound
lret
push
movsb
inc
pusha
dec
or
inc
and
lcall
xor
call
mov
dec
scas
pusha
inc
lahf
xchg
iret
inc
addb
add
add
shlb
aaa
dec
push
and
aam
loopne
mov
outsb
or
xor
mov
icebp
or
inc
inc
pusha
hlt
bound
test
rorb
and
and
sbb
xchg
ret
inc
push
repz
mov
pop
fildl
nop
jp
shrl
or
repz
pusha
mov
fisubrs
and
mov
pop
rolb
pusha
and
shll
lcall
and
fmulp
pusha
push
adc
adc
push
inc
add
aaa
mov
push
mov
push
addb
mov
pop
fsubs
cltd
jne
sbb
outsb
push
lock
inc
lea
push
cmp
sar
jl
fidivrl
push
mov
mov
shlb
jle
mov
loopne
movsl
xchg
test
cmpsl
and
cmp
test
mov
int
and
mov
and
mov
clc
and
sbb
push
andb
mov
push
pusha
pusha
sahf
sbb
mov
nop
mov
in
stc
sbb
mov
pop
scas
mov
jge
mov
pusha
add
shlb
scas
nop
out
add
shlb
in
lds
mov
clc
add
loopne
mov
sahf
or
mov
pop
mov
clc
movsl
mov
inc
fcom
lcall
fcoms
mov
mov
pop
fcoms
inc
popf
scas
jo
sti
or
jmp
mov
push
sahf
add
mov
push
in
lret
arpl
mov
mov
aad
xchg
add
ja
jne
sbb
or
clc
mov
mov
stos
loopne
jecxz
aad
dec
mov
xchg
movsb
and
mov
shrb
pusha
inc
adc
nop
test
pop
xchg
and
add
out
loop
mov
push
mov
inc
add
sbb
lds
popa
iret
mov
out
pop
xchg
loop
ret
pop
mov
mov
stos
dec
test
xlat
sbb
add
int
mov
add
sahf
mov
cmp
mov
add
add
ficompl
add
pusha
push
in
add
sbb
lea
loopne
mov
sbb
and
ljmp
ret
movsw
cltd
fistpl
daa
inc
mov
lods
and
push
pop
std
sti
outsl
push
push
sbb
shrb
and
imul
cld
mov
movsb
pusha
mov
and
pop
xlat
je
pusha
dec
ret
mov
xor
push
mov
inc
mov
xchg
loopne
lods
mov
rolb
xor
fiadds
test
inc
jmp
adc
fldl
add
rcr
jne
rorl
pusha
and
test
sahf
pushf
imul
outsb
xlat
cmp
inc
inc
shl
ja
jne
lds
inc
stc
add
lds
inc
inc
mov
mov
or
imul
pusha
lret
pop
imul
addb
stos
pusha
mov
cmp
sub
js
iret
and
inc
frstor
and
inc
cmpl
xchg
cs
mov
das
push
orl
jne
popf
adc
add
nop
je
mov
shll
loopne
inc
es
pusha
call
xor
xchg
test
and
cmpl
inc
call
jne
sbb
jmp
in
fsubl
pop
aam
dec
aam
inc
add
loopne
aas
out
loope
push
cli
aam
scas
aam
inc
rcrb
sbb
pop
cltd
xchg
inc
jo
xor
adcl
jp
pop
jns
pop
in
xchg
lds
lahf
stos
add
mov
pusha
mov
cmp
adc
jb
push
cli
xor
lea
ds
jnp
inc
add
mov
dec
push
xchg
dec
xlat
push
jl
mov
xor
or
rolb
shl
cld
in
sbb
push
mov
in
add
sbb
adc
push
pusha
mov
pop
dec
sbbl
or
add
fwait
aam
repnz
inc
pusha
jnp
test
loopne
sub
jb
mov
pop
cmp
add
rolb
addb
add
jmp
shlb
aad
loopne
adc
ret
pop
push
fldl
mov
lods
loopne
inc
shlb
mov
adc
ljmp
in
shlb
pusha
subb
cli
xor
add
inc
and
std
icebp
enter
pusha
xorl
or
ret
adc
and
int
mov
das
fbld
ja
push
in
xchg
mov
pop
pop
kortestb
pop
ja
jae
addb
test
jle
popa
xchg
imul
xchg
lds
add
xchg
xlat
js
inc
jp
inc
int
pop
shrl
stos
inc
das
push
mov
lcall
inc
xchg
repnz
push
dec
popa
push
rcll
xchg
aas
adc
fdiv
aas
xchg
imul
add
mov
inc
xor
xchg
jmp
jl
adc
add
mov
xchg
and
mov
fs
loopne
addb
mov
xor
outsl
push
mov
rcll
and
rclb
fcmovnb
jge
sbb
loopne
add
aam
cmpsl
sub
mov
xchg
dec
and
pusha
adc
ret
out
dec
xchg
xchg
cmova
add
in
rcrl
push
lds
ss
stos
inc
loopne
and
add
aaa
xlat
sub
and
and
xchg
push
cmp
fists
add
shrl
sub
outsb
aas
orl
repz
mov
inc
mov
inc
rclb
mov
imul
mov
xchg
xor
andl
call
movb
push
and
mov
mov
icebp
push
scas
inc
loopne
adc
and
fisubl
mov
adc
jmp
test
rorb
aam
fsub
shr
jo
xlat
insl
rcrb
loopne
xor
or
pop
mov
inc
sub
mov
rolb
sbb
mov
mov
adc
lahf
ds
int
pushf
push
adc
mov
leave
sahf
push
sbb
loopne
cltd
xchg
fadd
mov
and
out
mov
sti
adc
rol
outsb
outsb
cltd
cmp
rol
mov
inc
mov
add
fs
xor
loopne
pop
mov
and
dec
pop
repnz
movsl
sub
mov
inc
and
xchg
xchg
lds
rcrl
add
sub
loopne
enter
lret
std
repnz
adc
in
cmpsb
and
imul
loop
int
jmp
add
mov
pop
call
xchg
and
bound
sbb
lea
add
add
jl
xchg
pop
push
inc
mov
or
loopne
mov
enter
decb
cmp
lods
add
jecxz
push
leave
xchg
fstpl
mov
orl
sub
je
mov
cmp
push
pop
clc
jno
or
pusha
stos
inc
mov
clc
dec
dec
lret
xchg
pop
movsl
add
dec
daa
shll
add
jo
sub
jg
xchg
mov
push
inc
adc
add
add
xor
aas
cli
sbb
dec
test
pusha
adc
add
sbb
shl
mov
ja
mov
daa
mov
mov
je
add
jns
pusha
addb
mov
imul
inc
mov
add
shlb
add
inc
adc
dec
and
xor
jl
in
hlt
cs
imul
and
rclb
lret
mov
mov
dec
lcall
lds
loopne
sbb
shr
ljmp
jp
and
adc
lcall
dec
lods
pusha
loopne
test
lea
and
cltd
pop
add
pusha
sub
mov
add
jb
sbb
pop
push
cmp
and
mov
ret
jl
dec
mov
pushf
mov
andb
shlb
hlt
mov
gs
xchg
andb
mov
or
mov
add
xor
icebp
lret
push
and
mov
add
cmpb
mulb
add
bnd
in
xor
or
orb
imul
and
add
jle
jnp
dec
bound
adc
dec
mov
std
mov
das
cld
mov
shlb
shlb
repnz
shrl
xchg
faddl
sarb
mov
cmpsb
and
sub
andb
repz
push
jl
mov
add
out
fwait
outsb
dec
shl
xchg
jp
stos
gs
push
je
aad
jge
outsb
test
dec
popf
jmp
xlat
lods
inc
mov
and
in
repnz
add
in
push
lret
push
mov
xchg
lods
andb
jne
mov
xchg
in
icebp
popa
sbb
mov
mov
pop
adc
clc
cs
adcb
addb
add
jb
push
pushf
xchg
cld
mov
add
daa
push
inc
mov
jg
in
add
mov
push
pop
ja
mov
pusha
loope
jbe
fwait
push
jnp
jo
pop
call
and
mov
xchg
shlb
push
lret
add
fadd
inc
pop
mov
daa
imul
rolb
jle
mov
sub
mov
push
jnp
pop
sub
jecxz
test
sahf
add
fsubs
pop
cmp
in
inc
cwtl
pop
add
mov
lea
lret
cmpsl
ss
inc
imul
fadds
push
fildll
mov
cltd
lahf
jmp
mov
add
rcrl
in
ja
cmp
es
and
push
scas
and
cmpsb
pusha
pusha
addr16
mov
shlb
push
insl
ficompl
xlat
or
mov
or
inc
sti
insb
aas
int
decl
add
out
imul
fistpl
repz
fistps
mov
loopne
std
mov
mov
mov
and
cmp
mov
add
pop
loop
pusha
mov
and
jp
fistps
or
shlb
mov
mov
cmpsl
ljmp
aas
int
sbb
pusha
rcr
xor
into
das
pop
repz
aam
mov
addb
fbstp
loopne
aam
mov
inc
mov
addb
mov
xchg
dec
nop
lahf
adc
aam
push
lret
into
daa
push
andb
pop
sub
inc
mov
repz
adc
mov
cmpb
mov
jno
sub
mov
insb
lods
cmpsl
jge
loopne
cli
je
lock
mov
ret
and
mov
inc
xchg
and
into
cmpsl
sti
dec
inc
sub
add
out
pushf
mov
loope
push
add
push
divl
inc
inc
cwtl
sbb
outsl
arpl
subl
inc
pop
inc
mov
and
mov
fidivl
and
mov
mov
inc
rcrl
mov
inc
jecxz
push
ja
sbb
jl
add
xor
inc
inc
mov
pusha
and
fnsave
decb
and
add
lret
shlb
test
shlb
cli
loope
jmp
icebp
adc
mov
jae
fwait
xor
subl
inc
hlt
jle
cmp
aaa
mov
inc
xor
sbb
je
out
addr16
push
insb
out
inc
loopne
sahf
call
and
push
mov
add
les
lds
dec
add
insb
push
adc
and
lods
lcall
bnd
jmp
nop
add
arpl
insl
pop
push
push
daa
and
ljmp
sub
mov
mov
push
jb
push
cltd
xor
xor
xchg
cs
push
mov
xchg
fsubl
pusha
pusha
lods
movsl
mov
insb
add
mov
addb
mov
andb
add
rolb
mov
test
add
cmp
pop
jg
iret
out
in
and
xchg
cmp
pop
test
mov
lret
xchg
addb
push
movsl
mov
loopne
stos
dec
sbb
das
scas
loopne
mov
dec
inc
add
out
cmp
pop
inc
jo
add
jb
xor
mov
jge
lahf
lret
xchg
pusha
pop
outsl
pushf
push
repnz
mov
loopne
and
addb
and
cmc
std
nop
ret
mov
cmc
cmc
pop
test
pusha
add
push
adc
insb
aad
pushf
xchg
mov
stos
enter
loopne
ljmp
dec
adc
or
pop
and
jp
cwtl
stos
rol
addb
jo
pushl
rolb
out
push
mov
addb
scas
aad
inc
maxps
pop
xchg
dec
and
mov
pusha
sarb
xchg
lods
outsl
aas
mov
mov
dec
aaa
or
testb
dec
movnti
in
lret
addb
dec
inc
push
or
adc
or
inc
sbb
mov
mov
sub
loopne
cmp
and
movsl
je
dec
xchg
push
imul
and
xor
xlat
jns
add
nop
loop
xchg
cmpsl
es
push
stos
push
movsl
add
mov
loop
jl
imul
sub
and
dec
xor
mov
mov
addb
fcoms
sti
inc
icebp
leave
push
dec
outsb
in
push
mov
pop
lods
inc
add
mov
xchg
mull
rolb
in
mov
inc
orb
inc
and
mov
and
inc
test
add
add
cmp
daa
mov
push
mov
andps
pushf
loopne
bound
jno
iret
rcl
mov
aam
cmp
shlb
in
xor
cmp
es
and
shlb
lods
inc
loopne
xchg
cmpsb
and
pop
cmpsb
add
sub
loop
andb
xchg
daa
add
adc
inc
loop
jno
mov
fsub
cld
mov
loopne
loopne
cld
lahf
icebp
push
out
aas
dec
mov
sbb
mov
loope
sahf
jno
ss
testl
pushl
notb
in
push
lods
and
mov
mov
cmpsl
xor
arpl
mov
mov
aas
clc
scas
pop
dec
popa
shrb
inc
xlat
inc
cmp
and
xchg
push
jle
std
xor
push
pop
jg
outsl
arpl
pop
movsb
inc
and
je
mov
and
fiadds
inc
pusha
pop
push
cmc
lahf
repz
dec
jge
dec
andb
mov
scas
rcr
cmc
dec
stos
loopne
mov
cmp
in
stos
mov
jno
mov
xorb
sbb
mov
repnz
add
fwait
pusha
aad
imulb
push
pusha
loopne
stos
add
popl
call
push
pop
mov
pop
push
add
add
cmp
sahf
cmp
aam
insb
movsl
sbb
in
ljmp
sub
sbbb
cltd
sub
inc
jbe
mov
cmp
sub
mov
pop
lahf
test
mov
add
pop
andb
sub
pusha
xor
dec
dec
add
add
lock
adc
lods
rol
xchg
pop
mov
mov
mov
xor
adc
inc
mov
fsubrs
inc
pusha
outsl
popf
sbb
cmp
dec
jns
fwait
inc
outsb
pop
sub
scas
and
out
push
xchg
add
and
shrb
xlat
push
dec
fisubs
decl
loopne
dec
xchg
cli
pop
insl
gs
pop
push
xchg
shrl
mov
loopne
cs
inc
cs
loopne
xor
add
mov
shlb
pusha
add
sbb
shlb
stos
push
dec
outsl
and
lcall
andb
or
rclb
dec
into
pop
sub
imul
dec
loop
xchg
pop
jno
stc
dec
orl
lret
xor
push
rclb
mov
ret
hlt
andb
test
add
sahf
add
call
adc
fucomp
jo
pusha
loopne
sub
add
sub
pop
add
scas
push
popa
stc
jbe
pop
shr
adc
inc
loopne
jl
lar
pusha
das
xor
or
loopne
ret
xchg
sbb
cmp
andb
push
ret
lock
add
cmp
pop
cwtl
int3
movsl
loope
fmull
adc
lea
cmp
cs
push
pusha
inc
ret
push
ret
outsb
push
lock
mov
scas
and
mov
xor
mov
mov
lds
cltd
ss
xor
xor
jp
dec
xor
mov
fnstcw
mov
or
and
add
mov
scas
out
sarl
mov
pusha
sub
inc
ficompl
mov
pusha
pusha
sbb
dec
push
loopne
insl
push
sbb
ret
imul
pusha
out
js
lahf
int3
loopne,pn
loope
inc
mov
mov
mov
aas
daa
jnp
dec
adc
dec
loope
and
add
jecxz
mov
cmp
test
loopne
pop
in
pop
fnstsw
cwtl
test
rclb
rorl
sbb
xchg
mov
and
ret
insb
mov
addb
fisttpl
stos
mov
add
mov
loopne
icebp
xlat
cmp
push
mov
inc
loopne
xchg
and
out
pusha
andb
and
stos
mov
pop
push
push
sub
inc
mov
xor
cmp
adc
and
leave
rcl
mov
loopne
pop
adc
sbb
sub
inc
xchg
cmp
mov
std
mov
cmp
movsl
pop
shlb
add
loopne
add
and
mov
cmpsl
jb
add
loopne
add
loopne
pusha
loopne
in
mov
cli
jns
and
jp
mov
cltd
lea
out
xchg
pop
or
orl
leave
jns
jb
sbb
insl
movsb
pusha
pusha
dec
popa
dec
repnz
cmp
and
in
dec
iret
test
xchg
cwtl
in
test
aas
pop
out
mov
push
mov
and
sub
inc
fcompl
or
mov
add
jne
std
pusha
pusha
or
or
dec
popf
lds
pusha
shl
pushl
shrb
or
cmp
pop
pop
and
add
push
add
outsl
mov
test
in
rcll
addb
dec
mov
xor
inc
mov
cmc
in
loopne
and
dec
sbb
add
decb
inc
push
inc
sub
lds
mov
sahf
sbb
mov
and
ror
repz
add
jecxz
sub
imul
jb
xlat
addr16
inc
ret
bt
xor
inc
sbb
or
sub
ss
push
xor
jbe
xchg
cmp
mov
jb
scas
xor
clc
rcll
stos
and
sbb
clc
es
push
fistl
mov
movsl
mov
test
lret
sub
mov
add
push
push
push
push
call
sub
add
imul
lea
and
test
je
mov
push
push
bnd
cmp
jne
mov
add
push
push
push
push
call
test
jne
jmp
lea
movl
push
push
push
push
call
cmp
lea
jne
movzbl
or
pop
mov
not
imul
and
jne
call
loop
mov
mov
stc
notrack
sbb
mov
add
add
mov
mov
mov
inc
or
lea
lea
add
lea
add
sub
jmp
push
mov
jmp
imul
rolb
push
aam
loopne
pop
lret
pop
adc
jecxz
push
jnp
mov
sub
push
in
push
and
pop
push
push
sbb
add
cld
mov
fisttpll
es
cwtl
pop
inc
mov
out
inc
mov
mov
rol
adc
pop
push
and
mov
mov
pop
fldenv
shrb
mov
rorb
cltd
icebp
jl
inc
jb
xchg
sbb
in
daa
andb
mov
mov
cmpsb
and
in
in
jb
jecxz
test
dec
adc
inc
inc
xor
int3
dec
addl
push
pop
pop
fmuls
mov
pop
add
rolb
xor
inc
inc
pop
push
sbb
jle
inc
push
aad
loopne
xchg
jae
cmp
dec
and
pusha
das
inc
pop
jmp
push
mov
shll
or
pusha
or
rolb
orb
xor
mov
cmpsl
cltd
cmpsl
sub
add
mov
rcr
inc
insl
inc
outsl
cmpsl
outsb
scas
and
cmpsl
or
mov
shlb
inc
mov
and
hlt
push
inc
sub
loopne
andb
mov
test
lea
lods
arpl
mov
dec
xor
and
cltd
jmp
sarb
pusha
add
loopne
rcr
inc
dec
leave
mov
add
lret
in
dec
mov
jmp
cmp
mov
jno
loopne
adc
cmpsl
xchg
mov
and
push
sti
test
inc
aas
out
daa
fcoml
sahf
push
negl
pop
stos
aaa
sar
dec
lret
mov
stos
jnp
push
and
fsts
rorb
test
and
mov
add
repz
xlat
mov
pop
je
mov
outsb
xor
lds
add
add
loopne
dec
push
lcall
mov
adc
mov
xchg
jno
mov
adc
adc
testl
pop
mov
push
mov
inc
inc
push
pushf
pop
sub
insb
jns
push
call
jp
push
add
inc
shrb
and
and
rclb
shrb
add
bound
loopne,pn
and
shr
sub
sbb
mov
sarb
loopne
sbb
or
pop
insl
aas
mov
andb
mov
mov
aas
test
shl
add
iret
iret
jae
add
addb
pusha
mov
pushf
inc
pop
js
push
or
pusha
stos
inc
inc
sbb
and
mov
xchg
mov
mov
mov
ret
fwait
into
sbb
lcall
mov
adc
or
push
xor
jae
pop
mov
mov
rcl
and
andb
jecxz
cmpsb
and
daa
aaa
push
inc
and
out
movsl
rep
or
push
ds
aam
mov
xor
subb
lods
loopne
pop
add
jmp
sub
jb
enter
stos
loopne
bound
mov
inc
sub
stos
add
insb
testl
rolb
mov
arpl
lock
mov
sbb
xchg
push
sbb
xchg
lods
cmp
cltd
pushf
icebp
and
in
inc
mov
fnstenv
sti
iret
xchg
jl
mov
rorb
xchg
dec
movsl
inc
test
pusha
push
push
jge
xchg
fldt
inc
pusha
into
aam
loopne
xor
push
adc
and
mov
call
aas
mov
mov
fldcw
addb
test
mov
add
clc
ds
sub
inc
dec
cltd
sahf
out
mov
pop
sub
rclb
imul
pusha
inc
xchg
mov
add
jmp
dec
loop
inc
or
pusha
xchg
adc
push
push
shll
shl
adc
pminub
lods
mov
roll
add
fstpl
and
loopne
sbb
inc
xor
xor
pop
jne
sbb
and
pusha
daa
dec
out
hlt
mov
jno
mov
and
pop
add
mov
add
mov
icebp
loopne
mov
scas
rolb
push
mov
inc
and
push
mov
pop
mov
loop
xor
add
jae,pt
inc
cmp
mov
icebp
mov
jns
scas
lret
pop
cmp
cmpsb
addb
shlb
mov
scas
loopne
and
pusha
movsl
insl
push
push
out
cld
stos
add
int3
sub
test
loopne
enter
shrb
sbb
cmp
cmp
add
mov
rcrb
jae
xor
cld
push
lods
add
cmc
pop
std
dec
test
inc
and
shl
js
andb
xor
loop
je
adc
or
inc
cmc
pop
add
pusha
imul
pusha
and
cmp
shl
shlb
vmload
mov
ja
sbb
pusha
pop
adc
nop
xor
imul
and
cmpsb
addb
cmpl
mov
add
xlat
js
js
lret
adc
push
or
stos
lds
or
shlb
loopne
mov
fisttps
movsb
loopne
cwtl
xor
dec
push
shlb
jne
or
mov
in
nop
icebp
out
stos
mov
inc
in
mov
aad
mov
dec
test
andb
cmp
gs
ret
and
lds
push
mov
and
pusha
add
out
fs
or
sbb
pop
sbb
popa
sub
test
andb
cmp
push
mov
cmpsb
addb
xchg
dec
loopne
pop
fldenv
pop
scas
addb
ret
push
iret
das
push
cwtl
sbb
pushl
lods
shlb
pop
xor
cmp
ljmp
out
es
test
add
out
loop
pusha
pop
xchg
sub
rolb
cmpsl
add
imul
mov
in
mov
fidivs
sub
add
jp
mov
sarl
out
hlt
sar
and
stos
loopne
int
dec
testb
pusha
lea
loopne
xorl
in
inc
mov
add
mov
pop
xchg
movsb
inc
adc
adc
aaa
insb
mov
mov
push
pop
pop
cwtl
adc
mov
xchg
int
sbb
fildll
inc
cmpb
xchg
lret
sbb
lahf
push
jecxz
data16
gs
xchg
add
and
fnstsw
cmpb
and
stos
loopne
sub
and
sub
or
dec
pop
xlat
mov
das
sub
out
arpl
dec
js
add
ret
push
push
mov
maxps
jle
xchg
adc
mov
out
imul
push
ss
jg
pop
loopne
and
add
dec
and
and
out
popf
add
mov
and
add
mov
add
and
pusha
xchg
and
out
pop
jecxz
jle
mov
adc
lds
loopne
rcrb
int3
jns
inc
sahf
xor
jp
jge
xor
je
divl
pusha
pinsrw
test
adc
icebp
shll
xor
xchg
aaa
sbb
fcompl
shlb
pop
add
dec
xchg
lock
cltd
mov
lea
add
jmp
repz
jbe
loopne
popa
sti
jb
jno
add
loopne
push
clc
gs
fwait
cmp
and
pop
or
andb
mov
bound
and
stos
addb
mov
inc
sbb
add
and
and
ljmp
scas
fmuls
ljmp
notl
push
andb
inc
movl
rorb
les
ret
push
pop
mov
add
adc
jmp
add
mov
fisubrs
and
push
movsl
ret
stos
add
inc
stc
pusha
ss
and
mov
and
inc
in
int3
cltd
pop
les
mov
sub
xchg
lret
aam
pop
cmc
pop
mov
inc
data16
nop
stos
jns
or
mov
and
mov
pusha
test
add
mov
rolb
push
pop
pop
fistl
jg
adcl
mov
and
sar
jb
insl
pop
cmp
out
insl
sub
add
mov
xchg
call
jnp
lock
std
sbb
rolb
mov
dec
arpl
jmp
out
mov
sar
bound
ljmp
das
nop
jns
add
push
xchg
or
or
sbb
push
push
or
add
je
imul
push
xchg
xlat
jb
adc
or
shlb
aam
jg
inc
pusha
dec
push
jp
mov
pusha
iret
pop
loope
pusha
mov
stos
inc
add
fs
imul
pop
das
and
or
rcl
lds
sbbb
cmp
inc
and
popa
dec
add
jns
andb
nop
jns
test
loopne
sbb
pop
fdivrs
nop
mov
loopne
add
loopne
rclb
mov
mov
into
jge
stos
jp
add
xchg
push
xor
cmp
mov
sbb
jmp
inc
orb
push
pop
sbb
mov
movsb
mov
cs
pusha
mov
loopne
xchg
hlt
sub
addb
loopne
out
pusha
add
pop
cltd
div
andl
xor
pusha
adc
lret
insl
movsl
and
and
jnp
ret
andb
notb
mov
popa
test
add
xchg
pop
jmp
aas
loope
push
lret
inc
and
in
jo
and
roll
sub
aaa
cmp
pushf
rclb
jmp
and
movsb
loopne
sub
pusha
cmp
rcrb
in
cli
dec
mov
in
addr16
inc
pusha
pusha
rorb
pop
repnz
call
enter
movsb
shl
pop
sti
add
test
rolb
lahf
fldenv
and
add
lock
push
xchg
ffree
or
add
pushf
sbb
not
and
loopne
add
sbb
punpckhbw
mov
call
xor
stc
das
mov
bound
and
mov
loopne
inc
push
std
mov
add
imul
and
es
cmp
arpl
nop
iret
xchg
pop
push
or
loope
add
dec
icebp
in
cmp
mov
repz
jle
inc
add
rorb
mov
loopne
sbb
hlt
sub
inc
mov
xlat
ret
mov
aaa
cmp
aaa
push
add
mul
mov
cmpsb
and
xchg
cwtl
mov
pop
ds
jns
push
negb
jne
mov
pop
push
rolb
pop
or
push
clc
imull
in
pop
sbbl
push
add
mov
in
addb
pop
aad
rclb
pop
mov
and
add
pop
outsl
aam
sbb
jno
les
pusha
add
add
xchg
inc
sub
filds
loopne
lock
mov
and
scas
inc
shrb
cmpb
mov
mov
sahf
jnp
inc
popa
xor
dec
lret
cmp
in
inc
cmp
ljmp
je
xchg
lcall
sub
popf
lods
mov
shll
fisubrs
jg
push
mov
fstpl
jbe
adc
outsb
cltd
pop
jns
sbb
in
mov
xor
xchg
fcompp
dec
leave
mov
inc
dec
or
add
dec
test
xlat
out
daa
cmp
scas
icebp
pop
jp
pop
into
jmp
mov
ja
movsb
mov
movsl
lret
mov
insl
lahf
push
lock
cmp
mov
loopne
dec
xor
repz
loop
leave
clc
stos
rolb
lahf
mov
dec
cli
das
je
mov
leave
adc
in
sub
add
loopne
xchg
popf
es
mov
aad
jb
lock
mov
sub
mov
jbe
mov
mov
jge
int3
lea
rcrl
sub
cmc
add
mov
jmp
lret
stc
les
dec
xchg
pop
adc
and
std
pop
sti
notl
cs
inc
mov
mov
addb
inc
icebp
sbb
cmpsl
xor
aas
sbb
leave
mov
inc
push
push
or
inc
ffree
lods
and
stos
pop
cmpsl
mov
fs
inc
mov
imul
mov
out
xor
add
or
sub
imul
jnp
rcll
andb
sub
pusha
pop
addb
cwtl
lods
nop
xor
mov
and
cmp
mov
shlb
push
jnp
add
or
mov
add
push
pop
leave
in
stc
ret
addr16
sub
add
inc
repnz
pop
sbb
lock
hlt
adc
rcr
shl
jp
mov
rolb
outsb
mov
and
xchg
rorl
xchg
jb
clc
inc
in
dec
adc
daa
xchg
cmp
das
sub
push
adc
out
jecxz
lahf
lcall
aas
push
inc
mov
xor
jecxz
lods
mov
fimull
stc
sbb
cmp
mov
or
mov
mov
out
pushf
inc
xor
sbb
xor
nop
and
add
mov
loopne
and
xor
and
dec
jecxz
pop
dec
sub
addb
test
lret
cmpb
ljmp
and
jbe
jne
stos
popa
shl
and
mov
int
lret
je
add
test
orb
mov
mov
sbb
lock
test
addb
push
mov
mov
jo
icebp
jo
cltd
int3
lock
push
xor
push
clc
repnz
nop
cld
jae
add
mov
popa
mov
clc
repnz
nop
cld
jae
lods
add
adc
add
mov
clc
repnz
nop
cld
jae
mov
or
fidivrs
repnz
nop
cld
jae
fcom
leave
add
and
push
mov
leave
nop
jmp
add
add
jne
xchg
xor
nop
push
mov
leave
nop
jmp
xchg
add
add
adc
repnz
nop
cld
jae
add
push
push
mov
xchg
ret
jne
push
lds
add
add
jno
inc
add
mov
sub
in
add
popl
xchg
ret
add
imul
add
mov
fwait
clc
repnz
nop
cld
jae
dec
mov
dec
lds
push
pop
out
rep
clc
repnz
nop
cld
jae
add
add
add
clc
repnz
nop
cld
jae
mov
xchg
xor
push
nop
push
mov
leave
nop
jmp
sub
xchg
add
cmp
mov
nop
nop
cld
jae
add
add
sub
sub
andb
mov
imul
cmp
ret
add
add
lods
mov
scas
mov
add
nop
nop
cld
jae
xchg
fwait
add
enter
movswl
clc
repnz
nop
cld
jae
int3
imul
xor
clc
repnz
nop
cld
jae
add
add
add
fstps
repnz
nop
cld
jae
imul
push
add
add
stos
add
add
repnz
nop
cld
jae
add
cmp
nop
nop
cld
jae
lods
xchg
mov
lods
add
nop
nop
cld
jae
add
push
add
xor
jne
clc
repnz
nop
cld
jae
add
adc
pop
clc
repnz
nop
cld
jae
lods
fcomps
add
lea
nop
push
mov
leave
nop
jmp
jns
add
pop
add
test
mov
clc
repnz
nop
cld
jae
jne
add
cmp
xor
mov
xchg
ret
push
add
add
lds
add
sub
mov
push
mov
leave
nop
jmp
imul
or
pop
mov
push
clc
repnz
nop
cld
jae
lahf
pop
pop
lcall
movb
mov
xchg
ret
cmp
mov
je
clc
repnz
nop
cld
jae
jns
or
push
add
sub
sbb
add
mov
xor
cmp
nop
jmp
fwait
jne
push
lret
je
nop
push
mov
leave
nop
jmp
add
in
mov
push
mov
xchg
ret
add
pop
cmp
movsb
push
ss
push
mov
clc
repnz
nop
cld
jae
xchg
stos
in
cmp
pop
push
mov
add
add
dec
and
notl
and
push
mov
xchg
ret
mov
add
ja
add
clc
repnz
nop
cld
jae
add
pop
in
call
push
mov
leave
nop
jmp
sbb
imul
nop
cld
jae
add
lahf
or
add
cmpsl
push
push
mov
xchg
ret
cmp
add
pusha
add
add
out
mov
push
mov
xchg
ret
push
add
jns
add
pusha
nop
push
mov
leave
nop
jmp
add
movsb
add
push
in
push
filds
pop
and
push
mov
leave
nop
jmp
add
lods
push
sub
lret
xor
jmp
jmp
mov
add
add
add
lds
mov
add
clc
repnz
nop
cld
jae
aaa
hlt
lods
and
adc
repnz
nop
cld
jae
add
add
clc
repnz
nop
cld
jae
xchg
add
jns
or
out
push
add
add
lahf
pusha
add
add
adc
add
xor
clc
repnz
nop
cld
jae
pop
add
test
pusha
push
repnz
nop
cld
jae
add
leave
add
add
sti
nop
push
mov
leave
nop
jmp
push
jne
add
int
pop
jae
repnz
nop
cld
jae
mov
jns
test
inc
in
jb
rolb
repnz
nop
cld
jae
add
mov
sbb
add
repnz
nop
cld
jae
imul
lea
nop
push
mov
leave
nop
jmp
jns
or
cmp
repnz
nop
cld
jae
leave
xchg
add
dec
mov
call
nop
jmp
add
lds
add
push
mov
xchg
ret
add
xchg
sub
add
mov
adc
mov
xchg
ret
add
add
add
clc
repnz
nop
cld
jae
int3
add
mov
push
mov
xchg
ret
add
push
add
xor
inc
cmp
dec
add
repnz
nop
cld
jae
add
imul
jns
fld1
push
mov
xchg
ret
mov
add
add
mov
push
mov
leave
nop
jmp
push
arpl
add
dec
loopne
or
mov
push
clc
repnz
nop
cld
jae
lods
add
fadds
arpl
nop
cld
jae
mov
add
xor
mov
clc
repnz
nop
cld
jae
sbb
add
add
push
and
repnz
nop
cld
jae
jns
add
add
dec
add
gs
add
dec
add
movsb
add
add
outsl
sub
clc
repnz
nop
cld
jae
sbb
push
mov
repnz
nop
cld
jae
add
pop
mov
push
mov
xchg
ret
mov
sub
cmp
push
mov
rclb
jmp
add
add
add
repnz
nop
cld
jae
jns
pop
imul
nop
cld
jae
mov
add
test
mov
mov
leave
nop
jmp
scas
cmp
aaa
add
add
mov
clc
repnz
nop
cld
jae
add
add
pop
or
mov
leave
nop
jmp
xor
add
add
add
repnz
nop
cld
jae
imul
xor
repnz
nop
cld
jae
or
add
add
add
dec
push
clc
repnz
nop
cld
jae
add
jns
xchg
and
nop
push
mov
leave
nop
jmp
lcall
mov
clc
repnz
nop
cld
jae
add
or
mov
clc
repnz
nop
cld
jae
lods
lcall
and
repnz
nop
cld
jae
mov
mov
repnz
nop
cld
jae
add
jne
mov
sbb
mov
leave
nop
jmp
mov
add
leave
add
fdivrs
nop
nop
cld
jae
aaa
jns
add
mov
inc
sub
sbb
add
movsb
add
ret
add
nop
push
mov
leave
nop
jmp
xchg
add
xchg
adc
fidivrs
mov
add
nop
jmp
hlt
mov
add
xchg
add
nop
push
mov
leave
nop
jmp
mov
add
ret
fadds
add
push
xchg
add
add
add
or
stos
mov
clc
repnz
nop
cld
jae
lods
push
jne
push
clc
repnz
nop
cld
jae
jns
adc
add
add
xor
push
mov
xchg
ret
add
lds
nop
push
mov
leave
nop
jmp
lods
add
push
sub
add
add
loopne
fisubrl
xor
clc
repnz
nop
cld
jae
add
cmp
mov
stos
clc
repnz
nop
cld
jae
push
add
sbb
add
popf
mov
clc
repnz
nop
cld
jae
add
sub
add
mov
xchg
ret
int3
add
pusha
add
adc
hlt
and
repnz
nop
cld
jae
dec
mov
adc
xor
pusha
dec
gs
add
clc
repnz
nop
cld
jae
add
push
incl
add
repnz
nop
cld
jae
push
imul
clc
stc
pusha
push
mov
xchg
ret
add
leave
add
add
push
ficoms
les
mov
xchg
ret
add
add
add
push
xor
mov
clc
repnz
nop
cld
jae
lds
push
mov
xchg
ret
mov
pusha
lods
dec
dec
add
sub
push
mov
xchg
ret
add
movsb
add
mov
xchg
nop
push
mov
leave
nop
jmp
add
sbb
add
dec
xchg
sbb
dec
clc
repnz
nop
cld
jae
pop
dec
add
add
or
fisubl
fists
nop
jmp
add
push
add
pop
and
pusha
and
xor
dec
cmp
push
mov
leave
nop
jmp
arpl
add
arpl
mov
leave
nop
jmp
imul
lods
cmp
dec
push
mov
xchg
ret
add
mov
mov
rcll
nop
cld
jae
movsb
add
aaa
add
add
out
dec
nop
push
mov
leave
nop
jmp
addb
add
cmp
sub
clc
repnz
nop
cld
jae
jns
add
add
repnz
nop
cld
jae
sbb
fwait
push
imul
and
add
repnz
nop
cld
jae
xor
stc
fld1
push
mov
xchg
ret
add
or
add
lds
shr
jmp
dec
or
fcomps
add
add
add
in
pop
int
cmp
nop
nop
cld
jae
add
lods
imul
and
repnz
nop
cld
jae
add
pop
dec
imul
or
mov
and
push
mov
mov
push
mov
xchg
ret
add
add
scas
mov
jp
add
pusha
add
add
add
add
xchg
inc
add
add
pop
in
add
or
repnz
nop
cld
jae
add
or
nop
cld
jae
add
add
jbe
clc
repnz
nop
cld
jae
add
dec
add
stos
push
mov
sti
add
add
nop
push
mov
leave
nop
jmp
dec
jns
ljmp
inc
add
sbb
add
cmpsl
sub
nop
push
mov
leave
nop
jmp
add
add
push
inc
pop
test
add
repnz
nop
cld
jae
leave
mov
sub
push
mov
xchg
ret
mov
mov
add
clc
repnz
nop
cld
jae
add
add
add
out
clc
repnz
nop
cld
jae
add
add
adc
add
push
mov
add
pop
ret
add
in
mov
nop
push
mov
leave
nop
jmp
add
add
mov
sahf
xor
repnz
nop
cld
jae
add
or
pusha
clc
repnz
nop
cld
jae
add
mov
lahf
add
jns
pusha
clc
repnz
nop
cld
jae
jne
push
add
mov
clc
repnz
nop
cld
jae
add
hlt
stos
fwait
add
xchg
push
mov
xchg
ret
add
xchg
or
push
push
mov
xchg
ret
lds
add
add
mov
add
clc
repnz
nop
cld
jae
add
lods
insl
add
clc
repnz
nop
cld
jae
lods
add
adc
insb
cmp
push
clc
repnz
nop
cld
jae
imul
add
add
scas
andb
push
mov
leave
nop
jmp
add
add
aaa
add
ret
sbb
cld
jae
imul
dec
cmp
repnz
nop
cld
jae
fwait
sbb
add
icebp
pop
add
clc
repnz
nop
cld
jae
xchg
add
pop
mov
nop
nop
cld
jae
adc
in
add
jno
add
and
pusha
jl
xlat
popa
push
mov
xchg
ret
add
hlt
xor
clc
repnz
nop
cld
jae
add
push
add
add
pop
push
mov
xchg
ret
scas
add
add
clc
repnz
nop
cld
jae
pop
add
mov
movl
nop
jmp
push
cmp
fwait
cmp
je
xchg
clc
repnz
nop
cld
jae
lahf
add
lods
add
dec
add
repnz
loopne
mov
push
mov
xchg
ret
or
push
add
add
adc
fistpl
clc
repnz
nop
cld
jae
mov
in
sub
clc
repnz
nop
cld
jae
add
add
sub
mov
inc
add
add
push
nop
push
mov
leave
nop
jmp
add
add
mov
clc
repnz
nop
cld
jae
lcall
mov
xchg
ret
push
sbb
lods
add
add
cmpsb
addb
clc
repnz
nop
cld
jae
movsb
mov
add
in
xchg
cld
jae
add
add
push
add
add
nop
cld
jae
sbb
scas
jno
scas
lods
leave
add
rcl
push
mov
xchg
ret
add
add
add
add
shl
clc
repnz
nop
cld
jae
add
add
dec
add
scas
rolb
jmp
addl
add
mov
nop
push
mov
leave
nop
jmp
jns
push
add
mov
push
mov
xchg
ret
add
add
add
clc
repnz
nop
cld
jae
add
mov
jns
filds
mov
leave
nop
jmp
lcall
push
clc
repnz
nop
cld
jae
dec
add
add
jle
add
nop
jmp
add
sbb
and
mov
clc
repnz
nop
cld
jae
push
fadds
dec
add
push
xchg
and
push
mov
xchg
ret
add
jnp
nop
cld
jae
push
sbb
push
add
addps
mov
cmp
ret
aaa
add
xchg
cmp
movsb
mov
dec
push
clc
repnz
nop
cld
jae
add
add
add
clc
repnz
nop
cld
jae
and
push
mov
xchg
ret
arpl
push
add
and
test
xchg
ret
push
sbb
in
add
dec
pop
clc
repnz
nop
cld
jae
add
arpl
mov
imul
jno
add
add
add
fwait
clc
repnz
nop
cld
jae
add
cmp
imul
sbb
nop
nop
cld
jae
add
add
add
es
jle
mov
clc
repnz
nop
cld
jae
dec
add
xor
mov
leave
nop
jmp
jns
jns
or
pusha
add
ss
jg
clc
repnz
nop
cld
jae
add
stos
add
loopne
mov
test
and
mov
leave
nop
jmp
xchg
add
enter
in
pop
clc
repnz
nop
cld
jae
add
mov
xchg
in
xchg
jmp
or
leave
lods
add
add
add
push
pop
add
clc
repnz
nop
cld
jae
jns
add
add
add
clc
repnz
nop
cld
jae
add
mov
repnz
nop
cld
jae
lcall
iret
push
clc
repnz
nop
cld
jae
add
add
lds
add
andb
xchg
inc
add
lds
add
xor
addb
call
clc
repnz
nop
cld
jae
add
fadds
sbb
clc
repnz
nop
cld
jae
add
sbb
push
mov
leave
nop
jmp
lds
add
add
lods
mov
mov
loopne
add
push
mov
xchg
ret
add
add
rep
push
mov
xchg
ret
add
add
repz
nop
push
mov
leave
nop
jmp
imul
xor
mov
xchg
ret
jne
imul
clc
repnz
nop
cld
jae
add
xchg
pushl
push
mov
xchg
ret
add
xchg
add
clc
repnz
nop
cld
jae
add
add
add
lds
nop
cld
jae
add
add
mov
and
adc
insb
adc
nop
push
mov
leave
nop
jmp
int3
add
add
push
or
repnz
nop
cld
jae
pusha
in
add
add
int3
mov
push
mov
leave
nop
jmp
add
sub
movsb
nop
push
mov
leave
nop
jmp
add
add
add
mov
xor
clc
repnz
nop
cld
jae
in
add
add
aas
shr
nop
push
mov
leave
nop
jmp
add
mov
mov
xchg
ret
add
add
enter
push
clc
repnz
nop
cld
jae
add
stos
add
mov
leave
nop
jmp
add
dec
add
and
jae
inc
add
scas
lods
add
or
in
mov
mov
sbb
add
repnz
nop
cld
jae
add
add
mov
test
push
mov
leave
nop
jmp
push
in
xor
mov
xchg
ret
xor
movsb
int3
add
arpl
clc
repnz
nop
cld
jae
add
push
in
mov
sbb
push
mov
xchg
ret
cmp
in
ljmp
leave
nop
jmp
jns
add
add
stos
xchg
push
mov
leave
nop
jmp
add
cmp
mov
add
add
nop
jmp
jns
dec
push
push
nop
nop
cld
jae
in
add
mov
or
and
push
clc
repnz
nop
cld
jae
add
inc
push
inc
add
clc
repnz
nop
cld
jae
add
push
lods
add
mov
loopne
xor
clc
repnz
nop
cld
jae
add
add
icebp
pop
clc
repnz
nop
cld
jae
sbb
lahf
add
cld
adc
pop
clc
repnz
nop
cld
jae
mov
add
cmp
pusha
jmp
nop
cld
jae
in
hlt
add
lcall
cmpsl
mov
popf
clc
repnz
nop
cld
jae
add
push
nop
push
mov
leave
nop
jmp
and
add
mov
clc
repnz
nop
cld
jae
add
cmpsl
movzwl
clc
repnz
nop
cld
jae
add
lods
pop
imul
nop
nop
cld
jae
push
add
mov
add
mov
clc
repnz
nop
cld
jae
add
push
fwait
dec
sarb
lea
clc
repnz
nop
cld
jae
imul
add
add
arpl
add
add
add
clc
repnz
nop
cld
jae
fmuls
sub
loopne
push
je
clc
repnz
nop
cld
jae
add
and
mov
repnz
nop
cld
jae
add
mov
push
mov
xchg
ret
add
or
stc
popa
nop
push
mov
leave
nop
jmp
mov
add
int3
jno
push
int3
js
mov
add
dec
pop
inc
je
clc
repnz
nop
cld
jae
xchg
add
nop
mov
mov
leave
nop
jmp
or
mov
mov
xchg
ret
or
push
add
push
nop
push
mov
leave
nop
jmp
add
xchg
or
mov
nop
push
mov
leave
nop
jmp
pop
fwait
push
add
jns
mov
clc
repnz
nop
cld
jae
add
sub
repnz
nop
cld
jae
mov
imul
sub
push
mov
xchg
ret
add
leave
mov
xlat
add
clc
repnz
nop
cld
jae
lcall
cmpsb
add
lock
xorb
cld
jae
jne
add
add
add
scas
cmpl
nop
push
mov
leave
nop
jmp
mov
add
repnz
nop
cld
jae
add
aaa
add
out
mov
clc
repnz
nop
cld
jae
push
add
mov
push
xchg
add
fsubs
add
loopne
aad
call
cld
jae
fmul
jne
fwait
jns
cltd
stos
push
mov
xchg
ret
imul
lcall
orl
in
leave
nop
jmp
pop
pusha
dec
scas
push
add
mov
add
clc
repnz
nop
cld
jae
xchg
and
add
call
nop
jmp
mov
pop
push
mov
xchg
ret
add
add
add
dec
imul
push
mov
leave
nop
jmp
xchg
add
add
ljmp
inc
add
add
push
add
nop
jmp
clc
repnz
nop
cld
jae
add
or
fucomi
js
add
xor
adc
imul
mov
movzwl
clc
repnz
nop
cld
jae
xchg
add
add
jne
clc
repnz
nop
cld
jae
add
jmp
dec
xchg
xchg
ret
arpl
add
add
sbb
fistpl
clc
repnz
nop
cld
jae
add
add
clc
repnz
nop
cld
jae
lahf
scas
mov
sub
and
push
clc
repnz
nop
cld
jae
xchg
add
lods
mov
and
adcb
insl
call
clc
repnz
nop
cld
jae
fwait
lods
push
add
add
add
add
repnz
nop
cld
jae
sub
and
andb
or
das
shr
clc
repnz
nop
cld
jae
hlt
sbb
add
or
lods
inc
and
add
repnz
nop
cld
jae
push
xor
adc
push
clc
repnz
nop
cld
jae
add
or
fwait
push
mov
xchg
ret
add
add
mov
and
add
nop
push
mov
leave
nop
jmp
xchg
add
lods
lods
rorb
pop
add
clc
repnz
nop
cld
jae
add
dec
add
subb
add
clc
repnz
nop
cld
jae
add
add
push
mov
xchg
ret
mov
add
call
clc
repnz
nop
cld
jae
arpl
add
int
jne
clc
repnz
nop
cld
jae
add
add
add
mov
nop
push
mov
leave
nop
jmp
dec
add
pop
add
add
mov
clc
repnz
nop
cld
jae
add
mov
xchg
pushl
clc
repnz
nop
cld
jae
mov
arpl
xchg
sbb
add
repnz
nop
cld
jae
mov
push
push
mov
xchg
ret
add
add
lods
or
or
add
nop
push
mov
leave
nop
jmp
mov
and
clc
repnz
nop
cld
jae
add
push
dec
not
clc
repnz
nop
cld
jae
dec
add
pop
xor
out
es
nop
push
mov
leave
nop
jmp
pop
xchg
add
add
and
inc
nop
push
mov
leave
nop
jmp
sub
pusha
adc
rol
push
mov
xchg
ret
add
add
cmp
in
leave
nop
jmp
sbb
movsb
lahf
xchg
add
test
clc
repnz
nop
cld
jae
adc
add
xor
test
clc
repnz
nop
cld
jae
add
add
mov
xchg
ret
int3
mov
in
push
std
mov
clc
repnz
nop
cld
jae
scas
add
fld1
push
mov
xchg
ret
mov
add
mov
xchg
ret
jns
add
add
fsubs
push
clc
repnz
nop
cld
jae
jns
add
mov
pop
imulb
inc
adc
repnz
nop
cld
jae
lahf
add
xchg
jno
mov
mov
xchg
ret
imul
and
repnz
nop
cld
jae
mov
push
add
mov
jmp
call
nop
jmp
push
adc
fdivrp
mov
ret
clc
repnz
nop
cld
jae
dec
mov
add
int
test
or
add
nop
jmp
add
cmp
mov
add
add
add
aaa
push
add
pop
add
and
pusha
loope
inc
adc
add
repnz
nop
cld
jae
lahf
and
pop
test
push
mov
xchg
ret
mov
imul
add
cmp
add
nop
push
mov
leave
nop
jmp
in
push
and
pusha
rorl
add
repnz
nop
cld
jae
add
nop
push
mov
leave
nop
jmp
mov
jne
inc
je
stos
nop
push
mov
leave
nop
jmp
add
leave
add
push
inc
and
and
mov
pusha
dec
pop
nop
push
mov
leave
nop
jmp
add
add
add
dec
pusha
sub
mov
leave
nop
jmp
add
and
or
insl
add
clc
repnz
nop
cld
jae
adc
add
push
mov
leave
nop
jmp
pusha
sbb
addb
cmp
addb
addb
push
inc
clc
repnz
nop
cld
jae
add
add
inc
rclb
sub
mov
xchg
ret
add
in
add
lcall
push
clc
repnz
nop
cld
jae
add
xchg
push
push
mov
xchg
ret
sbb
sbb
mov
lea
nop
push
mov
leave
nop
jmp
cmp
add
orb
mov
xchg
ret
lods
add
sub
mov
clc
repnz
nop
cld
jae
add
add
leave
xchg
add
mov
in
leave
nop
jmp
mov
add
add
push
mov
xchg
ret
add
xchg
push
clc
repnz
nop
cld
jae
fadds
add
add
jne
popa
je
clc
repnz
nop
cld
jae
add
mul
popl
clc
repnz
nop
cld
jae
add
imul
movsb
clc
repnz
nop
cld
jae
mov
mov
sar
clc
repnz
nop
cld
jae
movsb
jns
fwait
add
add
xor
mov
xchg
ret
push
hlt
arpl
lods
add
add
mov
jns
mov
add
sub
leave
pushf
xchg
ret
clc
repnz
nop
cld
jae
add
lahf
pusha
xor
add
popa
lods
push
mov
xchg
ret
mov
imul
das
jne
clc
repnz
nop
cld
jae
dec
lods
lds
and
mov
nop
push
mov
leave
nop
jmp
add
add
jns
clc
repnz
nop
cld
jae
add
add
add
jmp
add
add
clc
repnz
nop
cld
jae
mov
fistpl
clc
repnz
nop
cld
jae
add
add
add
add
clc
repnz
nop
cld
jae
fwait
in
add
nop
push
mov
leave
nop
jmp
add
leave
push
sbb
or
nop
push
mov
leave
nop
jmp
in
or
leave
add
jns
dec
cmp
push
mov
leave
nop
jmp
add
jns
mov
adc
sbb
clc
repnz
nop
cld
jae
add
pusha
add
dec
dec
pop
clc
repnz
nop
cld
jae
add
pop
and
add
idivb
mov
nop
push
mov
leave
nop
jmp
pop
mov
sub
dec
in
xor
nop
nop
cld
jae
add
add
add
add
sbb
push
mov
xchg
ret
add
push
int3
add
push
pusha
and
fistl
mov
cmp
ret
mov
imul
inc
inc
clc
repnz
nop
cld
jae
push
lods
add
jns
xchg
fildl
inc
ja
add
add
push
imul
push
push
mov
xchg
ret
add
add
in
push
add
push
flds
nop
cld
jae
add
dec
and
add
lahf
pop
nop
push
mov
leave
nop
jmp
mov
lods
fwait
lahf
add
cmp
nop
push
mov
leave
nop
jmp
jns
add
add
push
mov
xchg
ret
add
xor
pop
clc
repnz
nop
cld
jae
sbbb
add
xchg
add
jbe
add
add
add
repnz
nop
cld
jae
dec
mov
add
imul
in
leave
nop
jmp
mov
pop
or
add
addb
push
xlat
or
clc
repnz
nop
cld
jae
push
lods
dec
add
movsb
data16
call
repnz
nop
cld
jae
xchg
add
repnz
nop
cld
jae
add
add
mov
nop
push
mov
leave
nop
jmp
hlt
aaa
add
push
mov
xchg
ret
sbb
fwait
add
add
add
sub
nop
push
mov
leave
nop
jmp
lds
fld1
push
mov
xchg
ret
addb
pop
add
or
mov
repnz
nop
cld
jae
add
lods
add
mov
push
inc
add
push
mov
xchg
ret
add
jns
add
xor
repnz
nop
cld
jae
mov
mov
or
repnz
nop
cld
jae
pop
aaa
fwait
jns
stos
jbe
loopne
cmp
mov
orb
add
repnz
nop
cld
jae
movsb
add
mov
adc
add
add
add
add
add
xchg
mov
jne
nop
push
mov
leave
nop
jmp
add
aaa
ret
call
clc
repnz
nop
cld
jae
add
in
add
clc
repnz
nop
cld
jae
add
jns
add
and
mov
xchg
ret
xchg
and
push
jno
scas
mov
clc
repnz
nop
cld
jae
dec
push
add
push
mov
xchg
ret
add
add
xchg
leave
mov
lds
insb
addr16
add
sbb
add
push
add
mov
push
mov
xchg
ret
fwait
add
sbb
add
add
aas
mov
clc
repnz
nop
cld
jae
leave
add
add
int3
stos
lea
nop
push
mov
leave
nop
jmp
in
xchg
dec
add
lds
repnz
nop
cld
jae
in
add
add
add
aad
inc
push
mov
xchg
ret
jno
in
add
hlt
mov
add
nop
push
mov
leave
nop
jmp
add
mov
push
mov
xchg
ret
add
add
aaa
mov
clc
repnz
nop
cld
jae
adc
fsubrs
mov
add
clc
repnz
nop
cld
jae
mov
xchg
sbb
push
nop
push
mov
leave
nop
jmp
sub
sub
sbb
clc
repnz
nop
cld
jae
lahf
add
add
mov
clc
repnz
nop
cld
jae
imul
sar
repnz
nop
cld
jae
add
push
sub
add
je
clc
repnz
nop
cld
jae
xor
push
mov
nop
nop
cld
jae
add
add
jno
pop
mov
repnz
nop
cld
jae
imul
pfcmpge
nop
cld
jae
add
int3
add
xchg
sbb
nop
push
mov
leave
nop
jmp
pop
in
push
add
pop
mov
clc
repnz
nop
cld
jae
subb
add
jb
push
add
clc
repnz
nop
cld
jae
mov
push
add
in
mov
sub
push
mov
xchg
ret
and
add
or
call
jmp
hlt
add
add
add
add
cmp
pusha
inc
int
add
nop
jmp
fadds
aaa
arpl
mov
call
nop
push
mov
leave
nop
jmp
add
addb
out
lahf
add
clc
repnz
nop
cld
jae
hlt
imul
inc
rcrb
mov
in
leave
nop
jmp
add
xchg
dec
sbb
imul
push
mov
xchg
ret
add
jns
push
add
add
mov
push
mov
xchg
ret
add
movsb
add
lds
sub
mov
xchg
ret
add
int3
add
cmp
and
ss
nop
push
mov
leave
nop
jmp
add
push
pusha
pusha
test
nop
nop
cld
jae
add
and
push
add
inc
adc
repnz
nop
cld
jae
and
add
jne
clc
repnz
nop
cld
jae
jno
add
dec
push
in
nop
inc
add
add
sub
add
lods
push
push
mov
xchg
ret
hlt
add
dec
sbb
and
popa
nop
push
mov
leave
nop
jmp
int3
add
lods
add
jns
mov
fdivr
repnz
nop
cld
jae
push
add
dec
lcall
and
in
insb
inc
jb
clc
repnz
nop
cld
jae
add
jb
push
mov
xchg
ret
sbb
add
cmc
clc
nop
push
mov
leave
nop
jmp
add
push
hlt
lods
add
iret
pushl
nop
push
mov
leave
nop
jmp
dec
adc
pop
add
clc
repnz
nop
cld
jae
xchg
adc
and
in
add
add
inc
js
add
in
xchg
add
add
and
repnz
nop
cld
jae
add
add
and
mov
nop
nop
cld
jae
aaa
pop
add
dec
nop
push
mov
leave
nop
jmp
add
mov
dec
pop
add
mov
mov
leave
nop
jmp
adc
push
add
clc
repnz
nop
cld
jae
mov
add
lea
clc
repnz
nop
cld
jae
scas
add
int3
add
jne
clc
repnz
nop
cld
jae
add
mov
and
push
fs
repnz
nop
cld
jae
jno
mov
mov
xchg
ret
add
arpl
add
push
mov
pop
clc
repnz
nop
cld
jae
lds
jns
add
clc
repnz
nop
cld
jae
add
add
add
movsl
clc
repnz
nop
cld
jae
add
xchg
or
mov
mov
popa
push
mov
xchg
ret
lods
add
jno
add
push
mov
xchg
ret
mov
movsb
push
nop
nop
cld
jae
add
sbb
jge
clc
repnz
nop
cld
jae
and
push
mov
add
mov
leave
nop
jmp
lods
add
add
shrl
xchg
ret
addb
lods
lods
mov
and
add
andb
push
add
nop
nop
cld
jae
mov
ficoml
test
nop
push
mov
leave
nop
jmp
dec
pop
lds
lods
loopne
ret
add
clc
repnz
nop
cld
jae
add
add
push
mov
xor
clc
repnz
nop
cld
jae
pop
add
lods
add
sbb
icebp
div
nop
push
mov
leave
nop
jmp
mov
add
and
and
nop
nop
cld
jae
add
sub
mov
clc
repnz
nop
cld
jae
sub
add
mov
nop
cld
jae
mov
add
fistpl
repnz
nop
cld
jae
mov
add
add
jle
nop
push
mov
leave
nop
jmp
add
insl
mov
clc
repnz
nop
cld
jae
add
lahf
add
rclb
jmp
mov
scas
ja
sar
nop
nop
cld
jae
xor
or
movsb
add
add
nop
jmp
pop
add
mov
jb
fwait
push
mov
xchg
ret
fdivrs
add
add
pop
fsubs
in
leave
nop
jmp
jns
cmp
hlt
dec
add
repnz
nop
cld
jae
add
add
push
push
stos
lods
jp
and
xor
imul
clc
repnz
nop
cld
jae
or
jno
add
cmp
in
leave
nop
jmp
add
movsb
jne
fadds
add
call
nop
jmp
sbb
in
jb
add
pop
mov
push
mov
xchg
ret
add
in
cltd
fistpl
push
mov
xchg
ret
add
dec
lds
cmp
and
cmpb
arpl
nop
push
mov
leave
nop
jmp
leave
add
add
xor
clc
repnz
nop
cld
jae
lds
sbb
add
aaa
cmp
nop
nop
cld
jae
add
add
push
mov
xchg
ret
pop
add
and
dec
add
mov
pop
add
clc
repnz
nop
cld
jae
movsb
add
add
sar
repnz
nop
cld
jae
add
add
add
pop
shlb
inc
and
repnz
nop
cld
jae
lods
add
lods
sbb
adc
repnz
nop
cld
jae
fsubs
cmpb
test
xchg
ret
xchg
add
leave
and
inc
loopne
push
clc
repnz
nop
cld
jae
add
add
push
mov
xchg
ret
mov
mov
movsb
addb
push
roll
nop
nop
cld
jae
mov
add
mov
clc
repnz
nop
cld
jae
lcall
and
jg
inc
add
add
adc
add
add
nop
cld
jae
add
imul
push
mov
leave
nop
jmp
stos
add
add
addb
jne
nop
push
mov
leave
nop
jmp
add
push
div
nop
push
mov
leave
nop
jmp
lahf
add
mov
lahf
stos
mov
loopne
mov
xchg
ret
lahf
xchg
lods
mov
push
stos
add
sub
repnz
nop
cld
jae
or
push
push
mov
xchg
ret
push
mov
push
arpl
repnz
nop
cld
jae
add
fwait
add
and
add
add
mov
add
add
add
repnz
nop
cld
jae
pop
add
add
add
adcl
repnz
nop
cld
jae
push
push
aas
fistpl
push
mov
xchg
ret
mov
aaa
jne
adc
das
add
clc
repnz
nop
cld
jae
and
jns
push
in
cmp
xor
clc
repnz
nop
cld
jae
imul
imul
seto
in
leave
nop
jmp
in
or
mov
movsl
add
clc
repnz
nop
cld
jae
add
add
mov
repnz
nop
cld
jae
imul
pusha
loopne
push
nop
push
mov
leave
nop
jmp
and
add
stos
add
mov
pusha
xor
adc
rolb
ret
jns
sbb
add
sbb
xchg
andnps
aaa
add
add
xor
add
add
fld1
push
mov
xchg
ret
sub
push
add
push
mov
clc
repnz
nop
cld
jae
add
xchg
push
jne
cli
push
push
clc
repnz
nop
cld
jae
add
add
jno
add
push
mov
xchg
ret
add
leave
xchg
repnz
nop
cld
jae
add
or
mov
clc
repnz
nop
cld
jae
add
mov
sbb
jmp
clc
repnz
nop
cld
jae
add
jp
mov
clc
repnz
nop
cld
jae
lods
dec
jns
mov
push
mov
xchg
ret
int3
sub
lods
add
add
mov
clc
repnz
nop
cld
jae
stos
add
dec
mov
lcall
repnz
nop
cld
jae
add
movsb
rolb
push
mov
xchg
ret
or
add
push
clc
repnz
nop
cld
jae
mov
add
lods
dec
add
into
leave
mov
clc
repnz
nop
cld
jae
or
add
mov
push
mov
xchg
ret
cmp
add
add
int3
xchg
dec
nop
push
mov
leave
nop
jmp
adc
fwait
push
add
loop
incl
push
dec
pop
scas
add
in
add
add
push
clc
repnz
nop
cld
jae
int3
dec
adc
lods
add
rcrl
nop
nop
cld
jae
add
lds
mov
add
inc
push
push
mov
xchg
ret
xchg
add
add
pop
jns
cld
push
mov
xchg
ret
int3
cmp
add
add
add
clc
repnz
nop
cld
jae
add
lods
fadds
loop
andb
nop
cld
jae
add
add
add
sub
shrb
nop
push
mov
leave
nop
jmp
pop
add
add
add
decb
pusha
add
mov
clc
repnz
nop
cld
jae
add
or
nop
push
mov
leave
nop
jmp
mov
dec
sub
mov
jb
and
xchg
push
push
mov
xchg
ret
add
dec
add
xchg
or
and
and
and
push
ja
add
clc
repnz
nop
cld
jae
add
add
stos
inc
pusha
rorb
push
mov
leave
nop
jmp
add
add
and
loopne
add
int3
sbb
jge
clc
repnz
nop
cld
jae
add
add
add
mov
nop
push
mov
leave
nop
jmp
lds
in
xchg
add
roll
clc
repnz
nop
cld
jae
arpl
add
rclb
nop
xchg
inc
add
add
dec
lods
add
mov
nop
push
mov
leave
nop
jmp
lods
lods
push
movsb
add
ds
push
mov
add
outsl
sub
mov
cmpsl
sub
add
jmp
nop
nop
cld
jae
or
add
jns
int3
rclb
mov
clc
repnz
nop
cld
jae
xchg
in
mov
repnz
nop
cld
jae
or
or
add
pusha
xchg
lea
jmp
lcall
imul
add
inc
sti
lss
clc
repnz
nop
cld
jae
lods
test
shrb
clc
repnz
nop
cld
jae
add
push
add
add
int3
sub
push
mov
leave
nop
jmp
add
dec
add
add
lds
mov
nop
push
mov
leave
nop
jmp
add
add
add
add
push
mov
xchg
ret
add
add
add
pop
push
mov
xchg
ret
add
mov
push
call
clc
repnz
nop
cld
jae
lcall
adc
push
mov
leave
nop
jmp
xchg
sub
add
rcrl
mov
xchg
ret
add
hlt
or
movsl
push
clc
repnz
nop
cld
jae
adc
scas
lods
dec
lahf
add
repnz
nop
cld
jae
add
mov
inc
jnp
and
dec
sbb
add
stos
mov
mov
rcl
push
push
mov
xchg
ret
add
add
in
add
jecxz
mov
adc
push
mov
leave
nop
jmp
sbb
add
fld1
push
mov
xchg
ret
mov
push
or
mov
rorl
enter
in
leave
nop
jmp
push
add
imul
jae
add
or
lods
add
mov
add
nop
push
mov
leave
nop
jmp
add
xchg
test
nop
push
mov
leave
nop
jmp
add
outsb
jo
jne
clc
repnz
nop
cld
jae
jno
dec
popa
push
clc
repnz
nop
cld
jae
add
add
add
and
imul
nop
nop
cld
jae
add
xchg
hlt
mov
dec
clc
repnz
nop
cld
jae
push
add
int3
jp
fld1
push
mov
xchg
ret
dec
add
lods
add
hlt
in
setnp
repnz
nop
cld
jae
add
jno
mov
lds
adc
cmp
ret
dec
imul
add
push
clc
repnz
nop
cld
jae
stos
lahf
add
add
add
inc
push
push
mov
xchg
ret
mov
cmp
add
je
mov
clc
repnz
nop
cld
jae
dec
mov
lds
mov
push
mov
xchg
ret
add
add
and
add
add
nop
push
mov
leave
nop
jmp
or
aaa
and
or
adc
repnz
nop
cld
jae
push
mov
or
push
or
repnz
nop
cld
jae
xchg
or
imul
and
lea
clc
repnz
nop
cld
jae
add
add
push
mov
xchg
ret
lods
sbb
mov
xchg
mov
ret
nop
push
mov
leave
nop
jmp
lods
add
pop
mov
popa
clc
repnz
nop
cld
jae
add
leave
add
lcall
clc
repnz
nop
cld
jae
arpl
add
out
in
jg
clc
repnz
nop
cld
jae
add
or
hlt
cmc
je
clc
repnz
nop
cld
jae
mov
add
clc
repnz
nop
cld
jae
in
add
add
jg
ss
repnz
nop
cld
jae
add
mov
pop
push
mov
xchg
ret
dec
add
add
add
in
jecxz
nop
push
mov
leave
nop
jmp
pop
or
add
add
add
mov
xchg
ret
sub
add
push
mov
leave
nop
jmp
add
add
sbb
and
add
push
shlb
mov
xchg
ret
add
leave
or
add
clc
repnz
nop
cld
jae
pop
adc
imul
pop
mov
nop
push
mov
leave
nop
jmp
add
rorl
mov
xchg
ret
add
add
add
pusha
mov
xchg
loopne
shl
nop
push
mov
leave
nop
jmp
or
add
mov
clc
repnz
nop
cld
jae
add
add
add
nop
cld
jae
mov
pop
imul
andb
xchg
cmpl
leave
nop
jmp
add
add
data16
or
pop
add
call
push
xchg
inc
add
lahf
mov
dec
in
jmp
clc
repnz
nop
cld
jae
push
fadd
jno
add
push
push
mov
xchg
ret
in
add
push
in
mov
addb
sub
nop
nop
cld
jae
jns
xchg
add
xchg
out
push
push
mov
xchg
ret
add
cmp
add
dec
add
or
inc
dec
icebp
mov
nop
push
mov
leave
nop
jmp
sub
shr
push
push
mov
xchg
ret
add
cmp
imul
pop
clc
repnz
nop
cld
jae
lods
stos
stos
add
lcall
mov
clc
repnz
nop
cld
jae
push
dec
pop
imul
jae
cmpl
jae
push
add
lods
sub
clc
repnz
nop
cld
jae
add
add
add
and
repnz
nop
cld
jae
add
aaa
add
movsb
inc
dec
ja
mov
add
jae
outsb
add
cmc
lcall
add
clc
repnz
nop
cld
jae
lods
jns
add
add
jg
test
repnz
clc
repnz
nop
cld
jae
add
mov
and
clc
repnz
nop
cld
jae
movsb
add
push
mov
xchg
ret
push
add
add
pusha
xchg
push
testl
aas
leave
incl
adc
or
add
inc
jp
pop
push
mov
xchg
ret
add
or
add
mov
nop
nop
cld
jae
add
lods
xor
repnz
nop
cld
jae
sbb
add
xor
nop
cld
jae
add
sbb
sbb
pushl
push
mov
xchg
ret
add
push
lods
add
and
subb
add
clc
repnz
nop
cld
jae
pop
pop
add
push
add
push
push
mov
xchg
ret
mov
pop
mov
push
add
add
add
cld
jae
add
sub
mov
xchg
ret
add
scas
mov
and
xchg
aad
shrb
repnz
nop
cld
jae
add
aad
roll
repnz
nop
cld
jae
add
rorl
push
push
clc
repnz
nop
cld
jae
mov
stos
and
imul
clc
repnz
nop
cld
jae
add
add
add
add
repnz
nop
cld
jae
add
lret
push
mov
loope
cld
loopne
mov
flds
jl
repz
fimull
mov
sub
enter
mov
sub
dec
mov
imul
sbb
popf
pushf
shrl
push
or
pop
pop
out
cmp
jle
mov
testl
inc
repz
loopne
shlb
mov
jle
add
and
in
sbb
mov
inc
cmc
cltd
add
fldenv
lcall
ret
ja
inc
xor
pusha
ror
cwtl
xchg
sub
mov
loopne
adc
mov
loopne
xlat
loopne,pn
pusha
mov
shll
andb
rolb
inc
pusha
int
out
idivb
push
fisubs
inc
dec
movsl
pcmpeqw
push
pop
scas
and
out
insb
mov
adc
lods
add
pop
add
stos
mov
stos
xor
xor
shlb
sbb
pusha
and
imul
mov
sbb
shll
stc
je
add
push
mov
lods
pusha
loopne
pop
xchg
iret
test
pusha
jbe
mov
cmp
jmp
inc
pop
addr16
pop
sahf
outsl
divl
jp
loopne
jg
add
in
sahf
fmull
and
and
mov
fistpl
jmp
outsb
inc
enter
and
xor
xor
add
add
and
pusha
subb
inc
scas
and
inc
stos
lret
dec
std
xor
pushl
addb
add
sbb
xor
shrb
add
jno
mov
out
out
add
mov
ret
dec
sub
pop
jbe
roll
push
scas
sub
loopne
call
and
cmp
shlb
repz
xorb
pusha
mov
mov
dec
shrl
clc
sarl
adc
lahf
xchg
test
loopne
push
ret
adc
xchg
or
cmpsl
inc
mov
imul
inc
out
jecxz
shl
neg
dec
daa
cs
ror
dec
popfw
inc
bound
sub
loopne
mov
fbstp
data16
aad
mov
inc
rclb
push
bound
jbe
jno
xchg
xchg
pop
outsb
filds
push
rorb
cld
leave
arpl
pop
lahf
mov
xchg
mov
scas
ret
sbb
imul
cwtl
push
inc
loopne
xchg
cltd
sbb
je
ljmp
inc
pusha
loope
and
inc
ljmp
test
mov
mov
pusha
rorb
push
pop
test
pusha
add
cltd
pop
mov
inc
std
addr16
add
sub
mov
or
and
sub
lahf
sub
mov
test
mov
add
add
or
jb
jae
dec
and
mov
jecxz
mov
dec
in
pop
sbb
mov
lret
add
push
lea
add
rolb
mov
inc
fnstsw
jp
cmc
cmpsl
xchg
rorb
inc
pop
sub
push
popf
jmp
fsubs
add
movsb
pusha
add
and
fcompl
out
dec
push
push
jge
pop
fdivrs
imul
cmp
mulb
add
cmpb
test
inc
lahf
mov
imul
popf
and
xor
lods
loope
addb
mov
add
mov
jle
pusha
and
mov
inc
icebp
fistpl
into
fnsave
sahf
add
xchg
or
out
add
in
std
in
das
push
adc
loopne
pusha
mov
push
in
and
inc
jno
and
addl
insb
sub
sarb
pop
cmp
into
popf
cmp
add
mov
and
addb
icebp
das
addl
sbb
sbb
add
pop
sti
add
pusha
mov
or
and
sti
hlt
mov
nop
jne
push
dec
fidivs
imul
shrb
mov
mov
push
push
and
pusha
sub
push
add
cmpsl
push
test
loopne
cmc
shll
cmp
mov
jne
sub
pusha
push
mov
inc
ffreep
lret
lret
inc
add
rol
and
test
cmp
mov
xor
mov
mov
mov
pusha
fldl2t
xchg
xorb
dec
xchg
jp
dec
push
adc
cmp
addr16
mov
inc
mov
mov
push
and
addb
rol
lock
inc
xchg
push
mov
xor
xlat
push
mov
imul
or
and
lret
cmp
mov
fcmovnbe
call
mov
mov
fisttpl
andb
and
and
in
push
dec
dec
xor
ja
add
insl
lahf
pop
add
and
mov
pop
aam
push
push
pop
popa
in
jns
jne
lret
mov
insb
push
iret
mov
fisubrl
pusha
decl
loope
rcll
jle
mov
xchg
aam
add
pusha
dec
adc
xor
js
andb
inc
and
fildl
jg
sbb
dec
cmp
ds
jg
or
scas
shlb
or
xchg
rolb
push
and
xchg
fimull
jne
push
popf
push
add
cwtl
mov
xor
lock
and
inc
mov
sar
test
addb
adc
stos
mov
mov
jbe
mov
pop
out
pop
shrb
lahf
jae
shl
dec
test
inc
inc
sbb
leave
cwtl
icebp
test
sbb
push
gs
dec
push
fmull
and
or
loopne
lods
jmp
movsb
pusha
ror
fs
loopne
jb
rol
xor
push
adc
loopne,pn
pushf
jmp
push
pusha
and
mov
in
and
jl
jae
add
jl
mov
shrl
xchg
test
loopne
int3
hlt
pop
jl
jo
in
in
cmp
push
and
add
push
sub
mov
mov
cltd
cmp
dec
dec
push
in
dec
mov
daa
stc
or
andb
stos
pusha
orb
stos
pushf
fstl
daa
mov
cmp
sarb
pop
or
int3
lahf
imulb
ja
test
fadds
jbe
push
popa
xor
loopne
push
stc
push
push
shlb
sbb
fs
and
cmc
jp
andb
cmpsb
and
add
sub
and
addb
out
cmpl
loopne
sub
mov
aaa
cmpsl
mov
add
out
jns
scas
and
shr
out
xchg
push
add
add
out
mov
aam
add
out
add
cmc
jg
xchg
push
pusha
lcall
dec
test
inc
add
rolb
rcrb
rolb
data16
lret
jge
loopne
imul
loopne
cmpsl
dec
imul
in
sub
cmpb
push
xor
sbb
or
pusha
iret
sub
mov
mov
ljmp
rcrb
xchg
cmp
bound
test
mov
mov
add
loopne
cmp
dec
test
sbbb
loopne
pusha
and
push
sub
cmpb
mov
shr
mov
aam
lea
pop
push
dec
dec
std
into
pop
sahf
mov
rolb
int
sbb
mov
cmpsl
stos
rolb
in
xor
xchg
jmp
xlat
jg
bndstx
or
mov
mov
test
loopne
pop
hlt
cmc
xchg
lods
loopne
mov
and
xchg
aas
and
add
pushl
icebp
outsb
ret
inc
mov
mov
outsl
sahf
out
cmp
xor
adc
int
and
repnz
sub
imul
cmp
cmc
inc
xchg
fimull
push
mov
andb
xor
inc
xchg
and
das
lret
scas
jbe
andb
sub
cmc
stc
and
stc
fldl
shlb
pop
je
inc
adcb
loope
loopne
movsl
xor
dec
call
pusha
xor
ja
pusha
sub
lds
addb
xor
and
add
and
cli
cmp
movq
pusha
pusha
rep
pusha
mov
push
shl
rorl
push
ja
add
jo
fcoms
pop
add
sbb
add
outsl
mov
cltd
dec
adc
pop
and
lea
mov
adc
outsb
je
xchg
sbb
and
rcrb
cmp
bound
sub
pop
cli
bound
lcall
rclb
lahf
addb
out
add
loop
loopne
mov
addb
pop
outsl
addb
add
lock
sbb
lret
pop
push
lds
push
scas
inc
and
dec
dec
insl
and
push
stos
mov
adc
add
pop
sbb
jbe
sti
xchg
pop
and
andb
lock
add
sbb
idivb
mov
lock
icebp
daa
shlb
addb
inc
nop
mov
aad
rol
scas
and
loopne
int
mov
ss
pusha
cmp
add
xchg
xlat
in
mov
jbe
sbb
or
sahf
jmp
push
aam
aas
push
mov
sub
insb
and
ror
pusha
mov
mov
add
rcr
shlb
scas
mov
test
mov
and
sbb
andb
mov
inc
jmp
fld
cld
iret
mov
in
and
inc
test
ret
dec
sbb
mov
loopne
inc
mov
xchg
mov
jbe
pushf
lock
cmc
mov
inc
aad
add
and
inc
mov
xchg
xchg
push
inc
cmp
adc
imul
mov
sbb
arpl
aaa
cmp
mov
imul
or
pusha
aam
divl
xchg
mov
and
imul
xlat
mov
rorb
icebp
inc
scas
mov
dec
aad
inc
sarb
aad
lahf
pop
jo
inc
sbb
lea
add
js
or
adc
adc
gs
mov
and
mov
loopne
les
loop
cmpsl
lret
cwtl
adc
sti
sbb
out
xchg
sbb
xchg
mov
adc
sti
pop
nop
and
pause
lret
mov
dec
test
jbe
push
rolb
fs
xchg
cs
loop
loopne
pop
andb
add
shrb
insl
mov
mov
mov
jp
add
inc
shlb
jnp
loopne
inc
push
and
and
psubq
jo
dec
pushf
push
cwtl
pop
int
fsubrp
xchg
xor
loopne
std
out
outsb
inc
js
and
xorl
mov
add
inc
filds
pusha
pusha
je
mov
popf
sub
xor
cmp
add
adc
dec
adc
push
add
je
int3
xlat
test
inc
xor
and
mov
sbb
scas
rolb
loopne
cmc
arpl
add
add
cltd
leave
xchg
sbb
jmp
insb
test
test
sub
loopne
cltd
adcl
test
lods
pop
push
mov
cmp
sub
gs
shlb
dec
sbb
inc
mov
fistl
outsl
cli
insb
jns
inc
ret
rorb
cld
mov
fdivs
jnp
pusha
pusha
dec
mov
cmp
scas
jne
or
adc
icebp
out
stc
sub
inc
mov
or
loopne
es
and
xchg
popf
push
xor
and
inc
scas
inc
loopne
push
dec
aad
xchg
outsb
jecxz
and
inc
loope
pusha
and
add
or
rcrb
push
aaa
fdivrs
mov
mov
cs
subl
sub
push
and
xor
inc
mov
cmp
loopne
pop
imul
andb
or
add
add
lret
pop
loopne
popa
test
add
test
mov
inc
mov
cmp
inc
sbb
jge
inc
and
xchg
mov
or
rcr
sbb
inc
add
mov
xor
aad
repnz
and
cmp
ljmp
loopne
xor
xor
into
scas
or
jno
or
mov
sar
mov
and
rclb
stc
roll
sbb
loopne
dec
push
std
fldenv
push
dec
push
imulb
jp
adc
ret
aad
pop
lods
pusha
pusha
aad
test
sbb
pop
xchg
jb
flds
fisttpll
mov
sbb
lahf
pushf
and
adcb
sub
xor
jnp
mov
fsubrs
loopne
cmp
mov
pop
mov
xor
xchg
es
xorb
dec
jnp
rolb
dec
lock
push
rolb
cli
out
ret
dec
jl
out
xchg
sub
js
pushf
out
mov
add
dec
clc
div
or
xor
addb
in
call
jge
sbb
and
imul
clc
mov
pop
insb
jo
insb
adc
xlat
subl
mov
stc
js
pusha
mov
xchg
and
inc
xor
or
xorb
and
lahf
mov
push
repz
pusha
mov
fisubrs
mov
inc
inc
xchg
adc
stc
push
stos
add
dec
sysret
sbb
or
mov
and
jne
push
std
push
mov
xor
pop
dec
into
cmp
mov
inc
les
push
dec
repz
mov
and
mov
or
sub
and
inc
push
andb
and
aad
and
loopne
andb
shlb
inc
or
add
push
and
jo
gs
mov
rorb
sarl
and
mov
and
mov
add
sub
nop
jne
lds
pusha
add
and
add
push
pusha
and
in
rol
loopne
lcall
outsb
mov
repz
xchg
jae
dec
in
loop
xchg
cmpsl
ja
dec
cwtl
cli
jbe
mov
mov
mov
lds
subb
mov
fs
test
inc
orl
sbb
icebp
pop
jno
mov
pop
dec
ja
es
leave
call
jecxz
add
adc
ds
cmp
push
daa
loopne,pn
push
int
and
jg
popf
xor
dec
ja
mov
xchg
repnz
loopne
push
pusha
mov
out
flds
pusha
add
push
cmp
sbb
jmp
cmp
sar
xor
aaa
enter
orb
add
pusha
mov
pusha
dec
jnp
mov
mov
out
fnstcw
push
out
aad
inc
jbe
lret
lret
cli
cmpsl
mov
push
sarb
mov
pusha
pusha
ljmp
imul
jbe
addb
scas
inc
push
cld
sbb
fs
andb
pop
sar
test
add
popf
mov
lds
add
aad
out
sbb
or
sbb
and
jbe
scas
loopne
or
inc
xchg
add
shlb
mov
das
out
es
mov
jo
popa
dec
in
sub
cmpb
push
fmull
mov
loop
lock
add
jno
mov
gs
es
ret
sbb
jg
test
inc
and
sbb
stc
fs
mov
pusha
fwait
sub
mov
shlb
dec
lcall
repnz
cwtl
enter
arpl
and
cmp
jb
addb
and
add
out
and
inc
out
mov
and
adc
push
mov
push
mov
jp
out
or
push
movsb
pusha
addb
lds
loop
hlt
pop
xchg
push
bound
iret
push
popf
fistpll
rolb
mov
das
inc
xchg
xchg
cs
pusha
lret
sbb
subb
pusha
dec
ja
leave
cmpsl
pop
outsl
add
add
mov
pusha
test
and
inc
jo
dec
or
add
outsb
pop
jne
jno
sbb
dec
inc
hlt
imul
aaa
mov
or
pusha
and
inc
arpl
rolb
inc
and
rolb
rolb
loop
andb
and
and
mov
scas
add
ret
mov
mov
cmp
hlt
adc
loopne
test
pusha
iret
test
add
addr16
call
and
fs
add
aam
lock
lret
and
andb
ds
loope
popf
cmp
mov
loopne
stos
add
addb
mov
and
testb
inc
call
inc
shl
mov
mov
mov
add
es
and
and
add
les
xchg
xchg
loopne
or
cmp
mov
int
js
sarb
push
loopne
scas
inc
pusha
mov
xor
mov
mov
jae
or
and
shl
fadds
hlt
jo
xchg
mov
add
loopne
pusha
loopne
dec
hlt
enter
sti
inc
popf
and
pusha
and
and
mov
push
aad
pusha
inc
lret
insl
movswl
add
mov
mov
mov
lret
xchg
lods
add
insl
cld
push
loope
xorl
pop
cmpsb
add
mov
adc
and
inc
call
and
pushf
inc
lock
arpl
mov
lods
mov
inc
pop
mov
loopne
jge
shlb
shlb
add
push
outsl
test
mov
in
cmpsb
and
pop
out
ss
adc
pusha
and
popf
in
cmp
inc
push
adc
mov
add
insb
ret
in
lcall
fimuls
xchg
jl
lds
or
popa
jns
xchg
xchg
loop
and
dec
dec
bswap
cltd
aas
out
mov
or
adc
jb
push
mov
or
loopne
test
pusha
pop
sub
rcrb
aad
mov
sahf
enter
mov
nop
cmp
add
fstpt
and
inc
shlb
or
pop
pop
out
push
jmp
jmp
mov
loopne
cmp
stc
xor
repnz
cmp
je
jle
cmpsl
call
and
scas
fcmovnu
test
fcomip
dec
aam
xchg
pop
inc
pop
push
and
loopne
push
pop
fmuls
pusha
addb
jl
mov
mov
aas
test
pop
shlb
shlb
xor
sbb
pop
mov
and
outsl
out
mov
and
loopne
pop
cld
nop
dec
mov
addb
outsl
sub
add
sub
add
idivb
add
mov
mov
adc
pusha
aas
les
mov
adc
int3
adc
mov
in
fidivrl
inc
fists
mov
fwait
hlt
xchg
push
cmp
enter
jmp
hlt
scas
rol
test
add
outsl
cmp
rcrl
adc
movsb
shlb
pop
mov
loopne,pn
loop
fcmovbe
mov
sbb
aad
xor
inc
sbb
cmp
hlt
fcoml
mov
xor
and
in
hlt
ds
fstpt
pusha
mov
mov
adcb
xchg
dec
loop
sbb
and
adc
int
orl
add
in
bnd
fisubrs
pushf
fisubl
dec
xchg
pop
imul
pop
adc
popf
shl
xor
xor
mov
mov
mov
jecxz
push
inc
nop
pop
push
pop
jne
outsl
out
mov
jmp
icebp
jg
dec
jbe
stos
and
pusha
loopne
add
and
lock
insb
cmp
fidivl
cpuid
inc
rorb
sbb
and
mov
jne
inc
addb
dec
push
jo
push
pop
and
loopne
sbb
xor
and
fwait
mov
iret
mov
inc
cwtl
mov
imul
loopne
cmp
push
inc
loopne
pusha
add
imul
scas
loopne
or
mov
xor
mov
xor
std
aad
mov
out
mov
add
test
inc
loopne
sahf
jbe
int
cld
and
loopne
fcompl
addr16
int
add
cmp
rorb
add
or
sti
shrb
xor
sbb
add
pusha
mov
loopne
sub
pop
push
imul
push
ja
and
cmp
add
imul
ss
movsl
out
cld
sbb
or
push
loope
mov
shlb
lock
loopne
push
test
sarb
fstl
xchg
fsts
sub
and
cmovbe
dec
sarb
scas
jo
jne
jbe
sbb
rolb
loopne
arpl
add
andb
fistl
inc
adc
xchg
lods
xor
lahf
imul
xchg
les
pop
jae
cmp
sub
or
fwait
leave
lock
lods
and
sbb
js
and
and
dec
outsb
scas
adc
pushf
aam
cmpl
lahf
daa
mov
push
jno
int3
stos
add
pop
add
mov
jo
jbe
arpl
or
aas
mov
cld
jl
fcomi
cwtl
add
jo
aam
and
mov
mov
scas
mov
add
mov
cmp
fsub
cwtl
insl
cmc
push
shll
mov
cmc
push
inc
loopne
shl
add
insb
rorb
cmp
jmp
adc
mov
adc
mov
jg
cltd
push
pop
mov
out
stos
and
jne
outsb
xchg
xor
add
jae
jb
das
ja
bnd
pop
movsl
jae
call
out
cltd
xchg
push
repz
je
ljmp
adc
cmpsb
add
mov
push
loop
and
push
ud0
and
jg
lods
pusha
mov
cwtl
xchg
cmpsb
pusha
pusha
call
aaa
sub
cmp
shl
fwait
mov
jo
movsb
mov
repz
pusha
test
pusha
fdivl
jae
fcomps
repnz
xchg
xor
repz
fisubrl
add
ret
mov
adc
mov
fwait
xchg
pop
xchg
fldt
adc
cmp
loopne
xchg
mov
repz
jns
jmp
orl
pusha
sub
scas
and
pop
xor
cwtl
jne
jmp
dec
or
and
movsl
ret
inc
or
xchg
es
orb
scas
inc
pusha
movsl
rcrl
and
sbb
and
daa
jg
mov
bound
andl
negl
xchg
and
daa
mov
jno
das
xchg
pusha
and
push
pusha
inc
inc
inc
jle
inc
and
out
dec
je
loopne
cld
sbb
arpl
popa
pop
pop
dec
hlt
mov
add
loopne
icebp
stc
sti
xchg
inc
fcomps
sub
jnp
outsb
stos
jns
into
and
add
adc
mov
inc
sbb
add
mov
or
nop
mov
loopne
cmpsl
out
data16
out
popf
xchg
sbb
mov
rcr
sbb
pop
dec
sbb
pop
fwait
out
adc
cmp
add
and
loopne
scas
mov
sar
sbb
lock
add
jmp
push
push
inc
addb
gs
fisubl
add
sahf
test
popa
sbb
dec
andb
mov
shlb
mov
push
pusha
cmp
or
mov
shlb
and
ret
sbb
mov
jmp
cmp
add
popa
push
inc
loopne
loope
shlb
push
js
fists
or
dec
mov
xor
scas
and
loopne
es
cmpsl
sub
inc
xor
loop
outsl
jne
cmp
pop
pop
sub
cmpsl
sbb
inc
insb
add
outsl
loop
ret
loopne,pn
cld
addb
shr
hlt
mov
xlat
jmp
push
int
xlat
je
jns
dec
popa
push
negb
push
int
das
bound
ja
int3
pop
imul
pop
ret
insl
mov
pusha
mov
unpckhps
sbb
sti
sahf
jae
lcall
xor
jo
inc
inc
stc
clc
push
mov
pusha
xor
cwtl
adc
inc
iret
mov
dec
mov
fbld
loopne
mov
shrb
pop
add
loopne
mov
out
lret
and
int
scas
loopne
data16
jg
or
mov
mov
add
jge
pop
sbb
adc
ja
mov
sub
loopne
lahf
jo
addb
inc
push
adc
in
clc
notb
ss
mov
push
int3
xor
insb
lock
scas
lods
mov
pop
jnp
cmp
xchg
mov
insl
jmp
je
mov
cmc
int
icebp
jns
xchg
add
shlb
loop
jmp
orb
xchg
and
repnz
sti
loopne
inc
rcrb
cmp
and
fcmovne
stc
xchg
pop
jmp
arpl
insb
push
call
push
nop
jecxz
cmpsl
in
out
sbb
aaa
fcmovnb
and
push
sbb
lret
jmp
ljmp
out
loopne
adc
cli
les
lret
pop
mov
mov
test
loopne
jae
rolb
sub
sub
mov
test
xorb
and
pusha
xchg
add
mov
xor
fs
shl
pusha
pusha
inc
mov
adc
repnz
mov
insb
sti
pop
or
add
out
cs
andb
and
push
xchg
shl
xchg
adc
sub
loopne
movl
dec
jno
insb
xchg
jmp
repnz
jmp
fs
xchg
jmp
pop
mov
inc
cltd
pop
rcrl
rcrb
mov
cmp
mov
int
out
cmc
pop
dec
sti
outsb
push
and
sbb
hlt
loope
daa
mov
loopne
sar
sarl
iret
data16
int
mov
imull
add
fidivs
sbb
popa
arpl
inc
inc
mov
cli
enter
sub
int
push
scas
mov
addb
mov
or
and
and
cmp
pusha
add
mov
fidivrs
sub
loopne
mov
cmpsb
add
sti
sub
jo
push
pop
movl
pusha
pusha
call
imul
lods
rol
lods
pop
or
mov
es
cmpsl
fdiv
aam
fwait
aad
sub
mov
lcall
mov
outsb
loop
mov
push
inc
add
adc
into
dec
mov
loopne
into
fwait
jecxz
and
cmp
dec
stc
jns
les
stos
clc
cmp
jo
push
pop
stc
or
addb
sub
and
or
inc
icebp
push
cmp
mov
rolb
xor
imul
push
bound
icebp
push
insl
aam
and
jp
arpl
push
add
push
aaa
nop
inc
sti
cli
add
inc
mov
stc
sbb
cli
in
test
push
adcl
int3
sub
pusha
popf
and
test
bound
and
aas
ret
daa
add
sub
inc
lcall
sbb
push
dec
pop
or
loopne
cli
mov
mov
mov
sbb
inc
pop
insl
mov
push
xor
addb
shrb
and
sti
cmp
inc
and
jl
mov
out
jbe
mov
clc
aam
jno
insb
and
out
sti
xor
adc
stos
dec
pop
xchg
pop
mov
mov
xor
or
shlb
pop
dec
loope
and
mov
addb
push
push
add
dec
outsb
test
fs
push
sub
movsb
pusha
xorb
xchg
pushl
loop
decb
rclb
and
cltd
cwtl
popf
xchg
xor
out
negb
in
jns
or
inc
add
mov
sub
pusha
out
jbe
incl
inc
add
mov
stos
pusha
shlb
mov
rorl
push
push
daa
les
test
imul
mov
inc
xor
fnstcw
jbe
xchg
clc
xor
add
loopne
repnz
or
push
jb
adc
and
and
add
add
cmp
repz
xlat
push
imul
ficompl
idiv
mov
sbb
push
push
push
xchg
inc
out
push
fstl
cmpsb
add
in
call
and
loop
mov
ds
jo
push
xor
sar
out
xchg
add
inc
mov
cmp
mov
leave
stc
in
push
inc
xor
push
cmpl
popf
ljmp
loope
enter
pusha
jo
mov
nop
sub
mov
adc
sub
out
imul
mov
mov
xor
hlt
dec
test
and
mov
add
xorb
hlt
lret
out
clc
mov
inc
pusha
cli
xor
ret
movsl
pop
int
inc
push
scas
pusha
pusha
push
rolb
in
pushf
cmc
mov
out
sub
stos
es
inc
loopne
insb
cmpsl
add
jno
lret
sbb
pop
pushf
inc
sbb
pop
inc
jp
push
xchg
int
imul
add
shrb
mov
pusha
jg
push
xor
inc
sbbb
or
and
mov
cmc
dec
lret
orb
adc
fbld
rolb
cmp
das
mov
cli
lret
andb
push
addb
lods
xor
and
xor
or
rolb
and
aaa
loop
push
lret
mov
and
nop
loopne
add
cmpb
push
loopne
jle
add
add
xor
mov
mov
shlb
subl
xchg
cmp
test
and
loopne
lds
dec
xchg
loopne
mov
and
scas
shlb
jo
imul
jg
aaa
inc
cmp
xor
arpl
and
icebp
jae
ljmp
cmp
pop
mov
and
pusha
cmpsl
daa
pop
mov
inc
inc
js
and
sahf
test
mov
popf
je
aam
cli
mov
sbb
add
lahf
cld
dec
jbe
call
pusha
mov
aad
andb
mov
xor
xor
scas
andb
xchg
iret
in
call
dec
repnz
jg
bound
adc
mov
shlb
mov
mov
or
and
mov
pusha
mov
loopne
insl
pop
in
andb
xchg
and
add
hlt
ss
mov
pop
loope
lahf
pop
push
inc
into
lret
pusha
repz
xchg
pop
ljmp
jl
xchg
std
lahf
mov
push
fldenv
add
mov
and
mov
push
addb
sbb
xchg
out
icebp
inc
push
mov
push
xchg
push
xchg
das
or
and
sbb
rolb
cld
rcll
mov
loopne
lods
scas
add
fdivs
pop
push
sbb
jmp
repz
pop
mov
pop
arpl
add
adc
jns
popa
mov
cmp
lcall
rol
repnz
jl
addr16
sbb
addr16
das
jnp
mov
pusha
mov
adc
lret
mov
inc
cltd
mov
int3
movsl
rolb
cwtl
testl
repz
mov
or
out
and
insb
aam
fwait
push
je
adc
pop
fadds
jmp
rolb
sub
inc
int3
in
adc
sarb
loopne
mov
mov
push
andb
pop
xchg
imul
sub
and
cmp
xchg
push
mov
add
pusha
in
sub
add
push
and
fdivs
inc
mov
pop
pusha
jns
les
rorb
inc
mov
orb
and
jae
loopne
and
and
scas
cmp
repnz
out
mov
jno
loopne
sahf
pop
je
jmp
dec
movb
sbb
pusha
loopne
ja
leave
mov
rol
add
es
pusha
les
pop
mov
cmpsl
jne
ss
and
out
cmc
mov
imul
ja
popf
pop
out
mov
add
add
mov
scas
add
movlhps
mov
adc
aad
pop
outsb
mov
loopne
mov
pop
loopne
push
ret
and
and
es
loopne
int
xchg
or
loopne
enter
nop
call
sahf
les
sbb
sbb
adc
dec
pop
sbb
rol
mov
mov
push
lock
ds
sub
jo
cmpl
inc
cmp
dec
lret
xor
ljmp
pop
adc
dec
int
jo
fiaddl
rclb
jne
mov
pusha
mov
mov
sub
sbbb
loope
lds
stos
jmpw
cmp
and
and
jae
aaa
push
je
push
sbb
mov
push
in
sbb
leave
icebp
push
fisubs
and
rol
pop
add
subb
or
sub
sarl
inc
push
outsb
xchg
xor
lds
add
jnp
movsb
mov
leave
das
xor
jmp
cmp
sarb
pop
dec
add
rolb
lahf
pushl
inc
imul
andb
fisubrl
mov
loopne
and
pusha
inc
push
leave
fwait
imul
cwtl
ljmp
rorb
adc
shrb
popf
ret
out
fld
or
inc
inc
jmp
sbb
and
movl
mov
adc
sub
mov
movb
mov
mov
pusha
cwtl
loopne
and
lahf
pop
ss
int
fwait
and
xorb
ret
sbb
mov
loopne
jg
loopne
jae
ret
mov
cli
ficoml
popf
pop
mov
mov
shlb
test
aad
clc
addr16
mov
das
push
and
les
mov
sbbb
lcall
shl
cltd
pop
pusha
mov
daa
jg
ds
jle
or
jo
inc
xchg
add
rol
add
jmp
jle
bound
lret
cmp
xchg
lods
cmp
clc
cli
rcrb
icebp
iret
std
cmpsl
xchg
inc
cli
xor
pop
xchg
and
mov
test
lcall
js
or
cmpb
mov
cmp
or
mov
cmc
roll
int
fwait
test
and
mov
adc
and
fdivl
jecxz
cmp
jmp
shll
mov
xor
push
in
fstpl
sub
mov
aas
jns
mov
enter
inc
xchg
icebp
xchg
cmc
shlb
or
pushf
xchg
sbb
xor
push
xchg
in
andb
loopne
idivl
mov
jae
pop
dec
adc
out
sub
inc
xor
mov
cmp
cmpsb
inc
add
dec
and
fcompl
add
mov
mov
push
aaa
repnz
clc
or
inc
xchg
popa
cmp
mov
xor
xlat
cmc
arpl
shl
fldenv
mov
out
je
lds
push
shrl
imul
loope
add
clc
loope
dec
xor
mov
mov
imul
mov
xor
inc
loopne
pusha
rclb
andb
pusha
cli
mov
loopne
pop
cmpsl
mull
aaa
shrb
inc
inc
inc
sub
lock
mov
inc
mov
jp
loopne
or
add
lret
mov
aaa
aas
mov
jno
jno
adc
outsl
cmp
arpl
call
and
lahf
jg
push
cwtl
dec
adc
or
add
call
sahf
xor
dec
test
fdivs
decb
mov
pusha
push
les
fisubrs
pop
mov
mov
lock
jb
mov
nop
jg
test
and
andb
push
test
mov
mov
out
sbb
xchg
std
movsb
and
in
adcl
cmpsb
add
rclb
loopne
xor
and
xor
inc
dec
mov
inc
loopne
cmpsb
andb
popf
repz
pop
inc
inc
cmp
roll
loopne
cwtl
push
inc
sbb
and
or
fildl
orl
psubw
xor
xor
adc
and
cwtl
mov
add
sarb
bound
pop
mov
pop
add
loopne
lret
movsl
mov
dec
xor
inc
adc
lcall
jns
push
mov
loopne
jp
xchg
aas
ja
push
and
push
adc
ror
push
sbbl
lods
in
out
mov
shlb
mov
inc
pushf
push
mov
fmuls
jg
xchg
pop
fiadds
loopne
xchg
gs
ljmp
and
call
addr16
mov
xchg
adc
ja
std
xchg
jnp
loopne
adc
mov
daa
std
cmp
inc
sbb
dec
cld
xor
push
jnp
cmp
pop
inc
xor
inc
sti
dec
xchg
and
insl
sarb
fdivs
inc
push
sbb
sub
add
cmpsb
loopne
sbb
aad
nop
push
fldenv
shlb
adc
xor
and
shlb
arpl
pushf
pop
xor
or
sbb
lock
mov
push
js
loop
jp
push
ss
inc
inc
inc
sbb
movsb
add
mov
inc
lds
and
sbbl
pusha
sbbb
cmp
fsubrs
popa
sub
movsl
ja
jb
add
test
or
add
inc
sub
loop
mov
aaa
sbb
dec
lea
daa
das
mov
sbb
imul
or
inc
mov
push
inc
push
fcoml
pusha
add
shlb
cmp
and
and
into
fadds
clc
dec
das
lret
data16
add
add
add
arpl
subl
mov
or
aaa
outsl
out
add
add
fwait
mov
syscall
inc
imul
push
test
daa
inc
jne
fldcw
stos
rolb
sbb
mov
psrlw
mov
gs
add
cltd
shll
mov
das
fsub
outsl
imul
push
and
xor
mov
das
pop
pushf
or
mov
cli
inc
in
fistps
rep
loopne
pop
xor
sbb
cmp
and
sub
and
aaa
xchg
stos
andb
jg
loope
jge
xchg
push
outsb
dec
fwait
cmp
mov
pushf
sbb
fcomp
xor
addr16
push
jne
add
pusha
in
hlt
js
bound
cltd
mov
gs
fdivr
xchg
rcrb
push
xor
mov
out
push
inc
inc
icebp
int
adc
mov
inc
and
add
repz
mov
outsl
in
pop
int
pop
bound
in
add
mov
dec
push
push
xor
and
dec
add
test
mov
ret
jl
xlat
call
jp
dec
das
adc
inc
sbb
les
push
inc
push
inc
daa
xor
inc
adc
shl
mov
push
inc
and
xor
cmp
cmp
sub
das
fs
ljmp
mov
pop
sbb
pop
ss
lret
xor
mov
int3
push
mov
subb
jbe
popf
or
lea
addb
xor
bound
mov
int3
gs
sbbb
add
fucomp
inc
inc
iret
leave
ret
add
pusha
in
sub
and
jae
and
push
dec
mov
add
mov
jne
cmp
inc
shl
sbb
cltd
mov
test
inc
fsubl
sub
sarb
fsubl
fists
mov
int
push
pusha
add
fwait
shr
lds
hlt
aad
ficoms
xchg
mov
mov
or
cmc
push
inc
lcall
jo
jns
lret
in
lds
push
dec
lret
sti
data16
mov
mov
inc
inc
lahf
jb
scas
mov
sub
and
mov
pop
jb
pusha
push
dec
sarb
push
push
ficompl
sbb
rorl
loope
orl
rolb
rolb
push
stc
inc
in
test
inc
adc
repz
aaa
push
ret
leave
xor
pop
xchg
inc
ret
pop
and
jbe
add
adc
add
pusha
mov
rolb
popf
jmp
xchg
jecxz
add
and
add
jg
fwait
jmp
mov
add
inc
jae
addb
push
aam
xlat
and
inc
fstpl
shrl
ds
and
lds
mov
fdivrs
add
pop
insb
clc
push
dec
add
mov
inc
and
cmpsb
loopne
outsb
mov
roll
andb
repnz
inc
pusha
stos
lret
shrb
dec
add
add
inc
sub
jno
xorl
and
sub
pusha
fcoml
and
and
cmp
adc
rolb
out
pushf
dec
jne
stos
inc
inc
into
in
leave
shll
aas
pslld
mov
cltd
jbe
in
aad
add
pop
jmp
add
divl
and
pop
test
rolb
adc
fucomi
jle
data16
loop
inc
xor
sub
xor
cmp
and
inc
bnd
lcall
add
dec
mov
imul
sahf
mov
loopne
and
add
inc
inc
push
pusha
xor
pop
inc
cld
xchg
sbb
fcmove
mov
pusha
loopne
inc
mov
out
pop
fidivs
in
sbb
nop
xchg
mov
or
sbb
hlt
in
jnp
gs
lds
inc
and
shl
lahf
sbb
out
cmp
stos
shlb
mov
dec
pop
arpl
mov
lret
imul
scas
push
clc
mull
insb
shrb
and
in
xchg
mov
mov
testb
in
fwait
cmp
jnp
pop
out
xor
pop
sub
inc
clc
mov
inc
xchg
mov
xchg
add
pusha
stos
and
andb
and
xor
pusha
mov
jge
xchg
loope
addr16
adc
pusha
pop
cmp
bound
add
mov
inc
and
mov
adcb
mov
pusha
xchg
shrb
xchg
add
inc
dec
lods
andb
mov
push
jo
add
sub
add
and
insl
xchg
add
js
clc
add
pusha
lret
push
inc
in
test
rol
rcl
scas
mov
or
inc
cmp
push
add
inc
lock
jnp
and
cld
jmp
xor
mov
mov
neg
icebp
sbb
and
jecxz
pop
ficompl
and
inc
loopne
icebp
lea
rolb
push
mov
jmp
inc
add
sub
pop
addb
sbb
aas
sti
hlt
scas
dec
nop
and
pop
push
loopne
pop
xor
sbb
lock
outsl
inc
xor
xchg
cmp
repnz
test
pusha
stos
ss
in
scas
inc
inc
in
imull
jo
inc
out
and
scas
add
and
movsb
loopne
sub
xorb
rorb
push
push
sbb
and
push
rol
movsl
pop
imul
add
test
flds
pusha
loopne
mov
or
inc
pop
xor
stc
inc
mov
mov
adc
xor
loopne
push
popa
mov
inc
add
xor
lahf
bound
mov
push
mov
fdiv
rcrl
add
dec
sbb
push
mulb
mov
sbb
mov
xor
mov
rolb
and
jl
cmc
imul
pop
xchg
xchg
adc
shlb
test
xchg
test
pusha
mov
fildll
xchg
jge
mov
fsubr
jmp
ja
std
stos
add
loopne
movsb
add
enter
sbb
jp
push
jae
push
jmp
push
int
scas
movsb
and
out
imul
mov
mov
and
inc
pushf
push
ds
inc
push
pop
pop
xor
lret
test
iret
dec
cld
leave
dec
cli
mov
cli
scas
ss
enter
call
mov
out
pusha
pusha
cmp
insl
pusha
mov
inc
cmc
adc
sbb
pop
mov
frstor
push
mov
loopne
addb
mov
lock
das
mov
xorl
insb
mov
inc
pusha
adc
add
mov
xor
adc
fs
push
or
orl
mov
sbb
xchg
or
sbb
fdivl
popa
jbe
xor
jo
inc
mov
fs
test
cmp
nop
inc
dec
cmp
int3
mov
call
insb
lcall
inc
cmp
adc
lahf
inc
adc
push
xor
std
cltd
push
add
cmp
out
mul
mov
pusha
rclb
adc
mov
mov
add
sbb
mov
add
hlt
cs
add
inc
xchg
sbb
inc
push
and
or
and
xlat
scas
and
int
cltd
dec
lock
stos
pusha
add
das
fdivrl
add
adcb
dec
jbe
loopne
or
test
std
cmc
cmp
cmp
fisubs
push
pop
pop
lock
push
inc
ret
mov
mov
xor
and
xor
inc
mov
cmp
jne
pop
or
pusha
add
les
ret
or
in
adc
add
fcmovu
jno
xor
inc
pusha
cmp
lret
je
jnp
popa
mov
add
addb
dec
add
add
cmc
cld
sub
cmp
add
mov
mov
fisubs
push
dec
cmp
test
cli
lret
dec
lds
loop
sub
fwait
sub
jp
repz
jecxz
popa
ja
push
clc
movsl
push
addb
jb
int3
mov
mov
xor
mov
fndisi(8087
inc
sub
cmp
sti
jbe
into
iret
jl
sbb
mov
insb
scas
dec
inc
jle
lea
jmp
add
pop
lret
mov
sub
push
or
test
in
cmp
mov
pop
js
xchg
and
loopne
pop
and
lds
dec
mov
dec
mov
mov
dec
call
pop
ljmp
mov
ss
mov
push
pusha
inc
xchg
pop
pop
jl
mov
cmpsb
loopne
lods
and
addr16
scas
loop
loopne
jecxz
add
pop
sub
and
xchg
mov
aam
add
lock
dec
mov
add
or
fstps
lods
push
inc
aaa
add
dec
adc
out
cmc
xor
push
and
fildl
and
mov
shr
xchg
mov
aam
xchg
and
jo
mov
ret
push
xchg
repz
mov
xor
sahf
rclb
push
mov
sbbb
loope
scas
inc
loopne
inc
add
pusha
mov
xchg
add
adc
sbb
jo
mov
sub
inc
dec
aam
xchg
loopne
out
std
repz
insb
add
and
rolb
and
push
lret
pop
popf
dec
pop
push
and
sbbb
xlat
sbb
inc
cld
popa
or
inc
cmp
cmp
mov
mov
add
inc
xchg
rolb
inc
xorb
loopne
and
sub
loopne
jmp
subl
cmpsb
addb
fldl
rorl
mov
imul
pop
mov
loop
clc
aad
lahf
sti
mov
loopne,pn
sbb
ds
shlb
in
enter
mov
add
mov
inc
and
push
in
mov
pop
and
pusha
sbb
jns
inc
xchg
test
fisttpll
andb
jno
roll
mov
xchg
test
sbb
andb
inc
loopne
test
pop
aaa
pop
jmp
popa
cmp
stc
pushf
outsb
inc
add
roll
add
and
xlat
scas
loopne
inc
inc
xchg
aaa
scas
ds
pusha
outsb
out
adc
rclb
mov
ja
cmp
fistps
mov
inc
jae
addr16
dec
cs
mov
jl
and
jge
pop
jns
and
push
xchg
pusha
mov
push
cmpsb
mov
js
add
movsb
and
addr16
aaa
mov
xchg
ror
fistps
cmp
iret
movsb
add
adc
nop
xchg
pop
sub
xor
pop
shr
andb
inc
inc
sub
mov
popf
ljmp
loopne
mov
mov
push
out
jb
mov
inc
mov
mov
cmp
mov
jb
mov
andb
out
or
loopne
gs
inc
in
not
bound
fcmovu
insl
arpl
pusha
inc
mov
cmp
pop
divl
iret
rclb
mov
pop
jp
add
adcl
pusha
in
stc
add
sarb
inc
ss
popa
fistpll
stos
and
shlb
or
loopne
fld
outsl
ret
cmpsb
mov
xor
inc
inc
dec
imul
ja
addb
int
cs
addb
adc
inc
in
xchg
cli
and
subb
sbb
xchg
imul
cmc
adc
mov
hlt
sub
add
loopne
in
xchg
lret
out
cmp
xchg
aaa
xchg
ljmp
adc
je
inc
out
mov
mov
sbb
int
fsts
cld
push
or
jmp
cli
cld
xchg
aad
inc
loopne
pop
outsl
pushf
aam
icebp
out
fimull
mov
fcmovne
push
loop
add
mov
jo
adc
jecxz
leave
test
xchg
mov
and
lods
loopne
xchg
push
pop
or
int
mov
xor
jnp
sarb
xor
stos
aad
xchg
mov
in
jno
stos
mov
or
mov
adc
outsb
dec
icebp
int3
sub
inc
sub
int
pusha
shl
jg
andb
pop
sarb
dec
jns
mov
cmp
test
inc
sub
cmp
jne
xor
dec
ss
push
mov
out
sbb
rcll
mov
data16
cmp
xchg
enter
loopne
lods
andb
inc
fbstp
orl
pusha
xor
pusha
add
adc
mov
jno
jl
lods
sar
mov
mov
fdivp
addl
add
mov
or
and
xchg
scas
lea
scas
inc
pusha
mov
inc
jmp
mov
xchg
andb
sub
push
jge
mov
in
outsb
mov
xchg
cmp
fucomip
fidivl
test
dec
pop
in
mov
dec
in
loop
lahf
pop
loopne
push
sbb
shll
pop
fadds
cmpsb
inc
loopne
gs
popf
jg
push
and
mov
sbb
dec
jo
push
shlb
inc
add
pusha
inc
mov
inc
popa
jnp
xor
and
or
lea
ljmp
dec
sub
jecxz
or
inc
lods
and
ret
and
and
loopne
sbb
loopne
mov
mov
inc
xchg
out
int3
jmp
xlat
xchg
ljmp
ss
adc
rolb
and
dec
es
mov
mov
sar
movb
adc
shlb
adc
xor
lea
cwtl
or
andb
mov
outsb
mov
imul
xor
hlt
ss
and
dec
cmp
in
loope
cmp
loope
sbb
jne
lods
loopne
je
out
lds
sbb
int
add
cmp
push
lcall
inc
outsl
call
test
and
and
sti
jno
or
imul
dec
jne
cmc
imul
add
nop
test
adc
imul
xchg
pop
jl
push
xchg
pop
aad
shl
lret
pusha
pusha
jmp
mov
shrb
pop
in
jb
inc
dec
mov
and
fnstcw
shlb
outsl
test
pop
mov
cmp
inc
rcrb
iret
fisubrs
loop
sbb
rorl
pop
fsubrs
loopne
fidivrl
sub
xchg
add
int3
lds
xor
inc
or
and
xor
sbb
mov
in
jp
pusha
mov
ljmp
sbb
and
xchg
sbb
add
pop
rolb
sahf
arpl
mov
shlb
sub
add
jge
push
dec
or
sub
and
inc
andb
and
add
cmp
xor
lods
push
push
cld
mov
mov
repz
ljmp
test
or
xchg
xor
xor
testl
fs
inc
mov
sub
cmc
fs
xchg
ror
rcrb
mov
cmc
jl
test
pusha
test
loopne
cwtl
pop
mov
and
in
popf
jne
dec
dec
addr16
pop
lcall
call
andb
lret
dec
sub
dec
or
mov
add
jmp
imul
dec
aad
and
js
cmp
pop
pusha
mov
ljmp
xor
fstps
push
inc
mov
mov
adc
and
dec
cmp
enter
push
imul
pop
mov
mov
add
loopne
xor
jae
stc
push
js
rcr
push
repnz
mov
pusha
sub
ret
sub
cs
rclb
jnp
mov
xor
mov
insb
dec
lret
mov
das
data16
pusha
lock
pusha
pusha
ret
push
lods
add
xchg
lea
mov
rcrb
nop
sbb
decb
rolb
fs
mov
xchg
es
stc
jge
mov
lahf
ret
aam
lods
mov
xor
cmp
int
inc
rclb
pop
cwtl
xchg
inc
mov
movsl
add
pusha
shrl
pop
je
ss
int
push
or
pushf
mov
inc
and
add
loopne
call
outsb
into
mov
adcl
push
add
and
xchg
cli
stos
push
in
pop
xor
add
inc
inc
rcr
test
stos
pusha
orb
orb
adcl
les
jmp
loope
adc
xchg
add
arpl
addb
adc
outsl
jp
ret
jmp
idiv
jbe
or
shlb
xchg
aam
pusha
shlb
sub
jp
inc
xchg
shlb
stc
lods
mov
push
pushf
jp
mov
jle
rolb
in
data16
mov
cmp
sbb
mov
mov
add
mov
loope
mov
add
and
xor
xchg
cmp
les
inc
scas
addr16
xchg
sahf
pop
jle
repz
loopne
enter
lret
imul
mov
sbb
lods
and
mov
cmp
mov
stos
mov
xchg
push
cmp
inc
cmovo
stos
push
js
and
sbb
xor
cli
sar
mulb
test
and
mov
xchg
cmpsb
and
hlt
pushf
xor
xor
add
add
call
cmovbe
mov
into
mov
sub
mov
mov
add
repz
push
lock
jno
in
aad
rolb
sbb
mov
jecxz
andb
push
lret
pop
ljmp
fdiv
jb
mov
and
jo
inc
mov
mov
scas
cltd
xchg
pusha
add
add
loop
or
mov
andb
rolb
cli
ss
lods
add
pusha
fdivrs
addb
cmpsl
or
dec
cmpsl
mov
je
mov
flds
inc
push
sbb
adc
and
fldcw
call
shlb
popa
cmp
in
or
add
loopne
negl
sti
ficoml
mov
inc
pop
mov
pusha
orb
fisubrl
addb
add
mov
bound
push
daa
inc
ja
cmp
sub
scas
mov
mov
dec
aam
push
sub
divl
fnsetpm(287
add
mov
loope
sub
loopne
hlt
pop
bound
and
out
push
push
inc
xor
stc
sub
sbb
scas
pusha
pusha
aaa
add
add
mov
cwtl
in
pushf
xchg
xor
cmc
clc
adc
jb
dec
stc
push
loope
mov
gs
pusha
ror
adc
jmp
andb
pop
or
and
in
lahf
dec
lret
shl
jmp
pusha
add
sbb
inc
mov
inc
jns
add
movsl
dec
xor
cmp
stos
hlt
adc
mov
sub
rclb
pop
cltd
pop
xorl
imul
dec
jno
cld
andb
ss
mov
xchg
mov
mov
inc
add
loopne
outsl
movsl
out
fnstcw
inc
mov
mov
jnp
adcl
cmpsl
aam
sahf
movsb
addb
mov
test
dec
mov
jns
shrl
shl
add
cmp
in
jnp
roll
pusha
pusha
test
cmc
inc
sahf
cli
aad
movsl
adc
insb
inc
cltd
sahf
test
rclb
rolb
mov
mov
loopne
and
pop
adc
inc
sub
or
cmp
mov
andb
repnz
fistpll
mov
dec
dec
xorl
test
cli
iret
mov
and
adc
adc
movsl
xor
jne
jnp
sahf
lahf
call
xor
xor
subb
xchg
or
jle
int3
xchg
pop
out
jne
andb
pop
out
sbb
inc
fidivl
inc
and
mov
pusha
lods
je
ss
rorb
dec
nop
icebp
add
pusha
mov
lcall
lahf
xor
test
or
clc
stc
inc
add
add
mov
adc
jecxz
mov
into
cld
mov
and
mov
cltd
sbb
loopne
call
je
xchg
pop
xlat
adc
jb
inc
sarb
pop
or
inc
mov
inc
mov
int
sub
add
outsl
sarb
mov
jg
js
inc
sbbb
xchg
cmp
test
loopne
xor
pop
push
loopne
frstor
addb
pushf
cmp
sarb
insb
xchg
pop
mov
mov
dec
mov
and
stos
or
cmp
daa
sub
loopne
in
call
jo
sub
sub
fwait
dec
popf
vsqrtss
pusha
in
cmp
inc
jecxz
jo
loopne
ss
outsl
and
stos
mov
pop
push
je
xlat
dec
je
pop
xchg
add
mov
inc
pusha
fbld
xlat
and
loopne
repz
addb
and
lea
arpl
bound
adc
inc
hlt
pop
in
pushf
mov
sbb
xchg
sub
add
dec
insl
std
and
loopne
mov
mov
pusha
aas
in
sub
loopne
push
fstl
ret
cmp
loopne
pop
xorl
rcr
xor
arpl
pushf
cs
inc
fnstsw
push
mov
push
sbb
or
jle
jle
or
inc
insb
sbb
in
lret
push
and
lods
popf
shll
pop
popa
sbb
dec
xchg
jne
mov
or
adc
rol
ljmp
push
js
out
dec
inc
or
add
push
bound
movsl
mov
addb
mov
mov
data16
ret
add
decl
mov
jb
jae
inc
jno
and
test
jge
pop
add
loopne
adc
mov
and
mov
mov
xchg
push
into
jmp
inc
add
imul
add
xlat
call
sbb
ss
vpshuflw
jle
loop
and
fstps
psubsb
add
inc
ss
repz
cmp
add
mov
xorl
mov
imulb
rol
les
pop
and
repnz
cmp
push
xchg
ds
and
inc
test
add
cmp
mov
in
sub
mov
mov
sti
cwtl
enter
or
mov
push
jp
jg
push
sub
loopne
fs
dec
xor
mov
add
pusha
inc
pop
aas
addb
mov
inc
rcrb
xor
mov
cmpsb
shlb
sub
jle
push
push
add
test
inc
loopne
lods
mov
in
push
addr16
in
xchg
outsb
jno
out
js
push
mov
add
mov
mov
push
js
mov
shll
dec
sbb
ja
stc
mov
add
inc
ficoml
push
push
mov
fs
addb
mov
and
add
add
inc
loopne
sub
ja
and
loopne
dec
xor
lea
cmp
pop
shlb
mov
and
andb
mov
add
jnp
adc
mov
popf
jmp
add
pusha
push
mov
fidivs
xchg
adc
enter
pop
rol
arpl
outsl
sbb
and
out
dec
outsb
shl
out
or
nop
dec
shr
jp
mov
pusha
ret
in
pop
inc
test
mov
aam
lock
fistpll
cmpl
loopne
loopne
shl
sarl
mov
in
shlb
loopne
add
and
and
or
outsb
pop
mov
sarb
add
in
cmpsl
out
mov
mov
scas
and
cld
addr16
aaa
lcall
add
lret
js
push
mov
or
sarb
and
add
sbb
pushf
pop
enter
jge
and
ret
ret
add
mov
xorb
add
inc
inc
pop
inc
push
loopne
fisttps
jo
pop
shrl
unpcklps
ja
gs
xchg
xor
ret
push
int
inc
add
ss
loope
sti
fidivrs
test
loopne
jl
jle
add
mov
pop
mov
adc
adc
and
shlb
hlt
cmp
stos
jae
rolb
inc
sub
pop
ja
push
jecxz
sbb
add
mov
jae
arpl
jo
daa
pop
cltd
mov
add
jmp
or
leave
push
pusha
mov
in
xchg
jl
adc
mov
dec
jmp
add
in
insl
fnstsw
and
xchg
adc
adc
addb
pusha
adcb
mulb
pop
cmp
enter
and
jnp
sti
lahf
and
xor
pop
data16
cmc
int
pusha
pusha
push
and
shrl
mov
sub
cltd
cmp
sbb
push
inc
mov
ds
js
or
xchg
out
bound
shlb
inc
inc
pop
repz
jbe
gs
inc
mov
pusha
int3
xor
mov
clc
loopne
ret
jno
out
clc
xchg
dec
adc
xor
push
dec
push
addb
js
add
daa
cmc
xor
push
adc
int
lds
or
dec
imul
add
rolb
loope
add
lcall
pusha
inc
rolb
inc
inc
stc
sub
sarb
inc
fisttpl
mov
jbe
data16
fwait
repnz
add
pusha
out
jg
push
add
mov
stos
add
mov
sbb
loop
inc
cmpb
nop
loope
repnz
icebp
mov
ljmp
sar
inc
bnd
in
cli
int
mov
cmp
decb
les
mov
xor
and
loopne
mov
repnz
push
loopne
iret
pusha
cmpsb
inc
add
or
insl
sbb
jecxz
push
sbb
cld
rcrb
rolb
fstpt
push
and
imul
repnz
adcl
and
push
mov
dec
push
rolb
cmp
js
add
pusha
and
pusha
add
pusha
and
pop
addr16
dec
adc
loopne
and
popa
outsl
dec
dec
sbb
and
scas
adc
mov
inc
ljmp
jo
sahf
xchg
cmp
insb
outsl
dec
pop
jl
or
lret
mov
mov
sbb
pop
mov
imul
xlat
mov
mov
add
fwait
or
jno
mov
mov
stos
xchg
fnstsw
cmp
push
cmp
jp
cmpsb
loopne
outsb
jne
out
dec
mov
shlb
mov
jne
pushf
ja
addr16
ror
push
loopne
rcrb
xor
pusha
subb
das
je
dec
pop
out
push
icebp
iret
jp
push
fwait
pop
dec
add
addb
lea
stos
push
sbb
mov
mov
rol
jne
int
imul
scas
inc
add
or
in
adc
shl
pop
ret
leave
fisttpl
xor
push
push
jb
lock
and
inc
add
fisubrs
add
in
push
fcomi
cli
cmp
je
sub
adcb
mov
shlb
jmp
push
xor
jb
push
pop
loope
sub
add
ret
shlb
add
mov
inc
sub
scas
and
inc
add
jge
insl
pusha
push
pop
cmp
fdivr
mov
lods
repnz
in
xchg
xor
add
loopne
lods
and
inc
add
mov
icebp
shr
fldl
mov
gs
sbb
in
jmp
mov
adc
fnsave
insb
insb
and
test
sub
mov
and
lcall
lock
sub
add
mov
rcl
inc
insb
mov
mov
xchg
lock
nop
leave
fldt
and
loopne
or
push
push
mov
sub
inc
pop
mov
aas
fmull
adc
xor
adc
add
add
andb
jmp
addl
push
mov
fwait
xor
dec
das
pushf
cltd
in
mov
sbb
cmp
js
ret
jg
icebp
imul
xchg
ljmp
dec
mov
int3
or
lret
adc
pusha
pusha
cmp
incl
test
mov
xlat
adc
clc
dec
sbb
pusha
sub
adc
cmp
je
dec
xchg
xchg
jle
push
daa
sub
shlb
dec
bound
and
sbb
ljmp
hlt
inc
repz
and
loopne
adc
pusha
mov
add
je
add
jne
in
jbe
jnp
cmp
and
xchg
notb
fs
ficoms
and
mov
sub
loopne
clc
mov
mov
pop
jle
mov
loopne
xor
mov
and
dec
rolb
pusha
adc
xor
xlat
into
pop
insl
fxch
and
mov
pop
inc
shll
or
das
pop
sahf
int
loopne,pn
fisttpll
inc
cmc
xor
or
xchg
jg
and
inc
and
andb
andb
mov
jns
push
pop
mov
pop
push
shl
push
mov
rolb
fcoml
out
aas
pop
mov
adc
mov
xor
adc
andb
mov
inc
test
orb
mov
mov
shrb
rolb
loopne
jmp
cmove
xor
push
jmp
fisttps
je
add
and
mov
fdivp
push
jecxz
add
xchg
data16
enter
pop
push
or
rclb
addb
sarb
mov
xchg
outsb
and
inc
je
mov
and
cmpsb
shlb
jle
fwait
rcll
inc
sub
mov
jbe
lods
pusha
cmpsb
inc
mov
xchg
in
sub
sar
push
out
adc
push
adc
cmp
popl
inc
loopne
mov
mov
loope
mov
mov
test
jno
jo
pop
sbb
fmuls
push
inc
push
out
fcompl
cmp
sbb
fnstcw
xor
rclb
adc
mov
dec
or
adc
or
lahf
jecxz
mov
out
xlat
cwtl
test
subb
and
cmp
mov
fcomps
dec
test
out
pop
test
cmp
and
iret
mov
pop
ja
andb
mov
mov
sahf
adc
scas
loopne
outsb
or
mov
loopne
iret
imul
stc
jbe
mov
or
loopne
in
insb
daa
xlat
cmp
add
dec
out
jge
and
sub
loopne
adc
insb
push
in
push
fisttpll
loopne
xor
popf
popf
imul
repnz
add
jbe
insb
lcall
fisttps
pop
or
xchg
push
push
mov
mov
cmp
lcall
xlat
sbb
je
jne
lcall
add
pop
stos
inc
inc
imul
insb
inc
push
cltd
or
mov
and
and
loopne
nop
dec
sahf
pushf
lods
aad
pinsrw
loopne
loopne
int3
outsb
arpl
pop
lret
outsl
xchg
mov
mov
add
in
mov
lret
loopne
psraw
enter
mov
adcb
addb
adc
xchg
lds
lret
orb
shlb
orb
loopne
fwait
or
or
add
add
mov
fimuls
sbb
popf
hlt
add
test
mov
rcll
fadds
insl
fcmovne
xchg
mov
es
or
sbb
add
mov
shlb
rolb
ja
aas
int
mov
mov
pusha
inc
shl
mov
pop
lock
push
fs
add
sbb
pusha
jle
insl
and
outsb
icebp
test
jmp
stos
or
xlat
mov
push
cmp
xchg
inc
rclb
mov
dec
xor
scas
add
ljmp
imul
mov
pop
mov
aam
addb
sbb
addb
fdivr
mov
mov
les
fs
inc
xchg
mov
jo
sub
mov
loopne
jg
cmpsl
jae
roll
rclw
dec
jg
cli
sbb
pushl
jae
cmp
mov
fcoms
not
adc
sbb
inc
push
pop
and
popa
lea
and
ja
bswap
int3
std
sbb
inc
inc
mov
cmp
inc
add
add
pop
popf
adc
lahf
std
lea
rcl
cmpsb
inc
pusha
xchg
pusha
roll
pop
sub
add
or
lahf
or
fmull
lret
pop
pop
sahf
xchg
add
outsl
and
pop
jge
loopne,pn
adc
punpckldq
inc
xor
push
mov
mov
jg
pop
sbb
test
addr16
leave
or
sti
mov
mov
rolb
mov
insb
jmp
sbb
and
and
dec
mov
jp
mov
mov
sbb
lahf
mov
jmp
in
cld
fs
inc
push
mov
cli
add
xchg
ds
in
cmpsl
sbb
jmp
addb
mov
mov
inc
aas
push
jp
cmp
jno
into
pop
adc
inc
inc
mov
sbb
sbb
lcall
fsubs
jle
pusha
pusha
mov
cs
pop
jge
out
leave
lret
pop
pop
std
int3
jmp
call
scas
push
dec
repnz
data16
pusha
cltd
mov
jge
loopne
jmp
jbe
push
inc
add
scas
cwtl
loopne
sub
cltd
int3
sub
or
and
mov
lret
outsl
stc
enter
mov
cmp
adc
and
nop
lahf
scas
inc
add
inc
test
test
ss
jbe
cli
lods
icebp
jno
lds
inc
loopne
fldenv
fadd
mov
lahf
sbb
jmp
inc
sbbl
call
lcall
add
adc
lea
mov
push
push
je
and
test
icebp
out
mov
push
add
stos
loopne
lea
rolb
ficoms
or
loopne
add
pusha
adc
shl
jb
int3
dec
daa
jbe
fldcw
add
shll
popa
xor
dec
in
xlat
call
das
outsl
inc
push
pop
xchg
add
add
decl
add
and
add
xchg
daa
aad
andb
mov
rclb
mov
lea
lcall
arpl
mov
andb
pop
xor
loopne
nop
cli
push
sub
and
loopne
mov
push
into
call
lahf
scas
loopne
bswap
iret
pop
ret
js
out
mov
sbb
mov
aaa
fistpll
adc
fdivrs
jle
into
xchg
sbb
cmc
cmc
and
inc
xorl
xor
cmp
xor
dec
add
pusha
jg
pop
loopne,pn
mov
add
icebp
xchg
inc
loopne
rolb
xchg
mov
out
aam
jne
dec
pop
xor
outsl
push
js
lds
xor
inc
andb
insl
dec
mov
dec
lret
ja
mov
bound
xchg
and
and
lds
andb
ret
hlt
leave
stc
sbb
mov
pusha
xchg
or
push
std
or
pusha
imul
pop
mov
iret
cli
cwtl
dec
pusha
sbb
popa
lret
jbe
in
rorl
shlb
push
mov
loopne
sti
xor
add
inc
pusha
inc
push
out
cwtl
mov
jmp
clc
sahf
loop
insb
xor
flds
dec
andb
mov
mov
lds
sub
push
mov
mov
mov
or
sti
testb
int3
xchg
mov
loope
ror
jbe
xor
lcall
jl
jmp
xor
mov
pop
push
adc
cmp
stc
stos
add
push
cli
mov
test
sbbb
pusha
loopne
mov
pop
pop
xor
inc
mulb
xor
sarb
jge
pop
fsub
jb
rolb
add
sub
decb
addb
and
mov
cmp
mov
or
loopne
cmpsb
inc
mov
dec
mov
aas
or
loopne
in
mov
pop
pushf
andb
loopne
inc
movsb
and
push
jno
les
pop
jae
mov
add
push
adc
iret
jb
sub
add
fidivl
add
mov
mov
add
lock
jmp
xchg
cmp
mov
and
hlt
movsl
loop
imul
mov
pop
xor
mov
jo
pop
push
arpl
fcomps
aaa
sbb
leave
mov
sahf
insb
fiaddl
pusha
and
pop
dec
sbbl
int3
cwtl
scas
mov
fnstenv
add
mov
or
inc
lahf
stos
loopne
push
mov
push
lcall
push
test
movsb
inc
loopne
fwait
icebp
adc
mov
in
mov
cmp
int
sbb
and
pusha
test
jmp
das
fcmovb
add
xorb
add
in
movsl
mov
rolb
loopne
scas
pop
imul
jns
shrb
cmp
pop
xchg
cmc
mov
fcmovnb
data16
push
add
loopne
add
sub
add
mov
inc
mov
fcomp
mov
imul
sti
cmp
adc
add
loopne
imul
sbb
dec
jns
or
subb
loopne
rcl
jo
jl
loopne
push
add
inc
jb
pusha
shl
ljmp
xor
fcmove
into
adc
outsl
adc
pusha
inc
and
xor
sub
inc
inc
sub
inc
jmp
add
add
cmp
cld
cmp
dec
loopne
fistps
lds
mov
repz
dec
xchg
mov
dec
test
sub
add
and
adc
fstpt
adc
dec
out
and
and
pop
scas
mov
test
and
scas
shlb
std
daa
mov
shl
mov
pop
repnz
andb
dec
aaa
arpl
rolb
hlt
or
loopne
cmp
and
loopne
fsubrl
addb
mov
add
push
je
mov
loopne
movsl
xor
test
pusha
repz
lret
andb
inc
je
push
aam
mov
lods
mov
pusha
movsl
mov
pusha
inc
mull
pusha
pusha
or
push
sub
push
or
add
loopne
and
add
ret
rolb
add
add
pop
xor
inc
and
and
mov
pop
lret
arpl
ss
inc
jle
in
or
loopne
mov
bound
xchg
jno
cltd
movsl
inc
sbb
cmp
mov
and
mov
mov
xchg
add
add
pushf
loope
pusha
inc
inc
dec
dec
and
and
rolb
and
mov
and
jns
mov
lea
fcmovu
lret
jge
lcall
cmp
pop
repnz
sbb
inc
dec
ljmp
cmp
add
cli
or
les
xchg
lods
repnz
into
dec
repnz
cld
mov
xlat
pop
xor
dec
cmpsb
and
icebp
sbb
jne
and
jae
insb
btc
rorb
mov
stos
addb
cmpsl
inc
in
sbb
ja
jae
or
ja
mov
mov
pop
scas
andb
psrad
rol
repnz
outsl
lods
xor
inc
cmpsl
jns
lcall
fisttpl
sbb
dec
cwtl
xchg
mov
pusha
aaa
fisubs
into
and
loopne
dec
sub
dec
aam
bound
cmp
pusha
iret
add
subl
inc
dec
test
and
sti
lret
pop
fldenv
inc
sub
mov
shll
lea
test
add
imul
mov
sub
fucomip
dec
mov
add
daa
cwtl
out
sarl
mov
add
dec
sbbl
mov
and
mov
dec
pop
push
and
jae
inc
cltd
rol
or
pop
outsl
mov
loopne
dec
imul
cli
dec
push
mov
xchg
aam
push
or
mov
sbb
ljmp
cmpsl
push
orl
inc
rolb
rorl
mov
das
adc
movsb
add
push
lock
pop
adc
jnp
fildl
add
adc
fldln2
dec
push
lahf
cmovo
icebp
mov
test
add
add
push
test
sti
out
out
pushf
shrb
adc
sbb
mov
shlb
push
test
mov
test
out
lods
andb
ljmp
std
inc
out
mov
push
mov
repz
inc
jecxz
xor
loopne
xchg
imul
inc
loopne
pop
js
cltd
daa
jmp
addb
jae
popa
mov
mov
lcall
push
xor
lock
cmp
push
bound
jne
stos
fdivr
xchg
movsl
mov
mov
sbb
cmp
iret
ss
add
inc
movsl
lds
inc
orb
pushf
into
mov
pusha
cmc
mov
pusha
and
pusha
iret
jnp
cld
mov
inc
ja
std
dec
pop
shlb
into
int3
dec
ljmp
mov
ds
loopne
imul
push
mov
addb
loope
xchg
gs
int3
xor
mov
mov
sub
adcb
imul
jo
mov
insb
jbe
sbb
xchg
pop
mov
add
dec
pop
std
movsl
lcall
repz
dec
inc
and
mov
inc
loopne
jecxz
pushf
popl
rolb
punpckhwd
data16
mov
dec
mov
xchg
data16
jmp
pusha
ljmp
or
pop
lods
arpl
imul
popa
test
loopne
shrb
andb
repz
adc
push
repnz
addb
addr16
or
inc
jl
ret
nop
dec
push
fidivl
loopne
inc
andb
pop
cmpsl
cmp
sbb
sub
inc
loopne
loop
sub
jg
leave
int3
or
add
inc
test
sub
les
mov
mov
adc
or
mov
mov
clc
adc
cmp
and
mov
add
mov
repnz
mov
jo
lret
sub
inc
int
bound
dec
mov
push
jo
andb
jp
in
sub
inc
cmp
ja
and
xor
les
and
mov
stos
pusha
pusha
jo
sbb
push
out
xor
in
gs
jns
sarl
test
in
test
cmp
jns
mov
shlb
xor
rolb
push
inc
repnz
subb
inc
into
and
cmpsl
clc
mov
add
test
loopne
adc
stos
loopne
xchg
and
ljmp
jmp
jno
and
jno
jle
or
mov
pop
clc
fbld
iret
pop
in
sbb
insl
aad
add
loopne
push
inc
loopne
mov
loopne
and
ljmpw
iret
jl
mov
add
dec
cmpsl
and
andb
arpl
pop
loop
inc
cli
sub
mov
mov
shlb
sbb
dec
cmp
nop
inc
pusha
das
mov
fs
add
mov
sbb
mov
dec
fs
out
out
xor
adc
push
xlat
push
and
mov
lds
xchg
adc
incl
jmp
faddl
and
lods
shll
sub
leave
add
and
pop
int3
test
jo
pop
into
cwtl
xorl
and
xchg
pushl
mov
lea
iret
cltd
incl
mov
or
add
jno
loopne
cmp
add
loop
mov
repnz
mov
mov
xor
and
sub
popf
cmpsb
and
push
mov
push
sub
cmpb
iret
out
mov
inc
lods
scas
and
lcall
jmp
or
loopne
clc
lock
add
arpl
and
fs
jmp
insb
cmp
sbb
aas
shrb
jl
ret
cmp
or
mov
dec
repz
enter
fidivrs
in
in
lock
pusha
loopne
iret
push
ja
rolb
sub
out
adc
xor
ja
fwait
pop
push
mov
pop
pop
mov
and
push
cli
cs
push
adc
dec
pop
std
lock
and
inc
rcll
sbb
mov
mov
jbe
les
cmp
push
cwtl
push
std
sbb
and
popa
sub
orb
mov
pop
inc
nop
push
inc
mov
mov
pushl
mov
hlt
pop
cli
mov
xchg
sbbb
inc
stos
sub
pusha
not
test
and
mov
sbbb
and
das
jnp
cmp
xchg
adc
and
cmp
insb
mov
inc
orb
test
rclb
mov
iret
adc
pusha
pusha
aam
insl
jl
xchg
pop
sbb
loopne
pop
lret
int
or
mov
jg
mov
shll
loope
xchg
mov
test
inc
test
mov
lahf
out
pusha
loopne
aas
arpl
fstps
ja
gs
and
loopne
outsl
xchg
loope
inc
jo
xor
pop
movsl
jle
sub
inc
mov
pop
sub
pop
outsl
cs
mov
icebp
jp
pop
pushf
addb
xchg
xor
lret
test
loopne
andb
and
mov
xor
aam
std
es
or
paddusw
and
test
and
add
pop
jbe
pop
push
inc
mov
push
mov
pop
orl
stos
fists
inc
xchg
imul
mov
or
jecxz
stos
ja
and
add
push
in
lahf
add
inc
fadds
loopne
xor
mov
sbb
xor
adc
push
addr16
cmpsb
and
jl
rolb
sbb
sbb
sbb
xchg
insl
pop
rol
mov
ds
addb
test
cld
mov
cli
sub
mov
loopne
dec
and
adc
mov
pusha
and
pusha
cmpsb
pusha
adcb
orb
push
inc
xchg
outsl
mov
xchg
jbe
jno
pop
jg
xor
mov
and
lahf
add
add
push
rclb
or
mov
mov
mov
adc
loopne
inc
and
inc
mov
and
popf
adc
mov
mov
in
push
add
addb
mov
xchg
loop
push
loopne
add
cmp
mov
push
int3
and
aaa
aad
jge
aad
mov
xor
inc
imul
loopne
jl
add
dec
xor
push
mov
fisubs
push
add
int3
mov
sub
loopne
pusha
shlb
lret
pusha
add
mov
mov
aaa
mov
xchg
icebp
ds
daa
das
xchg
sbb
repz
push
rolb
fsubp
pushf
pop
cmp
mov
pop
add
scas
loopne
mov
jmp
cwtl
fdivs
and
mov
fisttpll
inc
scas
add
stos
das
or
pusha
mov
cli
lock
in
stc
dec
andb
arpl
mov
scas
fstp
inc
pop
lods
pusha
loopne
cmpsl
lcall
add
add
shlb
cmp
and
test
sbb
jnp
loopne
shlb
addb
loop
xor
inc
sbb
xchg
pop
ja
pusha
loopne
leave
daa
test
hlt
hlt
xor
xchg
and
mov
or
cmp
jle
fs
fisubrl
movb
or
loopne
add
js
addb
pop
imul
add
and
xchg
sub
jp
aad
pusha
pusha
jg
es
loopne
lret
fsts
sti
and
mov
loope
xor
push
jg
out
mov
addb
outsb
dec
iret
jl
pop
or
movsb
pusha
add
dec
out
ret
gs
lret
out
out
test
push
andb
sub
addb
fchs
mov
or
stos
loopne
int
cwtl
pop
shll
jecxz
lcall
mov
mov
mov
add
dec
dec
in
pop
shlb
and
loopne
rol
and
dec
fimull
shlb
xor
push
mov
and
push
inc
xor
call
sbb
xchg
cmp
xchg
add
in
jbe
test
loopne
repz
pusha
pusha
pop
cltd
jg
out
jb
jg
into
fxam
popf
push
out
ficoms
or
add
in
scas
inc
rcrb
mov
xchg
pop
sti
scas
imul
fcomps
fbstp
jge
xchg
push
and
push
andb
test
add
adcb
aam
sbb
shlb
mov
add
or
inc
cmc
cmp
repz
mov
test
loopne
pop
je
mov
loopne
pusha
and
sub
pusha
add
sub
cmpb
jmp
rcrb
fsincos
mov
jno
dec
cwtl
mov
sub
mov
adc
rolb
sbb
jmp
inc
testl
push
and
std
jle
popf
bndldx
jg
das
jo
cmc
sub
addb
push
mov
lret
and
scas
mov
int
popa
pop
lcall
cmp
call
add
push
sti
stos
loopne
and
rolb
subl
mov
inc
loopne
lret
and
mov
mov
into
fsubs
std
xor
jo
addb
popf
out
test
mov
inc
lret
mov
ss
aad
jb
loopne
adc
pop
push
int3
xchg
fistpl
add
icebp
in
xor
push
xor
jbe
bound
cmpsl
jp
jecxz
sbb
int
jno
adc
dec
xor
pop
mov
mov
loop
rolb
pop
cmp
mov
mov
mov
pop
icebp
cmp
push
push
rorl
leave
lahf
leave
pop
push
popl
pop
stc
int3
ljmp
and
cmp
inc
shl
ss
sub
shlb
xor
loopne
mov
jecxz
adc
sbb
das
lods
and
das
aaa
imul
lret
dec
jge
lods
mov
lds
inc
inc
jbe
outsl
jbe
insb
negl
jb,pt
and
pop
jnp
sahf
stos
shll
xchg
imul
ja
shrl
ret
mov
xchg
jl
addb
add
inc
cmpsl
dec
xchg
or
xchg
or
xchg
mov
and
out
sub
jl
and
das
sbb
xchg
out
sub
add
xor
mov
xchg
xchg
dec
stc
lret
out
sbb
subl
movsl
dec
sbb
pop
jae
mov
mov
fs
add
loopne
adc
xchg
mov
dec
cltd
loop
and
xorb
int
sti
pushf
sbb
adc
je
push
inc
lret
pusha
add
loopne
sbbl
lcall
int3
jmp
shlb
in
xchg
and
cmp
addb
dec
imul
mov
add
in
nop
cltd
xchg
mov
and
xor
or
subb
call
sbb
mov
sti
xchg
int3
mov
fsubs
xchg
mov
mov
sti
jbe
ret
cld
test
add
jmp
inc
cmc
push
jge
inc
inc
and
inc
pop
in
enter
mov
insb
jl
sbb
mov
jmp
inc
movsl
dec
xchg
xchg
and
pusha
mov
jae
and
add
mov
fcoms
sub
and
stos
loopne
in
testl
pushf
cmp
loopne
add
and
add
rcrb
loopne
or
inc
mov
test
mov
notl
pusha
and
push
mov
and
mov
shrl
dec
hlt
jmp
adc
lcall
lahf
push
loopne
sub
sti
mov
and
jmp
mov
adcb
out
es
fwait
rclb
mov
pop
nop
or
scas
loopne
out
or
rol
push
cs
movsb
inc
add
loop
inc
stos
and
lcall
popf
and
and
xchg
xadd
aas
xlat
adc
out
add
inc
add
pusha
nop
ds
mul
imul
mov
adc
xlat
pop
inc
fdivl
sbb
push
in
aad
jb
xor
pop
ret
jp
sbb
sahf
push
pop
lods
lcall
fcmove
cltd
xor
and
icebp
aam
xor
loopne
mov
mov
fs
sbbl
sbb
fsubl
stc
sub
add
cs
addb
je
pop
adc
scas
add
xchg
adc
mov
out
icebp
stos
loopne
insl
aam
inc
and
xchg
add
loopne
sbb
aas
inc
cmpl
lahf
lea
mov
ret
fsubs
xor
pop
stos
insl
inc
xor
jbe
inc
mulb
in
jnp
imul
divb
mov
aam
loopne
sub
rcl
or
shrb
and
xchg
inc
test
inc
pop
xchg
nop
mov
cmpsb
mov
push
mov
mov
pop
pop
xchg
jg
pushf
push
inc
nop
dec
push
add
je
or
inc
jp
inc
data16
ljmp
cmp
and
jl
icebp
pop
xchg
and
test
mov
or
in
aaa
push
cmp
jae
and
pop
loop
xor
or
cmp
sub
mov
sub
push
xor
loop
loope
mov
rorb
sbb
jg
and
lahf
push
push
or
and
in
and
jbe
out
mov
push
jbe
cmp
pusha
mov
aaa
in
sbb
or
sub
loopne
hlt
ljmp
idivb
inc
add
jne
inc
mov
in
mov
sahf
push
std
test
bound
and
dec
and
xorb
pusha
sbb
cmp
xor
loopne
pushw
mov
loopne
mov
inc
fdivl
sub
or
add
das
push
and
cwtl
ret
cmc
insl
mov
add
jbe
imul
negb
es
repnz
mov
rolb
jg
or
add
inc
fstpl
add
movsb
and
mov
add
jo
mov
test
aas
cltd
mov
insb
addl
jae
icebp
push
and
or
pusha
inc
stos
shrb
pusha
rclb
pop
and
fisttpl
mov
repnz
loopne
jb
jbe
sub
dec
fs
fistpll
and
mov
adc
sbb
inc
mov
add
cs
pusha
shll
fcoml
jmp
push
mov
jb
push
fldlg2
lock
fldcw
js
fisubs
in
bound
icebp
lds
shlb
repz
jae
jo
add
cmc
xchg
std
mov
cmp
fisubrl
test
mov
imul
add
popf
inc
stc
mov
pusha
and
sbb
mov
jno
ret
pop
jae
cmp
ss
fisubs
xor
xor
mov
inc
lahf
leave
cmpsl
data16
scas
add
int
notl
pusha
rorb
sub
subb
mov
pusha
sub
cmp
mov
leave
and
mov
sbb
inc
mov
pusha
shlb
and
enter
sub
outsb
outsl
and
add
xor
call
pusha
loopne
push
mov
ror
adc
and
pusha
shlb
mov
push
cltd
loop
inc
ljmp
dec
mov
inc
das
pop
jo
inc
and
fs
jge
add
and
stos
clc
mov
inc
imul
or
xchg
lcall
dec
int
sub
mov
inc
and
sbb
inc
lods
addb
and
or
pusha
mov
aaa
das
or
mov
mov
testl
inc
mov
bound
pop
lea
sbb
pusha
shlb
jle
add
jb
es
ja
jp
pusha
add
adc
mov
pop
mov
int
xchg
sbb
lea
sti
sub
pusha
and
mov
addb
andb
jbe
pusha
mov
ret
push
fs
or
subb
mov
test
mov
loopne
movsl
aas
pop
and
sbb
lahf
sti
repnz
sbb
jno
pop
lods
add
stc
jbe
pop
or
int3
cmp
jno
sti
mov
xchg
repz
add
insl
sub
pusha
push
push
inc
popa
inc
cmpsb
addb
sbb
pop
xlat
test
add
test
mov
mov
fistps
add
pusha
daa
pop
lahf
lods
pusha
sbbb
sbb
add
daa
mov
inc
imul
mov
push
nop
nop
push
int
xchg
andl
rorb
loopne
loopne
xchg
jne
pusha
and
or
inc
pusha
stos
push
push
test
shlb
pop
lcall
inc
in
ljmp
movsl
add
ret
shrb
mov
pop
out
aaa
jmp
aad
out
xchg
inc
repnz
inc
call
dec
sub
aam
and
sbb
cmpsb
add
add
mov
add
inc
push
inc
add
js
push
and
push
inc
insl
mov
iret
andb
pop
cmpsl
mov
mov
rcrb
movsb
addb
and
rolb
loopne
push
cmp
jmp
dec
sub
rcrb
add
enter
adc
leave
pop
sbb
fisttpll
sbb
add
and
xchg
adc
push
insl
mov
addb
cmp
add
pusha
xchg
ss
pusha
mov
test
sarl
rolb
mov
push
dec
insl
lods
shlb
into
xor
inc
push
mov
cmp
mov
pusha
add
mov
pop
in
cmp
jns
scas
rolb
and
mov
sarl
ljmp
addr16
sub
and
mov
loopne
pop
dec
jmp
stos
jae
je
mov
sbb
adc
daa
add
mov
push
or
gs
psubsb
addb
in
sub
mov
ret
xchg
inc
das
xchg
sub
inc
add
inc
ja
pop
fwait
stos
pusha
inc
rcrb
in
popf
pop
add
add
mov
sub
inc
loopne
sub
xor
aad
fstps
and
mov
cmc
fwait
daa
push
movsl
ss
mov
cmc
cmp
xchg
xchg
inc
lret
lds
jo
and
xchg
add
fidivl
mov
mov
xchg
and
jno
lea
pop
xorl
dec
clc
ror
pushl
rcll
insb
icebp
fadds
in
pop
lods
adc
mov
addb
xor
mov
pusha
loopne
out
and
mov
add
jae
mov
add
andb
imul
sub
mov
sarb
popf
in
lcall
mov
xor
jl
dec
repnz
inc
sub
shl
pusha
loopne
pusha
adc
xchg
cmp
adc
in
andb
test
hlt
bound
bound
stos
shlb
dec
adc
mov
inc
repz
nop
mov
adc
pop
cmpsl
loop
in
rclb
and
xchg
sahf
and
aas
mov
shlb
ds
mov
and
push
push
lret
mov
pop
jb
push
scas
add
loopne
mov
pusha
dec
test
and
jno
jp
inc
add
and
iret
aaa
inc
sub
pusha
jp
ret
notl
in
jp
cli
bound
ds
scas
pop
insb
cltd
cmp
and
or
inc
sub
pop
stos
les
sub
add
cmp
push
xchg
sub
and
push
xchg
mov
jne
and
sbb
push
shrb
shlb
in
push
sbb
mov
add
loopne
loop
add
andb
std
add
addb
mov
push
pop
xchg
outsl
and
inc
in
pusha
mov
jmp
fnstenv
dec
xchg
mov
fisubl
je
in
aad
outsl
mov
or
punpckhbw
lahf
imul
add
jnp
push
cmc
and
and
shl
test
rolb
scas
xchg
test
push
arpl
mov
das
adc
cmp
xchg
shll
xchg
mov
push
andl
pusha
into
xchg
sbb
data16
rorb
and
xor
lods
in
dec
inc
mov
add
int
add
gs
loopne
cmp
mov
sbb
cmp
and
lahf
addb
or
mov
push
mov
sti
imul
cmpsl
test
pop
imul
xlat
cmpsb
and
addb
xchg
aaa
and
cmpsl
adc
pusha
rol
xor
rolb
lret
push
mov
jnp
mov
pushf
leave
cli
testl
and
adc
daa
std
inc
dec
inc
mov
pop
fwait
lods
rolb
xchg
loopne
push
das
xor
cmp
mulb
andb
sub
and
xchg
dec
fsubl
sbb
mov
cmc
mov
and
push
imul
mov
mov
pusha
pusha
iret
jmp
loopne
cmpsb
add
lods
loopne
idivl
jnp
out
arpl
je,pt
dec
imul
and
or
push
cmp
dec
xlat
push
cmp
mov
pop
js
adc
mov
repnz
mov
push
ret
adc
push
add
shlb
mov
mov
or
loopne
je
test
lahf
mov
shll
fstpl
pusha
xchg
lret
or
pop
jl
in
push
js
sub
int3
pop
or
int3
sbb
fwait
das
mov
push
pop
inc
loop
xchg
xor
mov
jg
and
addb
mov
loopne
and
shlb
add
mov
xchg
mov
imul
daa
jge
popf
aad
jg
xor
loope
or
icebp
lods
mov
xchg
ja
andb
stc
mov
call
xor
stos
mov
adc
rcrb
stos
lcall
andb
xlat
lcall
call
push
in
popl
rcrb
mov
or
xchg
mov
fs
sbb
xor
mov
adc
mov
or
call
andb
shlb
xor
shrb
inc
mov
dec
add
inc
insb
or
add
sub
pusha
lods
pusha
mov
cmp
out
testl
addr16
les
shlb
cli
cmpsl
mov
inc
xchg
add
shl
test
shl
fadds
jo
out
fstpl
lods
shlb
push
pusha
xchg
mov
repnz
icebp
xor
push
mov
inc
inc
rcll
mov
subl
jge
movl
add
and
aaa
dec
ds
or
repz
js
pcmpgtd
mov
addb
mov
adcl
and
stos
inc
inc
inc
out
pop
pop
repnz
std
pop
pop
rclb
sti
cld
call
incb
loopne
in
sahf
jnp
cwtl
jmp
jne
mov
add
test
addr16
inc
add
xchg
mov
sub
enter
pop
outsb
inc
movsb
rol
cmp
int3
out
dec
sti
adc
pusha
out
push
cmp
mov
stos
lds
outsb
outsl
jl
shlb
xor
movsb
shlb
cmpl
popf
js
lock
push
and
sub
push
loopne,pn
inc
popf
mov
jo
addr16
mov
pusha
mov
and
add
pop
cmp
sub
add
pusha
aas
jb
and
inc
sti
fdivs
sub
push
mov
jno
pusha
inc
xor
out
ja
pushf
add
mov
inc
inc
push
mov
add
xchg
jne
test
shrb
inc
sub
loopne
sbb
mov
cmp
mov
in
cmpsl
lods
addb
xchg
roll
shlb
in
lret
ljmp
fnstsw
cltd
test
fs
roll
gs
fucompp
jno
pusha
xlat
adc
cmp
ret
loope
cmpsl
stc
insb
icebp
mov
and
add
scas
andb
lret
mov
cmp
adc
js
lret
jnp
pusha
shl
add
lods
movsl
mov
xchg
pop
pop
inc
mov
and
iret
repz
xor
addb
jmp
mov
rorl
and
in
and
rcl
jg
rcrl
rol
sub
rclb
imul
inc
adc
adc
sbb
pop
aam
shlb
xchg
push
pop
mov
cli
pushf
jnp
fsubrl
adc
xchg
addb
cmp
shlb
jle
cld
adc
and
sbb
test
jno
filds
clc
je
mov
mov
addr16
sbb
call
xchg
xchg
mov
mov
mov
mov
jl
pusha
loopne
mov
sub
mov
inc
loope
out
mov
testb
mov
or
sub
loopne
mov
or
add
pop
orl
fsqrt
bound
gs
inc
shlb
inc
xchg
in
fldenv
imul
fnstenv
and
xchg
mov
loopne
or
pushw
add
sub
jmp
ljmp
call
push
loop
fsts
push
sahf
mov
fsubrs
push
push
xchg
int3
jae
shlb
and
movsb
inc
shlb
ficoml
pop
push
inc
test
pusha
mov
js
cwtl
sub
mov
and
push
jp
mov
cmc
dec
das
mov
dec
pop
lods
inc
inc
notl
testb
push
inc
mov
mov
sub
mov
inc
push
jmp
in
jns
xor
adc
shl
push
jb
or
shlb
cmp
add
divl
scas
add
lret
xchg
and
or
pusha
jae
setl
adc
pop
push
sub
inc
out
in
aam
inc
les
lods
loopne
negb
adc
out
sbb
aaa
dec
mov
and
adc
andb
daa
in
movsl
stc
or
data16
pusha
mov
popf
mov
jnp
mov
imul
loopne
cmp
stos
pusha
and
clc
les
pusha
mov
clc
cmpsb
addb
out
jecxz
iret
dec
mov
mov
sbb
mov
inc
push
jne
jp
or
sarl
xor
and
inc
sub
sub
bound
lret
xchg
mov
mov
pop
jbe
and
or
cmpsl
dec
xchg
push
xor
aas
push
imul
mov
rclb
aas
lret
test
sbb
mov
cld
insl
dec
cmp
call
dec
arpl
mov
xlat
lcall
addb
sub
enter
or
shl
fcomps
or
stc
add
add
xor
rcr
push
test
out
sbb
inc
xchg
js
sti
mov
js
sti
ss
gs
repz
cmp
pusha
pusha
add
mov
andb
sub
pop
das
scas
fmull
ds
add
enter
inc
adcb
das
popl
fldcw
loopne
mov
jo
inc
loopne
enter
pop
push
sub
loopne
faddp
ljmp
cmpsb
mov
adc
lods
mov
sub
mov
mov
mov
movsb
loopne
xor
ret
shrl
or
add
mov
dec
sbb
js
imul
mov
inc
mov
aam
and
loopne
sub
rorb
add
mov
add
adc
dec
sub
shl
rolb
or
fwait
movsb
mov
lcall
sahf
pop
iret
out
shll
pop
scas
shlb
mov
lea
sarl
pusha
rolb
loope
rcrl
test
inc
nop
popf
fnsave
add
dec
ret
sub
loopne
leave
cli
add
inc
mov
mov
cmp
inc
mov
mov
rclb
xchg
sar
push
pop
and
mov
dec
jl
ljmp
shll
inc
inc
decb
mov
mov
mov
push
mov
arpl
in
jae
sub
xchg
in
loope
loopne
add
andb
xchg
sbb
pop
xor
pop
test
loopne
jge
push
xor
xor
dec
add
mov
jae
shrl
es
lock
or
fsubrs
add
sbb
inc
icebp
cmpsl
pop
cmp
ss
push
sbb
lcall
movsb
rolb
xlat
mov
adc
pusha
cltd
mov
jmp
int3
outsb
loop
xchg
in
sbb
adc
sub
addb
rcr
or
mov
and
adc
or
sbb
dec
push
cmp
loope
mov
loopne
push
and
aad
cmp
cmp
add
add
pusha
addb
out
cmp
test
pusha
pop
cmp
push
and
dec
inc
in
jecxz
mov
jp
shlb
pop
dec
stos
andb
jno
xchg
sbb
fmull
insb
in
repz
loopne
out
pop
movsl
xchg
shl
dec
mov
notl
jl
cmc
jmp
xor
arpl
leave
jo
outsb
dec
gs
scas
add
aam
xchg
mov
loope
in
jle
cmp
movsl
jle
icebp
outsb
lock
sbb
sbb
and
lret
inc
mov
leave
cmp
aam
mov
xor
and
dec
in
jne
frstor
shl
push
lcall
call
orl
cltd
stos
nop
jbe
cmp
sub
mov
mov
push
jo
adc
ficoml
aam
sub
sarb
adc
jne
in
fdivr
arpl
or
in
jp
shll
inc
loopne
pop
cli
sbb
mov
pop
jns
loopne
and
mov
and
push
pop
negb
jae
pop
sub
sbbb
jbe
mov
pop
xchg
mov
sbb
mov
stc
mov
jns
jo
mov
loopne
scas
and
fimull
mov
and
nop
std
xchg
test
mov
cmp
mov
inc
loope
jae
lret
test
pusha
in
pop
pop
iret
or
add
mov
popa
scas
inc
addb
aas
out
loopne
lock
rolb
addb
pop
adc
lock
repz
or
rolb
xchg
inc
sbb
loopne
and
mov
adc
lret
jnp
sarl
aas
fnstcw
mov
movl
jl
pop
xchg
sub
orb
xchg
adc
inc
sbbb
stos
loopne
cmpl
scas
loopne
inc
xchg
and
mov
mov
add
andb
and
jne
jecxz
sub
inc
repz
push
dec
stos
dec
sahf
inc
or
mov
mov
outsl
nop
into
xorl
inc
pop
jp
inc
loopne
jnp
jl
loopne
aaa
ret
jge
or
xchg
add
into
xor
xor
and
ret
lret
fdivl
fstl
pop
out
outsb
sbbl
cmp
fmuls
inc
pusha
ss
lcall
loopne
mov
rolb
loopne
in
test
loopne
add
add
repz
gs
call
pop
jnp
mov
int
cmp
xchg
stc
xorl
inc
jno
addb
dec
or
and
adc
scas
hlt
push
and
shlb
add
mov
inc
mov
adc
jmp
insb
lods
pop
out
mov
aam
fdivp
push
incb
pusha
sbbb
es
rorb
bound
cmp
sbb
mov
fadds
lea
push
cmpsb
rolb
ret
fmul
in
nop
jae
hlt
xchg
int
outsl
ror
icebp
xor
xor
mov
jnp
ret
dec
repz
lahf
xchg
int
es
decb
and
ja
inc
jp
sub
insl
jmp
and
add
pusha
or
and
mov
ficoms
loopne
add
and
xchg
scas
test
xchg
dec
dec
fisttps
out
xor
jnp
pusha
in
mov
jae
enter
loop
shlb
cwtl
push
dec
sbb
fsubrp
adc
cmpsl
test
idiv
fsts
adc
and
jno
fadd
aad
xchg
jb
pusha
pusha
das
rorl
repz
ficompl
add
je
sub
out
divl
mov
fsts
cmp
stos
and
mov
ja
fcomi
mov
scas
loopne
je
mov
ret
popa
or
inc
sbb
popf
adc
jo
cmp
xor
lds
mov
mov
push
inc
add
pusha
ret
int
loopne
add
sbbb
push
fwait
or
shrb
add
mov
rorb
cmp
add
and
lret
xor
push
jae
es
in
add
loopne
xchg
cmp
or
popl
loopne
mov
jbe
xlat
pop
imul
push
sub
loopne
test
mov
addb
inc
xchg
sbb
btc
das
js
clc
call
jmp
aad
in
fucomi
ljmp
jmp
pop
movsb
shl
out
xor
in
hlt
out
pop
in
xchg
in
shl
roll
es
insl
ds
inc
mov
cmp
movsl
xchg
rcrl
fistpl
loopne
or
mov
adc
ret
cs
add
pusha
xchg
cld
xchg
and
mov
adc
lret
pop
xor
out
jecxz
push
xor
rcll
push
mov
std
scas
add
and
mov
rclb
inc
mov
rolb
andb
fs
cmp
mov
jl
push
aad
push
and
fimuls
mov
push
loopne
cmp
int
loopne
pop
aad
rolb
sbb
xlat
pop
push
fimuls
xlat
jbe
xchg
into
push
out
jnp
adc
or
fmul
mov
xchg
and
and
push
rcrb
in
sti
pop
jg
xor
test
adcb
pop
loope
cmpsl
mov
js
pop
and
loope
lret
xchg
pusha
jb
adc
dec
jecxz
rol
mov
add
and
mov
xlat
repz
lahf
pop
push
cwtl
movsb
inc
add
out
cwtl
out
fdivr
bound
fs
inc
inc
pop
sub
adc
mov
loope
int3
fcoml
inc
cmpsb
inc
mov
push
test
mov
sub
test
imul
mov
pop
xor
loopne
xor
inc
fwait
mov
add
mov
pusha
shlb
ljmp
inc
nop
loopne,pn
dec
sarb
shlb
and
add
in
dec
push
stos
push
out
ljmp
fistps
push
sub
rcrb
lock
sub
mov
and
loopne
push
cmpsl
icebp
faddp
inc
mov
add
sbb
or
shl
push
cwtl
push
jnp
cmp
pop
and
lods
pop
fwait
push
push
rolb
add
and
inc
loopne
pop
outsl
mov
andb
and
and
and
cmp
sub
jnp
xchg
lods
inc
pusha
pop
shlb
orl
dec
xchg
cmp
rol
sub
mov
or
sbb
and
pusha
je
test
adcb
mov
sbb
lea
push
push
push
addb
push
incb
push
or
mov
bound
and
mov
mov
shrb
or
cwtl
and
addb
and
loop
in
scas
add
add
mov
pusha
cmpb
pop
add
push
into
pusha
xchg
imul
xor
mov
fistpll
jg
movsl
loope
mov
pop
stos
sahf
out
sbb
sahf
shl
ljmp
push
andb
cmp
inc
addr16
xchg
jns
lods
addb
imul
in
out
hlt
xor
or
clc
add
mov
inc
sub
add
lds
test
cld
sub
mov
add
jb
dec
pop
push
andl
ja
je
add
inc
lods
sub
pusha
pop
pop
mov
cwtl
ss
add
sbb
or
add
sbb
pop
cmpl
dec
mov
pusha
mov
cltd
jge
cwtl
loop
mov
test
shl
dec
fwait
mov
mov
add
or
mov
mov
addb
push
sub
jbe
test
xchg
out
aas
xchg
ret
adc
loop
sti
out
xchg
mov
fdiv
xor
sub
xorb
jl
andb
xchg
dec
cmpsb
mov
adc
shlb
xchg
xor
popl
jp
push
add
or
shlb
pop
hlt
cmc
test
inc
mov
rol
shlb
repnz
lcall
ret
sub
arpl
mov
pushf
lock
stos
loopne
sti
out
sarl
xor
divb
andb
stc
movsl
or
mov
pop
jnp
int
dec
jno
cmp
push
and
imul
add
push
dec
repnz
adc
addb
sbb
sahf
xor
and
add
lahf
iret
aaa
push
xlat
shlb
in
inc
sub
loopne
mov
call
xchg
andb
sbb
stos
loopne
or
add
inc
mov
std
xor
sub
enter
daa
inc
mov
and
loopne
fwait
push
jg
inc
mov
inc
hlt
inc
mov
rolb
movsb
loopne
mov
sti
and
xchg
pop
movsb
mov
push
inc
jge
fs
out
sbb
ds
frstor
inc
loopne
fidivs
pusha
pusha
movsb
and
sbb
sub
cwtl
cmpsl
clc
in
mov
pusha
and
or
fcoms
jge
and
loopne
mov
mov
xlat
cmpsb
mov
rol
jmp
push
sbb
pop
xchg
xchg
push
add
and
sub
sbb
dec
jg
mov
ja
mov
loopne
cmpsb
shlb
in
mov
out
sub
orb
in
ds
mov
loopne
shl
jecxz
inc
push
adc
pusha
add
add
jecxz
xor
or
data16
loopne
cmp
sub
addr16
adc
jecxz
fdivl
sub
leave
out
insb
cmpsl
loope
and
scas
pusha
mov
push
push
adc
or
pusha
das
lcall
adc
outsl
shlb
cltd
pushf
pop
test
dec
cmp
and
in
js
push
out
or
inc
out
les
mov
pop
push
scas
adc
lcall
add
mov
sarb
jne
pop
in
mov
pop
lods
and
xor
xchg
sbb
inc
cmc
lds
mul
movsb
add
push
sub
lcall
lods
inc
loopne
dec
or
xor
fs
push
in
sub
cmpsl
out
aad
int3
mov
ror
adc
test
pop
addb
dec
pop
pop
mov
loopne
lea
inc
add
mov
int3
cli
and
xorb
pusha
and
mov
add
insl
cmpsl
pop
lret
movsb
mov
enter
popf
and
pop
addr16
xchg
cmp
mov
lret
jp
int
clc
int3
insb
jns
fucom
mov
mov
mov
inc
sbb
add
out
js
sub
loopne
pop
cs
loopne
sub
mov
cld
cmp
in
sbb
jae
in
leave
gs
push
div
mov
outsb
adc
pop
mov
rcll
cmp
scas
addb
cld
jecxz
lock
add
dec
fcompl
adc
addl
dec
jmp
pop
lcall
sarl
pusha
and
and
and
lcall
mov
loopne
pusha
and
or
orb
stos
jge
iret
xchg
mov
push
nop
xlat
lock
inc
jns
mov
shlb
pusha
scas
lea
push
rolb
mov
jbe
shl
ljmp
out
push
pushf
rol
sub
movsl
add
loopne
mov
enter
addb
test
dec
inc
or
andb
out
mov
je
rcrb
call
mov
daa
push
mov
rcrl
in
xor
pusha
into
shlb
fcoml
andb
lods
into
aam
dec
or
jo
dec
cmp
lds
and
or
add
ret
mov
pusha
ja
sti
and
insl
pop
shlb
iret
dec
std
popf
mov
dec
daa
out
aad
jge
cmp
pusha
mov
mov
icebp
jl
pop
lahf
addl
mov
mov
int
aaa
push
addb
inc
mov
mov
loopne
test
pusha
xchg
adc
adc
cmp
add
mov
mov
jns
push
push
in
and
in
sti
mov
cmpsl
jecxz
mov
push
dec
inc
daa
out
xchg
and
pop
xor
out
inc
fistpl
aas
or
and
xor
sub
mov
cmpb
sahf
addb
adc
and
and
fdivrl
ss
enter
pusha
and
sub
test
mov
mov
rol
push
inc
push
mov
loopne
sub
pop
lea
leave
roll
push
push
aam
jbe
xor
js
ljmp
mov
and
sbb
xor
fcoml
dec
aas
fnsave
add
inc
sub
ja
mov
sub
jnp
fsubr
cmp
jecxz
cmc
push
mov
mov
dec
popa
xchg
cmpsl
xchg
mov
fmuls
jle
out
sub
mov
pusha
inc
std
enter
je
out
inc
push
shlb
sbb
mov
jmp
out
xlat
inc
inc
jae
fmuls
and
inc
adc
cltd
inc
ljmp
aam
aaa
ret
jge
add
ficoms
pop
das
out
dec
jmp
xchg
add
add
sub
lret
cltd
cmp
pop
repz
mov
stc
outsl
shlb
fbld
or
push
rolb
dec
push
negb
add
mov
outsb
sub
mov
jnp
inc
sar
je
inc
jle
xchg
cltd
fldt
shlb
loopne
cmpl
loopne
mov
fs
int
jg
cltd
daa
out
jno
dec
inc
pop
pop
into
xchg
aam
pop
aad
or
jle
stc
loope
dec
out
add
add
shlb
inc
and
and
mov
sub
xor
ja
shlb
scas
repnz
aam
lds
adcb
imul
or
add
push
mov
shl
repz
mov
nop
out
cbtw
js
add
mov
pusha
inc
mov
sub
and
movsl
fisubs
inc
sarb
ja
andb
leave
xchg
lret
mov
fisubs
sub
fcompp
sub
and
xchg
mov
and
mov
adc
inc
add
mov
push
pop
push
lretw
in
add
push
or
adc
loopne
or
adc
int3
push
push
andb
xchg
adc
cmp
push
pusha
dec
cmp
xchg
pop
inc
xor
ljmp
aas
mov
inc
stos
mov
loopne
shl
stc
pop
sub
cwtl
jne
movsl
xchg
dec
fstps
fldenv
inc
cmpb
cld
mov
adc
mov
dec
stc
push
leave
inc
mov
cmpsl
xchg
ss
sub
pop
xchg
ss
int3
xchg
ss
mov
aas
or
in
and
pusha
shrb
jns
inc
bound
repnz
rolb
enter
inc
mov
shlb
sbb
mov
aad
enter
loopne
shlb
lahf
or
sbb
mov
push
addb
push
jno
mov
xor
inc
jne
jae
xor
mov
fwait
push
mov
loopne
arpl
or
xor
loopne
xlat
add
pushw
andb
add
adc
andb
addr16
push
cmp
inc
push
add
repnz
pusha
inc
xor
xchg
dec
inc
and
loopne
lahf
fiaddl
aaa
xor
mov
loope
jo
divb
xor
lds
lock
cltd
or
and
rolb
ljmp
xchg
pushf
loopne
call
add
fildll
sub
mov
loopne
ficoms
loopne
inc
cmp
jmp
fdivr
out
pusha
and
xor
mov
pusha
sbbb
mov
lock
pop
decl
dec
jno
pop
jnp
mov
and
dec
and
add
adc
mov
add
pop
inc
push
in
xchg
pusha
push
mov
ret
incb
mov
dec
xor
loop
sub
rorb
cmp
imul
push
int3
inc
mov
fisubl
cli
or
in
int
inc
stos
jmp
out
js
aas
mov
xor
xchg
jnp
cmpsl
lcall
push
mov
and
sub
andb
and
jno
mov
mov
xchg
xchg
mov
sbb
shl
dec
fwait
cmpsb
and
mov
pusha
add
fimuls
xchg
jns
dec
les
pop
stos
mov
lds
dec
push
and
add
mov
andb
dec
cmpsb
rolb
jmp
idiv
cs
sub
cli
adc
aaa
inc
push
addb
pusha
mov
jecxz
divl
mov
push
mov
in
imul
loope
mov
in
jle
in
popf
xchg
and
dec
and
addr16
leave
adc
push
pop
sub
in
xchg
jge
ret
mov
bound
rol
outsl
xchg
mov
add
jb
dec
or
inc
or
dec
mov
add
lock
jge
lea
out
push
das
pop
nop
mov
shr
sub
push
cltd
mov
aaa
shrl
addb
pusha
and
jecxz
daa
es
rclb
push
and
inc
inc
rcll
mov
pusha
xor
xchg
gs
lret
outsl
in
stos
pop
add
in
ds
and
xor
or
and
addb
repz
daa
inc
mov
iret
add
bound
xchg
xchg
mov
pop
inc
xor
inc
jecxz
sub
loopne
sbb
dec
pop
jnp
xchg
add
repz
loopne
insl
xchg
mov
jge
fnstenv
xchg
and
add
and
ja
jo
sub
sbb
ror
push
sub
pop
mov
add
cmc
jmp
out
pop
xchg
icebp
pop
insb
scas
inc
pusha
in
into
sub
orb
ljmp
cltd
test
mov
inc
mov
add
sbb
cli
pushf
stos
test
pusha
mov
and
mov
adc
xchg
bound
icebp
and
pop
add
loopne
lods
and
add
rclb
aam
adc
clc
out
or
pusha
inc
mov
test
shlb
pusha
es
xchg
mov
std
dec
cld
push
inc
rclb
cli
ret
sbb
sub
or
add
jl
push
test
pusha
scas
rolb
mov
adc
insl
mov
dec
int3
loop
sub
pushaw
sbb
xor
inc
loopne
sti
sarl
cmpsl
add
or
cmp
mov
adc
fnstcw
jo
insb
mov
pop
fxtract
push
mov
pop
mov
push
shlb
cwtl
dec
fs
lock
dec
dec
mov
or
and
nop
or
loopne
les
inc
pop
jae
and
pushf
xchg
and
andb
jmp
add
adc
andb
in
xchg
push
push
dec
mov
sti
xchg
inc
xlat
into
cmpsb
rolb
sub
xchg
dec
pop
mov
data16
ds
ljmp
pop
inc
notb
mov
aaa
mov
mov
loopne
imul
push
cmpsl
in
adc
jge
jo
dec
adc
hlt
inc
mov
and
or
pusha
mov
outsl
rcrl
js
push
rolb
mov
rorb
xor
sbb
mov
dec
roll
add
cmp
imul
leave
sub
xor
loopne
mov
pusha
rclb
pusha
and
stc
jg
inc
insb
ud2
iret
mov
stos
and
clc
and
ret
cmp
andb
inc
jle
pushf
pop
inc
sub
lret
lea
loope
and
mov
popa
xchg
pusha
mov
mov
popa
nop
jge
mov
add
into
pop
je
andb
mov
cmp
and
rcrl
addb
mov
and
fldl
rorb
pop
in
mov
push
mov
add
mov
push
in
negl
and
popa
cmp
add
clc
push
fcmovnu
mov
cmp
add
and
push
or
xor
add
mov
ja
movsb
pusha
and
cwtl
es
xor
add
dec
jge
mov
and
jle
push
fiaddl
add
imul
ret
loopne
cltd
icebp
out
or
rorl
xchg
daa
push
pop
mov
inc
mov
and
push
and
xchg
loope
test
inc
add
jle
mov
pusha
test
frstor
mov
inc
adc
decl
sarl
and
mov
push
outsb
mov
add
pushf
out
push
pusha
loopne
rolb
hlt
xchg
inc
dec
xchg
leave
jno
daa
cwtl
enter
sar
xchg
jnp
jle
and
out
out
jecxz
dec
stos
loopne
cmpsb
pusha
shlb
sbb
out
mov
cwtl
cmp
pop
adc
lods
jno
push
loopne
iret
inc
jne
cmp
xchg
in
push
out
cmpsw
mov
mov
sti
xchg
sub
cmp
mov
dec
into
aam
ds
jl
int3
pop
pop
daa
decl
mov
sbb
mov
inc
div
in
std
lret
add
xor
mov
lret
pop
xchg
ret
stc
aas
cltd
pop
imulb
push
lods
xor
xchg
shlb
sub
dec
push
xchg
aas
scas
and
or
add
shl
inc
out
shlb
imul
das
fnsave
push
pop
fs
add
jbe
jl
lret
mov
push
mov
ljmp
pusha
add
ss
mov
xchg
add
inc
int3
sbb
inc
push
mov
lea
and
lahf
sub
mov
jmp
insb
call
dec
sar
icebp
sbb
xchg
sbb
pusha
pushf
iret
mov
js
inc
cmp
inc
xchg
push
cmp
sbb
mov
icebp
jge
repnz
fs
repz
hlt
jb
dec
test
mov
jle
mov
mov
add
shll
xor
out
jp
sbb
mov
divl
push
repnz
xor
add
jne
popf
mov
cmp
das
push
add
xor
push
out
jp
and
out
sbb
loopne
pop
sbbl
loopne
dec
out
nop
mov
popf
inc
xor
adc
mov
adc
and
rolb
out
rcl
and
and
insl
out
jbe
mov
jno
pusha
pusha
adc
dec
js
inc
mov
mov
jp
jmp
sub
mov
mov
loopne
or
cli
adc
loope
cmp
sbb
dec
out
pop
and
xchg
lds
xchg
mov
shlb
rorb
andb
and
pusha
mov
and
fcompl
pop
push
stos
mov
std
imul
adc
test
add
je
mov
vmcall
jbe
xchg
pop
insl
aad
and
mov
data16
add
dec
out
mov
out
cmc
ss
rolb
inc
popa
mov
add
cli
push
repz
shl
inc
xor
loop
in
fistl
rorl
movsl
adc
fbstp
pop
sarl
pop
pop
subl
pop
or
shll
addb
shrb
xor
push
leave
and
mov
jp
adc
faddl
push
addb
and
movl
andb
add
pusha
mov
call
and
adcb
mov
rclb
inc
popf
mov
and
and
test
xchg
das
sub
andb
fimull
and
push
dec
fwait
inc
mov
pusha
popf
xchg
clc
cld
pop
mov
pop
call
pusha
pop
jae
pop
repnz
pusha
loopne
mov
pusha
add
mov
pusha
rcll
icebp
jbe
or
mov
add
fstpl
icebp
adc
mov
rcrb
cmp
popa
cs
orb
xchg
xor
dec
popa
mov
in
stos
lods
add
cmc
lret
jp
mov
mov
aaa
out
push
rolb
shl
jg
in
pop
mov
push
shrb
xchg
dec
cwtl
mov
and
movsl
inc
cmp
fwait
xlat
dec
pop
jge
add
mov
xchg
mov
push
fldenv
and
addb
xor
push
sti
popf
imulb
sahf
popa
or
cwtl
xor
nop
mov
sub
pusha
addr16
pusha
mov
and
popf
lock
loopne
and
xor
inc
ds
sub
andb
repz
nop
arpl
ss
jno
sub
ljmp
int3
mov
inc
mov
mov
inc
cmp
shlb
call
and
loopne
sti
mov
push
call
mov
push
outsb
jecxz
xchg
mov
fldenv
jecxz,pt
insb
not
dec
fs
leave
sub
pusha
out
xor
add
push
pop
dec
adc
lea
leave
loopne
leave
fidivrs
rol
sub
ret
fistps
clc
daa
rolb
mov
or
or
sbb
fdivs
data16
mov
pusha
add
daa
xchg
jle
and
add
add
cmp
lret
add
mov
pop
mov
test
rcr
scas
pusha
mov
aas
mov
add
js
pusha
pusha
out
cmp
adc
nop
cmpsb
mov
outsl
out
aam
inc
and
add
js
int
fisttpl
fidivl
shll
cld
mov
addb
mov
and
daa
insb
add
out
pop
add
and
lret
fwait
push
andb
push
aad
shlb
iret
jmp
pop
jg
push
in
cld
in
js
ja
push
sar
sub
mov
jae
std
mov
adc
ljmp
cmpsl
mov
add
or
xchg
and
xchg
rdpmc
sarl
pop
cmp
push
xchg
push
movsb
shlb
loopne
dec
enter
pop
push
outsb
aam
psrlw
and
shl
sbb
mov
push
add
inc
cmp
loopne
sbb
mov
addr16
adc
push
xchg
and
or
jne
fldl
std
nop
mov
addb
rolb
scas
mov
popl
rolb
call
lock
xor
hlt
and
and
cmp
adc
in
loope
fsubrl
ret
into
cmpsb
andb
mov
scas
test
add
mov
rolb
fdivr
xor
fistpl
pop
icebp
gs
pop
adc
icebp
hlt
push
pusha
shl
das
js
inc
sbb
adc
sbb
subl
mov
inc
inc
ret
popf
cmp
push
push
mov
push
fdivrs
mov
add
mov
into
sub
xor
dec
pop
or
ds
mov
loopne
sbb
aas
das
and
sarb
mov
or
inc
pusha
mov
loopne
jmp
add
imul
xchg
insl
jl
and
sahf
in
js
and
jg
mov
add
mov
insb
cmp
fsts
shl
loopne
adc
out
in
mov
fs
xchg
dec
mov
mov
jecxz
inc
in
dec
cld
mov
mov
movsb
and
jnp
popa
push
dec
push
dec
sub
inc
daa
inc
repnz
shlb
out
adc
hlt
push
pusha
mov
repz
mov
push
cltd
movsl
flds
xor
addr16
xor
pop
cmp
in
fstps
xorb
jns
mov
inc
adc
jge
lret
in
shlb
xor
pop
xor
pop
rol
movsl
cmp
popa
ss
mov
lods
add
bound
add
test
jmp
push
and
pusha
push
xchg
xor
fwait
xor
sub
adc
jns
mov
dec
xchg
inc
and
add
jg
test
and
or
insb
andb
daa
and
lods
and
and
adc
cmc
jbe
push
inc
and
xchg
xlat
je
enter
push
mov
das
lock
inc
subb
inc
push
addb
add
dec
test
fildl
and
rorb
das
fisubs
xchg
xchg
and
adc
call
loopne
or
test
inc
xchg
pop
out
loop
jle
add
inc
mov
and
xlat
fs
enter
or
inc
xlat
movsb
pusha
orb
movsl
filds
push
and
popa
inc
loopne
in
mov
and
jae
fildll
ds
adc
pusha
inc
sub
mov
fwait
enter
loopne
jmp
mov
repnz
and
jl
pop
mov
add
inc
push
dec
iret
jno
loope
dec
cli
fnstcw
shrl
test
rcrb
dec
mov
inc
and
bound
inc
scas
add
xor
push
daa
loopne
adc
cmp
cld
mov
lods
add
pop
xchg
outsb
aam
pusha
loopne
jb
add
mov
xor
mov
ret
jno
out
push
inc
and
xor
and
xor
add
test
fistps
push
call
dec
imul
mov
add
adc
shlb
out
inc
sarb
add
adc
loopne
dec
inc
loope
cmpsb
mov
mov
stos
adc
adc
mov
mov
xor
lahf
ss
sbb
call
loopne
mov
shlb
pop
and
sti
sub
cwtl
sub
mov
jg
push
mov
addb
add
orb
nop
mov
int
movsl
insl
cmp
add
ror
add
push
fadds
shll
imul
roll
ja
hlt
daa
mov
adc
xor
shr
lods
inc
rclb
ret
mov
imul
mov
inc
add
adc
cmpsb
pusha
inc
mov
sub
rclb
push
lcall
inc
shrb
in
inc
js
jae
rolb
sbb
loopne
sub
add
jae
inc
pusha
ror
outsb
scas
mov
out
loop
cwtl
scas
loopne
sub
loope
stc
icebp
movl
xor
dec
add
pop
cmpsb
loopne
gs
and
orb
int
and
dec
inc
insb
lds
jb
movsb
add
bound
cmp
inc
aad
cs
add
xchg
lods
andb
pusha
loopne
and
cld
mov
add
sbb
aas
push
inc
mov
add
rcrl
adc
xorb
jl
push
inc
jbe
xor
jmp
push
add
and
sub
xlat
push
sbb
jo
outsb
jno
movsl
dec
into
in
pop
sbb
repnz
jnp
push
sar
or
loopne
cwtl
fwait
or
imul
pop
scas
inc
inc
pop
jp
cmp
sbb
hlt
jmp
mov
cmp
mul
xor
aad
add
jno
ja
test
inc
rclb
mov
aad
and
and
pop
pop
roll
mov
xchg
xor
and
jg
repnz
shrl
cmp
mov
mov
repz
or
inc
outsb
les
movsb
and
fwait
iret
js
je
stc
fcompl
enter
add
lahf
adc
pop
out
jne
fmull
andb
push
int
inc
mov
and
test
rclb
loopne
fimull
sbb
fistps
stc
or
and
and
jg
push
jmp
sbb
pop
psubw
dec
xor
pop
dec
mov
lods
mov
add
cmc
xchg
outsb
icebp
or
and
lret
nop
leave
scas
sub
call
lods
mov
jo
cmp
xorb
add
push
ja
imul
xor
jmp
mov
aam
push
mov
imulb
notl
sbb
add
test
sbb
test
negl
out
test
movsb
mov
lods
pusha
add
push
push
cmpl
pop
jmp
loopne
cmp
data16
js
adc
insb
cmp
add
sar
push
push
push
addb
fsqrt
cmc
lods
cmc
mov
jmp
pop
xchg
ss
add
inc
fwait
xor
add
aam
mov
mov
and
lock
inc
fs
pusha
xor
jg
aas
xchg
lahf
outsl
sbbl
pop
xorl
loopne
cmpsb
loopne
cmp
enter
loopne
xchg
xor
or
mov
mov
imul
lds
push
xchg
xchg
and
cmpsl
insl
xor
sub
inc
mov
xchg
arpl
rcrl
inc
xchg
add
add
in
out
icebp
rcrl
rclb
and
pop
vprotb
sub
inc
sub
push
fst
mov
test
rcrb
mov
cmpsl
mov
pop
dec
loopne
shl
xchg
add
add
jge
pop
xchg
mov
mov
mov
scas
outsl
js
lock
js
mov
stos
addr16
mov
add
xor
cwtl
outsl
mov
mov
mov
xlat
cmp
loop
in
movsb
loopne
pop
cmp
mov
xchg
ds
popf
or
pusha
lret
xchg
or
pusha
jl
xchg
addb
xchg
popa
icebp
ljmp
mov
adc
sbb
scas
xor
psrlq
jnp
cmpl
clc
movsl
addr16
das
mov
test
mov
add
sbb
pusha
xchg
lahf
xchg
jnp
cltd
aam
fnstcw
inc
loopne
mov
mov
xchg
push
inc
or
lret
ds
lds
mov
stos
andb
dec
push
add
add
mov
dec
icebp
push
cmp
add
sbb
js
dec
xlat
or
pop
add
inc
xchg
cli
iret
js
sbb
outsl
add
aas
aad
dec
and
dec
jge
and
add
add
dec
pop
or
and
xchg
int
fsubrs
mov
inc
pop
std
inc
or
or
rorb
in
stc
mov
mov
push
cltd
fcmovne
mov
addr16
push
xor
pusha
sbb
dec
aas
in
addb
loopne
call
loopne
inc
ja
mov
imul
rolb
mov
add
inc
loopne
mov
adc
pushf
sarl
xor
or
inc
out
dec
repnz
mov
out
test
fwait
pop
repz
xor
ret
mov
mov
mov
inc
and
add
sub
inc
sub
addb
and
lods
mov
pusha
ljmp
test
inc
mov
into
mov
ss
mov
popf
xor
addr16
test
pusha
push
mov
jns
lea
lock
rcll
mov
gs
jle
rcl
ja
push
pusha
loopne
jno
sub
shlb
movsb
mov
loopne
cwtl
jmp
sarb
ret
imul
cli
enter
pushf
cltd
mov
add
data16
xor
or
mov
sub
adc
stos
mov
inc
jecxz
pop
je
leave
in
cmp
push
xchg
in
pop
scas
pop
movsb
pusha
and
xor
add
test
push
jge
adc
nop
and
loopne
and
mov
push
repz
xchg
enter
add
out
test
mov
test
jnp
add
pusha
xchg
shrb
pusha
xchg
cld
jl
out
mov
push
inc
mov
inc
pop
adc
sub
aad
inc
xor
cld
testb
pop
jne
rcrb
and
mov
or
sub
add
leave
outsl
pop
cmp
pop
faddl
mov
add
pop
popf
inc
xor
mov
ret
xchg
sti
xchg
mov
fadd
add
rolb
dec
pop
gs
mov
mov
loopne
pop
xchg
sub
inc
add
addb
and
rcll
cwtl
add
cmpb
int3
jle
sbb
dec
cmpsl
pushf
lods
addb
pusha
pusha
mov
mov
mov
loop
pusha
and
scas
addb
addb
and
mov
cmp
push
xlat
shl
pop
inc
mov
fdivrp
ss
mov
pushf
pop
dec
insl
addr16
xor
mov
daa
test
sub
and
shll
std
cmc
fcomps
cltd
pop
jl
xchg
mov
int
jbe
loopne
lret
repnz
mov
xchg
insl
push
outsb
int3
idivb
and
adc
mov
movsl
int
adc
and
xchg
push
lods
and
in
jne
and
loopne
and
jecxz
rolb
data16
pusha
push
or
and
or
mov
sarb
xor
add
cld
imul
inc
mov
mov
mov
addr16
dec
les
mov
loopne
mov
jge
in
add
arpl
or
adcb
pop
xchg
pop
push
movsl
xchg
lret
jae
retw
loop
shrb
jge
xchg
imul
cmp
jge
inc
sub
rol
mov
push
cli
int
xor
jne
pop
clc
mov
fisubs
repnz
mov
addb
mov
aas
lret
pop
pop
shlb
cmpsb
inc
inc
cmc
cmpsb
inc
pusha
fwait
addr16
or
loopne
mov
out
dec
fldl
adc
push
and
mov
cmp
pusha
sahf
mov
stos
andb
add
mov
in
and
inc
push
je
inc
hlt
test
out
div
dec
or
into
addb
inc
daa
into
adc
and
mov
loopne
aad
hlt
shrl
gs
push
cwtl
and
mov
std
xchg
inc
sub
subb
insl
sbb
add
movsl
stos
add
shll
inc
mov
rcrb
aad
movsb
shlb
add
cmp
push
repz
add
shlb
lret
and
ss
loopne
nop
mov
add
fcoms
and
mov
loope
scas
loopne
mov
jmp
jl
and
in
shrb
mov
jo
inc
mov
or
inc
xchg
inc
cli
xchg
xchg
dec
add
aam
repnz
popa
xor
add
pop
test
pusha
and
test
xchg
aam
mov
inc
ret
xchg
dec
cli
in
mov
pop
mov
popf
xchg
pop
jg
fidivrs
xchg
inc
out
xlat
fwait
lahf
insl
mov
add
les
or
add
sti
inc
adc
mov
xor
aas
std
lea
sbb
and
ja
cmp
andb
cmpsb
add
mov
aam
dec
fisubrl
movsb
mov
push
iret
push
adc
cld
mov
addb
jo
add
lea
and
dec
jnp
mov
lret
lret
fidivrs
pop
xor
dec
dec
out
addr16
or
and
adc
in
lret
or
inc
lds
test
rcl
ljmp
hlt
int3
out
or
dec
and
loopne
lods
add
add
and
shl
sub
test
loopne
or
into
icebp
rorl
inc
or
cmp
sbb
addb
or
jnp
roll
add
lods
add
arpl
pop
ds
adc
inc
sahf
mov
lods
add
das
lahf
movb
push
hlt
lret
mov
shlb
sub
mov
loopne
popf
jo
sub
loopne
gs
sbb
mov
loopne
andb
sub
mov
mov
inc
out
ret
dec
mov
popf
sbb
adc
leave
mov
cwtl
ja
pop
fimuls
fdiv
mov
and
sub
or
fisttpll
cmp
pusha
or
xchg
mov
mov
lea
fimull
sarl
pop
aaa
and
and
shll
outsl
in
lcall
mov
push
inc
and
push
and
cltd
cwtl
montmul
cmpsb
add
cs
mov
outsl
decl
jo
fisubrs
cmp
int
addb
cmpl
ljmp
shlb
inc
mov
loopne
mov
jo
sub
rclb
sbb
sub
cltd
mov
inc
cmp
sahf
shrl
cmp
daa
xchg
sar
add
int3
dec
or
mov
shll
inc
loopne
sar
outsl
mov
and
cmp
xchg
addb
rolb
mov
add
movsl
aad
pop
xor
push
mov
loop
test
ret
sbb
mov
pop
fistl
sbb
mov
mov
sub
add
or
sarb
adc
pop
fwait
hlt
inc
mov
pusha
pusha
out
mov
push
xchg
mov
jae
in
push
in
test
cmp
jnp
andb
loopne
out
xor
xor
cli
out
xchg
add
outsl
mov
rcl
andb
scas
jbe
das
pusha
adc
mov
push
lcall
sbb
loop
mov
add
inc
add
mov
lret
xchg
cmpsl
push
sub
movsb
add
push
jno
mov
lret
inc
repz
mov
pop
add
sbbb
imul
loopne
sbbl
pop
sbb
jge
addb
addr16
inc
ljmp
and
mov
inc
sarb
inc
aad
arpl
mov
loope
inc
pop
cli
and
inc
mov
repnz
add
mov
out
jae
mov
aam
not
iret
sbb
mov
push
jecxz
mov
xorb
fnstenv
jns
hlt
pop
jle
rolb
jmp
arpl
fidivrs
lcall
jecxz
ret
mov
shrb
loopne
popf
add
leave
inc
hlt
jb
fs
test
mov
add
pop
mov
mov
pusha
clc
xchg
push
add
mov
ret
dec
dec
jbe
add
cltd
mov
mov
jo
shll
cmp
loopne
es
sbb
jne
and
xchg
fbstp
das
mov
imul
inc
add
and
sub
or
pusha
push
mov
inc
push
sbb
stos
add
and
inc
outsl
lea
fldcw
aad
mov
add
xlat
lods
mov
movsb
and
xchg
loopne
fistpl
push
push
inc
and
add
addb
adc
and
lcall
pusha
inc
add
cmp
and
repz
xchg
xchg
dec
jge
add
shlb
jp
sub
mov
jp
pop
ja
add
filds
xchg
mov
adc
in
mov
fldl
xchg
lods
cld
jbe
call
sbb
sbb
loop
jecxz
xchg
hlt
ljmp
mov
nop
lret
jl
cmpsl
jno
repnz
and
add
andb
cmp
out
shll
icebp
fidivs
jle
adc
pop
jno
aad
xchg
out
xchg
les
popf
sti
jne
sbb
addr16
mov
mov
icebp
idivl
mov
sti
roll
mov
andb
daa
fs
and
aam
jp
cld
ss
push
fwait
jge
loope
cli
inc
test
inc
push
ja
push
mov
mov
xor
or
add
aam
lahf
sbb
lea
fsubs
mov
rol
adc
sbb
push
sub
cmp
out
int
mov
adc
dec
sbb
sti
scas
inc
xchg
sbb
jno
jbe
inc
rolb
jne
ret
pusha
pushf
scas
sarb
test
inc
mov
test
shlb
rolb
ror
add
into
xchg
xor
loopne
repz
cmp
shlb
lds
sub
and
mov
pop
mov
in
xchg
pop
sbb
and
lahf
xor
hlt
sub
inc
xor
test
andb
inc
adcl
out
pop
mov
stc
loopne
pop
fsubrs
ljmp
mov
xchg
xchg
rclb
inc
int
push
add
ror
bound
and
addr16
and
movb
popa
dec
xor
sbb
pop
jg
bound
aad
frstor
inc
dec
xor
jg
xor
and
jb
and
mov
addb
movsl
dec
test
pusha
enter
pusha
and
xchg
cmp
rclb
jg
push
jmp
mov
sbb
rcll
movsl
jne
inc
add
jl
xor
out
dec
dec
packssdw
inc
inc
cld
rol
outsb
lahf
outsl
sub
add
cmp
and
std
enter
xor
push
loopne
inc
push
dec
pop
insl
imul
sbb
arpl
and
push
ja
clc
xor
es
mov
and
mulb
iret
mov
inc
pusha
pushf
cmp
cmp
pusha
subb
ja
cmp
dec
sub
add
pusha
loopne
mov
lahf
or
into
and
loopne
loopne
xchg
or
cmpb
dec
sub
cmpl
fsts
cld
push
push
test
mull
inc
or
fwait
dec
je
cmc
xchg
mov
dec
out
sub
lods
inc
mov
or
cmp
pushf
js
cli
loopne
into
mov
mov
popa
imul
clc
jle
sub
dec
cwtl
add
inc
lock
or
cmpsb
shlb
subb
jg
cmpsl
repnz
cmc
push
fstps
ret
sub
scas
popa
adc
adc
dec
sbb
adc
stc
push
inc
test
mov
xor
cli
cltd
inc
mov
and
push
push
into
sub
xchg
adc
and
mov
mov
dec
mov
push
or
pusha
add
inc
or
jno
mov
rol
cld
xchg
sbb
into
add
daa
jae
sub
loopne
into
push
sbb
ja
mov
mov
call
dec
into
pop
cltd
cmp
loopne
nop
push
stc
andl
mov
inc
cmpsl
jne
insb
out
jle
sahf
push
sbb
addb
test
cwtl
push
adc
xor
in
xor
dec
mov
shrb
addr16
pop
cmp
stos
lret
cmc
cmp
in
pop
and
cmpsl
data16
cmp
cltd
cmpsb
add
loopne
push
and
adc
adc
addr16
adc
mov
fcoml
test
cmp
push
shl
jo
sbb
mov
xchg
cli
bound
mov
filds
stos
addb
inc
pusha
and
add
push
rcl
popf
in
mov
inc
mov
jecxz
pusha
loopne
icebp
push
dec
imul
mov
cmp
xchg
ret
jecxz
sbb
inc
test
xorb
inc
loopne
lahf
or
mov
repnz
andb
mov
jmp
mov
ss
andl
test
add
adc
mov
fidivrl
loopne
imul
mul
insl
jge
loopne
mov
fimuls
lods
sub
push
dec
andb
sub
out
push
out
arpl
insl
jb
push
dec
mov
into
jnp
or
sbb
nop
repnz
push
inc
loopne
sub
rcrb
push
push
inc
mov
or
pusha
adc
clc
xor
pop
ja
ljmp
ds
xchg
adc
push
cmp
lcall
lods
jnp
pusha
rclb
pop
fsubrs
or
leave
jp
mov
addr16
add
cmpb
add
mov
dec
xchg
in
popf
cli
xchg
test
mov
xchg
sub
push
lds
mov
sub
mov
inc
add
sub
pusha
pusha
push
mov
sbb
adc
mov
jmp
mov
inc
mov
pusha
or
add
push
sbb
repnz
mov
add
xor
jmp
je
cmp
dec
rcrl
cmpsb
loopne
cmp
pusha
and
dec
cmp
mov
push
rcrl
sbb
ss
inc
iret
ffreep
cmc
add
cmp
pusha
loopne
add
icebp
out
mov
inc
sbb
sbb
sti
aas
add
test
sbb
push
dec
fcomip
sub
sbb
pusha
addb
lock
lock
loopne
mov
push
pop
adc
fs
push
mov
dec
cmpsl
cmp
mov
jbe
gs
jmp
pop
test
mov
sbb
scas
pusha
add
add
cmpsb
loopne
or
addb
inc
inc
mov
xlat
addb
xchg
inc
loope
repz
lret
add
ret
iret
std
aas
adc
je
aam
xor
insb
fucomip
or
and
pop
jns
std
out
repz
pop
mov
inc
inc
xor
aaa
fnstsw
mov
pop
ret
mov
shlb
inc
lods
adc
aam
into
push
or
add
stos
daa
xchg
inc
jl
xchg
jns
mov
aam
nop
push
sub
addb
add
dec
test
pusha
iret
cltd
mov
pop
mov
jecxz
adc
add
mov
in
lret
pusha
pop
mov
pusha
aam
cwtl
in
ss
into
aam
mov
dec
xor
jl
inc
pusha
and
nop
int3
mov
mov
push
jnp
mov
loopne
out
sbb
mov
xchg
pop
repz
mov
inc
add
pop
stc
imul
subb
cli
fstl
and
rolb
bound
addb
out
xor
popa
xor
mov
mov
push
stos
dec
push
sbb
jbe
xchg
fidivrl
and
ret
push
sbb
jno
mulb
and
fimuls
dec
lahf
cli
lods
loopne
lods
shl
ds
adc
imul
inc
adc
xor
lret
sub
sub
ss
insb
push
mov
mov
pusha
fnstenv
rolb
sbbb
pop
popa
sar
mov
sbb
outsb
aad
js
int3
stos
xchg
dec
das
mov
fwait
andb
xchg
xor
in
jae
and
add
iret
subl
insl
es
mov
cld
mov
fildll
dec
jbe
xchg
addr16
jo
mov
jns
addb
cmp
lds
jb
repnz
mov
add
push
sahf
add
addb
push
xor
xchg
sub
and
inc
mov
enter
sub
data16
xor
mov
add
inc
test
fmull
jle
dec
and
cltd
sub
sbb
aaa
sti
pop
ja
movsl
cmp
sub
add
idiv
negb
push
sub
jo
mov
stos
push
push
je
jecxz
fimuls
out
adc
into
cmpsl
push
addb
int
rcrl
mov
mov
outsb
lret
xlat
repnz
out
push
push
mov
stos
xchg
add
sbb
vpunpcklqdq
adc
in
fisttpl
inc
mov
dec
push
aaa
mov
shl
es
mov
or
sub
pop
cld
cli
add
loopne
out
cmp
movsb
and
ss
lahf
jns
dec
inc
imul
pop
pshufw
bnd
jne
add
cwtl
xchg
xchg
jae
sahf
dec
adc
dec
xor
push
inc
or
add
mov
enter
maskmovq
divl
inc
out
xadd
loopne,pn
loop
dec
mov
push
fiaddl
loopne
push
insb
and
loopne
add
mov
mov
scas
fisttps
pop
rcrl
xchg
xor
and
sbb
clc
pop
push
xchg
xchg
lret
sarb
and
mov
int3
pop
leave
mov
xchg
adc
sbb
xor
xor
add
insl
inc
mov
add
and
jg
movb
push
push
jmp
and
xorb
cmp
xchg
andb
daa
and
mov
xchg
jmp
xchg
scas
pusha
inc
rolb
loop
in
loop
mov
jecxz
mov
test
or
inc
iret
or
add
les
shlb
push
icebp
xor
add
jecxz
sbb
adc
jne
xor
inc
mov
mov
mov
add
fdivs
jp
fsubp
lcall
sub
pusha
into
jb
divl
cld
and
rolb
mov
mov
enter
pusha
jnp
mov
mov
push
mov
mov
imul
xchg
adc
xor
jno
jae
dec
or
rorb
push
fldl2t
cmp
push
std
ficoml
sti
repnz
push
jns
loope
loopne
rolb
out
pop
jno
add
cld
mov
sub
sub
add
dec
aad
lret
mov
inc
outsl
add
lret
orb
and
sbb
adc
adc
cmp
andb
add
loopne
ds
push
jnp
ja
in
mov
imulb
mov
inc
enter
push
iret
stos
addb
rol
stos
dec
mov
xchg
push
push
addb
add
pop
or
inc
pop
pop
mov
data16
ljmp
stos
and
shl
push
push
push
jno
inc
loopne
fwait
mov
pushf
das
sub
loopne
sarb
sbbl
dec
cmp
loopne
cmp
push
cmp
sub
add
xor
call
mov
cmp
stos
mov
add
jne
addr16
inc
inc
es
lahf
jp
dec
gs
in
addb
cmpb
call
addr16
pusha
in
insb
add
and
icebp
scas
rolb
leave
aad
xchg
sub
iret
and
jg
pop
xchg
inc
dec
in
sar
inc
loopne
out
inc
outsb
push
mov
scas
mov
and
add
push
into
movsb
rol
imul
das
inc
loope
int
lret
nop
inc
loope
and
add
lock
rolb
inc
inc
aas
jmp
and
xchg
or
mov
lock
pusha
mov
gs
sbbb
push
shlb
mov
out
sbb
sub
rolb
inc
mov
add
test
addr16
mov
andb
or
mov
pop
cmc
or
or
inc
addr16
es
sarb
ficompl
push
cmpsl
cmp
mov
pextrw
lcall
les
dec
stos
shlb
outsl
xchg
or
movsb
mov
and
andb
std
fwait
lret
pusha
add
shl
push
push
xor
mov
fcoml
scas
and
push
decl
out
shl
ret
mov
xor
adc
jnp
sub
jp
aad
xor
jbe
and
mov
push
mov
xchg
sbb
loope
pop
push
je
cmp
scas
aaa
lcall
mov
and
rclb
fdivl
fmuls
inc
and
xchg
sub
loopne
push
fldcw
xor
xorl
je
xchg
inc
cmp
pushf
in
jnp
cmp
pusha
loopne
mov
jbe
and
addb
cmp
dec
movsb
loopne
push
cltd
stc
popa
add
pusha
mov
and
xor
addb
loop
cmp
shr
loopne
cmpl
add
repnz
or
call
mov
mov
dec
adc
addr16
ja
into
popf
out
sub
mov
mov
pop
xlat
jnp
notb
add
pushfw
mov
or
pusha
pusha
adc
adc
fdivs
and
out
dec
jg
mov
inc
icebp
jge
mov
shlb
and
and
dec
add
pusha
rorb
xlat
addb
fstpt
ljmp
pop
lods
mov
loopne
mov
pop
mov
sub
add
jae
mov
aad
lods
and
push
out
mov
aad
mov
jbe
inc
jae
bound
insl
adc
pusha
and
insl
xchg
add
adc
sub
inc
push
and
lahf
inc
sbb
rclb
andb
ljmp
test
pop
pusha
mov
mov
mov
loopne
adc
icebp
inc
or
test
stc
push
push
fwait
rcrb
inc
pusha
mov
xchg
mov
pop
lea
inc
loopne
stos
xor
push
loopne
gs
pop
sbb
cmp
adc
sub
pusha
xor
sbb
inc
popl
mov
pushf
inc
in
repnz
jl
xchg
cmp
inc
sbb
inc
scas
and
push
aaa
cmp
ja
rorl
idivb
xor
cltd
add
cmpb
xor
addb
loopne
pop
push
clc
push
in
loop
hlt
scas
ficomps
mov
sar
push
cmp
and
call
add
pop
jge
xor
xrelease
mov
xchg
movsb
add
xchg
push
sub
test
and
inc
aad
leave
cmpsl
push
movsl
dec
and
loopne
push
dec
clc
and
xorb
scas
inc
add
mov
pop
xchg
stc
iret
aam
mov
pusha
mov
push
jmp
ss
pop
pushf
data16
or
pop
addl
lods
loopne
mov
int3
call
mov
xchg
xchg
popa
imul
clc
cli
dec
add
mov
addb
fimull
and
and
cmp
jmp
sbb
jno
cltd
jl
nop
xor
pop
xchg
xchg
mov
mov
test
and
orl
shrb
lods
stos
mov
mov
fcomp
cbtw
inc
cmpsb
addb
faddl
in
scas
shl
imul
shl
pusha
loopne
dec
imulb
xor
pop
add
outsl
sub
inc
test
inc
dec
xchg
mov
rcrb
push
test
pop
aad
scas
lds
rcr
std
lea
pop
and
rorl
inc
fcmovnu
add
cmpsl
aas
add
sbb
pop
xchg
mov
jb
push
jmp
jns
pop
cmp
bt
loopne
cld
mov
subb
repz
shl
mov
insl
add
cmpsl
loopne
scas
and
std
mov
jnp
mov
and
sahf
add
mov
filds
and
pusha
pusha
out
push
sub
xchg
icebp
or
mov
jae
inc
stos
xorl
aam
xchg
push
addl
push
lret
mov
addb
mov
add
or
or
cmpb
dec
sti
jmp
inc
mov
inc
mov
sbb
push
in
test
daa
loopne
outsb
pushf
or
orb
xchg
orl
aas
mov
aaa
mov
and
xlat
pop
ret
inc
mov
add
test
and
das
xchg
loope
pop
push
mov
inc
bound
lds
xlat
lods
mov
push
cmpsb
and
aad
ljmp
push
mov
adc
and
shlb
sub
rorb
sub
call
inc
fsubs
imul
rclb
movsl
rorl
add
jnp
xchg
xor
lahf
sbb
xlat
and
or
pop
mov
mov
inc
ret
imul
mov
jmp
mov
sar
loopne
or
lahf
pop
mov
add
iret
rolb
aad
inc
mov
test
andb
mov
lcall
sar
dec
sub
or
adc
mov
mov
adc
push
sbb
subb
add
mov
je
shl
sub
rorb
into
cli
cmp
shlb
mov
and
in
and
mov
jecxz
lret
xchg
jp
cmp
insb
lea
inc
sbb
pusha
sahf
add
cmp
insb
test
and
dec
jbe
mov
push
nop
popf
push
pop
aaa
cmpsb
inc
and
jne
push
pop
sbb
xchg
and
inc
cwtl
repnz
cmp
mov
push
mov
sar
inc
inc
nop
lods
inc
pusha
repnz
and
adc
inc
pop
scas
ljmp
add
lret
pop
mov
sbb
imul
mov
andl
out
out
call
leave
add
add
adc
and
fldcw
mov
cli
or
and
jle
das
mov
inc
push
xchg
andl
pushw
mov
pop
test
lods
mov
int3
cmpsb
loopne
inc
cmp
adc
inc
cwtl
ss
push
push
inc
cmp
push
sbb
leave
and
sbbb
lahf
adc
ss
mov
add
sub
and
inc
sbb
mov
or
pusha
xor
addr16
mulb
or
cld
or
loopne
xor
into
dec
loop
mov
call
mull
mov
jmp
xor
pop
std
dec
insl
add
arpl
cld
lcall
ret
xor
decl
add
jae
loopne
insb
lods
and
pop
adc
and
cmp
iret
and
insb
testb
and
inc
rolb
test
in
jnp
xor
xor
loopne
push
or
divb
out
and
cmpsb
addb
imul
cmp
pushl
pop
mov
out
cmp
pop
xlat
pushf
inc
adc
addb
addb
xchg
andl
mov
sbb
adc
in
arpl
add
pop
xchg
ljmp
adcl
mov
pop
je
sbb
bnd
mov
in
das
xor
pop
push
xchg
cmpsb
inc
mov
in
and
out
fs
mov
push
out
and
idivb
sbb
movsb
addb
xchg
add
int3
xcrypt-ctr
cmpsl
pushf
xchg
mov
mov
pop
cld
cli
jnp
dec
fmul
and
pusha
arpl
mov
daa
mov
nop
pop
je
dec
sti
insb
rclb
pusha
mov
mov
es
loopne
and
inc
arpl
dec
mov
add
adc
fnstsw
sahf
mov
loopne
add
pop
push
inc
add
jo
mov
dec
pusha
test
and
movsl
jbe
push
out
mov
clc
add
add
and
xor
sbb
jmp
cltd
fisubrs
push
xchg
fimuls
xor
enter
adc
add
pop
jae
std
sbb
pop
xchg
sahf
sbb
mov
stos
mov
mov
mov
in
test
pop
jmp
mov
add
pop
cli
mov
fidivrl
daa
cmpsb
pusha
shrb
pusha
mov
adc
sub
test
cmp
movsb
and
add
push
mov
dec
out
dec
jno
push
mov
aam
cli
cmp
jecxz
mov
add
fwait
stos
shl
mov
clc
dec
jmp
loopne
sbb
ss
add
jbe
or
loopne
scas
leave
dec
pop
les
mov
adc
mov
adc
dec
lds
and
xor
mov
and
ss
jbe
and
adc
and
and
jno
and
fldcw
scas
jmp
adc
test
bnd
outsb
xor
mov
adc
inc
push
outsl
pop
scas
mov
aad
movsb
loopne
ja
and
mov
pusha
mov
in
lcall
aad
add
pop
cmpsl
dec
pop
in
movsl
das
xchg
inc
mov
pop
push
ficomps
jne
and
decb
mov
push
mov
mov
clc
xor
jmp
ja
xlat
sbb
lret
pop
lret
or
ret
insb
rorl
imul
fsubp
pop
adc
lods
and
and
inc
adc
inc
aas
ljmp
or
loopne
mov
insb
push
int3
xor
repz
ds
lods
shr
pusha
mov
rolb
jmp
shlb
adcl
inc
loopne
sbb
dec
dec
loope
xchg
adc
add
mov
frstor
ss
jecxz
push
sbb
mov
aam
mov
add
and
shlb
loopne
xchg
jnp
imulb
clc
cmp
mov
and
test
dec
inc
jne
out
mov
sub
outsl
pop
mov
ret
mov
jb
dec
sbb
push
mov
xchg
and
pop
and
and
pusha
aas
test
sbb
inc
pop
dec
jnp
pop
lods
or
rolb
mov
cmpsl
movsb
pusha
mov
pusha
inc
scas
add
daa
sbb
iret
xor
bound
in
dec
dec
mov
out
pop
and
in
cld
mov
inc
add
xlat
sahf
jbe
mov
popf
fstpt
shlb
loopne
shrl
jg
mov
pusha
xor
cmp
adc
imul
notb
pop
enter
fwait
mov
mov
movsb
addb
and
test
and
dec
lds
push
jns
inc
and
out
jbe
sarb
sahf
and
popf
iret
sub
cmc
cltd
sbb
lods
pusha
add
dec
in
add
inc
incb
add
add
loopne
insl
dec
pop
xchg
push
cmp
and
fdivrl
lahf
add
inc
dec
mov
movsl
idivb
sub
and
ljmp
data16
fdivrl
mov
inc
fidivrs
in
sbb
sbb
mov
fwait
in
add
lods
shlb
inc
cltd
repz
lods
inc
mov
arpl
xchg
pop
stc
dec
adc
iret
xchg
call
repnz
into
leave
mov
adc
jl
pusha
rolb
mov
rolb
inc
sti
xchg
call
add
sarb
or
addr16
add
pop
sub
loopne
jns
push
add
aaa
dec
stos
and
nop
pop
sbb
rolb
leave
push
push
and
mov
insl
stos
push
adcl
add
sbb
cmc
jg
inc
inc
push
inc
inc
in
mov
lcall
pusha
decl
pop
inc
dec
adc
addl
mov
mov
daa
cmp
test
data16
ja
jbe
inc
cmpb
xchg
sbb
pop
popa
xchg
and
rolb
scas
add
sub
push
push
add
cli
push
xchg
rcr
push
jge
mov
sbb
outsb
mov
push
xor
xor
addb
add
inc
mov
add
mov
ja
rolb
mov
inc
aas
mov
sub
push
movb
data16
shlb
cltd
add
jae
andb
rol
addr16
aam
inc
orb
outsl
mov
shrb
scas
test
andb
cmp
jmp
jno
lock
add
xor
gs
mov
sub
xor
mov
cmp
out
call
cld
ss
repz
out
loop
push
rolb
and
sahf
xor
xchg
jecxz
movsl
insl
mov
pop
xor
mov
add
nop
js
lret
pusha
aad
enter
or
mov
iret
sbb
stc
fstpl
out
sub
cltd
add
lret
cwtl
les
das
cltd
dec
and
or
xchg
add
add
shlb
daa
adc
xor
cmp
std
sub
or
xchg
dec
jmp
cmp
outsl
mov
jb
dec
jle
stos
cld
cmp
inc
add
and
adc
fisttpll
xchg
loopne
sbb
cmpsb
andb
mov
and
adc
mov
andb
inc
and
pusha
sbb
cmp
pop
push
movsl
xchg
pop
mov
xor
xchg
adc
add
mov
push
add
fdiv
mov
into
in
xchg
lret
pushf
xchg
mov
cs
inc
sti
in
cli
jno
and
std
pop
in
in
sar
stos
andb
lahf
mov
add
push
addr16
outsb
sti
pop
xchg
cmp
cmp
shlb
aad
sbb
fsubrl
out
push
fcmove
and
dec
icebp
movsb
add
xorb
cmpsb
pusha
loopne
leave
frstor
fbstp
negb
jb
adc
rcll
xchg
rclb
add
dec
dec
outsb
outsl
and
mov
or
jno
jl
idivl
iret
mov
xor
cmpsb
mov
and
push
ret
mov
cmp
fcomp
xor
push
xor
stc
in
mov
xchg
pop
cld
stos
and
push
jge
iret
fcomps
inc
sbb
or
fucom
cs
xorb
jmp
lahf
adc
ljmp
and
sbb
sarl
cld
decb
into
loope
add
cli
add
loopne
pushf
mov
inc
add
jo
rolb
out
pop
mov
mov
xchg
test
jne
mov
addb
cli
stos
mov
sub
xor
pop
add
mov
cmp
add
loopne
lret
in
xor
inc
inc
cmp
inc
pop
pop
sub
sarb
inc
rorw
cwtl
push
mov
add
loopne
pop
fstl
scas
push
jno
jp
pop
fcompl
bound
mov
pusha
dec
adc
cli
test
orb
mov
andb
inc
and
xchg
jl
push
iret
add
subb
jae
shlb
out
pop
lcallw
in
in
out
mov
pusha
imul
fcmovu
stos
into
rolb
imul
xchg
sbb
pusha
mov
nop
call
pushf
js
or
mov
inc
sub
mov
jns
pop
mov
rcrb
add
rolb
cmpsl
jmp
or
sbb
lcall
inc
fs
inc
jmp
dec
outsl
mov
js
mov
mov
inc
loope
in
dec
mov
roll
inc
icebp
sub
add
ror
and
stos
or
add
test
add
lods
add
inc
loopne
mov
lcall
and
push
mov
adc
jb
shlb
scas
popf
stc
cmpsb
pusha
pusha
mov
sbb
xchg
jno
mov
and
subb
xchg
jns
and
and
inc
or
mov
pop
pop
fstl
lcall
das
jns
jns
loope
push
mov
inc
call
outsl
cmp
or
and
dec
sbb
pushf
sti
fwait
xor
push
dec
bswap
shll
int
mov
leave
loop
out
add
mov
insl
dec
xchg
in
pusha
push
popa
ficompl
or
loopne
fildl
add
addb
in
aam
mov
dec
movsl
mov
xlat
mov
add
lahf
pop
xchg
mov
mov
test
cmpb
jbe
mov
add
enter
pop
sbb
or
add
loopne
pusha
andb
movsl
out
lock
loopne
adc
shl
jl
jno
pop
aad
andb
xlat
jge
cli
popa
mov
loopne
popf
test
add
xchg
pusha
rol
adc
fwait
imul
push
andb
add
inc
fwait
xchg
in
pusha
in
inc
movsb
shl
sub
inc
xchg
repnz
cmpsl
cmp
adc
add
add
out
xchg
scas
mov
dec
dec
sbb
loopne
clc
or
inc
in
jnp
inc
jbe
pop
jg
aam
hlt
mov
inc
rcrb
sub
pop
dec
sub
push
mov
pusha
or
mov
jb
xchg
iret
push
in
inc
mov
icebp
push
inc
mov
pusha
add
mov
mov
shlb
nop
hlt
imul
xchg
add
fwait
movsb
inc
pusha
mov
inc
nop
inc
ret
mov
push
or
xchg
fidivrl
mov
push
add
xor
mov
mov
cltd
add
and
or
pusha
rorb
aaa
dec
jne
imul
loopne
jg
dec
add
aad
mov
stc
ja
push
out
cmpsl
dec
fstps
movsb
pusha
or
mov
xchg
loopne
sbb
test
add
mov
je
push
loopne
shll
je
push
mov
cmp
rorl
and
fwait
rcrl
ret
rolb
into
pop
shlb
cwtl
pop
mov
xor
lods
loopne
push
xor
dec
lret
adcb
shl
loopne
mov
in
mov
sub
add
push
xchg
xchg
sbb
jle
sub
sub
adc
push
mov
jmp
test
loopne
jno
fsubs
pusha
mov
aad
cmp
mov
add
or
lret
push
jge
cmp
nop
fidivrs
fildll
adcl
and
loopne
pop
imul
loopne
arpl
loop
xchg
stos
jl
xor
jge
pop
xlat
dec
cmpsl
lods
and
stos
repnz
loopne
adc
xor
mov
in
add
sbb
movsl
shl
jne
loopne
mov
and
xor
pushf
gs
rclb
sub
pop
xlat
sahf
xor
jecxz
pusha
adc
fiaddl
pop
push
fldcw
in
jae
out
loopne
dec
lods
andb
push
mov
pop
hlt
out
in
aas
inc
in
imul
shlb
hlt
mov
fstl
mov
pop
inc
dec
insb
in
lods
mov
add
mov
mov
lods
sbb
inc
sbb
mov
add
sti
sbb
mov
pop
iret
push
loopne
jle
mov
xor
xchg
jb
inc
loopne
sbb
sbb
out
sahf
outsl
push
lcall
cmp
sub
inc
push
shlb
push
push
push
pusha
inc
push
add
imul
mov
leave
out
jne
mov
fs
or
rorl
or
add
dec
sub
pusha
mov
jg
hlt
cmp
inc
loopne
ficompl
gs
loopne
xlat
lock
push
stos
shl
andb
dec
scas
jmp
ffree
ss
outsb
lea
loopne
push
in
mov
stos
pusha
add
cmp
cli
mov
mov
js
rol
pop
ds
repnz
aaa
leave
cmpsb
pusha
adcb
pusha
dec
push
loopne
aas
jle
pusha
mov
mov
cwtl
clc
in
jne
jl
add
pusha
repnz
push
cmp
jo
mov
mov
add
inc
lea
and
add
loopne
and
pusha
push
add
mov
cmc
cmp
mov
mov
mov
int
mov
rorl
ret
nop
imul
add
jmp
mov
push
push
xchg
xor
scas
push
into
and
mov
or
js
cmp
add
inc
shlb
in
mov
pusha
and
fsubrs
loopne
xor
mov
add
lcall
and
mov
push
jg
pop
in
inc
or
adc
sbbl
sbb
push
inc
cmp
out
fdivs
lods
and
mov
inc
mov
jg
test
xorb
sub
andb
and
mov
mov
repnz
add
into
int
push
lret
neg
outsl
fcmovbe
lret
cmp
clc
add
stos
and
and
loopne
fadds
sbb
push
adc
insl
sub
sarb
pusha
sbbb
sbbl
je
or
andb
insl
add
dec
cmp
mov
and
jo
or
adc
inc
rorb
incb
ret
outsl
fcoml
mov
shl
sbb
fwait
xor
xor
sbb
test
mov
pop
and
sar
popl
inc
cmp
mov
pop
push
mov
jne
xchg
and
xor
pusha
shrb
mov
pop
and
and
push
mov
add
adcl
mov
and
mov
insb
xchg
imul
pop
push
inc
mov
inc
and
adc
adc
adc
fmull
mov
addb
out
lret
or
loopne
les
in
inc
lret
rcrl
sarb
cmp
cmpsb
inc
xor
call
mov
mov
int3
rcrb
mov
push
inc
rolb
push
dec
loop
fwait
pop
arpl
jnp
ret
imul
add
lds
loopne
stc
das
imul
cmpl
mov
test
and
add
sbb
pop
fadds
xchg
and
or
lahf
hlt
fimuls
sar
fdivs
xor
test
and
dec
cmp
sbb
mov
and
mov
mov
cli
stos
mov
pop
daa
cs
loopne
add
lods
test
dec
testl
movsl
mov
pusha
insl
scas
arpl
add
dec
repz
mov
lcall
loopne
bound
cld
scas
pop
mov
and
jns
jle
xor
fwait
sub
andb
add
int
rolb
and
les
and
pusha
imull
lods
cltd
sub
and
fs
xchg
adc
mov
rol
xor
push
push
pusha
loopne
fs
mov
push
cltd
mov
sarb
and
sar
xchg
out
inc
sahf
sub
shr
sbb
inc
add
idivb
test
sbb
loopne
scas
pusha
sarb
or
int
hlt
ss
dec
cmp
push
mov
pop
adc
scas
add
fbstp
repnz
adc
daa
in
lcall
and
push
mov
pusha
ja
sarb
push
pop
or
and
mov
pop
push
pop
push
pushf
xchg
push
cld
add
insl
imull
pusha
mov
jbe
mov
insb
adc
inc
xchg
mov
sub
loopne
sbb
call
xor
dec
or
mov
jge
sub
or
mov
and
xor
sti
fadds
sbb
jnp
and
xlat
jge
and
cmp
mov
sbb
adc
shlb
inc
add
push
arpl
jns
gs
add
inc
nop
out
xor
jp
mov
addr16
mov
fsub
xor
sub
pushf
insb
sbb
pop
mov
inc
sub
pop
jecxz
xlat
out
pop
jb
cld
ds
inc
add
and
push
pusha
fldt
sbb
andb
mov
push
and
sub
pusha
stos
inc
inc
int
sub
add
pop
int
test
xchg
jmp
shlb
dec
xor
inc
jecxz
xchg
scas
pop
sbb
cmpsb
inc
ror
loopne,pn
pop
cld
cmp
inc
inc
gs
les
mov
dec
dec
dec
js
or
ljmp
aaa
sub
addr16
add
push
pusha
addb
add
sbb
adc
inc
std
adc
pop
xchg
and
lahf
push
lods
and
add
pusha
pusha
fwait
mull
and
inc
mov
and
leave
or
and
and
subb
mov
fdivr
cwtl
dec
sbb
xchg
add
mov
push
sbb
and
add
sbbl
pop
push
int3
inc
pop
cwtl
arpl
in
and
lret
jns
pusha
mov
test
cmp
addr16
xor
adc
inc
xchg
and
push
icebp
sub
cmp
pusha
arpl
loopne
pushf
push
shlb
stos
pusha
add
mov
mov
adc
and
and
loopne
adc
lret
add
sub
ljmp
and
inc
movsb
and
or
push
mov
adc
repnz
cmp
fdivs
std
push
loopne
jne
inc
shrl
add
shl
adc
jg
cmpsl
pop
rcll
jae
or
sbb
fcomps
and
xchg
int
pushf
pop
rcrb
cmp
push
movsl
test
push
testb
int3
cmp
sub
testl
mov
shr
shlb
loopne
push
fwait
and
and
jb
fninit
jbe
and
loopne
repz
test
lods
and
pop
inc
mov
mov
xchg
out
sahf
jae
adc
in
push
ds
arpl
cltd
addr16
mov
cmc
mov
js
pop
insl
mov
push
jae
xchg
sub
inc
xor
lcall
loopne
clc
mov
mov
mov
imul
adc
dec
out
xchg
add
push
enter
cmp
call
stc
mov
loopne
popa
iret
dec
out
sub
sub
push
and
lea
repz
pop
test
hlt
jl
dec
sub
jbe
or
daa
xchg
xor
push
and
jle
xchg
call
outsb
mov
scas
inc
add
repz
inc
imul
mov
pop
aad
call
jae
push
mov
add
and
enter
ljmp
inc
ficoms
adc
lret
out
push
dec
add
mov
pop
mov
cmp
or
loopne
fwait
pusha
pop
adc
pop
int3
daa
stos
mov
in
add
mov
insl
add
add
mov
enter
stos
pusha
xorb
mov
movl
jp
ret
loopne
stos
mov
cmp
and
cmpsl
fs
sti
daa
cwtl
adc
nop
fwait
push
adc
mov
jb
shlb
pop
pop
adc
xor
and
jg
lret
mov
add
pusha
pusha
lret
gs
clc
push
aas
out
fisttpll
xor
push
jb
test
shlb
arpl
pusha
loopne
mov
in
cmp
js
inc
and
shrl
xchg
pushf
rolb
rcrb
mov
shl
jl
pop
mov
fidivrs
xchg
push
pusha
mov
add
cmp
arpl
rolb
mov
mov
inc
addb
icebp
xchg
in
mov
addb
add
mov
mov
and
popf
sub
addb
mov
lret
dec
sti
push
loopne
iret
das
inc
xchg
jbe
fdivrl
mov
add
mov
and
sar
xor
add
xchg
shlb
jg
aas
cwtl
imul
stc
xor
fxsave
dec
sbb
jg
repnz
sbb
mov
fwait
adc
andb
mov
cmp
sub
loopne
and
sbbb
loopne
dec
bound
les
pop
mov
inc
test
mov
inc
aas
aaa
inc
gs
xchg
jg
or
add
icebp
aam
inc
mov
dec
test
loopne
loopne
imul
jo
shll
inc
pusha
lahf
rorl
sbb
and
inc
ds
ret
mov
aad
fnsave
nop
mov
outsb
and
and
loopne
mov
add
or
bound
js
int
imul
mov
push
inc
sbb
pop
mov
in
cld
sub
pusha
inc
out
xor
cmp
mov
cmpl
jns
rolb
mov
iret
pusha
popa
hlt
jl
sub
jmp
lcall
mov
outsl
sbb
dec
sbb
fwait
enter
ds
mov
inc
hlt
notb
sbb
cwtl
aam
jbe
and
inc
loopne
outsl
adc
push
mov
ja
mov
xchg
mov
add
jmp
mov
cmp
rolb
rcrl
pushf
fcompl
jge
mov
or
and
jp
and
inc
mov
lcall
incl
dec
jbe
add
out
cmp
inc
out
mov
mov
aad
inc
or
inc
inc
aaa
ret
repnz
adcb
add
inc
insb
sbb
mov
push
or
pushl
in
xchg
jle
mov
movsl
enter
movsl
add
jge
lds
adc
mov
cmp
out
inc
and
jl
mov
add
mov
dec
fnstsw
mov
cmp
rolb
push
pusha
inc
sub
loopne
arpl
inc
sbb
and
push
adc
lds
aam
dec
outsl
add
mov
ret
dec
jle
lods
and
cmp
int3
mov
scas
addb
xlat
pop
push
add
and
shlb
loopne
dec
clc
push
andb
inc
sbb
rolb
andb
add
push
lcall
inc
inc
aam
data16
dec
jno
stc
js
cli
aaa
push
das
aaa
cmp
sti
jge
addr16
jp
lcall
mov
xor
jl
mov
orb
add
cmp
vmulps
and
ss
push
sub
inc
outsl
call
push
mov
jmp
inc
jmp
mov
cs
shlb
push
or
add
cmp
sti
das
xor
lea
push
dec
mov
or
and
stos
pusha
add
movsb
pusha
pusha
push
daa
ret
jecxz
push
scas
std
jmp
jns
jge
out
mov
cmpsl
jnp
add
and
leave
sub
and
cwtl
dec
or
push
sub
enter
dec
js
movsb
loopne
and
shr
imul
mov
ljmp
lret
add
pusha
rolb
inc
pusha
or
call
cmp
mul
movsl
bound
cmc
sahf
out
lret
or
mov
loopne
insl
mov
jge
push
xchg
and
inc
fnstcw
inc
pop
fsubs
ja
loopne
fwait
xor
xor
push
insl
je
jl
push
scas
add
jb
cltd
dec
jp
mov
shlb
addr16
pusha
adc
and
fsts
jne
lahf
test
shlb
inc
push
loopne
mov
sbb
pop
sarb
xchg
cmp
mov
cmp
pop
cmpsb
add
notl
mov
mov
aaa
xchg
pushf
pushf
insl
out
ljmp
add
inc
fmull
add
xlat
inc
outsb
push
fs
or
add
shrb
pop
repnz
mov
daa
loopne
jnp
clc
xor
icebp
push
xchg
imul
sbb
stos
call
sbb
loopne
or
add
or
cmp
sti
popa
sti
xchg
jns
sub
sub
mov
imul
sub
add
jp
inc
mov
dec
roll
jle
jg
dec
out
jne
and
lods
rolb
loopne
push
or
and
add
inc
enter
push
pop
aaa
fwait
insl
popf
popf
ja
stos
shlb
add
jle
addb
and
pop
jg
data16
out
cwtl
into
fnstsw
repz
and
popf
xor
push
lea
cltd
iret
inc
or
push
mov
rcrb
shl
push
pop
pop
addb
or
std
bound
adc
je
inc
xchg
inc
or
add
lods
loop
adc
push
add
jecxz
sub
mov
lea
jne
and
add
shl
or
add
gs
dec
xor
out
imul
dec
add
cmp
loopne
aaa
cmpsb
add
imul
and
sub
scas
mov
lods
push
scas
add
xor
int
pop
push
loopne
dec
ret
arpl
in
test
mov
mov
mov
mov
fmul
cltd
jbe
lods
daa
sub
movsb
and
repz
mov
aad
push
mov
sub
sarb
leave
jmp
hlt
test
fistl
iret
sahf
xor
aad
ficoml
iret
lcall
jns
nop
adc
add
popf
fdivr
sti
mov
arpl
addb
out
jl
je
inc
xorb
mov
mull
rcrb
inc
mov
iret
data16
inc
add
les
adc
mov
mov
into
nop
addr16
jp
shrb
repz
iret
add
sub
and
dec
in
pusha
loopne
inc
mov
xor
adc
repz
mov
ret
jo
jb
in
sbb
cmpb
jb
ljmp
mov
daa
xchg
hlt
jnp
shl
mov
dec
in
push
cwtl
mov
jle
mov
pusha
mov
mov
and
in
xchg
rclb
das
cmp
mov
inc
loopne
push
add
add
cwtl
sarl
cmp
loopne
mov
andb
nop
dec
and
adcl
shll
dec
sub
xchg
aas
xor
inc
stos
push
mov
adc
cli
vpunpckhqdq
movsl
pop
ss
in
loopne
ljmp
addb
and
inc
inc
and
mov
add
shrb
inc
inc
jne
fistpll
or
imul
daa
out
loopne
insl
arpl
lahf
mov
mov
ret
mov
pusha
add
je
cmp
leavew
inc
sti
or
add
cmp
lret
and
xchg
data16
fnsave
jmp
inc
lcall
xor
add
and
mov
imul
and
test
shlb
cmpsb
shl
dec
bound
rolb
pop
jo
fs
mov
dec
leave
pop
cmp
xchg
inc
sub
and
dec
loope
pop
xorl
stc
pop
xchg
jns,pt
bnd
out
out
xchg
cmpsl
fiaddl
inc
jne
pop
rcrl
xor
mov
push
inc
inc
leave
pop
mov
pop
lcall
ret
sarl
ljmp
and
mov
mov
sbb
xchg
and
loopne
scas
mov
mov
lahf
test
hlt
shl
clc
out
mov
rolb
sub
aam
mov
inc
fs
push
int
xchg
push
iret
ror
insb
xor
out
jle
add
pushf
push
push
pusha
addb
fsubl
cli
stos
or
pop
jb
pusha
inc
xor
ljmp
nop
aam
adc
mov
fbld
mov
ljmp
rol
cwtl
add
pmullw
lahf
mov
cmc
addb
fisubs
pusha
inc
push
scas
mov
or
add
jp
bound
lcall
adc
sarb
and
add
mov
mov
pusha
add
sbb
push
in
int3
jp
stos
andb
into
mov
inc
leave
mov
mov
adc
lock
test
mov
data16
out
loop
faddl
mov
test
pop
gs
ret
sbb
jb
sub
stos
imul
andb
mov
and
js
addb
adc
push
adc
adc
nop
mov
loopne
mov
push
inc
shrb
int
and
fisubl
push
and
cmpsl
push
pop
sub
inc
and
lcall
dec
pop
ja
mov
into
andl
fs
push
fistl
pop
jnp
adc
add
call
cmpsl
xchg
call
rclb
mov
xchg
test
jmp
lret
rol
or
and
stc
movsl
insb
push
mov
adc
mov
loopne
and
loopne
push
movsb
shl
shlb
fisubl
mov
mov
inc
shlb
inc
loopne
mov
loopne
xchg
lcall
popf
ja
outsb
inc
jg
pushf
mov
inc
mov
mov
pop
sub
xor
dec
repz
in
loop
cld
jns
and
mov
and
dec
sbb
xor
mov
cmp
movsb
and
push
add
lea
fdivrp
sub
add
xor
mov
mov
outsl
ret
jle
jae
jae
pusha
mov
jmp
push
or
sub
aam
add
inc
stc
cmc
xchg
inc
pop
aaa
add
inc
lret
stc
xor
mov
stc
jmp
fwait
scas
loopne
outsb
hlt
rcrb
jb
dec
inc
or
pusha
add
std
ss
rol
pop
insl
sbb
cmp
jge
ds
mov
jne
push
dec
addr16
dec
dec
pushf
and
add
pushf
jno
pop
adc
mov
add
adc
inc
push
hlt
mov
push
add
mov
rorb
loopne
mov
and
or
lds
jbe
andb
int
mov
inc
mov
pusha
rcrb
xor
mov
insb
jo
lds
mov
sbb
or
jae
add
cmp
cmpsb
andb
add
pusha
aaa
cmp
dec
in
lods
inc
cmpsl
add
push
jg
inc
ret
push
into
ret
addb
mov
adc
and
test
or
loopne
addr16
rcrb
mov
cs
loopne
mov
insl
aas
rcrl
pusha
pusha
jnp
mov
add
cmp
cltd
in
insb
push
and
mov
jno
in
rclb
cmp
add
mov
and
push
popf
push
add
loopne
and
fsubrl
mov
xchg
xchg
jo
cmp
jns
popf
lahf
pop
sar
hlt
mov
xchg
mov
sbbb
insb
and
add
mov
and
cltd
insb
add
mov
andl
push
mov
inc
ds
fcompl
cmc
pop
and
mov
jns
je
movsl
pop
dec
add
mov
int3
ds
dec
imul
ficoml
loopne
data16
mov
mov
xchg
fcmove
lods
pusha
pusha
int
ds
hlt
subl
jmp
inc
repnz
jge
pusha
addb
add
aam
sti
jb
sbb
pop
mov
pop
sti
mov
addb
imul
mov
je
inc
mov
push
aas
popa
fimull
fwait
sbb
negl
or
adc
es
cmp
shlb
loopne
push
push
pusha
mov
fs
xlat
ficomps
addr16
push
dec
jns
aad
mov
fwait
sub
loopne
xchg
subl
and
mov
lret
sub
loopne
rolb
scas
addb
andb
lret
fdivl
js
lds
jl
cmc
not
add
ror
sbb
mov
push
movsl
aas
xor
jmp
roll
subb
xlat
rcl
nop
out
dec
fidivs
sbb
mov
inc
iret
stc
xor
imul
dec
icebp
ja
lds
push
pusha
insb
xlat
arpl
pushf
jg
jmp
xor
mov
sbb
cmp
bound
push
shlb
enter
in
and
orb
pusha
dec
mov
aam
inc
pop
addl
mov
pop
push
gs
sbb
lret
lods
je
pop
incb
sub
inc
pop
std
adc
push
daa
push
adc
dec
and
add
rorb
loopne
jle
inc
data16
pusha
and
push
rcl
sbb
loopne
cmc
enter
jmp
pusha
shlb
dec
lret
and
mov
and
jmp
inc
mov
ljmp
pusha
shl
xor
mov
popl
lea
push
addb
std
movsl
push
xchg
or
out
cmpsb
loopne
pop
ljmp
loopne
repnz
jnp
and
add
loopne
inc
and
shlb
int
mov
cmpsl
sbb
xchg
pop
popa
in
lea
mov
leave
in
fcoms
pop
es
mov
add
pop
mov
fistl
inc
and
aas
dec
cmp
iret
daa
sti
cmp
subb
push
pop
lock
add
clc
sbb
imul
add
inc
enter
pop
cli
sbb
and
pusha
add
mov
jo
and
int3
mov
cmp
movsb
and
cmpsb
loopne
andb
add
mov
rolb
movsb
and
ret
loopne
fiaddl
mov
andb
sti
cmp
jnp
inc
mov
pop
andb
rcrb
mov
dec
lss
push
xchg
fiadds
pusha
cmp
fimull
mov
lret
adc
jne
rclb
adc
out
cwtl
movsb
add
add
fwait
call
inc
ret
add
andb
jg
mov
dec
fiadds
mov
mov
xor
mov
add
mov
jmp
inc
cwtl
dec
and
outsl
outsl
cmpsl
ja
xchg
ds
mov
xlat
lds
shrw
daa
push
inc
orb
dec
pop
out
push
aaa
pop
sub
add
popf
push
xor
je
loopne
push
inc
and
in
dec
cmpsl
test
outsb
fwait
es
mov
mov
xlat
in
push
arpl
add
mov
add
shlb
xlat
mov
imul
shlb
cwtl
sbb
sbb
repz
std
fmuls
arpl
mov
andb
cmc
lds
in
jbe
fistl
lods
rolb
cli
jle
or
rolb
subl
test
cmpl
dec
sbb
lahf
and
inc
jp
ss
in
rol
aad
jne
and
pop
cmpsb
mov
mov
outsl
mov
loopne
repz
and
or
mov
imul
jno
inc
andb
data16
jl
add
inc
rcrl
fs
lock
adc
aad
xorl
pop
ja
addb
std
push
cmc
inc
jg
mov
pop
and
addb
xchg
push
add
addl
aad
cmpsl
sarl
and
mov
inc
sysenter
xchg
stos
inc
inc
shrl
pop
sbb
sti
mov
lahf
and
loopne
ja
shr
cmpsb
add
gs
ret
sahf
dec
fwait
lods
and
gs
fnstenv
repz
add
jl
and
orb
jo
jecxz
repz
xchg
add
inc
shl
sbb
ficoml
lcall
cwtl
pop
jp
les
and
inc
idivb
cmp
mov
jecxz
leave
jge
dec
sub
add
shr
jno
lock
jns
repz
stos
inc
mov
mov
jbe
mov
or
adc
lock
mov
mov
mov
cmp
mov
jp
mov
andb
jns
movsl
adc
pusha
andb
addb
clc
inc
sub
jl
arpl
jo
dec
push
movsb
pusha
mov
jno
pusha
add
leave
push
sbb
mov
add
insb
ds
ljmp
mov
pop
push
test
and
loopne
pusha
std
xchg
addb
xchg
sbb
jb
cmp
adc
dec
add
loopne
fadd
in
pusha
mov
inc
test
test
jno
mov
loopne
dec
ja
stos
mov
adc
push
aaa
hlt
sub
push
andb
out
shlb
xorb
shl
cmovg
or
pop
test
filds
inc
or
cmp
movsl
je
outsb
sub
mov
sub
xchg
inc
das
dec
push
add
dec
leave
push
leave
cmp
dec
pop
and
fstl
jne
scas
shl
add
or
jae
cmp
add
pusha
clc
xchg
outsb
inc
insl
or
mov
xlat
mov
hlt
aaa
sahf
imul
pusha
and
inc
loop
cmp
mov
jg
mov
lret
push
ret
fwait
xchg
inc
outsb
pop
addl
jl
inc
insl
xor
mov
arpl
fldenv
pop
ja
data16
movsb
pusha
subb
sarb
push
mov
cmp
imul
out
ret
pop
je
andb
iret
lds
cmpsl
orl
shlb
in
aaa
sahf
cmp
jno
cmp
add
xchg
aas
out
les
mov
push
repz
imul
ja
mov
lods
bound
mov
push
loopne
ds
in
push
inc
adc
inc
mov
rcrb
mov
push
fstl
cwtl
imul
or
and
popf
xor
pop
aad
mov
pop
stos
push
pusha
and
je
das
inc
dec
and
test
adc
add
fcoml
xchg
mov
sub
xchg
rorb
and
testb
in
sbb
pop
xchg
repz
mov
popf
jl
mov
rcrb
add
in
aaa
scas
add
out
sub
mov
movsb
loopne
in
mov
dec
xor
lret
dec
dec
sub
pusha
addb
cld
mov
rcl
in
or
pusha
and
mov
sub
inc
adc
dec
cmp
add
sub
add
fisttps
smsw
adc
lcall
jmp
and
insb
popa
push
nop
jmp
in
mov
or
mov
pop
jbe
jecxz
mov
add
ror
insl
je
pop
push
pop
sti
jb
or
pop
ljmp
fistps
add
imul
xor
mov
loopne
xchg
into
sahf
mov
xchg
xlat
push
inc
shll
mov
and
jle
mov
xchg
mov
and
and
adc
andb
pusha
in
jg
fnstcw
hlt
mov
scas
mov
loopne
int
pusha
orb
mov
and
shl
inc
xor
push
mov
mov
ret
mov
xor
scas
mov
mov
pop
mov
movsl
pop
clc
in
pop
sub
clc
movsb
mov
pusha
mov
insl
fs
loop
or
xorb
addb
loopne
es
loopne
xor
rol
movsb
add
inc
jns
jl
pop
sub
je,pt
and
sahf
cltd
mov
stos
loopne
xchg
inc
out
xchg
xor
fwait
std
inc
dec
mov
rorb
mov
inc
dec
fstpt
sbbb
loope
and
in
dec
lea
jne
xchg
mov
loopne
test
loopne
outsb
aaa
lret
pop
xchg
push
cmp
cmpb
int
xor
insb
ret
push
xchg
push
outsl
vmovaps
inc
add
sub
aam
push
sbb
in
mov
mov
inc
outsb
dec
mov
pushf
mov
pop
push
loopne
pop
sub
gs
data16
mov
aam
mov
dec
cmp
inc
sbb
insb
rolb
xlat
push
and
xchg
inc
movsb
pusha
add
loopne
xchg
push
mov
inc
notb
push
loop
jp
mov
add
dec
mov
jl
lret
pusha
mov
shll
out
lret
lea
icebp
arpl
mov
jle
pop
inc
gs
bound
jbe
jl
or
rorb
jmp
lea
movsl
mov
push
xor
ja
xor
loop
pop
outsl
ss
xlat
and
add
movsb
andb
stos
loopne
dec
dec
int
mov
inc
jnp
xor
negb
add
ss
pop
inc
inc
nop
xchg
and
and
pushf
out
mov
add
xchg
loop
and
lcall
inc
imulb
and
mov
loopne
sub
dec
add
mov
negb
leave
pop
andb
jmp
mov
loopne
rcrl
sbb
fidivrs
sahf
pop
outsl
clc
loope
jecxz
in
jg
imul
nop
pop
lea
push
push
scas
mov
mov
outsl
ja
dec
int
pusha
mov
sub
subb
lock
subb
jae
mov
loopne
push
add
and
sbb
push
mov
xchg
fs
jecxz
jo
mov
loope
fwait
les
pop
push
rolb
adc
add
aad
and
and
mov
repnz
and
test
sbb
lds
rolb
adc
mov
adc
sub
push
add
pusha
and
cli
cmp
loopne,pn
in
xchg
imul
enter
add
mov
inc
loopne
push
or
jbe
loop
mov
and
add
mov
mov
mov
xchg
jecxz
shlb
inc
push
loopne
xchg
cwtl
and
and
orb
loopne
mov
pusha
inc
pop
psllq
daa
pusha
jp
pop
mov
cmp
and
fimull
fisubrs
push
loopne
dec
icebp
jo
arpl
fyl2x
jnp
fdivr
hlt
mov
ret
daa
push
psrlw
ficomps
lock
mov
cmp
scas
andb
rcrb
or
and
sub
add
jecxz
mov
popf
fists
mov
shlb
aas
jne
fsubrl
sub
subb
and
adcb
mov
aaa
std
xor
xchg
lret
notb
mov
out
xor
and
inc
xchg
shlb
inc
inc
shlb
movsl
je
fistl
and
inc
sbbl
out
dec
lahf
sbb
leave
xchg
xchg
aas
sti
xor
add
mov
jmp
mov
xchg
pop
es
inc
mov
and
and
jmp
mov
rcrb
aas
xchg
pusha
aas
hlt
jnp
imul
std
mov
or
jmp
fsub
dec
sub
jno
out
or
mov
jge
push
js
imul
adc
stos
and
lock
call
shl
sbbl
lods
in
add
sbbb
and
ffreep
stc
sbbl
add
loopne
push
mov
cmp
sub
cmc
xor
lods
mov
movsl
sbb
pusha
hlt
sbb
sbb
cmc
jl
in
cmp
rolb
sbbb
int3
xchg
or
mov
and
pop
jmp
mov
mov
pop
inc
movsl
ja
out
out
and
push
loop
mov
push
iret
lret
test
pop
mov
inc
inc
jg
lret
js
out
pop
cmp
loopne
fs
push
mov
ret
repnz
mov
adc
in
mov
insb
jmp
insl
push
xchg
lods
jnp
inc
inc
mov
cwtl
mov
inc
cmp
sahf
mov
call
outsl
pop
xchg
adc
mov
lods
andb
shrb
repnz
and
add
mov
daa
std
add
rclb
pcmpgtb
push
add
das
xchg
aad
jg
frstor
add
dec
sub
mov
mov
mov
push
and
and
pusha
sbbb
xchg
xor
push
add
pusha
int
enter
pushf
test
add
sti
ss
xchg
andb
enter
push
movsl
jb
stos
pushf
pop
push
mov
fiaddl
and
jmp
imul
jge
sbb
mov
ss
sbb
and
push
lret
and
andb
pusha
push
mov
incb
lea
mov
and
lret
leave
mov
aad
mov
mov
sbb
roll
mov
xor
jg
jecxz
add
add
shlb
or
subb
sar
adc
cmpsl
movsb
mov
xor
cmpsb
andb
shll
and
shlb
or
iret
js
repnz
dec
mov
rolb
and
test
mov
in
out
loopne
push
out
sti
in
pop
aam
mov
enter
and
or
std
jmp
cmp
lcall
cmc
sub
pop
scas
loopne
sbb
sub
rcr
aas
mov
pusha
or
loopne
imul
pusha
and
xchg
js,pt
imul
jae
dec
push
lds
mov
cmc
arpl
pop
int3
sub
pusha
jns
cmp
shlb
out
scas
loopne
iret
sbb
fists
inc
push
cmp
adc
ja
add
inc
jmp
xor
insl
ret
out
out
jmp
mov
mov
pusha
dec
jp
xchg
ficoml
jecxz
js
dec
and
push
insl
inc
sbb
inc
mov
and
nop
setge
push
mov
jb
jg
scas
pop
pop
push
and
shr
cmp
mov
and
and
in
inc
push
call
scas
loopne
xor
pusha
add
cmp
mov
add
cmp
inc
lds
and
cmp
add
jmp
ja
mov
in
addb
sub
dec
mov
and
loopne
sbb
or
jb
pushf
sar
std
loop
scas
push
cs
sar
xor
mov
and
push
dec
push
adc
sub
outsl
mov
sbb
jb
sbb
xor
inc
inc
sub
jg
mov
jns
mov
and
in
or
pusha
pop
in
xor
cmpsb
loopne
jl
mov
push
push
fnsave
ljmp
loopne
push
shlb
jbe
loopne
lcall
or
mov
mov
jecxz
mov
pop
test
mov
push
and
pop
sub
andb
dec
xchg
idivb
mov
data16
stos
add
rcll
cmpsl
mov
mov
inc
imul
lock
clc
sbbl
mov
inc
pusha
add
andb
mov
inc
inc
or
andb
fdivp
pop
aad
jb
stos
shlb
pushf
sub
pusha
mov
push
and
andb
add
mov
mov
pusha
and
lret
sarl
stc
decl
or
add
cmp
cltd
cld
fldenv
addl
in
dec
sub
and
or
loopne
add
dec
fstl
mov
addb
sub
shrb
pusha
ja
and
stc
fldt
jbe
jbe
sub
mov
ljmp
andb
cmpsl
mov
insl
in
jne
xor
aam
test
adc
fwait
add
mov
or
and
pusha
rol
mov
gs
pusha
subb
mov
jo
mov
subb
jl
div
outsl
jp
icebp
sbb
fsubrp
fbld
inc
xchg
daa
fdivl
pusha
stos
data16
mov
and
add
movb
add
cmp
mov
sub
add
add
cltd
xor
in
push
add
mov
ret
jl
in
mov
and
and
test
sub
and
and
add
pusha
out
sbb
loopne
out
xchg
adc
ret
sbb
mov
ficoms
push
sbb
jecxz
movb
in
orl
pop
inc
and
loopne
addb
int3
insb
push
and
rol
add
mov
xchg
sub
fucomip
cmp
push
dec
and
pusha
cmpl
dec
lret
loope
das
mov
fldl
in
cmc
shlb
fdivrl
or
mov
rcl
pop
movsb
rolb
and
add
inc
lods
pusha
and
out
cmp
and
loope
shlb
hlt
push
mov
lods
dec
lds
pusha
mov
add
add
push
addr16
addb
sbb
jl
mov
sub
pop
lock
imul
add
dec
cmp
orl
mov
inc
inc
dec
xor
push
rclb
rol
and
jmp
pop
jne
dec
inc
sub
inc
adc
mov
pop
out
mov
out
sbb
rcrb
arpl
sti
add
and
into
mov
outsl
mov
loopne
push
int
inc
mov
sbb
mov
add
jp
pop
in
lods
inc
pusha
data16
push
sbb
addb
mov
in
sub
enter
loopne
addr16
rol
xchg
or
pusha
and
pusha
push
jecxz
xchg
push
sbb
std
mov
cmp
arpl
test
pusha
scas
test
outsb
xchg
cwtl
add
rclb
cwtl
movsl
mov
jmp
xor
addb
inc
mov
shr
fdivr
mov
pop
pop
int
mov
lret
test
and
push
out
fstpl
add
rcll
pusha
mov
push
loopne
sbb
rolb
imul
sar
adc
popa
jb
addb
stos
mov
add
adc
push
rolb
jnp
mov
stc
insl
loope
add
inc
jnp
sbb
decb
rol
test
adc
out
jo
ffree
xchg
loope
cwtl
cmpsl
xchg
addr16
adc
add
push
jl
mov
in
mov
rcrb
jb
aad
mov
call
shlb
and
inc
les
inc
shlb
mov
popa
inc
mov
inc
pop
addr16
mov
das
adc
and
xor
push
aas
stos
cmp
loopne
out
orl
test
and
inc
mov
inc
dec
inc
outsl
shlb
push
sbb
rep
pop
jbe
push
jl
dec
mov
pop
sbb
add
in
je
add
pop
xchg
rol
mov
sbb
nop
int
repnz
fisttpl
rolb
loopne
mov
push
das
mov
inc
loopne
jb
and
lea
sub
pop
jmp
inc
shrb
scas
addr16
outsb
add
dec
sub
rcrb
mov
fsubrl
iret
mov
add
add
inc
inc
mov
add
mov
mov
cld
add
and
pop
and
jo
movsb
andb
into
outsl
inc
mov
movsl
add
sbbb
inc
shrb
test
rorb
inc
mov
pop
sbb
stc
xor
mov
pop
sub
addb
cli
jns
or
loopne
fcomip
xchg
fisubl
inc
rolb
popf
pop
mov
push
and
jge
fcoml
mov
add
test
rolb
add
mov
inc
pusha
or
loopne
loopne
pushf
jecxz
xchg
and
and
mov
adc
mov
xlat
lcall
cmp
rol
in
gs
enter
xchg
xor
mov
mov
cwtl
and
lods
shlb
cmp
aam
jl
push
repz
mov
sub
sahf
add
jle
loopne
sub
loopne
sarb
cltd
mov
sarb
std
inc
mov
mov
inc
pop
lcall
cwtl
add
lock
ja
push
or
pusha
lock
rclb
xchg
xchg
cld
or
inc
mov
popf
in
pop
xlat
repz
enter
sbb
pop
mov
mov
mov
jmp
pusha
pop
xor
jg
out
dec
test
sar
add
int
push
push
pusha
mov
or
aas
adc
ret
adc
mov
xchg
push
mov
in
lcall
inc
pusha
or
mov
push
jge
jg
int3
rcrl
mov
addb
insb
test
pusha
mov
subb
mov
lahf
dec
lods
shlb
sahf
lods
pop
mov
push
and
xchg
shl
pop
cmp
pop
add
add
pop
clc
mov
pusha
rolb
js
pushf
jg
pop
test
rorb
mov
call
in
inc
aaa
xor
jo
dec
jl
mov
pop
int
js
sub
inc
das
push
loopne
push
sub
subb
xor
inc
inc
inc
sub
jg
mov
or
outsl
jle
lret
std
loop
jl
xchg
mul
lret
and
xor
sbb
mov
loopne
add
shr
iret
sarb
insb
aaa
lods
mov
rclb
mov
mov
leave
clc
repz
fimull
sbb
icebp
mov
mov
cmpsb
loopne
popf
mov
cmp
and
and
jge
inc
add
mov
mov
outsb
int
mov
dec
jo
lret
add
andb
loopne
jmp
push
in
clc
inc
in
call
sbb
rol
mov
scas
inc
xorb
add
mov
push
pop
dec
loop
push
mov
sbb
cmp
scas
jns
jo
inc
int3
sbb
andb
pusha
clc
cltd
popf
jl
xchg
cs
mov
xchg
bnd
xchg
cmc
pop
stc
outsb
roll
xor
aad
jl
add
pusha
pop
lock
or
inc
add
push
negl
add
ror
cmc
cmpsb
loopne
or
adc
rcr
addb
xor
loop
dec
jecxz
in
inc
and
arpl
sbb
mov
cmp
clc
and
inc
xchg
xor
mov
xchg
mov
push
xor
and
rclb
pusha
adc
adcb
inc
sbbb
push
jnp
loopne
cmp
adc
pop
adc
shlb
add
adc
mov
and
shlb
and
int
ja
aaa
repnz
pusha
ffreep
mov
adc
mov
and
sub
add
test
daa
fdiv
outsb
push
jb
push
sbb
sub
add
push
cld
push
mov
add
lahf
repz
inc
and
ds
loopne
call
xchg
xor
cs
imul
inc
mov
and
enter
push
mov
pop
xchg
and
mov
or
mov
push
pusha
and
add
mov
stos
mov
stos
inc
fistpll
shr
mov
mov
int3
fildll
movsb
add
jns
pop
fdivl
add
xor
imul
sub
pusha
jle
xor
mov
mov
mov
out
sub
aaa
push
pand
cmp
sub
pusha
scas
rolb
mov
adcb
ljmp
sahf
int3
push
xchg
mov
outsl
lcall
cld
jne
push
xlat
enter
pusha
push
fwait
push
cmp
aas
inc
aam
mov
es
and
je
mov
fwait
in
pop
imul
das
cltd
aas
jne
pusha
add
mov
in
add
shrl
xor
sti
push
mov
cmp
and
add
inc
je
and
and
into
sbb
dec
imul
and
jg
imul
add
addb
jge
xchg
push
addr16
shl
mov
add
shll
vandpd
or
jg
dec
inc
dec
mov
add
mov
jbe
movsl
cld
out
or
loopne
dec
dec
add
ror
inc
in
mov
in
mov
loopne
mov
push
cli
jl
divl
mul
sub
sub
pop
fsubs
loope
pusha
inc
cmc
push
mov
mov
cld
outsb
jecxz
imul
pusha
and
xchg
es
lahf
repz
push
push
adc
pusha
add
pusha
and
jb
push
pushf
xchg
aam
lcall
mov
push
shl
mov
pextrw
mov
push
dec
lods
fstl
fstps
loope
mov
stc
push
pop
ficoms
adc
push
sarl
push
inc
loopne
ficomps
cmpsl
sub
mov
and
sbb
pusha
mov
push
jno
add
repnz
xchg
orb
sub
and
aaa
push
push
shr
ja
addb
mov
shlb
mov
rolb
xchg
mov
cmp
loopne
dec
fnstenv
and
insb
nopl
xor
mov
and
inc
and
pusha
push
andb
sbb
lret
insl
into
sbb
and
loopne
mov
inc
xchg
cld
int
lods
inc
jge
push
daa
insl
and
lea
mov
not
sub
pop
inc
ss
cmovl
out
call
gs
mov
sub
je
add
dec
sarb
loopne
inc
mov
stos
andb
iret
cli
mov
jae
iret
cmp
xchg
in
aad
sahf
mov
rolb
cmpsb
andb
inc
dec
mov
in
xor
ds
lret
sti
pop
insb
add
add
repnz
or
call
inc
mov
shl
sub
adc
add
jp
and
mov
and
inc
mov
pop
notl
cs
or
loopne
push
inc
and
cmp
in
insl
mov
ficomps
ret
push
add
ss
pop
xor
out
loopne
into
andb
push
outsl
lret
pop
aas
aam
cmpsl
and
loopne
std
les
jecxz
xchg
push
add
mov
mov
cmp
ret
or
pusha
or
loopne
int
sbb
and
loopne
fucom
or
and
pusha
push
mov
loopne
mov
push
mov
test
ret
ljmp
icebp
mov
cmp
lds
insb
jnp
xor
mov
pushf
test
in
and
aad
add
cmp
add
sub
or
or
mov
xchg
push
add
iret
add
dec
cmp
mov
adc
pop
dec
mov
stc
mov
xorb
adc
insl
loopne,pn
cmpsl
xor
push
je
shr
xchg
and
ljmp
mov
add
inc
loopne
orl
cmp
lahf
and
inc
jl
adc
in
shlb
and
pusha
or
and
add
inc
add
pusha
xchg
loopne
out
fimull
mov
dec
jp
cmc
mov
mov
lahf
ss
rclb
and
ja
addb
jecxz
out
scas
mov
inc
icebp
pop
mov
cmpsb
and
clc
shr
xchg
lds
cmpsl
lahf
outsb
add
les
into
xchg
dec
insb
pop
sbb
add
aam
push
shlb
test
inc
cmpsl
lcall
inc
mov
jmp
int
lods
sub
and
mov
lds
inc
push
lahf
rcrb
or
or
mov
mov
fsubrp
das
daa
shl
lods
shlb
jp
push
andb
jae
andb
xchg
push
pusha
add
sbb
aaa
imul
hlt
jns
dec
sub
stos
or
andb
clc
mov
push
fstps
andb
xchg
aam
xor
arpl
jae
mov
jb
sub
addb
pusha
adc
cmp
ret
cltd
cmp
loopne,pn
fisttps
sbb
sti
xchg
sahf
lea
outsb
cmc
cmpsl
insl
cmp
jle
adc
jo
jge
cmpsb
add
das
popa
mov
inc
jnp
sbb
inc
pop
ja
in
sbb
and
pop
outsl
mov
fcoml
mov
scas
andb
and
loop
push
insl
xor
inc
adc
xlat
xor
cmpsb
inc
inc
xchg
sbb
test
shlb
cmp
mov
inc
in
aam
sbb
loopne
js
lahf
add
or
add
and
aam
mov
sarl
push
mov
rol
aam
mov
cmpsl
das
push
lahf
jno
icebp
clc
push
lret
mov
and
shrb
pusha
push
in
shrl
cmpb
jg
test
mov
subb
rol
ds
mov
lock
cmp
fisubrl
dec
mov
inc
pusha
loope
add
mov
daa
imul
jmp
sub
sbbb
repz
sahf
inc
aam
mov
inc
and
and
xchg
ss
loopew
sub
jo
je
jb
add
addb
mov
fsubrs
mov
sub
shr
and
and
rolb
jg
lods
pusha
loopne
mov
cmp
cmp
ds
mov
add
hlt
popf
jae
mov
pop
inc
movsl
pop
int
shlb
cs
mov
cmp
sub
inc
push
stos
pusha
mov
pop
pop
fnstsw
pusha
add
mov
dec
xchg
mov
addb
andb
xor
scas
in
jecxz
sub
inc
loopne
cmpl
mov
mov
pusha
mov
mov
dec
mov
mov
lgs
shlb
or
and
and
inc
popf
sbb
in
sbb
data16
ret
ja
push
fistpll
jo
daa
outsl
jl
xor
mov
inc
xchg
lods
and
rclb
in
jge
sahf
cld
sub
pusha
jne
fistps
jno
repnz
mov
mov
push
jo
cli
jg
xor
xlat
adc
push
nop
loopne
mov
add
mov
mov
rolb
add
pusha
pusha
pusha
xchg
pop
ds
mov
add
cmp
shlb
pusha
dec
mov
call
mov
inc
or
or
inc
repnz
push
sub
loopne
mov
inc
loopne
cwtl
das
pusha
push
cltd
mov
inc
cmp
mov
cld
outsb
daa
push
inc
orb
fdivrp
orl
inc
add
std
fsubrs
inc
scas
add
xchg
and
pusha
int
jmp
clc
dec
mov
cmpsl
repnz
repnz
outsl
sub
and
inc
inc
dec
jb
pusha
sarb
xor
in
xchg
lods
jno
ret
cwtl
lods
jl
subl
cwtl
dec
outsb
xchg
cmpl
int3
imulb
cltd
xchg
add
sub
inc
jae
cs
inc
or
add
ja
xchg
int
cmp
pushf
movsb
mov
imul
add
and
ja
mov
mov
or
mov
into
cmp
jmp
mov
loopne
ja
shlb
ret
mov
sub
inc
and
inc
push
adc
movsl
test
and
rol
push
imul
add
rolb
sti
inc
jecxz
lods
inc
cmp
scas
inc
add
xorb
addr16
push
lret
aam
add
mov
mov
out
inc
rcll
lds
push
idiv
pop
addr16
add
out
sub
adcb
leave
leave
int
push
inc
and
mov
addb
insl
mov
stc
out
xor
addb
fdivl
add
fcompl
push
jmp
jmp
mov
jns
andb
inc
repnz
out
inc
dec
adc
loopne
adc
pop
in
sar
mov
mov
out
inc
pushf
and
shrb
loopne
mov
jb
sbb
addl
subb
xchg
xchg
fsub
lds
loopne
enter
cmpb
pusha
xchg
test
cmc
insb
pop
mov
je
andb
and
call
inc
xchg
or
xorb
lret
cmpsb
pusha
cmp
or
jge
andb
arpl
mov
add
add
test
cmpb
inc
jecxz
hlt
fstpl
jne
fidivrl
adc
mov
out
lods
outsl
adc
nop
gs
xchg
sub
insb
cmpsb
inc
inc
mov
loopne
add
and
mov
inc
xor
adc
insb
outsb
and
and
push
call
popf
xchg
or
add
sbb
or
das
or
pusha
jns
pop
lcall
mov
ja
xchg
xchg
pop
sbb
mov
rcll
int
fwait
mov
pop
js
sbb
int
cmpsl
in
rcr
out
sti
stos
mov
icebp
clc
in
pop
inc
adc
inc
pusha
push
add
fimull
and
iret
lcall
push
and
cmp
sarb
outsb
in
fcoml
xchg
inc
jmp
pusha
and
and
call
xchg
and
push
repz
pusha
shll
in
out
ret
and
and
mov
jle
xor
in
cwtl
inc
cmpsl
cmp
rolb
and
sub
jp
in
rol
insl
cli
dec
xor
mov
mov
outsb
stos
pusha
inc
xor
cmpsb
mov
inc
lret
imul
pusha
mov
xor
nop
push
and
push
push
mov
mov
add
cmp
aas
andb
aam
mov
pusha
sub
mov
out
stc
inc
mov
mov
rorb
push
pop
mov
xor
pusha
push
call
rclb
and
arpl
add
fimull
shlb
test
xorb
and
xlat
jnp
or
sbbb
xchg
pop
xchg
test
add
cmp
and
pop
filds
into
sahf
clc
in
ds
rolb
loopne
fists
push
sarb
sbb
mov
xor
push
ljmp
add
das
inc
scas
mov
fs
fiaddl
cmp
xor
cmp
fs
mov
mov
out
les
and
das
pop
fcompl
gs
push
sbb
xchg
jl
xchg
push
pusha
mov
xlat
mov
pop
jbe
rolb
pusha
pushf
push
das
sub
inc
mov
rorl
ja
xor
and
cld
shl
push
sub
lods
rol
lds
in
push
testb
and
cmp
mov
push
sbbl
mov
stos
and
stos
inc
loopne
fisttpl
jle
pop
fstps
mov
add
scas
shl
movsb
inc
add
dec
iretw
repz
mov
add
mov
jo
sbb
iret
icebp
icebp
int3
jne
icebp
test
and
cmp
add
mov
push
gs
aam
sbb
and
jne
xchg
sub
jle
data16
xor
negl
push
rcl
inc
ljmp
pushf
xchg
loopne
pusha
mov
pusha
add
gs
pcmpgtw
dec
std
lds
loopne
push
rcrl
push
mov
mov
pusha
adc
and
sub
inc
test
test
add
shlb
lods
andb
and
insl
stos
inc
rol
mov
loopne
inc
lock
inc
pushf
cmp
sbb
arpl
push
jp
inc
and
stos
xor
cmc
sbb
shlb
push
pop
sub
mov
jo
jmp
pusha
dec
push
insl
mov
add
ret
cmp
xchg
mov
xchg
aas
xchg
repnz
mov
and
in
adc
loop
fwait
sbb
loopne
andb
or
mov
test
scas
or
add
push
mov
lret
mov
push
and
gs
jmp
add
addb
loopne
addb
shufps
and
icebp
scas
mov
arpl
push
cmpsl
cwtl
ja
fcmovb
cmpsb
pusha
loopne
cmp
aam
mov
fwait
mov
push
jle
lret
sbb
jl
lods
ss
xchg
sbb
fistpll
movsl
add
test
and
fsubl
and
mov
cmp
sub
and
jae
adc
push
andb
and
es
jecxz
je
or
enter
jo
push
icebp
mov
and
addb
inc
xchg
sbb
fdivl
lret
andb
cs
inc
fisttpl
mov
adc
push
dec
iret
or
rclb
inc
dec
push
jbe
mov
aas
dec
fwait
test
andb
leave
push
out
icebp
cmp
ret
inc
mov
loop
repnz
enter
out
inc
pusha
lods
inc
out
sarb
cmp
inc
shlb
fsub
andb
stos
push
nop
pop
add
shlb
inc
call
lahf
iret
sub
movsb
mov
add
mov
push
add
add
xchg
test
adc
mov
enter
pushf
adc
mov
xor
rorb
push
addb
mov
out
and
sti
lret
addb
in
push
fsubrs
sub
inc
add
xor
dec
test
and
jmp
test
rolb
into
add
inc
sbb
and
push
mov
cltd
jb
xor
sub
ss
cmp
dec
sbbl
and
shrl
or
jge
push
sub
and
sahf
out
sbb
sbb
xchg
repz
loopne
adc
sub
mov
jmp
xchg
js
ret
cmpsb
add
and
jnp
andb
and
inc
aas
xor
ljmp
mov
shlb
push
fwait
dec
mov
xchg
scas
pop
stc
inc
add
cmc
and
mov
dec
faddp
mov
xor
and
push
hlt
xchg
out
movsb
pusha
and
inc
inc
adc
rcrb
and
push
pusha
add
pusha
add
cld
jb
cs
rorb
shlb
jg
mov
nop
mov
pusha
add
addb
cmpsb
inc
add
jmp
push
sub
mov
xorb
jmp
pushf
aam
or
inc
ret
mov
out
push
and
adc
mov
add
rcll
repnz
jle
loopne
push
and
push
and
and
adc
and
out
daa
jmp
inc
cmpb
mov
cmp
jb
xchg
cmp
mov
mov
aas
leave
rcll
icebp
in
mov
popa
icebp
pop
repz
xchg
pop
jl
sarb
roll
and
rclb
jno
jb
mov
lock
or
addb
loope
scas
jp
inc
shlb
sub
push
sbb
push
insb
push
loopne
bound
inc
ror
push
test
cmp
mov
pop
and
lret
ja
or
loopne
repnz
mov
ljmp
add
and
and
iret
or
add
and
hlt
into
and
dec
sub
sbb
inc
testl
fnstcw
repz
mov
sub
inc
mov
add
add
rcrb
push
pusha
inc
andl
dec
mov
dec
test
aad
inc
cld
mov
das
pop
testb
fbstp
fsubr
push
push
insl
idivl
add
pusha
pop
in
adc
lret
mov
push
add
sbbb
jmp
rolb
and
cmp
clc
sbb
jp
pop
cmp
adcl
xor
pop
ja
les
dec
hlt
clc
loope
inc
mov
into
push
mov
mov
ja
jmp
cwtl
mov
add
mov
filds
mov
pusha
andb
dec
cwtl
or
pusha
inc
or
pusha
int
push
xor
dec
insl
fidivs
push
cmpsl
push
mov
add
xchg
cmp
loopne
cmpsb
loopne
icebp
in
or
mov
push
jno
mov
enter
add
dec
lods
pcmpeqw
push
add
sar
lea
ljmp
hlt
xchg
pop
movsb
shl
stc
sti
inc
lock
lock
mov
in
lods
out
les
int3
fbld
nop
push
testw
add
add
loopne
mov
lock
std
jl
mov
lds
cmp
je
mov
rclb
ucomiss
sti
loop
push
jns
ret
inc
inc
pop
cmp
and
add
cmp
stos
add
mov
rcrb
mov
and
rclb
adc
aad
sbb
xor
loopnew
stos
adc
mov
shl
xchg
xchg
nop
nop
inc
add
orb
test
inc
push
pusha
shl
push
xor
xor
addb
je
pop
scas
inc
orb
inc
jg
data16
sahf
and
addr16
std
and
loopne
jg
les
fcomp
or
add
cli
push
andb
rol
or
inc
mov
cmp
inc
loopne
in
or
jmp
dec
mov
cmp
scas
add
and
mov
mov
cwtl
out
mov
imul
and
shlb
pop
xor
pop
stc
sbb
andb
push
mov
adc
inc
inc
nop
jns
out
cmp
outsb
lret
and
js
adc
add
xchg
hlt
mov
sbb
leave
or
pusha
sbb
fnstcw
lcall
stos
les
clc
flds
and
mov
sub
js
inc
and
js
andb
mov
dec
push
das
dec
call
inc
test
sti
test
loopne
xchg
and
loop
push
sbb
inc
and
nop
push
movsl
or
loopne
jns
pop
and
mov
outsb
daa
daa
jg
test
pop
cwtl
push
pop
sbb
and
test
inc
mov
lock
in
inc
loopne
stos
loopne
xor
aad
pop
cmp
leave
sbb
ja
xor
mov
lar
in
cmp
aad
push
loopne
xchg
jne
jne
or
lahf
out
pop
and
and
loop
cmc
notl
xlat
andb
insl
push
mov
pop
xor
or
rcrb
mov
dec
mov
js
jae
lcall
lcall
push
mov
test
and
push
rcll
repz
fwait
cmp
or
addb
pusha
ja
fstl
movsl
data16
loopne
hlt
arpl
rolb
push
in
xor
imul
xchg
fisubrl
mov
imul
push
repnz
pusha
std
cmp
xlat
mov
mov
loopne
push
in
ss
pop
enter
xlat
mov
mov
and
cmpsb
mov
mov
test
jl
adc
pusha
and
push
jp
outsl
stos
and
icebp
fwait
icebp
xor
test
not
insl
mov
shl
andb
and
or
add
daa
gs
jns
jno
mov
and
lods
pusha
inc
lret
or
out
jge
jo
std
jb
loopne
jo
mov
call
cltd
dec
jecxz
je
pop
or
popa
jp
scas
mov
jp
les
pusha
pusha
loope
lds
inc
inc
push
rolb
mov
xchg
jge
pop
sbb
push
push
lods
inc
add
inc
inc
stos
adc
loopne
cmp
sbb
das
pop
nop
jb
xor
outsl
jae
imul
inc
pop
xor
aas
ja
sub
int3
jp
mov
inc
fwait
jge
dec
sbb
jno
jg
js
into
dec
fcoms
xor
int
lea
and
leave
xchg
mov
sub
ret
push
lods
mov
int
cmc
pop
movsl
mov
mov
shl
dec
mov
loopne
bound
aad
sub
jb
mov
sub
rcrb
lock
jmp
int3
pop
rolb
push
push
mov
pop
test
das
or
jo
add
pusha
adc
iret
jo
loopne
std
mov
xchg
out
mov
pusha
lds
mov
adc
jns
incb
add
and
pop
call
lret
add
mov
cmpsl
in
nop
xor
mov
enter
and
add
xchg
pusha
jecxz
mov
test
sarl
mov
mov
fbstp
adc
xchg
pause
dec
jne
pop
add
inc
js
inc
cmp
sbb
movsl
fidivrl
pop
in
sti
testb
and
sti
shrl
jecxz
or
rclb
popa
xchg
clc
adc
pop
jle
mov
add
inc
out
ja
add
push
mov
loopne
inc
add
jmp
or
cli
cmp
dec
pop
sbb
loopne
jne
das
pushl
jge
addb
push
das
rorb
andb
sbb
cmp
xor
outsl
cmp
popa
and
and
sub
add
lret
aas
lret
adc
sbb
std
sti
fs
clc
jnp
mov
dec
sbb
sub
sbb
fs
and
pusha
andb
out
hlt
mov
push
fstps
jnp
and
lcall
mov
pusha
inc
pop
std
addl
out
xchg
rcrl
and
sbb
xchg
pusha
mov
ljmp
imul
std
ss
dec
clc
mov
rcrb
xchg
and
addb
loopne
imul
pop
ss
add
add
jno
jmp
loopne
lods
jle
out
andb
pop
ret
stos
pusha
loopne
dec
push
xchg
loopne
pop
xor
and
addr16
mov
stos
mov
insb
cmp
inc
mov
and
add
jne
in
xor
push
sub
call
xchg
test
mov
jmp
addl
test
mov
inc
push
mov
addb
ja
mov
loopne
inc
rclb
jae
dec
fs
fcoml
mov
sub
jp
ds
mov
and
add
ret
mov
inc
push
mov
shr
or
and
adc
inc
and
cmp
mov
push
loopne
aam
sbb
loop
loopne
out
cld
jno
push
inc
adc
mov
nop
rclb
or
loopne
in
in
ja
mov
inc
or
sbbb
aad
or
addb
adc
lahf
sti
xor
loop
imul
aad
cmp
push
loope
mov
inc
lock
rol
shlb
test
ficoml
mov
add
push
scas
shlb
hlt
sub
cmp
inc
and
mov
mov
rcrb
mov
out
shrl
insb
inc
adc
mov
nop
and
loopne
inc
and
lret
dec
insl
loopne
sbb
jecxz
cs
pusha
ret
lret
test
mov
shlb
aad
add
sahf
cli
or
xor
rolb
and
xchg
xchg
add
push
fsub
xchg
scas
add
arpl
inc
add
rolb
dec
repz
int3
bound
ret
mulb
dec
pop
cmpsb
loopne
push
mov
scas
add
adc
push
jp
mov
shrb
sbbb
fildll
dec
nop
out
add
mov
jno
sub
inc
mov
fldl
leave
fdivl
aas
int
sub
sub
inc
fimuls
js
and
negb
push
jae
insb
jp
fcomp
into
into
stos
and
outsb
or
sarb
xchg
popf
and
and
sub
inc
cmp
mov
lock
test
sbb
mov
adc
cld
jno
xchg
mov
add
pop
lock
pop
rorl
mov
and
mov
sbbb
add
rolb
add
bswap
pop
or
mov
push
outsb
aam
andb
fstl
pop
cmp
push
jle
js
loopne
jl
mov
pop
fadds
and
enter
loopne
xchg
and
mov
orb
in
ljmp
int
xor
adc
popa
inc
dec
add
loopne
pop
xchg
pop
sub
add
sub
loopne
aas
das
xchg
mov
pusha
fmuls
and
mov
loop
mov
into
pop
jecxz
or
inc
sub
mov
push
andb
mov
pop
das
cltd
cmpsl
inc
xchg
nop
adc
repz
cld
loopne
test
pusha
repnz
mov
mov
repnz
shlb
pop
dec
hlt
and
or
mov
xchg
push
jmp
std
bnd
insl
and
aaa
pop
jg
mov
xorl
pusha
rorb
divb
mov
cmpsb
pusha
sarb
shlb
xchg
push
pop
xchg
dec
lret
and
add
mov
inc
add
enter
add
inc
loopne
add
jnp
fwait
popa
fucomp
lds
inc
inc
lods
add
xor
daa
js
jecxz
add
iret
mov
mov
xchg
pop
jno
xchg
xchg
test
xorb
mov
lret
sbb
sbbb
loopne
mov
loopne
sbb
inc
inc
outsb
mov
xor
and
call
lret
sti
pop
push
mov
push
add
test
das
mov
and
push
mov
faddl
ljmp
movsb
inc
pusha
push
cmp
mov
sbb
xor
mov
mov
jne
rorb
lock
ds
decb
mov
inc
clc
mov
jnp
jmp
sar
sbb
fwait
cmc
push
mov
mov
stos
adc
inc
jmp
stos
jmp
jg
adc
xor
out
loopne
push
stos
xor
jb
or
call
sub
iret
pop
lods
shlb
aam
cld
lds
gs
mov
loopne
dec
xor
movsb
and
les
mov
sbb
in
jecxz
and
bnd
xchg
fimuls
loopne
shl
push
popf
jne
dec
loopne
inc
add
add
cmp
inc
push
jb
adc
rorb
mov
shrl
sub
mov
lock
das
lret
mov
adcl
scas
sub
cltd
sbb
add
xchg
inc
jno
std
mov
mov
test
pop
push
cmp
mov
inc
movsl
out
mov
ror
ja
inc
inc
xor
mov
jmp
jns
mov
dec
cmp
mov
jno
dec
sbb
mov
dec
stc
outsb
mov
test
enter
xor
xor
lods
inc
jle
je
mov
inc
mov
aaa
sub
shl
shll
xor
loop
shlb
outsl
mov
mov
dec
mov
je
ljmp
and
pop
xor
scas
push
adc
fiaddl
sahf
sub
dec
andb
jge
add
cs
rclb
xchg
sbb
mov
mov
repnz
push
pusha
mov
pop
and
je
mov
jb
test
mov
and
sbb
add
test
jne
jg
rorb
pushf
sbb
loopne
stos
scas
jno
ret
fmull
jl
ret
push
sbb
