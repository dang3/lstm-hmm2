sub
loopne
adc
mov
movsl
loopne
in
movsl
loopne
test
loopne
pop
movsb
loopne
cmp
loopne
andb
mov
movsl
loopne
loopne
loopne
push
cmpsb
loopne
leave
mov
loopne
add
mov
movsl
loopne
or
loopne
inc
test
mov
movsl
loopne
mov
loopne
or
loopne
push
movsb
loopne
ja
loopne
andl
loopne
into
cmpsl
loopne
add
loopne
cmp
loopne
mov
loopne
stc
movsb
loopne
mov
cmpsb
loopne
dec
mov
loopne
add
loopne
inc
test
loopne
inc
test
mov
movsl
loopne
and
loopne
fsubrl
loopne
and
mov
movsl
loopne
xchg
loopne
pop
movsb
loopne
cmpsb
loopne
lea
loopne
dec
movsb
loopne
cli
mov
loopne
xchg
mov
loopne
outsl
cmpsb
loopne
mov
loopne
out
movsb
loopne
ret
mov
cmpsb
loopne
add
loopne
or
loopne
adc
loopne
pusha
test
mov
cmpsl
loopne
mov
loopne
jecxz
loopne
test
cmpsb
loopne
mov
loopne
mov
loopne
jae
loopne
lock
mov
test
mov
test
mov
cmpsb
loopne
andl
mov
test
loopne
iret
cmpsb
loopne
mov
loopne
pop
test
loopne
xlat
mov
loopne
call
movsl
loopne
pusha
cmpsl
loopne
stc
mov
loopne
xor
mov
mov
loopne
xor
loopne
fwait
mov
loopne
cmpsl
loopne
and
loopne
jbe
loopne
mov
loopne
scas
cmpsl
loopne
enter
pop
test
mov
cmpsl
loopne
inc
movsl
loopne
push
mov
loopne
xchg
cmpsb
loopne
ljmp
mov
cmpsl
loopne
daa
cmpsl
loopne
cmp
loopne
or
loopne
inc
movsb
loopne
lret
mov
movsl
loopne
mov
mov
loopne
fisubrl
loopne
fisubrl
loopne
jmp
mov
loopne
in
loopne
mov
movsl
loopne
mov
loopne
in
cmpsb
loopne
je
loopne
aaa
test
mov
test
mov
test
mov
movsb
loopne
cmpsl
loopne
imulb
loopne
shll
loopne
mull
loopne
add
loopne
into
cmpsb
loopne
movsl
cmpsb
loopne
subl
loopne
shlb
loopne
dec
movsb
loopne
push
test
loopne
sbb
mov
test
loopne
mov
loopne
push
movsl
loopne
shll
loopne
loopne
mov
mov
cmpsb
loopne
dec
mov
loopne
loop
loopne
test
loopne
mov
loopne
inc
mov
loopne
pop
movsb
loopne
dec
mov
loopne
adc
mov
test
mov
cmpsl
loopne
cs
mov
mov
loopne
xchg
movsb
loopne
add
loopne
or
loopne
cmc
mov
loopne
xchg
cmpsl
loopne
sti
cmpsl
loopne
js
loopne
movsb
test
mov
cmpsl
loopne
mov
mov
loopne
push
test
mov
mov
loopne
movsl
movsl
loopne
jmp
mov
loopne
mov
loopne
mov
loopne
repz
loopne
xchg
movsl
loopne
inc
cmpsb
loopne
hlt
mov
loopne
push
movsb
loopne
iret
movsb
loopne
cmpsb
loopne
or
loopne
mov
movsl
loopne
cli
cmpsl
loopne
lock
loopne
les
loopne
jmp
loopne
jge
loopne
cmp
loopne
jmp
movsb
loopne
sahf
test
mov
mov
loopne
insb
movsl
loopne
jo
loopne
repnz
loopne
shlb
loopne
lods
mov
loopne
mov
loopne
adc
loopne
in
mov
loopne
aad
loopne
push
movsb
loopne
pop
test
loopne
push
mov
loopne
pop
movsl
loopne
js
loopne
inc
mov
loopne
sbb
movsb
loopne
jle
loopne
or
loopne
aad
loopne
adc
loopne
adc
loopne
jmp
mov
test
mov
test
mov
test
mov
test
loopne
pop
test
loopne
jbe
loopne
loopne
inc
movsl
loopne
shlb
loopne
mov
movsb
loopne
push
cmpsb
loopne
adc
loopne
jbe
loopne
mov
movsl
loopne
mov
cmpsb
loopne
sub
mov
loopne
push
loopne
frstor
loopne
hlt
mov
loopne
shll
loopne
ret
test
mov
mov
loopne
leave
movsb
loopne
int3
movsb
loopne
pop
mov
loopne
or
movsl
loopne
sub
loopne
sub
loopne
cmpsb
movsl
loopne
dec
mov
loopne
scas
mov
loopne
xor
loopne
mov
loopne
loop
loopne
xchg
cmpsb
loopne
lock
loopne
icebp
mov
loopne
jno
loopne
xor
loopne
inc
cmpsl
loopne
ja
loopne
mov
cmpsl
loopne
sub
loopne
jle
loopne
cmp
loopne
jno
loopne
ja
loopne
cmpsb
cmpsl
loopne
leave
cmpsl
loopne
add
loopne
inc
cmpsl
loopne
jmp
mov
cmpsb
loopne
adc
loopne
cmpsb
test
mov
mov
loopne
jb
loopne
inc
mov
loopne
outsl
test
mov
mov
loopne
jo
loopne
fisubs
loopne
xor
loopne
lods
mov
loopne
movsb
loopne
mulb
mov
mov
loopne
into
test
mov
cmpsb
loopne
adc
mov
loopne
or
mov
movsl
loopne
out
loopne
and
loopne
sub
loopne
add
loopne
andl
loopne
movsb
loopne
push
test
loopne
cmpsb
loopne
scas
mov
loopne
mov
loopne
and
loopne
dec
mov
loopne
out
movsb
loopne
cmpsl
mov
loopne
xchg
mov
loopne
sub
loopne
sti
mov
loopne
hlt
mov
loopne
push
mov
loopne
lock
loopne
movsl
mov
loopne
test
mov
loopne
adc
test
loopne
inc
mov
loopne
je
loopne
loope
loopne
mov
mov
loopne
cmp
mov
loopne
adc
loopne
test
mov
mov
loopne
andb
fldenv
loopne
jns
loopne
jo
loopne
cmpsl
loopne
repz
loopne
lret
mov
loopne
clc
cmpsb
loopne
xor
cmpsl
loopne
jno
loopne
loopne
loopne
popf
cmpsb
loopne
std
test
mov
cmpsb
loopne
mov
loopne
mov
loopne
xchg
mov
loopne
sbb
movsb
loopne
andb
mov
cmpsb
loopne
jnp
loopne
add
loopne
add
loopne
push
mov
loopne
jle
loopne
mov
loopne
bound
loopne
loope
loopne
mov
loopne
cmpsb
loopne
aad
loopne
adc
loopne
push
cmpsb
loopne
popf
test
mov
test
mov
mov
loopne
mov
cmpsl
loopne
mov
loopne
and
loopne
ret
test
mov
cmpsl
loopne
stos
mov
loopne
movsb
loopne
movsl
mov
loopne
push
test
mov
mov
loopne
aad
loopne
inc
cmpsl
loopne
mov
loopne
imul
mov
test
mov
cmpsl
loopne
loop
loopne
in
mov
loopne
dec
mov
loopne
mov
loopne
loop
loopne
jne
loopne
test
mov
mov
loopne
cmp
loopne
cmpsl
mov
loopne
aam
loopne
andb
mov
movsb
loopne
stos
mov
loopne
stos
movsl
loopne
das
movsl
loopne
push
mov
loopne
pop
movsl
loopne
cmp
loopne
mov
loopne
imul
mov
movsb
loopne
outsl
mov
loopne
stc
cmpsb
loopne
mov
loopne
mov
loopne
out
mov
loopne
pop
cmpsb
loopne
or
loopne
adc
loopne
mov
cmpsb
loopne
inc
movsl
loopne
cmp
loopne
in
movsl
loopne
mov
loopne
ret
cmpsb
loopne
arpl
loopne
lret
mov
cmpsl
loopne
movsl
test
mov
test
loopne
test
loopne
sti
mov
loopne
mov
mov
loopne
push
cmpsb
loopne
and
loopne
mov
loopne
cmp
loopne
jl
loopne
jae
loopne
out
loopne
mov
loopne
pop
movsb
loopne
cmc
mov
loopne
push
cmpsl
loopne
mov
loopne
imul
mov
mov
loopne
test
loopne
mov
loopne
and
loopne
jl
loopne
jnp
loopne
push
movsb
loopne
xchg
mov
loopne
stos
movsb
loopne
jmp
loopne
std
mov
loopne
pop
cmpsb
loopne
push
test
mov
mov
loopne
mov
cmpsb
loopne
sbb
movsl
loopne
dec
movsb
loopne
mov
loopne
test
loopne
stos
test
mov
test
mov
movsb
loopne
xor
loopne
sbb
loopne
aaa
movsb
loopne
jns
loopne
xor
mov
test
mov
mov
loopne
and
loopne
pop
cmpsl
loopne
pop
test
mov
test
loopne
and
loopne
pop
mov
loopne
fldt
loopne
mov
loopne
mov
loopne
popf
cmpsb
loopne
sbb
loopne
cmp
mov
mov
loopne
lock
loopne
mov
loopne
adc
mov
mov
loopne
sahf
test
mov
movsl
loopne
mov
loopne
js
loopne
shld
movsb
mov
loopne
int
loopne
dec
test
mov
movsl
loopne
add
cmpsl
loopne
mov
loopne
pushf
test
mov
movsl
loopne
mov
test
mov
movsb
loopne
or
cmpsb
loopne
mov
loopne
or
loopne
sub
cmpsb
loopne
mov
loopne
mov
loopne
fsubs
loopne
sbb
loopne
cmp
loopne
add
cmpsb
loopne
outsl
movsl
loopne
ljmp
mov
test
mov
mov
loopne
call
cmpsl
loopne
jo
loopne
sbb
loopne
dec
test
loopne
push
cmpsb
loopne
xor
loopne
and
mov
loopne
inc
test
mov
cmpsl
loopne
push
cmpsl
loopne
and
loopne
stos
mov
loopne
pop
test
loopne
xor
loopne
cmpsl
cmpsb
loopne
jl
loopne
jb
loopne
arpl
mov
mov
loopne
aam
loopne
in
loopne
mov
loopne
jnp
loopne
mov
loopne
push
loopne
adc
loopne
mov
loopne
mov
cmpsl
loopne
cmpsl
mov
loopne
shll
mov
mov
loopne
ret
mov
test
mov
cmpsb
loopne
sub
loopne
aad
loopne
mov
loopne
in
loopne
lahf
mov
loopne
and
loopne
sbb
loopne
cmp
loopne
fsubl
loopne
imul
add
mov
cmpsb
loopne
adc
loopne
cltd
cmpsb
loopne
lds
mov
mov
loopne
jecxz
loopne
stc
movsb
loopne
cli
test
mov
mov
loopne
cwtl
movsb
loopne
pop
mov
loopne
cmp
loopne
xchg
cmpsb
loopne
cmp
loopne
adc
loopne
andb
mov
mov
loopne
fldcw
loopne
push
cmpsb
loopne
movsl
loopne
sbb
loopne
fsubs
loopne
xor
loopne
pop
cmpsl
loopne
movsl
movsl
loopne
dec
mov
loopne
inc
movsl
loopne
xor
mov
movsl
loopne
test
loopne
and
mov
mov
loopne
mov
loopne
add
cmpsl
loopne
mov
loopne
ret
mov
loopne
lods
movsl
loopne
call
movsl
loopne
xchg
mov
loopne
inc
test
mov
mov
loopne
nop
movsl
loopne
mov
loopne
out
loopne
out
movsl
loopne
fldenv
loopne
out
loopne
jns
loopne
aam
loopne
andb
mov
cmpsb
loopne
and
loopne
add
loopne
fwait
cmpsl
loopne
aas
mov
loopne
mov
loopne
icebp
test
mov
mov
loopne
push
movsl
loopne
in
loopne
jne
loopne
sbb
cmpsb
loopne
mov
movsb
loopne
cmpsl
mov
loopne
ljmp
mov
movsb
loopne
mov
loopne
fsubs
loopne
sub
loopne
inc
cmpsb
loopne
test
mov
movsl
loopne
dec
mov
loopne
xchg
mov
loopne
jp
loopne
or
loopne
xlat
mov
loopne
scas
mov
loopne
scas
mov
loopne
movsl
loopne
imul
loopne
dec
movsl
loopne
mov
loopne
xor
loopne
lock
loopne
mov
loopne
inc
test
loopne
dec
test
mov
movsb
loopne
sahf
movsb
loopne
loope
loopne
rep
loopne
sbb
mov
cmpsb
loopne
jg
loopne
sbb
loopne
fisubl
loopne
mov
mov
loopne
shrl
loopne
dec
mov
loopne
xlat
movsl
loopne
aad
loopne
pop
cmpsb
loopne
mov
movsl
loopne
add
loopne
test
loopne
imul
loopne
movsb
loopne
pop
cmpsb
loopne
icebp
mov
loopne
and
loopne
pop
loopne
push
cmpsl
loopne
jmp
loopne
stos
cmpsb
loopne
mov
cmpsl
loopne
ljmp
mov
movsl
loopne
fsubs
loopne
dec
cmpsb
loopne
push
mov
loopne
xlat
movsl
loopne
fwait
mov
loopne
push
mov
loopne
lret
mov
movsl
loopne
jno
loopne
or
loopne
and
mov
loopne
mov
loopne
jae
loopne
xchg
mov
loopne
mov
cmpsb
loopne
mov
loopne
mov
loopne
dec
cmpsb
loopne
push
loopne
cli
mov
loopne
cmp
mov
cmpsl
loopne
movsb
movsb
loopne
cmpsb
mov
loopne
cmp
loopne
xlat
cmpsl
loopne
lods
cmpsl
loopne
pop
mov
loopne
shlb
loopne
cli
cmpsb
loopne
dec
test
loopne
mov
loopne
fsubs
loopne
pusha
mov
loopne
sub
loopne
cltd
movsb
loopne
xor
loopne
xor
loopne
mov
loopne
adc
mov
cmpsb
loopne
ret
mov
mov
loopne
shlb
loopne
mov
mov
loopne
mov
loopne
add
loopne
mov
loopne
push
cmpsl
loopne
sbb
loopne
pushf
mov
loopne
shll
loopne
outsb
mov
loopne
outsl
cmpsl
loopne
std
movsb
loopne
out
loopne
fwait
mov
loopne
add
loopne
jl
loopne
xor
loopne
xor
loopne
fwait
movsb
loopne
cwtl
cmpsl
loopne
js
loopne
jle
loopne
in
loopne
mull
loopne
push
movsb
loopne
imul
loopne
stos
movsl
loopne
jge
loopne
pop
movsb
loopne
test
movsl
loopne
test
loopne
iret
mov
loopne
sub
loopne
sbb
cmpsb
loopne
jecxz
loopne
adc
loopne
andl
les
loopne
push
mov
loopne
jo
loopne
pop
movsl
loopne
pop
movsl
loopne
inc
cmpsb
loopne
addr16
and
loopne
xchg
mov
loopne
xchg
mov
loopne
test
mov
movsb
loopne
dec
mov
loopne
pop
mov
loopne
dec
cmpsl
loopne
inc
movsl
loopne
jo
loopne
adc
mov
mov
loopne
sbb
mov
movsb
loopne
das
mov
loopne
jmp
loopne
mov
cmpsb
loopne
adc
loopne
cmc
mov
loopne
fisubs
loopne
pop
movsl
loopne
ljmp
mov
mov
loopne
aad
loopne
ljmp
mov
movsl
loopne
into
mov
loopne
mov
mov
movsb
loopne
mov
test
mov
mov
loopne
inc
cmpsb
loopne
sahf
mov
loopne
push
cmpsl
loopne
lret
mov
loopne
test
loopne
mov
loopne
cmpsl
loopne
xor
cmpsl
loopne
lock
mov
cmpsl
loopne
lods
mov
loopne
inc
mov
loopne
push
mov
loopne
aam
loopne
and
mov
movsl
loopne
add
loopne
outsl
mov
loopne
sbb
loopne
adc
loopne
push
mov
loopne
cmp
loopne
dec
movsb
loopne
mov
loopne
fbld
loopne
jo
loopne
mov
movsl
loopne
push
movsb
loopne
xchg
loopne
test
loopne
stos
cmpsb
loopne
pop
cmpsb
loopne
aas
movsb
loopne
test
loopne
mov
loopne
nop
cmpsb
loopne
jmp
loopne
push
cmpsl
loopne
push
mov
loopne
jns
loopne
xchg
movsb
loopne
nop
mov
loopne
lods
cmpsb
loopne
mov
loopne
hlt
cmpsl
loopne
xchg
loopne
sbb
loopne
loop
loopne
int
loopne
pop
test
mov
movsl
loopne
mov
loopne
mov
loopne
repnz
loopne
sbb
movsb
loopne
ret
test
mov
cmpsb
loopne
andl
mov
test
mov
mov
loopne
popa
cmpsb
loopne
pop
mov
loopne
fsubs
loopne
ret
test
mov
cmpsl
loopne
inc
cmpsb
loopne
loop
loopne
or
loopne
movsl
loopne
sbb
test
loopne
sub
loopne
cld
movsl
loopne
jg
loopne
in
loopne
pop
mov
loopne
jb
loopne
pop
test
mov
mov
loopne
imul
int
loopne
enter
cmpsb
test
mov
test
mov
movsb
loopne
aaa
movsb
loopne
cmp
loopne
mov
loopne
or
loopne
add
loopne
dec
cmpsb
loopne
xor
loopne
push
test
mov
mov
loopne
xchg
mov
loopne
cmp
loopne
adc
loopne
jmp
mov
cmpsl
loopne
and
cmpsl
loopne
cld
movsl
loopne
push
cmpsl
loopne
mov
cmpsb
loopne
cli
test
mov
cmpsl
loopne
xchg
loopne
inc
test
loopne
cmpsb
loopne
insb
cmpsl
loopne
daa
test
mov
movsl
loopne
arpl
loopne
cwtl
mov
loopne
hlt
mov
loopne
and
mov
loopne
mov
movsl
loopne
pop
test
loopne
push
cmpsb
loopne
dec
movsl
loopne
bound
loopne
aaa
cmpsl
loopne
adc
loopne
mov
mov
loopne
inc
test
mov
movsl
loopne
movsb
mov
loopne
and
loopne
repnz
loopne
xor
loopne
inc
movsl
loopne
mov
movsl
loopne
test
test
mov
cmpsb
loopne
out
loopne
loop
loopne
mov
loopne
pushf
movsl
loopne
mov
test
mov
movsl
loopne
outsb
cmpsl
loopne
xor
loopne
xor
loopne
int3
movsl
loopne
mov
loopne
arpl
loopne
ja
loopne
sbb
loopne
inc
cmpsb
loopne
inc
test
loopne
dec
mov
loopne
scas
mov
loopne
mov
loopne
add
loopne
sbb
loopne
or
loopne
and
loopne
stos
mov
loopne
sbb
loopne
jbe
loopne
inc
movsl
loopne
sub
loopne
sub
mov
cmpsl
loopne
inc
test
loopne
add
loopne
mulb
loopne
add
cmpsb
loopne
or
loopne
xchg
loopne
jbe
loopne
cmp
mov
cmpsb
loopne
mov
loopne
out
mov
loopne
pop
movsl
loopne
pop
mov
loopne
push
movsl
loopne
mov
test
mov
mov
loopne
mov
cmpsl
loopne
sbb
movsb
loopne
xchg
movsl
loopne
xor
loopne
ljmp
mov
mov
loopne
hlt
mov
loopne
pop
mov
loopne
cmpsb
cmpsb
loopne
int3
mov
loopne
hlt
mov
loopne
xchg
mov
loopne
int
loopne
data16
mov
movsl
loopne
push
cmpsb
loopne
dec
test
loopne
cmpsb
loopne
inc
cmpsl
loopne
adc
loopne
lods
mov
loopne
movsl
mov
loopne
fldenv
mov
mov
loopne
cmpsl
loopne
fldenv
loopne
sbb
mov
cmpsl
loopne
aas
cmpsb
loopne
or
loopne
adc
loopne
out
mov
loopne
mov
mov
loopne
mov
test
mov
mov
loopne
xchg
cmpsl
loopne
inc
cmpsb
loopne
xor
mov
mov
loopne
push
mov
loopne
shll
mov
mov
loopne
sub
loopne
mov
mov
loopne
mov
cmpsl
loopne
mov
loopne
ret
mov
loopne
test
push
clc
sbb
roll
inc
clc
pop
or
cmp
clc
and
add
call
mov
int3
inc
add
mov
jb
add
add
add
push
clc
hlt
sub
add
inc
add
push
clc
ror
ss
xor
out
cmp
clc
mov
add
cmp
clc
jp
xchg
out
xor
add
push
pop
testl
sub
testl
add
movsl
clc
add
add
cmp
add
sub
clc
out
push
add
sub
in
fs
jecxz
scas
xchg
inc
add
xchg
cmp
clc
pop
jnp
mov
add
push
add
lret
clc
mov
clc
cmp
outsl
pop
pop
clc
mov
shr
pop
test
adc
add
pop
adc
add
outsl
jmp
dec
gs
cmp
movsl
clc
stos
jp
xchg
test
clc
cmp
dec
movsl
clc
push
clc
test
push
pop
leave
sbb
jnp
sub
add
xor
add
add
or
jae
add
clc
jns
add
add
add
add
mov
jp
inc
clc
push
clc
cmp
add
clc
xabort
clc
inc
add
jb
add
clc
inc
clc
mov
xchg
inc
clc
in
push
add
aas
sbb
add
and
xor
adc
add
xchg
xchg
inc
add
pop
shrl
or
add
popf
and
add
clc
enter
pushf
inc
clc
cmp
push
jmp
add
push
add
push
movsl
clc
xchg
dec
loopne
xchg
jb
add
clc
je
clc
dec
sbb
or
clc
arpl
add
je
jne
fisttps
clc
cwtl
inc
clc
imul
add
scas
cmp
sbb
add
push
add
push
arpl
add
mov
mov
clc
clc
cmp
clc
lock
jno
add
sub
scas
stos
js
add
shrb
clc
xor
add
clc
xlat
and
add
add
aam
clc
xor
add
mov
clc
xchg
xchg
mov
test
icebp
pop
aaa
inc
add
mov
data16
mov
mov
xabort
add
mov
xchg
sbb
sub
dec
and
add
fnstcw
dec
or
cmp
loope
sub
clc
outsb
cmp
sbb
xchg
sub
sbb
clc
lret
jnp
push
sbb
push
and
add
mov
faddl
add
mov
xchg
sahf
inc
clc
sar
clc
inc
add
or
ficoms
add
sarb
push
add
movsl
clc
sbb
add
add
mov
or
sbb
loop
cmpsl
clc
pop
clc
mov
clc
cmp
inc
add
adc
add
clc
cld
push
pop
ret
add
into
jle
push
cmp
clc
mov
clc
xchg
test
clc
jg
xchg
xchg
cs
xchg
repz
xchg
cmp
in
clc
out
in
shrb
clc
or
cmp
add
test
push
add
outsb
push
add
jl
addr16
imul
add
mov
pop
into
pop
icebp
stc
xchg
mov
pusha
add
push
and
or
clc
divl
jae
add
mov
push
mov
dec
jmp
mov
sbb
mov
clc
mov
sahf
loop
hlt
mov
mov
push
sub
pop
loopne
mov
pop
arpl
add
sar
jbe
clc
arpl
add
and
scas
xchg
and
add
ljmp
xchg
adc
add
clc
cmp
push
lods
out
cmp
xchg
gs
ret
sub
sbb
mov
add
roll
add
fdivrs
xchg
xchg
dec
repz
test
add
js
lea
xor
add
popa
add
and
xabort
lock
add
or
add
add
inc
add
pop
xchg
pop
int
inc
add
pop
incb
jb
add
add
clc
lock
jbe
add
sti
push
jbe
xor
add
arpl
add
add
or
lret
data16
in
mov
clc
add
add
mov
shr
sbb
enter
add
ret
jno
add
pop
imul
pop
clc
arpl
add
add
pusha
add
outsl
fimuls
xchg
popf
mov
pop
in
ret
imul
rcr
dec
mov
add
pop
xchg
cmp
xabort
clc
leave
add
or
sub
xor
add
clc
pop
clc
inc
add
cmp
test
clc
mov
jg
fdivrl
cmp
and
js
in
pop
cmp
and
add
inc
add
inc
clc
cmp
in
or
push
add
sub
add
icebp
sbb
jns
xor
test
push
push
fs
push
mov
clc
pop
xor
clc
mov
add
sub
dec
jle
clc
mov
clc
lock
in
xchg
sar
mov
call
add
ja
xor
add
pop
mov
add
add
add
add
clc
xor
add
bound
add
clc
pop
pop
cmpsl
clc
push
sub
bnd
clc
xchg
push
fwait
addr16
popf
clc
add
imul
add
cs
clc
mov
mov
std
mov
jmp
stos
pop
and
add
jmp
data16
push
dec
push
cmp
xchg
int3
rorb
push
stos
sub
hlt
ret
clc
inc
clc
xor
imul
out
mov
add
jp
clc
dec
inc
clc
xor
add
add
jp
xbegin
cmp
sbb
xor
clc
mov
clc
je
cmp
add
xabort
repz
in
pop
cmp
stc
ljmp
adc
in
lahf
dec
dec
stos
cmp
test
sub
add
frstor
mov
outsb
cmp
clc
fcmovne
mov
clc
sub
push
lret
sbb
sbb
loopne
mov
push
sub
lea
push
call
sub
es
push
mov
and
test
setne
nop
nop
loop
pop
lea
or
sub
xchg
not
xchg
ss
pop
add
movzbl
shr
push
or
and
push
mov
add
add
push
mov
push
push
call
push
call
leave
ret
mov
sub
mov
pushl
pop
sub
add
ret
test
nop
nop
nop
nop
nop
mov
push
push
je
mov
adc
add
ret
pop
jmp
jmp
mov
lea
push
pushl
nop
nop
nop
nop
ret
stos
std
test
rorl
clc
shlb
add
xor
add
gs
or
xchg
fwait
pop
add
jmp
sub
mov
add
jmp
push
mov
clc
adc
add
ss
ret
or
aaa
xor
add
outsb
shrl
insb
inc
insb
insb
cld
jmp
scas
adc
add
dec
dec
jle
pusha
add
sub
aad
push
mov
cld
jmp
imul
clc
sbb
add
add
clc
sar
sar
add
sar
add
outsl
add
add
and
or
add
inc
clc
fsubrl
inc
iret
or
add
cwtl
add
jbe
mov
cld
jmp
push
cmpsb
sub
cmp
sar
loop
jns
mov
inc
cld
jmp
test
in
iret
push
add
jne
sub
add
and
add
fisttps
inc
clc
aam
clc
into
leave
int3
or
adc
call
clc
sub
add
mov
push
mov
mov
pop
jmp
clc
out
cmp
jnp
or
push
popa
add
adc
add
mov
add
decl
test
add
jmp
out
mov
loop
test
cmp
es
push
loop
adc
add
add
stos
int
aaa
pop
sbb
lcall
push
cld
jmp
sub
inc
clc
add
dec
outsl
outsb
into
sbb
pop
sbb
scas
fcompl
cmpsb
clc
sbb
add
cmp
outsb
xchg
inc
add
out
cwtl
mov
adc
add
or
add
clc
hlt
movsb
clc
jbe
lahf
dec
cmp
pushl
cld
jmp
cmpsb
cmp
inc
clc
pusha
add
inc
clc
pop
repz
mov
ret
je
inc
add
shlb
jge
pop
loopne
adc
sub
jmp
sub
clc
aad
stos
sub
xor
add
clc
push
dec
mov
mov
mov
fcoml
fwait
sbb
clc
testb
add
mov
pop
push
push
cld
jmp
sub
add
add
or
add
bound
add
clc
cmc
dec
push
addr16
add
add
inc
clc
xchg
stos
inc
clc
repz
add
pushf
jl
clc
mov
add
adc
scas
call
int3
and
add
int
fs
lcall
clc
mov
add
push
add
iret
mov
addr16
jg
stc
test
pop
imul
add
jecxz
jge
clc
push
sbb
int3
mov
add
outsl
lock
sbb
add
into
jle
cmp
loopne
jo
add
add
push
add
pushf
and
add
add
scas
cltd
cld
push
xchg
adc
jnp
repnz
lock
sub
shrl
mov
decl
cld
jmp
subb
cmp
add
ss
ret
inc
dec
mov
add
xchg
xchg
clc
push
or
clc
mov
clc
fldcw
clc
in
xchg
iret
shlb
rolb
add
clc
aaa
xchg
mov
jmp
sub
jg
test
add
xchg
dec
sbb
clc
test
fstl
add
add
or
xlat
cmpsl
clc
pop
jb
add
sbb
mov
in
pop
daa
clc
sbb
add
cmp
add
xchg
jmp
add
fucomp
mov
testb
leave
ss
ret
push
inc
xchg
jo
add
adc
add
add
inc
add
sub
clc
xor
add
in
imul
out
filds
pop
mov
das
mov
add
pop
clc
negl
sbb
inc
add
or
inc
add
test
dec
pop
lock
add
decl
jmp
sub
in
pop
daa
clc
and
add
clc
or
shll
stc
cld
jmp
and
add
mov
aaa
das
stc
xor
add
xor
cld
jmp
sub
sarl
sub
pop
sar
add
push
add
add
shr
xor
add
dec
pop
leave
or
push
xor
dec
sub
cmpw
cld
jmp
sub
mov
stos
movsl
clc
ja
cli
sub
add
xbegin
decl
cmp
add
jmp
clc
das
scas
mov
loope
pop
adc
add
repz
stos
push
add
mov
nop
jp
pushf
std
inc
add
loope
bound
add
imul
push
clc
cmp
lahf
loopne
adc
add
adc
add
pop
push
xchg
push
add
add
add
add
xor
add
add
cld
js
clc
movsl
clc
mov
inc
clc
insb
cmp
clc
pop
movsb
clc
fs
rorl
clc
adc
clc
bound
add
inc
clc
xchg
dec
jnp
mov
clc
int
add
loopne
aam
addr16
cmp
test
stc
stc
outsb
xchg
and
add
mov
sub
push
jl
inc
add
push
add
cld
jmp
lods
add
clc
divl
add
add
add
dec
roll
adc
add
clc
or
rclb
add
cmovp
add
pop
xlat
and
add
stc
cs
xor
add
add
adc
add
clc
cmp
add
push
push
test
adc
add
aam
int
add
das
pop
sar
add
cmp
mov
cld
jmp
jg
or
in
iret
lcall
xor
add
lea
inc
add
xchg
push
add
ja
clc
enter
sbb
jmp
mov
ret
clc
pushf
or
sub
mov
call
push
ret
aaa
fwait
fwait
sub
in
out
movsl
clc
outsb
push
sub
pop
mov
test
popf
and
inc
add
mov
jbe
mov
add
clc
xor
add
xchg
mov
add
fs
inc
add
mov
lret
in
cmpsl
clc
fildl
cmp
add
add
arpl
add
into
repz
out
fwait
test
shll
lret
aaa
mov
pop
clc
jo
add
mov
xchg
sti
sarb
and
add
popa
add
add
add
clc
bnd
xabort
push
jne
cld
jmp
pop
roll
dec
lahf
or
scas
cmp
cld
cmp
mov
jb
add
lock
inc
add
xor
arpl
add
xchg
in
sbb
std
sbb
add
add
jo
add
add
outsb
jno
add
rcrb
jecxz
pop
lods
ret
clc
jmp
pop
pop
add
push
dec
push
pop
adc
add
fldln2
xor
add
loopne
inc
clc
and
add
add
mov
jnp
add
dec
ret
clc
or
mov
clc
sub
add
int3
cltd
hlt
fsubrp
sar
cmp
add
cmp
clc
xchg
cmp
mov
sar
clc
cmp
add
xchg
push
add
mov
clc
test
fnstcw
clc
or
scas
sti
xchg
jmp
ds
add
or
push
out
cltd
sbb
clc
das
std
or
ret
clc
jns
xlat
clc
mov
add
dec
or
add
add
nop
in
sbb
fwait
sar
clc
imul
sub
es
cs
clc
icebp
sbb
loope
mov
add
jp
leave
or
clc
xabort
fsubl
add
lea
sub
xchg
stos
push
fsub
clc
jmp
jmp
cmpsb
das
add
mov
clc
inc
add
cmc
sbb
shlb
push
ret
sub
push
clc
sbb
add
clc
push
clc
test
lahf
cmpsb
clc
and
add
aas
lahf
cmp
or
or
add
push
mov
cld
jmp
jg
and
inc
add
and
add
mov
add
notb
add
lret
int3
cmp
lret
ss
ret
sahf
movsb
sub
clc
dec
cmp
test
cmp
add
inc
clc
pop
jb
add
clc
mov
jge
and
imul
cmp
cltd
jno
add
clc
sar
add
mov
out
sbb
add
xabort
mov
add
movsb
clc
insb
dec
in
fmull
movsl
clc
push
add
and
add
add
inc
clc
mov
insl
test
push
add
ljmp
clc
cmp
repz
cmp
or
or
popf
movsl
clc
inc
clc
sub
add
cmp
pop
inc
clc
mov
push
ret
lea
xor
add
add
int3
aaa
sbb
clc
jmp
mov
add
add
jmp
push
pop
or
fistl
cld
jmp
add
dec
xlat
xlat
hlt
sbb
clc
hlt
test
add
hlt
adc
add
test
push
push
pushl
cld
jmp
nop
aaa
sub
add
add
clc
cld
mov
sub
add
pop
add
add
jns
xor
clc
dec
dec
add
add
fcomip
fldenv
push
out
push
add
js
shll
enter
add
inc
add
xbegin
test
mov
add
clc
adc
add
add
bound
add
int3
lods
mov
clc
ja
jne
push
dec
sbb
add
lahf
decl
test
add
cld
jmp
clc
mov
cltd
shrl
pop
xor
add
enter
clc
sbb
dec
mov
clc
mov
into
dec
jge
in
lret
pop
or
xchg
mov
add
pushf
in
cld
clc
mov
das
sbb
xchg
fisubl
add
push
fs
mov
or
adc
imul
jae
add
clc
inc
add
xbegin
inc
clc
sub
add
cs
cwtl
loope
int3
add
add
add
push
jge
push
add
sar
add
add
sub
add
sahf
pop
xchg
gs
pusha
add
stc
fadds
add
push
xchg
mov
sbb
mov
clc
sub
sbb
add
xor
clc
mov
mov
call
sub
bound
add
add
add
pop
xchg
jo
add
push
cmp
imul
clc
aam
xor
sti
addr16
aas
in
xlat
int
in
enter
daa
clc
xlat
out
dec
ds
clc
cmp
dec
das
or
and
add
popa
add
push
add
inc
add
inc
add
cmp
ret
clc
out
jae
add
sub
adc
adc
add
scas
and
add
call
sar
and
add
or
jae
add
xor
stc
inc
add
adc
add
data16
ja
cmp
add
xor
add
sar
mov
cld
jmp
or
mov
push
adc
pop
lock
popf
mov
add
xchg
push
jp
cmp
pop
jno
add
xabort
mov
clc
jno
add
sbb
mov
out
jmp
leave
mov
add
pop
jl
clc
das
pop
adc
add
add
push
xor
add
inc
clc
jmp
xchg
inc
add
pop
add
add
clc
or
clc
icebp
inc
add
arpl
add
mov
clc
push
jl
ja
add
or
test
dec
dec
aas
into
stos
hlt
sbb
clc
aas
pop
popf
sar
clc
or
roll
add
leave
lret
inc
clc
jo
add
clc
jg
mov
clc
cmpps
sahf
fwait
mov
das
jbe
add
mov
ds
test
jle
lahf
push
add
leave
clc
lcall
daa
clc
pop
cmc
cmp
outsb
mov
clc
jge
cwtl
mov
ret
clc
out
insl
idivb
loopne,pn
cmp
dec
jp
clc
sar
add
rcll
mov
lods
leave
enter
hlt
pusha
add
pop
and
or
inc
clc
mov
lahf
add
add
xor
add
push
rcll
push
add
adc
add
clc
test
add
in
and
or
shlb
add
ja
or
add
mov
push
ret
sub
add
push
fistpll
cmp
clc
faddl
add
pop
inc
add
jnp
fwait
add
add
jo
add
clc
int
add
add
cmp
clc
out
and
add
loope
xchg
cmpsb
clc
jl
add
out
lret
add
movsb
clc
test
cmp
and
inc
xor
cld
jmp
mov
mov
clc
shlb
rorb
clc
mov
dec
ret
clc
je
clc
cmp
add
push
and
add
pop
mov
jns
dec
sub
mov
clc
add
in
add
or
add
dec
cmp
xchg
or
add
pop
xor
add
loope
jns
clc
outsl
pop
jle
fcompl
cmc
stos
mov
add
fwait
ds
call
loope
add
sub
push
pop
cld
jmp
je
outsl
sub
add
pop
arpl
add
clc
pusha
add
psraw
lods
into
scas
push
add
aaa
cmp
clc
sbb
push
clc
jns
ja
loop
js
mov
add
clc
imul
or
xchg
sahf
and
add
test
in
data16
lret
mov
add
iret
inc
clc
mov
inc
jb
cld
jmp
adc
fisttps
and
xchg
jnp
mov
jge
clc
aaa
pop
lret
cwtl
loope
lock
add
clc
cmp
add
divl
add
pop
call
push
ret
add
add
add
jg
fs
rclb
adc
jmp
push
clc
inc
add
xchg
push
js
push
mov
jge
mov
add
test
jmp
add
pop
pop
arpl
add
loope
jl
mov
cmp
add
pop
mov
leave
add
scas
xor
cmpsb
test
lods
dec
lret
ss
mov
inc
clc
cwtl
mov
add
inc
add
jle
sub
mov
add
sahf
cmp
cmpsb
clc
pop
insl
mov
add
jo
add
add
test
outsl
cmp
add
mov
clc
jae,pt
add
fistpll
push
add
fldl
add
clc
xor
jmp
test
sbb
nop
add
add
lea
data16
fsts
push
ret
nop
imul
aad
loope
lahf
insb
in
xchg
fs
add
add
add
jle
xor
clc
lods
mov
lret
fmull
xor
add
add
mov
and
add
xabort
clc
cmp
add
aam
dec
fsub
clc
dec
insl
pop
clc
push
add
pushf
out
add
add
ret
add
mov
adc
add
add
push
add
sbb
clc
stc
xabort
sbb
sti
dec
add
loop
das
dec
push
add
movsl
clc
dec
enter
ljmp
clc
xchg
mov
jo
cld
jmp
adc
dec
xor
add
add
test
aad
mov
dec
bound
add
add
jp
sar
pop
xor
clc
inc
add
test
jae
add
pop
sar
clc
jne
popl
sar
mov
or
mov
add
call
loop
lods
fisubrs
push
mov
adc
clc
add
add
clc
cld
jl
clc
mov
push
add
sar
push
add
int3
pop
sbb
test
jmp
jmp
jb
add
in
add
add
add
bound
add
dec
adc
icebp
addr16
mov
shlb
add
mov
push
aaa
insb
cmpsb
clc
clc
fsubrl
xabort
ret
clc
fsubl
push
mov
ljmp
cwtl
push
adc
add
pop
sarl
cld
pop
je
pop
clc
jl
xchg
cmp
sub
jecxz
fadds
add
aam
addr16
aam
add
shlb
das
jmp
popf
movsb
clc
sbb
add
lock
popa
add
dec
sar
ja
adc
clc
pushf
or
dec
nop
addr16
push
push
ret
imul
clc
hlt
push
insb
xchg
data16
cmp
jae
add
mov
adc
push
add
leave
cmp
add
mov
das
cli
xchg
push
loope
dec
jl
loope
pop
in
or
sbb
adc
add
test
jl
clc
or
add
jne
clc
pop
pop
jmp
clc
push
add
pop
dec
lahf
aam
clc
add
add
pop
xlat
adc
add
je
or
clc
jns
out
daa
clc
clc
repz
pop
test
add
adc
lea
add
js
dec
fucomip
xchg
cmpsl
clc
mov
stos
cmp
clc
lock
aad
sbb
add
add
mov
repz
cmp
add
push
add
jg
clc
push
pusha
add
or
dec
xor
xabort
jecxz
fcoml
add
repnz
mov
ja
jae
add
arpl
add
add
sub
add
clc
cmp
add
cmc
adc
pop
ss
ret
push
dec
or
into
inc
add
or
add
add
xlat
ret
clc
fs
out
mov
push
cmc
cli
inc
clc
push
in
fbld
add
es
cmp
sub
dec
mov
outsb
mov
inc
clc
rep
clc
xchg
decl
push
add
aaa
and
insb
jae
add
or
dec
pop
mov
clc
pop
enter
add
movsl
clc
rolb
add
push
mov
xabort
clc
xchg
insl
sub
cmp
add
pop
cld
or
sahf
lea
out
stc
bound
add
lods
fsts
xor
add
clc
xor
add
lock
add
movsb
clc
mov
add
add
fcmove
mov
adc
clc
dec
ret
clc
data16
adc
add
add
mov
cld
jmp
jg
add
out
lret
adc
add
mov
clc
xor
add
sbb
jmp
aas
insb
imul
add
add
out
push
mov
add
test
seto
cmpsl
clc
xor
add
loope
lahf
xchg
xor
push
and
add
inc
clc
stos
sbb
fisttpll
pop
iret
icebp
adc
add
out
cli
cmpsl
clc
mov
clc
fwait
hlt
and
add
add
std
add
add
mov
mov
bound
add
add
shrb
add
xor
add
adc
add
bound
add
mov
fisubs
add
clc
xor
add
aad
add
imul
stc
in
xchg
jl
clc
jg
pushf
dec
jne
clc
adc
add
sti
aaa
pop
bswap
dec
jne
dec
or
jmp
jno
jp
in
into
pop
push
cltd
jle
mov
pop
add
or
movsb
fs
jne
frstor
bound
add
loope
cmpsb
clc
pop
xchg
xlat
push
add
jo
add
lods
mov
mov
add
je
data16
xchg
pop
fisubrs
lock
jecxz
inc
add
xchg
lret
mov
pop
cmp
lods
cli
push
jnp
pusha
cld
jmp
cmpsb
ja
and
ret
mov
push
clc
add
adc
add
fsubrs
clc
outsl
arpl
add
mov
push
cld
jmp
mov
cld
daa
clc
movsl
clc
sar
jae
add
clc
jne
and
add
add
add
add
mov
cltd
push
add
pop
stc
pop
addr16
jp
mov
sahf
cs
mov
iret
sub
clc
xor
add
imul
sbb
or
js
popa
add
pop
pop
push
clc
int
fistpll
clc
xchg
fs
mov
lret
sbb
cmp
xchg
cmpsl
clc
jecxz
push
mov
and
mov
xchg
stos
inc
add
fs
daa
clc
mov
bound
add
lock
fldl
clc
or
add
push
add
pop
sar
clc
pop
mov
add
jno
add
jl
clc
sbb
insl
xlat
test
inc
clc
ficompl
jne
clc
sub
mov
xchg
testl
in
lahf
lods
cmp
add
je
cmp
add
imul
cmp
dec
xchg
jl
add
push
add
cmp
clc
xchg
mov
lods
sbb
xchg
cs
ret
mov
cld
jmp
xchg
subb
sub
loop
mov
clc
pop
flds
add
jne
add
add
add
cmp
sub
clc
xchg
mov
int3
scas
jg
or
shrl
lods
inc
clc
xor
je,pt
int
lcall
xor
add
clc
dec
xor
clc
pusha
add
lea
cmpsl
clc
pusha
add
lock
add
cltd
and
add
cwtl
imul
fwait
mov
sbb
mov
divl
enter
lods
cmp
clc
outsl
fcmovnb
clc
xlat
repz
out
adc
mov
movsl
clc
clc
ror
or
clc
pop
out
cmp
clc
pop
scas
dec
lock
dec
ja
shl
cld
jmp
or
scas
adc
add
lret
imul
clc
ja
clc
and
add
add
xchg
popa
add
and
add
sahf
movsb
clc
xchg
lret
iret
loope
mov
lea
lret
add
add
push
fldl
ret
mov
add
cmp
clc
hlt
in
mov
fs
inc
clc
mov
cltd
jg
int3
adc
add
clc
mov
add
lret
add
jl
clc
addr16
xchg
fdivl
xor
loope
jecxz
jae
add
insb
adc
add
add
or
push
add
test
stc
out
jmp
sti
jp
adc
add
jg
mov
in
arpl
add
jns
add
jecxz
jbe
clc
mov
sahf
clc
clc
ret
add
or
mov
addr16
add
xchg
sub
mov
clc
push
das
data16
xchg
push
clc
push
repz
add
mov
mov
pop
dec
jns
rorl
inc
clc
lret
cmp
add
add
add
clc
dec
cmp
push
cmpsl
clc
outsb
pop
adc
or
add
xor
clc
push
mov
jo
add
xor
add
add
popa
add
int
jge
inc
clc
xor
add
ss
in
addr16
sub
add
outsb
std
mov
and
add
ret
cld
jmp
lea
or
clc
jb
add
test
clc
ja
xchg
test
pusha
add
pop
clc
or
insb
nop
js
sar
clc
lret
lea
add
sti
sub
mov
and
add
adc
add
out
jbe
add
add
stos
cmp
jmp
cmp
add
push
dec
pop
or
add
lahf
xchg
or
add
clc
adc
add
xchg
cltd
jle
clc
mov
icebp
int3
loop
add
popf
cmp
clc
dec
sub
jns
sub
push
lock
decl
inc
sub
test
xor
add
insb
dec
add
pop
decl
inc
xchg
add
jg
fwait
xor
add
fldt
cld
test
movsl
clc
dec
xor
add
out
jne
mov
jmp
sub
or
add
mov
leave
loope
xchg
jmp
je
clc
je
clc
lock
adc
add
add
jo
add
clc
inc
clc
jns
movsl
clc
fimull
clc
cltd
leave
pusha
add
jnp
clc
clc
cwtl
scas
enter
fstp
es
mov
mov
cld
jmp
inc
test
add
neg
cmpsb
clc
fisttpll
push
pop
js
xabort
mov
add
std
dec
push
fbstp
clc
push
xchg
loop
ss
push
add
and
sbb
clc
sar
movzwl
cld
jmp
jg
outsb
daa
clc
sbb
pop
mov
jg
sbb
add
push
mov
sti
or
imul
int3
nop
jl
clc
cli
xchg
inc
add
in
jg
clc
outsl
scas
xlat
rcrl
add
inc
add
xbegin
add
imul
fistpl
adc
bound
add
hlt
cmp
popf
or
add
in
aam
or
daa
clc
mov
lahf
push
clc
dec
jl
leave
daa
clc
xchg
adc
add
add
mov
clc
push
pop
push
stc
mov
clc
jle
jecxz
add
nop
aas
lods
push
data16
cmp
clc
xor
loop
mov
lret
pushf
mov
outsb
imul
add
xor
add
clc
leave
cmp
clc
dec
and
mov
insl
int3
fisubrl
mov
cmp
clc
pop
test
add
add
add
pop
into
xor
add
mov
xabort
pop
bound
add
push
sbb
test
add
clc
push
decl
test
add
cld
jmp
pop
pusha
add
adc
add
shll
aam
add
aam
pop
das
pop
clc
push
add
pop
jno
add
sbb
pop
dec
pop
add
jmp
out
xchg
xbegin
clc
jno
add
cmp
imul
hlt
mov
enter
js
jns
cmp
push
add
xchg
lret
ret
xchg
fcomi
lods
inc
add
dec
cmp
sub
test
sub
fisubl
je
repnz
add
ficompl
mov
clc
sub
cld
xchg
sub
cmpsb
clc
cmp
inc
clc
cmp
mov
add
mov
push
add
jb
add
adc
add
fsubrs
pusha
add
data16
xor
add
add
jecxz
or
rcl
xchg
insb
leave
and
add
ljmp
shl
xchg
js
add
ss
mulb
clc
mov
add
stos
rep
pushf
xbegin
add
add
add
pop
popf
push
ss
ret
inc
js
mov
cld
jmp
dec
add
jns
xchg
jecxz
xor
clc
vzeroupper
mov
add
mov
pop
pop
imul
adc
add
aaa
mov
push
outsl
cld
jmp
xor
inc
clc
lret
sub
xchg
insb
and
add
pop
clc
mov
fs
clc
push
add
add
pushf
arpl
add
gs
mov
clc
xor
add
addr16
std
or
clc
inc
add
sbb
add
mov
add
push
in
jl
clc
icebp
jae
add
clc
das
insb
mov
add
push
clc
pop
push
clc
out
xor
cmp
cmp
add
adc
add
rclb
cmp
in
pop
int3
cmp
lahf
xor
in
movsb
clc
push
jp
mov
iret
dec
cmc
aaa
mov
clc
nop
pop
jl
xchg
xchg
sub
clc
sub
xchg
adc
push
insl
pushf
inc
clc
pop
sbb
add
clc
aas
mov
inc
clc
out
nop
test
loopne
adc
add
loop
lods
dec
imul
mov
cld
jmp
es
or
jbe
xchg
jle
out
jae
add
add
sar
jmp
test
add
add
add
xlat
pusha
add
or
mov
loopne
xlat
into
cs
repz
sahf
pop
clc
xor
and
add
push
jmp
scas
popa
jge
clc
adc
add
mov
mov
cmp
clc
ja
pusha
add
mov
ja
clc
jne
mov
adc
jmp
mov
fmulp
jno
add
clc
push
pop
shlb
clc
mov
pop
into
jge
in
ja
pop
add
add
scas
fadds
ret
clc
jno
add
clc
xor
add
cmp
clc
lret
clc
cmp
in
add
add
add
adc
push
add
pop
and
add
clc
xchg
and
sub
mov
add
mov
int
aad
shlb
xchg
jecxz
in
pop
mov
add
clc
cmp
add
ljmp
push
add
int3
push
pop
cltd
aaa
ljmp
adc
jmp
sub
popa
add
lock
adc
clc
sti
insl
jo
add
inc
add
xchg
xor
add
sbb
sbb
repz
jmp
and
pop
or
maxps
inc
clc
bound
add
mov
sbb
adc
add
pop
divb
je
add
cld
jmp
push
nop
inc
add
xor
add
mov
add
bndldx
cmpsl
clc
xchg
nop
jge
sar
add
mov
xchg
int3
inc
add
lret
in
lret
add
and
add
adc
add
clc
clc
mov
mov
cmpsl
clc
sub
clc
inc
clc
aad
add
add
add
add
push
cmpsb
clc
int
push
add
movsb
clc
xor
add
aaa
sbb
xor
add
push
cmp
clc
mov
leave
sbb
mov
clc
xchg
sub
add
jecxz
xor
je
clc
adc
xor
add
ss
sbb
add
add
add
daa
clc
js
xbegin
push
dec
repnz
pusha
add
adc
add
pop
imul
pop
mov
test
xor
clc
sub
mov
lcall
sar
push
fiaddl
clc
and
add
push
add
test
lcall
clc
inc
add
jle
mov
clc
and
aad
add
ffree
clc
in
scas
mov
mov
out
xbegin
clc
test
mov
xchg
xabort
int3
push
add
cmp
ljmp
pop
and
add
cmpsb
clc
popf
cmp
rcrl
sub
add
mov
clc
push
cmp
cld
jmp
sub
pop
cmp
xor
add
jne
clc
xlat
cmc
repnz
add
push
add
arpl
add
add
push
cmp
xchg
cld
push
addr16
xlat
popf
jnp
add
movsl
clc
sbb
ss
and
add
add
xor
add
ret
clc
jle
in
sbb
pop
cld
jmp
pop
dec
or
lret
ss
lods
adc
add
pop
xor
add
add
popf
ret
clc
pop
mov
test
add
mov
sub
or
add
sahf
add
add
movsl
clc
mov
sub
insl
imul
cli
test
sbb
adc
mov
fwait
adc
add
add
sbb
mov
clc
lcall
clc
sub
clc
pop
aas
call
jmp
cmpsb
inc
and
sbb
clc
inc
clc
and
add
std
out
hlt
cmp
sahf
mov
cmp
unpcklps
ret
add
fistl
clc
push
outsb
mov
mov
add
add
jo
add
mov
xor
add
mov
popf
pop
pop
jle
clc
and
add
add
push
stos
cld
jmp
nop
push
dec
sub
add
icebp
cmc
scas
mov
add
ss
scas
cs
inc
clc
inc
clc
mov
sub
repnz
inc
add
pop
test
xlat
jnp
rcrl
push
mov
jnp
aad
mov
or
pop
in
popf
push
add
incl
and
add
pop
fs
clc
cmp
add
xchg
daa
clc
cmp
js
sub
lret
clc
mov
mov
add
mov
inc
add
lret
push
add
cmp
xlat
sarl
sar
jne
jnp
fwait
in
jp
add
push
inc
add
pop
ss
negl
cmp
add
lock
add
add
cld
in
fadds
inc
add
mov
add
add
mov
clc
je
clc
idivl
clc
je
clc
dec
push
clc
inc
add
leave
or
add
popf
inc
add
push
add
dec
fs
adc
add
add
sub
add
stc
dec
sub
dec
mov
add
pushf
push
add
lret
mov
and
add
add
add
arpl
add
mov
dec
lods
loopne
inc
clc
xor
add
add
in
xor
add
clc
mov
mov
clc
mov
mov
cld
jmp
nop
cwtl
sub
out
jmp
xor
es
xchg
mov
add
cmpsl
clc
scas
test
rdpmc
add
iret
mov
mov
aas
push
clc
sbb
mov
jmp
sbb
cmp
add
repz
ljmp
add
adc
push
add
mov
dec
fst
mov
adc
cmp
iret
mov
push
ret
adc
je
push
push
clc
cmp
clc
loop
adc
add
stos
jns
xchg
lcall
outsb
loopne
incl
clc
cld
jmp
sub
aaa
ja
fcomip
jnp
clc
adc
add
inc
add
sbb
ss
ret
popa
sub
sub
clc
mov
and
add
clc
imul
div
sar
daa
clc
pushf
aam
xchg
xor
or
clc
js
add
pop
push
add
clc
in
mov
data16
int3
mov
clc
pop
iret
sbb
jmp
jge
lea
mov
test
bnd
neg
mov
clc
clc
adc
add
add
add
add
mov
inc
lock
jmp
imul
or
jmp
dec
push
add
add
and
add
or
add
add
test
insl
push
add
mov
inc
clc
adc
lods
jo
add
fisttps
clc
mov
clc
test
clc
pop
pop
lods
aaa
leave
sar
add
dec
clc
push
add
and
add
mov
outsb
inc
add
inc
dec
ja
lea
sub
add
add
pop
xor
sar
test
incl
sti
cld
jmp
or
jnp
data16
xor
add
pop
cli
ds
clc
mov
clc
push
bound
add
data16
mov
inc
add
push
jmp
jno
push
lea
inc
clc
pop
mov
int
xchg
sbb
or
add
insb
push
sub
push
add
add
add
add
clc
jne
pop
adc
add
ss
sub
pop
int3
or
mov
clc
dec
add
mov
dec
icebp
dec
testb
dec
movsb
clc
fdivr
loope
outsb
test
add
mov
clc
dec
leave
mov
jb
add
int
clc
adc
add
add
add
aad
sub
popf
cmp
add
cmp
sub
mov
icebp
cmp
mov
mov
dec
add
cs
frstor
clc
xor
add
movzwl
cld
jmp
sahf
movsb
cltd
cmpsb
clc
je
clc
test
clc
data16
adc
add
add
insl
inc
clc
rcr
test
or
xor
add
clc
pop
sar
xor
add
jmp
clc
vcomiss
cmp
clc
sbb
loop
ss
rolb
add
popa
add
inc
add
jb
add
movsb
clc
xchg
or
pop
clc
clc
inc
add
xchg
mov
lret
out
pop
cmp
clc
imul
sarl
outsl
sub
push
ret
or
icebp
pushf
xchg
pop
leave
leave
add
add
clc
jl
push
lret
stos
adc
add
jecxz
dec
xor
add
xor
add
clc
push
mov
cld
jmp
inc
je
jns
cmp
loopne
into
add
add
mov
lea
push
data16
xchg
push
add
sbb
jmp
inc
test
popa
and
or
pop
jmp
mov
pop
mov
add
je
pop
dec
cmpsl
clc
in
sbb
loopne
adc
add
cld
incl
and
push
or
add
clc
mov
clc
inc
clc
aam
mov
xbegin
add
idivl
xor
add
jmp
cld
jmp
outsl
fdivs
add
bound
add
xchg
mov
add
mov
add
add
xchg
test
pop
cld
jmp
sub
sub
jbe
add
fcomps
lods
bound
add
or
add
and
add
dec
adc
jmp
inc
xchg
pop
gs
test
xchg
jp
adc
add
clc
hlt
imul
jno
add
outsb
pop
inc
add
dec
xchg
cmp
clc
bound
add
add
xchg
fildll
leave
add
add
add
int3
mov
cld
jmp
das
cmp
xor
add
clc
mov
cld
negl
add
jp
add
mov
add
out
jmp
movsb
clc
xchg
out
cmp
xor
add
addr16
imul
add
sbb
push
add
add
add
inc
add
in
arpl
add
add
add
rcr
cmp
aaa
mov
scas
test
xor
cltd
xchg
popa
add
push
add
push
clc
dec
negl
cmp
clc
out
cmp
bnd
add
adc
add
clc
pop
cmp
or
and
sub
clc
cmp
mov
clc
fisubrs
push
add
sbb
jb
add
inc
dec
add
das
aaa
jp
dec
mov
xabort
clc
cmc
mov
clc
pop
shrb
add
jno
add
nop
movsb
clc
push
add
mov
add
mov
sbb
js
add
mov
pop
mov
clc
pop
in
das
fwait
sub
jne
add
arpl
add
add
mov
lret
mov
add
add
daa
clc
loop
pop
mov
or
add
add
add
add
arpl
add
lret
push
cld
jmp
sub
clc
jo
add
xabort
cmp
dec
or
add
adc
add
jmp
cld
jmp
add
sbb
add
add
loop
lods
loope
int
clc
adc
loope
mov
ret
lcall
add
jmp
sbb
divb
scas
sbb
push
add
xor
cmp
clc
inc
add
mov
adc
aam
push
popa
add
add
add
call
inc
add
jno
push
adc
add
adc
jle
pop
xor
add
mov
dec
adc
clc
insb
int3
jecxz
cs
cld
addr16
leave
push
xchg
aas
push
add
or
dec
into
jo
add
cld
jmp
sub
push
daa
clc
jo
add
add
jo
add
addr16
jp
arpl
add
clc
stos
or
clc
shll
and
add
cld
lcall
adc
add
add
add
lods
jecxz
fs
insb
mov
clc
cmp
adc
add
or
nop
lods
out
fstps
xor
add
clc
movlps
add
mov
rorl
clc
lock
inc
clc
fs
cmp
clc
jmp
imul
push
add
aam
mov
clc
pop
cwtl
mov
into
cmp
mov
clc
test
aaa
mov
jge
pop
cli
mov
cmpsl
clc
shrl
mov
add
cmp
clc
cmp
add
bound
add
dec
cmp
add
lods
int
clc
sar
pop
arpl
add
fwait
mov
and
add
aam
mov
cld
jmp
and
or
add
add
clc
adc
add
cmpsl
clc
aad
add
push
add
jl
clc
clc
ret
cvtdq2ps
or
push
xbegin
pop
jge
pop
bound
add
mov
lea
mov
clc
adc
and
add
clc
inc
clc
rcr
aad
clc
dec
inc
add
xchg
adc
add
sahf
je
pusha
add
mov
clc
test
test
clc
mov
dec
sahf
adc
add
add
clc
in
mov
push
mov
lock
push
out
pop
jo
add
cltd
add
add
jo
add
mov
clc
lock
jbe
xchg
and
and
add
jbe
clc
pusha
add
cmp
add
sub
jl
ds
pop
or
lock
clc
scas
push
add
loope
fdivl
and
add
clc
test
jb
add
clc
outsb
jp
pop
dec
rorl
je
pop
or
xchg
mov
jno
add
jnp
clc
clc
jno
add
clc
xchg
push
add
push
mov
cld
jmp
ja
cmp
clc
or
clc
cmp
pop
mov
nop
xor
add
outsl
aad
sar
loop
fiaddl
out
in
icebp
push
out
or
clc
and
add
mov
mov
pop
pop
cmp
data16
fimuls
add
inc
clc
pop
push
inc
add
outsl
adc
idivb
clc
sti
jg
aaa
adc
add
pop
leave
fcomi
mov
mov
inc
add
jo
add
jne
cld
jmp
adc
shll
add
popf
hlt
cmp
ret
add
xor
add
data16
mov
add
cmp
sub
ficoms
xlat
repnz
add
popa
add
cmp
clc
push
out
jle
add
fs
xor
add
clc
ror
dec
stos
popa
add
and
add
add
clc
jo
add
int3
dec
mov
ret
clc
sahf
sub
clc
gs
cmpsb
clc
and
inc
add
push
mov
clc
ss
jbe
adc
add
sub
clc
inc
add
loopne
sub
add
clc
mov
add
jbe
pop
xchg
add
xchg
loopne
fidivrs
cmc
inc
add
jb
add
int3
lock
add
insb
in
or
mov
add
add
adc
add
or
jns
mov
sub
cmp
nop
mov
clc
fstps
xchg
jmp
clc
xor
clc
popf
adc
add
push
in
rorb
push
cld
jmp
sub
cwtl
and
add
aaa
cmpsl
clc
nop
xor
bound
add
clc
outsb
sbb
cmp
aam
and
add
lret
cmp
aam
add
mov
push
jmp
das
sbb
mov
pop
clc
xchg
lock
vdivps
or
add
pop
push
add
int3
pop
xabort
sbb
test
mov
cli
sub
sbb
mov
add
jmp
jno
mov
fnstcw
push
add
xor
add
call
jmp
sar
clc
jp
pop
data16
movsl
clc
pop
es
or
leave
leave
lahf
cmp
bound
add
pop
cld
jmp
test
test
aam
add
cld
jmp
sub
push
adc
add
clc
sbb
add
scas
sahf
push
mov
decl
push
add
add
adc
xchg
fiaddl
push
xchg
imul
test
sar
clc
test
iret
sub
push
bound
add
clc
outsl
xbegin
cmp
add
cmp
lret
cld
jmp
mov
cmpsb
xor
add
add
movsl
clc
mov
jne
clc
lahf
push
sub
mov
clc
arpl
add
cmp
xchg
loop
sbb
test
push
add
cld
jmp
lahf
pushf
mov
sahf
jl
jecxz
and
add
aaa
aaa
lahf
sbb
add
lret
ror
inc
clc
iret
jl
clc
outsb
in
xbegin
add
clc
inc
add
jle
imul
sub
cmp
clc
add
dec
cmpsl
clc
add
add
add
gs
or
add
add
filds
add
mov
inc
clc
xabort
mov
enter
add
ret
add
imul
jb
add
and
add
scas
test
add
pop
clc
out
xor
cld
jmp
mov
inc
clc
repnz
xor
add
dec
push
add
movsb
clc
dec
push
add
bound
add
js
clc
repnz
clc
dec
call
sbb
jmp
das
scas
nop
sub
fcompp
lret
and
add
sar
jmp
dec
test
and
add
cld
sub
add
sbb
add
movsb
clc
sarb
clc
mov
outsl
popa
fs
jmp
jp
add
test
clc
cmp
cltd
sbb
clc
inc
add
sar
xchg
in
in
cltd
adc
add
loopne
lock
clc
out
cmovb
add
mov
xchg
fsubrp
and
add
nop
push
pop
fs
into
addr16
movsl
clc
fnsave
add
add
notl
add
add
and
add
inc
add
inc
clc
push
add
cmp
clc
mov
jno
add
fstpl
arpl
add
clc
ret
clc
pop
clc
mov
pop
or
clc
loop
push
add
imul
clc
dec
adc
add
add
dec
dec
insl
leave
ja
clc
add
dec
pop
push
lods
daa
clc
xchg
lcall
or
add
aad
add
jb
add
or
in
lcall
mov
jmp
pop
push
outsl
cmp
add
pusha
add
adc
add
clc
sub
add
or
int
pop
and
add
add
inc
add
adc
mov
push
cmp
xor
clc
outsl
mov
fs
pop
cwtl
loope
scas
lret
dec
mov
dec
stos
mov
lahf
int3
cmp
inc
clc
mov
clc
testl
pop
addr16
inc
clc
mov
fidivrs
adc
add
and
jnp
cmp
add
pop
scas
rcrl
xor
add
xchg
lahf
loope
mov
clc
dec
imulb
sbb
add
add
add
cli
push
icebp
mov
add
fidivs
add
and
mov
scas
and
dec
decl
push
out
ljmp
pop
movsb
pop
lret
push
dec
clc
xchg
mov
add
sub
clc
push
mov
lods
ss
ret
scas
inc
lea
inc
add
int3
gs
mov
push
mov
add
jge
jg
clc
pop
sbb
clc
xbegin
add
add
adc
add
add
ljmp
std
add
add
imul
and
add
sti
inc
clc
jmp
inc
clc
jno
add
in
bound
add
clc
or
cmp
add
cld
jmp
inc
fs
std
mov
test
clc
ret
and
add
pushf
dec
gs
jae
add
sub
sbb
out
icebp
and
add
out
movsb
clc
sub
add
dec
push
pop
clc
mov
inc
clc
xor
add
mov
das
pusha
add
lret
and
add
dec
cmp
add
iret
hlt
adc
mov
add
cld
jecxz
xabort
clc
push
fsubrp
dec
clc
scas
cmp
add
add
call
mov
sub
mov
cld
jmp
xchg
sub
add
ret
clc
cs
xadd
std
leave
adc
add
popf
cmp
cmp
cld
jmp
inc
sub
mov
cmp
dec
mov
add
pop
stc
cmpsb
clc
out
ficompl
mov
sar
call
jge
je
and
push
add
nop
mov
add
data16
jo
add
mov
dec
push
clc
fdivs
cmpsl
clc
in
mov
stos
add
into
shlb
inc
clc
cmc
sar
clc
mov
insb
in
mov
pop
sub
clc
cltd
push
shll
cmp
mov
clc
add
add
jle
clc
mov
clc
ret
clc
gs
push
ret
cld
jmp
sub
jg
data16
add
iret
rep
clc
adc
add
clc
dec
int
clc
xchg
inc
add
or
and
add
add
or
inc
cld
jmp
inc
pop
sub
xchg
cmp
cmpsl
clc
emms
adc
sbb
mov
xor
add
clc
cmp
xlat
add
add
sbb
jmp
pop
dec
sti
jno
add
clc
dec
hlt
imul
pusha
add
loope
add
add
xor
add
lcall
hlt
push
mov
jmp
clc
push
or
push
push
ret
push
pop
leave
cwtl
gs
ljmp
add
inc
add
jae
add
clc
jae
add
adc
add
das
dec
test
sub
xor
clc
cmpsl
clc
adc
sbb
mov
sub
jmp
cmp
clc
daa
clc
jns
clc
ror
add
add
add
sub
add
adc
jecxz
sarb
add
cld
jmp
and
ljmp
add
add
add
ds
mov
add
or
bound
add
dec
xor
add
test
clc
inc
clc
test
clc
mul
clc
iret
movsb
clc
mov
adc
add
cmp
jge
clc
loop
xchg
or
jmp
xor
jo
add
sbb
clc
ss
sub
jmp
sahf
adc
jg
jp
jae
add
pop
xchg
push
movsl
cld
jmp
push
sbb
lahf
lret
aad
xlat
inc
add
fmull
jne
clc
dec
or
push
xor
in
test
fidivs
dec
into
add
add
add
clc
jnp
inc
clc
gs
movsb
clc
loope
cmpsl
clc
outsb
test
add
add
cmpsl
clc
or
es
int
scas
xbegin
sar
pop
jp
arpl
add
add
cmp
das
fcoml
add
add
add
add
add
rep
clc
call
sbb
lea
add
push
clc
inc
add
fmuls
int3
inc
clc
inc
clc
jmp
clc
push
jmp
add
inc
clc
push
jg
add
nop
pop
and
add
outsl
repnz
lret
pop
clc
sbb
add
add
notl
repnz
jmp
subb
pop
dec
repz
add
clc
adc
add
int
clc
arpl
add
xchg
jl
inc
add
fcomi
cmp
je
cmp
push
add
and
add
sbb
jmp
add
in
inc
clc
adc
add
and
add
add
call
xor
and
add
xor
add
mov
sbb
inc
clc
adc
add
out
dec
pop
cmpsb
clc
inc
add
sbb
mov
add
clc
xor
clc
test
cmp
loopne
mov
rcl
gs
bound
add
outsb
int3
xchg
fmull
cmp
ret
clc
sub
ret
clc
and
movsb
clc
push
add
imul
push
clc
aas
jg
add
lods
mov
cmpsb
clc
and
add
cmpsb
clc
cmp
adc
add
jmp
dec
aas
jno
nop
jne
push
clc
clc
push
mov
inc
clc
addr16
cs
aaa
and
add
clc
mov
push
cld
jmp
jno
mov
cwtl
jmp
mov
add
pop
mov
clc
sub
xchg
dec
ror
cli
cmp
add
sbb
cmp
add
mov
add
pop
push
add
sub
aaa
jb
add
jae
add
std
mov
add
add
add
add
add
clc
mov
adc
add
pop
jge
add
dec
pop
fistpl
adc
add
bound
add
adc
shrb
jmp
sub
nop
jbe
add
add
flds
mov
loope
in
das
pop
inc
add
or
lea
sub
add
jb
add
cmp
and
add
aad
in
test
add
push
clc
loopne
out
and
push
add
fimuls
clc
outsl
cwtl
lods
mov
clc
and
add
ds
pop
pop
enter
add
lcall
loop
ret
clc
mov
ss
clc
push
clc
cmp
clc
inc
add
iret
or
add
add
add
fiaddl
lock
clc
pop
mov
dec
pusha
add
sub
add
pop
stos
cmp
cli
lcall
lea
xor
and
sub
jns
add
lret
fisttpll
pop
clc
movsb
clc
sti
inc
clc
clc
cmpsb
clc
jno
add
ret
clc
std
stos
adc
je
add
stc
repnz
add
gs
popa
add
dec
arpl
add
gs
mov
mov
cld
jmp
sub
sbb
add
fwait
cmp
xor
add
ss
scas
xabort
add
mov
add
jnp
mov
je
cmpsl
clc
cmp
clc
xchg
popa
add
add
or
stos
stos
mov
add
fsts
dec
popf
xchg
jp
clc
add
jnp
clc
cmpsl
clc
test
mov
clc
sub
mov
clc
mov
add
mov
outsl
xor
add
add
in
mov
pop
stc
inc
add
push
xbegin
hlt
in
pop
movsb
clc
sbb
clc
shl
clc
stos
clc
filds
add
add
add
clc
das
mov
ret
shlb
cld
xabort
clc
cltd
or
sar
sar
inc
clc
mov
mov
dec
das
dec
jl
sbb
out
xchg
adc
add
xor
add
clc
insb
jo
add
add
clc
outsl
fidivl
or
or
push
add
xchg
scas
mov
add
into
cwtl
stos
pop
gs
adc
add
add
mov
add
xchg
xchg
mov
clc
xchg
adc
loop
btc
add
sbb
xchg
repnz
into
sarl
inc
add
fwait
mov
add
add
xchg
sub
shl
clc
int3
fs
out
repz
add
adc
add
jge
outsl
xchg
push
push
mov
nop
add
add
xor
add
arpl
add
std
or
hlt
dec
repz
mov
xchg
stc
es
adc
add
and
add
sub
mov
push
call
cld
jmp
imul
ds
es
mov
pusha
add
adc
add
popf
cmp
clc
jp
mov
repnz
jns
add
add
addr16
cmp
push
ss
ret
popa
aas
push
sub
mov
jmp
ja
jg
sub
clc
stos
ror
fadds
outsb
cmp
and
add
mov
pop
rcrb
sub
push
clc
pop
push
imul
push
clc
test
add
add
jmp
dec
push
insb
insl
hlt
arpl
add
clc
jb
add
mov
add
aas
push
lea
cld
jmp
dec
cmp
jbe
shll
clc
scas
sub
nop
arpl
add
jae
add
clc
enter
mov
add
mov
clc
lret
gs
data16
dec
mov
add
call
cld
jmp
jp
cmpsb
rorl
enter
sbb
add
mov
and
add
adc
add
add
adc
add
add
add
fcom
stc
fs
out
sbb
jne
cld
jmp
sub
cwtl
jne
add
or
shufps
sahf
cmpsl
clc
stos
push
push
cs
clc
push
popf
adc
jo
add
clc
push
clc
mov
out
pop
pop
negl
xbegin
add
pop
fs
sbb
clc
cltd
fimull
nop
ja
stc
push
scas
loopne
hlt
xor
add
repz
bound
add
mulb
xlat
add
add
inc
clc
out
cmp
jno
add
stos
xchg
and
add
clc
fidivl
enter
ret
pop
lea
inc
add
jns
jne
add
pop
xor
add
pop
jae
add
sub
out
mov
ljmp
xchg
mov
clc
int3
jnp
clc
hlt
lahf
adc
adc
add
mov
clc
pop
xbegin
add
jne
stc
push
and
add
clc
adc
add
data16
dec
inc
clc
xor
add
clc
pop
clc
out
aas
xor
fcomip
mov
add
fcomi
aaa
xchg
mov
add
cmp
or
sbb
lea
fisttpl
pop
jbe
add
aaa
jb
add
clc
lods
push
imulb
ss
ret
sub
add
cmp
sub
fucomp
pop
stos
sub
das
adc
add
mov
pop
fsubl
cmp
call
ljmp
mov
mov
cld
jmp
mov
xor
add
dec
lret
mov
mov
fs
dec
jle
test
dec
stos
test
clc
add
add
clc
cmp
adc
das
out
cmp
aam
add
arpl
add
cld
xor
add
stc
icebp
cmp
rorl
fidivrl
mov
xchg
movsl
clc
stc
cltd
dec
and
add
cmp
scas
mov
out
and
add
mov
add
add
sar
jle
clc
imul
sahf
negl
in
push
push
mov
fnstsw
add
lea
cmp
add
sar
inc
clc
loop
xchg
ljmp
jnp
clc
mov
clc
push
clc
or
clc
popf
pop
clc
xor
add
pop
inc
clc
mov
cmp
lods
lock
push
fistl
jg
mov
clc
cmp
mov
pusha
add
ds
clc
mov
cmc
lret
xchg
cmp
add
adc
js
insb
jae
add
push
xchg
sub
fstpt
inc
clc
jmp
aam
stos
adc
add
clc
inc
add
and
add
add
mov
xchg
mov
xchg
lods
dec
mov
jbe
clc
decl
aaa
dec
inc
add
and
jno
add
sti
cmpsl
clc
hlt
mov
xchg
add
add
mov
cmp
cmpsb
clc
cld
out
jne
clc
and
clc
in
cs
add
jmp
xchg
inc
add
push
add
mov
shlb
jne
adc
add
incb
add
jge
cmpsb
clc
pop
lahf
js
pop
out
inc
clc
push
ret
push
add
fs
dec
data16
scas
inc
clc
and
add
inc
add
add
add
add
lea
mov
inc
add
sar
pop
add
add
es
add
add
negl
xchg
cld
jmp
dec
jg
pop
sub
clc
sbb
add
add
xchg
xbegin
stc
dec
and
add
lcall
pusha
add
ljmp
add
filds
dec
cmpsb
clc
xchg
or
ja
clc
adc
add
aam
in
fs
insb
cmp
pop
into
idivb
ret
test
imul
adc
add
adc
inc
clc
sub
mov
add
add
cmpsb
clc
outsb
data16
popf
or
clc
and
add
clc
cmp
and
add
es
jno
add
cmc
and
add
pop
xor
cmc
mov
clc
ficompl
clc
popa
add
xchg
jne
add
or
clc
inc
clc
mov
ss
pop
xchg
mov
lret
xchg
daa
clc
scas
sub
ficompl
sbb
clc
movsl
clc
mov
xor
add
add
mov
mov
push
ret
xchg
dec
or
clc
gs
std
or
or
mov
clc
arpl
add
fsubrs
mov
mov
add
lahf
mov
cmp
add
and
add
add
hlt
stc
mov
clc
jmp
clc
add
add
dec
dec
lahf
add
push
jns
add
xchg
jle
or
sti
sti
or
lret
xor
add
clc
mov
lea
jnp
repz
popa
add
pop
xor
add
or
add
cmpsb
sub
mov
clc
sbb
movsb
clc
mov
xlat
and
add
mov
clc
jnp
clc
int
fs
js
sbb
add
jp
adc
add
cld
jmp
ja
or
loopne
je
lahf
xor
add
push
gs
jnp
jbe
addr16
mov
add
and
add
xabort
clc
in
sub
add
cld
aam
cmc
pop
cmp
repz
cltd
outsb
std
xor
add
lods
test
cmp
sub
lret
add
mov
cmpsl
clc
adc
add
aaa
cmp
clc
jae
add
add
mov
inc
clc
jl
dec
fwait
push
xchg
cld
jmp
push
add
sub
add
xor
add
sbb
add
clc
cmp
jbe
add
ficomps
daa
clc
gs
inc
add
inc
add
or
clc
adc
add
cmp
repz
add
lahf
xor
daa
clc
outsl
mov
cli
xchg
repz
movsb
clc
cmp
stos
inc
add
mov
arpl
add
pop
clc
push
clc
pop
mov
jmp
push
ja
clc
enter
push
add
bound
add
test
xor
out
fildl
jmp
sarb
mov
add
push
call
jmp
jg
sbb
clc
xabort
sbb
xbegin
clc
pop
clc
cmc
inc
clc
lahf
mov
add
daa
clc
lahf
pop
clc
sbb
mov
out
mov
clc
sahf
ret
inc
add
jecxz
xchg
jl,pn
jb
add
add
add
jns
add
mov
pop
js
push
cmp
or
push
fidivs
js
rcrl
addr16
or
mov
add
dec
jge
clc
data16
dec
ss
adc
add
add
mov
clc
mov
out
out
pop
decl
jmp
mov
test
add
add
clc
jbe
mov
add
add
data16
mov
lret
and
add
js
clc
mov
clc
into
mov
adc
add
cmp
inc
clc
sub
sbb
mov
mov
mov
add
loopne
inc
add
test
icebp
outsb
mov
add
mov
add
pop
test
sub
add
clc
repz
mov
cld
jmp
test
cmp
jge
sbb
test
sbb
add
jmp
lods
cmp
fdivl
jecxz
test
mov
jg
inc
clc
dec
imul
adc
sbb
add
and
add
clc
repz
clc
cmc
dec
lahf
push
nop
push
mov
clc
dec
xchg
fistpl
mov
add
push
add
cmpsb
clc
cmp
add
sub
cmp
jne
add
xabort
popf
into
cmp
add
mov
roll
add
arpl
add
mov
mov
add
add
add
pop
xor
add
add
xchg
push
add
popa
add
jecxz
int
fwait
mov
xor
add
clc
bound
add
clc
adc
add
mov
out
xbegin
add
add
cltd
jecxz
xchg
lock
clc
in
push
aam
ljmp
and
imul
mov
adc
add
test
xchg
pop
push
call
sti
inc
clc
nop
js
xchg
popa
add
mov
add
in
hlt
add
add
add
ret
clc
push
add
out
cmc
dec
aaa
hlt
sbb
push
dec
test
and
cmp
pusha
add
movsl
clc
fdivr
push
pop
cld
jmp
inc
adc
push
dec
jp
inc
add
das
pop
bound
add
mov
je
cmp
cld
jmp
dec
sub
cmp
lods
sub
ss
ret
sub
das
and
addr16
cmp
inc
clc
ds
or
clc
xchg
js
clc
or
jno
add
add
clc
mov
sub
clc
mov
add
nop
push
sar
jmp
xchg
inc
add
bound
add
add
push
add
rcrl
clc
in
ljmp
add
sbb
loope
fwait
dec
or
sbb
add
loop
jge
clc
bound
add
fdiv
cmp
add
or
vsubps
clc
ja
loopne
dec
movsl
clc
es
ds
je
clc
repnz
shr
shll
test
addr16
gs
es
xchg
adc
add
cmp
clc
sar
mov
clc
mov
adc
add
clc
pop
cmp
add
clc
loopne
cli
fwait
xbegin
cli
into
cmp
cmc
or
add
cmp
mov
and
add
add
frstor
je
clc
int
dec
mov
add
out
jecxz
xor
add
mov
je
mov
add
es
sar
jo
add
clc
int
nop
cmpsb
clc
nop
pop
decl
nop
adc
mov
clc
aad
add
clc
mov
inc
adc
jmp
lods
cwtl
push
test
xor
add
insb
mov
clc
jno
add
add
or
add
inc
add
cmc
loop
mov
clc
pop
add
sub
test
add
cmp
popa
add
cmp
add
clc
or
clc
pop
lods
jle
or
inc
clc
pop
pop
clc
inc
add
jno
add
xchg
gs
add
add
push
jb
jmp
sub
pop
aaa
stc
nop
sub
leave
pop
stos
push
clc
popf
lods
jp
add
ret
clc
xchg
jecxz
xchg
adc
add
ret
clc
pop
cmp
in
dec
lahf
addr16
jl
sbb
push
ret
dec
xor
mov
adc
add
add
sbb
cld
jmp
add
inc
clc
dec
fsts
add
fimull
lcall
ret
aam
add
lock
add
in
in
enter
fcomip
and
add
clc
mov
add
mov
clc
sbb
cwtl
cmp
je
add
into
push
push
push
mov
lcall
stos
sbb
fnsave
add
clc
jmp
int3
cmp
fiadds
add
add
jmp
xorb
jge
repz
jp
add
int3
jo
add
cmp
clc
das
xchg
adc
add
out
xchg
mov
les
cld
jmp
xchg
sub
pop
and
add
clc
dec
fimuls
mov
lahf
int3
clc
inc
add
fwait
imul
jge
and
add
add
add
mov
or
add
aad
add
sahf
outsl
imul
cmp
add
xchg
jnp
add
add
add
add
cld
jmp
sub
sub
dec
out
incb
add
add
add
xor
add
clc
out
gs
lcall
jmp
xchg
push
sub
or
lea
hlt
pop
iret
sbb
movsl
clc
push
sub
push
jbe
clc
cmp
clc
scas
jl
jo
add
add
nop
jae
add
cmp
mov
add
pop
int
stos
outsb
sbb
jmp
add
xchg
jecxz
cltd
pop
pop
clc
roll
add
adc
add
clc
out
nop
inc
add
bound
add
jecxz
scas
shl
clc
mov
sbb
bts
add
dec
sar
add
je
clc
mov
clc
xchg
repnz
pop
dec
popf
add
loopne
cld
jno
add
push
mov
jmp
outsl
push
inc
pop
cltd
mov
mov
clc
dec
jns
pop
mov
cmp
mov
fistpl
add
adc
mov
clc
test
sbb
push
ret
lods
cmpsb
jge
out
cmpsl
clc
in
adc
add
notl
add
mov
xor
add
add
in
call
pop
aaa
push
and
add
push
cmp
clc
std
sbb
add
push
add
sub
sub
lea
test
adc
add
clc
xchg
in
loop
dec
ja
inc
add
es
mov
clc
xor
sub
add
add
pop
sahf
jmp
add
sub
add
loop
inc
add
mov
pusha
add
xor
add
dec
lcall
xor
insb
push
add
mov
add
mov
clc
push
add
pop
jmp
clc
call
clc
test
cmpsb
clc
jp
add
cmc
outsb
je
xchg
jno
add
cltd
pop
mov
xchg
dec
stos
clc
inc
clc
je
push
add
loope
fdivr
xor
adc
add
pop
clc
xor
jb
add
push
add
sti
or
sbb
cmc
ljmp
clc
fdivp
in
stos
xbegin
or
mov
xor
jmp
or
mov
clc
push
adc
add
mov
test
add
dec
cmp
add
jmp
scas
sub
bnd
add
mov
clc
lret
cmp
clc
popf
xchg
cmp
leave
mov
add
pop
xor
lods
mov
je
cld
jmp
daa
clc
add
add
add
test
mov
cmp
add
aaa
shrl
inc
add
push
add
jg
push
adc
pop
jb
add
add
incb
add
push
xchg
add
add
pop
cld
sub
add
mov
in
dec
pusha
add
push
add
xchg
mov
pop
xor
add
and
add
add
add
cltd
int3
mov
ss
ret
sahf
push
sbb
add
pushf
xchg
xor
add
clc
in
int
popf
and
jmp
add
dec
push
add
cmp
dec
add
add
clc
psubsw
jno
add
clc
and
add
xor
add
xor
add
in
mov
movsl
clc
ficoms
add
lock
scas
or
adc
add
clc
cmpsb
clc
jae
add
inc
clc
jno
add
push
add
jmp
movsb
cltd
jmp
pop
popa
add
xchg
mov
jb
add
add
fldenv
ret
clc
cmp
mov
int3
inc
add
hlt
lods
iret
lock
add
insl
mov
imul
add
add
cwtl
rclb
add
push
mov
ss
ret
test
mov
into
push
lret
adc
add
mov
clc
lcall
add
xor
add
lods
fildl
pop
inc
clc
jl
popa
add
dec
or
inc
clc
pop
push
stos
mov
push
inc
cld
jmp
or
clc
test
or
jo
add
add
push
add
jmp
pop
int3
pusha
add
das
sub
add
call
add
clc
into
sub
clc
popf
xor
scas
leave
adc
xchg
ljmp
mov
mov
cmp
add
xchg
call
cmpsl
clc
xchg
ja
add
cmp
imul
cld
insb
pop
sub
imul
push
popa
add
or
popf
sbb
clc
faddp
clc
xbegin
lods
lcall
mov
gs
sbb
sub
jmp
imul
mov
mov
add
fidivs
mull
cmp
fnstsw
clc
xchg
push
and
add
jmp
nop
scas
push
adc
mov
clc
push
sub
push
pop
add
add
add
sub
clc
out
and
add
mov
mov
add
add
stc
push
jmp
and
test
repnz
clc
mov
in
cld
jmp
pop
sbb
and
add
out
or
pop
push
add
lods
test
in
lods
sbb
jmp
jg
test
mov
and
daa
clc
aas
in
cmp
test
cwtl
fiaddl
dec
adc
add
stos
iret
add
add
pop
jp
push
and
add
mov
xbegin
jmp
dec
sub
xor
add
bound
add
clc
ret
clc
sub
push
inc
clc
movsb
clc
sub
cli
ds
jae
add
clc
sub
call
cld
jmp
pop
push
movsb
sub
jnp
clc
and
add
mov
clc
and
add
mov
clc
or
clc
and
add
ficoms
add
mov
add
cmpsl
clc
dec
mov
insl
xchg
jmp
aas
mov
add
mov
jmp
sbb
outsl
or
clc
ljmp
sbb
push
cld
jmp
inc
sub
clc
push
addr16
cmp
add
je
out
cmp
sbb
lock
clc
cmp
sub
fwait
nop
xabort
addr16
int3
sbb
vaddps
dec
pop
xchg
outsb
push
add
pop
pop
iret
cmp
idivb
mov
clc
pop
or
push
add
cld
jmp
jno
mov
clc
je
clc
pusha
add
loopne
mov
call
fists
dec
or
fidivl
pop
lods
add
add
push
inc
or
add
clc
dec
push
adc
test
jg
pushf
mov
jbe
std
ljmp
inc
add
pop
clc
loope
insl
cmp
add
xor
add
xor
add
cmp
add
mov
pushf
xabort
jge
decl
jmp
sub
insl
stc
cld
xor
add
imul
inc
clc
sbb
push
clc
lods
inc
clc
xor
add
add
push
pop
clc
and
add
mov
gs
lcall
sbb
lea
add
xor
add
add
pop
push
add
fadd
clc
pop
out
movsb
clc
pop
ss
aad
clc
jmp
int
cmp
out
sub
aaa
and
add
mov
aas
mov
mov
movsb
clc
dec
and
add
cmp
imull
add
and
push
dec
push
add
dec
mov
mov
sahf
outsl
mov
fnsave
jno
add
xchg
in
repnz
mov
add
jbe
enter
cmp
adc
add
fiaddl
mov
mov
push
sub
clc
movsl
clc
mov
outsl
lret
add
lcall
nop
push
adc
add
into
out
fistl
cmp
cltd
stos
out
das
sub
add
bound
add
pushf
jg
into
out
sbb
insb
stos
pop
adc
adc
add
data16
xchg
int
mov
xchg
fcoms
adc
add
sbb
jmp
and
push
nop
adc
clc
xbegin
dec
and
add
test
dec
leave
sbb
idiv
popa
add
daa
clc
nop
push
add
out
clc
data16
inc
add
jecxz
call
loope
popa
add
sbb
clc
pop
clc
dec
mov
sub
or
jmp
imul
and
jmp
pop
and
mov
clc
icebp
out
cmp
out
sbb
cmc
lcall
sub
xor
add
outsl
sti
mov
call
clc
into
jb
add
loop
pop
sbb
jmp
sbbb
sub
int3
cs
cmp
cmp
add
test
dec
leave
push
clc
xor
add
add
cmp
roll
add
inc
add
movsl
clc
xchg
mov
sahf
sub
add
test
dec
jg
clc
out
mov
clc
dec
daa
clc
enter
sub
push
call
in
je
lahf
add
add
add
add
popf
inc
add
mov
sar
add
repnz
mov
cltd
push
std
adc
add
inc
add
jecxz
es
push
add
inc
clc
aad
pop
cld
jmp
adc
pop
fldl
add
mov
js
and
movsb
clc
pop
push
cs
inc
clc
cmpsl
clc
inc
add
test
add
and
add
cmpsl
clc
pop
imul
add
outsl
mov
clc
arpl
add
clc
test
dec
movsb
clc
cli
xor
xor
mov
add
scas
test
outsb
in
push
add
inc
clc
and
pop
add
cld
jmp
movsb
stc
push
clc
mov
pop
cmp
clc
jl
sub
ja
out
in
sbb
add
pop
popf
push
add
dec
lahf
mov
mov
iret
loope
add
add
add
push
dec
jle
xchg
lods
fsts
add
add
fcoms
mov
push
sarl
adc
add
add
add
push
add
or
add
jmp
leave
std
mov
inc
clc
fadds
clc
aad
or
clc
inc
add
enter
lods
nop
insb
outsl
xchg
pop
clc
adc
clc
push
add
sbb
inc
clc
and
sar
ja
add
cmp
imul
dec
mov
lahf
adc
add
clc
outsb
mov
lea
mov
sbb
movsb
cld
jmp
sahf
lea
cmpsl
clc
cmpsb
clc
rorl
call
add
sbb
fmulp
out
sub
fimuls
xchg
stos
clc
xchg
mov
clc
or
add
sti
es
cmp
cmp
test
clc
stos
scas
or
push
push
add
inc
add
xor
add
sub
arpl
add
xchg
pop
je
and
add
clc
fcompl
cmp
add
sbb
add
mov
xchg
add
add
dec
sub
inc
add
add
add
lret
inc
add
inc
add
cmp
fsubrl
lret
movsb
cld
jmp
sahf
ja
scas
jecxz
mov
imul
add
cmc
push
sub
call
clc
mov
hlt
data16
sbb
clc
jae
add
imul
jns
clc
mov
add
aaa
cmc
mov
pop
adc
clc
in
mov
clc
cmp
inc
add
clc
movsl
clc
push
add
repz
xor
mov
cld
jmp
ja
sub
jnp
out
frstor
cld
ljmp
push
hlt
add
add
mov
lods
pop
clc
ret
clc
xchg
in
daa
clc
cltd
mov
sub
fwait
jb
add
repz
clc
imul
clc
popa
add
bound
add
add
inc
clc
addr16
cmp
ret
clc
or
push
addr16
jne
cld
push
add
dec
test
cltd
leave
pop
rclb
fs
cmp
mov
pop
cld
jmp
push
sub
lea
mov
xor
add
xabort
lea
cld
jmp
push
mov
pop
clc
mov
xor
cld
jmp
dec
push
popa
push
xadd
dec
jae
add
lcall
add
lret
imulb
and
ss
ret
push
push
jl
test
adc
mov
cld
jmp
sub
cwtl
enter
add
out
negb
pop
xor
add
clc
ret
clc
movsl
clc
mov
clc
push
clc
xor
add
scas
pop
clc
mov
clc
mov
aas
or
add
imul
xbegin
or
xor
add
add
sar
out
clc
dec
cli
rclb
clc
mov
clc
test
and
clc
mov
out
iret
aam
cmp
add
and
add
pop
clc
nop
cmpsl
clc
or
clc
movsb
clc
out
fistl
add
filds
lods
or
xchg
inc
clc
fcmovb
clc
divl
add
mov
add
in
jecxz
adc
add
cmp
add
jae
add
sub
or
in
push
add
ja
mov
inc
clc
jmp
inc
clc
sub
pop
inc
clc
push
clc
jns
add
xor
add
pop
jp
clc
cmp
adc
add
cmc
lret
lock
add
clc
rol
clc
mov
clc
lods
mov
cltd
lahf
pop
pop
dec
das
pop
fs
movsb
clc
adc
add
ja
ds
addr16
cmp
repnz
clc
incl
enter
lcall
sbb
sbb
xor
dec
pop
daa
clc
cmp
pushf
mov
add
aam
bound
add
cld
mov
clc
sar
sbb
clc
cmc
dec
pushf
jle
xchg
pop
stos
loopne
xor
add
aad
clc
aam
pop
jecxz
sahf
dec
mov
clc
jg
clc
pop
jg
clc
sahf
push
add
cld
jmp
sbb
xchg
cmp
clc
pop
clc
adc
add
repz
aad
cmp
mov
add
lcall
pop
jg
and
add
clc
mov
jle
mov
clc
xor
add
add
in
push
stc
jmp
xor
add
bound
add
ss
ret
or
loop
icebp
push
adc
add
clc
mov
jg
add
call
decb
mul
clc
mov
xchg
xlat
cmp
mov
outsl
cmp
fld1
sbb
clc
mov
mov
add
sbb
clc
inc
add
xchg
pop
outsl
mov
out
adc
mov
sbb
das
ss
leave
and
add
clc
out
sub
aas
inc
clc
pop
and
add
xor
add
add
sub
clc
js
clc
icebp
mov
inc
clc
cmp
jnp
test
mov
and
add
cwtl
cmp
daa
clc
add
add
clc
cmp
clc
fstps
add
adc
add
xchg
pop
cmpsb
clc
mov
lcall
inc
clc
ds
push
inc
add
jle
xchg
outsb
jns
jo
add
add
xlat
sub
data16
xor
add
test
je
cmp
mov
add
push
mov
cld
jmp
mov
add
add
mov
test
jne
inc
clc
ret
mov
clc
dec
pusha
add
loope
shrl
clc
push
lcall
mov
pop
fdivs
jbe,pn
add
xchg
lea
jge
xlat
out
or
cmp
add
add
add
cmp
push
add
xchg
sbb
inc
clc
aas
adc
add
adc
push
fldenv
cmc
xbegin
push
add
iret
stos
dec
cmp
xchg
jge
dec
lock
mov
xchg
movsl
clc
enter
clc
insb
mov
jle
add
pop
scas
mov
mov
lret
jp
clc
loop
add
add
and
and
aaa
xchg
arpl
add
gs
and
add
add
lret
clc
rcrl
jmp
outsb
cmp
jle
cmpsb
clc
imul
das
cmp
adc
add
cmp
mov
jl
xchg
outsl
lret
outsl
add
add
add
sub
mov
add
or
push
clc
cmc
in
pop
xor
add
cmp
lods
mov
add
flds
add
jnp
add
xor
insl
and
sbb
aaa
jo,pn
add
add
xchg
add
add
add
stos
cmpsb
clc
ficompl
push
cld
jmp
cmp
pop
pop
and
add
pop
clc
popf
int
add
sub
dec
adc
outsl
lcall
or
clc
xchg
icebp
push
add
int
clc
mov
stos
leave
dec
jle
mov
clc
xor
add
add
setbe
sbb
and
add
adc
add
lock
add
loopne
out
scas
xabort
xor
add
xchg
jo
add
or
int
clc
test
dec
shlb
cli
scas
xchg
aaa
leave
cmp
clc
mov
inc
clc
jns
add
cmp
out
inc
clc
pop
and
add
xor
add
add
xabort
clc
pop
push
add
cltd
stc
adc
add
cmp
test
xlat
pop
jg
cmp
sar
mov
mov
movsb
clc
adc
add
mov
pop
pop
dec
push
lret
adc
add
add
or
jmp
sahf
dec
push
cmp
clc
mov
clc
jp
push
clc
cld
js
stos
mov
add
xorps
add
lea
out
cmpsb
clc
es
jecxz
cmp
bound
add
sub
imul
cmp
jp
add
cs
repz
popf
pop
clc
aaa
and
add
add
repnz
add
ficoml
add
push
ret
test
leave
imul
fwait
xor
add
cld
jmp
sub
ds
add
add
add
lret
cmp
sub
sar
inc
add
repz
dec
jb
add
add
add
pop
gs
pop
adc
add
xor
cld
jmp
nop
lods
inc
add
call
lcall
add
cs
or
add
cmp
ja
push
xor
ss
ret
pop
xchg
sub
add
inc
clc
fildll
or
xor
add
cld
jmp
pop
sub
clc
pushf
stos
arpl
add
push
dec
and
add
clc
ret
clc
loopne
inc
clc
adc
add
incb
das
mov
cld
jmp
jge
sub
inc
clc
lock
jmp
clc
data16
cmp
add
sub
push
es
call
mov
add
add
cmp
add
push
add
out
gs
ja
jne
cld
jmp
jge
add
movsl
clc
aaa
jae
add
and
xor
add
add
xchg
sub
clc
mov
add
jne
dec
or
negl
mov
jmp
sub
ja
clc
cmp
xlat
mov
rorb
mov
pusha
add
leave
pusha
add
into
jns
clc
mov
clc
dec
out
pop
push
dec
push
add
hlt
push
clc
xor
add
clc
dec
out
lahf
jg
jo
add
or
add
add
pop
daa
clc
pop
add
add
or
sbb
clc
inc
add
push
push
ret
push
inc
xor
jge
and
add
das
mov
xor
pop
push
inc
add
cmp
clc
jno
add
cmp
sub
cld
jmp
dec
lods
je
lods
add
clc
outsb
paddusw
pop
xor
clc
inc
jmp
fdivr
ljmp
mov
in
ds
lock
sbb
push
push
cld
jmp
sub
in
cmp
mov
cmc
in
and
add
movsl
clc
or
clc
jne
pop
clc
adc
add
pusha
add
xor
add
pop
cltd
xor
clc
aam
mov
clc
movsb
clc
call
clc
stos
add
add
inc
add
cmp
sub
add
clc
jmp
gs
and
add
insl
xchg
xchg
push
add
ss
cmpsl
clc
stc
cmp
and
add
clc
jecxz
clc
pop
scas
dec
jnp
add
push
clc
push
loope
pop
inc
add
pop
movsl
clc
nop
jb
add
add
pop
lods
jb
add
add
loope
adc
add
add
and
add
clc
std
frstor
mov
out
pop
in
lods
cmp
add
mov
mull
inc
add
fildll
add
dec
inc
clc
sbb
pop
cld
jmp
add
scas
sti
sub
add
mov
ret
clc
sbb
and
add
mov
xchg
cwtl
adc
add
add
test
add
push
cld
jmp
or
das
aas
das
test
sub
iret
js
add
push
cld
and
add
add
pop
cmp
icebp
mov
add
adc
add
nop
cmp
pop
fdivrl
add
in
pop
dec
cmp
cmp
xor
loopne
mov
clc
loopne
imulb
ds
clc
jbe
mov
cld
jmp
push
dec
push
lods
mov
fisttps
clc
sub
push
je
cld
jmp
psraw
or
cmp
xchg
sub
xabort
push
cmp
clc
fnstcw
push
cld
jmp
xor
add
adc
clc
sub
fwait
dec
int
stos
add
add
addr16
shlb
mov
clc
mov
jp
clc
sbb
clc
insb
pop
adc
add
add
das
pop
out
mov
add
xchg
xchg
mov
pop
or
rolb
hlt
sti
and
add
inc
clc
pop
lods
daa
clc
jbe
lret
popf
test
push
add
int3
fdivl
add
clc
cmp
cwtl
add
daa
clc
and
add
clc
sub
inc
add
mov
sub
add
lahf
es
sbb
jo
add
dec
sarl
test
movsb
clc
movsl
clc
sar
clc
nop
pop
repz
clc
sub
clc
jle
add
mov
clc
add
add
adc
add
clc
mov
add
pop
ja
mov
add
enter
jno
add
clc
out
lock
clc
push
add
loop
leave
push
and
add
adc
out
fcmovnb
clc
push
adc
add
add
mov
add
and
add
inc
add
xbegin
add
mov
or
cmc
mov
out
mov
jle
push
add
iret
into
cmp
clc
ror
push
ret
clc
out
sub
xchg
jno
add
loopne
loop
add
mov
dec
lock
iret
enter
add
xor
pop
jl
clc
stos
push
add
mov
stc
sbb
test
leave
cld
jmp
cmp
add
cld
jmp
jge
sahf
in
push
add
hlt
ret
out
fs
es
and
mov
cmp
push
les
jp
jbe
shrb
xchg
jle
stos
pop
adc
add
add
push
pop
imul
or
add
int3
bound
add
push
add
mov
stos
jns
test
in
insb
xor
add
adc
add
clc
xchg
clc
in
mov
data16
push
addr16
push
add
sbb
shrb
mov
push
add
cmp
add
pop
popl
add
sbb
clc
inc
clc
stos
and
add
xor
into
mov
add
mov
clc
and
add
add
inc
add
popf
add
cltd
sahf
mov
pop
xchg
nop
or
add
imul
insl
sub
lods
rorl
inc
clc
test
out
xor
add
mov
sbb
jmp
sub
int3
sub
add
lods
rcr
pop
mov
cwtl
movsl
clc
loop
xchg
outsb
xchg
or
lahf
rolb
add
mov
add
inc
clc
sub
add
cltd
push
add
cld
jmp
jmp
or
out
mov
sub
insl
jp
nop
fldl
xlat
clc
cmpsl
clc
adc
add
mov
push
ret
inc
sub
out
xchg
ljmp
clc
in
add
mov
ljmp
add
cmpsl
clc
inc
add
jbe
std
or
loop
mov
xchg
stos
repnz
pop
test
popf
addr16
jg
idiv
push
loope
mov
cld
jmp
cmpsb
lea
repnz
dec
call
xchg
sti
daa
clc
and
add
cmpsl
clc
je
clc
push
shlb
add
int3
sbb
arpl
add
inc
add
rorb
ja
stc
into
xchg
pop
dec
clc
mov
outsl
lahf
jmp
repnz
nop
sar
inc
clc
xor
lcall
pop
or
popa
cld
jmp
sub
cmp
or
jmp
mov
dec
mul
clc
loop
shr
mov
xchg
inc
add
lcall
rolb
pop
sar
jnp
pop
adc
scas
add
push
dec
xor
xabort
push
ds
cwtl
mov
cld
jmp
outsl
inc
add
pop
sar
xchg
mov
scas
cmpsb
clc
clc
push
jmp
nop
dec
aas
movsb
clc
lods
lahf
fsubr
add
clc
mov
clc
out
xchg
popf
int
das
pushf
and
add
popf
cld
data16
cmp
and
add
add
add
clc
dec
jae
add
clc
aad
mov
shlb
sar
nop
dec
cmc
popf
and
add
or
xchg
xchg
mov
xor
sti
cld
jmp
es
sub
lods
cmc
lcall
clc
jge
cmp
in
in
sbb
mov
ljmp
leave
fidivrs
pop
lret
es
scas
jge
clc
and
add
add
filds
add
clc
and
add
dec
push
cld
jmp
xor
add
push
cmp
js
clc
fs
and
inc
add
in
loopne
add
fadd
clc
loopne
mov
clc
cli
stos
stos
mov
add
clc
and
add
clc
imul
clc
vaddps
ror
sbb
clc
mov
lock
push
cld
jmp
inc
aaa
jg
pop
cli
rcrb
jb
add
mov
int
mov
xor
clc
cmp
addr16
pop
adc
add
in
fdivr
pop
mov
mov
cld
jmp
inc
and
jge
iret
int3
xlat
mov
cld
jmp
sbb
add
leave
sub
jmp
push
fwait
lods
sbb
push
add
aaa
or
clc
pop
dec
dec
insl
push
ljmp
push
add
sahf
cvtdq2ps
mov
fdivl
or
xchg
incb
add
dec
dec
in
ret
add
shlb
add
mov
je
clc
jb
add
movsb
clc
sbb
clc
cmp
pop
mov
clc
sub
clc
mov
add
sbb
sub
xor
add
add
pop
aam
or
stos
pop
cmp
pop
cld
pop
add
aas
ret
clc
xlat
fidivrs
mull
add
dec
and
add
fsub
clc
cmp
mov
mov
sarl
clc
pop
xor
add
divl
add
clc
repz
lea
cltd
cmp
add
xchg
loopne
mov
add
sub
push
mov
push
add
sti
xchg
dec
das
cmp
cwtl
cmp
incl
jge
cld
jmp
imul
push
cmp
clc
shlb
add
mov
cli
inc
add
popa
add
dec
xor
add
cld
jmp
test
mov
into
call
clc
aaa
push
test
cld
jmp
test
and
add
lcall
pop
xor
clc
loope
nop
mov
jbe
or
add
cltd
push
add
aaa
clc
pop
mov
cmp
jbe
jmp
cld
jmp
xchg
test
add
push
add
inc
clc
mov
loope
push
jmp
sub
add
fs
mov
add
add
add
push
clc
add
add
sbb
mov
and
add
add
insb
popf
pop
sahf
imul
cmp
clc
sbb
sti
ret
clc
clc
cmpsl
clc
cmp
mov
add
xor
xchg
adc
clc
push
out
jno
add
data16
call
add
jmp
insb
aam
pusha
add
rorb
jmp
clc
push
fcoms
add
sub
inc
add
sbb
mov
xor
adc
ficompl
xchg
dec
mov
clc
push
add
lcall
ss
out
divl
add
clc
xchg
lret
mov
clc
js
jmp
add
cld
jmp
sbbb
cmp
ret
clc
and
add
clc
daa
clc
fdivr
jmp
push
pusha
add
xchg
mov
clc
xabort
add
push
add
add
add
adc
add
add
popf
movsb
clc
fisttps
pop
addr16
sarb
cmp
xchg
jp
clc
sar
insl
dec
pop
cmp
add
adc
add
mov
xchg
lods
mov
add
test
pop
inc
add
and
add
jg
push
add
mov
mov
cmp
aaa
mov
push
clc
jg
add
push
gs
fnstcw
dec
or
clc
popf
push
and
add
add
inc
ss
ret
jp
sub
js
clc
rcrl
mov
mov
add
add
dec
inc
add
dec
repnz
jmp
mov
xbegin
add
push
push
add
mov
call
jno
add
negb
dec
dec
add
or
or
mov
xchg
mov
fstps
aas
pop
sub
add
cld
jmp
aaa
xchg
pop
mov
fstps
jbe
inc
clc
out
sbb
clc
xor
mov
inc
add
dec
dec
ret
add
ljmp
add
push
add
sub
xchg
cmp
mov
xchg
push
clc
mov
cmp
add
in
cmp
repnz
clc
sti
add
add
push
inc
add
cmp
clc
inc
add
mov
push
clc
adc
xchg
fldenv
mov
cmpsl
clc
sub
lods
in
movsb
clc
jecxz
mov
push
mov
mov
sar
jecxz
pop
mov
jo
add
cmp
add
xchg
lcall
add
out
and
add
addr16
addr16
mov
pop
jp
sbb
clc
xchg
aaa
rcr
mov
pop
xchg
mov
sub
and
dec
vxorps
rcl
xchg
mov
clc
mov
cmp
xchg
movsl
clc
mov
push
add
test
ret
sub
add
mov
clc
imul
lahf
sbb
add
pop
clc
cmp
add
pop
xchg
bswap
in
stos
xchg
cmp
sub
mov
jnp
add
loopne
cmp
add
sbb
pushf
pop
add
add
lcall
dec
clc
lahf
call
dec
fs
hlt
xlat
or
repz
add
lock
jge
add
fucom
clc
loopne
movsb
clc
mov
add
fidivrl
cmp
mov
and
xor
add
dec
daa
clc
daa
clc
pushf
fisttps
inc
add
leave
and
add
ds
sbb
clc
push
pop
jne
ret
clc
out
sarl
add
jg
add
lret
jmp
in
xchg
int3
ret
sub
add
add
loop
aam
popf
jmp
xor
add
clc
ret
sbb
cmpsb
clc
jae
add
mov
xor
add
clc
aam
add
add
dec
ret
inc
clc
popf
mov
sbb
clc
add
add
jo
add
clc
jecxz
jno
add
cltd
mov
test
pop
and
add
mov
add
adc
add
xchg
repz
add
mov
cli
pop
cli
loopne
loope
mov
inc
clc
sar
clc
and
add
mov
push
add
adc
add
mov
lcall
dec
xchg
fcoml
add
mov
ljmp
test
call
cld
jmp
sub
cmc
and
add
clc
loope
jae
add
xor
add
bound
add
pop
push
js
inc
clc
dec
push
add
cmpsb
clc
incl
push
ret
or
add
add
decl
mov
sub
lahf
imul
mov
clc
cmpsb
clc
mov
add
add
mov
sbb
clc
cli
pop
pop
add
cmpsl
clc
jne
sar
add
add
clc
jg
cmp
clc
data16
loope
imul
clc
mov
pop
clc
jp
xchg
mov
data16
es
rcr
adc
add
mov
int
add
mov
xor
add
add
and
add
inc
clc
pop
or
imulb
jmp
push
sub
mov
add
add
push
dec
ss
ret
push
dec
mov
push
nop
xchg
loope
cmp
cld
jmp
sub
ffreep
clc
scas
xabort
ja
add
mov
das
inc
add
and
cmp
imul
sub
loopne
in
inc
add
mov
add
or
clc
addr16
nop
pop
int3
dec
mov
mov
clc
arpl
add
add
cmp
pop
out
mov
xchg
clc
inc
clc
or
test
add
jae
add
clc
arpl
add
add
add
add
cmp
pop
outsb
inc
clc
outsl
mov
mov
mov
ljmp
out
stos
out
add
add
and
clc
stos
mov
mov
pop
ljmp
jb
add
push
adc
add
xchg
out
mov
clc
xchg
mov
in
lcall
test
xchg
in
data16
sub
lret
cmpsl
clc
rcr
and
or
addr16
fst
and
add
gs
jo
add
movsl
clc
sbb
mov
xchg
push
jle
dec
xor
add
pop
mov
clc
mov
int3
jo
add
add
mov
outsl
jo
add
add
add
add
out
mov
add
loopne
dec
mov
ret
clc
jl
iret
mov
loopne
addr16
jmp
hlt
test
fdivs
scas
push
clc
jp
clc
jp
mov
sti
out
mov
add
add
dec
test
popa
add
xchg
xchg
repz
add
lahf
pop
mov
add
rcrb
lret
stos
and
add
xbegin
clc
dec
jnp
and
add
add
xchg
xchg
mov
pushf
clc
mov
add
sahf
clc
jecxz
adc
add
add
nopl
sar
sub
xchg
pop
mov
or
clc
add
lock
add
popf
cmp
clc
pop
cmp
add
ficoms
mov
fistl
cld
jmp
or
ud0
in
add
cli
and
pinsrw
clc
xor
add
clc
adc
add
xchg
inc
add
jmp
and
add
fisttps
ljmp
addb
cld
jmp
je
shll
pop
clc
jae
add
add
add
add
cmc
push
inc
add
es
or
enter
add
aam
mov
or
cmp
add
iret
stc
in
mov
dec
mov
mov
mov
clc
shrl
imul
ljmp
inc
add
sbbb
jb
add
clc
test
sub
clc
pusha
add
push
clc
arpl
add
add
clc
es
fidivl
add
movsl
clc
clc
jae
add
pop
inc
add
sar
cmp
add
sar
add
add
clc
sahf
mov
test
ss
ret
movsb
add
lock
cmpsl
clc
xchg
scas
or
clc
cli
xchg
xbegin
clc
cmp
add
sub
jge
je
push
ljmp
adc
add
ds
push
add
fs
int3
mov
clc
popa
add
fildll
pop
test
fsubrp
in
cmp
clc
mov
add
xchg
bound
add
sub
fpatan
mov
add
add
jmp
fwait
sbb
add
cld
jmp
subb
insb
daa
clc
push
decl
cld
jmp
dec
outsl
fs
clc
mov
repz
jmp
push
xor
popa
ljmp
pop
sub
xlat
fcoms
clc
bts
sti
sti
fsubrl
add
inc
add
out
mov
add
add
mov
add
jecxz
or
pop
cld
jmp
fwait
dec
dec
inc
sub
jno
add
out
repnz
aam
clc
mov
clc
jg
clc
test
pusha
add
add
add
dec
je
fsubp
clc
outsb
pop
scas
loope
xor
add
lahf
dec
shr
jmp
add
add
add
inc
clc
mov
xchg
cmp
clc
in
ljmp
add
popf
add
add
cmp
or
out
push
scas
lods
jecxz
sar
aad
push
lea
jl
jnp
clc
push
add
jg
aas
in
sbb
clc
push
add
out
test
cmp
jmp
jbe
cld
jmp
and
movsl
clc
scas
mov
cmc
adc
add
adc
outsb
icebp
loope
xchg
or
lret
mov
clc
sar
inc
add
cmp
pop
dec
dec
mov
ja
bound
add
mov
pop
inc
clc
pop
int
clc
pop
arpl
add
jl
add
pop
inc
clc
lods
adc
scas
enter
xbegin
rcrb
jnp
push
mov
push
xor
add
add
dec
mov
clc
pushf
sbb
mov
imul
add
mov
loopne
fisubrl
repnz
xchg
dec
adc
add
clc
adc
clc
rorl
mull
mov
xchg
das
pop
fdivs
add
inc
add
cmp
add
or
mov
stos
xchg
sar
clc
sbb
add
ljmp
inc
add
ja
pushf
jno
add
push
add
test
xchg
jae
add
mov
or
clc
inc
add
ss
fldt
add
push
mov
imul
lock
mov
pop
fs
data16
add
add
addr16
jecxz
push
mov
xchg
dec
push
pop
mov
jmp
sub
das
nopl
clc
xchg
setb
dec
shl
clc
das
mov
movsb
clc
aad
clc
out
cltd
sar
sahf
dec
add
adc
add
clc
jne
and
add
add
cmp
scas
aas
test
add
jecxz
jae
add
and
add
clc
pop
es
pop
push
adc
add
clc
and
add
push
sbb
or
add
dec
cmp
push
idivl
add
adc
add
jl
add
lea
mov
sbb
pop
dec
mov
add
sbb
clc
mov
add
add
jae
add
clc
fmulp
pushf
arpl
add
xor
ss
ret
mov
xchg
sub
jne
lock
add
sar
scas
sub
add
mov
xor
lahf
mov
int3
push
add
xor
psubq
sahf
stc
and
fidivl
clc
xchg
or
scas
adc
add
scas
mov
out
jno
add
cli
pop
pop
mov
add
dec
insb
cmp
jnp
clc
insl
mov
cs
jmp
inc
add
push
add
and
add
clc
mov
add
inc
clc
outsl
stc
cwtl
mov
add
clc
das
xchg
push
xchg
inc
add
push
in
mov
arpl
add
jmp
nop
jecxz
int
scas
xchg
dec
xchg
cmp
mov
or
in
aaa
and
ds
add
push
add
lock
out
cmpsb
clc
adc
add
mov
stos
test
popa
add
repz
push
add
adc
xchg
or
sahf
add
add
sub
clc
inc
add
test
mov
clc
sbb
clc
add
repz
ror
lret
addr16
xchg
dec
push
add
inc
add
imul
imul
clc
incl
pop
and
jmp
data16
clc
lret
dec
pop
ret
push
inc
add
cmp
dec
stos
push
inc
ss
ret
movsb
movsb
jno
divl
in
cmp
jg
add
inc
clc
dec
xchg
mov
lret
xor
add
add
cmp
add
xbegin
jne
repz
sbb
ja
cltd
mov
pop
gs
add
jp
push
add
fidivrs
gs
mov
ret
aas
or
addr16
bnd
clc
inc
clc
adc
add
add
cld
ret
add
jbe
call
test
call
jo
jmp
mov
cmc
dec
push
add
mov
aas
pop
clc
lahf
stc
mov
jbe
je
cld
jmp
dec
clc
sbb
call
ss
ret
and
inc
add
mov
clc
cwtl
and
pop
lret
clc
mov
push
scas
ss
clc
lcall
clc
mov
pop
ja
dec
or
add
clc
and
add
popf
sub
and
cld
jmp
xor
jp
add
xchg
pop
pop
clc
push
add
sub
es
outsl
cmp
clc
pop
adc
add
adc
inc
add
rorb
dec
mov
inc
clc
lods
cmp
clc
cmp
clc
jle
decl
cld
jmp
sbb
sahf
mov
add
adc
add
dec
in
pop
push
add
cld
jmp
outsl
cmp
inc
add
cld
jmp
aam
dec
xor
add
clc
pop
xor
add
pushf
add
add
mov
add
jg
add
roll
and
add
jno
add
repnz
add
pop
push
push
add
arpl
add
clc
sar
clc
dec
shrl
pop
mov
push
add
mov
add
inc
clc
inc
add
ss
add
insl
or
add
clc
scas
fisubs
xor
add
mov
add
add
rcl
mov
and
loop
mov
mov
or
dec
mov
dec
jp
out
cmp
jmp
xor
add
mov
lods
xor
add
out
call
pop
inc
clc
push
jbe
add
push
pusha
ss
ret
sub
xor
gs
xabort
sbb
jg
mov
test
int3
rorb
ret
clc
sbb
ja
clc
scas
cmp
movsl
clc
push
cmp
add
arpl
add
test
pop
xor
add
jmp
cld
jmp
adc
add
imulb
insl
mov
clc
popf
sub
push
push
sub
add
mov
add
xchg
add
xchg
call
repz
add
add
insb
int3
repz
add
mov
add
cld
jmp
mov
add
mov
sbb
test
xchg
cld
jmp
fidivrs
xchg
test
add
out
mov
add
xbegin
xbegin
dec
cmp
add
insl
out
ficoms
leave
jge
add
ret
clc
mov
mov
and
add
mov
ss
ret
or
loope
fninit
clc
mov
daa
clc
inc
add
mov
add
clc
sub
scas
pop
lock
scas
ret
clc
std
gs
pushf
add
add
push
inc
add
dec
cmpsb
clc
aaa
lock
add
cmpsb
clc
inc
add
add
add
xor
add
loopne
movsb
clc
stos
jns
mov
mov
cmpsb
cld
jmp
lret
loopne
lock
ljmp
mov
mov
clc
dec
js
fstps
inc
add
lcall
aaa
addr16
dec
bound
add
pop
fbstp
clc
clc
pop
or
cmp
cmp
pop
lock
mov
pop
jle
ja
notl
pop
clc
out
fimuls
clc
cs
and
add
add
sub
add
movsb
clc
in
popl
clc
xbegin
pop
outsb
fimuls
clc
sbb
lock
add
add
scas
sti
mov
push
faddp
clc
xor
add
add
jecxz
int
push
sbb
clc
cwtl
sti
out
jge
jbe
clc
push
cld
jmp
xchg
test
cs
mov
cld
jmp
push
lods
adc
gs
xor
add
add
cmp
add
rep
cld
jmp
and
xchg
xorb
add
clc
mov
clc
cmp
out
push
push
pop
imul
add
scas
add
add
iret
inc
add
popa
add
mov
cmp
add
cmp
repnz
add
add
in
icebp
xchg
test
xchg
push
sbb
add
lea
add
pusha
add
data16
mov
clc
fldl
gs
lret
xabort
add
pop
sar
jne
cld
jmp
dec
xor
add
xabort
clc
in
clc
cli
cmp
clc
movsb
clc
clc
cmp
push
add
pop
xchg
xor
add
dec
mov
add
sub
jl
clc
int3
pop
sub
add
loop
mov
mov
cld
jmp
push
and
add
pop
loopne
push
sub
xor
in
add
mov
cs
add
pushf
movsl
clc
mov
add
add
es
xchg
sub
icebp
adc
add
push
clc
or
add
add
add
leave
outsl
fwait
sbb
add
loopne
or
add
push
add
adc
add
add
cmp
clc
into
jmp
ss
loope
cmpsl
clc
fisubl
pop
cmp
add
iret
jg
add
pusha
add
pop
mov
lock
clc
xabort
jns
clc
sar
and
add
clc
out
and
add
out
jnp
jmp
clc
xchg
dec
mov
pop
jecxz
cld
and
add
add
push
add
jecxz
adc
add
roll
add
cli
aaa
xchg
inc
add
push
add
cmp
pop
enter
rcll
mov
jb
add
clc
sub
clc
or
sar
clc
mov
int3
scas
jg
nop
dec
adc
add
jno
add
add
push
xchg
mov
push
add
pop
cld
das
stos
mov
clc
xchg
jnp
clc
flds
add
push
add
or
adc
add
mov
mov
or
sti
call
jmp
push
dec
push
insb
mov
in
xabort
fidivrs
jae
add
lret
iret
jg
add
inc
clc
mov
add
clc
mov
clc
jmp
add
push
add
jl
sbb
test
sar
cld
jmp
out
into
int
clc
in
mov
clc
cli
add
add
int
mov
leave
mov
clc
loope
mov
clc
clc
test
add
push
clc
out
jae
add
clc
pushf
loopne
lcall
fdivrl
or
mov
add
test
ficoml
add
mov
jne
test
add
icebp
es
dec
ss
clc
stos
ljmp
clc
adc
aaa
xchg
std
xchg
add
add
xchg
cltd
nop
ljmp
dec
stos
add
add
mov
sub
xchg
cmp
clc
mov
pop
jo
add
add
inc
clc
push
test
cmp
lods
and
add
adc
add
add
add
clc
ficompl
push
clc
sub
sub
lods
sar
and
add
scas
sub
ja
pop
clc
jge
mov
clc
inc
clc
lahf
sbb
decl
ss
ret
sub
jecxz
dec
and
add
add
jg
lea
add
mov
add
add
outsl
aas
repz
add
add
cmp
xor
ret
clc
push
add
add
add
add
cmpsl
clc
insb
dec
ficoms
clc
aaa
xlat
jg
add
cmp
leave
scas
jmp
repnz
add
out
aam
add
xor
add
clc
pop
add
add
das
ja
mov
jmp
jnp
fdivrs
dec
data16
mov
add
frstor
add
inc
clc
sar
and
add
sub
dec
fldcw
add
xchg
push
add
xchg
sub
mov
add
rolb
push
fcmovnbe
cmp
aas
add
dec
clc
sti
outsb
jge
test
clc
inc
clc
mov
clc
jno
add
clc
clc
sti
pop
pop
mov
clc
mov
inc
add
inc
add
push
or
mov
aaa
pop
leave
inc
add
push
decb
cs
cli
out
sub
clc
pop
into
scas
call
clc
add
add
mov
push
ret
add
adc
add
rcrl
cld
sahf
push
inc
clc
sub
add
icebp
bnd
add
ljmp
push
insb
nop
lret
ret
clc
cmpsb
clc
in
push
and
jge
xor
clc
push
add
add
sar
jmp
clc
aaa
mov
clc
stos
fbstp
clc
xbegin
stos
fsubl
clc
pop
cmp
ret
mov
clc
aad
cltd
shll
jmp
clc
cwtl
sbb
ret
clc
ficoms
push
arpl
add
clc
sbb
lods
fadd
clc
pusha
add
jle
clc
mov
and
add
ljmp
add
xbegin
pop
mov
inc
clc
or
clc
cmovne
inc
clc
adc
enter
add
ja
int
pop
xor
add
mov
mov
add
bound
add
clc
cmp
push
out
mov
filds
mov
jns
push
mov
add
nop
add
xchg
stos
add
clc
jmp
add
daa
clc
mov
and
add
out
pop
mov
adc
add
or
add
adc
add
push
test
add
inc
clc
psubq
out
or
clc
mov
clc
shr
sub
scas
inc
clc
push
add
cld
jmp
push
add
scas
pop
out
dec
xor
add
jo
add
je
clc
in
pop
push
add
sub
cmp
clc
mov
sbb
sbb
jg
imul
clc
jo
add
or
add
dec
xor
add
clc
loope
lahf
adc
mov
clc
xchg
pmulhw
jecxz
mov
xchg
mov
mov
sarl
aam
mov
push
mov
rolb
cmp
add
imull
clc
imul
jb
add
clc
xchg
ds
adc
add
clc
mov
pop
clc
pushf
inc
clc
into
cmp
clc
mov
clc
test
add
push
add
gs
mov
clc
sub
add
pop
or
stos
data16
cmc
in
test
mov
dec
repnz
inc
clc
daa
clc
cmp
mov
adc
add
ss
std
fidivrs
jmp
push
sbb
fcompl
imul
out
jbe
in
sbb
mov
clc
into
pusha
add
insl
sub
or
mov
and
add
add
inc
add
fcmovnb
clc
jecxz
push
movsl
clc
fwait
jo
add
lret
jae
add
int
mov
dec
adc
add
mov
push
add
leave
imul
add
cs
sub
clc
sar
out
adc
mov
ffreep
clc
adc
movsb
clc
pop
in
int3
dec
xor
add
xabort
clc
outsl
jae
add
cmp
add
js
xchg
movsl
clc
clc
stos
dec
jg
pop
in
xchg
lret
stos
cli
aad
and
add
mov
cmp
mov
mov
add
jo
add
clc
sub
jns
imul
add
mov
inc
add
jnp
cmp
mov
or
je
fistpl
add
cld
jmp
lods
mov
fcmovbe
cmpsb
clc
push
add
inc
clc
jb
add
clc
ljmp
popa
cld
jmp
lods
and
es
pop
ds
int
fisttpl
decl
ljmp
xor
je
jnp
test
stc
lock
jecxz
dec
nop
ja
add
and
fsubl
cld
jmp
fwait
add
add
pop
push
add
jmp
and
jne
jmp
or
add
or
add
inc
add
rcrl
cmc
cmp
push
clc
sbb
clc
jne
add
adc
add
pop
inc
add
arpl
add
add
testl
cld
jmp
add
add
adc
add
push
jmp
cmp
cmpsb
clc
fldl
pusha
add
mov
add
sbb
dec
xor
add
clc
out
xor
pushf
xor
clc
and
add
add
mov
jmp
mov
vdivps
pop
movsl
clc
movsb
clc
push
add
sub
in
jle
jae
add
clc
jo
add
call
ss
ret
push
adcb
and
add
sar
clc
push
add
pop
dec
jbe
push
in
es
in
xbegin
clc
bound
add
clc
ss
mov
cld
jmp
add
nop
cmp
scas
push
add
add
mov
and
jl
and
add
movsb
clc
jg
sbb
clc
gs
inc
add
mov
clc
ja
es
cmp
clc
int3
push
push
add
fdiv
icebp
cmp
mov
clc
aam
clc
add
mov
add
movsl
clc
cmp
push
lea
adc
adc
or
mov
ss
ret
inc
data16
inc
add
mov
stos
xor
add
xchg
cmp
pop
xchg
pop
pop
int
mov
cmpsl
xchg
bound
sbb
add
push
loop
ljmp
loope
add
out
xbegin
ljmp
clc
xchg
sub
cmp
and
add
add
xabort
cld
repz
jmp
add
jg
fs
cli
dec
push
add
dec
jecxz
mov
fldenv
add
call
add
out
xchg
pop
std
mov
dec
dec
aam
and
add
ror
push
les
add
and
pushf
loopne
sub
fstpt
es
sbb
sbb
sub
mov
add
jmp
push
sub
or
test
jbe
clc
sbb
add
jp
jl
clc
pop
aam
pop
adc
add
clc
push
add
cmp
shlb
clc
mov
xchg
cmp
clc
js
xor
add
clc
push
pop
add
add
clc
push
jmp
fs
loop
xchg
mov
xbegin
lcall
mov
cld
jmp
fwait
add
out
js
std
and
add
cltd
dec
inc
clc
ja
and
add
loope
rcl
clc
stos
or
clc
inc
clc
mov
pushf
or
clc
int
clc
ret
add
xbegin
add
cld
jmp
sub
add
icebp
cmp
int
clc
shrb
or
leave
jns
cltd
mov
out
jo
add
insl
inc
add
imul
xchg
cmp
xbegin
xbegin
shlb
xor
add
clc
mov
add
lods
cmp
clc
fs
cmpsb
clc
push
add
cli
jecxz
add
clc
cmp
std
cwtl
stc
sub
and
add
adc
add
mov
ds
or
clc
out
scas
leave
cmc
movsl
clc
ss
mov
xabort
decl
data16
decl
dec
add
add
clc
xor
add
outsl
push
add
ds
mov
push
jge
dec
out
push
add
inc
add
cmp
add
out
cwtl
mov
adc
add
ret
clc
lahf
cmp
jb
add
push
add
lods
cltd
mov
add
or
cs
inc
clc
scas
jmp
push
add
xor
clc
xchg
pop
mov
push
ret
push
popa
aaa
push
add
sbb
stos
insb
std
xor
add
imul
rcrb
clc
nop
dec
fld
clc
push
add
cmp
or
nop
pop
test
clc
cmp
sub
inc
aaa
nop
jp
push
popa
aaa
pop
sar
add
cmpsb
clc
dec
nop
incl
cld
jmp
mov
add
clc
aad
dec
and
add
jns
cmp
add
gs
sbb
loopne
push
pop
push
add
dec
pop
inc
clc
hlt
xlat
clc
popf
mov
add
cmpsl
clc
test
cmp
clc
xchg
cmp
dec
jnp
dec
mov
add
add
rcrl
mov
shlb
add
add
xor
add
jg
stos
in
leave
mov
mov
clc
bound
add
add
fldt
loop
cld
jmp
aaa
cmpsb
sub
into
jge
adc
pop
jp
mov
push
fs
pusha
add
push
add
fstl
add
pop
jns
inc
clc
push
add
mov
mov
or
clc
mov
mov
and
xbegin
or
sbb
add
loope
out
repz
cmp
add
cmp
add
push
add
mov
movsb
clc
data16
xchg
sbb
push
inc
add
pop
sub
mov
cwtl
mov
jg
clc
inc
add
outsb
das
jae
add
jae
add
add
scas
ret
sarl
lahf
cwtl
inc
add
pusha
add
dec
mov
jns
add
jl
popa
add
aam
xchg
jg
clc
lret
jns
in
pop
sub
add
inc
add
int
clc
push
lods
mov
pop
loope
pushf
outsb
mov
jmp
push
cmpsb
ja
test
push
lret
mov
test
clc
out
insl
sub
add
add
add
clc
arpl
add
push
cld
jmp
sahf
lock
xchg
jb
add
add
mov
add
add
dec
fisttps
xchg
add
add
add
clc
or
clc
pushf
dec
lahf
mov
aad
clc
cmpsb
clc
out
cmp
mov
inc
clc
sar
add
jl
push
ss
ret
je
mov
push
ret
or
add
and
add
stos
sbb
clc
add
dec
cmp
add
add
int
lea
inc
clc
lods
push
mov
push
sbb
add
outsl
es
clc
mov
add
pushl
pop
xabort
mov
stc
sar
enter
clc
adc
xchg
pop
push
add
sub
add
scas
sar
jne
xchg
jmp
clc
call
push
ret
sub
adc
xchg
xor
jnp
xlat
es
jbe
in
sar
test
adc
movsb
clc
in
jns
clc
pop
fcoms
or
or
add
out
mov
popf
and
add
add
adc
add
mov
clc
or
add
mov
sub
fistpll
clc
inc
clc
pop
push
add
xchg
sar
lret
scas
and
clc
inc
add
mov
flds
add
fisttpll
cmp
add
add
aaa
jnp
out
ds
mov
clc
pop
jl
or
add
sar
add
inc
clc
dec
xchg
in
pop
or
pop
add
add
fs
outsb
inc
clc
iret
push
push
add
icebp
inc
add
mov
mov
out
cmp
out
sbb
mov
shl
std
and
pop
jp
clc
cmp
jmp
sub
movsb
das
ficoms
inc
add
sbb
sar
mov
sub
add
clc
pop
pop
mov
clc
pop
ret
cltd
push
add
daa
clc
scas
and
add
push
adc
jmp
outsl
test
clc
sar
clc
jnp
clc
adc
add
add
jmp
mov
pusha
add
and
stos
clc
mov
push
fdivs
add
or
add
inc
add
cmc
mov
mov
add
add
xchg
ret
clc
popf
xchg
lods
pop
stc
ljmp
test
xor
add
clc
bsr
call
push
js
add
jge
popa
sbb
xor
and
cwtl
mov
out
shl
clc
mov
ret
clc
movsl
clc
fsubl
clc
mov
jle
clc
fimuls
into
stos
xchg
in
ds
test
out
xchg
pop
jb
add
popa
add
rcl
lret
mov
std
xor
add
stos
add
add
inc
cld
jmp
cmp
lea
push
add
xor
add
negb
and
ss
clc
adc
add
add
inc
clc
je
clc
popf
add
cmc
je
into
push
mov
clc
pop
cmp
clc
imul
or
sub
add
pop
fmull
cmpsb
clc
xchg
mov
pop
cmp
aam
clc
bound
add
add
je
cld
jmp
jmp
movsb
clc
sbb
shlb
and
ss
clc
inc
add
xor
add
mov
clc
push
sti
test
and
xchg
xchg
scas
sub
pop
clc
insl
ja
clc
inc
clc
lods
sbb
cld
jmp
pop
xchg
ljmp
push
add
cld
jmp
imul
add
cmp
add
clc
repnz
rcrl
sar
clc
sahf
inc
add
and
adc
add
push
mov
add
nop
loopne
sbb
test
cld
jmp
push
add
adc
add
jmp
jl
clc
clc
enter
add
inc
add
roll
mov
sahf
jbe
lods
clc
stc
ja
lret
xchg
aas
test
add
and
add
mov
inc
clc
pop
pusha
add
dec
mov
clc
leave
xchg
cmp
out
add
add
or
sahf
cmp
add
jbe
clc
sub
jle
leave
push
clc
xchg
sar
clc
or
inc
add
cmp
add
data16
es
dec
inc
clc
ljmp
rol
clc
aam
add
cmp
clc
in
fsubrs
lahf
push
add
jp
bound
add
mov
sub
jmp
cwtl
sub
inc
add
xchg
pop
clc
in
sarb
sbb
clc
adc
add
pop
das
dec
in
sti
xor
add
push
ror
test
test
inc
add
das
aaa
add
add
in
pop
bound
add
add
scas
mov
test
hlt
mov
jmp
fwait
cmp
clc
sub
and
dec
mov
add
add
or
adc
add
xchg
jecxz
pop
pop
mov
add
or
add
rolb
add
lods
push
inc
clc
dec
add
clc
jo
add
clc
popa
add
cmp
clc
cmpsl
clc
sub
add
add
outsl
fsubrs
data16
push
or
test
cld
jmp
sub
or
add
clc
sarl
mov
clc
xchg
pop
aam
clc
or
in
leave
sar
mov
mov
inc
clc
int3
and
add
clc
fs
or
out
xlat
sti
sub
add
add
add
clc
sahf
mov
sbb
adc
fcmovb
clc
ss
cmc
data16
incl
repz
jmp
pop
sub
adc
fists
add
adc
add
add
add
sub
clc
fs
sub
pusha
add
iret
idivl
clc
dec
inc
add
pop
jns
pop
cs
add
mov
add
fcomp
aad
arpl
add
scas
jp
add
cmp
add
pop
clc
xlat
push
add
dec
mov
pop
outsb
data16
fs
daa
clc
or
hlt
icebp
jne
clc
inc
add
in
enter
clc
inc
add
pop
jae
add
fadds
add
clc
mov
clc
sub
mov
inc
clc
sbb
add
mov
mov
dec
xabort
inc
clc
xchg
dec
lahf
push
cwtl
aas
shl
clc
fimuls
push
add
inc
clc
out
test
repz
or
add
leave
jo
add
mov
cmpsl
clc
xor
add
mov
clc
mov
popl
inc
add
cmp
jmp
mov
clc
mov
add
jnp
dec
scas
inc
clc
push
cmp
rcrl
test
clc
ret
clc
lods
mov
sub
clc
sar
add
in
fistpll
mov
adc
add
add
insl
call
in
inc
add
xor
clc
lret
xor
cmp
cmp
outsl
xor
add
add
fmull
add
add
dec
clc
cmp
loopne
xchg
popf
xchg
dec
adc
jmp
sub
dec
je
sahf
test
test
cmp
add
call
jmp
ja
cmp
fdivl
add
jg
inc
add
jnp
push
repz
iret
and
add
aas
aaa
adc
add
rcll
mov
add
test
sbb
test
xabort
mov
clc
adc
aaa
cmp
inc
add
adc
add
sbb
mov
add
aam
push
add
lods
lcall
add
popa
add
xchg
push
add
out
pop
jle
mov
aam
lods
data16
sbb
clc
imul
sub
mov
add
push
add
cld
jmp
jg
xor
clc
jl
cmp
push
mov
mov
test
lret
add
dec
mov
loopne
xlat
repz
adc
add
scas
xchg
and
sbb
add
and
fisubrs
sar
add
add
add
add
mov
aam
loopne
push
add
dec
loope
and
adc
add
repnz
std
stc
adc
fsqrt
xchg
inc
add
fstpl
je
clc
dec
mov
xor
cld
jmp
sub
sub
lods
gs
arpl
add
xor
add
or
add
jmp
sar
clc
cmp
sub
clc
dec
and
add
jmp
aam
aam
repnz
clc
mov
hlt
xor
add
add
repnz
pop
inc
clc
pop
push
add
fldl
clc
push
popf
mov
add
or
stos
jg
push
add
fcmovne
ljmp
mov
mov
cmp
fnclex
clc
int3
mov
or
add
sub
add
add
add
leave
sti
cmp
pop
int3
mov
add
add
movsb
clc
int
add
addr16
mov
daa
clc
ss
mov
mov
add
push
clc
cs
clc
add
lods
out
xor
add
dec
cmpsb
clc
sbb
clc
xor
aas
fstps
pusha
add
arpl
add
dec
sub
xlat
mov
add
clc
mov
clc
sar
clc
leave
dec
pushf
adc
add
jge
stos
xchg
sbb
add
pop
loope
rcrb
dec
mov
add
add
add
add
add
cld
jmp
sub
ja
or
adc
cld
jmp
popa
cmpsb
movsl
clc
jge
clc
scas
xor
add
add
gs
stc
mov
xchg
xchg
std
or
stos
in
test
push
data16
jb
add
clc
pop
clc
pusha
add
addr16
ja
push
sub
pusha
add
sbb
mov
inc
add
sar
clc
daa
clc
or
sar
aad
clc
rcl
adc
add
je
clc
lods
sbb
clc
ret
clc
ja
in
lods
xor
add
mov
cmpsl
jne
lcall
inc
das
subb
mov
clc
sbb
clc
push
add
iret
arpl
add
add
cli
and
add
clc
mov
add
jns,pt
clc
sub
clc
gs
dec
imul
pop
mov
loop
sub
adc
add
jmp
test
jmp
pop
mov
xor
add
add
int
clc
sbb
int3
mov
sbb
push
cmc
jnp
mov
add
clc
cmp
xor
add
jmp
push
pop
and
add
jmp
sub
cmp
push
xchg
mov
clc
adc
fcomps
fnstcw
incb
push
adc
cld
jmp
jno
hlt
cmc
mov
call
add
jae
add
add
addr16
mov
add
lock
add
push
ss
ret
cwtl
pop
cmp
xor
add
fstpl
clc
xbegin
lret
rorb
sar
mov
test
addr16
jge
jnp
jb
add
adc
add
push
add
lea
add
insb
std
stos
cltd
lock
add
add
mov
out
aam
sub
add
ffreep
clc
add
add
push
push
aad
and
add
aad
fwait
and
add
sbb
cltd
call
aad
cmpsb
clc
or
push
add
fs
add
add
scas
sub
loopne
test
testl
add
add
dec
and
add
clc
fidivrs
add
add
add
out
int
add
aam
add
or
lcall
stos
in
cmp
hlt
js
clc
ret
fcompl
or
ret
clc
mov
jge
mov
daa
clc
push
add
mov
cmp
sbb
cmp
mov
ret
clc
cltd
adc
push
pushl
cld
jmp
das
es
push
add
dec
jle
clc
xor
clc
push
jb
add
clc
xchg
adc
add
mov
scas
push
clc
and
add
ljmp
das
into
push
add
jg
mov
out
pop
clc
ss
je
clc
in
jp
add
xor
fdivrl
add
jle
jl
cmp
movsl
out
ljmp
aas
cmp
dec
mov
inc
jb
incl
sbb
icebp
sti
imul
add
movsl
clc
notb
popf
xor
add
clc
add
push
add
jbe
push
je
cld
jmp
mov
clc
out
mov
clc
push
clc
jmp
or
mull
add
pop
lods
aaa
mov
ret
add
xchg
push
add
jno
add
hlt
and
add
push
cld
jmp
popa
add
lea
scas
shrl
pushf
mov
add
shl
outsb
fstpl
clc
push
jg
clc
push
add
dec
ficomps
sub
add
xor
add
add
ja
mov
clc
int
clc
aaa
outsb
fsubl
clc
xchg
cmp
dec
xchg
adc
aas
adc
add
clc
ss
sbb
or
repnz
adc
add
xabort
cmp
add
filds
add
data16
jg
cmp
fs
mov
clc
pop
xlat
fisttpl
inc
clc
enter
cmp
clc
jp
sub
scas
and
add
clc
fdivrl
clc
lods
jns
push
add
jbe
add
sbb
jmp
clc
mov
aaa
jbe
clc
mov
add
cld
jmp
cmp
mov
scas
and
jne
clc
sbb
daa
clc
xlat
fisubrs
nop
clc
shlb
clc
inc
clc
pop
sbb
sbb
clc
mov
std
aad
clc
cmp
clc
clc
push
push
ret
pop
fwait
add
add
inc
clc
movsb
clc
cld
fs
out
cmp
clc
sub
lcall
jb
add
in
dec
fs
and
clc
add
add
sti
sbb
clc
sub
mov
push
ss
ret
sub
inc
clc
out
sub
idivl
clc
dec
aad
sub
add
add
jne
dec
lods
cmpsb
clc
clc
pop
inc
add
push
cmp
clc
fsubrl
add
fstl
add
add
add
clc
xabort
add
xchg
lea
and
add
aad
inc
add
fildll
loop
mov
mov
sbb
inc
clc
addr16
add
add
xchg
mov
add
clc
cmp
clc
sub
or
pop
mov
jmp
dec
or
dec
jnp
clc
cmp
clc
outsl
stc
xchg
ficompl
push
cld
jmp
orb
sub
clc
lret
mov
sub
sar
shll
adc
add
mov
add
jge
shll
push
call
cld
jmp
cmp
inc
add
push
add
pop
dec
outsb
sti
enter
cld
sahf
fldenv
add
sbb
dec
add
add
out
dec
jnp
pop
clc
lret
lods
inc
clc
mov
clc
jl
dec
add
add
test
ds
add
jns
sub
clc
xchg
xbegin
in
in
aad
scas
fs
jnp
or
adc
add
add
out
mov
cld
jmp
aas
add
add
clc
aas
mov
je
clc
pushf
add
inc
clc
xchg
mov
add
xlat
pusha
add
mov
pop
push
mov
cld
jmp
lods
pop
aaa
fistpl
in
and
add
es
cs
and
add
mov
fwait
ljmp
lea
sub
iret
or
dec
cld
jmp
sub
std
dec
cmp
pop
cld
jmp
aas
test
cmp
add
out
nop
mov
gs
adc
shlb
sar
clc
xchg
mov
lahf
jnp
clc
repz
mov
push
add
test
repnz
xchg
jb
add
js
add
mov
pop
mov
pop
clc
inc
add
das
fidivrl
inc
add
out
sbb
add
or
enter
add
cld
jmp
dec
test
push
cld
jmp
jg
sbb
clc
inc
clc
arpl
add
xchg
or
push
and
add
xlat
mov
cmp
clc
test
sti
jmp
xchg
das
int
lods
mov
or
and
xchg
aaa
lcall
ret
fxch
and
add
clc
cmp
jmp
dec
inc
add
push
nop
sub
xchg
dec
inc
add
hlt
hlt
xchg
jne
fadd
clc
inc
clc
call
fisttpl
mov
test
mov
clc
sbb
jbe
or
add
inc
add
mov
fldcw
fisttpl
inc
add
insl
xor
add
lret
cmpsl
clc
push
daa
clc
scas
jg
out
enter
pusha
add
repz
inc
add
inc
clc
sahf
mov
jmp
aaa
jg
dec
pop
pop
test
sub
xlat
test
adc
add
pop
movsb
clc
or
incl
icebp
cld
jmp
nop
add
mov
ljmp
or
cld
jmp
das
scas
rorb
shr
sbb
add
jmp
fsts
add
repz
scas
adc
add
clc
and
inc
add
in
jae
add
clc
ja
pop
mov
and
outsl
jne
sar
test
clc
decl
jmp
cmp
cmpsb
clc
jo
add
sub
cltd
stos
dec
popa
add
mov
push
add
cmp
pop
cltd
jg
push
mov
cld
jmp
aas
sub
push
add
sarl
je
and
add
add
add
cwtl
mov
test
in
mov
stc
lss
out
and
movsb
clc
or
cli
or
add
add
mov
pop
movsb
clc
loope
dec
mov
xbegin
insb
xchg
xor
add
mov
add
daa
clc
jp
inc
add
pop
jne
clc
out
int3
outsb
in
mov
es
jl
movzwl
cld
jmp
and
add
add
push
cld
jmp
add
sbb
or
gs
addr16
cmpsl
clc
dec
out
js
xchg
jnp
cs
mov
lods
push
add
mov
add
add
clc
icebp
int
int
clc
test
sar
clc
pop
add
add
cmp
jp
inc
clc
xchg
pop
test
nop
push
add
mov
add
out
popf
mov
add
add
shll
add
cmp
cmp
add
daa
clc
hlt
in
or
mov
ss
ret
add
test
add
aam
cmp
and
cmp
mov
insl
cmpsb
clc
mov
xor
add
clc
pusha
add
mov
add
mov
stos
decb
add
pushf
loope
push
add
xor
add
clc
cmp
mov
aaa
inc
add
xchg
int3
sbb
add
fildll
jbe
sub
iret
negb
add
xor
add
sbb
clc
cmp
add
stos
test
fisubrs
pop
cli
jmp
add
repz
jecxz
leave
push
add
sbb
insb
fidivrl
clc
cwtl
clc
test
push
mov
add
rcl
jno
add
and
add
je
add
pop
bound
add
add
jns
xchg
testb
cmp
and
add
cmp
add
clc
loopne
and
or
jne
jb
add
clc
ss
es
sbb
xchg
adc
mov
add
cld
jmp
jg
add
mov
xchg
arpl
add
and
add
out
inc
add
sbb
jae
add
add
sub
clc
dec
or
sar
test
pop
inc
add
push
add
cmp
add
add
mov
add
scas
push
cmp
sti
inc
add
or
lods
inc
clc
xchg
es
pop
push
push
add
pop
mov
push
mov
cld
jmp
pop
dec
cmp
clc
cltd
clc
xchg
push
push
inc
add
pop
aad
jp
insb
clc
lret
fdivrs
adc
add
lock
add
fs
push
clc
or
stos
dec
mov
arpl
add
clc
push
mov
mov
mov
xchg
xor
add
clc
xor
add
add
cld
dec
adc
add
add
dec
leave
push
imul
mov
add
mov
pop
and
add
lret
mov
pop
ljmp
scas
cmp
decl
ss
ret
add
sub
add
mov
clc
xchg
pop
and
add
stc
xchg
mov
add
arpl
add
add
jge
adc
add
into
sbb
push
add
popa
lods
cmpsb
sub
mov
mov
hlt
es
sahf
mov
add
mov
mov
add
loopne
fcomp
dec
cwtl
jno
add
dec
pop
repnz
out
pop
lods
cli
clc
xabort
mov
jae
add
add
adc
add
clc
int
xchg
pop
xor
add
xabort
clc
pop
pop
pop
cmpsb
clc
into
mov
arpl
add
add
inc
clc
xor
add
clc
cmp
add
push
clc
fldt
icebp
sub
clc
inc
clc
cmc
dec
and
cmp
push
outsb
cmp
fisttps
mov
insb
mov
mov
add
clc
outsl
xchg
sbb
cld
jmp
pop
push
sub
clc
sbb
add
fistpll
and
pop
and
add
adc
add
out
hlt
jns
and
add
mov
add
sbb
push
add
dec
sar
lock
mov
add
fs
dec
cmp
dec
es
loop
movsb
clc
push
add
pop
cmp
clc
in
lea
sub
cltd
sub
clc
jg
das
adc
add
das
lods
stc
loop
push
pop
and
add
scas
cwtl
xchg
mov
hlt
push
sar
jne
clc
jns
cltd
stos
mov
clc
mov
mov
xchg
dec
or
or
push
lcall
adc
add
add
aam
mov
clc
loopne
cmp
and
add
xchg
adc
rcl
inc
add
aaa
sub
cld
fcoms
aam
test
gs
fildl
clc
mov
clc
cwtl
push
jg
mov
mov
cmpsl
clc
mov
pop
add
add
add
fcompl
outsl
pop
outsb
cmp
push
cmp
jmp
add
scas
add
add
mov
add
clc
sbb
add
pop
pop
scas
movsb
clc
ret
clc
dec
fisubrl
popa
add
cmp
clc
loope
mov
js
jnp
mov
mov
jnp
or
mov
aad
jp
add
pop
in
jns
mov
push
add
xchg
push
add
sarl
lahf
sub
test
test
or
ficomps
clc
xor
clc
imul
out
data16
pop
sbb
clc
add
dec
jne
jecxz
out
add
add
add
inc
add
mov
add
popa
add
push
push
push
inc
add
xchg
in
and
add
add
adc
jmp
clc
cmp
add
xor
dec
jp
vmovhps
in
sub
add
das
test
out
call
mov
add
std
push
loope
cmc
sbb
add
repz
jnp
add
cmp
clc
addr16
ljmp
loope
or
rcl
loopne
or
lea
clc
or
loopne
jnp
pop
add
add
and
add
cmp
sub
dec
sbb
clc
cmp
clc
push
add
sub
clc
xchg
lock
notb
jbe
jp
in
lock
or
xchg
ss
ret
fs
inc
add
in
jecxz
ljmp
sub
mov
js
clc
jns
add
push
jo
add
add
pop
ret
push
pop
clc
jne
add
add
dec
movsl
clc
cmp
mov
push
add
jmp
sbb
push
insb
data16
push
add
sub
fsubrl
or
ret
clc
cli
mull
clc
mov
add
jns
sbb
mov
push
add
xchg
push
pusha
cld
jmp
add
fwait
cwtl
push
jecxz
adc
add
mov
out
loop
sbb
xchg
movsl
clc
mov
pop
cmp
clc
xor
add
je
mov
fstps
add
jb
add
and
das
lret
rolb
scas
xchg
hlt
and
add
clc
adc
add
add
outsl
cwtl
or
ljmp
mov
mov
add
clc
add
add
or
lret
or
jp
inc
clc
sbb
out
shr
mov
pop
lahf
mov
in
out
sbb
out
addr16
das
pop
bound
add
or
cmp
cwtl
in
jl
jmp
and
add
cmp
push
clc
xchg
or
clc
and
clc
pusha
add
ljmp
jle
popa
add
loopne
into
lret
mov
clc
fsubp
clc
cwtl
sbb
stos
xchg
sub
out
cs
mov
cmp
mov
int
iret
adc
add
jmp
clc
cmp
clc
mov
rorl
fstl
add
sub
dec
test
rcll
add
pop
add
cmp
mov
popa
add
push
sbb
clc
jno
add
movsl
clc
xor
add
mov
mov
imul
cmp
shlb
push
clc
and
add
mov
cmp
adc
mov
clc
insb
neg
loope
movsl
clc
popf
cmp
insb
add
add
add
mov
clc
imul
jge
xlat
xchg
dec
in
mov
fwait
lcall
adc
or
clc
and
add
add
sbb
add
jecxz
insl
mov
jne
lea
add
jle
clc
mov
adc
add
out
pop
rcr
push
clc
lea
clc
cltd
sahf
pop
sub
xchg
aas
add
add
clc
inc
add
mov
add
add
mov
adc
add
clc
and
cmpsb
clc
js
cmp
add
inc
clc
fwait
pop
mov
sub
clc
jno
add
dec
clc
push
add
sar
add
sub
mov
jl
add
jge
bound
add
test
add
addr16
dec
scas
ss
into
clc
decl
test
cld
jmp
add
jp
cmpsl
clc
xchg
arpl
add
jno
add
mov
clc
movsb
clc
inc
clc
jl
add
fsubr
ljmp
clc
xchg
leave
movsl
clc
mov
add
aaa
loop
cwtl
push
adc
clc
es
cmp
mov
roll
add
cmp
cwtl
cmpsb
clc
add
add
add
pop
fsubrp
xor
scas
mov
fiaddl
outsb
cmp
sub
add
test
jl
add
adc
add
mov
clc
je
dec
out
sub
cmp
icebp
into
mov
clc
ja
clc
push
add
xor
add
repnz
adc
add
data16
sub
or
add
jmp
adc
add
aaa
popf
bound
add
cmp
data16
sub
add
add
xor
add
add
sar
xlat
dec
pop
clc
dec
mov
clc
sbb
and
add
clc
outsb
cmp
clc
and
add
clc
cmc
out
roll
add
aas
repnz
and
add
clc
sahf
lods
loope
pop
sub
aad
dec
or
mov
lcall
leave
pop
clc
in
lods
rorl
test
or
cmp
repz
add
xchg
aam
add
jns
insl
dec
and
add
inc
clc
nop
push
adc
add
pop
jno
add
xchg
cld
jmp
cmp
add
sub
sar
clc
in
cmp
or
enter
or
add
or
and
add
test
xchg
lea
popf
fstpl
add
dec
leave
jb
add
fld
clc
mov
jne
clc
aad
shll
add
js
clc
fsubs
mov
add
xbegin
iret
stc
int
imul
cld
jmp
sub
inc
clc
pop
clc
dec
inc
clc
mov
push
imull
aas
adc
inc
add
jge
int
clc
xbegin
mov
sub
cld
jmp
push
push
add
mov
dec
push
add
clc
outsb
sub
stos
stos
sarb
clc
inc
add
imul
inc
clc
sar
jmp
stos
sahf
ret
clc
sub
ljmp
lahf
mov
push
clc
inc
add
dec
aas
loopne
dec
cmp
jns
cmpsb
clc
pop
dec
xchg
out
divb
or
fnstcw
mov
fistpl
add
ret
clc
dec
cmp
push
jmp
scas
sub
jp
in
ljmp
incl
add
xor
add
push
test
jmp
add
clc
mov
int3
add
movsl
clc
lcall
or
pop
clc
pop
or
outsb
stos
sub
test
inc
add
cmp
in
stc
in
mov
mov
add
xchg
jo
add
add
ret
clc
xchg
push
clc
or
add
mov
scas
mov
add
insl
js
clc
movsl
clc
mov
mov
sbb
lret
repnz
stc
int3
nop
dec
nop
into
mov
jp
repnz
mov
push
loope
pop
pushf
push
cmp
mov
add
jae
add
lcall
clc
mov
inc
clc
into
pop
cmp
loop
test
leave
xchg
mov
mov
fwait
inc
clc
mov
aaa
jge
add
test
and
add
push
cld
jmp
sub
sub
mov
int3
sbb
std
cmp
rcrl
incl
cld
jmp
sub
clc
movsl
clc
cmpsl
clc
inc
add
lock
into
dec
jp
ja
cmp
clc
mov
or
add
sub
and
add
and
lea
out
mov
clc
roll
clc
mov
mov
gs
jmp
pop
sar
clc
repnz
rcl
imul
clc
stos
xor
add
ret
add
lea
clc
std
cmp
xor
or
cmc
mov
clc
ljmp
add
add
xchg
dec
out
jecxz
mov
jae
add
pop
mov
lret
cmp
ret
cld
jmp
sub
add
mov
scas
inc
clc
shrb
clc
dec
jne
clc
xchg
dec
stc
clc
xor
add
cmpsb
clc
xchg
push
add
cld
jmp
ja
and
clc
xbegin
add
mov
es
pop
adc
add
adc
mov
adc
add
ds
clc
mov
add
clc
adc
mov
xchg
adc
lahf
dec
leave
icebp
jmp
lcall
add
mov
push
popa
add
ljmp
je
clc
mov
and
add
ret
clc
sub
clc
push
ss
incl
sub
leave
xor
add
leave
dec
add
cld
jmp
inc
sbb
push
add
sub
gs
push
add
loopne
gs
test
xchg
sbb
jno
add
mov
clc
fcoms
add
in
inc
clc
inc
clc
adc
add
clc
shrb
xchg
movsl
clc
jns
clc
mov
clc
decl
test
ljmp
incl
add
clc
outsb
cltd
fwait
ret
clc
pop
cld
adc
add
in
pop
pushf
sbb
clc
sub
adc
add
hlt
ja
scas
jae
add
shl
clc
sub
add
mov
add
cld
jmp
cmp
sbb
mov
jmp
cwtl
fidivs
fsubrs
add
jge
lret
std
aas
lret
sub
fnstcw
negl
clc
jae
add
push
add
fcomps
incl
loopne
jmp
push
add
je
mov
fisubl
gs
loop
mov
and
mov
cs
cmp
add
addr16
xchg
test
jae
add
cmp
clc
pop
sub
add
xchg
or
jae
add
add
cmp
add
roll
add
xor
add
bound
add
xor
cmpsl
clc
cmpsl
clc
popa
add
mov
mov
clc
or
add
add
cwtl
mov
add
clc
mov
aas
xchg
clc
jle
inc
add
pop
clc
dec
sub
ret
cld
jmp
lea
sbb
inc
clc
inc
clc
mov
add
mov
sar
xor
add
add
adc
add
adc
add
in
adc
jmp
fcmovu
scas
bound
add
sbb
clc
daa
clc
iret
std
or
clc
xchg
out
mov
leave
fisttpl
push
gs
shll
popa
add
jg
lods
sar
clc
or
jne
push
insl
pop
ljmp
sub
stc
lods
fidivrs
ljmp
cmp
add
pushf
lcall
sbb
mov
inc
clc
insb
sbb
clc
dec
fmull
add
fildl
add
mov
adc
add
cmpsb
clc
jmp
clc
test
cmp
clc
jl
jp
outsl
cmp
scas
push
test
jmp
push
sub
dec
es
sbb
jmp
add
mov
clc
push
adc
add
dec
aas
out
jp
adc
add
add
jo
add
stc
sti
pusha
add
fisubrs
push
add
dec
cld
imul
test
pop
cld
jmp
imul
incl
sbb
ljmp
nop
xorb
add
call
sahf
outsb
push
add
mov
clc
push
kmovw
add
lret
jecxz
inc
add
xbegin
fwait
cs
jg
clc
xor
add
mov
add
stc
cmp
out
aam
in
xlat
cmp
clc
pop
cmpsl
clc
mov
clc
popa
add
add
add
test
scas
das
adc
add
add
loop
xabort
push
add
cmp
clc
pop
test
in
cld
lock
sti
stos
or
lret
jno
add
cwtl
popf
es
add
add
push
or
xchg
mov
cwtl
stos
pop
out
lahf
and
add
push
fildl
add
jbe
clc
pop
lods
aam
mov
mov
push
add
fbld
add
add
jb
add
inc
add
or
mov
push
inc
ss
ret
xorb
mov
add
imul
add
cwtl
popf
cmp
add
shrb
int
pop
jae
jmp
je
add
das
arpl
add
adc
push
ret
popa
sbb
pusha
add
test
add
sbb
mov
sahf
adc
js
add
and
clc
jae
add
clc
jge
sub
push
clc
into
add
test
and
clc
loope
js
add
add
mov
add
add
add
mov
mov
dec
sub
cmp
dec
fmuls
jmp
inc
add
mov
clc
repnz
lret
lcall
flds
add
add
hlt
xchg
fcmovbe
int
jae
add
clc
jne
clc
jo
add
cmp
xbegin
push
add
cmp
clc
mov
lahf
testb
add
push
mov
add
push
add
mov
add
push
jns
loope
out
sub
jecxz
mov
xor
add
dec
push
add
stos
pop
dec
sub
dec
mov
add
es
in
mov
cmc
sahf
data16
xabort
add
xabort
in
mov
xchg
ds
out
xor
add
xor
jmp
push
imul
hlt
mov
cmp
jle
clc
xchg
cmp
clc
mov
jnp
or
add
sub
jo
add
ds
add
jmp
mov
sbb
ss
ret
sbb
sub
ret
sbb
cld
jmp
dec
sub
mov
es
jns,pn
mov
mov
add
loop
mull
mov
xchg
in
out
sar
lahf
push
jmp
fwait
scas
sbb
xor
add
cmp
dec
push
fcos
jmp
add
push
push
add
add
add
clc
jmp
sbb
test
sub
add
add
and
add
aaa
sarl
adc
add
clc
xchg
push
add
cmp
leave
xor
jno
add
sar
clc
or
clc
adc
add
idivb
je
add
add
lret
repz
daa
clc
fcoms
add
fcomip
mov
xor
stos
fwait
and
add
scas
shll
clc
mov
dec
imul
sar
rol
clc
lcall
ret
add
in
shll
add
adc
clc
lahf
fstpt
sahf
xbegin
xchg
adc
add
out
call
add
cld
jmp
das
imul
add
add
jno
add
clc
lea
clc
cmp
sbb
add
dec
in
sbb
clc
test
push
xchg
mov
add
mov
fs
jg
jbe
clc
pop
jl
add
lahf
in
repnz
xlat
sahf
mov
cwtl
in
xor
add
pop
insb
xchg
je
insl
enter
jmp
cmp
clc
cmp
add
js
add
adc
clc
add
mov
pop
push
add
mov
ja
movsl
clc
cmp
cltd
in
scas
cmp
out
out
cmp
mov
std
pop
sbb
cmc
in
cmp
or
cld
jmp
sub
sub
daa
clc
loop
test
int3
mov
mov
add
fbld
jecxz
push
movzwl
cld
jmp
sub
repz
js
clc
ret
add
test
es
add
scas
ret
clc
lods
fidivl
or
add
dec
movsl
clc
mov
add
cmp
dec
shrb
shlb
push
ret
cmp
fsubs
clc
xlat
jb
add
jae
add
adc
add
jb
add
sbb
jmp
or
pop
add
add
push
add
test
push
jle
clc
out
neg
add
pop
xchg
push
jmp
ficomps
fisubs
add
enter
mov
add
add
jae
add
jnp
jo
add
sbb
xchg
cmp
imulb
clc
into
adc
add
rclb
add
xor
add
sar
not
out
mov
mov
clc
dec
idivl
scas
lods
xchg
mov
decl
test
gs
lods
adc
testb
xor
add
clc
daa
clc
mov
lods
jb
add
clc
outsl
ja
mov
add
mov
ss
ret
ja
cwtl
clc
icebp
dec
je
xchg
stos
mov
clc
mov
add
push
xchg
and
add
clc
mov
cmp
shll
add
repnz
dec
sti
das
lods
mov
out
test
add
dec
das
add
clc
mov
popa
add
mov
leave
add
add
add
xchg
das
push
std
data16
popf
dec
das
pop
daa
clc
fnstsw
call
ss
ret
add
add
add
mov
add
push
fcoml
aas
dec
xor
add
jp
add
pop
clc
lret
lock
mull
add
ds
inc
clc
lcall
jl
cld
jmp
pop
insb
sub
clc
adc
add
add
stc
or
roll
xor
add
xor
add
cmpsl
clc
xchg
loopne
and
jge
clc
test
xchg
scas
and
add
pop
mov
clc
jb
add
jmp
xlat
jno
add
dec
pop
leave
cmp
add
cs
add
adc
add
ret
cmp
in
jmp
clc
imull
push
add
sub
add
clc
ret
clc
std
xchg
into
ret
clc
mov
add
cld
jmp
push
xor
add
xchg
mov
movsb
clc
push
sbb
clc
repz
xchg
fwait
push
lahf
hlt
nop
mov
clc
int3
clc
jle
jbe
ret
clc
jb
add
add
mov
cld
jmp
inc
sub
das
or
out
adc
add
cmp
jb
add
out
gs
cli
shll
out
dec
jae
add
clc
insl
xor
lock
adc
add
mov
pop
or
pop
mov
add
and
jae
add
int
mov
add
jne
mov
inc
add
imul
add
jmp
and
cmp
add
clc
or
cmp
bound
add
add
add
add
idivl
cmp
mov
add
inc
add
clc
adc
add
dec
xchg
mov
clc
fstpt
cmp
add
js
popf
push
clc
out
pop
jnp
and
add
mov
xchg
loopne
xbegin
pop
sbb
clc
fdivl
add
movswl
cld
jmp
add
mov
testb
mov
push
incl
inc
cmp
jmp
sub
sub
clc
dec
fwait
inc
add
jmp
lret
dec
scas
mov
add
es
pushf
out
insl
negl
clc
mov
push
cmpsl
clc
cmp
mov
loop
and
add
add
lret
clc
jbe
cmpsl
clc
popf
cmp
into
cmp
roll
inc
clc
insl
push
cld
jmp
test
clc
lret
add
add
cmpsb
clc
or
lret
inc
add
sbb
add
push
add
outsb
pop
insl
mov
clc
xor
add
push
add
mov
data16
jg
daa
clc
dec
jne
scas
push
mov
xchg
xor
xlat
cmp
mov
xchg
pop
inc
add
test
iret
in
jnp
aas
mov
push
enter
test
cmp
and
dec
dec
sahf
lods
into
ljmp
and
jmp
add
adc
add
adc
fstl
add
or
and
add
and
add
inc
clc
clc
hlt
inc
clc
insl
dec
call
cld
jmp
dec
sub
add
add
mov
add
pop
add
clc
es
mov
clc
fstpl
rorb
add
add
mov
clc
sahf
pop
xbegin
clc
sbb
clc
lock
add
dec
add
sbb
mov
sub
nop
jb
add
sar
mov
clc
data16
loopne
mov
pop
clc
adc
add
sbb
jle
inc
clc
scas
xor
add
fistps
loop
cmp
xor
add
dec
inc
clc
stos
lock
inc
clc
clc
ds
sub
pop
das
sbb
lods
adc
lea
clc
cli
sub
mov
jbe
jmp
add
push
jp
and
add
stos
fs
popl
add
push
in
cwtl
cmp
mov
ret
clc
jb
add
fadd
clc
in
icebp
mov
clc
jmp
clc
sbb
cld
jmp
movsb
mov
add
add
out
fsubl
add
xor
add
jmp
fwait
push
dec
fdiv
jae
add
clc
inc
add
roll
cmc
ret
clc
mov
add
sub
in
pop
pop
leave
jmp
xbegin
aam
incb
push
jo
add
fsubs
pop
jns
decl
dec
xchg
mov
rep
cld
jmp
sub
es
and
add
test
xchg
dec
das
jmp
cmp
mov
lret
mov
or
lcall
add
add
adc
add
lea
clc
sbb
clc
xbegin
add
incl
jmp
imul
sbb
mov
std
adc
add
clc
ds
add
inc
add
adc
add
clc
xor
sub
sbb
iret
addr16
add
add
das
mov
clc
mov
clc
sbb
cwtl
inc
clc
push
clc
push
jns
aad
clc
outsb
out
daa
clc
sbb
add
pop
mov
clc
cli
cltd
into
add
add
sbb
clc
pop
mov
push
ret
outsl
or
sbb
add
add
pop
push
add
dec
test
or
add
pop
out
push
add
data16
sbb
in
ss
ret
inc
movsb
sub
adc
add
jo
add
mov
lods
sub
inc
add
imul
data16
cmp
repnz
or
test
fcomps
push
add
ds
clc
pop
iret
dec
and
add
add
jnp
clc
or
add
xor
inc
add
mov
add
sub
xlat
aam
mov
clc
sbb
hlt
insl
divb
notl
add
out
sub
mov
pop
arpl
add
mov
add
dec
pop
aaa
icebp
mov
push
mov
insl
mov
clc
lret
add
sar
add
and
sbb
data16
test
cmc
loope
dec
xor
mov
clc
lret
mov
clc
nop
adc
cmc
daa
clc
cmp
inc
add
add
aad
clc
xchg
nop
or
jne
das
mov
fidivl
mov
sub
add
add
dec
out
ret
jo
add
mov
inc
add
adc
add
clc
insl
xor
enter
stos
cmp
add
clc
leave
popa
add
mov
cwtl
aaa
xor
add
clc
std
cs
lret
ss
sbb
sti
jno
add
add
mov
mov
or
add
into
js
sub
clc
out
mov
add
sub
fwait
sub
clc
es
in
rorl
addr16
outsb
call
rcll
add
xor
add
clc
jo
add
inc
add
cmc
add
inc
add
ret
clc
mov
aad
pop
xor
iret
lret
add
dec
test
out
jp
clc
dec
adc
add
dec
xchg
xlat
lcall
clc
mov
popf
mov
mov
mull
std
inc
clc
mov
clc
mov
fsubs
xor
add
shll
cmovo
add
scas
cmpsl
clc
aam
xor
mov
clc
jne
ja
push
scas
sbb
mov
iret
fs
enter
ss
ret
dec
pop
sub
clc
jo
add
mov
je
push
or
mov
clc
pop
push
add
xor
add
clc
imul
fwait
sti
gs
ret
jecxz
js
xlat
xor
add
xabort
push
or
clc
inc
add
mov
cld
jmp
sub
and
loope
icebp
xchg
xchg
and
add
cld
pop
pop
xor
clc
pop
sahf
mov
clc
cmp
add
fld
clc
sub
pop
adc
cld
jmp
outsl
cmp
mov
xor
add
pop
int
inc
clc
inc
clc
and
add
jae
add
add
jmp
pop
mov
fisttpl
lods
push
add
mov
nop
push
add
sub
cld
jmp
or
sbb
and
sbb
jmp
pop
pop
insb
es
clc
inc
clc
jle
faddl
and
add
inc
clc
popf
xor
add
add
push
clc
xor
clc
mov
push
mov
add
loopne
add
test
and
add
or
mov
and
add
int3
mov
out
out
int
sub
cmp
clc
mov
mov
jnp
je
clc
jmp
cmc
inc
add
test
stc
test
cld
jmp
popa
add
sar
into
jae
add
clc
dec
jae
add
add
xor
add
jmp
sahf
inc
clc
outsb
sbb
pop
adc
jge
push
jl
ret
cld
jmp
sub
sub
cmp
or
add
cld
add
add
xchg
xabort
xchg
mov
push
cld
jmp
pop
fwait
push
sub
add
in
imul
xor
adc
xchg
aam
add
xchg
cmp
sar
cmpsl
clc
and
clc
pop
cmp
clc
mov
clc
mov
cltd
cmp
xchg
scas
fldt
lahf
leave
push
add
lcall
jmp
lea
push
push
add
jmp
sti
imul
mov
ljmp
add
add
mov
clc
push
icebp
cld
jmp
or
pop
pushf
scas
mov
add
lcall
fnop
mov
add
add
bound
add
clc
std
icebp
dec
inc
clc
sbb
add
lret
pop
cmpsl
clc
arpl
add
add
push
arpl
add
sar
mov
roll
scas
sarl
adc
add
lods
addr16
aad
xchg
incl
xchg
call
aaa
test
mov
cmpsl
clc
lahf
cmp
inc
clc
cmp
jmp
outsl
add
sub
add
int
dec
or
clc
mov
rorl
arpl
add
xchg
and
add
add
mov
scas
sar
xbegin
xchg
mov
jno
add
add
stos
aaa
jb
add
add
cmp
push
adc
add
imul
loopne
inc
clc
ja
std
mov
outsb
add
push
push
cld
jmp
push
lea
clc
bound
add
repz
clc
ss
sbb
clc
sbb
in
mov
clc
out
ss
mov
clc
gs
ja
cmpsb
clc
inc
add
mov
and
add
mov
jp
clc
je
clc
dec
pop
leave
popa
add
add
add
lret
add
push
fadd
clc
cmp
jno
add
push
add
ljmp
inc
inc
add
pop
inc
dec
cmp
mov
cmp
add
mov
add
lret
aam
mov
cld
jmp
nop
arpl
add
mov
add
cmp
jmp
clc
rcl
arpl
add
clc
data16
inc
add
cli
pop
mov
jmp
aaa
mov
dec
mov
or
sub
clc
pop
and
add
sti
dec
jmp
inc
clc
cmp
mov
xchg
adc
cmp
clc
cmp
or
xchg
repnz
sar
daa
clc
bnd
add
daa
clc
and
add
add
outsb
add
cld
jmp
push
stc
lret
aad
inc
add
xchg
fsubrs
add
sub
clc
js
mov
jp
fimull
add
fwait
push
add
cmpsl
clc
xor
mov
cld
jmp
or
mov
js
mov
clc
rolb
add
adc
clc
inc
clc
ljmp
dec
cld
int
xchg
sbb
movsb
clc
mov
test
clc
jb
add
jo
add
adc
add
adc
add
out
fwait
decl
test
scas
cld
jmp
push
jbe
clc
jb
add
das
iret
dec
cmp
nop
xchg
out
push
add
daa
clc
sahf
lret
sbb
add
mov
bound
add
popa
add
ds
repz
and
cmp
jmp
sahf
movsb
scas
test
add
adc
add
ss
or
add
jo
add
and
mov
clc
movsb
clc
fistps
add
clc
xor
add
add
add
sbb
add
add
jmp
push
fbld
add
add
pop
mov
add
add
inc
clc
or
and
add
add
in
mov
dec
mov
cld
jmp
inc
movsb
adcb
sub
pop
sbb
jg
pop
js
mulb
in
mov
push
add
mov
mov
movsb
clc
mov
imul
outsb
pop
iret
inc
clc
dec
push
add
cld
jmp
inc
xor
jne
pop
aaa
xor
add
lods
inc
clc
cmpsl
clc
scas
push
add
xor
add
jg
cld
jmp
pop
xor
xlat
aad
clc
pop
mov
add
clc
add
add
lock
int
cmp
clc
push
add
mov
add
mov
mov
stos
mov
jmp
xchg
add
dec
push
sti
pop
mov
in
pop
adc
add
clc
mov
and
add
add
mov
clc
mov
cmp
jo
add
test
hlt
fsubrp
out
and
add
clc
insl
xor
es
mov
clc
mov
clc
in
add
push
and
inc
add
inc
clc
pmaxsw
xchg
mov
push
clc
in
hlt
jno
add
fcompl
clc
add
clc
add
mov
mov
add
popf
sub
add
outsl
xor
mov
sub
clc
stos
pop
mov
clc
and
add
stc
ret
test
clc
testb
add
sub
add
add
clc
add
add
mov
push
add
add
lods
inc
add
sub
add
add
aam
jp
xbegin
clc
shll
add
fchs
clc
mov
add
adc
sbb
mov
test
jl
clc
mov
xor
add
sar
xchg
scas
daa
clc
jns
clc
pop
adc
addr16
mov
in
icebp
push
clc
bound
add
mov
leave
mov
jnp
add
jl
inc
clc
stos
xchg
xchg
jl
lock
outsb
inc
add
jmp
js
pop
xchg
xbegin
clc
aaa
pop
loop
xchg
adc
add
add
dec
sahf
push
add
pop
clc
pop
pop
div
add
add
adc
sub
add
clc
repz
and
add
fldenv
add
mov
push
mov
jno
add
mov
push
add
push
cmova
adc
add
cltd
mov
ds
testl
add
add
cmp
add
push
addr16
loop
mov
inc
clc
pop
xor
add
xor
add
decl
clc
lahf
xor
clc
in
inc
clc
push
outsb
inc
add
mov
bound
add
ror
scas
in
daa
clc
sahf
lret
out
outsl
fadds
sar
pop
clc
push
add
pop
data16
js
cmp
jp
loop
incb
or
mov
add
and
add
je
push
add
inc
add
dec
and
add
divl
fsincos
ror
leave
std
int
clc
icebp
pop
xchg
dec
add
scas
bound
add
clc
xor
add
insl
lret
scas
int
clc
jnp
and
add
add
clc
xlat
imul
add
add
sbb
ret
mov
clc
push
ret
clc
cmpsb
clc
icebp
mov
clc
lcall
int
sti
jb
add
sub
pushf
addr16
movsb
clc
data16
sub
xor
add
clc
add
add
aad
add
fwait
xchg
add
add
add
clc
outsl
mov
iret
mov
clc
push
lahf
icebp
mov
cmp
clc
jb
add
pop
data16
push
add
std
jge
push
mov
jno
add
test
sub
in
stos
cmp
inc
add
testl
push
add
jne
clc
mov
lods
mov
add
xabort
mov
mov
sub
out
in
cmpsb
clc
xor
add
jne
clc
clc
push
add
xor
add
mov
add
out
jge
add
stc
leave
das
sub
clc
pop
loop
arpl
add
add
scas
pusha
add
pushf
sbb
clc
out
gs
push
add
repnz
add
outsb
add
outsl
mov
add
std
into
adc
clc
leave
rcll
test
clc
and
notb
jnp
pop
stc
fldenv
add
scas
mov
add
mov
add
push
add
sub
clc
enter
cmp
clc
adc
add
mov
add
add
add
clc
add
jo
add
clc
hlt
leave
sti
lods
cmp
addr16
ret
add
or
dec
sub
clc
cltd
dec
movsb
clc
inc
add
mov
clc
sbb
clc
xbegin
sbb
dec
out
bound
add
fs
mov
lods
hlt
popa
add
testl
int3
mov
mov
cmp
lea
add
rorl
xchg
mov
add
scas
fnstenv
clc
xchg
fimull
aam
push
pop
inc
add
jae
add
sbb
sbb
pop
sbb
mov
fildl
fcoms
clc
outsb
ret
scas
loop
pop
clc
push
pop
pop
mov
add
popa
add
aas
xor
add
add
mov
stos
repz
and
add
add
mov
xor
add
shll
add
clc
xchg
call
fsubl
xor
add
cwtl
cld
cmc
adc
add
jg
and
add
not
xor
add
mov
int
add
fwait
dec
mov
lock
movsl
clc
xchg
jo
add
and
add
rcl
test
sar
jecxz
cmp
cmp
xor
add
notb
add
data16
rcrb
push
stc
mov
clc
jle
ret
clc
pop
or
add
fimuls
arpl
add
add
push
add
out
cmp
ds
fadds
add
add
sahf
push
add
pop
clc
adc
ljmp
clc
jo
add
lcall
and
xbegin
shrl
sub
jae
add
jecxz
adc
add
add
xor
add
and
stos
adc
add
or
in
pop
xchg
pop
inc
add
push
add
sbb
cmp
pop
cmp
mov
add
cwtl
or
lock
push
cmpsb
clc
vmovhps
jge
call
out
mov
sbb
mov
add
movsl
clc
push
add
jl
add
cmp
push
arpl
add
ds
push
mov
mov
clc
xchg
test
or
clc
enter
jl
add
add
add
insl
jl
popa
add
jbe
insb
in
popa
add
icebp
dec
jb
add
and
add
clc
xor
add
jnp
mov
cmpsb
clc
or
dec
js
jns
add
xchg
cwtl
cmp
call
add
clc
fdiv
adc
add
push
add
sub
clc
dec
fsubl
clc
pop
adc
add
add
pop
out
cwtl
or
lcall
aaa
sahf
das
rclb
clc
mov
cwtl
int
movsb
clc
ja
ret
clc
jns
imul
xor
clc
mov
loop
ja
clc
and
add
add
stc
in
lcall
sahf
fwait
add
push
clc
iret
pop
imul
lahf
lods
sbb
push
cmp
clc
sbb
clc
dec
stos
iret
inc
add
std
push
add
xor
add
cmp
stc
lcall
aam
clc
add
add
fadds
fs
jnp
push
add
cmp
inc
clc
inc
clc
ror
aad
nop
dec
call
pop
lods
push
pop
clc
test
xor
add
mov
loope
stc
mov
enter
clc
and
mov
clc
insl
push
cmp
clc
xor
add
es
pop
pusha
add
inc
add
push
add
xabort
clc
repnz
enter
clc
lods
mov
clc
xchg
lock
add
xchg
add
add
mov
cmp
pop
jo
add
add
clc
lahf
daa
clc
mov
sbb
push
sbb
test
pusha
add
sbb
jnp
add
push
clc
repz
push
add
cmp
shrl
jne
inc
clc
or
clc
lock
sbb
add
add
out
daa
clc
xchg
lea
jns,pn
cs
jnp
clc
sbb
clc
mov
call
and
adc
add
xchg
cmp
xchg
cwtl
xchg
nop
dec
cmp
clc
icebp
add
add
pop
mov
push
xor
add
add
add
dec
mov
popa
add
mov
clc
push
clc
xor
add
add
clc
clc
mov
dec
cmpsb
clc
mov
bt
fimull
clc
aam
clc
out
in
js
clc
loopne
int
mov
and
add
clc
cmp
insl
or
addr16
cld
sahf
jnp
mov
outsl
es
mov
clc
cmp
sti
push
fcmove
cltd
mov
das
dec
dec
enter
insl
cmp
push
clc
clc
xor
add
add
push
das
and
add
clc
push
add
clc
ja
insl
mov
inc
add
popa
add
fisubs
add
sub
xchg
and
push
clc
sti
ficoms
add
jmp
aad
clc
lret
int3
repnz
imul
add
bnd
bound
add
fwait
outsb
jg
popa
add
gs
push
adc
shr
sub
xor
add
cld
sti
mov
clc
jle
sti
push
add
lcall
add
xchg
cwtl
dec
pop
cmp
out
xbegin
push
add
pop
sub
scas
xlat
add
add
xabort
push
xbegin
aam
clc
xor
add
mov
enter
ret
clc
add
pop
or
add
mov
add
xchg
stos
and
push
aam
addr16
repnz
int3
inc
add
inc
add
loopne
pop
cmc
js
daa
clc
daa
clc
sar
clc
aas
xor
add
cmpsb
clc
movsb
clc
out
mov
popf
jbe
insl
popf
pop
out
jecxz
loop
cmpsl
clc
mov
clc
add
add
inc
add
sahf
in
repz
add
clc
sub
sahf
lock
add
add
lods
fdivrl
out
dec
pop
and
add
mov
and
lea
fs
push
out
xbegin
xbegin
add
push
add
fs
inc
clc
sbb
mull
add
mov
clc
loope
add
add
lods
popf
pop
data16
pandn
pop
cmp
bound
add
xchg
fs
add
insb
aaa
repz
add
mov
add
inc
clc
ja
cmc
cmp
cmp
xbegin
clc
movsl
clc
addr16
or
clc
sar
jb
add
jmp
fisubl
or
clc
cli
jb
add
push
stos
pop
mov
ret
clc
fnstcw
das
xabort
pushf
sub
clc
push
pushf
inc
clc
ret
clc
add
add
clc
cmc
pop
mov
mov
sbb
and
add
jns
mov
in
mov
enter
xchg
push
ficomps
add
add
clc
fnsave
add
loope
inc
clc
push
add
insl
movsb
clc
and
int3
clc
xchg
or
loop
imul
add
add
aas
movsb
clc
ret
pop
xabort
out
sbb
clc
push
xchg
add
add
xchg
cwtl
cmp
clc
mov
add
insb
cmp
mov
add
mov
add
xor
add
outsl
cmpsb
clc
fldenv
add
push
cmpsl
clc
push
clc
pop
lcall
push
adc
add
enter
clc
fdiv
adc
add
iret
pushf
std
stc
es
xchg
jb
add
loopne
adc
and
add
cmp
pop
cmpsl
clc
in
push
loopne
xor
add
add
addr16
jbe
and
sub
xchg
lcall
mov
insl
xabort
clc
cmp
add
int
sub
clc
out
fsqrt
lock
cmp
clc
clc
enter
clc
mov
clc
scas
fdivrp
xbegin
cmp
add
je
and
add
clc
sar
clc
cmp
add
sti
jns
sub
sbb
mov
fsubrl
jmp
add
add
pop
pop
pop
clc
lret
mov
add
mov
je
in
fsubl
add
pop
push
add
sub
movsb
clc
in
add
add
add
outsb
clc
test
and
add
mov
pop
clc
push
outsl
push
mov
cmp
add
jl
xchg
enter
clc
jle
clc
ret
clc
loope
push
in
xchg
daa
clc
clc
sar
add
xor
add
add
adc
add
int3
xchg
loop
inc
add
in
stos
and
add
addr16
xor
add
clc
fdivrl
aaa
fnstcw
pop
outsb
js
adc
add
cmp
inc
clc
ja
clc
mov
xchg
pop
xor
sbb
sub
dec
insb
inc
clc
mov
push
clc
arpl
add
clc
xchg
fnstenv
add
add
add
clc
clc
cmp
pop
mov
clc
addr16
popf
cld
jecxz
xchg
pop
mov
es
or
jmp
clc
lret
dec
add
add
add
aaa
cmc
cmp
add
movsl
clc
cmpsb
clc
and
leave
lcall
clc
stc
push
jae
add
insl
cmp
mov
fcmovb
clc
push
jnp
adc
add
xor
mov
jecxz
shll
loopne
or
ret
clc
sub
xbegin
add
cmp
loopne
xor
adc
add
add
sbb
fstpl
push
add
in
sahf
or
clc
in
in
popf
mov
add
add
inc
clc
and
add
add
clc
mov
add
jle
mov
clc
test
rcrb
xabort
sarb
outsl
sarl
pop
push
sar
pusha
add
xchg
jno
add
add
push
pop
lods
lret
lock
push
addr16
add
push
mov
fs
loopne
bound
add
jbe
add
add
negl
aaa
pop
clc
enter
add
js
clc
push
int
clc
cmpsl
clc
repz
clc
xchg
mov
dec
mov
inc
add
xchg
mov
mov
add
cmp
outsl
aaa
lret
clc
sbb
mov
sub
pop
ret
and
mov
add
push
fcomps
mov
fsub
clc
sar
clc
hlt
or
lcall
push
clc
jnp
mov
call
add
inc
add
out
push
add
ficoml
add
pop
nop
push
stos
mov
aaa
mov
push
clc
clc
add
inc
add
clc
dec
inc
clc
mov
adc
add
xchg
aad
inc
clc
cld
fsub
clc
mov
inc
clc
jns
outsl
cmpsb
clc
jle
lock
fisttpll
add
jnp
inc
add
cmp
pop
inc
clc
and
add
add
add
adc
add
xbegin
push
cmc
popl
clc
fimuls
or
push
and
add
add
scas
stos
adc
add
and
add
add
fnstenv
clc
sbb
add
imul
es
inc
add
sbb
inc
add
setp
cwtl
popf
aad
clc
cltd
cs
cmpsb
clc
sti
inc
clc
fstp
lods
sbb
mov
add
xchg
addr16
mov
push
clc
inc
clc
mov
scas
jmp
mov
add
pop
sbb
cmp
test
cmp
movsl
clc
xor
add
add
add
jge
push
sar
and
mov
jae
add
jo
add
add
mov
movsl
clc
jno
add
cld
mov
add
stc
imulb
push
sbb
add
jno
add
add
cmp
add
cmp
fs
push
add
lahf
push
adc
add
add
sub
add
xchg
add
push
mov
in
fisubrs
stc
mov
add
pushf
dec
xor
add
clc
shrb
cmp
gs
and
add
add
add
add
add
cltd
adc
clc
int
clc
mov
inc
add
cmp
rcr
inc
add
push
outsb
xor
cltd
cs
mov
pop
add
add
clc
sbb
jns
clc
adc
add
push
mov
inc
add
in
sbb
sub
ljmp
add
aaa
or
push
mov
sbb
add
dec
mov
add
pop
mov
dec
js
jae
add
dec
mov
clc
jnp
clc
push
fsts
cmp
add
and
add
jle
aaa
or
add
cld
jb
add
div
call
add
mov
xchg
ss
add
shrl
add
add
cmp
lods
push
add
loope
cltd
cmp
inc
clc
jmp
je
inc
clc
stos
cmp
mov
clc
cmpsb
clc
dec
mov
sti
clc
lret
clc
cmpsl
clc
sbb
fucom
clc
mov
mov
int3
pop
mov
sbb
xchg
or
mov
loopne
loope
repnz
add
lea
dec
add
in
sub
clc
out
dec
gs
dec
addr16
dec
ret
clc
xor
add
xor
add
out
out
addr16
and
add
add
clc
sar
ss
sbb
pop
push
int
or
mov
in
test
push
lods
mov
add
add
add
xabort
add
sar
jge
mov
sar
int
clc
bound
add
add
mov
lcall
dec
mov
clc
sbb
lret
adc
sbb
dec
or
add
call
rcl
fdivrl
sbb
mov
js
clc
lods
push
clc
nop
mov
clc
into
jle
mov
clc
iret
int
add
add
int3
pop
sub
clc
jg
add
repz
mov
clc
cwtl
popf
jp
sbb
inc
add
and
add
outsb
call
es
outsb
cmp
push
int
add
pusha
add
inc
clc
cmp
sarb
mov
add
mov
ss
loop
mov
clc
data16
imull
cmp
int3
push
mov
clc
lret
dec
cwtl
fs
cwtl
jne
mov
es
push
and
jno
add
add
inc
clc
cmp
clc
in
and
mov
lret
add
add
movsl
clc
inc
add
loope
pushf
enter
fwait
popa
add
es
dec
fcomip
sub
clc
stos
stc
std
insl
rol
clc
push
add
mulb
clc
push
lods
mov
add
das
std
leave
mov
dec
lcall
adc
add
mov
mov
std
addr16
and
add
into
sti
pop
xchg
or
clc
scas
mov
insl
pop
cmp
mov
clc
mov
mov
xor
inc
clc
lods
xchg
sti
or
add
clc
push
add
adc
add
and
add
mov
xor
add
add
xchg
adc
add
cld
outsb
inc
add
ficomps
and
add
push
add
in
and
shl
push
add
mov
shrb
xchg
lcall
int
cmpsb
clc
ja
jae
add
pop
xor
add
or
shrb
xchg
outsl
mov
test
cmp
fadds
add
aad
xchg
or
out
mov
aam
mov
clc
lods
push
bound
add
stc
out
iret
dec
dec
mov
popf
lea
add
fdivrs
clc
sti
add
add
shrb
dec
lods
push
clc
js
mov
clc
xchg
jo
add
mov
clc
jmp
lea
cmc
mov
inc
add
sub
sub
add
int
xchg
testl
pop
mul
clc
fisttps
add
insb
cmp
clc
dec
xchg
daa
clc
jp
sar
add
js
mov
clc
cmp
add
cmp
idivb
add
xchg
dec
imul
test
push
add
shrl
mov
fdivrs
sahf
sbb
add
xor
add
dec
rcl
mov
jmp
sub
add
add
inc
add
jle
pop
sar
bound
add
and
add
clc
clc
xchg
imul
rcll
clc
xchg
add
adc
add
add
pusha
add
add
add
cmp
clc
test
lret
xor
add
mov
out
adc
add
mov
add
add
clc
jecxz
lock
xchg
and
inc
add
ficoml
add
pop
jl
pop
push
gs
dec
pop
jbe
out
push
movsb
clc
insl
icebp
jp
jae
add
cmp
jp
popf
jp
outsb
sub
dec
xor
add
out
push
imul
addr16
jmp
add
or
mov
es
fadds
add
add
jecxz
cmp
pop
dec
int3
inc
add
scas
int
bound
add
clc
fucom
clc
mov
xor
add
mov
add
sar
sub
clc
das
and
add
or
aas
lret
add
clc
xchg
daa
clc
xchg
out
xchg
xor
clc
rcll
add
jne
cli
dec
ljmp
push
hlt
mov
clc
xor
add
add
cld
sub
add
jae
add
loop
sbb
in
call
xbegin
lcall
add
lahf
adc
clc
inc
clc
dec
cmp
push
inc
clc
ja
add
ss
clc
mov
ds
add
pop
lret
popf
mov
sar
aam
clc
nop
mov
dec
arpl
add
inc
clc
sar
add
outsl
pusha
add
movsl
clc
mov
push
cmp
and
add
sahf
mov
pop
int
lret
jo
add
clc
pop
clc
push
jo
add
adc
add
add
pop
mov
addr16
adc
add
arpl
add
add
incl
rolb
fists
or
int3
mov
push
and
push
dec
out
pop
repz
jl
sbb
in
stos
pop
in
or
add
push
clc
mov
add
and
add
cmpsl
clc
sub
imul
mov
add
mov
add
mov
stos
adc
push
adc
add
add
popf
stos
outsl
xor
add
dec
push
clc
into
in
mov
add
add
or
inc
add
jo
add
xor
add
add
add
jae
add
loop
push
add
mov
popa
add
imul
cli
mov
clc
sub
bound
add
and
add
add
xor
add
ret
clc
lods
mov
orps
loope
repnz
ds
xchg
dec
ja
out
cmp
sti
push
add
cmp
add
repnz
mov
xchg
cld
mov
add
push
fsubl
push
cli
data16
inc
clc
outsl
jns
fsub
clc
movsl
clc
dec
rolb
xchg
and
push
scas
cmp
insb
mov
push
in
in
and
add
mov
add
insl
mov
pop
addr16
int
or
icebp
mov
add
sbb
divl
clc
icebp
cli
mov
add
inc
clc
mov
in
mov
clc
push
or
clc
sub
bnd
add
pop
clc
mov
arpl
add
clc
sbb
clc
mov
clc
mov
mov
dec
fildl
add
int3
push
push
cmp
lret
add
cmpsb
clc
clc
jb
add
push
xor
add
sub
pop
push
push
add
mov
mov
clc
daa
clc
and
add
iret
pushf
lock
xabort
mov
sub
clc
testb
xchg
test
clc
jle
mov
stos
push
stc
popf
adc
add
jo
add
add
add
pop
clc
int
clc
fs
xchg
jbe
jp
push
aaa
in
test
cmp
xchg
pop
in
vmovaps
lret
clc
xor
add
push
lret
or
mov
xchg
je
clc
imul
sbb
add
mov
clc
cmp
sub
clc
fildll
add
add
or
xor
add
clc
adc
add
add
xchg
lods
sar
clc
sar
adc
dec
aaa
xabort
clc
adc
add
mov
xchg
and
add
add
lahf
cmp
sbb
pop
pop
test
cmp
cwtl
jge
add
cmp
add
mov
jbe
lret
adc
add
xbegin
add
add
add
add
clc
dec
mov
aam
bound
add
dec
out
sar
add
push
clc
add
pop
mov
add
sub
jmp
bound
add
repz
out
repnz
clc
cmp
clc
adc
add
sub
push
addr16
cmp
lea
adc
add
dec
pop
clc
add
add
clc
sbb
icebp
sbb
es
mov
lahf
pop
clc
cmp
out
fs
cmp
add
jle
imul
push
add
lret
adc
clc
es
add
add
out
jp
fnstenv
add
ret
clc
and
add
push
xor
add
and
add
add
loop
cltd
scas
jae
add
clc
loop
inc
add
add
cmp
and
add
clc
and
add
and
inc
clc
pop
jo
add
lret
scas
push
shrb
clc
xabort
je
clc
jl
mov
add
in
insl
nop
pop
jae
add
mov
and
add
add
jo
add
popf
cmp
iret
inc
add
loopne
insb
push
add
mov
in
and
cmp
sbb
add
stos
push
add
loop
insb
pop
adc
add
add
inc
clc
adc
cmp
add
inc
add
pop
mov
mov
and
add
sub
ror
ss
stos
in
cmp
clc
stos
sbb
movsl
clc
xabort
fdivl
xor
add
jl
clc
push
mov
femms
sbb
jne
fiadds
es
xchg
pop
pop
pop
aaa
cmp
lea
jp
outsl
push
sub
push
out
xor
mov
clc
cltd
and
pop
xor
add
cltd
stos
imul
cmpsb
clc
in
leave
xbegin
mov
clc
aaa
inc
add
gs
cmp
jno
add
add
ficompl
push
cmp
lea
cmpsb
clc
add
add
inc
clc
aam
test
pushf
lahf
xbegin
add
cmp
mov
or
mov
clc
mov
inc
add
mov
mov
add
cmpsl
clc
push
pushf
out
leave
out
jg
push
add
ficompl
push
popf
pop
jecxz
xbegin
mov
clc
mov
add
mov
push
add
fimuls
cltd
int3
addr16
fsubrl
inc
add
imul
lea
add
insb
sub
add
pop
rol
clc
outsb
xchg
ret
clc
add
add
jno
add
add
clc
push
and
push
cmp
mov
clc
es
imul
sbb
add
sbb
rep
mov
sbb
cmp
sub
idivl
mov
pop
js
push
repnz
imul
push
add
pop
clc
lods
cmc
aam
dec
mov
clc
sub
popa
add
mov
clc
dec
pop
pop
clc
repz
clc
aad
clc
fs
int
das
icebp
mov
rcll
mov
push
add
cmp
adc
lods
cmp
clc
repz
add
clc
es
addr16
daa
clc
movsl
clc
mov
cmp
push
data16
lock
add
adc
add
in
pop
clc
imul
clc
icebp
adc
add
add
loope
fcompl
push
sub
push
insb
dec
push
mov
sbb
clc
xor
add
add
sbb
jb
add
out
push
jno
add
add
jg
add
loopne
into
imul
inc
add
sbb
jp
mov
push
add
int3
outsl
out
arpl
add
outsl
popf
push
arpl
add
outsb
and
add
xor
add
xchg
sti
ds
and
inc
add
pushf
add
insl
vsqrtps
add
sub
clc
icebp
sbb
clc
ret
clc
add
add
clc
out
fs
lods
leave
out
push
clc
loopne
repz
clc
pop
push
add
fstpt
fwait
int3
cmp
xchg
fmuls
jbe
xchg
ja
add
cwtl
or
clc
push
add
repnz
add
clc
xchg
mov
and
add
movsb
clc
out
imul
adc
add
add
inc
clc
sub
add
movsb
clc
mov
add
fnsave
cmp
clc
pop
sbb
out
sbb
and
add
add
mov
and
add
add
ds
clc
fildl
clc
incb
xchg
mov
inc
clc
fiaddl
add
sbb
scas
cs
lock
jl
cwtl
adc
clc
adc
add
data16
cmp
add
mov
inc
clc
pop
mov
clc
jbe
clc
and
add
push
pop
aas
jo
add
cmpsl
clc
and
add
addr16
ljmp
int3
mov
es
mov
add
mov
add
das
js
add
out
xor
clc
push
add
xor
add
add
pop
inc
add
mov
ret
add
aaa
push
add
add
add
add
push
add
or
mov
add
lods
mov
clc
mov
add
pop
mov
outsl
pop
in
mov
add
add
mov
in
dec
fimuls
repnz
pop
add
add
xchg
repnz
sub
xchg
fwait
imul
add
fists
lret
fidivrl
add
sub
inc
clc
lods
vmovaps
add
stos
add
imul
clc
or
cmp
loop
mov
inc
clc
loopne
fmull
add
add
int3
jne
mov
xbegin
add
xchg
jno
add
clc
dec
cwtl
fsubr
outsl
icebp
fcomi
pop
adc
add
shl
mov
daa
clc
test
jecxz
jns
sbb
loopne
push
leave
sbb
jo
add
cmp
outsb
and
add
add
fwait
daa
clc
cli
adc
add
outsb
addr16
xlat
jle
dec
xor
and
add
stos
xchg
push
jbe
add
mov
mov
sbb
xchg
int3
stos
cs
push
add
adc
add
clc
icebp
test
sub
clc
loope
cmpsl
clc
xlat
pushl
mov
sbb
sar
inc
add
mov
cmpsb
clc
jle
stos
or
clc
lods
push
xchg
js
push
add
add
lret
cwtl
outsb
jns
push
add
add
xor
mov
add
or
or
loop
lret
mov
add
adc
add
add
add
data16
stos
mov
jg
pop
movsb
clc
cli
cmp
add
clc
push
xor
add
ss
jnp
xor
add
push
pop
push
clc
jns
test
add
add
clc
cmp
data16
push
add
xlat
sbb
add
ss
fdivl
sahf
test
jp
sbb
loopne
xlat
nop
pop
call
stos
stos
dec
add
add
pop
adc
add
pop
fidivl
add
in
fidivs
add
clc
pop
jo
add
clc
add
jecxz
sar
xor
add
add
insl
pusha
add
dec
jne
repnz
decl
add
clc
mov
out
and
add
test
clc
jne
dec
jnp
clc
push
popa
add
sbb
stos
popa
add
fdivl
add
leave
lock
mov
out
mov
cmp
add
push
push
add
xor
add
adc
mov
add
add
add
mov
add
mov
into
push
xor
add
and
cmp
clc
dec
mov
and
add
aad
jmp
jecxz
push
jge
out
cmpsb
clc
mov
sbb
jmp
dec
push
fwait
lahf
xor
add
sub
aas
push
add
dec
std
and
add
cltd
sbb
add
xchg
out
jecxz
inc
clc
outsb
dec
sbb
repz
add
ss
cmp
gs
cmp
ffree
clc
push
add
mov
cmp
clc
mov
clc
mov
imul
dec
jecxz
jno
add
sub
clc
das
std
cwtl
daa
clc
jb
add
inc
add
adc
add
fwait
popa
add
jnp
jne
je
loop
jb
add
xchg
out
fwait
or
jae
add
add
data16
lea
add
not
gs
push
cmc
add
add
add
clc
test
xlat
aad
clc
xchg
cmc
jno
add
add
add
in
and
add
xchg
mov
add
add
mov
jnp
push
add
or
push
or
jmp
add
jecxz
jo
add
clc
jae
add
sbb
clc
cmpsl
clc
mov
add
mov
enter
add
pushf
xor
repz
add
add
adc
add
fsubrl
call
jle
clc
cmp
add
lcall
mov
mov
add
clc
arpl
add
mov
add
lods
jns
clc
je
add
mov
mov
add
jmp
jle
clc
push
clc
popf
je
clc
mov
mov
xbegin
add
add
xchg
test
bound
add
outsl
pop
insb
ds
push
add
jmp
add
js
enter
mov
jo
add
add
mov
aaa
das
pop
gs
pop
clc
and
push
outsl
dec
push
jl
add
inc
add
vxorps
scas
push
xchg
fldt
clc
cmp
sub
add
ds
outsb
insb
dec
push
dec
pop
cmpsl
clc
popa
add
pop
mov
cmp
cmp
nop
scas
xlat
lahf
stc
xchg
pop
pop
cmp
cmp
xchg
fidivrs
negl
das
jnp
add
in
ret
xchg
daa
clc
hlt
je
clc
shll
aam
jnp
add
add
add
clc
cwtl
and
mov
xor
add
inc
clc
mov
cltd
and
add
clc
sbb
add
mov
clc
or
clc
xchg
fimuls
dec
bound
add
cmp
iret
inc
add
inc
add
dec
fistpll
add
add
inc
add
and
add
xor
add
insb
inc
clc
lcall
xchg
add
cld
add
add
xchg
fbld
icebp
mov
add
inc
clc
fists
add
add
add
and
sbb
stc
push
scas
std
push
add
cwtl
outsl
xchg
mov
xor
mov
clc
mov
and
add
out
imull
data16
ljmp
clc
inc
add
pop
pop
xor
add
cmpsl
clc
filds
aas
rcrl
add
add
adc
add
fsubs
add
sub
pop
jno
add
push
repz
add
add
repz
mov
mov
add
add
call
add
lret
inc
clc
iret
cld
mov
outsl
int
sbb
xchg
jae
add
cmpxchg
add
pusha
add
outsl
ss
clc
test
mov
add
scas
lods
dec
stos
ja
clc
push
and
add
mov
clc
loopne
pop
hlt
cmc
dec
lods
cmp
mov
clc
cmp
clc
add
cmp
add
clc
ss
jnp
clc
sub
popa
add
scas
push
push
clc
push
imul
jnp
sti
out
mov
hlt
fisubrl
add
add
mov
inc
add
test
test
mov
dec
out
and
add
push
add
daa
clc
test
into
sub
add
push
add
insl
enter
clc
add
inc
clc
xchg
mov
aam
ss
cmp
pusha
add
and
add
mov
repnz
mov
loop
pop
clc
mov
sub
fisubrs
clc
xchg
scas
xor
add
clc
insl
in
or
vunpcklps
sbb
rcrb
and
add
clc
xabort
mov
pop
js
add
cmp
pop
mov
sar
add
ds
clc
and
testb
jno
add
js
xchg
mov
dec
inc
add
sar
add
inc
add
inc
add
sar
clc
xlat
arpl
add
pop
pop
lods
xor
imul
clc
dec
push
cld
js
mov
das
outsl
pop
in
push
add
jmp
add
mov
rclb
cmp
adc
add
add
add
xchg
or
clc
stos
dec
sahf
clc
sbb
psrlw
fwait
int3
test
clc
mov
cli
add
add
add
jp
bswap
sar
dec
and
pop
clc
pop
sar
sti
stc
adc
push
add
mov
nop
sahf
cwtl
mov
add
std
pop
sbb
add
xor
add
add
gs
and
add
add
push
add
pop
ja
mov
out
insl
jne
xor
add
sar
push
lcall
out
add
out
mov
push
jns
dec
pop
out
fcoml
add
cmp
jnp
mov
add
add
mov
mov
adc
add
adc
xor
add
clc
cld
bound
add
add
call
add
cmp
mov
fcom
cs
cs
aas
sarb
data16
daa
clc
jnp
xor
add
add
ja
add
data16
mov
mull
je
cmp
clc
dec
fwait
adc
add
mov
stos
mov
clc
push
je
outsb
sub
cmp
mov
adc
adc
add
cwtl
lcall
dec
cmp
jecxz
and
dec
adc
add
mov
clc
cmc
cmp
xchg
data16
aam
inc
clc
ja
popa
add
bound
add
add
out
xchg
inc
add
xor
add
cwtl
fwait
mov
push
add
pop
addr16
int
xchg
sqrtps
add
add
pop
sub
and
add
mov
mov
add
xor
xchg
add
pushf
das
fistl
clc
out
push
loop
shlb
add
clc
jae
add
in
out
add
add
imul
xbegin
popa
add
dec
push
add
ret
clc
dec
adc
add
add
xchg
bound
add
cltd
mov
mov
outsl
div
cmp
push
add
cmpsb
clc
push
xchg
es
xchg
sbb
inc
clc
adc
in
jns
in
xchg
out
cmp
test
mov
out
sbb
stos
cmp
pop
outsb
lcall
add
in
pop
or
imul
imul
int3
push
add
shr
mov
mov
nop
nop
xchg
pop
and
add
sub
sub
or
mov
mov
and
add
add
dec
jno
add
and
div
sbb
clc
jmp
clc
push
call
pop
pop
xchg
and
add
mul
clc
movsl
clc
dec
sbb
mov
clc
xchg
sbb
push
bound
add
add
mov
clc
add
add
pop
mov
dec
or
and
add
add
push
adc
add
xchg
mov
aaa
bound
add
clc
in
and
add
clc
sbb
clc
sub
clc
das
and
xchg
cmpsb
clc
jnp
xor
add
xor
pop
xor
add
fisubrs
add
sbb
ret
clc
mov
add
cmpsl
clc
je
add
js
sbb
aas
lret
sarb
mov
mov
add
xlat
inc
add
lods
repz
shll
inc
add
or
adc
add
add
xabort
mov
clc
sbb
rorb
fdivl
inc
clc
mov
inc
add
data16
sar
clc
mov
jo
add
add
add
test
inc
clc
xchg
sar
cmp
std
push
out
arpl
add
fistps
sbb
cmp
mov
inc
clc
vmovups
add
clc
lods
jmp
ret
clc
fistl
add
xchg
mov
mov
out
sub
imul
mov
or
pop
clc
mov
clc
mov
mov
add
push
mov
scas
jecxz
stos
int3
mov
and
js
add
sbb
fldt
inc
add
fildll
add
inc
clc
icebp
data16
aam
add
insb
or
bound
add
dec
inc
clc
ret
clc
sub
das
mov
add
add
aas
cld
adc
add
add
push
clc
inc
clc
sub
clc
repnz
add
enter
add
out
push
add
lods
jno
add
add
xchg
sbb
clc
push
imul
add
xbegin
insl
cmp
cmp
mov
jmp
inc
add
movsl
clc
mov
add
enter
xlat
inc
add
sub
push
shl
gs
and
add
push
lcall
test
push
mov
clc
mov
clc
test
test
cmp
pop
cmp
out
mov
add
inc
clc
inc
clc
pop
ja
adc
add
sarl
clc
fistpl
std
sub
sbb
add
add
add
cmp
clc
sub
clc
into
cmc
mov
cmp
mov
xlat
push
clc
into
dec
mov
sbb
add
add
loope
push
das
mov
clc
pop
clc
movsl
clc
xbegin
cmp
clc
sti
dec
push
jmp
adc
add
add
add
lods
scas
ret
xor
add
mov
clc
cmp
clc
sub
mov
out
out
out
out
xchg
pop
lret
lahf
dec
in
outsl
mov
imul
cmp
inc
clc
lcall
clc
cmp
xabort
adc
add
jmp
pop
xbegin
add
inc
clc
es
sbb
or
ss
sub
and
add
clc
test
cmpsb
clc
cmc
xabort
cmp
cmp
ficoml
add
ret
pop
pop
hlt
ja
sar
clc
fcomp
mov
ffreep
clc
icebp
outsl
lock
add
add
inc
clc
sbb
in
mov
pop
scas
or
add
add
mov
clc
cmp
add
out
add
popl
mov
cmovp
fcomi
js
daa
clc
dec
in
xchg
cmp
add
outsb
pop
icebp
dec
iret
scas
es
repnz
mov
dec
call
cmpsb
clc
test
cmpsb
clc
xbegin
dec
cld
push
add
lahf
push
add
fisubrs
jl
popa
add
leave
daa
clc
pop
adc
add
lret
clc
scas
sub
add
mov
and
add
dec
je
insl
pop
inc
clc
or
push
add
sar
clc
imul
int
add
std
int3
or
pusha
add
cli
cld
xchg
insl
imul
add
ds
mov
add
int
push
cmp
adc
add
add
aam
fwait
xor
add
xor
movsb
clc
mov
clc
in
push
popa
add
out
jo
add
add
add
fs
xchg
xor
push
add
xchg
addr16
test
add
jo
add
clc
ja
clc
sub
xchg
xchg
xchg
aaa
or
clc
movsl
clc
push
lcall
add
aaa
lods
mov
clc
add
add
movsl
clc
mov
clc
xchg
pop
clc
dec
cmc
pop
in
in
adc
add
mov
add
dec
int3
push
add
inc
clc
mov
xchg
sub
mov
mov
arpl
add
clc
add
add
add
lods
movsb
clc
stc
mov
int3
ja
cmp
add
add
sar
outsb
fadd
clc
dec
cltd
pop
mov
jne
xchg
jg
clc
fisubl
mov
ja
mov
mov
jno
add
or
fmuls
pusha
add
inc
add
dec
xor
add
int
out
push
mov
jae
add
fwait
cmp
stc
sub
add
cld
stos
mov
sub
dec
cmp
xchg
fsts
add
adc
add
clc
pop
lcall
es
push
clc
push
push
inc
add
and
add
clc
das
sub
or
clc
cltd
lods
xchg
cmpsb
clc
test
out
movsl
clc
xchg
cmp
add
movsb
clc
jp
clc
lcall
clc
cmc
in
outsb
adc
add
mov
sbb
add
mov
arpl
add
lcall
enter
jb
add
sbb
add
add
add
adc
add
cmp
add
lods
sar
mov
imul
or
mov
or
clc
sub
clc
ja
xor
add
dec
cmp
jp
clc
ja
jo
add
cmpsb
clc
test
in
ret
movsl
clc
daa
clc
pop
push
add
xor
add
clc
inc
clc
stos
push
add
sub
ret
and
add
jg
xchg
sbb
clc
mov
sbb
push
add
clc
jecxz
call
jbe
lahf
lock
sub
jp
cmp
add
and
add
add
clc
xchg
stos
push
add
pop
clc
xchg
sub
mov
clc
xabort
add
add
add
push
mov
pop
int
xchg
cwtl
xor
pop
in
sub
lret
push
bound
add
mull
add
or
pusha
add
cmpsl
clc
ss
add
addr16
pop
mov
mov
add
clc
push
add
movsl
clc
lgs
insl
loope
xor
add
jbe
rorl
lock
add
add
jg
clc
testb
mov
add
dec
aas
jmp
data16
jg
jp
jmp
icebp
push
mov
jmp
clc
insl
lret
das
lret
sub
mov
ljmp
loopne
inc
add
jno
add
lods
bound
add
adc
clc
inc
add
mov
jmp
ret
clc
and
add
fcmovnbe
mov
clc
push
out
call
clc
iret
push
call
dec
jp
clc
sub
cmp
push
add
sar
test
add
add
jp
lods
cmp
ret
clc
sar
clc
dec
pop
fs
mov
pop
xchg
outsl
bound
add
xor
add
push
xor
add
pop
jg
xor
clc
pop
in
sbb
outsb
xchg
cld
and
add
add
sub
jmp
add
mov
add
loopne
or
add
mov
add
sti
mov
clc
push
shl
clc
inc
add
adc
add
sar
lods
cmp
add
push
add
pop
into
scas
mov
add
clc
ret
push
adc
add
add
jnp
ss
clc
or
pop
inc
clc
jbe
bound
add
cmc
lods
cmp
pop
stos
cmp
popf
xchg
in
punpckhbw
add
inc
add
out
or
dec
ja
clc
push
push
mov
gs
rcl
and
add
add
jns
fidivs
add
adc
add
scas
pop
add
add
add
or
push
stos
call
push
xchg
es
rolb
loop
repz
mov
test
cmp
clc
cmc
inc
add
cmp
xlat
testb
clc
ljmp
sub
clc
loope
jae
add
push
ja
fld
clc
sbb
lods
adc
xchg
mov
jg
add
fs
cmp
stc
sub
cmc
aas
stc
bound
add
std
data16
sub
add
add
push
add
in
cmp
clc
call
and
add
clc
pop
pushf
sbb
add
push
add
sbb
add
add
jns
mov
add
or
dec
xchg
jp
pushf
jns
clc
mov
xlat
inc
clc
jno
add
fisttps
jno
add
add
mov
bound
add
mov
clc
mov
cmpsb
clc
or
inc
clc
push
pop
jno
add
clc
mov
add
and
inc
add
loope
daa
clc
or
dec
push
add
jg
mov
jne
push
pop
cmp
push
add
mov
pop
xchg
jecxz
cmp
test
add
adc
add
clc
sub
push
jg
add
lock
mov
repnz
pop
int
leave
cmpsl
clc
adc
add
cmpsb
clc
stos
cmc
js
clc
bound
add
clc
insb
sub
sub
add
bound
add
stos
sahf
std
mov
sbb
clc
cmpsl
clc
inc
add
inc
clc
cmp
repnz
clc
push
add
xor
add
sbb
test
add
mov
clc
mov
in
and
lret
shlb
or
jmp
clc
loop
pusha
add
das
cmp
or
popa
add
out
push
mov
repz
mov
and
add
outsl
imul
push
and
add
push
arpl
add
add
add
dec
scas
mov
stos
sbb
stc
mov
jb
add
clc
push
add
movsb
clc
cmp
out
push
push
add
es
adc
add
clc
jmp
clc
sar
enter
std
es
pop
daa
clc
lock
add
jnp
fwait
loopne
data16
sahf
sbb
xchg
out
jo
add
add
mov
clc
adc
inc
clc
dec
mov
add
mov
dec
into
sbb
mov
sar
add
clc
test
adc
push
clc
addr16
inc
add
loope
jecxz
mov
cmpsb
clc
pop
mov
xlat
enter
add
mov
clc
inc
add
mov
or
jbe
add
sub
mov
es
push
ss
mov
ficoms
add
xlat
inc
add
lahf
mov
add
fwait
leave
adc
add
clc
mov
mov
clc
xor
add
clc
adc
add
clc
adc
add
inc
clc
push
jmp
clc
push
clc
push
or
add
notb
or
clc
xchg
sbb
mov
clc
mov
pusha
add
js
jbe
out
push
sbb
add
sti
and
add
add
push
add
inc
add
mov
add
ja
cmp
clc
movsb
clc
cmp
add
or
dec
mov
clc
add
call
add
popf
sub
ss
jne
clc
pop
je
lock
rclb
add
jmp
jno
add
psubusw
sub
add
xor
add
jne
loope
pop
mov
add
imul
sub
clc
mov
loopne
lahf
adc
xor
add
insl
data16
pop
mov
scas
mov
push
mov
jg
or
push
add
add
clc
mov
add
outsb
or
clc
mov
into
cmpsb
clc
mov
jne
lock
add
imul
push
test
clc
mov
xor
add
clc
add
sub
add
pop
push
clc
outsb
xchg
lret
imulb
jnp
nop
cmp
mov
lods
cmp
add
out
into
push
add
cmp
mov
add
jbe
sbb
adc
add
cmp
test
xchg
cltd
out
dec
insl
leave
dec
lret
cmp
sar
mov
clc
jae
add
aas
cmp
clc
decb
inc
clc
inc
add
sbb
add
pushf
sar
fists
add
lcall
mov
arpl
add
clc
xchg
aas
cmp
sub
clc
lods
inc
clc
aaa
sar
out
leave
in
in
xor
inc
clc
xabort
add
xor
add
clc
xchg
push
cmp
repnz
xchg
xchg
push
test
mov
mov
jl
add
dec
iret
inc
add
lods
je
cmp
test
clc
pop
stos
jg
push
sahf
out
mov
add
jno
add
add
mov
push
ja
push
lock
mov
jae
add
cmp
int
add
ret
clc
or
out
sar
add
loope
sar
clc
push
add
enter
add
clc
xor
add
dec
mov
clc
popa
add
cmp
add
in
add
add
clc
xor
add
or
dec
adc
add
clc
dec
cmp
add
mov
add
pop
lret
in
stos
jne
nop
pusha
add
pop
mov
test
add
xor
stos
push
add
sti
push
jecxz
mov
loop
xor
add
add
or
add
in
xabort
movsb
clc
mov
dec
push
add
call
hlt
or
cmp
ret
clc
popf
jmp
add
jb
add
clc
pop
pop
clc
mov
cmc
inc
clc
adc
xor
add
clc
adc
add
into
mov
add
rolb
add
arpl
add
repz
clc
mov
add
loope
jmp
pop
and
jecxz
pop
shr
scas
fbstp
clc
shrl
lcall
add
clc
pop
lea
add
add
xorps
clc
adc
or
clc
arpl
add
add
mov
pushf
mov
clc
outsl
cmp
mov
fisttps
push
add
loope
shrb
push
outsl
jb
add
add
jo
add
std
xchg
loope
mov
add
ds
xor
add
outsb
stos
sar
icebp
out
lea
ja
nop
icebp
dec
jle
clc
stos
in
insb
es
sub
add
cli
sub
jmp
add
sar
xchg
or
es
lahf
pop
and
add
add
outsl
xor
add
add
clc
jb
add
add
adc
add
test
stos
dec
fisubl
inc
clc
push
cmp
xchg
xchg
int
or
js
loopne
in
mov
clc
mov
mov
clc
jb
add
cmp
xchg
pop
push
push
add
lea
add
std
call
add
add
outsb
or
sbb
add
clc
sub
mov
clc
addr16
daa
clc
and
add
cltd
mov
push
add
and
add
aas
stc
into
jbe
aas
jp
xchg
clc
dec
cmc
dec
or
inc
add
loope
inc
add
icebp
icebp
in
aad
jns
clc
jmp
add
add
or
cmp
adc
add
dec
jnp
mov
fwait
cmp
clc
outsl
mov
pop
outsb
sub
clc
or
mov
clc
mov
clc
mov
and
add
clc
pushf
push
add
add
clc
lret
xchg
into
aaa
inc
clc
in
jns
clc
pop
cmp
je
cmpsl
clc
mov
push
add
scas
cli
or
clc
xabort
sub
add
add
mov
fcom
jle
pushf
lods
push
clc
xchg
xchg
or
cmp
mov
clc
mov
lods
jecxz
fwait
stos
stos
mov
ret
clc
jns
add
test
pop
add
imul
add
in
int3
pusha
add
cld
ljmp
add
add
lcall
add
insl
add
ljmp
xor
add
add
xchg
mov
add
add
in
notb
add
cmp
sub
mov
dec
pop
pop
ds
clc
jae
add
dec
iret
cmpsb
clc
mov
and
add
shlb
add
movsb
clc
push
addr16
in
scas
xlat
out
pushf
xabort
sbb
add
jecxz
jne
clc
stc
pop
mov
rcr
mov
add
xabort
pop
ljmp
push
clc
inc
clc
lret
inc
clc
test
add
jne
add
sub
add
xor
add
xchg
sbb
cmp
out
mov
add
adc
add
pop
jmp
jne
cmp
mov
mov
and
add
jno
add
mov
or
push
add
lods
cwtl
push
xchg
mov
xor
loopne
pop
clc
mov
add
or
or
ret
clc
arpl
add
clc
das
ljmp
sbb
lret
pushl
or
push
add
or
clc
lea
or
push
add
mov
clc
sub
clc
sub
test
clc
mov
clc
push
lret
out
push
dec
xchg
sarl
mov
movsl
clc
js
ret
clc
xchg
sub
add
push
add
add
arpl
add
or
cltd
mov
add
cmp
adc
imul
clc
call
add
stos
pop
aaa
pop
fildll
roll
fldt
cmp
clc
fdivr
lods
fstpl
xor
add
fisttpll
xchg
push
sub
sbb
clc
jno
add
in
cld
add
add
add
xchg
add
add
sub
xor
add
cmp
stc
lea
cmpsl
clc
hlt
outsb
ret
clc
call
xor
nop
ds
cmp
add
add
add
test
mov
clc
fcmovbe
push
sbb
sbb
fs
in
test
mov
imul
lock
icebp
mov
imul
sbb
shrb
aaa
or
add
push
add
cmpsb
clc
pop
clc
mov
add
mov
add
clc
scas
fidivrs
add
in
and
inc
clc
xchg
loopne
inc
add
dec
xlat
lar
add
or
add
cmp
lods
loop
mov
clc
cmpsb
clc
aad
clc
loopne
mov
out
mov
add
add
arpl
add
jle
and
add
add
das
mov
add
add
mov
add
mov
sub
ljmp
push
add
pop
adc
add
clc
and
add
push
jae
add
fimuls
jl
sbb
add
insl
sub
mov
pop
mov
mov
testl
add
add
add
cmp
xor
add
fldcw
ror
stos
nop
test
cmp
sbb
clc
mov
mov
arpl
add
push
pop
jg
inc
clc
pushf
mov
cmp
mov
clc
lock
fbstp
gs
xabort
sub
add
fldenv
add
xchg
mov
repnz
add
ss
and
add
mov
clc
ds
mov
jl
test
xchg
adc
add
in
int
pop
pop
clc
sub
ljmp
xbegin
or
add
mov
lods
push
add
xor
inc
clc
sub
clc
mov
pop
lahf
idivl
add
add
add
cmp
clc
and
jns
add
ret
clc
adc
add
or
add
lea
add
loopne
aad
lcall
pop
sbb
push
pop
leave
mov
imul
sbb
imul
add
add
cmp
jne
stc
out
loope
or
fs
cmp
lods
cmp
add
sub
xor
add
inc
clc
cmp
xchg
aaa
fimull
add
xchg
mov
pop
xchg
cmp
inc
clc
ret
clc
ja
mul
clc
std
lods
inc
clc
movsb
clc
jae
add
mov
pop
cmp
add
mov
insl
mov
clc
mov
add
mov
jae
add
out
test
push
call
dec
sbb
xor
add
jns
jp
add
cmp
push
cltd
xor
add
clc
mov
mov
mov
loopne
hlt
xchg
jp
repz
add
lea
add
pop
fists
add
int3
pop
cmpsb
clc
clc
push
xchg
sbb
add
add
add
pop
clc
dec
push
rcr
scas
loope
shlb
cld
popa
add
test
test
clc
mov
outsl
xor
into
pop
sub
clc
into
ret
clc
jmp
and
add
int3
shl
clc
or
add
jmp
add
scas
push
jle
add
pop
test
mov
add
js
cltd
lret
inc
clc
fcmovu
fstpl
movsl
clc
cmpsl
clc
js
clc
pushl
adc
sar
out
test
or
clc
xabort
xchg
xchg
cmp
test
cltd
and
add
pop
hlt
mov
push
sti
dec
in
cmp
jne
cmp
push
mov
xor
add
adc
clc
jns
xor
add
clc
mov
insb
dec
lret
add
mov
mov
mov
cli
xor
add
fisubrs
lcall
add
ret
icebp
test
sar
sbb
icebp
popa
add
out
mov
nop
pop
in
cwtl
outsb
add
add
sub
add
pop
mov
cli
mov
fistps
scas
fs
imul
clc
fwait
cmp
scas
gs
cmpsb
clc
mov
add
add
test
icebp
sub
scas
dec
mov
add
nop
shl
clc
push
pusha
add
mov
jmp
or
mov
clc
gs
pop
roll
nop
aaa
push
leave
or
or
push
in
push
add
mov
xchg
fs
cli
lahf
pop
imul
clc
sub
jno
add
pop
xchg
mov
or
data16
cmp
add
add
push
iret
jnp
add
aas
lret
addr16
jne
fbstp
add
mov
add
inc
clc
fcmovne
rclb
fs
je
or
dec
ss
out
or
add
pop
arpl
add
add
add
add
ja
clc
mov
xchg
jb
add
dec
jnp
clc
add
sbb
add
dec
out
test
push
clc
add
add
and
add
aam
clc
push
add
lea
add
test
and
mov
movsb
clc
loopne
jbe
cmp
outsl
stc
cmc
xchg
cli
add
add
add
lock
fists
push
dec
mov
xbegin
push
add
dec
addr16
jae
add
in
adc
add
push
pop
into
mov
add
push
mov
clc
adc
add
mov
stos
cmp
fcmovne
mov
stos
mov
dec
mov
mov
lea
pop
jae
add
jle
test
fsub
clc
es
xor
gs
sub
jne
clc
mulb
pusha
add
adc
addr16
aas
mov
add
ror
cld
pop
jmp
loope
insl
adc
add
clc
adc
add
jmp
pop
clc
data16
gs
enter
push
xor
sbb
add
and
clc
mov
push
mov
jbe
in
mov
fsubp
clc
adc
add
imul
pop
fdivrp
iret
mov
std
jbe
je
clc
mov
add
cmp
add
add
pop
sub
add
int3
cwtl
jnp
into
mov
clc
fs
inc
clc
fdivs
add
scas
jecxz
addr16
mov
dec
xchg
mov
roll
or
mov
add
lods
insb
xor
add
stc
cmp
xlat
mov
mov
imul
scas
or
dec
xor
add
out
imul
add
add
ljmp
clc
inc
clc
push
add
data16
add
pusha
add
jno
add
clc
imul
arpl
add
xchg
push
add
repnz
adc
add
insb
mov
mov
add
add
clc
xor
lcall
lahf
clc
push
push
jnp
jge
add
add
and
add
add
add
add
add
pop
popl
and
dec
mov
add
mov
clc
xor
add
popa
add
fimuls
cmp
mov
xchg
loope
mov
fs
mov
clc
loope
fwait
in
roll
mov
clc
enter
fildl
fwait
push
es
mov
clc
push
stos
jmp
clc
dec
pop
xchg
test
clc
and
add
fnstsw
clc
pop
dec
scas
push
ss
clc
incb
jb
add
lods
pop
das
jg
mov
clc
imul
fs
sar
add
mov
clc
pushf
pop
mov
lcall
inc
clc
sar
add
pop
add
add
add
repz
add
dec
rcpps
add
std
add
add
lcall
xchg
aaa
push
sbb
or
push
push
leave
sbb
sahf
mov
clc
mov
dec
lods
add
jae
add
nop
cmp
sub
dec
and
iret
pop
add
mov
data16
sbb
and
add
mov
push
sti
pop
fadd
clc
dec
mov
addr16
and
sbb
loopne
aam
sub
stos
sub
cmp
imul
and
add
syscall
clc
xchg
adc
add
dec
adc
add
or
mov
clc
mov
outsb
push
add
lods
inc
add
inc
clc
test
ljmp
add
sbb
stos
fistl
ret
clc
mov
sub
add
stc
aas
pop
jb
add
jne
fidivrs
push
lea
sarb
mov
mov
dec
mov
clc
jb
add
add
clc
loope
add
pop
dec
cmp
add
pusha
add
add
push
jl
sub
cmpsl
clc
jae
add
push
jne
clc
lcall
cmpsl
clc
dec
xor
add
and
add
in
repnz
rorl
fnstcw
clc
inc
clc
mull
aaa
cmp
clc
dec
jge
das
repz
add
pop
clc
loopne
add
add
mov
lods
in
xabort
imul
clc
and
inc
clc
xchg
or
xchg
ret
mov
in
and
sbb
add
aas
xor
add
movsb
clc
xor
add
cmp
clc
mov
add
in
int3
popf
mov
add
add
aad
out
bound
add
bswap
scas
xor
clc
icebp
adc
add
addr16
adc
add
clc
clc
pop
clc
mov
pop
ret
clc
mov
lock
sbb
adc
add
add
ret
clc
gs
in
and
mov
push
add
jne
add
insl
and
add
xabort
adc
add
add
clc
lea
lret
dec
cmp
cwtl
dec
dec
push
fs
pop
call
fs
mov
clc
push
jmp
loopne
pop
minps
sbb
fdivp
or
clc
std
push
add
lods
sar
add
dec
inc
clc
popf
jnp
repz
clc
in
inc
clc
shll
add
es
lods
popa
add
sub
icebp
rcrl
scas
jg
mov
xchg
push
stos
push
cli
xchg
mov
mov
cli
pop
or
inc
clc
mov
fwait
test
movsb
clc
xlat
mov
je
and
add
ret
clc
aaa
mov
pop
clc
cmp
clc
lods
sbb
add
imul
clc
mov
bound
add
dec
pop
clc
loop
jge
clc
mov
addr16
lods
mov
sub
mov
add
fstpt
rcl
es
fs
xchg
cmp
movhps
add
dec
xchg
push
push
jbe
out
popf
rep
outsb
xor
add
cmp
add
fwait
push
clc
adc
xchg
jle
cli
inc
clc
or
ja
add
xchg
jmp
add
sbb
xlat
sar
inc
add
cmp
loop
mov
clc
ds
lea
lea
add
add
inc
clc
xchg
mov
mov
add
cmp
hlt
sub
add
sub
add
jnp
bound
add
xchg
fildl
xor
add
ljmp
push
cmc
mov
mov
xchg
int
add
adc
add
or
pop
daa
clc
add
jmp
dec
xor
add
clc
push
clc
sub
dec
test
push
add
mov
push
imul
adc
add
push
dec
movsb
clc
roll
add
dec
sub
mov
insl
and
add
sub
mov
inc
clc
ss
xchg
cmp
lret
popa
add
sti
sbb
pop
lcall
xchg
outsl
notl
insl
cmp
dec
lea
rcll
add
pop
clc
aaa
movsb
clc
mov
cld
cwtl
lret
test
lcall
add
test
clc
ja
clc
gs
in
dec
push
addr16
mov
call
add
clc
sub
clc
cmpsl
clc
mov
frstor
fiaddl
aas
xor
add
fimull
cmovp
clc
imul
jle
add
mov
fidivrl
clc
sub
fildll
jle
add
insl
dec
pop
clc
adc
add
pop
ljmp
add
add
popf
pop
clc
fcoml
add
dec
mov
xchg
push
add
sbb
add
das
xor
add
mov
mov
cmp
cmpsl
clc
and
add
add
pop
popf
sub
mov
sub
and
inc
clc
pusha
add
cmp
mov
add
or
add
shl
clc
nop
repz
add
sbb
inc
add
dec
test
hlt
mov
clc
fisubrs
add
sbb
clc
in
push
jae
add
clc
adc
add
add
pop
mov
shl
clc
jns
add
mov
fxch
jns
xabort
add
mov
clc
scas
mov
hlt
mov
dec
cli
test
in
mov
clc
stc
aas
jo
add
cmpsl
clc
leave
xchg
push
add
and
add
add
lock
clc
fsubrl
iret
and
movsl
clc
in
scas
mov
test
lods
fs
bound
add
adc
clc
mov
clc
nop
fists
out
inc
add
psubq
mov
clc
mov
insb
in
sbb
mov
add
add
add
iret
mov
inc
add
xor
call
cltd
sub
loope
jo
add
push
es
jae
add
add
jne
add
lret
cltd
out
fwait
cli
movsb
clc
pop
roll
clc
add
add
push
add
aad
clc
cmp
clc
dec
int
xchg
ss
repz
push
test
nop
jne
jp
or
jge
jmp
add
pop
fnstenv
out
inc
add
dec
addr16
lods
add
cli
lock
push
fisubrs
ljmp
ja
leave
pop
scas
stc
mov
lret
mov
stc
cwtl
or
movsb
clc
pop
mov
adc
add
std
call
clc
dec
jns
sbb
pop
push
cltd
es
sub
mov
dec
iret
ss
xlat
lock
lret
mov
xchg
in
pop
clc
or
mov
jo
add
jb
add
lahf
sub
std
insb
xchg
mov
clc
cmp
add
arpl
add
add
add
push
testl
add
clc
mov
clc
mov
push
in
push
add
inc
add
sub
add
xabort
or
in
pop
or
out
mov
mulb
lods
cltd
dec
xbegin
addr16
add
add
clc
out
sub
add
cmp
insl
stc
sub
pop
clc
xor
mov
sub
pop
clc
add
add
clc
jp
aam
ds
mov
add
add
pop
dec
inc
add
cmp
xchg
or
and
add
add
and
ffree
clc
push
clc
or
fistl
xchg
imul
cmp
lock
xchg
jl
scas
and
add
push
inc
add
aam
lret
pop
sub
clc
add
add
xor
add
mov
fs
repz
loop
add
cmc
push
in
arpl
add
push
das
fs
hlt
and
add
add
clc
push
mov
popa
add
cmp
sbb
das
in
mov
ficoms
xor
clc
insl
pop
fyl2xp1
sub
outsl
testl
sub
out
xbegin
clc
mov
clc
lahf
lahf
push
add
add
rorb
mov
add
ret
jecxz
mov
push
cld
aam
sbb
jecxz
sahf
sub
clc
cmp
xchg
insb
mov
ret
clc
and
add
clc
ja
add
add
or
sbb
clc
mov
xlat
dec
ret
clc
mov
stos
cld
sub
cmpsl
clc
pop
dec
stos
out
daa
clc
stc
fiaddl
sbb
sbb
clc
dec
push
lods
add
rorb
add
jl
imul
add
test
cmp
mov
xor
xor
add
cmp
fidivrs
clc
mov
pop
inc
add
sub
xchg
push
jae
add
jno
add
push
add
in
xchg
ss
lods
sub
clc
sar
clc
add
add
in
insb
jg
add
sar
jg
add
ret
clc
fstpl
hlt
mov
cmp
mov
mov
xbegin
cmp
push
inc
add
push
clc
cld
in
test
rcll
add
iret
fcoml
add
cmpsb
clc
lods
test
add
add
clc
xchg
pop
push
add
adc
add
lret
fs
lcall
lahf
or
mov
push
add
jno
add
clc
inc
add
sbb
dec
cmp
ret
cmp
add
mov
push
stos
cmpsl
clc
ja
stc
data16
inc
add
loop
sub
mov
int3
lahf
pop
push
add
dec
aaa
out
cmp
and
add
mov
fs
fucomip
sub
pop
sub
add
mov
popl
add
add
add
std
and
repz
clc
fwait
push
add
or
or
out
das
icebp
xchg
ret
clc
xchg
sub
add
add
clc
mov
mov
jg
into
es
mov
mov
ljmp
xchg
mov
clc
add
clc
add
add
xor
add
add
jl
mov
clc
cmpsb
clc
push
add
bnd
cmp
or
jp
clc
and
add
xor
add
aad
and
add
xchg
mov
mov
sbb
rdtsc
add
lret
adc
add
jl
js
add
add
push
add
scas
mov
cmp
or
inc
add
push
pop
jo
add
add
in
pop
jl
or
add
cmp
add
or
add
data16
and
or
mov
clc
or
sub
imul
add
clc
mov
mov
jb
add
dec
inc
add
lret
std
jno
add
fstl
inc
clc
fwait
xchg
popf
lea
mov
mov
fsubrs
leave
fbld
add
ja
clc
pop
mov
mov
xchg
mov
cmp
jmp
lahf
ret
clc
dec
test
ss
jg
negl
jg
xor
imul
jle
sub
add
inc
add
mov
sub
clc
xor
add
and
cmpsb
clc
cwtl
mov
jbe,pn
xor
add
sahf
or
out
cmpsl
clc
test
mov
add
loop
cmp
out
xor
add
add
mov
clc
out
mov
add
jnp
clc
outsb
inc
add
stos
pop
nop
lea
add
aad
add
cmpsl
clc
repnz
xbegin
dec
pushl
xor
add
hlt
push
cmp
clc
fiaddl
mov
mov
dec
arpl
add
add
in
ja
cmp
pop
xor
add
or
hlt
jnp
push
add
ret
clc
push
clc
mov
clc
xor
mov
out
pop
push
pop
clc
xchg
push
jg
mov
hlt
daa
clc
xchg
sbb
das
and
add
leave
dec
lahf
fisubl
add
movsb
clc
jb
add
add
lcall
cmp
cmc
fcoml
nop
or
pop
mov
inc
add
into
sbb
insb
xor
add
aad
and
add
fcoml
pop
out
lret
cmovl
add
add
clc
cmpsb
clc
clc
mov
xchg
pop
in
xabort
add
test
inc
add
das
or
sub
add
shrl
dec
aaa
or
fistpll
nop
mov
lea
add
clc
enter
dec
pop
push
add
mov
add
add
js
loope
xor
add
add
add
xor
add
jecxz
aaa
icebp
jnp
add
lret
aam
add
dec
stc
daa
clc
dec
mov
sub
jmp
imul
add
mov
out
lret
clc
out
or
es
int3
iret
outsl
pop
push
fstps
push
ja,pt
je
add
cmp
test
xor
add
sub
daa
clc
mov
clc
xchg
call
add
pop
cmp
dec
add
jae
add
dec
test
push
popf
test
jmp
add
lahf
dec
xchg
addr16
push
add
pop
mov
clc
es
out
int
lods
push
sbb
add
insb
dec
cs
add
add
int3
insl
mov
lret
add
jmp
scas
xbegin
xchg
xor
add
dec
jbe
clc
mov
sahf
push
lods
sub
inc
add
in
xbegin
roll
add
push
add
sar
in
loope
or
lods
push
add
imul
dec
fcomp
repz
add
mov
or
add
out
aad
clc
pop
or
clc
add
add
mov
add
movsb
clc
sbb
int3
cltd
add
mov
clc
std
test
adc
add
or
add
mov
jmp
add
xchg
roll
loop
loop
loope
hlt
fidivrl
jecxz
in
out
adc
add
lahf
mov
test
add
add
mov
add
std
jns
mov
inc
add
mov
jle
sbb
push
add
lcall
loopne
xchg
dec
xchg
cmpsb
clc
mov
clc
add
inc
clc
pop
aas
push
add
out
aas
mov
clc
inc
add
mov
pushl
add
jnp
xabort
ret
dec
idivl
jns
clc
pop
leave
aad
ja
mul
clc
mov
pusha
add
jnp
clc
incb
clc
push
mov
pop
in
loope
call
dec
in
add
add
add
xor
add
in
cmp
add
and
aas
cmc
lahf
pushf
mov
add
shll
clc
leave
xchg
ds
or
sub
push
clc
insl
sar
add
lods
inc
clc
xchg
mov
cmc
mov
cmp
jp
dec
adc
add
push
lahf
cli
cld
mov
call
clc
mov
cmp
add
dec
rclb
das
adc
add
test
xbegin
or
push
add
mov
add
xor
add
imul
clc
jl
add
movsb
clc
xchg
fnsave
add
mov
clc
outsb
add
add
clc
or
jbe
mov
cmp
jae
add
add
add
cltd
das
add
add
clc
data16
push
push
adc
add
clc
iret
lahf
xor
add
outsl
push
push
sar
insb
call
xchg
pop
push
add
pop
mov
or
mov
clc
fs
fs
mov
add
dec
ja
push
pushf
movsb
clc
aad
push
add
pop
pop
aas
ds
add
hlt
addr16
mov
lods
xor
add
push
clc
inc
add
sub
enter
aad
add
cmp
add
inc
add
mov
std
js
add
loopne
mov
clc
pop
in
fs
pop
mov
clc
xlat
mov
aas
enter
add
sbb
lcall
data16
mov
add
add
test
clc
xchg
dec
mov
sub
fprem
xchg
mov
fadds
add
push
clc
testb
mov
clc
push
add
sub
mov
clc
mov
xchg
jb
add
clc
push
add
jl
mov
add
shlb
add
add
cmp
clc
mov
xchg
cmp
pusha
add
inc
add
dec
fisttpll
mov
add
mov
add
lock
add
clc
cmp
add
add
add
add
add
testb
sbb
clc
addr16
cwtl
push
test
je
sar
add
aad
inc
clc
faddp
clc
push
out
iret
sub
leave
rolb
add
stos
mov
outsl
lods
data16
mov
faddl
into
dec
rclb
clc
clc
scas
inc
clc
inc
clc
pop
pop
data16
cmp
clc
inc
clc
mov
cmc
mov
clc
push
pusha
add
xchg
hlt
gs
adc
add
pop
ret
clc
test
xchg
insb
icebp
std
and
add
clc
xbegin
jp
in
cmp
pushf
into
pop
jb
add
es
inc
add
cmp
ret
clc
iret
ret
clc
mov
add
mov
add
add
fwait
lret
mov
ja
rcrb
mov
sub
jae
add
sub
jnp
popa
add
xor
rorb
es
shll
push
add
push
add
sbb
xor
add
mov
sub
clc
mov
rorl
add
add
cs
mov
clc
popf
xor
jp
pop
inc
clc
shr
fdivl
add
mov
cmp
add
add
jne
push
add
ljmp
scas
pop
xor
mov
add
add
add
inc
clc
stos
bound
add
insl
mov
add
mov
nop
stos
insl
cmp
sub
add
add
mov
add
cld
scas
fcoms
add
clc
fcmovnbe
cmp
clc
cmpsl
clc
es
ss
aam
cmp
jb
add
lcall
xor
xchg
or
repnz
lcall
jae
add
xchg
pop
stc
fs
or
add
mov
clc
jne
cmp
clc
dec
sti
je
jp
enter
inc
clc
cwtl
fisttpl
cmp
add
adc
add
clc
addr16
imul
mov
and
add
pop
sti
xchg
addr16
cmp
clc
mov
push
aaa
test
add
int3
mov
sub
pushl
add
or
jbe,pt
clc
or
hlt
xor
add
add
sbb
cmp
sub
add
pop
ret
adc
add
push
xor
add
add
cwtl
mov
clc
aad
fwait
mov
ret
clc
call
pop
add
add
clc
rolb
sahf
xchg
and
in
xlat
cmc
push
xchg
jo
add
clc
imul
in
mov
add
xchg
pop
and
add
and
mov
cmp
add
mov
mov
mov
clc
jmp
imul
xchg
ljmp
jne
lcall
and
add
cmp
cmp
lcall
xchg
or
sbb
add
add
clc
pushl
add
aas
cmp
clc
inc
add
sub
add
add
lret
pop
push
out
pop
clc
sbb
popl
clc
call
add
dec
ficompl
adc
add
push
je,pt
aam
enter
mov
xchg
enter
bound
add
add
add
sbb
clc
inc
clc
dec
pop
dec
cmp
xchg
incb
cmp
ficomps
clc
xchg
xchg
jecxz
aaa
es
mov
test
or
clc
push
add
xor
aad
xor
add
clc
movsl
clc
cmp
dec
jp
add
add
pop
dec
cmp
add
imul
xbegin
add
add
mov
jae
add
clc
xchg
push
add
out
addr16
cmp
clc
into
insl
sbb
out
repz
add
das
xchg
sar
clc
movsl
clc
lret
inc
clc
fs
hlt
push
mov
clc
test
cmpsb
clc
test
insl
lcall
pop
mov
mov
or
rcrl
lret
scas
xor
add
mov
fistl
add
cmpsl
clc
leave
or
scas
or
clc
clc
sbb
clc
sar
clc
adc
add
add
movsb
clc
cmp
add
mov
clc
je
ds
push
cmp
clc
js
add
inc
clc
ret
clc
hlt
leave
outsl
js
sbb
add
sbb
hlt
lods
push
clc
int3
xchg
shr
adc
add
add
je
sahf
mov
or
clc
push
xchg
movsl
clc
xor
cmp
add
pop
ficoml
add
test
es
mov
add
add
sbb
jl
pop
pop
loope
out
loope
lret
add
jg
popf
rorb
sbb
add
cli
dec
jno
add
add
lcall
stos
js
pop
clc
inc
clc
call
jb
add
sbb
out
mov
lock
add
test
adc
test
clc
data16
cltd
shll
clc
or
fisttpl
add
push
add
ja
add
sbb
clc
jns
add
out
jae
add
add
ja
mov
push
add
dec
jl
adc
cmp
add
cmp
test
sti
sar
clc
hlt
sbb
icebp
ja
sar
clc
xchg
jnp
sbb
clc
jmp
add
clc
cmpsb
clc
and
xchg
bound
add
mov
clc
pop
lea
gs
enter
lcall
clc
xor
push
add
mov
ljmp
sub
clc
sar
ret
clc
push
mov
ficoms
and
add
sahf
sbb
clc
frstor
clc
popa
add
pop
mov
clc
fisubl
or
mov
add
inc
add
int3
mov
add
sub
mov
cmp
sbb
add
lret
add
cld
stos
in
movsb
clc
ja
cltd
sub
add
xor
lock
add
cmp
pop
ret
clc
je
cmp
sbb
jbe
cmp
add
xchg
jns
clc
add
add
clc
cmp
clc
cmp
mov
sahf
in
dec
jmp
mov
popf
mov
sbb
clc
xchg
fisubl
add
inc
add
lret
add
sbb
xor
add
xlat
movsb
clc
sbb
sbb
shlb
dec
dec
mov
shlb
sahf
into
aas
mov
xchg
imul
add
add
add
xchg
pop
rcr
jle
sbb
es
int
xor
add
xchg
xchg
daa
clc
inc
add
leave
inc
clc
fdivrp
push
add
out
cmp
outsl
jle
jnp
jne
sti
or
in
cwtl
inc
clc
mov
test
mov
std
pop
scas
inc
clc
loop
pop
add
movsl
clc
ljmp
add
and
out
arpl
add
repnz
mov
mov
mov
pop
js
inc
clc
and
add
add
pop
repz
cmp
or
clc
enter
jno
add
scas
mov
outsb
mov
clc
fisubrl
add
or
imul
mov
clc
push
xchg
and
mov
mov
clc
dec
popa
add
add
add
cltd
ljmp
ficoms
add
out
leave
cltd
mov
add
add
xlat
clc
fcoms
add
add
loope
pop
movsl
clc
rcrl
add
mov
sub
add
lea
add
scas
ljmp
push
add
pop
fildll
dec
into
mov
fstps
add
sub
test
xchg
cwtl
inc
clc
inc
clc
insb
dec
sbb
add
and
add
es
push
add
out
cmp
daa
clc
adc
jmp
mov
add
add
clc
gs
js
add
sti
inc
clc
lods
xabort
clc
cli
cmp
test
nop
mov
add
jae
add
dec
jle
xchg
ja
clc
adc
add
add
fisttpl
movsb
clc
ss
jnp
clc
int3
int
and
add
clc
data16
jo
add
sbb
add
outsb
loope
daa
clc
push
cmp
rorb
dec
or
mov
adc
add
clc
xbegin
cld
ret
clc
push
add
or
adc
add
add
out
cld
out
cmc
lahf
cli
sub
clc
loopne
mov
xor
add
dec
xchg
mov
inc
add
cmp
clc
adc
add
add
inc
add
sbb
add
fsubrl
mov
inc
add
mov
jno
add
jmp
and
cmp
or
mov
add
push
add
cmp
sarb
fst
mov
inc
add
mov
aas
jl
clc
adc
add
add
add
lret
adc
add
add
insb
lea
add
fs
push
adc
add
add
jp
clc
mov
add
out
sarl
fisubrl
adc
add
add
add
dec
mov
sub
mov
fcom
das
aad
add
jbe
add
shll
add
stos
das
fs
xchg
jae
add
add
clc
mov
add
xor
add
add
imull
cmc
inc
add
ss
jo
add
mov
clc
lret
adc
push
clc
mov
add
mulb
sar
idiv
xchg
in
mov
out
jp
mov
dec
cmpsb
clc
shll
dec
or
add
sbb
inc
add
cmp
sar
cltd
test
outsl
and
add
add
js
imul
jbe
add
sti
cmp
add
pop
pop
loope
out
nop
cwtl
out
xor
js
clc
push
imul
out
dec
add
add
add
add
cmc
mov
cmp
pop
jg
imul
clc
js
push
add
aam
add
aas
lahf
pop
dec
dec
mov
add
frstor
repnz
dec
popf
lret
ret
clc
or
outsb
jno
add
jp
mov
add
fisubrs
add
clc
xchg
vmovlps
add
mov
sbb
cld
cmp
clc
xchg
push
clc
and
add
fldenv
add
sbb
sar
hlt
rcll
loop
push
fists
jns
je
clc
loop
hlt
into
cmp
ja
clc
or
xchg
pop
clc
dec
add
jp
aam
dec
inc
clc
and
add
add
clc
int
int
or
clc
jl
pop
stos
cmp
clc
jnp
clc
mov
es
pop
cmp
add
adc
mov
add
mov
jne
mov
xor
add
add
dec
sbb
movsb
clc
lahf
push
cmpsl
clc
cmc
popa
add
stc
aas
dec
adc
add
das
or
jecxz
sub
cli
cmp
cmp
push
add
xchg
sbb
add
jle
out
lahf
loopne
in
flds
into
lods
jp
sbb
fsub
clc
jmp
clc
cmp
test
lods
and
xor
add
push
add
sar
clc
inc
clc
push
out
pusha
add
or
adc
add
add
pusha
add
pop
jnp
jecxz
test
clc
or
pop
nop
mov
add
sbb
fldt
clc
sub
mov
jg
add
pop
imul
daa
clc
mov
xchg
cwtl
push
clc
mov
sbb
fs
inc
clc
jmp
clc
stos
cmp
cs
sbb
add
add
or
mov
clc
stos
adc
add
cmp
in
sub
pop
pop
cmpsb
clc
inc
add
add
add
inc
add
repnz
mov
sbb
xabort
movsb
clc
pop
int3
loope
or
imul
cmp
ffree
clc
imul
inc
add
dec
push
es
scas
xbegin
pop
push
add
ret
xor
add
add
sar
jg
iret
sbb
filds
adc
add
add
aas
lret
push
clc
mov
add
pop
ficomps
ss
add
popa
add
scas
rol
clc
push
repz
icebp
sub
int3
loopne
sub
pop
jbe
stos
outsb
scas
aad
xor
add
mov
clc
xor
add
clc
cmpsl
clc
pop
int3
mov
mov
add
imul
clc
pop
pop
dec
mov
icebp
movsb
clc
adc
add
movsl
clc
xor
clc
dec
and
push
mov
inc
add
int3
repnz
mov
mov
clc
xchg
insl
adc
jle
ror
das
inc
clc
scas
add
add
testl
clc
shlb
dec
sbb
fiaddl
out
in
cli
dec
jmp
sub
add
mov
xchg
push
add
jp
add
dec
xor
cmp
or
add
xor
add
mov
inc
clc
sub
sub
add
add
dec
cmc
inc
clc
jmp
clc
clc
stos
jmp
mov
mov
rorl
pop
test
sub
stos
add
xchg
cmp
leave
outsb
inc
add
test
scas
add
mov
xchg
pop
adc
add
adc
add
imul
or
push
clc
addr16
popa
add
mov
arpl
add
lcall
add
clc
cmp
sbb
clc
adc
add
out
in
in
sbb
add
sar
idivb
loope
jge
test
repnz
pop
mov
pop
push
clc
sarb
push
add
and
add
in
stos
ds
and
out
call
shll
add
mov
clc
mov
jnp
add
sub
sahf
mov
clc
mov
jns
clc
fsts
add
push
add
clc
mov
add
clc
and
jge
insb
iret
sar
cmp
mov
xbegin
add
jno
add
dec
es
cmc
mov
jae
add
pop
xlat
and
add
clc
jnp
or
adc
add
xor
add
push
add
ss
add
pop
jae
add
add
sub
sbb
jnp
mov
cmpsl
clc
jno
add
adc
clc
cmp
add
inc
add
mov
daa
clc
into
or
inc
clc
push
add
cmpsb
clc
adc
add
dec
adc
repz
xchg
sbb
inc
add
and
add
xor
add
xor
add
inc
clc
fisttpl
nop
xabort
pop
inc
clc
into
cmp
out
push
cmp
sar
mov
mov
stos
push
push
pop
sar
xchg
bound
add
mov
mov
clc
pop
push
pop
cmp
clc
fs
notl
add
ljmp
xchg
add
add
pop
icebp
out
mov
or
clc
jecxz
lock
sbb
add
imul
sbb
clc
push
ret
clc
lahf
in
sub
sbb
add
pushf
addr16
insb
xchg
mov
dec
movsb
clc
sar
imul
clc
loope
mov
or
daa
clc
insl
jb
add
add
das
jecxz
mov
incb
add
cld
outsl
push
clc
in
mov
clc
call
xchg
mov
add
jb
add
scas
mov
loop
pushf
ret
clc
sub
clc
ret
clc
cwtl
mov
add
push
call
xchg
out
add
add
pop
stos
scas
mov
clc
sahf
xchg
mov
add
dec
loope
testb
clc
inc
add
mov
clc
stos
pusha
add
ret
iret
push
pop
adc
add
inc
clc
cmp
fcoms
cli
xbegin
xchg
adc
add
movsb
clc
adc
add
mov
pop
scas
in
daa
clc
adc
add
loop
test
pop
in
ljmp
add
lret
add
clc
stc
std
sub
add
pusha
add
add
add
add
push
inc
add
inc
add
aaa
push
clc
pop
adc
clc
mov
jbe
jae
add
clc
aas
loope
inc
clc
add
add
mov
add
fimuls
xor
lods
enter
in
out
and
add
cmpsb
clc
scas
push
out
dec
fistps
mov
clc
dec
aas
pop
sub
or
sbb
xchg
pop
dec
insl
xor
add
push
add
in
add
add
or
jo
add
mov
xor
clc
iret
cmp
mov
lret
add
clc
cmp
icebp
mov
mov
insl
pop
addr16
loope
negl
fldt
jns
add
js
clc
cmp
xor
cmp
xor
add
notl
clc
jp
sar
jae
add
dec
pop
push
add
add
cli
push
addr16
cltd
loope
es
pop
lods
cmpsl
clc
xlat
jp
xbegin
mov
mov
add
xabort
test
iret
xchg
cmp
ljmp
push
add
push
pushf
insl
aad
or
add
push
clc
push
push
add
addr16
test
clc
xchg
cltd
xchg
mov
cmp
add
ret
clc
or
stos
mov
clc
inc
add
filds
mov
je
loopne
sahf
cmp
add
rorl
xchg
push
gs
xchg
add
add
pop
add
add
clc
xor
add
xor
clc
rorl
sub
mov
es
out
in
shrb
cli
mov
clc
push
add
xor
add
clc
cmp
out
mov
add
add
add
stos
mov
add
sub
mov
clc
xor
popf
push
cmp
add
ret
add
xor
fcomi
in
cwtl
lea
add
clc
inc
add
adc
add
sub
fsubs
add
jno
add
loopne
inc
add
jecxz
push
add
in
cmpsl
clc
stos
es
std
xchg
dec
cli
push
push
add
sub
add
push
in
xor
add
in
or
shll
or
push
mov
add
mov
test
sbb
add
push
add
jno
add
clc
add
mov
inc
clc
sub
add
dec
jg
push
xchg
sar
or
cmp
fdivl
pusha
add
imul
adc
add
adc
add
shll
lods
clc
sbb
insl
rdpmc
add
ljmp
clc
out
push
bnd
pop
movsl
clc
mov
sbb
clc
addr16
repz
clc
dec
jmp
cs
ret
add
cmp
pop
sahf
xchg
or
imul
add
in
mov
lahf
rcl
adc
add
mov
add
imul
clc
xor
clc
arpl
add
cmp
jge
clc
pushf
mov
clc
dec
fs
nop
inc
clc
fdivrl
cltd
add
add
movsl
clc
cltd
dec
mov
arpl
add
clc
adc
add
in
xchg
ja
add
add
mov
and
add
add
xor
add
add
push
incl
std
call
adc
add
mov
aaa
test
sti
adc
add
clc
jmp
xchg
xor
add
repz
or
clc
inc
clc
ucomiss
sub
clc
aas
pop
cmp
clc
mov
clc
xor
add
add
add
notl
scas
dec
mov
and
add
mov
test
add
clc
and
pop
test
add
lock
xbegin
push
clc
sub
icebp
stc
sbb
add
add
add
xor
jmp
stc
sub
add
mov
dec
sbb
add
add
jge
add
je
ds
sbb
jno
add
popf
jns
addr16
and
add
clc
pushf
inc
clc
out
mov
stos
mov
clc
mov
add
dec
mov
rolb
add
stc
mov
clc
push
push
add
lahf
out
aas
lahf
ljmp
mov
xor
mov
jb
add
and
rcl
push
xor
add
clc
adc
add
clc
lret
dec
icebp
fs
xor
add
clc
add
xor
not
iret
jg
inc
clc
sub
xlat
mov
xchg
pushf
fcomp
enter
and
add
sbb
add
imull
or
ds
imul
clc
ja
in
gs
adc
add
clc
shr
outsb
add
add
jns
shlb
add
mov
rclb
add
add
movd
ja
xor
add
xor
cmp
add
ds
cmp
fs
gs
jb
add
pop
nop
add
add
or
pop
sbb
pop
mov
js
add
cmp
clc
testl
mov
clc
shll
loopne
rclb
add
clc
fistpll
or
push
inc
add
add
add
add
pop
or
xbegin
push
push
or
xlat
mov
or
add
xor
add
pop
push
loop
das
mov
clc
cmp
clc
cmp
clc
aas
test
pop
in
outsl
sbb
clc
out
sar
ja
adc
add
out
lea
in
xlat
xor
add
add
push
add
imul
or
inc
add
push
sarl
jg
add
lods
xchg
push
pop
cmp
cmpsb
clc
mov
clc
or
xchg
sub
inc
clc
shll
add
xor
add
clc
pusha
add
jg
push
clc
dec
test
push
add
shrb
cld
mov
shrl
stos
lahf
mov
clc
lea
out
aad
jg
mov
cmp
add
xor
mov
add
fcmovnbe
sahf
addr16
out
movsl
clc
adc
add
or
clc
gs
jp
clc
jmp
add
inc
add
ds
clc
das
pop
repnz
clc
add
add
add
mov
icebp
int
adc
add
sub
stc
mov
xchg
out
or
pop
lcall
sar
clc
lods
mov
add
add
cmp
clc
repz
push
clc
dec
fdivl
push
ja
clc
sub
add
decl
add
xor
mov
clc
sar
clc
push
mov
out
inc
add
vmovlps
add
clc
sar
fs
icebp
fmull
xabort
pop
xor
add
fsubs
lea
scas
out
bound
add
clc
push
add
jl
fs
mov
add
clc
lahf
add
add
or
clc
clc
pop
cmp
add
mov
ljmp
loopne
in
out
daa
clc
ja
clc
leave
mov
mov
add
cmp
dec
je
pop
clc
insl
jmp
push
add
jns
ja
sbb
cmp
out
mov
insb
in
iret
insl
jbe
mov
add
xlat
hlt
adc
add
es
cmp
or
add
stos
pop
cmp
clc
xor
add
lahf
div
jbe
mov
fldcw
cmp
add
test
lock
scas
and
add
ret
cmp
add
and
add
add
xchg
add
add
lret
insb
lock
sub
add
inc
clc
pop
test
clc
inc
clc
xchg
sub
add
ror
aad
sbb
xbegin
add
pop
clc
outsb
movsl
clc
xchg
stos
lods
adc
add
ljmp
adc
add
add
clc
inc
add
lahf
pop
mov
jp
add
pop
add
add
or
add
add
clc
cmp
cmpsb
clc
addr16
adc
add
cmp
add
ss
clc
xabort
cmpsl
clc
clc
mov
xchg
xor
add
adc
add
clc
mov
mov
in
mov
lea
add
nop
mov
fiadds
add
add
clc
int3
xchg
cmpsl
clc
xlat
sti
dec
jbe
mov
clc
cmpsb
clc
movsb
clc
lock
movsl
clc
das
xchg
aaa
or
clc
lods
mov
clc
mov
add
leave
mov
clc
call
neg
or
clc
pop
adc
add
mov
dec
jg
aam
add
add
add
loop
cmpsl
clc
frstor
sub
mov
add
add
repnz
pop
std
dec
scas
mov
mov
cltd
mov
clc
gs
xchg
sbb
int
add
mov
add
mov
aaa
pop
xchg
addr16
xor
push
pop
cmp
jns
pop
xor
add
js
je
clc
aaa
cmp
add
out
mov
lret
fsubrs
testb
dec
xor
popf
pop
or
add
out
xor
clc
out
out
cli
cmp
sub
inc
add
cmpsl
clc
inc
add
add
add
jnp
add
test
clc
fwait
or
lods
pop
xchg
enter
add
cli
sub
sbb
insl
fisubrs
xchg
xor
add
sar
mov
push
jle
mov
mov
bound
add
int3
test
add
sbb
jo
add
out
mov
mov
jno
add
sgdtl
add
cmpsb
clc
dec
in
nop
scas
mov
outsb
lcall
scas
cmp
add
iret
mov
in
push
clc
and
adc
add
adc
add
hlt
adc
add
out
jp
clc
aad
clc
cmp
clc
cmp
mov
add
dec
fcompl
and
add
clc
sub
clc
bswap
push
push
mov
mov
test
popa
add
add
ja
jp
clc
mov
je
fs
mov
ret
sub
clc
and
out
jg
add
add
ds
lret
mov
sub
cli
mov
hlt
stos
aaa
enter
jb
add
jecxz
popa
add
xor
add
fsubl
and
push
and
add
cmpsb
clc
jo
add
add
add
jmp
add
movsb
clc
sahf
jo
add
mov
cmpsl
clc
in
shr
xchg
or
clc
mov
add
and
add
cli
mov
mov
sbb
clc
pusha
add
fst
push
add
cmp
inc
clc
xlat
cld
mov
jge
dec
addr16
mov
add
cmp
sbb
push
push
test
jge
loope
xchg
mov
sbb
clc
insl
es
mov
in
rclb
add
mov
fisubrs
int
dec
into
or
add
mov
loop
dec
dec
cmp
leave
addr16
dec
cmp
add
or
clc
aas
fcomps
and
add
pop
xor
add
add
aaa
lcall
add
gs
mov
bound
add
jg
gs
mov
pushf
inc
add
js
or
movsb
clc
mov
add
adc
add
add
add
in
fnstenv
add
or
pop
jns
mov
xchg
clc
xchg
test
add
sbb
sbb
clc
mov
shll
add
xor
add
clc
ret
clc
dec
mov
xor
lret
mov
fists
add
repnz
clc
test
hlt
cmp
sbb
add
out
call
add
out
je
sbb
icebp
stc
xor
add
add
into
xchg
fcmovbe
in
out
adc
add
push
sar
cld
fs
pop
cmp
clc
adc
cld
scas
cs
pop
sbb
push
add
mov
add
add
stc
mov
add
pop
popl
lods
in
loope
xor
add
aad
sub
push
add
das
pop
jne
jle
clc
test
rorl
lret
mov
clc
out
xbegin
or
clc
int
clc
enter
add
movsb
clc
xlat
sub
jnp
jg
repz
cmc
leave
xchg
cmp
add
xchg
push
add
cld
push
xbegin
mov
mov
lea
inc
clc
jecxz,pn
cltd
jns
and
add
jns
test
repnz
xchg
mov
sbb
out
mov
clc
cmp
add
ljmp
cs
mov
dec
and
js
clc
enter
clc
xor
add
mov
xor
arpl
add
pop
lcall
pusha
add
mov
and
inc
add
fwait
or
add
sbb
jno,pn
add
xor
add
clc
sti
cmp
es
adc
add
or
adc
cmpsb
clc
js
sbb
xor
add
pcmpgtw
popf
rcrl
insb
test
push
add
add
add
je
push
xchg
mov
adc
lret
mov
add
xchg
xor
out
std
sub
clc
test
xbegin
clc
mov
add
out
or
xchg
cmp
cld
cmc
cmp
clc
sub
jmp
int
clc
syscall
clc
call
jmp
add
and
pusha
add
aas
dec
icebp
xchg
scas
or
push
dec
pop
ljmp
cmp
psllw
push
push
bound
add
nop
cwtl
enter
cmp
outsb
jle
push
sbb
add
xor
clc
push
add
scas
push
jmp
add
cmp
clc
pushl
cmp
mov
outsb
mov
into
das
sbb
clc
mov
push
mov
add
add
clc
bound
add
add
fs
jo
add
xchg
sbb
clc
pop
pop
adc
add
sbb
cli
in
jo
add
xbegin
clc
fstpl
add
sbb
clc
mov
clc
xchg
sbb
sar
clc
lret
add
lock
push
nop
imul
stos
fnsave
add
xchg
std
mov
clc
insl
test
or
pushf
aas
inc
add
js
clc
cld
dec
push
add
cmp
and
add
pop
sbb
clc
mov
mull
cmp
mov
add
out
pop
mov
ret
cmp
mov
sbb
stos
mov
add
dec
xbegin
mov
cmp
clc
mov
push
lahf
push
add
fwait
repnz
add
clc
mov
add
add
decl
clc
inc
clc
mov
clc
lret
mov
dec
repnz
fcmovnu
xor
add
and
hlt
mov
clc
loopne
and
add
push
clc
imul
loop
mov
rcll
mov
aam
clc
int3
jne
or
ljmp
pop
es
ljmp
add
mov
hlt
cwtl
and
mov
add
iret
js
aam
pushf
jl
pop
jno
add
add
outsb
inc
add
mov
and
add
mov
bound
add
add
test
xor
add
xchg
mov
pop
add
cmp
push
add
ret
rorb
add
jg
and
stos
cmp
clc
clc
inc
clc
xchg
push
clc
lcall
add
cmp
adc
add
sarl
clc
in
mov
out
mov
add
rep
mov
gs
lods
loopne
out
xabort
clc
iret
mov
add
adc
jne
mov
mov
add
add
mov
mov
and
add
out
fbld
add
sti
cli
dec
cs
xor
jle
test
sar
lret
movsb
clc
push
std
mov
mov
add
sbb
clc
or
clc
lret
and
add
clc
pop
push
add
cmp
cmpsb
clc
cmp
das
mov
push
add
int3
mov
mov
inc
clc
add
add
shld
clc
lahf
cltd
stos
or
sbb
dec
in
jmp
stc
sub
out
pop
sbb
or
cmp
sbb
add
add
clc
testb
das
jmp
clc
sub
jmp
clc
fmuls
stos
data16
jp
push
add
or
clc
pop
in
push
mov
clc
adc
add
clc
pop
cmp
std
adc
clc
mov
clc
addr16
pop
fisubrs
clc
mov
xor
add
test
clc
ljmp
cld
add
clc
das
pop
ljmp
lods
cmc
test
pop
inc
add
jl
enter
add
add
add
add
add
lret
add
add
jo
add
clc
cmc
mov
lock
fwait
xchg
fs
addr16
add
add
clc
test
in
cmp
notl
add
pop
cli
xchg
ljmp
add
fcmovb
clc
add
add
sahf
inc
clc
jmp
add
xchg
test
jmp
adc
add
clc
mov
xchg
xchg
stos
popl
add
push
xchg
call
add
aaa
cmpsl
clc
pop
inc
add
xbegin
cli
cmp
shlb
fs
divb
add
clc
cmc
hlt
sbb
mov
cmpsb
clc
add
add
repz
enter
clc
push
and
add
negl
xchg
je
sbb
dec
adc
add
jp
sbb
add
mov
xchg
ja
jp
pop
and
add
std
arpl
add
clc
fs
bound
add
popf
xchg
mov
pop
xor
and
clc
data16
int3
push
add
fisubs
aam
cs
sub
mov
or
xchg
mov
add
mov
mov
jb
add
sub
and
push
add
jmp
in
pop
inc
add
lret
push
int
add
mov
fmul
and
add
add
pop
sarb
add
xor
add
pop
clc
cmc
adc
clc
jno
add
mov
push
fwait
sbb
clc
test
push
notb
clc
jbe
pop
jge
clc
fidivs
add
push
add
pop
mov
or
arpl
add
pushf
clc
sahf
filds
xor
add
add
ret
clc
inc
clc
adc
add
fildll
std
mov
popa
add
lods
mov
clc
jg
jno
add
add
mov
clc
mov
clc
dec
add
add
fidivrl
daa
clc
loopne
cltd
add
add
inc
clc
ret
clc
cmp
add
and
add
mov
repnz
fcmovnbe
dec
cmp
dec
into
leave
xchg
loope
mov
mov
add
pop
fdivl
pop
aaa
hlt
or
iret
jmp
add
cmpsb
clc
ja
pusha
add
es
daa
clc
push
push
add
mov
add
push
add
std
and
add
clc
push
xchg
sbb
add
clc
jae
add
inc
clc
scas
jg
jl
clc
mov
in
pop
cmpsb
clc
jecxz
sar
pop
dec
std
inc
add
sbb
clc
or
add
xchg
add
add
xchg
ljmp
mov
add
fs
enter
cmp
push
mov
in
xchg
fstpl
add
ret
add
add
add
mov
clc
outsb
cmp
adc
add
push
test
xabort
test
rcll
cmpsl
clc
jo
add
clc
mov
add
test
jae
add
or
clc
push
dec
hlt
repnz
out
push
clc
mov
pop
sar
loop
scas
mov
clc
xor
add
xchg
dec
xchg
adc
add
bound
add
add
add
add
add
cwtl
add
movsl
clc
jne
push
add
cmp
add
mov
add
clc
pop
add
add
mov
mov
add
scas
sub
dec
mov
negb
test
fisttpl
mov
add
push
clc
cmp
add
scas
in
popf
enter
pop
and
clc
xor
add
add
loop
sub
outsl
cmove
out
lahf
test
adc
add
rcll
sub
clc
loopne
mov
clc
xchg
add
add
add
clc
sahf
push
add
push
dec
pop
lock
add
add
inc
clc
sbb
adc
add
mov
mov
lret
cmp
arpl
add
xchg
aaa
lret
mov
mov
clc
push
dec
mov
clc
ja
add
adc
add
clc
mov
movsl
clc
inc
add
push
pop
outsb
out
lahf
jle
adc
add
jo
add
clc
shl
clc
and
add
sbb
clc
mov
add
jmp
clc
push
scas
ss
cmpsb
clc
movsb
clc
inc
add
inc
clc
call
add
mov
out
rol
clc
stc
inc
clc
stos
data16
imul
mov
push
add
in
add
add
clc
bound
add
cmp
add
mov
add
sbb
loop
sub
cmpsb
clc
sbb
add
add
sbb
add
mov
add
mov
sbb
or
push
in
into
int3
insb
push
vsqrtps
add
add
inc
clc
mov
clc
and
add
or
clc
xor
add
add
lcall
mov
stc
insb
pop
push
pop
cmp
xbegin
add
add
adc
cli
mov
mov
clc
stc
test
arpl
add
add
xor
add
insb
leave
xchg
jge
clc
ljmp
ret
cmpsb
clc
fiaddl
add
rol
clc
inc
add
insl
mov
inc
add
xchg
outsl
and
add
xadd
ret
inc
add
int
clc
shlb
clc
dec
sbb
push
inc
clc
push
sar
clc
sbb
add
clc
xchg
pusha
add
and
add
sub
out
cltd
nop
ret
clc
push
add
mov
repnz
add
clc
test
xabort
xchg
push
cltd
push
mov
lods
add
add
clc
push
popa
add
pop
ret
clc
fisubrs
sub
clc
xor
add
mov
add
add
iret
icebp
mov
add
clc
add
adc
add
into
out
mov
xchg
jns
cmp
clc
inc
clc
jmp
das
aaa
jp
add
bound
add
add
movsl
clc
shl
push
add
movsb
clc
daa
clc
adc
or
xlat
aaa
dec
inc
clc
xor
add
sub
call
movsl
clc
ja
mov
inc
add
cmp
jae
add
aam
clc
lods
mov
js
sub
clc
mov
pop
mov
aaa
jl
and
mov
xor
clc
cmpsb
clc
lret
fwait
jb
add
add
ss
pop
jns
add
sub
cmpsl
clc
jmp
mov
clc
int
popa
add
dec
dec
das
iret
in
add
outsb
or
or
clc
adc
mov
clc
adc
add
repnz
add
sar
clc
and
add
call
mov
add
mov
push
add
jae
add
clc
cltd
ljmp
add
clc
jbe
sbb
clc
fdiv
jb
add
clc
adc
stos
and
xor
add
xchg
pushf
pop
and
add
push
add
stc
cltd
cmp
clc
jp
sbb
decl
or
add
xchg
cltd
push
push
add
cmp
inc
add
int
add
xchg
and
add
jne
mov
pop
leave
cmpsb
clc
or
add
into
lcall
xor
inc
clc
es
add
add
aam
add
scas
cmp
clc
repz
mov
adc
add
push
cmpsb
clc
faddp
clc
fwait
daa
clc
ret
clc
push
nop
in
mov
or
add
aas
lret
add
add
adc
add
clc
dec
in
and
add
push
clc
out
nop
js
rcrl
mov
clc
push
clc
js
pop
js
add
or
xbegin
addr16
or
xchg
lcall
xabort
clc
das
sub
sub
clc
data16
push
call
add
in
repz
mov
add
and
add
add
aas
inc
clc
mov
fs
adc
jp
into
jnp
int3
dec
mov
add
or
mov
add
xabort
in
bound
add
clc
jnp
add
call
lods
ret
clc
jl
mov
gs
dec
movsb
clc
in
icebp
stos
lcall
add
clc
rcll
add
clc
aas
clc
mov
and
add
xchg
jmp
add
cmpsb
clc
dec
or
and
add
push
clc
aad
inc
clc
ss
loope
fucomip
test
sbb
hlt
inc
clc
mov
test
add
cwtl
daa
clc
mov
inc
clc
aam
clc
lret
popa
add
cmpsb
clc
cmpsb
clc
jp
add
cmp
adc
add
pop
adc
add
add
add
pop
cmp
xchg
out
sub
sbb
adc
clc
repz
add
movsb
clc
inc
clc
aam
mov
add
outsl
sarl
xchg
insb
cmc
mov
fsts
add
iret
je
aas
arpl
add
loopne
pushf
pop
cmc
clc
std
push
add
jmp
clc
iret
mov
add
jno
add
sbb
clc
sbb
mov
add
aas
pop
sti
sub
add
xabort
pop
ror
cs
mov
clc
test
mov
testl
loopne
test
adc
clc
mov
xchg
or
mov
loop
push
add
or
or
repnz
jle
js
add
sar
clc
int
xor
add
ljmp
mov
add
dec
in
push
xor
clc
mov
adc
push
add
fldl
or
clc
das
repnz
adc
add
mov
add
add
loop
scas
cmp
pop
pop
lods
je
test
clc
mov
clc
test
mov
jb
add
add
inc
clc
testb
push
mov
adc
cmp
pop
packsswb
add
bound
add
test
in
fidivrs
ljmp
clc
imul
adc
add
add
xchg
ds
add
push
add
push
arpl
add
lock
cmp
clc
mov
clc
and
clc
fs
mov
sahf
cmpsb
clc
or
add
stc
add
add
jge
or
add
adc
add
cmp
clc
bswap
mov
dec
cmp
add
jno
add
pop
daa
clc
enter
testl
inc
clc
adc
add
testb
sarl
xbegin
add
in
lea
std
push
push
xchg
sbb
inc
add
cmp
add
mov
add
pop
insb
fstps
add
pop
clc
dec
in
ljmp
mov
mov
mov
jle
pop
cmp
clc
cmp
clc
sub
add
add
lahf
fdivl
mov
mov
add
mov
int3
mov
rcrl
add
roll
xchg
out
out
arpl
add
mov
leave
and
add
adc
add
imul
add
repnz
mov
or
vunpckhps
or
add
push
push
inc
clc
aad
ret
clc
fsubl
add
mov
add
aaa
or
add
add
mov
mov
call
add
add
cltd
fidivs
add
out
and
add
add
pop
cltd
and
add
add
add
add
add
sub
sbb
clc
insl
and
add
add
adc
add
push
cli
sub
cmp
cmc
jno
add
cs
lea
clc
cld
fs
xor
push
repnz
call
scas
rcrl
clc
cmp
add
add
add
jno
add
clc
lret
add
cmp
add
mov
add
movsb
clc
add
mov
scas
jno
add
das
xchg
scas
mov
lock
add
sbb
add
add
clc
xor
add
add
cmpsb
clc
aam
add
adc
add
add
dec
mov
mov
push
or
lcall
es
insb
push
and
add
add
idivb
sub
clc
aam
cmp
clc
jmp
jecxz
add
add
enter
clc
shll
add
bound
add
jecxz
push
add
insb
ret
mov
adc
add
clc
mov
test
xor
add
bound
add
sahf
mov
add
mov
dec
mov
jle
add
jl
mov
lock
xor
rcr
inc
add
in
cmpsb
clc
jae
add
sbb
cmpsl
clc
stos
inc
add
push
sub
cs
jno
add
shrb
lahf
aad
mov
add
adc
add
cmc
push
add
pop
clc
add
add
je
lea
add
aad
jb
add
pop
adc
add
jbe
add
stos
ss
add
push
xor
add
pop
imul
sarb
sbb
add
clc
jge
and
add
add
clc
and
add
clc
aaa
lahf
jae
add
mov
add
add
js
clc
jp
add
mov
clc
adc
add
pop
repnz
inc
clc
sbb
mov
add
mov
add
add
clc
stc
or
clc
sub
push
add
jp
dec
bsf
push
and
add
mov
cmp
out
sbb
xor
xabort
lahf
add
add
clc
clc
cs
xchg
in
cmp
xchg
fildl
add
jne
add
pop
jnp
clc
aam
push
add
fwait
add
add
cmp
lods
gs
add
add
add
sbb
jbe
pop
ret
repz
imul
and
add
inc
clc
sbb
clc
into
out
sbb
in
jle
jmp
jecxz
mov
add
push
clc
xor
add
clc
mov
or
clc
aas
sub
clc
sbb
add
or
and
add
mov
or
mov
clc
jne
jecxz
out
xabort
jle
xchg
fiaddl
jmp
cmp
clc
jl
outsl
jge
loop
stos
dec
inc
clc
dec
push
clc
mov
clc
jmp
clc
adc
enter
fdivrs
ret
clc
jp
xchg
int
out
int
jmp
out
xchg
movsb
clc
push
add
add
mov
mov
add
pop
dec
xor
test
push
add
mov
notl
add
clc
outsb
sub
popf
sti
aas
push
add
adc
clc
mov
add
pop
mov
pop
lret
insl
push
js
add
sub
clc
lret
outsl
lret
and
cltd
mov
filds
add
or
outsb
movsl
clc
xchg
js
fisttpll
clc
mov
add
mov
add
aad
lock
add
add
dec
mov
bound
add
or
clc
pop
dec
pop
ret
clc
adc
clc
push
loopne
sbb
xor
lea
clc
js
clc
mov
addr16
out
sub
clc
and
add
add
jns
clc
and
add
inc
clc
push
cmpsb
clc
test
pop
and
add
and
add
mov
clc
jae
add
dec
imul
add
fiadds
add
add
cmc
mov
cmp
add
xbegin
ja
jno
add
bound
add
clc
dec
and
add
cltd
xor
add
lock
add
sar
cmp
add
push
addr16
pushf
push
popa
add
sub
add
mov
pop
ja
jbe
xchg
bound
add
add
int3
push
push
add
popa
add
sbb
mov
cmp
xchg
sbb
lods
mov
insl
mov
adc
add
clc
xor
add
add
jl
aas
xchg
mov
popf
fnstcw
int
mov
add
add
clc
cmpsb
clc
loopne
cwtl
movsl
clc
inc
add
arpl
add
out
or
clc
stos
or
loope
xchg
mov
out
call
add
jo
add
add
js
cmp
dec
adc
clc
mov
clc
popf
test
js,pn
add
fwait
lods
mov
add
jmp
icebp
jo
add
add
imul
clc
mov
jo
add
out
stos
es
daa
clc
xor
add
add
xbegin
add
inc
add
cltd
stos
sar
clc
loopne
ds
mov
clc
ljmp
and
mov
add
add
push
pop
xor
add
cltd
icebp
cmp
in
mov
into
stos
popf
mov
sbb
clc
xchg
mov
clc
pushf
lods
imul
add
add
out
or
jle
loope
push
add
jae
add
add
fcomps
enter
xchg
add
popa
add
pop
test
int3
faddp
clc
mov
push
push
pop
bound
add
add
js
pop
sbb
sbb
pop
bnd
cmp
sti
or
xor
add
mov
add
lahf
insb
cmp
clc
mov
clc
scas
rol
clc
push
sub
xchg
cwtl
test
cmp
add
aas
adc
add
mov
and
add
add
in
sarb
add
jbe
dec
push
add
fcomp
outsl
push
add
inc
add
loopne
fs
cli
push
xchg
cmp
add
push
push
add
push
xchg
enter
sbb
fwait
mov
add
nop
out
xchg
out
shll
out
dec
sub
clc
cmp
add
clc
outsl
and
add
clc
pushf
jecxz
jmp
xchg
adc
lahf
das
jmp
inc
clc
ljmp
pop
lods
pop
bound
add
jecxz
push
clc
sti
iret
pop
xor
fsubrp
das
ljmp
std
cmp
mov
mov
mov
and
add
mov
jge
mov
cmpsl
clc
mov
pop
clc
pop
data16
mov
bound
add
xchg
aaa
inc
add
dec
imul
add
mov
add
popf
in
int
add
dec
mov
push
sbb
fadds
stc
pop
movsb
clc
mov
in
mov
cmp
add
es
or
daa
clc
xor
jo
add
add
fildl
xchg
xor
sar
add
sbb
pop
sbb
add
out
dec
dec
and
rorb
add
mov
clc
es
fxch
jnp
push
or
getsec
dec
pop
jmp
xchg
fisubl
clc
imul
loopne
int3
mov
add
adc
add
xchg
push
xchg
in
pop
dec
add
add
clc
inc
clc
jns
clc
xchg
mov
test
adc
add
jl
pusha
add
movsb
clc
sbb
jl
in
or
clc
insb
call
add
das
push
add
or
or
push
add
mov
jmp
xor
dec
sbb
cmp
clc
gs
dec
jno
add
sub
pop
fsubs
add
je
xchg
clc
sub
clc
and
aam
jnp
mov
clc
imul
clc
cmp
clc
fdivrl
sub
repz
add
xchg
pop
loopne
dec
xor
add
add
mov
cmp
add
vmovntps
mov
out
lods
jg
add
mov
add
add
mov
dec
cwtl
sub
fsubr
pop
or
and
outsb
aaa
inc
clc
enter
add
or
clc
mov
dec
cmp
clc
adc
add
clc
in
testb
popf
push
add
mov
sbb
jo
add
hlt
push
add
mov
insb
pop
xchg
xchg
es
cmpsb
clc
mov
add
jb
add
insb
and
cld
fimuls
xor
add
ss
clc
arpl
add
imul
shlb
mov
clc
cmp
sti
mov
clc
inc
clc
cmovl
fstl
add
add
in
push
aad
sbb
clc
xchg
xchg
cmp
mov
cmp
add
jmp
push
add
jecxz
sub
add
ss
clc
and
adc
add
mov
add
push
add
add
data16
pop
sar
inc
clc
xchg
outsb
pmaddwd
sbb
clc
mov
into
lods
cmp
push
add
push
add
xor
add
or
scas
mov
and
add
add
nop
sbb
clc
fwait
sar
or
jno
add
or
clc
or
sub
cli
mov
sub
add
cmp
outsl
jge
loop
push
or
add
and
js
pop
and
repz
add
repz
sub
or
movsb
clc
mov
dec
in
dec
push
insl
stos
push
aad
clc
sbb
loop
xor
add
sahf
clc
into
mov
inc
add
jmp
clc
adc
add
cmpsb
clc
push
cmpsl
clc
lcall
cmc
daa
clc
cmc
xchg
add
add
add
aam
cmp
mov
add
and
add
aas
outsl
sub
add
pop
popa
add
xor
outsl
into
xchg
daa
clc
imul
ljmp
clc
stos
gs
adc
dec
ljmp
arpl
add
add
fldt
testb
jle
arpl
add
sbb
clc
xchg
pop
xor
add
add
adc
clc
mov
fidivrl
sbb
clc
dec
pop
push
inc
clc
sub
clc
xchg
addr16
push
add
sbb
lock
cmp
clc
addr16
xor
add
fistl
and
clc
push
add
jae
add
int3
mov
clc
adc
add
sbb
outsb
movsl
clc
push
add
dec
pop
push
xor
add
js
clc
dec
jb
add
add
add
lret
mov
es
popa
add
dec
xchg
test
aad
add
push
add
pusha
add
jg
pusha
add
mov
aas
ficompl
jno
add
push
xchg
fldenv
sub
clc
or
jno
add
add
mov
clc
std
je
jp
stc
jbe
out
repz
add
clc
push
shlb
clc
and
and
add
add
or
cmp
mov
rolb
add
clc
fistps
je
clc
out
xor
add
cmp
int
ds
xor
add
clc
jbe
clc
add
add
add
add
lret
mov
mov
clc
lods
xor
add
add
and
jnp
or
add
ds
xor
clc
mov
clc
ds
pusha
add
pop
icebp
fisttps
stos
fwait
test
mov
lods
out
popf
and
add
mov
add
mov
mov
add
pop
jmp
clc
addr16
out
loope
cmp
add
pop
cmp
lods
fiaddl
add
dec
out
push
add
add
add
add
loopne
xchg
inc
clc
jp
clc
xchg
xchg
jge
pop
inc
add
bound
add
pop
mov
xchg
add
add
xchg
test
stc
shrb
stos
xor
add
shll
add
push
add
ret
clc
ds
xor
add
add
pop
mov
es
sbb
xchg
cmp
push
push
cmp
pop
push
lea
clc
gs
mov
xor
incb
clc
mov
pop
sbb
xlat
lahf
or
add
cmp
sar
clc
or
clc
rcrb
clc
pop
fbstp
add
push
push
cli
ret
clc
push
scas
lret
sbb
ljmp
cmp
scas
cmp
clc
das
cld
jl
mov
clc
cli
shlb
add
xchg
inc
add
mov
ret
clc
sbb
int
pop
add
add
clc
fiadds
in
sbb
adc
add
clc
sbb
jl
add
mov
add
add
push
cmc
pop
jbe
outsl
ja
pop
clc
loope
inc
add
or
clc
nop
cmp
mov
jno
add
mov
add
add
inc
clc
jmp
sub
clc
adc
inc
add
scas
int3
pusha
add
in
clc
cmpsb
clc
sub
clc
xabort
sub
out
scas
icebp
in
pop
out
mov
lret
and
clc
pop
inc
add
add
add
add
bound
add
jecxz
sub
clc
into
test
jo
add
insl
push
add
jns
add
int
clc
sbb
xor
mov
outsl
xchg
and
add
pop
mov
cwtl
scas
jno
add
sub
add
je
xchg
jns
push
add
add
add
lret
add
add
mov
mov
clc
pop
mov
jecxz
push
add
adc
add
insb
repnz
clc
in
push
sbb
add
cmp
insl
test
std
adc
add
clc
fwait
scas
mov
fdivs
add
add
push
fisubrl
lret
xchg
push
add
or
fdivl
into
aas
sar
add
jbe
clc
mov
imulb
inc
clc
push
xchg
pushf
cwtl
inc
clc
ja
mov
int
fldl
add
outsl
fdivrs
sbb
mov
mov
clc
pop
cmp
pushf
adc
cli
imul
add
clc
rorb
test
clc
adc
add
arpl
add
adc
add
add
pop
jge
and
sbb
mov
clc
adc
lods
jle
push
add
decb
arpl
add
add
pop
sub
add
inc
add
sbb
ret
clc
mov
sbb
add
push
add
scas
push
clc
jp
add
dec
ja
dec
iret
pop
mov
clc
jno
add
std
cltd
fsubrl
cmp
popf
jae
add
hlt
and
add
inc
clc
out
add
xor
add
popf
dec
ljmp
cmp
add
pusha
add
pop
call
add
mov
ss
ret
clc
xor
out
inc
clc
push
stos
idivb
ds
leave
mov
clc
inc
clc
pusha
add
decl
outsl
fs
jo
add
clc
mov
add
push
clc
pop
fidivrl
mov
lahf
scas
test
fistl
mov
stc
je
sti
jnp
pushl
pop
sbb
add
bound
add
popf
loop
cwtl
mov
test
addr16
push
add
stos
aas
jae
add
ds
add
test
pop
mov
clc
sbb
add
fmuls
mov
imulb
add
add
push
ffree
clc
js
mov
add
clc
js
clc
loop
push
jmp
movsl
clc
mov
add
sar
mov
push
cmpsl
clc
repz
xlat
mov
add
add
jg
cmp
mov
add
mov
add
imul
cld
fimull
or
add
or
xchg
outsl
imul
add
repz
and
add
cmp
mov
jb
add
pop
pop
or
adc
add
clc
in
sub
xor
add
cltd
ret
cwtl
lea
icebp
arpl
add
add
clc
pop
dec
stos
call
add
sub
cwtl
imul
push
add
xchg
hlt
mov
add
mov
add
out
push
clc
sub
pop
clc
adc
add
mov
clc
mov
clc
pop
push
ret
clc
xchg
inc
add
iret
scas
icebp
xor
add
daa
clc
pop
lods
pop
mov
mov
test
xor
add
loop
cwtl
xor
add
add
scas
clc
shl
clc
stos
push
xchg
add
ficoml
cmp
adc
add
add
mov
test
jmp
cli
ja
inc
add
bound
add
clc
xor
xchg
fisttps
pop
je
clc
lods
cmp
add
mov
pop
cmp
pop
sar
jl
mov
sti
aam
sbb
jo
add
add
es
mov
add
std
pop
out
push
outsb
loope
aas
sti
mov
jbe
out
shl
clc
sar
stc
cmp
clc
add
add
clc
nop
clc
mov
add
cmpsl
clc
cmp
popa
add
cmp
lods
mov
clc
nop
jnp
sub
mov
dec
clc
mov
add
test
mov
add
ds
loopne
jge
stos
scas
xchg
mov
sub
clc
add
mov
clc
es
roll
clc
testb
xchg
mov
shll
div
mov
js
clc
in
mov
clc
or
stos
push
clc
test
jnp
std
dec
stos
jns
add
cmpsl
clc
jnp
dec
ss
test
fs
pop
mov
jecxz
mov
lods
call
dec
mov
add
xor
out
xor
add
push
jle
mov
ret
fnstcw
xor
sub
add
and
add
adc
add
add
push
in
sti
es
pop
das
cwtl
ljmp
add
adc
add
ja
clc
mov
negl
clc
sub
clc
ljmp
jg
out
adc
popf
mov
in
mov
pop
cmp
push
add
data16
loop
es
mov
push
add
and
add
je
out
pop
cmp
cmp
clc
mov
jb
add
repz
clc
dec
jmp
in
cmp
clc
pop
imul
sar
cltd
cmc
inc
clc
in
sbb
repz
add
pop
push
nop
clc
test
cmpsb
clc
cmp
stc
test
add
dec
imul
rcrb
pop
fmull
mov
movsl
clc
mov
clc
sbb
add
js
rep
pop
bound
add
stos
in
inc
add
cmp
add
cmp
pop
sbb
clc
pop
or
jns
stc
and
add
inc
clc
inc
clc
sbb
add
add
adc
add
add
jg
clc
xbegin
enter
add
cmpsl
clc
cmp
mov
mov
lea
xor
add
sbb
sbb
clc
mov
push
add
push
and
add
lea
or
add
mov
clc
out
inc
add
mov
int
ficoml
and
add
loope
mov
mov
add
jo
add
inc
add
clc
movsl
clc
cmp
clc
cli
add
add
add
xor
add
mov
pop
nop
aam
lods
rcll
add
push
add
sar
lods
cwtl
and
and
add
clc
cltd
int3
dec
aaa
loop
ret
clc
ret
clc
js
loopne
fwait
nop
aad
xchg
stos
mov
daa
clc
add
push
clc
sbb
mov
int
in
in
shll
add
clc
jne
mov
push
mov
vucomiss
repnz
add
es
add
add
adc
add
cmpsb
clc
mov
clc
das
mov
xor
add
clc
sub
mov
add
jne
add
arpl
add
xchg
jecxz
fisubl
add
sub
xchg
push
inc
clc
and
add
clc
mov
add
and
add
insb
dec
fmuls
fwait
outsl
shrl
sahf
sbb
clc
mov
into
call
insl
stos
adc
add
xabort
add
add
add
or
add
jae
add
mov
xbegin
out
ret
xor
add
pop
js
dec
mov
cs
fmuls
adc
add
sbb
jnp
pop
cld
ss
sbb
sbb
insl
rorl
add
sahf
pop
dec
ds
dec
mull
clc
out
mov
in
mov
cmp
add
push
add
add
ret
clc
gs
daa
clc
aad
cmp
add
imul
adc
clc
movsl
clc
and
push
xor
add
fcoms
add
rclb
pop
clc
jmp
clc
xor
add
add
dec
mov
fs
out
addr16
daa
clc
push
fsub
clc
cmpsb
clc
lcall
and
inc
add
icebp
jge
sbb
rcrl
and
add
add
and
add
add
add
popa
add
jbe
sub
clc
mov
stos
stos
ret
clc
add
add
add
icebp
jmp
clc
negb
stos
jnp
movzwl
sar
add
out
pop
or
add
add
mov
scas
imul
outsl
loopne
or
add
mov
pop
insl
dec
xchg
int
clc
jge
or
loope
pop
sar
lea
outsl
cmp
flds
add
cld
or
out
cmp
int
dec
mov
jecxz
nop
cmpsb
clc
out
jle
cli
and
and
add
loope
push
aad
xchg
xor
add
add
add
add
cmc
pop
mov
clc
adc
add
add
add
fs
clc
sub
add
jmp
add
mov
add
add
clc
test
loop
pop
in
nop
pop
xor
mov
jmp
clc
mov
mov
mov
mov
lods
sub
imul
add
movsl
clc
jne
cmpsl
clc
push
fwait
adc
add
xchg
jle
sbb
rclb
test
adc
add
insb
push
mov
clc
xor
stc
xlat
jmp
mov
add
pop
lods
pop
adc
add
ret
clc
xchg
inc
clc
std
fdiv
in
xbegin
outsl
js
push
add
in
lret
add
jb
add
clc
sub
pop
aad
and
add
mov
inc
clc
jnp
clc
dec
pop
clc
push
clc
push
iret
mov
clc
adc
add
sti
add
add
add
vmovaps
clc
sub
jns
aas
cmpsl
clc
sar
jecxz
mov
pushf
xor
add
out
lahf
sbb
pop
cmp
mov
cmp
add
out
adc
add
clc
push
clc
dec
dec
out
fidivrl
add
out
add
add
inc
clc
mov
clc
cmpsl
clc
fs
jnp
push
clc
movq
sub
jae
add
clc
fwait
push
idivl
cld
bound
add
stos
push
xabort
add
dec
xor
mov
push
addr16
jg
je
clc
push
sbb
outsb
sar
clc
dec
jmp
add
lret
xchg
jle
jne
movsl
clc
ss
add
js
add
popf
jg
clc
sahf
sub
mov
repz
lock
outsb
sbb
xabort
clc
test
movsb
clc
fmull
add
push
add
inc
clc
cmp
clc
lea
sub
clc
aam
js
add
xchg
mov
std
arpl
add
clc
ffreep
clc
das
xbegin
stos
sub
jle
add
lret
cmp
add
xchg
call
clc
sar
mov
aas
pop
and
add
sarl
adc
add
inc
add
mov
mov
mov
add
in
cli
or
mov
stos
enter
pop
arpl
add
clc
incl
mov
lahf
sub
jne
clc
sub
fbstp
add
stos
stc
pop
cmp
add
dec
int
clc
pop
pop
dec
out
and
add
add
add
add
clc
xchg
pop
dec
mov
repz
jecxz
std
hlt
popf
push
or
bound
add
cmp
adc
add
inc
clc
cmpsl
clc
pop
out
jl
xchg
aad
pop
clc
jl
ja
mov
popl
xabort
clc
out
mov
leave
add
je
and
add
clc
xor
add
clc
pushf
push
clc
pop
push
dec
lret
into
mov
clc
pusha
add
in
sbb
gs
ret
clc
loop
out
jmp
mov
clc
add
add
add
add
mov
add
or
mov
mov
mov
out
cmp
clc
jle
sar
clc
testb
sub
sbb
xabort
filds
xchg
sub
mull
clc
mov
fwait
mov
push
inc
clc
dec
mov
xchg
pop
cmp
pop
cmp
pushf
mov
cmp
popa
add
loopne
or
jl
sbb
movsl
clc
cwtl
flds
ret
clc
add
nop
mov
sti
frstor
dec
out
cmp
or
mull
sbb
xbegin
lret
xchg
adc
add
ss
or
add
pop
dec
sbb
pop
addr16
sub
add
add
add
roll
mov
push
clc
dec
dec
addr16
cmp
sbb
add
syscall
clc
in
rorl
cmp
add
xabort
inc
add
das
cmp
lea
or
clc
cmp
add
jo
add
cs
jno
add
add
rolb
add
imul
xor
add
clc
pop
adc
clc
xor
add
stos
cwtl
add
add
fucomp
lods
enter
pop
gs
fs
mov
sti
mov
jl
loope
cmp
push
lcall
clc
int
sub
jmp
pop
cs
push
jge
pop
jae
add
add
add
lret
dec
stos
in
lahf
and
add
clc
mov
cmpsl
clc
sub
or
mov
clc
sar
mov
das
repz
lods
cmp
push
loope
and
add
or
add
inc
add
data16
out
psubsb
dec
test
and
add
aad
mov
mov
iret
lret
pop
mov
and
add
sbb
xabort
clc
int3
popa
add
xchg
jbe
or
aas
aaa
daa
clc
jp
test
inc
add
xchg
dec
pop
xchg
popa
add
mov
test
loop
add
add
sbb
inc
clc
or
gs
fwait
rcr
test
mov
rolb
add
mov
mov
clc
clc
xbegin
clc
psubw
sbb
add
push
pop
xchg
ss
pop
clc
sbb
ret
clc
sti
cmp
add
pusha
add
cli
rcll
sbb
add
or
pop
xchg
cmpsb
clc
aaa
ljmp
push
add
stos
mov
clc
pop
lea
test
add
pop
loopne
mov
clc
add
dec
mov
add
int3
icebp
mov
repnz
clc
push
sbb
jbe
repnz
add
jo
add
add
and
add
clc
data16
ret
clc
mov
or
clc
stos
sub
fisubl
inc
clc
ja
cli
and
hlt
and
add
dec
push
add
cmp
mov
lock
mov
clc
and
pushf
dec
pop
xchg
test
pusha
add
cmp
fcomps
add
fcmovnbe
js
xlat
sub
cmp
ja
out
enter
clc
jl
cmp
jb
add
out
ds
test
mov
in
pushf
sarl
outsl
xor
add
in
movsb
clc
jge
jle
cli
push
clc
mov
clc
mov
add
add
sub
mov
stos
cs
jmp
add
mov
jb
add
ret
addr16
mov
xchg
pop
mov
push
aad
cmpsl
clc
aaa
dec
xlat
ds
mov
dec
stos
mov
jmp
mov
add
sar
clc
sbb
cmp
clc
aam
clc
ficomps
push
add
out
cmp
aad
jl
imul
cmpsb
clc
data16
pop
ret
clc
cmp
ficoml
insl
push
xlat
in
stos
jns
push
add
cmpsb
clc
lods
ret
clc
or
add
inc
add
xchg
imulb
inc
clc
jmp
push
loope
jle
fmull
cmp
inc
add
dec
mov
rcrl
dec
jg
xbegin
add
inc
clc
imul
loope
lods
xbegin
pop
pushf
jns
add
jmp
push
add
pop
clc
in
cwtl
mov
clc
dec
ret
into
jno
add
clc
push
or
add
mov
and
add
nop
xor
add
mov
clc
sar
cmp
clc
je
add
aaa
cmpsl
clc
clc
test
daa
clc
mov
dec
mov
add
mov
xchg
mov
dec
xor
add
clc
out
int3
push
dec
insb
xchg
in
icebp
ja
add
sbb
clc
pop
clc
xor
add
and
add
inc
add
lret
cmp
xchg
dec
mov
cmc
scas
leave
lea
add
add
clc
bound
add
add
add
add
add
int
add
cmpsb
clc
int3
push
dec
push
add
mov
and
add
clc
ss
movsb
clc
mov
add
clc
pop
jle
inc
add
popa
add
cmc
jmp
fs
int
sub
add
hlt
das
pusha
add
dec
das
mov
clc
push
outsb
cmp
clc
aam
or
pushl
pop
jns
add
lcall
add
fsubl
das
mov
clc
movsb
clc
sar
mov
add
in
adc
add
push
add
hlt
cmpsb
clc
fnstenv
push
jl
add
jle
adc
add
loop
pop
aam
xor
add
test
xchg
push
scas
scas
clc
jns
ss
and
add
clc
sbb
clc
fcoml
cmp
fwait
or
inc
add
lea
push
clc
jae
add
adc
mov
clc
sbb
jo
add
mov
and
lods
jbe
mov
ljmp
fs
stc
lea
inc
clc
insb
jge
call
mov
add
add
leave
jp
filds
clc
mov
push
add
add
adc
add
adc
add
clc
sbb
clc
dec
ds
sarb
add
adc
add
and
clc
mov
ret
clc
data16
mov
pop
jge
clc
cmp
data16
stos
aas
cmpsl
clc
cmpsl
clc
loopne
sbb
jo
add
clc
jecxz,pt
cli
jmp
clc
mov
clc
add
add
clc
or
clc
js
add
arpl
add
cs
test
lret
xor
add
clc
test
inc
clc
or
add
scas
xchg
int
cmc
fstps
imul
jle
xchg
xabort
push
add
pop
pop
dec
lret
outsb
lock
sti
adc
and
xchg
pop
push
clc
lahf
pusha
add
jmp
repz
adc
add
clc
out
mov
and
add
inc
clc
pushf
pop
pusha
add
aaa
push
lahf
add
add
clc
cmp
clc
cwtl
adc
push
adc
int3
loopne
push
clc
cvtps2pd
mov
dec
adc
add
add
sbb
imul
clc
jge
clc
xor
add
test
shll
add
dec
xchg
and
add
xlat
cli
pop
mov
add
jno
add
or
lods
or
add
test
jle
pusha
add
movsb
clc
pop
sbb
gs
or
clc
lods
and
add
clc
add
add
clc
push
fwait
sub
mov
nop
std
mov
pop
cmp
add
add
pop
cmp
ret
xlat
pop
cmpsb
clc
popf
adc
add
mov
ja
cs
clc
xor
add
or
cli
aam
int
jmp
lahf
add
add
inc
clc
jno
add
inc
add
sub
clc
cmp
testl
add
clc
stos
shrb
xor
add
add
add
scas
xabort
add
ljmp
dec
dec
mov
add
add
xchg
sbb
aas
or
clc
das
ds
es
sbb
add
popa
add
pop
lcall
add
clc
mov
add
jle
mov
add
add
jg
add
out
and
add
insl
xchg
movsl
clc
outsl
mov
cmp
mov
je
cmp
inc
add
and
add
cmc
xchg
pop
dec
aad
jg
clc
gs
jbe
push
clc
addr16
repz
add
add
cmp
mov
sarb
sub
cmp
sbb
mov
and
add
pop
dec
scas
push
add
jmp
push
adc
add
cld
fistpll
inc
add
cmp
add
push
mov
ret
push
in
cmp
movsl
clc
xor
add
clc
clc
inc
clc
xchg
xabort
cmp
adc
aam
or
adc
fwait
inc
add
int3
stc
add
add
fmul
mull
clc
test
lods
push
icebp
jbe
add
push
faddp
clc
inc
clc
cmp
add
outsl
or
lret
push
mulb
lret
inc
clc
adc
cld
inc
add
sub
pop
pop
pop
mov
add
clc
shrl
clc
xor
leave
adc
add
mov
pop
and
lret
clc
aaa
mov
add
add
push
inc
clc
adc
add
clc
dec
xor
add
add
aam
or
mov
add
fstl
cmp
clc
gs
cmp
loop
sbb
add
pop
clc
js
push
add
add
add
fs
loopne
enter
mov
clc
pop
and
add
pushf
cmp
clc
pop
ficomps
addr16
mov
pop
loop
and
add
or
mov
cmp
frstor
add
sbb
test
mov
clc
das
in
mov
mov
lea
movsl
clc
push
clc
ja
insl
xchg
ss
cmp
int
clc
cmp
ss
mov
inc
add
pop
sar
pop
mov
clc
lret
add
int
clc
lahf
jne
cmp
call
jp
pusha
add
ljmp
daa
clc
dec
lret
xchg
insl
daa
clc
or
and
add
mov
pusha
add
cs
pop
xor
add
clc
cmpsb
clc
je
push
cmp
jmp
clc
push
add
add
add
pop
push
add
shlb
xchg
cmp
add
out
and
arpl
add
mov
sub
xor
add
push
imulb
sbb
add
aam
sti
push
jle
or
sti
mov
cmp
nop
inc
add
push
test
sbb
pop
add
add
scas
outsb
ja
xor
clc
rclb
adc
add
add
cmc
push
xor
pop
clc
scas
push
add
xchg
dec
out
fdivl
jmp
clc
push
clc
xchg
jnp
clc
pop
mov
mov
add
jg
clc
mov
mov
add
je
into
mov
fwait
cs
in
or
or
inc
clc
repnz
jo
add
or
fstl
mov
hlt
adc
int
fs
pushf
out
repz
cmp
iret
pop
mul
clc
repz
cld
push
xor
add
gs
or
add
fisttpl
iret
enter
movsb
clc
xor
add
arpl
add
add
add
xchg
insb
xchg
fs
add
add
inc
add
mov
sbb
sar
pop
decl
or
add
xchg
call
loop
daa
clc
push
add
ret
clc
dec
ds
repz
addr16
out
cmp
iret
jle
add
xor
add
jecxz
pop
scas
cwtl
jmp
add
clc
and
cmpsl
clc
setl
psraw
es
adc
add
add
xchg
int3
push
sub
add
push
sbb
test
mov
clc
gs
fcomp
scas
ret
sub
movsb
clc
inc
add
lahf
cltd
icebp
dec
scas
push
ds
add
dec
into
xbegin
mov
sub
xchg
stos
pop
clc
inc
clc
adc
add
fwait
pusha
add
scas
adc
add
add
xor
add
mov
cmpsb
clc
sbb
clc
cmp
pop
jle
jae
add
divl
nop
je
add
lret
cmp
cmp
add
push
add
repnz
or
push
add
xchg
inc
add
adc
add
add
fbld
loopne
or
mov
pop
into
and
add
jmp
add
jbe
jnp
cmp
adc
jecxz
dec
mov
cltd
xchg
mov
mov
cltd
jecxz
insb
pop
clc
xchg
popf
mov
leave
pop
clc
or
mov
jns
mov
sahf
fisubl
inc
clc
imul
pop
pushf
or
lea
inc
add
sar
cmp
add
xchg
std
or
clc
mov
cmp
addr16
push
cmp
hlt
push
data16
xor
add
clc
and
add
insb
mov
pop
aaa
mov
xlat
insb
xbegin
push
add
lea
pusha
add
mov
push
clc
loopne
lods
push
loopne
outsl
or
adc
cld
add
add
clc
mov
pop
xor
test
aad
add
pusha
add
lret
popa
add
cmc
mov
add
mov
inc
add
fsts
or
fldt
add
mov
popl
jmp
addr16
into
pop
insl
shrl
clc
ljmp
fmuls
dec
inc
clc
shr
xchg
call
add
add
clc
adc
add
into
in
sar
add
shll
xor
clc
sbb
push
call
ret
mov
data16
into
ss
sub
test
dec
or
inc
clc
mov
test
cmp
add
pop
xchg
mov
dec
push
add
pop
shl
lods
push
add
inc
add
scas
aas
inc
clc
repz
mov
lret
mov
add
add
and
add
dec
pop
jecxz
inc
clc
push
push
lods
mov
pop
or
pop
movsb
clc
in
icebp
outsb
adc
stc
push
clc
xchg
xchg
out
leave
push
dec
mov
loope
sub
push
imul
sar
pop
clc
inc
add
test
sub
sub
adc
add
sub
clc
hlt
push
jae
add
add
mov
nop
inc
clc
mov
clc
cli
pop
into
adc
add
clc
cmp
adc
add
ja
testl
mov
outsl
rcrl
and
int
clc
movsb
clc
nop
dec
push
scas
cmp
clc
pop
add
add
clc
mov
pop
sub
add
dec
stos
fadd
clc
inc
clc
fimuls
mov
mov
xchg
jns
clc
test
mov
mov
cmpsl
clc
add
add
or
into
addr16
aaa
stos
xchg
xabort
sub
mov
clc
js
or
add
sbb
loopne
sub
clc
nop
xchg
gs
in
clc
jne
inc
add
clc
fsubrs
add
data16
jnp
outsl
adc
clc
and
add
clc
push
sahf
mov
add
and
add
loopne
xlat
ret
clc
loope
or
aad
pop
pop
clc
ds
jge
clc
ret
clc
shll
jle
clc
cmp
add
cmp
clc
and
xchg
adc
add
add
xor
add
mov
add
add
clc
test
add
xchg
enter
xor
add
add
add
cmpsb
clc
scas
inc
add
out
clc
insb
fsubr
add
add
clc
jp
clc
sub
jns
clc
and
add
mov
add
xor
add
mov
in
xor
add
clc
pop
cmp
push
add
adc
add
stos
inc
add
pop
pop
mov
xor
add
bound
add
xor
add
and
mov
shrl
int3
cwtl
xor
add
jmp
jbe
add
xchg
adc
add
and
test
inc
clc
ret
add
fdivrs
clc
xchg
pop
testl
ljmp
fnstcw
clc
hlt
cmp
add
add
jns
clc
jg
mov
ja
clc
std
inc
clc
pop
data16
inc
clc
lods
push
mov
jnp
clc
xabort
ds
add
push
clc
fwait
and
add
clc
xor
add
inc
clc
sbb
add
test
mov
imul
add
add
std
xor
cmpsl
clc
daa
clc
mov
dec
jecxz
fnsave
or
out
mov
aas
jp
push
add
sub
add
insb
movsb
clc
sbb
add
jae
add
add
mov
add
clc
pushf
mov
mov
inc
clc
mov
fbstp
in
nop
inc
clc
iret
cmc
int
add
scas
fists
push
clc
sub
mov
clc
setae
clc
sbb
nop
add
add
sbb
rcrl
jno
add
clc
gs
ljmp
adc
add
add
fisubs
add
lret
mov
add
ds
dec
iret
xchg
dec
testb
jecxz
lret
cmp
xchg
sti
loopne
jl
jl
jno
add
add
jnp
enter
push
add
ds
sahf
enter
push
add
mov
xchg
cmp
mov
enter
adc
jmp
lods
mov
shlb
add
add
mov
jmp
add
ljmp
frstor
add
clc
inc
clc
sbb
pop
push
mov
add
pop
dec
cltd
ljmp
push
inc
add
scas
jo
add
add
cli
lods
aas
and
add
mov
clc
xor
add
clc
lock
add
add
iret
data16
mov
add
add
sbb
dec
push
mov
or
push
in
out
and
add
cmpsl
clc
jo
add
clc
bound
add
clc
xor
add
clc
ss
add
clc
sar
movsb
clc
mov
xchg
ret
clc
rorb
add
test
jae
add
cwtl
sbb
push
mov
in
in
fs
iret
jae
add
fimull
lock
ljmp
push
adc
add
mov
cmp
mov
add
clc
adc
sub
add
sbb
clc
cwtl
sub
clc
sub
add
xchg
shll
push
xchg
icebp
scas
test
sbb
sub
inc
clc
cmp
hlt
addr16
data16
cmp
addr16
sub
xlat
push
clc
outsl
mov
pop
hlt
sub
add
je
clc
and
xchg
sub
xchg
inc
add
sub
clc
lods
or
test
adc
add
pop
jge
stos
sar
mov
stos
repnz
outsb
xor
add
aam
add
dec
or
clc
cmp
add
jbe
add
add
cmp
add
fs
pusha
add
jp
fwait
xbegin
inc
add
mov
lods
daa
clc
sbb
mov
addr16
fists
add
scas
push
stos
xor
add
add
outsl
add
xchg
mov
add
clc
and
add
inc
clc
movsb
clc
or
clc
jo
add
push
add
or
add
mov
add
adc
add
push
sahf
ret
lods
daa
clc
cld
into
int3
xbegin
loope
sahf
jb
add
clc
ret
clc
aam
mov
push
test
clc
aad
clc
sub
aad
out
ljmp
pop
js
add
inc
clc
add
add
js
test
jno
add
push
test
dec
mov
add
out
push
sti
pop
fwait
loope
ss
clc
mov
in
lods
and
add
sub
into
push
or
add
push
outsl
xchg
mov
sbb
mov
divl
add
clc
iret
dec
rorl
repnz
adc
add
pop
mov
pushf
aam
mov
add
adc
add
add
movsb
clc
mov
cs
mov
cwtl
dec
lcall
aam
pop
aaa
bound
add
add
nop
or
mov
clc
fs
xchg
jb
add
out
mov
add
clc
loop
loop
xchg
and
clc
cmpsb
clc
lods
xabort
nop
mov
fisttpll
push
mov
cmp
pushf
fnstenv
repz
mov
loopne
and
xor
add
push
pop
cmp
leave
cs
add
add
xchg
sub
ljmp
add
sub
je
mov
mov
nop
jge
ret
clc
xchg
push
push
add
mov
in
loope
lahf
xor
add
faddp
clc
xor
add
xchg
pop
xor
add
cmp
mov
jp
rcrl
add
cmp
js
clc
mov
cmc
lock
cmc
add
add
dec
icebp
bnd
clc
imul
and
add
add
clc
out
cmp
flds
stos
cmp
jno
add
add
clc
aam
jns
imul
sbb
add
cmp
into
pop
sar
outsb
and
add
clc
imul
loop
add
add
loopne
mov
clc
mov
sbb
jno
add
movsb
clc
lods
pop
push
cs
cld
inc
add
fwait
repnz
add
adc
add
jge
pushf
sbb
mov
pushf
shlb
add
into
add
add
cmpsb
clc
cs
mov
push
ljmp
clc
out
pop
mov
mov
clc
sbb
mov
or
lock
add
lods
bound
add
add
xor
lods
imulb
xor
add
jmp
add
pop
cmp
stos
faddl
add
cmp
inc
add
pop
out
outsl
mov
ds
jmp
or
ret
add
mov
int
daa
clc
mov
lret
movsb
clc
jl
mov
add
arpl
add
ljmp
xchg
xchg
dec
aas
into
call
xbegin
adc
add
cwtl
and
add
iret
fsubp
clc
std
repnz
add
sbb
add
mov
cmp
daa
clc
nop
push
add
xchg
fnsave
pop
cmp
jb
add
clc
sub
ret
add
nop
call
mov
add
add
cmp
mov
test
jmp
popa
add
loop
lcall
cwtl
mov
add
clc
mov
clc
insl
sarb
es
xchg
push
cld
jecxz
in
insl
daa
clc
push
push
ljmp
add
adc
call
add
in
and
jne
mov
clc
pushf
stc
pop
clc
aaa
jl
cmp
sub
clc
lods
scas
icebp
leave
cmpsl
clc
sub
arpl
add
js
mov
add
add
add
add
add
dec
jecxz
cmp
cmp
ret
add
pop
jno
add
mov
add
std
pop
push
xor
sbb
ds
iret
loopne
mov
mov
clc
mov
xor
cmp
clc
test
jecxz
aaa
mov
enter
add
nop
or
push
add
sub
xor
add
add
mov
pop
lcall
clc
pop
xchg
std
popf
inc
clc
adc
add
and
add
clc
gs
mov
out
lret
test
inc
add
dec
mov
repnz
clc
aad
clc
je
cwtl
aam
pop
mov
xor
add
js
das
int3
inc
clc
xbegin
add
jg
xchg
lret
test
out
xor
add
inc
clc
inc
add
cli
sub
or
fisttps
add
addr16
in
out
enter
sbb
stc
decl
pop
aas
cld
xor
pop
mov
movsl
clc
mov
or
add
in
jno
add
clc
arpl
add
add
jmp
add
or
aaa
sub
clc
cmp
ds
fdivrs
imul
pop
sbb
aas
inc
add
mov
ds
clc
insl
adc
cmp
mov
add
add
push
add
pop
clc
lret
add
add
clc
xor
add
clc
cmpsb
clc
enter
add
xor
add
add
add
dec
lret
cwtl
cs
adc
add
clc
pop
lods
lods
rcll
add
shrd
clc
mov
add
lahf
jae
add
inc
clc
je
add
inc
clc
loop
out
inc
add
ret
clc
rcrb
das
cmp
cltd
pop
cmp
mov
add
lea
clc
std
cmp
clc
push
add
mov
mov
pop
mov
clc
pop
mov
or
in
lcall
int3
push
add
nop
sub
sar
push
add
sbb
imul
clc
jo
add
add
mov
testl
adc
add
add
aaa
cwtl
inc
clc
inc
clc
add
add
add
mov
add
cld
lea
cmp
add
cmp
or
cmp
sar
clc
shll
clc
or
dec
stos
adc
cmpsl
clc
xchg
stos
sub
clc
dec
sbb
mov
mov
sub
insl
gs
shl
clc
and
add
add
clc
xor
add
add
icebp
loopne
fs
jo
add
fstps
enter
arpl
add
add
mov
clc
cmp
cmp
clc
xor
add
push
inc
clc
aas
cmp
inc
add
mov
sldt
add
add
cltd
lahf
outsb
lods
pushf
cltd
addr16
test
mov
jnp
mov
clc
xchg
pop
cmp
stc
push
add
int3
dec
push
add
testb
add
enter
lahf
xchg
push
add
xchg
and
repz
mov
clc
and
add
dec
popf
sbb
cli
or
pop
out
push
add
lahf
lret
pop
add
add
mov
add
xchg
int
xchg
and
movsl
clc
inc
add
es
sar
ja
mov
clc
dec
xchg
mov
mov
push
add
cmp
inc
clc
dec
loopne
ret
jne
and
add
imul
cmpsl
clc
bnd
cltd
add
add
add
insb
xor
notl
cmp
mov
add
scas
or
cmp
iret
cltd
out
mov
leave
idivl
mov
add
adc
add
add
add
add
jmp
outsb
pop
mov
add
clc
js
jno
add
lcall
into
into
add
add
and
add
clc
addr16
xchg
inc
add
lret
xchg
dec
cmp
and
add
add
and
jmp
and
add
aas
fscale
out
cs
jge
add
stc
pop
repz
mov
arpl
add
mov
mov
add
aam
lret
inc
clc
fwait
or
mov
add
push
xchg
inc
add
lods
scas
gs
pushf
sbb
clc
cwtl
call
xor
add
outsb
or
jb
add
clc
push
xchg
fucomip
mov
or
clc
repnz
xor
add
and
and
add
repnz
pushf
repz
jbe
clc
stos
inc
add
dec
sub
jbe
pop
and
lcall
fadds
add
add
clc
pushf
fwait
xchg
jg
add
mov
add
push
add
pop
cli
mov
jb
add
popf
mov
leave
mov
clc
mov
dec
movsb
clc
pop
insl
rorb
push
add
dec
call
inc
add
inc
add
or
add
push
sbb
cs
dec
divb
jg
clc
mov
clc
cli
cmpsb
clc
pushf
pop
int3
push
add
dec
test
aad
dec
ficoms
cmp
icebp
sbb
clc
cli
push
das
pop
inc
clc
in
cltd
push
sar
mov
clc
test
cld
pop
xlat
jnp
loope
sub
and
add
xabort
add
mov
cmp
add
insb
mov
add
clc
int3
stos
divl
xor
add
ja
add
sahf
xchg
ss
mov
pop
mov
add
add
addr16
add
add
rdmsr
add
popa
add
scas
sbb
add
inc
clc
mov
add
pop
mov
add
out
or
clc
cltd
mov
cmc
add
and
add
int
dec
stos
xchg
rcr
cmp
fcomps
in
xchg
lods
mov
push
clc
mov
clc
cmp
adc
mov
sbb
movsb
clc
pop
stos
and
add
sbb
jmp
xabort
jl
shrl
cmpsl
clc
test
mov
clc
mov
sar
loop
sti
pop
aaa
and
add
add
add
clc
dec
daa
clc
aaa
out
mov
mov
add
xor
add
mov
inc
add
iret
sbb
add
mov
cmp
lock
pop
cmp
clc
jge
clc
bound
add
jno
add
add
mov
add
iret
ja
cmp
inc
add
add
add
in
or
xor
out
jl
xor
add
mov
clc
pop
and
jl
jecxz
bound
add
sti
push
stos
in
sbb
sbb
push
push
push
add
push
dec
cmc
insb
mov
jge
xor
add
mov
inc
add
leave
sti
pop
fsubrp
imul
bndstx
add
cmp
ja
add
push
add
lock
cmp
ret
clc
cs
lea
add
inc
add
insb
pop
ficompl
scas
and
add
sub
gs
mov
sahf
jo
add
popa
add
movsb
clc
shl
loope
pop
push
add
xchg
push
jge
js
fnsave
add
pop
loopne
mov
ss
mov
mov
add
outsb
pslld
sub
xbegin
push
lcall
or
lcall
je
dec
pop
sub
sub
das
add
add
clc
push
clc
sbb
jbe
hlt
pop
sub
or
xchg
cs
xor
add
clc
sar
or
add
pop
shlb
pop
int3
das
sahf
mov
gs
dec
and
push
mov
clc
cmp
repz
xor
add
xchg
outsb
or
clc
stos
inc
clc
mov
clc
jg
sbb
out
mov
clc
es
xchg
imul
es
shll
add
or
jo
add
gs
inc
add
mov
sar
stos
pop
clc
js,pt
cld
and
add
cwtl
testb
add
nop
adc
add
add
clc
mov
xchg
push
clc
out
daa
clc
jge
add
cmpsb
clc
push
add
pop
stc
and
mov
clc
mov
bound
add
clc
scas
mov
add
daa
clc
mov
add
adc
add
pop
clc
data16
mov
push
add
bound
add
mov
add
push
add
aas
mov
js
cmpsb
clc
cmp
clc
mov
and
and
xchg
pop
mov
and
clc
or
add
je
xor
pop
stos
or
ficoml
sbb
fidivs
xor
add
jb
add
es
mov
xchg
inc
add
sub
clc
push
push
add
ficoml
lret
cmp
dec
jo
add
adc
add
rclb
add
fildll
out
push
aad
clc
clc
test
add
inc
add
insl
xchg
rorl
insl
outsl
icebp
sub
ret
clc
int3
sub
mov
push
push
in
xor
add
mov
dec
inc
add
dec
popa
add
push
rorl
or
add
and
push
clc
ficompl
loope
jp
clc
cmp
clc
xchg
mov
pop
ljmp
in
in
rcr
bound
add
fldcw
xchg
sbb
fs
dec
mov
dec
mov
call
cmp
in
cmp
mov
lea
add
rol
clc
xbegin
jnp
sub
stc
es
sbb
daa
clc
pop
fiaddl
clc
movsb
clc
xor
pop
lahf
leave
pop
clc
into
mov
xor
add
add
sbb
imul
mov
add
outsb
adc
add
add
aam
xchg
xchg
jns
pop
mov
push
add
ss
mov
fstpt
fs
hlt
sub
pop
or
add
add
outsb
add
add
es
ja
mov
cmp
jmp
clc
xchg
push
imul
sub
dec
fldcw
clc
addr16
loop
stc
xchg
mov
cltd
dec
outsl
push
sbb
cmp
jmp
fs
imul
or
add
das
mov
add
and
add
add
testl
jg
lods
adc
gs
test
or
xabort
sbb
add
add
add
add
add
push
push
mov
add
push
add
mov
mov
stos
mov
push
add
and
inc
clc
xchg
xor
add
clc
aaa
push
jp
je
lahf
inc
clc
int
mov
add
add
clc
ja
in
scas
outsb
ret
add
or
add
mov
pop
cmp
add
add
cmp
dec
negb
clc
out
mov
jg
pop
daa
clc
nopl
add
add
sti
jb
add
add
ss
clc
jp
clc
jmp
clc
adc
sub
sbb
clc
stc
and
add
sub
clc
mov
inc
clc
or
jl
nop
sub
repz
and
add
clc
cli
mov
fiaddl
clc
mov
test
fstpt
xchg
sar
push
add
ja
xor
add
dec
cmp
dec
incl
add
add
movsb
clc
cltd
xchg
and
add
xor
add
adc
add
adc
clc
jnp
cwtl
or
ds
inc
clc
js
std
mov
jne
jge
repz
add
sbb
scas
jnp
mov
add
fs
adc
add
xor
add
mov
xor
add
or
mov
clc
sar
push
push
add
jbe
clc
xor
add
mov
pop
inc
add
leave
pusha
add
dec
pushf
push
add
in
dec
dec
xor
add
inc
add
lret
cmp
jo
add
mull
mov
int
cmp
mov
dec
fs
ss
pop
iret
mov
insl
stos
pop
dec
mov
add
add
scas
int
pop
clc
mov
clc
xor
add
add
ja
movsl
clc
dec
xor
add
fmuls
ja
add
pop
add
add
add
jecxz
mov
clc
loopne
mov
mov
add
add
add
ffreep
clc
or
add
dec
pop
dec
xor
add
dec
sbb
pop
and
add
clc
cmp
lahf
dec
add
add
jno
add
fcoml
add
test
ret
clc
xor
add
loopne
pusha
add
jo
add
cmp
mov
cmpsb
clc
js
sub
push
out
xor
add
add
fsubr
sbb
clc
xchg
es
mov
scas
xchg
stc
aas
leave
rorb
cmp
push
mov
add
inc
clc
sbb
xor
add
cmp
add
lret
pop
sub
clc
es
xchg
movsl
clc
sub
cmp
add
ljmp
repnz
stos
jb
add
clc
xchg
push
jmp
clc
push
lret
push
add
or
fistpll
addr16
xchg
xbegin
add
ret
clc
mov
mov
add
pop
icebp
mov
fs
mov
xchg
jno
add
add
fstl
add
pushf
ficompl
test
fistl
jo
add
cmpsb
clc
xchg
mov
mov
mov
jae
add
xchg
pop
adc
add
pusha
add
mov
shlb
das
mov
clc
clc
adc
add
add
test
sbb
add
inc
clc
jge
daa
clc
add
add
add
loope
pushl
xchg
and
add
clc
push
mov
clc
xor
add
or
clc
add
add
dec
inc
add
movsb
clc
inc
clc
fwait
push
cmp
clc
fsts
add
add
push
clc
mov
repz
clc
push
clc
adc
add
clc
dec
es
test
pop
clc
mov
popa
add
pop
xchg
clc
add
es
ds
add
clc
push
add
cs
mov
cmc
xchg
pop
jg
push
es
or
sub
add
adc
add
int
clc
mov
out
fbstp
add
jo
add
add
add
cli
or
add
cmp
call
or
or
add
movsl
clc
repz
add
push
adc
add
add
sub
clc
aad
push
mov
cmp
aaa
loopne
daa
clc
in
cwtl
xor
movsb
clc
push
mov
lods
loopne
cli
sub
add
in
cs
inc
add
sti
sbb
inc
add
je
jecxz
push
add
stos
xor
add
sbb
pop
clc
insl
jl
nop
outsb
xor
xchg
and
add
insb
sbb
clc
mov
add
ljmp
add
clc
sub
aam
loopne
dec
aad
jne
sub
daa
clc
jge
push
add
es
shr
repnz
add
jg
or
cmp
xor
add
xchg
gs
arpl
add
jl
add
xchg
mov
sbb
add
mov
clc
mov
sbb
clc
cmp
push
clc
stos
push
out
int
clc
das
add
adc
add
imul
jecxz
and
vaddps
jns
adc
stc
roll
fldl
add
push
ficomps
add
stos
push
imul
add
cld
out
aam
push
add
mov
add
clc
pop
push
clc
xor
add
out
popf
add
add
divb
add
add
pushf
imul
jns
clc
jno
add
cmc
pop
and
mov
jbe
pop
clc
sbb
in
or
add
mov
imul
ljmp
clc
jne
add
adc
add
mov
and
add
cmp
cmp
add
jge
mov
sub
add
push
add
adc
add
clc
inc
add
fiaddl
push
mov
inc
clc
cmp
dec
add
add
or
push
ja
push
add
cmpsl
clc
push
xor
add
lea
hlt
push
repz
ss
ljmp
add
inc
clc
clc
push
inc
clc
pop
into
loop
push
add
xbegin
imul
cmp
xor
add
lods
cs
add
pop
pop
push
clc
xchg
outsb
std
nop
cmp
loop
mov
jecxz
aaa
mov
add
popf
add
add
lea
sub
daa
clc
xchg
sbb
insl
fwait
add
add
add
lods
pop
push
add
mov
imul
add
add
ja
aad
outsl
mulb
dec
sar
adc
add
imul
clc
insb
out
jne
clc
pop
ds
stos
out
inc
clc
mov
add
inc
add
mov
add
add
clc
in
jl
add
mov
push
clc
negl
add
cld
fiadds
js
clc
mov
enter
sub
loop
outsb
inc
clc
mov
decb
add
xabort
add
or
xlat
xchg
stc
jmp
add
dec
xabort
push
jp
jno
add
clc
lret
rol
clc
pop
xchg
das
icebp
movsl
clc
and
add
inc
add
pushf
iret
cmp
push
push
scas
sar
mov
add
add
mov
add
cmp
sub
clc
add
js
add
push
mov
in
mov
clc
adc
add
lods
push
fsubrs
clc
mov
stc
mov
add
imul
inc
add
lahf
in
pop
clc
cli
ret
adc
add
fwait
test
or
or
xchg
and
add
out
add
add
sbb
clc
add
add
fadd
clc
push
cs
adc
add
jno
add
add
clc
pop
jle
push
shl
clc
inc
add
es
loopne
xlat
mov
add
leave
adc
add
or
js
je
inc
clc
arpl
add
mov
dec
mov
clc
xchg
mov
cltd
pop
sbb
sub
add
insl
xor
add
add
add
jb
add
add
cs
mov
xabort
add
mov
add
add
clc
xchg
push
add
lods
fdivrl
add
pop
inc
add
nop
clc
adc
add
inc
clc
xabort
sahf
sub
jo
add
lret
add
clc
dec
pop
sub
testl
pop
add
add
clc
cltd
loope
pusha
add
cli
pop
negl
inc
clc
lea
lods
inc
clc
in
and
add
jnp
inc
clc
xor
clc
xor
add
add
hlt
test
aad
ljmp
mov
mov
add
add
jns
lret
push
mov
clc
lods
xor
cmpsl
clc
jl
cmp
add
mov
adc
test
jl
clc
push
cli
mov
push
add
fstps
sub
clc
mov
sbb
stc
sub
adc
add
add
fs
mov
xchg
xchg
dec
sub
add
lahf
jmp
clc
mov
add
ret
mov
es
bswap
popf
mov
clc
mov
add
idivl
clc
clc
bound
add
add
clc
pop
adc
add
aam
push
mov
hlt
out
cmp
pop
clc
pop
lret
sub
mov
call
add
add
and
add
in
mov
adc
add
hlt
lret
ss
fwait
cmp
push
sbb
push
fcmove
mov
dec
ret
clc
xchg
fiadds
clc
pop
shrb
dec
scas
fnstcw
fdivs
dec
pop
lret
call
pop
loope
dec
popa
add
sti
jmp
add
movsl
clc
jmp
inc
clc
dec
add
add
add
xor
add
clc
adc
add
mov
add
dec
faddl
add
jno
add
test
jl
clc
bound
add
cmpsl
clc
inc
add
add
add
js
ret
clc
in
jae
add
add
clc
ja
clc
dec
jb
add
cmp
add
xchg
sbb
sbb
jp
ret
xchg
adc
add
mov
inc
clc
ljmp
xor
fiadds
aad
cmp
push
xchg
add
add
inc
add
cmp
out
cmc
cmp
add
cmp
dec
mov
sub
pusha
add
and
add
clc
jno
add
adc
add
movsb
clc
pop
inc
add
dec
xor
add
clc
mov
mov
push
rorl
cmpsb
clc
push
clc
mov
cltd
outsl
or
add
bound
add
and
add
clc
and
add
xor
add
mov
in
xchg
xchg
in
mov
scas
je
pusha
add
pop
iret
stos
cmp
add
add
clc
fidivrl
add
lock
xor
add
sub
clc
adc
add
xchg
cwtl
gs
push
cmp
and
jmp
add
dec
hlt
aas
rolb
add
sahf
cmp
add
jecxz
dec
fs
outsb
xchg
dec
cld
aas
sub
clc
aas
mov
test
sarb
insb
adc
add
shr
daa
clc
sbb
mov
into
push
loopne
lods
cmp
ss
xbegin
sub
add
flds
clc
mov
add
and
add
mov
shll
add
sub
add
dec
cwtl
lods
cwtl
fnstenv
aas
rcll
add
xchg
inc
add
ljmp
call
adc
add
or
mov
jo
add
fld
clc
dec
mov
cmp
xchg
data16
xchg
pop
xchg
cmp
add
add
clc
inc
clc
test
sbb
add
sar
out
sub
add
clc
xchg
push
clc
push
add
cld
pop
push
inc
add
imul
out
jle
sub
adc
aas
xabort
iret
sbb
add
mov
clc
sub
clc
insb
jle
cmp
inc
clc
gs
hlt
pop
test
clc
data16
into
fs
outsb
mov
clc
xchg
adc
add
add
sub
mov
xor
add
jge
pop
vmread
sub
add
push
clc
aaa
int
jne
data16
and
add
add
clc
fstpl
mov
adc
add
dec
movsl
clc
mov
push
add
jno
add
dec
push
jge
ljmp
es
cwtl
inc
add
mov
sti
idivl
mov
out
xchg
add
cmp
clc
mov
sub
mov
scas
and
add
add
xor
add
add
add
add
loope
inc
clc
push
xabort
loop
mov
push
add
mov
lea
out
cmp
cmp
push
add
outsl
inc
add
mov
fildl
clc
dec
test
test
mov
imulb
add
push
add
inc
add
add
add
fildl
push
js
je
add
xchg
cli
cmp
jne
clc
add
add
add
ss
mov
add
jae
add
clc
in
mov
adc
aaa
mov
popf
inc
add
cwtl
add
add
add
sarb
add
insl
and
add
clc
cs
aad
call
add
scas
xchg
dec
jns
add
xor
add
aaa
lods
sar
clc
cltd
and
add
push
add
mov
add
lods
imulb
ret
or
mov
test
sbb
inc
clc
push
leave
dec
sbb
xor
add
add
out
fsubl
add
shrl
add
or
add
movsb
clc
out
add
add
insb
clc
jmp
cmp
in
cs
dec
jge
add
in
mov
xchg
out
mov
add
add
add
pop
fdivl
push
mov
and
outsb
int
sbb
add
clc
jb
add
jns
add
jns
add
sbb
aaa
sub
scas
idiv
into
sub
sbb
and
add
repz
add
push
add
mov
aas
cmc
lock
or
cwtl
mov
sbb
sbb
mov
dec
sbb
clc
cmp
leave
pop
jbe
clc
cmp
clc
sub
add
clc
lock
mov
clc
or
xor
clc
clc
test
dec
pop
clc
mov
clc
das
cwtl
sti
outsb
and
add
clc
xor
add
in
mov
idivb
cmc
popf
mov
dec
push
xchg
pop
clc
xor
add
add
lcall
push
shrb
mov
fldenv
add
clc
lahf
lock
add
es
cmp
clc
scas
xor
sub
pop
adc
pop
or
add
pop
clc
cli
push
add
lret
lret
popf
mov
clc
icebp
ret
clc
mov
jge
js
pop
cmp
popa
add
and
loopne
add
add
add
add
repnz
nop
mov
sub
clc
repz
int3
insl
cmc
into
pop
inc
add
bound
add
stc
hlt
out
popf
push
add
lock
push
fsub
clc
lods
es
pop
xor
add
pcmpgtd
fisttpl
xchg
stos
mov
clc
sub
xchg
fwait
inc
add
mov
xbegin
clc
hlt
xor
add
add
sar
sbb
jle
std
div
scas
std
jb
add
int
pop
jg
inc
add
and
pushf
fidivrl
adc
add
rcrb
outsb
loopne
cmp
jge
clc
sbb
aaa
out
xlat
sar
clc
sar
add
movsb
clc
jo
add
inc
clc
push
pop
adc
add
sbb
inc
clc
insl
movsl
clc
addr16
cmc
test
mov
xor
add
adc
jno
add
xor
add
sub
jno
add
and
nop
test
add
cmp
fdiv
mov
add
xchg
add
add
push
pop
fisubrl
add
cmp
xor
add
pop
inc
clc
sar
clc
add
add
add
std
xor
add
pop
sbb
or
add
insb
mov
or
add
add
data16
push
sub
add
cmp
clc
dec
rcrb
xor
add
mov
mov
lock
rolb
outsl
outsb
out
jb
add
dec
adc
add
gs
dec
mov
inc
clc
push
add
shl
clc
daa
clc
xchg
sub
clc
adc
add
add
mov
aad
loop
or
xchg
test
clc
ficomps
jge
and
mov
dec
adc
add
cmp
add
push
aad
push
inc
clc
cwtl
push
push
dec
mov
lahf
mov
fmuls
cli
or
fdivp
dec
xor
clc
lods
into
data16
ficompl
sti
mov
jbe
mov
xor
add
xbegin
ret
clc
into
and
add
clc
ja
xchg
lods
fiaddl
cld
into
enter
clc
sar
cmp
xchg
mov
adc
add
clc
and
add
push
xchg
pop
enter
push
add
mov
cmp
clc
and
add
clc
stc
daa
clc
sahf
in
in
rorb
pop
jo
add
scas
mov
sbb
jmp
add
add
faddl
divl
movsb
clc
fwait
jne
clc
xabort
outsl
cmp
sar
clc
fidivl
add
loopne
sti
mov
push
mov
add
xor
clc
inc
add
mov
sbb
add
add
pushf
mov
clc
ss
int
jle
add
push
ja
imul
xchg
add
add
dec
or
clc
add
nop
jecxz
stc
cmp
add
cmp
add
jne
dec
pop
mov
add
xor
dec
es
xor
clc
sahf
popf
jecxz
fidivl
mov
nop
push
add
push
add
jns
js
cmpsl
clc
insb
sub
add
movsl
clc
and
add
add
pusha
add
mov
popa
add
or
pop
sbb
mov
add
sbb
xchg
or
add
jmp
add
popa
add
mov
clc
mov
lea
lock
jle
add
xor
add
clc
imul
cltd
lret
add
and
add
add
add
in
pop
xchg
inc
clc
sbb
popf
lock
pop
loopne
ljmp
fwait
inc
clc
fs
outsb
cwtl
inc
add
mov
jg
mov
clc
or
or
clc
clc
imulb
inc
clc
int3
cmp
add
add
fimuls
in
dec
dec
pusha
add
add
mov
add
clc
int
mov
out
mov
std
cmp
clc
mov
cmp
cmpsl
clc
sbb
clc
jl
scas
clc
cmp
lea
xchg
imul
clc
sti
nop
sub
jo
add
add
clc
push
sbb
xchg
fmuls
loop
or
movsl
clc
test
and
add
add
add
clc
mov
push
mov
push
push
xabort
stc
pop
stc
push
mov
add
repz
add
pop
movsb
clc
cmp
add
clc
hlt
or
mov
add
ss
inc
add
add
add
add
out
jp
xlat
scas
jns
or
out
bound
add
lods
sub
ss
pop
lret
adc
add
add
clc
fcmovu
leave
call
cwtl
adc
add
fs
push
call
jge
dec
cmp
in
sub
cli
cmp
clc
sbb
mov
mov
cs
add
add
add
push
mov
sbb
or
clc
fnstenv
clc
cmp
jae
add
cld
jns
sbb
cmp
add
add
add
add
pop
clc
fsub
clc
je
mov
in
mov
fwait
xchg
shlb
add
in
stos
out
pop
sar
clc
clc
jns
add
push
add
int3
push
add
or
clc
popa
add
or
jne
or
sub
add
clc
adc
add
int
in
sub
cmp
add
mov
mov
clc
popf
movsl
clc
jb
add
inc
add
mov
int3
xchg
popf
push
clc
jo
add
clc
sbb
adc
add
add
pcmpgtb
rolb
add
mov
pop
sar
mov
clc
arpl
add
out
mov
inc
clc
dec
adc
add
add
mov
add
icebp
mov
mov
sbb
int
clc
push
jl
fisubrl
add
push
fwait
pop
mov
clc
jb
add
insb
cld
jno
add
hlt
xchg
mov
icebp
lahf
and
push
push
cli
and
add
mov
dec
clc
out
jle
clc
imul
dec
mov
clc
mov
add
mov
clc
cltd
aas
cmp
clc
lahf
lret
dec
dec
jle
xor
dec
dec
inc
clc
push
add
out
cmpsl
clc
sub
inc
add
clc
xor
add
add
clc
inc
clc
xchg
xor
add
clc
mov
mov
lods
xlat
pop
and
add
imul
sbb
inc
add
pusha
add
and
add
stc
ret
clc
push
and
sbb
enter
mov
or
fisttpl
add
add
xor
add
xchg
clc
xor
add
add
popa
add
mov
mov
add
ret
clc
xbegin
and
add
clc
xchg
or
add
sub
dec
roll
jae
add
sbb
add
xor
add
stos
mov
or
sbb
pop
rcrl
sbb
into
or
sub
sbb
pushf
lret
sti
data16
call
add
add
scas
cmp
mov
jecxz
data16
jmp
push
iret
arpl
add
add
sbb
in
lcall
cs
mov
add
inc
add
in
repnz
cwtl
js
clc
sbb
clc
push
clc
xor
add
jl
insl
xor
add
xchg
jbe
clc
shlb
popa
add
clc
or
cld
testb
lods
mov
cltd
inc
clc
mov
inc
add
sahf
lahf
outsl
sbb
into
loope
iret
and
add
add
data16
dec
xchg
xchg
pop
inc
add
cmp
clc
jbe
clc
cmp
nop
hlt
mov
lcall
xchg
mov
add
jnp
popf
cmp
push
cmp
sub
cmp
movsl
clc
ret
xabort
inc
clc
std
pop
mov
insl
xchg
ja
dec
aad
mov
add
test
add
sti
pop
stos
daa
clc
clc
test
pop
mov
add
insl
aas
cmc
jae
add
add
int3
loope
xbegin
adc
push
test
add
add
mov
or
jp
cmp
add
add
shll
jns
mov
addr16
sbb
clc
or
clc
cmp
add
mov
push
add
xabort
clc
cmp
pop
push
clc
addr16
xchg
lock
add
sbb
adc
add
add
fninit
clc
jns
inc
clc
cmp
leave
es
mov
add
outsl
sub
jmp
in
scas
push
add
or
add
jns
repnz
cmp
addr16
mov
jne
clc
mov
stos
dec
jle
and
add
out
lea
add
aad
call
clc
jb
add
and
add
jge
jg
clc
sub
clc
mov
push
add
push
add
add
add
clc
mov
lret
dec
lahf
movsl
clc
adc
clc
flds
mov
in
jo
add
pop
jecxz
pop
movsb
clc
ss
push
add
mov
xlat
roll
add
stos
xor
add
add
pop
int
lods
jae
add
clc
xor
add
repnz
add
push
push
dec
cmp
cld
xor
add
hlt
addr16
mov
hlt
movsl
clc
pushf
xor
add
add
sar
jae
add
jno
add
add
pop
and
add
imul
test
clc
pop
hlt
in
mov
mov
fstpt
nop
adc
add
inc
add
mov
out
leave
mov
das
inc
add
cmp
sbb
add
ret
mov
add
add
scas
bnd
lods
sub
mov
add
cmp
into
inc
clc
fwait
jle
fimuls
mov
pop
test
sti
cs
cmp
outsb
pop
or
ficoms
lahf
adc
pop
stos
xor
add
add
inc
clc
lock
add
pushf
pop
popa
add
lahf
roll
jp
clc
push
jo
add
or
sbb
add
or
push
jmp
jp
stos
clc
or
jae
add
loopne
add
dec
int
inc
add
xor
add
add
test
adc
add
add
scas
je
xabort
fs
ss
daa
clc
movsl
clc
pop
xabort
add
pop
lret
pop
clc
in
ljmp
out
sbb
add
into
xor
add
add
sbb
add
dec
jl
clc
add
sti
or
mov
sub
jnp
dec
ds
mov
ds
clc
pop
xbegin
je
sub
clc
inc
add
lret
dec
mov
push
add
mov
insb
adc
add
clc
xchg
pushf
inc
clc
jge
es
fwait
inc
clc
mov
mov
xor
mov
enter
push
add
fucomp
add
add
add
mov
pop
sub
js
test
add
jb
add
sbb
add
add
add
mov
add
pop
stos
dec
aam
xor
add
sar
xchg
sbb
sub
sahf
arpl
add
add
clc
outsb
call
add
xchg
jbe
cltd
add
add
clc
add
mov
sar
adc
add
mov
add
stc
movlps
add
out
sbb
xlat
mov
clc
leave
and
add
clc
xchg
imul
add
jbe
pop
pop
xor
add
clc
push
add
hlt
xchg
or
std
add
in
cmp
sar
add
cmp
lret
sbb
mov
dec
cmc
aas
incl
clc
pop
cmp
daa
clc
inc
add
xchg
dec
int
sbb
aad
mov
pop
cmp
or
or
push
mov
pop
adc
add
add
clc
mov
add
mov
mov
jne
in
dec
jle
lods
sub
clc
cli
aas
jge
jmp
inc
add
sbb
sbb
iret
cmp
insb
pusha
add
push
add
fstps
inc
clc
inc
add
out
sub
clc
shll
add
sub
adc
add
cmp
add
add
cmp
and
lret
sub
jnp
add
add
add
add
jne
or
clc
std
mov
clc
int3
ret
clc
xor
add
clc
jns
xbegin
js
clc
pop
clc
ljmp
clc
outsb
mov
iret
or
adc
mov
add
add
add
das
pop
ljmp
ret
clc
fdivrs
sarl
clc
or
lret
mov
cmpsb
clc
mov
or
clc
push
add
clc
pop
std
inc
clc
xchg
fstpt
out
pop
or
popf
shlb
add
imul
movsl
clc
or
clc
jle
mov
pop
mov
insb
adc
add
insb
mov
add
inc
clc
xor
add
faddl
xabort
mov
add
add
insb
mov
jp
sub
add
mov
imul
sbb
mov
clc
fxrstor
out
adc
add
and
add
pop
xchg
in
fistl
add
mov
add
and
add
add
sti
fiadds
mov
std
out
sarb
mov
jecxz
clc
pop
add
movsb
clc
mov
clc
icebp
lods
push
pop
clc
lret
add
clc
and
clc
sbb
in
sbb
mov
clc
push
and
add
ss
add
add
lahf
sub
mov
xchg
cmp
out
outsb
xchg
jnp
clc
mov
lea
clc
xchg
jne
pop
cld
pop
cmpsb
clc
popf
aas
fimuls
sbb
or
scas
iret
mov
add
pop
in
out
sahf
add
add
clc
fbld
add
add
add
push
jb
add
imul
mov
ds
lret
xor
add
add
add
gs
mov
idivl
clc
sti
pop
push
mov
pop
int3
pop
shlb
add
add
add
xchg
xor
add
sub
clc
sbb
hlt
push
pop
jbe
clc
in
cld
mov
add
sub
int3
sub
add
mov
mov
clc
in
std
in
je
push
add
dec
mov
clc
adc
add
xor
add
sahf
dec
push
mov
mov
pop
data16
sahf
bound
add
add
sbb
stos
test
clc
push
add
daa
clc
sbb
mov
pop
adc
add
clc
testl
add
pop
scas
test
xbegin
mov
add
lea
add
add
or
xchg
pop
jl
add
imul
clc
pop
or
rolb
imul
inc
clc
ss
xchg
cmp
xbegin
shll
add
add
cmp
clc
push
clc
push
add
jge
lret
mov
adc
add
add
lahf
mov
hlt
or
mov
lods
clc
jp
out
dec
cmp
add
inc
clc
xlat
sbb
clc
cmp
lahf
mov
mov
fildll
dec
cmpsl
clc
jb
add
loope
sbb
clc
inc
add
int3
mov
adc
inc
add
vminps
push
enter
clc
bound
add
push
add
dec
incb
lcall
add
cmp
clc
mov
mul
clc
pop
and
es
dec
pop
xchg
or
xchg
push
lock
lret
jbe
add
cmp
add
cmp
add
mov
lahf
mov
and
add
je
push
clc
popa
add
push
in
pop
jbe
ffreep
clc
xchg
fnsave
pop
jge
js
clc
and
add
sbb
clc
lods
sbb
sbb
clc
mov
push
add
pop
repnz
xor
add
clc
stos
add
add
insl
mov
dec
stos
push
jg
outsb
xchg
mov
xlat
sbb
scas
data16
cmp
add
jmp
adc
add
add
lock
iret
out
popf
insb
mov
and
add
add
dec
clc
dec
sub
add
cmp
movsb
clc
xbegin
idivl
sar
push
jnp
jle
clc
mov
clc
pop
jl
add
sub
xor
clc
mov
jo
add
jo
add
lea
clc
mov
pushf
or
pop
inc
clc
cmpsl
clc
cmpsl
clc
adc
add
xbegin
clc
pop
jo
add
outsb
hlt
arpl
add
clc
or
add
xor
add
insl
aad
lret
mov
clc
add
add
add
and
add
lods
mov
ret
clc
ss
repnz
dec
shlb
clc
or
clc
dec
mov
sbb
sti
cmpsb
clc
leave
fs
rclb
add
clc
or
xor
add
sar
jmp
add
xchg
or
leave
push
inc
add
call
rcr
adc
add
clc
sbb
mov
jecxz
pushf
jmp
xor
add
jns
add
imul
das
push
add
ffree
clc
mov
data16
out
sbb
in
mov
add
and
test
mov
add
pop
fsin
pop
jmp
clc
call
add
dec
and
xor
add
push
xchg
cld
add
add
push
incl
add
mov
sbb
clc
gs
xchg
pop
xlat
inc
clc
cmc
dec
ret
clc
lods
sub
movsb
clc
or
mov
jl
lcall
das
jae
add
pop
fistpl
jmp
cli
jb
add
add
add
dec
mov
lahf
sar
add
add
jns
clc
fnstcw
clc
sub
mov
clc
xchg
out
cmp
and
add
mov
mov
test
std
push
add
lock
add
nop
pop
clc
loope
sbb
add
clc
or
add
aas
inc
clc
cmp
add
add
clc
inc
clc
jbe
or
loope
sbb
enter
sahf
inc
add
scas
xor
add
into
mov
push
add
pop
xchg
mov
clc
clc
cltd
mov
jecxz
mov
clc
mov
movsb
clc
sbb
clc
add
inc
clc
xor
and
add
pop
lahf
jns
sub
push
add
out
outsb
test
add
cmp
xchg
bnd
clc
arpl
add
mov
or
add
cmpsl
clc
push
add
xor
add
clc
adc
add
mov
add
cli
fcomp
mov
clc
jecxz
pop
dec
adc
add
add
popf
push
add
ljmp
or
add
in
sahf
fisttps
mov
inc
clc
cmc
dec
popf
adc
add
sahf
cld
leave
loop
fwait
mov
push
cmp
je
add
xchg
lcall
clc
fimuls
mov
push
xor
add
add
cmp
daa
clc
lahf
out
xor
rolb
pop
clc
in
sbb
xchg
xchg
bound
add
cli
pop
insb
fs
add
add
or
dec
pop
repz
clc
call
push
sbb
and
add
add
jns
sbb
clc
cs
mov
push
repz
clc
lret
xor
add
add
mov
arpl
add
sbb
clc
inc
clc
test
xchg
dec
pop
pop
into
cmp
clc
out
sub
dec
pop
adc
xchg
or
rcll
mov
clc
jb
add
cmp
clc
sub
clc
dec
pop
xchg
xchg
cmpsb
clc
ljmp
jbe
or
sub
or
add
xchg
mov
sahf
mov
clc
lock
add
cltd
iret
cmp
xlat
pop
addr16
out
insl
mov
adc
lret
arpl
add
mov
clc
fnsave
dec
adc
add
clc
xor
add
fcmovbe
sarl
and
add
arpl
add
add
repz
add
pop
lret
je
add
xor
clc
into
outsl
fiaddl
add
divl
cmp
and
add
clc
jmp
clc
es
popf
or
clc
mulb
mov
sbb
clc
int3
push
mull
add
insb
sarl
adc
push
pusha
add
fstp
jmp
xor
add
lahf
jo
add
cltd
inc
clc
dec
push
clc
clc
push
call
add
bound
add
mov
outsl
jae
add
add
add
rcrl
jecxz
sti
sub
and
add
and
add
clc
cmp
add
stc
pop
jmp
xor
add
lret
xchg
loop
mov
add
add
enter
add
lahf
mov
loope
dec
icebp
xor
add
mov
iret
mov
insb
cmpsl
clc
fs
sbb
inc
add
xor
lahf
jae
add
add
test
sbb
add
mov
add
fistps
xor
add
add
cmp
sar
add
cmp
add
mov
test
pop
clc
dec
mull
add
push
mov
insl
movsb
clc
neg
cmp
sub
clc
push
add
jo
add
add
loope
dec
inc
clc
lea
inc
add
loop
add
loop
out
mov
add
jl
push
add
xchg
shlb
add
test
cwtl
imul
and
add
sbb
pop
clc
mov
loop
clc
xor
add
jbe
imul
nop
popf
cmp
jno
add
fs
jne
mov
or
inc
add
push
dec
mov
xor
add
push
add
xchg
mov
repnz
add
shrb
jle
push
xabort
add
mov
cmpsb
clc
jl
cmp
sub
test
and
add
add
out
pop
in
ret
clc
mov
fdivs
xor
clc
sbb
hlt
insl
push
jecxz
or
dec
mov
and
out
cwtl
movsb
clc
inc
add
mov
add
sub
sbb
clc
sub
add
enter
addr16
jl
lcall
ja
clc
mov
add
mov
add
push
clc
mov
add
pop
push
add
sar
xchg
dec
add
add
gs
fwait
cs
add
insb
lret
jns
lahf
stos
mov
add
add
xchg
pop
cmp
or
add
in
mov
add
add
pop
xchg
stc
cs
clc
cmp
cmpsb
clc
mov
add
sub
js
sahf
jbe
add
imul
cmp
scas
aad
or
jl
clc
push
call
data16
daa
clc
xbegin
out
es
xchg
dec
rorl
dec
imull
dec
push
add
jp
add
cli
leave
mov
inc
clc
push
xlat
sbb
or
add
clc
outsb
xchg
add
js
sub
or
clc
outsl
mov
loop
push
clc
gs
test
sub
xchg
cmp
imul
adc
add
add
cmp
add
or
ret
clc
movaps
clc
cld
or
call
int
ror
sub
add
lret
clc
cwtl
or
add
mov
add
push
push
cltd
jno
add
or
push
add
int3
ja
add
adc
add
add
daa
clc
scas
inc
add
into
fwait
cmp
bound
add
xchg
pop
clc
mov
movsb
clc
repnz
flds
add
dec
jae
add
add
xchg
inc
clc
hlt
mov
pop
clc
inc
clc
arpl
add
push
add
jb
add
fstpl
jb
add
sub
sbb
add
ret
clc
clc
or
pop
dec
iret
stos
sbb
clc
test
or
jecxz
mov
clc
inc
add
xchg
jl
lret
xor
add
clc
mov
add
test
clc
jae
add
clc
popl
adc
add
fistl
adc
add
clc
adc
add
clc
fcoml
aad
pop
inc
clc
iret
cmp
clc
pushf
cltd
sar
cmp
adc
add
add
stc
pop
inc
clc
xor
add
add
add
scas
int3
jns
sub
add
mov
add
shll
add
dec
testl
clc
cmp
hlt
into
inc
add
sar
mov
add
notb
add
dec
add
add
imul
push
mov
xchg
and
arpl
add
jecxz
cld
adc
add
add
clc
ret
jp
clc
in
adc
add
add
pop
insl
push
jp
dec
adc
add
mov
clc
sbb
frstor
add
jecxz
adc
add
icebp
dec
and
outsb
sbb
clc
mov
adc
add
adc
add
jo
add
mov
add
das
sbb
add
dec
push
jo
add
outsb
cmc
mov
dec
jb
add
pop
cwtl
ret
clc
cmc
lods
lahf
test
aas
jae
add
scas
aam
inc
add
out
movsl
clc
sub
add
pop
sbb
add
sbb
clc
daa
clc
jp
sbb
mov
dec
sbb
int3
xchg
mov
jp
arpl
add
add
insl
ljmp
xor
add
and
movsl
clc
stos
xor
jg
cmp
gs
stos
xor
add
clc
cld
mov
add
rcrl
mov
fnstcw
ja
add
and
add
pop
cmp
je
clc
push
clc
sub
pop
enter
cmp
push
add
mov
clc
daa
clc
jb
add
push
pop
cltd
fucomi
or
clc
jmp
pop
mov
clc
aaa
push
rcrb
arpl
add
fs
into
push
clc
push
add
mov
clc
jmp
jl
test
mov
out
mov
je
clc
push
add
fsubl
add
imul
pop
or
cmp
movsb
clc
lods
add
add
add
xor
cld
aad
fwait
aad
clc
call
add
aas
jbe
jp
clc
jnp
add
das
fists
add
jle
std
jns
clc
cmp
imul
dec
movsl
clc
or
jb
add
enter
xor
clc
sti
push
sub
add
je
lret
mov
call
clc
xor
add
mov
cmove
pop
stos
iret
mov
ljmp
push
pop
xor
add
push
fcomip
adc
dec
xor
add
clc
mov
jl
add
add
add
push
add
into
mov
jbe
inc
clc
shr
adc
clc
stc
and
add
pop
call
in
xor
mov
test
clc
xchg
ljmp
pusha
add
lock
add
mov
add
jge
push
adc
add
clc
testb
ja
ljmp
clc
enter
and
sti
stos
mov
mov
cmp
clc
clc
test
jbe
clc
imulb
mov
cli
je
clc
sar
add
mov
jmp
add
into
outsl
inc
add
lea
add
add
sbb
mov
ljmp
add
xchg
aad
add
inc
add
inc
clc
out
idiv
and
addr16
mov
clc
fnstenv
and
xchg
xchg
sub
clc
lcall
in
and
add
jg
stos
inc
add
sahf
ljmp
add
in
or
clc
test
fisubs
add
mov
inc
add
movsb
clc
xchg
inc
clc
xor
add
sbb
add
add
ds
pushf
addr16
nop
add
test
loop
xchg
in
pop
loopne
cmp
mov
add
sub
int3
sbb
and
dec
cmp
add
add
add
push
clc
xchg
adc
add
pop
fiadds
cmp
test
lcall
push
test
clc
adc
add
negb
mov
sub
lea
clc
sub
cli
jb
add
xchg
jbe
repz
pop
mov
clc
sbb
mov
clc
jbe
add
out
fmul
inc
clc
xchg
ss
push
jnp
mov
add
sub
sahf
icebp
cld
mov
clc
std
jmp
jg
testl
add
daa
clc
mov
mov
add
cmp
pop
dec
xchg
inc
clc
fstpl
add
inc
add
test
fisttpl
mov
clc
data16
pop
aas
and
sbb
add
add
mov
clc
mov
test
push
add
hlt
mov
arpl
add
clc
mov
mov
add
cmp
dec
mov
imul
clc
notb
sub
sub
pop
mov
dec
pushf
sbb
call
add
pop
inc
clc
add
add
cmp
cltd
sub
inc
add
mov
sahf
push
add
sbb
add
leave
in
out
aaa
cli
cmp
add
dec
adc
mov
clc
mov
fldcw
add
enter
lahf
mov
add
lea
test
clc
xchg
inc
clc
pop
clc
and
bound
add
xchg
movsl
clc
cld
xchg
ljmp
clc
ja
add
xor
add
clc
leave
loop
je
mov
add
stc
push
add
ljmp
and
add
clc
aas
incl
add
mov
clc
cmp
adc
add
adc
clc
enter
clc
insl
pop
movsl
clc
push
int
push
add
lods
cmpsl
clc
xor
pop
addr16
shll
sub
js
insb
adc
add
jp
add
pushf
cli
push
sub
clc
mov
clc
mov
add
push
xor
add
mov
jb
add
jb
add
inc
clc
mov
clc
push
push
clc
or
push
xchg
xabort
fidivrl
dec
ja
clc
and
xbegin
add
jl
js
clc
cmp
fsub
clc
ret
clc
gs
sub
clc
cmc
sti
stc
fs
test
inc
add
and
add
jmp
mov
sti
inc
clc
repnz
scas
mov
sar
sar
clc
sub
add
mov
add
add
pop
aam
mov
sub
pop
dec
dec
psubusb
in
or
mov
push
add
scas
dec
lock
add
xor
add
add
jb
add
sar
clc
stos
pop
mov
sub
fsubrl
fwait
cmp
push
add
cmp
sbb
xchg
adc
add
imul
mov
xor
add
clc
dec
jo
add
lock
add
aaa
shl
sbb
add
add
clc
loopne
add
add
lea
repnz
clc
out
int
cmc
and
add
push
stc
lods
mov
xchg
inc
clc
iret
insl
je
add
into
cltd
jo
add
repz
clc
xchg
dec
add
add
add
clc
fldenv
add
add
aam
clc
or
pop
pop
xor
inc
clc
bound
add
add
ucomiss
push
daa
clc
mov
arpl
add
add
xor
add
clc
std
jo
add
int3
xchg
rorb
inc
add
adc
in
xor
add
and
add
ss
std
inc
clc
or
add
mov
gs
cmp
clc
std
sub
ret
clc
cs
or
sbb
clc
mov
clc
adc
add
dec
sbb
pop
xlat
cwtl
in
jno
add
add
adc
add
pop
roll
add
fmull
push
popa
add
lcall
notb
add
cmpsl
clc
iret
mov
popa
add
xlat
adc
add
sub
clc
pusha
add
add
jmp
clc
scas
xor
add
fldcw
add
imul
or
dec
inc
add
aaa
enter
inc
add
ljmp
add
add
add
mov
es
push
add
inc
add
ss
imul
add
add
adc
sub
mov
clc
jb
add
clc
mov
mov
or
mov
clc
scas
or
loopne
sbb
clc
push
repz
fdivrl
test
fdivl
add
sub
add
clc
push
mov
clc
movsb
clc
jecxz
push
xor
add
add
std
ret
clc
out
or
out
cmp
mov
xor
add
js
add
in
adc
clc
mov
add
mov
add
add
add
sub
xchg
lret
clc
pop
fs
pop
mov
in
pop
xchg
cltd
in
pop
in
lret
add
add
add
mov
dec
jle
add
pandn
aam
pop
sub
and
add
ficoml
mov
and
add
or
mov
add
out
xchg
push
or
clc
inc
clc
adc
mov
dec
jae
add
add
clc
fbstp
in
in
adc
add
lock
clc
xor
add
clc
scas
inc
add
or
push
clc
sar
cld
into
jbe
dec
inc
clc
enter
outsl
xchg
cmp
pop
xchg
jg
add
cs
insb
adc
inc
add
ljmp
loope
lahf
push
push
add
push
fs
js
push
add
ficoml
add
pop
inc
add
adc
add
xchg
mov
imul
fwait
xchg
rorb
inc
clc
mov
push
daa
clc
mov
ret
clc
aaa
sahf
hlt
sub
jp
sub
clc
clc
inc
add
and
add
fistpl
inc
clc
xchg
lcall
clc
xchg
push
add
nop
loop
stos
mov
clc
out
xor
add
loop
mov
pop
adc
add
scas
jecxz
xor
add
pop
test
lods
sbb
xchg
mov
clc
mov
add
sub
ret
mov
clc
adc
add
clc
vunpcklps
das
mov
enter
in
cmp
clc
sti
jle
addr16
jns
or
add
push
cmp
std
adc
add
pusha
add
movsb
clc
shlb
mov
dec
pop
cmp
into
mov
clc
xchg
ja
ja
rolb
stos
fimuls
adc
add
clc
fucomp
insb
fdivrp
and
add
jmp
stos
mov
add
scas
jae
add
clc
sub
clc
pop
call
add
push
or
and
add
add
repz
sbb
jbe
outsl
mov
adc
add
pop
stc
mov
clc
test
add
jg
imul
add
clc
scas
xor
add
call
adc
add
add
and
add
xchg
sub
cmp
xlat
sub
add
and
fnstsw
repz
clc
push
cli
stos
std
ja
ja
add
pusha
add
lret
add
sbb
add
clc
jge
mov
jnp
add
inc
add
out
leave
clc
adc
add
cmpsl
clc
sub
in
pop
dec
dec
dec
and
dec
repz
movsl
clc
add
add
popf
frstor
add
inc
clc
push
movsb
clc
xor
add
clc
daa
clc
inc
clc
insb
lock
add
push
xor
add
into
pop
ds
lea
add
xor
pop
fdivr
fwait
sub
lock
cmp
add
or
add
push
push
add
scas
daa
clc
lret
add
dec
ret
clc
iret
cmp
bound
add
add
out
jecxz
repnz
and
add
jge
add
add
add
add
sbb
in
sub
in
mov
cmpsl
clc
dec
or
add
add
je
jnp
xlat
xchg
sub
clc
pop
ja
jne
clc
dec
push
jbe
cmp
adc
add
cmpsb
clc
push
pop
daa
clc
jl
add
jbe
add
sub
jmp
clc
aaa
dec
iret
fldt
mov
pop
scas
mov
push
mov
pop
ret
clc
jecxz
shl
lea
add
add
xchg
in
mov
add
xor
add
push
cmp
add
cmp
cmp
dec
insb
xor
add
add
pop
mov
enter
pop
test
leave
fstl
add
mov
add
dec
loop
lahf
popa
add
mov
clc
lods
testb
add
call
dec
jne
inc
add
push
add
jecxz
rol
clc
mov
mov
add
add
insb
mov
add
jbe
clc
imul
clc
insl
dec
cltd
inc
add
movsl
clc
dec
aam
pop
imul
dec
and
add
or
lods
add
ds
pushf
push
sub
clc
fwait
mov
pop
jo
add
cmp
stos
gs
fbstp
xor
add
std
aas
mov
add
in
xbegin
test
clc
lods
mov
jns
add
cld
pushf
pop
cmpsl
clc
scas
jmp
gs
sbb
into
out
jb
add
or
clc
sti
fld
clc
ljmp
push
add
in
dec
or
clc
fisubs
add
add
cmp
clc
mov
mov
fs
jno
add
data16
int3
cmc
jo
add
clc
stos
jecxz
mov
clc
jp
add
adc
iret
pop
clc
scas
jo
add
mov
jle
jl
pusha
add
jbe
clc
int3
lock
dec
data16
mov
stos
mov
lahf
adc
add
or
lods
test
scas
pop
repnz
clc
std
pusha
add
push
add
add
push
stc
data16
inc
clc
adc
add
hlt
test
add
add
push
add
add
add
push
clc
jae
add
test
push
fs
add
add
mov
adc
add
clc
gs
dec
xor
add
add
mov
nop
jbe
mov
clc
jbe
pop
in
mov
clc
rcrl
aaa
push
add
popa
add
push
add
in
lods
add
jmp
fwait
xchg
bound
add
popa
add
fidivl
je
dec
pop
pusha
add
testl
sub
dec
xlat
ja
add
fs
pop
mov
push
insb
xor
add
clc
fisubrl
sub
cmp
addr16
call
mov
mov
xchg
fwait
xchg
push
add
loopne
movsl
clc
dec
sbb
cmp
lods
ljmp
mov
addr16
jno
add
clc
dec
iret
pop
rcll
push
pop
daa
clc
mov
mov
sahf
cmp
xchg
call
adc
add
jecxz
mov
add
fisubrs
add
xchg
fs
sbb
clc
add
add
cs
xor
add
mov
add
mov
loope
popa
add
cmp
sub
and
add
shl
fwait
and
add
clc
js
jb
add
add
std
or
xchg
je
mov
and
add
add
ss
adc
add
stc
push
add
repnz
pop
adc
jp
movsl
clc
out
fbld
and
ss
cmp
clc
int3
fs
xchg
jno
add
clc
fistps
es
ss
bound
add
stos
push
ljmp
mov
add
out
push
sbb
push
clc
add
add
into
out
mov
push
mov
clc
sti
je
icebp
fwait
cld
lahf
testl
movsl
clc
test
cmc
and
clc
sbb
clc
cmp
adc
pusha
add
cmp
push
clc
mov
xbegin
sub
lock
add
add
pop
add
push
or
jmp
mov
clc
xlat
divl
pop
mov
jae
add
and
icebp
inc
clc
popf
mov
clc
mov
clc
cmp
inc
clc
dec
ds
in
fs
sbb
add
and
pop
lret
dec
mov
sti
scas
in
and
add
jg
clc
mov
mov
ret
inc
clc
pop
add
add
clc
cld
fidivs
push
mov
add
inc
add
imul
add
xor
add
cmpsl
clc
imul
gs
pop
cltd
inc
add
loopne
lods
or
loop
xbegin
out
sub
hlt
or
mov
inc
clc
mov
popf
scas
dec
scas
imull
and
or
jno
add
add
sbb
clc
out
repz
mov
clc
mov
lods
cli
mov
xor
clc
popa
add
pop
pusha
add
lods
enter
pop
and
add
lret
jg
vzeroupper
or
cmp
clc
xchg
enter
jbe
sbb
adc
add
loop
fs
push
add
in
jae
add
lcall
sub
sbb
clc
pop
or
clc
sar
clc
pusha
add
jle
cmpsl
clc
or
lret
mov
xchg
xor
jge
xchg
das
jo
add
push
ja
int3
adc
in
mov
add
push
daa
clc
fildll
aaa
insl
add
add
add
inc
add
repnz
clc
xbegin
lea
sub
adc
add
clc
sti
repz
add
jp
and
add
xor
add
jo
add
fst
pop
aam
sub
cmp
jns
pusha
add
popf
jp
sbb
add
and
adc
clc
mov
in
mov
inc
clc
push
xchg
test
ss
inc
clc
icebp
or
bound
add
add
mov
cmp
clc
sub
ljmp
fldt
mov
clc
aad
clc
iret
cmp
add
mov
add
or
sub
call
clc
adc
add
sar
in
inc
add
call
add
nop
pop
repnz
mov
jp
mov
clc
or
imul
lret
xchg
adc
add
ret
cmp
clc
push
clc
push
add
push
add
push
clc
or
add
mov
mov
inc
add
push
ljmp
loopne
pop
sti
fidivrs
inc
add
mov
clc
nop
enter
add
cmp
mov
push
xchg
mov
xor
adc
add
inc
clc
push
add
cld
cmp
clc
add
add
cmp
add
notl
add
add
clc
test
mov
sub
insb
sti
inc
add
mov
cmp
movsl
clc
dec
jg,pt
clc
jle
clc
mov
sbb
fadd
clc
xchg
cld
xabort
jp
dec
xchg
add
add
in
cmp
mov
add
aaa
mov
pushf
out
adc
add
rcll
clc
movsb
clc
mov
xchg
sbb
add
add
xchg
and
add
ret
clc
jb
add
clc
test
add
add
clc
js,pt
add
dec
in
xor
push
jo
add
add
lods
mov
movlps
add
std
push
add
ret
jmp
inc
add
jbe
clc
iret
mov
adc
add
xor
add
clc
pushf
pop
popf
push
add
sbb
clc
bound
add
add
mov
push
and
add
pushf
dec
jo
add
add
in
sahf
mov
mov
cmp
fmul
jno
add
jg
stos
jnp
jecxz
aad
aaa
cli
es
mov
clc
in
aas
xchg
stos
or
sub
clc
pop
aas
inc
add
xchg
loop
in
lret
cmp
add
mov
cmp
push
add
pop
inc
add
std
jmp
aam
cmp
add
add
add
add
decl
lods
inc
clc
bound
add
cmc
mov
xor
add
mov
popf
stc
outsb
cltd
mov
xchg
in
das
ss
clc
loop
daa
clc
ret
sarl
in
push
jo
add
or
lcall
test
jg
clc
mov
dec
push
add
fisubrl
xor
add
add
inc
clc
xbegin
xchg
dec
cmp
hlt
addr16
clc
jmp
clc
test
mov
clc
fcoml
add
test
push
add
js
clc
pop
std
std
mov
or
mov
add
cmpsl
clc
ret
push
in
mov
push
add
sbb
add
add
and
and
add
xbegin
clc
cli
cltd
inc
clc
mov
clc
in
push
clc
dec
xor
add
add
mov
dec
jge
clc
mov
add
clc
loopne
cli
mov
add
ja
clc
cmc
sub
hlt
ret
lea
add
add
jle
scas
adc
add
int
ljmp
pop
mov
sub
clc
loope
jg
xchg
scas
xor
add
ret
clc
inc
clc
test
add
cld
cmp
clc
loop
imul
imul
clc
adc
test
je
sbb
clc
inc
clc
adc
add
clc
inc
clc
adc
push
add
jg
xchg
int
adc
mov
clc
sar
and
add
loopne
movsb
clc
mov
mov
clc
sar
mov
movsb
clc
in
pop
arpl
add
xlat
mov
sar
add
add
loope
mov
fwait
inc
add
in
icebp
jo
add
add
jno
add
cmpsl
clc
pusha
add
push
add
mov
hlt
mov
add
xchg
int
clc
ja
add
daa
clc
jns,pt
shll
clc
inc
add
xchg
aad
test
stos
cmp
mov
sti
sahf
test
inc
clc
lock
clc
xchg
pop
clc
lcall
idivl
clc
cltd
jl
inc
add
inc
clc
cmp
into
sbb
add
inc
add
outsb
mov
cmp
push
add
loop
add
add
sbb
add
add
clc
ss
mov
add
int3
push
fldcw
mov
sub
clc
in
js
iret
cmp
or
lods
enter
add
clc
clc
inc
add
inc
clc
jo
add
int
lods
rol
clc
jb
add
add
add
xor
add
add
or
add
lret
clc
add
clc
mov
lods
xchg
clc
dec
in
cmp
imul
int
into
push
add
rcr
enter
push
aad
or
lret
pop
mov
clc
and
add
xchg
in
or
mov
je
xor
add
clc
jno
add
add
jle
add
or
clc
xor
sbb
push
clc
rclb
add
xor
clc
inc
add
sub
clc
shrb
clc
fldt
bound
add
dec
add
mov
dec
add
add
add
arpl
add
add
fsubs
clc
mov
fs
mov
sbb
fs
pop
add
add
clc
push
xchg
insl
in
je
add
mov
clc
stc
jne
add
loope
dec
into
negl
xchg
mov
xchg
adc
add
in
mov
xchg
mov
pop
lcall
out
cltd
push
cmp
add
xor
add
arpl
add
mov
imulb
add
xor
add
add
sub
add
fs
repz
xor
add
adc
add
ds
stc
fcomps
add
or
clc
insb
in
or
sub
clc
xlat
cmp
add
push
push
jns
jns
sbb
add
add
clc
repnz
add
jmp
clc
iret
aad
add
jl
mov
add
pop
clc
xor
imul
add
out
je
jb
add
sti
lods
and
sbb
add
sar
add
iret
fcmovne
int3
sar
fsubrl
frstor
sti
mov
sub
pop
mov
outsl
fwait
shlb
add
movsb
clc
and
xchg
jle
add
bound
add
clc
push
icebp
xor
add
jbe
add
ss
clc
aad
pop
scas
cmp
clc
push
clc
xor
add
clc
test
add
xchg
test
pop
ja
dec
fmuls
clc
jns
clc
test
int
clc
push
add
test
int3
shll
add
aad
cmpsl
clc
xchg
xlat
add
sar
out
sahf
pushf
iret
dec
das
cmp
inc
add
dec
int3
xor
add
jb
add
daa
clc
push
add
ja
sar
pop
xbegin
push
add
or
mov
add
xbegin
pop
test
push
add
outsl
or
clc
and
add
jnp
clc
push
daa
clc
xchg
pop
insl
and
add
mov
clc
mov
mov
clc
sar
add
fdiv
dec
mov
dec
lods
insl
out
loopne
inc
add
dec
mov
out
pop
scas
cmpsl
clc
cmp
dec
ret
clc
dec
jae
add
xor
clc
sldt
add
enter
add
sbb
jne
mov
dec
divl
in
cmp
mov
roll
add
aaa
movsl
clc
pop
add
add
clc
cli
addr16
jecxz
sub
into
jo
add
sti
mov
clc
dec
cld
je
add
add
clc
inc
add
add
add
lahf
sahf
jno
add
clc
aaa
mov
imul
add
mov
data16
mov
fiadds
sub
clc
loope
imul
clc
dec
cli
push
add
bound
add
add
test
imul
nop
sbb
sbb
fwait
sub
cltd
sahf
sbb
test
lret
jmp
add
lods
xor
push
ficoms
push
scas
mov
jmp
push
imul
sti
adc
add
popa
add
rcll
add
clc
inc
clc
mov
incl
add
add
add
add
xchg
cmp
add
dec
sub
push
mov
add
mov
add
movsb
clc
mov
jae
add
test
jl
inc
clc
fcmovnu
test
cmp
fcompl
xchg
mov
clc
insl
xbegin
popa
add
jecxz
jmp
clc
mov
aad
sbb
xchg
push
adc
add
adc
add
add
pop
push
add
add
imul
and
add
add
daa
clc
sub
aaa
lods
pusha
add
jne
clc
cmp
add
leave
push
add
repz
dec
mulb
lock
dec
dec
sbb
jge
clc
sbb
add
push
nop
mov
clc
insl
adc
add
add
xchg
mov
cmpxchg
add
in
sbb
fstpl
stc
dec
dec
push
shr
fildll
push
sub
clc
movsb
clc
sbb
cmp
clc
es
mov
add
inc
clc
shlb
pop
cmp
clc
jo
add
cmp
add
clc
push
sbb
xchg
xchg
ret
clc
mov
add
push
cmp
clc
jne
clc
out
loope
icebp
cmp
out
fwait
mov
jno
add
add
add
xor
add
mov
fcmovne
jmp
fcom
push
clc
cmp
clc
test
mov
xor
add
pop
fisubl
dec
adc
clc
fld1
jmp
add
pop
push
clc
insb
xchg
bound
add
ret
clc
sub
mov
cmp
add
mov
clc
or
sar
add
pop
loop
in
add
push
add
adc
add
add
repnz
clc
pop
movsb
clc
arpl
add
add
aaa
pop
je
cmp
jae
add
mov
clc
pop
sarl
clc
sbb
jae
add
cmpsl
clc
std
cmc
arpl
add
add
add
push
clc
sar
mov
add
or
pop
or
add
clc
outsl
fistpl
inc
add
inc
clc
xor
add
mov
dec
xor
add
clc
inc
clc
sbb
pop
sbb
inc
add
popa
add
add
mov
mov
adc
add
add
mov
clc
adc
mov
add
movsb
clc
or
xchg
pop
fs
f2xm1
pop
clc
cs
xchg
aad
clc
push
ss
sbb
clc
sar
repnz
add
pusha
add
sub
xor
fisubrs
scas
add
add
add
push
clc
cmp
clc
int
out
gs
fwait
dec
jle
clc
sbb
dec
mov
sbb
faddl
clc
adc
add
pop
lcall
xchg
jecxz
jbe
clc
or
mov
add
add
lock
loope
pop
and
add
in
mov
add
scas
fs
xchg
xbegin
clc
sub
clc
vrcpps
add
aam
clc
std
out
loopne
addr16
leave
fdiv
loope
and
add
add
clc
jle
clc
mov
jle
or
cmp
clc
mov
call
pop
push
arpl
add
add
repz
inc
clc
sbb
add
add
add
xchg
movsl
clc
cmp
clc
push
add
test
clc
jns
xchg
jo
add
xor
jno
add
inc
clc
mov
pop
sbb
xabort
add
ret
clc
jns
clc
loop
lea
xchg
ss
adc
add
add
clc
iret
adc
clc
or
fisttps
xchg
fsubs
jne
add
adc
add
mov
and
add
add
push
jmp
mov
add
lahf
jae
add
in
test
inc
add
pusha
add
xchg
test
xchg
flds
clc
mov
add
mov
xchg
pop
ss
aad
pop
dec
mov
add
decb
add
int3
dec
arpl
add
and
clc
bound
add
pop
push
add
jbe
ret
clc
test
mov
push
add
add
sub
add
mov
add
sub
clc
pop
mov
sbb
out
insl
in
into
out
and
add
pushf
pop
jg
clc
jo
add
push
pop
sbb
dec
cli
icebp
push
add
out
dec
enter
add
and
add
adc
add
cmp
add
xor
add
add
dec
sarl
clc
or
lahf
mov
cmp
mov
add
add
add
mov
jge
ja
jmp
sar
popa
add
xchg
or
inc
clc
mov
sub
nop
jmp
add
add
in
sub
jne
bound
add
add
clc
push
clc
and
inc
clc
aaa
cmp
clc
aad
mov
movsl
clc
jecxz
xlat
test
js
pusha
add
adc
add
test
sbb
pusha
add
lahf
cmp
add
adc
add
loop
cmp
test
add
aad
add
jecxz
jae
add
pmaxub
fwait
mov
or
inc
add
roll
add
add
mov
fwait
pop
mov
outsb
mov
cs
cmp
mov
add
jb
add
movsb
clc
push
pop
cltd
je
xchg
cmp
jmp
clc
scas
int3
movsl
clc
arpl
add
popf
js
xchg
fmulp
insl
pop
inc
clc
clc
push
push
clc
inc
add
xchg
add
add
add
fistps
dec
lods
sti
xchg
call
add
pop
clc
imul
gs
or
push
adc
jmp
ss
add
cmp
add
add
add
add
pop
clc
push
pop
mov
add
inc
add
hlt
jbe
and
add
add
clc
push
pop
test
pop
sub
add
dec
insb
js
clc
push
loope
mov
out
inc
add
fnstenv
out
mov
xchg
xor
add
fstpt
clc
test
clc
and
add
mov
pop
mov
pop
adc
add
add
add
clc
sar
sar
cmp
clc
dec
mov
and
sub
clc
pop
adc
clc
fcmovu
enter
cmp
clc
daa
clc
movsl
clc
fimull
mov
sub
mov
clc
or
clc
in
outsl
arpl
add
or
pushf
movsl
clc
ret
clc
sbb
add
xbegin
add
fwait
int3
sti
inc
clc
insb
add
icebp
add
add
add
lods
imul
clc
push
shll
pop
aaa
jns
clc
clc
movsl
clc
outsb
aaa
daa
clc
nop
bound
add
ss
popa
add
xchg
mov
pushf
lret
push
add
xchg
mov
clc
pop
lea
cmp
push
add
xor
add
push
stc
xchg
xor
add
add
lock
out
cmp
push
add
insb
push
loop
push
dec
int3
sbb
pop
push
clc
jecxz
jle
scas
insl
or
add
test
sbb
and
push
add
add
lret
clc
xor
add
clc
iret
cmp
hlt
outsb
stos
mov
and
add
jbe
cmpsl
clc
adc
add
inc
add
mov
add
popf
dec
es
imul
es
xchg
mov
add
leave
in
sub
add
test
mov
add
xor
add
xchg
in
push
je
push
in
es
sub
push
push
add
dec
cwtl
xchg
ret
clc
mov
movsb
clc
cmp
clc
pop
clc
xor
movsb
clc
gs
lahf
xor
clc
and
add
add
adc
add
and
add
clc
mov
jecxz
cmc
inc
clc
dec
jns
push
add
inc
add
lcall
lahf
xchg
scas
cmc
aaa
ficomps
loope
fmulp
hlt
gs
in
mov
insl
sbb
scas
adc
add
clc
xlat
cmp
cs
adc
pushf
repnz
pop
bnd
ljmp
jne
add
push
mov
clc
add
cli
push
add
dec
insb
xor
add
add
add
add
mov
test
jge
daa
clc
loope
std
gs
sbb
add
xchg
aad
out
adc
das
inc
add
je
mov
xabort
enter
sar
add
add
add
jns
adc
add
outsb
add
jp
push
mov
jns
jbe
clc
test
push
lcall
mov
or
xchg
adc
push
xor
add
pop
mov
add
out
sbb
popa
add
inc
add
add
push
add
call
add
add
jns
add
gs
jg
clc
sub
out
push
clc
mov
add
xchg
clc
mov
movsl
clc
or
clc
cmp
add
pop
rorl
clc
lods
push
add
dec
aas
mov
push
dec
fistps
shll
add
clc
js
add
inc
clc
jbe
div
mov
push
add
sub
mov
fcmovbe
fisubrl
call
mov
clc
cmc
pop
add
add
sti
jne
add
arpl
add
cs
movsb
clc
inc
add
pop
cmp
pop
icebp
xchg
scas
mov
jno
add
clc
and
in
movsb
clc
mov
clc
ret
clc
imul
mov
clc
cltd
icebp
mov
movsb
clc
aas
and
add
clc
jge
push
add
es
test
sub
clc
jbe
or
push
inc
add
mov
lcall
scas
inc
add
test
jp
add
stos
movsb
clc
sbb
pushf
aam
or
adc
out
jns
or
jne
inc
clc
adc
cmp
ss
clc
jg
aas
mov
clc
iret
data16
sti
jae
add
cmc
jl
add
xor
add
clc
nop
add
add
add
cmpsl
clc
xchg
or
fs
lea
clc
jns
mov
ret
clc
sar
xor
clc
leave
hlt
sub
cwtl
sub
clc
xor
add
mov
add
add
add
arpl
add
popa
add
pop
clc
xchg
push
push
insl
in
mov
addr16
jbe
in
icebp
fisttps
inc
clc
add
add
adc
add
sbb
clc
pop
aaa
fisubrs
add
fs
jno
add
jae
add
mov
insb
mov
lods
lods
out
mov
jne
clc
pop
loopne
cwtl
add
dec
rcrb
and
add
mov
ret
clc
addr16
and
sar
sahf
add
add
add
jno
add
add
jbe
imul
adc
clc
push
sub
sahf
icebp
loop
ret
clc
xlat
pop
mov
clc
je
clc
and
repz
xor
xchg
cmpsl
clc
sbb
data16
repz
add
sbb
hlt
add
outsl
enter
jg
enter
xor
add
add
xchg
add
add
push
add
or
in
lret
and
add
dec
out
xchg
xchg
sti
ljmp
add
scas
xlat
xchg
mov
loopne
pusha
add
std
lret
enter
into
push
add
popf
test
add
in
imul
add
or
add
mov
ret
clc
es
jge
add
cli
add
clc
mov
ret
sbb
lcall
lahf
in
fucom
clc
push
add
mov
outsb
mov
add
sub
cmp
dec
cmp
in
dec
jecxz
data16
jns
clc
std
sub
cmp
insb
jns
mov
mov
clc
stc
loope
data16
lret
cltd
call
sbb
add
pop
or
test
add
fs
pusha
add
dec
nop
int
ficoml
add
daa
clc
and
add
push
add
sti
imul
cld
cmpxchg
insl
mov
pushf
mov
pop
jle
clc
je
add
pop
stc
inc
clc
stos
xchg
call
add
in
pop
clc
scas
aaa
mov
clc
mov
mov
sub
pushf
repz
ja
clc
or
xor
add
jl
addr16
jo
add
and
add
dec
fmul
aad
clc
xor
add
out
test
aaa
xchg
sub
add
lock
add
cmp
xchg
int3
pop
negl
push
push
dec
or
add
and
fcomps
mov
clc
enter
xchg
sub
add
out
adc
add
pop
fs
add
add
and
add
clc
movsl
clc
jge
xabort
jo
add
cli
sbb
xchg
or
or
clc
inc
clc
or
loope
repz
add
push
push
adc
add
nop
ret
clc
dec
cmp
data16
xchg
imul
test
cmp
inc
add
insl
push
add
pop
mov
fcoml
add
out
jne
lret
jmp
add
into
or
clc
cmp
sub
clc
cmp
push
sahf
stos
in
pushf
push
fisubs
in
cwtl
dec
mov
jns
clc
pop
test
clc
jno
add
push
clc
fsubrp
test
popf
js
add
inc
clc
int3
add
add
add
divps
fs
xchg
mov
add
lret
add
pop
xor
push
mov
daa
clc
jecxz
xlat
data16
pop
sub
rcrl
add
add
pop
cmp
clc
mov
add
into
hlt
xlat
or
in
and
add
out
push
cmp
add
xchg
int3
cmp
xlat
cmp
add
pop
fldl
sub
add
loopne
loope
push
dec
pop
idivl
aam
add
mov
pop
push
add
pushf
push
clc
add
add
clc
call
add
cmp
inc
add
add
rorb
dec
add
movsl
clc
dec
mov
addr16
sbb
mov
inc
add
xchg
daa
clc
int3
mov
clc
sub
push
mov
sbb
push
stc
pop
dec
lea
dec
stos
sbb
add
in
lock
jmp
leave
mov
add
fsubrs
or
pop
cmp
pop
dec
mov
clc
and
add
and
add
aaa
sar
add
xchg
sub
or
sbb
out
mov
cmp
sub
add
insl
mov
je
out
jnp
clc
xchg
and
add
add
clc
sub
cltd
aam
add
jle
pop
fs
lock
add
pop
xor
add
jnp
in
movsl
clc
inc
add
clc
gs
push
add
adc
add
shll
mov
mov
push
add
push
add
hlt
adc
add
sahf
cmp
cmp
cmp
add
loope
sub
clc
sar
add
jg
dec
mov
pusha
add
leave
fdivrs
popa
add
into
cmp
clc
mov
das
fdivrs
cli
lahf
mov
dec
pop
cmp
sub
add
std
lret
inc
add
and
clc
or
movsb
clc
pop
add
add
mov
repnz
inc
add
popf
mov
add
xchg
fcoml
add
daa
clc
adc
add
aas
rorb
lods
and
pop
clc
ljmp
add
fisttpl
dec
repnz
dec
and
mov
pushf
or
xor
add
fwait
mov
or
jo
add
bound
add
stos
mov
add
fs
adc
test
mov
inc
add
add
add
xlat
fildl
add
add
jle
mov
dec
test
aaa
aas
int3
xbegin
clc
es
push
xor
add
pop
out
mov
add
mull
add
add
and
add
add
add
sti
arpl
add
pop
clc
dec
jno
add
add
or
add
clc
add
add
ret
cmp
daa
clc
cmp
clc
stos
and
add
cmp
push
add
lahf
mov
clc
inc
clc
data16
mov
add
clc
xchg
insl
test
gs
mov
xchg
dec
mov
dec
mov
call
jno
add
add
stos
add
add
clc
loopne
add
add
nop
xor
add
cmpsl
clc
xor
clc
lods
rcll
add
jp
add
xchg
xabort
mov
clc
adc
add
sar
mov
and
add
negb
sub
add
xlat
in
pandn
push
add
inc
clc
jmp
or
inc
clc
lahf
push
add
sahf
rorb
xchg
mov
cmp
int3
cmp
add
pop
mov
lods
fmull
push
loopne
cmp
adc
add
clc
push
add
ret
cli
mov
imulb
mov
clc
nop
adc
incb
clc
in
sbb
insb
sub
clc
sub
es
xor
add
clc
adc
mov
clc
adc
add
stos
xor
add
mov
add
dec
mov
mov
mov
add
pop
clc
enter
sarb
sbb
clc
pop
repz
add
clc
adc
add
clc
pop
clc
popa
add
xor
add
cmp
int3
inc
add
ret
incl
mov
sub
mov
xor
add
cmp
fisttpl
add
aam
add
adc
sar
cmp
pop
add
add
mov
mov
dec
insb
stos
aam
cli
iret
jo
add
cmpsl
clc
jmp
clc
or
pop
clc
imul
fildll
jns
clc
jle
jnp
add
mov
push
add
sub
iret
mov
add
clc
lods
lret
and
add
clc
mov
pop
dec
ret
clc
mov
fisubrl
lcall
clc
in
fs
in
lods
mov
xchg
sbb
clc
call
add
lahf
mov
repnz
clc
xchg
pop
jmp
shlb
add
add
mov
clc
je
test
pop
rorb
sub
repz
xor
add
add
mov
clc
cmp
outsl
inc
add
jno
add
clc
cld
adc
add
out
dec
fs
mov
stos
jbe
mov
dec
and
add
clc
jbe
add
cli
or
movsb
clc
notb
dec
jbe
or
clc
icebp
popa
add
dec
outsl
sbb
push
cmc
sarb
push
add
stc
xor
add
or
es
fisttps
lret
push
add
out
dec
xor
add
sub
clc
outsl
cmpsb
clc
xchg
data16
mov
push
add
jg
jge
sbb
clc
aam
mov
into
fidivrl
rcrl
clc
pop
lea
add
icebp
pop
into
push
in
inc
add
xchg
roll
sbb
shll
add
xchg
sar
add
or
daa
clc
sbb
leave
fnstsw
dec
jge
add
lods
test
fsubs
clc
sahf
or
cmp
mov
clc
push
cmp
icebp
pop
sub
add
shlb
add
dec
stc
fdivs
scas
inc
clc
xor
clc
add
add
frstor
clc
push
add
cltd
push
fisttpl
xor
add
xchg
cmc
outsl
and
add
out
int3
cmp
clc
aaa
sar
fisubl
add
dec
cmpsb
clc
xor
add
clc
jne
xor
add
jmp
cmp
jbe
stc
add
add
out
or
clc
ljmp
jnp
cli
sbb
ja
dec
pop
scas
cld
mov
clc
lock
clc
daa
clc
aam
insl
push
add
and
add
rcll
add
sub
or
xbegin
clc
pushf
outsl
pop
es
pushf
mov
add
clc
imul
ret
or
adc
xbegin
add
aad
add
dec
cmpsl
clc
mov
clc
sub
ljmp
add
or
add
pop
fwait
jmp
clc
xor
mov
lock
jns
pop
sub
jae
add
popf
mov
fs
jle
add
out
pushf
dec
ds
rcr
addr16
cmp
add
inc
add
jmp
clc
sbb
ja
xlat
pushf
cwtl
ljmp
clc
dec
imul
add
mov
add
pop
clc
or
mov
mov
daa
clc
jle
pop
dec
clc
mov
clc
xchg
cmpsb
clc
out
imull
sbb
pushf
adc
add
push
cs
in
push
cmp
add
or
add
pop
pop
daa
clc
insl
insl
or
fsubl
add
clc
cwtl
pop
repz
lahf
xlat
and
pop
push
and
add
or
add
ficoml
add
cli
xchg
jmp
dec
enter
add
add
sar
and
dec
sub
fstpl
dec
lea
scas
dec
adc
add
clc
out
loopne
jae
add
xabort
push
addr16
ret
clc
js
cmp
jno
add
add
add
and
add
adc
add
flds
clc
jg
loop
mov
xchg
mov
out
out
test
ss
lock
pop
jmp
into
into
test
add
dec
stos
clc
repz
clc
push
add
ret
clc
pop
pop
mov
test
or
ljmp
inc
add
sar
inc
clc
push
add
fsubrl
push
add
aaa
aas
push
push
loop
cwtl
outsb
or
dec
ja
adc
out
sub
add
add
clc
push
clc
add
add
ja
out
decb
pop
cmc
dec
adc
add
rorb
aas
mov
cmp
arpl
add
sbb
add
add
mov
add
mov
jns
mov
push
mov
clc
push
inc
add
mov
lea
clc
inc
add
pop
fsubs
clc
rolb
clc
push
rcr
cmpsl
clc
xor
clc
pop
jnp
cmp
mov
cmc
das
push
inc
add
scas
ss
jecxz
push
add
pop
and
bound
add
nop
mulb
clc
fs
repz
mov
stos
mov
clc
popf
dec
jo
add
clc
push
repz
mov
add
stc
inc
clc
aad
lcall
push
add
cmp
mov
clc
dec
jno
add
add
dec
push
setl
cmp
sub
xabort
and
leave
bound
add
add
fs
xabort
or
add
mov
add
sbb
stc
adc
add
stos
mov
add
sar
scas
sub
add
mov
or
clc
pop
ret
add
in
xor
add
jae
add
sahf
lea
add
scas
aaa
and
add
clc
jne
pop
xchg
xlat
inc
clc
xor
mov
add
icebp
mov
ljmp
add
sahf
push
add
pop
clc
dec
aam
clc
cmp
clc
daa
clc
dec
and
add
das
push
clc
imul
add
cmpsl
clc
jge
mov
rorb
xchg
inc
add
roll
add
aad
add
jae
add
clc
xor
add
add
cmc
sbb
xchg
movsl
clc
xchg
sbb
xor
ss
mov
add
jle
in
aam
xor
add
and
xlat
into
mov
ljmp
add
clc
push
ret
arpl
add
cmp
pop
popf
aaa
push
pop
mov
add
int3
icebp
cmpsl
clc
not
js
mov
icebp
icebp
pop
xchg
or
clc
adc
add
add
mov
mov
jnp
adc
add
ret
clc
pop
punpcklwd
add
inc
add
push
lea
add
inc
add
into
push
add
xor
add
jo
add
add
clc
das
outsb
fldcw
inc
add
and
add
fmuls
xchg
cmpsb
clc
mov
add
mov
clc
and
dec
mov
mov
test
sub
pop
pop
ja
stos
inc
add
loop
cmp
xchg
loope
test
aas
mov
je
add
ret
clc
test
outsl
cmp
add
sbb
negl
add
push
popf
push
lods
adc
add
add
mov
clc
pop
imul
cmp
es
jb
add
clc
xchg
gs
loope
jns
dec
push
out
jge
movsl
clc
mov
inc
add
loop
inc
add
cmp
mov
add
daa
clc
movsl
clc
xchg
lock
add
mov
rcrl
xchg
adc
cwtl
mull
leave
pop
inc
clc
jmp
clc
and
add
add
adc
add
nop
stos
jge
and
add
sbb
cmp
clc
xchg
cmp
sub
loopne
push
or
ja
cmpsl
clc
xchg
adc
pop
jp
clc
popa
add
sub
test
shll
add
js
clc
outsl
lahf
sub
clc
xor
cmp
out
cmp
clc
fidivl
pop
fidivs
add
adc
add
js
jle
xchg
adc
add
adc
cmp
add
or
clc
enter
mov
add
imul
clc
adc
add
jecxz
out
scas
add
add
add
clc
data16
push
mov
push
outsl
mov
dec
sub
clc
mov
outsb
xchg
insl
mov
fcmovnb
clc
cltd
aas
pop
cmp
daa
clc
roll
add
add
clc
adc
add
jp
cmp
or
shlb
jae
add
add
jecxz
clc
add
add
mov
sbb
mov
pop
push
add
iret
cwtl
sub
int3
clc
xchg
movsl
clc
loop
arpl
add
into
cmpsl
clc
inc
clc
push
fs
pusha
add
scas
sti
sahf
pop
sar
sar
mov
add
add
push
xor
testb
cmc
fstpl
call
addr16
dec
pop
gs
lock
clc
int3
xchg
fs
popa
add
lock
negl
or
mov
add
xor
loope
outsb
or
add
data16
lcall
ret
clc
rcr
dec
push
add
dec
or
clc
xchg
fs
mov
add
add
in
sbb
lahf
adc
add
adc
add
loop
inc
clc
rcrb
and
add
clc
mov
add
pop
stos
xabort
push
mov
add
pop
dec
sbb
add
lret
outsl
or
add
inc
add
mov
in
stos
sbb
and
rorb
clc
mov
test
mov
mov
imul
add
ds
out
cmp
clc
arpl
add
lahf
push
ret
clc
cmp
jmp
cltd
test
clc
jne
das
fbld
add
in
sub
pop
clc
mov
clc
push
add
xchg
mov
loope,pn
push
mov
mov
clc
adc
add
add
cltd
mov
add
cmp
mov
cmp
push
dec
mov
sbb
movsl
clc
pop
bound
add
cmp
stc
sbb
or
clc
jge
sbb
clc
jp
cmp
into
or
pop
jg
add
add
clc
sbb
sahf
inc
clc
lock
mull
clc
jge
clc
cld
jo
add
adc
add
clc
ds
mov
aam
add
dec
mov
add
mov
bound
add
add
xchg
imul
clc
inc
add
bound
add
lcall
cmp
bound
add
clc
das
aaa
mov
clc
shl
fistl
add
sub
add
in
dec
mov
mov
cmp
clc
test
clc
bound
add
sbb
out
mov
and
add
std
cli
in
leave
jl
clc
mov
clc
out
imul
xchg
lret
add
inc
add
mov
add
mov
jge
clc
sar
clc
test
fsubl
add
inc
clc
pushf
lea
enter
xchg
inc
clc
mov
add
jns
clc
vmovhps
ret
int3
into
in
fwait
mov
rcr
or
xchg
xlat
rorl
add
xabort
clc
scas
test
fldl
add
xchg
packuswb
test
psubw
add
push
iret
out
pop
pop
scas
pop
pushf
xor
add
cmp
add
mov
cld
pop
cli
mov
cmp
add
into
push
das
nop
xchg
sarb
add
out
loopne
mov
sub
repz
jne
clc
repz
add
add
popf
xchg
cmp
clc
gs
in
in
faddl
add
cmp
push
add
xchg
jl
loop
push
fisubs
or
push
pop
inc
add
jb
add
arpl
add
ljmp
mov
fbstp
sar
mov
add
add
add
mov
lcall
add
int3
pop
movsb
clc
sahf
stos
mov
stos
nop
lea
pop
icebp
jae
add
add
cmp
mov
inc
add
pop
sub
cli
dec
dec
dec
push
add
cmp
das
xbegin
add
clc
mov
add
adc
add
adc
add
sti
out
pop
xlat
lret
mov
clc
nop
imul
dec
out
test
xchg
movsl
clc
sub
clc
fcoms
push
adc
add
inc
add
js
clc
aad
mov
test
and
clc
sub
mov
clc
stc
xor
add
clc
pop
gs
popf
pop
jge
clc
push
add
add
inc
clc
dec
jo
add
cmp
enter
das
mov
jne,pn
add
xchg
dec
cmp
lods
jb
add
dec
xchg
iret
fsubr
push
pop
push
add
imul
add
clc
pop
inc
clc
not
cmp
add
jbe
clc
add
pop
rep
push
add
jl
dec
iret
test
daa
clc
cmp
jnp
outsl
pop
jo
add
add
fs
xchg
pop
out
loop
and
add
clc
mov
repnz
or
pop
gs
cmpsl
clc
cmp
jne
cmc
mov
clc
push
clc
test
jl
add
push
add
insl
cmp
bound
add
sar
clc
jl
dec
arpl
add
sub
add
add
das
mov
add
ret
clc
cmp
sbb
add
clc
mov
stc
xlat
out
cmp
push
clc
mov
aas
dec
pop
or
mov
clc
mov
call
push
clc
or
xbegin
clc
and
add
adc
add
mov
test
pop
mov
push
jno
add
clc
xlat
xbegin
clc
xchg
adc
add
push
add
mov
adc
iret
sub
xchg
cmpsb
clc
xchg
inc
add
sar
jge
add
sub
movsl
clc
and
aaa
sarl
hlt
das
out
ljmp
sub
add
sar
ret
clc
icebp
imul
clc
imul
test
add
add
outsb
push
hlt
scas
and
add
shr
pop
icebp
mov
test
clc
or
jle
push
cs
add
je
imul
cmp
inc
add
pop
pop
pop
mov
xor
add
add
push
sbb
std
nop
in
out
xor
add
sub
add
call
lahf
sub
add
pop
adc
add
add
scas
sbb
dec
test
clc
out
pop
pop
das
int
or
add
add
mov
mov
mov
mov
add
add
scas
mov
add
fdivs
icebp
dec
dec
mov
or
das
lcall
lock
clc
cmp
enter
add
xchg
shll
add
cltd
ficoml
add
mov
aaa
aam
add
cmc
or
add
sbb
add
or
clc
push
fstp
insb
sbb
ljmp
in
or
popl
add
mov
add
add
sub
sub
push
or
xchg
cvtdq2ps
clc
fdiv
stos
pop
mov
sbb
clc
mov
dec
cmp
add
inc
clc
popf
movsl
clc
lock
clc
nop
jg
clc
scas
insl
add
add
movsl
clc
push
fs
es
inc
clc
sub
popa
add
fstpl
sti
inc
add
repz
add
add
mov
sar
dec
sti
test
clc
test
addr16
stc
sub
data16
mov
add
or
insb
dec
in
fdiv
cmp
clc
lods
cwtl
jge
cmp
arpl
add
clc
add
dec
xor
add
clc
mov
imul
jbe
clc
adc
cli
mov
mov
pop
enter
jbe
add
fwait
mov
or
movsl
clc
daa
clc
arpl
add
clc
int3
aam
icebp
test
adc
adc
add
push
rcrb
aam
arpl
add
clc
add
add
clc
adc
or
clc
mov
clc
pop
pop
xchg
adc
pop
jmp
fwait
push
jp
pop
clc
mov
jp
lret
out
pusha
add
stc
aad
std
int
fnstenv
add
add
mov
add
insb
icebp
mov
mov
add
jp
out
popa
add
push
mov
nop
inc
add
dec
icebp
mov
mov
ret
add
mov
sub
data16
or
cmp
pop
and
or
bound
add
sti
lods
xchg
or
jnp
add
cld
push
add
int3
xor
add
mov
clc
test
clc
push
jmp
add
mov
int3
add
add
clc
adc
add
add
add
add
ljmp
pop
jecxz
addr16
sti
lods
sti
mov
clc
dec
js
popa
add
daa
clc
pop
xor
add
nop
in
dec
in
pusha
add
push
add
mov
sub
add
mov
add
fwait
scas
gs
cmp
clc
jnp
clc
das
mov
cmp
jbe
clc
nop
cld
out
xchg
movsb
clc
scas
imul
jo
add
mov
clc
dec
mov
sbb
clc
sbb
jecxz
test
ficoml
clc
sub
xchg
inc
clc
flds
and
aam
data16
xor
add
repz
jmp
repz
adc
add
jmp
lods
pop
push
push
add
adc
add
mov
jne
clc
loop
fbld
ss
iret
test
mov
add
add
clc
loop,pt
jns
clc
mov
push
inc
clc
mov
push
add
sarl
add
test
add
in
push
sbb
mov
jno
add
jge
xor
add
and
faddl
gs
mov
fadd
clc
fwait
bound
add
mov
pop
fisubrs
ret
clc
outsb
movsb
clc
push
xor
add
push
add
xchg
ja
clc
dec
or
mov
sahf
fwait
daa
clc
lods
add
add
cmp
clc
and
addr16
into
xchg
fs
shlb
lahf
lock
mov
clc
in
pop
pushf
xchg
sub
sbb
mov
gs
outsb
or
push
mov
clc
mov
xor
add
add
add
aas
xchg
push
add
ljmp
add
push
add
sbb
test
xchg
jecxz
xor
add
add
cmp
clc
dec
nop
insb
pop
xor
clc
sub
mov
repz
add
add
clc
out
pop
adc
add
ret
clc
aad
sahf
sbb
sahf
ss
clc
in
mov
adc
pop
or
add
insl
mov
clc
push
xor
add
test
jb
add
in
jge
or
mov
insb
xor
add
imul
stos
lahf
jg
mov
and
add
add
gs
pop
clc
mov
clc
mov
pop
aad
fadds
xchg
xchg
scas
dec
out
jg
cmp
clc
inc
add
fisubrl
mov
shll
add
xor
add
add
test
fs
pop
lret
clc
stos
sub
xor
add
sbb
clc
cmp
push
inc
add
push
iret
es
mov
lods
lahf
cmc
out
push
push
add
adc
add
addr16
push
add
adc
add
add
mov
sbb
ds
dec
xchg
mov
loope
mov
push
add
dec
mov
sub
int
sar
sub
or
jnp
push
add
xchg
loop
mov
cmp
mov
xchg
lcall
jge
mov
add
push
add
adc
pop
clc
xor
cmp
clc
or
xabort
mov
clc
or
hlt
jmp
lahf
mov
xbegin
mov
clc
ja
add
mov
imulb
sbb
add
out
test
clc
push
add
in
jle
add
add
sbb
dec
inc
add
leave
pusha
add
sar
jae
add
clc
jne
xchg
dec
cmp
jge
add
mov
clc
mov
pop
inc
add
addr16
inc
clc
out
push
add
icebp
rclb
or
clc
repnz
cmpsl
clc
pop
cwtl
shrl
mov
dec
pop
fidivl
test
outsl
aam
clc
mov
add
test
pop
rolb
clc
test
pop
jp
mov
xchg
sub
aam
clc
jle
add
mov
loop
mov
add
pop
clc
or
pushf
fld
clc
fwait
popa
add
insl
or
dec
xor
add
outsl
inc
add
inc
clc
or
xlat
push
add
xchg
imul
int
clc
and
add
cli
jbe
cmp
clc
mov
add
xor
add
push
loopne
stc
divl
pop
fisttpl
lods
push
dec
ljmp
lods
inc
add
in
fwait
fwait
int3
sarl
cmp
add
pop
clc
pop
ss
add
add
psubb
out
jbe
scas
inc
clc
or
add
pop
cmp
add
inc
add
lret
jle
clc
rorl
clc
lahf
js
incb
xchg
test
pop
fisubrl
cmp
sub
jle
clc
xor
add
clc
mov
out
sbb
add
mov
cmp
sbb
pop
cmp
xchg
mov
sbb
in
dec
sub
clc
pop
arpl
add
mov
mov
vsqrtps
add
add
sti
mov
call
add
clc
leave
sub
clc
mov
insb
sub
inc
add
fstpl
clc
pop
pop
or
pushf
icebp
stc
mov
scas
and
add
mov
leave
pushf
jne
test
add
stos
leave
movsb
clc
cltd
pop
ds
clc
xbegin
sbb
clc
push
add
cmp
fcomps
xor
add
out
push
stos
bound
add
clc
add
add
clc
out
xbegin
fwait
mov
xchg
xor
test
push
loop
lods
xlat
lahf
int
cmc
rcr
mov
stos
or
xlat
cmp
add
icebp
xchg
shlb
add
xlat
mov
cmp
clc
inc
clc
inc
add
mov
add
aaa
pusha
add
call
adc
fistpll
mov
mov
clc
fistl
add
repnz
mov
clc
lret
js
clc
jge
in
sbb
clc
add
pop
bound
add
push
add
jmp
xchg
loop
in
inc
clc
push
add
mov
clc
or
rclb
push
or
xchg
jno
add
sar
add
in
outsb
add
pop
inc
add
dec
and
add
add
add
add
movsb
clc
pop
notb
rclb
add
inc
add
dec
addr16
pop
popf
test
clc
ret
clc
icebp
dec
xor
gs
push
or
add
and
add
clc
mov
clc
popf
movsl
clc
mov
ss
cmovnp
add
clc
fdivrl
add
add
add
add
add
clc
sar
aaa
cmpsl
clc
cmp
clc
and
add
lret
add
add
sbb
pop
pusha
add
or
sahf
push
stos
in
cltd
mov
push
clc
adc
fidivrl
mov
and
add
add
jbe
sar
inc
add
jecxz
xor
es
nop
sete
or
add
fbld
clc
clc
pop
push
outsb
pop
dec
lods
cmp
xor
add
clc
mov
add
add
rol
clc
sar
clc
xor
add
push
imul
clc
lret
ljmp
clc
jno
add
xchg
shl
jnp
fs
cmc
sbb
clc
or
inc
clc
stc
mov
cmp
clc
lret
cmp
fistpl
pop
sub
clc
mov
ss
clc
in
jge
clc
call
clc
xabort
test
mov
test
push
add
movsb
clc
fdivrl
xor
add
mov
adc
pop
das
push
ficompl
clc
add
add
out
jle
mov
leave
imull
pop
clc
pop
jne
and
add
add
push
clc
jecxz
insl
mov
int
clc
das
mov
xchg
sub
clc
lods
fimuls
dec
movsl
clc
xchg
arpl
add
dec
test
shlb
add
dec
cmp
jns
clc
inc
add
inc
add
gs
in
inc
clc
jecxz
in
fldl2t
imul
jns
inc
clc
jb
add
or
into
dec
sbb
add
ljmp
mov
jp
hlt
mov
mov
cmpsl
clc
int3
sub
pop
loop
sbb
add
clc
cmpsl
clc
sbb
xchg
out
pop
add
add
clc
movsb
clc
mov
clc
mov
imul
add
sub
pop
popa
add
inc
add
xchg
pop
sbb
sub
add
cmp
push
dec
aam
add
jecxz
lods
sbb
xlat
dec
clc
or
clc
pusha
add
dec
movsl
clc
cmp
enter
std
in
mov
ficompl
sbb
jmp
jmp
clc
gs
fldl
clc
push
clc
bound
add
jns
loop
sub
sub
add
imul
sahf
lret
test
pusha
add
faddl
clc
xor
add
xlat
fisttpll
clc
pushf
pop
test
je
aaa
fiadds
clc
mov
loope
insl
enter
icebp
pop
je
add
data16
pushf
insb
mov
cmpsb
clc
clc
add
push
clc
outsb
xor
add
cwtl
pop
clc
out
push
push
clc
scas
outsb
icebp
and
add
imulb
push
add
and
add
add
jbe
jno
add
xor
add
pusha
add
cmp
std
mov
add
cmp
push
bound
add
pop
dec
in
push
xchg
push
add
fwait
daa
clc
inc
add
in
in
add
add
vrsqrtps
add
xchg
das
dec
add
add
mov
lret
es
iret
adc
add
xchg
jae
add
push
fwait
jbe
add
icebp
stc
pop
jmp
jo
add
clc
std
jp
pop
fdivl
fisubrs
xor
add
loop
pop
push
clc
xor
clc
sub
fildl
lods
push
dec
cmp
xchg
dec
enter
push
add
push
add
cmpsl
clc
xchg
stos
mov
jb
add
fwait
mov
push
ret
clc
cmc
mov
xor
add
jg
or
mov
clc
dec
dec
daa
clc
call
mov
movsl
clc
fucomp
mov
add
adc
add
inc
clc
into
vmovntps
pop
xchg
dec
xchg
inc
clc
push
add
add
xor
arpl
add
clc
aas
gs
and
add
clc
push
nop
mov
clc
xchg
pushf
pop
pop
cmc
adc
add
clc
out
add
add
clc
mov
mov
sar
pop
ljmp
sti
fucompp
xchg
pop
sar
xor
add
cmp
adc
add
clc
sbb
push
mov
add
ja
iret
xor
popa
add
cmp
clc
mov
dec
cmp
fistps
cmp
fdivr
loop
icebp
jns
clc
aaa
sbb
add
outsl
test
bound
add
mov
sbb
add
jbe
jns
mov
add
test
into
mov
aaa
dec
pop
daa
clc
jb
add
sub
clc
out
sbb
add
and
add
xlat
jg
or
cltd
clc
xchg
sar
cmp
xchg
inc
add
jne
setle
lcall
clc
clc
fcmove
fs
fidivrl
jb
add
iret
and
sbb
loope
sbb
add
and
add
fildl
clc
dec
clc
and
add
sbb
cmp
mov
test
xor
add
add
sbb
nop
into
adc
add
ljmp
push
popf
loope
push
clc
push
sub
add
or
movsl
clc
xbegin
mov
add
cltd
shll
pop
mov
ds
and
test
popa
add
xor
inc
clc
adc
add
adc
add
test
cmp
pusha
add
push
sub
pusha
add
ret
clc
sar
add
cmc
test
popa
add
and
add
adc
add
test
scas
in
repnz
fs
cmp
and
add
aaa
mov
add
xlat
cmp
xchg
faddp
clc
icebp
mov
clc
data16
mov
push
jb
add
scas
iret
push
sbb
or
sub
add
inc
clc
fistpl
push
add
push
clc
shlb
pop
in
xchg
pop
nop
cs
stos
push
add
add
add
push
add
js
jmp
add
and
clc
xor
clc
add
add
clc
xchg
push
je
cwtl
rolb
add
mov
in
sahf
adc
popf
lret
and
lods
into
dec
xlat
sahf
adc
add
xchg
or
insl
imul
shrb
fwait
push
push
add
addr16
add
fsubs
add
fists
add
imul
add
mov
add
cmp
sbb
pop
outsl
xor
add
clc
or
clc
negl
jbe
gs
jne
lcall
clc
sub
popa
add
xor
add
dec
test
inc
clc
xchg
cmp
pop
clc
fisttpll
test
dec
ret
clc
xor
add
add
notb
clc
mov
mov
inc
add
xor
add
push
push
das
sti
add
add
dec
and
add
into
cmp
add
js
clc
sub
add
mov
add
ret
mov
xor
add
sbb
clc
and
add
lcall
push
add
lea
jecxz
jg
clc
mov
add
pop
inc
add
iret
movsl
clc
push
ja
inc
clc
es
lret
push
xor
addr16
mov
cmc
mov
imul
add
clc
ljmp
add
push
je
mov
int3
jbe
fnsave
clc
adc
add
or
mov
clc
jne
ja
clc
sbb
push
pop
clc
push
jae
add
cli
jge
pusha
add
lods
out
sbb
loop
repnz
add
in
jb
add
add
add
add
push
clc
xor
add
add
mov
mov
pop
hlt
push
add
sbb
cmp
imul
popa
add
sub
inc
clc
cmp
sarb
xor
add
add
in
or
mov
add
bnd
add
jbe
push
clc
test
or
add
dec
xchg
fwait
lret
lret
aam
add
mov
clc
gs
xchg
arpl
add
lods
xor
add
clc
das
jne
clc
dec
addr16
cmp
clc
inc
clc
outsl
adc
sti
xchg
leave
push
sbb
clc
and
add
clc
sub
mov
add
clc
and
pop
dec
pushf
or
mov
lods
jge
add
pop
das
out
decb
jo
add
add
add
add
add
add
dec
and
add
clc
loopne
imul
clc
mov
mov
scas
sub
jb
add
pop
add
add
xchg
jo
add
add
mov
xabort
cmp
add
add
jb
add
add
add
add
mov
bound
add
sti
add
fimull
add
push
ljmp
sar
movsb
clc
mov
pop
and
jge
clc
out
adc
add
clc
adc
add
add
jle
adc
add
add
addr16
jmp
xor
add
mov
inc
add
fs
test
add
mov
stos
xchg
test
cli
sub
clc
inc
add
nop
hlt
cs
clc
ss
aaa
sbb
clc
scas
mov
clc
jp
clc
push
clc
mov
sbb
and
jo
add
outsb
cmp
clc
addr16
xchg
popl
add
arpl
add
add
add
add
inc
clc
mov
adc
add
outsb
inc
clc
pop
mov
ret
mov
push
add
xchg
mov
clc
daa
clc
imul
sub
mov
pusha
add
jae
add
je
clc
test
clc
push
add
data16
xor
add
add
sub
clc
fsubrs
add
clc
ret
clc
jne
jle
clc
push
push
xchg
call
or
jg
jno
add
add
or
mov
cmp
xchg
pop
ja
or
cmp
push
clc
je
pushf
mov
sbb
clc
mov
push
add
add
clc
repz
or
add
clc
push
add
inc
clc
sbb
add
mov
add
cmc
stos
aad
cmpsl
clc
jne
and
sbb
sar
push
add
ja
aaa
dec
std
dec
sbb
push
add
xchg
mov
cmp
push
pop
cmp
out
aaa
xlat
fs
cmp
clc
stos
jmp
sar
xchg
inc
add
xor
add
stos
fisubs
jbe
loope
imul
jge
clc
push
inc
clc
fldt
dec
sti
mov
movsl
clc
cmpsb
clc
lea
mov
clc
cmp
push
add
stc
jecxz
cmp
pop
mov
clc
mov
pusha
add
test
dec
aad
sbb
clc
aaa
out
mov
pushf
fldcw
ljmp
add
pop
xchg
pop
push
mov
mov
popf
mov
add
add
add
add
mov
scas
cmp
fistpl
inc
clc
mov
mov
cltd
mov
fcompl
imul
lret
pushf
sbb
outsl
cmp
clc
and
add
pop
jo
add
mov
mov
jb
add
clc
mov
inc
clc
add
push
add
daa
clc
xchg
loopne
push
add
inc
clc
pop
ljmp
jmp
mov
int3
cmp
add
dec
mov
out
loopne
pop
jecxz
cwtl
adc
add
clc
gs
xor
add
flds
xchg
fnsave
add
cmpsl
clc
add
fadd
clc
mov
add
scas
mov
fmull
add
jg
and
add
add
insb
out
test
jecxz
mov
xor
pop
push
sub
add
mov
ja
clc
cli
insl
or
add
ss
cld
adc
cmp
clc
out
inc
clc
jle
scas
push
add
repnz
outsb
or
mov
clc
pushf
xor
clc
cltd
test
out
clc
hlt
sbb
xor
add
add
lret
pop
jbe
clc
loopne
ret
clc
sti
jae
add
push
cmpsl
clc
pusha
add
xchg
mov
clc
jp
add
test
clc
imul
jno
add
add
push
loopne
stos
mov
cvtps2pi
test
clc
mov
add
and
add
add
mov
push
add
aam
lods
jge
mov
clc
jecxz
fcmovb
clc
enter
clc
daa
clc
ja
std
push
icebp
pushf
loope
cmp
clc
pop
xchg
xchg
pop
fstpl
sar
add
xchg
cmp
inc
add
and
add
sub
sti
fwait
jmp
and
inc
clc
push
add
js
xbegin
push
add
jg
fs
pop
aad
add
add
adc
clc
clc
js
sbb
clc
into
movsl
clc
inc
add
push
clc
ret
clc
fs
sub
add
sub
and
add
mov
scas
inc
clc
fdivs
add
or
clc
fistpll
xor
add
mov
iret
mov
pop
pop
and
add
clc
cmpsl
clc
jo
add
add
jo
add
cs
in
push
sahf
sub
inc
add
mov
pushf
jne
add
inc
add
psrad
adc
lret
daa
clc
mov
clc
jns
iret
push
test
add
jno
add
pop
jno
add
cltd
movsl
clc
in
cld
fdiv
sbb
add
mov
add
mov
sub
push
cmpsl
clc
clc
sbb
xchg
test
mov
jp
clc
pusha
add
test
adc
add
xchg
jb
add
lea
clc
bswap
gs
lods
pusha
add
mov
add
add
clc
add
inc
add
cwtl
sbb
dec
fsincos
outsb
mov
mov
clc
push
add
xchg
outsl
jbe
jno
add
je
ljmp
aam
lods
loop
fdivs
add
dec
dec
inc
clc
idivb
add
fsubr
clc
movsb
clc
pop
jno
add
sbb
movsl
clc
mov
add
dec
pushf
daa
clc
ret
jo
add
jmp
jg
sti
out
ljmp
ja
cmp
int3
out
bound
add
clc
or
add
push
add
or
je
clc
imul
and
add
push
out
sbb
push
add
pop
insb
inc
add
sahf
cmp
clc
sub
dec
addr16
mov
clc
jp
mov
loopne
je
in
lcall
xabort
mov
add
stos
lret
xchg
jne
in
cwtl
loop
call
ljmp
add
mov
push
add
je
fsubl
add
sbb
ss
or
mov
xchg
lahf
mov
add
sub
and
enter
cmp
sub
cmc
clc
pop
xchg
pop
jb
add
or
jne
adc
movsb
clc
fdivs
add
fstpt
sub
add
stc
clc
jp
clc
mov
xabort
pop
dec
out
inc
add
xbegin
mov
add
insl
aaa
je
lcall
cwtl
scas
lcall
cltd
jmp
adc
sub
xchg
repnz
dec
sub
aad
enter
aam
clc
mov
mov
loop
dec
lock
ss
lahf
icebp
mov
add
add
jnp
clc
fsts
adc
add
clc
and
add
int3
add
add
add
adc
add
adc
clc
sbb
jne
fisttps
xchg
xor
clc
dec
sub
add
xabort
jae
add
call
inc
add
mov
fdivl
add
icebp
lcall
cmp
xchg
cmp
xor
imul
pop
loope
fisubl
movsb
clc
cmc
adc
add
pop
das
mov
push
pop
and
add
inc
clc
test
lods
or
add
gs
out
mov
add
push
cmp
aas
jmp
jbe
add
js
cmp
push
clc
or
leave
dec
cmc
sbb
divb
inc
clc
inc
add
mov
jne
clc
dec
stos
sbb
fwait
scas
push
lret
fsts
add
dec
sbb
aaa
xchg
mov
add
stos
or
add
js
add
jmp
repz
add
mov
jg
clc
mov
xor
add
sbb
sar
aas
adc
add
cmpsl
clc
cmp
sub
addr16
in
cmp
cltd
pop
insl
sbb
daa
clc
or
inc
clc
sar
clc
push
add
jecxz
xchg
pop
test
add
cmp
jg
clc
pushf
adc
add
clc
mov
ja
bound
add
xchg
lahf
dec
jle
pop
sbb
add
popa
add
cld
aad
push
jecxz
sar
xchg
int
xor
add
push
mov
clc
adc
add
add
adc
add
ss
jg
lods
fimull
add
mov
cmpsl
clc
lods
ds
and
add
shll
add
std
movsb
clc
sti
mov
dec
mov
inc
clc
inc
add
ds
jno
add
jb
add
punpckhwd
shlb
cmp
stc
mov
clc
fcomps
push
das
mov
sti
dec
sar
inc
clc
std
xchg
jb
add
push
clc
xchg
test
clc
dec
cmp
clc
fsubr
iret
jmp
push
add
cmp
clc
int3
rolb
add
jl
clc
and
cs
and
ds
push
sbb
out
or
add
cmp
popf
fsubrl
data16
and
add
clc
xchg
aas
xor
add
clc
add
add
lahf
movsl
clc
push
push
add
pop
in
ret
clc
adc
add
add
pop
jp
clc
xchg
add
add
movsl
clc
and
add
cmp
add
dec
or
aad
add
std
aam
push
arpl
add
clc
jb
add
jp
xchg
iret
into
sub
mov
clc
daa
clc
mov
incb
add
sar
add
sbb
jp
clc
mov
add
inc
clc
cld
fs
icebp
pop
clc
dec
push
ret
clc
adc
add
clc
in
imul
clc
dec
addr16
dec
insl
sbb
ret
insb
inc
clc
jl
clc
jle
add
jae
add
clc
mov
nop
xor
add
fstp
sar
aad
mov
add
mov
add
out
cmp
add
mov
mov
cmp
xchg
add
add
pop
clc
idiv
mov
cmp
data16
in
sar
cmc
call
add
add
add
aas
mov
clc
adc
add
lods
out
jge
clc
lret
push
add
lods
adc
add
add
add
add
or
cmpsl
clc
and
add
cmp
push
pop
dec
cli
xchg
inc
clc
stos
push
scas
cmp
dec
dec
mov
sub
clc
rorl
push
add
push
mov
xor
add
inc
clc
xbegin
clc
cli
cmc
mov
sub
aad
clc
jecxz
nopl
popa
add
sbb
loopne
int
add
rcr
iret
lret
inc
add
lea
jg
adc
jp
in
loope
testb
clc
aaa
mov
add
mov
clc
cmpsb
clc
je
add
cmp
fldt
cmp
lcall
xchg
outsb
jecxz
and
add
aad
gs
cmp
nop
pushf
pop
jnp
jp
clc
cli
dec
push
pop
into
or
lret
add
xchg
stc
out
rorb
fdivr
or
add
clc
push
into
pop
shl
sahf
mov
clc
inc
add
push
pop
pop
nop
sub
push
add
sub
clc
fidivrs
faddl
add
clc
or
add
clc
push
add
xchg
aas
test
and
add
aas
sub
add
add
rclb
add
jecxz
pop
and
ret
clc
testl
inc
clc
int
clc
pop
insl
dec
addr16
xchg
xchg
movsb
clc
cmp
adc
add
testb
mov
ja
pop
sbb
sti
mov
add
ret
clc
mov
clc
cli
sbb
clc
xor
add
clc
push
or
cmp
xchg
push
add
add
in
push
dec
push
add
adc
pop
lods
push
dec
add
add
add
adc
add
clc
test
dec
and
add
mov
mov
add
shlb
dec
repnz
das
bound
add
clc
or
repz
add
push
and
add
add
repnz
clc
add
ss
test
xchg
insl
mov
xchg
pop
mov
jo
add
add
pop
mov
mov
bound
add
inc
clc
jns
clc
pop
call
add
add
add
arpl
add
adc
push
mov
add
dec
movsb
clc
cmp
push
pop
xchg
stos
int3
pop
push
mov
clc
ljmp
add
and
add
clc
and
add
cli
cmp
gs
mov
dec
and
add
clc
test
clc
fisubs
add
arpl
add
clc
mov
sbb
roll
clc
das
sar
jecxz
jecxz
clc
mov
insb
mov
add
enter
clc
xchg
lods
or
xabort
fadd
clc
test
cmpsb
clc
sar
jle
jb
add
dec
dec
loope
jge
add
repz
push
aaa
in
cltd
jo
add
add
add
clc
xchg
das
pop
mov
add
aad
clc
pop
push
repnz
inc
add
es
push
add
aaa
jg
ja
clc
mov
add
add
add
add
clc
cli
scas
in
pop
sbb
add
in
cmc
sub
movsb
clc
cmp
xbegin
test
call
scas
aaa
inc
add
fsubrs
push
imul
xor
add
aad
ffreep
clc
or
xor
clc
bound
add
fs
adc
dec
xchg
pop
jns
jo
add
aad
dec
sub
add
fwait
sahf
lret
pop
mov
lret
mov
ja
add
jnp
clc
inc
clc
cmpsl
clc
into
fs
in
fs
jmp
pop
in
loopne
jae
add
add
data16
sti
clc
adc
add
and
add
xbegin
sub
and
add
add
add
cwtl
push
add
shll
add
sar
xabort
fcomps
lock
dec
push
aam
pop
xchg
int
mov
sbb
ljmp
pop
add
add
add
mov
clc
xchg
mov
clc
js
int
sar
xor
jne
clc
dec
clc
cmp
sbb
add
out
cmp
add
frstor
test
mov
clc
fstpl
pop
imul
mov
clc
pop
lods
sar
clc
cwtl
mov
inc
add
rcl
dec
test
xchg
inc
clc
mov
mov
add
inc
add
xor
add
add
inc
clc
jmp
add
jno
add
rcl
push
dec
dec
xbegin
lods
push
add
fistpl
dec
sbb
lods
mov
mov
fs
dec
jo
add
cmp
sar
mov
sahf
inc
add
shll
sbb
add
mov
add
inc
add
lret
xbegin
ret
add
imul
add
clc
jae
add
lods
mov
aas
sub
push
add
cmp
mov
xor
add
fldenv
add
js
mov
clc
out
shlb
add
xor
add
add
clc
add
add
dec
jg
lods
pop
xchg
stos
mov
clc
ret
clc
int
vcmpps
jle
add
clc
imul
test
sarl
test
ss
mov
in
xchg
ss
sarl
adc
add
sbb
add
add
add
cmp
add
clc
mov
cmpsb
clc
jge
mov
mov
clc
cmp
std
xor
add
add
insb
pop
insb
frstor
mov
jmp
mov
add
sar
clc
je
inc
clc
add
dec
and
add
xor
pop
add
rcr
xor
push
add
adc
mov
clc
or
xchg
filds
mov
test
push
clc
pop
in
lods
into
adc
add
add
fwait
mov
aaa
sar
fimuls
gs
xor
add
add
jb
add
add
pop
cmpsb
clc
test
jbe
pop
clc
aaa
adc
add
jno
add
pop
clc
mov
cmp
pop
outsl
rcrb
clc
xchg
push
add
mov
mov
add
nop
dec
jbe
clc
outsb
cmp
sub
dec
fsubr
jg
clc
lock
icebp
or
clc
mov
add
xbegin
push
add
dec
jecxz
sar
pusha
add
sbb
clc
mov
inc
add
inc
add
jbe
outsl
pop
clc
fisttps
or
xlat
mov
inc
add
mov
add
pop
repz
fmuls
leave
pop
mov
xor
add
clc
out
or
add
push
add
jg
and
cwtl
lea
add
test
add
popa
add
sub
pop
stos
pop
inc
clc
mov
add
add
mov
add
jne
or
add
jnp
inc
clc
movsb
clc
loope
xchg
aam
hlt
scas
inc
add
nop
fdivrl
gs
mov
cmp
add
sbb
decl
add
add
rorb
xlat
sub
add
pop
clc
insl
mov
mov
inc
add
and
add
mov
rcll
inc
clc
push
dec
cmpsl
clc
and
add
add
add
add
mov
sub
outsl
mov
in
mov
test
mov
push
add
dec
sar
add
pop
sbb
add
add
mov
test
pop
mov
add
data16
mov
push
add
cmp
pop
cmp
clc
add
add
add
dec
xchg
sar
clc
cmp
mov
xchg
mov
or
leave
add
add
cmp
add
add
add
cmp
add
xchg
sub
clc
push
clc
es
clc
inc
clc
popa
add
sahf
xchg
push
clc
inc
add
and
add
or
test
xor
popf
sbb
clc
push
sub
lea
mov
daa
clc
adc
add
add
in
lea
add
cmp
sub
imul
clc
add
sub
clc
push
nop
pusha
add
dec
xabort
clc
pop
push
add
popa
add
fnstenv
add
mov
add
mov
je
bound
add
insb
mov
add
clc
mov
clc
mov
data16
ds
clc
shlb
scas
nop
xchg
sbb
fcmove
lea
add
mov
add
add
iret
repz
inc
add
mov
mov
pop
fcoml
clc
add
cmp
add
js
push
add
ljmp
push
add
lods
xabort
add
sbb
clc
or
call
clc
mov
xabort
clc
fildl
add
jne
push
clc
xbegin
xchg
pop
fists
add
iret
mov
or
clc
nop
leave
xrelease
and
add
imul
lahf
test
ret
clc
and
add
clc
xlat
sub
add
pop
daa
clc
outsb
test
add
add
add
clc
push
add
lods
cmp
jle
adc
add
add
scas
aam
imul
clc
stc
lret
jnp
dec
mov
add
add
mov
add
test
movsl
clc
bswap
das
jno
add
add
add
movsl
clc
dec
jbe
clc
push
clc
mov
add
xor
repnz
dec
sbb
sub
clc
loopne
ja
clc
jbe
push
add
cmp
add
cmp
or
pushf
pop
xchg
xbegin
push
shr
cmpsb
clc
push
add
or
out
cmp
ljmp
jle
push
pop
pop
test
icebp
add
add
add
clc
cmp
push
outsb
cmp
mov
movsl
clc
add
add
faddl
add
xchg
aam
or
add
enter
jno
add
add
add
std
jbe
xbegin
pop
xor
push
add
xlat
sahf
jnp
clc
jecxz
lret
call
clc
xchg
pop
add
add
jb
add
clc
jle
lahf
push
in
bound
add
cltd
cld
es
xor
cmp
clc
and
pop
pop
inc
add
cmpsl
clc
test
push
clc
or
add
sub
stc
sbb
add
aas
jg
movsl
clc
push
add
jecxz
mov
cwtl
adc
add
mov
mov
js
adc
cmp
nop
in
push
add
test
pusha
add
mov
mov
add
push
and
add
pop
imul
clc
fs
inc
add
adc
add
das
inc
clc
aam
clc
or
add
mov
add
mov
pop
in
cmp
rorl
inc
add
gs
out
cltd
add
add
add
aam
clc
jbe
mov
cmp
or
add
call
mov
add
in
repnz
fnstenv
add
add
ljmp
negl
pushf
imul
clc
out
loopne
jne
clc
in
xchg
cmpsl
clc
out
aaa
repnz
add
add
lea
push
clc
jno
add
ds
adc
add
add
adc
clc
cli
jb
add
pop
lea
mov
outsb
mov
clc
call
cmp
popa
add
jno
add
icebp
loopne
mov
xchg
pusha
add
sub
clc
imul
shll
sar
lret
push
pushf
mov
bound
add
push
das
movsb
clc
add
add
in
cmp
arpl
add
jge
jbe
clc
pop
bound
add
add
icebp
xor
add
test
mov
mov
add
or
add
push
xchg
mov
add
clc
inc
clc
mov
adc
add
pop
mov
sbb
adc
jno
add
clc
sbb
add
cltd
or
pushf
mov
sub
fidivrs
lea
faddp
clc
dec
and
clc
adc
mov
add
fwait
xchg
ja
sahf
jg
add
inc
add
rcrl
pop
jns
mov
adc
add
mov
movsb
clc
dec
roll
push
pushf
fcoml
or
add
add
push
into
push
add
rcr
dec
fs
dec
js
fimull
cmpsb
clc
jp
clc
sub
add
adc
clc
mov
test
scas
cs
add
inc
add
sub
add
cpuid
clc
cmp
add
fstp
fmull
mov
inc
clc
aas
dec
int3
push
add
jae
add
add
xlat
xor
add
repz
xabort
mov
or
add
sti
scas
adc
add
add
fs
scas
fmuls
adc
add
add
ljmp
xchg
xor
add
cmp
add
clc
inc
clc
ja
in
stos
mov
add
stos
sarb
add
outsl
pushf
bound
add
incl
insb
decb
idivl
dec
pop
icebp
mov
add
add
add
inc
clc
fisubrs
mov
jl
or
jp
jno
add
add
dec
mov
insb
cmp
ret
clc
loopne
sub
clc
std
imul
mov
into
add
add
fwait
jl
push
mov
clc
mov
data16
iret
pop
repz
add
mov
add
clc
imul
movsl
clc
xbegin
jno
add
loop
push
add
negb
icebp
adc
add
add
aas
jmp
lcall
jmp
test
cwtl
outsl
out
stc
pop
sbb
dec
scas
sbb
add
out
icebp
dec
jmp
add
clc
cli
xlat
mov
sbb
add
insl
jecxz
add
movsl
clc
icebp
mov
add
xchg
cmp
xor
add
aad
add
adc
ret
sub
out
movsl
clc
hlt
dec
adc
add
imul
fld
clc
adc
add
cld
mov
outsl
cmc
jne
into
out
mov
jmp
jb
add
pop
pop
je
fwait
add
sar
pop
pop
push
pushf
or
jle
add
lahf
jl
add
outsl
ljmp
mov
aam
add
add
dec
ja
hlt
xor
add
clc
mov
jne
add
fcoml
add
mov
je
push
clc
or
mov
add
sbb
cmc
xchg
pop
loop
imul
sbb
xchg
xor
add
lea
hlt
and
add
mov
add
pop
into
cmp
add
add
clc
sbb
push
add
out
iret
pushf
cs
add
add
jge
cmp
add
add
pop
cmpsl
clc
mov
dec
outsb
xchg
cltd
mov
out
xlat
outsl
ljmp
cmp
mov
adc
add
repnz
xor
add
arpl
add
das
or
mov
add
mov
jne
repnz
cmp
mov
out
icebp
fiaddl
nop
dec
mov
add
add
pop
cmp
push
mov
add
cli
xor
add
add
pushl
add
add
clc
aad
add
aas
jle
add
fs
daa
clc
scas
cmp
clc
aad
ljmp
and
add
out
stos
aaa
or
clc
inc
add
bound
add
clc
in
sbb
aad
add
sub
xchg
sub
push
add
dec
xor
clc
pop
jno
add
xlat
adc
add
das
ljmp
ljmp
add
mov
add
decb
pop
xor
and
add
repnz
add
clc
and
roll
dec
mov
add
cld
inc
clc
or
push
add
and
add
push
sti
fidivrs
fbstp
js
and
add
fists
add
xchg
bound
add
add
mov
add
sbb
xlat
jbe
imul
xchg
gs
inc
add
int
cmp
idivb
jmp
add
clc
dec
sub
clc
outsb
iret
icebp
xlat
xlat
jmp
xor
fdivs
repz
add
add
pop
jno
add
aas
mov
add
clc
xchg
and
add
ja
movsb
clc
push
repnz
clc
pop
push
add
mov
pop
jbe
xchg
je
int3
clc
arpl
add
push
clc
adc
and
pop
and
add
add
in
cld
xor
jne
mov
fcoml
mov
mov
clc
aas
push
add
add
push
stos
cmp
mov
iret
cmc
pop
repnz
add
sbb
clc
jle
and
add
lock
and
add
sbb
outsl
sub
clc
sar
imul
jl
enter
cmp
pushl
add
jae
add
add
in
in
mov
add
fsubs
jno
add
clc
lcall
insl
test
cmp
clc
mov
clc
out
mov
mov
clc
cltd
fadds
cmp
mov
je
scas
ljmp
clc
jmp
clc
jge
cld
mov
add
clc
outsb
pushf
icebp
pop
out
dec
jecxz
loope
pop
movhps
jecxz
sbb
xchg
mov
popf
mov
clc
cmp
push
bound
add
jne
aad
xabort
add
in
xor
add
jecxz
ret
clc
dec
call
add
xchg
jg
add
aad
clc
or
clc
lods
cmc
inc
clc
iret
clc
adc
add
add
xor
in
add
add
add
lock
notl
in
dec
jge
xchg
int3
leave
movsb
clc
cmp
dec
imul
jmp
pop
clc
pop
cltd
mov
add
pop
inc
clc
push
add
jns
push
add
mov
lods
popa
add
mov
sub
and
add
inc
add
inc
add
pop
arpl
add
add
clc
sub
clc
xor
add
adc
add
dec
xchg
test
sti
daa
clc
push
add
mov
add
sub
add
mov
clc
js
sub
add
jb
add
add
mov
outsl
fldt
insl
pop
add
mov
xchg
dec
mov
sar
mov
inc
clc
out
ss
lock
clc
jl
clc
lods
pop
je
inc
add
and
add
add
clc
data16
jbe
add
pop
cmp
add
sub
or
clc
push
add
cmc
jb
add
clc
jnp
mov
idivb
stos
push
add
sar
add
dec
movsb
clc
iret
adc
add
add
mov
aaa
ret
clc
lods
sub
sub
sub
clc
inc
add
or
pop
xlat
ret
clc
dec
mov
repz
clc
mov
mov
sbb
xor
add
clc
fnstenv
clc
ja
add
notb
add
inc
add
push
aaa
jle
clc
shr
mov
ret
clc
es
dec
popf
mov
cmp
loope
cmp
repz
clc
sub
rclb
pushf
es
cmp
data16
in
bound
add
add
add
add
loop
icebp
pop
clc
and
mov
jns
inc
clc
mov
sti
clc
push
clc
clc
shrl
jns
add
cld
fs
popf
pushf
xor
add
clc
xor
loope
push
mov
add
push
jns
clc
cmp
mov
fs
dec
xchg
pop
push
clc
mov
cmp
clc
dec
or
push
lahf
or
test
mov
add
pop
cli
test
jmp
test
clc
xchg
movsb
clc
dec
repnz
sub
sub
clc
adc
add
iret
mov
add
add
clc
es
gs
mov
inc
clc
dec
and
add
lcall
jle
clc
jge
mov
add
gs
mov
inc
clc
ljmp
cmp
das
inc
add
scas
mov
or
mov
loopne
mov
add
add
cmpsl
clc
mov
inc
clc
cmp
rcr
pop
fcomi
das
xor
add
fisubrl
pop
dec
dec
outsb
lods
test
dec
add
add
out
sub
sub
clc
push
clc
push
lods
inc
add
cld
mov
dec
add
add
xabort
clc
das
cmp
clc
test
mov
push
aad
sti
mov
pusha
add
xor
add
insl
loop
or
dec
dec
or
push
add
sar
call
and
push
mov
cmc
outsl
mov
aas
addr16
rcl
into
insb
inc
clc
outsl
add
add
stos
cs
cmova
pop
and
jp
stos
insl
mov
clc
leave
add
add
add
mov
loop
sub
jmp
add
out
jne
jmp
out
dec
aam
xchg
daa
clc
jle
cmp
and
fidivl
add
add
jge
xchg
call
clc
test
dec
ljmp
je
add
in
pop
push
add
mov
add
add
pop
in
adc
add
add
add
cmpsb
clc
jbe
add
add
add
in
fiaddl
inc
add
adc
add
clc
push
add
cmp
insl
in
and
cli
fstps
clc
mov
sbb
add
cmp
jno
add
cmpsl
clc
jge
clc
mov
cs
sbb
add
cli
sbb
ja
sbb
pushf
push
xchg
int
add
lahf
idiv
dec
std
out
xchg
cltd
xor
add
add
cmpsb
clc
mov
inc
clc
inc
add
popa
add
push
mov
sbb
clc
sbb
add
mov
pop
imul
add
movsb
clc
scas
mov
clc
out
inc
add
in
fdivs
sbb
pop
push
in
in
movsb
clc
sbb
clc
clc
mov
add
or
add
sbb
add
xchg
stos
add
add
cmp
clc
mov
mov
or
xbegin
jmp
clc
jl
clc
das
push
js
pop
lret
outsl
imul
pop
clc
cld
mov
add
add
sbb
clc
jno
add
in
icebp
pop
mov
shrl
push
add
sub
testb
add
jmp
clc
sbb
add
jb
add
add
mov
push
or
scas
lcall
sbb
mov
add
mov
clc
in
std
push
cmpsb
clc
sar
dec
mov
aaa
jg
xor
add
lock
sti
push
cld
cmp
imul
add
bound
add
mov
inc
clc
dec
std
push
push
add
imul
add
leave
mov
xor
cltd
test
adc
add
rorl
clc
push
cmp
add
adc
add
dec
cld
loopne
data16
push
clc
imul
add
lahf
jns
dec
jno
add
add
add
add
mov
rcl
mov
rclb
insb
inc
clc
fldt
test
lret
and
add
gs
push
shlb
add
dec
add
clc
dec
or
cmp
mov
cltd
cmp
cmp
push
add
mov
add
sar
add
xchg
cmpsl
clc
add
add
add
ss
inc
add
add
add
add
rorb
add
sub
pushf
jb
add
dec
mov
push
fs
lahf
std
fidivl
add
pop
push
mov
call
dec
cmpsl
clc
mov
clc
cmp
clc
jp
clc
into
xchg
aas
jno
add
add
data16
and
add
dec
and
add
add
push
add
ret
dec
add
test
ret
clc
lret
aad
sub
pushf
rorl
push
jmp
pop
out
maxps
clc
es
pop
clc
jbe
clc
fs
scas
mov
clc
aas
mov
movsb
clc
cmp
rclb
add
add
push
pop
aas
dec
or
stc
fsubrl
pop
xor
add
add
cmpsl
clc
std
call
clc
inc
clc
add
mov
mov
add
add
add
clc
stc
add
add
aad
add
loope
icebp
in
push
add
and
dec
rcll
add
clc
sub
clc
movsb
clc
mov
popl
add
add
add
loope
add
add
gs
mov
clc
push
push
jp
cmp
lret
pusha
add
js
js
pop
push
inc
add
stos
mov
in
push
add
pop
inc
clc
mov
add
iret
outsl
out
dec
mov
clc
xchg
scas
sbb
clc
xchg
xor
fldcw
mov
clc
adc
add
push
lods
cld
pop
out
mov
clc
test
mov
clc
push
fidivs
add
push
pop
pop
jns
je
cli
adc
add
adc
add
add
mov
cld
add
outsb
loop
mov
add
push
add
hlt
or
adc
pop
outsb
fwait
push
add
sbb
mov
xchg
dec
movsl
clc
out
xlat
ja
push
add
dec
ret
sar
shrb
add
pop
cs
mov
cmpsb
clc
xor
add
clc
inc
add
sahf
and
mov
inc
clc
repnz
push
add
dec
sbb
add
lcall
add
add
clc
xor
add
clc
pop
push
rcll
add
clc
bswap
xchg
jbe
mov
pop
fdivrs
xor
add
rorl
or
rcll
clc
mov
add
push
jmp
sub
clc
mov
add
imul
inc
clc
stos
fwait
shld
add
aaa
in
mov
mov
iret
pop
mov
clc
mov
pop
nop
fwait
ja
add
add
clc
insb
mov
sbb
add
add
add
cli
sbb
clc
add
add
xbegin
ss
add
cmp
jae
add
loope
pop
clc
jecxz
shrb
push
in
adc
gs
mov
ds
cmp
mov
jp
iret
sub
add
add
add
push
xor
add
sbb
clc
push
add
cwtl
lock
clc
mov
add
xor
test
sbb
add
insb
in
enter
mov
jge
add
repnz
out
and
add
daa
clc
sahf
cmc
mov
add
cmp
clc
sysret
clc
popf
cmc
dec
cmp
fidivs
gs
testl
mov
add
mov
jge
in
sub
clc
arpl
add
add
fstpt
xchg
sbb
clc
fimuls
clc
cmp
cmp
pop
mov
add
lret
clc
aaa
repz
and
add
add
add
jg
or
sub
inc
clc
jnp
clc
sub
pop
test
sti
bound
add
clc
cmp
adc
jecxz
or
clc
mov
add
add
jno
add
add
mov
clc
and
add
add
push
mov
xchg
add
add
adc
add
inc
add
stc
loope
fistl
add
fistl
lea
cmp
clc
pop
clc
push
movsb
clc
xor
add
or
clc
jo
add
clc
xor
add
cs
mov
popf
hlt
push
cmp
clc
or
add
in
sbb
sub
mov
cwtl
andps
pop
loop
shll
mov
clc
pop
xchg
mov
jne
cli
mov
adc
clc
jb
add
fs
cltd
scas
xor
add
in
popa
add
data16
sbb
push
add
xor
xchg
xor
imul
clc
and
jge
add
mov
adc
add
in
and
add
repz
inc
clc
push
add
and
pusha
add
or
enter
shl
adc
xor
add
scas
fdiv
cmp
sbb
dec
in
fs
std
leave
int3
or
clc
nop
or
push
pop
clc
cltd
mov
mov
add
clc
cmp
clc
sar
jl
add
inc
clc
lock
and
data16
pop
test
mov
sbb
clc
or
repz
adc
add
cltd
add
add
outsl
fildl
add
outsb
daa
clc
das
cmp
jns
clc
and
add
pop
ret
clc
arpl
add
add
dec
sub
cmpsb
clc
dec
dec
ficomps
push
dec
in
jmp
ror
dec
mov
clc
gs
or
clc
js
add
xchg
popa
add
mov
shr
lods
movsl
clc
fisttpl
clc
sar
cmp
aas
mov
mov
iret
mov
jl
fnsave
pop
pop
cli
xchg
cmp
clc
mov
clc
push
clc
xabort
clc
gs
stos
mov
mov
sahf
lret
push
add
adc
add
dec
xchg
cmp
clc
test
jp
or
and
ret
jnp
inc
clc
xor
add
xabort
clc
pop
in
das
aas
cmp
add
push
xchg
aad
jp
xchg
jl
clc
jmp
clc
es
popa
add
sub
jg
cmp
push
adc
add
fnstenv
clc
movsb
clc
add
ffree
clc
fldt
enter
or
nop
jl
clc
clc
xabort
aad
mov
sahf
stos
fdivr
jbe
dec
out
clc
aaa
out
xor
add
fwait
push
clc
mov
enter
mov
add
jmp
mov
clc
jg
mulb
add
or
cwtl
or
outsb
pop
cmc
pop
push
add
or
add
sub
add
add
jle
clc
pop
or
mov
add
fsubl
addr16
jmp
cmp
out
push
jb
add
clc
aad
add
jp
cmp
clc
loopne
imul
push
loopne
sub
ss
fsts
cmp
and
add
cmp
lret
out
loopne
push
xchg
out
ror
not
cmp
add
xor
scas
add
clc
bound
add
add
push
xchg
pop
lret
jmp
inc
add
xchg
cltd
rclb
push
in
sarb
clc
test
xor
loopne
rclb
add
mov
add
clc
sub
insl
pop
test
lahf
adc
add
xchg
cmp
clc
fisttpll
in
xor
xlat
add
xchg
or
clc
movsb
clc
popf
ret
clc
sub
add
clc
jg
xor
add
aam
cmp
loop
in
incb
add
mov
pop
sbb
clc
jo
add
sti
mov
add
add
add
incb
add
js
clc
add
add
add
data16
mov
mov
clc
jmp
xchg
jmp
mov
add
add
sbb
aad
clc
xor
add
cmpps
push
into
pop
clc
push
add
out
pusha
add
or
xor
add
add
in
mov
rol
clc
lcall
popa
add
das
mov
cmp
add
xor
add
clc
call
add
mov
add
or
clc
adc
add
add
add
inc
add
and
add
leave
adc
add
sar
and
add
jnp
xor
add
add
hlt
test
in
push
push
xchg
es
cmp
add
clc
jnp
mov
test
fistpl
mov
add
icebp
lret
hlt
cmc
lret
push
add
ds
add
in
xabort
sbb
cmp
sub
clc
add
pusha
add
mov
jno
add
add
and
add
loope
push
rclb
add
pop
jle
pop
add
add
clc
stos
lret
jo
add
xor
add
test
sbb
clc
aaa
or
dec
aaa
and
add
clc
daa
clc
ss
inc
add
repz
rcrb
xchg
jg
int
das
aad
push
pop
mov
clc
stos
cwtl
loope
jmp
push
add
pusha
add
out
mov
inc
clc
and
add
clc
push
clc
or
lret
aam
outsl
mov
stos
dec
or
add
test
enter
lcall
add
dec
add
xchg
and
add
cmp
into
sbb
sahf
icebp
loop
jmp
stos
ret
clc
popf
sbb
repz
mov
test
pop
jne
jno
add
sti
ja
into
mov
ss
enter
lea
xchg
mov
sub
add
xchg
pushl
add
fdivl
jl
das
adc
add
stc
cmp
repz
jl
jle
in
mov
xchg
push
ficompl
pop
clc
mov
add
jle
push
add
push
shrl
outsl
xchg
jmp
test
leave
out
dec
xchg
mov
clc
out
cmp
int3
bound
add
add
sub
clc
xor
add
mov
add
xchg
iret
push
test
imul
push
add
aam
jle
js
imul
iret
inc
clc
cs
sub
pop
jecxz
movsl
clc
enter
idivl
pop
xbegin
clc
sbb
push
decl
clc
jnp
xor
add
inc
add
movsl
clc
shlb
add
add
add
mov
clc
clc
or
clc
add
add
lods
je
push
ljmp
inc
add
data16
xchg
sub
clc
inc
add
xchg
dec
lock
add
loop
add
add
out
sub
clc
xor
add
add
xlat
cltd
add
scas
or
jmp
sar
or
mov
clc
std
mov
clc
int3
sar
ja
pushl
add
aaa
xor
imul
jle
lahf
hlt
xchg
sbb
je
int3
or
negb
adc
add
pop
popa
add
fiaddl
add
cs
jno
add
clc
cmp
add
cmpsb
clc
mov
mov
lahf
xabort
mov
lods
out
jne
inc
add
mov
add
nop
inc
clc
dec
push
inc
clc
xchg
add
pop
pop
in
inc
add
mov
arpl
add
sbb
fldenv
add
add
aas
fistpl
sbb
sahf
mov
lods
mov
clc
rcl
cmp
add
xabort
mov
loope
cmp
jecxz
add
add
cmp
clc
insl
mov
add
out
inc
clc
adc
add
lahf
cmp
add
add
jbe
mov
movsb
clc
aam
jle
cmp
dec
mov
clc
xor
add
add
add
adc
clc
cli
adc
add
add
dec
in
xor
dec
sbb
sbb
mov
xchg
add
lock
sub
add
inc
add
leave
lods
cmc
mov
clc
mov
clc
sti
loop
xchg
in
and
add
clc
das
pop
jle
clc
jbe
test
sar
pop
pop
lcall
inc
clc
fnstsw
add
pop
and
clc
cmp
adc
clc
cld
outsb
pop
xor
add
xor
insl
jl
or
add
add
clc
push
adc
add
add
add
or
mov
clc
mov
ss
dec
sub
add
test
and
add
pop
clc
xor
add
add
testl
inc
clc
push
cmp
lods
aam
add
leave
pop
clc
inc
clc
jne
clc
cwtl
sbb
loop
cmp
mov
clc
scas
pop
sub
add
push
clc
mov
jp
sbb
outsl
jno
add
clc
rorb
cli
pop
arpl
add
clc
hlt
and
add
repz
clc
ja
aaa
lahf
movsb
clc
inc
add
mov
clc
mov
add
jb
add
jecxz
cli
cmp
clc
jl
clc
mov
repnz
add
lcall
add
dec
rol
clc
insb
aad
or
clc
pop
inc
add
decb
jb
add
push
add
sti
cmpsl
clc
scas
psubsb
clc
jg
sbb
not
shrb
dec
je
in
leave
pop
iret
loope
jns
and
add
add
lods
into
jnp
aad
inc
clc
lods
arpl
add
add
add
clc
pop
enter
xchg
cmp
add
add
ds
add
dec
xchg
sub
add
out
or
add
sub
lea
add
dec
inc
add
outsl
mov
add
push
add
mov
fwait
lods
int
add
jmp
clc
dec
pop
imul
sbb
xchg
out
int3
push
add
test
ja
clc
pop
push
testb
clc
adc
add
sti
clc
mov
int
int3
push
add
xchg
or
add
popa
add
sti
mov
dec
xor
add
cmp
sysexit
ss
add
mov
and
add
add
pop
push
add
in
scas
cmp
add
popf
jmp
aam
jae
add
gs
lock
iret
loop
into
inc
add
out
leave
add
add
push
fidivs
add
out
sarl
add
xchg
or
test
mov
push
mov
add
mov
clc
or
jg
xor
add
repnz
add
clc
call
add
pop
stos
add
daa
clc
adc
cmp
mov
add
movsb
clc
adc
add
add
mov
enter
data16
mov
clc
test
leave
ret
clc
and
xlat
dec
and
repnz
add
add
add
cmp
cmp
clc
mov
add
cltd
dec
clc
pop
or
clc
int
xchg
xor
sahf
mov
clc
mov
or
out
push
pop
dec
sub
clc
scas
and
add
clc
aad
clc
pop
popf
and
add
jle,pn
add
fdivl
and
add
add
and
add
mov
pop
cmp
out
imul
add
repz
jecxz
xor
add
cmp
mov
clc
loope
lret
pop
push
movsb
clc
xor
clc
lea
add
imul
push
add
rcrb
add
dec
ss
add
test
fldenv
repnz
add
dec
and
add
and
mulb
mov
push
mov
clc
pop
adc
add
clc
iret
fwait
and
add
scas
leave
pop
enter
push
in
sub
pusha
add
nop
popa
add
jbe
clc
test
add
add
lods
jae
add
add
cmp
icebp
cmpsb
clc
and
clc
sarl
xchg
data16
mov
outsl
push
jp
push
lock
clc
cmp
clc
sub
fcompl
pop
cmp
dec
adc
imul
arpl
add
ss
out
xchg
jecxz
mov
jbe
and
add
push
or
add
and
add
adc
cmp
add
js
insl
inc
clc
int
cmp
add
lret
mov
clc
in
lock
sbb
cltd
xor
add
aas
stos
sbb
clc
into
adc
add
or
mov
cmpsb
clc
rcrb
jne
xor
add
dec
push
xor
clc
nop
mov
cmp
add
pop
mov
mov
clc
clc
frstor
push
add
out
cli
fwait
pop
fidivrs
insl
push
adc
mov
aam
outsb
ljmp
add
movsb
clc
push
das
pop
into
cmpsb
clc
and
add
clc
push
add
push
add
and
add
add
xabort
fldcw
add
add
aad
add
ja
dec
dec
lret
clc
jb
add
pushf
push
add
sahf
mov
and
add
daa
clc
cmp
inc
clc
mov
and
inc
add
or
lahf
popf
addr16
jp
fwait
mov
sub
clc
dec
pop
jmp
add
mov
xor
add
xchg
mov
lea
push
add
sbb
adc
add
mov
repnz
mov
mov
clc
cmpsb
clc
testb
add
cmp
bound
add
clc
jbe
dec
rorl
xor
ljmp
jl
clc
dec
lock
icebp
push
add
add
add
sub
clc
ljmp
jmp
pusha
add
gs
mov
pushf
es
cmp
or
sub
sar
add
inc
clc
lock
clc
icebp
pop
mov
insb
xabort
add
gs
shlb
jge
add
in
jno
add
add
add
fsubs
add
ficompl
pop
stos
jae
add
clc
pop
inc
add
adc
clc
mov
stc
push
add
inc
clc
loop
loopne
fidivrs
jae
add
movsl
clc
pop
lahf
das
insl
sbb
add
pop
xchg
mov
clc
lret
std
repnz
adc
adc
add
loope
movsb
clc
loopne
jo
add
cmc
pop
mov
or
add
add
ja
add
push
add
inc
add
push
test
clc
cmp
add
hlt
test
mov
sbb
clc
add
add
inc
clc
adc
add
popf
lods
xchg
pop
mov
test
insl
rcl
xchg
pusha
add
cmp
js
scas
repnz
add
xor
add
filds
es
jmp
clc
jecxz
cmp
cltd
ljmp
icebp
mov
add
add
clc
mov
cmp
clc
ljmp
pop
stc
hlt
fldl2t
data16
xchg
fs
data16
cmc
clc
mov
clc
iret
arpl
add
add
add
sbb
cld
xchg
dec
icebp
pop
clc
lcall
inc
clc
xchg
into
jo
add
add
add
mov
add
add
and
jb
add
clc
mov
bound
add
clc
movsl
clc
fstpt
cmovb
add
add
push
mov
clc
add
clc
rolb
add
xchg
arpl
add
in
add
add
add
add
sub
fbstp
xor
add
dec
mov
jae
add
int
sbb
and
add
sbb
jnp
add
dec
insb
jnp
sub
xor
add
lock
clc
jmp
add
add
and
add
or
mov
mull
add
adc
pushf
cmp
lea
sbb
inc
clc
mov
push
push
fsub
clc
push
add
xchg
pop
push
sbb
nop
movsb
clc
rorb
clc
inc
clc
test
clc
jno
add
push
add
sahf
push
lret
push
add
dec
fbld
add
popa
add
mov
je
add
add
dec
or
add
and
sahf
enter
dec
adc
add
sbb
mov
jo
add
sub
test
add
jbe,pn
decl
clc
xor
add
or
clc
leave
repz
inc
add
sub
daa
clc
lret
add
add
mov
nop
pushf
jg
add
dec
mov
xor
add
clc
sub
sub
and
adc
add
push
clc
xchg
dec
jno
add
lods
push
clc
cmp
clc
lea
je
push
add
add
push
fs
pop
test
rcr
or
add
mov
cmp
or
std
repnz
aaa
adc
clc
ss
clc
pop
sar
xor
add
mov
add
mov
sbb
leave
insb
int
ljmp
clc
cmp
push
add
test
xor
add
jo
add
add
stos
sub
gs
es
lret
aad
inc
add
xor
add
int3
aas
xabort
aaa
sbb
mov
jle
clc
cmp
inc
clc
cmc
inc
clc
mov
aam
scas
pop
clc
test
jecxz
mov
mov
add
mov
rdseed
repnz
xabort
add
sub
dec
mov
out
cld
ret
clc
fistl
add
jge
add
adc
push
add
xbegin
push
clc
pop
out
rorb
and
add
pop
clc
mov
stos
mov
adc
add
adc
add
xchg
gs
add
add
aam
out
out
and
or
add
jmp
add
cmp
add
clc
stos
and
add
clc
dec
inc
add
outsl
cmp
rcr
mov
add
add
add
add
cmp
adc
add
mov
clc
out
push
adc
add
dec
mov
jecxz
mov
mov
push
add
or
clc
or
inc
add
daa
clc
or
xchg
xor
add
jmp
clc
xabort
cmp
clc
xor
dec
clc
mov
popf
pop
mov
cmp
cltd
clc
sub
cli
ss
add
clc
xchg
ret
clc
mov
icebp
xchg
pop
iret
push
add
sahf
mov
push
add
in
mov
add
out
dec
int3
or
add
ffree
clc
fsubl
adc
add
insb
jne
push
push
add
cmp
pop
fstps
js
in
lea
add
add
xor
jns
add
push
in
out
sahf
aas
mov
clc
lahf
push
add
cltd
cltd
xlat
popf
test
out
xor
add
pop
fsts
das
leave
xchg
and
add
aad
xchg
data16
jmp
add
es
cmp
clc
stc
pop
aaa
sbb
clc
cmp
clc
clc
push
jle
add
jbe
clc
test
clc
pop
lcall
cmp
pusha
add
pushf
lahf
aas
sbb
int3
sub
add
mov
add
clc
ja
cmp
int
clc
popa
add
aas
mov
jp
and
add
add
sar
rcrl
lret
daa
clc
dec
push
adc
lock
inc
clc
rclb
shll
add
int
clc
bound
add
cmp
scas
lcall
adc
add
xor
add
test
clc
imul
clc
jle
jnp
xchg
loope
dec
nop
push
add
xbegin
cmc
out
ret
mov
push
or
push
add
jg
clc
in
mov
push
adc
mov
ds
fstpl
clc
test
mov
add
sub
mov
pop
clc
mov
clc
enter
clc
or
and
mov
add
add
clc
adc
add
add
test
clc
mov
clc
add
add
and
add
loop
xor
cmpsl
clc
out
cmp
clc
arpl
add
cmp
add
inc
add
xor
add
cmpsl
clc
aad
fldenv
mov
clc
mov
pop
or
add
scas
mov
clc
mov
outsl
xchg
jl
clc
inc
add
divb
imull
pop
fisttps
rol
clc
mov
clc
pop
cmp
lret
insb
int
clc
mov
pusha
add
out
cmp
clc
jae
add
movsb
clc
ss
push
bound
add
add
jb
add
mov
pop
adc
and
add
clc
loop
pop
mov
gs
fistpll
clc
sub
add
cli
mov
add
cli
popa
add
and
add
and
add
testb
sub
add
adc
dec
jl
add
and
add
aaa
or
add
aas
movsb
clc
xlat
sar
inc
add
cltd
pinsrw
add
add
add
add
pushf
or
add
call
mov
add
movsl
clc
pop
dec
xchg
cs
mov
rcrb
clc
and
sysexit
xlat
sar
mov
cltd
push
out
std
scas
stos
push
push
add
out
data16
repz
adc
mov
inc
clc
xchg
jle
cmp
outsb
fstp
sbb
add
or
mov
add
add
add
in
jnp
clc
and
add
and
mov
inc
add
loope
mov
lahf
in
xchg
inc
clc
inc
clc
push
add
mov
cmpsb
clc
sbb
je
cli
xchg
dec
into
jmp
and
add
add
add
mov
add
inc
clc
dec
mov
clc
jg
sbb
rcr
fadds
jbe
add
mov
cld
add
add
add
pushf
clc
ds
push
sbb
clc
sahf
adc
add
in
data16
or
add
gs
decb
into
loop
mov
add
mull
clc
jp
sub
sti
fstps
clc
jp
push
js
push
add
ss
or
cmpsb
clc
lret
movsb
clc
out
add
add
clc
cmp
clc
ja
cmc
imul
stos
cmp
clc
fldt
add
add
fdivrl
scas
mov
or
mov
add
clc
cmp
enter
clc
iret
enter
sbb
xor
add
xor
pop
jmp
cmp
push
add
or
repnz
add
clc
jp
clc
push
add
dec
out
sub
pop
clc
repnz
xor
add
cmpsb
clc
ret
clc
out
call
std
mov
lret
into
push
add
push
add
xlat
loop
dec
cmp
add
xor
add
clc
xchg
shll
add
dec
mov
stos
sbb
pop
out
mov
clc
cmp
mov
lcall
mov
shl
cmp
clc
into
cwtl
insb
cltd
xor
add
outsb
jo
add
or
inc
clc
xchg
inc
add
loope
jp
dec
pop
movsb
clc
sar
cmp
fwait
add
add
imul
in
cmp
dec
mov
clc
xchg
mov
lock
add
arpl
add
cwtl
outsb
pop
adc
clc
fmulp
pop
clc
pushf
sar
jge
add
adc
add
xchg
sbb
aas
xchg
pop
mov
pusha
add
clc
mov
hlt
and
add
add
ficompl
pop
xor
add
jnp
sar
add
out
pop
mov
clc
ljmp
gs
sar
movsb
clc
jg
int
dec
and
add
sbb
leave
and
sti
xchg
xor
add
inc
clc
pop
clc
pop
cli
xbegin
mov
add
test
add
cmp
sub
mov
mov
int3
leave
sbb
cwtl
mov
in
cmp
add
adc
iret
sar
test
scas
cmp
xor
add
fwait
cmp
add
dec
in
sar
add
cmp
push
add
gs
fcompl
push
add
xor
add
clc
push
stc
cmp
pop
mov
insb
pop
hlt
sbb
clc
sbb
mov
clc
rcrl
decb
ja
loop
mov
or
adc
add
xor
add
sub
add
pop
aad
inc
clc
imul
fisttpl
add
movsl
clc
jns
cmp
fstpl
out
pop
fdivrs
clc
sub
clc
adc
pop
loopne
mov
in
sub
aaa
out
fbstp
dec
lahf
dec
cmp
test
enter
clc
lods
jp
push
add
scas
pop
xor
add
pop
lahf
sti
add
jecxz
adc
add
add
sbb
xabort
clc
mov
pushf
and
add
mov
clc
aad
clc
lock
add
dec
das
bound
add
mov
pop
inc
add
jb
add
clc
pop
and
add
add
jbe
ja
pop
faddl
add
clc
in
and
add
clc
dec
pcmpgtw
dec
loopne
mov
rcll
insl
jl
xor
add
jmp
neg
pop
ret
cmp
add
jge
shl
clc
lea
shrb
and
add
cmc
pusha
add
fucom
clc
dec
fimull
fdivrl
add
add
adc
add
add
push
sbb
sbb
clc
iret
mov
jmp
lods
dec
cs
or
jecxz
xchg
pop
lret
push
leave
inc
add
push
cmp
mov
fmul
loopne
mov
add
add
xor
clc
int3
xchg
int
clc
cmp
pop
lock
clc
pusha
add
pop
xchg
in
jne
push
arpl
add
clc
stos
fldl
add
jl
aad
loopne
sub
mov
add
add
add
pop
xchg
push
or
cmp
clc
arpl
add
push
fs
add
add
fidivrl
push
add
es
pushf
hlt
scas
fiadds
add
shrb
lahf
sbb
js
push
mov
clc
out
push
xabort
add
cwtl
cwtl
in
jge
clc
in
add
das
das
sbb
add
push
add
mov
popf
stos
lret
sti
cli
mov
add
inc
add
cmc
xor
add
pushf
cmp
clc
shlb
fisubrl
inc
clc
scas
fcmovu
mov
repnz
shll
push
data16
test
clc
sbb
jg
mov
dec
push
sar
add
inc
add
push
add
sub
lcall
pop
and
clc
fisubrs
aam
clc
mov
leave
es
jecxz
inc
clc
sar
add
in
mov
xlat
lcall
mov
add
arpl
add
sub
aam
xchg
sub
add
mov
mov
dec
popa
add
xabort
xchg
mov
add
add
mov
add
inc
clc
test
add
bound
add
clc
jne
pop
inc
add
sar
int3
cmp
lret
gs
rorb
xchg
loop
aad
xabort
movsb
clc
dec
fsub
clc
xchg
repz
test
clc
mov
ss
mov
leave
xlat
hlt
daa
clc
xor
add
sub
clc
cmp
add
test
clc
push
add
add
add
sbb
and
add
addr16
cmp
stos
shll
clc
sahf
daa
clc
lea
push
mov
lahf
dec
push
add
push
clc
sub
jno
add
dec
and
clc
lahf
lcall
icebp
test
bound
add
add
js
dec
mov
add
rorl
clc
in
sbb
addr16
push
add
addr16
jl
clc
cmp
pop
mov
add
pop
in
sbb
lods
nop
test
push
lods
mov
sbb
dec
xchg
movsb
clc
out
mov
mov
or
lods
sti
stos
repz
jmp
add
sar
add
jmp
pop
sub
mov
popa
add
lcall
stos
add
add
xchg
xchg
mov
sbb
js
mov
dec
push
add
insb
add
add
pop
test
pop
rolb
add
nop
mov
popf
xor
test
add
xchg
lcall
add
mov
rcr
sahf
in
rorb
cmp
add
rorb
stc
out
or
fs
mov
leave
mov
sar
jns
xor
add
hlt
mov
add
jne
je
push
jmp
clc
jae
add
add
dec
imul
add
sti
lcall
add
out
in
ss
cmp
clc
xchg
push
clc
test
jnp
add
leave
mov
iret
xor
add
inc
add
or
add
xchg
mov
push
cld
repnz
jecxz
xchg
add
add
jo
add
xabort
dec
xor
add
add
mov
inc
clc
ja
clc
sub
add
add
movsl
clc
movsl
clc
pop
cmp
add
lret
cltd
popa
add
sbb
scas
loope
push
add
mov
clc
out
out
push
out
add
add
add
je
lods
jo
add
clc
paddd
add
clc
mov
jae
add
adc
add
clc
or
add
mov
mov
clc
jne
rcrb
mov
clc
lods
out
sarl
push
add
xchg
in
dec
fcoml
mov
add
lahf
push
lahf
out
pop
dec
aas
movsb
clc
or
add
or
mov
in
insl
fs
ret
clc
xchg
pop
in
divl
jne
clc
sti
pop
cmp
cmp
add
ds
clc
jo
add
add
sub
add
arpl
add
xor
xchg
pusha
add
pop
or
mov
xchg
xabort
xor
add
clc
cwtl
sbb
xchg
jnp
insb
mov
add
dec
pop
scas
xbegin
add
push
add
insl
sbb
jne
out
pop
inc
clc
jg
sub
push
add
sub
add
sub
or
jo
add
push
add
icebp
fwait
or
add
inc
clc
pop
jns
add
add
add
mov
jp
clc
fwait
xchg
xchg
xlat
pop
cmp
add
mov
clc
inc
clc
cmp
push
outsb
ret
clc
add
add
cli
daa
clc
xadd
idivb
xchg
push
clc
cmp
fstps
clc
lcall
clc
fidivs
add
popa
add
fsubl
ss
clc
dec
test
push
add
int
jge
pop
int3
imul
add
stc
add
stc
gs
inc
add
push
inc
add
arpl
add
jge
stos
or
aaa
test
clc
data16
imul
dec
add
loop
push
add
cmp
pushf
pop
mov
jp
test
add
add
popf
cli
int
aas
aad
data16
sbb
outsl
stos
cmp
mov
mulb
sahf
push
jmp
add
and
clc
dec
imul
int3
or
clc
test
cmp
and
add
clc
lods
cmp
stc
xchg
fs
in
add
clc
jo
add
xor
cmp
push
add
xor
inc
clc
dec
es
push
out
movsb
clc
in
jge
imul
jne
mov
clc
jge
jge
mov
clc
mov
test
dec
jp
je
xchg
inc
add
push
push
in
xchg
push
push
inc
clc
xor
add
cmp
clc
sar
cltd
jp
stos
cltd
xchg
push
add
aam
pop
dec
adc
add
test
mov
clc
mov
clc
aas
pop
mov
jne
add
iret
pop
lret
imul
sub
add
divl
add
out
sbb
pop
pop
clc
cmc
fidivrl
sbb
clc
and
add
mov
clc
sbb
mov
clc
xor
add
inc
clc
or
add
jns
add
sub
jo
add
pop
jl
add
daa
clc
bnd
aad
clc
jg
clc
pop
gs
or
add
mov
int3
jmp
add
jg
clc
lods
rclb
add
or
add
iret
lret
lea
clc
int
fadd
clc
xchg
test
out
mov
add
add
add
int
clc
inc
add
sbb
jl
movsb
clc
push
add
inc
add
imul
add
addr16
scas
test
clc
pusha
add
or
sub
std
mov
adc
popa
add
clc
sar
clc
jnp
clc
push
clc
cmp
dec
mov
clc
ret
clc
fsubl
add
fs
mov
xor
jnp
jmp
clc
ds
clc
movsl
clc
push
add
cmp
dec
fimull
clc
pushf
in
xchg
xor
add
test
push
clc
clc
mov
add
inc
add
lods
lock
lea
jae
add
clc
repnz
add
ljmp
or
pushf
sbb
clc
jecxz
test
pop
or
xor
add
add
mov
sbb
clc
jecxz
push
add
cmp
clc
aad
stc
cmp
clc
daa
clc
xchg
mov
xchg
in
aam
mov
add
push
add
push
add
mov
xchg
cli
stc
jne
outsb
inc
add
and
lahf
pop
dec
gs
je
clc
mov
add
loope
and
ret
clc
xchg
test
gs
push
dec
fsubp
clc
int
iret
xchg
mov
outsb
sbb
add
cld
out
mov
add
or
ficomps
scas
sbb
sbb
and
add
clc
mov
sub
bnd
add
inc
add
test
adc
out
sub
fsubr
rcl
or
add
fldl
inc
add
pop
mov
cmp
add
enter
clc
dec
add
add
clc
test
add
add
int
clc
sar
roll
add
fisubl
add
jle
outsl
push
add
imul
repnz
push
fs
lock
push
add
mov
add
dec
ds
clc
mov
push
add
and
add
es
mov
clc
inc
add
push
aas
in
lods
xor
add
clc
sub
pop
popa
add
sub
sub
add
add
clc
mull
add
in
pop
xchg
fidivrs
test
adc
add
fwait
cmp
mov
add
cmp
iret
adc
add
jp
mov
cmp
clc
es
loopne
scas
fstl
add
ds
pop
adc
add
out
cmp
clc
insl
jne
jbe
add
aaa
pop
push
cmp
clc
fwait
inc
clc
lcall
jl
clc
push
jbe
cli
mov
add
add
clc
in
xbegin
ret
clc
and
add
add
fs
adc
add
add
jo
add
xchg
int3
jnp
clc
dec
jle
movsb
clc
js
into
inc
clc
insb
xchg
loopne
mov
lret
push
mov
lret
clc
inc
add
mov
vmovntps
clc
push
sbb
add
jmp
jne
add
xlat
add
add
cltd
pop
and
add
xor
add
push
add
and
add
clc
jecxz
sub
lea
or
add
xchg
es
xor
inc
clc
and
add
pop
fs
jbe
outsb
mov
cmp
cmpsl
clc
cmc
int3
dec
iret
push
jmp
clc
adc
add
sub
clc
adc
add
inc
clc
mov
scas
xor
add
loopne
outsb
sub
add
lahf
add
add
clc
cmp
clc
lcall
into
jb
add
in
push
nop
sub
cmp
pop
xabort
jno
add
movsl
clc
push
add
mov
add
push
clc
add
add
mov
add
or
adc
add
clc
aad
int
add
push
add
mov
adc
addr16
xchg
sbb
arpl
add
xor
add
sar
add
in
sbb
mov
adc
add
adc
gs
push
loopne
cmp
ret
clc
insl
cs
xbegin
lods
cmp
push
add
out
imul
imul
inc
clc
adc
clc
enter
sahf
dec
and
add
add
add
add
push
add
sbb
push
add
push
clc
pop
idiv
cmp
push
add
mov
call
add
cmp
add
add
add
faddl
fs
xchg
dec
mov
pushf
incb
sub
clc
cmpsb
clc
scas
pop
test
pop
cmc
and
add
clc
pop
jl
cld
cltd
ss
frstor
mov
xchg
jle
lret
mov
adc
clc
rcll
add
jns
cmp
push
or
imul
mov
add
add
lcall
add
mov
push
add
rclb
add
inc
clc
ficomps
clc
inc
clc
test
sub
jnp
in
sar
add
jg
clc
or
add
ja
pusha
add
sub
cmp
clc
xbegin
jg
aas
cmp
add
and
inc
add
sub
pop
imul
fnstcw
mov
ljmp
xbegin
add
inc
add
daa
clc
jl
inc
add
and
add
icebp
add
add
adc
add
clc
dec
xchg
data16
xor
add
pop
dec
clc
call
clc
test
ja
hlt
inc
add
inc
add
in
daa
clc
aad
sub
out
mov
test
mov
es
adc
add
clc
stos
jp
clc
lret
push
sar
push
cmp
clc
push
add
popf
pop
push
clc
dec
loop
repz
fwait
pop
sub
popa
add
xbegin
push
int
add
test
mov
push
inc
add
jmp
iret
inc
add
lahf
out
jp
cltd
add
lret
in
out
cltd
dec
sbb
clc
mov
add
clc
clc
int
and
add
ljmp
add
ljmp
add
add
add
das
lock
add
stos
lcall
ds
add
jp
jl
pop
pop
jo
add
add
jbe
jle
clc
push
lahf
pusha
add
mov
into
ja
add
push
js
add
icebp
into
cmp
fmuls
fcomps
arpl
add
adc
add
clc
lret
xbegin
add
mov
and
add
call
mov
clc
dec
mov
add
pop
jno
add
add
roll
add
adc
add
clc
push
and
add
xor
add
clc
add
clc
xor
add
mov
clc
cmpsl
clc
movsb
clc
ror
jge
daa
clc
xor
add
add
lea
add
jl
push
add
jge
dec
insb
adc
add
loopne
imul
add
inc
clc
aaa
cmpsb
clc
ljmp
inc
clc
push
clc
cmp
sub
add
mov
nop
stos
or
clc
mov
stos
mov
testb
sub
sahf
sbb
cmp
lods
roll
clc
pop
push
clc
mov
add
add
or
xor
add
clc
gs
pop
mov
lock
push
clc
dec
sub
jmp
lret
shl
jns
mov
hlt
loop
push
shlb
add
cmp
clc
or
add
clc
pushf
inc
add
aad
xchg
jo
add
int3
add
add
xor
add
xchg
jbe
clc
mov
or
add
clc
int3
adc
add
add
or
cmpsb
clc
cmc
adc
adc
add
mov
xor
clc
or
clc
movsb
clc
pop
push
or
and
add
xchg
pop
mov
call
pop
lods
enter
add
fsubs
inc
clc
mov
jno
add
enter
add
dec
mov
clc
scas
jp
add
adc
jns
jne
adc
add
xchg
jmp
jb
add
mov
insb
jno
add
out
clc
push
in
inc
clc
leave
pop
xor
add
clc
dec
sbb
jl
jmp
clc
daa
clc
cmp
clc
bound
add
cmovs
add
adc
arpl
add
aaa
fistpll
into
daa
clc
and
and
add
inc
clc
pusha
add
xchg
cmp
clc
mov
es
adc
add
clc
or
clc
mov
add
getsec
push
fsubs
lock
in
add
add
add
xchg
xchg
xchg
scas
hlt
push
cmp
sbb
lods
mov
mov
add
daa
clc
pop
pop
popf
insl
stos
add
repz
clc
aad
mov
clc
loopne
and
add
push
add
xlat
push
clc
fwait
mov
add
add
mov
repnz
clc
mov
popf
xbegin
out
into
mov
clc
iret
cmp
in
stos
dec
sbb
jmp
sldt
add
add
cmp
add
loop
jp
add
xchg
out
dec
sub
add
add
add
sub
inc
add
pop
into
push
lret
xor
add
add
sbb
jg
clc
push
clc
xor
add
add
add
add
jg
jnp
inc
clc
ret
clc
je
cli
dec
cmp
mov
clc
data16
inc
clc
out
addr16
imul
add
push
clc
push
add
push
clc
fs
out
addr16
xor
add
add
jl
push
add
fldenv
icebp
insl
in
loopne
mov
sub
test
sbb
es
push
js
and
out
xchg
insl
data16
fmuls
inc
clc
sbb
clc
or
jno
add
add
in
dec
scas
icebp
out
out
xchg
ljmp
xchg
push
add
clc
mov
add
pop
add
xchg
es
in
sbb
add
cmpsl
clc
jnp
mov
xchg
pusha
add
dec
fsub
clc
sbb
or
clc
mov
sbb
mov
add
fldt
lcall
xlat
loopne
lret
inc
clc
loop
js
popf
xor
add
clc
sub
cmp
sbb
popa
add
fnstenv
adc
add
clc
ja
inc
clc
xchg
jbe
push
sub
sahf
push
sub
and
add
pop
dec
addr16
movsl
clc
mov
clc
and
xchg
cmc
mov
sub
stos
pop
ss
divb
sub
clc
xchg
sub
clc
lea
add
clc
dec
scas
cmp
fwait
data16
xor
and
add
clc
push
call
inc
clc
cli
iret
addr16
data16
mov
cld
nop
jmp
loopne
outsb
rcl
aas
imul
ret
clc
push
push
add
inc
add
cmp
dec
ss
sbb
sbb
pop
sub
jge
add
mov
or
js
inc
clc
jo
add
mov
mov
push
add
push
add
aad
add
test
pop
pop
push
mov
ret
clc
xor
add
ss
clc
fsts
add
jne
pop
test
add
add
rcrb
jne
or
add
push
add
jno
add
mov
sub
cmp
add
stos
es
mov
ss
clc
mov
enter
clc
adc
add
repz
xor
scas
imul
ja
jno
add
jo
add
add
add
add
clc
push
add
fldt
add
aad
add
int3
ja
cmp
clc
dec
insl
and
cltd
add
add
add
pop
fistl
add
adc
insl
jmp
out
int3
out
sti
cld
mov
nop
bsr
or
add
cmp
cmp
sbb
add
or
mov
pushf
nopl
iret
mull
push
cmp
pop
push
push
jl
add
xor
add
sub
inc
add
out
scas
sub
add
add
xor
push
jno
add
ljmp
add
stos
pop
mov
clc
insl
loopne
dec
sbb
cli
test
add
xchg
into
xlat
inc
clc
mov
clc
add
add
clc
mov
or
mov
mov
nop
in
add
add
jp
std
xor
add
add
scas
adc
add
ret
clc
mov
add
int3
lods
jl
xchg
shlb
cmp
clc
mov
inc
clc
and
ds
in
sar
push
mov
mov
clc
cmp
clc
cmc
xbegin
dec
punpckhwd
clc
test
clc
push
popf
insb
pop
clc
xchg
repnz
je
xor
add
clc
ret
clc
jmp
add
xor
add
lock
add
mov
filds
mov
add
jno
add
add
add
es
mov
add
and
add
pop
psubusw
mov
sbb
jnp
add
mov
sbb
add
mov
add
pop
imul
clc
or
iret
dec
xbegin
fidivs
clc
iret
popf
mov
push
clc
pop
out
ja
inc
clc
aaa
jae
add
outsl
scas
test
add
jecxz
and
add
push
add
and
add
cmc
lahf
xchg
inc
add
cmp
fildl
clc
insl
cmp
or
inc
clc
xor
add
clc
lret
add
pop
jae
add
lahf
dec
nop
negl
je
dec
call
testb
clc
addr16
cmp
add
add
add
daa
clc
fcomps
add
leave
mov
clc
push
add
mov
add
mov
clc
pop
xchg
xlat
jg
add
xchg
mov
imul
cmp
inc
clc
int
stc
xchg
ss
rcr
hlt
clc
fidivrs
clc
stos
add
add
stos
enter
clc
out
ds
clc
sub
imul
sar
and
add
mov
mov
clc
in
xchg
jno
add
add
mov
clc
xor
add
and
fldl
bnd
add
add
lret
jne
and
sbb
jl
lcall
add
xchg
outsb
sbb
push
imul
add
jae
add
mov
loopne
mov
add
into
frstor
clc
es
out
mov
ret
xchg
push
cli
inc
clc
mov
add
mov
clc
iret
std
rorl
rclb
add
lea
pop
fnsave
clc
stc
mov
inc
clc
testb
add
fisttpl
adc
add
jp
sub
add
add
sbb
in
dec
add
add
or
cmc
lods
ret
clc
mov
or
push
ja
clc
das
test
add
jmp
dec
and
add
add
fidivl
mov
fimull
sar
mov
movsb
clc
inc
add
data16
inc
clc
cmp
ret
clc
or
cmpsl
clc
push
dec
or
push
leave
and
add
fs
lcall
xchg
push
arpl
add
mov
add
jge
sub
add
stc
in
mov
mov
std
adc
add
scas
cmp
xor
add
sbb
pop
fsubl
add
loope
js
push
out
dec
pusha
add
or
movsl
clc
sub
or
add
stc
jns
clc
stc
test
in
pop
pop
clc
mov
stos
jmp
movsl
clc
fdivs
add
stos
sub
add
clc
pop
pop
std
pop
fwait
dec
lret
clc
inc
add
xor
add
ficoms
int
sbb
pop
divl
cwtl
cmp
pop
lock
clc
pop
cld
imul
sub
add
cs
add
dec
xchg
xchg
dec
fs
cmp
push
add
cmp
sar
jo
add
sub
clc
das
int
adc
add
dec
lcall
hlt
dec
aas
scas
cmp
add
cmpsb
clc
push
aad
add
add
push
arpl
add
clc
scas
repz
lock
add
das
gs
push
add
outsb
in
mov
leave
xbegin
call
in
inc
add
outsl
dec
pop
nop
xchg
enter
enter
loope
inc
add
cwtl
cmp
cltd
std
xlat
xor
clc
push
add
and
add
jp
pop
xchg
pop
aam
pop
test
sub
clc
cmpsb
clc
outsb
mov
pushl
inc
add
sub
jp
das
into
jmp
je
mov
pusha
add
test
push
sar
add
pop
cmp
cld
ja
pop
xchg
add
add
jns
movsl
clc
pop
adc
xlat
test
popf
stos
or
mov
cmpsl
clc
sub
movsl
clc
or
push
enter
iret
jmp
sbb
lcall
add
add
mov
push
bound
add
add
outsl
xor
add
clc
insl
fs
push
scas
cmp
add
clc
add
add
clc
xchg
mov
clc
fs
jle
dec
dec
inc
clc
lea
jge
clc
mov
daa
clc
sbb
repz
push
and
add
add
sahf
mov
add
loope
shl
clc
push
add
pop
pop
xlat
inc
clc
sbb
imul
pop
cmp
test
add
int3
mov
add
outsl
and
add
ficompl
loop
sbb
pop
jne
clc
push
add
scas
mov
leave
scas
sbb
es
sbb
clc
out
push
lcall
add
addr16
push
add
and
or
and
in
xchg
xchg
cli
sbb
inc
add
xchg
add
add
add
or
add
int3
push
pop
sarl
jne
push
add
pop
outsb
pop
sti
sub
clc
rclb
loope
and
add
fldcw
mov
scas
xchg
mov
outsl
adc
add
test
mov
mov
clc
push
flds
clc
ret
clc
jecxz
adc
ljmp
adc
add
mov
js
out
adc
mov
add
add
xchg
arpl
add
fxch
xabort
std
inc
clc
inc
clc
push
mov
add
inc
clc
insb
xor
add
add
mov
xabort
clc
ret
clc
push
clc
pop
ja
adc
jmp
add
xbegin
clc
cld
xchg
mov
and
add
add
cltd
mov
pop
aad
push
leave
dec
fcomi
pop
mov
mov
xor
add
add
movsb
clc
or
cmp
inc
add
adc
add
add
sub
add
mov
pop
pop
cmp
add
add
add
add
add
add
jbe
cmp
add
add
adc
add
movsl
clc
sub
pop
sti
imul
clc
xor
add
xor
add
add
adc
add
add
jle
clc
nop
daa
clc
je
fdivrp
pusha
add
mov
pusha
add
dec
push
add
clc
xor
add
xchg
pusha
add
fs
add
adc
mov
mov
mov
sbb
add
sbb
clc
loope
inc
clc
xchg
mov
mov
movsb
clc
adc
add
add
mov
add
ret
clc
pop
xchg
dec
scas
mov
mov
hlt
fists
inc
add
test
test
add
clc
xchg
jmp
imul
cmp
data16
shl
clc
imul
add
dec
aam
sar
and
add
and
xchg
std
es
or
add
dec
dec
xchg
inc
clc
aam
out
mov
arpl
add
cmpsl
clc
enter
clc
push
add
sti
sar
and
add
inc
add
and
mov
inc
add
add
sub
add
lcall
clc
xchg
cmp
lcall
clc
ja
clc
cld
cmpsl
clc
pop
fistps
jb
add
add
ljmp
out
fistps
adc
clc
jns
enter
pop
fdivs
add
xor
add
fnstsw
gs
leave
aam
test
int3
decl
add
daa
clc
jmp
sahf
push
dec
ja
cs
clc
lea
cmp
dec
push
adc
add
cmpsb
clc
addr16
cmc
adc
add
cmp
ja
lods
faddl
add
add
add
pushf
rorl
daa
clc
lcall
test
xor
add
daa
clc
mov
clc
fcomip
sub
mov
call
push
inc
clc
fistpl
je
clc
out
rorb
arpl
add
add
cltd
lcall
in
fdiv
test
in
pop
imul
add
inc
add
xchg
cmp
inc
clc
arpl
add
in
xor
xchg
push
add
outsb
jecxz
fisttpll
push
push
pop
lock
pop
cmp
clc
xchg
xchg
fistpl
add
out
in
mov
add
outsb
push
pop
sbb
clc
mov
mov
xchg
jle
clc
mov
xchg
imull
mov
clc
jns
sbb
add
pop
jae
add
cmp
push
push
add
add
add
add
inc
add
mov
sub
add
add
aaa
push
clc
cmc
das
lock
sub
jmp
scas
call
sbb
mov
jo
add
cmp
clc
jnp
push
add
jb
add
add
mov
cld
aam
aam
sarl
clc
push
add
xchg
psubsw
sub
sub
jge
add
cli
in
stos
fmulp
imul
jns
inc
add
lods
add
add
push
outsl
enter
cmp
lock
daa
clc
es
lods
adc
add
cmp
add
cmp
clc
arpl
add
stc
iret
repz
cwtl
push
lret
nop
insb
jle
add
aad
add
push
and
add
inc
clc
xchg
inc
clc
dec
int
loope
and
stc
dec
add
add
inc
clc
and
add
mov
xchg
cs
push
add
dec
ja
add
imul
jb
add
mov
clc
lahf
sbb
inc
add
push
daa
clc
rcr
mov
div
and
inc
add
lret
xchg
ss
xlat
fwait
es
fists
mov
mov
hlt
sub
dec
cwtl
aad
clc
cmp
xor
add
add
outsl
jae
add
add
push
int
lret
sub
loope
xor
add
mov
fstps
and
add
add
add
mov
inc
add
loopne
popl
add
scas
jb
add
lea
add
int
add
add
clc
shll
add
pop
cld
mov
clc
xor
cmp
add
insb
lods
cmp
lods
sub
add
mov
mov
adc
add
inc
add
xbegin
pop
push
rorb
push
clc
cltd
movsb
clc
inc
clc
into
sar
cmp
fwait
push
add
or
cmp
add
mov
adc
add
clc
pop
ret
clc
mov
clc
ja
fnstsw
dec
xchg
cmp
clc
test
jno
add
clc
mov
add
push
clc
fistpl
adc
add
sti
fcmovbe
pop
sub
jge
xchg
sub
clc
xchg
lret
das
adc
add
and
add
sti
stos
jnp
sar
xor
clc
inc
clc
push
pop
lods
mov
xor
add
rcpps
add
clc
mov
iret
push
aad
pop
mov
ljmp
rorb
dec
cmc
jmp
aad
xbegin
pop
mov
clc
enter
clc
aas
push
add
lret
pushl
add
lock
mov
rorl
lret
xlat
xor
mov
clc
cmp
clc
aad
fildll
add
add
