add
addb
mov
adc
adc
mov
mov
jecxz
jecxz
jecxz
jecxz
add
add
add
push
push
sahf
sahf
add
add
mov
dec
dec
dec
dec
dec
dec
dec
dec
dec
add
add
add
add
rcl
push
push
push
push
push
cmc
cmc
add
repnz
add
add
pop
pop
pop
add
add
add
cmp
fcmovu
fcmovu
fcmovu
mov
add
add
add
fs
sar
clc
add
loope
loope
loope
add
add
add
dec
add
add
add
cld
cld
cld
cld
cld
add
add
add
add
or
or
adc
adc
mov
rol
rol
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
add
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
add
add
add
or
or
std
std
std
mov
add
add
daa
push
add
add
add
sub
sub
sub
sub
ja
loopne
addr16
add
add
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
xor
mov
and
and
and
and
add
add
add
addr16
and
and
and
lret
lret
test
rol
add
add
jae
jae
mov
mov
mov
mov
ret
push
push
push
push
push
push
push
push
push
push
add
add
jno
adc
adc
sbb
sbb
sbb
add
add
jmp
gs
rcl
rcl
rcl
xchg
xchg
xchg
xchg
xchg
xchg
repz
add
add
add
add
in
in
in
pusha
pusha
pusha
mov
fcomp
fcomp
addl
and
and
and
pop
pop
add
add
sub
sub
sub
sub
add
add
add
add
jmp
sti
sti
sti
sti
jmp
jmp
sbb
sbb
add
add
movsl
movsl
movsl
add
add
cmc
cmc
cmc
pushf
pushf
addl
add
add
add
jo
jo
nop
nop
nop
sbb
cmp
cmp
cmp
add
add
adc
std
std
std
adc
mov
add
add
sub
sub
sub
sub
ss
in
add
add
add
dec
dec
add
add
enter
push
push
push
push
push
push
push
push
push
push
push
push
loopne
loopne
push
add
add
lret
lret
lret
lret
lret
lret
mov
xlat
xlat
dec
dec
dec
je
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
inc
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
or
or
add
add
add
add
add
add
sub
add
fcmovnu
fcmovnu
fcmovnu
fcmovnu
add
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
xlat
xlat
xlat
add
add
add
mov
mov
mov
mov
mov
jecxz
jecxz
jecxz
jecxz
jecxz
call
enter
addr16
add
rcl
arpl
add
add
add
inc
inc
inc
inc
add
add
jns
jns
jns
add
add
rcl
rcl
rolb
test
pop
pop
pop
pop
pop
pop
pop
jno
jno
cmp
cmp
add
add
add
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
addl
or
or
add
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
add
cmp
enter
enter
jmp
add
add
add
add
jo
jo
jo
cld
cld
cld
cld
cld
lea
sbb
sbb
sbb
add
mov
add
xor
add
add
add
add
add
aaa
aaa
aaa
aaa
aaa
push
mov
mov
add
add
add
jns
bound
bound
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
add
add
add
add
data16
fcmovnu
jbe
jbe
add
cmp
cmp
cmp
loopne
loopne
loopne
add
mov
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
addb
aad
add
add
add
add
div
div
div
div
div
add
add
add
inc
inc
add
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
ds
xor
xor
xor
xor
pop
pop
pop
pop
pop
pop
add
into
into
mov
mov
add
add
add
jecxz
jecxz
jecxz
jecxz
jecxz
inc
inc
inc
inc
inc
inc
inc
or
or
or
or
or
adc
adc
adc
add
add
add
add
sbb
add
add
add
add
add
rcl
shrb
dec
dec
dec
movsb
movsb
movsb
movsb
add
add
add
mov
shll
and
and
and
aam
aam
sahf
sahf
sahf
add
pop
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
insb
in
in
jno
in
add
add
add
inc
inc
lock
xor
xor
xor
add
mulps
pop
pop
pop
pop
pop
pop
pop
pop
aad
add
add
add
add
add
add
bound
mov
mov
mov
mov
mov
add
add
dec
dec
dec
add
add
add
add
add
inc
lods
lods
cmp
cmp
cmp
cmp
in
in
cmp
inc
inc
add
out
out
out
out
out
out
out
mov
mov
mov
mov
mov
mov
mov
mov
lahf
lahf
lahf
xchg
xchg
xchg
xchg
xchg
fstp
fldl
add
mov
pop
add
add
add
add
add
add
sub
sub
insb
out
repnz
insl
insl
inc
inc
inc
or
or
or
or
or
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
sbb
sbb
ds
clc
clc
clc
dec
dec
add
or
or
jbe
add
add
and
add
add
add
repnz
push
push
add
rol
rol
aas
aas
aas
add
add
pop
pop
adc
adc
adc
sbb
cli
cli
add
jno
jno
jno
jno
jno
add
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
add
add
add
add
imul
imul
imul
cld
cld
cld
cld
cld
add
add
add
pop
pop
pop
pop
pop
pop
pop
pop
fs
add
add
add
add
popf
popf
popf
add
add
das
das
das
add
add
add
rolb
pop
pop
mov
cmc
cmc
add
aam
add
add
lds
lcall
lcall
add
add
add
xchg
xchg
xchg
add
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
add
add
adc
adc
mov
add
pop
pop
pop
pop
pop
pop
pop
pop
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
pop
pop
pop
pop
pop
es
push
push
pushl
xor
xor
xor
ss
add
jno
push
add
mov
aaa
add
add
add
into
into
into
in
in
cld
add
add
cwtl
cwtl
cwtl
cwtl
cwtl
gs
add
add
add
add
add
add
dec
dec
dec
ret
ret
ret
ret
clc
clc
clc
add
add
outsb
outsb
outsb
sub
sub
sub
add
add
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xor
adc
aas
aas
aas
aas
aas
aas
aas
aas
aas
add
icebp
add
add
add
add
sldt
add
mov
add
ss
mov
add
add
sub
sub
add
add
add
xchg
xchg
xchg
xchg
add
cmp
addl
lahf
add
add
dec
dec
pop
add
add
arpl
add
data16
add
add
sub
add
rcl
shl
lock
add
add
add
and
add
add
add
ds
sbb
sbb
add
add
mov
mov
pop
pop
pop
pop
pop
jl
jl
jl
jl
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
bound
mov
test
add
add
add
mov
add
add
add
div
div
std
std
xlat
cmc
cmc
cmc
cmc
std
std
xchg
add
add
sahf
sahf
sahf
sahf
pop
pop
pop
pop
imul
xchg
xchg
xchg
xchg
xchg
xchg
xchg
add
add
add
mov
add
add
movsl
div
div
testb
jmp
cmc
cmc
cmc
cmc
cmc
cmc
cmc
mov
mov
mov
mov
mov
add
call
rcl
fwait
sub
add
add
add
add
add
add
add
add
repnz
movsl
movsl
movsl
movsl
add
dec
inc
imul
add
std
std
std
std
std
std
std
std
std
std
std
std
std
std
cli
cli
cli
cli
cli
push
sbb
sbb
sbb
addb
cmc
cmc
cmc
cmc
cmc
cmc
cmc
add
sbb
sbb
add
add
add
xor
xor
xor
add
lret
lret
mov
mov
and
add
add
add
in
in
add
add
add
add
sahf
sahf
sahf
sahf
sahf
sahf
sahf
imul
add
pop
pop
cmp
cmp
mov
add
add
out
mov
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rorb
psubw
stc
out
call
cmp
add
scas
scas
dec
dec
dec
sahf
sahf
add
add
and
and
cmp
cmp
cmp
div
div
sbb
sbb
sbb
sbb
stos
stos
inc
lahf
lahf
add
fcomp
add
add
add
div
testb
add
add
cld
add
mov
add
loope
add
and
add
add
lret
or
or
add
sbb
sbb
scas
mov
fstp
fldl
add
mov
mov
mov
mov
mov
cmp
add
add
add
mov
mov
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
fs
inc
inc
inc
inc
inc
inc
inc
mov
fstp
add
jno
add
mov
stos
stos
stos
stos
stos
add
jb
jb
jb
jb
jb
jb
test
add
add
add
add
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
call
call
or
aad
aad
aad
add
add
jle
mov
pop
pop
pop
cmp
cmp
dec
dec
dec
dec
dec
dec
dec
dec
dec
les
repz
je
je
je
je
add
push
push
push
push
push
push
add
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
add
add
add
mov
mov
lahf
lahf
lahf
lahf
lahf
addl
inc
inc
xchg
xchg
xchg
xchg
xchg
add
add
add
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
add
mov
add
add
xlat
add
add
loope
loope
loope
add
add
lea
add
add
add
sub
add
add
add
add
xchg
xchg
xchg
xchg
add
clc
aaa
aaa
aaa
aaa
add
add
cmp
loope
loope
loope
loope
lods
lods
add
add
add
add
add
add
add
add
add
js
add
add
add
pop
pop
pop
pop
ret
ret
ret
ret
ret
ret
ret
in
add
add
add
pop
pop
pop
add
add
inc
inc
sti
add
jne
jne
jne
out
out
out
out
out
out
add
add
rolb
add
add
cmp
cmp
stos
stos
xor
push
push
testb
add
add
add
add
jns
jns
jns
jns
jns
jns
add
add
xchg
xchg
sub
sub
sub
add
add
add
add
add
bound
bound
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
jmp
jmp
add
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
mov
mov
pop
add
mov
mov
aam
pop
pop
pop
pop
pop
pop
add
adc
add
mov
push
add
repz
push
push
push
push
outsl
addb
add
push
push
push
add
add
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
xor
add
add
inc
inc
inc
inc
mov
lods
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
ss
add
add
add
mov
add
test
xchg
add
add
add
or
or
pop
pop
pop
pop
pop
pop
pop
pop
pop
mov
add
add
cltd
cltd
cltd
cltd
cltd
cltd
jbe
jbe
jbe
jbe
add
push
push
push
push
add
je
add
rol
mov
mov
mov
add
adc
test
test
sub
add
loopne
loopne
add
adc
adc
adc
add
add
and
and
and
and
and
cmp
cmp
push
test
add
push
push
push
add
add
adc
adc
cmp
cmp
mov
mov
mov
add
add
add
pop
pop
pop
sub
sub
sub
sub
sub
sub
dec
add
add
add
cmp
cmp
add
aad
add
add
add
add
and
call
call
add
add
add
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
scas
scas
pop
out
cmp
daa
daa
daa
daa
daa
and
and
and
rol
cmp
cmp
cmp
mov
mov
and
and
and
into
into
pop
pop
ret
add
insl
imul
fnop
rcl
add
add
add
add
cld
cld
cld
addb
add
add
add
dec
ds
push
push
push
push
push
push
xchg
sub
inc
or
add
add
push
push
push
push
push
push
jecxz
jecxz
jecxz
jecxz
jecxz
es
lret
lret
jae
jae
and
in
imul
std
std
std
add
add
add
stos
stos
stos
stos
stos
stos
stos
push
push
push
push
cltd
clc
add
add
add
ret
ret
ret
ret
add
test
test
add
add
mov
add
add
jle
call
add
data16
hlt
hlt
hlt
hlt
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
fmull
outsb
outsb
outsb
or
add
add
add
pop
pop
pop
pop
pop
pop
pop
pop
add
mov
mov
enter
push
push
push
mov
add
jl
jl
add
add
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
push
push
push
push
add
mov
mov
add
add
loop
loop
popf
popf
popf
popf
popf
popf
popf
popf
popf
pop
pop
pop
mov
mov
mov
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
fcmovnu
push
push
push
dec
dec
dec
dec
dec
add
in
adc
pop
add
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
in
in
in
in
in
add
add
in
in
in
in
in
in
fwait
fwait
xchg
xchg
xchg
add
stos
stos
stos
stos
mov
add
fstpt
jg
jg
add
rolb
mov
mov
mov
mov
jbe
jbe
add
test
test
test
mov
mov
mov
mov
add
das
das
test
test
test
cmp
cmp
add
mov
mov
mov
mov
mov
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
add
add
push
push
push
add
and
dec
dec
dec
add
add
add
and
add
in
in
in
in
in
in
add
rolb
add
dec
cwtl
cwtl
cwtl
add
add
add
shll
pusha
pusha
pusha
pusha
add
repz
dec
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
add
add
add
add
add
add
add
incb
add
add
mov
mov
mov
mov
mov
pushf
mov
aam
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
jmp
or
es
nop
nop
add
add
push
push
push
push
pop
pop
pop
frstor
and
and
add
mov
stos
stos
add
add
add
add
adc
adc
add
cmpsb
cmpsb
cmpsb
cmpsb
scas
scas
add
add
mov
or
add
insl
insl
insl
insl
insl
add
lcall
add
add
add
fs
lret
lret
lret
lret
lret
lret
xchg
dec
xchg
xchg
xchg
xchg
sahf
sahf
sahf
sahf
sahf
add
add
add
in
in
in
mov
mov
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
mov
add
add
add
fcmovu
add
add
add
add
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
add
stos
stos
stos
stos
mov
add
int
int
int
int
int
int
int
aad
aad
add
lcall
add
imul
xchg
xchg
xchg
xchg
xchg
xchg
xchg
add
add
or
mov
mov
mov
push
mov
add
add
add
out
outsb
outsb
dec
dec
dec
add
add
sbb
add
pop
pop
pop
pop
adc
adc
adc
adc
jne
add
add
outsb
outsb
outsb
outsb
inc
inc
mov
loope
loope
loope
loope
adc
jl
jl
jl
add
add
add
add
mov
mov
mov
add
add
sub
adc
test
test
test
test
cmp
loope
loope
add
or
or
add
inc
inc
inc
cs
jb
nop
je
je
je
push
push
push
push
push
push
push
push
push
push
daa
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
add
add
add
add
sub
sub
jmp
add
add
add
add
jmp
add
sti
jecxz
jecxz
add
mov
mov
mov
add
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
je
je
bound
add
add
add
add
mov
and
and
adc
mov
mov
mov
mov
mov
mov
xor
add
add
cld
arpl
pop
arpl
arpl
jecxz
add
out
out
out
out
cwtl
cwtl
mov
mov
mov
add
push
push
push
push
push
push
add
test
add
add
add
add
loope
loope
loope
dec
dec
dec
dec
dec
dec
dec
add
add
add
inc
inc
pushf
pushf
leave
leave
leave
leave
push
add
add
xchg
mov
mov
cmp
cmp
add
push
push
sub
sub
sub
sub
cli
cli
lods
lods
lods
lods
lods
lods
in
in
in
in
in
pop
pop
pop
pop
pop
mov
in
in
in
xchg
xchg
xchg
jl
jl
and
inc
inc
inc
inc
inc
inc
into
into
into
into
add
add
add
aaa
aaa
aaa
aaa
and
lea
lahf
add
inc
add
add
add
sub
sub
add
add
add
insl
insl
insl
insl
insl
insl
insl
insl
add
icebp
icebp
icebp
icebp
icebp
movsb
movsb
movsb
movsb
das
das
das
add
out
les
add
add
stc
stc
out
out
out
add
add
add
sub
add
daa
daa
daa
add
orb
dec
dec
dec
add
add
pushf
pushf
inc
inc
inc
inc
or
jb
jb
sbb
sbb
daa
inc
inc
inc
add
add
add
add
pushf
add
mov
test
add
loop
loop
loop
loop
loop
mov
jle
jle
mov
mov
mov
lods
lods
addl
add
fs
push
push
push
push
push
push
push
cltd
cltd
cltd
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
aad
aad
aaa
add
add
or
or
dec
dec
dec
dec
dec
pop
pop
pop
push
push
add
add
add
je
je
je
je
je
add
add
add
add
loope
loope
loope
add
flds
add
xchg
xchg
xchg
sub
sub
sub
sub
sub
sub
adc
adc
adc
adc
adc
adc
adc
adc
add
and
and
and
add
add
add
outsb
outsb
outsb
outsb
outsb
add
add
add
mov
mov
jg
jg
es
cmpsl
push
push
add
add
sbb
sbb
sbb
mov
add
lea
add
add
jecxz
add
add
add
add
sbb
sbb
sbb
aam
call
add
rcl
shll
push
add
gs
faddl
add
add
add
lods
lods
lods
add
add
add
add
lret
lret
pop
pop
pop
pop
pop
jne
jbe
jbe
add
roll
add
dec
dec
sub
lods
lods
lods
lods
lods
lods
aaa
aaa
aaa
aaa
pop
pop
pop
add
add
add
add
rcl
rcl
shl
div
add
mov
mov
movl
add
add
add
add
mov
add
mov
add
add
les
add
add
add
pusha
pusha
pusha
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
aas
aas
aas
jp
jp
jp
jp
inc
pop
jg
jg
jg
incb
add
xor
pop
mov
add
jmp
jmp
push
add
add
mov
add
cmp
daa
daa
daa
daa
daa
daa
add
mov
mov
mov
mov
mov
mov
add
add
add
leave
leave
add
loopne
je
je
add
add
xor
xor
xor
xor
jmp
pop
add
add
xchg
jmp
fcomp
fcomp
fcomp
fcomp
pusha
cmp
aam
aam
aam
sub
cltd
cltd
add
movl
add
ret
rolb
jnp
jnp
jnp
jnp
jnp
jnp
cmp
cmp
cmp
cmp
cmp
add
add
add
ljmp
sldt
add
add
addb
addb
add
add
add
add
jp
jp
add
sub
sub
sub
sub
pop
pop
lea
lea
add
xor
xor
xor
xor
sub
sub
sub
bound
bound
cmpsl
cmpsl
add
ja
shrb
push
add
add
add
pusha
pusha
pusha
pusha
pusha
or
or
add
inc
add
add
cs
add
add
add
cmp
cmp
add
cmp
cmp
cmp
add
add
movsb
addr16
loope
loope
loope
loope
loope
loope
loope
loope
add
push
push
mov
add
add
pusha
pusha
pusha
add
add
js
js
js
add
add
add
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
push
push
push
test
test
test
add
add
jnp
and
test
add
add
add
add
sub
sub
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
add
add
add
push
push
push
push
push
push
push
push
addl
add
add
xchg
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
ljmp
xchg
xchg
xchg
add
dec
into
add
add
sahf
add
add
add
mov
mov
add
add
dec
dec
dec
dec
dec
dec
add
loopne
loopne
add
add
add
int3
int3
int3
int3
int3
or
or
or
or
inc
inc
inc
inc
inc
inc
inc
inc
or
or
or
or
add
add
sub
sub
add
add
xchg
xchg
xchg
xchg
add
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
add
add
sub
sub
sub
sub
sub
sbb
and
and
and
repz
add
add
fstp
fldl
add
add
add
addb
add
add
add
pop
pop
jnp
and
add
add
pop
pop
rcl
rcl
add
aaa
aaa
aaa
int
enter
mov
xchg
xchg
xchg
xchg
xchg
xchg
xor
add
add
cmc
add
add
add
rcl
rcl
lret
lret
lret
lret
lret
lret
lret
jmp
jmp
aaa
aaa
int3
int3
int3
int3
int3
int3
fwait
ds
popa
popa
popa
add
add
fcomp
or
add
add
jle
jle
jle
hlt
in
in
add
add
rcl
roll
add
lret
lret
lret
add
add
dec
add
cld
cld
cld
cld
cld
cld
cld
cld
cld
add
and
and
and
divb
xor
xor
xor
xor
xor
div
bound
fwait
push
push
push
push
cs
push
push
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
mov
sbb
in
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
or
add
add
daa
mov
and
and
and
and
add
add
add
loopne
loopne
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
add
add
mov
mov
mov
lea
adc
adc
dec
dec
dec
dec
dec
dec
add
sbb
add
les
add
add
add
inc
inc
inc
inc
movsb
movsb
movsb
movsb
movsb
add
add
add
mov
out
out
out
out
out
adc
adc
mov
mov
add
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
add
add
push
push
push
push
push
push
adc
adc
aam
sbb
add
add
loop
loop
loop
loop
add
stos
stos
add
add
add
xchg
xchg
xchg
xchg
xchg
xchg
xchg
push
push
add
add
add
add
add
ljmp
int
int
int
mov
rcl
rolb
add
push
push
push
cwtl
cwtl
insl
insl
insl
add
jmp
jmp
jmp
jmp
or
cmc
cmc
cmc
mov
mov
mov
mov
mov
mov
mov
mov
movsb
movsb
movsb
push
push
add
scas
cmp
cmp
add
flds
pushf
pushf
pushf
pushf
mov
add
std
std
std
std
add
mov
add
add
add
repz
dec
dec
cmp
cmp
cmp
cmp
cmp
cmp
add
mov
mov
fwait
fwait
fwait
fwait
sbb
sbb
adc
adc
mov
mov
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
stos
stos
stos
add
inc
inc
inc
add
add
add
jnp
jnp
jmp
jmp
mov
mov
add
dec
dec
dec
dec
dec
dec
pop
pop
pop
movsb
movsb
movsb
xchg
xchg
xchg
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
mov
add
cld
cld
cmp
pushf
pushf
int3
int3
int3
add
add
add
add
loope
loope
loope
add
add
movsl
movsl
add
add
pusha
pusha
pusha
pusha
pusha
pusha
inc
inc
cmc
cmp
cmp
add
add
cltd
cltd
cltd
add
add
add
add
das
das
das
das
add
dec
dec
dec
dec
dec
dec
dec
sti
sti
sti
sti
sti
sti
sti
fcmovnu
jg
add
add
push
push
mov
dec
dec
dec
dec
dec
dec
dec
dec
add
pop
pop
add
add
test
mov
add
add
add
push
push
xor
xor
push
push
push
push
push
push
push
push
push
push
add
add
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
stos
sub
sub
sarl
cmp
gs
add
add
mov
or
gs
push
push
push
push
push
push
fiaddl
add
add
out
leave
leave
leave
pop
pop
pop
pop
pop
pop
pop
pop
mov
mov
mov
mov
mov
xchg
xchg
lock
mov
add
add
repz
mov
in
in
in
and
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
adc
adc
adc
adc
add
add
add
add
push
out
xor
push
push
push
push
je
add
add
add
scas
scas
movsl
movsl
orl
push
pusha
jmp
addb
movsb
add
dec
adc
cvtpi2ps
add
add
in
cmpsl
or
add
jg
add
xchg
cmp
adc
add
fcompl
add
jnp
mov
jbe
add
sub
add
pop
adc
add
addb
test
add
add
mov
add
cmp
adc
pop
and
add
pinsrw
fldl
jno
pop
idiv
cmp
jne
adc
data16
mov
jmp
dec
xchg
imul
add
adc
add
fldl
xor
mov
add
add
aaa
jne
inc
lds
add
jg
push
mov
popa
jae
or
add
add
add
mov
add
in
sbb
jo
dec
and
add
push
addb
fdiv
addb
lret
movsl
movsl
and
add
dec
into
fisttpll
mov
cmp
add
lods
add
xchg
insb
pop
cmpsb
add
sub
add
add
cmpl
add
inc
sub
scas
or
add
inc
jmp
push
loopne
add
add
mov
movsl
mov
add
add
scas
fsubs
aas
imul
add
inc
jecxz
xchg
add
adc
and
xor
push
fdivrl
or
add
sub
xchg
mov
add
fldpi
leave
sbb
test
add
sub
addb
aam
fisttpl
add
in
push
inc
outsl
xchg
addb
icebp
cmc
dec
pop
xchg
loopne
inc
and
add
aam
add
push
mov
jecxz
pop
loop
ret
ret
mov
and
ret
adc
add
dec
add
xchg
add
repz
lahf
je
add
jmp
and
add
cmpsb
add
sbb
mov
test
add
adc
shlb
rorb
jns
lret
fbstp
add
fwait
fwait
pop
daa
xchg
mov
xor
sub
add
rorb
dec
jp
jo
push
add
push
dec
or
add
sbb
xor
jae
pop
mov
add
pop
cmp
pop
mov
add
add
dec
arpl
mov
push
sti
mov
add
xchg
inc
xchg
repnz
push
cmp
movaps
add
fsubrs
add
leave
ljmp
add
add
pop
or
add
cmpsb
add
sbb
fisttps
add
outsb
mov
mov
add
inc
outsl
out
pop
fdivl
mov
add
mov
add
sbbl
dec
push
and
add
dec
push
jge
lea
add
fmuls
add
loop
inc
cmp
iret
dec
mov
or
mov
add
mov
inc
push
bound
imul
mov
popf
mov
out
ss
xchg
pop
jb
adc
pop
pop
sub
and
addb
imul
add
cmp
inc
aad
add
mov
add
lods
add
sbb
mov
add
add
pop
stc
push
cltd
and
add
or
add
push
sbb
pusha
pushf
das
fisubrl
nop
dec
shrl
inc
cli
mov
ret
cmpsl
je
inc
or
imul
lods
xchg
xchg
in
fiadds
lods
add
cmp
out
and
add
movsl
and
add
mov
xor
std
cwtl
addb
imul
dec
inc
push
cmp
in
insb
inc
lret
inc
jg
add
ljmp
cmp
add
jecxz
imul
or
add
test
add
inc
stos
mov
push
push
add
mov
inc
ljmp
add
imul
jbe
stos
iret
loop
jl
or
inc
add
ret
push
mov
fbld
add
and
shll
add
lea
add
aaa
xor
mov
push
xorl
test
add
lahf
push
add
std
out
cwtl
mov
add
jle
adc
add
push
cmp
dec
mov
add
neg
xor
xchg
add
fildll
add
sbb
dec
jnp
mov
add
inc
xlat
out
cmp
addb
sbb
cwtl
inc
cli
and
cmpsl
pusha
or
add
inc
insb
sti
xor
add
test
decb
out
add
adc
fucomi
add
pop
jecxz
aam
jg
add
add
mov
aad
push
out
repz
add
add
cmp
jo
pop
xor
or
fcmovnb
ss
cltd
cmp
add
mov
add
add
repz
xor
in
lahf
inc
dec
jmp
loope
add
inc
xor
addb
xchg
pop
loop
les
sbb
adc
inc
aas
lods
add
add
add
in
cmp
add
into
lods
add
lds
test
mov
lret
lods
movsl
unpckhps
adc
add
add
push
dec
adc
jg
rolb
mov
add
add
add
add
mov
jns
ljmp
jg
and
add
add
sub
add
mov
fnstsw
add
cvtpi2ps
add
add
and
cli
inc
adc
test
jb
int3
sub
add
add
push
add
and
add
xor
cmp
movsb
add
shrb
add
adc
dec
mov
ret
add
fwait
ja
mov
push
push
ret
daa
inc
jmp
mov
aas
cli
enter
pop
push
push
xor
inc
xchg
add
sbb
push
fcom
insb
push
sub
add
stc
das
cwtl
xor
shl
out
pop
dec
orl
and
add
iret
rcrb
mov
in
dec
push
mov
jg
les
sub
add
test
add
sbb
push
sub
add
cmp
cmp
jecxz
shrb
test
jp
add
sbb
add
jno
sub
mov
add
jns
fisttpl
jbe
dec
mov
add
add
test
add
pop
sbb
or
add
bound
shll
pop
addb
cltd
cld
inc
jns
add
shll
add
imul
in
pop
mov
dec
ljmp
add
mov
add
int3
fdivrl
add
xchg
mov
cmp
mov
lret
or
xchg
insb
lahf
rorb
push
xchg
test
mov
dec
adc
sbb
add
mov
add
jne
sub
add
add
addl
add
xchg
inc
loopne
mov
add
dec
cmp
add
add
xlat
dec
aam
movsl
rcll
orl
jecxz
fidivrl
add
push
daa
and
add
jbe
aam
movsl
and
add
adc
mov
add
addr16
iret
xor
jp
roll
jbe
shrl
mov
add
sbb
jp
add
in
xchg
add
mov
addb
insl
dec
stc
xor
jb
popf
jmp
lds
icebp
outsb
sub
add
data16
add
dec
mov
add
mov
add
jmp
std
mov
xor
mov
add
mov
mov
out
add
adc
inc
push
lds
add
call
mov
loope
add
mov
data16
mov
pop
mov
addb
pop
nop
mov
push
xchg
add
fstps
mov
cwtl
jg
jns
daa
push
das
or
add
xchg
scas
add
jmp
not
out
mov
les
add
fildl
add
out
mov
lret
mul
mov
jp
jb
add
add
add
push
pop
inc
add
xlat
call
not
insb
xor
loope
or
add
stos
add
scas
add
and
add
add
sub
add
int
push
xchg
cwtl
roll
cmp
push
sub
int3
ds
mov
mov
add
push
add
enter
fs
and
add
and
enter
test
add
arpl
adc
add
mov
lret
pop
in
movsl
enter
add
dec
dec
add
sub
add
add
aad
push
and
add
add
mov
jmp
add
xchg
out
add
jecxz
adc
scas
aad
push
call
addb
repz
int3
add
lods
cmp
dec
adc
dec
loopne
lods
jnp
add
sbb
in
pop
inc
out
inc
outsb
dec
mov
add
add
aad
add
call
add
inc
clc
out
pop
pop
mov
sbb
xlat
insb
imul
add
inc
loope
lods
fwait
jge
je
pop
push
push
iret
imul
pop
add
add
push
add
jp
mov
add
jg
shr
mov
gs
push
or
add
push
cmpsb
add
push
out
movb
and
push
add
shlb
ret
xchg
mov
add
xchg
push
lods
mov
add
add
inc
mov
aad
and
std
dec
je
mov
sub
add
pop
pop
jmp
pop
mull
mov
add
push
cmpsb
add
mov
std
cli
stc
jns
mov
sarb
jecxz
sbb
sbbl
xor
mov
pop
add
add
cmpsb
add
movb
add
add
test
and
mov
xchg
xor
sub
imul
aad
movb
fwait
lods
xor
xlat
cmp
stos
mov
add
inc
push
in
add
in
arpl
outsl
and
add
shll
test
add
mov
addr16
mov
cmpsl
xchg
jne
cld
in
bound
inc
mov
or
add
mov
or
add
imul
mov
add
repnz
sahf
out
mov
add
push
jae
jle
jbe
lods
xchg
mov
lock
cld
xchg
or
add
js
pop
les
lret
inc
or
add
add
xor
inc
lahf
aas
int3
call
inc
stos
add
jl
and
add
mov
add
shrb
lret
add
in
lret
popa
xchg
push
xchg
add
aas
rcll
mov
mov
imul
add
arpl
mov
add
push
mov
movhps
push
cmp
mov
in
add
adc
sbb
stos
add
jnp
lret
movsb
add
in
adc
add
dec
cmp
sub
add
daa
and
add
mov
add
fdivrs
aad
push
and
add
adc
xor
adc
aad
dec
loopne
add
sbb
mov
jmp
testb
iret
mov
mov
test
fsin
lods
mov
push
enter
lds
test
add
add
dec
add
add
push
xchg
pop
mov
movb
add
add
stos
add
test
add
mov
out
xchg
add
add
add
loopne
test
aas
outsb
jb
mov
add
lcall
ja
fwait
xor
sub
dec
imul
movl
add
loopne
add
mov
and
mov
add
into
add
add
add
pop
repz
lods
add
mov
out
pop
lds
add
add
lock
inc
mov
les
movsb
add
rcll
lret
mov
sbb
sbb
add
mov
sbb
sub
add
push
iret
adc
addr16
add
call
out
movsb
add
ret
mov
or
lock
repz
add
and
add
lds
js
add
aaa
cmpsl
fstl
in
nop
popa
or
ljmp
repnz
add
in
xor
mov
jns
gs
jge
cwtl
and
add
xchg
and
rcrb
inc
sbb
add
lret
mov
push
test
add
add
daa
jge
in
std
cltd
or
addb
xor
xor
adc
mov
loop
daa
inc
sbb
jge
sbb
add
or
out
call
sbb
jnp
sbb
gs
pop
mov
pop
push
ljmp
add
mov
daa
mov
cmc
movsl
push
jno
cmp
sahf
push
imul
add
mov
push
add
clc
clc
rorb
sub
add
fs
inc
rcrb
sub
call
push
pushw
mov
cmc
dec
enter
ljmp
add
or
and
add
pop
call
add
scas
add
outsb
sti
xchg
pop
mov
cld
int3
sti
xchg
add
or
sub
add
sbb
stc
std
loope
add
test
add
inc
dec
cmp
sbb
push
in
std
imul
add
jne
fcoml
dec
xchg
outsb
adc
cmp
add
jo
outsb
push
dec
pop
jae
popf
repz
jae
push
mov
je
pop
jne
shlb
add
sahf
mov
add
jp
fmull
add
sub
daa
cltd
mov
je
mov
or
add
xchg
push
pushf
inc
out
mov
push
and
add
mov
inc
push
add
cmp
mov
btr
add
cmc
push
or
add
mov
pop
pop
add
popa
sbb
xchg
jmp
adc
fsts
add
scas
add
test
push
gs
imul
add
pop
pop
jnp
int
adc
xchg
int
addr16
jmp
push
or
add
mov
lret
pushf
loop
push
mov
add
jne
jnp
ljmp
adc
pop
lcall
sarl
dec
xchg
ret
mov
add
add
shr
jns
jge
ds
das
pushf
repnz
in
out
add
pop
loopne
add
pop
icebp
pop
push
repnz
cltd
out
lds
sub
add
daa
imull
jns
mov
add
push
jg
add
stos
mov
jmp
adc
inc
push
add
cmp
add
dec
ljmp
inc
popa
shll
into
jnp
cmp
or
add
stos
add
cltd
xor
add
xchg
ret
push
xor
aaa
xor
inc
adc
cmc
mov
stc
sbb
fidivs
mov
or
add
stos
add
rcrl
leave
adc
sub
addr16
mov
lret
jge
inc
scas
add
push
mov
inc
loopne
xchg
mov
imulb
add
inc
mov
enter
add
dec
ja
sti
xchg
and
inc
inc
push
cli
xorl
ja
xlat
aaa
enter
nop
or
fwait
lcall
add
sbb
xchg
inc
mov
inc
addb
adc
add
stos
popl
sbb
fs
mov
add
aam
lods
add
mov
jle
inc
pushf
std
jmp
into
mov
addr16
jae
and
add
add
sbb
or
add
xor
push
add
add
cwtl
lcall
adc
repnz
cmpsb
add
aam
adc
pop
repz
inc
mov
jge
mov
add
add
lock
add
add
add
jb
pop
sti
xchg
outsb
cli
stos
popf
test
inc
mov
add
pop
xchg
cmp
inc
pop
shrb
add
lcall
fmul
sbb
clc
and
add
jp
mov
add
add
int
sbb
ss
outsl
nop
sahf
data16
add
push
popf
lods
add
scas
jp
add
push
ljmp
lock
fsubp
pushf
cmc
ret
and
addb
addl
sbb
add
sahf
jae
sbb
mov
add
jnp
ja
dec
push
shrb
add
arpl
incl
push
adc
add
lea
add
push
ret
sarl
mov
dec
cli
fst
jns
add
xor
inc
rclb
add
pop
fcoms
add
fcmovu
mov
add
jg
lods
add
sbb
test
add
repz
lock
addb
cld
lods
sub
push
add
insl
xchg
xor
outsb
adc
add
dec
dec
movsl
int
mov
dec
out
loope
jnp
sbb
mov
int
jae
mov
add
mov
jo
inc
sub
add
add
jns
sbb
addb
rcrl
pop
pop
push
arpl
mov
stos
fwait
mov
inc
ljmp
pop
sbb
jbe
pop
and
imul
rcll
xchg
pop
ret
leave
pushf
xor
add
xchg
xchg
jno
lahf
push
jae
sahf
sbb
add
int
add
cmpsl
mov
inc
cli
bound
sbb
pop
dec
addb
inc
hlt
xchg
loope
cmpsb
add
dec
xchg
jb
inc
out
dec
jl
mov
cli
fldl
inc
mov
add
idivb
call
pop
cmc
cmpsb
add
dec
and
cli
iret
cli
addb
or
add
lods
add
pop
dec
inc
test
add
add
dec
sti
jns
pop
hlt
mov
fbld
popa
cmp
movsl
mov
pop
shlb
cwtl
inc
xchg
mov
add
push
out
loop
sub
jnp
mov
sti
cmp
mov
dec
ss
ljmp
ljmp
sarl
add
popf
scas
adc
cmpsl
inc
push
lods
cld
cmp
leave
leave
jno
sub
add
add
aad
add
lret
add
jbe
xchg
clc
mov
in
xor
add
loope
lret
call
xor
fucom
test
add
and
add
lcall
mov
out
pop
jae
int
add
or
dec
popa
outsb
dec
and
push
lods
sbb
mov
adc
shll
jne
sbb
push
outsl
loope
jae
xor
iret
lcall
popf
js
mov
lahf
je
mov
test
add
push
mov
inc
pushw
mov
shlb
pop
mov
outsl
xchg
xchg
ror
jl
ret
movsb
add
pusha
mov
jbe
dec
out
jp
add
sbb
pusha
push
fcmovu
pusha
sahf
dec
mov
add
mov
cmovae
dec
imul
out
add
adc
cwtl
dec
adc
mov
xchg
sub
aad
add
addb
fcompl
sbb
pop
addb
xchg
add
mov
add
adc
add
inc
mov
pop
cwtl
sbb
mov
out
filds
loope
fwait
in
lock
add
aaa
insb
test
add
add
add
cmp
add
xchg
mov
lret
not
add
add
jl
call
sub
loop
addb
push
xor
nop
mov
popf
das
orl
add
xor
mov
and
stos
add
in
in
pop
repz
fwait
adc
std
xchg
push
addr16
movb
add
push
lahf
je
ret
or
add
mov
movsl
jb
lea
fcoml
stc
pop
xchg
aam
jl
adc
add
and
add
mov
jg
lret
das
loopne
dec
out
mov
add
nop
push
mov
dec
xor
sub
add
lret
add
test
add
cmp
add
xchg
pop
jbe
sub
add
ds
enter
inc
inc
or
sar
push
add
or
add
push
jae
popa
mov
mov
push
push
pushf
fwait
jg
lock
cmp
or
add
incl
in
ja
call
loopne
add
mov
test
add
addb
shl
mov
mov
mov
add
push
out
sbb
jnp
cwtl
jl
repnz
and
add
jno
add
adc
add
dec
mov
lods
jb
fdivrp
adc
sub
mov
pop
jo
adc
add
cltd
fcoml
xchg
jno
mov
lahf
gs
addb
lahf
cli
pop
ljmp
xor
ljmp
test
adc
cmc
cmc
in
or
add
jmp
jb
jecxz
xor
push
in
pushl
add
push
push
mov
lock
loop
cli
ja
inc
pop
sbb
in
rol
rcrl
add
inc
fwait
and
mov
add
lods
fwait
lock
fisttpl
out
aad
sub
jle
js
enter
mov
into
sbb
ljmp
shl
adc
sub
add
add
add
insb
mov
push
sub
add
negl
add
pop
cld
mov
add
movsb
add
mov
add
and
add
insb
mov
add
pop
jp
xlat
ficoms
xchg
add
insl
dec
insl
sbb
add
adc
imul
int
add
into
pop
call
inc
push
popf
in
sbb
xchg
or
inc
notb
pop
and
add
xchg
add
add
add
lcall
mov
rorb
add
sub
add
scas
and
add
push
add
mov
cwtl
and
add
mov
add
lock
jo
arpl
ret
insb
cld
mov
add
pop
insb
inc
push
add
repnz
ja
add
xor
add
add
lods
fldl
lea
adc
enter
arpl
add
pusha
fwait
jmp
out
sbb
push
insb
sub
add
push
mov
mov
add
jg
mov
dec
repnz
xchg
add
and
scas
rorl
scas
add
inc
sub
out
ret
add
mov
or
add
arpl
add
mov
loopne
test
pop
sub
ret
imul
add
icebp
or
add
movsb
add
mov
mov
mov
rcrl
xor
add
and
add
add
add
xor
in
mov
add
push
cmp
jl
add
fisttpll
imul
adc
add
dec
movsb
add
cmp
add
push
add
push
lock
xor
add
cmpsl
cmp
cmp
add
out
cmp
add
das
lret
out
and
leave
and
or
add
add
xor
jle
xor
pop
rcrb
aad
add
imul
leave
mov
inc
and
add
pop
sahf
das
iret
xchg
sub
add
pop
dec
cmc
fdivrl
iret
shl
and
add
sbb
enter
and
add
jge
sub
add
sub
add
subl
add
pop
add
add
add
pop
lds
enter
add
or
add
dec
or
add
pusha
movaps
add
sbb
inc
outsl
pop
mov
in
arpl
shrl
incb
pusha
scas
mov
dec
bound
sbb
add
mov
add
add
add
rcl
stos
add
in
xchg
sarb
jge
or
add
dec
jo
cwtl
xor
add
mov
or
push
imull
add
sub
push
addl
in
mov
into
add
add
pusha
scas
cmp
out
ja
mov
sbb
pop
and
arpl
add
push
aad
add
cltd
sbb
dec
iret
cli
mov
fnstsw
lods
add
cmpsl
scas
add
push
add
mov
mov
dec
aaa
out
add
fmuls
add
pop
pusha
or
call
ja
sub
add
fsubr
lret
iret
mov
sub
add
movsl
cmc
push
cmp
sub
add
add
out
mov
add
push
add
dec
xor
jno
mov
lret
sub
add
jle
ss
dec
adc
negb
cltd
mov
adc
push
push
add
in
ds
jmp
xchg
add
add
fcomps
fcmovne
mov
push
dec
lret
add
jl
sahf
add
add
fstl
outsl
scas
add
dec
repnz
sub
add
rclb
pop
add
or
sarb
or
adc
mov
mov
add
mov
ret
mov
in
adc
add
lods
lahf
repz
xchg
icebp
cmp
add
popa
or
mov
add
cld
out
jecxz
lret
inc
adc
add
popl
add
dec
lcall
and
add
jl
cmp
adc
inc
cld
mov
xchg
arpl
mov
sub
push
adc
add
sub
add
addb
std
dec
xor
mov
cmpl
mov
add
xchg
fldcw
out
lret
push
pop
mov
add
push
adc
lods
dec
sub
push
push
push
fidivrs
inc
or
subl
mov
sbb
xor
or
add
mov
jbe
ss
add
add
add
dec
mov
sbb
inc
sbb
jne
add
jno
adc
add
push
enter
jecxz
stos
add
or
adc
adc
add
imul
shlb
jns
push
cmpsl
frstor
mov
add
mov
or
add
xchg
add
dec
in
add
fs
cmp
add
loop
mov
add
xchg
hlt
pop
shrl
add
sti
shlb
mov
call
mov
add
adc
rcll
fisttpll
xchg
jb
jecxz
testl
jl
add
dec
insb
pop
adc
mov
add
jo
or
popa
adc
rcrb
movaps
add
add
add
in
add
daa
jae
or
repz
ja
mov
fistpll
test
mov
add
add
ljmp
pop
bound
dec
lds
mov
aad
out
movl
add
add
lods
add
aam
push
add
shr
loope
jecxz
sbb
jae
pop
mov
test
add
xor
push
daa
sti
popa
sbb
add
jmp
and
dec
addr16
add
add
or
stos
test
lea
sbb
pop
jmp
cld
xchg
hlt
jbe
add
roll
push
jbe
test
add
clc
ffree
addb
std
or
or
add
add
adc
testb
add
jl
add
mov
inc
cld
inc
test
add
int3
jbe
or
add
nop
test
in
cmp
sub
add
int3
jmp
push
mov
add
pop
arpl
mov
cmp
nop
mov
cwtl
and
mov
jo
movhps
cmc
lds
add
mov
cmp
sub
add
xor
sbb
cli
cmp
or
outsb
push
mov
mov
sub
orl
push
lea
push
and
push
call
sub
add
and
mov
mov
and
test
je
mov
push
push
cld
call
test
jne
mov
add
push
push
push
push
call
test
jne
xor
push
push
lret
lea
andl
push
push
call
push
cmp
lea
jne
movzbl
or
pop
mov
add
not
cld
imul
and
jne
call
rorb
notrack
cmp
mov
add
ret
mov
mov
mov
inc
or
lea
lea
add
lea
shr
add
sub
and
jmp
push
mov
jmp
dec
cmp
add
cmpsb
add
xchg
add
in
jge
cmpsb
add
nop
hlt
sub
add
je
pop
mov
pusha
aas
outsb
lret
inc
mov
add
sbb
add
sbb
add
push
outsb
loope
ljmp
aas
loopne
nop
add
add
std
adc
add
outsb
xchg
popa
cltd
dec
out
dec
cmpsl
pop
arpl
add
inc
cmpsb
add
fcoms
dec
push
mov
lods
add
popf
and
add
sbb
add
mov
xor
outsb
je
icebp
mov
fidivrs
fst
push
xchg
pop
in
ds
outsb
shll
and
add
mov
add
add
mov
or
dec
mov
add
mov
call
scas
shlb
mov
bound
sub
add
les
sbb
sbb
fisubrl
cld
adc
sub
add
push
adc
fadd
sub
add
and
add
cmp
push
add
mov
outsb
pop
sbb
ljmp
mov
push
xor
jb
mov
add
les
inc
adc
and
add
loop
add
add
add
popa
push
inc
idivl
mov
add
outsb
in
add
loope
add
imul
jb
mov
loop
jnp
push
add
insb
lods
add
jecxz
fstps
cmp
test
add
lods
add
ljmp
jne
pop
sbb
sub
into
jns
ret
add
fsubp
cmpsl
mov
cld
in
mov
fwait
dec
sub
add
icebp
or
add
xchg
loope
adc
xlat
add
adc
mov
add
push
enter
mov
add
jbe
mov
push
xchg
test
add
das
jg
add
add
mov
add
inc
repz
pop
jnp
add
bound
call
add
sub
adc
adc
cmp
aam
clc
mov
jne
xlat
adc
movsl
stc
dec
cwtl
sub
nop
fistpll
add
cmp
fcompl
push
cmp
push
lahf
ror
insl
hlt
add
enter
add
xchg
cmp
lods
mov
and
add
add
add
add
cmc
mov
out
add
add
add
lret
mov
adc
addl
add
mov
add
cmp
or
add
adc
mov
add
mov
sbb
movsl
lret
pop
imul
sbbl
pop
sub
push
lea
or
add
ljmp
add
nop
out
das
adc
add
nop
movsb
add
movsb
add
icebp
out
jp
out
out
dec
rcr
std
ss
je
add
add
add
add
and
add
mov
lahf
sar
inc
fcomi
mov
sub
add
or
in
inc
mov
add
popa
adc
jb
imul
push
das
lock
adc
mov
add
mov
sti
push
mov
test
add
mov
mov
xor
pop
sarb
add
pop
add
add
add
repnz
add
or
add
stos
mov
add
xor
jg
add
cltd
js
dec
inc
outsl
lret
test
ror
pop
gs
add
jns
jb
cmpl
enter
inc
fimull
add
xor
movsb
add
pusha
cli
mov
sbb
add
jo
add
fadds
jp
roll
push
jnp
jge
fmuls
add
pop
jecxz
add
adc
pop
xlat
pop
int3
stos
add
push
rclb
xor
cmpsb
add
pop
icebp
cmp
mov
and
add
cmc
fwait
in
adc
or
add
stos
and
mov
jo
inc
mov
divl
jmp
mov
cmp
jne
loop
add
lods
add
and
add
pop
loop
jg
idivl
test
add
add
out
adc
lahf
in
mov
pusha
popf
dec
js
inc
dec
xor
jg
pop
mov
fbld
add
cmp
jg
cltd
shl
pop
dec
inc
sbb
adc
add
enter
ffreep
fdivrs
fsubl
sahf
aam
push
add
ret
push
dec
aad
iret
xor
mov
add
adc
sbb
jge
mov
add
ret
ret
sahf
jnp
fstpl
mov
mov
add
inc
cmp
lahf
das
arpl
and
add
add
xchg
or
add
shlb
stc
xor
add
subl
add
sahf
nop
adc
add
in
add
cli
int
xor
addb
inc
push
ljmp
repz
xor
test
or
add
fmuls
add
pop
shl
fbstp
xor
pushl
movsl
xchg
call
sbb
cli
sbb
shrl
pop
mov
hlt
test
pusha
ljmp
adc
add
adc
lret
add
stos
inc
daa
cmc
arpl
rorl
add
inc
xor
rcrl
scas
bound
dec
xlat
lea
mov
add
inc
and
push
add
and
mov
add
add
add
sub
add
fwait
and
ss
add
push
or
xchg
mov
pusha
incl
dec
enter
add
mov
add
cld
iret
push
outsb
pop
cmpsl
dec
iret
lcall
stos
mov
add
xchg
mov
bndstx
adc
sahf
cmc
and
add
ja
fsubl
and
add
add
xlat
sub
add
xor
add
add
testb
add
pop
sub
push
sub
add
xor
js
dec
cmp
push
sub
add
arpl
clc
test
jl
add
adc
out
fs
add
push
push
mov
in
xchg
add
push
sub
adc
incl
nop
pushf
mov
loopne
push
flds
add
stos
add
sub
add
add
pop
push
inc
push
xchg
int
pop
fldcw
mov
xchg
xchg
jecxz
ss
imul
ljmp
push
scas
aam
add
movsb
add
les
mov
cmp
test
add
add
pop
sub
add
push
std
pop
insb
out
add
or
cli
push
add
push
les
add
xlat
fisttpl
mov
dec
add
cmp
aam
xor
filds
add
pop
mov
sti
bound
add
cmc
push
jns
and
xrelease
add
lock
addb
jne
mov
dec
pop
ljmp
cwtl
xor
inc
lods
add
xor
add
dec
insl
stc
or
add
mov
add
jns
add
popf
outsb
add
add
add
insb
push
lahf
or
add
or
add
add
cld
scas
add
int
cmp
xchg
frstor
lcall
ja
pop
push
outsl
adc
push
sbb
fstp
add
or
add
pop
mov
add
xorl
xor
add
and
add
add
mov
jnp
xchg
lret
pop
inc
movb
cmp
gs
repz
xchg
mov
push
mov
fldl
lahf
ficoml
lds
lods
add
popa
les
add
jmp
aam
movsb
add
cmp
sahf
xor
xchg
neg
dec
fimull
jmp
add
mov
add
mov
leave
sub
add
pop
and
add
loope
add
add
int3
jo
add
js
fisubl
mov
add
rcrl
jns
jae
and
add
mov
add
je
gs
adc
xor
add
adc
and
add
jb
sbb
nop
inc
in
adc
movsb
add
test
add
jno
cltd
xchg
repnz
adc
adc
test
inc
mov
add
add
aad
js
add
in
sbb
fiaddl
inc
je
xor
jno
cmc
and
add
cmp
adc
iret
mov
scas
repnz
cmp
mov
add
pusha
addb
int
aaa
push
stos
stos
push
aad
and
add
add
lods
add
fcom
dec
mov
pop
sub
jnp
pop
xchg
add
addr16
imul
sbb
popa
cmpsl
int
add
lcall
xchg
xlat
pop
sub
add
mov
sti
jg
lcall
mov
add
jp
push
mov
sub
add
lods
sub
and
test
adc
pop
push
add
aad
std
push
dec
pop
pop
pop
sub
mov
pop
mov
xor
ret
stc
popa
cmp
repnz
pop
movsl
mov
mov
add
xchg
inc
and
leave
dec
mov
lods
mov
push
xchg
xor
addb
icebp
clc
addb
xorl
test
scas
fldlg2
loope
pop
lds
in
mov
aas
mov
outsb
mov
add
xchg
aaa
push
rclb
jbe
inc
xchg
add
mov
add
lcall
add
lods
add
scas
in
adc
and
sub
add
js
int3
data16
sub
in
pop
add
mov
movsl
push
cmp
ja
pop
test
add
aad
add
sub
add
pop
cld
pop
cmpsl
and
add
dec
roll
mov
mov
iret
push
sbb
ja
or
add
adc
jg
xchg
add
pop
sbb
repnz
push
push
or
add
aad
xchg
mov
inc
sbb
add
sahf
mov
sub
add
in
std
loope
sbb
icebp
or
aam
test
pop
popf
sub
add
pop
decl
add
add
testb
jns
loop
xor
mov
push
jbe
add
sbb
fwait
jge
icebp
pop
int
aas
outsl
xchg
xor
add
das
push
mov
ljmp
sub
lret
movsl
mov
xchg
add
fs
not
mov
leave
pop
aam
jnp
bound
pop
nop
movsb
add
push
add
ja
xor
mov
cmpsb
add
mov
xchg
xchg
das
and
add
add
push
add
cmp
jp
sub
add
jbe
add
stc
test
mov
xchg
stos
xchg
pmulhuw
repz
add
xchg
sbb
add
sti
cwtl
arpl
decl
mov
loope
xchg
stc
mov
add
test
add
push
outsl
inc
mov
jp
add
add
push
lods
stos
mov
jl
negb
mov
lret
add
les
test
add
mov
pop
and
add
imul
xor
adc
shrl
add
shll
iret
cwtl
and
sub
add
xor
addb
jg
cmp
add
jp
mov
int
imul
add
mov
add
add
adc
and
sbb
adc
mov
mov
add
sub
xor
add
pusha
cmpl
add
jno
xor
add
out
mov
pop
mov
out
add
insb
daa
push
push
cmp
mov
fbstp
inc
mov
out
addb
dec
cld
popa
pop
jo
flds
adc
call
add
cmp
mov
xchg
pop
jae
andl
jp
lcall
or
add
cmp
in
aam
mov
test
add
scas
add
test
add
add
push
dec
ficoml
cmp
fadd
ss
lret
sbb
in
clc
pop
lahf
dec
mov
add
pop
lods
add
scas
add
xor
add
dec
xchg
in
xchg
sub
add
add
sub
add
push
movsb
add
ror
mov
lods
int
cmpsl
loope
in
sbbl
addb
xchg
std
push
scas
add
sbb
test
add
ficompl
add
addb
hlt
or
add
hlt
adc
popf
addb
jge
ss
xchg
add
add
mov
add
and
ss
clc
imul
inc
insb
jg
ret
imul
addb
popl
lcall
dec
jbe
pop
sbb
fstl
ss
sub
fwait
int
jg
and
add
add
lds
jge
scas
movsl
repz
xchg
cmp
mov
mov
aaa
sbb
xor
cmpsb
add
outsl
push
inc
clc
filds
add
adc
mov
add
pop
xor
stos
add
mov
add
add
jb
xlat
and
push
pop
repz
xchg
adc
dec
inc
lods
cmp
je
jne
jmp
add
sbb
jmp
jle
out
add
sbb
sbb
pop
jl
or
inc
std
inc
push
inc
dec
mov
add
dec
jne
out
daa
inc
mov
sti
and
add
popf
in
mov
add
les
jg
add
stos
inc
inc
pop
iret
push
test
je
cmp
mov
ss
mov
stc
cli
test
add
inc
insb
add
jecxz
jne
icebp
scas
add
adc
mov
je
mov
add
add
pop
sbb
jnp
and
mov
add
cli
mov
add
mov
sbb
pop
movsb
add
cltd
xchg
rcll
sub
add
imul
adc
mov
out
mov
push
lock
pause
xchg
add
lahf
shr
mov
add
dec
pop
fcoml
xchg
mov
test
add
lahf
cli
mov
push
mov
into
cmpsb
add
or
add
mov
into
repz
pushf
repz
imul
add
jo
fdivrp
push
addr16
mov
add
jns
popf
dec
jmp
sub
add
push
add
adc
jecxz
mov
std
ret
repz
add
jle
fs
pop
fnsave
stos
add
fildl
jbe
mov
add
mov
xchg
mov
cmp
out
or
sub
cmp
or
add
sbb
shlb
xor
jl
lods
add
lret
lods
add
std
in
popa
lahf
movsl
inc
jmp
cmp
push
clc
repnz
nop
nop
jae
add
cmp
push
mov
xchg
ret
add
inc
cmc
push
clc
repnz
nop
nop
jae
add
add
mov
mov
nop
push
mov
leave
nop
jmp
add
add
add
push
clc
repnz
nop
nop
jae
add
add
add
loopne
call
clc
repnz
nop
nop
jae
fs
mov
nop
push
mov
leave
nop
jmp
dec
add
push
add
fnstsw
clc
repnz
nop
nop
jae
jae
adc
mov
add
mov
push
mov
xchg
ret
dec
add
add
add
add
stc
clc
repnz
nop
nop
jae
add
add
pop
add
clc
repnz
nop
nop
jae
add
dec
add
add
add
add
xor
repz
add
nop
jmp
and
xor
mov
xchg
ret
add
add
push
sbb
ss
add
clc
repnz
nop
nop
jae
add
adc
add
push
mov
xchg
ret
add
fs
push
push
mov
xchg
ret
add
add
and
add
mov
cld
nop
nop
jae
loopne
add
push
dec
fsubs
nop
push
mov
leave
nop
jmp
add
and
add
push
mov
inc
dec
sbb
das
cmpsl
adc
add
jl
popl
nop
push
mov
leave
nop
jmp
into
fcoml
fs
mov
in
leave
nop
jmp
and
push
das
or
add
push
add
and
cld
nop
nop
jae
add
add
sub
testb
test
repnz
nop
nop
jae
push
cltd
in
mov
xor
push
mov
xchg
ret
add
push
pop
bound
add
data16
add
sub
cld
nop
nop
jae
add
push
stc
outsb
dec
add
add
pop
clc
repnz
nop
nop
jae
add
add
add
aas
clc
repnz
nop
nop
jae
mov
add
sbb
repnz
nop
nop
jae
add
add
mov
push
mov
xchg
ret
pop
dec
mov
jnp
les
mov
xchg
ret
add
add
pop
xor
jg
mov
cs
add
xchg
add
xchg
fsubs
cmp
jl
add
lods
dec
xor
mov
add
dec
push
nop
push
mov
leave
nop
jmp
mov
dec
cwtl
mov
add
clc
repnz
nop
nop
jae
sbb
add
sub
pop
jbe
add
js
add
scas
jne
clc
repnz
nop
nop
jae
mov
add
cmp
nop
push
mov
leave
nop
jmp
add
add
add
clc
repnz
nop
nop
jae
inc
add
mov
call
clc
repnz
nop
nop
jae
lret
or
add
clc
repnz
nop
nop
jae
add
xchg
mov
clc
repnz
nop
nop
jae
pop
pop
add
pop
add
push
mov
xchg
ret
inc
pushf
mov
jnp
icebp
nop
push
mov
leave
nop
jmp
jae
add
push
xor
mov
leave
nop
jmp
add
add
loopne
sub
repnz
nop
nop
jae
add
add
in
clc
repnz
nop
nop
jae
xchg
add
add
inc
cltd
aaa
mov
clc
repnz
nop
nop
jae
push
add
add
push
mov
jae
add
add
and
sub
pop
add
sar
cld
nop
nop
jae
pop
stc
add
pop
clc
repnz
nop
nop
jae
add
add
add
add
test
add
out
mov
nop
push
mov
leave
nop
jmp
add
add
add
push
mov
xchg
ret
add
add
mov
or
cld
nop
nop
jae
add
add
add
ficoml
and
mov
xchg
ret
in
in
loopne
add
jno
ljmp
add
add
add
mov
in
add
add
test
dec
add
add
xorb
add
dec
jbe
hlt
add
and
and
add
loopne
lods
or
imul
cmp
ret
pop
and
fdivrl
aaa
add
push
mov
xchg
ret
in
sbb
pop
push
clc
repnz
nop
nop
jae
mov
add
add
rcrb
push
mov
leave
nop
jmp
add
add
add
add
out
rclb
nop
jmp
add
add
add
add
test
xchg
add
clc
repnz
nop
nop
jae
add
inc
add
repnz
nop
nop
jae
mov
mov
nop
push
mov
leave
nop
jmp
add
add
xor
mov
nop
push
mov
leave
nop
jmp
add
in
pusha
push
scas
add
xchg
mov
clc
repnz
nop
nop
jae
dec
add
add
and
pushf
int
jmp
nop
nop
jae
add
add
add
add
clc
repnz
nop
nop
jae
adc
xorb
inc
add
add
fdivrl
sub
clc
repnz
nop
nop
jae
add
jns,pt
test
cld
nop
nop
jae
pop
dec
add
push
clc
repnz
nop
nop
jae
in
sbb
pop
dec
adc
mov
clc
repnz
nop
nop
jae
mov
lea
nop
push
mov
leave
nop
jmp
mov
add
mov
adc
repnz
nop
nop
jae
in
add
dec
fs
stc
mov
push
mov
xchg
ret
add
fs
add
mov
jno
add
add
faddl
add
add
add
jnp
cld
nop
nop
jae
add
add
add
push
push
mov
xchg
ret
or
mov
add
cmpsl
push
push
mov
xchg
ret
pushf
add
add
pop
dec
add
nop
push
mov
leave
nop
jmp
add
add
add
insl
call
clc
repnz
nop
nop
jae
into
add
add
cld
nop
nop
jae
lods
outsb
adc
add
mov
push
mov
xchg
ret
adc
add
add
mov
clc
repnz
nop
nop
jae
mov
idivb
add
push
mov
xchg
ret
outsb
mov
add
add
fsubr
push
cld
nop
nop
jae
add
add
inc
jae
push
mov
xchg
ret
adc
push
pop
add
cmp
push
mov
xchg
ret
sbb
in
mov
and
push
ja
clc
repnz
nop
nop
jae
pop
xchg
mov
pop
jae
repnz
nop
nop
jae
add
add
movsb
add
insl
xor
clc
repnz
nop
nop
jae
add
fsubl
adc
push
mov
xchg
ret
add
add
lret
push
dec
nop
pop
pop
clc
repnz
nop
nop
jae
mov
add
add
jns
jmp
repnz
nop
nop
jae
add
add
sbb
dec
clc
repnz
nop
nop
jae
add
add
fsubl
fistpl
clc
repnz
nop
nop
jae
pop
fmul
xchg
add
insb
fnstenv
clc
repnz
nop
nop
jae
and
pusha
add
add
pop
rep
clc
repnz
nop
nop
jae
add
add
add
pushf
fistl
repnz
nop
nop
jae
sub
add
fisubrs
fld1
nop
push
mov
leave
nop
jmp
and
add
push
add
addr16
clc
repnz
nop
nop
jae
mov
add
pop
lret
push
push
mov
xchg
ret
add
add
push
dec
add
xor
repnz
nop
nop
jae
add
add
push
insl
mov
clc
repnz
nop
nop
jae
add
pop
add
mov
repnz
nop
nop
jae
add
sub
pop
push
pushf
push
call
clc
repnz
nop
nop
jae
in
push
add
je
add
push
add
dec
fcoml
nop
test
add
or
clc
repnz
nop
nop
jae
pop
add
add
nop
nop
jae
push
add
shrb
and
repnz
nop
nop
jae
push
add
pop
lret
add
clc
repnz
nop
nop
jae
add
sub
push
loope
call
nop
jae
add
add
add
stc
push
clc
repnz
nop
nop
jae
mov
jae
cltd
lods
ret
push
mov
xchg
ret
add
push
add
pop
fsubrl
cmc
xchg
clc
repnz
nop
nop
jae
xchg
outsb
push
add
dec
sbb
jne
clc
repnz
nop
nop
jae
lret
add
push
aaa
sub
clc
repnz
nop
nop
jae
push
outsb
dec
and
push
clc
repnz
nop
nop
jae
and
add
mov
cld
nop
nop
jae
push
add
dec
add
rep
push
mov
xchg
ret
mov
add
mov
clc
repnz
nop
nop
jae
xchg
popa
push
add
add
jg
clc
repnz
nop
nop
jae
add
push
add
stos
add
xor
mov
clc
repnz
nop
nop
jae
sub
lods
lret
loope
jno
clc
repnz
nop
nop
jae
jae
faddl
outsb
insb
adc
mov
xchg
ret
pop
mov
add
push
sahf
adc
repnz
nop
nop
jae
add
add
add
cltd
mov
add
leave
nop
jmp
pop
ds
fadd
cld
xchg
add
push
mov
leave
nop
jmp
dec
add
sbb
ljmp
add
nop
jmp
add
push
mov
leave
nop
jmp
add
add
in
fs
test
repnz
nop
nop
jae
push
add
pop
dec
add
pop
add
clc
repnz
nop
nop
jae
add
add
adc
xchg
push
clc
repnz
nop
nop
jae
add
outsb
lods
mov
clc
repnz
nop
nop
jae
dec
push
mov
inc
dec
push
mov
xchg
ret
add
add
dec
into
push
add
inc
xchg
add
clc
repnz
nop
nop
jae
add
mov
push
clc
repnz
nop
nop
jae
push
sbb
add
adc
je
clc
repnz
nop
nop
jae
mov
add
xor
push
mov
xchg
ret
loopne
ds
dec
add
test
clc
repnz
nop
nop
jae
fcoml
sbb
xor
clc
repnz
nop
nop
jae
add
and
cmp
pop
push
mov
xchg
ret
in
add
sbb
add
clc
repnz
nop
nop
jae
push
popa
fs
pop
clc
repnz
nop
nop
jae
adc
add
or
and
repnz
nop
nop
jae
add
mov
std
fisttpll
push
mov
xchg
ret
jae
add
add
cld
clc
repnz
nop
nop
jae
add
xor
add
fsubrl
add
jbe
clc
repnz
nop
nop
jae
push
dec
add
add
addr16
clc
repnz
nop
nop
jae
add
xchg
jb
add
pop
mov
clc
repnz
nop
nop
jae
pushf
add
fcompl
jne
clc
repnz
nop
nop
jae
sbb
add
cli
inc
mov
sar
cld
nop
nop
jae
pushf
sbb
add
pusha
clc
repnz
nop
nop
jae
add
or
add
ret
clc
repnz
nop
nop
jae
pop
jae
add
adc
ds
cmp
jo
nop
push
mov
leave
nop
jmp
add
das
sub
add
mov
call
leave
nop
jmp
sbb
xor
or
xchg
sbb
clc
repnz
nop
nop
jae
sub
out
mov
clc
repnz
nop
nop
jae
add
add
sbb
add
repnz
nop
nop
jae
mov
add
cmp
mov
nop
push
mov
leave
nop
jmp
add
outsb
push
or
add
nop
nop
jae
and
fmull
add
add
pushf
mov
push
mov
leave
nop
jmp
push
sub
add
add
in
leave
nop
jmp
sub
or
dec
push
mov
fwait
nop
push
mov
leave
nop
jmp
xchg
pop
jae
push
add
add
add
ret
push
mov
xchg
ret
add
pop
popa
add
cltd
mov
je
nop
push
mov
leave
nop
jmp
add
lcall
add
add
add
inc
add
add
sar
scas
add
test
add
add
nop
push
mov
leave
nop
jmp
mov
add
cltd
cmp
nop
push
mov
leave
nop
jmp
popa
mov
pusha
pusha
push
les
lock
mov
xchg
ret
add
add
add
add
repnz
nop
nop
jae
pop
adc
dec
jae
out
mov
clc
repnz
nop
nop
jae
mov
jmp
add
in
add
add
add
cmp
in
out
pcmpgtb
arpl
adc
add
add
shl
jecxz
add
clc
repnz
nop
nop
jae
push
adc
mov
add
jmp
mov
xchg
ret
add
add
add
nop
push
mov
leave
nop
jmp
add
in
je
clc
repnz
nop
nop
jae
or
mov
add
fs
add
repnz
nop
nop
jae
pusha
add
add
sub
clc
repnz
nop
nop
jae
sub
add
add
fdivl
add
add
add
lods
add
add
push
nop
push
mov
leave
nop
jmp
add
add
addb
add
mov
clc
repnz
nop
nop
jae
add
outsb
sub
repnz
nop
nop
jae
add
add
mov
clc
repnz
nop
nop
jae
dec
faddl
stc
push
or
inc
add
add
pop
inc
pop
add
or
add
clc
nop
push
mov
leave
nop
jmp
pop
add
add
add
push
sahf
fldl
pop
cmp
mov
xchg
ret
adc
xchg
add
insl
mov
clc
repnz
nop
nop
jae
push
add
sbb
xchg
inc
add
mov
add
test
in
add
leave
nop
jmp
adc
add
out
push
mov
xchg
ret
bound
push
lods
sub
add
push
add
aas
add
push
mov
xchg
ret
stc
mov
push
mov
pusha
nop
push
mov
leave
nop
jmp
faddl
add
push
add
clc
repnz
nop
nop
jae
and
pop
nop
push
mov
leave
nop
jmp
xchg
add
loopne
add
pop
sahf
lret
icebp
inc
dec
es
repnz
nop
nop
jae
add
add
int
inc
sub
nop
jmp
sbb
pop
bound
pop
jne
clc
repnz
nop
nop
jae
add
iret
fwait
nop
push
mov
leave
nop
jmp
add
add
sub
add
repnz
nop
nop
jae
add
in
pushf
add
je
clc
repnz
nop
nop
jae
add
mov
clc
repnz
nop
nop
jae
add
mov
push
mov
xchg
ret
add
mov
mov
in
das
jne
nop
push
mov
leave
nop
jmp
push
add
adc
or
repnz
nop
nop
jae
push
into
cwtl
push
add
cld
nop
nop
jae
loopne
add
push
cmc
push
mov
daa
add
add
add
push
lret
outsb
add
push
or
jmp
dec
push
mov
push
cwtl
push
sbb
sbb
test
nop
push
mov
leave
nop
jmp
add
add
fs
push
mov
xchg
ret
pop
pop
add
test
push
mov
xchg
ret
add
and
sub
add
mov
cld
nop
nop
jae
push
add
xchg
add
add
std
clc
repnz
nop
nop
jae
pop
jnp
clc
repnz
nop
nop
jae
pop
push
pop
add
test
clc
repnz
nop
nop
jae
dec
add
arpl
inc
add
add
add
cltd
add
pop
push
mov
xchg
ret
or
sbb
add
mov
add
clc
repnz
nop
nop
jae
and
add
add
scas
xor
push
mov
xchg
ret
and
pop
add
mov
clc
repnz
nop
nop
jae
bound
mov
mov
xchg
ret
pushf
add
ds
je
sub
push
fs
add
add
fmull
add
mov
mov
cmp
ret
mov
add
hlt
out
aas
adc
nop
jmp
sub
add
add
push
inc
mov
clc
repnz
nop
nop
jae
add
dec
add
mov
xchg
ret
add
mov
or
repnz
nop
nop
jae
add
stc
add
push
mov
sbb
push
mov
xchg
ret
sbb
outsb
sbb
xor
idivl
nop
push
mov
leave
nop
jmp
stc
pusha
cmc
add
jle
inc
add
stc
loopne
add
add
xabort
cld
nop
nop
jae
mov
sbb
jae
push
mov
xchg
ret
faddl
bound
sbbb
mov
clc
repnz
nop
nop
jae
lret
add
add
insb
fisttpll
cld
nop
nop
jae
add
or
add
add
clc
repnz
nop
nop
jae
add
push
in
or
enter
nop
nop
jae
adc
bound
add
add
dec
jne
clc
repnz
nop
nop
jae
push
add
mov
test
idiv
call
nop
jmp
push
pop
add
pop
clc
repnz
nop
nop
jae
add
add
xor
mov
cld
nop
nop
jae
push
sub
sub
push
into
mov
clc
repnz
nop
nop
jae
add
add
push
add
sub
add
rep
clc
repnz
nop
nop
jae
into
mov
ds
mov
clc
repnz
nop
nop
jae
mov
push
mov
ds
mov
scas
ja
inc
mov
add
add
sub
ret
pop
mov
loopne
mov
inc
add
clc
repnz
nop
nop
jae
das
fs
loopne
push
clc
repnz
nop
nop
jae
add
into
add
adc
sub
mov
xchg
ret
pop
lret
in
add
outsb
popf
push
push
mov
xchg
ret
mov
add
popa
add
shr
push
mov
xchg
ret
in
add
add
add
dec
mov
clc
repnz
nop
nop
jae
mov
outsb
dec
js
in
xchg
cmp
nop
nop
jae
pop
add
in
and
cmp
push
clc
repnz
nop
nop
jae
add
jae
fcompl
add
jns
nop
push
mov
leave
nop
jmp
add
pop
das
pop
add
je
clc
repnz
nop
nop
jae
add
mov
sub
shlb
cmp
ret
push
add
mov
clc
repnz
nop
nop
jae
jae
fs
jl
popa
clc
repnz
nop
nop
jae
and
xchg
into
add
clc
repnz
nop
nop
jae
pop
add
add
add
loope
pop
or
add
nop
jmp
add
mov
mov
add
clc
repnz
nop
nop
jae
add
add
arpl
out
add
clc
repnz
nop
nop
jae
add
mov
popf
test
nop
push
mov
leave
nop
jmp
add
or
cld
push
mov
xchg
ret
push
push
sub
add
and
sbb
push
mov
xchg
ret
and
or
add
icebp
add
nop
push
mov
leave
nop
jmp
cwtl
ds
add
mov
clc
repnz
nop
nop
jae
add
lret
add
clc
repnz
nop
nop
jae
mov
push
push
nop
push
mov
leave
nop
jmp
add
add
daa
mov
nop
push
mov
leave
nop
jmp
add
add
add
cmp
push
mov
xchg
ret
add
add
fs
sti
clc
repnz
nop
nop
jae
cwtl
mov
push
sub
add
call
nop
push
mov
leave
nop
jmp
add
add
cmpsl
add
clc
repnz
nop
nop
jae
add
loopne
push
mov
leave
nop
jmp
fs
dec
dec
push
push
xor
add
lods
pop
clc
repnz
nop
nop
jae
popa
add
cwtl
bound
add
sub
add
and
add
push
clc
repnz
nop
nop
jae
add
add
lcall
in
inc
add
xchg
add
add
push
xor
jmp
mov
dec
add
sub
stc
inc
rclb
jne
push
mov
xchg
ret
add
inc
dec
bound
stc
adc
mov
insl
cs
nop
push
mov
leave
nop
jmp
into
or
add
or
nop
push
mov
leave
nop
jmp
fcompl
push
sub
add
mov
push
mov
xchg
ret
add
add
add
lcall
nop
jae
loopne
dec
push
push
add
repnz
nop
nop
jae
add
push
add
dec
test
add
mov
clc
repnz
nop
nop
jae
add
add
rep
push
mov
xchg
ret
add
loopne
ds
add
pusha
std
add
nop
push
mov
leave
nop
jmp
mov
add
shl
clc
repnz
nop
nop
jae
add
sbb
lea
push
mov
xchg
ret
xor
adc
xor
add
mov
clc
repnz
nop
nop
jae
push
add
adc
repnz
nop
nop
jae
das
add
add
add
pushl
clc
repnz
nop
nop
jae
cmc
pop
add
pusha
or
add
jne
call
outsl
inc
add
add
popa
adc
add
inc
dec
add
nop
push
mov
leave
nop
jmp
add
add
in
lret
mov
clc
repnz
nop
nop
jae
or
add
mov
test
add
add
clc
repnz
nop
nop
jae
push
fs
subb
repnz
nop
nop
jae
cmc
add
push
add
add
xchg
mov
clc
repnz
nop
nop
jae
adc
pop
add
movzwl
nop
push
mov
leave
nop
jmp
mov
fbld
mov
xchg
ret
dec
add
add
add
add
call
clc
repnz
nop
nop
jae
loopne
add
cmp
nop
nop
jae
add
mov
mov
xchg
add
add
add
add
add
mov
push
mov
xchg
ret
dec
mov
add
popf
push
push
mov
xchg
ret
or
dec
add
sti
add
push
mov
xchg
ret
add
sub
add
push
push
mov
xchg
ret
add
add
pop
add
add
cmpsb
add
sub
add
subl
push
mov
xchg
ret
stc
add
pop
add
jmp
repnz
nop
nop
jae
mov
add
mov
xchg
ret
pop
add
add
add
dec
push
mov
xchg
ret
pop
add
pushf
push
add
mov
mov
clc
repnz
nop
nop
jae
add
into
js
mov
nop
nop
jae
into
add
in
popa
add
pop
mov
clc
repnz
nop
nop
jae
add
mov
sar
repnz
nop
nop
jae
pop
mov
or
push
inc
pop
inc
jmp
nop
nop
jae
add
and
push
clc
repnz
nop
nop
jae
dec
popa
or
inc
add
add
cld
nop
nop
jae
jae
sub
or
sub
clc
repnz
nop
nop
jae
add
add
push
nop
push
mov
leave
nop
jmp
pushf
loopne
popa
add
add
push
add
test
nop
nop
jae
das
and
into
or
add
dec
pushf
cmpsb
add
jnp
clc
repnz
nop
nop
jae
add
add
push
dec
in
push
pop
bnd
lea
clc
repnz
nop
nop
jae
sbb
fs
call
nop
push
mov
leave
nop
jmp
add
add
jb
or
push
lea
xchg
ret
or
push
mov
shlb
or
cld
nop
nop
jae
outsb
add
dec
add
mov
cmp
repnz
nop
nop
jae
fcompl
nop
inc
sub
mov
adc
repnz
nop
nop
jae
or
dec
add
add
repnz
nop
nop
jae
bound
and
add
add
clc
repnz
nop
nop
jae
pop
add
into
pop
mov
nop
push
mov
leave
nop
jmp
add
add
push
mov
bound
repnz
nop
nop
jae
add
mov
sbb
clc
repnz
nop
nop
jae
add
and
jg
push
mov
xchg
ret
add
add
add
jg
nop
push
mov
leave
nop
jmp
mov
add
adc
repnz
nop
nop
jae
push
lret
and
loop
push
mov
xchg
ret
pop
add
bound
xor
push
cmp
mov
clc
repnz
nop
nop
jae
add
add
or
push
call
nop
push
mov
leave
nop
jmp
dec
jae
add
and
add
call
clc
repnz
nop
nop
jae
add
jg
clc
repnz
nop
nop
jae
mov
movsb
add
rcll
cld
nop
nop
jae
dec
add
push
add
add
rclb
push
addl
cmp
ret
add
add
fdivrl
add
mov
clc
repnz
nop
nop
jae
push
in
add
js
clc
repnz
nop
nop
jae
mov
push
mov
movl
in
leave
nop
jmp
das
cmc
push
orl
xchg
ret
adc
add
add
pushf
roll
repnz
nop
nop
jae
add
add
xchg
and
incl
in
leave
nop
jmp
add
add
mov
lods
push
nop
push
mov
leave
nop
jmp
push
add
add
inc
mov
repnz
nop
nop
jae
inc
add
adc
push
push
les
xor
clc
repnz
nop
nop
jae
lods
pop
mov
pop
clc
repnz
nop
nop
jae
add
sbb
add
add
nop
nop
jae
mov
add
nop
jnp
nop
push
mov
leave
nop
jmp
add
lret
cltd
add
push
mov
xchg
ret
add
addb
bound
push
ficompl
sbb
repnz
nop
nop
jae
adc
and
mov
nop
nop
jae
mov
push
add
lcall
mov
leave
nop
jmp
stc
in
addb
pop
pop
clc
repnz
nop
nop
jae
pop
add
jae
pop
add
ss
stos
clc
repnz
nop
nop
jae
xor
sub
fs
into
fs
mov
clc
repnz
nop
nop
jae
add
add
add
push
mov
xchg
add
jno
xor
dec
fldenv
push
mov
xchg
ret
or
bound
fdivl
add
push
mov
xchg
ret
mov
inc
into
dec
jns
clc
push
mov
xchg
ret
sub
and
push
add
pop
mov
nop
nop
jae
add
pushf
add
add
push
mov
xchg
ret
add
pop
fcompl
xor
addl
add
pop
add
sbb
nop
jmp
jae
cmc
add
mov
clc
repnz
nop
nop
jae
add
push
in
sub
add
add
clc
repnz
nop
nop
jae
mov
add
repnz
nop
nop
jae
adc
mov
sub
out
out
clc
call
nop
jmp
push
add
lods
add
cli
push
rol
clc
repnz
nop
nop
jae
mov
in
mov
repnz
nop
nop
jae
sbb
in
pop
lcall
shl
push
mov
xchg
ret
add
stc
fsubrl
push
push
mov
xchg
ret
sub
into
cmc
push
xor
sbb
addr16
clc
repnz
nop
nop
jae
inc
add
mov
nop
push
mov
leave
nop
jmp
add
add
add
andl
adc
repnz
nop
nop
jae
add
add
adc
add
pushf
pushf
mov
pop
stos
lea
clc
repnz
nop
nop
jae
add
faddl
pop
adc
add
push
clc
repnz
nop
nop
jae
xor
add
pop
push
sub
lods
clc
repnz
nop
nop
jae
add
add
dec
xor
clc
repnz
nop
nop
jae
into
add
xchg
fld1
push
mov
xchg
ret
add
add
add
loop
push
mov
xchg
ret
xor
add
mov
nop
push
mov
leave
nop
jmp
adc
push
mov
add
cld
nop
nop
jae
add
add
stc
fs
push
mov
leave
nop
jmp
add
in
in
pop
and
or
cld
nop
nop
jae
push
add
sbb
nop
nop
jae
add
add
add
inc
sub
clc
repnz
nop
nop
jae
pop
add
addb
push
cmpsl
popa
clc
repnz
nop
nop
jae
dec
sub
inc
xchg
xor
fs
sub
repnz
nop
nop
jae
push
add
mov
add
dec
cmp
mov
xchg
ret
push
push
pop
add
pop
mov
push
mov
xchg
ret
sbb
add
and
test
cld
nop
nop
jae
sbb
add
push
mov
leave
nop
jmp
pop
add
faddl
jae
add
clc
repnz
nop
nop
jae
add
das
add
popa
clc
repnz
nop
nop
jae
sub
and
lods
xchg
clc
repnz
nop
nop
jae
add
or
sub
jg
clc
repnz
nop
nop
jae
add
xchg
pop
add
dec
adc
mov
xchg
ret
dec
pushf
push
add
inc
add
clc
repnz
nop
nop
jae
add
lods
pop
push
add
add
pop
call
nop
jmp
add
cli
iret
mov
clc
repnz
nop
nop
jae
add
add
enter
push
mov
leave
nop
jmp
lret
push
or
jae
je
clc
repnz
nop
nop
jae
add
add
in
sbb
clc
repnz
nop
nop
jae
add
ds
add
cld
nop
nop
jae
mov
adc
addb
push
push
push
mov
add
jge
mov
push
dec
lods
or
add
fmull
nop
push
mov
leave
nop
jmp
outsb
xchg
add
pop
lea
mov
add
repnz
nop
nop
jae
add
in
add
cmpw
nop
push
mov
leave
nop
jmp
sub
add
jne
push
mov
xchg
ret
add
add
popf
mov
nop
push
mov
leave
nop
jmp
lods
add
add
das
ret
mov
push
mov
xchg
ret
in
adc
add
sbb
or
add
add
fs
add
add
add
inc
add
push
mov
xchg
ret
add
add
xor
call
push
mov
xchg
ret
pop
add
push
add
lods
xchg
xor
nop
push
mov
leave
nop
jmp
add
cmc
add
push
movsl
mov
nop
push
mov
leave
nop
jmp
sub
mov
inc
push
adc
clc
repnz
nop
nop
jae
pop
pop
popa
mov
and
cld
nop
nop
jae
push
add
pop
pop
clc
repnz
nop
nop
jae
add
add
dec
add
fsubr
stc
mov
jmp
incl
in
mov
add
dec
add
cltd
and
clc
repnz
nop
nop
jae
add
dec
pusha
nop
or
mov
xchg
ret
add
add
push
mov
je
clc
repnz
nop
nop
jae
add
repnz
nop
nop
jae
pushf
push
pop
sub
add
mov
nop
push
mov
leave
nop
jmp
or
add
jae
xor
add
clc
repnz
nop
nop
jae
push
outsb
add
add
add
push
mov
sub
and
jae
push
in
pop
clc
repnz
nop
nop
jae
add
add
add
xor
add
push
clc
repnz
nop
nop
jae
add
stc
sub
or
or
jns
add
add
add
add
repnz
nop
nop
jae
fmull
add
add
adc
repnz
nop
nop
jae
popa
mov
add
nop
push
mov
leave
nop
jmp
addb
inc
push
mov
adcb
ret
add
add
jecxz
inc
ljmp
mov
sub
and
nop
push
mov
leave
nop
jmp
cwtl
add
push
xchg
pop
clc
repnz
nop
nop
jae
add
add
in
leave
nop
jmp
add
mov
xor
mov
xchg
ret
xchg
add
bound
pushf
dec
add
movl
mov
leave
nop
jmp
dec
mov
sub
add
das
mov
clc
repnz
nop
nop
jae
add
add
mov
dec
cmp
repnz
nop
nop
jae
xchg
add
das
adc
lahf
lea
nop
push
mov
leave
nop
jmp
in
mov
and
sbb
incl
add
push
add
add
pop
add
pop
sbb
and
mov
xchg
ret
mov
popa
sbb
mov
loop
mov
clc
repnz
nop
nop
jae
add
stc
pop
nop
push
mov
leave
nop
jmp
add
add
cwtl
add
cld
nop
nop
jae
add
and
pusha
stos
add
in
rcll
repnz
nop
nop
jae
add
popa
push
push
add
add
add
xchg
dec
push
mov
xchg
ret
push
dec
pop
add
sub
loopne
add
mov
pop
push
mov
xchg
ret
add
push
add
add
jle
add
push
mov
xchg
ret
add
in
cmc
push
sbb
orl
ret
add
pusha
add
lret
push
or
push
mov
leave
nop
jmp
dec
add
add
push
mov
nop
push
mov
leave
nop
jmp
add
add
add
add
fstps
nop
jae
in
mov
add
mov
leave
nop
jmp
mov
das
add
add
clc
repnz
nop
nop
jae
add
add
add
inc
ficoms
xchg
add
add
add
add
xchg
push
mov
xchg
ret
push
add
mov
push
mov
xchg
ret
pusha
lret
cltd
push
add
movsl
push
clc
repnz
nop
nop
jae
inc
add
mov
repnz
nop
nop
jae
push
add
cltd
add
add
add
push
mov
xchg
ret
xchg
add
sub
sbb
push
clc
repnz
nop
nop
jae
fs
sbb
sahf
or
mov
xchg
ret
pushf
add
mov
mov
add
add
repnz
nop
nop
jae
bound
add
jmp
add
add
add
add
add
add
add
in
add
push
mov
xchg
ret
mov
add
decb
mov
add
das
add
add
pusha
dec
push
push
mov
xchg
ret
in
push
or
pusha
faddl
les
sbb
repnz
nop
nop
jae
add
add
xchg
lods
loope
or
repnz
nop
nop
jae
add
pop
add
mov
mov
xchg
ret
mov
add
dec
lret
jne
clc
repnz
nop
nop
jae
add
div
clc
repnz
nop
nop
jae
add
sub
and
add
clc
repnz
nop
nop
jae
add
in
cmpsb
add
inc
mov
add
nop
push
mov
leave
nop
jmp
lret
add
cmc
out
push
clc
repnz
nop
nop
jae
xor
into
add
sub
inc
pop
mov
clc
repnz
nop
nop
jae
add
xor
mov
nop
nop
jae
add
add
dec
popa
or
add
xchg
push
and
mov
leave
nop
jmp
in
sub
or
notb
cmpl
mov
leave
nop
jmp
pop
add
push
pop
jbe
sub
clc
repnz
nop
nop
jae
mov
add
imul
clc
repnz
nop
nop
jae
lret
pusha
addb
sub
nop
push
mov
leave
nop
jmp
add
dec
add
cmp
mov
leave
nop
jmp
ds
add
add
fwait
mov
clc
repnz
nop
nop
jae
add
mov
pusha
lea
repnz
nop
nop
jae
sub
pop
push
cltd
add
lret
cmp
nop
push
mov
leave
nop
jmp
sbb
add
pop
add
repnz
nop
nop
jae
add
adc
maskmovq
jmp
mov
pop
mov
add
add
or
in
leave
nop
jmp
add
push
fistpl
clc
repnz
nop
nop
jae
add
add
add
nop
push
mov
leave
nop
jmp
adc
add
dec
mov
rclb
mov
inc
add
add
push
mov
push
push
mov
xchg
ret
dec
add
mov
add
repnz
nop
nop
jae
and
add
sbb
loopne
push
mov
leave
nop
jmp
faddl
faddl
add
add
add
pop
push
mov
xchg
ret
loopne
add
in
dec
add
addb
fcmovbe
mov
clc
repnz
nop
nop
jae
add
mov
dec
dec
mov
clc
repnz
nop
nop
jae
faddl
and
into
adc
pop
cmp
fcoml
std
es
clc
repnz
nop
nop
jae
dec
dec
lret
add
add
add
add
repnz
nop
nop
jae
push
sub
push
add
or
out
clc
repnz
nop
nop
jae
adc
lret
add
repnz
nop
nop
jae
add
sub
sbb
push
mov
xchg
ret
add
inc
pop
nop
push
mov
leave
nop
jmp
pusha
add
push
push
or
mov
clc
repnz
nop
nop
jae
and
outsl
movzwl
clc
repnz
nop
nop
jae
xor
into
push
cmc
mov
add
fwait
clc
repnz
nop
nop
jae
sbb
push
add
and
notl
nop
jmp
adc
fs
xor
xor
push
mov
xchg
ret
add
add
add
inc
add
inc
arpl
call
inc
add
mov
pop
cmc
test
add
xchg
clc
repnz
nop
nop
jae
add
add
add
pushl
push
mov
xchg
ret
add
mov
nop
push
mov
leave
nop
jmp
fs
das
addb
mov
test
clc
repnz
nop
nop
jae
pop
add
sbb
push
mov
xchg
ret
pop
push
add
cltd
push
add
add
scas
mov
push
mov
xchg
ret
mov
pop
add
dec
push
nop
push
mov
leave
nop
jmp
push
push
add
dec
add
mov
jne
clc
repnz
nop
nop
jae
mov
add
mov
clc
repnz
nop
nop
jae
fs
add
dec
ljmp
call
nop
push
mov
leave
nop
jmp
and
add
fisttps
push
mov
xchg
ret
and
add
inc
lret
push
mov
xchg
ret
dec
and
add
pusha
mov
push
mov
xchg
ret
pop
xor
add
outsb
fs
fldcw
nop
jmp
add
add
add
push
push
mov
xchg
ret
add
add
add
add
adc
ret
clc
repnz
nop
nop
jae
dec
add
add
fs
imul
mov
xchg
ret
outsb
xor
pushf
cmc
xchg
pop
push
mov
xchg
ret
add
add
add
add
nop
nop
jae
pop
mov
add
add
clc
repnz
nop
nop
jae
mov
xchg
add
ds
push
mov
xchg
push
add
push
add
popa
add
mov
add
popa
add
dec
outsb
pop
mov
push
mov
xchg
ret
add
pushf
in
add
fs
push
clc
repnz
nop
nop
jae
add
add
push
mov
inc
sub
and
and
add
add
add
das
pop
push
repnz
nop
nop
jae
add
add
add
jmp
nop
nop
jae
lret
mov
add
add
add
add
sbb
nop
jae
outsb
cltd
bound
nop
push
mov
leave
nop
jmp
add
add
pop
xor
cmpsb
add
gs
push
mov
xchg
ret
mov
outsb
dec
dec
outsb
and
clc
repnz
nop
nop
jae
add
pop
dec
in
jne
push
mov
xchg
ret
push
add
add
addb
cltd
mov
clc
repnz
nop
nop
jae
add
sbb
add
nop
push
mov
leave
nop
jmp
push
add
or
xor
in
popa
jmp
add
pop
lods
add
sub
add
and
sbb
mov
push
mov
xchg
ret
lret
add
push
sti
nop
push
mov
leave
nop
jmp
add
dec
fs
add
clc
repnz
nop
nop
jae
sub
pushf
lret
pushf
stos
cmpl
nop
push
mov
leave
nop
jmp
add
add
bound
lret
pop
nop
push
mov
leave
nop
jmp
add
add
lret
sbb
push
mov
pop
sub
push
mov
leave
nop
jmp
dec
bound
cld
nop
nop
jae
add
and
adc
push
clc
repnz
nop
nop
jae
mov
dec
jge
clc
repnz
nop
nop
jae
add
add
mov
shlb
nop
push
mov
leave
nop
jmp
push
sub
or
cltd
in
add
and
cld
nop
nop
jae
add
test
inc
add
dec
add
ds
jmp
test
in
clc
repnz
nop
nop
jae
add
clc
repnz
nop
nop
jae
push
bound
add
add
repnz
nop
nop
jae
dec
add
add
push
clc
repnz
nop
nop
jae
dec
pop
in
add
adc
add
not
push
mov
xchg
ret
add
add
add
mov
push
mov
xchg
ret
add
add
mov
add
pop
subl
clc
repnz
nop
nop
jae
or
add
jecxz
rcll
mov
xchg
ret
mov
add
das
decl
push
mov
xchg
ret
add
push
add
add
mov
clc
repnz
nop
nop
jae
faddl
lret
add
pop
push
mov
xchg
ret
add
fdivrl
add
pushf
ds
lods
push
mov
xchg
ret
push
add
add
add
push
mov
xchg
ret
add
add
push
jge
loop
push
mov
xchg
ret
dec
add
push
add
hlt
mov
lcall
mov
into
add
push
mov
push
mov
xchg
ret
add
add
add
repnz
nop
nop
jae
add
bound
sub
outsb
push
in
mov
call
nop
jae
add
jae
sub
add
inc
nop
push
mov
leave
nop
jmp
add
add
push
mov
xchg
ret
add
add
add
mov
rep
clc
repnz
nop
nop
jae
popa
bound
in
add
add
push
mov
xchg
ret
sbb
das
das
add
clc
repnz
nop
nop
jae
add
add
mov
leave
nop
jmp
add
push
sub
add
add
push
mov
xchg
ret
dec
cltd
add
add
add
out
leave
sub
repnz
nop
nop
jae
cmc
add
pusha
pop
outsl
add
clc
repnz
nop
nop
jae
add
add
add
inc
lcall
call
nop
jmp
sub
add
mov
xchg
ret
fdivl
add
add
movsl
fwait
clc
repnz
nop
nop
jae
add
mov
jno
rclb
jbe
add
popa
add
mov
leave
nop
push
mov
leave
nop
jmp
add
push
jb
xchg
push
mov
xchg
ret
add
lods
add
mov
and
mov
xchg
ret
add
add
pushf
add
rclb
fistpl
clc
repnz
nop
nop
jae
or
pop
add
mov
dec
dec
nop
push
mov
leave
nop
jmp
add
add
xchg
mov
clc
repnz
nop
nop
jae
popa
add
add
sbb
push
mov
leave
nop
jmp
add
add
adc
mov
push
add
mov
rclb
notb
and
jae
pop
add
movzwl
push
mov
xchg
ret
and
add
rclb
and
add
add
popa
pushf
bound
add
addl
jmp
mov
add
mov
push
mov
xchg
ret
sbb
add
jle
push
nop
push
mov
leave
nop
jmp
popa
dec
push
in
in
add
push
clc
repnz
nop
nop
jae
dec
lret
and
mov
clc
repnz
nop
nop
jae
dec
add
add
add
inc
inc
push
call
repnz
nop
nop
jae
or
bound
push
dec
pusha
clc
repnz
nop
nop
jae
add
in
out
mov
clc
repnz
nop
nop
jae
add
pop
dec
push
add
test
in
adc
add
test
pushf
add
or
les
daa
imul
nop
jae
add
add
add
aaa
inc
push
mov
xchg
ret
mov
add
popa
in
and
push
mov
xchg
ret
mov
add
push
clc
repnz
nop
nop
jae
lret
add
mov
into
scas
xor
clc
repnz
nop
nop
jae
pop
push
loopne
bound
repnz
nop
nop
jae
add
add
add
pop
je
fistpl
push
mov
xchg
ret
add
mov
mov
mov
add
aam
mov
clc
repnz
nop
nop
jae
push
add
add
std
add
clc
repnz
nop
nop
jae
popa
add
mov
movsl
mov
clc
repnz
nop
nop
jae
add
add
or
add
pop
clc
repnz
nop
nop
jae
xor
add
mov
clc
repnz
nop
nop
jae
add
add
das
lea
push
mov
xchg
ret
push
inc
das
add
add
add
add
fwait
mov
nop
push
mov
leave
nop
jmp
add
add
incl
add
repnz
nop
nop
jae
xor
bound
cld
push
jb
mov
clc
repnz
nop
nop
jae
xchg
add
outsl
pop
clc
repnz
nop
nop
jae
into
add
sub
add
add
cld
nop
nop
jae
sub
cltd
outsb
add
clc
repnz
nop
nop
jae
fs
xor
add
push
aaa
push
nop
push
mov
leave
nop
jmp
inc
add
mov
fistpl
clc
repnz
nop
nop
jae
pushf
bound
bound
pushf
jmp
clc
repnz
nop
nop
jae
add
sbb
into
sbb
enter
cld
nop
nop
jae
or
add
add
push
mov
xchg
ret
lret
sub
add
test
add
add
mov
leave
nop
jmp
cmc
mov
add
add
xor
js
jmp
add
in
add
mov
sbb
clc
repnz
nop
nop
jae
pop
fs
dec
add
inc
fld1
nop
push
mov
leave
nop
jmp
sbb
push
add
adc
fld1
clc
repnz
nop
nop
jae
push
add
lods
outsb
sbb
add
or
clc
repnz
nop
nop
jae
dec
add
pop
call
xor
dec
add
jno
add
mov
or
jecxz
bswap
je
add
add
jns
lods
add
push
inc
mov
cwtl
add
add
add
sub
xchg
stc
sbb
stos
add
sti
sub
add
cmp
out
repnz
cld
addr16
call
cmpsb
add
adc
mov
loopne
and
fstpt
cmpsb
add
inc
addb
stos
add
or
add
mov
or
cmp
add
sbb
lock
mov
cmpl
add
add
push
mov
pop
stc
dec
inc
movups
jmp
add
add
popf
push
shlb
add
jp
add
add
test
add
add
or
add
add
fsubs
subl
add
fs
les
imul
dec
repz
mov
mov
in
jno
not
icebp
xor
xorl
enter
add
jno
bnd
in
mov
or
sub
mov
test
add
push
sarb
aad
dec
testl
add
add
add
xchg
add
data16
rorb
jecxz
adc
imul
addb
inc
shll
add
repz
xchg
enter
lahf
xchg
test
insl
mov
push
mov
add
add
and
mov
xor
and
adc
cld
cltd
inc
out
test
shr
xor
add
insl
hlt
int
addb
lretw
pop
add
add
push
xlat
addb
inc
test
repz
inc
add
add
mov
cmpsl
fwait
mov
add
ret
lods
add
dec
inc
ret
xor
imul
pop
cmp
mov
xchg
fildl
sub
jns
inc
mov
xlat
add
add
daa
test
add
pop
xchg
sbb
mov
pop
cltd
imul
mov
imul
lret
mov
jge
in
and
push
sub
mov
jp
mov
leave
jne
dec
imul
add
aam
add
fistps
stos
add
shll
push
scas
dec
jne
inc
test
cmp
inc
ja
push
fs
pop
push
shrl
cmpsb
add
sub
in
pop
add
dec
mov
add
inc
lods
mov
jmp
push
mov
add
aam
jl
js
in
adc
mov
cwtl
cmpl
add
cmp
idivl
pusha
add
cld
lret
jno
add
jns
dec
mov
add
xchg
icebp
add
inc
out
data16
inc
outsl
test
add
push
js
add
pop
ja
push
mov
iret
pop
push
fdivrl
and
loop
shll
add
loop
jno
mov
pop
push
jae
xchg
inc
and
add
jne
or
ss
jle
lret
loope
decl
add
xchg
ja
cmpsl
adc
addb
pusha
xchg
sbb
add
and
dec
pop
mov
add
mov
ret
xor
out
insl
fiadds
add
sarl
lods
add
cmp
pop
dec
mov
lods
rcll
shll
push
or
add
add
shrb
push
add
sbb
and
rclb
xorl
xor
add
inc
sub
add
imul
mov
add
mov
mov
in
add
pop
call
add
mov
rcrl
xchg
or
add
lods
add
addr16
xchg
rcr
setge
sub
add
add
mov
cmp
mov
add
or
add
loop
adc
decl
add
out
ret
shlb
out
das
jg
add
xchg
dec
sbb
rolb
into
sbb
dec
lcall
mov
aad
xor
inc
mov
je
in
inc
mov
add
and
add
add
sub
add
loope
add
add
add
mov
add
sub
add
pop
rorl
xor
and
pop
bound
sahf
mov
add
push
push
outsl
les
js
pop
jecxz
stc
addr16
xor
pop
daa
outsl
scas
add
aas
mov
push
aaa
mov
mov
and
add
js,pt
js
cmc
aam
jmp
outsb
lods
xor
aaa
rep
add
fidivl
dec
arpl
sbb
iret
repz
xchg
cmpl
xchg
fimull
scas
add
add
add
insb
cmp
test
add
push
add
pop
and
add
dec
inc
out
mov
in
xchg
mulb
add
addb
cmp
add
jo
xchg
pop
xchg
inc
xor
pop
cmc
push
pop
sti
cli
jle
xor
pop
aam
add
shll
in
cmpsl
mov
jge
add
enter
aas
pop
pop
xlat
int
cmp
mov
mov
mov
add
test
add
add
in
outsb
test
aad
pop
insb
arpl
cltd
out
scas
add
xor
movsb
add
cmp
sub
add
ficomps
dec
sub
add
and
add
pushf
lea
push
or
and
sub
add
cld
dec
movsl
pop
les
repnz
addb
addb
arpl
mov
add
add
xchg
out
push
xlat
sbb
xlat
xchg
xchg
outsl
ds
push
jns
mov
add
add
ds
xor
loopne
lods
add
clc
adcl
add
lock
xabort
add
cmpsl
shrl
mov
pop
je
aaa
pop
mov
add
lea
fadds
mov
add
jge
cmpsb
add
cmp
int3
fsts
xor
cmp
adcl
push
and
push
outsb
push
lret
mov
mov
add
fimull
mov
add
adc
jge
out
call
add
arpl
jg
mov
add
inc
cwtl
test
popw
push
hlt
inc
cmp
dec
sbb
loopne
push
mov
mov
fdivl
or
xor
push
ljmp
psubb
jns
add
test
add
jle
pusha
popa
fidivrs
cmp
imul
adc
int3
fcoml
mov
cwtl
pop
jecxz
and
add
aad
test
add
adc
test
add
add
xor
dec
xchg
je
dec
loop
sbb
jb
add
mov
sbb
xor
push
and
in
lods
add
or
add
add
mov
add
stos
add
xor
push
lret
inc
cmp
icebp
mov
out
add
shlb
add
aas
lahf
repnz
add
add
rclb
mov
add
adc
sbb
jns
push
xor
sub
add
dec
dec
push
add
and
add
add
aaa
cmp
sarb
add
inc
mov
sarl
cmc
cli
cmpsl
xchg
sahf
add
ffree
movsl
cmp
add
add
jge
jg
sub
push
fidivrl
adc
addr16
dec
xchg
pop
fidivrs
lock
xchg
fsub
scas
lcall
push
pop
push
add
sbb
ret
add
popf
mov
fbld
sub
add
pop
jne
das
mov
or
add
in
pop
data16
add
out
shll
rcrl
jnp
xchg
dec
testl
fbld
mov
pop
and
cltd
inc
xor
add
and
add
add
jbe
add
mov
addb
adc
mov
jnp
push
popa
and
sbbl
into
jno
sbb
sahf
xchg
int3
ljmp
and
add
xchg
xor
and
add
xchg
add
imul
add
add
jp
call
pop
cli
push
push
mov
add
xor
add
sub
adc
jbe
xor
push
adc
add
in
cmp
icebp
outsb
jns
add
fmuls
aaa
and
add
lret
fwait
xor
add
or
add
add
ret
arpl
mov
add
mov
rcrl
add
repnz
xchg
ss
add
xchg
dec
imul
xor
pushf
jae
dec
inc
aad
insl
jb
mov
push
into
jge
mov
add
xchg
mov
pop
addr16
inc
sub
add
ret
add
fnsave
je
xor
add
dec
cld
xchg
jg
add
in
cmp
and
add
add
adc
add
dec
jno
mov
hlt
xor
add
addb
shrl
jne
sub
in
and
sub
add
movsb
add
or
add
add
std
scas
xor
add
fsubrs
sub
aaa
adc
in
aas
xor
jno
in
or
pop
mov
cmp
add
test
inc
push
add
aas
int3
addb
rol
stos
scas
add
mov
add
mov
push
and
add
pop
stos
add
out
xlat
sub
add
add
xchg
lods
sti
push
rclb
lret
xchg
push
add
mov
mov
arpl
sub
add
add
sbb
and
add
add
xchg
adc
mov
add
int
cltd
xor
pop
xchg
aaa
imul
addr16
in
xor
jae
stos
add
add
add
add
icebp
pop
mov
add
gs
ds
cmp
xor
imul
and
add
jle
ds
push
push
xchg
add
iret
xchg
in
ss
add
test
mov
add
out
sub
movb
test
add
shlb
adc
adc
and
push
dec
push
add
icebp
sbb
add
lahf
sahf
aam
pop
shlb
and
add
rorb
mov
inc
jne
mov
nop
lahf
sbb
addb
ret
sti
insl
shlb
cmp
xchg
stos
cld
mov
aad
test
stos
add
loope
in
dec
mov
jp
call
mov
add
imul
push
cmp
add
dec
xor
cmc
pushf
dec
inc
int
dec
adc
add
add
dec
xchg
add
aam
daa
xor
call
das
or
add
jnp
adc
mov
inc
jbe
sub
add
dec
in
add
mov
add
fisttpll
pop
jnp
mov
add
int
ror
imul
aam
add
xchg
xchg
fldt
add
ss
mov
add
into
add
add
cli
addr16
rol
push
dec
or
add
out
fimull
xor
push
pop
insb
cltd
mov
add
push
nop
scas
jle
jns
pushf
xchg
imul
xchg
stos
add
pop
pop
sbb
enter
add
shrb
mov
add
mov
add
out
outsb
dec
cmp
call
mov
mov
pop
addb
mov
xlat
mov
and
add
cld
neg
xor
outsl
pop
mov
add
sbb
rorb
sub
push
mov
pop
lds
movsl
ret
lret
jecxz
add
into
pusha
mov
out
xchg
movsb
add
or
add
lahf
loopne
or
add
add
xor
lret
jae
call
fimuls
pop
xor
les
sub
add
in
or
add
or
add
inc
push
leave
cmpsb
add
aaa
push
add
scas
and
add
dec
dec
and
add
lret
or
add
dec
cwtl
dec
inc
notl
lds
add
stos
add
pop
xchg
mov
pusha
les
in
add
call
add
or
add
aam
mov
fisubs
add
jp
enter
jecxz
cmp
mov
ds
add
add
je
push
pop
pop
lret
test
add
sahf
cmp
aas
flds
sub
mov
add
mov
popf
sub
imul
add
insl
sbb
loopne
add
daa
cmp
ret
incl
xor
loop
fs
add
add
dec
inc
ds
jae
add
lret
jmp
mov
push
int
jmp
and
add
jnp,pt
dec
add
movsb
add
push
cltd
lods
jno
ljmpw
sub
sti
in
xchg
jmp
shlb
add
mov
fistl
mov
gs
lods
das
mov
add
loope
xor
xlat
jl
addl
xor
lea
and
add
xchg
lret
sti
push
or
add
adc
add
in
jno
cli
xor
add
test
hlt
mov
add
imul
fcoms
pop
dec
push
sbb
ja
cmp
xor
fs
dec
rcll
orl
sbb
sub
or
add
add
jl
jo
mov
pushf
lahf
cmpxchg
scas
add
arpl
jne
jl
mov
add
xchg
jl
movsl
mov
xor
add
in
adc
loopne
xchg
gs
fcomip
test
jecxz
mov
shr
sbb
lods
add
lret
jo
push
or
pop
repz
out
adc
movsb
add
ds
jmp
sbb
add
jp
insl
jecxz
add
xor
orl
add
dec
mov
jmp
pop
pop
popf
or
add
add
cmpsl
or
add
arpl
test
push
imul
mov
push
adc
xchg
je
hlt
xchg
or
add
dec
jns
adc
and
add
std
fs
adc
add
adc
adc
add
jp
sub
out
add
pop
into
push
add
mov
add
mov
sub
inc
pusha
fwait
out
sarl
add
jge
or
lds
add
push
pop
in
xor
mov
cmpsl
sub
add
cmpsl
sbb
aam
and
add
dec
aad
pop
adc
pop
iret
sub
add
je
add
fs
fucomip
aaa
test
add
add
dec
sbb
dec
cmpsl
and
add
add
or
add
xchg
jbe
add
mov
push
or
jecxz
rcl
mov
lret
xchg
loopne
test
add
test
sub
cmp
aam
push
scas
add
inc
pop
sub
add
add
pop
ss
out
inc
xor
js
add
push
pop
scas
add
imul
repz
add
in
xchg
add
add
inc
add
add
dec
daa
aam
addb
xchg
xchg
add
mov
add
add
sarl
pop
jle
shrl
jl
in
les
das
pushl
std
inc
xor
jge
dec
stc
pop
test
add
addb
les
add
push
lock
insl
clc
pop
mov
add
arpl
lea
test
inc
cmp
and
add
add
bnd
mov
add
outsb
xchg
jecxz
dec
push
or
and
add
pop
lahf
sub
xor
adc
loopne
add
push
sbb
add
shr
arpl
movsl
jns
stos
sub
add
lods
push
mov
add
rclb
xor
mov
dec
add
add
pop
popa
cmpsl
mov
add
and
ret
dec
adc
mov
mov
add
jns
scas
add
hlt
scas
dec
mov
add
add
add
pop
mov
add
insl
mov
add
aas
stos
xor
hlt
push
int
push
push
je
sub
dec
xor
sbb
add
addps
out
xor
enter
fs
pop
pop
and
add
cltd
pop
and
add
add
aam
push
sbb
loopne
add
fs
add
xchg
test
add
cwtl
jmp
add
add
inc
in
mov
sbb
add
mov
pop
cwtl
mov
add
test
dec
loope
imul
xchg
jo
add
cmpsl
addr16
add
xchg
xchg
dec
imul
add
sub
pop
push
das
gs
ds
add
add
pop
sub
add
inc
pop
pop
lret
mov
xchg
add
lahf
ret
push
je
popf
sub
cmpl
mov
out
mov
inc
movsb
add
dec
push
fstl
mov
outsl
fnstenv
shl
mov
mov
into
adc
cmpsb
add
or
add
mov
add
jl
lahf
lcall
add
cmpsl
pop
mov
add
xor
mov
jbe
flds
add
lret
jle
adc
lret
mov
add
lea
adc
lds
add
jl
test
add
fs
add
sbb
mov
add
aad
add
test
out
xchg
out
scas
add
scas
jnp
jmp
add
mov
add
test
outsl
dec
mov
add
adc
jae
jp
fpatan
xchg
ret
mull
fs
sub
shrb
add
shr
lds
mov
sub
out
daa
cmp
cmpsl
lods
add
out
sub
repnz
aas
cmc
mov
shlb
jnp
sbb
adc
ds
adc
mov
or
add
loopne
clc
push
in
xchg
add
lods
inc
inc
push
jbe
xchg
add
aam
and
add
lods
add
mov
jl
loop
jge
test
lods
mov
sub
add
and
add
insb
cmpsb
add
xor
jae
push
add
xchg
add
add
int
mov
hlt
mov
add
add
addb
inc
mov
add
mov
add
mov
shrb
iret
outsl
test
add
pusha
mov
add
cmp
shll
xor
sub
add
add
xlat
xlat
inc
scas
add
xchg
add
add
xor
fmull
jns
mov
add
test
xor
and
add
add
out
pop
in
cmp
icebp
stc
add
add
pop
dec
je
pop
fidivrs
lods
push
jmp
add
addl
or
addr16
xchg
adc
pop
call
add
fdiv
jge
frstor
nop
push
out
jne
mov
xchg
sti
sub
add
dec
mov
lret
or
rcrl
add
xchg
adc
add
pop
jo
loop
add
aam
ret
cltd
push
int3
sarb
add
xor
test
add
fdivrl
test
in
and
into
hlt
mov
push
sbb
aam
pop
cltd
mov
repnz
pop
mov
addb
mov
sub
clc
mov
mov
add
repz
pop
lods
das
pop
and
ficoml
test
add
pop
aad
cld
les
xchg
fcomps
in
mov
out
scas
gs
add
clc
mov
add
fs
lock
xor
mov
add
lahf
addb
leave
fsubl
cmp
add
stos
add
jbe
lcall
and
add
and
add
fldt
pop
insb
and
add
mov
shrb
add
xor
int3
inc
mov
jnp
cli
stc
out
mov
mov
fdivrl
mov
add
add
dec
push
addl
add
or
daa
mov
mov
add
add
add
sbbl
cli
gs
addb
jnp
arpl
std
shl
add
inc
outsb
test
add
inc
inc
push
sub
add
add
enter
lods
add
xor
push
add
adc
sbb
mov
subl
xchg
popf
dec
push
add
shll
movsl
inc
pop
imul
and
fucomip
jge
xor
add
mov
mov
xchg
xchg
xor
lods
add
insb
js
out
pop
xchg
pop
push
add
outsb
scas
add
lahf
xchg
add
mov
mov
add
dec
shll
std
in
xchg
add
push
out
add
xchg
loopne
add
mov
cli
loop
jmp
jle
mov
in
addb
inc
xchg
gs
pop
xchg
add
sub
add
add
dec
stc
push
outsb
cmp
test
jb
add
fisttps
insb
stos
add
bound
fidivrl
add
or
add
jle
dec
dec
test
add
pop
push
add
hlt
imul
mov
dec
inc
fmul
inc
stc
jecxz
aam
and
add
shrb
add
mov
sub
add
add
inc
sbb
addr16
mov
mov
dec
sbb
aam
jno
mov
shlb
cmp
mov
pop
mov
sbb
push
add
stos
mov
movsb
add
jno
pop
hlt
int3
pop
dec
in
mov
add
xor
xor
sub
add
add
cld
inc
out
add
addb
cmp
push
add
test
xor
add
xlat
jo
and
adc
daa
stc
mov
adc
jle
dec
sti
adc
loop
add
push
cltd
gs
popa
push
mov
add
mov
inc
dec
lds
sti
xchg
cmpsb
add
push
mov
addb
jb
mov
fidivrl
in
mov
pop
inc
fbstp
add
arpl
add
adc
xchg
add
jae
jge
aaa
in
mov
add
sahf
push
repnz
add
add
add
shrb
adc
xchg
sub
add
adc
stos
add
xchg
add
add
addb
pushf
push
ret
add
xchg
sets
leave
inc
xchg
pop
fdivr
push
add
push
add
or
add
dec
test
xchg
jo
add
in
jmp
add
das
enter
add
jle
int
add
add
jbe
mov
int
mov
leave
js
fcmove
jne
fsubl
add
sub
push
add
adc
add
pusha
test
add
add
add
add
add
mov
dec
mov
xchg
adc
cltd
xchg
icebp
push
mov
rcr
cli
hlt
decb
or
add
sbb
mov
out
repz
jo
adc
jp
add
add
pop
adc
sahf
insl
stc
jl
jl
stos
add
mov
add
nop
lock
dec
mov
inc
sub
add
sti
cmpsl
pop
pop
xchg
sub
rcll
mov
add
mov
cmc
jp
push
sub
push
lea
mov
mov
mov
add
fst
add
add
lret
mov
add
jno
mov
add
pushf
insb
xchg
and
add
jb
dec
insb
enter
cmp
xchg
pop
mov
mov
add
add
mov
aam
xchg
std
xorl
add
call
fs
pushf
inc
adc
xor
stc
add
ss
xor
sbb
hlt
xchg
mov
add
and
add
add
loop
in
sahf
xchg
in
push
xchg
test
xchg
iret
dec
mov
add
pop
out
xchg
add
data16
add
sub
mov
add
add
add
or
add
mov
movsb
add
mov
dec
fistps
add
lock
add
jae
pop
cmp
out
les
inc
sub
lea
add
jnp
mov
sbb
xor
add
out
clc
xchg
aas
cmc
jge
xchg
js
and
adc
push
inc
add
add
xor
add
mov
mov
add
ret
out
fst
jo
int
jecxz
sarb
ds
mov
jb
hlt
mov
outsl
and
mov
lahf
imul
pop
test
add
or
dec
adc
fdivp
push
lods
jbe
test
add
xor
cltd
or
sbb
add
or
add
xor
add
movl
xchg
fs
and
add
dec
pop
inc
sbb
cmp
adc
mov
or
add
push
inc
fdivs
pushf
add
add
push
daa
push
pop
int
bound
cmp
insl
mov
mov
push
add
fs
gs
push
jge
add
dec
aam
cmovbe
lret
mov
jmp
add
cld
jecxz
xchg
pusha
xchg
xor
dec
movsl
mov
lcall
adc
scas
xchg
add
or
add
add
push
add
sbb
push
mov
add
cltd
mov
xlat
and
add
sar
inc
or
mov
add
push
dec
pushf
add
lcall
xchg
add
dec
jmp
sbb
pop
rdpmc
cmpsb
add
test
add
pop
fistpl
sbb
mov
les
sub
add
add
mov
add
and
add
add
dec
xor
outsl
leave
mov
or
mov
lcall
pop
xor
add
fstpt
cld
push
add
loop
push
sar
popf
pop
arpl
inc
cwtl
daa
inc
test
and
add
mov
add
dec
jo
int3
push
add
mov
add
mov
add
and
add
out
out
sbb
and
add
ljmp
rcl
icebp
sarl
add
lret
ret
mov
test
add
test
mov
add
rclb
fisttpll
add
movd
adc
outsb
mov
add
out
js
mov
add
repnz
nop
lret
mov
add
push
jb
fcomip
pushf
out
push
pop
mulb
add
loopne
fstl
mov
nop
pop
cmp
jnp
fdivrs
sbb
and
add
lods
arpl
arpl
xchg
pop
inc
pop
sbb
mov
add
add
fsubrp
or
add
test
pop
sarb
dec
mov
rclb
push
mov
fxch
inc
xor
into
cmp
cmp
jg
cmp
int3
lds
or
push
add
adc
jp
push
add
inc
pusha
gs
add
add
test
push
jb
cmp
jo
cltd
push
hlt
and
add
jle
lret
rorl
and
add
or
out
lretw
push
add
add
adc
add
rcr
sub
add
inc
and
cmpl
scas
cmpsb
add
dec
lret
add
imul
lods
add
dec
pop
into
mov
jp
xchg
pop
aaa
xor
repz
add
andl
add
cmp
clc
mov
sub
add
dec
xchg
call
add
cmc
cmp
mov
popf
rclb
mov
arpl
add
xor
push
rol
mov
sarb
pop
xchg
inc
jle
shrb
add
mov
add
out
pop
dec
addr16
add
dec
mul
fs
lahf
fildl
add
ja
addb
sub
add
add
sub
add
add
call
add
mov
add
out
xchg
mov
sahf
jge
push
test
add
or
add
fidivl
xor
dec
int3
xchg
std
fnsave
push
mov
add
add
dec
adc
add
call
add
pop
jmp
xor
adcl
sbb
je
les
add
add
shrl
or
add
gs
mov
add
adc
jo
add
push
data16
lahf
jb
push
inc
hlt
xchg
sub
add
cmp
add
jo
add
push
je
dec
xor
cmp
pop
cmp
lret
add
cmp
add
in
incb
add
adcl
sub
add
int3
mov
or
add
shr
xchg
daa
aaa
pop
shrb
inc
inc
ret
enter
xchg
fsts
add
add
push
repz
ljmp
add
add
in
push
cmp
outsb
std
dec
mov
add
pusha
pop
idivl
sarb
jae
push
push
cmp
add
in
fstp
test
add
test
dec
pusha
scas
mov
pop
adc
daa
adcl
test
negl
filds
popf
cmp
lret
jae
mov
dec
push
mov
add
scas
cmp
movsb
add
sub
add
insb
jl
add
and
add
out
repz
out
ret
mov
add
push
daa
or
mov
sub
add
add
dec
inc
xchg
cmp
add
repz
divb
add
rcrb
mov
sbb
pop
mov
pop
ds
push
add
movsb
add
inc
xchg
add
ret
jg
arpl
faddl
jb
icebp
push
jge
jo
mov
out
enter
lock
mov
pop
pop
mov
sti
loopne
inc
mov
cmc
xchg
pop
addl
subl
outsb
push
daa
roll
outsl
addr16
mov
add
out
pushf
jl
mov
pop
pcmpeqb
lcall
mov
push
out
out
push
add
jb
mov
sbb
mov
jmp
outsl
scas
add
mov
lock
movsl
xor
add
loopne
or
add
mov
add
sbb
sub
mov
lods
jp
cmp
add
add
pop
movsl
mov
mov
cwtl
popf
add
add
inc
fs
dec
outsl
add
add
rolb
std
popf
xchg
out
push
js
mov
xchg
cld
test
pminub
push
pop
iret
pop
mov
dec
sbb
add
daa
mov
inc
pop
inc
mov
sub
add
cmpsb
add
xor
in
dec
int
pop
push
and
icebp
sar
stc
das
mov
push
out
lret
xchg
mov
lods
add
xchg
aad
push
pop
cltd
add
add
addb
adc
xchg
add
add
scas
add
loope
dec
scas
jnp
xlat
movsb
add
ljmp
add
push
inc
in
xor
cmp
popa
fistpl
bound
add
mov
mov
sbb
dec
js
and
mov
popa
addr16
inc
stos
add
push
add
pop
les
mov
add
add
add
ficompl
xor
std
call
inc
in
mov
cltd
lea
add
jno
popa
mov
sub
add
arpl
decb
cmp
xchg
xchg
add
or
cltd
dec
xchg
add
pop
adc
pop
push
mov
add
mov
mov
sub
add
cmpsb
add
add
add
adc
lahf
comiss
bound
cmp
adc
aaa
push
add
and
add
pop
lret
and
dec
rorb
popf
repz
int
pop
sbb
sbb
aam
dec
cmp
and
add
pop
mov
pop
and
ret
xchg
add
mov
cmp
add
int
cmp
push
push
add
add
mov
add
jo
bound
add
mov
jg
and
add
push
dec
and
add
cmp
xor
out
cltd
dec
dec
and
add
cmp
scas
xchg
and
add
aaa
jle
or
add
addr16
mov
add
add
insb
fldcw
push
mov
aaa
aaa
lret
xchg
add
mov
hlt
cli
inc
aas
out
mov
add
bound
adc
add
rcl
push
cwtl
scas
pminsw
push
jle
test
add
shrl
stc
inc
mov
pop
jl
fstpt
enter
stos
add
and
cld
outsb
std
imul
dec
outsb
jecxz
test
add
test
add
cmc
aam
inc
lret
js
je
xchg
jg
repz
xor
out
add
add
ss
rclb
aaa
ret
mov
cmp
xor
push
imul
sbb
ja
push
aam
xchg
add
test
add
add
lods
add
and
add
add
int3
daa
out
mov
js
dec
ds
sahf
lods
add
lret
loope
add
out
xor
add
mov
add
jno
add
dec
and
add
stos
add
jle
and
ja
fwait
pop
push
push
lcall
add
add
std
or
add
mov
xchg
add
rcr
xor
add
add
mov
fisubrl
add
popf
shlb
sbb
push
xor
fidivrl
and
add
adc
icebp
adc
add
fsubr
push
mov
add
xchg
add
addb
mov
shlb
imul
add
dec
mov
add
push
popf
popf
into
lahf
jg
lret
mov
jnp
xchg
add
lcall
add
test
fs
pop
dec
pop
fdivl
and
add
xor
stos
mov
cli
adc
fistpll
sar
lock
add
xor
pop
jne
iret
pusha
enter
pop
sbb
add
stos
pmaxub
push
inc
xor
add
xchg
add
or
jp
test
add
mov
add
inc
addr16
mov
add
add
add
xchg
vprotq
add
fsubs
fwait
in
pop
push
add
inc
or
mov
add
or
add
mov
insb
fiadds
addb
add
add
add
or
jb
mov
add
cld
and
add
ljmp
sbb
add
mov
mov
adc
jecxz
scas
add
dec
adc
push
add
add
add
add
add
add
push
jmp
xchg
jnp
mov
shl
sub
add
ja
sahf
mov
add
add
add
and
jo
add
cmp
or
add
inc
cmpsb
add
bound
push
add
std
lret
inc
out
rcrb
mov
mov
movsl
fucomp
mov
add
add
shlb
inc
mov
add
jl
sub
add
push
add
sbb
add
repnz
jae
inc
push
sbb
add
push
xchg
je
jle
pusha
add
and
add
dec
pop
hlt
out
add
xchg
aas
test
into
pop
sbb
rcr
xchg
cmpsl
dec
cmpsl
cld
daa
fildl
add
ficoms
addb
xchg
adc
push
test
add
add
loopne
fidivl
dec
fwait
mov
lahf
repz
je
outsb
or
add
xlat
fcom
cmp
mov
xor
push
add
sub
add
enter
mov
clc
or
js
push
add
mov
in
inc
das
lret
mov
jmp
or
add
iret
dec
inc
xchg
and
xchg
out
dec
dec
shrl
cmpsb
add
ljmp
test
rcrb
fldl
add
dec
and
arpl
aam
inc
mov
add
sub
arpl
pop
shrl
addb
jl
add
outsl
aaa
cmc
clc
add
cmp
add
lds
push
fldcw
dec
dec
pop
adc
add
movsl
int
scas
or
add
add
lret
xlat
mov
and
shll
add
sbb
add
ret
cmc
jecxz
cwtl
mov
add
xchg
add
out
lea
add
pusha
mov
add
cmpsb
add
mov
push
mov
lahf
xchg
jb
add
inc
push
jbe
sub
or
add
jnp
repnz
das
ret
add
mov
add
push
add
je
jp
outsl
xchg
addb
add
xchg
decb
mov
dec
arpl
xchg
rclb
scas
add
icebp
xchg
pop
xchg
lds
sbb
shll
sahf
or
jb
pusha
add
add
lret
xchg
xchg
mov
int
pop
or
add
adc
add
jb
mov
jl
dec
xchg
inc
mov
jnp
xor
dec
sub
add
popa
add
add
addb
iret
ret
js
jge
stos
xchg
sahf
jb
mov
mov
jecxz
stos
add
fdivrs
scas
and
popa
push
push
adc
sub
lock
lods
add
mov
stc
mov
add
mov
add
bound
add
xor
add
xchg
movsb
add
or
or
add
inc
mov
add
add
fcomp
mov
add
dec
gs
push
fdecstp
push
sub
add
mov
add
xor
pop
into
pop
dec
jns
addb
jecxz
shl
lods
mov
sub
add
adc
and
add
loop
add
jae
xor
mov
add
or
mov
mov
xchg
add
negl
ret
xchg
push
ljmp
add
ljmp
add
mov
add
push
not
cltd
sub
aad
dec
iret
and
add
cwtl
push
xor
mov
sbb
xchg
add
sub
add
or
add
push
das
xchg
lds
daa
jecxz
fisttps
or
add
cli
ret
mov
cmp
incl
add
push
add
mov
mov
inc
or
xchg
lds
das
clc
add
in
lahf
shll
int3
pusha
orl
insb
and
imul
addb
xor
jbe
in
jg
add
dec
cmp
lret
fadds
add
sub
addl
add
jl
push
hlt
push
add
imul
aam
fwait
pop
packssdw
add
popa
pusha
jns
addb
rorb
add
mov
jecxz
or
add
lcall
add
mov
test
add
jecxz
add
ja
stc
lds
sub
jne
jns
mov
add
roll
and
add
jp
sub
add
js
lods
imul
add
push
aas
popf
dec
lret
add
cld
sbb
add
push
fsubs
dec
lea
add
add
inc
inc
in
xchg
add
call
cmc
aaa
adc
gs
loopne
stos
add
movzwl
sub
dec
cmp
add
mov
sub
mov
add
adc
xchg
add
xchg
dec
out
push
pusha
sar
xor
fsubl
add
out
test
add
sbb
add
add
lret
sbb
stc
xchg
push
jl
push
sbb
jnp
dec
sub
add
jno
test
add
mov
inc
enter
add
into
jns
xor
hlt
inc
imul
sbb
mov
add
xchg
add
mov
push
xchg
add
add
adc
dec
pop
les
mov
add
call
add
xchg
ret
addb
mov
fwait
aas
xchg
nop
shlb
add
test
add
add
dec
addb
enter
sbb
sarb
cmc
cwtl
iret
out
mov
add
aad
sub
or
add
add
jb
add
js
notb
cmp
mov
jl
insb
aaa
sbb
int
leave
xor
dec
nop
std
pop
mov
add
fstpl
in
hlt
xlat
sub
add
dec
xchg
add
das
mov
add
push
sub
add
inc
push
jne
fadd
imul
rol
fwait
mov
pop
mov
or
add
and
or
add
xlat
pusha
ljmp
pop
test
add
mov
arpl
mov
inc
inc
add
jp
dec
movsl
daa
mov
add
pop
dec
ret
mov
mov
add
add
add
sbb
insl
bound
sbb
push
aad
test
add
loope
inc
push
jg
add
mov
add
mov
cmpsb
add
insb
mov
add
imull
shr
push
iret
mov
mov
push
add
add
pop
js
rcl
xlat
bnd
aaa
inc
jbe
sub
add
jp
test
clc
daa
stos
add
scas
call
gs
shlb
pop
bound
push
add
xchg
out
in
sub
jge
xchg
sti
outsl
fnstenv
jo
test
add
adc
push
xor
scas
test
add
xchg
xchg
loope
out
cli
inc
add
xchg
cmp
cmp
add
sbb
popa
enter
and
add
pop
rcrb
or
add
idivb
gs
fiaddl
mov
outsl
mov
test
add
lret
xor
shrb
mov
mov
xor
add
imul
add
call
jg
addr16
xchg
xchg
inc
popf
outsl
adc
popa
enter
add
aaa
call
mov
add
sbb
add
mov
test
imul
mov
add
mov
cmp
sbb
pop
and
outsb
popa
pusha
cmpl
pop
or
pop
dec
pushf
ja
fdivrp
add
add
mov
add
rclb
sub
add
and
add
sub
add
xor
cmpsb
add
adc
aad
mulb
add
into
mov
inc
movl
push
mov
outsb
lea
sbb
mov
aad
ljmp
add
clc
sarl
lret
mov
add
cmpsl
bound
add
inc
push
add
add
cmpsl
dec
sbb
fcoml
jns
jge
and
jbe
pop
push
and
push
mov
add
add
js
shl
out
pop
sub
jl
mov
adc
or
add
mov
rcrl
mov
clc
mov
xor
push
and
fdivrl
jae
divb
adc
das
adc
mov
data16
mov
fsubl
add
shlb
pop
mov
add
orl
into
jp
data16
add
lock
add
xchg
or
or
fwait
cmp
add
pop
add
shlb
xor
repz
ret
xor
cmpsl
arpl
mov
inc
pop
sti
test
mov
jae
jnp
and
jne
add
das
sub
add
pop
mov
push
testl
push
jecxz
scas
add
mov
lea
dec
addb
adc
add
jae
sub
add
repnz
xchg
pop
ljmp
outsl
or
add
add
push
sbb
ss
mov
add
add
add
sub
add
test
add
xchg
pop
aad
push
movsl
mov
add
popl
push
inc
lock
add
inc
adc
add
xchg
add
push
mov
sbb
pop
push
cmp
add
ljmp
adc
sub
add
push
outsb
mov
and
add
sub
stos
mov
add
and
add
insl
jg
pop
jl
mov
orl
iret
add
add
sub
add
mov
push
icebp
arpl
add
cmp
xchg
jo
inc
dec
xchg
add
inc
icebp
jns
mov
scas
dec
lret
sahf
xchg
add
sbb
in
mov
cltd
jb
mov
dec
and
pushf
push
cmc
stc
je
fwait
sar
or
ljmp
aaa
or
add
sub
sub
ljmp
add
lret
arpl
add
inc
inc
xchg
sub
or
add
test
scas
add
and
add
popf
scas
add
cli
cli
sub
add
addb
push
pop
sub
add
and
sub
add
add
addl
add
sub
xchg
push
jnp
std
pop
test
add
enter
jecxz
add
cmp
daa
push
pop
call
add
xor
inc
xor
jl
pop
mov
movsl
sub
push
sub
push
fs
push
test
add
lcall
out
jmp
push
imul
imul
and
mov
add
test
add
imul
add
xor
fistps
and
add
movsl
cmp
jns
jl
add
aad
and
add
push
out
jae
test
add
add
in
mov
ret
sarl
pusha
mov
jns
lahf
mov
add
fwait
shrb
aas
lock
lds
jge
cmp
jbe
imul
imul
adc
add
repz
xchg
loop
add
mov
add
fbstp
add
lahf
sbb
and
add
lret
popa
xchg
scas
add
lret
iret
fs
dec
sub
add
lods
add
mov
pop
inc
xchg
lods
add
sub
jmp
cli
movsl
xchg
sbb
mov
add
addb
lods
add
fdivrs
daa
mov
ljmp
mov
jl
sbbl
add
cld
sub
add
cmp
cmc
sub
add
lahf
scas
push
sub
data16
xor
xor
test
cmp
jmp
aam
sub
or
add
ja
add
cld
test
iret
xchg
in
shrb
add
inc
lcall
add
jle
repz
and
add
andnps
stc
pusha
jmp
mov
add
inc
scas
mov
add
repz
add
das
movsb
add
and
add
shll
add
push
cmp
aad
add
das
test
add
iret
into
pop
repz
add
add
inc
out
sarl
xor
add
adc
sbb
add
jp
lods
add
popf
mov
add
inc
sub
add
push
test
add
mov
add
insl
or
add
test
add
cmp
pushf
sbb
add
sbb
loop
push
add
addr16
cli
jbe
jle
dec
insb
paddsw
pushl
add
flds
add
jo
xchg
jbe
mov
add
add
mov
bound
mov
pop
rclb
mov
add
popa
lcall
add
icebp
mov
add
sub
sub
add
lods
add
scas
add
pop
fnstenv
sbb
add
mov
add
data16
sub
add
test
lcall
add
addb
dec
sbb
je
insl
sbb
dec
bnd
cmp
test
add
add
add
xor
in
push
and
loopne
jne
and
add
lods
sbb
popa
mov
adc
cmpsl
lcall
xchg
addb
stos
fcomi
imul
add
dec
ret
jb
adc
push
shl
mov
mov
sub
mov
add
enter
in
test
add
mov
orl
sub
push
imulb
adc
sub
das
pop
dec
ret
mov
xchg
xchg
cmp
rclb
add
scas
mov
or
add
frstor
xor
lret
loope
mov
and
add
aaa
arpl
cltd
mov
vprotq
xchg
jns
cmp
add
push
mov
mov
fmulp
into
mov
addb
outsl
adc
enter
or
jo
xchg
and
add
jo
pop
leave
add
add
add
push
add
je
popf
shlb
sahf
inc
fistps
mov
pop
inc
jmp
inc
rorl
fmull
pop
pop
cwtl
loope
mov
add
push
out
add
adc
inc
mov
xor
stc
adc
jns
scas
add
mov
push
xlat
cmpsb
add
mov
xchg
sub
push
xchg
hlt
add
sub
add
cmp
scas
add
xchg
test
mov
add
add
add
and
add
cmp
add
mov
shrb
add
dec
cli
xor
sbb
sub
add
insb
in
or
xor
push
repz
add
pop
lret
dec
test
add
push
lea
add
jp
stos
in
arpl
cmp
shlb
cmp
or
add
add
fsubs
cmp
lock
pop
inc
inc
je
xchg
sarl
push
mov
add
xchg
lcall
sub
inc
sub
add
cmpsl
lock
xchg
enter
mov
add
mov
sbb
dec
fstps
mov
and
add
mov
add
inc
push
sbb
lret
std
sbb
fdivs
std
add
add
add
xchg
stos
add
aas
flds
add
xor
aaa
sub
add
dec
mov
add
add
shlb
lods
pusha
cltd
adc
test
add
add
aam
adc
and
mov
add
mull
add
sbb
sahf
push
adc
jl
sbbl
sbb
add
and
add
inc
push
mov
inc
cmp
add
loopne
add
scas
aaa
fadd
aas
push
stos
decb
and
add
ret
add
fcoms
jno
pop
add
imul
test
mov
mov
add
add
and
add
and
cmpl
add
add
mov
imul
stos
jecxz
xor
add
sbb
xor
push
add
jb
shrb
add
shr
or
add
xor
push
add
lods
add
ljmp
xor
xchg
cmp
mov
mov
add
jns
std
and
xor
xchg
icebp
mov
mov
add
aas
pop
test
add
mov
fisttpll
add
loope
inc
fists
push
addb
mov
xlat
pusha
fdivr
mov
add
rcll
mov
add
lret
add
loopne
add
add
add
jge
xor
add
add
fidivrl
add
pop
jb
lods
add
sarl
or
add
mov
add
das
add
or
mov
repnz
add
add
ja
sub
or
add
xchg
or
add
mov
sbb
mov
adc
pop
cmp
iret
ds
dec
adc
jmp
xor
test
add
int
add
fcompl
ds
aam
pushf
lcall
inc
add
add
pop
inc
dec
test
add
sbb
add
lea
in
cmpsl
pop
mov
jge
mov
add
enter
add
add
push
mov
mov
add
lret
ljmp
sub
lret
push
sbb
loopne
pop
sbb
movsl
pop
addb
xor
jno
inc
jbe
dec
and
add
push
mov
dec
addb
adc
scas
add
sbb
mov
add
xchg
xor
addb
and
stos
add
mov
popf
iret
scas
cmp
sbb
fwait
imul
dec
aaa
js
cmp
imul
pop
mov
add
add
ds
add
mov
repz
add
push
shll
mov
adc
out
push
sub
add
fs
addl
add
fs
adc
add
lds
jno
add
xchg
inc
stc
movsb
add
aad
push
add
add
add
fidivl
sbb
enter
inc
push
adc
xchg
negl
mov
adc
add
repz
add
add
push
out
mov
xchg
dec
add
add
rcrl
fmuls
jne
ja
mov
jbe
jb
outsl
cltd
out
inc
shl
xchg
mov
add
push
rcrb
jo
mov
add
pop
jge
movsb
add
out
and
add
push
xchg
mov
sub
fmuls
add
cli
mov
mov
je
mov
xor
add
stos
test
mov
add
cmp
sbb
inc
cmovno
into
sub
add
and
jns
add
jb
sbb
push
mov
jmp
cmc
inc
inc
fsubrl
aas
push
test
add
mov
adc
adc
push
mov
add
dec
clc
mov
push
inc
push
or
add
cmc
call
in
imul
lret
add
mov
out
das
jae
aad
lea
add
xchg
jno
test
add
adc
jle
and
add
fs
add
repnz
fwait
mov
imul
jg
add
sub
xor
dec
idiv
inc
adc
lret
add
stos
add
mov
decl
push
sbb
add
cld
ljmp
sbb
jno
mov
cwtl
xor
addr16
mov
add
pop
xor
mov
imul
clc
stc
sbb
lret
divb
lret
out
popa
mov
push
dec
stos
adcl
into
les
lea
jb
add
sub
jnp
lret
icebp
movsb
add
outsl
adc
dec
jno
add
dec
ds
das
lds
add
lcall
lock
xor
xchg
ret
add
inc
inc
ljmp
pop
mov
add
add
add
and
add
ja
pop
int3
pop
mov
dec
adc
mov
inc
adc
add
mov
add
mov
add
stc
lret
scas
add
add
dec
ja
mov
cmp
fisttpl
sub
lret
add
stc
dec
fsubr
mov
push
add
pop
aas
mov
scas
jne
leave
xchg
dec
movsb
add
movsb
add
sub
rcll
fmuls
clc
lcall
stos
add
jnp
add
sbb
mov
pop
cmp
add
pop
sub
add
shr
shll
imul
pop
mov
rcrb
rorb
mov
inc
jl
pop
mov
jle
mov
add
mov
add
aas
xchg
fs
xor
push
test
add
xor
add
add
lods
add
outsb
push
adc
repnz
addb
enter
sub
add
add
ja
ret
lahf
cmpsl
inc
inc
push
push
movsb
add
into
test
add
les
xchg
pusha
shlb
mov
add
popa
cltd
push
or
add
add
push
mov
add
add
add
xor
mov
iret
lahf
push
cwtl
jnp
add
loope
add
mov
add
add
mov
add
dec
gs
dec
popf
test
add
push
mov
mov
mov
dec
into
cli
lods
add
testb
inc
add
pop
inc
add
pop
dec
std
daa
sbb
pushl
or
add
rorl
xchg
sti
jbe
arpl
les
mov
mov
cmpsl
icebp
faddl
das
jle
inc
div
sub
in
add
scas
ds
adc
in
lahf
xorl
and
add
jecxz
pusha
in
add
mov
xchg
xchg
or
add
mov
add
pop
test
ljmp
enter
push
jo
out
outsl
and
and
add
cmpsb
add
int3
movsl
fcmovnbe
in
cld
or
pop
xchg
repnz
adc
add
call
int
je
fcompl
pushf
xor
add
jo
js
mov
arpl
add
jbe
and
add
adc
adc
xlat
out
or
add
jno
insb
mov
jb
jb
je
sbb
pop
xchg
repz
and
pop
sub
cld
shrb
jo
adc
pusha
push
cmp
add
xchg
add
fdivrl
jecxz
lahf
insl
jne
xchg
fucomip
mov
add
shrl
mov
rcrb
test
fldt
popf
lds
stos
mov
add
fnstsw
mov
mov
imul
add
mov
shrb
add
outsl
test
add
dec
or
add
in
rcll
push
add
inc
sahf
mov
insl
push
push
and
add
and
add
or
add
or
push
add
add
xchg
sbb
or
shl
push
cmp
adc
add
xchg
xor
cmp
add
add
add
fistpl
xor
inc
mov
fisttps
add
push
lods
add
les
arpl
cmp
add
xor
xor
sbb
mov
pop
sub
cmp
addb
fcoml
fs
cmp
fisttps
add
push
movsb
add
mov
repz
xchg
pop
aam
add
dec
mov
add
cmp
syscall
js
inc
mov
pop
push
add
add
add
or
adc
jno
js
rolb
fs
add
add
cmpsl
in
cltd
adc
fidivl
mov
or
add
cmp
call
add
mov
and
pop
shlb
aam
mov
jb
push
add
jmp
call
sar
add
aad
add
cmp
mov
into
xchg
cmpsb
add
xor
add
add
leave
and
add
push
add
add
add
int3
and
stc
jnp
sysret
push
movsl
aas
jo
mov
add
test
neg
push
test
push
lahf
addb
fs
add
sti
cmpsb
add
xor
stos
push
add
aas
push
hlt
inc
shl
cmp
mov
add
add
daa
shll
add
enter
daa
pop
inc
or
add
rclb
add
addr16
pop
dec
lret
call
add
xor
adc
daa
fistpl
sub
test
add
jns
jae
add
add
insb
and
add
enter
add
pop
jo
inc
mov
xor
mov
push
ljmp
or
add
push
and
dec
cltd
add
into
mov
stos
jmp
mov
in
aas
out
fwait
nop
and
add
mov
add
rcrl
pop
push
repnz
loop
out
adc
xor
cmc
imul
push
add
add
add
je
pop
xchg
xchg
pop
mov
pusha
add
dec
add
add
std
mov
mov
add
and
sub
add
test
add
add
data16
mov
add
je
pop
addb
mov
jbe
addb
pop
in
or
add
dec
mov
mov
add
pop
push
mov
test
add
add
mov
pop
cmc
dec
inc
mov
scas
cmp
add
fnstcw
xor
testl
add
or
xchg
cltd
mov
add
cmp
sti
cmpsl
cmp
imul
lcall
pop
mov
mov
add
inc
xor
push
in
pop
add
stos
jg
addb
stc
mov
add
add
inc
xchg
outsl
mov
add
sbb
cmpsl
pop
aad
add
pusha
push
push
sub
add
sub
add
inc
repz
and
mov
or
add
repz
add
lods
rcll
icebp
adc
and
push
add
add
lahf
push
sarl
xchg
xor
cmpsl
lcall
add
cltd
add
add
aas
cmp
mov
adc
jp
cwtl
cld
shlb
add
je
dec
jo
jg
fdivr
jne
mov
add
out
sbb
int3
repnz
add
loop
loop
add
sub
xchg
add
hlt
sbb
in
addb
pop
pushf
inc
clc
xchg
test
outsl
js
add
add
jns
leave
sub
add
rorl
pop
or
mov
test
adc
pop
jecxz
inc
mov
add
js
out
add
addb
outsb
cmpsl
not
addb
mov
mov
push
cmpsl
and
add
mov
add
dec
adc
in
cmp
in
add
add
add
les
ss
add
aaa
lcall
fwait
daa
sahf
mov
add
dec
push
sub
xor
lea
cmpsb
add
aaa
movsl
imul
scas
add
sub
add
add
sbb
dec
push
sub
jb
push
xor
ss
add
jmp
add
pusha
scas
add
je
jmp
popa
les
add
pop
xor
dec
stc
add
jne
stos
add
push
pop
sbb
add
scas
add
out
sahf
mov
mov
aam
ljmp
add
call
jno
cmpsl
jl
fidivs
sbb
xchg
sub
add
ret
bound
xchg
jmp
mov
icebp
push
cltd
sbb
pop
iret
inc
call
push
sub
mov
add
in
dec
jnp
dec
psrlw
fucomp
rcrl
add
add
out
sub
loopne
mov
inc
or
int
arpl
lods
push
jecxz
mov
add
shlb
add
add
rorb
lcall
and
add
int3
lcall
add
inc
push
dec
bound
in
addr16
jae
lds
rorl
add
add
rcrl
in
shll
cmp
add
sbb
lock
add
cwtl
rol
add
sbb
dec
adc
test
fdivrl
rcrb
xchg
mov
dec
cmp
jnp
cmp
add
jo
or
add
sub
add
xchg
add
test
add
add
cmpsl
jb
sarl
cli
jnp
jae
push
xor
add
rcl
inc
jle
xor
daa
addb
xrelease
add
add
ljmp
fs
movsb
add
inc
jmp
add
xor
mov
mov
push
flds
pop
xchg
jmp
push
add
cli
sahf
mov
push
sub
push
add
or
add
adc
popa
mov
and
add
add
add
sahf
xchg
add
inc
aaa
lea
int3
push
xchg
add
sbb
lahf
mov
add
cwtl
mov
add
or
add
mov
add
sbb
add
shr
cmpsb
add
or
in
adc
stos
ficoms
jb
rorl
add
add
sub
add
mov
add
jg
add
mov
and
add
mov
add
dec
in
in
add
aas
and
sub
add
cmp
ds
lea
add
ds
fistpl
fs
add
adcl
adc
ret
pop
sbb
add
add
mov
sbb
les
mov
sbb
add
cmpsl
xlat
outsl
lahf
pop
sti
mov
add
addb
mov
add
js
sahf
in
imul
mov
add
lds
add
lea
cmpsl
mov
in
and
add
mov
add
mov
repz
add
aad
loop
mov
xor
or
add
testl
scas
add
into
jae
movl
push
xchg
push
xor
call
add
addb
pop
les
add
repz
loope
sahf
cwtl
loope
jae
rcrl
add
faddl
jo
les
add
rcl
sbb
xchg
pop
addb
jne
pop
outsb
inc
sub
add
mov
add
pop
pop
out
aam
cmp
mov
pop
mov
pop
stos
add
jbe
loope
jnp
fsub
sbb
add
je
aam
add
in
dec
insl
addb
aaa
sub
in
mov
adc
imul
mov
leave
mov
mov
add
or
add
xchg
enter
out
xchg
inc
jge
add
daa
lahf
mov
nop
jg
add
add
mov
pop
arpl
add
lahf
push
add
adc
rclb
add
dec
stos
add
pop
aas
addb
lock
xchg
push
add
and
mov
lcall
xchg
mov
adc
push
imul
add
cmp
push
push
scas
shr
jne
fildll
lahf
mov
pop
popf
pop
lret
pop
mov
add
push
sbb
jae
xchg
hlt
movsb
add
in
xor
add
inc
rclb
adc
xchg
pop
mov
add
dec
mov
mov
add
adc
loope
add
add
and
lods
inc
ss
jae
dec
mov
add
lahf
vpslld
add
add
add
mov
add
call
xor
add
ficompl
mov
popa
mov
xlat
cmp
addb
xor
mov
outsb
fistl
and
pop
call
jmp
add
ljmp
lcall
add
push
outsb
sti
int3
fnstenv
pop
mov
insb
jg
adc
jp
add
imul
add
add
add
add
add
xchg
add
ja
pop
addr16
sbb
sub
add
cmp
cmpsb
add
addb
xor
scas
add
add
add
add
cltd
mov
add
adc
jb
sahf
mov
add
add
add
xchg
sbb
nop
imulb
lods
ret
add
add
sub
add
jns
repz
sti
cltd
outsb
sbb
xor
or
clc
dec
stos
add
dec
cmp
push
repz
out
pop
movsl
mov
jle
pop
xor
rcr
push
add
add
add
in
add
jb
loopne
sbb
and
sbb
mov
out
sbb
mov
adc
adc
movl
dec
loop
mov
out
mov
lods
lea
add
gs
pushf
add
add
aaa
loopne
jmp
cwtl
test
add
pop
sbb
ja
xor
cmc
pusha
lock
jg
faddl
into
sbb
adc
mulb
out
dec
push
adc
les
jne
add
inc
adc
cld
les
add
dec
lds
add
out
jecxz
repz
imul
fimull
fdivrl
mov
in
idivl
add
sbb
lods
into
inc
sbb
or
jmp
int
loope
lcall
add
pop
mov
addr16
psrlq
xchg
arpl
jnp
stos
jmp
pushf
addb
dec
jge
add
sub
stos
mov
mov
push
jne
xchg
outsl
call
leave
inc
bound
mov
xor
add
clc
and
add
inc
jns
mov
xor
add
repz
cmp
add
add
push
jl
add
jge
mov
mov
iret
mov
and
inc
inc
lahf
push
les
push
add
daa
jb
repz
add
outsb
stos
add
aam
adc
add
sarb
mov
cli
add
sub
add
or
add
cmp
loope
rcl
sbb
mov
add
mov
daa
lods
add
pop
and
in
and
in
and
add
pop
jno
in
icebp
fisubrs
pop
mov
mov
xchg
mov
push
add
sbb
pop
out
mov
imul
and
add
rorl
add
mov
and
add
add
mov
faddl
add
loop
aam
xchg
add
mov
inc
imul
add
xor
add
lea
pushf
into
cmp
pop
stos
cwtl
jmp
jno
fdivrl
daa
imul
add
add
in
push
lret
dec
lock
leave
mov
mov
cmp
fisttpl
add
add
add
ret
out
pop
push
and
out
stos
push
sub
add
xchg
test
outsl
push
and
add
xor
add
fcmovnu
mov
ficoml
push
jne
fldenv
lahf
pop
push
hlt
jg
add
dec
addb
repnz
test
add
push
add
mov
ds
pop
sub
fcoml
sub
add
jne
add
cmp
js
adc
mov
add
xchg
pushf
mov
xor
shlb
mov
add
mov
cmpsl
js
add
add
add
mov
add
mov
mov
xor
sbb
les
clc
push
xchg
nop
sbb
add
jo
mov
jo
addr16
jae
in
hlt
aad
sub
enter
cmc
fstpt
add
add
mov
leave
mov
aad
lea
inc
jmp
and
add
add
fstp
jb
cmp
jp
add
aad
cwtl
dec
jns
xchg
add
mov
add
cmp
adcl
xchg
add
mov
add
push
lods
xchg
clc
popa
or
sub
add
and
add
loopne
mov
leave
cmp
js
movsb
add
push
std
xor
adc
mov
xor
out
push
xor
add
cmp
add
fwait
aaa
outsb
push
xchg
sub
movsb
add
inc
mov
jb
inc
mov
add
shrl
cli
repnz
sahf
or
add
jle
xor
mov
ljmp
jnp
dec
add
add
add
jnp
pusha
fnstenv
mov
add
dec
push
in
jg
negb
and
add
movsb
add
dec
and
add
pop
stos
addb
imul
stos
add
add
xor
dec
fld
ret
out
and
pop
loopne
push
add
push
add
cmp
add
inc
sub
add
fistpll
mov
add
pop
xor
add
aaa
repz
negb
call
aam
adc
xor
xor
pop
lret
add
clc
sbb
inc
lret
lea
pop
mov
jnp
push
fs
ljmp
cmpsl
ja
aaa
add
add
loop
jns
or
in
roll
pusha
add
add
aas
int3
pop
mov
shll
mov
add
add
jge
add
aas
xor
jecxz
add
aaa
cwtl
dec
fldl
fsubr
in
mov
sbb
dec
testl
fsubl
add
aad
add
decb
lret
mov
add
add
test
or
icebp
push
shl
mov
pop
push
sbb
mov
add
lds
cmp
mov
add
or
adc
int
inc
sbb
cmc
repz
or
lock
movl
add
add
into
or
add
dec
lock
movsb
add
xchg
out
mov
cwtl
in
jbe
out
jp
js
cmpl
cwtl
loop
popf
lods
add
inc
popf
aaa
adc
xchg
add
loop
mov
add
push
dec
inc
inc
gs
mov
out
adc
adc
clc
test
add
or
add
scas
lahf
scas
add
add
add
add
aaa
and
rorl
sarb
in
add
mov
cli
push
sbb
push
addb
mov
add
sbb
mov
sub
out
add
or
add
push
jae
adc
imul
adc
jl
mov
and
scas
add
test
add
imul
mov
pushf
inc
mov
mov
mov
fst
push
sbb
lahf
in
push
pop
or
add
jmp
fcoml
push
fstps
add
imul
sarl
lea
dec
mov
add
cmp
in
loop
mov
out
jo
or
add
sbb
sbb
jecxz
and
add
add
into
mov
add
cmpsb
add
inc
ret
adc
xchg
outsb
stos
add
scas
mov
add
add
or
push
xchg
add
xchg
mov
or
loopne
add
and
add
add
add
pop
test
add
lods
add
dec
mov
add
stc
add
dec
xor
inc
loop
add
ljmp
add
pop
jb
rorl
add
and
add
test
add
xchg
and
add
add
add
pusha
int3
gs
mov
add
add
jno
aaa
sbb
lods
add
cmpsl
or
add
add
aas
sbb
fwait
cmpsl
jmp
mov
add
fsubrs
sub
inc
xor
add
in
insl
add
add
test
jbe
add
shr
xlat
hlt
sbb
mov
add
sbb
add
pop
and
add
mov
add
je
add
sbbl
add
dec
cmp
jge
push
mov
dec
out
test
sub
cmc
inc
jecxz
insl
out
leave
jle
mov
scas
lcall
xchg
push
lock
lods
add
lret
addb
xor
outsl
inc
data16
add
pop
test
mov
or
loop
mov
xchg
popa
rcrb
fstps
sub
jnp
push
fmuls
ljmp
pop
sahf
rclb
addr16
xor
fs
add
scas
add
dec
xchg
jge
test
sbb
das
and
add
inc
mov
test
pop
imul
add
lock
in
mov
ljmp
add
sbb
sbb
ret
aam
add
mov
add
jb
inc
out
gs
or
add
mov
cwtl
mov
test
add
add
lahf
js
mull
pop
lcall
das
dec
and
add
pop
dec
scas
add
mov
mov
add
add
sbb
add
imull
push
add
push
add
and
add
sti
or
mov
mov
fwait
sbb
push
add
push
inc
dec
faddl
add
adc
imul
adc
shr
fwait
lds
push
add
inc
test
add
aad
add
push
ds
mov
inc
stos
add
dec
rorb
fidivl
or
add
lret
movsl
mov
add
add
dec
xlat
sqrtps
out
shlb
add
popa
test
in
and
add
pop
xlat
jecxz
ljmp
fstpt
add
pop
cwtl
mov
divl
push
add
xlat
cmp
add
and
mov
pusha
lods
sub
fildll
cld
jge
pusha
jmp
mov
pop
xchg
inc
jecxz
add
or
outsl
jle
stos
mov
add
add
sub
add
stos
pop
or
add
sahf
and
add
add
punpckhwd
lds
add
bnd
push
add
jp
dec
mov
mov
mov
add
arpl
out
add
int3
fstpl
sarb
mov
stos
in
adc
xor
push
negb
push
mov
xchg
add
mov
jno
icebp
sub
add
inc
cld
mov
add
test
rcpps
pop
rclb
lds
mov
lret
popa
lods
add
aas
stc
std
cltd
stos
fnsave
xor
add
nop
xor
inc
push
or
add
xchg
out
push
int
add
add
pop
daa
test
add
loopne
repnz
fwait
xchg
jg
add
out
data16
popf
addr16
mov
add
adc
lret
push
xchg
push
repz
hlt
imul
jns
add
cli
jno
outsb
outsl
xlat
je
iret
jnp
and
add
iret
cmpsl
add
add
add
pop
arpl
bnd
mov
sbb
call
in
pop
xchg
pop
jo
pop
shr
mov
arpl
cwtl
and
add
or
add
jne
fucomip
cmp
mov
add
add
sahf
arpl
jno
insl
xchg
out
jp
push
pop
push
pop
pop
or
add
lods
mov
add
add
jb
cmp
cmp
add
cli
out
nop
mov
aad
adc
add
cli
sub
bound
jae
inc
push
add
pop
jbe
add
dec
xor
add
sbb
pop
cmp
sbb
scas
and
add
addb
push
add
add
or
add
inc
dec
push
dec
arpl
lock
sbb
aam
push
and
fwait
loopne
shlb
data16
add
add
sbb
enter
push
ljmp
add
cwtl
adc
or
add
int
mov
shlb
add
lcall
mov
cwtl
xor
jecxz
and
add
cmp
add
jno
mov
xor
add
add
nop
cli
in
inc
addr16
aam
fdivs
mov
or
push
in
nop
in
adc
dec
mov
in
push
and
add
add
adc
punpckhdq
lret
push
or
add
cmpsl
xchg
xchg
out
fistl
repz
xor
xlat
jp
or
add
int
inc
ret
push
dec
push
insb
jl
add
pop
test
aad
int3
daa
in
js
add
cwtl
dec
rcrb
push
add
faddl
fnstsw
pop
andnps
mov
rcll
push
pop
into
adc
mov
add
or
add
divb
add
fcompl
pop
adc
ficoms
jns
test
inc
pop
lods
add
sarl
inc
jge
mov
xchg
pop
and
add
lahf
icebp
adc
add
and
adc
cmp
adc
add
cltd
int
inc
pop
xchg
sahf
je
aaa
sub
add
xchg
add
mov
add
shrb
add
mov
and
pop
sti
addb
fwait
push
jns
das
outsl
lods
jno
call
add
fsts
jae
repnz
sahf
sub
add
dec
arpl
add
mov
push
popa
and
add
push
cmc
cmp
add
add
cmpsb
add
cmp
push
add
pop
subl
lret
aaa
ror
add
mov
add
cmp
mov
add
xchg
add
add
jne
mov
dec
lea
dec
sqrtps
stos
dec
push
pop
insl
lret
push
scas
add
adc
int3
shl
add
push
leave
mov
add
dec
test
or
cmc
lods
add
mov
dec
mov
add
test
add
lods
add
xor
pop
fwait
mov
ljmp
mov
xchg
les
mov
xlat
cmp
aad
pop
repz
add
cltd
sbb
rdpmc
push
outsb
push
jnp
inc
pushf
in
mov
inc
jbe
adc
xchg
dec
sbb
jl
loop
xchg
sbb
add
mov
adc
add
adc
add
mov
add
in
mov
nop
mov
add
movsl
in
cmpl
adc
rcr
mov
push
sbb
cli
pop
push
cmp
or
add
add
fcmovnb
jnp
cli
xor
incl
stc
movsl
rol
xchg
add
xchg
mov
add
jo
mov
sbb
add
shlb
add
and
add
stc
in
and
add
repz
and
in
push
pop
cmp
xchg
add
add
xor
icebp
cwtl
mov
std
scas
add
loop
aam
int3
inc
popf
in
sub
add
lea
xchg
jo
pop
pop
sbb
add
jg
enter
mov
out
sub
add
aaa
imul
push
sar
jns
je
daa
bound
add
jge
pop
jno
add
sbb
add
adc
jno
add
jmp
pop
xor
jp
ljmp
test
add
add
push
fcmovne
inc
scas
add
outsl
divl
mov
jmp
xchg
inc
or
add
rclb
cmp
pop
test
add
fnstcw
push
push
mov
add
sub
add
inc
cmp
ds
cmc
sub
add
cmp
add
mov
add
add
test
imul
sarl
push
add
inc
cwtl
gs
inc
movsb
add
outsl
pop
outsl
sbb
mov
mov
add
add
roll
add
lods
cmpsl
xor
pop
repz
daa
fwait
mov
add
add
pusha
adc
adc
adc
sub
add
adc
add
add
mov
addb
cmc
shr
mov
ret
aad
cmc
fdiv
in
scas
jmp
mov
xchg
bound
loope
cwtl
inc
bound
xchg
inc
dec
xchg
repz
pop
dec
lods
and
add
and
add
sub
add
insl
out
std
adc
pop
repnz
add
arpl
pop
jmp
mov
add
imul
mov
add
mov
sarb
mov
add
and
mov
push
jmp
in
sbb
add
fisubrs
les
xor
add
dec
outsl
call
add
cmp
dec
nop
mov
adc
js
xor
iret
xchg
mov
mov
out
add
std
std
xor
out
jl
sarl
and
push
add
jbe
mov
test
add
imul
mov
push
dec
mulb
jb
imul
fistl
mov
add
add
ret
mov
mov
leave
sahf
data16
xchg
dec
and
pop
dec
lods
cmc
jl
mov
add
fbstp
ret
test
add
or
add
sub
add
pusha
cltd
mov
xchg
enter
jno
shll
jl
add
ja
push
jle
push
and
add
xor
outsl
jb
add
fmuls
fs
pop
sub
add
dec
xlat
arpl
icebp
ljmp
int
jl
sub
add
add
jg
add
dec
inc
push
add
adc
xor
scas
fwait
push
add
int
xor
outsb
addr16
movsb
add
or
movsl
mov
push
mov
jmp
inc
jns
push
or
add
lods
and
add
adc
mov
sbb
or
add
iret
cwtl
ljmp
xchg
std
adc
dec
sub
or
add
addb
call
sub
add
sbb
int3
xor
cld
pop
sub
add
lds
add
jmp
lods
loopne
push
and
add
pop
and
xchg
push
jno
testl
sti
cmp
pop
mov
pop
cld
in
add
insl
xchg
add
lret
int
test
add
add
add
add
mov
add
fs
cmpsl
inc
or
add
push
out
push
fst
jno
imul
lds
xchg
das
daa
cmc
xchg
mov
dec
adc
aam
add
jg
in
das
ret
jns
add
jmp
and
add
in
mov
pop
or
add
add
inc
push
lret
test
js
or
mov
imull
pop
inc
and
add
add
or
lock
add
lock
add
lods
add
lods
add
out
pop
fsubp
mov
pusha
xchg
jb
data16
sub
add
push
mov
addb
movsl
popf
dec
inc
push
orl
in
push
jnp
and
add
sbb
adc
in
pop
adc
xchg
add
in
mov
mov
mov
imul
jo
cmpsl
int3
int3
xor
add
jmp
cwtl
fwait
xchg
add
fnstenv
add
rclb
dec
pop
mov
ds
fistps
cwtl
bound
in
lds
imul
add
xchg
add
nop
push
add
or
pusha
dec
fdivl
add
add
xor
add
sub
add
mov
add
sbb
js
ret
js
pushl
add
gs
call
add
add
stos
add
mov
add
js
push
pushf
mov
jo
adc
push
mov
ljmp
mov
shll
pop
shlb
das
pop
sbb
iret
mov
add
ret
add
add
pop
dec
push
pop
pop
scas
add
mov
arpl
and
jnp
dec
dec
or
dec
popf
loop
xchg
xor
ret
dec
and
add
jae
jnp
add
mull
fidivrs
cmp
pop
jne
mov
and
add
push
add
stc
jp
xor
and
add
aam
push
fdivrp
daa
roll
test
add
mov
shr
idivl
daa
cli
jg
add
xor
push
les
loopne
rcr
je
subl
aas
mov
xor
cmpsb
add
push
int
cmp
add
inc
shl
jmp
push
xor
adc
fiadds
add
xor
enter
adc
add
cmpsb
add
fistpll
in
pop
cmp
xchg
sub
adc
scas
popf
dec
ds
xchg
mov
add
add
mov
cltd
pop
pop
stos
add
lahf
movb
into
fs
push
gs
push
add
mov
je
push
pop
mov
sbb
lret
add
and
add
push
add
add
add
pop
mov
fnstenv
push
mov
ret
insl
filds
and
iret
js
insb
std
lds
ljmp
add
xchg
xchg
cmpsb
add
xchg
add
arpl
jno
pop
fistpl
repnz
inc
lds
test
sub
add
push
jle
add
pusha
scas
push
mov
aas
ficoml
push
cmp
add
insl
pavgw
lods
add
adc
add
imul
add
add
xchg
inc
or
sti
add
pop
jecxz
xchg
mov
sbb
mov
mov
fwait
adc
xchg
and
pop
test
add
ficomps
pop
push
add
sub
fnstcw
add
inc
mov
sbb
add
daa
in
dec
fs
cmpsl
mov
add
cmp
lcall
pop
mov
adc
adc
push
mov
std
add
push
xor
add
insb
cmc
cmp
cmp
stos
add
roll
add
jbe
in
dec
shlb
shr
addr16
add
test
add
loop
ja
add
add
add
mov
ficompl
addb
mov
jl
fisttpll
movsl
enter
dec
rorb
inc
cmp
add
ret
out
shrb
add
sub
add
por
popf
mov
xor
pop
int
vfrczsd
add
add
pusha
push
add
mov
add
jge
cld
jecxz
subl
add
jnp
fwait
mov
add
cltd
sahf
or
add
sti
or
mov
adc
add
jge
insb
jg
shr
add
add
xor
push
jns
add
aaa
fcoml
fcoml
add
mov
add
sti
popa
inc
pusha
mov
lods
mov
dec
and
add
cmc
int
push
test
sar
mov
add
test
add
addb
mov
cmp
mul
ficompl
shll
lds
xor
jp
negb
mov
push
add
cmp
lret
add
inc
call
jl
push
or
add
push
pop
push
mov
sub
add
add
jge
sub
jl
or
add
or
and
inc
xor
mov
add
inc
pop
xlat
test
inc
inc
mov
lock
cmp
add
mov
fisttpll
sub
add
cmp
xchg
jle
out
cmpsl
out
popa
cld
cmp
jge
pop
xchg
cmpsb
add
fdivl
xchg
iret
enter
ret
and
add
mov
add
mov
mov
sahf
mov
mov
cwtl
adc
mov
rolb
add
loope
add
and
and
mov
add
jl
push
or
nop
movsb
add
aas
ja
cld
repz
data16
leave
add
add
add
or
add
add
mov
add
nop
loopne
add
mov
outsl
pop
inc
sub
add
add
test
roll
add
cmpsl
call
xchg
fcmovb
sbb
sbb
mov
cmp
insl
ljmp
add
dec
je
mov
dec
xchg
nop
call
add
xor
xor
pop
pop
sbb
movsl
loopne
outsl
xchg
add
in
dec
scas
push
outsb
inc
fistpl
jp
cmp
jo
mov
imul
add
in
sub
ret
fiadds
add
or
add
add
rorb
rolb
and
sbb
out
xor
outsl
insb
xor
push
mov
outsb
add
add
jg
add
outsl
test
add
push
add
cltd
jge
adc
add
adc
mov
shr
repz
in
fisubs
xchg
mov
add
jmp
mov
add
mov
xor
add
fsubr
add
jbe
mov
mov
sbb
xchg
xor
sub
or
add
pop
xchg
faddl
jge
mov
std
jg
sub
mov
add
mov
add
push
cmp
push
sarl
add
out
mov
and
add
mov
add
arpl
xchg
ret
push
inc
push
or
push
mov
mov
add
mov
inc
rcrb
fsub
push
inc
fldl
ret
xchg
add
add
fiadds
movsb
add
add
rcrl
xorl
push
scas
icebp
cmpsl
add
add
add
sbb
dec
sub
add
cld
popa
sbb
sbb
gs
pop
stos
cltd
sub
mov
out
add
inc
pop
mov
add
rcl
add
ret
push
push
cwtl
adc
popa
cmp
or
add
mov
add
int3
out
in
inc
push
cmpsb
add
fwait
addb
push
mov
out
jne
repz
add
add
jnp
xchg
imul
add
add
neg
adc
jle
sbb
or
add
test
repz
in
dec
xlat
mov
mov
das
jecxz
ret
in
outsb
push
push
add
mov
repnz
add
pop
pushf
cli
jbe
les
push
inc
mov
pop
push
pop
push
fsubrl
push
ds
sarb
add
mov
add
js
inc
cmp
out
mov
out
fs
add
inc
sbb
cwtl
popf
xchg
add
pop
and
add
push
add
and
add
fadds
test
add
add
push
fstl
adcl
dec
or
add
add
xchg
fwait
jecxz
inc
call
out
pop
fs
add
and
ss
push
dec
aad
iret
repnz
add
adc
jb
add
jge
push
ret
xor
add
or
add
add
mov
mov
add
and
jle
mov
add
cmp
push
movsl
mov
lods
add
pop
aam
xor
add
jo
mov
jnp
mov
jae
jle
mov
mov
sub
add
jge
dec
dec
cmp
mov
adc
mov
add
mov
ljmp
or
add
sti
pop
iret
insb
ss
inc
mov
cmp
mov
lods
push
mov
add
test
add
jbe
add
dec
mov
mov
icebp
lods
xlat
das
cmp
push
add
ret
add
add
scas
jnp
add
sub
add
outsl
stos
and
add
add
mov
adc
in
xchg
adc
pop
push
ja
icebp
mov
add
ret
mov
add
adc
jle
fcomps
iret
dec
cltd
jns
dec
sub
add
dec
mov
add
xor
movsl
fisubs
pushf
data16
jnp
mov
add
inc
shrl
or
roll
add
add
add
add
cmpsb
add
lods
add
inc
loope
fadd
stc
sbb
invd
add
lret
dec
inc
jge
int
addb
mov
scas
add
jmp
add
lahf
and
out
add
add
jmp
pop
sti
pop
jge
sbb
aad
insb
push
add
fadds
add
xor
aas
addb
pop
inc
adc
mov
dec
sbb
mov
stos
rcl
repnz
add
inc
pop
ret
sub
add
add
enter
or
dec
sbb
add
or
add
jmp
sbb
xchg
add
add
or
bts
imul
pop
shr
push
add
mov
sub
add
add
stos
push
pop
sub
jmp
jb
jno
xchg
cmp
lcall
movsl
push
jb
jae
jmp
dec
fsubrp
mov
dec
mov
daa
rclb
test
jmp
test
xor
mov
inc
sti
inc
xchg
dec
not
cltd
addr16
add
add
flds
push
fstps
lods
add
push
push
jo
in
test
add
fsubrp
ret
pop
sahf
add
add
add
xchg
orl
loopne
lret
push
rcrb
std
stos
mov
dec
data16
cmp
and
add
das
in
pop
add
mov
pop
call
outsl
cli
xor
add
sbb
dec
into
inc
repnz
add
out
and
add
pop
out
and
jmp
pop
mov
fstps
add
add
pop
or
add
fcoml
add
mov
les
pushf
adc
adc
add
stc
inc
lret
jg
mov
xchg
pop
rclb
pop
dec
or
add
jg
std
addb
outsl
cld
mov
mov
add
jbe
fisubs
fucomi
lahf
xchg
fucom
dec
push
ljmp
add
mov
pop
add
add
add
ret
add
inc
mov
ds
xor
leave
out
cmp
sub
mov
lock
fnstenv
add
insb
xchg
sti
jbe
gs
pop
int3
cli
js
adc
fwait
and
add
jbe
dec
addb
mov
add
add
jle
popa
repnz
mov
xchg
icebp
sub
flds
add
push
xor
push
adc
adc
add
cli
clc
mov
add
or
add
add
ret
daa
icebp
add
add
sbb
add
xlat
mov
and
add
pop
rcrb
loop
add
adc
scas
add
xor
and
add
test
xlat
or
add
cwtl
dec
repnz
gs
call
lea
cld
xchg
adc
add
loopne
cli
xchg
add
cltd
inc
mov
inc
mov
jl
ret
test
aaa
sbb
add
stos
xor
add
cmp
jnp
or
add
enter
add
push
sub
inc
clc
inc
leave
lds
pop
rclb
add
sub
mov
aam
imul
pop
inc
mov
out
imul
in
sbb
mov
lock
lds
add
scas
lahf
push
xor
loopne
lret
cmp
add
adc
xor
jb
call
dec
ret
sub
adc
mov
cmp
into
clc
addb
pop
lods
stc
repz
xor
addb
and
add
add
ret
mov
mov
loope
and
add
add
push
jae
inc
int
in
jge
and
pop
adc
xchg
divb
sbb
sub
add
sbb
repnz
add
mov
add
shr
xor
mov
push
outsl
add
jle
aad
add
cmpsb
add
cld
or
push
dec
jmp
xchg
push
push
xor
fisubs
xlat
mov
add
in
add
addr16
sbb
movsb
add
imul
add
mov
add
inc
xchg
lret
add
rorb
into
dec
dec
std
jns
fwait
lret
test
faddp
and
add
lods
mov
add
fs
add
ror
push
pop
lret
jle
inc
mov
add
in
sysret
inc
mov
int3
jmp
add
mov
repnz
add
inc
mov
add
sahf
sbb
or
add
add
das
adc
add
jle
sbb
nop
add
add
inc
fistps
add
nop
cmpsb
add
adc
test
add
loop
shlb
xor
mov
dec
cltd
dec
in
mov
repnz
push
fisttpl
cli
enter
push
enter
jl
add
mov
out
or
add
das
sbb
mov
push
fimull
mov
mov
mov
add
mov
add
jne
ret
bound
push
repz
imul
dec
lret
out
sarl
dec
ficoml
imulb
in
pop
outsb
daa
jge
push
push
in
dec
pusha
inc
jge
add
scas
add
push
add
inc
mov
mov
add
rolb
xor
pusha
jle
fwait
test
lret
mov
nop
out
inc
push
dec
clc
jb
inc
mov
add
xor
jne
iret
mov
mov
jnp
aas
into
xchg
sub
add
fistps
add
mov
add
xchg
add
add
add
stos
add
imul
push
lahf
data16
in
iret
inc
mov
stos
add
inc
sub
add
stc
call
mov
add
dec
stos
add
mov
add
in
add
xchg
push
xchg
xchg
add
and
in
popf
inc
xchg
outsb
addr16
or
add
add
adc
add
aas
fimuls
push
push
add
add
mov
or
add
mov
fsubrs
and
add
jb
daa
push
dec
jb
add
dec
outsl
cmp
add
push
add
dec
inc
aas
aam
or
add
add
pop
sbb
add
add
arpl
push
hlt
push
xchg
add
xor
out
divl
jp
cmpl
adc
or
lods
imull
bound
add
sbb
adc
and
sub
add
add
pop
aad
inc
add
add
and
add
add
std
sbb
add
xor
add
addl
aas
sub
add
loope
lret
dec
in
pop
aas
test
add
rolb
xchg
mov
add
nop
mov
jg
add
scas
push
shrb
add
dec
daa
mov
add
rorl
add
inc
inc
add
dec
sbb
arpl
add
out
and
push
test
add
imul
mov
adc
add
aad
add
inc
hlt
add
and
add
mov
add
sub
add
and
add
add
adc
or
add
fists
sbb
imul
lret
pop
mov
je
pop
stos
outsl
addb
cltd
mov
add
add
mov
add
sbb
sub
add
stos
add
dec
addb
ljmp
pop
daa
xlat
inc
mov
pop
andl
out
mov
xchg
add
or
pop
dec
sub
add
pop
cli
mov
dec
bound
mov
mov
add
add
jmp
rep
mov
mov
xlat
addb
test
add
sbb
in
xchg
add
out
mov
add
mov
add
sbb
ret
arpl
add
add
xchg
mov
jge
cmp
pop
pop
inc
repz
mov
add
addl
repz
lcall
lret
add
adc
add
nop
mov
xchg
push
add
jg
add
stc
add
pop
cld
filds
lret
cmc
shll
clc
add
add
imul
mov
inc
jge
and
add
lahf
fistpl
add
add
add
repz
lahf
movsl
push
add
jle
sub
push
add
push
cmc
sbb
lret
mov
inc
cmpsb
add
mov
add
test
add
or
add
mov
addb
inc
and
add
xchg
or
add
stos
add
out
sahf
jne
add
xchg
and
add
ja
cld
mov
mov
icebp
mov
inc
jnp
loopne
jecxz
aad
fwait
push
pop
in
lea
adc
add
add
lret
add
jecxz
cmc
xchg
add
pusha
dec
ss
mov
cmp
push
mov
stos
add
shll
add
add
inc
les
sbbl
add
mov
in
sbb
scas
add
cmp
xchg
cli
test
add
add
cmpsb
add
xchg
and
add
sbb
stos
add
jbe
cwtl
cld
repz
mov
push
add
imul
lret
testl
jnp
add
add
sub
add
loope
add
xchg
nop
fld
in
cmpsl
lods
add
in
rcrl
negb
add
mov
out
in
jb
lret
imul
add
addr16
fcomp
pop
mov
aas
and
stos
out
cmp
and
add
add
gs
add
inc
adc
mov
pop
cmp
sub
xor
or
add
add
bound
sahf
shlb
pop
fwait
cmp
mov
jo
repz
dec
cmp
or
lcall
dec
mov
push
xchg
les
push
aaa
mov
jne
add
add
add
into
scas
loop
jbe
scas
add
inc
ret
or
add
sahf
fildll
xchg
dec
xor
push
aas
mov
ret
inc
xor
adc
in
rclb
pop
push
push
add
std
xchg
jle
add
dec
lea
ss
add
insl
pop
or
cmp
out
mov
inc
and
add
faddl
cmp
aaa
push
lock
lahf
cmpsb
add
loopne
cmp
sbb
xchg
faddl
dec
push
push
ss
cmp
add
rclb
lock
add
add
ss
add
out
add
sub
add
in
cmpsb
add
mov
cmp
xchg
push
lret
inc
das
in
or
stos
pop
xor
xchg
imul
pop
inc
shlb
mov
div
std
ret
add
mov
add
fimuls
add
rcrl
add
repz
add
rol
adc
mov
aaa
out
pushf
push
add
xchg
add
add
sub
add
xchg
add
add
add
add
dec
dec
jecxz
sub
add
and
ljmp
data16
add
or
add
push
inc
test
mov
test
add
imul
add
or
sbb
ljmp
aam
add
jae
jmp
push
add
leave
stos
clc
pop
ss
jbe
and
add
add
dec
in
mov
xor
popa
ficoml
mov
mov
add
add
sub
add
shrb
and
xor
and
mov
add
cwtl
aam
mov
and
out
xchg
push
push
lods
xor
add
sbb
dec
stos
add
leave
ret
add
mov
add
imul
add
filds
mov
add
mov
insl
ret
add
test
add
jnp
and
add
dec
aas
inc
adc
add
ja
xor
arpl
add
jno
pusha
popf
fisubl
add
cwtl
test
test
add
fsubrl
jno
add
pusha
pushl
or
adc
add
pop
fimuls
mov
pop
mov
daa
mov
push
adc
xchg
bound
cmp
outsl
mov
push
out
push
add
stos
or
add
test
std
jge
out
ja
add
ffreep
mov
out
imul
add
xlat
dec
xor
or
add
add
mov
data16
add
pushf
adc
fs
add
cmpl
add
xor
dec
jo
sbb
cmpsb
add
fildll
and
add
daa
dec
sarb
xchg
dec
je
and
add
hlt
add
add
mov
xor
dec
pop
mov
inc
orl
add
nop
dec
addb
pop
das
in
add
push
pop
imul
add
jle
pusha
xor
pop
cwtl
das
stos
mov
push
jmp
fsubrs
fsubp
outsl
xor
mov
roll
dec
jp
inc
cmpsb
add
xchg
add
cmc
test
test
add
cmpsb
add
cmpsb
add
stc
aam
and
add
je
outsb
mov
add
loope
push
in
aam
insb
test
add
jae
testl
repnz
ja
roll
sti
push
stc
push
xchg
hlt
inc
jne
mov
fwait
in
aaa
loopne
gs
in
sub
pop
or
cltd
stc
fcmovnu
dec
xchg
mov
into
push
add
shr
add
mov
aaa
test
add
jg
enter
fdiv
movsb
add
inc
and
add
mov
mov
xor
push
add
int
pop
xor
add
push
add
fdivl
mov
ja
sti
imul
cmp
sbbl
lods
add
jle
mov
add
stos
lret
mov
xchg
roll
adc
add
je
aas
rcrl
ja
or
aas
enter
bound
out
fwait
push
jb
add
fistpl
jae
cli
incb
add
aaa
cltd
sti
sti
add
adc
mov
inc
test
out
jmp
movsb
add
mov
add
sub
xchg
dec
jecxz
cld
stc
sbb
add
cmp
mov
stc
call
lods
mov
or
add
push
movsl
jge
mov
lret
sub
add
dec
pop
ficoml
scas
adc
add
mov
aam
imul
sbb
jb
aaa
arpl
add
sub
mov
add
add
ds
out
movsl
nop
lds
add
fisubs
add
mov
add
fiaddl
fsubs
pop
ret
cltd
addb
ja
je
mov
shll
jae
mov
add
mov
mov
add
dec
pop
xor
add
stc
fstpt
xchg
mov
je
add
inc
xor
movsl
cmc
lea
mov
ret
sub
add
rolb
sbb
arpl
add
sub
add
leave
mov
loop
pop
mov
push
sbb
mov
test
jmp
add
sub
add
or
add
inc
iret
mov
outsb
mov
add
imul
enter
add
int
or
addb
adc
add
pop
lea
jns
mov
fnsave
push
cmp
test
add
mov
or
add
add
or
add
ficoml
add
add
or
add
cld
mov
add
int3
add
fmul
leave
push
stos
add
adc
pop
xchg
pushf
mov
add
stos
add
pop
inc
dec
and
into
insb
test
add
call
xchg
pop
fnstenv
scas
rolb
add
std
xchg
cmpsb
add
pusha
mov
add
inc
cmp
out
cltd
mov
add
add
mov
aad
addb
repnz
aad
ljmp
cld
sahf
pop
rcr
cmc
add
incl
add
inc
xchg
insb
xchg
movsb
add
or
add
adc
add
inc
cld
mov
pop
xchg
in
sub
sub
add
add
iret
sti
ficoms
jmp
add
sub
add
adc
jnp
sarb
sarb
add
pop
aam
jne
ret
jb
clc
sub
stos
cmp
add
pop
sbb
add
imul
add
je
mov
add
add
xor
dec
mov
add
xchg
inc
call
xor
xor
add
add
and
adc
add
add
add
add
js
sub
add
inc
lcall
lock
mov
pop
mov
add
addb
ss
xchg
shrl
jmp
add
cmc
inc
and
add
sub
add
in
js
cmp
and
add
les
add
fisubl
insl
das
loop
add
fcoms
jg
test
add
out
xchg
xchg
add
mov
add
mull
add
jp
inc
sar
mov
or
sub
stos
add
jae
push
add
adc
sub
lret
test
mov
jnp
out
mov
ds
mov
ljmp
xchg
arpl
add
lahf
push
pop
into
test
add
push
rcr
adc
test
cmp
add
sarl
lea
cmpsl
jmp
shll
pop
ljmp
sbb
inc
push
add
add
add
clc
mov
add
add
add
std
pop
mov
add
and
add
fisubrs
add
lahf
rorl
loopne
cwtl
push
add
add
dec
or
mov
add
and
jnp
ss
inc
movsb
add
xchg
add
sbb
lock
pop
sub
add
add
sbb
repnz
xchg
mov
insb
pop
aam
xor
ds
popf
jbe
sti
jge
aam
add
sbb
rcll
xchg
inc
xor
mov
sbb
cmp
in
cmp
imul
cmp
imul
add
in
mov
in
inc
pop
or
add
negl
xlat
dec
dec
push
out
mov
ds
add
add
add
add
jne
loop
adc
or
add
rcr
cmpsl
push
mov
adcl
mov
add
dec
pop
push
add
add
pop
scas
add
mov
add
shlb
cld
ljmp
lret
push
scas
add
jecxz
xor
add
mov
add
adc
cmc
jle
cmp
mov
add
jae
add
or
add
mov
fimull
add
add
add
add
jbe
adc
int3
cmp
mov
or
add
push
mov
inc
cmp
loop
sbb
fsubs
xchg
and
outsb
insb
sbb
adc
add
test
xchg
xlat
aaa
sub
xchg
adc
add
enter
aaa
or
add
xchg
aaa
sub
add
sub
mov
fcmovnu
lcall
push
add
push
testl
adc
or
add
in
or
add
xor
vrsqrtps
dec
cmc
cwtl
gs
xchg
add
scas
fwait
test
scas
push
popa
jae
add
or
add
add
test
add
or
dec
aam
out
mov
cmp
sub
add
add
add
cmc
cltd
sub
add
add
dec
xlat
xchg
pop
outsb
pop
mov
or
dec
add
add
add
or
add
cmp
sub
ficoms
repz
ss
aaa
popa
mov
sub
pushf
fcmovu
sub
push
add
pop
frstor
shl
and
adc
push
pusha
sbb
xor
mov
add
xchg
ret
das
lcall
add
stos
inc
pop
mov
das
xor
add
push
add
int3
xchg
loop
je
ret
imul
lcall
fdiv
xchg
jecxz
lock
and
ja
mov
add
jp
add
xor
mov
fisubs
xlat
mov
fxch
aad
movsb
add
movsb
add
rorl
jb
add
addr16
int
lcall
add
lahf
test
or
add
xchg
pop
pop
push
mull
out
cmp
sub
add
cmc
cltd
mov
jne
or
xchg
out
xor
pop
je
add
add
addb
mov
inc
imul
ljmp
mov
xlat
push
xor
add
push
add
pop
adc
loope
cli
pxor
add
decb
aam
shlb
loope
add
push
mov
rcrb
lds
push
or
add
data16
add
add
dec
mov
add
nop
lret
or
addb
hlt
stos
add
aam
ljmp
mov
hlt
jno
pop
and
and
add
lods
add
pop
inc
stc
pop
push
aas
ljmp
adc
mov
add
add
add
sub
add
jg
mov
add
outsb
xchg
leave
mov
xchg
pushf
fisttpll
add
sbb
loope
add
leave
add
jmp
loopne
mov
imul
or
add
jle
loope
xchg
inc
mov
daa
or
add
add
push
inc
and
mov
add
push
loopne
test
xor
push
adc
adc
add
mov
add
pusha
jl
push
mov
add
int
add
cmp
xchg
pop
test
mov
je
dec
sbb
add
ror
xor
inc
cmp
or
add
rcrb
sub
add
add
inc
pop
clc
int
pop
cmp
dec
adc
and
add
into
outsb
add
sub
jge
inc
lods
ljmp
loop
rolb
add
mov
add
and
add
xorps
jp
aas
add
xchg
add
and
ficomps
lds
cmp
or
add
adc
xchg
mov
mov
add
stc
pop
jnp
add
add
pop
lret
fsubl
testl
mov
add
dec
imul
lock
pop
fadds
ljmp
dec
repnz
xchg
dec
inc
fdivl
lods
add
outsb
fwait
push
iret
loope
iret
add
add
nop
mov
add
mov
inc
adc
into
mov
out
jo
add
or
add
loope
std
pusha
arpl
fiadds
xor
cmc
mov
add
int3
cmpsl
loope
xor
add
pop
mov
loop
int3
push
das
xor
add
dec
adc
add
fistps
adc
mov
jno
sti
jg
or
xchg
and
add
adc
pop
sub
xchg
inc
dec
push
add
xlat
dec
cmpsb
add
dec
mov
add
add
popf
cli
inc
xchg
sub
add
jp
xor
call
mov
add
lret
scas
dec
sbb
cmp
add
xchg
cld
push
xchg
mov
or
mov
scas
xchg
outsl
faddp
adc
test
add
add
insl
jmp
pop
loop
movsb
add
mov
lcall
arpl
sbb
insb
pusha
ret
add
jns
pop
pop
shl
sbb
add
sbb
add
in
cmpsb
add
push
push
loope
mov
cmpsl
and
add
push
jmp
stos
add
lahf
insb
adc
pop
repz
ret
add
rorb
dec
cmp
insl
js
sbb
cmpl
mov
mov
hlt
in
mov
inc
sar
movsl
jnp
shlb
inc
test
add
sbb
loop
movsb
add
lahf
pop
loopne
inc
xchg
lcall
jmp
shlb
inc
xchg
add
adc
stc
adc
add
mov
and
sti
leave
or
add
jecxz
mov
ret
xchg
test
push
add
add
invd
add
mov
pushf
nop
fldenv
and
add
add
pusha
jmp
add
add
call
lock
scas
out
and
add
bsf
add
hlt
cmpsb
add
mov
adc
add
imul
pop
into
pop
sti
lret
cltd
adc
push
lods
add
or
lea
mov
push
icebp
fdiv
mov
cli
mov
add
int3
sub
add
push
cmp
lods
add
mov
ljmp
add
into
dec
pushf
stc
jmp
add
cmc
lret
jo
sbb
add
in
jne
in
cmpsl
push
inc
sti
in
add
push
pop
insl
jno
and
add
add
mov
and
add
push
adc
sub
add
jnp
sbb
jb
dec
xchg
out
dec
dec
loope
out
test
add
add
add
add
jg
adc
addb
orl
iret
adc
add
popf
sti
mov
shlb
add
cmpsl
mov
add
rolb
push
sub
add
jae
cmp
and
push
mov
and
inc
pop
test
and
out
rol
pop
mov
add
pop
xchg
push
fadds
pop
addb
movsb
add
xchg
adc
sub
add
insl
repz
test
lret
popa
sti
jg
std
jno
sti
stc
in
sbb
inc
fisttpll
add
in
push
mov
aam
sbb
addr16
scas
add
je
inc
icebp
inc
addb
xchg
pop
mov
and
add
add
shlb
mov
cwtl
jmp
add
jmp
andl
push
push
jno
or
add
adcl
jne
ljmp
fadds
lret
add
clc
push
add
mov
xchg
repnz
cmp
sub
sbb
ds
in
xchg
out
test
add
in
outsb
xchg
mov
add
fiaddl
cmpsl
daa
or
add
shll
in
int3
insb
push
mov
ljmp
movsl
or
mov
mov
add
or
add
adc
mov
add
jmp
add
push
push
mov
into
nop
jmp
add
and
add
loopne
cmp
clc
cmpsb
add
xchg
ds
add
jbe
add
out
lcall
jae
add
imul
js
xor
jp
dec
std
out
mov
scas
add
into
dec
ret
mov
add
pop
cmc
xchg
add
mov
bound
aaa
ljmp
sub
xor
add
add
cld
sub
add
divps
add
cmp
and
add
mov
outsb
lea
add
insb
icebp
xchg
pop
popa
aam
cmp
add
dec
addr16
dec
insl
dec
pop
negl
cld
insb
cld
iret
lret
sti
inc
cmp
dec
mov
cwtl
add
add
lea
add
scas
add
push
aaa
lds
add
cwtl
add
dec
xchg
lahf
clc
jbe
notb
scas
aas
jp
mov
xor
add
mov
add
xor
das
shrl
ja
aas
add
mov
add
shr
mov
arpl
cmp
and
add
add
pop
or
xchg
out
ret
mov
add
enter
add
pushf
or
leave
cltd
js
jle
dec
adc
add
sbb
add
add
sar
xor
pop
pop
adc
cmp
pop
mov
add
cmp
fs
pop
addb
cmp
cmp
and
jne
pushf
pop
inc
lea
sub
xor
in
cmp
or
add
push
shll
add
out
test
test
repnz
mov
push
pop
mov
sub
add
push
add
daa
push
rcll
add
imul
add
pop
decl
addb
in
aam
sbb
and
mov
int
data16
add
lods
or
add
loopne
xor
in
cmp
add
stos
add
rcl
imul
shlb
jmp
jo
lea
lds
adc
enter
bound
loope
out
ret
fidivrl
add
aaa
inc
xor
arpl
pop
cltd
mov
sti
pusha
jg
std
movsl
repnz
push
add
ds
pop
mov
add
hlt
bound
or
add
arpl
test
add
or
add
add
add
xor
jg
fsubp
cmpsl
xchg
xor
lods
add
xchg
push
jmp
cmp
test
pop
add
and
add
jno
jnp
add
xchg
inc
sub
and
add
xor
xchg
fwait
mov
add
fs
cmpsb
add
enter
add
add
add
add
and
movsb
add
dec
loope
add
jae
cmp
push
insb
sub
push
add
cltd
test
add
add
mov
popa
fisttps
adc
push
sbb
cmp
add
clc
cvtps2pd
fistpll
ljmp
into
jne
mov
cmp
lret
pusha
leave
iret
leave
cli
cmp
stc
sbb
cwtl
adc
inc
shlb
sub
add
jle
test
add
dec
rclb
dec
push
orl
scas
add
add
push
xchg
insl
xchg
cwtl
push
or
add
add
inc
pop
sarb
push
add
rcrl
mov
add
add
pop
add
add
mov
jle
movsl
cmp
ror
adc
test
insb
jmp
xchg
movsb
add
test
add
jne
aam
and
xlat
call
in
and
or
add
pop
or
add
add
add
and
add
add
mov
add
push
jecxz
jbe
rol
mov
addb
dec
shlb
pusha
bound
add
push
mov
add
jnp
pop
filds
lods
cmp
cmp
add
push
nop
dec
cmc
ljmp
rolb
movsb
add
xchg
adc
cmp
mov
add
pop
push
or
add
dec
clc
or
fstl
jp
rol
sub
add
mov
add
pop
push
push
fisttpll
add
dec
dec
jge
ss
mov
or
jg
mov
add
add
add
scas
pop
xchg
and
mov
add
add
jo
in
jg
out
jbe
dec
fimuls
add
sub
add
push
clc
jb
push
add
pusha
dec
inc
sti
ss
shr
daa
xchg
loope
xchg
push
std
mov
stos
add
sahf
repnz
lea
and
cltd
fistps
loope
mov
stos
add
xchg
pop
xor
add
pop
jae
lds
add
add
pop
fistpll
mov
mov
fsubrp
xor
nop
add
or
add
add
mov
adc
mov
dec
push
add
fisttpll
add
ret
inc
xchg
rorl
add
je
fidivrl
loop
ja
add
andps
mov
add
lods
add
mov
add
pop
notl
add
addb
movsl
je
and
push
dec
fwait
enter
push
mov
iret
test
jp
into
and
in
add
mov
jmp
inc
loope
add
inc
pop
add
adc
xchg
add
ret
scas
inc
rol
dec
adc
push
dec
sub
add
addr16
add
mov
js
add
xor
cmpsb
add
jnp
push
out
jne
loope
in
leave
mull
mov
repnz
push
add
jmp
jmp
dec
shrl
fisubrl
sub
mov
push
add
mov
bound
dec
xchg
rclb
add
fs
add
xchg
push
inc
int
push
pop
cli
divl
scas
add
xchg
mov
fistpl
xchg
add
xchg
add
ret
gs
loopne
add
cwtl
inc
mov
add
inc
mov
movsb
add
mov
add
adc
dec
mov
add
movsb
add
jl
mov
add
pop
adc
sub
add
mov
adcl
sub
add
push
jnp
ja
dec
push
add
sub
add
sub
add
icebp
lret
cmp
bswap
push
mov
jmp
or
imul
push
or
clc
mov
add
fwait
ret
dec
mov
add
cwtl
in
inc
pop
xor
cli
dec
stc
fsubrs
inc
mov
dec
fstpl
pop
adc
xchg
ja
add
add
dec
sbb
mov
add
aam
push
andl
add
cmc
and
add
jge
lock
add
movsb
add
in
ds
ret
add
cli
ja
shrl
mov
add
fistps
add
lret
sbb
xchg
inc
sahf
outsb
jle
cmp
add
mov
add
enter
and
add
add
sub
sub
ret
daa
movb
mov
cmpsl
popa
and
mov
mov
push
mov
les
push
xchg
movsb
add
or
add
add
movsb
add
movsb
add
stos
add
adc
cmp
aaa
dec
scas
add
jle
orl
scas
add
push
loop
mov
add
or
mov
add
add
add
inc
or
mov
int
insb
sub
add
add
lods
inc
mov
jl
fnstenv
or
add
jge
test
add
xchg
rolb
add
les
sahf
aas
aam
rcrl
jno
movsl
ret
cld
out
adc
sti
ret
pop
imul
mov
add
push
mov
rorb
cmp
popa
daa
xchg
in
cmpsl
mov
xchg
add
sahf
cli
cwtl
lahf
out
popa
fcoml
mov
lods
mov
fistpll
fistl
jns
push
mov
cmpsl
sti
gs
aad
pop
test
add
xchg
jns
add
sub
in
loopne
xchg
and
add
fwait
ret
sbb
dec
in
sbb
add
add
fimull
add
mov
jns
jecxz
inc
xchg
cmpsb
add
out
dec
xchg
push
loopne
push
xchg
mov
inc
shl
in
adc
add
mov
cld
cld
sti
xchg
mov
in
sub
add
cmp
out
fsubl
fs
addb
cmp
push
and
add
add
test
fs
mov
insb
mov
mov
adc
repz
pop
or
add
push
outsb
jg
push
adc
push
inc
jmp
outsb
mov
add
repnz
add
pop
push
bound
addb
pop
add
add
fldcw
add
cmp
scas
add
sub
add
rolb
cmp
mov
add
jl
push
add
or
add
jmp
in
cli
addb
mov
add
xchg
clc
repnz
test
std
add
add
mov
inc
dec
fdivs
insb
lahf
pop
iret
repnz
lret
mov
in
pushf
jnp
sbb
mov
dec
push
sbb
inc
frstpm(287
outsb
inc
xor
xlat
cmp
pop
shlb
jmp
mov
add
jnp
outsb
add
ds
fldt
mov
sahf
rolb
add
pop
aad
and
add
dec
xor
push
xchg
dec
lcall
sub
add
add
and
add
pop
inc
add
hlt
cmp
sbb
add
add
mov
add
fisubrl
add
mov
mov
sti
push
xchg
xor
in
xor
jecxz
xor
pop
ljmp
add
adc
push
sub
push
pminsw
test
add
fisubl
push
out
sahf
inc
cmovg
lret
add
out
shrl
push
add
addr16
jl
addr16
fcoms
inc
xchg
mov
ret
ret
lods
subl
in
hlt
aas
xor
dec
aam
int3
aam
add
add
add
mov
inc
sub
add
adc
das
mov
add
pop
cmp
ret
repz
daa
in
iret
rcrb
aas
push
fstl
add
jns
xchg
addb
jne
pushf
add
call
add
and
add
or
push
add
xor
imul
add
add
add
jbe
sahf
les
push
ss
jmp
in
mov
add
xlat
loope
adc
addb
and
add
inc
sbb
scas
add
add
lea
add
xor
add
and
add
mov
ljmp
dec
jbe
lret
out
add
daa
jb
cmpsl
ret
xor
sbb
dec
aad
adc
mov
mov
add
jns
stos
xor
mov
add
xchg
add
jno
fwait
lods
add
repnz
shrb
repz
xchg
add
add
outsb
in
dec
jmp
add
fcompl
lret
in
cmc
cmp
add
push
xor
xor
in
add
hlt
push
mov
add
add
pop
sarl
cmpsl
loope
bound
fistps
mov
call
lea
bound
test
add
mov
pop
in
jl
cmp
cmp
call
add
lds
add
sbb
insb
xchg
add
add
leave
sarb
imul
add
or
add
add
arpl
xor
mov
add
shll
pop
pop
jp
dec
jne
and
add
jno
sbb
imulb
movsl
pop
cltd
shll
add
into
pop
jb
fidivrl
mov
and
mov
dec
cmp
dec
js
mov
add
inc
cmp
pop
lods
and
add
push
cmp
das
add
ret
push
cmpsl
add
fldenv
call
push
add
push
pop
sub
xor
add
shll
or
mov
xchg
cmp
arpl
add
xchg
xchg
mov
lret
movsb
add
fistps
test
add
add
jge
int3
push
add
jns
add
add
jge
jno
out
inc
adc
mov
add
jbe
xchg
push
loopne
pop
sbb
xor
adc
in
xchg
sub
add
addb
cmp
fidivl
add
or
or
pusha
add
addb
adc
xchg
mov
add
cmp
inc
fs
inc
aas
insl
inc
mov
dec
leave
sbb
jl
stos
add
add
sbb
xchg
pusha
jo
daa
mov
mov
cli
mov
add
and
imul
jmp
fucomip
leave
div
mov
add
add
sbb
mov
cltd
mov
add
jbe
add
lcall
adc
dec
xor
mov
mov
add
imul
mov
mov
xchg
add
shll
pop
adc
sbb
add
loopne
inc
jo
sahf
fwait
mov
add
dec
cmp
sub
mov
jns
test
jbe
cmpsl
mov
scas
imul
and
add
dec
rcr
xchg
add
into
andl
mov
add
push
mov
rcrl
mov
add
inc
cld
int
into
mov
dec
xchg
push
rcll
inc
xor
lods
add
lahf
dec
repnz
jae
add
fnsave
xor
push
sti
fldenv
add
loopne
add
jp
insl
mov
pop
outsl
and
dec
insl
repz
lret
cmc
testb
fcompl
lret
push
rorb
dec
xchg
jmp
pop
in
lret
dec
sbb
sarb
xchg
and
xor
push
inc
into
in
adc
dec
sub
shlb
loop
dec
add
add
dec
ja
add
inc
cmp
ret
push
imul
sub
add
or
add
push
cmp
movsb
add
aaa
lods
xor
jl
lods
add
push
mov
add
or
add
out
add
or
add
pop
sub
add
cmp
daa
xchg
test
add
int
add
dec
pop
xchg
xor
cmp
mov
push
lods
add
add
add
fcmovnu
in
shrb
add
or
add
mov
push
aad
inc
mov
mov
sahf
movsl
aaa
outsl
divb
jae
or
add
add
add
shlb
mov
mov
push
rdtsc
int
or
add
pop
sub
add
lahf
into
stos
or
add
jecxz
lock
rcrl
cli
flds
imul
xchg
jmp
mov
pop
lea
mov
add
add
push
pop
icebp
jl,pt
add
fimuls
mov
add
adc
sub
add
add
das
mov
lahf
icebp
jecxz
loop
add
ja
cmp
add
add
add
movsl
dec
xrelease
add
jnp
ret
outsl
mov
imul
or
add
incb
lock
xchg
inc
cmp
add
and
scas
fiaddl
xchg
test
add
fisubl
add
jmp
ficoms
add
cmp
mov
out
in
js
je
or
add
aas
mov
add
jmp
cmp
dec
push
push
add
pop
jge
mov
add
repnz
xchg
jnp
pop
into
mov
sahf
cli
cmp
dec
aad
inc
xchg
adc
les
and
add
jle
add
fdiv
fistl
loop
gs
mov
sub
add
adc
and
out
inc
aaa
pop
jmp
mov
icebp
sub
add
add
adc
cmp
adc
push
mov
fnstsw
add
movsl
and
add
mov
lods
add
xchg
inc
push
lahf
outsl
lahf
jb
addr16
add
push
fcmove
push
add
add
push
add
xchg
sub
add
add
adc
inc
lds
dec
jp
push
jns
div
movsl
sub
add
xor
decb
addl
outsl
xor
aad
push
loope
insb
sti
xchg
add
sub
add
dec
pop
scas
add
scas
sub
and
add
add
xlat
add
add
mov
mov
mov
pop
scas
add
pusha
add
add
ljmp
sbb
lock
cld
stos
add
add
add
pop
fbstp
add
sar
or
add
aas
aaa
sti
imul
add
push
pop
cmp
sti
js
sbb
add
jb
adc
add
addr16
rcrl
outsb
pop
push
jg
out
nop
push
jbe
call
add
rorb
pop
xchg
add
bound
pop
and
jbe,pt
movsl
ljmp
fistpl
daa
push
add
pop
or
and
add
inc
fidivrs
add
inc
cmp
jp
xchg
or
add
ret
data16
add
shr
sbb
jo
loope
adc
xchg
push
mov
fsubrl
add
add
add
push
arpl
dec
mov
add
add
inc
jl
pop
shll
jle
push
testl
add
xchg
jp
push
push
gs
std
jbe
repnz
xchg
adc
and
pop
lods
add
sbb
adc
pop
push
push
cmp
cwtl
lahf
or
arpl
mov
lcall
add
test
sub
add
sbb
push
cmp
out
sarl
andl
aas
scas
add
jo
sbb
cmc
mov
lea
cmp
xchg
sbb
mov
cmpsl
imul
add
mov
and
add
push
or
mov
lret
add
or
add
xor
mov
add
pop
sub
add
mov
shl
test
add
add
stos
mov
data16
in
inc
or
jmp
or
add
add
add
add
clc
dec
jle
int
mov
out
jg
mov
pop
repz
add
imul
out
rolb
mov
fdiv
std
mov
shrb
add
insb
mov
dec
jge
scas
cmp
cltd
sub
add
jae
dec
iret
mov
inc
mov
add
add
icebp
cld
insb
mov
test
add
add
add
add
xchg
push
inc
dec
push
das
hlt
and
add
add
cmpsl
lret
ret
in
sbb
clc
cld
pop
lea
add
xor
pop
jno
jo
add
outsb
shr
dec
sbb
add
jl
xchg
clc
mov
mov
push
xchg
shrb
cltd
mov
mov
sub
lods
add
cltd
stos
add
cmp
pop
movsl
int
insb
leave
insb
fists
sahf
cmc
mov
add
mov
mov
push
fldl
and
add
hlt
mov
add
cmp
into
jl
leave
sub
sti
gs
hlt
adc
jl
or
in
sbbl
add
push
lods
sahf
fdivs
loopne
push
pop
stos
dec
andl
xchg
pop
fstps
int
add
jno
mov
mov
or
add
add
add
add
inc
test
sar
push
call
add
and
add
mov
stc
mov
pusha
add
into
fisttpl
jne
stc
out
fwait
mov
add
arpl
add
dec
inc
std
mov
or
add
pushf
add
inc
push
push
mov
sbb
nop
std
add
add
jg
loop
fs
addb
push
outsl
mov
add
or
pop
dec
arpl
cmp
sub
add
dec
mov
xchg
fdivr
cmpsl
cli
scas
mov
cmp
jb
loope
cmpxchg
jbe
loop
aam
mov
add
and
sbb
test
add
dec
pop
gs
add
pop
fucomip
push
ds
addr16
mov
jne
addb
cltd
pop
cli
movsb
add
mov
loopne
in
in
sarb
mov
add
jg
jge
les
add
sbb
jmp
mov
add
cmp
fsqrt
rol
inc
jge
fidivrs
bound
test
psrad
dec
int3
or
add
ds
add
push
and
add
push
xchg
jb
dec
mov
jl
leave
inc
cmc
rolb
sbb
xor
push
jg
xor
push
mov
and
add
loop
enter
jle
addr16
sbb
add
lods
add
xchg
add
mov
push
lock
jnp
add
xchg
std
mov
inc
movsl
or
inc
adcl
inc
mov
ss
jne
add
cmp
mov
xor
jecxz
pusha
add
mov
inc
insb
mov
push
jl
add
adc
jl
cmp
add
add
cwtl
mov
add
fistpl
xchg
adc
jo
stos
add
inc
in
lods
jne
mov
jne
add
gs
mov
std
adc
fwait
int
or
sbb
add
jg
jae
je
push
or
cmp
mov
push
lret
out
outsl
lea
mov
add
mov
mov
add
add
jge
add
add
or
add
sub
add
mov
sub
add
mov
imul
mov
jg
addb
out
cli
out
add
mov
out
push
pop
in
add
add
push
push
add
rolb
mov
sub
add
inc
mov
mov
notl
push
add
pop
ud1
insb
repz
dec
clc
pop
call
sbb
mov
add
add
push
add
cmp
test
add
sbb
sbb
fnstenv
movsl
out
jmp
cltd
cld
cld
arpl
stos
add
in
lcall
xchg
or
cmp
addb
mov
add
add
push
pop
loop
fistpll
jae
daa
and
mov
scas
cld
xor
inc
nop
adc
inc
loop
add
inc
dec
dec
adc
sub
add
insl
cmp
and
fisttpll
mov
add
loopne
dec
and
add
shl
jae
les
xchg
xchg
loop,pt
fwait
cmp
movq
dec
cmp
sbb
addb
mov
aas
inc
fmuls
add
mov
int
inc
push
fmul
jge
mov
add
jp
test
add
iret
bound
ss
cmpsb
add
pop
mov
add
cwtl
dec
push
pushf
mov
mov
add
add
clc
or
add
mov
jecxz
test
add
adc
aad
jb
mov
or
add
push
outsl
dec
and
test
mov
outsb
mov
sbb
inc
aaa
jo
add
clc
fwait
sbb
add
sbb
test
add
in
aaa
push
addr16
add
jmp
addb
inc
lret
nop
cmp
push
aaa
cmpsl
jp
mov
add
stc
aas
fwait
out
ja
cmpsl
cwtl
push
nop
add
add
xor
mov
data16
cld
cli
out
mov
out
mov
test
add
jbe
and
add
add
pop
or
add
add
mov
push
mov
test
out
adc
adc
addb
push
cwtl
push
cmpsl
pop
sbb
insl
dec
lods
add
xchg
in
push
lds
fcoms
push
add
push
push
dec
popf
test
mov
inc
shlw
cli
fs
leave
xor
stos
add
sub
add
addb
inc
int3
adc
cld
sti
jl
mov
add
jp
fbld
add
gs
add
adc
adc
add
inc
mov
test
add
xchg
mov
add
scas
xchg
rcl
popf
sub
sahf
in
lcall
cmp
xchg
nop
stc
inc
push
and
add
add
add
or
add
push
cmc
xchg
jp
dec
or
mov
sti
xor
or
add
and
add
push
xchg
sub
add
fxch
sub
add
sub
add
ret
pop
in
mov
add
push
ljmp
mov
add
daa
pop
pusha
cltd
push
sbb
add
adcl
mov
add
inc
int3
in
pop
sbb
sbb
lods
mov
add
js
adc
sub
add
xchg
xchg
xor
xchg
add
in
add
insl
pop
xchg
add
cmp
add
ds
lea
mov
clc
call
imul
fs
mov
and
xchg
or
rcrb
ret
aad
push
fstl
add
or
mov
outsl
cltd
sub
push
add
dec
cmp
test
add
in
mov
push
cld
xchg
sbb
add
add
sub
add
adc
into
pop
xchg
pushf
addr16
cwtl
sub
paddsb
popa
cmp
sbb
jecxz
sar
shll
push
mov
lods
fdivr
dec
cmp
popf
mov
xlat
and
add
sub
add
sub
add
jbe
incl
add
pop
jnp
and
mov
sbb
xor
jne
add
inc
data16
lret
addr16
add
pop
sbb
dec
imul
or
add
out
mov
add
lret
stc
or
adc
pop
dec
stc
je
scas
add
or
add
repz
cmp
pop
push
je
add
jl
arpl
mov
mov
add
add
jae
or
add
addb
sub
add
add
xchg
jbe
imul
xchg
cmpsl
pop
loopne
les
ja
pop
hlt
mov
arpl
int
add
lods
in
add
jmp
test
add
sti
inc
mov
shlb
and
xor
cwtl
or
add
rorb
lock
push
add
inc
ss
filds
das
push
cmp
inc
into
push
ror
jnp
out
adc
loop
jl
jb
sub
add
and
mov
add
push
cld
lods
add
ja
testb
add
lock
pop
pusha
int3
popf
mov
das
aam
cmp
sub
fcmovu
idivb
mov
add
pop
xor
cwtl
push
jp
test
add
fsubrs
insb
in
call
int
inc
mov
xor
xchg
sub
add
add
aaa
mov
add
mov
loop
shlb
imul
dec
leave
jge
jne
ljmp
mov
in
outsl
ja
xchg
mov
std
push
mov
sbb
fisttps
sub
add
hlt
ror
jb
scas
loop
lea
jne
add
push
fsubs
add
adc
iret
mov
loope
insl
xchg
dec
xchg
movsb
add
iret
sub
std
push
mov
add
jae
test
add
repz
mov
inc
ds
inc
jg
add
or
cltd
add
push
add
clc
addr16
adc
xchg
mov
call
loope
add
mov
inc
cmpsb
add
call
inc
push
test
mov
add
pop
pop
decl
mov
cltd
push
jns
hlt
sbb
std
xchg
mov
fldl
add
add
rolb
jp
add
push
add
imul
push
rcrl
in
jmp
sbb
bound
adc
mov
aad
adc
mov
push
add
icebp
push
pop
sbb
adc
jmp
stc
and
add
pop
xor
add
jl
dec
inc
lahf
je
add
dec
out
lods
add
dec
mov
add
jg
ret
dec
jmp
add
addr16
popl
aam
xchg
lret
mov
and
add
add
call
cld
dec
mov
lcall
ds
lds
addr16
xchg
xor
add
push
and
cmpsl
pop
enter
sub
insl
mov
add
add
addb
cmp
enter
out
jecxz
cltd
in
test
add
les
add
cmp
and
add
xor
loop
pop
fdivrl
lods
lea
and
add
add
loopne
dec
ss
mov
add
add
mov
ret
cmp
roll
or
pop
stos
add
push
jnp
xchg
dec
and
fs
add
add
addr16
add
addr16
arpl
clc
pusha
testb
hlt
dec
outsb
jo
pop
lock
add
dec
inc
adc
xchg
insb
fcmovbe
addb
sbb
lahf
and
pop
repnz
ret
cmp
imul
daa
ret
lcall
cwtl
xchg
iret
aad
rcrl
xor
shll
shrl
xor
xchg
pop
push
mov
push
cmc
out
add
xchg
push
add
add
adc
add
cwtl
add
popa
dec
mov
add
xor
jge
cmpsb
add
jg
jnp
or
clc
nop
shld
jnp
aad
ss
pop
lods
push
add
cld
and
add
cmpsb
add
sub
add
sbb
xor
ljmp
sbb
add
add
addb
popf
mov
lcall
add
and
add
arpl
shrl
filds
jo
pop
enter
popf
mov
mov
jle
cmp
sub
add
xor
mov
sti
fstpt
add
sub
add
push
jae
fucomip
sub
popf
lock
jno
sub
mov
add
cmpl
mov
dec
push
fldl
sub
add
xchg
iret
leave
in
flds
cmp
mov
add
insl
icebp
mov
jge
add
fbld
ret
in
add
mov
jp
jge
and
add
dec
xchg
dec
or
add
mov
loopne
mov
int
mov
jae
sbb
rcl
data16
cmp
add
add
add
jno
nop
mov
pop
sub
mov
add
sub
add
out
mov
stos
cmp
clc
xchg
jo
add
fs
xchg
aad
add
cmpsl
gs
out
call
ds
xlat
dec
add
out
lock
stc
xor
mov
scas
add
add
add
sub
jae
add
cmp
pop
inc
je
test
add
xchg
add
push
addb
int
inc
push
push
stc
xchg
out
dec
inc
in
pop
xor
les
mov
negb
in
js
outsb
mov
mov
pusha
iret
test
add
add
inc
jnp
jae
je
in
pusha
sub
add
lret
out
movsl
std
inc
xor
pop
and
add
add
mov
xchg
add
mov
xor
add
scas
js
mov
rcrb
add
aad
sbb
add
cltd
shlb
mov
ret
js
add
ret
add
add
mov
nop
fwait
repz
shl
fidivl
push
inc
sahf
xor
jno
into
jae
sub
add
add
fldl
cli
ret
cmp
cli
mov
add
xchg
add
in
enter
dec
cld
or
add
scas
fs
popf
rorb
mov
mov
mov
jge
fmul
mov
add
xor
faddl
ret
xchg
jmp
dec
add
jne
and
gs
push
popf
adc
fdivrl
mov
js
mov
dec
fwait
push
imul
add
add
adcl
jl
fwait
xchg
pop
inc
xchg
jne
jl
add
sub
add
xchg
shrb
aas
pop
sub
add
lahf
mov
add
dec
aam
add
stc
sbb
mov
add
sub
sub
add
or
add
enter
add
loopne
daa
lods
add
mov
adc
lret
mov
cld
adc
add
loope
add
add
adc
inc
fwait
sahf
mul
enter
rorb
add
add
inc
mov
imul
add
add
cmp
add
xchg
adc
adc
fbstp
mov
inc
test
add
adc
pushf
rcr
pop
push
rorl
add
pop
in
add
dec
mov
add
sub
faddl
add
push
fidivrl
mov
add
dec
inc
enter
push
add
out
ficoml
push
outsl
and
add
inc
scas
out
das
mov
add
push
jno
push
in
jmp
jnp
dec
je
in
xchg
sub
add
aas
movsb
add
enter
add
cmp
in
xchg
mov
add
add
xor
cmp
mov
xchg
dec
add
add
and
pushf
in
aas
sbb
add
mov
add
sahf
add
pop
mov
add
out
adc
sub
add
inc
push
xchg
pushf
insb
mov
xor
out
sbb
psubd
add
mov
fsubrl
xor
sti
hlt
addl
push
adc
lock
jg
cmp
add
dec
add
insl
mov
sarb
add
dec
movsb
add
sub
insl
imull
adc
sbb
mov
add
mov
sbb
sub
das
jle
aas
cwtl
mov
nop
mov
add
sbb
add
xor
cmp
out
aam
negl
push
jle
sub
add
cwtl
xor
leave
aas
push
xchg
popf
push
popa
or
fucompp
ss
sub
adc
add
mov
shl
gs
dec
sub
and
mov
scas
add
addb
push
adc
xchg
movsl
aam
loope
cmp
add
fs
add
add
xchg
dec
loope
ret
leave
sbb
add
lea
aad
in
out
fistl
sub
add
pop
xor
mov
add
dec
xlat
call
out
scas
add
add
xchg
out
mov
add
cmp
mov
add
xchg
mov
aad
mov
dec
mov
xchg
jl
add
movsl
and
add
mov
mov
scas
add
ss
enter
xor
cltd
cmp
aas
jo
lea
jge
aad
js
loope
nop
pop
sbb
add
jo
fistps
shll
movl
std
dec
jg
add
xchg
xchg
add
add
test
mov
add
pop
bnd
stos
jp
jle
xlat
add
add
add
mov
add
add
ret
add
std
test
inc
jbe
xor
mov
sbb
xchg
mov
pop
lods
add
or
and
mov
adc
testl
pop
pop
pop
pop
mov
add
add
add
add
pushf
fincstp
jmp
sub
dec
dec
sub
add
mov
jae
addb
or
add
repnz
jle
add
pusha
xchg
popa
fists
leave
xchg
fistl
or
data16
add
xchg
adc
push
cli
dec
rcl
xor
add
xor
add
jg
lea
fsubrs
dec
mov
add
pop
pop
inc
test
cwtl
adc
sti
popf
ljmp
lea
xor
mov
and
add
mov
mov
insb
mov
bound
jecxz
sti
or
add
add
cli
inc
test
pop
xchg
mov
adc
addb
div
adc
lods
inc
std
cmp
mov
mov
insl
cmp
xor
test
add
lods
imul
pmaxub
mov
out
xchg
dec
inc
cmp
cltd
jl
or
add
xchg
rclb
lahf
mov
inc
movsb
add
icebp
jl
out
in
lahf
mov
jo
push
ret
idivb
into
mov
ss
aas
add
add
movsb
add
cmp
mov
add
add
call
push
pusha
xchg
test
inc
popf
stos
fsubl
cli
sbb
decl
cmp
jmp
xchg
add
add
mov
add
mov
dec
repz
add
mov
mov
add
add
mov
add
stc
ja
repnz
add
mov
scas
mov
add
mov
add
out
jecxz
rcrl
cmp
add
jmp
cli
cmpsb
add
mov
add
add
rol
rolb
out
jae
sub
sbb
mov
add
push
je
jae
and
add
mov
out
sub
add
jp
jle
fidivs
add
add
cmpsb
add
cmp
pop
je
add
sub
cmp
mov
addr16
add
loop
popf
lahf
sbb
cltd
mov
push
add
adc
add
jp
pop
nop
cmp
mov
adc
shll
add
pop
lahf
push
fwait
xor
in
test
maskmovq
imull
add
leave
xchg
aam
push
xchg
stos
add
seta
mov
inc
ljmp
in
cmp
add
or
add
lret
add
iret
pop
mov
xchg
sub
ljmp
add
fldt
test
aam
and
test
divb
add
xlat
add
add
cmp
outsb
fisttps
xor
clc
pop
mov
mov
out
inc
test
add
push
addb
aad
dec
test
add
sub
cltd
test
add
fs
mov
add
inc
push
push
int3
push
push
add
sbb
xchg
cmp
inc
dec
pop
aam
insl
dec
inc
sub
add
mov
mov
shrl
bound
xor
aas
pusha
jecxz
loope
add
ficoms
or
add
das
jns
add
mov
pop
mov
add
add
add
pop
push
sahf
push
test
add
rcl
xchg
cmp
clc
push
rolb
stos
add
ja
push
add
cmpsb
add
int
adc
add
aad
aas
leave
outsb
add
add
mov
ja
pop
test
add
js
cwtl
out
scas
and
add
fimull
fildl
dec
and
jmp
xor
dec
adc
xchg
xchg
pop
test
add
push
lea
add
xor
sarl
adc
inc
ret
fildll
pop
cmp
cmp
std
psubq
adc
jo
mov
add
add
xchg
add
push
sub
lret
mov
adc
cmp
hlt
movsb
add
sub
add
add
repnz
add
jns
inc
jl
jg
insl
lahf
pop
rolb
pusha
mov
add
add
stc
imul
jmp
mov
add
jae
dec
xchg
dec
push
test
fs
add
cmp
add
add
add
or
add
test
add
add
sub
add
add
add
adc
inc
jb
mov
data16
and
sbb
mov
add
add
push
mov
cmp
inc
divl
test
add
fdivs
test
add
mov
add
int3
test
mov
add
scas
add
outsl
mov
add
xchg
add
ds
or
add
into
inc
aam
xchg
mov
enter
js
shl
fiadds
call
lods
add
or
jl
ljmp
push
jmp
cmp
add
or
add
add
push
push
ret
cmp
add
test
add
jle
add
pop
ja
inc
mov
add
ret
movsl
fcom
jnp
rcll
add
add
dec
jge
dec
sub
inc
push
lret
add
push
add
nop
pusha
pcmpeqd
cmp
mov
scas
add
data16
leave
dec
shl
add
jo
imul
in
dec
stos
add
rorl
xchg
add
sub
add
adc
add
mov
add
pusha
movsl
add
lret
mov
adc
loop
js
add
push
fldcw
add
jmp
into
xchg
mov
add
cmp
sbb
xor
push
mov
and
add
test
add
lret
leave
mov
aam
push
add
repz
add
dec
xor
dec
jb
add
cli
std
and
or
add
pop
dec
mov
sbb
add
loope
ficoms
add
mov
mov
pop
lahf
dec
or
add
fsts
push
stc
out
inc
shrl
add
int3
sysenter
xchg
add
add
add
and
add
add
adc
repz
outsb
ss
sbb
push
xchg
or
add
add
jge
in
imul
clc
test
add
adc
insl
mov
lahf
or
popf
mov
add
xchg
loope
aad
pop
rcll
rorl
and
fistpl
dec
mov
add
add
adcl
pop
rcll
mov
inc
imul
mov
xchg
rcrb
push
push
add
lock
pop
gs
sub
cmp
add
sbb
xor
jb
push
dec
scas
push
mov
add
mov
adc
je
pop
xchg
sbb
add
xlat
jno
test
add
add
cltd
or
add
pop
call
lret
push
aas
dec
imul
mov
loop
ret
cld
mov
add
cli
and
push
stc
loope
add
mov
sub
add
int3
fsub
and
pop
cwtl
mov
sbb
add
mov
add
mov
in
inc
popa
les
add
add
cld
adc
pop
iret
add
add
adc
push
inc
xchg
fwait
xchg
jp
add
loopne
add
fcmovbe
movsl
inc
inc
insl
and
testl
pop
mov
add
add
or
cmp
mov
cltd
lret
insl
xor
push
xor
xchg
lods
cmp
pop
cmp
sahf
push
inc
fxch
push
add
lock
cmpl
add
pop
repz
adc
add
addb
jno
cmp
test
or
add
push
pop
or
fiaddl
add
std
sub
push
fdivrl
lock
add
sub
add
fcomps
add
into
mov
inc
mov
jns
cltd
sub
jecxz
out
xchg
sarl
fs
cmp
dec
jbe
dec
jns
insb
pop
jmp
js
add
mov
add
mov
in
fs
add
leave
add
movsb
add
data16
adc
mov
fbld
std
inc
pushf
jge
push
xor
fnsave
idivb
nop
jmp
pop
add
add
cmp
mov
add
mov
aaa
nop
and
add
popa
stos
add
ja
fs
addb
sarb
fdivrl
push
loop
jle
xor
icebp
rcll
jl
imul
jnp
mov
add
nop
mov
xlat
dec
mov
add
test
add
popa
ret
inc
scas
push
add
ja
jge
jb
add
xchg
add
pop
icebp
fmull
add
pop
cli
lea
imul
pop
das
jl
add
frstor
popa
mov
mov
js
xor
add
sub
add
mov
push
mov
jle
adc
add
and
add
push
cmp
sub
add
xor
xor
fistps
xor
adc
out
cmpsb
add
inc
xchg
in
test
add
mov
in
add
mov
add
or
add
mov
mov
add
mov
rorl
inc
int3
mov
jge
pop
dec
sbb
or
add
sbb
add
cld
nop
jg
jb
test
les
add
xchg
and
jg
add
add
jae
sbb
add
inc
dec
mov
out
push
mov
push
ret
aad
add
add
dec
int3
fimuls
fs
jae
inc
mov
xor
cmpl
fnstenv
sahf
adc
popa
jmp
or
rcrl
xchg
aam
jp
addb
mov
add
add
pop
ret
cmp
scas
adc
sbb
addl
in
ret
int3
xor
movsl
std
addr16
add
dec
repz
xchg
add
pop
out
or
add
cld
scas
add
pusha
or
cmp
movsb
add
arpl
stos
lds
jg
pop
sub
add
add
mov
add
add
add
lods
xchg
add
in
xlat
dec
cmp
fst
push
add
daa
jl
xchg
jg
stc
jecxz
pop
leave
filds
mov
popa
jnp
inc
or
and
aad
inc
dec
add
aam
jle
ficoms
outsb
sub
mov
xchg
dec
stos
lea
cmp
push
fdivrs
add
pop
inc
jmp
add
dec
arpl
cmovne
and
add
inc
sahf
repz
daa
jg
iret
mov
movsb
add
cli
ss
add
jg
add
cmp
push
add
scas
add
add
inc
and
mov
add
add
add
loopne
sub
add
int
xor
ljmp
aas
ja
add
lea
sti
fisttps
add
lcall
jne
mov
push
outsb
stos
lea
add
cmpsl
mov
push
and
push
lock
adc
mov
add
mov
addb
push
lea
scas
mov
out
popf
loop
or
add
aad
test
add
hlt
jmp
int
imul
xchg
mov
add
mov
add
jbe
inc
pop
sbb
add
push
xchg
push
std
jmp
add
add
lret
cmpsl
addb
shrb
shrb
add
js
add
dec
bound
into
push
dec
fdivrs
sbb
popa
in
xchg
add
jae
push
lret
add
mov
ret
and
dec
stc
add
add
pop
call
imul
hlt
lahf
in
icebp
in
pop
mov
aad
cli
pop
into
cmp
add
mov
jmp
add
mov
add
add
cmp
or
add
lcall
add
sbb
fisttpl
add
mov
add
out
pop
adc
lods
add
and
add
cmpsb
add
sub
add
aas
iret
je
xchg
nop
cmpsb
add
nop
jge
cwtl
pop
out
hlt
dec
cmp
ret
test
daa
jge
jno
add
cmpl
mov
mov
fldt
paddw
icebp
mov
add
mov
add
add
add
add
int3
cwtl
outsl
mov
mov
add
stos
mov
xchg
and
mov
add
je
add
cmp
daa
push
add
test
aas
and
int
add
pop
rclb
call
lods
add
ds
fsubr
mov
jno
or
add
add
sbb
lahf
mov
bound
sbb
mov
js
add
add
out
xchg
jo
cli
loope
add
pop
loope
jp
cmpsb
add
push
add
outsb
adc
add
repz
mov
mov
cmc
push
addb
xlat
jb
dec
adc
fadd
pop
sub
sub
add
or
adc
roll
add
add
sahf
or
add
dec
addb
and
xor
add
movb
iret
lahf
jp
pop
push
mov
inc
cmc
pop
sbb
je
fdivrs
pop
imul
cltd
mov
add
sahf
pop
enter
add
je
int3
incl
add
dec
fiaddl
add
mov
imulb
fcmovu
adc
cmc
sar
popf
xchg
add
cmovnp
push
int
add
movsl
aad
out
xchg
les
add
and
add
push
movsl
jbe
push
xor
insl
mov
stos
add
int3
sbb
add
jp
sub
xchg
add
test
lcall
mov
and
add
add
cmp
xor
add
mov
add
add
inc
inc
lock
mov
popf
or
cmp
cmp
jmp
jae
orl
insb
cwtl
cwtl
dec
roll
int
add
addb
mov
cmp
test
jnp
push
hlt
and
scas
add
push
daa
leave
sub
adc
add
insb
add
add
or
add
add
and
add
sbb
add
lea
sub
add
popf
dec
adc
loopne
scas
add
jle
pop
lds
cli
sbb
xor
add
add
cmc
inc
push
dec
inc
xor
rorl
xor
ja
mov
dec
mov
add
push
add
dec
data16
add
jbe
pop
mov
push
jge
inc
hlt
mov
out
mov
pop
rol
mov
add
add
movsb
add
pop
xorl
das
jmp
idiv
aam
cmp
add
jbe
push
jnp
add
jp
add
lds
cmp
pushf
enter
icebp
adc
add
xchg
dec
in
sbb
ds
loop
add
stos
add
fxch
lds
jmp
add
mov
outsb
cmp
div
insl
test
add
xchg
std
pop
pop
aaa
das
in
out
lahf
dec
pushf
or
jle
mov
add
call
jae
jmp
xor
ds
ljmp
dec
adc
add
movsl
cwtl
and
fidivrs
mov
mov
add
out
mov
dec
xchg
and
add
or
add
mov
add
jg
fiadds
add
dec
inc
scas
xor
out
mov
add
mov
and
jae
aam
sub
int
pop
jp
pushf
test
add
jae
pop
lock
cmp
xchg
add
mov
pop
hlt
pusha
stc
mov
cmp
notb
into
xchg
add
clc
mov
push
or
icebp
xchg
xor
je
pushf
mov
mov
add
add
lret
and
sbb
add
cmp
mov
in
sub
mov
int
ret
movb
xchg
lods
add
int3
cmp
add
add
outsb
jne,pt
movsl
add
add
add
add
cmpsl
ret
mov
add
mov
add
add
jo
je
cli
pop
in
mov
add
mov
add
pop
lcall
jae
dec
out
imul
scas
push
rorl
xor
add
arpl
in
addr16
sub
add
shrb
jp
or
in
adc
sub
movl
fwait
cmp
pop
or
add
pop
xchg
ret
cwtl
jne
fmul
cwtl
mov
iret
mov
insb
lcall
xchg
sub
stos
add
lcall
movsb
add
stos
add
mov
out
mov
xchg
push
pushf
cli
mov
sbb
push
mov
mov
pop
js
jmp
xchg
fldcw
mov
js
dec
dec
mov
add
sbb
xchg
leave
gs
mov
cmp
or
cmpsb
add
adc
pop
sub
call
leave
pusha
cld
adc
shll
pop
mov
add
mov
out
sub
jo
into
lds
in
dec
std
in
add
lods
mov
shl
popl
leave
repnz
popl
ret
das
out
add
pop
xlat
pop
aam
repnz
add
loope
insl
cmp
pushf
mov
mov
iret
adcl
xchg
imul
add
xor
and
add
notl
and
add
and
add
stos
add
into
imul
repnz
push
movsb
add
xor
addb
mov
dec
and
add
add
xchg
das
cmpsb
add
mov
mov
add
mov
or
add
add
sub
add
add
add
mov
add
adc
inc
aam
sub
add
orl
dec
js
sub
cmc
add
add
test
pop
movl
pop
dec
add
fisubs
add
insl
je
movsb
add
addb
mov
ja
cwtl
sbb
and
add
fldcw
add
repz
lahf
gs
testb
daa
or
add
cmp
rol
cmp
imul
add
jae
dec
pop
imul
insb
aad
add
lea
or
jp
data16
add
aas
cmc
mov
clc
ljmp
add
leave
shrb
add
dec
inc
icebp
mov
inc
dec
in
adc
loopne
add
pop
xchg
fwait
pop
cmp
or
add
mov
add
scas
adc
or
add
aas
arpl
or
add
sbb
mov
add
pop
dec
or
add
lds
add
adc
jbe
mov
cmp
les
add
jmp
sub
add
mov
cltd
fimull
cmpsl
xchg
ficompl
lahf
mov
imul
das
mov
add
mov
add
ljmp
hlt
mov
enter
iret
cmp
je
add
push
adc
pusha
mov
mov
adc
add
jb
add
xchg
aad
pop
cmp
add
adc
fnstenv
add
shlb
push
mov
add
xor
sub
aam
cmp
jmp
mov
sbb
loope
add
jecxz
inc
jne
add
mov
adc
and
add
ljmp
imul
popa
ret
xchg
and
add
loopne
clc
rcpps
sub
add
push
pop
cmp
loope
mov
add
sub
add
dec
pushf
test
add
add
arpl
sbb
xchg
cld
fildll
pop
lods
add
xchg
fimull
add
aad
mov
add
add
adc
lods
add
aad
and
add
add
addr16
cmpsl
cmp
add
fnstsw
jne
add
call
add
push
sub
push
add
push
mov
fldcw
add
and
add
mov
inc
jae
in
xchg
add
sub
add
pop
loop
lods
mov
ds
popa
pop
xchg
cmp
aad
aaa
or
cwtl
hlt
cld
aam
add
into
addb
jno
add
mov
add
add
cmp
add
jno
stos
add
cmc
add
shrb
add
push
les
add
push
push
cli
mov
add
stos
out
pop
add
add
inc
inc
out
mov
add
mov
mov
push
add
cmpsb
add
dec
xor
dec
decl
add
je
pop
or
add
jbe
add
orps
cld
fisttps
jg
jns
cmp
xor
lock
add
add
das
test
add
add
test
add
mov
add
xor
shll
mov
lret
xchg
push
xlat
and
add
lock
add
in
mov
lea
add
adc
ret
add
imull
add
fiaddl
push
add
and
add
ret
lea
sbb
inc
xchg
add
add
lcall
add
pop
cmp
movsb
add
loop
push
add
mov
xor
mov
xor
das
jmp
xlat
stos
pop
push
push
add
aad
xor
add
shlb
testb
add
add
cmp
adc
add
and
add
mov
push
inc
imul
jne
outsb
jbe
pop
jns
jg
xchg
aam
popf
addb
daa
sbb
add
add
add
dec
int3
jg
push
in
nop
addr16
add
add
lcall
add
test
add
mov
aad
or
add
add
jnp
add
push
lea
add
int3
push
xor
arpl
push
addb
icebp
and
mov
not
or
add
roll
repz
add
fdivr
jl
jecxz
push
popf
pop
in
in
and
add
int3
je
push
push
add
aas
push
in
sub
add
repnz
and
add
mov
cmp
add
add
add
add
shlb
add
add
add
cltd
add
scas
add
push
add
stos
add
and
or
add
xchg
in
testb
sub
add
or
push
cli
scas
add
dec
jno
lahf
mov
mov
add
dec
sub
add
push
add
cmp
add
test
add
add
mov
add
pusha
inc
lds
test
inc
jmp
xchg
add
mov
add
scas
add
xchg
movsb
add
add
stos
add
pop
jns
loopne
iret
int
mov
pop
xchg
jmp
or
add
rol
mov
fsub
rorl
inc
in
xchg
mov
les
add
adc
xor
test
add
and
add
push
sbb
fucomi
stos
add
pop
jno
dec
ss
jle
dec
cmp
and
jae
xchg
pop
or
mov
sbb
mov
cmp
xchg
lret
js
in
outsl
repz
lahf
push
add
jmp
aas
jns
sbb
add
sub
add
mov
mov
cwtl
and
add
frstor
outsl
fbld
add
idivb
sub
add
sub
add
add
push
adc
mov
ss
push
pop
mov
scas
out
sbb
roll
push
repnz
dec
aad
nop
jmp
shlb
cmc
ljmp
sub
add
add
mov
mov
inc
mov
lods
ret
add
push
mov
cmp
vpunpcklwd
dec
pop
loope
inc
jecxz
sbb
cmp
leave
mulb
add
jle
mov
add
scas
add
pop
sti
rcr
js
inc
sub
add
jecxz
add
push
and
add
sbb
hlt
inc
push
mov
jno
xchg
pop
fidivrl
lret
or
add
call
mov
add
insb
shlb
add
sbb
into
cmp
insl
or
add
add
pop
out
cmp
adc
jg
add
fsubrs
rolb
dec
xchg
add
mov
addb
lret
add
add
adc
scas
add
sub
mov
pop
or
add
pop
cmc
testb
mov
sub
add
pusha
ficoml
mov
pushf
test
dec
mov
int
int3
xor
jmp
xlat
out
nop
gs
dec
xchg
jmp
mov
add
cmc
add
add
add
in
jno
push
mov
sub
lea
lcall
insb
pop
pop
iret
gs
xchg
mov
call
dec
add
add
lret
sub
add
mov
add
int3
mov
add
push
lcall
add
aam
nop
fsubrl
sti
inc
add
add
cmpsb
add
cmp
shrb
aam
push
or
add
xchg
and
xchg
dec
cli
sub
add
push
add
mov
int3
mov
sub
add
out
mov
add
arpl
jnp
dec
ror
cmp
xor
aam
xchg
out
mov
xchg
stos
add
mov
add
push
add
add
sub
add
add
add
lahf
into
stc
push
js
stc
icebp
ret
ja
js
adc
frstor
mov
add
sbb
sbb
mov
adc
repnz
ret
out
or
lods
add
out
addb
mov
add
filds
sbb
add
add
ficoml
cmpsb
add
sub
add
jecxz
add
icebp
pop
roll
add
jp
cmc
outsb
sti
sbb
mov
shrl
cmp
je
push
test
xor
js
sub
add
add
and
add
xor
add
adc
jbe
and
sub
add
inc
fs
add
mov
pop
push
js
xlat
js
subl
aas
xchg
insl
sbb
add
pop
cld
mov
adc
jae
xor
pop
lret
push
xor
outsb
jno
push
add
add
data16
inc
xor
inc
int
dec
arpl
or
add
push
push
in
call
or
add
jae
movsl
xchg
clc
nop
roll
aam
add
inc
jne
cmp
add
aas
pop
rorl
push
shlb
subl
aad
push
add
adc
mov
add
cmp
sub
add
dec
jns
mov
xor
leave
aad
add
jnp
stos
add
sbb
xchg
push
jge
cmc
int3
fadds
add
push
arpl
add
mov
mov
mov
add
pop
dec
add
pop
push
add
xor
jmp
push
cli
aas
mov
out
jnp
add
fsubrp
sbb
sbb
jge
xchg
add
cmp
daa
add
add
or
add
out
lcall
addr16
xchg
cli
ljmp
add
int
sub
or
add
pop
scas
add
fimuls
jne
ljmp
sub
mov
int
pop
pop
stos
stos
add
int3
or
int3
pushf
and
dec
out
xor
daa
js
jae
sub
add
dec
shlb
xor
or
lods
add
jecxz
add
add
nop
cmp
shlb
mov
add
mov
add
sahf
sbb
imul
sbb
inc
out
fldt
cltd
call
mov
add
int3
addl
imul
xchg
mov
pop
xor
aas
mov
add
sbb
data16
add
mov
outsb
fsts
rorb
pop
rol
sbb
pop
lahf
push
jp
aad
lcall
and
inc
cmp
pop
sbb
mov
test
add
add
sub
add
adc
mov
add
dec
sbb
pop
cmp
xchg
scas
add
xchg
fidivrs
pop
adc
cwtl
cmp
and
add
ret
add
jmp
in
xor
jo
mov
add
xor
ret
fbstp
jecxz
in
das
js
mov
add
xor
jecxz
sbb
add
or
or
neg
ret
xlat
lret
ret
sbb
sti
stc
jnp
std
in
roll
pop
hlt
xor
jns
insl
xchg
sarl
add
rclb
dec
sahf
and
add
and
add
imul
data16
into
pop
fiaddl
add
lahf
mov
add
idivl
addb
push
jle
pop
pop
sub
add
stos
add
cld
inc
popa
or
test
add
and
add
imul
sub
add
les
add
adc
out
push
jb
scas
or
dec
mov
int
mov
cmc
outsl
sbb
jae
add
pop
xchg
inc
push
add
adc
inc
jg
dec
and
adc
push
add
add
inc
sti
and
cmpsl
in
hlt
ss
lods
add
pop
jp
xchg
or
add
add
cmp
iret
mov
test
add
mov
add
add
add
loope
add
sub
add
ret
add
pop
int
cmp
adc
jp
mov
add
add
pushf
cmp
in
in
sti
push
clc
mov
jp
fstl
rorl
lock
out
data16
xor
add
xor
add
loop
pusha
jecxz
int
orl
adc
add
test
add
sub
in
in
ret
add
cmpsb
add
pop
lods
add
mov
hlt
and
sarb
jl
push
movsb
add
xchg
icebp
fildl
push
inc
push
fwait
into
push
jns
dec
jg
sub
repnz
aaa
xlat
mov
fs
add
in
mov
test
add
add
add
dec
sti
mov
jmp
mov
pop
pop
sbb
inc
add
popa
int3
mov
dec
push
lods
add
test
add
inc
jbe
mov
mov
in
push
lahf
xchg
outsb
pop
lea
add
pop
push
mov
add
inc
adc
inc
fs
dec
inc
aaa
dec
cwtl
lods
or
add
lahf
mov
mov
je
xor
xor
cmp
in
pop
rorb
lcall
add
jb
mov
xor
test
add
mov
mov
fcoms
fstpt
nop
mov
add
add
add
add
mov
push
and
add
jl
and
add
js
push
lock
lds
xchg
jmp
jb
lret
and
add
add
xor
push
push
push
loopne
mov
jb
pop
in
dec
sbbl
mov
jnp
jp
arpl
ljmp
insb
add
add
add
imul
aas
mov
jmp
out
add
lcall
mov
int3
mov
ds
lods
js
add
mov
jne
pop
fsubrs
outsl
sbb
cmpsl
rcrl
push
mov
mov
dec
in
xor
adc
dec
push
ret
jmp
addb
sbb
out
xchg
mov
outsl
jbe
fsubs
lcall
add
add
jno
mov
add
add
add
sahf
cmp
adc
movsl
cwtl
inc
nop
sub
add
sbb
and
add
mov
cmp
jmp
jecxz
add
xchg
std
dec
cmp
xchg
xchg
fildll
pop
rolb
in
ffree
fldl
pop
jbe
leave
mov
add
xlat
lods
add
push
cmp
lret
push
std
outsb
xor
xchg
fmull
rcrb
mov
aas
jae
add
cltd
fmull
stos
add
inc
imul
cmp
pop
outsb
cmp
test
xchg
repnz
mov
cmp
add
decl
mov
call
mov
add
loop
pusha
and
add
jb
xlat
aaa
test
add
sub
add
add
data16
push
add
push
and
sbb
or
add
add
hlt
in
dec
in
scas
add
mov
xchg
mov
int3
xchg
ljmp
mov
xor
add
ljmp
or
add
lods
rorl
lea
dec
incb
call
sbb
dec
cmp
roll
add
repz
or
aam
add
incb
add
shlb
add
jo
inc
call
xchg
jae
xchg
cli
out
cli
nop
sub
push
fisttpll
pop
test
add
jne
jl
rorb
out
jnp
add
jbe
dec
sub
addb
popa
jns
or
mov
call
add
or
add
bound
pop
addb
and
add
or
out
fiaddl
pop
movsl
xorl
cli
loop
lods
add
pop
xchg
dec
sbb
add
mov
dec
sti
pusha
sbb
in
imul
dec
shll
mov
add
add
inc
mov
icebp
push
jl
leave
hlt
fbld
fst
or
add
sbb
or
add
test
and
add
iret
lret
ret
addb
mov
loope
cmpsb
add
add
cmc
push
xchg
inc
or
add
lret
add
add
add
add
sub
add
mov
std
sbb
mov
mov
and
jae
stc
mov
cld
pop
js
loope
fsubrl
ret
jns
andl
xchg
arpl
mov
add
cwtl
ret
mov
aaa
sbb
pop
pop
popa
jg
das
dec
xor
adc
add
xor
scas
add
mov
mov
out
popa
sub
enter
aam
addb
mov
add
xor
push
jo
pop
xor
cli
imul
pop
add
add
push
add
xchg
lret
js
mov
add
add
mov
add
mov
jo
sub
loop
push
mov
ret
aas
shll
sub
add
push
popf
push
mov
test
mov
cli
repz
push
insl
gs
add
nop
fldt
add
out
add
imul
popa
outsb
mov
and
cltd
rcrb
add
int
sub
push
into
pop
push
dec
push
cmp
out
pop
loope
out
cmp
cmpsb
add
mov
mov
in
aaa
or
add
decl
pop
mov
int
inc
scas
add
cmp
call
add
push
add
sub
add
adc
rcll
add
mov
nop
into
mov
loopne
adcl
or
inc
scas
bound
add
mov
cli
push
add
xchg
stos
add
les
add
loopne
out
add
int3
xor
jns
nop
addr16
jbe
push
movsl
mov
add
je
roll
lods
add
ja
daa
adc
addb
sub
out
dec
outsl
repz
adc
gs
xor
cltd
test
push
xchg
push
loopne
and
add
add
or
push
dec
xchg
stos
add
and
adc
je
add
shl
mov
add
sbb
lahf
push
add
push
xchg
ucomiss
add
add
popf
push
add
cmp
pop
push
ljmp
fildll
inc
pusha
outsl
fcmovne
cwtl
and
add
repz
test
mov
add
add
sarl
jp
xchg
xchg
pop
fiaddl
in
test
add
adc
add
inc
hlt
sub
and
mov
add
add
aas
mov
xchg
cwtl
outsb
add
loop
pop
mov
adc
cmp
and
add
add
sbbl
aaa
jmp
add
cwtl
out
add
ret
fcmovnu
sub
les
lods
add
aas
sti
ret
hlt
sub
add
add
cli
xor
push
xchg
shl
dec
mov
jo
add
jle
divb
aaa
xor
jmp
add
mov
outsb
iret
mov
out
push
add
ss
lea
add
js
sti
add
add
stos
mov
jle
outsl
nop
mov
add
mov
add
sub
add
dec
imul
add
repz
sbb
add
add
std
push
sbb
sbb
in
nop
cmp
jl
inc
or
add
sahf
ret
fidivrs
add
flds
adc
fldcw
add
imull
or
sahf
adc
add
out
nop
push
outsb
xlat
lret
cmpsl
mov
add
mov
fidivs
mov
add
mov
xchg
add
std
inc
addb
addb
xorl
inc
clc
inc
in
jne
or
add
and
add
cmpsb
add
mov
stos
add
push
add
call
xor
mov
xchg
dec
das
notl
cld
add
add
mov
pop
incb
gs
push
add
or
add
pop
imul
mov
push
or
add
call
repz
push
arpl
test
daa
bound
dec
fsubl
add
jo
outsl
inc
cmp
mov
movsb
add
imulb
imul
fxsave
add
and
addl
mov
daa
xchg
inc
mov
add
pop
push
cmp
insb
jb
pop
shl
jecxz
add
dec
mov
push
add
mov
insb
sahf
pop
stos
add
aas
ja
jnp
cmp
in
pop
jge
sbb
add
mov
stos
add
push
dec
sbb
mov
dec
sbb
mov
out
jge
xor
icebp
cltd
dec
lret
test
mov
das
andl
addl
insl
filds
mov
imul
neg
jbe
add
lds
pushf
leave
frstor
cltd
lcall
aad
mov
pop
popw
imul
lods
std
adcl
add
sti
cmp
outsb
test
add
push
and
add
push
jle
xchg
push
jno
gs
imul
add
add
pop
push
add
push
rolb
or
rcrl
int3
mov
and
sub
add
or
add
add
mov
and
add
inc
add
movsb
add
pop
outsl
jle
out
dec
pop
lret
add
aaa
ficoms
fdivrs
inc
repnz
push
sbb
loopne
mov
inc
mov
push
xchg
mov
imul
sub
add
sub
add
inc
lret
mov
add
dec
pop
inc
outsl
pop
or
pop
mov
loope
mov
mov
mov
xchg
add
xchg
sbb
cmp
fisttps
int
push
roll
and
imul
add
sub
add
push
pusha
addb
jns
push
rcll
add
das
adc
in
jno
xlat
cmp
push
xor
add
or
add
dec
sub
xchg
fwait
dec
mov
mov
mov
adc
mov
orl
add
nop
mov
pop
adc
inc
pop
push
lea
xor
adc
add
inc
or
add
repz
lret
or
adc
add
add
jecxz
push
hlt
xorl
test
add
in
jnp
mov
mov
push
add
imul
add
jb
add
push
or
add
sub
add
popf
add
add
jno
jmp
ficompl
das
pop
sub
add
stc
inc
sbb
stos
add
mov
in
cmp
add
scas
jl
jg
js
mov
add
jecxz
inc
mov
add
stos
sbb
push
push
mov
hlt
lahf
sub
add
lcall
jns
mov
add
pop
dec
out
cmpsl
fnsave
pop
mov
add
imul
in
mov
cld
sub
add
sub
stos
test
add
sub
add
movsb
add
out
cmpsl
xadd
mov
call
cmp
dec
dec
mov
add
or
add
dec
lcall
and
or
add
push
lds
addr16
test
push
add
and
add
add
or
add
mov
pop
addl
dec
in
push
das
adc
cwtl
rolb
sete
add
add
mov
add
push
add
sahf
roll
add
jb
popf
imul
inc
pop
adc
pop
out
push
add
sub
add
rorl
mov
add
mov
mov
add
inc
pop
cmp
jmp
push
movl
mov
aam
sti
in
mov
add
insb
xchg
add
push
cmp
add
ret
add
fsub
int
or
add
cwtl
cmp
xor
aaa
add
add
decl
add
add
mov
cmp
mov
ficoml
add
test
add
bound
fnstcw
fisubl
pushf
dec
inc
pop
cmp
or
add
push
add
popa
scas
aad
jno
add
icebp
push
or
add
int
call
fbstp
cltd
inc
pop
cli
xor
rclb
sub
arpl
lret
push
adc
add
add
movsl
shll
add
mov
mov
loope
iret
test
add
add
add
mov
push
add
add
bound
add
push
jle
shl
and
add
lock
pop
dec
add
add
or
push
lret
addb
out
add
adc
aad
sbb
and
add
add
std
decl
ja
stos
push
add
push
pop
dec
push
xor
mov
dec
in
clc
fwait
dec
or
add
cmc
xchg
addb
repz
dec
fwait
dec
mov
mov
mov
pop
mov
subl
fsubrp
mov
push
fists
dec
pop
andl
add
push
push
dec
jno
pop
add
mov
jne
pop
mov
leave
outsb
sbb
in
xor
push
dec
add
add
mov
iret
xchg
addb
ja
push
in
sbb
hlt
fiaddl
add
mov
sbb
aam
stos
add
pop
mov
add
jmp
out
ffree
cmp
mov
inc
xor
loope
cmp
icebp
cmp
jmp
faddp
daa
dec
jns
push
inc
loope
stc
pop
dec
shl
aam
add
jnp
dec
cmp
in
or
add
push
shl
or
daa
lcall
sub
add
add
xchg
and
add
loop
lahf
sbb
dec
insb
enter
dec
leave
addr16
fnsave
mov
add
rorl
push
loop
pop
adcl
jnp
add
xchg
add
xchg
mov
add
call
add
add
insl
adc
call
lret
cmp
or
rclb
or
add
repz
sub
jbe
add
or
add
add
int3
push
add
ffree
pop
idiv
cmp
xchg
add
cmp
sti
popa
ret
imul
pop
or
add
loope
jno
scas
push
add
pop
mov
xchg
int3
dec
data16
test
out
add
sbb
into
sbbl
rorb
arpl
jle
sub
push
loope
inc
and
sbb
fdivrp
add
add
rolb
push
dec
xchg
inc
idivb
add
push
xlat
iret
dec
jl
lahf
jmp
out
addb
out
lret
pop
insb
cli
mov
loop
add
inc
imul
stc
jne
lret
cmp
lods
add
icebp
cwtl
mov
decl
push
pop
cmpsb
add
mov
insb
or
xor
jb
add
cmc
popf
je
add
mov
add
pushf
movsl
xchg
nop
outsl
and
stc
add
add
stc
sub
xor
mov
xor
mov
enter
das
jns
or
add
add
arpl
sbb
cltd
adc
add
jnp
addb
xchg
loopne
mov
xchg
and
add
js
mov
addl
clc
pop
lahf
dec
adc
mov
or
xchg
js
push
mov
fmulp
js
add
ja
mov
add
dec
xor
popf
jbe
add
xor
push
pop
pop
gs
jl
add
imul
out
shrl
add
or
mov
add
into
scas
add
pop
pop
pop
mov
out
adc
inc
jnp
or
add
cmp
dec
sub
add
lds
sub
add
scas
dec
inc
sbb
cld
push
add
and
add
pop
stos
add
and
mov
add
mov
adc
pop
fsubl
xor
inc
jno
mov
xchg
int3
jb
add
pop
dec
adc
adc
stos
add
sub
xor
test
ror
jle
sub
cltd
sar
lds
add
add
enter
xchg
add
adc
mov
xchg
in
outsb
xchg
xchg
stc
push
aas
mov
leave
and
rcl
or
jl
add
sti
mov
add
js
test
add
add
scas
add
sahf
inc
mov
outsb
scas
push
mov
je
mov
add
sub
add
add
jbe
add
xchg
fcoml
fsubl
add
fiaddl
cmp
add
stc
pusha
inc
push
add
jno
fwait
xor
mov
push
xor
jmp
lods
add
push
add
mov
add
add
xchg
lods
push
xorl
sub
add
test
add
dec
enter
fld
sbb
dec
fsubs
add
cwtl
mov
add
arpl
inc
jns
dec
xchg
add
scas
add
pop
imul
adc
cmp
push
inc
lret
cmp
mov
loope
cmpsl
lcall
add
push
add
aam
dec
in
xchg
cli
enter
mov
add
and
add
add
lret
shlb
add
xchg
cmp
test
add
test
add
icebp
mov
daa
ret
mov
inc
fidivrs
xor
mov
mov
mov
lds
and
add
sahf
inc
jbe
sub
xchg
add
add
cmpsb
add
and
add
addr16
xor
ret
xchg
test
out
fbstp
shl
dec
push
pop
aad
lock
ret
inc
adc
lret
add
pushf
push
inc
cltd
scas
mov
add
add
add
ds
dec
inc
ficomps
sub
add
mov
cld
pop
mov
adc
xchg
cwtl
mov
add
frstor
mov
lahf
dec
or
lret
outsb
xor
push
sahf
in
jns
add
pop
sbb
imul
repz
fidivrs
daa
cmp
xchg
add
add
pop
fs
push
add
icebp
add
xchg
stos
add
int
mov
in
cltd
or
add
jmp
aam
adc
add
pop
xlat
or
add
insb
ljmp
mov
test
add
aam
in
fwait
sbb
cld
ljmp
jbe
lret
movsl
insl
push
sub
mov
pop
mov
je
cmp
cmc
sahf
lret
pop
push
push
and
add
gs
mov
xchg
sub
add
xor
and
add
add
inc
sbb
shl
ret
sbb
add
xchg
jle
pop
test
add
lahf
sub
pop
je
sub
add
lock
add
inc
adc
ficomps
jne
xor
pop
add
cmp
add
jb
aas
cmp
xchg
mov
fsts
insl
sahf
sub
push
scas
add
cmp
jg
mov
add
lcall
add
movsl
pop
xor
sbb
ret
push
arpl
adc
xchg
cmp
insb
jnp
shll
add
or
and
xorl
push
enter
pop
and
add
in
je
pop
sub
test
add
fsubl
cmp
push
add
mov
add
add
sub
add
add
negl
sub
add
add
jp
rorl
lcall
stos
mov
in
add
jb
test
cmp
add
enter
nop
and
add
cmp
add
add
jae
pop
dec
dec
movsb
add
dec
jbe
cmp
mov
cmp
lcall
scas
sub
add
lock
sub
popf
push
and
out
lahf
lahf
call
test
or
call
sahf
jmp
cmpsb
add
pushl
jecxz
insl
popf
loopne
call
add
add
xchg
add
pop
cwtl
mov
add
shlb
cmc
sbb
imul
rclb
pop
mov
cmpsb
add
mov
pop
dec
push
lret
cmpsl
int
mov
out
cmc
not
in
inc
loopne
or
jnp
sub
sarb
mov
inc
pop
cmpsb
add
fadds
jno
jl
adc
and
add
pop
add
add
dec
and
fs
mov
fsubl
sarl
imul
cld
shlb
push
lcall
add
js
enter
add
sub
lahf
fdivs
push
add
jnp
jl
cld
nop
dec
mov
add
add
jl
ret
mov
movsb
add
pushf
shrb
add
push
add
call
jg
add
xchg
les
jne
cmc
cmc
dec
orl
xor
mov
sti
sahf
adc
lods
add
lret
mov
mov
jmp
sbb
lcall
add
or
jecxz
repnz
aaa
insb
mov
scas
add
test
add
sbb
adc
or
add
loope
add
lock
insb
lock
mov
loope
fldt
add
pop
aam
mov
xor
add
xor
jp
pushf
adc
enter
add
movsl
icebp
into
push
ficoml
cmp
in
mov
add
adc
pop
adc
xor
call
scas
or
add
xlat
cmp
or
add
pop
cmpl
sub
add
jge
or
stc
pop
loop
add
cmp
dec
mov
add
std
xchg
push
cli
adc
aas
dec
cltd
push
cmp
pop
aam
jns
push
ljmp
add
mov
push
push
fdiv
test
add
jb
add
imul
jne
fwait
mov
cmc
xor
test
jl
rorb
xchg
jl
add
mov
or
add
lret
scas
test
sahf
push
dec
push
add
adc
dec
dec
sbb
out
jg
das
imul
add
das
and
add
aad
xor
add
add
test
add
add
fisubrs
out
pop
xchg
lds
add
ret
push
pusha
addb
sub
add
js
add
push
xchg
push
loopne
add
or
add
push
fdivp
dec
fisubrl
mov
clc
leave
jge
add
shl
cld
add
add
add
mov
add
add
ret
loopne
add
jnp
insl
out
mov
add
pcmpeqw
cmp
jb
mov
je
cmp
fisubs
inc
bound
cmpsl
movsb
add
lods
add
cmp
add
jns
add
pop
aaa
pushf
jo
add
lock
xorl
xor
jo
call
test
add
mov
add
ret
imul
sahf
sbb
add
xchg
test
xor
sbb
aaa
stos
add
sti
sbb
daa
and
add
add
inc
and
add
pop
rcrb
daa
pop
and
pushf
lea
mov
jo
push
add
sahf
mov
add
cmp
mov
pop
sti
and
add
jns
mov
mov
jle
repz
adc
jecxz
shrl
cmpsb
add
mov
sub
add
add
je
loope
clc
ss
shll
js
dec
test
xchg
stos
add
mov
add
stos
cmp
cwtl
shrb
add
pushf
imul
xchg
add
adc
in
insb
mov
pop
iret
adc
or
add
add
mov
jo
test
add
xchg
add
addb
jle
mov
add
or
test
add
add
xchg
or
add
popf
inc
cmpsb
add
push
inc
xor
cmp
push
test
add
mov
loop
int3
test
add
pop
xchg
add
stos
jge
add
rcrl
cmp
xchg
xchg
mov
add
push
mov
popf
aas
push
and
add
lock
dec
rcrb
adc
add
xor
scas
add
add
lds
mov
add
add
mov
add
add
cmp
mov
push
insb
jg
add
xchg
push
xchg
scas
cmp
loopne
xor
add
sbb
xchg
sub
add
xchg
bound
mov
xchg
testl
pop
inc
cmp
or
add
daa
lock
xor
loope
bound
mov
xchg
jecxz
add
jbe
test
add
inc
mov
jmp
pop
add
imull
xchg
and
add
add
mov
push
mov
aad
add
aam
xlat
jb
pop
sarb
add
jmp
add
sbb
add
cwtl
sti
or
rolb
add
mov
add
clc
push
mov
add
mov
lcall
mov
cld
aad
push
out
fisttpll
out
stc
sti
sub
add
cmp
add
jl
mov
add
add
fldcw
out
loopne
add
add
jb
insl
or
add
add
out
add
mov
add
mov
jmp
fisttpl
push
push
cmp
or
add
movsb
add
popa
sbb
add
repz
and
add
iret
and
add
add
sbbl
test
add
add
add
pop
mov
fisubrs
loopne
ja
ss
addl
mov
jns
lret
pop
loope
jnp
in
cmp
in
jg
and
xor
xchg
addr16
mov
addr16
add
add
inc
iret
cli
sub
add
notb
mov
add
mov
inc
jmp
rclb
das
loop
leave
stc
or
add
xchg
push
add
mov
add
ds
xchg
mov
pop
movsb
add
jle
movsl
jmp
outsb
addb
mov
lock
cmp
push
jo
and
push
inc
mov
add
out
cmp
add
cmp
cmp
out
xchg
inc
imul
add
and
add
mov
sbb
test
nop
push
test
ret
out
repnz
and
add
add
pop
push
ds
ja
test
add
xchg
sub
test
jno
cmp
loope
loop
add
xor
test
std
aam
mov
enter
mov
pop
pop
mov
add
mov
nop
push
push
popa
pop
push
in
popa
stos
add
and
lea
add
push
add
fiaddl
push
in
xchg
cmc
jmp
dec
jb
jp
add
sahf
mov
lret
ret
insl
fdivrs
xor
aas
movsl
incl
xlat
test
add
cmp
add
or
ret
std
jg
xor
push
cltd
sbb
out
add
adc
nop
pop
jne
pop
lea
fcomps
jne
ret
adc
inc
jecxz
rep
ljmp
or
add
sahf
loop
xchg
fwait
sbb
xor
inc
push
jno
cmpsl
pop
repz
dec
adc
fstpl
imul
shl
nop
mov
mov
cwtl
pop
sub
test
sti
mov
sbb
arpl
aaa
cmp
xchg
popa
cmp
xchg
add
in
pop
jge
mov
fisttpl
addb
and
lcall
add
insb
sub
add
add
lods
add
inc
daa
xor
mov
cmp
adc
pop
mov
cltd
mov
dec
cmp
push
addr16
mov
pop
jbe
pop
cld
mov
add
and
add
mov
int
add
or
insl
addb
cmpl
jae
mov
add
cmp
insb
bound
mov
add
push
clc
dec
insb
out
addb
jp
lret
lds
push
aam
add
lcall
cmc
add
add
test
and
add
and
add
test
mov
sarl
fnstenv
imul
add
add
add
ljmp
lret
out
add
movsl
lret
pop
fldl
add
pop
pop
or
push
pop
test
push
daa
arpl
add
jle
add
loopne
ja
lahf
fsts
and
add
jo
mov
bound
inc
jg
mov
outsb
cmp
xchg
out
int
xchg
pop
cmp
and
add
cmp
add
sbb
ljmp
test
add
add
sbb
pop
jne
add
lods
aam
rorl
add
test
jnp
add
add
popa
sub
mov
add
shrd
sbb
add
xlat
mov
add
mov
jae
cmc
stc
jge
xor
pushf
in
jne
sub
add
in
stos
cmp
dec
xchg
sub
cld
push
out
adc
ja
sbb
sub
mov
add
sbb
pushf
or
out
jmp
push
add
cmpsl
std
cmp
mov
inc
push
jp
fsts
mov
test
xor
leave
add
mov
mov
add
leave
addb
out
call
cli
addb
or
add
or
add
add
add
cmp
nop
and
add
stc
stc
test
jp
add
xor
push
add
add
mov
sbb
out
aam
sub
add
add
add
cli
mov
sbb
add
push
mov
or
mov
adc
aaa
mov
jb
sbb
lds
sbb
mov
dec
les
jmp
add
push
push
xchg
pop
push
mov
add
sub
add
mov
cwtl
in
addb
inc
sahf
pop
cmc
cld
mov
cmp
add
je
lahf
movsl
add
jnp
sbb
add
inc
jl
jp
dec
fwait
pushf
jp
out
outsl
cld
mov
push
add
imul
mov
iret
cmp
adc
sbb
xchg
mov
dec
arpl
addl
shl
mov
add
shlb
add
dec
imul
movb
ficoms
add
jecxz
ret
or
jle
or
add
loop
loopne
mov
mov
into
mov
add
xchg
shrl
add
pop
add
pop
out
add
lahf
in
call
mov
add
addb
sub
add
and
add
mov
popa
cmp
add
js
mov
add
add
add
add
pop
pushf
data16
cmp
je
popf
adc
addb
pop
add
add
fstl
jns
push
mov
ja
test
insl
std
cld
add
add
dec
push
fisttpll
cwtl
push
mov
add
push
mov
sahf
push
push
frstor
add
cmp
add
add
out
sar
test
and
lret
mov
add
add
addr16
push
cmp
movsl
sub
sub
add
insb
negl
mov
add
xchg
add
mov
mov
dec
or
add
addb
hlt
mov
add
pop
add
sbb
inc
addb
dec
test
test
sbb
stos
add
daa
stos
add
push
add
jno
scas
sub
add
out
ja
sub
add
fidivrs
xchg
pop
ja
sbb
negl
inc
dec
imul
jne
add
mov
xor
add
jg
in
sbb
pop
inc
mov
add
adc
gs
sub
add
add
rclb
add
pop
test
rolb
add
cli
dec
out
imul
cmp
xchg
add
loope
movsl
test
add
cmp
add
xor
add
mov
add
cmp
jmp
add
test
add
add
mov
add
sbb
add
mov
cltd
mov
fs
fadds
sub
bound
test
add
stc
and
add
movsl
fdivrs
call
add
pop
mov
push
xchg
add
fnstsw
jno,pt
mov
inc
xor
add
mov
ficoml
cmpsl
mov
add
dec
xor
add
add
add
jb
jg
or
aaa
out
lds
add
add
add
int3
popf
push
addl
dec
pusha
imul
icebp
push
adc
xor
addb
inc
jno
mov
cli
subl
add
mov
add
push
repz
les
cmp
mov
js
enter
xor
add
xchg
mov
sub
add
int3
mov
mov
test
mov
push
dec
pop
cmc
shrl
add
stos
add
ret
xchg
test
add
das
pusha
add
stc
pop
push
add
add
aas
xlat
push
mov
cmp
insb
stos
fnsave
sbb
dec
gs
adc
mov
ds
add
add
push
add
sarl
inc
and
push
fsts
add
repz
add
mov
add
adc
jg
cwtl
repz
addb
mov
add
or
add
aas
jbe
jns
cmp
add
jno
loop
insb
stc
lods
stc
sbb
dec
mov
add
movsl
xchg
in
add
testb
int3
daa
xchg
les
push
add
gs
scas
add
leave
insl
add
add
sub
add
loop
das
arpl
daa
scas
outsb
jae
xchg
add
add
cwtl
mov
xchg
pop
pop
xor
fisubrl
add
xchg
jnp
and
or
add
add
dec
std
and
add
push
mul
cmp
add
data16
add
dec
sbb
cmc
cmp
pop
and
add
lock
jl
push
gs
iret
jae
mov
pop
rolb
and
add
jno
mov
mov
or
mov
add
cltd
scas
add
cmpl
lret
dec
xchg
xchg
je
and
add
gs
add
add
add
mov
add
mov
pop
out
or
add
sub
push
fidivs
test
xchg
lods
stos
and
add
add
addb
inc
js
clc
jecxz
into
mov
orl
sub
mov
push
pop
stos
jp
jp
cld
jnp
jge
out
pusha
setl
out
popf
push
pop
lods
add
xchg
add
add
jb
add
std
bound
add
inc
jge
xor
bound
ret
add
xlat
xchg
jnp
add
xchg
nop
mov
mov
adc
inc
mov
add
pop
mov
add
mov
add
adc
ljmp
repz
dec
cmpsl
loopne
jg
mov
add
stos
add
cmp
jo
ret
aas
cmp
mov
add
or
shlb
pushf
push
jbe
gs
fcmovbe
fcoms
sbb
push
add
add
movsb
add
fiaddl
add
or
add
in
in
push
je
push
loopne
adc
dec
test
xor
addb
inc
aas
dec
iret
adc
add
cwtl
push
and
add
cwtd
mov
add
sub
add
mov
sbb
mov
ljmp
add
push
add
add
pop
iret
cltd
xor
cmp
cmp
add
push
cmpsl
jge
imul
movsl
mov
pop
cmpsb
add
mov
adc
add
aam
add
jl
hlt
mov
add
mov
aad
xchg
pop
fadds
add
jmp
add
mov
jg
ljmp
add
add
add
shrb
add
and
mov
add
push
add
movsl
jb
cmp
pop
ds
ret
pushl
sbb
add
add
fbstp
sub
test
cli
xchg
popa
imul
add
imul
out
mov
fcomps
add
pop
mov
enter
rolb
add
or
mov
add
fstl
addb
push
pop
and
push
add
sarl
les
cltd
roll
movsl
ja
pop
xor
add
add
popa
pop
jo
add
in
ljmp
dec
mov
add
in
sub
arpl
dec
js
add
mov
push
add
out
stos
in
sbb
sub
out
add
lret
add
sahf
inc
jo
aam
push
add
xchg
scas
add
nop
jbe
clc
mov
jle
out
jp
mov
add
arpl
push
testb
add
inc
or
jne
fsubs
mov
and
inc
jmp
or
aaa
adc
in
lahf
addr16
arpl
cmp
out
pop
xchg
imul
aad
add
add
scas
out
dec
test
add
push
js
push
ss
out
cmpsb
add
mov
jl
add
ret
imul
add
mov
mov
dec
shrb
adc
popa
mov
add
inc
jp
nop
inc
adc
mov
imul
jg,pt
clc
mov
dec
dec
xchg
lods
loop
or
add
outsl
sub
pushf
cmp
ficoms
push
cmp
add
add
insb
stc
notl
popa
cltd
xor
mov
add
mov
dec
rcrb
jae
inc
push
cmp
add
stos
add
mov
add
sub
add
or
add
pop
cmp
jmp
xor
and
cmp
mov
add
in
cmp
push
fmull
cmp
pop
sub
add
jns
ds
fbld
mov
add
mov
add
pusha
out
dec
stos
add
sti
sub
or
icebp
loopne
ja
add
sub
add
std
mov
shrl
sub
add
js
adc
dec
mov
aas
jb
mov
outsl
dec
or
add
mov
insb
adc
add
pop
scas
daa
nop
jne
addr16
scas
cmpsl
cmpsb
add
xor
push
fists
into
or
add
mov
push
pop
sbb
in
lea
add
out
jo
stos
add
cltd
mov
jp
loope
fstpt
and
add
push
stc
movsb
add
cmp
add
or
add
sbb
jmp
adc
loopne
add
das
mov
add
add
mov
cmp
xchg
mov
int3
or
stc
test
aaa
sbb
pop
push
mov
cmpsb
add
mov
xor
dec
fs
xor
cmp
in
xchg
cmpl
add
sbb
xchg
add
lods
mov
add
repz
pop
sbb
pop
jo
xchg
pop
sub
add
add
add
je
cmpsl
addb
lea
mov
imul
xor
icebp
or
sbb
fisttpl
ret
sarb
xchg
aaa
jno
stos
xor
lahf
or
add
mov
add
imul
pushf
add
popa
jns
add
xlat
add
add
mov
hlt
rcr
mov
add
in
arpl
and
add
mov
jl
push
fldcw
add
divb
ds
pop
mov
xchg
mov
negb
mov
dec
sbb
push
mov
push
add
xor
cmpsb
add
mov
addl
add
bound
push
test
test
sahf
ds
sub
lea
xor
xchg
xchg
add
inc
adc
cmpsb
add
subl
mov
js
cmc
xchg
adc
sarb
add
insl
in
sti
or
add
je
and
add
in
fcoms
inc
jg
in
iret
cmp
push
mov
or
xchg
and
ljmp
inc
int
push
lea
enter
add
add
sarb
cmp
ss
mov
movsb
add
lock
addb
push
add
push
out
xorl
add
inc
fs
add
cmpsb
add
mov
add
add
loop
mov
sub
add
icebp
mov
inc
lock
addr16
xor
bound
jne
fdivrs
inc
addb
lcall
xchg
shl
fs
inc
nop
mov
mov
add
cmp
mov
add
jo
jno
push
jle
add
add
inc
cmp
pop
test
ror
aas
adc
add
ret
aad
gs
add
push
add
pushf
movsb
add
filds
dec
add
insb
into
adc
gs
jae
insb
dec
lods
add
push
add
sti
jo
je
pop
pop
jp
negb
mov
xlat
fisttpl
pop
loopne
add
lods
push
shrb
add
je
addb
mov
inc
pop
incb
adc
mov
and
add
jle
cwtl
push
faddl
imul
cli
outsb
jo
lret
cmpsl
clc
cmp
sbb
dec
add
into
and
add
lret
cmp
fnsave
sbb
mov
leave
add
lahf
scas
sub
xor
add
sub
add
mov
mov
add
scas
fwait
add
add
in
jle
loop
jb
das
popf
arpl
icebp
rorb
fidivs
add
adc
add
push
or
add
pusha
out
add
push
lds
add
mov
adc
mov
dec
mov
mov
lcall
fldl
add
test
clc
mov
add
dec
popf
adc
add
sbb
pop
xor
lods
je
mov
add
addb
das
test
add
bound
mov
add
jne
out
pop
lahf
push
int
arpl
mov
insb
or
add
dec
or
add
xchg
add
mov
or
add
cli
cli
les
aas
dec
movsl
andl
cmp
add
pop
push
mov
add
sub
add
js
mov
or
mov
aam
dec
call
mov
jmp
sbb
or
jle
dec
mov
ret
mov
fcomip
or
add
fildll
inc
cmpsl
cmpw
loope
sub
add
sbb
jno
rcr
aad
add
gs
divb
push
adc
pop
dec
divl
into
cli
jnp
push
mov
sub
add
leave
ret
sub
dec
xor
mov
add
std
orl
mov
je
out
mov
add
push
add
aam
fnstsw
sbb
jne
add
mov
in
sbb
add
stos
xchg
or
add
add
inc
mov
je
mov
fidivs
mov
mov
inc
jmp
add
outsb
xchg
leave
mov
and
add
pushf
mov
jmp
inc
add
stc
fdivrl
ss
loope
mov
fildll
bound
dec
sub
add
out
cld
insl
sti
repnz
add
add
dec
in
sub
ljmp
in
add
dec
out
mov
cmp
mov
ljmp
les
add
xor
test
jl
and
fwait
or
add
in
jo
dec
mov
mov
in
pop
bound
add
mov
add
add
pop
or
jbe
push
and
add
popf
out
add
pop
jle
mov
mov
inc
nop
shl
and
add
jno
and
mov
add
outsb
out
mov
jne
mov
mov
sub
add
mov
rorb
add
add
mov
xchg
das
repz
loop
dec
xchg
fistps
or
add
and
add
dec
into
fsts
mov
fisttpll
add
clc
inc
rcrb
cmp
icebp
sbb
adc
mov
add
adc
inc
mov
push
add
and
shrl
sbb
mov
fildll
rol
call
lcall
mov
pop
push
and
cmc
scas
scas
xchg
mov
lods
fistps
ja
add
arpl
jno
add
mov
add
inc
into
jbe,pt
xlat
fisubl
push
and
xchg
mov
add
ret
xor
out
mov
inc
jo
jbe
mov
jl
lods
add
fistpll
xchg
inc
push
fdivrs
add
jl
sub
add
fiaddl
ret
lret
mov
dec
adc
ljmp
push
mov
mov
push
in
arpl
jg
and
add
add
sub
add
out
sub
fbld
add
ret
in
add
pop
push
xchg
mov
or
add
pop
add
add
push
jle
shl
or
fists
add
scas
pop
dec
cltd
cltd
adc
pop
fisubs
add
sbb
sbb
mov
adc
add
push
add
mov
iret
jecxz
in
xchg
test
enter
sub
add
mov
fsubs
insb
daa
inc
add
add
xchg
roll
add
cmp
add
inc
rorb
mov
sahf
popa
or
add
and
mov
cmpsb
add
in
mov
mov
nop
xchg
add
mov
add
or
cmpsl
lock
stos
add
jmp
int3
sub
add
inc
ss
inc
in
mov
lcall
jb
or
xor
out
add
add
stos
inc
add
movb
in
inc
mov
mov
add
mov
and
add
lahf
not
sbb
idivb
and
add
test
add
add
add
