icebp
or
dec
sbb
xor
cmp
add
pop
or
mov
mov
and
mov
add
or
adc
xor
or
add
push
xlat
jne
add
add
aam
inc
add
jbe
cs
add
and
mov
add
inc
add
or
add
or
scas
cmp
lods
add
mov
jge
stos
data16
xor
jo
pop
jle
add
mov
add
add
repnz
aad
inc
add
add
out
sbb
cwtl
inc
add
adc
sub
adc
jl
add
or
je
jl
adc
lahf
xor
add
out
mov
jg
add
ds
dec
mov
testb
hlt
add
add
push
arpl
inc
dec
addr16
adc
mov
or
mov
pop
arpl
add
add
add
mov
lods
push
add
mov
inc
add
aaa
pop
rolb
adc
dec
mov
push
add
mov
xchg
pop
jnp
add
sub
mov
addb
in
je
icebp
sbb
xchg
add
fnstcw
jnp
testb
ljmp
sbb
pop
repz
add
and
mov
out
pop
push
add
sbb
add
dec
add
add
aad
in
mov
and
mov
fimull
mov
out
cwtl
jno
or
inc
add
mov
or
mov
add
mov
sub
xor
adc
inc
dec
add
mov
mov
xchg
sub
mov
dec
loopne
lods
in
lahf
xchg
ljmp
add
add
jge
add
and
xchg
xchg
add
add
data16
mov
int
add
add
mov
jg
fwait
cld
call
add
adc
dec
cmp
add
sub
enter
add
mov
sub
sub
add
or
leave
mov
and
mov
xchg
mov
add
fwait
lahf
insl
test
push
test
loope
jno
cld
xor
les
mov
cmp
jmp
cmc
dec
mov
neg
cmc
push
add
aad
add
xchg
dec
ds
add
ljmp
add
aad
add
pop
insb
jo
test
add
lret
xor
gs
jge
out
lahf
mov
insb
mov
imul
or
nop
add
or
shr
test
aaa
or
rcl
sub
insb
mov
add
push
addb
add
addr16
fdivs
inc
add
and
sub
addb
push
push
mov
out
aas
ja
add
mov
stos
sbb
aad
mov
popa
cmc
addb
dec
shll
cwtl
dec
mov
pop
add
addb
jnp
in
cmc
push
add
fstp
mov
clc
sub
add
dec
outsb
push
pop
push
ds
addb
add
add
rolb
jo
rolb
add
adc
test
add
mov
sbb
pop
lock
mov
mov
mov
addb
push
add
imull
add
shll
mov
inc
add
add
pop
cli
addb
add
add
rolb
cld
hlt
add
add
cli
aas
rolb
lcall
popf
add
in
xchg
add
inc
dec
fldt
add
icebp
fmul
jnp
push
add
add
fwait
mov
decb
fsubrs
xor
mov
lds
add
or
add
jae
add
pop
addb
add
add
js
add
add
and
addl
fcomps
jns
aad
arpl
add
out
test
mov
inc
jnp
into
ljmp
sbb
mov
push
sub
lret
add
xchg
add
add
add
xchg
add
push
add
pop
sbb
add
shr
sub
addb
jp
xchg
add
add
add
sahf
and
movsl
data16
jmp
and
rcrl
jle
int3
movsb
add
in
sub
outsl
add
cld
rcrl
and
add
add
mov
sahf
adc
sbb
sbb
push
add
push
add
add
add
and
add
mov
mov
and
lcall
jo
mov
sub
add
sti
lods
aam
in
mov
add
leave
testb
add
rcll
add
movaps
jno
fcompl
inc
mov
add
add
jl
loopne
sub
insl
pusha
add
in
dec
add
and
shl
add
add
mov
add
fldcw
imul
add
pop
mov
test
lret
add
inc
add
cmc
adc
or
add
mov
cmp
add
add
stos
cmp
shrl
xchg
lea
loope
and
mov
add
in
lahf
mov
arpl
les
inc
add
add
dec
pusha
add
out
fdivp
add
sbb
sub
sub
push
lahf
mov
push
mov
xlat
fidivrs
cli
fcomip
xchg
push
add
mov
scas
cli
sbb
and
mov
mov
add
inc
add
pop
lret
lret
std
cmc
inc
xchg
sub
ds
add
or
or
mov
and
out
inc
add
sub
pop
movsl
mov
movsb
add
out
xchg
jno
lahf
test
mov
push
add
jl
add
dec
mul
add
ss
movb
cmp
add
or
inc
add
add
push
jnp
je
inc
jecxz
pop
jmp
negl
cs
add
adc
jmp
add
roll
add
add
add
add
stos
das
repz
testl
lods
scas
xor
jl
dec
mov
add
lahf
push
repnz
inc
add
add
add
sub
push
jmp
dec
xchg
dec
lahf
dec
out
add
int3
pop
movb
dec
jnp
add
mov
addr16
add
add
add
cmpsb
add
lahf
sbbl
mov
daa
mov
pop
js
add
sub
sbb
imul
pop
ds
adc
xor
addr16
add
jp
pusha
add
out
push
add
add
or
sub
add
mov
xor
ret
add
pop
outsl
mov
add
lret
cmp
cmp
out
add
pusha
add
add
add
sub
mov
hlt
add
add
add
inc
mov
movb
out
mov
add
fcmovnu
cmpsb
add
pushf
pop
addr16
pop
xor
pop
sbb
push
mov
inc
add
xor
cmc
jg
mov
pop
out
and
jns
add
bound
mov
imul
scas
lahf
or
je
movsl
mov
sbb
pop
test
mov
add
add
pop
inc
xorl
mov
sahf
xchg
sbb
test
add
mov
ljmp
and
mov
hlt
add
add
clc
adc
jp
out
cmp
adc
sub
clc
lret
add
fwait
dec
push
rolb
add
into
sbb
pop
shll
stos
loop
jae
dec
daa
rolb
and
dec
movb
inc
add
inc
add
and
mov
add
and
pushf
aam
sahf
xchg
int
jle
push
mov
mov
add
adc
lea
jmp
sbb
or
inc
inc
add
mov
rcr
lods
jb
data16
bound
mov
aas
or
mov
sbb
xchg
rolb
fistl
add
arpl
call
jmp
add
push
add
add
pop
aam
fcmovnu
inc
add
mov
lcall
insl
inc
jecxz
add
push
outsb
mov
jo
jp
adc
aas
sub
add
pop
data16
jl
leave
aad
push
push
mov
xchg
daa
cmc
sbb
mov
sub
push
push
push
cld
call
sub
mov
cs
movzbw
cmp
ss
lea
push
push
call
cmp
je
es
lea
push
cs
es
call
test
jne
jmp
lret
icebp
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
lea
add
repnz
mov
sub
sub
push
pop
push
push
jmp
jmp
add
add
daa
adc
add
xchg
cwtl
add
mov
fcoml
add
stos
bound
mov
and
mov
mov
cmpl
add
js
dec
xchg
ret
mov
jg
pop
add
adc
xor
cmp
mov
loop
jecxz
add
add
mov
dec
nop
add
add
sbb
jle
imul
mov
addb
test
inc
add
arpl
mov
aaa
jecxz
lcall
mov
mov
movsl
jno
mov
sub
pop
movb
rorl
add
add
add
mov
and
pop
sbb
pusha
add
add
add
xchg
jge
jmp
add
sub
push
add
push
add
std
imul
pop
repnz
inc
cmc
setno
scas
pop
test
std
jge
inc
add
add
add
add
jmp
mov
or
add
aaa
cltd
int3
sub
add
add
cmp
loop
test
popf
popa
in
ja
add
add
popa
shl
add
and
sbb
arpl
push
ds
xor
add
in
xchg
add
add
mov
adc
jne
mov
outsb
xor
fistpll
xor
add
rolb
data16
cmp
loopne
sti
sbb
inc
pop
mov
mov
jns
outsb
out
dec
addb
jmp
dec
jb
ret
add
cmp
mov
test
movq
testb
add
jbe
inc
ja
sub
add
rcll
insl
in
jnp
add
add
sub
std
gs
scas
inc
add
add
ljmp
add
add
add
hlt
add
add
add
dec
lock
add
sbb
iret
dec
daa
scas
mov
pop
loope
xor
dec
xor
and
mov
add
add
das
dec
jmp
lock
or
mov
add
add
xor
add
xlat
or
add
shrl
pop
iret
cld
ret
pop
or
inc
add
add
nop
add
scas
sbb
imul
and
mov
jo
jp
out
jl
xchg
add
xor
or
loop
add
xor
xchg
js
scas
test
add
xchg
add
jmp
fnstenv
daa
out
lret
and
jo
test
xor
jns
mov
dec
gs
jo
sbbl
lock
add
add
mov
mov
nop
add
pusha
add
add
xchg
testb
out
loope
jl
add
cwtl
and
dec
imul
outsl
dec
lea
add
pusha
add
dec
test
sbb
jo
mov
out
out
mov
mov
xchg
adc
mov
push
add
add
mov
cmp
mov
pop
repnz
aaa
mov
nop
add
jmp
xchg
add
cmp
mov
add
add
loopne
shll
and
inc
add
add
mov
add
xchg
add
fisubrl
pushf
push
imul
sahf
rcr
test
fisubrl
addb
imul
roll
add
and
mov
enter
jecxz
add
add
pusha
add
sbb
das
push
scas
test
add
xor
xchg
add
push
add
hlt
add
mov
addb
add
pushf
mov
call
add
jmp
gs
jmp
xor
gs
lea
dec
bound
mov
cmpsb
add
sbb
icebp
add
movsb
add
mov
add
add
mov
insl
js
add
addb
add
lret
and
mov
pop
xor
jmp
popa
jp
jp
ficoml
add
enter
add
add
add
or
nop
add
fcompl
stos
add
insl
or
jle
rcrl
add
dec
in
mov
xchg
scas
dec
dec
xchg
xchg
mov
ret
cld
xor
xchg
faddl
sti
sahf
testb
ds
dec
rol
add
lret
add
xor
daa
mov
mov
push
add
xchg
fsubl
inc
add
in
outsb
or
mov
dec
xor
push
add
cmp
shll
pop
mov
push
ret
pushf
jo
mov
pop
add
arpl
xor
imul
push
add
mov
lret
jb
testb
add
jecxz
stos
jne
ret
jae
add
add
lock
popf
push
add
add
adc
or
inc
fstl
std
mov
add
cmp
mov
dec
cltd
sub
ret
add
add
push
sub
push
inc
mov
insl
int
adc
paddusw
add
add
jg
aad
add
pop
aaa
mov
add
data16
addb
lret
xor
pop
movb
ficompl
sbb
add
inc
push
add
in
push
add
add
add
push
add
or
add
xchg
inc
add
add
dec
aas
popa
push
mov
mov
sub
inc
add
fwait
jmp
scas
clc
mov
test
lods
jnp
add
pop
movb
lods
sub
add
pop
rolb
xchg
xchg
add
ret
popf
dec
cs
arpl
push
add
sbb
add
pusha
add
add
rolb
push
push
add
add
push
leave
mov
stc
lcall
test
dec
jbe
jg
data16
lods
cmp
push
test
aam
roll
add
cmp
sahf
jmp
std
push
add
repnz
rolb
popa
push
add
dec
dec
out
test
aas
xchg
cmp
icebp
dec
mov
les
and
mov
pop
jbe
mov
mov
add
mov
dec
ja
sub
push
and
mov
add
add
add
nop
add
adc
mov
cltd
dec
inc
push
add
jp
xlat
dec
loope
fildll
push
ret
daa
xlat
jbe
pop
and
add
ljmp
cmpsl
sbb
ljmp
testb
mov
fstl
mov
add
movsb
add
add
jb
mov
data16
sbb
sbb
add
push
add
movl
adc
out
rolb
add
mov
add
xchg
add
testb
add
cmpsb
add
add
and
addb
add
add
add
fisubl
clc
cmp
mov
ret
pop
xor
add
push
popa
addb
sub
add
add
add
inc
add
add
sub
hlt
add
ret
xchg
add
add
add
cmpsl
ljmp
add
movsl
aas
add
ljmp
lret
cs
pop
stc
push
add
xchg
add
add
add
mov
add
clc
xchg
add
jns
in
movsb
add
sti
xchg
dec
lods
ficomps
cmc
add
inc
add
mov
test
add
mov
add
add
or
add
add
add
mov
mov
inc
add
inc
inc
inc
add
enter
mov
lods
sbb
mov
sbb
dec
jb
mov
sbb
cld
cmc
cmp
xchg
add
sbb
test
add
movb
add
jg
add
arpl
xor
add
push
addb
fwait
dec
imul
add
dec
cmp
ljmp
rolb
and
fcompl
xchg
mov
ds
add
and
loop
inc
add
and
xchg
push
add
pop
dec
loopne
and
dec
mov
dec
or
addb
enter
jno
cmp
cltd
mov
call
mov
pop
mov
adc
pushl
dec
out
push
add
add
leave
jp
and
mov
cld
lret
testb
add
pop
loop
lods
aas
and
lea
jb
imul
js
cmp
lcall
cmp
xchg
jns
int3
aaa
testb
mov
cmp
add
iret
jmp
add
push
rolb
fidivl
and
mov
add
mov
add
push
add
add
int
mov
addr16
push
add
and
add
ljmp
xchg
add
add
pop
in
sti
fsts
add
ja
iret
addb
add
add
add
or
add
jle
fmull
repz
addb
mov
adc
add
hlt
add
out
sub
add
add
and
jnp
or
add
test
mov
add
add
pop
adc
add
movsl
jae
out
jl
add
add
adc
mov
mov
add
mov
movhps
inc
add
add
add
add
sub
je
insb
add
add
cmc
cmpsl
aad
add
add
enter
or
das
das
inc
stc
sbb
arpl
add
pop
out
lcall
addb
and
mov
fwait
mov
imul
dec
aaa
inc
lods
js
push
add
movsl
loopne
lds
add
dec
adc
stc
xor
movsl
lret
pop
mov
repz
jno
add
pop
scas
insb
jb
arpl
inc
imul
dec
jbe
push
add
mov
xlat
addb
sbb
add
gs
xchg
add
dec
in
inc
add
adc
add
mov
add
in
test
aad
push
std
adc
mov
jecxz
add
add
add
sbb
pop
rolb
xchg
pop
sbb
cmp
mov
and
mov
addl
mov
push
mov
adc
test
add
test
push
add
add
lods
rolb
xchg
orl
add
dec
or
push
add
rolb
gs
movsb
add
mov
add
add
or
mov
xor
cmp
inc
stos
cmpsb
add
mov
xchg
add
dec
inc
add
xor
add
pop
jb
sti
xchg
dec
movsl
aad
inc
and
push
add
add
stc
add
add
addb
fucomi
jae
mov
adc
pop
hlt
add
ret
out
sub
jge
or
or
push
sbb
add
arpl
add
data16
sub
loope
std
sub
adc
sub
rol
imul
add
jg
mov
add
cli
fildll
les
xor
xor
add
add
add
addb
add
pusha
add
sbb
ja
movb
dec
mov
sub
mov
inc
daa
jbe
mov
subl
insb
out
int3
pop
or
add
loopne
xchg
lea
jnp
add
lock
sub
mov
cmp
pusha
add
add
add
stos
iret
inc
add
cmp
add
mov
call
dec
fsubs
js
adc
adc
cmp
jmp
insb
insl
or
cltd
mov
rolb
sbb
mov
popa
jge
add
add
add
iret
mov
mov
push
fnstsw
jmp
xchg
mov
mov
sub
into
xor
dec
xchg
lds
and
push
mov
daa
loop
enter
mov
jno
sub
fdivrl
dec
xor
imul
inc
add
dec
jae
push
xor
cs
add
addb
fsubrl
mov
add
lcall
push
add
add
sbb
mov
add
lods
cmp
movb
add
add
cmp
ljmp
add
in
add
lahf
dec
inc
mov
or
xchg
movsl
out
cmp
shrl
inc
in
and
mov
pop
rorl
add
arpl
pushf
outsb
les
test
ret
add
jb
test
sub
add
add
add
scas
fistpll
add
pop
ret
sahf
push
inc
add
add
adc
in
push
add
mov
lods
mov
addb
pop
enter
add
inc
add
divl
gs
adcl
or
sbb
inc
add
les
in
or
aaa
cmpsb
add
test
movaps
add
add
rolb
dec
adc
xchg
bound
mov
arpl
inc
add
cmp
in
jbe
or
hlt
add
aad
in
and
add
pop
xor
scas
in
and
mov
cli
in
or
cld
xchg
dec
lds
add
add
test
mov
rolb
into
in
mov
inc
add
pop
xchg
add
jns
mov
ror
xchg
add
mov
sti
inc
xlat
loop
data16
clc
jns
xchg
mov
add
mov
add
sub
fildll
adc
movsl
sub
jbe
and
mov
mov
pop
xor
pop
movsb
add
movb
sub
jns
add
add
pop
lahf
add
mov
insb
pop
test
inc
mov
mov
addr16
sbb
lea
mov
jecxz
insb
xchg
add
add
movb
add
add
adc
add
addb
cmp
filds
add
add
int3
loop
and
mov
movb
sbb
add
jnp
mov
add
xor
lret
add
mov
xor
testb
add
sbb
sti
and
mov
add
sahf
fwait
jae
add
mov
add
pop
dec
dec
mov
xchg
inc
xor
add
lret
add
add
dec
push
add
jmp
lcall
pop
push
and
jb
popf
and
mov
jle
sbb
lahf
and
add
cmc
rolb
xchg
add
bound
mov
jmp
add
add
jbe
pop
mov
add
mov
pop
xor
dec
jnp
pusha
add
mov
iret
mov
adc
in
movsl
cltd
std
sub
sub
sub
push
add
insb
cmp
out
push
add
add
add
add
add
sbb
addl
mov
push
in
xor
sub
jle
inc
sbb
and
mov
ret
test
add
or
jl
scas
push
add
add
imul
jne
push
add
or
xor
push
add
xchg
xor
add
cmp
imul
add
xor
or
mov
mov
pop
pop
xchg
add
add
add
mov
or
add
add
xlat
adc
sub
add
add
mov
jl
int3
aad
sbb
add
add
out
cmp
push
add
ljmp
stos
push
repnz
mov
sbb
inc
inc
add
add
mov
add
jge
sub
add
sbb
imul
in
add
repnz
js
in
sti
loop
xchg
mov
jmp
mov
add
rorl
adc
mov
mov
mov
jp
gs
ljmp
mov
sbb
sub
fstps
xor
mov
and
aad
add
add
add
add
mov
dec
inc
aas
pop
xchg
push
popf
movsl
cmpsb
add
fprem1
sbb
add
add
add
sub
fstl
pop
pusha
add
push
stos
mov
out
fstl
sub
add
add
stos
dec
jmp
popa
mov
mov
outsl
loop
or
pop
sub
add
add
add
sub
mov
pop
enter
jmp
push
and
mov
rolb
fbld
data16
xor
aaa
pop
sub
pop
outsl
sbb
aam
mov
je
sahf
adcl
push
add
push
add
lret
pop
adc
xlat
leave
in
mov
add
mov
movsb
add
lods
mov
add
add
mov
adc
add
aaa
packssdw
out
sub
push
pop
inc
adc
xor
add
add
or
cmp
dec
mov
pop
mov
sbb
mov
xchg
add
imul
add
leave
test
jmp
push
testl
mov
out
add
mov
push
add
fisubs
mov
cs
int
popa
xor
add
cs
push
lods
xor
ja
pop
fidivl
mov
rolb
sbb
add
push
add
pop
imul
rcr
shl
add
mov
add
dec
mov
fcmovnbe
sbb
scas
scas
cmp
jo
call
clc
add
add
dec
sbb
into
and
add
mov
and
sbb
add
mov
jl
pop
jg
scas
popa
or
arpl
add
add
add
add
imul
or
or
add
add
jl
jno
pop
pop
ja
mov
jno
test
cmpsl
jno
fbstp
add
xchg
imul
pushf
adc
pop
mov
addr16
add
mov
mov
cmp
add
fisubs
das
sbb
nop
add
adc
sub
push
add
add
jbe
inc
mov
add
movb
lret
pop
aas
mov
add
scas
lret
dec
mov
mov
xchg
add
xchg
push
loopne
das
and
loop
pop
sbb
sub
add
insb
push
inc
add
mov
shrl
lods
scas
loopne
scas
mov
mov
add
popf
push
cltd
out
cmp
add
pop
pop
sbb
add
inc
add
add
add
sbb
mov
out
fmulp
mov
jnp
add
xor
fimull
add
test
add
sub
pop
ffreep
add
pop
xchg
add
pop
aad
jb
xchg
jle
imul
xor
add
inc
pop
and
xchg
add
cld
fwait
in
int
out
or
sub
ljmp
movsb
add
add
add
icebp
pop
cwtl
pop
lea
add
mov
add
sbb
and
or
xor
lcall
xchg
dec
call
testb
in
sub
cmp
sub
mov
test
mov
and
data16
data16
scas
and
mov
negl
add
add
dec
add
hlt
add
push
add
das
bound
mov
mov
mov
fisttps
add
add
lcall
add
jbe
loope
xchg
lahf
jecxz
addb
dec
testb
mov
testb
das
aaa
cmpsb
add
add
jns
xchg
add
add
sbb
push
jne
push
add
inc
add
nop
add
add
sub
stc
out
out
add
add
add
add
addb
aad
mov
out
testb
insb
cltd
xor
dec
add
mov
adc
scas
jmp
sahf
dec
mov
add
lods
daa
xlat
inc
movsl
cmp
adc
ljmp
fstl
dec
mov
fcoms
add
into
pop
push
mov
add
sbbl
xor
insb
insl
lea
mov
xlat
dec
cmpsl
cli
add
in
bound
mov
and
jb
in
mov
sbb
mov
pop
lock
addr16
lahf
addb
lahf
rolb
fdivr
or
add
out
mov
test
add
cmp
or
add
int3
in
adc
cmp
stc
and
mov
setp
mov
xor
je
xor
lret
cmpxchg
fwait
inc
add
pop
mov
and
pusha
add
sbb
dec
mov
adc
add
or
xchg
add
fadd
add
js
add
mov
sbb
inc
add
dec
stc
inc
add
add
fwait
mov
add
xchg
add
pusha
add
movsb
add
js
jmp
add
cmc
push
push
les
or
pop
scas
daa
adc
cmp
add
aaa
sbb
jmp
xchg
in
push
xor
mov
mov
and
mov
and
jge
add
loopne
inc
add
mov
sub
add
fiaddl
ljmp
jb
xlat
cmp
xchg
sahf
scas
in
add
sbb
sub
aam
cmp
mov
pop
mov
inc
cmc
movb
add
outsl
inc
push
add
add
xchg
add
cmc
or
loop
data16
cld
jp
and
mov
std
sbb
or
add
dec
push
add
pop
fwait
subl
jno
mov
add
jo
add
add
jl
ret
add
sbb
mov
dec
mov
add
rcll
add
mov
rolb
add
pop
jecxz
add
add
test
sti
jmp
cmpsl
sub
add
hlt
add
fst
add
add
add
mov
out
pop
adc
add
xor
xchg
add
mov
push
outsb
mov
fwait
mov
clc
xor
sbb
pop
sub
ret
add
mov
adc
int3
out
popf
sbb
or
add
add
mov
add
outsl
stos
lods
fldt
ja
pusha
add
jg
jle
ret
xchg
add
ds
xchg
cld
xchg
add
xchg
mov
cld
pop
and
mov
push
add
call
add
dec
adc
lret
mov
pop
pop
aaa
test
and
jno
pushf
sub
lcall
jne
add
inc
push
add
in
sbb
loope
adc
xor
popa
icebp
cmp
add
xor
jle
cltd
leave
and
popa
jl
js
inc
add
mov
dec
pop
xor
add
add
push
xor
xor
jne
mov
insl
mov
pop
push
leave
add
mov
out
dec
ja
insb
nop
add
add
add
scas
mov
xchg
stos
ret
add
cmc
cltd
sub
and
mov
sahf
mov
pop
xchg
cmp
mov
add
je
adc
pop
addb
lods
jge
push
addb
push
out
clc
add
mov
les
pop
jecxz
add
mov
mov
push
xchg
sbb
btc
mov
and
mov
cmpsl
cmpsb
add
mov
loope
add
mov
add
push
add
add
add
lahf
arpl
dec
loop
and
movsl
xor
xchg
mov
xchg
cmp
xchg
inc
add
popf
add
add
outsb
add
mov
mov
pop
mov
jbe
pop
mov
sub
leave
adc
add
addb
lret
inc
push
add
add
lahf
sahf
jns
or
xchg
add
ret
pop
inc
inc
das
cltd
push
add
add
add
add
cmp
orl
fcomps
addb
frstor
mov
add
add
mov
add
mov
mov
data16
sbb
push
xchg
add
jl
ljmp
add
fdivp
pop
xchg
iret
pop
loopne
outsl
inc
jle
repnz
xorl
mov
movb
cmp
xchg
mov
inc
or
add
int
add
pop
xor
add
add
add
imul
sub
add
sbb
std
cmp
sti
or
sub
dec
add
add
mov
jb
jge
fnstcw
fistps
xchg
pop
aam
aad
int
or
out
fsubl
and
add
pop
or
add
jle
mov
rolb
out
pop
lods
push
add
stos
xor
jmp
jns
adc
add
mov
mov
xchg
mov
add
inc
scas
xchg
add
or
inc
jne
and
mov
add
fidivrs
icebp
xor
daa
arpl
in
insl
or
sbb
add
add
sbb
int3
ret
add
add
mov
xchg
add
daa
mov
mov
add
add
aad
ja
pop
mov
xchg
add
add
cmp
loopne
ss
add
mov
lcall
pop
pop
outsl
sbb
jbe
jecxz
add
mov
add
mov
xor
cmp
subl
movsl
cmpsb
add
add
add
add
add
leave
sub
add
int3
lods
jb
cmp
mov
rolb
add
add
jbe,pt
cmpsb
add
repz
add
mov
add
add
and
jno
cld
pop
daa
std
test
sbb
xchg
add
mov
add
icebp
xchg
and
je
nop
add
daa
loope
les
sbb
in
pop
push
rorl
push
add
add
movb
data16
add
cltd
cli
fimuls
mov
lods
into
clc
imul
xor
inc
sub
das
repz
or
ret
mov
mov
ds
sbb
add
add
add
add
mov
add
mov
ds
add
mov
add
add
add
add
std
daa
xor
add
sahf
push
add
jo
cmp
out
sbb
add
mov
sub
add
lss
bound
mov
nop
add
clc
pop
push
add
fmull
in
loope
pop
cltd
mov
mov
insl
addr16
lea
add
add
aaa
fldcw
daa
aad
add
add
add
cli
mov
gs
add
or
cmp
add
filds
or
outsb
xchg
lea
pop
dec
lods
push
push
add
add
inc
orl
xchg
add
mov
sbb
lahf
sub
jbe
sahf
clc
dec
sbbl
add
les
dec
enter
push
add
add
ljmp
add
mov
mov
mov
add
dec
adc
add
bound
mov
add
rcr
ret
andl
add
sbb
cmpsl
stc
dec
adc
jb
or
mov
add
mov
gs
add
jge
enter
add
sub
add
loope
add
dec
push
add
xchg
leave
push
add
add
and
mov
cli
add
inc
pop
mov
mov
jnp
ds
in
cmpsb
add
add
rol
stos
dec
push
xchg
add
lock
js
enter
arpl
pusha
add
add
aaa
cmp
scas
xlat
mov
add
std
outsb
pusha
add
addb
xchg
sbb
add
cmp
insb
push
add
push
add
stos
inc
jns
cmp
mov
je
mov
add
mov
jbe
sub
shll
insb
gs
add
add
clc
stos
insb
and
or
out
jle
add
mov
out
stc
adcl
push
add
add
add
add
add
mov
inc
add
mov
or
xor
lret
test
gs
test
in
in
pusha
add
mov
sub
jg
popa
push
std
adc
aaa
jne
in
add
popf
js
adc
cwtl
inc
hlt
add
jo
mov
cli
mov
ljmp
add
add
xchg
add
cmp
xchg
mov
out
mov
inc
add
inc
add
rolb
lock
out
sbb
add
mov
add
lahf
jmp
add
add
add
mov
add
test
mov
addl
jmp
sub
cmp
mov
mov
mov
add
imul
rolb
lret
push
add
add
mov
add
dec
mov
add
add
mov
adc
add
add
add
ret
movb
add
and
mov
lret
add
das
cli
lods
adc
fldl
mov
ljmp
xchg
add
ret
in
push
add
aad
add
mov
fbld
add
add
add
clc
test
or
add
lds
sbb
jns
ljmp
xor
xlat
cmpsb
add
add
into
push
dec
test
out
fistl
jle
ds
lahf
pop
sbb
push
add
pop
jp
ds
add
pushf
sbb
scas
lret
mov
sbb
or
shll
add
inc
add
int
lea
jnp
jbe
cs
push
les
sub
xchg
dec
int
hlt
add
add
xchg
popf
loope
add
mov
mov
jno
cli
fwait
leave
xchg
and
test
mov
loopne
rolb
inc
add
mov
jo
xchg
push
and
mov
mov
and
add
xchg
pop
out
mov
addb
in
sahf
adc
add
movsl
icebp
rolb
fs
add
or
inc
fsubs
movb
lret
outsb
stos
bound
mov
mov
test
loope
xchg
add
repz
mov
pause
add
addr16
ja
add
sbb
inc
imul
add
jno
add
add
mov
or
add
mov
sub
call
popa
aas
test
mov
clc
sti
fiaddl
popa
aaa
cmpsb
add
cmpsb
add
andl
add
cmp
xchg
add
pop
pop
and
add
testb
ja
add
add
test
in
mov
addb
add
add
arpl
sub
mov
xchg
push
or
rolb
sub
and
mov
dec
sbb
stc
add
add
mov
add
mov
push
cs
data16
adc
push
inc
add
add
movsl
ja
insl
out
es
adc
in
jecxz
xchg
dec
loope
stos
xor
add
inc
ljmp
stos
inc
add
sahf
testb
mov
and
mov
jg
cmpsl
data16
and
push
and
mov
mov
jbe
adc
shrl
add
sub
pop
fwait
jecxz
outsl
inc
sub
and
dec
xor
inc
add
add
add
add
add
add
jp
ja
sbb
add
cmpsl
inc
mov
inc
xchg
mov
jg
aas
lods
mov
and
sub
cltd
cmp
sbb
cwtl
mov
jnp
add
add
pushf
push
add
dec
xchg
add
fistpll
cwtl
lret
dec
hlt
add
add
jne
mov
popf
jmp
movb
add
mov
aam
cmp
out
push
add
mov
add
mov
or
and
imul
pop
addb
rolb
jne
mov
cld
add
push
add
call
dec
lods
stc
sbb
mov
fdivrp
aaa
sub
cltd
xchg
mov
add
fstps
pop
test
cmpsl
out
sub
add
adc
imul
into
cmpsl
shrl
hlt
add
je
cwtl
push
sbb
out
cli
or
in
push
imul
movsb
add
jmp
lock
inc
add
ret
add
jns
add
or
pop
add
mov
add
nop
add
add
pop
push
jmp
add
sbb
jne
add
lcall
cmp
addb
push
add
test
xor
mov
add
add
and
push
out
popa
adc
jg
cmc
out
popa
inc
push
add
add
add
add
add
adc
shll
add
jmp
sbb
arpl
xchg
mov
out
iret
shl
add
inc
add
and
sbb
dec
cmp
push
add
add
mov
aad
cmp
call
add
mov
sbb
iret
xor
std
pushf
js
dec
popf
jge
add
test
add
add
add
mov
add
push
inc
and
mov
xchg
fldt
gs
push
jmp
push
add
movb
sbb
int3
faddl
jmp
popf
jbe
add
dec
movsb
add
add
xchg
lcall
and
add
in
data16
imul
adc
lock
mov
mov
add
add
icebp
dec
inc
add
movb
nop
add
add
add
add
add
gs
inc
jmp
pop
cmpsl
adc
jb
cmp
test
and
mov
adcl
add
mov
mov
rolb
xchg
add
jnp
jmp
add
addr16
add
mov
add
mov
adc
inc
or
and
and
mov
shll
insl
xchg
lret
ljmp
add
repnz
add
rcll
jecxz
out
xor
add
outsb
std
sbb
mov
push
add
sub
push
add
add
testb
daa
mov
ljmp
clc
push
add
insb
jp
add
push
cmp
and
sub
add
xchg
ljmp
cmp
dec
test
je,pt
out
jg
movsb
add
add
and
add
and
sbb
mov
dec
mov
imull
add
jecxz
xor
xchg
lods
mov
add
pop
aam
sbb
add
inc
add
clc
push
or
add
or
movb
rolb
lret
or
cli
insb
inc
cmpsb
add
jne
add
cmp
dec
cwtl
rolb
push
test
pop
into
add
adc
push
add
add
add
fbld
add
clc
and
mov
dec
pushf
pop
pop
fmuls
arpl
pop
pop
fdivl
add
add
pusha
add
add
stos
movb
jb
or
fstpl
js,pn
xchg
bndldx
lret
mov
mov
popa
mov
jns
add
out
push
loopne
xor
iret
or
mov
push
jno
in
dec
hlt
add
push
int
scas
data16
add
push
scas
push
add
jno
inc
add
adc
sbb
mov
scas
imul
mov
pusha
add
dec
addb
add
adc
add
cmp
mov
cmpl
sub
sbb
mov
addb
roll
jnp
xchg
lret
inc
add
add
fwait
outsb
or
dec
fimuls
in
add
insb
cmp
aad
sbb
dec
sbb
in
popf
scas
jl
sub
addb
jecxz
add
test
inc
pop
pop
inc
add
fisttps
testb
add
add
add
gs
je
fisttpll
pop
add
add
je
ror
sub
adc
lods
xchg
outsl
fsubl
mov
cmp
add
jne
mov
jg
mov
inc
insl
pop
jmp
das
add
add
add
lahf
inc
sbb
sub
add
jp
in
cld
or
add
adc
xchg
das
lea
mov
nop
add
imul
bound
mov
add
xlat
adc
test
call
add
push
add
imul
jmp
xchg
add
jecxz
push
pushf
mov
and
leave
outsl
jle
add
out
cmp
pop
xchg
lahf
pop
cmpsb
add
add
repz
add
mov
mov
add
add
push
cmp
add
mov
jge
dec
xor
cmp
jne
out
xor
sub
add
mov
test
rolb
or
add
add
data16
scas
xlat
ja
add
je
cs
jnp
popa
aaa
push
loop
testb
add
mov
lahf
and
mov
stos
test
xchg
mov
mov
mov
cmp
mov
add
inc
add
dec
pop
pop
loopew
mov
add
jbe
mov
pop
testb
mov
lds
mov
mov
add
jge
in
push
add
ss
mov
sbb
lods
add
and
xchg
add
stos
lods
leave
and
add
add
and
mov
mov
add
add
js
xor
out
add
add
pop
out
add
data16
pop
stos
pop
push
add
fiaddl
mov
add
add
adc
rolb
and
mov
int3
movb
mov
push
add
sbb
add
pop
les
push
daa
fidivl
movsb
add
xor
cmp
pop
fsubs
mov
add
iret
popa
xchg
add
xor
adc
dec
jb
sbb
sbb
push
mov
add
add
cltd
ret
mov
add
enter
nop
add
jne
mov
or
lock
inc
add
test
mov
das
bound
mov
add
add
or
negl
push
loopne
ljmp
mov
call
mov
xor
cli
or
add
sbb
add
cmp
or
mov
mov
add
sub
in
pop
mov
pop
mov
lods
xchg
add
sbb
jno
movsl
jge
adc
enter
leave
mov
add
pushf
mov
xchg
add
add
jne
jecxz
xchg
data16
das
xchg
add
dec
jecxz
test
cmc
inc
cmp
dec
inc
add
rolb
pop
jle
xchg
xor
mov
and
xor
pop
push
add
lea
cmpl
add
mov
dec
not
add
in
test
add
add
in
mov
jno
aad
sub
add
xor
and
or
daa
sbb
add
inc
add
nop
add
mov
add
cs
inc
in
int
mov
sbb
dec
pop
in
sbb
lahf
outsb
cmp
addb
loop
mov
cmpsb
add
cli
aas
jle
jmp
add
fwait
push
mov
pushf
sub
add
mov
add
xlat
fsubrs
loopne
idivl
repnz
add
mov
add
in
ljmp
mov
aas
movb
add
pop
xchg
lock
jmp
lea
or
xchg
and
inc
add
fxch
xchg
push
leave
adc
push
add
mov
je
cmc
insl
jb
xchg
add
pop
add
sub
push
push
nop
add
pop
push
mov
xor
push
imul
ret
hlt
add
ret
add
mov
add
inc
add
add
add
add
mov
mov
lret
push
movb
outsb
add
mov
add
add
pop
mov
hlt
add
jbe
add
jecxz
xorl
shrl
jmp
add
inc
add
push
lahf
rolb
sbb
pop
add
add
cmp
fwait
outsb
jl
roll
pusha
add
out
inc
add
mov
lahf
mov
add
jecxz
out
mov
add
add
daa
ret
dec
cmpsb
add
ja
iret
shl
add
test
add
fmull
pop
ja
push
popl
cmp
add
adc
jb
cmovns
jmp
add
xchg
add
cmpsb
add
add
jb
out
ja
ss
add
das
in
push
add
pop
aas
mov
leave
cwtl
cmp
cwtl
inc
add
push
xchg
into
lret
sahf
pop
mov
mov
add
mov
cmp
add
pop
pop
xchg
aad
addr16
add
add
add
jbe
cmpsl
enter
add
movsl
insb
jg
add
cltd
aam
ret
scas
xor
xchg
dec
mov
inc
fbld
data16
dec
jg
xchg
pop
stos
js
daa
int3
dec
inc
add
ret
inc
add
mov
sub
add
mov
push
add
mov
addb
das
mov
add
sahf
inc
xrelease
jmp
mov
fisttpl
add
cmpsl
pop
or
or
mov
loope
add
add
sub
pop
add
jne
add
sub
rcrl
mov
jg
cmp
add
xchg
stos
cmp
sbb
jb
aaa
cmpsl
inc
fwait
iret
pop
pop
fcomps
mov
mov
add
add
add
fsubs
add
cltd
push
add
push
mov
mov
add
inc
add
add
adc
fcoml
fildll
add
fmulp
adc
add
xorl
or
jae
add
push
xchg
xchg
add
js
add
push
scas
scas
mov
xchg
rolb
lahf
mov
mov
out
lret
scas
xchg
and
add
mov
add
add
imul
cli
das
ljmp
outsb
dec
xchg
add
add
jecxz
stos
jg
cmc
fwait
movb
out
fidivrs
inc
add
add
pop
cld
ret
jmp
add
mov
cltd
cmp
add
xchg
sub
adc
les
pop
arpl
cmp
xor
pop
mov
pop
ds
add
add
clc
mov
cltd
add
fcmovb
add
rolb
pop
sbb
lods
fwait
add
inc
dec
cmp
add
add
cld
push
loope
add
jns
sarl
rolb
ret
insl
pop
mov
mov
and
dec
jno
ret
gs
popf
xor
mov
inc
jp
lret
inc
dec
push
fwait
test
mov
jge
stos
xor
jle
shll
lcall
pop
inc
mov
lret
sti
xchg
imul
add
or
icebp
sbb
mov
lahf
lcall
add
leave
stc
das
rorl
jp
fisttpl
pop
pop
gs
dec
mov
mov
aad
sbb
pop
push
andl
fldz
pop
add
sub
add
mov
add
pop
dec
mov
adc
jmp
mov
add
fisttpl
xor
inc
add
pop
push
add
and
add
jo
dec
aas
or
push
test
push
adc
movsb
add
add
cmpl
and
mov
addb
add
dec
dec
fwait
repnz
xchg
add
repnz
mov
jp
add
add
push
lret
enter
jne
dec
dec
dec
pop
push
add
mov
mov
aam
hlt
add
sbb
addb
add
lahf
movsl
rcll
push
add
bound
mov
test
dec
xor
fidivrl
add
movsb
add
out
imul
dec
fwait
and
stc
lock
dec
lret
sub
ret
add
push
cli
inc
add
dec
ret
xor
mov
cmpsb
add
insb
inc
fcomps
pop
cmp
add
cmc
pop
mov
add
mov
add
add
add
mov
ja
roll
inc
loopne
lahf
and
mov
xchg
pop
push
xchg
dec
lret
or
stc
daa
pop
ret
mov
ja
ja
mov
imul
pushf
adc
mov
sbb
add
mov
ffree
outsb
lret
nop
add
add
xchg
xor
aad
std
inc
add
mov
insb
int3
jnp
add
mov
jb
mull
add
add
gs
dec
add
sahf
movsb
add
mov
jle
test
and
mov
outsl
imul
sub
pushf
mov
mov
out
pop
leave
ret
mov
sub
lock
mov
mov
and
add
jae
incl
sbb
add
lods
xor
xor
mov
adc
inc
add
add
mul
add
enter
push
cmp
in
mov
out
adc
add
add
movsb
add
lods
cli
xor
push
ljmp
mov
add
jo
add
add
inc
xlat
mov
inc
loope
lds
mov
add
xchg
cmp
add
mov
cmp
add
add
inc
insb
loopne
and
mov
add
mov
push
pusha
add
mov
gs
pop
test
push
imul
add
mov
add
pop
pop
shrl
mov
mov
jb
sar
pop
ds
push
add
hlt
add
xor
add
test
mov
add
lahf
add
mov
or
lods
pop
insb
out
inc
push
add
xchg
lea
ficoml
pop
jae
pop
inc
dec
or
cltd
pop
and
add
add
or
add
mov
cltd
jg
test
and
dec
or
ret
sub
jp
add
sahf
enter
add
add
xchg
fldcw
fcoms
xchg
adcl
daa
jmp
push
add
mov
call
cmpsl
in
lahf
inc
add
cmp
fisubs
pop
fistl
jle
add
xor
xchg
int
loop
mov
cmp
aam
or
sti
rolb
dec
in
dec
xchg
dec
ljmp
add
add
mov
lea
inc
repz
lock
sbb
mov
in
in
pop
icebp
xorl
push
leave
or
push
jp
push
add
insb
inc
stos
out
in
or
addb
add
and
imul
jno
popa
jle
lds
mov
filds
rolb
pop
mov
in
cmp
lds
xchg
addb
lret
mov
inc
add
loope
add
pop
pop
rolb
sub
jmp
add
add
xlat
and
add
mov
fists
add
push
add
push
movsb
add
adc
jge
addl
mov
cmp
cmc
rolb
bound
mov
push
add
add
cmp
mov
add
mov
add
xor
dec
test
sub
add
mov
repnz
add
push
add
add
xchg
sbb
outsl
std
sub
push
or
add
sub
add
xor
add
ljmp
jg
daa
loop
push
add
shll
mov
add
add
mov
lcall
push
or
mov
adc
out
dec
sar
push
add
add
xor
dec
ficoml
jg
add
addb
ja
xchg
ret
mov
or
aas
ret
pop
ds
add
add
add
addb
adc
inc
add
das
or
lock
add
jns
add
add
lock
add
xlat
sbb
nop
add
int3
xchg
lcall
mov
add
add
inc
add
mov
sbb
sub
mov
ret
arpl
std
dec
mov
dec
inc
add
sbb
add
add
pop
hlt
add
fwait
inc
daa
loop
stos
pop
and
mov
add
xlat
sbb
jge
sub
add
add
addr16
insb
lahf
ljmp
ja
les
and
loope
xor
add
out
xor
fsubrs
add
jo
and
mov
add
mov
lahf
addb
ja
inc
jp
add
lcall
out
add
aas
addb
fisttpl
xor
shll
and
mov
mov
or
mov
mov
lea
and
sub
fnstcw
fwait
pop
dec
scas
lret
sub
outsl
jnp
mov
inc
add
clc
mov
add
sbb
cli
xchg
rolb
leave
mov
add
sub
lahf
je
mov
xchg
test
xchg
xchg
xchg
sbb
scas
lcall
sub
add
push
fistl
lods
into
push
add
add
stos
adc
mov
pusha
add
sbb
add
call
xchg
loopne
lcall
add
shrl
imul
add
add
clc
lods
pop
fsubrs
cmp
add
fldt
testb
in
adc
cltd
pop
imul
cwtl
imull
dec
xchg
movb
add
push
mov
or
rolb
movb
loope
mov
adc
mov
jge
push
add
test
and
scas
push
add
add
xchg
add
add
mov
lock
add
sti
enter
mov
sti
incl
sub
xor
xchg
mov
add
inc
add
imul
int3
in
push
add
in
mov
test
add
xchg
add
add
arpl
adc
rolb
add
addb
inc
mov
add
fsubrl
nop
add
mov
cmp
jne
add
add
add
enter
push
cli
adc
add
mov
add
repz
push
outsb
cmp
and
lods
cmp
or
adc
jns
mov
cltd
les
dec
sbb
jnp
mov
add
add
hlt
add
popa
push
add
pop
mov
inc
testl
inc
add
push
mov
mov
xchg
xchg
add
fwait
or
insb
or
jecxz
ds
out
in
aad
test
xchg
rolb
mov
repz
lcall
add
mov
mov
jnp
movsl
jb
mov
add
add
add
inc
add
xor
add
add
popf
in
fsubp
add
add
add
or
dec
sbb
add
mov
add
inc
add
popf
pop
inc
add
testb
add
in
repz
movsb
add
lods
add
jb
inc
add
outsl
inc
insb
test
outsl
add
jne
test
dec
test
inc
add
popf
xor
aas
adc
push
loop
xor
inc
add
popf
int3
ja
jecxz
xor
or
add
mov
add
inc
add
mov
sbb
add
push
mov
add
mov
lcall
xor
mov
les
cmpsl
roll
add
xor
dec
inc
jnp
inc
add
add
mov
ds
and
call
mov
pop
or
add
mov
mov
int
addb
fbld
mov
add
add
mov
cld
das
rorl
sbb
out
add
cmp
add
mov
into
aaa
mov
test
push
rol
stos
data16
jnp
add
sub
ljmp
push
ljmp
add
or
lock
xchg
sbb
add
adc
in
aaa
mov
push
jns
jnp
rolb
add
mov
mov
ja
add
sub
jl
dec
push
add
xor
add
add
inc
add
add
pushf
and
mov
hlt
add
sub
out
xchg
add
rolb
add
out
add
inc
add
in
sahf
adc
cmp
rcll
sbb
pop
sbb
add
add
repz
dec
aas
roll
lcall
dec
js
add
inc
add
in
xchg
bound
mov
ret
outsl
lds
add
lock
inc
add
faddl
mov
sti
rorl
aad
pop
int3
adc
xchg
fiaddl
mov
jp
mov
mov
add
add
add
fs
ljmp
rcpps
or
or
add
in
out
cmp
or
add
gs
push
int3
add
xchg
cmp
ljmp
dec
add
pop
fwait
cmp
push
push
inc
test
pusha
add
adc
pop
xor
ret
loope
pop
les
lea
lea
add
mov
mov
add
add
mov
lods
push
add
pop
lock
push
add
add
jge
add
out
and
add
cmovg
cwtl
jae
add
mov
add
add
data16
test
xor
xor
sub
in
push
add
add
push
add
loopne
inc
mov
add
add
add
fidivrs
sbb
outsl
mov
push
add
movsl
inc
add
movsb
add
fldcw
add
notl
add
pop
add
je
adc
ljmp
enter
add
xlat
pop
jl
add
mov
ret
fmul
dec
inc
add
dec
fadds
add
add
dec
shll
add
add
popa
iret
popa
mov
adc
and
gs
rolb
lcall
fisttpl
dec
jno
inc
bt
sub
fdivs
xchg
add
inc
lds
inc
xlat
data16
daa
lods
or
jo
jns
shll
fldt
inc
inc
or
inc
add
pushf
mov
add
xor
testb
add
and
add
dec
cmp
xchg
ja
inc
lea
mov
add
add
push
add
jge
add
jb
add
mov
lcall
mov
add
jnp
add
addb
add
push
lret
sub
lahf
jns
mov
lcall
cmpsb
add
fnstenv
mov
stos
ljmp
add
add
mov
sahf
ret
pop
adc
lcall
and
mov
dec
xchg
add
mov
test
add
xchg
add
aad
add
add
and
mov
push
dec
je
dec
push
fidivs
leave
decb
dec
inc
add
jl
jl
aad
mov
add
popa
sub
bound
mov
ficoml
out
mov
cli
pop
dec
pop
into
enter
mov
test
data16
rolb
mov
je
add
mov
mov
or
jae
add
mov
stc
subl
push
xchg
pop
pop
fisubl
mov
repz
dec
fidivrl
or
add
adc
loop
popa
repz
rcl
stc
add
mov
add
mov
mov
jno
add
add
mov
or
push
std
rorl
adc
iret
mov
add
add
mov
sub
push
fsts
add
aaa
insb
aaa
leave
add
xor
in
js
nop
add
pop
jbe
push
add
stos
mov
pop
sbb
add
add
jne
ja
push
jg
add
add
fwait
dec
out
mov
sub
add
loope
jae
out
cmp
or
ljmp
xor
inc
add
lcall
arpl
loope
add
pop
sub
ja
add
iret
inc
add
mov
mov
add
mov
outsb
adc
mov
ret
lret
add
mov
add
sbb
xor
dec
inc
add
in
pop
add
cli
packuswb
add
sub
xor
iret
dec
enter
roll
add
sbb
mov
pop
mov
stc
imul
add
add
outsl
add
mov
movsb
add
add
mov
testb
add
rolb
in
cmp
add
pop
addr16
popf
or
add
push
jbe
mov
mov
cli
data16
lock
add
push
mov
add
test
add
add
add
mov
jl
aam
imul
movsl
dec
popa
in
add
ljmp
xchg
add
add
out
add
xchg
mov
addb
insb
frstor
add
bound
mov
cld
lods
lods
fimuls
push
add
push
add
addr16
aaa
xchg
jo
push
sahf
push
dec
sbb
jp
xchg
or
add
fidivrs
jp
mov
or
mov
mov
ficomps
cwtl
mov
add
add
stos
imul
sub
add
add
or
add
inc
aaa
push
pop
sbb
add
out
lods
fisubs
addb
add
addb
hlt
add
add
add
add
add
add
add
add
stc
test
cltd
inc
add
mov
fisubrl
imul
movsb
add
add
jbe
mov
aas
in
add
orl
mov
cmc
rolb
iret
pop
inc
mov
or
add
mov
aaa
jmp
pop
adc
movsl
push
sub
movb
mov
fisubrl
or
push
add
add
mov
push
add
add
add
mov
push
xchg
sub
in
data16
add
add
jge
pop
out
xchg
xchg
add
pop
clc
jg
xor
inc
add
add
pop
jge
add
pushf
lock
mov
mov
fcoml
je
pop
or
js
and
loopne
pop
cltd
ret
inc
inc
jg
add
ja
imul
pop
hlt
add
add
mov
mov
add
pop
push
add
add
mov
dec
sub
add
mov
add
lret
mov
imul
xchg
inc
xchg
mov
jns
dec
pop
add
mov
inc
rolb
ljmp
push
adc
pop
xchg
add
dec
inc
add
add
mov
add
add
mov
aad
imul
add
sahf
mov
mov
jmp
int
or
add
call
mov
add
jle
subl
je
in
sarl
add
and
pop
mov
imul
add
loopne
xor
out
fimuls
add
dec
xchg
add
stc
in
aad
mov
mov
add
jbe
pop
push
add
cld
pop
fimuls
add
mov
push
add
outsb
xchg
adcl
add
loope
mov
add
scas
insb
cli
inc
lds
add
dec
push
add
add
sbb
add
push
add
dec
inc
aam
addb
add
scas
sub
mov
add
add
xchg
add
add
cmp
mov
add
add
xchg
or
imul
add
xchg
push
xorl
roll
adc
addb
sub
add
mov
lods
fildl
mov
insb
in
and
mov
insb
adc
mov
ficoml
xchg
add
pusha
add
add
sti
in
xchg
and
push
add
pusha
add
movsb
add
add
add
mov
add
cmp
addb
testb
push
add
mov
pop
mov
into
ret
fistpl
out
sub
and
add
rcrl
add
inc
add
jmp
xor
sub
cmp
jne
add
add
sub
test
add
insb
or
add
dec
sub
out
mov
sub
xor
ja
fisubl
movb
mov
sub
test
enter
dec
sub
add
sbb
add
scas
test
fcomps
test
mov
sub
add
enter
jae
add
in
pop
dec
mov
rolb
lods
aaa
pop
add
lea
movsl
mov
lret
lret
addl
ds
xchg
outsb
ret
add
dec
jno
in
and
mov
add
addb
mov
add
mov
jp
add
out
cmp
add
mov
test
fmull
popa
mov
add
jmp
lret
sub
push
inc
cmp
lds
add
mov
dec
or
xchg
rolb
repz
cmp
add
xchg
pop
sub
pusha
add
cmp
mov
loop
or
add
add
adc
add
and
add
add
pushf
lahf
cmp
add
dec
push
mov
xor
in
and
mov
std
xlat
rcll
mov
nop
add
cmovp
loope
or
add
mov
aaa
scas
call
mov
xor
fcmovnb
int
add
movl
add
jge
scas
insb
pop
add
mov
addb
add
jg
add
pop
jno
xchg
or
iret
outsb
lods
mov
sbb
add
jno
fldt
xchg
mov
mov
push
add
xor
push
scas
in
sbb
add
add
add
lods
mov
add
pushf
xchg
cli
das
ds
dec
mov
xchg
add
mov
cmp
push
add
add
mov
fcomp
dec
cmc
mov
mov
add
cmp
jnp
xlat
mov
loope
sub
inc
test
int
add
cmp
add
addb
mov
lahf
stc
fnstcw
mov
sarl
mov
loop
sti
ret
je
mov
xchg
gs
sti
insl
int3
fisttps
add
inc
lds
je
mov
add
inc
add
add
insl
sbb
mov
test
mov
fwait
icebp
popa
dec
into
addb
add
inc
mov
xchg
push
std
call
add
lea
add
and
mov
add
dec
push
lods
enter
inc
mov
inc
or
push
scas
andl
dec
rolb
jl
enter
jmp
add
mov
adc
mov
rolb
cld
xchg
add
rcrl
scas
dec
push
pop
jle
mov
add
or
repnz
add
inc
jbe
out
lea
xor
push
add
mov
add
add
outsl
jle
repnz
std
adc
xlat
fisubl
add
dec
xlat
insl
movsb
add
cmp
lret
jecxz
lea
mov
adc
stos
xchg
add
mov
and
sbb
add
test
lahf
sub
xor
addb
cs
int
push
add
cs
mov
cmpsl
mov
shrl
daa
mov
xchg
sbb
add
pop
mov
stos
inc
add
mov
rorl
sub
pop
or
sarl
add
dec
jne
add
int3
pusha
add
jmp
add
aaa
movsl
repz
add
add
add
leave
and
repz
aaa
push
add
ljmp
add
push
and
add
add
xchg
outsl
mov
cld
out
fwait
add
cmp
add
add
mov
cmp
add
movb
mov
pop
xchg
push
add
icebp
or
add
movsl
mov
cmp
add
mov
cmp
sub
push
lea
mov
or
add
icebp
sub
add
add
add
ljmp
and
pop
sub
call
mov
add
scas
xchg
add
mov
call
mov
pusha
add
adc
add
mov
fucomip
cwtl
jbe
imul
add
call
and
jb
add
mov
imul
decb
add
adc
cwtl
test
add
add
lcall
fildl
pop
mov
movsb
add
add
aaa
xor
add
jae
xchg
cmpsb
add
sub
dec
cli
dec
addb
clc
sahf
addl
xchg
add
pop
rcll
pop
dec
jbe
mov
fildll
adc
imul
add
out
and
imul
dec
xlat
leave
jne
mov
andnps
fwait
adc
aad
pop
adc
add
add
inc
push
add
xchg
add
add
in
add
dec
dec
nop
add
ret
add
out
daa
add
mov
add
jo
pop
scas
mov
push
add
mov
aad
fisubl
test
into
sbb
push
bound
mov
mov
add
scas
ficompl
test
mov
push
inc
add
arpl
add
add
jmp
sbb
add
dec
mov
sarl
add
mov
pop
rorl
jle
adc
add
jmp
mov
cmp
stos
rolb
scas
enter
arpl
pushf
subl
add
mov
dec
loopne
jmp
add
add
mov
les
ret
jns
cmp
xorl
add
add
add
add
add
cmpsb
add
sbb
lods
xlat
lcall
pop
sbb
mov
mov
add
xor
test
mov
cli
xchg
add
sub
bound
mov
mov
inc
add
testl
icebp
sbb
push
add
lcall
ja
imul
arpl
movsb
add
scas
dec
add
mov
add
xor
add
mov
add
in
push
imul
int
add
add
add
mov
add
outsb
call
add
add
lods
push
add
ja
add
inc
xor
add
in
add
add
mov
iret
cmp
cs
popa
mov
data16
and
mov
fwait
and
and
bound
mov
adc
xor
jno
add
mov
add
cmp
jge
fmuls
pop
push
cs
and
jg
mov
jns
or
sub
mov
add
add
in
push
add
jb
cmp
fxtract
add
fbstp
inc
add
add
add
daa
fbstp
add
add
add
pop
test
incl
adc
out
and
sbb
addb
xchg
cmp
jbe
xor
jbe
and
mov
test
and
and
addb
in
inc
jg
add
outsb
jbe
rolb
sub
mov
aas
outsl
fistps
cmp
mov
cmp
icebp
and
pop
fwait
adc
cmp
dec
aam
in
cmp
add
xor
adc
jo
jne
fmul
push
sbb
inc
add
repnz
push
add
mov
add
popa
rolb
std
pop
jae
pop
out
lods
fbld
sbb
mov
cmp
out
movsl
jnp
inc
add
xchg
test
sub
jns
cmp
rolb
mov
push
add
add
int3
xchg
sub
add
jns
push
aas
mov
add
mov
loopne
mov
aad
iret
adc
fidivs
add
js
test
mov
fnstsw
mov
add
add
dec
cs
movsb
add
bound
mov
add
mov
push
data16
or
mov
sbb
add
mov
out
pop
daa
roll
rolb
dec
int
pop
test
stc
adcl
mov
or
push
sub
adcl
xchg
add
add
mov
add
in
and
mov
push
add
add
add
add
mov
dec
xlat
pop
into
mov
dec
or
aaa
jmp
rolb
aam
lret
add
add
fnsave
push
insl
movsb
add
leave
pop
push
add
sbb
cltd
xor
addb
ja
and
mov
xchg
mov
aaa
pusha
add
jb
add
js
insl
mov
add
lods
pusha
add
jg
xlat
movsl
cwtl
test
mov
bound
mov
xlat
lcall
add
mov
add
sub
mov
add
add
add
add
in
pop
or
add
movsb
add
testb
add
push
add
sbb
add
mov
inc
adc
mov
data16
add
imul
xor
movb
daa
testb
sub
insl
cmp
add
mov
fistpll
test
push
fidivs
add
push
int
cmp
pop
jnp
add
addb
and
dec
iret
out
pop
sub
pop
sub
mov
lods
fidivrs
or
sbb
add
cmp
or
inc
add
aaa
jl
add
add
mov
loopne
lcall
jno
mov
jbe
fsubr
jecxz
aad
loopne
mov
add
inc
add
add
dec
and
mov
pop
cld
jl
add
repnz
xchg
rorl
pop
dec
addb
xorl
add
mov
data16
add
xor
call
ret
cmp
into
aam
sub
xor
xchg
xor
pop
daa
fildl
cmp
cmp
add
add
add
mov
pop
pop
sub
add
add
mov
lods
cwtl
lods
xchg
add
mov
add
add
jmp
aad
jns
in
dec
testb
mov
add
dec
jle
add
mov
int
push
add
jmp
xchg
pop
rcr
xchg
lret
push
add
int
add
or
insl
int
add
addr16
mov
xlat
adc
aad
add
push
add
jb
sub
jnp
cs
outsl
les
ljmp
push
add
add
add
xor
and
mov
adc
xchg
add
jecxz
inc
sbb
adc
pop
sub
call
arpl
test
stc
xor
mov
inc
add
and
les
imul
test
xchg
cmpsl
pop
les
out
add
push
out
mov
add
and
pop
fcmovb
cmp
pop
mov
dec
cld
mov
rolb
pusha
add
adc
mov
add
mov
add
dec
jle
jne
add
or
cs
pop
fcmovnbe
mov
add
inc
popf
lods
add
inc
sbb
and
add
add
add
add
inc
mov
dec
stos
rolb
add
add
scas
icebp
push
in
inc
mov
cld
lods
icebp
aam
out
mov
rolb
rolb
out
lock
mov
xor
push
add
add
or
mov
push
aas
jecxz
out
pop
sbb
sbb
add
inc
in
jle
add
or
jns
add
push
mov
gs
dec
popa
stos
in
or
add
add
stos
iret
add
add
cmp
add
mov
insb
ds
hlt
add
add
add
add
cmc
lret
fidivrl
jg
mov
jecxz
les
dec
imul
add
pop
mov
jle
into
cli
push
lods
fs
add
jno
mov
lret
fwait
testb
std
pop
fcomps
addb
repz
movsb
add
add
adc
mov
dec
sbb
push
push
les
lock
mov
mov
dec
cmpsb
add
add
mov
mov
sti
sarl
dec
fdivrl
fsubr
pop
xor
add
lret
ds
inc
ljmp
sti
jg
dec
cmc
jg
add
add
pop
and
fistl
add
add
add
push
mov
jno
fstpl
mov
xor
sarl
mov
xchg
fsubl
sub
add
push
add
mov
in
jl
sbb
sti
or
aas
ret
outsb
out
sub
mov
add
mov
xor
int3
loop
je
lea
adc
and
xchg
pop
std
leave
or
pop
sbb
add
rep
fstpl
mov
add
add
add
rcl
add
arpl
pop
add
mov
jb
jns
add
das
push
add
cmp
pop
push
in
addb
out
test
dec
sbb
add
mov
add
mov
xor
movntq
into
lahf
jecxz
jmp
jnp
loopne
int
add
xorl
add
pop
mov
lods
dec
data16
push
lahf
lcall
les
call
mov
repnz
enter
int3
add
add
in
call
mov
fwait
add
mov
xor
xchg
inc
movsl
das
repnz
fistpll
movb
and
add
mov
jnp
or
xor
dec
sahf
testb
add
bound
mov
mov
lahf
add
imul
mov
ds
clc
shll
bound
mov
shll
rcrl
cmp
mov
mov
inc
dec
fbld
out
dec
xchg
add
add
push
jmp
add
pop
dec
mov
loope
mov
pop
mov
sub
add
add
mov
mov
lock
adc
inc
popf
fistl
push
add
add
mov
xchg
xchg
mov
add
mov
popf
pushf
sbb
or
cmp
test
mov
aaa
inc
add
jbe
hlt
add
mov
lds
imul
enter
jae
dec
sbb
mov
stos
jb
pop
adc
mov
daa
adc
push
add
addb
push
imul
cmc
sub
lcall
cli
xchg
add
out
add
jl
dec
push
add
lret
std
mov
addb
in
mov
rolb
push
add
mov
mov
lret
stos
ljmp
call
cli
mov
add
jae
lods
test
dec
jmp
mov
jge
add
rolb
in
data16
sbb
stos
mov
movsl
lea
push
xor
mov
rolb
jnp
add
push
add
add
and
jmp
sbb
addb
fwait
jp
add
testb
out
mov
movsb
add
bound
mov
inc
cmp
in
push
ret
cmp
add
xor
out
cs
add
push
cmpsb
add
pop
repnz
mov
insb
rolb
aad
sti
dec
mov
push
outsl
or
cld
ljmp
add
add
xor
enter
add
add
add
add
pop
cmp
add
decl
adc
jno
or
sbb
pop
adcl
fwait
mov
lea
push
push
add
add
dec
addr16
and
iret
add
pop
dec
push
push
add
add
add
mov
test
jl
add
mov
loop
ljmp
sbb
cmp
jo
js
ljmp
add
add
in
adc
add
sbb
add
add
movb
add
add
add
mov
jnp
or
dec
add
dec
dec
cmp
or
push
or
or
in
sti
push
add
or
xchg
ret
outsl
popf
cmpsl
test
ret
shll
pop
push
add
fxch
in
adc
add
jmp
add
arpl
inc
add
mov
int
inc
add
mov
add
add
test
mov
push
add
add
jae
loope
add
mov
cltd
and
mov
scas
arpl
and
mov
xor
add
add
sub
add
pushf
les
out
out
add
mov
mov
into
cmp
add
ret
adc
add
push
add
add
test
push
lea
add
add
sbb
call
leave
outsl
outsl
mov
jle
cmovl
add
call
dec
jg
xor
dec
add
add
data16
add
dec
or
mov
sub
inc
add
pusha
add
mov
add
mov
mov
test
leave
stos
fldenv
addb
add
push
add
iret
cmp
sbb
add
lods
cltd
lods
dec
imul
adc
or
jnp
adc
sbb
add
enter
ljmp
loopne
hlt
add
cmp
add
ja
add
in
jbe
lret
add
mov
mov
pop
stos
lret
add
movb
adc
movsb
add
add
push
add
aam
outsb
mov
fmuls
movb
push
outsl
push
cwtl
add
cltd
data16
scas
add
test
pop
adc
aad
stos
adc
add
jle
add
add
add
push
add
rolb
push
scas
cmc
jg
add
lret
cmp
push
arpl
push
add
xchg
scas
xchg
or
pop
inc
dec
pushf
sti
sbb
pop
add
mov
pop
addb
in
mov
add
mov
jg
mov
shrl
mov
and
mov
xchg
add
sbb
mov
aaa
movb
daa
mov
mov
dec
mov
pop
xchg
add
cmp
add
ja
add
adc
add
lcall
out
lret
cmc
andl
mov
call
int
add
stos
stos
push
add
mov
mov
sbb
add
arpl
movsb
add
and
loop
cmpsl
push
add
dec
outsl
add
add
add
ja
movsl
lds
lcall
pop
in
int
mov
rcll
mov
mov
add
add
loopne
aam
lret
add
leave
mov
add
sarl
mov
fst
mov
add
decl
add
test
add
and
mov
cli
or
sbb
jb
sub
add
push
add
cmc
xchg
jp
add
add
jle
dec
lahf
xchg
fidivrl
xor
outsb
sub
aaa
loop
and
enter
loopne
push
xor
pushl
rolb
test
add
stc
sub
jae
lods
mov
mov
add
add
add
fsubp
add
data16
mov
jae
add
add
cmp
test
jmp
scas
pop
daa
pop
pusha
add
jle
pop
mov
add
jp
dec
int3
and
mov
and
fists
test
or
add
add
add
and
mov
pusha
add
stc
push
add
add
rolb
adc
push
add
sub
cmp
add
stos
mov
pop
fldcw
dec
push
add
xlat
repz
mov
add
add
xor
movb
aaa
push
cmp
sub
pop
fxch
les
mov
push
add
cmp
jg
mov
mov
sti
js
daa
test
dec
sbb
dec
daa
je
cmpsl
mov
ret
jl
adc
or
jae
mov
jae
add
add
sub
sahf
pop
gs
sub
add
popa
std
les
mov
lock
or
xchg
mov
sbb
sbb
fdivrs
add
cwtl
out
int
cmpsb
add
add
and
fbld
lret
sbb
movl
notl
rcll
add
testl
dec
push
cmp
enter
sub
enter
mov
int3
dec
mov
jecxz
mov
adcl
push
adc
fbld
add
cltd
scas
lods
sti
inc
add
mov
ficomps
add
add
cmp
ret
adc
mov
sub
push
xchg
dec
cld
adc
add
mov
mov
outsl
arpl
movsb
add
push
add
stos
sbb
lcall
sahf
cltd
insl
ja
pop
leave
test
xchg
aad
add
xchg
add
jno
cltd
test
data16
mov
push
add
add
cmp
add
xchg
add
popa
push
rolb
mov
lea
lods
mov
dec
stos
add
add
movsb
add
mov
mov
pop
stc
jbe
dec
adc
add
dec
insl
loop
rolb
or
add
add
add
add
add
mov
sbb
add
in
add
add
add
inc
fidivrs
xor
jmp
add
add
jecxz
pusha
add
inc
add
repnz
jae
add
mov
repnz
jae
movsb
add
pop
testl
push
clc
repnz
jae
xchg
mov
add
mov
push
mov
xchg
ret
mov
add
push
push
mov
xchg
ret
add
movsb
or
ret
pop
lcall
and
add
add
mov
push
mov
xchg
ret
add
xor
add
insl
pusha
clc
repnz
jae
mov
and
xor
add
repnz
jae
mov
dec
push
mov
xchg
ret
add
fdivrl
adc
push
jae
popl
nop
jae
xlat
add
add
repz
loop
decb
test
add
clc
repnz
jae
dec
in
mov
pusha
fwait
cld
nop
jmp
add
mov
push
add
jae
ja
ret
jl
add
add
clc
repnz
jae
insl
add
and
push
push
mov
xchg
ret
add
jl
xor
jo
cmpsl
mov
push
loop
cld
nop
jmp
cmp
add
or
fwait
cld
nop
jmp
add
push
roll
cmc
add
add
clc
repnz
jae
ja
mov
add
clc
repnz
jae
add
add
add
sub
test
add
clc
repnz
jae
add
clc
repnz
jae
cmp
lods
or
xchg
cmc
int
dec
add
mov
xchg
ret
mov
lahf
pusha
clc
repnz
jae
rcr
xlat
cmc
roll
xor
mov
jle
je
sub
repnz
jae
add
sub
fwait
cld
nop
jmp
cmp
xlat
insb
add
mov
mul
stos
ret
clc
repnz
jae
add
adc
sub
pop
clc
repnz
jae
add
lods
add
add
cmp
adc
add
repnz
jae
add
add
add
jmp
stos
add
adc
push
mov
clc
repnz
jae
faddl
filds
push
in
arpl
add
add
sbb
clc
repnz
jae
shl
insl
add
push
add
clc
repnz
jae
add
mov
add
repnz
jae
add
ret
maxps
adc
add
add
in
roll
sahf
push
add
cmp
popa
add
cld
nop
jmp
lods
filds
rorl
add
push
clc
repnz
jae
xlat
mov
dec
cmp
mov
xchg
ret
jg
xor
sub
repnz
jae
insb
dec
and
dec
in
add
add
and
push
mov
xchg
ret
or
add
fmulp
cmpl
fwait
cld
nop
jmp
cmp
add
repnz
jae
or
add
nop
jae
add
adc
add
add
popa
add
repnz
jae
add
loope
hlt
add
decl
push
mov
xchg
ret
xchg
add
add
clc
repnz
jae
add
add
shrl
adcl
or
add
roll
add
push
mov
xchg
ret
inc
add
cmpl
fwait
cld
nop
jmp
add
or
add
add
fwait
cld
nop
jmp
add
fiadds
mov
xlat
mov
xchg
mov
fwait
cld
nop
jmp
out
fcoml
jbe
push
mov
xchg
ret
pop
or
add
dec
div
clc
repnz
jae
fdivrl
divl
add
xor
add
add
repnz
jae
add
add
add
sbb
add
fwait
cld
nop
jmp
add
add
jp
popa
add
repnz
jae
add
cmp
nop
jae
add
add
inc
sahf
adc
aam
fildll
rcll
jecxz
add
sahf
dec
pop
dec
ja
dec
add
fwait
cld
nop
jmp
insb
out
add
add
xor
repnz
jae
add
adc
pop
scas
jns
jbe
clc
repnz
jae
cmc
negl
add
dec
push
iret
inc
add
or
cmpsl
test
cmp
test
repnz
jae
inc
add
mov
mov
clc
repnz
jae
xor
cld
nop
jmp
add
add
jl
add
mov
mov
clc
repnz
jae
add
enter
add
add
add
add
fisubrs
add
nop
jmp
add
push
add
add
add
add
push
mov
xchg
ret
add
out
or
jmp
jae
cmp
add
add
xor
pop
push
push
mov
xchg
ret
fbstp
push
xchg
jl
fistl
in
loopne
add
add
add
dec
cmpsl
testl
push
mov
xchg
ret
scas
push
add
or
add
mov
xchg
ret
add
mov
in
insl
sbb
out
inc
add
dec
add
ret
mov
push
mov
xchg
ret
add
xor
push
adc
movl
mov
xchg
ret
add
add
lret
and
repnz
jae
add
add
test
repnz
jae
add
xchg
jnp
adc
inc
add
or
add
nop
jmp
push
pop
cmc
add
cmp
call
mov
shr
fwait
cld
nop
jmp
lods
lods
add
add
nop
add
addr16
rep
clc
repnz
jae
xor
xor
scas
add
or
jg
add
add
insl
add
add
dec
sahf
add
lods
dec
in
pop
pushl
push
mov
xchg
ret
add
lods
xor
test
lret
mov
clc
repnz
jae
dec
xor
mov
mov
clc
repnz
jae
add
pop
add
adc
add
repnz
jae
out
call
push
clc
repnz
jae
scas
add
add
cmp
add
test
add
clc
repnz
jae
add
sar
push
mov
xchg
ret
add
add
mov
push
jno
mov
push
mov
xchg
ret
push
add
mov
stos
jne
clc
repnz
jae
add
ret
push
clc
repnz
jae
add
roll
scas
pop
add
sbb
repnz
jae
add
add
fadd
in
in
testb
jmp
add
add
add
push
xor
ret
imul
nop
jae
add
dec
add
add
inc
cmc
lsl
clc
repnz
jae
xor
add
ret
lods
clc
repnz
jae
inc
mov
add
mov
fwait
cld
nop
jmp
sarl
fsubrl
fwait
cld
nop
jmp
xor
add
mov
xor
clc
repnz
jae
add
add
xchg
push
add
xchg
fwait
cld
nop
jmp
out
add
shrb
mov
repnz
jae
lods
ds
add
add
clc
repnz
jae
out
cmc
jle
add
mov
push
mov
xlat
and
add
adc
add
insb
movsb
roll
push
mov
adc
repnz
jae
add
jl
add
cld
nop
jmp
add
in
push
pop
add
clc
repnz
jae
add
dec
add
push
push
clc
repnz
jae
add
add
scas
add
add
push
clc
repnz
jae
cmc
add
jle
add
xor
dec
xchg
clc
repnz
jae
mov
fdivl
jne
fwait
cld
nop
jmp
in
and
and
push
mov
xchg
ret
add
add
add
mov
fwait
cld
nop
jmp
jg
xchg
mov
and
pop
push
clc
repnz
jae
add
xchg
adc
or
int3
movswl
clc
repnz
jae
add
add
inc
push
iret
pop
clc
repnz
jae
and
add
push
add
xlat
pop
gs
pusha
clc
repnz
jae
jle
add
lods
roll
cmp
je
fwait
cld
nop
jmp
dec
add
add
add
mov
mov
clc
repnz
jae
mov
add
add
insb
push
clc
repnz
jae
xchg
add
faddl
add
add
cld
nop
jmp
xchg
mov
add
in
xor
pop
rep
clc
repnz
jae
xlat
xor
xor
push
cs
clc
repnz
jae
in
dec
add
jle
lods
jge
fwait
cld
nop
jmp
add
insl
pop
lods
mov
repnz
jae
xlat
add
mov
jne
clc
repnz
jae
in
lods
add
add
incl
fwait
cld
nop
jmp
add
out
ja
js
movb
repnz
jae
add
sub
add
pop
add
clc
repnz
jae
adc
add
clc
repnz
jae
rcll
ret
fstpt
clc
repnz
jae
stos
add
cld
nop
jmp
pop
stos
dec
add
xor
add
into
add
fwait
cld
nop
jmp
cmp
add
add
pop
jb
xor
insb
cmp
fwait
cld
nop
jmp
add
dec
add
sub
sub
add
ret
dec
pop
mov
add
mov
xchg
ret
or
add
and
les
out
inc
pop
pop
push
mov
xchg
ret
add
cmp
add
mov
mov
xchg
ret
add
inc
mov
cmp
fwait
cld
nop
jmp
add
or
mov
sbb
cld
nop
jmp
add
add
stos
add
in
je
clc
repnz
jae
xor
add
fwait
cld
nop
jmp
add
filds
xchg
mov
call
clc
repnz
jae
add
insb
add
call
and
add
nop
add
das
shl
clc
repnz
jae
shrl
add
clc
repnz
jae
add
dec
dec
fidivrs
add
mov
mov
into
inc
add
mov
mov
and
push
mov
xchg
ret
dec
mov
add
or
repnz
jae
add
filds
add
add
dec
add
repnz
jae
mov
lods
add
mov
nop
jae
scas
pop
add
fimuls
xor
scas
enter
jae
add
and
add
jbe
clc
repnz
jae
add
or
push
add
mov
push
mov
xchg
ret
add
add
cmp
test
push
add
clc
repnz
jae
cmp
fwait
cld
nop
jmp
in
insl
add
scas
mov
add
add
push
mov
xchg
ret
add
sub
clc
repnz
jae
insb
add
clc
repnz
jae
add
or
xor
add
clc
repnz
jae
sahf
add
jl
push
clc
repnz
jae
pop
add
add
lret
fwait
cld
nop
jmp
fiadds
xchg
adc
ja
mov
repnz
jae
add
call
add
mov
popa
movsb
add
je
mov
popa
clc
repnz
jae
stos
add
add
push
inc
lods
sub
jae
add
push
xor
dec
add
lea
nop
jae
and
add
push
sarl
push
mov
xchg
ret
ja
add
dec
xor
mov
or
clc
repnz
jae
mov
add
jae
clc
repnz
jae
lods
add
dec
movb
add
clc
repnz
jae
cmp
add
push
add
cmpl
fwait
cld
nop
jmp
lods
rolb
and
fstps
cld
nop
jmp
mov
add
add
ds
adc
stos
push
clc
repnz
jae
fcoml
add
add
jae
add
xor
es
mov
fwait
cld
nop
jmp
add
add
clc
repnz
jae
add
push
xor
xchg
add
popa
cmp
cmp
cmp
ret
out
add
scas
add
addb
inc
add
repnz
jae
add
add
sub
or
add
fsubrl
adc
cmc
mov
repnz
jae
sub
mov
push
add
mov
clc
repnz
jae
roll
movsb
int
popf
sbb
add
or
xlat
faddl
icebp
sbb
add
clc
repnz
jae
add
sahf
jge
clc
repnz
jae
jl
push
or
pop
add
push
push
mov
xchg
ret
ret
add
add
pop
mov
clc
repnz
jae
add
add
mov
or
mov
xchg
ret
and
add
add
rcrb
add
add
rorl
push
fwait
cld
nop
jmp
cmp
push
and
inc
fisubrl
inc
and
cld
nop
jmp
push
add
mov
fwait
cld
nop
jmp
add
mov
or
sub
repnz
jae
lods
insb
and
add
int3
call
clc
repnz
jae
add
pop
clc
repnz
jae
pop
add
or
push
lods
jecxz
add
add
inc
cmp
mov
xchg
ret
add
add
sahf
dec
inc
push
mov
xchg
ret
sahf
add
jle
add
insl
xor
push
mov
xchg
ret
fcoml
add
mov
clc
repnz
jae
faddl
dec
fistpll
orl
push
js
repnz
jae
rolb
add
repnz
jae
add
mov
inc
daa
pop
add
clc
repnz
jae
inc
insb
add
pop
out
and
mov
xchg
ret
movsb
fcoml
add
xchg
cld
mov
clc
repnz
jae
lods
testl
push
push
mov
xchg
ret
add
add
clc
repnz
jae
add
fmull
pop
add
push
push
mov
xchg
ret
ret
cmp
movsb
push
mov
xchg
ret
in
or
fiadds
aas
pushl
fwait
cld
nop
jmp
pop
add
jg
pop
faddl
nop
jmp
add
add
clc
repnz
jae
add
add
lods
add
add
cmp
cld
nop
jmp
dec
or
or
add
add
push
mov
xchg
ret
ja
add
add
inc
test
cld
nop
jmp
add
ds
pop
clc
repnz
jae
and
add
rolb
add
add
mov
push
mov
mov
add
ds
pop
daa
sub
mov
clc
repnz
jae
testl
jne
ja
dec
call
clc
repnz
jae
cmp
roll
lock
cmp
fwait
cld
nop
jmp
inc
add
add
add
mov
loopne
clc
repnz
jae
add
add
fimuls
rorl
jmp
add
insb
jle
cmp
add
push
fwait
cld
nop
jmp
and
add
add
mov
clc
repnz
jae
adc
sub
jg
call
repnz
jae
add
add
push
jl
add
push
sub
icebp
call
cmp
mov
subl
fwait
cld
nop
jmp
dec
insl
lods
add
and
clc
repnz
jae
add
mov
xchg
ret
add
add
xlat
add
push
add
rolb
xchg
ret
add
fmull
fdivrl
and
mov
add
mov
push
mov
xchg
ret
push
add
pop
add
fwait
cld
nop
jmp
fmull
add
pop
push
mov
xchg
ret
add
add
add
mov
xchg
ret
add
add
dec
mov
push
mov
xchg
ret
add
not
push
mov
xchg
ret
lods
sahf
ret
add
add
add
fwait
cld
nop
jmp
add
in
dec
jl
push
add
sub
repnz
jae
add
rorl
add
adc
add
adc
adc
clc
repnz
jae
dec
call
add
fwait
cld
nop
jmp
add
movsb
ds
out
popa
add
nop
jmp
xor
cmp
add
and
mov
ljmp
jg
in
and
mov
in
cld
nop
jmp
add
add
add
shrb
add
repnz
jae
add
xchg
in
add
repnz
add
jmp
roll
cmp
cmp
add
lods
pop
mov
clc
repnz
jae
scas
mov
add
add
jbe
xchg
add
add
clc
repnz
jae
add
add
add
add
add
mov
xchg
mov
lret
cld
nop
jmp
add
add
sub
fdivrl
add
pop
rolb
xchg
ret
sub
adc
mov
clc
repnz
jae
push
add
sbb
mov
xchg
ret
add
add
lods
add
mov
and
fwait
cld
nop
jmp
add
add
add
jecxz
add
add
clc
repnz
jae
xor
mov
xor
fwait
cld
nop
jmp
mov
add
add
cmpl
fwait
cld
nop
jmp
add
push
mov
clc
repnz
jae
dec
xchg
add
add
pusha
add
roll
xorl
add
add
pop
cmp
xchg
pop
mov
nop
jae
add
add
or
add
in
add
test
scas
add
rcr
jle
jno
mov
clc
repnz
jae
add
mov
push
mov
xchg
ret
sub
add
imul
fildl
xchg
ret
pop
add
add
pop
fwait
cld
nop
jmp
add
ret
pushf
call
fwait
cld
nop
jmp
add
xor
fwait
cld
nop
jmp
or
mov
mov
clc
repnz
jae
lods
add
add
mov
push
mov
xchg
ret
add
add
add
jae
dec
add
rolb
add
add
add
int
add
add
add
mov
push
movzwl
push
mov
xchg
ret
push
xchg
mov
cld
nop
jmp
add
ja
lods
mov
add
mov
clc
repnz
jae
lods
roll
push
cmp
es
add
fwait
cld
nop
jmp
add
leave
call
clc
repnz
jae
faddl
stos
fidivrs
mov
adc
repnz
jae
add
or
arpl
add
repnz
jae
mov
mov
add
nop
jae
ds
mov
pop
in
call
clc
repnz
jae
xchg
add
movsb
cmc
dec
push
clc
repnz
jae
insb
ds
in
xlat
and
add
push
adc
add
mov
add
mov
clc
repnz
jae
add
mov
imul
adc
cld
nop
jmp
add
adc
pop
push
push
mov
xchg
ret
dec
or
stos
pop
cmc
add
shl
fwait
cld
nop
jmp
add
add
cs
fwait
cld
nop
jmp
fiadds
mov
pop
mov
pop
add
clc
repnz
jae
out
add
add
push
mov
xchg
ret
ds
pusha
clc
repnz
jae
faddl
ja
scas
cmp
xchg
aam
leave
and
push
mov
xchg
ret
add
add
add
repnz
jae
dec
mov
lock
insl
mov
clc
repnz
jae
add
xchg
sahf
movsb
add
mov
jmp
roll
add
add
ds
add
mov
clc
repnz
jae
push
push
add
add
test
mov
inc
add
add
in
and
add
fwait
cld
nop
jmp
xchg
add
mov
add
repnz
jae
mov
insl
rolb
pusha
clc
repnz
jae
movsb
cmp
movsb
insb
je
clc
repnz
jae
add
add
push
mov
add
jnp
add
inc
sub
push
add
sub
fwait
cld
nop
jmp
mov
ja
mull
add
hlt
roll
xchg
ret
faddl
and
jl
and
mov
push
mov
xchg
ret
or
add
add
repnz
jae
scas
or
cmp
add
pop
subl
clc
repnz
jae
add
decb
lret
inc
add
add
cmp
add
mov
int3
adc
add
repnz
jae
add
dec
add
add
repnz
jae
inc
add
add
add
add
fwait
cld
nop
jmp
stos
add
pop
xor
shl
lret
push
push
mov
xchg
ret
xor
add
fdivl
mov
repnz
jae
mov
dec
sub
cmp
inc
add
or
add
scas
push
push
mov
xchg
ret
add
and
add
in
push
push
mov
xchg
ret
add
mov
xor
add
out
inc
add
add
or
lret
inc
add
add
or
add
cld
nop
jmp
add
or
add
sub
clc
repnz
jae
add
fsub
add
int
je
repnz
jae
add
jl
dec
pop
push
mov
xchg
ret
add
add
jp
jge
clc
repnz
jae
cmp
add
ds
je
clc
repnz
jae
xchg
add
add
mov
add
sbb
repnz
jae
add
cmc
jg
add
push
add
add
repnz
jae
shrl
xor
repnz
jae
xor
lods
and
sahf
or
nop
jae
sahf
xlat
imull
rclb
hlt
inc
add
add
ffreep
dec
xor
fwait
cld
nop
jmp
add
add
jecxz
add
and
add
add
in
out
mov
clc
repnz
jae
add
add
pop
xor
test
push
mov
xchg
ret
filds
add
mov
add
repnz
jae
cmp
sbb
clc
repnz
jae
xchg
or
add
push
add
mov
clc
repnz
jae
add
add
sahf
add
mov
add
movzwl
clc
repnz
jae
mov
std
push
clc
repnz
jae
or
xor
add
test
add
filds
mov
xchg
add
mov
clc
repnz
jae
or
fwait
cld
nop
jmp
add
add
add
pop
lods
jne
clc
repnz
jae
jle
add
jne
clc
repnz
jae
add
push
clc
repnz
jae
mov
add
add
test
repnz
jae
in
add
inc
flds
nop
jae
add
add
mov
clc
repnz
jae
pop
stos
add
add
add
repnz
jae
add
add
add
add
inc
add
mov
fistl
mov
xchg
ret
add
xor
scas
pop
adc
mov
fwait
cld
nop
jmp
add
shrl
mov
fwait
cld
nop
jmp
add
dec
jmp
add
add
jl
lods
adc
xchg
pop
add
inc
fwait
push
push
mov
xchg
ret
push
shlb
in
add
pop
push
mov
xchg
ret
add
ret
test
fwait
cld
nop
jmp
xchg
add
add
inc
add
mov
xchg
ret
add
pop
rcr
ret
addb
push
push
mov
xchg
ret
mov
stos
call
add
xor
std
lcall
icebp
push
add
dec
rclb
in
add
mov
add
outsl
popa
fs
repnz
jae
add
inc
call
inc
add
dec
call
repz
repnz
jae
push
insb
jg
add
fwait
cld
nop
jmp
jle
add
mov
dec
push
mov
xchg
ret
sub
or
mov
clc
repnz
jae
stos
cmp
pop
insl
add
add
add
repnz
jae
add
xlat
movsl
leave
push
push
mov
xchg
ret
add
ja
add
lds
movb
add
cmp
repnz
jae
add
pusha
add
gs
repnz
jae
faddl
pop
ja
push
clc
repnz
jae
add
add
add
add
add
add
repnz
jae
add
xchg
cmp
add
clc
repnz
jae
xchg
xor
add
add
adc
repnz
jae
pop
call
mov
xchg
add
or
cld
nop
jmp
add
ja
repz
push
add
push
clc
repnz
jae
add
xor
cmc
cmp
add
mov
add
repnz
jae
scas
dec
roll
xor
clc
repnz
jae
in
rorl
mov
add
push
clc
repnz
jae
add
insb
add
nop
jmp
add
pop
ja
add
add
mov
fwait
cld
nop
jmp
add
jle
inc
add
repnz
jae
in
add
add
add
clc
repnz
jae
insb
mov
xchg
movsb
sub
nop
jae
fistpll
push
mov
nop
jae
pop
mov
dec
add
pusha
add
mov
clc
repnz
jae
add
add
pop
mov
repnz
jae
ja
add
out
add
mov
mov
xchg
ret
add
add
add
add
repnz
jae
mov
add
mov
fwait
cld
nop
jmp
add
add
cmp
out
push
or
clc
repnz
jae
roll
add
mov
mov
clc
repnz
jae
push
xor
nop
jae
add
mov
insl
inc
add
mov
push
mov
xchg
ret
in
insb
add
imul
add
add
or
push
add
add
insl
push
add
jecxz
push
add
add
clc
repnz
jae
jl
fcoml
add
push
clc
repnz
jae
add
dec
push
mov
jbe
mov
cld
nop
jmp
add
rolb
add
nop
jae
call
cmp
jnp
mov
mov
pop
outsl
add
add
pop
add
sbb
jg
clc
repnz
jae
jg
movsb
add
cmp
test
in
clc
repnz
jae
lods
dec
dec
inc
add
movsb
push
mov
xchg
ret
roll
cmc
add
push
mov
clc
repnz
jae
add
filds
mov
add
add
repnz
jae
add
add
push
mov
xchg
ret
push
lods
mov
clc
repnz
jae
add
add
dec
mov
add
mov
clc
repnz
jae
add
add
pop
sub
les
repnz
jae
or
push
add
push
xor
or
cli
incl
mov
movsb
lock
clc
repnz
jae
add
fmul
mov
push
mov
xchg
ret
sub
add
fcomip
add
mov
fwait
cld
nop
jmp
add
add
xlat
addb
add
dec
adc
movsb
loop
add
add
dec
pushl
clc
repnz
jae
xchg
push
add
add
xchg
mov
add
mov
add
fwait
cld
nop
jmp
add
scas
add
fbld
mov
inc
add
add
in
add
xlat
movsl
dec
lea
clc
repnz
jae
add
ret
add
repnz
jae
sub
add
add
pop
addb
add
add
clc
repnz
jae
ret
add
inc
dec
mov
clc
repnz
jae
scas
mov
jbe
jnp
clc
repnz
jae
add
add
dec
sub
push
mov
xchg
ret
xor
jle
add
push
rcrl
xor
clc
repnz
jae
inc
pop
add
add
mov
clc
repnz
jae
add
dec
dec
add
fmull
add
clc
repnz
jae
cmp
add
pop
lds
add
fwait
cld
nop
jmp
add
add
outsl
loopne
mov
xchg
ret
add
add
mov
xchg
ret
add
add
nop
jmp
or
add
add
xor
add
mov
add
clc
repnz
jae
and
fsubr
or
xbegin
mov
jle
insl
cmc
pop
add
nop
jae
pop
pop
add
fiadds
ja
call
fwait
cld
nop
jmp
fiadds
add
mov
cld
nop
jmp
stos
add
add
add
add
rcrb
repnz
jae
insl
add
add
ret
pop
ret
clc
repnz
jae
add
add
bound
mov
fwait
cld
nop
jmp
pop
add
faddl
xor
pop
dec
js
clc
repnz
jae
mov
add
add
and
and
clc
repnz
jae
pop
mov
add
mov
clc
repnz
jae
add
push
inc
ret
popa
add
push
push
add
mov
xchg
ret
jle
cmp
add
mov
fwait
cld
nop
jmp
stos
add
shl
xchg
mov
add
icebp
push
add
sub
add
movswl
clc
repnz
jae
out
add
movsb
sbb
test
clc
repnz
jae
push
mov
mov
fwait
cld
nop
jmp
add
cmp
fwait
cld
nop
jmp
ret
cmp
in
mov
fwait
cld
nop
jmp
push
cmp
ljmp
add
repnz
jae
add
insb
push
fwait
cld
nop
jmp
dec
mov
xlat
xor
aas
idiv
incl
jle
stos
add
add
ds
add
sti
mov
clc
repnz
jae
cmp
add
and
mov
add
repnz
jae
and
push
lea
mov
add
add
dec
cmp
insl
stos
sarl
add
nop
jae
mov
add
sub
flds
xchg
ret
scas
movsb
add
add
stc
clc
repnz
jae
xlat
add
add
mov
repnz
jae
inc
add
add
add
fwait
cld
nop
jmp
xor
cmp
ret
dec
add
push
mov
xchg
ret
xor
add
add
and
push
fwait
cld
nop
jmp
add
movsb
ret
add
lods
pop
push
clc
repnz
jae
cmp
pop
insl
add
add
mov
clc
repnz
jae
xor
add
test
clc
repnz
jae
cmp
insl
xchg
add
popa
add
mov
xchg
ret
fists
add
sbb
cmp
repnz
jae
jle
add
inc
leave
lods
clc
repnz
jae
add
rclb
jne
push
mov
xchg
ret
add
jle
ds
sub
clc
repnz
jae
cmp
loope
popa
fwait
cld
nop
jmp
ja
movsb
xor
add
mov
push
mov
xchg
ret
add
pop
add
add
outsl
push
mov
adc
add
add
test
add
nop
jae
add
xor
or
nop
jae
adc
mov
add
mov
mov
jl
movsb
clc
repnz
jae
add
sahf
pop
mov
add
push
mov
xchg
ret
add
add
or
mov
mov
xchg
ret
insl
push
add
add
clc
repnz
jae
insb
add
add
mov
clc
repnz
jae
add
mov
clc
dec
push
mov
xchg
ret
pop
xchg
add
mov
mov
clc
repnz
jae
or
inc
daa
bound
mov
mov
push
mov
xchg
ret
add
pop
add
xor
cwtl
add
push
mov
xchg
ret
dec
add
add
cmp
fwait
cld
nop
jmp
movsb
add
add
lods
add
repnz
jae
xor
or
loop
fwait
cld
nop
jmp
add
fsubl
add
mov
clc
repnz
jae
and
and
dec
xlat
hlt
add
jge
clc
repnz
jae
lods
add
xor
pop
mov
clc
repnz
jae
add
add
sar
mov
push
mov
xchg
ret
stos
add
add
mov
add
add
repnz
jae
add
clc
repnz
jae
mov
ja
add
add
jns
mov
clc
repnz
jae
in
cmp
mov
xchg
ret
mov
faddl
jmp
xlat
inc
add
cmp
fiadds
and
push
das
push
fwait
cld
nop
jmp
cmp
add
pop
roll
xlat
das
push
clc
repnz
jae
add
stos
add
and
add
mov
xor
jae
xor
and
repnz
jae
add
add
add
imul
fdivr
incl
faddl
add
mov
xchg
ret
sahf
add
add
rorb
inc
push
mov
xchg
ret
xor
cmc
xor
xor
add
nop
jmp
jle
add
xor
lods
xor
clc
repnz
jae
scas
xor
add
filds
mov
xchg
filds
sti
push
mov
xchg
ret
add
add
cmp
sahf
jmp
add
add
pop
add
stos
push
clc
repnz
jae
dec
push
add
push
sub
test
add
clc
repnz
jae
add
pop
jae
mov
xor
fwait
cld
nop
jmp
add
add
and
add
mov
xchg
add
push
imul
nop
jae
xor
ret
add
jmp
xor
add
inc
or
repnz
jae
cmp
and
clc
repnz
jae
call
cmp
aas
cmpw
fwait
cld
nop
jmp
lods
xlat
or
out
cmpw
fwait
cld
nop
jmp
mov
cmpsl
dec
mov
push
mov
xchg
ret
mov
out
jecxz
js
add
clc
repnz
jae
fdivl
pop
add
in
mov
clc
repnz
jae
jg
and
add
add
add
cld
nop
jmp
add
add
add
call
fwait
cld
nop
jmp
push
mov
add
les
or
add
lock
incl
add
add
clc
repnz
jae
ret
or
insb
mov
clc
repnz
jae
or
dec
add
movzwl
clc
repnz
jae
call
cs
push
mov
xchg
ret
shl
add
add
xor
lret
pop
clc
repnz
jae
add
add
add
add
gs
popf
je
clc
repnz
jae
add
add
in
add
sahf
xor
sahf
cmc
js
loope
repnz
jae
lods
mov
lods
les
ret
shrl
push
mov
xchg
ret
negl
add
rolb
and
fwait
cld
nop
jmp
stos
add
in
call
clc
repnz
jae
add
add
add
jae
faddl
movsb
xlat
and
clc
push
mov
xchg
ret
sahf
cmp
add
add
dec
push
mov
lret
add
add
clc
mov
sub
lahf
mov
clc
repnz
jae
add
loope
add
add
hlt
add
nop
add
add
repnz
jae
cmp
pop
lods
add
imul
fwait
cld
nop
jmp
xor
fiadds
in
ret
pop
fwait
cld
nop
jmp
adc
mov
add
cmc
add
dec
lods
add
xchg
add
jle
add
push
insl
push
add
sub
xlat
inc
add
add
xchg
ja
scas
je
fwait
cld
nop
jmp
add
mov
ret
clc
repnz
jae
xor
add
pop
add
stos
push
mov
xchg
ret
filds
add
add
add
mov
jmp
scas
add
add
shll
lock
push
fwait
cld
nop
jmp
dec
movsb
rclb
pop
push
clc
repnz
jae
push
cmp
scas
add
insl
cmp
cmpl
mov
mov
adc
out
cmc
or
mov
fwait
cld
nop
jmp
add
cmp
mov
xchg
ret
pop
cmp
and
cmp
add
je
hlt
add
inc
push
mov
xchg
ret
dec
shll
add
jmp
add
add
rcr
cmpl
add
add
repnz
jae
ret
push
push
mov
xchg
ret
insl
xchg
push
pop
in
and
lea
fwait
cld
nop
jmp
add
push
or
add
cwtl
mov
clc
repnz
jae
faddl
mov
cmp
push
mov
xchg
ret
mov
dec
add
add
and
mov
add
clc
repnz
jae
sub
fbld
xor
add
clc
repnz
jae
jg
sahf
mov
clc
repnz
jae
roll
add
fadds
jb
clc
repnz
jae
add
add
add
push
mov
xchg
ret
inc
in
cmc
and
add
jae
mov
clc
repnz
jae
in
or
and
test
fwait
cld
nop
jmp
add
push
insl
cmp
dec
sbb
nop
jae
add
add
add
inc
dec
pop
jne
clc
repnz
jae
add
xchg
fsubrp
and
clc
repnz
jae
add
add
mov
in
add
repnz
jae
xor
add
repz
repnz
jae
add
push
adc
mov
push
push
mov
xchg
ret
add
add
mov
cs
cld
nop
jmp
or
add
dec
cmp
dec
out
inc
add
add
xor
stos
jge
jl
and
and
inc
add
add
add
fwait
cld
nop
jmp
mov
add
scas
mov
xor
ret
out
push
push
mov
xchg
ret
add
sub
dec
push
mov
xchg
ret
push
pop
add
add
rep
and
fwait
cld
nop
jmp
call
cmp
add
clc
repnz
jae
add
add
mov
lds
and
repnz
jae
add
add
add
data16
add
clc
repnz
jae
or
xchg
add
add
ljmp
fwait
sbb
bt
rep
clc
repnz
jae
mov
and
fisttpl
nop
jae
add
repz
push
faddl
xchg
ret
mov
pop
or
in
add
add
lods
sub
fisubrs
add
push
fwait
cld
nop
jmp
mov
jg
add
add
push
mov
xchg
ret
add
cld
nop
jmp
shll
filds
push
xorl
mov
sub
xor
add
clc
repnz
jae
add
xchg
in
test
fwait
cld
nop
jmp
cmc
add
lods
add
xchg
pop
clc
repnz
jae
mov
xchg
sarl
xor
clc
repnz
jae
fisttps
lods
add
jne
or
jmp
add
add
add
clc
repnz
jae
add
add
cwtl
rep
clc
repnz
jae
sahf
cmp
add
add
cld
nop
jmp
add
push
roll
add
push
mov
xchg
ret
xlat
ffreep
add
faddl
or
jnp
incl
add
add
rolb
add
add
lea
test
clc
repnz
jae
xlat
xlat
add
add
jmp
add
add
add
adc
add
push
mov
jb
mov
push
pop
sub
mov
fs
xor
cwtl
cmp
add
mov
xor
sub
pop
jae
dec
outsb
jl
ja
fneni(8087
add
cmc
mov
pushf
pop
scas
xor
xchg
add
daa
stos
push
add
add
jo
mov
sbb
add
das
fidivrs
push
popf
cmpsb
add
fldcw
aaa
mov
lock
out
cmp
scas
out
repz
lcall
and
inc
cli
in
and
add
push
add
add
add
add
add
clc
jmp
or
mov
push
hlt
add
cs
add
jnp
and
addb
pop
mov
addb
jb
out
mov
jle
rcll
dec
and
imul
inc
add
add
mov
dec
rcll
add
add
bound
mov
jb
adc
fcmovb
add
sub
call
cmp
insb
sbb
fwait
scas
push
add
xchg
cltd
inc
jecxz
in
cs
add
mov
mov
add
mov
mov
shll
add
int3
idivl
lahf
pusha
add
add
mov
sbb
icebp
mov
sahf
add
andl
mov
add
mov
fstpl
stc
and
adc
mov
mov
out
imul
mov
in
jo
dec
aad
add
sbb
add
add
inc
xor
sub
stos
cltd
pop
sub
push
add
out
out
testb
insl
jno
mov
add
fwait
and
mov
add
mov
popf
push
add
mov
inc
add
add
adc
add
jmp
loopne
sbb
mov
add
add
inc
add
add
mov
cmp
jb
test
scas
mov
das
cli
out
lret
and
mov
jmp
addb
addb
aaa
xor
add
inc
aas
xchg
inc
daa
mov
call
popa
mov
push
jb
cmp
mov
lcall
enter
adc
add
pop
loop
add
dec
and
clc
xlat
push
out
push
add
andl
mov
jns
add
add
inc
add
mov
out
push
add
add
dec
dec
fidivrs
sarl
adc
inc
add
add
mov
cmp
add
adc
arpl
fcoml
leave
sbb
dec
repnz
mov
add
aaa
das
xor
mov
or
mov
cmc
and
add
add
aam
data16
add
test
push
add
dec
inc
add
lock
cwtl
ret
jae
ret
lahf
imul
mov
mov
bound
mov
and
mov
jecxz
mov
pusha
add
adc
add
add
add
mov
add
add
sbb
lock
insl
dec
sbb
ret
mov
add
movsb
add
add
jo
aam
push
add
out
push
add
mov
jnp
stos
cmpsl
jbe
loop
mov
std
mov
into
sub
add
inc
in
addb
sbb
sbb
jbe
mov
testb
add
sti
push
add
iret
jle
jbe
rcll
lahf
inc
add
and
mov
jb
bound
mov
add
mov
stos
dec
inc
pop
loop
jb
std
push
xchg
lods
xor
mov
adc
add
jge
xor
aam
out
mov
arpl
sarl
mov
mov
add
xchg
test
mov
add
ret
sub
inc
popf
fs
add
cli
bound
mov
pop
sbb
mov
cld
xchg
add
add
xor
scas
bound
mov
lcall
sbb
repnz
pop
fisubrl
jmp
lea
add
add
nop
add
gs
add
mov
test
pop
mov
int3
mov
mov
pushf
or
xor
int3
xor
add
test
add
xor
mov
adc
push
add
add
mov
lret
add
test
push
add
clc
mov
adc
push
pop
and
loop
xchg
pop
xchg
mov
jmp
sbb
add
push
add
mov
lock
andps
jno
add
adc
pop
imul
jbe
xchg
add
insb
fcompl
stos
outsl
lcall
jg
push
lock
jl
fsqrt
fnsave
mov
add
add
and
mov
cltd
mov
xor
dec
mov
clc
inc
add
push
fiaddl
mov
dec
jle
std
xor
aas
sub
pusha
add
jecxz
xor
repz
or
add
mov
call
sahf
pop
mov
pop
dec
pop
push
add
add
push
add
cltd
adc
jo
popa
je
aaa
push
add
xor
adc
rolb
add
or
aas
test
xor
sbb
and
subl
add
inc
add
jle
add
aas
push
test
add
lods
dec
les
dec
pop
lret
cmc
push
add
add
mov
pusha
add
add
push
pop
push
add
lock
add
sahf
insl
std
lock
enter
add
add
inc
add
movsb
add
fisubs
mov
aad
movsl
ljmp
jmp
call
mov
pusha
add
fstpt
add
int
loop
fmuls
push
in
add
add
ret
add
push
and
mov
add
mov
sbb
sti
cmp
mov
lea
pop
je
push
add
xchg
jmp
pushf
cmp
mov
fsubrl
or
xlat
and
ss
rcrl
add
add
fdivrp
cld
xchg
xchg
into
mov
add
pop
jl
add
add
add
fmull
std
icebp
imul
psubusw
data16
and
enter
emms
in
sub
push
add
add
add
fmull
cmc
imul
scas
enter
dec
lock
push
add
mov
add
add
jbe
adc
mov
add
push
add
icebp
inc
add
xor
lea
outsb
xchg
mov
lods
adc
gs
mov
in
add
sbb
add
add
mov
fisubl
loope
test
add
sbb
add
addb
test
add
add
mov
xchg
add
imul
mov
dec
rolb
xchg
lahf
in
mov
rol
mov
mov
loope
call
test
add
mov
adc
dec
addb
sbb
pop
and
xchg
scas
or
leave
push
add
ja
jbe
shrl
movsl
pop
mov
xchg
add
addb
and
add
add
pop
mov
jo
scas
mov
fwait
out
seto
jl
add
and
js
hlt
add
adc
jno
in
or
repnz
or
add
add
sbb
dec
xor
pop
jg
sub
add
mov
and
mov
add
push
mov
add
dec
xor
lea
pop
gs
je
mov
or
jbe
leave
and
sub
jmp
jae
pop
fwait
mov
shrl
xor
aad
cld
xor
int
add
inc
lret
aas
mov
lds
mov
and
add
or
dec
pop
int3
std
fidivs
add
in
fwait
stos
cmp
inc
rolb
rolb
mov
add
add
add
addb
add
mov
add
ret
dec
mov
pushf
ss
cli
fnsave
add
in
inc
std
jge
fidivrs
xchg
mov
lea
gs
inc
sbb
push
add
jns
mov
xchg
add
add
mov
popf
adc
sub
inc
add
mov
pop
jb
or
addr16
push
adc
jnp
add
movsl
jno
in
fstpt
call
bound
mov
add
add
add
cwtl
pop
cmp
xchg
test
mov
lea
push
pushf
jae
add
dec
jb
roll
add
xchg
sbb
rolb
lods
jp
add
pusha
add
add
in
jns
insl
jge
add
mov
imul
add
add
cwtl
dec
mov
jbe
mov
jbe
sti
cmp
call
mov
push
xchg
push
test
xchg
pop
mov
add
add
mov
xchg
mov
cmc
mov
ss
sbb
lds
js
add
ret
pop
stos
iret
lcall
adc
and
repz
fcoms
adc
cmp
xor
sub
add
add
xlat
popa
arpl
test
pop
call
movl
ljmp
mov
fdivl
push
pop
xor
fwait
cmp
add
aas
dec
or
adc
inc
adc
add
cmp
sub
add
rcll
add
add
mov
repnz
sbb
sbb
jne
add
mov
out
cwtl
add
add
xor
insb
adcl
rolb
add
idivl
mov
xchg
add
je
push
or
xchg
data16
jl
testb
aaa
imul
xor
lods
or
pusha
add
add
add
mov
std
fldt
dec
mov
adc
inc
add
add
xchg
add
mov
add
inc
add
push
fnstenv
mov
pop
xor
push
add
ret
data16
xlat
mov
add
xlat
lcall
inc
cmp
ret
add
mov
rolb
add
jae
cmp
jb
xchg
xor
add
and
add
ret
sbb
ficoml
inc
add
sub
fstpt
add
xor
add
leave
inc
cmp
push
enter
add
add
add
xchg
mov
push
add
outsl
ja
add
jp
addl
and
mov
add
cmp
add
test
adc
in
fcmovnb
add
add
les
aad
xor
addb
add
cld
inc
add
xor
jecxz
ljmp
add
pop
adc
jecxz
add
pusha
add
xor
scas
dec
cwtl
in
movsb
add
or
mov
ja
and
add
jne
imull
dec
pop
push
add
add
into
lahf
mov
sub
add
push
or
add
repz
jbe
cwtl
rolb
mov
inc
add
sub
mov
jne
data16
enter
mov
scas
test
mov
xor
or
hlt
add
pop
test
cs
add
add
mov
add
les
or
lcall
add
add
mov
or
add
movb
inc
add
nop
add
add
dec
test
push
movb
add
add
jno
outsl
call
gs
add
rolb
pusha
add
ficoms
sbb
adc
mov
add
inc
add
aaa
test
out
xor
mov
sub
add
jp
xor
mov
push
pop
fcmovne
cwtl
testl
cmp
add
testb
add
or
and
push
add
add
adc
jl
jmp
add
pusha
add
mov
jne
or
add
scas
loope
dec
lahf
add
mov
jb
fninit
test
je
or
add
popa
mov
repz
pop
jge
dec
pop
xlat
lret
sti
inc
push
jns
cmpl
sub
mov
lret
and
fimull
js
add
pop
inc
cltd
sub
enter
dec
inc
cmp
jne
sbb
add
sbb
out
xor
sbb
sti
pop
repz
mov
lea
mov
add
not
add
add
addr16
add
mov
sbb
test
push
icebp
lods
dec
jle
stc
rorl
pushf
lea
add
and
mov
pop
aad
add
mov
stos
stos
add
add
add
add
pop
mov
sbb
fiaddl
mov
cmc
jp
enter
or
sbb
pop
mov
mov
xchg
data16
add
fnsave
fstpt
movb
add
pop
popa
xchg
push
test
add
lock
jb
mov
xchg
mov
aam
xchg
int3
mov
sbb
nop
add
or
mov
sub
or
mov
js
add
mov
sbb
mov
arpl
push
decl
jo
aas
pop
sti
lcall
in
mov
mov
add
imull
or
mov
sbb
addr16
test
addb
mov
cmp
addb
lret
fs
imul
mov
push
add
adc
xor
cmp
data16
adc
jb
mov
lcall
inc
add
mov
ret
aaa
xchg
add
test
loop
inc
add
mov
push
ljmp
add
push
add
add
mov
in
xor
insb
mov
stos
bound
mov
das
sbb
add
es
loopne
xchg
pop
int
rolb
push
jns
jns
out
pop
roll
add
add
dec
xchg
add
lods
mov
lds
add
clc
aam
rolb
insb
stos
gs
clc
push
int
jmp
jl
mov
fnclex
add
add
ret
outsl
addr16
rcr
ss
add
sahf
test
rolb
mov
jns
sbb
add
rolb
mov
mov
mov
jle
xchg
mov
test
add
pop
popf
xchg
sbbl
add
add
xor
xor
rolb
outsb
sub
lock
rolb
data16
and
filds
shll
mov
inc
jbe
mov
pop
roll
mov
add
inc
movsl
add
scas
mov
add
mov
add
inc
enter
mov
imul
add
inc
mov
add
inc
in
pop
popa
sub
inc
add
cmpsb
add
mov
add
add
stos
push
std
jge
pop
cmp
pop
stc
les
mov
add
aam
add
sub
mov
jl
fbld
enter
sub
add
enter
jmp
lock
dec
popa
push
add
add
push
xchg
rolb
fadds
push
pop
ficompl
jo
stc
inc
add
jg
fadds
add
add
add
insl
push
sub
add
mov
push
add
xor
sub
add
pop
mov
add
or
add
add
push
xor
outsl
ret
test
rolb
add
pop
outsl
sub
or
mov
and
mov
and
mov
add
add
jbe
push
mov
aad
xchg
in
in
cmp
push
add
add
mov
sbb
inc
add
add
add
xor
into
movsb
add
add
sbb
or
mov
dec
xor
sub
xchg
in
movsb
add
gs
adc
jbe
jg
rolb
mov
sub
xchg
mov
or
cmc
das
out
jp
int3
mov
dec
xchg
pushf
push
add
add
cmp
test
xlat
gs
add
scas
out
jp
add
mov
loopne
adc
rolb
push
add
pop
mov
add
xchg
sub
sbb
add
add
shrl
notl
mov
add
add
call
mov
sysexit
xchg
adc
and
mov
rolb
cmp
or
xor
lcall
pop
jne
rdmsr
add
jge
or
loope
and
xor
add
adc
adc
add
add
add
sub
lock
fs
jge
push
xchg
mov
add
add
jo
jb
stos
cli
inc
or
mov
add
add
sbb
pop
push
push
and
rolb
stc
push
clc
or
add
dec
cwtl
jmp
sbb
jmp
cmc
in
add
add
mov
dec
bound
mov
add
add
mov
dec
sub
push
mov
insb
add
jle
add
mov
ret
add
mov
outsl
jb
jno
pop
loopne
dec
sbb
xchg
sahf
div
add
imul
inc
add
out
xorl
mov
cmp
add
add
adc
jl
pop
leave
add
mov
mov
mov
imul
les
or
dec
dec
lods
jg
pop
scas
push
add
push
add
add
stc
leave
push
mov
adc
add
ja
add
add
sub
mov
ret
inc
push
add
hlt
add
cmp
stos
mov
push
mov
iret
push
add
sbb
add
add
add
add
dec
xchg
sub
add
xlat
mov
fstps
add
das
adc
insl
dec
daa
xor
bound
mov
add
mov
cmp
aaa
jbe
add
add
jp
data16
cmp
add
add
lret
testb
sti
push
add
sarl
imul
std
sbb
mov
mov
add
and
add
jmp
fimuls
and
mov
adc
push
add
add
add
add
xchg
pushf
mov
push
add
pop
push
add
gs
lock
or
aaa
pop
testb
add
idiv
sub
add
into
add
mov
inc
add
call
mov
test
aad
xor
jns
add
pop
testl
add
daa
in
add
add
add
mov
ja
movb
add
push
add
adc
cmpsl
push
cmp
push
add
add
dec
ja
add
add
add
insl
xchg
pop
enter
std
jb
jl
adc
jle
pop
scas
shrl
lea
mov
add
sub
sahf
pop
mov
add
fisubrl
or
add
or
sbb
add
rolb
je
sub
add
std
push
add
daa
int3
or
add
add
add
add
cwtl
add
cmpsl
jl
jns
add
ds
ja
inc
xchg
add
flds
nop
add
add
add
mov
add
mov
push
add
outsb
xor
adc
stc
xor
ret
adc
or
mov
add
lods
jns
add
jo
std
test
mov
lods
jno
push
rolb
sarl
es
add
int3
insl
dec
dec
mov
push
add
mov
pop
mov
dec
lods
les
test
stos
push
add
add
cmp
iret
xlat
in
lea
je
mov
mov
inc
test
add
scas
xchg
in
and
mov
inc
dec
jo
pop
inc
add
pop
add
xor
xchg
add
cmp
or
test
cmp
inc
add
lcall
add
fwait
dec
lods
cmp
push
add
add
hlt
add
rorl
insb
inc
add
add
add
cmp
cmp
cmp
dec
nop
add
outsb
out
mov
or
pop
add
mov
xor
nop
add
das
xchg
xchg
add
push
add
add
add
fwait
and
jl
bound
mov
jecxz
movsl
call
mov
add
add
cmpsl
push
add
xor
add
in
aas
pop
dec
aad
jne
sti
jbe
pop
imul
add
add
mov
cmp
add
jge
add
sub
leave
jl
add
jecxz
add
add
sub
sbb
add
ja
add
add
add
in
sbb
add
test
mov
sti
aas
mov
add
leave
in
add
add
add
add
lods
cmp
jnp
lock
push
loopne
test
daa
movsl
mov
xchg
icebp
lock
rcrl
ljmp
rcrl
push
xchg
add
aam
movsl
jne
add
lock
outsl
incl
add
mov
sub
inc
sahf
push
add
add
data16
movsb
add
add
add
addb
vmread
sub
sbb
sbb
data16
cwtl
stc
push
add
in
iret
data16
out
inc
add
test
jp
sub
rolb
sbb
int
xchg
add
jp
jl
add
jmp
lret
cltd
repz
fstpt
mov
ss
add
inc
add
mov
add
add
add
add
lock
mov
rorl
xor
mov
sbb
iret
pushf
inc
repz
dec
or
add
lods
scas
mov
mov
pop
dec
add
ret
imul
dec
nop
add
add
dec
jp
add
add
rolb
lock
sti
mov
add
cwtl
adc
mov
int3
cld
xor
sub
out
add
pop
data16
add
mov
test
cltd
mov
pushf
ja
sub
mov
aad
fwait
lcall
inc
add
out
adc
mov
add
insb
shll
xchg
add
sbb
data16
icebp
mov
sbb
cmp
mov
inc
mov
insl
jle
add
add
mov
push
add
and
xor
mov
jge
add
sbb
add
add
fwait
sbb
add
cmp
xor
rolb
push
sti
loop
mov
stos
push
add
imul
mov
add
mov
in
inc
add
push
dec
push
add
jno
mov
add
pop
data16
das
pop
sbb
add
or
cld
cwtl
adc
add
insl
sub
push
add
sahf
ret
int3
push
add
out
add
mov
add
mov
fisubrl
bound
mov
pop
adc
push
add
add
gs
je
cmpsl
adc
and
aam
loop
add
loope
dec
add
popa
push
add
add
ret
add
add
sbb
pop
adc
add
scas
xchg
add
add
inc
dec
out
xor
sbb
sbb
add
stos
out
push
add
mov
pop
and
mov
inc
add
add
mov
dec
sub
popf
lods
call
popf
and
test
jecxz
stc
jecxz
adc
xor
jge
add
cltd
ljmp
sub
mov
jns
pop
movsb
add
add
push
add
inc
ss
jne
les
cmp
and
adc
sub
and
add
and
add
mov
cs
movsb
add
add
outsl
mov
mov
fdivrs
jne
arpl
pop
mov
push
add
add
call
std
movsl
mov
and
dec
xchg
jl
loop
stos
outsl
mov
push
rcrl
addb
cmp
lcall
xchg
add
add
push
add
sub
cli
addr16
ja
xor
mov
js
nop
add
jo
push
xchg
inc
roll
mov
add
push
push
mov
cwtl
jecxz
add
lret
mov
add
add
jp
add
rolb
popf
idivl
stos
movsb
add
pop
inc
add
add
add
dec
and
mov
add
into
jmp
xchg
add
sub
add
mov
mov
dec
pushf
stos
sbb
adc
call
add
adc
adcl
js
push
add
push
add
rcl
add
lret
add
add
add
adc
adc
sbb
and
cmp
add
add
add
lea
xor
addb
repnz
add
sbb
or
lcall
xchg
add
cmpsl
xchg
add
sbb
and
mov
inc
mov
sub
add
mov
stc
inc
add
add
int3
adc
add
dec
mov
addb
add
add
inc
in
leave
loop
les
js
or
add
or
or
outsl
lds
cmp
cwtl
mov
add
add
in
cmp
stos
push
popl
add
add
pushf
test
add
add
add
fbld
cmpsl
ljmp
lret
add
ja
cli
add
fsubrl
addl
fisttpl
sub
add
js
add
dec
inc
rcl
add
dec
inc
add
mov
add
add
mov
push
repnz
aam
cmpsb
add
add
jnp
call
add
xchg
add
mov
std
jbe
mov
je
push
add
add
jns
sub
pusha
add
ret
cmc
inc
jno
add
add
add
add
inc
add
add
gs
lcall
lods
test
mov
add
add
add
push
add
inc
add
mov
movsb
add
cmpl
inc
and
mov
lods
jecxz
cmp
sub
jp
mov
xor
cli
xor
mov
clc
frstor
add
sub
push
add
add
add
int
les
xchg
xor
add
pop
push
xor
add
leave
cmp
add
xor
pop
out
rorl
mov
and
or
call
add
add
test
add
sbb
fiaddl
add
pop
call
lock
test
or
add
mov
sub
lods
movb
xlat
mov
pop
loop
add
push
add
add
jb
sbb
or
add
add
add
add
mov
mov
sub
add
in
les
clc
lea
mov
and
pop
lds
add
xchg
movb
sbb
add
stos
rolb
ja
add
cmp
roll
or
ret
add
push
add
sub
add
add
shll
lret
push
bound
mov
add
add
sub
repnz
push
xor
add
jge
aad
inc
push
leave
pop
adc
pop
sahf
xchg
mov
rol
addb
leave
stc
rolb
fwait
jne
ret
data16
loop
dec
out
and
addb
jmp
add
mov
sbb
push
lods
cwtl
ret
add
data16
xchg
or
stc
imul
enter
sbb
jbe
fwait
mov
add
add
les
or
add
inc
add
jle
movsl
lock
add
cld
ja
aaa
pop
pop
and
mov
add
mov
add
add
in
aaa
call
lret
jns
add
inc
add
add
xchg
add
add
mov
cpuid
add
push
mov
inc
cli
ljmp
mov
jle
jmp
pop
lret
mov
add
mov
xchg
xor
xchg
inc
inc
add
and
mov
mov
gs
cs
add
lods
or
pop
scas
lahf
repnz
int3
xchg
mov
loop
push
add
add
dec
fcoml
and
mov
dec
push
pop
mov
scas
addb
cwtl
test
cmp
push
add
add
jg
fsubrs
adc
xor
add
add
add
adc
mov
imul
add
adc
jg
add
ljmp
xchg
sub
add
and
paddq
jb
or
outsb
and
dec
mov
std
test
mov
push
xchg
add
mov
cmpsb
add
js
mov
jl
add
mov
adc
mov
aaa
cmp
add
ljmp
xor
add
mov
mov
psubsw
les
ss
add
shll
push
loop
push
mov
lods
loopne
loope
push
xchg
add
xor
adc
add
in
add
cmpsb
add
jmp
xchg
out
addr16
dec
add
inc
mov
xchg
sub
jnp
adc
loope
mov
and
add
cmpsb
add
add
iret
ret
rorl
enter
pop
xor
jp
lcall
add
mov
fxch
stos
dec
data16
add
jbe
frstor
mov
hlt
add
mov
ds
cmpsl
ja
add
mov
add
jle
sbb
push
insl
push
add
dec
push
push
sbb
mov
sub
add
fcoml
sub
fstl
add
push
add
add
mov
adc
int3
es
in
push
pop
mov
mov
add
dec
adc
mov
mov
add
fldt
sub
scas
lods
jnp
cwtl
lea
add
mov
push
adc
jae
das
arpl
add
push
add
adc
add
dec
clc
rolb
into
in
nop
add
add
add
jb
scas
aas
cmp
xchg
add
pushf
insl
mov
add
or
add
fwait
mov
push
add
lds
cli
cmp
add
out
fcomps
bound
mov
add
popa
push
testb
sbb
pop
jbe
xlat
mov
inc
add
add
mov
add
insl
adc
add
mov
pushf
test
in
cmp
add
add
add
add
add
adc
adc
pop
enter
cmp
add
mov
clc
add
push
dec
int
dec
cmc
add
hlt
add
mov
add
dec
jb
popf
add
xchg
add
fdivl
inc
xor
sub
mov
sbb
ljmp
gs
mov
fdivr
ret
lods
les
test
testb
add
call
test
mov
and
mov
add
cmp
popa
gs
dec
stos
jns
cltd
inc
add
add
add
fimull
pop
xchg
add
add
mov
mov
mov
add
xchg
add
cld
in
mov
andl
out
adc
nop
add
add
add
push
sbb
addb
sub
add
add
mov
or
add
push
add
add
bsr
loopne
aas
inc
xchg
arpl
in
cld
add
mov
mov
repnz
or
xor
test
cmp
add
add
mov
add
dec
insb
sbb
add
pop
out
cltd
xchg
les
mov
add
add
jmp
repnz
add
cmp
push
xor
test
repz
les
cmp
push
push
add
clc
fst
add
fcmovnb
stos
repz
add
add
add
fildl
add
testb
add
add
popa
in
test
mov
add
addb
add
lret
sti
out
dec
das
jp
inc
add
jg
add
mov
ljmp
pusha
add
push
add
add
add
inc
mov
mov
add
in
jns
xchg
xor
mov
in
mov
add
jb
sub
mov
mov
inc
add
mov
shll
add
pop
push
add
das
nop
add
jmp
testb
add
xor
pop
push
adc
cmp
add
mov
mov
add
jo
ja
xor
add
add
addb
add
push
add
int3
sub
mov
mov
in
fcmovb
add
and
mov
pop
jge
sbb
add
iret
mov
add
add
add
add
add
frstor
fisubrs
add
cmc
mov
addb
pop
loopne
in
dec
or
data16
sbb
imul
cmp
jmp
xchg
push
pop
sbb
xlat
pop
jb
mov
add
test
sahf
and
xor
cmpsl
xchg
add
dec
xor
sbb
out
push
add
mov
add
das
movsb
add
mov
sbb
xchg
inc
add
adc
jns
add
adc
outsb
addb
rolb
iret
jmp
pop
rolb
cmpsl
dec
outsb
pop
mov
std
push
or
lcall
add
pop
jns
mov
fstpl
and
mov
add
aam
fwait
jne
add
dec
dec
push
add
mov
cmpsl
push
add
xchg
pop
outsb
repnz
ljmp
add
pop
pop
push
sub
lds
xor
scas
adc
aas
add
and
mov
fdivs
jo
mov
mov
fistpll
mov
mov
daa
fnstsw
add
add
cld
out
xor
jo
sbb
push
std
dec
decl
mov
xor
incb
mov
add
add
mov
jno
add
add
xchg
or
into
jmp
add
aam
pop
jnp
add
add
mov
add
sub
daa
xor
test
andl
add
adc
sahf
icebp
xor
cmp
add
popa
imul
sub
rolb
jbe
mov
add
pop
icebp
lcall
out
fs
add
loop
stc
test
add
bound
mov
pop
dec
xor
lret
push
add
mov
in
lods
fcoml
add
add
pop
call
lret
dec
inc
mov
jmp
fwait
out
push
add
xor
xor
xlat
cmp
inc
jmp
add
sti
jbe
xchg
movb
add
add
lods
into
dec
xchg
leave
les
or
push
jne
outsl
jb
push
add
or
movb
testl
mov
add
xor
mov
inc
call
add
adc
sbb
enter
jne
xchg
add
add
cmp
ja
jge
add
testb
lock
hlt
add
sbb
cld
adc
js
add
add
cmp
into
lea
mov
push
add
js
scas
or
add
in
cld
aas
cwtl
dec
xor
sbb
add
push
add
inc
add
add
add
mov
mov
sbb
and
mov
add
or
pop
xor
lret
mov
jnp
dec
sub
lret
fmul
xor
sbb
movsl
mov
add
add
push
xchg
in
jbe
loop
push
add
add
add
add
add
xor
fwait
jecxz
add
add
and
cmp
add
les
sbb
sbb
fadds
add
dec
jmp
jbe
inc
add
add
popa
imul
dec
cmp
mov
das
outsb
xchg
sahf
add
push
addb
add
mov
iret
adc
outsb
push
cmp
push
pop
xchg
jb
lret
cmc
out
aas
jb
pushf
aaa
add
jne
lds
add
xchg
cmp
push
icebp
int3
pop
mov
add
add
add
popa
testb
ret
iret
leave
inc
add
pop
jae
add
cltd
mov
test
push
aaa
outsl
add
mov
or
add
mov
jle
mov
cld
fs
dec
push
mov
add
add
cmp
add
shrl
lret
add
add
scas
xor
jge
add
jno
cmp
cs
fisubl
das
sub
popf
rolb
add
xchg
add
and
push
xor
arpl
bound
mov
jb
inc
add
adc
xchg
add
lds
add
mov
popl
movsb
add
add
js
fsub
hlt
add
add
add
and
mov
jmp
sub
xchg
add
add
loopne
leave
jbe
jl
hlt
add
iret
loopne
movsl
aam
mov
jg
repz
and
mov
icebp
pop
mov
and
mov
add
push
add
sub
mov
movb
ss
jp
sbb
add
adc
jnp
add
xchg
jl
pop
dec
out
fisubrs
pop
lds
inc
add
add
add
shrl
mov
clc
add
ficompl
fisttps
inc
add
dec
out
mov
add
enter
add
mov
jo
adc
jae
lods
cmpsl
scas
aad
add
in
leave
sbb
mov
add
mov
or
mov
add
pop
inc
je
and
pop
push
lret
add
testb
add
add
add
mov
mov
add
insb
add
out
inc
fsubs
lret
fnstenv
ret
sbb
add
add
inc
mov
mov
add
divl
add
popa
pushf
push
jne
push
sub
jl
add
mov
testl
sub
add
aad
mov
fdivrs
ret
outsb
mov
push
or
adc
add
enter
lods
add
xchg
jo
push
cmp
dec
or
jbe
push
add
mov
add
lret
or
sub
add
pop
out
xlat
jae
int3
fnsave
daa
mov
addr16
mov
adc
lods
sbb
xchg
jbe
cld
scas
mov
add
loop
fcmove
pop
pop
add
in
sub
dec
cmpsl
cmp
add
fdivl
mov
filds
add
mov
add
add
add
movsb
add
add
ret
movsb
add
sbb
push
add
or
add
insl
movsl
lahf
mov
int3
enter
adc
xchg
add
jg
in
pusha
add
jmp
mov
rolb
lock
xor
add
fs
test
and
add
sbb
test
sub
dec
jne
movsb
add
xchg
add
call
and
mov
in
out
add
adc
fsubr
aas
stc
inc
add
mov
add
fcomps
pop
adc
pop
jmp
add
sbb
scas
inc
add
aad
xchg
add
leave
jae
pop
xchg
xchg
add
fdivs
xchg
pushl
add
or
add
addb
rolb
pop
xor
push
add
adc
mov
add
add
jmp
les
sbb
inc
add
dec
addr16
daa
mov
xchg
imul
cmp
push
pop
inc
add
xchg
adc
outsb
dec
cmpl
xchg
jmp
pop
stos
mov
add
repz
sub
inc
add
jl
sub
mov
add
add
lods
xchg
mov
add
int3
movsl
cli
mov
test
add
mov
add
loope
in
rolb
xchg
add
cld
xchg
add
mov
xchg
add
add
mov
add
sbb
popa
sub
add
scas
inc
not
add
add
mov
hlt
add
xor
xor
add
sbb
add
add
inc
addb
std
ror
cmpsl
test
add
ljmp
out
in
add
je
dec
push
add
sbb
adc
inc
add
lds
sbb
mov
jle
in
icebp
das
inc
add
jo
stc
push
add
std
add
sti
test
add
test
push
add
pop
jo
jne
inc
mov
add
mov
xor
daa
inc
push
add
add
jbe
cld
adc
lret
mov
push
add
out
xor
ret
add
jnp
cmp
add
lcall
imul
mov
idivl
sbbl
push
add
pop
sub
xor
les
inc
add
pusha
add
add
add
push
add
pop
movsl
fistpll
add
fnstenv
xchg
add
mov
adc
add
int
add
mov
int3
sahf
frstor
dec
leave
pop
repz
mov
in
push
jbe
aam
fldt
insb
mov
jo
or
add
add
mov
fstps
push
xchg
xorl
imul
add
mov
add
cmpsl
cmp
and
mov
popf
add
and
out
adc
shrl
xlat
pop
call
cmp
fnstsw
mov
and
add
repnz
mov
add
mov
imul
lcall
inc
add
and
or
icebp
sti
movsl
test
inc
add
call
push
inc
movsl
stc
pop
push
add
jo
outsl
aad
cmpsb
add
add
or
clc
int
sub
xchg
add
mov
add
add
sti
xlat
icebp
push
add
outsl
push
add
popa
pop
dec
test
xchg
add
or
imul
add
lahf
push
fsubl
les
sub
sub
lcall
mov
xchg
add
mov
or
add
push
push
jnp
imul
in
cmp
add
add
mov
andl
add
mov
add
into
imul
fcmove
gs
jmp
rolb
adc
mov
xor
cli
jl
pop
sub
add
jb
addb
add
inc
add
and
jg
add
dec
out
inc
stos
mov
add
adc
or
xor
test
add
dec
pop
push
lds
loopne
and
mov
roll
add
pop
add
dec
sub
add
loopne
pop
dec
insb
outsb
add
sub
or
jecxz
mov
pop
jne
push
add
fwait
outsl
stc
jle
adc
test
add
and
add
and
mov
out
sahf
mov
mov
jg
add
imul
add
add
cltd
ret
mov
sbb
dec
and
push
add
add
mov
movsb
add
xchg
or
addb
nop
add
add
enter
pop
jno
mov
addb
jno
add
add
pop
fs
je
adc
cmp
das
adc
mov
push
js
push
loopne
pusha
add
inc
add
mov
or
xchg
mov
ficomps
add
fbld
pop
sbb
imul
ret
movb
pop
popa
out
pusha
add
add
mov
add
addr16
add
ret
cmp
pop
and
stos
cmc
lea
leave
cmp
mov
and
movsl
mov
add
add
loopne
pop
addb
add
sbb
mov
xor
dec
xchg
mov
bound
mov
jecxz
add
jne
add
mov
jae
loope
add
cmp
stos
les
dec
cmp
fcoml
xchg
add
add
test
dec
mov
stos
insb
push
add
mov
or
add
xor
sbb
in
out
add
add
mov
sbb
mov
mov
ret
add
enter
lret
testb
add
add
mov
push
add
ja
mov
pusha
add
bound
mov
dec
pushf
mov
lods
and
imul
data16
pop
in
data16
adc
push
mov
mov
add
and
adc
leave
sbb
mov
add
scas
mov
xchg
lret
push
jnp
loop
lock
add
mov
add
and
mov
add
pop
mov
cmp
cmp
or
add
mov
add
loopne
sbb
in
cmp
jns
pop
int
movb
inc
bound
mov
add
add
ja
mov
sar
mov
negl
les
mov
add
or
out
sub
test
dec
pop
inc
add
mov
sub
or
inc
add
lret
push
out
inc
add
mov
dec
mov
sub
jbe
ljmp
add
ja
aaa
fcom
outsl
cmp
or
jno
sub
popa
sbb
cwtl
sbb
add
and
mov
das
fmuls
loope
test
loope
lcall
add
bound
mov
push
add
add
mov
xchg
mov
xchg
shll
add
repnz
add
mov
push
add
mov
mov
outsb
inc
add
cmp
sbb
add
add
jp
add
add
mov
mov
xchg
mov
mov
jp
push
into
hlt
add
leave
pop
cld
dec
sub
repz
add
or
add
add
add
add
add
leave
mov
je
add
add
jmp
xchg
repnz
sub
add
jae
dec
nop
add
add
pop
and
outsb
or
iret
data16
rcrl
das
hlt
add
push
add
add
testb
mov
add
out
xchg
popa
or
sbb
dec
pop
movb
sti
mov
rolb
into
sbb
add
jns
add
mov
addr16
jae
iret
fwait
cmpsl
push
add
mov
jg
and
mov
clc
popf
ds
add
popa
push
sbb
int
test
push
add
lds
loopne
xor
xor
add
in
inc
add
add
je
arpl
rcl
add
lahf
addr16
cltd
mov
sub
pop
out
add
test
pop
lods
or
mov
rolb
jg
les
push
add
ds
mov
mov
add
mov
push
dec
inc
add
fcmovu
xor
imul
inc
add
test
add
add
add
jnp
xchg
sbb
popf
decb
lds
and
sub
stos
adc
lret
ds
popa
or
inc
add
add
in
lods
imul
pop
sbb
add
loope
sbb
jmp
push
add
fnstenv
rcr
push
add
rolb
ret
lods
adc
xchg
xor
cmp
movsl
mov
dec
adc
lret
sub
cmp
in
add
push
add
ljmp
sub
out
cli
mov
fwait
cltd
imul
xchg
sub
add
mov
fidivrl
dec
ja
add
add
andl
cmp
xchg
add
int
xor
gs
add
nop
add
cmp
xchg
add
rolb
pop
cmp
add
rolb
cli
sbb
fcmovne
pushf
shll
mov
in
jbe
call
push
add
daa
mov
stos
and
mov
add
add
pop
fldcw
add
xchg
repnz
push
adc
fmuls
je
inc
add
add
rcll
mov
sub
mov
add
add
mov
add
or
loope
mov
imul
gs
adc
insb
insb
cmp
int
xchg
add
pop
cli
push
add
mov
xlat
mov
aas
stos
xorl
adc
inc
les
cmc
int
add
push
push
push
add
add
add
mov
push
add
sbb
cmc
bound
mov
add
add
sub
rolb
into
jb
je
mov
add
jmp
out
addb
inc
mov
add
add
xchg
testb
add
add
addb
jo
inc
sub
add
sbb
sar
imul
mov
add
add
add
sbb
cli
call
add
add
add
orl
add
testb
les
xor
inc
sahf
mov
add
movsb
add
mov
add
sub
xchg
add
add
mov
add
xchg
add
add
testb
push
mov
cwtl
add
add
ljmp
add
push
sub
js
or
mov
insl
dec
push
xchg
inc
add
and
mov
hlt
add
in
jmp
pop
movsb
add
dec
xchg
add
shr
gs
into
push
add
add
pop
push
add
add
push
add
cmc
in
add
inc
push
ret
ljmp
sbb
mov
lahf
dec
rolb
fldcw
mov
sub
xor
push
xor
push
add
jp
ret
ja
add
add
lds
add
bound
mov
mov
xor
jecxz
cmpsl
test
xchg
add
clc
cmp
fstpt
pop
jl
add
add
imul
hlt
add
test
cwtl
nop
add
add
js
imul
cmpsb
add
loop
fildll
js
rcrl
out
mov
lahf
adc
xor
mov
lret
add
mov
sbbl
and
mov
hlt
add
add
mov
dec
jb
add
mov
add
mov
add
xor
test
in
or
test
add
sbb
add
xor
les
sbb
add
add
add
add
mov
mov
outsl
cmpsl
ret
data16
add
mov
pop
ficoms
xor
test
cld
xor
add
ljmp
adc
xor
xchg
add
dec
mov
mov
add
add
sub
add
daa
xchg
pop
clc
mov
xchg
add
mov
add
add
dec
mov
hlt
add
jne
inc
or
data16
add
mov
sahf
and
mov
add
xor
sbb
aas
and
mov
add
out
add
mov
jnp
icebp
pop
insl
mov
cmc
rolb
push
enter
and
jne
push
add
mov
das
or
test
insb
jp
adc
pop
jae
push
add
add
data16
add
add
divl
push
add
and
pop
cli
ret
push
das
hlt
add
loop
movb
lds
bound
mov
cmp
add
aas
push
xchg
jp
adc
push
lock
push
popa
scas
lods
scas
stos
les
cmp
and
mov
test
stos
and
add
addb
mov
add
pop
inc
mov
inc
mov
and
mov
or
mov
loop
hlt
add
mov
push
pop
test
mov
sbb
push
add
add
jns
xor
pop
cli
xchg
add
pop
mov
dec
jg
outsb
lds
lock
or
push
mov
cmpsl
mov
xchg
add
push
add
add
adc
fisttpl
clc
popa
or
imul
pop
jp
and
arpl
das
stos
dec
in
sub
test
adc
dec
lahf
imul
add
pop
cmp
add
mov
push
add
push
add
cld
call
loop
push
xchg
cmc
aam
aam
aas
into
jg
cltd
mov
fs
lods
std
mov
or
pop
std
cmp
ss
push
dec
decb
pop
push
jge
jle
add
add
add
rolb
jbe
cs
cmp
lods
int
push
add
mov
nop
add
mov
mov
cmc
xor
push
add
mov
outsl
jge
mov
popa
in
lret
push
add
data16
add
flds
lahf
cmp
loopne
js
setle
xchg
cmp
lds
adc
mov
xor
stc
les
add
gs
clc
mov
xor
add
test
add
addb
bound
mov
add
add
outsb
and
xor
enter
and
js
jge
add
mov
popa
xchg
push
cwtl
xchg
aam
mov
add
enter
scas
push
add
add
add
or
add
mov
add
add
mov
add
add
jl,pt
add
add
add
repnz
push
add
xchg
add
push
notl
add
mov
jge
popf
sahf
aaa
iret
push
add
lahf
mov
test
std
mov
add
add
and
add
into
cli
xor
test
call
sbb
push
movsb
add
mov
test
jo
add
icebp
ja
add
jg
push
dec
adc
in
or
add
popf
push
fwait
mov
div
scas
loope
aas
xlat
sub
add
cmc
insl
imul
add
ffree
aam
pop
xchg
add
add
add
cld
out
add
cmp
lcall
mov
mov
sbb
add
add
sahf
xchg
mov
add
push
iret
addr16
dec
or
mov
mov
add
add
xchg
add
add
lret
sub
inc
lock
movb
lret
cmp
add
mov
cltd
imul
xchg
pop
bound
mov
mov
inc
rolb
mov
jp
add
add
lock
or
add
mov
mov
fwait
push
add
add
mov
add
add
mov
ret
jg
adc
aad
xor
fisttps
adc
add
add
add
adc
shl
add
movsb
add
cs
iret
lahf
test
lret
insb
push
lods
fucom
add
mov
and
sbb
add
repz
into
mov
popa
mov
adc
xchg
add
mov
add
xchg
addb
jbe
jmp
add
push
add
loope
add
insb
mov
add
repz
jnp
push
addl
inc
add
sbb
sahf
pusha
add
popf
repnz
xor
sbb
dec
cmp
popf
mov
lret
adc
or
cltd
int
inc
add
add
dec
sub
add
add
add
add
xchg
cmp
pop
ljmp
psubd
or
aad
movlps
repz
add
cmp
or
add
add
xchg
add
add
add
adc
add
sbb
push
dec
mov
or
inc
add
mov
call
movb
jae
add
push
js
add
mov
add
add
das
push
add
dec
add
adc
cmp
add
xor
clc
add
cmp
xor
fcoms
mov
popa
xchg
xor
jl
add
inc
add
xchg
or
push
imul
pop
test
push
add
mov
mov
inc
add
add
add
rolb
push
mov
fiadds
mov
xchg
add
add
add
add
imul
add
add
loopne
jno
pop
push
adc
outsb
add
and
mov
mov
mov
cmp
mov
scas
idiv
push
cmp
popa
pusha
add
pop
rolb
lods
std
sbb
add
inc
imul
jae
les
mov
cmp
add
daa
sbb
add
in
loope
push
adc
xlat
in
inc
mov
dec
add
mov
or
add
sbb
loope
loop
imul
outsl
pop
mov
add
adc
movsb
add
fmul
syscall
sbbl
add
fildl
js
add
mov
add
mov
mov
xchg
add
mov
or
cld
cmc
push
add
push
mov
mov
mov
add
into
xor
adc
mov
sbb
add
push
dec
lret
flds
add
add
insl
addb
in
xchg
add
stos
cld
mov
inc
add
add
mov
adc
jbe
jge
add
or
add
jmp
inc
scas
jae
lea
arpl
mov
push
pop
hlt
add
add
pop
push
shr
pushf
dec
dec
test
mov
add
sahf
or
add
add
inc
inc
punpckhdq
jo
jge
add
std
xchg
pop
inc
mov
test
in
dec
pop
mov
sub
add
movsl
jns
test
lcall
enter
add
xchg
add
and
push
in
mov
cmp
mov
or
in
les
sti
out
add
add
add
les
sbb
jns
stos
popf
add
mov
push
add
add
dec
sub
or
xchg
mov
add
popf
xchg
fldt
arpl
and
add
push
or
add
mov
lods
call
int
jmp
add
add
mov
bound
mov
ficomps
add
mov
std
ret
testb
pop
je
movsb
add
mov
cs
ds
fs
add
and
mov
sbb
add
add
out
out
pop
xchg
out
fcomps
add
mov
sbb
scas
rolb
pop
add
mov
or
loop
in
and
mov
mov
mov
mov
mov
inc
das
int
movsb
add
pop
outsl
add
cmc
inc
add
push
add
add
push
loope
add
add
pop
pop
mov
and
adc
outsb
in
mov
adc
mov
add
mov
push
int3
addb
add
xorl
jg
mov
imul
ljmp
xlat
mov
mov
aam
bound
mov
repnz
loope
stos
dec
sbb
xchg
add
mov
pop
in
sub
mov
mov
loop
add
push
cmp
add
repz
mov
push
inc
add
add
jb
aad
add
lock
xlat
inc
add
rolb
xor
jge
dec
push
add
fnsave
pop
add
shll
add
add
push
add
mov
shrl
xchg
mov
sbb
lret
push
add
std
pop
add
ljmp
inc
mov
das
mov
xchg
add
jbe
cli
dec
pop
rolb
mov
into
jl
sub
rorl
inc
add
add
add
adc
adc
add
xor
ret
inc
add
adc
test
in
mov
add
push
sub
das
xchg
add
add
pop
fneni(8087
add
jbe
fstps
aaa
fiaddl
mov
xchg
loopne
add
sbb
add
add
add
add
fsubl
bound
mov
dec
cs
inc
jmp
mov
mov
out
add
add
push
fldl
mov
pop
mov
addb
add
sbbl
loope
mov
add
mov
stos
fdivp
pop
clc
pushf
sub
add
add
add
add
add
sub
adc
add
in
xchg
add
add
add
xchg
add
add
push
add
iret
cmpsl
rolb
testb
mov
aad
add
test
bound
mov
jnp
push
jne
scas
jae
cltd
jl
add
push
outsl
xor
sahf
mov
xchg
rolb
add
lcall
das
cmc
ja
add
jb
dec
pop
add
or
fwait
xchg
add
std
sbb
jbe
push
add
jae
fwait
adc
xchg
add
and
outsl
mov
add
aam
mov
push
add
jecxz
fs
out
jp
push
add
addb
add
mov
ret
mov
add
add
xor
xorl
scas
xchg
add
fisttpl
add
adc
aas
mov
cltd
mov
clc
cmp
add
gs
rolb
inc
add
push
pop
jg
xor
add
or
add
jno
add
add
add
lods
lcall
sub
pop
in
xchg
out
add
mov
add
xchg
mov
mov
sbb
inc
add
bound
mov
dec
aas
cmpsl
imul
push
sub
lea
int3
out
fwait
mov
jle
das
movsb
add
fildll
and
jbe
lea
add
mov
rcpps
add
into
fwait
add
push
fwait
add
xor
push
adcl
icebp
mov
popf
adc
rolb
je
push
add
dec
inc
js
jmp
add
add
add
testb
jge
addr16
sub
add
mov
add
add
add
mov
add
add
push
mov
sti
push
add
add
mov
add
cmp
add
adc
fcmovne
mov
jae
mov
ret
xor
add
cld
cltd
dec
add
mov
add
push
mov
sti
sub
movsb
add
test
fwait
mov
add
mov
mov
jne
xor
add
add
data16
inc
lods
push
mov
scas
lret
cld
cld
sbb
dec
mov
arpl
add
rolb
xchg
add
xchg
xor
rolb
add
adc
xrelease
add
sbb
and
inc
xchg
add
mov
addb
sub
add
addb
rorl
add
push
rolb
sbb
xchg
add
add
inc
add
test
jecxz
loop
sbb
add
test
out
incl
add
inc
loopne
dec
mov
adc
xor
sbb
add
pop
arpl
add
add
addr16
sbb
sbb
xlat
mov
add
jge
pop
bswap
aam
lret
dec
jge
jae
arpl
mov
add
cmp
add
mov
or
mov
add
shll
call
addl
ja
int3
rorl
xchg
mov
ficompl
adc
cld
aam
es
add
addr16
aam
flds
jle
push
add
js
pop
and
jno
add
out
rcll
mov
fisubl
add
add
addb
bound
mov
inc
jg
enter
out
movsb
add
movsb
add
xor
movsl
dec
jno
sub
ficoml
fstpl
mov
sub
push
lods
mov
imull
add
int3
jo
xchg
push
add
add
lock
xor
adc
inc
adc
mov
clc
cmp
mov
test
fbld
lret
mov
or
out
push
dec
mov
add
add
xor
add
data16
lods
std
jecxz
pop
sahf
in
scas
andl
in
sbb
rolb
add
mov
sbb
lret
nop
add
add
add
or
dec
cltd
rep
nop
add
cltd
std
fisttpl
mov
lock
mov
add
lea
popf
mov
add
jecxz
add
dec
sbb
jp
sbb
mov
dec
mov
cltd
cmpsl
cmp
add
fwait
or
sbb
cmp
bound
mov
and
mov
jmp
mov
mov
push
add
dec
xchg
and
adc
mov
lahf
out
jge
add
add
stos
aad
add
xchg
stos
in
dec
sub
mov
mov
or
add
rolb
into
lods
mov
add
sub
xchg
stc
xor
or
adc
daa
movsl
daa
out
int3
fbstp
gs
push
subl
jbe
add
add
daa
cmp
jg
repnz
pop
das
ja
add
test
mov
xchg
push
add
mov
add
rorl
mov
popf
xor
test
jne
inc
add
or
add
add
add
test
or
add
mov
test
add
inc
add
mov
add
sbb
adc
fnsave
add
push
icebp
repz
xchg
add
jp
mov
push
add
add
lds
sub
mov
add
addb
lret
les
push
mov
dec
xchg
lea
addb
push
add
add
xor
pop
ja
pushf
dec
gs
adc
add
mov
add
sub
push
cmp
sub
or
adc
jae
mov
add
adc
rolb
addb
pusha
add
jnp
push
lcall
jmp
add
add
add
add
movb
and
test
jecxz
pop
decl
add
loope
add
inc
add
dec
cltd
roll
add
add
push
add
addb
sub
xchg
pusha
add
jne
sbb
mov
aad
add
push
add
or
xchg
xchg
add
add
ds
jae
add
or
add
inc
add
mov
xchg
gs
xor
inc
test
aam
dec
mov
add
add
inc
add
or
add
mov
data16
aam
mov
adcl
add
add
push
mov
aas
rolb
out
pop
and
push
add
xchg
xorl
fists
add
add
push
add
shll
mov
call
aam
data16
or
fimull
mov
dec
dec
leave
mov
add
iret
push
add
mov
sub
out
sub
adc
cwtl
movsl
sub
xchg
mov
addb
pop
mov
add
mov
add
cmp
dec
movb
add
out
pop
fisubl
inc
scas
sbb
hlt
add
movsb
add
pop
lods
adc
jecxz
adc
jge
cmp
add
dec
add
mov
sbb
push
add
xchg
lds
stos
cld
rcrl
adc
push
xchg
add
pop
cmc
cld
cmp
xor
xchg
sub
add
add
out
push
add
pop
or
sbb
xchg
adc
out
addb
repz
add
push
inc
add
mov
int3
xchg
arpl
sbb
pop
mov
mov
repz
adc
add
sbb
inc
add
sub
pop
xor
mov
mov
fsubs
add
repnz
push
mov
or
push
test
cld
jno
ljmp
add
enter
dec
inc
movsl
movl
or
and
mov
rolb
add
inc
sbb
dec
xor
jmp
ss
add
add
sahf
xlat
out
adc
cmp
fistpl
pop
fwait
push
add
add
add
add
out
xlat
imul
or
sub
or
add
outsl
and
jnp
dec
repnz
and
out
mov
arpl
xor
inc
cmp
push
push
add
mov
enter
add
jnp
sbb
add
les
out
fs
add
add
out
xor
loope
outsl
roll
adc
and
mov
add
mov
call
lods
inc
add
insb
cmp
add
and
mov
add
add
lock
xchg
mov
in
imul
or
aas
lods
mov
jle
jp
or
ret
ds
icebp
adc
movsb
add
stos
fcmovne
rolb
jle
add
push
add
imul
incb
jecxz
mov
jl
lcall
push
add
cmp
clc
jo
push
add
cmc
stc
adc
cmp
add
fwait
jp
in
loop
call
data16
rolb
mov
lret
into
stc
adc
push
add
decb
add
sub
add
leave
lahf
mov
lock
add
add
int3
rolb
add
add
add
enter
clc
or
mov
sbb
xor
mov
push
add
dec
loope
popf
push
lds
arpl
repz
add
add
in
clc
push
add
sbb
xchg
push
cld
out
sub
add
add
add
cwtl
or
ret
scas
lret
xlat
or
xchg
les
data16
mov
add
outsb
mov
scas
ljmp
jae
push
loope
add
cmp
pop
rolb
stos
mov
add
jp
out
xchg
sarl
add
xchg
add
mov
xchg
inc
imul
xchg
add
jle
mov
jl
xor
mov
add
ljmp
addl
cmp
add
cmp
add
mov
jae
lods
pusha
add
push
add
lea
or
jbe
out
xchg
test
cmpsb
add
inc
jb
mov
bound
mov
rolb
add
ss
negl
int
sbb
add
add
dec
addr16
add
add
add
inc
add
fiadds
sbb
add
add
addb
std
mov
cmp
test
inc
add
add
jmp
add
xlat
imul
jns
cmp
push
arpl
enter
xor
dec
daa
ja
add
push
aam
inc
add
sbb
mov
pusha
add
jge
loopne
sub
add
xor
fcoms
test
inc
add
mov
add
xor
rcll
inc
sqrtps
or
add
cli
fstps
add
fwait
rolb
rcrl
inc
add
inc
add
add
sub
aad
push
pop
sub
test
je
xchg
push
cmp
add
xchg
add
xor
or
nop
add
dec
inc
add
fs
add
mov
add
mov
sub
aaa
fnstcw
add
in
jle
mov
add
or
or
rolb
mov
dec
add
xchg
add
testb
addl
mov
pop
aas
jne
jecxz
pxor
ret
mov
cmp
fsubrl
jnp
jl
mov
imull
xchg
cmc
movsl
cld
je
mov
add
sbb
sbbl
insl
call
pop
push
add
insl
loop
fldcw
jo
push
xor
icebp
pop
movsb
add
push
add
add
stos
inc
add
add
and
mov
out
jnp
push
test
add
add
dec
add
pop
sub
icebp
add
add
jecxz
iret
imul
push
pop
mov
xchg
add
add
add
int
add
add
add
mov
jae
add
add
enter
mov
movsb
add
push
add
adc
mov
mov
in
fwait
dec
sbb
add
mov
xchg
add
mov
add
add
mov
add
mov
push
add
add
sub
push
add
mov
hlt
add
add
add
shl
add
testb
pop
inc
clc
cmc
addl
out
test
outsb
into
int
adc
enter
cs
sub
push
add
out
fisttpll
xor
loopne
inc
add
cwtl
add
push
add
addr16
mov
add
sub
out
in
and
cmp
imul
and
mov
add
scas
pop
lds
inc
add
aaa
rolb
lret
lcall
add
add
int3
jp
add
dec
test
cmp
xchg
sbb
mov
inc
add
test
arpl
add
push
push
pushf
daa
mov
add
or
mov
test
mov
or
cli
add
mov
stc
sbb
rolb
insl
xchg
addr16
jb
mov
add
mov
aam
mov
add
cmp
add
rolb
add
data16
insb
int3
cltd
push
addb
add
xor
es
add
or
add
xor
in
add
dec
inc
add
add
js
push
add
add
add
test
add
mov
cmc
daa
inc
jmp
lods
sub
jns
adc
jbe
pop
rolb
test
mov
scas
dec
sub
xor
xor
jl
mov
clc
jae
leave
inc
loope
testb
dec
dec
xchg
adc
add
fstpl
jne
test
adc
add
mov
cmp
add
icebp
repz
and
mov
mov
sub
add
add
ljmp
cmp
test
ficomps
imul
stc
push
lods
push
add
push
add
add
je
add
mov
mov
stc
add
bound
mov
outsl
dec
fistpl
xor
ja
add
add
jno
cmp
in
ret
sbb
gs
movb
jno
add
mov
xchg
xchg
sub
inc
and
mov
add
and
in
cmc
adc
adc
add
cmp
push
pop
loope
lds
bound
mov
add
dec
fwait
cmpsl
jge
mov
pusha
add
jl
fldcw
mov
cmp
inc
add
lods
iret
into
inc
sbb
in
mov
fisubrl
jnp
test
pusha
add
add
loopne
nop
add
ficomps
rolb
test
adc
sbbl
in
push
rolb
mov
push
add
and
mov
jb
loop
xor
add
add
add
jno
insl
xchg
rolb
add
mov
add
sub
leave
xor
dec
pop
das
cmovb
mov
cmp
add
xor
cmp
out
xchg
lret
and
aam
add
push
gs
repz
sub
int
int3
push
sub
movsb
add
add
mov
add
mov
out
adc
ss
adc
sbb
add
lahf
lret
pop
les
mov
adc
add
add
dec
cmp
pop
push
add
add
mov
add
sbb
mov
or
add
add
test
addr16
add
push
into
inc
add
dec
mull
jmp
mov
add
add
sub
push
add
lock
cmpsl
ficompl
stos
jle
add
lahf
mov
jl
loope
jnp
fstpt
mov
test
cs
mov
in
dec
mov
or
add
add
sub
add
pop
and
mov
fmul
xchg
mov
inc
add
add
pop
stos
push
add
jbe
xchg
cmc
cltd
hlt
add
leave
inc
ret
out
sub
jbe
mov
loopne
in
jnp
rcll
add
lds
sti
jg
dec
lods
test
mov
sbb
add
scas
pop
movsb
add
push
mov
scas
jge
movsl
mov
ret
inc
add
cmp
xchg
add
add
add
test
xchg
push
lock
and
aam
or
add
lahf
or
xor
sub
add
fbld
bound
mov
add
or
add
mov
inc
add
add
add
xchg
cli
mov
rolb
scas
daa
jl
pop
jnp
sti
in
loopne
xchg
call
clc
addr16
add
jb
add
jl
lds
and
out
insb
pop
add
add
movsl
leave
push
add
mov
and
mov
cmp
insl
jmp
add
or
mov
sbb
mov
push
add
or
rcrl
adc
dec
out
add
sbbl
aas
fidivl
inc
add
xor
mov
lcall
mov
add
mov
out
loop
push
add
pop
mov
mov
lea
outsl
out
adc
mov
pop
xor
in
inc
add
mov
pusha
add
sub
adc
add
pop
push
add
loope
add
scas
bound
mov
ret
adc
data16
dec
pop
inc
add
jnp
add
add
rolb
insl
dec
scas
dec
fidivl
cli
pop
enter
call
out
adc
mov
mov
mov
add
add
stos
rolb
mov
add
add
mov
popa
push
and
mov
or
sbb
lods
call
jg
add
add
and
xor
inc
in
push
aam
xor
adc
cmp
lock
jp
ss
mov
sbb
push
inc
add
mov
add
pop
jl
das
test
sub
add
test
add
imul
add
add
add
stc
sbb
clc
fdivrs
add
mov
stos
test
int
and
repz
jae
inc
add
dec
xchg
add
cld
ss
add
in
pop
xchg
testb
in
mov
test
pusha
add
ret
fmull
hlt
add
rolb
cs
icebp
rolb
cmp
lea
fsubl
push
add
sub
sahf
lcall
push
iret
in
push
add
repz
add
add
in
xor
repnz
sarl
adc
add
dec
aam
sub
sbb
add
out
xchg
mov
xor
mov
add
add
sub
add
cmp
stos
adc
fiadds
clc
sbb
aaa
jge
arpl
rolb
lcall
scas
push
adc
jmp
add
pop
mov
outsb
cmpsb
add
add
sahf
testb
pop
loopne
notl
cmp
xchg
jb
push
add
in
sahf
push
add
and
mov
pop
sbb
rolb
stos
movsl
imul
sbb
aaa
fcoml
xchg
add
sbb
cmp
add
mov
mov
ret
add
or
iret
mov
incb
gs
imul
add
popf
mov
jae
adc
ljmp
add
fwait
jecxz,pt
add
dec
lock
cltd
jg
add
add
add
push
add
inc
add
mov
mov
and
mov
inc
xlat
inc
loope
add
add
leave
or
xchg
sub
add
add
mov
xchg
add
inc
push
add
xor
addr16
pop
lahf
popf
popa
add
mov
mov
add
pop
shl
in
jae
sarl
je
xchg
data16
enter
push
add
mov
ja
add
pop
mov
rolb
xor
sar
and
mov
xchg
push
add
add
popa
cmp
outsl
test
push
add
xchg
ja
adc
jmp
and
add
pop
ret
scas
adc
repnz
fistpll
add
cmpsb
add
add
add
add
inc
add
add
mov
stc
popa
fwait
inc
mov
add
pop
xchg
mov
add
add
add
add
in
enter
mov
jne
scas
pop
adc
add
inc
sub
add
das
dec
testb
adc
push
aas
mov
rorl
inc
add
daa
push
mov
ret
movb
and
sbb
shll
and
mov
cltd
ja
insb
jbe
imul
es
fsubrl
add
sub
adc
imul
mov
add
add
add
add
add
add
and
xchg
add
and
mov
add
cmp
inc
add
add
scas
das
push
add
push
add
xchg
add
mov
xor
cld
daa
xor
jmp
cmpl
or
icebp
mov
mov
sbb
in
jae
sub
lds
push
add
jmp
adcl
add
mov
mov
fmulp
jb
sbb
push
add
add
ret
nop
add
pusha
add
push
imul
push
add
push
add
addr16
add
cmpsb
add
add
jno
add
mov
movb
and
daa
das
jge
pop
mov
ret
jp
add
out
daa
faddl
mov
mov
push
std
mov
cmpl
movsb
add
push
add
add
aad
mov
mov
add
add
add
lds
in
dec
movb
rolb
lods
scas
adc
push
addb
add
add
mov
insl
out
bound
mov
lahf
mov
jl
add
add
add
add
ja
and
add
add
cli
aad
add
add
movsb
add
dec
fdivrs
mov
push
or
xor
mov
aam
enter
mov
testl
ja
cmpsb
add
add
mov
add
scas
pop
pop
xor
stos
scas
fnstsw
int3
xchg
add
pop
movsb
add
add
add
enter
add
mov
add
sbb
sub
sbb
xchg
add
add
rolb
mov
mov
mov
imul
cld
cmpsb
add
lock
add
add
movsl
inc
add
lods
xor
iret
xor
push
add
pop
push
dec
stc
lret
dec
push
pop
fsubrs
test
inc
xchg
add
loope
add
cwtl
cmp
xchg
add
cmp
add
add
sbb
mov
add
and
and
mov
cmpxchg
add
mov
pop
sub
mov
lods
sbb
ret
sub
add
add
xor
lods
xor
addb
cltd
nop
add
in
xor
mov
mov
push
add
lea
mov
aad
sbb
add
add
mov
add
or
push
add
xchg
xchg
add
addb
fdivr
jg
push
dec
cmp
mov
dec
xchg
add
or
sahf
cmp
std
xor
getsec
pop
mov
add
or
mov
lods
addb
pop
int3
mov
add
xchg
cwtl
fcmovnbe
out
dec
add
xchg
mov
mov
adc
add
pop
cmp
loop
jns
add
mov
pop
std
repnz
or
rolb
add
lea
add
test
sbb
imul
sub
int3
int
das
xor
add
add
lods
mov
add
sub
add
xchg
stc
and
sub
add
test
add
pushf
rcrl
test
test
scas
out
add
arpl
jg
add
sti
mov
pop
or
cmpsb
add
mov
jecxz
add
add
add
mov
add
fcomp
and
mov
add
add
scas
addb
mov
add
add
add
stc
mov
in
add
out
sub
add
mov
add
aad
add
add
pop
sti
push
xor
inc
stos
out
mov
add
add
ret
mov
add
adc
in
iret
and
adcl
add
add
mov
cmp
cmp
add
fprem1
mov
out
std
dec
arpl
push
add
xorl
add
cmpsb
add
rolb
shll
mov
push
add
add
add
addr16
add
ficoms
pop
test
jb
mov
mov
add
rcll
and
mov
add
fst
add
popf
clc
insb
sub
add
xor
jecxz
lret
push
add
nop
add
adc
jae
out
dec
xchg
xchg
mov
mov
mov
add
add
add
in
add
or
jno
add
rcll
dec
pusha
add
xorl
mov
add
ret
adc
or
outsl
mov
jo
mov
inc
add
dec
into
push
addb
xor
mov
add
std
and
lret
mov
dec
dec
sbb
popa
out
and
pop
mov
sub
movsl
sbb
ret
jns
jmp
insb
mov
jae
add
or
add
popf
les
mov
stos
push
imul
in
imul
add
add
pop
pop
arpl
in
add
cli
mov
xor
ja
out
jmp
add
pop
jecxz
std
push
add
add
add
jno
and
lret
mov
incl
or
add
je
sbb
pop
lret
addb
add
add
movsb
add
or
mov
aad
add
add
in
mul
icebp
dec
push
popf
or
jmp
add
add
inc
adc
inc
add
jne
inc
add
sbb
cmp
mov
push
add
and
inc
add
dec
dec
lds
mov
movb
popa
dec
scas
repz
jp
decb
push
add
mov
add
lret
inc
add
cmp
add
mov
fcompl
add
mov
add
add
mov
pop
xchg
push
push
clc
pop
pop
test
sti
lods
ja
rolb
or
add
add
xor
out
mov
fwait
roll
or
add
add
cmp
jl
sahf
scas
pop
and
mov
jg
movb
popa
lods
add
push
mov
add
sub
jo
pop
xor
pop
cmp
xor
imul
test
mov
mov
cmp
loope
add
add
pop
aas
mov
add
push
add
add
adc
adc
or
or
xchg
xor
add
pop
push
movsl
xchg
add
xchg
add
dec
fwait
add
stos
js
add
pop
repz
sub
xor
pop
fsubr
dec
cwtl
xchg
ret
add
jne
jno
js
mov
add
add
add
popf
push
xchg
inc
add
xor
add
add
lcall
movsb
add
mov
mov
push
add
mov
addb
sub
add
cld
push
fdivr
ret
outsb
cmp
movsl
into
mov
xchg
aaa
xchg
decl
lock
les
cmp
cmp
aaa
dec
dec
gs
dec
jns
nop
add
xchg
test
xchg
insl
push
dec
xor
add
add
subl
data16
add
add
adc
add
ja
xchg
sub
and
pusha
add
imul
iret
bound
mov
and
mov
add
stos
mov
add
push
add
jmp
add
mov
push
add
mov
dec
test
scas
add
icebp
or
repz
ds
adc
jg
outsl
loope
mov
add
rolb
xchg
push
xor
dec
sub
mov
fwait
dec
mov
pmaxub
add
mov
out
jp
add
mov
repz
mov
pop
fcmovbe
add
test
negl
sbb
outsl
fldcw
ljmp
iret
push
push
dec
cli
call
scas
xor
xchg
add
add
ret
stc
lahf
push
sub
pop
pop
add
lods
cmp
push
add
popa
scas
jge
jb
mov
cmp
mov
add
aam
jb
popa
xor
enter
loop
test
mov
nop
add
push
add
das
xor
cmpsl
aam
addb
add
inc
add
sub
xchg
out
add
inc
add
add
add
add
movsl
dec
nop
add
cmc
add
mov
cmp
fsubp
aam
add
pop
mov
ret
fstps
add
fistpll
sub
push
ljmp
xchg
cmpsl
int3
lds
inc
js
repnz
jl
inc
in
sbb
add
and
mov
test
xchg
add
mov
add
push
and
into
decb
fidivrs
sti
mov
mov
add
aad
movsb
add
sti
adc
push
mov
mov
push
dec
test
or
pushf
in
xor
pop
sub
dec
lret
pop
mov
add
and
mov
dec
xchg
rorl
push
mov
test
pop
sbb
add
mov
add
add
add
add
mov
and
es
or
add
mov
push
add
and
testb
loop
cwtl
lret
pop
imul
mov
addb
add
rolb
pusha
add
dec
fadd
add
addb
stos
repz
addb
cmp
daa
add
dec
and
push
add
xchg
add
add
pop
jp
push
add
mov
movb
add
in
out
repz
add
dec
push
int
and
mov
lods
clc
fnstenv
mov
in
hlt
add
fidivrl
add
sbb
mov
add
cvtdq2ps
fsubl
arpl
add
sbb
add
add
add
xchg
bound
mov
lods
push
add
inc
add
cli
mov
jbe
rolb
imul
cmp
hlt
add
inc
add
in
add
add
add
outsl
ret
rolb
xchg
add
test
das
jp
or
and
add
jns
in
inc
cs
sbb
add
add
lcall
scas
out
add
scas
mov
mov
push
add
ja
push
adc
arpl
add
mov
decb
add
sbb
xor
test
jno
xchg
add
jp
add
and
mov
adc
mov
inc
pusha
add
and
out
std
cmp
insb
add
add
movsl
rolb
jp
add
xor
cmpsl
cmp
add
sbb
xor
fadds
push
ret
add
mov
lea
ja
cli
aad
add
push
fldcw
imul
and
mov
jno
pop
clc
jp
in
xchg
push
rolb
cmc
es
lods
outsb
cwtl
sub
push
sbb
mov
enter
add
add
mov
pop
dec
add
mov
add
xor
mov
add
cmp
xchg
add
insl
js
sbb
pop
xor
add
add
mov
cmpsl
jp
cmp
sbb
adc
jle
push
cmp
mov
add
add
xchg
fisttpl
push
add
repz
mov
out
popa
jno
ja
add
mov
les
mov
add
add
add
mov
mov
test
rolb
fistpll
addb
add
les
adc
dec
push
out
adc
add
xlat
icebp
gs
add
add
inc
add
push
sbb
jge
and
mov
add
imul
add
add
xor
loope
add
out
aaa
jne
js
cmpsb
add
sbb
pop
ja
or
repnz
push
mov
mov
fnstsw
add
pcmpeqd
call
enter
mov
out
xchg
add
add
add
mov
add
mov
les
jno
push
inc
add
mov
pop
cmp
mov
add
mov
mov
and
test
jb
jle
inc
xchg
add
dec
and
mov
aam
insb
lahf
or
daa
popf
and
mov
add
mov
pusha
add
scas
push
bound
mov
mov
push
add
jns
pop
mov
push
add
add
outsl
lret
dec
add
add
push
and
mov
add
push
add
mov
cmp
add
sbb
dec
pop
pop
adc
rolb
cmp
rolb
into
mov
mov
mov
add
iret
sahf
mov
xchg
add
lret
in
jae
add
add
add
inc
nop
add
pushf
testl
mov
mov
adc
add
das
add
test
movb
add
mov
push
jg
xor
mov
add
add
add
add
sahf
imul
mov
dec
jle
mov
add
mov
add
mov
add
imul
call
mov
nop
add
adc
and
loopne
xchg
lods
das
stos
xor
mov
in
mov
adc
add
mov
push
add
pop
test
dec
test
xchg
add
add
and
imul
in
arpl
pop
mov
test
mov
cmpsl
rolb
mov
pop
or
bound
mov
iret
pop
inc
das
orl
cwtl
sub
add
add
rorl
jae
outsl
cmp
add
mov
xchg
add
inc
add
add
add
cmp
add
add
add
add
inc
pop
cli
vmulss
add
push
in
rolb
add
add
mov
or
sti
dec
pop
call
js
cs
add
push
les
aaa
xor
insl
in
dec
mov
add
add
inc
add
add
orl
mov
mov
and
push
add
pop
cmp
mov
push
add
test
add
fisubl
aam
pop
dec
mov
nop
add
jb
ja
mov
fnstcw
clc
adc
lods
das
leave
out
cmp
push
dec
gs
add
sub
or
jnp
dec
pop
sbb
jge
in
les
jbe
cld
jo
cmpsl
pop
xchg
add
add
fwait
test
sahf
std
into
movb
and
push
add
lods
punpckldq
mov
pop
xlat
push
sub
roll
add
add
loop
xchg
add
mov
sahf
push
add
sti
sbb
adc
or
cmp
mov
xchg
pop
add
ficoms
add
add
jo
arpl
lret
add
ss
pop
scas
data16
push
add
dec
fmull
mov
cmp
jne
lods
push
pop
xchg
dec
mov
loop
popa
jge
add
mov
mov
add
add
aas
out
imul
push
mov
add
add
add
jl
cmp
cmpsb
add
add
popa
jp
into
pop
cmp
scas
mov
ljmp
pop
mov
movb
in
ds
adc
jno
loop
jg
add
add
mov
lcall
add
addb
add
mov
add
add
lret
stc
or
add
add
mov
es
jb
and
lcall
addr16
std
loop
inc
add
pop
push
mov
loopne
mov
sbb
sub
sub
add
cmp
mov
pop
out
mov
mov
mov
inc
add
rolb
and
mov
push
mov
xor
mov
add
movl
add
hlt
add
mov
dec
dec
cmpsl
jbe
dec
mov
mov
add
add
mov
out
xchg
add
add
add
pop
mov
pop
divl
mov
add
inc
cmp
xchg
ret
in
sbb
out
add
addr16
add
pop
cwtl
ss
fld
or
adc
lea
fstpl
mov
mov
dec
loopne
mov
sbb
add
cmpsl
or
push
out
xchg
add
mov
add
dec
jbe
movsb
add
add
fldcw
sti
test
push
add
sbb
leave
cmp
jo
cmp
add
sbb
add
insb
insb
mov
subl
mov
push
add
jne
add
sbb
or
xchg
add
add
add
sub
loopne
lret
xor
pop
mov
xor
mov
add
insb
lods
dec
cmp
pop
movnti
mov
add
add
lds
inc
mov
scas
sahf
mov
add
jecxz
add
in
icebp
repz
and
push
pusha
add
add
mov
inc
add
add
call
add
add
in
and
mov
fwait
dec
add
sub
add
rep
lods
jb
loopne
mov
cmp
bound
mov
les
nop
add
add
mov
lds
loopne
lret
xchg
add
pop
sar
adc
es
in
insb
nop
add
sub
add
sub
jae
jb
mov
push
mov
sbb
add
fimull
or
loop
jno
add
and
pop
pop
cltd
inc
cs
mov
pushf
mov
xlat
jle
xchg
add
sub
add
xchg
cmp
loop
jae
in
data16
fisubs
add
add
fidivl
rolb
imul
out
cltd
sahf
out
add
cmc
cmp
mov
cmc
xor
add
iret
mov
mov
and
jae
inc
add
dec
add
and
add
jmp
fldt
rolb
mov
adc
js
push
imul
cmp
frstor
pop
pop
outsl
lret
add
add
add
cmc
lods
jno
push
dec
lds
orl
outsb
loopne
test
ds
xchg
cmpsb
add
add
add
mov
inc
pop
cld
jns
adc
add
jbe
push
out
add
inc
add
adc
pop
push
nop
add
add
fisttpl
add
add
pop
xchg
loopne
enter
ss
xor
pop
sub
add
add
add
sbb
pop
lds
fadds
jg
xor
inc
hlt
add
out
xchg
sub
add
add
add
add
fsubrl
lock
xchg
push
fdivs
loop
xchg
loope
add
add
dec
or
xor
cmp
rcr
testb
sub
push
xor
pop
rcll
add
add
jo
dec
aas
cmp
add
jecxz
sbb
xor
cmp
add
mov
cmp
add
insl
xor
jp
mov
rolb
add
dec
cwtl
or
mov
add
in
jae
imul
xor
push
add
enter
mov
sbb
xor
out
bound
mov
cld
cli
or
dec
add
addb
adc
les
popf
mov
push
add
ds
mov
xchg
add
daa
jbe
leave
mov
inc
fdivrp
data16
add
add
das
cmc
push
add
add
add
mov
popf
sub
cmp
add
out
mov
movb
jmp
sub
push
add
aas
data16
movsl
mov
add
pusha
add
popf
sub
add
ret
filds
jl
mov
pop
scas
push
arpl
in
pop
dec
call
add
add
add
jge
add
add
ret
add
cmp
xor
sub
insb
sub
or
add
je
xor
ret
add
add
dec
pushf
js
repz
add
add
sub
mov
into
cmp
inc
jne
pop
mov
add
loopne
shr
ret
inc
dec
out
and
jge
mov
lret
scas
mov
mov
cld
mov
inc
inc
cmpl
xchg
add
pop
movsl
cld
movsb
add
sub
mov
jne
add
or
repz
mov
add
and
mov
test
loopne
jmp
sbb
mov
gs
sub
add
mov
pop
pop
mov
add
mov
rorl
cmp
add
test
mov
cltd
cltd
das
adc
jecxz
adc
test
stc
mov
or
mov
clc
cld
adc
mov
add
add
add
clc
fsubr
stc
add
add
or
add
loopne
pop
icebp
js
scas
add
add
add
add
cmpsb
add
hlt
add
sarl
jge
or
sbb
add
ljmp
std
test
add
add
addr16
out
enter
mov
add
add
test
jbe
out
cmp
sbb
insl
ja
add
add
mov
sbb
cmp
add
xor
pop
add
fnsave
sbb
inc
add
mov
movb
add
testb
add
push
aam
in
movb
mov
dec
add
pop
mov
mov
push
add
repnz
cmp
cmpsl
js
add
into
xchg
or
loope
mov
dec
ret
jp
lock
inc
add
cli
pop
in
and
xor
popa
mov
rolb
xor
add
inc
mov
sub
xchg
les
lcall
xchg
sbb
call
addb
dec
xchg
add
pop
mov
add
or
add
in
sub
daa
sbb
xchg
dec
fucomi
lock
popa
outsl
test
sub
sub
mov
add
add
lea
add
xchg
std
add
mov
aas
insb
rolb
popl
out
aas
pop
cltd
push
push
push
add
add
test
ds
ret
pop
inc
add
push
inc
add
ds
in
add
mov
pushf
daa
lds
mov
xchg
pop
repnz
ficoms
pop
sub
jbe
inc
out
ret
dec
scas
cld
and
add
add
jmp
cmc
mov
add
ljmp
add
inc
push
sbb
and
imul
add
mov
adc
gs
sti
add
mov
js
add
mov
shrl
inc
dec
pop
jb
scas
mov
pop
stos
loope
lret
std
popl
stos
add
or
sub
add
add
add
cs
inc
add
mov
add
mov
jbe
ret
inc
add
sub
inc
add
add
add
add
rolb
or
jo
mov
mov
add
add
add
add
cmp
into
int3
sbb
bswap
dec
mov
in
push
push
jp
add
xchg
add
add
add
pop
scas
pop
add
das
mov
mov
jmp
mov
add
add
add
add
push
add
add
fldl
add
xor
mov
add
out
cli
or
adc
out
gs
addb
testb
add
sti
movsl
jge
inc
add
js
add
add
push
add
jmp
hlt
add
add
sub
add
add
cmp
lahf
xor
inc
cmc
outsl
les
xor
out
lcall
add
inc
jle
sub
inc
push
add
add
jns
xor
stos
mov
xlat
or
add
mov
mov
pop
testb
push
add
add
cmpsb
add
lods
add
out
test
mov
mov
jo
imul
loope
adc
jle
mov
outsl
mov
add
testb
shll
xchg
add
mov
repz
xchg
add
jg
pop
pop
mov
mov
add
push
add
inc
add
repz
add
add
mov
adc
lahf
jo
in
mov
add
inc
add
add
lods
and
mov
mov
and
out
imul
add
and
cmp
push
in
jl
rolb
test
data16
and
mov
jle
lret
dec
cwtl
push
and
mov
scas
adc
mov
fldl
add
mov
jle
cld
ret
scas
and
pop
jns
push
add
mov
add
stos
out
cmp
jg
pop
mov
mov
or
lret
jno
test
pop
daa
rolb
inc
add
cmp
mov
dec
add
movsl
mov
cmp
add
or
add
mov
incl
mov
mov
add
test
addb
or
mov
add
ds
into
jle
jns
add
mov
add
jecxz
add
icebp
xchg
add
add
xchg
push
push
enter
xchg
test
jno
add
jae
mov
mov
mov
pop
pop
push
push
add
add
decl
or
fiadds
out
pop
sti
push
lods
mov
sahf
sub
lea
pop
je
and
mov
pop
iret
bound
mov
pusha
add
mov
cmpsl
movb
pop
test
testb
inc
popa
sub
les
mov
pop
jo
xchg
fmull
pop
inc
push
aad
jnp
add
mov
mov
add
inc
add
dec
lods
push
push
add
xchg
xor
aam
int
add
fsts
bound
mov
lock
hlt
add
call
int
mov
dec
cmp
add
add
add
fcoml
dec
jbe
push
add
mov
push
add
sbb
testb
out
sbb
lret
sub
lret
jmp
or
addb
or
add
popa
into
pop
and
cwtl
push
add
cmc
push
push
movsb
add
dec
add
jecxz
xchg
daa
sti
rolb
mov
or
add
add
xor
loopne
pop
pop
iret
inc
addb
addr16
xchg
add
or
xor
into
stos
aaa
test
xchg
jbe
jle
outsb
inc
add
daa
inc
add
sbb
sbb
lock
or
pop
pop
or
add
push
add
std
imul
or
xchg
add
imul
insl
xchg
jo
test
inc
add
imul
jae
mov
sub
popa
lods
maskmovq
enter
add
add
aad
inc
add
or
add
inc
add
std
mov
adc
insl
dec
xor
xor
and
mov
xlat
int
and
gs
jno
add
add
inc
push
add
je
mov
out
add
arpl
mov
add
arpl
cld
cmpsb
add
arpl
mov
push
add
push
mov
pop
outsl
pop
push
add
push
into
daa
addr16
cmp
pop
inc
add
jmp
jg
fwait
repnz
add
sub
xchg
mov
dec
add
add
bound
mov
add
mov
add
mov
orl
mov
mov
jmp
jg
jp
add
push
lea
dec
lret
fldenv
xor
ret
fistps
pop
add
mov
add
mov
dec
fbstp
add
shrl
add
dec
jle
and
push
add
pop
sahf
movl
dec
mov
add
adc
ss
jo
xchg
cmpsb
add
mov
jbe
int
push
xchg
pop
sbb
add
pop
lods
fwait
xchg
and
mov
dec
movsb
add
sbb
cwtl
cmpsb
add
add
cs
add
pop
inc
ljmp
dec
rolb
lods
mov
mov
loop
cld
dec
xchg
push
add
cld
push
xchg
add
lret
xchg
add
inc
add
pop
xchg
mov
add
mov
js
les
ret
mov
rolb
loopne
in
call
add
les
and
aaa
mov
add
xchg
add
and
add
add
scas
fdecstp
add
in
xor
pop
adc
mov
inc
dec
idivl
add
jp
rolb
or
add
and
repnz
mov
in
xlat
int3
ret
int
stc
rolb
jb
and
iret
pop
push
arpl
xchg
cmp
and
pusha
add
dec
add
divl
add
sbb
add
pushf
sahf
push
call
add
das
sbb
or
cmp
xchg
aaa
push
out
lds
add
add
and
jb
cmc
popa
jecxz
jl
test
jo
adcl
dec
inc
jl
int3
enter
pop
addr16
fidivrs
add
xchg
loopne
pop
xchg
add
test
and
mov
add
sub
add
mov
xor
add
call
xchg
add
jmp
or
idiv
mov
push
fsubrs
sahf
inc
jmp
pop
dec
adc
pop
mov
rolb
add
push
jo
shrd
adc
or
je
push
out
repnz
imul
push
mov
shl
add
mov
testb
in
out
add
mov
and
fsubrp
or
lds
add
mov
rcrl
ret
add
add
xchg
mov
daa
testb
push
add
mov
loopne
mov
mov
stc
mov
fildl
add
jnp
add
add
add
in
add
mov
inc
inc
add
cs
add
pusha
add
pop
jle
add
add
add
add
std
ja
arpl
sbb
pop
cmp
cmp
outsl
fnstsw
xchg
pop
icebp
and
cmp
add
xchg
adc
mov
pop
inc
cmpsl
xchg
xchg
outsb
mov
mov
loop
pop
sahf
call
std
mov
pop
insl
lea
jge
dec
adc
inc
add
sbb
inc
add
popa
xor
mov
push
add
add
add
add
addb
add
add
dec
ja
pop
stos
xchg
push
add
add
inc
in
lds
add
nop
add
mov
xlat
rolb
add
cmp
pop
imul
sbb
test
insb
imul
add
in
inc
popa
mov
test
mov
stos
dec
or
clc
cltd
testb
push
add
inc
add
add
jo
push
jno
cmp
int
dec
movaps
data16
cwtl
ret
add
add
std
dec
mov
sbb
mov
add
out
aam
sbb
rolb
or
movsl
inc
add
xor
add
andl
sub
xchg
pop
add
mov
pop
or
pop
movl
add
add
add
sti
add
ret
adc
ss
dec
aam
jmp
mov
test
add
add
inc
add
add
add
mov
xchg
add
add
imul
out
imul
aas
pushf
sub
add
and
push
add
stos
ret
imul
mov
sbb
stos
in
stos
jmp
sub
push
aas
jp
mov
sub
outsb
lea
inc
pusha
add
jp
xchg
inc
add
cli
add
clc
mov
add
movsl
addb
js
imul
faddp
add
add
adc
or
lret
in
dec
jecxz
lock
adc
dec
bound
mov
add
fisttpll
jge
push
stc
sbb
in
cmp
add
insl
test
inc
add
or
das
fimuls
sbb
add
mov
jl
dec
push
cwtl
popf
pop
call
fcomip
imul
sub
xor
jnp
stos
push
inc
add
repnz
xor
jp
test
int
add
sub
icebp
mov
add
fisubs
xor
arpl
or
push
add
ljmp
out
in
fcoml
pop
mov
cwtl
xor
pop
outsb
ffree
add
push
jno
xor
fstps
sti
jmp
add
add
lea
lret
add
mov
neg
jecxz
aas
mov
mov
lcall
sub
add
inc
add
mov
add
scas
test
pop
lret
cs
mov
add
jmp
cmp
mov
in
pusha
add
jb
sub
int3
addr16
pop
mov
push
add
xchg
add
jmp
bound
mov
xor
dec
xor
push
add
add
not
add
add
aam
cmp
add
int
loope
adcl
cltd
add
add
ss
call
add
jae
add
add
inc
add
fimuls
outsb
cmc
popl
add
add
mov
add
push
add
add
nop
add
pop
inc
add
in
xchg
add
add
add
mov
adc
mov
cmp
mov
add
inc
hlt
add
mov
mov
add
mov
jmp
add
mov
add
test
add
shll
ljmp
cld
pop
xchg
add
in
cli
cmp
inc
dec
stos
in
cmp
sub
lds
outsb
nop
add
rolb
mov
xor
jge
and
mov
pusha
add
inc
add
xor
test
cmp
add
xchg
add
add
rolb
ja
nop
add
add
movb
or
into
mov
imul
push
lret
xor
les
fsts
add
pushf
cmpl
add
sub
jae
add
cs
iret
cwtl
sub
test
addb
inc
aam
push
add
jmp
push
sbb
and
xchg
sbb
add
add
mov
xchg
add
iret
inc
add
scas
xchg
add
add
mov
fwait
rolb
lods
push
add
add
in
jne
cmc
rolb
inc
daa
popa
int3
push
adc
pop
and
xchg
mov
add
stos
and
dec
xor
inc
sbb
xor
pop
pushf
cmpsb
add
movsl
xor
jl
cmp
xchg
add
jo
fisttpll
in
push
loop
mov
addb
je
jge
add
add
rolb
inc
add
add
mov
mov
lcall
mov
and
mov
cwtl
mov
jp
icebp
push
add
xor
jns
add
or
add
fdivr
and
push
add
ret
ds
add
push
mov
add
add
add
mov
lea
aad
in
add
test
add
mov
add
jge
inc
add
mov
mov
push
add
lods
gs
mov
add
mov
jmp
push
mov
xchg
dec
push
in
push
add
add
xchg
lcall
sub
add
cmp
jo
das
push
add
mov
add
dec
push
pop
mov
lds
inc
add
push
add
decl
and
jbe
rcrl
add
imul
jmp
add
sbb
iret
fwait
outsl
out
push
add
mov
inc
sbb
add
cltd
aam
loopne
pusha
add
add
repnz
imull
pusha
add
cmp
xor
test
and
enter
add
mov
mov
jnp
add
enter
dec
dec
test
mov
jne
jns
mov
cmp
or
add
lods
and
and
mov
mov
fsubs
cs
out
test
cmp
jmp
add
mov
mov
xchg
add
inc
add
push
lea
out
lods
std
out
std
stc
nop
add
fistl
in
push
sub
cmp
stos
rolb
adc
mov
mov
pop
in
sti
push
add
mov
and
rolb
mov
jg
jg
add
xor
add
outsb
jns
inc
cmp
inc
jle
add
movb
jns
add
or
jg
jmp
repnz
add
mov
pinsrw
dec
sub
dec
sahf
jnp
add
dec
movsl
mov
outsb
int3
or
cwtl
mov
stos
jo
fisubs
lret
sub
rolb
aaa
movb
cwtl
push
add
add
in
push
add
lods
add
mov
add
xchg
jne,pt
lcall
rolb
call
xchg
xchg
std
sti
and
fwait
adcl
mov
jb
pop
sbb
dec
jne
pop
mov
stos
bound
mov
loop
out
xchg
add
or
das
dec
gs
mov
insb
js
rolb
add
add
mull
xchg
cmp
dec
nop
add
mov
movb
mov
mov
add
cmp
shll
push
add
add
shl
cmc
add
xchg
loope
pop
in
or
add
push
lods
mov
or
pop
mov
daa
aaa
scas
jo
dec
jge
add
std
or
add
in
aas
int3
idivl
mov
mov
dec
test
lods
mov
xor
cld
mov
dec
push
lods
outsl
add
lods
dec
dec
scas
aaa
push
add
nop
add
mov
add
nop
add
add
jmp
sub
test
jb
mov
insl
add
mov
clc
dec
js
insl
and
stc
cs
addr16
add
sub
xor
jbe
push
enter
je
ds
rcll
cmpsb
add
add
add
jmp
add
int
fstpl
les
loop
je
mov
and
out
sub
and
mov
mov
or
jno
mov
addb
ret
rolb
push
add
sub
lods
cmove
ficoms
add
and
mov
daa
movb
add
add
jbe
and
mov
adc
enter
add
add
add
pop
xor
mov
les
or
xchg
add
and
cmp
add
push
add
in
stos
ficompl
add
in
inc
cmp
add
mov
jbe
mov
fldenv
add
add
pushf
and
pop
out
daa
ljmp
dec
push
xor
add
push
pop
jo
dec
adc
add
test
fcmovnbe
jns
add
cmp
pop
in
add
das
fnsave
cmp
sbb
insl
lods
sub
in
lods
and
scas
jle
mov
add
jecxz
pop
int
inc
add
rol
add
in
add
add
das
testb
sbb
fcoml
mov
aam
push
add
sahf
cmp
fisttpl
mov
addr16
add
mov
sbb
add
je
mov
push
les
pop
mov
mov
xchg
add
cld
repnz
jge
hlt
add
add
dec
pop
sbb
lret
pop
mov
loopnew
xor
fwait
addr16
add
jae
sub
add
push
cmp
adc
bound
mov
repnz
dec
push
ja
insl
in
iret
fildl
add
faddl
add
mov
add
pop
mov
push
cmp
orl
lret
leave
popa
push
test
shr
call
add
mov
push
xor
and
or
add
pop
jmp
popa
xor
add
add
mov
xchg
xor
sbb
sbb
mov
or
add
push
xor
xor
lret
les
popf
inc
add
fwait
mov
imul
add
add
add
add
add
movsl
xor
xchg
xchg
jns
andl
bound
mov
xchg
add
sub
fldt
in
shll
push
rolb
cmp
mov
xor
push
sbb
ja
aas
ja
add
mov
add
mov
fists
add
clc
addb
push
mov
adc
in
adc
pushf
into
mov
and
mov
mov
mov
sbb
add
out
rorl
call
scas
push
rolb
and
mov
test
jb
sbb
mov
xchg
add
add
inc
fwait
in
adc
mov
add
pop
hlt
add
jp
mov
add
insb
iret
in
xchg
mov
testb
pop
rorl
pushf
aas
clc
sti
mov
inc
rolb
rolb
lea
int3
call
call
add
icebp
negl
xor
mov
jbe
imul
add
mov
or
mov
movb
add
push
add
pop
pop
sub
add
cmpl
mov
add
mov
jge
push
add
sbb
dec
cmp
mov
and
mov
or
js
push
add
mov
popa
xorl
add
sti
jno
fstpl
mov
mov
add
push
xchg
jl
xchg
add
jp
add
or
mov
cmp
add
in
sub
rolb
loope
aaa
daa
push
jbe
mov
cwtl
cmpsb
add
inc
add
mov
fdiv
add
call
add
cmp
mov
mov
popa
test
xchg
lret
sub
mov
mov
rolb
push
add
fisubs
clc
mov
add
data16
sbb
mov
xchg
and
mov
jp
test
stos
inc
add
add
jne
aad
add
add
fisttps
rcll
faddl
add
out
bound
mov
add
cwtl
fcoml
repz
pop
sub
add
and
outsb
add
add
movsb
add
cwtl
jnp
add
add
add
jno
addb
add
into
jmp
and
insb
pushf
xchg
leave
aas
lret
inc
add
sahf
stc
nop
add
cmp
xchg
add
add
dec
test
out
cmpsb
add
xor
adc
pop
dec
inc
add
add
dec
pop
or
cmp
sbb
cmp
outsl
stc
imul
rolb
sub
jo
hlt
add
lods
inc
std
stos
int3
mov
mov
sahf
cmc
aam
int
inc
cli
add
mov
aad
add
aaa
cld
cli
adc
add
mov
adc
cmp
mov
add
mov
jbe
data16
popa
xchg
add
mov
add
add
mov
mov
outsb
adc
add
mov
add
xchg
out
cmpsl
dec
xchg
pop
lahf
fsubrs
pop
xchg
add
mov
mov
add
inc
arpl
inc
add
mov
fadds
xchg
sarl
add
add
jp
add
mov
xchg
aaa
adc
add
push
sub
and
int3
aaa
sbb
add
sbb
add
inc
out
jbe
fucomi
icebp
xor
pop
mov
iret
loope
aad
pop
xchg
mov
add
xchg
add
push
add
addb
add
dec
enter
icebp
stc
mov
jns
xchg
test
std
gs
jecxz
jmp
add
xchg
fistps
in
add
popa
aam
xlat
icebp
in
jb
dec
das
mov
ret
xchg
add
adc
adc
std
movsl
in
icebp
xchg
test
addb
nop
add
sti
mov
out
xor
ds
sbb
add
add
add
addl
push
sbb
pop
inc
add
mov
mov
add
jnp
add
push
adc
mov
add
add
xor
sarl
fmul
daa
dec
sbb
addb
add
push
add
add
add
ss
bound
mov
xor
inc
xor
mov
push
pop
inc
jns
lret
leave
inc
add
lret
outsb
sub
add
add
scas
inc
std
pop
xchg
lcall
nop
add
mov
dec
ljmp
mov
mov
clc
repnz
add
mov
add
push
jno
add
stos
mov
fimuls
add
adc
mov
stos
mov
xchg
jno
pop
xor
stos
push
add
cmp
loop
mov
loope
sti
ds
sbb
add
pop
rolb
mov
xchg
dec
rcrl
test
cld
add
mov
mov
imul
das
data16
cwtl
xchg
outsb
aad
push
add
insl
stos
push
push
add
jl
jmp
shrl
add
add
dec
ds
pop
xchg
xchg
add
add
rcll
out
push
and
mov
sti
in
sub
add
jg
add
jb
loopne
into
lahf
int
scas
push
sbb
add
data16
cmpsl
and
xchg
push
add
jnp
add
dec
jb
arpl
mov
cmp
popf
dec
sub
sbb
add
mov
leave
sahf
cwtl
fwait
pop
add
pop
mov
insl
mov
lock
imul
xchg
lds
and
mov
lods
adc
test
addr16
and
movb
sub
add
sub
out
jnp
add
xchg
push
add
cmp
in
add
mov
and
js
mov
call
sbb
push
add
mov
add
pop
bound
mov
cmp
sbb
add
inc
add
mov
popa
jae
out
and
mov
mov
sub
add
mov
add
mov
sub
inc
pop
jnp
ds
out
fsubrp
and
mov
add
sbb
mov
adc
std
outsb
hlt
add
xchg
insb
rolb
or
mov
xor
jno
int3
aaa
into
sub
sub
jno
add
cmpsb
add
add
pushf
add
aad
add
xchg
add
xchg
bound
mov
xlat
push
add
inc
sub
pusha
add
imul
aam
fnstsw
add
mov
add
mov
add
push
add
push
add
add
testb
add
add
add
pop
mov
je
dec
jecxz
dec
push
jno
add
add
fwait
mov
xor
fwait
lcall
leave
sbb
imul
ret
testb
cmpsl
repz
mov
cmp
or
push
add
sbb
and
add
add
mov
inc
add
adc
fnsave
add
add
add
mov
das
pop
testb
loope
mov
xchg
fnsave
inc
add
and
out
repnz
xchg
testb
mov
scas
daa
adc
sbb
inc
add
mov
push
in
into
xor
sbb
adc
pushf
test
pop
pop
test
add
hlt
add
in
add
dec
dec
and
mov
or
add
daa
stc
push
xlat
sub
cmp
hlt
add
add
jbe
lcall
cmp
push
add
add
scas
repz
dec
out
ficoms
add
ret
lcall
fsubr
adc
hlt
add
dec
adc
xor
or
pop
aad
add
pop
fisubrs
movsb
add
nop
add
mov
add
dec
sbb
push
add
mov
std
dec
shl
add
mov
cmp
xchg
xchg
sub
cmp
out
stc
xchg
mov
ret
xchg
add
and
mov
mov
ds
add
sub
mov
or
addl
cs
add
ret
add
sbb
add
sub
add
iret
int
add
movsl
xor
stc
push
add
lcall
mov
movsl
nop
add
pop
leave
push
add
cmp
add
lcall
xchg
nop
add
sub
adc
add
push
add
aas
pusha
add
mov
testb
add
mov
stc
mov
out
dec
mov
hlt
add
movb
cli
std
sbb
aaa
mov
jne
dec
sbb
addb
cmp
mov
insl
insb
adc
inc
add
add
mov
imul
idivl
mov
add
ja
arpl
or
xchg
std
adc
pop
pop
jns
cltd
mov
imul
xchg
fldcw
test
adc
and
inc
imul
data16
mov
iret
pop
push
add
jno
push
add
sub
add
add
jb
mov
aaa
dec
sti
mov
mov
add
add
add
fildl
rcll
add
xchg
add
add
cwtl
cmpsl
icebp
inc
add
popa
orl
clc
rolb
aad
adc
loopne
mov
aad
sbb
addb
dec
inc
add
add
mov
leave
inc
mov
add
push
jle
mov
jbe
mov
pop
dec
or
test
enter
mov
mov
pop
nop
add
and
pop
mov
and
mov
movsl
mov
fistpll
rcll
addb
in
inc
add
lret
adc
stos
cmp
add
add
add
aas
insl
movb
out
pop
add
add
cmp
add
notl
add
xor
mov
add
pop
sbb
nop
add
and
sub
add
rolb
jp
pusha
add
sbb
add
add
jne
imul
add
jmp
jecxz
jbe
nop
mov
jae
mov
hlt
add
rorl
stos
lea
and
enter
add
pop
sbb
mov
add
add
add
or
inc
or
out
std
add
mov
jns
add
addb
sti
data16
mov
add
adc
mov
jae
sahf
outsb
in
and
mov
in
add
pop
mov
leave
les
dec
jo
sub
xor
add
add
xchg
cmp
add
add
push
mov
add
cld
mov
add
fnsave
test
add
ss
xor
inc
pop
loopne
fstpl
and
mov
mov
add
mov
inc
add
sbb
add
add
push
add
xchg
sbb
jecxz
call
add
add
dec
les
bound
mov
sahf
and
rolb
xor
add
add
and
out
fadd
add
add
add
sbb
das
jb
out
inc
add
or
mov
add
cmp
mov
jns
xchg
or
add
add
add
rolb
add
mov
mov
ljmp
mov
cmp
add
mov
lea
pop
xlat
fmuls
lea
pushf
je
sub
add
add
add
or
int
mov
mov
int
jecxz
push
add
cli
dec
rolb
and
mov
int
add
rolb
mov
lea
add
data16
mov
lods
add
addl
mov
mov
pushf
jecxz
dec
pop
in
cmp
cmp
jmp
jnp
xchg
add
jmp
or
dec
jmp
nop
add
icebp
inc
add
mov
movsb
add
add
movb
pop
jnp
jmp
add
jle
xor
jno
cmpsb
add
push
add
jno
popf
shl
mov
add
cmc
out
addb
add
add
add
addb
push
sbb
push
inc
dec
dec
iret
in
sub
sbbl
mov
add
cmp
cmp
or
mov
sub
sub
fldcw
jns
cmp
das
sub
add
adcl
mov
add
cmp
sub
add
mov
jae
add
mov
mov
mov
aam
mov
jae
lds
add
add
and
xor
scas
fldt
add
dec
movsl
xchg
pop
insb
inc
add
push
add
test
xor
into
insl
jg
sbbl
out
call
add
push
add
add
add
push
ret
inc
cmpsb
add
das
lret
ljmp
dec
shll
inc
outsb
cmp
int3
ret
mov
cmp
cltd
ret
add
mov
int
sub
add
gs
add
add
dec
dec
leave
sti
cli
jae
inc
pop
mov
loope
arpl
aam
cmp
sub
in
add
mov
sbb
add
fisttpl
rolb
imul
mov
mov
pushf
add
sbb
cli
fisubl
add
pusha
add
mov
push
push
add
add
mov
aaa
inc
cmp
std
sbb
add
mov
xor
cmpsl
fwait
mov
sub
ja
add
xor
arpl
push
add
fcmovbe
add
and
xor
rcll
add
ficompl
bound
mov
pmaddwd
fildl
sub
cmp
or
pop
in
push
add
lret
mov
inc
add
add
add
add
add
add
mov
xchg
add
in
add
hlt
add
in
add
add
cmp
in
fnsave
mov
add
movb
shll
and
mov
jp
cli
outsb
mov
add
sbb
les
cmp
jbe
mov
push
add
lods
addb
mov
add
mov
mov
mov
sahf
outsl
repnz
add
sbb
add
add
mov
lcall
imul
pop
mov
push
xchg
add
inc
add
push
add
mov
ret
ljmp
testb
mov
push
xor
jb
mov
cmpsl
dec
jmp
call
popf
or
cltd
mov
jae
popa
cmp
cmp
int
les
sub
inc
mov
lods
push
insl
ja
add
add
mov
push
add
inc
add
push
add
add
add
add
popa
mov
pushf
outsl
dec
in
or
test
cli
mov
xchg
add
add
cmp
sub
add
mov
leave
movb
dec
jo
jne
fwait
dec
je
cs
jge
add
iret
ja
push
add
jae
mov
dec
push
add
mov
shrl
add
xchg
or
mov
mov
and
xor
rolb
add
xor
add
in
mov
xchg
sbb
fyl2xp1
jns
push
mov
nop
add
jb
or
add
mov
mov
adc
push
add
add
add
sti
push
nop
add
mov
mov
sub
add
mov
jbe
stos
jo
cwtl
ret
add
fsubr
cmpl
add
xchg
cld
cs
jne
jns
sbb
lods
call
jae
add
jne
add
add
xchg
sbb
or
pop
jmp
adc
adc
jmp
iret
pusha
add
mov
mov
add
add
icebp
repnz
stc
inc
add
inc
filds
vmovupd
sbb
inc
add
sahf
xor
movsl
insl
loop
jno
add
inc
adc
ret
repz
mov
test
push
add
add
push
movsb
add
pop
ja
inc
add
xchg
add
inc
fwait
ja
xchg
adc
add
loopne
addl
cmpsl
dec
push
add
add
add
inc
push
add
rolb
jae
jl
sbb
inc
add
add
add
mov
lods
lods
add
mov
add
sti
pop
push
add
and
mov
inc
mov
mov
add
movl
fimull
andl
add
rorl
add
sbb
mov
add
add
add
xchg
add
mov
ljmp
jo
cmpsb
add
pop
jg
add
add
aad
testl
add
mov
add
sbbl
mov
mov
shll
add
pop
fldt
mov
enter
and
mov
push
add
push
add
pop
xchg
add
inc
or
aaa
jnp
mov
popa
dec
push
add
xchg
add
mov
add
inc
pop
lock
add
mov
adc
gs
les
imul
mov
add
mov
sub
add
xchg
sbb
cmp
ljmp
push
mov
jae
add
inc
add
cmp
or
jmp
add
sbb
cmp
out
jecxz
js
out
add
add
adc
and
jae
cmp
or
mov
jmp
les
mov
mov
add
add
xchg
add
in
addb
or
add
roll
mov
jg
inc
add
push
cmp
add
mov
add
add
mov
cmp
shll
int
cmpsb
add
add
jl
mov
cmc
push
add
add
jge
aad
std
loop
addb
icebp
xchg
add
mov
pop
cltd
mov
mov
je
mov
add
mov
data16
add
push
ficoms
sti
mov
add
pop
cmp
outsb
push
add
add
pushf
negl
mov
insl
js
cmp
add
and
ret
ret
out
cli
dec
fisubrl
hlt
add
repnz
ja
pop
pop
push
mov
cmp
fwait
das
mov
add
stos
sti
sbb
push
add
add
sub
pop
and
xor
jns
add
sti
inc
add
lcall
add
add
push
pushf
aaa
xor
and
add
mov
xlat
mov
lahf
jbe
testb
or
cmp
mov
hlt
add
popf
clc
in
push
add
or
adc
rolb
scas
rolb
cmpsl
hlt
add
add
add
mov
rolb
add
inc
add
add
pop
rolb
cmpsb
add
push
jle
add
xchg
sbb
or
mov
ret
add
testb
mov
push
add
add
rolb
push
mov
xor
call
fsub
add
push
popa
subl
inc
add
inc
add
test
adc
cmpsl
mov
add
addb
xor
clc
fidivl
add
add
mov
je
xor
sub
or
and
mov
add
push
stc
movsl
fildll
adc
add
fsincos
andl
add
mull
sbb
pop
xchg
jb
inc
add
xor
adc
cmpsl
mov
repnz
jecxz
mov
push
add
cs
pop
clc
ficompl
pop
rolb
mov
add
sbbl
sahf
or
mov
lahf
mov
rcr
mov
int
sub
inc
out
cmpsl
xor
mov
pop
add
mov
pop
add
jbe
mov
mov
out
or
imul
add
std
pop
xchg
push
dec
cmp
pop
int
jp
sahf
sub
adc
push
test
mov
add
add
add
adc
jnp
add
shll
add
cmp
testb
clc
mov
test
nop
add
into
cmp
add
add
jl
loop
and
mov
add
jp
add
pop
mov
mov
xor
xor
ja
insl
mov
add
xchg
in
mov
pop
out
daa
push
jb
cmc
lret
scas
adc
loop
or
sbb
add
popf
cmp
xor
pop
icebp
pop
dec
sbb
add
add
addb
dec
jp
mov
or
int3
enter
mov
ret
stos
addb
adc
imul
add
pop
push
add
add
mov
xlat
push
push
add
daa
in
in
loop
mov
nop
add
pusha
add
dec
xchg
popf
dec
or
int
call
adc
pop
mov
inc
add
cmp
scas
pop
cmp
sbb
xor
clc
mov
inc
add
pop
loope
add
add
add
mov
xchg
cld
push
add
inc
add
mov
xchg
sbb
add
sbb
add
add
sub
sbb
add
sbb
add
or
mov
ja
xor
pusha
add
mov
stos
lea
mov
pop
testb
xchg
add
mov
add
or
dec
pop
adc
jb
jg
add
mov
sbb
insl
dec
adc
jb
popa
xchg
leave
or
add
cmpsl
jno
rolb
lods
dec
push
pop
cwtl
jbe
push
add
add
sbb
addb
add
roll
add
imul
add
add
pop
arpl
add
xchg
add
test
pushf
lods
mov
aad
add
mov
or
ja
mov
dec
fisttps
mov
ficompl
mov
add
out
cmpl
add
mov
ret
fsubr
and
adc
fwait
add
jg
mov
mov
icebp
push
add
jp
adc
add
or
mov
inc
jbe
in
aaa
mov
add
mov
movb
addb
js
inc
mov
mov
mov
sub
add
and
mov
int3
push
add
inc
add
jb
addr16
add
pop
aam
sahf
mov
in
add
add
lahf
outsl
cmpsl
rolb
subl
seto
scas
jo
adc
jnp
pop
dec
mov
pop
jne
in
pop
push
add
add
in
leave
loop
add
mov
mov
add
add
xchg
mov
loopne
pop
das
push
repnz
add
push
shll
xor
xor
inc
mov
mov
xchg
add
rolb
or
insl
addb
add
add
add
add
fwait
addb
mov
cmpl
jbe
popa
and
xchg
popa
xchg
fisubrs
add
and
fcompl
leave
push
add
aas
movsl
repnz
add
in
xor
cwtl
fdivrs
dec
dec
mov
fbstp
add
add
jnp
dec
in
pop
bound
mov
stc
movsb
add
add
mov
add
inc
add
add
xor
push
sbbl
out
mov
cmp
add
mov
add
pop
ds
adc
out
add
flds
fwait
out
add
nop
add
lahf
xchg
sahf
jmp
xchg
jno
adc
into
xor
xor
inc
add
rolb
sbb
jmp
add
add
add
add
mov
sub
mov
in
or
rcrl
add
push
add
xchg
ljmp
sub
and
add
and
add
les
add
popl
pop
push
pop
enter
push
add
pop
pop
dec
popf
cmp
add
test
testb
stos
fwait
sub
push
es
add
add
cltd
leave
mov
fiaddl
add
add
add
mov
les
cmp
mov
add
xchg
ret
fstp
xchg
fldcw
movb
mov
adc
inc
add
lea
test
lahf
push
add
xchg
add
xchg
xor
popf
lods
or
mov
sub
nop
add
add
or
add
lods
inc
add
add
add
fld
add
imul
mov
or
fidivl
add
out
mov
jle
rolb
scas
mov
add
fstpt
inc
mov
dec
push
add
jno
xor
ja
add
dec
inc
add
cli
jl
add
jmp
sub
jl
lcall
scas
pop
aas
je
rolb
ffree
mov
add
add
add
add
inc
aad
mov
outsl
cli
in
test
add
loopne
inc
push
add
cs
pop
cwtl
scas
cs
subl
add
movsb
add
add
add
rolb
or
jnp
out
ret
cmp
in
add
or
idivl
dec
rolb
pushf
jae
dec
jmp
outsb
movb
ljmp
inc
scas
jno
out
pop
popa
inc
mov
sbb
dec
bound
mov
jno
out
stos
inc
jecxz
add
xor
inc
add
cli
rolb
ret
inc
sub
mov
ret
xchg
in
imul
xchg
add
mov
add
das
ljmp
shll
and
dec
jno
xchg
dec
jb
jnp
mov
and
mov
and
add
add
push
add
add
jbe
push
add
mov
mov
mov
jmp
rcrl
add
shll
add
add
push
add
mov
imul
ljmp
jmp
add
push
add
cmc
fdivrp
repnz
or
add
xor
xor
test
idiv
cmpsb
add
mov
outsb
sahf
sub
add
lods
and
addb
add
scas
xor
movsl
lds
hlt
add
testb
xlat
lock
add
cmp
pushf
mov
inc
add
xor
push
icebp
sbb
mov
fldenv
sbb
add
test
mov
and
mov
lret
or
lret
out
popa
ljmp
mov
sub
scas
and
mov
add
add
fstpl
mov
add
push
pop
inc
sub
stos
cmpsl
js
push
add
addr16
xchg
add
jmp
add
add
int
or
out
inc
add
in
test
rolb
jecxz
negl
lods
inc
add
dec
clc
iret
scas
mov
pop
inc
add
add
add
mov
xchg
add
push
add
xor
add
loope
xchg
add
fstl
loope
cwtl
inc
pop
data16
mov
pop
out
adc
add
xchg
add
rcr
jns,pn
adc
dec
add
xor
addr16
add
add
mov
orl
add
mov
ja
add
add
add
mov
and
mov
cmp
dec
mov
xchg
sti
pop
mov
roll
lods
mov
push
add
add
addb
add
notl
add
movb
add
add
lock
lahf
dec
or
xchg
add
lret
sub
out
out
push
add
data16
add
jns
addb
add
je
jp
add
pop
lods
mov
add
sbb
inc
push
add
add
pop
adc
popf
adc
inc
add
lea
add
repz
add
scas
xchg
and
add
sub
cmp
adc
xor
test
mov
leave
push
add
add
fidivrl
icebp
xchg
movsl
stos
mov
inc
add
fidivs
mov
or
jae
cmc
fnstcw
data16
mov
push
jbe
dec
sti
or
mov
add
mov
data16
add
cmp
loopne
add
cmc
add
push
add
mov
add
iret
inc
popf
insb
add
add
mov
stos
std
push
xchg
mov
icebp
inc
and
sarl
inc
add
aad
leave
pop
pop
lret
pop
push
add
add
add
fs
add
ss
add
xchg
les
insb
sub
enter
ja,pn
add
xchg
cltd
inc
add
sub
shll
push
fidivrl
add
mov
enter
mov
push
pop
test
add
shll
aas
xlat
je
rcrl
xchg
pop
iret
jbe
fcompl
add
leave
addb
add
in
pop
add
add
mov
add
add
mov
add
add
xchg
sub
nop
add
jge
add
add
mov
cmp
int3
inc
cmp
pop
mov
mov
push
movsl
jg
fucomp
loopne
faddl
fsubr
and
mov
mov
add
add
push
inc
je
sahf
addl
mov
dec
inc
fsubrl
and
lcall
insb
shrl
pop
xor
xor
add
mov
filds
add
mov
loope
mov
jno
fsubrl
int3
push
add
popa
outsl
jl
add
add
pop
jns
clc
adc
movsl
sbb
add
call
imul
sbb
push
addb
test
insb
data16
fiadds
mov
add
ja
imul
pop
addb
push
je
ret
daa
aas
adc
add
js
add
add
add
add
add
aam
jb
jp
out
stc
into
xchg
add
mov
idivl
pop
jle
jae
loope
add
jo
mov
lds
cmp
pushf
pop
dec
jbe
mov
shll
incb
add
push
add
ja
add
add
pusha
add
jle
lret
mov
outsb
xstore-rng
cmpsl
add
add
add
sub
scas
cmp
adc
mov
pop
movsb
add
mov
add
lods
lods
pop
mov
lret
pop
popf
pop
or
add
dec
lcall
push
mov
cmp
add
jo
fs
aad
or
add
jl
add
mov
ficoml
in
or
rolb
xchg
add
cmp
cltd
std
sub
add
add
add
fwait
cmp
adc
xor
add
add
add
movsl
cs
add
jb
mov
mov
inc
add
jle
add
das
jg
and
mov
add
add
pop
xchg
add
add
add
and
add
cmpsl
or
pop
cmp
sbb
mov
aam
cmp
add
scas
or
imul
jbe
or
push
add
xor
add
stos
adc
and
mov
mov
rolb
push
cs
add
daa
gs
fdivs
cmp
dec
push
add
cmp
out
mov
xchg
add
add
dec
add
inc
pop
gs
mov
xchg
add
sub
das
or
cmp
add
inc
add
add
add
dec
cmpsl
adc
xchg
mov
sub
add
lret
in
rolb
popa
ljmp
filds
stos
dec
sbb
rcrl
jns
scas
jp
sarl
adc
rolb
dec
mov
add
hlt
add
cld
push
inc
out
and
mov
add
jbe
jnp
sbb
add
add
std
jno
les
cmp
stc
push
add
add
xor
cmpsb
add
lds
mov
push
add
mov
in
mov
xor
dec
scas
add
jnp
les
hlt
add
jge
mov
and
push
inc
xor
cmpsb
add
insl
repnz
frstor
imul
repnz
add
cmpsl
mov
adc
cmp
shl
pop
test
std
in
aas
rolb
add
fnstsw
lods
cmpsb
add
mov
push
or
xchg
dec
int3
xor
xor
fidivs
movb
mov
arpl
pop
cwtl
mov
adc
cmp
add
sahf
xchg
je
jo
jl
repnz
ficoml
cmpsb
add
in
or
shll
popa
lahf
in
lods
nop
add
inc
in
push
add
add
mov
mov
add
add
es
cli
push
add
add
daa
into
dec
push
je
push
mov
cmp
mov
test
add
jbe,pt
dec
test
add
scas
and
mov
ficompl
fcoms
push
dec
sub
sti
pop
push
mov
lret
add
add
neg
ds
jno
int3
ret
repnz
xchg
xchg
xor
add
aad
bound
mov
lret
in
test
outsl
pop
mov
out
inc
add
mov
add
imul
sub
hlt
add
add
gs
jl
push
fistl
movsl
test
push
add
add
rolb
jno
sarl
js
in
ja
stos
inc
sub
and
addb
scas
jne
mov
lcall
les
in
in
sbb
add
lods
enter
out
icebp
imul
movsl
jne
and
sub
cmp
xchg
lret
in
add
mov
cmp
inc
cmpsb
add
add
dec
xchg
nop
add
sbb
imul
cmp
jo
cmp
mov
push
add
daa
pushf
movl
jle
mov
sub
push
add
jl
iret
fcomps
mov
rolb
lret
int
test
insb
xchg
pop
iret
stos
push
jae
add
in
mov
add
icebp
xchg
add
movsb
add
out
mov
cld
mov
mov
jbe
test
mov
std
cld
or
pop
stos
incb
add
out
add
popa
push
in
daa
mov
cmpsl
sub
add
add
add
test
cmpsl
stos
inc
add
add
pop
jo
sbb
fcmove
pop
imul
dec
jle
add
out
cmp
push
add
push
repz
sti
mov
xchg
add
adc
lds
jecxz
sti
push
add
movsl
jae
add
stos
outsb
in
xchg
add
in
add
lea
aas
lods
or
sti
mov
sub
add
push
add
or
fdivl
popf
add
cmp
icebp
fidivl
mov
ljmp
inc
add
addr16
lret
jg
add
mov
add
dec
cwtl
pushf
mov
add
add
in
pop
push
add
pop
sahf
fld
add
mov
add
fldl
add
add
jns
insb
call
aas
adcl
shrl
add
add
add
add
push
inc
popf
cli
mov
loopne
pop
sbb
add
add
add
mov
add
loopne
dec
ret
inc
push
add
add
test
stos
xchg
push
stos
mov
mov
insl
imul
pop
loopne
in
mov
add
add
pop
popa
and
gs
jp
push
add
mov
outsb
and
mov
cwtl
cmc
loop
fwait
lods
popa
aas
pop
mov
xchg
add
sarl
dec
stos
mov
push
add
add
add
add
ljmp
jo
mov
add
mov
dec
mov
and
nop
add
jno
out
clc
imul
xchg
add
sub
int
je
in
addr16
sub
push
xchg
arpl
popa
mov
les
xchg
dec
sbb
adc
xor
mov
enter
add
jnp
inc
lods
lcall
pop
jl
push
add
mov
add
mov
add
add
add
xor
jl
add
mov
call
add
mov
loopne
pop
scas
aaa
hlt
add
sti
jbe
icebp
xor
add
sbb
or
cmpl
pop
rolb
mov
arpl
add
add
lock
icebp
add
int3
pop
cmp
mov
add
inc
add
add
ret
pusha
add
pop
icebp
and
mov
lods
hlt
add
inc
add
cmp
sbb
add
xchg
add
test
sub
push
add
add
sub
add
call
jmp
adc
xor
adc
daa
mov
fldl
cmp
add
mov
inc
add
pop
data16
add
xor
add
inc
dec
cmp
imul
and
jmp
add
cli
daa
push
fistpll
sarl
xchg
nop
add
and
add
cmp
adc
xchg
push
stos
loopne
jl
cmp
leave
fmuls
fcom
mov
cli
ret
cmp
test
xor
add
add
sti
sbb
pop
jl
push
out
pushf
inc
add
mov
mov
adc
rol
mov
add
mov
sbb
add
adc
int3
js
add
mov
sarl
into
movb
add
jle
mov
mov
cmc
outsl
push
dec
sub
add
mov
add
add
fsubs
pusha
add
dec
testb
icebp
xor
sub
movl
pop
mov
adc
loope
scas
imul
dec
ffreep
add
add
cmc
aam
sub
mov
inc
add
add
outsl
in
xchg
nop
add
mov
add
pop
xor
jl
and
sub
cltd
lahf
in
push
test
or
mov
cld
addr16
add
add
outsl
testb
jne
in
pop
jbe
pop
xor
xchg
add
sub
add
sub
mov
out
add
inc
jb
jl
add
or
dec
jno
icebp
pop
cs
gs
sub
or
add
dec
jle
jnp
adc
adc
adc
repnz
xor
lcall
fwait
xor
enter
push
loope
add
xchg
add
scas
inc
add
cmp
movsb
add
add
addr16
add
dec
sarl
or
pop
bound
mov
add
add
add
add
add
add
jmp
jns
add
add
add
fnstenv
push
arpl
aam
push
add
add
adc
pop
icebp
arpl
add
test
adc
xlat
mov
in
lds
add
outsb
add
inc
add
add
nop
add
fisubl
pop
jmp
in
and
sub
insb
pop
push
xor
xor
popa
arpl
add
push
add
add
dec
fnstsw
add
sub
add
mov
add
arpl
add
add
lds
test
mov
pop
sahf
dec
push
add
test
mov
lock
js
mov
add
inc
add
mov
movb
push
add
repz
add
movsl
fwait
push
add
mov
addb
add
add
mov
rolb
adc
movsl
and
jg
or
mov
add
jle
add
sahf
rcl
rolb
xchg
testb
lret
dec
mull
push
movb
mov
in
xor
jne
jg
jg
push
out
mov
add
add
mov
mov
das
jnp
pop
fistpl
and
add
add
add
insb
gs
aaa
push
mov
mov
add
mov
sub
add
add
mov
add
dec
aas
fstpl
add
mov
or
mov
push
add
add
add
js
sub
or
add
aad
xor
pop
or
add
push
add
mov
inc
add
jmp
iret
mov
jnp
pop
jae
scas
aam
iret
sbb
clc
ss
out
jb
sbb
add
dec
xor
ljmp
rolb
xchg
mov
and
pop
push
add
mov
add
mov
out
insl
mov
add
add
jl
clc
cmpsb
add
mov
dec
clc
out
sbb
add
add
mov
cmp
inc
sbbl
je
call
add
dec
inc
add
les
xlat
mov
lock
imul
xchg
add
mov
lods
or
stos
sub
je
sub
stos
js
inc
add
loop
mov
clc
or
pop
mov
int3
xchg
movb
pusha
add
dec
pop
inc
mov
test
mov
add
sbb
add
mov
or
or
pushf
pop
pop
into
rolb
jns
hlt
add
add
mov
push
add
lahf
xchg
add
xchg
dec
mov
jge
inc
xchg
sbb
push
add
add
cmp
je
pop
rolb
and
mov
ret
mov
sbb
dec
pop
sub
shll
add
dec
shll
jns
add
push
mov
test
push
add
imul
add
add
jecxz
mov
sbb
sbb
add
xchg
test
add
jne
in
cli
fnstsw
test
add
xchg
iret
call
or
add
les
inc
mov
addb
aas
sbb
fimull
mov
dec
adc
push
dec
pop
sti
in
testb
add
movl
sub
lods
sbb
lret
pop
inc
fsubrs
dec
push
push
out
sbb
sbb
addb
add
add
data16
push
sub
add
inc
add
adc
adc
mov
add
mov
push
or
cmp
add
mov
add
add
inc
add
push
add
add
add
add
dec
xchg
icebp
popf
pop
add
inc
mov
xchg
testl
scas
xor
inc
add
dec
fbstp
lock
lcall
out
imul
add
outsl
outsl
cli
pop
pop
sahf
out
adc
sarl
add
mov
loope
stos
mov
data16
and
pop
rcll
push
add
shll
clc
scas
dec
cmp
dec
lcall
pop
cmp
add
cmpsb
add
push
add
fs
loope
add
add
dec
jl
xchg
add
mov
add
add
iret
xor
out
fwait
mov
add
inc
xchg
jle
ret
add
xor
mov
inc
add
add
nop
add
add
add
add
add
lret
imul
inc
cld
fcompl
pop
adc
mov
push
sbb
insl
or
mov
add
ljmp
jbe
pop
insl
cwtl
rcrl
out
cmc
xchg
add
add
or
add
add
add
add
fwait
mov
rcll
pop
cmp
dec
push
add
addb
pop
xchg
aaa
rorl
and
mov
inc
int
sbbl
adc
outsb
push
add
dec
lods
sub
add
mov
add
add
add
lock
cmpsl
mov
and
mov
fidivrl
enter
jl
inc
add
adc
std
dec
call
xchg
add
add
outsl
jmp
in
sbb
mov
movb
jbe
iret
repz
mov
add
mov
dec
insl
or
add
movsl
arpl
loop
sub
jp
add
add
dec
mov
pop
aam
lock
inc
add
push
lahf
loop
std
das
mov
add
add
or
push
aam
adc
add
push
shrl
xchg
lret
sahf
mov
insl
insl
and
push
sub
add
add
ret
pop
push
aam
movsb
add
add
xor
mov
xor
mov
scas
sub
mov
add
mov
and
mov
sbb
add
adc
fnsave
add
add
in
test
add
sub
and
mov
lcall
test
and
andl
mov
push
sub
add
add
out
push
add
mov
add
push
add
add
or
add
add
rolb
in
push
add
mov
mov
testb
lods
pop
push
sub
sti
outsl
and
mov
cmp
add
push
jg
dec
out
stos
jmp
push
pop
push
movsb
add
add
jo
xor
xchg
addb
add
xor
lret
rolb
fcmovbe
and
in
add
scas
xor
scas
mov
add
iret
sub
cmp
rolb
fdivl
repz
add
add
sti
mov
jno
add
movb
add
insb
stc
and
mov
pop
lock
pop
pop
clc
adc
add
pushf
fldcw
and
add
add
push
add
add
jns
add
mov
mov
stos
negl
ficompl
lock
or
add
cmpsb
add
testb
add
push
xor
scas
scas
cmc
loop
cmp
add
inc
add
mov
add
add
mov
add
adc
dec
pop
dec
cltd
test
fnsave
pusha
add
inc
add
es
out
movsl
iret
sti
push
add
mov
or
hlt
add
dec
mov
cmpsl
mov
outsb
mov
jecxz
cmpsl
sbb
mov
mov
lret
test
add
mov
add
add
add
add
std
fisttps
jnp
add
daa
adc
add
mov
mov
add
sub
call
test
dec
call
add
sbb
jb
repnz
add
add
outsb
or
ud2
fs
add
or
dec
inc
mov
aam
cmp
xchg
add
push
add
add
jnp
ja
add
xchg
cmp
mov
mov
add
mov
sbb
out
fiaddl
dec
repz
test
scas
adc
out
cltd
call
jns
addb
jecxz
pop
mov
cwtl
nop
add
adc
adc
pop
dec
mov
mov
mov
add
aaa
adc
or
add
es
sub
dec
call
inc
add
add
add
add
out
leave
sub
mov
jl
and
sub
inc
ret
pusha
add
mov
ja
test
add
mov
mov
cmp
or
xchg
add
pop
inc
add
rolb
ss
push
add
and
icebp
jl
sub
add
orl
jae
add
add
inc
add
cmp
mov
inc
add
add
add
push
add
adc
add
push
add
or
roll
mov
loopne
push
add
mov
dec
ljmp
push
add
popa
fsubs
mov
lahf
and
add
cmpsb
add
add
sbb
pushf
or
inc
add
add
add
iret
out
add
mov
sub
outsl
out
imul
sbb
add
add
orl
cmpsl
cmp
or
add
push
addb
popa
sub
lods
repz
add
add
les
daa
scas
movsl
rolb
add
and
fiadds
nop
add
and
mov
pop
add
repz
daa
cmp
lret
pop
add
stos
mov
lods
xor
imul
or
das
mov
lret
ret
add
cwtl
add
jg
adc
dec
xchg
add
add
add
push
add
add
fsubrs
add
xchg
pop
xchg
mov
loopne
or
rolb
adc
iret
push
mov
mov
adc
sbb
loopne
sbb
push
add
add
lods
aam
sbb
cwtl
fsubrl
dec
fbld
jae
pushf
mov
mov
or
fsubrs
add
mov
mov
jno
test
out
test
add
js
aad
add
add
in
inc
add
inc
add
dec
cmp
inc
or
inc
cs
push
add
out
adc
jne
add
arpl
cmp
add
add
mov
add
or
add
sub
or
add
mov
outsl
cmpsb
add
add
add
cltd
addr16
rolb
movsb
add
in
loope
rolb
cmovo
mov
dec
mov
out
add
sarl
pop
xchg
and
mov
add
add
sub
les
and
xor
rolb
or
xor
cltd
cmpsb
add
pop
pop
inc
lods
push
mov
sahf
dec
inc
add
push
and
mov
movsl
es
mov
and
lret
dec
loopne
out
adc
stc
mov
push
add
pop
mov
fstpl
add
int3
pop
addr16
mov
and
mov
lea
push
add
dec
lock
dec
test
and
xor
lods
or
pop
push
jae
add
scas
shrl
rcll
jae
or
pushf
outsb
mov
mov
addr16
push
je
pushf
outsb
cmc
and
mov
sub
insb
cmp
mov
add
add
jb
dec
sbb
xchg
add
mov
cmp
push
aaa
push
sub
repnz
dec
lret
into
or
mov
add
mov
adc
add
mov
xchg
add
repz
push
lcall
push
add
nop
add
int
add
jg
psraw
loop
inc
add
test
fisubs
add
movsb
add
test
or
add
xchg
movsb
add
add
add
xchg
addr16
add
ja
mov
mov
lods
add
mov
mov
push
add
push
add
fsub
xchg
mov
fldt
mov
dec
mov
cmpsb
add
mov
jg
dec
lret
into
add
lcall
ja
add
add
sahf
movb
cli
push
add
pop
iret
xchg
sub
loopne
and
mov
mov
jo
jge
add
mov
icebp
mov
movb
add
add
sub
scas
add
adc
sub
xchg
dec
inc
add
jno
add
aas
jns
mov
add
add
mov
jmp
fsubrs
pminub
add
mov
mov
fyl2x
repz
repz
add
scas
outsb
aad
popa
fidivs
dec
cmp
pop
rcrl
mov
test
cwtl
insb
add
sbb
add
xchg
rolb
pusha
add
push
cmp
mov
mov
or
add
add
xchg
push
jp
add
movsb
add
mov
aaa
and
in
call
test
popa
addr16
out
xlat
mov
pop
push
add
add
mov
add
add
shld
add
mov
adc
scas
or
add
add
popf
sub
nop
add
lcall
testb
aam
cmc
scas
lock
inc
add
adc
jbe
inc
lret
adc
add
add
push
push
add
pop
xor
add
cmc
and
loopne
lock
add
insb
imul
mov
cmp
outsl
add
test
js
movsl
mov
inc
push
xor
lea
sbb
mov
add
add
