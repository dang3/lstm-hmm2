push
jle
dec
je
fadd
sub
inc
add
or
mov
add
xchg
add
jmp
rolb
int3
stc
fidivl
mov
fdivl
sbb
cmp
add
cmp
cmpsl
in
push
add
mov
pop
in
push
cmp
addb
add
xchg
add
mov
fidivl
mov
aad
add
add
fnsave
add
jl
adc
pop
inc
jnp
bound
mov
add
fldt
dec
dec
imul
add
jns
add
add
add
add
ja
dec
xchg
add
stos
dec
test
insl
outsb
lods
fnstsw
imul
aas
ficoml
push
push
add
mov
add
aam
out
xor
ret
add
das
inc
fdivs
add
sub
add
add
adc
add
cmp
nop
add
sub
fidivl
add
rolb
xor
lahf
jmp
mov
jne
or
test
add
mov
xor
popa
cmp
add
add
mov
or
mov
sbb
add
add
imul
mov
or
add
dec
dec
cmp
add
xor
xor
jnp
add
test
cmp
add
fucomi
dec
lds
out
mov
add
xor
fisttps
adc
pop
ret
cmpsl
push
add
or
adc
mov
mov
rolb
movb
ds
add
or
je
push
rcr
jne
xchg
rolb
out
mov
hlt
add
cmpsl
fsubs
mov
sub
ja
xor
add
add
repnz
jo
outsb
dec
ja
fwait
sbb
pop
gs
xchg
add
addb
mov
nop
add
add
xchg
add
push
add
int
add
add
sub
push
add
mov
pop
mov
mov
stos
adc
in
xor
cmp
jge
iret
movsl
insb
scas
sbb
mov
jmp
add
xor
jl
mov
test
push
xor
stos
shr
dec
jbe
out
jb
insb
cltd
in
push
add
pop
int3
mov
mov
add
mov
add
push
add
add
std
test
mov
add
cltd
sub
clc
pop
push
add
popa
pop
jbe
mov
add
bound
mov
add
mov
aas
jge
cmpsl
sbb
leave
rolb
jns
cmp
in
cli
push
add
jno
xchg
add
cmpsb
add
mov
ficomps
jbe
lock
cmp
lods
cmp
add
add
pop
sub
add
rolb
sbb
pushf
jns
mov
pop
fs
loope
add
and
mov
inc
add
cmp
pushf
mov
add
and
mov
add
cmp
sti
inc
add
adc
out
addb
mov
lods
out
subl
inc
jmp
add
movb
out
dec
pop
insl
lods
cwtl
shr
or
add
add
add
add
cli
or
divl
sub
rorl
add
add
jecxz
add
add
faddl
add
push
add
mov
add
add
sub
push
add
add
xor
add
inc
adc
mov
cwtl
jle
std
adc
and
lock
or
add
cli
notl
and
mov
and
mov
insb
inc
les
imul
iret
dec
xor
add
pusha
add
xor
push
add
in
pop
test
sbb
jmp
sti
pop
push
add
dec
addb
sbb
xor
dec
pop
aam
sbb
lods
xor
add
les
cmp
fidivs
add
data16
jecxz
jb
xchg
add
ss
imul
jno
add
push
add
jge
jb
push
ja
fiadds
ljmp
insb
add
fwait
mov
adc
add
xchg
sub
push
add
add
lcall
das
add
mov
push
add
lret
cmp
mov
test
loopne
mov
mov
cld
mov
add
or
loop
jle
aam
cmp
sti
fnsave
jmp
movb
add
nop
add
sbb
gs
add
push
add
filds
mov
add
mov
dec
les
sbb
mov
mov
add
addb
push
repz
test
add
addb
cmpsb
add
clc
push
add
and
mov
add
mov
dec
jns
add
cli
push
add
cmp
add
push
add
dec
cmp
lahf
je
push
add
jg
pop
xchg
sti
and
mov
xchg
add
add
std
icebp
mov
rol
test
ret
inc
add
jg
imul
test
pop
sbb
jecxz
cmpsb
add
and
mov
push
movb
jo
jno
add
xchg
ljmp
add
int3
sbb
cltd
mov
lea
or
sbb
add
mov
shrl
or
add
sub
add
ret
add
mov
add
add
mov
filds
pop
push
xor
stos
cmpsb
add
add
rolb
push
add
pop
push
add
dec
rolb
fcomi
add
mov
add
add
bound
mov
out
into
aas
push
and
lods
add
add
les
jns
add
mov
dec
sbb
add
and
mov
enter
xchg
and
addb
mov
add
cmp
add
dec
loopne
cmc
push
jle
insl
arpl
add
pop
popf
icebp
dec
fnstsw
xchg
sub
add
stos
add
clc
mov
sti
jl
rolb
mov
adc
fistpl
roll
fcom
add
stos
jmp
add
fisubs
test
xchg
add
and
fdiv
add
jp
mov
dec
pop
loopne
mov
out
add
stc
aas
je
sub
sbb
xchg
sub
add
add
lret
sbb
lcall
adc
and
jle
add
add
dec
aam
mov
stc
pop
hlt
add
jns
add
add
fwait
push
testb
ss
add
inc
add
xor
dec
repz
add
add
add
cltd
jmp
dec
xchg
and
into
push
dec
xlat
sub
fsubrs
cld
mov
in
push
icebp
dec
xor
add
xor
lock
add
bound
mov
add
adc
in
mov
movsb
add
mov
cwtl
dec
lods
out
jmp
testl
add
xchg
add
adc
pop
jg
mov
push
in
and
inc
daa
mov
mov
push
mov
mov
cmp
sbb
inc
rolb
jmp
xor
or
mov
add
push
add
mov
push
jl
pop
and
mov
inc
add
jns
test
imul
cmc
in
rorl
mov
and
add
pop
daa
inc
add
int
cli
dec
rolb
inc
add
and
inc
push
stc
fildl
push
add
pop
les
xchg
into
jge
add
cmp
notl
xchg
shrl
mov
sti
pop
add
add
popf
out
fbld
movsb
add
aam
mov
std
in
inc
add
inc
mov
add
frstor
xor
pusha
add
mov
pusha
add
mov
fsubs
mov
rolb
hlt
add
test
test
jne
add
add
cld
dec
mov
or
dec
mov
add
adc
cmpsb
add
add
jg
add
int
mov
mov
pop
cwtl
testl
fstp
test
add
inc
out
pop
jnp
das
xor
add
jmp
test
add
cmpsb
add
add
mov
cs
xor
and
scas
cmpsb
add
push
inc
xchg
add
push
add
aaa
push
call
mov
in
movsb
add
add
push
push
cld
call
sub
mov
cs
movzbw
cmp
ss
lea
push
push
call
cmp
je
es
lea
es
cs
es
call
test
jne
jmp
push
lret
icebp
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
lea
lea
repnz
mov
sub
sub
push
pop
push
je
jmp
add
add
cs
frstor
add
in
rolb
insl
mov
cmp
sbb
add
iret
mov
jne
add
mov
sti
call
add
cmpsb
add
add
hlt
add
add
jbe
pop
cltd
inc
push
stos
sti
jmp
push
lock
xchg
adc
mov
mov
sbb
add
xor
clc
leave
jno
mov
addb
jp
add
nop
add
mov
add
add
popl
mov
insl
jnp
pushf
xchg
data16
out
int3
and
mov
add
test
inc
add
add
and
mov
jmp
xor
fwait
cld
and
mov
fadd
add
cmpsl
jb
addb
xchg
js
pop
shll
loop
mov
add
fcompl
add
add
mov
sbb
mov
mov
add
into
sbb
mov
addb
test
add
sbb
mov
or
add
ja
push
js
movsl
sahf
test
mov
mov
add
add
and
push
sbbl
add
jbe
mov
xchg
add
add
add
pop
adc
dec
jo
mov
sub
add
xor
jg
add
add
push
ds
jns
add
add
add
add
mov
loopne
testb
add
add
pop
mov
mov
xchg
rolb
ret
add
sbb
dec
cmpsb
add
lret
testb
add
add
add
xchg
in
xchg
adc
mov
cmp
add
outsl
pop
mov
xor
add
xchg
add
xor
cli
mov
sub
lds
lret
jle
jmp
adc
stc
add
lods
rolb
pop
out
test
cwtl
dec
in
cltd
dec
fstpt
add
push
fdivs
pusha
add
loop
add
cmpsb
add
add
addb
add
sti
stc
pop
push
add
mov
mov
add
or
inc
pop
pop
pop
dec
sub
imul
add
mov
dec
outsl
push
add
xor
sbb
add
sahf
pop
sub
sbb
cld
mov
add
loope
mov
lcall
add
add
testb
out
sub
cltd
mov
xor
addb
sub
push
add
and
add
xor
fs
repnz
add
mov
lret
add
add
push
clc
in
mov
outsb
mov
inc
add
adc
add
add
add
aas
pop
loop
mov
jne
sub
cwtl
les
arpl
cmp
adc
cli
inc
add
dec
std
sub
add
add
add
ror
jns
add
add
jecxz
add
add
jecxz
inc
add
add
push
add
mov
out
out
int
add
movsl
test
push
add
push
jg
pop
fildll
pushf
sbb
pop
out
cld
arpl
pop
hlt
add
add
dec
not
clc
enter
add
push
add
add
mov
fisubl
add
ret
mov
add
cmp
add
fmull
stos
xor
scas
and
fstpl
out
stc
push
stc
mov
loop
and
add
loop
jl
int3
aas
rolb
sar
mov
mov
arpl
add
mov
xor
in
cmp
ja
sbb
dec
adc
pop
jo
pop
xor
xchg
loope
add
add
pop
xor
fwait
pushf
mov
out
sub
xor
xor
xor
iret
insb
pop
sahf
or
cmc
dec
mov
mov
mov
pop
cmp
and
mov
push
adc
enter
add
mov
and
mov
les
add
mov
add
movsl
and
mov
xor
xchg
add
add
add
add
add
lahf
mov
outsb
sti
pop
sbb
mov
pop
in
mov
nop
add
add
ficomps
add
pop
fisubrl
adc
sbb
add
add
aam
and
push
add
add
rolb
sub
push
mov
add
sub
cs
add
and
cs
add
add
mov
sbb
add
xchg
icebp
jae
mov
xor
xchg
add
into
xor
add
sbb
jge
popa
aas
aas
jg
aas
out
add
cwtl
xor
test
jae
add
add
cwtl
push
add
pop
sbb
adc
daa
fsubl
fwait
xchg
add
mov
or
fsubrl
dec
testl
xor
xor
push
cli
xor
xor
add
inc
imul
or
add
add
mov
sbb
jnp
add
fcom
add
das
int
hlt
add
int
cmp
xchg
test
and
out
ljmp
push
add
out
cmpsb
add
sahf
cmp
dec
int
and
pop
pop
add
mov
mov
mov
dec
push
jbe
mov
dec
ficomps
add
pop
or
out
lds
insb
dec
sub
jecxz
add
add
add
test
testb
jge
add
rolb
inc
add
add
test
movsb
add
adc
sub
add
push
add
add
xlat
testb
fbld
xor
clc
mov
add
mov
rolb
rolb
sbb
dec
mov
clc
arpl
jbe
adc
add
sbb
push
test
nop
add
rol
adc
sub
or
fdivl
ljmp
inc
add
pop
addr16
xor
mov
lods
pop
data16
fcmove
stc
jb
push
add
add
shrl
add
cs
add
xchg
add
out
int
xor
xor
or
das
and
xor
jg
add
in
sub
add
cmpsl
mov
sub
lock
push
add
repz
add
jle
fucom
adc
rolb
outsb
pusha
add
ficomps
test
fsubrs
xchg
xor
sbb
fnstenv
out
add
out
loopne
ljmp
add
add
xchg
push
js
add
ja
add
scas
fisubl
add
push
add
aad
sub
push
fwait
outsl
xchg
add
mov
sbb
add
add
push
add
rolb
sub
pop
jns
jbe
add
bound
mov
and
mov
outsl
movb
dec
imul
repz
cmp
ds
sub
pop
cmp
ret
lds
sbb
cmc
sub
add
push
add
mov
mov
repz
sub
dec
stos
add
mov
push
add
add
mov
add
add
add
hlt
add
pop
ss
sahf
mov
add
sbbl
add
arpl
dec
push
call
cmp
add
jnp
cmpsl
mov
repz
push
add
add
mov
enter
repnz
add
push
jbe
movb
xor
js
add
add
ds
js
adc
imul
lcall
push
inc
icebp
movsb
add
add
scas
in
mov
dec
xor
incl
enter
mov
add
rolb
or
jb
adc
pop
cmp
mov
add
fdivp
add
aad
add
mov
shr
iret
and
mov
loope
mov
nop
add
add
xor
les
cld
je
call
mov
add
dec
push
test
mull
add
jl
ss
jb
mov
cltd
cmp
mov
add
sub
push
jo
fstpl
add
sti
test
cld
push
add
stos
stos
lcall
push
in
jg
sub
je
jnp
rcll
xchg
xchg
pop
dec
jg
ficompl
add
add
push
add
adc
dec
neg
jbe
cmp
dec
add
add
mov
add
adc
add
pop
outsl
std
pusha
add
sub
and
movsl
test
jp
enter
mov
add
add
int3
mov
mov
fs
add
mov
jne
pusha
add
add
std
cli
adc
push
add
cwtl
data16
shll
movsl
addb
incb
pop
dec
gs
jne
mov
dec
mov
mov
lret
insl
mov
les
aad
add
lcall
cmpsb
add
pop
rolb
add
jl
aas
das
pop
addl
adc
addb
adc
pop
or
pop
mov
push
jne
add
add
dec
mov
dec
mov
inc
mov
cmp
sti
dec
sub
jmp
dec
cmpsb
add
or
add
in
filds
add
cs
movb
rolb
jnp
aas
dec
bound
mov
iret
cmp
pop
adc
add
xchg
loope
add
je
push
add
push
add
clc
int3
out
pop
xorl
lret
pop
leave
xchg
inc
xor
push
add
fmul
or
data16
lods
movsb
add
add
sbb
add
add
stos
orl
add
cmpsb
add
mov
push
sub
add
and
xchg
add
data16
aad
add
add
add
fstpt
add
add
aam
or
add
add
add
inc
add
add
mov
adc
push
add
add
stos
insl
xlat
sub
mov
add
rolb
add
icebp
shll
mov
add
out
cmpsb
add
add
cmpsl
xlat
call
cld
jmp
mov
pop
imul
and
mov
mov
jmp
scas
das
sbb
mov
add
mov
add
push
adc
call
add
jno
movsb
add
mov
das
xor
add
add
mov
add
add
les
ja
add
insb
lcall
fstl
daa
mov
rolb
ret
add
push
add
lcall
sti
cmp
fsubp
sub
mov
jl
add
add
pushl
addb
add
add
push
add
fsts
loop
iret
int
xchg
add
xchg
add
add
mov
stos
out
cld
mov
ret
mov
add
push
add
inc
add
jmp
mov
pusha
add
adc
add
add
sbb
test
add
add
mov
lock
stos
cltd
aam
adc
and
jecxz
data16
inc
add
das
mov
add
addl
hlt
add
test
jae
sbb
add
add
jb
or
add
fwait
xor
xchg
add
xchg
les
negl
mov
pop
sub
and
inc
add
add
push
iret
popa
fsts
add
mov
sub
pusha
add
add
popf
jge
lods
arpl
add
add
jnp
add
and
les
ret
cli
cmp
add
sbb
mov
cmp
inc
add
jg
jnp
mov
jg
cmc
adc
adc
or
add
les
insl
xchg
add
sub
xor
mov
dec
inc
add
add
add
lods
inc
jnp
mov
xchg
mov
add
adc
add
add
add
mov
mov
mov
add
add
add
pop
inc
sub
fistpll
add
dec
jmp
nop
add
sub
add
in
int3
pop
out
cmpsl
push
add
add
mov
iret
loope
imul
int3
popf
in
cmpsb
add
or
add
add
add
push
xchg
add
mov
inc
inc
pop
movl
inc
xchg
movsl
jg
mov
mov
ret
subl
sbb
lock
add
mov
or
cmp
mov
mov
add
mov
sbb
int
cmp
add
lcall
dec
push
pop
inc
mov
cmp
jo
je
pop
and
mov
fidivrl
adc
loope
out
mov
add
dec
inc
mov
and
lcall
add
out
dec
add
sub
cmp
pusha
add
loop
scas
sbb
cwtl
jge
pop
sbb
mov
add
inc
jle
xorl
cmpsl
int3
mov
insb
gs
ds
or
add
sub
add
and
movsb
add
add
imul
adc
mov
std
sub
add
and
mov
int3
dec
inc
mov
int
inc
imul
out
xchg
inc
add
add
xchg
add
pop
mov
lret
iret
sbb
jne
and
arpl
add
loopne
rolb
push
add
push
sti
push
add
add
cmpsb
add
add
add
add
movb
sub
add
dec
dec
or
lea
push
add
add
xchg
add
dec
icebp
ja
add
adc
pop
or
sub
mov
mov
add
stos
push
add
jno
nop
add
push
dec
cmpsb
add
add
add
lahf
sbb
add
add
and
mov
jmp
outsl
xchg
add
push
sbb
movsb
add
jo
ljmp
ja
pop
out
vmovd
lret
inc
add
jl
mov
add
add
loope
lcall
add
lret
inc
add
add
add
mov
fs
sub
add
imul
inc
add
add
push
xchg
add
test
add
mov
addr16
push
add
add
out
rcll
insb
idivl
adc
stc
int
rolb
in
sahf
pop
add
mov
imul
dec
sahf
scas
jb
cld
ja
cmp
mov
je
xchg
lret
inc
add
loop
ret
outsb
pop
xor
sub
cmpsl
cmp
xchg
test
sahf
push
add
add
ror
or
add
loop
add
lock
leave
stos
add
addr16
and
mov
sub
add
gs
mov
xchg
sti
jmp
movsb
add
daa
pop
add
mov
add
mov
fdivrl
add
mov
test
add
and
mov
jmp
add
rolb
adc
lds
pop
adc
sub
cmp
sub
cs
inc
add
cwtl
ret
arpl
xor
add
push
xchg
dec
lret
jle
pop
dec
cwtl
or
add
mov
inc
add
add
insl
ljmp
insl
adc
add
add
add
add
mov
sbb
mov
add
jge
jns
push
add
add
push
pop
push
add
add
bound
mov
add
insl
popf
gs
pop
dec
ljmp
subl
adc
dec
call
dec
adc
push
add
mov
add
stos
outsb
test
loope
add
jmp
add
or
add
add
outsb
pop
dec
push
jecxz
les
mov
push
add
add
add
add
stc
pusha
add
test
cltd
adcl
ficoml
add
add
addr16
pop
and
sbb
inc
lret
jge
jg
add
je
lret
jp
add
cltd
fcoml
jl
pop
and
mov
adc
add
xchg
fwait
pop
dec
daa
dec
and
push
pop
add
test
add
adc
imul
nop
add
push
pop
inc
xchg
cmc
mov
lret
push
add
add
sub
fst
add
add
add
fwait
out
push
movsl
pop
dec
xchg
mov
add
mov
xchg
lods
mov
stos
fwait
pop
mov
mov
sbb
jg
sbbl
ds
movsb
add
mov
push
add
add
pop
enter
movb
mov
mov
add
mov
add
fimull
fdivl
add
add
xor
mov
add
data16
add
mov
test
add
dec
jno
add
fldenv
add
push
test
add
add
pop
sahf
lahf
add
mov
mov
mov
jl
add
mov
dec
sahf
repz
adc
gs
add
pop
stos
int3
lahf
and
add
add
add
xor
lcall
mov
mov
cmp
push
testb
addr16
add
pop
push
out
cmpsb
add
jle
fdivrs
dec
push
add
cltd
mov
add
in
sbb
jbe
stos
dec
out
sarl
jl
pusha
add
roll
mov
icebp
xor
les
push
lcall
or
mov
test
inc
int3
call
sbb
pop
sbb
add
add
sbb
mov
sahf
loop
aad
add
push
or
aam
xchg
pop
icebp
mov
fstpl
mov
lcall
jge
add
stos
push
rolb
add
and
add
lahf
mov
add
push
add
repz
jnp
add
mov
add
cli
daa
push
add
mov
and
mov
dec
jno
add
les
ja
dec
add
push
add
cmp
mov
sub
add
out
test
leave
test
fcomps
ja
out
add
mov
xchg
adc
je
cmp
lret
ljmp
fcoml
inc
add
lods
jbe
sbb
dec
mov
lahf
push
add
sbb
push
add
icebp
push
hlt
add
jo
dec
fisttpl
xchg
cmp
add
adc
and
ja
ret
mov
dec
xchg
add
test
jo
xor
xchg
add
add
mov
pop
jge
add
add
jmp
andl
mov
in
enter
or
add
ret
add
mov
sti
dec
movb
jns
and
aas
mov
cmpsb
add
add
mov
or
mov
loope
cmp
popf
in
cs
add
ret
test
scas
int
add
dec
loope
dec
ljmp
push
decl
add
mov
dec
data16
ret
add
add
pop
int3
mov
inc
add
je
sti
insb
xchg
inc
inc
add
popa
push
add
fldt
stos
cld
push
xchg
add
add
xchg
gs
add
insb
int
add
sbbl
xor
add
mov
add
leave
jbe
aam
cmc
fnsave
clc
in
adc
jecxz
add
dec
les
xor
mov
jl
add
cmpsb
add
jg
dec
cmp
dec
mov
jg
testb
arpl
fmull
cmp
mov
rcll
popf
fst
add
fdivr
fisttps
jl
add
lret
movsb
add
in
adcl
inc
add
mov
push
loop
fmull
ljmp
add
lea
add
jne
mov
das
rolb
sub
scas
fwait
add
inc
add
add
stos
adc
repz
jno
add
lcall
xchg
add
mov
gs
addb
pop
lods
cmp
jno
add
dec
loope
push
cmp
or
fildll
bound
mov
mov
add
add
mov
lds
add
add
cmp
stc
repnz
sbb
add
mov
mov
mov
add
xchg
add
dec
cwtl
sbb
add
add
dec
add
mov
inc
push
add
mov
std
mov
xor
pop
xor
xchg
sbb
cli
jle
inc
in
fucom
add
inc
xor
mov
mov
and
dec
lfs
mov
add
outsb
lds
or
popa
mov
jg
std
cmpsl
mov
inc
add
cmp
add
lret
mov
mov
add
loope
bound
mov
add
mov
mov
idivl
mov
mov
bound
mov
mov
add
pusha
add
mov
inc
das
mov
aaa
int3
push
popf
fwait
mov
mov
sbb
adc
jbe
jg
xlat
stos
int
add
dec
push
iret
adc
mov
dec
add
cmpsb
add
imul
inc
add
rolb
testb
xor
rolb
fisubl
add
iret
mov
roll
dec
aam
jp
sbb
sub
add
lods
xchg
add
jge
xor
out
pop
sbb
mov
addb
ja
mov
push
call
add
xchg
xor
add
add
add
sbb
add
pop
or
addb
aaa
sub
in
push
mov
add
add
les
pushf
push
push
add
imul
adc
xor
xchg
and
mov
sbb
daa
fsubrl
dec
mov
adc
test
addr16
addr16
cmp
in
sti
sti
xchg
add
add
add
lcall
mov
add
aas
stos
insb
mov
add
add
add
push
add
clc
pusha
add
mov
push
adc
cmpsl
add
dec
add
add
add
add
pop
scas
stc
jmp
add
dec
cwtl
fistps
inc
add
add
sbb
inc
jecxz
pop
xor
mov
add
jno
out
mov
stc
pop
pop
pop
jl
add
add
add
cmp
add
add
rorl
push
add
cmp
mov
xchg
xor
pop
sbb
jmp
test
mov
and
mov
add
mov
dec
cmpsb
add
add
add
lahf
lods
mov
repz
add
add
cwtl
in
enter
sub
rolb
add
enter
push
add
pop
imul
push
add
inc
add
stos
add
add
jnp
xor
cmp
xor
adc
enter
add
lcall
push
add
ss
sti
xchg
add
ljmp
in
addb
add
mov
pop
daa
mov
add
or
xor
dec
outsl
xor
add
scas
jo
pop
dec
cld
push
decl
inc
add
mov
sbb
add
sbb
in
test
cmpsb
add
add
add
js
add
add
mov
add
xchg
ret
dec
inc
cmp
mov
add
jmp
add
sub
add
xchg
orl
mov
les
dec
xor
les
shll
push
add
out
push
pop
add
add
popa
repz
inc
add
jae
add
add
add
mov
gs
jae
add
xor
cmp
mov
sti
cmp
ja
loop
mov
add
xor
lods
jne
add
add
inc
push
ret
and
mov
addr16
xchg
jne
add
in
inc
inc
loope
jae
or
fsub
add
bound
mov
xor
lock
mov
pop
push
out
sbb
xor
dec
out
xchg
xchg
inc
daa
push
add
mov
xchg
add
push
fcompl
add
add
lcall
fwait
cmpsl
adc
insb
into
rolb
add
add
xchg
inc
add
imul
push
ret
orl
dec
inc
mov
add
insb
js
cmp
sahf
dec
push
add
inc
add
xchg
add
jmp
je
push
push
mov
mov
imul
int
sub
add
bound
mov
mov
add
pop
scas
daa
dec
out
dec
aam
lahf
pop
or
add
imul
fstpt
or
xchg
push
add
lahf
cmp
js
add
push
add
fisubs
add
jbe
sbb
add
movl
dec
and
lcall
je
cmc
test
add
push
fdivs
add
add
ss
cmp
add
add
xchg
paddsb
stc
sub
mov
add
das
pop
jns
psllq
add
jmp
push
add
mov
jl
lock
mov
mov
jmp
daa
lea
adc
movb
sbb
add
add
test
loope
add
add
add
rcrl
outsb
push
add
in
faddl
or
ficoms
add
stos
cli
jo
out
ret
add
clc
xor
sub
xchg
popa
add
sub
popf
pop
xchg
add
lahf
loope
sub
add
mov
or
add
and
jp
mov
repnz
cmpsl
mov
movsl
mov
add
xchg
mov
add
xchg
dec
jno
add
jnp
add
jl
rolb
mov
xor
pop
inc
sub
imul
jb
xchg
add
sbb
xchg
add
test
mov
mov
xor
add
outsl
test
add
loop
fcmovnb
add
xor
testb
lods
mov
add
sti
and
sbb
std
pop
js
or
xor
mov
inc
add
popl
push
add
add
cmp
cmp
add
jnp
add
xchg
xchg
add
cmp
push
add
add
out
xlat
cwtl
sahf
or
jle
ret
dec
imul
mov
add
repz
sbb
inc
add
sbbl
adc
sbb
add
add
xor
add
push
add
addb
rolb
into
ja
int
push
add
and
add
add
inc
add
int3
add
ja
add
add
rolb
add
test
adc
lahf
enter
jbe
pushf
mov
fdivl
add
add
sub
add
push
mov
test
rcrl
or
loop
rolb
mov
add
cs
jb
mov
jmp
aam
pop
inc
add
push
addb
add
fwait
xchg
outsl
negl
mov
add
divl
inc
add
mov
mov
add
add
aad
add
adc
in
test
les
mov
stos
mov
add
add
and
mov
cmpsl
dec
and
mov
cmp
jne
jne
add
cltd
sbb
sub
adc
lods
xchg
divl
add
lahf
scas
mov
xor
add
sub
mov
add
fnstenv
into
mov
add
mov
add
add
mov
cmp
xor
addb
add
in
xlat
jl
pop
sti
rolb
inc
add
add
push
repnz
add
fiaddl
mov
call
mov
push
add
dec
inc
or
cmp
movsb
add
add
in
testb
lahf
fistl
add
add
add
dec
ljmp
outsb
add
stos
xchg
add
add
mov
mov
dec
push
ror
mov
sub
xor
add
add
imul
test
add
add
or
insl
mov
add
inc
add
addb
add
pop
repz
or
inc
movb
add
add
test
div
test
cwtl
push
adc
fwait
nop
add
add
mov
sbb
loop
inc
xor
iret
pop
cs
add
adc
adc
cmpsb
add
stc
sub
add
lcall
add
mov
sub
add
jne
and
add
dec
sbb
dec
outsb
repnz
sbb
jg
adc
xorl
test
mov
add
sbbl
ds
add
dec
cld
jbe
das
and
sbb
push
add
fcoms
adc
cwtl
pop
testb
lcall
xchg
add
movsl
jne
mov
out
jns
add
pop
popa
jge
inc
movsl
and
push
in
push
add
add
mov
icebp
mov
add
stc
jbe
jnp
mov
inc
in
mov
add
inc
add
mov
push
add
add
stos
xor
mov
push
les
pushf
inc
xor
push
add
mov
add
add
xor
or
xor
mov
mov
xchg
add
lock
testb
add
mov
adc
fmuls
adc
aaa
and
mov
icebp
push
add
add
xlat
cmc
sbb
inc
add
loopne
fidivrl
mov
cltd
movsl
jae
add
add
inc
jnp
add
mov
fwait
pushf
mov
dec
fcoms
fxch
data16
add
add
mov
bound
mov
sahf
inc
mov
push
jo
je
inc
add
mov
scas
out
jecxz
add
mov
mov
mov
add
cmp
pop
sti
xchg
inc
pop
neg
fwait
dec
mov
xor
add
and
outsl
iret
xlat
adc
mov
sbb
movzbl
stos
clc
addr16
cli
xor
std
jmp
jp
int
push
add
js
cmpsl
mov
mov
mov
add
add
pop
cmp
add
pop
xor
mov
fidivrs
push
mov
xchg
stc
loopne
add
loopne
pop
pop
push
in
and
lahf
sbb
mov
loopne
in
xor
adc
push
push
add
add
aas
pop
addr16
lret
mov
out
add
pop
push
sub
mov
orl
aam
or
add
jmp
push
cmpsb
add
push
shll
call
lahf
push
add
jl
add
inc
add
add
mov
xchg
add
add
xor
add
add
and
mov
xor
hlt
add
in
inc
add
mov
push
add
jle
imul
push
mov
mov
les
mov
add
or
call
mov
add
loop
cmp
pop
inc
add
movsb
add
add
mov
jl
add
aaa
mov
test
add
xor
add
add
pop
movsl
add
xchg
add
sbb
add
adc
xlat
jg
in
inc
add
xor
arpl
in
or
add
fisttpl
and
mov
add
pop
rolb
dec
and
pushl
add
add
pop
in
mov
pop
into
dec
out
testb
sti
int3
push
add
push
add
cli
ret
insb
mov
test
inc
pop
cmp
add
out
add
add
add
int3
fneni(8087
add
add
sbb
ds
lock
movsl
in
and
mov
sub
add
lods
push
or
adc
addb
mov
call
dec
jne
enter
jmp
and
sbb
cmp
std
and
mov
xchg
test
add
dec
lds
mov
xchg
mov
pop
movb
inc
add
clc
fildll
jbe
and
mov
add
xchg
add
popa
scas
fcompl
add
jg
jnp
add
pop
mov
mov
out
sbb
add
add
js
add
add
dec
xchg
aaa
cmp
mov
add
test
les
je
rolb
mov
add
sar
mov
insl
int3
xchg
outsl
jb
aaa
out
not
add
cmp
add
add
test
xlat
fimull
repnz
nop
add
stos
cli
mov
inc
pushf
into
mov
into
popl
mov
out
loop
adc
clc
les
ror
add
je
pop
pop
movsb
add
add
sbb
loopew
add
add
xor
add
scas
clc
ret
roll
add
jb
aaa
push
jl
fdivr
rolb
mov
enter
mov
popl
add
cld
hlt
add
dec
mov
adc
add
add
add
fcmovbe
add
add
jp
and
and
in
add
add
pop
scas
jnp
jmp
push
add
out
xor
push
add
bound
mov
scas
push
add
add
ja
add
stos
inc
add
fwait
movsl
outsl
pop
scas
insl
sbb
add
add
add
ljmp
add
push
add
pop
mov
add
addb
mov
addl
mov
add
add
add
xlat
push
add
xchg
out
insl
xchg
add
sub
sub
mov
dec
sbb
xor
mov
mov
cmp
add
push
adcl
mov
pop
insb
gs
jmp
in
jae
into
fistpl
in
rolb
bound
mov
mov
add
and
mov
pop
ja
jmp
add
add
ss
add
mov
add
cmp
xor
jae
mov
add
dec
jno
and
add
push
add
mov
pop
in
test
add
mov
push
add
add
bound
mov
rolb
push
fisubl
rcl
pop
clc
push
add
out
cmp
add
inc
add
or
add
mov
push
ret
inc
add
cld
or
add
rolb
jl
repnz
popf
cwtl
ret
jnp
inc
ljmp
lods
and
xor
dec
add
testb
xor
add
aaa
add
mov
sti
push
add
mov
add
add
xchg
inc
add
je
icebp
repnz
lcall
in
push
xor
jne
add
data16
mov
mov
adc
mov
mov
push
jno
add
add
movb
push
sub
push
add
aas
push
add
data16
add
shrl
xchg
add
xchg
loope
mov
adc
and
mov
repz
jecxz
add
add
add
add
outsb
lahf
inc
pop
pusha
add
shrl
jmp
inc
movsb
add
add
enter
or
push
xor
into
cltd
or
add
ja
inc
xorl
xchg
add
inc
add
movsb
add
fdivl
aaa
shrd
orps
push
or
pusha
add
mov
int
scas
jecxz
xor
addl
stc
hlt
add
add
add
bound
mov
cltd
jg
stos
or
sbb
add
add
sbb
or
popa
xchg
and
xchg
push
add
and
add
movsb
add
cmp
outsl
push
sahf
icebp
int
jae
add
jno
add
add
pop
ret
add
bound
mov
in
outsl
iret
iret
jg
cltd
mov
fs
arpl
dec
je
aam
int3
leave
shrl
pop
scas
dec
outsb
dec
add
dec
gs
add
xlat
mov
xor
cmpsb
add
sub
add
add
in
inc
loop
mov
fucomp
mov
add
add
add
rolb
xchg
add
add
jbe
sub
lods
cmp
fcmovnbe
out
add
jle
add
mov
pushf
dec
mov
add
dec
ljmp
in
enter
mov
add
add
rolb
cmp
add
das
or
and
mov
cmp
add
mov
and
mov
aad
mov
xlat
mov
add
cmp
cmpsb
add
add
inc
add
push
add
jecxz
cmpsb
add
mov
jo
jl
add
jo
mov
add
dec
lock
add
and
pop
cld
adc
xchg
gs
jnp
add
gs
adc
cmp
in
add
movsl
cli
jle
xchg
jecxz
cmpsl
or
fildl
ljmp
lea
add
dec
cmpsl
sbb
pop
xchg
addb
add
in
mov
lret
xor
jae
lods
stos
bound
mov
add
mov
or
test
xchg
cwtl
daa
lds
add
mov
fistps
push
dec
jb
pushf
push
cmp
aad
repnz
ud0
in
or
add
add
add
add
pop
test
rolb
pushl
cld
jnp
cmp
scas
xchg
out
add
jge
mov
lcall
add
clc
outsl
in
xor
movaps
add
addb
xor
or
bound
mov
inc
add
pop
pop
scas
cmp
add
int3
cmpl
add
ja
add
add
inc
add
mov
mov
outsl
test
jns
push
push
add
jge
add
mov
add
cwtl
lret
js
add
xchg
imul
cmp
cmp
fwait
dec
shll
mov
rolb
add
pop
xchg
add
add
add
mov
cmc
fidivrs
fildll
mov
add
lods
mov
or
fsubrl
xchg
lahf
mov
mov
add
mov
cltd
js
movsl
ja
xor
inc
push
add
add
nop
add
add
les
addb
imul
test
decl
addb
out
jp
scas
mov
or
add
add
add
push
sbb
sbb
hlt
add
mov
mov
add
enter
mov
adc
xchg
andl
subl
xor
push
add
add
dec
xchg
js
add
add
mov
cmp
xchg
mov
add
add
add
add
add
add
push
add
jmp
test
les
jo
inc
and
fisubl
mov
add
mov
add
adc
imul
test
fwait
rolb
add
clc
xor
stc
psubusb
xor
das
jle
sbb
icebp
mov
sbb
add
add
mov
add
mov
imul
add
addb
and
add
jge
add
scas
mov
xchg
mov
xchg
add
fldt
mov
add
add
add
scas
insb
mov
jnp
mov
add
lock
sub
cwtl
jae
stos
cld
mov
bound
mov
out
sub
aad
or
add
xlat
lods
jmp
mov
pop
movb
add
add
xor
into
dec
mov
into
mov
pop
xorl
ficoml
inc
add
push
push
add
add
add
xchg
loop
ljmp
mov
sbb
push
add
dec
int3
lods
inc
add
dec
pop
push
add
mov
int
add
lods
add
jne
add
imul
ret
call
popf
add
shl
adc
add
ljmp
gs
add
jge,pn
inc
add
or
clc
dec
cmp
lods
xor
mov
xchg
add
add
jb
xchg
jmp
sahf
ljmp
pusha
add
inc
adc
movsb
add
rolb
add
mov
or
jb
push
add
xchg
hlt
add
mov
add
add
add
or
add
dec
push
add
icebp
dec
cltd
rolb
sbb
pop
jb
fisttpll
or
aas
mov
fisubl
sub
je
sub
mov
mov
xor
sbb
add
leave
popf
rcll
xor
in
stos
das
aad
xor
xchg
mov
leave
push
add
xchg
add
add
shr
jo
pop
stc
ret
jbe
sub
add
and
mov
push
dec
push
adc
dec
aas
jmp
push
sub
in
jbe
xchg
and
add
iret
pop
xor
add
outsl
pop
xchg
repz
xchg
lahf
lock
xchg
add
mov
cmp
add
lea
les
mov
push
add
pop
adc
pop
and
cmp
add
mov
add
cmp
jno
sbb
add
push
add
js
inc
add
add
mov
jp
int
or
insb
sbb
subl
pop
xchg
sti
or
add
add
mov
add
add
dec
fcomps
mov
mov
jp
out
push
cli
mov
lods
pop
fpatan
pcmpeqw
sahf
hlt
add
add
add
insl
imul
add
int3
jbe
js
cltd
xlat
adc
fisubrs
movb
clc
and
or
mov
add
stos
add
aas
lcall
insl
stos
pop
lds
mov
jmp
inc
andl
or
add
mov
int
loope
add
dec
pop
mov
js
pop
xchg
add
jae
add
add
add
sub
inc
sbb
mov
mov
jns
add
mov
jne
sub
arpl
pop
and
push
in
adcl
cld
push
dec
mov
jmp
xchg
add
mov
std
cmp
xlat
inc
jmp
testb
cmpsb
add
mov
pop
leave
scas
xchg
cmp
dec
pusha
add
add
mov
dec
mov
sub
int
ficoml
add
mov
or
push
add
movsl
mov
imul
add
jge
add
add
push
add
mov
inc
leave
pushf
test
cmpsl
mov
mov
stos
pop
pop
stc
out
mov
aaa
outsb
call
xchg
stos
loopne
jb
in
movsl
add
cld
cmp
loope
outsl
xchg
push
add
js
mov
jbe
rolb
xor
shrl
sub
jecxz
jns
das
loope,pn
add
int3
je
jg
add
leave
push
mov
mov
mov
mov
jle
add
jp
inc
add
hlt
add
add
in
adc
je
scas
roll
push
add
or
dec
or
cli
mov
sti
mov
add
mov
add
lock
pop
mov
and
pop
sbb
sub
ret
shr
imul
fcom
add
repz
sub
addb
notl
mov
sbb
rcll
add
or
add
add
fsub
vmread
and
mov
add
mov
dec
mov
iret
push
inc
dec
test
dec
and
mov
adc
aaa
ljmp
shl
jbe
sbb
add
hlt
add
mov
mov
mov
fnstsw
add
dec
push
add
add
add
pusha
add
xchg
add
add
pop
push
out
mov
insb
cmp
cmp
ret
xchg
repz
stos
add
pop
xor
jnp
pop
rolb
jne
fiadds
out
scas
jno
adc
add
nop
add
test
aas
ret
leave
lret
rcr
repz
push
xchg
sub
sub
inc
add
out
out
orl
lds
jle
add
jb
imul
mov
inc
shll
es
add
out
arpl
rolb
mov
pop
cmp
add
mov
cs
mov
and
mov
faddl
add
sarl
pop
push
mov
cmp
testb
add
add
add
lahf
xchg
dec
fs
loop
fwait
pop
incb
fwait
add
stc
sub
push
add
js
jns
rolb
add
inc
add
dec
mov
inc
add
iret
add
loop
stos
movsb
add
and
mov
mov
gs
in
out
sti
inc
stos
mov
add
add
lea
add
cmc
xor
int
add
mov
push
test
add
and
mov
sub
add
dec
js
ret
adc
xchg
fidivrs
leave
sub
push
add
mov
fdivs
pusha
add
xchg
fwait
js
in
jnp
mov
add
push
add
sub
inc
add
addb
rolb
das
jp
subl
add
ss
in
das
cmp
test
mov
adc
add
clc
cmovb
mov
rolb
loop
push
add
ror
in
inc
sbb
mov
pop
nop
add
add
and
jns
xor
test
sub
xor
arpl
adc
mov
pop
add
add
add
test
mov
mov
mov
inc
add
or
fwait
xor
add
push
lds
mov
loope
rolb
aas
sbb
add
push
loope
xor
add
xor
mov
cmp
add
jp
add
arpl
out
inc
add
insl
mov
insl
nop
add
sahf
into
fldl
xorl
movsl
xchg
xor
das
stos
std
jns
xchg
push
add
shl
lods
movsb
add
lock
jp
and
mov
mov
jecxz
sub
sbb
add
jno
ffree
pusha
add
add
xchg
inc
push
add
roll
adc
add
cwtl
jne
daa
ret
scas
insl
pushf
adc
pop
out
add
arpl
lret
pop
mov
lea
repnz
decl
je
add
es
add
pop
push
add
pushf
push
mov
repnz
mov
mov
cmpl
cmp
add
mov
pop
inc
add
mov
add
add
faddl
add
add
movsl
mov
add
add
sahf
mov
jbe
rolb
clc
rorl
cs
add
cmpsl
jne
add
add
add
les
lods
or
add
or
add
pop
outsb
adc
nop
add
add
arpl
add
add
add
aas
loopne
jbe
in
add
add
jmp
add
call
add
cwtl
sub
add
add
add
mov
leave
les
pop
adc
lods
push
movsl
push
dec
movsl
lcall
or
mov
scas
scas
pop
xchg
mov
xchg
add
and
rorl
loop
add
mov
outsb
sub
inc
lock
add
mov
aad
jbe
loopne
push
or
leave
or
add
adc
mov
adc
aaa
add
or
in
hlt
add
add
add
mov
add
jb
sub
push
addb
cmp
popf
mov
icebp
cld
gs
test
add
or
add
add
jmp
js
add
shrl
mov
and
mov
add
in
push
add
add
call
fdiv
sbb
sub
add
cmpsb
add
add
add
adc
add
and
add
in
add
add
add
in
aad
pop
mov
mov
add
cmc
mov
add
add
cmpsb
add
out
cltd
outsb
jb
xchg
aad
inc
add
ficoms
add
filds
xchg
leave
sbb
mov
add
push
add
cmpsl
enter
pop
push
nop
add
scas
lea
add
inc
add
add
stc
dec
cmp
add
add
test
add
xchg
add
add
jge
mov
int3
inc
cli
cmp
out
mov
add
loope
sbb
add
add
mov
lods
stos
cmp
iret
pop
sub
sbb
adc
jnp
aas
std
cmc
xchg
add
push
add
loope
in
call
add
add
mov
outsb
mov
inc
add
cmp
dec
push
add
rcll
add
aad
jns
add
and
mov
in
inc
cs
in
dec
sti
insb
sub
xlat
mov
add
mov
push
sahf
pop
js
adc
jmp
movsb
add
xchg
add
out
mov
fdivs
lds
ja
or
cs
fdivrp
pop
rorl
add
adc
inc
in
jae
jnp
and
mov
xor
cmpsl
sub
jbe
call
mov
fdivrl
add
pop
add
mov
dec
xchg
jbe
push
add
mov
pop
sbb
sub
in
add
mov
and
add
nop
add
out
andl
push
add
loope
jbe
scas
adc
add
jmp
add
add
mov
and
loopne
push
xor
lcall
xor
inc
add
insb
xchg
out
xchg
mov
pop
aas
cltd
jb
out
lods
cli
pop
shll
add
add
in
call
xchg
add
out
mov
nop
add
xchg
add
aam
sti
dec
movb
add
pop
lcall
add
mov
loopne
inc
add
arpl
add
xor
add
femms
jmp
nop
add
inc
add
mov
add
add
jecxz
push
add
dec
stos
mov
in
ret
lret
rolb
mov
sub
ret
cmpsb
add
add
push
add
pop
lea
cmp
add
mov
dec
dec
mov
iret
dec
icebp
lods
addb
add
add
lcall
mov
sbb
lret
popl
add
das
push
add
mov
add
xchg
push
add
popa
movb
push
js
add
xchg
add
movsl
and
mov
loopne
mov
rcll
xor
mov
add
pushl
add
out
add
jno
stos
xor
add
divl
js
add
add
jge
jne
loop
jl
add
add
push
add
add
hlt
add
dec
mov
cmp
add
jecxz
add
add
xor
add
mov
adc
add
mov
call
pop
and
cltd
addr16
lret
movb
add
adc
inc
inc
add
push
add
mov
and
mov
add
add
dec
inc
add
test
dec
loop
xchg
add
or
add
add
scas
shr
sub
fisubrl
outsl
pop
cmpsb
add
ret
lahf
gs
jnp
add
nop
add
mov
test
lea
addb
cli
pop
sub
push
mov
aad
jns
add
rorl
test
into
sub
add
inc
outsb
lock
pop
fs
addr16
dec
fidivs
cltd
outsl
push
push
add
ret
hlt
add
inc
scas
mov
xchg
jecxz
add
lret
mov
sbb
rolb
pusha
add
add
add
addb
data16
rolb
nop
add
jge
push
add
xchg
add
mov
mov
jb
loope
int3
std
lds
mov
xchg
ror
and
xor
sub
std
mov
out
cmp
add
filds
popa
mov
cs
into
insl
adc
jl
push
add
inc
add
js
pop
add
mov
inc
add
sti
fcmovbe
add
add
add
mov
pop
pop
or
mov
mov
sub
add
pop
mov
xlat
movsl
jnp
ret
and
std
daa
lahf
movsb
add
stc
icebp
jno
test
inc
test
test
add
add
add
rolb
sub
mov
xor
jnp
inc
xchg
add
xchg
add
aad
add
lret
insl
cmp
add
mov
add
push
add
cmpsb
add
mov
ret
das
mov
out
xchg
add
mov
xor
aam
test
sbb
outsl
xchg
push
add
cmp
mov
mov
cs
pop
popf
inc
add
popf
fisubl
add
xchg
ds
xchg
push
hlt
add
addb
pushf
and
xor
push
rorl
icebp
push
mov
fldcw
push
pop
xchg
jge
repz
add
addb
add
or
add
add
add
mov
xor
arpl
in
dec
mov
add
and
mov
add
out
sbbl
mov
jne
add
add
jle
js
test
loop
clc
add
loope
add
test
aad
cmp
add
aaa
cmpsl
adc
and
xor
add
sub
jecxz
lds
or
xchg
add
ret
add
mov
out
data16
leave
jae
add
mov
add
xor
add
fists
loope
add
mov
test
scas
inc
add
lods
jl
out
dec
scas
nop
add
add
pop
cs
add
pop
insb
dec
inc
dec
and
mov
add
inc
pop
lods
jb
fstl
loopne
movsl
mov
pop
mov
add
mov
test
nop
add
add
call
les
sbb
cmp
push
add
sub
add
xchg
add
std
xchg
add
xchg
add
test
dec
xchg
add
rolb
aam
inc
mov
lods
lahf
shrl
push
add
ret
cli
cld
stc
cmp
imul
add
mov
add
add
pop
cltd
push
loopne
hlt
add
sub
iret
aas
jge
add
enter
xor
add
rolb
and
cmp
aas
sub
add
dec
cmp
pop
jb
scas
leave
je
ljmp
add
outsl
dec
pop
rorl
add
stos
dec
lds
jmp
add
scas
stos
pop
int3
fstl
add
or
add
add
popl
cmpsl
fucomi
xchg
scas
fchs
add
jnp
add
add
add
add
out
mov
add
subl
lahf
scas
pop
mov
movsb
add
dec
aam
inc
add
xlat
leave
push
add
pop
xor
in
lock
mov
pop
js
repnz
xlat
xchg
adc
mov
jge
mov
mov
sbb
add
add
add
test
aad
add
test
xchg
testb
add
cltd
dec
jo
inc
add
mov
gs
rolb
icebp
and
adc
mov
inc
add
pop
sbb
rolb
addb
test
int3
sub
jmp
add
mov
scas
fstpl
hlt
add
inc
sbb
lods
imul
ror
dec
add
add
xchg
add
mov
popa
push
in
add
sbb
push
sbb
add
add
mov
into
fidivl
sbb
add
add
add
stc
add
mov
stos
adc
add
ja
add
jb
addb
add
add
ja
add
cwtl
add
mov
dec
inc
add
ja
mov
add
add
add
rorl
xlat
cltd
xchg
mov
aam
mov
ss
xchg
daa
call
add
in
adc
outsl
cmp
or
cmc
sbb
je
jne
mov
push
add
or
sahf
in
lock
xor
push
fst
add
add
addb
cmpsb
add
popf
int3
cmp
add
imul
pop
pop
and
dec
mov
inc
add
xchg
or
add
mov
add
nop
add
mov
mov
lock
add
inc
push
sub
add
repnz
cmp
call
xchg
xchg
add
leave
out
push
add
add
mov
mov
bound
mov
add
add
outsl
scas
lods
fcomps
pop
imul
insl
add
mov
addb
in
lcall
inc
stc
pop
push
pop
inc
sahf
xor
repnz
adc
outsl
aam
sahf
data16
outsb
push
and
hlt
add
inc
add
pop
dec
dec
aaa
xor
pand
adc
add
add
inc
add
or
add
jg
add
les
push
cwtl
jnp
jb
test
add
add
add
add
and
add
cltd
push
add
add
add
aam
cli
repnz
pop
ds
repz
imul
add
aad
add
pop
mov
int
add
movsb
add
cmp
lret
in
scas
fcomps
add
add
mov
daa
and
adc
popf
pop
fldcw
outsb
clc
mov
xchg
add
enter
mov
push
add
push
hlt
add
bound
mov
cmpsb
add
mov
add
pop
test
add
test
mov
out
cmp
test
sbb
fsubr
cmc
sbb
fcomps
cmpsb
add
sti
xor
movb
in
jno
jns
rolb
xlat
and
mov
xchg
xchg
outsb
and
mov
add
addb
add
lods
add
add
pop
mov
loope
fs
or
mov
add
int3
xlat
jl
sbb
call
in
adc
add
cmp
loope
mov
in
jmp
add
jg
roll
nop
add
cs
aam
and
mov
mov
add
shll
lods
sbb
iret
inc
add
add
shl
fwait
mov
add
subps
add
xlat
and
mov
dec
jo
push
add
in
dec
testb
les
dec
mov
add
xor
dec
repnz
sbb
fsubs
sub
out
mov
add
dec
scas
xchg
jno
add
sbb
add
cmp
add
add
add
cmp
sarl
add
movsb
add
lds
pusha
add
pop
icebp
fdivl
dec
mov
inc
inc
int3
adc
ds
add
add
add
mov
add
sbb
mov
ret
dec
scas
cmp
add
mul
ljmp
add
fidivrs
push
rolb
cmp
add
push
add
int3
stos
add
ret
scas
push
add
xchg
pushf
js
pop
iret
pop
movsl
in
call
push
jae
nop
add
dec
rolb
pop
pop
aam
or
add
add
cmpsb
add
dec
lret
add
mov
add
test
mov
dec
mov
add
pop
dec
sub
stos
add
mov
add
rolb
adc
mov
lret
push
add
lea
xchg
add
dec
rolb
jecxz
push
add
in
mov
pop
fnstsw
add
les
mov
mov
add
add
add
xor
lods
push
les
sub
aad
add
js
ficoms
in
push
add
mov
add
arpl
sbb
add
cli
popf
or
pushf
imul
mov
shl
add
mov
in
adc
sbb
aad
ja
sub
scas
popf
xor
pop
les
sahf
push
add
icebp
pushf
inc
out
add
das
jno
out
loopne
loop
inc
fsubrl
mov
push
add
and
mov
stc
jb
adc
mov
rorl
add
mov
fimull
inc
mov
cmp
add
out
add
add
dec
push
dec
jno
add
repz
fisubrs
das
das
es
ljmp
xor
sbb
add
cmpsb
add
pop
jae
mov
lock
cmp
loopne
push
repz
mov
xchg
pop
testb
das
cmpsl
jno
mov
lds
les
loope
add
add
xchg
add
loopne
sub
add
jns
mov
jg
and
mov
pop
shr
or
add
outsb
scas
push
mov
add
mov
cmc
mov
add
adc
and
aad
ret
inc
enter
add
jecxz
add
je
xor
pop
adc
add
mov
je
pop
ljmp
xchg
add
adc
sub
int
icebp
cmp
add
or
mov
fdivl
mov
adc
test
sub
add
out
rolb
stos
mov
cmp
dec
and
push
cld
dec
test
das
mov
push
xlat
mov
test
inc
add
add
add
notl
add
arpl
push
outsb
jecxz
je
add
add
mov
add
and
add
add
add
adc
lock
add
sub
jno
mov
add
add
call
mov
xor
insl
imul
aam
outsb
cmp
imul
add
add
add
add
mov
pop
iret
lock
jne
cmc
push
add
push
add
push
add
addb
ret
call
and
jb
lahf
push
add
add
or
or
movsl
jae
adc
fsqrt
inc
or
mov
add
mov
add
xchg
std
fadds
or
imul
mov
les
push
add
inc
lds
bound
mov
add
dec
jmp
es
loop
cmp
add
test
mov
cmp
out
mov
lock
stc
push
add
add
lods
dec
and
xchg
xchg
loope
mov
xor
bound
mov
add
add
add
mov
add
push
inc
add
stc
mov
testb
add
arpl
add
pop
add
dec
fisttpl
add
add
pop
std
sub
add
xchg
add
fcomps
aad
movb
add
xchg
add
add
add
rolb
xor
add
cwtl
add
ljmp
movsb
add
popf
jp
inc
add
add
and
mov
dec
mov
xlat
cmp
add
aad
shll
add
outsb
adc
push
add
add
lods
in
cltd
loope
add
cmpsb
add
test
jnp
popa
lds
lret
add
xlat
mov
fwait
push
add
and
int3
mov
add
pop
cmp
in
add
out
add
add
dec
dec
stos
and
mov
add
mov
iret
xor
and
mov
fs
insb
int3
loopne
jl
push
iret
mov
ja
adc
inc
cmp
dec
cli
push
add
add
mov
aad
or
add
pop
popf
jne
imul
sbb
das
jge
dec
sub
bound
mov
mov
test
or
xchg
inc
push
add
add
xchg
add
mov
aaa
xchg
adc
add
gs
push
add
add
add
sub
add
pop
cmp
sbb
mov
mov
pop
fidivrs
loope
add
mov
mov
stc
sub
dec
lods
ljmp
cmp
lcall
dec
adc
imull
cmp
sub
sti
pop
cmp
pop
repnz
repz
jecxz
add
add
or
add
add
add
add
sbb
add
and
jno
rorl
mov
loope
dec
test
sub
add
bound
mov
leave
int
rorl
sbb
inc
add
xchg
icebp
lahf
test
add
add
out
pop
pop
outsl
fiadds
fs
add
add
ds
sub
add
test
add
mov
fbld
sub
add
push
add
sbb
mov
sub
add
sub
enter
mov
rcl
add
add
pop
pushf
stos
mov
adc
add
je
jno
test
cld
aam
jno
dec
je
test
sbb
dec
inc
add
mov
mov
insb
add
mov
adc
adc
add
jg
jg
add
test
mov
scas
shl
je
pop
mov
mov
and
add
add
add
add
add
add
mov
add
into
setnp
add
movsl
pop
adc
aad
call
aam
gs
mov
lcall
test
add
addr16
dec
data16
enter
add
ljmp
xor
sbbl
fnstcw
pop
mov
xchg
test
add
push
add
add
out
ja
in
lock
xchg
rolb
fbstp
add
ror
repz
mov
mov
cwtl
adc
cli
mov
push
xchg
jns
rolb
sahf
add
pushf
fcompp
fmull
mov
mov
push
rolb
mov
add
mov
popf
cmp
add
dec
xchg
inc
add
push
jp
add
pop
mov
mov
add
aam
sbb
add
add
add
pop
sti
mov
outsl
mov
add
add
call
bound
mov
gs
xchg
add
pop
sbb
jnp
scas
fs
rolb
jno,pn
or
add
data16
or
add
mov
pop
push
add
add
mov
cld
xor
mov
cld
jmp
xchg
rolb
add
add
out
xor
xor
add
dec
inc
jne
rcl
cmpl
xchg
add
sub
jmp
add
add
add
sbb
add
mov
jg
cmpsl
jbe
cmp
xchg
and
mov
pop
push
add
sahf
pop
xchg
add
add
bound
mov
xlat
aas
add
mov
mov
clc
pop
mov
add
jae
mov
insl
movb
in
or
lahf
rolb
test
add
mov
rorl
lods
loopne
xor
std
int
fnstcw
adc
or
add
pop
stos
inc
add
add
sbb
aad
and
mov
add
add
cld
dec
jns
sahf
dec
push
das
cmp
add
mov
fbstp
push
dec
pusha
add
and
lret
inc
cmpsl
ret
push
add
cmpsl
push
lods
repnz
das
lret
mov
iret
and
cs
aaa
dec
inc
jmp
add
fdivl
xchg
jo
jb
jp
add
sbb
dec
scas
sbb
inc
add
adc
xrelease
add
sbb
in
add
add
in
popf
adc
pop
adc
sub
add
push
add
mov
icebp
xchg
addb
lods
mov
add
add
loopne
sub
add
add
add
add
in
test
cmpsl
mov
add
sub
cmp
cli
or
dec
addb
add
fidivrs
xchg
or
push
add
add
aaa
add
pop
mov
add
xor
jle
xchg
jle
psrld
pushf
cmpsb
add
add
pushf
xchg
add
push
testb
fidivs
add
mov
add
das
add
insl
sub
add
mov
sub
test
mov
mov
js
decl
ja
icebp
pop
dec
mov
add
add
imul
scas
lcall
out
stos
rolb
fcompl
add
mov
leave
sbb
outsb
je
daa
mov
loop
imul
repnz
stos
lcall
fistps
mov
lahf
bound
mov
add
add
sbb
sub
mov
add
jb
addb
sub
insb
and
mov
mov
mov
in
jmp
es
ret
cmpsl
test
scas
jge
test
add
rolb
mov
xchg
sub
xchg
in
dec
pop
inc
add
fadds
xchg
add
repz
add
stc
stos
sbb
pop
or
notl
add
or
fiaddl
lock
out
pop
mov
and
mov
sti
scas
sub
jo
ja
jmp
lds
sub
pop
test
push
mov
mov
xchg
xchg
add
mov
mov
addb
add
pop
add
mov
iret
pop
or
add
push
bound
mov
scas
mov
sub
push
cld
dec
cmpsb
add
and
add
sbb
lcall
lods
push
add
imul
add
and
repnz
int3
or
jg
mov
in
loop
or
or
mov
sub
movb
add
jo
pop
pop
dec
xor
cltd
push
add
add
jae
nop
add
mov
mov
lea
mov
xor
rolb
repnz
add
icebp
mov
aas
push
pop
dec
adcl
jns
nop
add
xor
inc
push
xchg
out
mov
mov
add
mov
inc
add
scas
addr16
sti
jle
pop
mov
add
jge
xchg
and
mov
mov
add
cmpsb
add
push
add
sbb
and
out
inc
add
sbb
add
pop
data16
pop
or
jnp
dec
pop
push
add
ret
pop
bound
mov
add
pop
adc
std
mov
ss
inc
scas
in
add
add
test
add
and
in
bound
mov
add
rorl
sbb
int
add
pop
sub
pushf
pop
ret
mov
mov
aaa
stos
jno
loope
rorl
sub
out
out
xor
add
add
add
mov
fs
jl
add
push
add
add
and
mov
cld
adc
or
inc
add
add
movsb
add
xor
xchg
xor
cwtl
and
mov
cmp
jb
or
sbb
in
adc
pop
xchg
add
mov
jbe
xor
arpl
rolb
data16
add
lcall
cmp
add
sbb
fdivl
jle
int
mov
in
outsb
pop
int3
insb
xchg
add
xchg
in
inc
add
mov
addr16
sbb
mov
xor
and
ja
add
sub
imul
add
add
pop
scas
add
pop
nop
add
nop
add
in
cltd
outsb
push
add
loope
sbb
subl
sbb
cmp
sti
push
add
add
sbb
clc
mov
xchg
add
or
mov
add
adc
mov
rolb
add
sbb
add
xor
imul
xchg
add
fadd
add
push
add
add
add
lock
test
sbb
add
push
inc
add
pop
mov
jb
sbb
loopne
movb
int3
fstpl
add
push
add
add
jne
popa
push
add
lods
and
subl
movsb
add
aas
imul
movsl
lods
enter
add
and
pop
cmp
add
mov
xor
in
aas
or
outsb
jg
mov
add
mov
push
add
add
cmp
outsl
ja
add
lahf
mov
mov
jno
push
push
cmpl
mov
jns
add
mov
out
dec
and
add
mov
add
int
cs
out
sbb
add
mov
add
addb
add
popa
cmp
add
movsb
add
adc
jae
push
add
lock
add
ljmp
mov
sub
xchg
mov
xor
add
fidivrs
arpl
adc
movsb
add
or
mov
add
imul
cmpsb
add
add
hlt
add
xor
jge
fiaddl
or
add
xor
flds
push
add
add
push
enter
pop
cltd
lret
mov
cwtl
sahf
notl
out
cmp
dec
cld
pop
add
and
or
add
cli
jb
lods
pop
pop
fistl
aas
inc
add
mov
cmpsb
add
movlps
rolb
stos
in
iret
movsl
movsl
stos
mov
les
pop
popf
jns
insb
and
out
inc
add
xchg
fidivrs
inc
imul
cwtl
outsb
icebp
je
xchg
dec
and
add
cmp
fiaddl
pop
rcrl
mov
add
stc
fnstsw
in
lock
lret
sbb
mov
xor
jo
or
add
add
add
outsl
pop
ljmp
add
lahf
movb
lret
add
loop
loope
add
and
add
add
add
fcomps
add
in
fiadds
daa
mov
xlat
lcall
pop
xor
push
aas
repnz
sub
mov
cmp
add
mov
fdivs
add
sbb
sub
out
sbb
add
outsb
xchg
mov
or
inc
add
pusha
add
add
jno
es
loop,pt
jne
outsb
jle
cmp
add
xchg
add
iret
rolb
xor
popl
jg
data16
add
add
sbb
out
movb
sti
pop
in
add
pop
sub
pop
daa
push
mov
mov
inc
add
loope
pop
lahf
and
sbb
sti
into
sub
xor
adc
fwait
test
add
insb
arpl
mov
or
xchg
xchg
adc
mov
stos
fildll
aam
scas
and
add
pavgb
lods
dec
mov
insb
iret
jge
jne
in
stc
mov
xor
shll
dec
cmp
cld
iret
adc
loope
js
add
or
icebp
jb
aad
jle
dec
cli
lock
add
neg
mov
clc
xchg
insb
or
pop
and
rolb
push
add
add
jle
sub
add
addb
outsb
or
aam
add
nop
add
pop
mov
xchg
add
aad
nop
add
xor
lea
mov
adc
out
nop
add
movb
adc
inc
cmp
sub
int3
mov
rolb
xor
jno
mov
rolb
enter
cmp
es
add
test
jge
push
les
sbb
add
xor
movsb
add
mov
add
jl
add
test
lret
repz
and
mov
mov
ret
add
leave
mov
loope
sbb
inc
jnp
add
xchg
and
lret
push
jb
test
sub
fwait
add
lahf
jae
add
movsb
add
adc
sub
or
add
mov
or
add
loopne
pushf
pop
hlt
add
add
idivl
dec
cmp
mov
mov
and
mov
mov
sbb
and
mov
add
jo
sahf
jo
push
add
hlt
add
add
popl
and
rolb
cmp
int3
jbe
adc
std
xor
aad
cltd
inc
mov
or
add
cmp
popa
or
and
mov
dec
bound
mov
sti
clc
mov
imul
test
add
cmp
lret
jmp
fdiv
add
mov
push
pusha
add
fidivl
call
int
xor
or
or
movb
mov
pop
cli
or
add
out
fildll
push
lret
or
and
inc
add
dec
inc
add
and
mov
pop
movsb
add
iret
sbb
jle
xchg
add
add
ret
add
add
aad
test
and
mov
jno
loope
push
add
loope
xor
mov
add
pop
or
fwait
outsb
arpl
push
shl
cmp
aam
pop
cmp
scas
cli
movsl
loopne
pop
daa
mov
aaa
xor
sti
push
add
add
fstpt
cmp
fcmovnbe
add
aas
lock
mov
outsl
daa
outsl
ljmp
xor
ja
add
pop
mov
data16
mov
add
add
sub
add
add
aas
jae
scas
stos
xchg
popf
nop
add
add
add
and
add
add
add
pop
inc
add
adc
sub
add
lahf
mov
rorl
mov
lahf
mov
xor
ror
inc
leave
scas
add
je
or
add
jns
jg
add
add
adcl
ja
test
shl
add
cmp
xor
mov
xchg
pop
ds
add
adc
cmpsb
add
insl
push
add
add
push
lock
or
cmp
std
and
mov
sbb
add
add
jb
or
mov
dec
mov
and
mov
add
and
jbe
out
inc
add
mov
ds
mov
xor
xchg
jge
outsb
test
mov
add
mov
mov
mov
repz
add
add
sbb
sti
dec
daa
sub
add
add
inc
add
xchg
pop
insb
in
and
mov
add
adc
les
or
add
rolb
daa
nop
add
mov
sbb
gs
enter
add
add
fldl
add
add
dec
fists
mov
popa
aaa
cmp
mov
cwtl
add
sbb
mov
mov
dec
cmp
add
add
jg
cltd
inc
add
lea
pop
jecxz
stos
mov
stos
xor
stc
rolb
xor
mov
cld
xchg
inc
add
mov
mov
iret
das
sbb
add
add
add
cld
cmc
mov
fnstcw
lahf
ficomps
or
cmp
add
sbb
add
insl
push
pushf
out
icebp
jae
mov
add
adc
jle
testl
add
mov
movb
mov
into
mov
ret
dec
mov
cli
out
add
aam
mov
aam
mov
sbb
sbb
out
mov
xchg
jge
add
mov
jl
add
cmp
mov
xchg
cs
xchg
inc
rolb
adc
pop
cmp
add
lcall
add
fdivl
add
add
lret
cmpsb
add
iret
pop
daa
popf
bound
mov
xchg
add
mov
dec
push
add
inc
aad
arpl
or
fcomp
jae
out
mov
sub
aaa
cmp
mov
pop
jle
in
dec
outsb
sbb
movups
add
mov
jns
out
int
inc
add
scas
lcall
xor
cs
fldenv
cmp
stos
jmp
adc
jb
jae
movsb
add
xchg
add
add
add
mov
add
sub
add
sbb
movb
sbb
testl
mov
fldl2e
addb
jne
add
add
insl
insl
fmul
test
lret
add
insb
sbb
insl
jnp
in
outsl
or
out
fstpl
xchg
jecxz
xchg
and
mov
cmp
shrl
pushl
nop
add
mov
popa
mov
ffreep
in
inc
add
add
fildll
push
add
add
push
imul
fistl
mov
in
in
jbe
pop
cltd
test
scas
push
fistl
sub
adc
std
add
mov
xor
mov
xchg
add
stc
dec
lret
jno
in
clc
int
scas
add
mov
push
rolb
pusha
add
and
add
mov
fistpll
push
dec
and
mov
dec
mov
pop
push
insb
hlt
add
mov
jo
add
roll
add
xchg
add
inc
add
icebp
pop
jbe
xchg
add
jmp
add
sbb
cmp
jae
imul
add
jnp
hlt
add
adc
cmpsb
add
mov
inc
aad
out
sbb
dec
jmp
mov
fstps
add
int
nop
add
push
add
testb
push
add
add
xchg
add
mov
clc
repnz
jae
mov
mov
add
nop
jae
mov
add
popa
add
repnz
jae
mov
add
and
clc
push
push
mov
xchg
ret
jbe
inc
mov
sahf
push
clc
repnz
jae
add
xor
std
mov
clc
repnz
jae
jbe
add
test
and
add
daa
add
or
mov
mov
clc
repnz
jae
add
int3
or
cmpl
nop
jae
leave
cmc
jne
aaa
inc
add
jmp
add
cmc
add
imul
mov
adc
sub
add
outsl
filds
xchg
ret
jne
or
add
add
mov
mov
jecxz
mov
lods
cli
lea
clc
repnz
jae
add
add
testb
xchg
add
mov
add
push
push
mov
xchg
ret
out
imul
out
push
push
mov
xchg
ret
cmc
add
add
add
xor
clc
repnz
jae
add
cmp
add
push
push
mov
xchg
ret
jbe
add
mov
mov
clc
repnz
jae
add
add
add
add
inc
add
lcall
ret
add
add
movsb
fwait
cld
nop
jmp
add
add
add
imul
add
clc
repnz
jae
add
sbb
test
add
test
repnz
jae
in
add
out
mov
fwait
cld
nop
jmp
add
add
mov
stos
fwait
mov
clc
repnz
jae
add
outsb
addb
push
mov
dec
inc
add
cmp
add
mov
push
mov
xchg
ret
mov
addl
sub
repnz
jae
pop
cmp
movl
add
repnz
jae
add
add
leave
push
push
mov
xchg
ret
or
bound
out
mov
test
adc
add
repnz
jae
add
add
add
add
xor
clc
repnz
jae
cmp
movsl
add
add
clc
repnz
jae
mov
xchg
jae
push
clc
repnz
jae
or
int3
add
inc
jne
adc
pop
mov
push
mov
xchg
ret
mov
jne
adc
cmpsb
add
dec
in
sbb
movsl
jecxz
add
mov
dec
mov
clc
push
mov
xchg
ret
cmp
int
dec
adc
mov
xchg
ret
add
add
xor
push
sub
add
repnz
jae
test
add
jae
dec
or
add
add
jne
jmp
das
add
add
add
mov
testb
add
push
mov
xchg
ret
add
popa
inc
add
add
repnz
jae
ds
cwtl
notb
add
push
mov
xchg
ret
das
repnz
add
inc
add
jg
clc
repnz
jae
leave
mov
add
rcrb
cld
nop
jmp
add
cmp
mov
add
add
add
add
mov
leave
call
clc
repnz
jae
leave
or
or
add
repnz
jae
dec
add
cmp
jne
fwait
cld
nop
jmp
cmp
cmp
mov
fldt
popa
clc
repnz
jae
add
jne
sub
pop
lcall
push
add
add
int3
add
inc
add
add
jne
or
push
sarl
fwait
cld
nop
jmp
add
inc
test
mov
dec
cmp
repnz
jae
ret
add
mov
call
clc
repnz
jae
add
dec
cmpsl
mov
repnz
jae
add
mov
ja
sbb
add
add
insb
add
mov
clc
repnz
jae
in
add
or
dec
stos
clc
repnz
jae
pop
ja
sub
mov
out
mov
clc
repnz
jae
mov
add
add
xor
add
jmp
ret
add
cwtl
xchg
insb
dec
mov
clc
repnz
jae
pop
inc
test
imul
sti
incl
cmp
add
sub
sub
repnz
jae
mov
mov
add
add
add
pop
clc
repnz
jae
or
cwtl
add
and
add
pop
jmp
dec
add
add
xchg
aam
int3
or
add
sub
clc
repnz
jae
addl
sbb
mov
mov
clc
repnz
jae
aam
xchg
mull
repnz
jae
int3
add
nop
jae
add
pop
cmp
cmp
sbb
repnz
jae
add
add
lea
iretw
inc
add
add
sbb
popf
push
mov
xchg
ret
add
leave
orl
or
mov
xchg
ret
add
int3
push
add
add
fwait
cld
nop
jmp
inc
add
popa
add
mov
add
cld
nop
jmp
sub
in
add
ja
mov
clc
repnz
jae
sbb
add
imul
clc
repnz
jae
outsb
and
or
mov
add
clc
repnz
jae
jae
sub
rolb
lods
je
clc
repnz
jae
add
push
clc
repnz
jae
jne
jae
add
adc
mov
mov
xchg
ret
add
add
add
mov
clc
repnz
jae
or
cmp
lret
clc
repnz
jae
add
add
pop
push
mov
xchg
ret
add
ret
mov
adc
movsl
incl
add
xchg
add
add
add
add
pushl
clc
repnz
jae
add
call
jae
bound
cmp
add
xor
pop
add
clc
repnz
jae
add
pop
aam
add
push
stos
add
push
mov
xchg
ret
add
add
mov
cmp
clc
repnz
jae
add
sub
mov
call
add
clc
repnz
jae
repnz
stos
mov
clc
repnz
jae
ret
out
mov
repz
filds
xchg
ret
add
cmc
mov
or
clc
repnz
jae
add
inc
or
cltd
pop
clc
repnz
jae
add
pop
mov
ja
add
fwait
cld
nop
jmp
cmp
add
add
rolb
cli
and
push
mov
xchg
ret
jae
add
lock
add
repnz
jae
add
out
ja
dec
clc
repnz
jae
add
add
imul
add
pop
xor
push
mov
xchg
ret
stos
add
int3
test
scas
cmpl
fwait
cld
nop
jmp
pop
add
add
jne
clc
repnz
jae
add
dec
add
imul
add
push
mov
xchg
ret
sbb
add
test
lods
add
clc
repnz
jae
or
add
add
rcpps
repnz
jae
add
add
mov
inc
add
mov
clc
repnz
jae
add
ret
or
xor
add
clc
repnz
jae
add
clc
repnz
jae
aam
jne
sub
add
push
add
add
add
enter
add
add
repnz
jae
add
add
icebp
inc
add
pop
pop
add
or
sbb
je
repnz
jae
add
cmp
jl
and
cs
inc
add
add
test
add
push
mov
xchg
ret
out
add
add
cmc
mov
nop
jae
cmc
in
cmp
add
pop
sub
jbe
clc
repnz
jae
add
movsb
add
inc
clc
repnz
jae
cmc
pop
add
add
add
clc
repnz
jae
insb
add
push
clc
repnz
jae
add
cmp
cmp
add
in
add
pushf
mov
clc
repnz
jae
movsl
leave
add
mov
clc
repnz
jae
add
sub
mov
sahf
add
add
add
jne
fwait
cld
nop
jmp
bound
and
add
repnz
jae
add
add
rorl
add
jl
clc
repnz
jae
sbb
add
mov
or
clc
repnz
jae
testb
add
add
or
add
push
push
mov
xchg
ret
cmp
mov
add
repnz
jae
leave
xchg
imul
xor
add
clc
repnz
jae
jbe
test
nop
jmp
add
mov
add
xchg
add
sbb
cmp
repnz
jae
add
repnz
hlt
inc
add
and
idivb
ds
lcall
sbb
add
add
ret
mov
clc
repnz
jae
add
add
bound
mov
test
fwait
cld
nop
jmp
add
or
add
sahf
mov
nop
jmp
stos
dec
add
add
dec
fwait
cld
nop
jmp
add
ret
bound
test
add
lret
fwait
cld
nop
jmp
add
add
add
xor
clc
repnz
jae
in
mulb
add
outsb
cmpl
fwait
cld
nop
jmp
imul
cmp
dec
add
repnz
jae
mov
jo
and
mov
xchg
ret
cwtl
add
add
scas
push
fwait
cld
nop
jmp
add
add
ds
add
clc
repnz
jae
cmp
mov
mov
mov
xchg
ret
imul
cmc
pop
xor
fwait
cld
nop
jmp
ret
test
mov
cld
nop
jmp
outsb
shr
add
add
sarl
push
fwait
cld
nop
jmp
add
sub
or
add
repnz
add
clc
repnz
jae
and
add
outsb
das
gs
mov
fwait
cld
nop
jmp
test
add
sub
add
clc
repnz
jae
inc
add
add
push
clc
repnz
jae
add
movsl
add
sbb
nop
jae
xor
cmp
pop
add
push
add
repnz
jae
addl
add
jmp
roll
ret
add
repnz
jae
inc
cmc
add
or
int3
add
add
in
jne
clc
repnz
jae
add
mov
pop
clc
repnz
jae
add
outsb
add
repnz
add
push
mov
xchg
ret
xchg
cwtl
aam
add
add
add
clc
repnz
jae
int3
add
mov
xchg
ret
cmp
add
addb
mov
clc
repnz
jae
add
leave
xor
mov
xchg
ret
add
pop
insb
inc
jg
sar
nop
jae
cmp
or
add
outsb
mov
add
sub
jge
clc
repnz
jae
insb
add
mov
push
mov
xchg
ret
pop
add
add
rol
add
inc
add
fwait
cld
nop
jmp
cwtl
add
add
or
inc
cmp
nop
jae
jae
inc
jne
add
fwait
cld
nop
jmp
mov
jo
stos
mov
clc
repnz
jae
jne
cmc
add
push
xor
dec
push
mov
add
add
add
xor
add
add
jmp
repnz
jae
add
aam
popa
clc
repnz
jae
pop
dec
mov
or
add
adc
mov
xchg
ret
sbb
ja
add
jae
add
cmp
repnz
jae
add
jo
repnz
add
clc
repnz
jae
add
mov
add
mov
or
jmp
add
sbb
add
clc
repnz
jae
pop
leave
das
add
test
nop
jae
cmp
add
ret
lea
clc
repnz
jae
int3
add
add
xorl
fwait
cld
nop
jmp
dec
test
outsb
and
clc
repnz
jae
add
add
add
add
add
mov
xchg
ret
out
jne
cwtl
add
mov
fwait
cld
nop
jmp
add
add
xor
add
push
mov
xchg
ret
add
cmp
out
mov
nop
jae
add
cmp
pop
pusha
clc
repnz
jae
add
add
insb
shrl
mov
nop
jae
sbb
cmp
cmp
ret
add
mov
fwait
cld
nop
jmp
add
mov
add
es
pop
clc
repnz
jae
add
add
add
mov
nop
jae
add
sbb
sub
clc
repnz
jae
add
add
pop
add
push
push
mov
xchg
ret
jne
add
jbe
or
nop
jae
add
push
add
mov
xchg
ret
add
bound
fisubl
clc
repnz
jae
add
or
fwait
cld
nop
jmp
add
add
cmp
imul
cld
nop
jmp
in
repnz
or
add
mov
add
ja
add
mov
add
add
add
jmp
jae
repnz
jae
add
cmp
add
clc
repnz
jae
add
int3
add
je
in
and
flds
add
jae
add
cwtl
add
popa
jne
push
clc
repnz
jae
add
sbb
add
imulb
add
clc
repnz
jae
add
jbe
add
jp
xabort
nop
jae
add
inc
sub
add
mov
push
mov
xchg
ret
add
add
add
add
jmp
add
add
add
mov
clc
repnz
jae
jae
sub
outsb
test
out
add
push
mov
xchg
ret
mov
add
xchg
sub
test
add
clc
repnz
jae
add
add
repnz
jae
pop
add
insb
cmp
mov
clc
repnz
jae
xor
add
cmpl
cmpsb
pop
add
add
pop
xlat
fwait
mov
fwait
cld
nop
jmp
or
add
push
clc
repnz
jae
imul
add
mov
jae
test
add
sbb
add
pop
mov
push
mov
xchg
ret
in
imul
aad
mov
clc
repnz
jae
aam
add
sbb
cmc
rolb
lock
sbb
add
repnz
jae
add
hlt
inc
add
cwtl
jae
add
fwait
cld
nop
jmp
sub
or
add
lods
push
mov
xchg
ret
add
ja
add
add
add
repnz
jae
add
mov
inc
add
xchg
add
mov
xchg
ret
bound
inc
movsl
mov
inc
push
mov
xchg
ret
out
in
testb
jne
and
fwait
cld
nop
jmp
pop
add
add
sbb
jae
leave
stos
add
insb
add
jg
leave
fwait
cld
nop
jmp
add
add
add
and
cli
push
add
clc
repnz
jae
add
cmp
inc
or
repnz
jae
stos
add
add
add
cmp
fwait
cld
nop
jmp
add
cmp
inc
cmp
mov
mov
clc
repnz
jae
sahf
sbb
add
add
push
or
aad
add
add
adc
add
repnz
jae
add
jl
adc
repnz
jae
jae
mov
add
movsl
cmc
outsl
mov
push
mov
xchg
ret
add
das
inc
add
mov
clc
repnz
jae
sub
xchg
aam
or
clc
clc
repnz
jae
add
add
and
add
and
push
mov
xchg
ret
add
cwtl
add
add
cmpl
fwait
cld
nop
jmp
imul
add
xchg
push
mov
xchg
ret
cmp
cmp
add
stos
add
fwait
cld
nop
jmp
add
ret
ret
clc
repnz
jae
mov
add
add
mov
jnp
mov
clc
repnz
jae
in
sbb
add
clc
repnz
jae
imul
push
mov
xchg
ret
sbb
sbb
jbe
push
mov
xchg
ret
add
add
or
repnz
jae
imul
nop
jmp
dec
cmc
add
add
sbb
movsb
clc
repnz
jae
outsb
or
add
inc
sbb
mov
xchg
ret
add
insb
imul
jmp
insb
repnz
roll
shll
shr
clc
repnz
jae
imul
xor
push
push
mov
xchg
ret
jne
add
sahf
xchg
add
add
push
mov
xchg
ret
sahf
mov
add
add
clc
repnz
jae
in
outsb
add
xor
or
mov
out
mov
clc
repnz
jae
cwtl
imul
mov
clc
repnz
jae
add
mov
lea
clc
repnz
jae
add
dec
add
add
inc
add
mov
xchg
ret
add
add
add
out
sub
clc
repnz
jae
add
or
shr
fwait
cld
nop
jmp
add
sbb
add
fwait
cld
nop
jmp
mov
sbb
add
jmp
out
rcrl
add
add
leave
xchg
add
cld
nop
jmp
add
out
inc
jne
cmp
test
xlat
inc
add
add
dec
add
imul
cs
add
sbb
imul
int3
xor
push
mov
xchg
ret
sub
in
imul
sub
add
repnz
jae
add
imul
xor
add
clc
repnz
jae
das
add
push
nop
jae
add
sbb
and
add
add
mov
push
clc
repnz
jae
add
movsl
add
popa
add
repnz
jae
add
movsl
imulb
cld
nop
jmp
test
mov
movl
fwait
cld
nop
jmp
leave
or
add
test
add
repz
mov
xchg
ret
add
add
dec
out
jne
add
push
clc
repnz
jae
dec
ja
add
in
das
and
clc
repnz
jae
mov
xor
clc
repnz
jae
sub
add
insb
add
add
xor
sbb
cmp
ret
add
or
and
mov
xchg
ret
add
out
add
cmpsl
cmp
nop
jmp
add
add
add
jne
add
popa
add
repnz
jae
cmp
xchg
add
add
add
cld
nop
jmp
mov
add
cmp
clc
repnz
jae
add
cmc
imul
dec
fwait
cld
nop
jmp
or
add
mov
roll
out
or
test
add
add
adc
add
add
xchg
sbb
jmp
add
mov
add
add
clc
repnz
jae
xor
mov
cmp
fwait
cld
nop
jmp
jne
add
add
jg
clc
repnz
jae
add
jbe
add
xchg
add
add
clc
repnz
jae
ret
outsb
or
and
clc
repnz
jae
add
add
add
cmc
nop
jae
jne
sahf
add
rcl
xchg
ret
push
push
mov
xchg
ret
add
xor
add
mov
clc
repnz
jae
inc
add
add
test
add
clc
repnz
jae
xor
mov
clc
repnz
jae
add
add
add
push
add
fwait
cld
nop
jmp
cmp
mov
add
int3
add
mov
clc
repnz
jae
add
xor
add
stos
clc
repnz
jae
add
add
add
add
mov
clc
repnz
jae
add
or
add
push
clc
repnz
jae
add
and
rep
fwait
cld
nop
jmp
aam
or
in
aam
cwtl
leave
shl
push
mov
xchg
ret
jae
sbb
sub
daa
stc
mov
clc
repnz
jae
inc
jne
add
cwtl
add
cltd
test
fwait
cld
nop
jmp
mov
add
dec
cmc
sub
in
add
add
cmp
lods
roll
push
jmp
jne
add
add
add
cmp
add
jmp
dec
add
mov
lods
push
push
mov
xchg
ret
add
mov
add
in
mov
clc
repnz
jae
add
insb
insb
clc
repnz
jae
inc
ja
add
fwait
cld
nop
jmp
mov
or
add
repnz
jae
add
in
jne
jecxz
ljmp
std
incl
ja
jae
or
mov
lods
mov
fwait
cld
nop
jmp
sub
add
add
lea
cld
nop
jmp
ret
jae
or
or
jecxz
push
clc
repnz
jae
cmp
or
add
cld
nop
jmp
and
add
add
add
push
mov
xchg
ret
add
add
add
repnz
jae
sbb
mov
out
add
mov
xchg
ret
mov
add
add
js
jle
clc
repnz
jae
add
sahf
int3
add
xor
pushl
fwait
cld
nop
jmp
add
and
data16
clc
repnz
jae
cmp
movl
push
mov
xchg
ret
add
imulb
pushl
or
add
add
mov
add
call
ret
stos
mov
fwait
cld
nop
jmp
inc
add
scas
mov
fwait
cld
nop
jmp
add
jae
or
add
movswl
clc
repnz
jae
mov
add
ja
push
clc
repnz
jae
in
add
cmp
or
and
mov
jge
add
fwait
cld
nop
jmp
int3
add
add
call
add
add
add
add
mov
cmpsb
add
jae
ret
in
mov
add
add
push
clc
repnz
jae
sub
add
in
jne
clc
repnz
jae
jae
jne
add
jbe
sbb
rcrb
decl
add
jge
dec
cmp
cld
nop
jmp
add
roll
out
idivb
inc
add
add
and
addl
add
clc
repnz
jae
inc
leave
add
adc
and
hlt
dec
movl
outsl
je
fwait
cld
nop
jmp
mov
add
stc
xor
clc
repnz
jae
ds
add
pop
imul
clc
repnz
jae
add
add
mov
add
add
test
cld
nop
jmp
sahf
add
cmp
push
push
mov
xchg
ret
test
in
outsb
add
or
ret
clc
repnz
jae
popa
add
imul
add
clc
repnz
jae
add
dec
ss
add
cmp
fwait
cld
nop
jmp
mov
cmp
push
rolb
les
les
sub
jae
add
add
mov
dec
movl
cmp
nop
jae
or
inc
or
inc
add
addb
add
clc
repnz
jae
ret
mov
or
clc
repnz
jae
mov
leave
dec
je
clc
repnz
jae
add
add
mov
cwtl
add
fwait
cld
nop
jmp
test
mov
add
add
add
clc
repnz
jae
sahf
leave
test
add
jne
lods
mov
push
mov
xchg
ret
popa
add
add
aas
add
clc
repnz
jae
cmp
xor
or
push
add
pop
clc
repnz
jae
andl
xchg
je
xor
insl
movswl
clc
repnz
jae
mov
jne
cmpsb
add
add
clc
repnz
jae
mov
bnd
add
clc
repnz
jae
add
or
movsl
adc
clc
repnz
jae
bound
fimuls
nop
jmp
outsb
dec
mov
add
add
jae
add
add
sbb
add
mov
or
cld
nop
jmp
movl
add
add
nop
jae
cmp
ja
int3
pop
jne
loop
push
add
in
add
or
add
int3
mov
clc
repnz
jae
add
in
mov
rorl
clc
repnz
jae
dec
in
add
inc
add
clc
repnz
jae
add
loope
mov
fwait
cld
nop
jmp
add
add
xchg
cmc
jne
lahf
cmp
fwait
cld
nop
jmp
jne
add
add
je
clc
repnz
jae
add
add
rcrl
hlt
ljmp
insb
sbb
inc
jmp
dec
adc
inc
add
sub
add
push
mov
xchg
ret
add
rcl
add
clc
repnz
jae
add
pop
add
add
add
clc
repnz
jae
add
movsl
pop
shrl
or
push
mov
xchg
ret
imul
clc
repnz
jae
jae
add
mov
jae
mov
add
repnz
jae
add
popa
add
cld
nop
jmp
mov
add
cwtl
add
push
push
mov
xchg
ret
dec
add
in
testb
mov
clc
repnz
jae
jne,pt
or
add
js
inc
add
cmp
popa
ret
lea
clc
repnz
jae
jae
or
inc
add
add
mov
clc
repnz
jae
cmp
add
add
aaa
icebp
adc
add
clc
repnz
jae
inc
add
mov
and
pop
push
mov
xchg
ret
stos
jbe
add
add
fwait
cld
nop
jmp
int3
add
lods
and
push
mov
xchg
ret
add
pop
imul
fwait
cld
nop
jmp
add
imulb
inc
and
add
and
repnz
jae
add
add
add
mov
mov
cmpl
andl
pop
sub
pusha
clc
repnz
jae
xor
add
or
testb
dec
push
mov
xchg
ret
add
add
jne
xor
lret
aad
add
add
add
add
rolb
jmp
fwait
cld
nop
jmp
add
in
imul
mov
loopne
xchg
inc
mov
add
inc
add
add
movzwl
fwait
cld
nop
jmp
add
sbb
repz
mov
xchg
ret
add
out
add
mov
jb
or
in
add
hlt
or
cmp
xor
add
push
push
mov
xchg
ret
sub
add
add
xor
xchg
roll
xchg
ret
add
popa
dec
test
add
ret
add
aas
lret
inc
add
test
add
clc
repnz
jae
add
add
sbb
nop
jmp
in
add
add
jb
dec
pusha
fwait
cld
nop
jmp
cwtl
add
add
lret
push
js
repnz
jae
add
add
sbb
mov
clc
repnz
jae
add
xchg
shll
add
mov
inc
add
test
leave
cwtl
aam
ret
in
pop
push
mov
xchg
ret
movl
add
xor
push
mov
xchg
ret
repnz
add
add
push
mov
xchg
ret
add
add
popa
push
add
add
add
push
mov
xchg
ret
add
cmp
icebp
dec
pop
clc
repnz
jae
sbb
cmp
add
ret
add
clc
repnz
jae
dec
add
add
nop
jae
add
add
add
add
nop
jae
or
add
faddl
pop
and
repnz
jae
add
movl
rolb
mov
clc
repnz
jae
mov
add
cwtl
push
clc
repnz
jae
test
test
mov
clc
repnz
jae
cwtl
cwtl
add
sub
js
fwait
cld
nop
jmp
out
imul
movsl
test
leave
pop
add
movl
ret
add
mov
cwtl
and
clc
repnz
jae
imul
push
je
clc
repnz
jae
add
add
add
mov
dec
add
repnz
jae
add
or
movl
add
add
jae
mov
insb
inc
mov
cwtl
in
sub
add
fwait
cld
nop
jmp
add
jns
inc
std
lcall
out
push
add
outsb
mov
cmp
fwait
cld
nop
jmp
add
imul
xchg
filds
xchg
ret
add
add
aam
fisttpl
test
or
add
repnz
jae
test
mov
add
xchg
fwait
cld
nop
jmp
mov
or
inc
or
xor
push
mov
xchg
ret
add
add
jo
popf
mov
push
mov
xchg
ret
pop
cwtl
jae
das
add
jae
add
add
jnp
movsb
clc
repnz
jae
testb
mov
addl
popl
dec
cmp
repnz
jae
outsb
sbb
mov
mov
clc
repnz
jae
add
add
pop
cmp
inc
adc
repnz
jae
ja
add
add
mov
add
mov
add
cwtl
div
clc
repnz
jae
inc
sarl
add
inc
push
mov
xchg
ret
xor
add
push
clc
repnz
jae
jae
add
out
je
clc
repnz
jae
jne
or
call
clc
repnz
jae
test
jae
pop
mov
fwait
cld
nop
jmp
add
add
pop
add
fwait
cld
nop
jmp
add
sahf
pop
add
test
repnz
jae
mov
add
add
nop
jmp
add
cmp
add
xor
fwait
cld
nop
jmp
add
orl
add
clc
repnz
jae
add
jae
rcr
push
mov
xchg
ret
add
or
repnz
mov
insb
inc
jb
clc
repnz
jae
add
leave
add
mov
clc
repnz
jae
add
add
add
repnz
jae
int3
add
or
mov
clc
repnz
jae
imul
in
repnz
mov
push
mov
xchg
ret
add
mov
cld
nop
jmp
add
movl
add
pop
clc
repnz
jae
add
add
add
sar
nop
jae
mov
mov
subl
clc
repnz
jae
add
movsl
cmp
add
shl
clc
repnz
jae
add
add
add
movb
add
clc
repnz
jae
add
jne
add
mov
jle
jmp
jae
xor
cmp
sahf
add
add
rcl
inc
add
jae
xor
cmp
push
clc
repnz
jae
cmc
or
add
add
pop
push
mov
xchg
ret
add
dec
add
mov
xchg
add
cld
nop
jmp
sahf
movl
inc
add
adc
repnz
jae
or
or
mov
clc
repnz
jae
mov
int3
je
clc
repnz
jae
add
add
pushl
clc
repnz
jae
add
or
add
das
in
ljmp
add
add
mov
cli
add
daa
stos
jno
xchg
mov
add
inc
add
clc
repnz
jae
ja
mov
add
mov
push
mov
xchg
ret
out
mov
jbe
add
add
add
repnz
jae
mov
mov
add
jae
lea
test
loop
lcall
lock
ljmp
popa
add
xchg
add
xorl
clc
repnz
jae
xchg
add
jnp
inc
add
mov
dec
fwait
cld
nop
jmp
mov
add
movsl
add
cmp
xor
fwait
cld
nop
jmp
add
add
mov
fimuls
jae
add
cmp
mov
lock
nop
jae
add
or
add
dec
test
fwait
cld
nop
jmp
add
bound
xchg
mov
jnp
clc
repnz
jae
jae
add
and
push
mov
xchg
ret
int3
in
inc
in
cwtl
or
out
lret
xchg
ret
jne
add
or
add
cld
nop
jmp
leave
add
or
in
mov
clc
repnz
jae
add
and
add
push
mov
xchg
ret
mov
add
mov
jne
clc
repnz
jae
cmp
mov
xchg
ret
imul
add
mov
clc
repnz
jae
jne
test
add
mov
xchg
ret
add
add
add
fnstenv
sar
repnz
jae
add
sub
mov
repnz
jae
add
and
negb
push
fwait
cld
nop
jmp
jae
or
cwtl
icebp
test
adc
sti
fwait
cld
nop
jmp
add
repnz
fwait
cld
nop
jmp
or
roll
sbb
jne
pop
pop
push
mov
xchg
ret
add
add
add
add
into
add
clc
repnz
jae
movsl
jne
jbe
jne
clc
repnz
jae
add
cwtl
jnp
jg
fwait
cld
nop
jmp
add
add
add
cld
nop
jmp
add
add
add
cmp
clc
leave
clc
repnz
jae
add
xchg
add
mov
jl
int
pop
jae
repnz
jae
int3
int3
mov
add
icebp
roll
mov
clc
repnz
jae
add
add
and
call
fwait
cld
nop
jmp
imul
push
clc
repnz
jae
insb
add
sbb
ret
clc
repnz
jae
mov
add
in
add
enter
nop
jae
inc
in
xor
add
add
sahf
movzwl
fwait
cld
nop
jmp
add
stos
movl
push
mov
xchg
ret
add
add
rdpmc
repnz
jae
in
mov
add
jae
pop
push
push
mov
xchg
ret
pop
cmc
add
test
dec
push
push
mov
xchg
ret
jne
add
cmp
sbb
cmpl
nop
jmp
add
add
add
sub
clc
repnz
jae
add
testb
repnz
jae
insb
add
clc
repnz
jae
pop
jbe
leave
add
mov
xlat
jns
push
add
jb
or
mov
movsb
add
loop
fwait
cld
nop
jmp
add
add
cmc
imul
push
mov
xchg
ret
stos
add
or
mov
xchg
rolb
sbb
push
mov
xchg
ret
add
pop
xor
fwait
cld
nop
jmp
cmp
jae
add
inc
add
dec
call
clc
repnz
jae
add
insb
add
push
push
mov
xchg
ret
sub
jae
jne
or
jmp
sbb
add
add
add
nop
jae
add
add
add
dec
pop
clc
repnz
jae
add
add
or
ret
jecxz
cmpsb
add
mov
clc
repnz
jae
mov
add
add
sti
add
clc
repnz
jae
mov
pop
outsb
jae
rep
clc
repnz
jae
out
jae
add
jne
repz
push
push
mov
xchg
ret
sbb
add
add
cmp
fwait
cld
nop
jmp
mov
stos
sub
jl
clc
repnz
jae
add
in
in
push
clc
repnz
jae
aam
add
jae
add
sar
shl
fwait
cld
nop
jmp
jne
cwtl
movsl
out
add
cwtl
testl
cwtl
jne
bound
ds
add
add
in
or
or
add
inc
aam
mov
loope
add
jmp
mov
add
repnz
jae
test
add
leave
lcall
rolb
xchg
ret
sahf
das
inc
add
iret
mov
clc
repnz
jae
in
add
push
clc
repnz
jae
add
or
push
fisubs
sbb
add
clc
repnz
jae
add
lds
clc
repnz
jae
add
popa
add
pop
pop
push
mov
xchg
ret
add
add
dec
mov
clc
repnz
jae
add
or
sbb
frstor
xor
add
clc
repnz
jae
add
ret
push
mov
xchg
ret
add
add
test
add
push
mov
xchg
ret
add
add
add
xchg
add
add
mov
add
incl
add
fiadds
jge
fwait
cld
nop
jmp
pop
add
sahf
add
add
push
mov
xchg
ret
in
sub
ds
jne
clc
repnz
jae
mov
cmc
addb
mov
push
mov
xchg
ret
add
jae
stos
add
mov
xchg
ret
or
out
sub
nop
add
mov
xchg
ret
imul
decl
clc
repnz
jae
cwtl
add
movl
jbe
fwait
cld
nop
jmp
leave
add
out
test
mov
clc
repnz
jae
add
add
push
movzwl
clc
repnz
jae
or
add
mov
add
add
repnz
jae
dec
ds
clc
repnz
jae
cmp
or
negb
ds
add
lcall
idiv
incl
test
test
jnp
dec
sub
repnz
jae
add
movsl
add
aam
add
push
mov
xchg
ret
add
int3
ret
mov
adc
repnz
jae
xchg
aam
or
sub
mov
xchg
ret
mov
test
jae
jae
add
mov
add
add
clc
repnz
jae
mov
out
bound
fcomi
clc
repnz
jae
add
and
movb
push
clc
repnz
jae
ret
xchg
mov
mov
fwait
cld
nop
jmp
add
inc
sub
jae
add
pop
add
fwait
cld
nop
jmp
add
add
out
mov
clc
repnz
jae
test
add
push
mov
xchg
ret
add
test
mov
cld
nop
jmp
mov
add
xor
add
lea
clc
repnz
jae
add
add
xor
rcrl
clc
push
mov
xchg
ret
add
inc
jmp
jae
add
in
add
and
jecxz
clc
repnz
jae
add
imul
incl
cmc
add
add
ja
add
or
push
mov
xchg
ret
cmc
outsb
add
add
mov
clc
repnz
jae
test
cwtl
add
in
js
leave
lock
clc
repnz
jae
add
imul
clc
repnz
jae
ds
xor
adc
jno
and
add
add
repnz
jae
add
int3
pop
push
mov
xchg
ret
add
add
jae
cmp
popa
add
repnz
jae
cwtl
add
mov
jbe
and
clc
repnz
jae
sbbl
enter
fldl
xchg
ret
out
sub
add
add
adc
xchg
fwait
cld
nop
jmp
stos
jbe
add
jne
add
clc
repnz
jae
add
out
cs
mov
js
lock
add
or
lcall
add
dec
aam
add
adc
pop
ja
mov
fstpl
movb
mov
add
add
fistpl
add
sub
jge
mov
es
add
xlat
mov
add
mov
movb
pop
fildll
sbb
add
rolb
push
add
add
icebp
sahf
dec
cli
leave
imul
popl
or
adc
add
inc
add
pop
repz
add
xor
test
stos
fisubrl
add
out
hlt
add
add
xchg
or
repnz
mov
hlt
add
sarl
xor
xor
mov
sbb
cmc
mov
dec
mov
add
mov
mov
cmp
sub
jae
or
icebp
inc
add
rolb
add
addb
add
push
push
rolb
add
data16
push
add
add
mov
nop
add
add
arpl
lret
push
mov
add
or
mov
add
xor
xlat
mov
leave
pop
inc
clc
ret
push
add
sub
testb
inc
add
je
icebp
add
add
testb
mov
clc
and
mov
mov
push
add
xor
bound
mov
add
in
bound
mov
daa
mov
or
sub
lods
pop
or
push
add
add
add
add
cmpsl
mov
mov
daa
movb
cmpsl
icebp
push
mov
add
add
or
fisubrl
rolb
xorl
add
repz
fstpl
in
xchg
add
mov
popf
mov
test
xchg
sub
sbb
xchg
dec
cld
jp
sub
push
add
add
mov
mov
fbstp
add
out
ljmp
out
sub
fdivrs
pop
mov
add
in
cmp
testb
fisubrs
addb
add
in
es
mov
addb
push
add
add
mov
movsl
ret
je
mov
in
sbb
mov
ficompl
jno
arpl
divl
jmp
das
and
mov
data16
push
add
cmp
add
add
cmc
test
xchg
rdtsc
sbb
add
mov
jl
add
pop
xchg
add
clc
imull
call
pusha
add
addr16
add
or
dec
popa
sbb
xchg
add
aam
or
jae
push
repnz
lea
or
push
pop
xor
decb
pop
push
pusha
add
mov
add
xchg
cmp
mov
mov
push
add
leave
add
add
daa
inc
add
mov
push
add
add
pop
ret
sub
inc
xchg
dec
aam
push
movsb
add
xor
int3
mov
pop
lcall
fldl
add
inc
mov
out
repz
ffreep
sub
lcall
add
addr16
or
add
test
sub
push
mov
cld
pop
negl
loopne
or
jge
popa
inc
hlt
add
add
push
movsl
imul
add
xchg
repnz
mov
and
add
add
pusha
add
out
dec
xchg
shll
jnp
outsl
dec
xor
xchg
hlt
add
aam
lods
nop
add
xchg
clc
fildl
out
insl
pop
enter
jecxz
adc
push
add
jbe
ljmp
mov
pop
std
xchg
push
add
ret
add
add
pop
iret
sti
push
sbb
mov
testb
ds
testb
ja
add
pop
mov
jno
add
inc
add
addr16
mov
jb
pop
pop
sub
iret
push
fs
mov
jg
add
movsb
add
les
xor
in
and
mov
sbb
repz
shll
add
sarl
adc
mov
cmp
lret
cmp
mov
out
ret
and
add
add
mov
mov
stos
xlat
xchg
xlat
stc
ret
ret
xchg
add
add
mov
add
cmp
rolb
icebp
xchg
arpl
repnz
add
sub
add
aas
imul
jecxz
leave
repnz
sbb
xchg
add
movsl
cs
xchg
rolb
imul
xchg
fsubrl
mov
stos
mov
add
mov
pop
fsubr
and
mov
xor
lcall
or
mov
mov
loop
mov
mov
mov
ret
mov
xor
test
pop
lcall
sbb
add
dec
adc
push
add
pop
fdivr
mov
xchg
out
mov
add
rorl
add
and
mov
xchg
jns
test
xor
lret
mov
sub
jb
xchg
mov
movsb
add
lods
or
add
mov
arpl
add
jne
bound
mov
test
jbe
out
sahf
adc
jno
add
stc
mov
add
add
std
daa
mov
clc
adc
jbe
mov
jmp
mov
movb
pop
dec
jo
imul
test
and
mov
fistl
mov
movsl
add
add
add
xchg
lahf
in
mov
add
cmp
cmp
jmp
pushf
psadbw
loop
out
xor
les
psubsb
add
pop
iret
aam
stos
add
arpl
add
add
mov
add
mov
rcpss
cmp
push
add
add
add
out
lds
add
sbb
sub
dec
js
cmp
dec
cmp
mov
jmp
add
push
cwtl
mov
fwait
outsb
push
add
test
lods
aam
mov
add
mov
pop
inc
add
popa
sbb
lahf
mov
add
fstl
sbb
mov
xlat
pop
jo
pop
addr16
add
add
inc
jno
pushf
mov
add
mov
fnstcw
hlt
add
add
cmp
mov
movb
mov
fdivs
mov
add
test
repnz
pop
jg
xor
loope
add
ja
add
cmp
cmpsl
testb
lret
pop
in
add
jb
jb
repz
add
add
inc
add
lret
add
xor
add
incb
jg
push
add
push
add
add
pop
imul
mov
xchg
add
or
add
push
mov
add
push
sbb
out
ficoml
xor
loop
addr16
leave
fstl
ret
sahf
iret
lods
pop
out
ret
daa
mov
ret
outsb
movsb
add
imul
test
push
add
cltd
jnp
dec
hlt
add
dec
cmp
jl
cltd
dec
sub
add
dec
sub
cmp
cltd
sbb
cltd
leave
pop
fistl
jge
jae
dec
testb
outsb
cld
and
pop
ljmp
addb
out
ljmp
and
bound
mov
cli
push
add
add
mov
mov
adc
inc
add
pop
mov
add
mov
pop
jmp
add
sbb
insb
push
aam
inc
add
fwait
pop
loope
fisttpl
add
dec
sahf
cld
pop
push
mov
mov
cmpsb
add
imul
xor
and
add
xor
mov
cld
sbbl
and
mov
mov
jge
sub
ds
xchg
mov
jmp
push
add
add
add
test
inc
dec
jmp
add
add
daa
cmp
add
or
dec
dec
push
ds
sbb
add
inc
add
jmp
fsub
add
add
add
sub
jns
add
pop
bound
mov
add
mov
inc
push
rcrl
add
add
xor
mov
imul
add
add
add
iret
adc
rolb
xchg
cmp
lret
aad
add
lds
fdivrp
push
add
mov
mov
cwtl
loop
addb
std
loopne
jnp
rcrl
push
loop
cld
or
push
add
add
mov
push
add
add
jae
add
sbb
push
xchg
add
inc
add
scas
fdivp
add
add
add
add
add
cmp
sbb
testb
inc
add
push
ja
lods
into
pop
addb
adc
loopne
xchg
and
jl
adc
add
jg
add
dec
in
dec
sti
bound
mov
cmpsb
add
stos
mov
movsb
add
in
testb
test
jb
lret
aam
push
mov
add
lods
or
or
add
add
xor
xchg
jl
add
mov
add
xor
dec
jg
test
pop
inc
add
dec
loope
data16
in
xor
in
xchg
add
add
test
jne
add
mov
or
repz
push
add
add
sbb
es
call
add
mov
mov
sbb
cwtl
cmp
icebp
jle
ljmp
add
adc
cwtl
mov
add
and
cli
fwait
das
lods
xor
add
adc
add
and
jmp
jnp
push
add
fwait
add
out
cmp
sbb
mov
add
jbe
push
add
add
add
stc
imul
pop
jmp
add
add
add
cmp
add
add
popf
jp
push
add
add
or
ds
add
aam
mov
sub
je
out
add
sbb
gs
add
add
sub
add
xchg
pop
jne
cs
pushf
push
add
je
mov
enter
add
push
add
add
sub
mov
xor
enter
add
imul
xchg
mov
popa
imul
add
es
scas
mov
pop
mov
ficomps
dec
jo
add
fstp
mov
jnp
add
scas
lret
add
and
mov
add
aad
cmp
xchg
mov
out
pop
scas
mov
jg
pop
aam
lds
add
xchg
loope
addb
enter
add
and
jp
pop
inc
add
mov
sti
rolb
fwait
aaa
stos
push
pop
loope
inc
add
test
rolb
inc
nop
add
das
sarl
lods
cwtl
addb
mov
lods
jno
dec
repnz
xchg
push
xor
jo
cmc
pop
test
dec
mov
inc
dec
xor
mov
addb
xor
mov
aad
add
sbb
dec
call
cmpsl
pop
fildll
jg
add
lock
out
lea
mov
dec
sub
add
mov
add
cs
add
add
mov
jns
ja
jne
inc
aaa
imul
add
push
addb
add
ds
mov
cld
xchg
add
add
add
add
rolb
add
or
outsl
mov
ret
pop
or
sub
movsb
add
mov
inc
mov
add
xorl
in
aaa
stc
fsubrl
stos
or
jne
bound
mov
add
add
nop
add
add
jbe
or
push
add
adc
pop
negl
add
add
sub
aaa
inc
pop
inc
jmp
movb
std
add
add
jl
add
push
add
adc
ljmp
lock
add
cmp
sti
imul
pop
fldlg2
lret
xchg
jg
add
push
jmp
testb
add
add
lcall
push
add
xchg
add
cltd
xor
bound
mov
inc
or
adc
inc
add
add
add
dec
addr16
loopne
loope
int3
scas
out
jp
add
add
in
arpl
mov
add
add
lock
sbb
pop
jp
movb
ljmp
add
pop
into
and
int3
popf
push
aad
add
add
rorl
add
add
jmp
add
fsubs
cltd
insl
es
sub
pop
jbe
rolb
mov
add
int3
rolb
cmp
lcall
xchg
lret
testb
xchg
jno
jmp
xchg
xchg
stc
shr
mov
add
popa
popa
lds
test
add
lods
jo
sbb
cltd
sbb
int3
ja
test
dec
lock
add
add
pop
bound
mov
out
fcmovne
ftst
add
add
cltd
mov
outsb
jnp
inc
add
mov
add
mov
loopne
push
add
movsb
add
add
and
jp
dec
lcall
gs
pop
mov
ret
in
add
xchg
add
mov
pop
xor
or
mov
jo
mov
sbb
xor
add
inc
cmc
sbb
add
push
ljmp
add
into
sub
add
jae
pop
push
shll
add
add
mov
cmpsb
add
xor
clc
movsb
add
add
xchg
add
mov
movsl
mov
adc
in
cltd
mov
inc
nop
add
add
push
hlt
add
add
pop
sub
add
fwait
push
lods
loop
aas
adc
add
jo
sub
out
repz
mov
imul
outsb
mov
call
add
jo
or
add
add
add
inc
xchg
add
adc
add
jge
add
loope
cmp
xchg
lret
add
inc
mov
add
jb
ficomps
aaa
addb
add
lret
jns
add
pop
jecxz
rolb
mov
inc
add
push
add
or
inc
add
pushf
rcl
nop
add
mov
call
add
xor
push
mov
enter
gs
push
add
xchg
add
bound
mov
pop
int3
js
add
push
repnz
lds
push
add
dec
push
add
lods
bound
mov
inc
rolb
add
add
add
lock
jb
sub
add
out
and
lock
xchg
int
mov
push
add
loopne
xchg
sahf
shll
sbb
movsl
adc
and
mov
jne
xchg
leave
repz
add
lcall
jp
lods
jl
push
stos
xchg
add
jno
add
in
nop
add
aaa
cmp
pop
cmc
dec
xchg
add
dec
sti
outsl
aad
add
add
lock
add
or
adc
filds
fbld
add
add
push
pop
and
push
scas
cmp
add
dec
pop
cmp
add
mov
add
bound
mov
pop
jne
dec
adc
mov
mov
jmp
add
mov
mov
mov
mov
add
loop
cltd
data16
add
sbb
add
add
xor
stos
test
ds
add
sub
add
insb
sarl
lods
or
lock
add
mov
and
mov
add
xchg
dec
mov
test
ds
add
add
and
inc
data16
cmc
ret
push
add
test
mov
sbb
cltd
movsb
add
dec
cltd
pop
xor
mov
inc
adc
add
add
hlt
add
add
mov
add
add
add
cld
xchg
scas
fcmovnu
push
add
mov
add
jmp
xlat
sub
cld
dec
daa
adc
inc
add
into
mov
add
ficomps
add
inc
add
lods
repnz
stc
sbb
add
add
add
add
mov
out
movb
sbb
loope
fsubrp
popa
push
sub
mov
jecxz
vsqrtpd
cmp
add
mov
and
or
mov
out
insb
icebp
fsubr
jmp
and
cmp
add
add
scas
roll
repz
add
aad
dec
or
push
pop
shll
jbe
enter
add
add
pop
stc
sbb
pop
inc
flds
xchg
push
fidivrl
sbb
xor
xlat
out
push
add
clc
cmpsl
add
lea
mov
mov
add
dec
xchg
aaa
inc
add
add
mov
jnp
and
mov
fstpt
jle
js
rolb
add
cmp
add
add
add
add
inc
add
scas
pop
ret
inc
xor
dec
jmp
and
mov
add
push
add
pop
dec
ret
and
sub
add
pop
adc
mov
add
mov
ret
push
add
data16
cltd
cmp
imul
cmp
mov
mov
mov
add
mov
loopne
sub
nop
add
imul
or
add
mov
add
mov
icebp
or
mov
add
and
or
aad
add
rolb
xor
movsb
add
cltd
or
out
push
add
and
mov
and
add
add
add
cmp
add
ljmp
sub
aad
lret
add
mov
add
sub
sti
push
push
and
jns
add
mov
sbb
gs
add
ret
add
or
adc
mov
pushf
addb
popa
mov
add
pop
insl
push
jb
adc
sbb
cmpsl
mov
frstor
lret
dec
dec
std
fisttpl
jmp
jns
add
lret
cltd
dec
jmp
movsb
add
mov
mov
in
mov
pop
aaa
push
mov
imul
add
adc
dec
sti
add
add
add
sub
jmp
xor
lret
addb
add
xchg
mov
ficoms
xor
add
negl
add
addb
stc
loopne
addl
rcrl
pop
ljmp
add
mov
mov
and
dec
push
add
enter
and
scas
addb
mov
and
mov
add
mov
push
sub
xor
rolb
xchg
add
mov
inc
or
and
mov
mov
add
mov
add
pop
popf
add
mov
repz
jbe
shrl
dec
imul
lods
lahf
cmp
add
xchg
lock
sub
push
rolb
push
add
add
clc
rolb
lds
sbb
arpl
movlps
leave
stos
pop
fisttpl
ja
pop
daa
ja
pop
adc
repnz
repz
aas
sti
xor
nop
add
sub
pop
pop
cmp
fimull
mov
mov
leave
dec
sub
and
mov
das
rep
push
dec
hlt
add
xchg
sarl
cmp
je
ljmp
sbb
mov
addb
cmpsl
jae
in
dec
xrelease
push
add
add
xchg
add
inc
add
add
xorl
test
jecxz
add
rcrl
aaa
sbb
mov
loop
testb
push
fucomi
inc
add
popa
leave
mov
add
cmp
mov
addb
xor
inc
add
addb
cld
and
mov
add
popa
or
fcmove
or
xchg
test
xchg
add
mov
add
add
cli
movb
fxch
xor
cmp
add
enter
add
add
and
mov
add
add
in
push
dec
iret
leave
cmc
add
mov
fdivr
mov
add
cld
sub
outsb
inc
add
add
pushf
jb
bound
mov
fisttpll
add
mov
add
imul
das
rolb
ljmp
insb
pushf
xor
data16
cli
ss
or
popl
add
sbb
push
add
add
movsl
ret
xchg
add
cmp
insl
bound
mov
std
stos
lahf
aas
pop
test
test
sbb
dec
mov
mov
adc
into
cmp
repnz
es
add
xlat
or
add
add
adc
lods
data16
add
push
add
sahf
cwtl
dec
pop
daa
pop
call
cld
js
sbb
mov
add
sub
lea
adc
out
rolb
loope
fildl
add
into
rolb
add
add
pop
fcmovne
imul
xchg
pop
mov
add
add
lds
testb
push
add
not
cmp
push
and
mov
pop
add
cmpsl
and
mov
rolb
mov
lea
fisubrs
cli
aaa
les
aas
test
add
iret
lret
mov
add
xchg
add
pop
dec
shr
xor
cmp
jno
cmp
bound
mov
sbb
add
lret
add
push
sahf
push
sub
mov
notl
mov
add
stc
inc
add
add
insb
cmc
sbb
sub
fistpl
push
add
add
rcr
jnp
add
movsb
add
clc
rcrl
mov
push
mov
std
jne
fstpt
iret
and
inc
add
popf
leave
push
add
movsb
add
push
add
fsubs
add
gs
and
mov
add
cmp
add
push
add
ret
pusha
add
add
mov
daa
fsubs
push
xchg
fisubs
add
jle
in
in
and
dec
je
std
add
inc
daa
or
stos
mov
fistpll
cmp
out
fsub
fnsave
add
add
dec
mov
inc
add
xchg
clc
das
cmp
mov
mull
testb
add
push
add
add
mov
add
add
mov
add
dec
in
pushf
lret
insb
pop
xchg
add
mov
add
insl
xchg
add
mov
movsl
jae
xor
add
les
out
lods
push
add
xchg
add
popa
insl
inc
int3
xor
js
mov
testb
add
add
mov
dec
xor
adc
add
mov
arpl
out
xchg
add
sbbl
scas
mov
add
fnsave
mov
xor
pop
push
add
data16
add
add
mov
xchg
add
cltd
jo
add
fwait
or
add
jge
push
and
aad
cmp
add
fldenv
and
mov
imul
add
push
add
jo
or
add
movsl
movsb
add
leave
add
fldpi
aaa
insb
loop
jbe
mov
cmp
add
jg
inc
ja
adc
cmp
rcrl
or
push
cmp
cmp
mov
in
rolb
jb
mov
xchg
insl
popa
mov
add
add
add
add
outsl
rolb
leave
and
add
mov
add
jecxz
in
xor
add
je
mov
popa
sbb
mov
add
out
fldcw
add
jne
gs
jp
imul
xchg
in
and
js
fcmovnb
mov
fucom
push
add
testb
sar
mov
jne
in
sbb
add
add
movsb
add
cmp
jno
in
xchg
push
and
add
adc
xor
mov
mov
out
jmp
icebp
mov
cli
ljmp
fistpl
dec
cmp
add
add
xor
add
addb
or
lea
mov
sbb
add
add
mov
stos
mov
js
ret
xchg
sbb
hlt
add
add
add
add
add
add
xchg
mov
add
rolb
push
add
inc
in
jg
add
mov
add
pop
cld
mov
in
movsl
addr16
add
out
push
add
iret
push
stos
adc
and
mov
cld
data16
add
mov
repz
add
fnsave
xlat
cmp
jae
insb
loopne
push
add
xor
sbb
dec
or
in
mov
dec
aam
xor
imul
sub
add
add
inc
pop
jo
xor
xor
jle
outsb
addb
hlt
add
mov
pop
xchg
mov
mov
mov
cmp
add
pop
dec
jle
adc
incb
jmp
cmp
sub
adc
add
mov
das
pop
mov
inc
in
mov
mov
add
mov
and
mov
cwtl
out
xlat
or
xchg
imul
fistl
scas
data16
push
add
add
push
add
add
adc
jle
les
cmp
out
testb
out
rorl
rolb
nop
add
add
add
pop
adc
loope
sbb
add
xor
add
jp
addb
dec
jae
push
add
enter
mov
mov
mov
xor
pop
ljmp
pop
sub
push
dec
insl
mov
adc
sub
icebp
cli
rorl
adc
mov
sub
or
adc
outsl
mov
add
scas
fmuls
add
add
stos
or
mov
je
pop
sbb
add
repz
lods
or
push
jp
sub
loopne
movsb
add
mov
or
sbb
xor
in
jnp
mov
in
cld
fwait
sub
pop
testb
scas
hlt
add
adc
aas
pop
lret
or
inc
add
add
pop
pop
jl
negl
test
jmp
bound
mov
xchg
add
add
sub
add
add
pop
jmp
lods
adc
cmp
add
add
add
push
add
dec
xchg
xchg
ds
jbe
mov
and
gs
cmp
add
xor
enter
test
add
stc
addl
mov
rolb
andl
scas
mov
in
cs
iret
lods
sub
jmp
std
jo
fisttpll
add
push
inc
inc
dec
add
push
add
aam
in
icebp
xchg
jmp
xor
test
adc
jns
shl
and
data16
add
nop
add
out
outsl
add
add
pop
pop
fidivrs
cmc
dec
xchg
add
add
add
adc
icebp
add
mov
sub
stos
inc
add
inc
push
imul
clc
cld
mov
cmp
add
mov
xor
loop
call
lods
cmp
sbb
add
add
jnp
movsl
push
dec
mov
sub
xchg
add
mov
inc
add
add
hlt
add
ds
pop
das
jb
xor
insb
add
leave
mov
xor
cmp
sub
add
add
out
addr16
add
add
hlt
add
popa
mov
mov
jmp
fadd
add
out
pop
enter
pushf
fistps
and
add
or
xchg
add
data16
add
and
enter
outsl
mov
aam
iret
inc
jb
adc
push
sahf
lret
add
outsl
sub
hlt
add
mov
std
fistl
stc
push
sub
mov
das
test
jp
lea
push
mov
mov
popa
aad
repnz
add
std
push
jg
stos
movsl
repnz
mov
mov
enter
daa
js
add
cmc
lods
jne
mov
add
pop
cmc
mov
and
mov
int3
lcall
inc
add
add
add
sti
mov
or
add
mov
aad
popf
cmp
sub
clc
pop
push
add
dec
cmp
jnp
add
aaa
push
push
add
lods
movb
out
cmp
addr16
xchg
aad
pop
aam
in
jae
out
arpl
scas
mov
xchg
addb
add
loop
pop
mov
rolb
movsl
in
in
add
add
mov
jg
add
push
add
loope
in
add
dec
imull
push
add
add
addb
push
add
mov
add
add
fbstp
add
xchg
mov
stos
add
pop
mov
addr16
rcrl
arpl
hlt
add
add
lret
cwtl
add
mov
rolb
out
push
fnsave
ret
add
sbb
pop
std
cld
push
add
rcr
push
add
add
rcrl
push
or
add
xorl
into
xchg
pop
aas
push
mov
xor
add
sub
sub
shrl
inc
add
add
inc
add
addb
xor
or
aam
mov
inc
add
add
mov
adc
cmp
sbb
add
ffree
divl
popa
aas
cmpsl
lock
hlt
add
das
hlt
add
loop
push
add
lret
mov
int
sbb
sub
sub
mov
popa
ljmp
daa
insb
out
xor
cli
rcl
add
add
add
mov
dec
inc
pop
jo
xor
repz
scas
test
jmp
push
adcl
add
les
rolb
push
pop
dec
xchg
add
pop
and
cmpl
xor
pop
shr
add
add
push
lret
jmp
add
sub
add
add
popf
or
mov
stos
sti
push
add
add
add
adc
xlat
add
xor
fwait
jmp
fsubl
push
add
add
add
push
add
sbb
movsb
add
add
add
pop
sbb
sahf
lea
push
sahf
das
sbb
add
add
les
fidivs
mov
scas
addb
es
add
pop
leave
movb
in
cmpsl
add
push
jge
add
dec
decb
add
cmp
jp
dec
adc
js
pop
add
pop
xchg
add
add
cmp
mov
add
rolb
out
dec
push
add
out
jecxz
sbb
add
sub
mov
sbb
jg
addl
mov
add
add
and
into
and
xor
add
jae
xlat
int
stos
mov
stc
arpl
add
pop
xor
push
adc
fstps
push
add
xor
or
and
or
add
adc
lahf
jge
add
add
data16
dec
insl
xchg
add
fldcw
inc
mov
push
or
pop
or
add
add
daa
cmc
cmp
cmp
ficoml
dec
out
sub
mov
xchg
push
add
push
pop
mov
add
mov
adc
push
pop
sub
or
cmp
cmc
js
jnp
dec
push
add
add
sti
ljmp
loopne
or
loope
xor
jns
mov
push
add
imul
fistl
flds
add
mov
into
testb
pop
push
add
aad
rcl
fnstcw
jle
cmp
push
xor
cmp
add
add
lahf
mov
addb
scas
jp
add
test
mov
iret
sbb
gs
or
add
add
inc
ret
add
out
sub
add
movsl
aaa
and
mov
lds
xchg
pop
cmp
add
add
cld
mov
pop
and
mov
add
add
scas
in
rolb
insl
icebp
add
xor
add
imul
pop
jb
out
aad
add
cmpsl
in
test
test
add
xchg
ds
push
add
add
add
add
pminub
dec
dec
nop
add
add
add
jae
cltd
les
stos
repnz
add
sub
test
daa
rcll
data16
inc
add
pop
int
int3
in
sbb
add
jb
pop
or
lret
les
mov
inc
lahf
and
push
divl
stc
inc
add
sub
in
inc
add
jl
test
add
add
xchg
scas
add
movsl
xchg
xor
mov
dec
mov
int
rol
in
add
push
add
mov
addr16
inc
add
cli
js
xchg
add
inc
add
jp
sub
sti
nop
add
add
lret
in
add
jo
pop
mov
adc
add
jne
jl
xchg
outsl
and
add
jno
mov
add
mov
rorl
icebp
shl
cltd
int3
arpl
or
xlat
xchg
dec
in
std
ficompl
pop
mov
jl
add
dec
out
xor
loop
pop
add
pop
or
addr16
popf
lahf
sub
cmc
inc
dec
cwtl
mov
add
add
paddq
data16
add
jmp
or
hlt
add
pop
out
xchg
std
leave
addb
add
add
mov
mov
roll
sbb
mov
add
add
sub
addr16
add
aad
or
xchg
mov
add
outsl
data16
nop
add
mov
sbb
sub
dec
push
jae
mov
mov
insl
sub
pusha
add
or
stos
insb
fcmovnu
cmp
push
cmp
jno
add
add
aam
and
adc
jnp
mov
mov
add
jp
rolb
push
movb
push
arpl
repz
lods
fsubl
clc
mov
push
dec
xor
cmp
bound
mov
and
xor
jmp
inc
add
icebp
aad
jne
cmpsb
add
and
and
mov
add
addb
xor
add
dec
adc
xchg
add
lea
lods
mov
mov
sbb
jmp
cmpsb
add
les
mov
adc
pop
pop
repnz
dec
mov
sbb
add
cmp
rolb
add
sahf
inc
add
fbld
add
add
or
loopne
inc
mov
pushf
aaa
cmp
push
add
inc
loop
frstor
mov
fdivrs
push
add
lock
xor
dec
add
mov
add
sbb
push
add
pop
xchg
add
repz
lods
lock
lcall
cltd
pop
fcoml
add
mov
mov
iret
jnp
add
and
inc
add
repnz
add
ja
jg
mov
push
add
add
mov
inc
add
add
mov
lock
add
and
mov
sti
cld
adc
add
call
lock
fbstp
sub
xchg
add
add
aad
add
mov
add
add
mov
jbe
les
mov
add
mov
jg
loopne
popf
xlat
sub
mov
repnz
loop
add
dec
push
push
add
loop
jmp
mov
fidivs
mov
xor
scas
lods
cmc
sar
pop
jno
add
mov
sub
add
jle
add
pop
jno
add
jp
movl
mov
mov
add
add
cmc
or
inc
add
das
lock
enter
outsb
cmc
dec
es
mov
insb
add
mov
add
rolb
inc
add
and
mov
lcall
xchg
pop
and
mov
mov
dec
cmpxchg
out
push
test
adc
ljmp
push
bound
mov
adc
add
lret
ret
or
nop
add
add
add
jnp
icebp
xchg
add
repz
add
lret
stc
pop
cmpsl
cli
iret
cmc
sub
iret
add
pop
xchg
add
cmp
jb
inc
add
add
scas
push
xor
cmp
jmp
add
jo
mov
adc
testl
push
cmp
and
adc
iret
cmpsl
pop
sbb
lock
add
cmp
mov
lea
add
add
add
addb
add
add
add
add
add
push
fcoml
movb
push
add
mov
add
push
in
add
add
mov
ja
fidivs
mov
add
cmp
adc
add
mov
test
sbb
add
add
test
cmp
add
test
in
mov
cs
and
insl
mov
xchg
add
jp
testb
add
into
add
mov
or
push
jg
add
add
mov
jo
inc
add
out
out
cmpsl
je
movb
add
ret
iret
loope
lahf
adc
pop
xor
pop
push
add
jno
aam
mov
add
add
add
add
je
insl
jnp
xchg
jmp
fbstp
or
out
jmp
push
rolb
or
icebp
lea
add
add
sarl
add
add
add
or
add
mov
or
mov
lods
jmp
pop
in
dec
pusha
add
add
add
add
scas
mov
mov
data16
mov
xchg
push
add
lea
add
iret
pop
jo
inc
add
add
je
inc
add
mov
add
mov
dec
test
ja
add
sub
mov
add
mov
rol
xlat
dec
cli
add
push
push
cld
pop
sarl
test
add
sbb
mov
lret
xchg
sub
nop
add
push
add
rolb
and
mov
jbe
icebp
sub
ja
nop
add
mov
add
add
add
loopne
sub
imul
add
mov
call
add
outsl
rcrl
call
addb
fwait
addb
leave
mov
mov
add
and
push
add
jl
add
out
loope
ret
xchg
and
mov
add
outsb
mov
jb
cmp
push
addb
push
outsl
addb
jae
add
lret
adc
test
sub
add
or
dec
inc
add
leave
inc
add
add
mov
lods
popf
mov
add
sbb
add
add
les
sbb
les
xor
add
leave
and
shll
add
pop
pop
xor
call
add
ds
push
int3
mov
adc
out
in
aad
cmp
lods
xlat
add
dec
xor
pop
ror
xchg
add
cli
jno
add
xchg
add
inc
add
ret
in
jo
inc
add
sbb
sarl
dec
lret
sub
ficoms
add
mov
xchg
cmp
ret
add
hlt
add
data16
ficoms
fwait
js
add
xchg
mov
add
xchg
adc
dec
mov
sub
rolb
sub
add
add
cli
sahf
adc
mov
aas
cmp
and
add
xor
mov
cmp
sbb
cld
test
sbbl
jl
bound
mov
das
add
loope
sbb
std
cmc
dec
lds
mov
mov
fistps
pop
rcll
and
or
out
cmp
add
cmp
and
and
mov
cs
sub
movsl
ret
sbb
lret
icebp
movb
mov
pushf
add
in
or
ret
adc
pop
jg
pushf
das
or
add
add
mov
aas
aas
pop
and
mov
mov
add
scas
adc
imul
mov
add
push
jnp
pusha
add
mov
add
add
add
insl
rol
pop
in
int
mov
sbb
mov
or
ret
addb
adc
bound
mov
mov
scas
or
push
add
inc
sub
out
or
add
pusha
add
add
add
std
adcl
mov
add
mov
cmpsb
add
xchg
aad
or
add
push
jnp
aad
mov
pushf
mov
add
xlat
fwait
jb
push
mov
push
add
mov
adc
ljmp
add
sbb
add
in
ss
add
rolb
add
fldt
lret
dec
xor
sub
daa
hlt
add
add
add
add
push
clc
pop
or
mov
push
add
add
lret
rolb
cmp
jns
push
add
arpl
push
add
in
or
cs
inc
add
cmpl
mov
test
test
int
dec
out
add
pop
xor
add
iret
lahf
push
add
dec
std
rolb
jge
cli
stos
push
scas
sub
add
mov
mov
pop
test
xchg
cltd
test
add
add
mov
loopne
push
add
add
inc
jl
add
lahf
js
add
add
stos
pop
pop
pop
sahf
lock
fbstp
add
add
push
add
xchg
daa
add
push
add
push
add
inc
add
add
add
add
add
sbb
dec
ja
add
mov
ficomps
add
mov
pop
cmp
js
dec
mov
dec
movsb
add
sub
or
add
push
mov
add
add
fld
add
leave
popf
dec
dec
jb
mov
mov
cmp
les
jno
inc
sti
pushf
inc
add
add
ds
dec
loope
add
add
add
dec
push
xchg
movb
add
add
mov
mov
add
mov
mov
add
pop
jbe
inc
add
inc
adc
mov
sub
pop
testl
sub
mov
xor
lods
jecxz
addb
cmpl
mov
add
lea
std
in
or
arpl
decl
out
add
std
jae
rolb
outsl
inc
dec
int3
rcr
and
mov
inc
add
xor
lcall
cmp
push
mov
in
fstl
decl
add
add
mov
add
add
adc
or
jnp
xor
mov
pop
add
clc
cmpsb
add
xor
sub
add
or
push
shll
rorl
sbb
push
add
sub
cmp
ret
addb
xor
add
addr16
dec
outsl
cmp
outsb
adc
add
mov
cmpsl
gs
xor
add
test
mov
mov
add
and
mov
mov
and
pop
mov
mov
repz
jecxz
add
pop
lods
out
mov
mov
add
mov
in
jne
and
push
das
cld
sbb
iret
cmpsl
push
test
loop
sti
rol
add
add
adc
outsl
fildll
add
add
add
mov
mov
inc
add
add
sbb
add
addb
add
xor
add
mov
out
cmpsl
mov
das
sub
add
xor
repnz
adc
inc
add
push
test
fwait
into
fmul
fisubs
add
push
add
jle
add
push
add
xorl
add
add
cmpsb
add
dec
and
aam
inc
adc
loop
fdivp
add
mov
adc
add
jle
sub
or
add
or
icebp
mov
add
add
sub
add
adc
pop
or
mov
push
pop
or
push
add
inc
add
enter
insb
xchg
and
mov
insb
mov
sbb
addb
sbb
fsubrs
cmp
lahf
inc
add
dec
mov
xlat
jmp
push
mov
loop
mov
add
add
pop
les
or
mov
adc
popf
lcall
pop
xor
mov
add
sbbl
mov
pusha
add
dec
pop
inc
jmp
sub
add
xchg
add
iret
cmc
arpl
fnstsw
add
mov
add
pop
addr16
out
fnsave
add
xchg
cmc
cmpsl
sub
xchg
add
dec
inc
sbb
mov
mov
shll
leave
addr16
cmp
add
add
mov
addb
lahf
mov
add
stos
jae
cld
jne
int
popa
shll
dec
clc
jae
or
mov
lahf
mov
fistpll
xor
add
cmp
lahf
xchg
das
inc
xchg
mov
test
popa
xor
std
stos
popf
adc
dec
or
addb
add
dec
xor
cmp
mov
rolb
xor
push
mov
add
dec
or
mov
clc
sub
add
add
add
xchg
dec
pop
push
add
push
add
stos
fists
add
lcall
std
cmp
test
hlt
add
popa
mov
mov
push
lret
fstps
jnp
in
jb
xchg
add
mov
in
add
sub
add
inc
inc
push
jecxz
xor
add
mov
jmp
add
loopne
fnsave
ficompl
jns
push
add
xor
add
fchs
add
and
mov
test
add
add
fmull
aaa
pushf
adc
sub
add
out
add
decb
add
mov
dec
fwait
cmc
pop
and
test
xor
add
mov
outsl
jns
mov
sahf
cltd
aas
cmpsl
lahf
add
jg
add
add
jne
inc
out
fsubrs
xchg
mov
mov
out
push
out
out
xadd
rolb
xchg
add
data16
adc
jne
or
mov
add
add
jbe
xchg
add
sbb
cli
xchg
add
add
outsl
ljmp
mov
je
aaa
adc
mov
rolb
xchg
add
inc
nop
add
dec
mov
out
add
rolb
dec
add
add
add
add
xchg
add
add
add
out
add
fnstenv
add
mov
js
sub
add
mov
outsl
inc
add
loop
pop
sub
add
add
add
add
add
mov
sti
ds
push
xchg
add
fdivs
add
and
mov
mov
adcl
dec
jge
add
add
add
add
add
dec
iret
hlt
add
insl
sbb
aas
loope
push
add
inc
add
into
mov
add
repz
add
sub
mov
insb
scas
xchg
mov
int3
jmp
cmp
sub
xchg
sub
out
fsts
push
xchg
add
add
enter
pop
pop
jne
je
lock
add
inc
repnz
lahf
adc
dec
ret
movb
sub
cmpsl
not
add
pusha
add
xor
clc
dec
ds
dec
add
or
cmp
cmc
lea
cltd
mov
mov
add
rolb
or
add
add
and
mov
imul
cmp
inc
sub
dec
add
and
mov
mov
add
add
xor
add
add
cmp
and
mov
mov
lods
jmp
popf
mov
add
adc
push
clc
xchg
ret
mov
mov
mov
add
sbb
div
add
and
insb
sub
cmp
add
rolb
sbb
add
sbb
into
or
xor
add
lcall
repnz
or
rolb
jg
add
add
add
jnp
xchg
add
add
add
in
fcmovbe
jmp
mov
add
push
add
add
add
sub
add
mov
add
add
or
ss
pushf
cmp
fiadds
add
xchg
ljmp
mov
pop
imul
popa
arpl
push
jmp
add
dec
leave
in
push
jp
adc
jne
mov
imul
add
or
add
push
inc
stos
xchg
add
mov
sub
fcoms
aad
mov
add
addb
add
jno
add
add
mov
mov
nop
add
cld
in
imul
lret
ret
add
pop
scas
dec
lret
rolb
cmc
or
shr
pop
fnstenv
lock
popa
mov
fwait
sub
add
sbb
pop
incl
add
add
add
movb
ljmp
ret
add
add
pop
jae
pop
outsl
lahf
xor
imul
dec
push
add
mov
adc
jge
add
and
xchg
mov
add
adc
add
add
jnp
fidivrs
push
add
add
mov
cmp
mov
add
sti
stos
cmp
sub
mov
add
cmpsb
add
testb
imul
addr16
cltd
pop
cmp
clc
dec
ret
mov
daa
out
push
xchg
add
jmp
out
fsubrl
pop
or
loop
jp
add
stc
cli
or
mov
cltd
dec
or
xor
lcall
add
out
or
in
bound
mov
pop
pop
push
add
cmpsb
add
dec
sub
inc
add
data16
jmp
cmc
nop
add
sbb
cmp
add
pop
push
add
loop
cltd
jns
push
add
add
add
jg
add
hlt
add
out
jg
add
add
test
out
out
add
mov
iret
xor
adc
mov
les
push
aas
bound
mov
loop
inc
add
jbe
aas
sti
sbb
push
movsl
mov
sbb
mov
pop
cld
popf
cmp
iret
divl
leave
mov
mov
lret
popf
and
mov
add
add
ja,pn
stos
in
add
js
push
mov
test
lods
inc
add
add
ret
movsb
add
add
add
push
testb
add
mov
lret
mov
add
les
test
xchg
xchg
imul
mov
sub
cmc
jns
clc
sub
inc
sub
pop
je
push
and
pusha
add
xchg
mov
repnz
add
add
mov
pop
mov
repz
add
add
add
movb
pop
rolb
mov
clc
jnp
lods
push
add
testl
mov
add
pop
push
les
cmpsl
in
push
add
aaa
jge
ret
jbe
cld
add
lods
add
data16
or
or
add
add
lahf
pop
adc
in
add
add
jb
in
cmp
add
mov
sbb
or
add
or
add
je
and
mov
add
mov
test
push
add
int3
mov
add
mov
movsb
add
add
or
add
fbld
add
adc
add
xor
pop
loope
in
sbb
add
jecxz
add
rolb
jle
inc
add
sub
nop
add
adc
out
repnz
mov
cld
xchg
jmp
add
adc
add
and
mov
and
imul
dec
push
add
mov
xchg
add
add
add
mov
add
adc
rcr
movsl
pop
repz
fwait
inc
loopne
mov
daa
pusha
add
add
xchg
add
add
adc
out
mov
mov
into
push
xor
add
mov
add
mov
leave
mov
hlt
add
fsubrs
xchg
pop
stos
jl
aas
inc
popa
xor
movsb
add
mov
testb
add
add
mov
int3
jnp
enter
add
dec
mov
mov
in
push
add
add
mov
bound
mov
mov
add
adc
scas
out
jl
push
xchg
and
mov
arpl
add
mov
js
pop
testb
nop
add
sbb
jle
outsl
in
inc
mov
add
fs
out
inc
push
call
add
mov
or
test
and
dec
leave
push
add
scas
jle
loope
enter
dec
mov
add
add
les
and
mov
xor
clc
push
add
lock
mov
add
add
add
mov
icebp
fldl
lea
or
add
jle
add
mov
add
xor
add
pop
mov
add
add
es
or
push
add
or
add
out
mov
lahf
in
cmp
mov
rolb
in
xchg
ret
rolb
inc
loopne
hlt
add
mov
mov
scas
loope
xchg
push
sbb
iret
aad
je
out
hlt
add
dec
mov
movb
add
scas
pop
xchg
adc
adc
add
scas
cmpsl
lea
sbb
cmp
xor
ret
inc
sub
sbb
dec
xlat
pop
aas
lea
mov
aas
and
cld
xor
lds
rolb
rolb
in
idivl
sbb
mov
addb
repz
push
data16
mov
hlt
add
add
add
xor
dec
pop
mov
repnz
add
sbb
inc
add
and
adc
aas
repnz
add
adc
sti
imul
mov
inc
add
add
test
mov
cmp
jle
cli
mov
ret
ret
mov
in
rolb
push
add
test
add
shll
add
cltd
adc
in
add
mov
mov
add
shll
xchg
add
addb
add
int
sub
add
mov
lret
bound
mov
testl
mov
add
pop
insl
push
push
add
add
add
add
dec
je
add
pushf
std
sub
add
addr16
jp
add
add
in
int3
outsl
xchg
add
inc
add
mov
xor
rcrl
add
add
pop
or
inc
cwtl
aaa
imul
add
jecxz
movl
add
out
push
js
xchg
add
cli
adc
mov
add
outsb
xor
jg
daa
je
out
jo
cmp
fimuls
fwait
out
jge
add
dec
jge
and
cmp
icebp
push
cmp
add
inc
pop
sub
add
add
loop
mov
xlat
bound
mov
add
add
mov
mov
into
xor
dec
mov
out
mov
icebp
in
iret
inc
add
add
add
aaa
loop
pop
out
stc
aam
pop
mov
mov
add
jmp
dec
mov
roll
bndstx
add
add
push
add
add
mov
and
mov
movsb
add
mov
jno
pop
icebp
leave
stos
flds
inc
push
jp
jne
mov
dec
rsm
mov
stos
mov
cmpsl
xchg
outsl
fcompl
add
add
inc
add
cmp
movsl
adc
jne
add
sahf
in
mov
icebp
ljmp
push
add
adc
mov
pusha
add
stos
rep
sbb
fadds
add
add
cmp
lds
dec
call
inc
add
sbb
stc
sbb
add
mov
jae
add
add
scas
jle
mov
scas
sti
mov
add
inc
add
add
pop
jb
test
add
mov
add
push
add
cltd
jne
jno
xchg
sub
add
fcomip
dec
lcall
adc
and
push
add
xchg
orl
mov
shl
add
test
stc
subl
inc
add
jae
add
inc
add
add
add
add
mov
rolb
in
push
jge
add
add
sbb
add
ljmp
jmp
jl
inc
and
repz
add
mov
in
mov
or
add
dec
lret
inc
and
jb
fmul
ret
add
jne
push
add
mov
push
pop
dec
mov
addb
add
inc
cmp
add
loop
repz
ljmp
call
add
sarl
add
call
add
out
xchg
jbe
mov
xor
add
jecxz
add
js
add
das
or
popa
push
add
stc
mov
add
pop
lds
hlt
add
std
sub
jb
ret
and
add
mov
fsts
and
cmp
pop
repz
pop
nop
add
mov
pusha
add
and
mov
mov
ret
rolb
add
mov
jl
add
cmp
xor
xchg
repnz
cmp
mov
lahf
add
das
pop
leave
shll
xchg
mov
add
dec
leave
daa
mov
or
rolb
xchg
cmp
jbe
dec
sbb
pop
mov
mov
add
mov
inc
sbb
lods
mov
outsl
or
add
add
xchg
lods
xor
insb
xchg
add
fdivs
insl
dec
fs
mov
add
add
add
sub
push
mov
add
pushf
shl
add
xorl
nop
add
and
mov
arpl
add
fbld
xchg
mov
and
xor
std
xchg
add
add
in
jno
add
mov
sahf
das
mov
add
in
loope
push
add
mov
dec
pop
imul
mov
mov
jns
cmp
add
fcmovbe
sub
dec
sti
pop
lret
sub
rolb
lret
or
xchg
cli
add
sbb
mov
xor
test
jge
and
sub
mov
jp
jp
add
mov
add
movsb
add
add
in
rolb
mov
and
inc
add
and
adc
pop
fldt
aaa
or
dec
jge
cmc
iret
add
adc
xchg
add
jle
push
mov
out
loope
add
mov
scas
scas
gs
add
add
pop
sub
inc
mov
cmpsl
xlat
out
scas
test
xchg
add
mov
loope
add
lcall
fnstenv
add
add
add
add
mov
fidivs
add
fldenv
add
rolb
in
add
jg
cwtl
dec
and
repnz
add
das
popa
jo
or
into
lods
bound
mov
adc
mov
cmc
jo
dec
pushl
mov
pop
sbb
cli
pop
fisubs
add
fsubp
std
jle
das
xlat
jmp
add
xor
scas
into
sbb
pop
int
jl
add
add
loop
das
popf
jge
add
add
pop
xchg
cmc
push
add
addb
add
sbb
xor
iret
add
insl
gs
add
add
sub
mov
sbb
icebp
cmp
mov
jbe
mov
add
add
add
mov
andl
mov
incl
add
push
add
rcrl
testb
add
add
add
sub
dec
cwtl
push
les
mov
add
divl
rorl
ljmp
adc
out
loop
push
add
add
std
cmp
mov
dec
sbbl
xor
pop
popl
jp
inc
mov
adc
pop
gs
add
outsl
clc
add
add
pop
in
push
add
mov
add
popf
dec
movsb
add
sbb
icebp
sub
imul
data16
add
lret
mov
mov
jecxz
add
add
addb
xchg
push
add
cmp
les
aaa
xchg
sub
sub
add
cmp
dec
sti
ret
mov
scas
inc
add
iret
jecxz
int
dec
or
jae
aam
mov
pop
mov
jbe
sub
movsb
add
sub
popf
rolb
std
jns
xor
xor
out
je
dec
push
adc
xor
lret
add
xor
clc
rolb
lock
push
imul
add
or
in
fstpt
scas
push
cmp
sbb
cmp
lods
lock
push
add
fcompl
mov
add
mov
daa
xchg
xor
add
ffree
add
sbb
add
add
jb
fists
add
rolb
ja
mov
test
push
add
test
shll
fstl
add
mov
dec
and
mov
iret
clc
mov
pusha
add
add
mov
das
loope
add
add
or
add
outsl
sbb
inc
xchg
ret
out
jmp
jmp
add
or
add
or
adc
adc
add
test
inc
add
add
movsl
mov
add
add
cli
xor
aad
jmp
jge
jmp
add
fbld
dec
fstpt
add
jle
jnp
xor
iret
mov
fwait
jns
add
mov
inc
add
pop
xchg
sbb
mov
scas
pop
jge
push
or
inc
fsts
addb
arpl
sbb
inc
add
pop
jae
add
jb
jne
ss
xchg
sub
push
add
sbb
lret
rolb
popa
ret
push
add
or
sbbl
sub
inc
add
add
add
jae
cmp
jmp
or
cmpsl
and
add
add
cmp
roll
mov
jno
dec
pushf
mov
test
xlat
mov
push
call
sbb
les
out
daa
xchg
add
jmp
add
add
mov
add
mov
add
shll
outsl
mov
and
add
add
in
add
popa
in
xor
add
mov
nop
add
aaa
sub
scas
test
jae
add
mov
or
sub
imul
std
cmp
add
xlat
pop
cltd
and
push
add
mov
add
add
scas
mov
add
in
push
sbb
call
dec
sub
add
movsl
mov
out
sub
jnp
cmp
fdivrl
cmp
add
cli
and
jmp
jno
lods
imul
jb
mov
mov
jmp
pushf
addb
push
les
or
add
sbb
mov
std
jne
xlat
jb
mov
loope
cmp
iret
sub
dec
sub
xor
fidivrs
add
xchg
add
add
sub
ficomps
mov
dec
out
jmp
or
das
add
jae
inc
add
pusha
add
add
mov
add
dec
add
das
cmp
xchg
dec
or
add
mov
dec
and
mov
decb
aam
xor
mov
mov
add
mov
stos
inc
in
sub
add
lcall
add
mov
add
add
jge
add
add
lea
icebp
scas
int
sbb
dec
popf
xchg
dec
rolb
faddl
mov
adc
out
sub
add
add
insl
fistps
aas
cli
push
addb
add
std
out
mov
xor
imul
inc
add
mov
movl
or
sbb
sbb
push
add
add
adc
scas
push
add
xchg
xchg
cmpsb
add
call
les
sahf
filds
mov
and
jge
les
out
xchg
add
rolb
inc
add
adc
movb
adc
add
add
inc
inc
inc
cmp
mov
inc
jae
fsubrs
ja
dec
jp
mov
repnz
add
mov
inc
push
ljmp
add
fucomp
in
cmpsl
in
push
push
add
push
mov
push
xchg
sarl
fistpll
lods
cmp
and
mov
repz
arpl
push
movb
add
xchg
add
jo
jmp
in
push
add
inc
xor
lret
add
mov
cs
cwtl
inc
add
add
push
and
clc
je
jmp
add
fisubs
add
cmp
nop
add
pop
cmpsb
add
add
add
add
add
add
cmp
lods
jecxz
pop
jbe
dec
outsl
movb
or
std
dec
add
fsubr
sbb
lea
sti
sbb
add
lds
enter
add
add
cli
je
out
add
add
int3
nop
add
addr16
rcrl
adc
outsb
pop
mov
les
dec
xor
out
testb
in
pop
xchg
push
lock
mov
inc
adc
sub
imul
add
mov
cmp
add
add
insb
adc
je
pop
fildl
adc
add
into
jge
add
ljmp
mov
rcll
pushl
sub
mov
sub
icebp
lock
cmpsb
add
xor
stos
and
add
arpl
add
pop
cmp
or
inc
jo
aas
or
addr16
adc
fdivrs
xchg
add
mov
add
je
pop
scas
adc
ror
mov
push
out
mov
xor
pop
aam
addb
js
lcall
mov
push
add
add
push
mov
jae
fidivl
add
sti
in
testb
lahf
cmpsb
add
sbb
sarl
hlt
add
imul
add
add
add
add
mov
xchg
fistps
mov
pop
adc
sbb
add
mov
mov
add
clc
arpl
mov
clc
xchg
bound
mov
bound
mov
dec
mov
iret
sub
dec
mov
add
jno
dec
out
scas
rolb
dec
aad
add
pop
jle
sub
jmp
push
movsl
xchg
movsl
jno
add
mov
and
mov
out
mov
dec
mov
pop
xor
cmpsl
sahf
sub
int
cmp
ja
add
push
add
cmc
orl
pop
pop
jg
add
inc
add
push
add
or
lahf
jl
add
push
add
add
inc
add
pushf
inc
add
pop
jp
loopne,pn
adc
add
or
pop
ja
add
stos
pop
pop
adc
push
add
ja
add
lea
das
sbb
outsl
sub
add
mov
aad
adc
into
sbb
jp
mov
add
test
or
sub
popl
test
mov
mov
arpl
cmp
sub
add
mov
jmp
pop
mov
cs
in
add
xor
mov
mov
out
stos
push
xchg
add
mov
cwtl
xchg
repz
mov
xchg
adc
mov
inc
and
mov
cltd
xchg
fmuls
jg
stc
cmc
xchg
bound
mov
std
outsb
jno
mov
add
add
inc
add
je
pop
add
cmp
pop
dec
mov
add
dec
dec
gs
jecxz
jl
add
mov
add
add
inc
add
popf
lock
enter
test
mov
ret
arpl
lret
add
add
cmp
mov
mov
add
sub
add
inc
push
add
add
push
cmp
js
add
push
add
xchg
mov
enter
push
sub
cmp
jecxz
add
add
inc
add
pop
dec
xchg
imul
add
mov
push
add
jmp
xchg
add
add
rolb
addb
add
mov
mov
cmp
test
outsb
out
out
lcall
inc
add
scas
lret
add
rolb
movsb
add
mov
lahf
lcall
mov
jl
add
test
push
fwait
or
pop
lods
mov
sbb
add
fisttps
add
movd
xor
test
iret
jmp
loopne
mov
add
add
cmp
add
push
cmp
cli
lods
xchg
add
add
nop
add
add
add
leave
clc
cmpsb
add
in
mov
sti
push
add
push
add
xor
mov
add
inc
pop
add
sub
rolb
test
mov
outsl
xchg
add
lods
sbb
jne
adc
jns
loop
inc
pushf
dec
cmp
pop
cmp
adc
push
add
test
lods
movsl
xchg
fs
add
add
mov
lods
lods
leave
adc
cmc
cmpsl
sub
aaa
hlt
add
jg
jmp
jne
inc
add
sbb
add
gs
mov
daa
popf
xor
mov
icebp
ljmp
push
add
stos
sbb
inc
loope
jne
js
mov
add
jns
jnp
add
lods
rcrl
add
mov
mov
cmp
mov
add
outsb
sbb
adc
inc
add
out
bound
mov
push
mov
add
xlat
insl
jnp
out
adc
mov
jbe
mov
adc
mov
push
mov
push
pop
mov
rolb
call
dec
sub
in
push
sbb
cmp
add
pusha
add
add
scas
jo
xchg
ljmp
ja
sub
aaa
addb
int3
lods
out
les
sahf
xchg
and
add
addb
add
mov
add
repnz
add
lods
fcoms
and
mov
cmp
sbb
add
add
push
cmp
mov
gs
add
xor
add
cwtl
mov
add
ret
inc
add
cld
cwtl
mov
test
dec
icebp
lock
add
mov
add
jecxz
jle
mov
mov
imul
xchg
mov
add
add
fldt
or
jns
add
add
pop
stos
gs
sub
push
add
fmull
push
dec
push
add
add
addr16
daa
movb
mov
cmp
or
jle
add
dec
loope
add
fdivrs
xchg
mov
add
out
mov
xchg
mov
pop
test
xchg
insl
or
or
xchg
add
cmp
int
fdivrl
ja
data16
push
and
xor
sahf
cmp
into
movb
das
testb
les
cmp
add
mov
mov
add
mov
cs
xchg
jle
add
and
add
outsb
loopne
add
dec
rol
fsts
pop
push
add
mov
xchg
enter
add
add
sub
ret
loop
dec
xor
add
xchg
sahf
fbstp
addb
mov
addr16
or
and
add
in
ja
xor
mov
dec
jmp
in
jae
lods
ret
cmp
mov
push
mov
inc
add
test
movsb
add
add
add
data16
add
add
inc
mov
pop
int
jge
addr16
add
dec
xchg
push
xchg
add
xor
dec
cmp
aas
loopne
adc
add
add
sahf
push
add
mov
add
in
ja
and
push
add
hlt
add
add
lds
add
sbb
shll
lret
jns
xlat
pop
xor
xor
or
fwait
or
and
jo
aas
add
push
ja
inc
mov
mov
xor
jp
add
add
mov
mov
mov
mov
mov
add
push
push
outsl
insl
mov
push
sbb
jge
lea
add
jge
and
add
add
sub
fnstcw
add
fwait
and
mov
jle
mov
int3
pop
jns
insl
out
call
add
jo
jns
xchg
xchg
sub
add
add
pop
les
sub
xchg
add
add
add
sub
cmc
and
mov
mov
add
add
cmp
enter
je
out
dec
iret
in
push
xor
xlat
dec
mov
inc
add
sahf
pop
sahf
pop
in
or
daa
sub
and
mov
and
sub
push
add
outsl
movb
push
add
mov
jle
arpl
push
sbb
add
insb
rolb
xchg
add
int
add
add
loop
scas
je
push
or
sbb
add
pop
jno
add
jp
add
dec
in
out
or
xor
leave
shrl
add
push
add
mov
mov
cmc
mov
jnp
xor
xor
fdiv
add
loopne
sbb
xchg
add
mov
mov
dec
sbb
mov
add
mov
or
add
stos
adc
roll
mov
leave
push
enter
or
add
jae
ljmp
gs
lods
jb
push
jp
add
cmpsl
and
rolb
add
mov
fsubrs
add
or
sub
add
inc
cmovge
add
sub
pop
cmp
cmc
mov
or
add
aas
test
lea
cmp
add
pop
xor
sbb
add
add
add
icebp
and
sahf
mov
fsubrl
adc
add
lds
cmp
add
cwtl
pop
ss
add
add
add
add
mov
mov
sahf
pusha
add
xor
mov
icebp
add
jbe
xchg
add
sub
add
add
or
add
aam
jnp
hlt
add
sub
loope
jmp
add
sub
rorl
addr16
out
or
pushf
test
add
sub
cmp
lods
stos
jg
popf
and
lds
in
pop
lods
xor
clc
rolb
fxch
dec
jecxz
add
arpl
jbe
sub
lret
jmp
add
cmp
pop
addb
add
enter
xchg
jge
nop
add
xchg
icebp
sub
int3
xchg
add
test
mov
or
add
xlat
aad
add
and
inc
add
jae
movsb
add
add
data16
push
add
iret
push
add
add
cmpsl
pushf
jae
adc
sbb
push
add
sbb
pop
mov
mov
mov
int3
mov
xchg
add
sub
lods
ret
sub
jecxz
add
or
add
mov
add
add
mov
mov
cld
orl
das
and
mov
xchg
add
loope
jae
sti
push
add
cli
daa
add
into
xchg
add
daa
cmp
mov
popf
out
arpl
sub
adc
push
mov
add
cld
sti
push
xlat
rcl
and
xchg
fdivp
mov
mov
push
cwtl
push
add
xchg
add
lods
and
mov
in
cmp
and
add
pop
mov
insb
mov
jns
add
add
jg
add
fldt
jg
add
push
add
call
adc
xchg
mov
add
mov
add
cmp
jnp
add
mov
mov
addb
sub
fisttpll
xlat
add
add
adc
aaa
cmp
test
mov
add
mov
xchg
pop
adcl
shll
call
iret
sub
js
shl
mov
ds
aam
mov
add
add
add
stc
stc
or
imul
sbb
add
or
test
pushf
mov
xor
sbb
mov
add
decl
add
insl
mov
movsb
add
data16
pop
sbb
jno
dec
in
lock
mov
jns
adc
or
adc
fdivl
cld
xor
add
add
xor
scas
xlat
fsubrs
adc
mov
hlt
add
das
mov
and
add
push
mov
mov
aas
fstps
mov
sbb
mov
add
pusha
add
aam
aad
arpl
jp
add
sets
push
loop
add
mov
sbb
mov
sti
dec
in
push
push
fidivrs
mov
add
mov
stos
or
add
add
add
add
add
adc
push
not
add
or
add
in
ret
push
add
xor
aam
faddl
mov
inc
add
loopne
js
js
arpl
add
aas
jbe
push
add
test
cld
iret
pop
adc
jmp
out
insb
add
push
add
test
xor
mov
add
add
out
add
insb
mov
add
pop
dec
sahf
das
dec
mov
mov
inc
cmp
lret
inc
outsb
pop
add
jbe
push
fwait
add
mov
sahf
ljmp
fsubs
add
mov
push
add
xchg
add
add
mov
mov
int3
ds
and
add
cmpsb
add
push
add
rolb
jmp
add
cli
cs
in
sub
add
add
mov
add
sti
rolb
mov
movsb
add
push
pop
jmp
add
addb
mov
add
push
add
add
add
push
int3
push
add
outsl
adcl
addb
xchg
rcl
push
add
add
cmp
push
add
sub
mov
cmp
add
mov
add
jae
mov
push
mov
adc
ret
add
add
jl
in
in
mov
push
add
jae
add
mov
jo
cmpsl
addr16
add
push
add
lods
mov
cli
and
add
add
std
or
js
les
push
add
rolb
cld
cltd
jle
loop
addr16
lcall
push
jns
add
push
add
enter
aaa
mov
int3
jl
add
lret
faddl
add
push
add
xchg
and
mov
push
sbb
mov
add
iret
xor
push
add
iret
sub
add
add
add
mov
add
add
adc
int
and
mov
sub
sbb
jne
mov
inc
pushf
test
rolb
pop
mov
mov
stc
jno
mov
pop
add
lahf
cmpsb
add
imul
push
add
add
inc
clc
mov
out
addr16
or
jp,pt
jno
add
stos
imul
data16
lahf
arpl
sti
arpl
ljmp
add
out
xor
insl
loope
into
out
add
add
mov
out
mov
add
dec
inc
fcmovne
cmpsl
or
mov
mov
add
add
and
mov
add
adc
cmp
aad
stc
pop
pop
addr16
xchg
cmpl
or
jp
ret
loope
js
enter
add
mov
add
bound
mov
outsl
shll
add
add
xchg
pop
pop
lds
mov
cmp
icebp
pusha
add
daa
test
sbb
add
xor
or
cwtl
fidivl
and
add
or
and
sub
movl
xlat
adc
fcompl
adc
xor
inc
pop
hlt
add
and
outsb
gs
mov
mov
les
dec
push
lods
scas
jne
outsl
ret
add
test
bound
mov
add
adc
add
dec
push
add
cmp
adc
jb
or
xchg
xlat
cmp
outsb
push
add
movsb
add
pop
in
cmp
add
jb
dec
and
add
shl
mov
out
sbb
sub
out
leave
scas
sub
add
jmp
out
mov
shl
adc
dec
jge
add
mov
sbb
imul
mov
add
pop
pop
lcall
or
add
add
sahf
jg
add
mov
add
mov
inc
add
add
sbb
add
pop
mov
add
add
add
add
cmpsb
add
adc
test
aam
cmp
in
jo
dec
scas
addb
add
xor
test
add
add
add
std
mov
lods
mov
add
jge
loopne
add
add
mov
jecxz
ja
testb
add
add
add
add
mov
add
xor
movsb
add
mov
sarl
movsb
add
mov
rcll
lahf
pop
pop
mov
mov
add
mov
add
mov
adc
aad
cltd
jb
cmp
xchg
add
xlat
fwait
mov
add
shll
add
sahf
in
mov
movsb
add
jp
mov
sbbl
dec
frstor
ficomps
xlat
xchg
add
xor
out
fnstenv
fyl2x
testb
mov
pushf
push
lret
jo
pop
pop
sub
mov
sbb
push
add
imul
sbb
popf
rorl
lods
push
les
cmc
mov
mov
sbb
sbb
decl
aaa
mov
mov
movsl
mov
add
add
add
add
and
leave
test
add
nop
add
add
mov
pop
enter
adc
outsb
pop
stos
jbe
xor
jg
add
jns
add
mov
add
xor
call
add
jle
push
mov
mov
mov
mov
push
mov
xchg
add
std
cmpsb
add
mov
adc
xor
lret
mov
add
sti
mov
mov
out
jo
mov
mov
and
dec
jmp
clc
adc
xor
push
stc
mov
lods
mov
dec
lret
push
jl
icebp
aas
mov
add
pop
int3
mov
pop
sub
mov
add
mov
and
mov
pop
mov
add
add
add
add
add
add
xor
mov
sub
mov
in
add
add
lahf
xchg
add
add
in
push
inc
add
pop
lods
push
add
xor
mov
jns
add
xchg
add
dec
cmp
jl
test
scas
xchg
and
outsb
sbb
in
or
add
xchg
imul
xchg
add
add
stc
sti
aas
data16
jmp
xchg
jmp
add
add
add
out
pusha
add
push
add
mov
add
mov
int3
push
add
mov
rolb
loopne
bswap
xchg
add
adc
xchg
sub
sarl
mov
cmp
add
ljmp
cmp
gs
mov
push
fxch
mov
add
add
mov
or
push
pop
mov
xchg
dec
addb
add
jno
fwait
cltd
inc
mov
mov
inc
shll
cld
aad
add
xchg
add
mov
add
mov
or
adc
mov
mov
test
mov
add
add
mov
ret
add
push
inc
add
dec
fstpt
pop
sbb
sub
push
add
add
add
add
out
and
mov
dec
or
add
fwait
mov
add
add
out
cmp
fstpt
cmp
sub
addb
sbb
adc
and
jg
shrl
test
in
xor
std
addr16
mov
aas
sbb
sahf
rolb
push
push
xchg
add
sbb
in
xchg
add
cmpsb
add
mov
pop
scas
xchg
ret
stos
or
jb
dec
adc
inc
add
sbb
push
cli
xor
mov
ja
test
inc
add
add
add
mov
jb
outsl
loop
push
add
pop
popa
lret
fsubrs
dec
mov
pop
pushf
and
adc
adc
lahf
push
and
add
pop
mov
repnz
loopne
insb
dec
push
add
mov
xchg
inc
daa
inc
add
js
ret
and
sbb
inc
add
std
adc
add
mov
jno
mov
add
les
push
lock
mov
mov
push
add
loope
fdivl
dec
or
cmpsl
dec
sbb
push
flds
fidivrl
sbb
xor
testb
xchg
fxch
js
movsb
add
sbb
sbb
push
add
add
pop
enter
lea
add
xor
push
sub
test
sti
sbb
and
nop
add
repz
xor
add
mov
ss
int3
push
std
push
add
mov
loope
add
scas
dec
fdivr
rolb
or
push
add
nop
add
add
movsb
add
movb
add
inc
add
popf
dec
call
add
mov
fisubl
add
jmp
mov
push
add
add
add
dec
inc
lods
pop
outsb
mov
out
addr16
add
mov
leave
sub
jle
sbb
lods
sub
jnp
add
or
sub
sbb
sub
cmpsl
add
mov
add
xlat
jnp
cmp
add
add
jp
add
int3
mov
add
add
pop
scas
cmpsl
fs
add
cmp
add
mov
jb
cmpsb
add
stc
jo
and
mov
aaa
jmp
lock
add
add
xchg
add
add
cmp
lret
movsb
add
jns
shll
sbbl
cmp
enter
int3
add
cmpsb
add
test
mov
add
mov
sbb
cmp
cmp
add
add
add
adc
push
add
mov
test
add
add
add
jno
add
popf
pop
faddl
add
jle
add
or
pop
push
mov
mov
insb
sub
aam
inc
add
call
add
add
sti
mov
add
inc
stos
inc
add
add
pop
rolb
cs
xchg
jp
mov
add
mov
adc
mov
sub
mov
cmp
hlt
add
ffree
pop
mov
add
inc
add
aam
xchg
add
xor
dec
lds
push
ficompl
sbb
jnp
movsl
rolb
xor
leave
clc
repz
mov
push
out
jne
mov
push
add
add
add
add
add
xor
adc
xlat
dec
cmp
imull
testb
adc
stc
das
xchg
add
adc
ret
adcl
movsl
lret
add
add
xor
ds
int
in
xchg
rolb
add
sub
xchg
add
jbe
and
mov
cltd
xchg
add
fucomp
add
xchg
pop
inc
add
and
adc
mov
mov
addb
add
fs
int
add
add
imul
gs
sub
add
iret
cwtl
xor
inc
inc
jns
mov
pop
xchg
pop
xor
inc
add
popf
mov
test
mov
or
or
mov
ljmp
mov
aad
ljmp
xchg
sbb
add
inc
call
push
add
pop
in
testb
add
add
and
mov
rolb
add
jne
add
js
sahf
or
cmpsl
rolb
or
sbb
jbe
jno
add
add
iret
popa
jp
addb
sub
add
pop
inc
add
scas
xchg
add
add
xor
std
out
andl
adc
sub
lahf
push
jl
add
add
xchg
rolb
aam
ja
add
add
dec
fsubs
add
data16
xchg
add
mov
jecxz
adc
iret
and
mov
and
pop
js
and
and
add
lcall
add
push
add
add
movb
sub
mov
pop
outsl
mov
jmp
sub
add
inc
mov
ds
sub
add
je
add
mov
xchg
add
addb
jo
mov
mov
mov
pop
push
pop
jo
mov
pop
and
rolb
and
mov
or
push
add
push
outsb
rolb
add
cmp
dec
out
add
mov
inc
add
and
mov
mov
sbb
movb
adc
daa
testb
pop
cmpsl
movsb
add
sbb
incb
cmp
sub
jns
add
scas
dec
jle
push
add
rcll
pop
ljmp
and
mov
jmp
jnp
nop
add
cmp
or
mov
mov
sbb
add
xchg
fnstsw
cmp
jnp
mov
jmp
add
jno
ds
lea
dec
xchg
add
push
add
xchg
add
add
cmp
mov
add
les
ljmp
cmp
mov
add
add
pop
lods
mov
xchg
clc
in
or
add
jmp
sti
clc
mov
cmp
add
lds
inc
popf
daa
movsl
addr16
mov
or
push
add
add
mov
add
add
mov
add
add
inc
add
out
repnz
mov
add
mov
mov
xor
mov
add
xchg
add
rolb
xor
or
and
addb
out
pop
mov
mov
ja
push
add
pop
add
add
and
xchg
add
popf
test
add
lods
sub
enter
rolb
clc
add
add
add
mov
or
xor
pusha
add
aam
add
lods
ret
das
js
or
bound
mov
lods
jne
push
dec
sbb
clc
adc
pop
pop
jmp
mov
mov
add
movb
test
add
stc
jge
add
cli
lea
dec
cmp
jae
out
cmp
add
cli
jnp
jb
jb
mov
ret
int
add
adc
int3
cmpsb
add
add
xchg
aaa
jne
add
cmpsl
mov
xchg
add
add
shrl
inc
stos
adc
add
dec
add
lea
rorl
ret
pusha
add
test
movsb
add
dec
push
add
jge
adc
or
mov
sub
cld
sub
mov
cmc
in
mov
enter
leave
sub
cmpsl
loope
shrl
jne
int
gs
add
rolb
sbb
jnp
add
testb
add
xor
add
add
push
add
mov
add
mov
sbb
testb
aam
mov
inc
add
ffree
popa
test
add
fptan
add
mov
cmp
push
roll
icebp
mov
aaa
and
loop
das
add
test
nop
add
add
mov
mov
ljmp
fldl
xchg
jle
xchg
xchg
add
add
imul
cmpsb
add
ficoms
iret
sub
add
add
adc
xchg
cld
sbb
addb
pop
jno
fwait
mov
rcrl
mov
aaa
lods
push
add
add
push
mov
add
pop
ljmp
lcall
cmpl
sbb
add
xor
inc
add
popa
sub
and
mov
cmp
movb
add
movb
inc
add
add
scas
call
or
cld
addb
fcomip
add
mov
add
add
cs
ss
rolb
fwait
xor
push
mov
std
ret
data16
add
les
fbstp
add
fmul
fmulp
xchg
out
fadd
add
mov
inc
or
add
mov
lock
add
mov
cmpsl
or
push
add
jno
mov
jp
sbb
cld
mov
add
enter
add
out
xchg
negl
iret
scas
push
add
mov
and
mov
mov
pop
roll
push
add
mov
in
aaa
cmpl
in
flds
mov
loop
scas
mov
nop
add
add
frstor
cmp
add
cmp
jmp
adc
sub
rolb
add
or
add
fsubs
add
add
jmp
pop
add
data16
sbb
scas
cmpsl
test
push
jns
add
inc
jne
mov
jae
call
insl
and
mov
sub
rolb
repnz
cltd
rolb
add
and
mov
adc
add
add
repz
incl
cmp
jno
add
movsb
add
aad
add
and
roll
inc
add
sub
xor
add
mov
add
add
pop
mov
jl
add
mov
shr
pop
cmp
add
sbb
call
mov
cmp
in
cmp
xchg
add
add
add
daa
movsl
test
or
ret
ljmp
xchg
add
mov
add
mov
cmp
add
add
add
adcl
out
cmpsl
jns
push
add
enter
add
ftst
add
add
mov
mov
add
push
add
aaa
xchg
xor
add
sbb
popa
sub
add
loope
add
cli
lods
sub
add
es
add
add
jb
push
add
fiadds
push
movb
adc
adc
add
xor
xchg
jecxz
sub
add
xor
hlt
add
mov
stos
dec
in
dec
dec
ljmp
lahf
ja
movsb
add
add
mov
mov
fidivs
add
mov
xchg
add
negl
pop
shll
test
add
add
loope
cmp
dec
mov
cli
aad
add
and
mov
pop
xor
bound
mov
jge
pop
test
and
add
sbbl
push
inc
mov
add
dec
or
adc
xchg
add
mov
mov
subl
add
jnp
pop
hlt
add
ljmp
dec
adc
cwtl
imul
aas
ret
add
add
add
inc
ds
sbb
jp
add
loopne
loope
add
hlt
add
push
hlt
add
pop
inc
jl
push
add
movb
cmpsl
pusha
add
lret
add
add
and
push
cmp
lret
loopne
sbb
addb
int
push
mov
or
in
fadd
add
add
inc
leave
data16
add
add
xor
mov
rolb
mov
jecxz
mov
adc
pop
lcall
xchg
add
add
add
mov
ds
loopne
rcrl
shrl
lds
sub
rolb
sbb
ljmp
add
add
add
dec
xchg
cmp
and
mov
aad
addb
add
divl
dec
add
add
add
push
sbb
sti
enter
dec
cwtl
or
leave
mov
aad
jecxz,pn
inc
push
add
cld
xor
mov
add
adc
data16
push
add
mov
add
pop
pop
jns
push
negl
add
js
add
add
add
loope
jp
add
lea
add
mov
cltd
xor
add
cmp
inc
xchg
add
ret
mov
sbb
out
xchg
or
in
mov
arpl
adc
add
adcl
xor
cltd
xchg
add
in
clc
xor
mov
add
je
dec
popf
cmp
and
mov
add
test
add
xchg
add
mov
cmc
pop
mov
xor
fisttpll
fldz
data16
add
and
mov
add
mov
cmpl
pop
mov
imul
jg
mov
rolb
jo
push
daa
js
mov
push
movsb
add
lock
add
jb
inc
into
push
xchg
add
cld
mov
mov
mov
popf
daa
pop
repz
mov
mov
add
test
std
pop
mov
lret
outsl
xchg
add
pop
rolb
daa
pop
jae
add
add
add
movsb
add
jmp
cltd
inc
add
jb
inc
add
scas
add
les
outsb
mov
add
add
push
add
dec
push
add
sbb
xchg
add
push
fisubrl
ror
std
addb
xlat
cmpsl
jo
dec
jle
fldl
push
add
add
loop
mov
out
add
repz
iret
add
in
add
outsl
sbb
cli
in
mov
cmpsl
loope
push
out
mov
in
jl
pop
test
inc
and
cmpsl
or
add
mov
les
test
not
add
es
sub
xchg
add
inc
add
xor
popf
incb
mov
sub
or
add
insb
xor
xor
enter
add
pop
push
add
add
mov
cwtl
lock
add
sub
add
rolb
das
aad
add
add
ficomps
dec
shrl
sti
add
rolb
dec
stc
add
mov
jbe
pop
repnz
mov
lcall
sbb
add
add
dec
loopne
mov
cmp
rorl
aad
push
pop
jne
push
add
outsl
pusha
add
cli
xchg
sbb
movsl
fadd
add
and
mov
add
add
or
push
add
sbb
cmpl
adc
lea
mov
and
add
jl
add
inc
add
add
jmp
movsb
add
add
fisttpll
or
pop
fisubrl
aad
icebp
push
add
lds
mov
rolb
pop
jle
lock
mov
pushf
sub
fstp
cmc
and
mov
int
test
pop
js
lea
add
insl
add
mov
add
add
jl
cltd
jbe
sahf
add
cmpsb
add
stos
or
das
icebp
jecxz
les
jg
hlt
add
and
and
mov
pop
ret
sub
sub
add
inc
add
hlt
add
test
add
adc
cmp
cmpsb
add
add
addb
stos
movsb
add
enter
dec
mov
add
pusha
add
inc
add
sbb
sub
fwait
sub
rol
add
aas
imul
addb
add
add
add
mov
or
stc
insl
int
test
and
add
sub
lahf
sub
cmp
sub
xchg
xor
add
or
add
xor
jno
in
pop
inc
add
lds
inc
add
sbb
xchg
xchg
add
pop
das
mov
or
add
and
sahf
jg
jo
mov
add
add
add
add
in
lods
aaa
mov
add
dec
inc
jae
add
xchg
add
pop
mov
add
lret
rcr
and
fidivrl
mov
mov
adc
cmp
mov
in
or
and
cwtl
sub
add
jo
cmp
add
add
mov
std
ds
adc
adc
enter
add
jl
mov
movsl
test
add
add
mov
add
xor
or
add
pop
sbb
dec
dec
dec
push
dec
add
add
add
pushf
fnsave
cmpl
bound
mov
cwtl
add
add
cmp
add
adc
mov
daa
sub
xchg
add
pop
lods
add
add
pop
xor
and
clc
xchg
add
and
rolb
outsb
jno
scas
punpcklbw
mov
cmpsl
out
mov
add
in
cli
xor
push
add
add
imul
pop
or
add
jmp
add
jnp
add
add
jl
add
jno
flds
lods
out
out
add
inc
add
and
adc
scas
or
rcll
add
xchg
add
xchg
pop
jmp
add
add
add
and
out
add
add
add
add
nop
add
repz
add
add
imul
mov
push
add
arpl
pop
iret
ds
fmul
das
add
add
xor
add
push
adcl
push
add
scas
movsb
add
add
loopne
in
and
mov
xchg
sti
dec
ja
xchg
xchg
add
sub
pop
sbb
xor
dec
xchg
add
add
test
add
add
fcos
push
add
aad
adc
add
mov
out
popa
je
jg
ficompl
dec
add
add
mov
out
int
mov
sub
cwtl
cli
mov
movsl
push
add
faddl
add
add
mov
add
add
jbe
sub
dec
lods
ljmp
rcrl
pop
roll
test
lcall
aad
add
mov
mov
and
out
pextrw
and
add
mov
outsl
ficompl
clc
addr16
ror
mov
push
movsl
mov
and
jbe
aad
jge
and
add
into
inc
and
mov
pop
sbb
push
add
bound
mov
xor
xlat
sbb
add
push
push
scas
cmpsl
push
into
adc
inc
add
ret
add
mov
mov
lods
cwtl
mov
add
dec
add
stc
cmp
adc
push
add
sub
xchg
and
imul
sbb
add
mov
fistl
jle
add
and
mov
add
imul
add
add
inc
std
out
out
cmp
push
add
mov
stos
cmpsb
add
int
dec
sub
mov
xor
mov
add
add
mov
in
mov
add
pop
repz
xor
sub
add
cli
add
bound
mov
add
add
inc
add
xchg
add
xor
lds
inc
push
mov
aad
add
push
rolb
xor
add
daa
push
cli
pop
jnp
add
scas
jmp
out
pop
pop
loop
sbb
js
cmp
push
add
lock
cwtl
push
mov
fiadds
scas
adc
xchg
addb
pop
or
add
jbe
mov
add
mov
add
jbe
pop
fidivl
movsl
mov
rolb
test
sub
addb
xchg
add
test
daa
xchg
dec
jge
push
jbe
cmp
add
jge
add
and
inc
add
lods
aas
adc
std
push
int3
ss
cld
lret
cltd
push
lods
mov
sbb
add
cmp
sub
pop
loopne
jb
iret
cmc
adc
iret
das
jl
outsl
test
add
les
and
mov
ds
inc
add
add
mov
mov
adc
add
inc
add
dec
mov
or
mov
sub
mov
inc
add
xlat
aaa
mov
rorl
add
ja
inc
add
dec
push
or
add
andl
daa
iret
xor
sub
add
mov
add
fisttpll
lods
fstps
add
add
data16
enter
pop
movsb
add
add
outsl
xchg
pop
push
add
daa
xchg
pop
rolb
pop
push
add
xor
out
add
test
or
pop
mov
pop
test
mov
add
cmc
and
jecxz
dec
ret
pop
mov
xor
mov
stc
out
adc
aas
popa
in
xor
add
add
add
add
and
jnp
test
dec
mov
add
cmp
shll
dec
lock
fwait
int3
and
mov
push
add
or
je
ds
add
jecxz
das
sti
add
rolb
lahf
enter
push
add
inc
add
jnp
aam
and
mov
add
pushf
mov
push
add
int3
dec
js
add
mov
add
add
fistl
pushf
cmp
clc
push
mov
add
adc
pop
add
add
mov
add
jae
cmp
or
test
jns
add
add
mov
mov
add
cmpsb
add
add
mov
sbb
cmp
and
adc
mov
daa
push
add
pushf
pop
and
mov
inc
sub
int
pop
aas
daa
add
jb
push
jnp
xor
mov
mov
mov
stos
adc
daa
mov
add
mov
pop
add
mov
add
into
les
call
test
add
mov
fldcw
adc
xchg
rolb
scas
dec
sbb
stos
movsl
pop
fucomp
dec
lahf
pop
lods
addb
addb
out
lock
sahf
add
cmp
mov
dec
mov
mov
leave
push
jne
lods
das
cmp
es
aas
movsl
xchg
add
mov
push
add
sub
jle
add
cwtl
jecxz
clc
fxsave
sub
popa
jns
sti
xlat
and
in
sub
std
fstl
dec
cmp
stc
sub
inc
push
add
sub
mov
rdpmc
push
add
call
repz
dec
mov
add
adc
insb
pop
int
inc
add
mov
int
adc
add
test
fwait
repnz
add
add
call
dec
mov
xor
pop
xchg
add
mov
repz
add
into
xchg
add
clc
inc
inc
inc
push
jno
popf
popa
stc
inc
cmp
aas
ja
sbb
adc
push
add
and
add
mov
cmp
add
jle
xchg
mov
inc
orl
xor
fdivp
add
shll
add
jp
cmp
add
add
rcrl
xchg
sbb
jns
fistl
mov
fcmovne
aaa
pushf
mov
andl
xchg
add
add
call
add
mov
add
push
sahf
inc
lods
add
outsl
test
add
mov
mov
in
ficompl
add
jae
add
mov
insl
xor
xor
cltd
dec
cmp
or
add
add
popf
jnp
lret
add
sub
sub
jg
add
jge
add
vminsd
add
add
pop
adc
add
add
ljmp
mov
and
cltd
iret
or
and
add
push
add
mov
add
addb
inc
jb
outsl
dec
std
cmpsb
add
enter
add
fisubl
aas
xchg
add
sub
aad
mov
push
jno
in
aaa
stc
loopne
inc
or
sub
sar
aam
insb
dec
lcall
add
add
cli
mov
xchg
stos
pop
aaa
rolb
out
mov
add
lods
or
dec
sub
outsl
mov
repnz
add
add
je
cmc
mov
cmp
lock
jle
sub
add
jae
push
xchg
add
sbb
add
fsubrs
hlt
add
add
jo
sbb
addb
inc
add
add
xchg
arpl
mov
xor
lcall
clc
or
les
adc
enter
gs
pusha
add
push
pop
and
lods
jl
jbe
mov
xchg
out
add
fcmovb
add
ja
jae
mov
test
add
daa
enter
dec
mov
push
add
mov
call
sbb
cmp
cld
inc
dec
bound
mov
cmp
or
sub
aam
jno
out
out
dec
sar
loope
jnp
and
push
cmp
cmp
and
jns
add
pop
jg
enter
add
add
pop
pop
xor
mov
aas
or
lea
add
add
adc
push
in
cli
mov
ds
mov
add
xor
movsb
add
xchg
add
testb
dec
sahf
xor
pop
sub
into
js
jno
pop
mov
addb
add
jmp
lahf
fcomp
or
in
lcall
mov
addl
insl
das
fidivrl
pop
scas
es
popa
testb
add
aad
cli
loop
mov
in
imul
daa
mov
inc
xchg
add
add
sahf
jecxz
add
push
insl
enter
add
add
dec
rolb
cmp
and
fdivr
mov
mov
jne
jnp
cltd
mov
arpl
scas
mov
mov
add
adc
scas
inc
gs
xchg
add
add
aaa
mov
cmp
and
mov
fstps
cmp
shll
add
adc
fstl
add
add
xchg
and
add
dec
bound
mov
add
aaa
pusha
add
insb
sbb
add
add
lret
jl
in
addb
add
add
aaa
dec
pop
rolb
iret
adc
add
outsl
mov
add
pop
hlt
add
xchg
mov
sbb
pop
lds
mov
scas
movsl
adc
xchg
add
lods
incl
in
or
add
mov
ret
sub
add
jle
add
mov
aad
add
idivl
loope
push
add
fidivs
je
scas
stos
les
test
mov
mov
rcll
push
add
inc
add
dec
std
add
bound
mov
insl
xlat
sbb
add
jecxz
xor
cs
add
add
test
stos
ret
popf
stos
in
jp
stos
loopne
imul
rolb
xchg
mov
add
jnp
pop
popf
dec
add
add
add
rolb
or
add
icebp
dec
shll
add
pop
fwait
test
add
mov
test
add
mov
std
cmpsb
add
jnp
add
add
mov
add
movb
js
cmp
add
gs
add
add
dec
ss
jmp
add
cld
add
jge
pushf
scas
js
mov
xor
jmp
add
bound
mov
in
sar
je
mov
add
inc
add
mov
sti
pop
std
in
stc
xor
outsb
movsl
cmp
aad
out
idivl
mov
add
sbb
add
data16
or
adc
rcl
testb
jp
pop
addb
addr16
les
iret
push
add
cld
rcr
mov
xchg
xor
lahf
push
hlt
add
stos
dec
inc
dec
pop
inc
add
add
sub
add
dec
sub
add
mov
jmp
mov
add
sbb
mov
std
mov
and
mov
add
xchg
jmp
xchg
add
dec
mov
cltd
std
ljmp
stos
gs
mov
movl
add
add
add
popf
loop
lods
bound
mov
add
jb
xchg
or
add
mov
pop
outsl
xor
inc
xor
ffree
enter
jecxz
or
fsubl
jnp
xchg
add
add
xor
adc
lds
add
ja
pop
add
mov
scas
enter
dec
mov
xor
sub
mov
push
outsl
or
xchg
addb
sbb
pop
insl
pop
xchg
sbb
pop
aam
xlat
out
fisttpl
add
sub
clc
addb
inc
mov
add
outsl
sahf
push
jno
and
add
sbbl
add
add
mov
push
mov
jo,pt
lods
mov
push
in
call
xchg
add
in
int
imul
sub
cmp
pop
fbstp
test
push
add
les
inc
add
jg
mov
add
mov
mov
ljmp
add
add
xchg
mov
add
mov
push
rcrl
leave
int3
mov
adc
pop
mov
mov
int3
cmpsb
add
mov
add
scas
rolb
add
mov
add
mov
add
add
push
add
add
fbstp
je
outsb
sbb
pop
add
inc
add
sbb
repnz
mov
cmp
popa
testb
out
movb
jmp
das
xor
ret
daa
adc
jmp
xchg
add
add
mov
mov
pushf
addb
pop
sahf
aam
adc
addr16
insl
imul
push
mov
add
add
mov
pop
testb
sub
pop
push
add
or
add
popf
push
add
mov
inc
push
ja
add
mov
or
push
add
sbb
xor
sbb
mov
add
jno
sti
mov
mov
jge
add
sbb
add
jnp
lods
icebp
push
xchg
ja
sub
or
aas
shrl
arpl
mov
add
add
xor
mov
add
inc
and
mov
xlat
add
mov
pop
dec
loop
xchg
jle
repnz
jo
js
add
add
add
outsb
fstps
cmp
xor
mov
lods
lods
lret
cld
je
scas
rolb
and
mov
jg
add
add
mov
add
add
add
push
or
jmp
add
add
sbb
dec
addb
adc
enter
adc
add
outsb
bound
mov
lods
in
repz
lock
clc
jp
or
inc
add
add
push
add
xchg
sbb
inc
int3
mov
ficoms
inc
add
ja
add
add
add
rolb
sbb
dec
push
add
enter
adc
int3
cmpsb
add
jne
add
fisttpll
xchg
movb
xor
out
loop
call
add
dec
cmp
add
imul
add
inc
add
add
xor
lods
inc
add
sbb
lret
jnp
rolb
mov
xchg
mov
lock
xchg
add
jl
in
incl
mov
pop
xlat
pusha
add
add
cld
mov
test
mov
sub
test
aas
std
push
add
adc
add
aaa
xchg
fnstsw
fistl
add
add
hlt
add
add
fdivs
inc
add
mov
mov
dec
push
mov
add
cmc
pop
adc
add
add
jle
push
add
xchg
add
mov
xor
or
movsb
add
in
popa
inc
add
cmp
push
mov
repz
sahf
adc
movsb
add
mov
lock
push
mov
xor
mov
jo
test
dec
cmp
sub
add
into
pop
call
pop
jae
add
in
loope
add
add
fmuls
adc
add
cltd
movsl
addb
pop
je
sub
icebp
cli
addb
adc
popf
insb
outsb
sub
mov
lods
adc
adc
inc
add
fcmovb
inc
xchg
fcoml
mov
sbb
movsl
popf
stos
outsl
fistps
jp
addl
add
testb
cli
push
dec
mov
lahf
pusha
add
addb
add
mov
stos
jge
add
lcall
and
jno
add
sub
add
data16
data16
in
mov
iret
mov
fsts
xor
movsl
mov
ret
jle
int
add
add
in
pop
pop
mov
test
je
sub
aad
push
pop
xlat
mov
test
es
jae
sbb
loopne
test
add
mov
jg
add
repz
fsts
movsb
add
mov
add
mov
sub
add
lods
rep
xchg
jnp
adc
cmp
add
movsl
dec
sub
testb
cmp
pop
ret
inc
push
jns
xchg
test
or
add
xchg
lock
add
data16
testl
add
add
dec
bound
mov
stc
leave
push
popa
movsl
cmpsb
add
push
fsubp
addb
pop
push
add
jle
push
pushf
add
mov
cmp
rolb
or
xchg
ret
leave
mov
data16
add
add
pop
dec
aad
lahf
fptan
add
fmul
or
cmp
and
mov
sbb
add
pop
icebp
adcl
add
insb
jb
push
add
scas
jne
out
add
add
add
xchg
adc
movsl
pop
mov
pop
cmp
aaa
or
movb
int
add
cli
pushf
pushf
std
mov
bound
mov
add
into
push
leave
lods
or
pop
cmp
les
and
add
add
mov
inc
add
mov
stos
loope
roll
ret
stos
in
cmp
sbb
adc
mov
lcall
movsb
add
incb
add
aam
aas
push
sbb
mov
imul
cwtl
lret
push
add
add
add
push
add
mov
or
xchg
movb
add
add
add
les
movsb
add
add
sbb
add
movsl
xor
mov
sbbl
jecxz
pushl
mov
add
imul
stos
inc
add
pop
imul
gs
addb
push
dec
cli
stc
add
stos
addb
add
add
add
add
dec
fcomip
out
jge
mov
add
cli
push
add
add
dec
inc
cmpsl
and
dec
dec
sti
adc
mov
dec
rolb
add
and
mov
inc
add
jb
cwtl
adc
insl
cmp
add
repz
mov
adc
push
add
repnz
fcoml
push
clc
inc
xchg
add
and
ficompl
xchg
pcmpgtd
int
mov
popa
jecxz
xchg
push
mov
add
mov
xlat
in
cmpsl
lock
push
xchg
add
inc
pusha
add
cmpsl
push
repz
call
push
add
add
push
dec
and
add
sbb
loop
pop
mov
xchg
add
add
push
adc
xchg
add
in
mov
sti
scas
dec
je
dec
jnp
sub
jl
add
add
add
add
mov
mov
in
data16
xchg
push
add
add
add
or
pop
mov
mov
add
out
outsb
xor
sub
push
mov
jle
add
push
dec
cmp
cmpsl
mov
add
lahf
icebp
inc
add
mov
add
dec
ficompl
out
idiv
mov
inc
add
add
add
out
or
add
nop
add
add
lcall
pop
ret
xor
in
mov
test
add
jge
cs
inc
add
sub
lret
add
mov
sbb
iret
or
or
mov
xchg
add
outsl
sbb
adc
das
mov
out
out
mov
jbe
jae
xor
cld
in
jb
cmc
fstpl
mov
int3
pop
adc
popf
sub
xor
cs
add
add
mov
push
test
movb
pop
hlt
add
xchg
jle
inc
cli
cmc
inc
add
dec
pop
or
add
sbb
cltd
adc
scas
add
mov
fs
sbb
add
xchg
add
sbb
adc
or
add
add
movb
add
push
mov
iret
xchg
add
test
nop
add
cmp
loop
xchg
and
into
cmpsb
add
xor
inc
add
cli
jne
add
cmp
lods
repz
or
add
cs
lret
ret
dec
adc
arpl
add
add
add
adc
push
add
xchg
das
lea
ljmp
add
add
xlat
jge
popf
sbbl
add
imul
add
insb
in
mov
or
das
call
add
addb
mov
mov
mov
add
in
xor
inc
add
dec
std
lods
mov
add
dec
adc
mov
icebp
jecxz
icebp
test
inc
sub
les
jp
pop
jmp
push
xchg
lods
fcmovnb
add
add
lock
jo
aaa
dec
or
add
test
mov
add
or
stos
adc
test
or
outsl
push
cmp
push
add
add
jae
lahf
jo
xlat
jecxz
pop
shrl
xor
cmc
sti
data16
jb
addr16
pop
mov
add
cwtl
xlat
jne
add
or
add
add
mov
test
rolb
lea
mov
data16
add
cltd
xchg
add
nop
add
or
movsl
jno
mov
add
mov
inc
jb
and
mov
add
dec
jne
add
rcll
push
add
dec
jmp
aam
jmp
add
mov
add
aaa
jbe
sar
inc
add
mov
std
scas
sub
sbbl
and
icebp
mov
add
inc
add
add
pop
push
add
add
push
lods
mov
mov
xor
add
addb
jae
and
mov
inc
std
mov
push
xchg
add
lahf
clc
xor
add
or
mov
frstor
add
add
push
nop
add
cmp
aam
test
add
add
add
add
add
shl
fmuls
or
jle
mov
xchg
rolb
pop
and
mov
add
sbb
mov
mov
add
sahf
mov
cmp
les
and
rolb
push
add
iret
cmp
mov
js
cmp
jae
test
or
and
push
add
add
lahf
add
in
jg
add
add
add
sbb
shll
add
outsl
xchg
add
add
popf
out
fdivrp
xor
popf
test
xlat
pushf
icebp
add
mov
lcall
add
mov
dec
addb
add
imul
movsb
add
add
cwtl
testb
add
adc
lahf
add
in
daa
pop
testl
mov
fucomip
ret
add
std
sti
pop
xchg
mov
mov
lret
addr16
enter
dec
mov
xchg
add
fnstcw
sti
mov
mov
add
xlat
jb
in
add
and
fistpl
rolb
xchg
or
push
add
add
xchg
or
js
dec
push
mov
pop
rolb
and
lock
mov
js
dec
ret
cmp
out
add
mov
mov
mov
add
std
in
pop
sbb
ret
jl
add
pop
decl
ljmp
aam
jnp
repnz
mov
inc
add
add
lods
xchg
add
push
add
clc
in
sub
rcll
lret
dec
jl
adc
sbb
rolb
push
add
add
lcall
mov
xchg
hlt
add
popf
mov
and
push
pop
and
and
mov
inc
add
mov
es
lea
mov
add
mov
insl
sqrtps
daa
fcompl
xchg
add
lods
xor
inc
aas
push
hlt
add
mov
cmc
icebp
clc
ja
add
xlat
xchg
xor
push
add
enter
mov
xlat
jnp
ret
and
jb
rolb
add
add
pusha
add
sub
rolb
jns
test
sbb
add
cs
outsb
movsl
leave
mov
out
lret
mov
mov
jns
dec
outsl
leave
and
std
mov
push
add
add
int3
je
lds
fadd
add
cmp
je
dec
cmp
jl
test
and
mov
and
fldenv
addb
jg
add
mov
stos
cmp
jmp
addb
add
cld
mov
out
fincstp
add
in
repz
mov
add
jge
pop
fisubrs
out
leave
fsubrs
in
inc
add
pushf
lcall
add
mov
pop
rolb
lds
pusha
add
test
jno
enter
adc
fldt
add
cld
aas
scas
int3
fnstcw
lods
data16
add
sbb
add
add
scas
int
pop
push
ljmp
das
sbb
mov
inc
add
add
roll
xchg
sub
insb
push
xchg
hlt
add
je
push
inc
fstl
mov
inc
daa
sub
add
jg
add
loopne
dec
sub
add
add
dec
das
sahf
or
cwtl
jp
lret
dec
and
mov
pusha
add
mov
std
jb
jmp
jbe
jo
stos
xchg
add
cs
push
add
testb
getsec
or
mov
mov
add
bound
mov
pusha
add
in
faddl
xchg
lcall
add
cli
add
addb
rolb
out
jle
add
add
add
add
xchg
repnz
add
add
push
add
add
xchg
push
add
jge
add
cli
sahf
bound
mov
jecxz
add
push
xchg
add
add
pop
into
test
pop
cli
test
imul
pop
stos
or
jl
mov
sbb
mov
mov
push
push
das
xor
push
call
add
add
sbb
mov
xchg
inc
add
mov
add
mov
cli
je
lret
mov
add
movsl
dec
adc
push
push
add
and
mov
add
mov
add
add
adc
mov
movsb
add
xchg
add
cmp
xchg
or
or
inc
int3
movsl
out
lahf
add
add
mov
add
add
add
call
data16
lods
inc
xchg
add
pop
and
mov
jo
mov
mov
lods
std
das
sahf
cmp
inc
add
mov
add
insb
jle
and
mov
mov
in
hlt
add
and
pusha
add
add
icebp
nop
add
add
xchg
add
scas
jp
add
ficoml
sbb
mov
add
fmull
in
sti
and
and
mov
push
add
movsb
add
mov
add
xchg
add
add
jnp
mov
add
cli
out
cld
lds
xchg
add
xor
pop
shll
add
pop
daa
sub
icebp
push
testb
jns
mov
add
mov
xor
movb
out
sbb
add
and
add
add
cmc
stos
cmp
popa
push
daa
js
ja
cmpsb
add
mov
inc
add
add
leave
mov
add
add
dec
mov
sbb
add
cmp
add
dec
pushf
ret
add
outsl
cmp
add
add
rcl
add
add
mov
sbb
imul
mov
sub
inc
cmpsb
add
add
pop
cmpsl
push
add
xor
add
add
xchg
add
cltd
mov
nop
add
mov
mov
cmc
or
dec
jae
add
pushf
rolb
insl
data16
and
add
add
add
sbb
push
imul
add
call
xchg
add
cmp
add
add
sti
loop
pop
cmpsb
add
add
mov
push
add
add
fnsave
add
cld
xor
add
add
cld
leave
pop
test
daa
inc
add
pop
out
cmpsl
sbb
lds
or
lahf
fsubp
add
add
outsl
sub
add
ret
sub
out
daa
cmp
add
insl
mov
pop
pushf
sub
add
add
add
pop
adc
push
sub
jg
fildl
cmp
jbe
stc
inc
sub
cmp
add
ljmp
sub
jmp
cs
enter
in
xor
push
add
aaa
pop
mov
add
add
and
mov
add
ret
loop
dec
mov
shll
std
pop
or
scas
loope
inc
push
add
out
cs
fdivrl
dec
arpl
outsb
bound
mov
push
insl
ljmp
add
add
pusha
add
add
imul
xchg
lahf
repz
scas
inc
aas
push
add
add
popf
cltd
nopl
jecxz
inc
movsl
inc
add
push
call
jns
add
add
add
dec
movsl
pop
sub
dec
push
insl
add
add
je
jne
dec
std
int3
xchg
mov
add
jae
movsb
add
cwtl
cmp
mov
dec
call
add
into
std
gs
les
mov
sbb
xchg
sub
mov
mov
mov
addr16
add
push
out
cmp
add
add
test
sarl
or
and
int3
into
insl
out
or
hlt
add
adc
xor
popa
xchg
and
mov
jmp
jg
addr16
and
jp
add
mov
pusha
add
mov
add
xor
std
jecxz
add
popa
sbb
add
add
mov
sahf
adc
nop
add
insl
insl
cmp
xchg
andl
xor
lock
dec
loope
add
add
jge
push
add
mov
add
sub
es
add
movsl
push
add
dec
rolb
jne
add
ret
mov
push
mov
add
sbb
dec
sub
push
add
mov
mov
pushf
and
add
mov
push
add
mov
leave
fldl
xchg
cmp
add
push
add
rolb
jp
add
or
pop
and
add
rolb
mov
in
add
mov
jae
add
nop
add
shll
jns
stc
push
aam
mov
xchg
fcoms
add
iret
mov
add
inc
jno
sub
mov
add
add
add
daa
xor
adc
and
std
call
and
or
sbb
jb
lds
sub
add
add
add
add
add
xchg
add
pop
rcr
cmpsl
dec
lret
mov
add
mov
mov
addl
dec
inc
mov
ret
int3
mov
mov
sbb
jp
aad
jno
pop
mov
bound
mov
add
das
loope
add
adc
push
add
xchg
mov
add
xor
and
jno
add
jmp
out
insb
inc
add
or
add
mov
mov
xor
mov
outsl
pusha
add
cmp
pop
stc
sub
adc
add
add
add
gs
int3
test
addb
pop
out
add
in
sub
data16
add
add
add
ljmp
xor
add
add
sub
add
loope
fwait
scas
std
sub
mov
movb
jecxz
sbb
add
add
cmc
push
add
dec
jne
add
leave
xor
jl
add
or
add
hlt
add
flds
add
mov
out
and
mov
adc
xchg
sub
popa
mov
lahf
fsubrs
add
lods
cmp
ret
push
add
add
fbld
inc
add
xchg
add
add
rolb
int
fisubl
dec
lahf
add
mov
pop
je
fdivs
out
les
lahf
adc
rolb
add
insb
jnp
je
enter
add
jg
add
mov
add
adc
shrl
stos
cmp
add
cmp
fdivrs
movsb
add
mov
or
or
add
lret
rolb
das
and
mov
add
add
add
add
or
popa
jl
js
add
push
mov
add
mov
lret
movb
add
add
mov
push
add
pop
addb
add
hlt
add
das
or
pop
pop
cmp
add
out
push
cltd
sbb
dec
out
jno
add
mov
clc
ja
mov
push
jns
dec
jge
mov
or
push
add
lea
mov
int3
rolb
mov
jg
add
mov
add
cmp
dec
rolb
mov
mov
add
or
fidivl
add
mov
insl
jg
sbb
sub
jbe
aas
pop
pusha
add
jle
dec
sub
add
add
push
push
add
xlat
inc
add
sbb
mov
add
add
inc
out
xor
add
mov
movb
and
mov
add
mov
add
add
or
mov
sar
cltd
jmp
add
xor
hlt
add
cmp
icebp
push
pop
or
pop
jne
testb
stos
xor
push
add
add
mov
nop
add
mov
fbstp
and
jmp
lret
sub
leave
jb
jp
fimuls
icebp
cmpsl
rcll
add
xor
inc
xlat
jb
cmp
shr
sub
sub
popa
mov
outsl
mov
add
testb
add
add
js
adc
mov
add
add
cmp
push
add
inc
dec
add
add
sub
add
add
pop
pop
jne
jg
mov
mov
add
sbb
lds
sub
add
mov
pop
mov
cmp
fildl
into
insl
jnp
out
xchg
add
rolb
hlt
add
and
mov
lcall
jmp
add
cmp
mov
jle
dec
lods
mov
add
addb
add
jae
dec
adc
scas
add
mov
insl
mov
jg
add
push
add
ror
adc
add
add
div
shl
and
sbb
cmpsl
and
mov
add
cmp
lret
mov
inc
add
jno
add
fisubl
mov
call
pop
or
bound
mov
xor
lahf
dec
fildl
cmp
and
pop
sbb
push
add
rcll
add
in
add
mov
add
add
push
add
add
mov
mov
add
jl
adc
addr16
add
mov
mov
add
aaa
mov
clc
push
add
outsl
cmp
add
inc
add
aam
fwait
lds
mov
xchg
fidivrs
add
ljmp
xchg
rolb
std
lds
enter
xchg
add
movb
push
add
call
out
iret
pop
test
xchg
lahf
pop
pop
add
outsl
gs
pop
std
inc
add
add
inc
add
add
icebp
dec
pop
in
addb
in
ja
add
lea
insl
xor
mov
shll
ds
iret
xor
add
mov
adc
stos
test
mov
inc
rolb
inc
add
and
addb
test
cld
pop
cs
xorl
mov
push
add
sarl
pop
imul
sub
add
add
add
xchg
movsl
loopne
jo
pop
pop
cmp
test
rolb
daa
std
roll
add
outsl
imul
push
push
add
ds
pop
in
sbb
add
add
mov
call
dec
xor
and
add
lcall
add
addb
jae
add
jmp
adc
or
lret
out
jp
movsl
sbb
repnz
cli
push
leave
arpl
testb
mov
mov
das
xchg
fldt
inc
mov
cwtl
add
mov
dec
push
add
add
arpl
add
shl
pop
cwtl
movsl
adc
aad
add
pop
xor
cld
mov
leave
addb
pushf
cmp
ljmp
push
lods
sub
mov
cld
add
testl
rolb
jnp
mov
add
mov
mov
add
pushf
fbstp
inc
ret
test
add
push
lea
push
add
loopne
das
popf
stc
sbb
mov
mov
jns
dec
les
or
bound
mov
mov
enter
sbb
add
add
loopne
addr16
add
add
sub
aaa
stc
cmp
and
clc
pop
testb
mov
js,pn
add
mov
je
cmp
add
jmp
and
js
int
jl
hlt
add
inc
push
mov
cmp
and
jno
mov
mov
xor
mov
xor
push
add
jg
aam
xor
repnz
jbe
pushf
loop
in
cwtl
pop
lods
adc
add
aam
push
add
iret
xchg
add
add
mov
mov
add
add
add
je
jo
into
data16
push
adc
or
popf
sarl
mov
dec
mov
rcll
inc
add
add
add
jns
mov
fdivr
das
jb
sub
sbb
add
add
xchg
add
enter
xchg
sbb
sbbl
loop
or
ret
add
add
add
add
mov
xchg
add
cltd
dec
xor
xor
sbb
add
xchg
pusha
add
fsts
add
dec
push
in
add
mov
jae
pushf
sarl
daa
stos
iret
nop
add
add
call
stos
pop
inc
add
xchg
add
gs
std
lea
xor
adc
and
cmp
cmpsb
add
add
add
rolb
xor
mov
add
add
lahf
xchg
add
dec
pop
aam
incl
adc
pop
in
loop
test
bound
mov
push
add
add
add
mov
cmp
lret
dec
pop
mov
add
mov
stc
mov
sbb
xchg
add
add
shr
mov
cmp
add
jp
inc
repz
or
in
add
xchg
mov
mov
jae
lock
add
bound
mov
inc
add
add
dec
inc
repnz
dec
in
data16
inc
jne
or
orl
add
or
adc
incl
inc
mov
or
test
add
add
add
outsl
movsl
sub
cmpsl
fcmovbe
add
cmp
add
mov
lds
addb
push
add
adc
dec
insl
mov
out
bound
mov
add
mov
les
call
loop
popf
loop
enter
or
dec
dec
ret
add
add
add
or
cltd
lcall
jp
push
xchg
jae
ljmp
dec
imull
gs
mov
pop
movsl
jno
rolb
push
add
stos
and
push
add
add
lahf
loop
add
add
add
add
mov
js
js
add
jle
sbb
mov
arpl
add
xor
add
icebp
cwtl
push
add
add
test
icebp
cltd
pop
in
idivl
pop
mov
sub
push
add
inc
add
add
pushf
repnz
and
jmp
pop
pop
pop
sub
push
add
jno
lret
es
sub
xor
and
mov
out
sahf
adc
jns
pusha
add
enter
add
add
add
add
scas
bound
mov
add
add
jbe
xchg
push
add
add
mov
inc
add
mov
test
cmp
add
adc
das
das
rcrl
or
add
sub
ljmp
xor
in
aad
mov
xchg
add
add
and
out
mov
aaa
xlat
xlat
push
add
in
loopne
cli
repz
add
or
int3
lcall
jns
dec
inc
stc
jne
pop
sbb
test
add
push
jns
inc
add
insl
mov
bound
mov
movsb
add
add
mov
das
adc
add
roll
clc
xlat
mov
adc
xor
add
mov
scas
xor
iret
rolb
std
jp
mov
iret
fldcw
sub
leave
in
jbe
ret
icebp
into
fcoml
add
testb
add
cmpsl
imul
xchg
dec
aaa
inc
add
cmpsl
movsl
xorl
ljmp
ja
stos
enter
imul
xchg
add
mov
mov
testb
add
lods
stos
sub
push
pop
mov
je
int
les
sub
add
mov
dec
jnp
add
mov
add
aas
pop
jg
jnp
cmp
add
mov
adcl
aaa
aaa
xchg
pushf
jnp
add
out
flds
add
outsl
lock
adc
add
rolb
repnz
cmp
test
add
out
cs
pop
mov
push
or
inc
cmp
inc
add
cs
pop
sub
dec
push
jns
repz
xchg
nop
add
and
mov
add
pop
shrl
push
hlt
add
lods
lret
pop
cmp
dec
popf
ficompl
add
add
repz
add
mov
mov
jecxz
inc
add
in
dec
dec
jnp
add
add
jno
mov
inc
ljmp
into
popf
jnp
cli
cli
iret
rolb
nop
add
cmp
int
add
movb
xor
test
and
out
fsubl
add
add
in
out
pop
negl
add
in
inc
add
inc
add
add
fwait
or
add
fdiv
add
add
add
adcl
jmp
out
sub
xorl
test
add
cmpl
aaa
nop
add
es
ret
inc
sub
mov
mov
dec
xchg
add
add
test
mov
and
jne
fstps
pop
and
mov
fcoms
add
es
addr16
add
cmpsl
clc
jecxz
add
add
mov
loope
and
mov
sbb
xchg
xchg
push
lahf
mov
cmp
mov
mov
cmpsl
es
add
sub
sahf
inc
add
add
add
jno
add
mov
add
add
lcall
jo
out
jg
popf
dec
ja
mov
xchg
add
std
mov
xchg
add
nop
add
cmp
jbe
jecxz
push
dec
insb
xlat
inc
pop
cmp
cmp
inc
add
sbb
xor
movb
imul
ja
add
add
add
ret
adc
cmp
insb
jge
push
add
mov
add
jle
and
mov
add
jae
ss
lret
add
mov
call
push
add
cmpsb
add
add
xchg
add
dec
push
mov
rolb
pusha
add
movsb
add
outsl
cli
jle
add
cmp
pop
lods
add
push
add
enter
dec
jnp
cwtl
or
add
push
add
add
xlat
test
sub
add
xor
push
add
push
add
and
jb
and
mov
push
add
outsb
jo
nop
add
aad
iret
fwait
xor
outsl
invd
mov
jae
repnz
iret
aaa
push
add
jbe
pop
mov
mov
imul
dec
adc
icebp
inc
add
jg
add
jo
cmc
arpl
aad
insl
lock
add
lcall
insb
popf
ja
das
xchg
testb
add
shrl
cmpsb
add
lcall
push
add
in
cltd
dec
fimuls
shl
scas
rolb
add
push
sti
jno
rorl
add
jbe
pop
pop
pop
sub
add
fisubl
add
adc
adc
xchg
je
cmp
mov
lret
inc
add
je
jnp
add
jbe
popa
fisubl
add
add
add
add
test
aas
insb
lea
add
add
push
add
add
ljmp
add
add
and
testl
aas
sbb
lret
pop
imul
aad
cli
lods
mull
mov
xor
jns
sub
gs
add
fcoms
cmp
rolb
cmc
aad
cld
add
jns
inc
pop
add
insl
test
push
add
shll
mov
movsl
loopne
or
cmp
sbb
add
and
inc
add
or
xchg
dec
sub
add
adc
out
push
jae
jl
xchg
mov
mov
inc
frstor
jl
add
ljmp
add
add
jae
adc
pop
mov
add
add
es
add
pop
mov
add
mov
or
lcall
std
add
aaa
repnz
pop
xor
sti
inc
add
add
roll
push
rolb
jecxz
inc
or
add
add
add
push
cmp
rolb
lret
cmp
sub
add
mov
pop
pop
out
loopne
mov
adcl
js
add
mov
mov
add
test
add
add
inc
fmuls
jnp
add
mov
out
fidivrl
add
inc
add
add
insl
cmpsl
fcoml
add
lcall
lds
testb
cltd
std
xchg
add
hlt
add
dec
mov
xchg
add
xlat
push
add
mov
jnp
sub
mov
rolb
iret
aad
add
jne
sub
or
add
mov
ja
call
lcall
xchg
add
fucomip
pop
es
imul
add
frndint
stos
testb
push
add
mov
add
add
das
xor
pop
sub
jp
add
push
add
rcll
je
add
std
jecxz
add
repnz
xchg
add
cld
sbb
inc
add
adc
ljmp
mov
ljmp
fincstp
mov
push
add
adc
sbb
xor
add
add
sub
loopne
push
inc
add
addr16
shll
mov
inc
add
ret
pop
outsb
dec
add
sub
mov
pop
je
xor
iret
fxch
mov
push
add
cmp
jmp
add
add
inc
adc
inc
add
mov
sub
das
outsl
push
add
pop
sub
add
fdivrs
add
out
inc
add
pop
imul
aaa
ss
cltd
dec
movb
fcmovne
mov
mov
mov
std
out
test
inc
add
scas
clc
ds
mov
cmp
mov
add
push
add
out
pop
mov
popa
add
push
add
divl
mov
cmpsb
add
add
mov
add
rol
add
test
push
add
repnz
out
or
add
mov
or
add
pushf
lods
xchg
add
pop
stos
mov
adc
aad
rolb
or
ss
add
icebp
addb
js
sarl
pushl
push
mov
jbe
jecxz
enter
push
mov
jp,pt
add
add
outsl
daa
in
xchg
iret
lcall
or
jecxz
add
add
add
sub
insl
add
in
testb
mov
sub
xor
dec
rolb
sahf
mov
and
jno
std
sti
sbb
add
out
enter
std
jnp
xor
sub
outsl
fidivrs
add
data16
fisubrs
fcoms
add
stc
add
sahf
ljmp
inc
add
mov
sarl
mov
or
insb
sub
data16
add
add
lea
and
add
mov
add
cmpsb
add
push
add
mov
data16
jp
add
sbb
pushf
mov
das
pop
mov
rolb
inc
int3
fst
add
popa
adc
push
or
mov
es
outsb
loopne
sahf
and
cld
pop
cld
stos
stos
add
add
add
mov
and
add
push
add
inc
add
add
addb
sub
negl
dec
lret
xchg
add
add
rolb
add
mov
dec
or
mull
pop
mov
lds
mov
pop
lods
fsubl
mov
add
ret
push
lock
add
popa
add
add
inc
cmc
jl
push
mov
add
out
sub
jle
jge
inc
add
add
and
mov
add
adc
inc
push
add
fdivrs
bound
mov
xchg
adc
shl
pop
inc
add
cmp
add
push
add
add
add
sbb
fldcw
push
add
xchg
mov
fldenv
loope
cld
jbe
lods
fstpl
rolb
xchg
jo
cmc
or
sub
push
add
dec
mov
jne
mov
add
mov
push
add
mov
add
jns
negl
add
cmpsl
notl
aam
mov
push
add
loopne
and
mov
jns
mov
push
add
cwtl
xchg
add
lahf
pop
iret
mov
dec
mov
add
arpl
xchg
jbe
jno
sub
xlat
xor
mov
add
and
xchg
std
and
xchg
outsl
mov
jne
jb
inc
add
ljmp
mov
add
mov
cmpsb
add
outsb
jle
test
shll
lds
mov
mov
add
add
mov
pop
and
mov
ss
jp
into
mov
subl
pushf
inc
add
bound
mov
add
and
lock
imul
add
add
js
and
add
and
rep
pop
and
mov
and
mov
add
adc
pop
add
mov
call
push
adc
mov
add
add
add
add
scas
jnp
add
mov
incl
jo
and
fidivrl
cltd
sbb
pushf
sbb
andl
in
pop
loopne
push
fidivl
jae
or
stc
adc
insb
push
add
ds
add
fsincos
clc
cmp
sbbl
add
nop
add
add
nop
add
add
add
dec
and
movsl
cld
loop
das
movb
mov
scas
lea
mov
repz
cmc
adc
lea
add
stos
pop
xor
push
scas
add
mov
sahf
int3
pop
call
add
test
xor
aad
mov
addb
les
jne
add
add
sbb
leave
ret
and
testb
add
lods
pop
ret
push
in
cld
sub
cmp
mov
movsl
cmpsb
add
add
mov
das
in
or
add
imul
test
popf
cli
mov
sti
scas
pop
push
add
out
xchg
sbb
add
dec
dec
call
arpl
ljmp
or
mov
push
cmp
aaa
pop
pop
sbb
ret
mov
in
inc
mov
rolb
sbbl
mov
cmp
sbb
stos
call
int
adc
add
mov
lret
mov
mov
add
aaa
push
mov
pop
jg
add
mov
scas
mov
aad
add
addb
addb
int3
sub
mov
sub
add
add
shll
add
add
in
mov
repnz
xor
fwait
nopl
pusha
add
ret
add
dec
stc
jge
js
rolb
xchg
adc
add
add
test
rolb
call
cmp
pushl
mov
adc
bound
mov
cs
int
add
dec
mov
xor
mov
ret
pop
inc
imul
lods
ret
xor
sbb
stos
scas
push
add
or
push
insb
xlat
add
xchg
repnz
add
and
addb
or
jp
addr16
add
lcall
add
cmc
xor
add
scas
ljmp
in
movb
add
add
mov
xor
add
leave
push
add
mov
loope
add
in
popf
sub
jo
inc
add
mov
pop
and
shrl
or
sub
ret
inc
add
add
mov
add
add
add
movb
jmp
mov
scas
pop
push
inc
iret
in
xor
mov
sub
adc
mov
mov
and
aas
mov
add
aaa
xchg
add
outsb
sbb
jle
dec
push
stc
aam
or
int3
push
shll
add
add
rolb
add
subl
add
add
add
pop
lret
jne
add
add
mov
xchg
pop
hlt
add
add
cmp
inc
add
push
add
inc
add
push
add
jecxz
xor
jge
add
fwait
je
mov
imul
sbb
pavgw
adc
add
jae
add
mov
add
add
add
sti
or
lds
push
inc
loope
dec
pop
into
mov
stc
cmc
daa
in
mov
inc
add
jb
data16
jge
sbb
dec
and
or
cmp
cmp
rolb
mov
cld
bound
mov
add
add
ret
lods
sub
add
inc
leave
outsl
and
mov
cmp
rorl
push
add
.byte
insb
pop
