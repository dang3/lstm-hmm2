xchg
jecxz
in
loop
in
call
loop
shl
loop
xor
in
in
call
loop
fs
in
out
in
call
loop
dec
out
in
out
in
in
in
call
loop
out
out
in
loop
in
jecxz
in
call
loop
vpsrad
push
out
in
loop
in
call
loop
add
loop
adc
loop
fsub
loop
jge
loop
mov
in
in
out
in
in
in
out
in
in
in
in
in
jecxz
in
in
in
jecxz
in
call
loop
sbb
loop
pop
out
in
loop
in
out
in
loope
in
loop
in
out
in
out
in
out
in
call
loop
lods
in
in
out
in
jecxz
in
out
in
out
in
out
in
out
in
loop
in
jmp
loop
sub
loop
push
jecxz
in
out
in
call
loop
and
loop
and
loop
xor
in
in
in
in
in
in
jmp
loop
xchg
loop
in
out
in
loop
in
in
in
loope
in
in
in
jmp
loop
lret
in
call
loop
mov
loop
in
jmp
loop
and
loop
mov
call
loop
frstpm(287
loop
or
loop
jecxz
in
loop
in
call
loop
into
out
in
in
in
loope
in
jecxz
in
out
in
loop
in
out
in
out
in
out
in
out
in
in
in
out
in
in
in
in
in
loop
in
out
in
in
in
loop
in
out
in
loope
in
jecxz
in
jecxz
in
out
in
call
loop
inc
jmp
loop
sahf
jecxz
in
call
loop
cmp
loop
out
loop
jne
loop
and
in
out
in
in
in
loope
in
jecxz
in
out
in
out
in
loop
in
jecxz
in
loope
in
loop
in
out
in
out
in
jecxz
in
out
in
jecxz
in
call
loop
in
in
out
in
jecxz
in
out
in
in
in
loop
in
loop
in
in
in
jecxz
in
loope
in
loop
in
out
in
loope
in
jecxz
in
loope
in
jecxz
in
out
in
call
loop
insb
in
in
in
in
out
in
jecxz
in
loope
in
call
loop
ret
out
in
in
in
jmp
loop
out
loop
out
out
in
out
in
loop
in
loop
in
in
in
jecxz
in
loop
in
loop
in
out
in
in
in
out
in
loope
in
call
loop
cmp
loop
mov
loop
test
loop
psubsw
in
loop
in
loop
in
loop
in
loop
in
loope
in
loop
in
out
in
in
in
jecxz
in
in
in
out
in
in
in
in
in
in
in
loope
in
in
in
call
loop
mov
in
in
out
in
out
in
out
in
out
in
loop
in
loop
in
loop
in
call
loop
into
out
in
in
in
in
in
out
in
in
in
in
in
out
in
jecxz
in
out
in
in
in
out
in
in
in
in
in
loop
in
out
in
call
loop
dec
out
in
out
in
in
in
loop
in
jmp
loop
sbb
loop
pop
in
in
in
in
out
in
in
in
out
in
out
in
jecxz
in
call
loop
js
loop
in
loop
lcall
in
call
loop
imul
in
loope
in
jmp
loop
xor
loop
add
loop
add
loop
mov
loop
and
loop
jbe
loop
and
loop
aaa
in
in
jmp
loop
shl
loop
vpsrad
loop
pop
out
in
loop
in
out
in
out
in
out
in
out
in
call
loop
inc
in
in
out
in
loope
in
loope
in
out
in
out
in
jecxz
in
loope
in
out
in
in
in
call
loop
push
call
loop
and
out
in
in
in
jecxz
in
jecxz
in
in
in
in
in
call
loop
xlat
loope
in
in
in
loope
in
jecxz
in
jecxz
in
in
in
call
loop
fsubr
loop
nop
in
in
in
in
out
in
call
loop
popa
loop
in
out
in
call
loop
sub
in
loop
in
in
in
jecxz
in
out
in
call
loop
inc
out
in
jecxz
in
in
in
loope
in
call
loop
mov
loop
dec
jecxz
in
out
in
call
loop
aaa
jecxz
in
out
in
in
in
in
in
loop
in
jecxz
in
call
loop
in
loop
in
loope
in
in
in
jecxz
in
in
in
out
in
loop
in
out
in
in
in
call
loop
mov
in
in
call
loop
and
in
loop
in
loop
in
out
in
call
loop
xor
out
in
in
in
loope
in
loope
in
out
in
loop
in
loope
in
loop
in
call
loop
adc
loop
xor
loop
pusha
in
in
out
in
out
in
out
in
jecxz
in
out
in
out
in
loope
in
call
loop
and
loop
addr16
in
in
in
in
in
call
loop
pop
jecxz
in
in
in
in
in
out
in
jecxz
in
jecxz
in
in
in
in
in
in
in
out
in
out
in
out
in
in
in
call
loop
loop
in
in
in
loope
in
out
in
loop
in
jecxz
in
out
in
in
in
in
in
loop
in
out
in
out
in
jmp
loop
xor
loop
inc
jecxz
in
out
in
loop
in
jecxz
in
call
loop
fsub
loop
xchg
call
loop
mov
loop
je
loop
xor
loop
pop
jmp
loop
push
loop
in
loope
in
in
in
jecxz
in
in
in
call
loop
xchg
loop
in
loop
sahf
loop
in
jecxz
in
out
in
in
in
in
in
loop
in
loop
in
in
in
loop
in
loop
in
in
in
call
loop
cmpsb
call
loop
dec
in
in
in
in
out
in
in
in
loope
in
out
in
out
in
in
in
jecxz
in
in
in
call
loop
dec
jecxz
in
loop
in
jecxz
in
loop
in
loop
in
in
in
loop
in
jecxz
in
in
in
loop
in
loop
in
in
in
in
in
in
in
in
in
out
in
jmp
loop
push
in
in
call
loop
test
loop
and
in
out
in
loope
in
in
in
out
in
out
in
in
in
loop
in
in
in
out
in
jecxz
in
out
in
out
in
out
in
loop
in
out
in
in
in
out
in
loop
in
in
in
out
in
out
in
out
in
loop
in
in
in
call
loop
mov
loop
adc
loop
out
loop
imul
loop
mov
loop
in
out
in
call
loop
or
loop
call
loop
xchg
loop
xchg
loop
push
in
in
jecxz
in
out
in
in
in
loope
in
out
in
out
in
out
in
jecxz
in
out
in
loop
in
out
in
out
in
call
loop
shl
in
loope
in
jecxz
in
loope
in
out
in
out
in
call
loop
stos
out
in
loope
in
in
in
in
in
in
in
jecxz
in
out
in
loop
in
out
in
in
in
out
in
out
in
out
in
loop
in
out
in
loop
in
in
in
call
loop
mul
loop
gs
in
jecxz
in
jecxz
in
jmp
loop
lock
in
jmp
loop
jmp
out
in
in
in
out
in
call
loop
push
jmp
loop
push
out
in
out
in
jmp
loop
push
call
loop
push
loop
in
in
in
loope
in
loop
in
loope
in
call
loop
push
in
in
out
in
in
in
jmp
loop
sbb
loop
adc
loop
stc
out
in
loop
in
jecxz
in
loop
in
loop
in
loope
in
out
in
loop
in
call
loop
adc
loop
loop
in
jmp
loop
shl
loop
fsub
loop
mov
call
loop
loope
loop
mov
in
in
loope
in
out
in
jecxz
in
jecxz
in
in
in
out
in
out
in
out
in
out
in
in
in
in
in
loop
in
loope
in
in
in
call
loop
push
out
in
out
in
loop
in
in
in
out
in
jecxz
in
out
in
out
in
loop
in
loope
in
call
loop
or
loop
popf
loop
in
call
loop
xchg
jecxz
in
jecxz
in
in
in
call
loop
icebp
loop
in
out
in
call
loop
mul
loop
mov
loop
in
out
in
out
in
call
loop
popf
in
in
out
in
out
in
out
in
loop
in
out
in
jecxz
in
loop
in
in
in
loop
in
in
in
jecxz
in
out
in
jecxz
in
jecxz
in
in
in
call
loop
xchg
out
in
jecxz
in
out
in
loope
in
call
loop
xchg
loop
in
in
in
loope
in
call
loop
pop
in
in
out
in
out
in
in
in
out
in
jecxz
in
jecxz
in
in
in
call
loop
sub
jecxz
in
call
loop
mov
jecxz
in
loop
in
out
in
jecxz
in
out
in
loop
in
out
in
loop
in
jmp
loop
xor
loop
lods
jecxz
in
call
loop
dec
in
in
in
in
out
in
out
in
loope
in
out
in
in
in
in
in
out
in
jmp
loop
jbe
loop
pop
loop
in
out
in
jecxz
in
in
in
in
in
in
in
out
in
call
loop
mov
loop
inc
out
in
loop
in
jmp
loop
add
loop
ret
in
in
in
jmp
loop
xchg
loop
sub
loop
xchg
loope
in
out
in
out
in
out
in
out
in
call
loop
ss
in
jecxz
in
jecxz
in
jecxz
in
jecxz
in
out
in
jecxz
in
jmp
loop
push
in
in
loope
in
jecxz
in
out
in
out
in
in
in
jecxz
in
loop
in
loop
in
out
in
jecxz
in
loop
in
out
in
in
in
in
in
in
in
in
in
in
in
jmp
loop
mov
loop
outsb
out
in
in
in
jecxz
in
call
loop
cmpsb
loope
in
in
in
call
loop
dec
out
in
jecxz
in
loop
in
out
in
out
in
loop
in
out
in
loop
in
jecxz
in
out
in
call
loop
dec
call
loop
or
loop
outsl
loop
in
jecxz
in
out
in
in
in
in
in
out
in
out
in
loope
in
in
in
call
loop
push
jecxz
in
in
in
loope
in
in
in
in
in
in
in
out
in
loop
in
loop
in
loop
in
out
in
out
in
out
in
out
in
loope
in
loop
in
in
in
in
in
out
in
jmp
loop
push
loop
in
out
in
jecxz
in
in
in
in
in
call
loop
jecxz
loop
push
loop
pushf
loope
in
out
in
loop
in
loop
in
out
in
in
in
out
in
loop
in
jecxz
in
in
in
loop
in
in
in
out
in
in
in
in
in
out
in
jecxz
in
loope
in
loop
in
loop
in
in
in
jecxz
in
in
in
out
in
jmp
loop
fsubr
loop
cmp
loop
fsubp
loop
cmp
loop
dec
jecxz
in
call
loop
and
loop
jmp
jmp
loop
in
loop
aad
loop
sub
loop
sbb
out
in
loope
in
loope
in
jecxz
in
jecxz
in
in
in
in
in
loope
in
loop
in
jecxz
in
loop
in
in
in
out
in
in
in
out
in
out
in
loop
in
jecxz
in
in
in
jecxz
in
in
in
in
in
loop
in
out
in
jecxz
in
out
in
in
in
in
in
out
in
call
loop
add
loop
call
jecxz
in
in
in
call
loop
iret
call
loop
jne
loop
and
in
loope
in
loop
in
jmp
loop
out
loop
shl
in
jecxz
in
in
in
jecxz
in
jecxz
in
loope
in
in
in
out
in
out
in
jecxz
in
call
loop
sahf
jecxz
in
in
in
out
in
jecxz
in
out
in
in
in
in
in
call
loop
dec
jecxz
in
out
in
call
loop
or
loop
into
in
in
loope
in
in
in
loop
in
loope
in
in
in
out
in
jecxz
in
in
in
call
loop
push
jecxz
in
call
loop
leave
in
in
jmp
loop
sub
loop
icebp
loop
in
in
in
loope
in
jecxz
in
in
in
loop
in
call
loop
and
loop
cwtl
in
in
loop
in
in
in
call
loop
movsl
out
in
in
in
in
in
out
in
in
in
out
in
out
in
out
in
loop
in
loop
in
out
in
in
in
out
in
in
in
jmp
loop
pop
in
in
jecxz
in
loope
in
jmp
loop
mov
jecxz
in
in
in
loope
in
out
in
in
in
in
in
out
in
out
in
out
in
call
loop
and
loop
aas
out
in
jecxz
in
loop
in
in
in
loop
in
out
in
in
in
jmp
loop
into
out
in
jecxz
in
out
in
call
loop
inc
jecxz
in
in
in
in
in
in
in
out
in
jecxz
in
loop
in
in
in
loop
in
loop
in
call
loop
sub
loop
loop
loop
int
loop
push
out
in
call
loop
lret
in
out
in
out
in
jecxz
in
jecxz
in
jmp
loop
mul
loop
and
loop
arpl
loop
pop
out
in
out
in
out
in
jecxz
in
in
in
jecxz
in
loope
in
jecxz
in
out
in
loop
in
out
in
jecxz
in
call
loop
cmc
jecxz
in
loop
in
jecxz
in
jmp
loop
fs
in
out
in
out
in
call
loop
pushf
call
loop
xor
loop
sub
loop
jne
loop
add
loop
inc
out
in
jmp
loop
jecxz
loop
mov
loop
in
in
jecxz
in
jecxz
in
in
in
out
in
in
in
jecxz
in
out
in
loop
in
in
in
jecxz
in
out
in
out
in
jecxz
in
jecxz
in
jmp
loop
jl
loop
xchg
loop
out
in
out
in
loope
in
out
in
in
in
in
in
in
in
out
in
in
in
in
in
jecxz
in
jecxz
in
jecxz
in
loope
in
loop
in
loop
in
out
in
jecxz
in
in
in
out
in
call
loop
mov
loop
mov
out
in
jecxz
in
jecxz
in
loope
in
jecxz
in
jmp
loop
or
loop
in
in
out
in
loop
in
out
in
out
in
jecxz
in
loop
in
out
in
in
in
out
in
jecxz
in
loope
in
jecxz
in
jmp
loop
cmp
loop
insb
jecxz
in
jecxz
in
loope
in
in
in
loop
in
loope
in
out
in
out
in
jecxz
in
in
in
in
in
out
in
loop
in
out
in
out
in
out
in
loope
in
loope
in
in
in
out
in
in
in
in
in
call
loop
sub
out
in
out
in
call
loop
es
in
loope
in
out
in
jmp
loop
xlat
out
in
jecxz
in
loop
in
in
in
out
in
loop
in
jecxz
in
out
in
out
in
jecxz
in
in
in
loope
in
in
in
loope
in
jecxz
in
loope
in
out
in
out
in
loop
in
out
in
in
in
call
loop
cli
jecxz
in
out
in
out
in
in
in
loop
in
in
in
out
in
jecxz
in
loope
in
in
in
loop
in
call
loop
push
jmp
loop
aam
loop
jp
loop
xor
loop
add
loop
loop
loop
mov
loop
in
in
in
jecxz
in
out
in
in
in
jmp
loop
cmp
loop
loop
sub
loop
enter
cmpsl
call
loop
adc
loop
out
loop
sti
in
in
in
in
call
loop
push
jecxz
in
call
loop
loopne
loop
daa
in
in
out
in
out
in
out
in
jecxz
in
out
in
in
in
in
in
out
in
out
in
call
loop
xchg
loop
loope
loop
pop
out
in
call
loop
jbe
loop
cmpsl
jecxz
in
in
in
in
in
loope
in
in
in
in
in
out
in
call
loop
shl
in
call
loop
in
out
in
in
in
jecxz
in
in
in
call
loop
jmp
call
loop
or
loop
fsubp
loop
aas
out
in
loope
in
in
in
in
in
loop
in
out
in
loope
in
out
in
out
in
loop
in
out
in
call
loop
mov
jecxz
in
out
in
jecxz
in
in
in
out
in
loope
in
jmp
loop
cli
jecxz
in
loop
in
loop
in
out
in
loope
in
loope
in
call
loop
mov
loop
imul
loop
pop
call
loop
fwait
out
in
in
in
jecxz
in
call
loop
sub
loop
iret
in
in
in
in
out
in
jecxz
in
jmp
loop
daa
call
loop
out
call
loop
xchg
call
loop
xchg
jecxz
in
out
in
loope
in
jecxz
in
loop
in
out
in
in
in
call
loop
sti
loop
in
jecxz
in
loope
in
loop
in
out
in
loope
in
in
in
call
loop
inc
call
loop
imul
loop
in
in
loop
in
out
in
loop
in
in
in
out
in
call
loop
and
in
out
in
loop
in
loop
in
call
loop
cwtl
loope
in
call
loop
push
loop
xchg
out
in
call
loop
vpsrad
push
jmp
loop
test
loop
mov
loop
or
loop
mov
loop
mov
loop
aaa
in
in
call
loop
push
jecxz
in
out
in
in
in
in
in
out
in
loope
in
out
in
loope
in
in
in
out
in
in
in
in
in
out
in
in
in
jmp
loop
imul
loop
mov
out
in
out
in
jecxz
in
loop
in
jecxz
in
loop
in
loop
in
out
in
jmp
loop
xor
loop
out
loope
in
out
in
in
in
out
in
loope
in
out
in
call
loop
loopne
loop
jo
loop
mov
loop
shl
loop
push
loop
mov
loop
pop
in
in
call
loop
xchg
in
in
out
in
loop
in
jecxz
in
call
loop
arpl
loop
jecxz
loop
test
loop
in
jecxz
in
loop
in
call
loop
push
in
in
out
in
das
sbb
add
icebp
fs
mov
add
add
clc
mov
aad
jns
clc
test
add
inc
clc
add
int3
inc
clc
push
clc
adc
add
gs
sbb
cmp
jno
add
add
stos
add
add
add
add
adc
outsl
jb
add
jecxz
jnp
add
add
add
and
add
pop
mov
clc
mov
jl
add
loop
or
clc
inc
clc
mov
sbb
in
js
clc
sbb
adc
add
mov
clc
adc
in
inc
add
aaa
stos
dec
in
xor
add
imul
or
dec
es
pusha
add
aam
mov
clc
cmp
gs
adc
add
lods
and
add
add
dec
xchg
cmp
dec
inc
add
push
fisttpl
insl
adc
add
add
clc
sahf
adc
add
add
add
sar
push
bound
add
jg
clc
or
test
clc
xbegin
xchg
cmp
insl
nop
loop
adc
jge
clc
int
clc
stc
jecxz
mov
add
sub
add
jg
push
add
jle
int3
pusha
add
ret
clc
stos
sub
fldt
imul
repz
xchg
add
add
add
clc
push
dec
cltd
cld
jns
out
mov
add
add
adc
add
shl
clc
scas
movsl
clc
out
stos
imul
add
data16
add
add
add
mov
add
and
cmp
ds
clc
pop
popa
add
clc
jge
pop
pop
dec
test
int
add
aad
add
jle
inc
clc
mov
jbe
mov
add
clc
popf
nop
xchg
movsl
clc
sarb
dec
sbb
xchg
clc
cld
sbb
repz
int3
loopne
nop
psadbw
mull
clc
ret
clc
push
add
ss
push
clc
adc
add
rcr
lcall
jns
add
sbb
mov
jo
clc
push
iret
adc
add
jae
add
mov
clc
or
dec
stos
cmp
inc
clc
push
add
push
add
arpl
add
clc
dec
and
sub
add
clc
add
add
clc
inc
add
repz
popf
pop
ja
ret
clc
xabort
xor
jle
mov
pushf
test
cmp
clc
adc
add
mov
clc
cltd
push
out
inc
clc
cld
shrl
and
call
add
scas
sub
add
inc
add
stos
cmp
int3
stc
xchg
imul
add
jae
add
clc
add
add
mov
clc
nop
mov
add
shrl
test
mov
add
shrl
and
add
rcrl
add
lock
clc
in
mov
sbb
divb
add
add
mov
and
add
hlt
gs
daa
clc
cmpsb
clc
aaa
and
add
add
pop
lea
pop
fstpt
inc
clc
in
int3
pop
loop
mov
add
enter
inc
add
dec
in
xor
add
cmp
jnp
pop
std
repnz
cld
pop
imul
cltd
pusha
add
mov
clc
inc
add
cmp
clc
dec
aas
sbb
cwtl
call
dec
je
clc
insb
aaa
push
add
jnp
add
mov
clc
in
push
jecxz
xchg
dec
mov
add
pop
mov
push
and
mov
clc
jecxz
jecxz
test
je
add
aam
add
cmpsl
clc
dec
fwait
insl
mov
pop
clc
es
fwait
pop
mov
add
sub
clc
mov
repnz
push
sahf
imul
mov
pop
fsubrl
clc
add
add
clc
bound
add
clc
xchg
or
clc
push
pop
adc
xor
add
sbb
movsb
clc
dec
push
add
aam
ja
push
xchg
fdiv
lcall
add
add
xchg
push
mov
ja
add
std
push
call
add
xbegin
push
add
loope
xchg
jb
add
add
mov
clc
shrl
frstor
add
lcall
ds
arpl
add
adc
cmc
ljmp
add
add
adc
add
sbb
mov
es
cmp
add
mov
lods
push
add
pop
xbegin
clc
scas
mov
add
sub
fldcw
test
clc
push
add
xabort
in
jmp
add
push
add
sbb
push
pop
test
push
mov
mov
clc
jae
add
cmc
cmp
out
xor
add
adc
add
ss
clc
add
clc
stos
inc
add
pop
mov
das
out
push
add
add
clc
jg
add
dec
push
push
in
ljmp
push
clc
data16
inc
add
in
test
push
add
sub
add
inc
add
jecxz
cli
push
dec
push
insb
jns
clc
mov
cmp
cmp
jb
add
cmp
dec
bound
add
clc
repnz
sar
clc
xchg
test
ficoms
mov
repnz
inc
add
out
push
sub
cmp
mov
xchg
cmp
lcall
add
sbb
xor
add
cmp
dec
push
mov
in
push
push
mov
inc
add
xlat
js
clc
loop
test
push
pop
pushf
inc
clc
jmp
clc
inc
add
add
add
mov
lahf
aas
dec
testb
dec
xor
idiv
mov
clc
xabort
xabort
sbb
add
fistl
xchg
push
add
aas
gs
sarl
add
sbb
mov
mov
mov
clc
jle
lcall
adc
cld
or
push
scas
data16
incl
add
push
ljmp
push
pop
mov
add
lods
adc
add
clc
pop
xor
add
xor
filds
add
add
add
inc
clc
and
sbb
lcall
enter
add
xchg
mov
or
cli
cmp
fistpll
adc
cwtl
in
fs
shrl
push
pop
pop
xchg
std
daa
clc
sub
in
xchg
loop
mov
pop
js
icebp
aad
rcll
mov
mov
bound
add
clc
in
push
and
clc
es
cmp
xchg
xor
add
mov
leave
loopne
and
add
clc
enter
add
dec
jge
test
jg
mov
push
clc
ficomps
add
mov
and
add
add
cwtl
fdivr
cmpsb
clc
mov
sar
cmp
clc
ss
negl
pop
sub
jbe
mov
sbb
ds
adc
add
inc
clc
dec
out
or
clc
or
loop
ret
out
cmp
in
mov
add
add
clc
xor
add
inc
clc
lret
in
je
pop
ss
cli
or
clc
aaa
repz
add
pop
push
lahf
ja
mov
add
pop
and
rclb
add
add
add
add
add
clc
inc
add
nop
push
add
popa
add
sbb
mov
ds
add
clc
insb
push
add
addr16
in
sbb
sti
sbb
clc
insl
loopne
arpl
add
clc
fstps
clc
pusha
add
mov
xchg
push
stos
testl
clc
add
sar
mov
aad
nop
shl
xchg
mov
test
push
into
repz
clc
sbb
iret
arpl
add
add
add
clc
pop
pop
je
add
leave
loop
mov
clc
insb
loop
sbb
aam
jae
add
add
push
add
jnp
pop
sbb
add
add
push
clc
rol
clc
mov
dec
mov
mov
sub
clc
dec
dec
xchg
in
fmull
xchg
pop
adc
add
pop
lret
jo
add
in
pop
outsb
mov
jne
cmpsl
clc
out
fsubr
jb
add
clc
js
clc
in
repz
pusha
add
fsubs
add
sub
clc
pushl
pop
jo
add
push
jne
mov
dec
leave
stos
outsl
xchg
push
jno
add
clc
scas
popa
add
xbegin
aaa
dec
cld
pop
clc
leave
push
clc
imulb
fstp
enter
add
add
in
outsb
cmpsb
clc
ret
clc
push
add
xlat
mov
add
clc
not
jae
add
out
add
loop
xchg
js
xchg
mov
sub
add
add
add
pop
mov
das
stos
nop
or
mov
cmp
sar
jo
add
clc
mov
leave
push
clc
bnd
add
test
sar
clc
cmp
sbb
dec
out
inc
clc
stc
sub
imul
jno
add
mov
mov
gs
outsl
sub
imul
in
mov
shlb
or
aad
adc
add
add
cs
mov
add
shlb
mov
add
rcrl
cmpsb
clc
adc
add
shlb
add
jmp
add
cmpsb
clc
fmul
pop
mov
clc
rolb
out
pop
xor
add
or
cs
in
jb
add
push
add
xchg
xchg
cwtl
pop
lret
sub
std
imul
xchg
add
add
popa
add
pop
stc
inc
add
dec
cmpsl
clc
jecxz
lcall
and
add
cmp
add
xor
add
add
inc
clc
jl
push
cs
add
pop
xchg
xabort
je
clc
outsl
aad
add
and
add
xor
add
cmc
out
xor
add
cld
mov
add
add
clc
in
data16
push
clc
int3
dec
dec
mov
push
jp
repnz
jp
sar
add
daa
clc
arpl
add
fstps
shrb
xchg
sbb
mov
jne
push
add
or
ja
clc
clc
adc
push
add
or
add
sbb
add
xchg
push
cmc
sarb
mov
incb
add
aas
xchg
je
adc
or
add
and
add
adc
add
clc
dec
xchg
inc
add
and
add
add
jmp
cmp
push
pop
cltd
xchg
jns
stos
fwait
mov
add
sub
push
add
cmp
and
add
cli
push
in
mov
xchg
outsb
or
shlb
push
test
jg
clc
jnp
ljmp
clc
int3
push
daa
clc
sar
clc
xchg
insb
or
lods
inc
clc
push
add
fs
lods
push
lret
inc
add
scas
mov
stc
leave
out
icebp
inc
add
cwtl
dec
dec
outsb
aas
cmc
mov
add
push
jmp
adc
add
jle
add
add
add
jecxz
sbb
loopne
mov
test
dec
add
mov
dec
push
outsb
xchg
sub
dec
cmp
add
xchg
lret
mov
sub
clc
loop
ljmp
pop
dec
sar
dec
xchg
pop
mov
mov
inc
clc
fstenv
mov
jne
cmp
loope
bound
add
clc
sub
or
clc
mov
pop
sbb
leave
hlt
test
aam
jg
add
ret
clc
push
add
jns
xchg
fadd
clc
into
test
clc
fistps
xbegin
add
xchg
sarb
sahf
mov
add
mov
add
or
add
inc
add
mov
add
loop
sar
xor
add
add
sarb
mov
inc
add
fldt
clc
pop
movsl
clc
popa
add
lods
pop
sbb
imul
clc
loope
cmpsl
clc
cld
push
sub
push
add
jle
adc
add
clc
cmp
ja
sub
dec
int
cmp
movsb
clc
insb
inc
add
inc
add
push
mov
sahf
insb
dec
bound
add
xabort
loop
in
ja
or
xor
pop
xabort
clc
or
mov
cmp
push
jb
add
push
in
ja
xbegin
add
sub
add
push
xchg
lret
or
clc
shr
sub
pop
ja
jne
dec
mov
lret
push
pop
jl
clc
dec
jp
add
dec
xabort
push
jl
clc
aam
pop
mov
clc
sbb
repz
mov
jb
add
popa
add
sbb
add
jl
out
sti
cmc
enter
xor
add
add
lret
pop
je
add
cmp
xchg
mov
js
test
push
clc
push
xchg
ret
clc
das
ss
clc
add
add
in
cli
mov
test
std
or
adc
lods
clc
fimuls
sar
stos
push
clc
in
insb
push
popa
add
shlb
clc
and
add
clc
push
clc
in
xchg
dec
inc
clc
xchg
loope
and
add
fnstenv
pushf
inc
add
ret
lcall
clc
cmpsb
clc
pop
pushf
pop
test
clc
call
lods
xor
add
repnz
in
ss
inc
clc
in
outsl
jb
add
mov
clc
sahf
outsl
xor
pop
or
clc
sbb
sbb
stc
fmull
push
add
mov
jge
clc
in
fcoms
add
add
clc
fwait
sbb
enter
rcrl
adc
add
mov
clc
adc
add
jns
jae
add
clc
xchg
test
loop
in
sub
mov
mov
mov
add
inc
clc
dec
sbb
inc
add
mov
add
adc
push
clc
ret
ficompl
loope
popa
add
jl
add
sbb
mov
divl
es
sbb
add
sbb
insb
cltd
ud1
cmp
clc
cmp
es
popa
add
pop
inc
add
add
add
add
clc
cmc
jb
add
add
stos
sbb
fistpl
dec
sar
clc
push
clc
popa
add
notb
sahf
dec
mov
das
sub
push
add
pop
jnp
jmp
clc
adc
add
mov
nop
out
and
add
push
inc
add
sbb
mov
add
push
clc
inc
add
xor
add
clc
ja
out
mov
jo
add
clc
dec
iret
cmp
clc
mov
repz
dec
xchg
aam
clc
push
ljmp
mov
clc
leave
xchg
lods
push
clc
mov
xchg
jp
clc
jmp
mov
inc
add
imul
mov
sar
clc
nop
xchg
out
cmp
out
daa
clc
push
icebp
push
cmp
jns
xchg
push
jb
add
dec
inc
clc
inc
clc
push
jo
add
fs
add
add
xchg
or
clc
push
add
push
add
lcall
clc
mov
jb
add
sbb
sub
in
push
sub
push
push
push
call
test
jne
es
push
mov
and
xor
not
test
es
nop
nop
loop
pop
lea
xor
sub
xchg
es
es
ss
pop
add
movzbl
cs
push
or
and
push
mov
add
add
push
mov
push
push
call
push
call
xchg
lea
sub
mov
lock
lea
lock
ret
and
je
and
sub
test
nop
nop
nop
nop
nop
push
movl
push
push
je
mov
adc
test
jne
ret
andl
mov
lea
push
push
push
push
push
mov
push
lret
ljmp
clc
aaa
enter
clc
dec
test
ret
clc
cmp
clc
add
add
clc
mov
add
clc
dec
sbb
mov
xchg
jmp
xchg
inc
add
fs
pop
clc
inc
clc
scas
cmp
js
clc
jp
clc
sub
add
jmp
clc
pop
aam
incl
add
popf
xor
add
add
aaa
cmc
push
mov
add
call
add
push
add
xchg
inc
add
leave
xchg
mov
inc
clc
out
imul
clc
call
add
mov
test
fnstenv
mov
sbb
push
jecxz
imul
stos
repnz
out
push
scas
jmp
fs
adc
add
clc
in
imul
add
xbegin
inc
add
mov
aad
clc
cld
outsl
sbb
in
cltd
adc
add
dec
jg
sbb
push
sub
test
jp
loop
movsl
clc
enter
add
add
adc
add
lret
popf
mov
clc
pop
fnstsw
clc
pcmpgtd
call
xchg
sub
or
in
inc
add
fldenv
cmc
mov
sub
add
sub
xlat
nop
push
add
clc
and
mov
clc
scas
ret
mov
and
add
es
imul
add
adc
add
xchg
lock
cmpsb
clc
dec
cmpsl
clc
sbb
mov
dec
clc
pop
sbb
push
test
ret
clc
jno
add
add
jno
add
test
and
add
add
add
hlt
fdivrl
add
data16
and
fidivrl
add
popf
mov
clc
sub
fs
fdiv
pusha
add
mov
mov
or
lret
jecxz
aaa
lea
add
cltd
pop
pop
clc
and
add
sbb
add
ret
enter
add
popf
adc
add
add
adc
add
clc
clc
daa
clc
inc
add
cmp
clc
addr16
pop
lods
dec
sbb
clc
xchg
adc
sub
int3
adc
add
roll
clc
sbb
inc
clc
push
add
rcll
sbb
mov
mov
clc
std
fwait
int
pop
cmp
cli
in
and
clc
jmp
lods
sub
loope
leave
xchg
adc
add
xchg
pop
call
jmp
bound
add
add
jnp
aad
add
xor
lods
inc
clc
je
aaa
inc
clc
push
movsl
clc
push
sub
mov
dec
in
inc
clc
push
cmc
cmpsl
clc
jo
add
rclb
push
push
jnp
pop
out
mov
clc
push
jmp
cmpsb
clc
jb
add
mov
xor
add
outsl
pop
xor
lret
add
add
rcrl
add
bound
add
clc
mov
lock
add
add
add
leave
inc
clc
in
cld
out
and
add
add
js
out
data16
mov
add
pop
test
pusha
add
sub
aaa
push
add
jg
clc
sub
add
add
xor
add
add
in
jge
add
repnz
clc
sbb
hlt
bound
add
in
mov
lods
sbb
fistl
add
ljmp
iret
rcl
ja
add
add
mov
clc
insl
clc
add
push
aam
clc
jno
add
xor
add
cmp
mov
jp
imul
clc
insl
fs
push
xor
daa
clc
fmull
es
and
add
aad
leave
adc
cmp
mov
mov
mov
pop
hlt
cmp
adc
add
add
sbb
stos
popa
add
icebp
cmpsl
clc
inc
clc
fwait
xbegin
add
leave
and
cltd
adc
sbb
dec
and
dec
push
add
int3
mov
int3
mov
fadds
xchg
pop
mov
cmp
or
add
mov
popa
add
test
add
jmp
stos
mov
clc
imul
dec
sub
add
je
ljmp
jmp
clc
cmc
adc
add
add
inc
add
cmp
add
leave
or
dec
into
xchg
dec
iret
jl
out
out
mov
xchg
movsl
clc
adc
add
or
clc
xor
clc
jae
add
add
jnp
fnstsw
cmp
adc
shrl
jb
add
bound
add
pop
jb
add
mov
add
clc
pop
clc
inc
add
outsb
mov
add
in
inc
clc
sar
insb
add
add
mov
cmp
leave
faddl
add
sub
add
add
add
clc
lahf
or
xor
inc
add
xchg
rcrl
ret
adc
add
insl
and
add
arpl
add
clc
dec
lods
cmpsl
clc
or
ret
clc
inc
add
jne
inc
add
stc
pop
xchg
inc
clc
adc
add
clc
or
add
iret
push
mov
scas
lret
fidivrs
rcll
push
sbb
out
sti
mov
pop
jae
add
insb
ret
sti
lods
loopne
push
add
hlt
jno
add
add
ret
clc
lock
clc
sti
cmp
jmp
pop
mov
push
add
dec
movsb
clc
bound
add
shll
pop
clc
sahf
movsl
clc
add
add
imul
clc
mov
xchg
jl
cmp
movsl
clc
sub
or
jle
mov
bound
add
clc
cli
push
mov
sar
pop
mov
inc
add
pop
out
sbb
icebp
adc
add
cmp
lea
in
lods
lods
sub
pusha
add
jl
sub
sub
shlb
adc
add
add
in
js
add
loop
push
sar
lock
jge
cmpsb
clc
fsubrs
add
add
jle
repz
int
inc
add
je,pt
push
xor
add
inc
clc
jno
add
pop
xor
add
clc
mov
popf
test
push
enter
clc
or
leave
lods
das
sti
push
aas
sahf
daa
clc
and
popf
in
dec
leave
stos
bound
add
in
push
arpl
add
negb
clc
mov
cmp
add
mov
add
or
ffreep
clc
ja
clc
add
add
mov
test
or
add
nop
push
mov
sub
ja
dec
mov
add
dec
call
clc
add
fists
add
pop
xlat
cmp
add
add
js
clc
out
xabort
ds
insl
mov
adc
add
jmp
clc
and
clc
movsb
clc
bound
add
or
dec
and
add
ds
clc
in
mov
clc
cmp
repnz
add
add
popf
popa
add
xchg
insl
cmp
cmc
sti
out
add
add
clc
push
add
cmp
add
popf
jo
add
clc
dec
adc
add
std
mov
push
clc
enter
add
add
add
cmc
and
jnp
clc
test
cmp
cmp
xor
mov
lea
add
sti
shl
insb
sbb
clc
ja
and
clc
dec
lock
sub
inc
clc
xlat
xor
cmp
bound
add
clc
mov
lahf
jns
sub
sbb
testb
add
add
push
xchg
jnp
and
add
add
stc
xor
add
mov
push
add
fs
xlat
lret
enter
and
add
xor
add
push
and
scas
ret
add
or
add
add
add
inc
add
in
push
rcr
dec
ja
clc
dec
fiadds
add
mov
push
add
inc
add
pop
cmpsb
clc
xlat
pusha
add
push
xchg
test
in
xor
add
xlat
sbb
bound
add
incb
add
sbb
add
pusha
add
pop
iret
data16
aas
aam
and
add
lahf
add
inc
add
mov
mov
add
mov
in
xor
add
pop
sbb
adc
add
add
cmp
jmp
clc
push
dec
repz
repnz
clc
mov
add
mov
mov
mov
js
clc
fs
aas
jo
add
push
ss
pop
mov
scas
fwait
lods
xbegin
jns
clc
fsubs
mov
jle
adc
add
scas
xor
add
fldcw
mov
dec
xchg
cmc
mov
xor
xchg
repz
add
pop
shl
push
mov
clc
cmp
nop
pop
clc
dec
add
add
xlat
mov
sub
clc
scas
into
rol
clc
mov
bound
add
add
add
shrb
add
das
notl
add
add
pop
inc
clc
pop
test
fnstenv
add
jbe
mov
fwait
mov
test
repz
sbb
or
jne
add
cld
cmp
jg
add
icebp
imul
add
add
and
add
fldcw
into
dec
stc
gs
and
add
clc
mov
icebp
mov
add
data16
popf
sub
dec
testl
pop
push
clc
int3
or
cmp
xchg
fnclex
clc
dec
in
and
add
add
insb
fcoml
add
insb
push
enter
mov
repz
add
test
clc
jg
movsb
clc
cmp
js
add
mov
ss
push
add
popa
add
leave
mov
dec
sub
mov
leave
shlb
mov
fsubr
lahf
xor
add
or
clc
inc
add
sub
fidivs
add
push
push
dec
mov
stos
and
add
jge
fstpt
xor
add
pop
or
and
add
clc
lret
push
xor
clc
cmp
ljmp
xbegin
mov
xchg
leave
insl
movsb
clc
xabort
inc
add
neg
add
or
push
pushf
xchg
iret
dec
cmp
add
pop
clc
jne
lcall
mov
xrelease
cmp
sub
aad
cltd
syscall
clc
test
jmp
clc
sarl
out
sar
add
dec
mov
mov
xchg
aad
clc
mov
and
add
add
push
sub
scas
add
add
pop
xchg
sahf
out
lods
pop
cmp
imul
add
mov
or
jg
clc
fcomps
cwtl
mov
clc
call
dec
jo
add
std
fimull
adc
push
add
std
movsb
clc
fistpll
add
add
setns
cltd
iret
loopne
outsb
jl
jmp
ss
xor
add
adc
clc
mov
pop
jge
jb
add
int
sar
in
cld
sti
add
add
stc
lea
sbb
clc
call
test
cmp
add
clc
sbb
stos
push
add
lfs
imul
ljmp
icebp
cmpsb
clc
mov
test
lahf
sbb
data16
dec
stos
push
or
and
add
mov
pop
pop
or
add
cmp
fs
and
add
out
aaa
inc
add
jmp
add
adc
add
add
fwait
mov
adc
add
sbb
add
clc
cmp
push
add
mov
sti
insb
mov
add
mov
cmp
clc
or
add
clc
in
lock
clc
jnp
je
dec
pushf
or
cmp
aaa
lret
cmp
test
ss
pop
in
mov
adc
add
clc
negb
jne
xchg
test
clc
rcl
sbb
add
cs
add
push
lahf
cmp
jb
add
out
add
add
add
int3
pop
push
push
add
fwait
inc
add
ficompl
or
test
add
fwait
dec
sbb
clc
fwait
jge
pop
or
clc
jo
add
cmp
add
add
clc
test
xchg
adc
add
add
add
mov
add
add
inc
add
push
lret
clc
pop
add
add
and
pminsw
dec
fildll
movsl
clc
adc
lods
stc
add
and
add
xchg
out
xchg
xor
add
adc
add
lock
add
jge
shlb
add
jnp
add
hlt
addr16
lret
xabort
in
adc
add
sar
add
shlb
lret
jnp
xchg
jb
add
cmpsl
clc
js
clc
pop
clc
inc
clc
pop
lods
int3
loope
sbb
clc
mov
notb
mov
outsl
fxch
mov
testb
jb
add
push
cmp
fdivl
add
jp
outsb
ficomps
in
lret
call
mov
xchg
xchg
loopne
mov
adc
add
aas
jns
mov
clc
mov
sub
add
in
mov
cmp
cmp
add
inc
clc
and
adc
add
adc
clc
xchg
daa
clc
jno
add
add
push
add
je
in
mov
sar
clc
inc
clc
add
add
and
add
fsubs
clc
popf
mov
je
clc
cmp
add
jns
mov
cwtl
xchg
or
clc
xor
xchg
mov
mov
sub
mov
add
cmp
clc
in
sub
sbb
ljmp
cmp
sbb
jbe
mov
es
mov
clc
daa
clc
jecxz
xchg
jmp
add
inc
add
pushf
push
add
push
add
push
clc
xlat
jecxz
shrb
jp
sbb
clc
fcmovnbe
ds
add
sti
pop
push
add
leave
or
repz
int3
sar
or
sbb
inc
add
pop
xchg
out
int3
lcall
and
fst
sub
jl
push
enter
hlt
mov
add
mov
cmc
or
ljmp
mov
push
add
cli
push
add
shrl
add
out
cmp
inc
add
push
xor
add
jmp
mov
clc
scas
cmpsl
clc
lock
ret
clc
out
and
add
lcall
clc
stc
mov
shr
lea
jne
fldcw
sahf
aad
popa
add
inc
add
add
add
das
in
jb
add
clc
pop
mov
jne
clc
stos
mov
cwtl
push
mov
clc
mov
jae
add
clc
xor
add
push
sub
addps
xchg
dec
push
add
imul
mov
clc
inc
add
and
add
fimuls
add
clc
xor
add
call
jae
add
clc
jo
add
es
in
sahf
fsubl
mov
xor
add
clc
aam
xor
add
clc
pcmpgtw
sub
addr16
push
stc
pusha
add
mov
int3
ja
int3
fbstp
fstps
mov
out
pop
clc
out
push
clc
jmp
lret
push
mov
add
divl
add
lahf
fdivrl
xchg
repz
mov
pop
xchg
cmp
mov
clc
repnz
add
add
loopne
fwait
sbb
jecxz
inc
clc
insl
into
or
clc
addr16
ret
mov
bound
add
imul
xor
add
mov
int
clc
test
adc
add
add
jle
adc
sahf
lcall
sub
out
decb
lods
inc
clc
and
add
clc
scas
dec
xor
add
add
bound
add
add
dec
std
inc
clc
push
xchg
test
clc
or
jg
insl
sbb
aas
xchg
sbb
mov
clc
mov
add
mov
clc
fwait
in
icebp
jle
pop
enter
xor
add
sbb
push
jmp
pusha
add
pop
aam
jp
lock
clc
mov
add
jge
fiaddl
es
and
and
inc
add
push
add
shrl
clc
cmpsl
clc
mov
add
test
push
jle
add
dec
hlt
cmp
decl
pop
popf
jge
out
xor
add
and
add
idivb
add
jbe
fidivl
aaa
into
xor
clc
inc
add
stc
iret
imul
mov
inc
add
outsb
cmp
xlat
sub
and
add
popf
sub
and
xbegin
pop
and
or
cmp
pop
clc
hlt
lods
xor
add
clc
mov
add
jp
cmp
clc
ds
and
in
fst
xchg
stos
inc
clc
mov
jl
fdivs
and
xchg
inc
add
jmp
mov
sub
clc
push
lahf
fisttpll
add
push
push
add
sbb
add
xchg
mov
xchg
das
or
cmpsb
clc
aaa
out
fidivrs
xor
outsl
inc
add
dec
mov
add
pop
lock
cli
ljmp
loop
or
mov
add
mov
push
ret
clc
rcrl
inc
clc
pop
sub
leave
cli
xchg
data16
jp
inc
clc
out
jecxz
test
pop
sar
mov
pop
movsl
clc
xchg
lods
comiss
add
push
mov
into
xlat
js
xchg
jno
add
adc
clc
shl
clc
inc
add
cld
mov
mov
stos
fildl
movsb
clc
inc
clc
ss
adc
add
clc
jbe
dec
xchg
aam
lret
clc
test
repz
mov
cmp
mov
and
add
repz
clc
outsb
test
in
xabort
xchg
sub
add
sub
mov
mov
clc
dec
xor
add
pop
pop
mov
fsubl
clc
clc
loop
je
pop
pop
out
int
adc
add
insl
xor
add
add
je
clc
scas
cmp
jge
push
push
push
jns
pop
sbb
add
mov
mov
test
or
das
into
out
cmp
add
loope
push
gs
add
cmp
scas
es
push
rep
jnp
in
push
add
pop
cli
mov
cltd
arpl
add
clc
clc
cmp
clc
sbb
stc
sub
add
mov
adc
add
sub
xchg
jnp
adc
add
add
add
add
fcmove
jecxz
aaa
cs
jae
add
add
jbe
pop
jecxz
rclb
add
jg
clc
sar
cs
clc
dec
pop
xchg
frstor
add
clc
xchg
data16
dec
je
imul
icebp
xor
add
xchg
mov
adc
clc
mov
inc
clc
daa
clc
aas
call
cmp
add
clc
loope
and
add
clc
mov
dec
and
add
sti
jo
add
clc
leave
imul
xchg
sub
sbb
cmp
lahf
imul
add
or
clc
lock
add
clc
pop
clc
sar
clc
mov
xchg
mov
dec
es
scas
stos
repz
add
inc
clc
cmp
pop
push
stos
inc
add
fwait
jns
mov
stos
stc
fidivrl
test
nopl
clc
dec
imul
loope
push
sub
xor
add
jmp
je
lock
push
stc
add
adc
add
movsb
clc
popf
inc
add
loopne
repnz
test
mov
inc
add
test
repz
popf
lcall
sar
clc
mov
xchg
jne
clc
jmp
movsb
clc
push
add
ljmp
add
add
dec
sbb
aam
pushf
adc
add
mov
clc
and
mov
add
add
jp
cmp
or
add
scas
xlat
push
push
je
clc
ljmp
add
push
push
mov
jae
add
add
cmp
clc
add
add
bound
add
xchg
outsb
cmp
jmp
scas
sbb
xchg
cmp
xchg
xchg
pop
cmp
cmp
or
out
push
xor
add
jnp
sub
sahf
cmpsl
clc
aaa
in
bound
add
aas
jbe
push
mov
pop
clc
cmp
mov
xbegin
sar
jne
add
sahf
or
clc
in
xchg
add
add
rorl
lahf
stos
inc
clc
sub
and
add
or
or
out
test
clc
push
out
cmp
xor
add
stos
jnp
cmp
jp
inc
clc
ret
clc
mull
add
ss
mov
call
add
jo
add
sbb
xabort
jbe
clc
shl
mov
add
in
pop
mov
clc
lea
adc
add
xchg
scas
sbb
int
ret
jmp
hlt
cmpsl
clc
nop
mov
ret
sub
mov
adc
es
xor
add
push
adc
cwtl
fcompl
add
or
sub
add
add
add
adc
add
mov
or
add
sub
fsub
clc
ret
clc
pop
adc
add
in
lret
add
insl
cwtl
jecxz
xor
add
insl
and
add
mov
add
cld
pop
sbb
add
clc
jecxz
nop
cltd
lcall
clc
jmp
gs
das
xchg
je
ret
or
push
xor
add
repz
clc
mov
add
xchg
lret
out
insb
cmp
dec
pop
shlb
clc
pop
data16
sbb
dec
cli
mov
dec
and
add
and
and
add
mov
clc
lock
dec
adc
add
add
hlt
in
mov
add
add
add
adc
add
add
and
add
pop
mov
add
sbb
jl
xchg
loop
clc
dec
fmull
cmp
and
pop
clc
std
data16
aaa
mov
pusha
add
test
sarb
lea
add
ret
clc
adc
add
push
cltd
lret
jb
add
clc
lods
sbb
pop
cmc
pushf
lods
sbb
outsl
sub
mov
add
or
push
add
sarb
clc
sub
add
inc
add
int3
jns
push
add
pop
add
push
test
pop
repnz
std
je
clc
push
add
into
test
test
sbb
movsb
clc
insb
imul
js
clc
sti
mov
dec
loope
js
clc
push
add
add
add
lods
xchg
mov
outsb
lret
cs
rolb
add
je
inc
clc
cmp
mov
insl
rclb
add
clc
dec
mov
mov
fwait
mov
clc
cmp
stc
push
clc
out
imul
push
iret
jae
add
test
lods
mov
clc
mov
loopne
inc
clc
mov
pop
jmp
push
mov
xor
add
jg
xbegin
pop
clc
incb
ret
clc
fabs
clc
inc
clc
fidivs
or
clc
shl
clc
es
jle
in
test
mov
imul
test
fbld
add
clc
pop
cmp
mov
pop
cmpsb
clc
leave
push
fcmovb
clc
or
sar
cmp
or
add
mov
dec
inc
add
shrl
mov
movsb
clc
adc
add
js
clc
clc
cmp
clc
push
arpl
add
out
inc
add
and
inc
clc
lcall
add
fcoml
or
add
fs
and
add
clc
xchg
lods
mov
loopne
inc
add
jbe
clc
ret
cmp
clc
je
lcall
inc
add
xchg
and
add
jmp
and
jge
clc
aad
add
pop
inc
clc
clc
filds
outsb
mov
add
mov
sbb
clc
int3
xchg
inc
clc
movsb
clc
mov
clc
arpl
add
pop
clc
cmp
sar
clc
push
add
ja
mov
clc
lahf
mov
add
mov
ret
clc
adc
add
add
int3
cmpsb
clc
movlps
add
cmp
add
pop
jmp
mov
lahf
add
cmpsl
clc
fucom
clc
add
add
add
imul
clc
inc
clc
mov
add
int
clc
add
xchg
pop
outsb
sbb
add
rclb
mov
add
add
sub
fidivrs
into
add
xor
add
test
sahf
sub
add
add
aas
add
xchg
testb
clc
sub
add
fnsave
pop
or
test
in
pop
jae
add
sub
clc
and
data16
mov
clc
sahf
fstp
add
add
add
cmc
aam
add
dec
jmp
mulb
clc
mov
mov
ret
clc
lods
lods
data16
rcll
ja
in
dec
popa
add
mov
clc
iret
dec
lcall
add
cmp
add
arpl
add
inc
clc
add
add
cmp
sbb
mov
clc
or
clc
and
add
clc
loopne
adc
clc
cmp
addr16
cmp
cmp
add
imul
add
leave
scas
std
jo
add
es
leave
shll
jle
clc
lahf
and
add
adc
add
das
mov
insb
jg
mov
jne
inc
add
push
add
inc
add
int3
mov
add
jae
add
clc
pop
jns
clc
pop
push
rorl
or
cmp
fldt
mov
sub
add
jb
add
pop
clc
hlt
ret
sub
add
dec
push
sub
push
lods
std
mov
clc
push
int
add
mov
add
clc
arpl
add
add
ds
add
jo
add
mov
add
add
add
shl
clc
int3
inc
add
xchg
sbb
add
jmp
clc
jae
add
add
push
sahf
sbb
clc
mov
mov
clc
pop
pop
clc
sar
jmp
add
push
add
fxch
or
clc
push
mov
outsl
fwait
movsl
clc
jecxz
jp
std
add
add
pop
popa
add
mov
cmpsl
clc
xchg
pop
adc
add
add
in
xor
add
add
jle
xchg
adc
add
clc
mov
fcomip
mov
clc
fs
xor
add
clc
mov
and
mov
add
bound
add
sbb
pop
mov
clc
in
pop
inc
clc
adc
add
jne
clc
dec
lods
mov
call
sub
ret
clc
mov
leave
cmpsl
clc
inc
add
mov
enter
cmp
ds
int3
pop
jb
add
add
mov
roll
add
adc
add
clc
or
add
scas
in
cmp
lahf
xor
add
insl
repz
push
inc
add
scas
inc
add
fistl
add
bnd
add
jmp
clc
aam
jmp
jne
jp
clc
dec
adc
pop
jno
add
add
clc
mov
fmul
fs
lahf
das
mov
pop
xadd
adc
add
pop
clc
jbe
sub
add
add
cmp
dec
jne
leave
test
sahf
push
inc
clc
int3
push
add
cli
fs
sbb
clc
gs
jp
pop
sahf
push
add
push
clc
ss
push
add
jmp
add
outsl
shll
add
cmpsl
clc
jp
repz
lahf
pop
dec
clc
aas
popa
add
mov
add
sub
push
and
add
or
clc
mov
pop
clc
rolb
xlat
cmovg
add
cmp
sub
push
clc
sbb
push
jg
push
fisttps
into
scas
xchg
and
es
sahf
xor
add
lahf
or
sahf
pop
out
dec
mov
jmp
mov
push
fwait
in
add
add
fwait
test
mov
adc
add
mov
xchg
inc
clc
cmp
clc
cmp
sahf
mov
clc
adc
add
pop
leave
idivl
dec
jbe
push
clc
out
add
add
clc
pop
or
ret
clc
or
and
and
add
loopne
out
iret
push
xchg
dec
imul
or
mov
cmp
pop
shrb
imul
add
clc
push
mov
xchg
clc
mov
mov
mov
test
add
adc
add
clc
inc
clc
inc
add
mov
adc
mov
in
add
add
imul
cwtl
ljmp
clc
aam
stos
test
xor
add
cmpsb
clc
mov
clc
lcall
add
lock
push
push
mov
dec
insl
cltd
adc
add
dec
jmp
clc
and
fs
mov
clc
fsubrs
add
nop
mov
inc
add
cmc
imul
jnp
pushf
test
jnp
clc
push
add
cmp
scas
stc
bound
add
fcoms
add
inc
clc
and
add
call
in
repz
sbb
add
add
pushf
xbegin
jecxz
sbb
lods
sbb
clc
sbb
push
clc
mov
in
push
add
add
add
pop
adc
sub
add
add
out
aaa
mov
clc
pop
jae
add
xbegin
dec
jbe
push
add
loope
push
clc
mov
bound
add
pushf
xchg
jl
ret
mov
mov
clc
dec
inc
add
outsl
mov
cli
cli
cmp
clc
jbe
clc
outsb
mov
or
inc
add
call
clc
pop
popa
add
jns
push
clc
loope
push
or
addr16
jno
add
add
add
push
out
pop
shll
add
cs
lret
dec
push
add
daa
clc
inc
clc
pop
addr16
lock
push
clc
xor
add
clc
add
add
clc
insb
je
lods
pop
fisubrs
add
push
loopne
outsb
lock
out
sub
add
and
push
clc
push
into
in
inc
clc
shlb
iret
shl
clc
ss
add
jmp
add
fidivrs
xchg
mov
cmpsl
clc
call
xchg
sub
cmp
clc
arpl
add
dec
push
push
add
divl
add
mov
dec
dec
movsl
clc
mov
sub
mov
clc
inc
clc
clc
loopne
jnp
mov
sub
add
xchg
mull
clc
ljmp
jge
clc
xchg
stos
or
es
jl
clc
sahf
iret
rorl
aas
sbb
or
add
xlat
pop
push
add
addr16
fistpll
jl
cmp
cltd
arpl
add
clc
je
insl
imul
add
adc
add
movsl
clc
popf
pusha
add
pop
xchg
loope
pop
aam
mov
clc
insl
xor
add
popf
aaa
sub
mov
out
mov
clc
in
repz
mov
add
call
jbe
clc
sub
clc
lahf
inc
clc
hlt
xabort
nop
adc
je
cwtl
pop
sahf
and
add
add
clc
push
in
loope
mov
inc
clc
out
dec
out
sub
in
pop
fcmovbe
scas
xchg
push
sub
adc
add
in
dec
aas
leave
jne
int3
jns
add
xor
pop
pop
je
arpl
add
xor
add
out
xchg
and
adc
add
nop
pusha
add
fsubs
and
aaa
lahf
pop
clc
data16
out
push
test
repz
clc
pop
clc
in
xabort
clc
or
xchg
mov
fdivr
dec
sbb
test
sar
pushl
ss
sbb
cmp
rcl
mov
add
icebp
das
lcall
add
mov
out
xchg
ja
add
add
add
xchg
pusha
add
inc
add
cmp
add
or
xchg
mov
sub
add
push
sti
push
clc
insb
insb
testl
mov
inc
clc
inc
add
int3
and
add
int3
and
daa
clc
cmp
xchg
cmp
mov
clc
daa
clc
xchg
jecxz
mov
add
sub
clc
xchg
mov
push
add
sahf
push
inc
clc
push
add
adc
add
cmp
imul
mov
push
imul
mov
aas
sbb
add
mov
clc
es
loop
push
repnz
pushf
push
clc
clc
cli
cmp
or
add
mov
xor
add
sarl
clc
or
mov
addr16
pushl
cmp
add
dec
sbb
sar
push
jb
add
shlb
clc
inc
add
imul
clc
fwait
js
add
push
add
fcomps
add
sub
lcall
clc
push
pop
mov
pushf
test
mov
add
pop
mov
jae
add
add
inc
clc
data16
sar
fisubs
clc
mov
loopne
mov
clc
in
cmpsb
clc
fwait
out
inc
add
cmp
clc
jle
add
add
iret
rclb
clc
clc
jnp
add
ds
sar
test
adc
add
add
sub
add
into
xbegin
add
imul
out
popa
add
xor
clc
arpl
add
into
xabort
add
sub
clc
cld
jb
add
add
data16
jno
add
aad
add
fsub
clc
sbb
clc
push
pop
jne
mov
mov
imul
fld
clc
stc
jmp
clc
fcoml
add
add
adc
add
jmp
loopne
fnstcw
mov
push
add
and
add
test
mov
int
clc
sbb
sub
add
out
bound
add
ljmp
testl
adc
add
loopne
je
int
jecxz
mov
pop
cmp
push
add
mov
ja
cmp
ss
in
sub
jp
add
inc
clc
cmc
xor
add
or
add
lock
lahf
inc
clc
imul
dec
insb
lahf
leave
sub
and
add
clc
add
jns
sar
clc
xchg
xchg
sar
add
mov
or
fisttps
clc
lods
fistpll
sub
clc
ret
clc
mov
mov
jb
add
movsb
clc
cmpsl
clc
mov
mov
mov
cmp
clc
into
js
add
cld
add
mov
clc
std
mov
add
mov
jbe
cmpsb
clc
pop
fmull
mov
pop
adc
add
mov
add
and
je
test
mov
add
js
mov
pushf
cld
repz
js
clc
cmp
test
mov
or
push
add
sar
add
add
clc
cmp
add
lahf
js
jns
add
mov
adc
add
or
adc
add
add
cmp
clc
out
inc
add
dec
pop
xor
add
inc
clc
jmp
fnstcw
clc
dec
arpl
add
sbb
mov
clc
dec
sbb
add
pop
and
add
and
add
add
cmp
sub
add
jae
add
jne
clc
dec
adc
add
ret
clc
lods
jge
jl
clc
stc
sub
add
sub
sub
add
out
push
mov
pop
or
cmc
cmp
into
lock
lahf
xor
clc
sar
in
mov
jbe
clc
adc
add
clc
js
imul
adc
and
add
stos
notl
incl
clc
loop
mov
and
add
push
mov
clc
ret
clc
rclb
and
lahf
push
mov
clc
mov
clc
mov
or
add
adc
add
fnsave
push
pop
clc
outsl
stos
in
inc
clc
adc
add
clc
jns
aad
mov
or
test
gs
push
aad
int3
aam
ss
add
mov
add
shr
cmpsb
clc
xlat
sarl
outsl
lods
outsl
or
clc
nop
jmp
int3
and
add
jae
add
dec
mov
cmpsb
clc
inc
clc
jmp
clc
insl
mov
add
sbb
clc
dec
xor
enter
dec
mov
pop
cmp
nop
or
add
loop
sahf
insl
mov
add
lock
add
enter
add
inc
add
dec
in
xchg
loop
cmc
xlat
lea
jmp
pop
and
inc
clc
fadds
jo
add
jecxz
sub
jmp
xor
add
dec
add
add
dec
inc
add
test
add
push
dec
cmp
push
add
test
push
jno
add
lahf
push
sub
lret
bound
add
clc
cs
add
pop
sub
add
cmpsl
clc
arpl
add
push
inc
clc
cmc
and
ss
inc
add
fdivl
add
jle
add
push
add
ja
and
pop
cmp
xchg
cmp
test
pop
pop
ret
clc
imul
add
add
cmpsl
clc
mov
jge
popa
add
xlat
mov
add
add
data16
xor
add
mov
out
popa
add
and
add
cwtl
mov
push
add
daa
clc
adc
clc
stos
jg
inc
add
xor
add
cmp
push
and
add
jg
clc
jnp
inc
clc
js
adc
add
sub
add
test
xbegin
sbb
xchg
lahf
clc
ret
clc
pop
push
add
mov
adc
add
adc
add
clc
push
add
xchg
adc
push
add
loopne
test
pushf
xor
add
add
adc
add
add
outsl
sahf
gs
xor
out
lock
movsb
clc
in
mov
clc
mov
out
dec
popf
cs
inc
clc
add
add
mov
add
inc
add
aad
clc
cs
or
ljmp
clc
mov
sbb
add
loopne
mov
gs
dec
loope
and
es
inc
add
push
sbb
dec
sbb
clc
ret
clc
jo
add
clc
sbb
jecxz
cmp
sbb
push
pop
test
pop
mov
clc
mov
imul
imul
pop
cmp
int
adc
add
scas
push
mov
fcoml
add
push
add
jmp
add
jbe
xchg
xchg
lcall
and
add
pop
xchg
pmullw
clc
ja
pushf
push
dec
adc
ljmp
add
loopne
adc
add
sub
add
fs
xchg
std
outsb
clc
dec
pop
push
adc
add
ljmp
clc
or
mov
adc
add
pop
dec
sbb
add
clc
inc
clc
clc
ja
xchg
outsl
icebp
jmp
js
adc
add
mov
clc
xor
add
shl
clc
xor
inc
add
pop
scas
bound
add
clc
mov
add
es
ret
clc
lods
lods
add
add
or
add
add
add
sahf
or
dec
cmp
fs
xor
cmp
jb
add
mov
jmp
testb
in
push
cmp
pop
inc
clc
scas
test
push
clc
sbb
add
xchg
inc
clc
ror
push
add
fisubrl
pop
xabort
add
cmp
call
bound
add
xchg
xchg
rclb
add
sti
sbb
push
dec
ret
clc
addr16
inc
clc
push
add
js
add
insb
call
dec
scas
daa
clc
jnp
xbegin
outsl
cld
lcall
movsb
clc
push
add
xabort
imul
cli
cs
imul
add
repz
iret
mov
jo
add
push
and
inc
clc
push
cwtl
outsl
mov
add
add
add
test
bound
add
clc
push
add
push
add
xchg
or
cmp
xabort
push
xor
add
and
add
inc
clc
jb
add
addr16
push
pop
jecxz
into
sar
clc
mov
and
add
clc
cmp
clc
stos
jae
add
clc
adc
add
xchg
cmp
aam
popl
sub
xlat
repz
add
test
xchg
jne
sbb
inc
clc
dec
mov
add
leave
and
bound
add
fimuls
add
mov
cmpsb
clc
mov
pop
inc
add
cmc
cld
dec
push
add
daa
clc
xchg
inc
clc
je
add
lahf
mov
add
bound
add
and
add
or
clc
jo
add
clc
or
pop
add
add
add
sbb
cmp
daa
clc
jne
clc
mov
icebp
jae
add
leave
sub
clc
or
or
loopne
ds
fisubl
and
cmp
clc
xor
add
fisttpll
add
ret
dec
xchg
mov
add
mov
xchg
bound
add
add
mov
jle
lea
clc
loope
push
add
iret
loop
imul
clc
arpl
add
rcll
add
add
outsl
gs
push
pop
clc
sbb
lods
jge
sbb
shrb
pop
xlat
test
clc
js
dec
sar
repz
add
pop
push
add
mov
add
mov
sar
clc
pushf
sub
inc
clc
xor
add
add
sti
stos
insb
mov
add
iret
jp
clc
add
add
clc
add
add
jns
repz
jnp
clc
dec
lret
pop
sub
xchg
popf
mov
jno
add
clc
cmp
sub
push
fs
in
in
data16
in
adc
add
fildl
clc
nop
jns
jecxz
inc
clc
fcomps
clc
movsb
clc
sub
das
sub
xchg
sbb
clc
loop
jo
add
add
add
mov
rorb
sbb
clc
lea
xchg
lods
pop
movsb
clc
repnz
mov
add
sub
std
addr16
mov
rcrb
jo
add
add
data16
jo
add
sub
add
aam
clc
popf
addr16
ret
clc
mov
add
clc
loope
push
clc
mov
add
mov
clc
stos
sar
add
shrl
add
pusha
add
pand
xchg
gs
jge
inc
add
mov
clc
push
clc
jp
pop
clc
pop
in
lret
xor
add
cltd
and
add
in
cmp
bound
add
add
add
in
mov
repz
xor
add
add
dec
xchg
aaa
rorl
clc
sbb
jecxz
xchg
sahf
mov
mov
cmp
jp
stc
cmp
clc
xchg
adc
add
add
imul
repz
add
mov
mov
clc
add
add
add
movsb
clc
jae
add
and
add
clc
fimull
int3
add
add
push
add
test
adc
add
clc
filds
add
add
scas
and
add
ss
adc
add
out
hlt
cwtl
cmp
add
mov
ja
add
add
aaa
pushf
hlt
test
pop
sub
dec
and
clc
out
adc
popf
push
and
add
ret
test
sti
ret
clc
cmp
cmpsl
clc
sar
mov
add
jle
int3
lret
dec
rolb
clc
cmp
clc
push
add
dec
nop
int3
movsb
clc
xchg
negb
xchg
imul
add
sub
add
xchg
xbegin
pusha
add
pushf
pushf
xchg
popa
add
into
or
add
pop
popf
jge
add
ss
sub
clc
aas
jnp
pop
sbb
cmp
add
movsb
clc
aas
push
or
add
or
clc
addr16
pop
fnstsw
clc
push
or
add
mov
add
arpl
add
cmp
xchg
call
add
sub
clc
mov
fnstsw
shrb
sub
loope
pop
clc
test
mov
jne
inc
clc
popf
adc
add
cmp
arpl
add
clc
mov
sub
add
mov
rcrl
add
mov
imul
push
add
pop
stos
int3
push
add
cwtl
cmp
xchg
push
add
out
add
add
clc
jb
add
add
add
add
es
or
clc
sub
mov
pop
int3
mov
pop
scas
jp
clc
jb
add
ljmp
sub
clc
fsubr
es
sub
gs
jmp
add
add
jno
add
inc
add
jo
add
add
add
clc
mov
jne
dec
addr16
add
add
imul
add
out
es
loopne
pushf
xchg
stos
es
clc
aaa
add
add
add
fistps
lods
mov
inc
add
lock
test
clc
fsubr
mov
movsb
clc
inc
clc
pop
clc
jecxz
imul
clc
pop
out
into
ljmp
add
add
scas
fiaddl
add
cmpsl
clc
outsl
push
stos
cmp
sub
add
inc
clc
loope
mov
pop
stc
inc
clc
bswap
and
add
pushf
cmp
inc
add
mov
clc
fstpt
movsb
clc
cmc
dec
lahf
xchg
or
clc
enter
rcll
add
sbb
cmp
clc
test
in
push
outsb
xlat
or
data16
xor
cmp
clc
xchg
leave
iret
daa
clc
xchg
xchg
enter
scas
rcrb
cmp
adc
add
or
cli
je
add
aas
xchg
sub
lods
cmp
imul
aas
test
push
ljmp
clc
mov
sub
add
mov
clc
gs
out
add
add
and
add
mov
ss
jnp
clc
or
push
lret
mov
cs
pop
sbb
icebp
ret
clc
imul
enter
add
cmp
adc
add
cmp
xor
add
inc
clc
iret
add
add
clc
jmp
add
aam
add
cwtl
mov
add
mov
lret
and
add
gs
testl
inc
add
push
add
in
sub
dec
dec
push
add
mov
clc
inc
clc
loopne
mov
ja
jb
add
and
add
mov
dec
pop
ds
popa
add
outsl
jecxz
call
mov
ja
adc
push
xchg
outsl
lahf
adc
add
ss
cs
cmp
and
add
add
clc
inc
clc
mov
in
data16
sahf
es
movsb
clc
sahf
cmp
out
xor
add
clc
jp
mov
add
fbstp
add
and
add
sarl
jns
xor
add
daa
clc
push
add
xchg
add
jae
add
add
fmuls
js
ret
lock
add
sbb
jge
mov
clc
push
clc
and
add
dec
sub
ja
clc
add
add
mov
or
es
fistpll
arpl
add
jnp
jmp
mov
adc
add
add
jge
add
mov
add
and
notb
add
scas
sub
jnp
loop
cmp
xor
add
sub
cmp
sub
add
fucom
clc
xchg
popa
add
mov
add
xchg
sub
pop
cs
clc
jp
push
gs
and
add
add
mov
add
mov
add
xchg
std
xchg
pop
in
push
cmp
adc
add
xchg
push
add
dec
and
add
jecxz
iret
cmpsb
clc
cmp
push
add
mov
ja
je
cmpsb
clc
push
and
mov
clc
mov
add
add
clc
cmp
test
fimull
pop
clc
jbe
add
mov
fucom
clc
mov
mov
dec
lret
mov
add
in
or
int
clc
lcall
jns
xor
add
bound
add
test
repz
pop
rol
clc
clc
pop
cli
sub
inc
add
enter
push
cmp
add
add
fnsave
sbb
mov
clc
mov
fstpl
clc
sbb
jne
mov
add
add
in
repz
add
insb
jge
mov
cli
mov
mov
adc
add
sbb
xchg
in
adc
add
cltd
in
jb
in
xor
add
mov
adc
add
sbb
sbb
add
add
mov
add
jnp
scas
insb
push
clc
into
dec
rorb
jnp
outsl
xchg
or
cmp
dec
push
movsb
clc
scas
in
dec
dec
out
movsb
clc
mov
dec
cmp
mov
lret
dec
mov
imul
clc
cmp
imul
movsb
clc
xchg
and
add
pop
daa
clc
push
inc
clc
pop
push
out
or
add
adc
add
nop
push
add
xchg
std
mov
pop
mov
jmp
mov
mov
adc
mov
dec
dec
cmp
outsb
test
push
lcall
add
scas
jae
add
mov
mov
clc
dec
sar
and
add
jb
clc
pushf
outsl
arpl
add
mov
add
mov
add
lcall
add
rcll
jp
clc
cli
jns
fucomp
push
mov
add
add
add
mov
add
and
add
ja
xabort
cld
scas
push
scas
or
stc
pop
inc
add
inc
clc
dec
repz
clc
in
dec
push
out
pop
xadd
imul
dec
idivl
add
add
add
pop
xor
add
jnp
add
lahf
jns
clc
cmp
and
loop
sysexit
inc
clc
xor
add
add
cmp
clc
iret
dec
outsl
int
xor
add
lahf
jg
clc
jge
clc
mov
out
es
clc
mov
jns
out
stos
mov
add
pop
inc
add
mov
push
add
mov
js
clc
test
xbegin
mov
pop
fldt
add
jp
hlt
add
add
cmp
add
jb
add
or
and
lret
push
mov
dec
dec
hlt
jae
add
mov
add
fisubs
push
add
xor
add
add
mov
sbb
add
pop
mov
dec
cs
adc
clc
mov
ret
mov
leave
divl
add
clc
xchg
mov
add
mov
clc
jmp
add
es
inc
clc
out
sbb
add
add
dec
fucom
clc
clc
fwait
lret
nop
jo
add
clc
sar
stos
fs
mov
or
add
gs
pop
clc
mov
sti
mov
shll
clc
cmp
mov
add
inc
clc
adc
add
pop
cmp
clc
mov
pop
repnz
out
adc
add
add
xchg
pusha
add
std
stc
sahf
cwtl
bound
add
clc
nop
out
dec
fistpll
add
notl
add
scas
xchg
push
cmp
inc
add
incb
push
add
sbb
sub
imul
add
add
mov
or
hlt
mov
jle
clc
bound
add
or
clc
aas
lods
pop
cmp
add
dec
xor
clc
cmp
mov
lods
lods
jb
add
jbe
in
inc
clc
sbb
add
cs
lcall
mov
int
or
add
add
add
scas
lock
pop
lcall
push
xchg
and
add
clc
cmp
clc
bound
add
sar
lock
add
clc
fwait
jae
add
mov
nop
mov
mov
push
add
xlat
pop
aam
vmaxps
push
clc
testb
and
add
cltd
push
addr16
cwtl
jmp
das
add
add
pop
adc
add
add
add
clc
xor
clc
mov
cmp
pushf
inc
clc
xchg
jnp
popf
cmp
pop
movsl
clc
std
std
or
fisubs
clc
and
pop
int
xor
add
push
add
jb
add
test
scas
leave
dec
stos
pushf
lods
xchg
mov
in
jbe
add
add
data16
xchg
add
in
fdivrs
shll
sub
add
dec
outsl
mov
cmpsb
clc
fcomps
in
stos
mov
test
jge
fmull
and
add
clc
mov
add
inc
add
push
or
clc
fsubrl
sub
add
aad
pop
inc
clc
enter
not
pushf
pop
imul
and
add
add
data16
jle
add
add
add
pop
or
jg
sub
mov
add
stos
clc
sub
adc
ljmp
or
add
pushf
fwait
jmp
cltd
add
sbb
add
jecxz
inc
clc
popa
add
or
xchg
js
pop
test
add
add
clc
sbb
clc
scas
fadds
in
das
scas
mov
fbstp
add
clc
sar
mov
sar
clc
out
leave
cmp
push
jge
add
push
add
js
adc
add
xor
add
add
sbb
clc
bound
add
in
inc
add
sub
and
stos
push
add
push
add
cmp
fwait
mov
add
add
pop
or
ss
xbegin
lea
lea
mov
clc
ret
clc
mov
add
out
push
add
add
popa
add
push
add
push
aaa
sub
jo
add
clc
enter
lods
ds
out
sti
hlt
out
mov
inc
add
call
xchg
adc
add
clc
dec
adc
add
clc
sbb
pop
sub
and
mov
add
clc
or
fists
add
adc
add
aas
cmp
adc
add
out
test
mov
mov
outsl
std
fdivrl
sub
lods
and
add
clc
inc
clc
ficomps
and
push
cmp
clc
daa
clc
and
clc
loopne
mov
xor
add
inc
add
and
outsl
mov
push
add
add
add
add
out
cmovle
mov
std
adc
add
pop
add
add
daa
clc
jae
add
mov
cmp
add
add
out
mov
mov
or
add
movsb
clc
add
cltd
mov
add
add
clc
cwtl
cmpsl
clc
sbb
mov
clc
and
add
push
clc
cmp
clc
pop
jbe
jno
add
mov
bound
add
add
add
clc
lret
dec
sub
add
faddl
in
jne
adc
add
clc
mov
cmp
add
lcall
nop
jle
push
add
sbb
xor
add
pop
in
ret
cmp
push
test
fxch
and
add
shrl
xchg
or
pop
clc
cmpsb
clc
mov
add
mov
xor
gs
adc
add
mov
loope
mov
mov
xlat
jne
clc
cli
scas
xor
add
add
pop
xlat
rcrb
dec
into
bound
add
clc
adc
add
clc
pop
stc
hlt
ja
jno
add
rorl
inc
add
jne
and
add
add
lret
out
push
pop
fsub
clc
xchg
cmovl
mov
sar
lea
jnp
cmp
pop
pop
push
lcall
popf
lcall
clc
jg
leave
mov
sbb
add
cmp
inc
clc
ret
xor
mov
add
fcoms
add
sti
jmp
inc
add
dec
or
cld
push
lea
add
mov
mov
cmp
sahf
jnp
mov
das
stc
aad
clc
daa
clc
call
push
push
cmp
loop
sub
loopne
mov
jno
add
mov
inc
add
fiaddl
add
dec
sub
add
sub
mov
adc
add
int
clc
notl
clc
mov
in
fstl
pop
in
in
and
add
dec
jnp
push
clc
jl
out
add
cmp
add
push
ds
jmp
test
loop
lret
stos
cmp
gs
mov
add
jecxz
popf
divl
adc
add
pop
sbb
mov
clc
test
sbb
sub
clc
clc
sub
lods
sub
mov
iret
adc
std
outsl
sar
clc
adc
in
push
push
add
cmp
iret
sbb
ds
push
add
cmc
in
repnz
pop
jge
clc
movsb
clc
sbb
sub
shrl
add
jle
pop
xor
jo
add
outsl
cmp
mov
add
shrl
sbb
clc
loop
sub
mov
and
add
add
pop
clc
dec
xor
add
sti
js
push
clc
ficoml
jns
sbb
add
add
add
cld
scas
into
inc
add
pusha
add
jle
adc
stos
jo
add
clc
mov
cmp
clc
push
and
add
add
clc
mov
lods
fs
mov
cmp
cmp
pop
stc
xchg
bound
add
add
add
sub
clc
xchg
ss
push
add
mov
add
add
sar
mov
aam
add
add
sbb
jo
add
clc
jno
add
pop
clc
add
add
jl
lods
cmpsb
clc
jne
in
cmp
xor
add
inc
clc
dec
out
cli
or
clc
xchg
imul
add
clc
arpl
add
pop
gs
add
add
adc
add
mov
add
hlt
inc
add
out
jno
add
xor
jne
pop
clc
pop
movups
add
nop
cmp
pop
mov
sbb
add
sub
add
inc
add
scas
aaa
sahf
leave
mov
add
stc
ret
clc
jg
clc
inc
add
repnz
clc
jl
clc
pop
adc
add
clc
sub
add
idivl
call
xchg
addr16
repnz
jns
add
jmp
clc
pop
push
add
mov
clc
das
jo
add
add
cwtl
mov
add
ret
clc
dec
es
pop
xabort
push
add
outsl
dec
or
add
add
inc
clc
lret
push
xchg
mov
mov
cld
out
cmc
xchg
push
adc
add
pop
adc
clc
bound
add
add
fdivrl
jb
add
mov
cmpsb
clc
sub
clc
dec
ret
mov
mov
xor
add
sub
icebp
cmp
add
and
add
cltd
pop
mov
push
add
inc
add
nop
enter
pop
test
mov
add
lcall
adc
cmpsb
clc
add
add
fwait
dec
xor
add
inc
add
or
pop
test
in
xor
add
jp
inc
clc
pop
and
sbb
add
push
jno
add
jo
add
add
push
push
add
fistpll
in
dec
mov
roll
or
testb
enter
imul
out
in
aaa
xchg
lock
sbb
dec
xlat
movsb
clc
loopne
pop
pop
divb
add
gs
cld
loope
pop
mov
lcall
inc
clc
push
add
das
aad
addr16
push
mov
clc
dec
push
cmp
push
scas
cmp
xbegin
clc
sbb
aam
clc
aam
and
add
fldpi
push
pop
jnp
lcall
add
dec
out
pop
sub
add
add
add
sub
pop
adc
add
cmp
mov
pusha
add
and
add
add
out
xor
fs
jle
or
mov
mov
clc
call
add
cmpsl
clc
outsb
mov
jmp
clc
fcompl
rcll
or
clc
xor
scas
lret
test
pop
sbb
add
mov
sub
data16
xchg
enter
add
inc
add
and
add
loope
insb
movsb
clc
xchg
mov
xchg
add
inc
add
mov
or
and
add
cld
getsec
stos
pop
cmp
dec
out
clc
je
jmp
mov
sar
fidivrs
dec
or
mov
add
push
clc
jb
add
sbb
sar
clc
stos
clc
adc
add
das
test
add
cmp
jnp
in
int3
or
mov
xchg
cmp
clc
jg
clc
fmuls
add
movsb
clc
in
jecxz
out
daa
clc
adc
clc
sub
add
jge
push
clc
ret
clc
mov
cli
test
xbegin
add
or
int
lahf
mov
or
shll
add
fisttpll
add
jo
add
and
mov
hlt
push
int
add
stos
or
nop
insl
ret
jne
sbb
adc
add
clc
mov
clc
inc
add
clc
lcall
add
loop
push
sahf
or
sub
add
lock
sahf
sti
xor
stos
daa
clc
or
xchg
fsubrs
ret
clc
scas
loopne
push
stc
outsb
in
and
and
clc
insl
xor
add
xchg
xbegin
mov
add
fdivl
add
add
add
addr16
mov
sar
clc
pop
lods
fs
xbegin
xchg
sqrtps
add
sbb
clc
gs
ds
arpl
add
stos
es
adc
add
clc
sbb
adc
sarl
imul
xchg
cmp
fnstsw
clc
ret
clc
inc
add
mov
and
add
jecxz,pn
mov
mov
jo
add
clc
jl
lcall
add
mov
js
adc
add
cmp
clc
aam
xor
lods
loope
jge
or
add
sub
pop
dec
in
test
leave
sbb
xbegin
add
arpl
add
add
add
clc
cmpsl
clc
out
cmp
xabort
cmp
add
xchg
fcmovnbe
fcoml
adc
add
data16
dec
ret
gs
es
fwait
sub
imul
and
add
add
push
push
lods
xor
add
clc
mov
sub
add
arpl
add
clc
call
gs
dec
mov
add
pop
add
stc
sbb
clc
cltd
sar
into
repz
aad
ljmp
ffree
clc
test
and
out
mov
and
add
mov
sbb
jmp
ja
clc
or
mov
stos
push
add
mov
adc
add
sub
cmpsb
clc
dec
test
roll
add
stc
xor
add
add
clc
inc
add
test
js
clc
pop
fsub
clc
repz
add
add
mov
clc
cld
lahf
das
jo,pn
add
int3
fldl
add
daa
clc
gs
mov
add
pop
out
inc
clc
or
add
or
jg
clc
jb
add
clc
xabort
clc
das
jp
clc
hlt
mov
ljmp
movsl
clc
xor
add
or
add
dec
sub
lods
imul
xchg
cs
insl
fwait
xchg
in
pop
pop
fildl
inc
clc
sub
test
int3
es
jp
je
clc
mov
je
cmp
clc
jo
add
clc
repz
add
jmp
bound
add
or
sbb
int3
sub
clc
cmc
outsb
sbb
mov
clc
cmp
add
imul
bound
add
movsb
clc
adc
add
add
add
add
leave
inc
add
inc
add
sbb
adc
fwait
or
dec
and
add
insb
mov
clc
clc
push
loopne
lock
das
push
out
lret
pop
clc
movsl
clc
ljmp
sub
loopne
cmp
iret
cmpsl
clc
out
adc
clc
push
mov
inc
clc
pop
addr16
hlt
jg
dec
sub
cltd
mov
xor
add
aad
sbb
jp
into
cmpsl
clc
clc
or
jecxz
into
dec
cmp
stos
outsb
sub
add
mov
add
or
lods
fildl
add
mov
add
clc
dec
in
add
add
clc
jp
jle
jg
add
test
xchg
iret
scas
js
stos
clc
pusha
add
aam
clc
popf
inc
clc
jmp
clc
fistps
aaa
ficomps
adc
add
out
xchg
mov
add
ss
lahf
test
into
jae
add
add
clc
insb
hlt
and
add
cwtl
nop
clc
or
mov
cmp
in
loope,pt
pop
clc
ja
jg
notb
sbb
aas
xchg
mov
pop
jb
add
scas
shl
clc
jne
sub
clc
lcall
sbb
or
xchg
shlb
push
clc
xor
add
sub
das
mov
call
into
jnp
sar
xbegin
shrb
jg
xchg
adc
add
add
add
dec
pop
mov
clc
jo
add
adc
add
and
add
jnp
add
stos
ss
or
mov
rorl
push
add
sar
sar
add
lret
lcall
add
adc
add
shlb
test
fwait
inc
clc
mov
inc
clc
or
cmp
clc
xabort
push
clc
mov
push
clc
xor
add
cmp
cmpsl
clc
fisubs
clc
jecxz
and
cmc
in
push
xchg
or
inc
clc
jns
push
sbb
push
pop
adc
add
pusha
add
lock
lret
xchg
pop
sbb
xabort
clc
and
add
loope
push
add
mov
mov
clc
add
scas
jl
xchg
hlt
lods
lahf
pop
jo
add
add
loopne
popa
add
pop
hlt
out
add
add
movsl
clc
std
cwtl
pop
mov
add
repnz
sbb
popa
add
in
aaa
and
add
clc
movsl
clc
int3
sbb
clc
icebp
sar
lock
xor
add
cmp
das
test
cmp
outsb
sahf
mov
cld
mov
pop
dec
fwait
mov
clc
aas
mov
movsb
clc
in
pop
pop
add
in
fwait
pop
sar
add
pop
pop
pop
or
add
add
sub
das
xchg
lahf
add
xor
add
gs
outsb
lret
add
mov
add
insb
mov
pushf
stc
mov
clc
dec
mov
pop
sbb
data16
add
add
ds
je
jns
push
clc
fildll
fsubs
add
sub
imul
mov
add
sub
clc
jle
clc
int
in
sbb
clc
je
mov
cmp
xchg
mov
add
scas
and
add
clc
das
mov
add
in
imul
add
jae
add
push
add
clc
test
adc
mov
lahf
jp
lock
clc
out
adc
add
in
mov
sub
add
clc
jp
jp
jo
add
mov
clc
nop
loope
aas
into
mov
loope
and
test
jo
add
clc
add
add
add
add
mov
adc
sar
xchg
aad
fldt
mov
sub
jp
add
cmpsb
clc
and
add
clc
test
push
out
lret
add
loopne
xchg
int
lcall
clc
aaa
xchg
fs
jb
add
lods
lods
fsts
add
inc
clc
mov
add
xor
aas
ja
clc
pop
push
add
popa
add
scas
jb
add
imull
sti
xchg
sbb
clc
into
sahf
iret
sub
add
add
add
sub
adc
add
add
mov
mov
push
scas
insb
mov
inc
add
into
test
loopne
dec
add
mov
clc
shrl
mov
clc
dec
pop
push
push
js
cwtl
xchg
sbb
add
add
stos
mov
clc
pop
push
ja
clc
mov
add
add
jae
add
cmpsb
clc
pop
jge
xor
add
clc
mov
add
pushf
scas
js
pop
cld
into
dec
xchg
incl
cld
jae
add
xchg
sbb
clc
push
add
cs
dec
cmc
ljmp
shrl
add
sub
xor
add
int3
mov
xor
hlt
xchg
lock
in
mul
clc
std
mulb
add
leave
xchg
cmp
dec
in
notl
add
and
add
jecxz
adc
add
add
mov
out
cmp
add
popf
cmc
push
dec
or
ja
clc
aas
mov
xabort
add
call
pop
xchg
cmpsb
clc
jae
add
adc
in
mov
clc
ret
ja
add
dec
movsb
clc
push
test
clc
lahf
sub
incb
cli
xor
add
adc
xor
add
add
and
add
ficomps
xchg
cmp
clc
test
dec
imull
cmp
es
nop
cmp
push
add
dec
mov
cmp
or
add
add
add
add
pop
aas
dec
clc
fstl
add
sarb
hlt
add
add
xchg
pop
mov
jb
add
add
add
aas
sbb
xbegin
xchg
sbb
lcall
mov
add
inc
add
outsb
xor
add
mov
add
jnp
clc
cmp
add
dec
outsl
lret
and
add
pop
icebp
imul
pop
push
repnz
xbegin
clc
dec
mov
add
lods
sub
add
or
clc
cmp
sub
mov
jnp
push
add
ja
int3
jmp
pop
mov
jle
js
or
clc
in
cmp
clc
out
std
jns
clc
dec
inc
add
call
xlat
imul
clc
test
stos
ficoml
add
add
or
push
add
or
adc
in
mov
cmpsb
clc
clc
add
fisttpl
add
sbb
clc
and
pop
xchg
xor
add
or
add
clc
cli
mov
movsl
clc
xor
add
add
push
add
add
mov
mull
add
add
clc
xor
mov
mov
add
adc
add
or
clc
inc
clc
movsb
clc
add
repnz
clc
test
fwait
mov
je
inc
add
stos
fldenv
test
pop
in
cwtl
gs
fidivrl
mov
and
add
cwtl
fs
jno
add
add
jmp
push
add
jo
add
xchg
fiaddl
push
and
add
add
cltd
jle
scas
adc
add
add
or
xchg
xchg
sbb
xchg
cmp
pop
pushf
inc
clc
sub
add
clc
ret
mov
aaa
cmpsl
clc
out
jecxz
push
clc
out
pop
add
add
loop
mov
jp
adc
add
test
ss
ja
sbb
aaa
cmp
clc
es
loope
mov
add
adc
add
test
cld
daa
clc
adc
sub
aad
ljmp
add
pop
dec
inc
add
dec
mov
jmp
movsb
clc
cmp
and
add
cmp
pop
lret
xchg
mov
cmp
pop
fnstenv
rclb
clc
pop
lret
dec
clc
movsb
clc
push
aas
ret
clc
pop
mov
sarb
in
cmp
pop
sbb
sub
lcall
sar
inc
add
fs
pop
clc
jmp
fs
jo
add
repnz
mov
pop
scas
and
add
in
loop
mov
add
mov
and
add
cmp
clc
in
mov
add
jno
add
add
cltd
lret
jns
xlat
sbb
clc
mov
xlat
test
and
add
mov
inc
clc
pop
mov
cmpsl
clc
pop
pop
mov
push
add
enter
push
jno
add
test
jle
sbb
xor
add
sti
cltd
ljmp
clc
loop
jb
add
add
add
cmp
clc
jl
dec
outsl
cmp
add
jecxz
xlat
lods
pop
clc
xor
add
add
jb
add
add
mov
cmc
ret
clc
fisubrs
add
cmp
mov
je
aaa
or
pop
push
clc
adc
add
clc
es
loopne
push
out
iret
xor
add
clc
das
loopne
pop
movsb
clc
jne
cmp
sub
add
push
je
clc
insb
imul
clc
ss
add
mov
clc
push
add
sarb
lret
push
test
mov
cwtl
out
jecxz
sbb
daa
clc
xchg
cmp
add
adc
add
push
add
sar
sub
clc
pop
cli
popa
add
xor
jge
add
pop
movsl
clc
mov
jb
add
adc
fcoms
add
sbb
cmp
stos
mov
mov
cmp
leave
outsb
jbe
clc
stos
xor
cmp
mov
mov
adc
add
sar
test
mov
mov
xor
add
add
clc
dec
and
add
clc
fs
arpl
add
adc
add
add
add
pop
xor
add
add
add
add
aam
xchg
dec
sbb
clc
gs
hlt
inc
clc
ficomps
clc
mov
pushf
pop
clc
cmpsl
clc
inc
clc
pop
cmp
sub
jbe
std
or
clc
inc
clc
xlat
movsb
clc
dec
enter
add
add
add
cltd
leave
cltd
inc
add
data16
in
mov
add
test
das
shll
jge
mov
pop
inc
clc
lret
mov
clc
and
pop
jbe
into
stc
ljmp
movsl
clc
sbb
clc
fsubrs
add
in
sbb
fcom
imul
sbb
mov
xbegin
out
fisubs
add
and
jl
add
lods
fcomps
cmp
pop
clc
out
mov
add
jg
movsb
clc
push
push
mov
add
je
int3
pop
clc
pop
xchg
xor
add
stc
push
add
and
clc
testb
adc
clc
xor
add
jno
add
inc
add
cld
push
add
cmp
fwait
cld
add
sub
clc
sar
add
daa
clc
fldt
add
cmp
add
scas
out
scas
push
lods
dec
add
add
clc
jp
stos
xlat
sar
jp
and
add
in
sbb
add
clc
add
add
clc
mov
clc
js
ljmp
add
add
adc
cmp
clc
adc
outsl
cmpsb
clc
loopne
hlt
imul
cwtl
nop
fildl
mov
fidivl
inc
clc
mov
clc
nop
cmp
pusha
add
push
add
cmp
adc
jecxz
in
mov
xchg
aas
push
clc
daa
clc
es
mov
add
inc
clc
int
fistpl
add
sbb
add
repz
clc
daa
clc
cwtl
out
sbb
push
xor
add
adc
add
xchg
clc
mov
add
sbb
xor
clc
icebp
xchg
out
mov
add
xor
add
pop
xlat
int3
cli
loopne
or
loop
rcr
cmp
insb
jmp
and
add
clc
add
xchg
lret
loopne
xor
add
add
xor
add
or
lcall
nop
add
add
clc
rcr
fldenv
clc
cmpsb
clc
push
cmpsb
clc
mov
mov
clc
int
fsubl
push
clc
shrl
xchg
fcmovne
enter
dec
jnp
mov
add
dec
sbb
add
sub
mov
clc
insb
hlt
in
push
add
mov
mov
clc
mov
clc
mov
add
add
mov
add
mov
jmp
clc
xchg
shlb
clc
push
add
jne
and
add
mov
add
in
jbe
clc
mov
pop
xabort
mov
mov
imul
and
add
add
repnz
add
ds
xor
push
sahf
out
sub
adc
add
pop
jns
aam
add
faddp
clc
gs
jnp
clc
mov
movsl
clc
nop
lea
clc
stc
jb
add
clc
in
loop
cmc
aad
xor
add
mov
add
scas
testb
pop
sub
clc
fs
xchg
cmc
out
pop
lods
mov
cmc
xor
add
clc
mov
aam
bound
add
add
push
pop
pusha
add
into
inc
clc
cmp
mov
sub
adc
add
clc
and
add
aaa
rcll
jns
jge
pop
cmp
xchg
ss
clc
ret
add
mov
int3
jp
clc
std
fmul
jne
clc
push
mov
fs
sar
sbb
add
mov
xchg
mov
pop
loope
ja
add
lcall
sub
addr16
cwtl
xchg
repnz
stos
daa
clc
js
add
mov
add
pop
clc
mov
inc
add
mov
sub
clc
lods
icebp
sub
decb
sti
out
inc
add
in
mov
xchg
bound
add
inc
clc
stc
addr16
mov
clc
xlat
sti
clc
inc
add
jno
add
add
adc
add
add
mov
clc
inc
clc
xchg
cmc
in
xchg
sar
clc
aad
sbb
clc
outsl
mov
adc
add
push
add
pop
fsts
inc
clc
cli
adc
add
sbb
out
sub
add
mov
sub
mov
call
mov
xchg
fwait
xor
add
clc
or
clc
pop
dec
dec
adc
add
xor
fsubr
add
mov
xchg
icebp
or
shl
clc
xor
add
add
add
add
add
lock
add
fimuls
cltd
inc
clc
dec
xor
add
add
add
add
inc
add
aam
pop
int
push
add
clc
jmp
clc
fidivrl
push
mov
jbe
clc
add
icebp
sub
cmp
mov
clc
pop
popf
lret
push
shld
inc
clc
aaa
adc
mov
cs
mov
insl
insl
gs
add
add
rcll
add
out
add
add
clc
loop
pushf
mov
and
add
clc
inc
add
out
out
lret
xabort
clc
test
dec
daa
clc
loope
jge
push
repz
clc
ja
ljmp
in
inc
add
fcomp
test
lods
addr16
mov
repz
or
or
sar
push
add
cwtl
push
clc
std
clc
push
imul
push
mov
add
daa
clc
xchg
adc
add
add
mov
add
out
arpl
add
lahf
xabort
pop
sbb
filds
add
sbb
mov
clc
add
add
inc
clc
aaa
repz
fstps
add
test
mov
mov
mov
and
add
clc
xor
add
xor
clc
or
cltd
xchg
push
clc
jmp
clc
mov
mov
ljmp
lods
jne
xchg
dec
mov
in
push
clc
mov
add
add
dec
and
add
add
jmp
adc
add
add
clc
std
push
lods
clc
mov
clc
bound
add
ds
add
pop
daa
clc
sub
outsb
jg
repz
add
dec
hlt
xchg
or
cmp
jne
fwait
stos
xchg
dec
push
xchg
mov
cmp
add
add
mov
in
adc
add
add
xchg
and
add
addr16
fistpl
in
pop
push
xchg
pop
clc
test
dec
xor
add
add
cmp
and
add
and
cmp
lods
call
clc
in
mov
jmp
xchg
and
add
add
dec
lret
clc
sar
movsb
clc
pop
fistps
in
and
pop
mov
push
clc
push
lods
xor
add
add
add
clc
cmp
clc
fs
outsb
imull
jns
sbb
inc
clc
pop
std
and
add
lret
add
and
add
dec
je
clc
cmp
add
pop
mov
clc
decl
aad
push
xor
inc
add
in
or
sti
inc
add
pop
das
cmp
in
int3
shll
add
int3
pushf
add
add
jmp
add
cwtl
xabort
fwait
ret
clc
gs
pop
ds
add
repnz
fcom
fimuls
clc
mov
cmp
add
int3
add
add
mov
add
je
pusha
add
mov
call
cmp
mov
ss
clc
cmp
clc
xchg
in
aad
clc
mov
jb
add
clc
xabort
add
add
add
cwtl
adc
cmc
sbb
clc
ficomps
adc
add
jmp
out
mov
add
faddp
clc
ljmp
stc
cmp
xchg
imull
xchg
test
repnz
mov
cmp
push
add
sub
cmp
add
jmp
es
bound
add
clc
cmc
sar
pushf
xchg
cmp
out
mov
and
add
and
mov
jns
pop
push
add
jno
add
test
dec
popa
add
mov
xor
add
rorl
mov
add
inc
clc
jne
hlt
mov
clc
xlat
push
jae
add
clc
push
pop
and
add
add
mov
in
mov
add
push
ret
clc
cmp
sub
popf
jecxz
imul
add
hlt
mov
clc
rcrl
push
inc
clc
cmc
inc
clc
aam
clc
out
adc
add
jbe
cwtl
add
add
adc
add
int3
sahf
lret
pop
dec
pusha
add
fistpll
clc
nop
clc
mov
bound
add
clc
mov
repz
call
frstor
add
cmp
clc
mov
test
xor
jl
in
je
cmp
jp
ljmp
push
lret
cwtl
sub
add
std
loop
xlat
xabort
jns
and
stc
jae
add
fsubrp
cmpsl
clc
xchg
sbb
xor
add
cmp
ret
add
clc
dec
xor
add
mov
fcomps
add
add
add
int3
cmc
js
hlt
sub
sub
clc
mov
clc
dec
imul
pushf
clc
stos
std
pushf
jmp
in
scas
or
cmpsb
clc
scas
push
add
add
add
and
add
xor
add
mov
add
add
mov
mov
aaa
cmp
add
pushf
mov
data16
adc
add
adc
jnp
xchg
add
add
lods
xor
add
hlt
jbe
inc
clc
aaa
mov
clc
bound
add
clc
fsubl
roll
add
add
cmp
ds
imul
adc
add
push
lods
add
stc
out
xor
add
xchg
ret
add
jo
add
add
dec
nop
mov
add
mov
add
daa
clc
push
cmp
add
add
add
add
cli
aad
inc
clc
add
add
test
or
sarl
mov
push
mov
nop
jmp
ret
out
cmp
sbb
rclb
inc
inc
add
ret
xchg
int3
int
jle
clc
scas
clc
lahf
dec
adc
add
push
add
cmpsb
clc
scas
add
lea
add
and
add
and
cmp
add
sahf
in
pop
cmpsb
clc
cmp
and
jmp
aad
pop
out
adc
xor
pop
in
scas
loop
gs
push
adc
add
add
adc
add
cli
cmp
sbb
clc
adc
clc
stc
jg
add
push
cmc
iret
dec
and
xor
add
ss
jmp
clc
xchg
mov
mov
bound
add
add
clc
js
xor
add
clc
arpl
add
xchg
aas
mov
mov
clc
and
add
sbb
fs
dec
or
clc
cmp
add
pushf
xchg
adc
add
int3
sbb
adc
add
icebp
pop
pop
add
aaa
pop
inc
clc
sub
in
cmp
gs
enter
leave
js
cmp
clc
movsb
clc
cmp
stos
jge
outsl
pusha
add
mov
out
cltd
divb
pop
mov
xlat
jno
add
clc
jbe
xor
add
add
loope
insb
lahf
sar
clc
lret
cmp
add
insb
iret
dec
stos
js
add
into
mov
jge
add
sbb
aam
add
mov
add
movsb
clc
bound
add
in
cmp
add
cmp
jae
add
add
lock
jbe
add
sbb
add
dec
xbegin
add
jmp
jae
add
out
xchg
pop
movsb
clc
mov
dec
adc
adc
add
mov
and
inc
clc
pop
mov
fimull
clc
push
fldenv
dec
repnz
sub
adc
add
clc
adc
add
dec
sub
clc
ja
sbb
add
add
add
nop
jmp
add
add
es
int3
xor
add
push
test
mov
add
add
add
push
pop
jne
xchg
das
cwtl
scas
insb
fldenv
clc
mov
clc
iret
imulb
cmp
dec
and
add
clc
xor
clc
sub
add
clc
lret
or
movsb
clc
loopne
notl
add
jl
in
mov
pop
adc
add
add
nop
jmp
xchg
pop
jle
popa
add
pop
in
cmp
ljmp
add
cmp
add
stos
cli
loopne
ljmp
add
push
rcrl
scas
push
out
sub
add
adc
mov
mov
and
nop
jmp
or
inc
js
into
jp
js
es
das
rolb
mov
ljmp
add
add
push
aad
sbbb
xchg
imul
clc
cmc
gs
push
clc
gs
inc
clc
lahf
and
cmp
add
insb
aaa
in
addr16
mov
push
add
push
mov
xchg
ret
push
jnp
outsb
jnp
cmp
aam
cmp
clc
int
or
sbb
sbb
scas
sbb
sub
inc
add
add
add
add
add
sub
fmul
cmp
push
mov
push
mov
xchg
ret
jle
xlat
jnp
lods
pop
cmp
jmp
pop
leave
call
add
xor
cmp
push
clc
xor
pop
jle
clc
cmpsl
clc
sti
jle
clc
push
insl
pushf
bound
add
je
clc
jno
add
outsb
mov
clc
stos
lcall
pop
nop
jmp
icebp
jne
add
adcb
inc
clc
push
inc
add
pop
mov
add
add
lock
push
clc
dec
xabort
adc
add
clc
es
pop
or
das
cmpsl
clc
aaa
dec
and
add
clc
add
add
xchg
mov
add
mov
nop
jmp
js
ret
bound
clc
xchg
dec
loop
fisubrl
insb
jns
clc
inc
add
pop
pushf
jo
add
cltd
sub
clc
aam
add
adc
add
cld
out
hlt
and
cmpsb
clc
mov
mov
push
dec
cmp
insl
cmp
clc
daa
clc
gs
mov
pop
ret
clc
out
inc
add
push
clc
cmp
and
or
nop
arpl
add
in
dec
sub
add
or
push
clc
mov
cmp
lock
pop
sub
add
push
push
jnp
push
nop
jbe
push
add
cmpsb
clc
xor
add
pop
pop
mov
outsl
lods
sahf
pop
das
lcall
call
nop
jmp
xchg
pop
add
clc
xchg
repz
clc
aad
clc
fimuls
jg
add
add
cmpsl
and
add
pop
je
clc
mov
add
shlb
je
fwait
jb
add
enter
jnp
xabort
and
cmp
jl,pt
clc
pop
hlt
fbld
add
fcmovnbe
xor
add
fwait
mov
push
outsb
das
gs
insb
sbb
add
clc
or
outsl
xabort
add
pop
nop
imul
clc
or
ds
add
cmp
testl
dec
pushf
xbegin
clc
popf
sar
add
mov
scas
push
add
imul
add
icebp
stc
frstor
jmp
mov
pop
xor
add
testl
and
add
clc
idivb
push
in
aam
jmp
sbb
clc
mov
pop
mov
insb
xor
add
fiaddl
daa
clc
shrb
clc
cmp
clc
clc
adc
add
clc
in
or
loope
and
imul
cmpsl
clc
cltd
inc
add
adc
add
dec
xchg
fiadds
repz
dec
inc
add
aad
xbegin
lock
clc
or
jns
sbb
cmp
arpl
add
add
add
cmp
sti
out
test
popa
nop
jmp
add
xchg
out
add
clc
ds
fwait
mov
add
pop
adc
push
add
bound
add
and
add
add
std
stc
jle
clc
mov
push
clc
jmp
clc
jmp
mov
mov
add
xchg
imul
mov
clc
and
add
add
add
stos
dec
and
add
add
mov
fstpl
xor
add
dec
sub
adc
add
ret
clc
mov
repz
add
inc
clc
aas
cmpsl
clc
mov
loopne
cltd
inc
clc
loop
xabort
repz
shl
clc
pop
fidivrs
sar
jbe
clc
jge
add
cmp
repnz
add
sbb
clc
cmp
clc
cmpsb
clc
xchg
jmp
lea
nop
jmp
add
sbb
pop
add
add
add
cmp
mov
dec
pop
movsl
clc
push
popf
outsl
xchg
clc
ret
add
cmp
clc
notl
add
add
add
add
mov
inc
add
int
mov
mov
clc
test
add
inc
clc
out
in
and
add
add
clc
shlb
adc
add
add
out
add
add
clc
inc
add
gs
in
call
mov
xchg
ret
jge
pop
inc
fiaddl
add
test
data16
lret
add
clc
push
add
frstor
add
imul
cwtl
jge
cmc
jle
clc
aam
sar
out
and
lret
push
clc
push
sub
out
cmpsl
jge
adc
xor
add
jp
mov
add
add
clc
outsl
in
jns
dec
dec
pop
inc
add
jo
add
lret
scas
mov
cmpsl
clc
xchg
cmpsl
clc
or
inc
clc
ljmp
rcll
add
dec
sbb
aad
pusha
add
inc
clc
into
decl
pop
push
inc
add
js
push
add
cmpsb
clc
mov
jmp
jnp
jae
aad
bound
add
add
jmp
fcompl
dec
es
fcmove
or
jle
daa
clc
lods
inc
add
mov
or
fs
outsb
xor
clc
cli
pop
test
add
sub
add
clc
clc
dec
mov
sar
or
dec
or
test
mov
add
in
stc
sub
add
cld
xchg
repnz
mov
clc
pop
push
add
repz
scas
in
repnz
push
lock
pushf
scas
inc
add
jg
jo
add
clc
mov
add
nop
jmp
aad
in
cmp
clc
lcall
out
jno
add
addr16
fmull
jp
pop
int
insl
cmp
clc
pushf
insl
sbb
mov
in
mov
clc
dec
jmp
cwtl
int3
vcvtps2pd
add
add
ret
push
popa
pop
ret
clc
js
sub
xchg
mov
clc
cmp
add
push
clc
sahf
mov
jge
das
lods
xor
push
clc
into
and
lea
aam
mov
add
sbb
in
iret
inc
clc
imull
add
push
or
test
push
mov
xchg
ret
push
jae
push
iret
cmp
mov
clc
mov
mov
adc
add
add
ret
clc
dec
mov
ds
or
push
add
dec
add
jnp
xor
add
push
add
sub
add
adc
into
nop
mov
enter
add
aad
lods
out
rol
add
insl
je
in
and
add
insl
test
add
mov
jecxz
dec
or
xchg
test
aas
mov
add
mov
add
jge
cmpsl
clc
je
cli
xor
mov
clc
lret
pop
cmp
clc
jno
add
cmp
add
scas
sarb
insb
mov
les
nop
jmp
push
je
jnp
jne
clc
idivl
adc
shl
clc
push
es
adc
add
add
mov
clc
test
add
dec
out
movsl
clc
pop
clc
push
add
pop
pushf
jp
add
rcl
or
add
nop
jmp
pop
inc
push
jle
sahf
pop
inc
clc
fmulp
ret
clc
jne
mov
add
fwait
cmp
clc
or
clc
dec
and
add
pop
lods
stos
mov
dec
pop
jmp
add
mov
call
nop
jmp
pop
out
ret
cmp
push
add
add
push
sbb
mov
xor
clc
rclb
clc
xlat
ljmp
add
xchg
dec
lcall
clc
int
xor
arpl
add
cmp
iret
sbb
fstps
dec
nop
jmp
aad
out
add
add
xchg
inc
add
push
out
add
add
add
push
mov
nop
jmp
add
lods
and
add
aam
clc
notl
dec
mov
jmp
mov
or
into
in
sbb
repnz
add
add
js
clc
popf
inc
add
sbb
add
mov
scas
pop
adc
add
mov
pop
nop
jmp
movsl
pop
push
xchg
ret
pop
and
clc
xchg
inc
clc
sar
fwait
bound
add
or
add
mov
and
add
mov
add
je
xadd
xor
mov
push
clc
sub
add
dec
sub
popa
add
dec
xor
add
add
adc
clc
ret
and
mov
sub
clc
inc
add
mov
add
clc
sbb
mov
clc
mov
mov
add
sbb
clc
add
faddl
clc
inc
clc
jb
add
clc
cmpsb
clc
jge
mov
push
mov
xchg
ret
add
stos
scas
iret
sbb
push
add
repnz
push
xlat
test
xabort
add
mov
test
cwtl
jbe
cmp
clc
call
insb
mov
jmp
out
add
aad
pop
or
lods
out
outsb
fld
clc
dec
or
add
xlat
je
lcall
add
scas
test
pushf
out
or
add
dec
out
loopne
adc
add
lods
cmp
jl
in
ja
clc
sbb
ret
jns
add
pushf
jb
add
in
sub
add
xabort
popa
add
mov
aad
cmp
clc
loope
mov
loop
dec
jecxz
and
shlb
sub
clc
shl
clc
clc
inc
clc
stc
decl
jg
inc
add
jle
mov
xchg
pop
clc
roll
add
add
cmpsl
clc
testb
add
clc
and
pop
clc
fdivr
cltd
stc
mov
cmp
xor
add
clc
test
dec
sar
clc
nop
inc
add
fistps
add
rcrl
clc
inc
clc
cmp
pop
push
mov
xchg
ret
add
clc
mov
add
std
cmp
testl
roll
jecxz
mov
inc
clc
jae
add
add
mov
pusha
add
mov
clc
and
xchg
enter
cmp
out
ljmp
add
and
add
aam
push
xchg
jns
mov
ss
xchg
int3
dec
inc
clc
bnd
clc
cld
stos
pop
lcall
add
adc
add
add
sub
jl
clc
mov
clc
fucompp
stc
addr16
adc
add
clc
sar
jnp
lcall
aad
clc
nop
xlat
push
iret
ret
add
bound
add
clc
inc
clc
or
and
add
add
mov
xchg
jmp
je
fmul
fidivs
mov
xchg
int
add
daa
clc
or
clc
mov
add
cld
js
ss
aas
or
insb
jge
clc
cmp
fwait
nop
mov
popa
add
jne
clc
cmc
sar
jle
add
jb
add
clc
sbb
int
cmp
xor
inc
add
js
je
std
mov
pop
add
nop
jmp
push
jne
andb
add
add
cmpsb
clc
or
jge
add
inc
add
mov
add
xchg
xor
add
clc
jp
addr16
or
add
or
es
xchg
mov
push
add
scas
jg
int
mov
mov
out
jecxz
sar
add
and
add
test
rorl
jnp
add
cmp
add
add
or
add
nop
jmp
pop
xchg
push
mov
aas
adc
and
xchg
insb
call
clc
addr16
jmp
fildll
dec
cmp
clc
mov
test
mov
add
inc
add
and
and
add
add
sub
jge
nop
jmp
add
xor
cli
fistl
add
js
mov
inc
clc
add
cmp
add
inc
clc
mov
rorb
out
inc
clc
data16
cmp
mov
clc
dec
mov
add
jo
add
clc
ret
clc
sub
leave
pusha
add
push
clc
jmp
add
dec
and
add
clc
cmp
fcmove
xchg
cmp
clc
sbb
clc
cmp
xchg
pop
decl
mov
adc
jmp
sbb
push
sbb
jnp
pushf
addr16
mov
add
std
mov
mov
or
sub
clc
outsb
adc
clc
sub
xabort
add
fbld
loopne
inc
add
jle
clc
xor
jb
add
aam
nop
or
add
mov
add
outsb
cli
out
divb
add
inc
clc
xchg
xor
add
push
fld1
mov
add
add
add
adc
add
cli
push
inc
clc
jno
add
clc
cmp
add
clc
add
add
clc
cmpsl
clc
sar
push
cmp
xlat
stos
sub
clc
pop
int3
jbe
clc
jmp
add
pusha
add
pop
mov
clc
mov
test
cpuid
clc
mov
add
xchg
ret
je
add
pop
clc
js
add
jnp
outsl
xor
hlt
into
test
js
sbb
jmp
add
add
pop
jge
clc
testl
xbegin
mov
sub
clc
fs
mov
xor
push
mov
xchg
ret
lods
aad
adc
add
clc
mov
mov
es
and
add
pop
clc
ret
clc
jbe
mov
mov
nop
jmp
rclb
jne
mov
rcrl
sti
scas
push
add
rcrl
xor
pop
dec
xor
shll
add
mov
and
inc
add
jge
imul
nop
jmp
inc
jle
jne
mov
mov
clc
adc
add
cmp
cmp
clc
dec
jno
add
in
lea
add
std
pop
popf
negl
movzwl
nop
jmp
ret
add
adc
add
mov
jge
add
jae
aad
sub
mov
clc
pop
mov
out
dec
or
imul
sub
icebp
push
add
leave
push
mov
xor
add
mov
fs
lret
cmp
or
add
clc
xchg
rcll
and
mov
add
in
jo
add
call
clc
jmp
add
loop
fwait
cmp
clc
push
push
ja
add
xchg
out
fs
pop
push
pop
push
mov
xchg
ret
jle
xchg
mov
xor
clc
sub
xchg
adc
add
add
clc
xchg
loopne
cld
insb
test
aad
clc
fnstsw
add
inc
clc
mov
es
mov
call
js
push
clc
sub
add
pop
push
jmp
xor
jge
mov
add
insl
adc
add
nop
pop
sub
jnp
clc
mov
jb
add
addr16
push
pop
push
add
gs
mov
cmp
sub
clc
loope
xor
add
pop
out
mov
bound
add
and
add
sbb
jmp
lods
add
sbb
jnp
jle
clc
xchg
stc
pop
fists
add
add
clc
test
add
add
loope
or
cli
and
mov
fldt
clc
dec
xor
or
shl
pop
inc
add
dec
scas
leave
je
jmp
xor
fisttps
in
cmp
clc
push
clc
pop
imul
imul
leave
dec
cltd
mov
add
scas
jp
lret
push
mov
clc
into
sar
enter
mov
clc
xor
add
clc
sar
push
movsb
clc
mov
add
inc
clc
mov
sbb
pop
xchg
int3
cmpsl
clc
fldenv
add
sbb
dec
inc
add
das
testb
add
adc
add
sbb
stc
push
ret
clc
data16
sbb
scas
push
mov
add
xchg
mov
push
sar
sub
clc
dec
jo
add
push
dec
enter
cmpsb
clc
mov
jns
cmpsl
clc
xchg
pop
je
pop
syscall
clc
adc
mov
sub
dec
clc
sub
pop
xor
lcall
nop
sub
test
bnd
add
mov
add
cmp
xor
add
cmp
mov
call
nop
jmp
lods
jae
mov
clc
not
call
push
imul
mov
sbb
hlt
scas
pop
sub
mov
mov
inc
add
jle
fwait
mov
daa
clc
mov
aaa
sub
outsb
xchg
or
fldl
cmp
clc
cmp
inc
clc
cmp
push
add
sub
clc
test
add
sbb
add
sbb
outsb
mov
clc
mov
lock
clc
clc
and
add
add
nop
jmp
pop
ret
push
add
enter
lea
sbb
add
add
out
xchg
lahf
and
test
movsl
clc
ljmp
add
add
lock
add
add
add
into
push
inc
add
scas
pop
pop
in
ret
clc
and
add
clc
ja
push
lods
sub
add
cli
cmp
clc
sbb
add
add
clc
dec
insl
movsl
clc
js
pop
mov
jns
jnp
clc
js
add
xor
add
mov
clc
mov
cmpsl
clc
cmp
sbb
repnz
cmp
push
aam
xchg
mov
add
add
iret
pop
in
sub
add
cmpsb
clc
mov
clc
fisubrl
icebp
inc
add
cmp
add
add
add
clc
call
mov
xchg
ret
out
jnp
mov
pusha
add
pop
mov
pop
xchg
leave
cmp
cltd
sbb
cmp
xchg
add
lret
sbb
adc
add
cmp
cmp
clc
adc
add
push
add
add
out
push
xor
add
mov
insl
fnstsw
push
clc
push
dec
clc
imul
add
jecxz
adc
add
add
lret
addr16
add
add
int
out
loopne
insb
call
cmp
jno
add
add
add
cmp
aad
clc
adc
add
sub
nop
jmp
icebp
or
sub
popa
add
mov
sbb
sub
add
lods
aad
xchg
rcrb
push
add
push
mov
xchg
ret
add
bnd
clc
mov
xor
fnstenv
add
pushf
mov
scas
xchg
jns
clc
cli
mov
clc
jge
add
jp
clc
pop
pop
and
add
clc
dec
sti
add
cmp
add
push
fisttpl
cmp
push
mov
add
add
or
in
scas
mov
js
pop
inc
clc
inc
clc
push
inc
clc
sub
push
nop
jmp
and
js
cmpb
sar
pushf
adc
add
jmp
sub
js
cmpsl
clc
sub
add
push
fldcw
jnp
pop
notb
in
push
mov
mov
aas
inc
clc
mov
jmp
pop
add
or
mov
imul
lahf
scas
cli
lahf
mov
data16
movsb
clc
into
mov
aas
pop
in
sahf
out
lcall
jg
pop
clc
stos
sub
testb
add
adc
add
xor
add
clc
xchg
pop
adc
add
or
mov
add
faddl
clc
sar
lret
clc
movzwl
add
clc
jp
loop
stos
and
add
cmp
add
jbe
and
add
push
add
jns
clc
dec
sub
clc
repnz
xchg
xor
add
ljmp
add
push
jnp
push
add
push
jecxz
push
mov
xchg
ret
ret
lret
nop
push
add
and
add
aam
add
dec
sub
mov
test
xor
add
ror
ds
jmp
clc
adc
clc
fmulp
jne
sub
je
incl
jne
out
icebp
xor
sub
jbe
push
add
in
insl
stc
pop
fimull
rorb
enter
jmp
sub
ds
dec
js
clc
call
pop
cmp
test
call
add
stos
push
add
add
add
add
shll
imull
outsl
xchg
nop
jg
clc
cmp
jno
add
sbb
add
iret
out
shll
sbb
add
loop
xchg
aaa
inc
add
push
add
sar
test
out
leave
pushl
rclb
add
mov
pop
es
aam
jnp
dec
add
add
clc
out
repnz
add
push
add
popf
xor
add
popf
jp
add
jge
jle
jge
adc
popf
sar
fs
decl
test
jmp
cli
add
mov
add
mov
jne
nop
jmp
add
popa
pushf
fs
add
add
call
jnp
add
mov
out
or
push
add
mov
xabort
clc
jb
add
sub
add
mov
xchg
mov
inc
add
xor
add
jo
add
jnp
std
lea
add
cmp
add
add
adc
add
clc
add
add
xchg
jp
int
cmp
add
xor
sub
xchg
and
add
add
cmpsb
clc
mov
add
dec
cmpsb
clc
and
add
add
jae
add
in
pop
adc
add
mov
sar
ret
clc
adc
add
clc
mov
cld
mov
insb
adc
add
stos
mov
clc
cld
fs
jecxz
lret
xor
add
imul
jge,pt
clc
pop
sti
adc
add
cmpsl
clc
add
add
incl
xor
add
xchg
add
sbb
or
add
pop
pop
mov
mov
sub
arpl
add
dec
ret
add
add
and
add
or
add
cmp
xchg
dec
pop
dec
aam
inc
clc
xchg
sbb
test
xchg
sbb
add
xchg
fdivl
mov
mov
sbb
hlt
sar
mov
iret
mov
decb
test
insb
cmpsl
clc
jno
add
iret
xor
add
clc
xchg
xor
add
clc
imul
add
push
add
mov
push
clc
stc
dec
pushf
pop
cmc
jg,pt
add
aaa
mov
sahf
or
clc
je
add
xor
add
into
add
xlat
outsl
lret
in
cmpsl
clc
arpl
add
add
add
mov
clc
xor
add
add
add
add
int3
mov
pop
dec
das
xbegin
cmp
cwtl
mov
inc
add
pop
mov
pop
adc
add
jle
stos
sahf
and
add
bound
add
add
sti
sub
add
or
loope
in
fdivs
fs
pop
pop
loop
vldmxcsr
xlat
fwait
loope
int3
mov
clc
or
dec
daa
clc
jnp
dec
dec
sbb
clc
lahf
test
addr16
xor
add
bound
add
clc
adc
add
lahf
mov
movsb
clc
scas
mov
adc
add
sub
xor
or
jl
mov
clc
ss
in
std
out
adc
add
cmp
jno
add
and
mov
jl
clc
pop
lods
fs
pop
adc
in
cli
pop
arpl
add
xor
add
add
add
insl
xor
add
clc
cmp
clc
jns
clc
inc
add
pop
and
add
sbb
add
loopne
add
add
jle
clc
xchg
mov
mov
clc
int
call
add
add
jmp
add
mov
cmp
add
invd
cmpsl
clc
jge
stos
mov
add
add
add
nop
stc
mov
mov
add
add
push
jge
sub
or
clc
dec
test
dec
xchg
sub
clc
mov
add
sbb
test
dec
pop
sub
imul
nop
jmp
add
movsl
add
arpl
add
and
add
mov
and
add
add
out
js
add
push
mov
sub
ja
adc
add
mov
pop
sub
add
add
add
cmpsb
clc
xchg
mov
clc
es
rorb
pop
lret
push
xor
nop
jmp
cmpb
add
add
jle
fs
adc
mov
nop
jmp
add
add
add
add
add
adc
clc
mov
xchg
cmp
add
clc
in
insl
imul
repnz
cmpsl
clc
stos
dec
icebp
xlat
enter
add
es
movsb
clc
push
jl
inc
add
fs
stos
adc
sbb
clc
mov
jbe
clc
jle
movsl
clc
shll
data16
xchg
mov
dec
int3
ja
push
add
sub
add
xbegin
add
xor
add
cmpsb
clc
neg
rorl
add
clc
adc
add
cmp
fistpl
fistl
cld
out
pop
dec
jg
xchg
dec
adc
sub
fcoms
xchg
sar
push
clc
ja
js
mov
sub
clc
xchg
xlat
sar
test
incl
sti
nop
jmp
add
orb
clc
ret
add
loopne
negb
cmp
clc
sbb
clc
xchg
addr16
adc
add
inc
add
inc
add
push
mov
nop
jmp
jnp
je
call
add
add
adc
add
add
ljmp
ret
clc
mov
or
shr
nop
jmp
push
adc
rcll
jg
hlt
adc
cmp
gs
push
add
add
data16
cmp
fcomps
add
es
and
and
add
roll
inc
add
lcall
loopne
data16
pandn
sbb
pusha
add
aas
add
clc
ja
jne
nop
jmp
in
ret
enter
add
xor
add
fbstp
add
mov
pusha
add
clc
push
add
jnp
jb
add
xbegin
add
sub
clc
daa
clc
xchg
sbb
add
push
adc
add
xchg
js
call
jl
xor
fsubp
clc
ret
clc
sub
sub
nop
jmp
jnp
push
jle
push
xabort
fdivrp
sub
mov
mov
clc
ret
sbb
add
mov
in
rol
clc
fwait
mov
pop
mov
clc
pop
mov
clc
out
lea
push
add
sbb
test
dec
and
add
jns
aas
decb
or
add
inc
add
or
add
mov
add
push
clc
or
adc
add
movsl
clc
pushf
mov
lods
pushf
pop
push
dec
nop
jmp
add
out
add
inc
add
or
cmp
xor
clc
outsl
mov
icebp
sub
mov
nop
jmp
out
movsl
sbb
cwtl
sub
fcoms
mov
clc
into
add
add
add
clc
call
repnz
add
adc
cs
mov
push
add
cmp
clc
cld
imul
jle
inc
clc
divl
cmp
dec
xchg
cmp
add
clc
push
push
cmp
clc
inc
clc
inc
add
insl
shlb
add
clc
insb
adc
add
fwait
mov
xor
add
clc
and
add
clc
adc
add
cmp
add
data16
jmp
sub
add
xchg
enter
clc
dec
xor
add
aas
iret
daa
clc
rcrb
clc
repnz
add
xabort
clc
cmp
add
mov
clc
dec
sahf
icebp
es
popa
add
dec
and
add
repnz
add
lods
adc
add
rcr
popf
scas
cli
mov
test
jmp
sti
insl
popa
add
add
mov
mov
add
pushf
mov
add
call
xorb
jg
add
adc
add
add
jno
add
lcall
xchg
cs
mov
add
inc
clc
mov
add
xlat
jns
mov
add
clc
mov
clc
push
add
sbb
leave
gs
jl
jae
add
add
stos
pop
hlt
push
test
outsl
xbegin
adc
add
add
lock
not
nop
jmp
push
jle
rol
xor
das
or
and
jmp
xchg
out
bound
add
pop
negb
xor
nop
jmp
es
add
aad
clc
add
inc
add
inc
add
out
adc
add
clc
aaa
sub
jl
sub
clc
stos
push
jno
add
clc
push
insl
mov
lcall
cmp
out
add
add
push
sub
xchg
ds
or
add
movsl
clc
dec
fsubl
mov
nop
jmp
add
add
adc
add
and
add
clc
loopne
lock
mov
add
mov
gs
nop
mov
repnz
pushf
sar
loope
cmp
add
add
addr16
lock
scas
dec
add
add
clc
out
int
mov
nop
jmp
add
add
push
sub
js
adc
add
add
and
add
add
add
cmp
popa
scas
bound
add
sub
stos
sar
fdivrp
mov
jl
scas
filds
add
inc
add
lret
outsl
je
clc
dec
imul
add
clc
in
jl
mov
sbb
inc
push
inc
add
mov
fstps
push
add
mov
mov
xchg
ret
push
out
pop
bound
add
and
adc
add
or
add
xabort
jl
dec
add
clc
mov
jecxz
xlat
fwait
sbb
mov
xor
add
pop
push
mov
xchg
ret
out
xchg
in
add
test
insl
shrl
cwtl
imul
cmpsl
clc
fsubrs
inc
clc
roll
loop
pop
mov
scas
insl
lahf
dec
xor
add
add
outsb
push
pushl
push
mov
xchg
ret
mov
stc
jp
add
push
mov
add
je
add
xor
cmpsl
clc
pop
data16
ljmp
dec
mov
clc
push
int3
daa
clc
mov
dec
lea
dec
adc
add
add
pusha
add
repz
mov
add
add
mov
clc
in
xor
add
add
add
test
clc
pop
leave
jmp
rcrl
sbb
sarl
mov
clc
dec
ret
clc
mov
nop
jmp
sbb
add
sti
or
adc
add
dec
outsl
mov
in
jecxz
push
mov
cmp
nop
jmp
mov
xor
pusha
add
jae
add
cltd
cmp
sbb
add
push
add
cmp
add
and
or
popa
add
lahf
pusha
add
adc
add
ja
clc
mov
xchg
std
pop
in
fsubrs
mov
push
jo
add
clc
dec
dec
pop
cmp
movb
mov
xchg
ret
aad
lcall
add
cmp
nop
jmp
lods
aad
cmp
in
rol
clc
fimuls
clc
int3
pop
or
clc
add
add
cmp
dec
idivl
aam
clc
pop
outsl
cmp
adc
add
add
add
push
inc
add
sbb
add
jne
add
add
cmp
lret
mov
adc
clc
xabort
clc
inc
clc
test
mov
daa
clc
imul
add
clc
cmp
add
cmp
clc
cmp
xor
add
shl
nop
jmp
push
add
mov
test
fisubl
add
in
daa
clc
xabort
add
add
mov
addr16
call
sbb
int3
adc
add
add
add
sub
push
add
mov
xchg
jnp
enter
clc
fxch
flds
mov
add
mov
add
sbb
out
add
xorb
add
add
xabort
mov
xor
add
add
lock
mov
xor
pop
mov
add
inc
add
pop
add
nop
jmp
add
cmp
js
loop
sar
jecxz
inc
clc
adc
add
mov
mov
and
add
cmc
inc
clc
and
clc
dec
adc
add
add
movsl
clc
fisubl
add
cli
mov
clc
sub
clc
or
aad
sbb
clc
push
clc
xlat
cmp
adc
add
das
mov
clc
sar
je
nop
jmp
jne
jle
pop
push
cmp
test
out
scas
enter
add
dec
in
push
clc
test
dec
jmp
cmp
clc
jecxz
jp
jmp
lods
mov
in
div
mov
add
cltd
fs
mov
mov
clc
data16
or
out
xchg
pop
daa
clc
pop
clc
jg
clc
int3
cmp
add
stos
push
add
lods
or
add
decl
mov
add
sbb
add
sbb
add
sub
lods
jge
cmp
jmp
add
clc
or
push
dec
cmpsl
clc
dec
sar
in
das
out
pop
pusha
add
pop
insb
xchg
dec
jmp
clc
pop
cmp
adc
add
jle
out
and
add
out
pop
daa
clc
stos
inc
clc
xor
dec
add
add
aam
push
add
call
out
leave
sub
clc
mov
clc
jo
add
lods
das
sub
add
clc
sar
je
nop
jmp
popa
cmp
clc
add
add
clc
mov
add
fwait
ret
clc
lret
test
push
add
nop
jmp
lock
je
clc
fdiv
sti
or
pop
shll
add
xchg
pop
aaa
push
int3
jae
add
clc
out
int3
xbegin
xchg
imul
jnp
add
add
add
arpl
add
add
add
add
icebp
sbb
mov
add
out
roll
push
ret
in
decb
mov
xbegin
cmp
add
add
fnstenv
add
and
add
add
gs
loope
mov
arpl
add
lret
add
mov
cmp
inc
clc
and
add
dec
cli
inc
add
xbegin
sub
clc
pop
sub
loop
pop
xor
add
xchg
shll
add
cmp
jbe
dec
and
add
mov
lods
cwtl
add
add
sar
clc
incb
fiadds
sbb
fmuls
into
push
clc
das
add
add
leave
push
xchg
xchg
push
add
lods
lahf
mov
pop
add
add
xor
add
mov
xchg
push
add
add
loope
pop
daa
clc
lods
imul
in
jo
add
pop
xchg
aas
daa
clc
jle
clc
cwtl
push
sar
lcall
call
clc
xchg
xor
add
data16
or
mov
adc
mov
clc
xchg
sar
testb
mov
add
in
shll
pop
movsb
clc
dec
jle
push
add
nop
jmp
in
and
xchg
mov
sub
jmp
fs
popf
popa
add
ret
sar
jl
and
add
clc
and
add
out
rcr
cmp
stos
jg
call
clc
int
clc
and
fstl
adc
add
add
popf
dec
xlat
fisubrl
xor
add
mov
insl
xchg
gs
test
inc
add
in
mov
push
lret
sub
inc
clc
ret
clc
shl
xchg
xchg
cli
rcrl
mov
dec
into
adc
add
add
mov
cmpsb
push
add
adc
aad
xor
add
idivb
cmp
dec
lcall
clc
xchg
popf
or
xchg
add
sub
pop
in
mov
mov
ljmp
xchg
pop
bound
add
add
sbb
clc
arpl
add
add
mov
or
clc
ds
sub
clc
aaa
std
adc
add
clc
mov
jecxz
fistpl
sub
add
gs
mov
add
add
dec
mov
clc
loope
cmpsb
clc
negb
add
add
dec
ficomps
add
cmp
scas
mov
xchg
cmpsb
clc
mov
into
arpl
add
cmovno
xchg
ret
adc
push
insb
mov
add
add
dec
pop
hlt
fidivrl
and
add
cs
jno
add
sub
lock
clc
fnsave
add
dec
mov
jno
add
pop
add
jno
add
inc
clc
cmp
clc
mov
add
enter
clc
inc
add
xlat
loopne
or
aas
test
mov
clc
ds
add
pop
push
fstp
mov
cmp
clc
pop
cltd
inc
add
and
add
mov
xchg
push
clc
sti
sbb
fucomp
add
insl
call
fsts
add
add
nop
jmp
push
sbb
sbb
add
push
cli
sti
push
adc
pushl
clc
mov
clc
xor
add
lret
push
add
xor
add
add
adc
mov
nop
jmp
inc
pop
out
je
adc
add
add
movsl
clc
test
xchg
mov
clc
repz
jg
add
mov
xchg
ret
jne
out
in
or
clc
xor
add
add
jo
add
addr16
test
add
cmp
clc
dec
imul
xchg
jns
rorb
mov
bound
add
mov
nop
jmp
push
add
add
xchg
in
cli
jbe
jb
add
clc
cltd
cli
mov
xbegin
add
sti
pop
fistpl
std
out
push
adc
clc
jp
add
add
clc
lea
add
clc
leave
clc
add
add
clc
daa
clc
sub
aam
and
add
mov
clc
ss
sar
cs
inc
add
imul
sar
mov
add
cmp
add
dec
dec
adc
add
out
movsb
clc
dec
aas
add
mov
nop
jmp
jle
aad
and
add
clc
push
add
xchg
dec
cmpsb
clc
lods
inc
clc
pop
cmc
xlat
outsb
sub
pop
push
mov
nop
jmp
mov
pop
add
clc
sub
call
add
cld
add
add
xor
clc
cld
aas
fadds
lods
jp
inc
clc
and
add
jmp
add
cmp
add
mov
mov
xor
mov
push
xbegin
pop
clc
ds
add
cld
and
rcll
xor
add
es
test
clc
push
clc
add
inc
clc
jle
mov
jb
add
out
sub
add
in
inc
add
mov
in
dec
mov
or
add
aad
clc
iret
push
mov
add
sbb
jmp
icebp
popa
jne
xor
sbb
and
add
add
add
and
add
or
add
clc
inc
clc
lret
loop
xchg
sbb
ret
enter
sub
ret
and
ds
mov
add
adc
dec
pop
icebp
lcall
xchg
or
xlat
jl
clc
cmp
clc
sbb
nop
xor
add
dec
test
shlb
xlat
nop
outsb
in
pop
jge
cmp
hlt
bswap
outsb
pop
jno
add
popf
inc
add
call
cs
into
aad
clc
into
icebp
cli
push
mov
nop
mov
das
dec
xchg
dec
enter
ja
or
nop
jmp
add
pop
add
add
fdivs
out
outsb
shr
aad
clc
xor
add
clc
sbb
testl
and
add
or
clc
je
clc
xchg
jb
add
dec
xor
add
pop
dec
adc
xor
add
repnz
clc
decl
sbb
push
icebp
add
sbb
xchg
nop
sbb
add
test
jb
add
jmp
imul
lret
shrl
add
mov
jg
lret
hlt
mov
inc
clc
xchg
dec
hlt
jecxz
fucomp
add
clc
dec
fnstsw
data16
repz
in
mov
xchg
push
add
loop
shl
clc
inc
add
mov
add
sub
ret
add
xbegin
lret
push
inc
add
aaa
lea
add
add
jns
jns
mov
add
adc
add
cmp
jmp
mov
add
in
push
jge
sub
add
dec
add
add
add
scas
adc
dec
aam
repz
out
cli
inc
clc
lret
mov
dec
xchg
pop
in
mov
add
fldln2
xchg
mov
mov
clc
rcrl
mov
sub
add
add
clc
das
insb
xor
and
add
sub
mov
cmp
clc
out
stos
pop
mov
add
pusha
add
nop
jmp
es
sarl
add
clc
dec
jmp
xchg
mov
sti
jnp
fldt
dec
jb
add
dec
xchg
inc
add
icebp
sub
add
sahf
data16
jo
add
inc
clc
pusha
add
mov
jge
test
iret
pop
fadds
clc
add
sbb
add
add
clc
test
mov
jl
clc
mov
add
jo
add
add
push
leave
or
clc
iret
pop
dec
or
lret
fmul
scas
jbe
clc
scas
mov
add
gs
enter
jg
add
cmc
arpl
add
add
add
sbb
add
clc
repz
xor
add
clc
xchg
mov
dec
xchg
jo
add
sub
sub
sbb
loope
mov
jo
add
mov
repnz
or
add
fwait
jb
add
clc
sbb
clc
jecxz
lea
add
jg
dec
push
mov
xchg
ret
add
jae
clc
jecxz
out
dec
es
or
ljmp
imul
jnp
loop
repz
inc
clc
pop
jg
mov
inc
add
scas
cmp
fstpl
cld
sahf
add
fwait
mov
add
aas
fistpll
jecxz
mov
clc
shr
mov
clc
xchg
es
outsl
lahf
xor
inc
add
das
ret
clc
mov
push
nop
jmp
add
js
inc
out
add
add
sbb
add
out
idivb
add
sti
test
push
add
loopne
je
out
xor
sub
lret
stos
cmp
add
icebp
cs
clc
push
add
cmc
fdivl
sub
or
push
jmp
nop
jmp
add
shlb
xlat
push
lea
clc
cs
push
mov
inc
add
or
cmpsl
clc
test
add
mov
test
repnz
add
add
das
rcll
nop
jmp
inc
mov
es
jbe
xchg
sub
imul
fs
mov
or
jle
clc
lahf
insl
push
clc
sbb
test
lods
out
add
add
mov
clc
sbb
test
ds
add
ds
push
xchg
mov
add
cmp
ljmp
clc
lea
add
add
add
cwtl
inc
clc
clc
sub
stos
inc
add
lret
aad
clc
xor
add
xchg
mov
add
aam
clc
in
or
js
fidivrs
loope
cltd
mov
pop
sub
or
push
add
or
mov
ja
cmp
nop
jmp
jge
out
in
inc
add
clc
imul
scas
fildll
nop
jmp
ret
adc
inc
cmpb
popf
popa
add
xchg
pop
cmp
or
fdivrl
fsubrs
mov
and
cmc
pop
cmp
pushf
scas
stos
jl
fs
sbb
add
sub
add
popa
add
add
add
push
jecxz
xchg
sub
jle
fbld
clc
cmp
add
add
lock
cmp
into
call
je,pn
push
lods
addr16
test
loop
out
inc
clc
aaa
pop
add
add
pop
sti
xor
jo
add
sbb
pop
rorb
fdivrs
repnz
add
add
jp
fs
mov
clc
xchg
bound
add
fcoms
clc
or
clc
movsb
clc
inc
add
xor
add
add
arpl
add
imul
dec
add
inc
add
outsl
repnz
xor
and
add
popf
sub
clc
mov
sahf
aas
popa
add
mov
jae
add
add
sbb
push
adc
cwtl
and
mov
sbb
add
hlt
sar
fwait
ja
clc
cmp
clc
arpl
add
jmp
adc
add
scas
imul
mov
clc
mov
clc
insb
and
add
sysenter
cmp
clc
pusha
add
sub
sbb
sub
cmp
jns
imul
cs
addr16
dec
lahf
imul
add
add
add
dec
cmp
add
fisubrl
clc
inc
clc
xor
add
lock
clc
fsubr
push
add
xor
add
sbb
add
clc
ja
cvttps2pi
xor
add
rorl
popf
iret
sub
add
sarb
jge
add
add
lret
jae
add
filds
add
cs
add
jmp
aas
call
xchg
int3
pop
into
adc
fwait
xchg
rcl
enter
add
adc
add
clc
mov
push
out
mov
cmp
ss
mov
mov
clc
outsl
xchg
lret
fcmovne
jbe
clc
cmpsl
clc
adc
add
mov
nop
jmp
add
pop
push
xchg
daa
clc
sahf
mov
mull
insl
int3
mov
dec
aam
addr16
sbb
clc
ds
add
or
cltd
xchg
dec
in
mov
negb
sar
xor
add
dec
push
mov
ljmp
cmpsl
clc
pop
flds
add
inc
clc
inc
clc
mov
cld
out
roll
add
add
add
add
lret
int
adc
add
mov
pop
jecxz
mov
jo
add
pop
and
add
stos
push
mov
xchg
ret
out
mov
out
aaa
mov
push
mov
or
add
xchg
es
mov
dec
popf
jmp
clc
jno
add
add
cmp
add
iret
jno
add
push
add
jb
add
mov
leave
hlt
mov
popa
add
fld
clc
scas
nop
and
add
clc
mov
mov
clc
fs
add
add
mov
enter
movsl
clc
cmp
clc
xor
clc
and
add
add
adc
lods
and
add
out
or
repz
ja
fdivrl
sbb
sbb
div
inc
add
jnp
sub
add
mov
xor
add
pop
test
stos
push
test
add
jge
jnp
inc
add
adc
pop
sub
out
sub
clc
ds
clc
data16
inc
clc
in
mov
aas
cmp
add
adc
add
pop
cmp
push
add
push
int
add
xabort
add
cmpsl
clc
cli
jns
clc
xchg
shll
xor
add
xbegin
jmp
add
cmp
pop
xor
mov
add
push
add
sbb
xor
dec
mov
fwait
pop
decl
test
jmp
add
add
add
push
and
add
lcall
add
rcl
dec
push
ss
pop
jae
add
clc
adc
add
add
add
or
clc
inc
add
inc
clc
jle
clc
gs
sar
or
jbe
mov
xor
add
aad
clc
repz
clc
cmp
fmull
add
ja
push
jae
add
es
mov
clc
repz
stos
push
popa
add
rolb
repnz
decl
test
jmp
inc
jae
movsb
clc
js
pop
daa
clc
jl
mov
push
clc
inc
clc
and
add
inc
clc
clc
fisubl
pop
nop
xabort
jle
clc
das
pop
mov
clc
sar
mov
nop
jmp
pop
icebp
icebp
in
add
mov
clc
lods
sbb
clc
mov
nop
jmp
xorb
aad
clc
mov
loop
add
add
adc
add
clc
scas
in
fdivl
add
ljmp
cmp
cmp
clc
dec
fcomps
push
add
pop
rorl
add
add
test
and
clc
test
cmp
nop
jmp
add
out
fs
sbb
cli
and
cmp
mov
push
mov
pop
jae
jmp
xchg
inc
clc
or
mov
add
add
ret
es
mov
add
xor
add
pop
xchg
mull
clc
decb
dec
jge
xabort
sub
adc
xbegin
xchg
lcall
es
or
out
mov
dec
xchg
cs
add
adc
add
dec
data16
cmp
jbe
add
jge
sbb
bswap
arpl
add
or
stos
fstps
add
xor
add
cmpsb
clc
cmp
aas
inc
clc
xor
add
or
clc
sbb
add
mov
clc
xor
add
jge
into
out
mov
sar
and
mov
clc
enter
in
jle
test
mov
out
and
add
lods
loop
enter
clc
add
add
clc
hlt
xor
js
push
clc
repnz
jp
clc
jo
add
sarl
push
add
nop
jmp
aad
push
movsl
jne
cmp
sub
push
xabort
mov
clc
ljmp
rcrb
stc
or
repz
add
out
mov
cwtl
inc
clc
add
add
add
shll
clc
leave
shlb
clc
cltd
mov
leave
out
arpl
add
outsb
push
faddl
add
nop
adc
add
clc
scas
imul
aaa
mov
clc
pop
jns
clc
fiaddl
add
add
cmp
in
outsl
inc
add
or
add
loop
in
sub
add
pushf
mov
stos
hlt
aaa
cmpsb
clc
movsl
clc
pushf
sub
clc
scas
divb
test
push
ret
push
fs
fwait
xchg
sarl
in
add
add
sbb
stc
push
dec
int3
xchg
mov
mov
add
push
rep
nop
jmp
add
addb
push
add
jo
add
scas
shll
pop
mov
cltd
xor
add
sbb
fiadds
xchg
ret
je
jae
add
push
add
sbb
in
fcmovb
clc
repz
pop
add
jae
ret
icebp
in
enter
fcmovnbe
cmpsl
clc
push
add
test
and
add
fcom
aaa
movsb
clc
clc
scas
inc
clc
enter
iret
sahf
leave
push
or
int3
ss
xlat
push
lahf
pusha
add
mov
add
out
push
in
pop
clc
ja
adc
int
bnd
mov
jbe
insb
arpl
add
add
popa
add
pop
adc
add
dec
scas
jmp
add
shlb
add
mov
ljmp
imul
xchg
call
clc
push
add
cmp
add
cs
lahf
std
test
clc
xchg
jecxz
ret
clc
dec
aas
cs
add
mov
mov
outsl
add
shl
inc
pop
xor
add
adc
add
bound
add
dec
pop
lock
add
sbb
add
mov
aas
es
lea
shll
es
nop
inc
clc
stos
ret
clc
and
add
rorb
ret
or
ja
jmp
mov
mov
insb
inc
add
jecxz
push
add
cmp
fwait
scas
cli
push
add
scas
add
add
stos
nop
fdivrs
add
addr16
cmp
add
mov
cmp
clc
lahf
outsl
sbb
int
clc
cmp
fsubr
test
add
lret
xchg
push
add
mov
insb
mov
mov
push
mov
nop
jmp
jle
add
pop
popa
cmp
stc
je
add
jnp
push
add
je
jne
add
add
dec
in
or
mov
inc
clc
clc
cmp
test
mov
cmpsb
clc
ja
push
nop
jmp
sbb
push
out
add
in
inc
clc
imul
sub
add
xchg
cmc
testb
add
push
aaa
ds
clc
sub
es
fwait
mov
cmp
clc
inc
add
adc
add
test
inc
add
nop
jmp
icebp
add
loop
and
add
jae
add
clc
push
fists
and
add
cmp
add
pop
ret
xor
add
loop
xbegin
repnz
add
clc
jge
jecxz
jg
cmp
mov
nop
jmp
jle
jne
xor
cli
or
imul
sub
add
jne
nop
jmp
add
fnstcw
inc
loope
jnp
aad
icebp
out
add
and
add
add
add
call
add
loop
leave
addr16
jg
mov
add
xabort
jle
xor
add
xor
add
popa
add
dec
adc
outsb
dec
dec
mov
add
push
mov
xchg
ret
push
out
int
add
jnp
pushf
scas
loopne
hlt
jb
add
xbegin
fidivl
push
nop
jmp
cli
sbb
es
xorb
jne
aaa
cmp
add
dec
sbb
clc
iret
dec
dec
insb
sahf
mov
cmp
add
pop
or
inc
add
mov
clc
insl
lods
push
stos
lret
add
push
inc
add
xor
add
dec
cmp
add
add
clc
pop
clc
mov
cli
sub
add
jb
add
mov
mov
mov
nop
jmp
mov
pop
mov
clc
outsl
inc
clc
inc
clc
sub
daa
clc
or
clc
pop
inc
add
xchg
inc
clc
pop
xchg
push
or
push
add
push
enter
fucomip
cmp
xchg
mov
loopne
dec
pushf
xchg
mov
jmp
add
push
add
xchg
clc
cmp
pop
clc
xchg
cmp
jmp
jbe
mov
stos
jl
aas
lock
mov
shl
or
pop
mov
clc
jns
xchg
mov
dec
pop
out
in
jecxz
sbb
inc
clc
jo
add
add
push
add
push
movsl
clc
mov
clc
jmp
fisttps
add
push
clc
pop
aam
icebp
daa
clc
fimuls
sti
sub
or
jecxz
push
cltd
pop
cmpsl
clc
xchg
gs
cmp
add
jbe
nop
or
cmp
add
ss
xchg
stos
sub
clc
or
add
clc
lods
fdivs
add
push
inc
add
cmp
icebp
mov
ss
push
add
mov
or
clc
adc
nop
jmp
jnp
out
add
int
add
nop
jmp
out
jge
and
mov
clc
daa
clc
jb
add
cmpsb
clc
ret
clc
xor
add
cmp
pushf
sub
call
inc
add
inc
add
scas
out
dec
in
push
fsubrs
fcompl
xor
add
clc
lea
xchg
lahf
jp
jae
add
je
clc
negb
clc
das
scas
xchg
xchg
xabort
add
add
add
cmp
aad
xor
add
movsb
clc
jbe
fcom
ret
clc
or
add
inc
clc
xchg
xor
add
pop
adc
add
adc
clc
dec
or
mov
scas
sub
push
lods
psubb
clc
push
iret
sbb
add
rcl
mov
lock
clc
lahf
jo
add
xchg
jb
add
add
dec
inc
clc
dec
popf
je
sub
cmp
xor
add
mov
inc
add
xor
mov
pop
inc
add
mov
loop
push
clc
cwtl
xor
add
push
xor
nop
jmp
and
jnp
add
sbb
mov
stc
adc
add
jae
add
clc
and
add
push
and
add
inc
clc
cli
or
js
out
in
jge
clc
cltd
mov
dec
inc
add
and
add
add
sub
jl
outsl
jo
add
movsb
clc
xchg
fcomps
dec
cltd
sub
clc
into
inc
add
pop
mov
insb
hlt
enter
adc
clc
fs
outsb
jecxz
and
add
dec
jo
add
cmp
add
bound
add
add
repnz
add
pop
clc
std
adc
add
add
nop
jmp
sbb
add
shlb
gs
mov
mov
lea
and
add
add
cli
rcrl
add
shrb
jmp
shll
cmp
test
sar
add
ljmp
mov
loop
scas
mov
sub
and
add
shr
and
add
mov
push
mull
fistps
cmp
clc
loopne
xor
inc
clc
mov
push
lret
inc
add
sbb
jmp
add
addr16
ja
scas
rsm
insl
xchg
fwait
adc
add
add
mov
add
push
sar
imul
das
arpl
add
clc
hlt
add
pop
inc
add
je
fsts
lret
and
jge
fstps
add
clc
rep
es
mov
inc
add
sbb
add
clc
jmp
mov
nop
jmp
addb
js
jle
clc
stos
push
cmp
or
add
clc
mov
clc
mov
in
jbe
sbb
nop
jmp
pop
out
add
sbbb
clc
sub
test
clc
out
es
imul
or
clc
xor
add
add
popa
add
xchg
mov
add
inc
add
push
sub
and
add
ljmp
clc
sar
add
cmpsl
clc
pop
lods
mov
clc
jns
mov
int
clc
sub
jne
pop
out
dec
out
outsl
sahf
and
iret
add
add
sbb
mov
xchg
ret
push
jnp
lods
xlat
dec
xchg
test
clc
add
lret
jnp
xchg
insl
negb
clc
cli
hlt
xor
add
clc
ret
clc
mov
jno
add
mov
mov
jge
out
jle
ret
clc
sbb
loopne
and
add
clc
mov
outsl
adc
add
dec
fcmovnbe
shll
add
stos
adc
add
mov
sub
or
mov
xchg
ret
cmpsl
jle
add
xabort
out
inc
clc
mov
iret
xor
add
repz
inc
add
push
adc
add
rep
nop
jmp
in
pop
add
out
add
add
mov
mov
call
add
push
sbb
add
inc
jle
mov
ret
clc
pop
or
mov
mov
xchg
ljmp
clc
outsl
mov
shrl
stos
inc
add
es
jp
clc
in
fcmovne
sub
aaa
sub
js
add
clc
pop
movsb
clc
cmp
mov
add
jecxz
movsb
clc
dec
push
clc
cmp
add
bnd
push
std
xor
add
pop
jbe
ss
imul
lahf
xchg
mov
notb
popf
sub
clc
movsl
clc
inc
add
sahf
mov
je
clc
movsb
clc
jbe
push
add
cmp
add
dec
xchg
fcomps
sbb
add
testl
jae
call
add
out
jle
clc
xbegin
clc
xchg
and
add
dec
mov
negb
in
sub
add
cmp
push
ja
add
test
insb
leave
and
add
clc
lcall
xor
cmp
clc
sahf
flds
add
add
add
mov
out
jno
add
adc
clc
mov
xchg
test
cs
jge
dec
cmp
add
dec
ret
clc
push
scas
cmp
cmp
repz
clc
and
add
xchg
scas
in
cmp
aaa
inc
clc
push
std
adc
rcr
mov
repnz
clc
fwait
cltd
pushf
scas
popa
add
pop
xchg
in
out
cmp
mov
xchg
cmc
cld
leave
test
pop
pop
clc
inc
add
inc
add
sub
fadds
clc
and
add
dec
xor
add
adc
add
or
pop
mov
fwait
mov
xchg
adc
add
in
ret
or
cmp
cmp
leave
leave
mov
mov
xchg
ret
cmp
rorb
dec
mov
add
incl
jle
inc
stc
in
cmp
sub
clc
sub
xabort
in
scas
dec
xchg
adc
add
sub
pop
xchg
popf
bound
add
mov
nop
jmp
ret
xorb
or
xchg
jmp
mov
dec
outsb
data16
and
add
clc
in
cmpsb
clc
jp
clc
mov
stc
push
lods
dec
cmp
xchg
lcall
add
js
loop
xchg
adc
add
bound
add
lods
jge
xbegin
add
lods
mov
clc
jb
add
clc
inc
add
repz
mov
or
and
add
dec
fwait
dec
cli
mulb
add
imulb
pop
jge
clc
sub
cmp
mov
pop
lahf
pusha
add
or
fcompl
loop
insb
dec
sarl
sbb
inc
add
adc
add
add
add
add
sar
scas
out
push
mov
xor
add
sub
aaa
nop
jo
add
clc
pop
pop
and
add
inc
add
push
fildl
add
mov
add
add
mov
clc
fnstcw
mov
xor
add
pop
rcll
mov
sub
rclb
add
sbb
in
push
push
add
mov
xchg
xabort
testl
nop
jmp
add
pop
out
lahf
push
add
sbb
add
mov
and
mov
xchg
ret
popa
xor
adc
clc
dec
cmp
mov
sbb
test
jmp
add
aaa
negb
lock
clc
cmp
cmp
popa
add
cmp
add
clc
scas
jno
add
imul
fcompp
pop
ret
and
add
int3
pop
sar
ss
clc
add
push
jmp
add
add
sub
clc
jno
add
add
pop
xor
add
clc
insl
hlt
pushf
scas
fldl
clc
outsl
sar
mov
cwtl
jecxz
mov
enter
push
shlb
mov
cmc
adc
add
stc
stc
sub
pop
pop
dec
stos
repnz
and
jae
add
hlt
push
add
adc
add
mov
xor
add
clc
mov
add
cmp
and
add
imul
add
adc
add
and
add
sahf
cmc
jmp
add
or
clc
mov
ret
push
pop
or
add
push
adc
add
push
jmp
je
cli
add
fs
jmp
ret
clc
pop
xabort
add
aas
je
xchg
inc
add
xor
add
inc
add
cmpsb
clc
das
cmc
test
xor
add
add
mov
mov
pop
clc
push
add
xchg
xchg
int3
sar
fs
or
add
cld
adc
add
clc
push
out
call
sub
imul
out
adc
add
add
nop
xor
add
mov
nop
jmp
adc
ret
lock
bound
add
jo
add
fs
xchg
stos
mov
mov
xor
xchg
pop
push
das
testb
out
aad
out
imul
pop
push
jmp
sbb
cli
in
add
into
lock
add
add
int3
mov
mov
cmp
or
out
movsb
clc
inc
add
sub
clc
stos
lret
jne
add
push
inc
add
lret
jb
add
clc
xlat
test
add
xchg
repnz
add
jne
add
xchg
pop
jge
daa
clc
mov
mov
int
cmp
add
cld
push
add
fcomps
clc
aad
lods
dec
xor
add
add
push
mov
xchg
push
add
add
add
rcr
inc
clc
out
pop
aam
mov
mov
mov
xchg
in
jno
add
shlb
jbe
add
jae
add
add
sbb
cltd
pop
je
repz
mov
clc
mov
mov
add
cmp
mov
clc
shlb
clc
xbegin
arpl
add
clc
pop
inc
clc
int3
sbb
sub
add
add
xchg
push
add
in
leave
loopne
sub
and
mov
mov
pop
add
pop
in
jne
add
je
adc
add
mov
xor
add
add
repnz
fsubrl
push
jg
clc
shl
cmp
mov
pushf
cmp
out
repnz
mov
addr16
inc
clc
xchg
mov
cmp
pop
lock
cld
mov
pop
ljmp
clc
cmp
dec
jo
add
add
stc
dec
bound
add
xbegin
clc
pop
test
inc
clc
adc
add
clc
jnp
add
pop
mov
shl
clc
jmp
pop
sbb
mov
jo
add
clc
and
add
clc
js
xor
add
add
add
add
clc
or
aas
aaa
sub
clc
sar
add
add
add
bound
add
mov
addr16
xchg
rorl
bound
add
inc
add
cmp
xbegin
pusha
add
js
ret
clc
xor
add
and
ljmp
mov
cmp
add
sar
lcall
jmp
ret
out
in
xchg
clc
scas
jg
mov
add
shlb
clc
cmp
mov
add
jns,pn
clc
pop
idivb
ret
clc
repnz
or
sub
mov
clc
popa
add
jg
clc
or
test
cwtl
pop
out
inc
clc
out
pop
cmp
clc
test
sub
sbb
and
jmp
addb
and
int3
ret
fisubrs
dec
test
cmp
rolb
and
add
clc
add
add
mov
loop
xchg
fstl
add
push
clc
fbstp
add
incl
sti
nop
jmp
push
sbb
ss
add
lods
mov
push
push
nop
jmp
out
sbb
jge
jge
mov
push
add
lcall
insl
or
stos
int3
enter
add
add
stos
sar
sbb
cmp
and
add
repnz
outsl
scas
aad
clc
or
scas
cmp
add
lods
dec
cmp
dec
ds
add
cs
push
add
nop
jmp
lods
jle
sbb
decl
scas
push
add
add
cmp
js
add
sub
int
mov
clc
lods
aam
ret
icebp
mov
xabort
imul
clc
jno
add
add
xchg
mov
clc
cmp
mov
mov
pop
clc
add
add
xor
mov
push
add
fwait
lcall
inc
add
mov
pop
inc
add
adc
add
jbe
cmp
clc
pop
pusha
add
xchg
aad
push
mov
nop
jmp
mov
ret
add
mov
push
or
jmp
adc
jle
push
popa
inc
add
imul
test
sbb
add
add
jbe
inc
clc
and
sar
hlt
mov
or
sbb
mov
jge
mov
nop
jmp
ret
xor
pop
add
add
adc
add
add
stos
pop
clc
mov
cmp
add
cmp
add
xchg
aas
dec
cmp
clc
mov
outsb
inc
clc
sbb
clc
push
lcall
lret
aam
fistps
and
add
pop
adc
add
mov
add
xchg
jnp
clc
fsts
or
add
sbb
clc
lods
mov
add
jno
nop
jmp
jnp
jnp
in
push
and
pop
mov
mov
nop
jmp
lock
xchg
jae
mov
add
mov
clc
cmp
call
hlt
shl
clc
mov
clc
stos
jl
mov
add
scas
push
xor
pushl
add
adc
cmpsb
clc
or
clc
xor
add
add
mov
lret
inc
add
add
add
sahf
sbb
lret
add
test
outsb
mov
aaa
popf
shrl
clc
stos
inc
clc
adc
add
clc
add
add
add
cld
jns
in
push
leave
inc
add
icebp
icebp
add
mov
adc
add
add
clc
pop
and
jmp
iret
add
add
add
and
add
add
jns
pop
push
mov
xchg
ret
cmp
test
sub
loope
divl
out
xor
xor
jo
add
add
out
clc
mov
add
inc
clc
sbb
scas
cwtl
jne
clc
ds
add
nop
jmp
add
adc
lea
mov
inc
clc
arpl
add
add
push
add
nop
jmp
adc
jne
shlb
add
insl
stos
pop
into
cmp
popf
sbb
jmp
cmp
add
movsl
aad
xabort
pop
jge
mov
dec
out
arpl
add
jmp
sbb
shlb
add
mov
add
movd
clc
and
add
fstp
pop
jg
push
jmp
jae
addb
out
xchg
xchg
cmp
cltd
xchg
cltd
sub
clc
mov
mov
js
ret
mov
out
inc
add
sub
xor
add
test
add
and
add
add
dec
outsb
rcrl
ret
add
cmp
or
bound
add
add
into
repnz
std
jp
movsl
clc
js
clc
dec
xor
add
add
shlb
clc
push
inc
add
cmp
cmpsb
clc
jnp
xor
xor
add
subl
nop
jmp
ret
sbb
js
cmpsb
clc
mov
sub
clc
in
add
push
nop
jmp
push
add
mov
insl
sbb
stc
cltd
xor
add
add
stc
xlat
test
mov
clc
sar
test
sbb
inc
add
lea
nop
bswap
iret
pop
and
cmp
fidivl
jg
imul
sar
clc
jns
cmp
fsubrl
add
add
add
add
fwait
push
xchg
add
clc
imul
mov
cmp
clc
mov
mov
xchg
ret
xchg
add
or
clc
nop
popf
cmp
clc
dec
clc
or
add
jno
add
push
mov
clc
pop
pop
mov
decl
test
call
jge
add
or
clc
sub
add
adc
add
add
jle
and
add
clc
push
add
jnp
xor
add
add
mov
lods
add
add
add
add
add
aad
xor
add
add
jno
add
lods
nop
jmp
in
push
bound
jge
sbb
fistps
mov
jp
nop
cwtl
movsl
clc
gs
mov
fs
out
mov
add
xor
sub
bound
add
mov
cmpsl
clc
adc
add
xor
add
push
add
mov
lcall
add
add
idivl
cld
sbb
sar
inc
jle
jge
addb
clc
in
add
add
add
dec
cmp
jmp
inc
add
add
ret
sahf
cmpsl
clc
push
add
jmp
add
addr16
ss
cmp
mov
cmp
ss
rep
jecxz
pop
and
cmp
add
mov
clc
pop
pop
push
jmp
inc
jnp
xor
inc
aaa
add
pusha
add
test
add
fidivrl
clc
xchg
test
clc
add
mov
cwtl
icebp
fbld
out
push
mov
pop
push
clc
xor
add
fs
arpl
add
imul
add
repnz
add
add
xor
add
add
add
incl
jmp
push
pop
push
mov
filds
add
in
jecxz
data16
sahf
dec
inc
clc
pop
mov
xchg
insl
ret
clc
pop
push
xabort
xor
add
add
out
js
inc
clc
pop
data16
cli
sahf
cwtl
cli
xchg
in
sar
sbb
clc
clc
xor
add
add
jmp
iret
pop
or
movsb
clc
dec
imul
add
lcall
clc
es
stos
mov
jmp
movsl
add
sbb
push
or
sbb
stc
sar
xchg
sbb
add
or
add
fldt
loop
nop
jmp
lock
out
adc
clc
inc
add
pop
pop
test
frstor
xchg
sub
add
clc
aas
bound
add
pop
dec
add
clc
repz
add
insb
jmp
clc
and
add
xchg
aaa
jmp
clc
shrb
imul
mov
out
and
add
add
add
stos
popf
add
add
clc
pop
lret
dec
idivl
add
fs
and
add
icebp
cmp
push
push
mov
xchg
ret
out
add
push
add
mov
add
inc
clc
imul
add
add
dec
sbb
add
push
clc
icebp
popf
xchg
xchg
jbe
sar
out
mov
mov
sbb
xor
add
add
add
add
add
xchg
push
add
mov
jo
add
add
pop
gs
enter
pop
clc
dec
inc
clc
aam
mov
add
push
pop
clc
pop
fs
hlt
sbb
add
arpl
add
negl
cmpsb
clc
mov
clc
dec
jb
add
mov
nop
jmp
add
ret
pop
lret
pop
fidivrs
jb
add
cmp
clc
outsb
push
add
and
add
nop
mov
push
pop
push
mov
xchg
ret
js
adc
lods
in
push
mov
push
add
sbb
data16
xchg
push
add
cmp
mov
add
adc
add
loope
add
addr16
dec
addr16
add
lods
xchg
loop
daa
clc
pop
cmc
xabort
adc
add
sbb
add
cmpsl
clc
jns
mov
idivb
testb
add
add
add
ljmp
lods
xchg
dec
ja
add
es
addr16
hlt
and
add
std
cwtl
push
lahf
add
add
stos
daa
clc
sub
cmp
test
add
mov
xchg
ss
add
cmp
mov
lret
add
clc
je
pusha
add
int
int3
pop
fwait
dec
pop
fsubrl
and
add
xchg
pop
lods
repnz
add
cs
jns
clc
jb
add
sti
fcmove
scas
inc
clc
adc
add
add
push
add
iret
or
sbb
ss
je
sbb
mov
pusha
add
sar
into
adc
add
pop
fcoml
popa
add
or
mov
add
call
gs
inc
clc
mov
add
mov
add
jmp
bound
add
jg
and
add
cmp
clc
stos
inc
add
jns
jge
lcall
pop
push
cmp
fs
push
clc
ret
je
add
add
add
add
add
and
gs
fwait
mov
clc
imul
add
inc
add
int
pusha
add
hlt
cmp
xor
add
sbb
inc
clc
arpl
add
clc
cli
stos
jge
clc
xor
add
add
add
fcmove
or
sbb
and
add
and
repnz
arpl
add
addr16
loope
mov
gs
push
ret
clc
dec
jmp
sub
out
pushf
mov
mov
aam
clc
dec
testb
xlat
sbb
add
cmpsl
clc
int3
stos
movsl
clc
movsb
clc
push
adc
add
add
imul
jae
add
sbb
cmp
add
xchg
iret
cmp
add
sar
insl
data16
bound
add
mov
jmp
ret
push
jge
add
add
mov
popf
std
stos
out
mov
add
cli
xabort
mov
cmp
dec
outsb
nop
or
or
imulb
pop
xor
add
lret
xchg
adc
clc
xchg
cmp
add
clc
pushf
add
inc
clc
xchg
cmp
shlb
clc
sbb
movsl
clc
sar
cmp
push
add
fidivrl
add
add
lods
cmp
push
add
xchg
cmp
clc
pop
in
push
add
pushf
add
add
push
add
das
cli
mov
mov
hlt
xchg
and
add
hlt
adc
add
add
cmp
adc
add
clc
in
lret
jbe
add
push
add
stos
mov
add
nop
jmp
add
ss
clc
jecxz
in
mov
mov
insb
nop
jmp
sbb
sbb
loop
mov
mov
out
jno
add
ret
stc
and
add
add
pop
cmp
clc
ljmp
clc
push
leave
sub
add
es
xor
stos
aam
clc
jge
xor
add
add
pop
fcos
decl
push
mov
xchg
ret
push
jne
add
inc
add
dec
int3
adc
add
popa
add
pop
cmpsb
clc
stos
hlt
push
bound
add
clc
inc
add
mov
add
cmc
dec
stos
mov
xchg
cmp
clc
xchg
js
clc
rorb
clc
rcrl
rorl
clc
lret
add
gs
inc
add
mov
jmp
sub
iret
leave
nop
cmp
push
adc
add
jae
add
inc
clc
xchg
pop
clc
or
add
fcmovne
add
clc
repz
add
cmp
notb
nop
jl
mov
xor
add
cmp
inc
add
scas
and
add
shrb
push
mov
xchg
ret
ret
lock
mov
add
inc
add
stc
aaa
adc
clc
lods
pop
insb
in
loopne
sub
sti
push
clc
dec
ljmp
xor
add
nop
jmp
out
aad
inc
clc
inc
clc
mov
xor
and
add
add
out
jne
mov
clc
mov
test
jmp
out
add
add
stos
jecxz
dec
xor
add
clc
pop
fcom
xor
add
clc
scas
mov
int
call
jne
jnp
xchg
and
pop
clc
jnp
clc
int
jns
cld
push
add
xchg
stos
lcall
clc
cmpsb
clc
cmovbe
negl
shl
clc
inc
clc
cmp
add
jge
push
add
out
xchg
insb
xchg
add
imul
clc
addr16
ret
clc
mov
das
dec
jge
call
clc
idivb
clc
pop
pop
mov
clc
aaa
add
imul
jmp
xor
add
mov
clc
add
add
or
add
adc
add
int3
pop
push
xor
add
clc
leave
cmp
add
js
add
dec
cs
and
add
clc
ret
clc
das
sub
clc
cmpsl
clc
add
add
clc
push
add
ljmp
clc
push
mov
add
add
add
into
notl
add
pop
sub
je
imul
add
add
clc
jmp
clc
adc
add
add
add
inc
clc
fxtract
xor
lret
mov
sub
clc
sti
in
jecxz
dec
adc
add
xor
clc
or
push
sbb
add
stos
sub
clc
mov
sub
add
xchg
push
add
mov
add
test
and
add
or
mov
lea
nop
jmp
inc
aad
cmpsl
bound
xchg
jg
clc
mov
push
clc
dec
cmp
clc
call
nop
jmp
lock
out
repz
cmpsb
clc
jecxz
cmp
clc
imul
clc
jecxz
mov
clc
jo
add
add
add
add
enter
mov
nop
jmp
shl
add
xor
mov
nop
jmp
in
sbb
adcb
add
movsb
clc
loopne
pop
scas
jg
std
adc
add
arpl
add
movsb
push
mov
xchg
ret
xchg
shll
and
add
das
pop
mov
clc
push
mov
clc
mov
xor
add
add
nop
jmp
out
and
adc
add
test
nop
jmp
lods
adc
ret
add
cmp
xor
fwait
add
sti
fcmove
stos
cmp
clc
sbb
mov
xchg
ret
xchg
movsl
jnp
dec
push
mov
nop
jmp
ret
jge
clc
sbb
into
mov
cmpsb
clc
mulb
in
xor
lahf
push
clc
cmp
inc
add
jnp
vcvtdq2ps
xchg
data16
adc
add
addr16
jno
add
mov
fldl
add
lcall
into
jl
xor
add
add
or
sar
mov
clc
xchg
ja
mov
negb
fsub
clc
pop
push
ror
xor
add
jmp
je
add
jge
addb
cmp
adc
add
nop
add
add
mov
jmp
pop
add
jne
jnp
out
clc
jnp
adc
mov
cmp
int
mov
clc
dec
fstps
clc
fs
pop
clc
inc
add
stos
push
or
sbb
xor
push
xor
add
add
dec
jmp
hlt
adc
add
mov
xor
add
clc
fcomps
iret
inc
clc
mov
std
enter
and
jmp
xchg
add
add
xabort
clc
inc
clc
pop
dec
xor
clc
or
sub
and
add
dec
cmpsl
clc
xor
pop
cmp
pop
leave
nop
push
ljmp
lcall
xabort
mov
mov
push
cmp
add
out
sbb
jno
add
jnp
mov
cld
cs
insb
and
add
add
cli
mov
push
add
add
or
aaa
jl
jo
add
call
into
dec
cli
clc
jnp
pop
call
lret
popf
mov
add
movsl
clc
enter
jne
pop
xchg
xchg
nop
movsl
clc
cmp
clc
or
clc
jge
add
scas
pop
outsl
mov
nop
jmp
cli
pop
pop
es
clc
arpl
add
add
dec
xchg
xbegin
clc
popf
inc
add
mov
mov
push
nop
jmp
add
add
cmpsl
push
sbb
clc
cmp
in
insl
add
movsb
clc
inc
add
xor
add
cli
stos
cltd
mov
aad
movsb
clc
cmp
add
add
add
add
sbb
clc
cmp
mov
adc
add
mov
movsl
clc
mov
add
mov
sbb
mov
add
add
add
add
jmp
fadds
cltd
popa
add
imul
sub
jnp
adc
add
add
push
add
jge
sti
adc
add
add
nop
jmp
add
add
add
loop
cwtl
scas
push
xor
add
push
dec
sbb
add
dec
xorps
add
data16
cmc
cld
cmp
clc
fs
test
add
xor
add
mov
loope
mov
pop
clc
stos
int3
scas
add
add
imul
cmc
dec
jl
sub
inc
add
test
loopne
aas
mov
clc
popa
add
sbb
xchg
jle
dec
mov
nop
jmp
lods
cli
inc
icebp
pop
xbegin
mov
fsubrl
ret
fnstcw
and
add
sub
adc
xor
add
add
add
clc
in
jns
sub
clc
lods
gs
stos
in
mov
clc
cmp
jae
add
add
jne
mov
nop
jmp
icebp
inc
cmpsl
js
out
clc
push
push
mov
jbe
clc
into
xor
add
clc
xchg
mov
clc
divps
shlb
in
fdivp
mov
cmp
test
jmp
jbe
clc
dec
jmp
add
and
add
xchg
add
add
jnp
dec
mov
js
add
iret
or
push
dec
data16
fmull
or
add
daa
clc
cmpsl
clc
lock
jmp
mov
push
mov
xchg
ret
sub
lock
cmp
sar
clc
pop
stc
sbb
rolb
add
rcrl
push
out
imul
clc
stos
sub
lods
jne
xchg
sbb
clc
sbb
pop
inc
add
stos
imul
fwait
and
add
fldenv
add
add
jmp
ret
call
nop
jmp
add
adc
mov
inc
add
xor
add
cld
sbb
sbb
or
add
adc
add
ret
clc
es
cmp
loopne
adc
add
clc
test
gs
sub
add
cmp
add
add
out
push
jb
add
add
mov
paddq
xor
add
add
jns
sbb
in
scas
xchg
xchg
das
mov
mov
xor
add
ljmp
add
clc
inc
clc
out
and
lahf
js
jo
add
push
push
push
mov
xchg
ret
es
add
clc
sub
clc
or
clc
aaa
mov
lea
clc
call
clc
or
inc
add
test
add
sub
pop
pop
pop
mov
push
mov
lcall
jnp
test
bound
add
push
push
clc
cmp
sbb
clc
leave
fs
cs
icebp
cld
dec
or
insb
repz
clc
cmpsl
clc
popf
jge
out
adc
add
clc
movsb
clc
enter
clc
push
cwtl
mov
jp
jbe
add
popa
add
push
clc
cs
imul
add
outsl
mov
clc
pop
arpl
add
clc
dec
test
xor
add
leave
xlat
enter
repz
test
jge
pop
mov
add
or
add
push
add
popa
add
push
xchg
adc
addr16
xlat
and
push
add
adc
add
clc
popf
js
rorb
rorb
cmpsl
clc
xor
mov
ss
add
data16
out
roll
mov
leave
push
clc
fistl
sahf
inc
add
cmp
add
rcl
pop
pop
test
jbe
popa
add
idivb
dec
and
cmp
mov
clc
sbb
sub
add
js
clc
mov
dec
xchg
stos
sahf
test
cmpsl
clc
in
fcomp
push
clc
lcall
fcoms
nop
jmp
pop
push
or
aad
bound
dec
mov
ljmp
add
clc
adc
add
cmp
pop
xabort
mov
add
clc
cmp
out
daa
clc
pop
inc
add
loope
or
sub
push
addb
cmpsl
push
add
push
mov
xchg
ret
roll
add
adc
add
in
xor
add
add
pop
adc
add
mov
add
lods
mov
jle
clc
push
cmp
mov
lahf
icebp
in
add
clc
fstpt
loop
inc
clc
adc
lock
add
jge
sub
clc
cmp
inc
add
mov
add
or
hlt
push
mov
cmp
ljmp
add
icebp
cmpsb
clc
pop
dec
out
inc
add
xchg
xchg
test
adc
add
pop
ja
mov
sbb
jg
add
mov
and
add
cmp
jecxz
jo
add
pop
loope
es
arpl
add
fsts
pop
stos
movsb
clc
loop
xchg
rclb
add
clc
in
mov
add
sub
insb
dec
shrb
sbb
add
pop
pop
jmp
pop
clc
lods
push
fwait
push
add
add
jmp
sub
cmp
nop
jmp
cmpsl
push
cmp
add
negl
add
cmpsl
clc
in
frstor
jmp
cmp
add
mov
loopne
sub
int
fimuls
sar
aad
dec
cmp
pushf
cwtl
enter
nop
jmp
mov
push
bound
dec
pop
mov
clc
jge
test
fdivs
clc
jg
clc
cmp
out
inc
add
inc
clc
and
notb
cld
pusha
add
sbb
jns
or
cmp
aas
mov
xor
clc
mov
clc
mov
mov
push
mov
xchg
ret
out
pop
pop
jge
add
int3
push
and
add
ljmp
mov
pop
xabort
dec
mov
gs
push
push
nop
jmp
pop
rcll
enter
jge
clc
shrl
pushf
mov
hlt
xor
add
cmpsb
clc
mov
add
rolb
pop
add
push
add
clc
xor
add
fdiv
cmp
xor
add
into
loop
jo
add
add
mov
add
repnz
clc
aam
clc
jecxz
out
stos
dec
ja
and
add
mov
add
or
add
cs
mov
nop
jmp
je
cmpsl
or
out
aam
clc
and
add
add
gs
mov
jmp
fldl
add
add
xrelease
dec
insb
mov
clc
add
add
sub
add
ljmp
sub
clc
jo
add
xchg
xchg
cmp
pop
sahf
icebp
inc
add
cmp
mov
repnz
push
call
add
out
xchg
xchg
fxch
test
pop
clc
insb
pop
ficomps
add
add
cwtl
mov
add
add
pop
out
inc
clc
or
add
jbe
in
sahf
lret
movsb
clc
lods
lods
outsb
and
add
add
push
popf
aam
inc
nop
jmp
xor
lods
add
out
out
ds
or
clc
cmp
aas
test
mov
ljmp
mov
push
add
lret
add
mov
sbb
inc
add
jne
inc
addb
cmp
clc
or
xchg
jb
add
xchg
sub
inc
add
xchg
fbstp
call
inc
clc
mov
jb
add
cltd
sar
dec
cmp
aaa
lods
dec
or
clc
adc
aad
xlat
dec
js
jg
push
add
out
fildll
sbb
and
add
add
rclb
add
insb
ror
adc
add
and
add
add
jno
add
je
scas
outsl
dec
ljmp
nop
jmp
jnp
add
add
add
jnp
xchg
notl
sub
add
in
xchg
inc
add
sbb
add
jle
xchg
cli
insb
push
clc
jne
ja
or
stc
pop
jno
add
add
mov
inc
add
loopne
push
add
mov
sbb
jbe
pop
nop
jmp
inc
jne
bound
inc
cmc
or
clc
pop
clc
cmp
add
gs
sub
clc
cmp
and
add
fcmove
loopne
xchg
stos
and
add
js
clc
sbb
add
out
jo
add
clc
add
mov
call
clc
cmp
lcall
add
xor
add
daa
clc
sub
clc
gs
jns
add
fwait
leave
fdivrl
and
add
std
bound
add
mov
add
xchg
lcall
jle
xor
add
clc
jge
aam
stos
cmpsl
clc
mov
sub
mov
adc
jmp
inc
mov
and
add
nop
jmp
add
add
push
sbb
js
inc
add
push
add
jg
dec
xchg
pushf
ja
stc
mov
jmp
add
popa
adc
je
movsl
clc
xabort
fisubrs
ljmp
clc
loopne
jmp
pop
inc
add
ss
cmp
dec
pop
pop
xchg
xabort
clc
rclb
add
xor
and
add
jge
cmp
nop
jmp
movsl
movsl
lock
bound
add
cmp
clc
fs
gs
jnp
add
int
out
jecxz
sbb
add
add
push
sar
clc
out
jne
add
or
push
clc
outsb
fxch
mov
add
add
sar
add
xlat
pop
enter
fwait
lcall
shlb
add
addr16
xor
add
jmp
jle
aad
xchg
icebp
dec
daa
clc
test
ret
push
shlb
jae
add
xor
add
jle
sbb
test
movsl
clc
adc
add
clc
pusha
add
inc
clc
mov
xchg
inc
clc
popa
add
daa
clc
outsb
xor
add
xbegin
clc
das
aaa
xchg
popf
mov
roll
mov
add
add
in
and
out
loop
mov
clc
jg
jl
push
add
lock
xchg
fisttpl
add
nop
jmp
jae
mov
add
decl
test
inc
add
nop
jmp
adc
inc
out
add
add
repz
mov
sbb
add
lods
inc
add
iret
mov
or
iret
aas
mov
mov
nop
jmp
xchg
je
jge
clc
shr
jnp
adc
add
lret
in
aad
add
sbb
add
push
xorb
add
stos
and
daa
clc
mov
push
xchg
nop
jmp
jnp
jge
mov
cmpsl
clc
xor
add
push
xor
add
mov
push
arpl
add
test
adc
add
or
jnp
add
add
sub
clc
fdiv
jmp
clc
cmp
add
addr16
leave
pop
pusha
add
add
pusha
add
xchg
ret
clc
clc
in
repz
loop
sbb
fsubrl
icebp
gs
and
add
clc
and
add
and
add
add
jo
add
out
push
or
add
adc
add
push
mov
xchg
ret
add
pop
push
dec
push
outsb
lods
stos
je
add
rclb
xchg
fistpl
add
add
jno
add
or
add
mov
clc
sar
dec
inc
clc
scas
adc
add
lret
clc
xchg
movsb
clc
into
add
in
adc
add
mov
daa
clc
mov
add
orl
ret
clc
sbb
fldenv
adc
incl
es
pop
jnp
stos
push
add
xbegin
rclb
out
lret
inc
clc
jmp
add
clc
sbb
cmp
add
nop
jmp
and
add
clc
sbb
cli
push
xor
add
jns
fiadds
add
ss
add
repnz
psubq
pushf
pop
inc
add
jno
add
popa
add
push
pop
clc
lret
adc
add
add
add
movsl
clc
pop
loope
out
gs
mov
pop
sbb
fwait
inc
add
inc
add
inc
clc
jnp
add
in
stc
mov
dec
xchg
repnz
push
add
cmp
sti
test
clc
pop
mov
clc
in
and
add
add
mov
push
add
out
fcmovnbe
jl
scas
ret
add
ds
ja
clc
out
xchg
or
movsb
nop
jmp
aad
add
ret
pop
push
je
nop
jmp
adc
inc
add
and
add
push
xor
add
xor
insb
lret
lahf
jnp
bound
add
cmp
add
nop
jmp
movsl
mov
add
and
add
cmp
clc
stos
rorb
push
add
sahf
in
es
loope
cmp
add
and
add
es
outsb
and
pop
addr16
fs
daa
clc
cmp
in
push
add
and
add
dec
mov
mov
mov
push
add
cmp
movsb
clc
test
mov
add
add
add
clc
jno
add
add
cmp
adc
add
sbb
insl
fcompl
cwtl
fs
xchg
push
je
out
xchg
cmp
fsubr
in
mov
cmp
clc
pop
in
stos
jo
add
xchg
mov
add
sar
cwtl
add
add
sbb
imul
pop
clc
mov
add
xchg
clc
insl
enter
inc
clc
insl
pop
dec
mov
hlt
xchg
jp
mov
add
xchg
sbb
add
test
je
jns
add
cli
push
add
data16
stos
dec
stos
aaa
ja
aam
clc
stos
daa
clc
sbb
clc
jmp
clc
inc
add
push
add
call
jmp
es
add
bound
inc
add
ret
push
popa
add
dec
std
in
decl
test
mov
sub
in
icebp
nop
push
js
sub
push
add
xchg
imul
add
fidivrl
clc
mov
add
ror
lcall
add
sbb
test
add
nop
jmp
xor
out
add
jae
add
clc
inc
clc
jg
add
scas
inc
clc
shlb
mov
clc
inc
add
adc
sar
btr
ljmp
jmp
cli
hlt
fwait
in
lahf
pop
daa
clc
and
add
or
rcrb
clc
adc
mov
add
inc
add
js
push
push
push
mov
xchg
ret
out
add
jge
xchg
insb
mov
xor
clc
mov
or
push
std
mov
hlt
pop
jne
cmp
icebp
add
add
clc
stc
adc
add
sarl
jo
add
clc
sbb
add
add
and
add
jno
add
je
mov
out
cmp
jle
clc
imul
add
and
add
clc
sahf
cmp
js
fcomip
jp
cmp
jb
add
add
mov
xor
add
out
fidivrl
mov
and
sbb
adc
add
and
clc
mov
insb
xlat
aam
jp
add
xchg
pop
mov
fdivs
add
ljmp
enter
ja
add
nop
jmp
push
jne
and
repz
outsb
mov
mov
push
clc
pusha
add
insl
xbegin
xor
inc
clc
inc
add
loope
imull
clc
pop
xchg
ja
sarl
fsts
sub
cld
sti
mov
push
mov
popa
sahf
add
add
pop
fcomps
jb
add
lcall
loope
and
add
cs
add
mov
add
gs
push
jle
clc
sub
notb
leave
pop
cmp
js
int
cmpsb
clc
sub
pop
dec
mov
rclb
add
movsl
jne
icebp
lock
add
push
add
push
mov
dec
mov
mov
xchg
ret
add
cmpsl
add
cmp
rorl
clc
push
mov
mov
add
jmp
jge
sarb
jge
pop
inc
clc
dec
and
leave
jbe
cmp
std
cmp
add
adc
add
clc
imul
add
add
loope
push
sar
sub
clc
cmp
jge
push
dec
nop
jmp
add
add
jne
lret
out
mov
in
pusha
add
add
add
call
imull
and
add
icebp
filds
add
mov
push
add
adc
add
out
jmp
out
add
add
clc
pop
jecxz
fstps
add
arpl
add
imul
cwtl
push
pushf
fisubrl
inc
add
pop
bound
add
fsubp
clc
lock
cmp
adc
add
fiaddl
ret
clc
jnp
clc
dec
addr16
imulb
push
neg
add
add
jecxz
dec
shll
clc
fwait
push
add
ja
clc
inc
add
xor
add
clc
jg
add
out
and
add
add
jno
add
add
int3
pop
cmp
add
shrb
cmp
clc
mov
jmp
and
lods
adcb
gs
mov
xchg
fisubrs
clc
and
arpl
add
push
add
xchg
shlb
cmpsl
clc
sar
sti
mov
nop
jmp
jnp
inc
xor
adc
mov
data16
lods
xchg
push
sub
add
aam
adc
adc
add
fcoms
add
dec
enter
add
xchg
loop
mov
add
mov
cmp
jmp
add
push
add
add
clc
add
add
mov
sbb
jmp
jge
jge
cmpsl
add
andb
insb
mov
clc
gs
into
dec
mov
mov
nop
jmp
js
add
stc
mov
pop
cmp
clc
idivl
out
into
movsl
clc
sahf
pop
test
sbb
xor
add
arpl
add
clc
mov
add
mov
jbe
pop
clc
fdivrp
xor
add
push
pop
clc
and
xchg
pop
sar
clc
xchg
cmp
add
das
fsubrs
repz
scas
add
add
dec
mov
cltd
adc
add
and
mov
add
sub
add
clc
pop
mov
sbb
clc
test
ud0
add
add
call
add
jp
inc
clc
add
add
mov
sar
cmp
push
in
xor
add
clc
mov
clc
sub
add
add
sar
and
add
into
push
jmp
out
pop
or
jnp
clc
and
add
clc
and
add
aad
je
nop
jmp
jae
out
and
add
sub
clc
push
add
dec
sub
add
pusha
add
mov
imul
mov
or
clc
inc
clc
sbb
mov
jae
add
cmp
out
imul
xor
add
clc
neg
fwait
push
add
aad
popa
add
xchg
sti
repnz
data16
out
inc
clc
das
jo
add
ror
jb
add
push
nop
jmp
add
lods
add
sbb
inc
clc
dec
or
gs
dec
dec
xabort
mov
movsb
clc
ret
fldcw
mov
imul
jmp
add
mov
bound
add
rcl
shll
clc
jmp
fistpl
dec
or
pop
pop
and
add
and
add
push
mov
xchg
ret
pop
ret
and
add
add
clc
add
out
and
add
dec
cmp
xchg
push
add
pop
fnsave
adc
add
sbb
add
pop
shlb
clc
mov
test
pusha
nop
jmp
out
icebp
xchg
rcl
xchg
sar
sar
imul
xchg
pop
clc
loop
sar
inc
add
cwtl
sub
add
arpl
add
mov
lret
push
push
push
mov
xchg
ret
add
cli
add
xchg
jo,pn
add
enter
add
add
and
add
clc
jle
das
and
rol
clc
std
xchg
lret
add
clc
xchg
xor
add
clc
sahf
popa
add
repz
cmp
nop
jmp
ret
add
push
jne
clc
sar
fbstp
add
push
nop
jmp
js
add
jne
lock
add
cld
dec
test
clc
das
enter
add
jno
add
mov
aam
push
add
sbb
fildll
add
add
nop
jmp
sbb
sbbb
and
add
bound
add
mov
clc
add
and
cmpl
jmp
xorb
pushf
ja
test
cmp
add
test
add
jb
add
repz
inc
clc
dec
pop
sub
pop
call
add
jge
into
inc
add
mov
imul
push
nop
jmp
inc
ret
and
dec
pop
mov
std
xor
add
test
lock
sub
add
add
add
add
clc
pop
loope
push
add
fst
jmp
clc
outsl
mov
test
mov
call
add
mov
add
push
clc
push
jge
aas
push
movsb
clc
cmp
add
mov
clc
mov
popa
add
scas
mov
mov
clc
sarb
fistl
cmp
xabort
clc
jno
add
or
jecxz
leave
and
sub
clc
sub
sbb
jmp
mov
dec
mov
inc
clc
shrb
fldt
movsb
clc
mov
data16
fnstenv
add
clc
mov
clc
arpl
add
mov
xchg
ret
add
roll
insb
lock
add
loopne
mov
clc
clc
das
add
add
add
or
xchg
and
add
inc
add
sahf
mov
add
repz
scas
pop
clc
pop
push
mov
inc
add
scas
cmp
mov
leave
or
clc
inc
add
sub
popa
add
push
dec
clc
cmp
add
stos
in
pop
mov
cld
ret
xbegin
mov
add
xchg
ljmp
xor
add
lea
add
pop
xor
fs
lods
sub
add
jbe
pushf
inc
add
bound
add
clc
xor
add
add
and
clc
xor
sti
icebp
pop
cmp
add
loopne
test
clc
mov
xchg
incl
cmpsl
ret
add
xor
add
out
fildl
clc
pushf
mov
out
pop
dec
fistl
add
pop
gs
cmp
add
mov
cmp
pop
push
add
es
mov
add
mov
clc
push
inc
clc
cmp
into
mov
je
jnp
clc
jbe
clc
and
add
adc
out
cmp
in
inc
clc
xabort
pop
push
clc
pop
jne
clc
arpl
add
push
adc
add
add
ret
add
cltd
mov
add
insl
bound
add
add
ret
xor
add
outsl
xchg
mov
lods
movsl
clc
adc
mov
jmp
sbb
jge
add
push
clc
push
pop
xchg
cmp
clc
test
fmull
fdivrs
rclb
ret
jne
out
sub
clc
jno
add
int
add
xchg
jne
clc
es
das
adc
jno
add
movsl
clc
je
clc
int
cmp
clc
cli
test
clc
enter
jo
add
jge
inc
add
cmc
scas
in
dec
leave
and
push
mov
clc
mov
push
pop
fwait
iret
xor
add
clc
adc
lods
outsl
aam
hlt
test
js
aaa
ret
add
sbb
loope
lods
and
add
mov
xchg
insl
in
fidivrs
cmp
clc
mov
cmp
clc
sub
fstpt
cmp
jecxz
int3
pop
movsl
clc
add
jno
add
clc
data16
fdivr
mov
insl
fcmove
jns
add
and
add
sahf
ret
clc
jp
pop
xor
int3
ljmp
scas
enter
jmp
incl
jge
mov
xchg
add
add
clc
mov
clc
rcl
out
sahf
push
add
add
sar
clc
lcall
fidivs
mov
pushf
or
mov
add
mov
pop
add
add
test
clc
cmp
das
rclb
dec
fidivs
add
dec
xchg
pop
clc
fs
sar
sub
add
popf
icebp
arpl
add
add
insl
jmp
clc
aad
clc
movsl
clc
mov
clc
jp
add
cli
fs
or
sub
clc
sar
enter
or
aam
lcall
jmp
add
add
lods
add
test
into
pop
int
inc
clc
sub
mov
cli
ss
adc
add
push
adc
add
push
scas
push
dec
lea
xchg
call
pop
mov
add
clc
lret
daa
clc
jno
add
cs
add
bound
mov
add
clc
add
add
push
jo
add
in
cmp
jle
in
fs
xor
clc
adc
add
imul
pop
clc
mov
inc
add
mov
add
testl
out
push
int
clc
fisubrs
add
mov
clc
xchg
idivb
lock
clc
adc
add
aaa
mov
mov
xorb
add
lea
ljmp
into
mov
clc
push
cmp
mov
add
scas
cs
adc
add
icebp
inc
clc
lods
cmp
add
mov
add
stos
sub
add
sub
lahf
adc
add
clc
jmp
scas
outsb
pop
mov
push
cli
pusha
add
mov
cld
inc
clc
out
data16
sub
add
sahf
sbb
clc
das
pushf
out
jge
mov
nop
jmp
icebp
sarl
inc
clc
mov
add
push
sbb
mov
inc
clc
test
push
adc
stc
xor
add
mov
stc
in
out
xchg
mov
inc
add
add
mov
ss
add
push
and
add
add
clc
flds
out
mov
push
jmp
sbb
movsl
mov
xor
clc
mov
inc
add
mov
add
add
and
fmuls
popf
cmp
movsl
clc
mov
aas
lods
pop
inc
add
test
clc
das
push
aam
lret
aam
clc
fwait
adc
data16
cli
push
jg
imul
test
mov
xchg
leave
dec
lahf
mov
clc
add
add
adc
add
mov
mov
push
jmp
aad
add
push
ret
clc
loop
icebp
adc
add
add
loopne,pt
sbb
in
mov
jmp
dec
xchg
test
and
add
xor
push
lcall
add
add
stc
dec
data16
lea
jmp
add
shlb
add
push
xor
nop
jmp
xchg
mov
clc
add
add
add
cmp
cmp
add
add
xchg
adc
sub
nop
jmp
xor
xchg
fincstp
incl
ret
nop
jmp
movsl
push
xchg
aad
sarb
scas
inc
add
out
mov
add
fwait
in
or
add
xbegin
cmpsb
clc
adc
lret
les
nop
jmp
jle
aad
push
pop
fdivrp
jp
inc
add
cmp
nop
mov
clc
cmp
sbb
and
add
sbb
add
push
push
nop
jmp
in
js
rol
addb
imul
add
outsl
adc
add
xchg
xor
add
mov
fwait
jg
lods
pop
stos
lret
stc
mov
xor
iret
mov
stc
int3
cli
adc
clc
adc
push
call
incl
mov
cmc
xchg
cmp
mov
sub
nop
mov
add
pop
sar
clc
cmp
push
nop
jmp
xor
add
movsl
ret
cmp
add
inc
add
jl
add
std
xor
add
add
fbld
pop
clc
jl
adc
enter
add
repnz
push
add
cwtl
scas
fmul
sahf
dec
pop
nop
cmp
jnp
clc
jne
add
cmpsb
clc
mov
jl
add
add
pushf
fs
or
hlt
lcall
add
add
add
add
test
push
add
cmp
adc
add
lahf
loop
ss
fdivrp
sbb
dec
and
loope
dec
pop
xor
add
clc
add
add
pop
outsl
movsb
clc
leave
pop
xchg
inc
clc
pop
out
dec
cmp
add
mov
clc
test
add
mov
add
add
push
call
nop
jmp
add
lahf
xlat
cmp
clc
jns
jp
clc
push
cli
add
mov
mov
cmp
add
xor
add
popf
or
clc
jae
add
add
cli
jnp
ret
cmp
xor
cmp
mov
add
dec
stos
lods
lock
je
clc
int
and
add
xabort
clc
adc
add
lret
push
xor
nop
jmp
out
adc
out
into
sbb
jmp
xor
add
adc
add
aas
fidivrl
loope
fst
mov
add
nop
jmp
xor
je
inc
clc
jmp
loop
mov
clc
mov
cmp
mov
out
dec
jle
and
add
lcall
idiv
jmp
nop
jmp
add
out
sbb
arpl
add
clc
fs
xor
add
push
mov
sbb
nop
jmp
push
add
pop
lock
clc
lret
mov
cmp
mov
adc
add
out
rol
cmp
dec
lea
clc
ret
clc
cmp
inc
clc
roll
and
add
adc
add
lret
mov
jle
clc
mov
imul
add
clc
fldl
lret
xchg
jb
add
jae
jmp
add
jb
add
inc
add
pop
or
or
jmp
fidivs
cli
popa
add
ficomps
data16
nop
cmp
add
sar
divl
add
movsb
clc
adc
lods
push
sub
add
ljmp
add
add
call
aas
repnz
int3
push
add
jl
xchg
xbegin
clc
push
add
sarl
clc
out
pop
or
mov
clc
dec
mov
clc
aas
addr16
fwait
cmp
faddl
xchg
ret
pop
jge
add
mov
add
jbe
clc
xlat
pushf
mov
pop
jne
clc
dec
lahf
inc
clc
push
mov
nop
jmp
add
push
and
cmp
and
add
mov
mov
jmp
add
adc
sbb
cld
add
nop
jmp
ret
jge
clc
and
pop
clc
insb
scas
pusha
add
mov
sub
jl
sub
clc
mov
add
mov
add
cmp
pop
adc
add
clc
pop
ja
add
cmp
add
fisttpll
and
add
push
mov
xchg
ret
push
cmp
add
int
add
scas
push
add
pop
dec
lea
movhps
ds
cmp
scas
and
add
out
out
fdivl
jmp
xchg
adc
add
clc
arpl
add
clc
mov
ret
clc
jmp
clc
mov
sub
add
mov
or
popa
cmp
repz
add
cmpsb
clc
adc
add
sar
cmpsl
clc
mov
push
mov
xchg
ret
pop
out
shll
add
mov
sub
push
jge
add
insl
scas
cmp
jbe
jg
ficoml
add
leave
dec
fwait
sar
loop
pop
mov
pusha
add
gs
push
pop
insb
adc
add
add
cmp
mov
pop
push
add
mov
aas
adc
es
add
add
jne,pt
pushf
mov
adc
clc
sub
ret
es
stc
jne
jp
jnp
arpl
add
add
movsb
clc
and
add
add
int
or
clc
sub
add
pop
in
mov
and
clc
pop
lahf
jo
add
dec
inc
clc
sar
clc
xchg
dec
mov
cld
nop
jo
add
clc
cli
pop
clc
popf
and
add
clc
fidivrl
js
mov
pusha
add
push
add
pop
mov
push
popf
bound
add
cmc
push
add
insl
hlt
imul
mov
or
inc
add
sar
ss
clc
cmpsb
clc
iret
and
add
add
add
clc
pop
pop
dec
sbb
sti
nop
jmp
es
pop
icebp
adc
rdmsr
add
rorb
cwtl
mov
out
inc
add
nop
pop
jecxz
std
flds
add
pop
addr16
xchg
mov
or
int3
repz
xor
cmp
into
and
add
dec
lock
adc
ljmp
nop
jmp
jle
js
sbb
jecxz
fidivl
rep
clc
call
mov
xchg
ret
and
inc
ret
iret
cmp
rcpps
add
add
xbegin
cli
clc
adc
pusha
add
fs
add
add
clc
call
jmp
cli
pop
popa
jne
add
adc
add
nop
jmp
add
roll
jge
jbe
addr16
xchg
sti
xchg
push
dec
pusha
add
call
jmp
cli
jle
mov
inc
add
mov
push
add
add
add
dec
sti
pop
ficompl
clc
cmp
sbb
popf
incl
jae
jne
push
push
xchg
cmp
cmp
mov
add
push
outsb
jo
add
nop
jmp
cli
out
cmp
icebp
aad
imul
xor
add
add
sbb
in
bound
add
add
clc
xbegin
sar
xbegin
xchg
jmp
adc
cmp
clc
and
add
add
dec
loope
cmp
mov
push
mov
xchg
ret
jnp
jnp
pop
xor
add
xchg
sbb
dec
and
add
adc
mov
add
lret
insb
repz
pop
jmp
and
add
adc
add
add
mov
ret
jne
push
jo
add
loope
jne
stos
xbegin
add
jge
pop
vandps
jmp
adc
inc
add
cmp
add
or
stc
inc
add
jbe
mov
add
cmp
stos
aas
add
add
fwait
mov
clc
mov
jg
cmp
popf
mov
add
test
out
fdivrl
adc
add
add
inc
add
xor
add
add
add
jae
add
call
clc
fs
inc
add
push
push
add
nop
daa
clc
mov
clc
es
mov
pop
push
add
cwtl
negl
clc
mov
test
clc
loope
in
jno
add
push
lods
add
add
add
nop
push
pushf
pop
lret
xchg
cmpsl
clc
push
xlat
repnz
clc
xchg
test
sbb
clc
testl
add
incb
imul
add
jl
add
jbe
jo
add
clc
jb
add
cmp
call
flds
add
add
clc
sahf
xchg
std
inc
clc
int
clc
in
dec
add
add
mov
flds
cmp
dec
and
add
incl
add
add
es
imul
cmp
jmp
out
add
jge
icebp
add
push
adc
add
aaa
inc
add
jbe
mov
push
mov
xchg
ret
xchg
je
clc
fwait
push
or
out
mov
mov
add
out
pop
lods
push
xor
add
pop
lock
push
add
imul
xor
add
test
call
incl
add
lods
fincstp
mov
addr16
inc
clc
popf
xbegin
add
adc
add
clc
push
mov
nop
jmp
out
adc
xor
add
dec
fucomp
mov
leave
incl
sbb
jmp
jle
sbb
xchg
clc
sub
dec
xchg
vmaxps
add
clc
or
add
or
xor
add
sar
and
add
clc
and
add
fistps
xor
add
add
shrl
hlt
jns
jge
cmp
jle
clc
enter
inc
clc
fmull
testb
add
pop
lret
repz
add
pop
out
ret
inc
add
push
add
jnp
test
popf
std
jnp
clc
pop
cmp
shll
add
inc
clc
add
add
add
xbegin
add
or
add
test
rorl
add
clc
insl
push
pop
loope
sahf
and
fistl
insl
push
inc
add
push
push
imulb
arpl
add
cld
add
clc
sub
mov
push
clc
dec
jo
add
jp
clc
pop
and
mov
fs
jmp
inc
sbb
add
dec
mov
dec
cmp
cltd
fxtract
mov
xor
in
fmul
shl
push
clc
rolb
clc
mov
aam
dec
repnz
stos
or
pop
mov
scas
mov
add
xchg
cmp
add
adc
add
ret
clc
loope
icebp
sar
mov
std
jno
add
lods
scas
insl
sar
xor
add
dec
shll
xabort
lods
xor
add
jae
add
mull
in
and
add
add
test
add
sar
push
add
push
jmp
add
xchg
pop
xor
add
mov
xchg
ret
out
jge
lock
clc
dec
xlat
movsl
clc
inc
add
data16
pop
and
add
add
jns
sbb
clc
fisttps
jg
mov
lret
sar
cwtl
in
daa
clc
insb
jns
icebp
jae
add
jecxz
jns
add
aas
xchg
adc
add
jge
fidivrs
dec
mov
clc
pop
filds
pusha
add
clc
loopne
pop
mul
clc
das
cmpsl
clc
cld
cmc
test
arpl
add
clc
xor
add
pop
and
dec
pop
clc
insl
sub
lods
call
clc
inc
add
inc
add
jno
add
mov
sbb
inc
and
jmp
out
xchg
out
adc
add
xor
mov
popa
add
stos
test
jle
fidivrl
clc
mov
clc
out
mov
add
data16
aad
in
mov
repz
rcrb
jnp
clc
pop
fldl
add
cwtl
movsb
clc
fwait
rcrb
imul
sbb
add
xchg
cmp
clc
lods
mov
fisttpl
iret
and
lock
cmp
mov
enter
pop
mov
cmc
lret
divb
add
nop
jmp
rclb
and
test
sti
mov
add
sub
fstp
shll
in
push
add
mov
aas
pop
in
mov
xor
jo
add
add
add
pop
clc
rclb
add
add
add
add
cmc
mov
clc
mov
cwtl
cmpsl
clc
cmp
pop
mov
add
fstps
add
test
ret
clc
xor
add
lret
inc
clc
lea
mov
xchg
ret
add
bound
mov
clc
sarl
push
aam
gs
sub
clc
in
push
mov
sbb
add
aad
xor
add
cmpsb
clc
in
pushf
shlb
clc
jg
add
in
xchg
sahf
mov
jmp
pop
add
push
out
je
add
ret
cmp
add
pop
ficomps
add
xchg
sub
cmp
push
pop
nop
jmp
sbb
ret
pop
pop
icebp
dec
push
xchg
nop
jmp
add
popa
push
cmp
movsb
clc
cld
gs
mov
clc
mov
adc
ja
add
je
ja
loop
jno
add
push
add
mov
ret
mov
xchg
ret
jnp
hlt
mov
and
add
add
xabort
shll
add
xchg
sbb
add
test
lahf
out
mov
inc
clc
and
add
mov
test
mov
jno
add
add
jg
clc
pop
cwtl
push
push
stos
jb
add
add
into
sbb
lea
push
mov
xchg
ret
add
lret
movsl
clc
ficomps
in
push
loope
pop
mov
out
imul
or
sar
aaa
not
or
clc
test
mov
mov
clc
add
add
push
insb
pushf
mov
je
cld
insl
cmpsb
clc
inc
add
or
insl
mov
inc
add
sbb
fsubl
mov
jg
xbegin
arpl
add
loope
sub
fdivs
or
jb
inc
add
adc
pop
das
jno
add
clc
or
clc
jnp
add
movsl
clc
xor
cld
in
lea
clc
lcall
add
and
mov
clc
or
mov
mov
and
cld
pop
mov
shlb
add
clc
push
push
clc
mov
and
jmp
aad
sbb
add
fisttpl
clc
sbb
pop
arpl
add
or
or
std
sarl
ds
push
mov
jbe
add
add
sbb
or
movsl
clc
push
clc
sbb
shll
xabort
clc
mov
clc
aad
pop
movsb
clc
jbe
clc
sub
add
push
mov
nop
jmp
js
lock
clc
int3
es
adc
add
sub
pop
jb
add
rcll
jns
clc
and
add
daa
clc
cld
xchg
mov
in
jmp
pop
jne
add
add
add
mov
inc
clc
cmp
aam
mov
nop
jmp
pop
add
jnp
sbb
add
add
add
push
add
inc
add
pusha
add
add
add
add
dec
push
push
nop
jmp
and
mov
clc
push
sub
xabort
clc
cmp
clc
dec
add
add
add
clc
xchg
std
ret
std
xor
add
or
pop
mov
dec
dec
pop
xchg
lret
jmp
fldt
push
out
sub
sahf
xchg
cmp
inc
clc
mov
inc
clc
ret
cmp
clc
add
gs
cwtl
loop
and
add
clc
js
outsl
dec
js
leave
int
clc
xlat
mov
shll
mov
push
mov
xchg
ret
add
jge
xor
add
mov
ffreep
clc
fdivrl
cmp
xchg
cmp
and
add
shrl
cmp
sub
add
add
aas
mov
mov
sub
and
mov
cmp
clc
call
add
cmp
pop
pop
test
sbb
clc
cs
fsts
add
jo
add
out
xchg
es
add
lods
inc
add
pop
clc
cmp
pushf
push
bound
add
cmp
add
test
out
cmp
and
add
add
add
add
add
js
add
jmp
pusha
add
mov
jg
sbb
pause
jmp
xor
push
or
es
loope
fdivl
nop
jmp
pop
inc
xchg
jne
inc
xor
negb
add
pop
push
add
inc
clc
adc
add
mov
or
and
sub
inc
clc
jbe
dec
shlb
clc
push
add
mov
add
mov
test
lods
imull
repnz
idivl
addr16
fcomi
sahf
lret
add
dec
jl
clc
loope
push
clc
sub
das
and
out
leave
cmpsl
clc
jecxz
add
add
clc
shll
or
clc
adc
add
clc
inc
add
cmp
add
out
int
daa
clc
mov
fstpt
jge
popa
pop
push
int
lret
ss
and
add
clc
cmpsb
clc
add
push
add
add
dec
pop
shrl
pop
sub
scas
inc
clc
mov
mov
clc
push
add
nop
jmp
ret
cmpsl
clc
mov
inc
clc
clc
pop
sub
clc
pop
sar
clc
decl
jmp
pop
push
shlb
cmp
repnz
fstpl
add
push
cmpsl
inc
add
add
cli
leave
pop
decb
jb
add
add
xchg
jp
clc
fwait
std
scas
in
movsb
clc
scas
sub
clc
fs
dec
lods
jge
jmp
cmp
repz
add
clc
jle
clc
sahf
push
mov
nop
jmp
sbb
add
sbb
cmp
out
cmp
clc
cmc
jb
add
jae
add
int
xabort
nop
inc
clc
clc
jne
clc
aaa
pop
adc
jl
xor
clc
sub
clc
xor
add
add
mov
or
clc
roll
add
mov
inc
add
shrl
fs
sbb
mov
jmp
nop
jmp
add
clc
lods
hlt
sub
sub
add
sub
add
push
add
or
push
aad
sarb
daa
clc
data16
imul
add
mov
cmpsl
clc
cwtl
repnz
es
jae
add
xchg
or
cmp
clc
jp
addr16
pop
fadd
clc
sub
fists
ss
mov
pop
push
mov
xchg
ret
jnp
xor
jge
clc
jecxz
pop
neg
jecxz
push
xchg
incl
add
lock
add
xabort
mov
clc
xbegin
xor
add
push
mov
mov
add
aam
add
jns
add
push
add
add
add
add
nop
jmp
sbb
adc
push
imul
xchg
pop
adc
add
pusha
add
push
fisttps
scas
inc
add
repnz
cmpsl
clc
xchg
push
add
push
hlt
jge
js
push
add
push
shl
clc
stos
push
sub
and
cli
adcb
add
in
mov
clc
push
xabort
jbe
clc
lahf
mov
add
pop
lahf
das
mov
clc
cwtl
ss
xchg
movsb
clc
mov
clc
pop
sub
clc
jmp
push
test
incl
cmp
add
mov
stos
nop
jmp
roll
js
inc
clc
xor
mov
popa
add
mov
cmpl
nop
jmp
jne
push
adc
add
in
mov
pop
test
push
sbb
data16
js
clc
sahf
xchg
fcom
repz
xchg
push
lret
add
xbegin
dec
gs
dec
mov
or
mov
add
xor
pop
jmp
jne
clc
sti
insb
push
mov
clc
xor
imull
push
hlt
inc
add
aam
adc
clc
add
add
sti
dec
loop
add
add
add
aam
clc
cmp
sub
xchg
data16
xor
add
inc
add
xor
add
clc
mov
test
in
pop
mov
in
jle
dec
fwait
popf
sub
clc
xchg
ljmp
or
jbe
aam
push
xchg
dec
loop
fdivr
and
add
add
clc
pop
pop
clc
xor
add
add
mov
subl
push
mov
xchg
ret
in
out
dec
mov
pop
cmc
cld
add
add
add
mov
add
mov
clc
adc
add
into
xor
add
xor
add
dec
test
clc
mulb
fnsave
clc
scas
cmp
lea
and
add
and
add
clc
and
nop
mov
cmp
add
scas
aas
mov
fcomi
inc
add
add
nop
jmp
out
pop
sbbb
jne
jmp
add
add
push
jmp
nop
jmp
add
push
mov
add
add
add
cli
inc
ret
inc
add
aam
clc
loope
clc
popa
add
dec
jno
add
add
clc
dec
xlat
dec
in
sbb
ffree
clc
js
jb
add
repz
add
test
loopne
movsl
clc
adc
add
add
mov
clc
sbb
nop
jmp
jae
add
adc
jne
mov
cld
outsl
mov
lods
mov
ds
add
fdivrp
jecxz
pop
jb
add
aam
sar
mov
add
add
cs
clc
xchg
lods
shl
daa
clc
or
gs
hlt
aam
cwtl
fs
dec
push
clc
pop
cmovle
clc
pop
mov
add
jo
add
clc
inc
add
jmp
add
loope
popa
add
in
cmp
fsubp
clc
repnz
insb
cmp
push
add
nop
jmp
movsl
add
add
mov
mov
add
dec
pop
lods
nop
pop
inc
add
cmp
add
xchg
adc
add
addr16
imul
add
cld
rcll
call
pop
lcall
jae
add
add
cmp
add
clc
insl
cmp
cmp
mov
lret
in
adc
pop
scas
das
addr16
mov
mov
lods
nop
jmp
add
ret
clc
aaa
cld
jp
cmp
mov
rcrb
or
mov
cli
mov
add
incb
cmp
add
jge
pop
inc
add
je
and
add
add
bound
add
add
push
clc
xchg
sahf
dec
addr16
add
add
clc
and
int3
pop
adc
add
clc
imul
inc
add
sub
mov
push
rcll
add
iret
rep
push
std
mov
clc
sahf
push
push
mov
nop
jmp
add
push
inc
add
xchg
mov
sar
cmp
mov
xchg
fs
daa
clc
pop
and
add
fsubl
add
adc
add
pop
decl
mov
jmp
out
push
jle
pop
push
add
cmp
stos
sub
clc
out
testl
ret
fcompl
es
nop
jmp
xchg
xchg
mov
or
loope
mov
mov
add
and
add
add
popf
imul
mul
clc
dec
in
inc
add
adc
daa
clc
sub
cmp
ret
clc
stos
daa
clc
inc
clc
frstor
add
add
add
push
or
filds
jg
mov
jl
sbb
jmp
cmp
inc
out
dec
xchg
mov
add
nop
jmp
add
pop
mov
repz
out
xbegin
pop
push
xchg
sbb
lcall
gs
mul
clc
adc
mov
pop
repz
add
pushf
cmp
add
add
pop
sbb
pushf
jge
add
push
xchg
clc
repnz
add
clc
mov
pop
repz
xor
add
cltd
add
add
pop
aad
clc
or
gs
cmpsb
clc
jns
ja
xchg
out
sub
mov
add
ds
clc
fcmovnb
clc
push
jg
xor
jmp
xchg
in
movsb
clc
mov
xlat
aaa
jle
clc
stos
mov
clc
fsubrl
clc
fcompl
lret
add
jmp
jle
cli
adc
mov
movsb
clc
push
mov
add
in
and
adc
mov
add
iret
jb
add
cmc
pop
xchg
fwait
and
int
clc
adc
add
xlat
cli
xor
add
add
clc
shrl
outsb
cmpsl
clc
in
psraw
pop
pop
jne
clc
into
movsl
clc
pop
mov
clc
nop
mov
sar
add
dec
xchg
mov
mov
xchg
cwtl
mov
mov
push
nop
jmp
xchg
in
popa
jne
out
lret
clc
add
add
add
adc
add
push
add
clc
fnstenv
add
add
stos
dec
mov
clc
mov
adc
inc
clc
ss
fwait
cmpsb
clc
std
fwait
cmp
jo
add
clc
dec
jmp
add
mov
ja
lret
inc
nop
jmp
out
movsl
xchg
out
ret
xor
add
mov
and
add
popf
pop
sar
xchg
das
sar
clc
cmp
clc
dec
in
repz
mov
add
rcll
add
insb
inc
clc
jecxz
lock
clc
imul
sbb
inc
add
iret
fldl
imulb
inc
adc
incl
ret
pop
jne
add
sub
add
add
rol
clc
fbstp
add
movsl
clc
jecxz
jb
add
lcall
xchg
adc
add
clc
out
nop
cmp
add
clc
xor
clc
test
mov
xchg
ret
aad
ret
xor
div
inc
add
dec
sbb
xchg
jnp
out
add
or
add
out
mov
ret
add
call
clc
inc
add
enter
clc
icebp
mov
clc
and
add
inc
add
inc
clc
push
inc
clc
cld
cmpsb
clc
cwtl
xchg
ret
clc
bound
add
jbe
repz
and
add
add
clc
in
jl
add
jecxz
add
add
nop
jmp
adc
add
xchg
sub
pop
fdivrl
mov
clc
mov
clc
call
add
inc
add
dec
test
xchg
cmp
push
clc
mov
jmp
insl
jae
add
pop
mov
inc
add
pop
dec
aam
decl
inc
lret
call
pop
rolb
cmpsb
clc
push
adc
sub
cmp
ja
cmp
pop
cmp
mov
aam
int
stos
enter
lea
mov
data16
test
sub
nop
jmp
mov
push
inc
out
sar
fidivl
shrb
add
add
add
jne
mov
xor
clc
fldl
clc
cld
js
add
pop
es
out
stc
add
cmpsl
clc
mov
clc
fs
sub
sti
push
add
clc
jno
add
add
es
cltd
jbe
inc
clc
fwait
add
add
clc
cs
fs
sbb
jmp
add
push
add
add
jge
sahf
test
mov
pop
enter
addr16
stos
stc
int3
sbb
dec
shlb
sahf
dec
loopne
cli
mov
sarb
cmp
jmp
add
fs
adc
add
rcll
clc
fnclex
clc
cmp
icebp
fwait
jle
ds
add
push
outsb
inc
clc
pop
clc
push
add
jp
mov
sub
sbb
push
data16
ljmp
cmpxchg
movsl
clc
mov
clc
cmp
push
cmp
add
pop
fwait
punpckldq
add
add
adc
clc
xchg
movsl
clc
adc
add
clc
cmp
inc
clc
lahf
std
xchg
insl
cwtl
add
add
rcrl
push
icebp
jnp
fsubrs
sub
add
add
imul
jne
clc
pop
mov
out
ja
loopne
insl
pop
cmp
add
das
std
scas
inc
add
jno
add
mov
insl
fucomip
and
add
xor
nop
jmp
roll
popa
ret
sub
lods
or
clc
jne
add
sub
inc
add
je
add
stos
jnp
clc
push
add
xabort
add
test
loope
addr16
lret
mov
data16
cmp
jp
sar
and
add
add
add
xor
add
add
add
cmp
pop
je
jp
cltd
sub
add
pop
adc
add
push
add
loopne
mov
jmp
mov
ret
jle
aad
mov
iret
mov
fmul
out
dec
notl
lea
aaa
or
xchg
ret
adc
sbb
imul
inc
add
jnp
clc
jae
add
div
sub
sub
clc
enter
add
outsl
mov
pop
clc
hlt
pop
jl
clc
dec
sbb
gs
pop
dec
lea
add
loopne
xor
add
add
mov
cmp
xor
add
clc
sub
jl
clc
jg
clc
sbb
mov
sub
movlps
add
mov
ja
ja
adc
add
jns
clc
sub
clc
cmp
add
inc
clc
fidivrs
dec
ret
clc
lret
inc
clc
loop
sbb
clc
sar
fsubs
add
imulb
imul
bound
add
adc
add
hlt
mov
sbb
mov
lock
push
aaa
push
add
cli
ja
or
ss
xor
add
add
loope
test
mov
push
jle
pushl
push
es
pop
add
clc
push
dec
movsb
clc
pushf
adc
add
push
add
add
mov
nop
jmp
inc
add
aam
bound
add
add
cmp
cmpsb
clc
movsl
clc
fisubrs
clc
sbb
jmp
nop
jmp
aad
aad
xor
icebp
in
incb
push
scas
jmp
add
mov
out
pushl
push
mov
xchg
ret
mov
cmpsl
clc
ss
jbe
mov
add
add
test
mov
dec
inc
add
push
cmp
xor
add
add
mov
fiadds
std
xchg
pushf
pop
cmc
jle
aam
clc
jb
add
push
data16
jecxz
jns
jnp
add
add
clc
std
repnz
jle
push
rorb
add
mov
mov
mov
bnd
add
mov
clc
adc
clc
out
mov
or
add
outsl
lret
es
int
add
and
add
mov
add
add
xchg
cmp
or
add
clc
cmp
dec
ss
clc
cli
sub
sbb
clc
push
in
lods
sar
jl
sub
add
movsl
clc
and
mov
cmp
clc
sti
lea
popa
add
fs
xchg
imul
or
popa
add
cmp
and
add
add
mov
push
clc
xor
add
sub
pop
das
or
pusha
add
insb
gs
enter
hlt
inc
add
jbe
clc
jecxz
cmpsb
clc
push
add
mov
ud1
loope
or
clc
cwtl
fwait
test
dec
scas
push
add
arpl
add
mov
test
pop
sub
test
sbb
clc
mov
xchg
inc
add
rolb
fnstcw
lods
push
add
nop
jmp
cli
out
imul
add
pushf
jl
clc
sbb
je
clc
cld
leave
add
add
arpl
add
pushf
inc
clc
ljmp
fdivrs
jmp
icebp
in
out
cli
out
push
push
push
mov
xchg
ret
add
and
aaa
out
dec
imul
add
sar
mov
pop
popf
out
push
add
cltd
mov
insl
sbb
mov
sub
ret
and
out
mov
aam
add
ret
jns
mov
clc
sbb
add
fnstenv
leave
nop
jmp
aad
add
or
ds
mov
xchg
std
lret
sar
xor
add
adc
mov
add
and
add
cmp
cmpsb
clc
cmp
jl
fisubl
add
pop
mov
pop
stos
cmp
add
xchg
sbb
mov
add
jmp
addb
cli
or
mov
push
add
mov
mov
es
movsl
clc
pop
clc
scas
push
popf
mov
out
out
cmc
pop
jno
add
xchg
sub
add
mov
add
hlt
out
arpl
add
lahf
lret
add
cmp
clc
xabort
clc
cmp
in
xor
add
iret
scas
into
sar
leave
mov
sub
jp
loope
pushf
cmp
repnz
sub
add
into
push
add
or
clc
ret
clc
inc
clc
mov
push
add
clc
sbb
ss
sbb
jnp
mov
lock
incl
add
push
push
inc
cli
pop
mov
clc
int3
and
add
mov
mov
add
or
add
clc
aad
daa
clc
mov
add
rcr
cld
neg
mov
xchg
jno
add
ja
add
add
jl
mov
cwtl
sub
push
add
sub
insl
pop
and
add
add
insl
jo
add
add
push
jl
sbb
add
pusha
add
js
xchg
clc
xchg
int
add
add
cmpsl
clc
sbb
sahf
sti
pop
aas
dec
test
clc
lcall
dec
mov
sar
add
insb
xchg
inc
add
cmp
idivb
jge
or
add
sub
clc
sahf
ret
and
add
add
adc
add
mov
and
add
add
xchg
pop
clc
in
or
add
testb
add
pusha
add
push
inc
nop
jmp
add
shr
jle
push
fnstcw
clc
lret
inc
clc
jne
cmp
push
pop
xchg
in
cli
sbb
clc
loop
stos
lret
pop
je
pop
jne
mov
pop
clc
push
add
test
jmp
push
push
push
mov
xchg
ret
icebp
or
mov
cmp
cmp
add
dec
mov
lahf
inc
add
mov
push
nop
jmp
jge
add
clc
mov
mov
imul
add
cmp
inc
add
test
aad
inc
add
cwtl
push
add
add
clc
mov
mov
add
add
clc
xchg
dec
in
daa
clc
lahf
cmp
fxam
clc
pop
ja
clc
popf
bound
add
add
pop
clc
mov
jnp
lea
nop
jmp
or
lods
mov
adc
add
mov
clc
fsubp
clc
int3
jo
add
idivl
xbegin
add
pop
pop
jae
add
xchg
mov
sub
add
dec
and
add
imul
add
add
clc
mov
clc
cmpsb
clc
ja
and
add
out
outsl
pop
mov
xchg
xchg
scas
xor
add
add
mov
test
add
inc
add
push
pusha
push
mov
xchg
ret
es
sbb
clc
in
repz
fsubrp
push
add
lods
push
add
mov
inc
clc
cmp
int3
add
add
add
insb
fcmove
ret
clc
out
cwtl
insb
movsl
clc
jb
add
clc
movswl
dec
push
ret
nop
jmp
add
add
shr
jnp
insb
add
add
dec
movntq
out
cltd
dec
cmpsl
clc
cmp
add
out
or
clc
xor
xor
add
mov
fnstsw
icebp
jae
jnp
push
ret
clc
int
call
sub
out
mov
add
es
push
add
jbe
mov
clc
jns
push
clc
out
push
inc
clc
jno
add
mov
nop
jmp
jae
jne
cli
mov
inc
clc
int3
and
imul
clc
ja
clc
js
mov
push
nop
jmp
add
adc
add
add
mov
add
icebp
push
add
popa
add
mov
mov
repz
out
je
out
out
push
out
ljmp
jae
add
movsb
clc
das
loop
in
aam
mov
call
fs
jo
add
add
add
das
dec
sbb
add
inc
add
jnp
cmp
loop
pop
repz
xbegin
lods
mov
in
add
add
add
dec
jmp
scas
mov
scas
sarl
scas
test
stos
adc
add
clc
push
push
lock
mov
add
sbb
push
jp
clc
out
repnz
stos
lahf
fs
sar
mov
jmp
add
add
out
gs
or
sub
cmp
mov
iret
pop
adc
add
addr16
xor
add
jecxz
xchg
dec
repnz
jb
add
add
add
xchg
sbb
mov
clc
dec
jns
and
add
jae
add
mov
imul
jmp
jge
cmpsl
jge
add
test
add
shlb
mov
int
popf
or
and
outsb
jb
add
clc
outsl
lock
jns
cmp
add
clc
mov
pop
xor
add
clc
insl
shl
clc
int3
iret
inc
clc
pop
repnz
push
add
fistpl
add
enter
xchg
mov
xlat
nop
xchg
push
nop
mov
add
aam
add
mov
movsl
clc
push
sbb
jl
push
add
jge
loopne
mov
popf
adc
add
or
push
add
nop
jmp
roll
add
cmp
or
jno
add
lods
testl
pop
push
and
add
add
mov
add
cmpsb
clc
dec
dec
scas
mov
out
add
add
inc
add
add
add
fidivs
add
loop
loopne
rolb
test
jmp
cmp
add
xor
add
das
fildll
clc
jbe
clc
pop
jecxz
imul
inc
add
rorb
sti
fldl
clc
mov
sub
dec
jne
clc
mov
sbb
mov
repz
pop
add
add
fstl
add
xchg
out
cmp
mov
add
add
ds
clc
aaa
insl
js
add
es
sarl
mov
nop
jmp
mov
jne
jnp
clc
int
pop
aam
clc
push
fidivrl
std
add
add
add
mov
clc
cmp
xlat
pop
popa
add
adc
push
clc
push
aam
xor
in
jg
clc
dec
pusha
add
mov
cmp
push
mov
xchg
ret
add
clc
adc
add
jo
add
shll
mov
dec
mov
mov
mov
and
pop
pop
cmpsl
add
clc
cmp
clc
xabort
add
mov
cltd
lret
clc
test
cltd
addr16
jae
add
out
cmpsb
clc
fildl
add
mov
add
clc
dec
push
nop
scas
adc
add
outsl
xchg
dec
jb
add
popf
xor
clc
pop
mov
clc
gs
insb
sbb
clc
sub
mov
cmp
adc
lcall
add
add
xchg
pop
clc
push
cmp
fdivr
frstpm(287
clc
sbb
test
dec
dec
test
scas
and
add
clc
jle
lock
clc
sbb
add
lahf
scas
call
and
fldenv
clc
cmp
clc
gs
clc
das
adc
aam
clc
fcos
cmp
nop
jmp
add
jne
sbb
enter
jp
mov
clc
call
sbb
sub
add
mov
test
add
sbb
mov
js
out
sar
mov
mov
add
fwait
in
lret
adc
frstor
add
pusha
add
test
clc
cmpsl
clc
shrb
ret
clc
push
and
add
mov
test
insb
movsb
clc
cmp
aam
add
mov
add
mov
fcompl
adc
add
cmp
add
xchg
jo
add
add
and
add
clc
lss
jecxz
jge
je
aas
push
dec
adc
add
psubw
pusha
push
mov
xchg
ret
es
add
xchg
mov
aaa
and
add
add
clc
clc
cmp
xor
add
mov
shlb
or
add
xchg
gs
xchg
mov
dec
push
mov
xchg
ret
jle
je
incb
lret
inc
clc
mov
fnstenv
cmp
jmp
add
lock
jge
adc
clc
jo
add
add
add
std
daa
clc
mov
add
nop
jmp
out
jae
add
inc
add
dec
dec
clc
loope
gs
ret
clc
in
gs
repnz
fwait
xor
add
clc
lea
jg
cmpsl
clc
out
arpl
add
clc
in
icebp
dec
lret
data16
xlat
das
adc
add
or
clc
jp
clc
in
cmpsb
clc
hlt
dec
and
add
sub
push
test
jecxz
mov
sub
mov
arpl
add
clc
imul
xbegin
arpl
add
clc
mov
jecxz
mov
js
add
sub
mov
clc
fwait
push
mov
clc
cmp
clc
sbb
push
add
push
add
push
add
movlps
add
pop
push
mov
add
xchg
addr16
fs
jne
jecxz
fxrstor
or
lea
sbb
add
arpl
add
nop
jmp
add
adc
dec
sub
add
jl
and
add
add
cli
sarl
clc
outsb
jg
inc
add
pusha
add
add
add
xchg
enter
fists
clc
fucomip
mov
push
add
pop
xor
add
add
add
add
jg
lahf
push
int3
pop
das
dec
and
add
mov
ret
add
sub
add
cwtl
xor
add
push
add
jmp
jnp
add
fists
out
mov
clc
pop
lock
stc
test
cmp
test
icebp
push
jge
inc
add
and
ss
cmp
add
pop
lods
inc
clc
mov
clc
scas
sub
clc
jmp
dec
and
add
push
jl
nop
jmp
add
adc
add
add
push
and
add
add
jl
imul
js
mov
jnp
clc
movsb
clc
lock
add
test
cmp
mov
mulps
jg
stos
or
cli
xabort
mov
sbb
add
clc
sbb
ret
clc
xor
add
fnsave
iret
clc
sub
cmc
loop
mov
shrl
ret
add
ret
inc
clc
jecxz
pusha
add
inc
clc
mov
fwait
push
data16
push
clc
xchg
sub
pop
cmpsl
clc
hlt
or
test
sub
push
add
push
add
jns
add
ret
and
xchg
pop
dec
dec
idivb
shlb
inc
clc
aaa
and
jle
clc
inc
add
mov
clc
push
add
scas
dec
fcompl
add
add
add
push
or
sub
or
clc
and
add
js
add
sar
popa
add
rcrb
or
adc
add
gs
fists
lock
out
popl
add
adc
add
clc
jmp
nop
jmp
push
jle
aad
fnstcw
jg
jns
adc
add
icebp
pop
push
cmp
push
mov
xchg
ret
add
inc
pop
clc
cmp
push
mov
nop
jmp
aad
add
inc
pop
mov
add
psadbw
clc
sahf
jo
add
data16
into
sar
clc
stos
mov
jnp
xor
and
add
add
pop
aad
add
pop
jbe
add
adc
add
clc
pop
rcrl
enter
decl
inc
insb
call
ret
push
clc
movsb
clc
push
sub
mov
add
xchg
pop
das
gs
dec
jge
dec
mov
add
xor
add
add
xbegin
dec
pop
sbb
adc
add
dec
jns
cmpsl
clc
and
sahf
inc
add
in
xchg
rcrb
sbb
inc
add
mov
xor
add
jno
add
add
xor
outsl
push
clc
xor
add
add
add
pushf
inc
clc
cmp
clc
adc
add
sub
dec
push
mov
xchg
ret
add
add
xchg
pushf
xchg
stos
mov
clc
pusha
add
incb
clc
xbegin
clc
jnp
lods
push
clc
add
add
clc
mov
xchg
iret
cs
add
dec
jp
mov
push
mov
xchg
ret
out
jne
fs
out
pop
push
addr16
aam
push
cs
dec
in
bound
add
add
add
test
xchg
pop
lods
mov
push
xor
add
add
add
mov
lret
dec
pop
add
add
cmp
add
or
push
mov
xchg
ret
pop
add
mov
clc
adc
add
pushf
push
push
add
testl
mov
jmp
sar
add
hlt
sahf
xchg
jns
sar
pop
lcall
clc
imul
add
rorb
jne
xor
add
ds
xchg
rclb
nop
jmp
add
out
inc
add
scas
mov
cmp
clc
adc
mov
mov
add
int
fmuls
pop
and
add
clc
fcoml
loop,pt
mov
adc
imul
cs
decl
xchg
call
add
pop
ret
test
aam
add
icebp
mov
push
push
nop
jmp
je
popa
add
xchg
sbb
or
jne
dec
inc
clc
adc
add
nop
nop
pop
sbb
jnp
call
addb
mov
clc
jp
dec
jg
push
clc
lods
mov
mov
mov
clc
out
or
sub
xor
push
mov
xchg
ret
add
add
cmp
adc
add
clc
jle
jecxz
xchg
mov
inc
clc
cmp
add
add
add
cmp
add
adc
and
add
call
nop
jmp
pop
out
in
fstpt
clc
xor
add
repz
push
test
nop
jmp
add
or
jle
add
sarb
add
jo
add
clc
dec
push
ret
sbb
jle
and
add
add
outsl
cmp
hlt
cs
xchg
in
clc
xor
add
add
aam
imul
in
jle
jne
or
dec
mov
clc
dec
xchg
cmp
fs
add
add
jecxz
xor
add
clc
test
dec
scas
xchg
xchg
or
nop
and
add
add
fnstsw
test
clc
jne
push
sub
clc
pop
inc
add
int
mov
pop
or
and
add
xor
std
pusha
add
es
jb
add
add
aam
clc
push
mov
clc
jb
add
negb
add
mov
clc
xchg
movsl
clc
jae
add
add
mov
stos
ficomps
cmp
add
gs
jecxz
or
or
sub
clc
sub
add
xchg
cmp
cwtl
sub
add
add
and
add
add
sub
mov
dec
push
add
loopne
sar
cmp
push
add
add
add
adc
add
clc
out
cmp
jae
add
add
mov
ret
add
xbegin
add
pop
push
add
insb
test
sahf
xchg
fldcw
ret
clc
jne
sbb
mov
add
push
dec
lods
and
add
dec
iret
mov
leave
mov
insl
jle
mov
loop
into
push
mov
mov
add
fs
cmp
cmp
clc
inc
add
mov
add
xor
add
pop
data16
xchg
aad
add
nop
jmp
jnp
add
push
add
jmp
xchg
incl
cmpb
add
xor
clc
mov
add
add
and
add
and
add
add
clc
xchg
inc
add
ljmp
adc
nop
jmp
sbb
add
inc
clc
jno
add
and
add
fists
int3
mov
std
cwtl
push
fisubl
add
pop
xor
add
add
push
clc
rcll
add
clc
mov
clc
pop
je
clc
jnp
stos
nop
jmp
jge
and
clc
add
add
loopne
scas
add
add
mov
jg
frstor
vmwrite
add
jge
clc
xor
add
clc
test
fucom
clc
sbb
sahf
mov
push
jnp
jnp
jae
pop
jg
arpl
add
clc
lcall
cmp
in
pop
cmp
clc
push
add
fidivrs
mov
ret
clc
and
add
xchg
or
dec
adc
jmp
add
add
clc
in
xor
add
add
add
aam
add
in
jne
clc
cmp
xor
nop
jmp
adc
jne
xchg
test
fnstenv
add
out
into
idivl
jmp
add
add
add
arpl
add
sub
clc
sarb
fdivr
incl
js
add
popa
lods
mov
jno
add
push
stos
sbb
cmp
clc
pusha
add
cmp
add
jecxz
repz
xor
add
je
mov
notb
add
and
add
lods
push
jnp
shl
nop
jmp
je
pop
add
clc
into
lret
std
inc
add
lods
add
add
add
cmp
sti
jno
add
clc
lahf
cltd
xchg
fidivrl
add
ret
clc
test
mov
clc
sbb
sbb
jns
pop
jns
inc
clc
test
popa
add
dec
pushf
lcall
insb
add
add
in
scas
push
mov
clc
scas
xor
add
in
test
gs
or
and
add
sbb
mov
xchg
ret
lods
jnp
add
xchg
int
add
add
clc
mov
in
aam
clc
xor
clc
xlat
pop
cmp
outsl
sbb
ja
clc
pushf
imul
int3
push
add
sbb
cmpl
xor
rol
inc
clc
mov
push
add
aad
cmpsb
clc
test
jo
add
dec
lods
jbe
lods
test
add
rsm
or
add
dec
cmp
clc
sahf
xchg
idivl
inc
add
fistps
cmp
inc
add
push
add
sbb
jmp
es
rcll
clc
movsb
clc
js
sbb
mov
xchg
ret
aad
out
cmpb
add
insb
adc
add
xchg
aas
adc
add
add
add
nop
jmp
push
bound
movsl
cmovbe
xchg
addr16
je
sar
sbb
shl
fmul
xor
add
clc
pop
out
sbb
add
lret
movsb
clc
gs
data16
xchg
xor
add
clc
or
push
push
mov
popa
add
repz
add
fiadds
inc
clc
or
add
test
dec
call
pushl
roll
lods
inc
add
sti
jne
and
add
pop
sahf
xchg
aas
iret
push
mov
inc
add
sub
cmc
pusha
add
pushf
xchg
pop
sub
push
clc
in
dec
dec
push
mov
stos
nop
jmp
adc
aad
imul
lcall
ret
xchg
pop
cmpsl
clc
sarb
scas
or
jns
clc
std
rol
clc
ficompl
add
outsb
add
add
pop
mov
add
add
mov
add
decl
mov
decl
add
out
push
add
add
out
lods
pop
xor
add
add
call
lods
push
push
lods
stos
adc
add
xor
add
pop
push
dec
out
sbb
add
inc
clc
cmp
clc
stc
scas
int
mov
clc
push
repnz
fildll
jmp
pop
xchg
jle
jne
jnp
clc
mov
clc
aad
clc
mov
add
add
out
cwtl
push
inc
add
jb
add
shll
ljmp
dec
aas
cltd
aam
lods
and
add
add
repnz
clc
and
add
inc
add
pop
push
pushl
nop
jmp
and
add
sbb
lret
pop
jae
add
clc
dec
mov
add
pop
clc
clc
jb
add
clc
adc
add
clc
iret
rcr
dec
cltd
and
add
pop
jno
add
xor
add
lea
add
jo
add
add
inc
clc
push
jno
add
clc
sub
xchg
filds
add
mov
lods
in
xor
add
int3
in
xchg
xor
add
fcoms
add
clc
clc
divl
add
sub
add
inc
add
push
test
stos
fcom
daa
clc
pusha
add
mov
clc
clc
push
add
int3
insl
pop
bound
add
add
sahf
jae
add
js
mov
decl
mov
adc
jmp
xchg
cmpsl
out
cli
add
mov
repz
mov
xchg
ret
or
xchg
dec
mov
mov
clc
xchg
and
add
leave
adc
add
ffree
clc
in
outsl
arpl
add
add
mov
fwait
inc
clc
fstpt
add
stos
repz
es
pop
jne
add
mov
xchg
inc
clc
out
pop
pusha
add
jns
clc
add
add
add
divl
add
pop
loope
clc
sar
clc
jae
add
add
test
fildll
inc
add
xchg
hlt
and
add
add
add
incl
in
pop
pop
mov
lcall
aam
add
sbb
dec
mov
mov
or
lahf
stc
push
add
jle
ret
add
jns
mov
ret
lahf
add
jb
add
pop
jns
clc
lock
add
jns
insb
add
mov
clc
shll
add
loop
in
push
add
cmp
clc
or
xchg
stos
xor
add
clc
sub
loopne
pop
js
pop
xor
add
lods
xchg
insb
in
dec
cmp
sub
add
add
and
add
cmp
cmp
lret
push
add
xchg
add
add
clc
fidivrs
imul
pushf
jo
add
mov
jmp
adc
xchg
inc
add
int
call
pushl
add
add
sar
clc
xlat
jnp
jmp
clc
movsb
clc
mov
adc
add
sub
add
adc
add
mov
jmp
jae
pop
out
pop
nop
hlt
shll
add
add
pop
sub
add
gs
popf
or
clc
sbb
decl
jmp
pop
mov
rclb
test
clc
nopl
test
xchg
call
inc
adc
cmp
add
fwait
aad
loopne
dec
aam
clc
push
add
jle
popf
cmp
clc
jno
add
add
mov
add
add
dec
cmp
ljmp
clc
das
push
add
scas
push
pushf
push
lods
xchg
incl
mov
shr
ret
clc
out
push
add
cmc
push
add
add
clc
dec
cmp
clc
stc
adc
add
imull
push
cmp
sar
hlt
push
add
xbegin
and
add
pop
cmc
incl
dec
cmp
jmp
cmp
add
adc
mov
clc
data16
std
cmp
clc
stc
xchg
jle
clc
pop
sub
mov
add
xchg
push
loope
sub
add
movsl
clc
mov
adc
add
xchg
pop
mov
inc
add
jle
add
sbb
jge
xbegin
clc
pop
add
add
jmp
nop
jmp
ret
bound
nop
scas
xchg
and
add
add
add
xchg
adc
add
and
add
push
add
push
clc
or
test
adc
add
mov
stc
or
clc
xor
add
clc
or
add
add
jbe
ret
clc
imul
clc
pop
fisubrl
cmp
clc
bound
add
push
nop
jmp
or
adc
ret
stos
mov
iret
fisubs
movsl
clc
sahf
gs
fwait
inc
add
cmp
std
inc
clc
mov
in
sbb
add
add
clc
cmpsl
clc
ret
cmp
xor
add
add
addr16
std
fimull
cmp
mov
clc
out
fstpl
clc
cli
inc
add
sahf
xchg
push
clc
test
clc
cmpsl
clc
xor
add
daa
clc
jo
add
out
push
jnp
clc
and
add
add
sar
mov
repnz
xchg
inc
add
and
add
cmp
push
lods
dec
push
pop
aad
clc
fwait
hlt
adc
clc
dec
fsubrl
sub
clc
jnp
clc
cmp
sti
pusha
add
lahf
std
sbb
fldt
or
outsl
ds
jmp
mov
add
fimuls
xchg
jg
xchg
shlb
add
and
add
inc
clc
imul
loopne
sub
add
inc
clc
fistpll
ljmp
clc
adc
add
lret
add
pop
cmpsb
clc
in
inc
clc
outsb
cli
test
pop
mov
dec
jae
add
movsb
clc
mov
cld
inc
add
push
add
cli
sbb
add
add
mov
clc
push
clc
jecxz
stc
mov
ljmp
sbbb
cmpsl
scas
mov
inc
clc
movsl
clc
pop
sbb
cwtl
or
add
add
ljmp
add
pop
jl
stos
leave
insl
adc
xor
add
mov
nop
jmp
cli
js
ret
fistps
imul
add
mov
mov
clc
jge
adc
add
push
xchg
and
add
daa
clc
xchg
inc
add
push
and
test
pop
pop
xor
add
sbb
popf
nop
jmp
cmp
add
sbb
or
mov
clc
mov
pop
dec
in
clc
pop
clc
cli
inc
add
push
lahf
push
aaa
push
nop
jmp
out
and
inc
clc
loop
dec
adc
add
sub
roll
sar
clc
mov
xor
gs
cli
ror
pop
mov
stc
sub
clc
pop
or
push
rcrb
mov
dec
dec
adc
add
and
add
inc
add
scas
and
add
cmp
push
mov
dec
leave
jnp
fsubs
dec
adc
add
mov
add
in
clc
inc
clc
pushf
pop
add
sbb
xchg
pop
aaa
sub
mov
mov
and
movsb
clc
xchg
sub
clc
adc
add
leave
popa
add
adc
shrl
or
clc
leave
xchg
xchg
jno
add
ja
or
and
add
imul
clc
jo
add
xchg
mov
add
das
mov
dec
ret
mov
clc
ds
clc
mov
clc
dec
jge
fsubr
test
das
mov
push
mov
xchg
ret
push
sbb
jge
nop
jmp
aad
add
add
es
push
xor
add
aad
clc
xchg
pop
add
add
sbb
in
push
add
stc
lret
imul
lret
fsubrs
xor
add
add
push
jo
add
add
add
add
clc
add
add
xchg
push
es
gs
test
int
clc
xchg
fisttps
loopne
push
add
fsubr
clc
dec
push
mov
xchg
ret
bound
sar
jp
add
push
mov
cmp
nop
jmp
add
out
lock
add
mov
clc
or
add
clc
xabort
add
int3
sar
dec
push
push
nop
jmp
jne
add
icebp
and
sar
and
add
add
or
xlat
insl
mov
insb
sub
add
clc
add
mov
clc
clc
push
add
add
pop
leave
fidivrl
add
jmp
inc
clc
ljmp
jmp
add
js
jle
ret
mov
clc
aas
add
add
popf
push
idivl
mov
add
emms
jne
fisttps
test
add
add
jle
sbb
test
jmp
add
sbb
jecxz
sbb
nop
jmp
popa
pop
adc
xor
add
push
add
sbb
xchg
scas
fimull
pop
adc
add
das
aaa
sub
add
push
clc
xbegin
scas
or
stc
xchg
mov
clc
int3
imul
add
add
add
adc
add
inc
jb
nop
jmp
cli
add
out
inc
clc
and
add
jb
add
mov
nop
jmp
jnp
add
cmpsl
xchg
js
add
pop
cwtl
js
pop
cmp
call
nop
jmp
mov
jae
add
cmpsb
clc
fbld
mov
mov
sub
jnp
fisttpl
xchg
cmp
in
loopne
add
push
add
pop
fcoms
clc
mov
push
push
nop
jmp
add
mov
add
adc
add
call
add
cmp
xbegin
or
mov
sbb
fcomps
add
clc
mov
clc
add
add
cmp
test
mov
add
add
sbb
jle
nop
jmp
jge
cli
jle
cmpsl
sar
lret
add
mov
xchg
ret
jge
es
test
mov
jmp
lods
add
pop
add
clc
xchg
push
movswl
nop
jmp
xor
sub
ja
cld
icebp
hlt
incl
dec
cmp
jmp
add
jge
push
inc
add
popa
add
mov
clc
pusha
add
imul
mov
dec
nop
jmp
jge
in
add
ret
popf
push
add
push
repz
add
mov
aad
data16
lods
fs
cmp
clc
clc
pop
clc
pop
jmp
arpl
jmp
aad
out
sub
pop
adc
xchg
jbe
add
inc
add
adc
add
mov
add
cld
jb
add
aaa
cmpsl
clc
test
jnp
shrl
sti
ljmp
nop
jmp
out
ret
add
jnp
jge
clc
lcall
xlat
jne
clc
in
call
clc
jg
emms
xchg
fistpll
gs
cld
add
add
jle
jl
pop
pop
mov
jmp
cli
adc
ret
clc
cld
repnz
clc
negl
sahf
std
sub
mov
nop
jmp
jle
add
out
cmp
clc
pop
cmp
mov
add
jecxz
mov
jo
add
clc
cli
mov
add
rorb
clc
lahf
sar
cmp
add
or
mov
add
inc
clc
fisubrs
ret
clc
mov
clc
scas
jae
add
sbb
clc
adc
add
cmp
clc
adc
add
sbb
test
lret
call
call
aaa
aas
into
addr16
and
add
jge
in
jle
das
or
add
pop
mov
mov
xchg
ret
aad
xor
add
clc
incl
nop
jmp
jge
bound
xchg
out
xbegin
outsb
fldl
add
popa
add
popf
sub
clc
and
loop,pn
sub
cld
stc
cs
add
add
clc
aam
clc
mov
mov
add
clc
fs
aas
mov
clc
out
inc
clc
mov
clc
scas
jns
clc
sub
push
mov
push
mov
xchg
ret
in
pop
mov
sub
add
or
pop
call
in
xabort
push
add
insb
mov
outsl
mov
clc
dec
hlt
fs
dec
je
sub
add
add
sub
xchg
mov
mov
jmp
add
or
mov
clc
popa
add
jl
iret
test
mov
pop
xchg
mulb
in
push
add
cwtl
daa
clc
mov
mov
sar
add
movsl
clc
loop
jmp
push
clc
dec
jg
mov
clc
fwait
loopne
add
push
add
or
scas
push
push
add
fmull
add
imul
jo
add
pop
ss
mov
xchg
dec
push
add
mov
clc
lods
sbb
clc
cltd
in
jecxz
out
nop
insb
adc
add
clc
stos
and
add
add
lock
mov
xchg
ret
add
pop
pop
pop
jno
add
add
add
fcmovnb
clc
stos
push
ja
clc
cs
add
addr16
clc
jle
push
push
push
clc
dec
mov
and
add
sbb
jmp
jne
add
add
add
clc
fs
mov
add
xlat
jne
clc
dec
inc
clc
das
lods
and
add
add
aas
mov
sbb
add
inc
clc
addr16
mov
xbegin
mov
clc
xchg
cs
insl
lahf
mov
sub
push
add
icebp
mov
add
mov
pop
push
add
mov
clc
sarl
jb
add
fdivrl
inc
add
cmp
mov
add
clc
and
add
clc
inc
add
lock
add
jnp
mov
clc
push
clc
cmp
add
jno
sub
add
ret
xor
add
mov
xchg
push
add
icebp
xchg
pop
fucomp
cmc
mov
add
pushf
adc
jno
add
in
dec
or
clc
jp
clc
sar
xchg
daa
clc
or
and
jnp
inc
clc
jp
cmp
and
add
dec
fs
mov
push
pop
jns
xchg
push
add
fwait
imul
add
loopne
pusha
add
push
enter
push
pop
jmp
clc
mov
mov
mov
clc
sti
or
push
clc
aad
jns
clc
xchg
jnp
clc
fidivrs
clc
cmp
inc
add
inc
clc
xchg
test
mov
add
popl
add
test
in
mov
add
lret
gs
cmp
hlt
pop
mov
mov
inc
clc
adc
add
outsl
test
repz
add
aad
jbe
add
lea
repnz
clc
adc
add
add
fs
sub
push
add
pop
imul
clc
in
xor
add
adc
sub
sbb
clc
or
sar
in
hlt
and
add
clc
stc
inc
clc
push
neg
cltd
sti
popf
fsubs
mov
clc
cmp
clc
xor
je
mov
clc
dec
nop
gs
sbb
clc
sahf
pop
or
ret
clc
pop
xchg
stc
gs
inc
clc
es
xchg
adc
jg
clc
pop
clc
ljmp
add
ds
mov
clc
jg
clc
ret
xor
add
add
icebp
popa
add
aam
add
ret
xchg
int3
icebp
sbb
imul
ja
clc
test
loopne
add
and
xchg
nop
jne
add
ds
aaa
outsl
mov
clc
inc
clc
sub
push
fnstcw
xchg
sub
cld
mov
clc
lods
out
gs
cmp
insl
cltd
mov
adc
add
loope
adc
clc
xor
add
ljmp
pop
cwtl
push
add
repz
adc
clc
and
xbegin
adc
pop
in
in
jg
lahf
mov
add
das
repnz
int
and
js
repz
fdivl
fldcw
push
sub
loopne
cmc
mov
pusha
add
adc
add
inc
add
cmp
add
call
adc
add
add
inc
add
jle
imul
xor
add
cli
jbe
mov
out
fistpl
mov
cmp
pop
repz
push
jne
clc
xchg
pop
clc
ret
clc
jno
add
add
mov
mov
icebp
roll
clc
cmpsl
clc
adc
add
clc
ret
sub
dec
sbb
xor
add
add
inc
add
aam
clc
fisubs
add
mov
xchg
psrld
add
xlat
daa
clc
loop
push
loope
and
add
movsb
clc
pop
and
add
out
jp
sti
pop
test
add
jns
clc
jns
clc
jnp
jge
clc
in
jecxz
sub
add
imul
in
lods
or
das
push
sub
scas
or
clc
aam
in
push
xor
add
or
clc
jl
add
cmp
std
lcall
add
clc
pusha
add
gs
and
add
in
cmc
movsb
clc
movsb
clc
add
push
clc
xchg
inc
add
imul
int3
pop
inc
add
iret
and
add
lods
rclb
dec
jo
add
clc
clc
adc
add
pop
adc
rcrl
xor
add
mov
mov
sub
sub
xbegin
clc
testl
inc
add
pop
mov
sub
push
clc
sbb
add
add
mov
clc
adc
out
lret
daa
clc
pop
stc
mov
sub
add
and
add
leave
pop
xchg
cmp
add
add
sbb
enter
out
fdivrp
add
pop
xbegin
imul
lret
pushf
gs
fisttpl
shr
lret
clc
push
clc
jb
add
or
clc
outsb
xbegin
clc
xchg
sub
jl
jg
clc
mov
test
daa
clc
sti
push
cmp
xchg
fldenv
add
out
fsubrs
mov
jl
mov
cmc
push
push
add
enter
xchg
jae
add
repnz
out
gs
in
aam
mov
xchg
xchg
xor
jp
lods
push
clc
xbegin
inc
clc
idivb
add
mov
add
mov
and
clc
dec
fdivl
add
jnp
dec
mov
xchg
mov
mov
add
sub
fiadds
sub
add
vcvtdq2ps
dec
xor
add
out
or
clc
in
sbb
sub
cmpsl
clc
jnp
clc
push
divl
add
das
loope
xbegin
mov
jge
test
mov
push
add
xchg
dec
dec
mov
clc
aad
clc
mov
js
sub
add
xlat
cmp
push
lods
pop
lea
and
outsb
sar
ret
inc
add
xor
mov
add
mov
fmull
test
fbstp
clc
in
call
call
dec
test
jg
push
add
dec
cmp
add
aas
mov
sub
aad
mov
add
jmp
inc
add
xor
add
fsub
clc
jae
add
movsb
clc
imul
clc
sar
nop
inc
clc
sub
add
mov
inc
add
nop
jo
add
inc
add
sbb
pop
xabort
clc
cmp
adc
add
push
add
push
jbe
clc
xchg
mov
out
push
cmpsl
clc
outsb
xabort
fnstenv
add
clc
lods
in
pop
sub
mov
cltd
xor
add
push
dec
cmp
cmp
ja
hlt
jge
clc
xchg
jns
add
dec
sbb
add
sub
sub
inc
clc
mov
fsubrl
out
movsb
clc
syscall
clc
or
add
add
in
std
fstl
clc
pop
negl
mov
clc
mov
cmp
or
pavgw
arpl
add
add
inc
add
add
add
dec
jo
add
xchg
loop
aam
clc
leave
pop
outsb
and
add
in
data16
in
dec
fucomip
cmp
add
xor
clc
push
in
loope
push
add
mov
dec
ret
mov
addr16
fs
push
clc
push
add
ja
add
adc
clc
and
add
out
push
inc
add
dec
aaa
or
ror
lahf
repz
add
ret
nop
cmp
xchg
push
out
xbegin
push
add
xchg
repz
adc
add
add
push
sahf
enter
push
std
sub
add
cmp
clc
xor
add
popf
mov
xor
pop
cmp
lods
mov
add
mov
popf
sub
clc
push
clc
pop
clc
clc
dec
dec
mov
clc
insb
popf
inc
clc
stos
and
add
xchg
sti
mov
mov
mov
add
xchg
mov
xor
insl
popa
add
fcmovnb
clc
pop
das
cmc
repz
js
lret
adc
add
add
add
es
cmp
fwait
addr16
xor
add
ret
clc
mov
mov
mov
ljmp
fiaddl
add
fcmovne
inc
add
cli
dec
out
pop
xchg
sbb
add
jp
clc
lods
jmp
mov
hlt
mov
add
leave
adc
add
clc
mov
lods
xor
add
mov
insb
add
add
rorb
sub
inc
clc
out
or
add
add
xchg
xchg
loope
ret
clc
push
clc
cs
pusha
add
sbb
in
pushf
movsb
clc
enter
cli
cmc
mull
out
aam
mov
scas
pop
push
or
add
pop
xor
add
pop
xor
mov
xchg
outsl
add
add
je
add
ljmp
and
cmp
hlt
or
imul
jmp
inc
add
aad
clc
aaa
jns
cld
dec
or
xor
add
mov
int3
fxch
leave
dec
add
add
clc
mov
lret
clc
pop
push
add
lahf
fisubrl
in
test
add
lods
fldl
add
clc
and
mov
fidivl
add
fsubs
clc
loop
mov
or
dec
sar
add
inc
clc
hlt
sar
push
add
or
add
sub
clc
xor
add
add
jns
add
es
sbb
ds
add
sar
cmp
fsubr
jp
inc
clc
adc
add
add
add
add
inc
clc
insl
pop
cmp
add
sar
pushf
fistl
add
jbe
xbegin
add
cmp
clc
or
add
lods
stos
dec
sub
adc
add
fmuls
mov
add
clc
push
outsb
repz
push
sahf
aaa
pop
clc
or
push
add
lahf
pop
ljmp
add
arpl
add
lret
clc
mov
fwait
jbe
sarb
add
pop
fucomp
loopne
iret
xabort
add
fldt
add
scas
lahf
inc
clc
inc
clc
scas
data16
dec
inc
add
imul
adc
add
lea
mov
clc
xor
or
aaa
fidivl
clc
fwait
cmp
test
adc
clc
mov
xchg
repnz
add
insb
xchg
xchg
mov
adc
add
clc
fs
ret
adc
out
out
popl
fwait
mov
add
add
add
mov
xchg
jo
add
mov
add
push
gs
pushf
aas
mov
addr16
in
sub
or
xchg
or
push
inc
clc
add
add
add
sbb
in
fbld
cld
mov
add
decb
and
add
in
adc
add
clc
loope
mov
call
out
movaps
add
mov
xor
add
xchg
fld
clc
xchg
fisubl
clc
cmp
add
xor
add
clc
add
sar
jns
imul
clc
cmc
roll
loop
js
sbb
lea
add
pop
push
outsl
or
clc
or
repz
inc
add
xbegin
and
fcmovnb
clc
or
add
inc
add
xchg
nop
xor
add
cmp
add
idiv
arpl
add
pop
pop
jne
clc
cmpsl
clc
notl
add
out
daa
clc
or
and
add
xchg
xlat
fcomps
add
ret
leave
jge
clc
or
xor
daa
clc
fs
fninit
clc
and
add
imul
sqrtps
add
mov
add
insb
add
add
add
divb
loopne
icebp
push
add
jo
add
loope
insl
and
div
hlt
loopne
cmp
clc
adc
pop
imul
int3
insl
xor
mov
adc
in
mov
fucom
clc
dec
cmp
fimuls
mov
xor
stc
lock
clc
dec
xchg
cmc
and
add
icebp
dec
repnz
mov
add
es
push
loop
xbegin
add
and
out
movsb
clc
mov
sbb
cmp
clc
es
mull
mov
cwtl
insb
mov
push
enter
iret
sbb
sti
js
jmp
divb
add
shrb
xchg
pop
or
fisubrl
clc
or
out
add
add
popa
add
jge
clc
xchg
mov
daa
clc
sbb
sub
add
lret
fnsave
add
cmp
clc
jg
xchg
fdivl
fs
inc
clc
lock
adc
add
add
mov
add
in
or
jle
add
aaa
mov
clc
lock
jbe
clc
and
jne
loope
cmp
clc
pop
clc
cmp
cmp
hlt
aaa
ljmp
add
jne
add
xor
add
clc
scas
mov
cltd
out
flds
pop
push
ljmp
cmp
mov
sub
adc
add
hlt
push
in
cmp
and
add
clc
lahf
jle
rol
clc
loopne
push
mov
repnz
pop
shlb
clc
xchg
in
xor
add
clc
sub
push
in
mov
int
sub
and
sbb
jne
push
adc
add
int
add
sub
sbb
lods
mov
shlb
movsl
clc
or
add
fwait
loop
fs
cmp
lret
clc
aaa
xchg
cmp
insl
in
leave
cmp
lret
daa
clc
push
add
xor
add
add
fwait
out
fs
and
adc
add
lods
push
add
cmp
sub
loop
sub
ret
mov
or
xchg
in
data16
shl
clc
shll
outsl
and
add
add
std
sub
push
add
lea
clc
insl
cmp
sahf
sub
jg
inc
clc
pop
dec
lea
fs
das
xlat
lods
mov
in
call
mov
add
daa
clc
cmp
outsb
jne
or
mov
cmc
mov
add
clc
stos
xor
mov
add
clc
ljmp
cmpsb
clc
jp
cmp
lock
clc
pop
push
mov
outsb
push
loope
cmp
sbb
cmp
and
add
add
fwait
jmp
xor
add
add
clc
js
stos
dec
xchg
sub
add
popa
add
insb
adc
add
mov
cs
dec
idivb
clc
push
pop
sbb
clc
dec
aad
dec
into
lock
clc
push
add
mov
add
mov
sar
clc
test
add
cmp
clc
loop
cmp
fidivrl
clc
icebp
or
clc
in
xchg
in
scas
xor
lgs
pop
mov
and
add
mov
inc
clc
into
out
xbegin
cld
add
add
repnz
pop
dec
ds
pop
out
clc
mov
adc
add
mov
jno
add
std
movsl
clc
jb
add
add
add
sahf
into
and
add
add
push
add
popa
add
daa
clc
loop
adc
jle
clc
xlat
adc
add
mov
mov
add
ljmp
push
pop
mov
clc
cmc
push
xchg
xchg
enter
or
jmp
cltd
sbb
add
repnz
and
add
clc
scas
dec
insb
test
clc
mov
mov
mov
clc
dec
mov
cs
cmp
push
add
pusha
add
dec
icebp
ret
insl
sar
xor
add
clc
gs
or
cmc
in
xchg
inc
add
arpl
add
mov
lods
data16
pop
pop
push
mov
add
movsl
clc
cmp
push
mov
or
insl
and
pop
sbb
add
cld
lods
pop
pop
repz
clc
jle
out
mov
clc
or
add
clc
xchg
mov
add
sbb
add
xchg
push
mov
inc
add
sbb
add
add
jae
add
sar
movsl
clc
and
add
add
clc
rcr
cmc
adc
add
add
adc
add
inc
clc
mov
add
pop
lcall
add
es
sahf
out
out
dec
jl
mov
cmpsl
clc
dec
pushf
jle
clc
jb
add
clc
js
ret
jmp
sbb
mov
pop
rcr
cmp
add
fdivrs
rolb
clc
sub
mov
icebp
lcall
push
push
add
add
add
out
xchg
adc
add
add
lahf
jge
dec
xor
add
add
pushf
push
add
test
cmp
pop
mov
imul
aaa
cs
xchg
mov
add
pop
clc
fildl
add
gs
dec
stos
mov
jno
add
add
repz
clc
gs
lahf
inc
clc
or
fsubs
add
cli
xchg
xchg
nop
xchg
dec
cmp
pop
clc
lods
pop
ja
jo
add
aad
add
into
mov
mov
shlb
mov
sub
ficoml
clc
push
add
pop
and
add
add
add
xor
add
clc
jno
add
add
inc
clc
mov
add
inc
clc
shr
jg
ljmp
push
clc
sub
mov
add
gs
jle
xchg
push
or
test
enter
push
aad
lea
nop
inc
add
inc
clc
dec
or
add
xchg
sar
or
clc
fdivl
add
push
clc
insb
arpl
add
clc
fcoms
add
test
jb
add
add
push
dec
adc
add
add
pop
sub
push
add
icebp
cmp
inc
add
fmul
push
add
jb
add
add
cli
pop
out
mov
add
or
add
pop
clc
pusha
add
mov
repz
sbb
daa
clc
cmp
cmp
dec
add
add
add
movsl
clc
mov
pop
push
cltd
testl
xor
add
add
clc
mov
lahf
cmp
add
sub
clc
push
jle
mov
add
push
pusha
add
mov
mov
clc
jae
add
or
clc
adc
add
add
clc
mov
add
adc
add
add
ss
mov
int
aam
repz
xlat
sbb
cmp
es
push
int3
shll
and
repz
cld
adc
add
add
xchg
filds
add
hlt
insl
mov
out
xchg
inc
add
add
add
ret
clc
mov
pop
inc
clc
mov
inc
clc
mov
mov
out
jge
add
mov
jne
add
stos
out
inc
add
inc
clc
add
add
add
clc
mov
hlt
inc
add
dec
cmpsb
clc
adc
in
imul
mov
clc
jns
mov
cwtl
xchg
nop
mov
repz
testb
pop
dec
out
add
add
add
add
scas
or
clc
ret
cltd
jo
add
clc
ljmp
jl
add
test
fsubrl
pop
jge
inc
clc
or
repnz
xchg
fldt
or
pop
clc
or
add
jne
clc
imul
pushf
mov
add
add
add
add
mov
stc
ret
clc
sbb
clc
push
clc
push
push
into
pop
clc
popf
call
clc
aad
sbb
adc
add
sar
add
xlat
sub
jecxz
sub
add
or
add
dec
out
cli
fcomps
mov
xbegin
add
xchg
int3
and
out
mov
add
and
mov
mov
mov
clc
or
add
xchg
jmp
pop
push
add
add
popf
inc
add
fnstsw
mov
and
add
add
push
mov
daa
clc
ret
clc
pusha
add
icebp
add
add
clc
xor
add
nop
lods
shl
clc
and
add
mov
cmp
push
clc
sbb
clc
outsl
mov
cmp
pop
xor
add
clc
or
aaa
pop
pop
call
jne
add
xchg
adc
add
test
pop
clc
xor
add
or
clc
xchg
xlat
fiaddl
mov
mov
or
xor
push
push
add
pusha
add
inc
add
cld
push
in
xor
add
add
jnp
dec
mov
add
pop
nop
jne
clc
ficoml
add
and
add
add
xchg
fnstenv
cmp
pusha
add
movsb
clc
das
xchg
sub
clc
dec
notl
dec
cmp
lret
push
or
add
dec
or
push
pusha
add
out
adc
add
add
stc
jg
fucom
clc
cmp
popa
add
mov
add
xor
mov
clc
iret
mov
mov
sti
push
add
lret
mov
fs
outsb
aas
mov
add
adc
add
push
stos
sub
clc
insl
bound
add
hlt
cmp
in
sub
pop
push
or
add
in
arpl
add
shrl
nop
push
insl
mov
cmpxchg
clc
mov
xchg
xor
add
ljmp
dec
jne
js
mov
loop
pop
mov
push
stc
sti
addr16
arpl
add
clc
fcoms
add
add
add
mov
clc
clc
shlb
test
cmpsb
clc
imul
ja
push
clc
pushf
inc
clc
xchg
mov
xchg
xor
add
and
add
cwtl
in
dec
or
clc
adc
add
xor
sar
idivb
xchg
mov
add
stos
mov
or
cmp
testb
clc
xchg
fsubp
clc
iret
out
jl
cmc
sarb
clc
test
mov
stos
jb
add
adc
add
add
push
add
call
xchg
insb
lahf
mov
fidivrl
cmp
clc
stos
lods
xchg
push
inc
add
sbb
clc
sub
and
add
clc
jb
add
add
add
mov
cwtl
data16
fs
outsl
jne
add
push
sbb
push
add
cmp
add
data16
mov
jl
cmp
add
arpl
add
call
mov
pop
clc
mov
clc
scas
lahf
ja
cmp
insb
cltd
pop
clc
dec
cwtl
adc
add
clc
out
mov
test
addr16
js
test
imulb
clc
outsl
adc
add
lock
add
loope
ret
clc
sbb
clc
movsl
clc
call
sar
std
add
ret
clc
cld
cmp
clc
xor
add
insb
jmp
push
clc
int
push
and
add
add
nop
fiadds
ja
clc
mov
rcr
adc
add
jp
add
jnp
pop
mov
add
cmp
clc
mov
push
dec
xchg
xchg
inc
clc
pusha
add
arpl
add
clc
mov
add
add
add
mov
cli
cmp
add
in
inc
clc
idivl
add
inc
clc
call
fdivl
xor
add
pop
jne
cmp
dec
jmp
pushf
fnsave
insl
lods
sub
out
adc
add
jae
add
add
clc
out
cmp
es
push
xchg
fildll
fildl
clc
testb
notb
adc
add
push
add
call
aad
inc
clc
add
add
clc
gs
inc
clc
or
clc
inc
add
out
mov
clc
pop
iret
jbe
or
xchg
jo
add
push
add
add
xabort
clc
push
add
push
int
in
hlt
mov
add
or
clc
rorb
xchg
add
and
add
add
repz
clc
iret
gs
pushl
add
clc
push
clc
inc
clc
mov
add
popf
rcll
add
clc
sub
cmp
add
clc
imulb
lods
sar
outsb
iret
mov
jge
clc
scas
mov
add
cmpsl
clc
data16
xchg
js
adc
scas
out
lcall
clc
ss
add
mov
clc
cmp
clc
inc
clc
or
pop
mov
xor
aas
and
add
movsb
clc
jge
push
in
add
add
clc
mov
pop
clc
aam
sub
outsb
mov
push
movsb
clc
out
xchg
shrl
inc
add
inc
add
mulb
xor
add
clc
xchg
xchg
cltd
mov
addr16
out
dec
pop
add
add
clc
ds
clc
cmp
clc
pusha
add
hlt
idivl
or
mov
clc
dec
cli
es
push
add
jle
clc
daa
clc
pop
lcall
stc
dec
mov
cwtl
or
sbb
insl
xchg
jns
add
icebp
daa
clc
mov
cli
and
add
sub
clc
xor
add
jge
xchg
stos
fsubl
stos
or
enter
add
loopne
add
mov
add
std
add
cwtl
hlt
mov
sub
inc
add
mov
leave
push
add
push
jns
dec
dec
scas
mov
mov
add
mov
inc
add
add
add
dec
adc
add
clc
int
add
jg
add
and
add
clc
bound
add
clc
and
cmp
imull
rorl
in
rclb
add
mov
stos
add
add
add
adc
add
add
scas
adc
jecxz
mov
in
jg
lret
sbb
clc
loope
dec
ja
repnz
pushf
jl
sar
xchg
test
cmp
pop
push
scas
pusha
add
lea
add
xchg
xchg
adc
add
dec
dec
fisubrl
out
and
add
clc
mov
cwtl
mov
mov
add
enter
cmp
clc
mov
add
inc
clc
jnp
jp
add
cmp
clc
sbb
sar
dec
mov
add
call
clc
ret
outsl
cmpsb
clc
mov
xor
add
fstpl
clc
xor
add
cli
movsb
clc
pop
clc
mov
popa
add
insl
xchg
fidivrl
xor
add
clc
rorl
add
popa
add
adc
add
clc
mov
clc
push
loopne
cmp
add
add
add
pop
clc
hlt
shl
clc
xchg
jnp
std
xchg
push
add
cmp
insb
cmc
test
lahf
arpl
add
mov
add
adc
clc
or
clc
jae
add
dec
pop
sbb
add
ljmp
add
clc
sub
jmp
cwtl
mov
add
adc
clc
xchg
inc
add
or
add
add
aaa
das
xchg
mov
push
add
pop
add
jnp
clc
in
scas
shl
in
fidivrl
or
int
clc
jmp
and
cwtl
sbb
add
clc
xbegin
std
push
addr16
test
push
add
mov
clc
stc
xlat
ret
std
adc
ret
clc
inc
clc
dec
mov
lret
inc
clc
jbe
add
bound
add
fs
fsubrs
clc
jmp
add
rcll
mov
repz
xchg
add
add
ja
jo
add
rol
clc
clc
push
add
inc
clc
pushf
fdiv
sbb
testb
in
jb
add
outsl
in
ljmp
fldt
pop
dec
dec
jmp
add
out
sbb
gs
mov
faddl
sbb
enter
out
loop
sbb
add
and
add
adc
clc
cmp
add
pop
cmp
fisttpll
jae
add
clc
push
add
dec
pop
sbb
add
pop
inc
clc
jecxz
dec
pop
lret
add
add
fsub
clc
lret
clc
lock
dec
rcrb
lret
pushf
push
clc
cmp
clc
and
lods
stos
inc
add
mov
cmp
clc
mov
dec
data16
fisubrl
imul
clc
shl
clc
ss
dec
jp
clc
mov
cmp
inc
add
xabort
cld
fimull
add
call
and
addr16
cld
sub
cmp
int
xor
clc
adc
clc
mov
adc
jne
clc
mov
clc
add
add
inc
add
repz
and
add
add
clc
sbb
clc
popf
xbegin
sar
inc
clc
mov
btc
push
in
inc
clc
mov
lock
movsb
clc
jb
add
xabort
lahf
pop
and
add
scas
sbb
clc
pop
jb
add
stos
lcall
sbb
push
cmc
xchg
out
mov
stc
in
sub
clc
fwait
mov
das
xor
clc
int3
adc
add
add
clc
in
fldt
clc
mov
add
dec
scas
pop
clc
inc
clc
mov
clc
js
loope
push
add
leave
dec
punpcklbw
add
clc
jae
add
sub
add
sub
add
cld
inc
add
lea
add
out
sbb
sti
cmp
inc
clc
pop
and
add
clc
imul
add
int
add
test
clc
bound
add
add
gs
mov
clc
clc
pop
and
add
mov
pushf
pop
clc
fiaddl
clc
inc
add
nop
aad
xchg
xchg
ret
pushf
mov
push
out
adc
add
push
cmp
add
xchg
mov
imul
jns
add
lahf
mov
je
cmp
inc
clc
ret
adc
add
add
sub
and
add
pushf
imul
clc
loopne
push
jmp
sbb
xabort
ss
xchg
dec
cwtl
fadd
clc
mov
clc
js
add
aas
sbb
lcall
test
fcomi
inc
add
dec
popf
dec
xchg
cmc
ds
das
mov
xchg
cli
sub
adc
add
sub
hlt
mov
and
mov
add
repz
cmp
outsl
jg
lahf
add
add
add
fidivl
int
dec
mov
adc
add
mov
xchg
push
add
std
fadd
clc
scas
mov
push
adc
add
cmp
in
mov
add
inc
clc
in
cmp
or
clc
out
and
add
mov
scas
adc
add
outsl
inc
add
sub
cmpsl
clc
add
icebp
jmp
clc
iret
ror
cmc
mov
jle
js
in
cmpsb
clc
icebp
add
add
ljmp
xlat
nop
imul
clc
xor
add
out
stos
data16
cmpsl
clc
in
pop
add
add
and
add
clc
cmp
clc
movsb
clc
pushf
cmpsb
clc
ret
clc
adc
add
movsl
clc
fisttpl
push
add
add
clc
iret
inc
add
pop
aam
add
or
and
add
add
push
add
ds
push
add
xchg
cmp
clc
xor
add
add
cmpsl
clc
jb
add
add
scas
lahf
sahf
mov
clc
jmp
clc
jns
sub
clc
xchg
movsb
clc
nop
lret
mov
jnp
clc
ror
gs
push
mov
repz
jmp
mov
add
fldcw
vcvtps2pd
dec
push
dec
adc
add
sar
repz
add
clc
cmp
add
add
add
lret
add
add
add
sub
clc
and
cli
pushf
shll
or
stos
test
and
add
adc
add
clc
and
add
pop
clc
push
add
shlb
dec
inc
add
xbegin
add
mov
add
or
add
mov
sbb
add
mov
dec
or
inc
clc
daa
clc
pop
std
leave
das
enter
sbb
add
lock
sbb
clc
dec
mov
add
dec
xchg
push
add
ljmp
add
mov
clc
ds
mov
iret
inc
clc
push
arpl
add
add
sbb
adc
add
mov
mov
cmp
rorb
int3
pop
push
inc
clc
and
add
arpl
add
sbb
clc
mov
and
clc
sub
jb
add
adc
add
add
hlt
and
add
sahf
fiadds
mov
je
clc
scas
lods
pusha
add
sti
fs
icebp
out
xchg
in
mov
test
into
cmp
push
popf
xor
add
mov
sbb
clc
dec
pop
xchg
jb
add
loopne
mov
jge
iret
jmp
xchg
repnz
inc
add
int3
cmp
add
sti
sbb
arpl
add
add
mov
clc
mov
lock
pop
and
add
add
loop
jne
clc
jecxz
mov
clc
push
jle
add
add
push
bound
add
test
imul
push
in
inc
add
sbb
loop
leave
mov
clc
add
push
add
das
fucomi
iret
add
incb
add
add
add
add
add
add
add
inc
add
add
add
add
lock
fnstsw
clc
push
add
push
and
add
clc
out
cli
iret
imul
popf
aaa
mov
popf
jecxz
clc
xchg
push
add
sub
mov
sbb
out
inc
clc
insb
xor
add
fldcw
loope
jno
add
clc
repz
inc
clc
adc
add
add
or
clc
cmp
clc
sbb
insl
data16
mov
add
test
call
push
xor
xabort
xchg
sub
xor
add
xchg
data16
stc
lods
mov
clc
jp
ljmp
data16
pop
fdivl
int
jbe
imulb
outsb
xchg
xor
add
clc
je
in
incl
clc
loope
lods
push
loopne
aad
mov
jb,pn
add
mov
ljmp
cmpsb
clc
repz
add
add
je
jle
add
push
push
add
test
popa
add
push
add
ja
popa
add
push
adc
push
imul
in
sub
push
cmp
jmp
add
cmp
mov
jo
add
cmc
mov
dec
negb
outsb
cmp
fwait
mov
push
add
ss
add
mov
or
cmpsl
clc
and
add
xor
clc
bound
add
jno
add
add
push
add
cli
ds
enter
ljmp
add
add
add
cmp
clc
dec
addr16
jmp
add
in
test
aaa
adc
add
add
clc
popf
push
dec
add
add
shrl
leave
add
add
add
int
repz
cmpsl
clc
jp
mov
imul
clc
cmp
add
ret
clc
stc
sub
clc
inc
add
lcall
add
insb
and
jmp
add
push
in
cmpsb
clc
fldcw
clc
incl
ljmp
xor
clc
lsl
add
in
stc
movsb
clc
popa
add
jno
add
mov
clc
sbb
std
test
sub
add
cmp
add
mov
adc
add
or
mov
lret
cmp
lea
stos
repz
add
add
in
out
or
clc
dec
pop
mov
or
test
xchg
repnz
clc
hlt
push
sbb
ficoml
add
add
leave
mov
das
mov
fidivrl
cmp
lods
cmp
mov
mov
sar
add
push
add
mov
je
clc
add
add
xbegin
cmpsl
clc
cltd
insb
lods
mov
add
in
inc
clc
jl
leave
lods
cmp
add
repz
clc
outsl
pop
bound
add
add
add
hlt
mov
out
popf
lods
lret
add
clc
mov
stos
test
aas
cmpsl
clc
pop
inc
clc
ficompl
add
fnstenv
add
clc
mov
add
clc
xchg
cmp
sub
je
mov
clc
ljmp
ficompl
clc
ds
cmpsl
clc
cli
xchg
stos
adc
add
add
call
clc
cmpsl
clc
jns
add
mov
push
clc
sbb
xchg
cltd
xor
add
test
loopne
xchg
xchg
mov
clc
sub
ficomps
sbb
push
push
std
jae
add
loop
dec
je
movsl
clc
rep
push
add
mov
clc
mov
clc
cwtl
push
cmp
test
add
mov
ret
mov
jbe
leave
mov
arpl
add
xor
add
fidivrl
loopne
or
clc
fnstcw
dec
leave
add
add
add
jne
cmp
cmp
pop
pop
xchg
std
mov
jne
jg
mov
clc
ss
clc
mov
clc
jecxz
pop
dec
push
clc
sbb
jecxz
mov
xor
dec
mov
enter
out
mov
pusha
add
push
add
enter
add
scas
and
pop
pop
imul
insl
cs
mov
push
sub
cmpsl
clc
cltd
call
pop
sbb
mov
xbegin
xchg
int3
dec
add
add
push
push
mov
clc
push
xor
add
push
add
pop
sbb
add
xchg
jg
clc
lods
push
add
mov
fsubrs
clc
mov
aam
dec
cmp
lret
sub
jne
add
in
test
aad
ret
sbb
dec
std
mov
sbb
outsb
das
xchg
leave
pop
xchg
push
mov
mov
or
clc
addr16
xor
add
clc
xbegin
push
add
and
add
cmp
xor
add
clc
js
loope
inc
add
repz
loope
adc
add
ret
clc
mov
clc
cltd
popf
or
out
aas
add
jne
xchg
ja
clc
sub
add
pop
clc
jb
add
sub
aas
jp
add
jmp
xor
add
dec
sub
repz
in
std
mov
add
fincstp
clc
movsl
clc
mov
cwtl
sbb
je
clc
cltd
lock
loop
mov
add
cli
pusha
add
sbb
mov
add
dec
jbe
inc
add
clc
cmp
add
mov
cmp
clc
roll
push
add
roll
add
sbb
mov
add
clc
jle
add
daa
clc
or
and
add
addr16
sub
clc
in
loop
mov
arpl
add
add
ret
add
jno
add
dec
mov
sbb
pushf
jbe
ja
dec
push
cmp
mov
clc
sbb
insb
xchg
dec
neg
sub
clc
das
add
in
out
xchg
cmp
jp
dec
push
mov
adc
add
inc
clc
stc
dec
lret
and
add
sub
js
dec
xchg
jl
loope
je
clc
fnstsw
sub
clc
dec
negb
call
shr
dec
leave
cmp
rclb
add
outsl
sub
add
add
xchg
in
sub
push
nop
mov
and
add
data16
imul
add
loope
and
clc
xor
add
jb
add
push
xchg
icebp
imul
add
pop
lahf
and
add
add
pop
aaa
mov
cli
call
push
add
push
ja
clc
mov
scas
cld
cmp
mov
clc
stos
push
clc
adc
sbb
dec
ds
movsl
clc
xchg
or
cmp
addr16
fistps
repz
xor
add
clc
aad
push
add
push
clc
or
mov
or
add
add
add
clc
mov
mov
and
add
movsl
clc
push
pop
xchg
sbb
clc
mov
loop
push
pop
lcall
lahf
fcomps
push
add
mov
and
add
xabort
mulb
add
mov
cmpsl
clc
cld
popf
jecxz
arpl
add
add
add
adc
mov
push
dec
into
lea
pop
clc
push
add
xchg
int
mov
add
add
sar
mov
push
add
adc
ss
clc
dec
lret
inc
add
sbb
inc
add
xchg
mov
fstps
shrl
out
test
sbb
add
test
mov
outsl
test
dec
arpl
add
clc
inc
add
dec
fs
inc
clc
jne
aad
inc
clc
sbb
add
jge
mov
clc
mov
add
add
add
clc
and
fdivl
add
xchg
ret
and
add
clc
xchg
mov
shll
sar
clc
cmpsb
clc
mov
add
xor
xor
add
lret
pop
xabort
clc
shrb
add
es
ds
cmp
push
add
dec
xchg
sub
cmp
clc
fwait
cmp
jp
clc
fsubr
pop
addr16
push
frstor
clc
lahf
cmp
cmpsb
clc
fwait
inc
clc
lea
ljmp
clc
stc
cmpsb
clc
cmp
add
clc
loop
add
cld
jae
add
add
aas
push
add
xor
add
call
add
testb
push
add
imulb
clc
adc
add
clc
mov
pop
mov
xchg
jge
test
icebp
inc
clc
jp
repz
stc
cmpsl
clc
nop
sti
jns
pop
dec
imul
jecxz
mov
cmp
xor
add
ljmp
clc
xchg
jmp
mov
clc
and
es
out
inc
add
jmp
add
dec
xchg
movsb
clc
clc
mov
jl
clc
dec
iret
cmp
mov
clc
push
ret
clc
jl
pop
sub
push
add
arpl
add
add
and
ficoms
movsl
clc
and
adc
add
add
add
add
add
jl
add
jle
clc
adc
add
add
fildl
add
mov
clc
mov
adc
add
add
fwait
leave
ja
mov
clc
push
clc
dec
pop
jmp
clc
add
add
xchg
popf
aad
cmc
mov
adc
add
add
je
clc
cmp
xchg
enter
cmpsl
clc
adc
add
cmp
add
or
enter
shrb
dec
sub
clc
bound
add
add
add
add
loopne
push
cmp
cmc
repnz
add
add
push
clc
dec
outsl
mov
jbe
add
out
icebp
xabort
clc
fstps
dec
in
sub
call
clc
cmpsb
clc
pop
out
sub
mov
repnz
stos
xor
add
mov
xor
add
clc
mov
push
clc
pop
sub
pop
clc
xchg
push
add
jecxz
push
xchg
cld
popf
adc
dec
lret
insb
shlb
popa
add
push
cmc
roll
add
clc
push
add
lret
dec
mov
push
pop
jp
push
push
clc
jle
test
ret
clc
and
add
add
fs
leave
jo
add
clc
mov
mov
cli
xchg
adc
mov
test
push
es
add
cld
fwait
jbe
jg
add
add
cmpsb
clc
shl
push
jl
add
in
jo
add
sub
dec
mov
dec
loopne
inc
clc
push
add
clc
negb
add
or
rcl
mov
add
add
stc
add
push
push
cmp
hlt
mov
add
xor
add
adc
add
and
add
clc
jbe
inc
clc
mov
add
clc
scas
and
add
stos
sahf
loop
arpl
add
icebp
inc
add
inc
clc
lods
fsubrl
jge
lahf
mov
clc
insl
jmp
add
jbe
mov
popa
add
mov
clc
lock
clc
add
add
xbegin
ljmp
jmp
mov
mov
lods
add
add
stos
int3
in
inc
clc
test
mov
add
mov
add
and
add
jo
add
sbb
pop
mov
ss
add
cmp
int
clc
pusha
add
sbb
clc
adc
xor
add
add
sar
mov
es
fdivrl
clc
sahf
mov
cmp
clc
push
adc
clc
rcr
sub
clc
loope
pop
jnp
add
cltd
xchg
dec
xchg
clc
add
call
into
mov
add
fsubr
pop
or
clc
mov
add
add
jmp
clc
cld
push
add
popl
add
clc
mov
and
add
leave
std
mov
clc
es
decl
lahf
imulb
add
mov
clc
notb
add
clc
xchg
cs
mov
clc
adc
adc
add
add
clc
dec
out
jbe
gs
dec
push
clc
popf
adc
add
mov
sub
add
imulb
sbb
pop
gs
hlt
icebp
popa
add
inc
add
cmp
mov
sub
add
out
or
lea
outsb
cmp
mov
clc
inc
add
outsl
sub
clc
cmp
sub
add
jge
loopne
outsb
pop
std
aas
cmp
mull
add
in
push
add
mov
add
stos
jnp
pushf
notl
add
and
add
inc
add
sar
dec
push
add
stc
adc
add
out
mov
adc
add
clc
mov
stos
loop
ljmp
loop
lods
cmpsb
clc
adc
add
movzbl
push
add
mov
add
cmp
clc
jnp
movsb
clc
daa
clc
adc
add
add
sahf
pop
add
xlat
mov
clc
fneni(8087
clc
call
add
mov
mov
mov
pop
clc
gs
mov
fsubrp
dec
mov
add
inc
add
add
add
jg
testl
add
sub
add
out
js
mov
mov
inc
clc
fdivs
add
outsl
fwait
ss
aaa
push
add
lahf
jge
clc
jmp
inc
add
and
stos
aaa
mov
jl
clc
push
clc
add
add
cwtl
out
jae
xor
add
pop
int
inc
add
mov
add
inc
clc
in
push
imul
negl
stc
fcom
inc
add
sahf
pop
xlat
and
add
jp
add
out
lret
push
aaa
imul
pop
clc
mov
xabort
pushf
repnz
pop
sub
add
adc
add
cmpsl
clc
in
cmp
push
add
add
aam
pusha
add
mov
cltd
cmpsl
clc
out
sub
clc
push
sbb
clc
lret
mov
jge
sub
add
adc
add
add
fsubs
add
movlps
add
push
daa
clc
dec
push
add
add
add
add
clc
sbb
add
add
pushf
lret
add
dec
push
push
add
js
xchg
mov
add
add
jno
add
cmp
lods
into
testl
ss
pop
out
std
pushf
cmc
mov
dec
adc
add
enter
fimuls
add
jae
add
add
clc
test
xbegin
add
add
add
clc
stc
mov
clc
xabort
push
sbb
add
insl
inc
clc
and
add
popf
ss
inc
clc
mov
xor
add
add
aas
dec
jo
add
pop
inc
add
fdivrl
push
lods
cwtl
xor
add
mov
adc
add
mov
add
xchg
dec
idivb
clc
pop
clc
cmp
ljmp
std
mov
cwtl
inc
clc
mov
addr16
fs
mull
idivl
clc
addr16
popa
add
ret
clc
add
add
stos
inc
clc
mov
mov
clc
sbb
add
lods
test
sbb
imul
popa
add
pop
xor
mov
aaa
push
add
mov
imul
sti
push
xor
add
add
int
rclb
test
cltd
mov
mov
fdivl
add
cmc
inc
add
adc
clc
xor
add
and
add
clc
jmp
add
mov
clc
cmp
clc
sub
jo
add
clc
insl
fwait
ds
clc
data16
cld
ljmp
sub
add
xlat
jnp
movsb
clc
rcrl
dec
cmp
sub
xchg
xor
clc
mov
add
ljmp
clc
inc
clc
repnz
dec
push
add
jle
add
dec
sbb
in
fadds
dec
add
add
add
aaa
dec
cs
cmp
sub
popf
sar
dec
jecxz
mov
clc
es
mov
add
add
push
mov
add
add
mov
sar
in
cmpxchg
mov
jae
add
cwtl
jecxz
in
jge
cmp
add
xor
cmpsb
clc
je
in
pop
rcrl
push
add
int
clc
fistpll
test
and
add
add
cltd
loopne
testl
mov
add
clc
sub
dec
test
mov
clc
or
add
cli
push
fs
ror
jmp
add
pop
arpl
add
shlb
clc
hlt
pop
lcall
jb
add
clc
push
add
xor
add
add
jno
add
sub
das
push
push
jmp
clc
imull
imul
ds
add
imul
popa
add
cmp
comiss
mov
lods
aad
pushf
sbb
cmp
clc
rorb
mov
jne
xor
sub
add
popa
add
fisubrl
mov
dec
shl
lret
clc
add
add
testb
mov
clc
dec
pusha
add
or
jne
cwtl
mov
clc
ss
fwait
inc
clc
je
xchg
mov
sub
mov
fcmovb
clc
jp
xor
add
rcrl
adc
add
clc
mov
mov
add
clc
call
lea
mov
or
es
push
add
dec
js
jge
clc
cmp
pop
int
clc
adc
mov
or
clc
shll
cmp
clc
mov
xchg
lock
add
pushf
filds
jo
add
scas
popa
add
mov
iret
sar
add
sahf
and
add
add
imul
xchg
inc
clc
scas
clc
xchg
imul
cwtl
sarl
pop
sub
push
add
pop
negb
xabort
add
add
dec
repnz
clc
sahf
push
push
clc
dec
sub
mov
arpl
add
fucomip
adc
add
sar
jl
mov
gs
adc
add
jbe
clc
in
in
mov
repnz
leave
pop
mov
add
add
leave
jo
add
clc
cmp
clc
mov
add
jle
clc
mov
add
bnd
mov
add
add
inc
clc
ret
or
scas
pop
mov
and
add
or
in
and
add
clc
ficomps
fiadds
jnp
pop
adc
add
cli
int
pop
cmp
sar
xchg
aam
clc
cmp
add
push
loope
xchg
fwait
sti
ret
scas
mov
add
scas
jne
xbegin
insb
xchg
xor
clc
jne
in
push
clc
pushf
adc
add
sbb
clc
mov
clc
pusha
add
test
add
mov
fildl
clc
sbb
cmp
insl
sub
clc
insb
repnz
clc
mov
add
dec
clc
out
mov
mov
mov
inc
clc
dec
sbb
xchg
mov
mov
jne
xchg
or
add
clc
cmp
add
lods
call
cmp
clc
pop
jecxz
push
add
fwait
cltd
loope
std
mov
and
add
clc
pop
addr16
outsl
mov
or
sbb
es
sar
mov
add
cmp
clc
or
xor
add
clc
bound
add
clc
dec
push
mov
jmp
pusha
add
adc
std
lret
mov
cmpsl
clc
cmc
bound
add
clc
clc
inc
clc
xchg
mov
jb
add
repnz
mov
clc
mov
sar
dec
xchg
fsubs
sub
add
test
add
xor
add
add
and
add
daa
clc
jecxz
dec
sub
sub
fidivrs
clc
std
out
lods
xchg
dec
mov
lahf
xchg
cld
fld
clc
adc
fimuls
inc
add
fcompl
add
dec
or
addr16
hlt
mov
icebp
cli
lahf
xbegin
outsb
dec
mov
add
add
in
mov
clc
inc
add
es
xchg
and
add
add
cs
clc
cmpsb
clc
inc
add
sbb
negl
push
sbb
add
jmp
dec
daa
clc
adc
add
cs
add
jle
add
and
add
add
mov
add
jbe
jae
add
add
pop
jecxz
fldcw
pop
lock
mov
dec
mov
cmpsl
clc
fdivl
add
add
sarb
popa
add
into
xor
add
sub
add
clc
xor
add
clc
adc
add
aaa
cld
jo
add
cmpsb
clc
mov
add
add
clc
into
mov
test
push
add
cmp
nop
pop
mov
add
add
loope
push
push
add
scas
mov
out
inc
clc
ja
ret
push
lods
loop
jno
add
add
push
pop
cmpsl
clc
arpl
add
jle
xchg
xor
add
add
inc
clc
jg
out
pop
jne
clc
ret
add
pop
shlb
dec
out
adc
aam
sub
inc
add
dec
sbb
lods
outsb
push
mov
clc
sar
xbegin
jno
add
mov
loopne
cmp
cmp
and
add
adc
xchg
fadd
clc
gs
jmp
adc
add
aad
leave
lret
adc
add
js
clc
cltd
in
xabort
mov
insb
pusha
add
into
daa
clc
cmpsl
clc
pushf
dec
lahf
repz
add
jb
add
clc
out
cmp
insb
ret
clc
mov
dec
mov
pop
movsl
clc
and
add
sub
add
into
dec
xchg
ljmp
cmp
clc
or
into
mov
add
cmp
mov
lods
cltd
aad
clc
xchg
jno
add
clc
add
add
add
xchg
fs
hlt
adc
add
or
sahf
or
sub
clc
pop
mov
pop
cmp
cltd
push
jge
gs
loopne
add
outsb
scas
mov
pop
add
add
loope
mov
add
add
jmp
xor
add
mov
cmp
add
insb
mov
jnp
xbegin
out
push
repz
adc
add
xor
add
pop
push
xor
add
add
cmp
out
lods
or
in
rclb
add
aaa
cmp
xchg
sbb
imul
dec
fnsave
repz
incl
adc
add
clc
pushf
mov
cmp
or
imul
clc
jne
cltd
aas
pop
pop
out
sbb
add
add
mov
in
das
daa
clc
test
clc
dec
call
dec
pop
mov
and
add
pop
cmc
mov
sub
call
mov
pushf
out
pop
xlat
xchg
fidivs
add
movsb
clc
xbegin
add
add
clc
cmp
mov
aad
add
sbb
js
aad
outsl
xchg
jno
add
shrb
sbb
add
lock
cwtl
insl
inc
clc
mov
add
cmpsb
clc
pop
imul
hlt
mov
movsl
clc
mov
jl
lret
sbb
add
push
cmp
fidivrl
pop
lret
int3
dec
mov
stc
shl
imul
mov
icebp
push
add
lods
ds
add
inc
add
mov
icebp
data16
dec
mov
rcll
add
mov
mov
add
add
clc
fsubp
clc
test
mov
testb
sub
add
sti
dec
and
add
xlat
and
add
mov
xchg
sbb
clc
xor
in
mov
clc
pop
fmulp
repnz
push
or
xchg
inc
clc
in
aam
mov
cld
and
dec
mov
iret
call
mov
clc
in
je
clc
popa
add
shll
clc
je
clc
and
add
jl
add
add
stc
cld
enter
arpl
add
sub
dec
outsb
lea
dec
imul
cmp
jbe
clc
push
je
mov
clc
icebp
push
adc
add
mov
and
push
and
add
aaa
lcall
add
loop
push
add
into
cmpsb
clc
in
pop
pop
sbb
mov
aam
add
or
cmp
movsl
clc
imul
add
pop
xbegin
add
fnstenv
add
xchg
mov
out
je
push
jnp
clc
push
add
js
xlat
in
cmc
add
add
add
clc
or
jne
cwtl
fstpl
add
add
add
clc
hlt
push
jae
add
pop
xor
add
add
add
cli
imul
fldt
jl
cmpsl
clc
incl
add
push
mov
ss
clc
rcr
test
adc
add
push
add
lods
aad
clc
mov
and
loope
sbb
add
clc
cli
ljmp
and
add
mov
sub
clc
clc
idivb
movsl
clc
repnz
add
push
add
daa
clc
jo
add
push
stc
outsb
cmp
add
movsb
clc
pop
add
mov
clc
jo
add
add
cmp
mov
or
jmp
bound
add
add
push
add
jp
lock
add
bound
add
push
fwait
mov
cwtl
cmpsb
clc
push
clc
jnp
out
idiv
pop
adc
sbb
add
mov
into
dec
repz
add
cli
int
ret
xchg
jbe
in
xor
add
lock
pop
pop
adc
add
mov
clc
hlt
dec
xchg
push
dec
bound
add
clc
movsl
clc
xor
add
clc
push
and
add
cmp
inc
add
mov
cmp
pop
in
movsl
clc
jecxz
add
add
add
add
popf
pop
cmp
clc
lods
cs
jle
es
jecxz
ss
mov
clc
pop
inc
add
mov
push
add
pop
inc
add
and
add
repz
fprem
popa
add
test
add
cmp
sbb
add
out
setne
sub
cmp
loopne
mov
lahf
into
inc
clc
xchg
dec
inc
clc
mov
clc
xabort
add
mov
imul
clc
xchg
insl
xor
add
aad
sar
mov
cltd
fldt
imul
ror
insb
sub
add
add
out
mov
jecxz
push
clc
dec
jo
add
stc
js
add
int
sarl
cmpsl
clc
xlat
or
sub
add
out
insb
and
add
loopne
add
add
fs
push
push
add
add
clc
pop
test
xchg
lea
or
xchg
iret
pop
xor
add
add
add
shll
add
mov
clc
outsb
mov
clc
outsl
in
sub
loope
pop
clc
or
jno
add
inc
add
dec
lods
jo
add
xor
add
mov
scas
loopne
xchg
mov
push
add
movsl
clc
mov
mov
sar
adc
add
inc
clc
mov
add
xchg
xchg
aaa
icebp
xchg
add
add
dec
repnz
cmp
stc
push
add
push
ljmp
mov
add
sub
clc
cmp
fidivrl
add
mov
dec
sub
add
add
sahf
cmp
jo,pn
add
mov
clc
ret
clc
push
add
xor
add
clc
negb
clc
stc
popf
clc
cmp
int
xor
add
add
das
sbb
sbb
clc
test
jae
add
test
js
inc
add
cld
lods
push
add
mov
dec
dec
cld
out
hlt
arpl
add
add
clc
push
lcall
inc
clc
xlat
adc
add
add
xor
xchg
test
movlps
add
clc
lahf
stc
fdivrl
shll
adc
add
bound
add
add
clc
clc
stos
sub
lret
mov
mov
fwait
movsb
clc
cmp
clc
in
bound
add
aaa
mov
clc
push
xchg
mov
add
out
xor
add
clc
push
int
test
push
add
xor
cmp
fidivs
out
jmp
clc
jg
aaa
xor
add
in
imul
aam
addr16
cmpsl
clc
adc
add
outsl
dec
mov
test
and
xor
adc
add
clc
enter
add
xabort
clc
mov
xchg
jmp
add
push
clc
movsb
clc
inc
add
popa
add
stc
neg
shll
nop
add
jno
add
clc
out
push
xor
add
clc
mov
clc
inc
clc
lret
jg
iret
fnsave
outsl
movsb
clc
pop
int
clc
scas
mov
add
jb
add
test
add
add
add
mov
movsb
clc
cltd
jl
mov
mov
add
clc
push
push
add
add
inc
add
shll
dec
leave
and
add
sarl
pop
push
mov
insb
pop
mov
imull
cmp
add
fstpt
clc
rorb
clc
jecxz
dec
mov
insl
xor
add
pop
jae
add
add
and
add
nop
or
test
clc
xchg
out
aaa
cmp
clc
pusha
add
sti
fwait
stos
rcr
filds
add
add
add
cmp
add
sub
clc
in
dec
sar
add
xchg
mov
sbb
push
out
and
clc
or
add
dec
push
add
pop
dec
adc
add
add
and
mov
in
addr16
pusha
add
jo
add
cmp
test
es
mov
clc
daa
clc
mov
pusha
add
cmp
add
stos
test
outsl
dec
mov
ret
mov
std
mov
clc
cmpsl
clc
in
call
shll
add
clc
xchg
call
and
add
or
pushf
mov
jmp
add
adc
add
add
aas
loop
fs
mov
pop
movsb
clc
ret
push
in
sbb
je
clc
cmp
add
pop
shlb
dec
xchg
imul
xlat
mov
out
repnz
mov
clc
push
add
inc
add
add
add
clc
in
mov
cmp
or
clc
mov
repz
testb
fdivrp
and
add
add
rcr
in
std
arpl
add
cmp
daa
clc
dec
mov
and
add
inc
add
dec
and
add
add
push
add
add
dec
insl
mov
insb
pusha
add
mov
add
adc
add
fmul
jnp
push
push
or
ljmp
mov
xchg
jecxz
pop
popf
xchg
pop
mov
clc
sti
ret
es
dec
xchg
add
or
xbegin
mov
inc
add
and
add
ret
clc
cmp
movsl
clc
outsb
into
std
pushf
fs
sub
clc
inc
add
inc
add
jns
add
movsl
clc
pop
push
mov
jmp
sub
das
sub
clc
mov
jecxz
push
clc
push
inc
clc
aad
cmp
pop
cmp
repz
mov
psubsb
lret
negl
sub
mov
testb
jmp
sub
add
jmp
cmp
add
clc
add
add
or
aad
sub
add
ss
clc
lea
or
cmp
in
test
cmp
lea
mov
aaa
xor
icebp
iret
fisubs
cmp
leave
push
add
out
mov
shr
jl
fidivrl
add
add
addr16
in
repnz
adc
vldmxcsr
add
inc
add
mov
clc
fdivr
test
add
dec
jecxz
mov
sub
clc
mov
push
sbb
and
mov
sbb
ror
pop
clc
xchg
into
xor
and
xbegin
clc
cmp
sar
js
push
repnz
clc
outsl
dec
sarb
decb
bound
add
push
mov
cmp
add
cmp
push
clc
int3
xchg
pusha
add
mov
add
add
lods
std
cli
or
cltd
lret
add
add
pop
adc
add
clc
fs
bound
add
add
inc
clc
pop
clc
mov
xchg
btr
cmp
cmp
sub
sahf
mov
dec
aam
add
or
add
and
push
pop
push
inc
add
fidivrl
pop
in
xor
add
add
or
add
nop
addr16
mov
clc
xabort
or
push
mov
add
mov
lea
clc
fs
lock
push
cmpsb
clc
push
clc
dec
mov
clc
add
add
clc
outsb
mov
add
add
clc
movsb
clc
lret
add
add
js
shrl
add
fs
pop
mov
notl
add
xabort
mov
xlat
jbe
testl
add
sarl
pushf
push
and
or
clc
jmp
iret
mov
cmp
inc
clc
sub
shl
rcrb
mov
inc
add
or
jb
add
cld
push
add
mov
add
xchg
lret
movsb
clc
je,pn
insb
fs
dec
or
aas
or
inc
add
rorb
sub
add
into
pop
icebp
test
clc
outsl
mov
insb
xchg
jbe
mov
clc
testl
adc
add
ret
clc
pop
sbb
add
clc
mov
leave
xor
add
clc
mov
idiv
hlt
mov
add
addr16
xor
add
bound
add
xor
add
xor
add
pop
stos
das
sub
clc
pop
pop
mov
clc
pushf
or
mov
add
mov
repz
add
add
cs
aas
cmp
and
negl
and
add
daa
clc
imul
clc
ret
clc
mov
pop
cmp
add
lock
clc
xchg
push
add
in
mov
jmp
add
nop
cmc
adc
xchg
loop
xchg
inc
add
rorb
clc
scas
ror
fistps
lret
lods
shrl
add
adc
add
add
cmp
clc
mov
and
add
sub
std
mov
and
clc
pop
icebp
mov
add
fcompl
add
or
test
inc
clc
stos
mov
clc
cmc
xor
add
lods
cmp
clc
adc
add
adc
add
xlat
into
test
sub
clc
lret
add
in
bswap
sahf
push
add
icebp
cmpsb
clc
jecxz
jle
clc
add
add
add
clc
in
mov
clc
xor
add
test
add
std
inc
clc
xor
clc
inc
clc
bound
add
add
sti
sbb
cmp
add
or
inc
clc
inc
clc
mov
imul
outsb
ss
je
add
adc
add
loope
aas
xchg
scas
jno
add
repnz
add
add
iret
in
mov
movsl
clc
or
add
clc
daa
clc
pushf
movsb
clc
xabort
clc
pop
xor
add
and
scas
jmp
clc
jl
sbb
add
mul
clc
ret
add
ss
add
cmp
add
sub
sub
cmp
or
push
mov
mov
clc
xor
add
clc
std
add
clc
lea
mov
mov
clc
scas
ret
mov
scas
inc
add
mov
std
mov
clc
je
cmp
clc
ret
clc
or
fucomi
fnstcw
clc
lcall
repz
add
add
add
add
cltd
mov
add
out
push
clc
adc
add
cmpsb
clc
jae
add
push
clc
add
add
or
enter
sar
stos
lock
loop
cli
sti
pusha
add
push
cmp
clc
sbb
scas
imul
clc
jg
mov
xchg
xchg
inc
clc
pop
xor
add
cmp
cli
ret
add
cmp
dec
sub
pop
clc
xlat
bound
add
aad
out
push
cmpsl
clc
out
insb
sub
in
cmp
add
add
mov
push
add
jle
clc
repz
xor
add
faddl
adc
iret
in
scas
xbegin
add
xor
add
add
mov
add
xor
add
add
clc
movsl
clc
into
inc
add
ljmp
clc
int
clc
cs
add
add
icebp
clc
xor
add
add
aaa
cwtl
dec
in
push
sar
push
shrb
mov
add
jmp
add
jno
add
add
cmp
push
clc
add
jecxz
push
add
mov
add
clc
push
stc
lret
add
add
mov
popa
add
aaa
sbb
inc
add
or
clc
ja
loopne
insl
mov
add
pop
out
cmp
pusha
add
dec
jbe
rcrb
sub
clc
mov
and
add
clc
jns
fwait
cwtl
js
clc
bnd
add
and
mov
clc
leave
icebp
cmpsl
clc
cmc
adc
add
add
repnz
inc
clc
mov
push
cmp
inc
clc
ret
clc
cmp
rcr
lods
je
daa
clc
cmp
out
mov
pop
and
clc
daa
clc
mov
movsb
clc
jl
cmpsb
clc
mov
xlat
sub
repz
jno
add
add
sbb
xor
add
leave
popa
add
push
add
dec
mov
clc
nop
icebp
lods
and
cmp
add
or
adc
clc
or
dec
gs
dec
inc
clc
sahf
out
sub
add
add
add
jle
out
loope
ffree
clc
xchg
arpl
add
cwtl
add
add
clc
sub
add
inc
clc
adc
add
add
sahf
fiaddl
add
clc
jp
in
add
inc
clc
cmp
mov
lods
dec
dec
and
add
clc
lods
fs
cmp
imul
clc
loop
push
add
mov
inc
add
push
and
add
pushf
push
add
int3
push
ss
xabort
sti
test
inc
clc
mov
adc
add
clc
stos
xor
add
mov
add
rorb
je
dec
pop
pusha
add
pop
or
and
add
nop
cmp
js
clc
push
clc
push
je
cmc
sbb
add
mov
pop
xor
add
mov
xor
add
clc
dec
adc
add
clc
cmp
daa
clc
cmp
cmp
nop
leave
imul
pusha
add
push
add
loope
xabort
jae
add
pop
push
clc
popf
jmp
clc
inc
add
cmp
inc
add
clc
mov
cmp
sbb
add
clc
leave
jl
sbb
in
cmp
test
repnz
dec
cmp
jge
clc
jno
add
out
aaa
in
cltd
push
push
add
or
mov
and
xchg
push
int3
push
sub
ja
in
cmp
rorl
test
dec
es
jmp
clc
es
push
scas
mov
popa
add
sbb
add
dec
enter
sahf
pushf
je
pop
dec
mov
add
cwtl
movsl
clc
mov
clc
dec
push
or
add
push
add
call
mov
push
aas
and
arpl
add
pop
test
or
add
bound
add
push
push
clc
mov
add
aaa
fdiv
dec
pop
jb
add
pop
rcll
clc
cmp
mov
out
shrl
sbb
xor
add
mov
clc
nop
bound
add
xor
add
and
sbb
or
add
fldenv
or
add
cmp
dec
xchg
pusha
add
movd
pop
mov
js
xor
push
mov
push
cmc
insb
push
xchg
cmp
pop
push
cld
mov
cmp
clc
setns
leave
test
fsubs
add
out
inc
clc
xchg
stos
nop
mov
sub
clc
fwait
leave
mov
call
add
jb
add
mov
clc
data16
inc
clc
scas
inc
add
sub
clc
rorl
dec
repnz
add
clc
rclb
sar
add
fs
jb
add
add
push
add
add
add
cmc
fisttps
dec
dec
test
test
cmp
add
scas
add
fsubr
pop
and
aas
dec
add
add
push
push
mov
inc
add
sbb
jecxz
mov
clc
sub
clc
divb
nop
mov
clc
jnp
and
add
add
add
fldt
jb
add
cmpsl
clc
jae
add
out
int
sbb
jno
add
add
decb
add
add
clc
ss
test
fnstsw
pushf
sub
add
mov
loopne
repnz
sbb
add
xchg
incl
add
daa
clc
fwait
divb
insl
movsb
clc
bound
add
add
out
push
or
clc
leave
insl
je
clc
push
add
insb
jb
add
ja
scas
gs
loop
or
loopne
and
add
negl
add
cmp
adc
aam
rcl
popf
addr16
and
add
mov
xbegin
inc
clc
in
mov
push
data16
shlb
clc
in
or
clc
push
cli
inc
clc
xchg
cmpsl
clc
push
mov
xor
add
add
adc
pusha
add
dec
adc
add
add
call
add
xor
add
clc
jle
dec
js
daa
clc
clc
lret
fadds
add
add
pusha
add
ffree
clc
sbb
clc
jno
add
jno
add
scas
pop
pop
adc
add
hlt
jne
adc
push
push
add
adc
add
add
add
clc
pop
sahf
xor
add
add
xchg
call
add
add
adc
clc
dec
pop
add
add
add
mov
add
jo
add
add
dec
pop
clc
and
int3
data16
add
add
mov
cmp
mov
pop
xchg
jnp
out
and
mov
clc
out
xabort
cs
add
daa
clc
cmp
pushf
mov
stc
xchg
mov
clc
insl
out
sub
jg
clc
ss
sar
fildll
xadd
fnstcw
arpl
add
add
fs
fs
xor
fwait
sbb
clc
mov
jmp
or
add
test
mov
adc
inc
add
or
mov
clc
into
push
add
clc
mov
and
add
icebp
aam
clc
hlt
and
adc
add
clc
cwtl
aaa
test
push
add
adc
add
xor
add
pushf
xchg
pop
pushf
cmovs
ljmp
add
loop
jmp
add
adc
add
lret
xabort
clc
mov
fwait
gs
ret
clc
sub
jecxz
lahf
imull
jb
add
mov
mov
jge
pop
xbegin
lcall
arpl
add
add
clc
test
lcall
movsl
clc
mov
mov
xchg
mov
fs
bound
add
clc
pop
ret
add
hlt
inc
add
jl
mov
daa
clc
clc
xor
add
pop
inc
clc
movups
add
clc
xor
add
xor
add
clc
rcrb
test
clc
and
add
add
in
add
add
addr16
sub
sbb
sar
add
inc
add
aad
jp
rorb
cltd
leave
lret
aas
add
add
add
pushf
mov
clc
idivl
mov
pop
mov
add
and
add
jne
add
mov
clc
dec
cmp
clc
lock
add
fstps
sbb
sub
xabort
xchg
mov
clc
add
add
jmp
clc
rcrl
fildl
add
pusha
add
push
or
mov
sbb
clc
or
bound
add
pop
xchg
or
ja
add
lret
push
popf
cmp
filds
clc
lret
push
xchg
pop
out
sbb
add
fisttpl
divps
sbb
add
sub
mov
mov
add
xchg
fisubrl
clc
mov
lahf
fsubrp
gs
mov
sti
xor
add
clc
push
fcompl
clc
adc
jnp
pop
fdiv
fcmovu
mov
add
imul
inc
add
aas
sub
add
jge
iret
dec
mov
clc
mov
int
add
fstpt
loope
int3
adc
add
mov
cmp
daa
clc
sub
push
add
lret
mov
pop
pop
int3
icebp
cltd
pop
bound
add
enter
aad
clc
cmc
mov
add
ret
clc
mov
add
mov
js
clc
fidivrl
sbb
add
add
inc
add
scas
aam
add
jp
or
jno
add
clc
xchg
sub
add
clc
adc
and
popf
incb
add
jg
mov
sub
lret
loop
in
mov
clc
add
adc
add
jns
jne
add
sub
mov
cmp
clc
push
add
movsb
clc
xlat
jp
test
cmp
xchg
out
add
add
clc
sbb
clc
pop
xor
add
stc
xchg
pop
sar
ss
add
xor
clc
enter
add
test
pop
push
jle
xor
add
sbb
xchg
fbstp
add
sar
mov
clc
cmp
xor
add
add
fs
in
xor
add
clc
dec
out
mov
add
or
clc
lods
repz
fwait
aam
bswap
pop
and
add
call
add
clc
das
push
lret
pushf
mov
stos
jb
add
xchg
mov
dec
pop
push
xor
add
add
add
add
clc
push
push
add
jno
add
clc
push
xor
add
icebp
cmc
jne
mov
add
pop
ja
clc
cmp
loopne
adc
add
test
cltd
pop
lahf
jb
add
xlat
loopne
das
sbb
add
rcll
arpl
add
cmpsb
clc
sub
lods
jge
jb
add
clc
add
add
shll
add
inc
add
jns
and
add
shr
inc
clc
rcrb
pop
jbe
arpl
add
xor
add
add
add
sub
clc
xor
jnp
sub
clc
push
push
xchg
and
add
arpl
add
add
rorb
pop
getsec
sahf
bound
add
add
dec
ds
jl
daa
clc
jge
pusha
add
data16
jae
add
mov
clc
clc
pop
sbb
pop
pop
gs
sbb
inc
clc
insl
jl
mov
imul
fnstenv
add
test
mov
add
clc
pop
ljmp
inc
clc
std
cmp
add
push
inc
clc
add
aas
call
add
out
jnp
or
cwtl
es
movsl
clc
rcrl
lret
fiaddl
call
or
clc
sub
aas
imul
add
mov
or
ja
clc
sbb
xor
shrb
out
aad
cmp
inc
add
repz
cmp
pushf
jbe
add
mov
sar
int
mov
cmp
clc
inc
add
icebp
leave
cmc
cli
mov
clc
or
add
mov
inc
clc
jns
je
xor
add
xbegin
or
cmp
in
clc
loop
sbb
xchg
cmp
adc
add
add
lock
clc
pushf
cmp
add
mov
add
push
inc
add
push
cld
mov
pop
lock
add
inc
clc
adc
add
insb
sub
out
mov
add
add
loop
fs
mov
xchg
lret
mov
add
cmp
add
adc
add
in
xor
add
imul
fisttpll
js
clc
bound
add
clc
xchg
dec
mov
cli
data16
push
jecxz
sar
fadd
clc
stos
xchg
lret
add
add
jle
clc
cmp
jecxz
sar
lret
xchg
dec
adc
add
dec
cmpsb
clc
jbe
xchg
pop
sub
clc
add
add
clc
pop
jbe
add
mov
cmp
jg
clc
movsl
clc
jg
clc
push
clc
and
add
scas
repz
sbb
test
in
mov
and
add
add
inc
add
adc
add
clc
or
add
add
xchg
add
add
adc
add
sub
icebp
mov
pop
daa
clc
out
popa
add
mov
add
in
cltd
xchg
jecxz
jnp
pushf
dec
xor
add
decl
cli
fnsave
cmp
push
pushf
jbe
xor
add
mov
mov
cwtl
cmp
cmp
shll
inc
clc
mov
mov
cmpsb
clc
insl
xchg
xchg
cs
clc
mov
lock
repz
pop
js
clc
ret
clc
sub
add
mov
imul
add
fldt
clc
pop
adc
js
call
sub
add
mov
xchg
or
clc
and
add
cmpsb
clc
xor
add
add
jmp
clc
mov
ficoml
cmp
xchg
shll
mov
clc
ret
jb
add
add
lods
mov
je
xor
or
clc
movsb
clc
push
gs
imul
add
add
adc
cld
aaa
dec
cmp
aas
mov
lret
mov
add
inc
clc
xchg
or
clc
ja
mov
shr
addr16
mov
add
jecxz
shll
add
clc
xchg
push
add
or
add
mov
pop
mov
fsubrl
add
test
lret
and
add
in
repnz
stc
out
loop
and
add
mov
pop
movsb
clc
adc
out
jp
pop
cmp
clc
and
add
mov
add
mov
insl
aaa
out
pop
mov
add
clc
es
daa
clc
enter
into
or
xchg
stc
stos
scas
ror
cltd
xchg
xchg
lock
enter
add
sbb
and
sbb
mov
mov
inc
add
inc
clc
inc
add
xchg
stos
sbb
clc
mov
loop
inc
clc
lock
mov
pop
clc
jbe
add
ljmp
add
add
add
or
popa
add
outsb
and
add
add
add
add
add
int
ja
sub
fwait
inc
add
cs
clc
xor
add
int
daa
clc
jle
xor
sysexit
out
stos
xchg
cmp
clc
dec
incl
sti
sub
add
testb
push
clc
movsl
clc
mov
push
add
add
add
js
clc
gs
out
and
hlt
jno
add
clc
cltd
mov
shlb
out
fidivs
inc
add
jbe
or
jmp
add
stos
std
or
dec
sbb
mov
icebp
jno
add
jle
add
inc
add
adc
add
clc
nop
mov
icebp
mov
cmpsb
clc
push
mov
sub
mov
inc
add
lcall
into
stc
imul
jp
clc
inc
add
leave
push
int
dec
mul
clc
sub
pop
or
add
mov
clc
xor
add
clc
aam
clc
sbb
clc
aaa
pop
lcall
sub
repz
add
add
or
in
rcr
ret
clc
test
mov
add
add
insl
rol
clc
movsb
clc
and
add
mov
inc
add
inc
clc
ret
pop
dec
sar
xor
add
mov
and
add
add
fdivs
scas
jg
push
shlb
mov
jle
jl
clc
cwtl
xchg
sbb
outsb
sub
int3
mov
add
inc
add
call
clc
in
and
add
aaa
push
sub
ds
test
sar
loopne
cmp
clc
jne,pt
push
add
jge
add
inc
clc
lahf
xchg
mov
test
mov
int
add
int
sbb
add
imul
mov
jp
clc
or
sbb
add
mov
add
loope
pop
xbegin
sbb
push
pop
das
movsl
clc
data16
vmread
add
adc
add
add
aad
add
xchg
push
add
pop
lods
out
mov
test
fsubr
cmpsb
clc
jne
test
or
add
inc
add
mov
add
cmp
xchg
gs
fwait
push
add
jp
push
add
incb
clc
inc
clc
push
xchg
imul
mov
clc
dec
xor
add
add
enter
sub
ret
mov
xchg
push
sbb
rcr
icebp
adc
add
or
add
pusha
add
icebp
push
in
mov
jbe
fsubr
hlt
imul
scas
inc
add
cmc
dec
mov
adc
add
inc
add
xchg
and
add
dec
shrb
or
pop
add
add
adc
add
lods
lock
out
out
and
add
add
pop
dec
pusha
add
pop
mov
jo
add
mov
mov
cmc
sub
sbb
cmp
clc
movsl
clc
push
add
push
clc
xchg
or
loop
ja
stos
dec
in
sub
add
lock
clc
pop
jecxz
sub
add
mov
outsb
fiaddl
add
add
lea
adc
adc
add
rclb
call
cltd
shlb
xchg
ret
clc
jmp
in
sahf
inc
add
popa
add
jl
add
cmpsb
clc
pop
xor
mov
add
xor
add
sbb
add
jl
fcmovb
clc
xbegin
add
scas
int
jg
jo
add
clc
pop
push
pop
aad
add
and
add
xchg
cmp
movsl
clc
push
mov
and
add
or
add
dec
notl
add
add
test
clc
push
in
lcall
fcoml
add
xor
add
clc
outsl
mov
clc
mov
clc
pop
xabort
push
jmp
xchg
cli
pop
dec
imul
clc
dec
xor
add
cs
add
and
add
add
clc
sbb
add
shl
xchg
clc
push
popa
add
bound
add
cmp
clc
lcall
pop
ret
sub
int3
scas
push
add
movsl
clc
leave
leave
jo
add
clc
pop
sar
fs
jle
inc
clc
push
stos
pop
je
clc
out
xabort
mov
dec
cmp
clc
iret
adc
add
clc
and
add
clc
imul
pusha
add
and
add
mov
rclb
add
clc
xchg
leave
mov
add
into
jo
add
add
inc
clc
repnz
repz
pushf
mov
clc
fcoms
arpl
add
add
xlat
in
lret
add
stc
out
sbb
loope
push
popa
add
jle
repz
add
sub
es
or
lahf
pop
clc
iret
inc
add
cmp
shrl
pop
stc
jne
add
add
add
push
push
mov
sbb
mov
dec
push
std
add
add
clc
ja
clc
aaa
cmp
clc
fwait
clc
jg
jle
clc
mov
push
clc
dec
xchg
test
jl
imul
mov
or
gs
outsb
sub
jge
clc
dec
clc
lods
xabort
clc
scas
inc
clc
call
mov
aam
das
out
ret
clc
ljmp
clc
push
cmp
clc
inc
add
int3
aaa
ret
clc
adc
add
lea
push
push
add
cmp
mov
cmp
add
mov
out
mov
add
xchg
mov
clc
push
add
cltd
je
pop
and
add
cmp
xor
add
rcll
add
push
cmp
rclb
add
in
sub
mov
bound
add
add
ret
clc
push
fcomip
out
lods
popa
add
mov
push
xchg
popa
add
jmp
mov
aaa
outsb
aaa
cmpsb
clc
lods
xchg
and
add
mov
and
or
push
and
add
es
lods
add
add
add
mov
mov
clc
mov
clc
icebp
jmp
aam
fs
jle
mov
int
call
sti
jp
int
rep
mov
add
ret
clc
mov
clc
jg
clc
and
add
add
cwtl
add
add
cmp
push
push
add
xor
add
cld
sbb
and
cmp
leave
xchg
lock
mov
clc
push
int3
mov
xlat
add
add
fwait
or
xor
add
add
aam
and
mov
clc
hlt
or
add
sub
ficoms
pop
push
add
inc
add
and
add
imul
cltd
sar
cmp
clc
push
movsb
clc
je
inc
add
fisttps
repnz
pop
xor
outsb
scas
mov
cmpsb
clc
xchg
jnp
es
daa
clc
in
adc
add
clc
mov
sar
call
cltd
inc
add
pop
iret
push
lock
xor
add
add
add
mov
add
dec
pushf
repz
mov
fwait
sti
mov
xlat
or
fdivrs
clc
sbb
clc
scas
es
mov
inc
add
hlt
adc
or
add
sbb
add
xchg
aaa
xor
add
inc
add
loop
hlt
push
clc
ds
xabort
clc
pop
movsb
clc
add
add
add
dec
data16
inc
add
sbb
int3
jge
call
loopne
ret
clc
gs
jge
cmp
lea
adc
add
add
clc
mov
fnstcw
clc
cmp
pop
push
add
je
sbb
clc
sti
mov
cltd
mov
add
add
add
add
dec
in
cmp
in
dec
or
xchg
fsubrs
xbegin
jle
clc
sub
ss
add
clc
loope
cmp
loop
bound
add
nop
pop
sub
xor
clc
xchg
inc
clc
das
mov
clc
add
add
add
add
fs
movsb
clc
inc
add
icebp
xor
add
stc
cmp
push
add
ss
add
push
xbegin
lods
sub
add
lahf
push
add
cmp
out
addr16
fxtract
das
push
add
incb
clc
xor
add
clc
jns
add
cmp
je
jg
clc
adc
add
xchg
scas
sbb
pop
pop
data16
push
add
dec
repz
idiv
push
sub
clc
scas
mov
clc
sub
pusha
add
push
add
addr16
fstp
push
sar
add
xor
add
clc
adc
add
jle
cld
add
add
add
add
nop
inc
add
pop
in
or
int
clc
insl
sbb
jnp
xabort
mov
add
sub
out
dec
nop
xor
add
add
inc
add
imul
sbb
xbegin
mov
xor
add
add
adc
int
clc
push
rcl
pop
aas
sbb
icebp
repnz
push
inc
add
lods
lret
sbb
add
movsl
clc
leave
mov
pop
xor
add
cmp
clc
push
and
add
add
sub
add
add
cmp
stc
xor
add
daa
clc
in
loope
in
jns
scas
bound
add
or
sbb
add
xchg
repz
add
mov
push
push
xchg
mov
add
aas
mov
clc
mov
cmp
add
insl
std
scas
jno
add
add
cmp
add
enter
add
add
data16
mov
test
xchg
iret
mov
clc
rol
clc
lret
push
test
stos
nop
mov
es
adc
add
outsb
lret
clc
mov
loope
and
pushl
add
cmp
mov
add
mov
dec
or
sub
pop
mov
clc
add
add
add
clc
rdpmc
add
mov
add
loopne
jb
add
add
pcmpeqb
add
or
push
std
xchg
fwait
sbb
add
fxch
or
add
or
pusha
add
mov
ljmp
cmp
lcall
fisttpl
add
cmp
imul
pop
sub
daa
clc
filds
out
jecxz
cs
clc
mov
negb
push
clc
sub
loopne
jl
jecxz
test
int3
lods
lret
cmp
cmpsb
clc
xor
add
xbegin
clc
addr16
sar
clc
xabort
mov
ja
inc
clc
sub
add
es
cmpsb
clc
and
add
jb
add
dec
loopne
adc
add
cmpsb
clc
addr16
mov
stos
pop
dec
xchg
dec
lret
xlat
mov
adc
add
pop
xabort
shl
pushf
mov
add
adc
add
clc
jns
scas
into
cmp
clc
pop
xor
add
leave
ljmp
pop
jge
test
imul
add
push
add
lods
icebp
hlt
es
mov
sub
dec
cmp
std
movsb
clc
lahf
into
xbegin
mov
cld
adc
add
add
outsl
mov
jge
clc
push
clc
jb
add
inc
clc
push
add
cmp
sbb
adc
add
add
add
cld
add
mov
add
add
jne
pushf
out
inc
add
pop
dec
xchg
xchg
sub
clc
dec
inc
clc
repz
sub
sub
fimuls
cli
jecxz
add
scas
into
dec
loope
filds
clc
jle
clc
lods
out
bound
add
inc
add
xor
pusha
add
push
dec
mov
add
add
clc
pop
pop
jb
add
cmp
dec
es
xchg
sbb
mov
xchg
daa
clc
push
add
sub
sbb
clc
add
clc
add
add
add
add
dec
ljmp
add
cmp
or
jne
push
aaa
xor
add
imull
mov
clc
add
lcall
cmp
jmp
and
add
jge
jmp
xbegin
add
sar
add
add
add
add
jnp
adc
add
mov
push
add
popa
add
cmc
adc
add
xlat
stc
shlb
or
clc
lea
jecxz
mov
dec
adc
pushf
das
sti
sub
dec
xchg
test
add
daa
clc
jp
clc
or
mov
test
hlt
inc
add
sar
mov
lahf
add
add
clc
cmp
dec
xor
mov
and
add
add
and
add
and
add
add
add
loope
das
sbb
clc
or
clc
mov
add
lret
insl
jmp
rdtsc
add
cs
add
add
fs
fistpll
or
jl
jp
clc
push
in
mov
in
xor
negl
jg
clc
inc
add
cli
cmp
clc
xor
add
add
xchg
mov
mov
lock
clc
cmp
xchg
notrack
add
clc
repnz
and
add
add
add
daa
clc
mov
add
add
sarb
gs
pusha
add
and
mov
cmp
clc
push
add
stos
mov
clc
dec
in
lock
xor
add
into
pop
clc
arpl
add
clc
into
ret
clc
ja
clc
sub
sbb
ja
clc
adc
add
jnp
sar
add
inc
clc
jne
inc
clc
ja
clc
hlt
sub
arpl
add
into
cmp
add
aas
sub
add
outsl
ret
imul
sbb
clc
ja
clc
sub
jg
add
mov
inc
clc
dec
out
imul
repnz
add
add
cmpsl
clc
loopne
push
je
out
mov
mov
ljmp
cmp
pop
jmp
js
add
movsl
clc
ds
rcll
clc
sti
inc
clc
dec
ret
clc
aas
sub
std
inc
clc
cmc
jne
in
and
sbb
clc
dec
mov
add
je
clc
lods
roll
call
xor
and
add
jns
cmpsb
clc
loope
movsl
clc
loopne
or
lcall
mov
fcomps
imul
jne
add
jmp
add
lret
cli
pop
mov
jge
repnz
addr16
es
dec
adc
add
xchg
shrl
adc
cmp
clc
or
clc
add
fsubrp
data16
dec
loopne
not
cmp
loop
sbb
xor
clc
push
stos
in
es
push
add
mov
icebp
cmp
clc
jnp
clc
into
cwtl
es
jg
add
and
add
add
mov
out
je
mov
cmpsl
clc
or
hlt
mov
adc
add
clc
cmp
clc
jp
clc
or
mov
clc
cltd
clc
es
icebp
pop
sar
pop
or
add
movsb
clc
xor
add
jae
add
clc
jl
mov
clc
jns
add
leave
in
lock
sub
test
mov
sahf
inc
clc
enter
add
fcomps
adc
add
clc
es
int3
clc
push
in
push
add
mov
mov
clc
and
add
add
lock
add
mov
ds
add
sub
pushf
xbegin
clc
cli
fidivrl
arpl
add
fdiv
inc
clc
jg
inc
add
das
cmp
xor
add
add
mov
clc
inc
add
mov
or
clc
clc
je
lahf
xor
clc
cmp
clc
iret
addr16
decb
add
add
setne
jno
add
clc
push
pop
out
frstor
or
clc
out
and
add
dec
in
arpl
add
fstpl
clc
add
add
clc
adc
outsl
or
or
clc
cmp
jbe
or
arpl
add
negl
clc
push
ljmp
clc
in
cli
imul
mov
pop
jnp
push
add
stc
fisubs
clc
aam
fmuls
cmp
clc
cld
xor
add
sbb
or
insb
xor
add
jmp
sub
int
dec
fdiv
repnz
clc
rol
clc
mov
iret
mov
mov
clc
leave
scas
ds
add
shrl
aas
stos
imul
push
xchg
cs
add
lock
mov
sbb
clc
in
xor
clc
push
clc
aaa
insl
push
jno
add
add
push
in
dec
mov
add
cli
cmpsl
clc
sbb
mov
and
add
adc
inc
clc
negl
cmpsl
clc
iret
mov
push
add
lret
add
cld
sbb
add
ficoms
pushf
mov
call
iret
sub
add
push
jo
add
clc
adc
add
clc
cwtl
data16
sub
lret
fcmovb
clc
adc
add
push
jbe
shrl
add
into
aas
sub
jnp
clc
cmp
in
cwtl
mov
dec
push
mov
push
clc
or
add
add
clc
cmp
bound
add
add
add
clc
sbb
dec
jno
add
jmp
int
lods
pushf
and
outsb
xor
clc
ss
lret
jne
add
jp
test
jmp
dec
jo
add
cmp
add
cmp
cmp
dec
dec
out
stos
shlb
mov
sbb
clc
sbb
aas
aad
lcall
lods
push
xchg
mov
inc
clc
dec
jae
add
clc
das
fidivrs
clc
jo
add
add
or
clc
rorl
pop
clc
adc
add
pop
test
int3
mov
leave
das
cwtl
or
add
mov
xor
add
dec
cmp
clc
pop
pusha
add
sar
jno
add
add
add
jge
pop
push
mov
add
mov
stos
daa
clc
cmp
lods
pop
mov
out
aam
add
shll
add
xabort
clc
sar
sub
add
jns
mov
sub
add
jle
or
mov
shll
lret
mov
cmc
inc
clc
test
clc
clc
bound
add
fstl
add
push
xchg
or
clc
xchg
xchg
and
clc
adc
add
scas
out
mov
lea
repnz
insb
cmp
add
adc
add
cmp
xchg
dec
pop
jno
add
add
mov
cmp
clc
lea
add
xor
add
push
call
lret
lods
dec
pop
and
add
pushf
cmp
xchg
insl
ret
clc
ss
ss
jnp
insl
cmp
push
inc
add
jbe
cmp
sbb
xchg
push
loope
std
fsubl
add
clc
and
loope
mov
insb
inc
add
pop
clc
clc
fs
cli
cmp
cmpsb
clc
add
add
sub
push
pop
ret
push
add
inc
add
inc
clc
nop
es
push
clc
push
add
lret
inc
add
mov
sub
add
add
scas
test
push
mov
push
cs
fwait
sub
adc
add
jmp
push
add
adc
add
sar
add
add
dec
pop
cmp
clc
push
outsl
fsubl
inc
add
jle
or
clc
cmp
insl
sbb
clc
add
add
push
add
out
cmp
enter
add
push
jae
add
out
clc
jae
add
sbb
clc
sbb
add
test
movsb
clc
mov
pop
clc
pcmpgtw
mov
js
add
adc
add
sbb
fisttpl
ret
clc
push
out
pop
in
stos
jmp
add
xor
sbb
pop
lret
stc
bound
add
add
clc
cwtl
sub
clc
add
add
dec
fsub
clc
std
xor
add
ds
mov
in
daa
clc
adc
add
add
or
popa
add
jno
add
add
test
inc
add
jne
mov
clc
or
clc
inc
clc
and
push
add
fisubl
add
pop
into
or
push
add
push
add
fwait
or
add
inc
add
mov
clc
loop
daa
clc
je
mov
ret
clc
mov
clc
mov
adc
add
mov
clc
push
add
test
arpl
add
sub
add
add
mov
lods
sbb
data16
aam
clc
dec
cwtl
mov
clc
ja
clc
test
clc
pop
int
mov
loope
addr16
out
vmovlps
add
xor
and
and
add
add
fildll
xchg
xchg
pop
lahf
jecxz
dec
adc
add
sub
jle
nop
jb
add
add
sbb
clc
pop
adc
add
test
add
clc
int
sbb
sub
mov
xor
sub
add
vmovups
add
add
cltd
dec
cld
dec
cmp
clc
add
movsl
clc
xlat
icebp
mov
dec
mov
cmp
push
add
lcall
scas
push
add
sub
xor
add
inc
add
pop
jb
add
out
or
sub
cmpsb
clc
addr16
popf
jge
clc
inc
add
xchg
xchg
pop
cmp
add
add
cmp
add
mov
cltd
popa
add
scas
jecxz
push
add
add
lods
sub
shll
mov
add
fnstsw
lahf
loope
sbb
add
clc
addr16
sub
call
lcall
inc
add
jl
mov
add
dec
enter
mov
xchg
cmp
clc
repnz
repz
add
inc
clc
xor
add
add
xchg
insb
mov
fisttps
add
scas
pushf
jno
add
lret
add
sbb
je
inc
add
scas
inc
add
daa
clc
shlb
add
or
sar
stos
mov
xbegin
outsb
sub
clc
lods
mov
clc
sub
sbb
mov
add
sub
add
push
outsb
lock
cmc
cli
push
in
loop
mov
jl
pop
aas
sbb
push
add
add
add
cli
xor
add
adc
add
in
pop
mov
add
xbegin
jge
mov
clc
mov
push
add
pusha
add
dec
arpl
add
mov
jno
add
clc
sar
jae
add
mov
stos
stos
pop
lea
add
in
scas
mov
stos
push
popf
add
add
adc
add
add
lret
clc
test
aas
mov
clc
sub
clc
push
lret
movsl
clc
fmull
mov
jnp
sar
xchg
pop
clc
inc
clc
mov
mov
enter
or
popa
add
mov
xor
add
fbstp
add
inc
add
push
cli
insl
add
add
xor
cmp
and
jne
jge
jnp
dec
inc
clc
ja
div
pop
lock
clc
js
clc
pop
lahf
lods
ret
clc
int
clc
jnp
add
repz
add
jno
add
or
sub
clc
call
clc
sub
sub
faddp
clc
push
add
jge
pop
in
mov
xlat
std
mov
shl
xchg
xchg
pop
cli
mov
cs
clc
fsub
clc
sub
mov
clc
or
popa
add
push
mov
cmpsb
clc
mov
clc
mov
jmp
bound
add
clc
outsb
or
pop
jo
add
clc
inc
add
cmp
clc
cmp
fsubrs
popf
sub
and
clc
pusha
add
sub
add
pop
leave
add
add
std
ficompl
cld
xchg
int3
stc
in
lock
jmp
inc
add
sar
add
dec
mov
add
xchg
or
cmpsl
clc
aas
fcom
pushf
push
add
pop
outsb
mov
mov
pop
stos
leave
lret
cmp
int3
lret
imul
stc
int
pop
aam
add
xchg
jle
add
push
clc
cmp
out
movsb
clc
xlat
outsb
xchg
push
fistpll
inc
add
xabort
push
jo
add
or
das
xor
push
clc
ret
clc
loopne
mov
inc
clc
fldl
movsbl
sbb
inc
clc
push
inc
add
scas
in
and
lret
add
jno
add
clc
xchg
sub
adc
add
or
pcmpgtb
leave
mov
add
mov
sahf
cmp
in
outsb
in
leave
push
push
add
push
aam
pushf
xor
add
clc
jo
add
add
lret
mov
pop
jl
imul
clc
push
adc
add
imul
das
int
clc
xchg
sub
jl
add
inc
clc
int3
push
fucomp
lcall
add
add
add
push
cmp
cmp
mov
mov
clc
jae
add
add
sar
pop
cwtl
mov
int
and
add
mov
push
clc
or
clc
jns
xor
add
add
add
clc
out
data16
inc
clc
mov
inc
clc
jae
add
clc
jecxz
jmp
clc
not
cmp
xchg
rcl
sub
lahf
div
jo
add
mov
clc
psllw
add
jg
push
aam
clc
sarb
add
jbe
jl
clc
xchg
push
inc
add
fcoms
add
shll
add
jg
add
enter
imul
je
sub
out
jns
push
add
jbe
clc
ja
clc
sar
aas
loope
clc
adc
add
mov
push
add
dec
pop
scas
cld
xor
add
cwtl
add
add
es
pusha
add
lcall
xchg
lea
cmpsl
clc
imul
lret
add
add
clc
jmp
mov
fcompl
clc
es
flds
clc
loope
gs
mov
add
jo
add
mov
pop
fisubs
mov
add
cmp
add
pop
mov
add
lods
popa
add
push
stc
vucomiss
ss
and
add
notl
clc
std
dec
sbb
add
add
and
add
xor
add
int3
dec
mov
xor
add
add
pop
fcomi
jecxz
dec
std
push
add
cmc
vdivps
add
add
clc
ficoms
xchg
push
and
add
lret
pop
inc
add
mov
inc
add
shlb
add
clc
cmp
loope
xchg
lock
clc
add
add
fdivrl
add
mov
clc
xorps
add
and
add
cld
cmp
testb
aaa
rclb
add
cld
cmp
sbb
jb
add
daa
clc
jbe
flds
seto
jmp
enter
mov
js
add
dec
push
adc
iret
adc
clc
inc
clc
cmp
enter
imul
and
mov
jle
fs
xchg
mov
jne
clc
mov
sbb
xchg
jmp
stos
loope
inc
add
adc
add
or
jg
cmc
mov
pop
lcall
mov
clc
pop
pop
fidivrl
xchg
inc
add
inc
clc
icebp
jo
add
clc
ret
iret
xlat
xchg
addr16
dec
sub
add
insb
sar
add
xchg
xbegin
inc
clc
xchg
mov
xchg
or
dec
push
bnd
sub
add
add
clc
es
iret
push
add
sbb
and
add
movsb
clc
jno
add
clc
xchg
rol
clc
in
loope
data16
imul
cmp
jl
pop
mov
cmp
inc
clc
adc
add
add
mov
cmp
add
fidivrl
clc
push
pop
lret
fldlg2
push
push
sub
repnz
clc
ds
jmp
mov
clc
mov
or
clc
int3
cmc
dec
stc
fstpt
mov
add
xlat
test
sbb
cmp
fwait
xor
add
outsl
popf
mov
dec
xchg
cmp
or
fwait
xor
add
clc
jle
clc
xbegin
ja
clc
sahf
stos
rorl
out
push
add
pop
push
add
add
add
mov
addr16
dec
data16
inc
clc
insl
sub
push
add
and
add
clc
pusha
add
lret
clc
aad
mov
mov
add
add
inc
add
clc
jmp
adc
add
add
in
push
imul
rcll
add
jbe
clc
or
add
iret
sbb
clc
int3
or
xor
add
add
sti
lock
mov
mov
xchg
repnz
sub
push
int
add
xor
add
jecxz
loope
inc
clc
push
call
push
cmpsl
clc
in
push
add
fdivrs
and
pop
jbe
lret
roll
aas
sbb
sahf
cmc
bnd
ficoml
mov
outsb
or
clc
adc
add
jae
add
clc
add
add
scas
cwtl
jmp
clc
bound
add
clc
imul
fcoml
clc
xchg
xchg
out
cmp
add
dec
cmpsb
clc
data16
push
clc
xabort
add
sbb
es
dec
cmp
inc
clc
mov
clc
add
clc
or
clc
mov
cmc
xor
imul
insl
adc
dec
fsubrl
loope
xchg
add
add
pusha
add
sbb
adc
add
add
mov
clc
push
aas
push
lahf
jbe
clc
pop
clc
xor
out
push
jmp
mov
add
pusha
add
lret
pop
std
pop
fstp
cmpsl
clc
fwait
jns
mov
add
lret
mov
and
add
or
clc
fildl
mov
add
test
xor
add
iret
cmp
das
pop
bound
add
stc
cmp
add
xchg
lods
jne
lahf
sar
ss
dec
add
add
add
data16
jbe
jne
js
clc
lods
jb
add
jbe
add
jb
add
jns
jle
add
loope
xabort
pop
mov
mov
in
cmc
faddp
clc
clc
in
xbegin
add
add
add
lods
pop
outsl
lret
sbb
or
add
ja
add
mov
out
lret
add
add
clc
push
iret
cmc
sub
push
mov
rolb
add
xchg
push
ds
add
add
xbegin
clc
add
add
lcall
add
cwtl
mov
add
popa
add
sar
add
xchg
std
inc
clc
sti
inc
add
fisttpll
mov
clc
cmpsb
clc
loop
fisttps
clc
lret
scas
push
cmp
push
add
test
arpl
add
mov
clc
jg
sbb
jns
repz
cmp
clc
ja
cmp
clc
in
out
cmp
sub
mov
clc
data16
repz
add
test
jmp
sar
out
mov
push
ret
hlt
mov
add
int3
add
add
inc
add
call
mov
adc
add
jmp
add
xchg
mov
cmp
pop
xor
add
sbb
dec
mov
out
arpl
add
add
xabort
ds
cmpsb
clc
xor
sub
mov
xchg
or
cltd
xchg
mov
ret
clc
push
dec
xchg
dec
movsl
clc
push
clc
loopne
aas
cmpsl
clc
pop
addr16
dec
and
add
mov
inc
clc
dec
iret
jp
cmp
cmp
xor
clc
xchg
clc
inc
clc
fsubs
add
out
int
emms
arpl
add
add
shlb
add
mov
inc
add
jns
add
push
fisubl
data16
push
pop
clc
pop
mov
add
xabort
scas
xchg
addr16
fistpll
inc
add
cmp
gs
mov
mov
clc
iret
adc
add
add
outsl
add
add
add
pop
adc
clc
pop
in
push
mov
out
jge
call
add
add
clc
adc
add
clc
gs
and
add
inc
clc
dec
mov
clc
fisttpl
lods
lea
xchg
and
add
lcall
loope
pop
clc
jo
add
add
jecxz
imul
adc
add
incb
dec
sbb
clc
int
clc
dec
sqrtps
add
jg
clc
inc
add
dec
lcall
clc
insl
insb
sar
cmp
hlt
fdiv
repz
fistps
mov
js
clc
arpl
add
add
pop
fs
repz
stos
or
add
in
push
cmpsl
clc
popa
add
es
inc
add
adc
sbb
add
call
jbe
add
push
fs
in
jg
clc
pop
clc
inc
add
xlat
aaa
int3
mov
ja
mov
jnp
clc
in
loope
cmp
hlt
fiaddl
add
dec
pop
shrl
cmp
add
js
cmp
out
pop
clc
jp
mov
and
add
clc
mov
add
sar
adc
add
add
xor
add
hlt
test
pop
clc
mov
mov
jp
add
xchg
mov
add
int3
hlt
push
clc
dec
jge
add
pop
xchg
cmp
repz
mov
dec
aad
clc
sub
jp
sbb
add
xchg
mov
data16
mov
xor
pop
shl
lahf
mov
test
pop
sti
cmp
out
cmp
adc
add
push
add
adc
push
push
add
mov
jno
add
clc
push
add
add
push
add
stos
bound
add
add
fiadds
dec
addr16
mov
sub
add
add
dec
mov
add
stos
pop
xor
add
cmp
push
add
lock
sar
xlat
shlb
add
das
xchg
or
mov
loope
sub
clc
inc
clc
outsl
jne
clc
xor
add
add
mov
clc
and
enter
into
dec
xchg
or
clc
jns
cmpsl
clc
pop
scas
push
clc
enter
icebp
mov
add
clc
test
mov
cmc
inc
add
aad
dec
cmp
clc
or
jae
add
and
jmp
add
dec
push
loop
xor
add
out
sbb
mov
cli
mov
add
xchg
in
jle
sbb
jle
clc
or
clc
mov
dec
cltd
xchg
out
outsb
pop
pop
ss
sbb
add
into
frstor
add
push
add
lock
add
clc
fnstsw
clc
fadds
add
push
add
clc
pop
xor
xor
add
mov
add
add
mov
xchg
pop
fmul
push
add
mov
jae
add
mov
clc
enter
imul
add
paddusw
add
add
add
mov
adc
add
clc
ret
clc
jnp
fbstp
fwait
mov
xabort
inc
clc
jle
clc
lods
int
cmp
dec
in
pushf
cmp
clc
out
pop
inc
add
xor
add
add
add
pop
cmp
xor
es
stos
lret
sbb
lahf
mov
add
mov
lock
xor
add
jle
adc
add
jmp
sbb
lods
or
mov
popf
outsb
out
sbb
sub
add
pop
pop
xchg
xor
add
scas
adc
add
clc
xlat
jl
clc
cmpsl
clc
call
and
add
pop
clc
ljmp
add
lcall
mov
cmp
clc
iret
in
sbb
add
mov
movsb
clc
push
add
adc
add
iret
icebp
pusha
add
jp
cmp
fistl
imul
inc
add
inc
clc
lods
cli
mov
add
adc
add
push
or
lods
xchg
push
fstp
pop
mov
mov
clc
fadd
clc
call
xor
add
clc
xchg
loopne
sbb
popf
cmp
pop
jo
add
cmpsb
clc
xor
add
in
fadds
mov
cmp
jle
ds
cmc
xchg
ror
mov
lret
dec
out
mov
clc
sahf
mov
xbegin
mov
fs
stos
cmp
clc
test
cmp
lret
lea
mov
add
add
add
fistps
in
cmp
clc
mov
add
sbb
pop
clc
mov
clc
mov
clc
dec
inc
clc
mov
clc
inc
clc
or
cli
sar
jle
clc
cmp
and
add
xor
add
clc
stc
mov
add
mov
pusha
add
cmp
mov
fwait
or
inc
clc
repz
add
jge
fstl
add
add
test
or
add
dec
arpl
add
inc
clc
sar
clc
mov
pop
in
push
xchg
fxch
dec
pop
inc
add
out
push
clc
inc
add
mov
add
add
xlat
mov
mov
mulb
ds
cmp
and
add
jne
lahf
mov
bound
add
test
sub
or
jmp
clc
ret
clc
push
scas
leave
test
xchg
sbb
mov
fnclex
clc
lret
sub
add
sti
cli
lods
fbld
clc
pushf
adc
clc
xchg
pusha
add
add
add
dec
gs
or
add
cmpsb
clc
mov
inc
clc
int
clc
icebp
ret
add
jne
data16
lret
lret
clc
in
mov
addr16
mov
lret
aad
das
or
cmp
leave
popa
add
insl
or
xchg
lcall
in
sbb
jne,pn
cld
mov
aas
je
sub
add
es
mov
clc
push
clc
cmc
jae
add
jae
add
cld
xchg
jg
hlt
lret
test
sahf
fsubs
enter
cwtl
inc
clc
cmc
imul
clc
xchg
push
incb
add
add
add
loopne
imul
mov
clc
pop
cmp
clc
gs
lods
pusha
add
jmp
xchg
xbegin
sub
add
cmp
fadd
clc
cmpsl
clc
leave
cmp
add
mov
daa
clc
mov
sub
mov
fs
mov
clc
and
in
iret
add
mov
add
call
ss
clc
xchg
and
add
pop
mov
push
sbb
pop
pop
clc
jo
add
add
ljmp
aam
mov
add
push
sub
clc
insb
mov
ds
insl
push
add
mov
pop
push
add
loopne
loop
mov
out
xchg
sahf
cmp
xchg
fs
cmp
and
icebp
lods
out
jmp
clc
fwait
ror
lods
and
ds
lahf
inc
add
add
add
test
imul
clc
gs
add
add
and
mov
clc
adc
ljmp
clc
dec
lods
in
xabort
clc
xor
add
xchg
cmp
loope
xabort
clc
pop
xchg
xor
add
push
test
loop
jl
push
test
dec
cmpsl
clc
es
mov
lods
insl
cmp
add
ja
push
add
or
dec
fdivrp
into
mov
add
gs
mov
xchg
dec
and
add
add
xor
add
jmp
mov
add
fsqrt
lea
int
mov
mov
pushf
jno
add
add
out
and
fsubrs
lcall
fldl
add
clc
mov
imul
mov
add
or
pusha
add
lea
cmp
clc
inc
add
cmp
add
dec
mov
dec
into
mov
push
cmpsb
clc
xor
add
mov
stos
mov
push
xor
add
fwait
mov
add
add
cmp
ss
push
jnp
call
ror
push
gs
fstpt
sbb
call
lret
out
sub
add
mov
mov
clc
js
cmp
mov
pop
mov
add
add
div
and
add
jae
add
pop
inc
clc
nop
xor
clc
push
xchg
into
sub
clc
inc
clc
push
add
repz
lret
add
mov
xchg
push
add
insb
in
mov
sub
add
dec
cmp
and
add
fidivl
add
je
test
clc
add
add
into
pop
dec
mov
shll
dec
rcll
add
sar
jne
clc
dec
imul
mov
clc
cld
add
add
mov
in
loope
inc
clc
jle
add
stos
outsb
xchg
jge
aam
fnstsw
fbstp
shlb
sub
add
add
pop
hlt
sbb
add
xor
add
sub
clc
mov
xchg
idivb
out
push
fiaddl
push
inc
add
push
out
es
pop
loopne
aad
clc
add
add
add
iret
lods
fldcw
addr16
mov
cmp
mov
clc
fsubrl
dec
pop
cmp
lret
sbb
clc
fs
cwtl
and
add
add
bound
add
clc
or
mov
in
mov
fs
and
add
add
clc
jp
clc
sti
out
sub
xchg
jp
clc
int
daa
clc
outsb
out
mov
clc
inc
clc
mov
clc
sub
movsl
clc
negb
iret
pop
lret
mov
clc
pop
outsl
movsb
clc
clc
push
sub
clc
jge
adc
add
inc
add
call
mov
sbb
add
incl
mov
add
or
test
mov
add
add
add
mov
int3
jno
add
add
test
add
aaa
and
stos
lock
lahf
mov
mov
push
clc
rclb
clc
aas
bound
add
clc
flds
clc
xlat
pop
clc
lock
js
loopne
jb
add
add
repnz
add
clc
test
push
lock
rcl
and
add
or
xchg
movsb
clc
and
setb
add
or
add
clc
fdivl
into
loope
xchg
out
or
xchg
cmp
push
xabort
inc
add
jae
add
clc
lret
clc
test
xchg
push
inc
clc
sbb
clc
addr16
imul
sar
ret
clc
push
push
cmp
add
add
clc
insb
popf
neg
cmp
lock
add
add
test
jge
xchg
mov
imul
add
test
ret
repnz
in
cmp
and
add
gs
cmp
clc
cmp
cmp
mov
mov
gs
xbegin
loope
imul
jge
clc
dec
sbb
jns
clc
jmp
fcomi
push
add
jnp
jb
add
out
dec
mov
fdivr
cmp
stos
loopne
ja
clc
jnp
mov
ljmp
add
test
xlat
mov
clc
imul
mov
push
add
push
mov
jmp
sub
stos
inc
add
push
cmp
clc
pop
inc
clc
mov
mov
mov
add
add
xchg
addr16
aad
jle
jl
add
cmpsl
clc
xchg
es
jnp
xor
mov
lods
xchg
mov
clc
call
decl
push
sbb
xor
add
add
cmp
clc
mov
pop
clc
cmpsl
clc
fidivrl
ret
js
clc
fnstcw
add
iret
loop
outsl
cwtl
cli
sub
movsb
clc
movsb
clc
xchg
xchg
sahf
fisttpll
clc
hlt
mov
pop
movsl
clc
add
add
push
add
add
add
add
xlat
sti
leave
mov
clc
cmpsb
clc
push
add
js
add
pusha
add
stos
push
in
push
stc
lods
sub
insl
pop
sub
clc
inc
clc
aas
mov
test
add
cmc
notb
add
cmpsb
clc
jo
add
ficoml
add
mov
add
js
mov
stc
mov
add
leave
xchg
shlb
adc
add
shrl
test
inc
add
sbb
clc
int
movsl
clc
lret
add
xor
add
clc
pop
xbegin
dec
lcall
jae
add
movsb
clc
xchg
pop
or
push
mov
cmp
add
dec
dec
pop
jnp
jle
jg
mov
clc
gs
xor
add
add
call
clc
push
ss
inc
add
popf
repnz
fistl
add
add
lcall
xchg
jp
clc
adc
add
ds
clc
push
jecxz
or
inc
clc
lret
add
movsl
clc
push
add
mov
call
je
clc
ja
add
icebp
sbb
clc
pop
aas
xor
add
clc
dec
push
fiaddl
add
out
mov
add
sahf
mov
cli
push
js
adc
add
add
fldenv
lock
clc
cmp
clc
enter
clc
cli
pop
stos
clc
repnz
loope
push
or
ds
mov
clc
sub
pop
fiadds
fnsave
jmp
adc
add
mov
clc
test
pop
clc
outsb
scas
lods
mov
gs
jns
clc
test
nop
push
add
popf
stos
mov
data16
decl
inc
add
mov
clc
xor
add
scas
bnd
bound
add
xor
add
jmp
pusha
add
insb
in
inc
clc
dec
mov
add
adc
ja
clc
inc
clc
or
lea
add
clc
mov
call
add
insl
fnstsw
mulb
xlat
aam
dec
push
mov
sub
add
out
push
add
int3
mov
mov
xor
add
add
cmp
movsl
clc
fildl
ds
mov
clc
mov
pop
cmp
mov
mov
dec
cmpsl
clc
add
add
xor
add
imul
cmp
fwait
cld
mov
cltd
rol
clc
cmp
clc
sub
pop
cld
sbb
add
and
add
jbe
clc
dec
cmp
cmp
scas
sar
jge
imul
mov
lcall
jno
add
sbb
sub
pop
xor
add
add
pop
mov
add
sub
clc
loopne
or
out
mov
xchg
jno
add
jne
add
add
mov
xchg
jnp
clc
push
add
mov
push
mov
push
add
hlt
outsl
inc
clc
rcl
jns
adc
add
and
add
cmp
clc
int
add
dec
movsb
clc
mov
clc
sbb
xchg
test
gs
or
sbb
jbe
clc
bound
add
mov
add
das
outsl
pop
sahf
cmp
addr16
add
add
popa
add
pop
adc
add
inc
add
push
imul
add
add
clc
fcmovnu
test
and
add
xchg
sub
cli
adc
add
add
jae
add
clc
data16
jbe
xchg
cmp
mov
js
pop
mov
xchg
and
add
pop
rcrb
mov
xabort
je
dec
xchg
imull
ret
sbb
gs
in
jmp
add
add
dec
aam
aas
mov
ds
stos
gs
sub
scas
xor
push
add
dec
das
jg
aam
push
add
sub
xbegin
insl
push
add
inc
add
loope
xchg
cmpsl
clc
lahf
fstpt
jae
add
roll
add
clc
popf
insb
jo
add
cmp
xor
add
add
loopne
sbb
scas
leave
lahf
sbb
sbb
and
xor
add
add
clc
xchg
stc
pop
add
add
clc
ja
sahf
cmp
shll
add
clc
cmc
int3
and
inc
add
cmp
add
add
jg
clc
mov
clc
mov
test
jbe
fdivp
lods
fstps
adc
add
clc
pop
sbb
mov
mov
ret
clc
call
dec
cmpsl
clc
add
pop
mov
xchg
cli
pop
and
add
or
xchg
mov
cmpsb
clc
cltd
sti
xlat
mov
mov
gs
lods
sub
add
clc
test
aam
jp
clc
mov
push
es
lcall
rcr
add
add
add
test
mov
es
mov
clc
add
add
loope
stc
add
add
and
push
add
jp
adc
clc
pop
js
insl
sub
jmp
or
add
loope
std
das
cmp
clc
out
pop
sub
clc
sahf
lahf
pusha
add
fisubrs
repnz
and
add
mov
clc
pop
bound
add
mov
out
sbb
add
xbegin
mov
adc
add
xor
add
cmp
cmpsl
clc
repnz
inc
clc
mov
add
outsb
add
add
cld
clc
cmp
clc
and
add
loope
add
add
add
add
std
add
add
clc
movsl
clc
cld
dec
xchg
mov
lret
aaa
loop
imul
clc
adc
add
add
cmp
shrl
add
adc
add
cmp
pushf
sub
dec
mov
inc
clc
outsb
enter
test
pop
xor
clc
ss
insb
add
add
call
add
add
cmp
addr16
xor
add
clc
es
divl
mov
clc
push
add
movsb
clc
pop
test
add
mov
adc
add
cmp
add
add
cmp
clc
mov
add
add
scas
push
es
fldt
dec
mov
lea
pop
lods
inc
clc
pop
xabort
clc
std
dec
in
push
add
lods
inc
clc
push
add
repnz
loop
mov
or
mov
push
xor
add
xchg
nop
scas
pop
mov
adc
add
pop
or
nop
out
sub
out
add
add
push
add
jbe
inc
clc
out
push
repnz
add
and
add
adc
lahf
popl
clc
mov
add
xor
in
ret
clc
push
add
xor
add
clc
addr16
xabort
sar
clc
pop
pop
in
cmp
add
sti
push
add
iret
clc
dec
sbb
cmp
inc
clc
lret
pop
add
clc
in
mov
clc
out
xor
add
add
add
stc
aaa
iret
push
aad
pop
shr
or
cmp
movsb
clc
and
sub
add
dec
mov
jmp
dec
je
inc
add
mov
inc
add
pusha
add
test
in
mov
clc
ret
clc
outsl
ficompl
clc
clc
mov
clc
insb
or
add
inc
clc
sub
add
insb
mov
add
fcoms
add
lea
and
add
jne
sub
pop
cmp
clc
mov
add
pop
xchg
jae,pt
add
push
clc
aaa
and
add
add
add
jecxz
dec
cmp
or
jns
shlb
clc
pop
push
bnd
add
add
add
or
das
and
imul
sbb
clc
ds
btc
test
or
aas
sbb
clc
mov
scas
dec
repnz
clc
fcoms
add
clc
add
add
xchg
jbe
cltd
or
dec
ss
movsb
clc
cmp
add
hlt
out
and
add
inc
add
clc
in
xor
add
aam
clc
icebp
jge
add
add
add
lods
mov
nop
mov
in
mov
clc
or
jge
clc
and
add
add
jle
arpl
add
adc
add
in
push
or
clc
cs
in
cmp
dec
mov
mov
clc
add
and
xabort
stc
xchg
inc
clc
push
clc
xchg
fdivs
cld
ret
clc
push
add
push
add
and
add
clc
outsl
icebp
fwait
outsb
xchg
dec
mov
test
or
add
add
movsl
clc
or
add
add
adc
add
jle
cmp
pop
inc
add
cmpsl
clc
or
hlt
and
cmc
imul
xchg
test
add
adc
add
add
add
pusha
add
sbb
std
lods
shl
clc
fbld
fsts
and
add
and
pusha
add
jns
add
idivb
popa
add
jge
inc
clc
xor
clc
addr16
ja
add
std
vsubps
cld
ss
add
add
mov
clc
pusha
add
and
add
pop
outsb
jnp
lcall
dec
ja
stos
cmp
mov
fistpl
clc
loop
scas
push
add
aad
loope
xchg
pushf
push
aaa
mov
ret
addr16
sbb
mov
lods
jmp
loopne
xor
add
aad
dec
add
add
or
or
mov
clc
enter
aad
sahf
mov
add
cmc
dec
mov
mov
gs
nop
inc
add
insb
aas
mov
xchg
inc
clc
and
cmp
loope
outsl
outsb
ja
dec
lret
gs
jle
xchg
xbegin
gs
out
sbb
aad
jp
sub
push
add
aas
xor
add
xchg
mov
clc
cmc
add
pop
mov
mov
add
mov
and
mov
clc
inc
add
mov
jge
add
inc
add
push
add
and
add
add
add
xbegin
rcr
out
hlt
jl
push
xlat
mov
add
jmp
ds
clc
cmp
sbb
and
add
mov
clc
mov
clc
icebp
ret
add
adc
add
pop
clc
pop
leave
roll
lods
pop
das
adc
add
fs
jne
test
lret
daa
clc
aaa
scas
push
ret
clc
mov
xor
add
add
or
xchg
sbb
add
clc
or
clc
aad
lock
add
sub
add
faddl
cs
add
lret
jmp
clc
mov
clc
sahf
imul
add
add
clc
pusha
add
cwtl
arpl
add
xor
add
mov
add
mov
clc
mov
clc
jbe
clc
mov
clc
xchg
pop
jp
pop
ficoms
jno
add
lods
dec
fdivl
loopne
call
mov
or
cmp
mov
jbe
pop
and
add
fs
insl
std
and
popf
pop
jmp
ret
clc
push
mov
incl
std
xchg
lahf
outsl
imul
clc
xor
add
add
cmpsl
clc
js
in
and
add
fldenv
add
clc
dec
rcrb
add
bnd
clc
sub
push
icebp
out
push
clc
dec
mov
add
sbb
jno
add
add
and
add
es
push
add
into
xor
sub
add
xabort
jge
and
add
gs
shll
lock
sub
cmp
add
xchg
or
clc
mov
mov
lret
add
push
mov
ja
adc
add
add
mov
add
rcll
mov
sbb
sbb
cmp
add
pop
jp
add
ret
clc
bound
add
data16
aaa
jmp
add
xchg
or
mov
cmpsl
clc
dec
mov
add
arpl
add
and
add
jecxz
fld
clc
jl
mov
jbe
xchg
lea
pusha
add
je
outsb
fidivrl
add
ret
sub
push
add
repnz
clc
pop
dec
jb
add
pop
test
mov
addr16
push
or
inc
clc
jg
pop
fldcw
add
shlb
clc
xchg
sti
inc
clc
enter
jnp
add
cmp
clc
xchg
mov
sub
divl
out
call
lods
sbb
or
popf
cmp
clc
cmp
add
add
lods
rcrl
dec
cltd
setno
mov
add
jecxz
sbb
movsl
clc
sbb
add
add
add
jae
add
cli
cmpsb
clc
cmp
add
es
ja
gs
pop
arpl
add
clc
add
in
insb
add
add
testb
ja
add
mov
cmp
clc
push
clc
mov
jge
add
loop
jge
mov
outsl
pop
mov
xchg
fs
lods
int
lods
sbb
add
test
arpl
add
add
add
lret
mov
push
mov
clc
cmp
clc
aas
and
add
clc
mov
cltd
dec
jg
clc
pop
insl
push
sub
or
decb
xchg
inc
clc
cli
aad
clc
jp
cmp
in
jne
clc
or
clc
xor
add
insl
mov
clc
lret
xchg
or
clc
xchg
js
sti
cmp
clc
pop
add
add
mov
jmp
clc
adc
add
pop
fistpll
jnp
ffree
clc
test
in
icebp
mov
clc
jo
add
lahf
insb
or
cmp
jne
add
fnsave
inc
clc
loop
ret
clc
rclb
mov
mov
xchg
scas
adc
add
mov
clc
cmp
jo
add
pop
jl
add
mov
add
cli
or
clc
cmp
sahf
cs
dec
aaa
push
iret
in
mov
in
popa
add
sbb
add
cmp
sub
clc
out
jmp
add
clc
dec
push
sar
add
ret
clc
loopne
mov
sbb
punpckhbw
clc
jmp
clc
xor
add
data16
dec
adc
scas
jle
ds
adc
add
mov
clc
test
mov
test
pop
clc
or
aam
push
cmp
jg
lock
outsl
mov
ret
xchg
xor
add
dec
sub
add
scas
push
ljmp
pop
clc
out
jae
add
cmp
clc
sbb
or
icebp
lcall
clc
leave
ret
ret
add
adc
add
push
add
cmp
lock
test
enter
clc
sarl
outsl
xor
add
fadd
clc
push
mov
add
xor
ja
daa
clc
push
stos
testl
add
add
add
in
inc
clc
int3
xchg
scas
hlt
push
mov
or
imul
ja
dec
cld
dec
insb
stos
cmp
roll
add
rcll
add
add
movsb
clc
mov
cmp
clc
je
clc
pop
inc
clc
cmp
stos
xlat
ja
cmc
push
jg
ret
clc
add
mov
outsl
sar
add
cmp
add
add
clc
dec
jg
push
dec
iret
test
push
cmc
mov
clc
sbb
in
imul
clc
insb
movsb
clc
cwtl
xor
add
aas
inc
clc
inc
add
jnp
add
out
fstl
pop
fdivr
out
dec
mov
jb
add
pop
or
aam
clc
xchg
xor
add
add
add
cs
xabort
add
popa
add
sar
jmp
imul
imul
clc
add
jmp
pop
mov
dec
push
int3
pop
sub
clc
cwtl
nop
repnz
jno
add
out
mov
mov
xchg
mov
add
add
sbb
mov
cmp
clc
loope
ret
lcall
ds
xbegin
jns
push
clc
inc
add
sbb
insl
sti
ljmp
clc
bound
add
add
mov
jp
clc
mov
jb
add
add
fucom
clc
outsl
pop
into
test
adc
add
idivb
jmp
inc
clc
xor
mov
mov
jo
add
decl
icebp
sti
jl
add
cmp
daa
clc
jne
cmp
lahf
adc
add
sub
pop
cltd
ljmp
pushf
dec
imul
add
dec
push
and
clc
loop
ret
clc
or
cvtdq2ps
stc
sbb
add
mov
clc
inc
clc
pushf
mov
frstor
jns
fwait
pop
sbb
hlt
sbb
add
add
clc
cmp
or
jge
cltd
sub
dec
outsl
nop
adc
add
clc
shr
jmp
add
pop
mov
sbb
stos
or
mov
jo
add
or
clc
cld
das
pushf
lods
in
jl
mov
cmpsb
clc
or
mov
add
push
clc
ja
xor
clc
sbb
mov
add
sbb
mov
add
cltd
mov
stc
sar
xabort
add
adc
xchg
add
add
sbb
add
xchg
and
add
mov
fadd
clc
inc
add
sub
clc
sbb
or
clc
cmp
add
push
cmc
push
add
or
clc
fs
mov
add
outsl
out
mov
add
mov
clc
je
popf
mov
in
mov
adc
add
add
outsb
sbb
clc
cmp
clc
jg
cmp
ret
clc
fdivrl
push
add
mov
and
sahf
ja
add
add
add
lods
clc
or
lcall
fidivrl
clc
mov
clc
cwtl
pop
clc
push
jo
add
jns
xchg
insl
mov
xchg
adc
add
stos
add
add
aam
xchg
sub
lahf
xchg
adc
add
idiv
leave
popa
add
repnz
clc
cmp
loope
imul
mov
ret
clc
sbb
clc
xor
add
add
add
cmp
lcall
int
clc
mov
mov
sub
clc
sbb
clc
in
int3
lea
jg
pop
xchg
test
add
outsb
jmp
mov
xor
add
adc
add
push
in
mov
aas
test
push
add
mov
and
add
add
decb
inc
add
fdivp
in
cmpsb
clc
xchg
out
testb
push
mov
adc
add
data16
in
ucomiss
imul
mov
add
mov
clc
mov
add
jnp
add
xabort
js
bnd
pop
pusha
add
mov
clc
fistps
inc
add
inc
add
push
add
jmp
mov
mov
clc
mov
jns
clc
mov
call
and
fiaddl
cltd
aam
mov
add
add
dec
jbe
inc
add
not
inc
clc
clc
add
mov
popf
sub
test
pop
mov
cmp
clc
ljmp
add
in
cltd
popf
out
add
add
clc
jb
add
add
cwtl
hlt
ds
cmp
clc
test
add
add
mov
clc
adc
add
add
fistps
add
cmpsb
clc
sbb
jb
add
clc
jo
add
clc
dec
mov
jb
add
fcomip
fistpl
and
add
add
mov
in
notl
add
add
clc
lock
add
in
pop
xchg
icebp
xchg
int
push
clc
push
clc
add
add
nopl
fs
mov
lods
sbb
add
mov
fs
and
jmp
jae
add
push
inc
add
jns
dec
jbe
fiadds
add
add
shr
mov
add
add
or
xchg
dec
mov
push
add
cmp
xchg
sbb
test
push
es
loopne
xor
add
add
cmp
lret
lock
add
add
cwtl
and
add
repnz
clc
mov
dec
xchg
sbb
clc
lret
cltd
push
mov
sahf
fs
sbb
clc
jp
xor
pop
push
pop
xor
mov
mov
pop
clc
pop
push
pop
adc
add
xor
add
sub
add
dec
dec
fiaddl
add
hlt
inc
clc
jne
insl
in
dec
adc
cs
push
in
clc
sbb
sub
fs
enter
icebp
pop
sbb
imul
clc
mov
jns
clc
mov
add
cmp
clc
in
mov
es
pop
clc
lret
xchg
jp
inc
clc
sub
clc
pop
add
add
clc
or
clc
sbb
repnz
repnz
outsb
jl
insb
fwait
hlt
test
pop
add
add
leave
jl
jbe
clc
fsts
clc
popf
in
aaa
stc
sbb
cwtl
push
fld
clc
jmp
mov
clc
xor
add
fdiv
sub
add
pop
lods
pop
sar
or
add
and
add
add
into
dec
sub
fcmovne
push
add
int3
lret
mov
cld
js
or
and
add
add
jne
clc
pop
pushf
ret
clc
inc
add
fldenv
clc
test
add
lret
jne
clc
jp
ret
cs
icebp
sar
adc
clc
cmp
xbegin
jmp
pop
clc
cld
pop
xor
cmp
mov
and
ret
clc
xchg
shrl
add
out
adc
add
mov
cmp
add
js
loopne
fcomp
and
add
add
clc
ret
cltd
and
add
popf
inc
add
mov
add
mov
cmp
add
dec
mov
add
mov
xchg
pop
repz
cltd
test
cli
cmp
lret
in
fidivrl
mov
repz
add
add
je
out
or
pusha
add
pop
dec
pop
pop
clc
sub
adc
add
mov
sbb
mov
clc
pop
dec
decb
clc
mov
pandn
clc
ja
dec
inc
add
movsb
clc
ss
sub
push
mov
add
adc
add
scas
outsl
xchg
shll
cmp
clc
pop
xchg
and
add
js
test
pop
dec
jecxz
mov
add
sbb
mov
clc
scas
jae
add
add
push
lret
add
in
imul
shll
add
fldl
add
inc
clc
test
xbegin
clc
into
jp
jecxz
pop
pop
pop
add
call
cs
sub
xchg
inc
add
and
add
ficomps
mov
add
clc
arpl
add
clc
cmp
fdivrs
aas
cli
jmp
in
out
dec
test
dec
fs
mov
outsl
add
jnp
xbegin
clc
movsb
clc
dec
repnz
jnp
movsl
clc
aad
sub
add
ljmp
clc
aaa
xchg
jae
add
hlt
outsb
or
add
enter
pop
and
add
sub
bound
add
jle,pt
and
add
pushf
fmulp
call
cmp
and
add
aad
clc
in
enter
js
das
mov
xchg
pop
imul
mov
xor
add
clc
pop
push
lods
inc
clc
je
and
sub
clc
add
push
add
add
out
mov
scas
add
add
in
jo
add
roll
clc
movsl
clc
mov
jmp
popf
xor
mov
clc
pusha
add
idiv
mov
clc
dec
cmp
add
xchg
ja
add
test
xor
mov
mov
xchg
addr16
adc
clc
scas
push
add
dec
ljmp
jae
add
add
xor
add
faddl
add
hlt
and
mov
add
dec
loope
repnz
add
leave
cli
push
mov
add
dec
test
dec
adc
add
lock
xchg
sub
dec
jb
add
insb
cmp
and
inc
clc
scas
shll
add
inc
add
aad
and
add
in
lods
dec
dec
insl
dec
sahf
xchg
cmp
lods
and
add
clc
leave
int
clc
mov
imul
add
mov
clc
xabort
mov
dec
jmp
popa
add
xchg
mov
clc
push
push
add
push
pop
mov
movsl
clc
test
scas
addr16
push
rcl
or
clc
push
or
cmp
push
add
add
add
lods
rclb
stc
pop
sbb
add
clc
xbegin
push
iret
sub
or
push
xchg
imul
mov
cmp
cmp
push
add
push
clc
je
icebp
push
outsl
sub
out
sbb
cli
out
repnz
clc
or
mov
clc
xchg
out
ljmp
add
add
clc
mov
clc
test
and
pop
mov
clc
sub
clc
xlat
repz
add
repz
fwait
add
add
lods
loope
scas
lahf
cwtl
loop
cmp
jno
add
pop
cmp
fcmovnu
call
mov
mov
fwait
and
cmp
add
or
repz
lods
test
test
clc
jg
cmp
add
fs
hlt
enter
mov
sub
clc
or
add
pop
pop
clc
push
inc
add
aam
clc
jp
add
repz
repz
add
and
add
add
test
cld
out
pop
fs
inc
clc
dec
scas
adc
add
add
add
add
push
add
jns
lret
clc
pop
cmc
arpl
add
inc
add
mov
add
xor
add
add
outsb
shrl
loope
insl
cmp
jae
add
push
add
fisttps
fwait
or
fs
pop
cmp
add
mov
add
addr16
ret
cmpsl
clc
pushf
inc
clc
movsl
clc
and
mov
scas
push
ret
cmp
scas
sub
gs
shl
clc
xchg
sbb
mov
clc
lods
mov
add
mov
add
push
sahf
bound
add
clc
popa
add
pushf
das
cmp
std
aam
sub
add
adc
add
in
in
stc
xbegin
sar
sar
pop
fstps
pop
mov
sbb
clc
mov
sar
pop
mov
xchg
mov
add
push
add
sub
add
add
sbb
enter
inc
clc
lods
leave
and
add
ret
clc
mov
add
xchg
aad
clc
jge
movsb
clc
in
ficoml
pop
mov
clc
daa
clc
insl
and
add
neg
arpl
add
add
adc
add
add
inc
add
xor
cmp
cmp
pop
mov
aas
mov
clc
and
ljmp
clc
pop
clc
gs
test
int
adc
adc
add
xchg
xchg
fst
jne
into
mov
mov
add
lods
aaa
pushf
xchg
dec
mov
fdivrs
xbegin
out
xor
add
mov
clc
mov
add
ret
data16
xor
sahf
sub
out
daa
clc
sbb
add
jl
popa
add
cmpsb
clc
push
fnstcw
lea
clc
push
add
out
roll
scas
jb
add
mov
or
xlat
popa
add
jno
add
add
add
pushl
imul
or
lods
mov
test
xchg
sar
int
clc
mov
cmp
add
inc
add
pop
aas
mov
add
test
pop
test
mov
insl
hlt
jne
out
int
adc
das
and
add
mov
add
lods
mov
mov
add
clc
sti
gs
dec
cmp
clc
adc
add
clc
dec
loopne
bound
add
add
add
jp
add
mov
add
and
add
mov
mov
lret
push
sbb
insl
sbb
sub
pusha
add
jg
inc
add
out
cwtl
cwtl
push
add
mov
push
lods
ljmp
xor
xor
sti
fwait
mov
add
lock
add
add
add
add
xbegin
cmp
je
mov
push
mov
add
fists
push
pushf
xbegin
aaa
mov
clc
add
add
cmp
add
imul
add
sub
jp
inc
clc
sbb
mov
clc
or
das
rcr
jbe
clc
adc
add
cmp
jno
add
add
pop
xchg
pop
jmp
add
clc
sahf
sub
fmuls
pop
addr16
cltd
jmp
add
loope
mov
clc
mov
push
add
aaa
sub
and
add
clc
xor
add
clc
inc
clc
adc
add
clc
mov
lock
in
jp
add
int3
cmp
push
movsb
clc
repnz
testl
add
lea
and
add
clc
ss
fcomps
adc
add
out
xchg
enter
pop
lock
cmp
add
in
outsb
add
add
cmp
add
or
push
add
cmp
push
mov
xchg
adc
add
sub
clc
out
and
add
clc
xchg
jg
inc
clc
xchg
sahf
add
add
fistl
add
std
cli
insl
mov
or
ret
or
push
add
mov
add
add
add
add
xchg
and
add
pop
fstpl
mov
clc
and
add
ds
ja
add
adc
add
pushl
xor
add
pop
adc
add
and
psubb
add
add
jl
aam
push
shl
clc
popf
mov
clc
mov
add
add
xchg
fs
scas
xor
add
and
add
adc
add
lahf
xabort
sub
add
mov
clc
loopne
aad
lock
add
cmp
test
mov
aaa
das
das
jae
add
or
clc
xlat
xchg
add
cmp
add
inc
clc
jno
add
clc
sti
mov
jle
sar
mov
xor
add
add
inc
add
out
push
add
jge
clc
icebp
inc
add
std
das
aas
push
mov
nop
push
add
rcrb
clc
clc
out
ret
clc
push
clc
arpl
add
mov
clc
jp
cmpsb
clc
aam
clc
push
add
cs
xchg
cltd
jno
add
loopne
ljmp
test
pop
pop
lock
clc
jae
add
xor
add
arpl
add
push
push
fcompl
fldenv
clc
aam
cmp
popf
adc
mov
dec
sub
xchg
aaa
lods
xlat
push
addr16
push
sub
addr16
clc
and
add
pop
push
add
push
jg
scas
and
add
jno
add
add
daa
clc
jle
clc
leave
jno
add
xbegin
mov
lahf
sub
clc
mov
rolb
hlt
ljmp
add
and
test
cmc
push
xchg
jmp
clc
jecxz
mov
push
add
sbb
ss
clc
insl
jg
inc
add
xor
add
fcmovbe
and
add
pop
in
cmpsl
clc
mov
clc
cli
ljmp
mov
cmpsl
clc
cmp
clc
add
add
jne
clc
vmwrite
adc
add
stc
or
imull
xlat
insl
scas
movsl
clc
dec
test
enter
add
in
imul
or
add
sub
clc
and
cmp
pop
rcll
add
add
push
lcall
lret
insl
jne
cli
rclb
add
aad
dec
mov
add
sbb
dec
inc
add
mov
add
add
mov
cmp
addr16
nop
xlat
repnz
add
add
das
das
push
mov
adc
add
clc
fnstsw
clc
mov
adc
add
clc
data16
jl
add
fs
xchg
pop
mov
add
scas
int
add
mov
xchg
cltd
jp
clc
fdivl
add
add
mov
push
push
aaa
out
mov
sub
xor
data16
mov
jmp
add
add
stos
push
ljmp
add
sbb
xor
add
xor
cmp
add
adc
add
add
clc
and
lret
mov
clc
xchg
inc
add
sbb
aas
insb
outsb
rol
clc
jmp
add
aaa
pop
js
clc
bound
add
or
in
sub
sahf
gs
adc
add
add
add
int3
pop
xor
add
mov
clc
jmp
rcl
mov
add
add
push
add
cmp
rcl
cmpsb
clc
cli
xor
add
xchg
jmp
add
cmc
mov
push
push
je
add
mov
pusha
add
out
xchg
cmp
aaa
mov
jmp
clc
xbegin
arpl
add
add
fdivrl
clc
mov
arpl
add
or
clc
push
add
hlt
jns
lret
cmpsl
clc
hlt
adc
add
test
add
pop
add
add
adc
add
lahf
fcmovne
sar
jns
add
ds
clc
push
clc
addr16
daa
clc
mov
pop
jo
add
mov
call
clc
inc
clc
push
aam
cmpsl
clc
cwtl
or
mov
mov
cmp
add
add
jbe
add
lea
clc
in
pop
mov
xchg
imul
clc
pop
clc
or
pop
mov
mov
add
sbb
add
xchg
mov
add
aad
clc
fsubrs
int3
cmpsl
clc
mov
cmp
xchg
cmp
clc
pusha
add
or
fidivl
add
aad
add
xchg
push
loope
cmc
mov
mov
imul
fsubs
add
test
push
inc
clc
mov
loop
or
clc
movsl
clc
pusha
add
mov
data16
ds
add
leave
adc
add
add
add
or
pop
lahf
sbb
add
add
xor
add
clc
insb
in
mov
dec
enter
arpl
add
add
stos
mov
insl
loope
fmull
ds
add
repnz
inc
add
stos
and
sub
mov
clc
ret
clc
push
add
aad
clc
data16
and
add
dec
push
add
mov
clc
or
into
out
inc
add
into
stos
cmp
test
push
or
add
stos
inc
add
xbegin
inc
clc
sbb
mov
add
enter
sbb
ja
clc
filds
add
add
clc
cwtl
adc
add
jo
add
clc
add
add
sbb
jle
clc
sub
add
int
cmp
inc
add
push
add
pop
adc
add
add
test
mov
add
sub
insb
in
loop
div
push
add
inc
clc
xchg
pop
sub
push
add
mov
clc
mov
es
aaa
add
add
jne
xor
add
sar
xabort
clc
push
movsb
clc
or
xor
add
std
cmp
push
add
sar
data16
lahf
xchg
cmp
jno
add
xchg
add
pushf
leave
push
fsubp
clc
call
add
test
testl
fstpl
clc
in
shll
add
dec
xor
clc
bound
add
dec
out
sar
add
pop
gs
pop
clc
movsb
clc
cmp
fwait
xchg
jae
add
mov
imul
sti
dec
inc
clc
sbb
mov
pop
ud2
push
push
dec
sub
clc
dec
sub
add
aas
es
sub
add
mov
add
add
or
clc
pop
inc
clc
repz
ret
clc
imulb
out
arpl
add
clc
pop
loopne,pt
xchg
sahf
sar
mov
add
sbb
add
mov
jmp
icebp
xbegin
and
add
xchg
jbe
add
add
imul
imul
test
mov
jle
clc
in
repz
jge
clc
sub
mov
adc
add
data16
jmp
xor
push
sbb
clc
jb
add
fildll
add
add
cmp
ret
clc
push
int3
push
add
cmpsl
clc
cli
cmp
pop
leave
jae
add
add
imul
stos
dec
mov
loopne
js
dec
inc
clc
imul
clc
inc
add
bound
add
in
clc
push
pop
push
xchg
add
mov
push
roll
add
fisubs
add
outsb
popf
mov
popf
jge
pop
push
or
ds
clc
cmp
aaa
dec
sbb
push
ret
clc
outsl
sar
push
pop
mov
out
jne
mov
add
cmc
dec
clc
data16
xchg
dec
mov
sub
mov
ficompl
push
cmp
add
or
and
xor
clc
repz
sub
roll
add
xchg
pop
xchg
or
out
push
add
int
push
add
clc
fwait
pop
pop
cwtl
aam
cmp
mov
xor
add
jg
mov
lea
add
add
cmp
das
leave
adc
test
sub
daa
clc
std
add
add
clc
cmp
mov
xchg
jo
add
repz
loope
xchg
cmp
add
pop
je
push
push
clc
fidivrl
clc
sbb
pop
test
mov
add
add
dec
iret
push
imul
pop
mov
add
inc
add
bound
add
xor
add
jnp
jb
add
sub
cld
pop
push
add
int
mov
jbe
int3
insb
push
add
int
mov
in
mov
pop
out
lea
cmp
add
pop
jns
add
mov
add
jb
add
ja
or
sar
sub
sbb
clc
js
mov
ljmp
clc
pop
clc
loope
pop
dec
repnz
ret
cmp
clc
xchg
dec
cwtl
shlb
clc
jne
jns
clc
inc
clc
fst
adc
add
fnstenv
jnp
or
test
xlat
xchg
iret
xor
loope
pop
iret
push
clc
es
push
clc
xchg
push
clc
xchg
inc
add
xor
add
push
clc
call
bound
add
clc
ss
add
sbb
popf
ret
clc
sar
xchg
xchg
loope
pop
sar
jp
adc
xchg
sbb
add
add
add
nop
cs
dec
mov
add
adc
add
pop
pop
dec
pop
xabort
das
enter
insl
xchg
ret
clc
fidivl
cmp
and
add
add
jle
lcall
vmovlps
add
ret
clc
cmp
jg
data16
xor
add
pusha
add
into
out
pop
inc
clc
mov
enter
add
add
mov
push
xchg
std
and
add
negl
clc
out
stc
and
add
cmpsb
clc
push
add
inc
add
mov
add
cmp
push
clc
push
add
xbegin
add
clc
addr16
push
dec
fdivrl
jmp
lahf
push
daa
clc
dec
ljmp
adc
add
mov
clc
lods
xchg
cwtl
cmc
int3
into
fistpll
adc
enter
add
int
xor
aad
in
stos
mov
clc
jnp
js
clc
scas
cltd
lcall
push
add
dec
stos
pusha
add
jae
add
ror
xchg
inc
clc
lret
in
lods
lods
clc
fldcw
add
dec
cltd
sbb
add
mov
lods
lods
pop
clc
push
pop
clc
data16
test
cmp
sar
std
and
xchg
cmp
mov
mov
nop
and
fdivrl
clc
or
push
sar
and
add
mov
pusha
add
or
sub
fcmovnb
clc
adc
add
or
gs
test
scas
lock
enter
clc
pop
xor
add
xor
add
repnz
fists
add
mov
mov
clc
mov
add
adc
add
add
cmp
sub
stos
filds
add
add
add
pusha
add
lret
add
sbb
add
mov
aam
add
ret
cli
xchg
xor
add
rclb
add
clc
mov
pop
xor
add
mov
pop
nop
pusha
add
loop
adc
add
mov
add
add
scas
jle
clc
add
add
cmp
or
mov
sbb
in
pop
cmc
imul
clc
mov
shl
clc
dec
idivb
push
pusha
add
jmp
mov
adc
hlt
xchg
mov
mov
in
test
das
testl
add
nop
adc
ljmp
in
sbb
add
mov
sbb
jle
add
xor
lods
popf
cmp
inc
clc
repz
dec
fwait
sar
imulb
mov
jns
push
es
int3
cmp
add
mov
add
add
pop
cmp
adc
add
add
push
add
jmp
shr
fstps
add
inc
clc
inc
add
inc
add
call
sar
sub
jp
arpl
add
ljmp
ljmp
add
cmp
pop
cli
cltd
mov
push
fldt
inc
clc
lret
sar
jns
add
jnp
sub
mov
sub
loop
xor
mov
jno
add
push
mov
add
jle
fisttpl
outsb
mov
push
add
sbb
mov
clc
jne
clc
clc
mov
clc
mov
xor
add
fcompl
add
pushf
sub
adc
add
mov
adc
add
clc
jp
stos
enter
js
lods
ret
clc
jecxz
sub
into
pop
mov
clc
cltd
repnz
pop
lods
or
insl
add
add
push
lcall
clc
mov
cli
pop
or
sbb
data16
mov
clc
sbb
mull
cmp
mov
pop
jle
stos
jg
cmp
xchg
imul
loopne
push
ds
mov
mov
or
pop
adc
add
push
clc
adc
clc
dec
pop
inc
add
movsb
clc
jp
inc
add
push
add
sub
and
sub
add
add
clc
mov
xchg
js
lods
pushf
cmpsl
clc
pop
jge
hlt
fsubrs
add
clc
sar
add
lret
cltd
insl
fsubrl
stos
je
add
enter
cs
add
and
sti
pop
addr16
rcl
push
clc
xchg
pop
jbe
fwait
jmp
clc
cmp
cmp
shll
je
clc
mov
add
jmp
jns
and
add
clc
lcall
add
mov
loope
lret
popf
adc
add
clc
leave
xchg
sub
or
inc
clc
or
fcmovnb
clc
xchg
loop
jge
xor
add
imul
clc
mov
clc
sbb
hlt
push
sar
jl
clc
pop
mov
iret
mov
xchg
div
sahf
or
add
mov
inc
add
add
add
scas
ds
outsb
mov
leave
ds
mov
add
add
add
sub
clc
pushf
mov
clc
mov
jmp
clc
jae
add
adc
add
clc
cld
add
sahf
int3
dec
jg
add
add
add
and
add
mov
clc
and
add
call
scas
nop
inc
clc
pop
outsl
cmp
adc
iret
cmc
xchg
mov
clc
rcl
xbegin
aas
mov
clc
xor
add
add
clc
add
add
add
sub
sbb
add
hlt
adc
add
pop
push
add
sar
loop
pop
nop
outsb
cmp
mov
add
cmp
cmp
or
clc
xchg
mov
mov
cli
lahf
sar
lods
inc
add
or
xchg
rcrl
mov
pop
xchg
push
add
cmp
testb
vorps
out
add
add
stos
push
add
pop
cmp
add
stos
iret
xbegin
data16
sbb
adc
xchg
sbb
dec
jle
testl
in
addr16
stos
xchg
xchg
rolb
dec
inc
clc
cmp
cwtl
sti
pop
or
aam
push
cmp
lods
cmp
add
pop
pop
pop
clc
and
add
push
pop
data16
insb
sar
ret
clc
stos
rorb
jo
add
popf
mov
and
aaa
pop
or
dec
xor
add
push
insb
xbegin
cmp
or
dec
pop
inc
add
jae
add
add
dec
or
cs
clc
mov
scas
ret
nop
push
add
rdpmc
add
ficoml
add
push
add
jno
add
sbb
clc
out
popf
sarb
jg
cmp
cld
mov
fisubrl
clc
scas
test
add
stos
repz
jnp
cmp
add
add
mov
add
sub
clc
mov
test
xor
add
or
ret
adc
add
add
push
xchg
js
fistl
sahf
pusha
add
mov
clc
xchg
sbb
lahf
cmp
jmp
pop
clc
stos
xor
add
jp
pushf
jmp
test
clc
neg
mov
and
mov
jne
clc
jb
add
add
xor
add
mov
iret
pop
clc
loop
mov
ds
push
or
sahf
cmp
add
sbb
jno
add
popf
filds
add
lods
in
or
pop
xor
add
add
repz
jg
adc
add
jl
sahf
outsb
int
call
pop
imul
push
add
mov
inc
clc
xchg
gs
call
bound
add
mov
cmp
or
test
dec
das
hlt
dec
xchg
jge
dec
mov
add
lods
repnz
mov
clc
shl
insl
fsubl
clc
sbb
fcomi
das
mov
adc
add
adc
pop
dec
mov
push
lods
imul
add
adc
add
imul
clc
testl
dec
jl
clc
sbb
add
pop
mov
add
cmpsl
clc
cmp
push
add
into
mov
add
bound
add
add
add
into
inc
add
or
cmpsl
clc
insb
das
sar
fprem1
and
add
xchg
cmp
pop
cs
or
add
imul
aad
clc
lods
mov
clc
clc
int
cmp
cmp
xchg
out
mov
xchg
pop
jb
add
mov
add
adc
add
into
xchg
add
add
add
add
add
inc
clc
stc
jne
clc
mov
clc
mov
add
add
clc
mov
add
adc
in
jne
mov
clc
push
add
and
lock
notb
xor
add
add
add
jae
add
mov
gs
mov
ffreep
clc
lret
push
cmp
clc
cwtl
pop
xchg
in
clc
push
add
xchg
arpl
add
scas
call
mov
clc
mov
pop
xchg
cmp
add
inc
clc
pop
addr16
loope
cmp
inc
clc
mov
fmulp
cmp
es
test
and
int
push
add
inc
clc
incl
add
add
mov
pop
clc
xchg
mov
add
mov
clc
mov
addr16
xchg
ret
lods
adc
add
sub
add
ja
add
push
shrl
clc
inc
clc
dec
or
xchg
aam
add
xbegin
mov
sar
movsb
clc
and
add
xchg
daa
clc
ret
clc
xor
add
or
and
add
in
cmp
sub
scas
and
add
add
add
pop
cwtl
dec
sahf
sbb
add
insl
es
icebp
sti
lahf
mov
test
mov
sub
add
add
clc
lea
add
add
sysret
clc
loop
call
imul
add
leave
je
add
pop
ds
add
add
add
add
mov
mov
test
mov
test
push
xor
leave
arpl
add
clc
mov
add
mov
cmp
mov
or
out
cmpsl
clc
lret
push
add
aad
add
out
aam
lods
xor
ljmp
clc
push
add
dec
sbb
sahf
fcmovne
and
cmpsl
clc
out
mov
mov
shr
clc
jno
add
clc
and
add
xor
add
mov
ret
clc
icebp
ljmp
clc
adc
dec
and
add
mov
lea
mov
cmp
decl
add
add
push
clc
push
add
xabort
fs
inc
add
sub
add
add
shll
movsb
clc
ret
clc
pop
int
clc
test
test
clc
and
add
add
movsl
clc
add
add
arpl
add
fisubrl
dec
sbb
clc
inc
clc
dec
clc
cmpsb
clc
in
outsl
and
add
or
add
add
push
clc
mov
xor
add
add
inc
add
outsb
stos
or
add
add
add
clc
stos
mov
mov
add
add
sub
clc
dec
call
fs
es
mov
cmp
mov
in
outsb
std
cmp
add
and
push
mov
out
sub
clc
cmp
cmpsb
clc
pop
into
shrl
push
add
cli
dec
lret
add
dec
cli
lea
add
push
clc
rcll
inc
add
pop
clc
addr16
repnz
cmp
add
cmp
sbb
add
in
push
add
shl
clc
sub
sub
inc
clc
add
clc
fwait
insb
jne
add
mov
clc
push
clc
insb
add
add
or
mov
clc
and
out
es
push
push
jae
add
add
xor
add
mov
inc
clc
pusha
add
dec
dec
inc
add
in
mov
clc
loop
adc
add
ret
add
dec
call
dec
dec
push
test
lods
xchg
mov
mov
mov
ljmp
mov
clc
mov
add
js
jns
clc
sahf
pop
mov
loopne
inc
add
aam
add
add
add
imul
add
xor
add
mov
xlat
xchg
mov
clc
jl
clc
clc
data16
cmp
xchg
pop
mov
jg
fsubrs
add
ret
clc
mov
sahf
push
add
sbb
add
add
clc
std
sbb
ficoml
add
pop
clc
ljmp
pushf
mov
scas
inc
clc
data16
xor
add
add
fwait
movsb
clc
cld
icebp
ds
clc
in
or
add
cld
addr16
jg
add
pusha
add
test
pop
xlat
xor
add
cmp
adc
add
loope
xor
add
outsb
pop
sbb
mov
mov
dec
cmc
movsl
clc
dec
fiadds
clc
xchg
jb
add
cmp
gs
incb
clc
ja
add
cltd
dec
ret
clc
mov
sub
mov
add
xlat
jnp
out
fs
rcr
lock
push
imul
cltd
into
sti
dec
push
add
mov
aaa
push
inc
add
mov
mov
add
jl
clc
mov
sub
fwait
js
xchg
repnz
add
add
push
cmp
aas
add
clc
pop
clc
push
add
clc
sahf
ror
cmp
add
clc
cmpsb
clc
add
add
rcrl
scas
sbb
pushl
cmp
clc
cmc
mov
lock
clc
cmp
add
sar
jp
test
xor
add
pop
clc
leave
cmp
ss
shl
lret
lock
push
push
add
addr16
out
push
clc
push
add
cmc
clc
lods
mov
jbe
clc
pop
adc
add
add
div
adc
add
fmul
jae
add
dec
mov
sbb
add
add
add
leave
add
mov
sub
clc
bound
add
add
xor
add
add
in
lock
imul
xbegin
adc
add
cmp
mov
clc
dec
pop
xchg
xlat
sbb
or
and
add
add
in
xbegin
clc
outsb
ja
clc
xchg
inc
add
adc
add
fidivl
add
loopne
js
cmpsb
clc
stos
sti
cmp
dec
loope
pop
clc
cli
mov
clc
lahf
scas
movsl
clc
jnp
dec
clc
dec
pop
add
add
xor
mov
clc
iret
xbegin
imul
leave
js
add
dec
mov
mov
es
cmp
adc
add
clc
adc
add
clc
sub
ja
ljmp
add
add
js
imul
xlat
dec
mov
xbegin
inc
clc
daa
clc
sub
enter
add
push
add
dec
mov
insb
ds
imul
dec
inc
clc
fnstcw
push
add
dec
loopne
or
push
and
push
add
inc
add
imul
fsts
clc
fimull
pop
jnp
push
add
xchg
mov
out
dec
dec
clc
push
sub
dec
mov
clc
xchg
pop
cmp
push
fiadds
add
fldl
add
inc
add
iret
js
jns
clc
pop
mov
clc
fstl
add
add
cmp
cmp
lods
push
add
aam
mov
cmpsb
clc
pop
in
inc
clc
rorl
cmp
add
movsb
clc
xor
add
add
push
mov
fadd
clc
pop
clc
sbb
add
in
inc
clc
mov
jl
clc
jle
dec
shrb
add
inc
add
xor
add
xchg
repz
sub
aam
clc
cmp
add
jl
ror
or
pusha
add
dec
pushl
insl
add
mov
xchg
movsb
clc
mov
and
scas
test
add
pushf
scas
pop
cmp
stos
push
clc
inc
add
sbb
ret
clc
sub
jecxz
mov
iret
xchg
xor
add
add
push
ret
sbb
push
ja
ss
test
stc
into
pop
rorl
jbe
pusha
add
adc
add
add
icebp
pop
xor
add
mov
xlat
dec
bound
add
lret
fildll
clc
call
clc
fwait
aad
jge
xchg
mov
and
add
and
add
clc
stos
daa
clc
scas
inc
add
pop
sub
dec
and
add
clc
insl
sub
movsb
clc
inc
add
lea
jo
add
clc
scas
add
add
cmp
das
adc
add
out
js
push
add
sbb
sub
pop
aad
test
clc
fst
cmp
clc
mov
xor
add
adc
add
inc
add
stos
push
sar
lcall
clc
jg
iret
fldl
add
fcmovnbe
dec
imul
clc
jecxz,pt
push
jns
clc
scas
and
add
clc
es
mov
push
add
add
mov
daa
clc
mov
movsb
clc
cmp
xabort
clc
inc
add
out
xchg
and
add
nop
inc
add
xlat
call
fstpl
rcl
ret
clc
fdivr
jno
add
jmp
jbe
int3
dec
mov
xchg
jns
or
cmpsb
clc
mov
clc
out
jbe
clc
and
add
sub
sbb
popa
add
lock
int3
dec
in
push
add
lret
outsb
outsb
cli
push
add
outsb
mov
neg
fs
jmp
clc
pop
fidivrl
clc
push
add
inc
clc
daa
clc
sub
add
movsb
clc
outsl
aam
insl
sbb
clc
jno
add
and
add
clc
and
add
iret
hlt
sti
sub
fldl
push
ss
clc
inc
add
test
clc
add
add
add
cmp
cmpsb
clc
inc
add
jmp
mov
test
pop
stos
lea
cmp
mov
aas
mov
adc
mov
clc
mov
add
cmp
mov
or
jae
add
add
jmp
clc
lret
adc
add
dec
mov
movsl
clc
fiadds
clc
mov
add
push
pop
iret
in
and
add
out
mov
add
cmp
mov
dec
add
add
jae
add
add
fwait
add
add
add
pop
xor
add
push
clc
mov
pop
std
dec
daa
clc
pop
data16
cld
js
pop
clc
in
and
add
clc
xchg
ret
clc
bound
add
add
call
pop
sar
add
push
mov
clc
xchg
xor
or
mov
dec
dec
push
add
adc
add
divb
in
lea
aad
into
repnz
cmp
add
pop
inc
clc
rorb
inc
clc
out
fwait
add
sbb
add
inc
clc
adc
clc
daa
clc
adc
add
sub
push
inc
clc
in
lods
out
sahf
mov
add
popf
cmp
sar
inc
add
or
xchg
inc
add
jmp
call
xchg
pop
sahf
mov
fninit
clc
in
fadd
clc
sar
add
pop
mov
add
int3
or
clc
cmp
clc
adc
add
add
pop
clc
or
mov
icebp
push
add
pop
dec
loope
sar
add
dec
xabort
into
cmpsl
clc
jne
arpl
add
jno
add
loope
cmc
mov
push
leave
adc
add
add
jae
add
add
lret
inc
clc
add
add
xlat
inc
add
cmp
cmp
jnp
add
cmp
add
pop
clc
sar
ficomps
cmp
fcompl
xor
jnp
cmp
clc
outsl
pusha
add
sbb
jae
add
mov
jb
add
ljmp
clc
ss
push
mov
dec
sub
push
inc
clc
push
xor
add
clc
sub
es
jne
mov
mov
push
add
jns
add
push
sbb
or
mov
cmp
add
mov
fiadds
int
jo
add
clc
outsb
lret
push
fldenv
add
jns
xchg
inc
add
pop
clc
popf
cld
dec
push
stos
popa
add
pop
insb
icebp
jns
hlt
loop
jge
cmp
sar
inc
add
sbb
dec
fnsave
in
ja
clc
inc
add
push
mov
clc
mov
clc
push
daa
clc
idiv
or
cs
jno
add
repnz
xor
adc
add
clc
into
xlat
cmp
jmp
add
pop
scas
lcall
add
xbegin
cli
js
clc
or
push
add
nop
mulb
mov
add
ret
add
shr
call
sbb
sbb
clc
iret
imul
es
adc
add
clc
mov
clc
jne
inc
clc
pop
adc
add
add
ljmp
jns
jmp
mov
pop
lcall
push
add
add
add
inc
add
or
outsb
icebp
mov
addr16
jbe
or
sub
and
add
cmc
stc
in
sub
insl
inc
clc
dec
sub
add
add
dec
cmp
mov
mov
clc
out
test
jnp
clc
xor
clc
cmp
add
mov
sub
cltd
stos
ja
xchg
fstps
inc
clc
and
add
add
data16
cmp
clc
popf
add
push
mov
test
inc
clc
xchg
push
clc
sbb
and
add
and
add
test
in
mov
movsb
clc
and
add
clc
pop
cmpsl
clc
test
add
add
xor
add
clc
cmp
add
sub
std
test
sbb
xor
add
stc
stos
dec
and
add
sub
dec
scas
cmp
xor
add
or
add
call
clc
mov
add
clc
repnz
and
stos
clc
mov
fldenv
clc
xchg
out
sbb
add
or
add
mov
clc
inc
add
out
ljmp
rolb
or
cmp
repnz
pop
pop
test
or
sub
jbe
add
pop
loop
dec
pusha
add
dec
mov
add
int
into
cmpsb
clc
cli
jl
clc
inc
clc
mov
insb
xchg
dec
adc
add
popf
push
push
mov
clc
or
stos
and
push
pop
popf
scas
outsl
sub
dec
or
lods
mov
stos
stos
sbb
inc
add
ja
add
inc
clc
mov
add
clc
in
test
repz
pop
cltd
xor
add
and
mov
xchg
add
add
clc
fistps
dec
iret
push
cltd
cmp
add
shl
clc
mov
add
clc
out
sub
adc
add
xchg
jge
add
push
fwait
in
xchg
fistps
into
sbb
add
dec
sarb
and
add
out
and
add
adc
add
cmp
add
sbb
lret
add
clc
call
shrb
dec
repnz
push
lret
push
clc
cmp
mov
cmp
add
and
add
nop
test
sahf
daa
clc
arpl
add
xchg
fdivl
test
adc
add
clc
cmp
cmc
icebp
test
stos
pop
clc
dec
push
jecxz
jg
mov
dec
out
add
add
clc
pushf
xchg
inc
clc
cmp
mov
add
and
add
fimuls
sar
pop
repz
clc
and
sahf
or
add
pusha
add
mov
ficoml
add
xlat
jg
add
add
push
add
dec
ja
add
iret
sub
add
and
push
dec
sar
xchg
pop
cmc
adc
add
test
cltd
xchg
jo,pn
add
xor
add
add
out
mov
data16
inc
clc
cmp
jmp
fsubrs
mov
jne
inc
add
cmp
push
cmp
dec
mov
xchg
mov
or
add
lret
cmp
add
cmp
fisttps
jns
in
cmp
gs
or
push
or
add
jp
adc
add
dec
push
add
sub
cmp
cmp
jne
clc
add
fldenv
insl
lcall
jb
add
sar
add
or
clc
cwtl
mov
add
and
add
loope
mov
add
sbb
adc
add
add
add
cmp
push
es
pop
push
sbb
movsl
clc
fidivs
add
and
add
inc
add
cmp
addr16
mov
inc
add
iret
inc
clc
or
adc
add
jnp
clc
push
add
push
add
mov
add
ret
fnstsw
clc
outsl
mov
clc
xor
add
pop
pop
ljmp
jle
adc
add
clc
xabort
mov
cli
sub
loop
int
clc
add
add
add
clc
dec
jns
add
mov
clc
cltd
test
inc
clc
or
add
aaa
scas
xchg
mov
mov
cmp
clc
loope
xor
clc
popf
dec
shrb
cmp
add
clc
movsb
clc
jns
xchg
std
stc
pop
adc
add
add
pop
mov
add
lea
clc
filds
add
push
xor
add
rorb
xor
js
jno
add
add
add
clc
rolb
clc
adc
add
mov
fs
mov
jmp
clc
mov
imul
inc
add
bound
add
add
mov
cs
stos
adc
add
js
clc
push
clc
lods
adc
add
pop
sub
in
mov
bound
add
int3
xchg
clc
xor
add
sub
lret
clc
mov
add
std
jmp
call
xor
add
add
sub
add
inc
add
mov
add
int3
pop
clc
xchg
repz
cmpsb
clc
pop
sub
clc
cltd
push
ret
clc
iret
scas
inc
clc
push
mov
add
mov
clc
push
clc
mov
add
cmpsb
clc
add
cmp
add
dec
sub
add
inc
clc
xbegin
clc
jns
jb
add
clc
gs
dec
aas
push
pop
ljmp
add
add
add
test
pop
in
test
clc
mov
pusha
add
xor
add
addr16
dec
jg
scas
repz
ljmp
rcl
sbb
fs
jp
jae
add
cmp
add
lret
clc
in
adc
add
xchg
aam
clc
scas
in
cmp
outsl
pop
repz
add
repz
enter
clc
jl
rep
out
sub
je
adc
add
add
addr16
or
stos
insb
call
xchg
and
add
iret
mov
add
fldt
movsl
clc
sbb
shl
mov
out
fnstenv
add
push
adc
add
imul
stos
cmpsl
clc
dec
xchg
pusha
add
push
pushf
xchg
addr16
xchg
jecxz
fists
add
xchg
mov
xchg
aad
add
push
add
mov
cwtl
and
add
clc
or
push
jb
add
sub
popa
add
out
testl
daa
clc
cmpsl
clc
sub
mov
jg
or
dec
sbb
dec
int
add
sbb
clc
cmp
mov
add
clc
rcr
out
loop
xchg
fnstenv
dec
mov
mov
or
call
clc
addr16
bound
add
pop
xchg
fsubr
or
clc
mov
pop
jb
add
xor
add
clc
sub
pop
cmpsl
clc
aas
mov
and
add
clc
jp
clc
cmp
movsb
clc
fwait
add
and
add
add
and
add
loop
in
adc
add
incb
clc
lods
fs
in
jb
add
sub
add
fcoms
cmp
add
sbb
add
pop
inc
clc
ja
clc
icebp
mov
cmp
clc
cmp
cmp
add
jle
clc
ljmp
adc
add
ficoms
clc
jae
add
push
sub
sbb
add
cmp
cmp
and
insl
out
push
push
or
cli
or
jno
add
jns
clc
mov
dec
ljmp
clc
in
push
sbb
je
xbegin
clc
out
lahf
mov
clc
mov
clc
dec
ja
clc
inc
clc
sub
add
cmp
xor
add
dec
int
fidivl
cmc
pop
cmpsl
clc
bound
add
sub
adc
add
add
xlat
in
sti
nop
xlat
mov
js
push
add
imul
add
jnp
clc
inc
clc
inc
clc
mov
cmp
clc
es
mov
jg
clc
jmp
add
sbb
add
negb
inc
add
cmpsl
clc
sbb
movsb
clc
push
add
loopne
cmp
clc
or
insl
mov
popa
add
loope
inc
clc
in
addr16
push
or
cmp
cwtl
call
lcall
sub
clc
jo
add
mov
clc
sub
sbb
add
add
cmp
cltd
loopne
adc
add
repnz
mov
add
clc
aaa
ret
clc
cmp
clc
push
mov
sub
mov
clc
lret
sub
clc
cmp
shlb
clc
push
add
test
xor
add
clc
fcoml
mov
clc
out
jmp
repz
push
data16
std
mov
add
inc
clc
mov
xlat
mov
add
mov
lea
lea
clc
and
cmp
mov
aad
cwtl
xor
add
jo
add
mov
add
dec
icebp
es
imul
mov
push
add
and
add
xor
add
adc
add
shrl
mov
clc
arpl
add
clc
sub
mov
shr
punpcklwd
add
clc
xchg
pop
clc
lods
adc
add
clc
xbegin
clc
inc
add
xchg
push
and
add
clc
mov
clc
push
add
adc
add
add
sub
clc
enter
add
add
sbb
das
jg
clc
loope
push
add
mov
clc
pop
arpl
add
ljmp
pop
jle
clc
push
add
lret
fisttpll
out
scas
fwait
lea
clc
pop
lock
add
jne
add
jb
add
add
add
lea
cmp
mov
cmp
cmp
fcoms
add
or
pop
cmp
add
add
add
movsl
clc
aas
xor
add
clc
adc
dec
cmc
xchg
ror
out
and
add
mov
xchg
adc
add
xchg
rcr
mov
stos
out
std
push
stos
pop
clc
lret
enter
repz
add
cmp
jmp
cmp
clc
sbb
push
sub
bound
add
lea
pop
cmp
clc
icebp
test
clc
cmp
pop
data16
leave
mov
clc
mov
add
js
imul
add
loope
cmc
mov
and
add
and
add
xlat
out
xchg
stos
adc
mov
data16
cmp
rolb
clc
sbb
add
jmp
adc
add
xchg
pop
out
cmp
lret
ficomps
bswap
pop
pop
nop
dec
jmp
clc
sub
fstl
add
or
add
dec
gs
cmp
add
es
jbe
xor
add
scas
mul
clc
sub
add
sar
add
inc
clc
xchg
dec
ja
gs
mov
clc
sar
outsl
mov
add
pop
clc
stos
popf
jge
mov
cltd
sub
fldcw
push
clc
push
mov
stc
stc
out
dec
fidivrl
mov
push
inc
add
and
add
add
add
ja
cli
movsb
clc
mov
dec
test
addr16
pop
decl
pushl
sub
sub
clc
push
add
out
cmp
push
dec
enter
add
jl
add
cld
pop
pop
js
and
mov
js
clc
and
add
outsl
mov
sbb
jo
add
add
inc
clc
adc
push
add
adc
add
clc
mov
popa
add
lock
imul
cmp
data16
cmp
add
dec
and
add
clc
dec
dec
jo
add
clc
mov
sub
cmp
nop
das
data16
sbb
clc
adc
add
clc
aam
pop
in
test
sar
clc
mov
ljmp
add
adc
add
cmp
lock
add
ss
or
clc
lahf
jl
cmp
mov
fdivrl
add
sbb
add
clc
aaa
hlt
cwtl
lcall
fdivrs
add
mov
js
jno
add
inc
clc
xchg
popf
cs
sub
clc
mov
dec
hlt
xor
push
jns
inc
add
lret
ret
clc
xlat
daa
clc
xchg
out
or
clc
xor
add
dec
xor
add
stos
jp
push
enter
bound
add
shll
lods
jmp
clc
sub
clc
insl
and
add
mov
clc
add
jecxz
pop
in
test
sub
xchg
pusha
add
sar
clc
xor
add
inc
clc
insb
not
outsb
xor
add
add
es
cli
or
mov
in
es
jno
add
dec
pop
mov
in
mov
out
aas
cmp
dec
add
add
add
scas
int3
nop
xchg
inc
clc
test
mov
clc
decb
insl
xlat
mov
jecxz
decb
imul
clc
jne
inc
clc
lods
adc
add
xchg
and
add
jo
add
add
scas
outsb
mov
mov
cmpsl
clc
jb
add
clc
and
dec
xor
add
stc
mov
loop
jb
add
fcmovnb
clc
icebp
push
scas
xabort
add
scas
jno
add
clc
jl
sbb
cmp
xor
push
add
add
pop
and
add
add
xor
add
add
xor
add
clc
loopne
leave
rep
xor
add
decb
ret
add
fcmovbe
mov
iret
es
mov
test
mov
xchg
sar
add
rorl
clc
imul
add
pop
test
clc
lret
sbb
into
mov
clc
ret
clc
xor
add
pusha
add
mov
clc
cmpsb
clc
mov
jbe
insb
pop
sar
push
add
add
add
clc
cltd
cmpsl
clc
jbe
xor
add
jge
clc
add
fimuls
movsl
clc
jmp
add
mov
clc
jmp
jns
mov
add
cs
clc
mov
push
jg
leave
cs
es
stos
sar
in
sbb
loopne
pop
stc
push
sti
inc
clc
aam
repz
push
add
sar
add
leave
out
jecxz
cmp
inc
clc
outsb
xchg
bound
add
inc
clc
inc
add
hlt
scas
jmp
outsb
dec
pop
stc
ret
cltd
scas
sbb
add
repz
mov
loopne
leave
dec
mov
fwait
int
dec
adc
clc
sahf
lock
inc
add
or
add
inc
clc
push
jne
iret
sbb
clc
jle
clc
sbb
add
jb
add
test
add
mov
mov
add
add
sub
mov
cmp
jne
testb
shll
add
jge
add
jmp
imul
imul
push
movsb
clc
outsl
bound
add
adc
add
in
loope
or
push
add
lret
fidivrl
xchg
mov
add
lods
and
add
add
sbb
cmpsb
clc
add
dec
enter
out
sub
lea
or
add
sahf
lahf
xbegin
stos
notb
sub
clc
lods
push
xchg
mov
sub
add
ds
clc
cmp
out
mov
clc
mov
jecxz
in
or
add
lcall
enter
sub
adc
or
mov
divb
or
add
push
sbb
loopne
lahf
add
add
push
add
loop,pn
mov
and
add
fmulp
pop
cld
push
cmp
roll
cmpsl
clc
jmp
cmp
add
inc
clc
bound
add
or
je
add
pop
mov
sbb
clc
stc
fnstsw
add
add
push
clc
fiadds
add
clc
jl
sub
push
jge
ljmp
sbb
gs
fists
dec
imul
in
push
clc
imul
addr16
inc
clc
sti
stos
addr16
sar
addr16
sahf
sar
popa
add
jle
dec
sar
clc
jnp
loop
jle
add
sub
fldenv
fiadds
add
push
add
pop
js
pop
cmp
sbb
adc
add
xlat
pusha
add
xor
add
add
test
inc
add
ret
xabort
clc
out
scas
in
mov
divb
add
or
daa
clc
cmp
inc
clc
or
clc
stc
fstps
in
cmp
cmp
add
add
sbb
cmp
cmp
inc
add
sub
clc
jp
fadds
add
add
inc
add
int
roll
mov
sub
scas
iret
imul
add
xlat
push
add
pop
call
das
fisttpl
cmpsb
clc
cmp
add
gs
mov
xabort
mov
clc
xor
in
cmp
clc
inc
add
mov
clc
es
mov
lahf
sbb
enter
jo
add
mov
jbe
rclb
clc
fdivrl
or
mov
add
add
mov
pop
imul
addr16
add
data16
sub
adc
add
add
cmpsl
clc
push
out
ljmp
sarl
call
clc
mov
cmp
clc
jecxz
xor
add
scas
mov
cmp
pushl
add
sub
xor
add
jne
clc
jl
iret
add
add
jnp
sbb
clc
mov
in
call
shll
add
inc
add
cli
ljmp
clc
imul
add
pop
and
add
mov
xchg
scas
dec
dec
xabort
add
mov
imul
sub
add
cmc
cmp
mov
clc
cmp
pop
mov
jbe
clc
das
cwtl
cli
xbegin
add
xchg
jl
mov
ds
ret
clc
mov
mov
clc
pop
push
add
in
inc
clc
xchg
xchg
mov
loop
inc
clc
cmp
jecxz
cmp
add
cli
dec
sar
aad
mov
rol
clc
push
xabort
add
jmp
mov
clc
shll
dec
xor
add
add
rep
xor
iret
push
popf
in
dec
push
add
jmp
add
add
jl
clc
jmp
mov
mov
add
std
cmp
scas
push
mov
fsubrp
and
add
add
roll
clc
mov
cld
ds
add
add
fdivrl
dec
add
add
add
add
jnp
repz
jb
add
clc
push
sub
clc
fsubl
clc
hlt
xchg
pop
jge
stc
and
add
adc
add
clc
lock
xchg
or
or
rcll
add
out
sar
sti
leave
data16
push
cmp
inc
clc
adc
or
add
clc
pop
aam
pop
mov
arpl
add
clc
scas
negb
repnz
add
jno
add
clc
sub
cli
dec
adc
add
mov
clc
into
or
push
hlt
out
cltd
js
clc
inc
add
jle
clc
sar
jbe
clc
out
jnp
jecxz
push
ds
scas
loopne
cltd
aaa
push
pusha
add
or
and
ljmp
add
xchg
stos
jns
mov
add
outsb
push
add
insb
ret
clc
inc
add
jns
add
add
xchg
xor
cmp
clc
data16
scas
pushf
in
mov
and
fimull
dec
scas
push
add
xchg
push
dec
xchg
dec
iret
rcrb
arpl
add
clc
outsl
sbb
add
xchg
ficoms
ljmp
add
out
xor
add
or
out
xchg
adc
add
aam
pushf
je
clc
lcall
clc
mov
sub
add
fbld
cld
mov
sbb
mov
jno
add
cmpsb
clc
pop
clc
adc
add
stc
mov
clc
xchg
inc
clc
dec
cli
adc
add
lret
jl
clc
sub
add
and
add
pushf
inc
clc
mov
stos
lea
pushf
mov
adc
add
clc
fadd
clc
test
incl
pusha
add
mov
in
jmp
add
clc
push
clc
arpl
add
test
lods
xchg
push
pop
rcl
xor
add
mov
xchg
mov
clc
mov
jmp
cmp
mov
xor
add
inc
add
dec
cltd
sbb
rclb
dec
sbb
add
xor
add
push
inc
add
loopne
mov
hlt
dec
aam
leave
push
add
jb
add
and
add
add
pop
outsb
pop
mov
cmp
mov
clc
rcr
dec
xchg
outsb
adc
add
clc
adc
xor
sahf
add
xor
add
in
inc
add
jns
xbegin
test
add
add
clc
mov
cmp
aad
add
mov
sbb
and
add
add
add
clc
loope
mov
xchg
mov
clc
sti
fistps
clc
test
mov
cmp
dec
mov
and
add
add
stos
push
xchg
daa
clc
ds
push
xor
add
add
dec
pop
sub
imul
or
cwtl
add
add
js
pop
adc
or
clc
out
and
cmp
jno
add
pop
insb
notb
pop
aaa
sbb
clc
lock
sub
add
cmc
mov
add
lcall
add
clc
movsb
clc
bound
add
arpl
add
push
out
jb
add
test
push
add
mov
clc
inc
clc
and
add
xor
add
hlt
icebp
xor
add
add
pusha
add
xchg
movsl
clc
jns
ja
fdivrl
clc
push
jno
add
mov
stc
loopne
daa
clc
jb
add
mov
inc
add
out
rclb
add
cmp
jno
add
lock
ljmp
clc
pop
in
mov
fimull
xor
into
pop
jecxz
mov
lret
jp
gs
xchg
jl
ss
mov
add
xchg
cld
leave
jecxz
jecxz
cmc
into
clc
fs
push
add
xor
add
mov
rclb
push
mov
clc
fdivs
or
sbb
sbb
mov
jnp
repz
in
fldenv
movsl
clc
adc
add
bound
add
sbb
mov
sub
add
test
sbb
xchg
cltd
clc
cmp
add
outsb
push
sbb
sar
mov
adc
sbb
add
clc
int
add
pop
popa
add
js
add
repz
add
in
out
addr16
out
mov
clc
adc
add
repnz
in
fdivl
add
add
es
push
out
cmp
push
mov
add
vsqrtps
add
clc
push
mov
clc
dec
sbb
push
add
data16
in
jl
adc
pop
and
add
ret
mov
add
jbe
dec
sbb
add
push
in
xlat
mov
add
cmp
sar
jg
adc
add
es
cld
sbb
lods
sub
clc
sub
add
add
fisubrl
add
int3
mov
cmp
clc
dec
cld
dec
mov
push
add
push
clc
sbb
xchg
sahf
test
add
jmp
jb
add
js
std
int3
insb
dec
pop
xbegin
jecxz
cmp
clc
das
lea
add
push
add
sbb
add
shlb
ret
clc
push
cmp
nop
mov
jns
clc
mov
clc
sbb
clc
inc
clc
sub
clc
and
cmp
jg
clc
cmp
outsb
bound
add
add
jbe
clc
and
add
jns
clc
add
add
mov
mov
add
push
cmp
clc
hlt
mov
add
movsb
clc
int3
sbb
sub
xor
add
add
mov
cmp
clc
ds
gs
sar
jge
popa
add
sbb
add
add
add
add
clc
pop
and
add
mov
movsl
clc
sub
add
mov
clc
test
xchg
xlat
loope
std
fsubr
fdivr
shr
bound
add
add
adc
add
add
iret
scas
into
cli
mov
xchg
fstpl
add
sub
int3
mov
js
ljmp
clc
test
clc
pop
cmp
cmp
xchg
or
clc
sti
ds
cmc
iret
push
add
push
scas
xchg
loope
xor
clc
mov
pop
notb
add
test
xor
add
pop
cltd
push
adc
add
clc
mov
add
push
xabort
sar
clc
add
add
clc
dec
push
add
sub
add
in
fidivrs
and
add
add
clc
notb
add
gs
push
cmp
clc
sub
add
add
mov
shl
sbb
add
lods
pushf
cli
xchg
jo
add
push
pop
jb
add
clc
inc
clc
push
add
push
clc
vshufps
or
cmp
sbb
add
bound
add
add
adc
add
add
je
sar
add
data16
xor
add
or
inc
clc
repnz
jo
add
cwtl
mov
inc
add
sarl
and
add
test
pop
mov
sbb
lods
inc
add
sbb
add
dec
adc
das
pop
iret
dec
cmp
or
clc
cli
int
clc
fcomip
add
add
pusha
add
in
pop
std
sub
xlat
mov
pop
test
clc
dec
push
xchg
jo
add
int
lods
adc
add
adc
add
cmp
add
inc
clc
mov
insb
clc
dec
imul
xbegin
add
or
clc
clc
stos
mov
fimuls
mov
add
clc
push
add
pushf
das
dec
mov
sti
mov
and
sahf
loope
iret
ljmp
clc
cmc
ret
clc
mov
add
jns
rorl
mov
clc
sar
add
mov
or
mov
add
dec
add
mov
push
add
mov
mov
out
jne
add
adc
add
jecxz
inc
add
mov
test
add
add
cli
xchg
sub
ss
and
add
ret
clc
xchg
pop
sar
add
ss
mov
add
add
stos
add
sub
arpl
add
dec
pop
shll
imul
cmp
clc
stos
fldt
mov
aaa
and
add
movsl
clc
ds
clc
rdmsr
add
jmp
mov
inc
add
cmp
lret
enter
mul
clc
imul
jmp
pop
test
inc
add
es
add
insl
shrl
sbb
sub
or
clc
je
mov
jl
add
xor
add
out
push
cltd
scas
pop
daa
clc
iret
sahf
jo
add
add
add
js
not
mov
clc
mov
clc
mov
clc
jbe
adc
add
imul
add
mov
xbegin
cmpsl
clc
hlt
jge
clc
jge
clc
mov
and
add
clc
bound
add
popa
add
ret
clc
cmc
nop
jg
clc
icebp
push
fsubrp
data16
mov
adc
add
jno
add
xchg
pop
das
rcrl
pop
mov
mov
fcomp
fcoms
ds
dec
clc
imul
clc
std
pop
lcall
leave
xor
add
add
cwtl
mov
clc
inc
clc
test
clc
hlt
movsl
clc
inc
add
fsubrs
push
rorl
ret
clc
sbb
cmpsl
clc
popf
adc
add
dec
sahf
ja
sub
cmp
mov
or
sbb
xchg
mov
pop
xchg
xor
add
push
add
add
inc
clc
cmp
push
insb
popf
push
icebp
fucom
clc
jge
add
repnz
add
clc
outsb
xchg
rcll
loopne
adc
add
test
movsl
clc
mov
sub
out
jne
pop
pop
sub
cmp
jno
add
fdivl
loope
mov
mov
add
adc
add
clc
mov
xchg
cli
insb
lods
cmp
add
rcll
cmp
xor
add
jl
inc
add
sbb
jl
clc
push
add
cmp
pop
clc
dec
fadds
popa
add
in
jnp
pushf
push
push
in
scas
push
clc
mov
pop
push
cld
fdivl
dec
fidivrs
sub
add
lods
dec
in
nop
rcrl
clc
clc
add
add
add
cs
add
or
add
cmp
dec
mov
push
add
xor
add
add
push
or
add
sub
push
add
add
add
outsb
and
dec
lahf
lea
push
clc
lret
xabort
cltd
nop
pusha
add
mov
clc
push
add
sub
or
add
add
mov
add
push
dec
and
add
pop
pop
fcos
mov
adc
add
mov
jl
push
aaa
inc
add
gs
or
add
into
clc
cmp
adc
add
mov
sub
mov
add
cmp
add
add
or
clc
dec
clc
pushl
xchg
daa
clc
testl
icebp
mov
clc
mov
clc
sub
clc
cmp
lods
in
mov
outsl
dec
mov
je
shl
clc
lret
jp
adc
add
in
mov
clc
dec
cmp
add
jns
mov
insb
fwait
out
aaa
test
mov
int
mov
inc
add
insb
push
add
sbb
add
add
clc
mov
push
stos
sbb
adc
add
xchg
add
lock
and
push
sbb
movsb
clc
lahf
mov
mov
clc
inc
clc
and
add
add
out
push
add
pop
mov
pushl
add
sbb
add
ja
icebp
mov
push
iret
test
add
cld
xchg
je
add
jbe
push
cmpsb
clc
notl
add
insl
mov
add
add
add
clc
clc
xor
ret
clc
push
push
add
inc
clc
xchg
sub
mov
inc
add
pop
xor
add
jnp
add
fwait
inc
clc
fisubs
clc
add
int
std
add
add
add
and
add
xchg
cs
or
mov
fs
fimuls
loop
adc
clc
out
addr16
das
fwait
cltd
repnz
insl
gs
imul
push
add
or
or
clc
cltd
fcoml
add
add
mov
movsl
clc
test
mov
decb
jo
add
mov
clc
jg
insb
xor
inc
clc
inc
clc
jo
add
add
imull
pop
sbb
adc
mulb
clc
lret
fcmovb
clc
pop
clc
pop
mov
fiaddl
add
or
cmp
fists
mov
sbb
add
cmpsb
clc
out
in
in
aad
scas
rcll
add
fwait
mov
scas
dec
gs
iret
out
xchg
xbegin
sub
call
fistpll
add
imul
or
clc
fmul
mov
stos
fidivrs
add
add
add
pop
xor
add
inc
clc
mov
sbb
clc
inc
clc
mov
test
scas
outsl
push
jge
clc
adc
add
add
jecxz
js
faddl
cmp
cmc
mov
add
inc
clc
mov
sub
pop
cmp
dec
cmp
add
cwtl
mov
rorb
xor
xor
and
lret
mov
fsubrs
clc
jmp
add
add
cli
push
jae
add
jae
add
int3
cli
js
fistpll
inc
add
dec
das
xor
add
je
ret
clc
jp
ret
clc
xor
add
clc
das
bound
add
dec
sti
push
clc
sarl
clc
push
int3
xor
add
add
clc
dec
pop
lcall
xbegin
clc
test
gs
xor
jb
add
add
fsubrs
mov
add
in
loop
movsb
clc
sub
cmc
enter
clc
repnz
sub
clc
cmp
add
cmc
or
addr16
cmp
xor
add
push
popa
add
enter
xor
mulb
add
jb
add
clc
xlat
jns
aas
jo
add
lret
add
or
in
dec
cmp
jb
add
and
add
clc
sub
pop
add
mov
add
sub
add
lods
insl
fwait
jmp
fnstcw
popa
add
enter
arpl
add
stos
mov
xabort
or
dec
lcall
add
lret
clc
enter
add
js
in
in
adc
add
jmp
lea
clc
jae
add
cmp
cld
fistpll
insl
xor
clc
lods
and
add
inc
add
popa
add
cmp
add
lods
cmc
icebp
imul
add
add
dec
loopne
or
add
adc
add
pushf
xor
add
add
lret
inc
clc
dec
xchg
xor
add
clc
fists
add
push
and
add
sbb
add
pop
dec
jae
add
stos
in
mov
add
or
cs
insl
mov
xchg
sub
daa
clc
and
add
xlat
unpcklps
clc
cmc
xchg
test
clc
in
imul
add
clc
push
lret
and
add
clc
mov
clc
jg
push
call
mov
mov
inc
add
loopne
mov
clc
lret
loope
adc
add
jle
adc
add
add
arpl
add
pop
clc
add
add
clc
push
pop
sub
jb
add
cwtl
fcoms
add
xchg
aam
daa
clc
or
pop
sbb
repz
add
add
fistpll
fsubrp
rcll
jl
clc
ret
scas
jp
add
dec
rcrb
mov
in
mov
lods
cwtl
jmp
dec
mov
add
add
repnz
out
mov
add
fstps
fidivrl
clc
xchg
mov
add
mov
adc
add
fidivrl
dec
clc
clc
imul
test
fcom
add
icebp
mov
add
clc
xabort
clc
mov
add
clc
or
clc
and
jmp
inc
clc
add
clc
loop
push
data16
lock
add
fldcw
clc
mov
clc
sarb
or
cmp
push
iret
sbb
add
or
add
add
clc
nop
jns
push
lahf
ss
rol
clc
dec
sahf
xchg
xchg
pop
movsb
clc
mov
sbb
push
add
aad
and
add
clc
movsl
clc
xor
push
out
pushf
inc
add
pop
jecxz
outsb
mov
clc
adc
add
mov
and
add
add
mov
lea
es
push
sar
clc
addr16
arpl
add
add
outsb
out
fucomi
mov
push
jge
add
stos
xor
add
clc
js
clc
jne
add
jbe
in
jle
imul
xlat
outsl
push
sar
add
inc
clc
inc
clc
pop
jecxz
clc
bound
add
ja
into
aad
pop
push
pop
enter
mov
dec
sub
sbb
add
pop
and
test
xchg
fbld
aam
mov
jle
out
xor
add
sbb
xor
sub
pop
push
add
test
push
clc
push
mov
and
add
add
cwtl
bound
add
add
clc
adc
add
dec
ja
add
pop
adc
add
clc
popa
add
xchg
out
popa
add
repz
add
roll
add
mov
dec
jae
add
add
jl
add
xchg
ret
clc
arpl
add
out
ret
clc
ja
cmp
fistpll
sub
sub
into
fdivrp
xchg
int3
dec
and
add
clc
stos
dec
mov
clc
insl
mov
clc
fndisi(8087
clc
fxch
jnp
rorb
sub
add
mov
lcall
addr16
ret
clc
mov
pop
xlat
insl
out
mov
or
sub
mov
or
add
sub
push
add
lret
aam
sbb
add
clc
pop
cmp
add
movsl
clc
xchg
fwait
push
add
push
add
or
aad
add
add
xchg
sbb
je
in
sub
add
jle
clc
inc
clc
lret
ss
out
or
add
lock
sbb
mov
mov
movsl
clc
ds
cltd
jns
add
cmp
lahf
add
add
mov
in
iret
cmp
jbe
add
cld
std
paddsb
ss
loopne
push
clc
inc
add
adc
add
fs
jmp
add
icebp
inc
add
add
jecxz
divb
test
add
add
add
inc
add
jo
add
adc
add
mov
mov
dec
lcall
or
add
xchg
insb
and
cmp
add
stos
mov
add
add
ss
stc
stos
cmovns
mov
mov
dec
scas
pop
insb
inc
add
dec
cwtl
jecxz
mov
fnsave
inc
add
ja
lret
shl
popa
add
push
add
jnp
fidivrs
pop
mov
sub
mov
clc
sub
cmc
mov
xbegin
rcrl
sub
idivl
add
sti
out
or
add
rorl
clc
dec
sar
jecxz
leave
pop
clc
push
ret
cs
add
call
jge
clc
repnz
clc
out
mov
fsubl
add
mov
mov
mov
clc
imul
mov
int
icebp
or
adc
add
xabort
clc
fs
std
and
add
ljmp
add
fstpl
add
lcall
clc
xchg
enter
int3
or
add
mov
cmp
pop
in
cmpsb
clc
fadd
clc
dec
popf
xchg
mov
in
test
push
clc
dec
lock
add
mov
das
test
jnp
into
sub
add
stos
push
or
fnsave
add
popa
add
clc
stos
jae
add
fnstcw
mov
cmp
mov
clc
aas
jb
add
xchg
insb
or
adc
add
mov
clc
loope
clc
sbb
clc
clc
mov
inc
add
mov
test
ss
fs
xchg
mov
sub
inc
clc
sahf
pushf
fcomp
shr
push
xchg
ja
add
add
add
clc
cmpsl
clc
pop
push
std
push
push
cli
adc
xor
clc
mov
mov
cmp
insb
sar
test
rcl
or
es
xor
add
clc
dec
cmpsl
clc
mov
clc
ror
imul
add
add
adc
add
add
insl
outsl
or
xor
cmp
add
repz
add
mov
add
or
lret
or
sar
insl
sub
clc
mov
clc
mov
clc
sbb
push
clc
push
add
add
fists
add
rol
clc
out
jb
add
push
add
clc
test
sub
inc
clc
ds
xor
add
daa
clc
notb
add
sub
or
clc
ja
jl
xchg
sbb
clc
insb
faddl
add
clc
inc
clc
cmp
outsb
fistps
push
add
mov
add
add
add
or
dec
shlb
movsb
clc
out
sub
cmp
scas
add
pop
call
pushf
cmp
add
movsl
clc
adc
ret
cmp
add
adc
fnstenv
mov
clc
lea
add
iret
sbb
add
into
mov
add
loope
pop
popf
push
push
ds
nop
jp
clc
inc
clc
ret
clc
inc
add
std
test
dec
sub
mulb
push
add
inc
add
in
pop
daa
clc
add
xchg
loope
pop
jmp
add
sbb
aaa
adc
add
clc
iret
pop
dec
in
insl
scas
cmp
dec
test
mov
add
loope
jne
adc
add
gs
hlt
fldt
xor
add
clc
xor
add
mov
clc
int
xchg
pop
or
clc
cmp
sub
add
add
mov
jecxz
add
add
add
pop
cmp
clc
mov
ret
repnz
inc
add
popf
in
xchg
psubsw
clc
mov
xchg
cmc
test
clc
repnz
popf
imul
rorl
adc
mov
es
bound
add
add
inc
add
aad
aas
dec
inc
add
mov
clc
sarl
dec
pop
push
add
fs
pop
cwtl
and
add
in
fst
loopne
sbb
xor
add
sbb
clc
sub
xchg
jo
add
das
xchg
or
add
sar
add
add
mov
add
lret
ja
clc
mov
add
iret
call
add
scas
lock
int3
mov
rcrl
mov
add
add
clc
test
stos
xchg
into
int3
insl
and
add
fsub
clc
mov
lods
mov
add
je
jmp
mov
scas
and
add
fs
mov
add
outsb
cmc
scas
pop
mov
clc
aas
enter
push
or
dec
pop
mov
add
add
mov
es
fidivrl
dec
cld
in
aad
jmp
stc
and
add
sbb
mov
clc
stos
popa
add
imull
addr16
jle
lcall
clc
push
loopne
dec
jmp
add
xchg
jmp
sub
clc
loop
xor
add
inc
clc
iret
adc
add
test
sub
clc
sub
xor
add
inc
clc
sbb
xlat
xabort
add
jl
mov
clc
enter
add
mov
clc
jmp
clc
dec
cltd
sbb
add
cmp
clc
or
clc
xor
movsb
clc
jno
add
clc
fsts
add
pop
dec
out
add
add
or
int
add
jo
add
jmp
shl
clc
mov
add
and
add
mov
add
bound
add
xchg
fadds
loope
inc
clc
mov
test
in
or
sub
pop
lods
xchg
jg
jmp
cltd
xchg
push
mov
clc
call
and
add
clc
mov
mov
clc
push
cmp
jmp
je
pop
out
sahf
ret
clc
loopne
in
jbe
push
clc
dec
or
inc
clc
pusha
add
outsb
dec
cmp
clc
mov
xor
add
clc
and
add
add
pusha
add
lret
leave
fistpl
mov
dec
and
add
add
hlt
pop
cmp
pop
clc
jns
cli
add
test
inc
clc
out
lods
adc
add
inc
clc
mov
add
cltd
jg
add
push
add
inc
clc
or
and
add
dec
sub
mov
xor
add
add
ret
mov
xchg
adc
add
dec
movsb
clc
in
pop
divb
add
cmp
in
xchg
and
clc
pop
xchg
pop
ljmp
dec
pop
decl
clc
mov
loopne
adc
out
cmp
shrb
clc
std
push
sbb
rolb
cmp
clc
jb
add
add
pop
mov
add
aam
imul
xor
add
xor
add
jbe
add
int3
pop
clc
push
fimuls
clc
mov
cmp
add
stos
cwtl
test
clc
cmp
clc
fsubrs
mov
sbb
push
clc
loope
mov
jecxz
popa
add
sub
roll
add
ret
clc
push
sub
add
add
cld
sbb
test
data16
sbb
sub
add
add
cmp
add
enter
btc
ds
sar
jmp
clc
inc
add
mov
pop
faddl
add
add
mov
cmc
xor
add
cmp
mov
xchg
xchg
xchg
dec
or
mov
push
add
je
add
add
jno
add
add
loope
arpl
add
pop
xor
add
clc
outsl
xchg
add
add
add
movsb
clc
dec
cltd
jbe
push
sar
clc
ja
or
addr16
cmp
clc
adc
add
jle
fsub
clc
push
add
insl
or
sbb
fisubl
add
data16
mov
pop
out
fwait
mov
add
xchg
lods
int3
push
add
push
clc
dec
lahf
loop
push
xlat
lahf
cmp
movsb
clc
xchg
jge
xchg
cmc
xchg
xchg
loopne
sahf
pop
sbb
or
jbe
loope
jl
inc
clc
inc
add
bound
add
add
xchg
aam
add
cmp
js
nop
jno
add
sar
iret
sar
clc
nop
mov
add
pop
or
clc
jl
add
cmp
add
repz
or
sahf
inc
clc
test
sub
clc
pushf
add
sar
add
add
das
data16
loopne
stos
out
xabort
add
inc
add
cli
mov
add
clc
sar
test
fisttpl
push
lcall
inc
add
cmp
clc
clc
xchg
mov
mov
dec
fs
inc
add
add
add
loop
inc
clc
pop
clc
push
add
cmp
add
add
clc
stc
in
push
add
push
add
adc
clc
or
clc
pushf
push
icebp
pusha
add
gs
addr16
mov
clc
push
mov
fisubs
call
add
fiaddl
add
xchg
dec
inc
add
insl
movsb
clc
ficoms
add
add
add
mov
clc
das
aam
inc
add
xor
jecxz
mov
repnz
pop
cmp
inc
clc
jo
add
adc
mov
ret
add
cmp
adc
add
and
outsb
or
scas
jp
aaa
cltd
jae
add
cld
int
add
or
jmp
jae
add
jmp
or
inc
clc
outsb
sbb
fstl
add
jl
or
shr
fcoms
xor
mov
lock
add
jne
mov
out
mov
push
shrb
mov
clc
dec
sahf
add
add
add
insl
pusha
add
mov
fidivs
add
add
jno
add
cmp
testl
push
mov
aaa
jb
add
add
cmp
jmp
add
lret
cwtl
inc
add
or
fldl
clc
dec
add
add
sahf
call
clc
push
add
add
add
fidivs
test
jnp
dec
nop
xchg
pop
xbegin
add
add
add
lea
add
adc
cs
sar
mov
imul
jmp
mov
js
add
ss
lret
aas
mov
dec
push
push
cmp
clc
sti
dec
imul
clc
in
push
add
paddw
pushf
aaa
mov
xchg
push
gs
xor
add
clc
imul
daa
clc
cs
cmc
and
add
cli
or
add
add
std
mov
add
add
add
add
add
rol
clc
lret
or
xor
add
enter
loop
outsb
or
xor
add
clc
jmp
clc
aas
ds
sub
or
add
leave
jb
add
add
ret
clc
and
add
in
pop
lods
iret
mov
pushf
push
add
fwait
imul
add
add
cltd
aaa
inc
add
cwtl
sub
add
stos
mov
pusha
add
mov
clc
push
and
add
add
inc
add
sbb
xor
add
xlat
mov
clc
xchg
pop
cmp
clc
push
clc
mov
add
clc
xchg
ktestw
clc
icebp
fstps
mov
inc
clc
cmpsl
clc
out
nop
loope
call
xabort
add
jmp
aaa
clc
test
xchg
aaa
mov
mov
add
xor
add
dec
out
outsb
popf
loop
mov
xchg
mov
ret
push
pop
add
add
clc
push
inc
clc
lret
mov
pop
and
xor
cmp
sar
jne
inc
add
bnd
lret
add
popa
add
gs
cmp
inc
clc
lea
clc
popa
add
mov
add
add
clc
jp
iret
nop
push
jae
add
in
ds
clc
clc
cmp
scas
pop
shl
cltd
push
add
cmc
lock
add
sbb
push
iret
pop
in
movsl
clc
out
data16
data16
jp
mov
cmp
xchg
rcrb
jns
pusha
add
sbb
adc
mov
bound
add
xchg
aam
jnp
xlat
jnp
lods
inc
clc
push
cmp
incl
add
jnp
add
or
fs
xchg
mov
inc
add
movsl
clc
jg
inc
clc
mov
xor
add
clc
push
scas
cmp
cwtl
adc
add
mov
clc
out
enter
dec
gs
sbb
addr16
jg
push
imul
cmpsl
clc
inc
add
fucomip
vmovlhps
and
add
imul
add
add
xor
add
pop
cli
mov
add
add
scas
js
cmc
fneni(8087
clc
add
add
add
mov
clc
or
xor
stc
or
sbb
clc
cli
or
add
idivb
add
pop
add
int3
xor
add
clc
push
fsubs
add
clc
mov
mov
sub
xchg
cli
cmp
clc
daa
clc
insb
mov
jo
add
clc
jp
out
add
add
add
clc
sbb
add
add
clc
xchg
repnz
add
fidivl
sbb
pop
pop
std
repz
mov
repnz
cmp
lods
leave
pop
mov
rorb
pop
cmp
add
imulb
in
sub
add
xchg
sti
cwtl
push
xor
add
or
or
fisttpll
add
xabort
mov
cld
and
xchg
or
lods
movsl
clc
mov
rol
clc
jmp
fimull
inc
clc
rolb
stos
in
fcoms
mov
sahf
push
add
repnz
push
mov
mov
add
mov
add
mov
nop
int3
cmp
add
outsl
out
movsb
clc
mov
clc
dec
push
dec
stc
cwtl
in
in
in
jle
inc
add
jae
add
push
cmc
push
or
loopne
movsl
clc
testb
adc
add
and
add
test
adc
subps
or
push
add
adc
add
add
pusha
add
sbb
shlb
add
jb
add
lods
rcll
add
repz
mov
aas
in
cmc
sub
cltd
cmpsb
clc
pop
out
sbb
push
adc
test
mov
iret
clc
mov
xchg
push
inc
clc
xchg
mov
xchg
clc
push
stos
dec
cwtl
daa
clc
push
mov
or
add
fcomps
clc
add
add
jle
mov
adc
add
outsb
pop
or
add
loop
inc
clc
mov
inc
clc
dec
sub
or
sub
sahf
cmc
clc
xchg
test
call
clc
sti
clc
xchg
xchg
rcll
clc
insl
sar
fyl2x
dec
sbb
add
xchg
pop
dec
dec
adc
add
clc
movsb
clc
sub
jl
fmuls
es
enter
mov
ficoml
cmp
cmp
add
adc
add
stos
jo
add
add
add
add
clc
daa
clc
and
dec
je
ss
add
ss
in
or
cmpsb
clc
pop
or
jb
add
daa
clc
add
add
add
cmp
and
add
add
scas
rdseed
insb
stos
fsubs
pop
int
xabort
imul
clc
sub
mov
clc
inc
clc
push
add
cld
pop
repnz
mov
add
jns
clc
pop
jg
xlat
and
add
insl
fldcw
aas
jecxz
dec
in
sarb
add
add
add
clc
outsb
jns
popa
add
movsl
clc
in
cs
mov
clc
das
and
add
xchg
nop
jae
add
lret
sub
mov
enter
stos
sub
ds
sahf
jg
xchg
pop
or
popf
cmp
jg
clc
sub
fidivl
add
xchg
push
add
je
clc
dec
cmp
imul
int3
sti
cmp
out
cltd
cmp
clc
cltd
lret
repz
adc
add
ds
fxch
mov
jmp
popa
add
jg
sub
clc
mov
mov
xlat
repnz
add
and
xchg
push
rcr
jp
add
pop
xchg
pop
aas
adc
add
pop
xchg
push
clc
clc
mov
and
add
clc
aas
data16
arpl
add
into
pop
push
and
add
clc
fwait
bnd
clc
cmc
cmp
iret
inc
clc
mov
movsb
clc
mov
add
rolb
testb
data16
jbe
inc
add
jmp
insl
clc
jb
add
clc
sub
stos
push
add
data16
mov
add
repz
add
clc
lea
clc
or
cld
jae
add
add
add
pushl
clc
or
sti
xbegin
and
add
add
cmp
mov
clc
pushf
add
mov
clc
cli
test
push
cmp
jmp
or
clc
fs
xor
add
clc
loopne
cmp
adc
add
clc
jg
clc
in
inc
add
jmp
clc
inc
add
sub
clc
xor
add
clc
loop
add
add
add
add
fwait
sbb
push
add
push
js
pusha
add
inc
add
xbegin
cmp
mov
and
add
xabort
add
repnz
mov
clc
or
add
jge
repz
addr16
fadds
fsubrs
clc
repz
clc
mov
cmp
mov
setg
jb
add
pop
data16
adc
add
int3
dec
mov
call
clc
mov
adc
add
dec
int3
cmp
clc
outsb
lcall
shlb
add
add
add
clc
fcompl
decb
push
add
adc
add
loope
pop
or
stos
pop
clc
aad
loopne
aas
aad
aad
sahf
add
add
add
int
mov
clc
mov
clc
fwait
shl
clc
cmp
pop
mov
dec
stos
popf
jg
add
lods
mov
pop
fisubrl
or
pushf
ror
and
add
clc
or
clc
sbb
ljmp
add
sub
sbb
dec
adc
add
add
out
in
shlb
add
or
int
add
or
cmp
xchg
mov
sbb
push
add
push
imul
mov
add
inc
clc
or
and
add
es
pop
push
add
xchg
sahf
aad
enter
and
insl
cmp
cli
data16
dec
push
arpl
add
loopne
and
popf
pop
fwait
xchg
and
add
add
dec
xchg
sti
pop
outsb
dec
aam
or
clc
push
push
add
inc
clc
add
add
loop
xor
clc
rcl
cmp
jge
daa
clc
inc
add
das
cmpsb
clc
outsl
mov
push
mov
mov
adc
sub
xlat
out
ss
add
sar
cmp
mov
in
dec
lahf
cmp
clc
xchg
or
dec
dec
pop
decb
out
stc
cmc
mov
jns
clc
pop
rolb
clc
pop
jle
lahf
xchg
repz
add
in
mov
adc
add
add
add
add
ret
clc
inc
add
sub
xor
mov
popf
push
clc
in
cs
add
and
pop
clc
fcoml
filds
add
out
lahf
sub
loope
lahf
push
cmp
mov
clc
mov
add
bound
add
clc
add
add
add
clc
fs
push
add
ss
clc
push
jo
add
pop
xchg
lock
stos
std
faddp
clc
mov
cmc
dec
jns
clc
mov
add
add
mov
sar
pop
sti
or
mov
adc
nop
mov
clc
xor
in
xor
add
rclb
add
sar
and
add
mov
add
add
clc
popa
add
notb
adc
add
add
fcoml
add
cli
cmp
cmp
mov
add
test
inc
add
mov
add
ja
clc
or
inc
add
adc
sbb
ret
inc
clc
xbegin
clc
sbb
mov
movsb
clc
fbld
add
cmp
lcall
clc
mov
add
sub
lock
add
inc
clc
mov
add
es
add
add
pop
push
add
clc
jecxz
dec
sub
mov
ficoml
add
dec
jecxz
aad
xor
add
add
add
push
repz
clc
jnp
clc
pop
enter
xor
add
add
mov
fisubl
add
dec
add
adc
add
bound
add
cmc
and
add
jge
add
push
dec
push
push
add
lcall
outsb
lcall
jmp
negl
xchg
mov
and
add
add
sub
push
xor
add
clc
out
and
ljmp
clc
sbb
sbb
add
clc
mov
mov
clc
xor
add
dec
clc
repz
add
aaa
push
clc
mov
push
clc
push
gs
and
add
movsb
clc
push
clc
mov
add
cmp
sti
aas
aam
mov
and
add
and
add
fcos
jb
add
movsb
clc
and
add
cmp
call
jne
cld
sbb
xor
pop
clc
loop
ljmp
enter
push
insb
and
add
and
add
icebp
jns
add
test
and
mov
mov
insb
xor
add
clc
ds
fs
mov
clc
insb
insb
ffreep
clc
jg
xchg
dec
out
or
jb
add
clc
js
clc
cmp
clc
jnp,pn
ret
cli
or
and
add
cmpsl
clc
or
jecxz
or
sar
clc
jbe
mov
shlb
xchg
or
or
clc
mov
fbstp
adc
add
cmp
or
clc
pop
ret
pop
sub
cmpsl
clc
out
push
es
lret
adc
add
add
clc
cmp
push
add
xchg
lods
jae
add
out
jle
jns
cmp
clc
push
std
jo
add
sub
pop
inc
clc
xor
jnp
pushf
sbb
dec
fimull
clc
addr16
addr16
cmp
jp
pop
shll
add
in
pop
cmpsb
clc
aaa
or
clc
cmp
jge
pop
push
mov
call
sub
clc
pop
das
xor
add
clc
rorb
clc
inc
clc
cwtl
pop
outsb
or
cltd
sahf
pop
cmp
clc
and
add
lret
add
in
test
cli
ja
pop
ret
lret
sar
jg
clc
pusha
add
push
clc
mov
push
add
pop
pushf
int3
cmp
mov
mov
jo
add
adc
add
cli
or
sub
dec
popf
lods
xor
add
clc
call
mov
clc
dec
xor
add
add
movsb
clc
into
push
xabort
add
add
xchg
ret
cmp
xabort
cmp
push
lahf
cmp
bound
add
clc
ja
cmp
add
test
jno
add
mov
clc
mov
pop
es
xchg
mov
ret
clc
ja
jb
add
clc
cmpsl
clc
or
into
push
ret
add
add
add
push
add
adc
add
mov
int3
div
jl
clc
push
pop
jne
add
pop
iret
cwtl
or
clc
ret
clc
loope
shlb
add
mov
add
xchg
xchg
hlt
xchg
pop
and
add
clc
push
fcompl
mov
sti
inc
add
je
dec
cmp
add
cwtl
pop
pop
push
sub
push
xchg
cli
jecxz
stos
pop
cli
inc
add
jae
add
xchg
xor
add
addr16
addr16
and
add
sbb
jae
add
out
imul
ljmp
aaa
sub
outsb
xlat
fs
pop
es
cmp
jae
add
pop
ds
lcall
xbegin
es
pop
sbb
cmp
clc
mov
add
clc
loop
pop
jb
add
jne
cmp
fcoms
clc
sar
xbegin
negl
int3
or
add
inc
add
xchg
sti
movsb
clc
mov
mov
sbb
sbb
clc
mov
into
dec
fcmovu
sbb
dec
mov
es
fwait
mov
loopne
fptan
out
in
jae
add
add
enter
add
add
in
sbb
clc
lods
imul
repnz
clc
push
out
cmpsb
clc
pop
or
rcrb
mov
jns
adc
add
loope
push
push
sar
ds
outsl
mov
clc
push
add
sub
pop
mov
arpl
add
jb
add
add
or
ds
clc
cld
inc
clc
clc
out
xabort
adc
imul
out
mov
mov
xor
inc
clc
jle
add
xabort
shrb
clc
cmp
test
clc
in
pop
dec
icebp
jmp
in
mov
pop
mov
sbb
jno
add
icebp
and
add
add
enter
cmp
mov
in
sar
xor
shrb
aad
inc
add
mov
call
jbe
add
fwait
mov
clc
mov
add
xchg
push
and
add
clc
fwait
pusha
add
inc
clc
mov
mov
clc
out
test
sar
pop
int
pop
clc
jb
add
xabort
pop
fs
cmp
push
clc
call
add
dec
xor
add
clc
sbb
ljmp
add
int3
sar
cmp
clc
ficoms
add
call
pop
inc
clc
mov
mov
fsts
clc
push
add
push
inc
clc
addr16
push
add
popf
enter
add
mov
stos
cltd
cld
popf
mov
mov
jo
add
clc
jnp
add
jae
add
dec
mov
lock
add
mov
mov
jo
add
clc
inc
add
pusha
add
test
adc
add
test
dec
jecxz
or
add
test
add
add
xor
add
clc
dec
mov
sbb
add
inc
add
mov
pop
imul
push
clc
jb
add
push
dec
ret
clc
add
add
nop
dec
sar
add
dec
cmpsb
clc
push
add
lea
jle
dec
fcomps
scas
mov
add
jg
add
xchg
clc
js
aas
xabort
clc
push
add
in
adc
add
es
pop
mov
clc
jne
add
adc
add
add
pop
push
mov
sub
ljmp
mov
pop
mov
popf
sbb
xor
add
pop
xchg
fcomp
lea
hlt
aad
jecxz
enter
add
mov
mov
mov
clc
pop
xchg
pop
xchg
adc
clc
pop
inc
add
testl
insl
xor
add
add
ljmp
clc
mov
notl
add
scas
loopne
test
divl
add
mov
add
in
or
mov
clc
imul
int
add
push
adc
add
or
add
mov
add
jmp
js
test
in
shlb
clc
cmp
clc
jo
add
add
clc
leave
out
loop
sbb
pop
clc
sub
add
clc
mov
lods
lret
xchg
push
ja
and
pop
leave
jmp
dec
sar
gs
outsb
push
add
sbb
pop
sub
add
cwtl
stc
jbe
mov
clc
sub
add
mov
clc
call
mov
add
lods
ss
add
aaa
lahf
dec
push
clc
sub
pop
and
add
daa
clc
add
incl
clc
in
xor
clc
outsb
ret
sbb
add
test
clc
xchg
adc
add
insb
push
clc
jno
add
out
outsl
inc
add
push
add
lcall
push
add
pop
mov
or
out
pop
test
gs
repnz
cmp
fstpl
cmpsl
clc
cmp
clc
icebp
pop
je
ret
add
or
jno
add
adc
add
test
cmp
mov
dec
test
or
mov
push
loop
jo
add
adc
add
pop
js
clc
aam
insl
lock
mov
add
outsl
es
data16
or
add
sbb
add
call
inc
clc
adc
add
adc
dec
cld
shrb
dec
pop
mov
ret
clc
in
std
div
je
add
cwtl
dec
jle
sbb
faddl
mov
std
clc
shll
add
es
sbb
pop
xlat
sarb
mov
pop
lea
outsl
loope
and
add
clc
push
clc
hlt
aam
clc
jecxz
inc
add
pop
clc
mov
stc
adc
pop
sti
inc
clc
xchg
adc
int
add
fidivl
and
add
jnp
add
xchg
jmp
or
clc
xchg
pop
popa
add
std
or
fdivl
cmp
clc
add
test
pop
lods
cld
cmp
mov
jb
add
add
xlat
or
adc
add
adc
xor
clc
and
sbb
test
xchg
sbb
iret
and
add
mov
clc
xor
add
push
push
pushf
fbstp
fimull
mov
in
decl
divb
clc
dec
add
add
mov
push
in
dec
push
mov
dec
mov
es
push
pop
cmp
add
mov
mov
adc
pop
clc
cmc
and
test
add
dec
cli
ret
add
xchg
mov
mov
int3
loop
stos
lret
add
add
fs
fldl
add
sahf
pop
lods
loope
push
add
xor
add
xor
add
mov
add
stos
cs
add
clc
inc
add
pop
xor
add
clc
fs
outsl
js
push
imulb
add
test
cmp
jg
shll
add
add
lcall
clc
rolb
clc
adc
add
xchg
mov
scas
mov
clc
fwait
jo
add
inc
clc
sbb
add
jno
add
fs
cmp
clc
cmc
adc
add
mov
add
cmp
clc
pop
and
add
cld
cld
adc
add
sbb
outsl
insb
mov
clc
jmp
mov
clc
cmp
push
clc
sar
clc
ljmp
clc
popa
add
mov
add
shufps
xchg
aas
mov
clc
outsb
lcall
aas
sbb
push
add
mov
mov
sub
jl
sar
cwtl
es
jmp
or
add
jmp
hlt
adc
add
add
push
push
leave
push
bnd
mov
and
add
sar
aas
sub
sbb
add
xor
add
xchg
jne
clc
js
ljmp
mov
sar
clc
sti
aam
fiadds
clc
fcomp
mov
out
sbb
add
bound
add
add
or
add
imul
jo
add
pusha
add
add
add
add
push
clc
imul
add
mov
clc
sub
loope
scas
sbb
mov
clc
adc
add
mov
hlt
imul
ja
scas
jno
add
add
add
mov
xor
clc
cltd
jo
add
add
mov
clc
xchg
cmp
sub
sub
cmp
cmp
xchg
enter
cli
adc
add
clc
xchg
cmp
add
idivl
cmp
clc
add
add
fimuls
out
or
nop
lods
add
xchg
sub
clc
adc
clc
fidivrl
clc
xchg
fstpt
cmp
into
popa
add
sub
outsl
out
jp
jmp
add
sbb
clc
push
sub
inc
clc
jle
push
sub
jmp
xor
add
sbb
clc
clc
imul
add
mov
clc
push
add
mov
out
jge
arpl
add
mov
sahf
sub
pop
lea
clc
inc
add
adc
add
adc
add
clc
cld
cmpsb
clc
mov
es
mov
fwait
or
movsl
clc
sar
test
jg
pusha
add
xor
sarl
pop
lods
ljmp
clc
or
clc
mov
nop
int
push
jg
clc
pop
jnp
or
dec
jp
add
xor
clc
adc
inc
clc
hlt
mov
cwtl
inc
clc
mov
rolb
mov
lods
xchg
mov
int
bt
jo
add
dec
stos
dec
sbb
jno
add
xchg
jo
add
mov
addr16
jbe
and
add
and
add
adc
add
js
add
jno
add
out
mov
add
inc
add
add
imul
dec
or
add
add
data16
cmc
je
mov
push
add
cmp
clc
push
jmp
das
vxorps
mov
jb
add
add
mov
clc
lcall
dec
pop
pop
inc
add
scas
push
mov
popl
clc
cmp
clc
pop
add
add
pop
dec
rorl
clc
cltd
sub
gs
dec
out
pop
aad
lret
add
popa
add
mov
add
data16
sbb
loopne
or
clc
popf
jmp
lret
pusha
add
loopne
lahf
mov
mov
sbb
inc
clc
cmc
lret
add
sar
add
add
sahf
or
add
clc
daa
clc
dec
mov
clc
mov
clc
xchg
cmp
add
xlat
adc
add
add
add
lahf
xchg
push
mov
pushf
addr16
or
xor
add
add
mov
add
cld
mov
sbb
xor
clc
push
or
or
mov
insb
out
nop
inc
clc
jmp
add
fdiv
gs
jae
add
add
ffree
clc
mov
push
add
add
add
clc
push
cmp
daa
clc
lock
sub
sbb
add
add
pop
clc
outsb
lock
cmp
clc
mov
dec
pop
mov
lea
js
ss
clc
inc
clc
fadds
add
add
test
sub
fnsave
fimull
pop
leave
jnp
add
fs
xchg
insb
push
add
xor
add
add
add
add
imul
hlt
sub
clc
add
add
int
divb
testb
add
lret
dec
aam
mov
clc
mov
add
jne
into
decl
fidivl
clc
inc
add
push
add
movsl
clc
jae
add
add
add
clc
fstpt
clc
mov
sub
clc
ljmp
sbb
clc
jbe
fcomps
add
in
mov
add
add
add
aam
adc
add
cwtl
and
add
add
add
clc
jg
add
mov
daa
clc
and
add
pop
clc
ret
clc
sbb
mov
add
clc
sub
fcoml
push
add
popa
add
sti
pusha
add
loope
inc
clc
pop
cs
xchg
aam
imul
add
call
add
cmp
fdivrs
push
repz
add
bndldx
xabort
add
mov
cmp
mov
clc
pusha
add
xchg
add
add
add
es
fs
xchg
jne
xor
add
cmp
cmpsl
clc
inc
clc
in
jae
add
mov
add
add
test
mov
stc
inc
add
filds
clc
xor
test
inc
clc
repz
clc
lcall
add
je
adc
add
lret
push
push
mov
scas
aad
cmp
ret
clc
movsl
clc
dec
addr16
push
sub
add
fildl
pop
dec
pop
pop
clc
push
mov
add
adc
add
dec
xchg
add
pop
mov
add
imulb
fs
inc
clc
or
add
add
add
out
pop
cmp
cld
push
add
fmuls
jp
lods
dec
jae
add
xchg
rcrl
mov
clc
or
pusha
add
fwait
sub
jge
add
ret
add
je
clc
sbb
mov
mov
jp
jle
test
fxtract
insl
xchg
out
push
cmc
jb
add
das
dec
es
mov
sbb
mov
scas
ret
clc
fs
sbb
jp
inc
clc
mov
or
clc
or
adc
add
add
lret
and
xchg
mov
dec
je
sub
jmp
clc
mov
add
out
cmp
sar
pop
mov
clc
stos
cli
mov
mov
clc
adc
add
add
adc
add
std
sti
xchg
xchg
sbb
add
mov
clc
push
clc
cltd
push
pop
fmul
mov
mov
in
pop
and
add
mov
frstor
clc
push
add
add
add
clc
daa
clc
out
mov
dec
fs
sbb
in
scas
jbe
xchg
push
add
lret
mov
pop
mov
out
jle
jl
jg
and
clc
gs
jb
add
clc
clc
xchg
cld
jno
add
ret
clc
push
mov
add
mov
add
inc
clc
dec
xchg
mov
push
xor
add
icebp
dec
leave
dec
out
insb
add
add
add
add
and
add
sbb
pop
dec
pushf
test
mov
mov
add
mov
test
sub
jmp
roll
add
sar
sahf
loop
cltd
pushf
xlat
jmp
fsubrl
clc
rol
clc
jno
add
pop
in
movsl
clc
repz
ret
clc
rcrl
clc
jne
add
add
outsb
sti
ret
clc
imul
clc
rolb
mov
jbe
clc
dec
into
xchg
add
add
xchg
shrb
clc
cmp
fsubr
cmp
adc
add
jl
gs
xor
add
clc
lea
add
lret
add
jae
add
add
xchg
jnp
add
imul
add
add
clc
pop
into
outsb
add
add
test
fimuls
xabort
and
add
clc
bound
add
xlat
or
clc
jbe
mov
mov
mov
cmp
sbb
stc
ja
data16
sub
add
push
clc
mov
add
imul
mov
scas
icebp
mov
push
add
mov
in
mov
xor
add
sub
clc
xchg
push
fiaddl
sub
mov
loopne
adc
add
clc
scas
jmp
loop
arpl
add
fisttpl
clc
pop
or
add
add
daa
clc
xor
add
add
pop
dec
daa
clc
cmp
clc
cltd
fs
cli
in
xor
add
add
clc
movsb
clc
lahf
iret
pop
aam
add
add
add
dec
out
cld
jg
clc
ss
out
xor
add
clc
repnz
mov
xchg
scas
sar
loope
pushf
into
fwait
mov
clc
mov
cmc
inc
add
fistpll
add
icebp
jno
add
mov
test
pop
dec
loop
pop
clc
adc
add
lods
mov
mov
clc
mull
clc
ret
pop
mov
add
inc
add
jmp
ja
sbb
dec
adc
add
mov
mov
cltd
sar
clc
and
add
adc
pushf
imulb
movsb
clc
mov
clc
jae
add
mov
jnp
add
mov
clc
mov
xor
lods
imul
fsubp
clc
lret
lea
add
add
add
es
adc
rcrl
add
pop
insl
sbb
sub
clc
jge
mov
pop
data16
xchg
fisttpl
add
jae
add
in
add
add
sbb
sahf
mov
stos
cmp
clc
jge
ljmp
clc
push
clc
scas
dec
xor
add
push
jne
std
jae
add
mov
enter
daa
clc
mov
xor
dec
xchg
mov
clc
js
je
pusha
add
jns
push
sar
rcr
outsb
lret
adc
add
add
push
pusha
add
sti
jne
clc
sbb
dec
lock
jbe
clc
ja
cmpsl
clc
pop
cmp
cmp
clc
inc
add
push
cmp
mov
clc
jnp
testl
es
vshufps
cltd
push
and
add
mov
mov
jno
add
add
ror
mov
jle
lods
pop
sub
or
clc
in
xchg
xbegin
aas
mov
fs
mov
add
pop
cmp
ret
cmp
std
sub
adc
add
add
push
inc
clc
inc
clc
push
clc
mov
add
add
cmp
sti
dec
aam
enter
das
mov
sub
clc
jle
clc
cmp
add
inc
add
insb
and
add
add
clc
clc
mov
sub
dec
mov
or
clc
mov
scas
popa
add
add
ja
clc
gs
mov
clc
lods
sahf
xchg
mov
ret
clc
ret
clc
inc
clc
cs
cmp
movsb
clc
mov
push
add
mov
cmp
dec
pop
cwtl
psllq
clc
or
in
jns
mov
xchg
imul
clc
cmpsb
clc
out
jb
add
add
mov
push
add
xchg
repnz
add
sub
mov
mov
js
jo
add
aaa
cs
ss
xchg
outsl
xchg
inc
clc
lock
and
lock
clc
pop
xor
sar
add
mov
add
cs
rclb
add
roll
push
out
jle
jecxz
pop
jmp
sbb
sub
mov
test
addr16
sbb
add
cmp
jmp
dec
fwait
mov
xchg
cld
inc
clc
cmp
mov
add
cmpsb
clc
jns
push
loope
add
xor
std
pop
mov
add
add
or
fwait
pop
aaa
cmp
and
add
add
add
jl
imul
clc
jecxz
cmc
adc
add
clc
xor
add
clc
mov
inc
add
loopne
ds
es
pop
push
add
add
es
mulb
xor
add
add
lods
cmp
ret
pop
in
mov
lret
ret
clc
stos
mov
pop
pop
xbegin
xor
add
add
lock
cmp
iret
fnstenv
clc
xchg
fadds
fcmovnb
clc
ficoms
add
out
add
cmp
clc
cwtl
pop
lea
cmpsl
clc
or
clc
in
mov
and
add
cltd
bound
add
add
xchg
jmp
clc
ffree
clc
and
add
add
mov
adc
jecxz
sar
mov
inc
add
pop
cmpsb
clc
sub
clc
cli
bnd
clc
dec
fwait
mov
or
add
jle
add
pop
clc
mov
mov
dec
mov
ss
clc
adc
add
clc
mov
clc
aas
pop
xor
add
add
mov
sbb
stc
xchg
fstps
sbb
clc
adc
add
xchg
or
mov
stos
mov
adc
add
lods
mov
js
cmp
adc
add
add
jg
jp
clc
push
pop
clc
aaa
pop
xchg
xchg
das
out
mov
inc
clc
shlb
add
mov
movsl
clc
jns
clc
sar
clc
jge
xchg
mov
clc
loope
mov
lods
mov
adc
add
clc
nop
fcmovnb
clc
pop
clc
fnstcw
adc
clc
push
add
dec
and
add
das
jg
cmpsb
clc
fwait
jge
xchg
pop
ds
lret
push
add
inc
add
test
clc
xabort
or
clc
pushf
cmp
add
lods
addr16
mov
jg
pop
and
xchg
hlt
sti
popa
add
push
fdiv
jmp
push
fdivrs
lcall
stos
xchg
or
clc
adc
sbb
clc
loopne
xchg
xabort
sub
add
mov
clc
mov
lcall
clc
adc
add
cmp
clc
test
mov
loop
pushf
jle
clc
xchg
aad
xbegin
add
dec
sub
add
mov
jnp
clc
mov
dec
cmp
clc
cmp
add
mov
clc
mov
clc
pop
inc
clc
or
clc
clc
fidivrs
mov
and
add
lret
imul
and
add
jge
add
cmp
jo
add
add
loope
movsl
clc
push
sbb
pusha
add
cmp
fidivrs
mov
dec
dec
or
push
add
clc
sbb
scas
shr
testl
or
add
dec
and
add
push
pop
clc
lods
sub
clc
pop
clc
loop
dec
cs
mov
pop
cli
jg
mov
cmp
add
mov
xabort
je
clc
outsb
dec
or
clc
int3
fmul
and
add
cmp
loopne
fmul
aas
jb
add
add
lret
aam
add
pop
mov
add
jecxz
cmp
push
add
lods
iret
xchg
inc
add
jae
add
clc
cmp
add
jbe
xchg
mov
jne
cltd
xchg
push
fs
clc
adc
add
add
cmpsb
clc
das
pop
lods
cmp
mov
mul
clc
cmp
dec
cltd
pop
clc
repnz
bound
add
clc
or
xchg
ljmp
int
int
clc
add
inc
clc
inc
add
and
add
jbe
add
and
sar
add
mov
pop
clc
stc
int
clc
mov
add
push
dec
mov
add
fucomip
dec
xchg
daa
clc
adc
in
push
sub
imul
add
inc
add
mov
add
dec
xchg
jb
add
clc
aas
dec
xlat
ret
clc
mov
clc
push
cmpsb
clc
sbb
jmp
clc
xor
pusha
add
popf
jg
clc
add
add
add
and
add
sub
inc
clc
rclb
int
dec
push
clc
jmp
clc
frndint
stos
repz
add
push
clc
push
jmp
add
sbb
shlb
add
imul
and
add
decb
aas
push
clc
fstpt
in
push
test
scas
popl
clc
xchg
fdivs
add
sar
mov
cmpsl
clc
sbb
aad
add
cmpsl
clc
pop
mov
in
mov
cmp
aam
dec
mov
push
add
mov
mov
add
clc
popa
add
testb
sub
push
xor
add
sahf
pop
ds
xor
add
sbb
movsb
clc
pop
sbb
clc
outsb
mov
add
xchg
mov
xabort
jnp
in
dec
mov
and
add
out
loope
jmp
imul
mov
clc
call
and
add
clc
inc
clc
dec
adc
aad
clc
aaa
ret
clc
fcoml
mov
mov
bound
add
sbb
test
mov
add
add
ljmp
cmp
loop
mov
cwtl
mov
xor
add
paddusw
clc
add
inc
add
add
movsb
clc
fisubl
add
jp
jbe
dec
mov
xor
add
lcall
clc
in
je
clc
pop
lahf
adc
aam
pop
cmp
clc
in
xchg
pop
mov
clc
xbegin
jo
add
add
xor
add
inc
clc
mov
loopne
hlt
daa
clc
clc
mov
test
xor
clc
imul
add
or
insb
cmp
add
mov
clc
das
dec
lahf
outsb
std
insb
sbb
add
add
bound
add
push
clc
xchg
mov
popf
inc
add
jb
add
clc
ret
clc
lret
sub
mov
out
cmp
jg
inc
add
outsb
and
add
inc
add
pushf
lock
add
bound
add
sbb
pop
or
popf
in
int3
adc
inc
clc
xchg
das
gs
ljmp
imul
add
es
pop
data16
mov
add
add
test
push
add
jb
add
push
stc
mov
add
or
arpl
add
inc
add
test
rclb
add
pop
sbb
xor
add
add
add
add
add
outsb
jno
add
clc
jle
push
xchg
sub
clc
cmp
xchg
and
add
add
or
imull
ret
clc
sbb
add
inc
clc
in
icebp
adc
push
add
jl
loopne
xbegin
clc
int
add
push
add
outsb
cs
fidivrs
neg
mov
mov
and
add
ficomps
add
sub
mov
adc
add
xor
add
fisttpl
fdivrl
mov
xchg
jno
add
in
filds
add
sahf
loop
in
mov
and
add
sub
xor
add
cmp
xchg
dec
insb
je
inc
clc
icebp
jno
add
shlb
add
xchg
lret
fiaddl
test
xchg
xor
add
loop
xor
push
xbegin
add
cwtl
std
xchg
dec
aam
lret
sub
adc
add
sub
mov
je
clc
push
xchg
and
int3
lock
cmp
jnp
adc
add
sub
repnz
mov
add
xor
add
ja
add
in
arpl
add
clc
int3
jns
clc
ret
clc
iret
sar
fmull
pop
out
adc
add
lea
add
clc
movsl
clc
lods
push
clc
lods
insl
pop
fs
inc
add
dec
fnstenv
lock
add
mov
sbb
xchg
pop
mov
fcomip
jge
mov
cmp
mov
aad
mov
push
std
dec
jle
adc
mov
clc
jecxz
cmc
mov
stc
add
int3
scas
aas
lock
ja
pop
fdivrl
add
cmpsb
clc
call
add
sahf
mov
add
jmp
clc
mov
clc
decb
mov
insl
fs
push
add
outsb
sahf
jl
clc
pop
clc
cmpsl
clc
lret
mov
push
cmp
clc
mov
in
lahf
mov
xchg
sbb
add
clc
out
addr16
notb
add
add
imulb
adc
add
add
add
dec
dec
sar
inc
add
mov
add
inc
clc
pop
push
inc
add
mov
clc
fsubrp
mov
das
add
aad
idivb
clc
cmp
xchg
or
clc
iret
push
add
cs
push
jp
add
or
adc
add
add
repnz
add
fstpl
inc
add
arpl
add
fnstsw
ds
inc
add
adc
clc
sahf
cld
push
mov
push
add
es
pop
clc
gs
jns
add
add
push
add
mov
clc
add
xchg
sbb
dec
lods
and
clc
movsb
clc
pop
pop
cmp
add
add
fimull
and
add
or
or
popf
jp
push
push
add
mov
cmp
clc
cmp
jne
pop
cli
lods
cwtl
sbb
lcall
push
dec
push
add
jmp
clc
ljmp
add
add
rcrl
add
dec
imul
clc
pop
or
jecxz
push
add
outsl
movsl
clc
inc
clc
mov
bound
add
clc
jg
clc
lods
bound
add
add
jbe
dec
xchg
cmp
cmp
loopne
xor
add
das
in
jo
add
clc
lods
jmp
clc
jle
add
pop
cmpsb
clc
or
inc
clc
xchg
fwait
push
movsl
clc
jle
add
imul
pusha
add
ret
clc
mov
cmp
mov
sub
clc
push
clc
in
mov
cmp
push
add
movsb
clc
sbb
int
cmp
fldl
add
lods
mov
add
into
test
xor
add
pop
cmp
clc
or
jnp
out
sub
inc
clc
sbb
out
and
add
add
inc
add
xchg
pop
ljmp
mov
fcom
cmc
jecxz
dec
or
clc
or
cmp
add
pop
xor
add
clc
inc
add
cmp
add
dec
loop
or
cwtl
or
mov
push
adc
add
cltd
lods
je
mov
js
pop
das
jg
loop
mov
clc
dec
pop
sar
clc
cld
pushf
stos
gs
fsts
clc
cmp
ret
mov
bound
add
xchg
sub
add
pop
popa
add
sar
pushf
xabort
or
out
xchg
loope
hlt
sbb
add
cmp
fnstsw
ja
push
add
rorl
xchg
scas
sbb
add
inc
add
stc
lea
ss
add
clc
xabort
push
push
pop
lret
in
push
add
bswap
addr16
outsb
cmp
clc
icebp
dec
out
or
clc
fdiv
shrb
icebp
sbb
add
xor
add
clc
fdivl
add
jmp
cmpsl
clc
adc
add
fildl
stc
mov
cs
clc
sub
jmp
addr16
sar
clc
xor
sub
clc
xor
jns
add
xlat
mov
js
add
jnp
clc
sahf
cmp
clc
std
push
push
add
mov
mov
clc
lret
inc
add
mov
jno
add
sbb
add
jns
clc
pop
cmp
clc
xchg
into
dec
xor
add
inc
clc
mov
xor
clc
dec
aad
mov
roll
add
mov
lret
cli
repnz
mov
push
add
cltd
iret
ja
pusha
add
out
dec
lret
or
clc
push
clc
pop
std
loope
xchg
pop
dec
mov
adc
add
testb
clc
fsubs
leave
leave
out
rcrb
pop
xor
add
jmp
add
or
xor
dec
pusha
add
and
stc
repnz
add
pop
cmp
add
lods
jle
mov
clc
inc
add
int
jo
add
add
ret
mov
mov
sub
call
add
pop
push
pop
xlat
in
gs
out
inc
clc
push
cmp
xor
add
clc
pop
sbb
gs
fidivl
add
jnp
imul
clc
inc
clc
sub
add
inc
clc
xor
add
add
cwtl
loop
sub
xchg
imul
test
popa
add
cmp
gs
sbb
or
mov
or
clc
jg
rcr
push
add
fdivrs
int
mov
aad
lret
push
add
add
add
mov
repz
jecxz
and
gs
pop
cmpsb
clc
xchg
jmp
mov
aaa
and
rsm
adc
add
push
mov
clc
cmp
repnz
add
movsl
clc
push
add
imulb
add
clc
rcrl
cltd
lods
mov
outsl
jnp
xlat
sub
mov
jb
add
add
jno
add
scas
or
sti
mov
jg
imull
mov
and
add
clc
push
dec
xchg
jbe
push
add
cmp
inc
clc
je
clc
aad
or
data16
adc
clc
and
push
add
gs
jno
add
add
sbb
mov
add
add
fisttpll
clc
outsb
clc
into
mov
clc
cmp
clc
cmp
clc
dec
data16
sbb
test
clc
or
bound
add
pop
ror
inc
clc
fucom
clc
hlt
aad
sbb
clc
rorl
clc
into
mov
call
add
xor
add
add
pop
ret
clc
push
add
add
add
adc
mov
pop
clc
and
add
clc
dec
or
add
movsl
clc
jns
mov
js
add
cmp
pop
push
pop
shrl
xor
add
cmp
bound
add
clc
rorb
into
mov
jb
add
add
es
insl
push
jno
add
add
add
mov
add
cld
and
add
clc
std
mov
movsb
clc
dec
icebp
iret
jmp
clc
push
add
mov
add
cmp
add
ljmp
or
shrb
push
add
call
clc
decb
push
imul
ret
push
add
mov
sahf
into
add
or
clc
jnp
enter
add
sbb
mov
mov
clc
jge
add
pop
mov
clc
inc
add
stc
movsl
clc
add
add
inc
clc
call
add
add
in
pop
or
add
fcomp
xchg
pop
insb
sub
clc
jbe
clc
sbb
clc
in
cmpsl
clc
movsb
clc
pop
loop
jne
jmp
dec
xor
add
add
sub
xor
cmp
xchg
mov
clc
scas
jge
dec
push
add
outsl
xchg
int
adc
inc
add
dec
push
add
add
jo
add
testl
clc
add
add
xor
fwait
sahf
int3
mov
mov
add
sti
add
add
clc
push
loopne
fsub
clc
insl
mov
ljmp
clc
or
sbb
into
or
jge
mov
clc
fidivl
add
jge
push
add
not
mov
enter
lret
dec
ljmp
add
ffree
clc
add
add
clc
hlt
ljmp
clc
fcmovne
push
sub
push
jno
add
add
add
dec
test
cmp
ljmp
add
xchg
jp
add
mov
insl
imull
clc
cltd
mov
in
push
sbb
out
cmp
aas
shll
mov
lret
test
push
add
mov
pop
jecxz
fs
iret
jbe
mov
js
add
daa
clc
or
leave
cmp
mov
sub
clc
xchg
xor
cmp
pop
je
inc
clc
xchg
mov
clc
in
jl
or
mov
push
mov
stos
std
cmp
fwait
rcl
inc
add
mov
clc
xor
add
jae
add
icebp
and
daa
clc
xabort
clc
das
jmp
icebp
adc
add
dec
das
inc
add
pop
sbb
bound
add
add
xchg
jle
pop
test
mov
cmpsb
clc
mov
daa
clc
scas
add
add
clc
mov
add
clc
jo
add
jge
adc
add
clc
mov
clc
data16
out
imul
clc
cmp
add
add
push
add
in
cmpsl
clc
adc
add
sbb
inc
add
xchg
push
aad
mov
xchg
lret
push
mov
loopne
das
cmp
xor
pop
sbb
add
test
in
push
inc
add
inc
add
push
fnstcw
mov
lock
and
add
clc
std
out
fldcw
push
stos
out
hlt
xor
add
xbegin
das
sub
pop
je
xchg
xor
mov
sub
fwait
cmp
add
loopne
out
mov
clc
cmp
clc
out
jle
stos
adc
add
add
adc
add
movsl
clc
outsb
jne
pop
repnz
imul
mov
add
out
nop
lods
dec
clc
jbe
mov
jnp
add
gs
jmp
shll
add
test
fcmovu
sbb
mov
add
or
push
jne
enter
clc
arpl
add
sub
pop
adc
cwtl
sbb
add
mov
dec
dec
xor
add
mov
push
mov
insl
sub
add
and
mov
add
test
xchg
dec
scas
iret
hlt
pop
clc
insl
dec
leave
cmp
push
pop
inc
add
imul
or
pop
clc
out
aam
clc
test
out
sbb
not
cmp
add
mov
or
adc
nop
inc
clc
pop
clc
dec
mov
loop
pop
adc
add
test
pop
std
jo
add
add
xchg
and
fdiv
fldt
clc
shlb
jecxz
aam
add
push
mov
add
mov
out
or
clc
mov
cs
xor
add
sar
out
fnstsw
xor
add
bound
add
add
add
add
dec
and
add
clc
inc
clc
adc
add
pop
pop
pop
push
sub
add
dec
jp
mov
mov
mov
sub
sub
add
vmovups
add
cmp
push
add
adc
add
sti
fistpll
dec
push
jae
add
clc
movlps
add
sub
push
jl
clc
cmp
scas
xchg
jnp
fmull
add
add
pusha
add
adc
add
xor
and
add
mov
clc
call
add
jno
add
add
push
ds
mov
add
mov
clc
xabort
in
xabort
ficoms
clc
rorb
clc
mov
mov
mov
clc
jns
lret
add
add
cmp
pop
push
add
cli
in
xor
add
dec
xor
add
clc
movsl
clc
xchg
push
add
sbb
gs
cltd
stc
aas
sahf
es
mov
cs
lea
clc
and
add
and
add
cld
xor
add
add
scas
ss
clc
nop
cmp
movsl
clc
arpl
add
or
jnp
adc
sub
mov
pop
mov
clc
movsb
clc
adc
clc
inc
add
mov
jae
add
pop
clc
movsb
clc
xor
add
clc
xor
add
aas
add
add
call
pop
clc
push
add
mov
mov
clc
enter
xchg
sbb
in
in
je
jns
cmp
clc
fs
cmp
xchg
bswap
add
inc
add
xor
add
add
add
call
add
and
add
add
mov
clc
xchg
mov
lahf
xchg
fucom
clc
mov
clc
mov
xchg
mov
insl
inc
add
fdecstp
jge
ficoms
lcall
popa
add
test
add
mov
add
scas
or
in
addr16
jg
add
outsb
fwait
push
add
ss
pop
sbb
clc
mov
fisubs
push
pop
iret
cmp
daa
clc
loopne
or
inc
add
sub
imul
pusha
add
dec
xchg
lods
cs
add
pop
lock
leave
repnz
decb
clc
cmp
and
add
clc
pop
into
pop
xor
add
pop
adc
xbegin
mov
clc
dec
je
jns
mov
clc
push
add
dec
sub
mov
clc
lret
add
adc
add
add
inc
add
dec
xchg
scas
lret
jbe
add
add
clc
or
pop
imul
jb
add
inc
add
push
add
mov
out
cmpsb
clc
sub
add
outsl
sar
arpl
add
add
xbegin
clc
insl
jge
clc
cmpsb
clc
sar
cmp
or
clc
lret
push
add
add
xchg
push
add
jmp
clc
mov
add
negb
add
mov
add
add
sbb
push
bound
add
clc
sti
xchg
sbb
clc
in
push
add
in
cmp
mov
push
leave
xchg
or
add
mov
dec
jp
pushf
adc
add
jns
add
jmp
add
clc
mov
and
add
inc
clc
mov
or
add
push
clc
adc
clc
mov
clc
into
and
add
sub
add
xchg
mov
xlat
std
in
call
mov
sbb
shll
clc
in
ljmp
add
or
cs
sti
sub
cmp
cmp
xabort
add
or
outsl
push
fisubs
add
push
inc
add
fcomps
mull
dec
sbb
clc
jo
add
mov
in
and
mov
add
jle
clc
jmp
ret
je
clc
lahf
jp
pop
loop
mov
fdiv
out
fistpl
imul
add
clc
jmp
shl
mov
inc
add
pusha
add
pop
cwtl
rcr
clc
out
scas
test
shlb
and
add
es
adc
add
clc
pop
stos
sbb
or
add
sahf
sahf
daa
clc
jp
jno
add
fisttpll
xchg
push
add
stos
jmp
in
pop
scas
es
es
imul
ja
add
imul
add
add
stc
pop
push
or
add
add
out
and
add
jns
das
mov
add
sub
xchg
mov
sar
clc
inc
add
sti
mov
cmp
clc
dec
mov
mov
negl
add
out
push
push
clc
adc
clc
sbb
ss
or
outsb
cmp
xor
add
clc
add
add
imul
outsl
leave
inc
add
inc
add
insb
in
push
add
sar
push
add
out
lods
cwtl
in
cwtl
sahf
add
add
clc
mov
jle
add
movsl
clc
jecxz
repz
cmpsb
clc
adc
add
xchg
in
idiv
push
add
add
mov
mov
add
clc
mov
clc
add
fsubrl
clc
xchg
pop
enter
lock
cli
pusha
add
cmp
add
mov
mov
clc
mov
mov
insl
out
add
add
mov
mov
push
dec
sti
add
add
clc
add
push
add
jne
ja
clc
fisubs
add
or
imul
add
clc
fcomps
pop
shlb
add
stos
xor
add
loopne
jb
add
sub
cmp
push
pop
clc
mov
sbb
ficoms
or
inc
add
mov
repnz
clc
jne
cltd
add
add
add
push
add
add
mov
clc
inc
clc
arpl
add
stc
popa
add
push
add
cwtl
aad
push
add
xor
add
clc
inc
clc
mov
loop
inc
add
pusha
add
sub
mov
icebp
fnstsw
clc
xor
add
pop
inc
add
into
shrl
sahf
loope
or
clc
in
scas
cmpsl
clc
push
add
mov
mov
clc
jmp
or
clc
or
inc
clc
cmpsb
clc
shrl
inc
add
std
adc
add
push
outsb
add
add
or
clc
mov
sahf
sub
sbb
add
call
clc
mov
xor
add
clc
inc
clc
or
add
into
dec
mov
add
cli
add
psllq
sti
daa
clc
mov
pop
in
jp
clc
xor
clc
cmp
fimull
dec
inc
clc
iret
call
or
scas
and
add
out
push
rolb
mov
sub
add
ds
add
clc
mov
cwtl
cmp
push
xor
add
mov
clc
aas
add
mov
xor
add
in
mov
sub
xor
add
cmp
in
xor
add
cmp
jle
clc
jmp
add
push
add
add
inc
add
add
dec
pop
push
ljmp
clc
sub
dec
mov
xchg
sbb
aaa
dec
and
add
icebp
and
sbb
cmp
test
test
inc
add
xor
or
mov
clc
jg
sarl
repz
in
xbegin
add
jl
movsb
clc
sar
mov
add
mov
jecxz
imul
clc
xchg
mov
outsb
es
clc
xchg
xbegin
add
leave
out
aad
pop
inc
clc
loop
out
push
fwait
push
pop
sbb
out
sub
inc
clc
insl
xbegin
add
add
xchg
dec
out
in
xchg
cmp
add
cli
xchg
mov
gs
fcoms
je
add
add
add
sub
add
add
add
sti
cmp
cmp
add
xchg
push
clc
pop
sbb
lock
sbb
mov
fwait
inc
clc
push
xchg
jne
cmc
push
loop
cmp
aas
lret
jnp
clc
fistl
dec
jmp
clc
pop
add
add
mov
pusha
add
inc
add
mov
xabort
inc
clc
clc
inc
clc
xabort
cwtl
sbb
pop
dec
push
add
fisttpll
adc
rorl
push
clc
sub
clc
mov
clc
cmp
clc
push
add
outsb
or
add
add
xchg
ss
mov
add
cs
jge
clc
and
add
xbegin
repz
add
add
or
fcom
add
in
cmpsl
clc
inc
add
in
pop
clc
dec
and
notb
add
mov
adc
add
pusha
add
shl
aad
push
in
adc
xor
add
clc
imul
imul
clc
test
push
mov
movsb
clc
fmul
add
add
iret
jmp
clc
push
mov
dec
notb
cmp
and
add
dec
ss
hlt
int3
and
add
mov
clc
mov
add
clc
cmp
add
mov
clc
outsb
aad
rcrl
add
test
sbb
stos
jmp
mov
push
pop
sbb
idivb
add
sti
xabort
cmpsb
clc
inc
clc
mov
add
add
fnstcw
lock
aaa
faddl
popa
add
and
add
ficoms
dec
ja
sbb
or
clc
repz
fwait
jl
clc
rol
clc
mov
ds
add
cmp
clc
adc
push
push
jae
add
prefetch
or
loope
pop
pop
clc
sbb
loop
popa
add
hlt
pop
jmp
mov
inc
clc
scas
repz
fisubl
add
jmp
in
ret
clc
test
lret
mov
clc
aaa
pop
adc
add
adc
add
add
ss
into
adc
add
add
repnz
inc
clc
inc
add
ret
clc
test
cmp
push
clc
roll
cmpsb
clc
cmp
and
add
push
pop
mov
pop
lock
lods
clc
dec
push
jmp
adc
add
clc
mov
dec
ss
ret
daa
clc
pop
clc
mov
mov
and
add
mov
add
clc
add
add
ret
sahf
sar
fidivl
add
push
clc
out
outsl
sti
fs
sahf
dec
pop
mov
clc
push
add
aam
scas
pop
push
aad
int3
sub
push
add
es
pop
pop
xchg
and
add
clc
cmp
out
ficompl
out
mov
or
clc
aad
xor
add
jmp
scas
xor
add
cmp
cmp
clc
arpl
add
pop
cmp
mov
jae
add
call
shr
cmp
jno
add
xbegin
clc
cmp
add
jg
add
ss
clc
cltd
jae
add
add
movsb
clc
iret
lahf
dec
gs
sbb
add
pop
xchg
or
arpl
add
insb
push
clc
jno
add
jg
add
add
mov
xchg
xchg
aaa
sar
sbb
xlat
inc
clc
cld
imul
clc
inc
clc
sahf
dec
and
mov
mov
clc
mov
add
dec
shll
add
das
adc
add
and
add
xchg
in
cmp
fwait
repnz
aam
je
icebp
leave
add
adc
add
inc
clc
cmp
add
add
int3
in
hlt
push
outsl
test
and
add
and
add
cmp
add
push
clc
fs
leave
out
xor
add
add
pop
pop
out
data16
pushf
sub
add
bound
add
mov
mov
inc
add
cmp
nop
icebp
cmp
nop
cs
lock
sbb
in
icebp
test
bound
add
add
imul
inc
clc
mov
clc
xchg
sub
clc
mov
push
add
out
in
xchg
sbb
pop
xor
add
pop
imul
clc
pop
lahf
and
cli
cmc
enter
out
aam
mov
or
inc
clc
es
sbb
pop
aad
clc
and
add
clc
movsb
clc
pop
dec
js
int
push
add
icebp
inc
clc
arpl
add
aad
push
xor
add
clc
sub
xor
add
mov
lret
and
add
enter
data16
aas
adc
adc
add
add
jl
push
clc
frstor
add
loope
mov
add
stos
imul
in
lret
xchg
mov
dec
mov
xor
add
mov
fnstcw
add
cli
cmp
rcrb
add
mov
add
fucom
clc
mov
clc
sar
lret
clc
adc
add
clc
es
dec
lea
sbb
fsubs
cmp
add
push
in
out
lret
or
aas
xchg
mov
mov
mov
idivb
push
lock
out
fists
movsl
clc
jbe
fistpl
add
xchg
icebp
leave
leave
cmp
in
inc
clc
push
inc
clc
and
add
call
cmp
insb
out
enter
clc
loope
xor
add
clc
cmp
add
pop
loopne
rorb
push
out
sar
pop
mov
inc
clc
stos
xor
pop
test
fyl2xp1
stos
aas
rolb
test
repz
insl
mov
clc
sahf
inc
clc
jle
clc
xor
add
mov
aam
pop
clc
cmpsb
clc
jl
add
push
or
add
hlt
orps
dec
dec
sti
lock
jmp
clc
pop
aas
loopne
ret
clc
daa
clc
ficomps
jge
sbb
add
xchg
dec
cmp
push
mov
add
dec
stos
cmp
insl
push
add
fdivrs
ds
push
add
inc
add
arpl
add
xor
add
outsb
xor
add
clc
cld
arpl
add
xor
add
add
add
xor
add
cltd
pop
arpl
add
mov
leave
sub
mov
add
not
sbb
xchg
nop
std
sbb
ds
add
mov
add
mov
add
aam
add
and
cmp
xor
add
add
adc
add
clc
jmp
pop
in
out
pop
cmc
loopne,pn
sbb
push
aas
lods
out
jp
jae
add
clc
fcomps
out
stos
xchg
imul
imul
sar
int3
loopne,pn
or
clc
sub
add
clc
js
addr16
test
cwtl
jp
bound
add
dec
ljmp
lret
mov
int
sar
mov
aaa
xchg
mov
jge,pn
mov
add
push
pop
fadds
push
add
inc
add
add
add
mov
xchg
inc
add
popa
add
mov
add
jge
insl
test
dec
and
xchg
mov
stos
cmp
clc
fsubrs
sub
fsubl
pop
jne
or
clc
mov
sbb
movsb
clc
sub
add
aas
divl
add
fstl
clc
aad
sub
add
cli
mov
add
add
inc
clc
cmp
add
xor
add
clc
mov
add
pushf
in
test
mov
pushf
xchg
mov
push
clc
xor
add
xchg
lea
add
sub
add
sbb
add
in
and
add
pop
mov
mov
cwtl
xchg
outsb
dec
sub
clc
out
mov
add
es
es
fbld
add
add
dec
lea
fbld
clc
stos
push
add
ret
sbb
cmp
xor
outsb
sub
xbegin
add
add
out
push
call
xchg
test
clc
scas
mov
sub
push
cmp
add
cs
add
enter
out
pop
dec
out
sub
cmp
pop
cld
negl
pop
jg
clc
mov
ficoml
sbb
xchg
cmc
fcomps
xor
add
xbegin
out
jns
add
cmp
and
add
clc
push
jno
add
and
add
out
scas
push
or
mov
clc
add
add
adc
add
xbegin
mov
add
pop
sbb
clc
cmc
inc
add
mov
clc
add
jmp
push
xor
add
mull
adc
add
clc
cwtl
into
shll
clc
popf
bound
add
jne
push
into
adc
loop
lock
add
xchg
mov
xchg
jge
cmp
jo
add
push
imul
ds
clc
mov
clc
hlt
inc
add
add
add
add
nop
outsb
sub
clc
fmuls
aad
clc
stos
cli
pop
inc
clc
sbb
shl
rolb
xor
add
nop
es
clc
pop
pop
push
clc
push
add
add
add
popa
add
int3
lahf
or
popf
mov
add
fdivs
popa
add
pop
ret
clc
xchg
pushf
movsl
clc
pop
test
sti
jno
add
clc
push
xabort
lahf
dec
mov
add
ficompl
fbstp
add
pop
dec
int
add
add
scas
test
dec
mov
sar
cmp
neg
adc
add
into
and
add
clc
mov
out
mov
pop
cs
clc
add
add
mov
aad
clc
ljmp
mov
add
push
xor
add
nop
mov
add
fwait
pushf
push
add
cld
mov
adc
int3
ds
in
sub
mov
clc
loopne
and
repz
push
pop
gs
push
clc
cmp
mov
cmp
out
xchg
add
add
xchg
cmpsl
clc
xor
add
scas
mov
sete
clc
lret
ficoml
movd
mov
cmpsb
clc
cli
clc
and
add
add
testb
cltd
cmp
inc
clc
xchg
xchg
mov
pop
adc
clc
xchg
test
or
clc
es
and
add
add
clc
fldt
xchg
sar
push
sbb
cmpsl
clc
pop
jb
add
movsl
clc
and
add
add
push
add
jno
add
cwtl
mov
cmc
mov
aam
add
mov
add
add
add
lods
pop
cmpsl
clc
icebp
gs
hlt
xchg
xchg
sub
clc
sub
clc
jnp,pn
cmp
xchg
or
inc
add
clc
data16
cs
loopne
push
sbb
add
aam
pop
lret
clc
pop
das
xor
sarl
add
push
xchg
ljmp
fmuls
loop
scas
cmp
xchg
ret
clc
aaa
mov
adc
add
lcall
add
xchg
and
add
fs
jl
lods
jae
add
lods
mov
add
pop
clc
cmp
inc
add
inc
add
push
xchg
push
sahf
stc
xor
clc
dec
lret
ljmp
fistl
clc
xbegin
sub
add
cmp
clc
inc
clc
bound
add
jg
dec
cmp
clc
xchg
xchg
aad
data16
jle
ret
clc
je
sub
push
adc
add
cmp
das
adc
add
add
add
fs
or
clc
sub
add
lret
faddp
clc
pop
jo
add
clc
daa
clc
cmp
push
add
or
imul
add
bound
add
lods
add
add
int3
pop
sub
clc
lahf
mov
inc
add
ss
cmc
ljmp
add
pop
addr16
enter
mov
adc
add
jns
xchg
mov
cmp
or
add
add
clc
loope
cmp
clc
jne
jnp
add
in
and
test
push
clc
cmpsl
clc
mov
pop
clc
mov
xabort
cmpsb
clc
dec
adc
add
sahf
jle
xor
add
cli
sbb
jge
adc
add
imul
outsb
shll
add
pop
xor
add
stos
adc
add
add
adc
cmp
and
popa
add
insb
dec
out
ret
adc
add
push
inc
add
pop
iret
pop
adc
add
shrl
xchg
mov
or
add
cmp
cmpsb
clc
pusha
add
cmp
add
ret
rdmsr
add
nop
test
cwtl
in
adc
lods
mov
clc
outsl
js
mov
mov
add
clc
push
clc
mov
inc
clc
jns
pop
push
clc
or
add
mov
pop
in
in
adc
out
push
ljmp
add
add
add
test
jnp
clc
pop
mov
xchg
jg
add
mov
dec
popf
aam
push
xor
add
add
call
clc
or
nopl
jne
push
mov
adc
add
pusha
add
dec
jp
insl
pop
xabort
adc
pop
clc
ja
and
popa
add
sbb
jb
add
dec
dec
xor
stc
stos
leave
sbb
clc
sub
mov
mov
xchg
ss
and
in
bound
add
pop
jno
add
add
and
add
push
out
lret
leave
sbb
pop
adc
add
roll
adc
add
test
clc
cmc
out
iret
xor
add
and
add
clc
scas
add
add
icebp
outsb
or
clc
popf
lret
add
mov
insb
decb
inc
clc
or
add
push
or
add
add
add
js
add
pusha
add
je
adc
add
insl
or
jle
stos
pop
clc
jecxz
jo
add
mov
add
xchg
mov
add
add
jb
add
clc
insb
dec
xor
adc
add
xchg
or
insb
inc
clc
pop
test
bound
add
add
es
icebp
jecxz
data16
push
xor
add
cmp
jg
fsts
add
jecxz
push
lods
add
cmp
adc
clc
pusha
add
stos
add
and
add
push
dec
dec
leave
xchg
inc
add
sbb
test
sub
push
clc
nop
enter
xor
add
inc
clc
mov
xchg
cld
sbb
dec
jne
mov
mov
test
stos
xor
outsl
mov
clc
repz
add
mov
add
mov
mov
xchg
xor
add
xbegin
lods
or
int3
mov
xchg
push
add
scas
pop
or
clc
das
xor
add
mov
sub
dec
push
pushf
dec
in
jge
add
lods
insb
mov
add
int
clc
fs
adc
lock
icebp
jle
hlt
mov
clc
sar
cmp
mov
mov
cmp
clc
inc
clc
xchg
push
add
xlat
shll
add
cmp
clc
ret
clc
adc
add
scas
inc
add
push
aas
mov
and
add
test
pop
addr16
icebp
push
add
roll
adc
test
adc
clc
mov
mov
and
pop
xchg
ds
clc
cmpsb
clc
pop
dec
rcrb
add
cli
outsl
call
add
daa
clc
imul
jl
sti
or
add
lcall
test
xchg
sub
in
mov
adc
add
hlt
gs
cltd
sbb
sarl
add
jp
clc
xchg
cmp
inc
add
inc
clc
adc
add
clc
aas
inc
add
cmp
enter
add
pushl
and
test
enter
inc
add
inc
clc
push
add
ljmp
pop
pop
imul
add
clc
jl
clc
lea
clc
cli
fs
mov
sub
add
ds
mov
sar
clc
pop
in
movsb
clc
cmp
add
add
cmpsb
clc
into
repz
outsl
and
add
xor
add
stos
push
js
cld
scas
pop
mulb
enter
add
js
lret
ret
clc
out
jnp
int
and
push
add
sbb
cld
ljmp
xor
add
add
cmc
sbb
add
add
movsl
clc
das
cmp
jno
add
add
jne
clc
mov
enter
fisttpl
add
add
pop
mov
add
mov
clc
sti
es
stos
js
cmp
push
pusha
add
sub
pop
scas
or
arpl
add
jo
add
add
aam
stos
sar
mov
push
clc
jae
add
add
add
xchg
jnp
add
jle
clc
pop
test
clc
cld
cmp
clc
push
add
mov
sub
xor
xchg
and
add
fmuls
in
cmp
clc
loop
mov
add
cmp
xabort
inc
clc
sub
adc
add
outsb
lods
inc
add
fisubrl
clc
mov
repz
clc
repz
add
cmp
cmp
push
hlt
pop
pop
test
cmp
and
add
flds
inc
clc
dec
call
cmp
cmp
add
and
add
add
inc
clc
or
cld
inc
clc
and
add
add
add
add
clc
shrb
fcmovnu
iret
out
ja
mov
fistpl
add
data16
lock
add
aad
clc
xor
add
out
cmp
mov
sbb
and
add
mov
dec
fmul
inc
clc
sbb
loop
mov
cs
add
pop
cmp
add
sbb
add
push
inc
clc
sub
lret
add
add
negb
clc
or
clc
lods
and
add
clc
and
add
push
inc
clc
jnp
and
rcr
leave
xor
add
add
push
and
lea
xchg
jmp
push
add
mov
pop
scas
fistpll
enter
clc
test
lcall
add
ficompl
outsb
xabort
clc
rcll
add
stos
test
cmp
leave
popf
add
add
add
add
mov
aad
or
dec
lret
pop
clc
cmp
pop
sub
jle
push
lea
jnp
cmp
mov
in
dec
lret
aad
shlb
clc
cmp
loop
push
add
lahf
pop
cld
test
cmp
add
xbegin
insb
hlt
aam
add
cli
lods
jg
mov
clc
cmp
add
mov
pop
std
and
clc
aaa
gs
stc
daa
clc
mov
clc
cmp
outsl
sub
lods
push
clc
pop
cld
clc
inc
add
cmp
clc
cmpsb
clc
jge
mov
imul
out
clc
xchg
imul
cmp
xchg
pop
clc
popf
cmp
clc
sarb
cmp
mov
clc
idivb
jmp
and
add
xchg
xchg
sti
mov
mov
add
inc
clc
testl
out
xor
xor
in
popa
add
int3
or
push
jo
add
sub
push
add
sbb
ret
clc
xor
add
add
ds
mov
ss
xchg
xor
add
fisubrl
pop
jp
lock
add
add
adc
add
cli
fs
hlt
sub
xchg
xor
clc
jno
add
add
cld
and
add
movsb
clc
lock
fs
add
add
loop
xor
add
lods
dec
push
xor
add
insb
cmp
mov
daa
clc
sbb
clc
mov
fcmovne
sbb
add
int
cmp
xchg
push
add
outsl
jbe
lea
xbegin
or
add
repnz
sbb
add
rcll
add
add
clc
in
push
mov
add
inc
clc
adc
sbb
clc
fnstenv
icebp
pop
and
add
add
clc
seta
push
add
mov
cmp
out
notl
add
test
out
addr16
pop
pusha
add
mov
pop
scas
mov
cmp
clc
push
mov
out
hlt
jb
add
or
hlt
xor
add
xor
add
outsl
pop
jne
sbb
test
imul
add
scas
mov
inc
clc
mov
clc
inc
add
push
sarb
into
fnstsw
add
sarl
or
not
popf
mov
lea
add
jecxz
push
fiaddl
clc
sbb
clc
push
jnp
clc
dec
mov
mov
leave
mov
mov
push
add
push
decl
das
imul
pop
fdivl
fistpll
imul
clc
xlat
mov
sub
add
mov
mov
pop
or
xchg
mov
sbb
xlat
pop
int
xchg
cmp
add
push
add
or
add
iret
push
push
xor
add
clc
sbb
fisttpll
adc
add
sar
shlb
add
and
add
dec
mov
inc
clc
leave
and
add
cmpsl
clc
mov
clc
push
jle
cmp
clc
mov
pop
outsl
das
lock
cmc
xbegin
pop
aad
mov
add
push
jae
add
in
aaa
nop
popa
add
test
clc
jmp
clc
stos
add
add
xor
add
out
sarl
pop
inc
add
int3
loop
aaa
lea
add
add
aas
pop
and
pushl
add
mov
sub
cld
sub
add
loopne
jb
add
das
popa
add
xabort
lahf
push
clc
fwait
push
add
out
mov
dec
aam
mov
mov
pop
movsbl
lods
mov
push
xor
sbb
in
push
stc
aad
mov
pop
faddl
add
aad
clc
pop
loopne
lods
add
add
add
add
add
add
push
test
sarl
sbb
clc
push
scas
inc
add
xor
add
add
cmp
ljmp
movsl
clc
jle
mov
mov
clc
or
jge
sbb
std
and
pop
iret
arpl
add
add
filds
clc
insl
arpl
add
clc
pop
test
out
sub
divl
add
xor
clc
std
decl
insb
mov
clc
mov
clc
add
mov
push
xlat
ds
add
inc
add
pop
pop
xchg
and
cmp
clc
lods
mov
idiv
pop
cmp
add
sub
mov
clc
jae
add
pop
popf
sbb
push
inc
clc
in
in
out
stos
xor
add
adc
add
xchg
addr16
and
jo
add
add
ss
clc
jae
add
movsl
clc
lret
lea
daa
clc
int
outsl
ret
clc
iret
mov
data16
rolb
add
clc
adc
add
fwait
std
or
sar
add
add
clc
cs
inc
add
mov
add
cmp
inc
add
je
inc
add
call
add
sub
clc
test
cmp
popa
add
pushf
cmp
clc
sahf
insb
cmc
xchg
adc
addr16
sub
mov
add
movsb
clc
adc
add
mul
clc
xor
add
into
mov
loopne
cmp
pop
cmp
cmp
xchg
or
in
xchg
fcoml
add
out
mov
mov
cs
fisubrl
clc
xlat
insb
test
clc
mov
push
sbb
mov
clc
mov
sbb
add
jl
clc
inc
add
jle
clc
in
insb
vmovaps
es
cmp
add
bound
add
add
add
xabort
sbb
add
hlt
xchg
addr16
stos
xlat
inc
add
cmp
add
clc
neg
int3
outsb
xchg
dec
call
mov
leave
es
xchg
test
pop
add
add
xor
push
cli
mov
fwait
jbe
xor
lea
add
xor
add
clc
dec
dec
push
push
cmp
clc
shrb
clc
int3
push
add
repz
xchg
sub
jge
clc
push
sub
add
filds
add
mov
xchg
or
repz
add
lock
imul
add
pop
vucomiss
lock
repnz
add
ja
div
bound
add
dec
sub
xlat
sbb
sub
ja
arpl
add
clc
mov
clc
aad
add
cmp
add
std
jae
add
inc
add
dec
cmpsl
clc
pop
ja
test
cmp
add
inc
clc
icebp
cmpsl
clc
stos
xor
jmp
add
pop
pushf
jo
add
clc
add
add
mov
add
inc
clc
nop
mov
js
inc
clc
inc
clc
mov
cmp
dec
add
add
add
mov
add
mov
outsl
dec
xlat
jecxz
adc
clc
pop
pop
xabort
ror
std
cmp
in
test
fstp
lea
add
mov
fidivs
add
clc
adc
add
shrd
xabort
gs
std
sub
dec
xchg
enter
dec
in
xor
add
fisttpl
mov
jnp
add
or
add
loopne
pushf
jge
test
xor
clc
dec
xchg
movsb
clc
lret
pop
jbe
add
jle
cmp
inc
add
pop
fwait
mov
pop
mov
or
push
sub
outsb
xchg
xor
add
clc
seto
ret
clc
out
xchg
push
dec
je
mov
std
push
add
push
jp
mov
clc
dec
aaa
pushf
lods
pop
addr16
xchg
imul
ss
pop
cmp
add
jnp
mov
add
add
push
lcall
clc
push
in
mov
divb
sbb
add
jg
clc
xor
add
add
push
and
aaa
xor
add
push
clc
pop
and
add
sar
or
jae
add
stos
repnz
sti
cmpsb
clc
xor
add
add
clc
pop
ret
clc
jmp
clc
addr16
imul
lret
data16
pusha
add
fidivrl
mov
clc
mov
clc
jg
je
add
inc
clc
push
aas
mov
nop
or
xabort
jnp
pop
and
add
popa
add
outsl
mov
add
mov
rorl
lret
clc
js
sub
rorl
cmp
clc
aas
push
dec
fs
cld
fisubrl
mov
mov
add
negb
pop
clc
xchg
dec
mov
add
clc
xchg
push
add
movsl
clc
sub
and
add
sub
add
pop
jg
lcall
imul
add
cmovo
add
out
frstor
sar
clc
aad
jmp
clc
movsl
clc
wbinvd
fstpl
adc
add
clc
inc
add
call
add
in
jp
cld
std
mov
adc
clc
insl
mov
mov
xor
add
lea
ret
clc
inc
add
push
add
pop
dec
rorb
xor
add
add
in
jnp
adc
and
add
add
add
add
cli
daa
clc
addr16
scas
mov
dec
or
add
mov
sbb
ret
clc
cmp
pop
cs
pop
sbb
clc
mov
clc
mov
sub
cmpsl
clc
pop
nop
cmp
add
inc
add
inc
add
lock
xor
add
or
fwait
xor
cmp
pop
cltd
sar
add
scas
scas
arpl
add
mov
ds
clc
jmp
add
enter
jle
xchg
fldenv
adc
add
xchg
aad
add
leave
lock
add
fwait
xchg
and
aaa
rep
sbb
mov
and
jo
add
inc
clc
xchg
cmp
add
je
clc
mov
xabort
movsb
clc
jg
add
loop
je
clc
imul
or
mov
leave
cmp
xchg
imul
sbb
repnz
clc
clc
lock
add
add
pop
lret
jne
addr16
cmc
dec
cs
cld
sti
in
cmp
clc
cmp
clc
jmp
clc
cmp
cmp
add
add
pop
repz
sub
add
add
push
cmp
clc
push
cmpsb
clc
out
daa
clc
or
mov
mov
add
add
test
xor
add
cmc
xor
add
cwtl
adc
add
sub
jbe
clc
sahf
and
pop
clc
movsl
clc
pop
lahf
inc
clc
mov
arpl
add
shlb
dec
clc
or
shlb
cmp
fdivrs
lods
add
sahf
fidivl
cmpsl
clc
cmc
push
push
add
arpl
add
stos
mov
or
lods
mov
cmp
rcrl
add
or
enter
push
mov
in
mov
cmpsl
clc
js
jp
add
add
xor
add
clc
push
add
or
and
add
add
jae
add
push
jge
pop
xor
add
mov
clc
add
add
adc
add
clc
inc
add
xchg
mov
insl
pop
sub
mov
sar
cmp
xbegin
add
mov
pop
loop
cmp
jae
add
pusha
add
push
mov
insl
ss
clc
add
xchg
cmp
out
push
add
repnz
mov
in
lods
test
popf
loope
je
popf
insl
and
clc
inc
clc
mov
adc
add
clc
cld
jecxz
push
add
jecxz
cmp
add
inc
add
mov
mov
insl
xor
add
fmull
rorb
adc
cmp
inc
add
sub
cmp
clc
or
clc
xabort
ljmp
add
push
mov
add
mov
add
xchg
and
jne
mov
clc
add
add
add
add
lahf
popa
add
push
sti
clc
push
and
insb
xchg
adc
add
loop
in
sub
mov
out
loopne
fwait
insb
fwait
addr16
fbstp
add
je
imul
inc
add
jmp
clc
jno
add
clc
out
cld
ss
push
add
fwait
pop
idivb
dec
ds
sbb
clc
sbb
cmp
add
clc
test
sar
leave
sbb
icebp
scas
cmp
sbb
and
fsubrs
add
add
aad
sub
pop
inc
clc
scas
cltd
push
shlb
add
add
jmp
push
pop
sbb
daa
clc
sub
clc
out
sub
imul
pushf
sbb
add
test
clc
mov
clc
call
es
mov
xbegin
xor
add
loope
jmp
mov
mov
add
arpl
add
add
adc
add
push
push
mov
mov
add
add
jb
add
add
push
add
jno
add
sbb
clc
sbb
add
clc
mov
js
iret
test
mov
add
add
pushf
jbe
clc
arpl
add
fucomip
sbb
mov
add
dec
pop
clc
xbegin
push
aad
add
or
add
jne
clc
mov
clc
add
pop
clc
mov
add
jg
clc
data16
dec
fwait
jge
add
pusha
add
mov
add
clc
leave
unpckhps
pushf
jg
add
add
add
mov
out
inc
add
lods
lock
in
lea
add
inc
add
cmp
add
add
add
lods
xchg
pushf
mov
push
mulb
xor
add
mov
lods
mov
leave
mov
sub
add
icebp
mov
mov
clc
fildl
jle
adc
mov
and
cmpsb
clc
jns
add
ds
jnp
clc
loopne
pop
push
add
adc
add
lahf
and
add
push
inc
add
mov
js
mov
sub
add
fwait
inc
clc
mov
add
add
cmp
add
jno
add
mov
add
xchg
lret
scas
testb
pop
scas
shll
clc
sbb
xabort
jne
es
sbb
add
add
clc
insl
jnp
adc
xor
add
clc
sbb
add
jecxz
xlat
pop
inc
clc
cmp
clc
enter
add
out
stos
and
enter
xchg
jbe
add
or
insb
pop
es
mov
out
dec
cltd
leave
xchg
lret
sbb
adc
add
cmp
aad
test
add
push
push
pushf
hlt
cmp
faddp
clc
arpl
add
es
scas
mov
add
push
inc
clc
push
clc
cmp
jns
clc
cmp
clc
pop
