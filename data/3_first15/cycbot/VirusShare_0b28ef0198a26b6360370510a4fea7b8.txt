fiaddl
mov
cmpsl
test
leave
xchg
dec
test
fildl
stos
dec
test
push
test
rolb
jbe
call
test
and
jbe
hlt
test
lret
test
dec
test
xchg
test
and
jbe
xchg
test
add
jbe
mov
jbe
sbb
jbe
test
movb
add
test
jecxz
jbe
jno
jbe
add
jbe
roll
jbe
dec
test
mov
jbe
in
test
xor
xchg
call
test
addl
add
add
and
into
jbe
adc
jbe
daa
iret
jbe
mov
jbe
fxch
jbe
outsb
aam
repz
jbe
add
jbe
dec
jbe
stos
into
jbe
jbe
stc
into
jbe
imul
jo
shlb
pushf
into
jbe
mov
jbe
js
iret
jbe
cli
into
jbe
loope
jbe
fcom
jbe
into
jbe
mov
into
jbe
ror
adc
fdivs
into
jbe
call
into
jbe
push
jbe
push
iret
jbe
ror
jbe
add
jbe
imul
fmull
iret
jbe
adc
jbe
out
into
jbe
fcmove
jbe
inc
shlb
mov
jbe
inc
iret
jbe
cmp
jbe
inc
shlb
popa
shll
stos
into
jbe
cwtl
iret
jbe
repz
jbe
ss
jbe
xor
jbe
movsb
into
jbe
mov
jbe
jmp
shlb
cmp
iret
jbe
dec
iret
jbe
ror
jbe
xchg
shll
mov
jbe
mov
jbe
into
jbe
cmpsl
into
jbe
mov
jbe
shlb
or
shlb
cmc
into
jbe
test
fdivs
add
jbe
out
jbe
ror
jbe
test
clc
aam
jbe
cli
shlb
test
jbe
sti
into
jbe
sbb
jbe
lret
leave
mov
jbe
adc
jbe
mov
jbe
ror
jbe
add
into
jbe
add
add
out
fnsave
sbb
jbe
mov
jbe
cmpsl
fdivl
fcmovnu
jbe
mov
jbe
sub
jbe
rcr
jbe
fnsave
inc
fnsave
cmp
fnsave
cmp
jbe
icebp
fnsave
push
fidivs
xchg
fnsave
or
fidivs
int3
fnsave
out
fnsave
sub
jbe
jbe
aas
fnsave
test
fidivs
repnz
stc
in
jbe
fnsave
xor
jbe
repnz
in
jbe
cmc
fnsave
and
jbe
popa
in
jbe
lock
sub
jbe
push
fidivs
sbb
jbe
repnz
sub
jbe
adc
jbe
rcr
iret
sub
jbe
das
fbstp
int3
fnsave
pop
fnsave
out
fnsave
xor
jbe
icebp
fnsave
add
fidivs
aad
jbe
sbb
jbe
or
fnsave
adc
jbe
xor
jbe
fnsave
push
fidivs
icebp
fnsave
adc
jbe
fcmovnu
jbe
loope
jbe
xor
jbe
repnz
mov
jbe
adc
jbe
or
fdivl
icebp
fnsave
mov
jbe
xor
add
lcall
jne
adc
nop
xchg
dec
jne
push
push
jne
adc
xchg
jne
arpl
mov
push
jne
jecxz
jne
mov
push
jne
rorb
xchg
jnp
jne
cmp
jne
sub
push
push
push
jne
adcl
dec
push
jne
mov
imul
jne
jecxz
jne
insl
dec
jne
rorl
das
and
ja
push
jne
arpl
mov
push
jne
jecxz
jne
push
push
jne
push
dec
jne
orl
rorl
aam
jne
es
jne
sub
sub
push
jne
arpl
cmc
inc
push
jne
sbb
sbb
push
jne
adcb
cmp
rorl
xor
push
jne
add
add
sbb
je
sbb
sbb
fcmovu
jbe
add
add
mov
jbe
lcall
add
mov
jbe
leave
mov
jbe
lods
mov
jbe
icebp
mov
jbe
jl
jbe
test
jbe
mov
jbe
add
jbe
xchg
mov
jbe
jns
jbe
je
jbe
cmpb
js
mov
jbe
mov
mov
jbe
xchg
mov
add
jne
pop
push
jne
loopne
jne
lahf
sbb
imul
mov
push
sbb
jns
jne
lahf
sbb
add
add
push
jmp
pop
addr16
jbe
mov
ljmp
in
call
jbe
repnz
jbe
mov
jbe
push
jmp
jbe
dec
jmp
nop
push
jmp
mov
scas
in
jbe
xor
jbe
gs
jo
jmp
xchg
adc
jbe
push
out
sbb
pop
jmp
sbbb
or
scas
in
jbe
pop
jmp
xchg
icebp
in
jbe
dec
jmp
add
jmp
mov
out
out
in
jbe
jge
jbe
push
jmp
cmp
call
jbe
dec
jmp
pusha
push
jmp
adc
jbe
pop
jmp
out
sti
in
jbe
push
in
jbe
sub
sti
in
jbe
call
jbe
add
add
loope
jne
inc
inc
jne
dec
inc
jne
push
inc
jne
call
inc
jne
ds
jne
std
inc
jne
pop
inc
jne
inc
inc
jne
dec
inc
jne
dec
inc
jne
ds
jne
loope
jne
vphaddubd
jne
jecxz
jne
loop
jne
or
cmpsb
ljmp
scas
ds
jne
js
jne
inc
inc
jne
jl
jne
loop
jne
add
add
cmpsb
lcall
fs
jne
sbb
loop
mov
sbb
mov
dec
xorl
adc
jbe
out
ja
push
ja
jbe
cli
js
or
jno
jl
fiadds
jbe
iret
ja
int3
ja
and
ljmp
adc
popa
ja
std
in
ja
cltd
enter
shll
aad
jbe
data16
setno
cmpb
push
js
fiaddl
jbe
sub
xor
jbe
dec
jp
aad
js
xor
jp
sahf
les
jae
js
test
int
jbe
xchg
js
inc
test
jge
jecxz
ja
lcall
jbe
imul
pop
js
jecxz
js
arpl
jbe
xchg
jns
mov
js
sbb
ja
leave
jnp
jbe
shll
mov
jb
jns
in
jo
jbe
xor
jp
test
data16
lret
and
pop
or
jnp
ja
inc
dec
jp
sbb
js
and
js
lcall
jbe
inc
jp
push
jnp
push
je
jbe
dec
jp
mov
js
ja
and
jbe
jo
jbe
fnstenv
ljmp
jbe
mov
ja
inc
nop
jns
mov
js
add
add
push
mov
sub
mov
add
cmp
push
lea
push
call
mov
lea
push
sub
push
call
push
call
pop
mov
push
call
mov
mov
push
call
pop
lea
push
push
call
mov
call
not
and
cmp
push
push
call
add
call
dec
cmp
leave
ret
nop
nop
nop
nop
nop
nop
push
mov
sub
mov
not
mov
push
call
dec
add
add
add
cmpl
jne
add
mov
add
mov
add
and
call
inc
and
lea
push
call
mov
cmp
add
mov
push
push
call
add
xor
push
call
cmpl
jne
add
xor
pusha
inc
test
push
push
push
push
call
mov
mov
push
call
not
mov
and
mov
cmpl
jne
mov
mov
test
dec
add
add
mov
mov
add
mov
mov
mov
mov
movl
mov
mov
mov
mov
add
mov
xor
add
mov
xor
add
xor
mov
add
mov
xor
add
subl
inc
mov
subl
xor
subl
subl
mov
inc
cmp
add
and
add
cmp
jne
push
call
mov
mov
add
xor
mov
mov
mov
cmpl
jne
mov
xor
and
test
mov
call
cmp
dec
and
mov
push
mov
push
call
add
not
test
xor
call
xor
call
call
inc
cmp
cmp
mov
push
call
pop
cmp
mov
mov
push
lea
push
call
xor
push
call
mov
push
lea
push
call
cmp
inc
cmp
call
mov
push
call
pop
test
inc
xor
lea
push
lea
push
call
add
mov
push
call
pop
cmp
push
push
call
add
and
push
call
pop
and
inc
and
call
dec
xor
and
leave
ret
nop
push
mov
sub
cmp
cmp
xor
lea
push
sub
push
call
test
and
push
call
mov
mov
lea
push
sub
push
push
call
sub
push
call
pop
not
and
lea
push
call
inc
and
xor
mov
call
mov
not
cmp
call
test
push
call
pop
mov
xor
mov
push
push
call
add
mov
call
inc
cmp
lea
push
call
test
add
mov
test
not
xor
dec
xor
push
call
pop
mov
call
cmp
mov
dec
xor
mov
mov
lea
push
push
mov
push
call
leave
ret
nop
nop
push
mov
sub
mov
mov
inc
and
cmp
call
and
push
call
cmp
and
xor
call
and
mov
mov
mov
mov
mov
push
call
add
mov
push
call
and
lea
push
xor
push
call
cmp
not
cmp
mov
mov
call
push
call
pop
cmp
test
mov
push
call
not
mov
mov
mov
push
call
pop
inc
mov
push
call
not
xor
add
not
xor
xor
mov
lea
push
sub
push
mov
push
call
mov
mov
lea
push
lea
push
call
add
call
inc
cmp
and
add
mov
mov
push
push
call
add
xor
cmp
xor
not
mov
mov
cmp
xor
mov
push
call
pop
leave
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
mov
dec
xor
mov
and
mov
not
cmp
dec
xor
test
add
mov
call
mov
mov
lea
push
call
dec
xor
push
call
pop
xor
inc
add
dec
cmp
call
cmp
push
call
and
cmp
call
mov
mov
not
mov
mov
push
call
mov
push
mov
push
lea
push
call
and
mov
add
inc
and
lea
push
push
call
xor
mov
call
leave
ret
nop
nop
nop
nop
nop
nop
nop
push
mov
sub
xor
lea
push
push
call
push
push
call
mov
and
mov
xor
lea
push
call
add
push
mov
push
lea
push
call
dec
test
xor
lea
push
lea
push
call
add
mov
call
dec
cmp
push
call
pop
xor
mov
lea
push
call
cmp
xor
push
call
pop
add
not
cmp
mov
push
mov
push
lea
push
call
mov
and
lea
push
push
call
mov
mov
push
push
lea
push
call
cmp
mov
lea
push
lea
push
call
add
cmp
dec
cmp
xor
call
inc
add
call
cmp
and
leave
ret
nop
nop
nop
nop
mov
inc
and
add
mov
mov
push
test
test
mov
ret
adc
sub
sar
or
in
jmp
sbb
in
cli
cmc
shl
sbb
push
iret
or
add
into
call
push
and
and
daa
or
sti
pop
leave
and
aad
lret
or
ljmp
in
into
sbb
int
pop
and
cld
int
and
or
jmp
shr
add
out
cmc
adc
imul
out
dec
and
call
pop
pop
adc
push
lret
add
push
aad
jmp
and
not
bndstx
call
and
call
in
or
sub
or
lock
sar
jmp
or
add
and
sbb
adc
cmc
pop
ror
sbb
lret
push
add
and
sti
leave
and
lret
rolb
cli
sbb
and
pop
in
or
into
add
ljmp
sbb
in
or
sbb
lret
in
add
add
and
in
jmp
add
int3
jmp
in
out
in
or
adc
adc
iret
or
int
out
cli
and
pop
jmp
in
negb
sbb
or
rcrb
mulb
daa
lock
int
add
add
cmc
int3
or
pop
push
notb
stc
or
in
lock
sbb
mull
iret
and
sbb
or
or
lock
and
or
int
into
notb
lret
incl
lock
cmc
in
push
shr
pop
pop
add
sbb
adc
in
or
rolb
aad
or
push
or
lock
push
and
out
call
and
testl
adc
iret
push
int
in
push
sbb
and
cli
aad
leave
into
not
lret
and
sbb
push
and
lret
aad
or
push
or
pop
or
push
int3
cli
lock
or
jmp
leave
push
leave
sub
paddsb
ljmp
cld
cmc
lret
rclb
ljmp
es
jmp
sbb
and
add
aad
aad
add
cmc
in
and
and
or
call
lock
pop
es
stc
jmp
add
or
push
int
sbb
es
sbb
adc
or
int3
pop
add
ljmp
push
leave
into
pop
int3
add
and
and
add
ror
push
sbb
int
decl
push
stc
add
pop
test
and
in
adc
sbb
and
in
push
add
es
or
sti
in
sbb
pop
int
lock
in
int
sbb
pop
pop
and
or
out
sti
daa
call
or
or
push
lock
sub
adc
jmp
int
rcl
push
cli
add
es
cmc
lock
into
and
add
in
or
push
push
out
in
ljmp
push
in
add
int3
and
sbb
and
adc
aad
add
pop
es
pop
stc
rorb
or
cli
sbb
out
sbb
sbb
or
iret
and
daa
or
iret
and
add
daa
and
pop
lret
call
cli
or
and
and
not
add
or
add
sub
add
and
push
ljmp
adc
sti
push
shr
add
add
lock
pop
iret
pop
out
sbb
pop
lock
daa
in
add
sti
lock
and
sbb
lret
pop
daa
jmp
or
in
rorb
out
incl
pop
pop
in
add
in
add
and
and
out
call
push
rcrb
or
and
or
and
adc
es
and
pop
in
negl
or
sti
daa
daa
in
ljmp
or
and
or
push
into
push
or
and
add
and
int
movups
lret
push
jmp
cli
cld
add
shl
add
push
push
sti
jmp
sbb
or
add
int
sbb
push
add
cli
pop
add
out
sar
add
stc
or
sbb
div
or
and
lock
out
or
and
add
leave
lret
imull
leave
test
sbb
or
or
out
sbb
pop
add
pop
cld
testb
and
in
and
int3
rclb
or
and
es
pop
daa
add
call
leave
and
and
lret
in
rclb
add
in
sub
and
pop
testb
cmc
jmp
or
iret
out
cli
add
jmp
testb
in
or
int
sbb
add
sbb
lret
cli
call
or
stc
and
or
sti
into
jmp
jmp
sti
adc
cmc
rolb
sti
pop
out
and
jmp
add
in
push
or
stc
or
pop
lock
jmp
in
push
cmc
push
cli
jmp
testl
leave
adc
out
push
ljmp
sbb
lret
shr
cmc
daa
add
iret
in
push
and
sbb
ror
add
add
pop
out
in
sbb
add
add
sub
and
ror
or
and
add
add
out
add
add
out
or
cld
and
sub
add
lock
shr
out
daa
or
int
push
adc
into
jmp
and
call
stc
pop
and
pop
sti
daa
cli
int
add
int3
add
iret
sti
adc
push
sbb
add
sti
sbb
push
sbb
lock
push
out
and
or
int3
or
lret
adc
stc
testl
and
mov
sbb
or
sti
and
lret
jmp
not
or
and
and
out
sub
add
aad
sbb
or
into
out
aad
push
iret
call
pop
add
sbb
pop
in
testl
stc
pop
add
sbb
div
stc
ljmp
add
cli
or
adc
adc
adc
int
and
sub
call
sbb
lret
adc
add
es
or
not
sbb
push
aad
and
add
not
into
testl
cli
push
add
in
jmp
int3
in
and
push
jmp
ljmp
pop
and
and
jmp
call
adc
push
adc
call
or
daa
int3
int3
jmp
lret
int
call
es
idiv
or
rclb
pop
and
jmp
aad
call
and
int3
shrb
and
testl
cld
or
pop
lret
cli
and
lcall
sbb
psubsw
call
cmc
es
call
sub
add
lock
daa
or
pop
add
sbb
sbb
adc
cmc
shlb
add
or
ljmp
cli
sub
and
div
pop
jmp
sbb
in
push
jmp
iret
push
or
adc
and
add
push
es
adc
out
add
lock
and
int
add
iret
ljmp
rolb
daa
add
sbb
in
rcrb
add
or
into
push
sub
stc
cli
adc
push
or
in
or
out
and
jmp
out
sub
rclb
adc
into
adc
sub
push
in
cld
in
sbb
testb
ljmp
or
femms
add
or
notl
add
pop
aad
call
adc
iret
sbb
out
rcrb
and
and
cli
pop
sub
cmc
jmp
jmp
sbb
testb
or
cmc
push
and
stc
and
sbb
or
jmp
or
lret
testb
in
mov
add
sbb
mull
add
pop
cli
notb
and
sbb
push
cmc
stc
add
or
shr
and
pop
ljmp
shr
pop
imul
push
or
out
or
adc
or
dec
sbb
or
lock
cmc
jmp
add
add
iret
push
or
in
maskmovq
mull
or
jmp
and
sbb
pop
push
int
and
lret
sbb
add
sub
iret
mull
jmp
call
lret
or
pop
int3
out
jmp
pop
or
imul
or
leave
int3
or
push
out
sbb
cmc
imul
lret
sbb
out
call
jmp
jmp
cld
or
sbb
sbb
cld
int3
stc
or
leave
or
sbb
cli
in
shlb
shl
cli
add
and
or
out
rorb
pop
push
ljmp
pop
add
out
and
aad
add
cli
sub
push
or
int3
or
and
or
sti
iret
sbb
and
or
or
and
add
add
and
cli
cmc
dec
and
in
add
in
jmp
sbb
cmc
lock
and
into
int3
or
sbb
jmp
adc
push
pop
adc
lret
or
and
testb
or
lock
sub
adc
lock
and
pop
add
jmp
in
daa
int3
or
add
add
sbb
out
cmc
and
int3
or
or
or
daa
or
cmc
pop
cmc
call
imulb
cli
and
movups
push
es
iret
int3
into
sbb
out
adc
in
or
sbb
adc
or
lret
in
call
and
out
int
push
add
sti
shl
and
cld
sti
add
and
sbb
and
iret
and
and
into
daa
or
sbb
rolb
lret
and
mulb
add
in
sbb
in
add
or
out
in
and
jmp
add
sbb
cmc
and
shl
aad
out
cli
push
sub
and
jmp
out
jmp
stc
sbb
or
and
and
shr
and
iret
and
adc
pop
in
lret
and
int3
add
in
sbb
or
and
push
pop
push
into
push
push
pop
lret
push
or
pop
sbb
int
sub
push
add
stc
lock
add
push
or
cmc
in
push
test
jmp
sbb
adc
rcl
mov
into
sub
call
leave
sti
push
pop
or
call
call
leave
jmp
jmp
adc
cli
sbb
add
and
cli
jmp
and
and
push
es
aad
into
push
imul
sti
sbb
add
sub
or
and
adc
out
and
pop
in
lret
add
add
push
into
or
sti
in
push
add
and
and
iret
push
sti
in
adc
push
int
sbb
sbb
pop
pop
lret
sbb
cli
lret
or
jmp
shlb
es
int
sbb
out
add
adc
wbinvd
and
iret
cld
int3
sti
or
aad
cld
daa
pop
add
adc
and
sbb
leave
sbb
push
add
int3
pop
psadbw
into
sub
stc
or
push
shl
adc
lret
or
in
add
or
or
cmc
or
adc
pmaddwd
sub
sbb
cmc
int
sbb
sbb
or
and
out
jmp
sbb
into
iret
call
pop
sub
jmp
push
push
sti
sbb
in
and
call
sti
daa
add
aad
push
lret
lret
and
daa
sub
mov
sub
cld
into
and
aad
add
ljmp
and
or
add
push
or
sub
in
and
and
sbb
sbb
and
aad
push
in
aad
add
decl
push
adc
sbb
out
sbb
sti
and
push
es
add
lock
and
in
or
or
add
es
and
sti
bswap
sbb
call
push
out
or
sbb
and
add
sti
sbb
aad
stc
leave
in
pop
adc
aad
leave
lret
or
in
push
iret
add
in
lock
lret
push
in
or
push
or
cli
ljmp
pop
out
sbb
jmp
psadbw
int3
pop
int
push
add
in
mulb
daa
lret
or
add
and
int
and
push
jmp
pop
adc
and
pop
aad
stc
ljmp
cmc
jmp
iret
and
or
or
es
cli
cmc
push
stc
int
sub
rolb
ljmp
int3
int
in
sbb
and
int3
ljmp
and
and
add
adc
aad
rclb
jmp
lret
and
es
ljmp
sub
or
leave
add
in
in
out
sbb
stc
or
add
cld
push
pop
mov
sbb
push
sub
sbb
shlb
and
add
iret
adc
pop
sbb
push
testb
add
sbb
push
aad
and
mull
out
ljmp
jmp
and
lock
idiv
and
testb
es
push
jmp
lret
pop
lock
add
leave
push
add
cld
push
cld
out
into
leave
int
aad
adc
into
rorb
stc
lret
pop
add
or
sbb
leave
sub
add
or
out
and
pop
add
shrb
push
in
and
in
iret
cmc
push
idiv
sbb
lret
int3
in
and
add
and
call
in
or
sub
pop
rorb
push
or
idiv
sbb
aad
push
aad
and
leave
lret
into
add
and
and
cli
out
cld
push
out
sbb
call
aad
push
daa
sub
out
sbb
int3
add
add
lock
int3
cld
pop
out
pop
adc
in
aad
into
pop
or
cld
and
lret
jmp
lock
or
add
push
psrld
and
aad
or
and
int
sar
int
es
cld
push
cli
or
sti
push
pop
pop
lret
sbb
push
pop
rcrb
bswap
in
stc
stc
cmc
int3
add
int3
and
pop
and
in
or
adc
rorb
cmc
cmc
pop
and
or
adc
sbb
rcl
sbb
jmp
sbb
or
pop
and
adc
sbb
aad
pop
rorb
sbb
testl
in
leave
cmc
jmp
add
add
in
sbb
psubsw
or
or
cld
in
stc
stc
sub
add
sbb
sti
daa
and
sbb
ljmp
into
push
or
or
push
jmp
cmc
sub
iret
pop
and
lret
pop
pop
push
ljmp
or
add
pop
testl
add
add
int
or
lock
add
lret
add
invd
or
or
or
aad
lock
out
cld
add
stc
adc
and
out
add
pop
or
add
and
daa
leave
cli
or
or
pop
int
add
or
add
sti
or
and
and
and
or
add
sbb
pmulhuw
sbb
lcall
push
add
add
and
add
stc
in
lock
or
idiv
or
int
in
rcrb
in
sbb
testl
sbb
or
and
rcl
or
and
sub
and
negb
lock
in
add
pop
and
adc
rolb
sbb
add
add
add
stc
negb
jmp
pop
cld
adc
or
int
adc
lret
jmp
into
testl
int
and
or
paddb
rorb
and
ljmp
call
out
cmc
aad
out
and
psubq
adc
in
or
pop
and
add
or
push
and
add
push
or
push
and
rorb
sti
sub
mov
and
cmc
or
add
or
push
or
or
add
or
lret
push
and
leave
sti
jmp
dec
add
add
lock
cld
aad
mulb
or
adc
and
cld
mov
or
int
or
lret
nopl
int
push
and
push
into
in
push
int
or
iret
stc
shr
or
leave
and
sbb
sbb
sti
sbb
pop
mulb
notb
cli
add
add
in
push
int3
and
sar
in
daa
out
bndldx
adc
or
push
stc
or
shlb
es
stc
sbb
push
sbb
adc
aad
add
in
and
cli
sbb
daa
sbb
iret
or
add
add
or
rcl
jmp
or
sub
lsl
cld
into
push
push
add
rorb
and
in
cmc
out
int3
and
stc
or
lret
adc
int3
or
or
idiv
call
int3
sbb
aad
testl
sbb
pop
adc
and
or
in
cli
or
and
jmp
push
imul
out
cld
jmp
lret
lret
sub
pop
test
stc
add
or
push
add
cmc
pop
shlb
leave
cld
sbb
jmp
sub
sub
and
rolb
sub
and
ljmp
sti
add
shlb
sti
sbb
push
lock
adc
aad
adc
stc
and
add
push
and
lret
or
or
or
push
jmp
leave
in
in
iret
sbb
push
into
push
out
add
adc
int
daa
in
push
aad
sub
sti
jmp
and
in
ljmp
es
leave
adc
iret
pop
add
push
add
push
int3
lret
adc
daa
sti
adc
daa
lret
sub
add
sbb
or
out
in
add
or
and
jmp
or
cld
into
testl
push
sti
in
stc
push
and
stc
int3
or
sbb
test
pop
lret
or
add
int
and
and
add
pop
ljmp
aad
or
daa
sbb
push
jmp
jmp
cmc
int3
sti
es
in
pop
int
and
cld
and
daa
push
push
sbb
adc
jmp
cld
sub
push
sbb
in
and
push
testb
or
cli
or
or
and
and
and
add
call
add
push
es
add
int
push
and
call
or
pop
imul
or
adc
lret
and
lret
pop
or
sbb
sbb
and
and
cld
call
jmp
or
add
testl
int
aad
push
or
stc
add
shr
in
jmp
or
add
adc
add
add
and
rcrb
push
and
sysret
add
adc
cli
sbb
jmp
in
and
pop
out
and
add
cld
and
push
jmp
adc
and
invd
add
lock
sbb
add
push
iret
add
and
pxor
aad
iret
stc
or
push
in
jmp
lret
lock
add
rolb
and
or
cld
call
add
into
sti
mulb
sti
pop
test
aad
out
in
shlb
add
call
div
and
push
sbb
sbb
sbb
sti
cmc
sti
add
push
and
or
and
and
add
and
testb
sti
jmp
out
sbb
aad
into
lock
lock
in
cld
call
and
out
pop
daa
out
add
pop
and
in
pop
add
or
pop
sbb
and
push
add
add
jmp
and
div
and
pop
or
pop
cli
out
leave
shr
cmc
ljmp
lcall
and
push
or
and
cli
cld
div
add
iret
or
sbb
lock
or
or
sub
lock
aad
and
add
jmp
call
sti
sti
cli
jmp
out
add
into
or
cld
push
or
and
ror
iret
jmp
and
or
add
leave
call
in
cmc
ljmp
push
or
and
sti
or
push
and
in
or
out
cli
adc
adc
leave
sbb
iret
out
push
in
adc
call
add
pop
or
add
adc
push
shr
sub
add
adc
and
daa
in
adc
daa
es
adc
in
add
int
push
add
add
jmp
adc
pxor
negb
or
and
add
cmc
add
cli
or
aad
push
add
adc
add
shlb
daa
add
and
ror
and
and
ljmp
and
cmc
daa
in
or
not
int
sti
out
add
incl
out
lret
call
ljmp
aad
and
paddsw
and
lock
push
sbb
and
in
add
sbb
adc
add
add
stc
and
stc
add
jmp
and
cli
cmc
out
and
out
or
iret
or
and
jmp
cmc
sub
shr
out
sub
jmp
daa
add
pmulhuw
rorb
and
and
lret
push
add
sbb
shlb
and
cmc
jmp
call
cli
lret
sbb
adc
lret
in
or
test
rorb
incl
sub
or
adc
sti
add
into
and
sbb
out
add
add
sbb
into
pop
push
leave
cli
into
add
in
or
pop
int
or
push
add
lret
and
adc
in
es
lret
or
pop
cld
jmp
add
in
push
psubq
add
cmc
push
and
or
add
ljmp
sbb
pop
and
out
pop
or
lret
int3
pop
int3
add
sbb
cli
call
pop
mull
jmp
into
add
sbb
and
adc
es
cmc
rclb
sbb
in
sub
sti
or
out
sbb
pop
cmc
or
pop
push
push
div
sub
or
sub
daa
and
pop
or
and
aad
push
iret
or
jmp
ljmp
es
sar
add
out
daa
sub
out
or
or
jmp
add
pop
lock
adc
sbb
int
int3
add
or
adc
cmc
add
ljmp
sbb
out
or
add
push
and
adc
and
or
int3
and
add
shlb
es
out
sbb
int
es
jmp
iret
jmp
or
ljmp
or
aad
stc
jmp
int
or
add
or
shr
in
dec
add
or
in
add
call
sbb
rorb
or
lret
adc
sbb
lock
int
push
call
add
in
in
sbb
in
add
iret
int
adc
add
push
and
or
sti
push
daa
or
stc
add
push
sbb
cli
and
in
cld
jmp
rcl
jmp
add
sbb
jmp
push
pop
rcl
sbb
out
or
pop
sbb
shr
call
add
add
ljmp
sti
in
and
add
and
adc
add
sbb
sbb
decl
prefetch
or
sbb
push
in
int
bswap
in
into
or
shr
rorb
shlb
sldt
sbb
add
and
and
and
cmc
sti
div
push
or
out
out
leave
and
jmp
rolb
add
lar
int
pop
call
and
iret
notb
and
and
in
pminsw
or
jmp
adc
leave
int
add
sbb
in
out
or
ljmp
stc
adc
stc
aad
push
in
int
into
add
shlb
lock
adc
add
leave
movhps
add
lret
and
in
rorb
jmp
or
in
lock
sbb
stc
cmc
sbb
add
into
testl
in
add
in
daa
or
cmc
pop
sbb
adc
es
out
add
shlb
pop
in
add
and
into
and
add
push
add
jmp
add
push
push
es
in
in
in
pop
pop
lret
out
into
adc
incl
add
and
lock
ljmp
into
pop
sbb
sbb
push
push
ror
in
in
jmp
out
into
and
leave
iret
leave
imul
or
in
iret
push
sbb
jmp
and
shlb
sbb
add
into
shl
mull
int3
cli
in
and
sti
in
idiv
pop
add
and
aad
or
add
push
incl
cli
daa
aad
pop
imul
push
cld
sbb
lret
testb
iret
smsw
pop
or
rcl
add
stc
ljmp
jmp
ljmp
and
int
pop
add
es
add
and
cli
psadbw
pop
adc
into
in
aad
or
into
or
call
into
adc
and
and
jmp
in
cli
sbb
call
or
out
or
pop
stc
push
pmulhuw
adc
or
add
sbb
add
pop
or
or
leave
lcall
add
push
sbb
cld
adc
add
stc
in
sbb
or
jmp
add
in
leave
or
aad
or
sbb
aad
nopl
stc
add
or
jmp
push
and
aad
add
leave
adc
adc
sti
pop
sbb
add
or
adc
or
add
rcrb
jmp
sbb
or
sbb
imul
adc
aad
push
into
in
daa
sbb
and
into
add
or
sar
sti
cmc
sbb
out
call
jmp
into
sti
rcrb
out
and
iret
in
out
add
adc
adc
cli
adc
push
jmp
cli
int
in
call
and
or
sbb
in
lret
add
pop
push
add
in
and
or
ljmp
add
in
sbb
and
jmp
or
sti
push
sbb
push
and
sbb
and
add
in
and
push
push
adc
add
int
or
push
in
cli
out
cld
or
sbb
jmp
int
and
cmc
and
adc
add
and
or
push
add
stc
call
and
push
and
pop
int3
or
sbb
and
cli
call
iret
add
aad
cli
aad
add
adc
in
imul
add
call
ljmp
and
push
daa
lret
out
or
jmp
or
and
cli
or
add
sbb
es
add
or
jmp
adc
stc
sbb
sbb
or
int3
stc
testl
adc
daa
add
adc
or
int3
or
stc
sbb
out
push
shl
add
or
in
jmp
push
in
jmp
aad
push
or
out
lret
sbb
sbb
or
lret
add
es
iret
add
push
aad
leave
leave
add
leave
into
add
jmp
testl
int3
es
add
lret
cld
and
add
sti
sbb
adc
sbb
and
ljmp
and
int3
in
call
in
or
push
and
add
lret
or
pop
jmp
daa
rorb
adc
and
or
test
and
in
iret
or
rcrb
cld
add
sbb
sbb
and
add
negb
push
imul
add
push
iret
add
adc
push
in
es
adc
or
push
in
es
jmp
or
stc
or
notl
in
adc
int
lret
or
or
add
lret
or
daa
call
and
adc
pop
add
in
daa
adc
pxor
adc
add
cmc
sbb
push
and
out
stc
add
imul
in
or
push
cmc
or
push
jmp
add
sub
idiv
and
or
cli
int3
sub
lret
add
and
in
daa
and
out
sbb
and
or
in
lret
in
int3
int
psubq
int
adc
call
jmp
or
call
testb
sbb
es
in
and
negl
and
cli
push
push
int3
add
add
leave
add
adc
or
pop
in
testb
pop
leave
push
daa
call
int3
ljmp
iret
ljmp
in
cmc
cld
daa
push
push
add
sbb
rorb
daa
or
shl
out
add
shr
int3
add
in
mulb
sbb
and
lret
pop
or
aad
shl
sbb
negb
push
stc
or
cli
add
jmp
nopl
jmp
sbb
call
sbb
nopl
lret
or
shlb
rolb
jmp
shr
int3
or
sti
and
call
aad
in
cmc
lcall
or
test
jmp
and
lret
stc
imul
pop
and
iret
es
daa
pop
and
cli
or
sbb
add
and
incl
pop
in
shlb
ror
into
jmp
in
sbb
sti
add
pop
and
dec
add
cmc
iret
or
sbb
in
cmc
sub
add
out
cli
idiv
iret
lret
or
daa
sbb
add
iret
pminsw
out
pop
pop
es
jmp
sti
sbb
and
push
lock
push
daa
decl
adc
push
out
pop
int3
jmp
pop
add
out
add
call
pop
pop
and
es
out
in
idiv
add
shlb
push
sti
lret
lock
out
pop
sbb
cli
or
push
sti
or
jmp
cld
sbb
out
jmp
cli
add
sub
int
or
nopl
rclb
push
out
and
or
in
jmp
or
decl
cli
es
es
pop
imul
notl
and
call
pop
into
daa
out
add
add
sti
maskmovq
testl
push
jmp
testl
and
adc
iret
push
cld
ud0
push
add
sbb
imul
iret
cmc
lret
es
and
adc
jmp
iret
or
and
push
or
or
ror
test
pmaddwd
or
sub
push
jmp
in
sti
and
pop
cld
sbb
or
in
add
ljmp
and
bswap
add
int3
adc
push
sbb
or
cli
leave
stc
in
add
add
notl
cli
in
ljmp
leave
or
into
sbb
add
add
or
jmp
sbb
adc
or
and
or
adc
and
adc
sub
rorb
shl
or
ljmp
daa
pop
cmc
into
lock
add
lret
pop
pop
int3
adc
es
into
lret
adc
notb
es
add
lret
ror
add
and
and
call
in
lret
sbb
in
or
lret
int3
add
ljmp
sti
push
jmp
lret
add
sti
add
and
leave
lret
or
out
aad
jmp
int3
add
int3
pop
out
shr
add
sti
sbb
or
add
in
cmc
pop
shr
push
cld
int
push
imulb
test
in
adc
stc
aad
ljmp
pop
lock
daa
out
into
in
and
and
lret
cli
or
adc
into
push
iret
add
and
shlb
and
and
lret
cmc
rcrb
in
aad
call
or
or
add
in
int
es
int3
add
out
rcl
add
int3
aad
push
iret
jmp
and
and
es
into
add
stc
ljmp
jmp
int3
lret
pop
add
sti
rorb
cld
lret
and
lret
sbb
and
jmp
ljmp
or
and
pop
add
add
out
int3
negb
add
cli
or
sbb
add
or
ljmp
cld
and
add
and
or
add
push
sbb
add
lret
add
add
jmp
jmp
push
mull
pop
out
pop
or
jmp
jmp
call
and
out
add
sbb
and
ror
and
jmp
lock
add
push
pop
call
into
jmp
cld
and
iret
into
pop
or
cmc
push
and
and
cli
cmc
call
out
add
sbb
notl
or
push
push
jmp
and
add
add
and
sbb
leave
and
add
add
ljmp
aad
or
or
call
out
add
out
into
and
out
in
lret
lock
sbb
in
daa
adc
rolb
leave
and
in
push
push
lret
and
lret
leave
into
int
into
out
into
add
in
call
int
ljmp
lret
aad
add
and
adc
int3
adc
add
testl
or
push
femms
add
or
and
pop
lret
pop
sti
jmp
sbb
add
int
cli
or
leave
cmc
rcrb
add
testl
pop
adc
lret
call
jmp
or
jmp
cli
cmc
jmp
sbb
lock
or
cli
pop
negl
and
int
jmp
shr
iret
push
iret
and
sbb
in
int
sbb
stc
leave
jmp
pop
push
sbb
iret
push
iret
rorb
shr
or
int
rcrb
sbb
out
leave
or
pop
add
or
sbb
add
in
add
cli
sbb
add
iret
in
add
cld
lret
jmp
lcall
add
in
sbb
negb
sti
and
test
sbb
or
sbb
ljmp
into
sbb
sbb
or
pop
sti
mov
sbb
cld
or
add
rcrb
in
jmp
stc
and
rolb
pop
aad
sti
cli
testb
notb
and
and
int3
shr
in
ljmp
and
or
push
pmaxsw
add
rcrb
daa
pop
into
push
stc
int3
in
es
pop
add
int
lret
add
aad
rolb
and
sbb
aad
add
or
sti
and
sub
and
add
leave
rorb
sti
lret
rolb
in
into
in
pop
or
sbb
ljmp
iret
cli
or
out
and
out
shr
rorb
sbb
notb
aad
pop
or
sbb
push
iret
or
cmc
sub
jmp
leave
add
sbb
call
sbb
rorb
aad
and
sbb
push
into
lret
pop
sbb
shr
sbb
cli
or
push
and
push
mull
int3
in
in
in
add
int
add
pop
sti
into
push
into
not
or
sbb
out
and
cld
out
add
and
push
jmp
iret
sbb
add
lret
int
sbb
and
stc
and
in
adc
or
sub
lock
push
push
pop
ljmp
imul
iret
into
pop
out
add
in
sti
add
adc
out
add
iret
or
add
and
add
call
add
ljmp
or
pop
cmc
push
aad
or
daa
lret
sbb
out
int
sbb
call
in
and
and
call
lret
push
push
daa
ljmp
out
shl
call
add
sti
out
in
add
sti
add
cld
push
stc
jmp
and
aad
or
adc
jmp
leave
cli
jmp
lock
out
and
add
sbb
and
out
sbb
lret
in
call
in
add
ror
aad
or
ljmp
and
iret
leave
pop
and
lret
sbb
jmp
add
es
push
and
shr
sti
cli
push
int
call
sbb
add
add
push
cmc
ror
sub
and
rorb
cmc
sbb
push
sbb
call
or
lock
push
out
add
and
call
push
call
and
sbb
rclb
out
cld
test
int
daa
call
or
add
lock
push
push
or
notl
lret
lret
es
push
and
and
add
ljmp
in
lock
and
push
and
add
add
leave
sti
lock
or
adc
add
push
or
aad
adc
sbb
or
stc
in
in
and
leave
aad
and
add
or
push
in
lock
out
lret
pop
into
out
in
iret
negb
in
and
or
or
cld
add
and
or
or
and
in
add
pop
add
and
aad
adc
test
cli
and
in
add
call
and
lcall
and
sbb
sbb
or
int3
in
cld
out
add
lret
push
leave
ljmp
add
push
or
and
sti
out
cli
add
out
cli
jmp
push
cli
idiv
iret
call
iret
and
test
cld
out
stc
pop
in
and
pop
int3
and
out
sbb
add
sbb
negb
sbb
and
sbb
aad
add
or
add
lret
and
add
push
testb
sti
add
int
into
rcl
call
and
iret
and
or
add
add
jmp
sbb
daa
mull
and
sub
or
lock
add
cld
shlb
sbb
or
and
or
add
aad
sbb
push
and
ljmp
leave
pop
call
jmp
sbb
lock
or
push
add
cmc
out
and
pop
in
push
sbb
ljmp
cli
sti
in
aad
daa
or
lret
shr
or
call
cli
sbb
pop
adc
or
int
sbb
or
ljmp
add
or
aad
int
int
cld
or
and
lret
add
es
pop
dec
lock
add
lret
notb
add
shl
adc
sti
incl
add
int3
push
add
or
add
shr
or
into
add
add
cmc
and
rcl
add
idiv
add
es
and
jmp
add
add
in
or
pop
int3
pop
add
adc
lret
push
sbb
out
es
or
or
lock
adc
push
iret
notb
sbb
push
adc
int
call
in
push
pop
not
adc
aad
or
add
push
and
and
add
cmc
in
sbb
out
push
add
jmp
lret
lret
daa
pop
or
stc
or
out
aad
sbb
leave
add
sbb
sti
jmp
shlb
or
push
sti
call
add
add
add
sbb
cmc
and
or
add
add
add
lock
or
lret
add
sbb
sbb
push
daa
and
add
and
and
add
test
in
call
lret
or
call
push
and
push
cli
or
and
add
out
push
es
and
ljmp
and
es
or
iret
lret
jmp
jmp
leave
and
cli
leave
test
in
push
iret
sub
or
cli
or
int3
int3
or
int
call
and
add
movups
es
cld
sbb
add
pop
into
and
sbb
sbb
jmp
lock
stc
out
push
or
push
add
out
rcrb
testl
in
ljmp
add
int
and
or
add
call
lret
or
add
leave
or
push
push
and
daa
daa
in
or
in
int3
lock
ljmp
or
sbb
stc
cld
ljmp
lret
rclb
add
push
in
leave
cli
and
or
out
add
sub
push
rolb
push
sub
int
sbb
add
es
add
jmp
leave
ljmp
cld
sti
and
daa
sub
lret
sub
call
or
in
testl
add
or
cld
rolb
add
and
jmp
sbb
or
pop
lock
lock
or
or
pop
idiv
jmp
sub
and
cmc
into
sbb
lret
push
sbb
ljmp
shlb
pop
in
sbb
or
sbb
stc
adc
push
lret
cli
cld
or
push
cmc
cmc
add
call
and
and
or
and
es
pop
call
lret
push
pop
cmc
sti
into
add
and
add
cmc
and
cmc
cli
and
es
and
testl
add
rclb
pop
ljmp
lret
int
sbb
sub
in
adc
push
push
and
es
lret
and
int3
and
or
push
iret
and
in
in
cmc
idiv
add
pop
psrld
and
or
or
or
testl
daa
or
sbb
cld
into
sbb
adc
and
sub
incl
in
in
cld
syscall
lock
push
sbb
in
pop
rclb
es
lock
pop
mulb
and
leave
sub
iret
add
sub
pop
cmc
adc
out
cmc
push
or
int3
iret
int
sub
sbb
iret
cmc
into
jmp
stc
or
rolb
sbb
and
incl
and
jmp
iret
sbb
sti
jmp
and
jmp
testb
add
and
aad
or
stc
jmp
stc
add
push
and
in
jmp
add
or
lret
adc
into
call
lret
sti
leave
or
push
ljmp
cli
cld
shl
or
or
stc
es
or
sub
lock
add
add
int3
jmp
stc
in
shrb
int3
sbb
push
or
and
sbb
add
push
in
sub
jmp
add
es
call
jmp
push
jmp
in
in
out
lret
jmp
adc
add
add
cld
in
pop
or
sti
in
add
add
add
daa
sbb
lret
into
sbb
es
adc
and
rcrb
or
add
or
add
add
push
shlb
in
decl
iret
or
sbb
into
or
and
leave
lret
or
adc
ljmp
dec
and
sub
testl
or
or
daa
pop
push
pop
stc
int3
and
add
push
leave
not
cld
adc
push
add
stc
or
ljmp
in
add
es
jmp
or
in
in
sbb
and
push
es
bswap
rcrb
add
lock
add
jmp
in
bswap
out
sbb
out
or
adc
add
or
imul
ljmp
and
cmc
in
or
in
bswap
ljmp
femms
out
add
and
and
and
and
leave
mull
test
sbb
push
call
or
lock
jmp
in
adc
and
add
adc
sbb
push
lret
and
and
stc
call
and
daa
adc
sbb
lock
leave
lcall
in
push
call
add
jmp
into
push
add
sbb
push
daa
jmp
sub
push
and
int
lret
out
and
pop
or
lret
out
es
and
jmp
add
and
into
push
or
pop
or
out
push
and
add
out
aad
and
or
in
decl
and
sub
or
in
or
rorb
lcall
pop
push
or
sbb
idiv
sbb
or
out
add
int3
stc
in
and
leave
int
int3
pop
or
push
sbb
in
testl
sbb
in
idiv
out
into
int
stc
pop
leave
call
into
stc
daa
lock
add
push
lock
add
jmp
or
lret
rclb
add
pop
add
leave
cld
and
and
testl
es
imul
add
sbb
in
and
and
push
lock
sub
into
or
push
sbb
aad
cli
or
or
lret
sar
out
add
rorb
jmp
lock
jmp
add
daa
jmp
nopl
rcl
and
stc
in
imulb
lcall
shr
adc
or
sbb
cmc
sbb
sub
into
lret
stc
sbb
lock
and
leave
lock
shl
push
lret
cli
pop
and
cli
negb
push
testb
aad
add
int3
or
lock
in
or
lret
and
push
out
call
into
stc
int
in
mov
cld
push
add
stc
sub
adc
add
aad
testl
jmp
add
iret
cld
lock
ljmp
lock
lock
add
add
es
lret
or
cmc
push
incl
and
cmc
or
sbb
or
push
and
rcrb
sbb
or
iret
lock
and
push
lcall
daa
jmp
add
and
stc
int3
push
or
out
add
stc
sbb
push
lock
sbb
and
adc
aad
int3
jmp
stc
lcall
lret
paddsb
add
pop
add
int
adc
jmp
push
cld
adc
lret
add
ud2
testl
aad
adc
or
sti
push
ljmp
and
or
sbb
sbb
jmp
adc
stc
cli
in
sbb
sbb
add
sti
stc
jmp
or
and
jmp
add
cld
shr
lret
push
add
jmp
and
sub
adc
add
or
or
in
sbb
add
in
int3
idiv
add
push
add
lret
push
lret
lret
int3
out
div
lret
jmp
sti
or
cmc
or
lock
es
call
out
sti
adc
and
pop
into
in
or
jmp
stc
or
lret
or
and
into
sbb
add
cmc
in
cli
pop
aad
sti
es
and
out
add
call
cli
push
rolb
add
aad
leave
and
jmp
daa
add
lret
into
or
lock
cld
jmp
and
pop
pop
and
stc
push
and
int
sbb
cmc
daa
in
add
and
jmp
pop
pop
adc
bswap
aad
out
leave
iret
sbb
sbb
ljmp
lock
and
lret
in
push
ljmp
sbb
mull
add
cli
adc
or
es
int3
notb
push
imul
adc
int3
and
push
sti
add
and
call
dec
cmc
syscall
shr
push
sbb
and
add
push
iret
ljmp
pop
cld
or
and
into
sub
cmc
jmp
sub
daa
sbb
ljmp
pop
or
adc
sbb
pop
add
out
push
sti
sub
lret
cli
lldt
or
adc
and
add
aad
add
aad
and
iret
imul
lret
sbb
sbb
in
or
sbb
add
ljmp
jmp
rolb
in
cld
adc
es
add
iret
add
incl
in
sbb
testl
jmp
in
sbb
stc
push
es
ljmp
in
leave
mulb
push
in
in
sbb
jmp
call
add
sub
or
int3
sti
int3
sbb
sar
add
or
call
sub
and
stc
rcrb
and
add
and
and
and
push
stc
jmp
stc
and
int3
in
sbb
add
testl
jmp
rcl
rolb
push
pop
or
into
add
in
adc
cli
sar
lock
jmp
testl
push
sbb
jmp
or
push
shlb
in
or
bswap
cli
sbb
into
push
aad
iret
add
add
pmaxsw
add
iret
or
sbb
sbb
push
iret
adc
int3
imul
idiv
testl
out
sbb
adc
add
aad
sbb
iret
pop
and
add
pop
rolb
in
in
or
pop
jmp
and
add
add
pop
int
int3
shr
rorb
push
add
rcrb
sbb
add
idiv
cli
add
mulb
iret
or
sub
add
jmp
leave
lcall
adc
add
jmp
add
int
pop
sbb
int
sbb
shlb
or
iret
and
add
push
sti
sbb
add
jmp
aad
int3
shlb
or
pop
cmc
or
daa
sub
push
cmc
or
lret
sbb
int3
and
jmp
lret
cli
out
pop
testl
and
and
negl
and
cmc
add
and
stc
push
or
daa
or
and
and
or
and
push
ljmp
lret
test
push
push
sbb
add
es
or
add
in
ljmp
sti
call
push
push
or
or
negl
or
push
sbb
sbb
in
add
sti
movups
call
or
iret
out
notl
add
add
cmc
or
and
and
int
push
int3
in
add
sti
sub
iret
and
call
jmp
and
lret
in
or
jmp
adc
push
lret
paddsb
and
or
add
or
ljmp
push
bndldx
daa
push
aad
and
push
rcl
push
and
rorb
add
cld
imul
leave
in
lret
and
out
add
jmp
and
push
add
push
pop
and
leave
in
push
pop
sti
test
in
or
cli
sti
pop
sbb
sub
push
push
adc
into
and
rolb
sbb
and
pop
push
jmp
aad
daa
lret
in
and
push
push
pop
and
call
and
call
leave
lock
or
stc
pop
jmp
aad
sbb
pop
sbb
cli
sti
pop
or
add
or
adc
or
adc
or
pop
pop
pop
cli
shl
add
call
into
shr
adc
sbb
and
pop
or
sub
jmp
and
iret
add
or
push
and
pop
cld
and
and
or
testb
lret
and
in
add
cld
int
jmp
and
call
aad
sbb
add
cmc
add
push
jmp
sbb
push
pop
and
adc
jmp
push
adc
notl
out
push
int
pop
leave
aad
iret
es
adc
out
push
and
or
and
and
jmp
in
iret
ljmp
shl
or
add
sti
call
lock
and
add
or
push
lock
add
jmp
or
mov
lock
int
call
out
sbb
or
push
sbb
sti
sbb
push
lret
rolb
push
test
pop
out
and
out
adc
jmp
sbb
int3
in
in
sbb
into
push
and
daa
sub
cmc
sbb
call
add
or
sbb
jmp
daa
maskmovq
ljmp
add
adc
mull
in
es
and
cld
or
add
cmc
or
push
or
sbb
stc
and
int
lret
push
call
and
jmp
rclb
cli
stc
add
cmc
and
dec
and
add
leave
out
or
negb
aad
sbb
push
and
movaps
or
or
cmc
pop
sbb
int
leave
rcl
add
pmaxsw
or
sub
stc
lret
cli
into
push
in
testb
push
bswap
out
sbb
sbb
or
and
add
adc
lret
mull
in
sbb
testb
int3
and
out
and
sbb
cld
sbb
into
in
push
daa
or
add
adc
call
add
in
sbb
cmc
add
push
shr
or
sub
sub
sbb
sbb
cld
in
and
shr
call
add
add
leave
add
leave
jmp
and
add
and
in
adc
add
or
sub
add
in
add
int
cld
sti
cli
push
or
in
sbb
push
sub
or
out
sbb
out
adc
daa
add
or
cli
add
push
and
sbb
pop
push
or
call
pop
int
sub
in
or
pop
push
and
pop
and
push
sti
sbb
bswap
adc
into
nop
sbb
adc
in
adc
aad
jmp
or
aad
sbb
or
add
and
leave
add
add
push
and
and
sbb
push
push
add
or
pop
iret
sbb
and
idiv
pop
sub
and
lret
and
and
out
sbb
int3
shr
stc
int
add
aad
push
or
imul
cli
call
push
lsl
or
push
add
int3
into
pop
cli
push
jmp
push
into
push
testb
in
add
aad
add
int3
into
pop
add
or
notl
sbb
pop
sti
leave
push
testb
and
or
sbb
lret
call
in
lock
es
and
jmp
and
and
or
stc
or
es
or
and
sti
sbb
rclb
sbb
add
sbb
testl
or
or
ljmp
in
pop
and
div
out
push
ljmp
and
not
out
lock
add
int3
jmp
push
and
in
add
es
or
jmp
jmp
and
aad
add
testb
or
cmc
sub
nopl
stc
idiv
in
es
add
adc
lock
lock
shlb
sbb
leave
jmp
add
add
test
or
or
adc
cli
in
add
iret
leave
cmc
in
and
daa
sbb
out
sbb
out
in
sbb
adc
add
testl
in
jmp
sub
cmc
cld
and
lock
int3
add
jmp
pop
negl
add
push
sbb
sub
push
or
add
push
jmp
and
lret
or
lock
call
adc
leave
push
or
push
and
jmp
testb
or
lock
push
add
and
sbb
adc
stc
in
lret
and
in
cmc
and
out
or
not
out
push
adc
adc
dec
idiv
incl
or
pop
cld
push
sub
sbb
sbb
push
out
in
or
ljmp
pop
push
out
daa
testl
negl
cld
add
leave
push
adc
or
into
or
or
add
and
or
in
add
cmc
or
cmc
sbb
sub
adc
stc
int
sub
ror
cld
add
iret
sub
cli
cli
sbb
int3
sbb
leave
leave
add
int
and
pop
sbb
and
sbb
out
daa
in
sbb
out
push
sub
and
jmp
cmc
rclb
lret
sbb
and
add
jmp
push
daa
push
sbb
lret
cmc
cmc
or
pop
es
sbb
sub
add
add
and
daa
in
pop
adc
push
rclb
int3
sti
pop
testb
es
rcrb
and
or
pop
psubq
add
push
pop
in
or
cld
adc
sub
add
or
sti
call
adc
leave
add
or
and
in
and
or
add
or
rcrb
push
call
out
or
iret
stc
sbb
into
add
push
or
sbb
push
stc
call
and
add
and
sti
or
add
add
lock
or
add
adc
sub
lock
adc
sub
pop
and
test
call
and
sbb
call
push
div
daa
sbb
pop
in
call
es
and
out
push
in
daa
sbb
into
daa
pop
stc
sti
cli
pop
and
out
cld
adc
imul
pop
cmc
int
or
into
shlb
add
lret
and
pop
add
lock
add
and
or
cld
out
and
cmc
add
and
and
sub
or
add
push
pop
and
in
shlb
pop
ljmp
cli
add
lret
push
add
add
sub
notb
pop
cmc
lret
in
in
add
adc
or
int
push
or
out
add
iret
call
or
int
sub
lret
ljmp
jmp
imul
int
add
lock
sbb
in
out
sbb
or
lret
imul
in
iret
lock
cmc
testl
lret
add
lock
in
aad
sbb
int
sbb
sbb
testl
stc
and
add
or
sar
in
es
add
aad
cli
push
and
and
or
testb
sbb
add
invd
sub
or
cld
int3
lock
sbb
testb
cld
sbb
negb
iret
cli
lret
jmp
rolb
jmp
cld
int
shr
cld
out
add
notl
and
jmp
sbb
sbb
add
in
lret
cmc
or
push
push
add
sti
jmp
cld
int
push
add
and
or
sbb
sbb
out
and
and
cld
call
rcrb
into
add
pop
out
add
add
sbb
and
cli
and
sti
add
jmp
adc
and
push
aad
add
lret
int3
pop
int3
add
aad
sbb
rcrb
testl
or
nopl
sub
and
testb
leave
and
pop
add
ljmp
in
or
push
ljmp
and
negl
add
add
and
test
or
sub
sbb
or
and
in
lock
push
or
es
call
and
and
lret
cli
or
sar
and
sbb
in
sbb
lret
or
add
testl
cmc
call
not
cli
dec
in
cli
add
int
push
adc
imul
out
sbb
sbb
sbb
push
out
sbb
sbb
or
add
lock
into
adc
add
es
paddsb
in
and
adc
or
rorb
sbb
aad
or
sbb
and
lock
sbb
psubq
push
es
in
shr
or
and
jmp
push
lret
sbb
add
and
and
and
lret
or
in
into
out
in
cmc
in
pop
sbb
mull
decl
aad
and
or
or
cld
sbb
lret
psadbw
sub
and
leave
push
int
in
add
jmp
cmc
iret
leave
adc
pop
out
aad
into
jmp
push
and
rolb
lock
or
femms
int3
femms
leave
not
iret
push
and
or
or
sub
or
adc
add
and
push
adc
add
in
or
adc
rolb
adc
rcrb
out
add
call
sbb
adc
and
rolb
or
and
add
into
stc
psadbw
in
lock
leave
adc
add
imul
or
es
and
call
psrld
sbb
adc
leave
and
pop
out
out
push
or
and
cmc
iret
add
lock
pop
int
push
out
int3
or
int3
into
shl
sbb
out
and
cli
and
or
push
cmc
lret
or
add
into
cli
ror
and
adc
or
shl
lret
add
in
add
daa
leave
out
add
sbb
or
shlb
cli
and
add
int3
sbb
imul
push
and
in
testb
lret
add
incl
aad
in
and
jmp
or
shlb
sbb
int3
negb
int3
add
and
or
pop
out
cmc
add
daa
jmp
and
daa
ror
sbb
shlb
test
rcrb
push
rclb
into
negb
movups
lock
push
iret
and
add
int3
add
or
or
rorb
into
out
adc
lret
rorb
in
prefetch
out
and
out
leave
add
in
and
add
sti
leave
sbb
cld
imul
add
and
or
cld
jmp
jmp
and
add
or
adc
push
add
int
cli
shr
iret
out
push
sbb
int3
jmp
pop
cld
out
in
aad
jmp
leave
pop
leave
imul
push
add
out
pop
sbb
cld
and
int
add
add
stc
or
and
and
jmp
sbb
iret
add
es
sbb
sbb
add
rorb
in
cld
stc
push
cli
sti
iret
rcrb
and
push
or
jmp
pop
push
and
or
or
and
pop
add
sbb
sbb
shlb
cli
jmp
sar
push
ljmp
shlb
aad
or
adc
out
es
add
adc
out
sbb
cli
lret
daa
sbb
adc
push
daa
jmp
leave
lret
out
and
sbb
add
and
cmc
sbb
out
or
push
imulb
push
sbb
push
add
testb
pop
call
iret
push
in
cld
cld
out
testl
lock
add
or
sbb
and
sti
in
and
sbb
sbb
iret
add
int
rcl
int
lret
aad
add
add
aad
sbb
leave
or
adc
iret
ljmp
es
add
stc
in
adc
pop
cli
and
out
jmp
ror
lret
pop
in
add
sbb
sbb
or
in
lret
add
and
push
rolb
sub
aad
mull
push
test
or
add
adc
pop
stc
imul
unpckhps
sub
push
or
in
push
or
or
daa
and
and
sbb
or
cli
push
push
jmp
add
or
syscall
add
add
push
in
jmp
add
and
or
cli
and
leave
or
or
or
out
pop
add
stc
cld
adc
or
sar
or
and
sbb
and
in
out
jmp
testb
cli
int
stc
lret
push
add
add
pop
in
or
jmp
sti
in
sub
sub
lcall
jmp
int3
adc
and
lret
int3
ljmp
cld
daa
sbb
and
sbb
add
cmc
jmp
jmp
iret
jmp
sbb
add
and
in
daa
or
and
add
aad
or
or
jmp
in
out
iret
cmc
push
and
and
in
or
sbb
push
ljmp
idiv
adc
lret
and
sbb
push
call
and
push
pop
cmc
in
rolb
es
add
aad
or
notl
push
pop
sub
es
cli
sbb
add
shr
int
and
stc
aad
add
and
jmp
push
cli
lret
add
shlb
rclb
adc
adc
sbb
or
rcrb
ljmp
jmp
leave
and
in
out
pop
pop
ror
add
es
pop
sti
push
push
and
es
or
pop
int3
into
lret
add
sbb
add
or
in
es
rorb
jmp
push
and
lock
and
adc
leave
and
pop
add
stc
in
jmp
iret
lret
add
test
or
add
and
testl
and
lret
push
cli
add
lret
aad
push
jmp
and
add
int3
iret
pop
push
jmp
and
pop
out
and
or
ljmp
cld
sub
or
and
out
jmp
lret
lret
push
push
pop
ljmp
daa
pop
in
sub
daa
ljmp
int
out
adc
add
call
push
and
push
and
add
idiv
and
cld
shlb
cmc
in
adc
add
into
ljmp
cld
lret
stc
call
push
and
add
lock
pop
lret
leave
or
lret
push
and
pop
lret
or
or
leave
add
stc
add
paddsb
or
adc
iret
cli
cmc
sub
cli
imul
pop
add
cld
cli
and
cmc
add
add
or
sbb
in
and
into
push
decl
or
lret
add
and
push
and
adc
or
sub
cmc
and
out
adc
es
and
add
or
sub
aad
daa
adc
lret
int3
adc
shr
and
and
add
and
jmp
int
lret
into
leave
add
add
iret
daa
int3
sbb
int
adc
rorb
cmc
or
cld
add
pop
call
add
jmp
out
and
or
add
or
and
sysret
add
add
sub
or
mov
in
daa
or
pop
out
jmp
add
cld
ljmp
pop
out
out
or
out
in
or
or
add
sub
sti
and
pop
lret
into
and
in
adc
add
daa
add
sti
add
sti
push
sub
pop
and
adc
sbb
lret
add
sti
push
lret
stc
jmp
iret
sub
imul
pop
sar
and
cmc
ljmp
push
or
testb
lret
or
rorb
jmp
into
add
or
add
cmc
or
ljmp
pop
int3
sti
adc
daa
or
add
or
int
or
shr
pop
and
sub
adc
sbb
leave
add
not
sbb
and
int3
add
push
idiv
and
aad
lock
add
add
and
or
lret
out
and
sbb
sbb
ror
pop
int
lret
int
int3
int
add
push
add
cld
adc
or
pop
iret
add
call
and
iret
sbb
or
push
cli
sbb
sbb
leave
add
lret
call
sti
push
and
int3
cld
add
add
jmp
daa
rorb
adc
sti
push
into
sbb
and
cli
and
and
rolb
cld
adc
daa
and
cld
mulb
and
pop
or
int
pop
cld
cmc
jmp
add
in
lock
or
cli
int
or
testb
and
cld
or
paddb
add
or
push
int3
in
lret
push
sbb
add
or
and
add
sbb
sbb
rclb
in
or
sbb
and
out
es
invd
shl
or
cmc
int
and
or
and
sub
cli
or
and
mull
into
sti
test
sbb
into
or
and
movhps
add
sti
adc
push
idiv
or
lret
push
pop
or
in
pop
sbb
and
add
sbb
lret
sbb
jmp
adc
pop
add
stc
sbb
in
sbb
and
add
or
or
or
jmp
leave
add
sbb
lret
sbb
add
out
add
or
iret
adc
lret
in
add
leave
sbb
leave
out
leave
in
sbb
into
or
or
call
cmc
into
cli
add
ror
and
rolb
call
lret
sti
sub
or
sbb
push
lock
or
pop
add
add
push
in
sbb
stc
in
or
lret
shr
out
pop
adc
and
lret
stc
or
sub
push
or
in
pop
push
or
into
sti
negl
adc
pop
sbb
in
rorb
lret
or
and
push
add
sbb
add
add
into
and
sub
and
mulb
cli
adc
or
push
adc
add
shlb
or
or
and
int3
in
sbb
into
cld
or
leave
add
lret
ljmp
in
sbb
sbb
in
leave
lret
sbb
int
call
ror
or
sbb
add
out
and
or
and
stc
add
push
out
push
testl
es
push
jmp
and
out
sub
jmp
add
or
in
or
sti
sbb
es
testb
or
shrb
or
push
in
es
aad
cld
push
push
adc
push
in
add
pop
pop
int
adc
sbb
push
ljmp
out
add
or
testl
or
or
and
adc
and
lret
add
and
and
or
out
or
push
ror
int
pop
aad
add
add
or
negl
in
add
or
and
rorb
negb
and
and
jmp
and
stc
and
ljmp
nopl
call
in
into
and
lret
sbb
dec
add
adc
and
add
pop
and
idiv
incl
or
or
pop
pop
pop
out
push
pop
and
add
adc
and
sti
call
unpckhps
sbb
sbb
in
add
jmp
into
int
nopl
push
out
push
sbb
add
or
and
or
sbb
in
jmp
cld
daa
sbb
lock
out
ljmp
adc
sub
iret
push
pop
aad
stc
out
and
add
cli
push
sti
lock
mov
or
sbb
mov
push
in
and
add
call
push
iret
and
pop
push
and
sub
notl
in
pop
cld
in
cli
aad
or
sbb
sti
sub
into
add
sbb
iret
push
add
in
or
out
out
sbb
call
sbb
ljmp
out
add
cli
pop
iret
out
shl
add
out
es
lret
sbb
cmc
sti
or
cmc
pop
in
jmp
out
rolb
add
cli
add
lret
and
or
jmp
add
out
sbb
sbb
pmullw
or
add
pop
add
add
or
sbb
add
and
stc
add
sbb
cmc
in
pop
push
out
stc
clts
add
in
daa
into
pop
rorb
push
pop
pop
or
and
add
into
or
add
or
add
daa
or
ljmp
adc
and
push
sbb
and
or
sti
add
pop
or
and
aad
pop
testb
shr
push
add
or
out
into
in
add
in
add
in
and
push
iret
movhps
or
decl
call
and
or
adc
or
stc
or
and
add
lret
into
sti
sbb
in
add
or
sar
and
stc
daa
cli
cld
stc
int
sbb
pop
or
or
adc
jmp
add
lcall
or
sbb
or
add
sbb
int
sbb
sbb
sbb
or
cli
add
ljmp
adc
sti
sbb
into
add
in
int3
add
shlb
or
int
cld
add
lock
jmp
pop
sbb
lcall
push
push
cld
and
int3
dec
adc
out
in
int3
sbb
jmp
ljmp
iret
cld
and
or
adc
pop
testb
and
and
int
and
into
or
sbb
or
cli
or
or
cld
and
mull
into
add
call
and
and
and
add
sar
and
notb
or
cmc
or
int3
or
add
and
and
shlb
or
es
rclb
aad
add
add
cmc
add
and
iret
bswap
add
in
adc
and
pop
and
testl
jmp
sbb
push
sbb
and
in
and
and
call
lock
shr
jmp
int3
incl
cli
or
cmc
or
rcl
pop
cld
sti
leave
nop
sbb
adc
sti
call
sbb
push
lret
incl
and
push
sub
cli
pop
jmp
pop
sub
in
and
daa
pop
sti
adc
sub
sbb
sti
pop
aad
or
call
and
shlb
or
negl
or
or
leave
cli
or
lcall
and
push
push
lret
sbb
out
sbb
daa
add
jmp
sub
sbb
out
adc
adc
out
in
lret
in
jmp
push
and
mulb
or
add
int
sub
in
jmp
pop
out
cli
sbb
int3
int
lret
sbb
and
in
psubq
lret
or
add
call
cmc
lret
daa
sbb
cld
or
add
jmp
add
add
in
and
cld
call
add
cli
out
add
cli
adc
incl
and
daa
and
call
rcrb
push
or
add
and
adc
stc
sbb
sub
test
push
add
lock
or
or
lret
int
jmp
or
pop
lret
call
int3
testl
sbb
sti
add
or
cli
rcrb
add
iret
sbb
add
sbb
aad
or
into
jmp
push
and
or
or
lret
ljmp
push
leave
push
sbb
sbb
adc
int
shr
add
add
ljmp
jmp
add
ljmp
push
in
rorb
push
push
lock
or
lret
in
and
or
or
leave
push
int3
and
iret
movlhps
and
push
or
jmp
push
pop
and
in
ljmp
sbb
lret
daa
or
lock
test
or
iret
and
stc
leave
sub
sbb
lret
lcall
in
and
add
add
and
pop
stc
jmp
lock
sbb
sbb
sbb
push
ljmp
sub
adc
and
and
pop
or
call
cld
pop
and
out
add
add
or
jmp
push
lcall
in
imul
lret
into
aad
out
sbb
imul
adc
int3
lret
or
add
jmp
cmc
jmp
sbb
add
adc
ljmp
aad
or
adc
cli
es
shl
or
jmp
into
rolb
and
and
daa
sbb
ljmp
daa
sbb
or
add
lret
pop
jmp
sub
sub
push
add
add
sbb
pmaxsw
jmp
push
push
out
out
pop
or
adc
adc
adc
or
or
add
push
add
pop
cmc
int3
int3
rolb
out
iret
int
sbb
daa
jmp
or
cmc
add
aad
cmc
push
and
iret
cli
or
sbb
jmp
in
or
cld
test
mulb
or
add
sub
pop
and
push
sbb
and
lret
and
sub
add
adc
cmc
push
and
add
cli
pop
jmp
push
int3
into
int
daa
lret
pop
int3
in
jmp
pop
lret
cli
iret
add
int3
and
in
and
add
daa
cmc
cmc
lret
adc
shl
or
or
sbb
aad
int
leave
bswap
adc
sbb
daa
in
pop
lret
push
out
and
and
or
cli
sbb
ljmp
sbb
push
and
out
lret
leave
cld
into
in
rorb
add
and
int3
push
add
push
jmp
and
add
jmp
sti
in
sbb
call
aad
push
bswap
call
movhps
pop
cld
cli
leave
imul
cli
aad
adc
pop
pop
or
pop
add
es
add
and
or
sbb
add
add
or
pop
push
lock
cmc
in
cmc
or
into
or
lock
adc
rcl
jmp
and
push
sbb
pop
aad
in
and
lar
negb
and
lret
pop
int
cld
pop
lret
lcall
and
add
daa
and
ljmp
sbb
or
testl
pmulhuw
push
sbb
cli
shlb
out
add
in
idiv
int3
push
add
es
int
or
and
lret
and
cmc
int
sbb
es
and
and
out
rcl
es
adc
ljmp
into
call
and
cmc
and
int
sbb
es
or
or
test
lret
in
imul
sbb
adc
iret
add
and
add
and
testb
testl
and
leave
and
jmp
sbb
daa
adc
rcrb
pop
in
out
adc
sbb
pop
cmc
or
in
sti
pop
into
or
aad
and
sbb
or
call
and
jmp
in
aad
cld
add
cmc
adc
push
in
iret
or
push
sbb
or
out
daa
lock
and
rorb
sbb
sbb
pop
psadbw
call
and
and
sbb
or
sti
push
add
and
aad
add
daa
jmp
jmp
and
or
and
add
push
in
leave
pop
not
or
int3
pop
add
es
into
int
or
leave
push
and
push
int3
or
sbb
prefetch
or
lret
into
cmc
pop
int3
cli
leave
and
or
cli
int3
and
sbb
or
and
into
adc
adc
lret
push
or
out
cmc
or
aad
cmc
or
add
rorb
sbb
and
lret
ud0
movhps
add
cld
out
cld
es
and
or
lock
leave
int
adc
push
adc
push
sub
add
aad
and
sbb
out
lcall
cli
sti
push
out
add
add
sbb
shlb
iret
add
and
stc
cli
add
in
out
push
add
aad
pop
or
in
adc
rclb
iret
ljmp
jmp
into
rcrb
in
or
or
add
push
aad
add
add
or
cmc
rcrb
push
and
push
sti
lret
call
add
daa
sbb
sbb
mulb
or
testl
rclb
add
or
add
pop
rolb
and
pop
add
sub
leave
and
jmp
add
dec
or
add
into
or
or
sub
in
lock
add
es
pop
jmp
sub
add
pop
in
or
int
iret
sbb
int3
jmp
call
sub
shlb
pop
aad
push
lock
cld
ljmp
int
push
aad
and
rolb
or
int3
in
push
jmp
or
lock
jmp
leave
sti
call
pop
cli
ljmp
aad
adc
and
aad
call
pop
jmp
sbb
sar
in
shlb
lret
test
sbb
adc
int
pop
testb
push
and
add
add
rolb
push
add
push
push
int
es
add
daa
and
daa
in
and
testl
sti
or
jmp
or
es
add
cmc
push
cmc
sub
int
sbb
lock
pop
and
stc
add
cmc
and
aad
stc
cld
rcrb
push
imul
lret
leave
lret
push
push
jmp
rclb
pop
out
in
lock
cmc
cli
in
into
add
sbb
add
push
rolb
sbb
cld
call
mov
or
cli
sub
or
call
test
daa
pop
or
or
pop
sbb
sub
int3
in
push
iret
call
push
bswap
adc
or
or
or
push
in
or
add
and
iret
push
adc
push
jmp
push
in
int
ljmp
shlb
cld
int3
pop
add
ljmp
in
out
and
ror
and
or
psubd
in
sbb
lock
lret
into
push
or
add
jmp
stc
lret
sbb
negb
mov
and
or
and
incl
push
cli
sti
testb
and
es
push
iret
add
ljmp
pop
pop
stc
and
add
in
cmc
add
ljmp
push
int3
sbb
pop
or
pop
cld
and
add
add
jmp
or
push
cli
push
rolb
stc
aad
jmp
and
sti
into
in
pop
sbb
sbb
out
or
push
sbb
or
push
adc
jmp
add
lret
in
lock
sti
push
push
pop
negl
stc
aad
lret
in
iret
or
stc
sar
iret
and
add
shr
sbb
lret
lret
push
and
mulb
or
adc
and
add
and
iret
adc
sbb
add
add
and
sbb
leave
es
add
into
pop
idiv
pop
stc
cld
add
pop
add
pop
in
add
or
or
cld
out
sbb
daa
add
sbb
in
jmp
int3
cli
pop
in
in
or
shl
stc
adc
in
out
stc
out
or
pop
int3
and
or
lret
cmc
sti
es
in
pop
add
and
in
stc
or
adc
or
lret
testl
lret
into
or
adc
lock
sbb
or
daa
clts
rorb
leave
in
or
pop
int3
pop
stc
into
add
lret
ljmp
sbb
in
and
add
cld
sbb
sbb
and
and
testl
out
pop
sub
or
out
and
out
push
cmc
and
sub
mul
and
cld
leave
shlb
add
add
leave
cli
into
or
in
cli
and
sub
rolb
and
out
cld
int
sbb
sbb
and
in
or
sbb
pmullw
lock
int
sti
sbb
sbb
in
push
or
in
pop
or
sti
add
and
lret
call
add
add
jmp
add
int3
or
div
int3
and
lret
es
add
sti
aad
rolb
or
aad
and
sbb
and
and
pop
ljmp
and
add
push
sbb
in
iret
out
testb
in
in
add
or
int
daa
jmp
sbb
and
or
adc
and
add
sti
or
es
lret
or
add
sub
jmp
add
or
in
or
and
pop
and
pop
sbb
in
adc
or
pop
in
add
stc
into
add
and
int3
in
stc
ljmp
daa
daa
pop
cld
add
or
or
int3
lsl
and
adc
sbb
add
ljmp
add
into
jmp
push
shr
lret
stc
in
adc
bswap
sub
or
es
cmc
push
leave
sti
in
add
or
sbb
and
out
or
or
in
out
stc
push
int3
lret
pop
sbb
iret
pop
and
mov
iret
and
and
sti
add
jmp
int
and
adc
nop
or
add
cmc
iret
add
shlb
pop
sbb
lock
nop
or
lret
adc
daa
pop
test
cmc
into
in
or
or
es
psubd
sbb
sbb
sbb
out
or
mov
and
iret
in
and
add
out
push
cld
iret
aad
ror
cmc
out
push
push
and
leave
cli
and
int
add
cli
jmp
adc
call
and
or
lret
adc
add
or
sbb
cld
or
jmp
sbb
and
adc
ljmp
push
lret
aad
aad
in
call
in
lret
shr
pop
sbb
adc
push
and
and
and
sub
sti
daa
stc
and
or
add
or
out
jmp
jmp
jmp
and
cmc
sbb
push
int3
add
cli
and
int
and
adc
in
lret
pop
cmc
push
sbb
cli
and
add
add
adc
and
iret
cli
in
add
iret
adc
in
push
int
add
leave
or
lret
add
push
or
or
or
or
shr
push
call
daa
push
and
lcall
sbb
and
sub
push
add
push
sub
aad
iret
and
and
lret
adc
lock
out
or
stc
sub
daa
cmc
adc
push
leave
or
int
add
push
adc
int
cli
add
iret
cmc
rorb
pop
stc
es
sub
incl
and
in
in
or
in
int3
rcl
jmp
in
int
and
pop
cld
daa
int3
in
lret
imul
daa
add
es
iret
aad
add
shr
or
push
sbb
sbb
push
and
daa
jmp
cli
out
cli
add
jmp
adc
stc
add
or
in
jmp
stc
or
sbb
shlb
cli
and
add
or
lock
add
shlb
sbb
in
es
and
or
push
leave
invd
int3
into
or
push
push
lock
lret
pop
add
sbb
out
sti
and
ljmp
cli
ljmp
out
pop
lret
sbb
and
or
pop
pop
rclb
pop
or
or
imul
int3
int3
pop
push
leave
pop
in
pop
sub
and
jmp
and
adc
dec
jmp
add
and
daa
push
sbb
sbb
and
shr
and
add
or
push
add
sub
shlb
push
and
adc
sti
push
lret
or
imul
add
add
or
push
add
or
and
out
or
int
and
and
or
or
int3
int3
sti
and
or
into
add
ljmp
sbb
add
jmp
sbb
es
int3
sub
call
and
call
cmc
out
jmp
lock
sbb
or
and
and
daa
sbb
add
mulb
testb
add
push
int3
or
in
or
aad
lock
int
or
adc
rorb
out
rcrb
pop
es
mull
or
and
sti
in
ljmp
ljmp
add
pop
int3
sbb
daa
and
call
ud0
push
jmp
or
add
or
into
add
leave
add
push
or
sti
add
or
or
push
in
in
add
pop
push
add
lret
call
not
or
sti
or
sbb
in
add
in
out
sub
rclb
leave
and
or
idiv
cli
add
add
or
into
into
cmc
add
rcrb
in
and
ljmp
push
and
rcrb
or
cld
stc
cld
rolb
in
add
cmc
or
call
leave
leave
push
or
add
sbb
out
sti
jmp
in
lret
or
lret
and
into
and
add
and
ljmp
or
rorb
call
sbb
pop
jmp
sbb
pop
sbb
adc
or
push
and
in
add
in
sti
sbb
daa
into
pop
ror
jmp
lock
out
push
iret
jmp
stc
and
pop
add
cli
add
add
out
cli
iret
aad
rcl
pmulhuw
leave
push
and
into
pop
notb
and
ljmp
pop
jmp
add
pop
sti
add
and
lret
or
lret
push
add
or
in
add
or
push
jmp
and
leave
or
lock
call
add
pop
cld
push
push
or
stc
sub
jmp
and
push
call
add
add
add
or
lock
lret
or
add
lret
push
add
or
or
adc
sti
and
or
and
leave
out
out
push
aad
rcl
in
in
int3
ud0
pop
stc
cmc
rclb
and
int3
sbb
and
add
sti
sbb
cld
or
sbb
cli
and
and
jmp
and
stc
sbb
shr
cli
and
and
sbb
in
call
adc
iret
adc
sbb
es
or
pop
int3
bswap
lret
lock
sbb
lret
adc
in
sub
or
cld
and
pop
in
stc
cli
push
or
pop
pop
sbb
or
or
push
lret
leave
shr
cld
or
movaps
and
in
add
in
jmp
push
test
and
sbb
push
push
push
or
and
daa
jmp
or
add
rcrb
shrb
out
and
jmp
lret
pop
lret
in
sti
pop
add
and
add
add
pop
add
or
add
or
add
ljmp
lock
jmp
and
aad
add
cld
call
ljmp
int
in
and
pop
pop
or
int
push
iret
in
add
and
or
jmp
out
cli
leave
sub
cmc
imul
and
pop
sbb
or
add
sbb
and
sti
and
stc
or
daa
add
sti
pop
sbb
sbb
ud0
and
in
wbinvd
cli
aad
into
cld
aad
and
jmp
rcrb
push
lret
cli
pop
test
in
lret
or
out
and
shr
or
rolb
leave
int
adc
and
push
testl
lret
call
cld
div
or
or
div
test
jmp
cmc
or
out
in
aad
cli
add
or
call
in
out
or
push
pop
add
cld
add
in
es
or
out
sub
push
not
and
sbb
add
pop
in
rcrb
in
sbb
in
lock
in
dec
int3
push
cmc
and
lret
iret
mulb
or
int
int
sbb
int3
sbb
in
lret
sbb
cld
sbb
push
jmp
sbb
push
into
out
push
in
ljmp
sbb
cmc
add
pop
ud2
and
sbb
iret
pop
add
out
push
mulb
in
in
pop
add
adc
test
add
and
or
add
push
stc
add
add
and
sub
pop
pop
push
add
or
or
or
int3
aad
lock
or
add
jmp
in
aad
out
or
es
stc
daa
or
lret
add
iret
aad
cli
aad
leave
pop
stc
and
jmp
out
add
ljmp
or
or
daa
push
sbb
es
lret
out
push
and
rorb
out
sbb
sbb
add
and
lock
and
jmp
ljmp
and
stc
ud0
into
call
in
sub
sbb
jmp
sbb
sbb
or
in
add
mov
iret
push
lret
in
in
jmp
and
stc
push
cld
in
int3
add
out
sbb
push
int3
out
or
pop
or
in
lret
jmp
pop
and
or
jmp
lret
or
int3
add
cmc
lret
int
or
and
and
or
or
and
into
add
lret
and
sub
sti
and
pop
sbb
push
add
or
cmc
and
jmp
or
or
and
push
push
push
and
int
push
pop
es
or
testl
pop
pop
leave
or
stc
and
cli
sbb
int3
sar
int3
adc
leave
or
push
cld
or
add
and
int3
add
and
es
jmp
ljmp
int
lret
sbb
lock
daa
push
pop
int3
idiv
add
adc
sbb
leave
sbb
add
rolb
or
in
out
and
cli
leave
sbb
and
and
int3
push
and
stc
in
lock
cmc
ror
daa
push
adc
dec
cld
in
cli
and
or
call
pop
daa
lsl
add
add
leave
iret
out
add
int3
lcall
adc
add
adc
jmp
sub
and
in
or
in
out
out
idiv
cmc
lock
lock
out
cld
pop
leave
lret
pop
and
in
idiv
daa
ljmp
push
add
cld
pop
push
and
sbb
cld
and
or
push
cli
ljmp
in
adc
push
add
add
sub
aad
rcrb
cld
shlb
pop
lock
cmc
sbb
sbb
add
add
sbb
or
and
pminsw
lret
and
or
or
lret
and
cmc
mulb
or
ljmp
sub
sti
div
sbb
pop
add
imul
or
and
and
cli
and
add
sbb
shlb
sbb
in
sbb
jmp
out
pop
and
sub
cld
lcall
lock
or
out
or
jmp
into
shl
or
sbb
sbb
decl
int
or
testl
daa
daa
in
sti
sbb
add
int
lock
adc
testb
jmp
movhps
push
push
sti
call
jmp
in
sbb
and
cmc
leave
stc
add
pop
sbb
lret
sti
out
or
push
add
and
lret
in
push
int
and
and
sti
jmp
lret
add
and
pop
and
push
aad
lock
and
and
cmc
add
sti
sbb
lock
and
or
in
es
add
pop
pop
or
jmp
add
or
testb
push
add
or
and
jmp
testl
pop
cli
out
leave
aad
add
or
call
iret
iret
add
or
cmc
into
add
rcrb
daa
and
add
in
adc
add
pop
and
or
or
daa
sub
or
daa
or
jmp
sbb
or
or
add
and
add
or
or
and
add
add
or
sub
add
in
stc
int3
and
aad
iret
and
or
lret
adc
add
and
in
in
daa
cli
into
negl
or
out
into
or
and
rolb
daa
and
and
and
add
sbb
adc
cld
pop
sbb
or
jmp
sbb
pop
leave
daa
cmc
int3
or
shlb
sbb
cmc
and
int
cld
sti
cld
int3
pop
add
lret
push
or
adc
sub
ljmp
in
jmp
push
lock
pop
jmp
lock
and
lret
or
or
push
and
or
jmp
lret
or
in
call
dec
cld
imul
pop
or
out
iret
add
or
into
leave
in
stc
or
pop
push
lret
add
iret
add
push
in
leave
push
rorb
push
sbb
sub
or
push
cmc
sub
or
add
int
and
lock
cli
stc
int3
lret
cld
in
leave
out
aad
and
and
add
or
sbb
or
sub
or
lret
incl
daa
sbb
push
int
cld
jmp
and
incl
pop
sbb
sbb
lock
add
lret
jmp
sar
cld
call
daa
adc
leave
and
pop
sbb
or
out
mull
out
or
pop
pop
es
out
sbb
out
sub
es
sti
add
and
or
lock
rorb
add
cld
int3
incl
iret
lret
add
in
cmc
in
ljmp
leave
add
push
sti
out
in
and
int
imul
or
add
daa
and
rclb
psadbw
and
sbb
sbb
adc
sti
add
or
pop
aad
lret
cld
pop
shr
add
lret
ud2
add
and
in
push
in
and
or
or
or
or
or
sub
or
lret
leave
and
int
push
and
push
in
and
out
or
out
incl
es
pop
push
or
out
in
and
sbb
pop
aad
and
sti
and
add
aad
push
jmp
call
push
cli
pop
cli
push
sti
daa
pop
or
pop
and
push
ljmp
ljmp
cli
out
push
add
add
and
adc
or
ljmp
cld
shlb
and
add
sti
in
leave
in
stc
or
stc
add
lret
sti
pop
rorb
lret
out
add
sar
or
int3
pop
or
add
or
and
cmc
sbb
into
and
cld
adc
and
stc
or
cld
or
mulb
or
or
aad
push
ror
add
leave
adc
sbb
add
lock
and
bndldx
daa
out
push
in
or
push
jmp
sti
or
sbb
into
imul
push
int
and
in
in
daa
shr
iret
push
imul
add
push
shrb
pop
add
and
cld
in
sti
push
lret
int
pxor
or
ljmp
or
push
cld
sti
or
cld
or
es
or
pop
int
pop
sbb
sbb
call
ljmp
or
adc
jmp
cmc
iret
and
imul
add
ror
push
or
int3
testl
testb
call
and
div
jmp
or
push
cmc
push
in
and
int
add
and
out
call
jmp
pop
rcl
add
sbb
stc
and
adc
int3
add
lret
add
dec
sti
or
add
rcrb
stc
in
cmc
iret
pop
leave
call
and
ljmp
and
and
iret
test
pop
lret
or
int
and
add
and
out
lret
out
or
and
push
cld
out
or
and
push
jmp
jmp
lret
aad
add
sbb
sti
out
sub
sbb
into
adc
div
or
sbb
sbb
and
push
add
or
sbb
in
or
ror
or
and
jmp
and
and
adc
push
sbb
out
shr
pop
push
sub
ljmp
push
or
and
add
add
lock
shl
and
iret
add
sbb
cmc
or
pop
sti
cmc
pop
and
jmp
and
add
lret
or
stc
and
daa
add
daa
leave
lret
shlb
lock
and
notl
testl
add
jmp
or
cld
push
jmp
cld
sub
or
cmc
sbb
sti
push
or
call
adc
into
or
or
daa
ljmp
and
ror
or
call
in
and
pop
out
pop
lret
sub
and
cmc
push
sbb
not
in
leave
int
por
lret
int
sub
aad
push
and
lock
call
and
push
idiv
leave
call
sbb
in
adc
pop
adc
shrb
pop
push
sbb
into
or
aad
or
cmc
in
sbb
lret
pop
push
sbb
sti
in
testb
push
add
or
add
or
adc
adc
sti
iret
lock
add
int
add
adc
shr
add
add
adc
push
and
imul
cli
adc
and
push
or
in
jmp
lret
and
or
jmp
jmp
adc
jmp
jmp
or
int3
and
sbb
adc
and
stc
or
test
bndstx
add
cld
aad
lock
adc
cli
adc
add
int3
sar
adc
ljmp
lret
add
sbb
sbb
push
adc
int
negl
add
add
sub
call
cmc
iret
adc
int
and
jmp
push
rolb
pmaxsw
push
add
stc
ud2
or
and
sbb
rorb
or
pmaxsw
sbb
and
jmp
test
in
or
or
in
pop
lock
and
add
add
int
add
int3
or
lret
stc
sub
stc
rorb
and
rcrb
clts
pop
ljmp
sub
sbb
out
and
jmp
sti
sbb
bswap
in
es
or
iret
adc
bndldx
sbb
iret
add
or
int3
into
adc
pop
out
and
nop
out
adc
dec
add
sbb
and
int
jmp
sbb
sbb
add
sbb
add
add
daa
and
push
jmp
or
ror
out
and
stc
adc
in
sub
sbb
or
or
add
or
and
dec
iret
add
and
lret
adc
in
lret
and
iret
and
in
rclb
leave
add
adc
rorb
and
or
in
decl
sub
jmp
and
push
or
iret
or
cmc
lock
into
and
in
out
sub
add
pop
cld
cld
and
lret
jmp
lret
int3
add
lock
push
jmp
in
cli
int
cld
sbb
lret
sbb
add
push
push
out
push
adc
add
or
push
ljmp
or
int
add
and
and
or
lret
sbb
out
lret
leave
aad
lret
sub
sbb
dec
or
push
cmc
cld
sti
sub
add
pop
pop
add
sbb
and
daa
in
sbb
add
adc
and
call
int3
in
sbb
iret
lcall
out
pop
out
add
test
cli
testb
or
sti
lret
sbb
sub
add
sbb
lock
add
pop
add
or
sbb
aad
test
jmp
or
sbb
sbb
cli
in
and
or
add
or
daa
add
push
sti
daa
push
int3
daa
sub
pop
add
stc
lret
add
sbb
or
pop
jmp
pop
ljmp
and
and
add
adc
rolb
or
in
or
iret
add
lret
add
negl
and
iret
push
adc
and
add
or
in
jmp
int3
or
add
push
not
pop
push
add
and
jmp
push
adc
jmp
lock
lret
push
ror
push
in
shlb
stc
add
push
int
sbb
add
push
or
and
call
jmp
test
lret
sbb
and
and
incl
iret
rolb
add
sbb
cld
ljmp
in
out
lret
out
into
adc
and
add
or
pop
pop
or
in
and
and
lock
sub
sysret
sbb
and
add
push
and
cmc
cld
out
push
or
push
into
add
sbb
aad
add
and
negb
sbb
cli
add
aad
cmc
and
imul
out
and
push
or
pmaddwd
adc
sbb
and
lret
pop
stc
adc
pop
and
adc
push
pop
add
add
aad
sbb
sbb
sti
cli
in
rorb
sti
int3
call
or
in
lock
or
shlb
sbb
sbb
pop
add
sbb
adc
sbb
in
sbb
call
push
and
lsl
adc
add
sbb
cld
call
lret
shr
int3
and
cli
leave
lret
add
or
in
pop
rorb
or
sbb
add
adc
mov
or
sbb
cli
cmc
cli
daa
push
lret
leave
and
decl
add
or
in
mull
cli
cmc
dec
or
and
or
aad
add
lret
negl
push
or
lcall
into
jmp
lret
mulb
add
mull
out
into
add
add
call
or
rorb
into
stc
cld
and
int
jmp
sub
es
call
add
adc
push
adc
in
daa
or
or
mul
sti
sbb
pop
push
int3
pop
rcrb
cmc
maskmovq
negl
push
and
leave
iret
bswap
and
sbb
daa
and
or
decl
call
jmp
push
in
sbb
in
out
cli
pop
into
sti
psubq
push
call
in
int3
pop
jmp
negb
int
push
out
in
dec
add
daa
sbb
push
add
shr
int3
sti
iret
adc
or
pop
rorb
sbb
out
and
cli
testb
and
add
or
in
cld
and
and
push
leave
sbb
adc
cld
ror
into
and
and
and
psrld
daa
stc
sub
add
or
lret
lret
and
and
or
push
add
leave
iret
jmp
int3
adc
into
testb
add
in
adc
or
shlb
adc
aad
decl
push
lock
pop
lret
and
jmp
jmp
sbb
adc
in
or
iret
sbb
add
add
sbb
int3
sub
and
and
and
pop
sbb
in
adc
push
sub
or
in
invd
call
add
aad
and
call
int3
sub
add
add
stc
and
pop
call
int3
pop
cli
in
sbb
jmp
jmp
add
add
dec
int
adc
jmp
or
adc
out
or
call
negl
and
or
and
mulb
push
in
lret
lock
and
and
pop
incl
rclb
add
daa
es
or
or
stc
es
pop
add
cld
and
push
rcl
daa
out
cmc
or
cli
int3
es
adc
and
and
out
es
and
and
add
stc
daa
or
push
adc
and
decl
add
cli
in
or
or
or
add
cli
or
sbb
pop
pop
stc
or
and
adc
testb
call
aad
in
call
incl
add
cli
into
add
push
and
push
lock
or
femms
or
jmp
cld
rclb
or
sti
testb
lret
push
out
adc
and
and
shl
int
ror
push
or
daa
and
ror
out
pop
adc
int
int
stc
or
add
add
out
rorb
sbb
pop
cli
sbb
leave
add
bswap
or
and
lret
and
add
or
and
or
int
in
es
in
jmp
jmp
jmp
call
and
in
add
pop
negl
add
cmc
or
lret
and
ljmp
daa
leave
adc
add
or
int3
sbb
call
sbb
and
sbb
testb
and
lock
jmp
int
add
out
or
int3
and
add
jmp
and
into
and
sti
jmp
into
add
and
leave
in
and
sbb
aad
and
rorb
out
sbb
push
shr
push
push
add
jmp
pop
sbb
and
ljmp
and
and
jmp
sub
add
aad
pop
daa
paddsw
pop
in
stc
lret
ljmp
psubw
ror
or
push
pop
cmc
sti
sbb
int3
pop
add
and
cli
testb
and
adc
int
adc
sub
sbb
jmp
pop
mulb
sbb
add
sbb
pop
cld
add
aad
and
pop
psubq
sti
into
testl
sbb
dec
int
lcall
sbb
or
unpckhps
or
sbb
and
in
add
and
into
or
add
adc
sub
push
or
add
out
jmp
and
and
es
or
jmp
cmc
add
iret
or
ljmp
es
rcrb
sub
sbb
and
int
pop
and
lret
not
and
shr
pop
and
or
or
jmp
leave
or
int
push
sti
adc
int
add
add
push
int3
or
add
pop
int3
add
sbb
lret
sbb
add
add
daa
lock
pop
push
and
add
sub
in
sti
int3
add
or
ljmp
lret
add
sbb
and
stc
and
sar
push
jmp
jmp
int
int3
in
daa
into
or
ljmp
jmp
mul
add
leave
lock
or
stc
stc
lock
or
aad
ljmp
and
call
call
sti
push
pop
push
pop
prefetch
or
and
leave
or
jmp
in
sbb
or
push
in
int3
jmp
and
int3
in
ror
in
sub
aad
add
push
int3
or
incl
int
pop
sbb
add
pop
sub
add
and
stc
sbb
cld
add
lock
or
into
push
out
and
and
and
push
int3
ljmp
int3
into
add
ljmp
out
and
pop
call
int3
sbb
sbb
adc
push
cli
es
negb
lret
in
or
push
add
sbb
adc
testb
lock
and
sti
out
daa
into
add
in
iret
cld
int
add
add
in
pop
and
sbb
cmc
iret
pop
in
adc
into
pop
and
rorb
div
and
leave
lret
jmp
jmp
daa
and
int3
adc
adc
into
add
and
adc
or
mul
and
bswap
aad
add
ljmp
stc
add
and
dec
pop
or
and
add
push
and
add
sbb
or
iret
out
rcl
into
int
lock
and
push
push
leave
and
pop
or
sbb
imull
in
adc
pop
add
jmp
add
into
and
cld
push
pop
add
sub
sbb
lret
and
lock
lock
add
add
stc
nop
rolb
int3
out
out
daa
lock
jmp
pop
add
pop
ljmp
adc
and
add
sti
or
add
add
add
testl
lret
adc
and
shr
into
in
or
nop
adc
ljmp
not
es
adc
lock
cmc
in
add
pop
add
sbb
int3
and
sti
not
in
div
push
and
jmp
or
push
push
test
or
rolb
stc
add
iret
in
leave
jmp
cld
shlb
cld
into
cmc
int
call
and
call
push
or
in
rcl
add
and
int
push
div
movaps
and
lcall
jmp
aad
jmp
add
sbb
in
adc
sbb
add
lret
adc
sub
stc
sbb
add
sti
test
negl
adc
add
sbb
cli
adc
rclb
and
sbb
or
jmp
and
push
ljmp
jmp
or
rcrb
and
iret
iret
add
jmp
lock
lret
push
sbb
jmp
jmp
mov
sti
and
unpckhps
in
cli
in
cmc
in
and
leave
adc
aad
add
or
daa
adc
ljmp
and
add
call
jmp
and
ljmp
pop
push
cmc
sub
out
call
ror
iret
daa
iret
add
sbb
stc
in
pop
lret
lret
or
push
add
and
jmp
push
and
sbb
pop
leave
not
add
or
cli
sbb
shr
cli
add
add
into
iret
lret
call
into
and
lret
out
lret
or
or
add
add
add
add
sbb
lock
adc
or
sbb
sbb
ljmp
sub
in
or
sbb
or
and
or
cld
cli
sub
aad
imul
leave
leave
add
in
movhps
push
or
push
push
cmc
pop
ljmp
sbb
pop
sub
add
into
in
pop
and
push
or
pop
in
push
lret
lock
add
sbb
stc
sbb
lock
lret
or
leave
stc
in
in
leave
jmp
aad
and
leave
add
aad
int
int3
sbb
pop
notb
shr
mov
into
cli
and
sbb
ljmp
or
out
int3
or
or
int3
and
in
add
int
rclb
push
lock
push
and
push
lcall
lret
cli
or
iret
push
ror
out
or
adc
pop
or
add
push
add
and
sbb
psubq
idiv
add
aad
push
sar
push
sub
push
shlb
sbb
lcall
adc
stc
lock
and
call
pop
lret
stc
pop
and
and
adc
aad
add
lret
in
and
push
cld
in
or
es
push
and
out
cld
stc
adc
into
cmc
into
cld
add
es
add
push
leave
sbb
iret
leave
or
and
or
leave
sbb
lret
int
push
in
daa
shl
iret
sub
push
and
in
sub
leave
int
or
and
add
or
sbb
add
lret
or
jmp
daa
or
add
sti
stc
in
and
out
and
int
pop
lret
out
or
and
add
adc
daa
leave
add
leave
or
sub
and
cld
pop
add
adc
and
incl
into
add
sbb
sub
push
out
int
rclb
and
and
in
cld
and
or
sti
add
add
in
jmp
leave
and
or
sub
pop
into
lret
es
add
in
adc
testl
pop
int
lret
pop
movaps
sub
adc
iret
call
leave
daa
cli
add
lret
adc
into
in
jmp
testb
sysret
leave
jmp
or
sub
push
push
and
push
testb
and
or
mull
or
in
sbb
and
add
and
sbb
pop
psubsw
add
imul
sbb
push
add
daa
out
daa
idiv
push
push
lret
paddsb
and
or
iret
or
adc
daa
in
jmp
or
and
add
es
or
cmc
push
or
sbb
push
es
push
or
daa
or
push
lret
and
and
and
sti
and
adc
out
add
in
and
or
out
push
add
rcl
jmp
jmp
or
or
sbb
ror
clts
out
sbb
in
pop
idiv
ljmp
ror
and
jmp
sub
and
push
pop
cli
pop
or
and
add
or
int3
cmc
and
out
push
and
and
cmc
push
leave
sub
pop
add
add
push
add
in
daa
and
or
aad
bswap
ror
pop
adc
sti
in
add
push
sbb
iret
out
and
sti
and
cld
cld
and
and
and
ljmp
sub
pop
cld
out
and
and
lock
jmp
or
lock
aad
add
add
adc
and
push
call
call
adc
lret
ljmp
aad
add
or
daa
stc
lock
jmp
div
es
lock
push
daa
and
or
and
lret
daa
sub
and
out
and
add
add
sbb
add
iret
sub
and
cmc
daa
ror
adc
int3
pop
lret
add
cld
stc
lock
out
and
and
and
ljmp
and
or
add
push
daa
sub
and
cld
add
leave
pop
pop
or
push
push
add
es
iret
bswap
stc
testb
adc
cli
add
push
leave
cld
iret
in
cld
add
notl
aad
or
push
sbb
in
aad
out
shr
aad
sub
ljmp
ljmp
and
or
aad
adc
sbb
push
sbb
sti
and
add
add
add
push
cld
out
shlb
cli
out
leave
in
es
jmp
cmc
push
in
call
add
and
imul
cmc
add
not
ljmp
or
in
and
out
int3
lock
and
into
ljmp
es
rcrb
sbb
adc
cld
add
or
in
and
stc
adc
push
stc
add
ljmp
lock
leave
pmulhuw
sbb
cmc
add
push
pop
or
iret
testb
out
into
and
cld
jmp
notb
aad
jmp
pop
push
stc
mov
in
sbb
jmp
and
sti
ljmp
add
call
or
sbb
cld
or
call
negl
out
notl
out
stc
leave
push
or
stc
push
or
push
add
aad
sbb
es
rorb
and
stc
and
add
sbb
into
adc
out
or
and
test
jmp
stc
push
out
out
pop
add
push
idiv
in
cld
or
call
daa
and
or
and
and
stc
jmp
add
int3
idiv
add
add
jmp
int
in
add
sub
add
out
int
in
add
and
in
or
or
dec
negb
in
in
in
and
and
add
pop
in
and
in
pop
and
aad
add
and
adc
sbb
push
leave
add
or
adc
or
or
or
add
pop
testl
or
or
int
lret
and
lret
cli
pop
and
pop
in
push
pop
add
int
or
add
sbb
add
sbb
int3
ror
and
out
sbb
adc
lret
sti
ror
or
daa
imulb
es
es
push
and
add
add
jmp
aad
sti
aad
and
cld
adc
or
negb
in
daa
or
sub
add
add
or
daa
in
push
add
sbb
and
pop
iret
jmp
in
negl
sti
out
lret
sbb
cld
call
out
add
jmp
in
or
pop
ljmp
and
or
sbb
in
lock
iret
or
add
cld
push
aad
jmp
add
or
out
int
add
pop
in
in
shlb
push
and
call
cld
add
and
call
cmc
or
sti
cmc
sbb
push
in
cmc
push
in
div
add
out
and
pop
nopl
and
in
out
rorb
adc
out
decl
ljmp
in
adc
or
pop
and
or
jmp
push
call
or
jmp
push
add
sti
lock
int
and
pop
rorb
sub
sub
leave
es
sbb
add
cmc
push
in
daa
cmc
or
sbb
into
daa
and
decl
jmp
out
in
leave
lock
add
and
in
add
es
or
adc
cmc
in
or
add
push
es
daa
in
or
push
into
cmc
add
or
lret
in
pop
and
testb
add
or
sti
and
cmc
leave
add
sbb
and
int3
shl
adc
testb
lret
int3
or
or
push
add
sti
out
push
cld
rcrb
and
or
jmp
notl
stc
bswap
stc
sar
stc
or
and
iret
into
or
in
paddsb
sbb
sub
cli
or
push
lret
cli
lret
cld
sti
into
or
cld
add
rcl
call
and
and
pop
sbb
testb
out
and
or
or
cli
and
lret
push
sbb
and
pop
cli
add
and
call
jmp
es
rcrb
out
sti
call
sbb
out
sbb
adc
iret
lret
call
push
adc
push
into
lret
jmp
in
out
add
pop
cmc
add
lret
or
cld
mulb
lar
pop
aad
aad
and
daa
into
sbb
sbb
pop
cmc
add
and
or
add
or
out
out
cli
or
rclb
lret
sbb
sbb
ljmp
stc
in
sti
and
pop
jmp
and
or
es
jmp
out
int3
in
lock
sbb
leave
adc
sbb
int
and
testb
or
add
call
in
and
adc
lret
out
or
push
lret
lret
sbb
es
in
out
cli
call
sbb
push
iret
sbb
sbb
or
into
and
push
push
leave
daa
and
push
stc
lock
or
adc
sbb
sbb
or
or
lock
int3
add
sbb
and
in
into
adc
out
stc
es
or
adc
es
and
jmp
test
and
sti
leave
sbb
cli
imul
in
es
and
iret
and
add
or
sbb
stc
add
sbb
pop
adc
add
push
add
leave
add
daa
lret
negl
or
or
out
add
add
aad
in
daa
or
cli
and
push
or
leave
int
out
es
add
push
in
sbb
int
in
adc
sbb
stc
adc
sub
bswap
shlb
jmp
lret
adc
add
push
and
out
and
or
or
int
sbb
sbb
iret
leave
add
leave
add
push
rclb
out
lret
out
sbb
sti
add
sub
in
sti
pop
pop
or
or
or
lock
cli
daa
and
adc
cli
push
and
add
lock
push
and
jmp
in
rcrb
jmp
sbb
cli
or
add
sti
out
and
push
lock
in
and
es
in
lret
and
cld
pop
or
ljmp
int
es
out
push
cmc
call
iret
add
and
and
or
lret
cli
push
or
push
cmc
sub
rorb
add
or
add
or
idiv
sbb
daa
pmulhuw
add
lock
iret
add
int3
sbb
and
ljmp
ljmp
jmp
cld
rolb
lock
adc
lret
sti
add
add
or
out
maskmovq
shl
call
daa
cli
or
and
sbb
add
sbb
incl
sti
pop
cld
call
or
sbb
sbb
in
or
sbb
and
shr
cli
and
push
cmc
add
adc
jmp
daa
or
push
add
or
sbb
adc
sbb
stc
ljmp
daa
or
or
shr
or
adc
or
notb
sbb
adc
aad
sub
aad
push
add
int
cli
add
and
and
testl
testl
rcrb
cld
leave
out
push
and
int3
stc
lret
iret
and
add
out
aad
add
lock
in
pop
sub
and
adc
or
and
push
out
add
sbb
aad
iret
cli
and
lret
aad
lret
jmp
cld
sti
out
call
aad
rolb
lret
cld
pop
adc
lock
or
or
jmp
push
push
pop
pop
and
out
and
call
push
sbb
sub
add
pop
int3
rolb
lock
sbb
and
or
adc
sti
decl
and
or
lret
shr
in
lret
ror
cli
push
in
push
shl
and
and
lret
in
add
add
or
es
out
push
in
sbb
or
add
lock
sbb
push
push
pop
cli
sbb
and
push
sbb
adc
push
pop
testl
sti
call
sbb
sbb
sbb
in
and
aad
and
jmp
in
add
iret
and
jmp
lret
add
out
or
and
sbb
push
and
sbb
add
sti
sub
lret
int3
daa
stc
sbb
jmp
ljmp
in
in
out
jmp
into
cld
pop
pop
pop
add
and
push
pop
cmc
add
add
add
aad
adc
sbb
cli
adc
or
out
daa
adc
in
mul
add
pop
bswap
push
stc
or
es
es
push
and
or
adc
or
and
out
sbb
leave
push
or
cmc
shlb
pop
cmc
out
sbb
pop
sar
add
add
out
cmc
sbb
lock
in
bswap
iret
add
or
add
add
or
push
es
add
ljmp
cli
adc
or
pop
lret
adc
cmc
cld
sbb
out
sbb
int3
cli
iret
and
out
lret
sub
or
out
push
add
or
aad
es
int3
cmc
into
nop
sub
adc
psubsw
push
pop
test
stc
or
and
in
int
and
and
or
lret
adc
mull
jmp
lret
sbb
or
sub
or
adc
push
out
in
push
adc
pminsw
es
cmc
and
test
call
call
push
or
sbb
pop
test
add
sbb
or
leave
cld
in
sbb
pop
and
adc
sbb
cli
lock
pxor
call
pop
or
int3
iret
into
or
shr
push
iret
lsl
or
or
or
in
jmp
aad
into
call
or
pop
test
sbb
sbb
or
add
ljmp
out
or
out
sbb
out
in
shlb
bswap
add
lock
and
or
and
and
lret
add
sbb
es
testb
decl
negl
in
cli
add
add
rorb
lret
iret
call
push
rcrb
pop
or
lret
cmc
sti
aad
test
adc
sbb
jmp
cmc
add
adc
imul
stc
testb
or
and
and
call
or
cmc
mulb
pop
push
cld
sbb
add
sbb
push
and
lock
and
out
or
int
sub
or
rorb
int3
imul
lret
pop
add
or
push
movaps
pop
shl
and
int
and
in
and
push
ljmp
in
daa
sbb
or
iret
add
jmp
and
out
jmp
call
sbb
int3
stc
into
es
push
leave
push
pop
and
pop
or
and
cli
in
int
int
adc
int
add
or
add
sbb
add
sbb
int3
pop
ljmp
sbb
aad
rcrb
sbb
add
and
out
shl
shr
push
lret
or
and
or
or
in
pop
negb
adc
into
in
pop
adc
testb
int3
and
sti
adc
adc
int3
int3
or
push
push
cli
rolb
or
sbb
lock
add
adc
adc
or
or
aad
jmp
add
and
jmp
mov
add
sbb
leave
call
sar
daa
leave
idiv
rolb
daa
in
lcall
and
or
and
int3
or
add
in
aad
push
push
and
in
and
iret
adc
adc
pop
div
out
lock
int
in
pop
and
cli
or
sbb
or
add
and
add
or
es
in
and
and
and
lret
cli
ror
or
adc
add
into
call
or
push
add
push
stc
int
jmp
or
jmp
ror
or
daa
sbb
ljmp
sbb
or
leave
or
in
adc
int
out
and
add
in
or
rorb
adc
adc
daa
negb
or
push
or
or
in
decl
leave
call
sbb
pop
lock
and
push
adc
adc
out
daa
lock
or
ljmp
lret
add
int
wbinvd
cli
add
add
push
call
int
ror
in
and
and
and
daa
or
add
jmp
test
ljmp
int3
not
iret
pop
testl
ror
in
sbb
add
leave
and
mulb
int3
mulb
int
push
add
cld
in
or
in
sti
push
add
sbb
or
and
ljmp
lret
or
and
lock
add
sbb
leave
sbb
leave
lock
testb
add
pop
lock
cmc
leave
push
negl
and
sti
pop
and
pop
cli
out
or
es
or
invd
or
pop
in
jmp
push
cli
or
pop
add
aad
int3
pmulhuw
int
jmp
in
push
in
daa
add
into
lret
or
sbb
rcrb
jmp
aad
or
jmp
int3
push
or
es
or
shlb
aad
and
lret
sbb
sti
add
cli
cli
push
bswap
stc
shr
add
or
out
pop
or
iret
push
jmp
and
cld
push
jmp
mulb
and
imulb
push
int3
pop
call
jmp
and
out
add
and
sbb
iret
pop
sti
cli
in
sbb
add
adc
push
call
adc
lret
daa
adc
add
lret
pop
lcall
lret
testl
incl
pop
and
es
sbb
add
sbb
and
cli
es
int3
sti
and
lret
and
cli
adc
cld
lret
pop
push
add
push
sub
iret
push
push
sbb
bswap
sbb
int3
push
in
and
ljmp
leave
sbb
pop
paddsb
out
or
cld
pop
add
into
cmc
and
iret
and
sbb
add
jmp
add
cmc
and
daa
pop
pmullw
lret
sti
shr
in
and
es
adc
rolb
leave
sti
stc
mull
pop
and
int3
lret
adc
int3
push
and
rcl
and
shr
call
or
pop
push
and
in
jmp
cli
aad
push
call
sub
and
into
pop
or
push
and
es
testl
int3
int3
push
lock
leave
iret
into
add
sbb
pop
rcrb
lret
add
add
add
lret
stc
pop
or
push
iret
and
not
sub
into
pop
sub
add
add
mulb
in
aad
adc
lret
ljmp
in
add
cld
call
into
and
lret
out
es
in
and
int3
lret
or
add
in
int
and
push
add
testl
leave
shlb
daa
pop
ljmp
cmc
cmc
dec
or
lock
into
add
push
sbb
add
add
in
rolb
lock
push
sbb
in
or
in
lret
es
out
jmp
and
or
jmp
and
or
push
pop
int3
add
daa
int3
sti
iret
adc
ror
cli
and
add
add
push
lock
pop
push
lret
rolb
shl
out
or
jmp
or
sbb
lcall
lock
lret
aad
lock
or
or
or
testb
in
and
in
lret
ljmp
sbb
or
pop
and
push
push
add
testl
and
push
sbb
cmc
sbb
and
and
and
add
pop
sub
add
int3
and
add
or
int3
mulb
push
aad
test
and
or
int3
and
and
rclb
daa
or
adc
or
test
cmc
add
push
iret
ljmp
or
rorb
or
cmc
lret
in
rclb
sub
into
sbb
in
test
stc
cli
adc
push
sbb
int3
pop
adc
call
adc
and
and
pop
lock
in
add
and
sub
cld
or
shr
or
int
adc
adc
into
and
lret
pop
push
out
add
or
and
imul
and
stc
stc
pop
daa
add
paddsb
es
push
jmp
int
and
sbb
or
and
sti
and
or
sbb
into
or
or
negb
in
sub
or
sub
mulb
add
add
call
int
or
or
int
sbb
into
daa
add
add
and
add
add
or
lret
iret
in
and
and
sti
push
and
in
lret
sub
in
or
iret
rorb
jmp
push
sti
lock
jmp
or
add
add
jmp
sbb
lret
test
stc
aad
aad
into
add
push
sar
and
or
or
pop
leave
sbb
iret
and
iret
or
stc
add
int
not
cli
sbb
out
in
sbb
sbb
and
out
lock
out
push
and
or
and
add
sbb
cli
iret
bndldx
and
iret
add
imul
or
or
idiv
in
push
cld
negl
push
in
idiv
jmp
rolb
out
leave
or
or
sbb
lret
shrb
push
or
and
in
call
push
sub
jmp
iret
sbb
ljmp
pop
or
sbb
add
out
adc
ror
int
sbb
stc
adc
sbb
aad
lret
or
in
or
in
sbb
out
es
and
lcall
add
and
add
ror
add
and
leave
push
cld
testb
and
or
ljmp
sbb
sti
add
add
pop
lock
rolb
add
pop
add
or
and
in
and
sbb
pop
adc
es
push
cld
or
and
adc
pop
int3
sbb
stc
leave
and
pop
out
cld
push
sbb
lret
and
add
daa
and
stc
stc
lock
sub
add
add
add
sbb
or
add
adc
daa
jmp
or
and
stc
adc
push
leave
push
and
or
in
and
jmp
into
or
ljmp
out
daa
or
int3
and
or
and
sbb
into
push
iret
aad
add
and
leave
pop
cmc
stc
into
ljmp
testl
daa
or
add
pop
stc
push
leave
sti
lock
call
sbb
or
int
and
in
push
leave
sbb
and
lret
in
and
sbb
test
sub
jmp
testb
or
sti
and
and
in
pop
negl
cld
jmp
and
negb
or
cld
add
sbb
and
aad
or
add
pop
add
adc
sti
cli
and
and
iret
push
aad
in
adc
or
testl
sbb
add
pop
leave
int
or
psubd
push
adc
iret
in
push
cld
sbb
add
push
jmp
adc
lock
sar
in
testb
int
or
and
add
and
out
sbb
sti
or
int3
cmc
add
or
sbb
sbb
dec
lret
into
cli
and
leave
adc
ljmp
not
adc
pop
out
int
adc
push
int3
cld
push
aad
lcall
jmp
or
int
out
and
add
negl
lldt
lret
and
out
and
shlb
lret
ljmp
and
bndldx
aad
in
add
lret
or
sbb
push
or
sbb
or
leave
iret
negb
or
jmp
pop
and
aad
int
cmc
push
ljmp
or
or
push
cld
and
sub
push
and
int
cld
pop
cmc
push
push
push
pop
out
in
sbb
add
lock
por
or
or
pop
add
pop
pmulhuw
into
and
add
aad
call
lret
sbb
into
into
leave
sbb
jmp
add
out
into
pop
and
rclb
cli
add
pop
sar
into
and
iret
jmp
or
add
lret
lret
sbb
sti
into
in
or
pop
daa
sbb
lret
iret
add
iret
and
testb
add
int3
out
bswap
aad
or
pop
add
lret
cld
jmp
testl
push
sbb
rolb
sbb
sti
pop
and
stc
and
bswap
or
and
int
int3
adc
mulb
and
lret
push
or
pop
cld
sti
and
and
and
lock
cli
sbb
int3
or
add
and
sbb
sbb
jmp
pop
push
sbb
cmc
or
and
in
or
or
in
pop
lret
in
cmc
and
sbb
iret
pop
and
push
push
cli
add
in
in
pop
push
iret
out
daa
pop
push
or
daa
sbb
adc
add
sti
and
pop
out
and
in
aad
lret
out
daa
in
add
jmp
push
call
iret
in
lret
out
and
ljmp
call
aad
aad
ljmp
cmc
lret
ljmp
add
push
int
daa
adc
int
jmp
sbb
sub
or
out
daa
pop
test
push
add
into
jmp
pop
incl
jmp
sbb
cli
lret
testl
cld
incl
jmp
in
into
add
call
or
pop
and
idiv
sti
rolb
pop
pop
or
or
push
and
syscall
and
and
and
lret
add
dec
jmp
cli
and
jmp
and
out
and
aad
push
or
sbb
cld
and
or
sti
or
adc
or
add
or
sub
sar
push
add
and
cmc
or
leave
add
add
rorb
int
and
in
in
sti
and
cmc
shlb
out
adc
pop
es
daa
in
push
aad
or
and
shr
push
in
add
sbb
or
jmp
or
add
lock
and
into
jmp
iret
or
adc
push
stc
or
call
or
stc
or
iret
jmp
pop
call
or
sbb
out
call
or
lock
sti
add
add
and
and
jmp
div
int3
and
sbb
leave
add
es
idiv
into
or
lret
adc
stc
aad
cld
cli
into
push
and
and
sbb
out
daa
jmp
aad
add
pmullw
cld
add
dec
or
mull
and
and
daa
int
push
ror
shlb
int3
in
in
pop
lret
or
cld
aad
rorb
pop
push
pmaxsw
push
incl
and
or
jmp
cmc
cld
int3
in
add
or
ror
shlb
and
jmp
pop
jmp
and
adc
add
in
lock
and
and
add
leave
and
jmp
adc
add
in
sbb
or
pop
in
add
call
add
aad
sbb
or
rclb
sar
pop
and
leave
or
pop
sub
or
or
sbb
add
and
lcall
and
imul
lret
lret
or
or
sti
testl
movhps
sub
out
and
call
and
pop
out
or
and
and
sbb
idiv
es
leave
or
incl
cmc
into
sti
call
in
and
adc
adc
ljmp
testl
into
or
cli
sub
leave
or
and
sbb
and
jmp
sbb
add
cld
or
or
and
sbb
or
ljmp
es
out
or
in
int3
jmp
syscall
push
pop
sbb
cli
add
in
call
cmc
push
or
sbb
daa
int
out
or
in
leave
push
sysret
pop
sbb
and
pop
jmp
sbb
testb
jmp
or
jmp
pop
jmp
leave
stc
shl
into
or
and
shlb
in
push
and
es
or
jmp
lret
sar
and
daa
push
daa
add
add
aad
pop
out
or
and
iret
and
daa
lret
sti
add
and
leave
add
sti
push
push
cli
or
and
out
and
or
add
and
push
lret
lret
sbb
adc
push
rolb
add
sbb
sbb
daa
into
lret
cld
shlb
jmp
cld
add
or
leave
sub
aad
es
and
out
testb
jmp
iret
or
push
push
sbb
and
pop
and
testl
in
daa
and
jmp
cmc
push
and
pop
call
es
shl
imul
add
or
in
and
lret
int
aad
push
test
add
iret
prefetchw
leave
and
out
call
push
and
daa
or
push
add
and
pop
or
add
es
iret
notl
and
add
sbb
jmp
sbb
leave
add
pop
ljmp
lret
jmp
daa
and
and
unpckhps
in
in
or
and
add
push
and
rcl
not
pop
jmp
and
lret
int3
rorb
push
ljmp
sbb
mulb
shl
add
adc
and
cld
and
lret
adc
leave
lret
aad
and
cmc
push
push
push
and
or
and
cli
adc
and
in
int3
out
int3
leave
in
or
add
or
or
leave
or
pop
call
sbb
shr
es
pop
rolb
out
stc
into
stc
sub
sbb
and
adc
aad
lret
sti
in
in
in
nopl
add
sbb
sbb
into
add
cld
daa
testb
add
lret
out
push
not
daa
ljmp
ljmp
cmc
in
ljmp
out
and
add
sbb
adc
push
push
in
lock
idiv
daa
jmp
out
leave
es
or
cmc
push
jmp
add
str
mulb
push
or
out
push
push
decl
add
in
iret
push
and
into
and
daa
or
or
and
or
int
jmp
into
sbb
and
in
pop
and
iret
cmc
out
aad
rorb
push
out
add
and
sbb
jmp
add
or
and
or
shlb
and
or
and
jmp
sub
adc
add
cmc
out
jmp
add
or
pop
pmaddwd
sbb
in
or
or
and
push
por
jmp
in
aad
cli
lret
add
and
pop
stc
or
sub
jmp
adc
or
lret
sbb
in
lock
out
wbinvd
sti
or
lock
jmp
cld
cld
add
in
and
sti
nop
sbb
ljmp
or
jmp
add
in
pop
call
call
add
in
iret
push
jmp
cmc
add
lret
add
add
or
and
int
push
or
add
clts
shr
and
push
add
int3
out
pop
sti
sbb
add
adc
or
sti
pop
cli
iret
sbb
sbb
push
out
and
add
or
push
into
add
cli
cmc
sub
pop
testl
adc
push
push
lsl
add
and
push
and
int3
not
and
ror
out
push
add
pop
adc
jmp
cld
and
int3
leave
out
cld
ljmp
or
add
out
out
cld
cld
pop
or
or
lret
sbb
es
call
or
push
leave
sbb
adc
in
push
or
in
iret
iret
or
or
add
add
add
jmp
es
in
out
adc
or
or
push
sti
out
in
and
call
int3
ror
shr
imul
jmp
stc
and
sbb
cmc
add
add
call
rolb
daa
and
push
pop
in
jmp
leave
leave
pop
daa
es
lock
into
add
jmp
es
cli
out
sbb
out
lret
into
or
in
add
cld
push
out
push
add
call
int3
iret
add
cld
in
int3
shlb
sar
jmp
in
add
and
out
or
cld
cmc
cmc
add
call
and
and
cli
adc
in
push
sbb
push
cld
into
or
sar
pop
in
ljmp
in
jmp
int3
pmulhuw
int3
out
rorb
sbb
add
decl
add
cmc
and
pop
add
add
push
stc
stc
int3
add
and
out
call
sbb
push
jmp
lret
not
pop
or
pop
and
and
add
jmp
and
jmp
adc
jmp
div
and
stc
and
in
or
lret
pop
push
dec
es
out
and
or
ljmp
in
shr
add
push
into
add
in
and
daa
into
sbb
test
iret
int3
testl
or
cli
sbb
daa
in
or
shr
imul
and
jmp
sti
notb
pop
push
or
leave
into
in
push
out
add
or
sbb
out
into
leave
push
pop
push
add
or
pop
in
push
es
out
iret
jmp
or
or
add
pop
or
or
and
in
sti
and
daa
call
stc
and
push
push
or
sti
jmp
cld
push
jmp
or
or
add
out
leave
add
add
and
cld
es
ror
mull
cld
lret
aad
push
add
lret
aad
add
push
in
sbb
out
and
jmp
sbb
pop
or
pop
out
push
ror
lret
add
out
in
jmp
or
ljmp
push
ljmp
or
aad
adc
sub
jmp
pop
sbb
out
push
or
adc
pop
push
into
in
push
adc
cli
add
cmc
imul
out
add
iret
pop
or
es
ljmp
sub
pop
add
sbb
lret
in
int
or
add
push
sbb
cli
call
sbb
call
iret
es
int3
push
leave
in
push
push
int
pop
sbb
idiv
call
adc
rolb
rolb
jmp
and
in
int
or
or
es
add
cld
stc
jmp
iret
cli
leave
push
and
jmp
aad
aad
sub
out
add
iret
or
adc
aad
or
cmc
lock
shlb
or
add
or
sbb
pop
and
and
imul
lret
and
int
pop
or
or
and
cmc
out
in
shlb
in
jmp
decl
negl
cli
adc
add
int
adc
add
sub
testl
out
add
int3
and
and
or
sbb
or
lret
sbb
lret
pop
sbb
out
jmp
push
sub
sbb
add
testl
pop
or
pop
cld
lret
cli
push
adc
sub
cmc
iret
out
sbb
add
and
int3
and
push
int3
add
and
pop
push
or
push
sbb
testl
sbb
sbb
and
or
pop
or
in
cmc
rclb
and
or
add
or
pop
into
call
pop
pmullw
into
jmp
or
push
and
adc
test
sbb
and
int
push
or
add
pop
into
rolb
cmc
ljmp
cmc
and
cmc
stc
sti
out
sbb
add
add
sbb
adc
sbb
jmp
push
or
leave
es
add
and
sbb
stc
push
or
rcl
int
int3
iret
cld
or
and
push
daa
out
sub
cli
rorb
and
push
lock
lret
push
add
pop
push
push
and
and
add
in
or
daa
daa
es
sub
and
push
aad
add
jmp
adc
daa
leave
lret
sub
por
pop
add
maskmovq
psubd
pop
and
sbb
or
sbb
lret
leave
dec
leave
or
adc
push
cmc
bswap
leave
into
or
syscall
or
shl
add
sti
test
in
adc
adc
into
and
and
imul
stc
or
imul
or
pop
into
or
out
add
in
int
call
lock
push
paddsw
or
sbb
call
stc
sbb
jmp
or
or
add
and
pop
in
or
aad
pop
and
int
testb
pmullw
or
out
testb
sub
es
add
or
ljmp
iret
add
es
and
leave
daa
daa
ljmp
dec
or
and
or
sbb
add
in
lock
sub
add
pop
sbb
or
int3
pop
push
cmc
or
jmp
add
or
into
out
leave
and
call
add
out
ljmp
sar
into
or
and
sti
add
stc
leave
and
rolb
into
or
pop
or
out
and
push
es
or
add
push
into
aad
lock
int3
push
rcrb
push
jmp
div
in
leave
call
int3
ror
es
pop
add
add
add
int3
adc
push
daa
push
sbb
pop
int3
or
or
or
sub
leave
adc
pop
and
jmp
cld
add
ljmp
add
stc
aad
pop
lret
lock
int
sbb
mull
sbb
in
into
aad
add
in
int
sidtl
cmc
ljmp
sti
sbb
lret
cmc
in
push
add
es
and
sti
add
or
adc
daa
lock
shr
jmp
cld
stc
push
out
int
in
lret
and
push
push
jmp
stc
lret
push
and
jmp
push
in
out
and
or
and
rolb
testb
sbb
cmc
or
lret
negl
add
sbb
sbb
iret
or
in
add
sbb
cld
add
lock
and
sbb
sbb
and
add
lret
add
and
adc
pop
jmp
iret
and
adc
into
adc
out
pop
add
int3
cld
rcl
or
lret
or
int3
psubq
sar
and
or
and
and
and
push
pop
leave
or
stc
sub
add
sbb
and
add
in
shlb
aad
lret
and
and
sbb
or
or
mulb
and
ljmp
and
and
add
sbb
rcrb
cli
cld
sbb
push
pop
and
add
or
push
or
int3
and
or
adc
add
add
cld
leave
iret
push
cld
decl
testl
add
call
aad
add
adc
int
aad
add
pop
adc
sbb
lret
lock
incl
out
syscall
stc
in
stc
in
sti
cli
shl
and
jmp
in
lret
add
cli
jmp
adc
push
in
cli
add
adc
in
cmc
cli
cli
add
lret
lock
int
in
sbb
pmaxsw
add
add
sub
or
push
push
sti
lret
add
testl
sub
lret
leave
and
pop
add
lock
add
and
and
or
and
sbb
sub
add
and
push
or
in
aad
lret
int
or
sbb
call
sbb
idiv
push
jmp
add
pop
sti
int
sti
lret
in
sbb
add
testb
cli
push
pop
cmc
and
jmp
lret
out
and
lcall
lret
sti
or
out
iret
lret
or
int
adc
sbb
sti
in
daa
daa
int
lock
sub
aad
out
add
cli
into
or
sbb
cmc
and
cli
testb
psubsb
shl
rorb
jmp
adc
pop
int
pop
lret
pop
test
sbb
in
pop
sbb
cld
or
or
lret
and
add
ljmp
leave
ror
push
sbb
in
out
int
ror
lret
or
push
daa
and
push
sbb
leave
out
add
lret
ljmp
sar
add
cmc
es
or
out
cld
pop
sbb
and
in
add
sti
or
aad
push
push
pop
ljmp
lret
iret
sar
adc
add
testb
or
cmc
or
pop
sbb
add
out
ror
or
pop
add
lret
in
sbb
and
and
or
int
sti
or
and
add
or
and
out
rcrb
and
sti
sbb
push
adc
add
shlb
aad
sbb
rclb
pop
add
add
call
cld
pop
pop
in
or
or
call
or
and
and
jmp
sti
and
incl
into
or
add
add
or
or
out
or
add
adc
add
add
in
add
pop
or
stc
in
or
add
lret
cli
stc
and
pop
or
jmp
es
lock
pop
and
lret
pop
sti
and
call
push
and
sbb
or
and
add
and
or
add
paddsw
or
add
lret
shl
iret
or
pop
adc
pop
sub
sbb
int
or
and
push
call
or
sti
or
or
add
in
out
in
or
leave
lret
sub
cmc
idiv
and
add
and
int
cld
pop
or
pop
incl
adc
bswap
cmc
in
sub
push
or
call
adc
daa
and
and
cli
and
add
or
lret
cld
and
add
sbb
lret
add
lock
and
sti
int3
add
cmc
rcrb
call
or
jmp
cld
in
add
pop
add
pmulhuw
lock
and
pop
and
in
add
cmc
pop
push
or
in
ljmp
out
sbb
sub
lock
sar
out
pop
pop
stc
int3
and
and
and
jmp
pop
in
or
daa
es
nopl
es
add
adc
add
sub
jmp
pop
int
jmp
cld
pop
and
aad
call
shr
or
lock
sbb
or
aad
es
sbb
out
add
or
into
and
stc
out
mulb
ljmp
and
or
cli
rcrb
in
incl
sar
lret
in
sbb
ljmp
sbb
pop
out
es
cmc
and
add
and
or
pop
push
add
add
or
or
lock
mov
daa
add
adc
in
not
and
leave
push
lock
sub
cmc
cld
and
or
add
leave
add
pop
out
es
and
sub
lcall
cld
add
sub
or
and
jmp
lret
lret
pop
add
sti
or
or
and
ljmp
es
cld
jmp
and
and
es
or
and
shl
sbb
and
notl
or
cmc
ror
ljmp
add
iret
pop
and
cmc
or
lret
cmc
adc
notl
add
pop
push
sti
and
sti
and
add
ljmp
leave
daa
into
or
jmp
add
add
sbb
or
in
call
sbb
or
push
sbb
cli
daa
push
add
iret
or
pop
lock
out
or
add
or
int3
or
sbb
ljmp
pmullw
sbb
adc
add
in
and
pop
or
in
cmc
jmp
push
or
push
into
daa
int
add
leave
daa
add
or
or
int3
push
in
pop
testb
jmp
and
and
or
or
ljmp
lock
in
push
stc
out
iret
jmp
aad
or
cli
int3
and
sub
cld
and
and
push
or
pop
out
lock
sub
rclb
or
add
sti
and
pop
add
add
pop
or
or
and
sbb
aad
int
add
add
int3
stc
jmp
add
lock
or
leave
int
and
pop
add
int
sub
add
push
daa
cmc
push
es
sbb
stc
call
adc
pop
add
add
add
into
cld
out
lret
sbb
daa
int
push
shrb
pop
or
rclb
add
cld
push
and
and
sub
add
sbb
and
in
or
and
cmc
mov
negb
sti
or
lret
testl
cld
adc
add
push
jmp
in
and
sti
call
and
pop
call
push
push
pop
lret
leave
iret
rorb
add
in
sbb
cld
rolb
add
pop
pop
cld
adc
and
cmc
out
in
rolb
and
cmc
push
out
jmp
and
sub
call
add
sti
imul
pop
sti
sub
es
pop
testb
add
add
adc
cmc
stc
lock
rcrb
into
or
or
add
out
sbb
lret
aad
shlb
sub
shrb
negb
rolb
cld
sbb
sbb
aad
in
or
jmp
iret
testb
adc
sbb
out
add
add
add
lock
pop
add
add
stc
incl
or
sbb
sbb
into
idiv
and
ror
pop
add
jmp
jmp
shr
or
pop
push
in
ljmp
cmc
cld
add
and
int
sti
and
stc
ljmp
sbb
sbb
and
pop
adc
cld
and
ror
and
push
or
or
jmp
negb
iret
ljmp
or
leave
adc
lcall
sbb
pop
sbb
testb
iret
and
int
aad
or
daa
push
call
jmp
and
pop
es
cld
add
sti
sbb
in
jmp
adc
sti
testb
and
cld
or
push
into
cli
jmp
rorb
ljmp
out
and
pop
add
aad
bswap
rolb
lret
stc
and
iret
ljmp
and
pop
in
add
add
call
out
pop
es
in
or
pop
add
and
and
jmp
and
or
push
add
or
call
sysret
es
and
out
cmc
sbb
sbb
pop
jmp
add
sti
adc
or
rclb
testb
in
pop
pop
daa
in
into
rorb
cmc
mulb
cli
adc
pmullw
or
or
testb
pop
sub
or
jmp
test
or
lret
add
and
add
add
sbb
or
lret
dec
sti
pop
es
pop
and
ljmp
stc
sub
and
ror
and
or
jmp
jmp
add
cli
in
add
add
call
and
cli
iret
sbb
sti
pop
and
into
into
add
imul
es
or
lock
cmc
es
push
push
lret
push
or
push
daa
push
push
jmp
es
push
sbb
in
add
dec
and
rcl
es
cld
and
rclb
and
and
not
int3
in
cld
or
push
int
push
es
add
lret
cld
cli
cld
push
add
and
not
pop
into
pop
add
pop
add
ljmp
jmp
daa
int
iret
pop
aad
add
aad
or
push
out
call
leave
push
call
add
stc
cld
into
in
cli
sbb
iret
add
push
cld
sub
in
adc
imul
adc
lock
or
add
in
int3
cld
jmp
rcl
shlb
lock
cld
lret
cmc
add
push
sti
out
pop
int3
int
and
sti
or
aad
add
mull
or
daa
sbb
or
and
in
in
adc
sbb
cmc
lret
and
sbb
nop
pop
add
add
in
add
cmc
aad
jmp
add
push
lock
cmc
push
jmp
rcrb
leave
lret
sbb
and
cli
sbb
sbb
adc
and
or
add
out
out
sbb
pop
and
and
incl
sbb
add
sbb
rclb
add
in
add
and
sbb
rcrb
or
cld
int
add
or
jmp
push
in
jmp
int3
and
stc
testl
stc
test
aad
es
stc
push
push
push
push
pop
daa
stc
leave
and
or
pop
cld
and
add
es
negl
in
adc
or
or
lret
in
add
lret
shl
add
or
in
or
sbb
and
sti
rolb
or
sbb
and
lret
add
in
push
add
test
and
jmp
into
es
and
and
pop
shr
add
add
push
and
or
and
or
pop
in
daa
pop
pop
add
int
and
push
in
push
jmp
and
push
into
in
shlb
sub
cli
pop
add
or
jmp
ljmp
push
psubd
pop
into
adc
and
es
add
pop
sbb
lret
call
and
sti
cli
aad
and
sbb
in
add
and
aad
and
or
sbb
pop
and
sbb
add
cld
out
add
adc
int
jmp
daa
and
and
aad
sti
ljmp
lock
and
adc
sub
or
or
add
in
and
pop
adc
call
pop
add
and
and
add
or
lret
pop
nopl
add
sbb
daa
or
and
push
not
psubsw
or
pop
push
invd
push
push
ljmp
call
adc
sub
aad
push
add
push
stc
daa
out
daa
sbb
add
add
jmp
sbb
out
push
in
push
add
iret
add
pop
add
or
ror
into
jmp
cld
add
push
cld
add
sbb
pop
or
push
add
ljmp
ljmp
cmc
call
test
or
sbb
nop
push
into
stc
or
pop
or
and
lret
in
in
in
jmp
push
lret
in
sbb
adc
ljmp
push
daa
ljmp
out
or
and
cli
in
and
in
not
stc
ljmp
or
sbb
cli
or
or
sub
int
jmp
lret
adc
leave
add
push
stc
and
in
or
jmp
out
jmp
int3
push
leave
and
sti
pop
aad
or
and
int
adc
in
or
out
int3
daa
call
test
in
int
or
in
add
pop
into
lock
cld
in
pop
push
sbb
sbb
in
and
cld
ror
pop
and
ljmp
or
adc
pop
ljmp
cmc
pop
out
leave
in
ljmp
and
es
or
shlb
pop
jmp
push
push
daa
imul
sbb
sbb
ror
or
call
add
or
sbb
or
add
aad
cli
iret
and
pop
and
cli
es
es
or
sub
sub
add
es
pop
or
in
and
add
or
jmp
in
pop
aad
sub
adc
leave
sar
call
aad
out
negb
stc
rcrb
rorb
or
jmp
adc
in
or
testb
into
sub
int3
and
int
push
or
and
cmc
sbb
pop
iret
push
int
into
sub
adc
pop
push
aad
or
or
and
in
or
int3
stc
push
sbb
cli
leave
jmp
sbb
or
sbb
jmp
rcl
sbb
int3
in
or
jmp
not
add
or
lock
push
shlb
negl
aad
add
call
es
add
pop
or
lret
add
lret
and
add
or
pop
movaps
add
jmp
push
jmp
pop
pop
sub
mov
daa
int
daa
sbb
adc
cli
push
rcrb
adc
pop
into
jmp
push
in
sbb
int3
out
adc
into
adc
add
or
ljmp
in
add
iret
sti
negl
adc
not
int3
pop
push
cmc
sbb
in
pop
sti
es
ljmp
in
push
push
adc
sub
testb
leave
daa
pop
and
add
or
push
push
push
sbb
aad
or
and
pop
sbb
add
es
bswap
aad
cld
leave
jmp
pop
add
pop
add
out
or
rorb
push
push
aad
and
jmp
sbb
in
cli
call
or
add
in
sub
or
pop
pop
out
int
sub
testl
in
and
ror
add
push
sbb
into
pop
add
cli
push
in
or
int
or
lret
lock
lret
out
int3
sbb
jmp
daa
lret
in
or
cld
into
add
in
jmp
add
aad
stc
sub
out
and
call
pop
or
and
and
lret
jmp
lock
shl
iret
leave
notb
daa
stc
bswap
and
add
pop
lret
dec
pop
not
or
out
or
jmp
int3
iret
cli
cld
ljmp
sbb
and
call
into
jmp
sbb
jmp
or
and
add
sbb
jmp
sbb
cmc
or
aad
pop
iret
int3
push
testb
add
and
push
cli
adc
or
or
lret
out
leave
idiv
adc
add
add
or
jmp
add
aad
add
into
and
call
iret
add
jmp
push
ljmp
adc
out
notb
add
stc
adc
and
and
add
in
daa
iret
into
daa
add
daa
add
or
lret
pop
call
nopl
and
and
cli
and
or
adc
or
into
rcl
out
lret
stc
and
dec
in
jmp
psadbw
daa
add
es
sbb
stc
incl
or
cli
add
sar
or
push
and
push
add
cmc
and
adc
out
sbb
pop
add
cli
ror
int
int3
ljmp
sbb
lret
add
push
or
or
cld
lock
or
or
push
and
add
add
sti
or
and
cld
sub
adc
lret
negb
aad
add
sub
adc
adc
and
pop
push
into
pop
cld
and
add
cli
and
pop
adc
lret
es
sbb
or
call
out
testb
sub
negb
int
or
iret
femms
add
sti
add
sub
add
push
in
sti
push
adc
lock
or
pmaxsw
stc
not
and
add
cmc
or
sbb
push
or
jmp
pop
stc
add
clts
leave
or
or
int3
and
or
daa
iret
lret
sbb
cli
or
test
or
idiv
call
leave
leave
sti
es
push
sti
or
and
add
or
push
leave
and
out
sub
sub
pop
iret
sbb
add
and
push
sti
into
testl
add
call
sti
ljmp
cli
add
int
in
mulb
push
adc
push
push
iret
or
cli
in
push
cmc
cmc
maskmovq
lret
into
lret
call
push
or
iret
out
cld
sbb
or
sti
add
ljmp
and
or
dec
call
testb
cli
iret
testb
and
or
sbb
add
sti
add
and
lret
sub
cli
ljmp
cli
cmc
rcrb
or
sti
daa
testb
sbb
sbb
jmp
or
sbb
out
or
lret
in
es
or
lret
lret
in
push
add
iret
sbb
sti
or
push
stc
pop
out
daa
int3
aad
push
shlb
into
ljmp
add
leave
add
or
lock
negl
jmp
in
iret
push
testb
sbb
ljmp
push
sbb
and
and
sti
sbb
int
add
ud0
add
add
or
or
or
add
cli
or
and
add
push
adc
sbb
or
add
into
sbb
jmp
sbb
lret
negb
sbb
push
and
add
or
into
rclb
ljmp
or
push
cld
and
cmc
and
push
iret
lock
pop
testl
es
call
push
or
adc
adc
sbb
and
leave
cli
or
int3
in
push
jmp
push
cmc
jmp
daa
and
stc
stc
leave
lret
out
or
push
in
and
sbb
cli
sbb
in
call
and
and
stc
or
or
in
call
push
in
and
ljmp
mull
adc
in
add
daa
add
lock
pop
sti
maskmovq
lret
sub
stc
sub
add
lock
iret
daa
add
add
cld
pop
pop
sbb
int
cld
daa
push
leave
cli
jmp
pop
or
and
in
sub
daa
ljmp
aad
leave
testl
sbb
sbb
cmc
stc
add
and
testl
out
or
sbb
cld
call
daa
and
and
push
add
pop
or
jmp
adc
pop
sti
int
and
or
push
daa
or
adc
sbb
or
add
out
in
and
in
jmp
aad
and
sar
pop
aad
es
ror
call
push
lock
adc
add
cli
add
or
ljmp
add
daa
shlb
aad
shlb
and
testl
add
ror
adc
lret
cld
sbb
push
or
cmc
rolb
in
sbb
sbb
in
ror
in
out
in
or
stc
add
and
pop
daa
lret
adc
ror
adc
int
push
cld
daa
and
cmc
cmc
jmp
add
or
daa
in
in
adc
lret
out
push
add
add
sbb
cld
add
push
jmp
adc
or
lock
add
add
aad
adc
pop
or
int3
pop
test
daa
int
into
sbb
smsw
and
iret
out
add
call
cmc
and
pop
lret
and
add
add
add
int3
daa
out
mull
pop
jmp
sbb
sbb
add
sbb
add
aad
leave
in
cld
sbb
add
jmp
out
into
into
and
leave
in
add
out
es
lock
adc
and
jmp
sbb
int
pop
push
add
iret
add
add
aad
pop
push
in
or
add
adc
and
add
into
sub
iret
in
cmc
verw
add
int
int
push
iret
push
or
add
push
cmc
add
stc
sub
in
in
es
adc
cli
sbb
adc
and
jmp
rolb
sbb
cld
aad
or
add
and
pop
ljmp
or
sbb
out
in
ljmp
jmp
and
or
adc
and
add
pop
adc
iret
cmc
stc
in
sbb
push
out
mull
sub
lret
add
leave
pop
push
es
pop
adc
jmp
sbb
jmp
incl
lock
lsl
add
not
int
into
and
push
sbb
iret
push
int
lret
sub
sbb
push
add
in
push
in
push
cld
sbb
jmp
add
rorb
and
add
negl
adc
lret
or
or
idiv
and
or
push
cld
lret
lret
and
jmp
sbb
pop
lock
daa
push
int3
and
lock
in
add
push
add
out
add
ror
add
add
or
ljmp
sbb
add
call
add
push
sti
add
cmc
lret
cmc
or
jmp
pop
push
cmc
ud2
lock
add
and
push
ljmp
sti
and
lock
sbb
stc
lret
call
int
push
or
sbb
cli
or
mulb
aad
sub
cld
add
and
sbb
push
push
call
adc
jmp
out
iret
sub
jmp
and
int3
adc
sbb
add
int
lret
or
lock
sti
leave
or
or
pop
ljmp
or
push
jmp
sub
or
in
int
and
add
negl
pop
and
and
add
or
jmp
push
add
jmp
lret
in
sbb
and
imul
paddsw
and
sti
add
pop
push
push
and
sar
in
lret
cld
cli
or
push
add
call
in
push
sub
test
call
or
or
or
testl
jmp
stc
ljmp
in
add
or
add
pop
sbb
rcl
sti
sbb
in
lret
push
pop
mov
or
in
add
cli
push
in
push
leave
div
es
notb
push
and
shlb
and
or
out
daa
incl
pop
pop
bswap
or
aad
add
pop
add
add
adc
int
or
iret
and
and
es
lret
es
sub
or
pop
cld
and
int
add
aad
or
cmc
in
and
int3
or
rolb
push
add
add
and
testl
or
jmp
cld
jmp
in
or
add
add
sbb
testl
cli
call
pop
or
ljmp
push
daa
bswap
iret
sub
push
sti
es
push
or
cli
leave
or
cld
or
cld
pop
or
or
push
sbb
into
ljmp
aad
sbb
add
sbb
push
int3
and
or
sbb
daa
or
or
add
push
int3
sub
or
pop
and
cld
or
ljmp
add
sti
add
out
push
sbb
add
jmp
adc
add
sbb
sti
push
stc
sti
sub
sbb
or
add
sbb
into
lock
shlb
sbb
add
lock
or
add
es
add
call
and
sbb
pmullw
imulb
push
pop
and
and
sbb
jmp
adc
or
sbb
add
out
in
add
aad
and
add
lret
pop
out
or
or
sbb
pop
or
lret
pop
push
daa
and
into
pop
and
sbb
or
adc
adc
in
add
int3
and
push
into
sbb
sbb
add
add
ljmp
call
incl
iret
and
leave
and
pop
push
into
add
cld
test
sbb
push
adc
and
por
sbb
ljmp
ljmp
pop
lret
sbb
and
aad
ljmp
ljmp
in
shrb
or
push
into
iret
lret
add
testb
lret
jmp
and
lock
shl
iret
in
ljmp
out
push
pop
add
leave
and
int
push
push
jmp
stc
stc
in
iret
add
add
or
testb
or
out
sbb
or
ljmp
sbb
push
add
cmc
adc
in
mulb
push
and
add
jmp
push
and
lret
sbb
jmp
pop
testb
adc
and
into
pop
or
jmp
pop
and
leave
out
adc
push
sbb
leave
and
add
sbb
call
and
and
and
test
sbb
and
sbb
lret
sbb
and
out
int
movaps
or
sbb
idiv
or
into
add
cmc
or
pop
jmp
iret
sbb
sbb
in
leave
cld
lock
or
and
add
pop
add
sbb
out
add
lret
add
ljmp
jmp
adc
and
and
or
lret
sbb
iret
or
daa
add
int
add
int
pop
iret
sbb
or
or
and
in
and
or
test
in
sbb
into
div
push
sbb
cld
stc
jmp
lret
add
push
sub
push
ljmp
in
out
or
sbb
shlb
sbb
add
pop
add
rcl
add
iret
adc
int3
ljmp
testb
pop
and
add
int
add
lock
sti
adc
or
add
pop
int3
pop
cmc
call
or
iret
call
iret
iret
cld
in
add
push
lock
sbb
int
idiv
adc
iret
sbb
adc
int3
add
add
and
and
cld
imul
jmp
or
cmc
or
testb
stc
pop
or
out
and
or
add
aad
out
or
jmp
aad
es
adc
and
or
sbb
rcrb
and
cli
cld
or
add
es
add
push
stc
add
add
sbb
push
int
iret
rclb
daa
lock
or
add
push
jmp
cmc
stc
mulb
or
leave
push
pop
or
shlb
sbb
adc
testl
cli
cld
into
or
in
cld
add
rcrb
leave
div
iret
adc
sti
sbb
sbb
sub
adc
add
sbb
leave
mull
pop
and
in
in
and
or
in
push
in
int3
adc
lret
ljmp
jmp
and
adc
add
lret
and
mul
in
push
in
into
in
int
es
not
leave
cli
testl
or
out
lret
testb
daa
in
sbb
adc
stc
sbb
sbb
and
push
push
and
sti
or
sar
int
out
lock
sbb
and
es
jmp
cmc
sti
and
push
decl
or
pop
push
leave
add
add
jmp
or
daa
sbb
pop
into
pop
adc
and
es
or
and
lret
and
int
test
cmc
int
pop
or
pop
or
and
and
adc
iret
pop
and
sbb
shl
stc
and
or
jmp
psrld
pop
and
adc
lret
or
or
stc
adc
aad
cmc
in
cmc
or
rcrb
add
iret
or
sub
add
adc
push
sbb
add
or
int3
adc
adc
aad
ljmp
out
shr
push
add
adc
in
add
out
not
paddsb
rolb
into
por
daa
ljmp
lock
or
aad
in
jmp
push
or
mull
rclb
push
rorb
push
and
out
pop
and
jmp
and
add
add
iret
pop
iret
or
sbb
mul
or
or
or
jmp
sub
lret
lret
imul
into
in
stc
sti
add
out
and
and
lret
jmp
jmp
sbb
or
iret
or
add
lret
and
incl
pop
into
lock
sbb
and
jmp
add
in
into
adc
int3
jmp
cli
and
and
lret
in
sar
and
cld
pop
or
lock
ljmp
in
daa
and
or
adc
iret
and
lock
lock
adc
nop
shr
add
add
adc
daa
daa
out
jmp
negb
cmc
cli
int
lret
not
and
rorb
pop
lret
lret
shl
sti
aad
and
ljmp
lret
and
sti
push
lret
sbb
and
or
sti
and
cmc
push
or
int3
add
sti
pop
push
pop
and
int3
add
leave
stc
lret
in
cmc
add
add
ud2
push
pop
push
call
rcrb
add
ljmp
sub
or
aad
add
add
pop
add
sbb
sbb
testl
push
in
push
and
adc
or
or
mulb
or
cld
negl
or
iret
sbb
test
add
and
not
push
lret
push
mov
leave
in
pop
cmc
or
push
or
push
in
lret
pop
and
add
ljmp
sbb
out
or
lret
lret
out
adc
testb
testb
es
or
lret
pop
add
daa
leave
push
ljmp
iret
leave
lock
lret
aad
or
sbb
mulb
or
adc
es
pop
add
or
int
stc
push
in
add
call
and
int
sbb
cld
pmullw
pop
jmp
push
aad
out
lret
lcall
daa
psadbw
and
daa
add
call
in
or
ljmp
in
pop
and
adc
pop
cld
into
and
and
or
in
sbb
cmc
push
push
or
int
rorb
in
sbb
dec
or
add
sub
in
in
and
in
leave
cli
cli
ljmp
add
pop
jmp
sbb
pop
push
add
pop
int
es
add
in
sub
push
out
leave
or
sub
and
sbb
cli
out
and
iret
in
push
in
lock
sub
or
or
into
or
and
sub
push
call
add
or
jmp
testb
and
stc
or
pop
daa
testl
add
sar
or
or
out
add
sbb
in
add
int
sti
out
lret
dec
sbb
lock
sub
or
or
sti
jmp
push
push
int
daa
aad
shrb
jmp
push
lock
or
add
sti
push
pop
or
and
add
and
and
pop
ljmp
test
or
int3
int
pop
jmp
lret
add
or
stc
lret
es
or
or
add
or
into
or
rolb
sbb
shlb
or
sbb
leave
lock
and
daa
out
lret
adc
pop
sbb
add
out
into
cld
daa
out
lock
div
jmp
into
int
incl
es
call
negl
out
sbb
out
adc
jmp
add
sbb
not
adc
testl
and
in
int3
paddsb
ljmp
add
push
push
jmp
testb
jmp
push
push
adc
call
or
and
and
jmp
push
adc
or
pop
cmc
es
or
ljmp
pop
rolb
call
leave
lock
lret
or
aad
push
add
sti
add
and
notb
cmc
pop
add
or
leave
pop
in
push
test
int3
aad
sbb
int
call
adc
lret
out
or
and
or
adc
iret
ud2
sbb
sbb
or
idiv
and
aad
or
add
push
leave
push
add
lret
lsl
and
and
sbb
jmp
incl
int3
push
pop
add
testb
and
lsl
sbb
and
int3
push
lcall
or
lret
ljmp
int
leave
or
add
iret
incl
push
or
or
pop
push
iret
daa
and
iret
sbb
lcall
jmp
cld
add
add
and
in
sti
sbb
push
add
jmp
int3
push
leave
int
and
jmp
cld
cld
push
push
and
into
add
sbb
mull
sbb
dec
nop
iret
and
or
or
push
sbb
or
push
add
or
sbb
lock
es
and
or
aad
jmp
or
test
cld
imul
and
negb
in
add
push
add
add
nopl
adc
int
sbb
lret
or
or
int
lret
stc
jmp
jmp
add
sbb
add
and
out
in
dec
add
jmp
add
or
cli
pop
lret
lret
add
add
and
add
push
add
out
push
add
add
add
cmc
sti
leave
cmc
in
div
add
sub
rcrb
cld
call
rolb
or
or
and
in
sbb
or
in
sbb
adc
sbb
add
adc
sbb
in
push
lret
int
leave
or
and
pop
pop
out
in
rolb
pop
pop
add
push
sub
or
jmp
in
add
pop
lock
nop
sti
stc
add
or
in
add
jmp
pop
and
stc
sbb
add
in
adc
push
pop
and
add
jmp
imul
push
es
push
or
or
push
adc
es
dec
into
iret
imul
and
femms
imul
es
rorb
or
or
int3
pop
sbb
pop
call
and
pop
sbb
pop
ljmp
leave
es
es
sti
and
or
and
push
ljmp
add
or
in
sbb
cli
cli
shlb
ljmp
push
call
add
add
iret
sbb
call
testl
out
cmc
or
int
add
daa
or
jmp
testb
in
adc
cmc
aad
out
sub
push
stc
leave
push
add
lret
aad
or
cli
out
not
add
in
or
into
push
sbb
pop
leave
or
testb
pop
out
in
add
sbb
push
push
push
rcrb
push
in
out
and
adc
add
or
lock
add
lret
cmc
in
in
int3
pop
imull
or
leave
notb
and
and
or
out
or
call
in
jmp
add
call
cld
or
jmp
cli
push
or
and
sbb
jmp
in
cld
push
lret
out
or
add
sbb
pop
ljmp
or
add
or
or
and
sbb
or
testl
push
push
clts
add
sti
cmc
adc
and
in
jmp
lock
lock
add
pop
out
and
out
imul
cmc
sbb
sbb
or
lock
sti
sbb
add
lret
push
sbb
es
lock
call
rolb
add
sti
lret
add
add
and
in
rorb
into
int
out
and
aad
and
adc
sbb
out
add
cli
into
or
jmp
add
and
lret
lret
and
int3
sbb
or
and
es
sub
push
in
ljmp
lret
int3
rcrb
rorb
add
or
out
or
push
jmp
or
cli
in
add
sbb
jmp
into
push
cld
into
cli
cmc
push
add
es
daa
and
ljmp
rorb
cmc
push
lret
int
and
in
lret
int3
daa
sbb
or
call
testb
and
and
sbb
in
sbb
sti
push
or
add
leave
call
sbb
into
in
mov
stc
sbb
and
int
lock
testl
int
jmp
adc
not
imull
into
push
push
adc
in
push
lret
negb
call
and
ljmp
cli
rcrb
mov
in
iret
in
adc
jmp
and
add
es
add
daa
es
sub
out
add
add
into
call
lock
leave
or
adc
jmp
leave
testl
aad
testl
sbb
push
sbb
add
push
sbb
adc
jmp
int
push
or
add
or
daa
in
cmc
and
sbb
sbb
sbb
or
dec
call
sbb
sub
cld
into
cld
and
adc
and
or
or
pop
sbb
leave
sbb
adc
sub
and
jmp
jmp
push
sub
or
in
sbb
aad
cld
add
sbb
div
add
or
into
stc
or
add
jmp
and
or
leave
add
cld
bndldx
in
push
or
or
cmc
ljmp
or
pop
and
or
ljmp
pop
pop
cld
sti
int
sbb
ljmp
push
add
lret
and
sbb
or
lock
stc
rolb
cmc
adc
pop
in
in
or
and
and
iret
out
testl
shlb
add
sbb
push
lret
cli
and
or
push
push
and
sbb
add
and
and
pop
lret
push
mull
negl
add
int
add
push
leave
add
sti
or
add
es
stc
or
negb
push
add
incl
lret
jmp
lret
push
adc
add
add
call
and
rolb
push
lcall
add
pop
rorb
add
adc
add
push
leave
and
lret
and
add
sbb
rcrb
sbb
sbb
add
add
sub
lret
sti
push
add
or
adc
add
and
push
push
shlb
into
jmp
iret
push
or
sub
and
in
and
in
add
out
add
cli
rolb
and
and
or
leave
adc
out
sbb
or
and
or
push
cld
ror
sbb
pop
and
or
out
add
or
por
in
lret
ror
push
push
and
or
aad
iret
div
pop
and
rorb
pop
rcl
cmc
sbb
cmc
stc
leave
or
sti
rolb
or
adc
shlb
leave
in
aad
push
aad
adc
or
add
rorb
lock
add
and
or
jmp
in
add
es
push
or
iret
pop
int
push
out
in
daa
and
ljmp
or
add
add
leave
in
in
in
cld
push
and
int3
stc
into
ljmp
into
cld
sbb
int3
and
rclb
pop
int
and
add
or
stc
add
out
sbb
push
daa
aad
lcall
lcall
adc
and
push
sub
sub
in
cmc
lret
adc
in
es
cli
in
sbb
rolb
sbb
or
and
sbb
add
in
adc
test
leave
paddsb
or
push
and
out
in
pop
lret
sbb
or
or
or
add
and
pop
push
lock
in
adc
or
push
or
leave
add
sti
stc
add
add
add
notb
in
in
sbb
or
add
jmp
and
and
or
aad
in
add
stc
in
int3
aad
or
rolb
sbb
lock
cmc
test
notb
or
lock
daa
sbb
sti
push
sub
lret
pop
sbb
or
aad
call
jmp
lret
aad
jmp
es
pop
adc
in
push
add
add
aad
add
and
add
or
and
and
ljmp
call
leave
pop
adc
cld
adc
push
lret
add
out
pop
mulb
push
daa
lret
push
sbb
psadbw
and
and
or
rorb
and
es
or
pop
push
and
and
aad
add
jmp
sub
iret
int3
or
or
pop
or
add
rcl
pop
sbb
or
or
sar
in
cli
or
jmp
jmp
out
rolb
add
and
add
add
and
or
int
or
sub
sti
sti
int3
and
cmc
testb
pop
aad
daa
or
into
lock
or
and
jmp
into
mov
push
aad
sar
or
out
and
sub
in
lret
ljmp
push
adc
int
or
add
sbb
and
jmp
and
jmp
out
add
into
out
jmp
adc
into
stc
push
jmp
add
cmc
push
cli
out
leave
or
pop
leave
jmp
daa
and
lock
and
lock
in
lret
rorb
in
add
in
sbb
in
leave
adc
adc
sti
or
push
iret
sub
int3
iret
iret
int
into
out
or
sbb
pop
stc
lock
out
ljmp
stc
and
lret
add
cld
add
leave
into
add
sti
aad
cld
decl
lock
in
add
or
push
lcall
push
int3
or
int
sbb
and
lret
ror
sbb
or
sbb
daa
sbb
rolb
sbb
sbb
and
cmc
add
shr
and
add
sbb
es
sti
adc
add
out
push
sub
in
or
daa
jmp
lret
aad
and
push
sbb
pop
rolb
es
jmp
out
pop
sbb
sbb
cmc
adc
cli
push
rclb
ljmp
rcrb
into
cmc
add
aad
lret
jmp
or
stc
dec
out
adc
and
add
or
and
rcrb
call
sbb
add
push
or
out
or
cld
or
pop
push
into
pop
push
stc
or
lret
and
in
add
and
cld
rolb
and
or
lock
pop
stc
and
add
and
leave
push
adc
add
in
out
and
push
daa
sbb
sbb
sbb
daa
jmp
push
iret
add
sbb
rolb
iret
out
add
add
push
sbb
pop
adc
stc
es
shr
in
or
int3
int3
lret
add
cld
sub
or
jmp
cli
shr
and
in
stc
es
sbb
negl
sub
and
add
iret
and
or
pop
push
or
sti
jmp
leave
add
daa
pop
in
or
push
lret
and
call
add
es
lret
pop
pop
sbb
sbb
jmp
and
out
or
or
lret
leave
push
push
ljmp
pop
jmp
or
sbb
ljmp
push
daa
pop
stc
and
cmc
push
or
push
and
sub
aad
and
adc
lret
in
and
in
sbb
or
adc
sbb
pop
sysret
stc
cld
es
call
in
cmc
adc
sbb
pop
jmp
adc
shr
sub
int3
jmp
shl
or
add
add
adc
and
or
out
or
sbb
shlb
cmc
sub
add
push
cmc
or
add
sysret
imul
or
jmp
sbb
or
push
stc
adc
and
pop
out
add
jmp
leave
aad
ljmp
adc
lock
out
and
in
or
push
out
in
sti
or
sbb
push
push
leave
sbb
push
out
ljmp
sbb
stc
into
out
negb
ljmp
and
imul
and
push
into
jmp
int3
sbb
sub
push
in
ljmp
push
in
add
or
jmp
sbb
int
lret
add
and
and
ljmp
sub
ljmp
int3
and
in
or
push
or
sbb
sbb
lcall
ljmp
adc
or
out
push
add
add
add
jmp
add
leave
sub
add
push
jmp
add
into
or
or
imul
sysret
cld
int
pop
push
out
jmp
shlb
adc
and
adc
or
lret
or
call
lret
iret
rclb
add
pop
push
cmc
out
out
negl
in
sgdtl
and
and
and
push
in
test
lock
daa
or
pop
or
or
nop
pop
adc
call
es
add
and
int
jmp
push
add
or
jmp
sbb
in
and
add
pop
push
pop
jmp
sbb
int
iret
and
pop
sbb
or
cmc
shr
in
or
shr
or
or
add
shlb
into
add
adc
and
and
out
or
add
pop
and
and
iret
int
push
cld
sbb
jmp
in
rorb
push
and
push
or
cli
sbb
cmc
adc
in
pop
leave
or
add
and
daa
pop
push
jmp
or
or
test
out
or
sbb
and
cld
sbb
aad
add
sti
leave
and
add
adc
push
and
add
paddb
and
and
cld
add
leave
add
test
push
daa
or
sub
push
pop
and
pop
iret
adc
add
sbb
mov
imul
lret
lock
jmp
lret
lret
pop
pop
ror
and
iret
cld
sti
push
call
and
pop
add
pop
sti
sbb
into
pop
out
pop
pop
aad
cli
or
in
sbb
pop
and
unpckhps
rorb
int
or
daa
lret
sbb
cmc
rclb
or
add
lret
lock
and
es
div
add
or
aad
or
jmp
or
push
int
or
or
and
into
sbb
test
lret
or
or
add
and
cli
int
adc
bswap
and
push
add
lret
and
sub
or
and
cmc
add
sti
shr
sub
lret
or
iret
sub
in
movhps
pop
add
add
and
jmp
push
or
lret
jmp
sub
sbb
in
push
adc
iret
in
and
push
add
adc
or
push
ljmp
leave
call
stc
div
add
int
imulb
and
and
shl
into
or
pop
cld
sbb
and
in
not
sbb
into
add
daa
pop
sub
sbb
pop
sub
pop
pop
sbb
call
sbb
pop
add
or
leave
jmp
lret
lret
daa
adc
stc
in
cld
cli
sbb
pop
and
shr
iret
iret
add
push
call
lret
psubsw
adc
out
or
int3
jmp
or
sti
and
shrb
sbb
cli
pop
or
or
push
and
add
in
int
push
lock
mov
stc
shr
add
add
aad
or
daa
or
testb
leave
and
es
shl
sub
push
and
and
and
sub
jmp
sbb
rorb
or
es
in
or
sub
or
daa
add
leave
sbb
call
and
push
sbb
in
daa
add
or
or
add
daa
lret
sar
int
lock
push
sbb
or
add
int3
stc
cmc
out
out
ljmp
in
or
or
incl
and
or
mull
pop
cld
stc
sbb
in
and
sbb
out
jmp
jmp
sub
or
iret
adc
sti
and
int3
or
or
adc
sbb
jmp
ljmp
pop
push
and
adc
jmp
in
pmaddwd
cli
test
sti
or
shl
syscall
lret
testl
jmp
stc
or
stc
add
or
sbb
jmp
add
add
aad
in
or
lcall
rorb
or
in
or
and
push
or
or
sbb
call
or
and
adc
add
jmp
lret
add
and
ljmp
add
and
or
and
and
lock
push
and
add
pop
sbb
and
and
in
or
and
cli
pop
and
in
add
push
lret
cmc
in
pop
int
into
and
cli
jmp
jmp
or
lret
add
ljmp
aad
int
sbb
or
leave
push
iret
pop
into
add
pop
lret
daa
and
bswap
in
add
and
rcrb
in
aad
pop
add
add
or
daa
and
iret
cmc
cli
or
lret
and
and
iret
sub
adc
or
sbb
sbb
sub
in
out
pop
add
or
pop
or
int
lock
aad
sti
movups
and
int3
pop
or
into
shr
into
out
add
shlb
add
int3
adc
in
add
rorb
adc
jmp
stc
leave
stc
stc
in
cmc
int3
add
and
push
lret
push
pop
and
sbb
es
stc
add
add
stc
shlb
or
in
sbb
in
iret
negl
int
aad
and
pop
add
call
div
push
daa
sbb
in
add
or
int
push
int
aad
aad
push
and
cli
cli
pop
aad
add
out
or
and
add
rcl
out
push
into
and
sub
daa
pop
or
sbb
stc
jmp
or
lret
jmp
push
sub
sti
into
int3
and
jmp
and
add
add
jmp
and
or
in
out
add
jmp
pop
lret
testb
iret
mov
push
sub
lret
and
imul
cld
iret
add
iret
add
testl
jmp
pop
sbb
aad
push
push
sub
out
rcrb
idiv
out
stc
int3
in
or
and
in
pop
and
negl
pop
in
or
stc
not
test
rolb
sbb
sbb
or
adc
pop
ljmp
cli
call
lret
lret
lret
sub
aad
or
int3
pop
and
int
sbb
cld
cmc
and
and
lret
call
sbb
out
or
push
cmc
jmp
or
add
sti
push
leave
out
or
int3
push
sbb
pop
push
push
and
lret
into
sub
lret
int
add
add
sub
notb
cli
add
sbb
sbb
pop
in
add
add
or
sbb
add
sub
out
into
or
adc
add
sti
and
test
sbb
and
ljmp
daa
pop
cli
call
push
and
pop
and
jmp
add
call
and
cld
mull
pop
and
add
pop
cmc
lret
and
or
test
cli
add
and
add
into
into
rorb
jmp
push
div
lock
rolb
add
leave
or
lock
adc
add
ljmp
and
adc
add
cli
cld
rolb
call
aad
or
in
or
push
add
in
add
iret
shr
and
lret
add
push
or
testb
add
or
add
and
in
iret
add
and
pop
pop
push
incl
out
jmp
shl
out
sldt
add
add
iret
and
and
adc
testl
add
int
pop
adc
iret
dec
and
cmc
sti
cld
mov
aad
imul
stc
in
sti
int
add
stc
or
push
and
and
in
in
and
testl
sbb
lock
or
sub
or
adc
jmp
sbb
or
in
leave
push
add
and
sbb
sbb
push
lock
leave
or
and
iret
jmp
and
lock
adc
es
sbb
push
and
shr
stc
add
add
pop
add
push
into
in
adc
pop
or
psrld
stc
or
add
ljmp
iret
add
es
add
incl
push
in
sbb
int
or
add
add
call
add
not
and
imul
add
daa
jmp
int
ljmp
leave
or
stc
add
int
sbb
push
int
cmc
cmc
jmp
add
into
lret
or
div
testb
sbb
adc
push
pop
lret
sbb
es
into
call
jmp
and
mull
shlb
into
out
or
lret
aad
negl
and
in
out
negb
and
or
in
lret
out
adc
add
sbb
out
es
es
push
push
or
add
push
jmp
cld
sbb
out
pop
sub
adc
and
cld
lock
cld
cli
imul
sbb
leave
in
ljmp
daa
into
in
in
adc
push
or
pop
jmp
and
and
and
sub
add
or
sbb
in
cli
testl
es
add
cmc
out
dec
sbb
leave
sbb
sbb
push
or
and
pop
add
and
pop
and
or
or
push
push
leave
testb
lmsw
sub
add
in
sti
and
or
out
iret
cld
int3
aad
and
sbb
leave
cmc
pop
or
sti
in
leave
and
sbb
or
into
push
out
in
es
sbb
pop
sbb
ljmp
or
psubsw
adc
out
add
sbb
rorb
and
stc
unpckhps
jmp
or
and
sbb
rcrb
or
out
add
rcrb
negb
aad
pop
and
psadbw
aad
pop
out
sar
pop
sbb
or
jmp
sti
lock
and
stc
in
test
and
push
stc
push
or
int
or
ljmp
and
sbb
into
in
int3
rolb
leave
sti
push
jmp
cld
sti
add
ror
push
cld
div
adc
pop
add
shlb
add
into
add
and
aad
and
mull
stc
into
daa
and
or
and
sbb
add
push
add
testb
int3
add
iret
int
and
ljmp
in
sti
daa
out
out
int
out
lock
call
test
lock
push
add
add
jmp
notl
or
cld
lret
push
or
rcrb
add
add
div
or
add
jmp
out
stc
int3
sbb
add
or
or
lock
daa
jmp
add
or
sub
or
sbb
rorb
in
add
jmp
in
cli
int
push
or
pop
push
lock
cld
lret
leave
call
push
add
in
out
into
or
leave
into
push
jmp
sub
sub
lret
or
out
out
push
in
lret
jmp
in
and
sub
lret
cli
or
stc
iret
sbb
and
daa
sti
and
ljmp
or
adc
lock
add
dec
out
add
into
add
leave
sbb
cli
jmp
add
add
push
sbb
in
jmp
and
aad
or
out
and
cmc
iret
push
shlb
in
es
iret
sbb
out
or
sbb
and
lret
pop
int3
cmc
jmp
add
or
push
and
sbb
sub
or
add
add
call
lret
or
adc
int3
incl
and
pop
pop
or
and
and
or
or
mull
adc
testb
sbb
in
sbb
in
or
leave
cld
imul
in
sbb
add
add
add
sbb
pop
push
add
cmc
ljmp
or
or
pop
rcrb
sbb
sbb
out
sbb
ljmp
decl
add
sbb
clzero
add
lret
in
add
testb
and
add
lret
add
out
mull
sbb
out
iret
into
or
cld
adc
sbb
add
int
into
sti
and
cmc
or
or
iret
into
cmc
out
bswap
idiv
jmp
add
or
adc
add
and
imul
lret
add
or
add
pop
add
es
into
in
in
and
and
adc
in
pop
rcrb
cli
push
pop
push
call
and
sub
or
aad
cli
adc
aad
push
into
add
call
incl
into
in
add
push
cli
push
or
add
or
sbb
stc
or
or
aad
or
notl
sbb
call
daa
out
jmp
out
in
add
daa
add
into
and
jmp
jmp
add
lret
or
out
int3
or
rclb
sbb
add
jmp
or
or
or
or
call
stc
or
and
cld
and
lret
out
and
sbb
add
in
push
call
into
and
stc
sti
es
iret
int3
unpckhps
and
pop
sbb
or
or
in
sbb
sbb
or
lock
cli
push
in
testb
or
push
push
cld
or
and
lock
and
ljmp
cli
jmp
lret
stc
sub
call
or
int
into
add
or
sti
out
out
or
in
push
pop
adc
lock
or
and
shlb
jmp
adc
out
sbb
into
testl
call
cld
add
add
daa
or
call
add
leave
and
sbb
or
or
sti
adc
lret
testl
pop
sbb
add
and
sbb
imul
mull
or
add
add
jmp
sbb
push
testl
cli
in
in
cld
add
add
jmp
int3
adc
cld
sbb
cmc
call
sub
and
out
or
ljmp
and
adc
in
add
add
push
push
call
sbb
and
adc
add
in
sub
cmc
sar
sti
adc
in
sbb
and
or
iret
adc
jmp
int
rorb
or
or
leave
add
and
leave
into
adc
testb
or
push
and
sbb
lret
pop
add
int
add
or
out
add
add
push
sub
aad
add
sbb
sar
or
in
sbb
add
or
or
or
sbb
pop
push
into
push
and
out
or
pop
add
add
and
pop
lret
add
or
push
lret
out
or
and
and
lret
sbb
push
sub
out
sti
adc
lret
jmp
or
in
lret
lar
sti
pop
lock
pop
add
int3
in
add
and
or
cmc
pop
or
es
or
and
or
call
out
daa
and
and
push
cli
into
and
and
or
or
sub
jmp
testl
adc
in
or
push
stc
es
add
sbb
pop
pop
push
push
adc
or
jmp
sbb
or
and
pop
add
in
add
sbb
sti
int
adc
sbb
add
push
or
push
pop
and
and
sbb
sti
adc
int3
in
pmaddwd
or
add
leave
or
add
or
add
add
int
or
sbb
out
cmc
sub
call
and
and
testb
lock
adc
sbb
and
testl
or
jmp
sub
add
lcall
add
cli
pop
leave
int3
push
lock
leave
and
shl
lock
or
sbb
add
cli
pop
stc
add
add
cli
sbb
sbb
adc
push
daa
jmp
call
and
int
push
sti
push
sbb
pop
push
add
sbb
push
or
or
and
out
shr
int3
push
pop
sti
lret
pop
pop
and
cli
add
or
add
or
jmp
cli
int
sbb
stc
int3
jmp
cld
and
push
add
int3
call
add
int
add
sti
lret
mov
jmp
sbb
adc
lret
and
not
prefetchwt1
or
daa
or
cli
idiv
and
out
pop
cld
aad
sbb
and
stc
and
and
sbb
imul
push
add
adc
int
int
adc
lock
cld
div
out
into
iret
int
add
paddb
cli
and
sti
es
sbb
and
cld
add
and
add
sbb
add
out
pop
add
imul
or
in
lock
and
test
or
sbb
or
in
sti
int
add
call
and
daa
aad
pop
iret
push
adc
in
push
sbb
cmc
decl
push
and
adc
in
call
cld
out
daa
adc
sub
and
push
push
pop
or
out
pop
push
sti
pop
cld
and
and
sti
or
and
cmc
call
iret
lret
push
and
or
or
call
cli
and
jmp
stc
pop
push
and
push
add
rorb
lock
ljmp
daa
iret
push
int3
add
out
or
sbb
jmp
in
es
cli
lock
add
sub
call
cld
or
bswap
push
testl
add
or
or
daa
ljmp
out
and
in
or
int
aad
and
shrb
sub
lret
or
int
push
lret
add
rorb
in
lret
sbb
paddsb
mov
rolb
lock
cmc
cld
jmp
add
rolb
out
push
jmp
or
lret
add
or
add
in
lret
sbb
in
iret
ud0
in
and
in
sub
push
add
pop
sbb
lock
leave
lret
cld
rcrb
pop
jmp
and
sbb
lock
sbb
add
add
int3
into
sar
daa
push
in
cld
and
push
call
pop
in
rclb
push
iret
incl
call
into
lret
and
add
in
lret
or
or
cli
int3
and
int
and
or
pop
and
cmc
and
or
call
lock
jmp
daa
or
adc
adc
or
call
add
and
or
and
or
cmc
pop
adc
testl
push
bswap
rcl
lock
or
sbb
imul
shr
in
adc
add
jmp
and
add
cld
out
and
add
pop
add
push
add
pop
push
lret
jmp
pop
sbb
pop
imul
test
or
sub
or
lock
or
in
and
in
ror
and
sbb
out
add
in
and
into
and
pop
incl
pop
daa
or
pop
cli
ror
int3
or
cld
cld
in
pop
push
into
and
ljmp
sbb
out
add
in
and
sbb
int3
or
jmp
and
or
pop
sbb
into
and
div
add
sbb
and
sbb
pop
add
or
lret
lock
stc
sbb
or
pop
add
int
int3
push
aad
cld
push
iret
push
rorb
add
cld
or
unpckhps
into
pop
daa
or
and
in
negl
adc
lock
lock
lock
or
or
add
int3
jmp
cmc
sub
sbb
or
int
add
cli
or
sub
and
shl
add
or
in
cmc
lret
mul
sbb
in
add
sar
daa
sbb
daa
jmp
aad
and
adc
jmp
sbb
notb
rorb
rclb
shr
stc
testl
or
and
es
lret
pop
add
int3
out
in
in
lret
or
out
or
add
push
sbb
add
lret
and
push
jmp
notb
or
or
or
or
or
and
int
out
or
int3
push
int
call
sbb
leave
sub
push
call
sti
or
pop
push
add
out
notb
jmp
jmp
sbb
cld
sbb
cli
jmp
bswap
and
decl
or
add
sti
cli
daa
and
add
or
push
in
cmc
paddsw
int3
lret
sbb
add
pop
push
lret
add
idiv
call
cmc
or
test
or
or
add
push
jmp
leave
out
jmp
stc
or
sbb
div
push
in
int
and
nopl
jmp
or
stc
pop
push
sub
lret
and
add
sti
aad
int3
ljmp
jmp
sbb
pop
and
sbb
add
shl
and
or
leave
adc
adc
int3
push
and
adc
cmc
add
into
or
aad
sbb
shlb
lock
add
add
adc
jmp
sbb
lock
daa
and
sbb
in
add
test
in
aad
and
cmc
in
sbb
aad
ror
and
cli
jmp
shl
ljmp
lret
pmaddwd
cli
jmp
adc
push
or
in
add
or
in
and
into
in
and
in
int
or
leave
and
call
out
pop
sbb
or
and
out
jmp
add
add
in
add
sbb
cld
and
iret
cld
cmc
call
lock
int3
sub
or
es
jmp
in
or
add
in
sbb
call
pop
or
and
and
out
and
aad
add
add
add
jmp
jmp
add
ud2
or
call
aad
into
notb
leave
shr
sbb
add
sbb
in
in
in
lcall
sbb
pop
and
push
push
add
lret
sub
and
in
aad
es
or
and
lock
add
or
pop
sbb
pop
sbb
or
ljmp
and
add
sbb
cld
or
and
adc
or
jmp
ljmp
ljmp
rcl
or
sub
stc
out
or
call
jmp
add
stc
into
and
lock
and
rcrb
add
leave
stc
add
cli
push
sub
cli
dec
in
lret
testl
sbb
int
or
out
push
es
and
sbb
aad
in
sti
add
sub
and
and
pop
or
cld
iret
or
add
and
and
and
int
cli
adc
lcall
ror
and
sbb
add
cmc
sti
rolb
in
in
psubq
rolb
push
notl
rcl
lock
test
and
and
int3
add
sti
or
push
in
push
prefetchw
or
adc
out
sub
lret
add
pop
push
add
out
into
or
stc
sbb
es
iret
add
into
into
iret
add
push
and
and
pop
push
imul
pop
out
testb
sbb
sti
push
iret
or
lret
pop
and
imul
call
in
pop
and
lret
adc
sbb
add
jmp
in
int
sub
out
call
and
jmp
aad
or
sub
adc
push
leave
add
cli
or
push
and
int3
add
or
lret
push
ljmp
sub
pop
or
sbb
pop
add
or
aad
cli
or
int
rolb
push
leave
and
sbb
iret
and
or
adc
ljmp
sbb
and
in
shr
or
cli
jmp
add
cmc
out
cmc
pop
daa
cld
lock
sbb
out
cmc
and
add
jmp
add
adc
add
and
sbb
ror
and
or
es
and
sbb
call
shlb
sub
lock
into
aad
push
or
pop
sbb
cli
or
iret
or
in
add
into
cld
in
add
pop
stc
or
lock
pop
or
and
and
and
pop
adc
and
sbb
shlb
sub
sbb
into
and
or
add
add
and
add
call
or
push
leave
in
or
pop
adc
cmc
stc
out
psubsw
or
testb
into
call
int3
and
lret
test
or
sbb
ror
lret
prefetch
or
sbb
or
int
test
aad
jmp
and
sbb
adc
or
adc
int3
lock
testl
push
leave
cli
lock
lret
cli
lret
into
sbb
sbb
adc
leave
shlb
out
cld
lock
call
negb
add
adc
and
and
sbb
or
push
push
out
ljmp
idiv
sti
pop
sbb
add
stc
into
in
lcall
jmp
or
daa
or
int
add
sti
sbb
aad
psubw
cld
pop
and
lret
sub
or
sbb
or
push
iret
push
add
iret
add
and
pop
sbb
and
cld
sbb
and
or
iret
or
and
jmp
and
sub
mulb
add
or
lock
lret
iret
in
and
or
ljmp
add
adc
or
and
adc
or
or
daa
aad
or
incl
add
in
lret
and
sbb
or
lock
adc
or
or
cld
and
testl
cmc
imul
adc
aad
int3
int3
in
or
leave
lret
or
push
cli
call
sbb
and
pop
dec
or
or
push
add
or
sub
push
add
and
add
cld
div
out
sti
out
out
and
and
sbb
jmp
in
out
add
ljmp
into
into
out
iret
shlb
leave
mull
testl
int
add
jmp
jmp
push
or
or
daa
in
lock
jmp
push
lret
iret
in
pop
mulb
into
aad
cli
add
sbb
sbb
pop
add
and
in
adc
sti
push
jmp
lret
and
and
out
sbb
add
push
and
adc
sti
jmp
or
int
ljmp
cmc
in
psrld
ljmp
leave
add
or
ljmp
pop
or
and
and
adc
or
and
lret
and
sbb
add
in
lcall
lret
sbb
add
sbb
int
lret
sub
or
and
shl
pop
lret
incl
and
and
add
ror
add
in
aad
and
add
add
cld
cmc
and
sti
into
cmc
iret
jmp
sbb
pop
and
adc
int
jmp
leave
sbb
or
push
ror
push
adc
in
add
stc
int3
testb
pop
pop
sbb
int3
push
daa
sbb
add
in
or
ljmp
lock
push
or
jmp
or
ljmp
call
adc
and
lret
push
jmp
int
ljmp
in
call
pop
sbb
aad
out
and
ud2
aad
pmullw
int
in
and
push
int
aad
stc
shlb
or
stc
and
into
jmp
stc
rolb
and
into
add
lret
adc
or
add
pop
push
or
cmc
push
into
call
es
shr
push
rclb
in
cld
sbb
add
in
add
into
or
sub
rorb
iret
push
int3
out
push
lock
cli
and
iret
in
out
sti
add
sbb
call
sub
in
push
lock
sub
push
sti
pop
in
sbb
add
or
shlb
in
and
add
and
int
into
add
int
out
or
push
add
sti
cmc
add
and
int3
rcrb
ror
add
and
or
pop
pop
and
rcrb
or
sbb
int
add
push
int
add
int
or
or
or
ror
or
or
or
stc
sbb
sbb
or
ljmp
pop
int
and
pop
pop
int3
daa
add
cli
mulb
or
rcrb
es
adc
jmp
and
and
lock
and
lock
add
add
stc
daa
lret
lret
push
sbb
sbb
pop
test
pop
iret
cld
iret
push
out
int3
lret
cmc
cli
jmp
leave
add
sbb
push
push
or
pop
sbb
cld
sti
into
push
stc
push
out
sbb
out
sub
add
mulb
lock
cld
and
or
sbb
add
adc
add
call
push
shlb
testl
decl
sbb
sbb
and
in
add
and
aad
push
cmc
jmp
aad
lret
and
pop
shr
or
imulb
sbb
in
or
jmp
cli
es
call
div
adc
or
lock
push
push
and
adc
es
push
stc
int3
add
sub
sti
add
push
rclb
and
sub
push
push
push
cmc
pop
daa
and
push
leave
in
shr
pop
and
add
sbb
adc
lock
pop
out
in
daa
push
and
add
sbb
call
daa
and
in
push
lret
or
aad
es
sbb
or
ljmp
daa
in
cli
sti
sti
sbb
and
or
out
in
in
or
into
stc
ud0
sysret
and
ljmp
and
push
int3
in
push
pop
push
add
in
add
sti
jmp
cmc
and
daa
or
pop
iret
or
sub
sti
not
or
add
adc
and
int3
and
and
stc
pop
push
and
sbb
test
ljmp
sbb
or
and
adc
call
or
sbb
pop
cli
add
jmp
pop
in
in
aad
out
sbb
or
out
out
adc
or
in
and
dec
lret
cld
int
push
add
int3
add
out
or
cli
or
and
adc
cli
es
call
add
sub
push
sbb
and
int
pop
sbb
int
int3
cmc
movhps
cld
or
and
add
daa
pop
jmp
or
jmp
cld
or
add
add
add
add
stc
jmp
in
and
in
and
or
adc
cmc
or
sbb
jmp
add
and
sti
in
rorb
push
negl
sti
lcall
and
adc
out
pop
notb
and
int3
decl
stc
stc
daa
sbb
sbb
int3
and
call
in
sbb
and
in
add
iret
and
iret
push
leave
adc
ljmp
pop
push
incl
iret
and
or
out
out
imul
aad
or
iret
cmc
add
push
or
and
sbb
add
and
add
in
lret
push
aad
or
push
int3
call
jmp
push
movhps
lock
cli
in
clts
and
lock
or
add
cli
and
add
iret
pop
or
or
daa
iret
into
in
aad
iret
sbb
add
in
sbb
add
sbb
pop
sbb
leave
jmp
add
ljmp
or
in
jmp
adc
add
add
and
push
daa
es
push
in
cld
adc
and
add
and
pop
add
into
push
pmaddwd
cld
add
or
wbinvd
lret
push
pop
int
or
lret
sar
or
in
es
sbb
stc
cli
in
int
in
leave
pf2iw
adc
into
pop
or
pop
or
add
add
idiv
pop
in
and
push
mull
add
es
or
negb
in
sbb
sub
add
jmp
sbb
add
or
push
leave
pop
lret
stc
and
and
or
and
sbb
negl
or
or
daa
iret
sbb
nop
push
lock
sub
lret
shr
int3
imul
add
imul
sbb
add
or
pop
ljmp
and
negl
add
cli
push
add
cld
pop
and
not
push
pop
push
or
adc
add
add
push
and
in
imul
pop
sbb
stc
add
sbb
push
call
shl
in
in
stc
ljmp
push
rcl
or
push
int
add
add
iret
cmc
jmp
stc
aad
and
adc
out
int3
out
out
cli
leave
lock
in
or
out
push
pop
imulb
pop
sbb
shlb
jmp
int3
iret
and
pop
shr
add
cli
add
add
pop
and
push
add
and
sbb
push
sbb
add
and
push
in
iret
and
sbb
jmp
shlb
testb
stc
aad
ljmp
adc
and
bswap
lock
push
ljmp
or
add
add
es
add
and
lock
call
jmp
call
push
or
push
adc
or
push
sub
add
jmp
sbb
add
lock
add
and
ror
lock
iret
call
iret
lret
ljmp
call
adc
stc
stc
and
add
int3
stc
sbb
or
add
div
pop
ljmp
pop
and
cli
push
iret
add
in
aad
push
leave
cld
lret
rolb
sbb
and
and
aad
add
add
idiv
stc
add
nop
and
add
adc
jmp
jmp
and
sbb
lock
add
cld
adc
sbb
lret
es
sbb
ljmp
decl
negl
shlb
add
pop
es
imul
and
test
or
sbb
lcall
push
cld
mull
or
sbb
pop
testl
rorb
push
leave
shlb
shlb
not
and
and
push
add
push
sub
sbb
and
or
rclb
sbb
call
leave
in
sub
push
iret
unpckhps
lret
sbb
es
push
add
int3
cld
push
es
leave
shrb
and
in
or
sbb
push
or
push
adc
int3
out
sbb
cld
in
add
and
or
sbb
or
add
sti
and
ljmp
or
sbb
push
sti
or
lret
stc
push
sub
or
rcrb
jmp
aad
push
add
in
cld
pop
out
int3
imul
pop
cld
add
and
sub
or
ljmp
cld
leave
es
push
jmp
call
call
call
out
add
or
and
or
or
and
pop
into
call
int
stc
and
add
pop
add
and
pop
lock
ror
add
shlb
or
or
and
sbb
or
cli
leave
push
or
add
in
add
rolb
leave
and
ror
or
lock
aad
sbb
and
and
jmp
call
aad
or
add
push
stc
ljmp
and
daa
rorb
in
out
pop
cld
out
or
or
ror
add
jmp
or
sbb
add
int3
or
sbb
or
aad
add
add
and
div
int3
or
sbb
ljmp
es
nopl
lock
sbb
or
add
and
shr
or
sti
lock
stc
in
and
or
cld
shl
int
or
int
in
sti
and
int3
in
lret
and
lret
in
sti
push
and
daa
and
jmp
sub
add
out
push
out
add
sub
add
add
in
and
and
shlb
out
stc
lret
pop
and
or
and
cli
cmc
push
sub
lret
stc
or
sbb
and
sti
or
push
adc
and
jmp
lret
and
pop
in
in
and
and
push
add
push
cmc
add
jmp
adc
sbb
or
or
push
add
in
into
or
add
out
push
in
push
pop
add
iret
and
or
sub
add
push
and
es
add
lret
ror
lret
and
cli
out
aad
in
aad
imul
iret
add
push
push
and
push
add
adc
add
cld
push
int3
leave
iret
daa
leave
push
pxor
and
es
push
negl
sbb
call
sbb
lret
pop
out
leave
out
into
pop
pop
push
sti
es
out
or
push
sbb
add
adc
sbb
or
and
cld
pop
lret
push
testb
add
in
push
push
sub
iret
stc
in
lret
adc
sbb
daa
incl
push
add
cld
add
or
and
adc
in
or
aad
rorb
or
cld
in
sbb
add
and
adc
into
or
and
lret
and
call
out
es
push
jmp
add
int
or
testl
cli
sar
lock
lock
or
sar
adc
push
int
ror
and
pop
add
cli
and
jmp
add
shr
shrb
div
out
paddb
push
or
in
int3
or
sbb
pop
add
adc
pop
jmp
rcl
sub
and
and
or
push
ljmp
aad
in
add
daa
lret
and
sbb
in
sbb
cld
idiv
es
int3
add
sbb
jmp
or
adc
int
and
sub
cmc
leave
and
and
aad
rcrb
ljmp
in
sbb
lret
sbb
and
pop
jmp
add
push
and
or
call
int
sti
add
femms
add
leave
bswap
in
cli
add
mov
lock
rclb
div
lret
call
and
call
sbb
es
or
add
sbb
ljmp
push
shr
push
shlb
test
cmc
add
sbb
or
sti
add
out
lret
pop
and
pop
cmc
leave
jmp
and
sar
pop
push
rorb
cmc
add
lret
cld
sysret
in
or
in
nop
imul
pop
and
aad
out
ljmp
add
or
daa
and
push
rolb
lret
ror
add
sbb
sbb
add
sub
in
imul
sub
jmp
add
daa
and
add
daa
sbb
and
int
leave
lock
add
into
or
and
nop
sbb
and
add
sub
or
es
out
adc
and
in
out
cmc
negl
push
push
add
pop
sub
sbb
and
or
add
and
add
dec
lret
lret
sti
add
and
int3
int3
int
or
sbb
adc
add
call
push
and
ljmp
in
in
push
add
and
sti
and
into
into
and
lock
in
and
adc
and
jmp
lret
or
lret
jmp
pop
iret
aad
add
jmp
in
add
rorb
push
out
in
adc
or
pop
and
sbb
and
sbb
or
and
and
into
adc
and
aad
or
aad
or
lret
sbb
ljmp
idiv
stc
or
push
or
not
cmc
add
lret
out
maskmovq
testl
out
pop
negb
adc
cld
and
pop
into
add
push
ljmp
and
aad
cld
or
call
into
out
call
and
add
pop
adc
jmp
div
in
add
in
add
sbb
push
testl
cld
jmp
pop
add
push
into
call
sbb
es
cmc
dec
shl
into
adc
daa
sub
int3
and
lret
cli
out
push
adc
lret
testb
daa
or
stc
pop
stc
stc
add
add
out
idiv
iret
add
adc
in
or
call
and
rcrb
sub
call
stc
cli
ljmp
or
and
sti
sbb
and
int3
int
push
in
adc
sti
sbb
push
or
push
es
ljmp
lar
add
leave
sti
jmp
int
push
and
and
ljmp
add
leave
or
lret
adc
test
and
and
cld
jmp
in
sbb
iret
push
and
add
or
or
add
sti
pop
push
int3
call
call
add
iret
add
and
lock
sti
add
cld
push
or
and
sbb
call
and
stc
in
adc
pop
lret
rorb
iret
add
push
adc
out
jmp
or
and
add
int
int
nopl
and
leave
lock
or
cli
or
leave
add
sti
and
sbb
int
lret
add
add
pop
push
out
or
or
push
adc
int
push
sub
int3
adc
add
sbb
add
sub
daa
and
testb
or
into
or
or
or
jmp
es
incl
in
sbb
lret
push
push
sbb
jmp
pop
adc
int
add
stc
jmp
or
add
call
sbb
pop
and
int
add
sbb
pop
pop
in
lret
add
or
or
and
add
or
or
lock
and
lock
add
into
rcrb
sbb
push
lock
add
push
into
pop
lock
out
es
and
sti
or
aad
lock
adc
or
sbb
and
add
negb
imul
mulb
adc
and
call
add
push
pmaddwd
add
into
and
and
out
push
add
int3
pop
or
ljmp
rcrb
push
or
and
in
test
sti
and
cmc
and
sbb
sub
push
adc
into
push
not
daa
push
rolb
sti
and
or
pop
or
in
call
daa
int
call
push
or
in
add
int3
add
into
and
sbb
and
sti
in
adc
out
sbb
sub
jmp
jmp
and
cmc
adc
in
es
int
div
test
in
adc
or
int
call
aad
jmp
push
pop
add
add
or
add
or
cld
jmp
add
jmp
sub
add
out
stc
and
sbb
testl
out
es
add
negl
lock
int3
or
push
adc
add
cld
push
lret
sbb
push
sbb
pop
in
pop
sti
adc
lret
and
or
in
stc
int3
pop
sbb
rorb
add
shl
or
add
add
stc
or
jmp
adc
leave
and
and
or
push
add
and
int
and
add
push
rolb
push
add
cli
add
testb
ror
cli
ljmp
sbb
add
jmp
in
add
cli
iret
psubw
aad
out
rcl
add
rclb
adc
call
and
ljmp
sbb
add
add
or
and
or
syscall
sub
adc
call
push
cld
lret
rolb
or
add
lret
add
add
sti
add
daa
rcl
out
and
and
push
push
or
and
cmc
ljmp
sbb
cld
in
in
call
call
sbb
sub
push
aad
push
and
and
adc
and
cli
jmp
sbb
pmaxsw
pop
cli
or
iret
in
add
push
in
cld
or
and
add
and
and
ljmp
add
or
push
push
add
sbb
sti
or
cmc
and
iret
test
int
rolb
pop
add
jmp
jmp
or
shlb
and
or
out
adc
out
lret
add
cld
into
daa
rclb
add
nop
sbb
es
into
and
push
and
int3
leave
add
div
ror
push
into
lret
push
or
sar
jmp
sbb
cli
rcrb
lock
shl
or
lret
into
cli
int3
or
sbb
and
imul
lret
and
sbb
lret
add
add
push
in
and
into
mulb
and
add
out
and
int
add
add
pop
adc
syscall
pop
pop
daa
pop
ljmp
and
int
in
imul
or
iret
jmp
sti
sbb
es
or
push
cmc
add
out
iret
sbb
adc
add
stc
call
sti
negl
cli
jmp
and
or
lock
out
and
or
stc
or
or
push
and
out
in
push
pop
iret
jmp
sub
sti
push
add
call
call
into
in
push
or
cmc
in
add
and
in
in
sbb
call
in
bswap
shr
push
push
lret
or
jmp
in
or
or
add
add
sbb
int3
add
add
add
sub
add
sti
lret
and
add
pop
push
negb
es
sti
adc
es
sbb
or
or
shlb
or
cmc
jmp
stc
shlb
stc
and
adc
push
add
sti
int3
in
pop
add
lret
ud0
add
paddsw
int3
push
jmp
adc
or
out
int
aad
lock
add
sti
and
add
lret
sub
aad
adc
int
and
adc
in
jmp
or
or
add
sbb
jmp
cli
or
add
notb
and
int
pop
add
and
and
add
and
into
push
sbb
invd
add
or
pop
out
lret
lock
testl
push
cli
into
sbb
stc
sbb
in
add
pop
out
imul
int
add
and
and
leave
into
sbb
and
int
lret
lock
lret
bswap
es
rcrb
pop
or
sbb
into
push
pop
jmp
lret
and
lret
sti
and
ljmp
into
and
pop
adc
sti
push
sbb
and
or
lret
sub
out
call
into
sbb
and
jmp
int3
shr
or
sbb
jmp
and
shlb
or
in
int3
push
add
aad
add
daa
or
or
lret
adc
add
pop
pop
jmp
adc
cli
int3
and
and
sbb
sbb
sbb
iret
iret
add
bswap
and
cmc
shr
int3
pop
mull
pop
daa
add
int3
leave
or
out
and
pop
adc
cli
push
or
daa
out
or
out
sbb
or
or
sbb
push
rclb
in
sbb
sbb
notb
or
pop
add
push
es
call
pop
es
in
stc
sbb
pop
sbb
jmp
lock
ljmp
and
testl
pop
in
into
lock
sbb
adc
leave
push
and
push
push
lret
and
into
lret
adc
es
adc
decl
in
int
and
jmp
idiv
pop
imul
call
lret
imul
push
incl
lret
and
adc
sbb
cmc
push
add
sbb
add
leave
leave
and
es
add
sbb
pop
leave
add
or
and
or
out
and
jmp
rcrb
or
and
ror
lock
cli
in
cld
cmc
idiv
sub
add
in
stc
add
sbb
sbb
or
adc
in
and
pop
in
and
negb
adc
lock
add
ud0
div
push
add
cmc
and
or
into
lret
push
out
add
add
add
sub
and
push
push
and
jmp
daa
cmc
and
in
out
cld
pop
add
or
ljmp
in
and
or
adc
and
int3
into
aad
iret
lock
jmp
add
out
ud2
aad
imul
add
into
rcl
jmp
push
shr
and
or
pop
and
decl
lret
jmp
pop
or
lret
leave
in
add
pop
sbb
and
or
sbb
add
out
out
add
push
leave
and
and
call
cli
and
sbb
rolb
add
rclb
or
or
adc
add
es
lret
idiv
add
iret
or
iret
pop
testb
test
pop
sti
push
pop
or
in
pop
pop
in
stc
into
jmp
add
testb
call
or
adc
add
lock
and
push
testb
pop
sar
int3
or
sti
cli
and
notb
pop
sbb
and
lret
or
add
sti
in
push
cld
aad
pminsw
out
mull
add
cmc
cli
in
jmp
out
cli
pop
out
jmp
dec
in
iret
cli
int
add
add
push
and
or
lret
or
cli
call
in
call
jmp
jmp
add
lret
sbb
sti
iret
and
and
mulb
in
and
or
and
into
or
sbb
or
add
into
or
int
or
and
and
jmp
ljmp
jmp
push
lret
in
add
and
add
lock
or
sub
int3
int3
aad
jmp
push
shr
out
stc
iret
ljmp
and
pxor
sar
stc
sbb
pop
push
adc
aad
cli
and
cmc
cli
and
adc
and
or
daa
push
sub
lret
and
dec
or
sbb
and
add
jmp
in
sub
stc
and
ljmp
adc
iret
aad
sbb
add
jmp
ljmp
iret
sbb
and
and
in
add
sbb
ljmp
jmp
and
call
lret
push
or
add
out
sbb
bswap
out
cmc
pop
adc
daa
leave
int
pop
cld
sbb
lret
add
into
or
pop
pop
daa
cli
aad
cld
add
and
and
sub
es
int3
pop
out
and
and
unpckhps
and
rorb
rcrb
pop
or
out
push
lret
push
leave
pop
rorb
daa
add
add
int3
jmp
and
cli
or
shlb
es
and
and
aad
add
out
daa
jmp
push
ljmp
out
int3
add
sbb
push
daa
stc
rorb
or
pop
add
or
or
aad
and
call
sbb
idiv
sbb
rorb
and
daa
add
stc
psubsb
shlb
or
leave
add
es
and
and
into
leave
lret
jmp
jmp
sbb
leave
lret
sti
and
or
nopl
add
psubd
lret
rcl
out
out
or
sbb
shlb
leave
push
sbb
call
push
and
add
add
rcrb
sbb
leave
sti
or
shl
add
sbb
stc
ljmp
push
pop
stc
add
int
notl
rcl
and
and
int
jmp
cld
and
and
jmp
and
or
stc
mov
add
out
adc
call
in
ljmp
shl
int3
and
pop
sub
add
adc
into
sbb
push
and
or
or
push
iret
adc
sti
out
push
adc
lock
adc
lret
sti
cli
push
out
out
sti
lret
add
or
sub
in
or
sub
out
adc
in
shlb
or
out
push
jmp
call
sbb
int
add
in
add
cli
rcl
add
or
lock
pop
stc
and
sbb
lock
or
adc
shr
cld
push
or
cli
adc
push
out
adc
out
or
cli
out
and
int3
sbb
bswap
sbb
or
pop
into
jmp
push
in
and
leave
or
in
adc
or
cld
push
or
cmc
or
leave
adc
int3
call
add
ljmp
add
add
add
add
sub
add
and
iret
pop
pop
lret
and
out
sub
and
lock
add
into
incl
and
or
stc
adc
cli
jmp
int
or
leave
add
lret
stc
cli
int
imul
lret
lret
and
lret
in
adc
adc
add
pop
add
int3
or
pop
add
jmp
ljmp
and
adc
sbb
push
cld
sbb
in
or
cmc
sti
pop
add
in
push
and
sbb
and
daa
lret
pop
in
cmc
push
cld
out
add
add
daa
lret
add
or
and
ror
push
or
call
stc
sub
and
push
and
es
into
cmc
mulb
add
not
sbb
push
pop
add
or
daa
sbb
pop
push
and
cmc
call
add
or
sbb
lret
es
int3
rorb
in
or
cli
pop
sbb
add
and
push
int3
or
pop
lock
or
sbb
ror
sbb
sbb
cli
pop
or
out
and
cld
add
stc
lret
add
or
push
es
cli
daa
leave
jmp
and
or
add
int
test
push
or
push
push
push
add
aad
add
and
cld
add
add
call
add
out
add
add
adc
and
imull
daa
or
or
lret
add
int3
or
and
or
in
lret
int
jmp
stc
sub
in
add
push
or
and
iret
in
push
lret
push
or
sbb
or
in
or
out
pop
lret
in
push
shlb
and
adc
and
cli
push
in
add
sbb
or
daa
adc
in
pop
or
and
push
and
in
add
adc
iret
out
call
push
nop
jmp
push
ror
daa
shr
pop
pop
int
adc
shl
add
add
cli
shlb
add
notb
push
in
push
adc
rcl
iret
pop
push
stc
or
and
sbb
div
into
out
and
movups
lret
leave
pop
testb
add
es
pop
push
in
push
testb
out
adc
add
int3
out
pop
and
add
aad
shlb
out
sbb
add
add
and
sbb
out
daa
testl
push
and
es
pop
pop
sti
adc
and
and
and
out
ljmp
into
add
and
cld
lret
add
or
sbb
cmc
rolb
sbb
call
out
push
adc
mull
ljmp
add
ljmp
push
push
sbb
daa
push
and
mull
and
lret
out
rcl
sbb
and
add
and
testb
jmp
cld
es
leave
or
lret
or
call
out
push
dec
leave
cmc
sbb
or
cli
adc
and
shr
lret
add
lcall
push
sti
ljmp
or
call
add
daa
push
cli
lret
jmp
not
stc
or
sbb
incl
aad
sbb
into
lock
pop
ljmp
shlb
not
or
out
and
jmp
and
or
and
push
push
push
push
and
div
rcrb
jmp
leave
sbb
sub
add
and
sbb
add
in
test
jmp
and
lock
pop
int3
lret
rolb
in
add
pop
rolb
and
and
rolb
in
add
es
leave
push
rorb
in
add
int3
rorb
jmp
sub
sub
stc
or
sbb
pxor
out
or
div
or
lret
out
lret
negl
stc
sti
adc
or
or
or
sbb
cli
int
adc
add
out
into
or
lret
int3
in
add
or
int3
out
and
or
push
and
push
in
daa
add
out
pop
and
or
add
in
cli
sub
or
or
sbb
lock
and
and
stc
out
into
add
out
pop
sbb
lret
sbb
aad
into
push
cmc
push
or
cld
adc
bswap
int
in
psubq
or
add
call
lret
ljmp
negb
and
out
in
push
push
sbb
and
add
jmp
cmc
cld
and
push
lock
in
jmp
pop
and
add
add
lret
and
int
and
nop
pop
push
ror
and
add
out
int
int
add
into
sbb
sbb
and
ljmp
shlb
and
cld
and
pop
int3
and
out
pop
test
adc
or
or
call
lret
sbb
cmc
in
and
aad
lret
into
or
add
cmc
cmc
leave
or
adc
imul
push
jmp
push
jmp
psrld
shr
and
shr
sti
adc
shlb
jmp
rclb
adc
daa
push
out
or
and
and
div
and
and
push
testb
cmc
daa
add
or
pop
sti
lock
add
in
daa
and
aad
lret
negb
lret
adc
jmp
jmp
push
daa
and
lret
push
add
sar
sbb
call
add
and
leave
int3
add
rorb
or
in
or
int
or
or
cld
in
mulb
sbb
jmp
or
rorb
pop
cld
iret
add
and
and
sbb
sbb
add
sti
and
add
and
push
add
jmp
pop
jmp
adc
push
or
adc
sbb
cld
sbb
cli
psubq
and
add
rcrb
in
add
push
or
or
or
iret
push
int
in
ljmp
lock
jmp
imull
rclb
and
lock
aad
sbb
sbb
add
push
add
in
sub
sti
sbb
and
stc
and
cli
or
in
add
es
leave
leave
add
and
add
sub
push
sbb
in
or
cmc
push
lret
sbb
add
adc
and
sbb
push
and
test
push
and
sti
in
in
stc
lock
adc
sbb
push
push
pop
aad
push
jmp
or
out
jmp
int3
and
or
add
push
sub
and
shl
or
and
pop
adc
into
notb
push
and
pop
int
int
jmp
add
add
out
shlb
call
and
or
cld
or
cmc
call
lret
push
out
in
in
imull
pop
sub
out
add
sbb
in
pop
or
sti
sbb
cld
jmp
add
in
out
and
cli
lock
rcl
or
and
sbb
sbb
or
es
daa
sbb
sbb
in
cmc
out
call
int3
sbb
cli
push
or
adc
sbb
jmp
cli
push
lret
or
sbb
paddsw
in
sbb
push
ljmp
pop
adc
sbb
int
or
and
or
add
rolb
push
in
and
stc
jmp
pop
stc
rcrb
shlb
add
and
or
call
and
and
in
call
int3
in
and
psubsb
add
sub
daa
out
add
sbb
push
bswap
call
and
sbb
lret
nop
push
sbb
decl
jmp
adc
pminsw
cld
or
sbb
call
rcrb
aad
adc
shl
or
leave
push
and
adc
cli
and
in
testb
in
or
es
in
or
shr
cli
into
and
and
in
adc
sbb
add
in
add
or
in
add
and
add
stc
into
push
add
and
sbb
or
push
add
ljmp
int3
jmp
jmp
int3
in
and
in
leave
adc
and
sbb
and
add
and
sub
pop
and
es
cmc
and
add
cld
lock
out
or
sbb
aad
add
push
pop
rolb
push
int3
into
es
imul
pop
sbb
leave
and
lret
pop
add
push
out
or
dec
lcall
pop
aad
sbb
sbb
or
or
and
add
call
or
pop
or
lret
negb
or
jmp
out
add
add
add
add
pop
lret
out
daa
stc
call
and
and
add
ljmp
cld
shlb
pop
sbb
sti
cmc
lret
iret
in
cld
adc
out
add
sub
adc
sbb
add
add
int
in
add
sbb
and
and
jmp
rcrb
pop
ud0
in
cmc
or
int
or
out
add
iret
sbb
rcrb
or
rorb
push
ljmp
cmc
decl
call
add
lret
ljmp
int
push
pop
push
lret
cmc
add
imul
es
ljmp
imul
pop
lret
out
lcall
and
lock
and
jmp
call
lret
cli
and
ljmp
in
cmc
sub
into
iret
sbb
add
rolb
add
sbb
add
imull
ror
lret
or
imulb
cld
testl
push
in
or
stc
and
or
ror
into
sar
in
and
and
rcl
or
push
cld
test
push
or
daa
in
and
rorb
ljmp
adc
daa
pop
in
jmp
rorb
aad
adc
cld
and
sbb
or
add
jmp
int3
int
or
out
cli
jmp
cld
es
int
and
cli
jmp
dec
adc
daa
sbb
and
int
add
push
cli
lret
sub
sar
add
sbb
sar
in
pop
cld
stc
call
into
or
push
or
and
cld
and
ljmp
lock
ljmp
in
sbb
and
and
push
and
add
daa
push
and
push
pop
int
push
in
call
rolb
stc
and
es
and
push
daa
ljmp
daa
in
or
or
lock
lock
add
sub
cli
push
int
call
jmp
mulb
iret
jmp
sti
cli
stc
add
out
or
ror
pop
add
and
lret
out
or
sbb
idiv
jmp
add
push
shr
leave
ror
push
or
lock
sbb
lret
stc
jmp
push
add
rolb
stc
leave
jmp
shr
imul
daa
rcrb
or
int3
testb
cmc
or
adc
iret
add
es
out
lret
and
push
sbb
jmp
jmp
es
out
and
idiv
sbb
or
and
out
jmp
sbb
cli
push
and
and
imul
and
notb
ljmp
adc
add
push
sbb
or
add
push
call
in
or
and
sub
iret
and
and
in
or
rcrb
into
or
sbb
and
sbb
sbb
sbb
lret
aad
or
push
or
sbb
and
push
sti
out
push
add
sbb
sbb
or
and
out
add
lret
add
sbb
add
iret
lret
out
and
add
add
or
daa
in
and
pop
or
in
and
iret
stc
shr
push
out
add
aad
aad
leave
cmc
es
sbb
or
sbb
pop
add
iret
lret
lret
push
push
and
lret
add
push
push
jmp
pop
int3
daa
add
leave
or
push
and
cli
decl
cld
leave
negb
add
lock
testl
lock
lret
pop
add
or
and
leave
div
lret
lret
or
sbb
lret
push
and
or
or
jmp
out
add
pop
and
cli
and
and
pop
add
leave
or
push
lret
sub
rclb
cmc
in
add
sti
push
lret
daa
sbb
into
and
leave
or
pop
or
or
sti
lock
and
iret
out
pop
add
call
lock
sbb
in
sbb
rorb
daa
and
leave
push
es
and
pop
and
add
sbb
sbb
or
push
pop
shlb
in
leave
add
push
lret
int3
add
and
push
stc
and
aad
sbb
aad
sbb
and
notl
int3
es
out
push
leave
pop
int
leave
in
or
sbb
ljmp
or
and
pop
cld
push
and
jmp
add
sbb
adc
shl
iret
cmc
or
pop
or
ljmp
shlb
sbb
pop
sbb
int3
lar
daa
add
ljmp
sbb
or
call
add
daa
negl
out
adc
dec
in
stc
jmp
shl
jmp
leave
or
add
sbb
sbb
sar
and
daa
jmp
sar
add
push
push
and
pop
or
sti
add
push
in
or
dec
push
in
and
or
test
shl
lret
add
and
out
negb
or
push
lret
and
or
push
adc
iret
push
adc
sbb
pop
stc
out
out
lret
push
in
add
sub
ljmp
ljmp
sbb
sub
sub
and
adc
sbb
add
add
es
ljmp
add
and
cld
mul
out
lret
cld
and
or
out
out
pop
int
call
jmp
add
cli
and
add
daa
es
cld
sbb
shl
cli
or
and
push
call
sbb
lock
and
or
int
rorb
into
or
or
ror
cli
push
adc
add
or
sbb
stc
sbb
lock
add
and
lret
or
sbb
add
ljmp
pop
lock
or
daa
sbb
add
cld
jmp
push
pop
sbb
add
or
lret
add
lret
pop
add
ljmp
and
push
sbb
or
in
sub
or
jmp
call
add
lret
add
and
in
in
mov
add
add
out
sar
int
sbb
and
add
pop
iret
or
out
adc
and
add
iret
aad
in
call
testl
leave
and
iret
and
ljmp
and
add
leave
call
and
and
push
int
and
int
es
call
call
or
or
daa
add
and
sub
sbb
cli
pop
pop
cmc
add
call
and
and
add
adc
push
or
or
pop
jmp
negb
jmp
add
and
ljmp
and
pop
add
push
jmp
in
aad
add
and
add
jmp
int
cld
in
cli
leave
sbb
pop
sub
sub
push
out
shl
add
push
int
and
out
int3
add
shlb
es
shr
jmp
cld
lret
or
lcall
or
sbb
push
out
push
out
stc
and
push
or
add
cli
out
push
aad
stc
sbb
rorb
cmc
pop
sti
or
push
leave
sbb
sbb
cli
lcall
or
and
pop
sbb
sbb
out
out
movaps
and
adc
pop
out
aad
sbb
and
or
add
test
push
and
sub
lret
ljmp
and
push
or
and
cli
add
and
or
stc
add
call
stc
int
push
in
and
push
sti
sti
adc
invd
and
out
jmp
and
daa
and
rolb
rcrb
testb
adc
or
daa
in
pop
notb
cld
and
es
or
or
cli
push
or
add
add
push
or
add
testl
and
aad
sbb
or
sbb
and
shr
int
pop
cli
add
cld
aad
shlb
ljmp
es
and
int
adc
push
add
cmc
sar
and
sbb
or
add
es
leave
sub
sbb
sbb
dec
adc
pop
lret
ljmp
ljmp
int3
cmc
in
shr
shr
push
add
out
stc
lret
pop
decl
and
sbb
rclb
cli
es
or
jmp
adc
sbb
nop
daa
adc
shr
push
call
sbb
or
and
or
into
add
sub
call
or
jmp
call
add
or
call
or
ljmp
add
add
add
or
in
imulb
and
sbb
add
sbb
into
rolb
pop
sti
and
sbb
lret
or
leave
sbb
jmp
push
or
sbb
int
pop
pop
daa
and
add
sub
jmp
push
jmp
into
sbb
adc
or
cli
and
and
add
into
cli
in
push
es
and
pop
cld
sbb
sti
lock
add
or
push
stc
sbb
add
add
add
rcrb
and
ljmp
or
cli
sbb
add
dec
adc
stc
sti
push
lret
in
adc
imul
leave
lock
add
cld
paddsb
sti
pop
or
push
and
es
int
adc
prefetchw
or
and
lret
push
add
iret
and
and
adc
push
aad
in
add
push
into
adc
es
sbb
daa
or
adc
add
or
out
ljmp
pop
add
or
sbb
adc
add
pop
or
and
testl
sbb
sub
pop
stc
sbb
push
int3
sbb
and
aad
and
in
or
or
int3
add
lock
push
sbb
and
cli
pop
push
sbb
and
imul
pop
and
sbb
in
pop
pop
adc
adc
ud0
lock
in
and
into
sbb
pop
out
in
in
stc
add
sti
int
lret
sbb
adc
push
add
daa
and
push
stc
call
push
push
and
and
call
clts
lret
int
adc
lret
aad
sub
pop
and
or
rcrb
add
iret
pop
stc
leave
int
and
and
iret
jmp
sbb
sbb
out
pop
stc
add
add
int
int
and
int
out
out
sar
push
and
add
adc
lock
jmp
and
sbb
es
sbb
and
testl
in
or
or
stc
jmp
cld
lret
or
into
lret
in
leave
push
sti
and
sti
lret
iret
in
push
out
or
push
add
ljmp
or
add
add
push
or
or
out
pop
or
lret
in
lret
sti
or
jmp
daa
add
add
cld
and
add
leave
adc
and
adc
add
jmp
push
and
push
aad
sti
and
jmp
sti
ljmp
es
iret
shlb
sbb
shl
and
iret
pop
in
shr
rorb
or
pop
jmp
iret
out
in
negl
ljmp
cld
int3
lret
push
sbb
imulb
int3
jmp
imul
adc
and
in
aad
out
out
sbb
test
push
aad
in
aad
or
call
add
or
or
or
int
pop
add
bswap
int3
sti
int
add
sbb
iret
or
cld
lock
into
int
daa
and
and
or
in
test
call
add
aad
push
lret
adc
cli
adc
rorb
add
in
jmp
cmc
jmp
out
iret
add
leave
and
sti
and
add
sbb
adc
stc
in
rclb
push
sbb
daa
int
test
rcrb
jmp
or
add
add
in
out
testl
add
push
out
cld
add
aad
add
cli
and
sbb
out
or
and
in
and
leave
pop
cmc
or
in
or
sbb
or
add
add
rcrb
and
adc
and
leave
sbb
adc
sub
and
lret
incl
pop
add
cld
sbb
in
pop
sti
adc
pop
out
sbb
ror
cli
leave
and
push
sbb
out
mov
sbb
sbb
sub
call
and
push
or
or
in
notb
daa
push
lret
in
daa
in
or
add
cli
aad
or
lret
and
pop
int3
iret
pop
leave
pop
daa
pop
sbb
and
push
and
and
ljmp
decl
add
sub
pop
jmp
adc
in
jmp
in
and
adc
or
or
and
add
push
add
ljmp
lret
sbb
add
and
pop
and
out
sbb
in
testb
testb
sti
iret
and
call
stc
and
testl
aad
sbb
ljmp
pop
sbb
ljmp
idiv
int
shr
or
sbb
push
add
add
push
or
int
sbb
call
add
sub
and
sbb
lock
cmc
int
or
aad
and
leave
int
and
and
pop
ljmp
sub
cli
aad
stc
add
test
sti
ror
add
and
ljmp
sub
pop
testl
sbb
or
movups
daa
add
in
cli
pop
and
notl
ljmp
and
and
and
div
int3
sbb
and
sub
notl
and
add
shrb
sbb
ljmp
add
ljmp
imul
es
adc
and
add
add
adc
cmc
adc
or
leave
es
test
cli
or
or
daa
call
or
lret
or
and
jmp
or
push
sbb
and
sbb
lret
stc
add
sbb
sub
int3
add
stc
and
jmp
aad
and
call
in
and
lret
jmp
push
or
push
shl
and
and
or
aad
jmp
push
in
cld
sti
stc
pop
daa
out
add
jmp
int3
lret
add
or
push
and
leave
add
add
cld
aad
sub
push
add
or
push
int
and
shlb
and
call
nopl
and
sti
testb
and
or
iret
in
call
and
or
ljmp
sbb
cmc
and
sbb
pop
and
jmp
int
daa
into
cld
into
daa
or
in
in
stc
es
call
imul
adc
int3
or
sbb
in
sbb
daa
sub
sbb
or
push
add
jmp
and
lock
in
and
out
in
ljmp
and
adc
or
sbb
int
adc
idiv
and
mulb
adc
sbb
and
or
and
int3
push
mull
out
leave
pop
cli
sti
daa
push
adc
sbb
add
notb
or
push
push
sbb
add
and
and
add
push
testb
in
lock
or
and
and
add
lret
es
and
idiv
jmp
cmc
in
pop
out
es
and
or
or
or
int
or
add
push
and
or
sbb
es
ljmp
and
add
int3
in
add
sbb
add
sbb
or
add
and
int3
and
aad
stc
pop
into
out
push
and
lock
int3
pop
in
idiv
jmp
add
and
int3
add
or
ljmp
leave
and
add
into
add
and
sbb
in
push
not
call
lock
or
out
leave
add
pop
int3
or
leave
out
push
or
sbb
sar
leave
and
add
push
bswap
or
in
out
or
rcrb
shlb
or
and
or
ljmp
cmc
out
and
lret
and
cld
push
add
imul
sbb
es
and
int
or
es
iret
push
and
push
or
and
daa
stc
aad
or
daa
adc
or
adc
push
int3
out
or
rorb
sbb
and
in
and
sbb
jmp
iret
ror
jmp
add
push
cmc
int
pop
not
sbb
out
or
daa
sbb
and
aad
add
sbb
and
paddb
add
and
pop
aad
sub
pop
sar
int3
out
sbb
or
rcrb
or
pop
sbb
sbb
lock
notl
and
add
add
pop
stc
pop
call
lock
cld
pop
or
stc
adc
add
pmaddwd
int3
and
cld
pop
sbb
sbb
leave
and
and
push
and
iret
and
and
or
stc
iret
and
adc
aad
aad
int3
jmp
call
ror
or
stc
stc
or
in
sbb
add
cmc
in
add
jmp
adc
ljmp
add
and
ljmp
out
lret
jmp
in
lret
sbb
push
lret
call
add
or
and
push
add
adc
or
out
sti
adc
and
and
int
sbb
out
bswap
int3
lret
out
sub
ljmp
sbb
jmp
and
sbb
in
call
iret
adc
and
stc
or
lret
or
or
push
negl
or
push
int
add
push
notl
adc
call
sub
ror
add
int
daa
aad
and
pop
or
pop
out
add
daa
iret
rcrb
jmp
add
cld
jmp
in
negl
jmp
jmp
ljmp
add
lret
and
lret
pop
and
call
int3
lock
lret
add
leave
int
sbb
add
push
and
cmc
pop
out
into
and
push
es
or
add
push
sbb
add
add
call
adc
shr
sti
cli
ljmp
lret
adc
and
bndldx
pop
adc
pop
or
or
in
push
ljmp
push
add
shl
sti
jmp
sbb
in
shr
into
testl
int3
push
sbb
in
in
sub
pop
sbb
cli
adc
in
imul
and
or
stc
int3
sub
or
add
in
cli
add
out
jmp
sti
sbb
in
ljmp
or
push
negb
stc
push
cmc
in
in
es
daa
in
jmp
testb
or
or
jmp
into
or
stc
add
push
and
cmc
add
add
into
add
push
movaps
and
and
lret
push
leave
add
in
push
in
add
sbb
into
or
or
int3
sar
int
lret
sbb
jmp
jmp
testl
call
and
shlb
or
in
and
pop
or
and
adc
ljmp
sbb
adc
out
out
cmc
sbb
cld
pop
pop
add
stc
sub
lret
and
imul
int3
and
in
pop
or
into
sbb
cmc
or
cmc
add
cld
into
pop
and
int3
es
and
sti
shr
add
and
or
sub
or
adc
es
sbb
into
int3
push
sbb
push
daa
aad
push
in
leave
and
pop
and
adc
rcl
stc
into
push
out
lret
ljmp
and
cld
add
add
add
or
es
add
or
and
ljmp
out
int3
or
add
cli
in
adc
call
or
stc
in
pop
jmp
sbb
negb
pop
and
add
ljmp
sbb
and
add
pop
syscall
or
out
pop
and
daa
in
and
or
or
or
add
sbb
push
jmp
add
add
out
into
call
and
and
sbb
lock
and
or
lret
aad
clts
lret
in
sub
ljmp
lret
leave
smsw
leave
cli
and
push
int3
sbb
push
and
and
add
daa
idiv
in
in
sbb
cli
and
lret
shl
daa
cmc
sbb
and
out
es
lock
or
in
or
stc
aad
add
cli
add
lret
push
pop
lock
or
rclb
sbb
call
or
movaps
dec
out
sbb
shr
sbb
add
or
sbb
into
out
and
cld
into
adc
add
adc
into
pop
pop
add
es
add
pop
sbb
cmc
lret
int3
jmp
ljmp
int
sub
add
call
out
or
lret
cld
or
into
lock
push
out
and
sti
test
or
and
and
adc
sbb
out
sbb
or
push
adc
daa
cli
pop
jmp
add
sti
add
sti
ljmp
push
add
or
lock
sbb
sbb
leave
add
adc
pop
cmc
cmc
push
in
adc
or
sub
push
cld
or
and
cld
in
mov
out
push
not
pop
pop
in
es
cli
or
and
jmp
push
pop
and
add
add
push
in
or
shlb
pop
pop
cli
and
and
and
sbb
or
out
leave
and
stc
in
into
jmp
cli
shr
pop
and
and
int3
in
rcrb
add
jmp
es
sti
add
in
pop
out
leave
push
sbb
and
add
or
and
and
and
or
adc
and
rolb
jmp
iret
int
or
and
and
cmc
pop
sbb
adc
sti
int
push
pop
and
shlb
in
shr
push
mul
push
lret
sub
and
in
lock
leave
sbb
and
and
or
add
es
push
paddsw
add
in
call
lret
cli
daa
or
add
aad
or
or
sbb
or
sbb
sbb
add
cli
sbb
daa
cli
adc
leave
int
in
push
push
add
add
lock
rcrb
daa
cld
sbb
add
add
adc
adc
cli
sti
push
call
sub
cld
sub
rolb
aad
call
sbb
in
push
sti
and
pop
leave
es
es
add
or
sti
cmc
into
or
or
stc
push
or
int
imul
in
and
sub
lret
jmp
shl
and
and
add
push
and
add
int3
in
out
or
cli
call
call
div
push
in
or
adc
sub
lret
int
sti
add
and
jmp
rcl
pop
cld
into
lret
negl
pop
cmc
add
push
in
int3
and
and
jmp
and
int
ljmp
notb
and
in
in
jmp
sbb
imul
int3
lock
testb
stc
and
and
and
push
lret
and
or
in
leave
rorb
lock
daa
pop
or
adc
cli
push
or
and
cld
and
or
add
or
or
cmc
in
sub
call
or
and
iret
add
and
push
add
push
and
out
test
and
shlb
sbb
ljmp
int
ljmp
lock
adc
bswap
adc
testb
daa
sub
cmc
pop
push
es
push
int
jmp
cld
pop
sub
sbb
out
iret
pop
sti
in
and
int
notl
int3
and
into
leave
jmp
mov
sbb
cli
adc
sbb
push
and
es
cmc
adc
or
push
movlhps
adc
lret
into
pop
push
and
add
in
in
in
and
sbb
dec
or
iret
push
sbb
and
rorb
iret
cmc
lret
add
jmp
and
jmp
add
bswap
lret
pop
or
push
add
out
iret
push
add
or
aad
push
sti
add
and
and
incl
imul
in
and
jmp
pop
or
or
or
or
or
int
iret
iret
push
adc
push
in
or
not
and
int3
jmp
sbb
rolb
push
add
jmp
and
es
int
adc
add
lock
out
sbb
pmaxsw
add
lret
add
in
and
in
cld
push
call
and
sub
add
sti
iret
sbb
notb
jmp
shlb
in
call
or
and
sti
rorb
int3
push
jmp
int
out
pop
rorb
in
lret
cld
jmp
push
and
add
or
push
in
sub
testl
iret
stc
or
jmp
sti
pop
in
add
in
jmp
rorb
add
aad
or
out
and
or
out
out
call
aad
decl
stc
int3
out
aad
stc
add
and
out
out
or
and
and
adc
or
into
negl
ljmp
iret
iret
es
sbb
lret
and
call
add
or
sti
jmp
daa
add
push
adc
sbb
and
stc
daa
lret
pop
or
jmp
rcrb
sbb
or
out
pop
add
push
lock
out
int
rcrb
jmp
adc
push
incl
lret
sub
sbb
and
or
rolb
ljmp
pop
adc
add
sbb
or
and
cli
ljmp
out
leave
pop
add
cld
into
ljmp
or
leave
aad
daa
in
sbb
or
or
into
and
push
cmc
add
in
adc
mulb
sbb
push
out
cmc
lret
and
or
and
and
ljmp
or
lret
pmullw
or
sti
and
push
out
add
daa
add
sbb
or
lret
sti
push
push
int3
es
pop
rorb
sbb
jmp
call
into
int3
out
or
daa
aad
aad
aad
or
sbb
cld
push
int3
in
push
in
push
lret
in
or
adc
or
rolb
sbb
lret
and
rclb
add
ljmp
jmp
pop
call
leave
leave
add
push
aad
or
pop
add
or
daa
add
ljmp
push
push
sti
add
out
or
in
and
and
push
pop
sti
sbb
aad
add
cmc
pop
iret
or
and
jmp
rolb
adc
and
lret
or
daa
or
add
push
pop
and
dec
and
push
or
stc
and
and
imul
iret
or
and
stc
aad
int
add
adc
pop
int3
cmc
sbb
call
stc
or
not
sbb
or
sbb
and
add
stc
adc
cmc
call
or
lock
out
out
into
sub
jmp
aad
shlb
out
adc
add
push
add
shrb
sub
adc
jmp
sub
cmc
sbb
sti
and
lock
stc
lret
lret
rclb
pop
cli
pop
push
push
push
pop
push
in
add
leave
iret
test
call
leave
add
and
cmc
es
or
int
stc
ljmp
sbb
and
and
lock
stc
jmp
aad
add
push
int
out
adc
or
mulb
pop
or
push
adc
lret
in
sbb
int
cld
and
in
pop
stc
add
or
out
in
lcall
into
testl
in
push
leave
cli
or
lock
or
sub
jmp
out
sbb
add
leave
in
cli
call
and
and
and
add
aad
or
pop
jmp
add
add
jmp
ljmp
pop
add
sti
daa
rclb
and
ljmp
and
add
leave
push
or
jmp
int3
and
add
lock
jmp
decl
or
push
push
and
jmp
jmp
push
psrld
or
sti
or
daa
cld
stc
lret
int
sub
push
push
jmp
ljmp
and
cli
out
out
daa
add
sbb
adc
rolb
ror
shl
in
daa
out
or
add
lret
sti
sbb
push
add
adc
add
testb
int
and
out
and
leave
adc
jmp
and
sti
leave
add
cli
and
jmp
or
not
or
and
int3
and
testl
add
sub
or
sbb
leave
rclb
jmp
push
test
jmp
sbb
add
adc
stc
daa
or
jmp
jmp
sbb
aad
add
clts
adc
or
shlb
and
out
lret
shr
add
add
pop
or
lret
leave
pop
sub
add
stc
and
add
or
out
mulb
or
shr
int3
and
sbb
cmc
or
and
jmp
add
sbb
and
push
and
or
and
lret
sub
adc
add
in
testb
daa
shlb
daa
and
sbb
daa
and
lret
sbb
testb
int
lret
or
add
lret
or
and
int3
into
or
into
ljmp
out
pop
sti
int
or
add
and
div
iret
and
out
leave
and
rolb
add
cmc
or
sar
and
sbb
sbb
lock
or
adc
or
sub
aad
int3
or
into
out
ljmp
stc
jmp
cmc
testb
int
or
and
in
and
and
and
cli
and
and
int3
add
into
jmp
or
int3
pop
bswap
and
add
push
decl
add
add
add
and
push
out
in
call
sbb
push
aad
lret
lock
or
shr
call
into
out
and
daa
iret
call
add
in
daa
pop
into
lock
out
into
int3
cld
sbb
add
lock
pop
add
add
lret
push
leave
add
aad
in
int
daa
add
adc
int
adc
daa
ljmp
or
int3
int3
testl
lcall
ljmp
leave
pop
or
or
cld
es
or
sbb
add
int3
shr
in
sti
add
sub
add
out
es
leave
or
and
ljmp
sti
push
es
and
add
pop
sbb
int
and
or
or
int
push
sbb
into
aad
add
rcl
push
jmp
sub
and
and
and
and
lret
and
jmp
add
adc
pop
rolb
sbb
or
adc
ud2
into
add
jmp
mulb
and
pop
iret
lock
adc
and
add
or
call
jmp
lret
out
stc
add
and
or
or
lret
add
out
lret
or
and
add
testb
iret
add
into
or
into
cmc
push
or
adc
and
lock
jmp
push
push
and
push
out
in
add
push
int3
jmp
daa
out
or
or
and
stc
or
ljmp
or
and
add
notb
leave
out
leave
bswap
dec
mul
push
pop
cld
jmp
push
adc
or
in
es
jmp
in
in
mull
or
cli
and
add
out
sti
out
or
push
sti
call
mulb
adc
stc
leave
int3
sbb
or
in
rcl
or
and
into
notl
es
push
cmc
and
push
and
add
add
ljmp
push
pop
and
push
leave
sub
int
or
cli
aad
call
lret
sti
add
and
and
pop
call
or
in
add
pop
jmp
or
int3
in
push
add
lret
ljmp
incl
lock
int3
push
or
out
testb
in
lret
call
push
rorb
or
add
stc
cmc
or
or
iret
in
jmp
pop
test
and
sbb
incl
or
or
es
add
call
decl
pop
adc
in
sbb
or
iret
into
rolb
testb
sti
pop
int3
push
ljmp
add
lock
lret
sbb
sysret
or
int3
int3
add
int3
push
or
lock
jmp
and
call
add
in
pop
lret
push
sbb
pop
and
shlb
out
iret
add
add
lret
into
stc
add
in
adc
push
leave
push
or
in
sti
es
int3
pop
or
pop
stc
sbb
in
int3
pop
pop
lret
or
add
lret
adc
or
aad
sub
adc
testl
int3
sbb
in
sbb
pop
and
add
mulb
sbb
sti
or
push
in
or
aad
out
and
in
or
sbb
aad
sub
cld
lret
and
call
add
int
and
sti
shlb
and
in
imul
pmullw
out
and
sbb
push
lock
add
out
in
add
lock
sbb
sbb
push
push
or
or
sti
decl
push
and
aad
or
shl
rolb
or
in
or
out
sbb
add
add
in
psubw
and
testl
rcrb
pop
lret
push
shr
and
testl
leave
int3
push
out
sti
sbb
cli
stc
pop
cli
or
push
testl
pop
int3
cmc
jmp
add
push
int3
jmp
or
sbb
push
sub
cli
or
es
cmc
aad
call
in
push
add
push
shrb
and
add
out
cld
push
push
push
stc
cli
or
or
and
sbb
mov
push
lcall
int3
into
iret
add
notb
push
int
int3
sbb
daa
add
not
jmp
sbb
add
push
test
in
or
in
in
add
in
shl
aad
lret
call
into
adc
pop
daa
aad
shlb
cli
cld
cli
add
lret
in
in
add
sub
sub
call
pop
leave
push
daa
in
sbb
and
and
pop
bndldx
and
add
into
into
add
out
and
into
and
add
or
call
stc
pop
or
or
lock
or
add
add
int3
in
sti
add
iret
or
iret
rorb
and
and
testb
out
testl
lret
and
or
adc
rolb
sti
int
into
rclb
cli
iret
pop
cld
out
or
and
sbb
and
or
int
sbb
or
rcrb
int3
adc
adc
int3
and
es
push
shl
and
and
push
add
call
int
and
add
lock
adc
ljmp
add
jmp
sub
sbb
sbb
leave
sbb
push
add
or
cmc
add
jmp
pop
lret
daa
imul
in
cld
int
out
es
cli
add
add
stc
add
ljmp
lret
into
or
add
in
iret
and
int3
sbb
aad
daa
call
add
push
or
jmp
es
and
out
push
add
cld
stc
cli
add
or
es
sub
jmp
or
adc
rclb
or
push
add
sti
add
and
stc
jmp
and
rolb
and
iret
stc
sbb
in
or
psrld
psrld
sti
lret
call
stc
add
or
pop
dec
in
push
or
into
add
or
and
rcrb
rolb
push
sbb
jmp
cli
sub
pop
push
sbb
sbb
aad
pop
ror
aad
sbb
or
and
adc
adc
out
int
imul
lock
sbb
pop
adc
stc
and
or
daa
lock
rcrb
int
stc
and
and
pop
cmc
in
and
add
pop
cld
out
and
aad
push
pop
out
or
or
or
or
sbb
cld
not
lret
ljmp
and
sbb
pop
or
in
add
into
jmp
pop
push
jmp
in
pop
adc
leave
push
sbb
lcall
int3
into
or
into
or
int3
imul
lret
jmp
lock
and
push
and
cli
stc
add
and
sysret
add
and
pop
and
sbb
shl
and
rorb
aad
sub
add
in
sbb
sbb
add
lock
and
or
rorb
cli
lret
lret
sbb
or
add
lock
sbb
in
rcrb
add
cmc
and
or
cli
lock
call
cld
es
add
sbb
lret
shr
in
sbb
out
into
pop
sbb
daa
add
push
push
and
in
jmp
add
push
call
sbb
and
in
add
cmc
mul
stc
push
imul
leave
add
int3
or
and
lret
add
pop
lock
lret
jmp
sbb
pop
out
and
or
add
pop
sub
add
cld
aad
lcall
adc
or
iret
rcrb
sbb
sbb
sub
add
push
int3
sbb
or
lock
cli
add
out
and
and
into
and
add
in
int
push
sbb
push
into
adc
pop
push
cli
lock
int3
call
add
ror
aad
add
cli
out
and
stc
lret
or
jmp
add
rclb
jmp
or
in
add
cmc
in
cld
int
adc
idiv
in
pop
es
and
adc
call
or
add
lock
add
and
sub
sbb
sbb
sbb
cld
add
pop
and
out
shlb
sbb
daa
negl
lock
adc
stc
lret
aad
lock
push
or
or
add
sbb
add
daa
jmp
es
and
in
cli
negb
sti
push
ror
int
and
or
or
and
sbb
in
lret
or
and
aad
sbb
leave
jmp
adc
add
or
adc
pop
and
push
add
aad
sti
daa
push
into
pop
and
or
adc
daa
into
sbb
dec
aad
add
and
sub
and
or
into
leave
adc
or
decl
adc
iret
or
and
jmp
pop
cli
pminsw
sbb
jmp
or
rorb
ljmp
and
jmp
jmp
push
iret
add
add
push
or
adc
or
adc
sub
cld
imul
or
or
pop
jmp
pmulhuw
int3
add
out
push
lock
sub
add
adc
push
sbb
pop
in
add
push
or
cld
sub
or
es
in
cmc
add
sti
aad
and
add
jmp
rorb
add
ror
stc
adc
leave
pop
ljmp
aad
and
into
adc
int3
ror
lret
aad
int3
lock
adc
imul
in
testb
call
in
push
and
shr
sbb
iret
or
sbb
cld
and
lret
adc
and
int
adc
add
adc
add
cld
shr
in
shr
or
jmp
sbb
leave
add
lret
add
push
and
and
pmaxsw
or
and
or
not
lret
int3
or
push
or
push
add
pop
es
push
or
iret
sub
in
or
iret
or
and
or
cmc
int
add
iret
testb
adc
or
sti
push
rcrb
ljmp
or
pop
sub
mul
or
or
or
add
lret
stc
cld
add
push
or
testb
lock
cli
cli
lret
lret
or
or
adc
and
ror
in
ljmp
sti
out
rolb
lret
push
in
imul
cld
sbb
pop
push
lret
out
rorb
out
lret
ljmp
leave
leave
and
pop
jmp
jmp
jmp
add
int
and
ljmp
add
add
and
add
sbb
or
ljmp
and
pop
into
pop
and
jmp
pop
or
ror
and
daa
lret
pop
add
add
jmp
into
stc
or
int3
cld
lret
and
leave
or
pop
and
iret
push
or
or
in
and
or
leave
test
and
jmp
jmp
or
or
sbb
sbb
and
sub
psubq
sbb
and
and
push
lock
adc
leave
sub
in
int
push
push
add
and
stc
add
into
or
and
in
add
and
adc
lock
rcl
cmc
sub
aad
iret
iret
and
lret
stc
add
aad
ljmp
in
pop
and
notb
pop
leave
push
int
adc
stc
out
add
shlb
call
add
sbb
and
sbb
ljmp
pop
add
jmp
push
push
out
add
unpckhps
out
or
adc
or
sbb
sbb
pop
and
pop
add
lock
adc
cli
sub
add
pop
stc
rclb
lret
adc
leave
int
lret
daa
pop
rcrb
jmp
add
add
add
idiv
leave
jmp
add
or
add
adc
es
and
or
or
push
or
lret
sbb
lret
cmc
jmp
sbb
out
int
out
or
or
lret
add
call
or
pop
out
paddsb
sbb
push
sbb
cld
push
push
in
adc
sbb
cli
jmp
sbb
cld
and
sbb
sti
in
add
stc
into
sbb
pop
sbb
sbb
and
sbb
testb
out
or
push
rcl
adc
es
add
pop
in
lock
int
imul
cmc
testb
jmp
stc
adc
add
sub
out
mull
sbb
or
and
pop
and
and
imul
out
daa
incl
jmp
add
and
push
in
int
push
aad
into
sub
in
or
rcrb
and
add
leave
or
rolb
jmp
push
out
ljmp
add
push
por
add
ljmp
add
pop
lock
pop
or
shr
or
add
pop
lock
add
or
cmc
sub
lock
int3
or
sub
aad
push
pop
and
notl
pop
or
add
and
and
sar
and
call
or
leave
in
in
and
in
out
add
iret
adc
or
or
and
daa
lret
cmc
add
jmp
sbb
sub
and
cmc
and
test
call
or
push
and
add
add
rorb
and
add
adc
or
or
push
lret
cld
jmp
sbb
add
and
int
or
stc
pop
and
lret
add
mull
push
cli
sbb
lcall
cld
aad
in
sbb
cld
sti
and
and
and
jmp
sbb
sbb
stc
adc
pop
leave
and
jmp
pop
stc
rolb
or
cli
out
daa
sbb
push
daa
and
add
in
add
cli
and
or
pop
and
or
div
pop
lret
lret
jmp
rcl
add
push
add
add
lock
adc
lret
in
add
push
daa
out
lret
add
call
push
and
imul
or
lret
jmp
add
or
aad
or
push
or
cmc
out
sti
rorb
into
rclb
es
add
stc
jmp
and
sbb
push
idiv
and
add
out
leave
add
cld
rclb
leave
aad
and
idiv
pmulhuw
or
add
out
or
shl
rorb
stc
push
iret
or
sbb
or
and
add
sub
or
and
or
cld
sbb
sbb
in
or
sti
sub
test
and
push
or
cmc
adc
and
sbb
and
es
sti
and
int3
cmc
stc
add
in
push
push
sbb
sti
out
or
cli
push
and
or
call
stc
or
into
int3
lock
in
testl
sbb
and
daa
add
sbb
push
add
push
testb
es
and
and
testb
sti
lock
psubsw
aad
lret
and
or
sub
pop
stc
in
daa
in
int3
and
testl
stc
jmp
sub
or
or
lret
or
pop
pop
add
in
sbb
sub
cli
ror
add
lret
cmc
or
ljmp
lret
jmp
lock
pop
nopl
or
in
and
div
lret
and
or
or
or
iret
pop
daa
cld
not
and
mulb
and
sbb
daa
stc
adc
rclb
or
add
add
adc
sbb
pop
sbb
daa
add
cld
call
div
push
add
push
or
rorb
or
or
add
and
and
add
add
add
add
lret
add
jmp
int3
sbb
ljmp
add
daa
sbb
adc
push
jmp
out
aad
pop
negb
rolb
in
cld
aad
lret
push
cli
in
push
ror
sti
and
es
add
jmp
cmc
es
aad
sbb
lret
int3
and
sbb
and
and
rcrb
out
or
sbb
add
and
pop
out
lret
out
push
ljmp
lret
push
leave
iret
push
call
pop
and
or
imul
es
iret
add
in
into
into
int3
add
and
add
push
and
leave
add
and
in
sbb
or
aad
and
jmp
sub
cld
sti
or
out
jmp
and
sti
in
and
cmc
add
add
call
and
add
push
ljmp
add
lret
add
jmp
aad
and
and
or
pop
pop
add
cmc
in
push
add
clts
iret
add
add
jmp
sbb
and
or
jmp
iret
ljmp
out
jmp
lret
daa
jmp
jmp
pop
push
stc
cli
add
mul
add
or
or
push
negl
movhps
aad
add
testl
or
pop
push
adc
and
ljmp
pop
sbb
push
push
and
push
pop
jmp
or
paddsw
imul
add
or
pop
add
push
out
push
or
sbb
sti
and
rorb
add
or
pop
add
sbb
or
iret
lock
add
add
rclb
and
ror
push
and
adc
adc
int3
or
cld
push
jmp
rcl
int
pop
sub
add
out
sbb
es
push
shlb
and
lret
in
call
add
add
sub
cli
lret
and
cmc
pop
sti
sub
jmp
es
adc
add
or
and
add
add
and
and
or
lock
sub
cmc
sbb
sbb
add
sbb
and
adc
cmc
and
mulb
in
and
and
rolb
pop
pop
negb
push
jmp
or
out
add
add
sbb
aad
sbb
sbb
call
in
lret
sub
rolb
leave
and
cli
add
and
cli
cli
sbb
or
out
sbb
sbb
int3
in
int3
and
sub
leave
push
idiv
or
push
call
jmp
in
lret
or
or
in
stc
push
sti
cli
push
int
sbb
ror
sbb
or
ljmp
sbb
and
in
jmp
cmc
sbb
into
mov
push
dec
add
add
lock
or
sbb
adc
in
bswap
add
lock
and
sbb
adc
sti
lret
jmp
sbb
int3
and
lret
add
sbb
or
pop
sub
test
and
into
add
cld
testb
lock
or
and
out
aad
es
or
and
aad
lock
or
aad
and
pop
testl
cld
add
pop
sbb
sbb
sbb
or
testl
sbb
shlb
not
pop
or
call
sbb
add
add
or
push
push
push
sub
or
out
or
ljmp
push
or
in
in
sub
push
in
and
leave
negl
or
add
or
lret
and
cli
lret
and
not
add
cmc
in
add
stc
decl
jmp
leave
push
add
add
add
or
mull
add
iret
add
sbb
in
in
int3
and
or
or
out
push
leave
add
iret
out
jmp
or
add
sub
idiv
or
lock
ljmp
sbb
push
and
rcl
in
pop
adc
sbb
stc
and
pop
call
cmc
sbb
pop
sub
rclb
pop
sbb
add
es
jmp
add
cld
pop
or
in
rclb
in
jmp
add
push
lret
push
add
or
lret
and
and
add
out
daa
add
lock
daa
add
pop
decl
add
adc
push
in
add
lret
or
cli
cmc
stc
or
daa
lret
cli
int
lret
pop
or
sbb
rolb
out
push
adc
int3
and
push
add
shlb
sti
lret
sbb
lock
cli
rorb
sbb
add
sbb
sbb
or
and
adc
out
stc
cld
or
or
or
add
and
lock
nopl
invd
adc
add
and
or
push
and
push
out
into
daa
cli
daa
in
or
or
daa
out
adc
leave
sbb
add
leave
sub
imul
ljmp
add
int
add
add
add
shr
call
in
shr
lret
or
ljmp
pop
push
testb
and
ljmp
or
call
out
or
out
add
sbb
or
adc
push
into
and
cli
imul
lret
jmp
ljmp
pop
testb
out
testl
rorb
daa
adc
out
jmp
pop
or
es
sti
in
or
add
in
jmp
sbb
in
idiv
adc
cmc
and
pop
lret
sbb
pop
push
add
cli
rorb
aad
in
or
sub
add
int
out
jmp
stc
or
add
sub
unpckhps
pop
cld
sbb
pop
sbb
out
and
cmc
add
leave
out
jmp
sub
call
sbb
or
ljmp
mul
sbb
adc
pop
cli
or
or
adc
jmp
int3
add
out
and
add
lret
and
cli
lret
sbb
or
and
stc
add
in
and
mulb
cli
iret
and
or
jmp
add
push
test
bswap
in
iret
lret
and
cli
lret
in
push
add
cli
iret
adc
in
and
stc
add
aad
or
int
cld
cld
and
pop
and
pop
and
jmp
cli
stc
sbb
incl
or
iret
sbb
notl
push
sbb
add
and
sti
out
pop
push
lret
and
add
ljmp
lret
notb
sbb
and
and
daa
add
es
and
out
pop
or
into
int3
leave
or
cld
testb
sbb
shlb
add
or
in
stc
add
add
and
out
add
or
sbb
lock
idiv
add
in
pop
rcrb
rclb
add
and
sbb
and
add
and
leave
pop
sbb
lock
sbb
leave
or
jmp
and
push
into
int3
in
and
mulb
sti
int3
and
mulb
pop
or
stc
add
leave
or
push
sbb
sbb
call
lock
sbb
and
and
jmp
lock
ljmp
and
in
in
out
into
and
add
ljmp
into
push
ljmp
or
or
add
adc
lmsw
sbb
int3
sbb
or
jmp
cld
jmp
lret
add
and
or
cld
leave
and
in
sti
add
add
paddsb
sub
es
add
out
int3
leave
push
femms
add
cld
int
lock
push
and
push
add
sbb
or
sti
sub
adc
add
jmp
adc
push
testl
push
out
pop
stc
out
and
lret
and
lret
cmc
pop
sbb
sbb
add
sbb
daa
and
sti
in
jmp
lret
pop
call
in
lret
push
rcrb
and
and
add
into
add
and
and
aad
lret
pop
shl
sti
call
in
mulb
lret
aad
add
adc
not
and
sbb
iret
lret
or
and
and
or
or
es
or
lock
or
in
or
jmp
or
call
pop
and
adc
push
aad
out
or
sbb
push
and
pop
int3
jmp
and
lock
and
push
daa
or
or
and
out
and
or
add
push
push
sub
push
sbb
or
out
add
sub
and
not
es
ljmp
or
sti
int3
lock
incl
ljmp
sbb
lret
lock
stc
or
out
sti
lret
add
or
or
push
add
es
and
es
in
dec
negb
add
cld
rcl
adc
or
or
add
jmp
in
pop
cld
lret
adc
into
lock
jmp
jmp
pop
push
call
sub
push
out
cli
or
and
lret
sar
sbb
in
lock
adc
push
cld
leave
lret
pop
stc
daa
leave
in
lret
call
lock
stc
sbb
lret
or
add
or
and
adc
or
lret
in
stc
or
in
sub
sti
cli
adc
or
cld
or
or
testl
sti
lock
push
lret
add
sbb
lcall
stc
lock
and
cli
push
add
jmp
out
jmp
out
in
stc
or
and
and
ljmp
leave
lret
add
into
in
and
sbb
int3
jmp
or
or
and
int3
cld
int
add
sbb
push
pop
add
call
pop
add
iret
out
lock
shl
and
stc
or
pop
in
cld
push
mov
jmp
lret
and
push
cld
out
pop
pop
or
jmp
add
and
leave
pop
stc
sbb
int3
imul
lock
add
or
and
or
sbb
jmp
or
sbb
in
int3
out
sbb
add
cli
testl
or
push
stc
and
or
call
and
leave
and
incl
add
or
and
and
mull
sub
ljmp
or
add
cld
adc
aad
push
stc
jmp
add
pop
add
div
daa
or
out
aad
cmc
push
sub
push
int
sti
and
stc
rclb
jmp
daa
add
ror
rolb
pop
lret
lret
or
pop
pop
and
or
in
sub
int
pop
adc
pop
push
leave
rolb
pop
daa
stc
and
jmp
lret
or
add
mulb
lret
lock
jmp
div
stc
stc
jmp
in
daa
push
sub
and
int3
add
add
daa
rorb
incl
add
aad
add
or
sti
aad
push
mulb
cli
and
add
imul
out
lret
into
push
add
and
in
aad
stc
out
push
stc
add
or
in
and
add
iret
or
cmc
leave
iret
and
stc
shl
add
cmc
lret
and
call
psubsb
stc
int3
and
out
and
not
adc
or
rclb
push
jmp
add
and
lret
add
sti
pop
or
stc
lret
in
daa
imul
or
or
int
or
pop
jmp
int
jmp
cld
and
pop
jmp
sbb
lock
and
or
or
or
leave
shr
push
cmc
stc
or
add
pop
not
sbb
jmp
and
cmc
or
pop
sbb
and
in
and
or
pop
cld
add
pop
or
div
cld
and
imull
sbb
not
in
sti
and
ljmp
lret
sbb
iret
or
nop
shl
and
rcrb
add
lret
add
add
int3
lock
and
aad
sbb
in
rolb
leave
lret
sbb
cld
imul
add
add
lsl
testb
or
leave
testl
push
add
sub
add
push
lret
push
cld
push
pop
lret
sub
lret
es
rorb
push
sti
add
adc
or
adc
adc
cld
add
or
in
int
out
cli
ljmp
call
ljmp
sbb
sbb
out
pop
aad
sbb
out
rorb
cli
int
adc
add
in
lret
in
or
out
out
sbb
es
and
add
and
aad
out
push
add
in
add
out
or
push
add
and
and
cld
or
out
jmp
rcrb
sti
add
in
push
aad
push
pop
aad
and
sub
sbb
jmp
or
push
or
and
add
push
lret
iret
cli
push
and
sti
adc
daa
int3
out
pop
and
jmp
pop
add
sbb
adc
or
and
rolb
push
lock
or
es
shr
pop
sub
sbb
sti
int
sti
add
push
rolb
int
ljmp
pop
in
leave
push
push
test
add
push
out
out
mulb
and
sbb
add
shlb
sbb
add
add
and
or
and
cld
or
sti
sti
cmc
lret
jmp
lret
adc
or
testl
sub
out
out
in
sbb
add
jmp
push
imul
add
sbb
and
sub
in
out
add
cli
incl
sbb
cli
ljmp
cld
and
or
sti
cld
leave
add
adc
cli
pop
pop
add
out
and
daa
in
ljmp
or
adc
ljmp
push
push
and
sbb
out
push
pop
adc
sub
mulb
sub
in
ljmp
int
out
add
pop
and
ljmp
out
sbb
or
into
pop
pop
cmc
daa
sbb
shr
aad
push
adc
shl
push
int
aad
add
in
int3
jmp
add
or
sbb
into
sbb
pop
adc
cmc
call
int
push
sbb
in
call
or
or
jmp
or
pop
leave
pop
cmc
add
sbb
push
add
pop
incl
out
push
sbb
sbb
adc
and
sbb
add
push
add
stc
add
add
and
or
and
in
adc
out
es
or
aad
push
out
int
in
sbb
por
iret
sub
lcall
and
in
adc
add
sbb
testl
pop
push
into
lret
lret
push
aad
and
push
sti
call
sbb
jmp
add
daa
or
in
or
and
sbb
and
pop
jmp
add
aad
lret
imul
or
out
push
in
adc
in
push
and
in
iret
int
rolb
and
sti
cld
lret
add
and
or
or
in
out
push
adc
iret
pop
or
add
int3
add
and
iret
sbb
sbb
into
stc
daa
lock
rclb
stc
jmp
cmc
shr
and
add
int3
imul
call
and
int3
shr
push
cmc
and
add
or
out
add
in
sub
call
cld
push
add
and
rorb
out
test
testl
add
in
add
or
jmp
or
or
adc
sbb
shl
lock
shr
leave
sbb
lret
push
or
negb
jmp
pop
out
and
or
adc
pop
or
sti
or
and
sti
add
cmc
sbb
and
add
lock
pop
aad
stc
or
es
lock
add
sbb
in
pop
int3
ljmp
cld
sbb
jmp
and
push
sbb
sbb
sti
add
sbb
or
or
daa
iret
jmp
sub
and
add
sti
ror
sub
add
pop
and
add
or
in
push
call
sbb
pop
in
jmp
or
sbb
out
pop
cmc
daa
call
or
cmc
or
or
decl
add
add
in
or
notl
and
lret
add
test
lock
adc
and
add
stc
int3
lret
or
and
push
or
rcrb
cli
sti
or
cmc
jmp
add
or
in
sbb
leave
daa
into
add
push
lock
sbb
add
sti
sub
and
int3
div
push
sbb
lret
lret
call
ljmp
in
and
jmp
or
or
sbb
iret
adc
push
push
int3
adc
and
and
aad
in
and
push
leave
sbb
sar
push
push
in
int3
adc
sbb
and
sub
sbb
add
pop
cli
cmc
out
cld
add
call
and
add
and
daa
in
sbb
and
sti
iret
lret
stc
and
lret
or
push
out
push
mull
in
incl
in
or
negb
and
rorb
ljmp
cld
pop
lret
sbb
adc
add
sbb
test
jmp
in
int
shr
lock
mulb
ljmp
in
paddb
lret
or
in
add
cld
sbb
sbb
adc
and
leave
sbb
jmp
sbb
in
and
aad
lret
ljmp
push
add
push
and
int
out
out
lret
idiv
int3
es
idiv
or
and
testl
testl
sbb
lret
into
or
int3
and
rclb
int3
cli
sbb
add
out
in
sub
rorb
add
and
push
cli
and
add
and
or
or
or
sti
ljmp
adc
push
int3
sbb
add
in
testb
cmc
sbb
es
and
sbb
aad
aad
jmp
push
add
and
add
lret
in
jmp
leave
in
testl
or
push
sti
es
push
cld
cmc
lock
stc
push
sar
out
pop
aad
sbb
cli
jmp
and
and
in
or
push
leave
leave
rorb
ljmp
and
add
and
lock
es
out
add
sbb
or
in
iret
es
cli
sub
imul
add
adc
int
lret
lock
sbb
int3
in
shl
add
pop
add
adc
pop
adc
decl
pop
and
lret
out
and
lret
call
jmp
es
out
sbb
push
es
cmc
stc
aad
lret
rcl
or
lock
pop
or
call
idiv
sub
int
cli
and
push
push
adc
call
sub
out
jmp
call
adc
and
sti
shlb
lret
lret
aad
stc
jmp
cli
sbb
add
test
cld
push
sti
or
pmaxsw
or
add
add
and
pop
jmp
add
cli
jmp
pop
or
sbb
int3
or
cmc
in
push
add
and
push
lret
and
aad
int3
sbb
add
add
pop
push
in
or
add
adc
sbb
lret
out
cli
or
int
sbb
and
sub
adc
in
in
add
shr
sub
or
lret
daa
cmc
jmp
sbb
sti
adc
add
ljmp
in
and
add
jmp
or
notb
and
push
sbb
and
or
jmp
sbb
or
iret
int
and
add
cld
or
add
or
pop
and
add
int3
cmc
and
into
pop
push
and
adc
add
add
sbb
or
lret
sbb
add
push
lock
adc
add
daa
out
or
pop
out
adc
mull
or
aad
and
lret
cli
lret
daa
int
and
cli
sti
rolb
or
jmp
into
lret
incl
adc
int
and
add
or
rclb
rolb
leave
cld
or
cli
iret
iret
lret
lret
and
sub
lret
add
nopl
adc
aad
or
and
and
and
sub
push
stc
and
sbb
iret
in
int3
into
or
adc
or
sti
add
leave
iret
or
int3
add
daa
ljmp
ljmp
leave
add
push
or
and
aad
sbb
cmc
pop
add
or
sub
jmp
or
call
in
pop
in
add
jmp
and
aad
call
es
push
paddb
adc
or
cld
add
add
lret
shlb
and
sti
in
add
cmc
lret
push
sub
and
pop
and
sbb
negl
jmp
add
pop
or
pop
add
leave
or
lcall
sub
cli
or
sbb
add
sti
int3
and
or
stc
add
in
in
add
iret
add
or
stc
sti
int
iret
cld
out
add
pop
into
leave
adc
cld
pop
call
or
lret
and
ljmp
lock
and
adc
add
in
add
aad
lret
sbb
or
push
cld
leave
in
aad
push
pop
in
negb
add
aad
cld
jmp
sti
add
push
jmp
jmp
rolb
into
add
cld
lret
and
push
push
or
leave
psadbw
or
stc
out
push
ljmp
jmp
push
iret
cmc
add
in
and
pop
pop
out
sti
in
and
push
and
cli
lock
mul
cli
out
or
out
add
call
ljmp
pop
into
add
and
sbb
sbb
sbb
or
adc
and
aad
add
imulb
in
into
notl
lret
iret
sub
jmp
testl
jmp
push
pop
stc
int3
and
jmp
and
int3
and
lret
or
add
rcl
cmc
and
pop
and
push
aad
sbb
add
sub
and
or
into
cli
add
and
and
in
ror
add
push
testb
cmc
cld
and
add
pop
pop
int3
push
and
or
daa
and
sub
jmp
and
cmc
jmp
cmc
lret
stc
out
add
out
add
lret
add
int
cmc
pop
or
add
add
out
and
jmp
test
cli
cli
and
or
and
jmp
jmp
and
ljmp
and
or
es
ljmp
in
adc
add
and
push
lret
jmp
daa
in
pop
daa
pop
cli
div
sti
sbb
int
or
into
idiv
out
or
lret
in
int
leave
push
adc
adc
leave
sar
out
ljmp
and
es
adc
pop
or
push
ljmp
shr
and
in
push
or
cli
call
stc
pop
sbb
decl
leave
add
leave
in
ljmp
in
testb
sbb
or
add
and
sbb
into
adc
add
adc
or
rolb
out
into
jmp
push
dec
and
aad
iret
lock
lock
psubq
rorb
cmc
aad
or
and
int3
in
lock
sti
and
testb
add
or
sbb
into
or
out
and
in
out
and
aad
pop
sbb
lock
lret
or
cld
push
and
pmullw
leave
and
cmc
idiv
cmc
jmp
add
push
jmp
cld
and
in
add
sti
call
jmp
out
pop
leave
sbb
stc
and
and
or
call
adc
and
out
and
daa
rolb
or
int3
add
or
push
cli
or
or
or
push
and
or
cmc
cld
add
int3
add
out
push
es
int3
int
cli
lret
push
call
aad
push
or
shr
aad
or
add
and
sub
int3
call
rorb
jmp
stc
and
out
shr
or
pop
add
lret
jmp
and
and
sbb
pop
out
and
int3
rorb
push
cld
sbb
add
or
adc
aad
into
or
iret
sbb
pop
and
testb
and
testl
or
in
or
add
daa
sbb
int3
in
lock
add
add
decl
sub
jmp
add
sub
add
and
or
sti
push
push
push
int3
sbb
sti
int3
into
iret
shlb
add
add
lret
sbb
in
or
sub
or
es
es
testb
or
add
imul
cmc
add
or
and
or
aad
ljmp
push
cmc
and
sbb
and
add
testl
int3
imul
sbb
push
sbb
cld
dec
daa
sbb
add
adc
or
add
or
or
sbb
out
cmc
pop
or
lret
and
leave
add
or
notl
in
or
in
or
lret
sbb
daa
and
lret
into
in
adc
negb
pop
pop
add
es
and
sub
push
imul
paddsb
lock
sti
into
sar
out
pop
add
mull
in
out
lar
adc
in
push
push
push
lock
and
call
jmp
or
pop
int3
in
out
jmp
testl
and
aad
pop
int3
or
daa
pop
add
sub
and
add
sti
add
or
jmp
and
or
daa
adc
cmc
and
sar
in
add
or
push
rcl
cli
in
out
nopl
push
lock
sti
sub
or
call
daa
sbb
push
adc
add
and
lret
dec
cmc
aad
sbb
and
ror
and
and
cld
push
push
in
and
and
daa
int3
or
leave
lret
div
add
add
push
and
stc
add
leave
adc
or
stc
cld
int
lret
int
add
adc
push
and
in
aad
out
push
sbb
add
sar
push
add
iret
sbb
or
aad
and
push
and
int
rclb
aad
int
adc
cli
or
sti
in
or
or
pop
adc
and
sub
push
pop
out
ljmp
int3
and
stc
jmp
or
push
push
in
or
push
cli
and
sub
and
lret
push
lret
in
ljmp
push
daa
daa
call
pop
incl
es
and
push
shlb
out
push
push
sub
push
and
cld
or
add
pop
rolb
adc
push
push
sbb
adc
push
into
aad
or
leave
sbb
into
sbb
and
call
and
int3
or
add
int
sbb
out
es
iret
stc
leave
and
sbb
in
es
es
adc
out
into
mull
jmp
int3
int
add
or
jmp
sbb
cld
imul
and
add
sti
sbb
ljmp
shlb
and
int3
iret
and
push
pop
or
es
iret
es
adc
and
iret
aad
and
int3
iret
int
leave
add
push
add
pop
cld
imul
cli
invd
into
jmp
or
add
pop
adc
jmp
lret
adc
add
and
add
add
and
add
iret
pop
leave
cli
push
and
lock
pop
adc
ljmp
in
or
jmp
or
jmp
out
or
in
in
and
call
pop
push
add
sbb
testl
es
adc
lock
into
push
sbb
sbb
int3
notb
and
shr
or
pop
and
add
cli
es
stc
lret
adc
or
out
or
and
sub
test
sbb
or
push
sbb
in
and
in
in
or
in
and
or
jmp
push
lcall
testl
adc
and
sbb
daa
push
push
add
push
leave
and
in
ljmp
int
push
and
or
sbb
out
jmp
dec
ljmp
cli
and
pop
int
ljmp
cli
sub
pop
jmp
es
ljmp
or
cmc
jmp
or
or
cli
in
and
adc
ljmp
negl
rolb
and
cli
add
push
jmp
shl
sbb
jmp
or
pop
sub
push
int3
pmaddwd
jmp
push
and
adc
in
es
bndldx
or
daa
sbb
out
add
lock
lret
push
rolb
pop
imul
and
testb
add
bswap
int
or
int3
sbb
sti
add
push
int
or
pop
and
lret
mull
push
and
stc
cld
pop
or
int3
and
es
aad
and
sar
lock
sbb
into
or
aad
pop
add
stc
stc
pop
lock
aad
pop
add
call
or
int
or
pop
sti
testb
or
or
or
testl
call
aad
add
add
in
add
iret
or
shlb
sbb
and
push
in
stc
add
aad
sbb
or
add
sbb
and
out
call
add
adc
and
and
and
or
sbb
push
in
testl
push
adc
imul
jmp
push
or
or
out
pop
sbb
clts
and
or
sti
int
and
in
pop
add
sbb
or
or
int
aad
add
testb
sbb
negl
or
sbb
pop
adc
aad
int
add
cld
adc
iret
ror
jmp
jmp
push
lret
es
sti
stc
sti
daa
or
sbb
lret
jmp
add
aad
and
or
cld
add
out
shr
out
add
call
pop
add
add
add
out
sub
ljmp
rolb
into
int
out
pop
and
pop
or
add
add
testl
int3
leave
leave
test
daa
in
or
or
testb
or
and
es
in
sbb
sbb
int
lock
push
sbb
sti
add
and
add
ljmp
out
add
lock
ud2
adc
daa
or
push
pop
push
or
pop
int3
out
and
or
and
out
push
push
in
cld
add
es
and
or
out
sbb
aad
push
sti
add
iret
add
sbb
aad
aad
and
out
daa
jmp
sbb
and
and
iret
and
sbb
push
and
leave
push
in
add
sbb
add
pop
testl
lret
pop
push
es
into
add
daa
and
into
or
sbb
cli
jmp
sub
nop
adc
daa
push
or
and
rolb
lret
adc
stc
cld
sub
add
add
and
and
and
sbb
or
sub
push
add
push
daa
or
int
sbb
sbb
leave
or
lret
cld
cli
add
cmc
rorb
push
or
daa
sbb
stc
push
stc
push
push
and
decl
es
and
or
rorb
and
in
and
adc
and
add
add
cld
push
sbb
call
cmc
out
add
and
ror
pop
stc
call
pop
or
lret
sbb
imull
sbb
push
or
cli
push
sbb
idiv
and
rorb
sbb
adc
in
lock
cmc
or
lret
testl
sbb
int3
pop
out
and
sbb
testl
sbb
es
cmc
in
testl
push
psubsb
daa
call
pop
and
sub
cli
and
sub
pop
adc
in
and
and
and
call
sbb
sbb
call
daa
lock
sbb
lret
in
or
out
or
into
adc
and
and
or
sub
add
cld
int3
add
or
or
pop
or
stc
leave
lock
and
sbb
in
in
imul
sbb
por
push
pop
cld
or
add
pxor
and
add
and
add
cmc
in
push
sti
ljmp
or
and
stc
add
int3
or
jmp
push
or
test
or
in
div
jmp
push
adc
int
cli
sbb
and
add
or
sub
into
rclb
sub
sbb
call
pop
push
es
push
int
push
and
add
es
and
iret
sbb
push
ror
out
and
and
and
int
in
in
add
push
testb
or
sti
pop
out
adc
add
sub
push
add
aad
add
in
or
negl
sti
sbb
pop
negl
push
aad
push
in
es
daa
imul
push
jmp
in
or
sbb
add
sbb
leave
or
sti
pop
push
sub
sub
daa
add
rorb
lret
add
jmp
jmp
and
rclb
sbb
lcall
lock
or
in
lock
push
and
idiv
out
push
sbb
sbb
sti
lret
sti
out
or
sbb
lret
iret
iret
sub
adc
and
lret
in
lret
adc
and
cmc
or
cld
or
or
jmp
adc
stc
sbb
add
lock
ljmp
cli
ljmp
sub
sbb
adc
cld
push
push
pop
idiv
bswap
and
pop
and
stc
iret
lret
pop
or
and
sub
and
push
shlb
or
cmc
sar
sub
sbb
cli
out
and
sti
add
in
and
daa
push
notb
or
sub
rolb
sbb
add
or
aad
pop
lock
shlb
and
add
int3
sbb
rclb
or
add
and
push
adc
daa
shr
out
out
adc
add
in
leave
out
call
pop
in
int3
pop
in
in
leave
or
aad
jmp
aad
out
pop
in
and
in
int
lret
aad
adc
in
adc
int3
add
es
in
adc
int3
leave
cmc
sbb
sbb
add
and
dec
and
jmp
sti
aad
ljmp
daa
int3
paddsw
add
lock
jmp
sbb
sbb
int3
and
iret
stc
iret
es
or
adc
rorb
pmulhuw
cli
sti
leave
es
mull
adc
and
rolb
in
or
or
push
or
testl
add
lcall
cld
cld
out
sbb
cld
imul
push
or
in
sub
add
aad
and
and
pop
in
shr
daa
in
pop
dec
push
add
testb
in
and
out
int3
and
lret
or
cli
iret
cli
call
in
sbb
sbb
or
mov
or
ljmp
and
sub
leave
daa
add
cld
in
in
add
push
add
int3
adc
shlb
in
sub
or
ljmp
sbb
add
sub
int
jmp
add
push
and
and
sar
out
in
add
and
push
in
lock
or
sbb
lret
sbb
sar
push
adc
iret
pop
jmp
adc
ljmp
call
push
lock
in
and
in
int
adc
testl
sbb
and
bswap
testb
or
sbb
iret
and
femms
idiv
or
push
sbb
testl
mov
and
rorb
lret
and
pop
out
or
or
and
add
out
jmp
sbb
call
add
and
call
and
push
imulb
stc
add
out
aad
call
pop
lret
in
int3
add
not
and
sbb
cld
int
sbb
stc
in
lock
aad
sti
and
and
pop
add
lock
call
sbb
lret
or
shl
adc
sub
pop
lock
sbb
push
and
ror
add
adc
leave
call
and
aad
and
into
pop
push
lret
sti
stc
cmc
aad
lret
cli
in
or
jmp
sbb
ljmp
add
daa
add
into
or
add
sbb
sbb
cli
sbb
or
test
add
lret
add
or
in
sbb
cli
into
push
rclb
sbb
sbb
daa
in
add
or
push
add
adc
sbb
in
aad
push
and
daa
iret
pop
into
and
pop
lret
add
jmp
and
int3
or
rolb
sbb
and
daa
add
push
pop
add
cld
shlb
and
or
or
push
and
call
push
add
ror
sub
paddb
in
sbb
in
int
sbb
add
iret
and
negb
cli
int
sbb
ljmp
sti
or
and
lret
es
call
push
pop
lret
and
sbb
add
sti
and
or
and
call
cli
pop
or
and
incl
out
out
sti
add
sub
lock
sub
lret
int
push
and
add
add
adc
incl
or
or
nopl
stc
adc
push
in
mov
in
in
or
sbb
or
stc
ljmp
lret
lret
or
stc
adc
int3
es
add
push
ror
lret
cli
dec
add
and
in
cld
leave
cli
daa
shl
and
out
es
sub
in
out
adc
and
shr
jmp
push
add
add
add
leave
sbb
pop
adc
call
sbb
in
jmp
pop
and
push
int
cli
int
in
and
ljmp
notl
push
aad
adc
or
lret
shr
div
int3
pop
sbb
out
and
and
into
or
lock
or
in
int3
iret
int
iret
sbb
leave
pmaxsw
add
push
adc
lret
pop
cld
out
push
and
jmp
daa
div
sbb
int3
daa
adc
or
or
add
iret
add
or
lock
cli
in
pop
adc
ljmp
and
add
jmp
and
or
and
sbb
push
add
in
adc
adc
and
add
or
daa
push
or
or
lret
add
or
sbb
and
in
or
push
in
pop
or
aad
out
and
int
lret
sub
push
daa
ljmp
push
out
aad
sub
add
or
add
incl
push
adc
jmp
sbb
push
out
sbb
jmp
or
add
and
mul
add
pop
incl
into
add
add
adc
lret
leave
or
in
add
and
add
cld
pop
push
push
aad
sub
add
add
lock
add
adc
out
sbb
and
call
aad
sbb
and
add
call
leave
or
lret
lock
int3
cld
daa
aad
and
iret
sbb
add
or
sbb
or
cli
int
ljmp
or
adc
testl
out
pop
or
add
adc
add
call
int3
or
jmp
int
rorb
dec
push
and
add
daa
out
leave
incl
add
negl
push
and
stc
or
jmp
out
and
testl
rorb
jmp
lret
and
push
add
and
add
or
or
cld
iret
in
leave
push
ljmp
add
push
lret
pop
sar
iret
or
sbb
in
int
lret
sbb
sbb
adc
out
sbb
int3
idiv
sti
push
in
sbb
out
or
lret
sbb
pop
es
add
div
int3
push
and
int
add
sbb
int3
and
sbb
push
call
daa
or
lock
in
add
bswap
adc
jmp
or
cli
aad
lock
add
add
testl
pop
idiv
push
idiv
or
out
adc
or
int
call
and
lret
div
pop
int
cld
pop
add
bndstx
cmc
es
push
and
and
pop
pop
nopl
daa
add
or
int
leave
negl
sub
sbb
out
pop
push
push
push
lret
call
in
add
in
out
into
pop
rolb
pop
and
add
stc
or
out
rcrb
sbb
jmp
and
es
and
in
sub
add
sti
call
out
sbb
and
cmc
daa
cmc
aad
add
ljmp
leave
sbb
cld
sar
in
and
jmp
stc
add
in
push
add
in
stc
pop
testb
jmp
out
adc
and
iret
cld
and
cld
pop
leave
add
cli
add
add
and
or
add
adc
shr
push
add
and
lret
sti
in
sbb
aad
sti
test
cld
int
jmp
add
out
into
pop
or
pop
out
pop
push
push
mul
stc
and
daa
push
sbb
pop
in
call
daa
push
add
pop
lock
pop
out
cld
adc
or
in
sbb
cmc
pop
or
daa
lret
lret
and
add
int3
iret
stc
out
lret
cli
and
sti
and
cmc
iret
add
and
cmc
and
iret
or
lret
push
lret
ljmp
cli
sub
adc
adc
sbb
sbb
leave
leave
sbb
adc
adc
add
stc
pop
add
cli
lret
push
and
lret
leave
iret
call
sbb
int3
leave
add
jmp
iret
and
and
adc
and
and
daa
add
leave
lock
and
mulb
cld
push
nopl
testl
sbb
adc
ljmp
add
or
in
or
in
add
and
cli
pop
cli
add
sbb
call
sbb
into
or
aad
out
jmp
push
lret
adc
add
pop
and
and
jmp
out
shl
or
and
or
sub
push
or
cld
or
in
add
daa
or
lret
daa
sbb
adc
add
and
sub
call
push
add
in
int3
daa
pop
add
or
in
rorb
pop
cli
es
sbb
lret
cli
iret
sbb
cli
cld
int
push
sub
aad
push
sub
aad
testl
sbb
push
adc
iret
push
add
adc
cli
imul
pop
adc
in
and
or
rolb
pop
rclb
jmp
and
ljmp
sbb
and
add
add
call
lock
or
int
and
or
add
testl
push
iret
in
push
sub
or
leave
ljmp
in
jmp
lock
add
in
not
in
sbb
rorb
pop
ljmp
or
add
adc
iret
out
into
and
pop
cmc
in
push
pop
aad
ljmp
lret
call
leave
sysret
push
pop
aad
add
lret
int3
or
push
or
and
in
call
int3
in
push
sub
or
push
sbb
pop
add
add
lock
sbb
add
cli
and
sti
into
ror
or
in
sbb
rclb
aad
daa
and
int
or
jmp
add
ljmp
and
in
pop
mulb
int3
adc
rolb
push
pop
or
decl
sbb
add
shlb
jmp
push
add
pop
push
lret
ljmp
add
sbb
push
cld
ljmp
and
iret
sti
out
lret
add
adc
add
pop
push
aad
or
adc
cli
or
adc
aad
and
lar
or
int3
pop
jmp
and
and
adc
add
lret
or
sbb
pop
adc
and
adc
or
push
ljmp
testb
sti
rcrb
sti
adc
call
in
sbb
not
out
cld
call
pop
cmc
ljmp
shr
iret
lret
or
or
shlb
into
int3
or
jmp
or
dec
pop
shrb
pop
syscall
sbb
pop
add
or
pop
out
or
lret
ljmp
jmp
int3
int3
pop
pop
and
in
in
aad
jmp
jmp
jmp
cmc
add
or
call
rcl
iret
sub
cmc
add
sbb
adc
ljmp
out
sbb
leave
iret
out
sbb
sbb
sub
adc
div
pop
iret
add
and
aad
add
leave
jmp
ljmp
in
negl
aad
in
cld
cmc
ljmp
sbb
daa
sti
push
call
testb
and
cld
in
out
jmp
int3
or
test
add
or
iret
int3
push
ud2
pop
jmp
or
sti
mulb
call
sti
int
jmp
push
or
sti
sar
es
call
int
or
stc
sbb
bswap
and
push
stc
or
leave
add
daa
or
or
and
out
or
push
out
in
or
out
or
shlb
stc
sbb
stc
sbb
aad
or
push
shl
cld
rorb
adc
sbb
decl
add
push
rorb
adc
or
push
and
add
ljmp
cmc
and
and
and
sbb
es
int3
pop
or
daa
prefetch
in
push
int3
add
pop
sti
push
and
and
sbb
or
push
or
pop
cli
add
sbb
pop
and
call
and
call
in
sbb
and
sbb
add
in
or
or
push
stc
and
push
add
leave
testl
prefetch
stc
daa
pop
adc
testl
adc
adc
ror
add
add
jmp
or
jmp
push
in
or
sbb
rorb
cli
add
or
or
and
iret
add
or
out
or
sbb
and
push
leave
into
pop
add
lock
or
adc
or
in
sbb
push
cli
out
jmp
dec
sbb
add
add
jmp
push
stc
testb
sbb
ljmp
push
out
or
add
lret
out
int3
pop
iret
lret
leave
in
or
add
lock
int3
cmc
in
sti
in
incl
lret
idiv
call
push
pop
push
lock
leave
or
cld
add
out
daa
add
leave
out
adc
into
and
and
lret
add
push
cli
or
and
lock
and
pop
push
sbb
push
int3
out
push
push
and
cli
in
adc
out
push
shlb
add
out
push
notb
or
out
iret
decl
or
iret
sbb
add
pop
pop
sbb
and
jmp
shr
idiv
sbb
add
call
cld
and
leave
stc
and
pop
in
and
cli
or
push
cld
sbb
adc
and
sti
pop
rorb
call
testl
add
adc
pop
cli
iret
cld
pop
adc
sbb
daa
aad
or
sbb
or
daa
imul
aad
es
adc
push
add
call
sbb
sbb
add
call
daa
lret
lret
stc
leave
lret
in
push
leave
cmc
or
push
or
sbb
cld
adc
pop
sbb
lret
sbb
sbb
and
or
ljmp
add
or
add
lret
or
stc
in
shlb
testb
cld
pop
iret
out
and
lret
ror
test
testb
add
cld
add
lret
iret
in
in
in
jmp
iret
into
sbb
into
add
adc
iret
lock
pop
lret
lret
or
jmp
sbb
and
and
or
and
add
and
int3
daa
in
or
push
out
shl
int3
push
movaps
or
sbb
aad
cli
aad
adc
sbb
and
not
and
push
nop
shlb
add
or
lock
or
call
out
cld
shr
cmc
shlb
or
add
and
pmaxsw
and
or
add
jmp
daa
and
push
or
iret
add
pop
add
jmp
call
ljmp
in
and
add
nopl
out
or
push
out
in
add
shr
push
sti
int
or
add
bndstx
push
add
int
in
ror
daa
and
rcl
div
adc
shr
and
stc
and
add
add
sar
add
into
push
or
in
or
testl
jmp
sti
call
int3
call
add
add
or
lret
idiv
add
or
and
daa
add
and
lock
cld
cld
add
stc
or
or
and
jmp
lret
or
in
lret
or
daa
leave
or
out
and
push
shlb
add
rolb
psubw
jmp
add
daa
lock
jmp
or
ljmp
pop
and
or
sbb
jmp
adc
out
and
mull
stc
or
pop
jmp
aad
sbb
push
out
and
lock
add
sti
es
and
or
and
rcrb
and
and
pop
add
jmp
in
ljmp
and
sti
mull
imul
testl
sbb
or
and
push
bndstx
add
cli
add
iret
in
add
add
and
in
in
sub
cld
stc
pop
daa
aad
push
sbb
daa
iret
sbb
add
stc
lret
out
and
and
and
ror
call
pop
lret
cld
pop
daa
jmp
ror
cld
sbb
push
daa
sub
adc
adc
in
iret
not
push
test
call
ljmp
daa
and
and
in
ljmp
in
or
leave
imul
lock
and
or
pop
out
cli
sbb
lock
int
call
cmc
jmp
shlb
pop
add
push
pop
leave
or
sbb
or
adc
sbb
int
in
sbb
call
cld
pop
int3
pop
and
sbb
push
out
aad
stc
sbb
or
in
ror
sbb
daa
pop
or
jmp
cli
stc
sbb
leave
sbb
sbb
and
in
adc
sub
or
pop
into
in
out
iret
lret
adc
shlb
lret
sbb
cmc
push
out
ljmp
pop
in
push
push
int3
ljmp
and
add
in
or
daa
sti
in
pop
call
call
add
pop
and
push
and
lock
lret
stc
sbb
and
lret
add
sub
dec
idiv
iret
jmp
pop
sbb
mulb
push
or
and
int
add
int3
or
cld
into
int3
aad
adc
push
add
call
add
out
lret
int
push
adc
pop
and
push
and
and
aad
pop
or
push
daa
lret
push
and
sbb
push
in
or
add
lock
and
cld
jmp
ljmp
call
cmc
add
leave
iret
lcall
ljmp
daa
and
leave
jmp
sub
es
lret
cmc
adc
rcrb
or
aad
add
and
and
or
pop
or
decl
sbb
and
lret
in
shlb
sbb
add
sbb
or
add
ljmp
adc
out
sbb
add
prefetchw
or
daa
out
daa
in
sbb
testb
stc
lock
or
aad
int
dec
sbb
push
sub
push
int3
cli
call
sub
pop
or
shlb
and
or
shlb
cli
sbb
shr
imull
out
es
and
jmp
adc
or
jmp
lret
and
or
into
aad
lret
incl
pop
dec
maskmovq
imul
ljmp
add
ljmp
not
dec
or
cli
nop
lret
or
and
add
and
into
sti
sti
and
adc
rclb
add
push
or
push
and
pop
call
cli
add
adc
pop
test
daa
stc
pop
iret
or
and
call
and
push
es
push
out
cli
or
or
call
or
and
jmp
in
stc
lret
iret
and
or
pop
leave
push
add
sbb
or
daa
or
and
and
and
stc
pop
pop
negb
sti
push
cld
int3
add
cli
and
adc
out
pop
push
pop
or
sbb
out
or
leave
in
push
add
push
push
or
add
push
add
stc
int
iret
pop
ljmp
call
cld
add
add
out
lock
pop
iret
cmc
jmp
out
in
add
testl
in
in
add
and
jmp
lret
and
add
and
push
push
and
cmc
or
out
rclb
lret
leave
int
shl
jmp
adc
adc
jmp
push
and
and
call
and
push
sbb
or
and
add
or
push
add
jmp
iret
pop
or
add
cmc
or
lret
or
iret
pop
push
out
sbb
pop
or
sti
push
or
or
and
add
into
sbb
decl
cmc
add
and
push
pop
iret
leave
adc
add
sti
or
push
rolb
adc
es
stc
cli
or
lret
mov
out
push
add
add
in
sbb
adc
jmp
sbb
daa
in
in
mov
cli
add
ror
add
push
add
and
jmp
and
or
sbb
pop
sub
or
sti
leave
out
stc
daa
es
iret
daa
iret
int3
add
int
add
cld
jmp
and
push
jmp
pop
push
int3
cli
jmp
pop
testb
sbb
stc
sbb
sti
push
pop
pop
call
adc
pop
add
rcrb
push
add
jmp
es
sbb
adc
pop
or
iret
sbb
int3
int
out
testb
cmc
cmc
into
and
pop
int3
lret
cmc
ljmp
add
daa
in
jmp
push
pop
add
add
lret
int
sbb
jmp
call
sbb
or
sbb
sbb
es
lret
and
add
lret
lock
cmc
sti
cli
pop
add
or
add
call
push
jmp
or
in
stc
sbb
push
sbb
adc
or
sub
add
or
es
call
adc
sbb
iret
sbb
cli
push
or
lret
testl
add
testb
sbb
sbb
call
cmc
add
sub
sbb
lret
push
lret
call
iret
or
es
add
push
add
daa
and
and
adc
aad
mulb
or
stc
and
cli
and
imull
or
or
and
lock
cld
jmp
add
or
or
or
int3
aad
in
ljmp
testb
or
es
jmp
in
testb
adc
cmc
int3
jmp
add
and
add
lock
and
shr
and
add
leave
pop
es
cld
add
sbb
sub
in
out
out
push
cld
and
shr
sbb
push
sub
cld
or
pop
or
and
pop
in
push
ljmp
and
call
add
in
int
es
add
int
sti
or
push
push
cmc
jmp
and
sbb
cli
rcrb
push
or
cld
in
or
sbb
int
push
pop
leave
call
int3
add
and
adc
leave
sbb
cmc
push
cli
sbb
lret
sti
adc
add
or
pop
pop
cmc
or
cli
sbb
call
lret
lret
jmp
call
ljmp
push
aad
sbb
aad
rcrb
ror
jmp
lret
or
into
add
leave
cld
push
and
rolb
push
in
adc
out
cli
add
sbb
leave
add
ljmp
adc
int3
add
sbb
and
and
push
int3
pop
sar
adc
add
and
ljmp
or
add
int3
iret
in
add
cld
pop
and
in
leave
es
and
lret
daa
lcall
lock
stc
or
adc
push
lret
out
leave
ljmp
out
jmp
and
and
sub
in
pop
cld
int
cmc
pmaddwd
sbb
sbb
push
daa
and
jmp
in
daa
shlb
or
int
add
int
lock
or
es
and
add
sti
cld
add
and
push
adc
aad
or
and
and
lret
or
push
and
stc
in
not
add
and
add
or
and
int
and
sbb
or
int
or
push
jmp
adc
in
in
pop
cld
daa
into
adc
and
call
cli
add
sti
sbb
out
add
pop
and
pop
add
adc
add
int3
cmc
sub
lret
aad
pop
and
leave
or
lret
push
imul
or
in
or
cld
add
in
push
pop
push
lret
daa
jmp
and
iret
iret
sbb
and
push
testb
out
cld
in
ljmp
pop
cld
sbb
sar
pop
es
or
pop
or
shl
push
and
or
push
pop
cmc
and
into
es
notb
pop
sbb
iret
and
in
rcl
add
and
iret
sti
sbb
int3
sbb
pop
aad
iret
in
sbb
lock
shl
add
into
and
pop
jmp
daa
or
int
lret
and
int
aad
and
and
idiv
not
and
push
imul
or
sbb
push
cld
testl
or
sub
jmp
negb
ljmp
daa
lret
jmp
mull
out
aad
rorb
push
int
aad
push
jmp
adc
or
sbb
push
iret
cli
lret
stc
and
push
daa
add
cld
mull
test
sti
and
or
and
add
in
adc
pmulhuw
testb
rorb
sti
or
or
sbb
or
into
and
stc
int3
jmp
cli
add
push
lock
sbb
imul
shlb
ljmp
out
add
cli
and
in
pop
rcrb
imul
out
aad
es
imul
rcrb
add
adc
sub
add
push
iret
add
add
or
add
and
notl
lret
or
and
in
out
movhps
in
pop
sbb
push
and
ljmp
and
add
sbb
or
int3
add
or
and
stc
in
cmc
sti
sbb
pop
call
sbb
lret
and
adc
and
push
and
push
sbb
shlb
sbb
add
stc
or
or
into
and
iret
int3
in
out
call
or
into
shl
add
jmp
int3
or
lret
aad
add
sbb
adc
in
sti
daa
sub
pop
es
in
add
cli
push
or
push
push
add
add
or
paddsb
int
pop
sbb
push
pop
call
and
sbb
int
int3
cld
adc
adc
lock
push
or
stc
sbb
push
push
and
in
and
lock
and
adc
es
in
or
ljmp
and
pop
add
aad
jmp
lock
test
pop
in
ljmp
or
es
jmp
invd
leave
sub
into
call
and
add
push
add
and
and
in
add
or
sub
or
add
add
in
or
in
cld
in
sbb
in
cmc
push
es
int
cld
int
lock
call
shl
or
int
out
iret
negl
cld
cld
ud2
add
add
or
in
and
in
cli
add
in
add
push
sbb
sbb
sti
or
add
call
sbb
or
aad
pop
add
lret
and
add
pop
leave
paddsb
in
pop
cld
rcl
and
es
aad
add
negl
rclb
ljmp
pop
sti
adc
add
ljmp
int3
and
cld
daa
and
add
daa
push
daa
add
stc
aad
add
cld
out
pop
or
and
adc
int
notl
and
pminsw
and
add
sbb
or
jmp
mull
add
daa
or
decl
and
sbb
adc
pop
lock
leave
jmp
stc
pop
iret
pop
sbb
jmp
pop
and
lock
sbb
add
or
in
add
push
or
rcrb
pop
pop
pop
idiv
jmp
pop
cmc
and
or
or
add
push
or
and
adc
add
call
adc
lock
pop
pop
lock
negb
in
push
into
out
out
or
lret
or
daa
lock
add
adc
push
daa
or
cld
lret
and
and
int
ljmp
and
sbb
or
cld
or
add
add
push
push
leave
int3
testb
pop
lret
or
and
pop
and
sbb
incl
adc
out
or
ljmp
add
jmp
in
or
rorb
add
or
sbb
add
call
rcl
iret
leave
in
stc
in
shr
in
leave
sbb
aad
into
cmc
and
lret
int
lret
add
add
sbb
sub
cmc
add
add
adc
test
or
and
sbb
or
and
and
or
jmp
adc
lret
or
or
or
out
into
add
add
int
sbb
out
aad
rorb
in
nop
jmp
push
or
sbb
push
or
lock
sbb
in
pop
push
int
lock
and
aad
lock
sbb
aad
in
sbb
and
daa
in
sbb
decl
pop
aad
in
idiv
add
and
push
or
and
and
and
add
jmp
in
cmc
or
pop
and
add
int
pop
cld
daa
add
sbb
adc
rorb
cmc
add
daa
sub
sbb
add
daa
or
push
adc
or
sar
into
es
push
adc
sbb
call
imull
push
int3
or
jmp
add
adc
int3
not
adc
and
in
add
adc
ljmp
out
stc
or
adc
and
or
daa
iret
sbb
and
test
add
lock
cld
int
jmp
cli
pop
push
rcrb
add
push
daa
lret
in
pop
ljmp
adc
out
or
stc
int
leave
jmp
sub
add
cli
call
push
push
jmp
in
add
add
add
in
cld
lcall
push
and
cli
leave
or
sbb
and
jmp
negl
add
add
lret
and
and
add
sub
lret
out
add
pop
jmp
sbb
out
sbb
cmc
leave
ljmp
or
sbb
daa
leave
into
pop
in
adc
adc
push
or
pop
in
and
out
and
lock
and
add
add
add
or
pop
and
add
iret
add
cli
pop
adc
add
adc
add
sbb
int
iret
leave
or
sub
adc
or
push
and
rorb
aad
sbb
cld
int
in
sti
ror
es
push
pop
cmc
or
sbb
in
pop
lret
daa
out
lret
or
lret
add
cmc
and
and
cli
in
aad
out
pop
daa
cmc
iret
sbb
in
sti
jmp
sbb
cld
add
pop
add
sbb
add
pop
or
pop
out
or
lret
negl
and
push
shr
aad
or
into
leave
in
push
add
jmp
daa
aad
sbb
cld
add
and
int3
in
call
int3
daa
sbb
out
and
push
or
and
mulb
push
and
add
mull
int
aad
and
lret
incl
or
or
test
push
push
push
push
add
sbb
and
sti
adc
jmp
int
add
mul
sbb
or
and
cli
adc
rorb
ror
or
or
leave
lret
adc
int3
iret
or
push
ljmp
or
sbb
cli
sbb
lret
lock
out
and
in
add
and
shlb
int3
lret
pop
in
or
or
sti
push
sub
or
pop
iret
in
daa
in
adc
into
or
int3
out
imulb
or
daa
sti
rorb
sbb
sbb
push
adc
int3
pop
add
pop
div
and
into
jmp
and
push
test
and
and
or
sti
sbb
pop
pop
lret
iret
shr
es
in
push
aad
pop
test
adc
lret
adc
jmp
test
leave
or
or
out
push
iret
jmp
testb
out
adc
leave
out
leave
add
pop
cmc
sub
int3
psubw
in
adc
or
aad
cmc
add
cli
cli
and
int
call
leave
pop
add
cli
and
add
pop
sbb
lock
push
and
rorb
push
and
or
add
and
shl
cli
and
or
cli
pop
adc
adc
and
add
out
or
ljmp
cli
and
lret
into
iret
sbb
or
or
push
and
sbb
or
add
or
add
sbb
testb
cld
shlb
leave
add
iret
pop
daa
add
pop
out
es
or
in
sbb
pop
or
add
call
sti
into
testl
or
or
add
lock
sysret
pop
sti
imul
call
add
pop
adc
add
and
or
add
or
push
lock
push
push
push
add
jmp
lock
pop
pop
out
cmc
sti
cld
add
jmp
in
sbb
or
and
into
and
or
ljmp
pop
cli
out
add
and
dec
imul
jmp
call
adc
out
ljmp
lret
or
add
sbb
or
sbb
in
adc
or
dec
into
sbb
idiv
pop
jmp
cmc
or
add
ljmp
pop
add
or
cli
and
adc
push
cld
pop
rclb
or
push
jmp
mulb
sbb
in
add
or
es
and
out
or
or
idiv
and
push
or
sbb
adc
and
sbb
pop
add
in
or
add
adc
push
and
sub
into
cmc
lock
int
push
and
adc
and
cli
cmc
in
add
and
cli
rolb
sbb
and
pop
adc
pop
push
or
and
into
jmp
int
lock
and
sbb
push
and
add
or
out
es
or
or
or
cld
add
and
or
push
pop
or
int
call
in
or
add
out
es
push
rcrb
jmp
pop
adc
add
call
cld
or
sbb
jmp
or
pop
pop
sbb
int
sti
add
sbb
call
rolb
leave
push
shlb
or
cld
sub
sbb
sbb
pop
sbb
add
and
lret
pop
or
or
in
in
add
leave
push
sti
adc
add
stc
aad
daa
and
lret
int3
cli
test
add
ror
add
rcl
iret
cli
sbb
adc
rcl
lock
adc
in
add
jmp
add
and
adc
stc
push
pop
prefetchwt1
ljmp
push
shlb
pop
dec
int
iret
paddb
lock
adc
mov
or
cld
int
and
and
push
and
sbb
sbb
into
jmp
sbb
daa
in
in
push
es
jmp
pop
aad
sbb
push
out
cmc
stc
sbb
and
call
out
lock
cld
lret
in
int
and
sti
sbb
or
int3
sbb
sbb
iret
or
lret
and
in
adc
adc
in
leave
psubq
in
ljmp
cli
in
in
jmp
jmp
or
push
daa
or
call
or
or
jmp
sbb
pop
pop
adc
adc
or
aad
into
push
adc
sbb
or
add
into
or
or
jmp
sbb
aad
add
pop
push
es
int
pop
or
lcall
sbb
sbb
iret
into
shl
out
int
or
aad
adc
stc
sbb
adc
sbb
lock
jmp
es
in
and
cld
lret
int3
pop
pop
or
jmp
and
and
or
add
and
jmp
shr
push
push
and
out
add
leave
or
adc
and
push
cli
aad
add
and
pop
add
sbb
out
push
push
psadbw
testb
sbb
ljmp
rorb
in
decl
or
out
psubsb
pmaddwd
or
out
out
push
es
int
add
add
in
add
sbb
stc
lret
daa
pop
in
and
adc
adc
es
in
in
add
or
adc
pop
sbb
or
cmc
jmp
add
push
and
into
cmc
out
push
lock
cmc
add
or
jmp
and
add
push
push
push
push
lret
into
ror
lret
sbb
and
in
or
pop
shr
cli
or
adc
out
or
or
or
add
stc
sbb
int3
and
in
or
ljmp
and
stc
and
into
call
daa
lret
pop
and
pop
into
adc
pop
or
call
mulb
push
add
in
push
out
or
push
call
add
adc
jmp
or
stc
push
cli
sbb
in
and
incl
iret
testl
es
add
adc
or
lret
add
daa
pop
rclb
jmp
and
add
add
iret
add
in
and
sbb
ror
and
out
cli
es
stc
imul
shrb
cli
add
cmc
jmp
sbb
cli
adc
or
and
add
jmp
out
imul
in
push
lock
or
sbb
daa
notb
test
out
test
daa
call
in
add
into
ljmp
push
push
pop
push
leave
sbb
jmp
in
in
or
aad
or
leave
or
or
add
in
or
adc
sbb
sbb
ljmp
sbb
add
adc
aad
sbb
sbb
shlb
lret
sti
sbb
add
iret
add
in
call
jmp
cmc
stc
push
cli
aad
out
adc
and
out
push
push
sbb
and
stc
rorb
cli
out
pop
pop
or
add
jmp
idiv
in
or
add
movaps
pop
in
mull
push
lock
div
call
negl
sub
in
iret
ljmp
in
add
pop
aad
lret
or
or
push
ljmp
push
add
in
in
and
lret
sub
in
lock
int3
and
iret
sbb
pop
and
out
pop
sbb
add
cld
push
or
push
idiv
bswap
cmc
add
and
or
add
adc
jmp
or
notb
in
ljmp
add
shlb
pop
add
push
adc
cli
lret
out
lret
or
add
pop
and
jmp
out
or
maskmovq
rcl
push
cld
ljmp
bndstx
sbb
int
or
lret
add
daa
div
add
sbb
adc
sbb
add
lock
es
int3
rcl
sti
add
and
sbb
sbb
pop
push
push
call
ror
and
shl
leave
nop
or
add
into
jmp
add
daa
and
push
pop
or
iret
ljmp
movhps
in
add
testl
jmp
imul
sbb
sbb
nop
aad
out
stc
ljmp
or
daa
lock
sti
out
or
iret
and
daa
cmc
add
or
rcrb
ljmp
push
out
out
femms
testl
or
add
sub
add
or
add
add
sar
or
int
add
pop
in
add
sar
lock
add
add
ror
into
or
and
testb
in
sbb
pop
or
call
rclb
lret
add
jmp
in
ljmp
push
sbb
add
add
push
push
add
add
cli
call
sar
leave
out
add
lock
push
sbb
and
pop
cld
cld
or
in
and
imul
push
in
adc
or
int3
sbb
into
or
push
lock
pop
add
add
or
sti
jmp
es
cld
call
or
sub
pop
lret
and
out
and
decl
invd
sbb
sti
cmc
in
and
or
or
out
add
sbb
sbb
cli
push
add
lret
out
negl
add
and
or
int3
sti
or
lret
adc
add
daa
leave
cli
out
in
add
add
jmp
or
testb
lret
and
rolb
or
and
cli
leave
sub
int3
pop
and
lret
or
push
shl
add
shr
cld
or
sub
add
ljmp
sub
and
out
in
stc
out
shl
int3
add
cmc
push
or
iret
stc
lret
lock
or
leave
out
es
and
push
lock
and
es
lock
es
pop
in
cmc
or
and
and
or
or
aad
and
and
cli
or
push
and
stc
jmp
iret
leave
in
into
add
stc
sbb
add
and
add
in
into
aad
int
or
daa
stc
adc
in
adc
in
and
call
es
push
or
int
testl
add
and
into
push
cld
pop
lret
pop
push
out
and
add
add
into
add
into
ljmp
and
or
and
in
adc
add
cli
push
lock
leave
pop
stc
call
in
and
add
add
in
test
or
lock
in
jmp
shl
jmp
lsl
or
or
or
push
into
pop
sub
push
in
lret
sbb
add
adc
sub
pop
imul
sbb
pop
add
jmp
and
or
add
int3
and
sbb
and
push
sti
push
cmc
into
sbb
sti
and
call
push
bswap
rolb
out
pop
in
out
add
shr
sbb
adc
in
or
sbb
pop
in
int
or
or
pop
incl
jmp
adc
or
or
ljmp
push
pop
sbb
pop
lock
out
out
or
pop
call
in
pop
and
and
pop
add
push
into
push
adc
lret
add
add
add
ljmp
ljmp
in
cmc
leave
and
or
cli
sbb
cmc
cli
stc
sbb
or
cld
mull
into
div
sbb
or
out
pop
call
or
negl
lret
lret
sbb
pop
maskmovq
testl
sbb
mulb
leave
sub
and
int
sbb
and
add
add
es
incl
lock
adc
sub
sti
sub
cmc
add
add
jmp
and
push
cld
lret
and
ljmp
aad
in
lret
adc
push
int3
cmc
sub
adc
adc
and
or
sbb
es
iret
int3
push
lret
pop
movhps
push
adc
imul
int3
pop
and
aad
or
or
int3
es
push
and
rolb
in
cmc
in
and
or
sbb
mull
adc
push
daa
out
and
and
sbb
and
or
in
sub
add
pop
sbb
iret
push
push
cli
add
sti
pop
add
or
add
daa
jmp
in
or
sbb
or
test
push
or
and
psubsb
int
sbb
or
lret
or
or
jmp
pop
in
add
and
iret
in
call
out
or
sbb
sub
lret
jmp
push
shr
out
aad
or
sti
pop
push
in
pop
lret
jmp
adc
push
sub
es
shr
pop
push
sbb
stc
ljmp
sti
add
add
add
or
lret
add
in
and
add
push
and
in
int3
or
lret
or
or
leave
add
jmp
and
and
and
add
leave
push
in
add
adc
pop
and
and
push
in
call
lock
sbb
lret
cli
sbb
ror
aad
add
push
or
call
lock
iret
add
push
and
add
push
adc
pop
sbb
adc
adc
and
push
add
rorb
push
add
sbb
call
or
ljmp
out
mull
out
ljmp
ljmp
in
stc
or
push
sbb
stc
push
sbb
and
leave
and
stc
and
es
iret
cld
leave
sbb
out
aad
and
add
and
lock
add
lret
or
sbb
lock
imul
or
add
call
or
cld
lret
sbb
shlb
ljmp
or
lcall
add
aad
cld
and
lret
sbb
and
sbb
in
push
and
sbb
push
add
sbb
int3
jmp
push
or
into
cld
lock
sbb
sbb
stc
lret
es
add
add
int
lret
add
cld
and
daa
daa
adc
leave
in
div
and
sbb
add
cmc
jmp
notl
out
sbb
int
iret
push
jmp
out
jmp
stc
lock
shlb
jmp
int
pop
iret
and
pop
in
call
and
push
push
push
out
call
in
push
iret
out
adc
lock
and
cmc
jmp
out
add
in
add
jmp
lret
and
add
push
push
and
sbb
or
add
and
out
and
and
add
sub
es
iret
push
or
add
testl
and
sbb
or
and
or
jmp
or
cmc
in
adc
and
push
and
pop
add
aad
sbb
aad
adc
aad
rcrb
out
int3
and
es
lock
pop
add
paddsw
negl
pop
aad
add
or
and
into
iret
lret
stc
aad
in
out
or
aad
into
or
out
add
aad
sti
aad
jmp
iret
adc
add
daa
in
and
stc
pop
pop
in
push
push
or
stc
notl
cli
add
or
adc
cld
es
and
int3
aad
jmp
add
or
or
push
call
add
jmp
and
int
and
lock
add
push
add
and
aad
ror
and
or
ljmp
sub
pop
call
sti
and
int
rcrb
add
push
int
int
cmc
sbb
int
mull
push
add
and
sbb
push
pop
and
pop
call
leave
pop
in
lret
dec
int
or
movlhps
in
and
rorb
sbb
or
jmp
add
cli
add
sbb
push
es
div
int
sub
or
negl
into
jmp
add
sbb
add
ljmp
and
aad
add
and
push
mull
push
or
in
sbb
or
push
lret
out
adc
and
lock
sbb
or
int3
into
jmp
sbb
sbb
aad
add
lret
add
add
or
in
or
psubq
out
cli
into
movaps
sub
ljmp
or
and
and
cli
int3
push
idiv
and
pop
int3
push
ljmp
ljmp
out
in
and
and
lret
and
rcrb
daa
sub
cli
pop
out
or
sub
iret
sar
ljmp
pop
cli
out
rcrb
stc
add
push
push
in
int3
and
sub
iret
rcrb
rcrb
pop
sub
push
cld
sbb
daa
sti
rcrb
shlb
and
es
lret
nopl
jmp
in
pop
cli
sub
stc
daa
or
or
and
es
ljmp
add
into
out
call
push
jmp
cld
or
and
ljmp
pop
add
push
ljmp
int3
or
or
int
or
sbb
or
and
daa
cli
iret
into
out
cmc
push
out
or
and
sbb
cli
or
in
in
es
ljmp
sbb
pop
cld
sbb
or
int
push
sti
in
decl
in
and
lret
adc
es
daa
imul
daa
add
sbb
sbb
int
push
aad
and
int
sbb
ljmp
ljmp
call
and
and
sbb
rolb
testb
sbb
push
aad
in
or
push
stc
or
and
or
and
daa
jmp
or
movhps
int3
in
adc
add
es
or
in
in
push
add
lret
cld
or
pop
es
in
daa
daa
sbb
push
sti
shlb
rolb
aad
push
jmp
or
aad
add
add
in
in
testb
pop
pop
lret
sbb
add
add
or
push
add
daa
and
and
adc
ljmp
pop
int
pop
and
in
add
push
push
lret
es
aad
or
and
pop
daa
out
and
cld
pop
out
lock
add
add
call
pop
sti
aad
stc
add
in
rolb
sbb
int3
iret
add
pop
sbb
pop
or
push
cmc
pop
rcrb
int
lock
or
adc
or
add
and
and
adc
adc
sar
pop
imul
shr
adc
and
in
or
or
add
push
sbb
daa
lret
pop
sub
shl
sti
lret
pxor
or
push
leave
leave
sbb
sbb
sysret
sbb
push
iret
or
aad
or
add
and
add
push
smsw
ljmp
add
or
add
or
pop
pop
and
and
cld
add
push
jmp
call
push
out
daa
add
in
and
sbb
sti
call
aad
and
or
daa
and
iret
and
iret
bswap
add
leave
cld
add
call
leave
sbb
div
push
or
es
add
pop
push
pop
in
sti
ljmp
push
jmp
and
out
and
int3
cmc
iret
pop
push
in
iret
sbb
add
testl
rcl
stc
and
add
in
push
sbb
sti
jmp
pop
and
push
iret
lret
add
int
push
imul
or
push
add
mull
in
or
aad
and
pop
push
and
and
and
aad
jmp
or
in
and
into
or
leave
and
add
out
add
leave
push
add
cld
in
push
in
jmp
daa
sti
testb
out
shl
es
into
in
sbb
int
or
cmc
add
jmp
out
push
or
add
iret
int3
or
daa
cmc
add
ljmp
call
add
aad
call
rolb
sbb
ljmp
lret
or
ljmp
add
or
stc
add
notl
push
and
or
jmp
daa
pop
and
leave
out
idiv
and
and
aad
add
sti
push
iret
push
int3
and
push
and
sbb
lret
ljmp
add
lret
rolb
add
and
and
sti
lret
out
add
lret
or
adc
aad
add
in
into
sub
leave
daa
iret
int3
sbb
lock
or
cli
push
in
add
lock
and
and
daa
add
cld
pop
or
push
cld
or
push
pop
in
push
push
or
int
sti
sbb
cli
sti
aad
iret
stc
es
sub
lret
cld
and
sbb
in
ljmp
and
push
sti
pop
add
or
sub
rorb
into
jmp
nop
pop
or
add
rcl
and
sbb
add
and
add
and
cmc
rorb
push
add
add
sbb
add
and
lock
ljmp
in
cli
or
or
or
or
int
prefetch
or
notl
out
sbb
sbb
pop
into
int
sar
cli
sti
and
pop
leave
or
cmc
or
or
sbb
ljmp
pop
out
out
or
or
out
in
push
add
out
push
jmp
pop
pop
or
into
sbb
out
sbb
adc
int
in
sar
sbb
and
out
sub
negb
lar
sti
lret
add
sbb
daa
or
sub
jmp
and
stc
sbb
iret
sbb
invd
and
rcl
sub
es
rolb
sub
sbb
negb
and
cli
or
or
and
sbb
sbb
and
and
pop
add
es
notl
jmp
lret
add
or
add
or
ror
out
leave
int3
lret
out
lock
add
ror
push
in
add
pop
add
adc
leave
sbb
negb
out
lock
and
add
push
stc
and
cli
shl
or
sbb
push
and
test
and
int
cli
adc
add
and
pop
sbb
and
and
jmp
not
out
add
ljmp
mull
and
or
and
add
and
out
or
push
add
cli
pop
add
lret
es
add
out
and
add
push
daa
or
or
push
idiv
daa
in
or
leave
lret
lock
and
lock
mul
pop
add
add
push
add
int
sbb
call
adc
add
sub
sbb
in
or
sbb
or
sbb
imul
sar
lret
and
or
cld
call
adc
and
add
in
add
sub
aad
adc
in
pop
pop
sti
cld
and
adc
adc
jmp
cmc
push
jmp
stc
add
in
out
add
not
lock
mull
dec
in
cld
add
sbb
aad
cli
stc
in
into
into
iret
push
adc
add
lret
or
cmc
and
push
in
sbb
or
sbb
out
daa
or
and
in
rorb
aad
add
and
jmp
add
jmp
or
jmp
add
sbb
daa
iret
sbb
push
sbb
sbb
rolb
out
in
or
leave
int
pop
adc
pop
lcall
out
sti
add
leave
and
or
sbb
sbb
add
or
and
stc
and
sar
notl
push
jmp
daa
or
cld
cli
add
stc
cmc
push
and
testb
and
in
push
add
int3
mulb
add
call
add
in
shlb
jmp
or
in
adc
or
push
push
por
lret
lret
push
es
push
cmc
call
dec
or
or
or
cli
push
add
es
cli
sbb
add
lret
int3
cmc
stc
daa
push
adc
in
daa
or
int3
pop
int3
out
ljmp
adc
test
notl
or
and
out
es
add
cmc
in
shlb
sti
and
or
jmp
lret
leave
jmp
pop
out
in
and
or
add
out
sbb
into
jmp
jmp
sbb
add
and
add
cmc
and
or
or
and
and
lock
add
lock
in
add
in
testb
and
push
add
decl
adc
cli
or
push
and
shlb
into
lret
rcrb
and
add
int
and
add
push
adc
sti
lsl
call
add
and
ljmp
iret
and
pop
iret
sub
in
es
push
sbb
in
iret
cmc
or
add
in
int3
add
or
aad
and
add
sbb
or
daa
daa
jmp
out
sti
div
push
and
int
and
testb
pop
sbb
lret
in
push
sbb
leave
in
int
pop
shl
add
int3
add
out
sbb
in
test
or
testl
aad
or
add
push
testb
out
int3
out
in
add
and
pop
testl
or
sbb
stc
testl
or
in
and
cld
bswap
in
pop
add
mulb
iret
adc
in
or
ror
lret
pop
add
aad
leave
shr
push
add
pop
lret
adc
or
or
in
out
and
aad
in
in
or
or
sbb
iret
push
pop
iret
pop
shl
into
int
cli
into
or
or
iret
sub
add
out
add
into
leave
bswap
sbb
int
and
or
iret
aad
sbb
imul
sar
int3
or
daa
and
adc
push
sbb
in
and
ljmp
and
lret
and
pmaddwd
adc
shr
sbb
es
sbb
iret
or
add
and
call
lock
negl
test
cmc
into
pop
imull
out
and
cli
and
push
cld
cli
aad
and
iret
push
add
sub
jmp
and
push
jmp
add
or
add
add
add
cld
pop
push
or
sub
and
aad
sbb
cld
sbb
cld
push
and
in
cld
and
pop
in
sbb
sbb
add
and
adc
lret
leave
add
in
sbb
push
in
jmp
add
incl
sbb
int
sbb
or
lret
shr
adc
sbb
add
in
stc
add
add
pop
aad
and
in
ror
out
add
int3
add
push
in
add
sbb
lret
pop
stc
or
and
into
call
sbb
and
push
out
leave
div
cmc
test
cld
pop
shr
lock
add
stc
push
shr
and
out
or
shr
leave
and
paddsw
add
cld
and
push
pop
add
in
push
lret
or
and
add
and
and
testb
and
push
and
push
in
add
sbb
in
rcrb
out
out
aad
decl
add
out
push
cld
sbb
and
mov
push
push
lret
daa
into
adc
pop
sti
or
and
int3
or
in
sub
jmp
verr
out
or
adc
iret
sti
rolb
in
add
div
add
into
adc
pop
leave
int3
testb
idiv
rorb
push
and
adc
stc
rorb
and
sti
stc
sti
and
sbb
pop
iret
push
adc
push
int3
cld
and
es
cli
rcl
lock
and
add
adc
into
stc
or
or
sbb
sbb
push
cli
add
testl
add
sti
push
push
or
and
negb
daa
lock
pop
add
and
adc
daa
cli
adc
nop
es
leave
add
and
or
lock
pop
iret
notb
and
out
int
pop
push
daa
out
push
push
adc
and
push
add
sbb
sbb
and
add
in
or
sbb
adc
and
or
out
or
rolb
sbb
call
sub
jmp
sub
pop
lret
add
add
in
and
cmc
rolb
and
add
out
or
push
add
stc
add
daa
in
lret
jmp
and
in
es
in
into
jmp
stc
lret
sti
jmp
or
lock
or
add
aad
in
add
or
add
negl
out
in
sub
int
push
out
adc
shrb
sbb
and
pmullw
or
sbb
shr
pop
or
sti
and
cli
add
in
in
pop
jmp
sbb
mull
int3
add
or
sbb
adc
int
sbb
or
add
jmp
ljmp
out
and
push
in
into
call
add
or
or
jmp
adc
sbb
pop
pop
sub
or
push
or
pop
stc
sbb
add
jmp
call
pop
and
add
iret
out
ljmp
es
ror
adc
lret
and
decl
in
and
or
add
cmc
lock
jmp
stc
shlb
leave
or
out
or
out
add
lock
and
add
in
or
jmp
prefetchw
lock
testb
in
leave
es
and
in
or
es
lret
or
or
negl
cli
pminsw
call
into
sub
stc
or
sbb
sub
cmc
and
call
add
cld
sbb
pop
add
sbb
sbb
adc
sub
lock
push
and
sbb
int
iret
int
push
sbb
daa
leave
cld
lock
add
push
sub
or
jmp
and
in
or
call
sub
pop
int3
and
or
add
jmp
lret
cld
lret
and
jmp
or
add
jmp
call
and
and
adc
aad
int
push
daa
int3
cld
adc
call
and
add
adc
or
or
in
or
or
adc
cli
nopl
imull
or
pop
push
and
cmc
out
sbb
jmp
stc
push
testl
add
or
leave
lret
testb
add
sbb
stc
add
add
int
push
sbb
pop
sbb
int
add
iret
adc
in
iret
pop
push
or
push
add
or
lret
pop
and
or
add
add
incl
adc
push
push
in
out
ljmp
sub
and
pop
pop
rolb
add
stc
sbb
idiv
in
sub
leave
call
add
imul
sar
jmp
push
or
lret
adc
bswap
into
add
pop
and
es
push
stc
add
lret
lret
into
pop
sbb
lar
sbb
unpckhps
and
call
add
cld
push
call
and
int3
aad
es
sbb
rcrb
sbb
and
and
and
add
sbb
iret
testl
sbb
lret
and
add
and
pop
shl
iret
incl
shr
adc
pop
lock
add
int3
in
call
iret
int3
iret
es
or
in
and
lret
and
cmc
adc
shr
push
pop
jmp
lcall
cld
or
cli
sbb
adc
in
int3
iret
sbb
or
lret
ljmp
daa
add
out
sbb
adc
add
sbb
cli
call
and
push
and
and
sar
and
shr
lret
sub
or
shl
add
notb
cld
and
pop
iret
jmp
and
out
cld
out
push
push
adc
cmc
in
adc
pop
or
int3
stc
and
or
push
sbb
and
push
out
sbb
out
push
in
sbb
call
pop
jmp
imull
stc
cli
add
out
pop
int3
daa
push
and
or
adc
stc
add
int3
push
rolb
sbb
add
pop
and
test
stc
in
sbb
and
cmc
add
add
sar
ljmp
iret
push
and
es
cli
in
iret
or
into
push
es
in
or
add
lidtl
stc
stc
lret
pop
add
and
negb
not
aad
or
pop
in
sbb
adc
add
and
aad
sbb
cmc
add
int
or
rorb
add
iret
lret
stc
lret
imul
push
sbb
pop
es
pop
cli
sbb
add
or
adc
stc
add
adc
int3
daa
add
add
iret
add
rorb
and
ljmp
lock
iret
and
adc
es
add
stc
call
iret
out
push
push
jmp
and
adc
sbb
and
and
pop
jmp
add
sbb
or
push
add
out
cli
pop
lret
adc
pop
pop
aad
and
lret
sbb
add
lock
add
push
push
into
stc
pop
and
call
out
and
leave
add
sbb
in
shl
sbb
and
and
jmp
ljmp
in
or
or
add
cmc
add
adc
add
shr
sbb
cmc
sbb
and
add
or
jmp
add
ljmp
adc
add
sub
jmp
cli
add
cld
or
shlb
negl
pop
sub
and
bswap
aad
or
ljmp
iret
lret
lret
add
adc
lock
ljmp
leave
leave
and
or
cmc
cmc
or
or
stc
adc
in
add
iret
int
call
or
iret
pop
lret
add
in
stc
sti
lock
ljmp
in
aad
push
in
in
cli
lret
or
and
sbb
and
add
cmc
sbb
and
pop
not
jmp
call
sbb
ljmp
adc
div
adc
imul
daa
ljmp
lret
cmc
lret
sbb
sub
es
and
or
jmp
jmp
jmp
into
sbb
push
add
jmp
or
add
rolb
sbb
push
and
and
in
cli
add
lret
lret
sbb
into
add
add
and
jmp
add
push
or
or
or
push
add
jmp
adc
negl
testb
push
push
jmp
mulb
and
into
add
or
add
or
or
push
add
add
in
add
iret
or
ljmp
in
pop
shr
pop
add
out
rcrb
and
negb
add
testb
push
push
out
lret
es
or
jmp
rorb
push
push
pminsw
and
rcrb
into
pop
or
push
add
sti
and
sbb
cmc
push
aad
or
int
lret
sti
in
out
not
push
testb
in
ljmp
sbb
cmc
cld
into
lcall
pop
in
leave
sub
iret
jmp
int3
add
add
aad
add
call
or
ljmp
out
int3
int3
add
and
imul
aad
es
cli
sub
push
testb
and
out
testl
add
or
lret
sub
add
and
lret
and
and
sar
stc
add
pop
and
jmp
push
lock
sti
pop
pop
sbb
and
add
add
pop
pop
add
and
idiv
cmc
sbb
lret
add
pop
add
out
sbb
cli
lret
add
into
add
into
and
testl
sbb
lret
sar
push
in
push
aad
or
and
in
imulb
or
sar
push
and
add
add
add
sbb
in
int
or
in
mulb
lret
or
sti
and
push
rcl
ljmp
syscall
sbb
in
push
sbb
sbb
int3
and
add
push
or
rcl
es
into
jmp
jmp
or
pop
into
imul
daa
es
in
adc
add
lcall
stc
stc
in
pop
lret
lcall
or
and
push
jmp
push
ljmp
jmp
shl
cmc
lret
or
sbb
mull
push
in
and
pop
and
and
out
and
or
or
aad
out
pop
or
in
into
int3
and
add
push
out
and
jmp
adc
add
or
es
push
add
int3
cmc
and
and
add
iret
in
sbb
lock
decl
dec
int3
leave
pop
in
and
cmc
and
in
and
jmp
add
in
or
pop
negl
and
rclb
sbb
rolb
add
mulb
add
stc
call
and
push
in
add
adc
leave
lret
pop
add
sbb
stc
and
and
adc
in
sub
push
lock
in
jmp
aad
and
pop
sbb
lret
and
int3
jmp
and
pop
in
int
in
rorb
pop
cli
out
add
push
sbb
test
push
and
cli
or
add
out
push
out
or
jmp
ljmp
out
and
aad
sub
and
and
and
call
add
sti
push
and
cli
stc
leave
in
and
jmp
lock
shr
push
add
pop
ljmp
int
add
and
sbb
stc
or
leave
pop
imul
add
aad
adc
stc
and
pop
cli
or
daa
int3
in
ljmp
jmp
call
pop
add
and
add
or
add
push
push
aad
pop
add
push
in
lret
stc
adc
jmp
stc
push
lret
lcall
adc
add
push
and
es
lret
and
and
and
call
and
add
daa
add
imul
es
or
stc
pop
and
call
pop
int3
add
in
or
aad
and
sbb
and
pop
call
push
add
int
sbb
sbb
add
add
int3
shr
add
adc
add
push
add
in
negl
add
cli
or
pop
shlb
in
adc
add
cli
and
call
sbb
aad
pmulhuw
pop
bswap
testb
add
and
push
ljmp
in
and
and
out
ljmp
iret
add
out
sbb
or
lret
sbb
pop
lret
sbb
or
int
sbb
sub
push
push
and
cli
jmp
in
lret
add
into
or
push
add
cli
add
or
in
add
sub
push
sub
jmp
add
call
jmp
sbb
push
or
lret
stc
stc
add
and
ljmp
sbb
sbb
push
or
out
or
push
ror
add
ljmp
lock
lock
add
push
or
stc
or
add
or
and
add
or
and
jmp
rclb
or
adc
adc
lret
sbb
or
cmc
out
lret
sbb
add
out
or
lret
ljmp
in
and
pop
and
sti
and
call
cli
ror
into
out
in
adc
lock
aad
testl
ljmp
push
sbb
add
and
call
and
or
and
or
jmp
in
dec
and
rorb
div
bswap
lret
cli
sbb
testl
pop
sbb
call
and
in
sbb
and
lret
lret
int
stc
sbb
leave
and
cmc
add
or
or
stc
pop
adc
cld
pop
call
sub
sbb
pop
add
push
cld
lret
out
daa
iret
lret
adc
add
or
add
cld
push
out
sbb
into
sbb
cmc
pop
or
negl
and
ljmp
cli
int
mulb
and
daa
leave
lret
add
sti
and
add
pop
add
push
push
pop
out
or
and
and
out
or
daa
push
and
or
and
sbb
into
sbb
or
sbb
in
and
sbb
ljmp
in
out
jmp
add
pop
jmp
rcrb
es
push
out
add
iret
mull
lret
sub
cld
add
ljmp
out
testb
and
stc
lret
add
add
int3
pop
and
lret
and
in
cli
int3
push
and
not
pop
int
and
sbb
and
in
jmp
and
lock
or
ud2
lret
pop
and
int3
cmc
stc
and
and
in
shlb
jmp
adc
daa
out
into
jmp
negb
in
call
jmp
sti
cmc
sbb
lret
rolb
add
jmp
and
daa
aad
mul
movhps
call
sbb
jmp
or
or
or
pop
and
or
sbb
push
call
push
sti
es
testl
add
or
stc
or
div
into
out
sbb
and
out
sbb
leave
push
in
lret
add
add
push
cli
in
testb
sub
call
pop
int3
cmc
cli
cld
or
cmc
and
int
ud0
div
sbb
push
leave
or
adc
and
lret
push
sub
lret
and
or
add
in
nopl
aad
and
and
adc
and
or
ljmp
sub
into
sbb
or
and
adc
sbb
iret
and
sbb
and
sub
add
adc
testl
or
and
push
add
sbb
jmp
call
and
into
or
or
push
ljmp
adc
bswap
or
or
stc
jmp
push
add
and
push
push
cmc
aad
cmc
add
cmc
cmc
aad
or
sbb
cmc
in
jmp
call
lock
pop
sub
stc
stc
add
out
leave
bswap
sub
jmp
lret
add
add
and
sbb
sbb
jmp
leave
add
stc
cmc
and
sbb
es
and
negl
rorb
or
or
in
sbb
add
pop
and
and
and
adc
and
and
stc
sbb
or
add
add
or
int3
call
sbb
sub
lret
sbb
push
add
ljmp
push
es
add
in
rolb
or
push
and
lock
int
and
maskmovq
testl
or
in
and
lret
sbb
call
and
iret
add
rolb
aad
sbb
rdpkru
int3
into
add
adc
and
adc
in
stc
adc
or
in
pop
int
in
add
add
add
cld
jmp
push
pop
add
in
leave
lock
add
stc
pop
or
pop
cld
lret
push
cli
rolb
es
push
jmp
daa
and
add
sub
or
and
sbb
add
jmp
add
or
or
pop
jmp
and
add
add
pop
in
daa
in
call
negl
sti
sbb
iret
lret
in
cld
sbb
sbb
es
es
add
push
lcall
in
adc
or
stc
sub
in
shr
and
pop
sbb
int3
testl
sbb
add
int
syscall
lret
rolb
sbb
out
out
add
es
out
or
or
or
push
imul
sub
and
and
int
sub
lret
notl
add
shl
or
iret
and
daa
lret
add
leave
add
sub
in
out
push
push
or
lock
ror
sti
add
push
in
lret
int3
push
mov
pop
add
leave
or
rcrb
add
and
cld
in
into
pop
pop
lock
and
add
es
cmc
or
shr
adc
ljmp
and
push
push
cli
or
cld
pop
or
es
push
pop
cli
add
decl
iret
and
or
shlb
rolb
mul
pop
es
shr
in
or
adc
out
out
in
ljmp
cld
testb
cli
sbb
pop
ljmp
leave
and
es
add
into
lret
sub
int
push
sbb
and
and
sbb
or
es
lret
add
lret
push
or
sbb
or
sbb
jmp
dec
iret
in
lock
jmp
negb
ljmp
and
add
in
push
jmp
lret
and
or
add
stc
lock
jmp
add
in
and
in
out
testb
aad
push
push
into
call
iret
out
in
sub
shl
or
daa
rclb
wbinvd
and
jmp
cli
int
and
add
pop
iret
sbb
test
and
add
es
leave
pop
jmp
idiv
sbb
lock
adc
add
iret
add
add
sti
aad
add
lret
int
leave
and
adc
notb
sti
leave
lret
or
sti
and
jmp
or
and
and
or
rcrb
lock
stc
sbb
and
lock
add
in
cld
adc
push
cmc
lock
in
push
in
sbb
sbb
sti
int3
rcrb
jmp
push
jmp
call
daa
pop
jmp
aad
sbb
stc
rcrb
daa
jmp
stc
cmc
sbb
in
or
or
into
and
add
adc
sub
and
add
call
call
lock
and
in
leave
or
pop
or
daa
add
sub
lret
pop
sbb
jmp
push
sbb
push
sbb
jmp
push
sti
sbb
aad
rorb
add
or
adc
sbb
sbb
sub
stc
pop
in
or
ljmp
in
pop
daa
pmaxsw
into
cli
or
sbb
push
in
sbb
or
or
or
add
int
negl
add
and
into
push
adc
sti
or
out
and
sbb
in
adc
in
ljmp
cmc
ljmp
add
add
into
sbb
or
and
out
add
out
or
adc
and
and
out
or
bndstx
aad
sbb
or
and
and
add
and
and
sbb
es
es
lret
maskmovq
testl
and
cli
or
into
cli
or
sti
jmp
leave
cmc
pop
add
adc
sbb
daa
and
cli
decl
call
or
int
int
add
or
adc
out
push
or
aad
and
lock
call
push
add
leave
call
int
int3
in
or
pop
or
leave
daa
add
out
in
or
cli
sbb
push
in
es
cli
out
and
rolb
sub
leave
and
push
and
and
aad
and
aad
out
in
cmc
or
or
or
push
in
jmp
ror
add
adc
testb
jmp
lret
into
and
int3
cld
and
or
or
add
adc
push
test
jmp
ljmp
cli
pop
push
stc
mulb
stc
adc
or
push
and
int3
and
sti
cmc
push
in
add
out
add
and
rcl
add
sbb
or
adc
sbb
sbb
add
leave
sub
dec
sbb
adc
add
adc
sbb
or
add
push
pop
sbb
leave
and
and
sbb
add
sbb
and
sbb
and
and
test
cli
or
shlb
mull
sbb
call
int
add
lret
div
call
lock
sbb
and
sbb
or
and
sti
or
in
or
in
test
add
sbb
iret
add
aad
or
iret
or
pop
test
jmp
and
cmc
and
add
out
pop
lock
notb
add
daa
in
adc
call
or
or
cmc
or
lock
add
and
leave
and
cld
push
push
int3
adc
in
or
out
aad
iret
es
and
or
or
sub
and
adc
add
or
sbb
or
lret
jmp
sbb
ljmp
add
rolb
add
psubq
push
and
lret
sub
cmc
add
and
int
daa
test
iret
add
lret
push
into
and
and
or
push
add
add
call
es
and
pop
pmulhuw
pop
iret
sbb
out
pop
cld
in
leave
push
int3
call
push
push
int3
jmp
jmp
sti
int3
cmc
push
sti
idiv
in
es
sbb
sbb
push
add
sbb
negl
cld
cmc
jmp
out
int3
push
int3
out
rorb
add
testb
sti
int
push
out
rolb
cli
push
sbb
or
add
ud2
and
or
add
iret
cli
sub
daa
sbb
sbb
or
or
rorb
push
add
or
push
in
sub
adc
aad
push
push
adc
shr
sbb
add
rorb
in
in
sti
sti
and
aad
bndstx
leave
int
pop
int
or
push
stc
push
jmp
or
cld
push
or
notl
or
add
daa
or
adc
jmp
in
pop
int
push
cld
call
jmp
adc
and
shr
out
into
iret
or
adc
add
cli
in
or
pop
or
aad
cld
int
ror
and
add
leave
push
leave
leave
cmc
lock
ror
int3
daa
shr
or
and
iret
sbb
pop
jmp
lret
push
add
and
in
div
ljmp
pop
add
sti
add
or
daa
shr
cld
int
daa
push
in
and
or
add
testl
adc
sbb
or
lret
int
decl
out
add
pop
lock
adc
stc
sub
and
and
cmc
and
int
aad
stc
es
or
push
jmp
and
out
test
into
into
rcrb
sbb
int3
push
or
or
imul
pop
sti
or
out
rolb
add
negl
add
push
iret
int
cld
push
cli
into
add
int
pop
add
call
in
pop
add
sbb
out
sub
adc
lock
lret
and
in
and
incl
add
leave
in
cmc
adc
shrb
adc
or
push
push
adc
add
call
sub
add
add
add
add
and
in
into
daa
es
cld
pop
and
pop
and
or
lock
push
lret
sbb
add
or
sbb
out
sub
or
sbb
push
cli
and
adc
sbb
out
add
add
and
push
out
sbb
ljmp
leave
aad
sub
in
or
or
sbb
push
ljmp
add
out
jmp
notl
push
or
or
sbb
into
rorb
push
notb
into
pop
sbb
sub
add
sbb
or
es
add
pop
and
sti
int3
cld
and
add
adc
and
add
or
push
lret
adc
lret
sbb
sbb
or
push
sub
sbb
add
in
out
add
in
cmc
in
or
and
and
es
add
aad
int3
sbb
ljmp
sbb
add
in
pop
stc
sbb
sti
in
or
or
into
into
sbb
psubsb
into
push
and
add
adc
or
testb
lret
in
or
daa
pop
in
cld
out
add
cld
es
es
lret
pop
add
call
and
and
stc
in
stc
adc
add
sbb
daa
or
cld
jmp
in
lret
in
push
call
call
add
es
and
call
sbb
pop
iret
pop
and
or
pop
pop
imul
and
daa
add
out
test
jmp
cli
lock
iret
test
sbb
es
add
iret
or
aad
negb
or
aad
and
and
cmc
pop
or
leave
add
psubq
adc
and
pop
push
sub
pop
or
and
lret
int3
testb
psubw
out
cmc
sbb
or
negb
add
add
add
cmc
and
out
sub
and
and
stc
and
and
leave
and
push
int3
and
pop
push
int
iret
testb
or
or
daa
sbb
add
lret
add
cmc
push
es
sbb
sti
call
and
pop
sbb
and
adc
stc
sbb
or
cli
push
cld
jmp
leave
out
pxor
call
out
or
stc
pop
push
pop
add
push
in
and
rcrb
push
int3
pop
push
and
or
testl
lock
and
add
and
push
push
dec
into
call
in
add
call
add
call
add
decl
pop
push
cli
and
or
or
add
or
psubw
sbb
push
pop
pxor
out
lret
pop
iret
cli
add
push
pop
ror
ror
and
in
out
add
or
or
iret
cli
add
jmp
sbb
and
sub
in
or
and
and
lret
or
pop
and
pop
push
syscall
adc
add
call
sbb
sti
adc
and
leave
int3
add
or
in
leave
and
add
push
or
rcrb
decl
jmp
test
out
push
and
adc
int
cmc
and
lock
sti
stc
or
es
cmc
rclb
jmp
in
or
and
pmulhuw
cmc
sbb
out
int3
or
jmp
int3
add
or
stc
add
sbb
jmp
out
and
sub
ror
and
and
leave
int3
out
sbb
or
sbb
call
add
jmp
lock
and
jmp
push
call
sub
in
and
add
int
ljmp
or
or
jmp
daa
lock
not
ljmp
adc
sbb
nopl
sub
sbb
add
cmc
in
pop
or
imull
or
in
add
or
sbb
aad
int
out
or
call
push
and
sti
es
int3
pop
sub
add
add
add
es
into
or
and
shr
pop
push
adc
in
jmp
add
pop
psubd
adc
sar
jmp
or
ljmp
add
jmp
push
add
sbb
aad
and
stc
out
daa
add
sbb
in
lret
and
add
leave
add
add
and
pop
add
and
aad
jmp
or
sbb
shlb
in
pop
sbb
in
lret
adc
iret
lret
sti
or
jmp
add
or
lcall
int
or
adc
sbb
into
iret
jmp
in
pop
adc
jmp
or
ljmp
pop
or
idiv
imul
lret
daa
add
pop
or
sub
iret
or
jmp
or
lcall
jmp
sbb
es
sbb
out
adc
pop
clts
int
in
lret
in
and
add
or
sti
stc
rclb
or
lret
add
pop
int3
push
int
ljmp
and
ljmp
or
sbb
sub
or
lret
pop
push
psubw
sbb
or
into
or
int
cld
out
iret
ljmp
and
iret
sbb
paddsb
stc
cld
out
pop
dec
ror
sbb
psubd
div
pop
int3
sti
adc
sbb
in
sub
lret
leave
add
iret
or
lock
and
sti
lret
sbb
mulb
sbb
or
lock
into
into
in
testl
adc
out
pop
or
testb
pop
testb
and
push
or
add
or
lret
or
bswap
lock
cmc
or
sub
push
leave
cld
dec
pop
cmc
and
push
not
pop
adc
and
push
jmp
sti
call
testb
rcrb
add
or
jmp
cmc
cmc
jmp
or
out
lock
and
or
cld
iret
out
jmp
ljmp
pop
jmp
ljmp
nop
jmp
jmp
and
or
adc
cli
add
in
adc
cld
rorb
pop
es
and
daa
lret
adc
adc
and
sbb
adc
pop
cmc
or
or
pop
aad
or
in
adc
push
sub
daa
add
ror
or
pop
or
or
and
stc
add
shlb
add
and
jmp
push
adc
add
pop
add
in
ljmp
lret
or
int
stc
test
out
sti
out
pop
push
stc
add
call
jmp
jmp
add
adc
leave
push
or
adc
in
out
shl
add
adc
push
add
add
and
cld
jmp
sbb
or
or
div
decl
or
out
or
es
out
iret
cli
shlb
and
add
in
iret
push
leave
sbb
and
cli
push
sbb
push
add
pop
lret
pop
pop
add
aad
sbb
jmp
in
shl
add
int
leave
testl
push
or
stc
daa
int3
pop
out
daa
push
and
and
adc
int
adc
sbb
push
or
jmp
adc
adc
and
adc
add
sar
and
out
mulb
and
adc
and
sbb
add
stc
add
ror
add
stc
out
call
and
adc
add
nopl
add
cmc
push
daa
aad
aad
lock
jmp
lret
in
sbb
ljmp
out
pop
pmaddwd
or
jmp
ljmp
into
lret
cmc
iret
in
adc
and
sub
leave
or
sbb
and
add
out
push
and
call
sbb
push
pop
aad
sub
call
out
push
es
and
push
pop
or
cmc
in
in
add
into
and
or
sbb
lret
adc
and
and
or
rcrb
es
or
or
into
out
testb
int
and
call
into
or
adc
adc
and
pop
sbb
lret
lret
leave
jmp
jmp
bndstx
cld
into
sub
and
testl
and
or
into
out
push
ljmp
out
negl
daa
push
in
cmc
ljmp
or
out
sbb
stc
and
stc
jmp
cmc
and
stc
and
sub
in
es
lock
adc
and
int3
add
imul
bndldx
lret
iret
int3
lcall
into
div
sub
lock
and
jmp
push
add
in
jmp
sti
or
add
and
shlb
shlb
adc
call
leave
and
add
int
out
and
lret
and
leave
pop
rolb
lret
push
call
sub
pop
or
and
jmp
int3
rolb
daa
into
and
out
into
jmp
adc
out
push
pop
add
lret
add
or
sbb
add
add
push
es
pop
int3
bswap
cli
or
in
daa
pop
push
int
lret
pop
or
or
sbb
cmc
rolb
add
leave
in
or
iret
and
and
and
and
or
lock
add
or
or
sbb
into
push
out
lret
jmp
es
add
add
into
add
notl
out
add
cld
adc
add
sar
lock
push
int3
and
or
not
in
or
push
push
ljmp
and
sbb
int3
add
sbb
add
and
in
or
pop
adc
pop
pop
int
call
or
and
jmp
in
sbb
lret
stc
daa
add
testb
in
lret
push
bswap
or
and
and
and
cmc
or
and
adc
jmp
iret
and
lock
pop
or
add
lock
jmp
cld
sbb
call
sbb
push
or
sti
pop
pop
sbb
push
out
test
jmp
push
push
int
sti
ljmp
jmp
pop
or
push
stc
sub
lret
stc
int3
in
add
adc
push
add
iret
push
add
cmc
lock
push
and
testl
and
call
push
daa
sbb
daa
cli
sbb
dec
ljmp
or
shlb
pop
bswap
push
and
ljmp
testl
or
imul
pop
or
int3
or
or
sbb
sbb
cli
out
aad
imul
add
aad
and
pop
pop
into
pop
add
iret
pmaddwd
or
call
aad
or
es
leave
cli
and
sbb
int3
out
add
cli
test
pop
into
call
push
movlhps
jmp
test
pop
shl
or
int
and
out
in
lret
jmp
lret
sbb
in
cmc
and
into
sti
push
add
in
lret
push
sti
sti
ljmp
add
jmp
in
add
negl
or
stc
bswap
or
testl
ljmp
sbb
aad
push
in
and
es
and
pop
pop
pop
and
jmp
cld
push
or
sti
pop
into
jmp
push
or
sti
test
or
adc
adc
and
add
and
sbb
and
idiv
lret
and
str
div
lock
adc
jmp
and
lret
adc
in
and
ror
and
in
and
or
cld
add
call
out
ljmp
daa
int3
and
call
and
lret
sti
ljmp
lock
and
lock
jmp
add
and
idiv
sti
daa
int
add
jmp
shlb
iret
out
out
push
shr
sbb
sti
sar
adc
jmp
push
add
sub
es
lock
in
leave
leave
add
push
and
int3
pop
sbb
add
stc
lret
lock
push
cld
sbb
sbb
in
cld
in
mull
cmc
into
add
stc
sti
and
aad
add
and
idiv
sub
add
lret
int
push
add
shl
in
or
nop
push
and
sti
int
sbb
add
in
pop
lret
push
daa
jmp
or
add
pop
push
and
adc
testl
call
sbb
or
incl
in
add
in
lret
add
and
leave
pop
in
and
int3
add
in
pop
div
sti
pop
leave
pop
int3
into
push
rclb
add
pop
sbb
add
add
out
push
iret
in
pop
cld
aad
in
rolb
or
add
adc
lret
iret
testl
or
lret
or
adc
add
test
daa
daa
adc
pop
and
or
sbb
call
stc
lock
pop
adc
add
push
add
es
jmp
daa
aad
add
sbb
iret
cmc
rclb
shlb
add
push
or
or
sti
lret
cli
cli
and
cmc
or
int3
jmp
and
in
or
iret
and
add
lock
in
and
add
add
sbb
adc
add
and
pop
add
add
sti
sbb
sbb
into
add
or
or
add
sbb
lret
push
or
lret
push
iret
add
and
pop
and
sbb
jmp
jmp
sbb
int
or
add
pop
sbb
bswap
sti
into
call
leave
adc
rclb
ud0
out
sbb
cmc
ljmp
adc
into
and
in
in
sti
in
aad
push
into
and
push
in
sub
adc
or
into
and
or
add
into
int
in
sbb
adc
lock
ud0
sbb
and
ljmp
or
add
or
or
cld
stc
rolb
add
or
sbb
sbb
ud0
or
out
in
and
push
sbb
sbb
rolb
add
sub
jmp
cmc
int
jmp
lret
into
iret
out
iret
into
or
sbb
and
int
mov
es
or
sbb
and
into
in
daa
add
sbb
add
in
add
out
add
adc
testl
sbb
sbb
iret
push
adc
and
add
lret
sbb
add
in
push
lock
sub
add
sbb
sbb
add
notb
in
jmp
add
and
and
cli
and
pop
pop
leave
or
daa
sbb
push
jmp
iret
iret
sbb
int3
or
int3
add
stc
call
sbb
out
iret
and
lret
call
or
or
call
push
notb
and
negl
add
adc
add
or
and
rorb
push
or
adc
in
and
into
testl
sti
or
and
int3
or
push
out
jmp
sti
or
add
and
or
ljmp
push
push
adc
adc
or
rolb
pop
and
or
jmp
and
lret
bswap
jmp
imul
add
add
lret
sbb
push
incl
cmc
pop
sti
sti
and
notl
or
out
jmp
push
test
lret
or
stc
add
and
in
ljmp
stc
or
out
aad
or
rorb
add
add
lret
add
and
ljmp
push
sub
movups
jmp
jmp
add
test
or
push
add
and
pminsw
stc
int
sti
decl
in
out
add
stc
es
sub
add
sti
int3
adc
aad
add
sti
or
leave
int3
bndstx
adc
adc
pop
sbb
sbb
cld
sub
call
push
ljmp
int3
int
add
sbb
and
es
daa
ud2
pop
or
rorb
cli
sbb
adc
pop
and
pop
add
call
push
aad
push
sbb
in
sbb
or
out
add
daa
pop
in
out
cmc
rcrb
and
int3
rolb
cli
iret
lock
cmc
or
aad
ljmp
ljmp
or
push
pop
in
mull
in
adc
int
sar
add
or
push
cli
leave
push
stc
add
lret
out
and
shlb
or
or
ljmp
and
iret
in
es
daa
aad
and
cli
adc
cli
sub
add
call
out
call
in
cmc
sub
lret
ljmp
sti
cli
in
or
sbb
add
sbb
iret
imul
sbb
or
call
pop
aad
sbb
add
leave
sbb
daa
and
into
adc
or
not
out
add
or
shr
add
pop
add
add
and
sbb
add
sub
in
jmp
pop
or
add
in
sbb
into
add
and
jmp
lret
add
ljmp
and
pop
out
out
jmp
add
ljmp
sub
sbb
or
or
adc
iret
push
or
call
in
cli
adc
add
or
aad
rolb
add
stc
movups
into
jmp
iret
jmp
cmc
cmc
add
or
sti
sbb
adc
or
daa
pop
int
cmc
stc
in
paddsb
sbb
into
and
or
add
or
aad
test
out
test
and
or
and
mulb
and
in
lret
testb
and
sub
jmp
out
jmp
cmc
es
add
lret
cmc
and
and
lret
or
sbb
call
add
add
sti
and
add
add
shlb
sub
es
sti
adc
sar
adc
sbb
add
sysret
into
int3
add
add
lret
or
adc
cli
lret
and
sbb
sbb
or
test
adc
stc
pop
and
stc
out
and
sbb
stc
in
int
add
add
ljmp
jmp
add
add
sbb
aad
sbb
sbb
and
call
add
lcall
add
into
into
or
ljmp
or
cli
int3
adc
add
and
sbb
in
daa
stc
rorb
ljmp
push
or
int
or
or
and
and
or
into
sbb
imul
jmp
int3
sbb
add
leave
adc
and
or
mulb
and
and
add
jmp
ljmp
add
or
out
into
sbb
push
in
out
imul
add
pop
sbb
es
sbb
add
or
add
stc
lret
rorb
lret
or
sti
add
es
lret
sbb
daa
out
add
and
iret
and
iret
add
in
and
sub
lret
jmp
add
out
add
add
or
pop
mulb
adc
and
and
sub
iret
sbb
or
and
cli
pop
mull
sbb
and
notb
iret
cli
out
ljmp
ljmp
or
add
add
or
or
or
call
and
sub
or
or
or
add
sbb
rorb
out
in
cld
add
iret
cld
sti
push
cli
cmc
pop
cli
or
push
shrb
or
pop
and
int3
or
sub
es
int3
int
add
es
add
lock
imul
adc
into
add
rorb
or
or
add
and
and
shr
and
leave
add
leave
sub
ljmp
sbb
stc
add
daa
add
add
rolb
es
lret
adc
add
push
add
pop
and
push
lock
in
in
or
adc
add
sti
or
jmp
add
and
sti
bswap
and
rcrb
and
lret
or
add
add
into
aad
pop
add
ror
into
and
jmp
and
in
sbb
pop
cld
div
push
iret
negl
pop
add
and
in
or
lret
and
jmp
sti
sub
stc
int
pop
call
sub
sbb
and
pop
cmc
daa
jmp
call
cmc
daa
sbb
and
sbb
in
iret
lret
in
or
add
or
and
push
add
iret
and
or
lret
call
or
in
out
and
and
or
sub
in
or
and
sti
sbb
sub
out
or
testb
lock
in
into
and
sbb
imulb
into
push
iret
daa
and
call
pop
rclb
push
add
add
daa
jmp
in
cli
ror
int
add
add
or
add
and
call
sti
jmp
sti
in
in
or
add
cli
add
es
sbb
or
or
sbb
or
out
add
jmp
and
es
sti
or
out
or
rcrb
sar
push
or
daa
in
out
int
lock
leave
psubsw
into
adc
iret
push
cld
lret
push
push
adc
in
shlb
add
sub
push
sbb
stc
movhps
sub
and
and
and
adc
in
cli
into
jmp
push
lret
pop
rcl
in
ror
and
jmp
lret
lret
push
or
sbb
lret
iret
pop
stc
stc
sub
push
add
daa
jmp
leave
add
and
push
jmp
pop
or
lret
out
sbb
and
and
leave
or
jmp
in
pop
push
in
add
and
lret
lret
int3
push
or
and
push
imul
leave
and
cmc
cmc
add
psubq
push
ljmp
or
adc
push
leave
shlb
or
pop
testb
and
es
add
add
idiv
in
and
and
push
push
int3
and
and
decl
add
push
cli
lock
cli
in
sub
cli
cmc
test
push
adc
or
pop
cli
lret
adc
add
add
add
adc
add
es
sbb
or
out
add
add
and
leave
or
sti
and
decl
push
sub
or
in
cmc
call
and
imul
ljmp
or
or
sub
lret
or
lock
in
or
and
add
add
cmc
or
lret
push
pop
add
jmp
sbb
int
add
es
and
iret
shlb
out
shr
cld
jmp
and
stc
or
cmc
add
adc
sbb
leave
or
daa
pop
and
or
adc
or
push
push
jmp
lret
jmp
adc
out
lock
sub
aad
or
jmp
pop
es
stc
mov
and
sbb
push
pop
in
and
add
or
or
push
sti
lret
lret
cld
int
or
push
and
and
shl
and
and
iret
and
int
lock
leave
pop
into
and
lret
push
pop
mull
add
add
and
and
add
stc
or
in
push
and
pop
and
push
int
jmp
into
add
or
jmp
out
in
pop
sti
add
mov
sar
or
lock
ljmp
adc
sbb
out
into
and
call
out
push
out
iret
in
int3
jmp
or
adc
or
add
cli
add
lret
int3
int3
push
daa
out
jmp
into
add
out
sbb
push
add
daa
cld
or
push
testl
add
jmp
add
or
sub
es
call
leave
int
pop
or
jmp
in
sbb
in
ljmp
add
add
or
or
or
int
iret
pop
add
lret
pmulhuw
jmp
push
out
in
add
and
leave
or
adc
daa
add
sti
iret
out
es
stc
sbb
and
in
pop
in
int
and
into
or
daa
ror
daa
in
push
int3
sar
call
sbb
stc
es
and
int
add
cld
or
into
and
add
lret
and
cld
jmp
and
lret
iret
sti
shr
push
and
out
or
daa
and
pop
or
ljmp
out
cmc
adc
call
add
sbb
out
push
in
sbb
add
lret
call
or
in
into
es
sbb
in
adc
lock
add
or
in
lock
and
or
in
jmp
add
rcrb
int3
iret
pop
pop
sbb
add
negl
test
call
into
ljmp
jmp
push
leave
push
es
and
sti
add
or
sbb
sbb
aad
pop
movaps
and
sti
out
add
add
and
and
add
pop
or
and
into
push
add
or
jmp
sbb
int
jmp
out
push
not
or
out
and
rorb
adc
jmp
jmp
lret
or
int
and
aad
and
ror
lret
incl
pop
stc
and
dec
add
stc
or
or
in
int3
adc
and
and
pop
ljmp
add
sbb
rcl
int
leave
and
negb
and
or
lock
or
sub
and
int
sbb
jmp
sti
lret
and
mov
pop
and
or
in
out
rclb
negb
sub
or
add
push
daa
or
testl
in
or
push
or
jmp
add
jmp
in
leave
or
sub
push
cli
cld
in
lock
or
out
call
add
lock
push
and
in
and
push
and
push
out
in
into
jmp
and
add
add
int3
out
add
shr
or
or
lock
and
sti
ljmp
sbb
in
sbb
and
and
adc
out
lret
and
shlb
push
cld
cmc
out
sub
cmc
into
and
sbb
int
es
testb
call
adc
lret
sbb
and
pop
add
psrld
or
or
sbb
add
int
testl
sbb
or
daa
call
lret
and
ljmp
into
add
and
in
jmp
into
pop
sbb
pop
sbb
push
call
jmp
or
or
sbb
cld
or
sbb
lock
and
or
and
iret
lock
cmc
pop
add
push
sti
add
adc
push
lret
or
or
lret
call
leave
cld
sbb
test
push
call
or
push
and
lret
or
lret
and
add
jmp
and
unpckhps
daa
in
or
or
add
push
sbb
cli
in
and
push
and
cld
and
jmp
sbb
pop
jmp
push
and
push
or
or
sbb
sti
testl
rclb
in
add
add
lret
sti
leave
push
sbb
adc
out
and
iret
add
add
jmp
in
push
out
int
cmc
daa
sbb
and
stc
and
and
adc
lidtl
and
stc
and
push
lock
int
add
sbb
bswap
lret
and
sbb
aad
pop
push
ljmp
lar
aad
sbb
call
or
push
and
daa
jmp
lret
add
add
es
add
call
in
add
int3
psubsw
adc
pop
push
leave
aad
into
int
or
add
adc
and
pop
sub
and
sbb
lret
add
jmp
int
push
push
into
pop
add
add
ljmp
test
push
sti
lret
lret
call
sbb
add
stc
sub
and
add
add
daa
push
int
add
adc
out
adc
add
add
sti
call
and
add
add
in
or
iret
psubd
int3
or
and
pop
stc
or
ljmp
pop
sbb
testb
test
cli
jmp
adc
ljmp
call
aad
pop
sbb
jmp
stc
pmulhuw
sbb
pop
lret
aad
rorb
sti
int3
lret
sbb
int3
sbb
push
jmp
aad
add
iret
and
lock
lret
add
add
or
add
add
or
or
and
cli
lret
stc
jmp
call
stc
stc
and
sbb
aad
push
in
rolb
or
or
adc
int
pop
int3
add
sbb
cld
in
and
and
sbb
leave
aad
or
stc
leave
jmp
iret
push
or
dec
add
push
int3
lret
int3
sbb
adc
sub
aad
jmp
or
push
stc
add
push
sub
push
or
lret
lret
add
and
int3
into
add
ljmp
add
into
jmp
es
ljmp
ljmp
cld
jmp
adc
ljmp
and
pop
in
in
daa
lret
push
stc
iret
and
add
in
shl
push
sub
int3
and
sbb
or
bswap
add
pop
stc
lock
in
sbb
add
add
sbb
leave
out
lock
sbb
call
pop
push
es
in
add
out
jmp
sub
ljmp
into
add
and
adc
and
add
sub
rolb
or
lock
or
sti
add
lret
daa
adc
jmp
sub
negl
or
cmc
or
lock
and
cmc
leave
leave
and
adc
or
into
and
and
sbb
sbb
int3
int3
es
pop
daa
and
in
or
bswap
in
and
and
add
push
aad
stc
and
lret
stc
not
adc
sub
mulb
add
es
and
add
in
jmp
sbb
add
adc
sbb
or
pop
adc
sub
in
lret
dec
or
lret
add
lock
cmc
int
add
into
pop
out
div
push
lret
add
or
and
iret
call
add
sbb
pop
rolb
pop
ljmp
unpckhps
out
sbb
push
ljmp
testl
in
cmc
and
add
leave
push
or
add
sbb
cli
push
sbb
int
into
cli
sbb
lock
jmp
cli
push
in
and
ljmp
lret
sti
sbb
and
out
cld
leave
and
out
aad
sbb
sbb
add
stc
jmp
add
add
pop
ror
add
lock
or
int3
and
sub
or
out
mull
add
add
and
in
push
and
into
leave
pop
push
int3
out
daa
push
int
aad
push
lret
add
add
adc
and
int
out
add
sbb
lret
sbb
int3
and
or
or
test
sbb
ror
sti
imul
imul
add
call
push
lret
add
or
es
add
and
and
int
adc
pop
adc
int3
aad
or
lret
and
and
cli
and
push
push
and
leave
push
pop
push
or
sbb
add
sub
sti
or
int3
lret
out
sub
or
lret
lret
add
and
int3
and
and
or
pop
jmp
sbb
leave
cmc
sti
or
lret
or
or
pop
mulb
add
and
jmp
stc
out
add
and
lock
sar
and
cli
iret
out
add
into
add
into
or
add
or
sbb
or
cli
into
in
and
pop
jmp
adc
sbb
add
jmp
ljmp
and
into
in
sub
lret
or
cli
and
testl
out
sbb
lock
adc
add
add
sti
cmc
push
and
add
sbb
cli
add
add
sti
add
lock
pop
in
pop
or
in
call
adc
sbb
into
pop
adc
push
daa
paddsw
pop
into
rcrb
sub
call
rclb
add
aad
add
int
or
in
and
add
and
out
leave
daa
and
cmc
add
aad
add
aad
add
out
stc
rcrb
sbb
daa
push
pop
pop
add
and
out
sbb
shr
stc
lret
cmc
stc
lret
call
or
and
adc
call
stc
or
add
add
lret
add
leave
add
sbb
daa
sbb
sbb
stc
sbb
in
out
pop
out
in
add
and
aad
call
sbb
sti
aad
pop
or
add
lret
add
add
or
pop
sar
int3
and
ljmp
sbb
daa
in
or
daa
or
push
lret
iret
idiv
add
and
push
es
lret
daa
adc
lcall
aad
or
adc
add
push
add
idiv
and
cld
rolb
call
in
add
lock
lock
add
rolb
nopl
and
cmc
pop
and
shl
or
sbb
ljmp
testl
sti
push
add
and
or
sbb
and
and
bswap
lock
cli
or
negl
pop
add
and
int3
push
jmp
pop
adc
push
jmp
and
call
add
sbb
negb
cld
and
int3
cli
iret
or
pop
and
out
in
sbb
int3
imul
aad
push
out
add
sub
daa
jmp
rolb
push
ljmp
add
es
iret
and
or
testl
leave
push
out
add
stc
daa
sbb
daa
add
add
in
sbb
or
or
jmp
out
ljmp
int
and
sbb
ljmp
lret
out
push
sldt
sti
pop
stc
daa
add
or
sbb
in
out
or
push
aad
pop
add
idiv
and
sub
ljmp
pop
add
invd
in
out
and
daa
or
jmp
jmp
rorb
cli
leave
aad
or
add
adc
rcrb
shlb
jmp
and
sti
or
ljmp
iret
call
pop
out
aad
in
aad
in
cli
iret
jmp
ljmp
sti
add
add
call
adc
or
push
call
stc
and
jmp
and
into
push
int
or
out
cli
or
daa
jmp
or
imul
or
jmp
jmp
or
iret
and
and
es
or
in
out
daa
jmp
and
lret
out
or
in
int3
and
add
notl
or
movups
add
add
add
adc
out
sbb
sbb
add
int3
stc
in
sbb
out
add
lret
ljmp
sbb
jmp
and
leave
and
cld
pop
add
out
in
and
stc
pop
call
pop
pop
and
and
jmp
sub
push
call
and
leave
and
or
add
push
push
and
and
aad
or
cld
and
and
lock
jmp
or
daa
into
int3
or
leave
in
push
sbb
cld
cli
and
sbb
in
leave
lsl
and
sbb
jmp
and
shlb
and
idiv
add
or
and
and
and
and
in
lret
call
and
add
push
out
pop
add
or
add
in
push
add
sbb
out
and
in
call
add
pmaxsw
int3
cmc
out
and
cld
or
and
es
lret
sbb
add
adc
or
or
and
pop
lock
sbb
in
pop
shlb
or
sub
es
add
pop
daa
add
add
imul
call
adc
and
add
and
and
out
push
cmc
testl
iret
decl
pop
daa
lock
and
lret
sti
es
add
mulb
rolb
jmp
sti
and
or
sbb
sbb
add
pop
not
sbb
push
lret
call
sbb
negl
or
mulb
pop
pop
call
add
call
cld
or
sbb
es
sar
in
pop
add
add
in
int3
or
or
add
call
and
add
or
and
out
push
in
out
adc
push
add
and
daa
pop
testl
lret
es
push
iret
pop
sub
in
cmc
add
and
add
out
daa
add
stc
out
cmc
add
int3
cli
ljmp
or
int
bswap
jmp
mov
int
decl
testb
cld
or
and
pop
into
add
cmc
or
jmp
cld
or
shlb
add
rcrb
out
shr
and
sbb
adc
and
rolb
pop
call
push
adc
lret
and
or
out
pop
adc
and
pop
out
iret
cld
sbb
pop
jmp
lret
push
call
into
daa
out
sbb
rcrb
int3
aad
add
and
and
out
or
adc
call
sbb
sti
push
idiv
lret
sbb
lret
jmp
daa
leave
iret
or
int3
adc
lar
sbb
in
lret
cld
es
mulb
sbb
pop
or
stc
sti
in
and
or
sti
jmp
daa
pop
push
int3
lret
or
adc
sbb
cld
and
push
add
ljmp
daa
sbb
sbb
add
push
jmp
and
lret
add
or
iret
or
int3
pop
and
and
call
stc
jmp
and
incl
sbb
or
int3
sbb
sub
leave
sbb
cmc
or
add
sti
or
pop
adc
daa
or
adc
in
pop
pop
iret
cmc
int
stc
into
push
cmc
int
cld
and
in
adc
adc
stc
push
leave
imul
es
out
cmc
out
into
or
add
lock
sub
pop
add
and
rcl
jmp
in
add
lret
cld
and
leave
and
cmc
cli
add
out
or
mull
pop
or
and
jmp
sbb
call
add
call
rolb
sbb
or
stc
add
into
es
out
and
sbb
sbb
push
jmp
out
int3
lret
es
and
and
and
or
or
and
es
or
sbb
in
and
daa
add
add
add
add
add
sub
jmp
and
movhps
or
and
and
aad
and
push
or
adc
sbb
and
pop
or
push
out
out
lret
paddb
rcl
or
sti
out
cmc
negl
ljmp
stc
sub
stc
into
ljmp
sbb
or
in
call
imul
rclb
pop
adc
or
lret
or
pop
into
adc
and
pop
lret
sti
jmp
push
out
test
es
shrb
and
and
push
adc
sbb
in
cmc
and
out
int3
not
lret
lret
sbb
out
push
and
into
and
adc
cmc
sbb
shlb
aad
sar
or
sub
adc
add
and
and
daa
or
ljmp
adc
iret
and
or
or
sub
in
out
out
push
push
stc
jmp
daa
add
and
stc
push
aad
add
call
lock
and
or
sti
iret
pop
rolb
and
add
int
out
leave
in
or
pop
push
in
and
add
call
push
cld
in
sbb
int3
ljmp
or
or
or
and
into
in
or
lock
in
sbb
int
or
pop
jmp
ljmp
or
or
ror
int
mov
or
adc
or
leave
in
pop
push
add
push
in
stc
cld
push
add
sbb
jmp
push
or
out
and
cli
push
in
pop
stc
sar
push
aad
iret
into
out
in
leave
and
in
or
or
out
jmp
cmc
and
out
add
sub
out
rclb
push
into
push
pop
add
push
leave
daa
or
aad
in
add
pop
shr
sbb
and
push
call
jmp
add
pop
es
and
cld
in
add
push
jmp
add
testb
cmc
push
or
add
mull
aad
jmp
ljmp
and
add
daa
and
sbb
in
jmp
sar
or
or
or
add
cld
or
and
push
and
sbb
adc
testb
sti
shlb
or
push
in
or
in
notb
lret
or
lcall
testb
push
adc
stc
or
sbb
cld
and
lret
and
add
add
add
ljmp
pop
call
notl
jmp
leave
sti
push
cli
add
and
or
cld
sbb
lret
jmp
add
lret
negl
add
jmp
lret
lock
pop
add
or
out
int
cli
push
or
or
add
iret
or
lret
int
mulb
add
and
aad
and
ror
or
iret
add
sbb
sti
push
pop
ljmp
pop
pop
add
jmp
lret
sbb
adc
or
iret
daa
adc
and
and
sti
sbb
add
and
push
testl
stc
into
or
rolb
jmp
and
and
sbb
ljmp
daa
push
adc
jmp
daa
or
and
int
lret
add
add
lret
jmp
into
or
and
adc
and
or
and
iret
and
leave
int3
in
in
lret
sti
add
add
sub
into
or
int
cmc
lret
cld
push
and
and
adc
shr
or
add
and
call
add
or
leave
add
and
sbb
and
div
sbb
int
lret
add
or
call
incl
sbb
or
or
test
and
sbb
notl
in
in
pop
pop
pop
sbb
cld
or
out
or
add
cli
call
int
and
jmp
int3
push
mulb
sbb
jmp
or
stc
in
into
sbb
out
and
cld
iret
or
jmp
out
adc
out
and
pop
or
or
add
in
sbb
in
push
in
add
stc
and
out
sub
or
sbb
and
iret
or
adc
call
lret
test
or
leave
sar
sbb
adc
in
es
and
sti
or
lret
int3
cmc
or
out
in
ljmp
into
add
pmaxsw
or
or
add
int
shlb
ljmp
iret
shlb
sbb
in
sbb
lock
es
lock
add
in
daa
or
and
adc
adc
sbb
add
jmp
sbb
leave
or
and
and
pop
add
add
add
or
iret
or
pop
and
pop
iret
lret
or
add
out
add
rolb
out
sbb
and
shr
or
and
cmc
stc
sbb
aad
or
add
int
leave
add
push
sbb
adc
in
es
or
and
out
sbb
sbb
in
cli
iret
rcl
add
or
call
sbb
aad
mulb
sbb
pop
in
into
and
cld
sbb
daa
leave
mull
lret
and
and
and
push
cmc
es
push
add
sti
sti
sti
stc
sub
sti
or
cli
lock
sbb
pop
lock
ljmp
sbb
push
es
or
and
sbb
and
and
jmp
push
cli
add
and
call
and
rcrb
cmc
cld
lock
daa
lret
in
out
iret
ljmp
into
sbb
or
in
imul
jmp
call
and
cmc
int3
push
sbb
or
add
lock
or
in
out
cli
lock
or
or
or
int
push
out
or
cli
add
or
and
sbb
or
or
int
leave
ljmp
cmc
lock
and
or
rolb
push
push
pop
rcrb
aad
lret
int
add
add
lret
into
or
out
jmp
ljmp
push
adc
and
stc
and
add
or
sbb
lret
aad
add
cmc
pop
or
ljmp
into
or
leave
out
out
shr
sbb
pop
sti
push
and
in
sbb
in
push
in
cmc
ljmp
and
pop
testl
and
and
mov
and
cmc
ljmp
es
jmp
or
jmp
aad
into
lret
call
ljmp
or
jmp
and
push
call
leave
daa
in
out
jmp
sbb
adc
int
add
pop
sbb
call
push
add
and
add
sbb
cmc
rolb
int3
pop
and
pop
add
in
push
int
int
out
and
int3
prefetchw
daa
sti
jmp
sbb
push
or
jmp
or
testb
out
pop
push
sbb
idiv
stc
cld
pop
sub
stc
adc
or
add
add
out
out
pop
or
jmp
in
lock
out
or
adc
in
push
adc
and
lock
incl
sbb
cmc
sbb
or
add
lret
add
into
jmp
add
rcrb
or
daa
lret
sub
adc
int3
into
push
int
adc
or
leave
int3
sbb
jmp
sbb
or
lock
add
or
jmp
and
ljmp
in
call
rcl
sub
and
in
sbb
in
push
and
and
adc
or
or
add
es
or
leave
stc
ljmp
or
add
int
or
into
rorb
es
pop
push
sbb
adc
call
add
out
or
add
or
push
in
out
add
into
adc
daa
cli
into
int3
out
mull
int
stc
add
in
adc
lock
add
int
out
push
rcrb
daa
ljmp
aad
or
ljmp
adc
into
or
call
or
in
push
cmc
pop
and
or
into
add
pop
in
or
add
push
or
or
notb
ljmp
sbb
out
or
aad
testb
rorb
stc
int3
or
mulb
or
and
push
es
incl
adc
lock
testb
sbb
call
jmp
add
sar
add
or
cld
add
iret
add
lret
int
cld
push
lock
lret
or
add
pop
decl
leave
cli
incl
iret
push
adc
daa
add
in
add
pop
testb
pop
pop
adc
sbb
sbb
or
in
es
push
sbb
imul
add
push
out
in
lock
add
sti
or
stc
add
leave
lret
in
add
sbb
or
or
lock
lret
jmp
not
leave
or
sbb
lret
into
sbb
or
or
int3
add
out
and
or
ljmp
add
or
in
push
jmp
add
rcl
pop
adc
or
rolb
aad
iret
cli
into
iret
in
push
push
out
sbb
add
adc
into
push
es
pop
jmp
into
aad
lret
sbb
push
or
jmp
pop
push
pop
cli
leave
out
add
in
adc
out
add
jmp
sbb
cmc
daa
aad
jmp
test
sbb
lret
adc
jmp
pop
or
pop
sbb
por
paddsw
negl
or
or
jmp
add
push
or
jmp
pop
shr
sub
leave
push
call
and
and
ljmp
push
push
int3
push
lock
and
push
lret
and
in
in
in
push
push
or
bswap
sbb
add
rcrb
adc
out
sti
or
cld
pop
pop
add
pop
or
in
jmp
ror
daa
int3
or
add
es
and
in
cmc
and
int
jmp
sbb
in
rcl
or
or
sub
and
or
out
in
pop
add
or
int3
and
add
adc
jmp
iret
pop
push
daa
and
jmp
stc
aad
es
add
sbb
add
es
out
pop
add
add
adc
jmp
in
and
adc
and
cmc
and
adc
and
int3
adc
rorb
or
cmc
cli
add
int3
push
leave
push
or
sbb
add
add
lret
pop
adc
int3
in
into
push
stc
sbb
aad
and
cld
in
out
and
sbb
and
pop
jmp
pop
call
or
in
lock
sbb
cli
add
stc
sbb
add
or
jmp
or
and
out
cmc
add
in
sti
sbb
push
ljmp
incl
out
sbb
aad
in
push
sbb
movups
sbb
call
or
testb
int
adc
lret
ror
lret
sbb
or
in
jmp
pop
into
sti
in
push
out
sti
push
call
pop
add
pop
add
and
add
ljmp
ljmp
sub
adc
in
stc
in
call
push
shl
aad
in
and
add
and
out
cli
adc
add
iret
pop
lret
in
pop
cmc
jmp
lock
daa
jmp
pop
push
add
iret
int
or
lret
in
and
rolb
adc
jmp
add
sti
aad
es
sub
sbb
sub
iret
es
imul
and
sub
sti
sti
out
or
add
leave
push
pop
in
in
es
and
jmp
jmp
push
dec
in
and
and
sub
testb
iret
sti
sbb
mull
or
rcl
sbb
pop
sbb
push
rcl
jmp
lret
int3
stc
add
out
rclb
ljmp
daa
lret
add
sbb
adc
add
or
sti
out
or
cld
push
not
into
and
or
sti
in
incl
and
ljmp
add
sub
and
push
call
add
adc
or
and
add
in
pop
pop
in
sbb
pop
mulb
sbb
add
cli
iret
and
lock
and
cmc
or
add
and
push
into
negl
and
imul
or
cli
and
and
ljmp
add
idiv
sti
adc
sbb
lret
lock
jmp
adc
add
push
shlb
and
cld
sub
lret
rorb
add
int
sbb
dec
lret
sub
stc
not
and
or
push
sbb
es
or
jmp
leave
and
and
in
iret
lret
or
or
add
shr
or
jmp
cmc
and
decl
in
leave
add
and
and
jmp
or
push
into
daa
or
and
push
sbb
and
add
or
add
push
into
push
jmp
int
push
pop
lret
and
and
pop
test
or
add
add
cmc
out
in
shlb
and
pop
cld
call
leave
or
lock
pop
add
rolb
push
and
lret
add
idiv
daa
in
or
and
call
call
adc
or
sti
int
es
add
leave
int3
and
sbb
sub
daa
or
adc
cli
into
push
and
lret
add
cld
sbb
add
or
or
out
and
cli
add
leave
ljmp
add
sbb
add
iret
jmp
ud0
rorb
and
or
in
or
into
push
add
push
and
adc
cld
and
sbb
push
pop
add
int
daa
or
add
lcall
adc
out
or
pop
and
lret
push
or
and
pop
and
and
int3
sbb
out
sbb
in
pop
lock
or
or
es
push
in
rorb
and
into
call
sbb
sbb
add
add
leave
or
sbb
add
or
and
add
and
in
adc
adc
and
add
sti
sbb
or
iret
leave
in
or
and
aad
or
call
and
and
and
sbb
add
in
push
in
push
and
es
add
stc
iret
in
sub
cld
out
or
cld
sbb
nopl
sub
or
ror
and
dec
cld
and
sbb
and
sbb
jmp
or
or
sbb
iret
pop
or
jmp
into
add
or
sbb
pop
or
aad
sbb
jmp
in
in
add
rcrb
and
add
es
add
pop
femms
push
add
ljmp
or
push
and
and
aad
push
daa
into
or
push
cmc
daa
ljmp
int
and
in
and
sbb
and
add
ljmp
into
in
add
sbb
or
int3
add
lret
add
in
paddsw
pop
lret
or
cmc
ror
jmp
cmc
add
pop
or
shl
add
int
in
jmp
div
and
cli
daa
push
pop
sub
cmc
and
and
aad
pop
add
jmp
or
shr
add
add
out
negl
into
shr
aad
leave
shr
push
stc
add
or
aad
in
test
out
and
add
call
add
into
leave
sbb
iret
in
int3
jmp
add
out
or
out
add
stc
cld
jmp
out
testl
and
add
jmp
or
pop
push
pop
sbb
jmp
in
rorb
sbb
add
notl
iret
lret
or
add
stc
lret
lret
in
leave
push
int
or
or
ljmp
or
in
lret
jmp
add
iret
or
or
or
lret
es
in
or
or
jmp
add
sbb
sbb
and
and
push
add
jmp
push
out
out
sub
sbb
out
int3
add
cmc
in
or
lret
and
pop
or
into
cli
lret
adc
out
jmp
adc
testl
es
leave
iret
sbb
push
testb
and
imul
iret
adc
imul
cli
call
or
jmp
add
sbb
jmp
sub
adc
aad
pop
and
cli
not
or
sbb
add
adc
add
and
push
iret
iret
and
pop
in
or
or
out
and
lret
and
add
mulb
cld
push
in
sbb
push
call
ljmp
and
call
or
add
and
in
add
or
add
push
adc
call
testl
ljmp
lret
add
lret
lret
or
adc
sti
rolb
sbb
aad
out
or
sbb
rcl
sti
add
or
div
cmc
in
or
and
leave
pop
or
add
lock
or
sbb
and
push
or
in
ljmp
test
sti
or
leave
pop
push
lret
pop
sbb
or
sub
lret
out
pop
and
into
sbb
rcl
ljmp
and
decl
add
in
into
or
call
call
decl
lock
in
and
and
lock
lret
or
daa
adc
sbb
out
ljmp
and
ljmp
lret
push
add
add
int3
out
or
leave
dec
sti
imul
sub
push
sbb
sbb
iret
pop
call
lret
push
in
lret
or
push
in
or
add
push
and
adc
sti
push
cld
or
int
out
int
in
cmc
ror
ljmp
out
lock
push
jmp
daa
sti
add
add
into
pop
into
and
into
daa
cmc
sbb
push
sti
sbb
lret
adc
and
sar
pop
and
decl
sub
adc
pop
aad
int3
add
lock
lret
adc
testl
lret
push
cmc
rorb
rcl
sbb
add
add
and
int
adc
push
pop
cli
and
int3
add
and
cmc
int3
add
daa
push
and
sbb
add
jmp
and
pop
pop
and
and
in
add
add
es
sti
sub
mulb
pop
or
jmp
lock
and
add
and
out
and
add
push
or
sar
sbb
push
in
push
sti
jmp
call
into
or
add
jmp
in
add
add
daa
in
add
bswap
or
lock
and
pop
ljmp
int3
and
push
pop
or
and
lret
or
call
cmc
in
add
aad
sub
in
bswap
in
cli
add
add
lret
shl
sbb
jmp
push
in
sbb
sub
out
daa
lock
jmp
add
add
in
push
push
int3
in
int
and
iret
add
and
push
rolb
daa
or
lret
lock
add
iret
and
lret
jmp
in
testb
es
or
int3
int
daa
cmc
out
jmp
or
add
or
pop
adc
and
in
sbb
adc
sbb
lock
cli
ror
lock
iret
jmp
sbb
pmullw
stc
int
ljmp
leave
push
push
leave
in
add
es
dec
add
add
stc
decl
testb
call
push
or
lret
aad
adc
in
add
idiv
iret
sbb
call
in
pop
adc
and
daa
push
add
and
add
and
lret
adc
and
int
cld
sbb
ud0
int3
and
pop
in
lret
adc
lret
push
mul
cld
and
add
div
or
iret
ljmp
and
in
aad
cmc
lret
and
sti
in
jmp
into
shr
add
into
jmp
es
or
jmp
or
or
or
out
in
or
push
out
push
jmp
sbb
pop
jmp
sbb
push
or
shr
push
and
lret
or
aad
leave
and
and
add
push
or
and
int3
cli
out
and
jmp
aad
out
daa
adc
or
stc
and
add
add
pop
in
sub
sbb
sbb
or
into
in
sbb
testl
out
and
or
in
into
and
and
test
lret
rolb
int3
jmp
iret
stc
in
sbb
shlb
iret
or
into
bswap
int3
add
int3
add
add
sbb
movlhps
pop
out
cld
stc
aad
add
or
sbb
lar
or
lock
and
into
and
cli
in
adc
int3
sbb
jmp
iret
add
and
or
pop
call
sbb
lret
push
int3
or
or
jmp
int3
add
out
cld
call
and
iret
cmc
adc
add
add
rclb
push
int
add
and
or
and
add
add
and
adc
sbb
cld
or
int
or
add
int
or
and
push
jmp
sub
or
or
sbb
adc
leave
call
and
adc
adc
jmp
into
cli
stc
or
rcrb
aad
leave
and
add
jmp
lret
push
in
and
out
pop
pop
out
stc
pop
push
or
rcrb
jmp
lret
cli
cld
push
stc
add
sbb
out
lret
out
aad
pop
sbb
iret
or
lret
push
rcrb
in
ror
and
and
in
and
ljmp
adc
and
sub
lock
lret
push
sub
jmp
and
call
sub
and
lock
add
jmp
out
add
lock
sbb
call
add
or
lret
push
and
out
call
aad
jmp
stc
jmp
and
push
leave
add
iret
lret
rorb
sbb
leave
sbb
sub
out
daa
or
jmp
pop
out
out
pop
iret
sbb
add
sbb
and
add
and
mull
jmp
push
add
add
out
out
and
sbb
shlb
add
stc
and
or
ljmp
ror
testl
sti
add
in
ljmp
out
push
and
stc
ror
or
and
pop
cmc
testb
call
and
or
por
jmp
push
lret
add
ljmp
daa
lock
sti
or
in
pop
in
sbb
lret
es
or
lock
jmp
jmp
lret
and
or
lret
add
sbb
iret
and
or
sbb
push
rcl
pop
cmc
paddsb
add
add
and
or
and
sti
daa
lock
add
out
out
notl
out
sbb
psubsb
add
or
mov
negl
and
leave
and
aad
jmp
adc
cld
pop
aad
push
add
call
ljmp
pop
daa
or
sub
daa
sbb
add
es
jmp
or
in
jmp
imul
or
and
in
add
add
daa
or
call
or
out
sti
or
sbb
sbb
and
es
add
into
call
sbb
pop
add
or
shr
push
add
cli
int3
push
or
push
out
incl
add
push
and
lret
add
sub
add
sbb
sbb
lret
push
aad
or
add
in
push
test
sbb
notb
push
stc
out
and
in
daa
add
add
adc
push
jmp
stc
cli
adc
decl
sbb
add
or
or
add
or
add
adc
lret
add
shr
sbb
mov
int
int3
pop
stc
add
or
add
sbb
es
or
rolb
pop
int3
or
rcrb
leave
or
lock
out
pop
call
sub
and
pop
call
into
lock
stc
or
out
out
stc
and
daa
in
int
sar
call
or
int
or
lret
out
adc
add
int3
and
push
idiv
cld
or
cli
shl
ljmp
or
adc
add
call
pop
or
call
into
lret
add
ljmp
aad
push
int3
jmp
and
and
iret
in
sbb
leave
cld
in
daa
sub
and
in
lret
mulb
adc
add
aad
and
jmp
and
pop
stc
or
verr
pop
push
in
into
ljmp
paddsw
bswap
push
jmp
pop
push
add
sub
es
idiv
push
jmp
cli
pop
or
int
sti
testl
bswap
and
or
pop
add
iret
iret
push
lret
adc
or
add
sti
push
jmp
into
int3
call
in
es
sbb
daa
or
push
and
and
or
stc
or
or
push
or
add
and
push
idiv
add
add
add
aad
and
aad
and
cli
push
or
and
pop
call
lock
out
sti
pop
daa
iret
shr
add
sbb
pop
test
add
in
or
or
sbb
int3
call
push
add
iret
ljmp
add
and
and
add
in
in
shrb
push
and
ljmp
ljmp
ljmp
adc
add
sbb
call
ljmp
and
stc
add
pop
ljmp
in
pop
rolb
jmp
and
jmp
pop
sbb
int3
pop
adc
push
shlb
cli
in
lock
push
shr
stc
or
in
lret
adc
add
jmp
lock
cli
aad
and
push
in
cld
in
not
stc
or
add
sub
or
ljmp
pop
testb
into
and
ljmp
psubsb
or
in
adc
ljmp
es
cld
stc
or
sbb
sbb
adc
in
push
lret
add
in
and
add
or
pop
add
pop
out
lret
out
in
lret
push
lret
sbb
sbb
adc
int
sub
add
int3
rclb
pop
es
add
sar
leave
jmp
and
in
and
in
rcrb
in
and
sti
add
shr
or
sub
and
pop
and
into
push
add
add
and
sbb
add
and
jmp
pop
cli
es
femms
push
testb
sar
and
push
or
jmp
rcl
in
int3
and
aad
add
cld
sti
sbb
add
adc
out
or
aad
bswap
jmp
stc
or
and
movups
lret
sti
leave
cld
sbb
out
lret
es
or
pop
push
aad
sbb
lret
push
div
in
shlb
rclb
adc
and
and
add
daa
or
or
push
add
add
and
sbb
int3
or
es
sub
lret
cmc
and
iret
or
or
add
add
lret
add
in
push
and
jmp
sbb
out
or
add
testl
add
ljmp
pop
shr
and
or
or
lock
paddsb
or
cmc
or
int3
and
in
and
or
and
add
sbb
call
pop
iret
add
sbb
pop
call
in
push
sub
and
sbb
or
and
in
sbb
sbb
push
sub
pop
invd
int
adc
out
lret
int3
jmp
imul
imul
or
sbb
sbb
lret
push
pop
push
and
push
shr
or
out
int3
leave
in
add
or
call
and
and
or
testl
int
bswap
call
sbb
iret
daa
ror
pop
ljmp
aad
jmp
lcall
add
or
or
shlb
or
add
and
sbb
leave
ljmp
call
sbb
or
sub
sub
adc
jmp
sbb
in
in
and
and
push
or
movhps
and
and
pop
lock
push
and
sbb
in
sbb
pop
in
push
pop
add
and
and
iret
and
pop
shl
in
add
push
ljmp
adc
sbb
and
lret
or
push
sbb
and
or
int3
cmc
add
int
add
out
daa
cmc
adc
div
or
int
daa
add
push
and
ljmp
call
es
stc
out
add
or
sub
call
push
add
rolb
sbb
and
jmp
pop
add
adc
pop
daa
or
and
into
es
nopl
out
or
sti
sbb
into
adc
into
jmp
and
into
sbb
jmp
adc
pop
add
out
push
add
daa
ljmp
and
pop
adc
add
pop
or
negl
out
pop
out
es
adc
and
push
shl
daa
leave
daa
in
lcall
in
iret
out
and
leave
or
and
and
call
in
mulb
psadbw
add
jmp
in
daa
ror
sbb
add
in
pop
shl
add
test
es
testl
ljmp
ljmp
sbb
or
sbb
and
sbb
int
push
add
add
out
sbb
jmp
int3
add
or
or
and
or
and
stc
sub
cmc
sub
rorb
add
or
jmp
and
adc
rorb
out
and
lret
lock
mull
lret
in
daa
jmp
and
stc
add
ljmp
lret
rcrb
int
idiv
into
jmp
sti
pop
and
decl
adc
iret
add
add
pop
iret
sub
into
iret
dec
adc
push
adc
and
into
add
in
cli
testb
into
cld
add
jmp
sbb
sbb
pop
sti
jmp
call
lock
imul
add
ljmp
or
pop
push
and
out
or
daa
rcl
in
out
add
shr
cld
add
and
in
in
sbb
cld
sub
lock
and
rcrb
adc
in
ljmp
pop
out
push
cld
iret
or
sbb
into
add
add
push
iret
and
testl
or
leave
sbb
or
or
sbb
in
or
shlb
cli
in
and
sub
add
pop
leave
add
int3
or
int
add
cld
into
call
or
jmp
psubd
sbb
add
or
jmp
and
adc
or
jmp
push
jmp
rcl
and
daa
psubsb
jmp
negb
call
and
sti
lret
push
adc
and
ljmp
pop
add
in
call
in
pop
sbb
ror
push
stc
jmp
cmc
pop
and
and
in
cmc
push
and
push
cli
or
in
out
testl
stc
add
iret
add
sbb
pop
sbb
out
or
lret
call
push
ljmp
stc
sbb
and
in
and
and
adc
adc
sti
call
iret
sbb
add
call
adc
and
sti
add
pop
ljmp
add
sti
and
and
nop
add
and
pop
or
pop
or
pop
push
call
lock
add
iret
iret
or
pop
notb
jmp
es
or
or
lock
stc
sub
or
push
adc
or
shr
and
push
and
daa
in
adc
push
add
and
jmp
in
lock
and
adc
or
and
and
daa
pop
push
es
jmp
and
push
es
call
call
pop
add
jmp
push
into
lock
add
dec
sbb
and
testb
cld
notb
add
add
ljmp
add
in
lret
rorb
or
sbb
sbb
push
es
cli
sbb
or
ljmp
and
push
in
add
daa
and
into
add
or
add
add
push
leave
leave
and
and
sbb
leave
or
sti
or
and
push
and
push
out
stc
int
testb
and
out
in
into
add
int
es
stc
cli
adc
lock
or
adc
leave
or
cli
and
out
int
ud2
int3
out
or
leave
jmp
adc
push
stc
add
or
cli
and
sbb
push
mull
or
into
sbb
out
add
sbb
add
ljmp
in
daa
add
or
out
stc
out
push
or
call
sbb
lret
out
into
or
push
and
leave
leave
or
add
daa
ljmp
push
push
cmc
iret
ud2
stc
add
and
int3
sbb
call
jmp
pop
lret
add
sbb
sbb
push
sbb
push
ror
daa
ror
jmp
add
jmp
and
sbb
pop
int
iret
adc
adc
es
add
or
aad
cmc
incl
cli
in
into
and
or
daa
daa
sbb
es
rolb
jmp
adc
adc
and
add
push
or
into
add
in
paddsw
add
in
daa
or
sbb
stc
or
sbb
into
pop
es
int3
or
iret
leave
add
cmc
out
add
adc
int3
add
add
adc
adc
stc
cli
push
aad
daa
in
or
leave
shl
pop
sub
in
cli
sbb
cld
daa
push
es
pop
push
sub
sub
int
pop
out
sti
push
sbb
in
sbb
and
testl
lcall
daa
push
and
lret
leave
or
or
or
notb
in
jmp
and
jmp
sbb
decl
add
iret
jmp
and
stc
sbb
or
call
pop
sti
sub
sar
or
stc
ljmp
shlb
or
or
ljmp
and
push
test
into
in
push
and
adc
es
add
add
in
out
and
or
int3
iret
push
add
add
lret
out
daa
push
or
pop
in
sbb
lret
leave
out
cld
sub
leave
push
add
and
sbb
syscall
leave
adc
or
dec
int
adc
lock
and
adc
adc
and
out
pop
push
lock
aad
ljmp
and
adc
sbb
out
sbb
sbb
incl
add
add
push
testl
or
out
lret
stc
lock
or
add
add
add
add
or
and
call
wbinvd
lret
and
cli
pop
and
in
push
sbb
push
leave
push
sbb
in
nopl
push
add
push
push
or
add
int
or
stc
push
or
in
aad
stc
push
push
or
and
jmp
add
adc
or
rcl
into
jmp
and
sbb
push
add
sbb
jmp
sbb
in
and
in
sbb
sbb
adc
sti
ljmp
shlb
adc
add
rolb
out
out
push
push
out
sbb
sbb
and
and
lret
lock
pop
or
or
add
stc
call
leave
out
add
pop
es
add
out
int
call
add
push
adc
es
sbb
daa
sbb
cmc
and
add
or
bswap
push
or
and
or
or
into
incl
rdtscp
and
and
and
stc
sbb
daa
add
add
adc
in
pop
in
in
sbb
push
add
movups
adc
add
pop
sti
or
call
call
sbb
jmp
sbb
sbb
into
stc
or
pop
cmc
int3
and
lret
sbb
and
add
lret
or
or
push
pop
and
in
in
pop
test
and
lret
sbb
out
out
add
adc
div
pop
adc
pop
in
or
jmp
rclb
push
cmc
decl
out
push
or
add
sbb
into
or
int3
add
or
sbb
sbb
push
add
cld
or
in
aad
es
add
pop
pop
iret
push
iret
sub
lock
mov
add
and
out
or
pop
sbb
or
in
and
sbb
add
int3
bswap
lret
push
and
in
and
and
and
cmc
int
adc
sub
and
leave
stc
add
or
daa
sbb
add
or
sub
in
stc
lret
or
pxor
iret
int3
sbb
add
adc
push
or
int
lret
push
into
sbb
jmp
or
lret
push
in
or
cmc
es
into
cmc
jmp
out
jmp
push
add
imul
add
add
in
sub
prefetch
sbb
sar
call
or
add
push
pmaxsw
add
push
sti
ljmp
jmp
lret
sar
add
push
out
and
or
or
sbb
cli
cld
and
cld
in
and
leave
in
jmp
add
sbb
lret
push
ljmp
out
leave
stc
or
stc
pop
or
lret
out
sbb
or
or
int
test
jmp
iret
and
or
add
add
adc
pop
notb
and
ljmp
sti
out
sub
decl
jmp
jmp
call
add
and
adc
int
and
and
or
push
shlb
es
notb
or
psrld
or
and
or
push
sbb
or
jmp
sbb
add
jmp
and
lock
sbb
shlb
daa
sti
out
int
es
daa
add
push
iret
add
and
int3
or
aad
cli
jmp
and
not
ljmp
pop
or
into
add
int
pop
adc
decl
lret
adc
aad
out
out
out
out
and
pop
adc
pop
adc
and
pop
es
out
add
lock
int3
int
add
lret
iret
add
cld
sbb
sub
pop
lock
and
iret
and
iret
cmc
sbb
in
and
pop
sbb
sub
sbb
pop
and
add
cmc
push
int
and
iret
or
and
push
jmp
sbb
or
or
rclb
bswap
cmc
pop
cli
and
jmp
sti
rolb
and
out
and
or
jmp
adc
leave
and
cld
in
aad
or
testb
adc
or
add
prefetchwt1
or
or
add
or
jmp
adc
and
jmp
decl
or
pop
or
or
pop
sti
pop
push
out
sbb
adc
or
aad
add
and
imul
sbb
and
es
in
and
sti
sbb
and
shlb
sar
add
or
iret
in
pop
and
jmp
int3
or
out
testb
into
decl
add
ljmp
or
add
push
lret
pop
and
jmp
shlb
cmc
and
add
lock
adc
adc
and
add
int3
or
and
iret
out
or
and
or
or
ljmp
call
cli
stc
int3
add
aad
in
add
aad
or
sti
int3
lock
int3
sub
jmp
and
add
imul
pop
jmp
call
pop
in
mul
int3
lret
push
and
testl
and
cld
pop
leave
out
lock
push
sbb
or
in
lret
sti
adc
cld
cld
push
out
push
cmc
lret
or
add
iret
sbb
add
in
adc
int
sbb
adc
incl
out
rolb
testl
leave
lret
sub
es
cmc
stc
push
or
int3
and
add
and
int3
stc
cli
and
cmc
add
aad
and
add
sbb
and
add
sbb
add
adc
out
add
or
add
sar
in
add
add
push
pop
cld
jmp
cli
iret
pop
jmp
in
push
pop
or
or
stc
es
leave
int
in
call
aad
adc
cli
pop
and
lret
int3
jmp
leave
and
pop
int3
or
push
iret
or
or
int
jmp
call
pop
out
sbb
and
in
es
lret
ljmp
or
and
add
lret
in
jmp
into
sbb
into
or
and
push
cli
cli
sbb
or
push
sub
pop
sti
and
int3
or
push
daa
imul
or
in
adc
lock
stc
call
and
in
adc
and
in
stc
and
or
adc
pop
in
add
cld
or
into
or
ljmp
push
add
and
sbb
cmc
in
into
out
cld
into
or
stc
lret
wbinvd
push
pop
out
sbb
add
push
cld
lret
and
lcall
jmp
push
or
rcl
ljmp
in
or
add
push
lret
and
and
imul
push
push
and
push
ljmp
es
unpckhps
and
and
add
leave
testl
and
or
shlb
adc
add
iret
testl
sbb
or
lret
add
stc
sub
ljmp
or
pop
cli
cli
cli
add
and
and
daa
and
or
adc
sbb
leave
push
out
and
out
push
div
cld
or
call
daa
adc
ljmp
and
psubq
and
lret
add
pop
out
pop
aad
or
lock
in
or
or
add
cmc
push
in
into
push
jmp
or
adc
sbb
sar
and
in
into
out
and
in
or
rorb
cld
negb
or
in
jmp
sti
and
ljmp
cmc
or
pop
sbb
mov
int3
add
and
or
lret
sbb
cld
cmc
cld
push
iret
push
sbb
lock
iret
cli
or
int
in
test
and
lret
and
add
into
sbb
or
adc
cli
or
sti
or
in
cli
jmp
in
or
push
adc
lret
jmp
or
jmp
adc
leave
push
add
lret
push
add
sti
pop
and
adc
aad
or
int
imul
add
sbb
and
jmp
rorb
int
and
pop
decl
or
or
add
shrb
lret
sti
call
jmp
or
add
in
sbb
lret
adc
in
or
sub
lret
add
or
lret
out
leave
leave
add
sbb
and
iret
call
push
pop
aad
aad
or
add
and
daa
and
add
rcl
lret
ljmp
add
decl
pop
and
cli
int3
jmp
jmp
push
cld
stc
in
sbb
sub
int
testb
sbb
out
and
int
and
add
push
daa
push
or
and
jmp
in
call
or
es
out
sti
or
or
lock
sub
rcrb
lret
pop
and
push
pop
add
lret
push
or
pop
or
cld
es
sub
into
out
or
stc
iret
and
sbb
es
and
or
sti
int3
push
push
or
mov
daa
idiv
in
cld
sti
and
int
ror
call
stc
leave
stc
psubd
sbb
sbb
sbb
and
or
add
aad
testb
daa
pop
sbb
push
or
rolb
pop
or
sbb
out
daa
sbb
out
sbb
in
int3
pop
call
in
rolb
in
sbb
es
not
and
int
in
rcl
add
lret
add
or
add
out
into
call
add
int3
stc
int
lret
add
lock
ljmp
imulb
sbb
int3
in
add
push
aad
adc
pop
lret
rcl
sbb
add
push
add
rolb
lret
daa
pop
call
sbb
ror
jmp
negb
sbb
sbb
out
or
sbb
ljmp
and
stc
lret
sbb
sbb
adc
cmc
es
add
and
push
ljmp
pop
ror
and
push
aad
and
and
and
add
int
out
in
iret
or
imul
aad
in
push
ljmp
or
imul
daa
aad
sbb
add
in
push
out
and
and
testl
in
add
sti
iret
aad
cli
int
leave
in
add
iret
pop
add
lock
adc
sbb
int
daa
push
int3
jmp
add
sbb
idiv
leave
sub
out
int3
rolb
add
cmc
sti
add
and
lret
and
add
or
and
in
lret
push
es
imul
sti
stc
pop
int
sbb
add
cli
and
sbb
in
sti
add
rolb
cld
or
daa
push
or
adc
out
iret
out
call
lret
test
add
iret
push
lock
and
sbb
ror
cld
iret
shr
or
imul
in
in
or
and
sti
call
or
and
or
push
adc
sbb
nop
call
or
daa
sub
push
stc
sti
sbb
sbb
jmp
sbb
add
ror
leave
stc
jmp
in
jmp
in
in
and
aad
add
or
and
prefetch
into
add
sbb
lret
or
cld
cld
stc
iret
call
push
push
add
jmp
pop
ljmp
push
pop
and
adc
int3
in
decl
add
and
add
add
lret
in
add
or
sbb
push
ljmp
push
or
add
stc
in
in
push
adc
or
sub
push
add
push
jmp
bswap
pop
add
iret
cld
es
and
sbb
lret
out
adc
and
stc
iret
or
or
sub
pop
pop
adc
and
or
push
jmp
or
iret
leave
out
jmp
push
sbb
into
push
sub
out
push
adc
in
and
add
rcl
ror
or
sbb
out
pop
pmullw
jmp
int
jmp
rorb
sbb
cli
and
in
or
int
mull
or
and
sbb
add
push
lret
and
add
iret
add
and
daa
sbb
ud0
or
push
imulb
and
cmc
sbb
cmc
push
pop
pop
push
pop
iret
adc
call
jmp
lret
leave
and
rcrb
cld
out
and
and
jmp
add
in
in
or
in
jmp
add
out
or
jmp
or
call
and
pop
sbb
sbb
cli
pop
sbb
lock
and
and
call
cld
and
add
add
sub
push
sbb
cli
or
add
pop
rclb
or
add
and
or
stc
pop
cld
add
rclb
sbb
imul
in
adc
out
aad
and
cmc
out
push
add
sbb
leave
and
stc
or
adc
iret
aad
int
cmc
lret
es
ljmp
pop
daa
es
add
or
sub
out
and
push
add
and
add
push
and
pop
and
sub
out
int3
call
invd
add
or
and
or
push
or
cmc
cmc
int3
or
out
add
sbb
pop
cmc
imul
add
add
or
sbb
or
push
add
sbb
cmc
and
div
sbb
pop
push
add
sub
or
not
iret
or
add
pop
add
in
and
sbb
out
rorb
add
push
aad
cld
adc
aad
leave
call
add
pop
sbb
cmc
daa
into
and
adc
cli
and
sbb
rolb
wbinvd
pop
int
jmp
sbb
into
aad
iret
cmc
stc
into
testb
or
sbb
sbb
or
pop
add
jmp
jmp
in
pop
add
and
out
pop
pop
push
and
add
or
psubw
and
div
or
adc
adc
lret
pop
jmp
or
or
iret
sub
cmc
in
or
push
shrb
ljmp
or
out
aad
cld
shr
cld
or
cld
cli
iret
and
add
in
push
or
out
add
adc
add
pminsw
lret
push
push
add
sti
mull
sbb
add
and
or
jmp
pop
add
add
lock
adc
or
es
ljmp
in
push
jmp
push
sti
sbb
sbb
cld
daa
jmp
or
and
sbb
adc
and
and
cld
sti
sbb
cmc
int3
stc
pop
add
sbb
push
sbb
and
or
out
sbb
into
psubd
pop
lret
lock
adc
sti
push
int3
jmp
cld
and
and
and
adc
into
or
adc
or
adc
leave
and
and
pop
or
sti
lock
and
out
iret
add
lret
sbb
and
adc
rcl
add
stc
call
cli
sub
daa
push
adc
rorb
sti
jmp
ljmp
ljmp
and
in
or
add
or
sti
add
add
and
cli
shr
int
sbb
stc
shrb
cli
or
push
add
or
and
and
call
aad
and
add
and
and
and
and
and
cli
es
push
pop
sar
or
jmp
out
int
add
stc
out
in
in
out
idiv
in
es
and
and
call
and
daa
and
lret
add
pop
add
or
movaps
or
stc
push
sti
and
and
cmc
shlb
decl
pop
sbb
int
not
sti
jmp
lret
or
adc
daa
not
cli
jmp
shlb
sbb
stc
sbb
and
or
add
lock
push
add
or
int3
stc
add
shlb
sbb
and
and
adc
add
push
es
es
cld
or
in
not
sbb
add
ljmp
jmp
and
jmp
cli
pop
cli
sbb
add
in
lock
leave
testl
push
sbb
and
or
push
stc
push
testb
push
or
pop
sub
and
or
stc
and
in
add
push
pop
out
pop
add
jmp
or
sbb
sbb
add
lret
pop
out
add
or
sub
aad
sbb
aad
lret
cli
int3
add
into
rcl
sbb
out
and
adc
out
jmp
add
push
lret
sbb
stc
daa
lret
in
sti
add
es
leave
in
pop
lock
sbb
aad
sti
jmp
lret
push
out
sbb
lcall
adc
pop
in
or
pop
call
or
ror
add
in
jmp
testb
pop
and
sti
sbb
sti
jmp
pop
into
int
push
push
ljmp
lret
out
int3
add
add
in
lret
push
cmc
int
and
sti
into
add
int3
sbb
cmc
sbb
sbb
rolb
add
jmp
or
and
sbb
out
in
mull
lret
jmp
sti
sub
iret
or
sbb
incl
pop
add
int
or
lret
testl
lret
jmp
shlb
and
add
or
or
sti
in
cld
pop
lret
or
daa
in
iret
and
lret
sub
cld
in
iret
add
add
cli
and
sti
jmp
or
and
out
test
or
iret
in
daa
int
or
lret
out
add
add
or
or
out
es
add
test
cmc
and
adc
in
iret
call
and
lret
or
rorb
and
lret
sbb
adc
or
sbb
and
and
pop
add
sbb
nop
lock
add
sub
sbb
and
lock
jmp
adc
out
sti
and
jmp
sbb
sbb
push
out
push
add
cld
pop
or
and
or
daa
pop
out
add
add
ljmp
adc
push
in
pop
sbb
and
in
lret
push
push
leave
or
out
iret
push
adc
push
call
and
jmp
push
add
rclb
push
bswap
nopl
jmp
cli
or
testb
out
or
lret
add
add
cld
and
pop
adc
out
call
out
cli
aad
lret
add
in
aad
in
pop
stc
int3
stc
sti
jmp
into
into
and
cmc
leave
pop
add
pop
into
lock
add
leave
adc
sbb
cld
add
in
cmc
testl
iret
add
push
add
pop
push
stc
sbb
adc
or
out
or
out
push
in
incl
push
es
aad
adc
and
sub
ljmp
and
pop
push
leave
add
or
idiv
leave
sbb
add
push
add
lock
and
or
add
pop
sbb
add
or
add
lret
or
adc
and
lret
add
jmp
add
in
and
push
into
sbb
add
lock
leave
rorb
rcl
int
shr
in
lret
add
push
lret
push
shl
lret
idiv
in
call
in
push
int3
add
or
or
daa
add
adc
push
and
and
in
add
push
and
ljmp
push
add
or
in
lret
pop
leave
in
and
adc
sbb
int3
rorb
int
jmp
add
sti
or
pop
jmp
lret
push
jmp
leave
in
cli
out
sti
cmc
cld
pop
sbb
sub
int3
cld
pop
call
and
paddsw
jmp
sub
dec
and
add
add
call
cmc
sbb
lret
shl
pop
in
rolb
leave
in
cmc
es
leave
push
int3
int
add
push
sbb
int3
in
not
in
and
int
cmc
out
ljmp
and
and
or
and
sub
add
add
int3
lret
or
or
or
or
call
iret
call
stc
stc
sbb
daa
stc
in
sbb
or
add
lret
cmc
in
push
into
lock
pop
add
out
add
stc
ljmp
or
push
rcl
add
adc
daa
cmc
or
stc
or
adc
pop
stc
pop
adc
daa
idiv
jmp
push
decl
pop
or
not
call
and
decl
sbb
sub
pop
cmc
and
adc
adc
and
or
iret
dec
or
jmp
jmp
adc
out
and
push
cmc
sbb
in
daa
adc
lret
add
lcall
cli
add
or
or
push
out
and
add
add
stc
call
ljmp
rcl
sti
or
sbb
cmc
jmp
lar
in
and
pop
sub
or
and
in
daa
div
in
or
div
shlb
push
mov
ljmp
sbb
leave
es
and
aad
leave
and
push
or
aad
add
lock
pop
lock
aad
pop
decl
cli
add
aad
lock
add
es
and
and
call
add
and
daa
or
jmp
in
imul
add
jmp
and
aad
lock
aad
into
push
out
or
and
sub
pminsw
push
pop
and
add
stc
adc
in
shr
or
testl
in
es
sbb
into
lret
cmc
add
paddsb
or
cld
stc
and
push
in
lret
in
add
add
adc
jmp
and
and
cli
pop
lret
ljmp
push
lock
ljmp
add
or
add
int
cld
into
jmp
jmp
sub
add
push
and
stc
es
pop
lret
lret
and
sbb
pop
into
in
es
cli
out
leave
int
push
pop
cld
in
iret
or
leave
paddsw
in
add
add
push
sbb
sbb
rorb
or
or
out
aad
call
pop
or
push
out
ljmp
pop
mov
sbb
add
or
stc
add
sbb
or
and
and
movhps
sbb
sbb
daa
stc
out
and
in
or
rorb
and
sbb
push
push
in
and
cmc
add
sbb
or
push
add
cli
into
cli
into
add
add
cmc
or
in
and
mulb
aad
in
or
leave
adc
sbb
pop
leave
add
add
pop
sub
lret
daa
sti
or
into
ror
sbb
sbb
and
into
sbb
and
add
int
sbb
add
iret
ljmp
or
add
in
in
add
push
add
sub
imulb
pop
sbb
es
add
ljmp
and
or
push
add
adc
lock
sbb
sbb
adc
bswap
in
out
push
sbb
iret
jmp
add
in
and
or
or
in
and
stc
aad
rcrb
and
add
add
add
add
lock
and
or
and
or
add
leave
int
and
and
stc
pop
sbb
and
rolb
pop
daa
iret
sbb
in
movaps
sbb
and
push
in
pop
in
stc
adc
sbb
sbb
iret
adc
pop
pop
negb
in
or
ljmp
or
add
call
es
adc
adc
in
and
jmp
pmaddwd
call
iret
leave
out
cld
add
and
pop
add
pop
and
add
in
or
push
pop
es
call
cld
out
jmp
and
lret
pop
into
out
and
add
and
sti
add
or
adc
iret
into
testb
or
in
add
int3
sbb
push
int3
sbb
and
cli
out
add
call
and
and
adc
pop
and
push
rorb
add
or
lret
jmp
ror
or
lcall
push
out
aad
out
out
push
cld
add
push
cld
adc
add
shrb
es
sbb
lret
push
and
and
testb
lock
iret
pop
push
adc
int
sub
add
stc
or
or
or
adc
jmp
or
or
shl
sbb
jmp
ljmp
div
daa
push
push
and
into
iret
cld
and
add
add
dec
push
out
or
or
and
sbb
cmc
or
pop
lret
and
in
rcrb
sbb
stc
pop
jmp
call
sbb
add
stc
and
sbb
or
in
in
or
add
add
adc
in
push
jmp
prefetch
daa
iret
or
and
and
ror
in
jmp
lret
push
or
ljmp
into
call
pop
add
sbb
into
and
into
iret
out
or
or
and
add
sbb
jmp
or
cli
negb
and
leave
cld
and
pop
add
and
lock
and
jmp
in
sub
sbb
and
and
iret
add
add
add
cli
incl
pop
call
sbb
sti
or
lret
pop
cld
into
sbb
in
lret
iret
negl
or
adc
adc
push
sbb
or
add
sbb
push
add
or
pop
mov
cli
in
cld
sbb
es
out
cld
and
add
jmp
and
adc
shl
stc
test
shr
jmp
add
add
or
or
add
sub
or
add
pxor
add
add
or
in
or
jmp
adc
iret
aad
adc
in
pop
and
ror
stc
cmc
notl
cld
out
and
jmp
sbb
and
cld
sbb
aad
testb
and
lock
or
pop
sar
lret
push
int3
int3
add
pop
or
es
es
out
shr
ljmp
sbb
call
ljmp
add
sbb
add
in
pop
add
push
out
and
in
in
pop
int3
stc
or
int
int3
and
es
adc
push
add
push
add
int3
add
int
and
shr
push
push
cld
int
out
in
pop
sti
jmp
or
aad
adc
into
pop
idiv
add
push
lock
pop
or
jmp
add
cmc
add
add
daa
in
push
push
or
push
call
out
stc
lret
and
cli
rolb
push
not
pop
aad
add
cld
and
add
int3
adc
or
sbb
add
pop
cld
into
or
add
or
decl
or
add
aad
iret
and
add
add
and
in
shl
add
pop
pop
and
into
and
lret
daa
and
and
shlb
or
or
or
or
int3
out
sbb
pop
lock
lret
call
cld
daa
jmp
sbb
cmc
cli
sti
pop
cld
adc
push
jmp
iret
or
daa
adc
leave
pop
add
or
sbb
and
out
leave
push
in
add
add
push
leave
rcrb
sbb
call
cli
and
call
in
out
or
pop
pop
notl
and
or
add
adc
int
sub
lret
pop
and
psubsw
jmp
and
rcrb
cli
testl
or
adc
cmc
sbb
pop
add
add
add
rorb
sub
and
and
and
add
push
stc
and
daa
or
or
rcrb
stc
aad
call
out
out
push
in
push
iret
add
dec
or
adc
not
push
sbb
add
sbb
pop
lret
iret
in
and
and
cmc
and
call
add
lret
cld
add
daa
jmp
int
add
iret
paddsw
in
out
push
sbb
adc
in
and
rcrb
sub
rcl
add
add
lar
adc
out
and
out
in
add
and
sbb
pop
and
sbb
int3
and
paddsw
sti
sbb
lret
in
lock
adc
push
add
or
sub
adc
in
add
add
sub
lret
or
in
call
pop
int3
sti
jmp
cmc
push
and
into
push
push
or
pop
int3
pop
call
and
push
sbb
pop
iret
bswap
lock
int
and
add
ljmp
call
sub
add
pop
sbb
stc
adc
out
iret
cmc
or
test
call
out
pop
or
stc
imul
lret
sbb
push
jmp
sbb
add
jmp
lldt
or
add
adc
jmp
in
cmc
or
and
add
stc
out
and
call
sbb
int
sti
and
sti
leave
rorb
cli
push
add
lock
add
ljmp
cld
lock
ljmp
add
and
ljmp
cli
add
stc
call
and
jmp
lret
jmp
in
or
bswap
or
add
daa
push
in
push
cli
sbb
stc
pop
call
add
or
lret
lcall
leave
push
and
pop
not
lock
int
leave
sti
call
into
pop
and
pop
sbb
sbb
int
or
and
lret
add
stc
sbb
testl
or
add
and
and
sbb
into
push
out
in
or
aad
lock
adc
add
adc
jmp
push
sti
push
int3
in
or
adc
out
or
aad
daa
stc
pop
iret
stc
pop
and
sbb
or
testl
or
add
add
and
push
or
push
or
daa
in
sbb
push
in
sbb
and
sbb
cmc
add
stc
call
add
imul
push
incl
or
shl
ljmp
sti
decl
pop
push
push
jmp
or
ror
pop
testb
and
daa
into
sbb
pop
sbb
and
leave
iret
jmp
psubsb
jmp
push
and
rclb
push
lret
jmp
sti
add
jmp
sbb
push
and
add
push
out
sbb
ljmp
daa
cld
stc
jmp
sbb
daa
sbb
leave
leave
push
adc
cmc
pop
in
and
and
lret
testb
jmp
div
add
and
or
push
sbb
jmp
int
sbb
or
testl
or
int3
add
and
nop
push
mov
roll
mov
cmp
cwtl
loopne
in
pop
adc
test
ficoml
push
adc
sub
push
mov
mov
mov
les
pusha
mov
mov
aad
cmp
cltd
sbb
std
aam
jns
inc
jne
xor
fsubp
sub
mov
or
popa
test
mov
rorb
jmp
inc
mov
in
pop
add
mov
cmc
dec
bnd
rorl
shlb
add
mov
push
xor
xor
out
stos
aad
movl
icebp
repnz
mov
jb
shrl
adc
xchg
outsl
test
sahf
loope
jne
inc
repz
push
sbbb
cmp
cmp
repz
imul
cli
pop
lret
inc
and
sti
xchg
xor
jge
loope
std
cmpsb
icebp
int3
negb
loope
ja
shl
cmpsl
mov
notb
add
lcall
xchg
ret
jne
xchg
loope
add
icebp
idiv
or
mov
rorl
mov
lcall
dec
mov
les
inc
pop
dec
xchg
xor
adcb
addb
inc
and
lcall
cmp
in
xor
cld
subl
push
sahf
icebp
add
xor
jbe
fucomip
mov
out
aas
test
inc
xchg
mov
clc
inc
test
adc
mov
movntps
add
mov
pop
xor
or
xor
adc
mov
enter
ficoms
jae
add
mov
xchg
insb
cmp
xchg
xor
mov
mov
add
repz
push
mov
and
mov
ret
sub
cmpb
mov
pop
in
mov
ret
icebp
push
arpl
xchg
xchg
xchg
out
or
push
inc
adc
dec
xor
xlat
fldl
adc
jb
and
fnsave
inc
cld
lcall
push
pop
imul
fwait
and
ja
icebp
mov
sti
xchg
push
inc
dec
mov
dec
jp
push
push
jbe
dec
sarl
or
or
cli
and
loop
mov
or
dec
divl
xchg
pop
cwtl
jl
pop
subl
in
dec
xor
stos
xchg
inc
out
cli
xchg
int3
test
loopne
out
leave
xchg
data16
xchg
in
sbb
in
jo
adc
ffree
jo
je
rcll
loope
sbb
xorb
shlb
pop
mov
push
inc
sub
fidivrl
and
inc
xchg
mov
or
sub
sarl
xor
xchg
mov
inc
jg
movsb
pusha
inc
das
and
sarl
test
inc
sub
imul
pop
jge
jb
mov
or
mov
and
push
dec
xchg
mov
cltd
loope
sbb
xchg
mov
xchg
xchg
ror
mov
push
mov
loope
in
pop
mov
adc
cmc
nop
mov
mov
xchg
cmpsb
or
cmp
sbb
cmp
pop
fucomp
jb
clc
add
outsl
insl
sahf
cs
cmp
xchg
shlb
ja
nop
gs
pop
and
cltd
loope
arpl
adc
ret
leave
in
andb
hlt
cwtl
fstpt
xor
cmp
inc
mov
jnp
in
ds
lea
or
outsb
sbb
adc
and
ljmp
mov
call
dec
mov
mov
jo
sarb
sbb
xchg
sbb
mov
mov
xorl
jg
loope
imul
dec
add
cmp
stos
xchg
pusha
cli
fcoml
mov
inc
pop
pop
rcl
sbbb
xchg
pusha
test
and
pushf
dec
sub
mov
push
pop
aad
mov
inc
and
fstl
and
jns
xchg
mov
xchg
jnp
es
rorl
aad
sub
jo
adc
push
lahf
sub
dec
or
add
outsb
cmpb
push
rorl
push
inc
xchg
mov
call
mov
inc
and
cwtl
aas
jbe
test
ljmp
mov
lods
imul
jno
fimull
scas
dec
xchg
mov
add
adcb
ja
cwtl
iret
les
notb
cmc
sub
enter
xchg
push
repnz
rcrb
nop
mov
lahf
push
lahf
repnz
mov
call
dec
out
and
aam
cmp
pop
sbb
inc
pop
mov
iret
jnp
add
test
cmp
sbb
loopne
xchg
jo
xor
xor
ss
xchg
inc
fwait
sbb
int
pop
and
fadd
add
inc
sbb
pop
adcb
stos
add
jns
test
pop
pop
mov
sbbl
or
cwtl
jo
and
inc
xchg
xchg
sub
inc
xor
repnz
push
ss
fcompl
adc
and
cld
out
xor
jo
mov
test
sub
insb
loopne
inc
cltd
icebp
push
insb
xchg
loopne
out
and
sub
xchg
sub
jl
sub
ret
lds
jns
jne
loopne
out
push
cwtl
and
jge
mov
inc
fstpl
and
inc
xchg
pop
jb
xlat
xor
xchg
add
jecxz
inc
pusha
mov
xchg
pop
lret
out
cwtl
ljmp
xor
or
ds
xchg
lods
cmp
sahf
inc
rolb
sbb
add
hlt
and
mov
ja
stos
sti
push
loope
push
mov
push
nop
lret
insl
je
cwtl
xchg
addl
and
sbb
in
test
mov
and
rclb
imul
cmpsb
rcrb
pop
xchg
xor
xor
fcoml
jb
xor
mov
loop
pusha
ja
or
lea
sarb
ss
in
xor
test
lahf
repz
inc
or
int
or
orl
mov
fsubl
push
mov
jne
in
dec
lcall
mov
xchg
outsl
lods
jl
push
jle
lods
mov
test
mov
xor
jb
enter
xchg
adc
sbb
dec
cltd
xchg
xchg
cwtl
jne
inc
lret
fnstsw
jmp
call
in
xchg
xchg
arpl
inc
loopne
xchg
push
lods
add
and
mov
fld
dec
mov
aad
shll
sbb
hlt
cld
test
call
imul
popa
cmpsb
push
xor
clc
pusha
inc
out
out
jnp
loopne
pop
test
xchg
mov
into
sbb
lahf
ret
into
inc
and
jle
lods
mov
fwait
xor
rorb
cwtl
add
sarb
ss
pop
cmp
xchg
aam
mov
cmc
aas
cmp
xchg
xor
es
insb
cli
xchg
pusha
int
mov
mov
xchg
aam
ret
xlat
nop
jl
or
inc
mov
cmp
lods
jecxz
enter
xor
xor
mov
mov
mov
inc
xchg
sub
xchg
push
mov
sbb
xchg
pushf
dec
xor
mov
dec
pop
xor
mov
in
lahf
jnp
loope
adc
loope
xchg
sub
les
xchg
mov
xchg
pop
loope
aas
sahf
pusha
dec
inc
call
xchg
loopne
fmull
xchg
push
and
aas
xchg
loopne
mov
rclb
cwtl
add
inc
cmpsl
mov
jl
and
mov
aam
ret
and
inc
xchg
xchg
jl
and
push
imul
outsl
hlt
or
xor
xchg
mov
jle
sub
addr16
decb
dec
xchg
imul
push
ss
ja
sub
ret
lods
fcomps
pushf
into
adc
sub
outsb
xor
out
xor
jle
sub
adc
or
out
cmp
jge
shll
test
aam
les
push
ret
mov
adc
add
lahf
sahf
fwait
dec
lds
push
loop
xchg
loope
or
dec
scas
adc
ljmp
cmp
imul
pop
inc
aad
jns
cmp
mov
imul
fldt
sti
and
in
pushf
in
adc
enter
mov
mov
and
xor
loope
xchg
xchg
shl
pop
mov
or
xchg
and
mov
into
xchg
pushf
xor
inc
mov
ds
add
rcrl
lret
iret
pop
rcl
mov
jnp
cli
mov
xchg
loopne
fistl
lods
xor
fnstsw
aaa
fists
cmpsb
repnz
mov
xchg
push
repnz
cld
xchg
pop
sub
cs
je
xchg
mov
mov
push
jge
aam
rcrb
mov
sub
mov
cmp
jb
ja
mov
rcrl
mov
jbe
xchg
push
xor
lcall
jp
jp
pop
xchg
test
sub
out
xchg
cld
jle
lods
or
rclb
fidivs
xchg
loopne
std
xchg
mov
jnp
jno
xchg
icebp
mov
shrb
xchg
cmpb
icebp
push
dec
add
ss
sbb
adcl
adc
je
mov
sahf
jbe
mov
outsb
repnz
jnp
cli
mov
std
jg
mov
test
ret
repnz
imul
notl
inc
or
xor
pusha
leave
aaa
sbbb
insl
fisubs
js
ret
xchg
mov
xor
mov
adc
adc
xchg
mov
scas
dec
xchg
fbld
jecxz
push
aaa
mov
sub
imul
imul
sbb
stos
cwtl
testb
cmpb
jo
mov
mov
xchg
addb
cmpsb
inc
cmp
stos
neg
test
xchg
loopne
mov
add
mov
mov
cmp
sbb
ror
aam
mov
add
imull
insb
mov
fcmovnbe
push
fwait
pop
sub
nop
ficoml
test
fcoml
aad
add
cmpb
jecxz
test
dec
fadd
jo
fwait
cmpsb
xchg
sub
xor
xchg
mov
jbe
and
int3
xchg
mov
or
mov
mov
and
clc
mov
test
or
lcall
mov
push
int
test
cmp
xchg
fsubl
push
pusha
fildl
push
lret
nop
xor
xor
jg
stc
jle
loopne
add
inc
jbe
lods
xor
scas
addr16
insb
hlt
not
xchg
inc
or
jno
mov
cli
das
inc
xor
cmp
jle
xchg
loop
mov
cld
and
xor
jne,pt
xorl
lds
outsl
enter
repnz
inc
lcall
dec
and
stc
dec
rcl
loop
movsb
jo
sub
pop
adc
movsl
mov
dec
add
xlat
insb
mov
in
mov
cwtl
inc
mov
xlat
mov
add
and
sahf
mov
adcl
and
int3
call
loope
loope
cmp
movsl
mov
lcall
mov
xchg
insb
mov
xchg
mov
lock
fucomi
int3
and
and
mov
xor
mov
in
loope
imul
and
fidivrl
push
scas
aad
jle
cmpb
faddl
lahf
out
mov
in
inc
xchg
xor
jl
push
or
mov
push
nop
xchg
int3
sbb
pushf
rcrl
leave
aam
jo
aaa
nop
pushf
les
test
add
xchg
ret
xchg
push
or
mov
dec
leave
inc
jp
xor
inc
int
xorb
mov
lods
lods
add
pushf
cmp
cmp
xchg
mov
jg
aaa
call
and
pop
mov
xchg
jecxz
loop
xchg
pop
repz
inc
fimull
mov
je
pop
ret
adcb
jo
mov
or
test
pop
xchg
int3
loopne
sbb
loope
repz
jo
push
mov
test
sti
push
les
jg
lods
outsl
outsl
pop
icebp
insb
jne
sbb
pop
pop
ds
pmulhw
int3
sbb
inc
add
xor
adc
es
xchg
mov
cmpsb
lahf
mov
aas
adc
rcrb
jge
jle
les
aad
in
lea
dec
ljmp
icebp
inc
dec
and
mov
in
mov
sbb
movsl
xor
adcb
xchg
flds
and
aam
sbb
cmpsl
pop
jp
xchg
pushf
ret
icebp
jge
sub
dec
xchg
push
cs
pop
sbb
mov
sti
mov
mov
xor
int3
es
jns
xchg
or
xor
xor
idivb
subb
cmp
movsl
inc
lret
mov
imulb
add
mov
mov
pop
mov
xchg
rolb
push
pusha
ret
ret
or
lret
bound
bound
adc
int
movsl
xlat
push
pop
fdivrs
push
fsub
rorb
data16
push
fstl
cltd
cmp
aad
jl
pushf
loopne
sahf
ds
xor
jle
and
loope
xchg
push
rcll
scas
xchg
mov
jge
outsb
mov
jl
shl
xchg
lods
in
aam
push
push
insl
into
pop
xchg
mov
pop
and
insb
lock
leave
jl
pop
push
repnz
add
mov
or
and
or
adc
in
mov
or
scas
pop
inc
pop
mov
aam
cmp
xchg
std
lcall
pop
cwtl
xor
jl
cmpsb
mov
cld
jmp
cmp
aad
jne
inc
inc
jne
pop
lods
push
xchg
aad
mov
xchg
loope
inc
xchg
rorl
add
sbb
inc
ds
add
mov
xor
or
loope
dec
xchg
add
adcl
insb
cmp
loope
mov
xchg
icebp
les
xchg
loope
inc
xchg
inc
in
xchg
xchg
xor
push
cwtl
icebp
imul
popf
mov
xor
loope
mov
add
mov
icebp
xor
sahf
xor
cwtl
inc
or
popf
icebp
rcrl
xor
xchg
loope
pop
xchg
shr
xchg
mov
pop
push
add
cltd
loope
mov
xchg
xor
mov
xchg
icebp
add
lcall
xlat
sahf
loope
xchg
cwtl
icebp
push
push
lcall
loop
inc
dec
bound
icebp
fsubp
lcall
xlat
mov
gs
mov
xchg
loope
xchg
add
xchg
icebp
aam
mov
imul
loope
lea
icebp
int3
cld
xchg
loope
sti
xchg
rcll
in
jge
icebp
inc
std
sahf
add
out
loope
xchg
xor
cwtl
xor
hlt
cmpsl
loope
notb
icebp
inc
jne
mov
repz
loope
jae
icebp
mov
lcall
or
aas
bound
inc
cltd
mov
je
xor
inc
ficoms
push
aas
or
add
inc
push
enter
orl
lock
sub
in
sbb
push
xor
mov
js
gs
loop
mov
jne
out
dec
and
out
pushf
inc
shr
in
scas
add
and
lahf
pop
xchg
test
push
xor
xchg
sub
and
add
xchg
repnz
xor
jmp
idivl
mov
roll
lret
iret
dec
test
or
xor
mov
cmp
aad
xor
inc
icebp
xchg
jmp
mov
push
adc
std
sbb
ja
inc
inc
fbstp
ret
jb
dec
popa
leave
mov
add
cmp
pusha
adc
pop
lahf
sbb
insl
fnstcw
in
cmp
shlb
cmp
icebp
adc
lcall
push
sahf
mov
xchg
xchg
mov
aad
loope
xchg
xchg
add
push
test
in
loop
xor
jecxz
inc
mull
loope
bound
icebp
in
loope
gs
shrl
aam
mov
xor
cmpsb
add
xchg
mov
add
in
mov
cwtl
icebp
in
cld
lcall
jge
loope
jge
icebp
push
out
icebp
hlt
notl
inc
in
jbe
ss
negb
test
push
jb
and
inc
out
dec
cmpsb
mov
add
je
icebp
dec
cmc
xchg
xor
cwtl
inc
aam
lcall
xchg
loope
jl
rorl
icebp
jmp
jnp
loope
jp
js
pop
mull
flds
xchg
add
jbe
icebp
push
negl
roll
add
icebp
xor
xchg
icebp
insb
adcl
dec
add
icebp
dec
sbbb
in
add
xor
cli
cmp
iret
lods
xchg
fbstp
jo
dec
stos
push
pop
inc
cli
xor
scas
out
or
ja
jbe
jae
rol
in
test
sahf
mov
xor
test
movsl
sbb
pop
sbb
cmpsl
cltd
call
pop
push
dec
or
daa
rol
push
out
pop
pop
xchg
adc
xor
adcl
add
jmp
dec
xor
and
mov
addb
cmp
sbb
addr16
pop
mov
add
jns
add
cmc
adc
fimuls
out
and
les
or
bound
xchg
enter
cli
rolb
add
addb
pop
leave
add
jmp
add
enter
mov
incl
faddl
add
addb
in
add
decl
addl
movsb
int3
add
call
test
add
call
loop
add
add
cmp
add
jmp
test
add
add
add
rolb
add
jmp
jmp
add
mov
call
xchg
add
into
add
call
out
add
xor
add
add
add
adc
add
and
add
xor
add
rolb
add
add
add
insb
rolb
add
add
xchg
add
xchg
rolb
add
rolb
add
rolb
add
rolb
add
rolb
add
rolb
add
add
adc
add
push
roll
add
roll
add
add
dec
roll
add
add
outsb
roll
add
roll
add
roll
add
roll
add
roll
add
roll
add
roll
add
rolb
add
rolb
add
rolb
add
rolb
add
add
push
rolb
add
add
je
add
adc
add
rolb
add
rolb
add
rolb
add
rolb
add
rolb
add
add
add
roll
add
roll
add
roll
add
roll
add
roll
add
add
dec
roll
add
add
pop
roll
add
add
je
add
jl
add
test
add
mov
add
mov
roll
add
roll
add
roll
add
roll
add
roll
add
roll
add
roll
add
add
push
aam
add
aam
add
add
cs
add
aam
add
add
add
pop
aam
add
add
add
jle
add
xchg
add
nop
aam
add
add
mov
add
mov
aam
add
aam
add
aam
add
aam
add
aam
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
add
add
insb
aad
add
add
xchg
add
cwtl
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
aad
add
add
push
add
and
add
xor
add
cmp
add
dec
add
push
add
pop
add
add
outsb
add
jl
add
test
add
mov
add
cwtl
add
mov
add
mov
add
into
add
fcmovbe
add
add
add
lock
add
add
add
adc
add
and
add
xor
add
dec
xlat
add
pop
xlat
add
data16
add
je
add
adc
add
add
mov
xlat
add
in
add
lock
add
add
add
adc
add
cmp
add
dec
fadds
add
add
jo
add
jl
add
mov
add
pushf
fadds
add
fadds
add
fadds
add
fadds
add
fadds
add
flds
add
add
xor
add
flds
add
add
pop
flds
add
add
sbb
add
add
mov
flds
add
flds
add
flds
add
fiaddl
add
add
and
add
xor
add
cmp
add
push
fiaddl
add
add
jb
add
test
add
xchg
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fiaddl
add
fildl
add
fildl
add
fildl
add
add
push
fildl
add
add
jl
add
mov
add
sahf
fildl
add
add
fcomp
add
hlt
fildl
add
add
add
add
faddl
add
add
pusha
faddl
add
add
test
add
lcall
add
faddl
add
faddl
add
fldl
add
fldl
add
add
pop
fldl
add
add
fldl
add
fldl
add
fldl
add
fldl
add
fiadds
add
fiadds
add
fiadds
add
add
js
add
movsb
fiadds
add
fiadds
add
fiadds
add
fiadds
add
filds
add
filds
add
filds
add
add
push
filds
add
add
jp
add
cwtl
filds
add
add
out
filds
add
loopne
add
loopne
add
add
pop
loopne
add
add
add
add
xchg
loopne
add
add
aam
add
add
add
hlt
loopne
add
loopne
add
loope
add
loope
add
add
sub
add
cmp
add
dec
loope
add
add
insb
loope
add
add
mov
add
sahf
loope
add
add
shl
add
fsubp
add
ljmp
add
add
sbb
add
sub
add
ss
add
add
push
loop
add
add
add
jl
add
mov
add
cmpsb
loop
add
loop
add
add
add
loop
add
loop
add
jecxz
add
add
jecxz,pn
add
add
pop
jecxz
add
add
mov
add
add
add
scas
jecxz
add
jecxz
add
jecxz
add
jecxz
add
in
add
in
add
add
inc
in
add
add
in
add
add
and
add
add
stos
in
add
in
add
in
add
in
add
in
add
add
xor
add
cmp
add
push
in
add
add
add
sahf
in
add
in
add
in
add
out
add
out
add
out
add
add
add
je
add
and
add
out
add
out
add
out
add
out
add
out
add
add
xor
add
inc
out
add
add
add
lcall
add
add
add
out
add
out
add
call
add
ds
add
call
add
xchg
add
cwtl
call
add
mov
call
add
ljmp
add
jmp
add
ds
add
jmp
add
mov
add
cwtl
jmp
add
ret
add
jmp
add
hlt
jmp
add
and
add
ss
pop
ljmp
test
add
add
add
mov
ljmp
aam
add
loop
add
hlt
ljmp
adc
add
sub
add
cmp
add
dec
jmp
add
add
push
add
jl
add
mov
add
test
add
mov
jmp
add
jmp
add
jmp
add
in
add
adc
add
and
add
xor
add
dec
in
add
push
in
add
fs
add
jo
add
jl
add
mov
add
lcall
add
in
add
in
add
call
in
add
push
in
add
sbb
add
xor
add
dec
in
add
push
in
add
mov
add
pushf
in
add
stos
in
add
mov
in
add
add
call
in
add
or
add
sbb
add
sub
add
cmp
add
inc
out
add
push
out
add
jo
add
xchg
add
cwtl
out
add
cmpsb
out
add
mov
add
out
add
aam
add
loop
add
lock
add
add
add
adc
add
sub
add
cmp
add
inc
out
add
dec
out
add
pop
out
add
push
add
js
add
nop
out
add
sahf
out
add
mov
add
out
add
add
add
outsb
add
jb
je
dec
inc
add
bound
push
popa
je
inc
fs
popa
arpl
insb
popa
jae
push
add
push
popa
je
inc
jo
outsb
fs
add
push
je
inc
insl
jo
push
add
fadds
push
popa
je
push
gs
outsl
jbe
inc
imul
add
push
je
inc
insl
jo
dec
push
add
push
je
inc
insl
jo
dec
inc
add
push
inc
push
add
inc
add
jb
push
add
push
je
push
outsl
dec
outsb
je
add
inc
imul
outsb
jae
outsl
outsb
inc
add
mov
push
popa
je
dec
jae
outsl
outsl
je
add
push
je
push
je
push
add
je
inc
insl
jo
push
add
sbb
gs
gs
outsl
outsl
insb
push
push
push
popa
insb
jne
push
add
add
jb
popa
je
jne
push
add
add
inc
gs
gs
push
popa
insb
jne
push
add
xchg
add
jae
jb
outsb
je
push
add
outsl
add
jb
je
dec
push
add
in
push
popa
je
push
je
imul
je
add
xor
push
dec
push
gs
popa
insb
jne
push
add
push
je
inc
jo
push
add
push
je
push
gs
outsl
inc
jne
push
add
xchg
add
je
inc
imul
dec
popa
insl
gs
add
inc
jae
outsl
arpl
gs
push
je
imul
push
popa
je
push
gs
outsl
jbe
inc
imul
add
add
inc
gs
popa
insb
jne
push
add
add
je
push
gs
outsl
jbe
inc
js
outsb
jae
outsl
outsb
push
add
inc
add
jb
push
add
insb
inc
popa
outsb
outsl
outsb
imul
push
add
inc
add
jb
popa
je
add
add
je
push
je
imul
je
add
cli
add
inc
gs
gs
dec
gs
add
loope
push
popa
je
push
imul
outsl
outsl
je
add
outsb
gs
popa
jo
push
add
test
push
jb
arpl
jns
add
xchg
add
insb
dec
jae
add
xchg
add
jae
jb
outsb
je
inc
add
arpl
push
je
push
inc
push
xchg
add
je
inc
imul
jae
add
push
je
push
jb
insl
push
add
push
add
jb
jne
push
add
push
insb
popa
je
jbe
push
add
add
je
push
gs
outsl
jbe
inc
insb
popa
outsb
imul
dec
add
jb
jo
dec
push
add
ja
push
je
push
outsl
dec
outsb
je
js
add
push
je
inc
insl
jo
add
add
je
push
gs
outsl
jbe
inc
popa
arpl
insb
popa
jae
push
add
insb
add
je
inc
jo
outsb
fs
add
insb
ja
jo
cs
insb
add
pop
ja
outsl
imul
imul
fs
add
add
jo
pop
insw
outsl
fs
arpl
pop
gs
je
push
add
jae
outsb
add
add
jne
arpl
insb
add
ja
jae
arpl
add
pop
imul
arpl
outsl
insb
add
roll
jae
jae
popa
arpl
add
insb
add
pushf
add
insb
outsl
outsl
jb
or
pop
jb
je
add
pop
gs
gs
pop
push
gs
add
filds
arpl
add
insb
add
add
jb
outsb
je
add
dec
add
ja
imul
arpl
bound
add
add
outsl
outsb
je
outsl
insb
data16
add
arpl
pop
jne
ja
outsb
xor
add
add
ja
jb
xor
popa
outsb
data16
push
add
jo
pop
imul
insl
gs
arpl
add
call
insl
fs
outsb
add
insb
outsl
arpl
add
add
imul
add
gs
insl
outsl
jbe
add
ja
jae
popa
je
add
add
outsl
arpl
gs
add
jae
jo
imul
add
bound
outsl
ja
jae
add
pop
jb
je
add
insb
outsb
jne
add
add
jae
imul
add
dec
jae
jb
add
add
ja
jae
jo
add
add
je
popa
add
popa
jb
push
insb
jae
imul
add
add
jo
pop
outsl
jae
gs
add
ja
jae
outsl
insl
bound
add
add
je
jb
imul
pop
inc
pop
pop
pop
add
add
arpl
imul
pop
jae
popa
je
sub
ja
outsl
jo
outsb
add
je
add
pop
pop
inc
js
inc
jb
insl
gs
popa
outsb
fs
gs
inc
add
outsl
arpl
add
pop
popa
insl
jae
pop
gs
je
add
insl
insl
imul
js
push
js
gs
imul
data16
add
xchg
add
addr16
popa
imul
loop
pop
pop
ja
gs
popa
imul
add
ja
jae
outsb
add
adc
aas
aas
xor
gs
imul
inc
inc
inc
pop
pop
add
and
arpl
add
add
jae
imul
pop
ja
outsl
insb
add
ja
jae
arpl
add
arpl
arpl
add
pop
inc
dec
popa
arpl
add
pop
inc
dec
jo
ja
add
pop
jae
jb
jne
add
insb
insb
outsl
outsb
gs
je
lock
arpl
arpl
add
xchg
pop
pop
bound
imul
fs
jo
add
pop
add
ja
jo
imul
add
jae
jb
add
imul
add
jo
add
xor
pop
jae
jo
imul
imul
jns
add
dec
add
je
popa
add
add
arpl
ja
add
je
popa
add
arpl
pop
jae
jb
ja
add
add
aas
xor
inc
push
inc
pop
dec
inc
pop
add
in
add
outsb
gs
je
sahf
add
outsl
jo
outsb
add
ja
jae
insl
jo
add
add
jo
outsl
imul
ja
jae
je
add
insl
jae
arpl
cs
insb
add
inc
add
outsb
fs
gs
inc
imul
gs
imul
je
add
inc
outsl
outsb
jae
insb
gs
outsl
fs
aad
inc
gs
gs
inc
imul
gs
imul
imul
jns
add
aam
inc
gs
jb
jbe
push
jns
gs
add
dec
jo
outsb
inc
jbe
outsb
je
add
mov
inc
jb
popa
je
inc
imul
insb
outsl
bound
inc
jb
add
jnp
inc
gs
jns
je
insl
push
imul
insb
gs
imul
gs
gs
imul
inc
gs
outsl
insl
jo
je
jb
popa
insl
gs
add
movb
gs
jne
jb
outsb
je
push
add
arpl
inc
outsl
insl
jo
jb
push
je
imul
add
popa
jo
jb
add
add
popa
jo
je
imul
add
imul
jae
jne
arpl
add
add
imul
inc
jb
je
arpl
push
arpl
outsb
inc
outsb
fs
jo
outsb
inc
outsl
jne
je
sbb
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
dec
add
insb
outsb
inc
add
cli
add
popa
imul
insb
gs
bound
arpl
add
je
push
dec
outsb
outsw
add
add
inc
popa
fs
gs
fs
je
add
adc
push
gs
insl
gs
push
add
cmp
inc
gs
inc
dec
inc
push
add
std
add
je
jne
insb
push
popa
je
dec
popa
insl
gs
add
pop
add
gs
jbe
outsb
je
add
add
imul
inc
jb
je
arpl
push
arpl
outsb
add
insb
jae
jb
insl
jo
inc
add
push
outsb
push
gs
js
gs
imul
gs
out
add
je
jb
outsl
arpl
fs
js
push
add
insb
jae
jb
jo
push
add
leave
add
insb
jae
gs
popa
insb
jne
add
popa
je
push
jb
arpl
jae
add
add
popa
jo
imul
push
insb
jae
gs
popa
insb
jne
add
add
je
imul
bound
gs
add
ret
gs
jne
jb
outsb
je
jb
arpl
jae
data16
je
je
dec
popa
outsb
fs
add
movl
jne
jb
outsb
je
push
dec
add
mov
inc
gs
outsl
insl
insl
popa
outsb
fs
imul
inc
gs
imul
bound
gs
add
pop
add
jo
imul
insb
add
add
imul
jae
inc
add
outsb
arpl
dec
outsl
add
mov
inc
jb
popa
je
inc
imul
outsb
addr16
add
repnz
je
imul
mov
push
insb
gs
arpl
inc
jb
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
gs
popa
jae
inc
jb
outsl
jb
add
add
imul
insb
insb
outsl
arpl
add
add
outsb
insl
popa
jo
imul
insb
add
inc
imul
jne
arpl
add
jb
gs
imul
ret
add
je
jne
jb
outsb
je
jb
arpl
jae
add
jb
push
gs
outsl
jb
popa
outsb
arpl
outsl
jne
je
jb
es
gs
imul
outsb
dec
jne
gs
add
dec
add
insb
outsb
push
add
xchg
inc
jb
popa
je
inc
jbe
outsb
je
add
add
inc
gs
popa
jae
inc
jb
outsl
jb
add
add
insb
gs
imul
arpl
inc
imul
add
dec
outsl
arpl
push
imul
inc
gs
outsl
arpl
gs
outsb
outsw
inc
add
loope
inc
gs
js
je
outsl
fs
jb
arpl
jae
add
gs
jb
arpl
jae
gs
jo
add
add
inc
inc
inc
push
dec
gs
fs
jns
add
pop
add
gs
jb
outsl
jb
outsl
fs
in
add
imul
jb
add
inc
jb
popa
je
inc
imul
jns
add
icebp
add
je
jb
outsl
arpl
fs
outsb
arpl
insl
outsb
je
add
add
jo
outsb
fs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
je
outsl
arpl
gs
outsb
outsw
push
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
jne
push
jo
inc
imul
gs
jne
push
push
add
add
jb
je
bound
jb
popa
jb
imul
je
outsl
outsb
add
add
jb
insb
insb
inc
popa
outsb
push
outsb
insb
outsl
popa
fs
outsl
ja
add
add
arpl
jb
outsb
addr16
jb
gs
add
push
add
jb
insb
gs
insb
insb
outsl
arpl
add
test
push
jo
inc
jo
gs
insb
jbe
inc
imul
jnp
push
jo
inc
imul
arpl
inc
jb
add
push
add
je
push
je
bound
data16
inc
outsl
outsb
outsb
arpl
and
dec
push
outsb
imul
outsb
pop
inc
fs
gs
push
jb
js
add
push
je
push
je
bound
data16
push
gs
gs
jae
add
inc
push
je
push
je
bound
data16
pop
push
gs
gs
jae
add
rolb
dec
fs
insb
insb
push
imul
outsl
js
add
insl
jo
jb
outsl
outsb
popa
je
inc
insb
imul
add
arpl
jbe
jb
push
outsl
push
gs
data16
add
imul
add
rolb
push
jo
push
gs
gs
jae
push
jb
je
gs
jo
add
pop
add
jb
insb
gs
jb
add
repz
arpl
jb
outsb
addr16
imul
outsl
insl
jo
jae
push
add
xor
dec
fs
je
bound
insb
insb
xor
add
popa
imul
jo
imul
jo
inc
imul
gs
jne
push
inc
js
add
roll
dec
fs
insb
insb
push
outsb
jb
imul
outsl
js
add
add
je
push
je
bound
data16
dec
outsb
jbe
imul
add
arpl
jb
gs
outsb
jno
imul
add
sbb
fs
je
bound
data16
push
jne
jb
dec
outsb
je
jb
popa
arpl
and
imul
outsb
pop
push
jne
jb
dec
outsb
je
jb
popa
arpl
push
jb
js
add
add
je
push
je
bound
data16
inc
bound
push
gs
gs
jne
jb
dec
outsb
je
jb
popa
arpl
add
add
je
push
je
bound
data16
inc
outsl
jne
je
gs
add
add
arpl
jb
outsb
addr16
jb
gs
add
sbb
inc
push
je
push
je
bound
data16
inc
imul
arpl
add
jb
insb
imul
insb
xor
add
fs
jb
insl
push
je
imul
push
jo
push
gs
gs
imul
je
dec
outsb
outsw
push
add
or
push
jne
fs
outsl
push
je
imul
push
jo
inc
imul
jb
add
les
push
jo
push
gs
gs
imul
inc
js
or
push
jne
fs
outsl
push
je
imul
push
jo
inc
imul
outsl
push
je
imul
imul
add
je
push
je
bound
data16
inc
bound
push
gs
gs
gs
gs
jae
add
inc
push
je
push
je
bound
data16
dec
jae
dec
inc
push
jne
jo
jb
gs
add
jb
gs
gs
popa
insb
insb
xor
add
add
arpl
jb
outsb
addr16
imul
popa
jb
gs
add
add
outsb
imul
outsb
pop
push
gs
gs
jae
pop
push
jb
js
add
add
arpl
outsb
imul
push
je
imul
imul
add
jb
insb
insb
inc
gs
insb
popa
jae
dec
bound
arpl
adc
fs
je
bound
data16
inc
fs
gs
add
arpl
jb
gs
outsb
jb
imul
add
inc
push
push
xor
fs
insb
add
add
inc
gs
imul
outsl
outsb
dec
outsb
outsw
inc
add
add
jb
jne
jb
push
popa
insb
jne
inc
add
pop
add
je
imul
outsl
outsb
dec
outsb
outsw
push
add
push
gs
popa
outsb
addr16
addr16
popa
insl
gs
add
push
inc
push
push
dec
dec
dec
cs
insb
add
add
je
insb
je
add
outsl
dec
push
add
cmp
inc
jae
popa
jo
add
jge
push
popa
jbe
inc
inc
add
dec
add
gs
je
inc
outsl
outsb
je
add
add
insl
bound
gs
outsb
add
mov
push
imul
addr16
js
add
push
arpl
gs
imul
inc
js
inc
js
add
inc
jb
popa
je
push
outsb
add
inc
jb
popa
je
inc
dec
inc
imul
add
jb
je
push
je
add
add
je
gs
inc
insb
imul
push
gs
popa
jo
outsl
fs
add
arpl
gs
insb
imul
cmp
gs
arpl
imul
xlat
add
je
dec
inc
imul
je
imul
add
je
jne
push
add
inc
add
je
gs
dec
jne
inc
add
inc
gs
gs
inc
js
outsb
je
outsl
imul
push
gs
arpl
insb
gs
add
push
je
imul
xor
inc
gs
gs
dec
gs
imul
inc
gs
bound
arpl
add
inc
js
push
gs
dec
jne
push
add
push
gs
outsl
jb
inc
inc
add
add
je
jne
inc
add
add
gs
je
inc
imul
add
je
jns
je
insl
push
popa
insb
gs
gs
outsb
je
imul
gs
gs
dec
bound
arpl
sbb
inc
gs
je
arpl
bound
arpl
mov
inc
gs
imul
outsl
jb
add
dec
xor
cs
insb
add
add
popa
addr16
imul
popa
je
add
adc
dec
outsb
imul
inc
outsl
outsb
je
outsl
insb
jae
add
add
popa
addr16
imul
ja
add
push
jb
jo
jb
jns
push
add
push
add
imul
inc
outsl
outsb
je
outsl
insb
jae
js
add
insl
popa
addr16
imul
insb
popa
arpl
arpl
add
add
gs
je
push
jb
jo
jb
jns
push
popa
addr16
add
sub
dec
insl
popa
addr16
imul
je
outsl
jns
push
add
outsl
jo
jb
jns
push
add
inc
dec
dec
inc
push
dec
xor
cs
insb
add
mov
dec
je
jne
jb
push
arpl
imul
je
xchg
add
je
push
gs
popa
arpl
arpl
imul
imul
movsb
pop
jae
jo
imul
add
insb
dec
insl
popa
addr16
je
gs
fs
add
pop
pop
popa
insb
insb
insl
jne
add
add
push
gs
imul
jb
popa
add
inc
gs
ja
gs
arpl
imul
imul
add
insb
inc
outsl
insl
jo
jb
dec
gs
outsl
jb
add
mov
outsb
arpl
add
add
je
push
popa
insb
imul
push
je
inc
gs
jb
jns
gs
jo
add
pop
ja
jae
jo
add
add
inc
gs
gs
dec
gs
stos
add
push
jne
jb
dec
bound
arpl
add
je
push
jo
popa
jae
push
outsb
imul
jb
outsb
add
ret
arpl
je
add
rolb
je
push
outsb
imul
dec
jne
je
inc
jns
gs
imul
je
push
popa
imul
jne
add
sbb
dec
je
gs
popa
insb
jne
dec
gs
stc
add
insb
dec
outsb
addr16
push
arpl
imul
imul
pop
ja
jae
outsl
jne
add
popa
je
imul
je
outsb
insl
popa
jo
imul
arpl
outsb
add
cmp
dec
je
popa
imul
insb
gs
bound
arpl
add
insb
inc
insb
insb
outsl
arpl
gs
gs
jo
cmp
je
push
jne
jb
inc
outsb
jbe
jb
outsb
insl
outsb
je
popa
jb
popa
bound
push
add
add
push
gs
outsb
outsw
jb
popa
je
outsl
outsb
push
jb
arpl
jae
mov
push
je
push
jne
inc
jne
push
jns
imul
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
inc
imul
insb
inc
fs
arpl
jae
inc
insb
insb
outsl
ja
fs
arpl
add
jne
jb
inc
imul
jns
imul
je
inc
insb
insb
outsl
arpl
gs
outsb
fs
outsb
imul
push
imul
inc
jb
popa
je
push
jae
jb
push
add
push
je
inc
jb
gs
imul
insb
push
jne
jb
push
imul
insb
jne
jae
add
add
push
gs
fs
imul
je
dec
jo
outsb
inc
jne
jb
outsb
je
jae
jb
add
push
imul
arpl
fs
imul
xor
pop
add
insb
inc
gs
arpl
inc
add
dec
insl
jo
jb
outsl
outsb
popa
je
inc
outsb
outsl
outsb
jns
outsl
jne
push
outsl
imul
js
dec
je
jo
outsb
push
jns
bound
imul
bound
arpl
icebp
add
inc
jb
popa
je
inc
jbe
outsb
je
add
dec
je
gs
outsb
outsw
jb
popa
je
outsl
outsb
push
push
add
xchg
add
insb
inc
gs
gs
imul
popa
insb
insb
outsl
arpl
jo
outsl
bound
cli
add
insb
dec
outsb
addr16
push
imul
insb
inc
jb
popa
je
push
outsb
imul
jb
outsb
addr16
jb
insl
inc
jae
imul
push
je
inc
jo
outsb
fs
outsb
imul
jb
outsb
addr16
outsl
push
je
imul
push
je
push
popa
insb
imul
jbe
push
arpl
imul
imul
les
dec
je
insb
insb
outsl
arpl
gs
imul
gs
outsl
jb
add
fs
insb
cs
insb
add
add
gs
jb
popa
jns
arpl
jae
inc
popa
je
add
add
gs
jb
popa
jns
gs
inc
outsl
jne
add
xchg
add
jae
insb
insb
outsl
arpl
jb
outsb
addr16
jns
gs
outsb
add
imul
outsb
addr16
jns
gs
js
mov
imul
jo
dec
imul
jb
popa
outsb
je
outsl
jo
dec
outsb
add
sbb
push
popa
gs
jb
popa
jns
jne
inc
insb
gs
outsb
je
pop
add
jb
popa
outsb
je
outsb
imul
popa
je
inc
jb
outsl
jb
outsb
outsw
add
add
jb
popa
outsb
je
push
push
jns
add
add
jae
je
imul
add
add
je
jb
outsl
jb
outsb
outsw
add
or
push
popa
jb
popa
outsb
je
outsl
jo
add
inc
jb
gs
je
imul
popa
gs
jb
popa
jns
gs
inc
outsl
jne
add
and
inc
gs
arpl
gs
bound
arpl
add
jae
insb
insb
outsl
arpl
jb
outsb
addr16
outsb
add
add
gs
jb
popa
jns
outsb
popa
arpl
jae
inc
popa
je
add
gs
jb
popa
jns
je
dec
dec
outsb
fs
mov
fs
jns
gs
imul
gs
jb
popa
jns
gs
insb
gs
outsb
je
movl
jb
outsl
jb
outsb
outsw
add
or
push
popa
jb
popa
outsb
je
insb
gs
jb
add
push
jns
push
gs
insb
insb
outsl
arpl
jb
outsb
addr16
outsb
add
je
imul
dec
outsb
add
mov
dec
outsl
popa
fs
imul
add
add
gs
jb
popa
jns
jb
popa
je
add
gs
jne
xor
cs
insb
add
mov
push
dec
inc
gs
jo
arpl
insb
inc
outsl
insb
fs
outsl
arpl
imul
push
dec
inc
gs
imul
add
inc
add
inc
push
dec
outsl
je
data16
add
insb
insb
inc
js
arpl
gs
js
add
insb
inc
js
arpl
gs
add
push
dec
inc
jb
ja
gs
outsl
jb
outsl
insb
fs
add
inc
add
inc
jb
ja
gs
outsl
jb
outsl
insb
fs
add
sbb
inc
jb
addr16
jne
jb
inc
imul
inc
dec
dec
xor
cs
insb
add
add
push
arpl
jo
jns
cli
add
jae
gs
push
popa
jb
insl
gs
jb
dec
outsb
outsw
push
add
add
push
imul
test
inc
gs
jns
inc
outsl
insb
outsl
jb
dec
add
arpl
insb
addr16
jne
je
outsb
add
sbb
dec
gs
popa
addr16
outsl
js
add
add
insb
insb
push
imul
outsl
arpl
pop
add
je
outsb
jne
je
insl
inc
outsl
jne
je
add
add
insb
insb
dec
gs
dec
outsl
outsl
imul
add
push
imul
popa
jae
inc
add
and
dec
gs
popa
addr16
outsl
js
add
add
je
insb
imul
je
pop
add
jo
imul
imul
inc
push
outsb
jne
je
insl
add
push
imul
imul
inc
outsl
jb
popa
je
add
lahf
add
je
imul
outsb
addr16
add
jnp
push
arpl
outsb
push
outsl
inc
insb
imul
add
je
outsl
jns
imul
add
je
imul
outsb
addr16
add
or
push
jb
outsb
jae
popa
je
dec
gs
popa
add
flds
push
gs
imul
js
push
add
or
dec
outsl
popa
fs
je
imul
inc
popa
insb
insb
push
imul
outsl
arpl
xchg
inc
gs
jns
inc
outsl
insb
outsl
jb
jb
jae
add
mov
push
arpl
add
arpl
outsl
jo
jo
outsb
jne
add
add
je
imul
add
ja
arpl
add
jb
push
gs
gs
jae
inc
popa
jo
jne
add
out
inc
outsb
fs
popa
imul
inc
gs
imul
outsb
addr16
add
roll
dec
jae
push
in
add
insb
insb
push
imul
push
outsb
jb
imul
popa
jae
inc
add
xor
inc
gs
insb
addr16
je
insl
push
gs
inc
add
add
je
imul
outsb
addr16
add
std
add
jne
insb
push
arpl
add
je
gs
je
jo
imul
movsl
add
je
imul
popa
arpl
outsb
je
add
add
addr16
popa
imul
je
jo
gs
bound
arpl
scas
add
je
imul
jb
popa
fs
jb
arpl
jae
add
pop
add
fs
je
imul
push
outsb
fs
insb
addr16
je
insl
dec
gs
popa
addr16
add
push
gs
ja
imul
add
je
gs
popa
addr16
add
jne
dec
outsb
jne
add
add
jbe
insb
imul
je
add
add
je
jne
jae
jb
outsl
jae
add
je
outsl
jns
outsb
jne
inc
add
popa
jb
jo
gs
add
stos
add
je
imul
js
inc
add
mov
jo
je
push
popa
addr16
add
add
je
gs
popa
addr16
outsl
jae
mov
inc
outsl
arpl
add
fildl
dec
jae
arpl
imul
insb
imul
arpl
outsb
add
jb
inc
gs
jb
arpl
jae
imul
popa
je
outsl
outsb
add
add
push
imul
outsl
outsl
imul
sahf
add
je
insb
addr16
je
insl
push
gs
push
add
add
outsb
fs
imul
aam
push
gs
imul
jae
add
add
fs
insl
popa
addr16
add
aad
push
gs
imul
outsb
add
xor
inc
gs
insb
addr16
je
insl
add
sbb
dec
gs
popa
addr16
gs
mov
inc
imul
js
popa
jb
insl
inc
add
push
imul
arpl
add
outsb
fs
insb
addr16
je
insl
dec
gs
popa
addr16
add
push
gs
jae
addr16
add
stos
add
je
outsb
jne
inc
add
jo
imul
add
insb
gs
jae
inc
inc
add
add
je
insb
addr16
je
insb
dec
inc
add
pushf
add
je
imul
add
add
jae
gs
push
popa
jb
insl
gs
jb
dec
outsb
outsw
inc
add
add
je
popa
jo
jne
add
jne
inc
jb
popa
je
push
outsl
jo
jo
outsb
jne
fadds
dec
jae
insb
addr16
jne
je
outsb
inc
push
add
inc
add
imul
jae
addr16
add
push
push
inc
push
xor
cs
insb
