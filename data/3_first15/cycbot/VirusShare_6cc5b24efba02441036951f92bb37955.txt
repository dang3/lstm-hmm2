sahf
or
dec
int
mov
movsl
stc
or
in
or
add
test
and
add
lahf
fstl
add
fucomi
and
mov
clc
dec
in
dec
inc
xlat
in
lret
mov
sub
jns
nop
add
in
jns
sbb
add
in
jb
cmp
mov
shr
cmp
arpl
lahf
cmpsl
add
add
push
xchg
push
add
add
je
inc
out
mov
xchg
add
lds
inc
add
mov
pop
leave
mov
push
add
add
add
cmp
add
cltd
dec
sub
nop
add
mov
cwtl
sub
mov
loope
scas
cmpsl
out
cmpsl
cltd
insb
jb
mov
mov
sbb
insl
mov
mov
add
add
mov
and
rolb
or
enter
or
or
test
hlt
add
add
test
xor
pop
sub
sti
jae
add
rolb
xlat
cmp
add
add
cmp
add
inc
xor
lea
clc
xor
cmp
nop
add
test
add
add
addb
outsl
mov
or
add
xor
test
mov
mov
dec
add
push
movsl
lea
testb
add
mov
sub
inc
das
add
or
and
mov
push
and
add
mov
fstl
xchg
lds
dec
pop
adc
push
sub
fiadds
sub
add
add
mull
mov
mov
iret
out
shl
cmp
mov
mov
add
mov
add
pop
lcall
insl
pop
cmp
xor
jge
add
xchg
mov
add
stos
imul
add
add
mov
insb
ja
jb
mov
test
add
sub
sub
sbb
sub
test
or
add
sub
mov
rolb
in
add
cld
pop
add
mov
icebp
in
fsubs
leave
jno
loop
add
mov
xor
add
add
into
sub
sbb
arpl
js
or
add
or
add
cli
fstpt
je
cmp
jo
xchg
add
shll
add
pop
jb
push
add
fdiv
add
jmp
push
push
mov
dec
add
add
push
test
add
fldenv
adc
into
adc
inc
adc
adc
stc
jo
xchg
add
add
adc
repnz
jmp
or
inc
add
xchg
add
lock
mov
dec
rcll
push
add
or
insb
aaa
mov
jp
pop
test
and
aaa
mov
add
push
jo
sub
add
and
int3
repz
int
repnz
push
push
add
cmc
mov
add
pop
andl
shll
add
xor
adc
add
mov
lods
mov
imul
pop
xchg
push
in
ret
or
bound
mov
add
in
insl
scas
cmpsl
jae
subl
add
push
loope
xchg
mov
inc
adc
lock
add
addr16
and
xchg
add
add
sbb
add
fs
fwait
sub
or
and
xchg
mov
add
add
add
imul
je
ret
mov
hlt
add
icebp
mov
lret
fldcw
add
push
into
jle
adc
xchg
add
cltd
mov
sub
pop
dec
sub
jl
sub
jae
add
mov
add
int
popa
mov
add
add
movb
xor
adc
jle
dec
add
add
add
add
inc
sbb
push
add
stos
pop
jae
scas
aas
inc
rcrl
push
aam
fcomps
mov
push
cmp
stos
mov
cld
cltd
xlat
dec
cmp
cli
jmp
pop
movsb
add
jecxz
inc
add
out
and
add
add
add
insb
cld
movb
stos
sahf
lcall
adc
and
mov
bound
mov
lcall
rolb
sub
add
mov
mov
xor
inc
add
test
push
add
ret
xor
mov
out
lods
std
cmp
pop
add
rolb
add
add
sbb
add
call
fnsave
add
pop
je
lcall
push
add
in
cli
inc
add
add
add
adc
mov
push
add
add
testb
cmp
mov
inc
test
mov
inc
jg
jae
or
bound
mov
add
add
and
mov
add
mov
add
add
mov
cmp
add
jb
dec
or
addb
jo
cmp
cmp
add
add
imul
stos
cli
dec
push
add
mov
add
mov
push
adc
pop
mov
dec
leave
sbb
mov
mov
lahf
mov
push
add
data16
mov
loope
inc
add
and
and
add
mov
add
test
xor
fneni(8087
add
sbb
and
jb
mov
cmpsb
add
add
add
xchg
add
mov
mov
jg
xchg
add
push
add
jne
add
mov
sub
add
cmp
jp
add
mov
add
mov
cltd
das
mov
pop
push
push
rolb
mov
pop
cli
inc
fisubl
add
out
add
leave
js
movsl
test
jne
add
ror
pop
std
lcall
mov
xor
pop
test
out
bound
mov
xor
cli
inc
add
mov
pop
cmp
pop
mov
arpl
addb
add
jb
mov
movsb
add
test
lods
xchg
dec
insb
dec
sbb
cli
pop
jns
call
ds
adc
push
mov
movb
ljmp
add
add
add
mov
mov
jle
std
in
sub
add
add
insl
std
xchg
aam
add
mov
add
xchg
mov
jle
xchg
mov
lahf
test
add
jmp
add
in
gs
cmpl
out
testb
add
les
lcall
add
add
jle
out
push
mov
push
or
lock
fsubrs
xchg
add
jae
packssdw
mov
out
add
or
es
sbb
or
pop
icebp
hlt
add
add
jo
inc
add
add
add
add
aam
push
add
call
xchg
add
dec
testb
scas
rolb
stos
jmp
roll
ljmp
lret
jb
sbb
shl
xchg
andl
xchg
add
into
movsl
bound
mov
pop
cld
mov
inc
add
mov
cwtl
out
inc
mov
mov
ss
add
add
push
add
stc
fcmovbe
jmp
add
aad
mov
popf
movb
test
add
xchg
adc
call
add
dec
cli
inc
sub
add
shl
js
xchg
lret
adc
xchg
add
in
cli
insb
mov
andps
stos
leave
adc
and
mov
mov
nop
add
sbb
rcr
lahf
jl
stos
lods
ror
rolb
push
faddl
mov
add
mov
inc
mov
xchg
movb
pushf
mov
push
add
leave
stos
pop
aaa
jecxz
add
add
jecxz
sub
inc
add
inc
add
cs
call
sbb
mov
dec
cmp
ljmp
cmp
xchg
add
addr16
pop
mov
sahf
lods
or
add
sub
mov
stos
les
inc
add
cmp
and
lcall
rolb
test
ficoms
add
popa
add
stos
or
testb
cmpsb
add
push
cmpsl
cmp
add
mov
pop
mov
and
scas
mov
popf
jg
les
and
xchg
add
fadds
outsb
rolb
mov
loopne
addr16
roll
fldenv
add
add
iret
insl
aaa
sahf
sbb
sbb
cs
cmc
shll
imul
push
add
push
add
add
adc
cwtl
out
add
addb
rolb
push
add
add
lcall
sti
pushf
xor
add
insl
add
mov
add
sub
adc
mov
sarl
mov
mov
insb
push
add
add
rolb
out
addl
add
xor
stos
xchg
lea
ja
mov
jns
push
add
mov
mov
xchg
sub
out
ljmp
push
xorl
loopne
scas
jle
mov
lret
add
cmp
fwait
cmp
lret
push
mov
sub
push
push
push
cld
call
sub
mov
cs
es
ss
push
call
cmp
je
es
lea
push
cs
es
call
test
jne
jmp
lret
icebp
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
lea
add
repnz
mov
sub
sub
push
pop
push
push
jmp
jmp
add
add
or
fmuls
sbb
inc
add
data16
add
mov
ret
mov
add
sbb
movb
add
mov
add
sbb
sbb
add
repnz
add
mov
sbb
sub
add
jns
sub
pop
lods
out
xor
ljmp
sbb
add
pop
adc
mov
jg
add
add
mov
sub
add
popa
inc
add
add
pushf
movsb
add
mov
jbe
stc
rolb
inc
add
dec
lret
ljmp
and
add
dec
xchg
add
lahf
push
jbe
in
loope
add
add
mov
enter
add
add
jmp
sbb
pusha
add
fnstenv
add
iret
dec
rolb
repz
mov
add
add
add
lret
aad
add
jmp
lcall
outsb
push
add
add
lret
add
add
add
and
jb
push
add
or
xor
and
add
aas
push
add
xor
arpl
add
cmp
loop
adc
push
xor
xor
mov
mov
sbb
daa
scas
fwait
test
decb
stos
lock
dec
in
xchg
addb
mov
push
push
adc
test
das
lods
adc
mov
out
movsb
add
mov
inc
mov
add
mov
divl
in
mov
add
mov
outsl
jbe
outsb
fnstcw
fidivrl
push
add
imul
add
scas
or
or
cmpsb
add
add
mov
add
add
inc
lret
ja
sti
sahf
push
sub
add
mov
mov
add
add
popa
mov
fcomi
scas
push
pusha
add
notl
cmp
add
into
add
test
rcr
int3
in
test
mov
sbb
in
dec
sbb
frstor
add
rolb
sub
xor
lds
dec
jne
addb
enter
int
in
add
add
jmp
add
mov
das
lret
out
xor
dec
push
add
add
loope
dec
pop
jnp
pop
mov
sysret
movb
add
pop
es
inc
sarl
nop
add
jnp
add
popa
gs
lret
int
sbb
lds
mov
in
mov
add
mov
add
mov
arpl
dec
cmpsb
add
rsqrtps
scas
sbb
std
push
push
and
es
scas
mov
rolb
xchg
add
pop
sarl
cltd
je
fistpll
jns
add
add
add
add
xor
test
cmp
pusha
add
fcoms
rolb
mov
xlat
cwtl
fistl
add
add
aaa
enter
and
or
testb
sub
sbb
ljmp
pop
movsb
add
inc
add
push
add
add
ret
add
mov
mov
enter
pop
mov
and
mov
jle
in
iret
sub
pop
cmp
pop
jmp
imul
into
in
pop
jnp
or
add
mov
test
sbb
add
adc
inc
jae,pn
add
mov
mov
xchg
ret
add
add
add
xlat
lea
inc
push
add
add
fisubrs
insl
pop
test
lds
outsb
mov
sbb
fdivr
fs
das
dec
daa
nop
add
cmpsl
push
add
subl
sbb
xor
out
mov
mov
sub
test
sub
sbb
ds
testb
in
xchg
add
fstpl
mov
add
add
shll
jbe
popf
mull
sub
jmp
add
jg
repz
aas
dec
cltd
and
mov
repz
fists
add
insb
pop
rorl
xor
ljmp
stos
pushf
adc
cmp
add
ds
add
frstor
xor
add
mov
cwtl
in
insl
aam
mov
add
jmp
add
mov
movsl
repz
add
js
add
fldenv
add
jb
sbb
mov
cltd
jo
mov
les
sbb
jns
inc
add
add
enter
pop
inc
add
add
adc
sub
push
add
cmp
add
ficomps
add
add
aaa
adc
mov
push
add
les
addb
cmpsb
add
pop
lahf
test
jge
mov
cmp
outsl
leave
add
out
adc
add
mov
jp
fsubs
mov
xchg
das
sahf
into
int
stos
mov
setno
mov
xchg
add
ja
cmp
add
add
ja
mov
xchg
movsb
add
lods
lds
add
adc
lret
fcom
jle
add
pop
in
loope
test
push
add
push
add
add
add
mov
fwait
add
jae
mov
pusha
add
and
mov
aaa
test
add
xor
inc
lret
add
mov
aaa
clc
or
test
or
xorl
daa
xor
mov
mov
add
jb
lahf
lea
add
add
and
les
fcmove
icebp
xor
push
add
jle
ljmp
add
aas
into
repnz
mov
or
enter
add
jbe
nop
add
add
sub
jl
rolb
fxch
rolb
sbbl
ss
nop
add
xlat
or
mov
add
xor
loop
loop
jmp
push
add
xlat
jbe
or
xor
jecxz
add
mov
add
jo
mov
add
out
in
or
setb
pop
or
js
cmp
add
pop
pop
dec
mov
movb
mov
pop
and
mov
add
add
add
add
test
mov
jae
out
and
mov
xchg
ds
mov
xchg
add
add
add
shll
mov
add
push
add
movsb
add
xchg
add
add
aad
dec
xor
add
arpl
pop
fnstenv
add
mov
pop
add
mov
cmpl
mul
add
daa
jnp
movsl
addl
arpl
addr16
add
add
ja
add
add
adc
mov
popa
mov
add
push
push
mov
out
in
cmp
int3
jp
mov
add
mov
mov
pop
insl
adc
mov
lahf
jecxz
adc
cmp
add
mov
icebp
pop
addr16
ja
xchg
aaa
stos
outsl
cmp
lods
push
push
fdiv
imul
add
jg
add
add
add
cs
mov
popf
cli
scas
pop
push
add
ret
ds
fidivl
into
sub
sarl
js
add
sub
test
in
data16
inc
sub
add
dec
mov
daa
mov
cmpsl
cmovns
adc
int
mov
xchg
add
aad
add
add
mov
inc
add
loop
inc
add
jno
add
out
xor
scas
je
shr
in
sbb
adc
add
xor
movb
xor
xchg
jae
add
addl
xlat
mov
add
rolb
add
insl
inc
addb
jg
add
add
add
repz
cld
cmp
add
add
mov
fwait
inc
add
xchg
xchg
add
mov
out
hlt
add
add
mov
add
mov
out
lahf
push
add
inc
add
ret
inc
lods
jne
lock
add
jns
insl
jo
xchg
inc
add
test
stos
sbb
add
arpl
pop
lret
hlt
add
fwait
ret
sbb
movsb
add
fcomps
push
stos
sbb
add
fnstenv
cld
push
add
es
lods
pop
jmp
add
cmp
shrl
lea
xor
xchg
add
insl
hlt
add
or
add
int
lea
mov
add
add
pop
pop
push
cmpsl
add
add
gs
mov
es
rolb
repz
mov
enter
xlat
xchg
add
add
add
add
push
add
sbb
adc
mov
cmc
and
push
fs
aas
mov
daa
mov
mov
add
pop
cmp
xlat
pop
or
sub
add
sbb
dec
jg
add
adc
add
push
mov
add
xchg
inc
add
test
jp
stc
mov
jle
sub
mov
rolb
add
loope
rolb
mov
sub
or
std
add
daa
lret
mov
xchg
and
mov
add
add
cmp
mov
add
mov
scas
jmp
addb
mov
xchg
testb
add
loop
fstl
add
add
xor
jae
and
mov
mov
xchg
int
popf
mov
add
jge
mov
push
add
mov
arpl
test
add
and
mov
add
es
outsl
cmp
inc
mov
add
xchg
or
xor
lea
add
add
aas
mov
je
enter
add
lret
adc
sub
add
jnp
call
outsl
mov
and
mov
add
loopne
or
imul
add
add
fyl2x
mov
cli
push
ret
leave
jg
cmp
stos
rolb
pushf
mov
out
mov
arpl
mov
mov
inc
add
ds
fcmovnu
pop
sub
pop
adc
mov
add
add
fildll
rolb
pusha
add
add
inc
inc
add
clc
stos
cmp
pop
testb
jae
add
stos
dec
adc
jmp
jne
pop
sub
fwait
cmp
xchg
jle
sbb
addb
inc
bound
mov
inc
dec
xor
pop
jl
add
push
add
out
cmp
pop
xchg
xor
testl
add
mov
or
dec
std
inc
add
add
fcmovne
xchg
jle
sub
vpmaddwd
jo
lret
add
leave
out
add
add
pop
pop
subl
imul
pop
loope
add
outsb
mov
cmp
in
mov
addb
test
imul
jnp
es
push
add
sub
add
btl
add
add
inc
pop
jb
jnp
jle
sbb
add
jg
das
movsb
add
add
orl
testl
jno
add
add
dec
sbb
or
add
add
int
cmp
addr16
scas
jae
sar
data16
dec
jp
inc
add
mov
repz
mov
xchg
out
nop/reserved
and
inc
add
movsl
lock
mov
and
add
add
sub
add
outsb
je
out
lods
fsub
lcall
ljmp
aaa
das
push
rolb
mov
or
test
add
in
jno
add
addb
push
add
dec
mov
xchg
add
ds
add
js
lcall
mov
add
out
mov
std
push
push
add
add
add
rcr
and
ret
add
add
ret
xor
adc
lods
pop
std
sub
stc
call
jne
es
jo
sub
push
sbb
inc
add
popa
nop
add
mov
dec
jb
rolb
and
xchg
add
mov
ret
push
push
add
cmpsb
add
out
cwtl
int
rolb
stc
fcomp
repnz
add
lret
out
add
push
dec
or
loopne
sub
cli
loop
and
mov
pop
stos
or
sub
adc
call
addr16
mov
inc
add
add
xchg
add
xlat
loopne
or
in
aas
mov
fisubs
push
dec
mov
mov
cmp
pop
sbb
imul
push
xchg
dec
repnz
adc
jmp
into
fbld
add
add
add
aas
xorl
mov
fucom
add
sub
add
popf
and
jne
xor
adc
xchg
movsl
sbb
pop
jl
lret
or
add
add
add
sbb
lret
pushf
psrlw
cmp
out
leave
mov
lds
jo
pop
dec
ret
dec
fptan
add
pusha
add
stos
jae
add
not
jb
add
sbb
add
pusha
add
and
es
addr16
mov
aam
cmp
mov
fcomps
add
push
pop
xadd
leave
add
add
sbb
add
push
add
int
pop
das
add
add
mov
add
cmp
bound
mov
jl
test
imul
or
add
rolb
sbb
add
add
xor
dec
call
sbb
add
imul
add
jne
mov
aaa
and
iret
jb
test
pop
pop
xchg
add
jo
jns
movq
enter
inc
add
mov
dec
lcall
sbb
cmp
xor
push
add
lds
ficoms
out
dec
popa
pop
push
add
add
adc
jno
lahf
in
jl
out
fstps
addr16
add
fldl
aad
in
sub
jnp
out
push
jp
add
mov
add
inc
into
fdivrs
mov
xchg
lret
jns
mov
stos
sub
jb
xor
and
mov
push
repnz
hlt
add
add
rcrl
xchg
or
push
je
aaa
push
lds
jno
add
mov
add
or
add
stc
mov
sub
test
mov
pusha
add
push
add
add
mov
jge
sbb
mov
call
inc
dec
xchg
dec
jge
jo
xor
add
add
cmp
sbbl
add
pop
cwtl
sub
add
addb
leave
call
add
add
ja
rolb
ret
jb
mov
out
and
repz
loop
setg
adc
cmpsl
test
stos
sub
mov
add
add
stos
test
add
dec
js
add
mov
add
pop
add
add
mov
push
jo
fsubrs
outsb
je
push
add
in
xor
leave
iret
pop
repnz
push
adc
add
sbb
in
push
mov
fidivrl
sahf
sbb
out
cmp
add
lahf
rolb
dec
lret
lock
and
push
xchg
in
mov
pop
lret
jno
sti
cmp
pusha
add
bound
mov
or
dec
sbb
les
cwtl
and
mov
addb
add
add
xchg
pop
cld
adc
mov
push
add
aad
outsb
cmp
sbb
sbb
mov
pop
pushf
dec
dec
add
add
adc
sub
test
add
out
dec
test
lods
jge
add
and
les
jae
loopne
push
add
cmp
add
pop
lock
sbb
or
rolb
or
enter
pop
jbe
cmpsb
add
mov
ljmp
mov
add
pop
mov
insl
test
insl
out
cmpsl
dec
dec
cmc
pop
mov
and
add
jmp
loopne
or
loop
fnstcw
mov
add
push
int
ficoms
add
jecxz
add
pop
sub
popa
jo
mov
mov
add
xchg
add
dec
and
add
cmp
inc
add
add
add
mov
lret
lods
out
xchg
addr16
add
xor
mov
inc
xchg
add
add
pop
xor
add
sbbl
mov
mov
lea
add
add
inc
add
mov
cmp
mov
sub
add
lea
ret
mov
add
jns
jg
add
sub
add
add
add
mov
and
cmp
xchg
or
add
or
stos
push
rolb
mov
mov
lcall
mov
jno
mov
sub
add
sahf
xchg
not
leave
xlat
pop
daa
movb
cltd
dec
stc
das
les
push
add
mov
add
mov
cmp
lods
sahf
mov
add
loopne
outsl
stc
pop
adc
lods
mov
jne
add
mov
insb
ja
addb
rcrl
push
add
mov
enter
int
test
repz
cmp
add
les
stos
addr16
xrelease
loop
mov
pop
pop
mov
cmp
jbe
jle
incb
add
lcall
cmp
enter
addr16
xchg
xor
outsb
push
pop
fstpl
jo
sub
jecxz
pop
pop
mov
add
jne
pop
lret
ljmp
enter
sub
jge
insb
adc
xchg
daa
testb
add
imul
add
mov
mov
add
add
jl
arpl
mov
add
lcall
addb
add
and
inc
add
sbb
mov
faddp
add
cmp
lea
add
add
js
pop
rolb
or
pop
dec
mov
pop
mov
xor
dec
mov
stc
lcall
mov
movsl
scas
addb
clc
gs
movb
pop
aaa
ret
push
movsl
addb
dec
xchg
add
add
mov
lea
pop
das
pushf
daa
cmp
add
add
in
rcl
loope
icebp
js
mov
inc
jb
cmpsl
hlt
add
rolb
jmp
negl
mov
imul
jle
ds
fstps
out
inc
add
add
out
sbb
fistps
in
gs
add
mov
call
out
stc
cmpsb
add
mov
xlat
jecxz
je
push
jns
add
aaa
fwait
xchg
clc
cmp
add
out
add
jp
add
add
cmp
adc
leave
inc
stc
mov
pop
mov
ret
shrl
mov
xor
filds
add
icebp
std
mov
test
jecxz
mov
dec
ljmp
call
add
data16
push
add
mov
data16
mov
xor
xchg
mov
adc
add
jmp
les
xchg
add
insb
shll
test
cltd
dec
cmp
mov
and
loopne
add
aas
ret
jl
add
cmp
push
inc
add
add
add
add
dec
int3
cmp
push
add
repz
enter
loope
push
add
add
add
imul
push
sbb
mov
add
and
sbb
std
scas
push
or
popf
fistl
lods
sbb
xchg
scas
movsl
addb
dec
mov
add
inc
add
aas
call
xchg
add
je
add
decl
stos
test
add
add
sub
push
add
add
mov
adc
add
or
cmp
fucomi
jmp
add
add
add
add
cmpsl
clc
inc
or
repnz
push
add
fsubs
int
sahf
push
add
add
outsb
and
dec
ret
add
add
out
dec
pop
nop
add
jmp
loope
add
mov
dec
mov
push
jbe
pop
xchg
add
inc
add
sahf
push
movaps
frstor
popf
lahf
mov
inc
add
add
add
inc
aas
popa
enter
cli
gs
add
mov
out
imul
nop
add
shll
mov
dec
pop
inc
aad
add
adc
stos
mov
in
and
mov
add
imul
out
out
cmc
cvtpi2ps
add
mov
adc
aaa
add
add
fisttpl
push
push
add
insl
jne
clc
and
add
insb
adc
jmp
lahf
cmp
data16
pusha
add
jo
jb
loopne
test
add
jle
inc
add
add
scas
mov
arpl
add
add
jo
int
add
add
xchg
and
add
cmp
inc
test
adc
mov
sub
inc
add
add
sub
add
pop
out
sti
pop
mov
cmp
or
hlt
add
add
das
push
lods
movsl
xchg
add
adc
stos
test
add
cmp
xor
addl
add
leave
push
je
xlat
int3
int
xchg
lahf
and
sub
addb
add
add
cmp
add
paddd
add
push
add
inc
add
push
add
add
and
or
mov
add
ficompl
add
les
jno
cltd
enter
inc
call
imul
stc
and
add
mov
out
ret
add
mov
push
mov
shll
lods
push
lret
bound
mov
jno
add
add
cwtl
testb
add
or
std
test
add
add
mov
int
add
lods
in
inc
add
dec
cmpsb
add
jne
sbb
sbb
inc
add
xor
pop
jbe
das
pop
mov
add
add
sbb
add
add
add
mov
fildl
add
push
sbb
add
mov
cmc
jge
xor
adc
mov
mov
icebp
movsb
add
mov
or
mov
pop
pop
mov
xchg
dec
rol
add
mov
pop
ret
nop
add
xchg
jo
cmpsl
jmp
add
mov
in
ljmp
xchg
add
ja
nop
add
add
jge
add
lods
repz
add
inc
add
mov
add
mov
addb
add
mov
push
xor
jnp
add
add
add
add
mov
lret
lahf
outsl
stos
adc
dec
mov
mov
dec
fsub
add
mov
outsl
mov
fdivl
loop
add
mov
cmp
aaa
test
aaa
xchg
into
adc
mov
and
jecxz
mov
popf
adc
arpl
pop
xchg
in
das
movb
push
add
add
add
fdivr
inc
add
add
fiadds
dec
int3
pop
insl
loop
mov
and
mov
add
cmpsl
imul
enter
add
mov
dec
lods
fistpll
mov
icebp
mov
jno
add
mov
std
ja
push
lcall
add
mov
jle
mov
fsub
add
add
and
mov
add
push
add
aad
add
add
add
add
sbb
xchg
repz
test
into
adc
pop
out
mov
frstor
rolb
sub
cmc
fiaddl
and
add
push
sub
add
mov
sahf
pushf
jne
xor
cltd
cmp
mov
lods
or
add
and
jno
mov
movb
cmp
push
add
add
out
add
mov
fidivs
sbb
lahf
sub
add
jmp
shr
lcall
sbb
cld
insl
and
and
add
out
xchg
stos
hlt
add
add
inc
add
and
mov
add
push
push
and
mov
xor
mov
mov
mov
jmp
fbld
add
mov
or
ja
cmp
lcall
ror
sub
pop
push
push
and
dec
inc
add
das
inc
add
cwtl
sub
cmc
xchg
add
addb
add
ret
std
cmp
add
cmp
call
daa
ja
push
sbb
pop
push
movsl
fld
lcall
stc
jo
stc
pop
jle
mov
push
fisubrs
jbe
mov
add
mov
out
xchg
add
movsb
add
divl
or
iret
sbb
xlat
rolb
loopne
mov
mov
jne
mov
push
add
add
daa
mov
into
push
cmc
cltd
int
mov
addb
mov
add
aas
lock
adc
xchg
add
scas
add
incb
movb
add
add
add
dec
rolb
lds
pop
pop
fists
cli
mov
inc
add
add
hlt
add
dec
sub
hlt
add
add
add
ljmp
lock
add
push
add
add
add
add
mov
add
pop
dec
jb
fiadds
data16
jns
add
cli
movsl
out
imul
jno
jno
sbb
add
lods
out
sbb
dec
cmp
pop
faddp
icebp
push
xchg
inc
add
add
cmp
add
repnz
jno
sbb
mov
out
xchg
test
adc
test
adc
addb
add
rolb
out
mov
push
ret
cmp
cmp
lcall
pop
lods
mov
pop
aad
xchg
add
daa
insl
les
stos
sub
mov
add
or
pop
enter
mov
roll
loop
stos
mov
dec
out
nop
add
jecxz
sbb
mov
mov
fimuls
push
add
pop
aas
sti
bound
mov
or
repnz
fwait
cmp
rolb
xlat
mov
lods
push
daa
in
xlat
cmp
dec
sub
pop
je
lds
mov
adc
add
dec
lea
inc
add
pop
lock
repnz
mov
add
pop
push
mov
in
push
add
dec
aaa
test
iret
dec
mov
add
nop
add
sub
adc
jmp
dec
iret
int
add
sub
push
cli
cmp
add
enter
jmp
imul
mov
mov
loop
push
xorl
sti
mov
mov
testb
add
in
xchg
add
lahf
insb
pop
xbegin
add
jmp
add
add
mov
popa
mov
xor
mov
cmp
inc
add
pusha
add
lea
adc
sbb
mov
fistl
ret
sub
cltd
jo
rolb
sbb
sahf
add
data16
pop
xchg
addb
add
test
add
add
add
add
add
mov
jne
add
or
jl
mov
add
add
push
dec
psrad
mov
mov
add
add
in
lcall
add
mov
add
or
sub
cmp
xchg
and
inc
add
cmp
pop
add
add
mov
dec
mov
bound
mov
xor
lock
pop
repnz
dec
xchg
test
addb
pop
movsb
add
test
add
mov
push
xor
xchg
out
jno
imul
out
cltd
or
add
jnp
bound
mov
add
sahf
ja
add
repnz
lock
add
sub
into
lea
xlat
dec
add
xor
dec
stos
lods
daa
add
add
sarl
add
mov
add
pop
test
add
je
cs
add
xchg
fisubrs
xor
mov
add
add
rolb
add
add
std
cwtl
fistpl
adc
cmc
xlat
icebp
mov
xchg
sub
jle
inc
add
add
mov
bound
mov
add
into
leave
xchg
xor
inc
jo
lods
add
mov
jne
dec
sbb
fildl
or
add
add
add
jmp
test
nop
add
ret
add
sbb
add
cli
je
inc
add
add
je
rolb
xlat
int
adc
ds
add
jmp
add
out
adc
dec
into
pop
repz
pop
push
bound
mov
fistpl
sub
add
outsl
inc
inc
add
js
cld
sbb
ret
push
xor
or
add
cmp
aas
int3
adc
mov
lea
cmc
lret
add
mov
call
and
pop
in
sbb
pushl
and
mov
mov
add
cmp
imul
je
je
add
add
pushf
stc
sbb
dec
jnp
add
addb
popf
mov
sub
add
in
js
or
add
add
add
std
inc
add
jmp
pop
pop
mov
push
je
dec
mov
adc
pop
jmp
add
mov
add
rolb
add
mov
cwtl
or
test
pop
xchg
xlat
stos
sbb
stc
cmp
js
mov
notl
add
sbb
pop
mov
fs
cmpsl
sub
inc
add
add
call
fxch
lds
mov
scas
cmp
aad
mov
dec
dec
out
adc
movb
lcall
sub
add
push
test
aas
rolb
mov
and
sbb
and
mov
add
add
sbb
int
add
and
add
jo
push
sub
movsb
add
in
call
mov
mov
inc
pushf
sti
inc
add
or
add
add
add
add
add
adc
push
in
cmpsb
add
cmc
out
add
mov
pop
sti
out
int
add
cmp
add
add
leave
mov
push
add
dec
push
add
add
les
xchg
fbstp
add
cmp
mov
movsb
add
add
add
add
rolb
sub
and
mov
or
fstpt
mov
add
push
jae
add
inc
mov
je
test
ja
test
lahf
mov
aam
fisttpll
adc
jae
add
fisubrs
add
add
icebp
rolb
add
loopne
pushf
pop
pop
test
out
pop
pop
mov
out
add
add
cmp
lcall
daa
test
add
xor
es
xchg
jnp
add
loope
jns
mov
lahf
push
add
mov
les
push
add
rolb
mov
addb
pop
imul
adc
sub
mov
mov
cltd
fdivr
xor
push
add
add
jle
jmp
add
mov
fiadds
add
push
push
add
add
outsl
int3
mov
dec
aas
sub
icebp
mov
add
mov
aad
lock
cli
and
adc
sub
ret
cmc
cld
and
cmp
test
mov
xchg
add
cld
orl
pop
stos
test
add
inc
cmpsl
leave
adc
mov
add
stc
mov
scas
loopne
loope
add
clc
add
mov
mov
dec
pop
add
mov
adc
sbb
push
and
test
fimull
xchg
xchg
sbb
dec
xchg
dec
cwtl
jns
xor
add
add
inc
pushf
stos
in
das
pop
cmp
mov
rolb
sub
inc
add
cwtl
loopne
push
data16
mov
cmp
add
add
push
fadds
add
mov
add
mov
cmp
add
xor
xchg
add
add
das
cltd
leave
mov
imul
push
xchg
add
inc
stos
lods
jbe
rolb
mov
pop
add
add
mov
flds
repnz
add
add
push
dec
dec
xor
jl
add
add
add
add
ffreep
in
or
jnp
cmp
push
add
inc
lret
imul
decl
mov
stc
je
sub
popf
or
cmpsb
add
push
dec
movsl
imul
add
int3
repz
add
data16
add
mov
jl
adc
test
sub
add
add
add
sbb
gs
add
jp
add
out
or
mov
cltd
pop
sti
push
add
pop
aad
xchg
adc
or
xchg
add
fisubl
rolb
add
xchg
pop
addb
dec
mov
add
js
dec
fwait
jmp
add
aam
insb
or
gs
adc
push
add
popf
bound
mov
movsb
add
enter
add
xchg
jne
repnz
mov
cmpsb
add
add
insl
sbb
ds
sar
les
inc
add
call
pop
daa
adc
mov
add
mov
scas
lahf
lds
xor
fstps
add
add
add
mov
add
add
add
roll
add
add
decl
rolb
inc
xchg
add
adc
rolb
aas
stos
test
outsb
daa
cmp
pushf
fsubrl
pand
inc
and
or
inc
add
aas
mov
into
cmpsl
add
xor
in
mov
push
add
add
pop
add
outsb
rcrl
add
mov
add
js
jo
shr
cltd
insl
mov
das
inc
add
add
or
inc
add
add
add
add
add
add
adc
sub
movb
add
mov
or
mov
cmpsl
adc
arpl
add
mov
aam
dec
sti
cwtl
adc
mull
dec
sahf
cmp
add
add
xchg
add
mov
add
js
add
add
add
sub
hlt
add
dec
push
add
rolb
xchg
add
pop
add
add
push
xor
cmp
push
add
mov
mov
ret
outsl
daa
mov
sahf
outsl
sub
mov
add
xchg
stc
sub
sbb
addb
add
add
add
icebp
out
aam
pop
xlat
pop
jle
add
mov
mov
add
addb
repnz
bound
mov
in
je
push
bound
mov
mov
adc
xchg
add
mov
sti
mov
fistps
testl
mov
out
jb
popf
arpl
cld
out
fidivrs
imul
test
jl
add
mov
mov
mov
push
nop
add
push
add
mov
das
adc
test
add
push
add
daa
dec
pusha
add
push
adc
add
clc
ret
lret
cmp
mov
mov
pusha
add
fmuls
mov
int
cmp
add
add
lahf
test
mov
pushf
movsb
add
cmc
sub
fcoml
mov
fistpl
jbe
add
fists
ljmp
pop
adc
adc
pop
hlt
add
mov
lods
adc
add
add
push
jmp
xor
mov
data16
add
adc
js
sbb
iret
mov
add
nop
add
push
adc
mov
mov
add
push
add
mov
rolb
mov
add
sbb
insb
adc
add
mov
add
cwtl
jge
pop
mov
and
in
xor
cs
cmp
gs
cmp
add
add
stc
icebp
int
add
repnz
ja
mov
outsb
or
jmp
sti
cmpsl
fwait
hlt
add
sti
scas
mov
and
add
xlat
js
add
test
ret
push
add
jecxz
hlt
add
add
xchg
add
adc
dec
pop
mov
push
add
iret
mov
inc
add
add
sbb
in
mov
cmp
mov
cmp
add
add
testb
inc
add
cwtl
or
lret
ljmp
mov
push
dec
call
ja
ljmp
jmp
lods
mov
clc
orl
add
fistpl
imul
dec
or
rolb
repnz
jbe
dec
mov
jns
inc
add
xor
sub
xor
or
push
iret
jecxz
add
push
add
rolb
call
xchg
cmpsl
shll
add
std
mov
fsubs
ret
jl
es
push
add
mov
add
push
jle
pop
add
add
add
push
fimuls
add
xchg
mov
stos
cwtl
jecxz
or
add
mov
aad
xchg
por
xor
add
mov
sahf
movsl
pop
adc
cmpsl
xor
add
aas
jl
pop
cmp
add
add
fcmovb
testl
add
insb
leave
cmpsl
clc
or
add
add
xchg
and
cmp
add
subl
add
pop
inc
add
mov
add
add
and
mov
repz
ljmp
push
and
jbe
xchg
add
add
add
lcall
add
mov
in
lahf
xor
add
sub
stos
jge
add
jl
loop
inc
add
sub
mov
gs
add
mov
push
mov
lods
and
fcompl
add
movsl
rolb
subl
add
shll
xor
fcoml
pop
iret
je
bound
mov
arpl
add
mov
push
add
add
add
add
mov
fimuls
nop
add
xor
add
mov
rolb
enter
add
add
sbb
imul
xor
inc
or
sbb
add
pop
sbb
add
sbb
je
out
daa
int3
shl
add
add
add
std
or
jae
jecxz
or
lea
jbe
xchg
rolb
add
fwait
lods
rolb
pop
scas
mov
repnz
ficompl
and
adc
rolb
push
sub
add
mov
insb
jp
add
add
jmp
add
xor
outsb
inc
push
add
adc
mov
add
adc
mov
aaa
cld
pushl
mov
add
addb
lcall
je
mov
sbb
movsl
loop
ret
pop
mov
popa
in
in
dec
stos
pop
cmp
add
inc
add
xor
add
xchg
add
add
out
gs
inc
add
testl
add
dec
aas
lds
jl
insl
loop
arpl
xor
add
sbb
loop
xchg
addb
movb
out
sbb
xchg
pop
mov
aaa
push
add
inc
in
pushf
sub
data16
stos
sub
mov
fcomp
sbb
mov
loopne
ret
xor
jecxz
or
dec
rcll
push
add
inc
add
add
inc
add
add
loop
xchg
lods
pop
pop
icebp
or
in
add
rolb
stos
xlat
mov
jb
cmp
lcall
dec
lea
nop
add
popf
xor
xchg
fcoml
add
or
sub
int3
loopne
jbe
pop
add
pop
movsl
cmp
test
add
xor
lock
sbb
or
add
inc
sahf
sbb
cwtl
and
or
imul
fistpl
fstpl
mov
add
mov
mov
dec
cld
cmpsl
pushf
fwait
inc
flds
cmp
adc
popa
insl
rol
lret
out
cmp
mov
add
jbe
imul
add
inc
pop
add
mov
add
add
and
mov
push
add
xchg
add
add
xchg
or
inc
add
add
add
sub
add
mov
add
xchg
xor
lret
xchg
jg
xor
sbb
and
testb
jnp
add
les
inc
add
xor
dec
nop
add
insl
jge
add
dec
xchg
pop
inc
add
xor
xchg
add
pop
hlt
add
or
add
add
add
add
add
add
pusha
add
lods
movswl
jmp
repz
add
mov
xlat
sub
into
cmp
mov
add
dec
cmc
sti
out
sub
inc
divl
cltd
cmp
jecxz
pop
pusha
add
mov
mov
add
test
add
hlt
add
adc
jno
mov
rolb
push
xor
mov
jecxz
add
mov
add
sub
hlt
add
lock
add
mov
popa
dec
out
shrl
sbb
cli
and
xchg
test
lods
stc
lea
jbe
dec
jp
test
jns
add
pop
jge
scas
bound
mov
add
lds
and
mov
cld
inc
add
arpl
cmovbe
sub
mov
xor
pop
add
xchg
add
add
dec
jecxz
mov
mov
push
add
mov
xchg
mov
add
scas
std
pop
mov
aam
or
pop
aad
pop
push
add
add
rolb
cmpsb
add
pop
stos
scas
inc
pop
int
inc
add
add
scas
inc
add
enter
pop
sbb
mov
add
sub
xchg
add
stc
mov
add
inc
add
xchg
in
inc
add
add
sbb
movb
data16
inc
add
pusha
add
add
jns
cld
nop
add
cmp
mov
cmp
add
loopne
mov
sbb
fisttps
xor
je
jg
add
pop
sbb
loopne
mov
add
fnstsw
inc
add
add
aad
add
push
add
mov
add
icebp
pop
cs
mov
add
add
cmp
jge
add
add
mov
jns
mov
mov
dec
enter
cmp
adc
int
add
jmp
add
mov
push
testb
add
mov
add
add
add
dec
lret
lods
inc
add
pop
std
jmp
add
mov
lar
mov
cmp
add
mov
jp
inc
add
js
cld
mov
dec
fcomp
in
pop
xor
jne
and
mov
mov
lcall
xchg
add
add
adc
add
add
repz
jg
add
add
cmpsl
mov
mov
sbb
and
mov
mov
add
mov
jmp
add
jne
add
les
sti
jnp
scas
in
inc
add
adc
subl
add
push
add
jns
pushf
fimull
out
aam
mov
inc
pusha
add
mov
add
xor
xchg
or
adc
mov
sbb
add
or
push
or
xchg
dec
inc
xchg
add
inc
add
inc
add
rcll
push
add
add
add
cmp
add
add
add
add
or
add
fwait
xor
scas
push
imul
dec
add
clc
adc
or
sub
add
xchg
adc
in
add
daa
mov
movb
add
add
test
das
push
aaa
out
les
stos
out
push
jp
jb
mov
add
add
jae
data16
mov
cmp
add
sbb
mov
inc
add
mov
les
cmp
add
jmp
add
and
mov
mov
add
mov
pop
repnz
xchg
or
cmc
lret
pushf
jo
adc
int3
stos
lret
into
cmp
incb
leave
jl
mov
sub
add
loope
add
rolb
pop
insb
sub
add
fisubrl
ds
add
sub
sub
xchg
add
sbb
push
add
mov
add
call
sbb
add
fs
add
mov
aam
fisttps
dec
inc
mov
stc
add
cld
push
int3
mov
add
push
add
add
out
cld
loop
mov
push
sbb
add
and
addl
imul
add
xchg
push
loope
loop
subl
add
jbe
das
dec
ljmp
movsl
inc
add
or
jmp
inc
or
enter
add
int
xor
out
adc
sbb
mov
sub
stc
pop
loop
jbe
fwait
xchg
push
add
add
test
out
cmp
sqrtps
mov
mov
je
jae
add
fscale
xor
add
sub
or
add
test
add
and
std
rcll
mov
addb
mov
add
add
rolb
add
mov
and
mov
push
jne
cmpsb
add
in
mov
dec
sbb
rorl
std
jmp
icebp
jb
in
push
add
xor
fnstsw
xchg
add
push
xor
jge
lahf
xor
js
add
mov
mov
sbb
gs
xchg
add
out
jl
xchg
or
popf
sti
jecxz
add
jp
add
and
add
sbb
jmp
neg
dec
pop
mov
rcll
in
repnz
clc
das
mov
jno
push
mov
jo
ljmp
push
arpl
add
mov
add
mov
loopne
xor
mov
stos
dec
mov
movsl
pop
xchg
and
scas
push
add
in
cld
xchg
add
scas
aas
sub
add
imul
inc
add
jmp
cs
les
mov
add
mov
adc
jbe
or
scas
mov
movsb
add
iret
pop
mov
mov
mov
add
test
subl
jb
cwtl
aad
xchg
pop
test
xor
add
push
fisubrl
aam
sub
add
out
mov
add
pop
push
stos
pop
or
cwtl
faddl
xchg
add
add
push
add
add
add
add
clc
int
add
mov
add
add
stos
ds
mov
lret
mov
or
sarl
pop
cmp
stos
iret
jg
add
rcll
mov
lret
inc
out
mov
jae
adc
add
jge
add
add
andl
es
movsl
movsl
les
in
sbb
jae
sahf
in
lahf
add
int3
or
sub
loope
repz
pop
ljmp
les
mov
cmp
pop
fstpt
push
imul
add
add
add
fiadds
or
add
dec
pop
xlat
pop
adc
jmp
out
loopne
fnstsw
add
add
add
add
add
stos
scas
mov
add
add
add
mov
lahf
dec
js
inc
add
add
movb
in
adc
pusha
add
add
mov
cmpsb
add
dec
ljmp
loopne
mov
push
pop
mov
test
sbb
mov
loope
scas
add
dec
sbb
add
lods
mov
add
scas
cmpsl
jbe
cmp
decb
int3
mov
xchg
add
lds
add
fstl
sbb
push
add
out
add
mov
xchg
add
push
add
rolb
pushf
and
xchg
add
cmp
jg
add
fwait
sbb
cmp
sahf
incb
add
add
add
add
in
mull
add
repz
mov
add
data16
add
les
cmp
ljmp
mov
repz
imul
punpckldq
mov
add
xor
fwait
test
nop
add
add
add
push
stc
clc
std
mov
leave
or
imul
add
ret
aam
pop
je
add
mov
pop
and
mov
sub
push
xchg
insl
test
and
data16
loopne
aaa
jle
pop
cli
mov
add
repz
outsl
sbb
rolb
sub
push
sub
add
in
repz
add
leave
cmc
into
inc
add
lahf
dec
push
add
xchg
jne
dec
mov
add
mov
add
jnp
add
inc
sub
or
faddl
pusha
add
mov
add
dec
push
arpl
faddl
movsb
add
add
fwait
mov
push
mov
adc
dec
sub
add
clc
xchg
xchg
sub
out
jno
pop
ds
add
or
mov
xor
js
lock
out
add
add
xchg
xchg
add
mov
add
add
movsb
add
inc
xchg
mov
inc
fcmovnu
xlat
fnstenv
in
pop
dec
or
mov
ds
jmp
sbb
xor
cmpsb
add
dec
jl
testb
mov
mov
add
mov
sbb
xor
pop
outsl
repnz
sub
xor
or
and
hlt
add
add
repnz
insb
jmp
test
mov
addr16
hlt
add
add
lret
pop
mov
fldcw
cmp
add
push
add
dec
jp
add
add
movsl
lods
testl
cli
movsb
add
add
push
sbb
repnz
clc
ret
inc
add
add
or
movsb
add
leave
xchg
add
dec
into
push
inc
add
clc
into
adc
sub
add
mov
popf
lahf
pop
push
fcomps
add
add
popa
lahf
scas
or
pop
add
sahf
adc
dec
mov
xor
add
xchg
std
ljmp
inc
add
out
repnz
jecxz
push
repz
adc
xor
sub
aas
daa
mov
pop
lahf
xchg
xchg
add
xor
xor
sahf
jns
add
mov
lods
adc
dec
andl
add
fbstp
xchg
add
sub
xor
jno
push
add
mov
xor
imul
xor
xchg
add
push
add
outsl
mov
gs
add
aad
andl
addb
add
add
add
mov
push
add
sbb
insb
pop
add
add
das
sbb
lcall
add
add
and
cmpsl
bound
mov
add
add
add
addb
ja
jecxz
mov
add
addb
add
add
push
pop
xor
pop
and
mov
cmp
add
aam
pop
pop
stos
mov
or
add
inc
bound
mov
mov
mov
xor
sahf
xor
xor
mov
inc
add
int3
lods
sub
clc
or
pop
cmc
gs
add
jno
pop
jg
add
fxam
mov
ljmp
and
add
add
cmp
loop
repnz
add
add
fwait
jecxz
leave
mov
push
add
add
cli
xlat
punpckhdq
cltd
sahf
dec
pusha
add
dec
push
inc
add
ret
add
mov
add
sbb
inc
in
push
cltd
add
sbb
in
cmp
xor
repnz
add
add
lock
add
xor
add
jge
sahf
jle
add
dec
mov
sub
cmc
jb
add
lds
and
iret
loop
test
push
rol
inc
add
add
add
dec
push
add
add
mov
mov
lds
mov
mov
movsb
add
aam
loopne
imul
insl
xor
push
add
add
mov
push
add
rep
xlat
rcll
cmpsb
add
imul
rolb
mov
xor
add
outsb
push
inc
add
add
in
xor
repnz
add
adc
or
je
lea
dec
incl
movb
cld
das
xchg
add
jp
cld
dec
xor
add
add
cltd
repnz
adcl
pop
xor
push
xlat
or
add
es
ds
jge
xchg
add
dec
dec
shl
inc
add
pop
mov
dec
fcoml
add
push
add
and
mov
add
add
pop
call
popf
lret
mov
xchg
sti
movsl
test
add
add
ss
insb
dec
jmp
add
add
iret
or
push
add
add
xchg
mov
add
add
mov
inc
add
add
fsubp
mov
add
pop
jmp
add
mov
xchg
add
adc
cltd
lcall
enter
call
cmp
push
cmpl
cltd
cltd
mov
dec
repnz
out
xor
outsb
pop
in
ds
ja
mov
cld
fmuls
add
fld
add
sahf
adc
add
ret
add
lret
rolb
inc
jno
mov
mov
repnz
lret
push
add
dec
js
cwtl
lret
add
or
push
add
js
dec
clc
push
xor
add
add
insl
push
add
push
sti
xor
scas
adcl
add
mov
mov
sub
add
in
mov
pushf
iret
and
mov
inc
cwtl
enter
push
dec
adc
js
lret
cmc
out
cli
test
add
add
std
or
adc
das
xor
push
insb
add
imul
push
add
or
jne
add
repz
repz
add
mov
and
mov
add
stos
mov
lock
dec
mov
add
mov
lcall
jno
xorl
inc
add
push
push
add
aaa
pop
data16
add
pop
push
add
inc
add
je
add
out
add
mov
and
popf
mov
testb
mov
add
add
add
adc
lea
push
add
loop
ficompl
add
add
add
add
push
add
mov
loopnew
cwtl
pusha
add
add
mov
iret
rolb
inc
add
mov
xchg
lds
add
mov
lea
addb
dec
lock
xor
add
sub
dec
dec
xchg
ret
loop
cld
lock
outsl
xor
mov
add
test
dec
fdivrl
pop
push
add
jp
ret
jecxz
add
mov
pop
call
in
mov
xor
fidivl
adc
inc
add
pop
push
pop
sub
insl
mov
push
xchg
push
add
add
icebp
int3
iret
dec
xor
scas
lock
add
add
lods
test
xlat
adc
lret
clc
mov
add
insl
fs
add
push
and
mov
add
xchg
mov
or
add
lods
dec
jge
mov
add
fistpll
adc
jge
adc
ret
fwait
and
inc
add
add
add
xor
or
add
xchg
add
push
pusha
add
and
mov
mov
xor
sub
push
add
add
add
jmp
fimull
js
add
test
shll
mov
jne
sub
add
out
add
enter
repnz
mov
push
add
mov
inc
int
jno
clc
clc
clc
xor
stos
jns
subl
add
insb
or
loope
push
add
add
out
nop
add
insb
insl
xchg
hlt
add
pop
cmpsb
add
out
je
arpl
add
add
add
add
sub
mov
mov
cmp
xor
mov
jmp
imul
bound
mov
mov
ljmp
add
ja
scas
xchg
enter
cmp
add
sarl
sub
dec
push
mov
xor
std
mov
je
add
dec
test
sub
mov
push
pop
xlat
pop
pop
sahf
cmpsb
add
fldl
inc
mov
mov
add
lea
adc
sbb
icebp
enter
roll
add
xor
imul
push
add
imul
mov
push
add
xor
lahf
jge
ret
add
xor
add
cmp
insb
vmovapd
sub
std
mov
xchg
loopne
adc
mov
fs
add
push
daa
jge
add
inc
add
mov
lods
dec
shrl
add
jns
xor
xor
jne
jmp
and
mov
je
imul
aam
xorl
data16
push
mov
clc
outsb
addb
add
add
imul
jecxz
add
mov
add
sbb
push
add
out
int3
sub
arpl
inc
and
add
mov
xlat
mov
add
sbb
mov
add
push
add
cmp
test
cli
sahf
sub
insb
xchg
add
mov
adcl
add
in
in
push
add
xor
fldcw
add
mov
repnz
xorl
push
imul
adc
inc
int
add
pop
sub
mov
mov
out
cmp
push
add
add
add
add
add
movsl
pop
mov
inc
sbb
push
add
jbe
jg
jmp
dec
je
add
mov
mov
std
xchg
add
sbb
repnz
sbb
in
mov
add
test
inc
outsb
add
add
std
or
icebp
mov
out
in
cmovne
add
fldenv
nop
add
add
mull
add
add
cmc
dec
xchg
mov
sti
sbb
add
push
add
mov
out
add
mov
sbb
inc
testl
jmp
fstpt
pop
mov
pop
pop
fdivrl
mov
das
mov
jo
popf
mov
subl
add
lcall
mov
xor
in
in
add
add
test
xchg
push
add
sub
xchg
jmp
out
dec
pop
and
add
add
lcall
test
add
add
outsl
xor
add
sub
scas
pop
ljmp
je
jp
jp
fnstenv
js
and
mov
outsl
sub
cmp
mov
add
enter
add
bound
mov
add
add
outsl
mov
mov
in
jns
jle
sbbl
mov
add
add
mov
xorl
add
loopne
or
roll
repnz
pop
push
nop
add
cltd
addl
jecxz
and
add
les
mov
cs
cld
xchg
pop
xchg
xchg
add
mov
add
xor
add
rolb
loopne
add
aam
imul
mov
addb
mov
add
add
mov
lods
jge
popa
fimuls
add
mov
lcall
sbb
lret
movl
out
xchg
icebp
cmp
test
outsb
pop
loopne
sub
sbb
xchg
add
mov
xchg
dec
cmpsb
add
sahf
and
inc
add
or
add
add
js
add
mov
rolb
out
sub
dec
sbb
fwait
pcmpgtb
inc
add
mov
int3
or
scas
fldcw
pop
mov
add
fcom
sub
add
jb
adc
sub
pop
inc
add
scas
daa
sub
add
mov
repnz
add
imul
push
add
lret
cli
mov
scas
xchg
out
adc
push
add
popf
push
add
inc
xchg
repz
mov
xlat
jge
jp
add
and
pushf
bound
mov
and
mov
pop
mov
add
xchg
dec
fildll
add
or
xor
mov
dec
bound
mov
arpl
add
std
sbb
add
mov
add
stos
mov
add
out
in
mov
dec
imul
test
add
add
inc
data16
mov
sahf
adc
fcmovb
push
add
add
fbstp
add
add
sub
add
into
inc
dec
enter
aas
or
int
int3
jae
fimull
fsub
add
pop
jae
mov
insl
test
add
mov
push
and
cmp
pop
mov
cmp
out
les
xchg
add
sbb
jbe
sub
in
dec
mov
out
add
jnp
push
add
sbb
add
das
pop
adc
push
add
or
add
add
rolb
popa
and
pop
push
add
xlat
and
mov
and
pop
testb
lret
sbb
sub
movsb
add
cmp
add
add
mov
rolb
inc
dec
mov
push
add
in
and
add
aad
add
movsl
jmp
inc
add
pusha
add
insl
jg
pop
mov
xor
fidivrs
movd
mov
out
pop
aam
mov
or
out
adc
add
mov
icebp
into
push
sbb
push
add
cltd
pop
add
fistps
iret
xchg
aaa
adc
add
mov
add
dec
mov
jo
pop
xor
push
add
das
in
hlt
add
sti
lods
outsb
clc
or
cmp
jnp
sub
cld
inc
xchg
fmulp
movsl
push
and
mov
sbb
pop
jl
nop
add
push
arpl
add
rolb
xchg
or
mov
out
and
mov
add
dec
xchg
add
dec
add
add
inc
add
out
out
jbe
stc
mov
add
fldenv
stos
jmp
adc
clc
addb
addb
add
add
call
or
repnz
lods
mov
mull
mov
add
enter
or
add
jecxz
add
add
pop
addb
xchg
in
cmp
xor
mov
fadds
sbb
add
leave
push
add
addb
add
mov
pop
bswap
cmp
rorl
pop
fucomip
add
jge
jg
hlt
add
in
in
cs
jns
add
add
xor
in
aad
pop
frstor
mov
or
mov
push
add
cmpsl
push
add
data16
add
sti
fiaddl
testb
mov
fisubrl
mov
stc
dec
scas
add
mov
mov
fistpll
adc
xchg
add
inc
add
sti
cmp
flds
or
xor
das
jbe
ret
inc
add
addl
movsl
mov
jns
add
jnp
mov
scas
fsubrs
add
add
push
add
sti
push
sti
dec
adc
jno
add
add
xor
mov
add
push
and
lcall
mov
add
repz
push
add
add
push
add
lds
jecxz
aad
push
add
nop
add
and
xlat
pop
or
nop
add
add
sti
ja
mov
add
add
and
add
add
stos
add
mov
iret
dec
xor
push
add
pushf
xchg
idivl
pop
cmp
push
popa
dec
inc
sbb
add
out
jnp
enter
mov
dec
sti
loopne
add
mov
push
pop
imul
ret
add
fisttps
popa
cmp
push
jmp
aam
leave
inc
add
imul
pop
lods
sahf
imull
add
pop
sbb
ffreep
add
stc
sahf
dec
pop
popf
xchg
add
movb
add
cs
add
add
xor
cltd
sahf
repz
sub
cmpsl
gs
scas
xor
std
in
std
sub
mov
sub
addb
add
fstpl
lods
outsl
fcmovbe
in
cmp
in
cli
lcall
xor
jcxz
add
in
xor
sti
ja
add
cs
add
add
adc
add
mov
xor
lock
das
shr
xor
rolb
imull
cli
push
add
add
jl
and
out
stos
lahf
outsb
fcompl
and
add
cmpsl
adc
fwait
js
stc
bound
mov
dec
sub
cmp
jge
add
repnz
inc
mov
addb
add
and
mov
insb
test
mov
iret
fldenv
mov
jnp
inc
add
mov
add
fdivrp
push
jg
dec
lds
sbb
cmp
adc
jecxz
add
add
aas
push
add
add
pop
adc
mov
jg
adc
xchg
add
aam
inc
ljmp
add
in
pop
pop
add
pop
outsb
dec
mov
inc
add
lret
addr16
aas
xor
add
rcrl
add
in
cld
sub
pop
xor
add
inc
bound
mov
mov
push
call
ljmp
es
in
test
std
and
mov
add
addr16
xor
add
sbb
in
test
add
cmp
in
and
mov
loope
xchg
and
into
in
jnp
add
jg
and
sub
cmp
outsl
repz
add
and
hlt
add
loope
xlat
dec
mov
add
ljmp
dec
cltd
sbb
add
sahf
out
adc
dec
fwait
sbb
dec
ljmp
push
add
mov
add
enter
xor
add
out
xchg
add
add
cli
test
add
push
cmp
cmp
add
sbb
mov
add
js
add
add
jecxz
add
xor
cmpsb
add
or
push
add
stos
popf
jle
add
loopne
addr16
pop
or
addb
add
int3
mov
mov
add
mov
or
add
pushf
sbb
inc
add
data16
sub
add
inc
add
add
into
mov
inc
add
iret
aaa
clc
and
mov
jp
dec
mov
add
sahf
outsl
pop
jle
add
pop
mov
add
mov
add
sarl
inc
fldl
add
imul
mov
add
lods
jb
hlt
add
lea
pop
addb
out
mov
ret
movsb
add
cmp
add
add
add
add
iret
fisttps
mov
pop
lcall
rolb
push
add
dec
or
add
in
push
xor
sbb
mov
cmpsb
add
mov
and
mov
mov
mov
mov
or
add
push
loopne
push
add
pop
fnstsw
add
push
pop
add
lret
lcall
sbb
push
lds
inc
add
into
push
add
ljmp
push
add
add
sbb
add
adc
add
std
cmp
dec
data16
sub
add
dec
stos
in
mov
jb
int
add
add
fimull
mov
and
add
add
push
add
push
scas
movb
add
inc
add
call
push
push
add
mov
ja
push
daa
enter
addb
insl
pop
add
jge
jnp
loope
and
add
add
jg
add
dec
stos
lret
ret
mov
xchg
dec
adc
popa
lcall
popa
xchg
add
pop
ljmp
pavgb
adc
adc
jnp
xor
xor
dec
mov
inc
add
cli
lods
outsb
inc
movl
xchg
add
test
add
icebp
or
dec
dec
jmp
add
add
aad
add
cmp
xchg
adc
insb
jmp
ret
test
ja
add
mov
cs
xchg
inc
scas
add
cld
scas
cmp
add
mov
int3
xchg
add
out
loopne
inc
gs
jo
enter
lcall
scas
and
adc
push
aas
gs
loope
add
add
jo
cmpsl
fidivl
add
lds
add
cmp
popf
dec
jmp
add
add
mov
add
push
movsl
push
push
mov
loopne
mov
gs
xchg
xor
clc
and
mov
add
adc
fcomps
xchg
cmp
in
test
movsl
add
add
cmpsb
add
lret
mov
push
mov
sub
lods
sbb
loope
add
add
add
ljmp
jg
psubw
dec
inc
add
xor
sbb
and
mov
add
xchg
dec
add
mov
jne
add
mov
movsb
add
repnz
mov
jb
movsl
push
add
xchg
add
scas
test
lret
lods
aam
test
in
cltd
push
out
adc
add
test
in
inc
cmpsl
jmp
rcll
xchg
add
add
add
add
test
cli
jns
jmp
and
ja
jns
add
add
jle
and
mov
dec
mov
repnz
sub
push
ret
lods
popf
jl
rolb
mov
nop
add
xchg
ret
jae
mov
or
add
in
fdivrs
sub
cli
leave
push
add
push
add
add
add
mov
dec
lahf
rolb
int
mov
push
jb
out
pop
or
add
ret
mov
adc
or
inc
push
and
mov
cmova
scas
pop
dec
mov
add
jl
fwait
int
or
mov
loop
push
fidivl
sub
push
and
mov
add
outsb
in
jg
adc
sub
sti
dec
jl
xlat
mov
lcall
sbb
add
mov
and
mov
sub
aam
jg
xchg
movb
mov
hlt
add
xchg
add
sub
mov
add
mov
cltd
sub
pushf
pop
inc
add
nop
add
cmp
inc
push
add
mov
mov
nop
add
or
add
pop
jle
movsl
out
rcr
inc
add
cmp
add
js
add
push
cmp
mov
sub
fdivrl
jl
pop
cmp
std
sub
jb
mov
bound
mov
xchg
add
and
mov
add
add
jne
ja
xchg
add
push
add
mov
xlat
out
add
xchg
add
rcrl
add
push
scas
push
add
jne
movsl
hlt
add
rcll
ret
mov
inc
add
add
in
add
pop
cmc
addb
or
jo
ljmp
or
dec
mov
aaa
stos
inc
add
add
add
mov
pop
inc
adc
ja
mov
test
test
xrelease
xchg
add
push
add
loop
dec
aad
pop
xlat
jp
dec
xchg
add
stos
lods
sbb
add
xor
add
add
add
add
mov
jmp
or
add
add
mov
sub
inc
add
cmp
lcall
call
add
into
pop
sub
aas
insb
out
cld
out
hlt
add
cmpsl
inc
add
add
add
add
test
out
or
add
jnp
loopne
in
pop
add
dec
sbb
add
imul
lods
inc
jle
fisttps
add
scas
and
mov
pop
xor
add
ret
mov
mov
adc
sub
lods
call
inc
add
add
test
or
add
add
xchg
sbb
call
fdivrl
add
mov
push
popf
push
mov
jp
add
movb
jbe
rolb
sbb
add
mov
rolb
adc
mov
fildl
sbb
add
rolb
insb
or
add
add
mov
push
sti
mov
mov
add
and
mov
arpl
popf
xchg
add
out
outsb
decl
and
mov
add
lret
pusha
add
add
jge
sub
data16
xor
aas
push
add
xchg
js
mov
inc
movsl
call
add
aam
xor
pushf
jne
mov
iret
pushf
ret
push
insl
mov
or
dec
jmp
dec
inc
add
add
sahf
push
sbb
pop
and
add
add
mov
xor
jo
or
mov
jns
std
xlat
push
add
pushf
add
fldt
xchg
add
data16
loop
pop
pop
mov
jnp
sti
or
flds
adc
dec
and
mov
add
add
aad
add
add
xchg
mov
dec
mov
gs
mov
jp
mov
dec
leave
insb
or
mov
cmp
pop
adc
jb
popa
pop
cmp
add
add
or
cltd
pop
xchg
add
mov
cmp
nop
add
add
add
cs
mov
fsts
pop
and
mov
ficoml
mov
xor
or
call
stc
pop
out
sub
add
jno
pop
jnp
and
sbb
cmp
hlt
add
push
int3
jle
out
xchg
xor
movsl
jg
xor
rol
test
add
add
mov
inc
add
mov
mov
add
mov
rolb
mov
cs
in
pushf
mov
add
add
add
mov
ljmp
add
fsubl
add
add
cmp
xchg
outsb
pop
mov
sub
insb
fwait
add
cmp
lock
add
std
jnp
mov
pusha
add
add
mov
jmp
pop
xchg
mov
roll
add
dec
sub
add
add
das
adc
and
sub
pushf
loope
add
testb
sbb
or
cld
lret
dec
xchg
jmp
add
rolb
testb
in
aad
add
jmp
add
mov
adc
add
sahf
popa
ret
pop
divl
push
add
add
add
cmp
jmp
push
xchg
pop
hlt
add
psadbw
cmc
testl
xlat
xor
xor
jp
pop
pusha
add
add
mov
inc
add
shr
jge
add
add
lcall
mov
add
add
sub
popf
rolb
cmpsl
daa
cmp
sub
dec
inc
mov
add
out
push
add
in
subl
fldt
call
add
in
push
mov
fcom
cmp
arpl
mov
pop
in
lret
in
mov
rolb
push
and
pop
inc
add
push
add
push
add
or
add
add
cld
xchg
je
out
je
cmc
aaa
or
dec
mov
mov
add
or
movsb
add
add
sub
mov
lahf
mov
aam
fildl
add
add
add
mov
add
testb
roll
sbb
add
pushf
pop
and
mov
add
or
add
dec
les
fwait
jl
or
add
add
lods
dec
mov
ds
aad
add
inc
jno
cmp
and
add
add
add
mov
add
stos
stc
inc
xlat
and
js
sbb
rorl
mov
sbb
push
add
leave
add
les
mov
pusha
add
into
push
add
insl
mov
add
mov
adc
rolb
add
pop
in
jbe
out
lcall
add
push
in
lret
mov
sbb
add
cmp
add
nop
add
jnp
pop
and
add
pushf
jae
add
xchg
out
je
add
jmp
outsb
jb
out
mov
sbb
js
rolb
add
lods
loopne
sbb
mov
add
fists
add
add
add
add
add
out
xchg
add
sahf
sub
add
add
add
add
sti
pop
inc
add
clc
fucom
call
rorl
pop
mov
add
mov
add
inc
test
mov
push
add
jle
inc
inc
mov
inc
add
hlt
add
loope
add
jmp
add
pop
mov
xchg
add
mov
or
call
rolb
test
or
cmpsl
add
add
add
add
inc
push
add
fstpl
pop
xor
and
mov
add
add
test
xchg
cmp
mov
pop
xor
add
jb
fwait
add
dec
mov
xlat
lret
inc
add
push
add
enter
add
mov
mov
sbb
aad
std
ret
or
jge
dec
pop
jle
scas
rolb
sub
aaa
in
pop
enter
add
incl
add
sub
out
lock
js
add
call
adc
fdivr
mov
aaa
data16
enter
repnz
xor
sbb
add
aaa
and
jmp
push
cmpsl
movsb
add
add
add
mov
add
add
mov
cmpsl
sti
inc
lcall
and
mov
inc
mov
cli
mov
add
lock
repnz
add
add
add
cld
jmp
test
mov
add
add
dec
cmp
add
cmp
mov
add
mov
add
xor
xor
mov
add
imul
add
cs
dec
or
neg
add
mov
std
and
or
push
add
roll
add
sahf
jno
popf
fwait
xor
ret
repz
add
add
add
add
data16
add
jns
fwait
cmp
cmp
pop
rorl
fsubrs
push
jle
mov
push
mov
les
xor
xor
addr16
shrl
cli
or
loopne
xor
sbb
mov
lds
add
movsb
add
push
add
lret
in
xor
or
loop
mov
inc
add
add
xorl
addr16
jns
xchg
imul
rolb
lods
arpl
testb
sbb
adc
cmp
call
ret
test
add
jg
pop
pop
les
lock
inc
sub
add
mov
pop
daa
cmp
insl
rolb
outsb
loopne
outsl
out
or
int
ljmp
push
lods
sti
lcall
addb
imul
add
add
inc
add
aaa
inc
add
cs
pop
les
repnz
mov
add
mov
or
xor
inc
add
xor
add
add
sub
ret
and
add
fadd
cmpsl
stc
stos
fcompl
add
mov
xchg
pop
adc
ds
dec
into
inc
outsl
out
mov
xchg
jp
sar
adc
hlt
add
mov
or
inc
xor
fwait
push
sbb
jp
cmpsb
add
jp
add
jne
inc
adc
add
fld
xchg
jmp
add
lds
or
pop
js
adc
outsb
test
das
jbe
inc
xor
sub
pop
xor
int
add
add
add
rolb
rcll
push
add
add
dec
sarl
add
jno
jg
loopne
sub
dec
mov
rolb
inc
add
sbb
shrl
xor
lret
adc
sbb
sbb
push
add
ljmp
add
sti
leave
mov
sub
add
or
bound
mov
sbb
add
movsl
mov
jg
add
repnz
add
mov
add
mov
cmpsb
add
test
stc
out
add
add
movsb
add
outsl
xchg
add
into
int
add
lcall
sub
sbb
test
fisubs
add
popa
cli
dec
mov
stos
test
xor
pop
gs
aaa
int
xor
out
mov
sbb
sub
mov
add
jbe
pop
mov
stc
nop
es
add
test
nop
es
dec
pop
push
fildl
stos
stc
inc
add
add
jg
nop
cld
nop
jmp
add
mov
loope
leave
push
mov
add
mov
xlat
add
popf
imul
mov
xchg
ret
push
add
add
pushf
lea
push
mov
xchg
ret
cmpsb
pop
adc
mov
stc
nop
es
add
loop
nop
cld
nop
jmp
add
add
dec
add
dec
pop
push
mov
xchg
ret
psubusw
add
add
nop
cld
nop
jmp
icebp
flds
push
xor
add
add
nop
es
shrb
add
popa
stc
nop
es
in
inc
mov
add
add
sub
stc
nop
es
xor
add
in
mov
nop
cld
nop
jmp
add
pop
add
xchg
stc
nop
es
push
rcrb
adc
shrb
and
nop
cld
nop
jmp
flds
add
add
stc
nop
es
add
mov
and
fdivrs
nop
cld
nop
jmp
add
popa
stc
nop
es
or
add
add
jle
mov
push
mov
xchg
ret
flds
inc
dec
cmp
je
stc
nop
es
rorl
and
mov
fs
add
inc
int3
add
add
dec
inc
push
mov
xchg
ret
add
add
xor
xchg
sub
es
add
mov
push
push
mov
xchg
ret
mov
add
push
add
mov
stc
nop
es
or
bound
mov
add
nop
es
roll
push
mov
xchg
ret
sub
cmp
sldt
mov
sti
stc
nop
es
add
pop
jle
inc
add
je
add
stc
nop
es
fldenv
ret
cmpsl
inc
add
stc
nop
es
push
inc
add
or
add
stc
nop
es
add
imul
lea
stc
nop
es
add
add
mov
pop
cmp
mov
xchg
ret
add
movsl
mov
ret
cs
stc
nop
es
adc
sbb
ds
add
out
xchg
pop
ret
stc
nop
es
cmpsb
add
add
add
dec
fistl
mov
xchg
ret
xchg
icebp
add
add
add
add
es
sbb
add
mov
add
jmp
dec
dec
mov
das
add
push
mov
xchg
ret
rcrl
add
jns
movb
imul
and
cmp
add
add
dec
mov
stc
nop
es
test
add
sbb
add
nop
es
add
mov
orl
xchg
ret
dec
verw
add
nop
es
movsl
add
test
pop
add
subb
add
add
add
push
add
es
add
adc
pop
cmp
add
add
nop
es
xchg
add
and
push
fs
nop
es
xchg
add
add
or
add
stc
nop
es
add
add
call
stc
nop
es
sbb
add
mov
stc
nop
es
das
cmp
xor
jb
roll
inc
add
dec
add
int
inc
and
nop
es
add
cmpsb
sbb
mov
xchg
ret
sbb
add
add
stc
nop
es
sbb
add
out
add
xchg
stc
nop
es
add
add
add
pop
push
mov
xchg
ret
add
add
rclb
add
add
movsl
add
test
inc
leave
jmp
stc
nop
es
inc
or
add
mov
and
imul
stc
nop
es
add
add
push
add
xor
stc
nop
es
add
add
movsl
adc
lret
call
push
mov
xchg
ret
add
sbb
cld
nop
jmp
add
pop
add
clc
mov
stc
nop
es
add
add
add
or
stc
nop
es
dec
add
add
adc
adc
add
and
add
cmpsb
add
add
add
stc
nop
es
pop
add
and
xlat
aad
add
pause
cld
nop
jmp
push
dec
das
inc
movsl
add
push
mov
xchg
ret
add
mov
pop
jmp
stc
nop
es
mov
mov
stc
nop
es
add
jle
pop
pop
mov
es
add
sbb
add
leave
mov
stc
nop
es
sldt
xor
cmpsb
es
jb
add
mov
add
adc
or
sar
nop
es
or
sbb
imul
add
jmp
xchg
jle
add
aad
add
nop
cld
nop
jmp
add
fldcw
add
sbb
dec
or
sbb
add
add
lret
adc
cmp
stc
nop
es
add
pop
and
pop
add
jg
stc
nop
es
add
into
xor
push
mov
xchg
ret
add
adc
mov
push
mov
xchg
ret
es
add
sub
add
mov
inc
add
add
sbb
nop
es
rcrb
in
add
add
add
push
mov
xchg
ret
sbb
imul
movsl
xchg
in
push
nop
cld
nop
jmp
add
pop
inc
add
es
mov
xchg
mov
adc
nop
es
dec
add
xchg
roll
ja
add
sub
push
mov
xchg
ret
dec
add
out
adc
and
scas
and
push
mov
xchg
ret
add
das
xor
jmp
stc
nop
es
lods
or
movsl
cmp
stc
nop
es
add
push
mov
xchg
ret
pop
add
or
mov
movsb
stc
nop
es
add
add
mov
or
add
nop
es
add
stc
nop
es
xchg
pop
inc
fldenv
stc
nop
es
add
shlb
or
stc
nop
es
pop
das
inc
imul
push
stc
nop
es
sbb
add
add
add
lock
add
adc
lret
call
scas
fiaddl
xchg
ret
inc
add
lret
jne
stc
nop
es
add
mov
add
nop
es
add
or
add
mov
stc
nop
es
add
add
add
mov
subb
add
das
mov
pop
stc
nop
es
jle
add
pop
inc
add
cs
nop
es
inc
rolb
int3
push
push
mov
xchg
ret
add
pop
add
add
rolb
add
mov
add
stc
nop
es
pop
pop
add
add
mov
push
mov
xchg
ret
int3
mov
adc
cld
nop
jmp
sub
lods
or
add
mov
nop
es
add
imul
sub
add
add
dec
adc
nop
es
jle
icebp
inc
ds
pusha
stc
nop
es
movsl
xchg
xor
ds
nop
cld
nop
jmp
addb
cmpsb
xchg
lret
movzwl
stc
nop
es
add
add
add
mov
xchg
ret
inc
push
je
stc
nop
es
lods
inc
add
stc
nop
es
inc
add
add
fildl
sti
nop
cld
nop
jmp
xchg
ror
add
mov
xchg
ret
add
inc
cmp
es
and
add
lods
adc
jg
stc
nop
es
add
add
mov
stc
nop
es
sub
add
mov
stc
nop
es
add
add
out
pop
mov
stc
nop
es
lods
xchg
add
mov
add
nop
es
push
lods
outsb
push
push
mov
xchg
ret
sbb
add
xor
add
sar
es
add
icebp
or
jl
add
stc
nop
es
shrl
sbb
mov
sar
es
add
add
mov
add
cld
nop
jmp
fnstenv
add
inc
xor
push
push
mov
xchg
ret
inc
add
add
push
repz
sar
nop
es
dec
sarl
jbe
cli
dec
stc
nop
es
lods
add
add
adc
xchg
dec
mov
nop
cld
nop
jmp
add
add
jae,pt
ja
stc
nop
es
add
add
mov
stc
nop
es
add
jle
push
mov
xchg
ret
lods
cs
adc
sbb
stc
nop
es
add
xor
popf
add
stc
nop
es
inc
lret
mov
sbb
icebp
nop
cld
nop
jmp
addb
roll
pop
xorl
stc
nop
es
sbb
sub
test
nop
es
roll
add
rep
stc
nop
es
in
push
add
inc
add
cmp
add
stc
nop
es
mov
add
add
stc
nop
es
pop
add
add
stc
nop
es
or
add
mov
es
pop
add
cmp
xchg
add
add
stc
nop
es
in
roll
rorl
in
mov
inc
add
mov
stc
nop
es
addb
mov
add
mov
stc
nop
es
dec
and
imul
rcrl
mov
nop
es
pop
add
out
cmc
loope
add
jb
add
pop
or
add
push
stc
nop
es
add
add
dec
cmpb
nop
cld
nop
jmp
xor
and
add
push
mov
xchg
ret
add
add
lods
push
nop
cld
nop
jmp
add
movsl
pop
movsl
in
sub
inc
mov
into
inc
add
add
add
nop
jmp
add
inc
pop
mov
stc
nop
es
sbb
add
add
jmp
mov
add
stc
nop
es
add
dec
or
add
sbb
add
mov
add
stc
nop
es
push
sub
mov
cmp
es
sbb
xchg
mov
es
mov
add
shl
stc
nop
es
cmp
rolb
mov
push
fiadds
xchg
ret
dec
add
add
push
roll
xchg
ret
adc
in
add
lret
inc
add
mov
xchg
ret
add
add
add
nop
es
pop
add
add
mov
pop
mov
stc
nop
es
comiss
add
mov
lcall
ret
rcrl
or
stc
mov
nop
cld
nop
jmp
xchg
add
mov
nop
cld
nop
jmp
xchg
adc
add
mov
je
stc
nop
es
add
add
nop
jmp
movsl
inc
add
sldt
jp
test
clc
stc
nop
es
add
add
stc
nop
es
roll
sbb
jecxz
push
stc
nop
es
push
xchg
in
addb
and
je
adc
enter
stc
nop
es
add
icebp
add
movsl
dec
shr
push
mov
xchg
ret
and
add
add
mov
add
nop
es
das
inc
add
mov
add
add
stc
nop
es
add
test
pushl
push
mov
xchg
ret
or
add
stc
nop
es
push
xchg
inc
rcrb
push
add
arpl
stc
nop
es
add
test
xchg
ja
add
es
add
add
in
add
ljmp
add
add
xchg
inc
in
add
enter
xchg
ret
shlb
push
test
hlt
call
sbb
add
push
mov
add
jle
testb
sarb
dec
xor
jae
nop
jmp
add
add
cmp
add
rolb
ds
stc
nop
es
dec
add
add
mov
push
mov
xchg
ret
xchg
add
pop
inc
fimull
popf
lock
add
add
push
add
add
nop
es
sub
inc
lret
nop
cld
nop
jmp
int3
add
jle
add
push
inc
addr16
popl
jmp
add
add
ds
test
nop
cld
nop
jmp
add
add
jle
xchg
sbb
jmp
and
dec
lret
add
mov
stc
nop
es
rorl
inc
dec
sub
test
mov
xchg
ret
add
add
dec
clc
dec
inc
nop
cld
nop
jmp
mov
lds
xor
nop
es
add
add
add
jb
mov
add
add
or
stc
nop
es
dec
add
mov
nop
cld
nop
jmp
pop
add
movsl
or
lods
jns
or
nop
es
inc
das
add
out
xor
loop
stos
jne
stc
nop
es
and
ds
nop
cld
nop
jmp
add
das
movsl
jle
add
or
ror
dec
outsl
popa
fs
nop
es
sbb
in
add
xchg
add
test
add
add
push
stc
nop
es
add
movsl
inc
add
add
add
repnz
ljmp
shlb
add
add
stc
nop
es
ds
and
mov
xchg
push
mov
xchg
ret
add
add
add
push
stc
nop
es
xor
add
add
decb
jb
inc
adc
add
add
stc
nop
es
add
add
add
add
mov
stc
nop
es
push
mov
xchg
ret
push
mov
add
stc
nop
es
dec
xor
add
repz
nop
es
add
sldt
add
jbe
aaa
jecxz
add
stc
nop
es
add
push
add
inc
sbb
mov
inc
add
add
add
rolb
call
nop
es
lret
inc
add
sub
out
push
stc
nop
es
inc
adc
sbb
sub
add
push
and
nop
cld
nop
jmp
add
and
sbb
jbe
push
mov
xchg
ret
pop
add
adc
jne
stc
nop
es
xchg
dec
add
stc
nop
es
add
or
sub
cmp
call
idiv
incl
lods
add
jp
nop
cld
nop
jmp
jle
inc
sub
cmpsb
add
pop
push
mov
xchg
ret
adc
jle
add
add
jmp
stc
nop
es
add
cmp
add
cmpb
add
add
sbb
je
stc
nop
es
add
add
cld
nop
jmp
add
add
out
jge
stc
nop
es
add
add
xchg
inc
add
push
mov
cmc
mov
jg
add
add
xor
mov
add
stc
nop
es
add
add
add
add
nop
cld
nop
jmp
add
shrl
and
push
push
mov
xchg
ret
dec
inc
inc
jle
add
mov
add
movswl
stc
nop
es
add
jne
stc
nop
es
add
add
add
nop
es
add
add
xchg
add
stc
nop
es
add
mov
movsl
add
mov
test
push
mov
xchg
ret
push
sbb
sbb
add
stc
nop
es
lret
cmpsb
xchg
mov
enter
jmp
mov
add
cmc
call
out
jmp
mov
nop
es
cmp
add
int3
mov
in
add
add
push
xchg
add
and
add
cld
nop
jmp
lods
add
add
out
lods
stc
nop
es
add
push
sbb
add
add
nop
es
imul
xor
fstpt
nop
cld
nop
jmp
int3
mov
pop
push
mov
xchg
ret
add
add
push
lahf
add
stc
nop
es
add
add
das
push
push
stc
nop
es
lret
add
add
add
add
stc
nop
es
sbb
add
sbb
add
stc
nop
es
add
add
nop
cld
nop
jmp
inc
add
add
add
and
das
lea
nop
cld
nop
jmp
dec
add
add
dec
dec
loop
je
and
add
add
cmc
incl
addb
and
push
mov
xchg
ret
xor
ds
add
add
nop
es
pop
xor
repz
stc
nop
es
add
stc
nop
es
sub
roll
inc
add
popf
mov
nop
cld
nop
jmp
add
add
repnz
add
add
in
in
rclb
cmpl
shr
lcall
add
add
add
jbe
push
add
jb
test
inc
inc
inc
add
xchg
and
orl
test
nop
es
add
fstps
call
adc
inc
inc
add
test
nop
es
es
cmpw
nop
cld
nop
jmp
and
add
add
push
stc
nop
es
and
or
jle
inc
add
mov
pop
push
add
jp
les
add
ret
dec
and
stc
nop
es
inc
mov
mov
stc
nop
es
sbb
add
add
lea
mov
push
nop
cld
nop
jmp
movsl
add
add
icebp
outsl
es
nop
cld
nop
jmp
pop
add
sarl
rolb
xchg
ret
add
add
add
stc
nop
es
rcll
inc
imul
cmp
ret
add
add
add
inc
add
add
push
mov
xchg
ret
inc
add
lods
add
jne
push
mov
xchg
ret
shrb
shlb
add
push
stc
nop
es
mov
roll
add
push
inc
stc
nop
es
lods
add
jle
lret
add
nop
cld
nop
jmp
jle
add
pop
rolb
or
xor
cmp
ret
out
cmpsb
mov
mov
in
add
add
subb
add
in
add
sbb
nop
es
adc
add
add
add
mov
xchg
ret
mov
add
push
cmpl
nop
cld
nop
jmp
add
sbb
shl
stc
nop
es
out
sbb
lret
mov
xchg
ret
add
mov
bound
mov
xchg
add
mov
nop
jmp
add
sbb
add
je
or
inc
xor
stc
nop
es
add
mov
inc
sub
nop
es
sub
sbb
add
mov
add
bound
sbb
xor
add
repnz
add
xor
stc
nop
es
and
cmp
adc
jle
stc
nop
es
rolb
dec
sub
xchg
xor
es
push
icebp
sub
inc
add
decl
stc
nop
es
xchg
or
add
lea
push
mov
xchg
ret
add
add
stc
nop
es
add
pop
pop
sub
pop
scas
shl
nop
cld
nop
jmp
movsl
inc
add
subl
push
mov
xchg
ret
roll
stc
nop
es
mov
xchg
cmp
fimuls
or
inc
add
movsl
pop
pop
add
jne
stc
nop
es
add
sub
addb
and
mov
mov
stc
nop
es
add
push
add
and
stc
nop
es
das
in
mov
xor
stc
nop
es
or
inc
add
pop
add
cmp
nop
cld
nop
jmp
add
xchg
add
add
mov
nop
cld
nop
jmp
mov
mov
stc
nop
es
xor
add
push
nop
cld
nop
jmp
sub
int3
add
add
nop
cld
nop
jmp
add
add
mov
push
jo
loope
add
stc
nop
es
or
sbb
sub
sar
nop
es
add
cs
mov
push
mov
xchg
ret
add
add
icebp
test
add
not
stc
nop
es
lods
es
mov
mov
stc
nop
es
pop
add
cmp
mov
jle
sti
nop
cld
nop
jmp
es
add
lcall
imul
inc
inc
xor
imul
inc
add
jb
xchg
xchg
pop
add
fsubr
jge
stc
nop
es
out
rolb
call
nop
es
add
mov
add
stc
nop
es
add
in
push
push
mov
xchg
ret
add
sub
es
test
add
add
inc
add
cs
stc
nop
es
test
add
add
scas
shr
stc
nop
es
add
add
sub
push
mov
xchg
ret
rorb
push
add
mov
xchg
ret
add
add
pop
call
lock
add
pop
pop
mov
stc
nop
es
add
enter
es
or
sbb
push
push
stc
nop
es
out
das
lods
and
pop
add
xchg
add
sub
nop
cld
nop
jmp
push
add
pop
xchg
push
mov
xchg
ret
mov
xchg
xor
ficoml
in
outsb
pop
fwait
std
scas
test
add
add
add
add
jb
in
dec
icebp
add
add
rcr
dec
push
mov
xchg
ret
inc
in
xchg
add
add
aaa
hlt
add
dec
mov
stc
nop
es
add
add
push
mov
xchg
ret
cmpsb
xor
mov
outsb
push
nop
cld
nop
jmp
or
sub
add
add
int3
mov
stc
nop
es
add
pop
pop
es
mov
stc
nop
es
push
add
push
jle
mov
nop
cld
nop
jmp
add
lret
cmp
add
nop
es
xchg
mov
dec
sldt
stc
nop
es
add
or
nop
jmp
pop
sbb
sbb
add
and
mov
stc
nop
es
add
add
sub
nop
jmp
add
sbb
adc
mov
leave
mov
stc
nop
es
add
add
xchg
xor
clc
lea
stc
nop
es
add
add
or
movsb
add
loop
push
mov
xchg
ret
shr
mov
add
into
push
stc
nop
es
pop
mov
add
add
and
nop
es
xchg
push
pop
out
add
into
and
stc
nop
es
add
cs
add
add
cmp
es
add
xchg
add
aaa
inc
add
jns
stc
nop
es
syscall
xchg
add
inc
fisttpl
nop
jmp
movsl
cmpsb
dec
add
adc
bound
mov
mov
nop
es
add
add
cmp
nop
es
mov
in
add
mov
jb
add
add
xor
scas
test
nop
cld
nop
jmp
out
add
pop
roll
sbb
mov
push
push
mov
xchg
ret
add
subb
stc
nop
es
rolb
shlb
ret
mov
xchg
ret
add
add
vpunpckhdq
mov
xchg
ret
pop
add
add
and
mov
stc
nop
es
add
rolb
hlt
add
or
stc
nop
es
lret
lret
push
stc
nop
es
pop
cmp
out
imul
or
mov
nop
cld
nop
jmp
add
add
adc
add
add
stc
nop
es
imul
add
jle
mov
stc
nop
es
add
add
pop
and
cld
nop
jmp
add
add
add
mov
fisttpll
jb
add
out
pop
pop
pop
add
call
stc
nop
es
cmp
sbb
xchg
jle
les
push
mov
xchg
ret
inc
add
dec
pop
xchg
add
int3
inc
add
movsl
and
flds
aas
test
nop
cld
nop
jmp
add
xchg
cld
nop
jmp
add
and
add
stc
nop
es
das
mov
add
xchg
in
add
into
pop
stc
nop
es
mov
inc
xchg
pop
pop
push
mov
xchg
ret
and
add
xor
sub
sub
cmp
ret
add
xchg
add
pusha
stc
nop
es
add
test
add
adc
cmc
pushf
push
push
mov
xchg
ret
xchg
add
dec
icebp
pop
adc
add
mov
stc
nop
es
mov
stc
nop
es
imul
add
nop
es
out
add
push
add
mov
jl
xor
loope
decl
ror
cmpsb
add
push
pop
stc
nop
es
push
xchg
xchg
adc
add
mov
nop
cld
nop
jmp
add
mov
cmp
sar
nop
es
dec
add
addr16
stc
nop
es
pop
inc
add
add
nop
es
dec
add
adc
cmp
mov
inc
add
pop
out
add
add
fldenv
popa
add
mov
xchg
ret
mov
imul
repz
es
pop
add
add
xchg
mov
add
add
nop
es
lods
or
adc
test
nop
es
out
add
add
nop
cld
nop
jmp
add
xchg
lret
add
dec
push
mov
xchg
ret
icebp
inc
rorb
sbb
mov
push
nop
cld
nop
jmp
add
mov
sbb
nop
jmp
inc
add
cmp
xchg
jb
push
or
mov
stc
nop
es
in
sub
cmp
nop
es
pop
add
pop
add
mov
stc
nop
es
sub
mov
montmul
cmpsb
add
stc
nop
es
add
add
add
add
stc
nop
es
add
cmpsb
sbbb
mov
movsl
stc
nop
es
add
add
mov
stc
nop
es
cmp
sub
nop
add
push
stc
nop
es
das
in
das
sub
add
or
push
mov
xchg
ret
add
mov
jnp
nop
jmp
add
add
add
sub
ss
stc
nop
es
add
add
scas
mov
stc
nop
es
or
dec
int3
dec
adc
push
mov
add
add
addb
rolb
add
stc
nop
es
imul
adc
dec
push
stc
nop
es
add
rolb
push
push
mov
xchg
ret
pop
xsha1
cmpsb
or
add
fucomi
xor
es
add
xor
add
add
xchg
pop
in
add
es
mov
add
add
es
sbb
add
and
mov
add
mov
stc
nop
es
imul
imul
cmp
mov
xchg
ret
roll
inc
icebp
test
add
dec
xor
nop
cld
nop
jmp
inc
pop
mov
push
mov
nop
es
add
add
sub
sbb
sbbb
add
cmp
jne
stc
nop
es
add
add
push
jns
mov
iret
aaa
leave
add
int3
pop
add
add
in
inc
pushf
ret
stc
nop
es
push
sub
or
nop
es
push
sub
out
mov
movzwl
stc
nop
es
flds
sbb
test
les
stc
nop
es
add
add
mov
xchg
ret
cmp
add
mov
leave
sub
lock
ljmp
add
in
dec
or
jle
enter
jb
or
add
add
cmpsb
imul
paddsw
incl
adc
or
stc
nop
es
add
adc
cld
nop
jmp
add
add
mov
inc
jmp
adc
cld
nop
jmp
cmp
adc
or
cld
nop
jmp
push
add
add
fnstsw
stc
nop
es
add
rclb
jne
stc
nop
es
addb
xchg
out
stc
nop
es
pop
rolb
movl
push
mov
xchg
ret
add
imul
jb
icebp
add
adc
lods
cmp
mov
adc
nop
es
adc
add
add
jne
stc
nop
es
test
dec
gs
add
stc
nop
es
lods
add
imul
jno
test
lods
push
mov
xchg
ret
add
add
pop
add
testb
add
mov
stc
nop
es
mov
hlt
add
cwtl
push
push
mov
xchg
ret
mov
add
add
add
test
mov
rolb
xchg
ret
in
add
add
pop
push
stos
mov
stc
nop
es
mov
inc
sub
and
stc
nop
es
add
loop
fwait
add
push
mov
xchg
ret
rolb
movsl
das
mov
jg
stc
nop
es
and
add
in
movsb
lds
add
add
add
add
nop
es
or
add
fstps
add
movb
nop
es
xchg
lret
add
push
push
mov
xchg
ret
push
es
pop
cmp
add
jl
sbb
nop
es
in
add
add
add
add
nop
cld
nop
jmp
add
cs
xchg
push
stc
nop
es
add
add
cmp
nop
cld
nop
jmp
add
jl
dec
add
nop
es
add
add
push
enter
jmp
cmp
ret
inc
inc
rolb
add
jb
inc
inc
add
mov
ret
stc
nop
es
pop
add
inc
inc
push
add
push
stc
nop
es
add
flds
add
add
outsl
mov
nop
cld
nop
jmp
add
add
jnp
es
inc
add
add
jl
nop
cld
nop
jmp
add
ds
lock
nop
cld
nop
jmp
add
in
pop
lods
add
stc
nop
es
cs
mov
mov
xchg
ret
cmp
movsl
inc
add
add
movsb
stc
nop
es
add
push
stc
nop
es
add
add
stc
nop
es
add
jle
add
adc
mov
jb
pop
icebp
mov
xchg
inc
add
mov
stc
nop
es
dec
add
add
cs
lock
add
inc
add
xchg
cmovne
mov
stc
nop
es
add
add
add
add
jae
nop
es
das
icebp
out
icebp
incb
popf
stc
nop
es
ds
insl
je
stc
nop
es
add
lods
xchg
add
cmp
inc
add
adc
add
out
cld
jne
stc
nop
es
pop
mov
mov
stc
nop
es
add
dec
lods
add
stc
nop
es
add
mov
xor
push
mov
xchg
ret
jle
add
mov
xchg
ret
dec
lods
add
add
inc
push
mov
xchg
ret
mov
rcrl
add
es
add
movsl
add
adc
mov
icebp
nop
cld
nop
jmp
and
add
add
add
cmp
es
add
add
push
add
add
mov
stc
nop
es
lods
or
add
shl
push
add
jne
stc
nop
es
add
add
rclb
and
cmp
ret
pop
add
add
jns
mov
add
inc
jle
sbb
nop
es
add
sbb
add
and
cmp
nop
cld
nop
jmp
add
pop
xor
pop
push
stc
nop
es
rcr
add
push
movsl
pop
adc
or
imul
es
sbb
pop
mov
nop
es
sub
push
movsl
add
or
nop
jmp
pop
add
xchg
sub
add
add
mov
stc
nop
es
add
in
xchg
mov
es
and
rolb
bound
mov
adc
notl
popf
mov
stc
nop
es
add
push
add
add
mov
push
mov
xchg
ret
pop
add
pop
add
add
push
nop
cld
nop
jmp
imul
das
push
nop
es
add
cvtpi2ps
ret
add
mov
add
add
add
call
stc
nop
es
xor
lret
jbe
or
loope
call
add
add
or
movsb
stc
nop
es
movsl
add
add
sbb
push
mov
xchg
ret
xchg
pop
add
stc
nop
es
add
ds
cmpsb
add
add
add
stc
nop
es
sbb
add
test
add
dec
lock
add
xchg
das
add
add
mov
push
mov
xchg
ret
mov
js
push
mov
xchg
ret
pop
add
icebp
add
sbb
pop
stc
nop
es
test
inc
add
add
or
es
sbb
add
push
add
adc
es
add
add
xor
jb
push
pop
add
add
add
mov
cld
nop
jmp
inc
shlb
add
stc
nop
es
add
add
add
stc
nop
es
add
inc
xchg
add
add
pop
push
mov
xchg
ret
das
add
add
push
fstps
add
add
nop
es
add
shrl
inc
in
stc
nop
es
test
add
dec
mov
int3
jecxz
add
add
add
sbb
jb
data16
stc
nop
es
add
add
dec
cmp
nop
es
inc
adc
icebp
das
add
nop
es
in
inc
or
pop
roll
adc
jmp
jb
add
inc
sbb
mov
clc
stc
nop
es
add
push
add
mov
xchg
ret
inc
inc
pop
jle
out
mov
stc
nop
es
pop
add
adc
stc
nop
es
add
test
std
add
nop
cld
nop
jmp
mov
test
add
add
stc
nop
es
add
fldt
nop
cld
nop
jmp
cs
test
rorb
mov
xchg
ret
mov
rolb
mov
push
mov
xchg
ret
sbb
decl
push
mov
xchg
ret
add
fstps
cmpsb
add
mov
stc
nop
es
xor
add
jns
sti
stc
nop
es
pop
mov
pop
js
jne
stc
nop
es
das
jle
movsl
add
or
jb
cmp
in
add
lret
stos
mov
stc
nop
es
das
dec
add
add
add
ret
pusha
stc
nop
es
push
pop
add
adc
pop
movzwl
stc
nop
es
push
add
cmpsb
xchg
mov
xorl
stc
nop
es
pop
add
mov
stc
nop
es
or
add
rcll
push
adc
stc
nop
es
mov
add
stc
nop
es
inc
icebp
add
add
nop
es
inc
xor
jnp
movb
mov
cmp
ret
add
dec
add
pop
add
nop
cld
nop
jmp
jle
sub
add
add
lods
add
nop
cld
nop
jmp
add
add
add
imul
add
and
nop
es
add
add
add
jnp
stc
nop
es
add
or
inc
xchg
add
lods
push
mov
add
inc
fadds
add
add
add
repz
mov
nop
cld
nop
jmp
sbb
inc
xor
lods
push
push
mov
xchg
ret
inc
add
push
call
stc
nop
es
add
ret
add
nop
es
push
dec
add
imul
push
push
mov
xchg
ret
add
add
les
nop
es
jle
add
add
pop
flds
xchg
ret
add
or
add
pusha
stc
nop
es
add
pop
pop
add
inc
add
cmp
arpl
nop
es
add
rolb
mov
push
add
mov
nop
cld
nop
jmp
add
scas
pop
nop
cld
nop
jmp
cs
pop
dec
inc
add
add
enter
es
add
imul
sub
add
icebp
inc
add
inc
add
dec
add
dec
call
jb
imul
xchg
fisttpll
mov
add
nop
es
dec
pop
mov
inc
push
mov
xchg
ret
add
inc
imul
nop
es
pop
inc
add
mov
adc
nop
cld
nop
jmp
add
add
stc
nop
es
add
add
add
or
cld
nop
jmp
add
icebp
or
add
pushl
push
mov
xchg
ret
add
add
sub
add
stc
nop
es
push
cwtl
mov
stc
nop
es
xchg
cs
imul
ljmp
push
xor
lods
lret
dec
mov
stc
nop
es
pop
add
sbb
pushf
push
mov
stos
add
add
mov
leave
arpl
add
imul
pop
outsb
push
add
jo
and
mov
roll
add
push
add
and
add
add
leave
xstore-rng
cmpsl
rcll
sub
add
mov
add
add
add
add
jnp
add
in
mov
mov
and
dec
jmp
add
adc
stos
inc
dec
xchg
ljmp
add
inc
add
out
add
addl
add
enter
loope
add
add
or
add
mov
inc
sub
xchg
outsl
or
push
repz
add
das
add
clc
xor
popf
lret
add
push
icebp
cmp
int
xor
add
mov
add
mov
mov
push
add
or
lds
and
mov
add
repz
jge
pop
jl
add
cmp
in
add
xor
mov
das
setle
sti
cmp
add
add
adc
stos
jge
add
jbe
xor
inc
add
clc
inc
dec
xchg
add
add
mov
fwait
outsl
cmp
jl
ret
cmp
add
add
aam
cmp
push
rcrl
in
cmc
out
cltd
das
mov
loop
dec
cmpsl
add
mov
push
in
stos
into
cmp
add
mov
sbb
add
cmpsl
push
into
xlat
mov
pusha
add
add
adc
repnz
add
inc
add
jno
add
dec
jns
lahf
pop
int3
pusha
add
imul
je
nop
add
jb
push
add
add
movsl
dec
sti
test
xchg
mov
mov
lds
push
add
mov
cld
daa
and
mov
dec
stc
filds
add
dec
sub
add
repnz
add
dec
insb
test
insb
push
sub
adc
add
add
rolb
addb
jo
aad
mov
loopne
sbb
add
testb
sub
inc
dec
mov
jecxz
and
pusha
add
pop
fwait
insl
dec
mov
xchg
lea
scas
or
cld
push
add
add
or
xchg
add
push
add
add
idivl
pop
jl
dec
in
mov
xchg
add
inc
cmpsl
inc
add
add
pop
mov
movsl
fdivl
mov
fstpt
sub
shrl
mov
push
add
push
add
xchg
add
das
cmpsl
adc
inc
add
cmp
fsts
addr16
les
pop
or
inc
lods
dec
cmpsl
imul
add
pop
mov
int
push
add
cmp
xorl
adc
add
icebp
js
popf
cmc
or
or
add
add
inc
icebp
push
add
push
add
fisubl
mov
pop
je
inc
into
xchg
mov
sub
out
aas
cmpsl
les
dec
scas
cmpsl
dec
rolb
fnsave
imul
enter
xor
add
nop
add
add
mov
stos
xchg
pop
cmp
imul
out
sbb
aaa
and
inc
push
mov
addr16
mov
dec
jns
xlat
adc
sbb
in
pop
lcall
imul
stos
loope
xchg
inc
add
scas
lea
jb
xlat
test
adc
and
mov
add
mov
add
jp
mov
pop
nop
add
add
jl
shll
pop
cs
and
jle
jne
xchg
scas
mov
xchg
add
dec
and
mov
xchg
add
out
pop
dec
push
add
add
add
aad
addb
and
mov
addr16
add
sbb
loope
sbb
jno
xchg
ror
dec
xchg
add
add
push
push
add
mov
repnz
leave
mov
add
das
adc
sub
add
add
jp
addb
add
mov
pop
out
fidivrl
cmp
add
dec
push
add
mov
add
add
das
fmuls
pop
int3
and
sub
inc
add
fistpl
add
lret
pop
or
aad
jmp
popa
fdivr
sub
fxtract
add
ja
push
adc
sahf
jb
je
jecxz
add
js
popf
push
add
inc
add
jne
rolb
popf
inc
add
inc
pop
movb
mov
dec
mov
xchg
rolb
rolb
sarl
push
insl
mov
xchg
add
sbb
cmpsl
or
push
dec
loop
movsl
mov
mov
fildll
dec
enter
ljmp
dec
jl
pop
dec
int3
mov
mov
and
mov
pop
hlt
add
test
push
add
xor
xchg
add
xchg
rolb
dec
mov
mov
insb
lcall
icebp
jno
and
mov
sbb
xlat
xchg
jp
add
add
imul
sub
bound
mov
cwtl
and
jp
xchg
add
inc
add
rolb
in
xchg
mov
lcall
push
ja
pop
outsl
test
push
out
jge
add
jnp
add
add
add
add
loopne
xchg
sbb
fldcw
es
add
dec
add
mov
add
add
jo
movsb
add
sbb
add
fucom
add
mov
mov
insb
stos
ja
roll
dec
jb
pop
pop
test
in
jg
add
mov
pusha
add
add
add
cmp
push
add
inc
out
mov
add
fstl
outsb
fcomps
fcmovnu
mov
popa
push
jmp
cmpsb
add
mov
jle
repnz
xchg
add
lahf
rolb
push
pushf
mov
das
push
or
pop
mov
xchg
add
leave
push
add
test
mov
in
fisubs
add
mov
addb
add
add
sub
stos
cwtl
pop
fstpt
pop
shr
sub
add
jp
add
add
add
push
add
mov
and
repz
jns
add
test
ficoml
call
mov
cmp
arpl
mov
clc
data16
mov
popf
pusha
add
xlat
mov
dec
addb
add
xor
dec
in
dec
ds
add
ds
jbe
sti
sbb
add
mov
add
add
das
mov
test
add
mov
popa
inc
fdiv
add
outsl
inc
add
out
pop
pop
jg
add
sbb
testb
pop
or
add
mov
add
sahf
arpl
mov
movl
add
pop
inc
mov
xor
jge
add
mov
testb
test
jl
xchg
lret
out
mov
inc
in
in
daa
sbb
add
push
add
add
cmpsl
data16
push
add
jno
testb
push
add
test
add
sbb
or
add
sbb
add
dec
add
cmp
xor
mov
push
add
and
lcall
in
mov
fwait
add
and
add
cmp
je
pop
push
add
jae
cld
inc
cltd
xor
push
add
dec
clc
add
mov
add
rcll
sub
xlat
push
pusha
add
xchg
out
add
mov
xor
sbb
pop
jb
jge
mov
add
sahf
push
sub
repz
mov
inc
add
addr16
enter
movsl
ret
sbb
pop
adc
leave
xchg
cwtl
ficoml
cwtl
js
add
outsl
push
add
mov
fimuls
add
or
dec
stc
xchg
mov
mov
data16
push
add
jge
pop
add
add
pop
jmp
add
mov
movsl
cmp
add
aas
aas
imul
add
movb
add
add
xchg
add
out
xor
jl
movb
fisubl
sbb
mov
ret
inc
or
or
add
sbb
dec
lods
int
mov
repz
popa
lods
outsl
cli
pop
sbb
add
daa
cmp
mov
test
and
mov
and
add
inc
add
out
push
int3
cmp
out
scas
dec
cmpsb
add
les
and
mov
add
add
mov
popf
pop
rcpps
rorl
push
push
add
and
mov
out
mov
pushf
sub
mov
fnstcw
add
mov
scas
sbb
lea
add
inc
add
or
mov
or
adc
add
add
add
cmpsl
addb
pop
in
cwtl
addr16
add
add
mov
add
mov
mov
adc
add
jae
xchg
add
cmp
pop
fcompl
add
add
add
jne
rolb
popf
punpcklbw
mov
add
adc
mov
dec
inc
add
stos
je
dec
push
add
add
push
cmp
jmp
add
mov
mov
add
jns
pop
xchg
add
out
inc
scas
les
lea
pop
mov
xor
es
mov
add
pop
cmp
add
add
mov
or
imul
add
pop
mov
fimull
push
add
lods
mov
pusha
add
jb
sbb
cltd
sbb
add
mov
push
dec
and
mov
add
add
add
out
xor
xchg
lds
mov
fwait
dec
pop
lea
adc
xchg
popa
dec
stos
out
xchg
flds
lock
jmp
aam
inc
add
add
add
sbb
add
add
or
inc
cs
lcall
cmp
or
in
add
sbb
and
scas
xchg
and
mov
mov
test
xor
int3
stos
cmp
pop
dec
and
mov
icebp
fmuls
ja
push
add
add
adc
adc
pop
fwait
mov
add
enter
push
add
mov
add
pusha
add
add
insb
orl
or
sub
cmp
add
shll
xchg
scas
shll
add
sbb
fists
add
push
add
les
ret
pop
lcall
add
add
sbb
push
mov
add
adc
add
add
in
lods
addb
popa
mov
jle
add
mov
push
add
add
xor
add
sbb
add
add
ja
mov
bound
mov
lret
cmc
icebp
xor
mov
aaa
out
add
lock
xchg
push
push
jo
pop
cmc
lret
adc
in
addb
gs
cmpsb
add
sub
add
jnp
scas
lock
add
add
cltd
mov
pusha
add
pop
mov
dec
dec
and
mov
add
sbb
add
mov
add
mov
fdivs
cs
lahf
sbb
jns
jge
xor
add
add
add
add
stos
pop
clc
adc
mov
add
pop
ds
icebp
addb
mov
sti
aaa
insb
or
sub
rcll
add
ds
addb
mov
fsubrp
jne
add
add
pop
push
add
pop
inc
jecxz
ljmp
outsb
or
add
inc
add
repz
cmp
add
mov
add
add
leave
xor
jns
add
pop
mov
push
add
ret
xor
and
adc
outsb
into
aad
icebp
in
sbb
sbb
fisttpl
add
add
call
scas
xchg
insb
xlat
es
add
pusha
add
cmpsb
add
push
add
jmp
loope
repz
popf
sub
push
add
jns
fxch
adc
push
add
pop
out
pushf
and
add
add
out
mov
and
mov
pop
rolb
sbb
mov
and
add
mov
add
and
sbb
dec
popf
mov
imul
cmp
rolb
mov
add
add
add
out
add
xchg
sbb
push
add
or
xchg
add
inc
mov
cwtl
and
fwait
push
add
insb
mov
subl
mov
enter
mov
lahf
mov
ficomps
test
imul
inc
add
addb
or
jle
add
mov
mov
pop
add
popf
cmp
add
sbb
rep
or
add
inc
ds
cltd
aas
xchg
add
sub
add
xchg
dec
lret
scas
push
mov
popf
adc
cmp
popa
dec
dec
and
mov
test
add
add
or
inc
add
loopne
sti
pop
movsb
add
imul
inc
adc
push
mov
daa
out
fidivrs
cs
lods
ret
fisubl
mov
add
mov
add
add
pop
inc
and
cli
inc
bound
mov
mov
add
addl
mov
mov
mov
cmp
sti
xor
cs
ret
in
adc
aas
int3
dec
fcom
add
add
fldl
xchg
faddl
sbb
lods
or
cmp
add
jno
add
add
add
loope
ljmp
add
fisttpll
stc
xchg
add
add
rol
ljmp
mov
add
je
push
cltd
loope
jo
dec
inc
add
sahf
ficoms
movsl
mov
add
xor
popl
ljmp
fiadds
mov
in
jge
add
and
mov
add
mov
cmp
add
mov
pop
xor
mov
xor
xor
and
mov
adc
call
add
stos
sbb
in
dec
jl
ret
add
mov
add
outsb
nop
add
xor
sbb
rolb
addr16
cmpsb
add
lret
mov
jp
or
hlt
add
add
mov
add
add
sub
add
add
pop
push
add
sbb
add
filds
add
add
add
mov
sub
sbb
add
aad
mov
mov
jno
cmp
adc
or
mov
jmp
add
xchg
add
add
cmp
mov
or
incb
jne
fcmove
mov
pop
adc
or
scas
sbb
loopne
dec
leave
xor
inc
add
bound
mov
mov
test
or
outsb
lahf
cld
cli
add
push
pop
jmp
push
daa
or
add
sbb
xchg
jge
lcall
and
mov
sbb
mov
icebp
loope
push
xor
add
insb
or
xchg
rolb
mov
pop
lahf
cmp
add
sub
rolb
outsb
mov
rolb
jae
aaa
mov
add
lcall
add
adc
jb
sub
sub
add
add
stc
sbb
xor
add
ret
add
adc
jne
push
add
sub
and
jno
add
add
lea
testb
sub
pop
in
gs
lods
stos
aas
stc
ret
add
push
add
cmp
movsb
add
arpl
stc
xchg
add
or
add
mov
add
jg
enter
cmpsb
add
add
add
push
add
mov
sub
dec
mov
add
add
add
add
add
or
push
js
popa
push
add
or
pop
mov
add
in
xor
cmpsb
add
loope
add
add
add
pop
je
push
add
int3
mov
add
iret
or
add
cmp
stos
shll
add
ret
popa
xor
add
mov
add
xor
sarl
jmp
in
pop
test
sub
cmpsl
in
mov
mov
add
add
add
cmp
imul
mov
add
movb
mov
aas
pop
lods
test
mov
std
imul
ret
mov
je
enter
push
movsb
add
add
push
push
dec
inc
add
outsl
jmp
add
mov
xchg
add
add
add
lds
add
repz
xchg
imul
in
cld
out
or
ficoms
xchg
mov
fiadds
add
js
push
cmp
cwtl
enter
pop
fisttpll
into
lcall
cmpsl
and
daa
jg
inc
add
xor
jae
addl
gs
sbb
jle
inc
push
add
sub
add
jno
add
add
add
in
outsl
lcall
cwtl
mov
add
stos
adc
ror
add
jl
je
pop
lock
add
lret
cmp
fdivl
enter
add
vcvtdq2pd
add
fsubr
rolb
push
test
add
dec
adc
ja
jle
std
inc
mov
push
add
addr16
repnz
int3
push
add
cwtl
leave
dec
or
out
popa
sbbl
add
lods
or
push
add
jns
jae
add
dec
fwait
pop
sbb
cmp
add
pop
ret
insl
pop
xor
cmp
addb
add
or
cmc
pop
fmuls
add
addb
lret
and
cmp
add
mov
cltd
aad
incb
mov
lods
and
mov
push
push
add
fistl
add
mov
add
pop
or
push
add
add
and
push
cmpsl
rolb
bound
mov
jae
add
cmp
addb
push
aad
add
xor
sbb
and
testb
ljmp
add
dec
movb
outsb
jle,pt
inc
add
in
in
lcall
pop
push
add
add
call
sub
sbb
adc
lea
push
add
add
cwtl
push
jb
xchg
add
add
fprem1
fwait
rorl
add
mov
mov
add
int3
bound
mov
fwait
addb
js
inc
add
pop
ficompl
fldcw
add
add
mov
nop
add
add
int3
xor
stos
jecxz
add
xchg
lods
pop
mov
pop
adc
jle
add
add
shll
add
mov
push
inc
add
dec
gs
add
add
ljmp
add
add
jle
jp
adc
push
jle
jl
stos
cmpsb
add
mov
add
pop
jecxz
fisubl
mov
lds
add
cmp
or
ja
sub
add
jmp
add
and
add
xchg
add
add
addr16
pop
pop
add
mov
inc
add
jg
enter
add
and
sbb
popa
cltd
test
mov
data16
jl
xchg
pop
arpl
pop
lock
add
dec
in
xor
pop
ret
sbb
xchg
add
aam
push
add
mov
add
dec
dec
jle
xchg
push
enter
aaa
ss
mov
jo
inc
push
jbe
shll
add
scas
inc
add
add
rolb
subl
lret
pop
mov
aad
scas
cmp
jnp
jnp
popa
sub
enter
scas
pop
shll
jg
xchg
jmp
push
add
mov
pop
mov
or
add
add
add
xor
in
jmp
add
test
rolb
mov
loopne
sahf
ror
cmp
movsl
push
mov
pop
pop
fstpt
push
add
mov
dec
add
add
add
mov
push
dec
pop
hlt
add
add
xchg
popf
sbb
add
daa
rorl
add
cmp
add
dec
jo
push
push
add
xor
pop
jae
mov
fdivrs
inc
add
add
add
add
and
test
add
arpl
pop
mov
mov
add
dec
adc
roll
int
lret
loope
rolb
out
jae
add
add
mov
add
add
xor
movb
sbb
jo
sbb
and
mov
cld
add
insb
add
sbb
add
jmp
imul
daa
loopne
mov
aad
sbb
movb
add
add
mov
dec
inc
icebp
out
loope
add
and
mov
jle
add
mov
add
sub
cmpsl
xor
xchg
pop
adc
lahf
pop
lahf
mov
dec
lahf
roll
mov
inc
jp
divl
add
shl
inc
lcall
test
cmp
hlt
add
rolb
mov
add
clc
push
jmp
add
cmp
int
add
daa
xchg
mov
add
add
dec
repnz
add
imul
mov
dec
mov
dec
xchg
add
add
xor
sbb
add
stos
and
out
fistps
mov
or
add
add
or
mov
out
add
add
fisubrl
add
repnz
mul
mov
adc
movsb
add
ljmp
iret
pop
loope
mov
add
push
cmpsb
add
add
add
add
jne
push
add
jae
loop
out
add
xlat
add
add
add
add
sub
jo
sti
imul
mov
scas
mov
add
xor
xchg
sbb
or
add
mov
icebp
push
add
add
add
cmp
sti
outsl
and
mov
mov
add
adc
test
stc
add
insb
cltd
inc
in
jb
pop
mov
add
sbb
movb
add
rolb
jle
test
jmp
dec
xor
jle
ja
sti
pop
add
dec
mov
add
add
push
in
pop
add
pushf
fdivrp
cmc
jnp
sbb
add
add
xor
add
rolb
es
dec
xchg
cmp
fwait
xor
add
sbb
add
push
add
sbb
and
push
and
mov
mov
add
mov
out
push
pop
lahf
lock
add
add
sbb
add
add
or
cmp
popa
cltd
adc
push
add
in
dec
or
xlat
hlt
add
xchg
add
add
add
add
sub
test
movb
and
mov
add
stc
js
add
push
add
add
test
testb
enter
mov
rolb
icebp
jg
add
fidivrs
je
mov
inc
add
push
daa
out
data16
mov
sbb
test
icebp
ret
hlt
add
jns
add
int3
xor
aam
and
xchg
mov
add
dec
inc
xor
xor
sbb
pop
pop
jle
adc
fs
adcl
add
sahf
push
add
sbb
add
insb
xchg
add
push
add
pop
ret
cmp
pop
sub
sub
mov
je
inc
or
sahf
jmp
add
add
repz
add
add
outsl
and
or
addb
xchg
mov
rolb
dec
adc
mov
adc
xchg
add
sub
pop
cmp
dec
mov
mov
ljmp
inc
nop
fcomi
add
mov
xchg
lret
cmp
outsl
test
lock
add
and
adc
xchg
add
push
add
xor
or
jns
mov
push
add
adc
dec
sbb
mov
mov
imul
cmpsb
add
mov
sbb
adc
popa
and
cltd
add
or
stc
mov
and
add
push
add
andl
add
mov
leave
popl
cmp
mov
push
data16
sub
adc
dec
and
mov
add
arpl
cltd
scas
sub
sub
add
sbbl
aad
ljmp
push
add
cmp
nop
add
insb
enter
iret
push
das
mov
or
mov
add
add
add
out
pop
push
add
dec
add
add
mov
jl
push
add
loop
xchg
dec
rolb
mov
xchg
xchg
int
mov
add
shrl
xrelease
add
add
fiaddl
movb
iret
pusha
add
lcall
dec
sbb
add
movsl
cmp
imul
sbb
mov
cmc
leave
jae
add
add
inc
add
pop
pop
push
add
inc
xchg
add
add
add
ret
in
jg
insb
cmpsb
add
add
std
das
pushf
ret
and
mov
out
in
test
mov
mov
data16
mov
movsb
add
add
jle
add
cld
xchg
mov
fistps
add
xchg
mov
inc
cmp
add
sbb
mov
xor
testb
in
push
add
testb
cmpsl
pop
xchg
add
addb
add
add
out
mov
add
mov
adc
cwtl
movb
add
add
dec
or
jo
jp
dec
les
lods
cmp
fisubs
xchg
lret
adc
jmp
xor
add
mov
stc
ja
cmc
push
or
add
mov
jmp
std
cmpsb
add
mov
jne
mov
add
gs
add
ffreep
dec
mov
sub
add
add
mov
popa
xor
add
out
cmpsl
sarl
cmpsl
push
add
add
mov
add
fmull
stos
mov
sub
add
hlt
add
jo
or
mov
cltd
sbb
in
add
cwtl
imul
mov
std
push
add
pusha
add
out
inc
sbbl
jp
add
pop
leave
movb
dec
inc
lcall
ds
or
xor
sub
mov
rolb
dec
sbb
add
insb
adc
out
inc
jmp
mov
hlt
add
data16
add
lock
add
ds
add
mov
cmc
jecxz
loope
mov
repz
mov
sbb
sub
lar
mov
scas
ja
jno
jae
mov
ret
stos
adcl
sbb
ljmp
mov
js
inc
add
pop
mov
cld
and
mov
mov
push
cmpsl
movb
cltd
hlt
add
pop
repz
sub
das
roll
sub
cmpsl
xor
dec
jmp
test
adc
sysexit
je
nop
add
add
add
inc
add
adc
jno
add
add
cli
push
jg
add
sub
sbb
into
sahf
daa
in
xchg
aad
xor
les
add
pop
xorl
add
mov
add
or
sbb
adc
inc
add
xor
add
mov
add
rolb
jnp
jo
test
or
sbbl
jmp
jle
xorl
movb
add
add
hlt
add
add
pop
movsb
add
hlt
add
and
add
testb
hlt
add
cwtl
js
inc
mov
leave
xor
psrld
int
stos
lret
imul
ret
and
addb
jae
push
add
outsl
inc
add
add
add
sub
sahf
jnp
add
mov
sbb
in
push
mov
cmpsl
lret
in
sarl
xchg
mov
mov
adc
addb
mov
in
jl
pop
add
xor
add
add
add
loope
add
add
xor
jnp
add
mov
add
ficompl
fsubp
ljmp
mov
sbb
jp
js
out
jmp
cmp
loope
add
lret
add
out
adc
cmp
dec
pop
out
sahf
sub
sbb
outsb
imull
fcomip
add
ja
aaa
call
sub
add
add
cmpsl
lods
xchg
pop
mov
or
add
fcoms
add
movl
add
add
mov
add
add
add
aam
pop
outsb
jae
sub
add
add
mov
add
rolb
ljmp
pop
repz
aad
insb
into
imul
mov
loope
add
cmp
mov
add
popa
imul
add
xor
adc
mov
add
aaa
dec
adc
add
xor
mov
sub
add
arpl
add
jb
stc
sbb
push
add
std
outsl
test
cld
fnstenv
daa
aaa
or
push
add
cmp
lds
mov
add
jge
add
mov
add
add
ret
idiv
inc
add
cltd
and
add
add
cwtl
mov
add
add
imul
fisubs
add
mov
fisubrs
mov
add
loopne
aad
loope
add
add
and
mov
add
add
add
shll
mov
out
push
ret
push
add
xchg
inc
faddl
dec
pop
in
jae
mov
repz
inc
flds
add
pop
jge
push
add
add
sahf
popa
aaa
cltd
roll
ret
mov
pop
gs
or
mov
and
mov
pop
add
add
add
add
xchg
movsb
add
add
mov
add
mov
xchg
stos
sub
ds
or
inc
add
mov
mov
les
pushf
shl
jno
cwtl
add
pop
outsl
add
mov
pop
fbld
pushf
push
add
add
subl
rolb
add
xchg
add
and
aaa
int3
mov
add
insb
bound
mov
add
mov
mov
add
jle
daa
jmp
add
pop
xor
lods
sbb
sbb
add
sub
add
add
add
add
ret
cmp
push
repz
push
add
mov
repnz
pop
rcrl
cmp
add
add
cwtl
pop
push
add
sub
fstpt
add
aam
sahf
outsl
sub
add
add
scas
xchg
daa
icebp
mov
add
xor
ds
cmp
stos
inc
add
push
add
add
pop
mov
lock
add
xchg
mov
push
inc
add
add
add
xor
pushf
fisttpll
add
mov
add
add
add
mov
dec
cmp
add
clc
fdivrs
outsl
outsl
push
imul
movb
xor
mov
in
sub
add
xchg
mov
pop
mov
test
fldpi
dec
adc
sbb
repz
cmp
in
and
and
mov
outsb
jl
int
lahf
nop
add
add
jnp
mov
xor
fistpl
ror
bound
mov
and
scas
sub
outsl
divl
mov
sub
push
dec
inc
jo
pop
aaa
jg
add
stc
outsb
add
ds
pop
nop
add
sbb
aam
pushf
push
xor
imul
int3
pop
jle
jns
inc
int3
add
je
sbb
add
sbb
stc
sbb
je
pop
repz
lret
add
out
stc
pop
and
mov
push
add
sarl
outsb
mov
or
mov
push
add
sbb
add
in
jle
add
aas
fidivs
repnz
addb
cmp
pop
ljmp
add
fmuls
pop
sub
add
roll
add
add
add
mov
lret
aad
add
add
scas
mov
add
pusha
add
add
out
stos
lock
mov
push
add
fsubrp
movb
add
jg
add
inc
add
mov
xor
dec
je
mov
mov
addb
add
add
add
or
mov
cli
mov
add
mov
add
add
add
rolb
and
and
add
inc
add
add
jle
or
aam
movsb
add
cmp
add
mov
add
add
dec
lahf
mov
cmpsl
subl
push
add
push
cmp
mov
add
add
les
daa
bound
mov
imul
loope
lret
dec
fwait
cwtl
jmp
mov
movb
adc
add
cltd
lods
push
add
mov
add
add
add
ficoml
jnp
adc
repz
xchg
iret
scas
cmp
add
lea
lock
add
int3
loope
or
lds
add
add
add
add
mov
testb
add
sbb
xchg
add
cmp
mov
add
pop
lea
mov
sub
mov
mov
jnp
lret
sbb
rolb
xchg
add
or
add
aas
pop
xchg
add
push
mov
int
add
add
and
dec
lock
dec
pop
ljmp
dec
fwait
nop
add
add
pushf
mov
sbb
add
add
add
int3
mov
push
add
cmp
cmp
add
mov
rolb
push
dec
cmp
fdivs
push
insl
ret
add
push
add
mov
mov
add
mov
lock
mov
leave
xlat
addr16
clc
push
add
push
sub
sub
ret
sbb
testb
xor
mov
mov
add
pop
shll
imul
sar
cmpsl
pop
cld
mov
cmp
imul
sbb
imul
add
add
push
test
add
jmp
and
mov
add
pop
js
popl
popa
cmp
xchg
lret
add
leave
icebp
jge
pop
mov
mov
enter
and
mov
stos
inc
add
pop
js
cltd
mov
add
lods
jb
inc
add
add
push
or
fistl
add
sub
sub
test
scas
cmp
or
sbb
sub
mov
in
mov
mov
test
pushf
sbb
dec
imul
imul
add
and
mov
add
pop
lcall
mov
fstpl
movl
inc
add
or
pop
mov
mov
cmp
add
xchg
add
add
fwait
pop
shrl
cmc
cmpsl
hlt
add
mov
out
ds
add
add
cmp
adc
mov
stos
sub
jo
lock
dec
or
out
add
add
js
or
popa
and
sbb
or
aad
push
add
jmp
rolb
test
add
mov
add
clc
outsb
inc
pop
adc
push
push
fildl
fadds
add
push
std
jne
cmp
add
mov
test
push
fcmovne
gs
je
mov
or
pop
lock
das
mov
add
mov
std
lahf
mov
lahf
shrl
shr
add
jns
mov
lret
mov
add
push
in
push
adc
mov
adc
les
and
xlat
or
add
or
fsubr
arpl
es
cmp
add
addb
add
mov
sarl
pop
dec
pop
add
mov
push
orps
inc
xor
push
call
inc
pop
or
cmp
fmulp
inc
add
adc
mov
addb
cmp
push
lea
add
aaa
stc
xchg
pop
dec
xor
rolb
mov
fnstsw
sub
cmp
fistl
pop
lahf
lods
jmp
add
rolb
add
mov
std
or
in
add
adc
js
mov
cld
inc
and
ffree
std
enter
mov
movsl
into
inc
add
rolb
popa
jbe
jno
mov
xchg
add
xchg
mov
aas
or
aad
pop
lret
jb
adc
lock
mov
push
lret
cli
dec
dec
mov
repnz
xor
dec
das
cli
add
lods
push
add
dec
iret
and
fstl
mov
mov
jbe
daa
jbe
ret
pop
inc
add
push
movsb
add
mov
push
add
repnz
lea
add
imul
xor
add
mov
loope
add
and
mov
pop
test
stos
je
mov
mov
dec
sbb
sub
add
inc
add
push
inc
test
in
ret
mov
sub
lcall
add
loopne
repz
add
adc
xor
notl
add
test
test
out
popf
ds
jecxz
aas
aas
lods
inc
repz
add
or
cmp
add
add
jns
sub
aam
mov
call
lods
scas
cmc
mov
add
add
add
add
add
or
push
es
jecxz
rolb
adc
dec
xrelease
test
add
insl
sbb
add
lds
mov
pop
inc
data16
add
add
jmp
and
cmpsl
mov
sub
sti
or
add
push
add
xor
and
testb
add
mov
add
add
add
add
xchg
add
push
cmpsl
pushf
sbb
mov
inc
or
loop
xchg
dec
in
sub
cmp
fnstsw
call
jnp
mov
add
xchg
add
add
add
jge
mov
pop
cmpsb
add
add
sub
xor
mov
add
data16
inc
add
and
mov
sbb
shl
add
movb
push
add
add
stos
dec
or
add
add
ds
cld
pop
push
add
add
add
mov
bound
mov
sbb
enter
cmp
fisubs
xor
fwait
dec
add
jbe
jecxz
das
pushf
xchg
adc
loopew
add
xchg
jb
add
add
int3
leave
popf
sbb
push
add
mov
push
addl
mov
inc
add
mov
cmp
adc
movsl
lock
cmp
loop
add
push
jle
add
mov
jae
movb
sbb
xlat
xor
je
sub
test
and
add
int3
jp
add
pushf
in
test
mov
dec
js
out
lea
cmp
repnz
jbe
cli
js
add
lock
add
mov
data16
addb
pop
jbe
clc
inc
lds
mov
scas
push
push
add
jecxz
mov
add
inc
add
mov
dec
fwait
cltd
push
fwait
push
add
add
les
sub
add
pop
push
fcmovne
cli
rcr
rcl
add
and
sti
add
mov
add
pop
fstl
sub
jg
aam
sbb
sub
add
in
jg
add
rolb
jo
or
mov
pop
mov
jae
xchg
jmp
sub
dec
addb
enter
cmp
add
rolb
fwait
jb
push
movb
test
js
add
mov
dec
test
push
push
add
add
add
fwait
addb
add
scas
bound
mov
int
add
mov
add
mov
xchg
add
data16
sbb
add
fistpl
add
mov
ffreep
add
xor
add
sub
add
sub
clc
jno
mov
add
add
add
add
mov
dec
les
lods
orl
mov
add
xchg
add
add
dec
xchg
movb
leave
addb
xor
add
add
pop
mov
loope
add
pop
shll
cmp
lea
loopne
lods
add
mov
das
pop
add
xlat
mov
mov
loop
adc
jle
add
je
ds
lds
sub
add
pop
sahf
into
add
aas
pop
cmpsb
add
shl
add
sar
and
xchg
mov
add
dec
mov
adc
mov
add
sbb
ds
push
add
add
add
jno
add
jmp
add
cmp
test
add
push
addr16
add
or
add
inc
add
add
xor
push
add
mov
out
mov
insb
cmp
mov
testb
leave
popf
cli
sbb
add
and
mov
add
xchg
inc
lock
clc
fisttpl
inc
add
mov
lds
mov
int
xor
hlt
add
cmpl
push
add
adc
add
add
mov
sub
or
add
mov
fnstcw
or
add
aad
jae
aaa
lret
add
add
jo
adc
add
sub
add
inc
lahf
jne
ja
out
fucom
add
adc
add
cmp
jge
dec
jg
mov
jle
pushf
movl
add
add
mov
movntq
loop
and
add
fcmovne
jp
jo
sub
add
and
sbb
mov
mov
fcompl
inc
lods
in
data16
lds
testb
sbb
pusha
add
rolb
sub
loope
add
stos
into
ja
nop
add
and
mov
imul
sbb
cli
les
push
add
jnp
and
mov
loope
jmp
into
call
add
mov
mov
add
add
lcall
rolb
rol
add
jl
add
add
mov
mov
inc
add
or
lock
mov
sahf
push
sub
addb
or
and
fildll
fwait
scas
pop
insl
xor
adc
and
mov
add
lods
mov
add
jp
pop
and
mov
mov
add
aam
bound
mov
and
mov
add
add
mov
adc
popf
sbb
ret
daa
in
in
add
push
inc
add
int3
stc
ljmp
dec
dec
std
out
xchg
sarl
mov
cmp
add
and
mov
add
and
aaa
xchg
enter
add
add
or
ret
mov
pop
add
int3
add
in
sub
add
jle
les
ds
push
add
cwtl
push
addb
mov
dec
loop
nop
add
sbb
or
icebp
inc
add
add
add
add
add
mov
xor
clc
mov
mov
scas
jbe
jo
mov
jl
pop
daa
sbb
jbe
lcall
mov
add
mov
int3
cltd
jne
lods
inc
add
movsl
jg
add
or
cmp
xor
aam
stos
jecxz
cmovnp
dec
out
fdivr
gs
lock
mov
push
add
add
jne
add
or
mov
leave
aas
add
mov
outsb
jns
add
adc
insb
movsb
add
lods
fwait
push
add
mov
sti
sti
inc
mov
push
jmp
add
cli
dec
xchg
add
aam
add
sub
int
rcll
dec
dec
mov
call
sti
lea
and
add
add
xlat
jbe
cmc
adc
mov
push
xchg
sub
xor
add
mov
neg
xor
out
addb
sub
add
add
rcl
add
sbb
in
xchg
add
add
enter
add
aam
mov
add
and
xchg
les
mov
bound
mov
push
add
add
gs
jp
mov
add
add
add
mov
lret
add
add
add
and
mov
arpl
je,pn
jmp
fildl
add
mov
mov
xchg
add
dec
add
push
dec
pushf
xchg
jnp
and
popf
loope
jl
adc
in
jae
mov
stc
jmp
mov
add
aas
cmp
es
rorl
or
int3
sub
xchg
std
mov
mov
dec
aas
mov
leave
push
add
mov
xchg
add
add
movsl
cmp
xchg
adc
data16
and
mov
les
jno
xchg
adc
out
pushf
adc
pop
sbb
add
push
add
pusha
add
ja
sbb
addr16
add
mov
mov
scas
fistps
roll
in
stos
add
add
adc
add
add
js
mov
lret
mov
sbb
jae
mov
adc
mov
add
add
data16
mov
add
mov
add
add
gs
add
mov
add
mov
xor
es
add
lods
sahf
add
in
lods
xchg
add
dec
mov
xchg
add
sbb
leave
jg
jne
add
mov
jno
iret
sbb
xchg
dec
inc
rolb
mov
sub
loop
mov
add
add
add
pusha
add
loop
popa
cltd
addb
call
test
das
sub
add
add
iret
test
lods
mov
cmp
add
add
in
enter
mov
add
add
add
stc
pop
pushf
or
jb
jnp
xlat
cmp
jns
add
sub
cld
adc
add
add
add
add
les
fdiv
ja
stos
aas
sub
xchg
lds
add
mov
add
mov
pop
xchg
inc
adc
add
aad
jne
popa
pop
pop
loope
adc
jge
dec
lods
jne
fisubrs
add
mov
jno
je
arpl
mov
xchg
arpl
cmpsl
mov
out
sbb
jg
fstps
pop
add
mov
sbb
out
clc
dec
fstl
add
add
mov
cmp
push
fildll
sbb
add
pop
inc
add
out
rolb
test
movb
add
call
fsubs
add
mov
mov
sbb
add
sub
or
adc
add
aas
dec
dec
mov
adc
xor
xor
push
add
stc
or
jl
push
xchg
out
testl
daa
inc
add
stos
sbb
add
mov
mov
and
and
mov
add
xchg
movb
add
sub
mov
push
in
jo
lods
test
testb
data16
adc
jae
add
add
add
add
jno
lods
add
xor
add
mov
out
add
fidivrl
push
ljmp
cmp
add
adc
pop
repnz
rolb
popf
pop
pop
pop
aaa
push
add
xchg
mov
mov
cmp
cmc
jge
xor
mov
jle
lret
cmpsl
inc
add
pop
add
stos
mov
add
xchg
add
add
add
add
lods
enter
ret
xchg
add
add
in
mov
xor
clc
mov
mov
xor
add
cld
add
mov
pop
and
out
xchg
add
add
sbbl
cmc
mov
xor
or
repz
add
mov
add
and
add
add
sbb
add
sub
add
mov
lahf
or
add
add
cli
setge
outsb
inc
add
sti
pop
xor
fisttps
jg
xchg
add
imul
lea
pop
mov
add
dec
fwait
daa
std
cmp
add
add
cld
and
ja
lea
add
add
test
bound
mov
mov
push
adc
sahf
adc
mov
mov
popf
ffreep
cltd
incb
mov
add
add
es
add
pop
adc
xchg
je
mov
xor
add
popa
push
add
ret
lods
dec
gs
add
push
add
xchg
add
repz
inc
add
nop
add
add
add
rolb
das
pop
or
insb
pop
xor
fmull
add
cmp
add
jnp
in
add
add
xchg
pop
inc
add
ljmp
nop
add
icebp
xchg
xchg
cmp
push
add
add
add
mov
jg
icebp
stos
and
mov
scas
inc
add
add
add
dec
jno
sbb
mov
add
add
cmp
push
add
fistl
mov
add
and
mov
push
add
in
xor
jge
dec
sbb
add
adc
je
mov
push
pop
addb
add
inc
enter
scas
lret
rolb
mov
jmp
ljmp
repz
or
dec
inc
add
movl
xchg
add
dec
iret
cs
fadds
add
pop
dec
sub
add
add
iret
imul
xor
add
add
inc
add
mov
dec
push
add
jecxz
loopne
rolb
loope
add
and
mov
call
push
or
fisttps
inc
cmp
add
add
fiadds
clc
test
dec
jnp
cltd
cmp
jecxz
add
mov
movl
jmp
imul
xorl
in
add
push
xchg
cmpsl
jo
das
popa
add
push
mov
shll
add
add
add
or
jb
movsl
arpl
push
mov
inc
add
cmc
xchg
add
adc
rcll
add
icebp
xchg
mov
dec
xchg
add
sbb
push
repz
pop
jg
stos
ficompl
and
sub
add
sbb
pop
sbb
add
roll
pop
and
mov
push
sarl
roll
test
popa
addb
inc
add
sub
daa
xchg
adc
jbe
jmp
add
xchg
dec
aam
decb
cltd
push
add
add
push
add
js
push
cmc
cmp
sbb
add
push
add
aad
add
xlat
sbb
cmp
repz
sti
cltd
push
and
mov
je
or
lods
in
add
push
jne
lret
psubusb
add
int3
add
add
push
push
add
in
jmp
jns
inc
add
xor
xor
pop
sub
add
add
mov
dec
imul
int
push
add
xchg
add
popf
add
mov
dec
enter
add
aam
jmp
add
mov
and
insb
das
inc
xor
adc
add
add
addb
add
add
insb
mov
lret
lock
xchg
add
clc
addb
add
dec
movsl
gs
mov
lcall
add
pop
add
rolb
mov
rolb
sbb
adc
lea
adc
stos
out
outsb
jecxz
out
or
push
add
les
dec
add
add
mov
add
inc
add
ds
lret
jns
loop
cmp
imull
jns
fdivrl
add
cs
xchg
mov
mov
sub
mov
leave
mov
add
cmp
add
dec
xor
mov
in
aam
inc
jo
sub
xor
dec
iret
bound
mov
xchg
or
add
add
jp
cmp
add
icebp
jecxz
fcmovu
dec
out
inc
add
roll
pop
mov
iret
cmp
add
mov
and
mov
insl
cmpsb
add
add
add
or
inc
enter
add
or
dec
xor
rolb
push
ficoml
xor
outsl
and
pop
dec
sub
scas
push
add
add
aas
scas
jmp
rcll
add
aad
add
jb
inc
add
add
add
add
mov
add
pop
dec
push
add
add
bound
mov
cmp
adc
lods
das
jnp
add
out
lods
ret
fucomip
add
sub
add
add
movb
add
mov
add
add
shl
inc
pop
and
in
add
push
add
jl
in
repz
and
mov
add
add
cmc
jle
cld
inc
add
or
rorl
add
fs
mov
mov
mov
bound
mov
dec
ret
inc
add
mov
mov
aas
xchg
add
add
mov
sbb
dec
mov
popa
add
add
and
mov
cld
daa
sub
add
pop
cmp
add
mov
xor
or
add
sbb
and
mov
add
sub
xchg
add
or
pop
jle
inc
mov
add
add
iret
lret
jge
cmpsb
add
add
add
add
add
sbb
lahf
and
mov
add
mov
add
mov
dec
dec
add
xchg
add
add
mov
iret
lahf
xchg
add
jne
jns
add
sbbl
jae
ja
addr16
add
add
xchg
aad
cmp
inc
add
lea
add
mov
mov
mov
add
jecxz
out
std
jmp
sub
lret
add
mov
or
add
xor
pusha
add
pop
mov
inc
add
add
cmp
jmp
add
mov
add
push
add
ret
stos
sbb
pop
push
call
testb
add
add
xor
or
add
adc
lahf
mov
outsb
dec
sti
cmp
mov
mov
nop
add
mov
sub
xchg
add
and
int3
mov
sub
jle
push
add
ja
adc
out
cmp
push
fimuls
add
aam
mov
aas
outsl
das
and
add
dec
in
inc
add
dec
jns
add
insb
mov
in
mov
mov
and
or
add
pop
iret
iret
int
add
inc
add
add
aad
mov
cmp
lahf
icebp
sbb
sbb
ficoml
rolb
or
jecxz
xchg
sbb
xor
or
mov
add
insb
cwtl
mov
push
fisttps
add
mov
mov
sbb
add
scas
jb
inc
add
out
addr16
jle
add
sub
movb
and
mov
add
add
sub
dec
mov
orl
sbb
add
insl
jge
inc
add
adc
cmp
dec
add
stc
test
lcall
outsl
adc
and
add
add
add
xchg
add
adc
mov
clc
sbb
and
mov
dec
ret
or
cmp
xchg
xchg
cmp
mov
out
test
cmp
sbb
add
in
add
cmp
test
add
add
call
loop
xchg
testb
adc
add
xor
data16
inc
pop
or
dec
movb
popa
dec
push
gs
add
mov
mov
ss
out
jl
push
add
cmc
out
inc
packssdw
add
into
sub
add
add
out
into
neg
rolb
sbb
cmp
add
mov
test
lds
loopne
push
add
cmpsb
add
add
add
add
add
xchg
add
outsl
mov
sti
jmp
mov
inc
lock
fdivr
xchg
test
bound
mov
jmp
aas
icebp
dec
in
cli
sub
dec
mov
mov
xlat
test
call
jl
add
sub
add
mov
add
inc
add
notl
pop
mov
cmp
add
add
mov
testb
add
sub
push
jnp
add
outsl
mov
insl
leave
sub
add
cmp
pop
cld
or
add
outsl
out
test
dec
mov
add
add
xor
sbb
add
add
sar
imul
mov
add
push
jnp
insb
and
mov
stc
pop
cmc
mov
adc
out
inc
add
adc
loope
add
repz
mov
and
mov
xchg
xchg
or
xchg
test
add
jmp
popa
mov
add
push
add
add
pop
xchg
add
add
add
mov
add
inc
outsl
fisttps
faddl
mov
cmp
daa
nop
add
mov
out
add
pop
xor
ds
mov
add
or
jge
add
ja
add
pop
inc
lret
or
js
cwtl
push
add
adc
mov
roll
add
add
dec
ret
add
add
sahf
fimuls
movb
add
int3
sbb
mov
scas
jbe
pop
mov
movsb
add
cmpsb
add
imul
das
and
rolb
ret
addr16
add
cmpsl
mov
imul
cwtl
push
add
testb
daa
mov
addb
pop
outsb
shll
in
or
cmp
rcll
outsb
xor
lret
testb
push
ja
fadds
add
aas
aaa
out
add
inc
push
add
clc
jns
or
outsl
mov
lods
testb
jbe
push
mov
pop
clc
addb
nop
add
jl
and
mov
nop
add
shrl
mov
add
add
pop
lods
pop
adc
mov
dec
fisubs
add
mov
push
add
and
ret
add
mov
add
inc
add
add
and
mov
fimull
and
mov
add
mov
add
pop
xor
sub
add
inc
mov
add
dec
xchg
add
jmp
enter
or
add
imul
rolb
shr
loope
cmp
add
out
adcl
rolb
test
add
add
add
lahf
fistpll
ja
add
push
movsb
add
test
mov
cmpsl
icebp
or
push
or
add
insb
das
popa
xchg
add
nop
add
mov
pop
int3
adc
mov
lahf
push
add
mov
sbb
fists
adc
add
push
add
test
inc
add
mov
movsl
into
inc
add
mov
lods
inc
add
mov
add
mov
pop
fidivs
cmpsb
add
lahf
rcll
pop
or
sub
cs
add
loop
mov
andl
mov
sub
cli
arpl
add
mov
xor
ja
mov
sbb
out
inc
inc
jmp
mov
sbb
out
in
out
jge
mov
mov
inc
stos
iret
xchg
add
mov
add
add
add
and
jecxz
aas
mov
jecxz
add
add
lods
dec
enter
mov
fmull
inc
ljmp
sub
add
add
jg
data16
xor
pop
xor
cmp
xchg
add
push
bound
mov
int
push
pop
lcall
sub
inc
add
outsb
xor
cmp
mov
push
add
sub
loopne
inc
dec
mov
lret
out
sti
pop
sbb
into
dec
aas
and
add
add
add
add
rcrl
fwait
testb
andl
ds
cmp
sahf
or
das
dec
in
test
imul
adc
mov
movb
lret
cltd
push
mov
xchg
add
gs
adc
xor
lods
cmp
mov
nop
add
add
and
mov
mov
in
inc
add
add
rolb
and
jmp
movb
leave
xor
daa
ret
into
pop
jmp
add
leave
cltd
ret
dec
dec
wrmsr
add
dec
adc
sbb
cmp
cmp
add
pusha
add
cmp
add
test
arpl
inc
jp
xchg
add
add
push
test
or
add
add
lock
mov
rolb
push
add
cmpsb
add
push
add
add
add
pop
shrl
add
sbb
add
ret
mov
cmpsb
add
scas
inc
add
jne
pop
fisubs
pop
xchg
push
add
aaa
push
add
outsl
hlt
add
movb
add
add
clc
shl
sti
lret
add
mov
add
rolb
out
add
add
add
test
mov
mov
sahf
jo
arpl
test
add
add
or
add
add
cmc
icebp
xchg
sub
jns
add
pop
jae
mov
adc
ss
push
mov
and
mov
mov
sbb
subl
icebp
add
adc
repnz
lock
xchg
pop
insl
lahf
cmp
int3
imull
sbb
add
mov
jle
add
dec
cmp
xor
icebp
xchg
std
pop
mov
sbbl
or
outsb
adc
sub
cmp
add
add
int
sub
dec
bt
sbb
movb
sub
add
sarl
xor
mov
dec
dec
ja
add
adc
jle
add
addb
jo
fdivs
push
inc
add
cld
xchg
mov
aam
or
mov
mov
test
add
add
add
mov
add
mov
test
sub
mov
add
in
rcrl
iret
inc
add
xor
pop
dec
xchg
jge
lcall
adc
or
pop
mov
add
add
xor
mov
mov
push
xchg
add
mov
mov
jo
incl
arpl
mov
push
push
inc
add
add
inc
nop
add
std
lea
insl
imul
xchg
popa
fldl
add
push
push
add
mov
out
pop
mov
ret
enter
add
push
add
add
js
add
add
xor
push
add
add
addb
add
add
mov
movsl
into
xchg
push
add
das
add
xchg
jnp
movsl
rcrl
add
mov
xor
add
add
adc
add
sbb
add
movsb
add
add
add
andl
std
jns
cmpsb
add
add
cmp
mov
add
dec
fwait
pop
leave
dec
pop
and
cmpsl
rolb
lret
dec
add
mov
add
rolb
add
rolb
pop
mov
cmpsb
add
xchg
pop
or
mov
scas
add
aas
and
jnp
add
mov
add
aaa
fidivrl
adc
and
mov
jae
add
add
ror
hlt
add
out
and
inc
add
add
test
fdivrl
mov
adc
pushf
jg
ljmp
xchg
out
add
ds
cs
enter
mov
movsb
add
movsl
mov
sbb
cltd
hlt
add
pop
int
daa
nop
add
add
sbb
add
mov
popa
arpl
add
pop
fimull
adc
bound
mov
pop
leave
pop
jns
in
fs
xor
clc
xchg
mov
lds
popf
mov
jmp
xor
jl
insl
das
sub
push
inc
add
and
sub
add
add
pop
cltd
mov
add
xchg
loope
out
das
cmp
xchg
addb
roll
aad
add
pop
mov
movb
pop
rcl
rcl
add
fwait
xor
lea
call
iret
sub
and
jg
repz
sbb
out
dec
addb
sbb
mov
jns
add
jae
shrl
add
arpl
rcrl
add
cmp
lahf
pop
mov
add
add
sub
add
mov
sarl
jns
ja
and
movb
jl
add
fadds
add
sahf
add
xchg
call
add
add
fwait
out
fcoml
add
push
add
xor
dec
mov
cmc
push
add
jns
sbb
add
or
adc
repz
and
add
push
add
mov
loope
pop
pop
movsl
cmc
insl
lds
stos
xchg
mov
add
mov
add
movsb
add
add
fs
lods
add
mov
jg
add
add
and
inc
add
or
aaa
sub
sub
jle
pop
adc
fiaddl
add
pop
cwtl
sub
add
add
jno
add
add
testb
mov
add
add
das
call
push
add
notl
push
add
cmove
sbb
pop
aad
pop
xchg
ret
add
stos
bound
mov
nop
add
je
xor
movsl
insl
cmc
jl
xlat
mov
adc
add
fisttpl
shll
add
lret
idivl
insl
xor
stos
cmp
repz
add
subl
inc
add
pop
mov
lods
ret
out
mov
pop
ret
jb
push
add
ja
cmp
pop
jg
add
add
daa
xor
adc
add
inc
popf
xor
stos
dec
mov
call
cmp
loop
lods
cli
std
sbb
sub
pusha
add
mov
push
pop
mov
fsubrp
pop
pop
mov
mov
movsl
cmp
or
add
jge
add
out
mov
mov
mov
movsb
add
cmp
add
test
sbb
fmul
out
repnz
dec
sbb
inc
add
in
test
rorl
cltd
cmpsb
add
dec
out
repz
mov
cwtl
les
call
add
sub
adc
pop
lds
dec
dec
out
mov
sub
rolb
add
add
add
lret
xor
xor
fistpll
add
mov
mov
sub
add
mov
add
push
add
into
mov
add
or
decb
pushf
inc
pop
iret
vmwrite
add
sbb
sbb
rolb
add
lret
sbb
pop
mov
push
add
add
add
fidivrs
xor
cltd
int
cmp
pop
lret
adc
add
add
arpl
and
jae
adc
add
xchg
cltd
mov
call
insl
mov
popf
mov
add
xsaveopt
testb
push
add
mov
loopne
add
add
add
mov
sbb
mov
pop
call
add
out
arpl
ret
jg
add
je
or
repnz
mov
cltd
jb
outsb
std
out
and
xlat
sub
add
test
aam
inc
call
add
add
add
or
add
roll
aam
call
add
fisttpl
jbe
jle
add
mov
add
ret
test
dec
adc
add
add
sarl
dec
jp
pop
mov
xchg
push
push
test
mov
test
aam
lods
mov
dec
nop
add
nop
add
mov
adc
dec
movsl
outsl
mov
push
inc
sahf
ret
pop
and
inc
add
adc
add
dec
jbe
inc
add
aam
subl
or
push
xchg
lcall
add
mov
jge
cmc
cmc
aaa
loopne
int3
mov
push
push
insl
jnp
push
add
xchg
add
add
xchg
add
cltd
stos
xor
xchg
xchg
xchg
add
ror
adc
add
inc
add
adc
lock
add
add
mov
int3
fcmove
push
add
add
add
outsb
and
push
jb
mov
lods
out
iret
aaa
inc
add
add
add
add
rolb
enter
pushl
add
add
push
add
and
fucomi
pop
push
add
leave
rcll
add
pop
add
jno
out
sbb
cmp
aad
addr16
xor
imul
add
rolb
repnz
xor
dec
int3
mov
add
and
xor
ljmp
cmpsb
add
jmp
clc
fdivrl
clc
and
mov
pusha
add
add
add
aam
rcrl
add
pop
add
mov
mov
mov
lret
xchg
add
mov
loopne
pop
sbb
ret
rolb
or
insb
pop
mov
push
add
cmp
add
dec
cmp
enter
add
add
dec
ret
sub
enter
add
add
mov
add
pop
or
arpl
icebp
cwtl
lret
sub
add
repnz
popf
test
out
repnz
pop
mov
in
adc
pop
and
mov
cwtl
or
pop
int3
addb
or
jmp
add
mov
add
add
add
repz
pop
pop
adc
mov
pop
jae
movb
add
and
pop
xchg
outsb
testb
add
bound
mov
add
push
and
jno
mov
lods
scas
ret
add
mov
flds
aas
mov
add
fdivrl
pop
sub
out
jne
pop
popf
loope
push
ljmp
add
mov
jmp
test
push
add
add
dec
mov
add
add
insl
dec
jmp
aas
sbb
add
rorl
jnp
inc
jge
cmpsb
add
sub
pusha
add
add
add
loop
ds
add
dec
out
xchg
add
daa
adc
push
add
dec
js
mov
add
add
adc
rolb
neg
xor
insb
mov
dec
and
mov
add
testl
and
sbb
mov
cmp
jne
dec
fisubrl
les
xor
cmc
mov
pop
jg
imul
add
add
jnp
imul
mov
jl
add
add
add
add
sti
dec
or
sbb
rolb
shll
xor
mov
add
pop
cmp
add
mov
rcl
add
mov
jmp
xchg
add
dec
add
fwait
cli
bound
mov
cmp
cmp
inc
fldcw
movb
insb
mov
in
loop
in
pop
mov
addb
adc
addb
add
mov
insl
bound
mov
or
sub
xor
pop
adc
add
aad
loope
mov
mov
cmp
sbb
loopew
add
push
add
jbe
loopne
lea
cmp
loope
enter
mov
xor
cmp
add
test
jns
push
add
mov
push
lcall
adc
mov
nop
add
add
repz
test
imul
test
xchg
add
mov
ficoms
mov
enter
add
dec
mov
aam
lcall
dec
iret
iret
jge
pop
addb
mov
pushf
hlt
add
add
movsb
add
add
loop
jnp
mov
pop
pop
sti
xor
jl
arpl
push
xor
mov
stc
dec
xchg
add
add
repnz
add
push
add
and
mov
or
aas
cmp
jle
jbe
pop
or
add
shrl
movb
mov
loopne
xchg
ficoms
xchg
xchg
cmpsb
add
scas
je
rolb
mov
mov
add
mov
imul
inc
add
push
add
pop
sbb
jp
dec
movb
mov
call
fstl
jb
and
mov
pxor
push
add
out
sbb
rolb
cmc
fstps
add
test
add
add
xchg
xchg
test
add
sbb
sti
push
add
add
add
sti
addb
addb
xchg
lds
mov
adc
pop
lcall
fsts
mov
mov
mov
data16
out
ljmp
or
xlat
not
sub
pop
xchg
add
rolb
out
xor
sbb
add
add
lods
test
mov
add
and
lahf
test
cmpl
jmp
mov
movb
cmp
pop
sbb
sahf
test
mov
rolb
add
mov
xchg
add
add
fnsave
add
call
xor
jae
insb
jp
or
add
add
inc
insb
xor
pushf
repz
mov
jo
jg
or
into
add
bound
mov
addb
add
mov
push
add
mov
les
mov
scas
inc
add
add
xor
lea
add
add
jle
mov
lret
adc
jmp
add
mov
fs
push
add
and
mov
add
xlat
lahf
imul
add
mov
int
mov
cmp
add
xchg
add
sub
inc
cmpsb
add
imul
add
push
and
mov
mov
aam
call
push
add
fndisi(8087
in
adc
jle
jae
inc
add
add
mov
xor
rolb
into
imul
test
call
nop
add
cmp
dec
loope
fisttpl
lods
les
loopne
les
mov
mov
add
add
push
pop
cmp
jns
std
mov
add
ret
jns
add
adc
ds
enter
and
mov
inc
mov
add
sbb
mov
jmp
jne
je
push
insb
pop
push
fsts
add
add
add
inc
xlat
loop
and
push
push
add
sbb
push
add
add
mov
std
cmc
sbb
into
xor
outsl
push
add
add
add
sahf
and
mov
xor
popf
fidivrs
add
mov
ja
sbb
lret
cwtl
fwait
lods
pop
jmp
mov
add
fisubl
out
jecxz
pop
lret
pop
stos
cmp
js
sbb
jecxz
repz
jecxz
add
and
mov
mov
jmp
add
add
xor
fsubrs
pop
mov
loopne
ja
sti
sar
add
add
aas
mov
add
fildl
push
add
stc
add
loope
dec
lods
xchg
add
rorl
cmp
add
add
sub
lods
add
mov
jb
add
mov
mov
sbbl
dec
int3
pop
aaa
add
xor
add
scas
add
mov
and
pop
fnstcw
in
add
mov
cwtl
pusha
add
cmp
dec
xchg
add
jge
add
add
cmp
and
pop
mov
add
test
fwait
das
sub
js
add
aam
pop
mov
jmp
add
push
add
add
mov
pushf
ljmp
add
and
stos
call
mov
add
sbb
inc
add
add
lods
sbb
add
pop
and
add
imul
cli
cmpsl
je
hlt
add
jge
push
add
push
xchg
add
out
nop
add
xchg
ds
aas
pop
and
mov
xchg
push
add
insl
test
mov
add
mov
add
mov
add
js
add
cmc
mov
jo
pop
and
xor
out
cmp
adc
xor
add
inc
add
scas
adc
fsubs
mov
pop
xchg
jle
add
add
add
negl
add
jno
add
test
fstpt
mov
cmp
ficoml
frstor
add
or
add
lcall
fisubl
movsb
add
mov
data16
fisubs
add
addb
sub
adc
lahf
bound
mov
add
inc
add
add
sar
mov
add
add
out
sub
jmp
adc
fs
fwait
mov
popa
cmp
add
xlat
jne
mov
std
ss
add
pop
sbb
fildl
mov
add
es
add
mov
jne
add
ja
rorl
or
add
add
mov
sti
mov
jecxz
fsubs
mov
jns
fistpl
dec
add
adc
and
mov
add
dec
adc
jbe
xchg
add
mov
mov
mov
add
add
mov
js
leave
xchg
aaa
pop
mov
mov
sar
in
ljmp
icebp
testb
adc
sub
gs
add
lock
ret
js
xchg
add
add
rolb
lar
mov
in
add
sub
in
mov
add
add
inc
add
jl
mov
add
mov
push
add
loopne
sub
mov
add
and
mov
inc
add
add
add
int3
adc
mov
add
add
mov
lds
add
sub
add
or
inc
add
add
add
test
xor
cld
jbe
xchg
mov
fs
sbb
sub
test
shll
sbb
jmp
in
add
cltd
loope
icebp
add
mov
dec
xlat
or
sub
add
js
add
addb
add
add
add
sahf
pop
pop
dec
and
sub
inc
repnz
mov
pop
das
xchg
out
les
adc
xchg
add
add
sub
adc
add
lcall
add
and
test
movsb
add
repz
mov
add
cwtl
inc
jno
add
add
add
test
push
add
sarl
into
lcall
mov
and
mov
mov
add
sbb
push
add
cmp
addb
pop
pop
jp
or
hlt
add
add
add
das
cs
add
inc
mov
jecxz
add
add
arpl
ljmp
jns
call
add
lcall
sti
sbb
sti
push
pop
xchg
fldt
add
dec
and
add
push
jne
in
fcompl
add
add
mov
mov
adcl
add
mov
in
xchg
add
popa
cmp
push
add
sbb
xchg
lock
add
fiadds
add
push
add
add
pop
adc
test
jle
adc
and
mov
mov
adc
testl
sub
or
lds
popa
addb
add
jl
add
add
xor
jae
add
adc
dec
xchg
mov
sub
pop
pop
outsb
jbe
adc
imul
gs
xchg
add
cmp
xor
fisubl
daa
fnstcw
inc
or
add
add
test
xor
push
inc
push
add
adc
dec
sub
arpl
ja
cs
add
pop
sbb
sbb
pop
push
add
lea
test
nop
add
loop
loopne
mov
pop
xor
jo
stos
aaa
mov
add
jp
mov
add
xor
xchg
push
add
mov
mov
sub
sub
add
push
loope
add
add
pop
inc
add
pop
addb
in
add
inc
add
push
add
aad
and
mov
push
add
idivl
push
repnz
and
mov
add
mov
add
add
sbb
lcall
sbb
push
add
add
imull
mov
and
xor
enter
inc
add
adc
movsl
testb
test
js
add
mov
or
add
imul
push
add
cmp
push
add
xor
jbe
pop
jnp
iret
adc
add
mov
cmc
pop
jmp
pop
mov
dec
in
add
mov
inc
add
addr16
testb
add
adc
mov
dec
mov
sub
add
pop
ds
pop
add
add
mov
push
xlat
faddl
cmp
movsl
add
into
lcall
out
and
mov
inc
divl
jge
stos
add
pop
xchg
add
mov
inc
add
fistps
add
aad
sbb
loop
lea
mov
jne
add
xchg
push
lds
adc
pushf
jae
or
xchg
xchg
sub
push
aas
dec
adc
addb
cli
jno
add
out
cmp
out
pop
dec
outsb
ficoms
pop
subl
mov
mov
lret
bound
mov
push
mov
pop
mov
pop
jns
or
add
cmc
push
fisubrs
mov
movsl
out
add
cwtl
push
cmpsb
add
shll
pop
mov
jbe
imul
in
addb
add
int3
cmp
mov
enter
mov
mov
gs
sub
dec
fbstp
jecxz
add
rolb
jnp
jo
cwtl
mov
popa
popa
push
add
pushf
and
sahf
pop
out
add
cmpsb
add
lret
inc
dec
sub
add
arpl
call
xchg
add
mov
in
lret
add
add
mov
pop
xchg
add
jo
into
add
mov
mov
adc
xchg
add
add
call
mov
mov
push
add
add
sub
add
add
ret
lds
jo
dec
cmp
add
loope
add
mov
out
mov
push
add
add
add
sub
add
add
pop
add
mov
push
add
fsubs
add
add
xlat
add
mov
icebp
add
mov
out
pop
mov
hlt
add
or
jge
mov
add
add
out
add
mov
repnz
dec
test
test
add
sbb
add
xchg
add
stos
fidivrl
sub
test
inc
add
add
mov
inc
add
add
jl
add
add
add
mov
rolb
add
or
xchg
pop
and
add
push
mov
cli
addb
sub
mov
add
add
repnz
testb
xlat
ficoms
pop
jmp
xchg
cltd
in
hlt
add
push
clc
sbb
out
packuswb
add
mov
push
jmp
sbb
push
push
repnz
add
mov
pop
scas
leave
popa
icebp
movsb
add
mov
pushf
cmp
inc
nop
add
adc
test
mov
add
jo
push
add
push
pop
inc
add
and
mov
rolb
dec
adc
or
cmpsl
jecxz
xlat
mov
dec
aad
int3
in
cli
adc
nop
add
rolb
jmp
cmp
mov
adc
ret
lcall
mov
ret
add
inc
cs
add
push
pop
jns
imul
jns
mov
arpl
das
aas
enter
adc
add
jae
pop
loop
push
add
addb
pop
daa
loop
movsl
xchg
add
mov
sbb
mov
loope
inc
test
add
add
add
stc
inc
and
mov
test
add
add
cli
pop
pop
cmp
out
mov
add
jbe
push
add
stos
sarl
mov
add
cltd
repz
imul
aaa
mov
shll
add
cmpsl
shrl
cltd
xchg
jb
sahf
fsubs
add
add
add
dec
ljmp
pop
daa
divl
add
mov
lea
les
mov
xor
mov
cmpsb
add
ds
cmp
adc
jb
dec
or
std
loopne
test
jecxz
dec
test
mov
xchg
mov
gs
sub
rolb
add
adc
test
lods
mov
add
loopne
lods
dec
fsubs
add
xchg
adc
in
mov
dec
or
add
add
lret
xor
add
dec
jbe
inc
add
mov
pop
sbb
test
in
sub
mov
add
add
add
add
add
loopne
cmp
xor
xchg
out
cld
or
sti
push
add
ja
je
testb
insl
mov
repz
xchg
or
scas
add
or
add
mov
out
jge
add
add
mov
add
mov
add
xchg
and
mov
shll
add
xor
add
out
xchg
mov
push
add
xor
mov
and
add
add
xchg
and
mov
jmp
in
dec
lds
cmc
gs
arpl
outsl
jns
add
mov
addb
les
lret
adc
xor
mov
add
repz
lahf
in
lret
out
movb
sub
ret
add
cli
and
mov
add
pop
addr16
mov
and
cmp
add
into
stos
lods
push
pop
inc
loopne
push
add
in
lods
lods
decb
xor
mov
xchg
add
inc
add
leave
orl
fcmovnbe
sbb
mov
mov
jmp
sub
in
pop
dec
adc
add
aad
add
scas
iret
ss
push
cmpl
push
add
add
add
test
add
fdivs
addb
add
dec
mov
add
add
fisttpl
das
push
jnp
add
sub
int
imul
pop
adc
xchg
pushf
xor
add
rolb
add
add
add
mov
push
add
loope
loop
xchg
jp
rcrl
mov
popa
jge
enter
js
add
lret
xchg
add
mov
mov
jp
dec
fsts
jns
out
out
sub
mov
adc
push
testb
dec
popa
push
lods
jle
cmp
push
add
fsubrl
dec
inc
add
add
cmpsb
add
pop
bound
mov
mov
movsl
add
les
cmp
test
scas
shll
xor
xor
lret
adc
inc
add
add
xchg
inc
jb
lods
and
jle
add
add
movsl
je
bound
mov
add
jb
lahf
mov
inc
fisubl
jg
add
jae
xchg
and
mov
adc
add
insb
mov
push
stc
sub
jae
xchg
add
add
fstps
add
imul
lods
inc
add
and
mov
jmp
data16
pusha
add
add
arpl
and
add
testb
pusha
add
insb
aam
mov
mov
mov
xor
sbb
or
add
mov
imul
mov
adc
add
test
add
add
roll
or
test
xlat
and
pop
pop
out
sub
add
sub
rorl
lods
add
lret
add
leave
cmp
pop
in
adc
adc
mov
clc
sbb
add
addb
das
sbb
push
add
pushf
or
add
lea
add
add
add
dec
xor
popf
push
add
mov
lods
mov
adc
mov
or
mov
dec
mov
dec
xchg
add
sbb
pop
mov
add
sub
mov
movb
sub
mov
add
pop
add
mov
adc
imul
std
test
mov
bound
mov
data16
sub
cmp
jle
xchg
mov
xor
loope
imul
mov
lret
insl
and
mov
add
add
js
cmp
add
mov
and
and
add
arpl
mov
add
add
testl
sub
sbb
cli
adc
fistps
ds
adc
fcomps
add
adc
arpl
call
mov
out
int3
and
add
add
decb
xchg
jo
jb
in
test
stc
lret
sub
hlt
add
and
add
add
inc
xlat
inc
add
icebp
ficoms
mov
jmp
jecxz
add
add
movsl
ret
jno
data16
jg
inc
add
mov
test
fnsave
and
mov
aas
push
add
add
push
add
arpl
addb
push
repnz
jns
ret
cli
mov
in
sti
sbb
add
jmp
pop
xor
push
mov
mov
psubb
pop
pop
ret
fstl
fst
add
add
mov
xchg
add
hlt
add
add
mov
inc
add
xor
jg
xor
rcll
adc
xchg
es
push
add
outsl
aam
hlt
add
add
add
add
add
add
cltd
loop
xchg
add
cltd
inc
xor
xor
sbb
cltd
jnp
xchg
inc
jge
mov
movsb
add
lea
scas
push
data16
mov
push
rolb
add
add
add
cli
mov
lods
addr16
push
sub
cmp
xor
dec
fwait
or
aas
bound
mov
aas
jnp
add
leave
mov
cmpsb
add
dec
push
add
add
mov
movb
frstor
add
sbb
add
add
leave
cmp
add
ret
fimuls
xchg
xchg
cs
cmpl
pop
cmpsb
add
add
mov
and
mov
add
ss
mov
movsb
add
sub
aaa
mov
ljmp
add
xchg
add
cmp
add
clc
jg
add
xor
divl
sahf
pop
jl
pop
sub
add
popf
sbb
pop
cld
and
mov
add
sub
mov
jne
int
push
add
and
add
mov
and
mov
add
and
xchg
add
add
mov
dec
sahf
inc
fwait
jmp
xchg
add
dec
lcall
rolb
mov
add
pop
pusha
add
jecxz
aas
xchg
add
pop
jae
add
add
mov
add
sub
add
push
ljmp
sbb
je
fisttpl
xlat
repz
lret
and
aam
and
add
pop
sti
mov
mov
mov
add
add
test
cmp
cmp
or
pop
mov
movsb
add
mov
daa
and
push
jmp
pushf
insb
pop
dec
dec
push
add
add
xor
mov
add
in
or
pop
jecxz
push
mov
add
clc
and
xchg
adc
insb
inc
add
js
loope
data16
cld
mov
mov
sti
cltd
jnp
xchg
enter
add
mov
pop
mov
push
mov
add
jle
xor
add
mov
add
add
mov
dec
test
ret
pop
call
rolb
shll
mov
notl
dec
fdivl
mov
sbb
add
cmpsb
add
cltd
lcall
add
xchg
add
dec
jl
push
add
and
mov
push
pop
js
mov
dec
rcr
pop
je
cwtl
mov
push
lock
pop
cmc
sub
lea
bound
mov
jge
add
add
cmp
or
add
add
mov
or
add
dec
fstps
add
adc
jne
add
pop
jl
mov
mov
jno
inc
add
xor
add
filds
mov
fldcw
sub
sub
aad
mov
add
mov
sti
mov
add
mov
push
add
mov
mov
cli
bound
mov
sbb
sbb
stos
movsb
add
and
stos
push
mov
clc
test
mov
pop
out
sahf
cli
xor
push
add
lock
pop
mov
out
arpl
inc
add
push
mov
add
xorl
xchg
push
push
in
nop
add
add
mov
movsb
add
mov
inc
add
mov
insb
push
add
add
add
sub
add
add
popf
pop
scas
movsl
movsl
and
mov
mov
cmp
int
ret
mov
xor
sub
ja
sub
imull
add
pushl
add
and
loopne
ljmp
cs
hlt
add
popf
jg
sbb
mov
add
lods
jp
int
adc
imul
add
pushf
enter
in
stos
testb
add
add
adc
or
dec
mov
push
add
jns
cmp
mov
loopne
nop
add
or
jecxz
cmp
jne
add
loopne
jae
add
mov
add
sub
xor
test
and
mov
add
fwait
push
add
add
xor
add
xchg
add
jle
or
movsl
push
cmc
jmp
rorl
add
xchg
mov
inc
loope
lcall
sub
dec
loopne
rolb
or
stos
mov
mov
add
add
add
leave
cmc
loop
xchg
add
dec
repz
in
dec
jmp
add
mov
add
shll
add
dec
and
mov
xchg
lret
dec
testb
mov
add
pop
pop
mov
or
movb
add
or
mov
add
leave
aam
sbb
fsts
add
mov
add
cmc
adc
call
adc
or
jmp
ljmp
add
pop
sub
outsb
rolb
cmp
popa
pop
scas
jns
dec
push
add
ja
adc
inc
add
cld
movb
adc
in
pushf
push
add
mov
xchg
add
push
mov
aas
mov
sbb
add
add
mov
dec
inc
add
jl
add
mov
or
pop
std
cmp
cmc
int3
mov
add
sub
cmp
cmp
push
insb
jb
data16
inc
add
les
mov
fstpt
test
add
aad
faddl
and
and
shrl
jbe
mov
addr16
dec
data16
mov
ret
mov
mov
jp
pushf
sub
popa
jmp
test
pop
xor
jb
int
add
or
add
in
add
add
add
test
pusha
add
xor
dec
or
mov
dec
xlat
pop
clc
jae
add
mov
aaa
cmpsb
add
jmp
jp
inc
lret
daa
inc
add
inc
add
add
loop
xchg
add
jno
add
pop
xor
dec
and
jns
pop
cmpsl
cwtl
imul
cmp
add
add
sub
add
fistpl
mov
sbb
pop
push
popf
aas
bound
mov
insl
mov
jmp
add
add
ret
add
push
add
mov
pop
and
add
mov
or
mov
shl
add
mov
movsl
popa
jno
add
icebp
cld
mull
add
fcoml
cli
ljmp
into
int3
scas
dec
fucomp
push
add
stos
addb
es
xchg
leave
add
icebp
imul
in
add
add
mov
ret
add
mov
add
nop
add
add
pop
xchg
or
cmpsl
in
push
aaa
hlt
add
xchg
add
mov
push
fs
repnz
enter
mov
add
add
jbe
pop
xor
xor
sti
and
add
dec
loope
add
in
add
add
mov
jnp
jno
add
mov
pop
mov
dec
daa
mov
adc
jne
add
add
aas
push
dec
dec
jl
add
xchg
mov
pop
test
mov
sub
mov
inc
add
lret
cmp
bound
mov
repnz
fisubrs
ds
ret
add
mov
fwait
jne
add
out
sarl
add
cmp
addb
jnp
inc
add
add
movsl
xor
add
add
aaa
clc
out
arpl
lods
add
mov
insb
pop
sti
sub
add
inc
imul
mov
cmp
add
pushf
and
into
add
repz
mov
paddusw
dec
inc
add
test
mov
or
test
fstl
xor
arpl
pop
add
add
pop
adc
mov
cs
sub
ret
add
and
adc
inc
push
fwait
inc
pop
or
add
popf
mov
aaa
in
movb
dec
test
pushf
sahf
loope
add
add
add
push
add
mov
lahf
je
add
test
daa
movsl
stos
inc
xor
cmc
add
mov
cmp
add
mov
push
imull
adc
add
mov
aam
rcr
cli
test
add
add
mov
hlt
add
xor
pushf
std
add
mov
push
or
add
add
insb
adc
data16
add
cmp
or
aad
add
cmpsb
add
add
shr
fcmovbe
add
jmp
stos
xor
add
adc
aam
mov
add
and
mov
jbe
in
sbbl
add
xlat
repz
fdivrp
adc
mov
add
jecxz
inc
std
out
cmpsb
add
mov
mov
ja
test
sub
pop
jmp
mov
fcoms
mov
out
add
add
std
mov
add
faddp
add
sub
inc
jb
stc
leave
jecxz
data16
sub
stc
scas
call
add
xchg
add
push
pushf
into
movsb
add
add
lds
imul
add
add
mov
push
fstl
enter
sub
test
xchg
into
push
mov
addb
dec
xchg
outsb
dec
test
aas
rcrl
mov
add
add
rolb
cmpsl
mov
add
mov
add
add
loope
add
fdiv
mov
loop
push
add
add
mov
lods
nop
add
add
push
add
add
mov
add
add
add
pop
pop
xchg
add
add
outsl
clc
in
and
cmp
mov
add
out
mov
add
mov
int
cmp
add
or
jg
xchg
cmc
adc
add
mov
or
les
daa
pop
leave
in
adc
pop
sub
rolb
scas
mov
sbbl
bound
mov
dec
and
add
add
data16
test
add
mov
iret
adc
add
repz
dec
rcrl
add
mov
xor
jle
in
icebp
popa
adc
fs
mov
cltd
ds
sbb
mov
xchg
dec
pop
inc
add
adc
addb
add
lret
push
add
dec
add
mov
jle
mov
push
add
imul
push
add
mov
test
add
adc
xchg
add
push
add
adc
push
add
dec
rolb
pop
inc
aaa
aas
arpl
add
sub
add
mov
or
add
add
jmp
add
push
add
roll
int3
lock
add
loop
addb
adc
add
add
mov
add
add
add
mov
push
add
push
xchg
xor
push
add
dec
mov
or
out
cli
js
int3
das
sti
adc
add
jecxz
add
and
dec
xor
xor
lds
pop
xor
int3
in
pop
add
cmp
ret
arpl
add
pushl
push
and
add
insl
cmp
xchg
add
add
add
add
xor
xor
ret
ja
mov
mov
hlt
add
xlat
in
xlat
xlat
cmpsb
add
ja
lods
std
add
rolb
test
addb
mov
mov
subl
add
add
push
cmpsl
mov
xchg
xor
add
rcl
adc
sub
rolb
aaa
jmp
add
add
add
lods
rolb
pop
loope
sub
sub
add
add
add
add
pop
loope
je
fdivs
mov
cmp
clc
adc
mov
ret
cmp
xchg
add
mov
or
rorl
pusha
add
data16
sub
and
mov
or
sub
rolb
mov
add
pop
les
jmp
pop
mov
sub
cmp
mov
add
inc
add
adc
xchg
inc
add
in
inc
mov
scas
or
add
adc
fwait
int3
pop
enter
repnz
mov
jp
dec
arpl
add
in
rep
lahf
pop
addb
aaa
jl
cmp
or
pop
mov
push
add
add
aad
lret
mov
mov
sub
sub
cmp
add
lods
insb
rolb
add
xchg
dec
pop
out
add
push
add
add
mov
pmuludq
jp
jne
push
add
add
int
add
mov
sbb
add
mov
fbstp
xor
add
lea
add
xor
inc
lock
push
add
add
and
rolb
add
bound
mov
cmp
mov
add
add
pop
aad
stos
subl
lret
mov
nop
add
lret
adc
inc
cmpsb
add
or
xchg
add
stos
xor
loop
outsb
cmp
or
cld
imul
stc
pop
popf
fs
add
mov
es
add
cmp
cmp
dec
movsb
add
je
fdivr
repz
test
pop
mov
ds
cmpsb
add
add
adc
add
mov
sbb
lahf
jl
xchg
add
pop
mov
sub
jg
stc
aam
sub
or
sub
add
jne
add
test
mov
scas
add
ret
adc
sahf
mov
add
mov
add
pop
testb
movsl
jl
in
inc
add
int3
inc
add
pop
mov
frstor
xor
mov
mov
sub
jmp
rolb
inc
add
addb
movsl
popa
gs
roll
mov
pop
out
jne
add
xor
jmp
lods
nop
add
sbb
mov
push
insl
ds
add
add
add
inc
add
rolb
imul
add
pop
mov
imull
xchg
add
in
add
add
push
sarl
inc
add
je
push
pushf
ss
int3
lds
imul
addr16
ja
add
sbb
pop
mov
je
push
push
add
pop
and
mov
inc
mov
insl
dec
ret
leave
mov
daa
mov
sbb
mov
fwait
lahf
and
mov
mov
add
inc
add
movb
add
jbe
rcr
push
cmpsb
add
add
add
adcl
mov
add
add
out
and
mov
add
mov
jge
add
in
in
mov
push
jle
cli
js
loopne
fsubl
or
add
ja
mov
cmc
xor
lret
out
out
lock
das
sub
fwait
dec
in
xchg
add
add
data16
mov
and
xchg
fnstenv
add
add
xchg
or
add
mov
xor
or
nop
add
fwait
stc
pop
pop
add
sarl
negl
popa
pushl
fidivrl
add
lcall
mov
fxam
rolb
add
outsb
testb
jmp
mov
movb
in
sbb
ret
data16
add
jmp
add
mov
add
or
icebp
je
xchg
add
add
bound
mov
out
dec
cmp
fbstp
mov
daa
jp
add
dec
rolb
cmc
jecxz
add
or
inc
add
add
leave
arpl
fdiv
fwait
test
fwait
sbb
addb
sub
xor
sbb
add
lahf
insb
adc
scas
inc
scas
stos
repz
movsl
pop
lods
xor
cwtl
sti
lahf
aaa
inc
mov
movsb
add
inc
push
add
jb
clc
rcll
mov
imul
cli
vmovntps
jmp
adc
push
or
sub
xor
adc
test
push
add
fmuls
jmp
ret
outsl
jae
loope
lods
add
lcall
mov
addb
mov
aam
js
mov
addb
scas
movsl
xor
sbb
pop
adc
add
rolb
mov
test
add
in
into
pushf
imul
in
mov
mov
add
push
push
repnz
scas
add
mov
addr16
push
add
mov
cltd
push
xor
pop
fwait
pop
inc
add
xchg
mov
add
xchg
add
test
jle
add
add
daa
and
mov
add
mov
xchg
out
mov
lds
addb
add
sbb
rolb
add
inc
add
lcall
or
jl
add
cld
stc
lcall
add
ds
lods
xchg
sbb
fcmovnb
add
mov
add
cwtl
xchg
add
fimull
push
out
aaa
sahf
in
dec
imul
cwtl
test
mov
loopnew
test
sbb
lds
fbstp
popa
movb
inc
aad
or
out
pop
jae
add
mov
repz
add
add
mov
decl
pmovmskb
adc
add
lock
frstor
jae
add
jp
jg
add
add
add
cmp
mov
clc
jmp
add
add
mov
push
add
stos
xchg
add
add
xor
add
mov
inc
add
lock
aad
out
mov
jl
out
mov
add
js
addl
add
add
jecxz
dec
sarl
add
add
add
add
pop
sti
cmp
add
add
dec
lahf
addr16
add
lahf
xchg
mov
push
loope
add
and
dec
addb
add
movb
daa
leave
bound
mov
movb
mov
add
fisttps
dec
and
mov
movsl
jp
add
mov
ret
lret
add
add
inc
add
mov
scas
jne
in
xor
insl
int
imul
add
add
dec
outsb
sbb
dec
inc
add
inc
add
sub
xchg
push
add
add
or
cli
xchg
add
shll
stc
dec
jge
ljmp
pop
mov
rolb
cmpsb
add
push
add
add
mov
add
add
add
in
sbb
adc
add
sub
lea
hlt
add
test
insl
imul
pop
inc
in
pop
xor
add
cmp
mov
xor
fiaddl
mov
mov
and
xor
add
dec
push
sbb
int3
pop
adc
xchg
faddp
je
or
pop
jo
and
in
sub
gs
jmp
cmp
push
add
aam
in
push
add
stos
dec
or
scas
fsts
add
add
add
add
mov
xchg
lahf
out
push
lock
dec
jmp
mov
mov
aam
jp
add
dec
pop
and
mov
mov
add
cmp
mov
adc
pop
cmp
mov
pushf
jmp
mov
cli
sbb
clc
ffree
add
jl
add
or
mov
repz
jle
push
add
pop
jae
in
addb
add
add
movsl
das
add
mov
adc
mov
mov
add
add
inc
add
add
idivl
add
mov
dec
jle
push
in
out
jge
add
fidivs
adc
jbe
enter
pop
cld
dec
mov
pop
cmpsb
add
lret
pop
adc
fistl
push
add
add
add
lods
or
mov
outsl
clc
sbb
lahf
add
out
add
lea
arpl
add
mov
add
add
cmp
movsl
into
sbb
sbb
add
inc
add
movl
daa
xor
mov
jb
mov
rolb
imul
add
in
mov
add
sbb
adcl
adc
xor
push
add
sbb
add
cmp
daa
push
aam
addb
mov
jge
jne
add
push
add
cwtl
cmp
jb
lret
in
lret
iret
cmp
ret
xchg
data16
jbe
adc
icebp
adc
push
inc
lret
add
iret
sub
mov
add
jns
jge
lods
add
mov
xor
add
jb
jge
add
push
rolb
dec
push
add
add
stc
or
mov
add
sub
add
jns
add
bound
mov
lock
loopne
cmp
mov
sahf
adc
and
pop
jmp
loop
or
lea
add
cs
add
xchg
addb
add
outsb
mov
add
sub
outsb
enter
dec
jo
sbb
sub
ds
push
inc
add
sub
dec
jns
add
jne
ds
into
xchg
sub
out
sbb
add
dec
and
push
add
out
dec
xlat
cwtl
adc
inc
stc
pushf
mov
add
push
add
dec
fnstenv
inc
loope
add
add
pop
add
jo
stos
lods
inc
sub
fidivl
add
test
mov
outsb
xchg
ficompl
stc
mov
iret
sub
and
movsb
add
loop
imul
cmp
dec
fwait
ljmp
mov
mov
push
pop
or
and
mov
pop
xor
mov
fisttps
rolb
add
std
dec
loop
loopne
in
add
add
std
lods
sub
xchg
add
jle
add
mov
mov
stos
push
add
mov
fdivr
xor
or
inc
push
jbe
les
out
adc
dec
jle
mov
and
mov
aad
inc
or
push
add
jge
dec
mov
fisubrl
or
pop
or
jge
xchg
add
push
add
add
push
add
add
cmp
mov
aad
push
push
add
inc
add
xchg
add
mov
add
stc
pushf
daa
or
add
je
gs
xchg
add
pop
xchg
add
adc
xchg
insl
jae
add
jmp
add
push
mov
mov
rolb
pop
cmp
imul
fildl
and
xor
mov
push
pusha
add
adc
in
es
cwtl
ret
lock
push
xchg
adc
mov
sbb
push
add
jmp
in
in
stos
xlat
adc
cmp
pushf
shl
xchg
add
mov
addb
add
add
adc
add
cs
add
add
add
ror
cmc
push
and
mov
add
pushf
out
pop
mov
adc
sbb
add
push
stos
mov
aad
cmp
icebp
cld
ficomps
pop
cmp
call
or
adc
cwtl
or
xchg
dec
enter
push
add
dec
sbb
fmulp
pop
mov
scas
inc
or
out
add
mov
loopne
jl
add
add
add
std
lahf
dec
addb
jg
sub
lret
push
add
jecxz
add
add
fsubp
jbe
je
or
add
mov
add
add
and
add
add
mov
js
mov
or
icebp
lahf
pop
adc
mov
sti
push
add
addb
inc
jmp
out
cli
mov
bound
mov
addb
rolb
add
pop
add
mov
addb
ljmp
add
mov
add
add
gs
dec
mov
mov
bound
mov
test
add
ljmp
roll
into
push
add
es
dec
mov
add
pop
in
adc
je
addb
add
popa
ljmp
add
add
bound
mov
add
outsb
aad
add
add
pop
mov
xchg
add
arpl
add
pop
orl
or
push
lock
mov
test
cs
pushl
mov
jo
add
push
add
add
add
lret
mov
loop
das
push
add
jp
push
aaa
xchg
insb
xchg
add
add
jecxz
xchg
scas
and
mov
lcall
jecxz
mov
add
adc
mov
jae
mov
pop
pop
mov
jg
add
imul
and
mov
add
xchg
in
pusha
add
inc
sti
add
test
mov
mov
push
cld
cs
mov
aaa
ljmp
add
inc
add
or
add
leave
lock
pop
jns
mov
jae
jg
in
clc
shll
mov
add
pop
js
push
add
movsl
aam
jne
add
mov
mov
xchg
test
outsb
xchg
pop
rolb
divl
add
addb
ret
daa
push
add
xor
inc
add
push
stos
add
add
stc
sub
adc
aas
shrl
jecxz
ret
loop
inc
jmp
mov
fldcw
push
shll
add
into
xchg
add
add
add
push
test
pushf
stos
cmp
pop
cmp
into
int
and
mov
add
pop
lods
cmc
fildll
add
mov
dec
rolb
pop
repz
add
inc
pop
add
mov
cmp
mov
add
push
add
xor
fdivrs
jg
xor
je
add
mov
testb
fmuls
and
mov
xor
mov
add
loope
adc
lret
mull
add
add
add
push
add
and
mov
outsb
mov
pop
xor
adc
push
add
add
add
lea
sti
fnstenv
dec
xchg
add
xor
and
mov
jmp
pop
xor
sbb
mov
les
mov
add
push
add
add
add
mov
push
add
lods
xchg
add
xchg
add
push
lock
repnz
mov
test
pop
movb
add
loopne
addb
xchg
loope
scas
addr16
pop
push
add
test
mov
lahf
xchg
data16
add
repz
mov
add
mov
add
mov
add
mov
add
mov
cmp
add
rolb
add
sbb
sbb
inc
dec
mov
cmp
add
wbinvd
popa
sbb
add
test
gs
mov
pop
loop
cmp
call
add
lret
jmp
mov
ds
repnz
int
add
fildll
std
lea
lea
mov
sahf
cmp
add
jbe
jge,pn
add
adc
sub
cwtl
fwait
int3
std
stos
jo
mov
mov
imul
ss
movsl
cmpsb
add
add
push
jns
add
sbb
jl
xor
mov
repz
icebp
xchg
xchg
add
mov
movl
sub
popf
enter
xor
inc
movsl
std
and
inc
add
out
loop
dec
mov
das
daa
js
add
aam
and
jnp
nop
add
jns
mov
add
cmp
cmpsb
add
and
clc
mov
insl
lds
les
or
add
add
ds
xchg
add
int3
jb
testb
dec
arpl
outsb
lods
xchg
add
add
add
xchg
add
add
mov
shr
dec
jg
call
repnz
sub
add
add
subl
arpl
icebp
mov
jmp
adc
sbb
add
stos
test
push
add
add
push
mov
loopne
hlt
add
mov
cld
sub
imul
add
int3
out
add
pop
add
mov
pop
jo
push
inc
add
das
sub
cs
into
jg
xchg
xor
push
xchg
and
mov
add
inc
add
adc
ret
dec
xorl
repnz
mov
jne
add
leave
in
popa
dec
push
add
mov
mov
add
jbe
pop
pop
ficoml
icebp
mov
add
in
add
cmp
mov
sbb
inc
add
out
js,pn
inc
xchg
add
add
lea
add
addr16
cwtl
xchg
push
add
cmc
or
rolb
fs
add
add
add
test
cwtl
ds
add
jecxz
addb
mov
sbb
add
stc
ljmp
jl
cwtl
aad
add
jp
into
mov
pop
push
add
add
insb
xchg
add
add
lahf
ret
stos
pusha
add
data16
add
leave
call
scas
outsl
fsubrp
push
stos
and
mov
int3
pop
adc
add
mov
aad
clc
lret
mov
test
repz
xchg
add
adc
jne
add
dec
add
push
add
testb
sub
mov
popl
and
pop
and
mov
mov
mov
add
add
add
add
add
mov
push
xor
or
leave
cmp
mov
dec
cmpsl
xorl
xorps
mov
adc
push
add
lcall
add
add
pop
fs
add
mov
mov
sub
cmp
add
mov
roll
and
mov
add
pop
or
add
push
xlat
mov
xor
popa
cs
pop
das
sub
add
cmp
idivl
lods
jge
into
xor
xor
cmp
dec
cwtl
scas
lods
insl
das
addr16
add
mov
popa
adc
cmpsb
add
mov
add
add
or
cmp
add
xchg
add
test
push
lods
jge
test
mov
fistl
add
dec
mov
inc
add
sbb
add
rol
add
cmp
ds
xchg
int3
cmp
xor
mov
add
pushf
loopne
xchg
add
add
add
add
movsb
add
add
rolb
fadds
pop
xor
jo
dec
mov
int
test
mov
daa
add
push
add
jmp
add
dec
mov
scas
cmp
dec
or
add
cwtl
imul
add
mov
dec
out
sbb
push
add
or
add
add
sarl
mov
cwtl
fmul
inc
fdivl
rolb
stos
add
mov
add
movsl
imul
inc
add
mov
add
push
or
mov
add
popl
sub
inc
add
add
movb
aad
add
add
mov
add
mov
loopne
lcall
sbb
dec
das
add
mov
mov
mov
out
pusha
add
add
and
ds
bound
mov
add
add
xor
testl
addb
cwtl
jge
jp
xlat
int
pop
sub
sti
xor
jecxz
add
add
dec
cli
test
add
adc
xchg
add
jle
data16
sahf
mov
xchg
or
add
push
and
mov
cmp
add
add
sbb
fidivrl
adc
mov
xor
adc
mov
fwait
iret
add
mov
fst
add
push
add
in
mov
add
add
in
out
testb
cmpsb
add
add
dec
cmp
in
and
mov
add
push
add
sbb
xchg
xchg
cmp
int
adc
xchg
jp
add
add
mov
rolb
hlt
add
add
sahf
rolb
sub
data16
fisttps
das
mov
add
rolb
dec
test
mov
movsl
add
into
jg
dec
sbb
adc
add
adc
pop
cmp
jae
lcall
add
popa
stos
aaa
cmc
imul
call
mov
jp
add
add
scas
rcll
jmp
add
jg
add
xlat
jnp
outsb
inc
xchg
add
add
ja
add
jmp
test
push
add
push
add
mov
dec
sbb
pusha
add
push
scas
lods
or
and
mov
add
inc
dec
adc
mov
mov
add
push
add
movsb
add
mov
in
js
xor
mov
xchg
add
repnz
pusha
add
nop
add
pop
rolb
jge
add
xchg
mov
fistpl
ret
fistpl
mov
mov
push
popa
sub
add
mov
add
mov
ds
test
jbe
outsl
loop
sti
mov
sub
adc
xor
xor
push
insl
jae
mov
jae
add
add
push
adc
and
fidivrs
rolb
mov
mov
ficoml
add
insb
add
add
mov
add
ret
dec
mov
fimull
aam
inc
add
scas
mov
sub
add
lret
adc
popa
repnz
push
cmp
mov
push
add
popa
cmc
xchg
add
mov
xchg
xor
add
add
add
pop
and
and
mov
add
sub
xchg
add
dec
rolb
fisubrl
add
add
mov
sub
sbb
ljmp
add
add
add
add
arpl
movsl
cld
popf
dec
push
add
add
mov
dec
jecxz,pt
or
dec
xchg
add
add
stc
test
imul
cwtl
mov
push
repnz
add
cmp
testb
xor
shl
shl
int3
aas
ljmp
mov
or
sti
mov
mov
movsl
stos
ret
shrl
mov
int3
mov
adc
add
push
add
bound
mov
xor
add
outsb
je
inc
mov
adc
mov
inc
ret
shrl
xor
loop
or
pop
syscall
sbb
add
mov
push
add
jg
adc
fiaddl
and
sub
addr16
call
jg
add
mov
add
je
fcmovb
add
jns
add
add
enter
or
add
add
add
add
mov
fwait
adc
fsubs
add
dec
popa
int3
adc
cmc
sub
mov
aam
fsubs
cmp
and
sub
adc
xor
iret
addb
rolb
add
pop
movsb
add
add
add
jb
push
fdivs
add
pop
loope
mov
addb
add
jge
lret
aaa
or
setb
mov
add
es
add
add
mov
add
inc
jp
adc
fwait
sbb
scas
icebp
aam
aaa
mov
int
add
mov
fld
mov
xchg
add
cmp
call
stc
dec
sub
xlat
pop
jb
inc
add
lock
push
add
test
xchg
add
cmpsl
inc
add
stos
test
sbb
xor
inc
add
lcall
mov
add
pop
xchg
add
ds
add
mov
das
add
pop
add
cmc
int3
aad
xchg
sub
jno
xchg
add
in
repz
jge
je
das
push
add
stos
mov
out
inc
add
les
jecxz
fiaddl
mov
push
fidivl
gs
sub
daa
fisubrs
xchg
add
bound
mov
xchg
cmp
pop
pop
data16
mov
movl
adc
in
pop
pushf
push
jmp
mov
pop
shrl
or
cmp
jp
add
cmp
or
mov
push
pop
inc
add
enter
iret
mov
jnp
dec
jp
gs
sbb
mov
mov
aas
or
jno
add
add
lret
push
add
lret
loope
mov
sbb
mov
push
jl
inc
add
fistpll
or
lret
aad
add
cmc
jnp
pop
lret
popf
push
add
push
mov
sub
xchg
xor
or
add
addb
add
loopne
popf
cld
push
add
inc
add
mov
int3
sub
in
in
adc
add
addr16
add
jmp
in
push
add
push
adc
leave
lods
sbb
data16
add
rolb
lahf
add
bound
mov
xor
add
pop
sub
add
mov
lret
loop
pop
flds
cltd
xor
fbstp
add
add
xchg
or
add
jecxz
add
mov
or
fwait
jnp
mov
add
mov
add
mov
inc
push
or
pop
ret
jne
pop
inc
inc
rcll
xor
sub
pop
in
dec
out
ret
pop
gs
cmp
add
mov
push
add
jecxz
add
pusha
add
pop
adc
into
ret
add
add
ds
add
dec
jl
rolb
divl
cmp
sub
mov
cmpsb
add
sub
test
dec
call
dec
pop
mov
cltd
daa
insl
push
xlat
test
add
add
lock
andl
cmc
xor
mov
into
movsl
and
add
stos
insl
leave
jg
add
add
mov
test
movsb
add
add
add
js
lahf
and
mov
sub
mov
or
out
scas
mov
xchg
add
imul
popl
repnz
add
add
inc
add
add
lods
out
cmp
add
adc
jle
lcall
jl
or
data16
rolb
xchg
add
ret
sbb
add
ljmp
call
insl
loopne
mov
out
xchg
push
add
lcall
add
popf
jge
out
xor
loope
bound
mov
add
pop
mov
xor
outsb
fdivrl
fstpl
add
gs
add
loopne
jge
add
fnstsw
lods
popf
fnstsw
jnp
rolb
sub
add
mov
ljmp
fadds
js
dec
adc
mov
cmp
std
shll
adcl
mov
push
outsb
fldt
sarl
mov
xchg
add
daa
pushf
jae
add
push
jl
leave
cmc
je
fucom
out
movsb
add
add
lret
add
stos
jle
ja
add
testb
xor
adcl
jae
fiadds
cmp
add
sub
add
test
lds
cs
xor
cmp
add
or
cmpsb
add
inc
cmpsl
call
imul
or
add
add
push
flds
loop
int
xchg
mov
les
pop
daa
repz
xchg
sbb
je
sti
sti
pop
adc
mov
mov
add
cmp
imul
mov
xchg
jnp
mov
pop
add
add
jmp
stos
repnz
xchg
cwtl
lods
addb
ret
leave
inc
add
or
xchg
loop
dec
out
rolb
test
lea
pop
icebp
insb
fistl
add
add
adc
out
clc
or
cmp
lods
bound
mov
mov
testb
pusha
add
inc
add
inc
mov
add
imul
bound
mov
dec
bound
mov
hlt
add
add
pop
cli
sbb
les
pop
testb
add
add
scas
cs
push
adc
mov
add
push
xor
loope
out
fstpl
add
mov
push
add
outsl
cwtl
repz
jg
and
mov
add
mov
add
mov
inc
pop
addb
lahf
mov
in
add
xor
sbb
add
add
mov
and
mov
out
cmp
adc
sar
jns
data16
pop
and
mov
mov
add
jle
fisubrl
fadd
add
lcall
cmp
js
pop
ret
shl
add
cli
xchg
test
loope
and
mov
add
or
add
pop
mov
rolb
test
fimull
add
loope
add
clc
test
sbb
addr16
clc
inc
add
adc
mov
rolb
int3
mov
jbe
in
mov
mov
pop
dec
repnz
iret
jns
xchg
out
jecxz
add
dec
sub
std
testb
add
add
add
mov
add
stos
bound
mov
add
jns
dec
lahf
or
xor
adc
adc
mov
xlat
daa
popf
sub
movsb
add
call
insl
hlt
add
outsb
or
add
cmpsl
fwait
jmp
sub
sbb
sbb
add
daa
insb
mov
das
gs
mov
popa
xchg
add
add
loop
lea
jo
imul
add
jg
add
jle
or
fstps
add
add
jbe
arpl
leave
inc
add
nop
add
aad
addb
add
outsl
imul
mov
xor
int
add
addb
jmp
push
add
push
add
add
leave
lock
pusha
add
xor
sti
outsl
xor
in
mov
in
popf
jae
add
mov
add
mov
mov
pop
push
add
sbb
dec
icebp
or
lds
mov
and
inc
add
add
xchg
jo
iret
decl
in
test
adc
aaa
bound
mov
adc
mov
ljmp
pop
add
push
bound
mov
ds
ret
fldl
xchg
cli
outsb
mov
push
int
pop
pop
les
pop
cld
insb
push
add
add
add
cmpsb
add
dec
dec
out
push
je
xorl
dec
cmp
add
fcomp
inc
fsubr
bound
mov
add
add
test
cwtl
sub
mov
movsl
in
pop
xor
mov
adc
mov
dec
push
add
add
popf
int3
push
add
scas
ret
mov
clc
sbb
andl
add
add
add
jg
mov
out
int3
data16
cmp
xchg
cmp
mov
xor
add
mov
jno
jle
push
add
add
add
jns
lea
add
mov
add
mov
mov
add
xlat
sahf
sbb
fdivrs
lods
aad
add
sub
xchg
add
aad
into
push
repnz
add
inc
bound
mov
xor
cmp
add
ds
add
pop
std
cmpsl
daa
mov
lret
rolb
pop
push
int3
std
push
push
adc
sbb
fsts
sub
cmpsb
add
pop
dec
fldt
nop
add
popa
enter
mov
or
cli
xorl
fldenv
mov
jno
add
ljmp
add
mov
add
add
xor
cmp
cmp
push
or
add
mov
add
orl
and
mov
cmp
popa
dec
inc
add
xchg
fldenv
mov
div
add
mov
stos
and
push
add
cmc
push
ljmp
in
cmp
fistl
jl
leave
and
orl
arpl
add
rcpps
push
dec
mov
iret
lock
ret
ret
addb
push
in
jns
jge
pop
rolb
adc
jo
call
and
add
pop
sub
data16
iret
int
xor
rolb
jbe
jecxz
xchg
and
aam
pop
int3
fcoml
addb
lret
sub
bound
mov
data16
or
insb
ret
aad
pop
or
into
dec
mov
add
xlat
pop
pop
fdiv
add
add
add
aam
inc
add
jbe
stos
mov
cli
sahf
adc
add
dec
insb
fnsave
jmp
fnstcw
imull
adc
cmovg
jno
add
dec
out
ja
pop
out
add
add
jmp
cmc
pop
jns
sbb
out
pushf
xor
add
xchg
add
add
mov
add
mov
jmp
add
push
ret
cld
test
mov
mov
lock
mov
push
add
xchg
leave
pop
xchg
add
sub
inc
mov
sbb
add
push
mov
xor
add
xchg
adc
pushf
cli
adc
dec
mov
fisubrl
xor
pusha
add
stc
sbb
decl
ret
mov
xor
mov
push
add
shll
lods
jge
add
and
add
test
pop
sbbl
dec
push
lahf
sub
jl
add
dec
cmc
cmc
mov
and
jp
mov
cmc
std
rolb
xor
cs
out
lea
mov
push
add
movb
add
and
sbb
jno
in
repz
inc
rolb
les
cmp
mov
add
insb
jns
add
test
add
add
add
cvtps2pi
movsb
add
add
and
insb
leave
je
mov
jmp
mov
add
popa
mov
xchg
enter
sbb
movsb
add
xlat
pop
mov
cmc
movb
mov
stos
mov
add
mov
stos
cmp
mov
add
out
mov
sbb
xchg
add
or
or
mov
xor
lock
add
jbe
jae
repz
add
add
jle
add
add
cmp
cmp
call
mov
mov
xor
loopne
mov
ret
xchg
add
add
arpl
mov
push
add
mov
lcall
sbb
push
mov
add
ficoml
add
insl
hlt
add
push
add
mov
add
xlat
jp
pop
data16
xchg
lahf
xlat
pop
mov
pusha
add
cmp
add
push
add
push
arpl
mov
cmpsb
add
or
cwtl
cmp
jmp
push
lods
inc
aas
aas
add
mov
add
adc
add
add
sbb
mov
test
push
add
adc
mov
add
cmp
mov
mov
or
iret
and
cld
pop
testb
adc
add
popa
mov
leave
jb
mov
mov
add
jne
scas
xor
mov
inc
adc
pop
push
add
lock
scas
aas
mov
sbb
cmp
add
adc
mov
mov
add
push
inc
outsb
mov
cmp
dec
sbb
add
mov
ja
mov
add
mov
incb
mov
add
jle
xchg
fcomps
mov
add
cmpsl
fsincos
mov
xor
sar
test
out
adc
mov
popf
mov
add
add
add
add
push
out
mov
shll
scas
stc
sbb
add
mov
in
outsb
aad
cmp
movb
icebp
imul
std
or
add
test
bound
mov
add
cmp
xor
rolb
rolb
enter
ljmp
add
dec
scas
cli
xlat
mov
mov
add
inc
add
dec
cli
into
cmp
sbb
imul
add
lret
mov
add
push
mov
iret
dec
popf
jl
add
add
insl
rolb
ljmp
add
add
jg
les
shll
add
ljmp
mov
jae
mov
xor
push
add
dec
add
inc
add
ja
in
enter
inc
pop
jb
adc
mov
xor
sbb
add
stos
xchg
add
cmc
adc
bound
mov
insl
adc
xchg
ret
ja
xchg
test
inc
mov
or
inc
add
jg
add
add
add
add
in
add
popf
addb
mov
add
adc
inc
push
add
jmp
mov
add
add
nop
add
inc
scas
loope
dec
adc
jbe
jl
add
inc
add
rolb
xchg
mov
xor
add
std
cld
sub
adc
daa
ret
mov
outsl
push
add
fwait
out
jb
loopne
sbb
arpl
pop
jnp
les
dec
lret
push
add
sub
ja
add
cwtl
movsl
lods
mov
add
mov
jo
movb
mov
cmp
pop
mov
add
add
cmpsl
out
dec
arpl
lahf
mov
scas
dec
push
add
pop
lock
add
add
daa
mov
add
push
loopne
stos
push
add
inc
add
xor
add
stc
mov
subl
jecxz
or
add
add
enter
fnstsw
pop
subl
fisubrl
and
add
mov
arpl
dec
adc
rorl
test
add
add
adc
lret
add
pop
mov
jo
inc
aad
add
lcall
push
add
aaa
pop
pop
mov
mov
into
pop
cmp
add
add
jbe
scas
mov
ja
outsb
addb
ret
add
pop
stc
dec
push
add
push
add
mov
ss
add
add
dec
loopne
dec
pop
inc
fnstcw
lods
fsubrp
mov
sbb
xchg
add
and
add
add
out
mov
add
add
xchg
push
add
data16
jne
sbb
add
loope
leave
inc
add
dec
rolb
imul
pop
sub
push
add
adc
adc
les
sbb
cmp
sbb
scas
or
mov
mov
lret
push
pop
cltd
or
out
loop
mov
and
xor
mov
imul
cs
push
add
fs
pop
inc
add
dec
ret
jecxz
add
xchg
add
xchg
xchg
sti
xor
sub
ret
add
and
addb
in
leave
or
add
testb
add
and
mov
push
add
mov
lahf
repnz
mov
mov
add
test
push
add
add
fiadds
mull
dec
sti
ret
inc
mov
add
mov
dec
dec
add
fwait
incl
rol
dec
int3
inc
insb
std
pop
subl
sti
sub
add
cmp
pusha
add
stos
adc
mov
out
xchg
leave
mov
and
sbb
dec
lcall
mov
fdivrl
dec
inc
or
add
xor
and
addb
or
pop
adc
add
add
add
sbb
add
xchg
add
lods
mov
fld1
inc
add
add
dec
mov
or
push
lcall
dec
out
scas
outsb
shr
jbe
enter
add
add
cltd
sbb
push
fstp
mov
data16
cmp
call
inc
add
out
into
rolb
dec
lahf
fs
mov
add
mov
xchg
add
xchg
add
add
ret
mov
test
dec
jle
and
mov
add
push
add
add
jb
mov
rolb
push
add
pop
sbb
xor
add
mov
lods
mov
mov
das
scas
cmpsl
jg
add
add
add
add
dec
fnstenv
add
inc
add
test
pop
shrl
push
add
mov
push
push
js
jne
add
inc
notl
jae
push
out
leave
or
add
add
or
pop
rolb
add
xchg
pop
test
roll
lret
dec
dec
popf
lcall
scas
out
movsl
repnz
or
ret
or
lea
xchg
add
add
pxor
sahf
jmp
dec
jge
dec
add
mov
loopne
cmp
add
push
lock
mov
xchg
dec
pop
add
adc
std
and
mov
add
add
int
sbb
addb
pop
jle
rolb
push
add
sub
in
jb
inc
add
sbb
mov
xchg
mov
inc
or
add
add
jnp
add
int3
pop
lret
out
loop
jmp
rolb
imul
pop
jecxz
jb
aas
mov
sub
jecxz
add
ja
in
aad
stos
movsl
cmpsb
add
imul
jo
shll
mov
push
fbld
jne
cmp
add
sbb
jg
sub
scas
mov
cmc
call
lret
pop
push
add
call
or
add
js
add
jo
mov
out
inc
pop
pushf
xchg
add
xor
adc
fdivl
inc
add
lret
mov
sbb
mov
cli
pop
push
add
jle
imul
add
int3
add
addb
add
xor
xor
push
mov
inc
mov
adc
mov
inc
add
dec
arpl
add
aam
jae
jmp
fldenv
add
mov
stos
loopne
sub
daa
aaa
or
mov
js
sbb
add
add
add
adc
aas
push
jno
std
fistpl
pop
mov
sahf
mov
or
add
add
add
dec
or
sub
sbb
inc
add
movb
shll
mov
add
jl
xor
lods
fsubp
pop
mov
add
bound
mov
jbe
lds
jno
dec
icebp
cwtl
mov
outsl
dec
fcoms
mov
mov
pop
movsb
add
inc
add
add
mov
or
test
cmp
add
rolb
cli
clc
add
add
pop
mov
sbb
push
sahf
push
add
jmp
cmc
push
ds
add
push
add
ja
add
in
xor
mov
mov
pop
rorl
add
pop
aad
or
cmpsb
add
push
and
je
and
add
dec
mov
imul
mov
jmp
dec
push
add
int
popf
in
jg
xchg
xchg
add
xor
dec
les
hlt
add
add
add
mov
icebp
jg
inc
add
mov
daa
cmp
mov
add
popa
popf
jbe
sub
push
add
cmp
lret
add
push
aas
mov
mov
test
lea
gs
cmp
cmpsb
add
lcall
jp
cmp
daa
pusha
add
lcall
mov
add
jmp
add
stos
in
sub
add
push
add
jb
push
add
lds
add
add
add
lret
xor
push
or
out
xor
ficompl
inc
add
add
in
cltd
fidivrs
sub
jl
nop
add
add
add
add
inc
add
jmp
push
xor
fcomip
add
or
bound
mov
hlt
add
jno
sbb
add
imul
mov
add
and
add
mov
add
add
pop
push
add
add
scas
cwtl
sbb
add
add
das
pop
xchg
mov
out
movb
add
add
add
sbb
xlat
cmp
mov
push
add
stos
mov
cmp
cltd
xchg
enter
mov
shrl
aad
pop
fmuls
mov
call
cmp
rorl
add
dec
popa
das
ja
rolb
add
add
add
dec
pop
cmpsb
add
xlat
aas
inc
add
shll
testb
push
jnp
add
adc
adc
jecxz
or
add
add
mov
add
jno
add
mov
rolb
call
scas
ret
add
push
jecxz
sarl
addb
cwtl
das
aas
je
outsl
loop
daa
dec
cmpsb
add
ret
add
jae
fistps
add
jmp
mov
lret
mov
add
stos
std
addb
add
js
sub
rolb
jne
add
adc
add
add
add
sbb
add
and
nop
add
or
mov
rolb
scas
sti
sbb
jmp
mov
add
in
fisubrl
dec
loop
inc
add
add
lahf
sbb
cmc
sbb
inc
add
or
add
add
jp
pop
mov
loopne
out
jb
dec
rcll
inc
add
movsl
pop
xchg
imul
pop
push
adc
mov
sahf
in
test
add
mov
in
add
rolb
pushf
outsl
xlat
mov
add
push
push
add
rolb
stc
mov
mov
add
push
push
lock
outsb
xchg
mov
add
imul
sarl
push
add
add
jb
movsl
lock
aam
xchg
leave
imul
mov
add
mov
or
cmp
data16
icebp
sub
cmp
add
js
add
jmp
pop
sub
adc
sbb
fsubs
lock
add
xor
pop
in
add
mov
xor
addb
cmc
and
xchg
jg
xchg
push
add
nop
add
mov
stos
mov
call
jb
sub
add
and
mov
jmp
mov
in
loope
add
add
