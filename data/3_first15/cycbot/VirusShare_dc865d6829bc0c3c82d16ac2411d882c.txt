push
int
fs
add
mov
movb
mov
fiadds
push
or
mov
cmp
fdivs
push
rolb
add
mov
push
inc
push
jge
stos
mov
sbb
popa
lret
out
push
adc
dec
movsl
lret
lock
sbb
sti
xor
out
mov
fisubs
sub
add
pop
into
jnp
inc
or
inc
add
sar
xchg
mov
sub
out
jp
pop
push
cmp
inc
dec
lea
fldenv
movaps
test
dec
cmp
xchg
dec
push
orl
call
fsubrl
inc
add
test
cltd
dec
ja
inc
adc
sub
std
stos
into
mov
sbb
push
in
in
out
pusha
add
stc
jge
and
xor
add
mov
fs
sub
aam
push
jbe
movsb
aaa
sub
sub
mov
in
mov
clc
jno
xchg
aad
add
pop
dec
loop
shrl
lret
sbb
xchg
outsl
fisubrl
arpl
lds
xchg
and
sbb
mov
and
and
test
repnz
jmp
int3
cmpsl
adc
divl
sub
pop
sbb
shll
cmp
add
add
add
xchg
adc
fs
inc
cmp
mov
loopne
insb
and
sahf
lcall
dec
jnp
mov
xor
xorl
mov
insb
dec
int
popa
fisubs
mov
ja
sbb
fwait
push
mov
sahf
hlt
pop
test
cmpsb
mov
push
or
stc
xor
pop
outsb
lock
iret
xchg
fsubrp
push
lods
mov
sahf
mov
pop
xchg
pushf
arpl
sub
mov
sahf
sub
inc
add
inc
add
xor
dec
repz
std
nop
xchg
outsl
pop
mov
add
dec
arpl
xchg
pop
mov
add
add
lds
inc
add
ds
mov
sbb
fsubs
mov
scas
cmp
push
cmp
sahf
mov
xchg
test
mov
dec
in
push
mov
add
sbb
mov
and
enter
sti
int
mov
jg
lret
insl
or
imul
leave
mov
popa
push
movsl
mov
add
movsl
or
pop
stc
jbe
add
add
in
push
and
xor
or
fs
movsb
pop
or
movl
adc
adc
push
add
push
iret
pop
add
push
lea
stos
test
push
dec
ljmp
or
stos
out
pop
adc
addb
enter
idivb
in
sbb
outsb
roll
add
or
xor
sarl
aam
out
inc
xor
in
or
ljmp
aam
mov
xor
imul
add
icebp
push
movsb
icebp
icebp
sbbl
mov
imul
mov
mov
jns
mov
xchg
je
insb
insl
cmp
mov
mov
roll
movl
mov
mov
jb
dec
push
mov
cmpsb
mov
cmpsl
test
rorl
jge
divl
or
dec
mov
jmp
jnp
and
add
aad
xchg
mov
inc
add
out
add
add
push
mov
repnz
inc
add
sbb
cltd
in
sub
dec
pop
out
movsl
adc
add
out
dec
jle
scas
ret
pop
mov
jmp
add
lahf
addb
mov
xchg
xor
adc
les
hlt
mov
filds
fstpt
out
iret
mov
enter
outsb
fcompl
cmp
add
push
pop
leave
sbb
add
js
ret
loope
push
cmp
mov
or
mulb
fists
sbb
jb
sbb
xlat
icebp
rcl
xchg
inc
add
aad
jmp
sub
sub
or
nop
adc
cmp
sub
add
scas
mov
or
sbb
out
insb
ss
sbb
add
add
loope
xchg
stos
cmc
jno
hlt
dec
add
insb
cmp
add
cli
cmp
int
movsl
push
loopne
ss
xchg
idivb
fimull
inc
add
cmp
ljmp
add
inc
ljmp
jnp
mov
aaa
mov
add
repz
xor
addb
mov
push
addr16
add
cmp
test
leave
mov
jns
jle
add
add
mov
roll
add
add
sbb
push
push
scas
dec
and
sbb
push
ja
xchg
or
pop
xchg
jo
movsb
inc
add
pop
int
xor
add
jle
dec
push
pop
mov
cltd
jb
mov
rolb
les
fstpl
ret
and
push
jge
cmp
dec
movsl
mov
cmpsl
addr16
dec
jbe
out
rol
push
ljmp
addr16
and
dec
popl
add
cmp
inc
add
sub
jns
xor
push
outsb
aad
imull
adc
add
leave
or
pusha
add
push
add
lahf
stos
fnstsw
and
add
dec
scas
fcom
ljmp
add
add
aad
inc
hlt
test
add
ss
in
into
cmp
adc
stc
nop
lcall
xor
xchg
movsl
mov
xchg
fs
mov
and
add
sub
or
cmpsl
or
jo
cmp
lods
adc
pop
cltd
xchg
call
sahf
test
pop
repz
mov
cs
lret
push
lds
fmuls
xchg
vandpd
mov
add
sub
aaa
jnp
push
movsl
or
repnz
add
add
jns
daa
cmp
addr16
xchg
mov
add
mov
push
add
pop
dec
mov
sbb
push
sub
daa
lcall
mov
fld
add
mov
cmp
into
fstpt
jbe
sub
enter
jle
inc
aaa
popf
and
mov
mov
dec
jns
mov
sbb
aas
xchg
popa
jb
add
xchg
mov
clc
cmc
into
addr16
inc
add
int
xchg
mov
cmp
dec
dec
cs
pop
popf
mov
xchg
in
fld
add
jmp
add
xor
iret
sti
mov
gs
xchg
mov
inc
add
jae
into
sbb
inc
add
add
leave
js
add
mov
cld
sub
add
ror
push
mov
clc
inc
push
add
mov
lahf
lahf
ret
add
in
scas
loope
add
pop
cmp
test
insb
sar
ljmp
test
in
cmp
mulb
mov
dec
cmp
jnp
xchg
aad
daa
dec
lahf
in
cmp
xor
sub
sti
mov
mulb
imul
lahf
push
sbb
test
fisubs
and
addr16
pop
cld
inc
add
sub
mov
fucomp
jae
or
fidivrl
jae
orl
lods
stc
stos
xchg
mov
pop
xor
mov
cmp
xchg
rolb
mov
into
xor
mov
mov
leave
in
pop
mov
in
insl
popf
xor
inc
jp
sti
bound
dec
cli
inc
add
add
dec
add
xor
ret
dec
ret
inc
jmp
insl
add
faddl
mov
nop
dec
les
pop
pusha
add
adc
push
push
xor
fdivrs
das
movb
mov
loop
fisttpll
int3
lods
push
add
negl
sub
inc
add
and
psllw
inc
pusha
add
addb
divb
sbb
icebp
int3
or
push
lock
xchg
xor
sti
mov
jno
xchg
cmc
and
xor
call
add
aam
lcall
jmp
mov
sbb
lods
inc
add
ja
hlt
call
es
add
lods
mov
xchg
lcall
add
in
lahf
out
sti
cs
mov
cmpsl
sub
jne
mov
xchg
mov
push
imul
mov
or
push
ds
mov
hlt
nop
aad
aad
add
add
ljmp
adc
push
icebp
mov
aad
cs
mov
adc
mov
xchg
fst
popf
push
mov
mov
sbb
or
addb
pop
and
xchg
jo
data16
in
mov
cwtl
push
scas
pop
test
test
mov
loopne
sub
dec
jmp
in
jno
arpl
push
rolb
js
jl
pop
mov
addb
mov
aad
xor
das
adc
scas
jnp
sub
jecxz
nop
loop
add
cs
fs
sti
push
fdecstp
mov
adc
rolb
mov
add
sbb
clc
push
ss
jmp
outsb
push
jge
mov
call
push
jmp
test
in
push
cmp
aam
in
push
and
out
xchg
fs
bound
mov
add
into
andl
add
sarb
xor
mov
daa
stc
jl
shll
ret
imul
add
and
shlb
stc
xchg
ja
and
sub
or
ret
sbb
cmp
stos
and
mov
inc
add
addb
jmp
jge
insl
sbb
arpl
idiv
insl
das
and
leave
sti
sbb
add
testb
push
lcall
cmp
sub
sub
ret
inc
add
add
dec
cmp
sarb
fildll
add
add
and
push
jp
clc
cwtl
cmp
dec
and
test
mov
jns
cmpsl
jge
insl
lcall
aam
add
scas
cwtl
push
iret
callw
push
rcll
test
xor
mov
scas
aad
add
or
jo
push
add
outsb
lock
add
pop
dec
popa
mov
mov
clc
lock
pusha
add
add
popa
add
dec
xchg
int
cs
lock
testb
add
xor
add
mov
xchg
xor
jne
adc
and
or
sub
jb
and
adc
mov
and
push
inc
add
inc
inc
cmp
arpl
sub
pop
xor
cmp
roll
iret
outsl
movsl
jge
push
jg
sti
sbbl
pop
or
xlat
mov
shll
push
popa
ja
push
inc
add
addb
pop
pop
in
cmpsl
and
call
nop
inc
add
mov
jmp
inc
mov
out
add
jae
leave
xchg
or
cmp
add
jno
fnstenv
popa
mov
cmp
fdiv
mov
or
xchg
loop
in
cld
lock
fidivs
addl
push
test
mov
xchg
sbb
fidivl
clc
shr
add
hlt
outsb
adc
pop
std
adc
or
adc
hlt
pop
jno
dec
mov
xor
stc
icebp
ja
fdivl
xchg
shll
add
fimull
sahf
mov
push
insb
dec
addl
add
mov
sub
mov
xor
stos
scas
test
lret
xor
incb
aaa
xchg
roll
pop
out
icebp
pop
add
mov
mov
push
add
push
add
cmc
pop
ret
jle
std
or
sub
scas
mov
les
xor
fdivr
jne
lods
push
inc
add
cmpl
ljmp
fwait
ss
push
jmp
sti
scas
imul
add
outsl
mov
xchg
add
push
jp,pt
daa
mov
outsb
addr16
add
addr16
xchg
fldl
pop
es
out
cmpsl
push
add
ss
jmp
movsl
shl
mov
adc
nop
push
mov
scas
mov
or
push
dec
push
repnz
xchg
popf
xchg
jb
int3
cmp
jecxz
inc
add
mov
mov
and
fmuls
add
lret
out
pop
hlt
out
inc
add
outsl
dec
cmp
lea
add
je
pop
icebp
out
decl
loop
mov
int3
jg
in
mov
add
test
add
scas
dec
or
enter
enter
add
ljmp
repz
rolb
lea
add
xor
xor
ss
jl
jl
daa
jo
add
or
cmp
movsb
frstor
push
rolb
add
jmp
lods
ss
movsl
in
or
jg
push
dec
push
add
mov
cmp
cltd
es
push
push
dec
pop
sub
xlat
in
rcll
jae
cmc
std
or
pop
jne
cmp
add
mov
dec
hlt
lods
pop
negl
push
dec
push
stc
push
test
jns
test
mov
out
mov
sub
add
jl
xchg
mov
push
jl
pop
and
xchg
push
xchg
ficoml
loop
xchg
cmp
outsl
lcall
push
add
add
jmp
and
mov
push
loopne
fisttps
jmp
and
std
fistpl
sub
push
and
push
sub
scas
cmc
testl
sub
xor
add
ss
cmp
faddl
sub
and
cmp
push
add
add
cmpl
dec
cmp
cli
push
mov
sub
push
push
push
cld
call
sub
mov
imul
es
ss
lea
push
push
push
call
cmp
je
es
lea
push
push
es
call
test
jne
jmp
icebp
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
lea
sub
xacquire
mov
sub
mov
cs
push
push
lret
jmp
add
add
inc
mov
or
mov
cltd
lea
jg
and
pop
lods
repnz
dec
xor
pop
push
push
mov
jp
and
mull
rclb
sub
pop
fmull
popa
mov
jp
jp
push
mov
aas
pop
jmp
xchg
adc
sbb
fs
je
adc
add
mov
pop
idivb
xor
push
or
xchg
addb
in
sbb
sub
pop
xchg
fidivs
lret
and
add
rorl
add
or
add
sub
or
cli
inc
add
push
xchg
xchg
sub
add
dec
xor
or
adc
sub
dec
adc
rorl
or
mov
jbe
repnz
mov
sub
test
fs
and
fldl
add
xor
add
or
xor
inc
adc
mov
pop
int3
push
aam
add
nop
lcall
clc
and
jg
addr16
mov
and
mov
mov
mov
fcomps
inc
add
or
mov
mov
nop
fimuls
lea
inc
fsub
pop
xchg
pop
stc
fistpll
push
sub
testb
mov
push
add
pop
inc
sub
jle
mov
mov
fidivs
icebp
pushf
repnz
roll
xor
fwait
sbb
out
or
mov
mov
push
popf
inc
popf
cmp
insl
mov
add
add
lods
pop
dec
addb
into
mov
aam
xchg
jecxz
lea
mov
add
dec
add
fsub
mov
cmp
add
add
add
mov
lock
add
adc
popf
ss
lahf
addb
insb
pop
clc
stos
mov
add
mov
sbb
inc
mov
or
rclb
and
jbe
pop
adc
pusha
add
add
insb
lret
js
jns
push
cwtl
ja
mov
adc
movsb
sahf
out
aaa
daa
mov
arpl
xor
dec
bound
out
stc
push
or
add
imulb
movsl
and
test
mov
lcall
mov
sbb
push
mov
jno
jno
add
pushf
push
inc
add
add
jno
lods
fwait
adc
push
or
scas
cltd
dec
and
ja
or
repnz
jg
cmp
pushf
clc
sbb
lcall
add
sub
add
push
xor
test
xchg
add
js
cmp
lea
insb
nop
mov
out
negl
mov
inc
rorl
pop
sti
push
jecxz
add
and
pextrw
push
pop
rolb
sbb
stos
insl
in
or
pop
mov
les
xchg
adc
mov
cwtl
shr
iret
das
inc
stos
bound
or
nop
lods
and
nop
jle
jb
cmp
and
jne
or
movsb
push
rcrl
add
mov
inc
add
cmp
add
push
arpl
jmp
jmp
outsb
ret
mov
push
test
neg
fcoms
fnstcw
inc
add
xchg
lock
cld
mov
mov
mov
xor
dec
or
shrb
mov
test
out
mov
adc
sti
lds
dec
pop
push
fstl
out
jbe
pop
jmp
cld
leave
push
pop
jns
pop
jecxz
fcmovnu
ficomps
aas
ds
js
out
lcall
jecxz
xchg
pop
cld
call
fdivl
addb
mov
add
xor
add
lea
pop
or
movsb
xchg
sbb
or
push
and
push
push
into
addw
in
int
leave
pop
and
adc
push
adc
push
movb
test
add
add
pop
es
add
popf
cwtl
les
xchg
das
sub
push
add
push
mov
adc
inc
or
add
pop
fistpl
int
dec
lret
xor
pushf
dec
jns
jnp
jmp
add
lea
mov
bound
stc
xchg
sbb
jne
in
mov
xchg
sbb
dec
es
lahf
mov
loopne
add
outsl
dec
shrb
jg
fidivrl
icebp
mov
and
and
add
mov
dec
sbb
add
test
jne
xchg
push
movsb
fwait
cmp
cmp
fucomp
ret
xor
cmp
sbb
dec
cmovae
imul
xor
jle
out
fs
and
in
stc
push
out
test
add
data16
vmread
call
rol
add
inc
add
and
ljmp
add
loop
sbb
imul
mov
addl
push
int
jb
add
dec
lock
xor
pop
addr16
call
out
or
popa
test
mov
add
lea
lds
or
bound
imulb
adc
addr16
push
repnz
mov
cmp
mov
loop
pop
push
movb
in
mov
add
shr
mov
repnz
or
js
add
testb
push
push
add
sub
rcrl
das
mov
or
movsb
push
add
add
addb
add
out
std
dec
mov
sub
lret
cld
ja
fldt
addb
rolb
test
inc
add
fwait
or
xlat
rolb
mov
ljmp
aad
jecxz
or
jmp
inc
add
std
fdivrl
sbb
in
and
sub
int3
and
je
mov
jecxz
roll
lcall
lahf
add
jae
loop
jp
rolb
add
sbb
mov
fisubrs
repnz
add
aam
pop
mov
add
mov
js
in
add
add
insl
jae
pop
mov
add
sub
loop
loopne
inc
add
add
in
or
stos
addb
leave
push
pushl
cmp
dec
out
lods
sarb
jmp
add
lret
mov
loope
fimull
mov
pop
inc
push
mov
push
add
or
ret
lock
icebp
bound
pop
mov
push
xor
pop
scas
jl
xchg
mov
pause
mov
and
pop
das
outsl
sub
xlat
aad
mov
push
pop
inc
add
loop
aam
popf
dec
pop
lods
mov
aaa
or
les
inc
add
fld
add
inc
add
nop
fwait
js
push
ljmp
jmp
mov
mov
inc
cmpsl
in
add
mov
cmpsb
clc
cmp
lcall
jb
pop
idivl
pop
jnp
push
jbe
xchg
sti
fcomps
mov
dec
repnz
xchg
out
fldenv
add
out
jae
push
add
notb
xor
movl
add
add
lcall
dec
jnp
shrb
pop
add
xlat
cltd
hlt
testl
std
sub
out
cld
jae
inc
cmp
popf
aam
aaa
rolb
dec
jnp
ret
pop
fwait
gs
lods
or
test
add
xchg
ret
push
sbb
repz
dec
jne
add
in
iret
clc
push
mov
cmp
inc
jp
dec
jmp
and
xchg
iret
shlb
lahf
dec
adc
jb
lock
push
pop
mov
cmp
push
add
add
push
add
rcr
add
ficompl
push
pop
mov
mov
mov
in
add
cmpsl
lret
cmc
les
adc
aam
and
mov
fsubl
aam
clc
pop
fldcw
icebp
or
xor
adc
add
in
and
arpl
out
rclb
jp
in
lret
js
mov
add
pop
invd
bound
into
addr16
and
scas
lods
sti
dec
push
inc
add
pop
pop
mov
pop
iret
cmp
fs
shll
loop
jbe
adc
imul
lcall
dec
add
mov
rorl
test
add
lret
lods
repz
push
add
jp
je
inc
stos
jnp
xchg
fidivs
addb
or
mov
mov
imul
add
add
sbb
add
pop
hlt
xor
and
les
addb
hlt
xlat
insl
inc
xor
add
xchg
fwait
repz
pop
push
mov
fwait
pop
daa
scas
adc
aas
jle
jno
pushf
js
inc
mov
ficompl
cmp
ljmp
jo
test
loope
add
or
xchg
cmc
adc
int
pop
mov
lea
pop
jmp
out
jle
sbbl
or
leave
push
and
insl
fcomps
ffreep
clc
fnstsw
add
push
ss
aad
and
fnsave
out
out
stc
sub
repz
daa
call
sbb
addb
dec
rcrl
insl
sub
stos
dec
xor
sub
mov
scas
ss
gs
hlt
add
mov
cld
cmp
and
mov
in
add
pop
sbb
add
iret
cmpsb
mov
jae
fnstenv
loope
sbb
push
sahf
mov
xor
outsb
es
mov
and
fmul
iret
push
add
sub
fmull
fstpt
outsl
outsl
test
add
jge
enter
test
add
dec
dec
fwait
push
cmp
xchg
out
push
jno
mov
mov
lcall
xrelease
mov
add
stos
inc
add
push
mov
xor
cld
rcr
test
add
jnp
mov
mov
add
add
sub
push
shrb
filds
fwait
xor
add
pop
dec
fadds
or
sbb
add
mov
adc
push
push
cmp
out
imul
je
cmp
xchg
xchg
sub
std
sub
movsl
stc
loope
push
inc
add
dec
movb
inc
add
cmp
jb
dec
pusha
add
or
iret
in
sub
sbb
pop
imul
pop
or
push
pop
loope
xchg
cmc
push
mov
cmc
pop
inc
pop
mov
repz
and
stos
or
inc
add
add
aas
fucomip
fstpl
jecxz
mov
es
add
and
outsb
dec
jge
int3
es
rolb
add
popa
sbb
xchg
lock
sbb
cwtl
push
sub
add
push
sbb
sub
lock
push
add
add
mov
jmp
or
xor
mov
add
add
aad
or
pop
push
inc
add
xor
dec
sbb
add
sti
fisubrs
cli
ds
push
rcl
push
fbld
rolb
repnz
sub
in
jg
pop
rcrb
dec
push
test
movb
sub
jecxz
adc
and
add
jp
or
push
jl,pt
mov
add
or
dec
clc
das
outsl
faddp
add
ret
lods
mov
adc
add
or
nop
mov
add
add
into
clc
inc
aas
jns
add
cmp
repnz
push
popa
aaa
bswap
dec
dec
push
aas
add
pop
fimull
movsl
push
inc
add
dec
loopne
lret
xchg
test
stos
call
lods
push
cmp
push
push
pop
jae
fsubr
sbb
lret
shrl
test
rcll
dec
fisubs
movb
data16
push
sub
inc
add
fdivrl
aaa
dec
mov
outsl
into
enter
push
or
loope
fcomi
lcall
pop
pop
add
sahf
lret
cmp
mov
imul
sbb
inc
add
push
cmp
jbe
mov
aad
std
pop
fwait
xor
mov
add
cmp
sbb
push
mov
add
and
nop
mov
nop
stc
push
clc
adc
and
xor
mov
dec
hlt
cld
inc
add
insb
push
jmp
lahf
dec
and
cld
push
pop
pusha
add
dec
xlat
dec
arpl
pop
insb
mov
pop
mov
jmp
scas
or
cmpsb
or
mov
dec
jnp
dec
rcr
je
insl
or
repz
inc
jl
jnp
pop
roll
jno
fcomps
pop
push
scas
les
iret
xlat
push
shr
pop
fwait
adc
aam
jb
and
jmp
add
jg
fisubrs
pop
ja
ds
test
sarb
cmp
xchg
pop
mov
add
cld
mov
sbb
jae
rorl
xchg
lods
bound
or
jb
mov
scas
movb
dec
inc
add
dec
dec
xor
add
ja
mov
out
mov
jp
push
aaa
aam
lret
dec
leave
pop
cltd
testl
add
mov
mov
int
fwait
jnp
repnz
add
stos
jp
pop
sti
cmp
scas
jl
loope
hlt
call
jns
shlb
push
jbe
mov
mov
pop
or
fisttps
icebp
addr16
hlt
cli
mov
add
repz
add
add
add
inc
add
or
stos
lock
jns
xchg
push
or
repnz
test
pop
xchg
mov
cld
mov
cltd
test
fxch
jmp
inc
add
jle
add
jb
in
es
xor
addb
mov
add
add
adc
mov
ret
das
mov
inc
loopne
lds
sub
mov
cmp
dec
and
xor
out
push
xchg
push
ret
inc
add
xchg
lock
sbb
add
ds
bound
jae
dec
outsb
push
xchg
test
push
sub
push
mov
sub
ljmp
stos
sub
iret
mov
loop
clc
xchg
sub
es
addr16
jne
test
xor
js
xchg
mov
fsubrs
lret
adc
repnz
ja
loopne
ja
xlat
xor
add
xchg
and
inc
outsl
enter
mov
add
mov
sbb
push
and
xchg
xlat
xor
mov
or
sarb
int3
xchg
lcall
imul
xor
movb
insl
mov
push
addb
cmc
and
popa
pusha
add
push
dec
push
add
mov
in
ljmp
sbbl
add
into
ja
enter
push
cmp
add
cmpsb
xchg
cmpsl
ret
xor
or
push
adc
pop
scas
pop
xchg
test
icebp
xchg
inc
fnsave
jle
xor
pop
fstps
push
add
pop
or
push
jmp
pop
inc
cmp
cmp
into
and
cltd
loop
add
adc
push
addb
mov
add
addb
fiadds
add
sti
xor
pop
cmp
or
in
cld
dec
push
mov
test
mov
movsl
sub
popf
into
movsl
or
insl
ret
jg
js
mov
add
shl
push
test
mov
xor
sub
push
push
mov
clc
hlt
aad
jne
add
sbb
add
test
es
mov
lahf
mov
or
stos
jmp
pop
test
loop
push
data16
inc
js
add
aaa
jle
mov
mov
or
sub
inc
xchg
push
xchg
and
add
aad
movb
xor
or
cli
addr16
arpl
sbbl
xor
cli
sbb
cmp
lea
cli
adc
mov
stos
icebp
stc
mov
loope
cmp
aaa
lahf
insl
dec
addb
hlt
lcall
push
dec
push
pushw
mov
mov
insb
loop
push
add
add
dec
jecxz
les
cmp
sbb
add
mull
lret
lahf
cs
mov
outsl
out
call
sbb
scas
jge
stc
adc
add
push
mov
push
pop
jecxz
lock
popf
lahf
cwtl
add
ret
pop
and
leave
std
arpl
add
je
out
pop
pop
das
hlt
xor
mov
xchg
outsl
icebp
mov
inc
add
mov
fcoml
stos
sub
rolb
cmp
loop
jmp
push
mov
mov
dec
push
pop
inc
int
add
ljmp
sub
imul
jecxz
hlt
mov
push
mov
adc
add
push
and
add
xor
mov
cmp
push
add
daa
and
adc
push
pop
push
jae
cmp
cmp
sbb
dec
lods
and
ss
out
sti
dec
sub
adc
mov
enter
xchg
sbb
mov
push
sub
add
in
sbbl
inc
inc
xor
mov
cmp
fldenv
or
jb
imul
fnstcw
ret
mov
pop
nop
push
xchg
xchg
mov
iret
lret
add
xchg
or
fs
xchg
addb
add
mov
and
xchg
xchg
jmp
sbb
jbe
sub
dec
or
rolb
xlat
mov
js
repnz
sarb
cmp
xchg
call
test
push
fstl
push
or
xchg
pusha
add
in
std
imul
push
jnp
xchg
dec
movsl
fldt
add
push
int3
cmc
filds
scas
mov
dec
addb
repz
or
inc
xor
sti
xor
xchg
gs
out
push
ror
push
in
ret
xchg
popa
xchg
test
ja
jl
cmc
loop
mov
ja
hlt
cmpsl
mov
stc
sti
jge
repnz
push
mov
test
ret
stos
std
push
or
mov
add
dec
fucom
push
fisttpll
push
scas
in
inc
leave
gs
lahf
fcmove
add
add
fcomip
loop
sub
dec
pushf
jecxz
sub
add
mov
mov
cmp
arpl
rolb
xor
mov
pop
add
and
sub
mov
loopne
mov
movsl
pop
ljmp
outsl
jns
dec
pop
jne
cmp
mov
mov
add
nop
inc
in
pop
dec
daa
sub
rol
orl
pop
sbb
test
fldl
ret
xor
jb
add
mov
add
addb
imul
jbe
add
outsl
push
sbb
les
add
push
pop
test
repz
push
adc
cmp
ret
mov
add
mov
xor
mov
and
xchg
insb
push
shlb
sub
es
pop
loop
cwtl
cmpxchg
jo
add
adc
xchg
sbb
cmp
add
dec
xchg
sub
pop
into
nop
test
adcl
add
insb
xchg
out
sub
aas
jmp
aaa
push
dec
mov
ret
and
or
dec
jp
xchg
pop
add
popa
mov
add
xor
fimuls
js
test
push
cld
jne
add
sbb
out
cmp
ret
and
fisttpl
push
js
mov
push
mov
add
pop
push
inc
add
or
jbe
add
push
and
aaa
push
lds
dec
in
psubusb
jecxz
cli
mov
add
xchg
das
ljmp
test
pushf
sub
adc
add
fists
add
enter
or
sbb
add
add
add
pop
test
repnz
adc
cmpsl
pusha
add
push
mov
outsb
or
or
fcomp
xchg
int3
inc
add
mov
dec
and
jns
hlt
fiaddl
iret
or
in
jmp
xor
pop
iret
rcrl
lcall
add
cmp
xor
pop
mov
add
add
and
loop
xchg
and
insl
inc
add
mov
out
add
and
jne
int
enter
push
jb
cmp
dec
iret
dec
clc
jne
pop
fistps
lahf
daa
push
int
sbb
xchg
sub
hlt
out
sbb
addr16
add
inc
add
bound
sarb
addb
sbb
mov
jge
and
hlt
movsb
jmp
pop
dec
fistpll
add
aam
pop
or
addb
lods
push
add
xor
sahf
dec
mov
icebp
xor
mov
xor
lret
arpl
xchg
rcl
lret
data16
xchg
rcll
sub
inc
add
jns
xchg
add
or
enter
fidivs
ja
loope
divl
jg
mov
fildl
mov
add
scas
push
popf
pop
xor
pop
or
loop
mov
sbb
dec
mov
lock
push
nop
pop
imul
add
neg
jmp
xor
ret
push
pop
jge
inc
add
cltd
inc
add
mov
iret
movb
push
pop
fwait
pop
fwait
clc
mov
or
mov
fdivs
ss
lcall
inc
jne
je
fmulp
cltd
cwtl
mov
sti
fimull
fisubrs
jmp
stc
lods
enter
add
mov
cmpsb
jns
dec
divb
cmp
movsl
or
push
data16
pushf
test
iret
sub
xor
in
ret
arpl
xchg
sbb
jmp
mov
cmp
mov
dec
rclb
call
call
loop
xor
insl
pop
add
in
cmp
add
and
js
pop
outsb
jmp
ret
rol
add
mov
cmc
xchg
mov
add
add
and
cmc
loopne
xor
cld
cld
xchg
outsl
pusha
add
fidivl
es
xor
add
jno
in
cli
fwait
mov
xchg
loope
addr16
into
js
cmp
jno
add
in
sub
js
jle
xchg
fisttps
iret
or
cwtl
mov
mov
add
outsb
adc
xor
scas
and
cld
stos
add
sub
add
or
adc
push
sti
add
dec
dec
inc
add
test
add
mov
xor
outsl
cmp
movb
add
xchg
out
fists
mov
push
pusha
add
inc
and
adcl
cmpsb
cmc
push
sub
or
test
loop
push
adc
and
cltd
pushf
fnsave
cmp
dec
xor
into
or
fildll
add
mov
clc
dec
mov
ss
cmp
jmp
mov
sbb
cmc
lds
mov
adc
add
dec
push
arpl
mov
sub
add
aam
mov
adc
dec
xchg
xorl
xor
add
pusha
add
jge
jbe
cs
inc
add
cmpsl
lret
addb
ja
xchg
mov
mov
add
cli
pop
mov
inc
sahf
mov
mov
sub
adc
mov
mov
cld
enter
push
ffreep
add
sbb
data16
mov
jg
fnstsw
pop
pop
shl
or
push
xchg
xchg
pop
inc
jne
mov
push
shrl
cmp
add
push
lahf
push
in
push
pop
in
addr16
add
out
clc
jae
push
rcrb
insl
jecxz
add
lret
out
dec
push
int3
call
push
negl
jb
imul
cmp
dec
clc
cmp
dec
iret
adc
add
add
bound
ret
mov
pop
lret
sbb
add
addb
aaa
inc
add
jp
ret
jge
pop
sub
mov
sub
lds
add
and
out
in
xlat
or
sahf
jl
fcmovnu
lods
imul
push
aad
jp
popa
dec
test
sub
das
loopne
add
fisubs
fadds
fbstp
sbb
jo
add
push
push
fucomip
movb
das
sbb
and
ljmp
sbb
addr16
pop
cmp
lods
out
mov
imul
scas
push
inc
fldl
stos
sbb
pop
loope
aam
cmpsl
aaa
cmp
xlat
imul
mov
es
dec
in
pop
clc
sbb
repnz
xor
in
jne
add
test
lds
dec
dec
ficomps
add
adc
add
ret
pop
push
lcall
jnp
add
add
pop
sbb
add
mov
add
add
sbb
xchg
jle
ss
lret
mov
push
mov
jge
and
inc
add
jmp
int3
fmuls
mov
mov
mov
mov
dec
arpl
inc
add
pop
nop
mov
dec
mov
mov
jmp
add
pop
pusha
add
jo
popa
in
push
mov
cwtl
inc
cmp
cmpsb
cmp
cld
imul
in
push
cmpsl
rolb
leave
mov
ret
mov
dec
jmp
sbb
sub
push
int
mov
into
mov
add
or
inc
xlat
mov
loop
stc
jecxz
mov
lods
js
lods
dec
sbb
add
and
scas
rcrl
add
or
and
jb
jmp
in
add
bound
fld
add
dec
mov
mov
ret
repz
add
or
imul
cmp
add
push
jae
repz
add
dec
sub
aam
add
mov
lods
mov
cmp
push
mov
movb
xchg
rolb
add
in
decl
jl
mov
test
lock
push
insl
mov
clc
leave
xchg
scas
sub
xlat
cmpsl
pusha
add
pop
pop
mov
sahf
jnp
in
mov
add
in
push
sub
subl
shrb
xchg
ljmp
repz
mov
loopne
xchg
jg
pushl
xor
mov
jnp
sbb
pop
jg
pusha
add
outsb
xlat
and
jl
sbb
jns
js
pop
push
pop
pop
push
pushf
adc
movb
les
aam
push
pop
mov
adc
hlt
cmc
call
add
inc
add
dec
paddusw
dec
cmpl
out
cmp
sub
imul
adc
xor
mov
push
and
pop
cs
push
in
mov
out
jb
notb
ret
sbb
mov
outsb
sub
xor
fstp
int
dec
repnz
clc
mov
std
stos
rolb
shl
mov
and
inc
add
mov
or
dec
test
pop
sub
or
add
xchg
push
sub
gs
icebp
cmp
sub
push
fbstp
call
cmp
xor
sbb
lea
jne
sub
xlat
ljmp
addb
cmpsb
jp
andl
popa
or
addb
std
mov
insl
sbb
sub
add
clc
clc
xchg
push
or
rep
push
push
mov
imul
inc
add
dec
jl
in
bound
jae
add
ja
xor
add
jl
daa
rol
cwtl
jne
xchg
mov
fstpt
insb
movsl
mov
addr16
addb
mov
jp
mov
inc
add
test
sahf
dec
xchg
and
les
sbb
mov
or
pop
nop
mov
aam
add
scas
or
mov
dec
add
test
shl
insb
lock
mov
dec
sub
mov
cmp
mov
out
lock
adc
jo
dec
icebp
js
xor
in
sbb
cwtl
out
out
arpl
or
push
cli
ja
in
inc
add
adc
and
sub
adc
push
imul
add
push
mov
cmp
mov
pop
push
lret
js
js
ljmp
sbb
popf
int3
add
adc
pop
sub
scas
or
js
or
js
jns
sbb
imul
add
sbb
add
fs
leave
popf
roll
pop
ds
mov
push
add
add
xor
xor
and
mov
lcall
shll
add
inc
in
xor
mov
aas
mov
ja
inc
add
out
adc
add
lock
cltd
jecxz
jge
xor
inc
lcall
add
out
pmullw
sbb
pop
jno
mov
sbb
lret
xchg
lcall
test
adc
loopne
xor
adc
jb
adc
leave
mov
in
lea
mov
sti
js
or
lods
fs
mov
mov
and
jno
std
adc
aad
sub
pop
xchg
push
jnp
stc
xor
stc
and
lods
dec
sub
add
mov
push
fcmovu
std
mov
add
pop
xchg
cmpsb
mov
divb
jecxz
push
hlt
test
add
rol
add
mov
fisttps
je
pop
jle
cmp
out
fs
das
sbbl
sub
xchg
pop
in
enter
invd
mov
add
rorl
aaa
gs
sub
cs
ret
jle
out
fbld
mov
push
ret
jg
psraw
es
cli
and
sbb
add
mov
and
mov
sbb
add
add
imul
pushf
outsl
rorl
movsb
pop
rol
add
push
add
jl
cmp
add
sahf
ret
and
pushf
mov
mov
pop
jg
inc
mov
lods
inc
repnz
test
add
push
int
std
push
movsl
pusha
add
pop
inc
mov
and
int3
sahf
sbb
sbb
and
pop
pop
test
inc
jp
xor
in
xor
movsb
arpl
or
lds
mov
ds
push
add
pop
insb
pop
rcrl
inc
add
setb
pop
dec
mov
jmp
add
cmp
cmpsl
jle
xlat
inc
add
js
jnp
jg
push
addr16
add
or
push
pop
push
addb
add
and
repz
mov
pop
and
add
inc
cmp
bound
vpsubusw
push
xor
pusha
add
jmp
lods
mov
scas
xchg
pop
int
stos
and
mov
rcl
xchg
lock
loope
roll
jp
add
jge
xchg
and
addb
cmp
adc
and
add
mov
loopne
shll
and
push
addb
mov
pop
hlt
rolb
xor
jmp
rolb
push
push
je
lods
scas
and
dec
jns
jbe
cmp
ljmp
movsl
in
push
in
mov
jge
mov
sub
xchg
add
js
sub
sub
add
add
jae
pushf
push
jae
imul
inc
push
cmp
fs
and
sarl
mov
add
jne
in
push
adc
test
inc
add
shl
adc
or
outsl
pop
add
in
sbb
lock
rolb
leave
popa
or
or
jns
inc
fwait
clc
lods
int3
popa
hlt
popa
decb
xchg
stos
arpl
xchg
or
mov
push
dec
aad
sbb
add
dec
test
cmp
in
mov
lahf
dec
xor
pop
rolb
mov
xchg
push
mov
mov
mov
mov
neg
out
imull
inc
add
jae
ljmp
sub
inc
add
in
pop
cmp
iret
inc
push
xor
std
mov
cmp
ss
sbb
pushf
lods
mov
sarl
adcl
test
add
jmp
adc
sti
or
and
push
nop
addb
das
and
pop
jl
es
pop
in
std
ret
imul
push
inc
add
xor
rclb
push
fwait
test
fstpl
mov
or
xor
add
push
imul
push
jle
adc
int3
scas
cltd
add
lock
popa
add
out
mov
inc
out
dec
jbe
mov
inc
dec
sub
sub
rcrl
add
sbb
sub
addb
ljmp
mov
lcall
out
addb
les
or
fucomi
pop
iret
pop
fnstcw
inc
scas
sub
and
inc
test
stos
and
and
inc
add
ss
jne
mov
dec
call
repnz
jae
cmp
sbb
lea
adc
cli
xrelease
outsb
mov
mov
nop
hlt
fstpt
pop
lahf
pop
inc
adc
sar
mov
jnp
or
sub
fstpt
test
cld
pop
stos
mull
addl
inc
add
dec
inc
add
pop
add
ja
push
add
jecxz
mov
xor
and
mov
add
push
rorl
outsl
rclb
out
pop
bound
mov
fsubl
mov
dec
pop
mov
mov
das
int3
sbb
test
gs
cli
or
stos
imul
ficoms
lods
lcall
testl
ljmp
add
adc
adc
push
push
inc
add
cmc
cs
fstpt
in
negb
xor
sub
jne
dec
mov
add
mov
mov
sub
popa
das
ljmp
sbb
cld
push
and
lahf
movsl
cs
insl
sahf
mov
or
ss
jge
fdivrs
cmp
sub
add
push
xor
mov
dec
mov
sbb
sahf
aam
in
arpl
add
mov
lds
add
add
cmp
push
neg
adc
sub
jg
mov
ds
push
push
out
sbb
inc
add
or
out
imul
adc
cld
add
xor
add
into
popf
lret
pop
sub
mov
neg
rorl
add
add
lcall
mov
out
cmpsl
xchg
lds
int3
out
cltd
sahf
xchg
aas
xor
sbb
pop
and
addb
stos
jmp
jae
and
lods
leave
dec
mov
mov
add
fwait
jmp
push
pop
jp
lcall
bnd
or
ljmp
gs
pop
call
cmp
jl
lods
int3
pop
cmp
movsb
loop
dec
inc
xor
cmp
push
jle
sarl
or
adc
add
cmpsl
push
je
cmc
cli
cmp
mov
mov
ss
out
dec
xor
sahf
mov
add
add
xchg
repz
je
push
cli
mov
mov
xor
shrl
jnp
adc
fdivrl
push
dec
push
mov
sbb
ja
lods
in
sbb
mov
leave
movsl
ja
fdivr
adc
popf
and
xchg
rcll
cld
adcl
sbb
loope
fimuls
sahf
jno
add
popf
je
sbb
fdivrs
pop
push
add
and
das
lods
popa
or
addr16
push
cli
push
add
inc
out
mov
jnp
inc
add
adc
fmuls
xor
push
sbb
push
inc
fmuls
add
in
mov
push
out
add
and
fisubl
add
adc
es
mov
jecxz
or
cli
and
outsb
or
je
shll
xor
iret
inc
adc
pop
xlat
scas
lahf
xchg
shll
push
push
cmp
sub
test
xor
std
xchg
loopne
xchg
leave
sbbl
cmp
add
fsubrs
cmp
jbe
and
inc
add
mov
enter
enter
jg
add
lods
add
aaa
sbb
cltd
js
insb
movsl
mov
aad
xchg
ja
or
sbb
add
jmp
pop
fs
adc
or
lret
and
push
push
sbbl
lods
les
and
addb
mov
jmp
jle
test
jbe
aam
pop
idivl
stos
inc
add
outsb
lods
hlt
outsb
lods
or
push
enter
cld
xchg
outsl
insb
in
push
push
jp
in
sub
sub
add
mov
mov
rolb
lock
push
dec
inc
add
mov
pop
xor
or
add
or
mov
ret
inc
addr16
push
xchg
shr
mov
cmpsb
cmp
jbe
dec
jb
pusha
add
lods
repz
xlat
dec
test
xchg
outsb
stc
aaa
imul
xor
or
sbb
jmp
xor
xor
pusha
add
and
cmp
xchg
hlt
stc
jmp
inc
add
cmp
fstpt
cmp
mov
daa
in
add
scas
xor
jbe
out
push
add
add
adc
imul
cltd
ret
bound
xchg
or
mov
ss
mov
pop
aam
sbb
lods
sub
sar
cmp
es
cli
sbb
add
mov
loop
or
mov
inc
dec
pusha
add
aas
out
sti
fsubs
pop
js
movsl
movb
cmc
out
or
inc
fisubrl
bnd
pop
mov
add
sbb
insl
or
cmp
mov
movsb
push
mov
jne
inc
add
add
xor
call
mov
test
cld
lahf
leave
sarl
lea
mov
les
sbb
bound
cmc
mov
fyl2xp1
aas
dec
int
add
loop
jb
dec
inc
add
dec
adc
aam
push
add
fcoml
fdivr
mov
inc
jl
push
jmp
xor
add
push
jmp
aaa
cmp
jg
enter
xor
sbb
repz
and
outsl
test
jge
add
add
inc
add
rorl
mov
addb
hlt
cwtl
xor
ret
insb
nop
and
or
inc
add
pop
ret
ret
xor
enter
add
lcall
ss
push
les
hlt
mov
cld
sub
dec
lcall
sti
testl
cs
and
iret
lods
jne
xchg
add
out
mov
sbb
ja
cs
cmpsl
int3
rolb
enter
push
lods
insb
decl
add
jecxz
adc
add
adcl
jle
daa
jg
sub
mov
mov
jo
fneni(8087
xchg
sarb
psubsb
ret
sbb
and
mov
test
sub
push
and
lea
inc
add
inc
add
dec
push
addb
bound
test
add
fdivr
cmpsl
cmp
add
pop
sub
and
dec
fcoms
jbe
mov
sahf
inc
arpl
push
test
xchg
or
sbb
ljmp
aad
cmp
shll
mov
dec
xchg
dec
fimull
push
mov
pusha
add
mov
add
add
addb
pop
push
aam
loopne
scas
addl
mov
mov
out
arpl
xchg
jge
add
ja
movb
add
mov
cmp
xchg
cmp
add
and
lods
push
out
or
scas
mov
cwtl
jle
enter
dec
fdivl
dec
sub
sbb
xor
sbb
imul
bswap
dec
jae
adc
sbb
xor
mov
add
xor
ficoml
mov
or
daa
movsbl
dec
mov
jmp
dec
push
inc
add
add
sub
lret
daa
add
stos
push
add
outsl
lods
fisttpll
add
jp
mov
adc
pop
pop
pop
outsl
cmpl
dec
scas
into
mov
push
push
mov
inc
add
out
arpl
jmp
dec
pusha
add
pop
testb
out
adc
out
dec
xchg
jp
inc
inc
add
ljmp
add
mov
push
inc
xchg
daa
sbb
mov
mov
ret
jl
fsubs
cltd
std
int
aaa
bound
sub
es
inc
imul
js
jo
bound
add
test
int3
push
ds
cwtl
dec
cmc
repnz
bound
xchg
sub
xor
add
iret
in
or
sub
xchg
adc
adc
jmp
into
ds
test
mov
add
mov
lret
jmp
aad
dec
popa
push
mov
pop
or
and
fs
lds
lods
push
xor
fisubrs
stc
cli
lret
add
fcmovb
add
jl
inc
add
mov
sub
lret
and
push
add
lods
pop
mov
mulb
xor
stos
mov
mov
push
dec
mov
ret
lret
xor
lods
cmpsl
mov
ljmp
addb
cmp
out
out
dec
mull
pop
fcompl
mov
jae
movb
sahf
cmc
lret
ljmp
jecxz
jmp
fcoms
std
xorl
lcall
pop
lods
pop
cmc
adc
lret
int3
movsb
insb
inc
mov
test
test
and
mov
or
mov
shl
cld
or
xchg
sbb
jmp
rol
add
dec
loopne
and
sbb
jmp
add
lods
pop
js
pushf
int3
inc
adc
ret
cwtl
leave
mov
pop
push
adc
add
pop
daa
inc
jne
add
ffree
add
xchg
jae
addr16
pop
cmp
popf
test
outsb
xorl
mov
jne
xlat
xchg
and
repnz
into
push
lret
mov
or
dec
pop
test
pusha
add
and
iret
imul
cmp
idivl
add
adc
add
movsl
push
std
mov
dec
pop
daa
add
sub
pop
scas
ljmp
jle
or
loop
jns
fisttpl
call
dec
xorl
lds
and
or
pop
lock
mov
push
fbld
out
or
cmp
sbb
dec
aam
add
ja
movsb
and
movsl
pop
jnp
stos
aas
sbb
add
cli
mov
or
add
mov
xlat
inc
repz
imul
call
add
fisubl
mov
push
and
les
aad
jne
dec
inc
add
push
add
stos
arpl
jne
or
dec
inc
jae
arpl
xor
into
out
sahf
dec
sahf
mov
mov
lock
loope
add
dec
push
out
mov
ss
cmp
loopne
test
sub
shl
lods
pop
xchg
repz
add
movsb
stos
push
fiadds
clc
cld
jmp
enterw
push
adc
rorl
add
inc
rolb
bndldx
or
insl
or
daa
pop
pop
fs
push
and
and
push
pop
sub
rcrl
add
add
push
jnp
push
jae
add
lods
cmp
jg
inc
fidivs
pop
call
and
xchg
sbb
adc
hlt
in
insl
fcmovnb
add
es
add
dec
data16
jmp
vmovlpd
mov
test
les
dec
gs
cltd
fcoml
repnz
repnz
cld
add
and
mov
jle
mov
cmp
pushf
and
es
call
pop
repnz
dec
jns
sarl
xor
ror
adc
leave
adc
bswap
fcompl
mov
adc
pushf
ret
in
out
adc
add
sarl
jno
cmpsl
es
adc
xchg
mov
add
add
stc
pop
cld
mov
add
repz
mov
or
sub
pop
xchg
bound
test
addb
pop
mov
push
popa
mov
fisttps
jp
add
enter
testl
in
cmp
jnp
inc
add
aad
sub
mov
movsl
xlat
cmp
or
add
fidivs
jle
push
shll
jno
sub
add
mov
scas
inc
add
add
fwait
rcll
imul
imul
push
ds
test
add
pop
loopne
fisttps
enter
movsb
pop
lret
lods
mov
inc
add
bound
xlat
mov
or
and
out
outsl
bndldx
dec
jl
popf
xchg
or
dec
lcall
fimull
mov
in
rcll
add
cmpsl
fsts
add
subl
pop
lds
sub
addr16
shlb
mov
add
pop
sarb
add
idiv
adc
repz
sbb
add
std
test
sbb
add
bound
push
mov
add
push
imul
add
fwait
pusha
add
in
adc
pop
mov
int
incl
mov
test
and
add
divl
frstor
sti
movsl
xchg
add
aam
add
and
pop
jo
imul
testb
inc
add
addl
inc
in
inc
sbb
xchg
jns
shrl
leave
pop
add
jno
lods
or
movsl
and
repnz
inc
and
int
shr
sti
enter
in
fs
int
pop
mov
adc
call
add
dec
iret
jo
inc
mull
add
int3
or
fisttpl
mov
jnp
ret
ret
ficomps
out
sbb
outsb
std
cmc
xchg
movsl
jae
xchg
cmp
mov
cltd
icebp
addl
addr16
loopne
push
cs
rolb
add
pop
addb
fmul
inc
add
dec
mov
test
fcomps
sti
leave
stc
out
js
fisttps
dec
dec
or
rcrl
or
adc
push
mov
inc
add
add
add
pop
pop
dec
cwtl
adc
push
jbe
xorl
aas
or
mov
lods
idiv
cmp
out
jno
lock
imul
push
psraw
mov
sbb
mov
xchg
outsb
dec
addb
lret
mov
and
sub
mov
add
rcll
xchg
lcall
push
dec
sbbl
add
xchg
cmpsb
lret
in
sub
jns
push
sub
mov
repnz
sub
popf
ret
push
dec
dec
scas
jbe
mulb
adc
call
mov
cmp
pop
leave
lods
xor
movsb
jle
sub
mov
jp
fcompl
dec
lods
push
in
and
add
adc
push
xchg
push
jo
mov
xchg
pushf
aas
push
xchg
lock
mov
xor
mov
mov
imul
addb
push
cli
jp
push
iret
arpl
cmc
jl
sbb
push
lea
or
mov
mov
and
cli
mov
imul
shl
jmp
mov
sbb
sbb
sbb
xchg
dec
jmp
mov
leave
mov
dec
jns
jo
aam
mov
mov
cmp
jg
dec
icebp
adc
call
lods
mov
xor
inc
cmpsl
movsb
jp
rolb
hlt
xor
addb
adc
mov
scas
push
mov
pop
shlb
lock
fcomp
or
jp
xchg
lahf
mov
jnp
daa
movsb
popa
fwait
xchg
scas
scas
int
xchg
push
add
ljmp
loope
sub
outsl
dec
ret
testl
andl
cmpsl
cmp
stc
addb
cmc
mov
sbb
cmp
aaa
xchg
xchg
out
aaa
jl
add
cmpsb
fstpl
mov
mov
rcr
xor
push
cmp
sbb
repz
lods
es
inc
add
lods
inc
add
add
xchg
and
push
stos
pop
fistl
dec
scas
rcl
dec
in
insl
ds
stos
mov
divb
sub
mov
stos
jbe
scas
pop
pop
shll
lock
xchg
sub
sbb
add
cmpsl
fwait
and
insb
or
sahf
or
addl
loopne
jl
leave
jle
add
shr
pusha
add
xchg
ret
sahf
push
push
pop
lock
loop
aas
mov
aad
mov
xor
imul
ja
mov
adcl
addb
or
fisubrl
push
ds
movb
push
pop
xchg
mov
lea
jmp
sub
cmp
std
scas
mov
sub
xor
sbb
aad
lods
push
cwtl
jne
lock
mov
jmp
mov
dec
xor
sub
in
jbe
test
jo
rolb
ret
xchg
fisttps
sbb
aas
mov
push
jns
xlat
cmpsb
test
add
push
cli
pop
aad
loopne
mov
pop
jge
add
xor
jge
add
fistps
or
mov
shl
scas
jb
xor
xchg
mov
loope
cmp
mov
add
into
cmp
in
cld
int
call
sbb
lret
pusha
add
ret
or
push
mov
stos
rolb
loop
inc
pop
outsb
in
fwait
arpl
push
pop
dec
push
hlt
xchg
cmp
add
and
cmc
xlat
jbe
int3
lods
cmc
pop
das
push
addb
add
loope
xchg
rolb
and
stc
push
vshufps
and
pop
adc
mov
add
stos
jbe
jge
fabs
add
mov
jp
call
imul
inc
push
add
xlat
arpl
jo
push
test
push
out
ficompl
push
and
pop
mov
and
or
cmp
jbe
or
out
xchg
jge
xor
decl
fstps
stos
dec
data16
push
mov
fldenv
mov
sbb
add
jbe
test
or
test
ljmp
adc
aam
push
add
and
and
decb
aam
or
pop
test
add
mov
loop
mov
hlt
in
jl
and
adc
addb
dec
mov
xor
pop
sbb
add
mov
dec
shl
or
mov
in
dec
inc
sbbl
xlat
mov
inc
add
add
cmp
jp
cmp
lock
inc
cli
mov
out
inc
add
gs
push
das
mov
stos
aam
inc
mov
xor
jg
jmp
xchg
pop
sub
sub
fwait
daa
mov
add
sub
insb
call
clc
xchg
xchg
pusha
add
pop
gs
push
adc
mov
xor
mov
push
pop
fwait
dec
jnp
jmp
xchg
sub
aas
xchg
insl
inc
add
push
jno
cmpsb
jg
xchg
pushf
cltd
shll
daa
fistpl
adc
pop
pusha
add
pop
add
aas
fbstp
js
cmp
fdivr
add
jo
addb
pop
roll
dec
adc
rolb
cld
lret
lahf
rcl
inc
add
jns
enter
test
in
sub
mov
xrelease
popf
inc
sub
movb
mov
mov
out
jo
mov
mov
jg
dec
inc
add
cmp
sbb
cmpsb
jae
repz
sub
jae
stos
les
sub
jg
add
mov
mul
jg
cmp
or
push
test
outsl
sbb
cmp
add
pop
mov
insb
sbb
or
pop
jnp
pop
add
mov
test
inc
add
mov
and
pop
xlat
out
jg
mov
jle
nop
mov
fsubs
pop
jne
add
inc
add
inc
add
clc
mov
cmp
sub
xor
dec
xor
sahf
mov
sub
inc
call
js
into
xchg
insb
add
sbb
or
repnz
xchg
mov
shll
mov
daa
fnstcw
popa
lea
push
inc
loope
xor
cmp
test
pop
add
sbb
daa
adc
sahf
jns
bound
adc
aad
dec
cltd
js
les
sarb
stc
jmp
dec
push
push
jmp
jl
push
lcall
pop
aaa
movsb
jns
add
sbb
inc
inc
add
jl
mov
xchg
in
test
mov
addr16
stos
mov
jecxz
mov
dec
mov
outsb
xor
and
mov
data16
in
mov
add
aaa
hlt
mov
mov
and
in
aam
fldenv
sbb
fdivr
push
pop
add
mov
fbld
or
xchg
scas
in
mov
add
jae
out
dec
outsl
cmp
adc
ds
jns
and
mov
das
add
in
xor
xor
xor
leave
push
add
dec
cld
adc
rol
mov
and
mov
stos
pushf
adc
out
data16
push
addb
leave
lea
add
movsb
shrl
imul
sbbl
push
addb
add
aam
lds
sub
mov
mov
mov
shlb
les
divb
xchg
pushf
js
push
fucomp
xchg
outsb
imul
ss
jg
shlb
mov
stos
mov
jl
mov
sub
jnp
ror
adc
jge
jno
jg
xchg
dec
mov
push
add
test
mov
hlt
and
pushf
xlat
mov
icebp
movb
xchg
add
lcall
push
sti
test
data16
lret
pop
push
push
inc
jb
jl
outsl
movsb
lsl
fisubrs
ja
lock
dec
and
xor
imull
adc
add
mov
and
adc
in
sbb
xor
add
jbe
ljmp
xchg
lea
inc
add
pop
pop
jl
add
push
xor
cmp
rclb
add
jmp
pop
call
cmp
add
clc
adc
mov
add
add
scas
mov
mov
decl
mov
add
add
cmp
enter
add
push
add
mov
add
ficompl
aaa
xchg
and
popf
dec
inc
add
and
sbb
ret
icebp
xor
daa
int
inc
add
jb
sbb
lret
jp
xchg
arpl
push
clc
iretw
or
mov
fldl
ret
mov
pop
jno
xchg
loope
pop
aam
stc
pop
mov
sub
data16
fstpl
out
mov
loope
xchg
in
dec
push
cmpsb
and
dec
sub
in
cwtl
inc
add
jne
lock
jnp
xor
out
nop
lret
addb
test
rolb
ret
jb
xchg
je
or
sbb
movb
push
sbb
repz
test
ret
leave
and
test
cmp
pop
xchg
jae
mov
mov
popa
push
mov
fsubr
and
pusha
add
data16
rcll
sti
mov
push
sbb
ret
jp
cmp
xchg
cmpsl
xchg
scas
mov
add
testl
sub
mov
inc
add
arpl
sti
test
mov
mov
jbe
stc
jecxz
outsl
cmp
adc
arpl
mov
or
mov
fabs
ret
mov
inc
add
pop
cli
insl
jg
jne
push
fadds
pop
xor
js
int3
adc
add
shlb
das
jg
mov
add
dec
aam
test
pop
jge
notl
push
dec
jno
ds
sbb
fcoml
add
sbb
push
popa
mov
cmp
dec
and
mov
in
div
je
mov
std
ucomiss
outsb
loopne
push
in
xchg
test
jae
pop
mov
test
sub
adc
lcall
ret
dec
lods
cli
je
cmpsb
out
push
cmp
and
mov
repnz
ja
adc
in
rolb
mov
adc
pop
pop
and
xchg
out
imul
in
aaa
leave
adc
das
mov
cmpsl
sbb
xchg
out
dec
mov
loope
les
dec
aam
mov
or
and
incl
xchg
dec
pop
push
cld
leave
cmp
add
add
in
cld
jg
mov
mov
sub
pop
hlt
fwait
stc
outsl
sub
mov
xchg
jns
fldt
cwtl
lret
jnp
cmp
mov
es
imul
mov
adcl
rcll
dec
mov
rolb
addb
xchg
mov
pop
mov
xchg
mov
lea
mov
add
add
and
mov
fstl
push
push
scas
jge
push
js
mov
jp
add
push
and
inc
rolb
movl
cmpl
imul
pushf
mov
push
xchg
or
xchg
xor
fnstenv
sbb
jmp
cmpsl
jo
inc
pop
xor
in
movsl
push
inc
jmp
add
outsb
add
jnp
in
into
sub
push
call
add
das
sub
mov
imul
std
dec
jbe
sub
push
mov
rolb
cmp
in
stos
jg
in
sub
or
add
mov
pusha
add
and
mov
pop
jge
sub
test
dec
test
ret
movsb
mov
pop
leave
mov
aad
sub
push
sub
add
inc
add
mov
loopne
sbb
jae
push
in
dec
shll
push
flds
push
andl
and
mov
out
cmp
add
pop
dec
outsl
fdivs
stos
notl
adc
mov
imul
test
add
fsubp
adc
add
insl
je
add
lods
inc
sahf
into
push
frstor
movsb
jmp
icebp
sub
fdivs
jle
aam
rolb
adcl
add
outsb
inc
add
mov
mov
pusha
add
cmp
sub
mov
cmp
inc
add
dec
inc
out
jnp
pop
pop
loopne
xchg
mov
dec
mov
sub
xor
inc
mov
int
xor
movb
sbb
movb
icebp
dec
xor
repz
decl
mov
out
sbb
mov
cmpsl
sub
lcall
pop
daa
push
xlat
xchg
sub
pusha
add
popa
cmpsb
dec
scas
pop
mov
outsb
push
sub
jns
cmp
add
mov
dec
popa
mov
add
push
aam
xchg
lcall
sub
mov
call
rolb
call
outsb
xchg
jg
nop
mov
rolb
movsl
divl
jns
movsl
lahf
dec
pop
or
inc
mov
jae
add
xchg
dec
jne
sub
push
pushf
mov
xor
stos
adc
xor
fbld
inc
add
cmp
mov
sbb
cltd
sub
ret
add
enter
sti
adc
and
js
lds
cwtl
adc
addl
fcompl
jne
sub
push
adc
jnp
jp
cmp
int
dec
ret
add
pop
mov
adc
or
cli
mov
movb
cld
jo
mov
mov
sbb
adc
mov
jnp
test
leave
aam
addb
shlb
ja
sbb
jmp
add
daa
adc
cmp
nop
cmpsl
push
add
roll
sbb
gs
mov
or
fbld
clc
in
andl
ret
lods
mov
cli
leave
push
icebp
clc
xchg
xchg
in
movsl
mov
add
and
mov
outsl
les
jp
xchg
pop
mov
xor
sbb
mov
xchg
and
xchg
jp
push
mov
mov
ret
roll
fisttpll
imul
add
dec
adc
mov
hlt
mov
das
cli
daa
xor
ret
sbb
xor
add
out
pop
pop
ljmp
mov
rcrb
pop
sbb
stos
xor
imul
mov
aam
xor
xor
dec
jne
mov
mov
push
fnstenv
xchg
pop
jo
cmpsb
or
xor
outsb
inc
add
imul
push
jb
pop
insb
mov
aam
inc
add
pop
arpl
xchg
pop
jg
add
add
cmpsb
push
add
jns
cli
mov
cmp
dec
mov
xchg
cmp
scas
xor
mov
testl
add
push
cli
out
adc
dec
mov
jg
les
or
add
add
movsb
leave
push
loopne
mov
fiaddl
sbb
xchg
data16
push
push
movsl
pushf
aad
fcomps
jns
insl
push
add
add
adc
leave
or
sti
cmp
mov
les
test
aas
bound
les
mov
cwtl
fidivrs
xchg
xchg
mov
sbb
in
push
add
adc
mov
xchg
mov
iret
fwait
cmpsl
ljmp
enter
mov
movlps
jae
mov
loope
ret
mov
ja
pop
mov
add
adc
xchg
xchg
pop
ljmp
rorb
scas
pop
mov
xchg
dec
icebp
test
jmp
add
mov
mov
or
int3
xchg
sub
movsl
dec
push
mov
adc
lcall
inc
jl
add
cli
addb
add
hlt
jbe
xor
cli
fwait
lods
inc
pop
mov
outsb
cld
movb
rcr
and
pop
lcall
mov
add
adc
or
insb
pop
sub
xchg
push
cmp
xchg
inc
cmc
ss
xchg
ror
scas
or
mov
add
lods
js
mov
insl
out
imul
add
xor
add
push
shrl
cwtl
ja
push
sbb
std
jne
out
sbb
cmp
outsl
ret
cmpsb
jge
mov
inc
pop
cmp
movb
decl
pusha
add
or
add
mov
add
pop
mov
lret
xchg
popa
sub
jp
in
addb
loope
fistpll
cmpsl
stos
jne
jnp
push
lds
mov
adc
xchg
divb
scas
lock
inc
adc
add
mov
out
addb
pop
scas
dec
xor
push
shrb
dec
inc
lahf
dec
and
rolb
pop
test
or
push
notb
xor
lahf
and
adc
dec
mov
test
fildll
sub
push
ficomps
mov
jo
and
or
sbb
in
mov
xor
int3
push
cwtl
push
cmc
ds
sub
repz
add
and
fmuls
insl
add
cltd
xchg
mov
int3
jmp
add
cli
imul
fnsave
mov
mov
mov
xchg
vpcmpgtd
std
push
sbb
push
lret
popa
sbb
dec
jp
add
jge
cmpsb
or
or
lahf
push
push
insb
movsb
sahf
pop
ljmp
add
popf
xlat
in
and
lea
test
pop
xchg
aam
test
fstpl
mov
cmpsl
insl
outsb
jmp
mov
out
movb
les
jbe
hlt
int
add
push
int
mov
aas
cmp
mov
dec
lret
test
or
sub
dec
dec
rcr
rolb
in
xor
iret
or
and
jne
cmp
test
cli
sbb
mov
das
dec
xchg
or
push
in
xlat
lahf
rolb
sbb
adc
and
jmp
adc
push
ja
ficomps
and
rcll
add
mov
sbb
movsl
in
aaa
js
inc
pop
xchg
js
jns
in
add
bound
push
mov
push
int
aam
stos
ss
je
add
in
cmpsb
sub
frstor
sbb
jbe
dec
mov
add
push
sub
fsub
mov
push
add
hlt
mov
call
cmp
test
or
mov
xlat
push
sti
nop
outsb
jnp
cltd
cmp
out
add
xor
into
mov
and
das
pop
and
enter
add
or
nop
pop
jnp
push
movl
sahf
std
outsl
fucomip
adc
mull
push
or
test
ja
test
xchg
and
pushf
insl
mov
cmp
add
dec
sti
and
or
mov
dec
bound
and
jecxz
fldcw
fisttpll
call
mov
mov
ljmp
pop
arpl
aad
xor
add
idiv
dec
icebp
add
cltd
in
pop
inc
add
pop
ljmp
out
std
adc
rcr
movb
mov
cmpsb
adc
aas
ret
push
dec
sbb
pop
rol
add
pop
mov
sti
mov
movsl
push
mov
jecxz
inc
add
shll
in
dec
aas
adc
and
mov
ljmp
lds
outsb
inc
jnp
imul
roll
add
add
push
add
cmp
test
mov
out
push
sarl
lret
add
inc
xchg
stos
inc
add
pop
sbb
inc
lcall
shrl
in
adc
push
mov
add
in
xchg
in
stos
jns
cmp
or
xor
js
pop
imul
jp
mov
mov
push
mov
enter
test
push
sbb
pop
stos
arpl
fisttps
icebp
out
sarb
clc
sbb
push
dec
xchg
loopne
mov
mov
fdivrp
push
js
or
clc
mov
fsubrl
imul
arpl
sbb
jle
aad
lahf
jnp
inc
mov
in
push
insb
iret
insb
sbb
pushf
sub
xor
arpl
push
mov
sub
in
mov
mov
stos
sar
jmp
lea
rolb
bound
or
pop
ds
rolb
pop
cmp
in
push
stos
lds
and
lret
test
or
sub
adc
pop
stos
out
cmp
add
jb
stc
mov
aaa
jg
sti
cmp
fwait
popa
inc
add
fdivs
lock
cltd
jne
sub
sbb
pop
cli
fmulp
mov
xchg
pop
arpl
add
jl
add
movb
mov
sbb
cwtl
xor
ret
int
js
cld
repz
sbb
dec
in
mov
xor
jecxz
mov
lods
lret
out
imul
pop
xor
vmovntps
stos
sub
fstl
dec
xchg
pop
cltd
mov
fldenv
add
dec
into
jge
rolb
popf
shll
pop
aas
test
int
test
sbb
add
add
or
adc
imul
add
dec
imul
fisubs
pop
arpl
dec
mov
lock
mov
sbb
push
push
fwait
pop
loope
mov
js
or
nop
ja
addb
inc
insl
mov
mov
paddb
mov
cmpsl
mov
sub
pusha
add
cmp
sub
popa
inc
add
pop
mov
addr16
les
inc
or
mov
dec
and
imul
cmp
add
cld
addb
pop
std
cmp
ss
push
push
pop
push
mov
and
jp
mov
das
das
inc
add
sub
nop
or
aaa
bound
inc
add
add
jo
les
pop
pushw
gs
stc
scas
adc
or
lds
push
movsb
nop
mov
mov
jne
add
dec
data16
notb
cmp
lock
pushf
dec
cmpsb
push
push
mul
mov
arpl
sub
test
and
data16
mov
daa
cmp
jbe
jle
or
out
add
mov
imul
add
xchg
lds
pushf
lahf
popa
cmp
in
add
jmp
dec
xor
mov
push
mov
jmp
outsl
std
div
pop
add
pop
lret
or
out
scas
pushf
in
out
add
stc
rolb
pop
cli
js
sarl
add
lea
rclb
add
pop
inc
add
les
dec
xchg
sbb
scas
xchg
inc
add
sti
xchg
jecxz
out
add
push
fistpll
jg
nop
sti
mulps
movsb
push
mov
or
inc
add
mov
mov
and
test
cmp
ret
mov
jbe
jo
hlt
lahf
or
dec
jl
ds
sbb
loope
pop
adc
mov
gs
mov
ja
fcompl
jbe
leave
adc
popf
jg
ror
adc
sbb
mov
add
in
add
pop
cltd
ds
fwait
pop
mov
ss
aas
pop
and
in
xchg
cwtl
jmp
neg
ja
outsl
jno
add
and
aam
and
int3
jg,pn
mov
int
and
mov
or
ret
nop
jmp
pushf
cmp
test
jno
jno
sub
shrb
pop
xchg
add
jb
les
dec
aas
loopne
andl
les
out
dec
mov
add
sbb
add
adc
cmp
insb
lods
rolb
lds
jb
add
cmc
push
clc
jne
fxch
das
inc
inc
daa
jp
pop
or
add
lret
jg
push
pop
stos
pop
adc
jns
add
or
sbb
dec
popf
ret
sbb
or
add
into
divb
fadds
addb
add
loop
les
adc
or
ja
push
addb
push
in
mov
sub
cmp
stos
movsb
movsl
xor
inc
add
lock
add
jb
lahf
or
ss
mov
rolb
fcoml
ss
js
add
lds
cmpsl
jmp
bound
and
and
mov
ja
sbb
pop
push
jb
jl
add
insl
mov
das
sbbl
outsl
call
jno
stos
fsubr
imul
or
and
add
lret
dec
pop
jbe
mov
or
lock
sub
pop
pop
ljmp
adc
mov
fisubrs
cmc
imul
push
sub
add
add
and
push
popa
sub
mov
or
mov
outsb
dec
jmp
fists
out
fcmovne
das
sarb
fisttps
xchg
ret
repnz
jne
fstps
stos
stos
sub
jbe
enter
mov
test
and
push
arpl
jb
sub
cmp
sti
mov
aad
and
fs
and
xor
and
add
adc
push
mov
lret
sbb
ljmp
dec
aad
enter
dec
mov
out
call
fisubs
loope
mov
mov
addb
or
add
or
push
pop
pushf
std
push
test
add
mov
in
addb
or
hlt
xchg
inc
imul
cli
hlt
push
pop
es
sub
add
dec
xchg
sub
aam
add
fsubrl
add
jae
fmull
push
add
mov
pop
shlb
ret
xor
ss
xlat
or
xchg
xlat
mov
scas
cmp
outsl
jbe
mov
add
add
xchg
bound
jmp
xor
jb
adc
ljmp
sahf
addb
mov
inc
rcll
cld
mov
movb
xchg
icebp
add
sbb
leave
or
add
movsb
addr16
enter
cmp
cmp
add
mov
mov
out
fcmovb
mov
sahf
cmc
mov
lods
clc
bound
push
add
adc
filds
lcall
xchg
jo
add
mov
les
xor
jno
pop
jne
and
lret
rclb
xor
hlt
and
jp
movsb
test
movups
je
dec
movsl
divb
sbb
lock
xor
inc
lds
pusha
add
pop
mov
enter
fimuls
mov
and
movsl
lar
mov
fisttpl
mov
addb
jnp
jbe
sbb
repnz
xor
bound
xchg
insl
fsubl
mov
or
mov
add
hlt
or
adc
popf
xor
sub
scas
add
lret
test
pushfw
cmpsl
jge
mov
adc
fwait
push
jo
int
lret
test
xchg
cmp
pushf
fwait
sbb
mov
jo
movsl
or
xchg
mov
add
mov
repz
shr
addr16
addb
sub
hlt
lock
push
jg
sub
or
bound
inc
and
fsubrl
cmp
fisubs
mov
mov
jle
int3
or
pop
push
lods
cmpsb
xchg
sar
xor
sti
cmp
movl
int3
in
outsb
outsb
fs
out
pushf
or
xlat
leave
mov
out
fstl
push
daa
mov
out
jns
add
ret
add
add
fwait
inc
add
cmp
cwtl
rcr
not
out
sub
sbb
jp
pop
mov
push
push
mov
jl
dec
test
add
cmpsl
fstpl
cmp
xchg
call
jo
aaa
jb
xor
mov
push
or
mov
popa
in
lret
cmpsl
or
pushf
fidivs
cmp
mov
enter
ffreep
add
shll
lret
add
sbb
ds
lods
mov
icebp
movsb
test
adc
cmp
arpl
ljmp
sbb
mov
test
cmp
pop
mov
pop
stos
and
adc
push
in
arpl
add
movb
add
adc
add
jp
outsb
add
mov
add
je
mov
pop
filds
add
outsb
cmp
sbb
and
lcall
pusha
add
push
add
stc
dec
jmp
movb
sbb
push
rolb
lahf
fcmovnb
add
bound
push
pop
iret
xchg
aaa
pusha
add
out
cmpsb
es
xchg
int
add
dec
jo
inc
mov
and
or
imul
xchg
aad
cmp
cmp
in
adcl
out
arpl
dec
sbb
into
bound
jbe
aaa
dec
imul
xchg
add
mov
add
inc
jo
inc
add
stos
fbstp
stc
push
insb
or
out
jle
movsl
int3
xchg
pop
mov
sub
or
hlt
lret
pop
les
mov
rcrl
cltd
or
inc
add
out
or
pop
adc
add
fisubrs
add
lea
inc
mov
mov
scas
dec
pusha
add
xchg
push
sarb
or
out
pop
jg
mov
xor
mov
mov
clc
bnd
mov
imul
fdivrp
jg
mov
pop
es
in
pop
jg
add
mov
stos
cli
dec
outsl
ljmp
or
jge
add
cmp
mov
sbb
push
loop
add
add
loopne
and
pop
mov
loopne
xchg
dec
mov
inc
ret
push
push
cmp
in
lock
movsl
jno
addb
mov
cmc
fstl
and
pusha
add
fnstenv
jmp
subl
mov
dec
lock
pop
cwtl
jbe
xchg
test
push
adc
pop
jnp
std
pop
xchg
movb
inc
dec
je
jge
sub
fisttps
cmp
dec
hlt
mov
xor
cmc
stos
les
call
js
or
pop
lret
fdiv
adc
test
dec
adc
jge
insl
fistpl
fisttpl
jbe
jg
push
pop
mov
mov
push
inc
add
and
mov
adc
ret
xor
shrl
mov
xchg
inc
add
cmp
xchg
mov
add
in
rorb
dec
xchg
pop
add
jnp
adc
sbb
add
pop
inc
jmp
lock
test
in
popa
inc
nop
leave
jbe
dec
stos
scas
and
mov
fdivp
gs
add
mov
push
int3
mov
add
and
xor
sbb
push
sub
fdivp
mov
fcomps
test
xchg
mov
xchg
sbb
mov
movsl
and
lea
add
das
sbb
or
xchg
mov
mov
mov
add
fcomip
rolb
xchg
arpl
push
mov
sbb
cmp
dec
inc
add
loopne
mov
dec
rolb
push
sahf
out
shlb
sub
and
and
fsubl
jp
ss
push
iret
push
leave
addr16
or
stos
je
hlt
ret
add
add
sub
repz
or
xchg
into
in
movb
aaa
jle
or
hlt
movsb
insb
sub
sub
push
scas
ds
add
xchg
hlt
jne
daa
inc
add
and
test
push
jg
or
movsb
inc
add
add
nop
add
mov
cmp
xchg
int
out
nop
outsb
aad
jge
pop
lcall
mov
mov
insl
add
add
call
push
ljmp
movsl
pop
adc
and
div
in
lods
mov
push
jecxz
dec
xchg
aam
loop
add
mov
pop
mov
mov
add
add
jo
add
in
ja
fcmovnbe
pop
int
idivl
sub
in
inc
dec
and
pop
insb
out
pop
add
insb
mov
dec
push
add
dec
mov
fisttpl
sbb
adc
adc
mov
dec
popf
xor
xchg
outsl
gs
and
or
dec
mov
dec
xlat
fldenv
push
mov
mov
add
sbb
rolb
scas
pop
xor
or
jge
jp
lock
push
mov
shrl
xchg
mov
xor
jne
xchg
pop
inc
add
xor
dec
inc
add
cwtl
test
mov
push
add
fsubs
test
je
or
stc
mov
test
shll
jmp
add
fcomip
aam
pop
testb
mov
test
dec
push
cmp
dec
loopne
sub
js
mov
divb
loope
std
loop
sbb
dec
dec
dec
push
xor
push
inc
test
call
add
mov
xor
add
leave
daa
scas
js
aaa
pop
push
dec
jle
dec
sbb
std
lods
xor
push
sub
sub
sbb
mov
xor
ret
jnp
sub
bound
into
cmc
fwait
ljmp
adc
outsb
addl
ret
out
movsl
or
xor
iret
inc
add
jg
es
jl
inc
add
dec
rolb
xchg
sbb
push
mov
cli
daa
pop
cmp
cwtl
dec
fs
jecxz
dec
daa
and
fcoml
add
pop
outsl
sti
sti
sub
jle
outsl
adc
mov
jne
aaa
jo
inc
add
xor
fdivs
add
popa
xor
stos
es
fmull
int3
jns
pop
mov
icebp
jno
mov
inc
add
call
lahf
scas
mov
filds
mov
rcr
stos
stc
jne
cmpsb
mov
pop
mov
mov
scas
mov
and
push
or
int3
xchg
inc
or
call
pop
scas
shlb
xlat
jns
outsl
dec
fdivl
mov
sbb
mov
xchg
aad
fisttps
jb
mov
push
gs
jnp
sti
sbb
mov
add
mov
add
ja
and
arpl
push
ret
jae
roll
add
lcall
pop
rcl
sbb
sub
inc
add
stos
xchg
dec
xchg
jnp
pop
dec
lahf
jg
imul
outsl
imul
leave
add
push
test
mov
lahf
popf
push
xor
movb
xor
out
mov
bound
xor
js
sbb
jo
push
add
in
inc
cmpsb
out
jmp
scas
push
adc
mov
xchg
stos
daa
outsb
aas
push
xchg
jle
imul
outsl
fwait
and
in
loopne
in
lods
mov
test
adc
push
xchg
repz
push
pushf
aaa
sbb
cmc
jo
jge
jl
dec
jle
sub
aam
mov
or
mov
movb
sbb
mov
mov
or
pop
or
scas
dec
ficoml
add
pop
loop
std
xor
push
add
sub
and
popf
and
add
movsl
clc
lret
popa
out
push
jle
aad
push
lock
mov
cmp
popl
adc
inc
add
sbb
mov
lahf
sub
dec
stos
ds
mov
jl
pop
arpl
inc
add
lock
test
xlat
and
add
jecxz
add
ret
lea
mov
pop
xor
mov
push
js
xor
sub
js
das
mov
pushw
add
shrb
mov
int
addl
jo
inc
add
push
leave
and
fcompl
pop
xor
mov
jb
rorb
enter
in
sub
and
out
push
add
pop
decl
xchg
push
pop
gs
or
jmp
push
divl
aas
mov
sbb
lahf
popa
push
fnstenv
jno
mov
in
fwait
scas
mov
cmpsl
rolb
lcall
inc
pop
lods
jge
mov
or
les
sub
enter
adc
addb
xchg
fstl
push
cmp
jno
aam
and
or
or
and
mov
rorb
or
sbb
fdivl
pop
mov
add
cmp
inc
mov
je
lcall
cmp
lds
jb
lahf
out
daa
mov
xchg
push
xchg
in
ret
push
lock
in
dec
dec
ret
test
inc
add
aam
imul
in
lret
add
out
aam
and
add
int
lret
cvtps2pi
cmp
stos
dec
in
das
jne
add
or
cmp
xor
incb
add
xchg
mov
xchg
lret
sahf
push
ret
xchg
fldt
mov
and
js
add
mov
ret
fwait
les
repnz
les
lods
fists
mov
mov
cmpsb
jmp
push
or
add
xchg
xchg
inc
add
or
mov
outsl
xlat
test
pop
xchg
cmc
mov
cld
movsb
ss
pop
jg
jo
cmpsl
jecxz
add
stos
mov
insb
jl
add
addb
add
test
hlt
xchg
add
jge
cltd
sbb
cmc
jnp
les
in
and
jge
add
lock
add
push
jecxz
fnstenv
mov
pop
dec
and
sbb
out
call
fiadds
add
mov
jno
add
out
jnp
in
movsb
stos
mov
sub
cltd
insl
xchg
pop
jecxz
fwait
cli
inc
add
es
dec
inc
xor
mov
cs
push
xor
or
enter
inc
add
orl
add
popf
lea
arpl
sbb
mov
sbb
ds
leave
dec
test
cltd
std
or
inc
add
xchg
xor
adc
mov
jae
mov
stos
sbb
insb
arpl
xor
repnz
or
leave
in
add
jle
cmp
jne
cmc
addb
push
mov
jno
shll
das
jmp
mov
mov
addb
pop
jb
das
mov
sub
in
test
and
mov
ljmp
mov
add
aaa
mov
scas
cmc
jo
lods
popf
pop
je
aaa
mov
test
out
je
enter
pop
jl
outsb
sub
xchg
push
insb
mov
jle
mov
iret
push
sub
sti
or
dec
push
imul
inc
shrb
loope
or
mov
mov
mov
dec
sahf
sbb
lods
fmuls
out
loope
in
int3
jno
outsb
call
xor
mov
cmpsl
pop
leave
mov
ficoml
jecxz
inc
std
jbe
divb
add
mov
in
cmovle
add
jecxz
mov
add
sub
cmp
cltd
dec
xchg
sti
sbb
add
jp
mov
xchg
or
sbb
icebp
fisubs
mov
adc
add
scas
mov
stc
nop
es
add
add
ds
nop
cld
nop
jmp
add
cmc
shll
je
pop
stc
nop
es
cmp
add
or
add
add
nop
es
jns
leave
rep
stc
nop
es
cmp
ss
mov
call
cld
nop
jmp
add
add
popf
add
add
fmull
stos
icebp
inc
add
call
sub
jl
xor
sbb
inc
add
add
add
orl
nop
cld
nop
jmp
add
or
test
add
stc
nop
es
add
sbb
jb
add
mov
add
mov
mov
add
stc
nop
es
test
add
cld
nop
jmp
add
push
add
mov
addb
add
nop
es
add
call
stc
nop
es
add
add
jmp
nop
es
adc
pop
add
add
insl
push
push
mov
xchg
ret
add
add
add
mov
add
xchg
ret
add
pop
add
cld
nop
jmp
scas
and
add
sbb
cwtl
mov
popa
add
nop
es
add
add
sub
add
sub
add
jecxz
add
repnz
mov
nop
es
shrl
lock
push
stc
nop
es
cmp
stos
pop
fildl
mov
or
nop
es
scas
jecxz
add
lock
push
stc
nop
es
lock
jle
inc
or
push
push
mov
xchg
ret
pushf
out
add
adc
jmp
nop
cld
nop
jmp
add
cwtl
test
mov
es
and
add
add
pop
stc
nop
es
add
jle
add
inc
cwtl
movzwl
stc
nop
es
add
and
jl
push
mov
add
push
push
mov
xchg
ret
add
add
add
daa
mov
add
nop
cld
nop
jmp
add
pop
add
pushf
adc
push
js
push
mov
xchg
ret
cmp
add
call
enter
sahf
in
inc
add
add
mov
es
push
push
mov
xchg
ret
add
add
jle
leave
xchg
lret
add
push
mov
xchg
ret
adc
test
sbb
add
loopne
je
xor
pusha
es
aad
push
mov
lock
add
popf
ss
inc
sub
xor
add
nop
cld
nop
jmp
sub
rorl
mov
push
stc
nop
es
add
push
mov
cld
nop
jmp
ss
add
cmp
mov
xchg
ret
out
dec
jns
push
mov
in
mov
stc
nop
es
add
add
test
sub
add
nop
es
add
add
push
push
mov
xchg
ret
pop
add
add
add
mov
push
push
mov
xchg
ret
lock
ret
jmp
inc
sub
sub
add
xor
add
add
push
mov
xchg
ret
add
add
rorb
shr
stc
nop
es
jl
add
add
sti
stc
nop
es
mov
ss
inc
push
es
call
call
adc
add
nop
es
add
add
scas
xor
stc
nop
es
ret
add
call
jae
jb
nop
es
cmp
aaa
sbb
leave
pusha
stc
nop
es
pushf
add
jecxz
scas
add
jo
add
stc
nop
es
add
adc
insl
add
stc
nop
es
jl
add
add
lods
add
push
mov
xchg
ret
and
pop
add
fadd
stc
nop
es
jmp
test
cmp
cld
nop
jmp
pusha
aam
scas
add
lahf
push
nop
cld
nop
jmp
inc
popf
add
add
pop
fildl
nop
cld
nop
jmp
add
ret
mov
stc
nop
es
add
jle
add
jbe
call
stc
nop
es
fiadds
add
cld
nop
jmp
jecxz
add
add
stc
nop
es
add
xor
add
call
stc
nop
es
jecxz
add
add
fmuls
add
nop
es
into
mov
es
aaa
aaa
add
fiadds
mov
xchg
ret
or
sbb
add
stc
nop
es
jl
dec
add
xor
xchg
leave
mov
nop
cld
nop
jmp
add
add
stos
inc
scas
daa
or
sar
nop
es
add
add
or
nop
es
fdivp
and
pushf
scas
fiadds
jns
xor
add
stc
nop
es
add
into
add
pop
sub
shrl
nop
es
pusha
jmp
mov
stc
nop
es
lock
add
jne
nop
cld
nop
jmp
fiadds
add
push
repnz
add
add
nop
es
add
inc
in
lret
nop
es
pushf
jl
and
add
add
push
stc
nop
es
leave
add
aaa
add
add
mov
nop
es
scas
add
inc
add
dec
lock
inc
stc
nop
es
add
jns
mov
push
stc
nop
es
inc
add
add
es
jmp
mov
es
push
stc
nop
es
stc
pusha
add
aaa
rolb
jns
push
stc
nop
es
push
add
scas
adc
and
stc
nop
es
push
sub
popa
add
nop
es
add
adc
rep
stc
nop
es
adc
into
mov
add
mov
xchg
ret
mov
pop
add
stc
nop
es
aaa
push
add
add
adc
es
inc
fcmovnbe
add
xor
dec
jne
stc
nop
es
adc
test
adc
nop
es
add
leave
add
stos
lcall
jg
add
popf
or
add
pop
push
call
cld
nop
jmp
lock
ss
pop
call
push
mov
xchg
ret
test
popf
add
stc
nop
es
adc
dec
test
mov
xchg
ret
scas
add
add
cmp
mov
es
add
add
dec
mov
stc
nop
es
add
and
es
add
pushf
add
add
ds
mov
add
mov
add
lods
sbb
stc
nop
es
add
shll
or
push
pop
push
push
mov
xchg
ret
add
roll
mov
in
pushl
stc
nop
es
jns
add
push
add
jle
stc
nop
es
add
ss
add
mov
sbb
sar
nop
es
ret
cmp
add
loop
les
stc
nop
es
mov
lea
es
add
mov
add
stc
nop
es
add
into
cmp
stos
orps
nop
es
add
jl
adc
and
sbb
add
nop
es
add
add
adc
pop
or
xchg
ret
add
add
fistl
cmc
call
and
add
stc
mov
stc
nop
es
and
add
dec
push
stc
nop
es
mov
adc
call
nop
cld
nop
jmp
sub
pushf
inc
add
jle
jecxz
mov
test
add
add
nop
es
scas
mov
push
add
stc
nop
es
fildl
nop
es
pop
jle
mov
add
xor
jb
mov
and
add
add
addb
pop
stc
nop
es
or
stos
xor
loopne
bound
xchg
xchg
sbb
test
add
stc
nop
es
sbb
add
mov
push
mov
xchg
ret
cwtl
jns
add
js
add
stc
nop
es
and
add
add
nop
cld
nop
jmp
add
jns
add
nop
cld
nop
jmp
fidivrs
mov
mov
nop
es
push
add
aam
add
nop
jmp
stos
add
sarl
nop
jmp
add
aam
stc
add
add
add
nop
cld
nop
jmp
add
and
push
lock
mov
nop
cld
nop
jmp
cmp
stos
ds
fistps
nop
es
leave
leave
scas
add
lock
add
push
adc
add
pop
add
add
ret
push
mov
xchg
ret
adc
mov
push
inc
push
mov
xchg
ret
add
add
add
add
int
stc
nop
es
add
shlb
gs
nop
es
mov
add
mov
stc
nop
es
and
shlb
mov
push
mov
xchg
ret
add
inc
call
xor
scas
push
nop
cld
nop
jmp
add
lock
pusha
add
add
pop
es
dec
nop
cld
nop
jmp
add
call
mov
add
es
add
mov
dec
jmp
stc
nop
es
add
scas
add
je
bound
in
push
mov
mov
xchg
ret
mov
add
add
cld
shr
stc
nop
es
scas
add
add
nop
cld
nop
jmp
add
lock
pushf
mov
add
stc
nop
es
add
out
inc
test
add
nop
cld
nop
jmp
mov
inc
cmp
mov
xchg
ret
sbb
add
cmpl
nop
cld
nop
jmp
test
add
add
nop
cld
nop
jmp
dec
add
sub
add
add
imul
xor
push
mov
xchg
ret
mov
add
sub
nop
es
repnz
aam
add
cmp
jmp
add
sub
stc
aaa
add
nop
cld
nop
jmp
lock
dec
add
mov
stc
nop
es
add
add
mov
nop
jmp
lock
repnz
lock
nop
es
pushf
ss
fisubs
xor
sub
inc
push
adc
stc
nop
es
mov
call
stc
nop
es
add
call
test
cld
nop
jmp
sbb
sub
add
push
add
test
mov
rep
stc
nop
es
lock
add
add
add
push
jecxz
add
add
add
mov
sbb
mov
xchg
ret
sub
scas
add
add
add
add
push
mov
xchg
ret
pusha
lock
mov
jbe
stc
nop
es
add
and
addb
movzwl
stc
nop
es
add
add
add
xchg
stc
nop
es
add
add
add
inc
add
mov
stc
nop
es
or
adc
sbb
cld
nop
jmp
and
add
add
ss
pusha
push
mov
xchg
ret
into
jmp
pushf
addb
ds
stc
nop
es
add
add
sbb
nop
jmp
add
mov
add
in
repz
jmp
add
add
cmpsb
dec
decl
push
mov
xchg
ret
call
leave
rep
stc
nop
es
add
pusha
scas
add
in
pop
mov
cmp
add
jge
hlt
sbb
outsb
and
mov
xchg
ret
cmp
add
decb
jb
add
add
sub
ss
je
stc
nop
es
jecxz
mov
clc
call
cld
incl
add
or
dec
cmp
nop
es
scas
add
add
mov
enter
addb
and
add
xor
push
mov
xchg
ret
push
aam
add
or
mov
add
stc
nop
es
add
adc
es
ret
scas
cwtl
ret
jmp
rclb
sbb
inc
add
add
and
add
test
nop
es
fiadds
adc
fs
leave
stc
nop
es
lock
cwtl
add
add
fldenv
stc
nop
es
add
mov
mov
pop
push
stc
nop
es
jecxz
add
fidivs
nop
cld
nop
jmp
add
sbb
add
fidivrs
js
add
stc
nop
es
add
add
mov
jg
stc
nop
es
dec
stc
add
or
loop
nop
cld
nop
jmp
add
add
add
mov
push
mov
xchg
ret
add
add
ficoms
push
mov
xchg
ret
add
add
add
nop
es
add
mov
stc
nop
es
add
add
ficomps
add
es
add
cmp
jne
stc
nop
es
out
add
stos
stc
nop
es
aam
rolb
add
cmp
adc
push
std
inc
add
add
mov
nop
cld
nop
jmp
pusha
scas
ficoms
ret
add
inc
and
push
mov
xchg
ret
mov
jecxz
and
nop
cld
nop
jmp
add
add
add
xor
push
push
mov
xchg
ret
fildl
add
mov
mov
stc
nop
es
push
call
push
cmp
push
stc
nop
es
add
test
roll
add
jne
stc
nop
es
test
add
push
push
mov
xchg
ret
inc
stc
adc
fiadds
add
nop
es
add
add
mov
xchg
mov
nop
es
test
add
aaa
add
inc
stc
nop
es
add
add
nop
cld
nop
jmp
sub
out
add
in
add
stc
nop
es
add
add
dec
div
stc
nop
es
add
mov
cmp
fcompl
add
stc
nop
es
adc
add
or
sti
stc
nop
es
scas
mov
test
jmp
stc
nop
es
add
dec
add
add
or
add
fiadds
cld
nop
jmp
add
leave
add
nop
es
ret
add
mov
call
or
add
aaa
cwtl
jle
xor
push
mov
xchg
ret
sbb
add
mov
add
scas
push
push
mov
xchg
ret
stc
add
add
mov
mov
xchg
ret
add
add
add
mov
stc
nop
es
mov
push
nop
cld
nop
jmp
add
mov
adc
push
mov
xchg
ret
and
add
ret
jmp
add
xchg
ret
add
add
add
add
adc
nop
es
add
inc
add
popf
pop
dec
jmp
nop
cld
nop
jmp
add
add
cmc
iret
add
nop
cld
nop
jmp
cmp
add
add
jle
add
nop
cld
nop
jmp
lock
add
add
ret
mov
mov
int
lret
stc
nop
es
sub
lock
test
cld
nop
jmp
add
add
mov
add
add
or
add
pushf
add
and
mov
nop
cld
nop
jmp
lock
jmp
add
add
stc
nop
es
add
leave
mov
xor
nop
cld
nop
jmp
add
test
add
mov
push
push
stc
nop
es
add
stos
call
mov
xchg
ret
stc
add
push
mov
add
cltd
out
int3
sbb
lret
rclb
lea
nop
cld
nop
jmp
leave
jmp
add
add
stc
nop
es
adc
jl
mov
push
mov
xchg
ret
add
add
outsl
nop
cld
nop
jmp
add
mov
xor
push
mov
xchg
ret
add
les
mov
jmp
add
add
popf
sub
stc
nop
es
mov
ss
add
add
xor
in
xor
stc
nop
es
add
aaa
add
add
es
fildl
mov
lock
xor
push
mov
xchg
ret
mov
adc
dec
push
mov
xchg
ret
pusha
add
adc
fimull
jb
jecxz
add
push
sub
xor
stc
nop
es
add
adc
sbb
sar
es
pushf
mov
add
add
xchg
shrl
dec
add
mov
xchg
ret
add
add
add
adc
mov
xchg
ret
fiadds
mov
mov
nop
cld
nop
jmp
add
add
dec
mov
testl
nop
cld
nop
jmp
add
add
push
mov
xchg
ret
add
add
add
add
add
nop
es
scas
add
add
jb
jle
test
mov
nop
es
add
scas
add
add
inc
daa
cltd
mov
stc
nop
es
add
mov
add
adc
cli
call
adc
add
add
add
fisttps
repnz
add
rcl
inc
mov
nop
cld
nop
jmp
sbb
ficomps
pusha
push
mov
xchg
ret
ss
cmp
rolb
nop
es
jns
add
pop
inc
repnz
aam
inc
add
add
jecxz
mov
lcall
jb
adc
push
stc
nop
es
stc
add
repnz
dec
into
fwait
mov
stc
nop
es
inc
add
adc
add
nop
es
add
mov
jmp
in
add
add
stc
nop
es
stc
scas
add
cld
inc
add
inc
jns
add
mov
nop
jmp
stc
repnz
push
add
add
mov
xchg
ret
add
add
cmp
daa
add
add
jge
inc
add
add
add
rcrb
nop
es
cwtl
add
ss
sub
stc
nop
es
add
add
dec
nop
cld
nop
jmp
test
leave
or
pop
stc
nop
es
scas
add
jl
repnz
jecxz
or
es
add
jno
in
mov
stc
nop
es
fildl
add
adc
int
stc
nop
es
add
ss
scas
inc
add
pop
es
stc
nop
es
jns
sub
nop
cld
nop
jmp
mov
ret
or
push
mov
xchg
ret
into
mov
add
add
nop
cld
nop
jmp
pushf
add
xor
ret
mov
push
mov
xchg
ret
mov
out
jne
stc
nop
es
add
test
stc
nop
es
add
cmp
mov
xchg
ret
add
pop
add
arpl
stc
nop
es
mov
lea
nop
cld
nop
jmp
mov
scas
add
pusha
stc
nop
es
sbb
jecxz
add
stos
stc
and
jns
jge
stc
nop
es
add
jl
add
jne
adc
push
push
mov
xchg
ret
jmp
pusha
add
mov
mov
es
pushf
ret
add
add
imul
add
add
nop
es
adc
mov
add
or
add
pop
add
es
add
add
shrl
nop
es
scas
add
mov
cmp
popa
add
mov
xchg
ret
add
mov
icebp
fistpl
nop
es
repnz
jecxz
add
add
add
add
nop
es
mov
mov
or
popa
add
mov
xchg
ret
add
add
add
cmp
stc
nop
es
add
sbb
cmp
stc
nop
es
add
out
stc
nop
es
add
add
add
stc
nop
es
push
lock
add
add
stc
nop
es
add
ret
iret
call
stc
nop
es
mov
adc
add
stc
nop
es
add
into
adc
stc
nop
es
test
add
inc
call
or
ljmp
push
xor
nop
jmp
pushf
lock
add
add
or
add
nop
es
add
inc
add
add
nop
es
scas
and
xor
sbb
cmp
or
add
out
add
int3
lods
push
mov
xchg
ret
roll
add
add
mov
stc
nop
es
pushf
fildl
add
cmp
nop
es
pushf
add
imul
inc
add
test
nop
es
add
add
into
add
add
pop
inc
push
mov
xchg
ret
add
test
add
rolb
push
nop
cld
nop
jmp
add
lock
add
mov
mov
stc
nop
es
test
jl
add
nop
jmp
add
jns
sbb
xor
stc
nop
es
add
ret
ret
jns
jg
call
sti
incl
add
mov
push
mov
xchg
ret
add
add
add
add
stc
nop
es
add
or
mov
stc
nop
es
mov
adc
inc
add
nop
es
cmp
dec
mov
push
mov
xchg
ret
cwtl
add
add
std
mov
push
mov
xchg
ret
mov
xor
sub
jb
scas
rorb
leave
add
ljmp
jb
add
add
aaa
add
pop
push
mov
xchg
ret
sarl
stc
test
add
mov
stc
nop
es
jmp
fildl
call
jb
fcmovnu
add
lock
add
stc
nop
es
add
mov
jl
stc
nop
es
add
adc
or
es
add
add
call
nop
es
cmp
or
lock
lock
mov
stc
nop
es
jle
add
repnz
push
stc
nop
es
jns
or
mov
loopne
mov
push
mov
xchg
ret
adc
jns
inc
sbb
clc
out
add
mov
add
stc
nop
es
scas
add
sub
es
mov
add
rcll
or
test
add
stc
nop
es
add
mov
pusha
add
nop
cld
nop
jmp
test
add
stc
nop
es
add
test
cwtl
add
loop
nop
cld
nop
jmp
stc
ret
add
add
push
stc
nop
es
add
test
dec
add
stc
nop
es
add
jle
add
fnstsw
stc
nop
es
scas
add
add
aaa
sub
leave
hlt
inc
add
xor
add
jns
loope
nop
es
add
add
scas
lock
mov
stc
nop
es
stc
ficoms
repnz
notl
clc
add
and
add
not
push
mov
xchg
ret
lock
add
push
mov
jb
jle
add
test
cmpl
jne
jl
add
mov
xchg
ret
pusha
repnz
cwtl
cwtl
xor
stc
nop
es
dec
add
lea
nop
cld
nop
jmp
add
aam
popf
push
nop
cld
nop
jmp
lock
add
add
add
stc
nop
es
add
out
add
in
mov
stc
nop
es
mov
push
push
mov
xchg
ret
jle
sbb
add
imul
jbe
stc
nop
es
add
add
imul
stc
nop
es
aaa
add
mov
iret
or
and
ljmp
add
push
inc
add
sub
mov
xchg
ret
jns
add
add
nop
es
cmp
ds
pushf
cwtl
adc
mov
add
add
nop
es
add
add
jb
sbb
jns
repnz
call
add
ja
or
xor
add
add
pop
movswl
stc
nop
es
add
mulb
cld
nop
jmp
scas
inc
or
dec
scas
leave
add
mov
nop
cld
nop
jmp
add
scas
inc
into
insb
add
push
mov
xchg
ret
add
call
add
cmpsb
adc
push
push
mov
xchg
ret
sub
add
or
xor
call
nop
cld
nop
jmp
push
pushf
adc
jne
stc
nop
es
mov
inc
scas
add
orl
or
inc
add
popf
inc
jns
les
pop
mov
stc
nop
es
push
add
aaa
add
push
stc
nop
es
pushf
roll
popf
add
or
jno
stc
nop
es
pop
add
popf
pushf
xor
je
stc
nop
es
pushf
add
cmp
nop
es
lock
pop
stc
nop
es
jmp
add
inc
frstor
xor
add
nop
cld
nop
jmp
adc
add
jb
cmp
add
sbb
popf
add
pushf
mov
nop
cld
nop
jmp
stc
adc
dec
fcompl
nop
es
call
or
sbb
jmp
test
leave
dec
shl
add
add
popa
stc
nop
es
test
ss
add
fidivrs
es
mov
add
push
sbb
nop
es
test
add
aaa
push
aam
push
nop
cld
nop
jmp
cmp
adc
add
stc
nop
es
aaa
add
xor
sarb
jb
roll
cwtl
xor
ret
jbe
add
add
das
mov
push
mov
xchg
ret
add
and
movzwl
stc
nop
es
ss
shr
pop
stc
cmp
nop
cld
nop
jmp
add
call
call
arpl
nop
es
add
je
stc
nop
es
pusha
add
jl
lret
stc
nop
es
add
and
pop
nop
cld
nop
jmp
xor
add
or
cld
nop
jmp
ret
mov
push
mov
add
add
mov
inc
addb
mov
call
hlt
mov
mov
es
mov
cmp
pop
add
nop
cld
nop
jmp
add
out
call
stc
nop
es
push
lock
push
lock
orb
jmp
add
cmp
nop
es
or
xor
je
stc
nop
es
add
add
cmp
scas
enter
jb
add
add
cld
nop
jmp
add
add
push
jg
lret
stc
nop
es
repnz
add
ss
out
std
xor
stc
nop
es
mov
add
das
add
nop
cld
nop
jmp
call
add
nop
cld
nop
jmp
add
scas
jecxz
add
adc
and
push
mov
xchg
ret
add
leave
fildl
or
mov
xchg
ret
inc
add
add
popf
pushf
mov
nop
es
fiadds
add
add
xchg
loope
add
scas
add
pushf
xor
cld
nop
jmp
mov
ss
mov
or
add
aaa
test
test
add
add
mov
xchg
ret
repnz
add
call
jb
add
aaa
add
add
nop
cld
nop
jmp
mov
test
faddp
dec
sub
push
mov
xchg
ret
add
add
sub
nop
es
scas
pusha
mov
cwtl
adc
push
adcl
nop
cld
nop
jmp
cwtl
add
add
xchg
stc
nop
es
add
add
out
mov
nop
cld
nop
jmp
jle
or
or
pop
je
stc
nop
es
pushf
test
mov
mov
stc
nop
es
add
or
fldl2t
fs
call
jmp
stc
rolb
mov
xchg
or
add
xchg
ret
out
add
mov
in
push
stc
nop
es
pushf
and
add
fildl
jns
rcrl
mov
push
mov
xchg
ret
add
sub
mov
mov
xchg
ret
fiadds
ss
add
push
stc
nop
es
call
lock
and
push
mov
xchg
ret
mov
scas
call
nop
es
fidivrs
rclb
push
nop
cld
nop
jmp
add
add
out
sub
push
mov
xchg
ret
ds
repnz
nop
cld
nop
jmp
inc
add
and
test
cmpl
clc
inc
add
jecxz
add
mov
add
addr16
or
popa
add
cld
nop
jmp
pop
add
shl
add
daa
add
loop
push
imul
add
add
add
scas
mov
stc
nop
es
fidivrs
mov
mov
xchg
ret
add
add
fdivrl
nop
cld
nop
jmp
add
mov
jne
stc
nop
es
pushf
scas
add
add
sbb
mov
push
stc
nop
es
add
daa
std
mov
push
mov
xchg
ret
add
add
add
add
cld
dec
push
mov
xchg
ret
add
lock
ret
mov
stc
nop
es
add
add
roll
arpl
mov
stc
nop
es
pop
add
add
ret
add
xchg
push
mov
xchg
ret
xor
cwtl
add
add
clc
mov
stc
nop
es
add
add
ja
ret
mov
jb
scas
mov
add
lods
mov
stc
nop
es
mov
scas
mov
nop
cld
nop
jmp
add
xor
cs
nop
es
mov
fldl
stc
nop
es
add
push
add
es
add
rorb
mov
add
mov
xchg
ret
ss
mov
dec
cmp
nop
es
into
add
sub
shll
cmp
stc
nop
es
add
fiadds
adc
or
mov
cmp
ret
add
add
cmp
push
push
mov
xchg
ret
fildl
add
add
test
clc
call
dec
add
rclb
add
add
fiadds
mov
pop
mov
stc
nop
es
mov
cli
push
stc
nop
es
scas
xor
scas
add
push
mov
xchg
ret
test
ret
add
or
nop
cld
nop
jmp
add
add
add
push
scas
rep
stc
nop
es
add
add
add
dec
push
stc
nop
es
test
mov
dec
push
mov
xchg
ret
sbb
pop
cmp
add
mov
stc
nop
es
jl
jle
add
icebp
nop
cld
nop
jmp
popf
add
add
add
stc
nop
es
push
add
stc
mov
mov
xchg
ret
add
jl
mov
repz
nop
es
test
add
mov
mov
xchg
ret
popf
inc
add
add
adc
nop
es
jl
scas
add
add
cmp
nop
cld
nop
jmp
scas
push
add
jecxz
pusha
dec
mov
stc
nop
es
dec
add
add
nop
cld
nop
jmp
add
test
mov
stc
nop
es
scas
stc
scas
and
cwtl
add
xchg
outsb
xor
stc
nop
es
xor
test
xor
stc
nop
es
add
add
enter
jb
repnz
aam
or
or
or
stc
nop
es
add
add
ljmp
inc
xor
stc
nop
es
add
sub
popa
add
nop
es
aam
ret
aam
movsb
push
mov
nop
cld
nop
jmp
add
popf
mov
add
aad
inc
add
ret
rorb
and
nop
es
sub
cmp
add
es
mov
push
mov
xchg
ret
jl
push
into
rclb
sbb
jmp
jmp
inc
jecxz
add
jmp
jb
add
jns
sub
stc
nop
es
jle
add
push
stc
nop
es
add
add
jns
add
lea
push
mov
xchg
ret
add
test
es
jle
scas
repz
test
arpl
cs
stc
nop
es
xor
add
cld
nop
jmp
repnz
add
add
lock
dec
adc
nop
es
test
add
jmp
and
nop
es
popf
add
scas
jecxz
xchg
outsb
add
stc
nop
es
roll
pushf
cwtl
add
outsl
or
stc
nop
es
add
inc
add
mov
stc
nop
es
jl
mov
mov
push
mov
xchg
ret
pushf
sub
add
jl
cmp
nop
cld
nop
jmp
add
pusha
and
mov
push
mov
xchg
ret
and
add
add
inc
adc
nop
es
pushf
inc
pusha
pusha
add
add
add
or
inc
add
xchg
ret
fdivrp
add
add
aad
je
stc
nop
es
add
pusha
repnz
es
jl
xor
scas
add
push
adc
leave
sub
nop
es
add
inc
mov
movsb
ret
ret
shll
add
push
je
add
mov
sbb
decl
add
jl
leave
popf
fisubs
pop
add
nop
cld
nop
jmp
jl
jle
and
or
nop
cld
nop
jmp
popf
add
add
add
data16
inc
repnz
stc
nop
es
fiadds
add
push
mov
xchg
ret
add
add
add
aaa
lret
stc
nop
es
dec
add
add
add
xlat
outsl
pushl
stc
nop
es
add
test
mov
call
nop
es
stos
add
es
add
xor
pop
mov
mov
stc
nop
es
add
test
lods
mov
stc
nop
es
or
nop
cld
nop
jmp
inc
stc
and
fimuls
add
push
push
loop
push
stc
nop
es
jecxz
add
adc
fimull
cld
nop
jmp
repnz
test
jmp
jl
add
add
ss
cmp
jmp
jb
jmp
add
cld
nop
jmp
fisubrs
push
xchg
pushf
call
stc
nop
es
leave
add
stc
mov
stc
nop
es
xor
add
test
fisttpll
mov
xchg
ret
jns
cmp
sub
xor
add
stc
nop
es
aaa
sub
lods
push
mov
xchg
ret
add
rcrl
ds
add
nop
es
adc
add
popa
add
nop
es
cmp
rolb
ss
nop
cld
nop
jmp
add
add
add
lret
movzwl
stc
nop
es
add
roll
es
add
ret
mov
nop
cld
nop
jmp
push
scas
ds
add
pusha
add
add
add
jmp
call
adc
mov
stc
nop
es
scas
add
jmp
loope
cvtps2pd
and
inc
add
scas
add
lea
stc
nop
es
adc
add
add
push
mov
xchg
ret
into
cwtl
add
popf
inc
add
rep
push
mov
xchg
ret
add
test
sbb
test
sar
stc
nop
es
cmp
cmp
stc
nop
es
mov
add
les
or
add
incl
nop
cld
nop
jmp
stos
pushf
lock
stc
nop
es
add
add
add
stos
ret
stc
nop
es
add
jmp
add
clc
push
mov
xchg
ret
add
add
mov
popl
nop
cld
nop
jmp
add
scas
add
mov
je
rcr
add
add
sbb
and
sbb
popa
add
nop
es
call
jae,pt
shrl
adc
xor
add
inc
aam
xchg
add
pop
call
stc
nop
es
add
shr
outsb
test
nop
cld
nop
jmp
add
add
scas
xor
aas
push
stc
nop
es
add
add
movb
orl
jb
add
or
call
stc
nop
es
pushf
mov
das
sub
push
mov
xchg
ret
add
add
repnz
ret
scas
push
push
mov
xchg
ret
xor
fiadds
add
in
and
jl
gs
call
loopne
ds
aaa
test
es
cmp
mov
push
push
nop
cld
nop
jmp
add
push
pop
ret
pusha
stc
nop
es
add
add
mov
push
stc
nop
es
add
cmp
nop
jmp
mov
add
add
stc
nop
es
lock
repnz
add
jp
mov
add
add
mov
add
mov
rolb
addr16
dec
jne
dec
fs
dec
jnp
arpl
pop
or
add
cld
ret
test
and
fs
sbb
jae
pop
pop
lds
clc
cmp
mov
out
push
mov
adc
sub
sbb
add
rcrb
push
add
lahf
ljmp
mov
fisubl
sahf
pop
pop
and
std
pusha
add
test
jno
pop
lcall
test
sti
push
out
push
mov
repnz
lahf
decb
sub
push
xchg
addb
cmp
push
js
dec
pop
popa
in
ja
add
cmp
lea
cmp
and
aas
cmpsl
loopne
rorb
and
push
push
addb
aad
push
push
xchg
outsb
aad
inc
mov
mov
test
clc
push
outsb
lock
pop
inc
add
cmc
add
int
stos
aaa
add
mov
movsl
cmp
xlat
or
inc
sbb
rcr
lahf
push
mov
pusha
add
add
xchg
repnz
adc
mov
push
add
jbe
xchg
mov
mov
mov
add
cwtl
stos
out
mov
lea
add
sub
arpl
fistl
pop
cmp
insb
push
xchg
fldenv
dec
adc
frstor
loopne
sti
xchg
or
add
dec
jns
push
jmp
fwait
or
and
dec
push
sub
sub
mov
shll
inc
sbb
cmpsb
jp
stc
ljmp
mov
mov
sbb
jbe
mov
sbb
inc
cmpsl
adc
jecxz
enter
cld
or
enter
icebp
mov
rcl
pop
jg
std
and
ja
add
add
insb
or
inc
add
scas
lock
add
push
ljmp
sub
movsb
sbb
inc
add
nop
stos
js
add
dec
lods
push
cmpsl
mov
das
out
xor
xor
dec
pop
pop
aaa
add
dec
daa
addr16
dec
cmp
inc
add
out
out
xchg
adc
leave
in
jae
pop
jle
es
xor
repz
inc
add
inc
scas
dec
les
loop
rolb
adc
data16
mov
add
adc
aas
pop
mov
imul
pop
rcrl
mov
outsl
fldt
stos
call
mov
dec
and
inc
add
aas
cmp
nop
sbb
aam
mov
xor
mov
jl
add
xor
xchg
loope
inc
add
add
clc
mov
pop
cmp
mov
xchg
inc
add
mov
lahf
inc
add
mov
adc
aas
cld
ret
add
jl,pn
outsb
cmp
imul
xor
add
jge
inc
add
and
mov
add
mov
test
mov
add
filds
add
push
cmp
mov
cwtl
mov
mov
notb
add
add
inc
push
push
fnstenv
iret
push
add
sbb
fwait
sub
call
rclb
mov
sbb
test
mov
jmp
jne
adc
add
add
rcrl
xchg
rolb
insb
mov
add
xchg
or
lods
lret
fmull
andl
xchg
mov
jbe
jle
fcomp
pop
call
dec
dec
insb
push
add
call
and
nop
push
add
sbb
imul
out
push
test
aas
pop
jae
pop
cmp
shll
inc
add
call
add
adc
mov
add
add
xchg
push
dec
mov
push
fcomip
adc
in
int3
mov
fidivl
push
add
cld
ds
xchg
int3
mov
movsb
adcl
mov
iret
pop
push
mov
aaa
dec
fadd
add
add
cmc
je
inc
add
stos
push
push
jb
clc
add
and
xchg
repz
mov
lds
int
je
int
fsubl
jecxz
testb
push
push
xchg
push
bound
inc
imul
stos
fcom
push
cmc
cltd
fs
bound
inc
add
sbb
pop
mov
mov
ficomps
into
sahf
pop
mov
xchg
jp
jmp
pop
aad
add
adc
jo
aam
sahf
rsqrtps
dec
into
xor
cmc
jns
add
je
jbe
xchg
inc
add
inc
add
lods
sbb
xchg
sbb
or
shl
sti
insl
xor
xor
lds
adc
fs
jns
push
lds
decb
xor
call
xchg
sbb
cmp
aad
or
fisttpl
mov
repnz
sahf
loopne
aas
sub
lods
mov
xchg
pop
leave
scas
int3
loopne
mov
sub
sub
pop
or
mov
cmp
popf
or
or
dec
xchg
rolb
xchg
push
daa
push
ret
adc
sub
sbb
jp
mov
and
jl
in
adc
pop
and
push
test
add
cmp
shl
add
bts
addb
loopne
fwait
mov
and
push
add
mov
les
hlt
push
adc
cmp
int
xor
xchg
or
test
ret
pushf
mov
or
add
add
sub
xor
inc
fs
dec
push
cwtl
jg
in
test
in
lcall
loope
int3
sub
fists
addb
jno
add
adc
cmpsl
fistps
or
xor
repz
pop
push
add
sbb
test
sti
mov
jns
xor
mov
xchg
addb
mov
jnp
xchg
mov
dec
cwtl
adc
sbb
pop
stc
sub
jnp
ss
js
sub
push
daa
add
dec
in
mov
sbb
add
cmp
out
jmp
lods
imul
pop
or
mov
roll
sub
push
inc
xlat
std
mov
outsb
sbb
imul
mov
add
push
or
fs
inc
add
mov
add
arpl
ror
inc
mov
mov
js
fs
xchg
pop
mov
jne
add
repz
rolb
out
mov
jne
repnz
xor
xor
cwtl
dec
test
std
ljmp
out
xchg
push
imul
bound
jb
add
inc
movsb
xor
sbb
roll
cltd
cltd
shl
mov
sti
filds
push
add
lcall
push
les
notl
and
xchg
xchg
in
dec
cmp
test
jl
imul
add
or
sub
enter
dec
push
mov
add
les
jnp
or
push
or
out
sbb
daa
and
jecxz
add
aad
mov
hlt
nop
mov
ljmp
lock
push
add
mov
fsubs
add
adc
fisttpll
fistl
mov
out
mov
or
lock
fwait
test
clc
clc
cwtl
dec
sub
stos
fisubs
iret
ljmp
test
pop
sub
movsl
mov
add
dec
call
pop
mov
inc
add
testb
sbb
lahf
cmpsl
push
mov
insl
int3
scas
aas
sub
cmp
and
add
add
mov
fisubl
sahf
xor
fnstenv
pop
negb
sub
out
mov
cmpsl
xor
add
leave
lock
mul
in
loop
int
ja
repnz
mov
add
loope
mov
fbld
mov
xchg
jmp
jl
mov
lea
mov
arpl
xor
mov
add
lods
sbb
nop
and
xchg
cmpl
cld
in
clc
das
addb
jg
cmc
mov
xchg
dec
pop
mov
add
imul
nop
xchg
adc
pop
mov
test
inc
rcrl
sbb
daa
push
scas
lret
ret
xchg
adc
addr16
fldl
cli
jbe
mov
shll
int3
aam
mov
xchg
daa
addr16
lods
rorl
jno
jns
push
cmp
aam
pop
test
and
or
loop
or
das
shlb
xor
pop
xchg
adc
add
or
mov
add
pop
fcmove
xchg
or
ss
repnz
mov
sub
add
sahf
shll
addb
mov
xlat
xchg
rolb
add
add
lea
imul
xchg
push
ja
add
ljmp
xor
jp
call
add
out
mov
add
ljmp
or
or
cmp
push
sub
xchg
dec
std
sub
sahf
popa
mov
and
pop
loope
and
data16
insb
popf
das
jns
in
enter
fwait
xchg
in
pop
mov
inc
sub
push
loop
sarl
cltd
insl
or
shrb
jle
sub
or
iret
lock
inc
jae
add
xlat
aaa
cmp
cmp
insb
mov
mov
jg
push
pop
movb
scas
sbb
add
ret
mov
jb
mov
xor
movsl
movsb
push
mov
cmp
inc
pcmpeqw
jb
mov
aas
add
xor
sbb
repnz
mov
les
repnz
fwait
xor
iret
lock
call
mov
lds
add
fiaddl
jne
aam
imul
inc
and
inc
cld
int3
adc
mov
inc
lea
and
mov
inc
add
loop
testb
cld
loope
ret
add
or
sub
les
inc
add
mov
lret
sbb
push
lahf
dec
sub
xor
push
dec
xor
add
mov
dec
jnp
xchg
or
add
js
and
stos
das
les
cmp
shll
mov
jle
xor
bound
pop
push
outsb
sti
adc
push
enter
int
push
scas
lods
cmp
mov
and
or
fisttpll
mov
fcomip
adc
mov
sub
imul
cs
push
test
cmp
add
in
sub
fwait
adc
xor
add
mov
jno
or
push
nop
mov
or
popf
xor
insl
mov
sti
mov
insl
into
push
or
call
inc
xor
jnp
popf
add
xor
enter
test
pop
adc
xchg
add
sahf
or
or
jb
aas
icebp
fmull
sub
outsl
popf
pusha
add
cmc
adc
or
fsubrl
pop
sub
int3
xor
hlt
lret
jnp
add
cmp
cmp
loopne
jle
addb
out
scas
in
mov
insl
test
fcoml
adc
sbb
lds
push
dec
int3
clc
loop
mov
sub
add
jmp
ret
adc
fwait
sub
inc
add
out
shrb
in
dec
push
cli
out
push
add
ljmp
pop
bound
lods
adc
xor
jne
in
and
cld
pusha
add
push
ret
mov
pop
sbb
push
jge
mov
inc
rolb
jnp
add
add
into
lret
xchg
je
mov
icebp
notl
jae
dec
push
jae
repnz
sti
je
out
aam
push
push
add
pop
mov
arpl
pop
pop
mov
pop
scas
cmpsb
insb
test
mov
cmpsb
jge
add
push
sbb
in
les
rcll
fildl
sbb
insb
pushf
stc
sbb
push
xor
insb
clc
ret
movsb
inc
lahf
inc
fsubrl
add
or
xor
pop
jns
mov
add
gs
push
mov
divl
lock
bound
xor
dec
lods
mov
cmp
and
mov
movsb
cld
pop
imul
js
push
pop
addb
lods
int
frstor
add
add
stc
add
and
push
pop
and
sbb
xchg
push
test
insb
movsl
mov
xchg
lods
dec
inc
push
aad
jle
cmp
mov
dec
cmc
jmp
pushf
push
mov
jle
ja
mov
cmp
sbb
jbe
inc
add
stos
addr16
add
push
mov
pop
call
add
test
sbb
add
pop
mov
scas
addb
xor
pop
addb
add
mov
mov
xor
test
adc
lcall
inc
add
adcl
pop
insb
jecxz
stos
adc
stos
and
pop
or
icebp
out
inc
add
popl
cwtl
add
shrl
vdivpd
aas
repnz
xor
lcall
je
ljmp
imul
mov
add
clc
addr16
inc
jecxz
xlat
xor
inc
ss
mov
das
cmp
fwait
repz
cld
push
mov
sbb
rolb
jl
lahf
aad
in
lret
xchg
jae
cmp
add
sbb
sub
mov
repz
push
cmp
lods
sub
add
outsb
or
cmp
jmp
in
adc
imul
popa
sbb
arpl
leave
push
and
xchg
call
pop
add
popl
adc
out
add
imulb
inc
add
sar
stos
dec
idivl
in
jl
pop
push
stc
movb
lcall
xchg
les
dec
pushf
bound
lcall
fwait
inc
mov
loop
add
cs
in
fwait
sub
leave
out
pop
aaa
in
js
cltd
cmp
incb
mov
ss
add
xchg
mov
jae
jae
das
mov
xchg
pop
shlb
cmp
lods
xchg
mov
push
or
push
fmuls
scas
xor
roll
add
push
popa
out
fsts
add
imul
aad
add
mov
aas
dec
inc
mov
int3
adc
icebp
add
fucomi
les
inc
pop
dec
fstpl
aad
ffreep
add
add
test
xchg
test
add
cmpsb
push
sbb
inc
add
test
test
inc
add
pop
je
pop
jl
dec
add
clc
pop
jno
add
int3
inc
xchg
sbb
and
or
outsl
xlat
into
sub
add
jl
frstor
es
inc
add
mov
dec
or
mov
cmc
adc
xor
dec
ret
xchg
sbb
lods
aas
ds
pop
dec
xchg
mov
loopne
push
in
adc
xor
or
insb
ror
stc
repnz
fisubrs
xchg
movsb
fwait
jg
push
cmp
mov
sbb
ljmp
ja
dec
cmp
or
and
dec
inc
in
in
clc
cmpsb
aaa
int3
jg
sbb
cld
and
or
test
popa
cmp
pop
aam
add
push
sub
mov
inc
add
inc
add
pop
je
cmp
xchg
fildl
rorb
bound
orl
lods
add
testb
add
push
cltd
sti
in
jge
inc
add
push
add
sub
jp
pop
push
jns
or
ljmp
lret
and
lods
stc
mov
jge
adc
push
mov
lret
shrl
jle
inc
dec
inc
add
pop
xor
nop
ljmp
ret
call
mov
xchg
and
xchg
dec
leave
sub
decl
mov
pop
bound
cmp
ret
cltd
sbb
and
add
pop
or
out
xchg
cmp
sub
iret
popf
dec
ds
loop
cmc
push
outsl
adc
xchg
inc
add
mov
lods
ficoml
lods
test
adc
add
add
gs
push
add
scas
sbb
pusha
add
add
fwait
addb
arpl
sahf
pop
test
sub
or
push
push
add
out
iret
add
lea
jnp
add
leave
ss
jno
cmp
dec
clc
mov
lret
xchg
inc
add
push
add
mov
sub
cli
dec
int
mov
jmp
cmc
mov
pop
cmp
push
sti
bound
int3
adcl
in
xchg
fcomps
roll
hlt
sarl
cmp
das
and
push
mov
push
mov
adc
mov
repnz
xor
add
xorl
cmp
les
mov
inc
lret
scas
stos
call
push
lock
add
pushf
xchg
jp
rolb
pop
call
cmpsb
push
pop
fcoml
movsl
dec
mov
fiadds
inc
ja
loope
inc
jp
stc
in
jg
div
lods
xchg
sbb
push
inc
pop
popf
addb
add
addb
jl
into
fnstcw
es
inc
mov
push
push
stc
cmp
outsl
push
jne
fldenv
sub
dec
and
and
insb
das
push
or
inc
scas
call
or
jb
add
arpl
adc
add
xchg
mov
add
sub
xor
sub
sbb
aam
add
jmp
pop
iret
ficompl
sbb
mov
nop
sarl
adc
pop
jl
push
xchg
in
or
out
dec
lret
cmp
pushf
or
sbb
mov
dec
sub
or
int3
or
dec
loop
fbld
or
mov
dec
jo
push
xor
or
dec
or
cmp
push
xor
nop
push
repnz
xchg
lods
addb
popa
or
jle
fldenv
add
add
pop
pop
sub
push
add
mov
mov
popf
jmp
and
dec
sub
dec
loopne
adc
in
aam
repz
test
pop
mov
add
mov
or
jae
jg
mov
out
js
add
pop
rolb
les
ja
rolb
into
repz
push
mov
adc
and
sub
mov
nop
pop
aaa
fisubrl
sbb
cs
xor
or
addb
sub
sbb
add
inc
jecxz
outsl
out
imul
lret
inc
add
test
jnp
inc
add
add
add
pop
sbb
add
mov
push
lock
daa
movsl
clc
push
insb
jg
or
arpl
inc
cmp
js
ja
add
xchg
push
fmull
mov
pop
inc
add
sbb
xlat
and
dec
rolb
xlat
mov
jl
repz
adc
sbb
ss
loope
push
mov
jl
add
rolb
cmpsl
mov
ret
in
loop
push
cmp
push
pop
movb
pop
mov
xchg
ret
outsb
xchg
scas
push
add
cwtl
aam
pop
fnstcw
or
jbe
xor
iret
fidivl
jns
movsb
daa
adc
push
imul
pop
sbb
leave
rcrb
test
mov
lret
xor
add
pop
pop
adc
push
push
pop
sub
push
mov
loopne
test
fistpll
inc
add
out
inc
add
add
in
mov
jns
add
out
sub
ficoms
fwait
jb
xchg
arpl
cld
movb
push
pop
xchg
or
sbb
add
inc
sub
mov
pushf
daa
test
ds
pushf
cltd
mov
es
mov
test
mov
inc
data16
mov
fidivs
cltd
inc
cwtl
lret
loop
sbb
push
xlat
sbb
icebp
out
es
insb
mov
mov
mov
cmp
jl
or
inc
add
frstor
mov
rol
addb
inc
add
movsb
and
imul
sbb
or
mov
add
mov
add
mov
aad
xchg
into
jmp
sbb
ss
push
ss
sbb
cmp
cmp
add
sbb
pop
lahf
aad
pop
lea
dec
sub
rolb
sub
xchg
and
sbb
and
sbb
lds
fwait
or
insl
add
dec
mov
add
call
jl
jne
in
clc
xchg
aad
sbb
add
dec
inc
add
and
in
popl
fbstp
sbbl
mov
scas
jae
add
mov
data16
pushf
insl
iret
dec
lods
sub
aaa
popf
add
jmp
inc
add
sbb
pop
push
dec
sbb
and
in
in
adc
mov
or
popl
or
mov
lods
lods
push
lahf
xchg
daa
int3
icebp
inc
add
dec
xchg
ret
push
push
cmp
jmp
add
scas
dec
inc
adc
xchg
sti
cmpsl
cltd
stc
dec
std
and
das
or
nop
sbb
push
loop
mov
imul
ret
movb
push
add
icebp
repz
js
gs
popa
or
call
push
add
xchg
jle
sbb
dec
les
ja
ds
xchg
sbb
ds
pop
pop
nop
mov
mov
insb
push
mov
or
sbb
mov
dec
pop
inc
hlt
inc
add
int3
stos
leave
sti
xchg
dec
pushf
push
pusha
add
add
or
xor
out
add
in
clc
push
popf
pop
ret
sbb
push
mov
pop
sbb
or
enter
lea
and
mov
icebp
lret
jge
addb
outsl
jg
jno
in
pop
rolb
mov
add
push
sti
aas
mov
mov
addr16
inc
cmpsl
movsl
mulb
jle
jae
int3
or
xchg
int3
fsubrs
aad
das
sub
or
sub
pop
xchg
lea
jbe
lcall
add
cmp
add
push
lret
sub
adc
push
adc
lods
mov
cmp
add
dec
xorl
fwait
out
add
lcall
cmpsl
adc
adc
aam
jno
add
rcrb
sub
scas
jmp
pop
enter
adc
negl
mov
add
add
loopne
sar
clc
xchg
inc
sbb
sbbl
fiaddl
cmp
pop
mov
cmp
fsubrs
mov
pop
insl
jmp
cmp
lea
stos
mov
xor
dec
lcall
mov
and
and
out
es
in
nop
movb
fnstcw
add
adc
addb
mov
in
pop
movsb
cmpsb
daa
insb
mov
pop
mov
mov
mov
lret
in
test
sub
imul
rcll
add
aaa
jne
jge
sbb
mov
push
add
movb
movsb
shlb
mov
or
cmp
mov
cmp
mov
negl
lds
lods
mov
lock
xor
loopne
addb
pop
mov
mov
shl
xor
mov
dec
xchg
jno
in
mov
pushf
popf
in
and
jnp
js
test
test
add
into
daa
int
sahf
push
into
ja
mov
decb
aam
add
add
mov
xor
adc
pushf
xor
mov
xchg
pusha
add
ja
fistps
push
add
push
insl
addb
arpl
adc
cmp
adc
jecxz
pop
cld
mov
mov
fsubrl
std
cmp
inc
add
mov
push
adc
push
ret
add
out
loop
mov
sbb
cld
ret
adc
mov
in
add
leave
xor
out
xlat
cmpsl
mov
push
int
sub
ds
mov
and
push
sahf
mov
cmpl
mov
bound
sarl
scas
inc
add
add
and
fisubs
into
ret
cmc
adc
test
fbld
int
fstl
lret
and
in
add
add
sbb
add
sub
sbb
jno
inc
cmp
mov
shll
jns
nop
sub
mov
dec
pop
mov
out
js
enter
mov
insl
ret
cs
out
dec
cmc
push
fidivs
xor
fs
push
add
clc
insl
add
cli
test
cld
lret
push
loop
lods
xchg
xchg
adc
fwait
addb
test
jbe
dec
rol
add
ja
dec
lcall
add
mov
or
fcompl
mov
ljmp
repnz
test
loope
mov
jg
testb
sbb
movsl
xlat
pop
xchg
jge,pn
std
pextrw
dec
in
inc
add
add
add
fisubrs
loop
cs
cmp
or
cli
stos
repz
rolb
addl
cmpsb
mov
ja
mov
jecxz
ds
insl
jbe
data16
sbb
push
mov
cmp
mov
add
movb
sub
jg
bound
idivb
dec
fldl
aad
and
cwtl
xor
repz
scas
stc
movb
push
xlat
outsl
pop
xor
dec
pushl
aad
xor
lahf
cmpsb
sbb
bound
lahf
ja
push
xor
fdivs
mov
add
push
aaa
lods
jbe
jge
in
xor
test
fnstcw
pop
add
xor
push
dec
sbb
xchg
mov
scas
or
shl
cld
xor
out
jg
add
push
cmp
ss
add
in
dec
jo
jo
mov
mov
loopne
mov
push
ret
mov
stc
clc
jmp
cmpsl
cmpsb
repnz
dec
popa
mov
addr16
mov
add
test
fisttpl
add
add
inc
add
sub
mov
jne
addb
dec
scas
data16
push
adc
insl
xchg
mov
loop
call
loope
sbb
jp
mull
insl
rolb
jmp
sub
cwtl
adc
or
jecxz
dec
jnp
jp
and
add
pop
and
fdiv
cwtl
mov
dec
das
xchg
mov
or
cwtl
sbb
pop
stos
xlat
add
add
clc
fsubrl
dec
lret
loop
mov
mov
test
or
fisubrs
icebp
mov
das
dec
cmc
mov
in
lock
jg
test
negl
xor
dec
shrl
ret
loopne
mov
mov
scas
inc
ja
scas
lods
pusha
add
add
scas
es
sbb
xlat
loop
orl
scas
mov
adc
pop
xor
cmp
add
in
mov
cli
xchg
lret
dec
fnsave
pop
sub
pusha
add
mov
test
add
jl
js
in
adc
outsl
aam
sahf
movsb
in
or
fs
cmpl
push
pop
xorl
push
mov
pushf
hlt
xor
add
stos
xor
fistpll
ds
pop
rclb
outsl
mov
mov
add
and
test
add
and
jbe
xor
mov
mov
pop
outsb
addb
aad
xchg
push
cmc
dec
pop
xchg
jbe
cmp
ja
inc
add
bound
je
xchg
in
add
data16
xchg
in
dec
sub
xchg
in
or
movsb
nop
pop
xor
add
add
xchg
addr16
das
dec
push
js
mov
add
ds
mul
outsb
add
xchg
loopne
mov
stc
add
popa
imul
hlt
loopne
mov
add
mov
cmp
sahf
jecxz
cmc
addb
aas
cmpsb
push
ret
add
les
imul
jae
and
out
dec
iret
es
enter
sub
and
addb
lods
pop
xor
add
insl
out
mov
test
lret
xchg
loope
dec
cmp
add
pop
shlb
xor
mov
or
add
add
addb
fnstsw
pop
das
mov
rcll
inc
add
jb
insl
data16
dec
adc
sbb
movsl
jecxz
pop
int3
cmp
pop
mov
dec
add
mov
add
cmp
shl
push
jns
movsl
fidivs
pop
stos
imul
and
xchg
pop
sbb
push
sub
mov
lcall
in
mov
lods
lock
lds
mov
adc
ret
adc
pop
adc
mov
lcall
out
jbe
ret
dec
push
adc
loopne
pop
mov
adc
insb
lock
lret
jae
push
cld
lea
je
movsl
jae
xor
push
mov
jo
roll
je
icebp
push
adc
push
sbb
jae
dec
aad
lods
inc
add
jns
sysret
in
addb
rep
dec
pusha
add
mov
stos
pop
or
lcall
adc
lea
dec
and
add
out
roll
mov
int
sub
movsl
xchg
lret
data16
cwtl
cmp
notb
add
mov
cmp
push
and
ficompl
rolb
aad
xchg
pop
push
or
js
adc
idivl
cmp
out
bound
mov
pop
lret
fdiv
pop
xor
pop
pop
out
xor
jns
mov
prefetch
adc
imul
inc
dec
cs
sbb
iret
adc
mov
imul
std
popa
sahf
push
xor
pop
adc
add
mov
sahf
rcll
ret
addb
add
add
lret
adc
mov
jbe
pop
cmc
inc
add
movb
mov
lock
dec
mov
inc
test
fisubl
dec
inc
loopne
ret
jecxz
and
sub
insl
das
mov
jne
dec
push
cmp
add
js
pop
dec
push
inc
or
mov
add
sbb
pop
pop
mov
std
les
push
cmc
add
jne
lahf
scas
sbb
fdivp
sbb
adc
je
mov
add
mov
inc
insb
sbb
or
xchg
fmul
orl
mov
add
push
add
cli
xchg
ss
lods
jle
add
xchg
ja
sbb
inc
add
mov
fwait
pop
loopne
mov
mov
adc
mov
add
mov
out
cmp
mull
inc
add
in
sub
add
pop
lcall
test
cmp
sahf
dec
lcall
fxch
repnz
pop
jae,pn
push
push
cmc
add
movsb
out
or
xchg
mov
mov
xchg
jne
mov
and
fmull
push
fucomip
insb
loop
add
mov
cmp
fdivr
xchg
addl
dec
lahf
cld
sbb
sub
js
loope
cmpsl
sub
jno
ljmp
jns
jo
mov
add
pop
cs
xor
jno
rcll
pop
mov
mov
fiaddl
mov
adc
jo
aam
jg
cld
dec
push
add
cmp
ret
xchg
ficompl
xchg
push
jnp
xor
cmpsb
sub
stos
jp
pusha
add
add
mov
lret
inc
add
lods
sbb
movsb
enter
ljmp
mov
sub
pop
ja
cmp
sbb
das
mov
cli
sbb
xchg
or
mov
js
dec
lods
add
pushf
lods
push
add
jg
test
inc
add
jp
jno
jp
add
pop
cwtl
call
add
pop
sub
fstpt
and
add
out
or
pop
loopne
sub
jmp
mov
lahf
shll
xor
ret
jecxz
jl
mov
int
sbb
add
ret
pop
cltd
jp
xor
mov
mov
lea
sbb
push
popa
jne
mov
icebp
stos
push
add
iret
jb
mov
mov
mov
jb
jecxz
mov
dec
pop
cld
fisttpl
xchg
inc
arpl
xor
lcall
mov
add
push
icebp
pop
and
fwait
nop
jl
add
movsl
pop
bound
cmp
jp
imul
hlt
mov
cs
pop
add
frstor
push
sti
jle
push
add
ss
addb
push
lock
cmp
add
aam
mov
cld
cmp
out
sbb
mov
push
jl
sub
and
imul
push
stos
loope
add
cmp
add
fisubrs
inc
push
mov
mov
mov
hlt
xchg
test
adc
jns
lods
push
cwtl
mov
lea
mov
add
add
lea
push
das
jae
negb
adc
rol
pop
mov
and
xchg
xor
mov
xor
sbb
inc
add
add
pop
incb
sahf
enter
xor
orl
and
mov
fidivrs
arpl
push
and
out
dec
pop
out
push
out
incb
dec
in
cmp
ljmp
pushf
mov
inc
mov
jb
dec
mov
je
adc
push
jne
in
mov
cmpsb
test
pop
adc
xchg
dec
addr16
fsts
add
lret
push
or
imul
add
jae
call
mov
pop
push
dec
fstpt
mov
rep
fdivl
sub
outsl
mov
mov
rol
pop
les
imulb
or
stos
xor
pop
jecxz
xchg
out
cmp
push
cli
and
les
sbb
add
in
add
decl
jecxz
pop
js
add
test
rcl
fwait
js
sti
decl
cmp
mov
add
fsubrl
mov
mov
mov
xor
push
xchg
xor
mov
rolb
jo
jnp
sarb
insl
out
cmc
cmc
repz
pop
push
cmp
add
enter
cld
add
dec
mov
les
scas
pop
xor
add
mov
jl
repz
cwtl
add
mov
les
ja
mov
inc
cmp
je
pushf
js
and
loopne,pt
fs
data16
sbb
pushf
addb
movsl
ret
lret
movsl
mov
add
and
add
mov
jbe
ret
pop
mov
jne
rclb
mov
add
or
xor
or
sub
dec
jnp
add
test
mov
add
add
stos
inc
or
add
xchg
add
sbb
in
js
testb
and
ficoml
mov
jg,pt
cmp
and
pop
xchg
orl
cli
pop
ss
add
add
mov
add
movsl
roll
cmp
mov
jmp
loop
xchg
jmp
add
xor
enter
cmp
fs
dec
in
aad
add
cwtl
das
mov
aad
stc
mov
mov
addr16
mov
adc
jns
movsl
int3
stc
push
ret
push
dec
or
add
or
shl
mov
push
mov
pop
fildl
push
sbb
sti
pop
in
xor
scas
pop
out
ret
mov
dec
dec
push
add
sub
add
add
inc
enter
mov
out
subl
lds
std
lahf
repz
or
or
sub
push
jle
xchg
jae
cmpl
pop
inc
add
jno
adc
add
mov
sub
testl
iret
pop
sbb
and
add
jo
cs
push
addb
sbb
int
mov
pop
lret
andl
push
mov
adc
mov
add
mov
in
push
cltd
dec
pop
add
rcl
pop
dec
lock
dec
push
push
gs
sub
mov
in
in
xor
lcall
mov
jl
nop
in
adc
xor
add
iret
shl
dec
xchg
mov
dec
fwait
insl
xchg
lods
or
int
dec
outsl
inc
add
jns
imul
insb
mov
mov
repnz
push
sahf
mov
cltd
xchg
sbb
adc
out
std
sub
mov
and
xchg
scas
lds
les
fldenv
sahf
lret
xor
sarl
arpl
insl
mov
xchg
mov
jae
ret
xchg
outsl
divb
pop
xchg
fwait
or
fistps
jae
roll
scas
lahf
arpl
rcrb
cmp
xor
inc
jp
jp
inc
fistpl
jnp
add
fwait
aam
popf
cmc
push
and
lods
or
sub
test
jno
add
adc
xchg
xor
add
add
das
ret
into
push
test
sub
jmp
loopne
es
fcomps
les
jne
pop
movsb
jno
add
outsb
jae
inc
and
aas
cmp
push
sub
mov
add
jbe
push
addb
xchg
xchg
sub
and
je
ret
int3
lods
xchg
popa
lahf
add
fs
test
mov
std
mov
arpl
fisubrl
jae
pop
xor
movsl
cli
mov
add
les
aam
inc
push
pop
call
je
rolb
xor
bound
popa
add
into
loope
ret
xlat
in
mov
fs
xchg
notl
push
add
movsb
sub
inc
add
jge
sbb
mov
cmp
dec
push
adc
addb
in
insb
fistpl
shrl
leave
popa
or
movsb
adc
push
jnp
mov
stos
sbb
js
bound
mov
nop
xor
stc
test
movsb
inc
cwtl
out
push
icebp
xor
sbb
jmp
dec
fdivs
add
movb
inc
scas
pop
or
movb
iret
adcl
xchg
add
call
cmp
cmp
add
lcall
sub
mov
lahf
pop
pop
addb
adc
and
add
dec
inc
insb
sahf
js
movswl
fwait
sbb
xor
xor
imul
and
xchg
gs
mov
aas
adc
add
clc
rol
add
ljmp
jb
lock
add
sbb
movsb
xbegin
jbe
out
mov
fisttps
addb
mov
lds
add
gs
lods
cmpsl
push
push
pop
in
ja
aad
push
js
or
push
addb
addb
pop
push
add
add
icebp
outsl
fwait
xor
pop
pop
xchg
add
insb
jge
fmuls
xchg
lcall
push
addb
out
je
push
into
outsb
mov
jns
aam
mov
stos
sub
xchg
xor
jmp
jg
add
popf
aad
rolb
ljmp
adc
add
ja
add
add
ret
xchg
into
jne
push
fnstsw
sub
xchg
xor
push
ficomps
stc
lods
mov
add
jae
test
add
add
jo
xchg
sbb
aam
std
sub
or
jbe
jno
arpl
int
cli
xchg
lret
pop
mov
outsl
out
cwtl
lea
push
pop
cli
pusha
add
es
lods
inc
add
out
mov
jecxz
adcl
in
dec
sti
inc
add
add
add
add
mov
jl
ficoms
mov
xchg
popa
or
mov
fnstcw
mov
jb
ret
movb
call
add
scas
inc
add
push
add
cmp
pusha
add
add
sbb
repz
xchg
dec
test
push
fsts
scas
movups
xchg
mov
sbb
jno
cli
in
lods
arpl
mov
loopne
jne
arpl
cmpl
bound
daa
jne
mov
pop
jno
mov
lret
movsb
pop
cmp
xor
or
aas
mov
stc
push
push
push
loope
mov
rolb
ss
fwait
mov
outsl
out
pop
push
or
mov
mov
jo
add
repz
sbb
mov
movsb
aas
cmp
inc
leave
inc
add
pop
mov
dec
xor
rolb
and
xchg
pusha
add
mov
loop
pop
or
pop
sbb
sahf
mov
xor
and
cs
mov
mov
je
push
add
push
jne
jmp
mov
int3
jmp
test
push
ljmp
dec
insl
out
jae
adc
jnp
add
test
lret
ljmp
fstl
jno
inc
add
cmp
dec
rolb
mov
out
fisubrs
cwtl
ret
mov
lcall
pushf
push
push
popf
ja
mov
mov
sub
push
test
pop
push
add
cld
lea
cmc
or
add
ficompl
ja
sti
orl
rolb
aaa
mov
addb
rolb
inc
test
sbb
divl
test
fcomps
sub
push
mov
sub
xor
add
jmp
mov
sub
mov
push
stc
test
popf
lcall
filds
add
add
stos
test
jecxz
jae
aad
inc
add
pop
addb
jbe
xor
pop
incb
add
aas
jno
mov
add
inc
add
add
mov
dec
cmc
push
and
scas
sub
and
packsswb
jecxz
repnz
push
lds
or
fdivr
mov
mov
jg
cmp
xchg
pop
inc
repz
in
orl
jb
mov
call
mov
lahf
push
add
jmp
adc
push
xor
arpl
into
mov
lods
fadd
sbb
lock
fisubl
mov
push
sbb
push
mov
jl
add
stc
sti
push
addb
and
jnp
xchg
jns
xchg
lods
xor
pop
push
cmpsb
daa
lea
pushf
lods
hlt
adc
inc
add
bnd
in
add
add
movsl
sub
sti
test
aaa
fidivs
rcrl
and
insl
pop
inc
mov
sbb
add
xchg
js
and
bound
push
popa
jo
xor
test
adc
fnstsw
sub
ds
aas
in
shll
pop
push
push
imul
mov
and
xchg
rcrb
dec
imul
int3
es
pushf
ret
in
add
decb
sbb
inc
add
jmp
add
or
lcall
dec
xor
lret
insb
rcll
incb
add
call
mov
movsb
cmp
jno
test
push
mov
mov
add
sub
inc
btc
push
scas
dec
aas
mov
flds
add
stos
cs
dec
fstpt
jle
cmp
fcmovbe
and
ja
pushf
xchg
dec
addb
sti
xor
addb
clc
dec
sbb
cmpsb
pop
add
mov
cmp
push
aad
pop
xor
cwtl
mov
jo
pusha
add
bound
out
nop
insb
jno
mov
mov
jb
adc
ret
adc
and
xchg
dec
jp
fs
lods
pop
pop
dec
xchg
xchg
cmp
lret
in
je
addl
inc
mov
addr16
add
mov
inc
mov
xor
pusha
add
xchg
lret
adc
and
addb
mov
jns
stos
push
and
mov
popa
jb
add
xchg
add
mov
mov
add
aam
les
jle
add
rolb
aaa
dec
xchg
aas
pop
hlt
scas
fwait
pop
sahf
lcall
lret
ret
stc
add
stos
adc
jp
adc
pop
cmpsb
out
add
mov
mov
std
stos
adc
cs
or
or
in
inc
add
jl
stos
or
and
cmp
mov
fsub
push
mov
fldcw
in
cmpsb
push
repz
cwtl
sbb
add
add
add
test
add
hlt
xchg
cli
xor
add
call
pusha
add
jae
pop
mov
addl
push
push
dec
or
mov
jb
rolb
daa
xor
fs
add
or
adc
add
adc
or
cmc
mov
sbb
mov
jae
sbb
rorl
jne
repnz
jbe
cmc
out
mov
xor
add
xchg
xor
lcall
adc
add
out
add
dec
std
addb
outsl
sti
adc
dec
push
sub
lods
fs
mov
sub
rolb
aad
jge
pop
les
sbb
sub
mov
repz
fcmovnbe
out
outsl
fdivr
sub
adc
sbb
add
mov
mov
or
and
iret
hlt
dec
pop
pop
adc
cs
jno
mov
loope
jae
test
jmp
xor
pop
subl
sbb
add
mov
mov
and
pop
rolb
xchg
movb
fstp
mov
add
add
lock
je
add
movsl
pop
push
js
cli
push
xchg
and
add
and
add
daa
ja
sbb
imulb
ret
fsubrs
ja
enter
int3
or
mov
in
imul
inc
mov
pop
in
popa
fldt
lcall
add
push
xchg
enter
xchg
cmp
jns
add
leave
repz
add
mov
push
inc
lods
inc
add
inc
addb
repnz
xor
jnp
and
push
push
sbb
adc
sub
xlat
jo
lods
sub
test
out
insl
test
bound
lds
push
add
call
fidivs
arpl
pop
jg
mov
add
cmpsb
fcoml
mov
idiv
dec
inc
sbb
pop
fcompl
icebp
out
lods
mov
popf
sbb
push
movb
loopne
sub
das
cmpsb
xor
push
cwtl
sahf
inc
jnp
push
int3
rcrl
movb
add
cmp
dec
lods
fidivs
sarb
jo
mov
aad
or
arpl
mov
add
push
iret
lods
lods
addr16
dec
or
add
xor
add
add
pusha
add
das
push
add
mov
and
test
std
mov
xchg
ficompl
int3
jge
dec
lret
mov
fadds
push
cld
mov
adc
cltd
aas
inc
cmc
daa
aad
xor
sub
add
inc
add
ss
lret
jp
ds
sub
xchg
push
push
fimull
sbb
xor
les
fstpt
add
add
aam
and
pop
push
push
adc
jns
pop
popl
nop
rclb
test
lahf
mov
and
and
ss
into
fildl
add
mov
xor
push
dec
adc
cmp
mov
pop
xor
add
lcall
xor
mov
xor
push
das
jns
nop
mov
add
lret
cmp
add
cli
dec
bound
popa
sbb
cwtl
push
sarb
cltd
addr16
stos
push
jo
mov
mov
sbb
pop
ret
and
or
cmp
inc
jb
add
inc
or
movb
icebp
jae
ret
adc
add
add
js
push
addb
iret
and
addb
pop
addr16
fcompl
shrl
inc
add
in
add
je
add
mov
lret
test
push
push
add
dec
insb
and
cmpsl
xchg
outsl
sub
mov
mov
out
popf
cmp
dec
test
push
inc
add
sbb
jb
push
in
sub
sbb
add
call
iret
test
lods
jbe
add
adc
add
loop
adc
mov
jmp
mov
cltd
es
sub
and
cmp
inc
add
add
stc
ja
lods
fwait
ds
out
lods
aaa
std
out
test
repnz
xchg
xor
jg
sub
bound
or
mov
iret
ss
in
push
jge
xchg
xor
popf
xchg
xchg
mov
mov
jl
pop
pop
lea
cs
clc
roll
fisubrs
add
and
inc
push
mov
hlt
sbb
and
xchg
xor
cmpsl
in
into
pop
leave
clc
mov
movb
mov
or
mov
lock
sbb
add
pop
idivb
xchg
dec
jl
adc
fcoml
test
add
aas
outsl
dec
xchg
or
enter
fbld
scas
inc
jne
inc
add
push
xchg
nop
ss
add
sub
loopne
adc
pushf
adc
lahf
daa
xor
sbb
push
mov
aad
jge
ljmp
xor
stos
outsl
mov
fwait
minps
std
jbe
cwtl
or
inc
add
lcall
dec
insl
into
sub
loopne
cmp
add
aam
pop
mov
in
movsl
loop
push
dec
test
jecxz
fldl
sbb
scas
pop
in
push
xchg
jno
jg
pushf
dec
in
ds
pop
xchg
fucom
pop
dec
cmp
jno
pop
sbb
jle
inc
add
lods
mov
rolb
xchg
cld
adc
icebp
xchg
cmpl
dec
cmp
ret
rolb
push
mov
test
fisttpll
xchg
leave
sbb
jg
les
fisubs
xchg
inc
add
scas
cmp
lock
sti
iret
jmp
add
lods
dec
pushf
ljmp
or
int
subl
add
popf
mov
ss
push
data16
testb
mov
mov
jo
popa
stc
jnp
or
or
popa
aam
jecxz
lret
aas
adc
ret
cli
push
stc
stc
fistl
fildll
pop
dec
in
in
xor
push
jns
xor
push
out
dec
enter
fcomps
insl
xchg
inc
add
dec
push
mov
add
js
outsl
dec
jecxz
mov
push
pushf
fistpll
addr16
pop
or
inc
add
mov
popf
movsl
out
lods
out
xchg
imull
enter
in
sti
xchg
sbb
add
and
add
inc
add
cmc
lcall
xlat
jp
pop
or
fdivrl
or
gs
mov
aad
je
adc
adc
out
js
lcall
add
mov
in
pop
cmp
add
pop
pop
scas
aaa
adc
push
xchg
inc
add
jmp
test
popf
or
mov
not
pushf
mov
pushf
sbb
fsubrl
repnz
dec
das
jae
adc
mov
test
jle
mov
push
xor
push
int3
push
lock
mov
test
ret
add
dec
push
pop
jae
mov
in
mov
xor
fimuls
cltd
cmp
push
repz
add
outsb
inc
loopne
sbbl
add
add
mov
push
aad
fisubrl
or
or
not
sti
scas
fwait
inc
arpl
rolb
xchg
jnp
push
outsl
and
js
std
fimull
out
add
and
mov
sbb
decl
outsb
dec
inc
add
mov
movsl
gs
cli
sub
ret
mov
add
add
cld
xchg
jg
sub
xchg
iret
nop
sub
sarl
arpl
mov
cs
rorb
adc
and
jmp
iret
je
cli
fnsave
cmp
inc
push
rolb
jmp
inc
mov
pushf
fwait
or
push
imul
push
xchg
imul
mov
inc
add
cmp
add
movsl
aaa
jne
fdivp
cli
es
pminsw
in
mov
int3
dec
test
addr16
xchg
cmp
cmc
adc
in
pusha
add
mov
fistpll
lods
icebp
ret
cmpsb
sbb
mov
sbb
out
iret
xchg
ja
push
adc
cmp
xlat
sub
adc
cmpl
mov
lock
loopnew
aam
mov
sub
push
add
fisttpl
and
iret
dec
es
mov
add
arpl
adc
movb
push
and
in
mov
dec
adc
xlat
mov
ss
shrl
loope
adc
adc
leave
cmp
in
and
inc
add
add
pop
jmp
jmp
or
pop
cmp
or
fsubrs
cmp
add
xchg
mov
mov
aas
jmp
dec
push
xor
mov
enter
adc
test
cli
ds
in
ljmp
sub
out
das
sub
lock
xchg
jno
add
adcl
add
add
cld
push
xor
add
mov
mov
mov
cmpsb
push
jo
jge
je
clc
or
in
and
stc
fmuls
add
sahf
or
rol
add
cld
mov
and
addb
stos
sub
push
dec
mov
lret
addr16
jae
jnp
add
jge
cmp
pop
sub
test
xchg
push
scas
jnp
rcr
xor
add
inc
inc
add
jmp
jns
frstor
clc
mov
push
add
jbe
jl
inc
add
inc
add
dec
inc
add
jnp
push
ret
add
add
push
call
add
js
jnp
jl,pt
add
jl
mov
add
add
ss
add
loop
lret
cmp
push
mov
sbb
popa
rol
add
jns
add
add
mov
ret
pop
out
cld
fmul
ror
mov
decl
mov
pop
mov
xchg
pcmpgtd
and
or
cwtl
xchg
leave
cltd
addr16
fs
dec
jne
out
xchg
rcrl
lods
mov
jle
add
adc
icebp
in
mov
xchg
mov
xchg
pop
mov
mov
jb
test
sarb
and
mov
bound
jns
xchg
out
cwtl
les
pop
js
clc
daa
fstp
mov
mov
out
jmp
inc
xor
xchg
sub
and
cmpsl
push
mov
add
or
add
scas
or
fsubl
rclb
mov
adc
push
sbb
mov
inc
es
imul
rolb
fiadds
add
int3
jmp
or
mov
add
push
dec
sub
imul
sbb
ljmp
ljmp
cmp
cltd
mov
pop
pop
mov
rclb
int
xor
hlt
adc
jne
test
lea
cmp
ret
dec
shll
add
dec
out
sub
loop
inc
cmp
adc
into
push
les
xchg
jbe
stos
stos
jp
mov
sub
xchg
sub
in
notl
push
es
xchg
dec
xor
push
arpl
add
lahf
or
add
clc
stos
push
add
sbb
sub
enter
add
mov
cltd
jmp
mov
fwait
icebp
in
sarl
outsb
in
pop
xchg
inc
add
hlt
movb
xchg
fdivrl
add
insb
xlat
inc
popa
cmpsb
xchg
mov
shr
or
mov
lods
cmp
or
push
pop
mov
inc
add
mov
pop
pop
xchg
std
dec
pusha
add
fsubp
fmul
push
leave
frstor
add
icebp
pop
repz
iret
es
jge
adc
in
mov
add
inc
pop
mov
call
jnp
xchg
pop
popf
mov
mov
leave
mov
xchg
dec
lods
addb
add
xchg
mov
leave
adc
pop
or
or
dec
xor
pop
mov
test
sub
call
add
add
jns
in
xlat
rcrb
daa
mov
mov
mov
and
xchg
sub
xchg
out
inc
add
push
lret
js
fistps
add
es
jnp
jmp
mov
add
sbb
in
dec
test
scas
dec
outsl
push
fbstp
push
jae
or
sbb
into
addr16
loop
add
bound
addb
sti
sbb
jle
fs
sub
jns
out
jmp
xchg
mov
mov
add
inc
and
or
imul
jne
add
add
pop
ljmp
and
test
push
add
and
jae
add
dec
inc
jmp
xor
push
out
pusha
add
fdivs
hlt
lret
add
pop
push
sub
test
xor
das
pop
push
push
pop
mov
leave
cmp
into
in
xchg
cltd
jmp
xchg
cli
xchg
setb
add
mov
jl
test
add
inc
add
xchg
lcall
sbb
inc
lahf
push
push
add
sub
out
loope
popa
mov
fists
lock
push
clc
cwtl
mov
add
add
adc
pop
push
add
js
sub
add
adc
data16
mov
addb
push
cltd
ret
or
cmp
enter
and
dec
iret
or
lret
imul
xor
add
inc
mov
mov
inc
add
std
cmp
hlt
pop
or
lea
mov
loopne
dec
stos
cmp
xchg
mov
addb
sub
add
fnstsw
rolb
mov
xchg
push
test
mov
sahf
xorl
shl
dec
xchg
xchg
and
das
pop
inc
test
in
lea
cs
mov
pushf
je
cmpl
dec
push
mov
inc
add
sbb
or
sbb
cmpsb
xchg
xor
adc
add
sbb
mov
lahf
div
lretw
add
test
adc
call
sbb
dec
mov
stos
push
fbld
fmuls
in
push
addb
jb
inc
add
jns
lret
fwait
imul
push
push
lock
outsl
xchg
jo
xchg
push
xchg
fcoml
and
mov
inc
scas
xor
add
js
mov
inc
add
stos
inc
in
pop
sub
pop
roll
xor
insl
jg
jl
fisubs
insw
popa
shlb
adc
ljmp
inc
add
xlat
sub
sbb
aad
stc
lcall
jae
push
fbstp
inc
push
scas
mov
addb
cmp
dec
cmpsb
icebp
into
out
sbb
mov
xor
mov
nop
adc
je
iret
hlt
stos
lahf
xchg
mov
scas
pop
in
sar
out
pop
scas
xchg
cld
ds
push
and
xchg
in
push
jg
fcomps
fisubl
adc
pop
jge
daa
adc
add
dec
nop
test
out
mov
or
les
das
push
jp
pushf
das
cmp
insb
jle
push
sti
js
push
mov
subl
jle
out
inc
add
sbb
pushf
fidivl
test
add
mov
dec
adc
add
iret
add
push
inc
xor
test
aas
dec
jmp
mov
aad
lds
and
push
mov
push
sbb
add
outsl
lret
sub
iret
sub
add
sarb
in
fs
add
inc
add
push
sbb
addr16
add
jle
mov
lret
pop
adc
stos
call
push
fidivs
mov
in
sbb
xor
in
mov
sarl
iret
jns
add
mov
mov
dec
cld
jae
mov
iret
cmp
jl
add
pop
lcall
mov
mov
incl
mov
push
fs
cmpsb
sar
xor
inc
add
addr16
mov
mov
mov
andl
fld
insl
aaa
push
popa
xchg
cmpsb
push
jle
and
mov
out
xchg
jbe
cli
inc
leave
mov
ficoml
js
rclb
push
add
push
mov
inc
add
pushf
cmp
lock
add
mov
add
push
fists
mov
popa
stos
pop
in
mov
mov
shld
fsubrl
and
or
ja
adc
sahf
loope
pop
xchg
scas
adc
addb
mov
jecxz
sub
nop
ret
test
mov
jecxz
add
push
sbbl
into
out
clc
adc
ja
push
xchg
mov
add
lahf
dec
lcall
dec
sbb
add
xor
shrb
push
or
cmc
dec
icebp
stos
mov
lret
aad
pop
jle
pop
std
xor
inc
inc
bound
jno
loopne
out
add
into
add
das
inc
xor
push
lcall
inc
add
push
mov
or
lea
add
stos
sbb
or
xor
add
dec
pusha
add
push
adc
repnz
pop
scas
add
add
lds
in
and
mov
adc
mov
jle
and
jnp
mov
int3
outsb
pop
pushf
or
int3
mov
adc
pop
push
test
loop
cmp
pop
xorl
mov
dec
sub
mov
cwtl
test
mov
mov
mov
cmpsb
adc
movsl
loopne
addr16
pop
aas
mov
fwait
jbe
mov
and
mov
jo
and
je
adc
xor
pushf
mov
pop
xlat
movsl
sti
adc
add
insl
addb
or
sub
pop
jne
push
add
lret
jns
xchg
cmp
jecxz
iret
jno
cmp
pop
rcll
dec
outsl
add
test
aam
jmp
add
mov
mov
sub
rolb
out
movsl
sub
add
cmpsl
jae
mov
add
cmp
sub
ret
mov
or
push
xchg
mov
aam
xchg
orl
test
ds
add
mov
cmpsb
sti
cli
xchg
add
add
loope
xor
repnz
pop
sbb
inc
add
mov
shrl
pop
push
jecxz
and
and
or
rolb
dec
clc
mov
dec
adc
scas
testl
subl
mov
jae
mov
mov
psraw
mov
pop
jle
mov
xor
adc
mov
iret
xchg
hlt
mov
pop
mov
das
addb
mov
mov
insl
dec
dec
mov
test
push
inc
add
add
push
ret
jle
call
jp
xor
mov
add
push
stos
mov
adc
jg
addb
and
xchg
inc
cmp
push
inc
fnsave
outsb
jmp
jecxz
adc
add
jg
ret
inc
out
cld
lcall
shrl
rcll
out
lds
addb
fmul
add
fldl
mov
dec
pop
xchg
fs
popf
jecxz
add
popa
or
enter
addb
lret
sbb
pop
fcompl
jnp
pop
mov
fiaddl
andl
nop
cmp
ds
dec
popf
lret
jle
sub
je
cmpsb
icebp
mov
dec
scas
push
cmpsb
and
add
inc
cmpsl
inc
add
push
add
pop
movsl
adc
shll
or
mov
lahf
xor
sub
fiaddl
out
addb
lock
decl
addr16
add
je
add
add
or
cmp
push
fcmovnb
mov
cmpsb
je
pop
and
movsb
leave
jge
in
fidivl
inc
add
fidivs
outsl
lea
outsl
movsl
sub
je
cmp
loopne
add
xchg
mov
inc
add
jmp
add
addb
pop
clc
mov
rclb
sahf
add
shrb
sbb
ds
or
push
mov
or
addb
jae
cmp
pop
pop
ret
leave
ret
xchg
hlt
shl
jecxz
rcrb
add
push
dec
jae
jne
add
stc
cmp
in
add
inc
add
jo
push
add
xor
push
add
pop
fwait
pop
and
clc
test
add
jnp
jne
push
sbb
smsw
add
xchg
mov
shl
adc
jmp
xlat
decl
add
cvtps2pi
mov
rcrb
jbe
add
sub
inc
add
dec
inc
add
mov
std
xchg
pop
dec
bound
rcll
cwtl
out
adc
data16
pop
jno
sbb
outsb
xchg
mov
add
adc
cld
jmp
inc
outsl
addb
xchg
fcmovu
repz
mov
or
cs
and
test
ret
cmp
repnz
test
cmp
lock
mov
mov
jecxz
sub
add
xor
daa
sbb
inc
add
mov
add
xchg
das
les
shr
cli
xor
add
in
cmp
notl
inc
icebp
movsb
lret
ljmp
gs
sahf
cld
in
cmp
aaa
sar
loope
inc
sbb
sbb
add
xchg
sahf
enter
mov
cmp
aas
xchg
mov
or
nop
mov
push
push
xorl
stc
push
aas
movsb
nop
movsl
jg
dec
inc
lods
int
mull
lret
adc
inc
add
mov
xor
xlat
adc
push
int3
je
lods
loop
or
pop
sub
or
sbb
nop
jmp
enter
cmp
push
push
adc
loope
addb
pusha
add
pop
mov
dec
int
loop
sbb
mov
add
jmp
add
xlat
inc
jb
fwait
jnp
in
mov
jnp
mov
notl
mov
xor
add
add
stos
stc
pusha
add
mov
cmpsl
cmpsl
pop
sbb
mov
fcoml
jne
sbb
fs
add
fidivrl
into
in
push
in
arpl
pcmpgtb
pop
mov
inc
mov
popa
rol
add
hlt
cmp
fimull
jp
mov
xchg
bound
sub
lret
addb
or
cmp
push
xor
cli
negb
mov
ret
cmp
sub
call
negb
sbb
or
jmp
mov
xor
add
movsb
pop
adcl
and
add
cli
add
daa
out
jecxz
pop
mov
enter
into
dec
xor
adc
cmp
or
int
mov
mov
pop
mov
in
pop
fiaddl
lea
xchg
cmpsl
jno
adc
movsl
pusha
add
lock
xor
push
and
and
mov
dec
adc
and
xor
add
or
pop
outsl
pop
sar
int
mov
lea
in
jbe
push
jb
subl
adc
aam
test
jae
lods
cwtl
jle
xor
stc
aas
dec
cmp
into
xchg
adc
add
test
out
shrb
ret
push
pushf
aas
cmp
lods
addb
ds
push
mov
push
pop
ss
into
xor
pop
ss
clc
jns
mov
daa
mov
stc
xchg
cmp
add
cmp
pop
push
fwait
xchg
pop
insb
bt
adc
addb
test
repz
in
xor
mov
and
fwait
xchg
push
cmpsb
fs
ret
jge
xlat
stc
lcall
xlat
xor
andl
and
in
das
cmp
shlb
add
cmp
cld
cmc
scas
jo
in
or
lods
fadds
lds
or
jecxz
popf
stc
xchg
cmp
mov
dec
mull
mov
sbb
push
in
addb
cmpsl
xchg
xchg
lahf
outsb
lcall
flds
add
sbb
mov
xlat
mov
addb
sar
ss
out
sahf
and
xor
jg
sbb
mov
leave
and
in
cwtl
jge
les
dec
xchg
lcall
cmp
and
dec
faddl
add
pushf
or
cli
cmp
movlps
cmp
xchg
pop
mov
add
repz
cmp
add
pop
push
add
nop
adc
and
and
sbb
jns
xchg
and
ret
idiv
popf
lret
xchg
lea
xor
fdivp
mov
scas
pop
or
mov
jnp
sbb
jno
add
aas
bound
inc
adc
pusha
add
cwtl
mov
in
and
xor
inc
insl
sahf
sub
call
and
mov
add
jge
mov
and
pop
sbb
mov
inc
jne
test
jo
popa
sbb
gs
aam
cmp
shlb
ss
push
sbb
pop
ficompl
dec
jb
and
add
sbb
adc
dec
push
nop
in
mov
or
add
jnp
aam
sub
test
sbb
icebp
mov
add
ja
adc
dec
pop
pop
push
xor
and
clc
pop
sti
bnd
xor
cmp
sub
push
cwtl
sbb
mov
add
pop
inc
add
xor
mov
mov
lahf
inc
jle
mov
stos
leavew
addb
test
mov
xchg
adc
popa
outsl
cmp
pop
or
lods
nop
insl
push
into
cmpsl
and
test
fildll
mov
in
js
in
fisubrl
xchg
xor
sub
and
pop
pop
insb
dec
dec
notb
js
rolb
subl
fcomps
adc
pusha
add
add
push
scas
cmp
jne
idivl
mov
movsl
pand
jb
lods
insb
mov
inc
outsl
sub
xor
cli
or
loopne
pusha
add
add
ja
fcompp
in
mov
sbb
add
add
add
push
jecxz
lods
cli
std
cmp
add
outsl
sbb
inc
add
add
ret
in
sub
sbb
add
mov
jb
dec
out
jle
fcmovbe
jmp
mov
ret
mov
loopne
and
shll
add
fs
test
jle
in
mov
mov
aad
or
dec
xor
add
mov
inc
inc
add
orl
xor
add
enter
pop
mov
sbb
xchg
mov
xlat
xor
decb
call
xchg
test
mov
inc
add
add
sahf
loopne
pop
call
fs
mov
cs
cld
jbe
stc
sub
mov
aad
sti
mov
lock
xchg
push
fnsave
mov
sbb
sahf
stos
test
lahf
imulb
xchg
mov
mov
cmp
imul
daa
lret
cmc
daa
imul
lods
idiv
stos
bound
mov
pop
repz
shlb
dec
adc
and
add
mov
pushl
mov
fsubl
xchg
pop
mov
fdivr
adc
sbb
in
loop
dec
das
addb
in
lea
xchg
dec
je
test
lret
pop
fwait
fxtract
sub
or
in
jge
fstps
ja
jne
outsl
push
sub
data16
xlat
in
punpckhdq
test
scas
ret
iret
shll
or
add
insl
jno
mov
jno
jns
xlat
sub
outsb
repnz
xchg
addb
add
ja
jo
and
outsl
js
insb
or
jno
mov
hlt
mov
jns
dec
xor
fistpl
mov
adc
pop
ret
jmp
mov
pusha
add
cmp
addb
in
add
repz
mov
dec
into
mov
pushf
add
int
fidivs
in
movb
jae
out
add
clc
dec
out
rolb
jmp
sub
jae
cld
hlt
pop
fisubl
xchg
rorl
mov
add
add
push
dec
iret
dec
into
mov
add
inc
add
mov
adc
mov
pop
xchg
xor
sub
xchg
std
loop
div
nop
cmpsb
les
inc
add
out
sbb
sbb
cmp
add
push
cmpsl
out
out
push
js
xchg
jle
or
dec
movsb
xchg
test
in
stos
fsubrl
mov
pop
dec
mov
arpl
mov
imul
testb
add
pop
push
push
pop
fistpll
imul
add
popf
les
dec
jb
icebp
shrl
iret
repnz
out
in
stc
js,pn
sub
mov
xor
dec
jge
and
cmpsl
xchg
add
stos
lock
sub
ret
xchg
mov
ret
inc
call
or
sbb
insb
xchg
je
jle
aam
out
sub
add
mov
adc
loop
ss
lea
lret
add
sbb
or
sub
cmp
pop
push
inc
add
xchg
ret
add
shll
pop
jbe
jnp
lcall
out
mov
pop
sub
stc
mov
mov
scas
insb
in
rorl
jecxz
push
or
fiadds
adc
jecxz
in
mov
pop
fwait
aaa
push
pop
sbb
inc
add
pop
gs
add
mov
jb
adc
xchg
cmpsl
jle
lds
and
ss
les
bound
push
sub
add
jg
das
ljmp
lods
sbb
imul
sub
add
push
pop
fisubrs
test
add
jns
mov
cs
add
mov
hlt
aas
dec
mov
cmp
mov
add
gs
mov
push
ret
rcrb
fnstenv
imul
sbb
fwait
sbb
pop
pop
inc
loopne
pop
add
and
inc
add
mov
jae
sub
scas
dec
sahf
js
ret
jne
mov
movsl
mov
lods
ljmp
jne
pop
scas
lods
mov
inc
add
pusha
add
add
and
sub
cmp
imul
mov
popf
jbe
cmp
push
mov
push
xor
xchg
ja
out
xchg
inc
inc
dec
mov
xchg
push
mov
pop
div
mov
lcall
cld
cmpsb
pop
out
fidivl
xor
pinsrw
test
insb
js
movb
icebp
mov
add
pop
int
fiaddl
push
cmp
arpl
lock
xor
pop
inc
add
adc
mov
add
out
lret
addb
loop
addr16
outsl
jb
scas
in
push
loope
jl
out
jp
dec
mov
sbb
mov
lret
push
inc
xor
cmpl
add
xchg
rcrl
outsl
test
mov
push
aaa
inc
add
xchg
repnz
outsl
jo
js
push
fwait
mov
ja
pop
insl
scas
xchg
xchg
out
dec
xor
jb
ret
add
adc
jl
mov
cltd
dec
mov
insb
sbb
xor
cmpsb
lret
aam
xor
xchg
sahf
adc
enter
sub
int3
inc
pop
dec
ret
daa
or
pop
test
hlt
jo
scas
add
leave
into
mov
scas
xchg
jae
cli
inc
add
leave
pop
dec
int
push
xchg
notl
pop
loopne
lahf
lret
xchg
stos
mov
mov
into
xor
jle
leave
and
mov
repz
hlt
gs
mov
sahf
pop
jbe
cmp
lock
add
add
push
mov
pusha
add
inc
xchg
jmp
inc
scas
sahf
out
mov
sti
test
sahf
cmc
call
movb
add
push
ja
cmp
lret
lock
test
lock
add
push
outsb
xchg
aas
ficoms
in
into
sbb
cmpsl
sbb
fdivs
mov
add
movsl
mov
stos
iret
lock
fnsave
jne
outsl
fcompl
scas
scas
addb
cmpsl
loopne
add
rorl
cli
ja
sahf
dec
into
jl
and
les
mov
movsb
repz
aam
cmpsb
rcl
xor
or
xor
xchg
arpl
out
stos
pop
jbe
movsl
jg
aam
outsb
nop
mov
test
lock
xchg
lods
sub
stos
pop
icebp
dec
testb
mov
push
push
sarb
jnp
stos
push
push
xchg
hlt
jge
add
outsl
shrb
pop
cmp
add
out
mov
push
jmp
add
ss
addb
adc
shll
cmp
dec
push
lods
bound
pop
ret
inc
add
adc
and
mov
or
rolb
dec
mov
mov
jmp
mov
fsts
insl
test
add
arpl
popa
divl
jp
sarl
adc
jp
push
nop
mov
out
in
je
cli
sub
pop
movsl
mov
mov
imul
dec
incl
sub
hlt
ret
shlb
addr16
add
icebp
mov
mov
xchg
pop
and
sti
popa
bswap
sbb
sub
pop
rolb
dec
iret
clc
mov
jl
xlat
jecxz
jge
nop
mov
adc
xchg
push
cmp
ret
xchg
push
mov
add
mov
push
sub
mov
add
aam
sbb
into
inc
add
enter
mov
jl
movsb
and
mov
stc
stos
mov
jno
push
and
xor
and
and
mov
dec
push
pusha
add
add
sti
xchg
push
or
orl
mov
ja
clc
lahf
mov
pmuludq
sbb
cld
fldl2e
and
leave
in
sub
flds
cmp
cli
stos
ret
sub
mov
outsb
fucomp
xchg
push
ret
inc
repnz
xor
push
gs
fnstenv
push
lret
push
pusha
add
outsb
mov
or
out
mov
icebp
sbb
les
and
std
xchg
add
int3
dec
imul
imul
les
sbb
sbb
js
or
xchg
add
push
mov
in
rolb
scas
mov
enter
xor
cld
xor
mov
pop
fsubrl
dec
xor
les
popa
clc
hlt
jg
cmpsb
inc
add
pop
mov
push
addb
sbb
add
adc
add
out
cmpsl
stc
mov
mov
push
insl
dec
repz
and
and
jb
or
add
cmp
das
cmp
popf
add
xor
adc
cmp
xchg
add
adc
jmp
inc
push
iret
xor
or
cs
test
fisubs
stos
jns
mov
out
add
sub
and
cli
cli
sqrtps
data16
cltd
in
clc
mov
add
mov
inc
rorl
inc
add
into
dec
cmp
mov
mov
not
scas
sub
cwtl
or
xor
cli
mov
mov
sub
aam
pop
mov
or
push
add
xchg
enter
ficompl
jmp
pop
and
sub
pusha
add
int
jnp
add
aaa
mov
fldenv
add
sub
jecxz
mov
aad
fcom
push
add
and
mov
cli
std
mov
in
add
push
mov
and
dec
inc
lods
addb
sbb
or
push
pop
sbb
sub
add
pushf
test
push
cld
lret
sarb
xor
push
and
cmp
sahf
push
xchg
repnz
pop
fmuls
xor
fs
add
add
lock
mov
dec
test
out
shll
mov
in
sbb
xor
in
add
insb
mov
jb
mov
xor
dec
pusha
add
pop
jnp
cmp
jae
jp
mov
enter
jg
cmpsl
sbb
and
push
or
test
rorb
and
mov
add
das
xor
imul
push
mov
jne
sub
add
mov
mov
jecxz
dec
xchg
jp
addb
daa
popa
mov
push
test
js
mov
lods
cmpl
fdivl
add
gs
add
mov
bound
sbb
leave
faddl
je
sbb
xlat
int3
popf
mov
jb
aam
jnp
mov
scas
lods
push
add
pushf
push
mov
add
test
fidivrs
mov
jns
and
pushf
pop
aas
xlat
jb
ss
mov
sub
or
pop
inc
add
adc
bound
mov
pop
cli
dec
and
out
imull
push
dec
std
ss
add
xchg
int3
scas
cmp
int
lock
jg
int
mov
sar
loopne
xchg
pop
in
mov
aad
and
fdivs
pop
dec
add
mov
cmp
lret
push
fmuls
stc
sbb
flds
movsb
cmpsb
mov
adc
les
sub
jno
lea
fldt
cmp
cltd
ret
xchg
das
les
nop
mov
adc
inc
add
jae
rcrb
sub
inc
add
aad
mov
fstps
push
int3
and
stos
dec
push
lret
cmpsb
pop
cmp
mov
shr
jb
add
pop
sub
mov
popa
jb
dec
iret
mov
xchg
pop
xchg
pop
test
int3
jp
scas
pop
sbb
cltd
dec
mov
adc
icebp
xchg
xchg
add
or
mov
inc
dec
icebp
mov
jo
outsb
adc
into
inc
and
addb
sahf
dec
inc
add
inc
mov
adc
mov
sub
xor
add
dec
inc
je
add
lods
stc
inc
add
pusha
add
dec
mov
dec
cmp
inc
add
clc
icebp
sub
lahf
cmc
aas
dec
jns
mov
or
aam
cmpl
aad
xchg
pushl
pop
xchg
out
mov
inc
add
pop
lcall
into
jmp
pop
bound
fcomps
sar
mov
xchg
jnp
into
push
cli
loopne
mov
movsb
out
addr16
fdivrl
mov
cs
icebp
and
cmp
cmpl
push
sbb
inc
add
add
sbb
add
pop
xchg
int
jle
add
pop
mov
push
adc
rcl
jge
dec
inc
add
insl
sbb
mov
cld
lahf
dec
in
push
add
lods
cmp
lret
push
mov
add
call
lcall
andl
pop
sbb
movsb
jb
fistps
rclb
sbb
mov
js
dec
inc
jns
or
add
push
sub
rolb
lods
add
fisubs
push
rorb
lcall
mov
outsl
shl
inc
add
js
pop
jne
pop
mov
dec
dec
ret
add
or
pop
cwtl
aad
lcall
jnp
or
stc
imul
mov
repnz
and
push
mov
mov
pop
and
call
xor
test
add
jmp
jno
push
stc
aas
movsb
pop
idivl
pop
addb
lret
jo
fnstsw
push
pop
cwtl
pop
sub
xchg
xchg
jecxz
sbb
push
dec
adc
div
xchg
bound
or
pop
int3
mov
mov
fsubl
loopne
sbb
pop
and
adc
mov
sbb
lods
sti
aam
in
adc
hlt
inc
add
jg
add
in
repz
xor
inc
add
rcrl
mov
js
test
icebp
mov
xchg
je
cmp
and
jecxz
enter
add
clc
lock
add
add
xlat
in
adc
hlt
dec
fidivs
add
mov
xor
xchg
sbb
out
and
call
xlat
rol
add
jbe
sub
mov
sbb
mov
add
inc
add
add
cmp
dec
movsl
inc
pop
fnstenv
cltd
push
pop
pop
mov
fstpl
cmp
mov
hlt
mov
arpl
jg
mov
push
xchg
dec
push
sti
ror
push
shll
add
dec
adc
lods
in
popl
sarb
xchg
jne
jge
into
cltd
ret
pushf
mov
push
jnp
adc
fsubrl
pop
sbb
inc
sbb
test
xchg
xchg
pop
push
jl
sub
and
mov
hlt
xchg
stos
icebp
test
jg
pop
loope
pusha
add
add
out
pop
int
inc
sbb
inc
sub
add
xchg
je
cmp
mov
pop
sbb
imull
lock
add
jecxz
xor
lods
add
test
out
pop
jae
xchg
and
sub
das
ret
xchg
clc
in
cld
dec
iret
icebp
rorl
stos
test
add
mov
add
add
rcrb
pushf
in
inc
adc
pusha
add
fisubrl
xchg
xor
add
rolb
lcall
jne
in
inc
jbe
mov
xchg
push
fs
fiaddl
cmc
push
pop
inc
inc
add
mov
xor
lods
arpl
dec
sbb
jae
add
xchg
enter
iret
scas
cmp
repz
mov
xchg
data16
add
cmc
ret
outsl
jo
add
pop
fbstp
xchg
sbb
int3
cltd
pop
mov
add
cmp
add
xor
and
xchg
xor
sbb
jp
push
das
push
cmp
jge
insb
repz
lret
fs
add
mov
jmp
xchg
inc
add
inc
inc
add
mov
loop
fidivl
mov
cld
dec
mov
or
enter
out
ret
mov
lret
xor
ljmp
dec
jle
cmp
addr16
mov
jne
add
mov
repz
jbe
add
mov
mov
adc
adc
movl
cmpsb
je
inc
add
test
imulb
adc
mov
add
xchg
mov
popf
cs
repnz
jnp
bound
gs
mov
push
mov
or
mov
adc
cmpsb
add
sbb
jge
jge
or
xchg
clc
mov
add
fsubs
add
add
cmp
fisubl
jmp
add
stc
inc
mov
push
in
fisttpll
dec
jmp
xchg
cs
jo
sub
dec
data16
in
test
loopne
testb
add
std
lret
inc
add
sub
sbb
pop
adc
cld
adc
mov
decl
lods
push
lds
aam
es
cld
les
inc
add
add
fdivr
gs
imul
fisttpll
or
stos
addl
push
lds
and
out
add
out
dec
xchg
ficoml
ror
adc
jb
lahf
sbb
pminsw
mov
nop
lods
test
cmc
jnp
adc
shrl
or
ret
stos
aad
jo
les
into
in
jbe
jns
or
mov
addb
outsb
sub
add
ja
jae
out
pop
mov
aas
sub
sahf
pop
sub
dec
push
in
add
je
scas
or
rcll
out
dec
or
push
cwtl
push
mov
pop
in
adc
stos
sbb
mov
test
xchg
icebp
pop
xchg
sahf
arpl
outsl
jmp
jo
fimuls
jl
les
cmp
jg
mov
es
mov
adc
push
ljmp
out
push
mov
mov
insl
dec
les
sbb
mov
pop
jnp
add
cmp
xor
jb
movb
mov
ret
ret
xor
sub
fistl
rolb
sub
das
movb
cmp
sub
pop
xchg
push
pusha
add
loope
xchg
mov
int3
xchg
xchg
add
sahf
rcll
addr16
enter
xchg
rolb
jecxz
mov
rolb
fisttps
inc
add
add
bound
xchg
rclb
rolb
add
rolb
push
movsl
sbb
adc
and
adc
xor
mov
jb
mov
in
add
and
lret
inc
nop
jmp
out
xor
fstpt
sarl
imulb
or
push
iret
mov
aas
pop
push
pop
popa
mov
add
pop
sbb
les
arpl
xchg
and
mov
xchg
mov
xchg
sbb
mov
ja
loop
add
add
es
das
push
inc
add
sbb
xchg
push
add
lahf
push
testb
in
outsb
sbb
test
mov
add
pop
jmp
repz
aam
insl
stos
insl
test
pop
ja
inc
add
scas
aam
fbstp
inc
add
jnp
sbb
add
mov
xor
jno
xchg
sub
inc
popa
dec
lods
leave
sti
clc
ljmp
mov
mov
sti
enter
mov
mov
nop
mov
add
cmp
loop
inc
add
int
mov
xchg
int
adc
xor
mov
testl
scas
aad
imul
or
cmp
push
add
dec
fisubl
sub
or
xchg
push
dec
dec
popa
sbb
push
ret
stos
lea
push
pop
call
int3
adc
movsb
push
xchg
or
pop
xchg
adc
cmc
and
mov
sahf
out
imul
xor
je
pusha
add
inc
mov
hlt
sub
add
xacquire
inc
add
lret
jle
sub
pushf
mov
stos
push
adc
xor
sub
loopne
jns
pop
sub
add
jo
add
push
sbb
push
outsw
mov
fwait
sub
push
inc
add
mov
mov
add
out
cmp
push
add
cmp
hlt
mov
lock
xchg
push
out
jg
pushf
lea
cmovnp
mov
adc
add
mov
xchg
dec
dec
clc
in
add
mov
add
pop
xor
es
fdivrl
out
scas
ret
jnp
or
sbb
sub
xor
pop
xlat
iret
mov
int
rorl
push
lret
sti
rorl
gs
lret
inc
add
les
inc
add
popf
add
clc
pop
sub
cmpsb
mov
mov
lret
inc
add
addr16
es
loop
addr16
daa
mov
jns
arpl
add
sub
mov
shr
jae
fwait
loopne
fbld
add
in
and
inc
jnp
add
adc
jp
inc
aad
in
cwtl
push
add
int3
nop
sub
pop
inc
dec
adc
imul
sbb
scas
mov
add
jp
sbb
add
jns
int3
cmp
stos
out
mov
add
sbb
or
pop
jg
add
aam
adc
push
inc
sbb
test
sarb
mov
test
pop
mov
pushf
jg
mov
cvttps2pi
daa
mov
addr16
push
in
dec
xor
pushf
add
test
add
out
pop
fcmovbe
adc
sbb
cmpsl
sub
aaa
xor
in
xlat
dec
add
or
addb
data16
lret
inc
mov
push
bound
int3
lcall
lea
pop
push
imul
pop
fwait
xchg
scas
xchg
cwtl
jo
stos
adc
push
dec
and
and
popa
sahf
mov
mov
sub
push
fsubl
cld
loop
in
dec
lds
xor
and
and
pop
call
lcall
jne
adc
dec
xchg
pop
scas
mov
jne
call
add
add
and
and
fisubs
dec
fsubrs
mov
insb
xchg
adc
adc
or
test
lret
imul
adc
inc
mov
xor
cmc
fs
mov
inc
sub
jecxz
inc
add
mov
push
add
cs
add
xchg
test
rolb
xor
std
jl
sbb
add
inc
loope
xchg
cli
fldl
add
xor
inc
adc
sahf
mov
xlat
xchg
push
inc
add
pop
dec
lock
repz
ljmp
outsl
adc
push
xchg
imul
add
dec
jl
cmpl
cmp
push
enter
add
popa
add
push
sbb
mov
add
inc
fsubr
mov
notl
lea
add
mov
addb
fidivrs
addb
add
cmp
jb
push
movb
mov
nop
cmp
in
push
je
add
dec
ret
out
xor
bound
rolb
fiaddl
fisubl
addb
push
cwtl
pop
pusha
add
es
nop
mov
scas
jb
fs
mov
inc
add
push
add
shll
in
sti
ds
adc
cltd
testb
push
iret
fcmovnu
sbb
ret
jg
or
roll
insl
or
shr
jo
pop
in
or
int
adc
adc
into
mov
ja
add
adc
dec
xchg
out
inc
add
cmp
data16
cmp
or
mov
aad
das
std
int
out
add
aaa
mov
sbb
sar
jg
gs
out
pop
rcrl
xchg
rcll
into
mov
add
push
mov
cltd
addr16
mov
add
ret
popa
bound
imul
mov
sbb
scas
mov
dec
xchg
adc
dec
mov
pop
inc
sub
cmp
mov
jp
mov
pop
loope
pop
dec
mov
xchg
sbb
aas
into
out
lds
adc
jne
dec
and
sbb
fisubs
add
mov
stos
int
loopne
cmpl
xor
add
push
sub
shrl
add
scas
es
mov
lahf
mov
or
add
scas
scas
das
add
push
cmpsl
sbb
xor
sbb
adc
add
cmc
in
into
mov
stos
pop
xchg
rolb
dec
rcll
loopne
cwtl
fiadds
std
mov
lods
cmp
lret
cmc
fnstsw
ljmp
andps
add
jae
loopne
inc
sbb
pop
mov
int3
jns
sarl
add
cmp
push
out
push
push
add
aaa
aas
sti
cmp
add
es
inc
inc
add
mov
push
insl
and
cmp
and
or
xor
add
add
sbb
hlt
dec
loopne
data16
inc
add
xchg
fbstp
lret
int3
sbb
xchg
add
inc
add
sbb
test
ljmp
push
je
sub
ja
rol
add
push
jp
xor
and
hlt
in
dec
fidivrs
pop
iret
not
jmp
push
cmp
add
mov
mov
iret
push
jne
push
cmp
sub
mov
movb
push
add
shl
adc
push
jg
fimull
push
outsb
sbb
jbe
popa
mov
dec
icebp
cwtl
out
add
int3
loope
fs
add
or
nop
add
inc
add
and
es
add
sbb
xor
dec
or
add
mov
loopne
mov
add
aas
lods
sub
xchg
dec
push
push
pop
stc
xchg
inc
jl
inc
or
movsl
insb
nop
jmp
adc
push
xchg
jns
push
and
add
testb
shl
cli
clc
adc
sub
mov
cmp
add
pushf
pusha
add
add
and
add
insb
sub
push
push
aam
loop
dec
sbb
pop
pop
mov
nop
sbb
ja
sub
out
in
dec
jns
loopne
popa
inc
je
add
fcmovu
push
mov
enter
pop
sbb
inc
add
clc
shld
adc
rolb
add
add
add
jns
mov
mov
lea
push
pop
pusha
add
adc
inc
or
pop
xchg
mov
mov
pop
enter
or
add
and
dec
xor
aam
and
xor
lcall
xchg
in
jl
lahf
mov
scas
movb
sbb
repnz
add
add
stos
pop
iret
or
rcrb
xchg
add
push
dec
and
rclb
add
mov
adc
imulb
stos
shrl
mov
adc
add
testb
dec
hlt
aas
xlat
ljmp
cli
in
mov
adc
mov
addr16
and
pop
fwait
dec
mov
dec
lahf
or
inc
add
stos
lea
aaa
dec
add
fwait
sub
mov
popa
in
xchg
mov
xor
aaa
inc
sub
mov
xor
sahf
pop
sub
fistps
mov
add
inc
jp
push
add
add
stc
lods
push
cli
push
lcall
repnz
push
ret
pop
xor
adc
add
stos
mov
push
cmp
sbb
add
pop
ficoml
sub
mov
inc
xchg
mov
add
add
lret
jg
jns
ss
repnz
jp
cltd
pop
nop
mov
ret
sbb
xchg
add
sub
mov
sub
ja
add
popa
mov
or
daa
push
mov
jle
das
jge
loopne
shrb
push
testb
sub
sub
outsb
rolb
sub
mov
cltd
dec
imul
fisubrs
mov
inc
add
imul
les
daa
enter
dec
push
dec
jae
lcall
sahf
pop
or
mov
jo
pusha
add
fadds
xor
add
loope
or
adc
push
sbb
lock
push
fmull
lods
cmp
or
add
fprem1
sub
fcmove
sbb
data16
add
fsubrs
stos
shl
es
int
std
dec
mov
add
subl
mov
or
mov
pop
movsl
sub
jp
add
aas
std
cs
and
test
sub
mov
add
xor
add
xlat
mov
inc
mov
fiaddl
pop
sti
ljmp
clc
pop
addb
lcall
mov
dec
sub
mov
sub
enter
jle
lahf
adc
fnstcw
mov
xchg
inc
jne
ljmp
add
inc
mov
test
das
fstpl
rcr
les
ret
bound
and
add
cmp
cmc
in
mov
push
adc
or
xchg
xlat
inc
add
sahf
hlt
jo
out
std
pop
push
fldenv
mov
mov
out
add
pop
jge
in
xor
daa
xor
add
mov
sbb
in
pushl
add
sbb
test
add
and
divl
add
fs
scas
aaa
lcall
inc
ret
pop
cmpsl
xchg
sub
fnstsw
sahf
punpcklbw
push
movsl
push
pop
inc
xchg
lahf
jno
push
adc
mov
aad
addb
sbb
push
aaa
lret
xchg
repnz
or
cmpsb
pop
fistps
pop
movb
adc
dec
repz
cmp
int
repz
xchg
mov
or
inc
mov
xchg
and
push
push
add
jbe
cmp
push
add
loopne
insl
mov
test
sbb
scas
and
push
outsb
in
cmp
and
iret
mov
shll
adc
dec
mov
sub
arpl
pop
push
jo
mov
sbb
mov
dec
add
dec
dec
push
add
pop
or
jmp
pusha
add
push
fwait
addl
fisubrs
leave
jecxz
jbe
in
jno
ss
add
sub
jb
cmp
out
push
pop
aas
fnsave
add
and
and
mov
or
xor
aas
mov
idiv
push
sbb
rcl
sbb
add
or
bound
rolb
jge
addb
mov
outsl
aam
and
ljmp
mov
or
jg
rcll
js
gs
pushf
dec
ret
mov
jns
frstor
js
fs
mov
mov
out
je
add
mov
movb
test
sar
dec
aaa
sub
dec
cmc
jmp
add
outsl
out
sub
push
movb
in
adc
je
add
pop
aad
out
add
add
repz
aam
or
jb
dec
rcrl
add
pop
jo
add
push
push
add
lret
add
aad
lods
add
dec
mov
add
or
lahf
pop
movsl
mov
add
hlt
push
sub
push
leave
aaa
mov
mov
add
add
xor
jb
notb
add
imul
imul
mov
je
js
cmc
jmp
lds
mov
xor
mov
mov
add
jmp
add
adc
fdivs
pop
cmp
fidivrl
or
mov
out
xchg
cmp
xor
test
add
iret
sub
or
test
test
pushl
add
ret
ret
movb
add
cmp
cmp
mov
push
std
xchg
addb
addb
add
mov
mov
test
ja
push
mov
or
mov
xlat
push
inc
add
inc
aaa
xchg
pop
adc
xchg
jecxz
sub
xor
and
pop
lret
pop
imull
shll
lcall
fldenv
add
add
push
ja
hlt
addb
pop
mov
inc
call
sub
popf
add
cld
shr
and
add
add
pop
adc
pop
lcall
push
imul
fucom
mov
cld
mov
ficoms
jo
pusha
add
and
xor
test
fdivrl
sub
out
loopne
cmpsl
adc
push
js
inc
add
jns
pop
ret
scas
fdivrs
icebp
xor
mov
addr16
cmp
popa
or
aam
xor
push
sbb
imul
icebp
int
pop
out
jge
repz
jge
add
mov
cmp
xchg
pushf
mov
int3
ficompl
sti
and
mov
push
sbb
in
jle
mov
hlt
in
or
repnz
lock
inc
mov
scas
or
rorl
lret
rolb
jbe
cwtl
rorl
xorl
cmpsb
push
pop
xor
push
xor
mov
nop
data16
push
addr16
mov
cmp
and
idivb
xor
add
or
lock
das
out
int3
or
icebp
aam
adc
ss
fisttpl
push
add
fisubs
out
hlt
les
mov
leave
test
xor
sub
sub
enter
insb
insl
aad
ljmp
stos
jmp
and
pop
icebp
into
outsl
inc
nop
rorl
ror
ja
jae
sti
and
cmc
in
stos
and
sub
out
add
pop
jge
add
pop
fldt
jge
clc
mov
inc
add
push
std
dec
mov
repnz
or
and
aam
mov
sub
and
dec
jl
mov
pop
mov
cmp
imul
dec
mov
fwait
jo
rcll
fwait
out
fmull
add
mov
push
inc
add
cmp
es
out
xor
test
loope
mov
add
cltd
cld
addb
repz
test
sub
ret
jb
mov
test
add
pop
movb
jmp
fistpll
push
fldcw
add
mov
fsub
or
out
mov
jle
add
fsubl
add
sub
jbe
or
insb
pop
les
pxor
add
out
xor
push
add
add
les
sub
leave
adcl
add
and
push
lods
mov
out
push
add
mov
pop
cmpsb
daa
or
add
add
outsb
or
or
pop
addb
out
lret
sbb
add
cmc
into
mov
jl
inc
mov
movsb
cltd
xor
add
aam
test
inc
add
xchg
mov
inc
inc
jbe
ret
icebp
adc
add
add
inc
add
and
sti
push
pop
fisubrl
imul
int3
mov
fists
jnp
dec
loopne
dec
cs
popf
jnp
in
addb
test
lods
mov
test
call
pop
inc
add
mov
int
adc
repz
add
into
dec
test
mov
je
xlat
jne
xor
xor
lcall
pop
jbe
or
stos
dec
and
insl
cli
cmp
lods
lds
ret
xchg
mov
add
lods
pop
mov
movsl
repz
bound
sti
movb
js
arpl
adc
lds
outsl
test
sub
add
iret
cmpsl
mov
jge
or
cmp
adc
and
int3
adc
rolb
mov
cmp
or
mov
add
in
jo
iret
loopne
sub
lds
flds
out
out
mov
add
inc
cmp
ljmp
negb
sbb
dec
dec
adc
add
insb
mov
sahf
scas
inc
add
fidivs
jmp
lcall
dec
addb
add
lods
cmpsl
das
pusha
add
sub
add
xor
ljmp
inc
mov
xor
dec
and
adc
sbb
push
mov
mov
lcall
popf
cmp
add
push
or
add
or
bound
lret
rcrb
pop
jl
es
repnz
add
or
pop
xchg
push
pop
je
dec
js
inc
enter
mov
aam
xor
clc
sbb
mov
pop
aad
pusha
add
dec
push
iret
mov
jle
add
clc
or
imul
pop
xchg
aas
pop
shlb
ret
cmp
add
add
scas
adc
push
sbb
jne
add
mov
inc
sahf
xor
add
out
cli
inc
jecxz
jo
jge
mov
and
mov
and
pop
loope
jne
int
cmp
out
lods
adc
outsb
and
rolb
enter
cmp
ret
into
adc
mov
jbe
mov
scas
xor
add
dec
insl
lock
and
test
fildll
sbb
into
inc
add
pop
dec
sub
lcall
je
add
cld
mov
inc
add
push
setb
xor
cmp
add
nop
daa
mov
repz
mov
jo
popf
push
inc
add
gs
negl
jbe
dec
or
jbe
dec
xchg
sub
push
cmp
cmp
clc
jle
and
arpl
dec
gs
cmpsl
inc
add
enter
xchg
clc
repnz
iret
xchg
loopne
icebp
aam
push
add
mov
mov
push
mov
scas
mov
xchg
or
negb
sldt
and
aad
ret
aas
clc
push
xchg
jns
cs
pop
mov
mov
adc
adc
or
add
inc
add
addr16
repz
jnp
mov
xor
call
mov
or
hlt
je
arpl
xor
jg
sbb
aam
mov
addb
add
fnsave
scas
out
aam
rol
add
rolb
movsb
jg
pop
test
rolb
mov
and
pop
aaa
and
sbb
sahf
cs
xlat
push
imul
iret
inc
add
aam
xor
jle
add
scas
push
push
sub
cmp
ret
cli
cld
popf
aam
addr16
loopne
sbb
add
mov
inc
add
pop
das
nop
cmp
in
mov
jg
negb
div
sbb
mov
jb
in
push
sub
rcl
jno
addb
scas
shl
les
cmc
por
mov
mov
inc
add
mov
fsubrs
add
enter
xor
or
or
add
mov
pop
popa
or
pop
jo
int3
popa
and
or
adc
sahf
dec
xchg
and
push
scas
xchg
scas
sub
ficoml
push
fidivrl
pop
cmp
dec
mov
outsl
cmpsb
and
gs
add
sub
rolb
add
and
enter
push
and
dec
ret
ss
cmp
cmp
mov
inc
cwtl
push
cs
inc
add
mov
ss
add
inc
add
das
jmp
jp
popl
fidivs
add
addb
lods
mov
outsb
mov
mov
add
imul
cmp
orl
xlat
xchg
aas
push
mov
sub
add
push
adc
or
add
cmp
add
add
inc
add
add
inc
add
push
xchg
cmp
loop
adc
ljmp
mov
jp
cmp
add
xchg
mov
jle
push
fcmovb
jmp
pop
pop
or
in
pop
out
jmp
add
push
or
jp
das
cmpsb
jo
aad
in
popw
sub
and
lods
mov
xchg
cmc
cwtl
hlt
fnstenv
js
decl
push
aas
test
aam
mov
rorl
andl
adc
pop
les
lods
jbe
mov
stos
lcall
cwtl
movsb
push
aaa
jo
jg
incb
lock
std
mov
icebp
outsb
cli
xchg
pop
xchg
imul
test
push
and
test
inc
xlat
add
mov
mov
popa
loope
ret
mov
sahf
out
imul
lock
push
fisubl
push
dec
stc
clc
lods
inc
enter
cs
fidivs
push
rorl
lahf
jno
pop
rclb
mov
and
addr16
leave
into
imulb
add
mov
jg
add
out
pop
push
mov
adc
lds
jp
inc
int
adc
popf
mov
in
add
push
movb
xor
or
jmp
jns
add
hlt
dec
fsubrs
sub
iret
ret
xchg
sbb
ljmp
cmc
jnp
pop
gs
adc
pop
imul
shl
icebp
sahf
rcrl
sarl
add
xchg
mov
iret
dec
sub
mov
popl
add
mov
inc
idiv
jo
push
cmc
cmpl
add
out
push
add
lahf
add
lret
jmp
sub
das
push
add
into
fistps
jle
add
and
mov
stc
jne
ljmp
scas
js
mov
pop
add
cltd
stc
xor
stos
mov
jne
mov
int3
dec
mov
push
mov
or
or
add
adc
sbb
add
dec
jbe
add
jge
in
mov
sub
cmpsl
dec
addr16
inc
add
cld
cmp
xchg
inc
in
jge
pop
jp
add
adc
jae
test
add
xor
pop
mov
cmp
aam
shrl
adc
idivb
stos
aad
cmp
data16
mov
jl
and
adc
push
pop
jge
lods
in
add
sub
enter
jbe
rcrl
rolb
sbbl
addb
cmp
test
cs
jnp
outsb
int3
fsubrp
pop
cmc
std
lahf
or
and
stc
cmp
adc
insb
dec
and
faddp
add
add
mov
mov
out
lods
mov
bound
into
push
clc
hlt
shr
mov
pop
sub
inc
dec
daa
insl
cmc
emms
and
rorb
mov
scas
pop
in
loop
addr16
or
add
aam
es
xor
rclb
xchg
pop
jb
xor
pop
mov
jns
test
pop
pop
insb
lea
cmp
fst
aaa
sbb
ret
sub
dec
aaa
lock
jae
add
and
test
add
insb
sub
mov
cmp
les
add
inc
add
inc
aaa
sti
leave
ficoml
aam
stc
imul
pop
dec
lcall
add
add
es
push
add
mov
mov
add
xchg
cmc
popl
pushf
mov
shl
in
pop
call
setae
inc
fsubs
mov
inc
add
popf
ficoms
add
dec
dec
test
add
loope
push
cmpsl
xchg
fwait
mov
add
jg
popf
push
and
push
xlat
mov
nop
and
inc
test
clc
mov
rcrl
push
mov
push
dec
sub
enter
mov
xor
aas
je
imulb
mov
mov
and
add
stos
dec
jmp
popf
or
push
push
mull
cmp
inc
cmp
cs
aam
out
mov
mov
cltd
cmp
outsb
cmp
out
bswap
filds
rorb
sarl
cmp
lret
mov
cmp
stos
sarl
sbb
dec
adc
mov
mov
add
ret
jns
pop
mov
in
xchg
idivb
cmp
hlt
sub
pop
xchg
ljmp
and
pusha
add
add
add
jns
mov
add
jb
push
or
outsl
mov
dec
mov
add
pop
aaa
jo
add
ficoms
mov
push
jg
jo
add
xchg
and
hlt
xor
add
jne
add
xchg
mov
add
push
jo
and
add
icebp
sbb
adc
xchg
fwait
sbb
pop
adc
add
jns
pop
pop
jae
scas
sub
lds
dec
lret
loop
das
cmpsb
or
jle
push
mov
jge
imul
dec
into
fbld
clc
pop
in
arpl
scas
pop
and
inc
add
popa
jbe
mov
jno
pop
xor
fs
test
aaa
or
dec
pop
jne
insl
inc
push
mov
cli
xor
add
jmp
add
xor
fidivs
fbld
sub
notl
pop
cmp
sub
xlat
into
insl
mov
aam
jp
inc
dec
dec
dec
in
jo
xor
xor
add
pop
xchg
test
xor
cmp
cmp
les
xchg
in
out
movsl
mov
lcall
add
call
lods
adc
xor
call
mov
xor
push
cmp
repz
clc
out
xchg
xor
xchg
mov
fwait
mov
lret
sarl
lods
xchg
fildll
sub
or
mov
cmp
mov
insb
fst
add
pop
pop
inc
leave
addr16
out
jb
inc
pop
dec
mov
es
cmp
clc
mov
outsl
adc
lret
add
push
xchg
push
fbld
int
scas
fcomp
cmp
loop
ds
lahf
out
jns
lea
push
push
ljmp
rcll
movsl
and
test
bound
mov
mov
inc
test
sub
pop
sub
lret
xchg
call
lods
pop
call
push
xor
push
add
mov
stc
incb
bound
mov
add
push
mov
je
jbe
dec
mov
movsl
fsubs
xchg
jg,pt
xchg
jne
sub
faddl
cmp
push
mov
jg
addl
or
movsl
cli
add
repz
into
and
cmp
and
add
aaa
mov
pop
roll
popa
stos
leave
jns
or
into
popa
xchg
lods
scas
div
push
mov
enter
cmp
cmp
mov
xor
or
push
pushf
sbb
mov
in
ret
pushf
mov
or
ret
dec
daa
mov
add
aad
movsl
mov
mov
cwtl
push
out
cmp
fdivs
cwtl
loopnew
call
call
adc
vdivps
sub
cmpsb
xor
dec
cli
fsubl
pop
cli
xchg
jmp
jp
pop
add
lods
ljmp
jns
aad
ficoms
mull
addr16
sub
fwait
lret
bound
enter
or
test
outsb
nop
rcll
add
lahf
mov
fsubl
xor
sub
sbb
fldl
cltd
adc
xor
test
jbe
mov
es
xchg
stc
lods
jae
and
es
scas
xor
es
rorl
push
stc
cmovb
and
adc
and
cwtl
insb
cmp
rclb
xchg
push
rolb
sub
mov
and
adc
into
xor
sub
loope
mov
test
cwtl
mov
push
xchg
xchg
pmaddwd
jle
cltd
add
dec
sahf
sub
test
pop
popf
pop
or
push
dec
sub
test
push
mov
add
addr16
xlat
adc
loop
jno
sbb
fdivl
add
or
push
nop
test
jl
pop
imul
push
pop
ljmp
cmp
aaa
loop
out
or
cmp
test
mov
nop
addb
repnz
mov
pop
pop
stos
mov
dec
add
rcrl
or
pop
in
insl
movsl
iret
cmp
fwait
sub
xchg
mov
mov
push
pop
into
enter
add
mov
mov
ja
loop
inc
adc
ljmp
add
jle
dec
or
sbb
movsb
aaa
mov
add
add
add
outsb
test
int3
call
add
dec
mov
xchg
jnp
jle
add
in
cmp
jo
xor
pop
test
dec
mov
and
fcoml
nop
cmpsb
lods
shrl
add
lcall
aaa
pop
dec
mov
pop
inc
pop
mov
clc
mov
cwtl
add
sbb
iret
hlt
or
xchg
clc
cwtl
pop
fcomp
sbb
iret
imul
loop
jno
imul
nop
cld
rorl
pop
mov
inc
pop
mov
shlb
jne
ficomps
jecxz
mov
std
sub
xor
data16
ja
and
outsb
int3
dec
lea
mov
imul
and
push
adc
inc
add
dec
ret
mov
xor
jne
in
loopne
stos
jae
cs
fstpt
fsubrl
mov
xchg
bound
dec
les
fsubs
sub
mov
xchg
rcrl
xor
push
outsl
addl
sub
dec
xor
jmp
sti
xchg
enter
pop
inc
lcall
sub
call
and
adc
cmp
movsl
test
mov
add
addb
subl
cmp
pop
push
in
aam
aaa
push
in
push
shll
push
jge
mov
out
inc
add
jb
mov
cmp
clc
cwtl
loope
negb
ds
mov
xlat
xchg
adc
cld
jl
test
push
fcomip
mov
adc
xorl
jo
fiadds
inc
stos
mov
lret
iret
lea
icebp
pushf
int3
xchg
fisttps
dec
dec
arpl
rcr
push
int
inc
sub
sub
out
xchg
inc
add
mov
roll
mov
addb
sbb
imul
jmp
or
mov
mov
pop
and
inc
add
add
mov
lods
cmpsb
adc
xchg
and
mov
add
movsl
ss
test
dec
test
xchg
les
mov
sahf
sbb
add
pop
jb
mov
test
lds
lods
insb
push
inc
dec
mov
movsb
jo
cmp
out
xchg
aam
xor
icebp
add
jmp
mov
xor
dec
clc
aaa
sbb
dec
lea
dec
cmp
inc
lret
movsl
jns
daa
jns
pop
pop
enter
lds
mov
mov
xor
in
test
addr16
adc
or
add
cmp
mov
lods
mov
lret
xchg
xchg
shll
out
sbb
pusha
add
pusha
add
mov
push
xor
cmpsl
fwait
add
add
imulb
jmp
jno
in
inc
add
rcrl
outsb
sbb
mov
and
pop
cmpsb
jg
adc
mov
mov
mov
mov
mov
add
or
mov
jns
adc
cmp
push
iret
test
lods
pop
jle
aam
leave
jl
add
fmull
int
scas
jmp
add
jmp
xchg
inc
dec
push
push
adc
mov
idivl
leave
jmp
lret
fistps
and
cmpsb
clc
mov
lret
sbb
push
sub
dec
or
inc
sbb
push
les
jno
fidivrs
sbb
add
mov
inc
push
sahf
or
out
push
lahf
jecxz
out
xor
js
pop
mov
or
inc
add
push
mov
mov
les
adc
loope
sti
lods
xchg
out
movsl
push
add
mov
dec
jecxz
int3
and
push
cmovle
fistps
sub
and
loop
cs
and
aaa
mov
in
jo
stos
push
ljmp
pop
or
adc
push
movsl
negl
test
inc
add
add
lret
movb
pushf
ret
pusha
add
add
push
add
fmull
je
adc
lods
lret
add
int3
mov
mov
insb
in
jge
add
lods
addr16
fisubrs
jle
jo
popl
fndisi(8087
addb
bound
jle
sub
pushf
jle
lock
out
xchg
xchg
imul
inc
add
add
mov
out
push
mov
or
pushf
pop
rcr
bound
inc
rolb
addr16
cmp
xor
lea
pop
cmp
dec
sbb
mov
mov
adc
inc
cmp
lock
jl
jnp
pop
jmp
and
adc
fisttpl
adc
test
mov
aas
cltd
mov
test
jg
cltd
jbe
sbb
mov
mov
push
cmpl
sbb
pusha
add
adc
inc
ja
je
pop
push
cmpsl
or
add
popf
inc
cmp
add
pushf
pushf
mov
pop
pop
test
and
sti
sbbl
adc
test
in
add
cmp
push
pop
dec
and
scas
sbb
xchg
and
jecxz
in
lds
test
cmp
add
mov
xchg
or
sub
movsl
push
ds
sub
call
push
xchg
xchg
sbb
push
nop
cmpsl
adc
sub
jnp
add
xchg
faddl
push
add
incl
repz
mov
mov
sub
push
mov
mov
add
xchg
lods
ja
loop
xchg
cmp
idivl
aad
and
and
cltd
or
mov
stc
mov
xor
imul
sbb
mov
fs
in
pop
jnp
add
mov
lret
pusha
add
ja
add
add
aaa
sub
pop
outsb
stc
sub
fisubl
outsl
push
out
fs
aad
je
add
jae
cld
ret
aas
cmp
shl
arpl
add
mov
lds
jp
test
clc
jnp
sub
mov
and
popa
sbb
or
xchg
ja
add
lcall
mov
test
cmpl
push
push
mov
sbbl
lock
hlt
std
xchg
addb
adc
lea
sub
pop
or
sarl
xlat
leave
jo
cmp
and
mov
sub
fcompl
test
dec
loope
mov
or
xor
test
popl
or
sub
xchg
xor
pushl
outsb
push
xlat
mov
clc
in
mov
add
mov
loope
testl
ficompl
icebp
loopne
sub
outsl
lods
aam
dec
push
cmc
mov
mov
enter
jns
mov
lret
lea
popa
add
mov
xchg
inc
add
pop
adc
test
push
push
js
int
mov
movsl
jle
dec
mov
xor
dec
fsincos
cmpsb
or
mov
fs
pop
and
add
ljmp
insb
fyl2xp1
dec
mov
dec
inc
or
pop
mov
pop
adc
and
add
xchg
cmp
add
fwait
ss
xchg
mov
dec
idiv
call
mov
xlat
aam
mov
pop
sub
lret
sub
pop
in
arpl
xor
xchg
or
out
into
dec
add
dec
ret
jecxz
pop
pop
push
stc
jb
inc
jnp
xor
je
dec
lds
cmp
push
add
lcall
mov
add
out
mov
iret
cmp
cmpsl
push
and
test
into
cmp
pop
js
repz
xor
push
out
iret
push
sub
add
push
jl
sahf
xchg
pusha
add
add
jno
add
and
mov
cwtl
scas
scas
rcll
ljmp
cli
add
addl
add
loope
lret
or
addr16
or
add
add
add
sub
sub
daa
cld
add
xor
push
sti
icebp
push
stc
ret
xor
add
jg
mov
inc
sti
and
pop
pop
lea
pop
imul
add
sbb
lock
mov
jmp
mov
inc
pop
push
fstpl
add
mov
sbb
or
dec
test
mov
fdivs
addb
sbb
insb
jl
aaa
test
push
sbb
mov
cmp
in
mov
das
jnp
and
fninit
dec
popa
adc
fdivl
mov
dec
jl
sbb
data16
iret
test
loope
insb
mov
ret
xchg
and
inc
test
insb
pusha
add
mov
imul
repz
sbb
seta
je
xor
jnp
je
add
icebp
std
jp
dec
lea
cmc
push
aam
push
addl
fisttps
test
repnz
int
push
insb
xchg
push
push
pop
mov
mov
jae
add
xlat
daa
aas
adcl
add
dec
out
pushf
sahf
mov
or
push
test
push
sub
jbe
mov
ljmp
sti
xor
and
push
pop
popf
jg
movb
bound
loopne
add
sbb
jae
add
addb
push
mov
xor
and
lcall
stos
inc
add
fnstcw
enter
cmp
imul
xchg
addb
adc
mov
dec
dec
pop
jp
out
lret
push
repz
push
jb
pop
cs
jg
ja
jge
add
pusha
add
test
stos
leave
or
and
aad
or
mov
jmp
out
lods
sbb
push
aaa
and
add
test
rcl
sar
push
jle
insl
or
add
fsubrl
pop
cld
das
xor
add
and
and
cmp
mov
xchg
je
and
aaa
into
push
push
pusha
add
xor
add
xchg
or
fstpl
adc
fdivp
adc
movb
movhps
lahf
cld
outsb
mov
or
ds
add
movups
cld
cmp
cmpsl
adc
rolb
inc
push
cmp
std
xchg
inc
xor
add
mov
and
add
test
cli
lret
jnp
add
push
sarb
rorb
add
pop
jnp
sub
mov
and
loopne
sub
adc
sbb
lahf
mov
fisubrs
movb
mov
cmp
sbb
dec
xor
pusha
add
add
pop
push
ficoms
out
add
gs
jmp
call
out
fcmovb
push
cmp
jne
leave
xor
or
stos
jo
fstpt
pop
mov
cmp
lret
jo
adc
shlb
cld
clc
mov
adc
je
jnp
cmp
mov
sar
xchg
jae
or
pop
or
inc
adc
push
xchg
mov
sub
test
and
and
popf
sub
add
test
pop
add
or
out
add
shr
fstps
lret
jns
cli
dec
push
add
clc
fwait
mov
add
hlt
add
pop
data16
loopne
ds
mov
sbb
xchg
je
inc
push
add
jge
add
lea
int
dec
shrl
mov
sub
adc
sarl
inc
sub
adcl
xchg
ret
imul
call
test
call
loope
cli
pop
js
add
ja
mov
push
aaa
push
clc
jnp
insb
je
add
mov
or
lret
and
aaa
nop
push
mov
hlt
mov
add
mov
mov
mov
cmp
sub
pop
dec
out
sbb
stc
sub
pop
adc
or
or
xor
and
adc
call
and
jbe
dec
adc
inc
add
out
rolb
xchg
lahf
mov
add
sub
inc
sbb
fiaddl
ljmp
int
mov
add
inc
add
adc
sub
push
jp
xor
out
orl
push
jecxz
rolb
and
push
cltd
jge
add
cltd
bound
jb
es
stos
and
hlt
pop
jecxz
adc
cs
add
add
pop
lcall
add
shlb
pop
and
adc
sub
push
cmp
negl
add
ret
mov
lcall
mov
inc
add
or
pop
call
fdivl
in
add
jge
sub
mov
add
xor
cmp
outsb
push
cmc
or
loopne
and
pop
hlt
sti
push
into
enter
jmp
and
add
dec
cld
pop
scas
jge
fucomp
cwtl
adc
stos
sub
rolb
jne
add
xor
add
lea
cmp
std
add
xor
xchg
out
pop
add
xchg
mov
inc
add
dec
mov
cltd
sub
jl
cmp
cmpsl
lods
mov
out
repz
ficoms
nop
pop
ja
inc
inc
add
popf
mov
dec
pop
fstpt
push
std
and
cmpsl
addb
add
add
lock
dec
adc
repz
gs
lods
lds
insb
push
mov
add
or
jge
sub
jmp
lods
cmp
cmc
ljmp
clc
xchg
addb
jmp
inc
add
rorl
add
lock
jnp
lock
pop
cmp
xor
cmp
dec
in
loopne
cmp
jl
dec
fwait
ret
cmpsl
sub
orl
movsl
add
xchg
adc
mov
push
lret
outsl
pop
sbb
lcall
jbe
cmp
dec
jl
jbe
add
cs
inc
add
les
mov
jmp
mov
lahf
dec
pop
shrl
cmp
test
pop
pop
add
sbb
cmpsl
mov
mov
sub
dec
test
add
je
xchg
fs
addb
cmp
pop
fs
mov
push
std
pop
xchg
lods
sahf
lret
bound
mov
cmp
adc
and
jnp
test
mov
sub
es
lret
fs
jae
mov
testb
clc
imul
out
shrl
fldl
add
cmpsl
gs
xor
add
addb
lods
ficoms
decb
sahf
mov
shll
mov
lret
shll
sub
and
adc
addl
fadds
dec
add
decl
test
std
out
sbb
stos
leave
shrl
dec
pop
imul
imull
leave
testl
add
sbb
sbb
adcl
cwtl
pop
cmpsb
scas
stc
cwtl
dec
cwtl
mov
sbb
lock
movsl
in
push
push
leave
mov
xor
push
inc
rol
pop
and
repz
or
mov
jo
outsl
mov
mov
add
nop
xchg
and
jmp
add
pop
pop
pop
sti
pusha
add
filds
add
pop
inc
cld
sti
dec
mov
push
xlat
inc
add
std
and
xor
dec
xor
push
or
mov
jns
jl
or
push
sti
or
dec
mov
jge
push
icebp
hlt
shll
iret
pushf
and
adc
adc
add
fisubrs
aaa
mov
mull
sbb
loopne
add
loop
add
mov
mov
in
loop
cmp
je
mov
imull
int3
mov
xor
out
jno
cmpsb
hlt
xchg
aas
dec
es
ljmp
leave
arpl
data16
fnstenv
aaa
mov
sbbl
and
sub
fwait
xor
rcl
insl
repz
out
fistpll
arpl
popa
sub
imul
cmovnp
outsl
add
aam
inc
inc
ret
bswap
adc
inc
inc
add
adc
pop
pushf
clc
fcmovne
and
jmp
ja
vmread
pop
mov
stc
cmc
popa
popf
dec
faddl
add
in
mov
adc
movsl
dec
insl
cs
fnstenv
pop
or
adc
popf
mov
xchg
ret
pop
mov
je
adc
test
aad
cs
push
push
and
sbb
add
fsubr
mov
lods
mov
shl
pop
jge
push
sbb
filds
mov
push
les
dec
mov
push
jp
add
clc
xchg
clc
loop
out
add
stc
ljmp
loope
pop
sub
cmp
rolb
mov
add
in
into
pop
add
stc
stos
mov
jns
dec
leave
lret
mov
add
lcall
adc
jo
in
push
mov
jnp
cmp
add
cmp
push
movsb
out
cmp
stos
sbb
bound
imul
insl
je
mov
cmp
dec
xchg
lock
in
add
inc
and
aas
jg
hlt
mov
push
push
push
jl
sub
xorl
repz
negl
xchg
cmp
int3
rol
add
int
shrl
mov
cmp
fidivl
add
inc
add
mov
rcrl
ja
add
insl
lock
jo
xchg
cwtl
test
push
sub
pop
cld
and
lret
test
push
xchg
into
push
mov
mov
mov
test
sbb
scas
movb
adc
dec
pmulhuw
mov
aaa
lret
cmp
pop
int3
and
mov
add
or
mov
lret
ss
and
mov
xchg
call
loop
outsb
movb
lods
cmp
icebp
xchg
iret
lods
inc
add
add
fstl
rcll
sahf
mov
inc
add
adc
inc
xchg
adc
inc
add
or
ret
pop
jmp
jb
mov
xchg
xor
inc
fcompp
ss
add
mov
sbb
sub
jae
add
ds
add
mov
mov
mov
sahf
pop
out
aaa
xchg
mov
lahf
call
sarl
pop
mov
fistpll
pop
push
lds
sbb
stos
std
pop
fnstenv
addr16
subl
jnp
fwait
cmpsb
xor
add
add
add
fists
stos
jb
sbb
or
add
insb
les
xchg
add
rcll
popf
out
dec
cmc
pop
jp
xchg
pop
pop
in
add
xlat
fdiv
pop
or
imul
ret
popf
out
cmp
sahf
movsl
imul
nop
fs
inc
add
push
ss
call
imul
adc
or
jp
xor
icebp
pop
xor
movb
loop
in
mov
outsb
in
sub
lcall
add
pop
and
sub
add
andl
pop
pop
push
sbb
adc
add
data16
movups
push
lcall
sbb
push
sbb
sbb
fs
lahf
mov
mov
jle
inc
add
out
xchg
cmpsl
mov
cli
in
push
cmp
inc
mov
cli
fidivs
mov
ret
mov
add
jae
inc
add
rorl
movb
xor
add
rcpps
scas
jle
mov
mov
das
adc
les
mov
out
sbb
jb
inc
sbb
sub
adc
sub
inc
test
loopne
movsb
in
sarb
addb
sti
outsb
sbb
int3
cwtl
cmp
sarl
outsl
push
daa
lcall
jbe
pop
inc
mov
add
lahf
cmp
cmp
xlat
imul
inc
lods
inc
nop
mov
add
addl
cmpsb
popf
shr
push
pop
scas
daa
in
das
sbb
jb
dec
cmp
add
jg
or
mov
xor
pop
or
sbb
divb
lea
pop
adc
fsubrl
stos
add
imul
xor
cwtl
mov
repz
mov
ja
push
jge
pop
pop
push
add
scas
dec
daa
icebp
lea
cli
pop
dec
ds
lret
arpl
add
in
xor
in
out
inc
add
cs
inc
add
and
lret
aad
shll
std
outsb
fstps
repz
mul
sub
and
in
movsb
outsb
and
out
sbb
cld
neg
push
pop
add
cmp
mov
push
xor
std
dec
add
xchg
out
repnz
nop
and
sub
pop
stos
or
sbb
ret
mov
addb
cmp
and
add
jo
mov
add
mov
xlat
mov
fwait
shrl
negl
pop
push
xor
push
mov
and
leave
add
or
push
ja
xchg
mov
out
fcomps
and
push
mov
insb
lahf
cmp
imul
add
test
dec
fbstp
jl
add
das
sub
in
stos
inc
add
nop
rcrl
stc
icebp
cmpsl
dec
cmp
pop
scas
loopne
dec
sbb
test
sub
jmp
push
add
add
movsb
nop
xchg
movsl
out
add
lods
ja
xchg
out
push
hlt
bound
bound
sub
rcrl
xchg
ja
and
push
shll
inc
add
in
jg
and
repz
xchg
push
dec
adc
test
sbb
add
pop
xchg
pop
xchg
jp
scas
or
insb
movsl
inc
and
pop
stos
inc
add
ljmp
stos
xchg
and
ret
mov
into
or
int3
ret
sbb
mov
xor
add
stos
in
dec
mov
sbb
pop
mov
sub
in
or
add
add
rcrl
shrl
cmp
bnd
fcmove
in
push
fcoml
cmp
int
addb
gs
rolb
cmp
or
ds
aad
xchg
or
popf
mov
adc
adc
sbb
mov
dec
xor
por
scas
dec
adc
add
sbb
mov
dec
adc
mov
fs
movsl
ret
lods
xchg
test
sbb
iret
jo
repnz
xchg
mov
sbb
addb
push
nop
fmul
or
jnp
dec
lods
xchg
add
pusha
add
insb
aam
pop
daa
lods
push
inc
fdivrp
imul
aad
pop
outsb
pop
scas
pusha
add
mov
xor
sub
aam
mov
xchg
insb
mov
repz
cmp
mov
fwait
mov
addr16
inc
addb
int3
int
and
shrl
xchg
fadds
cli
icebp
sub
iret
aam
push
aaa
pop
shrl
and
das
mov
lds
fldcw
mov
push
popa
imul
scas
movlhps
hlt
addl
fwait
jp
add
ficoms
sub
and
mov
cmp
push
es
scas
mov
add
sbb
fldl
xchg
mov
cltd
test
adc
jp
in
pushf
mov
movhlps
dec
and
jnp
fcomi
mov
mov
and
dec
out
mov
add
add
popf
cmc
cltd
mov
test
mov
gs
mov
mov
push
lcall
add
mov
xchg
incl
inc
add
dec
xchg
xchg
push
jnp,pt
sbb
das
negl
xor
push
test
shll
jp
in
movb
test
movlhps
test
roll
and
out
adc
add
sbb
and
jl
add
addr16
popf
or
sar
sbb
mov
add
or
pop
out
das
adc
fldln2
fsubrl
repz
test
ss
xor
add
xchg
es
xchg
mov
je
add
or
add
mov
sbb
and
pop
xlat
adc
push
and
dec
in
sbb
mov
lods
add
adc
pushf
mov
loope
jmp
repz
aaa
mov
inc
out
outsl
jmp
icebp
inc
xorl
and
lcall
arpl
ret
sti
pop
mov
stos
popf
imull
dec
gs
and
leave
outsl
jae
or
xor
int
jecxz
sub
clc
lds
mov
jno
enter
xor
cmp
dec
jnp
and
mov
pop
jae
add
sbb
out
adcl
jo
ljmp
pop
aad
pop
lcall
jecxz
dec
or
mov
add
rorb
add
add
cli
mov
aam
add
insb
jns
lds
icebp
sahf
mov
add
adc
inc
dec
pop
or
stos
shlw
and
add
sbb
mov
adc
das
loope
ds
test
inc
test
dec
lahf
adc
cli
jge
add
xchg
je
rolb
roll
bswap
ljmp
add
pop
push
out
push
add
loop
add
jns
lcall
add
data16
mov
push
in
insb
roll
lods
outsl
bound
stos
fisttpll
gs
add
cmp
mov
add
hlt
mov
mov
pushf
cmpsl
jnp
shrl
push
push
inc
add
movsl
clc
mov
scas
es
sti
insb
jae
jmp
push
xor
push
outsl
add
sbb
imul
lock
push
lock
cmpsb
mov
xor
mov
push
mov
int3
lahf
scas
into
hlt
rcrl
add
xchg
lock
jmp
add
stos
cltd
outsb
pop
faddl
jl
dec
mov
hlt
pop
sbb
stc
cmp
pushf
xchg
adc
leave
lret
add
addb
sarb
pop
xor
aad
fldcw
add
inc
jae
and
add
nop
fscale
bound
les
pop
pop
xor
inc
add
movb
dec
add
jns
jns
mov
int3
adc
sbb
repz
lret
movl
push
ljmp
mov
mov
add
inc
add
in
jae
jb
mov
in
or
cld
xchg
mov
xchg
lea
add
in
and
cmp
sar
ret
int
les
leave
in
cmp
movsl
sub
sarl
add
jbe
dec
fidivs
sarl
gs
repnz
jns
aas
aas
test
sar
repnz
pop
xor
adc
sbb
std
sbb
dec
clc
add
lea
addr16
adc
mov
clc
lret
lods
rorl
std
addl
loop
sbb
mov
mov
fisubs
mov
inc
add
movsl
popa
cmpsl
fsts
pop
call
add
aad
addr16
arpl
sub
pushf
cs
arpl
es
xor
mov
cs
hlt
fcomps
cld
dec
mov
bound
push
aas
adc
je
cmp
jno
add
adc
cmp
pop
in
add
es
imul
sahf
mov
xchg
daa
pop
outsl
loope
xchg
scas
push
add
bound
inc
add
mov
mov
add
mov
sbb
gs
and
movl
mov
add
add
or
jns
imul
pop
sbb
imul
or
mov
xchg
out
int3
xlat
pop
and
jne
outsl
das
clc
sbb
scas
push
xchg
bound
loope
int3
out
or
and
add
dec
rorb
sub
cli
loopne
inc
xchg
push
jl
inc
add
enter
push
pop
outsl
add
pop
sbb
jne
outsl
inc
mov
lahf
lods
mov
fsubp
mov
cmp
loopne
pusha
add
cmc
adc
jbe
stos
inc
add
or
jns
scas
pop
sub
mov
rolb
sbb
aam
mov
sbb
add
lds
iret
and
push
insb
or
outsl
pop
mov
add
and
in
lock
mov
xor
xor
enter
pop
dec
das
jg
shll
cmc
shll
adc
shlb
fisubs
add
insl
adc
xor
mov
mov
mov
incb
add
jmp
fistpll
add
mov
jmp
fidivs
testl
je
out
daa
jno
add
dec
and
jl
xchg
mov
insl
cli
imul
pop
addr16
pop
mov
add
jl
push
addr16
and
roll
lods
enter
es
add
jno
add
addb
mov
into
std
push
outsb
cmpsl
addb
mov
cmp
imul
mov
push
lods
xor
jns
jmp
inc
xor
jmp
cmpsb
cmc
shll
xchg
inc
fldl
dec
pop
sahf
lahf
repz
dec
xchg
movsb
lods
iret
inc
and
dec
add
add
inc
pop
mov
lahf
push
adc
jle
add
dec
das
lea
jns
pop
dec
dec
pusha
add
add
dec
mov
ljmp
add
push
ret
js
jnp
loope
dec
fldl
or
sbb
push
xor
sahf
sbb
inc
mov
fildl
popa
xchg
jbe
sti
cmp
dec
arpl
cmp
fstps
mov
ret
add
cmpsb
test
add
jb
add
cs
mov
push
and
pop
loopne
jecxz
push
mov
std
sub
add
push
fisubs
push
sbb
iret
mov
stos
or
outsl
outsb
push
ljmp
pop
loopne
sub
mov
xchg
cwtl
shll
ss
push
ds
adc
add
add
cmpsb
das
adc
cmp
mov
add
ret
and
xchg
in
add
fwait
or
add
out
xor
movsb
mov
inc
add
dec
into
out
out
jo
sub
add
idivl
add
ficomps
out
movsl
insb
mov
sbb
lea
push
sub
push
adc
mov
cli
bound
iret
push
ss
push
adc
jo
mov
rolb
inc
add
je
lret
jg
std
into
loope
sbb
cmp
push
jecxz
into
mov
xor
mov
pop
sub
inc
dec
lods
aas
pusha
add
sub
mov
xchg
aam
mov
xor
lods
int3
enter
add
hlt
jae
add
xlat
in
and
jnp
xor
jecxz
sbb
add
mov
mov
inc
shl
or
jb
pop
xor
mov
cmp
inc
add
mov
and
pop
outsb
inc
add
test
mov
dec
push
pop
mov
jl
xchg
aad
testl
add
dec
sub
scas
and
mov
lds
mov
leave
sub
sbb
inc
add
ret
mov
pop
push
add
andl
inc
mov
cmp
add
push
inc
loop
add
movsb
cmp
shrb
shl
xlat
iret
test
sbb
adc
add
mov
mov
and
outsl
add
push
mov
add
mov
or
sti
xchg
pop
cmpsb
push
or
mov
jmp
iret
sbb
js
rorb
push
add
hlt
in
pushf
sub
xchg
cld
jle
bndldx
mov
out
gs
push
adc
es
add
bound
xchg
push
dec
mov
test
pop
and
xor
push
lea
mov
lea
cmp
dec
cmp
or
jmp
inc
cmpsl
mov
shlb
and
cs
stos
push
fsincos
mov
mov
jne
popa
or
add
xchg
mov
mov
jae
mov
repz
shll
mov
inc
cmpsb
aas
in
add
dec
fcmovu
lret
into
lods
cli
arpl
mov
sub
out
stos
cmp
mov
inc
mov
add
js
in
fidivrl
pushf
push
test
and
mov
loop
pop
insl
stos
scas
push
out
xor
add
add
loop
je
fnstenv
lret
add
test
jbe
xchg
jp
xchg
testl
aaa
lret
pop
pushf
dec
shl
cmp
outsb
shl
daa
or
dec
push
xor
sbb
lock
dec
inc
testl
mov
out
jg
js
fcmovnb
pop
mov
jns
in
insb
dec
test
xor
sub
add
outsb
sbb
jno
jecxz
mull
mov
or
fs
cmpsl
data16
imul
adc
jecxz
std
mov
cmp
sbb
inc
add
pop
mov
mov
inc
add
stc
dec
xor
pop
scas
jb
add
mov
add
inc
add
and
scas
mov
xchg
jnp
adc
xchg
mov
addb
xchg
or
aaa
inc
push
mov
and
pop
inc
add
fistl
addr16
mov
and
jns
add
mov
add
add
sbb
jne
sahf
fisttpll
dec
or
in
ljmp
push
rcrb
cwtl
jae
mov
xchg
mov
and
hlt
push
loope
fidivrs
cmpsl
sbb
adc
mov
add
cmp
jbe
push
jp
stc
pop
neg
fwait
adc
popf
mov
fstpt
adc
lret
loop
mov
sub
cltd
les
stos
rcrl
mov
pop
arpl
fcoml
sub
add
fildll
ja
fldt
jo
add
movb
push
add
into
jl
movsb
scas
cmp
rcl
mov
jbe
xor
jecxz
adc
cmp
adc
push
test
ss
inc
add
in
sub
jp
xlat
aad
outsl
outsb
pop
xor
add
aas
add
mov
inc
sbb
es
cmp
add
jp
jb
ja
push
add
jno
imul
je
add
aam
add
push
cmc
xchg
std
pop
cmp
add
pushf
gs
cmp
ja
icebp
fidivl
adc
negb
lea
and
lret
repnz
inc
add
add
cmp
call
pop
mov
pop
aam
add
ja
jp
add
and
inc
xchg
xchg
out
ret
icebp
iret
mov
cmp
bound
jle
push
add
sub
xchg
imul
mov
add
clc
mov
lret
or
mov
inc
xchg
jge
add
jb
or
jmp
lret
jge
cmp
fwait
add
cltd
dec
je
pusha
add
in
mov
inc
std
push
add
aad
or
je
xor
movsl
aaa
add
inc
add
jmp
xchg
insb
adc
push
xor
repnz
mov
add
add
xor
popf
mov
jecxz
add
pop
dec
sahf
lods
ret
xor
cli
loopne
pop
test
paddusw
into
pusha
add
negb
jecxz
add
jl
pop
and
pop
and
test
ret
insb
dec
in
fwait
nop
repnz
dec
dec
push
addb
xor
cmpsl
fisttpll
xor
mov
jge
add
jo
mov
mov
pop
lahf
ja
in
pop
in
adc
fstps
and
xchg
cmp
inc
fists
jnp
dec
sbb
pop
ret
fildl
fnstcw
adcl
test
dec
cmp
and
push
shlb
inc
shrb
dec
xchg
into
dec
ret
add
dec
mov
add
sbb
or
dec
cmp
add
lret
cltd
inc
add
mov
js
jae
xchg
inc
add
out
addb
cli
pop
cld
lret
mov
or
arpl
clc
push
clc
mov
stos
clc
mov
dec
mov
int3
mov
add
dec
inc
add
mov
mov
or
dec
rolb
inc
xchg
sbb
mov
ja
sbb
in
gs
inc
add
notb
hlt
rorl
outsl
imul
xor
mov
sub
test
mov
mov
pop
leave
addb
out
cmp
jmp
lahf
aas
or
jg
mov
addl
cmp
add
aam
outsl
cmpsb
rorl
hlt
les
pop
cltd
jbe
jmp
jae
jl
fistl
mov
mov
notl
push
das
jnp
out
add
shll
add
add
add
pusha
add
js
loop
add
das
mov
jmp
inc
add
add
dec
outsb
and
insb
ret
stos
std
xchg
push
mov
add
xchg
nop
push
sahf
mov
adc
out
add
pop
push
jo
add
inc
xchg
or
lods
sub
mov
push
imul
add
out
enter
clc
loop
imul
jmp
movsb
das
loope
inc
add
cmp
mov
push
mov
jmp
add
sbb
lods
icebp
or
out
into
sbb
push
pop
les
mov
mov
out
cld
sbb
mov
xlat
push
add
xlat
adc
pop
push
call
xchg
sbb
inc
add
add
sbb
addr16
test
add
cmc
stos
sub
xchg
xor
insb
and
xor
ds
lea
or
mov
inc
sahf
jnp
stc
push
mov
jp
mov
sbb
mov
fistpll
jne
cmc
shll
xchg
sub
popf
xchg
aad
add
mov
push
jp
mov
in
cmpsb
xor
sub
sbb
add
pop
out
or
jge
stos
ret
sub
cmp
push
jne
or
pop
sub
sahf
js
push
addr16
jg
push
pop
nop
mov
mov
add
aaa
into
leave
bound
adc
lcall
dec
out
pop
movsl
xor
pop
stc
mov
add
mov
add
dec
mov
aaa
insb
repnz
in
inc
add
test
cwtl
mov
mov
mov
mov
add
add
and
add
or
mov
jle
mov
int
xor
cmp
addb
xchg
push
mov
add
fildll
scas
jne
aam
pop
lret
pop
jae
arpl
push
jl
out
fs
scas
shlb
enter
and
addr16
jb
lcall
or
add
in
push
pop
fucom
inc
out
cmc
imul
add
stos
dec
cli
jns
in
jae
jle
cmp
cmp
push
mov
lods
xor
arpl
testb
stc
mov
push
mov
cs
inc
add
push
mov
add
das
fcomi
test
loope
push
les
jae
movsl
es
push
xchg
cmp
or
or
add
mov
dec
in
inc
inc
or
mov
lods
xchg
push
push
xchg
inc
add
out
movsl
fs
sbb
mov
ljmp
mov
cmp
mov
emms
fcoms
bswap
sbb
int
sub
shrl
es
fists
inc
into
repz
iret
and
in
in
pusha
add
mov
add
jg
sub
xchg
scas
pop
or
jp
dec
or
sbb
jp
in
xchg
cwtl
jbe
sahf
lods
mov
mov
push
pop
inc
adc
jno
stos
hlt
and
push
fimuls
pop
enter
add
movb
or
pop
test
xchg
stos
push
dec
out
insb
sbb
ja
adc
xlat
bound
and
add
adc
mov
fisttpl
ja
scas
clc
ret
jno
popa
js
cmp
adc
mov
inc
dec
scas
scas
imul
and
adc
imul
add
pop
movsb
dec
adc
pop
fwait
pop
mov
adc
enter
dec
cmpsl
mov
test
testb
mov
sub
lods
push
or
ljmp
out
adc
xchg
mov
bound
xchg
cmp
add
sahf
test
add
in
jecxz
mov
je
faddl
movsl
pop
push
dec
dec
mov
pop
je
push
or
sar
stos
push
mov
lds
ret
inc
fisubrs
out
enter
cltd
pop
xor
ret
mov
aas
mov
inc
add
jno
sub
fisubl
das
fildll
lret
adc
jle
inc
jbe
mov
cmpsb
or
cli
imul
add
lcall
enter
lods
sbb
movsb
cmp
xor
mov
movsl
stc
sub
mov
add
pushf
mov
add
push
inc
add
call
xchg
xlat
or
pop
and
sub
pop
out
shr
shll
nop
mov
shrl
xchg
jae
sti
les
sti
cmp
xchg
and
lahf
sbb
loop
sub
mov
popf
cmp
jno
cmp
adc
add
adc
and
or
and
sbb
add
add
jbe
and
popf
fsubrs
mov
adc
sbb
mov
mov
filds
xor
lcall
add
add
push
lret
sub
out
add
hlt
fdivrp
movb
add
out
mov
movb
out
push
pusha
add
stos
pop
sbb
test
xor
dec
push
loope
scas
push
fwait
movb
xlat
sbb
stos
movsb
ss
pushf
mov
inc
add
insl
add
lret
xor
add
adc
xchg
test
shlb
inc
add
push
xlat
pop
cltd
lods
sub
dec
pushf
sbb
push
inc
add
mov
out
insl
lahf
fwait
ds
movsl
or
rolb
and
inc
add
and
mov
xchg
sub
popa
lods
mov
loopne
mov
jbe
or
inc
add
add
add
sbb
mov
mov
add
icebp
fsubrs
shll
arpl
pusha
add
popa
mov
outsb
xchg
mov
divb
add
repnz
fidivl
leave
jns
sub
add
adcl
xor
stos
push
push
jmp
movsl
cmc
addb
sbb
pop
inc
sbb
and
pop
add
ret
cld
cmpsb
enter
mov
pushf
cmp
jge
xor
jo
shrl
mov
jno
mov
and
cmp
repnz
adc
enter
ds
lcall
mov
addr16
data16
jge
fbstp
sbb
mov
add
stos
and
push
push
jne
lret
jae
shlb
mov
cwtl
mov
mov
faddp
add
jb
mov
fistl
sahf
mov
scas
jmp
int3
in
xchg
std
popf
xchg
jbe
sbb
fidivl
cmp
shrb
mov
addr16
pop
mov
pusha
add
add
cmpsb
mov
add
xor
add
or
lahf
roll
sahf
cli
test
add
push
push
jns
xor
pop
mov
pop
or
mov
fcomip
jg
cmp
mov
out
outsb
in
test
sub
pop
fnstcw
pop
xchg
fcomps
dec
mov
and
xchg
jecxz
or
rolb
fcoms
inc
sbb
adc
in
sbb
add
jge
shrl
xchg
fwait
adc
adc
clc
cmpsl
and
sub
insb
popf
xchg
cltd
aaa
jp
in
mov
cmp
lret
and
fsts
cmpsb
xchg
into
cs
mov
faddl
mov
sti
ljmp
mov
add
bound
adcl
outsl
adc
xchg
push
pop
inc
add
clc
ljmp
jae
mov
out
ror
aad
ret
in
mov
pop
inc
adc
jae
sbb
mov
jae
popa
pop
xor
add
xchg
mov
lock
call
add
jle
add
mov
insl
sub
pop
lcall
inc
add
jb
test
add
mov
outsb
cld
ds
mov
sub
push
test
loopne
faddl
int
jns
les
loope
xor
cmp
ja
test
sbb
int3
stc
and
dec
cmp
cmc
adc
add
mov
stos
sub
xor
out
fstp
pop
cmp
mov
cltd
addr16
pop
sub
mov
cmp
xlat
insl
lahf
xchg
test
xchg
and
mov
outsb
or
add
jo
in
movsb
rolb
ret
enter
fxtract
punpckhdq
jnp
jmp
movb
sub
fdivs
pop
add
in
push
add
cmp
out
mov
in
loop
loop
fistl
add
xchg
jno
movb
cmpl
push
and
stos
sbb
stos
ljmp
pop
daa
scas
das
ljmp
mov
dec
and
or
imul
imul
add
sahf
aas
mov
mov
add
scas
pop
repz
fists
sub
shl
adc
jbe
and
xchg
addb
push
adc
test
push
mov
fcoms
popl
cs
cmp
cli
jno
cmp
int
sub
push
pop
mov
aas
sub
lret
xor
js
sbb
mov
loop
rolb
sub
cwtl
les
arpl
mov
mov
test
push
or
mov
daa
movb
int
add
leave
je
add
lods
lret
jbe
push
cmpsb
mov
loop
inc
add
add
jg
jae
es
add
shlb
or
fwait
pop
lods
nop
mov
sub
cmp
mov
push
test
push
cltd
lea
xor
fiadds
adc
stc
xchg
add
cld
mov
mov
cmp
inc
sub
xor
fucomip
popf
and
add
je
add
insl
lock
mov
dec
sbb
shr
les
dec
sub
movsl
es
jle
push
call
std
mov
add
sub
inc
adc
dec
mov
loope
jle
js
mov
mov
sbb
mov
xchg
mov
int3
addb
in
pop
into
sub
pop
les
shl
movb
movsb
movsl
xchg
stc
in
xor
jno
jl
inc
add
les
or
int
in
cli
push
addr16
and
xchg
jo
mov
push
jbe
call
jp
jg
ljmp
pop
pusha
add
movsb
ss
push
add
addb
ds
jecxz
lods
mov
shlb
push
cltd
out
push
imul
add
jmp
addb
imul
sub
das
cmp
cmp
je
push
sti
iret
or
rolb
pop
fidivrl
jecxz
mov
div
xchg
mov
outsb
cld
jno
push
gs
add
ja
dec
ds
dec
cmp
mov
mov
add
or
mov
add
dec
fcoml
dec
push
add
mov
mov
fwait
mov
aaa
lret
sbb
fcmovbe
std
pop
mov
fistl
roll
jne
mov
sar
sbb
dec
xchg
mov
add
pop
repnz
push
ror
movsl
rorl
in
test
stc
and
inc
add
cmp
add
adc
inc
add
pop
pop
inc
add
jmp
data16
sahf
enter
sub
out
jae
mov
loope
inc
add
jae
xor
dec
jle
out
popf
inc
pop
mov
xchg
stc
or
inc
xor
lcall
nop
xor
nop
lret
gs
scas
movsb
test
pop
mov
push
adc
sahf
popf
sub
cltd
aas
jno
icebp
stos
adc
out
rcrl
xchg
cmp
and
clc
aaa
movl
out
inc
jb
push
loope
sub
into
inc
add
loope
mov
and
out
dec
mov
fisubrs
mov
add
outsb
shrl
cmp
dec
xor
sar
cld
or
ljmp
xchg
sar
push
in
xor
pop
mov
add
cltd
ja
nop
xchg
roll
jecxz
mov
mov
fs
movsb
lods
xchg
outsb
jno
loop
jecxz
xor
add
addl
mov
out
xchg
mov
arpl
push
jnp
mov
add
movsb
sub
add
push
in
push
out
sahf
lods
ss
nop
xchg
les
adc
out
cmp
jae
and
mov
movsb
mov
add
mov
add
in
ret
mov
mov
dec
das
in
imul
xchg
shrb
sti
and
loope
cld
movsb
mov
add
add
sbb
cmp
pushf
repz
add
inc
add
jo
xor
inc
add
or
ljmp
jnp
inc
mov
add
dec
outsb
sarl
sbbl
add
rcrb
jne
add
mov
sti
inc
lahf
sbb
add
add
out
mov
loop
xchg
mov
cmc
mov
out
stos
mov
dec
mov
adc
mov
lcall
fstpt
push
js
rcl
popf
push
leave
inc
xchg
fdivp
xor
mov
nop
jg
pop
jno
jnp
fisttpll
sub
sti
lret
adc
jl
scas
into
mov
leave
scas
out
jbe
push
es
mov
stc
jae
bound
les
push
and
lds
push
cli
inc
add
add
add
out
stos
push
mov
stc
inc
add
addb
add
sbbl
stos
enter
inc
or
sarl
add
add
mov
cltd
daa
out
nopl
hlt
outsb
mov
bound
daa
xchg
adc
mov
cli
ss
mov
push
pop
xor
add
xor
add
add
je
shlb
out
sub
insl
cld
sbb
mov
add
lods
addl
jl
lock
lret
mov
dec
or
daa
jl
repz
cmp
mov
jg
adc
out
add
loopne
add
jmp
sub
sahf
pop
lock
add
rorl
das
test
dec
mov
or
and
mov
inc
jo
stc
jo
jno
dec
imul
sbb
popa
push
sub
jecxz
sbb
or
stos
cmp
in
filds
les
pop
mov
adc
out
or
cld
lret
fisttps
bound
fiaddl
mov
xchg
int
subl
add
out
add
fldl
and
cmc
pop
xchg
movsl
fucompp
aam
jle,pt
pop
test
push
sbb
movsl
inc
stc
jp
mov
hlt
loop
push
sub
sub
lods
repnz
add
cmp
in
int3
jl
mov
and
sbb
jbe
stos
cmpl
bound
movb
fidivl
pop
jns
pushf
mov
jge
call
or
outsb
mov
push
out
and
xor
mov
adc
rcll
stos
or
es
aam
lcall
sub
mov
in
test
shrl
mov
pusha
add
das
leave
or
into
data16
jle
mov
jbe
jg
adc
xchg
xor
cmc
cld
jae
mov
jae
xor
jbe
sbb
jp
adc
in
xchg
rorl
cltd
mov
movsb
xchg
rdmsr
xchg
psllq
mov
pop
divl
leave
cmp
jnp
jno
xchg
and
es
mov
push
cmc
outsb
popa
scas
int
add
push
rol
add
jge
push
test
add
mov
dec
fwait
push
xlat
push
outsl
xor
push
mov
push
jae
add
and
xchg
sbb
and
test
mov
push
call
add
add
icebp
xor
loope
cld
cltd
push
imul
pop
test
add
mov
lret
pop
lods
int3
lret
int
xlat
push
mov
data16
dec
icebp
sub
adc
mov
add
ja
mov
mov
lret
cmpsl
jmp
filds
mov
roll
xchg
aam
sbb
cmp
dec
call
cmp
clc
push
dec
dec
arpl
outsb
mov
mov
mov
fs
jbe
push
jg
mov
stos
or
push
and
lret
fistps
sbb
ret
cmpsl
dec
imul
enter
push
test
add
imul
in
aaa
insl
fstl
dec
rclb
mov
or
lock
sub
jl
mov
shr
pusha
add
repnz
lock
roll
shlb
jmp
aaa
in
insl
dec
mov
and
push
movb
call
jecxz
or
insl
lcall
pop
mov
xor
jp
das
xor
or
lea
movsb
outsb
hlt
out
cli
mov
test
cmc
add
sub
sahf
mov
pop
adc
jno
outsl
stos
jle
or
or
inc
loope
push
add
push
scas
xchg
fsubs
add
or
mov
in
inc
sbb
fmull
stos
cmpsb
rolb
bound
lods
add
xor
cltd
sbb
sbb
mov
pop
addb
pusha
add
adc
inc
and
cmp
mov
sub
sti
xchg
in
cltd
into
push
or
jno,pt
cli
pop
push
dec
pop
mov
inc
ficompl
or
scas
push
add
into
sbb
dec
movb
inc
add
lds
roll
mov
xor
insl
mov
or
loope
sub
fstps
pop
mov
inc
add
and
lods
out
sub
hlt
pop
or
jg
sbb
mov
jecxz
mov
sbb
aad
or
daa
hlt
jno
popa
cld
mov
mov
loop
jnp
push
aaa
stos
cli
out
add
cmpsb
dec
ljmp
mov
and
psubd
adc
push
jge
cmc
sub
shrl
push
rolb
dec
imul
adc
test
mov
adc
les
dec
inc
add
loope
lea
dec
cmpsl
sbb
xor
add
or
das
sbb
add
movsb
popa
popf
lock
sub
sbb
fnstsw
jnp
fldenv
dec
icebp
cmpsb
mov
mov
out
mov
arpl
insl
icebp
and
sub
push
push
dec
cmp
dec
jp
out
xchg
jecxz
daa
addb
add
lods
shrl
and
in
scas
hlt
imul
aaa
and
cmp
sub
in
mov
push
inc
add
stc
cmpsl
mov
repnz
pop
push
out
sbb
out
mov
std
std
mov
hlt
ret
dec
push
mov
pop
fildl
filds
jo
mov
loop
nop
test
ljmp
mov
sbb
xor
fidivrs
les
shr
push
adc
scas
popa
repz
xchg
xchg
push
leave
mov
xor
in
lock
lock
adc
leave
pop
das
and
divl
xorl
push
jne
adc
orl
ss
mov
imul
sub
div
xor
pushf
xchg
cwtl
cs
sbb
fdivrl
dec
mov
add
dec
sub
lahf
pop
or
mov
push
add
jp
or
mov
in
pop
je
push
iret
mov
push
push
fimull
and
mov
out
push
js
and
test
std
addr16
xchg
push
xchg
std
rcrb
sub
mov
insb
jbe
xchg
frstor
in
add
add
ret
adc
les
inc
lds
add
test
ror
lods
and
mov
push
add
fcmovb
xchg
xor
jne,pn
mov
push
mov
add
pop
pop
data16
jnp
repnz
scas
testl
sbb
push
push
jbe
addb
sub
stos
out
mov
addb
mov
adc
mov
mov
les
sub
xor
add
shll
adc
in
dec
adc
lahf
hlt
sbb
aas
cmp
dec
mov
xchg
mov
pop
and
adc
dec
into
push
sub
imul
xchg
xchg
pop
test
mov
cltd
mov
xor
pop
repz
mov
adc
mov
xor
fldcw
pop
in
mov
into
dec
inc
add
pusha
add
cmp
ds
mov
add
dec
les
flds
push
mov
