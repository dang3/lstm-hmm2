lret
sbb
dec
mov
sbbl
cs
fstps
add
mov
gs
imul
sahf
push
or
lcall
push
adc
push
jg
push
lcall
popa
out
sbb
pop
mov
or
and
pop
inc
add
xchg
mov
push
rolb
sbb
jns
daa
outsw
cmc
out
or
jno
jns
shrl
outsl
xor
popf
hlt
sub
add
rcll
adc
and
shr
cmpl
add
les
xchg
outsl
cmp
fists
adc
add
lahf
xor
scas
adc
xor
shlb
insl
je
cli
push
sbb
sbb
xlat
ficompl
gs
jae
nop
mov
rorl
ja
ljmp
add
out
mov
add
lods
cmp
xor
xor
fcmovnbe
insl
jecxz
aas
mov
icebp
jle
dec
mov
mov
add
into
add
pop
and
add
nop
in
mov
loope
sbb
scas
or
cmpsl
add
lock
out
add
inc
add
inc
in
movsb
fucomi
dec
aaa
pop
push
jecxz
push
test
cwtl
fsub
or
lahf
push
inc
jno
add
dec
add
sti
pop
call
dec
pop
fbld
add
aas
dec
push
pop
mov
dec
mov
sbb
mov
in
cwtl
cmp
ja
ret
sub
data16
mov
sti
xor
pop
jl
xchg
cli
or
add
out
add
jp
xor
rorl
movsb
mov
sbb
lods
fistpll
adc
stos
or
imul
and
inc
jl
addb
leave
aam
fs
mov
pushf
inc
add
imul
add
pop
data16
popf
jne
mov
inc
push
adc
fcmovnbe
dec
je
and
lock
ljmp
mov
adc
jo
negl
lahf
mov
jp
add
add
mov
scas
and
mov
fbstp
cmpsl
cli
xor
ljmp
loope
dec
movb
gs
arpl
lea
xor
pop
fwait
adc
pop
xchg
out
add
scas
or
or
inc
add
add
movsb
rorl
fbld
and
jg
sti
les
in
dec
outsb
inc
cmp
mov
call
mov
xchg
adc
or
cli
fidivrl
add
xor
clc
cs
push
hlt
sbb
add
rolb
sbb
mov
addl
adc
int
das
add
repnz
inc
add
pop
std
clc
imul
sahf
xchg
dec
cs
add
int3
and
pop
mov
in
iret
cmp
addb
loop
repnz
dec
int
insb
inc
add
fnstcw
xor
in
pop
stc
mov
jl
or
jae
addb
loop
or
add
xchg
mov
xchg
divl
out
lahf
or
lret
sub
sbb
rolb
js
aad
ficomps
jb
lcall
gs
addr16
out
adc
xor
add
mov
pushf
addb
gs
jl
add
jecxz
cltd
lcall
add
or
push
fld
jbe
popa
jae
addb
cmovl
sahf
cmpsb
stos
arpl
lahf
add
dec
pop
dec
mov
jmp
mov
cmp
int3
sbb
push
adc
sub
mov
ds
pop
pop
fcmovb
mov
xor
add
iret
rcrl
clc
adc
les
mov
adc
add
xlat
popa
jbe
add
sub
inc
jae
imul
imul
mov
inc
cs
test
xor
sbb
cs
outsb
addb
mov
nop
cmp
bound
inc
lods
jecxz
pop
in
push
cmove
cmpsb
cmp
mov
lds
or
sub
xchg
mov
pop
pushf
cmp
jb
mov
mov
lods
jmp
jns
arpl
jno
dec
inc
xchg
xor
and
std
mov
in
fcmovbe
cmp
clc
cwtl
pushw
and
cmpl
cmp
cwtl
xchg
lahf
push
sahf
ret
mov
pop
mov
mov
sbb
mov
push
movsl
lods
or
out
and
addb
lds
les
add
mov
and
lds
inc
add
test
push
lea
cmpsb
sub
in
xchg
add
sbb
pop
nop
xor
jne
xor
mov
sbb
addb
inc
clc
jb
add
add
cmpl
hlt
inc
jp
cmpsb
mull
sbb
enter
xor
cmp
mov
insl
push
xor
or
js
sbb
out
jb
cmp
mov
lahf
adc
cmc
inc
adc
rorl
push
inc
push
adc
orps
addb
dec
fisttpl
jg
add
movsl
jge
mov
push
les
cmp
in
out
popf
mov
roll
lds
testb
mov
cmp
scas
inc
add
add
jae
leave
push
pusha
add
push
mov
fmull
push
jmp
push
inc
add
jmp
push
gs
mov
and
sbb
jns
pop
and
dec
pop
ja
sbb
add
or
fisttps
in
sub
push
xorl
add
dec
cmpsb
mov
into
fisttps
sbb
inc
mov
data16
ror
movsb
mov
je
pop
lods
out
std
pop
cmp
mov
dec
inc
add
dec
hlt
lea
pop
hlt
inc
add
inc
xor
jmp
aam
dec
adc
cwtl
sbb
movb
dec
push
sbb
movsb
inc
fisubrl
mov
dec
sbb
movb
add
jnp
data16
pop
imul
push
sbb
daa
lret
bound
mov
popl
inc
adc
push
cwtl
xchg
fisttps
push
cmp
mov
int3
jecxz
add
adc
xchg
mov
mov
lods
xchg
cmpsb
bound
sub
inc
add
xor
add
mov
push
jp
push
push
mov
sub
push
push
push
cld
call
sub
mov
imul
es
ss
lea
push
push
push
call
cmp
je
es
lea
push
push
es
call
test
jne
jmp
icebp
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
lea
sub
repnz
mov
sub
mov
cs
push
push
lret
jmp
add
add
mov
test
movsl
push
fcmovne
xor
add
loopne
or
in
xchg
loope
lods
hlt
xchg
lret
and
cltd
xchg
and
shrl
fidivs
addr16
jbe
sub
fsts
cmc
mov
push
inc
sub
out
rolb
stc
rcrb
pop
push
jo
sbb
jne
lock
fdivs
in
ljmp
adc
add
add
xchg
push
and
push
mov
lods
loope
xor
loop
hlt
mov
jg
dec
jp
pop
or
mov
lods
mov
aaa
cmp
push
call
fnsave
fimuls
xchg
sbb
pop
fistpll
jmp
sub
add
inc
add
enter
sbb
mov
mov
in
push
ja
dec
fisubs
loopne
jo
mov
xchg
mov
cwtl
fcmovu
std
xchg
mov
mov
addr16
pop
dec
data16
jae
push
xor
add
data16
ja
adc
pusha
add
insl
scas
xchg
cmp
add
pop
mov
pop
aam
sbb
enter
fucomp
mov
add
add
or
add
leave
add
or
lret
es
add
jne
and
arpl
add
pop
xor
fidivrs
imul
rcr
addb
mov
in
dec
and
adc
addb
pusha
add
cmp
inc
fisubrs
pop
dec
sub
sbb
enter
nop
mov
or
push
or
add
repz
add
shrb
loope
xor
lds
dec
clc
inc
lock
lods
cmp
stos
push
popa
into
dec
sub
jns
jnp
xor
add
add
xor
or
data16
sahf
jmp
push
add
fistpl
fdivp
xchg
xor
mul
hlt
xchg
push
cmp
mov
add
xchg
pop
aaa
das
mov
sub
insb
clc
push
aas
or
add
adc
cmpsl
pop
inc
dec
addb
add
lret
ja
pop
les
mov
loop
jg
test
adc
fsubrs
cltd
xchg
enter
dec
or
sti
hlt
push
sbb
xchg
outsb
jg
cmpsl
insb
xchg
dec
mov
and
in
xor
xchg
sahf
jmp
adc
gs
inc
ficompl
jne
add
or
fcmovb
cmpsl
lock
jmp
add
inc
add
ficompl
addr16
cltd
mov
lock
or
sbb
fs
mov
movb
call
movb
fmull
xchg
adc
das
inc
xchg
mov
dec
add
out
inc
add
sbb
das
or
pop
jl
add
in
test
sub
xor
mov
inc
pushf
fwait
mov
fisttpl
nop
enter
addb
insl
pop
sbb
pop
pop
jns
push
mov
mov
mov
jmp
sti
data16
das
call
mov
in
add
adc
dec
lods
adc
xchg
sbb
orl
adc
sti
or
cld
movsb
mov
arpl
push
movsl
icebp
mov
and
call
add
mov
mov
dec
sbb
and
pop
sub
pop
sub
push
lcall
add
in
enter
or
aad
inc
pop
xchg
fisttpll
xor
stos
xor
inc
add
int
inc
add
or
add
ja
xlat
jae
jne
popf
ja
push
out
push
ljmp
test
mulps
jo
xchg
lods
popf
fmull
inc
or
dec
gs
stos
adc
stc
xor
xchg
mov
mov
add
adc
addb
mov
cld
pop
das
xor
pop
mov
cmp
ret
add
out
pop
adc
movsl
lea
add
cmpsb
stos
pushf
popl
les
lods
sub
adc
mov
call
imull
add
test
outsb
or
loop
add
or
addb
ja
or
fwait
in
lds
cmp
push
push
xor
addb
popf
jnp
jmp
addb
shrb
add
testb
add
das
fimuls
and
mov
or
fdecstp
xchg
pop
cmp
iret
sub
arpl
stos
rolb
std
icebp
into
stc
sbb
sub
ljmp
add
ljmp
mov
lahf
cmpsb
add
and
xchg
shll
enter
in
es
addr16
xchg
xchg
jmp
into
loopne
and
std
pushf
adc
repz
jno
ficoms
add
fs
jg
or
pop
je
bound
addr16
and
stos
lds
iret
xlat
aaa
fsubs
outsl
jbe
xchg
loopne
stc
mov
lea
jns
inc
aad
add
cli
dec
repz
or
movsb
sub
rolb
mov
or
or
mov
and
jecxz
xchg
xchg
or
sbb
adc
out
jmp
and
pop
imul
cmp
add
ds
xor
mov
push
adc
pop
and
test
xchg
stc
in
outsb
jnp
repz
call
inc
lret
and
in
mov
sub
mov
aam
repnz
mov
add
ss
mov
cld
jp
mov
mov
test
imul
pop
push
testb
subl
mov
cld
sub
add
js
inc
add
add
ret
gs
mov
xor
push
add
mov
mov
cli
mov
insb
add
push
bound
movsb
and
xor
or
mov
xchg
cmp
push
add
push
push
push
out
push
jmp
and
jne
daa
jmp
mov
fcompl
push
adc
les
sbb
sbb
mov
idivl
shr
pop
cwtl
rcll
fadd
out
push
loop
dec
xor
out
mov
movb
add
push
addb
decl
outsb
test
mov
pop
push
jp
add
test
clc
and
sahf
lods
arpl
lds
xor
inc
xor
and
add
sub
xchg
mov
xchg
push
mov
adc
sbb
rolb
add
test
dec
dec
in
push
jo
enter
cmp
lret
lods
pop
imul
sahf
mov
add
mov
mov
add
xchg
nop
in
add
xor
imul
stc
pop
jae
inc
pop
jb
loop
iret
inc
sub
ss
xchg
fstpl
pop
in
xchg
aad
xchg
aaa
jg
sbb
aam
and
in
dec
cwtl
test
jbe
lret
enter
xor
xchg
pop
daa
stos
and
stc
fisubrl
std
lods
test
ret
fidivl
push
mov
add
add
xor
int3
out
jmp
push
sbb
mov
sbb
scas
in
ljmp
out
add
aad
add
ja
fwait
aad
repz
mov
into
mov
sbbl
out
jl
inc
lock
iret
jl
sahf
lea
add
mov
add
sub
rolb
ret
cmp
lds
push
fucomi
jo
and
and
cs
push
fstpt
cmc
test
fiadds
mov
popa
mov
inc
add
add
add
fidivrl
aad
ret
cld
dec
push
ljmp
dec
movb
cli
cmp
aaa
movsb
sub
xor
mov
add
jns
dec
push
push
shrl
hlt
test
add
jle
add
clc
sbb
adc
inc
add
push
aad
add
stc
out
daa
jno
xlat
mov
cwtl
mov
xchg
pop
and
or
push
stc
sub
add
sahf
jge
lock
add
add
pop
xchg
mov
cmp
cmp
add
add
mov
sub
bound
les
ja
repz
or
add
push
add
mov
out
add
fldenv
sub
addb
mull
or
loop
inc
add
lock
lret
les
or
dec
fldcw
out
insl
jl
gs
add
fcmovnbe
sbb
sbbl
lods
mov
add
mov
pusha
add
jl
inc
add
inc
aas
ret
and
and
hlt
add
dec
mov
mov
add
fstpl
aam
add
push
out
cmc
sar
pop
iret
inc
add
decb
push
repz
xchg
xchg
pop
jecxz
movsl
add
gs
xor
addb
add
add
scas
scas
stos
pusha
add
add
outsl
xchg
push
orl
lds
mov
adc
add
pop
fidivrl
fistps
pop
shl
les
out
loopne
inc
stos
call
add
jp
mov
sbb
and
les
testb
jnp
xchg
fisttpl
jnp
add
les
jl
add
out
xlat
out
adc
test
js
mov
movsl
mov
mov
iret
cmc
push
pop
cwtl
adc
sbb
sub
scas
es
or
add
pop
jmp
mov
xor
jg
and
mov
mov
orl
push
stos
es
imul
or
std
dec
daa
cmp
add
frstor
out
ficoms
call
rolb
cltd
add
jnp
iret
and
xor
add
add
jge
int
mov
fdivrs
arpl
add
push
aad
jmp
aas
aad
movsl
or
add
xor
inc
rclb
push
and
lea
iret
jbe
xorl
in
pop
sarb
ja
and
gs
in
roll
mov
xchg
mulb
pop
jne
jl
mov
add
aad
pop
add
push
jmp
stos
data16
jge
and
add
stc
ss
or
add
ljmp
lods
popl
mov
stos
roll
jns
and
call
lock
xchg
mov
addb
aam
mov
das
popf
ljmp
jno
iret
notl
jl
test
or
add
mov
jo
fistpl
dec
adc
jle
cmpsb
pusha
add
inc
xor
test
sarl
xchg
leave
jle
arpl
cmpsl
movsb
mov
adc
jns
lds
repnz
icebp
or
scas
xlat
inc
add
mov
add
hlt
pop
push
jl,pt
mov
pop
fwait
or
inc
in
rcr
dec
lahf
mov
add
int
add
test
mov
jmp
std
mov
add
jmp
xor
add
ja
dec
test
outsb
cmp
test
inc
pop
push
mov
xor
jl
fs
jle
pop
add
popa
cld
iret
out
stc
imul
inc
shrl
add
fsubl
sub
xor
lahf
mov
test
mov
cli
adc
les
jecxz
jns
mov
mov
lahf
cwtl
push
mov
je
cmp
jle
mov
gs
xlat
popa
insb
dec
jecxz
fiaddl
jmp
push
sbb
lods
mov
aad
popa
inc
or
dec
xor
xchg
test
lcall
mov
jge
ja,pn
addr16
jns
lock
das
in
xchg
xchg
clc
pop
mov
leave
xor
push
mov
lcall
mov
add
xchg
cs
sbb
push
mov
dec
in
xchg
inc
add
cmp
pop
cmp
movsl
out
adc
lahf
aad
mov
jns
mov
add
inc
add
test
stc
sti
shll
lods
add
inc
inc
add
sti
adc
clc
and
dec
lret
adc
fdivrs
div
adc
repnz
jmp
pop
mov
addb
add
or
add
ja
addb
add
push
push
cmpsb
repnz
jmp
repz
aam
lcall
ret
pusha
add
pop
push
sbb
pop
or
add
repz
add
jb
movsl
fxch
sub
div
add
jae
dec
rcrl
loope
add
sbbl
and
jno
dec
xchg
in
mov
pop
int
xchg
out
push
adc
fisubrs
stos
aaa
loop
sub
sub
hlt
adc
sub
push
fdivrl
or
sub
adc
xor
mov
xor
pop
iret
fcmovbe
rcrl
push
bound
sti
sbb
loope
and
addb
xchg
flds
add
fwait
jmp
aaa
call
add
jg
jns
gs
ss
adc
jge
push
mov
inc
add
cwtl
sbb
add
mov
fxch
addb
add
cmpsb
out
lock
mov
sti
mov
mov
scas
loop
cmp
mov
xchg
arpl
scas
inc
jge
mov
lods
xor
adc
mov
rolb
dec
ljmp
mov
pop
cld
mov
in
hlt
ret
mov
and
cmpsb
out
and
dec
dec
sbb
fidivrs
adc
rcll
rorl
aad
loop
inc
int3
dec
addb
sbb
mulb
fcoms
push
xchg
or
xor
ret
and
loope
clc
mov
add
and
mov
push
xlat
test
outsl
inc
add
gs
jne
out
sbb
aaa
xchg
add
mov
pushf
test
cwtl
sbb
jge
add
in
fistpll
lret
sbb
mov
fwait
loope
ret
mov
jmp
ret
push
push
mov
std
jp
fbstp
movsb
push
mov
mov
add
fnstcw
sub
movb
aad
outsb
pop
loopne
mov
loop
test
sub
aam
lea
push
aas
dec
loop
inc
add
loop
add
jg
add
cmp
loopne
test
jmp
int3
pop
add
add
out
pop
gs
mov
add
ds
jge
pusha
add
mov
and
pop
jno
cmpsl
lret
je
add
add
loopne
jmp
inc
jecxz
int3
bound
shll
add
add
push
leave
mov
jae
cmpsl
mov
add
xchg
xor
xchg
mov
cs
and
imul
jb
add
ret
les
shll
enter
adc
gs
jge
or
adc
cmp
nop
adc
add
inc
add
test
adc
adc
add
andl
xchg
stos
repz
lock
imul
and
add
lds
movb
pop
insl
pop
adcl
mov
mov
out
dec
imul
add
pop
dec
test
add
add
add
pop
sub
jl
inc
mov
inc
add
addb
jl
dec
xor
add
inc
xchg
bound
xchg
out
sbb
movsl
mov
or
mov
out
icebp
testb
movsb
fsubr
sub
add
push
fidivs
out
sti
pop
add
mov
fldl
insl
or
nop
xchg
xor
jge
and
flds
inc
add
or
mov
inc
add
or
xor
into
push
je
hlt
push
xchg
sbb
cli
fsubrl
insb
sub
dec
mov
inc
addr16
icebp
xchg
dec
pop
push
test
movb
mov
ret
cmc
pusha
add
call
jg
fsubl
add
jg
lds
add
xchg
dec
mov
outsl
xchg
xor
sbb
in
movb
cmp
and
movsl
sbb
or
cs
ljmp
in
leave
pop
and
pop
xor
mov
or
cld
inc
mov
punpckhbw
add
in
sub
push
repnz
lock
add
lock
jb
addb
pop
inc
add
fmul
mov
add
and
add
xor
imul
mov
pushf
push
sbb
add
xor
daa
fnstcw
movb
jno
sarb
add
push
add
inc
add
dec
add
lock
dec
movb
loope
movb
pop
and
xor
add
cmc
fildll
mov
enter
repnz
hlt
sub
cmpsl
imul
sbb
inc
add
testl
popl
stc
xor
mov
mov
cmp
add
outsl
jo
or
dec
push
xor
das
jbe
popf
das
jge
mov
and
frstor
cld
ret
cmp
arpl
add
xor
pop
mov
fldenv
sub
jae
into
push
jg
mov
xor
add
sbb
popa
clc
push
xchg
in
push
aam
lahf
xchg
aaa
mov
arpl
jno
outsl
test
add
inc
add
sub
dec
inc
jmp
addb
fcmove
xor
iret
push
lahf
mov
ss
sarb
add
jnp
add
add
arpl
add
aam
mov
push
ficoml
mov
mov
inc
ret
int3
inc
add
fcmovnbe
jns
cmc
mov
xchg
rcll
or
sarl
pop
cld
lods
lret
arpl
mov
add
jbe
into
mov
lret
jns
add
xor
fisubrl
out
fcom
or
mov
add
mov
idivb
mov
sbb
push
insl
mov
cmp
add
inc
jns
sbb
cmovbe
xor
adc
das
inc
add
push
shlb
jg
mov
or
mov
sub
dec
or
inc
into
pop
div
cmp
add
jns
mov
xchg
jnp
dec
cmp
ficoml
and
jmp
orl
sub
mov
xchg
jecxz
adc
lods
test
add
xchg
add
std
mov
or
dec
push
xor
xchg
push
movsb
pop
or
test
pop
in
cmc
mov
into
xlat
out
jp
in
movb
dec
push
imul
lds
cmp
scas
jmp
mov
dec
and
mov
sub
test
inc
in
shrl
lds
pusha
add
and
pop
stos
push
fistpl
lret
mov
push
rorl
lds
jae
add
push
sahf
cmp
rolb
jb
fcoml
adc
xchg
lret
and
test
pop
jnp
lods
adc
jecxz
jge
add
scas
cli
cs
xchg
push
popf
add
pop
scas
clc
loopne
mov
add
in
push
jae
sbb
aam
cmp
lea
adc
cltd
mov
adc
addb
jb
adc
cltd
clc
add
mov
mov
lds
out
pusha
add
dec
add
mov
jbe
push
add
add
mov
sbb
push
mov
mov
add
push
in
ljmp
push
add
mov
or
loope
add
fnstenv
mov
add
and
cltd
push
inc
add
andl
es
mov
xor
jecxz
sahf
into
pop
icebp
in
dec
push
add
pushl
add
int
les
mov
test
xor
or
testb
das
fmuls
add
ss
pusha
add
fld
add
sbb
pcmpeqd
out
and
cli
pop
dec
xor
pop
out
mov
imul
mov
js
arpl
push
cmp
jmp
cmc
les
cmp
cld
pop
in
add
add
outsl
add
or
and
ret
sbb
mov
bound
xor
cltd
sub
rcrl
mov
addb
ss
add
fsubrs
sbb
in
pop
xchg
out
inc
add
cmp
icebp
pushf
sbb
in
loop
arpl
dec
int3
pop
lock
fsub
pushf
pop
lret
repnz
inc
add
push
loop
add
movsl
pop
sub
inc
add
lods
cmp
lret
fs
pop
push
icebp
fists
aas
and
xor
push
call
rol
add
sbb
add
xor
adc
test
push
mov
pop
dec
cmpsb
dec
sub
das
pop
shrb
xchg
lret
repnz
out
test
jns
add
lods
ja
jl
add
out
push
xchg
data16
popf
xor
mov
psrlq
out
or
add
cwtl
adc
inc
add
jmp
stos
add
es
scas
sub
add
add
stc
aas
std
in
cmpsl
dec
add
mov
dec
mov
aam
cwtl
outsb
or
stos
inc
add
cltd
repz
fisubrl
mov
rorb
push
popa
mov
mov
cld
cmpsl
sub
xlat
add
es
mov
cmp
andl
lea
pop
sbb
imul
add
aas
jg
add
scas
aaa
xlat
xchg
outsl
or
and
sti
push
xchg
push
mov
jge
add
dec
jecxz
mov
bound
and
rolb
int3
inc
add
rolb
mov
jo
lds
cmp
mov
test
loope
or
add
test
lds
add
outsb
cltd
pop
cmp
outsl
xor
mov
or
dec
mov
jl
mov
rolb
and
push
inc
add
mov
into
or
ja
jno
xor
mov
add
pop
xor
out
sbb
mov
jns
add
popf
rolb
rolb
xchg
pop
movsb
push
inc
pop
mov
shrb
scas
push
popa
scas
loop
aad
jb
or
add
add
les
pop
aas
cmp
add
and
loop
jb
xor
call
jmp
pop
sub
or
xor
push
push
add
xchg
lret
clc
sub
push
lcall
jge
lahf
adc
add
jb
add
add
add
or
pop
hlt
pop
jecxz
stc
bnd
pushf
lret
jno
data16
xchg
cmp
aam
and
out
das
out
sbb
ljmp
add
xchg
sbb
rolb
cmpsl
jmp
paddusb
push
mov
mov
pop
and
xor
inc
lcall
das
cmpl
into
mov
test
xchg
xchg
cmp
adc
popa
cli
data16
fdivrs
test
lods
fcomip
clc
scas
fdivrl
insb
lahf
rcrl
add
mov
das
jne
jno
jne
cmp
xchg
cli
test
leave
sub
in
add
repz
and
pusha
add
and
aam
das
nop
cmc
mov
or
push
test
pop
mov
sub
and
out
dec
mov
outsl
dec
loopne
lret
shl
mov
sti
jmp
addb
add
mov
add
pop
mov
or
adc
jnp
loope
clc
pushf
js
mov
sub
jmp
pop
mov
in
loope
call
push
rol
sub
mov
or
push
jle
cli
or
ret
adc
or
inc
ret
mov
rcr
sub
mov
sbb
cli
xlat
dec
rcrl
sbb
ja
aas
nop
cmp
sbb
fs
jle
loope
push
ficompl
mov
mov
idivb
xchg
call
jb
xlat
mov
add
mov
sub
les
xchg
fdivr
stos
paddusw
mov
loopne
add
add
pushf
inc
add
movb
add
jle
xor
shl
add
push
push
lret
and
les
imul
addb
lcall
or
add
fucom
mov
jge
cli
lods
in
xor
sub
loop
test
addr16
mov
test
inc
loopne
xor
movsb
sub
std
sub
and
shrl
fnsave
sub
repnz
scas
mov
add
adc
pop
arpl
lahf
inc
mov
cli
and
and
sub
add
mov
and
inc
add
rcll
xchg
jg
sbbl
or
mov
insb
fldl
jp
and
out
iret
fmull
or
imulb
xchg
pop
xor
ljmp
add
xchg
stc
mov
adc
les
lret
inc
add
mov
dec
add
or
add
inc
lret
ss
cmp
and
jmp
add
ficoms
and
sti
data16
in
loopne
outsb
movsl
aaa
mov
xchg
insb
cmp
pushf
sbb
push
sbb
dec
aaa
add
in
mov
xor
cwtl
mov
and
ljmp
int3
xchg
int
jb
sub
sbb
mov
cmpsb
loope
jle
in
cmp
cmp
mov
adc
cmp
imul
mov
cmp
addb
icebp
mov
loope
popf
adc
ret
leave
adc
cmc
push
rorl
stos
aaa
addb
xchg
test
add
bound
shl
aam
in
cwtl
das
dec
pop
call
inc
xchg
mov
sbb
dec
es
out
rcrl
insl
mov
add
mov
add
or
cmpsl
cld
and
loope
sahf
jbe
shlb
hlt
mov
call
add
cmp
pop
mov
add
add
fdivp
dec
xchg
shrl
sbb
popa
and
jns
jge
sub
or
add
outsb
add
fwait
insl
xlat
pop
xor
pusha
add
stos
cmp
imul
add
push
jg
lock
stos
add
mov
pop
or
xchg
jecxz
sub
stos
adcl
mov
pushf
add
adc
cli
jb
add
xor
mov
test
int3
rcrl
xchg
pop
int
push
lcall
mov
push
je
mov
jns
sarb
scas
jne
cmp
add
xor
mov
scas
xchg
lock
jbe
and
cmp
mov
jae
add
mov
push
sbb
movsb
jl
adc
fwait
inc
add
in
pop
inc
add
add
das
mov
pop
fwait
and
lcall
clc
iretw
adcl
mov
in
scas
lods
mov
dec
addb
xor
mov
rclb
add
sbb
mov
in
push
add
aas
fdivrs
jge
rolb
pop
mov
xchg
dec
aas
ficoml
push
add
pop
out
jno
pusha
add
outsb
mov
add
aaa
xchg
mov
jmp
mov
xor
add
mov
add
inc
testl
in
sub
xor
movsb
pop
xchg
mov
dec
call
sbb
rorb
dec
push
fwait
shl
and
and
add
test
cmp
inc
add
stos
or
xchg
adc
cwtl
inc
mov
out
xor
jp
xchg
icebp
loop
add
add
lock
jp
icebp
sub
or
mov
fdivs
dec
or
add
cmp
mov
add
sub
jmp
clc
sbb
sbbl
pop
ds
add
push
rolb
out
sbb
add
pop
mov
mov
orl
cmp
add
rolb
test
jl
adc
jg
sbb
test
add
stc
add
sbb
push
ja
push
adc
mov
add
lods
pop
inc
clc
sub
xchg
jecxz
aas
int3
push
movb
adc
out
jg
add
cmp
xchg
cmp
jae
mov
mov
pop
push
dec
movl
mov
cltd
or
stos
addb
inc
jae
repnz
lcall
stos
gs
movsl
sti
mov
imulb
sbb
movsb
or
xchg
aad
or
out
movb
hlt
xor
sub
and
dec
xchg
cld
je
xchg
sbb
push
js
dec
clc
dec
mov
arpl
rorb
push
sahf
adc
iret
outsl
jns
ljmp
outsl
pop
fildl
jo
jg
add
jb
nop
fidivrl
sbb
mov
jo
jle
inc
add
lcall
or
push
sbb
sti
pop
cmpsb
cmp
loopne
dec
and
das
fwait
jbe
stos
out
or
rcll
add
fisubl
shrl
jg
test
add
stc
adc
ficoml
movsl
out
mov
inc
add
je
add
and
iret
bound
and
pop
pop
sahf
and
mov
cmpsl
xchg
xchg
mov
shll
cltd
inc
add
sbb
fdivs
pop
jb
add
mov
xchg
or
cmp
jle
jno
call
test
mov
mov
lcall
sbb
jecxz
add
psubd
add
sub
ss
cmp
daa
sbb
pop
addl
mov
loop
sbb
cltd
cmpsb
nop
fsub
inc
mov
jmp
ror
add
mov
es
stc
mov
int
pop
adc
adc
ljmp
bound
fcomps
test
std
mov
inc
add
fucom
or
mov
mov
add
add
push
dec
mov
addr16
sbb
cmp
pusha
add
mov
mov
mov
shr
cmp
cmp
adc
add
test
mov
pop
and
pop
mov
add
add
adc
mov
add
dec
outsb
shll
mov
aam
out
cmp
scas
or
sahf
pop
fcomps
fs
push
add
in
aas
sub
cld
aaa
rcrl
add
adc
add
sbb
mov
sbb
xor
add
stos
or
cmpsl
dec
enter
sbb
out
cmp
outsb
sub
add
stos
jl
xor
xchg
lea
and
lahf
push
movb
popa
movsb
mov
add
popf
or
lret
mov
cltd
sbb
test
mov
jnp
imul
adc
test
push
mov
xchg
insl
xchg
sub
fwait
xchg
add
dec
in
stos
mov
sarl
xchg
or
fwait
or
jp
add
jl
xor
sbb
bswap
jne
sub
jbe
and
xchg
clc
data16
cmovbe
jmp
rcr
push
or
int3
mov
cmc
xlat
les
jle
add
jmp
dec
cwtl
xor
fiaddl
add
xchg
mov
jg
aam
cmpsb
je
add
sbb
fistps
lods
ficoml
cmp
int3
xor
inc
leave
xor
push
lods
xchg
jno
xor
je
lahf
mov
sbb
xchg
dec
out
movb
movsb
mov
out
add
ss
addb
lock
xchg
rolb
mov
test
xor
xchg
rolb
add
inc
shlb
or
or
inc
jo
mov
movsb
sarl
pop
cmp
flds
int3
out
jne
mov
cmp
subl
pop
jno
or
add
pop
cmp
add
jg
or
mov
jnp
fimull
push
ret
psubb
add
aaa
lret
adc
fidivl
dec
xor
push
out
pusha
add
push
repz
pop
jns
pushf
repz
mov
out
in
fcomp
fnstsw
mov
inc
hlt
xchg
aam
and
cmp
cs
cs
jmp
push
and
xchg
test
fbstp
and
fwait
mov
outsl
jae
and
jg
roll
pop
sbb
cmpsb
or
push
dec
dec
scas
mov
lcall
repz
lea
jmp
and
jno
mov
add
and
cmp
add
mov
lods
inc
add
adc
into
inc
add
shll
repnz
pop
cwtl
fcom
pop
cmp
and
fmuls
sbbl
mov
pop
orl
cltd
outsb
test
add
cmpsl
ss
addb
inc
test
lcall
add
push
push
jecxz
jmp
sub
or
mov
xchg
into
dec
dec
cwtl
sub
pop
cltd
sahf
xchg
xor
out
xchg
into
xor
sti
jo
jbe
fldl2t
sbbl
add
push
mov
shrl
and
dec
cmp
dec
cmp
lods
jge
rcll
popa
xor
push
mov
cmp
inc
push
out
inc
adc
sub
aas
int
or
lahf
mov
js
push
jge
push
arpl
std
fimull
dec
push
push
xchg
add
adc
sbb
xchg
in
scas
mov
stos
xorl
add
add
loope
shrl
cmp
cli
data16
push
outsb
fdivrl
cmp
lret
aam
repz
fwait
addb
jge
lds
out
pop
fidivrs
iret
sbb
pop
mov
cmp
dec
rolb
pop
sete
lret
test
loopne
ret
test
jno
push
add
sub
jmp
add
inc
add
popf
jns
out
jno
cmp
or
mov
and
std
jle
movsb
inc
addb
jnp
sub
icebp
rolb
sbb
fimuls
stos
mov
out
scas
add
jle
pop
push
inc
add
sub
clc
imul
imul
lret
sub
ljmp
cmc
mov
sbb
call
xchg
xchg
dec
lods
aad
sbb
mov
imul
cmp
push
out
iret
imul
adc
push
pop
adc
sidtl
adc
push
imul
xor
fs
sbbl
dec
or
sub
pop
fsubp
or
jle
inc
add
adc
and
push
add
add
pop
sbbl
rolb
pop
jge
jg
lock
adcl
xor
pop
mov
dec
test
add
add
pop
jns
enter
sbb
insb
push
jo
pop
cwtl
xchg
inc
add
movl
out
fs
mov
scas
sbb
add
fistps
movb
sub
push
test
loopne
in
les
jb
inc
test
cmc
xor
stos
mov
add
or
sti
addl
push
mov
jae
mov
mov
ss
jb
mov
mov
dec
ja
insl
sub
lds
xchg
sbb
jp
cmpsb
push
pop
adc
or
pop
add
or
jae
add
mov
fists
cwtl
lahf
jns
sti
mov
push
std
les
jge
add
cmp
cld
leave
sub
add
lds
repz
les
in
dec
adc
inc
add
dec
idivb
movsl
mov
insb
add
add
mov
imull
sbb
rcr
sbb
and
sti
cwtl
jmp
and
call
pop
xor
popf
xchg
mov
fs
jmp
popf
add
cli
inc
add
sbb
inc
cmp
sub
fmuls
inc
inc
add
xor
mov
pushf
push
add
fs
xchg
stos
fidivrl
mov
inc
add
adc
aam
mov
imul
sti
sbb
imul
adc
pop
popa
lret
xchg
xor
daa
jp
aam
jp
add
add
fisttpll
out
scas
cwtl
pop
scas
sub
sub
pop
dec
inc
add
pop
leave
dec
pop
dec
xlat
arpl
aaa
call
jb
jnp
dec
iret
jp
add
mov
push
mov
les
das
sub
sbb
sub
lret
cmp
into
in
imull
add
jecxz
sarl
add
mov
push
mov
cmp
enter
add
cs
add
ret
mov
mov
add
sahf
xchg
and
mov
adc
add
jb
sti
sahf
shll
wbinvd
loope
fidivl
call
mov
ret
fiadds
mov
int
idivl
mov
movsl
sub
insl
xor
inc
push
bound
push
test
mov
fists
add
add
sarl
sbb
sbb
int
cmp
add
hlt
mov
or
jmp
fistl
out
push
out
stos
stc
mov
lea
shll
out
xchg
jns
push
pop
repnz
test
jecxz
fdivl
lds
shll
mov
sub
jge
add
xchg
mov
cltd
int3
dec
in
dec
imul
xor
imul
js
mov
mov
jb
or
add
dec
lods
das
cmpl
movsl
mov
movsb
mov
or
ror
add
das
push
das
cltd
ret
cwtl
mov
movsb
sub
push
mov
add
clc
test
dec
popa
rolb
and
xchg
cmp
or
leave
jmp
inc
add
fstps
inc
add
pusha
add
add
dec
into
addb
adc
insl
mov
les
jp
jne,pt
int
add
mov
and
push
sbb
sbb
out
lods
xor
lret
cmp
rcll
push
in
rolb
mov
in
jmp
and
stos
movsl
out
push
adc
inc
or
dec
and
mov
jle
ljmp
mov
fisttpll
fs
cmpsl
sub
xor
mov
pop
mov
push
add
add
jae
insb
mov
pop
and
pusha
add
dec
pmaddwd
mov
cmp
add
idivb
jp
mov
lret
inc
arpl
in
cld
rolb
rcrl
push
sarl
aam
or
push
js
xor
in
inc
lds
jae
testl
sbb
testl
jl
mov
or
add
stos
and
push
jno
sub
cmc
xchg
std
jle
ljmp
outsl
or
xor
add
out
dec
lret
das
daa
mov
jecxz
idivb
jae
or
push
lahf
and
add
jge
pop
xor
inc
addl
pop
loop
add
add
add
cmp
insl
shlb
push
mov
add
add
lahf
sub
mov
jbe
fstpl
mov
mov
jge
cwtl
sbb
xor
push
daa
int3
movsl
add
test
cli
cmp
pop
jae
aad
add
dec
adc
fndisi(8087
cmc
test
call
inc
call
add
push
jl
mov
pop
in
std
ljmp
inc
add
add
repnz
add
out
pusha
add
icebp
xchg
mov
test
jns
cli
ret
mov
aad
data16
test
in
in
mov
fsubl
rorl
adc
lret
mov
imul
adcl
das
push
lcall
pushf
push
test
int
add
fldenv
push
loop
lret
js
inc
add
or
lea
cmc
dec
xor
scas
cmp
push
gs
mov
add
test
leave
sahf
iret
adc
mov
pop
scas
inc
add
je
out
rorl
das
sub
sub
pop
add
pop
stos
cmp
add
out
fldt
push
cltd
and
add
stc
iret
pusha
add
add
movsb
cwtl
pop
test
mov
push
mov
stos
mov
mov
jo
sbb
cltd
out
out
push
fs
jb
dec
ds
add
imul
in
add
pop
push
add
jmp
xor
movsb
mov
call
cmpsb
pop
rorb
push
jge
loope
pop
gs
lock
add
pushw
push
mov
cmp
enter
rolb
pop
cmpsl
adc
fstps
mov
iret
cmpl
add
icebp
push
aad
adc
pop
lret
loopne
sbb
adc
cli
filds
enter
dec
cmp
bound
lds
push
push
ds
addb
fsts
push
pop
mov
std
scas
fs
cwtl
aas
or
fcompl
movb
mov
push
pop
fcmovnbe
cmp
repz
test
in
insl
mov
dec
push
fnsave
mov
sub
xlat
aas
adc
rclb
in
mov
add
adc
mov
inc
xchg
mov
or
jecxz
shl
xlat
lods
fcom
mov
insl
movb
insl
jmp
je
push
mov
fwait
iret
addr16
stc
aas
add
mov
fwait
pop
sub
jl
sub
movb
add
xor
mov
ja
xchg
push
lcall
pop
out
jae
and
cmpsb
push
shll
shl
inc
add
mov
dec
xor
cmp
in
mov
xchg
pop
dec
mov
fucomp
mov
dec
into
cmp
add
and
fiadds
hlt
and
stos
push
in
cwtl
push
jle
int3
jne
test
or
pop
mov
add
adc
add
fiadds
ret
int
adc
or
sbb
add
arpl
cwtl
jno
adc
mov
jae
in
pop
jecxz
sar
in
adc
xor
add
sbb
sbb
or
addb
je
leave
jle
xchg
rcr
mov
or
outsb
stos
adc
and
lods
xlat
xor
xor
xchg
hlt
and
mov
add
mov
inc
lods
mov
mov
add
inc
std
fldenv
add
stc
add
inc
rcl
adc
and
push
sbb
adc
leave
fcmovbe
xor
pop
js
ficompl
pushl
dec
xor
inc
dec
xchg
lods
cmp
cmp
push
cltd
aaa
pop
adc
out
sbb
mov
xchg
jne
in
push
xchg
insl
xor
jno
in
dec
into
insb
insb
and
insl
mov
add
lods
lods
les
imul
in
loopne
or
in
mov
lcall
add
xchg
and
roll
sbb
mov
xchg
sub
add
repnz
mov
les
loopne
push
add
add
mov
hlt
movb
outsl
scas
rcr
fwait
rcll
mov
leave
push
pop
jg
pop
lret
mov
loope
movsl
scas
lcall
sub
push
jl
call
push
adc
test
adc
cwtl
xchg
icebp
adc
cwtl
cwtl
adc
es
add
scas
cmp
out
or
mov
notl
mov
cmp
ret
imul
push
cmp
and
sahf
std
pushf
sbb
bound
mov
fs
mov
cs
rcrl
add
mov
dec
stos
mov
fsts
push
int3
mov
pop
adc
jns
inc
add
and
sar
mov
out
or
lods
lret
jp,pn
xchg
jmp
ret
adc
or
xor
mov
icebp
fiaddl
jecxz
xchg
lods
lret
stos
jmp
imul
test
xor
jecxz
pop
inc
add
jge
fsub
mov
lcall
add
xor
mov
xchg
test
repz
imul
xchg
cwtl
in
rolb
iret
push
testl
and
push
stos
mov
mov
or
or
cs
mov
jl
dec
daa
mov
mov
cmp
test
imul
or
add
dec
jno
loope
cmp
jb
mov
les
add
cld
jae
ja
xor
sub
add
daa
xchg
mov
inc
add
sbb
lret
add
ret
daa
cmp
les
dec
cltd
push
popa
insl
mov
aam
push
mov
lods
push
mov
imul
sub
loop
inc
add
int3
dec
data16
imul
repz
xor
or
popf
rol
addl
dec
in
mov
fnstsw
and
addb
push
dec
xchg
out
inc
out
inc
and
in
fcmovb
add
xchg
mov
cmpsl
fldcw
ret
push
repnz
adc
loop
insl
out
and
xchg
fdivp
es
dec
push
lea
cmc
scas
adc
aaa
in
pop
mov
lcall
add
pop
movb
push
pop
inc
add
add
cltd
pop
xor
or
or
add
cmp
repnz
lcall
and
sub
xchg
push
std
mov
mov
add
rcrl
push
out
inc
add
rolb
dec
test
jg
je
cmc
shl
fmuls
pop
test
imul
pop
nop
mov
int3
xor
jbe
call
movsl
push
scas
pop
dec
dec
rolb
push
aas
mov
sbb
hlt
lds
aas
xlat
outsb
pop
cmp
dec
sti
jmp
in
stc
mov
jecxz
xchg
xor
xchg
jns
fwait
jl
xchg
xchg
sti
jnp
faddl
leave
push
imul
gs
pop
mov
push
mov
sub
ljmp
in
xlat
dec
fistl
out
add
hlt
mov
rorl
xlat
push
add
add
add
add
mov
cli
and
adc
sub
and
mov
stc
ret
jmp
mov
jmp
add
int3
sahf
aam
xchg
in
jle
movb
and
cmc
test
jge
test
rclb
mov
jmp
bound
or
sbb
adc
mov
frstor
add
sub
add
add
cltd
cli
adc
add
xor
lea
lahf
jge
mov
lds
loope
pop
clc
and
adc
add
xchg
popa
fmull
mov
aam
push
aaa
mov
pop
les
test
insl
sbb
stos
adc
mov
icebp
sub
leave
cltd
sub
jmp
fucomip
loopne
lods
add
cmpsl
xor
jnp
xor
lock
daa
shll
add
sub
fs
cltd
jne
lods
jbe
movb
sub
addl
in
cmp
test
mov
ret
jb
add
adc
jl
aam
mulb
adc
sbb
movsl
lret
mov
mov
test
cltd
adc
and
leave
dec
jmp
idivl
push
mov
push
imull
push
ja
aaa
mov
mov
shlb
pop
sub
xchg
cmp
add
loop
hlt
fadd
add
push
pop
adc
xchg
push
ds
jp
adc
fsubrl
movsb
mov
jbe
push
movsb
in
or
add
and
xlat
cmp
cmp
repnz
cli
sub
add
movsl
test
mov
xchg
lret
dec
fldl
mov
fnstsw
cmp
inc
add
push
lret
enter
sub
sub
cwtl
rolb
mov
jb
pop
inc
testb
xchg
xchg
addb
addb
cld
fstpl
cmp
inc
add
addb
lcall
inc
add
imul
cmpsb
mov
je
or
mov
cld
push
stos
stos
addb
xchg
lods
push
mov
ja
inc
add
int3
push
cmp
mov
lods
lds
sub
mov
inc
add
mov
adc
lcall
movsb
fmul
mov
js
adc
xor
mov
push
mov
sti
sbb
mov
jns
mov
add
mulb
add
jmp
shrl
xchg
cwtl
dec
call
into
dec
bound
std
and
outsb
std
les
icebp
dec
mov
add
xchg
mov
test
add
popa
imul
mov
fldenv
ja
sub
inc
add
icebp
push
aad
adc
stc
xchg
lock
in
std
lret
les
out
fcompl
stos
xor
sbb
sbb
dec
pop
mov
mov
xor
mov
aam
call
xor
add
in
shll
leave
addb
cwtl
jmp
addb
xchg
cmc
jle
mov
leave
push
add
inc
add
les
and
and
mov
repnz
adc
jl
add
out
xor
push
inc
inc
add
sbb
outsb
adcw
ficompl
shrl
inc
sbb
sahf
out
add
mov
add
xor
pop
jle
or
mov
inc
add
add
insb
outsl
movb
pusha
add
fwait
movb
das
inc
jo
add
lods
ljmp
sahf
mov
push
add
out
mov
imul
movsl
push
xor
inc
add
pop
popa
jmp
sub
dec
or
add
loop
cld
xchg
sbb
sub
outsb
xchg
and
mov
subl
aam
lsl
es
mov
xor
addb
popa
inc
add
ret
out
push
cmc
hlt
outsb
cmpsl
clc
mov
adc
jl
sub
pop
ret
inc
add
addb
add
dec
les
loope
sbb
loope
xor
addb
out
je,pt
push
sbb
sbb
cmp
xor
inc
push
sbb
pop
sbb
lret
lret
fadds
dec
scas
adc
insb
jmp
jmp
adc
fisubl
sti
out
addb
imul
mov
out
outsb
cmp
xor
mov
cli
pop
jge
adc
add
iret
imul
jnp
xchg
nop
mov
div
out
push
repnz
rorb
jns
enter
bound
aad
out
dec
cmc
cmpsl
pop
fimuls
add
test
movsl
imul
xchg
sbb
add
inc
mov
mov
mov
and
les
lock
addb
out
pop
jne
js
negl
jp
mov
jmp
daa
sub
push
cmpsl
cmpsb
fwait
insb
pop
les
xchg
adc
adc
adc
add
loop
mov
je
icebp
fld
add
add
add
jb
push
dec
fstpl
pusha
add
and
sub
loopne
pop
or
movsl
lea
mov
pop
lcall
dec
xor
int
lea
int3
shrb
and
popa
bound
xlat
mov
jle
add
inc
js
cmpsb
mov
add
cmp
inc
add
add
and
pop
mov
add
sbb
cmp
add
dec
cmc
stos
mov
add
mov
inc
sub
cs
add
jmp
jo
jl
jnp
shrl
pop
pop
pop
pusha
add
in
add
sub
cmpsl
fistl
sbb
xchg
xor
out
adc
inc
add
out
dec
adc
cmp
mov
mov
out
mov
inc
mov
mull
sbb
jne
popa
mov
add
add
movd
pop
call
push
add
mov
push
out
sub
jge
sub
mov
ja
pop
cmp
xor
addb
enter
add
mov
iret
sti
and
cmc
and
inc
push
nop
cli
stos
roll
cmp
gs
or
mov
out
lea
lods
inc
add
dec
repz
rol
add
mov
ja
jle
aad
aaa
cld
out
std
dec
and
mov
out
bound
or
hlt
pop
jae
mov
jecxz
adc
je
out
and
jne
mov
inc
add
pop
lret
xor
inc
xlat
adc
call
lods
lea
movb
daa
out
call
out
pusha
add
add
test
push
cmp
aad
cmp
or
fcompl
jno
cltd
jmp
add
xchg
imul
mov
mov
imul
pop
pop
fcoms
sub
adc
pop
addb
jbe
add
outsl
sti
jmp
out
pop
cmc
divb
nop
popa
enter
fcoml
popa
loopne
mov
in
movsb
pop
movsb
or
mov
pop
mov
add
push
push
insb
dec
cmp
mov
and
xor
lcall
mov
jno
add
pop
dec
lods
sbb
and
inc
add
push
das
out
dec
lods
cmp
and
jno
add
push
fidivl
jbe
cmpsb
and
scas
sub
sti
xor
and
cmp
inc
add
pop
sub
movsl
pop
outsb
rorb
pop
mov
mov
jno
out
adc
in
pop
inc
add
push
inc
add
mov
scas
or
inc
sbb
ficomps
pop
in
dec
out
jg
xlat
xor
ss
pop
or
ja
add
mov
scas
cs
ja
add
addb
cmp
adc
add
fnsave
test
add
into
ja
loopne
jp
pop
mov
xchg
xchg
fs
jmp
call
ds
xchg
cmp
push
jo
in
lods
sbb
and
icebp
inc
add
inc
outsb
push
test
pop
rolb
in
in
xor
les
cld
outsl
roll
push
cmc
cmp
test
add
pusha
add
add
iret
outsb
inc
add
add
stos
jns
sbb
addb
push
xor
xchg
movb
sub
jl
mov
add
sbb
adc
in
jns
in
or
push
add
lcall
aad
push
test
ds
jmp
jb
lcall
mov
xor
jo,pt
add
stos
dec
mov
add
add
sti
bound
arpl
xor
sbb
dec
mov
movb
add
mov
mulb
add
aaa
cmpsl
push
adc
jo
dec
inc
pop
or
movb
clc
mov
mov
pop
jecxz
mov
xchg
mov
scas
pushw
popa
pop
jae
sub
mov
mov
rolb
cmp
fistpll
test
fcompl
sbb
inc
mov
das
cmp
mov
or
rolb
je
xlat
lcall
add
mov
add
add
push
cld
ficoms
or
or
and
sbb
loope
sub
sub
and
adc
scas
cmp
push
dec
test
jge
xchg
cmp
mov
add
mov
es
sti
test
fcoml
add
repnz
push
outsb
push
repnz
sub
es
xor
movsl
ficomps
aas
cmp
out
or
dec
leave
jge
les
or
fwait
sub
push
je
xor
jne
rolb
ficoml
test
add
jle
cli
mov
mov
ret
dec
movsb
mov
push
inc
pushf
in
int3
pop
sbbl
fsubs
dec
movsb
mov
movb
xchg
mov
xchg
bound
xor
add
movb
into
pop
test
cmpsb
loop
xlat
adc
daa
scas
xchg
push
aad
mov
xchg
ficompl
mov
adc
aam
fwait
popf
stos
mov
add
mov
push
push
loope
scas
iret
andl
and
mov
add
push
imull
cmp
push
fwait
mov
inc
add
jg
add
mov
hlt
test
mov
test
dec
int
sbb
pop
mov
out
scas
mov
mull
cmp
fwait
sub
jno
add
call
mov
testl
ret
lods
pop
adc
and
call
popf
ds
add
fisttpll
dec
fildll
repnz
fstl
pushf
pop
test
adc
xor
and
mov
mov
mov
sbb
xchg
hlt
ficomps
jno
stos
jns
mov
in
add
jmp
ret
or
or
push
inc
and
addb
mov
in
jge
push
pop
or
add
jns
out
cmp
movsb
xor
dec
les
add
ds
sub
mov
add
in
mov
adc
xlat
movsb
or
pop
sti
add
inc
sub
cmpsb
arpl
push
mov
add
sub
cmp
sub
mov
lods
xor
mov
sbb
sbb
outsl
js
add
push
sbb
sbb
sbb
push
adc
or
add
mov
lret
jg
out
test
test
sub
jle
idivb
loope
call
jo
inc
add
add
inc
add
add
fs
and
add
push
dec
pop
xchg
stos
xor
jg
jmp
push
add
jnp
push
add
add
xchg
scas
adc
pop
dec
pop
inc
mov
test
das
mov
pshufw
cmp
movb
fsts
adc
je
mov
mov
add
add
cmp
xor
or
call
addr16
and
dec
hlt
pop
iret
jp
add
scas
fdivl
faddl
popa
xchg
lss
mov
cmp
out
adc
sahf
pop
enter
xchg
xchg
jmp
fmull
inc
add
out
arpl
mov
addb
mov
jle
add
nop
adc
ss
adc
add
jge
push
xor
outsl
dec
cwtl
dec
push
in
or
lahf
dec
jo
out
addb
cmp
cs
sbb
loop
mov
dec
fwait
mov
jno
jbe
xchg
scas
mull
loop
fisttps
inc
add
add
stc
int3
cmpsl
cmp
imulb
fwait
sub
add
xor
out
or
cmp
mov
lock
xorl
repnz
adc
jns
mov
add
shl
bound
cwtl
rolb
movb
add
outsb
adc
xchg
lret
aad
ficoml
cmp
lea
es
iret
sar
arpl
loope
jmp
dec
push
jnp
jns
add
mov
inc
out
pushf
add
mov
into
mov
add
push
into
sub
int3
push
adc
mov
and
call
add
mov
es
sahf
push
pop
arpl
adc
lea
inc
add
das
ror
fisttpll
add
test
add
push
jmp
xchg
adc
jmp
and
or
xor
push
xchg
mov
insl
scas
push
add
mov
out
xchg
test
add
inc
ret
mov
rcr
and
adc
push
mov
jp
adc
rolb
mul
xlat
inc
add
xchg
in
test
xchg
ss
shrl
ret
ds
jno
in
inc
add
add
iret
mov
addb
loope
push
daa
lods
cmp
add
in
push
dec
mov
and
aas
ljmp
add
mov
or
and
or
sbb
inc
fs
idivb
pop
call
add
add
dec
push
mov
test
popa
ljmp
sub
aam
xor
mov
dec
adc
lock
stos
bound
pop
imul
es
push
pop
mov
sbb
jle
sbbl
repnz
fistpll
sahf
pop
jo
add
add
lahf
mov
jecxz
repnz
jg
dec
aaa
mov
add
testb
lret
xor
add
mov
add
rolb
and
dec
out
xchg
loop
mov
xchg
sti
cwtl
sbb
adc
test
pop
ljmp
out
mov
sahf
fwait
mov
dec
lods
sub
push
mov
sahf
sub
movsl
std
pop
ret
fstp
stos
adc
or
jle
cli
jnp
pop
fadd
add
xchg
jne
sub
sbb
int3
cmpsl
inc
add
dec
lret
mov
pop
push
jl
imul
pop
cmp
push
outsl
xor
dec
repz
popa
mov
addr16
jae
out
dec
in
negb
movsl
aaa
lods
shrl
imulb
fabs
pop
cmp
jge
outsl
adc
out
test
int
jne
add
mov
pop
aam
cmp
jnp
leave
cli
mov
add
shl
xchg
xor
dec
shrl
insl
jae
sub
lahf
adc
mov
ljmp
lret
xor
stc
mov
sbb
and
mov
test
in
das
pop
cmp
sbb
push
jb
loope
enter
add
notl
dec
jg
xchg
out
dec
xchg
add
xor
cltd
iret
mov
xor
lods
fwait
pop
xchg
pop
mov
mov
add
mov
pop
inc
add
mov
movsl
es
daa
jbe
adc
add
sbb
and
aad
or
loope
ret
mov
sbb
icebp
addb
rolb
bound
mov
sbb
mov
in
push
iret
cmp
add
cmpsb
mov
pop
add
pop
stos
or
mov
ror
xchg
lods
dec
cmp
and
mov
rorb
cmp
jbe
and
push
fisttpll
jbe
xchg
lods
dec
dec
jb
fwait
adc
loopne
imul
or
mov
stc
sub
xchg
mov
add
dec
mov
ds
mov
lds
jae
add
mov
sub
lock
adc
dec
out
and
scas
push
fcoms
lods
pop
adc
pop
add
test
xlat
out
and
xorl
xor
mov
xchg
sarl
enter
cli
jo
test
jb
iret
mov
xchg
test
mov
add
in
gs
cmp
fmull
mov
jbe
pushf
dec
arpl
fs
add
filds
data16
add
sbb
lds
jecxz
jae
outsl
popf
mov
addb
rolb
movb
pop
mov
js
dec
jecxz
pop
popa
inc
add
cmovb
rolb
aaa
imul
ret
add
push
js
insl
movb
adc
mov
inc
jne
test
lods
cmpsl
aad
push
jae
sbb
push
test
popf
scas
xor
es
shl
push
xchg
xor
xor
push
jl
pop
fcmovbe
ficompl
add
add
aam
xchg
mov
fistpll
imul
outsl
out
cmp
sub
addr16
add
jl
outsl
jo
or
rorb
fs
xor
add
inc
movb
mov
cmp
ret
adc
mov
and
repnz
fmull
add
dec
cmp
mov
ljmp
mov
jl
mov
pop
inc
add
test
out
cwtl
xor
cltd
xor
push
add
add
push
ret
adc
out
rclb
nop
jp
push
xchg
repnz
jae,pt
add
xchg
xorl
lock
ret
mov
pop
add
scas
pop
add
inc
jno
sub
daa
add
add
push
repz
add
ss
rolb
sahf
dec
inc
cmp
out
push
jae
mov
loop
ficoml
add
xchg
testl
shrb
and
push
jl
in
xchg
addb
mov
es
or
repnz
lea
jg
stos
outsl
sub
cmc
mov
pop
shr
push
pop
cmp
mov
add
push
add
add
fucom
sbb
xchg
sbb
mov
movsb
repz
mov
add
lret
lret
fcomip
addb
add
push
cld
lods
lcall
add
adc
mov
push
or
push
add
fs
scas
inc
add
loopne
lds
dec
xor
das
pop
lahf
jo
xchg
pop
into
js
leave
mov
fucomip
pop
xchg
pop
fincstp
push
add
testl
out
cmp
mov
xor
push
jmp
mov
outsl
push
add
daa
mov
xchg
popa
xchg
dec
sub
and
sub
push
loopne
add
push
mov
cmp
push
mov
dec
mov
sbb
cmp
jns
dec
xchg
xor
xchg
push
jnp
sbb
lahf
mov
bound
outsl
xlat
mov
mov
xlat
das
je
add
add
iret
jne
push
jmp
fisubrl
cld
dec
pop
mov
jno
adc
cltd
jbe
adc
arpl
and
inc
push
cmp
mov
loopne
xchg
out
inc
dec
adc
in
cmc
xchg
aad
mov
push
sahf
pop
ficomps
dec
pusha
add
inc
std
ds
add
mov
add
test
cmp
pusha
add
lea
add
cltd
in
xor
mov
add
pop
aam
cmp
pop
aaa
mov
cmp
sbb
push
arpl
and
push
lea
add
shrb
addr16
shrl
sbb
and
or
enter
bound
fidivrs
movsb
and
les
movsl
pop
xor
add
jge
faddl
add
imul
jmp
stos
mov
pop
dec
pop
fsubrp
sbb
inc
inc
or
or
and
inc
add
add
incl
sub
stos
pop
daa
mov
jmp
and
lcall
pop
ljmp
outsl
mov
rolb
stos
push
stc
dec
adc
repz
dec
lcall
pushf
mov
bound
neg
and
push
fstps
cld
mov
push
pop
jb
xchg
inc
addb
jo
add
xor
cmp
adc
mov
mov
lret
lods
in
add
inc
insb
outsb
pop
and
mov
xchg
push
outsl
std
sarl
push
testb
gs
or
cmp
or
jo
cld
cli
ret
loopne
je
add
xor
dec
mov
jae
fdiv
push
push
int3
out
pop
push
scas
decb
lahf
xor
cmp
jb
stc
repz
push
mov
bound
inc
xor
popa
dec
ja
jecxz
push
loopne
test
pop
jle
mov
sub
mov
add
leave
aas
mov
movb
xor
or
pop
jle
push
out
or
or
inc
xor
movsl
lahf
cmpsb
push
in
push
jmp
cmc
mov
and
mov
lock
xchg
and
lods
or
push
jae
int3
popa
hlt
and
js
int
aam
stc
pop
lea
pop
or
push
cmpsb
xchg
sub
or
aas
std
popf
test
inc
add
leave
in
inc
add
or
mov
lock
cld
cmp
std
outsl
mov
test
dec
jp
rcr
cltd
mov
mov
push
stc
movsb
xor
in
cmp
pop
pop
lret
inc
push
add
scas
dec
adc
rolb
shlb
add
popa
mov
je
add
pop
lds
std
jle
sbb
pop
idivl
gs
dec
orl
push
xor
fdivrp
arpl
or
pushf
cltd
sub
cld
inc
add
test
sahf
stos
iret
mov
test
pop
xchg
sbb
jl
lods
es
xor
sti
sti
enter
pushl
mov
push
dec
stc
sub
or
lds
mov
pop
ds
fldl
mov
mov
neg
fisubrs
sbb
outsb
sbb
xchg
popl
add
pop
nop
scas
mov
mov
and
cmp
xchg
and
xchg
aam
inc
cmp
jae
xor
popa
test
movsl
xlat
shrb
and
add
enter
daa
dec
sbb
sub
iret
xchg
stos
test
pushw
and
addb
xorl
clc
adc
xor
mov
gs
scas
orl
cmp
test
mov
movsb
or
rcrl
loopne
dec
pop
mov
int3
out
loop
imull
call
inc
mov
add
sbb
sbb
mov
cmp
repz
xchg
push
pop
jp
inc
add
mov
jge
dec
aad
fxch
jg
repz
push
dec
adc
adc
push
lock
add
pop
and
pop
lds
jo
out
addl
out
aad
mov
xor
cmpsb
inc
add
inc
mov
add
xchg
xchg
stos
or
add
xlat
outsl
mov
in
imul
leave
pop
add
pop
leave
popf
push
xor
mov
frstor
inc
aaa
popa
out
pop
sbb
notb
push
mov
jmp
or
add
clc
push
sub
cmp
pop
movb
add
nop
repnz
xchg
adc
mov
test
into
mov
inc
add
and
in
adc
inc
add
mov
mov
mov
pop
popa
movsl
push
lret
xchg
mov
xchg
stos
pop
lods
pop
rclb
into
adc
stos
cmc
icebp
sahf
in
xor
fsts
add
or
pop
insl
pop
fs
imul
stc
push
adc
xlat
lret
mov
add
pusha
add
xor
push
sbb
je
cld
icebp
mov
insl
inc
stc
xchg
lods
dec
lret
movsb
inc
add
cmp
pushf
inc
add
cmp
add
cmpsl
pop
cmc
mov
jl
sbbl
iret
jne
pop
movsl
outsb
test
pop
or
jmp
add
mov
lahf
jp
fwait
mov
add
sub
cmpsb
aad
and
lea
dec
ret
sub
callw
fs
mov
iret
push
push
push
nop
sbb
mov
sub
sub
add
add
fisttps
mov
mov
ret
jecxz
mov
test
xorl
sbb
dec
pop
addb
pop
jecxz
gs
cmp
xchg
repnz
stos
int3
mov
frstor
add
pop
inc
add
sbb
sub
pop
out
jbe
mov
test
jge
into
jnp
insl
jg
rorl
jl
movsl
lods
inc
add
xchg
lret
xor
out
fwait
mov
and
test
cmp
pusha
add
addb
mov
movsl
jbe
rolb
add
inc
imul
fstl
ja
loop
add
cltd
push
call
sbb
ficomps
fisubs
cmpsb
andl
and
push
adc
in
inc
add
and
stc
and
add
and
adc
aas
mov
aad
leave
movsl
dec
mov
mov
sub
clc
adc
jle
sub
mov
cli
shrb
jns
inc
adc
pushf
jns
lock
adc
add
das
push
sahf
push
mov
fwait
int
in
int
mov
add
lods
pop
mov
test
dec
mov
sahf
outsl
jmp
cltd
test
int
cwtl
mov
inc
aaa
and
xchg
xor
insb
or
test
arpl
add
mov
fiadds
add
es
xor
addb
daa
adc
out
inc
add
insl
jle
add
mov
xor
call
push
shld
lcall
dec
movsb
inc
xchg
out
std
sub
jp
mov
mov
sub
cmp
xchg
and
pop
push
data16
add
sub
roll
fimull
roll
fmul
sbb
mov
mov
fstl
test
fwait
mov
jg
adc
repnz
lret
dec
push
setl
test
adc
pop
jbe
adc
leave
mov
jge
cmc
leave
jecxz
push
add
test
xor
in
xchg
mov
fwait
cld
xor
loopne
mov
mov
add
mov
js
inc
add
hlt
bound
std
jp
test
fcmovbe
mov
jmp
mov
add
cld
je
inc
add
jns
jge
rorl
popf
ja
jmp
data16
xchg
dec
and
int
loop
into
dec
or
stos
cmp
mov
pusha
add
sar
add
popf
jg
add
popf
std
in
or
xchg
outsb
and
loope
cmc
insl
mov
inc
mov
push
push
call
stos
outsb
or
inc
nop
inc
add
lret
out
jle
hlt
popa
pop
dec
mov
stos
cmp
cmp
add
jecxz
shrl
push
pop
test
les
and
fstpl
daa
add
sti
test
jae
ja
stos
push
subl
dec
pop
inc
add
xadd
inc
add
pop
mov
xchg
std
fwait
ljmp
mov
sbb
add
pop
aas
testb
jmp
add
dec
add
push
enter
mov
mov
ja
add
mov
jmp
stos
in
pop
push
lahf
cld
mov
mov
cmp
ret
clc
mov
test
sub
pusha
add
arpl
fnsave
sub
cli
fnsave
out
adc
sub
in
xchg
add
movb
popf
and
jp
daa
fcompl
cld
mov
mov
rolb
sbb
dec
sub
enter
adc
imul
call
add
mov
add
push
aad
mov
fs
sbb
fildl
outsb
and
mov
lcall
sbb
add
scas
mov
scas
sbb
fildl
and
imul
xchg
mov
add
inc
push
jnp
cltd
fcompl
add
push
add
fdivs
imul
add
add
stos
out
xchg
pop
imul
cmpsl
sub
push
add
mov
mov
or
sub
jge
add
mov
add
pop
aam
daa
test
ja
mov
fsubrl
fcmove
jbe
addb
sti
scas
adc
jae
bound
adc
cltd
mov
mov
loop
lods
mov
push
xor
xlat
gs
test
out
int3
jp
repz
xchg
mov
mov
repz
and
push
add
ret
mov
cmp
test
shrl
push
nop
leave
and
mov
cltd
addr16
imul
rolb
div
adc
sub
add
sahf
push
fwait
sub
nop
or
jnp
xchg
ret
sub
pop
cmc
mov
sub
clc
testb
xchg
imulb
dec
nop
mov
add
jae
push
mov
cwtl
mov
and
sar
mov
in
cltd
aas
mov
push
pop
loopne
shll
sub
lea
xchg
adc
outsb
outsl
js
xchg
pop
jno
inc
add
sbb
xchg
adc
in
bound
push
sub
mov
dec
pop
gs
pop
cmp
mov
rcl
cmp
in
addb
stc
push
insl
sub
nop
add
add
add
sub
fdivs
loopne
jp
stos
addb
add
cmp
sbb
les
stos
mov
add
loop
lods
lret
mov
jo
mov
mov
mov
sbb
rolb
or
lret
xchg
lock
xchg
mov
les
loopne
adc
repz
adc
add
xor
sbb
int
add
loope
xchg
pop
mov
ljmp
pop
cmpl
clc
loop
add
lods
or
mov
iret
sub
pop
push
dec
rolb
or
push
movsl
push
jg
xchg
jnp
test
mov
mov
xor
or
popf
jno
in
pop
test
inc
sub
div
aam
mov
jo
clc
test
cmp
arpl
imul
aad
mov
xchg
shll
add
fucomip
aaa
mov
cmp
icebp
aad
leave
das
aaa
sbb
idivb
pop
jge
cld
dec
pop
or
sub
and
rolb
add
cmp
and
sbb
ret
mov
fcmovne
ret
xchg
addb
add
scas
jno
dec
jecxz
pop
mov
and
lods
push
sbb
jbe
mov
pop
out
adc
test
loop
add
sub
cmpsb
mov
cmp
ret
mov
lock
fcompp
iret
and
lret
xor
inc
add
div
addb
push
stos
cld
addl
inc
add
jmp
push
repnz
nop
and
add
xlat
xchg
add
inc
mov
dec
xchg
push
repnz
mov
add
sbb
jl
xor
cmp
add
mov
push
add
pop
sbb
int
add
xor
inc
add
je
icebp
push
popa
cli
and
and
aaa
mov
push
inc
push
clc
xchg
je
fsubrl
movsl
jp
push
je
dec
fs
fisubrs
push
insl
fdivrl
es
push
scas
rolb
pop
sub
adc
adc
addr16
add
inc
pand
xchg
inc
add
fists
out
mov
int3
enter
inc
add
or
add
pop
xchg
pop
lcall
ds
imul
push
scas
je
add
dec
dec
mov
mov
dec
jmp
add
imul
rorb
dec
jmp
add
sbb
stos
mov
add
sahf
out
ja
lock
fwait
add
cmp
hlt
loop
shrb
pop
xchg
stc
mov
add
mov
xor
add
fs
jno
je
xor
lds
jg
add
add
jl
add
notb
mov
addb
add
push
push
data16
jmp
sub
clc
pushf
mov
shl
inc
add
mov
sub
daa
xchg
push
and
cmpsl
xor
sub
mov
out
pop
xor
jmp
push
sub
xor
add
and
jmp
je
add
mov
jo
push
addb
enter
mov
jae
mov
test
add
adc
jecxz
or
push
fisttpl
mov
das
lods
addr16
mov
out
ss
sub
pop
lods
aam
sahf
pop
inc
add
popa
add
fbld
xchg
mov
lcall
push
xchg
jne
pop
dec
jno
hlt
mov
xchg
ljmp
add
dec
insl
data16
jbe
js
or
sbb
sti
dec
clc
or
mov
add
ljmp
add
cld
ret
std
je
mov
cltd
adc
mov
xor
stos
and
loope
pop
jmp
add
movsl
ljmp
cs
jl
add
and
or
js
int
pop
sbb
rorb
test
shrl
add
ret
or
insb
cmpsb
push
xchg
mov
or
aaa
aad
mov
pop
fstps
jmp
add
xor
aam
and
pop
mov
and
fnstsw
cwtl
cmc
dec
std
jbe
mov
dec
lret
mov
cmpsl
stc
xchg
out
movsb
push
pop
addr16
pop
jmp
xchg
scas
nop
daa
lock
stos
add
fsubrp
dec
lds
add
addb
xchg
sub
repnz
sbbl
pop
repz
out
in
lea
xor
fisubl
in
out
inc
test
mov
loop
mov
cld
xlat
data16
aaa
test
and
cli
loopne
outsb
jecxz
add
add
in
rolb
outsb
movsb
or
ret
and
hlt
jl
mov
push
les
lea
addb
add
xchg
pop
ret
lods
js
mov
xchg
lock
add
clc
jmp
rcrl
push
fwait
push
add
inc
popf
and
push
fildl
xchg
and
dec
mov
stos
popf
xchg
jo
jcxz
stos
and
pop
in
cld
loop
mov
xor
insl
pusha
add
add
xchg
push
mov
add
pop
inc
add
inc
add
hlt
icebp
ret
ljmp
into
pop
xlat
mov
test
cltd
push
dec
sub
adc
ret
mov
rcll
loopne
add
cmp
sti
sub
sbbl
add
sbb
xchg
mul
int3
adc
jmp
in
cmp
jg
xchg
add
icebp
aas
xchg
lods
push
cwtl
cmp
xchg
adc
imull
mov
pop
xor
jb
enter
mov
stos
test
jl
cmpsl
cmp
repz
bound
in
mov
fisubl
adc
sar
lret
add
xlat
out
add
add
mov
int
outsl
and
push
fcmovnb
add
imul
test
aam
push
fld
add
out
add
addr16
adc
arpl
pop
outsb
sbb
mov
ficomps
mov
mov
jg
jl
cltd
mov
pop
scas
add
and
xchg
addb
mov
jae
jecxz
mov
in
mov
cltd
sub
cmc
mull
arpl
test
cli
mov
mov
pop
fsubs
test
add
and
fimull
mov
cmp
repnz
pop
xchg
push
cmpsl
push
xor
daa
xchg
lahf
jmp
out
not
mov
mov
jecxz
dec
stos
mov
in
addb
inc
fdivr
in
add
add
sub
gs
int
addb
movsl
repz
or
movb
mov
adc
in
jns
sbb
add
mov
ret
fisubs
fstpl
je
adc
lret
dec
mov
lret
mov
aad
mov
insl
jge
push
addb
movsb
aas
test
mov
cmp
adc
out
add
adc
cmpsb
xor
and
inc
add
sub
add
jp
pop
lds
mov
sub
bound
mov
pop
mov
aam
in
int
jae
sbb
mov
and
in
add
push
and
mov
rcrl
add
adc
pop
pop
sbb
sbb
pop
call
push
sub
xchg
fildl
dec
inc
inc
add
mov
xchg
scas
lahf
and
jl
add
sbb
stos
scas
add
lods
dec
adc
clc
sbb
adc
pop
rolb
rolb
mov
pop
decl
jp
mov
pop
sub
add
pushf
cld
dec
into
xchg
jle
push
out
add
lret
repnz
adc
xchg
inc
xchg
jb
out
repz
xchg
daa
loopne
pop
insb
pop
pop
js
add
add
mov
stos
sub
dec
xor
stos
test
sbb
inc
cmc
xorl
lcall
cmp
cmpsb
js
inc
add
add
loopne
pop
push
out
or
ret
in
dec
cmp
jb
les
push
lock
adc
add
movsb
out
cld
and
pop
xor
shll
outsb
push
out
sti
push
out
cltd
jmp
mov
dec
lock
dec
ficoml
inc
add
mov
or
das
push
arpl
scas
push
notl
adc
jno
add
xchg
xor
mov
and
add
jl
add
xchg
sub
hlt
push
xor
in
popf
and
lea
es
mov
scas
repnz
scas
sub
int3
mov
pusha
add
bound
int
xorl
aad
mov
sub
into
mov
jno
mov
add
sub
pop
stc
fs
stc
mov
pop
xchg
cltd
inc
xchg
pop
fs
bnd
sahf
dec
pop
add
cmp
xchg
xchg
sub
push
dec
lcall
stos
lret
ljmp
lods
cmp
mov
das
pop
mov
rorl
rcll
in
fsubl
xchg
cli
xchg
repnz
dec
movb
jb
adc
imul
mov
adc
ficomps
inc
pop
movsb
inc
add
sbb
sti
and
mov
mov
or
mov
out
int
sub
mov
orl
add
sbb
pop
mov
mov
mov
addb
cmpsl
xchg
ret
xchg
xor
ret
scas
movb
je
add
pop
mov
adc
dec
mov
fists
cmc
jle
and
mov
inc
add
or
push
dec
fimull
sarb
popa
mov
das
call
call
cmpsl
dec
jo
adc
fsubs
add
adc
lds
cs
sahf
loope
out
push
push
xchg
push
scas
cmpsl
xchg
push
aam
int
fdivp
push
mov
data16
dec
addb
stos
mov
mov
in
inc
add
add
mov
mov
idiv
inc
hlt
icebp
test
nop
pushf
outsb
adc
xchg
test
pop
push
dec
pop
jle
call
push
jae
int
fisttpl
inc
push
jecxz
sub
jp
jo
out
xchg
cmp
cmp
push
add
add
cmp
aas
push
pop
aad
icebp
lods
gs
add
push
add
cs
icebp
jg
jns
sub
mov
add
outsb
and
xchg
aaa
jmp
addb
and
adc
loope
dec
aas
ljmp
jmp
push
add
out
iret
xchg
pop
mov
stc
nop
es
add
cmp
jmp
jb
or
add
repz
push
mov
xchg
ret
int
xchg
mov
mov
xor
add
stc
nop
es
add
add
fldl
inc
and
nop
es
mov
add
add
testl
nop
cld
nop
jmp
add
xchg
mov
nop
es
add
cli
or
add
popa
inc
add
dec
adc
nop
es
clc
add
add
test
ss
push
stc
nop
es
xor
add
add
cmp
jl
nop
cld
nop
jmp
call
inc
add
jp
ljmp
inc
add
add
inc
add
nop
es
add
int
mov
add
add
and
add
sub
add
jb
add
aam
add
jne
stc
nop
es
cli
mov
decl
push
mov
xchg
ret
jo
add
add
es
xchg
jo
mov
stc
nop
es
sub
add
add
jp
ret
daa
das
push
stc
nop
es
add
add
sub
add
loope
movzwl
stc
nop
es
mov
mov
mov
xchg
ret
inc
ljmpw
cld
lods
push
mov
xchg
ret
push
add
lds
je
add
nop
es
xlat
add
clc
loope
mov
stc
nop
es
add
xchg
and
add
scas
jne
stc
nop
es
stos
add
or
jb
add
ss
les
mov
stc
nop
es
and
cmp
lret
dec
nop
cld
nop
jmp
add
loop
dec
js
push
mov
xchg
ret
loop
add
sub
fsubrs
nop
es
jp
add
push
mov
xchg
ret
pop
xor
xlat
and
nop
es
fildl
add
add
push
push
mov
xchg
ret
mov
mov
lods
mov
nop
cld
nop
jmp
xchg
xor
mov
pusha
stc
nop
es
int
add
xlat
rorl
stc
nop
es
mov
add
sbb
dec
sub
nop
es
and
lret
je,pn
stc
nop
es
push
add
lock
mov
stc
nop
es
call
pusha
xchg
mov
nop
es
add
fidivrs
stc
nop
es
add
add
jae
nop
es
jp
lea
repnz
or
xor
add
stc
nop
es
cli
add
inc
stc
nop
es
add
add
add
stc
nop
es
add
add
ds
stc
nop
es
add
push
repz
fcoms
jb
add
nop
cld
nop
jmp
cmp
adc
xchg
add
sbb
int
pop
jae
nop
es
loop
add
jne
stc
nop
es
add
add
add
push
mov
xchg
ret
add
add
adc
nop
es
add
repz
add
mov
stc
nop
es
add
xchg
sub
mov
std
cmc
inc
add
jo
add
add
fdivp
inc
add
mov
add
nop
es
mov
fildl
add
mov
stc
nop
es
or
add
data16
lods
push
mov
xchg
ret
stos
add
add
add
cmp
jmp
add
add
test
push
mov
xchg
ret
add
sub
test
add
stc
nop
es
fisttpl
push
mov
xchg
ret
dec
add
or
add
es
lea
add
xchg
add
xacquire
add
rclb
add
inc
shll
add
call
mov
stc
nop
es
add
cmpsb
adc
add
stc
nop
es
add
add
add
cli
xchg
or
stc
nop
es
add
mov
jb
push
add
mov
stc
nop
es
ljmp
cmp
iret
or
inc
add
add
jp
push
nop
jmp
add
add
in
ljmp
enter
xchg
ret
xchg
xchg
dec
add
add
xchg
orps
sbb
add
cmp
mov
mov
push
nop
cld
nop
jmp
add
sub
xor
add
sub
add
data16
add
out
mov
nop
cld
nop
jmp
sarl
add
pushw
jne
nop
cld
nop
jmp
add
jne
stc
nop
es
add
addb
std
push
cmp
stc
nop
es
cmp
add
stc
nop
es
xlat
add
add
jo
mov
repnz
add
stc
nop
es
adc
add
mov
mov
xchg
ret
add
add
inc
call
jb
xor
add
push
sub
pop
add
add
int
pop
mov
mov
stc
nop
es
add
in
fcoms
mov
stc
nop
es
add
sub
sub
ljmp
ret
mov
add
addb
test
add
nop
cld
nop
jmp
sub
jg
lods
nop
nop
cld
nop
jmp
and
add
add
add
fwait
sub
stc
nop
es
fmuls
mov
xor
add
stc
nop
es
add
add
sar
nop
es
jo
add
out
stc
nop
es
add
add
ja
add
xor
stc
nop
es
cmp
loop
in
add
push
fldl
xchg
ret
and
roll
add
cld
nop
jmp
add
add
stos
std
add
xlat
mov
stc
nop
es
xchg
add
inc
push
mov
xchg
ret
xchg
mov
data16
or
nop
es
add
jg
and
mov
push
stc
nop
es
xchg
cli
xor
roll
imul
jb
add
add
jp
ja
pop
push
mov
xchg
ret
xlat
xchg
add
inc
add
sub
nop
cld
nop
jmp
data16
mov
push
stc
nop
es
jp
repz
je
add
stc
nop
es
xchg
in
cli
cmp
mov
test
nop
cld
nop
jmp
lea
add
dec
mov
stc
nop
es
add
out
push
jne
stc
nop
es
cmp
add
mov
stc
nop
es
add
clc
pusha
nop
cld
nop
jmp
add
add
lea
add
jbe
add
nop
cld
nop
jmp
sub
jp
pop
mov
push
mov
xchg
ret
data16
add
add
aas
stc
nop
es
add
add
ljmp
add
stc
nop
es
add
data16
push
mov
xchg
ret
and
clc
xor
sbb
sar
add
push
mov
stc
nop
es
add
add
add
loopne
add
inc
stc
nop
es
in
add
cmp
test
push
mov
xchg
ret
add
add
xor
stc
nop
es
aam
add
hlt
imul
stc
nop
es
mov
mov
stc
nop
es
xor
dec
adc
and
nop
xlat
outsl
sub
stc
nop
es
add
and
and
ds
nop
cld
nop
jmp
ss
sub
add
lret
add
es
ljmp
add
push
repz
add
cli
add
add
sub
nop
es
add
add
add
call
stc
nop
es
push
add
add
add
jl
sbb
nop
es
jo
jp
insl
pop
stc
nop
es
in
xchg
add
mov
es
out
lret
or
push
stc
nop
es
push
add
jp
idivb
xor
nop
cld
nop
jmp
add
out
jp
bound
xor
es
std
repnz
repnz
add
stc
nop
es
add
lretw
andb
jb
xor
add
jp
test
add
stc
nop
es
int
int
mov
nop
jmp
pushw
add
inc
push
mov
xchg
ret
mov
xchg
int
div
stc
nop
es
add
add
add
fldenv
popa
add
nop
es
push
pop
add
add
stc
nop
es
sub
add
dec
add
stc
nop
es
add
cli
imul
es
pusha
std
loop
add
std
cmp
mov
xchg
ret
add
add
add
test
pop
add
nop
cld
nop
jmp
and
add
movsb
push
mov
xchg
ret
mov
lahf
and
stc
nop
es
std
repnz
mov
inc
loopne
nop
es
add
ss
loop
movswl
stc
nop
es
call
sub
and
add
nop
es
lret
inc
sub
adc
je
stc
nop
es
add
jne
nop
cld
nop
jmp
add
add
mov
jb
add
shll
add
dec
fisttps
es
jp
cmp
sub
stc
nop
es
add
cmp
adc
xor
add
pusha
stc
nop
es
add
xchg
add
mov
test
es
std
add
push
mov
jmp
subb
cli
roll
add
xor
stc
nop
es
lret
loop
sub
cmp
call
add
add
repnz
lret
popf
cmp
push
mov
xchg
ret
data16
repnz
test
test
cld
nop
jmp
xchg
sub
add
pop
lds
add
nop
es
cli
push
xchg
pop
and
nop
cld
nop
jmp
adc
adc
add
stc
nop
es
adc
pop
add
add
stc
nop
es
int
sub
add
add
nop
cld
nop
jmp
jp
add
add
add
cmpsb
xchg
call
stc
nop
es
and
mov
add
nop
cld
nop
jmp
add
mov
mov
mov
push
push
mov
xchg
ret
or
in
cli
xchg
xor
mov
hlt
inc
add
stos
add
add
add
adc
cld
nop
jmp
call
xlat
pusha
cmp
push
mov
test
add
xchg
add
add
pop
add
add
xchg
add
stc
nop
es
or
and
push
stc
nop
es
add
add
add
add
sbb
cmp
and
add
and
pushl
push
mov
xchg
ret
add
xchg
xchg
and
add
stc
nop
es
jo
roll
nop
movsl
cmpsb
fwait
add
push
mov
xchg
ret
or
and
inc
sub
cmp
inc
add
in
and
in
push
stc
nop
es
add
mov
pusha
add
mov
decl
fildl
xchg
ret
xchg
pop
or
jo
or
stc
nop
es
xchg
add
xlat
xchg
cmp
stc
nop
es
add
xchg
add
in
ret
stc
nop
es
jp
add
mov
add
outsl
test
push
mov
xchg
ret
add
push
pop
stc
nop
es
add
add
icebp
and
add
nop
es
std
add
data16
or
nop
es
jo
clc
ljmp
std
std
stc
nop
es
cmp
add
xor
pop
add
stc
nop
es
xchg
add
mov
stc
nop
es
add
add
add
mov
mov
xchg
ret
add
xor
add
stc
nop
es
add
mov
inc
add
cmp
out
jp
loop
push
push
mov
xchg
ret
add
test
cld
nop
jmp
xlat
xor
jo
and
push
mov
xchg
ret
cmp
mov
xchg
push
inc
add
nop
es
add
sub
add
add
push
push
mov
xchg
ret
addb
add
add
xor
mov
stc
nop
es
ljmp
cwtl
push
stc
nop
es
add
xor
mov
call
cmp
ret
repz
xor
add
nop
cld
nop
jmp
add
mov
add
shl
aaa
lret
adc
add
nop
es
loop
add
sub
nop
es
push
jg
pusha
call
jns
nop
cld
nop
jmp
pop
jp
data16
xor
mov
nop
cld
nop
jmp
inc
jg
ljmp
xchg
cltd
je
stc
nop
es
or
add
dec
nop
cld
nop
jmp
and
xchg
add
leave
add
stc
nop
es
xchg
add
loop
int
repnz
xor
stc
nop
es
fildl
pusha
aam
loop
add
lods
xor
stc
nop
es
add
or
xchg
pushf
add
stc
nop
es
add
add
xchg
add
nop
jmp
add
repz
fsubr
add
add
nop
cld
nop
jmp
add
add
push
jl
push
mov
xchg
ret
cmp
sub
jg
mov
mov
stc
nop
es
repnz
cmp
movb
add
stc
nop
es
or
add
xchg
inc
or
mov
xchg
ret
add
xchg
or
sbb
jmp
in
add
mov
xor
add
dec
mov
stc
nop
es
add
mov
stc
nop
es
fcoms
xchg
aam
mov
nop
cld
nop
jmp
add
add
es
jb
jg
add
inc
lcallw
nop
es
mov
mov
mov
xchg
ret
ljmp
gs
call
stc
nop
es
add
add
or
es
add
xchg
mov
cmp
pop
push
stc
nop
es
loop
std
out
fadds
xor
add
nop
es
add
add
shl
in
add
push
mov
xchg
ret
xchg
and
and
adc
add
nop
es
pop
repnz
sub
push
mov
xchg
ret
lret
add
jp
pop
mov
stc
nop
es
add
stos
inc
add
push
mov
xchg
ret
add
ss
test
movsl
nop
cld
nop
jmp
in
add
add
cmpl
nop
jmp
add
or
jne
stc
nop
es
clc
add
mov
xchg
ret
add
add
in
and
xchg
int
movsb
push
mov
xchg
ret
cmp
mov
xchg
fstl
outsl
out
inc
add
push
add
mov
adc
add
add
repnz
add
sarb
enter
jb
cmp
int
cmpw
stc
nop
es
lret
mov
add
nop
es
adc
inc
mov
or
push
imul
stc
nop
es
or
pusha
add
sub
mov
xchg
ret
fildl
add
or
add
push
loop
add
add
mov
xchg
ret
jg
pop
add
mov
stc
nop
es
sub
add
xor
bnd
stc
nop
es
add
add
das
not
push
mov
xchg
ret
xlat
add
clc
pusha
add
stc
nop
es
dec
lret
xor
xorb
jmp
stc
nop
es
xchg
and
push
insb
insb
stc
nop
es
add
add
stc
nop
es
add
add
add
cld
nop
jmp
add
add
cmpl
nop
cld
nop
jmp
push
in
add
add
or
nop
es
add
add
data16
mov
jb
dec
add
add
mov
call
nop
es
call
stos
add
stc
nop
es
out
mov
out
add
divl
nop
es
xlat
pop
rcll
add
pop
and
nop
es
inc
clc
mov
mov
stc
nop
es
loop
add
xor
stc
nop
es
adcb
mov
add
mov
dec
nop
cld
nop
jmp
xchg
int
call
ret
add
add
repnz
add
add
add
call
jb
inc
xor
add
inc
add
ret
stc
nop
es
add
lea
add
movsl
jg
stc
nop
es
add
inc
inc
add
add
adc
nop
es
mov
cmp
add
nop
cld
nop
jmp
ljmp
repnz
jb
inc
pop
mov
add
in
clc
mov
stc
nop
es
push
push
stos
xchg
stc
nop
es
add
xor
mov
add
nop
cld
nop
jmp
add
add
popa
stc
nop
es
std
add
mov
insl
test
push
mov
xchg
ret
add
aam
xlat
mov
nop
es
add
xchg
clc
xchg
test
cmp
es
add
xlat
clc
add
mov
xor
add
stc
nop
es
add
mov
xchg
ret
add
add
mov
stc
nop
es
add
add
dec
repz
lds
add
nop
es
loop
pop
adc
mov
xchg
ret
xchg
add
ljmpw
nop
es
sub
out
add
add
repnz
jge
movb
mov
xchg
ret
add
xor
ror
ja
nop
cld
nop
jmp
xchg
add
rep
xor
push
mov
xchg
ret
add
ljmp
cs
stc
nop
es
add
add
adc
out
shll
nop
es
xor
pop
aam
xchg
inc
add
push
stc
nop
es
fildl
lret
add
mov
add
stc
lea
stc
nop
es
cmp
adcb
repnz
nop
es
addb
add
ljmp
jb
pop
add
xchg
add
mov
adc
nop
cld
nop
jmp
in
xchg
add
inc
pusha
add
add
mov
jmp
stc
nop
es
add
les
stc
nop
es
add
add
xchg
addb
mov
stc
nop
es
call
jle
jne
stc
nop
es
sub
xor
push
stc
nop
es
add
data16
sbb
nop
cld
nop
jmp
add
xchg
push
add
loop
add
mov
nop
es
add
xchg
in
xor
add
pop
ljmp
add
add
push
stc
nop
es
inc
xor
push
xchg
insl
add
push
mov
xchg
ret
add
add
in
div
nop
cld
nop
jmp
add
add
roll
xlat
and
sahf
jne
nop
cld
nop
jmp
add
pop
push
mov
xchg
ret
add
add
int
add
stc
ret
nop
cld
nop
jmp
add
add
inc
and
add
push
mov
xchg
ret
add
add
add
test
mov
stc
nop
es
add
add
add
les
nop
es
add
popa
scas
mov
stc
nop
es
jp
jp
push
mov
xchg
ret
clc
add
add
pop
stos
dec
inc
nop
cld
nop
jmp
xchg
mov
add
test
nop
cld
nop
jmp
or
add
add
push
push
mov
xchg
ret
loop
fstpt
add
mov
mov
push
nop
cld
nop
jmp
fmuls
add
jg
fwait
test
nop
cld
nop
jmp
add
jg
add
add
stc
nop
es
xchg
mov
cmp
out
add
test
call
nop
jmp
add
int
mov
movsb
stc
nop
es
mov
pop
stos
xor
mov
stc
nop
es
mov
stc
nop
es
int
xchg
xchg
push
data16
push
mov
cmp
add
add
add
mov
cmp
mov
stc
nop
es
and
push
fisttpll
mov
add
nop
es
xchg
and
cmp
cmp
nop
es
cli
fdiv
push
push
push
add
push
mov
xchg
ret
mov
fdivrl
stc
nop
es
cmp
add
mov
stc
nop
es
add
jp
cmp
lcall
inc
add
pop
out
add
push
mov
xchg
ret
add
add
add
push
mov
xchg
ret
std
jo
repnz
jle
stc
nop
es
add
add
add
push
mov
xchg
ret
add
mov
mov
nop
cld
nop
jmp
add
and
add
mov
nop
cld
nop
jmp
and
add
es
roll
add
cwtl
jmp
stc
nop
es
add
add
nop
es
mov
add
xor
es
add
add
add
and
nop
es
std
and
fisttpll
test
lock
stc
nop
es
jp
mov
mov
xchg
ret
sub
out
add
mov
popa
add
nop
es
xchg
xchg
push
add
test
std
push
push
mov
xchg
ret
add
add
inc
add
roll
push
mov
xchg
ret
add
stos
push
mov
xchg
ret
add
xor
data16
pop
push
stc
nop
es
stos
xchg
int
add
inc
and
nop
es
fdivrs
dec
fcomi
add
mov
mov
orb
call
clc
inc
jo
pop
cli
add
stc
nop
es
dec
xchg
add
jmp
add
nop
cld
nop
jmp
or
jp
jb
pop
push
mov
xchg
ret
add
add
or
sbb
nop
es
jp
add
add
add
jmp
stc
nop
es
mov
mov
xchg
ret
jb
dec
cmp
rep
stc
nop
es
int
xchg
xchg
xchg
xor
test
mov
xchg
ret
add
add
imull
xchg
cmpl
movsl
add
data16
in
mov
stc
nop
es
add
add
mov
stc
nop
es
push
std
add
loope
add
or
add
popa
mov
push
mov
xchg
ret
xchg
cmp
jb
mov
stc
nop
es
add
add
add
stc
nop
es
xor
inc
add
bound
fstl
mov
xchg
ret
xor
out
push
adc
mov
stc
nop
es
add
fisttps
jb
xchg
xchg
inc
push
push
sbb
cld
nop
jmp
add
add
add
dec
mov
push
mov
xchg
ret
add
xchg
add
mov
push
mov
xchg
ret
xchg
stos
add
pop
add
stc
nop
es
xchg
mov
add
int3
pop
push
mov
xchg
ret
jo
cmp
add
add
push
stc
nop
es
sub
xchg
add
and
xlat
nop
push
add
ret
enter
call
cld
ljmp
fistl
add
mov
xchg
ret
xor
mov
es
and
add
and
nop
cld
nop
jmp
sub
inc
in
add
nop
cld
nop
jmp
add
add
add
or
mov
stc
nop
es
add
cmp
cld
nop
jmp
add
add
add
stc
nop
es
pop
repnz
cmpsl
fs
nop
jmp
add
xor
add
incb
inc
add
mov
call
stc
nop
es
add
add
mov
scas
mov
stc
nop
es
add
add
add
jo
cmp
nop
cld
nop
jmp
mov
and
add
push
mov
add
add
pop
cld
add
add
cmpb
lds
add
inc
add
xlat
int
add
pop
add
nop
cld
nop
jmp
loop
add
cmp
sbb
loop
nop
cld
nop
jmp
sub
add
sub
cld
nop
jmp
mov
add
mov
repnz
nop
es
xor
sub
stc
nop
es
repnz
repnz
cmp
into
call
and
jp
and
bnd
loop
push
mov
xchg
ret
add
clc
add
shll
stc
nop
es
adc
out
add
nop
es
sub
push
push
mov
xlat
push
call
push
mov
xchg
ret
mov
add
sub
add
aam
inc
add
xchg
inc
add
stc
nop
es
xchg
add
mov
sub
add
stc
nop
es
cmp
aam
push
mov
add
add
add
fdivrp
add
cmpl
nop
cld
nop
jmp
lret
add
mov
cmp
nop
cld
nop
jmp
lret
std
add
es
add
add
add
add
add
push
mov
xchg
ret
repnz
add
rcll
and
daa
mov
inc
stc
nop
es
add
les
stc
nop
es
xchg
add
cmp
add
dec
push
mov
xchg
ret
addb
add
popa
add
mov
xchg
ret
add
add
cld
pop
push
mov
xchg
ret
std
repnz
add
mov
jb
add
call
add
loope
nop
es
data16
int
add
ja
mov
push
mov
xchg
ret
jg
push
repnz
fimuls
jb
add
add
add
inc
add
add
add
stc
nop
es
dec
xchg
jo
into
mov
push
mov
xchg
ret
add
data16
lret
repnz
movsl
out
push
mov
movsl
aaa
add
jle
test
add
lret
neg
or
hlt
or
mov
xchg
ret
aam
cmp
and
cmp
es
sub
add
add
push
mov
xchg
ret
repz
mov
add
add
stos
shr
stc
nop
es
add
add
cmp
stc
nop
es
ss
in
in
cmpl
nop
cld
nop
jmp
add
lret
add
add
fisttps
es
xchg
repnz
add
movzwl
nop
cld
nop
jmp
push
mov
xlat
add
add
gs
nop
es
shll
ljmp
jb
rcrl
out
lea
nop
es
add
data16
add
nop
es
lret
mov
pop
call
out
sbb
sbbb
or
repnz
icebp
addb
xchg
stc
nop
es
add
add
mov
push
mov
xchg
ret
cli
add
pop
stos
pusha
add
stc
nop
es
add
or
call
jne
stc
nop
es
add
xchg
add
dec
nop
cld
nop
jmp
mov
call
add
stos
push
mov
add
xor
jb
popa
enter
add
push
stc
nop
es
add
add
pop
add
and
cld
nop
jmp
pop
pusha
add
or
adc
rep
stc
nop
es
std
add
push
add
push
adc
add
test
nop
es
xor
sub
movb
add
stc
nop
es
add
add
sub
stc
nop
es
and
jb
mov
testb
cmp
ret
sub
mov
loop
or
add
add
nop
es
add
jb
mov
stc
nop
es
add
inc
add
add
movsl
push
loopne
sub
es
data16
add
add
cmp
jmp
repnz
lret
stos
les
cli
cmp
nop
cld
nop
jmp
mov
insl
add
stc
nop
es
std
push
cli
adc
cmpsb
imul
je
pushl
cmp
push
mov
jne
inc
add
add
add
add
mov
nop
cld
nop
jmp
pop
add
inc
repz
add
mov
push
mov
xchg
ret
add
jo
repnz
mov
push
stc
nop
es
add
add
pop
add
clc
mov
nop
cld
nop
jmp
adc
add
dec
mov
stc
nop
es
add
push
insb
cmp
nop
cld
nop
jmp
add
jecxz
lea
stc
nop
es
xchg
cli
add
cmpsl
ljmp
inc
add
add
fadds
add
add
nop
cld
nop
jmp
add
fistpl
nop
es
adc
add
add
mov
cld
nop
jmp
xchg
add
jg
mov
mov
rcll
loope
add
add
xor
es
add
dec
add
fldt
add
stc
nop
es
add
loop
movzwl
stc
nop
es
add
stos
pop
mov
stc
nop
es
xlat
out
add
xchg
push
ds
nop
cld
nop
jmp
add
jg
mov
jo
xor
sub
inc
add
add
cli
mov
es
add
or
push
ret
push
push
mov
xchg
ret
aam
add
int
cli
ds
nop
cld
nop
jmp
mov
fistl
add
test
cld
stc
nop
es
add
sub
nop
es
add
movb
xchg
nop
es
bnd
mov
mov
xchg
ret
or
or
stos
jne
stc
nop
es
clc
xor
mov
stc
nop
es
subb
add
xchg
aam
jmp
stc
nop
es
add
add
mov
add
stc
nop
es
cmp
push
add
data16
out
mov
stc
nop
es
xchg
in
add
in
xchg
pop
mov
push
mov
xchg
ret
and
mov
add
stc
nop
es
cmp
add
add
cmp
nop
es
call
mov
add
xor
stc
nop
es
add
xchg
add
popa
lods
sub
nop
cld
nop
jmp
repz
pop
stc
nop
es
add
add
xchg
push
test
nop
cld
nop
jmp
add
lret
push
jae
mov
call
add
xor
add
push
nop
cld
nop
jmp
repz
add
push
imul
es
ljmp
stc
stc
nop
es
add
add
loop
stc
nop
es
add
dec
add
xor
push
mov
xchg
ret
add
add
add
mov
xchg
push
mov
xchg
ret
add
add
jnp
sar
nop
es
addb
add
cmp
mov
push
mov
xchg
ret
pusha
and
inc
jg
faddl
add
nop
es
add
add
stc
nop
es
mov
jp
jo
jle
call
xor
inc
add
add
pop
add
mov
cli
push
mov
sub
cli
add
sub
push
add
ss
xor
stc
nop
es
add
dec
add
or
mov
adc
nop
es
add
add
nop
es
or
mov
add
add
es
mov
pop
add
xchg
push
pop
call
stc
nop
es
jo
add
test
mov
push
mov
xchg
ret
repz
insl
jb
nop
cld
nop
jmp
add
adc
dec
lea
push
mov
xchg
ret
xchg
addb
push
and
es
or
add
pop
and
nop
cld
nop
jmp
add
push
jg
adc
adc
cld
nop
jmp
ss
add
cmp
nop
cld
nop
jmp
mov
ljmp
call
nop
cld
nop
jmp
mov
cmp
add
nop
es
add
mov
sbb
push
mov
xchg
ret
inc
xchg
add
add
or
stc
nop
es
sub
add
lea
stc
nop
es
add
add
cld
nop
jmp
or
add
data16
add
push
mov
xchg
ret
fadds
data16
adc
adc
pusha
add
push
stc
nop
es
mov
add
add
in
addr16
jb
xchg
loop
add
mov
fcomp
inc
add
stos
add
push
mov
xchg
ret
add
add
xor
push
nop
cld
nop
jmp
lea
add
mov
xor
push
mov
xchg
ret
add
mov
push
push
mov
xchg
ret
adc
sarl
mov
stc
nop
es
push
xchg
nop
inc
xor
push
mov
xchg
ret
mov
add
mov
mov
nop
es
xchg
xchg
push
inc
xchg
add
xor
push
mov
add
outsb
mov
dec
mov
jge
mov
dec
ret
add
cltd
push
mov
lret
pop
add
stc
add
push
sbb
in
mov
push
stc
nop
es
add
add
cmpsb
add
add
nop
es
add
jl
popa
add
nop
es
add
xchg
add
or
mov
stc
nop
es
sub
repnz
jb
pop
add
push
xchg
add
push
pushf
push
mov
mov
add
mov
xchg
in
test
nop
es
cmp
xor
push
mov
call
in
cmp
add
add
push
mov
xchg
ret
fildl
pop
add
cmp
test
stc
nop
es
add
mov
pusha
std
inc
add
cmp
sub
mov
cmpb
call
add
pop
stc
nop
es
xor
out
cmp
add
pop
add
stc
nop
es
inc
add
xchg
stc
nop
es
add
add
and
incb
nop
es
add
jg
lahf
push
stc
nop
es
add
repz
out
push
push
stc
nop
es
xchg
sub
add
or
add
add
nop
cld
nop
jmp
lea
add
dec
imul
nop
cld
nop
jmp
xchg
add
mov
call
nop
es
add
jb
mov
sar
es
jp
lret
jo
std
jo
add
jb
add
add
fcmovnu
add
sbb
xchg
hlt
stc
nop
es
sub
add
mov
nop
cld
nop
jmp
clc
pusha
xchg
add
mov
sar
es
sub
add
pop
stc
nop
es
add
xchg
add
add
imul
mov
xchg
ret
repz
add
add
push
repnz
cmp
cld
nop
jmp
add
repz
jb
mov
push
mov
xchg
ret
call
add
jmp
nop
jmp
mov
add
cmp
mov
cmp
mov
xchg
ret
jp
push
add
fdivrs
jecxz
or
es
xchg
add
xchg
add
mov
mov
sub
dec
jmp
add
add
add
push
mov
xchg
ret
add
out
add
jp
imull
enter
jb
xchg
jo
lret
and
jo
xor
mov
nop
cld
nop
jmp
xchg
add
or
stos
stc
nop
es
add
inc
add
add
adc
push
xor
xor
add
stc
nop
es
inc
add
in
aam
call
call
inc
pop
add
mov
nop
cld
nop
jmp
add
jo
jb
add
cli
mov
stc
nop
es
add
add
mov
mov
stc
nop
es
fildl
std
add
mov
add
push
mov
xchg
ret
lret
add
lret
ljmp
nop
es
xlat
add
and
stc
nop
es
push
cmp
xchg
add
add
lea
nop
cld
nop
jmp
add
aam
jb
std
fs
push
push
mov
xchg
ret
stos
mov
add
adc
jno
xchg
dec
add
stc
nop
es
add
mov
add
and
stc
nop
es
cli
add
jb
dec
adc
cltd
mov
nop
cld
nop
jmp
inc
xor
mov
add
es
add
xchg
loop
mov
icebp
fs
push
nop
cld
nop
jmp
xchg
stos
and
test
pop
stc
nop
es
add
add
std
std
mov
test
push
mov
xchg
ret
add
add
mov
stc
nop
es
mov
data16
add
and
push
mov
xchg
ret
add
push
add
addr16
popf
shr
push
mov
xchg
ret
add
xlat
add
mov
mov
stc
nop
es
add
add
mov
repz
cmpsl
je
cmc
mov
jb
push
add
push
add
add
rep
stc
nop
es
ljmp
dec
jne
stc
nop
es
add
repnz
in
inc
add
add
das
or
add
daa
pusha
add
xchg
shll
dec
fs
call
sbbl
add
je
or
outsb
push
cld
sub
cmp
repnz
insb
test
inc
add
sbb
mov
out
inc
dec
or
jg
arpl
fcomps
sub
mov
lret
fs
add
pop
sbb
mov
pushf
addl
cltd
imul
lcall
out
jmp
out
pop
jne
lahf
push
loop
clc
sbb
add
pop
pusha
add
cmpsl
jg
daa
out
adc
fwait
loop
push
mov
inc
add
mov
add
sub
adc
jno
add
in
aaa
pop
jp
add
mov
or
lcall
cli
movsl
scas
stos
movb
js
push
and
fs
fcomi
adc
xchg
repnz
ret
inc
add
lcall
loopne
rolb
add
add
push
pop
int
xor
pop
and
addb
xchg
cs
add
xor
loope
pop
dec
xor
jne
jge
stc
aam
popa
or
cmp
and
fiadds
push
mov
mov
je
dec
call
add
fstpl
adc
add
mov
jns
nop
pop
pop
mov
test
fimull
jbe
jmp
add
mov
sbb
loop
fsubl
push
mov
push
add
push
sbb
pop
push
aad
xor
xchg
sub
in
enter
js
outsl
movlps
push
hlt
and
mov
mov
popf
add
fwait
aad
fwait
lahf
dec
test
cmp
pop
sub
add
les
mov
jne
lahf
inc
add
stc
jbe
dec
sbb
add
add
mov
rolb
lahf
xchg
and
mov
clc
sbb
sbb
cltd
out
int
xor
sub
add
xor
mov
adc
adc
add
cmpsb
add
push
ljmp
popf
js
mov
lods
js
jmp
and
shlb
sbb
add
push
cmp
imul
dec
cli
cmovae
ja
out
or
jae
pop
jmp
test
lods
inc
dec
stos
or
ret
mov
or
in
iret
mov
les
jle
incl
add
in
out
nop
aam
add
adc
and
sbb
sbb
dec
pop
jg
in
cmp
lds
jo
cmc
sbb
pop
loope
mov
push
gs
stos
jecxz
jns,pn
or
loope
push
clc
xlat
out
push
movsl
icebp
and
add
fildll
sbb
push
xlat
add
add
adc
ja
cwtl
daa
pop
cmc
addr16
test
add
add
add
xor
sbb
sub
jecxz
fnstsw
cmp
stos
xchg
std
push
jbe
and
call
push
and
xchg
push
fidivrs
repz
fmulp
data16
jae
add
add
sbb
xchg
dec
ret
movb
xor
loopne
addb
add
ret
sub
pop
out
inc
lahf
xchg
gs
pop
gs
mov
sbb
mov
call
mov
adc
add
jne
or
test
lods
cmp
add
xchg
and
mov
push
fcmovnu
es
add
and
sarb
pop
adc
fldenv
movsb
sub
or
add
inc
add
sti
and
dec
imul
push
movsb
push
lods
bound
ficompl
lret
adc
popf
sbb
lods
out
add
inc
movb
sub
mov
imulb
loopne
inc
add
lods
xchg
inc
add
xor
cmp
movb
add
hlt
mov
add
cmp
test
cmp
xlat
je
movsb
sbb
inc
xchg
out
push
push
push
test
popf
idivb
push
jb
ret
add
popl
fwait
mov
add
sahf
cmp
or
data16
sahf
stc
mov
push
ficompl
and
arpl
test
imul
cmpsb
orl
out
mov
icebp
sub
loopne
lods
rcl
stos
adc
cs
mov
call
and
mov
ret
cmp
aad
out
jbe
addb
mov
cmp
jbe
sbb
dec
sbb
shll
inc
add
add
xchg
or
stc
sbb
jbe
jmp
fs
and
cmp
lods
rorb
loope
int3
inc
push
jo
stos
rolb
popf
out
ficoml
lods
pop
mov
leave
test
add
in
jno
insl
stos
adc
shrb
inc
jmp
sub
shll
iret
test
jmp
scas
test
add
pop
lods
lret
xorl
stos
jp
push
daa
icebp
push
or
sub
sub
cltd
mov
add
add
outsl
loopne
xor
dec
sub
loop
repnz
or
dec
push
add
insb
lcall
scas
dec
mov
xor
add
cli
add
scas
xchg
stos
leave
fcoml
int3
mov
sub
mov
enter
mov
into
mov
repz
mov
sub
sub
es
insl
push
addb
outsb
xchg
cli
std
mov
add
push
lahf
lea
sbb
imul
jecxz
xchg
int
inc
cmp
cmc
inc
lds
mov
xchg
cmp
push
xor
in
sub
mov
or
or
xchg
lods
aaa
in
loope
dec
or
adc
mulps
mov
mov
add
mov
sub
adc
xchg
add
daa
js
jnp
dec
jp
cmpsb
call
std
jne
push
loope
stos
arpl
into
testb
fisttpll
jb
es
inc
cmp
test
xchg
inc
add
add
sti
sub
repnz
add
xor
fidivl
in
adc
enter
lea
pop
jl
add
cmp
enter
mov
aam
add
mov
ss
imul
nop
mov
xor
flds
pop
scas
fs
add
inc
add
push
fadds
fmulp
push
ljmp
pushf
or
mov
inc
movb
addr16
add
inc
xor
inc
add
test
and
mov
repnz
je
out
mov
add
inc
add
and
push
fdivs
push
aaa
jp
insl
adc
mov
int3
out
jae
lock
push
pop
aam
cmp
insl
lcall
mov
add
push
xor
mov
cltd
xchg
testl
stc
mov
push
setge
jne
xchg
xor
add
jnp
pop
cmp
or
sub
add
jmp
add
add
enter
xchg
xor
test
jl
mov
rolb
lcall
inc
add
cmp
mov
pop
cmp
les
add
inc
stc
pop
sahf
xchg
jbe
ret
enter
daa
cmp
out
mov
cmp
push
dec
insl
sar
popf
je
or
aad
add
lock
pop
xchg
lods
es
xor
jbe
popa
xorl
add
add
and
outsl
mov
loopne
out
or
add
popa
cmp
data16
test
sub
mov
mov
sub
pop
mov
mov
je
cltd
xor
and
pushf
stos
arpl
or
sub
jmp
lcall
adc
xorl
addb
mov
cmp
loope
add
call
or
xchg
lahf
or
into
lret
int3
fisubs
cmp
push
or
inc
mov
fdiv
stos
stos
pop
je
outsl
testl
mov
mov
cli
div
push
mov
xor
pop
sub
outsl
in
or
aas
hlt
pop
ja
lret
inc
repz
mov
cwtl
or
int3
in
inc
add
addb
icebp
dec
adc
xchg
push
mov
push
add
decb
xor
es
scas
jecxz
bnd
sub
hlt
or
aaa
jmp
lret
push
jns
xchg
out
xchg
sbb
faddp
add
push
push
addr16
scas
cmp
jg
jno
or
mov
and
lahf
imul
inc
add
xor
cmp
inc
addb
adc
ljmp
insl
movb
sub
pushf
addr16
add
fidivrl
int3
jb,pt
arpl
add
jp
movsb
sub
add
mov
inc
add
pop
stos
push
or
je
int
add
lret
or
add
inc
lahf
imul
cmp
gs
pusha
add
and
mov
aam
and
jmp
sub
fldt
adc
inc
add
rol
add
push
stos
arpl
icebp
or
mov
push
xor
dec
mov
and
inc
add
mov
add
jp
mov
xchg
pop
pop
inc
add
pop
ret
mov
add
jnp
outsb
fs
js
mov
add
test
cmc
mov
rcl
in
xor
jle
xor
add
out
call
repz
popf
mov
add
or
jb,pt
sub
int
arpl
or
sbb
adc
dec
add
xchg
add
or
mov
add
fsubp
addb
push
jnp
cmove
in
fldt
repnz
xor
cmp
test
pop
addr16
pushf
mov
loope
popf
xlat
outsl
or
aam
sti
mov
loopne
jp
repnz
scas
mov
lods
outsl
dec
mov
lds
cmpsl
das
test
imul
jb
int3
push
jecxz
xchg
inc
add
clc
pop
sub
pushf
lret
xchg
jge
adc
jp
scas
vmread
inc
add
outsl
sbb
hlt
jecxz
push
pop
mov
jne
icebp
sbb
add
fiadds
cli
mov
fidivrs
add
sbb
mov
mov
add
fisttpl
rolb
fwait
rolb
das
and
inc
xor
sbb
repnz
rorl
loop
fnstenv
mov
or
adc
test
lcall
lahf
cmpsl
dec
adc
mov
add
test
in
jns
test
mov
loopne
aas
lahf
mov
mov
outsb
cmp
int
lods
pop
test
fdivl
scas
int
or
jp
and
mov
out
data16
in
xor
mov
dec
movsb
cli
pop
pop
push
lret
fs
adc
xor
loopne
movsl
outsb
or
lahf
inc
add
imulb
in
cmpsl
sbb
cmp
call
and
jl
add
addb
add
pop
xchg
and
loop
cld
push
sub
fs
jl
adc
ljmp
stc
in
stc
cli
pop
and
inc
das
dec
push
push
adc
inc
es
xlat
mov
jp
jae
mov
and
sub
stc
jge
and
push
pop
stc
cmc
or
push
addr16
testl
cmc
and
rolb
xor
add
sub
inc
rcl
pushl
add
add
inc
xlat
dec
ds
sbb
add
sbb
jo
cmc
pop
les
pop
fisttps
je
xchg
sub
mov
push
mov
sub
shll
test
xchg
mov
sub
mov
add
pop
sub
jecxz
loop
scas
push
add
fnstcw
pop
jne
jecxz
cmp
mov
dec
in
ss
dec
push
in
lahf
jecxz
loope
add
push
jbe
mulb
test
mov
jecxz
mov
es
in
popa
enter
clc
or
jo
sub
bnd
movl
fidivrs
int3
lahf
mov
ret
outsl
and
jg
das
data16
shl
pop
push
add
xor
jmp
fwait
mov
sub
iret
aam
nop
xchg
sub
and
fstpl
lds
ljmp
into
mov
mov
popa
jle
loop
and
add
movb
das
scas
mov
cmpsl
fsts
xchg
outsl
jb
stos
adc
adc
mov
cwtl
xor
imul
push
cmpsl
jnp
jns
fmull
fdivr
insl
cltd
cmp
cmp
sub
and
lea
rorb
fmul
popf
rcrl
adc
loopne
outsb
mov
or
nop
add
daa
jno
mov
aaa
inc
add
adc
mov
or
in
xchg
lods
xor
mov
repnz
push
add
mov
sub
imulb
in
adc
popa
and
xchg
test
jb
pushf
cmp
vhsubpd
cwtl
fnsave
xlat
mov
in
ds
imul
or
cmp
popf
mov
test
lds
rolb
add
push
aam
pop
loop
imull
push
inc
add
mov
testl
xchg
inc
lods
pop
adc
xor
loope
push
mov
jnp
mov
test
or
dec
cmp
dec
arpl
add
stos
fs
popa
jo
or
rcrl
fwait
out
add
jns
inc
lahf
xchg
addb
add
aaa
aas
jmp
push
push
push
cmc
cmp
jae
fcomp
adc
insb
in
dec
out
lret
and
jbe
mov
add
dec
sbb
adc
mov
sbb
inc
add
in
and
mov
pushf
and
cltd
ret
lds
xchg
das
cmp
fwait
dec
dec
xor
push
xor
popf
mov
mov
cmp
jbe
jmp
jg
popf
push
pop
sbb
cmp
dec
sbb
push
inc
add
sahf
addr16
xor
popa
push
push
orl
jo
stos
push
mov
in
sbb
mov
stc
dec
inc
dec
pop
inc
enter
add
inc
xor
add
xchg
push
lods
xchg
inc
add
mov
xchg
popf
pop
scas
je
push
rcr
pop
std
jno
push
push
inc
add
out
dec
lret
sub
lock
or
add
aam
cmc
mov
add
and
adc
pminsw
cmp
ljmp
test
adc
es
push
mov
leave
ljmp
mov
fstl
decl
mov
adc
xor
add
lret
adc
dec
jbe
addb
sahf
dec
jl
lret
pop
mov
and
ss
or
sbb
add
jle
clc
mov
sub
jno
imul
cs
test
dec
sbb
stc
idivl
sbb
jg
and
imul
mov
cmc
cmp
lret
fdivr
sahf
das
outsl
inc
add
ljmp
mov
add
sahf
pop
movb
mov
adc
clc
shll
add
test
jle
add
xchg
lds
and
ljmp
jno
aad
shlb
or
cmpl
pop
loop
call
rolb
mov
add
sub
pop
dec
and
lea
addb
les
leave
cmp
lret
xor
add
mov
lds
int
lock
sub
and
mov
inc
mov
cmovo
aad
call
mov
pop
fiaddl
adc
addb
test
dec
test
cmp
call
xor
cmp
cmp
int3
xor
inc
imul
dec
rclb
add
xor
and
add
addb
pusha
add
dec
popl
push
dec
or
add
out
adc
jl
jge
inc
add
xchg
lcall
fisttps
sub
mov
in
cli
add
repz
adc
pop
lahf
insb
in
jmp
add
jl
push
jge
icebp
xlat
pushl
or
mov
in
jae
adc
xor
push
mov
insb
int3
xchg
jo
inc
add
add
and
mov
lcall
and
jmp
dec
pop
mov
es
das
mov
ljmp
addb
xchg
jmp
mov
cmp
mov
jg
pushf
cmp
psrld
xchg
xchg
sub
mov
addb
mov
ljmp
cmpsb
fdivr
lock
sub
xor
or
lock
mov
xor
jmp
xlat
mov
inc
add
add
out
push
insb
hlt
stos
in
enter
imul
into
jnp
or
call
test
and
popf
xchg
sbb
add
mov
dec
inc
add
lahf
cmp
xchg
pop
imull
xchg
test
inc
add
and
jne
add
outsb
add
mov
pop
int3
lret
mov
jb
dec
outsl
test
pop
mov
into
push
lods
out
add
jbe
cmp
inc
add
xchg
add
movb
aaa
sub
adc
pop
sub
fadds
pushl
dec
int3
mov
and
xor
push
test
cmpl
dec
inc
out
and
push
and
addb
pop
sub
push
xor
popa
pop
ret
mov
lods
xchg
in
stc
sbb
xchg
or
sub
sti
out
or
push
jb
loopne
ret
mov
imul
rolb
pop
mov
mov
cmc
mov
add
add
hlt
lret
sbb
sti
jmp
out
xlat
stos
mov
pop
fisttps
sub
fiaddl
pop
mov
mov
cld
pop
negb
push
cmp
out
push
test
xchg
int3
nop
jb
mov
icebp
mov
bound
sub
stos
xchg
push
pop
xchg
xchg
icebp
lret
into
cmp
movb
lods
clc
mov
add
lea
mov
push
sti
inc
add
sub
popf
mov
mov
add
lods
cmpsl
lods
das
mov
inc
es
fstpl
xor
add
imul
popf
ljmp
popf
pop
mov
add
mov
addb
mov
add
push
mov
jecxz
jmp
mov
int3
pop
das
shll
dec
cwtl
adc
stos
outsl
iret
out
push
loope
mov
mov
cltd
xor
inc
add
std
sub
add
imull
std
and
or
les
fldt
mov
out
inc
stc
rolb
add
xor
std
cs
add
insl
cmc
popf
and
and
test
mov
sti
cwtl
sub
adc
mov
test
sbb
mov
xor
push
push
daa
data16
xor
lret
or
pop
out
or
and
loopne
test
push
and
iret
sbb
lods
xchg
aad
cmp
push
mov
addb
mov
pop
ret
sti
inc
pop
mov
fnstenv
movb
cltd
sub
int3
xchg
fwait
cmpsb
adc
lock
add
cmpsl
lds
cmovo
aad
ret
dec
xchg
push
add
ficomps
jae
push
arpl
push
cmpsl
fisubs
add
add
movsl
sbb
test
xor
int
push
push
loopne
stos
and
or
add
test
sahf
adc
jb
mov
in
aam
dec
aam
mov
test
lods
mov
add
hlt
shll
cmp
loope
jge
xchg
sbb
test
ds
adc
lcall
push
test
or
std
hlt
mov
imul
repnz
fst
das
jmp
xchg
jnp
jo
loope
test
in
and
cmpl
fldpi
repz
dec
mov
lret
subl
pop
jge
mov
xacquire
ret
push
pushf
inc
add
pop
or
lods
add
push
push
jns
inc
add
push
add
call
arpl
sub
dec
inc
jg
movsl
data16
xchg
bound
cmp
push
add
aad
adc
and
adc
add
cli
fsubp
mov
mov
pop
and
adc
inc
sub
sbb
push
mov
cmpsb
addb
ja
sti
in
add
dec
pop
mov
adc
ds
lods
lods
stos
adc
pop
sub
pop
jle
xlat
mov
mov
outsb
sti
jmp
imul
jns
push
ret
sub
add
adc
sbb
daa
mov
xchg
inc
test
scas
sub
popf
push
jae
xor
bound
sbb
sub
divl
add
scas
lods
xchg
sbb
pop
lcall
or
inc
shrl
and
pop
movb
add
inc
and
fldl
inc
add
test
fcmovnb
add
test
popl
mov
or
loopne
sub
aaa
mov
adcl
pop
sub
add
mulb
sbb
cmpsb
mov
addb
mov
insb
rcr
iret
jbe
push
sbb
rol
ret
movsb
fsubl
insl
xchg
jg
pusha
add
or
shrl
push
push
cmp
lods
nop
jo
adc
cmp
xor
addb
mov
out
scas
mov
push
repnz
aam
or
rolb
xchg
and
mov
or
sbb
push
rcrb
and
ret
xchg
outsb
inc
add
mov
cmp
jo
push
sub
dec
sahf
ret
xchg
shll
nop
in
dec
popa
mov
imul
sarb
sbb
gs
xchg
mov
mov
int
jno
sub
and
mov
ds
cmp
sbb
test
add
aaa
dec
jge
inc
add
aaa
clc
call
add
add
rolb
cs
add
mov
lahf
lea
mov
or
mov
nop
ret
addr16
data16
add
push
pop
jns
xor
add
pop
push
or
dec
ljmp
pop
push
pop
addl
xchg
jl
mov
jb
mov
mov
fcomi
add
and
jp
sbb
outsb
add
out
add
add
cld
pop
jecxz
mov
add
cmp
hlt
dec
or
add
xchg
ss
mov
mov
cli
daa
loopne
insb
and
and
xchg
push
mov
jbe
pop
pop
fs
mov
addb
xchg
push
add
push
scas
sub
add
lods
loopne
mov
movsb
in
insl
negb
testl
jae
push
mov
cmp
and
push
cld
and
and
xchg
xor
insl
xchg
mov
mov
lcall
push
pop
sbb
ss
into
rclb
gs
xchg
sbb
mov
adc
push
dec
dec
mov
stos
lret
movsl
or
sbb
add
cmp
mov
add
aad
xor
xchg
lea
lea
jge
mov
fwait
cmc
jp
loope
xchg
lods
mov
mul
cs
out
add
aaa
xor
add
and
rcll
test
into
bnd
ljmp
xlat
lret
add
mov
dec
sti
fldcw
cltd
addb
xchg
iret
xor
pop
mov
mov
idivl
jno
repz
sub
repnz
xlat
lcall
stos
mov
mov
call
int
aas
stc
arpl
xor
loopne
iret
adc
add
stc
movsb
cmpsl
lcall
imul
setl
mov
jbe
loopne
xor
xchg
push
jno
sub
jl
lods
add
pusha
add
mov
rolb
add
stos
es
lea
rcrb
or
inc
add
inc
mov
insl
cmp
aad
adc
out
mov
repnz
stos
inc
mov
out
adc
add
fiaddl
insb
jle
and
movsb
add
push
mov
push
xchg
mov
pop
sub
scas
insl
notl
xor
xchg
outsb
mov
cmp
mov
ljmp
test
popf
mov
xor
cmp
inc
add
adc
int
inc
repz
and
addr16
dec
add
push
lods
bt
jge
stos
sub
mov
fs
mov
lds
popf
jl
aad
cmp
adc
add
fisubs
or
leave
mov
add
cmpsb
mov
clc
dec
mov
outsl
xchg
inc
fs
adc
push
xchg
add
jge
outsb
popl
mov
push
push
inc
add
clc
popl
sub
movsl
aas
cmp
xchg
sub
movb
jecxz
cs
int3
rorl
ds
jmp
mov
test
jae
sbb
add
add
in
lahf
xor
in
movb
push
cli
xchg
js
jnp
push
pop
sub
push
add
xor
testb
jp
out
add
sbb
mov
lock
xor
sub
inc
movb
out
mov
inc
clc
sbb
dec
push
aaa
jge
or
add
or
in
or
sub
mov
adc
mov
imul
inc
scas
xchg
enter
mov
xchg
add
pop
ljmp
hlt
cmp
cmp
sub
fistps
inc
add
paddsw
xor
mov
push
xor
scas
hlt
xor
add
imul
fcompl
fbld
aam
add
ss
out
jecxz
fucomp
xchg
push
pop
push
push
push
std
scas
fisubs
cwtl
mov
fisttps
xchg
test
sbb
and
adc
add
lahf
je
flds
add
xor
addr16
int
fdivrp
sahf
dec
mov
xor
add
daa
pop
mov
add
mov
out
jmp
xor
in
mov
dec
sbb
mov
push
repnz
mov
xor
loop
stos
inc
cmpsl
popa
sub
mov
add
adc
hlt
pop
cmpsl
ret
ret
dec
mov
add
divb
je
cld
mov
adc
ds
mov
loopne
lahf
dec
push
test
ljmp
lcall
or
rolb
mov
in
mov
push
bound
lea
fsubl
lea
cltd
mov
stc
xchg
cmp
out
push
adc
addb
lds
std
cmp
inc
add
dec
lret
cltd
aad
lods
push
mov
leave
cmpsb
pop
stos
cmpsl
xchg
fisubs
testl
sbbl
add
or
imul
shl
out
or
enter
sarl
push
popa
addl
decb
jns
push
jg
popf
and
popf
je
add
daa
mov
jns
add
mov
jg
jo
movsl
stc
xchg
idivb
mov
add
fcoms
rolb
and
pop
fmull
ret
pop
test
addb
and
mov
lret
sub
out
and
push
test
or
rolb
mov
fsubl
into
outsl
sub
jne
add
ljmp
add
leave
repnz
sahf
jl
out
add
jl
add
cs
ja
cmpsl
mov
xor
push
pop
mov
popf
aas
inc
add
mov
stos
ret
dec
insb
pop
aam
addb
or
es
repnz
ljmp
or
jnp
sbb
pusha
add
mov
insl
jnp
mov
ficomps
mov
imul
lods
ret
fwait
and
jnp
andl
hlt
push
fbld
dec
jmp
inc
iret
mov
xor
js
daa
cmp
cli
add
addb
stc
lret
sub
sub
push
add
lock
movsb
pop
dec
mov
cmp
lods
cmpsb
adc
push
mov
sub
xor
add
or
call
popf
jecxz
xchg
bound
imul
enter
cmp
xchg
pop
adc
addl
rolb
roll
jl
lret
jo
pop
inc
add
stos
pusha
add
fldl
xor
pop
rolb
dec
mov
cld
pusha
add
lret
mov
push
loopnew
sbb
cmpsl
sub
dec
sub
xchg
adc
bound
jae
adc
into
pop
lock
fdivr
imul
lahf
add
ficoml
mov
add
fcoml
add
sub
or
call
repz
inc
leave
push
lcall
scas
sbb
insl
sbbl
pop
in
je
mov
sub
add
idivl
int
roll
scas
mov
cmp
cld
and
xchg
and
fldt
mov
cmp
sbb
add
pop
jb
cmp
push
add
outsl
xor
je
lea
lea
add
add
dec
adc
cmp
inc
inc
test
lcall
mov
les
in
jecxz
je
fildl
push
cld
xchg
add
and
add
fwait
push
mov
lock
lret
jno
dec
nop
lods
int3
movb
les
das
pop
rolb
add
push
pushf
sbb
jl
jbe
xchg
adc
out
xchg
push
adc
cmpsb
loopne
lahf
in
jo
cmp
nop
and
fs
mov
xchg
aad
outsb
data16
mov
inc
add
lock
fcomps
sti
and
and
jmp
sbb
into
mov
and
jae
mov
add
xchg
insb
inc
les
pop
mov
stos
mov
nop
sub
dec
mov
outsb
cmpsb
inc
add
cmpsb
lock
icebp
jp
and
and
nop
xchg
pcmpeqw
rol
add
lods
addb
test
dec
mov
xchg
addr16
add
lahf
cmc
fstpl
sti
or
or
pop
xchg
dec
sti
and
je
push
jbe
add
enter
xchg
xchg
notb
pop
mov
dec
mov
rcll
jbe
pushl
in
mov
add
rorl
xor
cli
cmpsl
iret
xchg
push
adc
lea
int3
add
mov
outsl
pop
jns
adc
add
pushf
sub
and
mov
mov
lret
pop
add
stos
call
mov
into
inc
add
push
scas
and
inc
add
into
fstpt
fldcw
in
cld
sbb
inc
shrb
pushf
in
mov
out
in
and
pop
inc
fistpl
fistl
lods
add
add
jecxz
movl
jl
aam
mov
mov
mov
ret
decl
loope
inc
fimull
repz
sbb
push
out
cmp
pop
inc
add
out
xchg
lcall
mov
sbb
inc
add
loop
add
sarb
mov
leave
and
sti
inc
les
mov
sbb
add
push
add
xchg
aam
mov
test
jbe
xchg
aam
mov
inc
repnz
xchg
mov
sub
jg
fidivrs
ljmp
and
sub
mov
test
jns
ficoml
data16
idivb
sbb
xor
cmp
jecxz
movsl
push
leave
out
mov
int3
fsubl
adc
pop
je
mov
cmpsb
add
add
sub
in
ret
jle
jbe
sahf
mov
addl
xchg
push
sahf
push
call
scas
js
call
adc
pop
mov
xlat
scas
fisubrl
sbb
je
sub
movsl
sbb
int
addb
shr
jl
lea
and
sub
mov
lret
xchg
sysexit
add
cmp
cmp
jnp
xchg
iret
loopne
movsb
pop
push
fcoms
and
adc
or
dec
add
outsl
mov
and
ljmp
test
es
add
sub
int
add
pop
roll
or
shrb
mov
pop
xor
mov
pop
ret
mov
mov
hlt
add
xchg
sbb
daa
mov
add
xchg
daa
mov
mov
push
lods
dec
pop
hlt
add
loopne
add
adc
and
mov
dec
sbb
sub
add
popa
and
xor
imul
bound
xchg
fsubrs
add
or
and
mov
add
orl
or
ret
push
xor
adc
nop
movsb
adc
and
cs
loope
mov
mov
fwait
imul
add
movsl
cmp
fs
add
imul
adc
jmp
iret
cld
mov
and
push
inc
add
xor
clc
aad
push
adc
and
std
je
xchg
ret
push
sbb
add
outsl
loopne
cld
mov
mov
mov
arpl
add
jno
dec
out
lret
dec
lret
inc
add
xlat
stos
idivb
mov
jb
cmovno
pop
in
sub
mov
addr16
and
xor
mov
pop
jge
rcl
out
pop
dec
pop
push
mov
xor
jl
lret
xchg
ljmp
pop
xchg
jge
sbb
in
lret
stos
test
adc
iret
jb
lods
sbb
sti
int
push
sbb
imul
out
loop
xchg
sbbl
add
arpl
fadds
loope
add
dec
mov
imul
mov
add
stos
imul
arpl
xchg
mov
imul
mov
xor
or
pushf
movb
add
outsb
jbe
add
out
sub
sub
adc
cli
and
xchg
testl
cmc
fadds
mov
jp
jbe
mov
mov
lcall
add
aas
mov
fadds
jne
lret
call
sub
ja
in
out
mov
adc
inc
add
mov
add
lds
scas
xor
push
outsl
xchg
mov
sub
or
adc
cmc
push
scas
scas
mul
sbb
mov
addb
cmp
add
push
je
into
mov
adc
fs
mov
xlat
adc
add
imul
scas
xor
les
cmp
stc
mov
push
sarb
xlat
pop
pop
push
add
push
sbb
fwait
adc
dec
and
push
bnd
mov
jg
xchg
mov
xchg
icebp
jno
adc
es
dec
fwait
repnz
sbb
aam
pop
stos
add
pop
pop
jecxz
pop
data16
mov
leave
sub
popf
movsl
push
arpl
dec
ret
sub
call
dec
push
mov
mov
sub
scas
dec
aaa
xor
dec
bound
jge
mov
inc
into
jg
fnstenv
dec
or
mov
lds
pop
jb
sti
jmp
scas
ss
push
inc
cwtl
addb
adc
jns
sbb
add
dec
test
rolb
ja
lods
in
stos
push
in
mov
push
hlt
je
dec
push
loopne
mov
shlb
add
iret
xchg
add
scas
dec
push
subl
insb
and
or
and
jge
fwait
data16
and
in
mov
adc
loopew
adc
xor
ss
movsl
cmp
add
push
xchg
lret
adc
ret
or
movaps
mov
pop
pop
dec
lds
out
fisttpl
cmp
aam
mov
or
out
xchg
cmpsb
jmp
push
sbb
adc
xor
add
xor
imul
inc
dec
outsb
pop
sub
push
pop
xor
mov
sub
in
pop
lret
movsl
mov
jl
mov
add
push
inc
add
mov
xchg
fadds
stos
fwait
lahf
push
enter
jle
mov
ja
or
cmp
add
or
in
jle
testb
mov
pop
repz
dec
pop
int
fiadds
add
sbb
push
mov
pop
sbb
leave
orl
jl
cmp
iret
mov
pop
cmpsb
mov
jge
push
loopne
or
add
fs
adc
add
dec
rcll
dec
inc
add
push
enter
cwtl
cwtl
lret
push
mov
int3
cmp
and
mov
add
daa
pop
into
mov
xchg
cwtl
lods
insl
xchg
out
mov
push
out
cmpl
lret
xor
xor
fisubrs
inc
add
cmp
in
or
aad
fiaddl
add
lods
sbb
jne
add
imul
dec
inc
add
cmpsb
jle
into
pop
movb
add
jecxz
call
cmc
xchg
aas
test
mov
cli
push
movlhps
int
jae
mov
bound
test
add
jae
add
add
mov
loop
fists
xor
filds
mov
push
addb
fnsave
lock
push
and
or
sti
cmp
ds
sbb
out
sub
fwait
loop
gs
jle
dec
je
jmp
and
rolb
inc
add
imul
push
aad
adc
pop
or
add
ss
hlt
mov
ret
cmovp
int3
loope
pop
push
xor
add
pop
sbb
and
je
int3
outsb
int
push
add
rcll
subl
jle
arpl
and
into
inc
int
cmpsb
adc
xor
stos
cwtl
das
dec
mov
add
or
sub
add
cs
xor
or
inc
add
cmp
add
push
add
pop
popf
lret
push
xor
stc
mov
addb
mov
lods
xchg
mov
cli
in
loope
add
fistps
xchg
les
cs
or
add
popa
inc
addb
lret
inc
add
pop
es
xchg
addb
filds
sbb
ljmp
push
add
cmp
dec
and
lret
movb
xchg
in
jmp
std
push
add
dec
xchg
dec
push
jae
test
popf
mov
das
mov
mov
mov
sbb
cmp
aas
addb
push
xor
add
add
mov
inc
imul
push
xor
dec
add
out
orl
dec
pop
and
push
xchg
fdivrs
test
or
inc
xchg
pop
mov
enter
and
and
cmp
mov
sbb
test
cwtl
call
stos
pop
in
sarb
xchg
and
pop
loop
adc
or
add
pop
jge
add
scas
sub
pushf
push
test
xchg
sub
push
stc
ret
push
fsubl
add
mov
pop
jp
aas
fildl
out
jle
insl
or
mov
push
mov
out
xchg
mov
mov
stc
fmull
add
test
mov
sub
test
jae
and
lret
daa
adcl
add
xchg
inc
add
pop
ljmp
jno
enter
rcrl
add
and
subl
ret
add
ret
sbb
or
sub
fimuls
dec
mov
or
cmp
cmp
roll
add
add
add
and
mov
xchg
mov
movsl
adc
enter
aad
hlt
ds
add
shrl
inc
ror
sbb
push
lahf
xlat
out
sub
sahf
repnz
cwtl
rcll
mov
stos
xchg
and
mov
jmp
dec
mov
sbb
je
add
cmpsl
sti
cs
inc
xor
out
and
adc
jecxz
jae
lret
sti
and
lds
pop
orl
add
in
sub
scas
call
nopl
ret
push
sub
movsl
leave
push
mov
insb
and
pop
mov
lods
and
outsl
push
add
jp
clc
xchg
int3
out
sahf
cmp
push
out
mov
hlt
adc
lods
sbb
mov
add
inc
daa
dec
adc
movsl
fistps
mov
add
clc
push
add
imul
test
nop
scas
push
bound
roll
in
inc
and
dec
ficoml
xor
data16
xchg
xchg
mov
mov
add
mov
cmp
test
mov
fstps
mov
jne
in
cmp
mov
adc
test
jnp
xor
xchg
movsb
stos
jp
dec
or
subl
or
or
hlt
cli
mov
inc
add
aam
bswap
add
cmp
push
xlat
and
xchg
mov
gs
mov
add
clc
sub
icebp
ss
fnstcw
movsl
je
push
mov
lahf
add
hlt
jae
xchg
push
add
jg
ret
push
movsl
and
outsl
and
xchg
mov
add
fcmovnb
add
add
jl
and
jae
dec
ror
jo
cmp
push
sbbl
out
and
cmp
add
xor
mov
popa
sti
cmp
out
rolb
movsl
jae
xchg
mov
dec
push
rcll
add
or
push
inc
add
mov
in
add
js
and
and
loop
push
out
xor
data16
cmpsb
cli
std
jbe
dec
lea
cmp
mov
add
adc
dec
mov
aam
fadds
add
fcmovnb
add
cmpsb
xor
popa
pop
adc
lret
stc
scas
scas
stos
or
add
ret
inc
add
adc
adc
push
add
cmp
push
addb
cmp
test
xlat
mov
outsl
test
xchg
pop
sub
das
inc
add
add
add
mov
or
mov
outsl
dec
add
mov
jmp
dec
lods
or
adc
push
popf
mov
lds
aas
mov
call
add
add
push
or
ja
fsts
mov
loopne
rcrb
add
cmp
jbe
inc
add
fsts
imul
push
jne
lods
fwait
aam
sbbl
add
push
mov
or
jne
loop
add
sub
aam
or
mov
and
jo
fstl
icebp
popf
in
jns
enter
mov
sbb
js
ds
jbe
pushf
lds
add
jne
adc
xor
jge
lea
add
push
add
outsl
push
ljmp
push
ss
hlt
fdiv
rclb
insb
inc
add
sub
xor
cmp
lea
dec
shrl
mov
add
xchg
ficomps
add
cmp
xor
dec
dec
rorb
xor
mov
cmp
dec
aad
sbb
repz
add
repnz
and
sbb
or
loopne
cmp
mov
push
add
cmp
push
add
push
movb
dec
mov
pop
xchg
sub
push
hlt
add
fwait
dec
xor
repz
in
mov
xchg
repz
xor
aam
les
iret
test
ljmp
fiaddl
mov
mov
out
lahf
stos
pop
data16
add
jle
xchg
aam
push
addl
inc
and
sbb
mov
add
or
xor
mov
pop
xchg
mov
pop
ss
xchg
cmpsl
aas
dec
nop
sub
and
push
and
pop
in
dec
xchg
cmp
test
es
cmp
or
popa
xor
jae
in
call
ds
mov
pop
cmc
test
cmc
mov
and
push
add
call
lahf
test
fwait
cmc
dec
jns,pt
in
or
pop
ja
fwait
sub
jp
inc
add
jp
jecxz
or
stc
jnp
adc
xchg
mov
mov
sbb
idiv
inc
add
fwait
mov
jne
add
leave
and
add
mov
das
xchg
jmp
ret
xchg
in
jmp
jne
mov
cmp
add
aam
mov
das
adc
add
add
out
mov
xor
xchg
mov
adc
and
int3
adc
add
and
ss
or
add
int3
pop
stos
xchg
adc
test
cld
addb
lods
mov
mov
adc
add
add
adc
repz
sbb
movsl
xchg
mov
sub
mov
shlb
imul
dec
lds
arpl
add
pushf
dec
les
sbb
dec
adc
add
cmp
add
adc
pop
fidivrl
xor
jl
dec
lcall
fwait
jle
addb
mov
sbb
loopne
add
cli
addb
and
call
lods
or
or
daa
xchg
dec
std
jl
je
ljmp
add
mov
pop
sbb
push
shll
and
sahf
popa
cmpsl
repnz
movb
mov
cmp
mov
jle
aaa
jb
push
add
add
js
jle
mov
test
popf
xor
fsubrl
cmp
mov
fcoml
shlb
xchg
push
nop
loopne
sub
insl
mov
cmc
fmul
inc
add
mov
lret
and
in
or
add
add
inc
add
nop
jns
inc
add
pop
xor
mov
pusha
add
mov
xor
cmp
xchg
pusha
add
add
jo
mov
add
sbb
jmp
mov
insl
scas
notl
cmp
ffree
mov
xchg
loope
dec
mov
ja
jbe
rolb
je
jp
xor
std
and
in
or
aas
mov
add
jp
cs
sbb
jo
mov
cmp
outsl
add
fsubrs
jge
xor
nop
pusha
add
jecxz
cs
add
movsb
jle
fwait
movsl
adc
std
inc
push
in
mov
mov
roll
cwtl
dec
add
movsl
mov
in
sahf
test
add
inc
add
add
add
push
cmp
fwait
mov
stc
mov
andl
es
rol
add
les
mov
add
loop
pop
outsl
ljmp
sarb
in
pop
mov
ja
and
adc
clc
xchg
lods
enter
mov
jne
into
sbb
push
clc
mov
xor
jmp
popa
jo
movb
jmp
mov
call
mov
mov
jnp
daa
jmp
mov
out
jp
enter
sti
cmp
add
sbb
add
imul
xchg
fcompl
push
xchg
push
add
cmc
mov
xchg
push
sahf
pop
adc
mov
lcall
scas
bound
inc
aas
clc
pushf
dec
inc
stc
fsts
lock
xchg
iret
decb
adc
clc
scas
sbb
jo
rolb
int3
cld
addb
push
jno
dec
dec
loop
fdivs
add
cs
lea
dec
int3
aas
xor
cmp
test
fmull
sbb
push
imul
dec
fnstenv
add
cmp
push
call
cltd
movsl
pop
in
add
mov
inc
push
negl
push
test
loopne
enter
inc
in
inc
add
cwtl
js
adc
push
pop
lret
imul
mov
test
xlat
cmc
into
jns
mov
add
add
add
sbb
test
icebp
mov
mov
out
push
cs
add
mov
push
push
movsb
gs
or
sub
add
add
inc
gs
add
add
int
andl
add
inc
call
inc
add
push
cmp
int3
jo
add
add
cmpsl
shlb
cld
rcl
xor
test
int3
rolb
or
xor
add
fwait
addr16
add
dec
adc
or
add
mov
fwait
and
cld
xor
sub
aad
aaa
loope
push
jb
cmp
add
fisubrs
lds
in
inc
add
xchg
dec
and
cwtl
popf
cmc
pop
stos
xor
mov
add
add
insl
bound
rcll
movsl
cmp
xor
cwtl
mov
mov
jge
add
pop
jge
cmp
mov
or
mov
mov
mov
pop
icebp
iret
sarl
or
lds
or
xchg
and
sub
sbb
icebp
leave
xchg
jns
mov
or
test
insb
ss
test
cltd
xchg
loope
std
dec
mov
movsb
or
nop
or
rolb
add
pop
cmp
lret
or
mov
jmp
add
cld
test
mov
pop
movl
mov
shl
addb
add
jns
stc
pop
arpl
nop
lods
xchg
mov
and
cs
push
insl
aas
jb
or
repnz
in
add
mov
pop
and
jle
add
cmp
insb
lea
sbb
dec
inc
add
fsubrs
fdivs
mov
mov
outsl
sbbl
mov
int
pop
jbe
sbb
mov
push
add
push
cmp
jmp
pop
ficoml
add
xor
pop
and
out
mov
pop
loope
adc
nop
pop
scas
or
ja
xchg
bound
adc
aaa
mov
jnp
in
push
les
dec
jl
mov
push
and
add
test
rcl
add
add
popl
pop
scas
or
push
sahf
pushf
and
jbe
add
addb
pop
and
les
aaa
sahf
test
outsb
shr
sub
add
push
in
push
repnz
mov
sbb
pop
and
outsb
push
add
insl
test
out
sub
and
filds
add
arpl
inc
ja
lods
gs
push
adc
jbe
and
add
sub
xchg
and
adc
add
pop
lods
or
int3
mov
mov
xor
xor
add
stos
mov
add
dec
into
mov
movsl
into
sbb
xchg
and
mov
mov
stos
lret
sub
lds
out
xchg
sbb
aad
in
lods
cmpsb
mov
fmuls
pop
sub
or
imul
jmp
dec
mov
xor
lock
arpl
rorl
aam
adc
cmpsb
sti
daa
pop
pusha
add
test
cmp
int3
movsb
push
leave
mov
sahf
pop
pop
inc
add
daa
std
mov
push
js
xchg
push
xor
add
jno
xchg
pop
jns
movb
cmp
ret
mov
testb
xchg
jle
rorb
mov
sub
pop
jg
mov
dec
or
pushf
sub
pop
out
mull
int
aaa
hlt
xchg
sub
mov
sbb
add
xor
add
inc
add
cmp
ss
mov
aaa
or
repz
mov
jne
dec
dec
dec
push
push
xchg
not
pusha
add
pop
adc
enter
sbb
fdivs
pop
mov
frstor
daa
cs
jmp
jo
test
inc
mov
jmp
mov
sbb
and
in
add
fldt
jns
xchg
std
xor
sahf
push
push
mov
sbb
sbb
push
inc
add
lahf
mov
add
leave
cmp
add
inc
add
xchg
pop
loop
cmp
pushf
test
pop
ljmp
sbb
popa
test
mov
inc
add
cmc
bound
lretw
xchg
sbb
push
mov
loope
or
fsubrl
outsl
mov
adc
leave
insb
mov
pop
cmp
fcomip
mov
jne
add
lods
push
mov
sbb
ss
sub
and
sbb
icebp
scas
mov
cmp
enter
in
dec
clc
and
jge
sub
add
mov
mov
xor
mov
or
dec
mov
mov
push
jl
jp
and
mov
inc
imul
fptan
loop
adc
cmpsl
dec
mov
jp
xor
or
add
sbb
and
std
or
test
push
pop
add
repnz
mov
pop
xchg
xchg
jbe
add
sti
pop
out
mov
cmc
xchg
insl
push
dec
shr
mov
sub
push
xlat
xchg
sub
std
rcrb
sbb
push
add
adc
add
mov
add
jecxz
cmpsb
es
cmp
ljmp
add
sub
insl
xor
fistps
pop
and
mov
add
mov
add
add
pop
aam
push
stos
aad
addb
or
out
insl
jbe
dec
js
aam
je
jecxz
int3
or
es
xor
or
cli
mov
dec
ja
add
xchg
pop
fcmove
jb
fidivrl
dec
inc
pop
and
imul
ds
ss
dec
gs
icebp
dec
jge
and
in
cmp
movsl
clc
pusha
add
add
movsl
dec
sbbl
jns
xchg
pop
dec
cmp
add
pop
inc
add
stc
jmp
sub
jl
add
push
jl
pusha
add
add
or
clc
js
dec
and
ljmp
movsl
std
rcr
icebp
adc
jmp
or
bound
xchg
jle
lret
xchg
ljmp
add
mov
add
loopne
pop
out
or
loope
push
repnz
pop
xchg
xor
and
imul
push
leave
lods
mov
mov
cwtl
cmpsl
aas
cli
cmp
pop
mov
nop
xlat
fdivrl
or
inc
xor
jb
addb
add
adc
dec
fwait
jmp
negb
pop
ds
fsubs
sub
pop
out
jns
shlb
mov
xchg
push
cwtl
scas
xchg
inc
cwtl
inc
add
add
add
dec
jns
imul
insl
std
mov
in
rcrl
push
rcrl
xchg
mov
ret
mov
or
and
push
xchg
fmul
lods
test
int
stc
ret
jecxz
inc
add
scas
insl
and
negb
sub
dec
inc
add
jge
push
cmpsl
dec
stos
and
pop
dec
subl
lahf
mov
dec
shll
sub
stc
fsubl
add
cltd
xor
add
out
sub
insb
std
fldcw
add
fidivs
sbbl
lret
jge
movsl
sbb
sub
jae
xlat
mov
aad
adc
add
loop
mov
leave
call
mov
shll
roll
cmp
pushf
xchg
sub
lods
repnz
int
stos
pop
rolb
popa
push
push
into
idivl
add
pusha
add
and
pushl
mov
insb
sti
fisttpll
cmp
inc
pop
lret
je
sub
rclb
pusha
add
mov
push
or
das
out
jns
cmp
mov
add
and
ret
sbb
add
and
rolb
inc
stc
xchg
ljmp
jle
push
sub
cltd
out
push
jp
sbb
add
jbe
add
mov
mov
mov
bound
xchg
and
inc
add
xlat
push
das
or
add
jns
fucom
int3
xchg
mov
lock
cmp
xlat
lahf
movsl
stos
pop
incl
aam
stos
inc
add
add
push
inc
add
call
ret
stos
lods
dec
and
mov
scas
scas
ret
jle
mov
dec
sub
mov
lock
push
fbld
pop
cmpsb
out
jg
mov
inc
add
add
add
adc
sbb
das
test
or
loopne
out
push
and
jg
xchg
jl
add
add
inc
add
cwtl
fidivs
jnp
loop
push
rorl
cmpsb
jmp
mov
xchg
out
movb
daa
mov
xchg
mov
push
add
into
pop
xor
jo
inc
add
mov
pop
cmpsl
outsl
test
xchg
dec
pop
daa
xchg
sbb
div
dec
nop
dec
mov
xor
mov
or
jbe
xchg
out
or
dec
dec
adc
add
in
or
insb
lcall
insl
sub
add
iret
iret
dec
adc
stos
pop
outsl
lahf
xchg
icebp
jbe
jmp
add
mov
pop
lea
and
and
scas
cli
aam
std
dec
pop
leave
jne
inc
lcall
jge
adcl
jg
and
es
push
js
sbb
stc
mov
cmp
add
adc
fwait
push
jle
je
mov
lods
cltd
lock
pushf
pop
stos
push
push
sbb
cmc
test
jne
add
repnz
fisubs
or
xchg
adc
fidivs
dec
sbb
in
inc
add
add
inc
add
jg
scas
inc
lea
push
adcl
jb
push
iret
push
add
push
cmp
push
les
shrb
xchg
ret
popa
sbb
vmread
jb
add
mov
dec
jnp
adc
je
inc
dec
sahf
aad
pop
fdivs
out
jmp
in
inc
add
sarl
sbb
add
and
inc
add
cmpsb
mov
fstpl
jns
and
cmp
cmp
out
mov
call
arpl
sub
ja
mov
mov
addb
scas
and
lea
xor
pop
mov
push
add
inc
adc
pop
adc
insb
je
lods
pop
inc
mov
dec
sub
inc
add
and
cmc
dec
dec
add
es
push
lds
cmpsl
idivl
mov
movsb
jns
ja
and
imul
xor
dec
add
mov
inc
leave
adc
call
xor
push
cmc
dec
inc
pop
les
leave
jo
mov
mov
mov
sub
gs
xor
mov
ds
xor
mov
jecxz
add
jnp
jge
frstor
dec
fidivrl
inc
cmp
add
sub
ljmp
add
xor
addb
add
lea
and
xchg
adc
dec
ret
jge
daa
jnp
add
or
push
call
iret
mov
call
xchg
xchg
cmp
imul
std
int3
pop
ljmp
mov
stos
and
jae
mov
lods
pop
aas
sub
mov
into
sbb
cmp
cld
push
jbe
stos
enter
add
inc
add
loope
push
adc
adc
leave
xor
notl
test
mov
data16
push
sub
push
xchg
mov
or
push
mov
push
repz
and
mov
mov
xchg
je
push
adc
xchg
lret
lahf
and
clc
pop
ret
loop
adc
adc
fildll
pop
repz
cltd
stos
dec
push
ret
bound
xor
out
jbe
ljmp
in
xor
jle
ficoml
je
xchg
and
mov
mov
sahf
sbb
loope
mov
fdiv
dec
addb
mov
mov
mov
addb
test
lock
mov
xor
xchg
jg
mov
into
fimull
addb
inc
add
pop
mov
ficomps
sub
xor
sub
mov
sbb
sbb
adc
pop
inc
add
add
or
fbld
or
adc
enter
rolb
push
bound
jae
popa
jae
jp
stos
mov
jae
or
outsb
jl
mov
pop
jno
add
sbb
rolb
out
sti
std
mov
sti
or
add
test
sbb
xchg
repnz
in
sar
add
addb
jnp
fadd
add
mov
test
mov
inc
add
add
into
mov
pop
mov
sub
mov
mov
lcall
xchg
cmpl
mov
aaa
mov
into
cs
xchg
mov
pop
or
or
fisubs
into
pop
leave
push
insl
or
push
pop
inc
add
pop
dec
and
shrl
mov
test
scas
arpl
lret
push
xchg
popf
fsubp
jl
es
mov
mov
icebp
fildll
addr16
popl
pop
mov
mov
or
pop
sahf
insl
xchg
sub
push
xchg
inc
call
xchg
sbb
add
cs
enter
jecxz
add
clc
jne
insl
jnp,pt
repnz
cmp
dec
push
in
dec
es
lea
jae
movsb
dec
hlt
int3
cmp
inc
add
addb
fs
push
leave
mov
daa
dec
icebp
add
push
adc
lea
add
add
gs
fdivl
aam
insl
repnz
clc
adc
push
add
int
pop
add
leave
outsb
enter
cmp
add
inc
add
add
les
fsts
fsubs
int
in
dec
sti
jecxz
add
jmp
mov
jge
push
ja
cmp
movsb
les
mov
mov
dec
adc
cli
sub
xlat
in
sub
mov
fisttpl
lahf
jae
lods
lret
mov
or
into
jns
inc
add
inc
add
push
pushf
mov
xor
and
pushf
gs
repnz
sub
xor
loop
pop
fldenv
das
jge
stos
jne
stos
push
mov
adc
sbb
cmp
sbb
push
idiv
rolb
add
out
lret
mov
stos
xor
fdivl
sbb
gs
xchg
jl
or
inc
add
in
cmp
pop
dec
fisttpll
ret
xor
int3
xchg
inc
add
bound
push
mov
add
repnz
mov
ja
mov
sub
into
aas
pusha
add
and
mov
or
mov
das
push
movsl
dec
and
xor
xchg
outsb
xor
mov
dec
aaa
shrl
popa
fsubrp
mov
fstpl
rcrl
push
add
sub
imul
int
fadds
add
mov
sub
pop
in
lods
pop
mov
pusha
add
inc
jle
fdivs
shrl
cmp
push
adc
gs
ret
cmp
xor
daa
mov
lahf
in
cli
mov
add
dec
add
jo
sub
ss
movsb
fadd
add
bound
sbb
add
adc
cmpsl
jmp
ret
std
sbb
add
les
and
fdivrl
xlat
cltd
out
data16
mov
es
xor
dec
add
xlat
lret
inc
add
bound
xchg
jle
flds
add
jnp
test
es
add
cmpsb
mov
add
pop
out
push
add
stos
sub
mov
test
fwait
mov
sbb
in
ret
aaa
inc
add
fucom
ret
add
add
xor
mov
pop
popf
out
add
lcall
lcall
int
lods
and
push
and
jns
shll
cmp
or
popa
jnp
out
and
aam
xor
mov
mov
inc
add
mov
mov
xchg
outsl
adc
lods
mov
stos
xchg
jg
push
movb
ds
add
adc
sub
ljmp
sub
push
add
inc
add
xchg
enter
xchg
jbe
sbb
xchg
fs
xchg
jnp
mov
bound
mov
and
fisubs
fnsave
ret
rolb
inc
xlat
add
pop
mov
add
cli
orl
mov
ret
cmpsl
sbb
stos
pop
test
jo
add
push
in
adc
add
out
mov
pop
shll
shld
xor
lea
and
push
add
pop
out
or
je
pusha
add
add
movb
jae
dec
insb
scas
outsl
add
pop
cmc
sub
movsb
sbb
in
dec
mov
dec
call
inc
xor
inc
add
jae
mov
inc
pop
cld
adc
add
test
mov
fwait
mov
and
mov
sub
add
movsb
jbe
push
sbb
out
or
add
pusha
add
adc
fmuls
iret
fcoms
jge
nop
mov
rclb
xchg
aas
fistpll
add
out
mov
add
aas
shlb
xchg
js
add
cli
sahf
xchg
dec
imul
jne
fwait
insb
test
loop
xlat
xchg
dec
or
add
cli
in
cmp
mov
mov
rolb
push
fwait
jne
dec
ljmp
in
pusha
add
cmpsb
pusha
add
inc
adc
add
enter
mov
sahf
out
lret
cli
ret
dec
push
dec
int3
pushf
add
lock
xchg
sub
orl
js
push
jne
nop
mov
add
inc
add
dec
psubw
rolb
xor
dec
pop
xchg
jns
add
pushf
xchg
inc
add
xchg
lea
mov
jg
mov
or
cmp
add
cmpsl
cmpsb
and
add
inc
push
push
sub
sub
xchg
incl
mov
push
mov
mov
dec
ljmp
sub
movb
push
xor
pusha
add
aas
test
cmp
pop
test
xor
xchg
inc
xlat
jge
cmp
dec
add
sbb
adc
adc
pop
and
dec
push
js
aaa
test
cmpsb
pop
int
test
push
icebp
mov
pop
push
jbe
adc
mov
sub
add
ja
mov
or
mov
jle
ss
cmp
aam
push
mov
cmp
shrb
movb
insb
leave
rorl
push
dec
cmc
out
in
int
or
mov
push
jne
mov
push
xchg
adc
add
mov
add
push
leave
xchg
mov
adc
std
fucomip
jo
lret
mov
out
xchg
ljmp
sbb
add
xor
fdivs
jno
sbb
push
iret
jnp
popf
sbb
push
mov
adc
sub
movsb
les
pop
add
inc
inc
add
add
mov
or
les
test
sub
jg
add
pop
xor
sub
sub
addb
xchg
jne
mov
sbb
cld
shll
scas
jns
add
dec
dec
jmp
daa
add
add
add
ret
pop
out
aad
add
xor
in
testb
add
mov
in
maskmovq
idivl
push
cltd
outsl
mov
das
push
and
stc
gs
and
leave
enter
jb
mov
inc
add
add
mov
adc
rolb
orl
bound
dec
sbb
into
data16
xchg
daa
jmp
bound
sub
or
addr16
add
xchg
adc
xchg
shlb
add
ljmp
fistpl
lds
mov
test
dec
es
cld
mov
mov
add
dec
sub
imul
dec
outsl
sbb
loope
std
ljmp
inc
inc
add
inc
add
sti
xor
fimuls
leave
xchg
popa
cmp
add
call
add
mov
or
imul
jl
in
aad
fcmovnb
add
inc
add
add
mov
push
scas
xchg
mov
push
out
mov
xor
dec
mov
fisttpl
outsb
push
pop
cwtl
push
leave
pop
dec
aam
ljmp
push
or
dec
mov
push
add
jmp
dec
push
add
lods
cmp
xchg
pusha
add
adc
movb
and
xchg
bound
xchg
sub
dec
lods
ds
inc
out
pop
fxch
jecxz
lahf
or
add
sti
dec
or
mov
xadd
jns
vpshufd
addl
bound
enter
pop
sbb
bound
scas
inc
add
es
stos
mov
add
mov
add
mov
dec
cmp
sahf
or
push
sub
test
or
mov
arpl
xor
xor
cmp
paddusb
pop
dec
add
pusha
add
xchg
iret
in
out
adc
addb
addb
repnz
out
xor
lds
icebp
das
cli
arpl
mov
jns
xchg
jb
adc
cmp
mov
lea
cmp
cwtl
mov
sbb
test
inc
or
test
into
mov
stos
sbb
mov
jb
pop
or
pop
and
push
je
add
sub
xchg
lahf
or
sbb
inc
add
ret
into
pop
mov
jne
and
cli
sbb
lcall
mov
pop
int
xchg
call
and
mov
fs
repz
inc
sub
mov
sub
or
add
loop
and
in
jbe
push
sub
iret
sub
lret
pop
int3
ret
data16
jo
fbld
out
cli
in
jbe
cmp
lds
or
loopne
push
xchg
dec
push
mov
add
in
pop
inc
pop
mov
pop
scas
mov
addl
mov
add
loope
xor
std
aam
std
pushf
test
add
ret
inc
jle
mov
push
not
addb
sub
add
cmpsb
les
push
out
mov
insb
je
add
outsl
call
push
decb
add
sti
mov
cwtl
xchg
xchg
jecxz
popa
add
add
or
ret
test
cs
insb
nop
sti
jl
xchg
sub
pushf
nop
inc
mov
xor
adc
cmp
arpl
cmp
outsb
hlt
sbb
loope
pop
pop
sahf
movsl
jecxz
jmp
mov
incl
cmp
rolb
xchg
cmp
aad
movb
mov
int
lea
xor
cmpsl
mov
push
add
push
insl
dec
push
add
mov
add
mov
mov
add
mov
out
imul
add
push
pop
outsb
icebp
push
push
dec
push
mov
push
insb
sahf
mov
repnz
sub
sti
or
ss
xchg
pop
mov
cmp
mov
test
inc
add
test
out
daa
cmp
aad
enter
mov
mov
cmp
mov
sub
loop
push
enter
scas
ror
jecxz
outsl
pushf
adc
in
push
dec
roll
rcrb
xlat
xor
stc
cmp
aas
les
mov
mov
mov
pop
and
sbb
loopne
inc
add
sbb
add
out
aas
incb
outsb
lods
movb
lret
mov
test
mov
dec
arpl
sub
jns
jecxz
inc
add
rolb
add
insl
gs
mov
pop
sbb
inc
add
dec
xor
inc
pop
mov
push
push
mov
add
pop
addb
out
fisttpll
cmp
and
add
mov
sub
insb
cmp
mov
rcll
ja
repz
xlat
mov
lods
mov
fidivs
out
pushf
xchg
out
out
sahf
mov
mov
inc
add
mov
mov
add
lea
xor
shlb
add
movb
pop
mov
in
or
clc
negl
mov
sub
xchg
cli
dec
dec
push
fisttps
ret
mov
jno
les
pop
imul
loope
popf
in
add
mov
mov
sub
mov
inc
aad
or
sub
dec
sbbl
xchg
dec
fnstcw
inc
add
sti
fs
and
out
divb
je
and
xchg
add
cmp
xchg
adc
pop
pop
jge
inc
add
mov
repnz
mov
cmp
out
mov
pop
dec
xchg
add
cmc
sbb
addb
add
hlt
pop
es
outsl
inc
add
lahf
fiaddl
add
or
xor
fdivl
adc
arpl
inc
add
pop
incl
add
scas
out
enter
fstl
mov
jne
add
dec
les
fisubrs
cmpsl
aaa
scas
xor
adc
imul
mov
push
imul
cmp
ss
add
ficomps
cmc
push
jns
jl
aas
ficoms
movb
scas
int
enter
xor
bound
adc
pop
ljmp
add
lods
insl
jle
or
adc
sbb
mov
xor
in
outsl
mov
pop
sub
mov
iret
xor
dec
pop
pop
lcall
pop
mov
or
mov
mov
jae
push
push
outsb
cs
and
clc
xor
mov
sub
sbb
imul
aam
pop
jg
daa
push
xchg
xchg
add
movsb
cmpsl
std
fldenv
jno
xchg
and
pop
sub
mov
adc
adc
mov
add
movb
and
loop
push
mov
mov
pusha
add
dec
ret
push
pop
sbb
sbb
mov
cmpl
push
add
inc
add
add
pop
pusha
add
push
dec
ret
mov
bound
dec
and
testb
inc
addr16
dec
cmp
mov
rorl
and
adc
pop
mov
push
out
or
jns
mov
dec
jnp
mov
adc
mov
xor
add
lock
jl
adc
sbb
add
cmp
stos
cltd
sti
cmpsl
adc
jp
dec
xchg
dec
or
mov
enter
addb
or
outsb
inc
add
js
lock
push
out
adc
loopne
and
addb
and
push
jl
add
jae
in
out
xor
add
andl
je
mov
aas
lods
and
test
repz
pop
push
push
dec
outsl
inc
add
pusha
add
lods
lcall
ret
rolb
and
rcll
test
aam
pop
mov
add
xchg
cmc
cmp
add
sti
int
xchg
fsubrs
pop
je
inc
add
mov
add
sbb
hlt
jge
enter
dec
fnstsw
adc
cmp
xchg
xchg
dec
rorb
lds
in
adc
xor
fisubrl
mov
jecxz
jl
rorb
orl
mov
bound
xrstors
jge
or
add
mov
dec
adc
push
push
jmp
or
jne
dec
sub
clc
xchg
daa
jle
cmp
mov
add
pop
addb
ret
sbb
iret
mov
or
add
push
rcrb
outsl
jb
push
adc
aas
dec
stc
stos
jno
rolb
add
je
out
add
jecxz
push
sbb
adc
jnp
and
gs
mov
xor
add
push
or
in
divb
daa
aaa
jnp
test
fiadds
add
sub
xchg
test
sub
cmp
or
fucom
fistps
fwait
and
add
add
push
xchg
sbb
out
jbe
jmp
add
add
ja
dec
into
adc
outsb
sub
xor
out
adc
add
bound
add
fdiv
rorl
push
or
sarb
repz
rolb
addb
inc
add
fmull
int3
mov
cltd
mov
add
mov
pusha
add
lods
mov
add
cmp
pop
pop
pop
mov
cmp
add
call
pop
es
sub
cmp
sub
clc
jg
stos
pop
ljmp
mov
add
ss
loop
inc
add
dec
lcall
in
imul
xor
xchg
mov
sub
fwait
mov
std
cmp
mov
imul
pop
lods
mov
mov
sub
sub
ficoml
mov
and
mov
mov
scas
push
add
in
xchg
push
xor
xchg
mov
xchg
xchg
xor
xor
stos
mov
add
pop
push
gs
dec
xchg
mov
add
xchg
mov
xchg
dec
cmp
and
jge
xchg
outsl
scas
lods
sarb
cmp
aad
push
mov
stos
or
push
add
nop
jns
ret
aaa
mov
add
dec
push
cli
sbb
rcrb
fmull
adc
xor
iret
in
mov
adc
xchg
cltd
or
add
fists
enter
push
sarb
cld
cmp
ljmp
movb
leave
mov
or
mov
shrl
mov
pop
sub
inc
add
ss
out
adc
movsl
stc
inc
in
push
pop
std
in
pop
out
dec
push
ljmp
xchg
bound
mov
nop
push
add
xchg
xchg
fwait
and
ret
sub
mov
mov
call
shrl
es
loopne
je
jb
loop
fbstp
pop
test
dec
int3
push
andl
gs
scas
pop
mov
mov
insb
je
rcrb
pop
das
xchg
bound
mov
aad
and
test
lds
ljmp
or
and
leave
dec
xor
push
mov
mov
inc
add
shlb
ret
fstpl
cmp
stos
fwait
add
push
imul
and
ficoms
in
cmp
sbb
imul
pop
sbb
fwait
mov
pop
out
xchg
sbb
rcr
xchg
frstor
mov
sbb
cmpl
push
in
add
outsb
aam
int3
mov
fisubs
iret
xor
dec
add
add
mov
push
dec
in
lret
aaa
inc
add
aad
das
data16
add
mov
imul
sub
movb
shrl
scas
test
mov
cmp
outsl
mov
out
fsqrt
iret
inc
add
das
mov
fisubrs
arpl
test
jp
mov
sbb
es
add
test
adc
rcl
or
jge
dec
daa
push
jnp
stos
aas
pop
push
jb
add
repz
cwtl
xchg
lret
xchg
sbb
sbb
rolb
fs
iret
arpl
sub
lds
mov
stos
mov
je
add
fisubs
cs
dec
xlat
xchg
mov
dec
imul
pop
pop
cmc
sbb
jnp
add
mov
cmp
sbb
lret
mov
mov
xor
mov
or
fcmovne
sysret
or
jnp
add
insl
in
jmp
pop
cmp
roll
add
or
into
out
push
mov
in
add
ret
lds
mov
repz
maxps
add
ljmp
add
dec
mov
sbb
in
pop
lahf
outsl
fdivs
lret
jp
add
sbb
xor
mov
je
add
inc
dec
push
in
fsubrs
add
arpl
das
xchg
and
xchg
popa
fs
in
jecxz
out
bound
mov
loopne
popa
rolb
cmpsb
add
push
inc
add
add
xchg
fstpl
jge
pop
stos
mov
sbb
jmp
cmc
in
addb
mov
ja
dec
lds
add
push
ret
clc
jnp
xchg
inc
add
aas
inc
add
out
in
or
lret
xor
cmp
or
rolb
aam
xchg
movb
dec
ja
rolb
int
lcall
repnz
hlt
rcrl
xor
xchg
cmp
fidivs
ror
xchg
out
sahf
add
cmp
add
pop
addb
add
add
mov
fimull
cmp
add
cli
or
push
push
aam
push
lret
test
popa
sub
popf
xor
in
or
push
mov
xchg
addr16
inc
loopne
mov
jnp
in
fwait
stos
fnsave
imull
xchg
jo
dec
cmc
mov
shll
xor
loop
fdivrl
stos
push
out
movb
sbb
stos
clc
scas
addb
push
jmp
push
add
add
rcl
add
pushf
xchg
push
jl
les
add
push
pusha
add
inc
add
rolb
lret
pop
out
add
adc
add
add
scas
xchg
xchg
aas
jne
mov
and
nop
mov
js
in
jmp
adc
pop
add
mov
fwait
cmp
int
inc
add
add
call
and
in
or
call
ds
push
push
gs
push
mov
js
nop
mov
les
pop
movsb
sub
pop
push
push
bound
dec
push
add
pushl
dec
inc
sahf
cmpsb
sub
xor
inc
sbb
test
jb
ds
sahf
xchg
push
cmp
mov
shll
arpl
ss
cld
sbbl
sbb
les
pop
xor
jae
jbe
xorl
or
jb
lods
mov
xchg
or
fldenv
push
in
sbb
jnp
imul
shr
inc
out
push
pop
sub
out
pop
xchg
xor
add
ret
pop
addr16
test
shlb
add
add
stos
das
js
insl
xor
js
loopne
sarb
sub
fbld
fisubl
ljmpw
shll
ret
push
add
sbb
test
pop
outsb
call
out
add
add
pop
aas
sti
and
cmc
ret
mov
mov
add
mov
add
adc
inc
add
mov
mov
xor
jg
dec
shrl
pop
sbb
das
inc
add
sub
jae
in
push
add
addr16
xor
mov
imul
sbb
in
aaa
push
mov
pop
lret
add
mov
fs
test
sub
lock
xor
cmp
shl
scas
addb
shll
stos
stos
and
inc
add
push
mov
jne
lods
xor
dec
fdivl
mov
xchg
test
push
xchg
and
mov
sarb
jo
sub
rolb
jmp
and
hlt
lahf
and
mov
xor
inc
sub
scas
stc
mov
sahf
dec
xor
xchg
and
gs
lahf
ja
add
add
mov
push
and
jecxz
dec
repnz
mov
lahf
ja
inc
sbb
add
jle
repz
xchg
addr16
aad
je
es
inc
xchg
cli
adc
scas
cli
pop
stc
jbe
stos
andl
mov
add
jp
sub
lahf
insl
add
fwait
add
jecxz
ljmp
add
add
add
pop
lock
add
add
mov
das
out
mov
mov
ret
decl
xchg
mov
add
in
cmc
dec
mov
imul
add
jp
imul
push
inc
add
add
jnp
add
and
sbb
stos
cld
xor
lahf
iret
inc
add
int
add
sub
mov
out
pop
inc
fcompl
test
cmp
lea
add
insl
inc
pop
jae
lahf
addl
in
and
dec
xchg
push
add
sub
test
negb
addb
scas
icebp
push
add
adc
xor
icebp
adc
cli
pop
pop
add
pop
push
int3
jb
ret
stos
arpl
in
pop
cltd
ficompl
add
xchg
dec
jmp
enter
mov
cltd
inc
add
mov
imul
jno
push
negl
loop
mov
out
jns
in
adc
add
cltd
test
add
bound
pop
sbb
push
ljmp
add
sahf
xchg
add
insb
in
inc
push
clc
mov
add
leave
mov
roll
mov
fs
xchg
or
or
scas
push
pop
shlb
imul
add
add
xor
and
jg
movsl
dec
adcl
push
add
add
mov
inc
add
scas
xor
sbb
add
leave
sbb
fidivrs
cltd
sbb
dec
inc
add
inc
jp
dec
xor
cs
jecxz
xor
cs
add
test
add
xchg
es
and
mov
dec
lods
push
xchg
jae
fists
add
push
jecxz
xchg
ret
scas
lds
mov
shrb
xchg
bound
mov
addb
sub
add
mov
aaa
imul
dec
inc
mov
loopne
sti
jle
lods
xchg
mov
jae
jnp
pop
js
adc
jns
flds
mov
das
lahf
xchg
popa
and
push
add
jo
push
into
push
in
leave
fiadds
pop
mov
sub
in
add
mov
sub
cmp
jns
jmp
clc
pop
cs
cmpsb
jl
and
cmp
call
std
in
sub
inc
add
mov
mov
pop
clc
shr
pop
jge
jmp
bound
insb
dec
ljmp
fistps
inc
cmp
pop
add
xor
lret
and
mov
cwtl
bound
std
test
adc
inc
add
fmuls
jne
jb
push
cmp
cmp
add
push
jmp
mov
add
mov
out
adc
rclb
stos
stc
push
les
popa
or
mov
insl
cwtl
stc
je
push
add
mov
push
stos
repz
lcall
lds
lret
fdivrp
adc
out
mov
aad
adc
mov
je
popl
loope
adc
mov
mov
std
pusha
add
pop
in
in
mov
sub
add
mov
clc
addb
pop
xchg
dec
aaa
in
in
add
pop
shl
xor
jmp
inc
movsl
in
sub
xor
xor
outsl
rolb
scas
into
mov
pusha
add
ret
sbb
lcall
out
pop
xchg
jecxz
mov
cmp
cltd
pop
mov
and
pop
shl
jbe
clc
jmp
and
es
aad
mov
lock
stc
dec
movb
add
ret
add
add
rolb
add
test
dec
push
jnp
jl
mov
add
push
addb
xor
and
jmp
es
rolb
mov
adc
mov
jo
inc
xlat
clc
nop
repz
add
dec
in
sbb
movb
dec
test
add
jp
add
and
in
push
adc
or
add
divb
or
pop
xchg
jb
xor
mov
sub
iret
iret
add
pop
xchg
inc
aad
cltd
xlat
addb
push
pop
push
jne
cmp
mov
push
or
repz
fidivrs
pop
and
jmp
into
inc
stos
dec
jbe
sub
add
inc
add
lds
dec
fisttpll
xchg
das
adc
push
inc
add
icebp
das
push
inc
repnz
mov
out
push
hlt
or
insb
push
pusha
add
pop
mov
in
decl
repnz
inc
mov
dec
popf
punpckhdq
iret
clc
mov
jb
sub
rcrl
jne
outsb
js
fstps
push
mov
dec
shrl
lods
jnp
lahf
lds
jmp
aam
add
es
sbb
stc
dec
or
in
sti
in
addb
cmpsb
jp
inc
add
je
jno
ret
movsl
sbb
and
jg
aas
mov
jg
mov
xchg
and
sbb
fidivrs
cmp
add
dec
inc
add
jno
jmp
jb
loop
hlt
jns
fiaddl
add
cli
iret
movb
inc
insl
fnstcw
sbb
or
lcall
adc
js
in
add
xor
fdiv
or
xor
pushf
in
leave
sub
jg
or
push
repz
sti
daa
dec
std
lret
pusha
add
jb
in
nop
cmp
lcall
cs
push
cmp
add
mov
push
add
or
add
cli
test
lret
fstl
pop
xlat
js
xor
add
enter
fwait
mov
add
adc
aad
sbb
movsb
lret
jne
push
push
adc
adc
test
xchg
ss
pushf
or
test
sbb
mov
sbb
in
jecxz
pop
mov
add
mov
and
push
add
add
xor
adc
and
add
test
ret
jle
mov
imul
push
stos
popl
jecxz
mov
dec
or
dec
push
pop
mov
jbe
adc
or
sbbl
mov
inc
insl
add
fdivl
cmpsb
clc
mov
push
sub
add
inc
add
dec
cmc
mov
lods
xchg
add
push
pop
fbld
or
adc
mov
fldt
mov
addr16
movb
adc
clc
and
inc
mov
dec
shrb
js
in
sub
xchg
xchg
dec
ss
hlt
and
and
outsl
dec
jmp
add
imul
push
add
add
aad
aam
jno
lds
mov
add
lcall
movsl
jecxz
mov
mov
push
arpl
sub
xchg
and
mov
dec
dec
mov
lods
cltd
jecxz
imul
push
and
or
cmpsb
fdivrs
dec
das
sub
add
pop
cli
cmpsl
hlt
pop
jg
pushf
cmc
inc
ficompl
scas
cmpsb
xor
dec
pusha
add
xor
mov
add
adc
jo
lret
fiaddl
ret
fs
addb
cmc
mov
cwtl
loope
pop
leave
dec
bnd
test
sbb
xlat
pushf
notb
mull
jecxz
mov
rcrb
in
or
push
add
inc
add
loope
adc
add
scas
add
test
loopne
sub
rol
xchg
jp
mov
lds
sbb
mov
fiaddl
mov
mov
lahf
movsb
mov
jnp
rclb
add
pushf
int3
add
xor
rcl
dec
fcmove
mov
sub
add
clc
xor
add
mov
lahf
in
in
jo
fwait
out
or
push
aad
shll
rorl
xchg
ret
jge
pop
mov
xchg
clc
push
add
loope
in
in
ds
jge
dec
fdivrl
mov
sti
dec
jns
push
add
push
xor
add
pop
mov
add
fstpt
lea
ja
movb
leave
add
bnd
popf
mov
scas
xor
mov
pop
test
cmpsb
mov
arpl
arpl
js
cmpsl
inc
add
sbb
sahf
pop
mov
ret
js
mov
mov
insb
nop
out
jmp
pop
mov
in
jno
push
repz
add
insl
push
mov
mov
data16
push
push
add
lock
test
movsb
adc
sub
dec
dec
cmp
in
imul
repz
inc
icebp
repz
dec
jmp
add
or
jbe
fldenv
dec
cmp
push
shlb
sti
jne
push
sahf
cli
inc
add
sbb
test
jne
in
mov
sub
or
jo
cld
aam
and
aad
adc
jae
cmp
mov
inc
add
sub
lret
cltd
xchg
insl
and
rclb
std
fstl
xchg
addb
in
xor
push
xchg
jg
outsl
add
mov
and
into
sub
mov
imul
mov
test
addr16
pop
jb
or
xlat
inc
add
mov
ror
push
jnp
fildll
dec
cmp
dec
push
pusha
add
outsb
adc
cmpsl
xchg
mov
xchg
fucomi
faddl
add
push
shll
repz
clc
dec
aas
sti
jne
lea
rolb
jne
ds
sbb
jge
sub
fwait
xlat
mov
dec
loope
jnp
cli
call
fwait
rol
or
shll
test
sub
add
push
add
test
push
xor
lods
test
mov
add
mov
pop
adc
cmpsb
fmull
dec
fmuls
mov
scas
inc
sub
movb
dec
cmp
or
pusha
add
mov
add
push
into
add
add
jo
xor
shll
aad
dec
mov
cmp
add
adc
sub
es
fcoms
xchg
cmp
call
mov
sub
pop
inc
add
pusha
add
add
xor
cwtl
pop
adc
xchg
call
lcall
rcll
add
data16
ljmp
sbb
and
sarb
insl
sarb
jo
cmpsl
push
push
inc
mov
vunpcklpd
std
cmp
mov
bound
aas
movb
add
jns
repz
adc
clc
sbb
dec
inc
add
out
add
mov
push
jno
inc
add
jecxz
rol
faddl
stos
xchg
jnp
addb
mov
add
clc
loopne
pop
rcr
inc
push
xor
stc
pop
inc
add
ficoml
into
fldt
or
in
xchg
mov
and
bnd
and
adc
xor
leave
and
inc
cmp
pushf
pushf
push
mov
test
jne
mov
dec
adc
loopne
mov
mov
push
pop
mov
mov
sub
xchg
or
into
inc
add
mov
imul
sub
mov
jne
addb
pop
enter
cwtl
imul
adc
push
push
add
movsbl
or
push
xchg
dec
mov
lret
add
add
enter
movsl
movb
out
mov
mov
add
xor
and
mov
add
es
sub
inc
adc
xor
out
das
iret
mov
fidivrl
cli
lahf
aaa
cmp
xor
mov
in
or
cli
addb
xchg
cmpsl
dec
add
iret
jb
add
mov
cmc
cmp
stos
lcall
lcall
add
jl
inc
add
mov
cmp
cwtl
pop
jb
ljmp
iret
cmpsb
mov
mov
mov
iret
mov
mov
pushf
rol
add
lods
adc
sub
mov
adc
iret
sub
push
mov
outsl
mov
or
xchg
leave
jno
std
imul
popf
add
mov
and
sub
push
dec
mov
ret
fwait
mov
add
cmp
mulb
sbb
adc
mov
popa
test
in
add
pop
pushf
and
or
movsb
mov
inc
add
scas
sub
add
mov
push
cwtl
adc
iret
mov
jmp
add
inc
add
data16
arpl
fidivrl
in
call
sbb
jb
lods
test
xchg
lock
xchg
addl
addb
xchg
or
dec
adc
sbb
fs
push
add
mov
mov
sub
cmp
fs
add
add
loopne
add
cmovp
je
dec
loop
jg
test
xor
fidivs
ret
inc
mov
into
js
add
push
vfrczps
lods
jecxz
and
mov
push
xchg
xchg
sub
jmp
dec
mov
out
mov
dec
nop
dec
dec
push
pushf
and
sbb
add
repnz
jge
jle
scas
mov
add
xchg
movsl
ret
cmc
xor
adc
imul
sub
jmp
sti
xchg
pop
jns
addb
fidivrl
cmpsb
xlat
xor
test
xor
mov
add
inc
add
shlb
sub
push
sub
and
pop
dec
mov
les
lea
mov
pop
xor
adc
mov
mov
mov
adc
sbb
in
daa
push
enter
push
inc
and
add
nop
js
mov
jmp
les
jbe
pop
ret
inc
sub
add
mov
mov
push
sbb
inc
add
pop
jb
nop
xchg
dec
mov
sti
es
jmp
jle
add
out
mov
xlat
ret
add
jne
jnp
dec
dec
pop
inc
lret
push
into
addb
inc
add
push
sub
frstor
or
cmpsb
in
outsb
mov
mov
pusha
add
mov
add
aas
or
add
push
test
mov
pushf
hlt
movsl
stc
xor
jge
cmp
cmp
mov
cli
cmp
addb
shlb
cmp
xchg
jnp
dec
jne
in
pop
es
aaa
shll
or
testb
sub
outsl
cmpsl
sbb
dec
iret
sahf
es
jnp
and
ss
push
outsb
addb
xchg
adc
sub
add
leave
call
mov
add
cmp
mov
add
addb
add
int3
pop
push
fdivs
lods
into
lods
pushf
jb
sbb
add
pop
das
pop
addb
push
jno
adc
add
ss
adc
testl
pusha
add
add
mov
ret
cld
xchg
mov
xchg
scas
loopne
jb
pop
mov
mov
inc
cltd
pop
mov
insb
push
data16
add
fildl
mov
jbe
adc
or
rolb
outsl
stos
mov
push
add
adc
and
out
je
lods
adc
sar
cltd
push
xchg
pusha
add
add
pop
xchg
or
into
call
pop
cld
adcl
nop
fstp
add
lcall
mov
add
lea
mov
dec
int3
lahf
pop
mov
push
nop
xchg
dec
repz
pop
sbb
jnp
dec
xchg
fwait
rorb
rolb
xchg
ficoms
sub
mov
pusha
add
in
xchg
scas
mov
add
sbb
add
or
es
pop
mov
aad
loope
lods
pop
push
add
mov
lds
sarl
lods
jecxz
mov
sbb
push
cmp
pop
add
mov
sbb
add
xchg
mov
and
bound
adc
rorb
push
xor
test
push
lahf
outsl
fldl
add
insb
add
jne
js
rcl
das
inc
add
adc
loopne
std
jnp
call
mov
and
popf
mov
test
pop
jae
scas
adc
adc
sarb
dec
cli
sub
adc
loope
movb
dec
rcrb
dec
int
addb
push
xorl
les
add
jae
in
pop
inc
sub
lds
inc
add
add
int3
ds
jae
in
aaa
nop
imul
fs
jae
add
adc
jp
nop
sub
add
les
cwtl
leave
lods
insb
das
inc
add
sub
fisubl
fmull
test
call
and
lea
shlb
sub
xchg
dec
or
inc
add
inc
add
test
xor
push
adc
jg
add
les
or
push
jo
sbb
int3
mov
std
jne
imul
bound
movb
sub
insb
cli
add
push
mov
mov
into
pop
jb
inc
add
fisubs
jno
push
and
xchg
adc
add
cmpsb
aaa
rcr
sbb
sti
decb
and
addl
lods
xchg
shrl
addb
or
stc
lds
jnp
or
repz
mov
das
scas
ja
das
daa
mov
add
or
pop
mov
daa
jge
daa
xchg
jge
loope
add
add
arpl
enter
jne
pop
movb
xchg
das
movsb
and
test
daa
ja
notb
mov
dec
or
xor
sub
int3
cmc
lds
cmc
mov
dec
mov
hlt
mov
cs
mov
add
add
pop
lret
outsb
ja
sub
lea
jmp
inc
add
adc
das
jl
aas
pop
xlat
inc
add
adc
and
aas
inc
mov
iret
add
push
add
test
aad
pushl
and
xor
sbb
inc
mov
sbb
cld
lahf
sbb
add
imul
lea
cld
aam
push
sbb
loope
in
add
sarl
lods
xor
or
add
test
call
dec
outsb
and
xchg
sub
cli
sub
push
and
mov
push
in
filds
add
loope
inc
add
sbb
add
lret
repz
lret
push
loopne
mov
imul
xchg
in
movsb
mov
push
add
rorl
popa
or
mov
in
mov
push
negb
xchg
ret
push
add
add
mov
add
and
lds
enter
divps
stc
lret
jg
or
imul
out
cli
pop
sub
sub
and
cs
and
enter
or
add
fistps
add
insb
pop
cmc
xchg
shll
mov
inc
xchg
adc
cmp
ljmp
xchg
pop
dec
fisttps
rorl
mov
pop
addb
int3
or
cmp
test
daa
and
add
sbb
bound
jno
add
jmp
bound
push
mov
jne
addb
xchg
xor
jo
pop
push
adc
sub
nop
aas
mov
xchg
lods
pop
pop
cmp
add
mov
add
adc
jno
jne
mov
jge
pop
cmpsb
xor
clc
movsl
fadd
cmp
insl
adc
mov
mov
fstpl
dec
fisubl
lds
repz
rolb
loope
stos
mov
mov
cld
or
add
add
dec
ret
mov
inc
add
sbb
and
dec
mov
mov
loopne
cmp
in
mov
pop
gs
mov
and
add
mov
inc
inc
xor
add
or
mov
cmpsl
xchg
sbb
in
sub
mov
inc
add
xchg
xchg
lods
je
cs
ds
push
dec
test
pusha
add
lcall
add
outsb
loopne
lret
sub
stos
addl
dec
jno
gs
testl
push
add
sbb
loopne
aam
mov
hlt
pushf
cmp
pop
ljmp
mov
cmp
fmull
aad
and
aad
std
lock
sbb
sarb
add
jl
cmc
and
ja
push
or
xchg
loop
xchg
gs
bound
xor
mov
and
pop
repnz
add
dec
push
adc
repnz
fnstcw
test
stos
xorl
sbb
cmc
leave
addb
pop
sahf
xchg
mov
or
xlat
ljmp
add
jbe
int
in
fistps
cmp
xor
jnp
popa
xchg
loopne
xor
test
xchg
addl
iret
out
test
add
xor
into
rolb
aaa
push
loope
mov
adc
xchg
out
ja
divb
mov
cld
and
mov
dec
pop
lds
jp
push
xor
addb
mov
out
xchg
dec
lock
mov
arpl
and
mov
je,pn
adc
adc
pop
fildll
xchg
xchg
fildll
or
pop
push
mov
pop
out
dec
pop
aam
sbb
add
xchg
insl
push
call
pop
fstps
mov
movsb
les
jbe
das
jecxz
jmp
xchg
test
add
inc
and
push
jl
mov
add
cmpsl
call
cmp
pop
xor
fs
push
imul
scas
adc
fidivrl
test
nop
lcall
push
stos
mov
fidivrl
iret
push
addb
addr16
jl
fisttpl
xchg
mov
jg
mov
mulb
mov
mov
cs
clc
mov
add
ret
call
cltd
ja
xchg
xor
jnp
and
pusha
add
loop
sub
fisubrs
addr16
pushf
int
sbb
test
push
xor
add
adc
add
out
mov
jne
lret
mov
jg
fs
push
aaa
andl
in
jns
xchg
jp
add
add
jbe
repz
push
lods
leave
push
negb
insl
imul
test
std
movb
mov
dec
sub
fdivl
stos
imul
std
and
ja
rcrl
or
cld
or
pop
stos
xor
js
push
mov
orl
xlat
or
in
or
test
xor
mov
aam
out
lret
xchg
pop
mov
inc
add
sarb
test
pop
lcall
outsb
cli
and
add
mov
jecxz
inc
movsb
fisttpl
dec
clc
cli
xor
movsb
mov
xor
xor
mov
cmp
into
ret
cmc
add
add
into
push
out
xchg
dec
adc
imul
mov
sub
dec
fst
mov
inc
add
mov
nop
jo
ret
js
bound
adc
les
and
lcall
sti
and
stos
gs
mov
mov
popa
dec
fstpt
lahf
iret
int3
pop
mov
and
addr16
sbb
cmpl
lods
sar
mov
loopne
dec
movsl
pusha
add
addb
xchg
aam
pusha
add
jg
scas
int3
cli
subl
pop
fdiv
xlat
in
add
bound
imul
fcomps
mov
int
in
sub
cmp
pop
jb
add
inc
add
test
pop
repz
mov
add
in
and
add
push
xchg
mov
or
pop
insb
sub
mov
ret
cmpsl
dec
inc
adc
icebp
test
mov
pop
sub
addb
shll
push
fnstcw
lahf
sub
adc
testb
in
xor
test
cli
fwait
cmpsb
cmpsl
xor
xchg
insb
xlat
and
add
add
fnstcw
add
es
aas
mov
xor
push
add
jae
inc
xchg
pop
fsqrt
mov
fbstp
inc
add
out
add
pop
out
leave
or
jno
cmpsb
aas
or
and
xor
jo
fsubrs
lods
xchg
and
pushf
mov
in
in
movl
daa
shll
push
into
popf
stos
jle
cmc
in
fsubr
lcall
cltd
ret
fisubl
cmpsb
mov
dec
or
mov
sub
push
nop
sub
loopne
or
mov
and
sbb
mov
add
out
mov
sbb
xchg
lea
jbe
in
add
int3
mov
es
dec
imul
xchg
add
insb
pop
lods
bound
fsub
cmp
xchg
loop
ret
adc
fucom
xchg
push
ret
dec
sahf
pop
pushf
fcomp
push
mov
sub
pop
fnstcw
movsb
fs
inc
add
add
inc
inc
jmp
aaa
pop
mov
push
xchg
popa
sbb
pop
mov
add
sub
insl
movb
xchg
add
sbb
test
adc
fwait
push
push
xchg
into
roll
sbb
scas
cmp
lods
jg
in
ret
cmpsl
sbb
jle
inc
push
mov
sti
movsb
pop
icebp
pop
jnp
andl
loope
addb
inc
add
lds
mov
dec
sbb
or
outsb
mov
mov
hlt
sahf
and
add
sub
mov
mov
dec
sub
add
mov
and
add
ss
add
lods
sbb
add
mov
pushf
sub
cmpsb
pop
mov
add
xor
jge
fwait
pushf
loope
adc
inc
aam
ss
scas
aaa
mov
and
ljmp
xor
add
add
loop
add
xchg
stos
das
cmpl
cmp
add
adc
add
ljmp
fwait
push
add
adc
fwait
js
dec
inc
lcall
fildl
xor
lods
call
push
add
adc
rolb
aaa
fcoms
inc
add
xchg
mov
mov
inc
jl
ficomps
add
jno
lahf
sbb
add
in
je
pop
das
fdivrl
mov
repz
mov
add
popf
jge
sbb
sbbl
mov
adc
js
mov
add
imul
add
fnstsw
dec
mov
inc
add
arpl
and
jbe
jecxz
push
ljmp
fmuls
or
xor
add
out
imul
push
test
jmp
mov
stc
dec
jg
or
add
and
sti
test
test
jg
mov
lahf
sbb
popf
mov
dec
test
xchg
sbb
les
sti
jae
or
sub
popa
aam
imul
xchg
add
jmp
int
ds
imul
out
sub
cmpsb
movsb
lahf
fldenv
popa
push
dec
repnz
leave
sub
shr
sub
lea
add
dec
pop
pop
push
adc
cli
shrl
ss
add
outsl
out
jb
stos
int3
mov
addb
add
subl
dec
std
jg
xchg
js
add
dec
into
mov
mov
xchg
jp,pt
and
nop
jb
popa
in
out
outsl
scas
xchg
jbe
test
inc
add
lods
jecxz
cld
dec
jno
nop
xchg
lds
mov
popf
iret
sbb
rolb
xor
test
inc
nop
das
mov
test
rorb
jle
jbe
int
aas
stos
test
cmp
addr16
mov
pusha
add
mov
dec
mov
inc
add
mov
xor
nop
pop
inc
mov
push
mov
add
in
out
pop
ljmp
add
out
fcompl
jo
push
push
pop
or
xor
xchg
ljmp
ficoms
lret
pop
mov
loopne
xor
outsl
xchg
nop
sbb
test
insl
pop
pop
rclb
mov
mov
inc
dec
dec
lea
mov
and
sbb
jl
stos
cmpsb
stos
stos
cmpsb
and
and
jns
mov
in
push
pop
xor
mov
dec
in
pop
inc
add
mov
cli
lahf
or
out
into
sbb
and
movsb
scas
cmp
jl
push
icebp
push
out
cmp
cmp
jb
call
in
jno
add
mov
ljmp
addb
add
sbb
add
stos
imul
call
add
add
cmp
gs
xor
insb
jecxz
cmp
sbb
adc
mov
sub
dec
scas
adc
inc
add
cmpsl
pop
or
mov
mov
inc
mov
push
nop
adc
hlt
aad
push
push
add
mov
and
xchg
push
jg
inc
ljmp
ret
push
xchg
cmpsl
stos
dec
or
lods
mov
scas
stc
mov
cltd
es
pop
push
outsl
or
sub
push
push
sub
cmp
add
adc
fmull
lcall
inc
ficoms
mov
add
cmpl
mov
out
into
inc
bound
daa
dec
icebp
xor
dec
lock
fistpl
dec
loopne
push
cmc
push
leave
and
add
add
push
imul
mov
addb
sbb
add
push
add
mov
mov
out
dec
sub
push
in
push
insb
popl
inc
cmp
inc
add
insb
div
mov
adc
inc
add
inc
add
lock
adc
sahf
push
pop
insl
into
aaa
mov
jnp
add
adc
sahf
rolb
adc
add
sbb
jb
push
xor
ds
and
mov
idiv
imul
pop
add
and
fidivl
and
scas
int3
addb
sub
mov
test
mov
mov
dec
dec
popa
pop
imul
jo
scas
push
cmp
fcompl
push
sbb
push
cmp
out
cmp
mov
ds
lret
repz
negl
xchg
adc
sbb
cmp
es
mov
add
push
or
stos
popf
push
addl
xchg
lret
idiv
cmp
int
rorl
es
aam
pop
sub
or
add
push
adc
push
jp
popf
adc
aas
push
cwtl
popf
mov
adc
mov
lods
loope
mov
pop
in
push
mov
js
and
sbb
sbb
add
cltd
lcall
dec
push
not
cmp
data16
push
scas
add
pop
test
xchg
or
pop
je
xor
xchg
mov
xchg
mov
cmp
mov
cmp
std
pop
mov
push
push
cli
cmp
mov
int3
rclb
or
mov
les
repz
sub
mov
cld
movb
mov
in
in
or
xor
roll
test
inc
add
out
sti
cltd
imul
add
mov
push
enter
sub
cwtl
jne
int3
push
out
mov
mov
xchg
js
add
loope
xchg
mov
bnd
push
mov
xor
test
daa
pop
push
insl
enter
and
stos
out
xor
in
jnp
push
aad
insl
sub
gs
sub
sbb
or
adc
inc
pop
push
pop
iret
xor
arpl
fcmovnu
iret
mov
jno
adc
mov
js
jl
aas
test
in
addb
jg
pop
hlt
leave
pop
in
std
cmp
or
js
mov
fs
dec
pop
push
adc
lock
es
pop
pop
addr16
insb
jecxz
mov
dec
sarb
cmp
add
rorl
scas
cmp
cmp
add
cltd
out
add
mov
daa
pop
ds
js
fstpl
jae
xor
pop
rcll
stc
add
arpl
add
xor
js
jne
mov
mov
fcmovnu
dec
fcmovbe
pop
inc
add
loopne
and
push
push
inc
add
sbb
add
inc
sti
and
push
or
mov
mov
and
cli
pop
sub
xchg
add
mov
xchg
push
call
aas
popf
xchg
adc
call
inc
add
test
ss
dec
stos
je
add
inc
add
and
sub
dec
sub
stc
ljmp
add
add
hlt
test
orl
add
pop
xchg
jbe
xor
push
xchg
rolb
imul
scas
jmp
rcl
add
lods
push
sbb
xchg
imul
jmp
test
pop
std
lock
mov
add
jp
xchg
int
dec
mov
add
jno
sti
push
shrb
imul
mov
leave
pop
jge
add
adcl
lret
roll
outsl
movsb
enter
mov
bound
xchg
lods
mov
fildll
cltd
mov
std
pushf
sub
and
iret
popf
inc
add
sub
add
add
ret
dec
ds
mov
xor
and
cmp
sahf
jmp
inc
add
add
inc
lea
outsb
xchg
push
addr16
fistpl
and
cmpsl
inc
add
and
sub
mov
mov
inc
idivb
cmp
mov
dec
xchg
add
rolb
xor
jl
in
scas
enter
add
push
ljmp
add
dec
jmp
jno
add
int3
adc
add
cmp
mov
xchg
adc
push
jmp
mov
inc
outsb
ret
xor
dec
mov
outsl
pop
lret
push
lds
pop
and
cmp
lock
ss
sub
add
clc
and
cmp
xchg
mov
arpl
jae
lods
xor
mov
fdivl
das
xor
std
imul
inc
dec
test
jae
filds
xchg
or
loope
call
push
testl
lods
test
bound
push
fisubrs
loope
and
add
int3
daa
out
xchg
cmpsb
xchg
sub
call
or
pop
test
lds
push
jne
push
or
nop
jne
sbb
addb
inc
add
fiadds
jmp
push
aas
aam
stos
ret
cmp
lret
data16
or
outsb
mov
xor
daa
jae
out
fst
pop
cmp
add
cmp
loop
sbb
jae
int3
aam
add
xor
jb
int3
movsl
rolb
push
daa
xchg
sahf
call
mov
mov
loop
scas
xchg
rorl
ror
fstl
repnz
imul
loopne
pop
lahf
jl
mov
test
adc
mov
pop
lds
add
ss
sar
jp
mov
out
les
in
fidivrs
sub
fisubrl
and
dec
int3
aaa
sbb
addb
and
push
add
ljmp
in
push
dec
push
inc
mov
cmpsb
inc
mov
mov
rolb
lock
fptan
jecxz
or
push
dec
fistps
icebp
mov
les
or
ss
into
mov
pop
xor
push
cmp
inc
fimull
mov
shl
into
fcmovbe
notb
mov
add
add
divb
mov
lods
mov
sarb
lods
out
cmp
test
arpl
jl
rolb
sbb
movb
fcmove
stos
leave
popf
inc
add
dec
lret
mov
or
cmp
clc
mov
lea
je
icebp
sbb
pop
pop
imull
cmp
iret
pop
add
and
les
xor
xchg
jbe
and
stos
lods
lock
xor
cltd
sahf
sbb
or
mov
loop
aas
icebp
xchg
cmp
push
ret
cmp
mov
into
xor
or
xchg
add
xchg
push
mov
pushl
mov
xor
int
add
lods
jnp
or
das
lea
data16
popa
pusha
add
in
fiadds
xor
fidivs
xor
lds
and
jae
scas
pushf
clc
adc
call
out
jnp
loopne
std
ljmp
hlt
jg
filds
pop
adcl
add
xchg
in
pop
mov
push
stc
jp,pn
push
je
lret
jp
icebp
sbb
xchg
loope
jp
push
dec
stc
mov
fs
pop
dec
push
sub
inc
mov
ds
loop
enter
ljmp
mov
icebp
xchg
scas
and
xchg
xor
insl
add
cmp
add
sysret
mov
push
cwtl
pushf
sbb
mov
inc
add
xor
sub
add
and
int
fisttpll
push
or
lods
mov
add
psrad
addr16
stos
mov
push
dec
popf
mov
insl
push
test
xor
sti
jmp
or
test
jno
push
and
add
insl
cmp
outsl
sbb
xor
jmp
pop
sbb
addb
jmp
cltd
insl
stc
lahf
ror
iret
mov
add
dec
xchg
insb
repnz
and
mov
jbe
adc
insl
cltd
out
jp
repnz
movb
mov
outsb
push
add
sbb
inc
lds
xor
dec
idivb
add
stc
jne
push
mov
mov
push
jge
aad
sub
mov
aaa
lret
pop
pushf
cmp
clc
movsb
adc
pusha
add
add
lds
xor
push
push
add
push
jo
sahf
inc
push
lahf
and
pop
ficomps
sbbl
scas
gs
out
out
lock
mov
sahf
in
hlt
jnp
cmp
std
movsb
les
xchg
add
cmp
add
mov
mov
or
cmp
popf
inc
je
decl
aas
bound
mov
add
cld
sub
sbb
push
les
add
popaw
je
ret
push
adc
xchg
data16
inc
sbb
mov
mov
xor
lret
jb
ss
mov
jle
push
js
pop
out
sbb
incl
inc
add
sbb
xchg
repz
add
shrb
aas
inc
add
mov
fwait
xor
nop
or
xchg
xor
fisubrl
stc
imul
fstpl
cwtl
cmp
ss
addr16
mov
sbb
out
stos
inc
add
shl
clc
fwait
movsb
cmp
sub
xchg
dec
adc
push
lock
xor
dec
and
icebp
js
xor
cwtl
push
pop
repz
add
add
sub
jl
xchg
push
mov
pushl
mov
push
add
cmp
jno
add
add
rcrl
jae
add
xchg
push
iret
or
les
xchg
push
xor
or
subl
incb
mov
inc
add
mov
shr
jae
mov
lret
idiv
jge
repnz
or
mov
cmp
stc
out
outsl
lds
bound
iret
sbb
pop
or
xchg
outsb
movsb
stos
ds
lcall
mov
je
xchg
mov
push
lahf
or
inc
add
mov
fildll
pop
add
dec
loop
mov
test
lret
sub
out
pop
jecxz
jae
xchg
xor
fmulp
and
or
push
scas
lock
sbb
test
outsl
xchg
in
add
add
data16
add
xchg
subl
add
pop
stos
addb
mov
add
and
les
push
and
aas
sbb
pop
enter
movb
adc
test
and
jle
roll
hlt
jg
addb
movsb
ret
test
out
inc
jbe
inc
stos
sbb
test
add
and
and
xchg
sbb
or
cld
sahf
jp
add
inc
add
push
lcall
sub
fwait
sub
lret
aad
cmp
xchg
mov
pop
inc
add
add
jb
loope
inc
jle
sub
add
addb
xchg
or
and
lretw
sub
jmp
add
faddl
cld
sahf
test
inc
add
jg
addb
ret
pop
xchg
nop
mov
jae
inc
cmpsl
cld
push
fld
je
movsb
mov
add
mov
pop
sub
dec
inc
sbb
or
test
cmp
adc
scas
scas
scas
ds
inc
add
pop
push
out
dec
lea
jmp
jbe
push
movsb
das
idivl
loope
jg
inc
add
jnp
stos
mov
ds
mov
cli
inc
add
cltd
and
mov
dec
cltd
out
xchg
fxch
imul
pushl
and
repz
xchg
out
out
lods
mov
add
aaa
sub
xor
pop
lret
cld
dec
xor
push
daa
add
sbb
mov
add
push
ds
pop
cmp
add
inc
add
add
add
and
jge
dec
andl
movsl
das
icebp
movsl
fnsave
inc
xchg
mov
bound
cwtl
in
ja
insb
fwait
mov
add
cmpsb
mov
lods
jae
jecxz
or
pop
bound
xor
les
les
adc
inc
add
adc
sub
push
fs
pop
adc
add
es
lcall
loope
pop
push
dec
xor
jecxz
push
add
mov
sub
insb
fst
push
add
push
mov
jbe
push
test
icebp
fisubs
insl
cli
and
jp
mov
mov
push
add
inc
sbb
push
and
adc
mov
pushf
sbb
fs
ja
inc
mov
movsl
popa
inc
add
push
gs
fcompl
and
aad
push
fiadds
test
out
pop
adc
mov
call
sbb
xchg
in
lock
rol
add
scas
jns
add
xor
repnz
cmpsl
cmp
into
in
ret
xor
adcl
dec
mov
pop
mov
jne
aad
pop
xorl
add
aam
loopne
fisttpl
add
jge
pop
cmpsb
xor
addb
lock
cmpsb
ja
and
pusha
add
jg
inc
add
xchg
inc
add
int
mov
push
push
popf
dec
ljmp
ss
pusha
add
std
inc
dec
or
inc
and
push
add
add
pusha
add
sti
xchg
xchg
fcomps
int
add
push
rol
add
add
mov
add
gs
and
dec
adc
jmp
xchg
out
mov
aam
push
ja
mov
fidivrl
xchg
addb
cmpsb
push
pop
adc
sub
out
adc
arpl
scas
rorl
shll
sub
movsb
int
icebp
rorb
ds
stc
adc
mov
xor
nop
insl
inc
add
sbb
adcl
cmp
adc
dec
push
push
cmp
sarl
xchg
or
or
aad
aas
lret
cltd
pop
xor
pop
mov
stos
sbb
sbb
enter
add
mov
cmp
push
ss
add
mov
sti
rcrb
mov
out
jbe
sbb
and
out
pop
int
add
aad
mov
xchg
loope
or
lods
popa
leave
les
aaa
sub
std
mov
mov
jl
dec
inc
add
subl
jbe
mov
mov
mov
sub
test
adc
sbb
add
popf
cmp
roll
fistl
arpl
adc
cmpsl
test
lcall
jbe
outsb
jno
stc
mov
xchg
pop
jmp
or
mov
add
ret
in
sub
shll
jp
inc
add
inc
icebp
loope
out
mov
iret
loope
push
adc
jbe
stc
or
push
mov
xchg
or
movsb
push
scas
movb
sahf
or
adc
push
push
push
pushf
pop
sbb
add
mov
add
mov
repnz
ljmp
add
cmp
pop
das
xchg
dec
bound
mov
jmp
add
imul
xor
inc
add
sub
shlb
add
jp
add
jmp
or
lret
and
aad
lahf
add
fs
fstl
pop
testb
notb
mov
and
hlt
xchg
movb
xchg
sbb
or
pop
mov
outsl
sub
inc
add
int
aaa
add
test
jno
bound
or
mov
xchg
or
inc
ja
add
clc
popa
enter
push
sbb
sti
cltd
jnp
add
adc
push
xor
inc
iret
adc
inc
add
addr16
stos
mov
cmp
mov
pop
pop
xchg
fisttpl
add
push
shll
cmp
test
loopne
mov
movsl
xchg
push
jp
std
fsubl
xchg
leave
push
add
clc
rcrb
and
mov
daa
push
pop
pop
arpl
jns
aam
adc
cmp
sbb
das
pop
cltd
adc
sahf
loop
pushf
addb
sbb
mov
test
mov
inc
add
inc
add
jge
mov
mov
jg
roll
xor
repz
mov
and
adc
sub
fdivrl
mov
cltd
aad
adc
in
scas
pop
push
cmp
jnp
je
aaa
popf
pop
stos
mov
cmp
outsb
adc
fsubr
outsl
mov
into
and
pop
arpl
mov
lret
movsb
addb
arpl
sbb
dec
or
inc
add
into
and
inc
popa
dec
xchg
les
inc
dec
pop
jg
adc
sbb
dec
imul
mov
mov
mov
mov
adc
mov
fsubrl
add
jne
fdiv
add
or
mov
push
test
popf
or
test
ljmp
icebp
les
aas
and
sub
loopne
inc
out
or
clc
insb
imul
js
std
push
xchg
lcall
adc
cld
adcl
push
add
xor
mov
xchg
xor
movsb
sbb
iret
repnz
adc
addb
mov
call
push
cmp
popf
push
out
addr16
scas
mov
sbb
in
xor
pushf
adc
les
jne
loope
or
mov
add
into
sub
imul
or
xor
push
sbb
inc
add
lods
rol
add
cmp
dec
hlt
sarb
dec
jae
ljmp
xchg
jno
xchg
inc
add
arpl
add
jmp
int
cli
frstor
add
sbb
pop
dec
pop
pop
lock
sbb
push
and
add
jg
popf
insl
movb
repz
sahf
cmp
cs
push
iret
xchg
sbb
lret
mov
mov
push
mov
rolb
mov
cmp
or
jmp
add
pop
cmpsl
es
dec
and
movsl
and
jecxz
into
in
imul
cmp
dec
imul
call
push
add
addb
inc
test
adc
cwtl
pop
roll
inc
jo
sarl
adc
and
and
das
add
sub
popf
push
neg
vmovaps
std
test
dec
test
xor
cmc
xchg
dec
aam
mov
add
push
add
lret
movsb
xchg
or
add
test
shrb
sbb
pusha
add
add
scas
mov
pop
xor
sbb
movl
shll
std
movsb
jecxz
add
cmc
enter
test
cmp
stos
mov
ss
xchg
xlat
xorl
mov
stos
adc
xchg
iret
cmpsl
jb
push
xor
add
xchg
adc
and
lret
or
in
pop
fdivr
lds
mov
inc
add
shlb
pop
inc
scas
or
push
mov
mov
xchg
imul
add
pop
mov
out
or
je
iret
push
out
test
or
mov
rsqrtps
imul
cmp
add
dec
or
ret
cld
xchg
call
mov
jae
test
adc
in
sbb
add
test
mov
arpl
add
loopne
shrb
push
gs
jae
out
jl
leave
sub
mov
sarl
addr16
and
adc
adc
push
adc
imul
add
inc
add
sti
sbb
xchg
dec
mov
cmp
mov
adc
push
cwtl
cmpsl
enter
sahf
lret
or
rolb
mov
add
rsm
push
lea
sti
mov
jne
add
sbb
jmp
test
jmp
leave
push
mov
push
inc
add
sub
nop
movb
stos
cltd
mov
pushf
pushf
jg
dec
jns
adcl
mov
inc
add
es
and
movsb
outsl
push
cmp
add
nop
sarl
add
pusha
add
dec
sub
add
push
sti
fmuls
imul
mov
bound
mov
cld
lds
inc
addb
stos
mov
vpmacssdql
sub
mov
mov
and
push
jnp
mov
ss
add
scas
mov
in
std
imul
outsl
jp
dec
inc
in
sbb
add
flds
inc
xor
cmp
xor
sti
lret
jecxz
lea
loopne
cmpsl
xchg
or
out
adc
sarb
mov
cs
scas
addb
mov
push
inc
cwtl
or
add
or
mov
cmp
ret
inc
add
and
mov
es
push
pop
xchg
inc
add
xchg
icebp
jnp
dec
mov
add
pop
imul
insl
mov
daa
loope
testl
dec
mov
xchg
cmp
lret
aaa
push
add
lods
bound
loop
out
adc
jecxz
adc
and
daa
jle
es
cli
xor
je
pop
in
inc
rcrl
mov
cmpsb
cli
scas
in
incl
mov
pop
arpl
jl
dec
sub
dec
scas
ljmp
pop
xor
add
lock
sbb
add
add
xor
mov
adc
call
sub
xor
mov
int
add
test
cmp
add
outsl
adc
or
cmpxchg
in
data16
add
mov
bound
mov
sub
fdivrl
dec
sub
outsl
mov
leave
mov
mov
push
cmpsb
jns
mov
sub
cmpsb
popa
test
mov
add
jmp
adcl
xchg
out
fwait
arpl
in
add
test
insb
jbe
lret
mov
mov
inc
add
cmp
cmpsb
test
imul
mov
adc
clc
int
mov
jl
inc
add
test
out
xchg
imul
fcmove
stc
xchg
inc
add
xchg
and
pavgb
addl
inc
lock
mov
jno
adc
add
dec
xchg
into
fwait
imul
das
or
mov
jne
pop
mov
ficomps
rcr
hlt
add
cmc
push
in
cmp
pop
cld
sbb
pop
shr
add
popa
cmp
loope
cs
lret
mov
add
push
and
nop
and
xor
arpl
mov
sbb
rep
rcr
in
cwtl
fldenv
xor
addb
cmp
cmp
jmp
inc
add
push
mov
cmp
jg
stos
dec
xchg
ds
xchg
in
xor
sub
int
push
mov
ds
scas
sahf
mov
mov
xor
push
cmp
addb
into
ror
dec
xchg
dec
add
mov
cmc
sbb
push
lock
cmpsl
loopne
add
lret
sbb
lret
repnz
sti
inc
add
arpl
les
inc
add
testb
cmp
xchg
out
fdivs
sub
mov
xor
sub
imul
shll
enter
fwait
jbe
push
cld
and
and
std
or
xchg
ds
cmpsl
adc
xchg
repnz
add
add
nop
out
hlt
lods
dec
inc
insl
shl
add
mov
scas
sub
addb
mov
inc
add
lea
sub
cmp
dec
pop
add
add
clc
pop
loop
pop
cmpsb
sbb
adc
mov
or
mov
mov
push
push
fistpll
or
mov
adc
add
add
mov
fdivr
push
push
xchg
or
ret
int
and
jle
aas
xor
push
add
cwtl
xor
pop
xor
and
sbb
add
ja
and
andl
ret
jo
sub
add
jnp
aaa
xchg
jecxz
inc
mov
mov
push
add
mov
stos
push
add
loope
add
je
les
pop
enter
out
sahf
sbb
add
cmp
pop
push
mov
add
lock
xor
push
fists
test
mov
sbb
add
clc
adc
sbb
jecxz
ror
push
popa
inc
add
cli
dec
in
sub
dec
jcxz
add
bound
lahf
ss
pop
mov
les
aam
loopne
movb
popa
push
cmpsl
and
and
xorl
dec
in
xor
cmp
mov
les
stc
pop
rcrl
enter
adc
mov
fbstp
add
and
xor
loope
push
cmpsb
imul
lea
add
mov
sbbl
jg
cmc
scas
into
inc
movsb
outsb
adc
testb
xchg
out
out
jmp
cld
ja
loop
or
cs
sbb
sbb
decl
fnsave
xor
int
adc
fiadds
bound
mov
call
sti
cmpsl
mov
mov
inc
stos
les
xor
inc
add
push
lods
rcrb
lret
xchg
jg
mov
mov
imul
outsl
sub
insl
in
int
loop
xchg
cmp
mov
shrl
jmp
and
repnz
push
cmp
add
outsb
in
push
mov
xchg
loopne
arpl
jbe
and
jno
and
push
bound
mov
jecxz
jp
sub
cld
fsubs
xor
push
mov
add
fdivl
ficoms
add
daa
add
shlb
rolb
mov
add
sbb
xor
mov
mov
inc
add
jg
xor
fnsave
inc
add
jne
and
jge
enter
add
mov
and
lods
push
push
cmp
adc
xchg
push
dec
ja
imul
push
iret
add
sti
iret
cmp
lods
int
xor
or
dec
mov
cmp
xchg
inc
add
addb
in
data16
xchg
xor
lret
lods
aas
mov
mov
add
addr16
inc
xchg
jle
outsl
jno
add
dec
test
mov
sub
xor
outsb
xor
pop
ror
call
jno
push
ja
sub
inc
add
inc
add
and
arpl
inc
idivl
cltd
repnz
mov
aad
add
lcall
jle
push
cld
loope
js
jnp
jns
mul
stos
inc
mov
addb
testb
dec
add
or
mov
mov
inc
inc
add
imul
mov
mov
ljmp
in
cmp
notb
push
or
push
addb
or
inc
imul
stos
push
stos
sahf
pop
mov
movb
cmpsl
daa
push
sbb
mov
icebp
jmp
jle
lds
rcrl
andl
mov
or
js
pusha
add
fs
rorl
add
fsub
fsubr
push
pop
iret
loopne
dec
cmpsb
inc
bound
in
rolb
lods
popl
icebp
or
mov
cmpsb
pop
sbb
iret
sub
popl
outsl
jmp
lret
xchg
int3
data16
add
les
add
sub
add
mov
arpl
pushf
movsb
pop
cmp
std
mov
mov
out
and
xor
mov
rolb
mov
movb
xor
shr
push
lret
jne
add
movsb
pop
dec
insb
in
outsb
enter
notl
mov
enter
iret
in
ds
in
arpl
addb
pop
dec
mov
lds
insl
bound
cwtl
dec
push
mov
push
add
add
stos
ss
add
push
jmp
jle
add
sub
call
push
ret
lock
fsubrl
popf
test
add
cmpsl
push
sub
in
imul
add
xchg
mov
mov
stos
loopne
fnstcw
into
lahf
dec
sbb
iret
adc
inc
mov
inc
mov
pop
iret
inc
add
loop
push
add
cld
in
cmp
xlat
mov
imul
stos
fcmovnbe
sub
pop
sbb
add
xlat
addr16
ret
xchg
aam
dec
xchg
inc
mov
sbb
mov
rolb
outsb
jmp
sbbl
int
jmp
movsb
clc
imul
add
add
mov
out
cmpsb
out
popl
add
push
adc
add
clc
and
adc
pop
sbb
lock
lahf
mov
push
call
sti
les
and
jmp
sbb
add
lcall
popf
inc
add
ret
ss
cli
stos
pop
fildll
jmp
scas
xchg
mov
add
dec
insl
test
arpl
stos
pop
js
fidivrl
movsl
bound
test
push
cmp
jb
or
lcall
sub
add
mov
nop
add
push
shrb
ss
jns
add
push
add
bound
adc
ss
fstenv
mov
in
and
lcall
dec
push
pushl
add
inc
add
xor
je
int3
dec
jle
jno
out
mov
aad
adc
push
xor
inc
ds
ret
jge
jle
fbstp
jbe
test
sub
inc
add
jne
scas
nop
add
popa
lahf
insb
push
cmp
push
and
mov
stos
mov
testl
dec
dec
pop
mov
mov
xchg
push
add
sub
dec
jb
push
push
lods
add
mov
pusha
add
xchg
inc
xor
jmp
mov
lds
fdivrl
add
and
fmull
add
ljmp
jns
cld
cltd
into
add
add
int3
add
cmp
push
mov
in
das
bnd
rorl
add
add
std
in
inc
xchg
dec
xchg
or
std
call
lret
lret
sub
pop
pop
lods
pop
sbb
add
out
shll
sbb
rcl
stos
sub
push
or
fimuls
mov
cmp
lock
push
xor
dec
sbb
lahf
push
push
out
pop
andl
add
inc
inc
add
mov
push
imul
jb
xor
data16
sub
pop
add
or
shll
add
ss
movsb
adc
inc
add
jbe
cmp
insl
fldcw
aad
push
div
inc
mov
mov
push
rolb
or
les
jno
in
inc
add
sbb
push
dec
movsb
es
add
push
das
xchg
sub
pusha
add
xor
in
lret
xchg
mov
stc
lret
xchg
pop
negl
and
test
addb
pop
dec
shlb
arpl
jecxz
out
fmull
pop
jp
add
inc
ret
sub
and
dec
scas
cmc
xchg
mov
jp
insl
push
xor
sub
add
lock
jb
pop
sti
xchg
pop
cmp
roll
and
and
mov
push
inc
xchg
jbe
fwait
mov
mov
mov
jno
loope
add
add
xchg
mov
mov
cld
jns
icebp
cld
push
movsl
loop
pop
add
clc
xchg
push
jge
pop
imul
mov
inc
add
inc
push
cld
xchg
loopne
sbb
fdivrs
mov
xchg
xchg
push
pop
cmp
mov
xor
aaa
imul
sub
add
sbb
add
cli
mov
je
mov
mov
test
lret
mov
lods
movsb
aam
cs
fstpt
cld
mov
lds
push
int
jo
jbe
inc
add
jp
jns
popf
loope
add
out
das
jbe
jmp
popa
cmp
pushf
xchg
xchg
pop
push
jge
xchg
clc
stos
push
leave
cmp
push
push
mov
fwait
rcll
push
and
xlat
nop
mov
icebp
insb
and
lea
add
test
push
jnp
icebp
dec
movsb
dec
ds
mov
iret
sub
cmp
test
inc
add
daa
jns
or
popf
xchg
inc
add
icebp
push
popf
jbe
in
mov
je
xchg
and
daa
cmpsb
and
push
mov
scas
mov
mov
adc
mov
fcmovu
sub
pop
inc
dec
push
ja
add
mov
into
jne
dec
stos
mov
outsb
scas
ret
dec
adc
xchg
push
pushl
ljmp
lock
xor
mov
insl
cmp
cli
es
lods
pushf
jb
mov
insl
imul
cmp
jnp
mov
repz
inc
add
push
mov
stc
push
decb
call
dec
outsb
mov
add
sbb
inc
or
andl
push
mov
sti
fisttps
and
ret
push
fldl
imul
pop
in
inc
inc
dec
jmp
scas
in
mov
mov
test
xchg
and
add
scas
or
jae
push
movsl
xchg
repnz
jg
cs
xchg
push
stc
inc
adc
pushf
out
sub
das
sub
les
dec
inc
dec
in
pop
enter
add
shl
jp
iret
mov
cmp
adc
pop
mov
cmp
pop
or
loop
jne
daa
popf
movsl
test
xlat
adc
lea
mov
ret
scas
cmp
add
in
mov
add
movb
xor
add
loope
add
rcrl
or
ljmp
movsb
std
push
sahf
lods
sub
add
fdivr
and
ret
mov
ret
inc
add
inc
add
and
cld
scas
cld
es
dec
fisttps
pop
nop
jg
std
addb
popa
sti
inc
add
out
cmc
rcrl
lods
mov
in
sub
cld
lcall
inc
add
or
in
jnp
lods
jle
mov
mov
mov
dec
mov
pop
cld
mov
repnz
ret
jae
addb
xchg
aad
add
mov
repnz
mov
addb
pop
jecxz
mov
jae
mov
and
jmp
add
add
and
je
add
pop
mov
mov
shll
xchg
sub
cmpsl
pop
mov
jmp
test
adc
imul
unpcklps
mov
inc
add
push
push
movsb
push
pop
out
icebp
ret
inc
push
loop,pt
add
fmulp
ret
mov
ret
xchg
aam
xchg
rcrl
add
mov
fadds
rolb
int
pop
add
scas
or
imulb
das
cmpsb
cld
xlat
sub
clc
xor
adc
dec
mov
sbb
adc
adc
incl
xor
xchg
addb
adc
icebp
fildl
mov
push
or
add
xchg
mov
outsl
test
addb
sbb
orl
iret
mov
add
cmp
sub
lock
add
or
lret
or
dec
adc
aam
xor
mov
les
mov
fs
pop
fstps
int
pop
sub
cmp
dec
mov
jg
push
cmp
out
aaa
sbb
xor
bound
mov
add
inc
dec
xchg
test
ret
stc
or
fs
add
addb
jnp
dec
adc
jb
loope
jbe
scas
dec
movb
mov
push
fwait
pop
or
and
std
scas
aaa
mov
jle
add
xor
dec
fnstenv
outsl
iret
pop
or
addb
dec
add
arpl
rolb
add
jbe
popf
out
jnp
cmp
in
ret
in
inc
sbb
adc
adcl
add
push
addb
add
scas
push
clc
fldlg2
mov
push
xchg
xchg
mov
pop
jns
pop
movb
out
call
dec
jb
push
and
push
add
rolb
shlb
int3
cmp
xor
fcomp
xor
pushf
int
lock
mov
pop
iret
iret
inc
add
mov
add
ret
add
fisttpl
jb
scas
adc
add
mov
lret
add
fcomps
xchg
mov
loop
or
dec
aam
mov
jae
adc
adc
and
into
mov
add
jle
add
fsubrl
clc
sbb
push
or
push
push
out
clc
push
add
pop
and
sbb
inc
add
or
in
mov
inc
add
push
sub
add
aam
xchg
ficoml
inc
add
jle
jbe
sbb
dec
fwait
cmc
jne
xor
dec
inc
fldt
adc
call
movsb
movsl
jle
add
adc
pushf
cs
xchg
sbb
nop
fsubl
stos
popf
roll
or
lahf
xchg
mov
bound
stc
cmc
mov
pop
aad
lea
bound
scas
mov
ret
popa
add
cltd
jecxz
addb
push
cmc
add
sbb
add
cltd
sti
or
fwait
icebp
push
and
push
enter
jg
arpl
cmp
push
mov
pop
jmp
or
aam
or
xchg
lret
mov
movsb
std
inc
add
and
lods
aam
adc
add
scas
lret
mov
les
and
movb
pusha
add
lahf
cwtl
aaa
mov
add
dec
or
jbe
rolb
cmp
or
fisubs
loopne
movb
stos
add
lret
push
inc
add
mov
add
cli
out
vmwrite
sbb
outsb
sti
nop
cmp
add
rolb
add
sbb
add
jae
push
fildl
lcall
and
push
xor
out
push
ja
xor
dec
mov
lods
loope
ljmp
push
jmp
in
and
test
push
fdivl
adc
imul
call
idiv
jns
add
and
push
push
push
clc
dec
cmc
fwait
mov
lcall
imul
outsb
adc
cltd
mov
sbb
dec
mov
aad
test
cmp
jnp
mov
add
popa
inc
jae
cmp
or
sbb
and
incb
aam
push
push
sub
or
dec
outsl
leave
test
add
add
sbb
inc
add
jg
push
fsts
inc
add
insl
xchg
aad
lea
push
lea
or
jb
add
pop
sub
pop
sbb
pop
mov
add
aam
daa
add
jp
pop
lock
outsl
xor
sbb
adc
lret
ret
out
pop
enter
add
mov
stos
hlt
adc
mov
xchg
xor
lcall
scas
out
dec
repnz
push
cltd
xchg
xor
fsts
cli
adc
iret
xchg
lock
and
les
lret
mov
test
cmp
adc
popf
insb
lods
xlat
roll
xchg
mov
lahf
rolb
leave
or
cli
cmp
rcrl
add
lcall
cli
push
nop
mov
cmp
sub
sbb
or
arpl
mov
jle
and
sub
das
lret
mov
int
jo
mov
pop
push
ret
xor
mov
repz
js
mov
mov
mov
add
sub
lods
pop
rolb
xchg
mov
mov
mov
push
xor
repnz
sub
orl
out
inc
or
fistpl
jmp
push
dec
mov
add
push
cmc
mov
xor
xchg
push
rolb
out
scas
mov
bound
dec
dec
lods
jp
adc
mov
addr16
movsb
fs
mov
stc
push
movsl
mov
sahf
mov
mov
jne
push
in
push
arpl
jo
add
push
int3
push
add
pop
mov
mov
rclb
add
jae
add
inc
mov
popa
mov
in
dec
push
mov
fmuls
add
loop
jne
add
test
test
rcrb
add
loopne
mov
aam
dec
rorb
rcl
pop
addr16
jo
sti
dec
cltd
pop
movsb
lock
xchg
cmpsb
xor
enter
jo
jp
enter
mov
je
xor
inc
add
xchg
mov
shr
leave
sub
in
inc
add
pop
addb
mov
add
mov
xor
push
push
movsl
int
mov
mov
mov
stos
sub
mov
movsl
mov
pop
inc
add
add
ret
xchg
cmp
xor
mov
jmp
cmp
jne
scas
or
xor
sub
sub
arpl
push
cmp
scas
dec
xchg
das
test
jno
add
and
add
aam
mov
push
outsl
xchg
fs
repnz
rcl
or
jo
das
sub
push
inc
add
lret
mov
mull
call
lcall
push
fsubl
in
das
icebp
sbb
movb
push
dec
cmp
ret
arpl
out
addb
mov
or
daa
popf
ja
inc
add
divl
and
jge
dec
push
adc
lock
cmp
and
call
mov
xor
stos
and
sub
lret
jle
lods
jno
aaa
dec
outsb
sbb
std
pop
xor
jl
xchg
add
jbe
mov
xchg
int3
cmp
incb
jl
mov
fwait
cld
pop
leave
sbb
inc
add
add
incb
xor
push
lock
dec
fldt
pop
push
jle
sub
loopne
add
pop
inc
add
icebp
cld
ja
and
add
daa
push
sbb
sub
cwtl
push
movsb
mov
adc
out
inc
cmp
cwtl
adc
add
add
inc
add
mov
adc
int
lahf
pop
xlat
sbb
xlat
jae
insb
call
pop
mov
push
add
mov
sbb
pop
push
dec
icebp
sar
dec
pop
add
mov
je
loopne
cmc
decl
mov
in
rcrb
cld
adc
pop
negb
pcmpeqd
popa
lock
cmp
decl
sbb
pop
mov
sub
add
jnp
mov
jecxz
push
lea
add
adc
pop
pop
pusha
add
jo
test
add
jl
add
pop
sub
imulb
push
imul
add
push
add
fistl
sbb
addb
mov
test
lods
jne
add
out
push
add
and
in
aad
adc
mov
out
inc
lret
cmpsl
and
sbb
insb
mov
and
stos
add
inc
add
test
popf
int
add
dec
cmp
push
out
and
mov
add
push
add
frstor
in
cmp
push
pop
popf
jge
fdivr
nop
imul
add
mov
cmpsb
mov
pop
dec
pop
and
jecxz
clc
adc
aaa
lods
fmul
lods
sbb
jl
in
inc
add
int3
sbb
pop
mov
add
pop
lahf
jmp
shll
call
jae
mov
xchg
aaa
fisubrs
imul
cmp
sbb
xor
xor
out
add
orl
sub
or
xchg
outsb
addb
daa
lret
xor
ret
add
gs
sub
mov
and
scas
jns
mov
push
clc
rolb
inc
sbb
xchg
inc
add
lds
inc
add
ret
and
inc
bound
gs
mov
test
dec
mov
add
rolb
mov
addb
loopne
add
mov
inc
add
cli
adc
xchg
ror
pop
xchg
in
adc
clc
js
sbb
jne
xor
cli
mov
xor
mov
int
inc
lds
and
jge
rolb
inc
or
push
cmp
push
xor
add
clc
and
mov
mov
shll
cmpsb
test
cmp
jbe
jnp
out
pop
push
xor
adcl
std
add
and
adc
push
filds
mov
jb
cmp
sub
jecxz
das
xchg
adc
bound
addb
push
mov
shr
dec
jb
enter
add
push
add
xchg
test
xor
inc
add
jmp
mov
adc
pop
cmp
mov
pushf
adc
ds
adc
shlb
das
ljmp
rorl
pop
fwait
mov
je
inc
pop
lahf
gs
pop
out
lret
mov
pop
or
imul
dec
adc
out
mov
push
add
xor
addr16
sub
jno
mov
cmp
xchg
mov
inc
add
push
pop
les
adc
icebp
jo
cmp
xchg
movsl
mov
jl
pop
xchg
xchg
in
mov
add
xchg
stos
leave
outsb
cmp
cld
cmp
ljmp
mov
scas
ret
jmp
lods
mov
mov
jb
jns
and
lahf
cmpsl
mov
pop
fcom
jmp
push
jne
xchg
loopne
jmp
mov
push
xchg
mov
mov
sub
sbb
cmpsl
sbb
addb
lret
in
and
add
popa
cmp
xchg
aam
push
in
xor
xchg
rolb
test
push
add
dec
test
outsl
mov
jg
xor
jb
add
adc
ret
lea
add
fistpll
leave
in
cmp
mov
scas
dec
in
fcoml
rorl
cmpsl
scas
jns
fidivl
push
xchg
nop
cmp
daa
jmp
add
fistpll
jecxz
iret
rcrl
jg
or
push
pop
dec
mov
jnp
mov
bound
insb
in
daa
jno
movb
lea
sbb
enter
nop
dec
jp
sub
flds
rorb
addr16
push
lea
add
add
push
mov
mov
pop
add
lods
dec
jnp
add
add
movb
movsb
mov
scas
imul
add
cli
dec
