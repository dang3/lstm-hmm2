jge
in
dec
adc
push
pop
adc
mov
mov
mov
cmpsl
sub
add
in
or
je
or
cmp
cmp
lds
add
mov
pushf
popa
jmp
xchg
jbe
or
add
mov
loope
inc
or
cltd
in
mov
lahf
es
add
rcrl
and
jnp
popf
ds
adc
jecxz
add
int3
and
add
inc
lock
mov
and
mov
sub
rolb
mov
jbe
sbb
and
adc
mov
mov
push
movsl
and
ljmp
test
mov
addb
push
adc
mov
add
fdivrl
enter
adc
mov
lds
jb
mov
inc
push
inc
jnp
pop
mov
jb
mov
jmp
ret
xchg
xchg
dec
rcll
cmp
rolb
xchg
dec
rcll
add
push
xlat
je
in
es
loop
mov
sbb
push
or
mov
adc
mov
mov
das
pop
cmp
pop
filds
add
dec
lods
mov
mov
loopne
mov
mov
mov
dec
sbb
or
into
jle
inc
in
add
add
add
mov
xor
mov
fnstcw
sbb
push
push
add
ja
add
push
fisttps
mov
sbb
and
dec
sbb
mov
mov
into
pop
push
pop
xchg
add
arpl
psraw
push
icebp
pop
mov
push
jnp
add
push
in
daa
sbb
in
and
mov
aam
int
jo
mov
mov
add
cmc
push
push
cmp
xchg
dec
and
pop
mov
sbb
in
pushf
hlt
mov
jmp
outsl
enter
pop
push
add
xor
xchg
add
xor
add
sub
fsubs
mov
mov
mov
and
xchg
add
hlt
or
mov
jbe
rolb
mov
add
add
sub
add
orl
jl
xor
mov
add
mov
dec
and
mov
test
mov
mov
ljmp
daa
cmp
repnz
mov
add
mov
sbb
loopne
mov
repnz
std
scas
sub
popa
mov
push
and
mov
lods
xor
cwtl
int3
push
fs
cmpl
arpl
out
add
addb
arpl
jbe
iret
out
pop
sub
xchg
daa
orl
adc
xor
mov
mov
xor
mov
addr16
add
add
mov
pop
push
gs
mov
lret
into
adc
mov
mov
js
scas
outsb
sub
and
add
push
lds
add
mov
pop
data16
leave
in
jmp
mov
dec
sbb
lahf
sub
or
test
addb
xchg
xchg
je
and
add
pushf
mov
mov
popf
push
dec
pcmpgtw
aas
addb
clc
cmpsl
mov
add
mov
xor
mov
lret
inc
add
add
add
add
inc
addb
mov
jmp
rolb
mov
add
cmp
addb
icebp
aam
enter
mov
or
add
gs
aad
lods
add
mov
add
loope
stc
icebp
and
xchg
fnstsw
cmp
lcall
add
pushf
or
jbe
popf
push
sbb
das
push
add
mov
xchg
mov
jo
mov
mov
imul
mov
aaa
test
mov
mov
jo
mov
cmpsl
cwtl
mov
mov
mov
push
adc
cmp
jbe
fidivrs
fldcw
pop
mov
pop
lods
fucomip
add
mov
aaa
mov
mov
movsl
mov
fdivr
sbb
jmp
mov
add
pushf
xor
xlat
adc
mov
inc
add
mov
push
adc
mov
sub
pop
addb
inc
xchg
add
mov
je
xchg
sub
add
mov
push
mov
repz
mov
int
mov
mov
in
sbb
mov
add
add
adc
mov
xor
add
les
add
in
mov
mov
call
add
comiss
leave
sbb
adc
jns
jge
mov
add
sub
lea
dec
dec
jno
shll
in
push
add
add
shrl
inc
add
adc
mov
loopne
mov
sbb
add
mov
add
add
add
xchg
xchg
jne
aaa
lds
sti
inc
pop
adc
mov
jg
push
sub
nop
add
sub
add
ud2
sbb
adc
test
fdivrl
mov
mov
push
mov
xor
sbb
push
xchg
stos
xor
add
jmp
dec
arpl
jns
push
lret
int3
jb
mov
rcll
add
xchg
jae
adc
mov
out
jge
out
cmp
mov
out
les
and
mov
insb
jl
pop
dec
loopne
mov
pushf
fidivs
in
subl
rolb
dec
pop
sbb
jl
mov
in
push
or
and
cmp
cmovnp
add
jnp
xchg
in
data16
xor
mov
mov
in
add
xor
add
mov
int3
outsb
repnz
xlat
addb
rorl
and
mov
int
lcall
int3
call
push
push
fistps
mov
add
add
rolb
jo
mov
cmp
out
adc
mov
out
push
mov
inc
rolb
inc
movsl
idivb
enter
mov
add
cmpsb
scas
pop
inc
cmp
inc
stos
out
rolb
test
pop
or
add
mov
jno
add
hlt
scas
call
movsb
dec
es
add
sbb
js
jmp
fidivrs
out
jmp
rcrl
mov
or
mov
add
add
icebp
pusha
add
out
add
and
mov
and
fwait
in
inc
add
add
mov
add
mov
and
mov
add
add
cs
rolb
mov
jne
jne
jbe
subl
or
mov
xor
xor
sbb
xchg
shll
bound
mov
cmp
sub
dec
push
jg
dec
out
into
imul
mov
dec
xchg
or
and
mov
shll
jp
add
cmp
add
inc
add
lea
add
add
xor
mov
jg
fiaddl
xchg
add
jne
cmp
add
sarl
fwait
pop
cmpsl
enter
inc
add
pop
addb
or
scas
lret
lods
insb
push
repnz
mov
daa
adc
loopne
mov
aaa
addb
sbb
pop
mov
rolb
outsb
out
inc
gs
and
mov
adc
mov
mov
ret
xor
adc
das
adc
mov
popa
into
addb
xor
mov
test
scas
and
cmp
xor
or
add
scas
or
sbb
ret
loopne
mov
pop
add
and
mov
arpl
mov
inc
fisttps
mov
int
leave
xor
mov
lret
dec
mov
add
mov
add
cs
leave
repz
xchg
sar
addb
in
movsl
cltd
icebp
lods
xchg
sbb
outsb
dec
std
test
mov
loopne
mov
sub
xchg
imull
and
mov
jmp
add
mov
addb
mov
std
mov
dec
push
iret
loop
mov
mov
adc
push
sub
dec
sub
mov
mov
xor
pop
repz
clc
rdpmc
hlt
in
idivl
sbb
xor
xor
mov
not
add
into
dec
push
mov
and
mov
out
dec
jb,pn
mov
or
add
inc
dec
jge
lahf
and
mov
aad
jae
pop
xchg
add
mov
add
pop
mov
test
out
pop
aas
and
mov
dec
sahf
pop
into
sti
cmp
add
mov
and
mov
imul
pop
mov
sbb
add
add
mov
add
xchg
sbb
add
lock
rcll
insb
mov
mov
mov
add
xchg
scas
mov
fldl
pop
mov
mov
lods
jl
and
mov
mov
and
add
jo
mov
push
out
xchg
scas
ret
rolb
mov
add
imul
xchg
fldlg2
dec
adc
add
add
mov
adc
adc
mov
mov
fisubrs
mov
add
jbe
xchg
jnp
or
in
cmp
mov
loopne
mov
mov
gs
mov
mov
mov
shrl
mov
std
fcoml
jp
mov
pop
push
cmp
lret
enter
inc
add
pop
mov
fadds
das
pop
and
js
adc
xchg
sbb
mov
push
add
push
add
sbb
mov
cmc
outsb
dec
loop
mov
test
add
mov
iret
sbb
xor
addb
pop
divl
add
ret
mov
mov
mov
add
add
insb
in
xor
xchg
rolb
aas
ficoml
loopne
mov
arpl
cltd
add
rolb
cld
dec
mov
add
pop
mov
sbb
and
adc
inc
enter
movsl
cmp
sbb
add
add
sbb
pop
mov
add
mov
cs
mov
pop
cmpsb
mov
mov
jl
hlt
sub
inc
add
fs
xchg
push
push
imul
loop
mov
loopne
mov
cmpsl
sahf
or
adc
add
ds
aad
pushf
adc
das
loopne
mov
movsb
cmp
add
xchg
int
pop
repz
and
cmpsb
out
mov
mov
add
shll
repnz
leave
sahf
popa
or
dec
mov
add
add
nop
add
js
cmpsl
push
rolb
mov
xchg
inc
lods
popf
lock
push
orl
loop
mov
in
and
lcall
adc
mov
adc
mov
cld
push
test
add
cmp
lret
insl
adc
mov
sub
push
push
push
push
push
push
cld
call
add
es
movzbl
cmp
ss
push
push
call
mov
cmp
je
es
lea
cs
sub
mov
push
es
call
test
jne
jmp
leave
push
es
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
nop
lea
lea
sub
add
mov
sub
sub
push
pop
push
je
jmp
add
add
data16
mov
add
clc
iret
jmp
scas
sbb
aas
pop
ljmp
jp
add
jbe
dec
test
pop
push
lea
outsb
jns
push
pop
push
mov
idiv
out
and
arpl
mov
push
bound
mov
mov
add
out
mov
mov
mov
push
cltd
clc
pop
mov
add
push
push
adc
insl
inc
scas
pop
fstl
mov
daa
fadds
add
jnp
arpl
xchg
mov
mov
add
addr16
pop
daa
jmp
and
add
xchg
xchg
pop
fdivl
mov
test
cli
inc
add
mov
mov
addb
rcll
xor
jmp
outsl
mov
call
call
or
mov
addb
sub
add
shll
xchg
inc
add
push
jl
push
gs
enter
popa
pop
dec
inc
push
push
add
mov
idivb
cmp
and
mov
loopne
mov
sub
pop
outsb
mov
fcmovu
pop
lret
add
loope
icebp
lods
je
mov
mov
in
xor
sub
addr16
out
jmp
jo
mov
cmpsb
cmp
pop
in
in
jno
popf
add
dec
dec
aaa
mov
xchg
xchg
movsb
sbb
rolb
mov
mov
add
push
mov
mov
xlat
jae
add
add
ret
dec
add
mov
daa
mov
and
mov
add
ja
jp
pushf
pop
test
mov
out
add
jle
pop
ss
mov
fwait
sbb
jp
sti
push
repz
shll
mov
xchg
add
mov
addb
dec
ds
add
sbb
add
push
fstps
gs
lds
sbb
mov
pause
add
divb
pop
mov
xor
stos
pop
mov
mov
aas
addb
push
add
or
adc
mov
mov
pop
insb
jecxz
push
lahf
int3
int
inc
inc
leave
divb
push
test
pop
testb
ja
mov
mov
sub
add
xchg
fwait
aam
inc
ljmp
cmp
loope
popa
adc
mov
push
std
cmp
das
and
jle
adc
mov
fistps
add
or
fstpl
lret
inc
add
rolb
repnz
mov
push
sbb
pop
jmp
inc
add
or
cwtl
push
stos
icebp
cmp
mov
mov
fs
out
cmpsl
outsb
scas
xchg
add
cmp
imul
rolb
mov
movsb
add
mov
sub
js
sub
in
arpl
int
sbb
cli
mov
scas
lahf
addb
cmp
mov
jmp
jge
rolb
mov
into
or
das
adc
push
jns
jp
fmul
jne
xor
xor
add
mov
inc
xchg
lcall
mov
int
mov
jb
mov
add
out
push
les
ljmp
inc
jnp
and
mov
jo
mov
add
cld
pop
test
xor
xor
sub
inc
rolb
mov
jle
adc
aas
xor
aaa
stos
sub
fsubl
lock
incl
and
cli
faddl
imul
dec
push
movsl
jl
fldt
mov
test
imul
mov
mov
nop
add
add
rcr
lcall
sbb
jbe
inc
and
add
inc
mov
fwait
pop
dec
push
mov
inc
push
sbb
scas
fnsave
add
mov
xor
mov
add
cmp
adc
outsl
leave
adc
rolb
mov
mov
lods
push
adc
daa
xchg
mov
and
stos
push
add
mov
mov
dec
xchg
ljmp
sbb
push
add
add
sbb
ret
xchg
xor
addr16
popf
sub
ret
inc
push
insb
inc
add
add
shl
mov
mov
mov
mov
sbb
lock
mov
mov
ret
in
imul
ljmp
mov
ficompl
loope
add
add
push
sbb
fmuls
dec
pop
pushf
add
mov
add
add
add
dec
and
pop
xor
add
lahf
jb
mov
jne
pusha
add
mov
jae
jns
add
stc
mov
cmp
mov
or
add
mov
addb
scas
adc
ja
add
or
addb
xlat
dec
xor
mov
lock
stos
mov
mov
movl
push
pop
mov
leave
sbb
push
sub
sub
rolb
mov
add
add
or
inc
jno
in
insl
xchg
mov
add
js
fwait
sbb
rolb
mov
fnclex
add
insl
rolb
mov
leave
adc
mov
mov
mov
or
xchg
enter
jne
pop
insb
push
add
ffreep
add
mov
dec
xor
in
push
fs
popa
xor
mov
mov
mov
dec
xor
jle
or
add
cmp
add
or
test
pop
aaa
fisubl
add
inc
cmp
or
xor
xchg
mov
dec
inc
xlat
cmp
nop
add
es
sahf
mov
lcall
mov
sub
cmp
std
cmpsl
xchg
sbb
in
loop
mov
icebp
or
and
mov
addb
sub
add
sbb
mov
dec
fmul
inc
push
cmp
add
dec
test
add
mov
mov
pop
insb
outsl
cmc
xchg
or
mov
cmp
stos
xchg
andl
or
fs
out
bound
mov
rcll
jbe
fwait
or
aam
les
jo
mov
mov
mov
add
add
mov
dec
xchg
mov
add
add
mov
mov
and
and
inc
orl
add
dec
mov
addb
cwtl
sbb
add
push
aam
pop
xor
mov
adc
lret
add
das
xor
mov
mov
movsl
sub
cltd
sbb
and
mov
dec
clc
pop
and
mov
mov
loope
iret
dec
push
test
pusha
add
gs
stc
add
stos
cmp
mov
add
jbe
nop
add
add
decl
mov
icebp
push
add
dec
pop
mov
mov
mov
imul
cltd
test
lcall
lcall
dec
popa
repnz
and
mov
add
mov
outsl
scas
mov
inc
push
lea
mov
xor
mov
pop
push
xor
addl
add
cmp
push
add
movsl
or
add
dec
add
and
mov
xor
mov
aaa
mov
xor
aad
inc
push
mov
outsl
and
cmc
mov
push
stos
decl
loopne
mov
add
fisubrs
dec
fnsave
inc
arpl
popf
or
push
add
add
add
popf
mov
jge
push
ret
lret
adc
mov
add
jbe
cmp
add
rolb
mov
xor
push
xchg
je
test
or
xchg
mov
cmpl
adc
dec
out
fwait
sub
je
fcmovne
xchg
add
mov
movsl
sti
xor
mov
add
cmp
clc
loopne
mov
ret
imul
repz
add
call
in
mov
call
mov
jmp
mov
std
add
jmp
mov
arpl
xchg
and
add
jp
pop
lret
mov
addb
and
push
adc
mov
mov
andl
pop
fisubrl
ret
pop
cli
bound
mov
mov
std
fsubl
adc
mov
inc
fcmovne
push
jecxz
mov
push
lea
addl
push
jnp
inc
and
mov
es
dec
jp
in
ss
jge
or
mov
push
jbe
sbb
in
cmp
out
les
mov
jecxz
clc
mov
mov
mov
mov
sub
out
xchg
add
add
mov
insb
mov
sbb
mov
mov
xchg
add
sbb
push
cmp
xchg
mov
xor
mov
inc
daa
jg
add
sbb
add
add
and
mov
mov
sub
xor
mov
out
add
addr16
ja
in
in
popf
pusha
add
xchg
mov
out
dec
rolb
mov
dec
mov
adc
add
jne
dec
inc
out
xchg
fs
add
js
add
and
cmp
mov
push
push
mov
testb
jmp
aas
sar
sub
aam
sub
fstl
xor
into
xchg
je
nop
add
outsl
sub
sti
pop
js
mov
xchg
incl
pop
sbb
pusha
add
rorl
xor
xchg
sbb
sub
addb
bound
mov
sub
repnz
bound
mov
es
dec
mov
sbb
pop
jnp
das
shl
scas
cwtl
rolb
mov
add
cmp
mov
int
fsts
push
sub
add
cmp
jl
cmp
cmp
sub
add
enter
inc
jmp
pop
insl
mov
imul
mov
ret
pop
adc
mov
pop
pop
pop
out
fidivrs
add
mov
fnstenv
sti
test
sbb
cmp
scas
outsb
xchg
ret
ljmp
repnz
cmpsb
mov
adc
mov
xchg
fisttpll
jns
ds
sbbl
gs
mov
mov
mov
fs
pop
test
faddl
fcmovnu
faddl
mov
cmp
mov
mov
add
inc
push
cmpsb
pop
and
iret
rcll
dec
sbb
mov
imul
mov
call
daa
stc
loop
mov
xor
mov
push
movsl
cmpl
test
dec
cltd
stos
xchg
movsl
call
popf
add
insl
jl
push
mov
add
outsl
rolb
mov
xlat
sbb
int
sub
adc
mov
add
bound
mov
lock
dec
outsl
sub
add
addb
pop
sbb
inc
add
cld
and
or
pushf
adc
mov
pop
insb
fldl
movsl
push
incl
jns
cmp
lods
add
cwtl
loope
xchg
int
pop
movsb
jecxz
add
add
into
inc
add
push
mov
cmpsb
pop
adc
pop
push
push
cld
xchg
adc
add
jl
adc
addb
dec
mov
in
xlat
int3
out
loopne
mov
sub
jl
add
or
sub
out
mov
mov
or
xor
jae
sbb
mov
in
push
add
push
inc
add
mov
xlat
cmpsb
das
mov
idivb
xor
pop
stc
mov
sub
add
jb
mov
jge
pop
pop
adc
mov
enter
mov
add
mov
cmp
and
mov
mov
xor
mov
mov
add
arpl
das
into
push
xchg
pop
les
or
aaa
outsl
lahf
lods
sbb
add
bound
mov
mov
jno
cld
push
and
pusha
add
and
mov
shl
inc
pop
js
xchg
add
lret
mov
xchg
jecxz
std
imul
pop
push
lahf
push
xchg
jae
enter
aam
push
fs
loope
jns
jle
xchg
daa
add
and
mov
add
popa
fildl
add
add
xlat
fcmovbe
das
jne
jecxz
add
add
mov
scas
mov
mov
xchg
pop
pop
repz
xor
mov
add
mov
push
sti
jae
lea
out
push
xchg
dec
arpl
xlat
addl
mov
jg
add
and
sub
adc
mov
xor
lea
mov
rolb
mov
mov
movsb
mov
add
cmp
mov
addb
lods
inc
dec
sub
mov
and
add
inc
xor
lcall
xor
in
push
aaa
lock
gs
sub
shr
xchg
cmp
mov
arpl
mov
add
aad
inc
dec
lods
mov
adc
mov
sub
jbe
adc
mov
sahf
pop
mov
dec
and
mov
mov
fbstp
xchg
out
es
push
fdivrp
mov
ds
out
adc
fstpl
fucomi
adc
or
add
dec
clc
sbb
add
inc
add
add
add
sbb
ret
mov
or
enter
pushf
enter
add
out
mov
ss
add
push
icebp
pop
int3
mov
mov
rolb
mov
rolb
mov
push
and
sarl
add
mov
cmc
dec
xor
xchg
xchg
ja
test
std
popf
not
add
mov
xchg
inc
xor
cmpsb
and
mov
jge
fstps
inc
sti
shll
mov
lods
insl
hlt
repnz
imul
dec
mov
adc
mov
jl
pop
adc
mov
out
frstor
fadds
test
fisttps
lds
test
stos
fucom
jnp
roll
xor
pop
xor
addb
jo
mov
rolb
ja
and
je
ret
push
ds
pop
xchg
fistps
xor
pop
rolb
push
add
call
push
jns
add
mov
add
add
setge
imul
jb
mov
in
add
ds
sbb
or
push
xchg
repz
mov
mov
lcall
jnp
subl
int
lods
mov
sub
push
push
add
pusha
add
add
mov
leave
push
les
daa
das
and
out
add
inc
ljmp
js
add
repnz
adc
mov
mov
mov
dec
xchg
or
jp
add
jo
mov
add
icebp
decl
xchg
inc
inc
add
decb
incl
jne
push
mov
cmpsl
cmp
lcall
add
add
mov
xor
out
xchg
push
mov
pop
pop
add
cmpsb
xchg
sbb
imul
add
int
jnp
mov
mov
rolb
movsb
xchg
data16
pop
mov
cs
dec
inc
mov
jbe
pop
pop
pop
test
lret
mov
mov
ret
ds
in
jb
mov
add
sub
in
sar
std
ss
add
push
fiadds
mov
fidivs
ljmp
sub
repnz
je
mov
pop
inc
add
cmp
inc
add
imul
xchg
sbb
add
imul
mov
add
es
add
ljmp
add
add
scas
bound
mov
cmpsb
fmul
nop
add
mov
add
loope
add
push
add
mov
mov
jns
aad
mov
dec
fcmovnu
jg
add
sbb
add
addb
fnstenv
add
add
mov
mov
aas
mov
mov
out
or
data16
cmc
les
stc
fistl
add
outsl
jecxz
add
add
mov
sbb
pop
ficomps
shl
cmc
xchg
repnz
lcall
add
mov
mov
xchg
adc
pop
push
pusha
add
stos
inc
sbb
mov
dec
lods
push
adc
in
add
mov
inc
rolb
jg
arpl
inc
aam
das
testl
divl
mov
mov
popa
jae
pop
xchg
out
shll
jmp
fcomps
jnp
mov
int3
ret
mov
xchg
mov
mov
lea
push
or
les
and
adc
mov
mov
push
xchg
incl
mov
mov
add
push
mov
add
push
fldcw
fsts
mov
push
or
mov
mov
push
add
inc
packssdw
es
adc
mov
inc
testb
icebp
nop
add
shll
lret
aas
insl
into
and
inc
imul
sbb
js
add
jg
inc
and
mov
add
push
outsl
jge
outsb
push
mov
cmp
lahf
fmuls
lock
mov
jmp
mov
add
sub
repnz
add
xchg
test
add
mov
mov
add
push
adc
add
ret
pop
rcll
mov
add
jns
pop
adc
jmp
add
mov
lods
roll
add
pusha
add
add
xchg
std
dec
fisubs
jmp
lret
xchg
out
or
add
push
push
push
adc
test
sub
enter
repz
sahf
sbb
sarl
add
inc
and
mov
sub
jbe
jmp
add
or
cli
sub
mov
add
fwait
xchg
test
add
mov
mov
mov
or
or
add
pop
rolb
mov
lret
mov
or
rolb
mov
sti
out
pop
into
in
ljmp
test
jl
int3
xchg
xchg
dec
out
xchg
or
push
jg
stos
sahf
ja
add
push
push
lahf
jl
add
mov
mov
sbb
out
push
das
mov
xchg
lret
xchg
iret
les
add
mov
scas
pop
gs
hlt
inc
jb
mov
mov
ds
or
jbe
add
mov
mov
cli
pop
sub
std
jmp
incl
add
add
add
push
imul
pushl
xchg
pushf
jo
mov
mov
sbb
clc
fadds
add
fldcw
mov
leave
imul
mov
mov
add
xchg
aam
inc
rcr
adc
mov
pop
popa
scas
iret
cmc
pushf
pop
movsb
adc
in
inc
add
add
es
push
add
mov
sti
mov
add
xlat
insb
in
cmp
add
clc
lods
add
pop
call
cld
push
xor
mov
xchg
cmpsl
repz
out
daa
cld
adcl
mov
push
clc
jno
lahf
repnz
sbb
mov
add
mov
jge
gs
pop
push
ret
sub
gs
mov
add
jno
fiaddl
pop
lahf
data16
aaa
out
ds
sbb
add
mov
xchg
icebp
fwait
aad
ret
cltd
pop
cmp
or
sbb
cld
rolb
mov
xor
add
fadds
mov
shrl
aam
sub
pushf
jg
mov
das
es
lret
sub
loope
mov
xchg
xor
mov
xchg
cmp
loopne
mov
aad
jmp
rorl
cmc
in
clc
sub
add
mov
pusha
add
test
mov
push
imulb
scas
push
inc
cwtl
add
mov
add
xor
mov
lock
ret
mov
mov
mov
aaa
std
mov
mov
in
dec
mov
mov
push
mov
imul
mov
sub
xchg
popa
jmp
dec
push
add
push
pop
xchg
add
jp
cmpsb
push
add
and
dec
add
mov
lds
xor
mov
clc
je
mov
pop
or
cmp
dec
mov
mov
fmuls
jmp
mov
addb
mov
add
out
push
movsl
sti
push
or
mov
xchg
pop
push
or
cmpsb
pusha
add
out
and
add
push
add
mov
add
mov
fstl
jns
shll
sbb
inc
add
lret
bound
mov
mov
cmpsb
cmpsb
je,pn
jmp
inc
sub
lock
adc
mov
add
inc
loopne
mov
add
add
push
dec
mov
add
mov
mov
sbb
mov
arpl
out
mov
mov
add
mov
jg
repnz
lahf
rolb
xchg
xchg
mov
pop
xor
mov
fisubs
add
sub
xor
mov
adc
addb
pop
or
imul
std
push
push
inc
cmpsb
inc
sbb
mov
jecxz
add
call
sub
add
push
lcall
xchg
add
mov
add
mov
sti
in
xchg
dec
inc
add
addb
mov
inc
add
sub
jbe
mov
test
sti
mov
in
test
add
out
inc
lds
ss
add
pop
inc
sbb
fsubrs
dec
addr16
aaa
movups
mov
xlat
enter
add
add
mov
je
push
pop
jmp
test
add
inc
mov
and
mov
add
lret
movsl
or
aas
mov
fiaddl
mov
mov
pop
mov
sbb
push
scas
rolb
lcall
xor
leave
push
jo
mov
add
mov
add
sub
or
push
add
adc
push
add
sub
mov
mov
fdivs
add
add
mov
std
mov
cli
adc
sbb
addr16
add
add
mov
add
cli
lds
push
out
stos
cmpsb
jp
add
js
jnp
lods
adc
mov
inc
add
mov
in
pop
sbb
add
cmc
movsl
rolb
mov
inc
pop
dec
adc
dec
es
fadd
rolb
mov
fstpt
mov
mov
fdivs
pop
test
popa
js
js
int3
sub
or
nop
add
lock
dec
xor
mov
or
out
jne
ss
addb
xchg
jbe
push
loop
mov
xchg
xchg
mov
add
in
call
outsb
dec
stos
fidivrs
rol
add
aaa
faddl
ja
sub
xchg
fisttpll
int3
push
mov
cs
mov
movsl
dec
in
xchg
push
mov
test
add
add
je
jnp
add
scas
inc
jae
pop
xchg
bound
mov
fdivrs
jmp
mov
inc
fnstenv
xor
push
mov
add
ret
nop
add
adc
pushf
push
add
xchg
ss
mov
dec
fsubr
lret
and
sbb
push
ljmp
nop
add
xor
add
mov
mov
mov
add
lret
ljmp
in
pop
jecxz
in
push
lret
decl
push
addb
add
adc
mov
mov
mov
int3
decl
sti
sub
pop
std
ret
cmpsl
lods
add
mov
add
adc
lahf
pushf
adc
mov
jp
add
mov
dec
lret
mov
mov
add
fsubrs
pop
ret
mov
mov
mov
push
dec
ja
lahf
jp
xchg
test
add
rolb
mov
rolb
arpl
add
mov
out
sbb
out
dec
sub
scas
outsl
push
inc
add
and
sbb
add
mov
je
add
xchg
add
mov
mov
call
add
add
xchg
fstpl
inc
push
bound
mov
sahf
repnz
add
into
pop
fldl
ljmp
fdivs
mov
fsubl
sub
mov
aad
sub
sub
mov
lcall
mov
mov
xor
add
in
repnz
xchg
add
push
outsl
pop
mov
or
cmc
jne
add
mov
fs
mov
hlt
inc
add
push
and
mull
push
mov
ret
fs
repz
add
movsb
or
mov
test
add
push
repnz
add
and
mov
mov
adc
add
dec
es
enter
pop
pushf
push
cmc
cltd
ficompl
pop
add
inc
pop
or
int
nop
add
ja
stos
jb
mov
adcl
mov
pop
je
add
add
and
rolb
mov
mov
fdivr
in
mov
mov
add
cmp
jne
mov
rolb
mov
inc
add
add
jge
add
repnz
mov
inc
mov
fbstp
pushf
mov
mov
leave
or
mov
add
mov
sbb
insb
loop
mov
outsb
dec
inc
cmp
lcall
mov
inc
rolb
mov
aad
push
pop
test
das
cmpsl
push
scas
fwait
add
add
add
cmc
xor
mov
in
jmp
add
lds
inc
add
popf
aam
add
cmp
add
pop
lds
push
arpl
mov
push
lea
dec
xchg
cli
xchg
cmp
mov
xor
xchg
mov
add
js
mov
icebp
mov
dec
jns
es
test
add
add
and
das
stc
lcall
insb
sbb
add
mov
or
lea
jp
mov
shrl
mov
mov
mov
push
pop
or
mov
mov
mov
mov
inc
lea
pop
adc
xlat
bound
mov
in
hlt
xchg
push
add
sub
mov
popa
fwait
cmp
test
scas
mov
push
push
insb
push
jecxz
xlat
ret
fwait
jnp
sbb
addb
mov
mov
mov
inc
insb
loopne
mov
insl
icebp
or
add
mov
and
movsb
aam
inc
add
mov
mov
cld
pop
jl
imul
mov
or
sub
fldt
dec
outsb
stos
jp
adc
push
nop
add
sub
rolb
addr16
sbbl
cmc
imul
test
mov
pusha
add
mov
into
aam
es
add
mov
or
mov
xor
cmp
jge
cmp
xor
add
mov
add
iret
mov
add
mov
lds
dec
stc
lret
add
pop
cmc
dec
sbb
lcall
add
rolb
xchg
lds
add
mov
lret
push
loope
fisubrs
ds
and
jge
aaa
or
add
mov
aaa
in
xchg
jl
dec
fmull
dec
cli
push
xor
mov
aas
fnstenv
leave
ficoml
cmpsl
mov
dec
sub
mov
pop
inc
in
fcomip
bound
mov
in
dec
xor
ljmp
inc
rolb
mov
hlt
into
cmp
mov
inc
add
jmp
add
mov
xchg
pop
test
sbb
ss
add
mov
or
adc
mov
mov
mov
repz
jno
xchg
ljmp
sbb
cmpsl
pop
stc
sub
js
dec
dec
mov
mov
push
addb
repnz
or
je
and
aaa
fs
pop
push
mov
or
mov
cs
add
cs
lret
mov
inc
in
dec
cmp
add
cltd
repnz
sub
out
inc
add
mov
stos
icebp
push
ret
ret
sub
dec
jbe
mov
dec
outsl
push
pop
add
mov
adc
mov
sbb
addb
push
cs
xor
mov
xlat
jp
mov
add
mov
in
rolb
mov
jbe
test
out
and
mov
outsl
jl
add
lods
inc
popa
inc
sub
or
mov
add
xor
sub
hlt
mov
std
xchg
clc
pop
cmp
mov
push
dec
lcall
mov
add
xor
mov
cld
sub
add
mov
scas
sub
std
out
and
into
sub
add
test
sub
loop
mov
xor
push
add
mov
mov
in
add
pop
mov
mov
mov
xchg
aam
hlt
stos
out
mov
mov
inc
push
sbb
leave
es
xchg
xor
add
and
jg
call
inc
add
std
xor
cltd
pop
dec
sbb
cmp
fldcw
push
add
enter
add
add
mov
dec
mov
movsl
cmc
insb
xchg
pop
push
mov
mov
mov
out
push
cmp
mov
dec
sub
call
mov
add
mov
add
lret
mov
dec
test
mov
mov
mov
mov
add
cwtl
jmp
jle
add
aad
je
movsl
fdiv
add
outsl
or
mov
lret
add
test
dec
aam
inc
inc
jno
int
add
cmp
loope
mov
insl
fldcw
mov
aaa
sub
test
adc
sbb
adc
mov
add
dec
addb
xor
mov
add
mov
rolb
mov
and
shr
mov
mov
mov
int
addr16
cmp
mov
ja
add
mov
callw
xor
add
add
ret
xor
mov
pop
jb
mov
dec
iret
push
push
adc
mov
add
sbb
push
mov
sbb
adc
enter
or
mov
push
daa
ljmp
push
adc
mov
fildl
scas
sbb
mov
adc
dec
xchg
popa
loop
mov
gs
leave
ret
add
push
ds
rolb
mov
pop
push
fdivrs
adc
xor
sbb
add
pusha
add
sahf
dec
popf
ss
sub
testl
mov
jae
scas
push
and
cmp
dec
jne
add
nop
add
push
dec
sbb
mov
pop
adc
mov
dec
aad
movsl
inc
xchg
mov
fnsave
add
rolb
add
scas
jmp
mov
aam
cld
fists
jmp
xchg
add
sub
and
sub
cli
fsubs
xor
rolb
or
mov
mov
ss
cmpsb
adc
mov
xor
mov
mov
test
jmp
add
aaa
and
cltd
cwtl
xchg
cmpsb
test
add
or
dec
adc
xchg
add
mov
out
xlat
push
add
sub
int
aad
jmp
lds
movsl
ret
xchg
ljmp
sbb
sub
cmpsl
sahf
rolb
mov
cmp
lcall
mov
inc
xchg
add
mov
mov
xchg
jne
add
add
add
cmp
sub
cmp
sub
add
lahf
jmp
push
int
add
pop
xchg
push
or
push
add
shll
dec
outsl
lcall
pop
fwait
jp
stc
or
in
push
fwait
iret
push
mov
outsb
sub
mov
rolb
mov
inc
fs
lea
movsl
adc
sbb
add
push
jno
rolb
adc
mov
sub
cs
rolb
mov
add
jb
mov
jno
jmp
pop
js
lret
sahf
sahf
enter
mov
movaps
stos
loopne
mov
mov
mov
mov
fnop
add
jnp
xor
jno
add
idivl
mov
lahf
add
mov
cmp
jbe
dec
sti
and
mov
int3
pop
push
sub
sub
inc
cmp
inc
add
and
mov
xlat
mov
mov
adc
push
scas
ss
stos
push
or
fstpt
hlt
fdiv
or
dec
inc
and
and
out
or
test
xor
mov
arpl
bound
mov
add
jne
xchg
loope
add
mov
shl
mov
mov
cmp
stos
inc
add
jne
add
sbb
mov
xchg
ja
test
mov
mov
xchg
sbb
jge
adc
mov
addb
push
iret
jnp
cmc
and
es
repz
adc
mov
sbb
sub
mov
xchg
or
push
push
dec
cmp
sub
loopne
mov
adc
mov
mov
fs
int
cwtl
bound
mov
in
inc
out
mov
mov
adc
add
push
imul
mov
push
add
xchg
add
mov
inc
add
push
mov
movsb
dec
ret
fstpl
mov
imulb
push
movsl
add
outsl
mov
cmp
imul
mov
or
sbb
fisubrl
jmp
pop
jno
xlat
add
mov
mov
add
push
in
jnp
test
in
sarl
daa
in
loope
xor
mov
mov
test
cmpsb
jp
add
xorl
jl
push
add
addb
push
mov
mov
mov
inc
cmpsb
jne
and
mov
add
icebp
jmp
inc
add
stos
adc
outsb
inc
mov
sbb
adc
push
xchg
push
add
sub
je
imul
jmp
in
aam
arpl
push
outsb
pop
sbb
pop
add
add
jb
mov
and
lret
xchg
mov
test
clc
or
loop
mov
std
pusha
add
sub
ljmp
idiv
push
iret
imul
push
mov
pause
add
mov
insl
cmp
adc
push
popa
rolb
mov
cli
lods
xchg
cwtl
mov
std
sbb
sahf
fbld
lds
mov
cmp
mov
add
aad
inc
add
mov
sub
or
push
jne
jnp
add
lahf
cmpsb
out
gs
cmp
sub
xor
loope
jecxz
mov
mov
add
sub
dec
xchg
add
inc
add
lcall
bound
mov
aad
ds
add
sbb
adc
fsubrs
add
jnp
cmp
rcl
sbb
cli
cmp
push
out
ds
add
sub
and
mov
adc
jmp
push
mov
add
ret
ret
pop
xor
jg
add
stos
cmp
mov
mov
insb
mov
add
add
addb
mov
jnp
cltd
outsb
cmp
dec
push
add
cltd
inc
iret
mov
inc
loope
jnp
mov
std
cmp
add
mov
repnz
dec
jle
rolb
mov
add
popa
es
popa
adc
xchg
cmp
gs
xor
push
rolb
pop
lret
mov
mov
stc
dec
mov
sub
add
mulb
aam
push
and
add
push
add
mov
pop
lahf
mov
mov
imul
rolb
and
mov
mov
mov
add
movsl
xchg
mov
out
loope
imul
aad
add
mov
add
adc
mov
sbb
jle
sbb
lods
jg
cld
enter
cmc
sbb
jne
mov
pop
iret
jo
mov
mov
insl
je
popf
sub
imul
sbb
addb
sub
mov
add
pop
cmp
add
mov
jo
mov
add
mov
and
sbb
xchg
xchg
xchg
clc
jno
addb
dec
pop
dec
mov
add
mov
mov
add
mov
fcomp
pop
cltd
or
mov
popf
cmp
add
jne
in
fsubl
jno
add
je
sbb
fwait
mov
inc
aaa
pop
adc
add
popf
mov
fcmovnbe
stos
cmp
mulb
mov
pop
pop
mov
in
mov
pop
fwait
xor
ja
dec
jae
and
mov
dec
test
jmp
lods
xchg
jp
je
mov
add
rolb
mov
fldcw
add
iret
call
ret
idivb
lods
call
sub
int
xlat
sahf
mov
push
notb
add
ja
add
cwtl
fwait
add
xchg
add
push
sbb
jecxz
call
daa
mov
mov
mov
rcrl
dec
sbb
add
xor
mov
cwtl
mov
addb
icebp
mov
push
inc
sbb
add
stc
sub
das
jmp
lods
push
scas
sqrtps
sbb
jb
mov
jns
push
filds
add
movsb
push
add
adc
leave
jbe
inc
pop
test
rolb
mov
inc
add
test
mov
jl
add
mov
aad
out
je
add
pop
loopne
mov
add
sub
enter
je
mov
add
fs
add
add
cli
xchg
ret
pop
rolb
mov
xor
mov
add
mov
cli
xor
pop
sti
addb
lods
ljmp
fistpll
mov
sub
nop
add
mov
push
add
std
mov
aam
fbstp
fs
jns
mov
je
add
lods
xor
mov
mov
sti
aam
add
shll
mov
movsb
or
popf
inc
sub
test
mov
sbb
add
mov
sti
xor
jmp
jge
mov
pop
xchg
add
std
push
jecxz
adc
jo
mov
pop
leave
aad
add
popf
ret
ret
push
andl
inc
mov
clc
int
pop
movsb
mov
mov
jne
jnp
jb
mov
in
mov
add
in
lds
add
mov
stos
or
sahf
mov
mov
mov
mov
cmp
pop
dec
pop
sbb
jmp
dec
lock
frstpm(287
rolb
sub
lods
sbb
fwait
pop
cmp
push
lret
mov
mov
add
mov
mov
adc
repz
mov
movsl
int3
pusha
add
int3
xchg
ja
rol
ret
ret
inc
repnz
loop
mov
arpl
mov
jns
sub
cmp
sbb
add
add
fisttps
add
add
push
loop
mov
sbb
xchg
adc
mov
jge
add
xor
pop
pop
dec
adc
mov
dec
pusha
add
fnstenv
fcmovb
pushf
std
dec
inc
lret
rolb
lret
cmp
mov
jmp
add
cmpsl
je
and
add
adc
add
enter
scas
mov
push
test
add
xor
insb
and
mov
mov
repnz
add
insb
test
cmpsb
loope
in
xor
push
out
in
add
mov
sbb
repnz
enter
jbe
std
pop
aam
leave
xchg
jmp
mov
sbb
hlt
xchg
lds
add
cmpsb
pop
std
adc
mov
in
lds
inc
mov
jns
pop
pop
sbb
add
loopne
mov
add
and
test
addb
jle
xor
push
xor
arpl
in
push
xchg
test
pop
lcall
or
repz
mov
dec
gs
add
xchg
lds
mov
popl
add
xor
movsl
and
hlt
notl
sub
sbb
loope
faddp
test
ds
imul
mov
hlt
incb
cmp
sahf
clc
stc
xor
iret
mov
sub
adc
js
in
lods
lods
cli
inc
cmc
jg
cmpsl
in
add
add
addb
inc
dec
inc
clc
add
mov
loop
mov
add
scas
int
xor
movsl
gs
ret
mov
mov
nop
add
add
out
and
mov
sub
jmp
dec
sub
arpl
mov
or
aas
mov
enter
repnz
or
mov
jo
mov
mov
roll
mov
lods
xor
mov
jns
push
adc
mov
loopne
mov
insl
outsl
dec
ljmp
shrl
div
add
jns
out
test
mov
adc
sbb
stos
jge
ret
fs
mov
jg
inc
test
icebp
stos
incl
mov
push
add
mov
fsts
popf
andl
testl
in
sahf
call
add
dec
data16
call
daa
lcall
out
add
cwtl
adc
mov
push
ds
pusha
add
aaa
sub
or
adc
and
mov
mov
add
mov
mov
and
mov
jne
add
int
xchg
sub
daa
pop
in
cld
sub
cmpsl
push
add
fxch
pusha
add
mov
and
popa
aas
call
adc
stos
cmp
xchg
lcall
lret
repz
fwait
sub
add
repnz
daa
or
add
xchg
cmp
jo
mov
add
pop
xor
mov
mov
enter
mov
dec
lods
fcomi
mov
lods
push
add
add
lea
cmp
sbb
push
inc
addb
loop
mov
adc
mov
leave
xor
sbb
add
jbe
pop
subl
or
rolb
mov
xor
aaa
push
add
ret
in
aaa
into
xchg
add
sbb
jecxz
xchg
add
mov
cmpsl
sbb
add
sub
add
mov
out
popf
scas
dec
mov
loopne
mov
dec
out
mov
cld
xchg
add
rolb
mov
pop
dec
jmp
mov
mov
add
jle
pop
add
mov
lock
sub
clc
addb
or
in
outsl
mov
add
mov
add
ret
adc
push
add
push
movsb
adc
rolb
mov
mov
push
add
dec
data16
and
mov
push
mov
sub
int
imul
addb
imul
jmp
stc
push
add
mov
add
sbb
cli
adc
adc
add
adc
mov
sbb
lds
or
add
pop
cmp
addb
push
sbb
push
enter
add
into
xor
fcoml
movsb
jl
xor
insl
dec
mov
sbb
test
lods
xlat
into
adc
mov
adc
mov
mov
sub
add
mov
mov
add
mov
movsl
sti
sub
push
outsl
cmp
mov
add
add
leave
fldt
scas
push
push
lods
sub
mov
push
in
dec
sbb
add
add
rolb
mov
mov
icebp
ficoms
cmp
add
mov
inc
xchg
xor
lods
fwait
lds
outsb
sbb
rorl
pop
les
sbb
fistpll
pop
cmp
testl
loopne
mov
add
int3
jbe
sti
leave
cmc
test
shl
fcomps
mov
xor
cmpsb
add
aas
cmpsb
icebp
test
xor
sub
add
inc
xchg
add
fucomp
mov
jge
in
fsubrs
movsb
jge
pop
scas
in
cmp
data16
je
jnp
xchg
addb
movsl
inc
push
add
mov
mov
mov
in
test
add
sub
in
mov
mov
test
pop
iret
addb
sqrtps
mov
movsb
pop
nop
add
xor
push
push
add
sub
adc
mov
stc
mov
push
dec
push
aas
sub
loope
xchg
add
or
stos
inc
xchg
or
and
sbb
jle
gs
fcomp
sub
jb
mov
js
in
mov
jns
aas
and
add
xchg
add
mov
sbb
test
mov
mov
pop
xchg
jnp
clc
push
ret
adc
outsb
mov
sbb
mov
mov
add
jmp
adc
mov
je
push
or
add
mov
add
testb
fildl
add
outsb
fwait
out
sub
add
add
push
sub
add
shrl
cmc
inc
cmp
addb
jge
int
lret
cmp
sub
cltd
jle
push
add
mov
dec
ja
ljmp
out
fs
jmp
sar
dec
xor
add
mov
pushf
sti
pusha
add
mov
mov
addb
mov
mov
xor
inc
add
cltd
loope
stc
mov
inc
mov
add
cmp
outsb
push
ret
and
and
sub
js
jae
mov
inc
add
movsb
mov
xchg
inc
in
ret
xorl
sub
add
loope
bound
mov
mov
and
test
sub
popf
lret
iret
xchg
stos
or
add
dec
pop
clc
push
add
pop
rolb
mov
addb
dec
ret
fxam
outsl
push
sub
xor
mov
pusha
add
enter
sub
fisttpll
ret
mov
mov
movsl
sbb
push
mov
test
add
cmc
cmp
mov
jbe
pop
xchg
push
outsb
push
add
push
mov
mov
into
xchg
dec
cli
pop
adc
popf
pushf
popf
push
mov
fcoml
mov
push
fsubp
in
addb
mov
or
pop
sahf
movsl
test
jnp
loop
mov
and
into
mov
xchg
add
insl
cmp
outsl
add
mov
mov
add
lahf
fmuls
add
call
out
mov
sub
push
popf
addb
or
cmpsl
imul
test
ret
jbe
mov
in
cltd
shll
add
xchg
and
mov
out
jae
push
add
lret
mov
fldcw
mov
in
dec
test
fstp
sbb
lcall
loopne
mov
loop
mov
in
mov
mov
cltd
mov
xchg
push
add
jns
fisttpl
out
jmp
addr16
ljmp
std
mov
mov
push
sub
sbb
adc
repnz
add
imul
mov
in
dec
jl
jmp
ret
popa
mov
or
mov
xchg
movsb
scas
cmp
mov
out
icebp
addb
or
xchg
call
mov
inc
decl
mov
adc
add
xchg
jb
mov
cmp
iret
lods
push
add
add
lret
loop
mov
dec
inc
rolb
testb
mov
add
add
int
inc
jb
mov
xor
jp
add
mov
add
sbb
xchg
add
mov
hlt
xlat
push
mov
sbb
add
mov
mov
mov
xchg
adc
mov
icebp
push
xchg
add
add
xor
loopne
mov
lret
push
fiaddl
js
sub
in
cmp
cmpsb
dec
mov
add
and
jle
loopne
mov
mov
xor
adc
mov
mov
cmpsb
xlat
inc
jmp
sub
dec
out
adcl
add
je
xor
push
jbe
mov
sti
jg
add
add
pop
repnz
adc
dec
mov
int
in
push
add
or
jns
add
mov
lret
xchg
lods
inc
add
xor
mov
mov
int3
dec
jl
or
fists
push
loope
add
mov
cmp
ljmp
inc
adc
add
data16
stos
xchg
cmpl
add
inc
xor
je
pop
movl
lods
movsb
or
add
xchg
inc
cmp
add
out
mov
mov
push
cmp
sub
fneni(8087
add
add
mov
add
dec
cwtl
stos
ret
ss
xchg
pop
das
adc
push
stos
pop
sub
movsb
add
mov
int3
mov
mov
add
push
and
and
cmp
xchg
lock
in
dec
xor
and
mov
sub
cmpsl
fisttpl
scas
enter
jecxz
das
mov
inc
jae
nop
add
sub
mov
mov
fsubl
dec
enter
scas
cmpsb
mov
jb
mov
xchg
fsubl
push
mov
mov
add
aam
popf
das
gs
ja
and
repz
call
add
mov
cmp
and
mov
push
adc
add
rolb
mov
jp
int
les
popf
stos
dec
rcll
rolb
jl
imull
incb
add
rolb
mov
add
pop
addb
mov
cmp
mov
add
add
lds
js
or
sbb
int
mov
mov
mov
cs
push
pop
loopne
mov
cmc
pushf
mov
lods
jne
add
mov
ficoml
mov
inc
inc
in
leave
pop
and
mov
mov
lret
xchg
mov
leave
jmp
add
mov
add
mov
lret
addb
lds
push
cmp
iret
ftst
fstpl
fsubr
jno
addb
xchg
xor
xchg
add
mov
mov
je
xchg
cmp
and
fsubr
int
movsl
scas
fcoms
mov
out
cmp
cmp
enter
jle
fldl
mov
mov
pop
cmp
mov
shll
arpl
mov
ss
repnz
add
mov
mov
add
pop
pop
pop
push
add
stos
ret
in
clc
nop
add
aad
add
adc
xchg
push
addb
dec
ret
pop
and
mov
push
decb
add
add
add
out
mov
and
add
mov
mov
add
movsb
and
or
add
add
clc
sub
icebp
or
add
sbb
add
mov
or
rolb
mov
int3
lods
fisttpll
fstpt
loope
jle
out
inc
inc
sbb
fwait
dec
lret
push
cmpsb
sub
adc
push
cmp
add
stos
or
fimuls
gs
push
add
inc
and
dec
gs
mov
and
mov
add
dec
imul
mov
les
mov
cmp
mov
jnp
aad
iret
flds
jg
add
sahf
sbb
enter
cmp
incb
imul
sub
or
repz
and
mov
mov
and
mov
lds
arpl
sahf
std
popf
mov
loopne
mov
enter
int3
and
sub
xchg
dec
cmp
jae
mov
mov
movsl
xchg
or
movb
push
add
into
cld
aam
aam
inc
aas
push
add
add
push
repz
test
ds
adc
jo
mov
dec
jae
dec
lcall
add
fs
mov
sarl
aaa
arpl
clc
jmp
add
enter
jmp
mov
add
add
mov
add
aas
dec
xchg
sub
pop
and
mov
add
call
add
jo
mov
mov
mov
call
add
xchg
lahf
xchg
rolb
xor
mov
fiadds
or
insb
sbb
mov
cmp
adc
pop
aaa
xor
xlat
fistpll
insb
inc
add
and
mov
jb
mov
add
push
mov
pop
imul
mov
scas
inc
xchg
add
insb
pop
fsubrl
cmp
mov
sub
pop
sub
mov
dec
outsl
fwait
jmp
fildl
sub
aam
xchg
mov
sub
enter
sbb
fnstsw
pop
lcall
lahf
jno
jle
inc
jno
add
jo
mov
mov
movsb
sub
cmp
inc
dec
rolb
mov
xchg
sti
mov
test
sbb
push
mov
pop
je
add
popf
repz
mov
test
test
cmp
pop
mov
mov
rol
lret
mov
outsl
pop
daa
mov
pop
inc
jmp
js
xchg
push
add
adc
mov
rolb
mov
in
fistps
loopne
mov
sbb
adc
push
lret
inc
test
add
mov
mov
cmp
add
adc
mov
ss
jmp
add
addb
mov
sbb
and
jb
mov
push
out
sbb
fcmovnb
push
je
shr
cmpsb
sub
mov
dec
cmp
cli
mov
icebp
icebp
lret
loop
mov
or
movsb
ss
popf
jbe
or
add
lds
int3
aad
add
mov
sub
fisubrs
test
add
movsb
aam
ss
and
mov
dec
mov
add
add
mov
stc
or
add
iret
les
lock
test
add
pop
mov
sti
jmp
add
stos
pop
les
rolb
mov
push
lahf
aas
push
add
test
add
add
ficompl
add
mov
jns
in
mov
mov
jle
push
add
dec
inc
imul
addr16
pop
or
mov
and
int
test
jnp
dec
and
add
jne
mov
mov
gs
stos
pushf
imul
or
shll
test
mov
lret
mov
add
imul
rolb
les
cmp
lods
movsl
stos
mov
add
nop
add
add
push
add
sahf
push
scas
incl
js
iret
out
push
test
test
es
ret
sub
push
enter
loop
mov
mov
inc
adc
add
inc
add
pushf
add
mov
leave
in
rcll
mov
mov
adc
pusha
add
mov
imul
into
mov
aaa
insb
cltd
pop
movsb
lds
pop
iret
lcall
mov
int
cwtl
mov
subl
leave
mov
mov
xor
adcl
mov
inc
add
and
cli
in
mov
mov
mov
or
out
iret
jp
add
faddl
mov
test
dec
arpl
xchg
jge
dec
mov
adc
lea
int
aas
add
ss
mov
inc
add
bound
mov
adc
mov
decl
jp
cmp
out
adc
mov
mov
loop
mov
stos
in
adc
mov
lds
and
jmp
add
mov
sbb
mov
icebp
sahf
sub
add
fcmovu
add
mov
push
jle
nop
add
and
jp
aad
out
xchg
pop
jb
mov
mov
push
add
in
mov
addr16
int
add
aas
push
cmc
test
mov
sti
pop
pop
pop
pushf
leave
lock
ja
xor
loopne
mov
pop
pop
in
out
in
jns
loope
test
cmc
xor
mov
iret
repz
je
sbb
repz
mov
lock
add
push
jo
mov
mov
inc
jns
sub
push
xor
addr16
cmp
mov
insl
ret
cmp
add
mov
add
or
sbb
mov
or
add
add
dec
seta
mov
add
js
sbb
mov
mov
outsb
out
add
push
mov
push
ret
repz
movsb
xor
and
stos
inc
popa
mov
fxch
jl
mov
mov
cmc
cmc
xlat
imul
pop
and
jp
push
nop
add
mov
mov
hlt
jg
dec
movsb
xchg
mov
or
push
inc
mov
rolb
mov
mov
and
mov
xchg
repz
xchg
jg,pn
call
xchg
fiaddl
ret
fstps
pushf
pop
into
dec
cmc
push
push
mov
js
add
cmp
imul
add
mov
lcall
add
add
add
mov
mov
sbb
mov
xlat
loope
sub
push
jp
inc
shl
sti
xchg
sbb
adc
xor
mov
mov
pop
adc
ret
dec
ret
inc
add
add
addr16
cs
enter
mov
rorl
inc
cmpsl
adc
push
pop
mov
jp
pop
xchg
addr16
imul
addb
pushf
ja
loopne
mov
pop
stos
out
rolb
mov
push
addr16
mov
into
mov
insb
sbb
cmpsb
arpl
add
mov
dec
push
and
ficoms
addb
shll
lcall
cld
aam
subl
mov
dec
movsl
sub
adc
and
iret
push
leave
xchg
adc
mov
inc
sbb
arpl
mov
addl
mov
addb
insl
jno
add
add
stc
xchg
mov
add
add
fbstp
inc
xchg
jns
push
test
jnp
popa
xchg
mov
pop
movsb
or
addl
pop
ret
lahf
fstl
ja
lret
clc
rolb
jmp
out
loop
mov
js
adc
and
mov
ja
out
cmp
aaa
lods
adc
rolb
mov
or
bound
mov
sahf
dec
addb
int3
sub
movsb
push
cmpsb
icebp
cs
movsl
add
cmpsl
gs
add
pop
das
enter
js
mov
inc
clc
mov
or
adc
mov
rolb
mov
out
je
cld
dec
dec
mov
jg
or
mov
add
mov
xchg
sbb
mov
inc
add
in
xchg
push
sbb
repz
iret
push
lret
xchg
mov
jge
add
addr16
push
add
movsb
rolb
mov
loop
mov
lods
test
add
dec
lods
mov
out
jae
add
cmp
xchg
add
pop
cltd
scas
or
push
mov
mov
add
aaa
pop
jno
inc
xor
mov
add
sbb
lahf
pop
xor
add
inc
add
pushl
pop
push
and
pop
test
ffree
add
pop
push
add
inc
pop
aam
mov
push
jo
mov
pop
jp
insb
dec
scas
push
mov
mov
jno
addr16
inc
add
pop
pop
adc
sub
add
xchg
ficomps
mov
lcallw
mov
push
insl
inc
repnz
xchg
adc
mov
dec
pop
fs
xor
mov
push
and
mov
push
add
aam
and
enter
or
cld
lret
or
mov
mov
sbb
xchg
inc
push
jns
add
mov
jg
xor
add
mov
getsec
dec
or
ljmp
je
mov
jae
imul
xor
mov
add
roll
mov
les
cmpsb
lret
mov
adc
jl
loopne
mov
xor
and
mov
mov
add
jns
mov
stc
add
mov
inc
imul
or
add
mov
add
or
xchg
mov
lcall
lret
loope
aas
adc
dec
mov
mov
into
stos
aaa
std
notl
dec
insb
xchg
and
mov
or
mov
movsl
mov
cmc
imul
add
lcall
pop
jp
pop
adc
mov
mov
mov
adc
stos
outsb
adc
bound
mov
adc
mov
out
add
push
sub
jp
push
mov
mov
lcall
mov
adc
add
pop
and
mov
xchg
add
dec
movsl
pop
jnp
push
ret
inc
int3
xor
mov
mov
mov
dec
int3
andl
mov
or
jmp
jg
pop
add
mov
pop
mov
add
test
hlt
mov
rolb
or
stc
or
add
mov
push
rolb
mov
lods
jo
mov
mov
push
add
push
add
ds
iret
cmpsb
xor
pop
aam
pop
lcall
push
xchg
mov
fsubs
add
add
cmp
gs
aad
add
mov
dec
cmc
xchg
out
sbb
cmp
jbe
fcompl
inc
dec
mov
test
add
lds
fcmovnb
add
aad
mov
movsb
xchg
popf
jg
add
lahf
hlt
add
add
cmp
cmc
sti
fsts
inc
push
mov
arpl
cmp
hlt
sbb
and
scas
or
xchg
xchg
dec
fidivrl
jle
cmp
test
add
add
sub
rolb
or
xchg
out
mov
lods
jb
mov
mov
popa
loope
mov
mov
xchg
add
add
add
mov
lret
and
mov
cmpsl
sub
testl
mov
push
mov
mov
pushf
out
cwtl
loop
mov
js
mov
dec
sahf
adc
mov
das
adc
mov
push
add
les
mov
dec
inc
ss
popa
mov
fwait
test
dec
sbb
jmp
or
or
add
push
aas
push
out
call
ret
in
adc
loopne,pt
mov
mov
mov
pop
xor
add
mov
pop
testb
outsl
pop
cmp
sahf
lcall
xchg
add
cmp
jbe
pop
jle
cmp
mov
mov
or
cmp
adc
rolb
lods
dec
mov
das
inc
dec
add
jp
add
loop
mov
jmp
mov
je
das
mov
fcoms
scas
jge
lea
mov
mov
inc
sahf
push
add
mov
leave
pop
in
sbb
mov
pop
add
sbb
loop
mov
rolb
mov
mov
pop
rolb
lea
add
jmp
push
add
rolb
insb
push
arpl
push
xchg
and
sbb
lahf
loope
dec
gs
add
sbb
dec
xchg
test
popa
add
jp
mov
xchg
sub
test
push
push
in
es
imul
sub
add
std
sub
ret
push
call
lds
and
add
pop
jae
mov
xor
add
mov
sbb
add
sbb
sbb
add
pop
stos
mov
cwtl
repz
sub
shl
fs
mov
loope
lahf
cmc
adc
mov
out
lods
xchg
add
in
push
add
or
call
sbb
add
push
clc
inc
daa
dec
fs
iret
mov
out
xchg
sub
add
add
jmp
out
jmp
decb
and
decl
out
jp
add
add
dec
pushf
add
mov
mov
mov
xor
mov
and
mov
dec
pop
push
xchg
cs
sbb
add
mov
add
sbb
dec
xor
popf
in
jl
inc
xchg
pop
int
add
pop
jae
dec
jns
mov
add
mov
add
lods
movsl
int3
pop
jne
jne
sub
push
add
mov
jnp
inc
xchg
lds
sbb
adc
mov
sbb
ja
mov
push
xchg
sarl
xchg
lods
sbb
add
pop
mov
mov
out
xchg
bound
mov
rorl
mov
or
add
jns
dec
inc
jecxz
add
sbb
sti
insl
fstp
xor
fisttpl
pop
mov
xlat
add
out
mov
xchg
stos
push
add
outsl
dec
xchg
xor
mov
and
mov
loopne
mov
mov
mov
in
jbe
pop
and
xchg
jns
movswl
fiaddl
xor
mov
mov
sbb
add
push
sbb
add
mov
cmpsb
loop
mov
xor
add
add
add
aam
cld
push
add
add
pop
daa
jne
pop
ficoms
cmpsl
sub
mov
inc
add
add
fs
mov
dec
pop
push
adcl
fsubl
cli
outsw
cli
jno
aad
orl
add
xchg
in
cmp
add
and
mov
jp
bound
mov
push
and
testl
add
add
xchg
loope
xchg
imul
les
jmp
add
and
add
mov
cmp
sbb
lods
cwtl
mov
ljmp
sub
xchg
stc
sbb
push
xchg
test
sub
mov
mov
push
add
ror
push
jae
mov
icebp
dec
jg
pop
push
add
flds
add
push
cmc
bound
mov
aam
fisubl
cmp
sub
or
sti
movsl
push
ja
push
ret
es
jecxz
dec
cmp
mov
loope
mov
mov
es
add
ss
cmp
call
lret
lea
cltd
pop
xchg
jmp
mov
aaa
push
add
add
ds
adc
loope
pop
and
int
in
lahf
sub
ljmp
xchg
add
mov
mov
cmp
add
add
dec
or
jg
push
mov
push
xchg
push
or
add
add
sahf
lods
lret
xchg
out
popa
jo
mov
mov
nop
add
psubb
mov
arpl
mov
jg
mov
push
addb
int3
insl
mov
daa
jge
pop
sahf
mov
in
gs
push
push
push
jbe
cwtl
int
cmc
add
add
pushf
in
add
out
xor
mov
pop
cmp
out
iret
sub
cltd
pop
shrl
movsl
adc
lds
imul
push
xor
mov
add
mov
cli
or
jg
add
es
bound
mov
or
adc
mov
push
add
or
mov
les
xor
in
in
pop
add
and
mov
shll
popf
adc
sub
mov
jnp
shll
in
or
add
adc
ret
jbe
stc
lahf
push
test
mov
mov
fsubrl
jle
inc
add
jo
mov
lods
cmp
jmp
rcr
imul
xchg
adc
mov
add
cld
sbb
jge
add
and
lds
dec
lret
add
mov
in
pop
sahf
fisttps
fstp
adc
push
push
out
xor
pop
hlt
repz
inc
fs
and
add
xor
into
movsl
push
jmp
repnz
add
cmp
mov
sub
lods
enter
mov
cmp
insl
sbb
jnp
lods
mov
nop
add
adc
mov
ljmp
fbstp
orl
xor
add
add
add
mov
sub
add
fisttps
loopne
mov
mov
mov
adc
mov
addb
jne
pop
jno
test
lods
pop
stc
cmpsb
dec
xor
cmpsb
adc
lods
jne
add
sbb
push
add
mov
add
or
jbe
add
rolb
inc
cli
mov
dec
addr16
push
sti
xchg
js
add
push
add
in
inc
xor
mov
iret
pop
js
jo
mov
int3
ficoml
mov
add
xor
mov
stos
xorl
fists
aaa
xchg
or
xchg
in
insl
sub
jnp
addb
mov
mov
sbb
insl
or
jnp
bound
mov
ss
mov
pop
push
jge
mov
pop
enter
test
aas
and
adc
pop
pop
sbb
jnp
imul
sbb
add
or
push
and
add
pop
fidivrs
push
push
adc
push
pop
mov
add
iret
dec
inc
aas
into
pop
scas
inc
jno
ret
popf
leave
xlat
mov
repz
aaa
loop
mov
addb
bound
mov
inc
ret
jns
psllq
or
loop
mov
addb
stc
test
add
and
jo
mov
loop
mov
in
je
add
xchg
mov
mov
mov
repz
lea
push
jl
inc
cmp
push
cmp
add
out
ret
mov
jno
imulb
fmuls
and
mov
sub
lahf
shrl
add
mov
xchg
add
cmpl
inc
xchg
mov
movsb
je
sub
sbb
divl
add
jmp
mov
inc
cmp
mov
jl
sbb
inc
add
adc
mov
test
popf
ja
pop
out
add
mov
add
and
mov
mov
add
mov
pop
adc
mov
mov
mov
add
inc
jg
xchg
lods
inc
jae
stos
addb
sbb
xchg
in
sub
pusha
add
into
mov
insb
sbb
add
xchg
adcl
push
cmp
mov
push
dec
js
repnz
rolb
mov
sti
mov
imul
fs
inc
add
rolb
mov
mov
mov
push
mov
repnz
cmp
jbe
popa
in
adc
xlat
push
xor
dec
mov
mov
std
popa
out
xchg
or
inc
add
mov
add
add
push
icebp
gs
mov
mov
mov
imul
lahf
cmp
or
out
push
cld
mov
jo
mov
jle
mov
add
mov
mov
mov
add
mov
add
pop
lcall
mov
test
lods
mov
imul
jg
or
ret
loope
ds
nop
add
rcrl
xchg
jae
xchg
imul
fiadds
mov
mov
mov
jnp
push
addb
flds
mov
rolb
mov
mov
aam
add
call
xchg
dec
aad
ds
pop
push
mov
mov
mov
add
add
and
mov
lods
adc
push
jp
jno
mov
dec
push
xchg
add
pop
sbb
pop
lret
mov
mov
dec
fwait
es
xor
int
dec
xor
add
add
add
aaa
out
cwtl
xor
mov
add
mov
and
mov
scas
cli
jecxz
lods
mov
sub
add
xor
mov
mov
add
addb
xchg
dec
xor
mov
jne
add
lret
inc
fwait
mov
mov
add
jno
pop
movsl
lock
sub
loope
add
sub
add
or
add
add
hlt
push
cltd
lods
push
call
add
iret
cld
ljmp
inc
mov
add
or
add
rol
cmp
mov
mov
es
sbb
rolb
add
mov
fisttpll
mov
add
lcall
or
push
rolb
push
popf
insl
dec
mov
add
sbb
jecxz
add
stos
inc
add
mov
aad
addb
sub
imul
sbb
sub
fidivl
dec
sbb
and
mov
es
mov
addr16
mov
add
mov
test
jg
sbbl
add
mov
nop
add
std
sub
loope
ds
mov
xchg
loop
mov
push
push
push
sbb
push
rorl
or
xchg
scas
cmc
xchg
scas
pop
test
add
sub
lcall
and
mov
mov
sub
in
sbb
add
mov
add
nop
add
cwtl
jo
mov
inc
aas
bound
mov
cwtl
sub
dec
dec
push
push
adc
mov
mov
jne
push
add
in
ja
stc
fistpl
sbb
push
xor
mov
out
lock
aad
scas
jb
mov
inc
movsb
push
jo
mov
add
fadd
iret
and
mov
xor
mov
push
xchg
pusha
add
in
pop
cmp
pop
frstor
mov
je
or
addb
dec
aaa
call
pop
and
add
dec
mov
sub
jb
mov
mov
mov
inc
cli
stos
stos
and
dec
insb
aas
and
subl
mov
jmp
aas
sti
xchg
push
das
dec
arpl
dec
sub
and
dec
xchg
add
mov
mov
testb
mov
push
xor
mov
loope
or
add
mov
cwtl
sub
jp
loopne
mov
or
push
dec
jnp
cmp
popf
pop
mov
push
add
sub
ficomps
sbbl
dec
adc
mov
ljmp
add
mov
in
and
mov
sub
lret
dec
xchg
jo
mov
dec
stc
or
lea
add
out
outsb
xchg
das
in
xor
mov
push
xlat
shll
xchg
pushf
loop
mov
jbe
je
mov
and
mov
mov
das
push
hlt
loopne
mov
add
add
das
jno
lods
fcomi
xchg
jge
orl
pop
pop
push
mov
dec
mov
out
mov
test
jecxz
sub
test
faddl
pusha
add
add
test
and
scas
in
pop
dec
dec
mov
dec
clc
cmpsl
inc
and
mov
lods
mov
add
and
add
add
test
cmp
add
dec
jge
add
jecxz
push
add
cmp
inc
out
ds
ret
sahf
xlat
psubq
cltd
pop
push
pop
lods
stos
icebp
rolb
mov
bound
mov
jle
ret
stc
mov
jb
mov
mov
add
inc
xchg
and
or
add
push
dec
imul
fstl
mov
mov
xchg
add
clc
leave
fs
in
xchg
ret
mull
mov
ds
pop
dec
rcrl
mov
rolb
mov
movsl
repnz
pop
jp
or
push
out
icebp
mov
pop
popf
outsl
push
mov
loope
mov
test
imull
pop
add
mov
imul
popa
addb
jo
mov
sub
mov
repz
test
add
add
add
mov
sub
add
mov
add
push
mov
pusha
add
xchg
inc
rolb
movsl
pop
rolb
andl
in
stc
mov
cli
into
or
cmp
xlat
mov
jb
mov
aaa
bound
mov
test
add
mov
push
data16
dec
cmpsb
movsl
or
mov
xchg
and
mov
lcall
fucompp
cmp
mov
add
push
add
add
mov
and
mov
das
add
add
scas
loope
cltd
test
mov
add
and
add
push
add
adc
mov
adc
mov
and
mov
stos
xor
inc
imul
mov
xchg
stos
inc
sbb
adc
mov
pop
fadds
ds
cmp
mov
push
fwait
repz
add
push
ficoms
repnz
test
mov
add
in
nop
leave
jmp
cmp
lahf
mov
clc
repnz
nop
cld
jae
add
popa
add
repnz
nop
cld
jae
add
aam
sbb
rclb
jmp
and
and
push
add
add
shll
mov
xchg
ret
cmp
popa
in
dec
fs
movlps
add
dec
into
cli
dec
jnp
jge
cmc
add
add
add
or
repnz
nop
cld
jae
add
push
add
add
add
mov
xchg
ret
add
mov
testl
stos
push
mov
xchg
ret
movsl
pop
cmp
pop
add
mov
add
clc
repnz
nop
cld
jae
jle
add
dec
add
adc
push
mov
add
test
xchg
jp
add
sub
add
out
add
push
mov
xchg
ret
pop
add
or
bound
mov
out
push
mov
nop
leave
jmp
add
add
add
push
mov
xchg
ret
jge
clc
add
add
cli
adc
push
clc
repnz
nop
cld
jae
add
adc
add
add
rcl
mov
out
inc
add
testl
add
incl
add
clc
repnz
nop
cld
jae
add
add
add
clc
repnz
nop
cld
jae
add
push
dec
add
dec
sub
jg
clc
repnz
nop
cld
jae
cmc
add
aaa
add
mov
addr16
movzwl
clc
repnz
nop
cld
jae
add
movsl
push
popa
cli
add
clc
repnz
nop
cld
jae
adc
dec
lcall
mov
nop
leave
jmp
bound
data16
push
mov
xchg
ret
cmc
mov
aaa
or
mov
aad
fldl
jne
push
mov
nop
leave
jmp
cmp
push
add
add
cmpsb
inc
outsb
and
clc
repnz
nop
cld
jae
sbb
add
push
push
mov
xchg
ret
push
dec
add
add
jae
xor
push
mov
xchg
ret
imul
inc
cmp
repnz
nop
cld
jae
pop
adc
add
mov
push
clc
repnz
nop
cld
jae
add
add
add
lock
mov
xchg
ret
rolb
dec
xor
add
pop
or
repnz
nop
cld
jae
leave
adc
add
repnz
nop
cld
jae
add
add
add
jge
pusha
add
mov
nop
leave
jmp
add
dec
add
pop
cmp
push
add
mov
add
test
add
clc
repnz
nop
cld
jae
add
and
mov
push
mov
xchg
ret
add
aaa
add
xor
clc
repnz
nop
cld
jae
add
mov
mov
mov
xchg
ret
sahf
aam
dec
leave
add
mov
clc
repnz
nop
cld
jae
sbb
add
push
mov
xchg
ret
adc
and
add
das
rep
push
mov
xchg
ret
aaa
popa
push
add
test
aaa
les
rol
push
mov
xchg
ret
aaa
push
push
add
add
jmp
jmp
lcall
xor
cli
add
add
in
xlat
and
mov
add
pop
add
addl
lcall
jnp
sti
push
mov
nop
leave
jmp
add
add
and
xor
mov
add
jns
add
add
add
add
mov
clc
repnz
nop
cld
jae
add
add
lcall
loop
push
mov
xchg
ret
adc
add
jge
add
clc
repnz
nop
cld
jae
jle
add
les
repnz
nop
cld
jae
push
adc
jle
ror
add
push
mov
nop
leave
jmp
jge
add
popa
aam
cmp
in
nop
leave
jmp
data16
add
add
push
add
clc
repnz
nop
cld
jae
add
aaa
add
mov
mov
clc
repnz
nop
cld
jae
add
and
test
jecxz
inc
add
sbb
add
sarb
dec
movzwl
clc
repnz
nop
cld
jae
cmp
cli
and
or
in
or
add
movb
add
adc
repnz
dec
dec
push
mov
xchg
ret
add
test
add
imul
clc
repnz
nop
cld
jae
adc
add
mov
add
add
push
mov
xchg
ret
add
in
adc
add
sbb
clc
repnz
nop
cld
jae
outsl
cmp
mov
test
mov
nop
leave
jmp
repz
leave
mov
mov
push
mov
nop
leave
jmp
dec
popa
dec
jle
push
mov
nop
leave
jmp
into
rorb
add
add
sbb
xor
add
clc
repnz
nop
cld
jae
mov
push
add
repnz
nop
cld
jae
outsl
in
dec
sub
rclb
fiadds
xchg
ret
mov
repz
add
add
adc
repnz
nop
cld
jae
pop
add
aaa
inc
sub
sar
repnz
nop
cld
jae
add
cmpsl
push
add
idivb
push
push
mov
xchg
ret
xor
cli
mov
pop
and
repnz
nop
cld
jae
add
push
add
repz
clc
repnz
nop
cld
jae
add
fistpll
jnp
add
or
lret
in
nop
leave
jmp
cmc
mov
add
add
cmpsl
lret
push
clc
repnz
nop
cld
jae
movsl
add
mul
add
add
add
add
add
data16
mov
push
add
dec
movsl
inc
out
add
push
mov
mov
push
add
nop
nop
cld
jae
add
add
add
add
nop
add
add
inc
add
adc
bound
xor
dec
lcall
repnz
nop
cld
jae
mov
add
and
xchg
push
sti
mov
clc
repnz
nop
cld
jae
bound
pop
push
pop
add
pop
and
push
mov
xchg
ret
add
or
add
xchg
push
push
mov
nop
leave
jmp
add
repz
mov
nop
leave
jmp
add
adc
add
cmp
in
xor
push
mov
nop
leave
jmp
leave
and
sbb
add
xlat
mov
cltd
push
push
mov
xchg
ret
add
add
or
jnp
push
mov
mov
aam
mov
mov
xchg
ret
add
adc
aam
movsl
gs
lea
clc
repnz
nop
cld
jae
add
sahf
push
jge
add
push
mov
nop
leave
jmp
add
add
mov
dec
add
add
clc
repnz
nop
cld
jae
aaa
push
imul
add
scas
add
add
in
xor
and
add
adc
mov
pushl
push
mov
xchg
ret
adc
dec
mov
xor
jle
or
repnz
nop
cld
jae
rolb
add
add
fcoml
mov
xchg
ret
add
cmp
cmpsl
idivl
mov
mov
mov
call
in
nop
leave
jmp
add
add
cli
mov
clc
repnz
nop
cld
jae
cmc
aaa
add
add
add
pop
add
clc
repnz
nop
cld
jae
add
mov
add
clc
repnz
nop
cld
jae
add
in
add
aaa
or
popa
add
repnz
nop
cld
jae
cmc
add
add
add
repnz
nop
cld
jae
add
add
add
pop
mov
clc
repnz
nop
cld
jae
addl
push
clc
repnz
nop
cld
jae
add
add
dec
add
lcall
roll
xchg
ret
mov
add
pop
mov
push
mov
xchg
ret
cmp
dec
leave
bound
mov
nop
nop
cld
jae
dec
add
bound
add
push
clc
repnz
nop
cld
jae
add
jge
aaa
add
push
inc
add
and
clc
repnz
nop
cld
jae
add
popa
add
pusha
add
add
in
nop
leave
jmp
add
xor
mov
pop
clc
repnz
nop
cld
jae
dec
cmp
sbbl
push
mov
xchg
ret
movl
push
push
mov
cli
clc
repnz
nop
cld
jae
add
add
add
add
pop
mov
clc
repnz
nop
cld
jae
aaa
add
add
movsb
xchg
sti
jmp
add
popa
shlb
add
add
rolb
add
push
mov
nop
nop
cld
jae
dec
data16
add
add
add
clc
repnz
nop
cld
jae
cmc
cmp
aam
js
jne
clc
repnz
nop
cld
jae
xor
add
flds
sti
add
add
in
nop
leave
jmp
add
add
leave
push
mov
nop
leave
jmp
test
repz
add
add
add
push
clc
repnz
nop
cld
jae
imul
add
xchg
add
clc
repnz
nop
cld
jae
sahf
dec
push
add
or
push
mov
nop
leave
jmp
pop
push
cmp
outsl
aaa
add
add
rep
clc
repnz
nop
cld
jae
mov
adc
add
add
sbb
jb,pt
push
mov
nop
leave
jmp
add
lea
nop
leave
jmp
push
add
sahf
movsl
push
add
mov
inc
sub
repnz
nop
cld
jae
jle
add
dec
push
dec
push
mov
rcll
cmpsb
add
add
add
cmp
test
xrelease
clc
repnz
nop
cld
jae
pop
add
popa
sahf
in
xchg
add
push
clc
repnz
nop
cld
jae
push
xor
xchg
fwait
mov
clc
repnz
nop
cld
jae
push
mov
cmp
push
mov
nop
leave
jmp
add
fsts
cmp
add
in
nop
leave
jmp
add
add
add
pop
push
mov
xchg
ret
and
add
add
add
add
imul
clc
repnz
nop
cld
jae
sbbl
add
mov
add
push
js
mov
nop
leave
jmp
add
push
cmp
into
test
andl
nop
cld
jae
add
add
inc
stc
cmpl
push
mov
nop
leave
jmp
add
and
add
jno
popf
jmp
add
add
add
add
push
push
adc
mov
push
clc
repnz
nop
cld
jae
add
into
add
cmc
orl
xor
push
mov
nop
leave
jmp
add
imul
sub
clc
repnz
nop
cld
jae
into
adc
xchg
rolb
push
add
clc
repnz
nop
cld
jae
lcall
repnz
nop
cld
jae
add
add
add
popa
cmp
mov
mov
clc
repnz
nop
cld
jae
jle
add
clc
repnz
nop
cld
jae
xchg
repz
add
push
mov
xchg
ret
add
movsl
add
add
sbb
je
mov
nop
leave
jmp
and
testl
cld
jae
add
repz
fs
clc
repnz
nop
cld
jae
add
pop
add
mov
nop
leave
jmp
fldenv
aaa
add
add
outsl
add
push
mov
xchg
add
ret
push
add
push
cwtl
add
xlat
lahf
add
dec
add
jmp
repnz
nop
cld
jae
push
add
add
add
mov
push
mov
nop
leave
jmp
add
mov
add
jb
jae
push
mov
nop
leave
jmp
add
add
clc
repnz
nop
cld
jae
xor
add
cmc
fadds
add
repnz
nop
cld
jae
add
cmpsl
add
add
repnz
nop
cld
jae
add
add
lahf
shl
clc
repnz
nop
cld
jae
add
testl
lea
clc
repnz
nop
cld
jae
add
add
add
nop
cld
jae
sahf
add
add
add
jmp
add
add
repnz
nop
cld
jae
push
cmp
add
in
nop
leave
jmp
dec
add
pop
adc
mov
nop
leave
jmp
add
xor
mov
rcll
mov
in
nop
leave
jmp
clc
add
add
lods
and
imul
nop
nop
cld
jae
lcall
fptan
call
in
nop
leave
jmp
cli
data16
cli
push
jmp
incl
add
test
dec
add
push
push
sbb
mov
push
mov
xchg
ret
add
add
dec
repz
xchg
cmp
nop
nop
cld
jae
and
add
out
mov
clc
repnz
nop
cld
jae
add
lcall
mov
push
mov
xchg
ret
in
add
add
add
pop
enter
push
mov
xchg
ret
add
add
clc
repnz
nop
cld
jae
dec
add
and
add
add
clc
repnz
nop
cld
jae
or
push
lret
mov
clc
repnz
nop
cld
jae
add
aaa
add
dec
xor
push
mov
nop
leave
jmp
add
leave
xbegin
sub
add
repnz
nop
cld
jae
add
bound
sarb
loop
push
mov
nop
leave
jmp
aaa
lcall
lds
dec
mov
clc
repnz
nop
cld
jae
sbb
clc
add
cltd
mov
clc
repnz
nop
cld
jae
add
rclb
add
add
add
repnz
nop
cld
jae
mov
push
add
add
repnz
nop
cld
jae
add
add
jbe
clc
repnz
nop
cld
jae
add
cmp
add
and
push
mov
xchg
ret
add
jle
xor
sbb
repnz
nop
cld
jae
add
add
pop
and
add
clc
repnz
nop
cld
jae
add
push
add
add
popa
add
repnz
nop
cld
jae
cmp
add
add
mov
push
mov
xchg
ret
add
add
or
nop
leave
jmp
add
popa
cmp
nop
nop
cld
jae
sbb
add
push
add
push
mov
xchg
ret
aaa
add
cmp
cmp
mov
clc
repnz
nop
cld
jae
add
add
add
clc
repnz
nop
cld
jae
rclb
cmp
call
in
nop
leave
jmp
push
add
push
rol
cld
call
clc
repnz
nop
cld
jae
cmpsl
add
incb
pop
cmp
mov
xchg
ret
cmp
lcall
push
mov
xchg
ret
add
add
add
aam
sbbl
clc
repnz
nop
cld
jae
add
add
repz
add
add
nop
nop
cld
jae
adc
add
daa
mov
nop
nop
cld
jae
add
add
mov
xchg
gs
mov
clc
repnz
nop
cld
jae
cmc
cmp
mov
je
mov
clc
repnz
nop
cld
jae
add
rolb
add
add
dec
mov
push
mov
xchg
ret
add
add
repz
add
aas
popa
push
mov
xchg
ret
add
add
mov
clc
repnz
nop
cld
jae
push
add
test
add
push
mov
nop
leave
jmp
in
sahf
add
push
clc
repnz
nop
cld
jae
push
cmp
pop
and
adc
enter
clc
repnz
nop
cld
jae
into
add
xor
xor
adc
cld
jae
flds
jge
icebp
dec
xor
push
mov
xchg
ret
add
add
cmp
nop
nop
cld
jae
mov
add
mov
clc
repnz
nop
cld
jae
jge
cli
add
push
clc
repnz
nop
cld
jae
add
add
repz
add
mov
mov
clc
repnz
nop
cld
jae
add
lods
mov
push
mov
xchg
ret
cmp
add
add
or
stos
mov
push
mov
nop
leave
jmp
add
add
add
add
in
mov
push
mov
nop
leave
jmp
add
add
add
add
push
mov
xchg
ret
add
adc
add
add
add
movsl
test
add
add
mov
add
push
aaa
inc
add
cmp
clc
repnz
nop
cld
jae
mull
test
and
push
mov
nop
leave
jmp
jle
add
je
clc
repnz
nop
cld
jae
add
jp
outsl
arpl
add
repnz
nop
cld
jae
rolb
add
push
mov
xchg
ret
add
add
push
dec
add
pop
nop
push
mov
xchg
ret
add
add
add
add
in
xlat
daa
js
clc
repnz
nop
cld
jae
bound
mov
sub
repz
add
jle
push
shlb
in
add
into
mov
push
xchg
rolb
mov
mov
pop
add
lcall
popa
add
addb
ds
clc
repnz
nop
cld
jae
add
and
mov
xchg
ret
add
push
mov
mov
clc
repnz
nop
cld
jae
pop
add
adc
mov
mov
clc
repnz
nop
cld
jae
mov
clc
repnz
nop
cld
jae
aam
add
add
cmp
repnz
nop
cld
jae
adc
add
add
inc
add
icebp
clc
repnz
nop
cld
jae
sahf
popa
xchg
out
and
clc
repnz
nop
cld
jae
add
mov
clc
repnz
nop
cld
jae
add
fbld
add
movsb
clc
repnz
nop
cld
jae
add
push
add
add
xchg
jle
push
idiv
incl
add
add
add
add
add
add
add
dec
div
clc
repnz
nop
cld
jae
push
add
add
add
repnz
nop
cld
jae
add
add
cld
or
add
repnz
nop
cld
jae
cli
jnp
push
xchg
inc
add
nop
nop
cld
jae
cmp
repz
mov
add
push
mov
xchg
ret
add
add
add
cmp
cmc
adc
mov
cmp
repnz
nop
cld
jae
add
pop
and
add
nop
clc
repnz
nop
cld
jae
add
add
clc
repnz
nop
cld
jae
imul
push
clc
repnz
nop
cld
jae
add
data16
flds
pusha
add
mov
mov
nop
leave
jmp
and
add
adc
mov
push
mov
xchg
ret
add
add
sbbl
jle
mov
clc
repnz
nop
cld
jae
add
jne
add
or
inc
add
aaa
add
add
add
and
push
mov
xchg
ret
flds
xlat
xchg
repnz
nop
cld
jae
mov
add
pop
stc
les
clc
repnz
nop
cld
jae
push
add
add
arpl
mov
add
clc
repnz
nop
cld
jae
notl
add
nop
cld
jae
aaa
adc
dec
add
mov
clc
repnz
nop
cld
jae
xchg
aaa
and
add
pop
push
mov
xchg
ret
add
aam
add
add
xor
pop
push
mov
xchg
ret
add
dec
add
jge
and
add
clc
repnz
nop
cld
jae
add
add
clc
repnz
nop
cld
jae
add
dec
bound
mov
mov
enter
jno
ss
mov
add
sbb
nop
nop
cld
jae
into
leave
cli
fbstp
into
stc
call
clc
repnz
nop
cld
jae
xor
push
mov
daa
das
inc
push
mov
xchg
ret
pop
xor
sahf
jnp
sbb
push
sti
mov
clc
repnz
nop
cld
jae
rolb
filds
dec
lcall
xlat
testb
cmp
ret
aaa
add
add
add
sub
add
in
nop
leave
jmp
pop
cli
add
loope
aaa
cltd
xchg
push
mov
xchg
ret
jle
add
add
into
mov
in
test
push
mov
nop
leave
jmp
test
addl
into
into
mov
mov
nop
leave
jmp
and
pop
dec
and
adc
dec
mov
clc
repnz
nop
cld
jae
outsl
xchg
cmp
add
push
mov
xchg
ret
and
xchg
add
addl
scas
add
clc
repnz
nop
cld
jae
add
movsl
or
pop
mov
and
push
mov
xchg
ret
add
flds
add
das
mov
clc
repnz
nop
cld
jae
add
add
shl
dec
call
clc
repnz
nop
cld
jae
negl
cmp
sub
mov
nop
leave
jmp
add
push
aaa
and
repnz
nop
cld
jae
and
mov
mov
ret
push
mov
in
add
add
test
call
jg
lods
mov
clc
repnz
nop
cld
jae
dec
add
add
add
mov
xchg
ret
add
add
add
cmp
dec
cmp
push
mov
nop
leave
jmp
dec
pop
mov
add
push
mov
nop
leave
jmp
mull
dec
add
push
push
mov
xchg
ret
dec
test
jge
pop
mov
jmp
add
add
mov
aaa
push
add
lods
pop
clc
repnz
nop
cld
jae
push
adc
data16
jns
add
in
nop
leave
jmp
cmp
or
movl
clc
repnz
nop
cld
jae
add
cmpsl
pop
in
shrl
add
clc
repnz
nop
cld
jae
add
add
in
mov
add
adc
in
nop
leave
jmp
push
add
mov
mov
clc
repnz
nop
cld
jae
add
bound
mov
sbb
fucom
inc
add
dec
aaa
add
add
stc
push
clc
repnz
nop
cld
jae
pop
add
hlt
mov
mov
xchg
ret
add
sbb
imul
dec
push
mov
nop
leave
jmp
cli
popa
outsl
add
or
in
xchg
cli
pop
clc
repnz
nop
cld
jae
add
in
add
push
imul
xchg
ret
cmp
add
sahf
add
jge
push
mov
nop
leave
jmp
aaa
fs
test
add
imul
and
repnz
nop
cld
jae
add
dec
add
dec
insl
movzwl
clc
repnz
nop
cld
jae
add
cmpsl
add
fwait
pusha
push
mov
xchg
ret
add
aam
imul
movzwl
push
mov
xchg
ret
add
adc
add
jmp
test
repnz
nop
cld
jae
rolb
aaa
and
mov
repnz
nop
cld
jae
or
and
mov
jno
add
push
push
mov
nop
leave
jmp
add
add
in
test
mov
nop
cld
jae
mov
add
push
ret
push
mov
xchg
ret
push
in
movsl
add
in
popa
sarl
sbb
in
nop
leave
jmp
add
add
neg
imul
inc
add
movsl
push
cmpsl
adc
add
add
nop
leave
jmp
and
adc
filds
add
and
or
in
nop
leave
jmp
jge
leave
push
add
stos
mov
clc
repnz
nop
cld
jae
push
add
aaa
push
push
stc
out
clc
repnz
nop
cld
jae
add
gs
pop
jmp
incl
add
popa
lcall
mov
lcall
mov
add
clc
repnz
nop
cld
jae
rolb
push
cmp
adc
call
clc
repnz
nop
cld
jae
push
add
filds
dec
adc
mov
inc
add
xor
add
dec
add
mov
in
nop
leave
jmp
jge
add
dec
add
dec
cmp
push
mov
nop
leave
jmp
add
adc
add
xchg
mov
movsl
add
adc
fs
into
mov
clc
repnz
nop
cld
jae
jnp
bound
push
mov
nop
leave
jmp
add
add
add
leave
cmc
pop
enter
xor
add
clc
repnz
nop
cld
jae
add
fwait
push
clc
repnz
nop
cld
jae
add
add
pop
add
push
push
mov
repnz
nop
cld
jae
cli
and
clc
or
add
push
mov
xchg
ret
push
add
idivl
add
push
mov
nop
nop
cld
jae
push
cmp
add
call
clc
repnz
nop
cld
jae
fsts
add
and
mov
enter
sbb
repnz
nop
cld
jae
dec
add
add
scas
imul
push
mov
nop
leave
jmp
sbb
add
push
mov
xchg
ret
fstps
add
add
add
ljmp
mov
nop
leave
jmp
movsl
add
add
and
mov
mov
lea
loop
mov
and
add
add
or
mov
nop
leave
jmp
add
movsl
add
mov
clc
repnz
nop
cld
jae
repz
add
add
int3
es
clc
repnz
nop
cld
jae
add
mov
push
mov
xchg
ret
add
push
cmp
jnp
pusha
clc
repnz
nop
cld
jae
xchg
add
add
imul
clc
repnz
nop
cld
jae
add
mov
mov
clc
repnz
nop
cld
jae
fldenv
add
leave
jns
adc
repnz
nop
cld
jae
dec
aaa
or
mov
push
sub
cmc
loopne
add
add
leave
and
clc
repnz
nop
cld
jae
add
movsl
fisttps
add
mov
nop
leave
jmp
add
add
add
clc
repnz
nop
cld
jae
cmc
add
cmc
push
leave
push
add
push
mov
nop
leave
jmp
add
filds
push
and
jg
clc
repnz
nop
cld
jae
mov
adc
push
popa
jo
mov
mov
inc
jb
clc
repnz
nop
cld
jae
add
jne
clc
repnz
nop
cld
jae
cmp
clc
repnz
nop
cld
jae
add
pop
push
add
rolb
mov
arpl
clc
repnz
nop
cld
jae
cmpsl
add
in
push
clc
repnz
nop
cld
jae
add
add
nop
nop
cld
jae
add
shlb
sahf
add
push
push
mov
nop
leave
jmp
adc
jle
dec
add
mov
clc
repnz
nop
cld
jae
add
add
mov
pop
inc
clc
repnz
nop
cld
jae
add
repz
jnp
add
mov
mov
mov
clc
repnz
nop
cld
jae
xchg
add
mov
and
xchg
push
mov
nop
leave
jmp
jnp
adc
test
add
icebp
sahf
pop
push
mov
xchg
ret
cmp
push
add
add
mov
nop
cld
jae
add
add
add
movsl
rolb
pop
push
mov
addl
push
mov
add
cld
add
dec
push
mov
nop
leave
jmp
popa
rorb
cmp
add
lods
add
push
mov
nop
leave
jmp
mov
in
cld
push
clc
repnz
nop
cld
jae
add
add
rolb
popa
add
repnz
nop
cld
jae
cli
sahf
add
xor
push
mov
xchg
ret
clc
push
or
push
mov
addl
mov
push
mov
xchg
ret
dec
push
in
dec
add
insb
lea
clc
repnz
nop
cld
jae
aaa
add
mov
neg
add
push
mov
xchg
ret
cmp
add
add
cmpsb
imulb
dec
imul
cld
jae
cmp
add
mull
add
in
nop
leave
jmp
in
adc
add
mov
mov
clc
repnz
nop
cld
jae
add
cmp
lods
stc
inc
add
aaa
push
add
cmp
add
cmc
clc
repnz
nop
cld
jae
adc
cmpsl
mov
add
nop
nop
cld
jae
add
dec
add
push
add
lret
clc
repnz
nop
cld
jae
add
xchg
mov
mov
clc
repnz
nop
cld
jae
aaa
pop
aam
add
add
add
into
add
dec
jle
or
xor
push
adc
mov
clc
repnz
nop
cld
jae
add
cmc
push
sahf
rolb
adc
mov
aaa
xchg
add
pop
jae
repnz
nop
cld
jae
pop
testl
repnz
nop
cld
jae
add
adc
add
push
mov
xchg
ret
adc
cmp
push
push
push
push
cmp
nop
nop
cld
jae
add
in
push
add
call
clc
repnz
nop
cld
jae
mov
jb
mov
movswl
push
mov
nop
leave
jmp
test
add
push
mov
nop
leave
jmp
and
adc
add
jnp
xor
jmp
rolb
xchg
ret
push
add
aaa
add
xchg
dec
add
scas
mov
clc
repnz
nop
cld
jae
jnp
add
loopne
mov
xchg
ret
movsl
and
add
add
test
add
clc
repnz
nop
cld
jae
add
dec
add
repnz
nop
cld
jae
aaa
add
add
filds
fistl
in
lret
repz
add
add
add
add
push
inc
jg
add
dec
not
push
mov
xchg
ret
fisttps
bound
repnz
nop
cld
jae
add
add
add
xor
lods
test
push
mov
nop
leave
jmp
add
push
clc
repnz
nop
cld
jae
add
add
movzwl
clc
repnz
nop
cld
jae
add
add
add
xor
clc
repnz
nop
cld
jae
add
add
aad
enter
push
mov
xchg
ret
push
add
and
add
and
repnz
nop
cld
jae
add
pop
add
and
clc
repnz
nop
cld
jae
add
adc
mov
mov
lret
add
cmp
nop
nop
cld
jae
add
outsl
rolb
mov
in
nop
leave
jmp
mov
sahf
push
add
pushf
add
clc
repnz
nop
cld
jae
rclb
add
add
loop
push
mov
xchg
ret
add
add
lcall
or
clc
repnz
nop
cld
jae
add
add
add
pop
cld
push
mov
xchg
ret
add
push
add
aaa
leave
in
aad
pop
push
mov
xchg
ret
xor
mov
movsl
fistpll
mov
test
push
mov
xchg
ret
add
add
fincstp
push
push
add
in
nop
leave
jmp
shrb
and
add
push
add
test
mov
nop
leave
jmp
add
push
test
xchg
add
mov
nop
nop
cld
jae
clc
or
aam
and
stos
rep
clc
repnz
nop
cld
jae
cmp
add
add
rcl
lods
pushl
clc
repnz
nop
cld
jae
pop
lcall
push
mov
sub
add
movsl
add
add
push
mov
xchg
ret
add
add
shlb
mov
clc
repnz
nop
cld
jae
outsl
add
clc
and
mov
push
mov
nop
leave
jmp
add
add
xor
enter
nop
cld
jae
and
add
mov
fildl
xchg
ret
add
sbb
add
mov
outsl
ljmp
or
repnz
nop
cld
jae
add
cmc
rorl
cmc
inc
add
add
add
dec
and
add
mov
mov
clc
repnz
nop
cld
jae
add
sub
popa
add
mov
xchg
ret
mov
add
cmc
test
dec
add
repnz
nop
cld
jae
add
aaa
adc
add
clc
repnz
nop
cld
jae
add
add
dec
data16
mov
arpl
mov
nop
leave
jmp
add
add
pushf
pusha
push
mov
nop
leave
jmp
add
xchg
pop
add
mov
jmp
clc
repnz
nop
cld
jae
add
loopne
mov
shr
clc
repnz
nop
cld
jae
add
pop
adc
add
ja
jmp
mov
add
add
add
add
mov
xchg
ret
into
jge
add
add
clc
repnz
nop
cld
jae
leave
cmp
test
icebp
inc
add
add
add
xor
je
push
mov
nop
leave
jmp
add
mov
xchg
push
and
fistl
in
sahf
add
add
inc
sub
sbb
xchg
aam
add
push
mov
xchg
ret
add
cli
and
fs
push
push
mov
nop
leave
jmp
push
add
add
lea
nop
nop
cld
jae
jle
and
add
pusha
add
add
psadbw
xchg
ret
clc
add
add
add
repnz
nop
cld
jae
add
add
xor
dec
xchg
mov
clc
repnz
nop
cld
jae
add
imul
mov
mov
clc
repnz
nop
cld
jae
cmp
add
add
sahf
ljmp
leave
jmp
add
add
cmp
stc
inc
add
add
adc
add
and
add
mov
nop
leave
jmp
add
mov
add
cmp
test
inc
add
mov
xchg
push
insl
call
clc
repnz
nop
cld
jae
cmp
dec
cmpsl
push
popl
repz
repnz
nop
cld
jae
add
outsl
cmp
mov
push
mov
nop
leave
jmp
add
xchg
add
and
js
repnz
nop
cld
jae
adc
pop
lcall
repnz
nop
cld
jae
mov
clc
repz
call
clc
repnz
nop
cld
jae
test
add
ficoms
mov
xchg
ret
clc
fs
push
mov
mov
stos
push
mov
nop
leave
jmp
add
push
imul
out
jmp
sahf
push
add
mov
dec
add
mov
xchg
ret
push
repz
repnz
nop
cld
jae
bound
add
test
loop
call
in
nop
leave
jmp
and
dec
ss
ficompl
repnz
nop
cld
jae
flds
add
add
in
call
clc
repnz
nop
cld
jae
cmc
pop
cli
add
mov
xchg
ret
mov
cmp
movsl
jo
mov
lea
push
mov
nop
leave
jmp
add
add
add
rolb
test
les
push
mov
xchg
ret
add
add
fmull
push
roll
xchg
ret
adc
add
add
clc
repnz
nop
cld
jae
mov
and
mov
aaa
lret
push
push
mov
xchg
ret
add
aaa
add
add
outsl
push
clc
repnz
nop
cld
jae
into
add
push
add
jne
pop
clc
repnz
nop
cld
jae
xchg
add
add
xchg
add
pop
or
repnz
nop
cld
jae
clc
add
or
outsl
mov
push
mov
xchg
ret
adc
push
lcall
rolb
mov
cmp
push
mov
xchg
ret
add
add
repnz
nop
cld
jae
add
add
add
add
pop
add
add
repnz
nop
cld
jae
in
add
repnz
nop
cld
jae
add
addb
es
mov
clc
repnz
nop
cld
jae
into
add
jae
inc
push
mov
nop
leave
jmp
lcall
add
inc
fs
mov
mov
mov
add
repnz
nop
cld
jae
outsl
pop
xchg
push
dec
mov
movsb
clc
repnz
nop
cld
jae
test
fs
add
or
clc
repnz
nop
cld
jae
mov
repz
clc
repnz
nop
cld
jae
imul
pop
call
in
nop
leave
jmp
fs
add
mov
add
nop
nop
cld
jae
add
add
add
cltd
movzwl
clc
repnz
nop
cld
jae
add
into
add
cmp
mov
nop
leave
jmp
mov
cmpsl
add
adc
nop
cld
jae
in
push
and
add
push
add
test
idiv
clc
repnz
nop
cld
jae
lcall
xchg
jmp
mov
add
add
aam
inc
add
fdivr
clc
repnz
nop
cld
jae
test
test
orl
add
in
nop
leave
jmp
push
lcall
xor
clc
repnz
nop
cld
jae
add
push
test
mov
push
add
nop
nop
cld
jae
add
addl
add
idivl
nop
leave
jmp
mov
add
cmp
add
inc
call
repnz
nop
cld
jae
add
cmpsl
add
xchg
dec
mov
clc
repnz
nop
cld
jae
sbb
insl
pop
push
mov
nop
leave
jmp
sbb
into
mov
sarb
in
mov
clc
repnz
nop
cld
jae
adc
pop
push
mov
xchg
ret
repz
lcall
lock
repnz
nop
cld
jae
mov
add
sbb
outsl
push
inc
sub
nop
nop
cld
jae
add
testl
subl
jae
sbb
add
test
push
mov
nop
leave
jmp
add
dec
mov
add
cltd
push
push
mov
xchg
ret
add
add
add
add
add
add
push
mov
nop
leave
jmp
add
push
testb
incl
cmc
fistps
mov
add
push
dec
bound
push
mov
xchg
ret
into
add
movsl
add
movsl
add
mov
nop
leave
jmp
adc
pop
add
dec
outsb
rep
push
mov
nop
leave
jmp
xchg
mov
add
aaa
add
je
clc
repnz
nop
cld
jae
sbb
push
mov
xchg
ret
bound
mov
xchg
add
add
clc
repnz
nop
cld
jae
movl
iret
popa
clc
repnz
nop
cld
jae
xor
add
adc
mov
push
clc
repnz
nop
cld
jae
push
mov
mov
adc
mov
xchg
ret
add
add
rep
xor
mov
add
clc
repnz
nop
cld
jae
add
aaa
mov
jne
clc
repnz
nop
cld
jae
mov
inc
mov
mov
adcl
repnz
nop
cld
jae
add
add
add
movsl
data16
mov
clc
repnz
nop
cld
jae
add
iret
jne
clc
repnz
nop
cld
jae
add
aaa
or
nop
leave
jmp
jnp
add
addl
push
daa
daa
xchg
lcall
cld
jae
dec
add
add
add
push
clc
repnz
nop
cld
jae
add
xbegin
clc
repnz
nop
cld
jae
add
add
loop
mov
inc
in
repnz
nop
cld
jae
fldcw
add
add
sbb
movb
in
inc
add
lcall
dec
push
mov
nop
leave
jmp
in
jge
add
add
cmp
clc
repnz
nop
cld
jae
leave
add
xor
mov
push
mov
nop
leave
jmp
add
dec
add
add
push
push
mov
xchg
ret
add
rorb
cmpl
push
mov
nop
leave
jmp
add
jnp
movsl
mov
shl
push
mov
xchg
ret
mov
push
cmp
mov
xchg
ret
jle
mov
shlb
mov
push
clc
repnz
nop
cld
jae
add
push
push
mov
nop
leave
jmp
movsl
add
in
mov
in
test
push
mov
nop
leave
jmp
add
into
add
add
out
mov
clc
repnz
nop
cld
jae
sbb
push
aaa
cmp
nop
nop
cld
jae
push
add
add
add
in
add
xor
add
cmpsb
add
add
add
int
pop
jae
repnz
nop
cld
jae
add
push
add
repnz
nop
cld
jae
cmp
aam
add
fiadds
das
cli
inc
add
add
add
testl
cmpsl
mov
popf
push
mov
nop
leave
jmp
fs
add
adc
repnz
nop
cld
jae
jle
cmc
and
cmp
repnz
nop
cld
jae
mov
add
data16
xchg
add
push
mov
nop
leave
jmp
movsl
jnp
add
add
pop
push
mov
add
cli
add
add
scas
dec
add
inc
mov
mov
inc
add
dec
rolb
cmc
add
mov
push
mov
nop
leave
jmp
add
bound
add
mov
nop
cld
jae
xor
add
push
dec
gs
dec
cmp
mov
nop
leave
jmp
test
add
sahf
add
push
add
in
nop
leave
jmp
add
add
add
add
add
add
add
mov
add
roll
jne
jmp
in
add
clc
repnz
nop
cld
jae
in
add
rolb
mov
mov
dec
cmp
repnz
nop
cld
jae
add
push
dec
add
clc
repnz
nop
cld
jae
add
add
add
sti
push
push
mov
xchg
ret
push
add
sahf
cmp
add
clc
repnz
nop
cld
jae
dec
adcl
add
xchg
xor
clc
repnz
nop
cld
jae
add
add
lcall
clc
repnz
nop
cld
jae
lcall
push
add
das
add
push
mov
nop
leave
jmp
add
push
cmc
repz
add
test
repnz
nop
cld
jae
or
es
stc
mov
push
mov
xchg
ret
xor
dec
aaa
pop
mov
mov
nop
cld
jae
add
push
add
dec
ret
adc
mov
add
pop
push
mov
xchg
ret
imul
add
int3
popa
clc
repnz
nop
cld
jae
fists
mov
cs
clc
repnz
nop
cld
jae
movsl
pop
aaa
add
add
mov
clc
clc
repnz
nop
cld
jae
repz
add
add
mov
stc
decl
push
mov
xchg
ret
movsl
movl
add
mov
push
mov
xchg
ret
mov
add
cmpsl
jge
pushf
push
push
mov
xchg
ret
cmpsl
jnp
add
cmpl
repz
jmp
add
add
add
cmc
push
cmc
add
stos
push
push
mov
nop
leave
jmp
push
cmp
add
add
jb
clc
repnz
nop
cld
jae
bound
into
pop
add
cld
jae
add
add
outsl
add
add
push
clc
repnz
nop
cld
jae
or
testl
pop
rep
clc
repnz
nop
cld
jae
outsl
add
jle
aam
sarl
test
repnz
nop
cld
jae
add
adc
mov
push
mov
xchg
ret
add
add
push
jne
clc
repnz
nop
cld
jae
push
add
mov
repnz
nop
cld
jae
cmp
cli
add
rolb
mov
out
movl
nop
cld
jae
dec
pop
mov
jg
clc
repnz
nop
cld
jae
pop
add
adc
jno
jne
clc
repnz
nop
cld
jae
push
repz
xchg
clc
repnz
nop
cld
jae
cmc
pop
jle
mov
clc
repnz
nop
cld
jae
cli
mov
clc
add
movzwl
clc
repnz
nop
cld
jae
dec
add
add
add
popa
fs
repnz
nop
cld
jae
add
clc
clc
repnz
nop
cld
jae
add
filds
add
push
mov
push
add
mov
add
addl
cmp
adc
out
add
push
mov
xchg
ret
cmp
add
mov
iret
clc
repnz
nop
cld
jae
fs
add
inc
adc
in
nop
leave
jmp
pop
aam
cli
jge
cmp
mov
clc
repnz
nop
cld
jae
add
mov
clc
repnz
nop
cld
jae
add
test
data16
mov
xchg
ret
add
add
and
into
cmpl
push
mov
nop
leave
jmp
jle
add
add
xlat
cld
mov
clc
repnz
nop
cld
jae
bound
add
mov
push
mov
xchg
ret
cmpsl
add
sbb
inc
xor
clc
repnz
nop
cld
jae
add
rolb
xchg
movnti
in
nop
leave
jmp
add
add
add
cmp
movsl
mov
sbb
leave
jmp
add
push
cmc
add
or
in
scas
xor
add
add
mov
add
add
mov
and
jmp
and
outsl
inc
les
push
imul
ds
xor
pop
insb
mov
push
add
scas
push
mov
add
mov
out
rolb
mov
mov
mov
ret
js
pusha
add
int
bound
mov
jle,pn
movsb
pushf
and
add
add
and
addr16
add
adc
jnp
fmul
dec
pop
jo
mov
lret
lcall
je
ret
cltd
mov
mov
add
add
mov
add
inc
rcrl
andl
mov
mov
cmp
mov
mov
add
int
mov
add
aaa
pop
pop
push
adc
mov
mov
mov
add
cld
imul
icebp
dec
cmpsb
inc
add
dec
jge
scas
jnp
push
mov
cmpsl
adcl
mov
mov
sub
lods
jno
inc
add
mov
jne
jg
mov
jb
mov
or
add
pop
add
add
int3
int
push
mov
cwtl
fld
idivl
divb
ljmp
icebp
stos
rol
lock
addb
xor
mov
ja
shll
fwait
xchg
pushf
pop
pop
adc
stc
jo
mov
in
ljmp
mov
pop
xor
mov
mov
dec
mov
inc
test
addr16
outsb
data16
xchg
xchg
and
and
clc
mov
loop
mov
fsubl
addr16
ss
addr16
dec
mov
push
sub
insl
inc
pop
ljmp
xchg
js
in
pop
leave
cmp
mov
repnz
push
add
push
cmp
out
sub
mov
mov
push
add
add
scas
lods
cmp
add
mov
add
or
jbe
lcall
enter
mov
add
add
push
lock
mov
out
add
in
call
or
mov
mov
fstl
add
dec
in
cmp
aaa
ss
add
push
mov
mov
add
test
or
xchg
add
adc
dec
pop
inc
cwtl
mov
daa
lea
mov
inc
loop
mov
sbb
jp
pop
in
pop
iret
dec
sub
fadds
or
add
mov
jle
add
mov
outsl
dec
xchg
push
enter
add
ljmp
movsl
loope
popf
push
mov
stc
xchg
add
xchg
push
fisttps
xchg
rolb
mov
pop
std
insl
cmc
ds
out
xor
mov
mov
lock
sahf
fadd
add
add
insl
and
popf
into
in
add
add
jne
mov
dec
sbb
push
imull
mov
ret
xor
mov
lret
mov
mov
mov
or
jo
mov
sahf
mov
mov
push
aas
jns
add
xchg
lods
push
cmp
jo
mov
cmp
mov
adc
mov
arpl
mov
xor
mov
or
xchg
mov
loope
add
std
decb
hlt
test
fs
je
dec
aas
enter
mov
push
in
or
fadds
mov
jo
mov
inc
xchg
add
push
mov
mov
fcoml
fsubrl
sbb
push
aaa
ds
fcoms
stos
sahf
xchg
ja
pop
arpl
repz
pop
jl
add
jmp
rolb
pushf
pushf
inc
outsb
outsb
cmc
adc
mov
mov
push
pop
add
inc
mov
add
mov
mov
je
add
fstps
adc
or
add
pop
mov
mov
mov
add
mov
push
pop
aas
cwtl
ljmp
rcll
inc
lods
pop
cmpl
aad
imul
dec
mov
push
jp
xor
sbb
mov
cmp
pushf
inc
xchg
inc
insl
dec
hlt
in
mov
cmp
std
jge
ret
lahf
nop
add
dec
jp
sub
push
and
mov
push
mov
enter
sub
add
lcall
mov
push
lea
inc
add
adc
or
jae
adc
mov
add
add
into
repz
cmp
notb
aaa
xor
les
mov
mov
xor
or
sub
int3
gs
data16
fwait
mov
icebp
inc
and
or
jno
adc
sub
inc
add
mov
mov
cltd
in
mov
add
mov
fildl
lods
iret
std
lahf
fmulp
sub
das
inc
add
mov
adc
cmc
sub
mov
push
cli
ret
mov
iret
mov
inc
arpl
add
add
add
sbb
push
push
cld
js
sub
add
gs
jbe
inc
xor
mov
lea
pop
push
pop
xchg
jmp
test
sub
xchg
mov
mov
cs
and
push
add
add
fistpl
add
xlat
out
rolb
mov
xor
loopne
mov
test
gs
fbld
mov
add
mov
mov
mov
mov
addb
pop
in
inc
insb
mov
mov
jae
add
mov
fisttps
mov
jg
xor
mov
push
add
lds
push
and
mov
add
clc
inc
mov
mov
add
dec
jmp
add
mov
add
pop
lods
add
mov
mov
inc
lcall
movsb
jne
add
and
mov
push
adc
mov
mov
sub
aas
fnstenv
sub
insl
cmp
add
adc
mov
add
add
or
daa
icebp
push
jg
adc
lcall
data16
addb
cmpsl
fildl
paddb
xlat
jle
addb
jnp
test
cmp
sbb
push
mov
aas
repz
inc
add
add
mov
add
mov
xchg
movsb
and
xlat
pop
in
rorl
bound
mov
add
adc
iret
leave
int3
mov
add
jae
outsl
xchg
mov
add
mov
rol
mov
adc
sahf
jb
mov
fistl
mov
fldt
enter
cmp
sbb
divl
mov
jo
mov
xor
mov
je
iret
xor
inc
add
push
cs
jle
push
add
mov
add
cmpxchg
pop
popf
and
mov
sbbl
fsubrp
movsl
addb
and
mov
cmpsl
cwtl
cmp
add
add
and
mov
loope
imul
mov
adc
add
movl
add
mov
loop
mov
sub
and
dec
sbb
nop
add
es
nop
add
nop
add
jecxz
add
shll
les
in
outsb
cmp
jmp
push
xchg
hlt
lods
lret
xorl
and
mov
mov
push
add
or
jbe
out
push
iret
aas
jb
mov
mov
add
mov
shll
rcl
add
mov
addb
lret
out
popa
movsl
lea
add
fsubl
dec
sub
add
pop
std
pop
sbb
outsl
dec
addr16
sbb
je
xchg
lret
lods
jecxz
dec
dec
faddp
pop
notl
xchg
dec
pusha
add
xlat
inc
add
mov
mov
add
dec
stos
push
add
add
mov
mov
mov
dec
push
xchg
cmp
mov
cmp
test
ljmp
test
sbb
adc
fdiv
jg
pop
mov
mov
sbb
scas
cmp
mov
call
jle
std
adc
mov
mov
dec
cli
sbb
add
fisubrl
push
xchg
test
mov
mov
push
pop
rolb
and
add
mov
add
mov
inc
testb
mov
in
mov
mov
enter
xchg
mov
cmp
scas
sti
adc
xor
mov
cmp
lret
das
test
jge
popl
mov
add
add
in
add
mov
cmp
jno
sub
pop
addb
xchg
movsl
in
add
ret
mov
mov
add
add
adc
mov
imul
add
mov
pop
test
mov
jg
fcoms
es
add
mov
pop
addb
les
ja
stos
out
shll
add
pop
mov
mov
or
mov
mov
xchg
and
cld
xchg
xchg
rolb
mov
mov
add
push
cltd
push
stc
jp
insl
mov
adc
mov
lcall
add
dec
sub
adc
mov
aas
adc
je
test
mov
cmpsb
stos
fnstenv
mov
sarl
mov
sub
icebp
gs
add
pop
and
add
in
mov
scas
stc
rolb
mov
adc
mov
add
rolb
mov
add
add
xor
xor
dec
cmc
mov
mov
push
mov
mov
das
lcall
mov
mov
hlt
push
ljmp
mov
sbb
mov
add
sbb
sub
mov
jp
inc
inc
adc
scas
push
and
mov
dec
scas
push
adc
mov
xchg
sub
inc
push
stos
pop
pusha
add
push
arpl
es
das
add
add
mov
je
icebp
pop
or
addb
mov
mov
add
or
add
add
jge
sbb
pop
int
daa
xchg
in
mov
mov
mov
pop
mov
xchg
add
sti
hlt
pop
in
dec
dec
xchg
jno
ds
roll
add
add
add
push
fsubs
add
repz
sub
xchg
scas
xchg
insl
mov
inc
add
add
add
adc
add
sbb
ljmp
imul
rolb
xor
enter
stos
xchg
jae
jb
mov
add
jnp
cmc
sub
and
fsub
add
jb
mov
jo
mov
mov
mov
mov
mov
inc
add
add
adc
adc
push
jecxz
das
cwtl
ret
loope
lock
sbb
sub
loope
scas
mov
mov
xor
mov
push
fcompl
clc
dec
sbb
pop
pop
sbb
jo
mov
add
idivl
addb
call
mov
pop
je
test
in
add
sbb
add
lret
adc
and
addb
std
mov
add
ljmp
dec
jo
mov
push
mov
add
mov
add
rcll
repnz
sahf
test
mov
cmp
add
bound
mov
mov
ret
cld
rolb
mov
add
ja
add
pop
mov
mov
mov
mov
cwtl
les
movsb
xor
mov
add
mov
jmp
add
cmpl
daa
cltd
pop
push
scas
sub
push
test
out
aad
jne
xor
dec
aaa
adc
and
add
add
add
dec
pop
icebp
cwtl
loop
mov
jge
or
pushf
jnp
movsb
sub
dec
pop
insl
ret
mov
xchg
mov
mov
rcll
adc
filds
std
or
jl
or
popf
xchg
add
and
mov
bound
mov
add
or
add
add
ficoml
add
push
fdivs
cmp
push
je
rolb
mov
mov
add
xor
mov
add
cmp
in
gs
roll
mov
xchg
add
add
mov
mov
add
popf
loopne
mov
mov
and
mov
insl
inc
pop
enter
mov
add
rolb
mov
and
or
push
sub
inc
sub
adc
sahf
scas
cltd
fisttps
xabort
xlat
and
xor
mov
sbbl
out
stc
fisttpll
add
js
roll
dec
jge
rolb
incl
mov
outsl
lock
rorl
cmpl
test
mov
adc
sahf
sub
or
lea
rolb
mov
jmp
inc
add
mov
xchg
mov
xchg
test
adc
add
clc
push
lahf
dec
test
xchg
popf
and
mov
mov
lcall
add
push
add
add
mov
lods
int3
mov
push
arpl
pop
xchg
repnz
mov
add
mov
add
mov
sbb
xor
xor
cli
outsb
out
mov
jns
xchg
sub
lret
jmp
pusha
add
inc
scas
sahf
sahf
mov
add
xor
rolb
mov
xor
pop
sbb
in
jae
les
movsl
fwait
jae
add
mov
add
mov
pop
insl
loopne
mov
testl
std
lea
mov
mov
mov
dec
fiaddl
test
enter
in
xor
call
cmpsl
mov
add
sub
mov
xchg
lds
or
lods
jmp
out
imul
mov
jg
add
or
add
cmp
add
mov
mov
add
cmp
loop
mov
xchg
dec
idiv
sub
gs
xchg
insb
daa
test
aaa
xchg
out
mov
mov
lea
mov
sbb
aas
mov
bound
mov
mov
add
mov
shll
mov
stos
movsb
inc
pop
call
pusha
add
add
jo
mov
popa
int3
or
outsb
dec
pop
nop
add
add
cmp
jl
add
mov
sub
add
xchg
incb
add
arpl
xchg
sbb
cmp
mov
push
add
inc
add
icebp
pop
test
stos
add
fsubp
lcall
sahf
add
add
pop
out
add
mov
sub
pop
cmp
clc
insb
pop
xor
mov
inc
fists
sub
add
mov
mov
mov
adc
movsl
sahf
cli
aas
sti
mov
mov
mov
mov
mov
mov
sub
inc
pop
dec
cmpsl
cmp
add
std
nop
add
lods
lea
mov
aas
sub
xchg
ret
sahf
in
stos
in
ljmp
add
mov
pushf
repz
or
add
and
mov
insl
fcompl
aaa
sbb
rolb
fcomi
add
aas
cs
sub
mov
push
xchg
pop
xchg
ljmp
pop
add
mov
test
outsb
in
loope
fadds
dec
jge
and
dec
dec
sti
addb
sahf
mov
xor
mov
jecxz
popf
mov
jmp
dec
sbb
ja
mov
xor
js
jo
mov
stos
sbbl
lret
clc
inc
imul
out
scas
fbld
mov
jbe
pop
xchg
add
scas
dec
or
je
lret
ja
add
addb
gs
push
mov
lcall
fs
cmp
arpl
filds
push
xor
sbb
push
mov
add
cld
insb
push
fnstenv
mov
xchg
mov
je
into
rolb
mov
sbb
out
add
add
ss
cmp
sub
loope
insl
mov
mov
mov
or
mov
pop
lahf
push
add
enter
add
xor
aaa
pop
lock
add
push
movsl
stos
cld
cs
add
add
movnti
js
fs
xchg
add
clc
push
and
mov
frstor
mov
adc
mov
mov
add
rolb
add
add
iret
xor
mov
xchg
xchg
add
dec
outsb
jp
mov
pushf
xchg
mov
add
and
fistl
lock
or
stos
or
add
aaa
and
mov
lods
jmp
xor
les
pushf
ja
scas
dec
sbb
add
mov
rolb
inc
add
add
es
add
mov
leave
ret
aad
inc
dec
jbe
pop
dec
je
loop
mov
cmpsb
out
aam
xor
mov
push
push
js
fldenv
sub
insb
aaa
loop
mov
push
call
inc
or
dec
test
push
rolb
mov
and
mov
mov
cwtl
test
pop
jecxz
mov
les
mov
add
jo
mov
add
push
mov
addb
mov
xor
add
in
add
divb
mov
or
sbb
mov
rolb
popf
sbb
jne
js
sbb
mov
repz
add
jbe
movsb
enter
fldt
subl
add
jno
test
ljmp
clc
jo
mov
sub
test
add
fistl
movsl
push
and
mov
push
inc
add
in
xchg
push
test
xor
addb
or
sti
in
dec
and
mov
mov
xchg
sub
add
push
xchg
arpl
repnz
add
mov
add
mov
cwtl
cli
pop
lret
loope
repz
push
inc
inc
std
test
cmp
jno
jno
into
pop
jne
in
add
lods
or
mov
add
add
add
add
sub
movsl
jae
adc
mov
mov
lds
lcall
and
mov
add
out
add
loopne
mov
dec
jns
xor
int3
js
aas
lcall
pop
xchg
fcomps
adc
pop
mov
ljmp
stc
bound
mov
or
xor
mov
dec
fisubs
mov
xchg
jl
loopne
mov
mov
and
mov
addb
cltd
sbb
nop
add
pop
jmp
sub
jle
fcomip
add
mov
add
dec
or
mov
rcr
loope
dec
testl
mov
adc
cmp
xor
mov
stos
clc
mov
pushf
hlt
jo
mov
das
xor
jo
mov
mov
and
mov
loop
mov
lods
outsb
dec
mov
aad
cmc
inc
ljmp
outsl
in
add
fildll
jb
mov
cmp
add
repnz
mov
movlps
mov
push
push
xchg
insl
sbb
popa
xchg
push
fisubrl
outsl
iret
mov
add
mov
add
mov
ftst
icebp
scas
pop
or
and
mov
add
clc
sub
add
xor
lods
jae
push
mov
aad
les
push
pushl
xchg
add
mov
outsl
adc
test
ss
rolb
shll
aaa
adc
add
pop
cmovnp
add
loop
mov
jb
mov
aam
daa
cmp
das
fwait
mov
adc
mov
cmpsb
ret
pop
fwait
mov
mov
stos
add
add
dec
repz
mov
test
lahf
mov
ljmp
mov
add
add
jecxz
das
outsb
fs
sub
sub
mov
mov
xchg
jns
xchg
sub
test
add
aaa
loopne
mov
lods
mov
cmpsb
push
cmpsb
cmp
nop
add
stc
mov
add
jbe
js
sub
mov
shr
push
or
add
add
xor
or
mov
sti
repnz
lock
rcll
jmp
mov
inc
sbb
mov
jo
mov
add
sarl
mov
js
rcrl
es
pushf
xor
data16
xor
add
mov
mov
data16
ss
add
mov
add
inc
add
jecxz
mov
add
xchg
and
dec
hlt
inc
jge
fwait
rolb
mov
sub
pop
movsl
stos
add
mov
xchg
insb
sub
jae
mov
add
push
add
mov
mov
jo
mov
sti
inc
dec
mov
mov
xlat
cmp
test
mov
daa
repnz
sahf
ja
add
movsb
rorl
adc
stos
mov
cmc
mov
pop
stos
inc
cmp
jmp
fistpl
mov
cmp
lock
cmp
dec
and
mov
add
loop
mov
xlat
in
dec
pop
jg
imul
mov
outsl
mov
adc
add
leave
dec
push
outsl
insl
add
mov
cltd
add
pop
jo
mov
and
add
out
sub
daa
arpl
fs
mov
dec
jne
in
sbb
add
mov
adc
out
push
push
add
lcall
xchg
or
rolb
mov
pop
jle
add
xor
xlat
mov
mov
cmp
mov
and
pop
xorl
fcomip
jg
push
and
mov
test
pop
lds
mul
add
add
xor
sbb
add
fildl
mov
jle
xchg
popf
xor
mov
mov
add
gs
std
imul
mov
sub
or
lcall
push
lds
mov
add
mov
into
sub
add
mov
and
inc
pushf
fwait
mov
scas
adc
or
test
cmp
add
daa
xchg
add
cmc
sbb
shll
cmpsl
int
aam
cmc
out
xor
mov
pushf
outsb
daa
repz
ret
jg
sti
fidivs
add
mov
add
mov
cmpsb
outsb
jo
mov
push
sbb
and
xchg
sbb
mov
and
add
movsl
ret
repnz
add
fwait
daa
pop
push
sbb
jb
mov
aaa
jno
inc
add
mov
push
dec
ljmp
lahf
test
mov
sub
or
inc
test
mov
test
lods
fdivrs
push
xchg
xor
add
or
ja
add
pop
dec
lret
rolb
mov
adc
mov
jae
add
xchg
add
dec
sbb
add
and
jbe
jno
add
add
aas
push
xor
mov
es
or
orl
stc
fucomp
jno
out
and
cwtl
sub
add
ja
add
lret
mov
fsubp
add
add
mov
xchg
jmp
jbe
mov
add
iret
mov
xlat
imul
shll
add
xchg
add
pop
mov
ret
rorl
pop
pop
mov
aaa
notl
dec
push
shll
add
in
jns
xchg
add
mov
sahf
pop
mov
stos
rolb
mov
out
and
adc
rolb
mov
push
add
jg
insb
rolb
mov
mov
and
mov
jp
gs
cmp
rolb
mov
sub
mov
pop
ficoms
fwait
pop
rcll
gs
jae
fistpl
fcmovne
mov
sbb
push
sub
and
ss
push
cmp
mov
cmpsl
insl
xor
mov
sub
sbb
add
leave
das
pop
gs
loope
xlat
xchg
adc
mov
mov
xchg
adc
xchg
mov
sub
fdivl
mov
pusha
add
xor
lret
outsl
jns
rorl
pop
jno
ja
mov
add
or
test
and
mov
cmp
imul
or
pop
ret
out
add
mov
fwait
arpl
xchg
addl
jb
mov
sub
adc
dec
jb
mov
loop
mov
int
add
add
or
fnstcw
stc
std
addr16
rolb
rol
pop
xchg
shl
mov
pop
pop
mov
add
cmp
mov
cmp
aam
ja
mov
mov
mov
and
mov
test
das
adc
mov
std
cs
lcall
int
cwtl
mov
mov
les
bound
mov
incb
add
imul
roll
xor
lods
xchg
add
mov
push
xchg
pop
dec
mov
test
mov
push
sub
push
mov
pusha
add
mov
pop
cld
sub
inc
decb
sub
mov
pop
sub
adc
mov
jg
fidivrs
xchg
cmc
pop
movsb
push
clc
jns
push
inc
add
jnp
ss
leave
out
fildll
jle
cld
pop
lock
ret
lret
mov
sub
sub
xchg
cmp
negl
call
jecxz
sub
rolb
mov
sbb
orl
bound
mov
addb
ja
add
arpl
mov
rcll
hlt
mov
aas
or
add
add
mov
xchg
stc
mov
jle
push
xchg
add
push
mov
sub
sub
rolb
mov
push
rolb
idivl
push
mov
mov
filds
add
xor
mov
mov
mov
add
add
mov
bound
mov
sub
cmc
test
mov
cmp
les
add
lcall
insl
xchg
in
xchg
iret
sti
ss
cmp
cmpsb
int
dec
adc
repnz
xchg
leave
xchg
xchg
sbb
dec
cmc
ficompl
lock
fwait
dec
mov
xchg
inc
cmpsl
dec
hlt
je
mov
mov
push
add
mov
add
inc
add
daa
int
pop
test
add
and
mov
push
mov
mov
add
mov
inc
add
add
jmp
inc
aam
imull
cltd
cs
jge
xor
pusha
add
ret
test
lret
add
mov
int
xor
mov
cmp
push
inc
ret
push
xor
mov
sbb
rolb
mov
out
loope
nop
add
negb
int
pop
addb
xchg
in
xchg
scas
je
push
xor
mov
mov
add
add
cmp
movsb
push
push
cli
lahf
or
addr16
add
outsl
mov
scas
mov
mov
adc
jp
cld
xchg
cmpsb
add
mov
jno
int
outsb
int3
mov
mov
sub
mov
mov
or
jle
cmp
add
stc
mov
outsl
pop
out
mov
and
add
xor
add
mov
mov
setle
add
xchg
add
sti
dec
xchg
pop
pop
jbe
mov
add
lret
mov
push
and
mov
mov
clc
adc
lcall
into
fsub
daa
mov
add
outsl
add
or
outsb
sti
or
or
or
out
xor
xchg
add
jae
popf
xor
addb
jg
mov
ljmp
mov
mov
add
xor
jp
mov
jp
fucompp
cmovnp
aas
push
inc
data16
mov
jle
in
push
lea
movsb
xor
mov
xor
mov
jb
mov
popa
xor
imul
add
dec
enter
cmp
pop
arpl
clc
mov
bound
mov
xor
adc
mov
xchg
pop
int3
xlat
rolb
mov
in
add
xchg
add
push
push
int3
insl
push
sahf
fs
dec
mov
int
loope
add
jb
mov
test
test
xor
push
xchg
dec
inc
or
jns
add
add
roll
inc
push
add
mov
push
sbb
rcl
test
mov
add
out
rolb
push
add
or
aaa
in
dec
out
lods
lea
mov
aas
push
push
cmp
imull
test
mov
fmull
add
pop
movsl
inc
xchg
or
notb
mov
cmpl
insl
fnsave
inc
mov
mov
or
mov
enter
pop
fcomp
dec
jae
aas
pushf
add
mov
popa
dec
or
sub
pop
popf
jle
lea
insb
inc
popa
testb
jb
mov
xchg
insl
sub
lea
insl
rolb
mov
mov
add
addb
cmp
sbb
mov
fisubrs
inc
sub
push
cwtl
cld
push
mov
add
lea
fdivl
push
add
mov
or
mov
adc
pop
inc
dec
xchg
sub
popa
push
mov
mov
jge
add
icebp
movsb
rcrl
mov
fs
repnz
dec
or
popf
cmp
and
int
add
or
pushf
sub
ret
xchg
add
sub
mov
pop
pop
jae
imul
outsb
leave
adc
add
add
add
sbb
xor
mulb
mov
addr16
add
pop
out
add
les
lods
inc
popa
adc
icebp
inc
pop
bound
mov
imul
hlt
rolb
mov
dec
aas
std
scas
leave
dec
icebp
jl
and
loopne
mov
jg
lea
das
movsl
jbe
mov
data16
jae
add
mov
clc
pop
sub
hlt
push
pop
rolb
mov
sahf
aaa
mov
mov
add
ss
pop
inc
jg
add
inc
data16
loopne
mov
inc
or
mov
mov
lea
mov
mov
fsubs
push
add
outsb
mov
dec
repnz
and
mov
pop
xchg
aaa
js
cmc
jg
dec
popa
mov
rorl
out
xor
mov
jne
pop
outsb
fcoml
mov
jns
sub
fs
fisubs
add
add
mov
inc
add
mov
rolb
mov
mov
cmp
out
or
dec
mov
lret
bound
mov
cmp
mov
es
negb
cmp
add
mov
mov
mov
mov
fnstenv
add
and
cs
mov
mov
add
pop
rolb
mov
add
mov
js
loop
mov
jb
mov
negb
mov
insb
dec
js
push
and
dec
add
mov
jmp
add
rolb
mov
mov
mov
pop
ret
push
pop
jmp
out
test
mov
js
add
mov
rolb
fwait
movsl
push
sahf
and
add
sub
inc
sub
into
inc
xor
push
xchg
rolb
mov
iret
push
adc
mov
sub
nop
add
inc
add
jo
mov
jnp
add
popa
lcall
dec
nop
add
jae
lock
dec
cli
out
test
nop
add
shll
test
lahf
or
test
xchg
mov
dec
lret
lock
lcall
dec
push
xchg
mov
into
stc
mov
sbb
aaa
fnsave
mov
mov
add
add
fstpt
push
pushf
lret
xor
mov
mov
sub
xor
mov
dec
cmovs
mov
outsl
jne
push
ss
adc
adc
mov
mov
add
push
mov
iret
out
or
stos
pushf
jb
mov
sbb
mov
movsl
fldcw
xor
jns
jl
outsl
or
dec
push
inc
sbb
stos
adc
mov
mov
dec
mov
js
sarl
or
int
add
mov
add
mov
or
add
push
pop
cmpsb
cmp
add
sbb
add
mov
jmp
sbb
fwait
sub
and
icebp
cmpl
sbb
push
xor
jb
mov
leave
movsl
insb
sub
std
xorl
pusha
add
sub
cmpsb
inc
add
repnz
mov
lret
imul
imul
xor
mov
jmp
push
add
add
enter
push
xor
mov
add
addb
je
add
sar
movsl
cwtl
cwtl
cmp
popa
lods
call
inc
pop
dec
mov
rolb
mov
das
mov
and
pop
std
cld
in
decb
rolb
mov
mov
and
inc
add
fimuls
sbb
push
jb
mov
bound
mov
add
pop
cmc
ja
out
cld
mov
add
jecxz
fimull
add
add
int
or
xor
add
test
add
add
dec
scas
imul
rolb
aam
es
test
mov
roll
cwtl
sbb
adc
cmc
rolb
mov
sub
xor
fiadds
or
daa
mov
aad
add
aas
sbb
pop
mov
fidivl
sub
add
scas
int3
dec
push
movb
outsb
adc
add
add
cmp
mov
mov
xchg
mov
jns
sahf
xor
inc
aad
push
jno
out
or
add
push
call
adc
mov
jecxz
cli
cli
xchg
mov
or
and
mov
pop
or
push
lret
jge
xor
sub
loop
mov
mov
add
or
sarl
sub
repnz
cwtl
and
mov
adc
das
ret
dec
pop
xchg
fldcw
out
fdiv
cmp
mov
adc
mov
or
sub
xor
mov
mov
or
mov
mov
add
sub
xor
mov
jge
xchg
adcl
adc
mov
add
mov
pusha
add
xor
mov
inc
pop
lret
arpl
dec
divl
out
inc
int
add
add
clc
lds
add
add
mov
int3
and
out
push
jbe
imul
fsubrl
add
daa
cmpsl
int3
dec
shll
sar
xchg
xor
fsts
mov
mov
mov
add
pop
and
add
and
mov
mov
and
pusha
add
add
sub
add
mov
leave
call
xlat
ds
jg
push
sub
push
mulb
daa
mov
fiadds
sbb
cmp
bound
mov
fsub
cli
leave
stc
das
cmp
into
xor
mov
leave
adc
sub
push
popf
sbb
inc
jbe
pop
loop
mov
addr16
add
mov
pusha
add
mov
add
in
and
xchg
lock
and
insl
jecxz
pushf
sub
mov
int
xchg
aaa
and
dec
roll
and
and
pop
fnstsw
adcl
pop
mul
add
fwait
or
fs
add
dec
xorl
fwait
ljmp
cmpl
mov
xchg
aaa
movsb
mov
or
data16
jo
mov
mov
inc
xlat
mov
cmp
pop
and
add
dec
in
or
testl
test
int3
or
mov
cmc
jo
mov
or
or
inc
add
mov
adc
pop
xor
mov
mov
inc
addb
add
mov
ja
lcall
mov
mov
insb
cmp
mov
sbb
mov
jge
ret
jne
repz
repz
inc
fldcw
pop
sbb
nop
add
add
mov
add
mov
sahf
push
cmp
mov
mov
iret
xchg
xor
adc
rorl
lret
into
mov
push
aaa
xchg
sbb
call
jb
mov
add
out
add
mov
push
adc
fstl
add
mov
lods
xchg
rorl
cmp
sahf
sub
xchg
enter
inc
add
sub
xchg
fmull
stos
movl
test
sub
xor
mov
in
fnstsw
jnp
je
inc
fstpt
jmp
add
dec
adc
push
jne,pt
push
aaa
push
push
add
add
fcmovnbe
mov
jp
jl
push
je
bound
mov
inc
sub
add
add
cmc
imul
mov
jns
add
mov
jns
cwtl
pop
imul
push
pop
cmp
dec
xchg
arpl
mov
and
add
mov
pop
fwait
push
sti
out
sub
fisttps
jl
add
add
rolb
insl
outsb
fprem1
mov
add
mov
add
mov
fs
std
lea
push
daa
push
pop
loop
mov
xchg
push
pop
ss
ljmp
loope
adcl
mov
stc
jnp
pop
in
add
and
cmp
add
add
lds
or
mov
push
add
push
cltd
imul
mov
jl
jbe
out
dec
inc
aaa
mov
out
dec
enter
xor
mov
jle
js
add
mov
add
rolb
scas
jmp
mov
loope
add
mov
mov
add
addb
rcrl
rolb
ja
in
into
sub
add
mov
fwait
cli
outsb
subw
pop
jmp
xor
mov
loope
push
test
add
fsubr
mov
mov
popf
cs
sbb
and
mov
imul
adc
add
add
mov
mov
adc
aad
mov
std
xor
mov
or
outsb
lea
dec
fidivrs
mov
bound
mov
inc
pop
cmp
mov
mov
or
xchg
add
xchg
add
add
cltd
add
mov
add
sbb
xchg
xchg
xchg
cmp
add
mov
jecxz
mov
push
push
test
adc
add
sahf
add
fidivrs
andl
mov
outsl
movsb
int3
push
and
mov
add
addb
xchg
and
add
mov
and
mov
out
test
add
cltd
sub
insl
mov
and
mov
inc
shr
fcmovu
push
xchg
xchg
pop
xor
rcll
cli
stos
loopne
mov
mov
daa
rcl
out
mov
fisubl
cmc
adc
int3
lret
add
lods
push
mov
cwtl
adc
loopne
mov
or
push
add
mov
add
loope
jmp
xabort
mov
xchg
sbb
mov
out
rorl
mov
add
add
std
in
fldcw
push
jg
mov
mov
add
add
cmp
add
iret
popf
notl
mov
pushf
js
clc
cmovge
mov
ret
cmp
mov
add
in
push
and
mov
addb
hlt
mov
je
mov
mov
add
mov
add
sbbl
sub
cwtl
sub
mov
mov
out
add
jne
pop
out
hlt
dec
jb
mov
lret
push
mov
dec
jmp
mov
sahf
jb
mov
stc
cli
sub
push
rolb
addb
enter
adc
sbb
add
add
je
xchg
mov
in
xor
mov
push
repnz
mov
mov
and
mov
add
xor
notb
mov
push
aas
js
roll
jo
mov
mov
add
mov
repnz
add
test
dec
xchg
incl
arpl
cmpsb
and
add
add
and
mov
mov
mov
mov
stos
adc
jne
dec
or
push
inc
add
jae
cmp
fdivrl
dec
or
aad
pop
jl
test
loope,pn
adc
mov
loopne
mov
data16
push
add
adc
mov
fists
add
les
mull
imull
pop
nop/reserved
lret
sub
add
add
lods
add
ret
sbb
repz
lods
aam
dec
sub
rolb
mov
mov
mov
jbe
add
mov
add
jbe
mov
sub
addr16
pop
add
or
mov
jbe
das
dec
adc
mov
fcompl
test
dec
add
pop
rcrl
xor
ds
cmp
xchg
insb
mov
mov
mov
pop
lds
jb
mov
add
jmp
jmp
repz
or
add
mov
mov
mov
inc
out
nop
add
mov
and
lret
cmpsl
push
pushf
lock
fwait
outsb
add
mov
jbe
daa
or
add
pop
imul
jne
add
cmp
add
mov
imul
or
cld
movsb
jbe
xchg
xor
in
mov
cmp
push
jns
insb
insl
push
pushf
add
mov
mov
mov
pop
out
jle
jnp
clc
cmp
push
scas
outsl
cmovle
ds
xchg
add
add
jle
rolb
mov
jb
mov
jne
std
push
jne
dec
dec
ficoml
sbb
mov
cmp
add
mov
call
test
add
aas
sub
and
add
mov
es
fcmovnu
mov
popf
jmp
add
add
aas
repz
jmp
push
xchg
add
popf
or
push
aas
dec
icebp
icebp
add
mov
pop
mov
add
xor
mov
mov
add
ds
nop
add
stos
and
add
subl
add
sub
mov
inc
roll
mov
fsubrs
insl
push
add
sbb
add
out
aaa
dec
out
fiaddl
adc
in
sahf
and
and
mov
loop
mov
cmp
add
mov
pop
jbe
data16
psllq
in
adc
in
jg
cmp
mov
ljmp
or
or
dec
jb
mov
mov
jbe
add
mov
test
fldenv
sbb
sub
xchg
mov
xchg
ret
jecxz
add
inc
xor
sbb
jae
and
add
add
pop
xchg
push
jns
repz
jb
mov
push
lds
add
sbb
mov
faddl
and
mov
mov
mov
pand
mov
ss
sub
outsl
dec
lcall
mov
add
mov
rcll
xor
incb
add
mov
inc
add
mov
mov
cli
clc
push
ss
pop
fcmovnbe
in
xor
inc
push
add
push
test
add
xor
mov
inc
inc
adc
mov
mov
insb
sahf
push
out
mov
sbb
cmp
jno
add
sub
popf
add
adc
dec
lcall
shll
push
das
sarl
add
and
mov
add
fstp
sbb
icebp
push
add
jecxz
cltd
inc
cmovb
mov
jae
inc
push
scas
cmp
inc
add
xchg
mov
aas
pop
inc
add
push
pop
and
clc
dec
addr16
enter
movsl
add
pop
sub
fsubs
inc
cmp
cwtl
mov
or
mov
dec
xor
xor
lea
cmp
xchg
add
sbb
repnz
movsl
lahf
xchg
or
push
pop
adc
outsl
nop
add
sbb
xchg
and
sub
inc
mov
cmc
jo
mov
mov
out
repnz
dec
int
add
inc
pop
mov
cmp
aas
push
and
sbb
enter
lods
stos
jne
and
mov
addr16
bswap
inc
adcl
add
pop
or
mov
xchg
or
adc
cmp
in
mov
mov
mov
add
or
lret
pushf
dec
push
cmp
das
fcoms
mov
jle
dec
pop
rolb
mov
add
mov
push
push
jno
incl
inc
xchg
fisubs
add
add
ja
scas
mov
dec
stos
mov
and
push
and
adc
mov
adc
mov
sub
sbb
insb
rolb
call
mov
jno
insb
cli
add
mov
dec
out
pop
mov
cmc
dec
cwtl
faddl
add
ss
dec
lea
js
pop
js
lods
cmc
pusha
add
add
adc
mov
inc
iret
cmp
mov
repz
inc
xor
dec
xchg
cmpsl
mov
xor
mov
fldt
dec
daa
push
jge
or
in
add
mov
fmuls
add
add
les
push
lock
movsl
pop
out
inc
nop
add
add
imul
mov
jmp
xchg
sti
jno
add
pop
addb
sbb
incb
add
loope
pop
mov
mov
jg
jp
into
cltd
adc
mov
leave
mov
pop
mov
mov
test
int3
mov
push
mov
mov
rolb
dec
mov
loope
je
add
add
leave
mov
addb
cmp
out
lds
mov
clc
add
jmp
add
addb
mov
cmpsb
les
jge
add
add
shrl
add
add
add
std
push
or
rcll
ficoml
dec
push
and
push
mov
pop
xchg
or
mov
add
xor
mov
mov
mov
ss
pop
mov
mov
lods
je
insb
ret
cmpl
cld
jge
out
outsl
pop
mov
mov
jnp
fmull
jmp
xor
shll
jl
push
add
mov
subl
out
sub
stos
adc
cli
pop
and
mov
jno
rolb
in
addr16
cmc
lea
add
add
ss
mov
mov
xchg
popf
and
mov
jne
or
roll
add
sub
fld
cli
insb
fwait
mov
mov
adc
add
faddl
push
sbb
shll
loopne
mov
lret
and
outsb
jno
sub
data16
in
ja
inc
push
add
das
jne
cmpsl
pop
clc
jmp
sbb
mov
sbb
pop
cmpsb
sbb
mov
jmp
mov
mov
ret
cwtl
ds
scas
adc
mov
das
ds
push
or
out
add
mov
je
push
add
jbe
jg
inc
inc
add
fidivrl
mov
popf
int3
dec
add
mov
add
mov
mov
fidivrs
pop
mov
mov
jg
add
mov
add
mov
add
movsl
pop
les
add
mov
pop
test
lods
push
jecxz
pop
pushf
popf
push
cmpsl
adc
add
lahf
mov
xor
loopne
mov
imul
add
mov
dec
pop
test
mov
fdivp
mov
mov
fisubrl
lods
pop
xchg
rolb
push
add
xor
mov
ljmp
call
push
pop
sub
stos
aad
mov
in
mov
xchg
loop
mov
mov
mov
fmull
movsb
jecxz
cs
notl
mov
jnp
add
daa
jecxz
rolb
mov
add
add
out
ljmp
mov
and
mov
add
add
mov
mov
cmpsb
imul
jle
loop
mov
enter
das
or
pop
mov
xor
mov
push
sub
add
mov
aam
add
std
lcall
dec
lret
fsubrl
lret
sub
add
popf
add
mov
hlt
rolb
pushf
sub
loop
mov
cmp
add
rolb
mov
jo
mov
scas
push
addb
push
repnz
test
out
mov
jp
or
bound
mov
jno,pn
mov
push
repz
test
ljmp
pop
lea
popa
mov
add
leave
mov
add
dec
inc
fsubl
mov
add
mov
arpl
add
mov
inc
aaa
bound
mov
rolb
mov
adc
add
test
out
jg
cmp
repz
outsb
pop
xor
mov
xchg
cld
outsl
sbb
into
stc
cmpsl
dec
mov
rolb
mov
test
fnsave
mov
fsubs
pusha
add
jl
mov
mov
and
mov
les
xor
mov
add
add
mov
cld
cmc
adc
pop
stos
cmpsl
aam
fcomp
pop
test
stos
mov
decb
jge
fidivs
add
cmp
negl
daa
dec
cmp
mov
mov
das
insl
imul
data16
mov
mov
lock
mov
mov
mov
fwait
repz
pop
subl
gs
add
aam
pop
fnop
add
mov
mov
add
jmp
jno
sbb
mov
push
cltd
in
mov
cmp
add
dec
fcompl
xor
mov
add
stos
test
fs
xor
inc
add
enter
cmpsb
adc
mov
outsl
sub
jbe
icebp
mov
gs
push
stos
movsl
mov
push
ret
movsl
divb
mov
cmpsb
xchg
es
mov
push
je
in
xchg
stos
jnp
push
xchg
mov
xor
pop
cmpsl
mov
inc
push
bound
mov
imul
pop
shrl
popl
ds
xchg
and
xchg
cli
into
pop
pop
in
mov
mov
add
mov
jno
fisubrl
dec
arpl
mov
rolb
mov
cmp
stc
bound
mov
pop
lret
mov
repnz
mov
daa
and
dec
sbb
inc
jb
mov
add
leave
mov
add
mov
jo
mov
insb
daa
es
adc
add
add
add
push
add
pop
out
xchg
dec
ja
mov
mov
outsb
sbb
gs
add
jl
sbb
add
cmp
sbb
addr16
mov
inc
jns
lea
mov
mov
rolb
lds
sbb
mov
cmp
scas
mov
add
cmp
std
test
jnp
lock
mov
mov
pop
or
dec
aam
jl
imul
fldt
cmp
loope
sar
out
scas
sbb
dec
mov
add
mov
aam
add
imull
adc
push
pop
push
pushf
scas
mov
cwtl
lea
sbb
add
xor
mov
aam
mov
jecxz
push
out
mov
and
mov
jecxz
add
in
push
clc
push
xchg
push
jmp
sbb
cmpsl
pop
ja
jns
out
and
mov
add
mull
sti
cltd
push
aad
roll
in
outsb
dec
jno
jl
in
or
push
add
adc
mov
pop
xchg
add
mov
add
jmp
mov
movsb
lock
sbb
fidivrl
orl
lds
iret
jb
mov
in
xchg
icebp
xchg
jl
stc
jl
or
je
in
or
mov
add
test
rolb
mov
cmpl
rolb
mov
add
cmp
lock
mov
adc
mov
imul
mov
xchg
inc
add
hlt
scas
out
xor
mov
inc
add
xor
lret
push
jge
sub
add
fiaddl
add
aas
xor
mov
add
mov
lods
test
and
pop
sbb
jmp
sarl
repz
mov
mov
leave
jmp
mov
lods
fidivrs
gs
in
stc
push
fwait
sbb
test
adc
out
dec
adc
jge
ret
push
mov
mov
mov
inc
add
mov
std
mov
push
add
scas
xchg
add
in
sub
add
pop
rolb
mov
jmp
push
inc
dec
fcompl
bound
mov
sbb
xlat
mov
add
addr16
pushf
xor
mov
add
test
es
mov
lcall
roll
mov
addb
sti
sbb
xlat
shrl
fwait
sbb
or
dec
add
mov
cmpsl
mov
add
xor
jg
xchg
add
xor
incl
pop
out
sbb
loop,pt
mov
xor
mov
push
jbe
add
add
stos
jno
xor
mov
cmc
and
mov
mov
dec
mov
add
data16
or
add
mov
into
aaa
daa
imul
dec
clc
insl
fwait
popa
or
test
and
mov
mov
mov
jne
adc
iret
jecxz
add
add
xchg
sarl
mov
pop
push
add
hlt
mov
mov
mov
xor
mov
mov
mov
roll
mov
add
adc
push
aas
and
mov
into
flds
mov
mov
rolb
mov
sahf
jno
push
test
push
sub
xchg
fdivl
xchg
add
ljmp
dec
rolb
mov
or
ficoms
hlt
clc
int
and
inc
mov
fucomip
dec
and
mov
add
test
mov
movsl
ret
lods
jbe
addb
or
mov
out
stos
xchg
insl
and
sti
mov
sub
and
xor
mov
mov
out
dec
add
pop
cmc
in
pop
jle
xlat
std
dec
out
jno
mov
and
mov
xchg
sbb
fisttpl
mov
mov
mov
add
add
sub
rolb
mov
mov
cmp
fidivrs
adc
mov
sub
or
and
mov
fwait
pop
je
clc
mov
mov
daa
cmp
and
mov
add
mov
mov
mov
jp
addb
mov
mov
cmp
jae
iret
jbe
rcll
js
imul
mov
mov
stos
std
rolb
mov
mov
in
arpl
xlat
add
sbb
test
fsubrl
insb
std
sub
nop
add
mov
dec
add
mov
enter
pop
pop
je
or
and
mov
mov
add
ja
cltd
insb
jbe
pushf
aam
jle
ret
dec
cmpsb
ja
pcmpgtb
or
or
scas
aad
rcll
incb
jns
stc
pop
jmp
mov
sbb
mov
cmpsb
test
pop
mov
insl
mov
jecxz
mov
stos
sahf
jp
aaa
xchg
lods
sbb
scas
or
mov
jnp
das
aaa
push
and
icebp
push
mov
mov
xchg
adc
mov
repnz
lock
dec
or
and
in
xchg
or
sub
inc
xor
mov
mov
das
fldl
mov
add
jo
mov
jnp
add
jbe
cs
rolb
mov
mov
mulb
xchg
add
xor
mov
add
xlat
fmull
sub
js
nop
add
add
or
and
mov
jecxz
pop
fstp
and
mov
add
mov
add
add
add
fildll
xor
mov
lock
add
push
pop
popf
ds
rcrl
pop
pop
or
add
jecxz
ja
int3
std
adc
clc
lea
leave
and
pop
fdivrp
popa
jno
negb
xchg
clc
int3
stos
jmp
add
cld
aas
addl
and
mov
ds
adc
scas
sbb
insl
sbb
fcoml
sarl
nop
add
mov
pop
jge
test
stc
xchg
hlt
outsl
lods
jno
add
lods
mov
insb
js
pop
pop
and
mov
sbb
adc
movsl
push
mov
or
xchg
sti
jbe
aam
ljmp
mov
inc
fcoml
and
into
mov
add
cmp
mov
nop
add
out
push
mov
jo
mov
xchg
adc
sub
pop
ljmp
dec
int3
in
lcall
xchg
rolb
mov
mov
js
movsb
push
icebp
push
add
cld
cmc
push
dec
adc
mov
mov
jmp
stc
rolb
mov
push
mov
add
addb
push
push
mov
mov
add
adc
ja
push
jmp
cmp
inc
aam
add
pop
decl
inc
add
xchg
icebp
mov
addr16
sub
vpsraw
lahf
dec
jne
lods
rolb
mov
add
ljmp
sbb
xlat
fcomip
pop
in
cmp
jnp
xor
mov
add
and
mov
mov
filds
dec
pop
dec
jb
mov
push
adc
jge
or
mov
popa
pop
and
mov
int
sbb
add
addb
jg
enter
aas
sbbl
mov
frstor
or
insb
adc
mov
dec
into
clc
jns
jns
mov
add
xlat
lahf
in
pop
add
mov
in
xchg
ss
push
scas
add
mov
mov
pop
pop
mov
outsb
aam
push
jecxz
mov
je
cld
fsubr
sbb
or
add
push
xchg
lods
jge
loop
mov
push
movsb
je
xchg
scas
clc
jg
xor
push
mov
sbb
loop
mov
pop
loope
fwait
test
add
dec
rolb
mov
inc
mov
mov
mov
add
push
add
scas
cmp
mov
fiadds
jo
mov
dec
adc
pushf
loop
mov
mov
mov
inc
inc
add
stc
xchg
int
cs
fcmovnb
add
cmp
lods
xchg
loopne
mov
inc
add
add
insb
scas
push
jbe
pop
xor
mov
jns
lods
icebp
xor
and
sub
roll
cmp
jo
mov
bound
mov
add
xor
mov
mov
cmp
das
sub
movsb
xor
pop
xchg
ja
test
repz
loope
ret
mov
lret
fstpl
push
dec
ds
add
push
popa
or
xchg
out
pushf
mov
pop
and
fsts
aas
call
add
xor
ficoms
add
fs
adc
add
fisttpll
dec
fistps
pop
sbb
add
cmpsl
leave
loope,pn
add
add
rol
cmp
mov
dec
test
jnp
push
xchg
pop
jle
sbb
stc
push
cmp
jge
mov
mov
mov
add
ja
pop
sbb
add
loopne
mov
lock
ret
inc
pop
xchg
dec
xor
cli
jno
mov
add
mov
pop
aam
int3
fbstp
test
push
push
popf
fldcw
sbb
mov
jl
xchg
add
mov
test
clc
stos
push
loope
sub
push
icebp
mov
mov
inc
dec
add
sbb
leave
cmp
loopne
mov
sub
shll
out
and
mov
lcall
sti
arpl
mov
bound
mov
mov
cld
adc
mov
xor
add
mov
fstl
sub
xchg
test
add
xor
fidivs
jmp
outsb
push
push
or
jmp
mov
mov
mov
jae
lock
mov
add
add
lds
jo
mov
pop
sub
and
xchg
xor
mov
cmp
ds
stos
rolb
mov
add
dec
div
add
leave
cli
mov
push
insb
mov
mov
loopne
mov
fdivp
add
and
push
mov
addr16
add
push
test
loope
add
cmp
test
pop
sbb
xchg
add
mov
and
mov
mov
movsb
and
mov
add
scas
loop
mov
dec
sub
ljmp
test
mov
pop
jno
cmp
mov
xchg
add
fildl
je
jmp
xor
add
push
add
sarl
mov
mov
add
jne
popl
mov
inc
call
sti
xor
addb
clc
ret
sbbl
jb
mov
mov
arpl
and
mov
out
sti
cld
fwait
nop
add
jnp
mov
xlat
outsb
jle
cmp
add
jg
sbb
bound
mov
insb
and
mov
mov
xor
mov
and
test
sub
mov
add
and
mov
ret
xor
mov
shll
std
mov
xor
ret
in
add
mov
and
add
jg
add
adc
shll
push
and
push
add
arpl
fs
sbb
push
dec
cmpsl
lahf
popa
add
mov
sub
push
popa
adc
sbb
addb
stos
fwait
ret
in
sti
inc
add
mov
mov
jl
lcall
cmp
xchg
add
jle
add
out
mov
and
xchg
push
add
ret
mov
dec
push
cld
leave
lock
cld
mov
dec
ss
lahf
push
add
xchg
lret
add
mov
cmp
mov
loope
out
ret
jle
mov
mov
add
rep
mov
mov
test
mov
push
inc
add
add
and
mov
fsubrl
cmp
lret
pop
mov
loope
or
mov
sub
adc
aad
add
dec
imul
add
dec
outsb
out
or
std
test
pop
sbb
or
mov
mov
add
mov
sub
jmp
push
pop
outsl
inc
sbb
mov
mov
add
adc
push
add
adc
div
daa
add
sub
imul
iret
and
neg
nop
add
mov
xor
mov
pop
mov
add
add
jmp
pop
sub
mov
rolb
rolb
mov
jge
aad
notl
adc
mov
add
lock
popa
sahf
mov
out
test
add
xor
mov
daa
cmp
xchg
cli
mov
mov
mov
gs
add
or
jle
xchg
dec
addb
mov
push
xchg
aas
push
mov
icebp
les
cmc
sub
test
jl
or
les
roll
add
mov
scas
rcrl
add
dec
or
xor
add
sub
mov
jl
add
add
pop
mov
xchg
or
inc
pusha
add
mov
mov
out
popa
push
inc
xchg
movaps
in
or
arpl
lahf
inc
add
mov
jl
mov
inc
lret
arpl
add
mov
add
add
push
out
xor
add
out
cs
and
mov
adc
leave
adc
xchg
into
sub
mov
push
add
add
push
dec
roll
ljmp
add
mov
add
pop
xor
mov
icebp
xor
call
mov
mov
jl
xchg
sbb
pop
cmp
scas
pusha
add
mov
add
sbb
into
aas
cmp
pop
jge
pop
sbb
pop
adc
int
push
cmp
and
mov
add
or
add
mov
xor
mov
pop
shl
add
ja
hlt
daa
shl
mov
xchg
add
and
or
pop
sub
or
xchg
cltd
ss
sbb
mov
sub
fnstenv
mov
mov
inc
pop
in
cmp
add
mov
mov
scas
rorl
adc
scas
mov
mov
push
and
mov
mov
scas
and
ret
adc
mov
mov
ret
test
lods
loopne
mov
addb
rcr
mov
mov
mov
mov
mov
sti
pop
pop
negl
mov
lret
incb
add
jns
add
add
add
hlt
push
clc
sub
push
push
mov
cmpl
fs
jbe
bound
mov
lods
sti
outsb
fisttps
mov
mov
jge
rep
into
cmc
ret
ds
repz
mov
jge
pop
sub
sbb
arpl
data16
mov
or
js
sbb
imul
add
sbb
xchg
mov
mov
ds
data16
aam
inc
ret
test
mov
rolb
mov
pop
sub
test
loopne
mov
add
mov
leave
adc
mov
aas
mov
movsl
adc
mov
add
shrl
and
mov
sbb
in
mov
mov
add
add
add
xlat
xchg
mov
mov
add
iret
out
je
ljmp
adc
mov
add
jne
repz
arpl
or
icebp
call
push
stos
pop
aaa
pop
inc
add
nop
add
mov
inc
jg,pt
rolb
mov
dec
insb
jno
mov
xchg
call
pop
neg
in
cld
or
dec
push
add
add
mov
dec
repz
or
cmp
xor
mov
ficoms
mov
dec
gs
aam
and
xchg
or
add
scas
dec
orl
out
lods
mov
mov
xchg
add
stc
les
sub
push
jmp
add
add
dec
lods
fistpl
mov
pop
lcall
mov
jmp
add
or
add
shrl
mov
fidivrs
mov
adc
mov
mov
and
mov
add
cli
mov
jb
mov
dec
lahf
and
mov
addb
out
lahf
notl
mov
pop
repz
dec
pop
fldenv
jle
scas
xor
add
xor
mov
and
sti
fidivrs
adc
lods
xor
ljmp
in
mov
int
sbb
push
add
int
movsb
mov
mov
mov
jg
pushf
popa
and
mov
out
lahf
mov
jle
fiaddl
repnz
fcmove
aam
mov
and
pop
mov
xor
in
add
pop
or
add
test
mov
addb
adc
iret
xor
mov
lds
mov
mov
ja
push
push
add
add
push
fsubrp
xchg
in
sub
add
and
mov
add
popf
xor
lods
mov
in
jb
mov
mov
enter
sbb
cmp
add
add
add
inc
inc
add
sbb
and
pop
mov
icebp
sbb
out
dec
adc
clc
test
or
add
push
xor
mov
mov
hlt
out
test
xor
sbb
int3
in
stc
loope
push
sbb
or
bound
mov
mov
pop
push
sub
lret
sub
xor
mov
inc
add
icebp
outsb
sub
cwtl
lret
pop
pop
addb
sbb
cmp
pushf
in
inc
stos
adc
sub
add
mov
push
repnz
dec
sub
add
imul
outsb
sbb
mov
mov
mov
mov
mov
push
pop
xchg
mov
aam
inc
mov
lea
mov
in
cwtl
pop
test
aad
fcomp
push
xor
addb
lahf
add
mov
sub
push
add
mov
clc
jne
lret
test
out
add
sbb
mov
and
mov
mov
mov
sub
xchg
roll
hlt
cmp
push
add
js
push
add
movsb
fiaddl
mov
stc
xor
mov
add
or
hlt
adc
mov
add
mov
lds
add
sub
daa
nop
add
ljmp
cmp
push
add
sbb
add
call
add
mov
ljmp
mov
jmp
stos
or
inc
repz
fiaddl
mov
test
cmpsl
bound
mov
sub
sub
fcmovbe
fistpll
add
mov
in
sub
mov
add
inc
xor
mov
pop
mov
add
xchg
popa
les
add
mov
divb
sub
xor
aad
mov
into
aas
jns
pop
mov
and
mov
cmp
insb
ret
pop
out
pop
pop
mov
scas
pop
pop
sub
out
xor
mov
lds
gs
push
dec
std
outsl
mov
lcall
mov
add
rcll
mov
add
and
mov
mov
jne
jle
pop
lcall
es
dec
push
xlat
cmp
mov
nop
add
mov
shll
jne
dec
jle
out
scas
cmp
add
mov
cli
ret
mov
scas
xor
mov
add
mov
mov
or
sahf
xchg
mov
mov
mov
cmpw
xor
pop
adc
mov
sbb
add
dec
out
ds
push
or
push
and
add
xchg
mov
cld
aaa
dec
addb
lret
inc
push
add
lea
xor
mov
je
push
addb
pop
mov
mov
and
movsb
mov
add
dec
lods
in
cmp
repz
dec
jl
jg
loope
fs
xor
or
lret
mov
mov
ret
out
mov
mov
mov
in
mov
f2xm1
add
popa
push
rcll
xor
add
add
pop
stos
arpl
popa
dec
jmp
and
mov
mov
mov
sbb
mov
mov
add
add
in
cmp
pop
pop
daa
mov
dec
test
mov
sbb
jecxz
ljmp
test
ss
mov
add
cmp
xlat
sbb
jmp
inc
add
in
fbld
repnz
pop
rolb
mov
or
int3
sbb
mov
add
mov
add
aam
outsl
cmpsl
fildll
sub
add
jp
rolb
mov
mov
mov
mov
fidivl
repnz
and
push
lret
fnstenv
pop
push
sub
inc
sub
add
mov
shll
sub
pushf
repz
add
mov
ljmp
xor
adc
pop
stc
pop
fwait
rolb
sbb
mov
pop
jae
orl
adc
sti
jl
sbb
fnstcw
lock
mov
add
add
mov
add
popf
and
mov
mov
push
cwtl
jno
dec
mov
js
test
shll
sti
or
add
sti
rorl
inc
les
push
test
mov
mov
cli
movsl
fsubrs
add
sub
mov
ror
xchg
add
roll
push
mov
cmp
push
mov
test
sbb
adcl
decb
add
aad
mov
xlat
movsl
iret
jae
imul
int
fnsave
add
adc
mov
aas
xor
sbb
push
ror
pusha
add
adc
or
flds
push
add
or
je
outsl
pop
adc
adc
mov
out
cmp
gs
add
stos
mov
push
add
dec
imul
add
add
cli
jo
mov
pop
fisubs
add
inc
jle
add
mov
aas
add
pop
in
fdivrs
add
and
add
fidivl
xor
into
scas
pop
xchg
jl
add
fnstsw
in
sub
add
dec
jae
shl
sahf
sbb
subl
pop
pop
pop
or
add
and
imul
dec
mov
mov
add
outsl
push
pop
in
xchg
shll
scas
cmp
push
add
cmp
imul
and
mov
cld
insb
addr16
lcall
and
mov
cld
inc
int
arpl
clc
lock
stos
movsb
push
add
mov
pop
aad
loop
mov
mov
mov
add
add
push
or
shll
add
mov
mov
jmp
imul
jae
and
mov
nop
add
cmp
loope
add
sbb
xor
mov
push
test
outsb
mov
popf
xor
mov
ss
add
xor
adcl
mov
jbe
sub
lock
add
lods
cmp
pusha
add
vunpcklps
test
mov
cwtl
mov
out
jb
mov
cmp
into
cmp
in
test
mov
mov
add
xor
test
out
mov
rolb
mov
or
add
mov
add
inc
cmpsl
lods
dec
mov
add
mov
add
loop
mov
jne
push
add
cmp
add
dec
mov
add
cmc
and
add
in
fsubl
mov
add
mov
sub
stc
lahf
outsb
fsubs
js
in
std
push
rolb
mov
jl
outsl
imul
inc
sub
sub
add
push
push
sub
gs
mov
fwait
dec
mov
mov
lret
adc
jns
pop
push
stos
mov
push
inc
cmc
and
mov
add
loope
push
cmpl
data16
fcomps
add
cmpsb
sbb
xchg
mov
jae
jae
rcrl
sub
add
inc
add
leave
sub
mov
pop
lcallw
mov
insl
fildll
add
fwait
iret
adc
add
jbe
sbb
pop
sub
xchg
jae
mov
mov
ret
ja
rolb
mov
inc
add
mov
fsubp
sub
ds
mov
and
mov
addb
ret
adc
mov
add
call
add
lods
pop
in
and
mov
inc
jecxz
xchg
ds
jno
arpl
mov
sti
mov
movl
inc
xor
fxch
jmp
mov
mov
clc
and
int
add
pop
jnp
jno
jns
mov
xchg
add
jp
or
scas
call
or
jge
lret
ret
adc
mov
add
pop
or
adc
mov
jae
lea
push
les
mov
mov
arpl
pop
loop
mov
lock
mov
mov
das
inc
dec
repnz
addb
pop
mov
add
mov
add
or
mov
cmp
lcall
mov
or
mov
push
push
ljmp
mov
add
sub
xor
fsubrl
ljmp
add
into
aas
je
pop
push
fildll
in
cli
pop
outsb
mov
dec
jnp
out
mov
adc
add
in
xor
nop
add
stc
pop
jle
mov
mov
mov
addb
push
addb
push
push
dec
and
mov
div
imul
test
add
mov
stos
fdivrs
sbb
add
dec
test
and
mov
addb
lods
fnstsw
mov
jle
in
push
mov
mov
add
add
sub
fcmove
pop
fs
add
dec
scas
lahf
cld
push
fs
add
in
sub
push
stos
addb
data16
testb
test
lret
movsb
dec
push
ret
mov
xor
dec
ret
pop
bound
mov
andl
jno
adc
cwtl
stos
dec
xchg
cli
sub
sbb
gs
push
mov
fnstenv
mov
jb
mov
mov
sbb
cmc
out
push
inc
add
add
addb
movsb
inc
adc
mov
imulb
and
mov
cltd
or
es
add
mov
jbe
aas
dec
pop
test
movsl
test
mov
inc
add
mov
fists
mov
mov
lods
jmp
ret
push
add
addl
mov
vcmpss
stos
and
cmp
lahf
and
or
add
cmc
mov
xor
mov
cs
cmp
add
test
sub
insb
dec
out
inc
or
iret
mov
into
mov
scas
loope
xchg
add
hlt
fdivs
faddl
testl
push
sub
repnz
inc
push
ficomps
xor
mov
add
inc
aaa
inc
add
sub
sub
movsb
dec
or
add
xchg
mov
add
cwtl
xchg
aas
mov
inc
add
mov
adc
mov
and
mov
inc
lods
fisubrl
jmp
and
add
scas
in
dec
sub
inc
add
dec
jmp
daa
sbb
pop
out
add
out
test
nop
add
enter
and
mov
mov
addb
jp
pop
push
jge
pop
jno
cmpsb
out
xor
push
xor
mov
xor
dec
or
pop
popf
ljmp
push
lea
push
cmc
jnp
xchg
mov
add
add
out
dec
das
xchg
add
nop
add
add
mov
cmp
mov
xchg
stc
and
add
xchg
mov
inc
nop
add
add
mov
add
mov
stc
mov
repnz
stc
cmpsb
lcall
jne
jne
add
lods
icebp
push
sub
jecxz
add
push
cwtl
pop
mov
mov
jg
cli
popa
pushf
jns
add
add
mov
add
dec
aaa
or
lahf
sub
or
fcmovne
add
arpl
sub
shll
add
imul
jne
mov
rolb
mov
jbe
add
mov
sub
and
add
xlat
jno
push
mov
mov
and
push
pop
adcl
xlat
mov
fwait
negb
insl
pop
xchg
inc
add
and
aaa
arpl
and
mov
repnz
dec
fwait
daa
mov
out
add
in
cmpsb
lea
add
mov
lea
fsubr
push
add
mov
mov
enter
sbb
add
jmp
and
mov
or
and
mov
test
leave
lds
add
xchg
push
es
ret
iret
add
or
jnp
add
imull
or
call
decb
loop
mov
sbb
movsl
push
add
add
jo
mov
add
mov
int3
and
mov
loop
mov
xchg
in
into
mov
mov
sarl
xchg
ret
adc
inc
jnp
jae
mov
imul
jmp
mov
mov
jecxz
add
je
add
mov
ret
pop
push
jmp
xchg
in
xor
sbb
rolb
mov
testl
imul
je
sub
les
out
cltd
in
lods
or
jmp
add
aaa
mov
add
mov
addr16
xchg
jmp
pop
cmp
mov
add
jnp
add
es
sub
push
add
mov
add
ret
les
stos
sbb
jne
mov
dec
loope
or
addb
cmp
mov
mov
sti
jge
cmp
fidivs
mov
sub
and
cltd
or
cmp
ficompl
xor
mov
popa
xchg
out
call
in
push
add
pop
add
push
in
mov
loop
mov
mov
and
mov
add
add
push
mov
aaa
cwtl
sbb
mov
sbb
add
mov
adc
iretw
nop
add
out
dec
or
addr16
bound
mov
cmp
mov
add
addl
sbb
add
push
push
sbb
cmp
xchg
clc
cmpsl
dec
sahf
add
add
cmp
int3
sbb
rcr
mov
jnp
add
add
and
mov
cmp
insl
dec
fs
iret
fwait
cwtl
mov
jge
out
sub
je
stc
dec
idivb
pop
cmc
inc
mov
ret
pop
aad
push
and
cmpsb
rolb
mov
add
mov
xchg
sub
test
bound
mov
mov
jg
xchg
xchg
add
jmp
loopne
mov
fs
lahf
mov
cmp
adc
mov
movb
mov
fwait
adc
js
cli
rolb
mov
rcll
add
add
ret
sub
jge
push
dec
stos
push
lahf
enter
add
insb
xchg
scas
xchg
and
jns
nop
add
inc
dec
push
je
mov
bound
mov
add
stc
idiv
shr
cltd
or
lock
add
inc
outsb
sahf
cs
mov
mov
push
mov
or
repz
lea
mov
or
dec
and
loope
fsubs
stos
incb
scas
test
push
xor
mov
icebp
jp
mul
add
sbb
xchg
add
or
add
add
cmc
cmp
int
jb
mov
mov
mov
fmulp
arpl
pop
sbb
jge
scas
or
sub
push
icebp
shll
mov
add
fadds
or
mov
stc
das
insl
jne
cli
jo
mov
add
rolb
mov
dec
movsb
leave
cltd
jb
mov
ja
mov
pop
or
add
pop
popa
ljmp
mov
add
arpl
push
xor
and
mov
arpl
add
add
insb
sbb
push
sbb
aam
add
testl
mov
cmpsb
push
pop
jno
jae
dec
mov
mov
jge
inc
repnz
cmp
inc
add
or
jbe
std
jnp
inc
add
jmp
stc
pop
test
aad
pop
scas
and
je
jbe
lahf
in
add
shld
ret
jnp
mov
and
dec
xchg
shl
and
bound
mov
fst
add
je
xor
daa
jnp
test
mov
add
mov
testl
call
loop
mov
sub
cmp
fcompl
fldt
push
test
aad
push
add
cwtl
insl
popa
pusha
add
push
push
lret
mov
xor
add
xor
mov
cmc
movl
std
sbb
mov
add
cmpl
mov
or
aas
xchg
ret
out
aad
jnp
loope
jmp
ljmp
jnp
lds
stc
fcompl
mov
lods
mov
push
stc
adc
push
cmp
add
inc
in
push
popf
jmp
add
mov
mov
into
fnstenv
mov
push
push
inc
jl
push
lods
arpl
xchg
pop
ss
adc
mov
push
cwtl
cld
mov
inc
bound
mov
cmp
roll
mov
cmp
stos
arpl
insl
mov
mov
and
sub
xchg
xchg
or
add
sbb
mov
or
mov
fsub
lods
cmp
mov
dec
inc
ret
jns
insl
push
mov
mov
ja
mov
mov
repnz
mov
pop
imulb
lods
or
add
mov
sbbl
je
add
call
sbb
xchg
sub
dec
aam
and
mov
mov
mov
pop
cltd
inc
mov
mov
out
shll
add
lea
inc
add
jl
ja,pn
mov
jne
pusha
add
dec
or
ds
loop
mov
cmp
pop
das
inc
inc
test
sub
sub
popa
mov
mov
fcomps
mov
and
push
xor
mov
add
test
pop
addb
out
push
push
loopne
mov
nop
add
jb
mov
add
inc
addb
xchg
or
add
js
pop
inc
add
add
hlt
and
test
jmp
mov
add
fidivrl
mov
movsl
mov
mov
add
add
add
sbb
lods
mov
add
dec
pop
cmpsb
popa
adc
add
mov
or
cld
cwtl
xor
inc
add
in
and
sub
adc
loopne
mov
fbstp
add
adc
mov
movsl
sub
xchg
push
xchg
pop
leave
or
add
inc
mov
pop
mov
jmp
sub
add
jp
sub
test
adc
rcll
mull
loop
mov
push
pop
in
inc
mov
lds
lret
or
lret
ljmp
add
mov
and
mov
add
mov
mov
dec
inc
aam
pop
cmp
inc
xor
add
cs
bound
mov
sbbl
out
sbb
jmp
mov
jle
add
pop
jecxz
or
adc
mov
jecxz
and
add
dec
jle
daa
jb
mov
cmpsb
mov
rolb
es
mov
inc
and
mov
fxch
stos
cmp
repnz
and
rolb
xchg
pop
imul
cltd
push
popa
push
pop
les
pop
inc
add
inc
add
xchg
jbe
lock
pop
fsubrl
xor
mov
push
add
add
mov
mov
and
aas
add
add
inc
cmpsb
cld
mov
clc
cmp
and
mov
cs
popa
fcoml
scas
addb
add
pop
aam
xchg
rcll
outsb
mov
xor
xchg
add
push
test
inc
mov
jp
call
cmp
std
mov
add
mov
in
outsb
inc
adc
mov
aad
mov
inc
xor
cld
cwtl
and
mov
mov
mov
mov
mov
popl
cmp
mov
lret
fwait
or
xor
xchg
mov
add
push
sub
add
mov
xchg
lods
cmpsl
lcall
insl
loope
roll
add
dec
addb
jge
or
add
inc
sahf
fwait
cwtl
cmc
bound
mov
sbb
mov
fcomp
arpl
mov
pop
adc
mov
out
dec
jge
test
cmpsb
inc
ljmp
mov
lret
mov
dec
pop
sbb
outsl
jle
loopne
mov
loop
mov
sbb
xchg
or
mov
jle
push
aam
push
aaa
add
or
ss
push
and
pop
cmp
data16
push
push
add
mov
mov
idivb
mov
add
lods
jae
push
or
ss
and
push
in
mov
ret
mov
out
bound
mov
xchg
add
aas
sar
adc
je
fbld
jb
mov
mov
fstpt
jae
xor
jnp
or
pop
mov
dec
mov
fsubrs
pop
inc
dec
cmp
add
movsl
pop
adc
mov
push
push
fsubrs
adc
mov
out
add
jnp
push
out
lods
xor
mov
dec
push
test
mov
jae
sbb
sub
add
xor
mov
nop
add
mov
fisubrl
push
cmp
cmpsl
add
mov
jb
mov
push
in
sub
fsubl
lods
fnstcw
rorl
cli
insb
jl
scas
adc
dec
push
add
or
movsl
add
add
or
int
ljmp
mov
mov
cmpsb
lret
in
rolb
lods
adc
mov
cli
dec
mov
add
sub
and
sub
add
inc
pop
mov
mov
add
add
add
mov
jno
add
or
out
add
ljmp
add
push
fsubs
jge
repnz
hlt
mov
cmp
add
loope
jns
mov
ret
add
cmp
xchg
dec
lods
pop
jge
add
repnz
hlt
fisttpll
rolb
mov
data16
push
add
xor
mov
mov
xor
mov
sti
mov
mov
sub
in
pop
subl
sub
daa
rcll
mov
mov
sub
sub
xor
jp
inc
flds
mov
add
inc
fistpll
mov
divl
add
xchg
inc
push
add
loop
mov
add
cmp
add
or
pop
inc
add
ret
cmp
xchg
and
imul
add
outsb
movsl
sub
add
das
stos
les
imul
add
dec
shl
popa
ja
lods
cmpsb
into
dec
xchg
xlat
sub
out
mov
add
outsb
frstor
fldenv
or
jl
add
test
jl
cmp
leave
scas
jg
addb
fists
mov
mov
jae
jae
mov
mov
cmpsb
out
cmp
add
inc
add
negl
in
cmp
push
mov
test
mov
mov
adc
mov
mulb
add
xor
std
pop
int3
fs
mov
add
cmp
fs
add
fcmovnbe
in
sti
push
lods
inc
imul
mov
stc
shrl
clc
or
ss
pop
pop
cltd
call
js,pn
xor
mov
cmpsl
mov
add
push
add
mov
loope
add
daa
jnp
arpl
add
xor
mov
out
jl
andl
add
push
fnstenv
das
rolb
mov
test
popa
dec
and
mov
pushf
push
addr16
nop
add
add
or
xor
je
adc
mov
add
mov
into
add
mov
inc
and
adc
cmc
jne
sub
pop
jg
mov
mov
cmp
mov
insb
out
add
scas
mov
enter
mov
add
jmp
jmp
push
jbe
lods
ds
into
add
mov
sub
pop
in
sbb
outsl
mov
push
inc
add
addb
push
rolb
mov
pop
cmp
jge
add
add
arpl
push
aam
repz
add
mov
push
adc
mov
inc
add
mov
push
mov
test
data16
ja
push
add
pushf
jno
sub
test
imul
mov
icebp
bound
mov
and
inc
icebp
pop
aas
insb
pop
test
mov
filds
jbe
mov
lcall
or
and
icebp
in
mov
orl
mov
shll
jno
mov
add
outsb
int
add
add
mov
xor
mov
les
add
lahf
add
mov
loope
mov
mov
test
cmp
mov
add
mov
insb
sbb
ftst
xchg
add
adc
mov
outsl
mov
dec
aad
xchg
aaa
cmp
cmp
mov
pop
push
jl
sahf
dec
xlat
test
add
dec
test
inc
stos
mov
mov
xchg
pop
or
pop
xor
loope
mov
pop
addb
push
pop
in
xchg
mov
dec
outsb
decb
mov
jno
pushw
lret
add
jne
loop
mov
je
ja
mov
lret
jnp
ret
clc
fstp
imul
adc
fmull
dec
clc
jecxz
jbe
pop
scas
and
add
pop
mov
add
insb
loopne
mov
add
jbe
js
add
mov
sub
add
repnz
jecxz
jle
add
lret
sub
adc
add
and
mov
mov
mov
add
xor
andl
push
push
push
mov
repnz
adc
mov
pop
ljmp
addb
push
mul
sbb
loop
mov
add
xchg
dec
lret
stos
pop
add
lret
cs
scas
dec
icebp
ret
adc
jmp
mov
add
add
xor
dec
jb
mov
mov
inc
daa
mov
adc
mov
into
mov
jl
sbb
add
push
push
sub
add
and
mov
je
inc
add
and
mov
rolb
mov
mov
push
add
mov
aaa
xor
mov
and
mov
addb
mov
add
mov
aad
leave
shrl
push
pop
stos
dec
lock
mov
fcoml
add
jmp
mov
call
cld
adc
mov
mov
sysenter
mov
and
ja
mov
xchg
add
add
add
nop
add
ja
call
test
cmpsb
mov
pushf
mov
mov
jg
mov
ja
mov
inc
pop
sbbl
inc
loop
mov
cmp
divb
imul
push
fbstp
push
rolb
mov
add
push
leave
inc
dec
int
sbb
test
and
mov
nop
add
in
inc
xchg
popf
data16
mov
incb
jnp
inc
data16
pop
cmp
adc
mov
das
xor
add
int3
rolb
mov
mov
lds
jne
pop
sahf
scas
ss
lock
adc
mov
add
inc
js
push
pop
mov
pop
data16
add
fimull
outsb
jbe
add
pop
adc
loope
test
or
push
leave
fcoml
dec
inc
mov
add
pop
ret
ficomps
lds
out
jns
pop
adcl
and
mov
test
lea
cmpsb
test
mov
movsl
clc
imul
gs
out
in
out
dec
push
lods
push
je
and
sub
push
pop
lods
xlat
insl
jge
and
mov
and
jl
push
jns
add
sub
mov
les
add
mov
stos
imul
fisttpl
sarl
sbb
push
add
fdivs
lock
addl
mov
lahf
testb
inc
mov
inc
pop
jns
add
fistpll
stc
iret
fadds
mov
outsl
ret
bound
mov
add
mov
mov
addb
cmp
jno
add
mov
daa
in
mov
sbb
add
mov
cmc
inc
cmp
add
loope
add
mov
aas
push
int
int
rolb
in
mov
mov
mov
add
and
mov
cmc
pop
pop
pop
cmp
jl
xchg
cmc
xor
mov
int3
inc
cltd
and
jl
enter
xor
push
addr16
jbe
stos
inc
aas
ss
mov
jg
xor
add
adc
mov
xchg
das
mov
xor
stc
mov
add
rcll
add
add
dec
pop
test
add
pop
fistl
test
xchg
cmc
xor
mov
jg
mov
mov
add
inc
add
adcl
int
or
mov
inc
int3
enter
lods
inc
add
jle
jo
mov
addr16
flds
mov
jp
sub
add
or
inc
pop
mov
dec
push
daa
xchg
add
loopne
mov
das
data16
cmp
jl
xor
mov
add
add
sti
push
rcrl
adc
add
std
fnstcw
and
push
data16
and
mov
mov
out
insl
pop
mov
add
mov
into
dec
mov
mov
add
mov
cmp
mov
fs
pop
push
stc
inc
lahf
pop
pop
or
gs
dec
add
mov
ret
loope
arpl
cli
movsb
push
cwtl
adc
stos
mov
dec
inc
add
jg
pop
xchg
sar
shrd
mov
lret
jecxz
add
sbb
mov
mov
mov
jo
mov
addb
xchg
push
add
sbb
pop
xor
andl
add
push
lcall
repnz
sbb
scas
or
mov
jb
mov
inc
lea
push
push
pop
popf
out
mov
pusha
add
mov
les
out
lods
xchg
inc
lods
jbe
xchg
add
adc
sub
xor
mov
repnz
add
pop
mov
mov
mov
pop
adc
sub
mov
push
push
int3
mov
mov
mov
sbb
push
jle
mov
mov
sahf
ljmp
xchg
es
add
add
mov
out
nop
add
ljmp
jae
add
dec
mov
mov
or
mov
dec
insl
nopl
pop
sti
mov
mov
xchg
add
add
mov
push
mov
iret
int
das
push
out
clc
sbbl
sbb
xor
mov
add
shl
mov
fisttpl
sbb
gs
xor
add
cwtl
int3
mov
cld
jle
push
in
add
fistpll
sub
and
das
cmpsl
cwtl
int3
gs
sbb
add
mov
and
mov
repz
inc
call
mov
add
aam
cmpsl
or
fwait
cmpsb
push
add
mov
add
or
and
dec
mov
lds
jo
mov
mov
add
fsqrt
addb
shll
mov
xor
mov
mov
fwait
movsl
mov
xchg
movsl
pop
cmpsl
pop
mov
aam
rolb
mov
inc
and
mov
xchg
add
cmp
popa
or
sbb
les
push
pop
lahf
adc
dec
test
jnp
dec
sbb
outsl
xchg
push
mov
dec
and
mov
xchg
add
addb
aad
outsb
mov
stos
jno
out
ljmp
mov
stos
cmc
cld
mov
int3
xor
pushw
pushf
outsl
lret
bound
mov
add
int
jl
pusha
add
gs
pop
imul
sti
fdivrs
idivb
mov
das
shll
cmp
jmp
mov
ds
aad
pop
push
cmp
inc
psubq
sets
push
add
addb
xchg
outsb
sahf
jl
push
add
and
sbb
sub
repnz
cmp
and
out
pop
xchg
mov
mov
mov
pop
rolb
mov
add
cmp
int
loope
addb
dec
pop
sbb
lahf
mov
sub
xchg
push
lret
mov
add
pop
repnz
and
add
imul
cmp
xlat
sub
or
hlt
or
mov
push
jo
mov
mov
cwtl
sbb
hlt
cmpsb
jle
mov
pop
cmp
push
mov
mov
xchg
push
sahf
pop
into
lods
cmc
cmp
bound
mov
inc
pop
cltd
dec
mov
add
popf
jnp
xor
and
out
out
cmp
icebp
xor
mov
rcll
jl
dec
dec
cs
fbstp
imul
and
stc
loopne
mov
add
aad
add
sub
stc
lea
mov
cltd
int3
repnz
add
test
dec
stos
mov
test
inc
push
into
outsb
mov
mov
adc
mov
add
add
loopne
mov
cmp
fmull
jmp
add
out
cli
inc
add
jnp
andl
mov
add
mov
repnz
ret
imul
in
lock
add
pop
jg
aas
add
sahf
and
xor
jge
loope
ds
loopne
mov
add
push
les
out
pop
sub
push
add
into
jne
and
add
sbb
mov
add
sub
dec
jmp
test
cmp
inc
and
xchg
push
hlt
sub
sbb
aam
je
sahf
mov
xchg
cs
mov
or
dec
mov
mov
scas
in
lahf
mov
xchg
dec
dec
addb
and
adc
mov
std
jb
mov
push
inc
jge
add
fisttpll
test
imul
lret
stc
mov
aaa
pop
dec
pop
push
or
add
mov
sub
in
out
loope
rolb
jl
add
aad
add
adc
xchg
sbbl
add
mov
loope
addb
movsl
rcrl
xor
sti
push
aas
mov
jecxz
insl
jl
int
enter
sub
and
fcmove
pushf
or
mov
loop
mov
lret
mov
pop
or
add
inc
add
dec
iret
divb
mov
adc
rolb
hlt
out
sbb
add
adc
mov
inc
add
mov
mov
iret
inc
push
mov
mov
add
mov
fisubs
sti
ret
ficoms
adc
mov
sub
push
pop
xchg
lock
iret
cmp
rolb
mov
xor
je
dec
or
sub
test
jno
lds
out
xchg
push
xor
mov
cmp
sbb
mov
lods
mov
add
add
push
loop
mov
mov
cmp
out
in
add
hlt
xor
mov
cmp
push
jno
pop
aas
pusha
add
fiadds
icebp
stc
sub
mov
jle
es
mov
rolb
mov
sbb
push
mov
mov
add
mov
cmp
jb
mov
xchg
aad
cwtl
loope
add
mov
lock
cmp
sub
call
pop
jmp
dec
aam
push
cmp
xor
lods
out
or
cmp
adc
mov
and
sbb
es
pusha
add
ret
rolb
mov
jmp
sbb
sub
int3
push
rolb
mov
mov
sub
repnz
mov
or
outsl
fnstsw
jae
and
add
rolb
mov
push
add
add
mov
add
aam
inc
das
mov
mov
bound
mov
popf
xchg
hlt
test
out
push
mov
gs
rolb
mov
clc
ss
lea
ljmp
pop
iretw
ljmp
loop
mov
add
cmp
cmp
faddl
out
bound
mov
sbb
pop
iret
insb
add
dec
fs
jb
mov
out
fnstcw
imul
in
jle,pn
adc
mov
and
add
data16
in
xchg
addb
push
xor
sub
push
add
pushf
dec
dec
pop
mov
sbb
pusha
add
add
add
scas
stos
leave
pop
sub
cwtl
ret
pop
xchg
jns
jp
dec
add
mov
fs
pop
dec
loope
add
lcall
inc
cmp
jnp
bound
mov
dec
dec
dec
aam
push
adc
movsb
sbb
rolb
mov
cld
mov
iret
fxtract
xchg
mov
mov
outsl
xor
leave
cltd
jp
hlt
test
pop
jle
int3
data16
mov
pop
jp
rolb
mov
mov
adc
add
mov
mov
add
pop
xor
xchg
ljmp
add
mov
sub
jge
popa
in
outsl
push
adc
pop
add
mov
mov
mov
jne
scas
and
mov
mov
add
sbb
add
dec
jnp
jo
mov
ficompl
setl
ljmp
mov
dec
xor
mov
inc
jns
arpl
jmp
sbb
add
or
into
out
add
add
add
mov
xor
mov
push
scas
seta
add
mov
add
stos
aaa
xchg
movsb
popf
mov
mov
xchg
sbb
arpl
xorl
add
mov
cwtl
add
rolb
xchg
add
neg
push
add
sub
mov
add
pop
jecxz
xchg
rol
iret
push
dec
adc
mov
add
add
add
pop
or
dec
repnz
cmp
mov
jo
mov
clc
mov
xchg
lret
adc
mov
add
add
movsl
lret
movsb
xchg
loopne
mov
hlt
lock
sub
addb
push
jo
mov
repnz
push
ss
sub
call
clc
push
add
ret
hlt
test
add
push
adc
push
push
std
ljmp
test
xchg
add
data16
lock
add
jp
sbb
fnsave
jle
mov
ret
jno
dec
gs
dec
fisttps
das
mov
adc
fdivr
jmp
push
adc
test
bound
mov
adc
in
and
mov
loope
add
xchg
jne
std
fs
pop
inc
or
add
mov
mov
mov
stos
dec
xchg
jg
mov
jmp
fidivs
scas
dec
leave
xor
dec
xchg
add
sub
mov
pusha
add
dec
dec
mov
jmp
inc
add
jp
push
cmc
pop
call
xchg
dec
imul
push
mov
xor
lds
lods
leave
xchg
add
lret
adc
push
push
addr16
sub
add
cmpsl
lock
xor
pop
std
imul
xchg
dec
shr
dec
test
rolb
mov
mov
mov
mov
pop
lods
push
lods
arpl
adc
sbb
scas
test
and
mov
aam
add
mov
out
mov
or
add
rolb
es
test
loop
mov
jne
nop
add
mov
mov
bound
mov
or
add
aad
push
and
pop
push
dec
aam
add
mov
cmp
mov
inc
jnp
andl
shll
add
in
add
dec
or
add
sbb
fists
jo
mov
add
mov
xor
push
sbb
add
adc
pop
rolb
mov
push
dec
ror
push
adc
stos
pop
add
test
int
leave
dec
cltd
jno
scas
mov
stc
rolb
mov
imul
dec
mov
mov
mov
add
arpl
jb
mov
out
mov
mov
hlt
or
xlat
repz
loopne
mov
aad
inc
insb
xchg
int
and
add
add
mov
insb
mov
pop
mov
add
jge
adc
sbb
add
lahf
jmp
out
pop
pushf
jb
mov
push
mov
sahf
sbb
add
add
xchg
jno
inc
pusha
add
mov
fucomp
mov
sub
mov
les
orl
jne
add
cmc
inc
adc
mov
ret
dec
or
int
xchg
add
sub
jne
fisttps
rcrl
mov
fwait
cs
sub
and
pop
test
or
mov
add
add
mov
addb
lret
test
xchg
xor
imulb
add
lcall
xchg
sbb
mov
xlat
pop
fwait
jno
xchg
hlt
je
outsb
fnstenv
out
mov
dec
icebp
add
mov
mov
sbb
and
mov
push
add
mov
lret
sti
lds
add
add
pop
dec
mov
pop
pushf
inc
ljmp
insl
rolb
mov
addb
mov
dec
push
imul
loop
mov
notb
bound
mov
mov
hlt
stos
inc
add
lds
or
add
iret
add
out
dec
out
jnp
fcmovnu
xchg
shll
mov
push
and
adc
mov
pushf
sbb
push
push
xchg
dec
pusha
add
sbb
int
mov
push
in
sbb
out
lock
push
push
push
mov
mov
cmpsl
fcomp
filds
mov
fidivs
mov
and
mov
loopne
mov
pop
mov
add
stos
sti
aaa
push
jecxz
and
mov
addr16
mov
add
mov
fistpll
rcl
add
inc
add
sbb
cmp
push
pop
pop
mov
daa
xchg
add
stc
fists
xchg
pop
daa
cmp
movsb
fists
or
call
int3
repnz
add
mov
mov
sub
pushf
adc
add
mov
adc
mov
sub
mov
rolb
mov
mov
int3
test
aam
mov
ljmp
outsb
in
xor
insl
pop
sysenter
repz
cmc
das
pusha
add
and
mov
push
add
mov
adc
adc
scas
adc
mov
pop
mov
or
popa
jmp
mov
xor
addb
adc
ds
pop
cmc
add
mov
out
jns
clc
jge
outsl
js
mov
dec
mov
mov
int3
rolb
mov
mov
jno
ret
cmpsl
pop
mov
mov
add
mov
xor
mov
mov
pop
ljmp
sti
dec
int3
mov
mov
xchg
sbb
cmpsl
mov
mov
add
mov
push
xor
inc
pusha
add
add
ret
sbb
dec
mov
add
mov
push
mov
lahf
jno
add
mov
add
inc
test
movsl
mov
mov
lods
dec
pop
cwtl
repz
pop
sbb
imul
pusha
add
scas
push
mov
dec
cmpsl
add
mov
add
dec
shrl
mov
mov
push
adc
cmc
push
cmp
imul
loope
inc
inc
add
rolb
enter
or
push
sub
or
dec
cs
leave
sti
inc
add
lea
mov
clc
xchg
pushf
adc
mov
scas
mov
add
insl
jl
fdivl
ljmp
lret
movsb
jp
push
lock
pop
sub
iret
xchg
adc
add
sbb
add
pop
pop
lds
push
js
xchg
xchg
mov
add
cmp
adc
mov
add
js
add
mov
mov
jmp
mov
add
addb
je
lds
mov
xchg
add
or
pop
dec
iret
pushf
mov
sbb
shrl
add
loopne
mov
or
add
mov
push
pop
jp
add
cmpsl
fsubrl
jae
dec
in
ja
or
in
lods
fstpl
pop
xchg
jnp
bound
mov
sub
dec
mov
mov
daa
and
ffree
jbe
push
test
sbb
mov
sub
mov
pop
movsl
movzbl
add
mov
cmp
out
gs
repnz
rolb
mov
mov
rolb
mov
add
icebp
imull
mov
add
pusha
add
fcomi
add
push
in
push
dec
mov
mov
lahf
cld
pop
imul
adc
and
fstpl
push
int3
cmp
ret
mov
iret
test
stos
loope
sub
mov
cmp
cmpsb
mov
insb
dec
incl
add
mov
adc
ret
rolb
aaa
dec
aam
jae
out
xchg
add
sbb
jbe
xchg
push
mov
add
jmp
aaa
mov
xchg
cli
and
mov
mov
decl
imul
add
out
adc
mov
adc
push
add
sbb
popa
xor
mov
addb
push
dec
fldenv
add
mov
mov
dec
sub
sub
add
mov
shll
mov
push
xchg
mov
subl
mov
mov
mov
adc
sti
loopne
mov
mov
into
es
dec
and
cltd
test
add
pop
add
repnz
or
mov
bound
mov
psrlq
ficomps
pusha
add
aas
js
add
mov
daa
pop
mov
fadd
test
dec
push
add
mov
jbe
cltd
insb
int3
cmc
pop
test
adc
mov
add
or
push
add
negl
imul
mov
test
ljmp
fwait
add
mov
add
push
add
jmp
pop
inc
or
mov
jnp
rorl
mov
or
loope
test
push
mov
add
mov
cmp
ljmp
imul
loop
mov
mov
insb
fwait
loop
mov
shr
mov
inc
addb
test
repnz
add
pop
adc
mov
iret
mov
mov
mov
lcall
in
xor
mov
inc
add
add
es
mov
mov
mov
xchg
addb
fiadds
add
add
jbe
add
mov
gs
add
testl
imul
mov
ljmp
out
lret
add
mov
sub
movsl
mov
adc
mov
shll
push
add
adc
subl
mov
mov
inc
push
jno
push
arpl
mov
ljmp
mov
add
mov
xchg
movsb
mov
jne,pn
bound
mov
add
adc
add
mov
lret
push
mov
in
outsb
in
lock
jecxz
xchg
sbb
dec
inc
repz
ret
push
xlat
add
mov
jae
add
add
mov
lods
push
lahf
sub
ret
sub
mov
or
jae
scas
adc
mov
add
pusha
add
ss
mov
add
xchg
add
sbb
sub
add
sub
int3
or
jg
pop
sbb
je
inc
add
sbb
rorl
sbb
popf
repnz
call
mov
lock
in
test
mov
jnp
add
jno
mov
or
add
push
add
sub
adc
mov
popf
or
add
cmp
mov
sub
rolb
mov
mulb
test
add
addb
dec
xchg
push
cmp
add
dec
push
xchg
jmp
sub
pop
dec
in
jle
lcall
insb
pop
imul
sub
pushf
push
pop
pop
out
iret
cwtl
sub
fidivrl
fdivl
repnz
xchg
mov
mov
mov
outsb
in
add
lods
imul
leave
je
add
fcoms
mov
daa
js
add
loop
mov
jle
fwait
mov
icebp
in
enter
aad
inc
fcomp
dec
mov
jbe
loope
cmp
ret
inc
add
adc
mov
adc
jmp
movsl
inc
add
push
xchg
add
and
cmp
cli
mov
rolb
mov
add
mulb
add
pushf
push
add
cmc
ja
add
mov
cs
stc
loopne
mov
stc
push
insb
roll
mov
call
mov
pop
cli
loopne
mov
sub
scas
push
mov
mov
mov
add
xor
mov
mov
adc
inc
movsl
rolb
mov
mov
add
push
jmp
insb
jb
mov
xor
repnz
xor
mov
xchg
push
add
mov
xchg
rolb
mov
les
add
nop
add
inc
mov
push
sahf
xor
mov
mov
add
cmpsl
cwtl
inc
rolb
mov
enter
sbb
cmp
add
cwtl
hlt
imul
neg
mov
mov
mov
fs
add
and
add
lock
mov
add
push
inc
push
add
jns
xlat
nop
add
add
mov
add
add
fldl
cli
mov
loopne
mov
lcall
add
add
fsub
add
movsb
cmc
insb
and
out
xor
push
ja
add
push
sbb
in
out
fidivl
faddl
sti
in
mov
jmp
mov
dec
mov
ffreep
pop
insb
in
dec
push
jne
add
mov
int3
jo
mov
ret
sub
push
test
add
pusha
add
test
outsb
mov
add
mov
xchg
outsl
aaa
pop
push
push
addb
and
add
mov
mov
sub
dec
aaa
inc
add
inc
xor
dec
das
lahf
loope
adc
mov
or
das
cwtl
jp
fsubl
mov
dec
cmp
inc
xchg
cwtl
sbb
rolb
add
add
mov
mov
bound
mov
push
cmp
out
add
add
jmp
jecxz
lahf
push
std
cs
sub
add
rolb
mov
fwait
sbb
je
mov
jbe
fdivrs
daa
sbb
arpl
mov
xchg
jns
add
rolb
mov
push
or
sbb
add
cmc
mov
inc
movsb
scas
insl
hlt
add
mov
add
scas
hlt
jmp
mov
push
jge
mov
mov
add
add
mov
into
jge
dec
jp
jne
enter
push
jecxz
cmp
jp
jge
dec
out
cld
test
ljmp
aad
push
test
add
movsb
jne
jge
add
add
cmp
add
and
mov
gs
and
add
sub
sbb
popa
call
bound
mov
xchg
dec
outsb
bound
mov
xor
mov
add
lcall
add
scas
push
sbb
push
mov
jb
mov
lea
fsubl
popa
push
fs
sbb
pop
jecxz
mov
pop
dec
or
inc
adc
aad
lds
outsb
adc
arpl
imul
add
iret
sub
mov
cld
rolb
mov
adc
aam
add
in
inc
add
insl
jo
mov
pop
fistpll
add
imul
mov
sbb
into
ds
and
jbe
push
add
push
cmp
in
add
arpl
mov
mov
cld
mov
dec
inc
loopne
mov
imul
dec
out
sub
mov
inc
scas
jp
ret
jb
mov
cld
push
add
mov
mov
addb
aam
pop
inc
add
sbb
scas
mov
rolb
mov
add
ljmp
add
push
jecxz
int
sbb
mov
sub
add
push
add
add
movsl
cmp
mov
mov
mov
add
std
loopne
mov
sub
xor
mov
add
rcrl
push
ja
fcompl
addb
mov
adc
push
aam
cmp
sbb
orl
cmpsl
inc
and
inc
xor
mov
jne
std
cld
and
mov
test
add
lret
add
push
inc
pushf
out
push
enter
mov
int3
test
in
test
jb
mov
mov
fadd
add
es
test
dec
xor
cwtl
neg
mulb
out
and
into
lret
xor
sti
cli
mov
push
icebp
jge
test
loopne
mov
mov
leave
leave
test
pop
fcmovb
sbb
add
pushf
xchg
push
sub
add
or
push
add
pop
sti
cmp
mov
outsl
addb
push
push
mov
push
addb
dec
sub
xchg
add
dec
pop
jo
mov
dec
add
xchg
mov
jbe
dec
movsl
lods
adc
xchg
mov
pop
or
add
jbe
jl
xchg
mov
jl
in
cld
xchg
jle
pushf
xor
imul
and
mov
pushf
dec
jo
mov
cs
cmp
subl
aaa
out
add
mov
push
add
sub
cmovnp
add
mov
mov
mov
mov
sub
add
sbb
ss
inc
add
jns
xcrypt-ofb
xor
mov
andl
sbb
xlat
rolb
mov
push
add
loopne
mov
sti
xchg
push
cmpsl
ja
pop
sbb
leave
adc
mov
test
arpl
add
mov
jl
add
xor
mov
lods
jns
aam
cmp
pop
dec
ja
loop
mov
int
lods
in
stc
add
add
add
out
sub
push
add
in
mov
sbb
addr16
add
arpl
sbb
mov
ja
sub
in
jns
leave
imull
test
add
mov
cld
cmpsb
push
push
hlt
xchg
test
fwait
mov
add
pop
in
and
add
sbb
rcrl
in
ss
adc
and
mov
mov
mov
sahf
and
mov
lahf
in
flds
pop
icebp
test
imul
add
push
add
add
inc
inc
leave
sbb
push
add
fwait
inc
fs
add
cmpsl
rolb
mov
mov
sbb
and
ret
add
mov
cmpsl
jae
out
cmp
add
test
xor
mov
mov
add
add
std
and
mov
add
xor
mov
pop
sti
pop
jno
pusha
add
xchg
xor
inc
cld
ret
sub
jmp
into
inc
add
mov
push
jmp
cmp
push
call
mov
fidivrs
ja
mov
mov
test
sub
jbe
xlat
add
mov
lods
mov
mov
add
adc
add
push
adc
mov
xbegin
mov
fildl
mov
mov
sub
daa
in
push
add
arpl
mov
mov
add
ficoms
xchg
scas
mov
dec
mov
fmuls
add
aaa
xchg
in
jno
jle
fisubrs
jbe
jl
add
mov
test
add
rolb
insl
sbb
add
mov
cltd
inc
lea
adc
mov
mov
sub
jmp
test
movsb
leave
je
adc
mov
call
clc
sbb
add
or
outsl
sbb
mov
dec
and
jb
mov
add
mov
jmp
addb
inc
mov
mov
mov
mov
stc
sbb
xor
andl
sbb
xchg
scas
lods
loopne
mov
cmp
add
pop
mov
lock
push
add
lds
nop
add
insb
xchg
xlat
xchg
aaa
out
or
jns
or
xor
mov
pop
icebp
ret
jl
add
add
in
lret
pop
xchg
xor
mov
jecxz
into
push
not
push
ss
add
cli
ret
rolb
cmpsb
ret
out
mov
sub
jecxz
call
cld
int3
cmp
popf
pop
out
xor
mov
push
imul
mov
les
push
lods
aaa
add
push
xor
cmpsb
jbe
add
pusha
add
imul
sbb
jae
mov
adc
and
mov
mov
out
imul
cmp
sbb
add
push
add
mov
test
xchg
lahf
add
pusha
add
shll
adc
or
testl
inc
add
mov
add
pop
cmp
sub
insl
xchg
ss
jge
add
add
inc
pushf
jecxz
loopne
mov
push
inc
add
xor
push
jp
xor
mov
add
cmp
in
ja
mov
sub
ja
enter
xchg
add
js
leave
and
mov
adc
mov
push
std
xchg
cld
sbb
aam
fdiv
mov
aaa
lock
mov
lcall
imul
outsl
push
arpl
data16
outsb
scas
fsubr
insl
jmp
xor
ficoml
les
jmp
add
and
mov
loope
lret
sub
mov
mov
fiadds
addl
and
fistps
mov
int
insl
inc
movsl
dec
les
xchg
daa
outsb
mov
pop
repz
lods
inc
movsl
mov
adc
mov
out
data16
inc
xlat
pop
rcl
lret
add
push
add
pop
pop
xor
iret
bound
mov
push
add
jno
lret
add
mov
lods
test
add
add
