dec
std
testb
sbb
cmp
mov
out
cmc
insb
jge
sub
std
lret
mov
mov
dec
pop
mov
mov
mov
add
dec
jecxz
leave
inc
scas
and
xor
gs
push
add
movsb
cli
stos
decb
xor
add
cmp
mov
add
scas
ljmp
into
insl
scas
neg
push
dec
jbe
test
add
scas
mov
imul
add
add
scas
fstp
mov
push
mov
cltd
xchg
add
pop
jl
stc
das
into
es
ljmp
repz
rorl
xor
mov
mov
pop
test
push
dec
loope
inc
xor
idiv
int
fidivl
test
mov
add
clc
mov
fs
sbb
add
repnz
mov
sub
push
std
pop
inc
jb
mov
pop
ljmp
mov
mov
ljmp
sti
fcoml
add
or
pop
imul
sbb
js
shl
mov
lock
push
or
add
testl
repnz
jle
aad
sbb
out
imul
rolb
out
adc
mov
mov
je
mov
fnstenv
idiv
scas
sub
lods
aaa
into
iret
fbld
out
jl
bound
mov
sub
repnz
mov
dec
sub
icebp
xchg
popf
hlt
xchg
sbb
sub
mov
add
int3
neg
jl
adcl
fadds
addr16
jg
nop
add
add
mov
push
sbb
xor
mov
lock
jg
es
push
mov
mov
ja
mov
add
mov
add
sub
xchg
pop
cld
mov
rolb
mov
rcrl
cmp
dec
jg
mov
out
add
mov
negl
ja
or
mov
add
jl
add
mov
das
das
cmp
add
loop
mov
sub
mov
and
mov
and
mov
jmp
add
movsb
pop
popa
popa
cltd
jg
stos
or
sti
push
rolb
mov
add
and
mov
mov
jmp
xchg
mov
push
in
ja
add
fwait
imul
test
mov
outsl
jbe
add
add
fistl
and
mov
xchg
inc
sti
mov
xchg
push
mov
push
add
addb
shll
add
inc
cmp
inc
add
sub
mov
pop
fdivp
add
popf
pop
addb
xor
lods
adc
aad
add
les
add
rolb
sbb
mov
lret
jg
mov
sbb
test
add
mov
fldln2
cmc
push
jnp
outsl
mov
mov
addb
cltd
addb
mov
or
scas
mov
xor
mov
andl
add
scas
ss
lea
push
inc
xor
mov
push
mov
ss
int
adc
mov
jno
js
add
sbb
sbb
pop
xchg
pop
sbb
in
mov
add
fs
mov
dec
jp
add
xor
mov
aaa
dec
and
mov
add
adc
mov
fucomp
lods
or
hlt
mov
into
lds
scas
xor
push
push
movsl
add
mov
xor
add
add
mov
mov
add
pop
push
or
mov
js
push
lcall
sbb
fs
out
cmp
add
and
mov
ljmp
or
inc
inc
add
cmp
aas
das
lcall
sbb
sbbl
adc
mov
mov
sub
add
and
mov
fbld
ss
fwait
push
sub
sub
add
add
add
push
and
jp
aam
cwtl
push
testb
sbb
add
popf
mov
add
addb
adc
stos
cmp
insl
aam
cmp
jne
add
mov
lcall
add
dec
in
pop
jo
mov
mov
sub
jbe
hlt
xor
push
inc
hlt
fwait
pusha
add
mov
jae
in
lods
push
add
pushf
push
cmpsl
inc
lcall
ljmp
add
sbb
cmp
into
lcall
movsb
ljmp
pop
jp
adc
mov
out
mov
mov
movsb
movsb
test
test
mov
cli
jmp
lret
scas
roll
mov
add
rolb
jo
mov
fisttpll
jp
cmpsl
xchg
test
xlat
pop
or
sub
push
test
mov
out
ljmp
mov
outsl
arpl
add
cmp
inc
add
icebp
add
mov
dec
mov
xor
add
pop
jnp
mov
add
enter
sbb
mov
jo
mov
into
dec
xor
lret
addb
or
mov
jae
cli
xchg
jp
shl
dec
or
and
pop
out
adc
mov
sub
out
push
add
cli
pop
pop
jbe
stos
das
cmp
mov
mov
in
dec
pusha
add
nop
add
rolb
and
les
add
imul
push
insb
aam
dec
mov
outsl
ja
and
or
mov
jecxz
add
ja
jne
and
jbe
rcll
aam
loope
inc
add
mov
imul
lods
dec
jbe
leave
jmp
dec
ss
jbe
jae
aas
addb
cmp
inc
add
xor
loop
mov
je
pop
aaa
adc
fucomip
call
addr16
mov
mov
cmpsb
sub
dec
test
mov
addb
mov
fwait
ljmp
mov
jae
or
jecxz
pushf
cltd
pop
nop
add
add
fdivp
fiadds
push
pop
xchg
arpl
and
add
jg
sbb
out
repnz
mov
or
mov
test
enter
or
jns
mov
dec
jo
mov
or
mov
loope
push
shll
add
or
add
mov
popf
imul
or
imul
call
divl
cmpsb
inc
pop
mov
push
mov
lods
idivl
mov
or
inc
stos
pop
addb
mov
fmulp
xor
push
inc
cmp
inc
xchg
jnp
and
mov
mov
daa
iret
sbb
les
sub
adc
fisubrs
fildl
mov
test
scas
push
and
mov
dec
rorl
pushf
clc
inc
sarl
jle
add
and
les
iret
aas
cmpsl
mov
mov
adc
mov
xchg
sahf
pusha
add
add
pop
sub
repz
add
mov
stc
rolb
mov
cmp
pop
loopne
mov
cmp
mov
or
mov
popa
rolb
mov
lods
pushf
ja
cli
pop
loope
add
jb
mov
mov
rolb
mov
xchg
ds
daa
fcompl
inc
add
push
stos
aad
imul
mov
sbb
sub
mov
xor
mov
cmpsl
push
cmc
fisubrl
inc
aad
in
add
xchg
out
cld
sub
vpshufd
mov
xor
bound
mov
pop
xor
xor
push
mov
fstl
push
jb
mov
sbb
cmp
mov
lret
mov
mov
sbb
inc
add
test
subl
vcvttsd2si
scas
repnz
jno
mov
cmpsl
add
mov
cmp
sbb
ss
fdivl
fsubs
dec
dec
mov
add
mov
mov
xor
pop
addb
bound
mov
orl
mov
loope
es
bound
mov
dec
cltd
jb
mov
fwait
cmp
scas
rcrl
mov
mov
sbb
cwtl
pop
stos
das
stos
push
pushf
nop
add
add
mov
lock
mov
jbe
push
push
mov
into
xchg
xor
add
add
jp
adc
popf
lcall
or
mov
push
add
mov
mov
fnstcw
xor
mov
push
addb
pop
mov
add
add
mov
mov
xor
sub
andl
mov
aad
rcrl
jecxz
add
fldenv
arpl
out
mov
notb
sub
into
in
add
shl
add
pop
lcall
popf
punpckhwd
mov
add
mov
icebp
jns
ret
rolb
adc
shrl
mov
jae
cmpsl
jbe
xor
mov
sub
stc
dec
out
enter
mov
add
clc
ret
mov
inc
icebp
pushf
das
cmp
enter
addb
fistl
lods
gs
add
mov
std
adc
add
add
enter
out
shll
or
out
push
ljmp
mov
add
add
xchg
out
vcmpps
sub
mov
cwtl
mov
bound
mov
xchg
jb
mov
push
add
lcall
sub
mov
xor
mov
add
hlt
mov
fcomip
mov
sbb
mov
add
rorl
dec
fistpll
sbb
cmp
enter
icebp
fldcw
add
jg
jno
and
mov
mov
std
push
icebp
int3
movl
mov
jns
add
add
xchg
int3
out
fdivl
out
idivl
fdivp
add
inc
mov
mov
jp
mov
push
scas
pop
xor
pop
cli
sbb
sarl
incb
mov
add
xor
lcall
add
push
mov
add
fsubs
add
jns
dec
adc
pop
pusha
add
xor
mov
pop
mov
ljmp
ret
mov
add
loopne
mov
loopne
mov
jle
xchg
adc
inc
xchg
jne
and
xor
mov
rcl
add
mov
repnz
addb
mov
jp
add
mov
add
ret
in
dec
ret
rolb
mov
add
mov
stos
rolb
mov
add
roll
sti
fisttpll
les
xchg
add
or
mov
fcomip
mov
mov
das
shrl
in
cmp
jecxz
loopne
mov
cmpsl
idivb
push
mov
xchg
fs
xor
mov
add
mov
movsl
out
dec
and
xchg
add
mov
dec
pop
sbb
scas
mov
add
add
adc
mov
inc
imul
imul
xchg
jmp
cli
ret
xchg
xor
mov
pop
mov
xor
mov
dec
out
adc
jne
loop
mov
xchg
cmc
xchg
repz
push
mov
mov
mov
cli
or
loope
pusha
add
add
mov
mov
inc
mov
jge
adc
mov
repz
add
mov
add
mov
repnz
add
ljmp
push
xchg
lcall
add
mov
add
out
jno
fisubrl
xor
stos
add
mov
mov
dec
mov
sbb
loop
mov
inc
add
cltd
into
aad
xor
mov
mov
add
add
xor
mov
scas
xchg
mov
stos
jmp
ja
or
add
mov
xchg
add
nop
add
clc
add
jcxz
mov
add
mov
jbe
and
sahf
pop
sbb
sbb
or
push
out
in
xchg
add
xchg
movl
push
rolb
lods
mov
mov
sti
add
add
add
mov
add
add
add
pop
in
mov
sbb
sbb
fiaddl
jnp
push
add
mov
pushf
and
bound
mov
fisttpl
inc
add
sbb
test
cmp
xor
adc
addb
push
add
add
mov
fidivrs
adc
add
adc
mov
aas
out
cltd
mov
mov
popf
push
cmp
loopne
mov
add
cltd
sbb
push
mov
rolb
mov
mov
mov
dec
adc
loopne
add
mov
sub
push
push
push
push
push
push
call
lea
es
mov
movzbl
cmp
ss
push
push
push
call
mov
cmp
je
es
xchg
add
xchg
cs
sub
mov
push
es
call
test
jne
jmp
nop
leave
push
es
mov
test
je
bnd
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
nop
lea
lea
sub
add
mov
sub
sub
push
pop
push
je
jmp
add
add
subl
lea
jg
push
mov
ds
sbb
mov
adc
sub
loope
mov
jge
iret
inc
add
xchg
in
add
and
add
rol
add
int3
push
xor
scas
clc
scas
adc
mov
xchg
sbb
mov
jmp
es
cld
inc
add
cmp
add
mov
ret
jg
sti
xchg
es
mov
mov
mov
inc
repz
xchg
push
negb
mov
xor
add
add
and
mov
jge
add
out
pusha
add
in
dec
ja
push
add
lods
inc
add
lret
mov
mov
add
mov
enter
dec
jmp
nop
add
ds
jb
mov
jne
movsl
xchg
sub
addr16
push
mov
or
test
cwtl
mov
int3
lahf
adc
pop
jle
test
outsb
ret
and
xor
mov
inc
mov
mov
add
scas
mov
sbb
pop
jne
inc
call
cmp
clc
sbb
add
add
fsubs
out
inc
add
add
in
outsl
push
cmpsb
jl
xor
push
sub
mov
add
enter
jp
cmp
dec
out
xor
mov
mov
icebp
or
xchg
out
notb
mov
jne
add
xchg
add
mov
jne
lock
inc
add
add
pop
imull
loopne
mov
add
dec
addr16
add
push
add
xor
bound
mov
jae
ffree
xchg
add
stc
aas
pop
scas
cli
and
mov
mov
jmp
mov
and
std
jo
mov
roll
mov
mov
adc
rolb
mov
mov
or
mov
mov
jmp
pop
int3
fld
dec
out
jno
pop
pop
push
test
adc
inc
add
clc
movb
dec
xchg
inc
or
xor
ja
cmp
add
add
stos
insb
jno
xor
push
bound
mov
add
mov
into
lret
jnp
sbb
popa
mov
dec
fdivrl
ds
add
and
testl
push
mov
xchg
iret
xchg
add
mov
loop
mov
cld
cmp
add
mov
jl
inc
add
das
cltd
out
gs
popa
sti
movb
pop
cmpsl
andl
mov
cmp
push
adc
sbb
neg
pushf
and
mov
or
add
mov
add
push
ds
sbb
mov
inc
lods
inc
sub
mov
mov
push
add
insl
data16
idiv
stos
adc
add
add
fdiv
adc
outsb
inc
test
shll
lret
dec
mov
aaa
addb
jp
out
xchg
rolb
mov
add
aas
repz
mov
pmaxub
mov
out
inc
add
mov
adc
mov
cmp
dec
rolb
push
jne
lds
pop
and
pushf
fs
pushl
rolb
mov
mov
add
jo
mov
sub
add
ja
mov
mov
add
iret
cmpsl
idiv
or
arpl
xchg
jae
xchg
pop
imul
xor
add
mov
or
mov
xchg
and
mov
test
mov
sub
out
cmc
cmpsb
ret
lods
aaa
int
pop
sbb
pusha
add
xchg
add
add
dec
hlt
sbb
inc
fiaddl
add
jbe
mov
decl
push
mov
xor
add
push
xchg
dec
adc
mov
pushf
lea
ror
rolb
mov
and
mov
mov
xorl
mov
mov
mov
enter
jmp
add
sbb
add
xchg
dec
xchg
add
test
or
cmpsb
sub
fisttps
aad
aas
push
add
add
pop
divl
nop
add
fistpl
inc
sbb
adc
mov
popa
adc
or
dec
xor
and
std
fs
mov
inc
mov
push
scas
in
inc
bound
mov
add
cmpsl
pop
in
rolb
les
js
xlat
or
mov
mov
mov
popa
out
cmpsl
sbb
stos
mov
and
mov
add
mov
sti
roll
sbb
mov
add
add
cmp
push
or
inc
mov
outsl
into
cmpsb
sub
push
xchg
cmp
cmp
iret
out
pop
xor
idiv
leave
dec
pop
addb
cs
fmull
push
pushl
mov
int3
enter
mov
add
add
mov
pop
out
mov
add
ss
in
and
in
pop
into
bound
mov
mov
mov
add
mov
mull
add
dec
mov
imul
in
push
ret
dec
movsl
fsub
sbb
pop
dec
pop
rolb
mov
add
outsl
mov
mov
rolb
pop
into
push
and
add
mov
adc
mov
arpl
mov
cs
mov
add
pop
jno
add
mov
and
int3
mov
mov
ret
cmp
add
nop
add
sub
les
add
xlat
add
mov
xchg
or
cmc
dec
fcompl
xchg
mov
in
mov
push
xor
mov
push
pop
jae
jl
push
fcmovbe
sbb
mov
sub
xchg
inc
cmp
dec
ret
xchg
pop
arpl
repz
iret
dec
or
insl
out
movsl
or
loop
mov
mov
jle
push
or
pop
dec
sti
sub
jg
jle
dec
scas
inc
aad
sub
aaa
inc
aad
loop
mov
push
es
pop
pop
push
nop
add
iret
imul
sbb
test
pop
mov
std
outsb
push
lcall
bound
mov
jbe
add
mov
arpl
mov
cmp
sub
pop
inc
stc
push
pop
stc
sub
sub
sbb
add
gs
aad
xchg
pop
sub
jns
rorl
pop
stos
fdivl
add
shr
sbb
aad
lds
add
iret
pop
push
add
push
xor
xor
sahf
mov
sbb
add
and
mov
mov
orl
jns
mov
sbb
mov
cmp
push
mov
mov
je
sbb
add
addb
in
add
adc
out
jnp
jmp
out
data16
gs
nop
add
addb
cs
sbb
je
flds
addr16
test
add
add
add
mov
xor
data16
sti
fisubs
mov
add
add
cmp
mov
jg
scas
rolb
push
ret
adc
mov
out
stc
push
pop
inc
outsb
mov
add
sbbl
mov
movsl
and
mov
pop
gs
leave
insl
sub
add
add
pop
in
popa
dec
std
cmc
mov
mov
movsl
aam
mov
rolb
adc
mov
outsb
sarl
add
add
or
add
int
pop
out
and
mov
and
ret
pop
jb
mov
push
add
xor
mov
movsl
rcrl
shrl
add
ficoml
jmp
dec
loope
mov
nop
add
xchg
add
mov
xlat
xchg
loopne
mov
jb
mov
movsl
mov
stos
cmp
ljmp
jle
ret
add
mov
lret
add
mov
push
push
add
push
add
mov
add
add
mov
and
add
mov
mov
repz
mov
andps
addr16
rolb
leave
movsb
mov
ljmp
mov
add
push
in
fstpl
repz
sub
rcpps
pop
push
hlt
fisubs
dec
inc
xchg
lret
and
mov
inc
add
lea
nop
add
test
es
cmp
cld
andl
outsb
inc
imulb
jae
add
add
push
pop
jg
inc
add
mov
mov
out
sbb
jb
mov
cmp
cmp
outsl
mov
nop
add
das
das
popa
mov
addr16
and
mov
mov
mov
mov
popa
or
mov
add
adc
pop
negb
jecxz
or
jns
xor
add
cwtl
mov
mov
push
xchg
inc
xlat
jbe
ds
inc
add
rolb
mov
out
iret
rolb
rolb
xor
mov
lahf
addb
jp
enter
cltd
pushf
sbb
push
mov
dec
pop
fwait
push
mov
xchg
ds
and
mov
mov
or
inc
mov
cmp
mov
adc
pop
mov
hlt
movsb
mov
mov
lret
cmp
add
mov
add
xchg
dec
pusha
add
out
in
mov
jb
mov
adc
mov
push
pushf
jo
mov
mov
popa
jp
int3
xlat
ret
fcmove
xchg
or
mov
inc
inc
mov
ds
jecxz
add
mov
pusha
add
jbe
add
add
popa
ds
les
add
scas
push
pop
cwtl
mov
xchg
mov
mov
inc
fstpt
cmp
loope
add
fs
aas
ds
dec
fisubrl
adc
stc
mov
push
and
stos
mov
mov
add
fcoml
lds
and
inc
add
cmpsb
in
add
mov
ljmp
sub
outsb
addb
and
mov
add
sub
adc
test
scas
adc
fs
gs
add
es
jae
loope
out
xchg
repnz
inc
pop
cltd
dec
rolb
test
mov
cmp
pop
inc
dec
stc
adc
pop
mov
cli
fcoms
mov
jmp
xchg
out
loop
mov
es
clc
imul
sbb
sub
push
jbe
sbb
mov
xchg
add
ljmp
pop
ds
mov
or
add
mov
filds
add
push
add
in
fstl
arpl
in
pop
sbb
lods
leave
lahf
pop
dec
jecxz
stos
sub
xor
add
fists
mov
leave
lahf
int
fmull
xchg
in
jne
outsl
aam
in
dec
pop
push
fldt
mov
lock
cmpsb
aaa
fistps
mov
mov
add
push
xlat
jne
dec
stos
dec
fcomi
loop
mov
jnp
xchg
push
add
lods
dec
inc
movb
xchg
cli
jg
add
bound
mov
inc
adc
dec
cmp
lock
inc
push
shl
mov
leave
adc
mov
add
push
outsb
push
push
push
xlat
icebp
mov
faddl
add
fwait
adc
mov
mov
lds
jno
lods
rolb
mov
in
imul
int
sahf
mov
mov
addr16
movsb
add
mov
loope
dec
int
add
mov
add
test
iret
add
mov
add
ds
movsl
sbb
cmp
stc
cmp
inc
imul
ret
mov
inc
insb
loopne
mov
add
xchg
xchg
out
xor
mov
add
mov
or
xor
pop
fildll
stc
add
fsts
mov
dec
repnz
mov
jmp
cld
and
rorl
aas
add
insb
xchg
inc
xchg
pop
sub
inc
mov
int
mov
pushf
arpl
mov
pop
adc
ret
xchg
sub
pop
and
and
mov
mov
mov
jmp
mov
add
add
dec
shll
mov
je
adc
add
ret
mov
jne
add
out
jae
pop
scas
adc
cmp
loope
xor
mov
mov
cs
repnz
add
daa
subl
loop
mov
lcall
arpl
push
out
stos
pop
inc
mov
add
add
mov
push
popa
mov
mov
mov
sub
and
mov
imulb
aad
add
aas
lcall
push
jae
mov
add
mov
adc
fisubs
repnz
loope
je
jne
addb
xchg
add
push
mulb
add
push
adc
mov
push
mov
sbb
addr16
into
cltd
faddl
inc
xor
fnstcw
jnp
add
add
add
adc
loopne
mov
dec
add
mov
out
and
add
pop
es
add
mov
test
cmp
lret
push
ret
xlat
out
movsl
adc
push
sbb
cmp
dec
mov
add
cmpl
push
add
daa
jmp
jmp
jae
sub
inc
idivl
sbb
insl
lock
mov
pop
scas
ds
mov
add
leave
xor
mov
loop
mov
add
xor
lret
dec
hlt
cwtl
adc
mov
mov
cmp
mov
in
rcl
jle
mov
cmpsl
sub
mov
jmp
or
mov
add
push
seto
mov
adc
mov
cmp
add
add
dec
flds
mov
mov
aad
add
out
test
add
mov
adc
mov
xabort
les
cmp
or
xor
mov
and
add
sbb
jo
mov
std
aam
xchg
adc
mov
add
inc
or
adc
sbb
mov
xor
inc
push
jno
jns
sub
nop
add
in
iret
aas
xchg
bound
mov
xor
mov
mov
hlt
jecxz
mov
xor
stos
aaa
push
sub
ds
pushl
int
jae
xchg
and
mov
lret
mov
push
lods
mov
dec
dec
xor
mov
stos
mov
inc
jge
pop
and
mov
add
mov
mov
inc
add
pop
xchg
mov
inc
lcall
or
add
pop
and
jne
dec
mov
std
or
mov
pop
into
sbb
and
pop
push
add
mov
and
movsl
fidivs
mov
mov
and
test
dec
jl
lcall
cmc
fs
push
cmpsb
stc
pop
lcall
dec
rolb
mov
add
mov
in
jo
mov
loop
mov
das
pushf
xchg
cmp
cmp
mov
sbb
ja
les
shrl
icebp
sbbl
mov
mov
out
xchg
jnp
out
xor
mov
aaa
aad
and
mov
ret
mov
and
mov
add
add
std
outsb
push
les
mov
sub
mov
xor
mov
mov
int
adc
test
popf
and
add
mov
push
dec
jmp
add
roll
add
add
aas
outsb
aam
ret
bound
mov
add
mov
dec
rolb
mov
push
jb
mov
dec
mov
push
ss
mov
cltd
xchg
leave
cld
loope
mov
in
pusha
add
dec
out
xchg
mov
cltd
sub
xlat
sbb
mov
jp
pushf
in
fdivrp
jl
xor
mov
jle
or
je
add
adc
mov
movsb
addr16
sahf
sbb
xor
mov
les
in
or
int
jb
mov
cmpsb
xchg
inc
mov
pop
out
xchg
add
sbb
add
add
cmp
stos
out
inc
add
sub
adc
jle
rolb
mov
cli
scas
cmp
xchg
imul
ret
xor
jne
lcall
stos
cmova
sub
xchg
add
mov
mov
outsl
pop
lret
into
jno
mov
in
xor
push
xchg
jno
lret
pop
xchg
add
xor
mov
add
mov
add
outsb
movsl
cmp
outsb
inc
mov
mov
mov
mov
add
ret
pop
and
mov
add
add
sub
mov
scas
test
add
addb
mov
sub
jo
mov
imul
xor
mov
rolb
mov
jno
add
pop
imul
jo
mov
movsl
adc
mov
inc
xor
mov
xchg
lahf
jns
push
icebp
arpl
push
lods
push
add
pop
sub
xchg
nopl
imul
add
adc
xor
mov
xchg
add
add
mov
out
out
mov
inc
fistl
out
sti
add
mov
mov
aam
and
lock
into
loopne
mov
mov
mov
pop
adc
mov
xor
mov
and
mov
aaa
and
jae
and
addr16
push
ds
in
shll
nop
add
xor
mov
das
cmpsb
add
call
mov
push
add
bound
mov
addr16
add
add
ret
push
rolb
mov
bound
mov
in
je
add
mov
mov
adc
mov
enter
xor
add
add
mov
mov
mull
mov
push
add
adc
push
into
and
mov
xchg
and
mov
arpl
mov
mov
lock
add
addb
cmpsl
scas
pop
out
out
sub
das
rcll
xor
jo
mov
jne
mov
mov
push
aad
iret
rolb
push
loope
call
addb
jae
push
aad
adc
fcomps
xchg
clc
pop
aam
cmovle
add
mov
popf
scas
pop
stos
into
push
sbb
mov
or
mov
data16
jg
fwait
mov
mov
gs
add
mov
arpl
xchg
push
jns
insb
rolb
mov
add
mov
lods
pop
push
repz
andl
test
mov
out
testb
leave
jae
dec
jecxz
inc
ljmp
mov
loopne
mov
js
pop
sub
scas
pop
add
jp
lods
mov
mov
xor
mov
repnz
in
push
das
les
movsb
sbb
mov
test
xchg
adc
mov
pushf
loop
mov
sbb
test
cld
pop
fldcw
add
addb
xchg
jb
mov
inc
mov
ds
fiadds
mov
add
and
mov
rcll
add
stos
jmp
jecxz
xor
add
in
or
pop
cmp
movl
add
and
add
inc
nop
add
jge
ficompl
leave
mov
mov
icebp
pop
das
mov
mov
addb
fiadds
cwtl
into
lret
ds
adc
and
mov
add
nop
add
push
pop
ds
addb
cmpsl
or
mov
add
aas
jo
mov
add
xor
mov
mov
add
aam
adc
mov
in
cmp
lods
dec
mov
mov
pop
mov
lods
and
jno
sub
xchg
sub
stc
addb
mov
push
cmp
sbb
rep
add
jle
sbb
addr16
aam
add
rcll
jmp
lds
jmp
out
cmp
mov
mov
add
inc
loope
ret
or
add
enter
call
sub
fisttpll
movb
add
addb
pop
rolb
jns
rolb
movsl
cmp
jl
mov
mov
dec
jp
decl
and
stos
test
add
mov
or
pop
repz
mov
adc
mov
or
push
jp
stos
mov
mov
push
push
xchg
add
scas
pop
addr16
mov
or
sbb
mov
mov
jp
loope,pt
push
xchg
adc
notb
test
imul
mov
mov
or
movsl
sbb
add
jnp
int
jb
mov
mov
push
std
dec
push
dec
out
inc
xchg
add
addr16
add
pushl
pop
addr16
cmp
imul
add
add
or
insb
lahf
rcrl
mov
clc
add
add
push
add
cmp
or
gs
add
jno
sbbl
add
add
push
or
add
pop
mov
xchg
pop
enter
mov
or
pop
xchg
mov
add
mov
mov
add
stos
mov
fadd
js
mov
mov
jmp
adc
inc
xor
inc
sub
mov
push
outsl
mov
dec
push
enter
icebp
fisttpl
out
stos
jno
sti
add
leave
sub
adc
pushf
sub
add
inc
testl
sti
push
inc
sub
sub
pop
addl
cmpsl
icebp
out
sldt
mov
add
add
imul
das
pusha
add
pop
push
call
andl
mov
push
adc
inc
add
mov
test
push
and
mov
cmp
add
mov
push
rolb
sbb
mov
clc
jnp
fsubs
fsubrs
scas
repz
add
jle
fsubp
mov
add
push
mov
mov
call
push
sbb
mov
xchg
gs
inc
or
dec
outsb
push
popa
ret
jecxz
pop
inc
mov
add
dec
push
jb
mov
add
jnp
mov
loopne
mov
fs
shll
sbb
mov
mov
mov
push
mov
mov
or
cltd
rolb
mov
xlat
or
lds
fdivl
mov
add
mov
dec
and
cmp
rolb
mov
popf
mov
addb
jecxz
iret
jl
out
xchg
mov
jno
mov
add
or
repz
ficoml
adc
fdivs
mov
int
add
lret
xor
cli
pop
adc
or
xchg
mov
lret
js
xor
lods
sub
pop
cmp
push
push
icebp
aad
xor
add
cmpsb
addb
ret
outsl
out
mov
lcall
mov
and
or
pop
sub
xorl
jb
mov
dec
mov
sbb
das
sbb
add
ljmp
or
addr16
inc
int3
fwait
loop
mov
inc
add
sub
leave
mov
mov
ret
call
bound
mov
stc
mov
xlat
cmpsb
or
mov
xor
mov
add
cli
push
scas
mov
mov
and
add
mov
in
pop
inc
addb
mov
mov
cmpsb
and
je
ja
xor
fisubrs
or
jb
mov
jmp
push
cmp
push
add
mov
adc
pusha
add
orl
mov
daa
fistl
fnstcw
aad
ret
mov
scas
xor
dec
cli
rolb
mov
mov
je
push
push
dec
addb
in
push
out
lret
inc
dec
fcomps
dec
pop
xchg
xchg
mov
jle
add
add
add
xor
mov
ljmp
stc
call
and
cmpsl
push
sub
pop
loop
mov
sub
pop
mov
mov
aad
push
add
mov
popf
push
scas
push
jb
mov
cmc
xchg
push
add
test
push
add
cmp
mov
negl
add
mov
int
add
ficompl
hlt
cmpsb
in
cmp
mov
cmc
xor
enter
cs
addr16
pop
rolb
mov
add
mov
mov
sub
and
bound
mov
jo
mov
mov
or
stc
xlat
popa
das
movsl
scas
aam
push
rolb
sbb
sbb
rolb
jnp
add
xchg
sub
add
push
adc
sahf
or
add
jge
mov
inc
cmpsl
popf
or
mov
aas
or
js
jl
sub
add
in
lcall
mov
pushf
mul
add
mov
cwtl
out
out
into
xchg
incl
mov
std
sub
dec
rolb
mov
jae
mov
popf
movsl
sbb
outsl
nop
add
repnz
iret
ss
adc
mov
mov
int
lcall
ret
stos
add
mov
cmp
in
xchg
lods
or
cmpsl
jo
mov
out
inc
add
out
imul
cmp
mov
arpl
push
loope
sbb
mov
in
mov
mov
add
mov
or
inc
lods
dec
cmp
jle
fsubrp
adc
xchg
jno
mov
push
das
add
mov
adc
mov
cmpsb
arpl
insl
icebp
pushf
es
cld
shll
add
stc
lds
cmp
or
mov
mov
cmp
add
mov
fiadds
push
jno
pop
xchg
addb
fidivrl
int
arpl
cmp
es
test
inc
into
loope
sbb
into
out
das
add
pushf
or
mov
xor
lahf
mov
pop
inc
add
add
mov
test
fdivr
bound
mov
mov
shll
mov
data16
jbe
into
xchg
out
jg
out
data16
pop
xchg
xchg
add
add
mov
adcl
notl
lahf
push
jmp
sbb
add
sbb
movsb
test
ret
adc
aas
mov
mov
mov
inc
dec
movsb
ror
cmp
mov
mov
sbb
jne
xchg
out
inc
add
adc
mov
dec
push
lods
mov
aam
mov
add
sub
outsb
push
sub
add
cmpsb
push
push
pop
clc
lods
mov
push
push
mov
or
in
icebp
jge
cmp
cmp
adc
mov
mov
scas
shr
dec
xchg
daa
mov
clc
out
into
lock
cs
imul
loope
mov
sbb
add
movsb
jns
dec
pop
jae
aaa
sbb
mov
add
mov
clc
fistpl
and
xor
mov
add
mov
outsb
ss
loop
mov
mov
lods
outsb
mulb
jno
jg
or
xor
mov
dec
pop
dec
sub
inc
adc
scas
std
stc
scas
cwtl
mov
xlat
push
and
rolb
mov
push
mov
pop
sbb
decb
pusha
add
scas
or
xchg
pop
fiadds
push
push
add
inc
and
add
add
addb
add
test
xchg
lds
cmpsb
repz
cmp
cmp
and
out
inc
imul
mov
es
fs
jmp
add
cmpsb
jle
add
daa
lret
inc
or
and
mov
add
pusha
add
xchg
stc
push
pop
cld
out
clc
jge
inc
fnstsw
gs
sbb
jmp
test
sub
pushf
add
xchg
sub
imul
add
push
add
mov
fwait
or
pop
inc
out
test
add
je
in
rolb
mov
sahf
xchg
repz
dec
test
fs
and
or
fidivrl
cltd
repz
add
push
add
or
imul
add
add
aas
stc
cmc
add
mov
mov
jecxz
aad
cmp
decl
movsl
cwtl
sbb
cmpsl
xchg
xchg
xor
xchg
cmpsl
xor
add
mov
das
std
sbb
mov
cmpsb
or
add
lcall
shll
add
pusha
add
subl
pop
cmp
mov
adc
adc
mov
pop
push
dec
cmp
addr16
pop
rolb
mov
std
adc
add
inc
inc
jnp
inc
mov
mov
dec
imul
lds
push
bound
mov
mov
mov
or
or
push
lods
pop
lcall
push
push
or
xor
mov
je
cli
call
mov
inc
sub
pop
push
add
add
mov
js
and
mov
jl
mov
stos
mov
sbb
add
add
mov
dec
mov
daa
pop
lods
xor
mov
lcall
add
mov
add
mov
mov
mov
jbe
add
rolb
mov
pop
jp
insb
roll
add
mov
xchg
outsb
push
add
mov
aas
in
adcl
mov
add
cs
clc
call
add
xchg
std
xor
mov
add
rolb
mov
test
pop
mov
add
mov
scas
xor
add
mov
jae
in
xor
mov
les
add
pop
pop
ja
xor
xchg
lcall
lcall
add
out
pop
sub
push
add
xchg
ja
mov
adc
fwait
push
ret
lods
mov
mov
add
inc
and
mov
add
add
ja
popa
in
inc
cld
imul
xchg
add
mov
add
popf
mov
je
xlat
test
stos
ret
ret
movsb
ret
dec
mov
sub
inc
add
jae
out
push
daa
inc
add
mov
add
addl
outsl
mov
inc
ja
add
xor
mov
popl
in
mov
jnp
xchg
add
mov
cmp
jle
and
mov
test
movsb
ret
fwait
mov
mov
xchg
add
popa
cmp
fs
add
push
addb
jg
xor
or
pushl
mov
dec
in
frstor
jne
jae
dec
push
rcl
add
test
add
mov
jne
xchg
add
or
out
imul
sub
mov
dec
dec
test
add
sub
rolb
mov
mov
int
les
pop
jle
mov
mov
fbstp
xchg
add
cmc
lods
inc
lods
out
mov
mov
lods
and
mov
and
jne
add
sub
imul
lahf
outsb
dec
aad
pusha
add
add
mov
fistl
mov
pop
fcompl
and
gs
mov
mov
and
mov
sub
or
lcall
je
popa
jno
and
add
movsl
adc
add
fadds
je
jno
cs
add
mov
add
sbb
addb
and
mov
rolb
mov
orl
out
push
add
pushf
cmp
addr16
xor
filds
stos
mov
sti
jg
ljmp
xchg
cmc
or
push
add
mov
jp
inc
arpl
push
add
mov
push
or
push
add
dec
sbb
sub
mov
frstor
mov
dec
ret
ret
icebp
dec
mov
out
add
fisubrl
das
inc
add
rolb
movsl
mov
xor
mov
inc
imul
enter
jmp
roll
push
add
add
addb
addb
addr16
xchg
jb
mov
hlt
fnstenv
iret
cltd
in
add
lock
cmp
jmp
lods
xor
mov
add
cmp
lods
or
cmp
jae
add
in
mov
std
outsl
jmp
or
shll
and
mov
addb
movsl
mov
and
loopne
mov
add
aam
xchg
dec
inc
shll
inc
add
jge
cmp
add
mov
daa
or
dec
xchg
add
or
ljmp
imul
xor
addb
cld
int
mov
popa
popw
xor
mov
popa
das
dec
push
add
mov
fdivs
lahf
cmp
xchg
pop
inc
add
add
cmp
mov
cld
sbb
movsb
scas
jnp
mov
ds
add
aam
jns
sbb
and
and
mov
iret
jl
jp
add
push
outsb
scas
vphaddubw
mov
mov
inc
stc
je
dec
xlat
mov
add
add
jbe
inc
jle
sub
mov
and
mov
stc
mov
shl
adc
shll
fisttps
pop
pop
out
sub
les
mov
fs
adc
mov
xor
das
push
push
into
scas
lods
and
mov
mov
out
mov
jp
test
insb
cwtl
dec
rorl
test
push
rolb
mov
xor
add
pusha
add
push
mov
je
add
or
and
xchg
add
adc
mov
mov
add
add
dec
xor
mov
cmpsb
mov
dec
es
dec
mov
stos
scas
cltd
pop
pop
lock
push
out
std
loop
mov
pop
adc
mov
mov
xor
mov
add
mov
xchg
daa
mov
sbb
js
mov
adc
add
sub
loop
mov
sbb
dec
or
cli
mov
shll
mov
add
mov
adc
mov
add
pop
ljmp
inc
add
mov
mov
sub
add
fstps
fisubl
mov
mov
xor
mov
xor
fidivrs
mov
jp
in
xchg
add
xor
mov
les
scas
mov
xor
in
push
add
add
rolb
shr
in
add
mov
mov
hlt
out
repz
inc
adc
mov
xchg
adc
mov
aam
jp
loop
mov
add
xchg
add
shl
add
mov
mov
std
inc
add
movsl
lea
ljmp
lea
jg
and
mov
daa
fildl
hlt
scas
out
xor
mov
xchg
or
cmp
xor
mov
dec
sbb
outsl
fst
add
sbb
fistps
arpl
add
cmp
xchg
add
loopne
mov
nop
add
mov
or
add
add
push
jp
mov
inc
rolb
fstps
movsb
rolb
mov
in
xchg
ret
rolb
pop
mov
xchg
add
inc
fisttpll
dec
aam
lea
cltd
mov
dec
mov
add
mov
pop
mov
fmull
sbb
aam
cmpsl
fsubl
cmp
bound
mov
sub
lds
fidivrl
mov
movsb
xchg
daa
mov
fbld
add
sbb
inc
xchg
adc
lods
nop
add
mov
pop
or
add
ret
xor
mov
pop
dec
mov
mov
xor
add
outsl
mov
leave
mov
or
movsb
cltd
push
xor
add
movsl
hlt
mul
pop
outsb
js
jecxz
das
outsb
push
mov
mov
xchg
inc
mov
and
imul
pop
pop
call
add
je
add
add
jmp
testl
mov
addb
sub
addb
jge
sub
xor
dec
and
js,pn
mov
std
jl
pop
rolb
mov
sub
pop
or
mov
mov
dec
push
add
into
jne
in
lea
mov
add
sub
mov
cs
lods
shrl
xchg
xchg
pop
test
dec
imul
rolb
mov
andl
sub
repnz
test
mov
aam
fldz
mov
out
std
sub
add
arpl
rolb
mov
cmpl
rolb
jo
mov
pop
xor
mov
add
xor
mov
xchg
stc
lock
adc
mov
add
ja
js
push
fiaddl
mov
mov
push
add
out
fistpll
cmp
fildl
mov
inc
mov
test
dec
pop
push
mov
mov
jbe
jge
fchs
add
testl
jns
ret
push
jo
mov
lret
mov
sub
sub
into
mov
cwtl
cmp
push
or
pop
outsb
sub
ret
imul
out
and
loope
and
jg
dec
aaa
xor
push
add
add
mov
scas
rolb
movsl
lcall
push
xchg
push
ret
loope
pop
hlt
outsl
dec
stos
add
cmp
mov
leave
mov
jns
mov
adc
cmp
or
add
std
xchg
lcall
mov
sbb
jmp
xlat
scas
mov
scas
mov
movsl
cmpsb
inc
dec
xchg
incl
repnz
xchg
lret
mov
stc
sbb
js
xchg
jp
stc
movsl
lahf
xor
add
test
xchg
push
or
mov
push
es
not
add
mov
jne
inc
fsubrl
fistps
sub
dec
jae
add
or
pop
push
pop
mov
sbb
pushf
sub
sbb
outsl
and
sbb
add
rolb
pop
and
rolb
js
sahf
mov
sbb
lahf
clc
push
lea
mov
in
pop
mov
sub
insl
inc
add
xchg
jno
mov
add
loop
mov
scas
rolb
mov
sub
xchg
in
imul
dec
lret
mov
sbb
clc
clc
pop
mov
mov
mov
pop
push
das
imul
rolb
mov
lret
mov
jp
add
fsubrl
add
ss
pop
iret
xor
loop
mov
xor
dec
xor
add
jo
mov
int
sti
call
add
in
pop
js
add
das
cmc
scas
ljmp
dec
bt
inc
mov
mov
lods
xor
or
outsb
xor
test
jg
push
cmpsb
ja
dec
popa
jne
adc
jp
add
lcall
pop
test
in
sub
int
leave
cmp
inc
push
sahf
jle
jg
xchg
arpl
push
add
mov
jl
adc
add
pushf
enter
or
mov
add
jne
or
in
dec
ret
cmp
push
inc
xor
mov
mov
mov
and
into
dec
xor
pop
xchg
mov
and
mov
xor
iret
xchg
add
in
add
and
out
cmpsb
lea
loop
mov
sahf
mov
lret
add
mov
xchg
mov
add
xor
pop
sbb
mov
inc
repnz
add
scas
mov
mov
add
cmc
mov
add
cmpsl
mov
fdivrl
leave
sub
and
mov
mov
daa
cli
aaa
lds
xchg
ja
jo
mov
jp
add
adc
and
mov
mov
js
pusha
add
aas
out
in
or
pusha
add
stos
orl
lahf
gs
inc
add
add
xor
push
loopne
mov
xor
add
mov
dec
fisttpl
shll
mov
fadd
scas
iret
add
mov
hlt
cmp
inc
inc
add
mov
mov
mov
std
in
lea
sbb
push
add
push
test
mov
mov
add
mov
push
xor
mov
xchg
addb
cmp
add
add
mov
mov
mov
cmpsb
movsb
jmp
push
addb
in
mov
sti
cmp
mov
add
into
and
mov
fmuls
jp
sub
mov
mov
mov
loope
jp
jl
add
fdivs
imul
jnp
jb
mov
mov
add
call
add
enter
mov
jb
mov
jg
scas
push
lds
add
mov
getsec
inc
xor
mov
mov
mov
add
outsb
cld
mov
mov
dec
jb
mov
iret
repnz
xor
adc
mov
xchg
fs
arpl
cmpsb
les
repnz
sahf
adc
filds
jmp
cmp
test
imul
add
loop
mov
mov
add
mov
popf
hlt
mov
push
stos
adc
mov
push
outsl
addb
lret
and
mov
mov
loopne
mov
xor
add
in
adc
ja
xchg
xchg
mov
mov
and
dec
movsl
xlat
pop
les
or
mov
jbe
add
mov
mov
push
xor
sub
cmp
jecxz
jo
mov
cmp
dec
cmc
std
sahf
sub
add
cmp
add
xchg
adc
mov
aaa
dec
mov
add
rolb
mov
nop
add
pop
mov
dec
ljmp
mov
push
fs
jbe
adc
mov
stos
and
add
mov
and
mov
leave
js
rorl
fsubrl
cltd
xchg
bound
mov
cmp
popf
gs
movsb
or
in
mov
add
je
add
mov
and
push
and
mov
dec
sub
add
std
aas
jb
mov
mov
cmp
xchg
inc
sbb
clc
jbe
and
mov
mov
mov
sub
icebp
sahf
out
cli
cmp
and
mov
sbb
mov
dec
cmpsl
loop
mov
jle
add
ds
cmp
inc
pop
outsl
sub
xchg
cmp
je
sub
test
mov
xor
jmp
mov
jmp
jb
mov
add
add
jb
mov
adc
xlat
repz
jmp
cmp
push
cmpsl
fmull
pop
in
hlt
pop
mov
mov
push
fs
add
inc
jae
xchg
dec
mov
dec
clc
xchg
fdiv
stos
roll
mov
add
gs
add
sahf
sub
mov
fldenv
add
add
sahf
ds
mov
rolb
mov
jle
sbb
add
mov
cmp
add
add
mov
pushf
cmpsl
jmp
pop
cmc
jg
test
pop
sub
push
add
add
push
xor
mov
sub
addr16
mov
insb
stc
push
ret
repnz
js
pop
lret
add
pusha
add
jb
mov
loop
mov
or
mov
mov
adc
sub
inc
ret
les
ss
out
and
mov
adc
mov
hlt
dec
jb
mov
or
mov
test
ja
xchg
es
mov
add
pop
in
imull
lock
test
aam
jo
mov
jle
cld
jp
lock
movl
mov
out
rcrl
js
lahf
rolb
inc
push
ret
xchg
iret
icebp
ret
inc
mov
sbb
mov
mov
in
add
mov
mov
jb
mov
sbb
or
out
mov
mov
pop
mov
add
cmp
pop
xchg
pop
lods
cmpsb
sub
xchg
cli
fidivrl
add
ss
jno
jmp
inc
inc
repnz
mov
rolb
mov
es
cmpsb
sub
inc
add
add
sbb
leave
push
sub
push
push
cmp
jp
movsb
lret
fwait
push
add
in
rorl
data16
mov
add
stos
cld
rolb
mov
sbb
test
fwait
outsl
rolb
push
push
insl
xchg
sbb
lret
pop
xor
mov
add
xchg
add
fistps
jne
aad
add
decl
mov
and
mov
cmp
add
repnz
jb
mov
or
jnp
adc
push
imul
insb
and
mov
jns
arpl
pushf
add
cmp
mov
add
leave
mov
loopne
mov
das
push
aam
mov
pop
out
mov
pop
inc
add
mov
repz
lods
notl
data16
mov
mov
push
nop
add
pop
daa
xchg
cmp
mov
add
pop
xor
mov
push
mov
sub
das
out
out
inc
pusha
add
mov
in
adc
mov
push
mov
adc
mov
add
fnstcw
cltd
mov
data16
mov
mov
and
xchg
enter
add
mov
je
cmp
mov
xor
mov
add
push
add
sbb
fnstsw
and
rolb
mov
dec
js
repz
std
mov
xchg
or
add
or
lea
bound
mov
adc
add
pop
out
push
es
aad
mov
mov
add
push
add
fwait
push
insb
adc
mov
xchg
add
jnp
add
sbb
jl
cmp
sbb
cmp
cmp
add
inc
add
orl
add
add
push
mov
mov
sub
mov
fsub
addb
sub
add
mov
lods
mov
cmpsl
sub
adc
mov
ljmp
xchg
sub
add
xchg
addb
pop
outsb
cmp
add
and
mov
addb
or
push
scas
ja
mov
lret
inc
xor
add
cmp
xor
mov
mov
mov
bound
mov
add
ds
mov
enter
add
inc
add
mov
mov
add
sbb
leave
roll
fmull
lock
push
add
jno
mov
or
jbe
lds
xor
add
mov
push
and
mov
dec
sarl
cmp
dec
sbb
sub
insb
adc
mov
push
rolb
mov
add
jg
or
mov
mov
cmp
add
movsl
jbe
xchg
and
add
pop
pop
fs
cld
jg
jle
xor
mov
adc
mov
add
fldenv
das
icebp
mov
mov
lret
cltd
mov
add
idivb
mov
ret
test
push
insb
aas
sarl
mov
lea
es
pop
ret
mov
mov
movsl
scas
push
ds
add
dec
repnz
add
xchg
ljmp
aaa
cltd
and
call
test
testl
fstl
add
pop
or
xlat
pop
inc
add
mov
mov
cmpsl
out
adc
push
cmp
enter
sarl
dec
rolb
mov
xor
mov
arpl
mov
test
dec
mov
push
sbb
sub
mov
add
inc
xchg
dec
hlt
mov
pop
imul
outsl
mov
bound
mov
icebp
xor
gs
mov
in
pop
repz
lea
mov
jne
add
mov
mov
mov
adc
lret
push
cmc
push
add
lret
add
mov
mov
mov
add
test
add
or
enter
adc
rcr
pop
in
inc
add
sar
push
xor
mov
add
add
mov
popa
mov
loope
jbe
xlat
mov
gs
add
xor
mov
std
cltd
stos
adc
push
add
dec
out
int
pop
pop
gs
cmpsb
inc
dec
lods
fcmovnu
mov
std
lret
lret
add
setns
add
fucomip
int
lahf
and
mov
pop
ror
pop
mov
or
sahf
stos
add
xchg
xchg
insl
mov
pop
jp
daa
out
out
add
mov
xchg
lea
xor
not
dec
outsb
fisubs
into
test
inc
jge
rorl
mov
and
dec
sbb
sti
push
add
je
add
push
jbe
test
mov
not
jbe
inc
add
daa
stos
aaa
sahf
sbb
jmp
mov
mov
aaa
sub
flds
dec
cwtl
add
mov
jl
sbb
mov
imull
fstpl
int3
rcll
insb
mov
scas
xchg
add
movsb
push
add
data16
sbb
scas
inc
jge
mov
add
sub
mov
sbb
xor
mov
in
sub
mov
add
std
in
mov
mov
add
test
pop
sub
mov
add
out
popf
clc
cmp
jb
mov
add
lods
aaa
les
jns
clc
adc
add
adc
add
ja
mov
mov
stos
cmp
out
outsl
stc
fiadds
add
mov
popf
fidivrs
mov
mov
mov
cmp
push
and
mov
add
gs
mov
and
repnz
push
mov
cmp
aad
arpl
bound
mov
add
mov
add
aam
sbb
inc
lods
dec
testl
icebp
xlat
pop
inc
add
pop
and
mov
je
loope
fnstsw
decb
or
lds
pop
push
lods
mov
add
pushf
ljmp
cltd
adc
mov
mov
mov
add
push
dec
jg
in
xor
cmp
pop
out
pop
and
fldl
loope
bound
mov
add
mov
mov
fbstp
jg
fldenv
in
or
sub
sub
dec
adc
inc
add
lods
push
pushf
mov
add
jb
mov
add
xchg
jg
dec
lret
sub
adc
fdivs
mov
add
add
inc
mov
sti
iret
arpl
mov
mov
xor
lods
sub
pop
ret
scas
rcrl
mov
rcrl
shr
inc
xchg
xor
dec
or
adc
mov
pop
fcmovu
testb
enter
pop
jns
aam
jnp
add
cmova
sub
cmpsb
xlat
xorl
mov
pop
xor
mov
mov
or
jbe
xchg
lcall
lock
mov
cmp
into
and
sbb
fwait
sbb
es
add
mov
dec
push
imul
mov
ficompl
add
xchg
add
mov
jge
int3
push
dec
insb
sub
mov
das
xchg
js
js
nop
add
lds
imul
mov
movsl
push
inc
clc
orl
and
mov
in
pusha
add
xor
data16
jmp
hlt
xorl
sbb
stos
sub
xor
js
or
sti
movsb
or
je
push
sbb
ja
add
jnp
sub
out
lcall
adc
mov
adc
add
sbb
or
ficoml
js
in
pop
stos
or
add
mov
lock
adc
mov
and
out
dec
or
adc
mov
add
adc
push
mov
jge
scas
dec
and
mov
jnp
jne
and
lahf
ds
cltd
pop
and
jno
jnp
cmp
xor
jae
inc
or
xchg
xchg
add
negl
add
mov
lret
es
mov
add
in
push
rolb
mov
in
ljmp
cld
in
flds
mov
mov
aad
inc
mov
mov
xchg
gs
into
lret
mov
cmp
add
mov
inc
mov
stc
cmc
test
lods
jle
pop
out
rcll
out
sahf
xor
add
push
add
xor
lods
bound
mov
hlt
mov
adc
fisubs
add
pop
push
fs
add
sbb
cs
dec
pop
imul
flds
add
les
xor
mov
insl
fmull
lret
mov
add
xor
push
xlat
pop
pop
das
inc
add
ljmp
inc
testl
pop
jnp
adc
mov
in
mov
cmpsb
lcall
lea
push
add
jne
sbb
loopne
mov
jns
sbb
add
mov
test
add
mov
add
mov
jmp
mov
mov
mov
pop
sbb
push
xor
add
mov
mov
cmp
fstl
in
and
mov
push
push
dec
jecxz
adc
mov
sub
xchg
mov
mov
mov
xchg
mov
push
leave
pop
xchg
stc
mov
inc
subl
adc
cld
cmc
mov
lcall
popa
mov
in
cmp
std
pop
std
xchg
inc
or
add
in
rolb
mov
mov
xchg
arpl
add
jge
adc
mov
add
loope
jecxz
mov
jle
add
daa
cs
xchg
jb
mov
dec
mov
mov
mov
jge
addb
dec
push
adc
les
ds
hlt
and
mov
mov
add
mov
stos
xor
mov
mov
mov
jl
scas
test
xchg
add
loopne
mov
add
lret
mov
add
add
mov
mov
clc
imul
pop
fs
aad
mov
push
iret
out
add
jge
pop
dec
enter
dec
sti
je
ja
add
addps
add
lahf
inc
cmpsl
pop
fistpll
add
xchg
add
aaa
clc
int
lret
data16
add
into
mov
xor
mov
cltd
cltd
push
std
mov
rcr
test
mov
je
iret
push
hlt
and
mov
imul
loope
push
xchg
rcl
enter
mov
imul
mov
and
in
out
iret
add
enter
incb
inc
cmp
jmp
jle
add
xchg
add
add
pop
fsubrs
testl
mov
mov
adc
mov
mov
add
test
mov
mov
xor
add
mov
add
add
imul
int
sarl
pop
xorl
add
or
add
add
clc
sbb
lock
jg
xchg
cmp
mov
dec
dec
lods
lods
pop
dec
push
add
mov
pop
pop
outsb
or
addb
inc
sub
bound
mov
push
lret
push
mov
fists
mov
mov
and
out
pop
mov
repz
mov
enter
mov
mov
inc
movsl
lods
pusha
add
fistpl
stos
xor
mov
push
push
add
jle
xchg
add
push
idiv
inc
mov
mov
cmpsb
cli
jp
add
jnp
xchg
mov
sub
pop
dec
stos
gs
cmc
cli
or
mov
cmp
add
push
jg
ret
addl
mov
push
xchg
jno
mov
mov
inc
push
icebp
sbb
add
lcall
stos
leave
das
sbb
add
add
mov
outsl
xchg
sbb
mov
dec
pop
mov
sbb
ret
jne
add
pop
daa
add
and
stos
in
scas
pop
xchg
insb
and
dec
and
sbb
mov
test
dec
pop
popl
xor
mov
add
mov
adc
add
sub
int
dec
mov
scas
mov
mov
fucomip
int
ret
sub
insl
lock
push
add
data16
inc
sub
jbe
or
scas
hlt
insb
inc
add
rolb
mov
add
mov
xchg
aas
xor
add
out
mov
lahf
mov
add
mov
add
mov
fs
lds
add
mov
add
sub
ror
frstor
add
sbb
cmp
or
fldcw
adc
push
push
add
pause
add
icebp
addb
cmp
loop
mov
pop
push
mov
jbe
xchg
mov
and
mov
sub
jbe
mov
mov
mov
stos
rcrl
and
addb
mov
add
sbb
fiaddl
xchg
sub
pmullw
aas
jnp
into
lods
cmp
xor
mov
js
jns
bound
mov
sbb
add
mov
mov
movsl
xchg
scas
xor
jo
mov
leave
add
mov
add
js
lahf
in
cld
icebp
aad
sub
xchg
fisubrs
add
clc
mov
fidivrl
xchg
xor
movsb
fnsave
xchg
and
add
stc
ds
add
or
loop
mov
or
arpl
fldcw
mov
mov
mov
jecxz
xor
dec
and
mov
xlat
lea
imul
push
inc
mov
cwtl
jb
mov
inc
stos
cmp
bound
mov
or
jp
notl
dec
add
pop
fs
cld
rorl
vunpckhps
mov
add
push
ret
rcrl
jno
push
negl
mov
lcall
outsb
xlat
pop
cmc
cwtl
js
add
mov
or
add
xor
mov
push
add
push
sub
adc
add
pop
push
in
and
mov
in
or
popf
insb
adc
mov
inc
lcall
or
pop
test
mov
mov
jecxz
mov
pop
and
add
dec
xchg
mov
xchg
dec
xchg
add
imul
mov
insb
xchg
insl
into
and
mov
add
mov
loope
adc
mov
add
mov
mov
nop
add
mov
shl
sub
mov
imul
out
in
in
sbb
xchg
sbb
xchg
pop
xchg
add
insb
test
add
mov
ret
in
jecxz
shrl
mov
push
push
jle
add
add
int3
jae
inc
arpl
add
mov
in
mov
add
mov
into
cwtl
ficoms
pop
cmp
sbb
fbld
mov
add
jne
fbstp
inc
add
mov
mov
lods
fldt
pop
xor
pop
gs
loope
in
into
insl
xor
add
ljmp
add
aad
xor
mov
add
inc
insb
addb
cmp
ret
jge
and
js
add
mov
xor
inc
add
xchg
out
lcall
stos
pop
ret
adc
test
aas
ljmp
mov
add
add
insl
jnp
out
lea
outsl
mov
push
push
fiadds
add
cmc
adc
jecxz
push
mov
or
mov
addb
xchg
add
add
mov
arpl
xor
xchg
aam
addr16
outsb
push
movsb
aad
jnp
dec
pop
sbb
mov
add
les
inc
rolb
mov
inc
loopne
mov
sub
mov
jb
mov
popf
ret
in
pop
pop
mov
add
sub
push
dec
jmp
enter
fldl
aam
xlat
js
inc
lcall
addr16
outsl
sbb
jb
mov
or
nop
add
xor
mov
jg
pop
or
andl
mov
jge
ffreep
mov
mov
add
popf
jp
stos
mov
push
mov
negl
nop
add
sbb
push
add
adc
add
mov
add
cwtl
and
mov
cwtl
or
fsubs
mov
dec
cld
mov
outsl
jle
cmp
adc
mov
xchg
je
xor
test
inc
jge
push
xor
add
movsb
stos
mov
cmp
xor
mov
add
add
and
call
mov
add
mov
cltd
jnp
out
mov
mov
seto
mov
mov
sahf
scas
pop
mov
push
push
pop
xchg
add
mov
dec
out
add
mov
call
fisttpl
cltd
cmp
xlat
jl
mov
mov
rcll
test
cld
sahf
mov
jo
mov
add
mov
es
mov
sbb
add
add
push
jl
add
shr
pop
fistpl
add
xor
mov
int
push
rcrl
xchg
xor
or
or
out
inc
or
decb
loop
mov
add
pushf
dec
pop
js
xor
ja
and
addb
mov
mov
add
push
add
xchg
cmovp
mov
mov
out
cwtl
fstpl
mov
pop
je
mov
sub
cltd
mov
les
add
insl
std
cwtl
insb
cmpsb
ljmp
loopne
mov
xor
ja
sbb
or
lret
cmp
aaa
or
fwait
xchg
or
in
int3
icebp
daa
test
aaa
mov
adc
cli
aad
rolb
mov
addr16
cmp
addb
in
fwait
imul
movsb
lea
push
subl
dec
jno
add
pop
xor
add
push
out
mov
cmp
call
jp
imull
push
test
mov
out
sarl
mov
sbb
mov
imul
inc
add
add
mov
and
mov
add
mov
mov
aad
dec
testb
fwait
dec
lahf
fsub
add
add
cs
lcall
lods
test
pop
movsl
dec
mov
outsl
lahf
pop
pop
std
sbb
mov
add
xor
in
push
xchg
stc
leave
popa
or
jnp
dec
and
mov
outsl
mov
inc
xchg
add
jb
mov
call
jnp
fnsave
mov
sbb
jno
sbb
rolb
mov
mov
mov
popa
sub
pop
loop
mov
inc
mov
cmpsl
jne
sti
mov
xchg
int
jl
mov
mov
or
xor
cs
nop
add
lods
roll
insl
sahf
lods
lahf
cwtl
adc
mov
ds
mov
add
stos
jb
mov
in
shll
add
ficompl
inc
add
cmpl
fmull
jle
shll
mov
mov
sbb
add
mov
popl
mov
out
xchg
dec
push
cld
push
xor
mov
rolb
test
push
or
add
int
or
ret
into
push
cmp
leave
adc
popa
xchg
mov
mov
mov
cmp
mov
add
or
or
mov
ljmp
aam
in
push
fadds
stos
mov
das
test
inc
jg
or
in
mov
xor
lret
nop
add
jp
cltd
mov
jge
aad
imul
pop
cmp
xor
add
pop
fcompp
insl
ret
addb
mov
daa
cmc
aad
xlat
int
idiv
jbe
mull
dec
add
mov
sbb
bound
mov
test
add
push
imul
pop
int
add
add
xchg
roll
mov
sub
cmp
aaa
fidivl
bound
mov
push
ret
xchg
xchg
dec
out
jnp
and
mov
rolb
int
mov
imul
mov
mov
add
out
cld
cwtl
sub
test
mov
dec
insw
cmpsl
jp
push
mov
xchg
mov
jnp
rol
fsubr
mov
add
dec
mov
add
cmp
call
add
add
add
add
aam
add
jmp
dec
scas
inc
xchg
outsl
addb
push
mov
cli
sub
cmc
pop
mov
cld
scas
loopne
mov
push
out
test
pop
incl
addb
sahf
push
jno
add
jbe
stos
xchg
mov
lahf
sahf
inc
push
fcoml
add
lods
add
mov
test
add
std
jmp
aas
jne
add
mov
ss
adc
mov
or
xchg
leave
xor
mov
out
test
lret
add
and
mov
out
sbb
fucomi
ds
add
mov
mov
pop
dec
cmpsb
ret
insl
jbe
test
adc
add
mov
pop
add
mov
push
mov
addl
popa
or
add
mov
jmp
std
inc
dec
bound
mov
stos
nop
add
adc
mov
mov
cmpsl
cmp
xor
add
bound
mov
int
adc
add
add
mov
ja
sbb
jb
mov
outsb
arpl
add
imul
push
xor
mov
mov
fwait
sbb
add
mov
dec
mov
dec
xlat
lahf
test
mov
adc
jno
gs
jae
add
push
jnp
test
mov
fbstp
lcall
inc
add
and
adc
mov
add
bound
mov
sti
mov
mov
mov
cmp
add
add
fisubrs
add
dec
cmpsb
ror
or
xchg
jae
fucomi
jp
jne
add
stc
lock
test
add
lds
inc
loopne
mov
test
mov
add
or
cmc
xchg
add
mov
scas
cmc
aaa
mov
mov
add
andl
mov
add
bound
mov
in
lcall
adc
mov
xchg
mov
add
testl
cltd
and
mov
add
movsb
addr16
push
add
and
mov
fistpll
fistps
add
mov
add
mov
add
dec
repnz
xchg
adc
mov
mov
push
addr16
nop
add
xchg
add
data16
adc
dec
inc
popa
pop
arpl
or
bound
mov
lea
mov
loopne
mov
push
loopne
mov
movsl
fnstsw
dec
mov
loopne
mov
fildll
add
in
fwait
sub
push
daa
adc
mov
jnp
mov
test
mov
icebp
jge
aam
pusha
add
popw
mov
pop
push
add
sub
mov
inc
dec
rolb
mov
push
add
mov
jl
cmp
rolb
mov
add
mov
add
lock
sub
push
int
imul
mov
mov
mov
loopne
mov
js
fnstenv
and
mov
mov
jp
cmpsl
test
inc
sbb
movsb
lcall
mov
scas
notb
add
loopne
mov
xor
in
lds
stc
fistps
stos
mov
sub
ret
jo
mov
jl
in
ret
out
inc
add
out
pop
enter
mov
dec
test
fwait
jle
add
movsb
push
test
popa
imulb
out
imul
mov
fsts
add
popf
mov
sub
pop
mov
dec
lret
pop
cltd
cmp
sbb
stos
or
adc
addb
insl
mov
add
or
mov
pop
adc
xor
add
iret
or
sub
push
not
ret
loopne
mov
push
xchg
mov
mov
xchg
dec
mov
inc
add
sub
xchg
adcl
fsubrs
fwait
insb
push
test
cmp
and
fadds
jo
mov
rolb
gs
shl
xchg
ja
mov
mov
sbb
xchg
les
and
mov
push
mov
enter
clc
push
pop
addr16
mov
push
cmp
icebp
hlt
aas
stos
loope
dec
mov
jge,pt
add
push
mov
add
in
mov
mov
loop
mov
mov
mov
mov
bound
mov
aaa
and
fnsave
inc
cwtl
xchg
or
aas
fldcw
push
pop
es
or
cli
push
add
fs
cmp
sub
gs
xchg
jnp
add
mov
mov
or
jbe
pcmpgtd
add
mov
adc
mov
add
pop
pop
sub
sbb
mov
cmp
add
adc
mov
dec
icebp
mov
and
sbb
add
xor
or
add
add
mov
jo
mov
mov
add
jecxz
add
insb
adc
xor
xor
cmp
fcmove
sbb
push
aaa
test
mov
fisubrl
add
shll
mov
daa
jmp
rolb
mov
add
mov
sub
jnp
inc
fldenv
add
mov
in
push
xorl
add
push
out
or
lock
dec
jne
ljmp
xor
ret
repz
fnstsw
xchg
sbb
add
loope
test
ja
in
sbb
push
ja
addb
pop
xchg
fisubs
in
test
cmp
adc
out
xchg
add
testb
daa
sti
in
loop
mov
daa
pushf
testb
fldcw
inc
and
mov
sub
add
sub
add
mov
xor
fistpll
in
push
push
pop
and
add
or
jno
leave
add
mov
out
fisubrl
stc
jo
mov
add
adc
add
daa
stos
adc
mov
mov
movsl
jmp
lcall
aaa
ret
loopne
mov
pop
pusha
add
add
les
imul
fdivl
mov
or
lock
add
bound
mov
stos
jecxz
imul
test
sahf
and
mov
add
in
pop
inc
das
mov
pop
out
dec
xchg
and
mov
pop
fwait
imul
mov
push
cmc
lcall
add
iret
repz
jmp
mov
mov
cmp
lods
jnp
push
jp
dec
or
xchg
movsl
cmp
jae
and
mov
mov
add
xor
fs
movsl
sub
jb
mov
cmp
add
adcl
add
add
movsb
sti
out
mov
icebp
enter
daa
rcll
mov
mov
cltd
pop
ret
and
mov
mov
sub
adc
add
int3
lds
adc
ret
and
mov
sbb
add
pop
cs
test
add
mov
insb
push
addl
jo
mov
rolb
mov
fucomp
into
loope
in
mov
add
pop
rolb
add
add
xchg
add
mov
add
mov
adcl
add
push
xlat
dec
xchg
addb
lret
inc
stos
fwait
aaa
inc
add
addr16
scas
add
je
addb
mov
push
nop
add
fcomi
pop
xchg
dec
out
xchg
adc
mov
add
xchg
or
std
push
cmp
xor
xchg
add
sub
frstor
or
add
add
or
mov
mov
int
xlat
jmp
fcmove
out
mov
mov
cld
pop
imul
xchg
xor
cld
xor
mov
insb
pop
sub
pop
pop
call
xchg
add
lret
lcall
fldenv
mov
xor
sbb
cmc
filds
mov
xchg
mov
sub
add
add
loopne
mov
lcall
test
scas
xchg
lea
pop
addb
repz
cli
rorl
cli
xor
add
mov
jo
mov
stc
test
popa
sub
arpl
inc
cmp
add
aas
pop
sub
cli
leave
loopne
mov
rolb
push
pop
sub
jge
lods
dec
sbb
add
mov
outsl
mov
add
mov
fld
xchg
mov
add
mov
jo
mov
into
insb
xor
mov
push
loop
mov
fiadds
mov
add
mov
dec
add
mov
pusha
add
jmp
xchg
add
lods
pop
jbe
idivb
out
dec
cmp
mov
xchg
leave
adc
mov
int3
sbb
dec
mov
jle
sti
push
cmp
add
enter
push
lock
pop
lds
mov
add
mov
lret
sbb
adc
add
rolb
mov
xchg
pop
clc
les
add
mov
mov
mov
out
bound
mov
add
mov
insb
imul
mov
ds
addb
jae
jle
pop
dec
out
shll
dec
test
icebp
ljmp
int
insl
test
je
add
lcall
xchg
addr16
add
mov
call
sub
lahf
xchg
or
bound
mov
jl
cld
xor
fwait
xchg
sbb
bound
mov
dec
int3
and
push
add
notb
push
rcll
lds
mov
mov
sub
out
xor
mov
mov
cmpsl
int
call
mov
lods
sub
xchg
push
lds
imul
xor
mov
out
mov
mov
adc
sarl
cwtl
mov
test
add
cmp
aam
rdtsc
addb
out
xor
in
mov
sti
test
loop
mov
into
je
in
mov
adc
mov
mov
lods
pop
and
jecxz
add
add
jno
jmp
sub
adc
add
mov
subl
pushf
insl
sub
add
add
sub
ljmp
jmp
insb
fdiv
rcrl
sbb
mov
add
add
mov
out
call
sbb
add
adc
mov
jmp
fdivrl
lahf
adc
pushf
scas
mov
mov
mov
mov
xor
mov
std
addr16
inc
add
adc
cwtl
ss
lret
imul
movsl
jecxz
add
add
adc
push
out
in
xor
add
mov
add
rorl
xor
call
popa
sub
mov
pushf
push
add
cmpsl
outsl
push
das
add
mov
mov
divl
lea
pop
jns
test
int
cmp
mov
xor
add
xor
mov
mov
mov
enter
call
jg
ret
mov
fistpll
mov
mov
push
xchg
mov
mov
mov
add
stc
or
test
mov
jne
mov
shll
xchg
adc
add
pop
and
mov
jp
fmuls
sbb
je
rolb
mov
mov
jge
daa
cmp
add
xchg
cmp
pop
push
je
adc
cmpsl
scas
test
mov
outsb
cmp
mov
add
data16
add
mov
sub
add
mov
out
mov
xchg
stos
xchg
xor
jo
mov
mov
iret
data16
int3
mov
es
sbb
daa
fisttpl
je
leave
add
dec
test
push
adc
int
add
fildl
push
sahf
ret
sub
mov
cmp
in
mov
add
xor
jg
add
fs
xchg
fldl2t
pop
bound
mov
ret
or
loop
mov
bound
mov
or
je
mov
outsb
mov
add
sbb
lea
cs
add
mov
loope
jl
or
or
xchg
pop
pop
ds
mov
ds
leave
lock
mov
mov
mov
and
mov
push
std
int
movsl
push
xchg
sub
into
stos
or
insb
movsb
iret
jno
imul
ja
add
cmc
addb
xor
lcall
loop
mov
add
repnz
nop
cld
jae
add
add
popa
xlat
loope
into
mov
clc
repnz
nop
cld
jae
add
inc
mov
mov
sub
add
repnz
nop
cld
jae
xlat
popa
add
fldenv
xor
add
clc
repnz
nop
cld
jae
adc
popa
push
add
add
clc
repnz
nop
cld
jae
out
bound
add
mov
push
mov
nop
leave
nop
jmp
add
test
call
clc
repnz
nop
cld
jae
add
clc
repnz
nop
cld
jae
out
sti
add
sub
adcb
clc
repnz
nop
cld
jae
repz
adc
adc
adc
cmp
clc
repnz
nop
cld
jae
add
out
and
push
mov
xchg
ret
cmpsb
sti
add
add
add
repnz
nop
cld
jae
xchg
add
out
add
mov
inc
loopne
repnz
nop
cld
jae
add
jae
push
clc
repnz
nop
cld
jae
rolb
popa
add
add
mov
mov
movzwl
clc
repnz
nop
cld
jae
xlat
shrl
adc
mov
nop
leave
nop
jmp
pop
sub
jmp
call
repnz
nop
cld
jae
out
pop
test
ficoms
repnz
nop
cld
jae
add
mov
pop
cmpsl
test
push
mov
nop
leave
nop
jmp
add
xor
add
add
cmpl
push
mov
nop
leave
nop
jmp
add
xor
mov
nop
cld
jae
arpl
add
in
xor
jae
add
repnz
nop
cld
jae
popa
add
add
shrl
fdivp
inc
add
cmpsb
add
add
add
dec
ja
clc
repnz
nop
cld
jae
add
xchg
push
dec
push
push
mov
xchg
ret
add
pop
sbb
mov
mov
in
add
add
clc
repnz
nop
cld
jae
add
add
mov
sub
add
in
nop
leave
nop
jmp
xlat
add
clc
repnz
nop
cld
jae
add
push
repz
xchg
pop
clc
repnz
nop
cld
jae
and
push
push
add
sub
leave
pop
push
mov
xchg
ret
xor
repz
add
out
xor
add
mov
clc
repnz
nop
cld
jae
add
jmp
add
subl
clc
repnz
nop
cld
jae
add
mov
clc
repnz
nop
cld
jae
add
test
add
adc
mov
nop
leave
nop
jmp
add
mov
mov
clc
repnz
nop
cld
jae
aad
add
push
sub
loopne
mov
pushl
clc
repnz
nop
cld
jae
cmpsb
add
roll
clc
repnz
nop
cld
jae
popa
test
jg
add
rep
clc
repnz
nop
cld
jae
add
xchg
add
add
add
inc
push
shl
add
in
add
add
repnz
nop
cld
jae
mov
inc
and
push
mov
xchg
ret
cmp
out
out
pop
xor
push
mov
xchg
ret
add
add
pop
clc
repnz
nop
cld
jae
subb
cmp
call
outsl
mov
push
mov
nop
leave
nop
jmp
add
add
out
push
mov
clc
repnz
nop
cld
jae
xchg
xchg
add
cmp
clc
repnz
nop
cld
jae
and
mov
repnz
nop
cld
jae
lods
pop
jge
lods
lods
pop
add
pop
rep
clc
repnz
nop
cld
jae
add
add
add
dec
cmp
mov
nop
leave
nop
jmp
add
add
sbb
fwait
mov
clc
repnz
nop
cld
jae
add
push
popa
push
add
add
or
add
push
mov
xchg
ret
add
fildl
add
add
in
add
daa
add
repnz
cmpsb
jge
rep
clc
repnz
nop
cld
jae
test
add
add
sbb
inc
push
mov
xchg
ret
add
add
roll
bound
mov
jne
clc
repnz
nop
cld
jae
pop
add
sub
nop
nop
cld
jae
xor
add
andb
jne
clc
repnz
nop
cld
jae
fildl
add
push
mov
xchg
ret
cmp
add
pop
add
in
push
push
mov
xchg
ret
add
xchg
repnz
repnz
mov
add
test
pop
repz
sub
add
add
clc
repnz
nop
cld
jae
call
or
add
clc
repnz
nop
cld
jae
jge
add
das
mov
jmp
add
add
add
add
xchg
add
add
adc
repz
add
add
add
cmpsb
in
pop
clc
repnz
nop
cld
jae
add
add
pop
in
pop
stos
sbb
push
mov
xchg
ret
shl
add
add
add
push
mov
nop
leave
nop
jmp
sarb
popa
add
pop
push
push
mov
xchg
ret
adc
add
and
mov
je
push
mov
nop
leave
nop
jmp
add
add
clc
repnz
nop
cld
jae
and
add
in
mov
add
sub
jo
inc
add
add
add
sub
clc
repnz
nop
cld
jae
xor
add
fildl
add
nop
nop
cld
jae
test
cmpsb
pop
int
push
sub
in
nop
leave
nop
jmp
and
call
mov
clc
repnz
nop
cld
jae
addb
test
or
nop
nop
cld
jae
bound
mov
mov
add
nop
nop
cld
jae
xchg
add
add
add
xor
and
push
mov
nop
leave
nop
jmp
in
add
push
adc
mov
add
add
mov
add
pop
cmpsb
add
pop
es
clc
repnz
nop
cld
jae
jge
mov
push
mov
xchg
ret
add
add
add
push
mov
xchg
ret
mov
cmpsb
sti
add
mov
in
nop
leave
nop
jmp
sbb
add
loopne
mov
dec
cmp
repnz
nop
cld
jae
verr
add
mov
add
in
nop
leave
nop
jmp
add
mov
adc
jne
add
repnz
nop
cld
jae
lods
popa
add
add
add
les
repnz
nop
cld
jae
add
add
or
mov
xchg
ret
std
cmpb
add
mov
dec
adc
in
inc
add
shll
add
and
jnp
mov
push
add
cmp
ret
add
push
push
mov
xchg
ret
add
test
add
sub
mov
add
sti
push
mov
nop
leave
nop
jmp
bound
mov
pop
push
xchg
add
mov
clc
repnz
nop
cld
jae
mov
ror
clc
repnz
nop
cld
jae
add
add
jge
add
ret
clc
repnz
nop
cld
jae
test
repz
popa
sub
mov
xchg
ret
xlat
roll
adc
add
pop
add
add
push
mov
xchg
ret
add
add
add
add
test
add
clc
repnz
nop
cld
jae
add
out
add
mov
nop
leave
nop
jmp
add
add
add
daa
push
je
push
mov
nop
leave
nop
jmp
popa
add
aad
cltd
pop
push
mov
nop
leave
nop
jmp
add
add
popa
rcrl
jne
clc
repnz
nop
cld
jae
add
xchg
sbb
mov
nop
leave
nop
jmp
add
push
bnd
xchg
pushl
push
mov
xchg
ret
test
cmp
add
clc
repnz
nop
cld
jae
add
cltd
push
clc
repnz
nop
cld
jae
add
add
xor
lods
out
push
push
mov
xchg
ret
pop
test
add
lods
push
mov
xchg
ret
add
add
cmp
add
add
repnz
nop
cld
jae
add
call
mov
clc
repnz
nop
cld
jae
add
add
add
add
adc
mov
add
mov
add
clc
repnz
nop
cld
jae
adc
into
and
jns
mov
adc
mov
nop
leave
nop
jmp
popa
mov
add
or
nop
nop
cld
jae
add
add
pusha
add
clc
repnz
nop
cld
jae
sub
sbb
repnz
nop
cld
jae
pop
mov
into
mov
clc
repnz
nop
cld
jae
add
xor
and
movsb
adc
dec
push
clc
repnz
nop
cld
jae
repnz
add
add
add
add
mov
pop
push
mov
nop
leave
nop
jmp
push
add
push
clc
repnz
nop
cld
jae
add
popa
popa
andb
out
push
cwtl
add
clc
repnz
nop
cld
jae
arpl
mov
add
clc
repnz
nop
cld
jae
outsl
xor
cmp
nop
cld
jae
and
add
daa
add
lahf
cmpl
push
mov
nop
leave
nop
jmp
cmpsb
add
xor
add
push
in
inc
add
add
add
add
jmp
and
push
mov
xchg
ret
add
add
sti
rcll
cmc
sub
nop
cld
jae
add
outsl
add
add
clc
repnz
nop
cld
jae
xchg
fistl
addr16
roll
push
mov
xchg
ret
add
add
xchg
clc
repnz
nop
cld
jae
sub
add
add
add
inc
pop
lea
clc
repnz
nop
cld
jae
jmp
std
xchg
add
out
call
clc
repnz
nop
cld
jae
add
add
sub
sti
push
mov
xchg
ret
add
add
add
bound
fildl
nop
nop
cld
jae
add
mov
mov
imul
cld
incl
pop
mov
add
test
repz
stos
clc
repnz
nop
cld
jae
out
add
xor
cmpsb
bound
and
mov
add
clc
repnz
nop
cld
jae
add
add
and
mov
xchg
ret
jg
arpl
mov
mov
add
push
mov
xchg
ret
xlat
add
in
add
add
js
popa
add
repnz
nop
cld
jae
add
add
add
push
clc
repnz
nop
cld
jae
pop
verr
mov
add
clc
repnz
nop
cld
jae
xchg
add
xor
mov
push
mov
xchg
ret
add
push
adc
add
pop
push
clc
repnz
nop
cld
jae
cmp
std
add
push
push
mov
xchg
ret
add
xlat
add
add
add
stos
mov
clc
repnz
nop
cld
jae
add
and
push
mov
add
add
or
inc
pop
cmpsb
sbb
div
clc
repnz
nop
cld
jae
add
add
roll
fisttpll
add
repnz
nop
cld
jae
sub
stos
add
push
mov
xchg
ret
cmpsb
add
verr
fiaddl
inc
cmp
repnz
nop
cld
jae
cmpsb
add
add
xlat
out
xor
clc
repnz
nop
cld
jae
add
add
add
repnz
nop
nop
cld
jae
jmp
aad
out
out
insl
mov
push
mov
xchg
ret
outsl
add
add
add
movsb
xchg
addb
dec
push
push
mov
xchg
ret
add
pop
jmp
sbb
popa
add
repnz
nop
cld
jae
adc
fcmovnu
add
inc
int3
ret
add
add
cmpsb
out
push
pop
pop
pop
cmpsb
add
add
add
clc
repnz
nop
cld
jae
add
push
repz
jge
add
mov
push
mov
xchg
ret
and
add
and
adc
call
cmp
ret
lods
add
daa
inc
aad
cs
push
mov
xchg
ret
add
popa
xlat
add
pop
sub
jmp
shll
add
add
out
jmp
xchg
add
add
add
popa
add
add
xlat
std
addl
mov
push
mov
xchg
ret
add
call
adc
mov
add
in
nop
leave
nop
jmp
add
add
push
and
push
mov
dec
push
stc
fcompl
popa
add
dec
fldl
fmul
add
add
clc
repnz
nop
cld
jae
sti
add
sti
and
dec
push
push
mov
xchg
ret
add
add
xchg
push
cmpsb
sti
push
xchg
dec
and
clc
repnz
nop
cld
jae
movntq
daa
movsl
sbb
push
mov
nop
leave
nop
jmp
lods
arpl
sbb
movsb
je
add
clc
repnz
nop
cld
jae
repnz
add
add
clc
repnz
nop
cld
jae
out
add
xor
clc
repnz
nop
cld
jae
add
daa
out
push
mov
cmpsl
sahf
ret
push
aam
adc
out
int
add
mov
pop
push
clc
repnz
nop
cld
jae
call
add
leave
add
clc
repnz
nop
cld
jae
cmpsb
daa
pop
leave
pop
add
call
in
nop
leave
nop
jmp
xor
shrb
mov
push
mov
xchg
ret
xlat
out
mov
addr16
push
push
mov
nop
leave
nop
jmp
test
arpl
in
add
std
aad
xor
mov
repnz
nop
cld
jae
leave
xor
add
pop
jnp
jno
clc
repnz
nop
cld
jae
add
add
add
push
ja
add
pusha
add
add
jb
jle
faddl
xor
and
jle
clc
repnz
nop
cld
jae
and
add
add
test
repnz
nop
cld
jae
add
into
lods
add
and
jmp
xchg
add
add
add
sldt
add
xchg
rclb
sbb
repnz
nop
cld
jae
add
add
lret
and
clc
repnz
nop
cld
jae
mov
outsl
mov
clc
repnz
nop
cld
jae
test
and
leave
add
mov
jmp
add
roll
add
jge
pop
clc
repnz
nop
cld
jae
leave
shl
add
add
add
adc
inc
add
rolb
call
std
out
add
clc
repnz
nop
cld
jae
stos
cmp
add
add
mov
stos
add
jnp
cmp
or
add
add
loopne
mov
fs
repnz
nop
cld
jae
and
jge
addb
ljmp
xor
cmp
ret
popa
jge
add
mov
jmp
aad
mov
add
cmpsb
mov
inc
push
mov
nop
leave
nop
jmp
add
push
add
mov
cmp
sar
repnz
nop
cld
jae
arpl
repz
pop
add
or
iret
fiadds
xchg
ret
add
popa
add
std
shl
add
add
repnz
nop
cld
jae
add
sbb
cmpsl
std
mov
lret
clc
repnz
nop
cld
jae
repz
test
mov
push
mov
nop
leave
nop
jmp
xor
adc
mov
add
clc
repnz
nop
cld
jae
leave
add
push
rolb
mov
nop
nop
cld
jae
arpl
sti
add
add
pop
or
repnz
nop
cld
jae
add
add
adc
mov
clc
repnz
nop
cld
jae
pop
mov
inc
jecxz
push
clc
repnz
nop
cld
jae
outsl
add
std
cmpsb
add
outsl
or
push
mov
nop
leave
nop
jmp
in
in
daa
add
mov
xchg
ret
add
sbb
aad
add
mov
clc
repnz
nop
cld
jae
sbb
add
scas
lea
push
mov
xchg
ret
add
add
outsl
leave
daa
lahf
popa
clc
repnz
nop
cld
jae
xlat
mov
add
mov
clc
repnz
nop
cld
jae
cmpsb
cmp
add
test
push
mov
nop
leave
nop
jmp
sti
add
add
mov
inc
jp
push
mov
nop
leave
nop
jmp
add
add
lea
nop
cld
jae
popa
out
add
add
pop
push
mov
xchg
ret
addr16
add
in
dec
movzwl
clc
repnz
nop
cld
jae
mov
push
sub
dec
or
add
sti
jmp
add
and
mov
pop
in
add
clc
repnz
nop
cld
jae
add
add
daa
xchg
dec
mov
clc
repnz
nop
cld
jae
andb
sub
int3
mov
clc
repnz
nop
cld
jae
and
fsubrs
nop
leave
nop
jmp
leave
pop
pop
add
add
testl
clc
repnz
nop
cld
jae
pop
add
cmp
add
repnz
nop
cld
jae
add
push
sbb
pop
add
add
repnz
nop
cld
jae
add
popa
add
clc
repnz
nop
cld
jae
into
cmpsb
add
add
add
sub
ds
add
push
mov
nop
leave
nop
jmp
add
lods
add
xlat
cld
pop
push
mov
xchg
ret
add
add
and
add
push
mov
xchg
ret
cmpsl
add
add
jg
add
nop
cld
jae
mov
cmp
add
pop
clc
repnz
nop
cld
jae
add
out
add
stos
in
hlt
or
nop
nop
cld
jae
sbb
add
xlat
add
pop
clc
repnz
nop
cld
jae
add
sbb
add
add
cmp
push
mov
nop
leave
nop
jmp
std
add
add
add
mov
mov
xchg
ret
add
pop
add
rep
push
lods
mov
clc
repnz
nop
cld
jae
stos
add
cmpb
nop
nop
cld
jae
xlat
call
mov
out
add
add
add
add
xchg
push
cmpw
push
mov
nop
leave
nop
jmp
lods
add
jge
mov
clc
repnz
nop
cld
jae
adc
out
or
push
mov
nop
leave
nop
jmp
sub
xchg
cmpsb
or
in
nop
leave
nop
jmp
and
or
lods
xlat
rolb
mov
sbb
test
add
clc
repnz
nop
cld
jae
add
add
leave
nop
jmp
call
pop
roll
clc
mov
clc
repnz
nop
cld
jae
add
cmpsl
std
mov
clc
repnz
nop
cld
jae
popa
xlat
add
add
fs
push
clc
repnz
nop
cld
jae
mov
add
sub
mov
xchg
ret
pop
add
add
pop
add
fsubr
pushl
add
pop
add
into
add
nop
nop
cld
jae
add
jmp
xchg
and
add
push
cmp
ret
shll
add
jge
rolb
mov
mov
clc
repnz
nop
cld
jae
shl
xorl
nop
nop
cld
jae
push
and
leave
popa
clc
repnz
nop
cld
jae
mov
add
xlat
aas
dec
push
mov
nop
leave
nop
jmp
outsl
jmp
add
add
add
clc
repnz
nop
cld
jae
add
bound
add
pop
cmp
movsb
clc
repnz
nop
cld
jae
pop
add
add
in
add
push
push
fwait
cmp
push
mov
nop
leave
nop
jmp
in
xor
add
add
clc
repnz
nop
cld
jae
cmpsl
add
add
xchg
mov
add
clc
repnz
nop
cld
jae
stos
add
add
add
roll
xchg
ret
add
add
pop
mov
mov
xchg
ret
add
test
add
test
nop
cld
jae
add
add
add
pop
add
ljmp
add
add
add
add
subl
nop
jmp
addb
add
leave
sub
repnz
nop
cld
jae
add
push
jmp
shrl
pop
push
mov
xchg
ret
add
xor
out
xchg
add
mov
nop
leave
nop
jmp
add
add
add
adc
mov
and
paddb
xchg
ret
shr
mov
cmpsl
aas
jne
clc
repnz
nop
cld
jae
rcrb
mov
add
in
nop
leave
nop
jmp
test
add
imul
clc
repnz
nop
cld
jae
add
bound
sbb
push
clc
repnz
nop
cld
jae
outsl
addr16
add
mov
push
mov
nop
leave
nop
jmp
add
inc
mov
insb
ja
repnz
nop
cld
jae
outsl
add
cmpsb
je
mov
add
clc
repnz
nop
cld
jae
arpl
xlat
sbb
xor
dec
ss
clc
repnz
nop
cld
jae
add
loopne
mov
ljmp
add
add
add
sub
stos
pop
jg
clc
repnz
nop
cld
jae
and
add
add
leave
add
rclb
sti
inc
add
add
add
add
and
ret
push
mov
nop
leave
nop
jmp
add
daa
repnz
add
pop
fidivl
sar
repnz
nop
cld
jae
and
add
outsl
call
mov
xchg
ret
adc
add
mov
mov
push
mov
xchg
ret
add
add
mov
push
mov
xchg
ret
add
add
std
bound
testl
push
mov
nop
leave
nop
jmp
cmpsb
pop
std
test
popl
clc
repnz
nop
cld
jae
add
add
add
cmc
shll
imul
cld
jae
add
cmp
addb
cltd
push
mov
add
dec
roll
add
test
sub
add
add
leave
nop
jmp
aad
jg
test
clc
repnz
nop
cld
jae
add
add
xchg
mov
clc
repnz
nop
cld
jae
add
add
ss
or
clc
repnz
nop
cld
jae
and
sub
addr16
add
push
add
add
clc
repnz
nop
cld
jae
add
test
add
push
mov
nop
leave
nop
jmp
add
add
dec
outsl
popa
fs
repnz
nop
cld
jae
add
adc
repnz
nop
cld
jae
leave
add
roll
aad
push
sbbl
push
mov
nop
leave
nop
jmp
add
add
push
mov
nop
leave
nop
jmp
add
aad
test
add
repnz
nop
cld
jae
add
xor
add
bts
nop
nop
cld
jae
montmul
cmpsb
add
add
add
repnz
nop
cld
jae
add
add
mov
rolb
xchg
ret
pop
out
add
add
add
mov
nop
cld
jae
add
cmpsb
pop
and
add
add
repnz
nop
cld
jae
add
cmpsb
xchg
add
and
mov
xchg
ret
add
add
fildl
loop
mov
clc
pop
push
mov
xchg
ret
add
add
add
mov
clc
repnz
nop
cld
jae
add
mov
dec
push
mov
nop
leave
nop
jmp
bound
add
out
mov
push
mov
xchg
ret
xchg
fildl
add
popa
add
mov
clc
repnz
nop
cld
jae
add
mov
or
mov
nop
leave
nop
jmp
add
add
pop
and
pop
push
clc
repnz
nop
cld
jae
pop
add
jge
sarl
push
push
mov
xchg
ret
add
push
add
add
add
jo
mov
mov
push
mov
nop
leave
nop
jmp
add
add
pop
and
or
in
lods
sub
add
add
gs
inc
add
mov
push
mov
xchg
ret
rcll
daa
adc
mov
add
clc
repnz
nop
cld
jae
bound
add
add
inc
add
cmp
clc
repnz
nop
cld
jae
addb
add
sti
add
clc
repnz
nop
cld
jae
add
fistpl
add
push
push
mov
nop
leave
nop
jmp
test
add
add
add
push
flds
xchg
ret
jg
add
add
add
repnz
nop
cld
jae
and
add
popa
jmp
popa
ds
clc
repnz
nop
cld
jae
add
add
and
add
and
clc
repnz
nop
cld
jae
out
add
lods
add
and
clc
repnz
nop
cld
jae
aad
loope
mov
repnz
nop
cld
jae
sti
bound
out
pop
jb
mov
pop
push
push
mov
xchg
ret
add
add
add
add
push
push
mov
nop
leave
nop
jmp
add
cmpsb
bound
add
movb
nop
nop
cld
jae
daa
roll
repz
mov
clc
repnz
nop
cld
jae
add
mov
sbb
sbb
repnz
nop
cld
jae
xlat
add
and
arpl
clc
repnz
nop
cld
jae
call
add
add
push
mov
xchg
ret
test
cmpsl
add
out
push
push
mov
nop
leave
nop
jmp
sub
add
add
add
mov
clc
repnz
nop
cld
jae
lods
repz
add
in
nop
leave
nop
jmp
add
add
push
clc
repnz
nop
cld
jae
pop
cmpsb
jmp
xor
mov
jl
and
sub
inc
add
add
sub
call
repnz
nop
cld
jae
and
call
mov
mov
repnz
add
clc
repnz
nop
cld
jae
add
add
cmp
xor
add
push
mov
nop
leave
nop
jmp
add
add
clc
repnz
nop
cld
jae
add
jge
add
repnz
nop
nop
cld
jae
and
mov
sar
nop
nop
cld
jae
in
bound
lods
in
xlat
fidivrl
clc
repnz
nop
cld
jae
xlat
add
bound
or
add
and
add
aad
stos
fcmovne
pop
inc
add
mov
nop
leave
nop
jmp
pop
ltr
add
add
clc
repnz
nop
cld
jae
add
add
add
mov
call
push
mov
nop
leave
nop
jmp
add
mov
unpcklps
add
repnz
nop
cld
jae
leave
bound
inc
add
nop
nop
cld
jae
and
add
jle
test
mov
nop
leave
nop
jmp
add
popa
add
mov
add
and
inc
add
add
std
push
add
add
rep
clc
repnz
nop
cld
jae
add
add
mov
clc
repnz
nop
cld
jae
sub
cmpsb
add
mov
js
repnz
nop
cld
jae
add
adc
repnz
nop
cld
jae
add
add
sub
xchg
bound
mov
nop
nop
cld
jae
sub
popl
nop
leave
nop
jmp
outsl
add
xadd
add
xor
clc
repnz
nop
cld
jae
packuswb
add
add
and
push
mov
nop
leave
nop
jmp
mov
add
pop
clc
repnz
nop
cld
jae
stos
jg
add
addr16
imul
repnz
nop
cld
jae
and
arpl
xchg
jle
push
mov
nop
leave
nop
jmp
mov
std
add
jbe
mov
mov
xchg
ret
pop
add
push
add
bound
movb
repnz
nop
cld
jae
outsl
xchg
add
cmpsb
add
clc
repnz
nop
cld
jae
xor
add
cmp
mov
nop
cld
jae
shlb
push
add
add
dec
pop
push
mov
nop
leave
nop
jmp
add
push
add
pop
lods
and
test
or
add
repnz
nop
cld
jae
mov
adc
clc
repnz
nop
cld
jae
add
add
xor
insb
test
push
mov
nop
leave
nop
jmp
add
out
test
nop
cld
jae
add
and
and
add
push
subl
inc
add
add
jmp
add
mov
rol
push
mov
xchg
ret
add
add
pop
arpl
and
add
clc
repnz
nop
cld
jae
pop
mov
add
clc
repnz
nop
cld
jae
add
imul
adc
call
in
nop
leave
nop
jmp
stos
add
hlt
or
notl
in
nop
leave
nop
jmp
mov
cs
clc
repnz
nop
cld
jae
mov
add
pop
pop
dec
push
mov
xchg
ret
add
add
add
add
cmpsb
push
fwait
push
clc
repnz
nop
cld
jae
sarl
add
mov
xchg
push
pop
push
adc
xchg
in
add
xor
mov
inc
add
add
std
add
and
add
jo
push
mov
nop
leave
nop
jmp
add
cmp
add
negb
call
clc
repnz
nop
cld
jae
add
add
adc
cmpl
push
mov
xchg
ret
add
add
xchg
push
fwait
decl
clc
repnz
nop
cld
jae
push
bound
fistpl
jns
loop
mov
xchg
ret
into
add
mov
push
nop
cld
jae
addr16
add
cmpsl
add
and
mov
push
mov
xchg
ret
add
add
add
clc
repnz
nop
cld
jae
add
outsl
dec
push
clc
repnz
nop
cld
jae
andb
adc
mov
xor
push
cmpsb
cmpsb
xlat
add
add
add
add
leave
clc
repnz
nop
cld
jae
xor
add
cmpsb
add
add
in
nop
leave
nop
jmp
lods
push
add
sbb
jg
push
mov
nop
leave
nop
jmp
sti
add
stos
pop
xor
clc
repnz
nop
cld
jae
add
add
nop
nop
cld
jae
bound
add
roll
push
mov
nop
leave
nop
jmp
add
or
clc
push
mov
nop
leave
nop
jmp
mov
and
cmpl
push
mov
nop
leave
nop
jmp
add
clc
repnz
nop
cld
jae
add
into
add
pop
into
mov
clc
repnz
nop
cld
jae
add
repnz
nop
cld
jae
push
out
add
add
add
jns
test
out
clc
repnz
nop
cld
jae
add
mov
xchg
ret
xor
rolb
add
add
sbb
in
nop
leave
nop
jmp
pop
out
pop
add
mov
add
pop
add
clc
repnz
nop
cld
jae
add
add
rorl
xlat
popf
call
push
mov
nop
leave
nop
jmp
outsl
out
pop
popf
mov
push
mov
nop
leave
nop
jmp
pop
jge
stos
add
inc
popa
and
push
mov
nop
leave
nop
jmp
and
mov
repnz
nop
cld
jae
into
add
test
lea
clc
repnz
nop
cld
jae
popa
add
pop
adc
sub
repz
repnz
nop
cld
jae
add
arpl
movl
add
add
add
leave
cs
clc
repnz
nop
cld
jae
add
add
nop
nop
cld
jae
pop
cmpsb
add
add
pop
add
push
mov
nop
leave
nop
jmp
add
add
sbb
sub
ret
push
mov
nop
leave
nop
jmp
add
popa
pop
addb
daa
or
mov
nop
leave
nop
jmp
std
pop
add
roll
leave
mov
clc
repnz
nop
cld
jae
xchg
bound
notb
imull
add
clc
repnz
nop
cld
jae
cmpsb
sub
ror
xor
movsb
push
mov
nop
leave
nop
jmp
xchg
add
mov
push
clc
repnz
nop
cld
jae
out
pop
popa
add
add
pop
pop
clc
repnz
nop
cld
jae
adc
add
test
xor
fisttps
ljmp
cmp
add
add
add
clc
repnz
nop
cld
jae
add
inc
inc
add
in
nop
leave
nop
jmp
add
add
ljmp
inc
add
cmpsb
add
jge
add
mov
rolb
xchg
ret
std
add
add
push
jmp
incl
add
pop
popa
add
sbb
xor
shrl
pop
push
mov
nop
leave
nop
jmp
adc
sti
adc
add
add
mov
push
mov
xchg
ret
add
add
xchg
jmp
inc
push
in
add
movzwl
clc
repnz
nop
cld
jae
daa
add
mov
push
mov
nop
leave
nop
jmp
add
add
test
mov
pop
clc
repnz
nop
cld
jae
xlat
add
out
add
inc
clc
repnz
nop
cld
jae
add
add
add
mov
clc
repnz
nop
cld
jae
jmp
add
popa
into
cwtl
subl
push
mov
xchg
ret
add
jmp
rolb
scas
mov
clc
repnz
nop
cld
jae
add
pop
std
movsl
or
stos
add
xchg
ret
cmpsb
add
add
add
inc
pushf
xchg
push
mov
xchg
ret
aad
add
arpl
in
push
push
mov
xchg
ret
add
add
add
pop
lds
push
push
mov
xchg
ret
add
add
repnz
add
in
not
aas
add
add
sub
addl
cld
add
push
add
push
clc
repnz
nop
cld
jae
roll
add
push
nop
nop
cld
jae
sti
add
popa
test
in
push
mov
xchg
ret
and
add
jmp
push
mov
xchg
ret
rep
pop
add
adc
add
mov
clc
repnz
nop
cld
jae
add
add
icebp
push
std
push
clc
repnz
nop
cld
jae
sldt
add
add
add
jmp
add
or
inc
add
add
add
roll
call
clc
repnz
nop
cld
jae
rcrb
add
mov
clc
repnz
nop
cld
jae
bound
adc
lods
and
jp
ret
add
inc
roll
xchg
ret
bound
add
test
mov
stos
mov
push
mov
nop
leave
nop
jmp
add
jge
addr16
stos
cmp
push
mov
nop
leave
nop
jmp
shlb
add
add
mov
nop
cld
jae
leave
pop
add
add
add
pop
push
mov
xchg
ret
and
add
add
and
sub
jg
clc
repnz
nop
cld
jae
add
add
adc
mov
add
movzwl
clc
repnz
nop
cld
jae
leave
add
xchg
jge
sub
push
mov
nop
leave
nop
jmp
add
sub
leave
mov
cmp
repnz
nop
cld
jae
rolb
add
adc
mov
mov
push
mov
nop
leave
nop
jmp
bound
xor
add
repnz
nop
cld
jae
add
xchg
add
std
add
int
jns
clc
repnz
nop
cld
jae
pop
add
add
add
add
push
mov
xchg
ret
add
add
push
mov
out
in
add
add
add
add
cld
jae
add
add
xor
std
mov
add
repnz
nop
cld
jae
sbb
cmpb
les
clc
repnz
nop
cld
jae
add
lods
pop
add
add
add
repnz
nop
cld
jae
add
std
add
movb
mov
xchg
ret
repnz
ud1
gs
repnz
nop
cld
jae
roll
add
and
mov
enter
mov
xchg
ret
add
add
add
xchg
lock
clc
clc
repnz
nop
cld
jae
push
add
mov
fdivr
inc
add
lods
add
in
add
test
add
clc
repnz
nop
cld
jae
jge
mov
adc
int
inc
push
adc
clc
repnz
nop
cld
jae
add
jge
add
je
clc
repnz
nop
cld
jae
sti
addr16
xchg
clc
repnz
nop
cld
jae
cmpsl
add
add
add
push
xchg
push
jne
clc
repnz
nop
cld
jae
test
add
add
jbe
sbb
push
mov
nop
leave
nop
jmp
por
add
pop
push
mov
xchg
ret
pop
roll
mov
add
mov
nop
leave
nop
jmp
add
add
jge
fwait
mov
clc
repnz
nop
cld
jae
push
add
add
add
mov
clc
repnz
nop
cld
jae
add
add
mov
mov
mov
push
mov
xchg
ret
add
daa
aad
popa
add
mov
clc
repnz
nop
cld
jae
and
mov
mov
jnp
test
repnz
nop
cld
jae
popa
add
pushf
add
push
mov
nop
leave
nop
jmp
add
test
mov
jmp
clc
repnz
nop
cld
jae
add
add
pop
add
cmp
mov
nop
leave
nop
jmp
lods
add
push
add
jl
xor
ret
out
inc
add
cmpsb
add
xor
xchg
add
add
call
add
and
add
mov
ror
push
mov
xchg
ret
and
mov
fnstcw
clc
repnz
nop
cld
jae
add
add
add
mov
xchg
ret
cmpsl
add
bound
mov
in
jecxz
outsb
add
pop
inc
inc
fidivrs
add
add
mov
clc
repnz
nop
cld
jae
add
clc
repnz
nop
cld
jae
add
add
popa
add
sub
mov
nop
leave
nop
jmp
add
add
and
add
mov
in
nop
leave
nop
jmp
and
repnz
add
sti
call
push
mov
nop
leave
nop
jmp
add
mov
add
push
clc
repnz
nop
cld
jae
add
pop
add
add
fdivrp
repnz
nop
cld
jae
add
add
add
adc
in
nop
leave
nop
jmp
add
fimull
mov
xchg
ret
sbb
and
out
outsl
aad
dec
add
clc
repnz
nop
cld
jae
and
cmpsl
add
add
scas
mov
push
mov
nop
leave
nop
jmp
in
mov
clc
repnz
nop
cld
jae
push
in
xor
add
add
push
mov
nop
leave
nop
jmp
xchg
add
out
add
push
mov
nop
leave
nop
jmp
add
outsl
pop
pop
cmpsb
xor
mov
clc
repnz
nop
cld
jae
xchg
add
add
out
push
push
mov
xchg
ret
add
add
repz
repnz
nop
cld
jae
mov
add
add
cmp
push
mov
nop
leave
nop
jmp
sldt
sub
loop
clc
repnz
nop
cld
jae
add
mov
jne
push
mov
nop
leave
nop
jmp
lods
std
push
xchg
cmpsl
sbb
stos
clc
repnz
nop
cld
jae
repz
aad
add
mov
mov
mov
push
mov
xchg
ret
add
add
call
lds
push
mov
xchg
ret
add
adc
xchg
push
add
clc
repnz
nop
cld
jae
aad
add
outsb
popa
clc
repnz
nop
cld
jae
mov
xlat
mov
and
mov
mov
nop
leave
nop
jmp
and
cmp
and
cmp
push
mov
nop
leave
nop
jmp
add
and
pop
pop
clc
repnz
nop
cld
jae
add
add
push
outsl
pop
test
aas
mov
clc
repnz
nop
cld
jae
add
into
add
add
repnz
nop
cld
jae
repnz
popa
mov
pop
clc
repnz
nop
cld
jae
test
add
clc
repnz
nop
cld
jae
roll
sbb
les
inc
add
daa
pop
in
cmpsl
add
test
mov
add
repnz
nop
cld
jae
add
add
clc
repnz
nop
cld
jae
xchg
add
add
xchg
mov
push
mov
xchg
ret
add
add
mov
add
add
repnz
nop
cld
jae
cmpsb
cmp
add
xor
push
mov
nop
leave
nop
jmp
orb
lods
fildl
cmp
clc
repnz
nop
cld
jae
repz
jg
repz
push
clc
repnz
nop
cld
jae
xlat
add
cmpsl
add
popa
out
mov
push
mov
xchg
ret
add
arpl
arpl
clc
repnz
nop
cld
jae
sub
add
add
cld
clc
repnz
nop
cld
jae
add
mov
cmp
adc
add
jmp
add
ss
les
add
dec
je
clc
repnz
nop
cld
jae
add
mov
push
loopne
repnz
nop
cld
jae
out
jmp
add
leave
and
clc
repnz
nop
cld
jae
sub
stos
fistpl
add
cmp
repnz
nop
cld
jae
xor
daa
and
aad
add
add
mov
nop
leave
nop
jmp
add
cmpsb
add
popa
loop
mov
nop
cld
jae
out
daa
adc
bound
push
filds
nop
nop
cld
jae
popa
add
popa
out
inc
dec
push
mov
fildl
mov
mov
ret
and
add
add
push
mov
nop
leave
nop
jmp
add
add
sub
repnz
nop
cld
jae
add
sub
mov
add
inc
push
mov
xchg
ret
add
arpl
pop
sti
pop
add
mov
push
mov
nop
leave
nop
jmp
add
roll
andb
push
mov
stos
pusha
jo
add
add
mov
add
mov
insb
mov
push
mov
xchg
ret
and
add
aad
mov
nop
cld
jae
jmp
add
test
nop
nop
cld
jae
aad
test
add
add
insl
add
clc
repnz
nop
cld
jae
pop
add
add
push
test
add
mov
xchg
ret
fildl
and
arpl
add
clc
repnz
nop
cld
jae
daa
in
add
rolb
orl
nop
nop
cld
jae
lods
add
add
pop
push
push
mov
nop
leave
nop
jmp
arpl
jg
xchg
add
bound
rcrl
and
push
mov
nop
leave
nop
jmp
arpl
cmpsb
add
cmpsb
adc
push
clc
repnz
nop
cld
jae
add
sbb
inc
je
add
jmp
cmpsb
add
mov
leave
add
jmp
repz
mov
nop
leave
nop
jmp
add
repz
add
cmp
push
mov
xchg
ret
fistl
outsl
add
shll
add
add
clc
repnz
nop
cld
jae
in
rorl
add
nop
nop
cld
jae
add
add
add
inc
mov
lea
push
mov
xchg
ret
xor
cmpsb
add
adc
dec
push
clc
repnz
nop
cld
jae
add
add
push
sub
repz
repnz
nop
cld
jae
xchg
in
std
arpl
add
clc
pop
push
mov
nop
leave
nop
jmp
add
mov
into
mov
mov
incl
arpl
add
test
mov
inc
and
clc
repnz
nop
cld
jae
add
lods
fcmovne
or
cmpl
in
nop
leave
nop
jmp
xlat
cmpsb
add
leave
dec
push
mov
nop
leave
nop
jmp
repnz
add
xchg
outsb
mov
push
mov
nop
leave
nop
jmp
add
add
add
and
mov
out
clc
repnz
nop
cld
jae
add
add
outsl
fimuls
nop
leave
nop
jmp
call
std
test
lcall
add
add
daa
adc
adc
repnz
nop
cld
jae
shl
add
adc
add
push
mov
nop
leave
nop
jmp
add
add
add
adc
nop
cld
jae
add
add
out
pop
lea
push
mov
nop
leave
nop
jmp
cmpsl
add
add
rorl
clc
repnz
nop
cld
jae
out
repz
mov
add
mov
clc
repnz
nop
cld
jae
add
into
adc
dec
cmp
repnz
nop
cld
jae
mov
add
xor
push
mov
nop
leave
nop
jmp
add
add
pop
add
clc
repnz
nop
cld
jae
adc
xchg
outsl
add
push
push
mov
nop
leave
nop
jmp
mov
movl
in
add
in
nop
leave
nop
jmp
roll
add
in
nop
leave
nop
jmp
add
shrl
mov
nop
nop
cld
jae
out
pop
arpl
sti
mov
clc
repnz
nop
cld
jae
bound
andb
clc
repnz
nop
cld
jae
add
add
mov
pusha
add
push
add
imul
add
sbb
pop
jecxz
out
sti
testl
in
add
add
push
mov
in
dec
cmpl
mov
lea
jbe
sub
cs
sahf
js
dec
jg
addr16
ret
adc
mov
xchg
push
lret
mov
add
iret
scas
shll
add
add
adc
mov
and
inc
je
bound
mov
mov
or
std
call
fadd
push
add
mov
xchg
xchg
add
jno
xchg
push
mov
lock
add
enter
mov
fcomps
test
xchg
xchg
inc
add
mov
in
in
outsb
fidivrl
loope
push
lea
mov
out
xchg
loop
mov
sbb
cltd
xlat
jecxz
cmp
pop
sbb
jns
rolb
movups
addr16
xor
cmc
ja
add
add
cmpsl
and
iret
push
into
jns
add
add
rolb
mov
cmp
add
stos
cmp
sub
movsl
mov
sbb
add
dec
mov
jnp
cmc
clc
mov
int
loope
xor
lds
imul
lods
jle
push
mov
dec
jo
mov
outsl
cmpsl
mov
pop
dec
jne
add
inc
lea
repz
out
mov
mov
sub
and
sbbl
pushf
bound
mov
mov
add
sar
mov
mov
int
pop
add
mov
and
add
loope
xchg
mov
decl
push
or
ret
inc
add
or
mov
jge
hlt
lock
pop
in
js
push
mov
loop
mov
and
add
mov
cmp
mov
add
xchg
loope
inc
mov
jle
les
pop
ja
add
adc
mov
mov
mov
or
push
mov
dec
sahf
ud0
mov
sbb
je
in
jmp
pop
mov
aam
jne
jns
enter
sub
jl
je
clc
and
mov
repz
mov
arpl
jmp
push
stos
cmc
mov
mov
rolb
mov
jmp
mov
mov
adc
outsb
cmp
scas
inc
sahf
push
shr
ss
mov
out
sbb
sbb
icebp
sub
mov
jecxz
mov
mov
add
mov
jae
pop
or
add
out
addb
jp
pop
mov
push
add
xchg
add
and
push
jp
sbb
fcoml
add
mov
add
dec
out
pop
cwtl
fsubr
jge
xor
sbb
mov
data16
pop
nop
add
fbstp
mov
sub
xchg
dec
add
mov
mov
leave
leave
fisttps
lds
add
or
push
cmp
add
jno
in
pop
in
sahf
or
in
cs
add
pcmpeqb
dec
sahf
or
sti
in
lret
mov
leave
dec
rolb
mov
push
add
loope
add
data16
stc
loope
int
test
call
cmpl
insl
xchg
push
jns
add
add
mov
lret
lods
pop
xchg
js
push
test
xchg
loopne
mov
into
decb
mov
add
cld
cmpsb
mov
mov
scas
cmp
mov
lret
push
add
cmp
fisubl
xchg
cmp
sahf
xor
mov
fstl
push
scas
out
cmpsb
jo
mov
std
mov
add
mov
add
imul
and
sbb
mov
add
add
mov
jae
mov
add
pop
insb
push
incb
add
and
push
ja
add
push
repnz
mov
mov
cmp
fsts
adcl
mov
sub
lret
ja
dec
test
sub
jno
cmc
test
add
mov
pushl
enter
push
jl
loopne
mov
jne
pop
add
mov
inc
push
lahf
cmp
ret
dec
and
add
sub
in
insl
inc
add
add
xchg
cmp
arpl
cmp
add
mov
mov
dec
dec
xchg
add
mov
mov
push
add
dec
popa
jg
push
popf
cmp
jnp
jl
out
add
add
cmpsb
adc
add
mov
jb
mov
or
rolb
mov
push
push
fisubl
add
out
mov
or
std
mov
add
add
rolb
mov
add
rolb
mov
scas
mov
add
push
add
je
test
mov
outsl
pushf
pop
mov
inc
add
cld
inc
cmpps
dec
or
cmpl
mov
into
push
add
scas
pop
call
mov
out
pop
stos
pop
mov
xchg
pop
and
mov
mov
es
inc
add
xor
lcall
aas
or
jo
mov
into
adc
f2xm1
add
ret
loop
mov
inc
sti
addb
inc
add
xchg
add
mov
mov
mov
add
jmp
add
daa
loopne
mov
js
mov
add
or
pop
stos
fs
mov
mov
jne
and
xor
mov
jg
lds
mov
mov
mov
jmp
adc
mov
ret
lret
mov
cltd
mov
pop
mov
imul
mov
mov
imul
lock
lahf
xchg
popa
je
ret
pop
dec
popa
mov
xor
pop
mov
dec
xor
mov
cltd
fs
mov
mov
fcoml
mov
cmp
insb
sldt
mov
mov
adc
mov
fisubs
add
mov
cltd
or
ja
rolb
xchg
sub
rcrl
jno
adc
adc
mov
addb
adc
adc
mov
xchg
loopne
mov
ds
mov
out
test
and
fnstenv
add
in
sbb
add
add
add
mov
sub
iret
into
cmp
ljmp
test
lods
movsb
xchg
inc
adc
cmpsl
mov
cwtl
pop
and
pop
mov
jno
add
shll
adc
mov
sarl
mov
push
mov
sub
or
and
mov
add
fnstsw
sbb
movsl
sahf
and
lods
xchg
add
lea
sahf
and
xchg
or
rolb
mov
icebp
jnp
loope
cwtl
mov
lods
and
mov
and
lods
or
lcall
jns
movsl
mov
test
sub
pop
adcl
fisubrs
xchg
jp
mov
mov
fsubrs
mov
mov
add
cmp
dec
xor
fs
push
cld
out
add
xchg
ret
call
add
mov
mov
xchg
jnp
in
imul
adc
mov
jge
rolb
add
push
sub
in
add
jl
dec
sbb
or
and
inc
mov
jle
and
xchg
mov
sbb
mov
js
arpl
mov
mov
mov
xchg
test
sub
pop
stos
test
rcll
dec
pop
mov
mov
add
jle
sti
ror
add
add
inc
add
mov
sub
pop
jnp
cmp
sub
decl
or
push
add
mov
dec
jl
add
add
mov
jno
and
push
fistl
add
pop
mov
sub
jp
cld
data16
lcall
inc
in
mov
cmp
cmp
fiaddl
mov
pop
jmp
in
ret
popf
inc
xchg
jo
mov
add
mov
jae
add
cmp
sbb
int3
mov
mov
into
jmp
adc
lock
lcall
mov
mov
insl
notb
push
outsl
mov
add
xlat
push
pop
adc
insl
sahf
push
mov
mov
add
mov
inc
lahf
cmc
cmp
push
in
cwtl
out
rorl
jp
cmpsl
pop
idivl
cmp
ret
in
adc
mov
add
add
addb
rolb
mov
add
in
add
mov
add
mov
insb
and
mov
leave
xor
pusha
add
push
xor
jmp
stos
mov
xchg
lahf
cmpsb
fpatan
xchg
pop
push
out
xor
add
out
in
es
xchg
jl
inc
ja
push
loope
inc
inc
addb
xor
jl
pop
push
pop
and
pop
xchg
cmpsb
push
gs
in
daa
sub
add
repnz
mov
xor
mov
stos
add
inc
mov
mov
add
add
cmpsb
jge
ret
pop
dec
mov
add
fldenv
mov
mov
mov
das
jno
in
divb
jae
test
mov
mov
add
jl
rolb
mov
lcall
inc
xor
mov
mov
xchg
outsb
and
dec
loope
cmp
add
addb
adc
mov
out
or
aad
fs
push
pop
cmp
sub
sub
add
out
add
inc
add
enter
add
movsl
out
add
mov
add
das
push
cmpsl
add
mov
bound
mov
mov
repz
dec
inc
mov
mov
ficompl
add
lock
cmp
add
add
bound
mov
imul
mov
mov
cli
cmp
push
mov
mov
cmp
add
mov
add
fcomp
xchg
ret
enter
add
dec
addr16
sbb
pop
mov
push
jbe
lahf
rolb
mov
addb
dec
nop
add
mov
ds
mov
das
lret
sub
fs
xchg
stos
js
sub
movl
sti
pop
insb
mov
test
fistl
cmc
jae
dec
add
mov
add
addr16
popf
fiaddl
outsl
mov
mov
ljmp
mov
sub
mov
fs
add
bound
mov
add
outsl
xchg
push
mov
mov
in
dec
jecxz
mov
imul
incl
push
push
add
push
jne
mov
or
test
mul
dec
sub
addb
addb
test
and
mov
daa
dec
jmp
inc
clc
add
iret
fistl
je
mov
add
call
idiv
fcomps
xchg
popa
jo
mov
pop
xlat
aad
mov
pop
repnz
xor
adc
mov
dec
cmp
jns
xlat
dec
lods
pop
xor
and
add
imul
jp
add
lea
add
mov
mov
out
sub
jns
pushf
loop
mov
insl
inc
jo
mov
mov
jb
mov
inc
sub
out
aas
and
mov
ret
inc
je
sahf
pop
lea
adc
iret
jo
mov
das
jo
mov
push
loopne
mov
mov
or
addb
xchg
out
and
repz
jecxz
pushf
inc
cmp
lret
and
add
out
jl
mov
add
add
dec
mov
repnz
push
xchg
aam
jmp
std
add
add
movsl
adc
add
pop
fmull
mov
jne
into
daa
pop
aaa
add
mov
xchg
sub
cltd
lea
movsb
fisubrl
cmp
and
add
add
mov
mov
pop
stos
or
addb
push
and
dec
pop
mov
sbb
mov
mov
push
gs
scas
jecxz
mov
add
add
rol
cwtl
mov
add
inc
clc
mov
insb
loop
mov
or
jmp
xchg
call
in
push
add
fsubp
add
mov
imul
pop
test
out
pop
cmpsb
lahf
jo
mov
mov
add
add
mov
addr16
outsl
add
ret
xchg
xor
add
add
jnp
add
mov
add
fbld
inc
add
add
mov
mov
mov
mov
mov
cmc
pop
mov
jge
cmp
push
movsb
mov
add
mov
stos
adc
mov
cmp
fldcw
lret
and
mov
push
add
jecxz
sub
imul
inc
or
or
adc
mov
or
int3
xor
jbe
xchg
inc
icebp
arpl
mov
int
xor
dec
addb
ss
ret
xor
add
in
push
cmp
add
mov
mov
mov
sti
ja
stos
add
jne
loope
int3
mov
test
mov
lret
dec
xor
and
mov
add
pop
jno,pn
mov
jb
mov
mov
lea
add
mov
add
rolb
mov
inc
cli
mov
out
or
ljmp
inc
dec
or
addr16
xchg
aam
add
mov
mov
loop
mov
mov
mov
cmp
mov
mov
testb
mov
addb
push
push
loopne
mov
adc
mov
and
fwait
out
and
lods
cld
pop
dec
mov
call
fistl
add
mov
push
stos
pushf
mov
pop
sti
fadd
pop
pop
push
sbb
lds
jecxz
cwtl
sub
xchg
dec
lods
or
mov
jg
mov
aam
in
lea
xor
or
mov
push
fisttpl
xchg
pop
jle
hlt
push
adc
mov
add
test
into
test
add
add
mov
fstps
add
sub
cwtl
movsb
mov
mov
cmpsl
mov
mov
push
pop
out
dec
sti
lods
mov
add
xor
mov
sub
mov
lock
or
jmp
add
outsl
mov
mov
cmp
mov
and
mov
sahf
aad
call
mov
aad
cmp
aam
sub
ret
adc
clc
lret
mov
sub
add
pop
xor
jns
push
inc
add
mov
push
add
cmpsl
add
mov
dec
dec
jb
mov
xchg
fs
mov
jo
mov
jo
mov
add
bound
mov
fsubrp
push
js
cmp
fmulp
pusha
add
and
inc
pop
mov
mov
add
cltd
push
push
jno
xchg
add
lock
iret
loope
jecxz
xor
mov
mov
add
lcall
lods
dec
and
add
out
mov
fwait
daa
loopne
mov
xchg
shrl
add
pop
sub
push
lea
cmp
add
cmp
add
and
add
jle
jne
xor
jg
mov
and
aam
je
push
imul
add
mov
mov
mov
mov
pop
xchg
mov
add
aam
pop
ss
xor
mov
in
mov
jmp
xchg
jne
jmp
enter
mov
addb
and
mov
adc
cli
sbb
andl
and
lcall
ret
xor
outsb
leave
mov
jp
add
dec
mov
add
mov
rolb
rorl
fwait
sub
sub
add
inc
add
push
movsb
mov
lock
shll
add
adc
aaa
stos
fsubrs
add
xchg
insl
jg
inc
add
add
mov
xor
cmp
insl
sbb
mov
pop
add
adc
inc
lods
insb
mov
mov
test
cmp
and
dec
lock
stos
xchg
int3
push
jnp
hlt
stos
inc
pop
dec
data16
fistpl
mov
fsub
test
xchg
mov
mov
push
pop
clc
pop
lods
outsb
ja
pop
stos
mov
xchg
es
mov
mov
mov
mov
and
mov
inc
add
mov
sub
push
lock
clc
sbb
cmc
adc
mov
shl
jno
mov
dec
mov
add
out
xor
xchg
hlt
lock
int
add
add
fimuls
jbe
mov
push
add
add
pop
pushf
cmc
nop
add
adc
mov
push
call
mov
insl
inc
add
add
add
dec
mov
loope
add
dec
sub
mov
ss
add
mov
sbb
ds
ds
aam
inc
sub
mov
sbb
jmp
add
mov
add
jnp
add
mov
mov
or
ds
and
sbb
dec
stos
inc
call
xchg
cld
addb
rolb
mov
insl
sysenter
jno
push
imul
cmp
outsl
adc
pusha
add
mov
add
sbb
mov
add
mov
fmuls
and
mov
out
shll
add
mov
add
sbb
add
mov
insb
adc
cs
xchg
mov
mov
test
mov
shrl
jne
inc
add
mov
add
add
fnstcw
call
add
mov
mov
lods
rcrl
xor
mov
adc
pop
mov
dec
xchg
xor
into
cmpsb
inc
add
mov
mov
dec
jmp
add
add
add
ds
xchg
inc
adc
mov
icebp
xchg
lods
jae
push
add
mov
inc
add
sbb
leave
xchg
es
insl
and
mov
rolb
repnz
mov
mov
js
dec
adc
push
and
pop
push
xchg
add
mov
push
cwtl
adc
adc
mov
mov
mov
fiaddl
or
mov
aam
add
ljmp
dec
push
sbb
jmp
jne
cmp
lahf
mov
mov
add
loope
add
sti
add
mov
add
add
sbb
adc
add
add
mov
cmp
add
sub
add
pop
xchg
push
xor
xadd
mov
outsl
loop
mov
mov
xchg
add
sbb
pushl
mov
mov
adc
mov
mov
mov
jnp
add
mov
sti
repnz
mov
bound
mov
gs
rcll
mov
mov
and
std
xor
mov
arpl
add
mov
dec
and
std
pop
push
nop
add
mov
add
addb
inc
in
imul
mov
mov
leave
lods
fcomps
rolb
mov
rolb
mov
aas
mov
mov
mov
mov
mov
or
cmp
mov
mov
call
addb
movsb
scas
and
lret
mov
mov
icebp
and
mov
outsb
clc
out
cmp
mov
pop
jl
push
add
cmp
jmp
leave
pop
xchg
pusha
add
pop
inc
xchg
mov
xor
movsl
arpl
add
cmpsb
sbb
lods
add
mov
pusha
add
movsl
mov
lea
lret
and
ss
mov
add
cmc
cmp
xlat
inc
ret
hlt
scas
fwait
cmp
mov
cmpsl
or
xchg
rol
arpl
push
jbe
ja
icebp
dec
sti
sub
add
xchg
pop
sahf
xor
mov
xorl
insl
test
int3
pop
sbb
repnz
cmp
add
daa
in
gs
outsb
jl
faddl
jo
mov
mov
add
mov
les
jp
rolb
mov
mov
add
mov
mov
and
xchg
add
inc
dec
cmp
mov
mov
das
ja
mov
or
std
pop
loopne
mov
sub
add
sub
add
aad
xlat
xchg
fsubrs
rolb
mov
add
mov
es
add
cmp
test
add
gs
push
pop
mov
add
mov
push
xchg
js
test
fiadds
into
fwait
mov
mov
bound
mov
xor
mov
add
je
jecxz
adc
mov
jbe
mov
and
jecxz
sub
add
jnp
inc
add
add
mov
mov
add
add
add
clc
ret
cmp
add
dec
mov
aas
xor
mov
mov
jnp
jmp
in
out
pusha
add
xchg
add
inc
add
dec
sub
cmp
xchg
fldenv
mov
lahf
js
mov
aam
jle
add
outsl
fdivr
mov
or
xchg
leave
mov
insb
pop
cmp
shll
dec
nop
add
mov
sub
test
jl
popf
pop
icebp
dec
or
push
bound
mov
adcl
iret
jbe
pop
cmpsb
sub
add
dec
lret
outsl
into
fisubl
cmp
in
add
mov
gs
addr16
mov
jge
test
lods
add
mov
mov
add
mov
dec
or
imul
xor
fistpl
pop
pop
cmp
hlt
sbb
sub
or
bound
mov
gs
jp
add
pop
dec
mov
fbstp
es
jg
xor
mov
mov
adc
adc
sbb
add
mov
scas
sarl
add
arpl
add
jmp
pushf
pop
ret
push
and
iret
fcoml
cmpsl
jl
lods
scas
xlat
xchg
jge
xchg
lret
mov
dec
jb
mov
mov
fldcw
and
add
dec
js
add
cmpsl
jno
cmp
lods
nop
add
add
mov
repnz
and
rorl
add
insl
out
arpl
in
add
addb
push
xor
dec
fbld
xchg
fisubrs
sub
add
cmp
mov
mov
add
push
into
frstor
jno
push
mov
in
stos
mov
sub
movb
xchg
dec
or
mov
std
sbb
repz
fadds
mov
jns
add
stos
jl
add
add
out
push
inc
movsb
aad
rcll
hlt
out
jb
mov
inc
add
pop
cmp
push
fldt
fsts
mov
cmp
jmp
add
mov
xchg
lret
add
xchg
mov
mov
cld
lods
mov
push
and
sbb
and
mov
icebp
sub
add
xor
hlt
fists
addr16
inc
add
imul
mov
pop
dec
pop
mov
add
cmp
mov
pop
fwait
xchg
fdivp
add
mov
xchg
sbbl
push
iret
add
mov
or
ss
mov
scas
call
sbb
add
call
xlat
movb
in
adc
mov
add
add
mov
mov
out
xchg
cwtl
sub
add
cmp
mov
mov
adcl
mov
rolb
mov
rolb
mov
notl
adc
bound
mov
sbb
into
lcall
add
add
add
test
bound
mov
loopne
mov
add
jne
xor
leave
sub
fnstsw
aas
nop
add
addb
and
jg
das
pusha
add
cmpsl
movsb
push
mov
rolb
xchg
loopne
mov
leave
xchg
sub
mov
pop
mov
mov
pop
rolb
mov
add
imul
subl
adc
xchg
popa
sub
lcall
outsl
push
mov
nop
add
out
cmp
mov
cs
int3
addb
mov
mov
add
mov
in
dec
dec
inc
add
add
call
push
aas
test
add
mov
push
mov
rolb
mov
lds
mov
sti
dec
sbb
sub
dec
or
call
sbb
mov
out
dec
daa
mov
inc
add
pop
enter
xlat
cli
loop
mov
mov
sbb
xor
fists
mov
xchg
lods
fcoml
adc
mov
sbb
mov
mov
jecxz
mov
inc
inc
add
cmp
pop
in
popf
repz
sub
adc
cmp
inc
icebp
inc
stos
pop
or
push
add
jbe
call
xchg
add
in
fcoml
nop
add
sbb
sub
ret
and
mov
popf
popf
cld
dec
fs
cmpsl
mov
inc
add
push
js
rolb
mov
fcmovne
imul
mov
mov
pusha
add
out
insb
notl
cmpsb
std
out
jl
mov
xor
add
mov
mov
push
push
push
inc
add
sbb
or
xor
mov
mov
lahf
sbb
test
inc
sbb
add
mov
loop
mov
addb
bound
mov
test
mov
add
inc
dec
and
cmp
rolb
adc
int3
inc
add
push
jmp
jle
aam
cmc
loope
dec
ja
cmp
mov
add
cltd
sbb
mov
out
pop
xor
fcoml
push
push
xchg
jno
dec
cmc
add
xor
data16
pop
dec
mov
add
movsb
sub
enter
in
cwtl
outsl
xchg
pop
pop
dec
cmp
cmpsl
enter
imul
sbb
add
cmp
xchg
push
cld
cmp
in
push
mov
shll
fidivs
dec
ffree
in
add
mov
mov
mov
mov
mov
clc
xor
mov
dec
jl
xor
add
pop
rcr
out
sbb
push
add
mov
xor
mov
push
mov
dec
test
jno
popf
daa
dec
stos
lret
test
insl
dec
dec
xor
mov
inc
pop
test
insl
mov
xor
pop
or
sti
enter
pop
iret
enterw
sub
mov
mov
pop
movsl
sbbl
push
push
sub
cmp
cltd
or
stos
push
add
and
incb
pop
push
jns
jle
cmp
scas
xor
movsb
sbb
movsb
mov
ret
dec
and
add
xor
mov
or
inc
add
mov
cmp
pop
in
add
std
addb
fidivl
imul
mov
mov
jge
xchg
and
mov
jnp
pop
and
lahf
stc
sub
ds
add
aaa
push
and
push
push
mov
mov
cli
jbe
dec
cs
jbe
pop
lods
leave
cmp
adc
out
test
sbb
test
dec
fmull
in
add
cltd
dec
sub
add
adc
ja
lds
mov
mov
je
xchg
fisubrl
stos
mov
xlat
jecxz
mov
insb
mov
push
sbb
jmp
out
mov
lods
jl
mov
mov
add
das
hlt
dec
cwtl
jle
in
ljmp
pop
fadds
movsl
mov
sbb
jle
xchg
push
arpl
mov
lock
mov
add
mov
mov
or
lea
jl
rcl
add
cmp
jl
aam
flds
add
fcomip
lods
rolb
test
ret
aaa
mov
jl
add
pop
pop
or
mov
push
and
mov
or
add
dec
lcall
add
mov
dec
stc
outsb
dec
movsb
xchg
adc
mov
inc
stos
test
add
cmp
mov
mov
mov
aas
call
in
sahf
inc
mov
adcl
inc
std
imul
test
or
add
mov
mov
mov
ss
pop
mov
jg
cmp
xor
mov
rolb
bound
mov
stos
insl
dec
xor
jmp
imul
dec
fs
int3
or
sbb
ss
into
int
leave
adc
fwait
div
add
movsl
addb
setb
mov
add
insb
roll
out
sbb
addb
mov
pop
mov
mov
mov
lsl
add
aam
out
or
add
cwtl
int3
xor
or
scas
xchg
insl
cmc
in
sahf
sarl
xchg
pusha
add
ljmp
stc
aas
into
inc
cmp
sbb
xchg
add
or
push
sbb
lcall
jg
add
mov
jne
bound
mov
mov
rolb
mov
je
aas
xchg
add
mov
cmpsl
add
subl
dec
mov
les
push
mov
inc
mov
pop
push
cmp
jl
mov
mov
mov
insb
xor
pop
dec
outsb
addr16
mov
aad
aaa
ret
xor
mov
int3
mov
scas
xchg
stos
push
dec
jb
mov
outsl
lahf
xor
add
mov
adc
jg
loopne
mov
sbb
pusha
add
dec
mov
mov
jnp
test
jno
out
psraw
ss
std
sbb
jl
dec
and
add
add
imul
cltd
insb
pop
jae
cmp
scas
jp
mov
cmpsb
inc
add
push
nop
add
or
jnp
addb
adcw
add
imul
add
mov
mov
dec
sbb
add
add
mov
lret
call
add
in
sub
dec
push
jg
popf
daa
push
jb
mov
loopne
mov
lahf
fldt
cmp
in
add
mov
add
sbb
add
in
jne
mov
add
mov
add
xchg
stos
pusha
add
xor
mov
add
and
in
or
mov
je
xor
push
out
leave
int
mov
dec
pop
xchg
add
add
mov
jp
mov
mov
nop
add
out
imul
add
add
outsb
push
mov
jecxz
roll
add
mov
dec
jne
mov
xor
xchg
nop
add
jno
push
push
movsl
sti
das
xlat
mov
cmp
mov
rolb
mov
mov
leave
xchg
out
lock
mov
pop
out
jnp
loope
arpl
decl
jmp
add
add
int
or
fiaddl
add
add
add
add
mov
mov
iret
adc
nop
add
addb
sub
inc
les
inc
and
rolb
mov
sahf
sahf
push
mov
mov
add
add
mov
ss
push
inc
add
add
cmpsb
rcl
add
add
movsb
sbb
add
mov
es
scas
xor
add
js
lret
xchg
test
mov
mov
pop
arpl
in
dec
repz
hlt
lahf
fs
icebp
jno
ja
sbb
cmp
repnz
mov
inc
mov
dec
jp
or
addb
mov
sbb
dec
inc
inc
cmpsl
pop
or
clc
adc
out
imul
dec
xor
add
cmp
pop
lods
pop
shll
mov
add
cmpsb
push
data16
lahf
and
mov
push
xchg
inc
xchg
scas
xchg
out
push
aam
add
mov
bound
mov
gs
addb
in
jmp
add
mov
mov
and
mov
lahf
pop
inc
and
mov
push
or
push
addb
or
inc
ret
jge
js
mov
mov
aas
loop
mov
inc
add
add
adc
mov
dec
out
outsl
ficomps
cs
sti
jo
mov
inc
add
mov
outsb
js
push
insb
jo
mov
call
addr16
out
sub
xchg
rolb
fwait
aam
js
loopne
mov
cli
sub
cltd
fdivs
inc
mov
mov
lds
mov
mov
mov
push
cmp
inc
shrl
aaa
popf
fistps
and
lret
mov
sub
push
cld
inc
and
add
cmp
pop
xchg
pop
rolb
test
mov
add
pop
cld
icebp
aaa
push
add
test
xchg
add
addr16
cli
loop
mov
out
pop
mov
add
imul
int
test
mov
fistpll
mov
mov
cmpsl
xchg
cmp
add
or
xor
mov
push
mov
pop
in
xchg
inc
push
add
leave
mov
or
mov
out
xor
out
mov
fimuls
mov
xchg
fdivrl
add
cmpsl
mov
sub
mov
jl
popf
in
add
and
sbb
lret
push
mov
add
mov
mov
sti
or
dec
or
cs
push
jl
mov
fs
xor
mov
insb
test
dec
jae
pop
in
xor
mov
add
cli
pop
sub
scas
in
in
cmc
sbb
mov
repnz
dec
push
cmp
jmp
mov
push
fildl
jecxz
xor
jle
lock
cmp
rolb
mov
jecxz
sbb
xor
mov
mov
movsl
call
ss
jmp
fdivl
leave
mov
addr16
push
cmpsl
push
xchg
pop
add
test
xchg
lds
mov
add
in
adc
ret
iret
xchg
jg
ljmp
out
es
dec
aam
jle
adc
push
mov
push
cmp
push
ss
movsb
mov
mov
dec
pushf
jb
mov
add
mov
mov
mov
mov
mov
fwait
dec
mov
jp
add
mov
sahf
ret
inc
and
movsb
or
sub
cmpsl
jg
add
pop
sti
out
add
ret
jg
loop
mov
mov
clc
ret
xchg
and
daa
xchg
sub
and
add
mov
xor
dec
xor
mov
popa
jno
adc
mov
cmc
repz
mov
sbb
ja
and
mov
fnstsw
mov
repnz
outsb
test
dec
jp
push
jmp
add
xchg
ds
cwtl
andl
ljmp
mov
push
add
imul
mov
shrl
mov
push
test
out
lods
jae
out
popa
lahf
adc
pop
sub
push
lahf
or
cmp
mov
in
stc
push
inc
xchg
add
pop
push
pop
dec
add
and
out
mov
cmp
jbe
rcl
addb
scas
sti
arpl
repz
cmp
add
mov
pop
adc
mov
push
xchg
loop
mov
sbb
cs
ds
test
add
mov
jl
and
mov
push
pushf
out
jecxz
ljmp
dec
cmp
add
jbe
aam
add
and
mov
cmp
push
std
sbb
pop
adcl
dec
xchg
pop
sbb
test
mov
fldt
data16
jge
jnp
sbb
mov
add
fimuls
mov
jg
add
xor
mov
add
outsb
and
add
xor
daa
lret
push
add
daa
cmp
xchg
sub
rolb
mov
andl
add
mov
mov
add
mov
mov
mov
mov
insb
insb
sub
mov
cmpsb
in
je
or
add
and
mov
out
iret
jp
mov
setne
adc
jecxz
add
sub
jae
imul
popf
mov
rolb
mov
ret
jno
pop
fisttps
mov
add
sbb
rcrl
rolb
mov
and
mov
ret
dec
fistpll
inc
add
cmp
mov
add
inc
imul
call
inc
lea
sbb
rolb
and
pusha
add
aam
pop
pop
aam
adc
mov
push
xchg
mov
je
or
add
xor
mov
xlat
enter
add
lock
or
clc
in
push
dec
lcall
mov
mov
pop
int
pop
rcr
add
xchg
lods
aam
pop
ds
push
fisttpl
aad
pop
enter
test
dec
imul
mov
jb
mov
jne
inc
cmp
add
jae
lahf
std
clc
inc
shll
mov
sub
and
scas
rolb
mov
scas
xlat
stos
rolb
mov
add
sbb
add
ret
xchg
inc
ljmp
mov
dec
push
ss
fdivr
push
hlt
pop
jb
mov
lcall
add
and
mov
xchg
fisttps
jbe
xchg
cmc
mov
je
push
cmpsl
dec
clc
cmp
mov
mov
pop
and
add
push
fimull
push
adcl
fsub
sub
cwtl
mov
lea
mov
mov
fcmovu
adc
mov
ficompl
movsl
daa
leave
and
add
aaa
or
adc
fsubl
scas
dec
imul
insb
lea
pop
sub
add
xor
in
push
loopne
mov
pop
movsb
mov
mov
mov
mov
add
sbb
pop
push
mov
int
aam
jns
xchg
sub
aas
fisubs
lcall
jp
jecxz
mov
cmp
mov
std
and
xor
mov
add
shlw
mov
dec
xchg
in
in
add
mov
or
icebp
push
pop
cli
inc
loope
sahf
icebp
scas
xchg
popa
cwtl
push
and
int
push
cmp
int
add
dec
addb
ss
jle
sub
in
stos
test
add
xor
fwait
out
inc
add
cwtl
mov
decb
cmc
in
int
outsl
fs
xchg
push
mov
divl
dec
enter
or
addb
lods
pop
and
mov
mov
mov
loope
dec
cltd
addb
mov
lods
ret
addb
add
mov
adc
mov
add
pop
fsts
mov
not
xchg
add
inc
nop
add
cltd
xchg
add
lods
jecxz
fidivrs
test
mov
in
jp
add
or
roll
add
push
add
jp
lcall
not
and
mov
arpl
jmp
lret
nop
add
or
add
xchg
add
mov
cmpsl
fwait
mov
out
nop
add
xchg
fucomi
sub
pushf
in
clc
cmp
add
fnstenv
add
inc
add
add
addb
sbb
rolb
mov
mov
add
es
jno
push
sbb
and
clc
push
pusha
add
add
add
enter
and
mov
imul
mov
pop
mov
cltd
stos
or
inc
push
lret
cs
xor
dec
and
pop
mov
shlw
add
push
aam
ret
pop
push
or
jbe
pop
dec
je,pn
divb
mov
push
xchg
in
aam
pop
mov
enter
addb
cmc
cmpsb
js
rolb
mov
out
push
add
mov
or
lahf
push
xor
mov
ficompl
push
add
mov
push
lret
icebp
jmp
mov
add
js
sti
add
mov
aaa
jl
daa
mov
mov
fistps
or
jg
sub
fcoms
jg
jl
bound
mov
add
mov
add
push
dec
test
das
mov
sbb
xchg
sbb
add
popf
sub
cltd
in
cmp
clc
add
mov
pop
xchg
add
arpl
sub
mov
pop
jmp
cmp
xchg
add
add
cmp
add
lods
and
xor
mov
cmpsb
stos
lret
cmp
addb
push
add
in
repnz
cmp
scas
push
lcall
nop
add
popa
sti
mov
stc
testb
cmp
mov
arpl
sub
push
jne
outsl
inc
add
add
scas
add
mov
test
setb
mov
mov
mov
dec
loope
add
ss
das
aad
js
ss
into
stos
mov
adc
mov
mov
mov
mov
test
xor
daa
dec
fcmove
xchg
hlt
cmp
rolb
mov
dec
or
mov
and
mov
dec
pop
data16
mov
data16
add
mov
add
xchg
mov
push
adc
mov
lret
fldl
mov
test
cmp
or
mov
pop
jecxz
int
pop
push
xor
adc
inc
add
repz
loope
lret
lcall
push
add
add
in
push
inc
aad
fists
mov
insl
pop
push
add
sbb
add
jmp
add
mov
add
jbe
sub
mov
sbb
mov
add
mov
add
incb
xchg
lds
arpl
mov
movsl
stos
pop
jmp
xchg
dec
aas
addb
add
add
cld
adc
mov
ss
jmp
decb
mov
dec
mov
stos
outsb
cmp
add
pop
test
pop
xchg
add
int
add
or
jg
add
mov
test
xor
mov
stos
and
mov
ja
cmp
push
icebp
push
pushf
push
icebp
inc
cmp
fcompl
jmp
repz
js
or
jg
add
mov
jbe
mov
xchg
jmp
cmpsb
dec
pop
adc
bound
mov
cmp
mov
add
mov
mov
lock
push
ret
and
jge
inc
cmp
jle
or
jno
mov
push
pop
inc
cli
sub
mov
loope
clc
pop
cs
movsb
jb
mov
or
inc
add
jns
insl
jnp
mov
push
insl
sahf
lds
add
mov
out
les
jbe
inc
add
je
cmpsb
pop
cmp
mov
frstor
mov
idiv
call
cmp
or
mov
int3
xchg
xor
lcall
xchg
adc
hlt
add
sbb
leave
clc
call
pop
test
mov
pop
fidivl
mov
das
mov
xchg
jg
push
jge
push
fidivrl
fs
xchg
add
loope
lods
sbb
arpl
push
lret
dec
cli
data16
das
sbb
mov
mov
pop
bound
mov
inc
xchg
out
add
mov
mov
ds
incl
aad
repnz
pop
daa
adc
push
add
test
sub
sub
addb
xorl
mov
xor
mov
ljmp
mov
out
test
mov
sub
mov
ret
cmp
jb
mov
dec
dec
mov
mov
divb
dec
lods
les
stos
rolb
mov
iret
add
jl
xor
ret
lret
ss
mov
cld
cld
sbb
jbe
mov
pop
mov
int3
addb
pop
out
mov
push
aaa
out
stc
sub
pop
fists
scas
ljmp
push
push
mov
pop
mov
add
push
add
mov
add
push
push
mov
jb
mov
jae
fnsave
add
mov
add
mov
mov
pop
lcall
sub
add
test
fsts
mov
cmp
push
stos
xchg
or
mov
mov
mov
shrl
add
sub
mov
add
cs
add
mov
jge
lea
mov
or
rolb
mov
cmpsl
dec
xor
negl
push
xchg
xchg
xchg
mov
mov
xchg
fisttps
cli
cld
xchg
push
add
mov
arpl
jnp
rolb
mov
inc
sub
inc
std
cltd
jmp
mov
aaa
xchg
movsb
jb
mov
jg
jne
fdivs
cmp
popa
clc
cwtl
mov
cmp
idiv
dec
and
inc
add
adc
add
int
mov
fsubrl
add
mov
loop
mov
mov
mov
push
pop
dec
imul
sbb
add
jge
add
jmp
std
loope
mov
enter
loope
sbb
mov
loopne
mov
add
xor
mov
mov
add
mov
mov
add
mov
add
add
pop
push
dec
sbb
daa
imul
pop
dec
push
mov
push
push
in
lea
jnp
inc
mov
stos
fbld
mov
sbb
jge
push
rcrl
mov
mov
mov
out
inc
es
negl
or
push
add
xor
imul
dec
mov
mov
mov
mov
lods
lret
mov
mov
fisttpll
pop
pop
xchg
sahf
lods
in
mov
cmp
and
lock
add
addr16
add
pop
xlat
std
sub
fdivs
add
mov
cwtl
cmp
push
xor
mov
push
mov
or
add
sbb
in
sbb
movsl
movsl
mov
mov
pop
mov
mov
lahf
aad
add
xor
add
push
jb
mov
mov
add
and
iret
sub
cltd
jb
mov
shl
add
inc
add
test
jge
add
aas
in
sub
add
fwait
add
xor
and
xchg
and
orl
push
mov
cmpsb
jns
insl
cmpsl
sbb
lahf
cmp
sub
sahf
xchg
fwait
or
mov
mov
cwtl
adc
scas
inc
add
sub
xchg
push
mov
aad
add
add
insl
pop
dec
and
xor
mov
inc
add
add
add
mov
call
lds
jp
clc
mov
mov
movsb
mov
lock
pushf
mov
pop
data16
pop
scas
jnp
pop
dec
es
mov
out
add
pushf
and
data16
mov
add
popl
push
mov
rolb
mov
inc
dec
sub
fmull
data16
add
out
in
das
inc
add
xchg
fsubr
shll
mov
mov
mov
cli
add
cli
xor
addb
negb
scas
les
add
mov
inc
ret
push
and
dec
or
add
add
dec
adc
lods
xchg
add
dec
scas
imul
mov
pop
mov
leave
xchg
out
push
add
ficoms
mov
push
add
xchg
arpl
mov
mov
mov
dec
cmp
cmp
add
mov
pop
push
jp
ljmp
add
pop
sub
sahf
imul
inc
and
jne
ds
sbb
adc
add
push
add
cld
std
dec
mov
mov
mov
mov
mov
cwtl
ret
adc
rolb
mov
lock
mov
add
mov
mov
mov
addb
push
add
mov
mov
add
lcall
cwtl
ja
idiv
ficompl
push
add
out
stos
jae
add
mov
out
jno
cmp
les
xchg
push
dec
aad
jge
jnp
add
add
into
mov
sbb
cwtl
xchg
mov
adc
sub
mov
dec
das
xor
lea
and
test
xchg
xchg
cmp
lret
pop
popf
rolb
jg
shll
add
add
icebp
repz
mov
sub
add
imul
fld
mov
sti
das
and
lret
adc
jnp
or
mov
aas
xchg
pop
sbb
mov
mov
mov
mov
xchg
add
add
add
add
ljmp
xor
mov
in
or
int
ljmp
add
mov
jae
add
rcrl
dec
xchg
add
push
add
popf
jmp
push
inc
jl
test
mov
add
or
adc
ret
mov
xlat
decb
add
lret
js
dec
and
adc
mov
mulb
adc
mov
add
mov
daa
pop
push
aam
push
cmp
mov
xor
cmp
ljmp
push
or
or
hlt
in
add
mov
mov
dec
fidivs
adc
mov
loop
mov
aam
mov
sbb
in
cmp
dec
out
leave
adc
popa
dec
xchg
mov
dec
mov
mov
push
xor
insl
push
push
jbe
inc
cmpsl
xchg
scas
jmp
jecxz
push
mov
in
add
aam
or
push
dec
mov
adc
mov
cld
fs
add
xchg
and
xor
mov
ret
bound
mov
dec
add
js
add
rolb
mov
and
push
add
add
add
js
mov
mov
out
in
popa
sub
mov
addb
sbb
xor
jmp
sbb
sub
stos
xchg
or
scas
xor
hlt
jne
mov
sbb
add
roll
add
add
mov
sub
push
jecxz
clc
mov
ja
mov
lea
add
add
add
mov
repz
ds
imul
dec
fisttps
inc
xor
mov
test
mov
mov
test
mov
mov
cli
cmp
test
add
jle
add
lahf
std
mov
add
mov
test
add
mov
rcr
pop
mov
sbb
mov
add
fwait
mov
mov
jbe
clc
sub
jle
jle
js
enter
add
add
pop
xlat
mov
inc
out
cmp
sbb
ljmp
jne
cmp
mov
dec
jmp
cmp
mov
pop
cwtl
add
bound
mov
orl
add
stc
mov
movsl
daa
cmpsb
sbb
jae
push
xor
push
sbb
lret
pop
cmp
or
aaa
xor
cmpsl
ja
ss
mov
out
cli
mov
push
dec
ja
test
gs
or
mov
jbe
push
xlat
addb
mov
int
out
cmp
inc
add
mov
fbstp
and
mov
dec
sbb
and
addb
sub
insb
dec
mov
mov
popf
xchg
xlat
push
push
add
stos
addb
aad
int3
rolb
xor
cli
fs
mov
jbe
call
mov
popa
jl
jl
mov
shrl
mov
sbb
clc
xchg
jns
hlt
hlt
inc
add
insb
cmp
scas
inc
add
inc
aas
xlat
jge
mov
mov
cli
loopne
mov
popf
repnz
push
jbe
mov
test
das
cs
aas
clc
push
sbb
sub
mov
mov
mov
mov
rolb
mov
in
mov
mov
mov
add
mov
mov
jg
insb
pop
fldl
outsl
mov
mov
ret
push
add
je
push
call
lock
into
push
sbb
dec
pop
sub
add
stos
jne
mov
or
xchg
mov
pop
sahf
adc
mov
mov
jnp
lods
push
xor
mov
push
bound
mov
mov
hlt
jge
cmp
sub
jnp
movsl
inc
ficoml
pushl
pop
jbe
fdiv
outsb
js
bound
mov
pop
sahf
or
add
call
add
inc
lcall
pop
flds
cwtl
ret
mov
add
adc
shll
mov
push
xchg
add
sbb
lods
lods
popf
fists
add
cmp
pop
jge
stc
sbb
in
and
sub
enter
add
or
and
mov
movsb
repnz
ret
call
jo
mov
or
call
das
in
arpl
aaa
int
adc
mov
fcomip
jmp
icebp
and
mov
addb
lahf
fs
dec
in
inc
xchg
sbb
sbb
lods
stos
insb
mov
lds
mov
nop
add
leave
movsb
loopne
mov
add
mov
daa
mov
fbld
mov
leave
call
out
jp
add
add
and
rolb
mov
add
xchg
jl
push
aas
in
cmp
icebp
add
push
xor
or
es
or
add
jns
out
ljmp
sbb
push
cmp
pop
in
xor
push
outsb
ss
ja
scas
add
push
dec
movsl
add
mov
pusha
add
hlt
hlt
xchg
adc
aaa
cmp
frstor
fildll
or
into
movsb
cmp
add
cltd
mov
fwait
jbe
sbb
leave
lods
mov
mov
cmp
mov
cld
pop
cmp
sti
int
xor
cmpsl
pop
mov
pushf
cmp
cmp
add
or
add
jno
add
jl
push
rolb
dec
jle
rcll
add
stc
xchg
mov
mov
jge
sbb
frstor
sbb
and
push
cltd
sarl
cmc
fstl
aam
mov
add
mov
lret
ss
mov
mov
test
add
mov
add
push
mov
sub
jns
push
sub
jp
fisttpl
inc
jnp
xchg
rolb
mov
fldcw
and
mov
mov
mov
mov
jae
jp
mov
add
mov
fdivrs
cmp
stc
xor
lds
add
push
add
out
es
aam
sbb
ljmp
dec
addb
mov
cmp
lea
popa
xchg
sahf
mov
dec
mov
mov
mov
data16
jns
add
jp
inc
or
xchg
push
add
add
test
mov
sbb
bound
mov
cwtl
addb
adc
mov
push
pop
sub
mov
inc
add
mov
cmp
lock
pop
fs
adc
dec
icebp
mov
jl
adc
mov
ds
jmp
mov
add
rolb
mov
mov
inc
mov
dec
adc
loope
push
add
adc
or
and
je
sbb
sti
mov
and
mov
xchg
ja
stos
rolb
mov
and
mov
mov
push
insb
adc
ret
aad
insl
pop
inc
add
add
xor
xlat
mov
push
add
push
inc
add
add
pop
pop
movsl
icebp
jp
fdivl
fwait
pop
sbb
add
add
add
or
lods
add
insl
lahf
js
push
add
mov
or
dec
add
popa
in
adc
sarl
add
or
add
cmp
add
inc
add
mov
stos
push
adc
mov
xlat
jno
add
sbb
add
mov
add
dec
xlat
jmp
lods
xchg
sub
movsb
add
jo
mov
into
rcr
lcall
arpl
mov
jno
cmp
testl
add
aam
es
xchg
jge
test
adc
test
xchg
dec
les
xor
mov
adc
add
inc
add
inc
add
sub
xchg
mov
fadd
add
mov
addr16
mov
sub
ds
rolb
mov
mov
in
dec
jg
and
mov
cmp
sub
adc
mov
inc
add
push
add
and
jbe
add
or
sbb
in
dec
in
add
aaa
aam
add
mov
and
mov
nop
add
cmp
movsl
mov
xchg
dec
push
mov
add
add
and
mov
jne
inc
aaa
jp
loop
mov
rolb
mov
mov
xchg
mov
stos
popa
cmp
add
ss
cmpsl
adc
xlat
cltd
js
add
mov
or
add
ds
mov
mov
popf
adcl
pop
aaa
push
cmp
xor
js
pusha
add
pushf
js
iret
dec
dec
pop
loopne
mov
sub
dec
cli
iret
out
lcall
add
out
add
mov
aas
fs
add
lahf
pushf
push
xchg
cmpsl
xor
mov
mov
xchg
test
mov
adc
xor
jge
add
jl
add
mov
add
xor
add
in
cs
mov
add
mov
add
mov
dec
insb
push
add
inc
or
sbb
pushf
sbb
mov
add
add
add
mov
pop
mov
scas
out
or
mov
xchg
cmp
mov
mov
jp
xor
mov
cmp
mov
sbb
mov
mov
push
popa
rolb
hlt
cwtl
xchg
stos
xlat
jge
sarl
cmp
out
sbb
add
adc
mov
inc
pop
loop
mov
or
lcall
fwait
mov
mov
ficompl
adc
cmp
imul
jp
add
xchg
inc
add
adc
mov
sub
pop
insl
loope
jp
add
mov
jl
stos
cmpsb
outsb
xchg
dec
inc
loopne
mov
or
jecxz
sub
sahf
repz
insl
jg
stc
pop
lret
dec
inc
add
or
dec
or
pop
inc
sbb
popf
lret
ja
lahf
xor
dec
sub
rcrl
fldenv
cmp
dec
jb
mov
jae
cmpsl
imul
sbb
add
outsl
test
incb
and
mov
lock
add
mov
push
add
out
sbb
add
adc
jle
out
ja
movsl
push
faddp
add
add
push
aam
lea
scas
insl
nop
add
stc
jmp
stos
lret
push
mov
push
jge
mov
xor
add
or
cmp
add
cli
imul
dec
add
mov
pusha
add
cmp
call
xchg
lods
popf
push
pop
ds
cwtl
scas
xor
mov
mov
scas
push
add
clc
test
adc
xor
mov
flds
imul
mov
adc
mov
inc
xchg
and
mov
sbb
aam
add
xor
mov
rolb
mov
add
mov
push
sbb
fdivrl
sbb
xchg
lret
jno
add
lods
cltd
sahf
in
adc
mov
xchg
add
add
cwtl
push
rolb
mov
cmpsb
push
repz
mov
lods
pop
push
and
dec
daa
cmpsb
or
sub
xchg
mov
decl
sub
add
add
mov
fdiv
inc
mov
mov
sbb
add
jae
xchg
stos
mov
add
mov
dec
sbb
mov
mov
fdivrs
push
lret
mov
movsl
push
adc
in
rolb
mov
fdivs
add
and
push
sarl
test
xchg
or
adc
or
mov
add
mov
lahf
mov
dec
pop
rolb
mov
push
add
scas
pop
out
test
inc
sti
fistpl
loop
mov
mov
ja
add
test
mov
dec
mov
adc
in
pop
das
mov
lods
sbb
jnp
and
inc
xor
lret
das
call
aas
mov
add
into
push
lcall
pop
adc
fcomp
ret
movsl
outsl
test
add
add
mov
scas
jne
add
mov
xor
cmp
jmp
xor
and
mov
cmp
leave
ja
xchg
add
int
lds
jne
out
or
fs
jp
mov
idivl
sbb
ror
add
mov
ljmp
lcall
push
inc
add
loop
mov
add
mov
outsb
cmp
mov
scas
mov
sti
fildll
mov
arpl
push
lahf
gs
mov
adc
sti
cmp
add
das
and
mov
out
arpl
sub
mov
std
cwtl
popa
mov
pop
testl
lock
loopne
mov
mov
jno
movsb
hlt
test
add
dec
sub
arpl
ja
mov
mov
pop
inc
shll
int3
cmp
sub
insl
imul
insb
sbb
inc
fwait
jge
xor
mov
cmpsl
filds
out
gs
inc
cwtl
je
fldt
pop
aas
loope
lock
jmp
adc
mov
add
add
sbb
arpl
loop
mov
call
out
inc
loopne
mov
or
xor
mov
imul
call
loope
push
add
jno
hlt
sbb
inc
shrl
icebp
icebp
or
fidivl
mov
add
adc
mov
dec
or
add
cmp
rolb
pushf
or
add
cmpsb
push
leave
xchg
add
sahf
and
mov
or
and
mov
scas
or
push
pop
cwtl
xchg
xchg
imul
rolb
fwait
push
dec
lods
add
mov
std
jle
mov
dec
mov
in
and
mov
fnop
add
dec
lahf
lock
or
add
cmp
fldcw
add
mov
jb
mov
ljmp
or
insb
arpl
dec
repnz
fisttpll
inc
ret
or
add
inc
add
add
add
arpl
ja
cmp
test
pop
aam
add
mov
divps
xchg
add
mov
mov
mov
ds
add
push
cmp
mov
or
add
mov
mov
add
dec
in
aam
adc
add
rolb
mov
enter
add
mov
inc
addb
jo
mov
push
mov
sub
add
mov
int3
xchg
add
sbb
add
add
add
imul
add
popa
imull
sbb
add
mov
mov
sbb
inc
push
add
adc
mov
jnp
xchg
icebp
cltd
sub
mov
xchg
add
push
jle
push
cmp
call
call
mov
fmuls
loopne
mov
mov
pop
dec
xchg
add
aas
xchg
jge
adc
inc
mov
add
mov
mov
dec
xchg
add
xchg
dec
dec
dec
sbb
cli
mov
mov
mov
mov
sub
add
test
add
mov
mov
mov
test
into
sub
je
bound
mov
mov
add
mov
loop
mov
pop
mov
inc
repnz
xor
addl
lret
dec
xchg
icebp
push
inc
dec
or
push
xor
loopne
mov
pusha
add
xor
mov
scas
and
mov
jbe
sbb
xor
scas
pop
or
stc
and
cltd
enter
add
ret
fdivl
mov
add
in
lahf
das
lock
aaa
popa
icebp
out
inc
mov
xchg
xchg
loope
out
mov
lock
or
cli
loop
mov
ucomiss
in
xchg
cwtl
shll
inc
fstpl
xchg
nop
add
inc
sub
xchg
sbb
std
sar
or
pop
cmpsl
or
aad
pop
xor
mov
mov
mov
scas
add
mov
mov
push
or
add
xchg
sbb
into
out
sub
cs
or
lock
fisttps
push
adc
mov
cmp
rorl
add
mov
adc
mov
inc
popl
mov
adc
inc
add
scas
lods
data16
cmp
mov
in
jne
mov
mov
fwait
push
add
sub
das
aad
decb
jne
push
fisubrl
mov
pop
adc
orl
std
data16
fstpl
popa
mov
orl
xor
mov
jo
mov
inc
add
inc
test
add
push
lcall
mov
lock
in
fwait
int
add
inc
add
add
push
add
fimull
add
jne
and
pop
ret
inc
add
mov
ds
dec
xchg
lea
in
mov
rcll
pop
daa
inc
cmp
cmp
aad
push
add
fucom
lods
pusha
add
cmp
jecxz
add
mov
xchg
nop
add
add
mov
lock
ljmp
pop
arpl
outsb
cmc
andl
mov
dec
rolb
mov
lods
dec
sbb
insb
imul
dec
xchg
mov
mov
cmc
and
fsubp
add
pusha
add
mov
add
mov
jbe
pop
das
push
sbb
add
test
in
pop
loopne
mov
cld
lea
sbb
iret
fwait
jae
iret
rcrl
adc
or
mov
pushf
gs
xchg
jnp
pusha
add
rolb
mov
in
sbb
lock
fsubl
mov
mov
bound
mov
lock
push
and
inc
jp
fdivrs
mov
sub
push
ja
leave
xor
add
add
mov
enter
cltd
in
jno
push
cmp
mov
xor
mov
aas
sbb
add
scas
and
lret
xlat
xor
in
jmp
out
aad
add
lods
push
sti
add
out
xor
loope
lret
dec
add
add
or
das
ret
sti
fs
add
and
push
jge
mov
add
aam
sub
lret
mov
mov
xor
mov
sub
xchg
enter
mov
out
mov
sbb
bound
mov
pop
sbb
stc
scas
xchg
or
subl
add
dec
dec
outsl
std
jne
dec
adc
or
dec
shll
add
push
fsts
mov
test
mov
add
and
mov
das
push
push
pop
movsb
jmp
add
adc
mov
cmp
mov
jl
xor
stos
pop
or
iret
xchg
add
adc
and
mov
ret
fstps
xor
dec
cmp
mov
int
push
adc
mov
leave
cmpsl
inc
jb
mov
test
pop
stos
push
xor
sub
lcall
cmp
sub
lahf
and
ljmp
jo
mov
add
fcoml
xor
push
lahf
xor
decb
or
add
js
icebp
mov
aas
push
add
inc
fcomps
pop
arpl
pop
scas
push
pop
jno
pop
js
lods
sub
rolb
mov
add
insl
push
enter
shrl
mov
add
cmp
mov
aaa
push
shrl
sbb
aam
aam
in
loop
mov
leave
mov
and
mov
mov
loopne
mov
pusha
add
jecxz
aaa
and
rcl
mov
cmp
cmp
repnz
or
imul
jo
mov
add
faddp
pop
mov
xor
cltd
pop
rolb
mov
hlt
test
add
test
push
or
data16
das
and
mov
in
in
test
add
adc
mov
mov
or
mov
ror
ret
lods
repz
rolb
mov
rolb
mov
cmp
mov
ja
push
popa
cmpsl
daa
mov
sub
je
add
loope
pop
fstpl
iret
xchg
add
out
int
fistpll
add
mov
sub
jb
mov
ds
jmp
xchg
fcoml
mov
addr16
test
mov
xor
adc
mov
push
and
jecxz
sub
daa
lcall
xchg
inc
test
add
dec
scas
test
mov
jge
leave
adc
mov
ffree
adc
insl
out
add
scas
test
mov
mov
mov
cltd
xchg
pusha
add
lahf
lock
addr16
dec
insb
movsl
clc
add
add
xchg
jbe
addb
add
mov
sbb
test
ja
jne
add
add
aaa
stc
rolb
or
orl
mov
idiv
cmc
pop
push
or
add
pusha
add
sahf
ljmp
mov
test
push
sbbl
add
sub
xor
idiv
aad
mov
enter
bound
mov
lret
stos
mov
add
sahf
mov
cmp
outsb
sbb
sbb
mov
loope
leave
jle
stos
adc
mov
sub
filds
or
or
cmpsb
push
pop
lea
stos
dec
pop
pop
cwtl
jnp
or
imul
mov
or
call
add
mov
push
inc
xor
cs
jne
xchg
inc
add
pop
outsl
push
mov
add
add
mov
pop
push
jecxz
and
cmc
adc
mov
in
lds
mov
mov
pop
cwtl
int3
pop
jp
add
addr16
test
movsl
scas
popa
cmc
out
ja
aad
mov
mov
lcall
mov
add
add
mov
and
mov
mov
aas
rolb
mov
add
mov
out
leave
inc
cmpsb
mov
repz
mov
mov
or
lods
imul
orl
rolb
mov
mov
cld
sub
xchg
mov
add
mov
sbb
xchg
and
add
mov
lea
lds
jle
push
mov
xchg
pop
mov
imul
mov
xchg
push
xor
mov
movsb
ds
push
mov
add
inc
jmp
mov
xor
mov
push
inc
add
xchg
stos
cmpl
test
fsubr
stc
popf
addr16
in
out
add
and
mov
mov
xchg
mov
push
add
rcr
xor
add
mov
add
sahf
sub
outsl
aas
arpl
cmp
xchg
addr16
push
push
add
stos
cs
add
add
inc
dec
dec
pop
out
hlt
ljmp
dec
movsb
leave
jno
fs
inc
add
inc
rolb
mov
add
mov
xchg
ja
jae
add
shrl
xor
xchg
aad
lock
jbe
test
xchg
and
mov
inc
setl
push
jl
add
mov
add
movsb
mov
add
stos
scas
loopne
mov
enter
fs
int
mov
jmp
nop
add
push
out
mov
mov
mov
jle
loop
mov
cmp
addb
mov
mov
mov
push
add
out
into
and
mov
pop
aam
mov
mov
xchg
xor
imulb
pop
movsl
and
sbb
inc
loop
mov
mov
leave
dec
push
gs
repnz
into
xchg
xor
ds
add
add
sahf
mov
mov
xor
add
inc
test
imul
adc
pop
fwait
and
adc
mov
xor
cmp
loope
out
arpl
inc
mov
xchg
fdivrs
adc
add
movsl
push
shll
add
mov
sub
mov
mov
ljmp
adc
dec
jnp
ljmp
in
nop
xchg
test
jae
pop
std
sahf
sbb
mov
test
inc
add
decl
mov
daa
rolb
stos
and
mov
scas
cld
loopne
mov
adc
add
out
inc
add
test
movb
out
mov
mov
inc
fwait
or
in
daa
and
mov
jb
mov
mov
mov
cltd
scas
call
mov
imul
mov
roll
repz
cmp
movsl
fnstenvs
sbb
add
loope
add
cmp
push
dec
xchg
out
add
mov
add
das
sahf
sahf
or
mov
dec
sub
add
movsb
cltd
arpl
insb
adc
mov
add
jg
lret
nop
add
adc
push
aam
inc
leave
cltd
xchg
mov
push
ficompl
and
lock
js
rolb
mov
ljmp
mov
jbe
and
mov
dec
in
jne
out
addr16
add
mov
add
mov
dec
adc
movsb
movsb
adc
out
jns
sqrtps
rol
iret
jl
add
out
add
jmp
inc
test
sti
jge
test
jge
dec
dec
cmp
inc
lahf
pop
xor
ljmp
rolb
push
int3
or
fidivrs
orl
xor
mov
add
lock
xor
in
adcl
iret
push
test
mov
in
or
je
dec
mov
dec
dec
xor
xchg
and
mov
xor
and
test
and
mov
dec
into
fnsave
mov
dec
push
sub
shll
loope
mov
ja
pop
gs
mov
jle
pop
push
adc
mov
sbb
add
lahf
jmp
inc
fstpl
cmp
xchg
loopne
mov
fnsave
pcmpeqd
add
bound
mov
add
mov
push
add
test
out
rolb
mov
jp
add
mov
inc
or
out
add
mov
mov
test
mov
add
lret
icebp
in
in
add
mov
mov
sub
add
add
mov
fwait
or
add
aad
sti
imul
mov
sub
popf
addr16
jmp
mov
push
add
jae
add
jge
xchg
add
mov
lcall
sti
and
add
mov
xchg
fidivrs
add
aaa
lcall
shl
jae
dec
push
add
xor
mov
sbb
mulps
test
movsb
push
stc
and
mov
fcmovu
out
push
rolb
mov
int3
rolb
mov
insb
pop
aad
dec
les
inc
add
and
cmp
jns
sub
jbe
xor
jb
mov
adc
mov
fildll
jg
les
pop
lea
add
sti
popa
loop
mov
scas
cmp
rolb
mov
movsl
shll
mov
arpl
add
add
xchg
xchg
movsb
or
outsb
jne
mov
sub
xchg
ror
cmpsl
icebp
push
add
mov
mov
add
add
inc
add
mov
mov
jno
pop
scas
sbb
popf
ror
lcall
mov
and
in
add
add
sti
outsb
and
mov
orl
out
popf
lcall
mov
stos
dec
xchg
add
mov
mov
ja
pop
add
mov
add
mov
adc
mov
mov
mov
movsb
rolb
movsl
cli
cmc
cmp
pushf
adc
add
sbb
div
mov
je
mov
cmpsl
ja
mov
cmpsb
jne
xchg
imul
test
and
push
inc
icebp
inc
add
test
aas
mov
mov
sbb
cld
ficomps
test
mov
add
add
adc
mov
mov
jle
addr16
fsubrl
lea
mov
cld
inc
push
repz
mov
push
sub
pop
and
mov
add
mov
into
hlt
mov
sbb
adc
mov
mov
leave
xchg
add
mov
jno
imul
ret
xchg
push
enter
xor
mov
cli
dec
movsl
push
sub
call
add
jl
mov
pop
mov
adc
mulb
add
mov
mov
rolb
mov
in
arpl
add
mov
pop
mov
jecxz
sahf
fsts
mov
cmp
push
sub
rcll
add
imul
sub
add
cmc
mov
clc
mov
test
fwait
call
int
mov
lret
imul
pop
out
add
push
add
mov
xchg
adc
mov
ds
mov
inc
sub
add
pop
xor
mov
out
fnsave
mov
pusha
add
imul
mov
mov
mov
jno
out
sbb
scas
cltd
sbb
add
adc
add
mov
add
idivb
popf
cs
stc
outsl
or
push
imul
add
add
mov
sub
int3
es
xchg
out
mov
push
cmp
add
mov
aam
mov
iret
ljmp
imul
mov
aad
push
or
inc
add
mov
add
push
cltd
bound
mov
fs
loopne
mov
lock
mov
mov
mov
push
xchg
xor
pop
sbb
aad
ja
mov
out
sbbl
mov
test
add
mov
dec
push
inc
negb
call
add
pushf
mov
dec
mov
add
sub
add
pop
int
cld
mov
mov
push
ljmp
or
add
popf
xchg
inc
leave
enter
loop
mov
sub
mov
imul
mov
lahf
jno
dec
pop
shll
xchg
mov
mov
cmp
jmp
addb
inc
adc
mov
lret
xchg
mov
mov
mov
xor
and
mov
add
jae
adc
lods
loopne
mov
lods
out
lcall
cmp
cmp
cwtl
mov
aas
insl
adc
mov
hlt
es
ja
test
fidivl
cmp
rolb
inc
mov
lds
and
mov
add
add
into
ficoml
test
ljmp
pop
addb
lock
add
add
aas
mov
mov
rolb
cltd
jp
in
xor
mov
mov
or
pop
sub
pop
jg
add
movsl
dec
and
jnp
lahf
lcall
jno
adcl
jmp
sub
lahf
mov
xor
sub
fsubrs
inc
sub
mov
mov
xchg
ss
add
xchg
sahf
pop
add
mov
push
add
cmpsb
lea
xchg
xor
out
xchg
outsl
cwtl
daa
outsb
fisubrl
or
jl
movsb
sbb
cmpsb
rolb
mov
or
and
inc
inc
mov
rcll
je
mov
and
add
sbb
das
sbb
jnp
add
in
addb
mov
xchg
ret
jecxz
xchg
xchg
push
add
xchg
imul
or
mov
mov
mov
repnz
xor
pop
ja
xchg
lea
add
adc
jecxz
lods
test
outsl
stos
dec
push
adc
mov
add
mov
aas
cmpl
jmp
cmp
idiv
mov
ja
sbb
add
movsb
int3
enter
xor
dec
push
push
push
add
push
jge
xor
sbb
mov
adcl
std
sbb
test
mov
ja
push
cmp
add
mov
loopne
mov
aam
add
rolb
jg
add
xchg
add
xchg
push
adc
mov
add
cmp
and
hlt
inc
jns
add
add
cs
push
jge
add
mov
into
or
xchg
add
mov
jno
fcompl
push
pop
cmp
and
mov
or
or
mov
add
aam
jbe
cmp
mov
xchg
sbb
arpl
mov
movsb
push
subl
mov
je
cmpsb
test
fwait
les
or
pop
push
xor
mov
movsb
adcl
gs
fiaddl
imul
pop
addb
movsb
push
add
add
inc
mov
fcmovnu
jno
adc
iret
js
icebp
jae
pushf
push
les
jecxz
loop
mov
add
add
add
jmp
cmp
test
mov
ret
jge
jmp
inc
sub
stc
mov
and
fcmovne
adc
push
sbb
fldt
mov
add
popf
faddl
add
out
inc
adc
or
adc
arpl
xor
add
aad
imul
imul
dec
sbb
mov
inc
add
jecxz
dec
lods
pop
pop
pop
outsl
insl
jecxz
add
mov
inc
add
aaa
xor
mov
movsb
pusha
add
lcall
dec
int3
cwtl
hlt
scas
mov
js
xor
aam
mov
je
movsb
inc
sbb
add
daa
push
mov
mov
mov
addb
or
in
out
movsb
pop
mov
sub
add
mov
mov
cld
add
pop
adc
and
mov
adc
repz
add
inc
add
mov
push
test
xchg
mov
add
add
sahf
xor
mov
pop
pop
mov
movsb
stos
inc
pop
cmp
sbb
je
sbb
add
pop
sub
testl
add
mov
mov
mov
mov
ret
sub
mov
push
add
rol
lret
push
cmpsb
pop
addb
or
jbe
xchg
or
hlt
mov
mov
aaa
mov
insb
and
mov
imul
mov
fcompl
adc
dec
sbb
xor
out
sbb
jl
repnz
imulb
xchg
push
xchg
imul
mov
mov
cld
decl
popf
sbb
inc
add
cmc
sub
dec
imul
adc
daa
jb
mov
lock
daa
xor
mov
mov
and
add
add
cmpl
dec
mov
add
mov
xchg
stos
cmp
cld
push
xchg
sbb
scas
aad
push
sub
int3
gs
and
aam
pop
adc
mov
add
ror
add
mov
jmp
mov
lcall
push
rolb
mov
or
dec
in
adc
sbb
cmp
push
mov
dec
jo
mov
mov
add
out
test
add
dec
out
into
add
mov
jb
mov
add
out
add
jnp
iret
push
add
jge
daa
out
adc
jecxz
and
and
insl
mov
mov
add
fidivrl
xchg
mov
add
cmp
mov
repz
rolb
mov
mov
mov
or
clc
adc
mov
fiadds
push
add
add
fisubs
add
xchg
lods
jno
mov
gs
mov
dec
push
add
pop
rolb
mov
insl
fucomip
int
push
adc
mov
mov
add
sub
imul
add
add
mov
mov
xchg
pop
sbb
mov
mov
add
sbb
cmp
in
mov
add
xchg
nop
add
ret
xor
push
aam
hlt
xor
sbb
add
xor
out
add
and
test
adc
lods
jp
add
xchg
pushf
cmp
add
inc
mov
or
add
sbb
add
mov
out
andl
mov
js
sbb
fcomip
rolb
mov
adc
mov
arpl
dec
daa
daa
shrl
lret
outsb
rolb
mov
cwtl
addb
push
arpl
sbb
cltd
jg
xor
add
insl
jns
xchg
sbb
stc
daa
lret
mov
pop
jp
lea
outsl
adc
pop
jb
mov
xchg
mov
push
in
xchg
test
lock
sub
sahf
push
mov
fstl
and
mov
mov
mov
aaa
ljmp
inc
dec
mov
add
mov
pusha
add
add
mov
ljmp
push
push
add
xor
cmovae
lcall
jle
add
mov
jmp
add
add
xor
mov
push
addb
mov
test
ds
cli
es
mov
inc
aam
mov
add
pop
imul
int
add
add
mov
sbbl
or
test
add
lea
xor
mov
pushf
dec
xchg
or
dec
xor
mov
jne
adc
add
adcl
add
test
add
add
mov
mov
inc
jne
sbb
push
pusha
add
mov
mov
sbb
or
data16
push
shll
mov
and
and
and
mov
mov
popa
pop
ja
jl
hlt
add
into
push
add
add
aam
loope
sbb
aam
sbb
stos
pop
sbb
into
and
inc
imul
mov
and
mov
mov
add
jl
push
and
ljmp
mov
add
stos
nop
add
cmp
dec
insl
in
mov
mov
movsb
arpl
popf
mov
and
popa
mov
loope
cs
xor
mov
aad
clc
lea
or
add
xor
cmpsl
cmp
sub
xchg
js
bound
mov
add
add
addl
adc
mov
ret
add
mov
mov
daa
cmp
mov
mov
and
dec
out
sahf
xor
imul
fsubs
add
inc
daa
and
add
call
mov
add
mov
inc
and
mov
add
and
adc
cs
xor
mov
rolb
mov
mov
add
pop
fldcw
and
jnp
add
add
mov
add
mov
xchg
add
add
add
mov
test
imul
fdivrl
int3
add
add
mov
sub
and
dec
fsts
jnp
inc
rol
add
push
test
add
mov
rdtsc
push
jecxz
jge
nop
add
add
add
mov
push
fdivp
es
cmp
bound
mov
jl
movsb
fs
repz
idivb
loope
add
pop
icebp
inc
mov
mov
repnz
pop
jns
mov
push
cs
lods
jb
mov
mov
pop
aas
and
mov
push
stc
lcall
ljmp
data16
mov
mov
pushf
adc
mov
add
sub
in
stos
inc
add
add
cs
pop
cld
popf
adc
out
negl
loop
mov
cli
adc
mov
addr16
jae
data16
xor
push
ret
addl
jl
out
hlt
cs
out
inc
add
add
add
mov
mov
mov
jmp
jae
fists
push
enter
jge
cmp
adc
mov
inc
lea
cwtl
inc
add
in
adc
test
xchg
mov
lea
mov
ljmp
xchg
je
sbb
add
and
mov
nop
add
cmp
add
mov
lret
es
pop
xchg
call
mov
insb
jl
mov
push
dec
std
mov
inc
add
ret
int3
mov
mov
rep
ss
mov
insb
push
add
shll
fstl
lds
movsl
rolb
mov
mov
add
outsb
xor
lret
aas
cmp
jne
dec
inc
pop
push
lods
popf
fsubr
push
mov
movsl
push
into
ss
das
setg
pop
sub
addb
mov
add
rolb
mov
and
lds
sub
add
mov
sub
sbb
or
icebp
adc
pop
scas
notl
add
mov
push
icebp
cmp
fucomp
jno
jne
scas
xchg
adc
test
jne
add
mov
mov
fiaddl
paddb
jmp
adc
mov
jle
gs
jge
in
insl
int
push
add
insb
push
add
mov
cmp
add
and
or
mov
push
js
sub
and
mov
cmp
lcall
add
test
clc
sbb
mov
mov
cmp
shl
lcall
lcall
and
mov
add
cwtl
outsb
push
push
add
mov
mov
add
ds
in
xor
enter
mov
mov
add
mov
mov
mov
mov
push
lods
int
push
call
call
idivb
dec
or
jno
hlt
push
add
jns
sbb
cmpl
sub
add
push
or
xchg
js
cli
jno
decl
iret
repnz
pop
sub
mov
das
push
dec
mov
mov
add
stc
ret
cmc
jmp
lods
push
out
gs
fbstp
pop
cmp
and
int3
and
add
mov
pop
xchg
in
xor
mov
test
pop
mov
add
xchg
imul
inc
aaa
mov
pop
test
push
mov
imul
mov
add
xchg
add
js
cli
cltd
call
xchg
mov
mov
lcall
mov
fs
inc
lds
scas
in
arpl
insb
sahf
lahf
and
mov
jl
movb
push
fimuls
dec
pop
mov
mov
add
arpl
mov
add
jne
xor
add
scas
lock
mov
pop
add
mov
add
mov
jno
xchg
icebp
mov
jmp
fmuls
inc
hlt
add
mov
std
js
cld
scas
sahf
jl
nop
add
jmp
sbb
sub
add
adc
enter
adc
mov
push
pop
or
outsb
sbb
pop
or
adc
out
lret
mov
adc
mov
loop
mov
sbb
dec
nop
add
stos
dec
mov
jl
add
add
sub
cltd
pop
add
ss
jecxz
rolb
mov
inc
add
mov
mov
lock
dec
lods
or
ret
or
add
pop
xchg
sub
insb
daa
and
mov
add
jecxz
push
cmp
out
bound
mov
addb
in
add
scas
jnp
ficoms
mov
jecxz
ja
ret
fs
sbb
jno
dec
adc
inc
imul
xor
jl
sub
mov
shr
es
fisubrl
add
add
pop
jns
xor
inc
xor
rolb
mov
add
jns
add
sbb
cmpsb
lods
jnp
push
mov
insl
sub
add
mov
pop
pop
lock
movsl
push
lods
mov
adc
mov
pop
sub
pusha
add
xor
mov
or
pushf
ljmp
jecxz
push
mov
insb
bound
mov
in
adc
dec
leave
xor
ror
ja
test
mov
aam
add
es
and
mov
and
mov
lds
shr
pusha
add
and
jbe
xor
push
add
push
add
lea
cmp
rep
jg
xchg
popa
inc
adc
movsb
push
xchg
add
imull
jg
mov
mov
icebp
or
js
and
cmp
jp
dec
xor
addb
enter
jbe
pop
call
hlt
cmpsb
out
cmpsl
clc
and
pop
fidivrl
pop
xor
mov
inc
add
test
je
fwait
adc
fistpll
popa
mov
xchg
test
mov
and
mov
movsb
imul
add
lret
and
xchg
add
loopne
mov
sub
and
xor
add
out
mov
mov
popf
cld
cli
xor
hlt
sub
rolb
js
pop
aad
jge
mov
adcl
xchg
jl
iret
hlt
out
pop
hlt
flds
icebp
mov
fsts
add
rolb
mov
je
add
mov
add
faddp
jg
fisttps
rcl
cmpsl
loopne
mov
pop
inc
dec
ss
add
jle
pop
nop
add
sub
xchg
lods
fwait
sbb
dec
mov
mov
jb
mov
mov
dec
icebp
loop
mov
inc
add
mov
cli
sbb
sub
dec
mov
lahf
dec
sub
inc
arpl
mov
adc
xchg
inc
push
pop
inc
add
mov
repz
mov
pop
bound
mov
add
jnp
call
int3
or
cwtl
and
mov
cli
or
mov
mov
xor
mov
inc
add
cli
mov
or
ss
xchg
add
add
loope
add
hlt
std
stos
inc
jnp
add
mov
jae
xor
mov
movsl
mov
fstp
addb
mov
jno
out
cmpsl
sub
mov
cmc
movsl
sub
mov
mov
gs
enter
outsl
idivb
shll
sarl
jbe
jne
sti
mov
insb
dec
inc
add
mov
add
pop
movsl
xchg
add
int3
jg
xlat
mov
mov
insb
stc
incl
pop
test
repz
pop
add
mov
add
adc
mov
mov
sub
sub
adc
mov
out
das
mov
adc
mov
fdivs
add
add
or
mov
add
cmp
jo
mov
inc
add
mov
fildl
test
and
out
add
in
push
js
stos
sbb
ret
test
aaa
fcmovne
pop
push
fisubrs
fwait
mov
sub
in
dec
sbb
stos
jno
cs
hlt
nop
add
add
nop
add
xor
or
into
pusha
add
mov
jne
cltd
cs
rolb
mov
adc
mov
add
cmp
int3
mov
jbe
add
add
jns
mov
pusha
add
add
repz
mov
in
mov
or
add
or
add
push
dec
mov
add
js
cli
repnz
push
pop
stc
iret
or
les
jmp
sarl
mov
mov
outsl
xchg
pop
lret
mov
movsb
addb
in
jl
stos
sbb
add
mov
add
ds
mov
adc
push
pop
xor
add
add
mov
jnp
sbb
mov
mov
ljmp
mov
jbe
add
mov
lds
dec
out
int
stos
popf
fisubs
pop
mov
cmpsl
int3
cwtl
ljmp
in
mov
mov
test
adc
dec
dec
stc
jae
loopne
mov
stos
repz
dec
lahf
push
xchg
jge
add
mov
and
mov
leave
mov
add
aaa
insl
jl
test
jb
mov
lea
add
test
pop
xchg
mov
jnp
ja
pop
jg
movsl
inc
cmp
cmp
aas
xor
mov
and
std
pushf
cmp
frndint
ss
iret
inc
outsb
icebp
fsubl
inc
push
jnp
ficomps
sub
outsb
and
adc
mov
mov
ljmp
mov
mov
cmp
push
add
pop
mov
js
pusha
add
jl
add
xchg
add
pop
and
jae
out
push
xchg
adc
mov
jle
push
sahf
inc
mov
out
mov
and
mov
add
add
xlat
mov
cs
insb
cmp
arpl
test
pusha
add
xchg
mov
leave
mov
mov
add
in
mov
mov
out
sbb
scas
dec
jo
mov
push
inc
mov
js
fisttpll
mov
pop
mov
add
stc
fidivs
repnz
mov
jno
imul
sub
mov
sbb
push
add
rolb
mov
xor
mov
jae
dec
pushf
pop
stc
dec
fstpl
addr16
xchg
add
outsb
insl
out
pop
mov
or
sub
xor
dec
popa
push
cli
cld
jge
jg
mov
push
sbb
dec
sub
push
sub
jnp
std
int
add
jb
mov
sub
jno
mov
adc
mov
or
addb
adc
fisttps
lahf
pop
mov
jno
rolb
mov
test
sub
add
mov
mov
jmp
call
inc
sbb
sub
add
add
cwtl
cwtl
shll
add
pop
cmpsl
adc
pop
mov
push
mov
dec
add
or
mov
shrl
in
cmc
inc
es
mov
add
test
rorl
jl
inc
jmp
jge
xor
sbb
mov
mov
add
pop
out
jbe
inc
jle
xchg
or
ljmp
outsb
dec
adc
gs
mov
lcall
inc
in
pop
shll
repz
es
add
aad
or
or
shll
mov
test
push
vcvtps2dq
adc
mov
mov
mov
add
dec
icebp
push
das
or
cmpsl
lds
lods
jecxz
je
es
xchg
mov
add
or
clc
dec
jp
mov
push
adc
mov
mov
pop
scas
sub
fisubs
aaa
inc
lahf
inc
add
test
add
mov
add
mov
mov
into
rolb
mov
lcall
or
mov
jge
pop
pop
cwtl
fs
mov
in
jecxz
push
xor
out
mov
add
aas
test
mov
stos
jmp
mov
sub
aad
rcll
jo
mov
movsl
mov
test
int3
mov
and
xchg
add
mov
jmp
cmpsb
loop
mov
imul
inc
rolb
mov
out
bound
mov
shrl
push
add
test
test
push
or
inc
xchg
pop
adc
mov
fdivs
xchg
data16
add
jb
mov
add
gs
pop
adc
pop
inc
jns,pn
push
ds
add
lock
mov
pop
sbb
add
add
cmc
add
int
insl
push
lret
ret
adc
push
loope
sbbl
rolb
mov
out
pop
pushf
xchg
das
lret
dec
jb
mov
lea
andl
sbb
shll
addb
insb
ja
or
jl
cmp
call
adc
mov
stc
sub
xchg
cmpsl
aaa
movsb
sub
push
mov
xchg
pop
jl
addr16
add
pop
push
imul
mov
pop
dec
insb
jmp
mov
mov
dec
addb
jmp
lahf
sbb
aam
mov
add
mov
mov
sbbl
inc
and
negb
xchg
pop
out
cmpsl
mov
mov
jno
dec
insb
inc
jbe
movsb
lods
int
dec
into
mov
sub
dec
push
inc
leave
cwtl
xor
insb
pop
xchg
ret
dec
jo
mov
dec
dec
add
mov
movsl
sbb
pusha
add
jb
mov
inc
or
xchg
sub
pop
scas
out
je
pop
inc
fs
add
gs
repnz
xchg
mov
mov
push
sub
add
inc
add
sbb
adc
inc
add
or
inc
sbb
add
add
adc
mov
arpl
and
mov
cwtl
mov
cmc
jb
mov
xchg
add
shll
add
xlat
dec
hlt
adc
mov
in
mov
mov
in
xchg
jmp
mov
mov
addr16
add
call
push
ljmp
idiv
mov
mov
push
pop
xchg
fs
fisubrl
mov
xchg
pop
call
test
sub
test
add
adc
add
jno
in
jmp
stos
cmp
loopne
mov
shll
mov
xor
mov
sbb
fwait
sbb
je
addb
lock
or
push
add
imul
or
add
xchg
jne
mov
fbstp
loop
mov
inc
fs
orl
xor
mov
mov
arpl
pop
jp
xchg
scas
or
leave
cmp
sbb
adc
mov
mov
push
loop
mov
mov
and
out
and
sarl
add
mov
stc
sbb
add
xor
mov
repz
ret
faddp
nop
add
and
sub
push
lcall
rolb
mov
fdivl
sahf
sub
mov
lahf
push
mov
in
sub
jp
clc
or
mov
mov
or
cmp
add
fsubl
add
or
add
jmp
addr16
sarl
mov
add
mov
add
mov
ffree
xchg
inc
lret
flds
lods
mov
movsl
pop
rolb
mov
push
nop
add
lret
mov
inc
inc
fwait
jl,pn
xor
push
mov
push
fsubr
add
xor
xor
lret
mov
and
push
mov
add
adc
jmp
pop
js
jge
je
pusha
add
mov
mov
lahf
cmp
inc
add
push
pop
ja
add
push
inc
fwait
gs
or
add
add
pushf
dec
cli
pop
les
jl
or
cmpsl
cmpl
int3
sbb
mov
or
or
add
xbegin
add
lcall
cmpsb
movsb
vmovapd
xchg
xor
add
push
push
test
push
add
jb
mov
and
mov
mov
int
in
ret
std
sub
fildl
mov
fdivrp
fimull
aaa
jbe
jb
mov
or
add
add
aam
pop
push
imulb
pop
stc
dec
push
adc
mov
test
idivl
mov
mov
or
out
sbb
cmp
jno
add
mov
mov
xchg
add
sahf
addb
hlt
mov
add
fldenv
ljmp
adc
mov
imul
mov
dec
lret
xor
mov
adc
inc
add
mov
das
adc
add
add
mov
out
cmpsb
mov
ss
sbb
xchg
cld
add
add
lcall
push
add
into
push
dec
push
add
xor
mov
repz
dec
aas
stos
jp
sub
push
add
mov
cwtl
scas
or
add
sub
and
repnz
jo
mov
xchg
je
fmuls
push
pop
mov
add
and
je
sbb
push
add
add
inc
add
out
push
add
dec
jae
fnstsw
cmp
push
mov
mov
into
sti
adc
mov
into
addb
sub
jno
in
sbb
add
xor
movb
add
rorl
popf
ljmp
sbbl
xor
xor
jecxz
sub
mov
mov
jge
ljmp
cs
adc
lret
leave
arpl
rcrl
repz
pop
hlt
xchg
inc
stos
popf
addb
mov
mov
pop
mov
sub
scas
scas
sarl
add
mov
mov
arpl
notb
cmp
mov
push
jecxz
into
mov
adc
mov
leave
adc
dec
mov
fst
mov
popa
movsb
in
aad
pushf
mov
es
aam
jge
pop
push
or
inc
cmc
cmpsb
jle
add
arpl
enter
ffreep
lods
and
mov
sbb
nop
add
out
inc
sbb
je
fiaddl
mulb
push
add
adc
mov
mov
dec
xchg
lock
sbb
dec
jle
data16
iret
test
add
mov
dec
ret
stos
lea
inc
xchg
mov
mov
add
xchg
xor
mov
das
xor
mov
inc
and
mov
xchg
xor
stos
fld
add
inc
add
mov
out
jge
jecxz
in
mov
mov
push
scas
aam
out
and
mov
xchg
push
in
jo
mov
je
in
lock
mov
mov
mov
mov
insb
lds
add
add
mov
or
xchg
add
sbb
jmp
xchg
sbb
jmp
add
xor
mov
add
mov
test
nop
add
add
mov
xchg
xchg
adc
cmp
icebp
outsb
or
mov
add
popa
ret
fcompl
inc
das
jle
add
dec
cli
arpl
pop
dec
dec
pop
std
sbb
inc
lods
pop
mov
in
in
sti
lds
push
fs
add
mov
add
add
sub
add
dec
mov
test
fsubrp
and
fs
or
dec
lcall
dec
idivl
sbb
cmp
add
in
leave
jne
mov
mov
jmp
cmp
jp,pn
in
mov
or
push
cmp
or
lret
and
sti
fcmovnbe
mov
lcall
gs
add
jbe
dec
sbb
xor
add
jge
add
aam
xchg
daa
fisttpl
or
aad
pop
mov
mov
sbb
add
add
loopne
mov
iret
icebp
es
add
sahf
pop
mov
sbb
sti
pop
out
add
mov
dec
adc
sbb
decl
mov
sub
mov
add
add
mov
cmp
dec
ss
sub
mov
xchg
inc
xor
add
add
sbb
add
shrl
sahf
test
loop
mov
add
push
int3
movsl
pushf
sub
xor
js
jne
jb
mov
mov
inc
xchg
movsb
inc
add
rolb
or
mov
add
pop
pop
inc
pop
pop
jae
add
add
mov
mov
fwait
jne
mov
dec
mov
aad
es
cmp
push
add
outsb
push
add
add
xchg
movsb
mov
add
mov
sbb
and
mov
add
xchg
push
add
push
xchg
cmpsl
std
test
lds
lods
test
not
mov
add
add
add
add
jne
add
jge
push
adc
adc
js
addb
stos
add
mov
popf
jle
mov
mov
jnp
adc
mov
bound
mov
mov
dec
xor
add
pushf
repnz
add
jne
popf
aas
test
and
pop
mov
add
test
iret
jg
clc
cld
jg
sbb
mov
mov
jno
ret
sub
stc
pop
jne
add
inc
and
mov
dec
adc
mov
ljmp
cmp
ja
or
je
push
fcomps
lock
mov
adc
mov
sbb
stos
call
out
pop
test
add
jmp
add
add
cmp
xor
in
adc
aam
mov
sub
mov
add
in
sbb
out
inc
mov
ds
call
mov
movsb
mov
repnz
les
mov
add
fistl
test
hlt
jae
xor
mov
mov
sub
inc
pusha
add
mov
push
out
dec
xor
fidivrs
jge
jg
ds
dec
jns
into
mov
mov
bound
mov
imul
pop
push
daa
pushf
pop
adc
mov
mov
add
stos
push
inc
push
jmp
pop
arpl
loop
mov
add
xchg
xor
xor
add
lock
dec
mov
xchg
out
dec
mov
inc
add
mov
lret
push
inc
add
clc
mov
mov
xor
add
mov
popf
dec
mov
mov
stos
mov
leave
sti
inc
dec
adc
stos
aas
daa
ss
flds
mov
cmpl
lds
inc
add
cmp
lods
cmpsb
pushf
decl
js
dec
adc
mov
dec
add
mov
adc
mov
lods
icebp
inc
idivb
mov
cmpsl
stc
pop
sbb
addb
mov
mov
test
mov
mov
leave
inc
xchg
fcomip
xchg
push
push
jmp
arpl
jno
xor
mov
add
mov
mov
or
add
mov
sub
mov
xor
cmp
lcall
mov
mov
xchg
add
mov
mov
imul
jge
jmp
fwait
jno
sahf
mov
in
enter
loop
mov
adc
arpl
pop
into
adc
mov
sbb
hlt
inc
add
addb
sub
push
jp
mov
shrl
xchg
ds
xor
mov
mov
push
idivb
xlat
pop
xchg
mov
add
fistps
or
mov
dec
lret
mov
mov
ss
jne
sbb
push
add
xchg
mov
test
add
sahf
inc
add
add
pop
movsb
sarl
cmp
stos
push
sbb
idivl
xchg
int3
fistl
mov
add
dec
push
push
push
adc
fwait
or
inc
cli
divl
add
mov
movsb
nop
add
sbb
mov
addb
inc
pop
xchg
push
rolb
jno
add
int3
dec
xor
rolb
mov
adc
in
rolb
mov
push
jge
addb
sbb
mov
sbb
in
fnstcw
cmp
xorl
mov
add
mov
aas
loope
pusha
add
xchg
inc
inc
xchg
icebp
pusha
add
add
into
imulb
add
in
add
mov
mov
insb
jo
mov
adc
and
inc
add
jne
or
mov
bound
mov
pushw
jbe
jecxz
xor
inc
scas
sbb
cld
dec
xor
gs
sub
and
mov
bound
mov
loopne
mov
in
loop
mov
cld
filds
add
mov
mov
add
mov
mov
xor
outsl
xchg
ja
jne
mov
add
add
test
cmp
jae
mov
adc
mov
xor
add
js
out
xor
ljmp
add
lock
jb
mov
mov
add
arpl
add
push
mov
insb
stos
mov
lcall
xor
mov
adc
mov
mov
fisubrs
add
add
pop
cmp
pop
cmp
push
mov
add
or
cmp
or
cmpsb
xchg
addb
lret
mov
xchg
rolb
leave
sbb
and
adc
xchg
inc
add
cmp
push
jno
rcll
mov
mov
add
mov
fsubrl
sub
out
add
or
mov
stc
pop
push
stos
cmp
xor
mov
pop
out
dec
outsl
cmp
es
add
inc
and
mov
dec
push
mov
mov
jne
add
mov
mov
mov
inc
add
add
cld
cmc
xor
add
mov
mov
repz
adc
ss
in
aaa
mov
gs
lods
dec
xchg
add
scas
pop
mov
add
mov
in
mov
mov
add
cmpsl
jge
notl
sbb
pop
imul
lahf
or
out
mov
mov
mov
add
mov
cmp
in
sbb
dec
xor
mov
and
daa
push
jp
sbb
scas
iret
mov
sbb
das
nop
add
rolb
mov
mov
jmp
lcall
xchg
dec
out
mov
sub
inc
add
mov
lret
lods
stc
xor
out
mov
stos
add
mov
add
mov
xchg
push
and
mov
mov
add
dec
test
cmc
insl
sub
jge
dec
and
or
sbb
add
add
hlt
div
mov
sub
cltd
int
ds
push
pop
shrl
add
dec
inc
mov
jecxz
aas
mov
repnz
sub
pop
pop
sbb
mov
mov
mov
insl
outsb
xor
cmp
cwtl
lods
mov
leave
and
cwtl
icebp
sub
or
lock
add
sbb
movsl
jno
rolb
mov
mov
adc
bound
mov
cmp
jl
sbb
jo
mov
add
jp
scas
fisttps
jg
pop
stos
lahf
rolb
jb
mov
out
jmp
xor
mov
stc
outsb
fwait
pop
mov
mov
pop
dec
fcomps
in
aas
lret
psrlw
call
in
xchg
inc
add
pop
lods
or
add
push
xchg
jge
add
jmp
std
dec
jmp
push
dec
push
rolb
mov
push
xchg
insb
and
mov
add
loope
test
movsl
cmc
pop
mov
adc
mov
ljmp
inc
add
mov
pusha
add
xchg
sbb
imul
mov
mov
sbb
outsb
push
mov
in
adc
hlt
or
inc
xchg
jmp
arpl
lods
jns
add
fs
push
jecxz
jo
mov
dec
addr16
addb
into
cmp
or
mov
jecxz
add
add
rolb
jge
add
imul
add
loopne
mov
adc
mov
clc
fwait
inc
push
dec
jl
pop
decl
neg
sbb
idivb
mov
sahf
cwtl
push
loopne
mov
loop
mov
add
outsl
lods
mov
cld
xchg
add
pop
dec
mov
int3
rolb
mov
cmp
gs
sub
out
adc
sbb
inc
aaa
jbe
mov
mov
call
stos
icebp
pop
jno
adc
mov
pop
mov
lods
mov
push
inc
add
jo
mov
subl
mov
mov
mov
sbb
jns
add
mov
add
xchg
add
xor
mov
add
sub
sub
ljmp
adc
mov
lods
jl
xor
mov
lcall
mov
xchg
mov
sbb
inc
add
