add
add
add
add
add
add
add
or
or
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
or
add
or
add
or
add
or
add
or
add
add
add
or
or
add
add
add
add
or
add
or
add
add
add
or
add
or
add
add
or
or
or
add
add
or
add
add
add
or
add
or
add
or
add
add
add
add
add
or
or
add
add
add
or
add
or
or
or
add
add
add
add
add
add
add
add
or
or
or
add
add
or
or
add
add
add
add
or
add
add
add
add
or
add
or
add
add
add
add
add
add
add
or
add
add
add
add
or
or
add
add
add
or
add
add
add
or
add
or
add
add
or
add
add
add
or
add
add
add
or
add
add
or
add
or
add
or
add
or
add
add
add
add
add
add
add
or
add
or
add
add
or
add
add
add
add
add
add
add
or
add
add
add
or
add
add
add
add
or
or
add
add
add
or
add
or
add
add
or
add
or
add
add
add
or
add
add
add
or
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
or
add
add
add
add
or
or
add
add
or
add
or
add
add
add
or
add
or
add
or
add
or
add
or
add
or
or
or
or
add
or
add
add
add
add
add
or
add
add
add
add
add
or
or
add
or
or
add
or
add
add
add
or
add
add
add
add
add
or
add
or
add
add
add
or
add
add
add
or
or
add
add
add
or
add
add
add
add
add
or
or
add
add
add
add
add
or
or
add
or
add
or
add
or
add
add
add
or
add
or
add
or
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
or
add
add
or
add
add
add
add
or
or
add
or
add
or
add
or
add
or
add
add
or
add
or
or
add
add
or
add
add
add
or
or
add
or
add
add
add
add
add
or
add
add
add
add
or
add
add
add
add
or
add
add
add
add
or
or
add
or
add
add
add
add
add
or
add
or
add
or
or
add
add
add
add
or
add
or
add
or
add
add
add
add
add
add
or
add
add
add
or
add
or
or
add
add
add
add
add
or
add
or
add
add
add
or
add
or
add
or
add
or
add
add
add
add
or
add
add
or
add
add
add
add
add
add
add
add
add
add
add
or
add
add
or
or
add
add
add
or
add
add
or
or
or
add
or
add
add
or
add
or
or
add
add
add
or
add
or
add
or
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
or
add
add
add
or
add
add
add
add
add
add
add
or
add
or
add
or
or
or
add
or
add
or
add
or
add
add
add
add
add
add
or
add
or
add
or
or
or
or
or
add
add
add
add
add
or
add
or
add
or
add
or
add
or
add
add
add
or
add
or
add
add
add
add
add
or
add
add
add
or
add
add
or
or
add
add
or
add
add
or
add
or
add
or
or
or
or
add
or
or
or
add
or
add
add
add
add
or
or
or
add
add
or
add
add
add
or
add
add
add
add
add
or
add
add
or
add
add
add
or
add
add
add
or
add
or
add
add
add
or
add
or
add
or
or
add
add
add
add
add
or
add
or
add
add
add
or
add
or
add
or
or
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
or
add
or
add
add
add
or
add
add
or
or
or
add
add
or
add
add
add
add
add
or
add
add
add
or
add
add
or
add
or
add
or
add
add
add
or
add
or
add
add
add
add
or
add
add
or
add
or
add
or
add
add
add
add
add
or
add
add
add
add
add
add
add
or
or
add
add
add
add
or
add
or
or
or
add
or
or
add
add
add
add
add
or
add
or
add
or
or
add
add
add
or
add
add
add
or
add
add
add
add
add
or
or
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
or
add
or
add
add
add
add
add
add
or
add
or
or
or
add
or
or
or
add
add
add
add
add
add
add
add
add
or
add
or
or
add
add
or
add
add
or
add
add
or
add
add
add
add
add
or
add
or
or
or
or
add
or
add
add
or
or
add
or
or
or
or
or
add
add
or
add
add
add
add
add
or
add
add
or
add
or
add
or
add
add
add
add
add
add
add
or
add
add
add
or
or
or
add
add
or
add
add
or
add
add
add
or
or
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
or
add
or
add
add
add
or
add
add
or
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
add
add
add
add
or
add
add
add
add
add
or
add
add
add
add
add
or
or
add
or
add
add
add
add
add
or
or
add
add
or
or
or
add
add
add
or
add
add
add
or
add
or
add
or
add
add
or
add
or
add
or
add
add
add
add
or
add
add
add
add
add
or
or
add
or
or
add
add
or
or
add
add
add
add
add
add
add
add
or
add
or
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
or
add
add
or
add
or
add
add
or
add
add
add
add
or
add
or
add
or
add
add
add
add
add
add
add
or
add
or
add
or
add
add
add
add
add
or
add
add
add
add
or
or
add
or
add
add
add
or
or
or
add
add
add
add
add
add
add
or
add
or
add
add
add
add
or
or
or
add
or
add
or
add
add
add
add
add
add
add
add
or
add
or
add
or
add
add
add
or
add
add
add
or
add
or
add
add
add
or
add
or
add
or
add
or
add
add
add
add
add
or
add
or
or
or
add
add
add
or
add
or
add
add
add
add
add
add
add
or
add
add
add
add
or
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
or
add
or
add
add
add
or
add
add
or
add
or
or
add
add
add
or
or
or
add
or
or
or
add
add
add
or
add
or
add
add
add
add
add
add
add
or
or
add
add
or
add
add
add
add
add
add
add
or
add
add
or
add
add
or
add
or
or
add
or
add
add
add
add
or
add
or
add
or
add
or
add
or
add
or
add
add
add
add
add
or
add
add
add
or
add
add
add
or
add
or
add
add
or
add
or
or
add
or
add
or
add
add
add
add
add
or
add
or
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
or
add
or
or
add
add
add
add
add
add
add
add
add
or
or
or
or
add
or
or
add
add
add
or
or
add
add
add
or
add
add
add
or
add
add
add
add
add
or
add
or
or
or
add
add
add
or
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
add
add
or
add
add
add
add
add
add
add
or
or
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
or
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
add
or
add
or
add
add
add
add
add
or
add
or
add
or
add
or
add
add
add
or
add
add
add
or
add
add
add
or
add
or
add
add
add
or
add
add
add
or
add
or
add
add
add
or
add
or
add
add
add
or
or
or
add
add
add
add
or
or
add
add
add
add
add
add
add
add
add
add
or
add
or
add
or
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
or
or
add
add
or
add
add
add
add
add
or
add
or
or
or
or
add
add
add
add
add
or
or
add
or
add
add
add
or
add
or
add
or
add
add
add
or
add
or
add
add
add
or
add
add
add
or
add
or
add
or
or
add
or
add
add
add
or
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
or
add
add
add
add
add
or
add
add
add
or
add
or
or
add
add
add
add
add
add
or
add
or
add
add
add
or
add
add
or
or
add
add
or
or
add
add
add
add
add
or
add
or
add
or
add
or
add
or
add
add
add
or
add
or
add
add
add
or
add
or
add
or
add
or
add
or
add
or
or
add
or
add
add
add
add
add
or
add
or
add
add
add
or
add
or
add
or
or
or
add
add
add
add
add
add
add
or
add
or
or
add
or
or
or
add
or
add
or
add
or
add
or
add
add
add
add
add
or
add
or
add
or
add
add
or
add
or
add
or
add
or
add
or
add
add
or
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
or
add
add
add
or
add
add
add
add
add
or
add
or
add
add
add
add
add
add
add
add
add
or
add
add
or
or
add
or
add
add
or
add
add
add
or
or
add
add
add
add
or
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
or
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
or
add
or
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
add
add
or
add
add
add
add
add
or
add
or
add
add
add
add
add
or
add
or
add
or
add
or
add
or
add
add
or
or
add
or
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
or
add
or
add
add
add
or
add
or
add
add
add
or
add
or
add
add
add
add
add
or
add
or
add
or
add
add
add
add
add
add
add
or
or
add
add
or
or
or
add
or
add
add
add
or
add
or
add
add
add
add
add
add
add
add
or
add
or
add
or
add
add
add
add
add
or
add
or
or
or
or
or
add
or
add
add
add
or
add
or
add
add
or
or
add
add
add
add
add
add
add
or
or
add
add
add
or
add
add
add
add
or
or
add
add
or
add
add
add
add
add
or
add
or
or
add
add
add
or
add
add
add
or
add
add
or
or
or
or
add
or
add
add
or
add
or
add
or
or
or
add
or
or
add
add
or
or
add
or
add
or
or
or
add
or
add
or
add
add
or
add
add
or
add
add
add
add
or
or
add
or
add
or
or
or
add
add
add
add
or
or
add
add
add
add
add
add
add
or
add
add
add
add
or
add
add
or
add
add
add
or
add
add
add
add
or
add
or
add
add
add
add
add
or
or
or
or
add
or
add
add
or
add
add
add
add
or
or
or
add
or
or
or
add
or
add
or
add
or
add
add
add
or
add
or
add
or
imul
icebp
sub
mov
cmp
add
add
ds
sub
test
lret
pop
sbb
or
xor
push
les
stos
cli
add
pushf
jmp
ret
adc
add
add
add
add
ljmp
popf
or
jne
cli
out
cmpl
jmp
scas
pusha
mov
or
xor
xchg
xor
add
add
push
add
add
fistpl
es
mov
insl
cmp
inc
jne
jns
cmpxchg
sub
pop
subb
ret
mov
pop
adc
and
jno
jge
insl
pop
stos
stos
sbb
outsb
ffree
lahf
mov
add
add
mov
cmpsl
out
sub
add
add
pop
mov
jl
xchg
lahf
jne,pn
lea
xchg
mov
pop
pop
sbb
inc
fcoml
cmp
dec
je
or
jbe
mov
mov
andl
add
xchg
or
add
add
mov
cmp
mov
add
outsb
mov
xor
sti
fstpl
sub
or
add
add
add
add
add
inc
mov
inc
xor
add
add
lods
adc
movsl
jg
push
pushf
ret
int3
cmpsb
add
add
add
pop
add
pop
push
cmpsb
out
popf
cmp
pusha
add
add
subl
pop
in
push
sbbl
mov
push
fld
xchg
mov
loopne
and
ret
int
lock
xchg
cmpsl
mov
add
dec
int
cmp
cmp
int3
call
cmp
out
xchg
and
and
add
add
enter
add
adc
shlb
add
and
add
add
mov
cmp
adc
scas
out
mov
cmp
add
mov
orl
int3
cmpl
mov
xor
lea
and
add
add
add
loop
add
add
gs
push
pop
rcll
call
imul
lahf
scas
ds
push
pusha
mov
cmp
jl
cmpsb
cltd
rcl
out
add
push
push
mov
jp
int3
scas
daa
jg
stos
ficompl
lods
push
divl
add
xchg
push
add
add
das
push
andl
mov
mov
pop
dec
mov
jb
add
add
xchg
sahf
fwait
std
outsb
jmp
test
mov
sub
add
add
mov
cmp
inc
mov
mov
pop
inc
cmpsl
pop
pop
and
sub
mov
push
mov
lcall
rclb
mov
lcall
lods
cmpsl
add
add
add
outsb
push
mov
mov
lcall
push
popa
push
xchg
or
and
ret
iret
or
mov
icebp
and
mov
lret
fs
pop
subb
add
add
sbb
hlt
out
fisttpl
add
rorl
jp
push
push
pushf
je
out
hlt
int3
dec
sub
sbb
xchg
int
stc
jns
push
cmpsl
mov
or
add
add
mov
sbb
sti
stos
cmp
insb
mov
add
add
add
cli
popf
and
add
add
test
mov
xor
stos
lahf
mov
push
in
mov
pusha
add
add
mov
mov
xchg
into
jnp
icebp
subb
add
add
add
cltd
add
mov
xor
sarl
push
das
sbb
push
mov
add
add
add
aaa
add
add
add
sbb
dec
cld
js
and
xor
mov
xchg
in
dec
outsl
add
add
add
dec
mov
jp
add
add
add
add
int3
cmp
mov
sub
add
add
add
cmp
xchg
add
add
mov
xchg
sbb
mov
jns
ss
cmc
shll
clc
sub
cmc
xchg
xor
loop
xor
cwtl
sbb
adc
mov
in
fdiv
aam
imull
leave
popf
inc
cmc
jno
or
idiv
jo
pop
mov
mov
mov
jg
sahf
add
add
add
xchg
xor
pop
push
adc
sub
add
add
adc
sub
fists
nop
cmpl
xchg
js
xor
ljmp
in
andb
data16
add
add
fwait
loopne
add
add
dec
sub
mov
imul
inc
sbbl
lahf
push
outsb
clc
adc
add
or
movsb
aad
sahf
inc
xchg
or
add
add
cmc
xor
cli
adc
sahf
fisubrs
mov
pop
inc
mov
add
nop
jb
push
das
int
mov
sub
or
aas
mov
icebp
in
lahf
cmp
sub
popf
pop
dec
imul
add
add
sbbb
fnsave
cmp
or
subl
sbb
ja
xchg
sar
std
add
xchg
lods
cmp
push
pushf
mov
xchg
adc
in
outsb
adcl
add
xor
cld
dec
js
adc
pop
jns
xchg
add
add
mov
aaa
adc
add
add
loopne
inc
fmul
imul
lds
out
mov
pop
inc
mov
lds
cmp
sti
lea
mov
rorb
addb
add
sub
popf
mov
sbb
jno
push
inc
xchg
adc
add
mov
cltd
mov
out
int3
pop
xchg
cmpsl
mov
add
jge
sar
inc
jbe
fmull
add
adc
js
pop
add
dec
test
fs
in
rcl
pop
imul
mov
cmp
das
aaa
xchg
mov
xchg
cli
daa
leave
call
popa
test
iret
fs
ja
jbe
cltd
adc
mov
test
neg
pop
fmulp
fstps
cmp
pop
mov
push
fwait
mov
es
imul
add
add
test
adc
cmc
xchg
dec
adcl
cmp
sub
or
add
add
add
add
andb
xchg
adc
mov
out
push
outsb
cvtps2pi
pop
sbb
loop
xchg
sbb
ja
mov
push
inc
ds
ret
pushf
and
nop
std
mov
add
mov
add
add
dec
pusha
add
add
xor
lods
jmp
mov
mov
pop
fcompl
adc
mov
mov
add
adc
push
xchg
xchg
add
add
add
adc
in
and
mov
xor
sub
add
add
xchg
cmc
or
cmp
aad
dec
cmp
jo
test
mov
add
add
mov
movsb
ds
mov
dec
iret
push
jge
ret
lahf
cmpl
leave
call
cmp
lret
cmp
or
sti
xchg
out
xchg
rcl
xchg
pop
or
or
add
add
fs
aaa
lahf
aam
or
dec
mov
mov
stos
fnstcw
cmpsl
push
mov
and
xor
add
inc
add
add
pop
pop
xor
xor
arpl
cmpsl
lret
out
jnp
cmp
push
xor
add
add
pusha
add
add
movsl
jle
jecxz
xor
add
loopne
cmp
xchg
xchg
stc
jae
lods
out
aad
movsb
ds
daa
or
add
adc
jnp
mov
mov
mov
outsl
enter
cmpb
outsl
and
or
mov
icebp
mov
add
es
sbb
adc
add
add
rorb
add
add
pop
fcompl
sar
pop
jl
xchg
cmp
loope
cmp
pop
push
cld
and
add
add
movsb
push
loop
psubsb
outsb
lahf
cmpsb
test
pop
xor
lods
or
ret
in
sar
dec
sbb
xor
dec
xor
leave
inc
dec
pushf
call
sbb
lcall
js
mov
inc
jp
lock
cmp
xor
jmp
and
mov
in
ja
mov
lods
inc
adc
lds
arpl
cli
insb
mov
lock
sub
add
add
xchg
pushf
cmp
cs
andl
call
sub
inc
pushf
mov
add
add
pop
jg
pusha
add
add
insb
add
add
cli
sbb
or
add
sbb
pusha
add
add
clc
insb
mov
add
add
xchg
or
insb
add
add
add
add
add
andb
arpl
adcb
dec
and
jp
push
dec
add
add
push
test
inc
sub
jnp
mov
rol
into
pop
push
lcall
out
test
dec
sarb
je
add
add
add
jle
sbbb
lock
fwait
mov
aaa
fstl
lret
inc
xchg
adc
adc
inc
shrl
out
pop
es
mov
lock
pusha
add
add
mov
out
movsb
cmpeqps
mov
pop
mov
mov
xchg
loop
ja
ljmp
xchg
leave
popl
push
inc
sub
add
add
push
dec
add
add
push
add
pop
push
sub
shlb
outsb
testl
mov
mov
lds
fsubrl
push
sbb
cwtl
test
add
add
ljmp
arpl
push
movsb
sti
sbb
dec
jge
adc
aam
out
xlat
jns
cmc
or
jo
dec
fdivr
or
add
add
or
fildll
add
add
or
js
rolb
mov
pusha
mov
popf
inc
pop
fsts
mov
lret
imulb
dec
push
or
add
add
in
mov
add
add
lret
mov
add
out
lds
xor
dec
add
add
mov
add
pop
out
loopne
pop
push
lea
jne
psrld
mov
inc
push
scas
or
add
in
rolb
add
add
add
xor
jle
dec
jns
movsb
xchg
add
movsl
push
jb
enter
ficomps
clc
in
aam
sahf
cltd
mov
jbe
sti
sbb
dec
push
clc
cwtl
cmc
mov
push
in
pop
mov
popa
scas
mov
movsl
shl
cmp
add
add
mov
add
add
xor
cs
and
in
add
add
sti
aad
mov
or
add
add
lcall
mov
pop
pop
mov
add
pusha
add
add
mov
cmpsb
shl
ret
shl
in
mov
mov
and
lock
mov
lret
imul
pushf
push
dec
add
add
mov
test
push
js
jmp
call
add
add
jmp
outsb
inc
es
divb
out
adc
sbb
cmpsl
cmp
js
pop
loope
mov
jecxz
push
rcrb
or
add
add
lds
add
add
xchg
add
add
add
and
add
add
lods
dec
rcll
sti
jp
mov
out
insb
mov
mov
fninit
push
pusha
add
add
stc
cmp
imul
popa
icebp
icebp
sbb
aam
stos
fistpl
jbe
or
xchg
faddl
pop
xor
or
in
nop
outsb
fimull
stos
inc
and
adc
xchg
sbb
dec
xchg
jne
sbb
add
ret
pusha
add
add
pop
dec
fidivrl
in
push
sub
add
add
sub
mov
or
xor
imul
add
ret
inc
xor
int
in
adc
dec
outsb
notl
stos
data16
negl
test
iret
sub
xor
add
add
pslld
lcall
sahf
jg
cmpb
xchg
bound
push
insl
pusha
mov
adc
aaa
movsl
sbb
and
fnsave
out
subl
mov
lret
jle
pop
mov
inc
mov
cld
addl
loopne
sbb
mov
dec
push
stc
lret
or
xchg
adc
xchg
test
push
sub
add
add
std
xor
add
add
int3
addr16
aaa
push
mov
mov
lods
shrb
mov
scas
icebp
lahf
cmpsl
jnp
popf
mov
add
add
ss
movsb
cmp
test
jb
jp
dec
jmp
call
add
pop
sahf
pop
fprem
cmpsl
stos
push
aam
pop
mov
sub
ds
mov
add
add
jbe
add
out
mov
clc
popa
shufps
add
add
jb
add
add
push
pop
cmp
push
push
adc
pusha
add
add
aas
jnp
push
or
add
add
add
add
add
add
loopne
enter
loope
mov
in
notl
fldz
push
scas
mov
or
popf
push
mov
mov
mov
xchg
int3
movsb
push
in
jo
fsts
loopne
sbb
jle
sbb
add
bswap
outsb
iret
or
push
and
mov
lods
lcall
dec
push
in
incl
xchg
imul
add
fmuls
add
add
sub
dec
pop
bound
daa
ficomps
push
push
xchg
jns
fwait
jmp
leave
push
lret
sbb
add
add
adc
inc
out
movsl
mov
add
add
loopne
dec
das
stos
mov
popf
mov
aas
mov
sub
pop
lahf
fcomps
scas
sbb
mov
daa
add
sbb
cmpsb
mov
lcall
sbb
outsl
sub
add
add
add
dec
fnstsw
fmul
nop
addr16
push
mov
pushl
sbb
mov
pushf
bound
add
jne
icebp
insb
add
add
cmpsl
mov
inc
adc
iret
pop
or
add
add
sub
sarb
cs
pop
cmp
push
mov
add
add
push
cld
loope
or
pop
fsubrl
pop
out
out
stos
xor
and
add
mov
mov
adc
cmc
ficompl
lds
mov
aaa
sbb
data16
mov
add
add
pop
clc
push
xor
cmpsb
mov
add
packsswb
ret
pop
int3
shrl
ret
and
add
loopne,pt
int
movsl
cs
bound
mov
push
rcrb
js
sbb
xor
lret
cmp
sub
adc
cld
push
and
hlt
test
stos
std
in
aad
shrb
fnsave
push
in
pop
pop
jle
xchg
push
mov
mov
cmp
iret
xor
jecxz
add
add
aad
inc
xorl
xor
add
add
xor
mov
and
add
add
shrl
add
outsl
aas
push
mov
or
add
add
sbb
loopne
mov
push
clc
sahf
fisttpll
cmpsb
mov
lock
add
add
xchg
into
scas
and
sub
add
add
lcall
adc
test
mov
lods
imul
mov
push
lea
xor
mov
test
jno
add
add
sbb
rclb
cltd
pop
pop
sub
xchg
subb
dec
mov
mov
push
pop
addl
mov
add
in
add
add
mov
cmp
je
xor
mov
jecxz
je
pusha
add
add
and
add
add
inc
lahf
dec
dec
pop
jecxz
push
lods
subb
jb
push
jns
out
mov
add
daa
outsb
test
add
add
add
pop
sbb
xor
cmpsb
or
stc
jnp
mov
pushf
in
or
ficompl
sbbl
sarl
dec
mov
xchg
or
repnz
mov
pop
xlat
leave
sti
xchg
and
fcmovbe
in
fwait
inc
add
add
push
or
jecxz
jno
test
and
add
add
mov
add
in
movsb
ret
hlt
popaw
jb
dec
add
inc
add
add
inc
jle
sub
aad
int3
cmpsl
inc
lret
dec
aam
cmpsl
pop
test
xor
flds
or
add
add
int3
xchg
add
hlt
mov
test
push
icebp
shl
xchg
stos
mov
push
out
cmpsb
push
das
imul
fisubs
xchg
mov
fidivl
fdivs
ss
mov
mov
add
add
dec
jecxz
or
popa
jns
mov
and
pop
jne
dec
mov
popa
cwtl
mov
inc
or
inc
mov
cltd
adc
mov
or
add
cmp
add
cmp
add
dec
push
pushf
mov
arpl
out
jg
and
xchg
lcall
outsb
push
scas
ljmp
dec
stc
fs
mov
dec
mov
sub
scas
jne
cmp
ja
cmp
stos
mov
das
fidivl
loope,pn
mov
jae
outsl
or
aaa
dec
popf
fsubr
loop
out
dec
scas
jg
sbb
push
in
lods
jmp
add
add
mov
add
add
fcoms
push
mov
fucom
or
add
add
fs
push
xor
fisubrs
lods
imul
inc
mov
aam
clc
push
sbb
xor
mov
in
es
rcrb
shll
or
add
add
inc
inc
add
add
jmp
out
fucomp
icebp
sbb
mov
das
pop
adc
add
add
or
mov
mov
ficomps
popf
mov
push
adc
test
add
add
imul
dec
pop
imul
gs
mov
mov
addb
add
incb
add
add
inc
or
jb
add
add
pop
mov
push
jmp
in
shll
ret
mov
orl
movsl
adc
adcb
jae
add
imul
sarl
shl
and
call
add
add
addb
mov
bound
jle
add
add
clc
pop
inc
mov
adc
pop
cli
fnsave
lods
in
sbb
jecxz
int
push
in
adc
mov
shl
mov
cmpsb
mov
pop
push
mov
fdivrl
push
les
dec
ret
fcomip
and
add
add
ds
call
sbb
add
add
adc
frstor
std
adc
popa
into
mov
std
iret
je
scas
pop
and
fwait
xor
dec
add
add
jne
pop
pop
std
shl
fiadds
in
lahf
dec
dec
add
or
add
add
and
or
test
int3
out
dec
gs
aad
ss
mov
dec
repnz
jl
stos
fbld
push
mov
add
js
add
add
add
adcl
je
xor
mov
or
add
add
sub
add
add
mov
inc
jno
and
add
add
mov
out
cmc
imul
jge
test
je
add
add
add
std
jo
mov
or
adc
aad
sbb
in
sub
add
add
adc
mov
mov
cmp
lahf
rorl
cmp
cmp
dec
mov
std
rcrl
push
lods
test
inc
mov
and
cmpsb
jle
cs
mov
xchg
idivb
xchg
pushf
sbb
add
xor
add
push
dec
mov
imul
movsb
xchg
mov
aaa
ss
add
add
push
jmp
scas
push
inc
and
add
add
rclb
sub
add
add
mov
adc
stc
dec
and
rolb
push
adc
inc
imul
int
sub
push
xchg
xchg
and
jge
dec
adc
add
mov
add
dec
add
add
and
cmp
imul
mov
xchg
mov
push
mov
sub
call
cmp
jne
lea
push
push
andl
call
or
mov
shr
mov
add
push
push
push
push
push
call
leave
ret
mov
mov
mov
or
cld
lea
lea
sub
shr
lock
mov
je
mov
add
lea
clc
jmp
ret
ret
push
mov
sub
lea
movl
movl
push
push
push
push
push
cld
call
test
jne
push
call
jmp
mov
insb
mov
lea
mov
dec
mov
mov
inc
add
add
popf
ds
add
cmpl
add
add
dec
out
xchg
dec
add
add
popa
ret
sbb
insb
mov
and
outsl
adc
add
out
xchg
daa
mov
lcall
add
add
dec
dec
add
jae
mov
ds
mov
movsb
pop
daa
or
add
add
movsb
jmp
add
add
or
add
cmpsb
mov
int3
clc
rcrb
adc
aaa
mov
lret
icebp
into
out
mov
iret
rclb
add
add
mov
out
and
loopne
addr16
inc
cmc
mov
inc
les
add
loop
bnd
mov
out
sbb
mov
stc
in
push
addr16
mov
and
xor
push
setge
repz
dec
jl
mov
js
mov
adc
cs
push
rep
mov
filds
cmp
pop
fdivrs
in
loop
or
add
add
out
lahf
mov
push
adc
push
leave
sbb
stc
ljmp
dec
add
add
fimull
add
add
pop
mov
aad
cmpsl
push
push
addr16
std
mov
or
cmp
xor
adc
xor
pop
nop
pop
mov
shll
popf
adc
shr
addr16
mov
add
add
sub
pushf
pop
push
cld
loopne
xchg
jmp
add
cld
cmp
adc
jne
mov
pushf
inc
add
add
or
add
add
loope
cmpsl
xor
dec
adcb
pop
icebp
icebp
xchg
pop
adc
and
mov
adcl
add
sbb
test
rorb
lahf
mov
pop
mov
add
or
fisttpll
cmp
jbe
dec
das
lock
aad
mov
mov
pop
pop
jns
stc
in
mov
add
xchg
mov
mov
add
ds
shlb
xchg
sahf
lock
xor
pop
add
mov
adc
clc
popa
add
add
pop
xor
fs
mov
mov
xlat
push
pop
in
fisubl
sti
xchg
and
clc
int3
repnz
in
sub
add
add
rolb
stos
push
push
ds
push
out
xchg
adc
inc
cld
pushf
daa
push
xchg
cmp
movsl
sub
adc
std
or
add
add
lret
push
or
sahf
mov
aam
xchg
imul
pop
scas
fxch
sub
inc
add
add
sub
nop
addr16
sti
fs
xorb
add
add
dec
iret
cmpb
shll
inc
sahf
xchg
adc
add
int
pop
xchg
cmp
mov
mov
add
add
fidivs
xchg
add
cli
jmp
xchg
enter
inc
mov
nop
stos
inc
jne
insb
add
add
lret
movsb
mov
jno
call
add
add
sub
sbb
dec
insb
mov
cwtl
lahf
and
dec
mov
pop
pop
inc
cli
aam
xor
fs
jmp
cmp
add
add
outsb
mov
dec
dec
mov
push
fcmovne
leave
push
ret
dec
add
add
and
xor
add
add
scas
inc
mov
rcrb
adc
std
jl
mov
push
outsb
cltd
mov
mov
add
add
mov
sbb
in
sbb
mov
mov
mov
mov
mov
lods
jl
pop
mov
stc
and
add
add
fnsave
scas
lock
sahf
leave
jp
adc
sub
add
add
push
xchg
rcll
stc
mov
clc
push
add
push
fiaddl
fcmovnb
mov
and
add
add
inc
lcall
fisubl
cmp
add
dec
dec
sub
mov
loopne
stos
repnz
fwait
aas
or
daa
cmp
mov
shll
cmovge
cmp
test
aad
and
sbb
addr16
mov
cwtl
fmulp
sti
test
stos
mov
mov
or
out
shl
pop
push
mov
push
push
xchg
jbe
sti
sbb
xor
pop
xor
inc
mov
je
mov
movsb
jne
fsub
mov
jle
rcr
fwait
data16
hlt
push
rcr
jnp
adc
add
sbb
xchg
mov
add
add
xchg
jns
loope
and
add
add
stos
xchg
add
add
sbb
pop
push
loopne
int
je
xor
mov
mov
fsubl
fldcw
add
add
cmp
push
sub
push
shrb
mov
or
inc
xorb
push
sbb
sti
mov
jne
lea
mov
sbb
pop
dec
rclb
or
or
jns
enter
mov
mov
inc
adc
add
add
das
sub
xchg
add
add
add
sete
fistpll
xlat
int
mov
stos
cwtl
xchg
cmp
push
mov
test
jne
jae
lcall
aad
and
xor
xchg
sahf
push
fcmovnbe
cltd
imul
mov
add
add
dec
sarb
fnsave
scas
xor
movsb
insb
add
add
pop
nop
xchg
add
shl
loope
mov
imulb
add
dec
cmc
stos
sahf
jae
fwait
arpl
and
add
add
xchg
dec
xchg
ja
push
sub
add
add
adc
rorl
mov
jge
or
add
add
aas
sbb
add
add
add
mov
add
mov
dec
mov
jb
xchg
insb
add
add
inc
lods
pusha
mov
sarl
cmp
scas
mov
or
or
into
icebp
imul
imul
jp
cmp
loope
fdivs
mov
xchg
pop
out
jmp
xlat
std
inc
mov
jno
enter
add
add
inc
mov
xchg
cmp
mov
add
add
hlt
out
add
mov
add
sti
mov
mov
sub
add
add
test
aaa
add
mov
jb
dec
shlb
add
std
jnp
jne
rorl
pop
pop
loopne
ss
add
add
push
or
mov
lods
sbbb
mov
or
lret
sub
add
add
xor
push
fmulp
stc
fisubl
ljmp
es
fs
or
add
add
rorb
push
adc
inc
jle
mov
cmpsl
add
add
xor
jmp
push
enter
in
pop
or
push
add
add
add
xor
add
add
pushf
ja
cmpsl
sbb
add
add
enter
cltd
jle
add
add
jne
jp
data16
jecxz
mov
jmp
fs
xor
add
add
add
mov
push
add
jo
cli
or
js
cwtl
clc
or
add
test
add
addb
add
add
lods
xchg
int
stc
into
aad
mov
das
xchg
jb
mov
add
add
adc
or
push
pop
mov
rorl
xchg
fdivs
push
fiaddl
sub
add
add
clc
pop
mov
sub
mov
sub
add
negb
add
mov
pop
sbb
add
xchg
jnp
cmpsb
and
sub
add
add
cmp
add
add
add
pop
dec
rol
aad
lods
fisttpl
ret
mov
mov
add
pop
aas
test
sbb
mov
push
xchg
rol
adc
jae
inc
add
add
les
add
sbb
push
xor
ficoml
test
mov
push
aas
bound
fists
ss
mov
outsl
xlat
cmp
jg
jg
pop
push
jg
test
cmp
xor
or
mov
cmpsl
mov
mov
je
inc
out
cli
ror
pusha
add
add
pop
addr16
add
add
shr
cmp
in
inc
xchg
add
mov
adc
dec
lds
aas
push
or
add
add
dec
mov
pop
sbb
or
cmp
mov
cmp
xchg
out
lds
loope
aaa
loop
add
add
shlb
sbb
mull
add
xor
add
add
imul
in
out
les
add
xchg
push
cmp
dec
push
jae
jo
clc
shrb
lcall
sbb
xlat
xor
inc
add
add
into
pop
dec
clc
sbb
mov
imull
cli
dec
inc
rorl
xor
fwait
cmc
icebp
inc
rcrl
pop
jne
mov
jne
andl
inc
ja
loopne
mov
inc
add
add
xchg
lahf
arpl
roll
or
out
push
adc
inc
push
adc
push
sub
mov
outsb
mov
test
mov
shrl
pop
stos
xor
pushf
insb
add
add
in
or
xchg
dec
inc
add
add
imul
js
add
add
add
add
add
or
add
add
and
add
add
and
jb
push
jp
mov
push
out
test
mov
mov
pop
mov
inc
lock
ja
shlb
test
out
mov
out
inc
mov
mov
roll
shrl
fmul
loope
popf
movsb
js
push
push
jmp
out
out
or
adc
cmp
add
or
test
mov
in
inc
imul
mov
add
add
add
jl
xor
jmp
push
imul
jo
in
add
add
mov
jl
ljmp
pop
mov
add
add
xchg
cmp
inc
mov
sub
add
add
mov
rclb
mov
add
add
fwait
shlb
mov
add
arpl
mov
mov
dec
dec
add
add
dec
or
add
sbb
imul
inc
mov
ret
xchg
jb
adc
js,pn
cld
cmpsb
jge
mov
mov
dec
cli
mov
sub
lahf
lods
jmp
push
pop
sbb
std
call
ja
mov
push
lds
mov
mov
add
add
pop
movsb
add
outsb
mov
shlb
mov
sbb
mov
mov
fdivs
inc
sub
add
add
push
insl
outsl
inc
scas
scas
gs
or
add
add
shlb
xlat
in
mov
cmc
jmp
and
mov
fdivr
xor
dec
repnz
subb
into
pop
ret
sub
dec
mov
std
mov
add
add
xchg
addb
add
add
ss
add
add
jno
sti
inc
cs
das
xchg
pushf
inc
pusha
mov
inc
ret
mov
add
fistpl
push
lret
sti
test
test
mov
xchg
xor
mov
int3
loop
insb
add
add
pop
stos
call
jl
mov
sub
add
add
jle
dec
aad
aam
fdivp
mov
jle
int3
and
add
add
add
add
xor
dec
mov
mov
dec
mov
je
cmpsb
push
movsb
addr16
ret
push
sbb
push
loop
shr
decb
fs
xchg
shlb
add
adc
jb
dec
mov
cmp
add
add
add
inc
adc
mov
js
add
add
add
inc
dec
daa
loop
xchg
sub
frstor
add
fimuls
add
add
adc
faddl
add
add
add
add
xchg
add
add
add
sti
jns
sub
xchg
push
mov
jmp
cmp
add
dec
fsubs
or
out
outsb
sub
add
js
lret
mov
test
insb
mov
aad
in
fwait
push
jp
aaa
xchg
xchg
stc
mov
mov
lret
in
mov
arpl
sti
hlt
pop
xor
call
add
add
mov
xchg
subl
mov
mov
adc
jl
push
pop
add
mov
movsl
inc
add
add
sti
xchg
into
movsb
mov
inc
mov
mov
ja
and
lret
mov
lods
cmc
cmpsl
testl
repnz
add
sbb
pop
dec
cmpsb
pop
pop
jbe
sahf
or
and
xor
out
repnz
add
inc
fs
jmp
cmc
mov
mov
xchg
adc
stos
lret
and
adcb
subl
sti
xchg
jmp
add
xlat
lahf
outsb
sbb
out
inc
pop
fldl
sbb
mulb
pop
aam
adc
lret
cmp
lcall
pushf
jae
add
add
add
fwait
sub
imul
sbb
jne
mov
fs
push
addl
add
and
add
add
add
jmp
fsubs
shll
xlat
lahf
test
aad
adc
fisubl
mov
pop
mov
loopne
or
aam
es
xchg
pop
pop
repz
les
add
push
lcall
sub
add
add
add
add
sbb
xor
fstpt
movb
add
sbb
aas
sbb
out
out
jge
sbb
add
sti
sahf
in
lods
in
pop
adc
inc
add
add
inc
push
std
addr16
fdivrs
sbb
push
clc
repnz
nop
nop
jae
roll
add
fisttpl
test
repnz
nop
nop
jae
add
add
nop
push
mov
leave
nop
jmp
xchg
add
enter
orb
sbb
add
repnz
nop
nop
jae
add
and
add
clc
repnz
nop
nop
jae
mov
add
add
xchg
dec
add
cltd
lea
clc
repnz
nop
nop
jae
add
add
mov
add
repnz
nop
nop
jae
add
lret
xchg
add
push
and
add
add
je
mov
push
mov
xchg
ret
sub
add
jecxz
add
add
mov
mov
xchg
ret
lret
add
subl
add
add
jg
add
add
cmp
add
mov
xchg
dec
mov
clc
repnz
nop
nop
jae
add
addb
add
xor
subl
clc
repnz
nop
nop
jae
add
push
mov
popa
add
clc
repnz
nop
nop
jae
add
add
push
cs
popa
clc
repnz
nop
nop
jae
int
add
enter
push
pop
push
or
add
add
sbb
clc
repnz
nop
nop
jae
add
add
add
dec
add
add
dec
stos
clc
repnz
nop
nop
jae
push
add
lret
jb
cmpsb
add
lea
pop
rep
clc
repnz
nop
nop
jae
add
mov
mov
inc
push
mov
xchg
ret
add
xor
add
lea
mov
stc
mov
clc
repnz
nop
nop
jae
push
enter
add
mov
jne
clc
repnz
nop
nop
jae
add
add
push
mov
xchg
ret
mov
add
add
add
and
repnz
nop
nop
jae
push
lret
cs
add
mov
repnz
nop
nop
jae
and
enter
add
fistpl
push
mov
xchg
ret
jno,pn
aad
add
adc
xchg
push
mov
xchg
ret
xchg
add
imul
pop
add
sar
push
loopne
repnz
nop
nop
jae
add
add
add
add
add
add
repnz
nop
nop
jae
add
lret
add
add
sbb
lret
xlat
push
clc
repnz
nop
nop
jae
add
cltd
add
pop
or
sbb
addl
cld
nop
nop
jae
add
push
push
cld
mov
xchg
add
loop
push
mov
xchg
ret
add
add
add
sub
push
push
mov
xchg
ret
add
add
add
add
in
arpl
cmp
add
adc
imul
jb
testl
xchg
ret
sub
push
pop
add
stos
clc
repnz
nop
nop
jae
and
mov
add
arpl
addl
cld
nop
nop
jae
lret
adc
add
in
pop
clc
repnz
nop
nop
jae
add
int
jno
roll
push
in
loop
mov
push
mov
xchg
ret
pop
add
add
add
add
inc
clc
repnz
nop
nop
jae
ds
and
adc
clc
repnz
nop
nop
jae
add
add
mov
mov
lock
or
call
clc
repnz
nop
nop
jae
xor
xchg
add
cmp
push
mov
leave
nop
jmp
add
lret
jecxz
cmpsb
push
mov
lea
clc
repnz
nop
nop
jae
cld
cld
add
add
jbe
or
popl
xchg
ret
int
les
add
cltd
add
shrl
inc
add
add
lea
mov
leave
nop
jmp
sbb
mov
cltd
les
stos
adc
in
addl
dec
cld
out
test
add
pop
lds
add
pop
add
clc
repnz
nop
nop
jae
mov
add
add
jl
add
add
fmuls
add
add
or
repnz
nop
nop
jae
add
dec
mov
lret
add
mov
add
nop
push
mov
leave
nop
jmp
push
add
mov
add
mov
leave
nop
jmp
add
add
add
add
add
push
mov
xchg
ret
jb
xor
add
add
add
xor
pop
mov
push
mov
xchg
ret
dec
mov
add
in
add
sbb
pop
clc
repnz
nop
nop
jae
in
lea
add
add
decb
add
clc
repnz
nop
nop
jae
push
mov
arpl
add
andb
cmp
push
mov
leave
nop
jmp
scas
lret
add
addb
rcrl
mov
lock
repnz
nop
nop
jae
add
sbb
add
add
mov
repnz
nop
nop
jae
pop
mov
add
push
mov
es
clc
repnz
nop
nop
jae
add
dec
xchg
add
scas
adc
aas
add
imul
add
in
add
lea
cld
nop
nop
jae
mov
cmp
or
add
and
mov
xchg
ret
push
shll
push
cmpsb
in
addl
aas
jmp
scas
add
cld
add
add
add
jne
nop
push
mov
leave
nop
jmp
mov
add
sub
nop
push
mov
leave
nop
jmp
add
lret
add
and
add
clc
repnz
nop
nop
jae
add
pop
add
xchg
add
imul
sti
add
lea
andb
xor
add
add
add
mov
push
push
mov
xchg
ret
pop
aad
mov
push
jb
add
cltd
jne
clc
repnz
nop
nop
jae
add
push
add
lea
stc
shl
clc
repnz
nop
nop
jae
add
add
mov
jecxz
cmpsb
add
add
push
mov
xchg
ret
mov
add
pop
aad
imul
cmpl
scas
enter
and
clc
repnz
nop
nop
jae
pop
add
add
sub
ds
loop
nop
push
mov
leave
nop
jmp
shl
add
cmpsb
mov
fld1
clc
repnz
nop
nop
jae
add
add
scas
add
call
clc
repnz
nop
nop
jae
mov
lret
add
push
push
mov
xchg
ret
or
add
arpl
add
jb
xor
test
clc
repnz
nop
nop
jae
add
mov
dec
push
push
mov
xchg
ret
adcb
lret
or
mov
ror
lock
sti
stos
push
mov
xchg
ret
add
add
dec
add
sbb
cmp
cld
nop
nop
jae
push
lret
add
pop
mov
pop
clc
repnz
nop
nop
jae
add
mov
enter
lea
jmp
add
add
adc
pop
add
mov
push
mov
leave
nop
jmp
repnz
cltd
cld
mov
add
ret
fld1
push
mov
xchg
ret
repnz
enter
jb
add
lcall
add
repnz
nop
nop
jae
cs
mov
repnz
nop
nop
jae
int
add
mov
add
or
into
idiv
clc
repnz
nop
nop
jae
add
add
push
mov
push
add
sub
add
in
add
sbb
shlb
add
jno
clc
repnz
nop
nop
jae
sbb
add
add
popl
xchg
ret
add
dec
add
add
add
push
mov
xchg
ret
push
add
add
jecxz
ljmp
nop
jae
add
or
mov
add
fwait
clc
repnz
nop
nop
jae
add
xor
mov
add
pop
push
nop
push
mov
leave
nop
jmp
add
adcb
jl
xor
xchg
jbe
add
add
add
ds
add
inc
mov
nop
push
mov
leave
nop
jmp
add
add
shl
add
sbb
nop
nop
jae
mov
push
add
push
int
sub
repnz
nop
nop
jae
lea
add
pop
mov
xchg
popf
mov
clc
repnz
nop
nop
jae
fnstsw
orb
mov
clc
repnz
nop
nop
jae
xchg
mov
add
lahf
mov
push
mov
xchg
ret
push
add
add
sbbb
mov
repnz
nop
nop
jae
add
and
and
mov
cld
nop
nop
jae
adc
scas
add
add
add
add
repnz
mov
add
clc
repnz
nop
nop
jae
add
and
dec
sbb
pop
push
jne
mov
adc
repnz
nop
nop
jae
mov
mov
add
xchg
mov
push
mov
xchg
ret
sbb
pop
cld
xchg
cmpb
add
test
xchg
stos
clc
repnz
nop
nop
jae
add
aad
add
mov
negl
repnz
nop
nop
jae
add
add
add
add
mov
mov
push
mov
xchg
ret
jecxz
add
mov
add
je
nop
push
mov
leave
nop
jmp
add
jno
add
add
add
nop
nop
jae
rcr
add
enter
dec
add
movzwl
clc
repnz
nop
nop
jae
lret
roll
add
cltd
mov
xor
mov
xchg
ret
add
add
add
add
mov
addb
movsb
cs
pop
push
mov
xchg
ret
add
add
in
add
add
push
mov
dec
decl
nop
push
mov
leave
nop
jmp
add
add
and
push
lea
sti
clc
repnz
nop
nop
jae
add
pop
add
add
add
add
add
clc
repnz
nop
nop
jae
add
add
cmp
add
mov
repnz
nop
nop
jae
xorl
add
add
sbb
cld
push
mov
xchg
ret
subb
enter
push
add
nop
push
mov
leave
nop
jmp
int
sbb
lret
cld
or
pop
add
int
xchg
push
mov
xchg
ret
add
adc
xor
add
jb
mov
outsb
inc
add
add
xor
adc
push
clc
repnz
nop
nop
jae
add
add
add
fnstsw
pop
cld
clc
repnz
nop
nop
jae
mov
cld
add
add
shl
shll
sar
repnz
nop
nop
jae
mov
int
add
aad
cmpsb
les
mov
fistl
ficoml
and
aad
add
pop
mov
add
adc
ss
jmp
mov
nop
push
mov
leave
nop
jmp
add
add
mov
cld
nop
nop
jae
xchg
add
arpl
add
lret
aad
clc
repnz
nop
nop
jae
add
add
cmpl
mov
clc
repnz
nop
nop
jae
les
lret
test
nop
push
mov
leave
nop
jmp
add
add
add
jno
stos
pushf
push
push
out
pop
push
clc
repnz
nop
nop
jae
add
add
mov
add
add
cli
negl
repnz
nop
nop
jae
add
add
add
lea
add
clc
repnz
nop
nop
jae
add
add
add
add
pop
add
and
cld
pop
add
add
add
cmc
test
add
clc
repnz
nop
nop
jae
push
add
push
add
mov
mov
outsl
loopne
push
mov
leave
nop
jmp
add
add
xchg
xchg
mull
repnz
nop
nop
jae
mov
sbb
add
insl
movzwl
clc
repnz
nop
nop
jae
in
imul
push
mov
leave
nop
jmp
add
enter
add
add
add
jle
fwait
clc
repnz
nop
nop
jae
add
add
lret
clc
repnz
nop
nop
jae
pop
add
add
mov
mov
add
addr16
inc
test
jp
mov
fldl
add
dec
nop
push
mov
leave
nop
jmp
jno
push
add
add
pop
pop
clc
repnz
nop
nop
jae
lret
mov
and
push
xor
inc
add
add
push
jno
lcall
push
mov
leave
nop
jmp
push
push
lret
cs
mov
mov
mov
inc
ret
clc
repnz
nop
nop
jae
cmp
add
mov
add
adc
add
add
add
int3
jge
xor
push
mov
leave
nop
jmp
push
add
add
add
repnz
nop
nop
jae
mov
push
mov
push
add
add
mov
inc
add
add
add
add
add
enter
xchg
not
push
mov
xchg
ret
addl
mov
lret
add
add
rep
push
mov
xchg
ret
add
jno
add
or
add
repnz
nop
nop
jae
ds
mov
or
add
repnz
nop
nop
jae
push
int
add
cmp
repz
mov
xchg
ret
sbb
add
add
mov
scas
enter
nop
nop
jae
mov
sbb
test
add
add
add
inc
mov
mov
clc
repnz
nop
nop
jae
add
add
add
jmp
add
dec
enter
lret
add
dec
mov
enter
add
xchg
clc
repnz
nop
nop
jae
test
jno
add
ds
push
mov
xchg
ret
in
add
add
add
mov
mov
nop
push
mov
leave
nop
jmp
add
add
add
mov
pop
clc
repnz
nop
nop
jae
add
mov
add
add
stc
fwait
nop
push
mov
leave
nop
jmp
test
mov
roll
add
fs
or
add
add
icebp
nop
push
mov
leave
nop
jmp
add
sub
mov
add
push
mov
pop
inc
add
add
push
add
add
adc
mov
cmp
ret
rcll
push
ds
add
clc
repnz
nop
nop
jae
mov
add
add
adc
repnz
nop
nop
jae
add
jb
add
add
ja
inc
sub
nop
jmp
int
dec
mov
add
cld
nop
nop
jae
repnz
add
add
cmpsb
cltd
add
add
add
add
mov
test
nop
push
mov
leave
nop
jmp
imul
add
mov
dec
cmp
repnz
nop
nop
jae
cld
add
add
add
cmpsb
adc
nop
nop
jae
pop
add
xchg
add
push
push
add
in
xchg
pop
sub
add
add
mov
add
jns
movsb
clc
repnz
nop
nop
jae
add
add
add
add
mov
push
clc
repnz
nop
nop
jae
push
xchg
add
add
clc
repnz
nop
nop
jae
sbb
mov
add
jge
clc
repnz
nop
nop
jae
push
and
add
clc
repnz
nop
nop
jae
add
dec
mov
add
add
repnz
fld1
nop
push
mov
leave
nop
jmp
mov
add
rcrl
mov
push
mov
xchg
ret
add
add
push
arpl
nop
nop
jae
sbb
add
add
add
pop
adc
jb,pt
nop
push
mov
leave
nop
jmp
add
mov
int
add
in
leave
nop
jmp
add
add
add
sub
repnz
nop
nop
jae
add
add
dec
pop
scas
nop
push
mov
leave
nop
jmp
mov
sbb
add
fistpl
push
mov
xchg
ret
fnstsw
scas
shrl
mov
clc
repnz
nop
nop
jae
cltd
cmp
roll
push
add
add
repnz
nop
nop
jae
cltd
cltd
repnz
cmp
add
clc
repnz
nop
nop
jae
add
add
adcb
rorl
xchg
pop
add
nop
jmp
sbb
add
jno
mov
and
clc
repnz
nop
nop
jae
add
add
imul
loopne
inc
add
add
add
add
insl
cmpl
nop
push
mov
leave
nop
jmp
add
arpl
add
cmp
aaa
xor
clc
repnz
nop
nop
jae
les
dec
add
mov
mov
push
mov
xchg
ret
add
or
add
add
clc
repnz
nop
nop
jae
add
aad
dec
cltd
pop
add
lea
xor
xor
push
cmp
add
sbb
insb
sbb
add
repnz
nop
nop
jae
add
add
enter
and
add
add
nop
nop
jae
jecxz
mov
add
add
sbb
clc
repnz
nop
nop
jae
cmp
lret
add
mov
push
inc
inc
test
nop
push
mov
leave
nop
jmp
add
mov
add
mov
addr16
add
repnz
nop
nop
jae
cmp
add
add
jno
adc
add
add
add
push
mov
xchg
ret
add
int
dec
add
add
clc
push
mov
xchg
ret
add
xchg
jecxz
repnz
add
push
add
nop
push
mov
leave
nop
jmp
xchg
add
add
lret
add
add
add
iret
push
clc
repnz
nop
nop
jae
jecxz
les
lret
mov
add
add
dec
insb
mov
xchg
sbb
in
leave
nop
jmp
add
add
addl
fwait
push
mov
xchg
ret
push
add
add
mov
add
nop
push
mov
leave
nop
jmp
xchg
adc
push
scas
jecxz
and
add
repnz
nop
nop
jae
add
add
jmp
add
repnz
nop
nop
jae
xchg
pop
pop
add
xchg
sar
enter
nop
nop
jae
add
add
or
add
add
repnz
nop
nop
jae
mov
add
mov
add
ret
jmp
in
leave
nop
jmp
add
add
push
add
add
push
mov
xchg
ret
add
mov
mov
jg
clc
repnz
nop
nop
jae
addb
les
pop
lret
in
add
xchg
into
cwtl
cli
jge
je
add
nop
push
mov
leave
nop
jmp
add
aad
add
add
clc
repnz
nop
nop
jae
add
add
add
neg
call
inc
add
push
add
add
adc
lret
repnz
jp
jne
nop
push
mov
leave
nop
jmp
test
add
xor
inc
add
add
add
sarl
add
sbbb
or
repnz
nop
nop
jae
add
push
add
ror
into
in
nop
push
mov
leave
nop
jmp
scas
aad
add
add
imul
xor
push
mov
xchg
ret
pop
add
add
push
clc
mov
cmp
repnz
nop
nop
jae
cmpsb
add
add
pop
xor
jb
mov
fld1
clc
repnz
nop
nop
jae
add
cmpsb
jb
add
stos
add
push
mov
xchg
ret
add
addl
add
add
push
clc
repnz
nop
nop
jae
in
sub
push
enter
cld
icebp
pushl
push
mov
xchg
ret
add
pop
pop
test
mov
push
fwait
push
mov
xchg
ret
add
add
adc
addb
pusha
add
add
out
repnz
pop
clc
repnz
nop
nop
jae
xor
add
add
add
jne
clc
repnz
nop
nop
jae
lret
enter
add
add
mov
xchg
ret
add
add
add
add
add
shll
sbb
add
mov
scas
add
add
and
add
push
mov
xchg
ret
add
add
jb
adc
test
nop
push
mov
leave
nop
jmp
add
add
fnstsw
mov
add
add
mov
xchg
ret
les
enter
add
enter
lahf
push
clc
repnz
nop
nop
jae
cmpsb
add
xor
add
add
cmc
stos
clc
repnz
nop
nop
jae
in
add
add
push
imul
shrb
add
cmp
aad
add
add
aad
nop
push
mov
leave
nop
jmp
repnz
add
lret
pop
add
add
clc
repnz
nop
nop
jae
add
mov
add
je
nop
push
mov
leave
nop
jmp
add
add
lods
jmp
clc
repnz
nop
nop
jae
or
add
mov
add
xor
clc
repnz
nop
nop
jae
lret
sub
lds
repnz
nop
nop
jae
add
lret
add
add
add
mov
xchg
ret
add
add
or
pop
add
push
mov
cld
nop
nop
jae
test
add
cmp
push
push
mov
insl
addl
jecxz
jp
add
cmp
xchg
add
test
stos
and
mov
leave
nop
jmp
jecxz
add
add
add
pop
push
mov
xchg
ret
push
int
shll
add
cmp
xchg
insb
mov
pushf
sub
repnz
nop
nop
jae
add
add
push
add
add
add
pop
pusha
nop
push
mov
leave
nop
jmp
mov
add
jb
shrl
add
dec
jne
clc
repnz
nop
nop
jae
or
jecxz
add
xchg
and
jg
clc
repnz
nop
nop
jae
add
add
add
add
pop
xor
xor
nop
nop
jae
add
add
lret
cltd
adc
sbb
or
cld
nop
nop
jae
add
imul
cltd
add
add
clc
repnz
nop
nop
jae
xchg
int
add
rcll
clc
repnz
nop
nop
jae
pop
add
lret
pop
les
scas
or
add
repnz
nop
nop
jae
cld
add
enter
add
cld
nop
nop
jae
add
arpl
and
add
add
add
cmpsl
mov
push
mov
xchg
ret
lret
add
cltd
add
leave
push
push
mov
xchg
ret
add
add
addb
add
sbb
cli
ja
push
mov
xchg
ret
sbb
int
add
les
adc
sub
add
imul
add
repnz
nop
nop
jae
pop
aad
mov
rcll
stc
pushl
clc
repnz
nop
nop
jae
mov
lret
add
and
add
add
and
repnz
nop
nop
jae
add
mov
add
add
nop
push
mov
leave
nop
jmp
les
xor
sbb
sbb
jno
clc
repnz
nop
nop
jae
lret
add
add
enter
jne
clc
repnz
nop
nop
jae
int
ds
fldl
rorl
stos
es
nop
push
mov
leave
nop
jmp
mov
add
sarl
and
clc
repnz
nop
nop
jae
add
push
add
mov
ret
pop
clc
repnz
nop
nop
jae
add
pop
add
add
add
mov
clc
repnz
nop
nop
jae
add
lret
adcb
ljmp
clc
repnz
nop
nop
jae
cltd
add
lret
outsb
loope
clc
repnz
nop
nop
jae
add
add
add
fwait
mov
clc
repnz
nop
nop
jae
shll
enter
and
add
add
lea
xchg
ret
and
add
add
add
test
in
clc
repnz
nop
nop
jae
adc
cmp
add
out
clc
repnz
nop
nop
jae
and
xchg
add
mov
clc
repnz
nop
nop
jae
add
fst
add
push
mov
call
clc
repnz
nop
nop
jae
add
add
inc
test
nop
push
mov
leave
nop
jmp
pop
push
add
add
pop
xor
mov
xchg
ret
addb
add
add
add
push
add
adc
jns
push
sub
nop
jmp
cltd
mov
add
pop
add
repnz
nop
nop
jae
add
add
add
mov
push
mov
xchg
ret
enter
pop
shll
sbb
cmp
mov
repnz
nop
nop
jae
add
add
add
lret
add
push
clc
repnz
nop
nop
jae
mov
add
add
add
cmp
add
repnz
nop
nop
jae
les
pop
jecxz
sub
stos
fwait
push
push
mov
xchg
ret
int
add
mov
mov
mov
add
movl
lock
pop
jns
jmp
pop
mov
sbb
repnz
nop
nop
jae
add
mov
int
add
push
mov
xchg
ret
xchg
add
add
and
clc
repnz
nop
nop
jae
add
add
fmuls
xor
nop
push
mov
leave
nop
jmp
add
xchg
push
add
loopne
repnz
nop
nop
jae
add
cmpsb
ds
jb
inc
std
push
clc
repnz
nop
nop
jae
add
add
pop
add
mov
ret
add
clc
repnz
nop
nop
jae
add
test
add
sbb
add
in
leave
nop
jmp
enter
pop
jno
add
jae
clc
repnz
nop
nop
jae
push
cs
int
sbb
pop
add
jo
lahf
fwait
nop
push
mov
leave
nop
jmp
add
xchg
add
add
cmpb
or
loope
repnz
nop
nop
jae
fldl
add
arpl
orb
pop
push
clc
repnz
nop
nop
jae
add
and
repnz
jnp
clc
repnz
nop
nop
jae
push
enter
xor
add
push
mov
xchg
ret
add
add
imul
xchg
jns
jmp
add
add
add
mov
fldl
adc
add
mov
rorl
dec
add
add
add
add
int
dec
sbb
pop
jae
add
pop
add
add
add
add
rcrl
repnz
nop
nop
jae
add
imul
add
call
clc
repnz
nop
nop
jae
add
cmp
pop
pop
clc
repnz
nop
nop
jae
mov
add
add
add
jnp
les
clc
repnz
nop
nop
jae
in
add
add
stc
fistpl
push
mov
xchg
ret
enter
add
add
aad
cmpb
cmp
mov
xchg
ret
cmpsb
add
enter
cli
stos
push
nop
push
mov
leave
nop
jmp
push
add
mov
push
mov
or
push
add
add
add
ja
nop
push
mov
leave
nop
jmp
les
jecxz
add
jecxz
push
imul
call
inc
add
dec
add
scas
and
cltd
push
pop
clc
repnz
nop
nop
jae
les
add
add
cltd
add
pop
jle
push
nop
push
mov
leave
nop
jmp
jecxz
add
add
push
add
push
mov
leave
nop
jmp
enter
jb
add
add
out
clc
repnz
nop
nop
jae
add
mov
xor
subl
mov
leave
nop
jmp
add
add
add
test
incl
add
fstl
mov
addl
mov
add
push
mov
xchg
ret
add
add
xchg
add
popa
fld1
nop
push
mov
leave
nop
jmp
addl
add
sub
clc
repnz
nop
nop
jae
add
test
jecxz
push
add
or
add
addb
push
or
add
xchg
ret
add
scas
pop
add
lret
add
push
push
add
push
add
jb
ds
xchg
popf
add
clc
repnz
nop
nop
jae
cltd
repnz
add
inc
clc
repnz
nop
nop
jae
ds
add
lret
add
call
push
adc
nop
push
mov
leave
nop
jmp
cltd
push
add
add
lret
aas
xor
clc
repnz
nop
nop
jae
add
repnz
add
pop
add
xor
clc
repnz
nop
nop
jae
add
lret
add
rorl
mov
mov
pop
pusha
mov
mov
lea
clc
repnz
nop
nop
jae
mov
add
scas
jecxz
cld
jno
mov
incl
enter
add
lret
push
add
mov
jns
push
loopne
mov
xchg
ret
test
dec
push
addb
xchg
ror
jle
adcb
jns
inc
add
add
mov
add
add
mov
xor
push
mov
xchg
ret
pop
add
fstpl
mov
push
add
add
jns
repz
repnz
nop
nop
jae
add
xchg
add
mov
mov
mov
xchg
ret
mov
in
mov
add
aaa
cmp
nop
push
mov
leave
nop
jmp
shrl
addb
cmp
adc
repnz
nop
nop
jae
scas
cs
cltd
int
add
add
nop
push
mov
leave
nop
jmp
push
lret
add
sbb
repnz
add
jmp
add
add
add
roll
add
add
add
or
je
movsb
adc
repnz
nop
nop
jae
add
cs
pop
pop
add
mov
nop
nop
jae
add
add
add
cmp
fwait
mov
clc
repnz
nop
nop
jae
cltd
mov
add
cmp
mov
mov
mov
leave
nop
jmp
mov
xorb
add
push
add
add
test
add
cmp
mov
xchg
ret
fldl
shrl
or
lret
add
mov
nop
nop
jae
add
xor
add
nop
nop
jae
jb
push
mov
add
add
insb
mov
pop
and
in
leave
nop
jmp
dec
test
add
add
and
repnz
nop
nop
jae
mov
aad
or
pop
cld
add
or
add
add
insb
mov
mov
pop
clc
repnz
nop
nop
jae
add
add
push
add
add
and
clc
repnz
nop
nop
jae
enter
mov
cld
scas
mov
clc
repnz
nop
nop
jae
in
add
lret
add
xchg
or
in
leave
nop
jmp
mov
add
mov
add
mov
clc
repnz
nop
nop
jae
imul
mov
mov
clc
repnz
nop
nop
jae
add
add
add
scas
add
mov
mov
xchg
ret
add
pop
cmp
add
repnz
popf
insl
inc
add
add
push
add
add
les
in
es
add
add
test
insb
add
clc
repnz
nop
nop
jae
push
mov
cmpsb
push
sbb
add
bnd
dec
mov
je
clc
repnz
nop
nop
jae
push
add
add
and
repnz
nop
nop
jae
add
scas
push
push
add
cmp
call
clc
repnz
nop
nop
jae
mov
add
cmp
mov
cmp
ret
add
add
mov
push
add
add
sub
popa
clc
repnz
nop
nop
jae
test
push
add
pop
mov
push
mov
xchg
ret
add
les
lods
cmp
in
leave
nop
jmp
and
in
addb
add
mov
xchg
ret
pop
add
push
mov
add
add
push
clc
repnz
nop
nop
jae
add
arpl
add
add
es
xor
clc
repnz
nop
nop
jae
add
add
add
enter
add
addl
nop
nop
jae
add
addl
add
jb
jo
push
nop
push
mov
leave
nop
jmp
add
add
adc
push
push
mov
xchg
ret
add
in
mov
clc
repnz
nop
nop
jae
pop
add
mov
imul
repnz
nop
nop
jae
les
mov
lret
and
add
add
mov
jno
add
add
cmpsb
add
add
add
call
inc
add
add
add
add
out
fwait
clc
repnz
nop
nop
jae
add
lea
add
add
nop
nop
jae
and
xchg
les
lea
repnz
nop
nop
jae
les
xchg
mov
mov
mov
clc
repnz
nop
nop
jae
add
add
inc
mov
repnz
nop
push
mov
leave
nop
jmp
add
add
lret
frstor
mov
nop
push
mov
leave
nop
jmp
les
addl
lret
add
inc
mov
clc
repnz
nop
nop
jae
lret
adcb
mov
pop
push
mov
xchg
ret
add
mov
add
sub
mov
clc
repnz
nop
nop
jae
add
add
stos
pop
push
mov
xchg
ret
add
mov
add
and
mov
nop
push
mov
leave
nop
jmp
cmpsb
add
mov
add
loope
inc
add
les
xor
and
clc
clc
repnz
nop
nop
jae
xchg
add
lea
add
jb
add
cld
add
clc
repnz
nop
nop
jae
add
adc
das
add
clc
repnz
nop
nop
jae
add
lea
cltd
add
add
add
repnz
nop
nop
jae
add
add
add
add
dec
nop
push
mov
leave
nop
jmp
les
push
lret
fldl
add
add
mov
int
pop
jae
repnz
nop
nop
jae
add
add
add
add
jno
inc
ljmp
add
roll
jb
push
xchg
mov
add
sar
mov
notl
and
add
pop
add
add
enter
fdivrl
pop
push
fcomps
mov
cmp
ret
push
add
enter
add
repnz
nop
nop
jae
rcll
add
add
in
leave
nop
jmp
mov
add
add
call
nop
jae
imul
add
add
movsb
cmp
add
add
nop
push
mov
leave
nop
jmp
add
mov
xorb
cltd
jne
clc
repnz
nop
nop
jae
add
addb
add
popf
movzwl
clc
repnz
nop
nop
jae
imul
mov
mov
add
add
popa
rol
push
mov
xchg
ret
add
cld
lret
add
imul
add
clc
repnz
nop
nop
jae
jecxz
enter
add
rol
ret
sub
clc
repnz
nop
nop
jae
add
pop
test
lret
enter
nop
push
mov
leave
nop
jmp
sub
add
add
mov
addl
nop
nop
jae
adc
add
add
jb
add
add
in
popa
clc
repnz
nop
nop
jae
or
ds
add
add
jb
mov
mov
clc
repnz
nop
nop
jae
add
add
add
add
in
mov
nop
push
mov
leave
nop
jmp
add
jb
mov
and
push
mov
leave
nop
jmp
add
add
add
mov
jp
nop
push
mov
leave
nop
jmp
add
cltd
push
add
add
mov
repnz
nop
nop
jae
push
addb
or
add
add
clc
repnz
nop
nop
jae
rorl
and
shrb
repnz
nop
nop
jae
add
int
cld
add
add
xchg
jne
clc
repnz
nop
nop
jae
mov
add
mov
xchg
add
push
mov
xchg
ret
cltd
mov
mov
aad
add
add
clc
repnz
nop
nop
jae
add
add
xchg
add
xor
cld
fs
add
add
pop
int
jb
rcrl
frstor
call
clc
repnz
nop
nop
jae
int
pop
add
pop
test
xchg
xor
repnz
nop
nop
jae
add
pop
add
add
add
mov
rolb
repnz
nop
nop
jae
add
add
aad
cltd
repnz
imul
xchg
ret
lret
aad
add
add
mov
test
or
add
nop
jmp
cltd
and
add
clc
push
mov
xchg
ret
cld
pop
and
add
add
dec
clc
dec
inc
clc
repnz
nop
nop
jae
xchg
cld
add
sub
mov
xchg
ret
add
imul
inc
add
add
test
int
add
rorl
test
add
clc
repnz
nop
nop
jae
shll
add
add
add
test
add
clc
repnz
nop
nop
jae
add
push
xor
pusha
inc
add
cld
add
add
add
add
mov
clc
repnz
nop
nop
jae
add
in
int
add
cmpsb
jecxz
hlt
lcall
fwait
push
clc
repnz
nop
nop
jae
xorl
add
add
add
push
mov
xchg
ret
push
jb
xor
push
add
and
sbb
clc
repnz
nop
nop
jae
enter
jb
add
sub
nop
add
clc
repnz
nop
nop
jae
add
addb
sbb
adc
nop
stos
pushl
clc
repnz
nop
nop
jae
add
xchg
add
adc
mov
movb
jl
inc
add
scas
in
add
add
or
add
pop
push
clc
repnz
nop
nop
jae
add
aad
roll
mov
lahf
stos
push
mov
xchg
ret
dec
add
add
add
add
and
or
push
push
mov
xchg
ret
arpl
add
xchg
add
in
lret
xor
clc
repnz
nop
nop
jae
scas
add
add
cs
add
repnz
nop
nop
jae
aad
push
pop
add
push
push
xchg
pop
push
mov
xchg
ret
dec
mov
add
mov
sub
jo
repnz
nop
nop
jae
add
add
mov
nop
push
mov
leave
nop
jmp
pop
add
add
in
pop
push
mov
xchg
ret
adc
in
add
stc
mov
push
mov
xchg
ret
add
add
pop
push
jl,pn
out
movswl
clc
repnz
nop
nop
jae
cltd
mov
repnz
les
fmul
and
nop
push
mov
leave
nop
jmp
push
mov
mov
add
and
add
repnz
nop
nop
jae
xchg
add
add
add
enter
and
repnz
nop
nop
jae
add
push
add
ret
call
clc
repnz
nop
nop
jae
add
add
inc
add
add
xor
add
clc
repnz
nop
nop
jae
add
add
add
add
fs
scas
lds
jo
add
repnz
nop
nop
jae
add
mov
add
lret
push
nop
jge
sbb
cmp
repnz
nop
nop
jae
add
add
xchg
mov
and
mov
xchg
ret
or
add
add
mov
add
cld
nop
nop
jae
add
lret
add
ds
push
push
cmc
push
push
mov
xchg
ret
in
mov
fldl
add
arpl
push
add
rcll
repnz
nop
nop
jae
add
and
mov
sub
push
mov
leave
nop
jmp
mov
ds
add
add
add
clc
repnz
nop
nop
jae
push
add
cld
mov
add
add
les
repnz
nop
nop
jae
add
add
add
jecxz
add
clc
repnz
nop
nop
jae
lea
add
add
add
mov
jbe
nop
push
mov
leave
nop
jmp
aad
shll
jno
pop
into
push
push
clc
repnz
nop
nop
jae
add
add
add
cmp
pop
mov
clc
repnz
nop
nop
jae
mov
pop
add
pop
adc
add
cwtl
test
dec
mov
xchg
ret
push
add
mov
add
add
push
push
jp
pop
push
mov
xchg
ret
mov
jno
xchg
xor
add
add
mov
clc
repnz
nop
nop
jae
jno
add
scas
cmp
mov
insl
popa
clc
repnz
nop
nop
jae
pop
add
addl
push
add
add
add
repnz
nop
nop
jae
add
add
xchg
mov
add
add
nop
push
mov
leave
nop
jmp
add
add
pop
test
add
fwait
push
mov
xchg
ret
jb
push
add
mov
add
add
pop
push
mov
xchg
ret
mov
xchg
cld
add
cld
add
or
repnz
nop
nop
jae
add
sbb
test
stc
mov
push
mov
xchg
ret
add
lea
enter
test
add
inc
clc
repnz
nop
nop
jae
in
add
scas
mov
test
repnz
nop
nop
jae
lea
jno
test
nop
push
mov
leave
nop
jmp
arpl
int
add
add
push
clc
repnz
nop
nop
jae
add
add
cmpsb
enter
enter
ret
push
mov
xchg
ret
jecxz
xchg
test
add
cmpsb
mov
cmpb
mov
test
clc
repnz
nop
nop
jae
add
push
add
push
ja
clc
repnz
nop
nop
jae
add
pop
clc
repnz
nop
nop
jae
add
add
add
mov
or
add
clc
repnz
nop
nop
jae
add
lret
shrl
add
clc
repnz
nop
nop
jae
add
mov
jne
clc
repnz
nop
nop
jae
add
add
push
mov
xchg
ret
add
add
add
mov
add
add
add
loopne
loope
add
cmp
jg
flds
pop
cmp
mov
xchg
ret
sub
addb
in
add
andl
in
leave
nop
jmp
test
push
lret
mov
mov
mov
repnz
nop
nop
jae
add
and
repnz
int
xabort
cld
nop
nop
jae
int
jno
pop
push
add
mov
call
nop
jae
add
add
les
add
push
inc
add
repnz
jno
imul
inc
push
clc
repnz
nop
nop
jae
xchg
cltd
xchg
fldl
push
enter
add
add
add
add
add
nop
push
mov
leave
nop
jmp
addl
add
xchg
mov
pop
push
mov
xchg
ret
add
mov
add
pop
pop
cmp
sbb
nop
jmp
add
add
lret
pop
roll
div
jmp
leave
nop
jmp
mov
push
add
add
push
add
rorb
add
orb
xchg
inc
add
add
add
add
add
add
repnz
nop
nop
jae
in
add
pop
cltd
add
clc
repnz
nop
nop
jae
add
add
add
pop
pop
clc
repnz
nop
nop
jae
scas
mov
repnz
xor
add
add
push
mov
xchg
ret
add
add
add
push
mov
xchg
ret
add
mov
in
mov
repnz
popf
je
clc
repnz
nop
nop
jae
lret
add
add
repnz
nop
nop
jae
mov
add
add
add
arpl
nop
push
mov
leave
nop
jmp
mov
push
add
aaa
mov
push
mov
xchg
ret
add
addl
sbb
add
xor
adc
nop
jmp
add
les
imul
fists
push
mov
leave
nop
jmp
rol
subl
add
push
je
clc
repnz
nop
nop
jae
add
add
jno
add
cld
nop
nop
jae
add
mov
add
addl
cld
nop
nop
jae
push
add
jecxz
mov
loope
clc
repnz
nop
nop
jae
repnz
sbb
mov
jmp
add
add
lret
cs
add
in
sub
add
add
jge
push
mov
xchg
ret
mov
add
cltd
mov
push
add
cmp
mov
add
push
mov
xchg
ret
add
add
add
add
adc
nop
jmp
add
add
add
pop
push
clc
repnz
nop
nop
jae
add
add
add
add
mov
xchg
ret
cltd
in
add
pop
add
sbbb
sub
mov
repnz
nop
nop
jae
add
add
xchg
scas
cltd
rcrl
movsb
out
incl
pop
add
mov
scas
add
push
xchg
push
push
dec
mov
ljmp
repnz
nop
nop
jae
add
add
add
and
add
fld1
clc
repnz
nop
nop
jae
mov
ds
add
add
mov
xchg
push
clc
repnz
nop
nop
jae
mov
lret
add
add
int
mov
push
clc
repnz
nop
nop
jae
add
add
add
arpl
add
repnz
nop
nop
jae
addb
aad
add
mov
ret
nop
push
mov
leave
nop
jmp
add
add
adc
add
repnz
nop
nop
jae
add
push
xor
roll
cld
nop
nop
jae
pop
mov
add
add
add
lods
push
mov
xchg
ret
add
add
add
add
add
mov
mov
clc
repnz
nop
nop
jae
push
roll
add
jb
add
add
repnz
nop
nop
jae
enter
mov
and
rorl
mov
xchg
ret
add
add
cs
cmp
clc
repnz
nop
nop
jae
add
add
es
call
clc
repnz
nop
nop
jae
mov
repnz
jno
add
nop
push
mov
leave
nop
jmp
add
scas
add
push
add
lret
pop
pop
push
mov
xchg
ret
add
add
add
cmpsb
mov
fimull
xor
clc
repnz
nop
nop
jae
add
mov
testl
nop
push
mov
leave
nop
jmp
push
in
jno
roll
sahf
icebp
push
clc
repnz
nop
nop
jae
push
rcrl
test
lret
add
lret
lret
mov
leave
nop
jmp
add
xchg
in
add
pop
jnp
push
mov
xchg
ret
add
cmp
mov
add
cmp
push
mov
xchg
ret
in
jecxz
imul
push
add
mov
clc
repnz
nop
nop
jae
dec
add
push
cmpsl
je
clc
repnz
nop
nop
jae
add
add
push
push
mov
xchg
ret
sub
add
add
fisttpll
cld
nop
nop
jae
cmpsb
add
add
push
mov
add
mov
clc
repnz
nop
nop
jae
add
enter
fcmovnb
iret
or
inc
add
add
pop
mov
add
mov
cmp
ret
push
add
mov
enter
cld
outsb
int3
push
xor
jne
add
sbb
push
lea
pop
xchg
add
add
add
jmp
add
add
add
jb
add
jno
mov
sbbl
add
add
pop
scas
add
icebp
call
nop
push
mov
leave
nop
jmp
add
mov
clc
repnz
nop
nop
jae
mov
jecxz
push
mov
cmp
loopne
fmull
sbb
inc
add
add
bound
push
or
repnz
nop
nop
jae
add
pop
roll
lret
mov
nop
push
mov
leave
nop
jmp
push
add
add
and
add
je
push
push
mov
xchg
ret
addb
add
add
add
xchg
xchg
push
mov
in
cmp
add
dec
add
add
add
add
test
clc
repnz
nop
nop
jae
pop
lret
in
or
add
lret
lea
idivb
rorl
mov
leave
nop
jmp
scas
add
add
add
in
sbb
clc
repnz
nop
nop
jae
addl
jb
dec
add
add
add
nop
jmp
enter
cmp
enter
add
add
mov
cld
nop
nop
jae
lret
add
cltd
add
dec
add
repnz
nop
nop
jae
add
xchg
pop
add
mov
add
iret
add
clc
repnz
nop
nop
jae
pop
pop
in
add
add
cmp
nop
push
mov
leave
nop
jmp
jb
add
jno
add
fists
push
mov
leave
nop
jmp
or
mov
lret
push
lret
xchg
push
push
mov
xchg
ret
add
add
add
add
pop
cmp
mov
rep
clc
repnz
nop
nop
jae
add
add
add
add
clc
repnz
nop
nop
jae
add
imul
orl
jae
mov
push
mov
dec
push
clc
repnz
nop
nop
jae
pop
add
mov
mov
jnp
sar
cld
nop
nop
jae
lret
mov
lret
jno
xlat
lea
nop
push
mov
leave
nop
jmp
add
add
add
test
aam
lret
int
clc
repnz
nop
nop
jae
add
add
dec
jb
add
add
subb
repnz
nop
nop
jae
pop
or
add
mov
cmp
mov
xchg
ret
enter
add
add
pop
xlat
push
clc
repnz
nop
nop
jae
add
add
add
xchg
add
dec
add
jbe
inc
add
mov
add
fldl
and
test
push
mov
xchg
ret
add
roll
int
adc
mov
jno
clc
repnz
nop
nop
jae
push
add
addl
in
push
in
clc
repnz
nop
nop
jae
add
xchg
push
mov
add
les
nop
nop
jae
add
xchg
add
add
test
call
inc
add
add
add
arpl
and
lods
clc
repnz
nop
nop
jae
add
enter
add
add
adc
loop
mov
xchg
ret
sbb
add
scas
cmpsb
add
add
push
ror
enter
nop
nop
jae
or
add
pop
enter
push
mov
xchg
ret
jb
lea
aad
mov
stos
clc
repnz
nop
nop
jae
arpl
addb
add
mov
mov
xchg
ret
add
and
sbb
add
add
sub
call
nop
jae
mov
dec
arpl
add
xor
push
mov
xchg
ret
scas
dec
addl
arpl
xor
push
mov
xchg
ret
add
add
add
add
add
add
mov
clc
repnz
nop
nop
jae
add
add
add
lret
add
push
mov
add
add
add
dec
xchg
add
add
add
add
add
clc
repnz
nop
nop
jae
cmpsb
add
add
loopne
push
add
clc
repnz
nop
nop
jae
add
add
mov
repnz
nop
nop
jae
cltd
add
jecxz
les
mov
add
mov
repnz
nop
nop
jae
add
dec
xchg
cs
add
les
repnz
nop
nop
jae
cmp
cmp
dec
add
mov
add
insl
mov
clc
repnz
nop
nop
jae
add
lret
add
add
shll
sti
clc
repnz
nop
nop
jae
push
aad
mov
pop
add
or
shr
clc
repnz
nop
nop
jae
adc
add
pop
xor
mov
push
mov
xchg
ret
add
add
int
add
cmpsb
mov
mov
xchg
ret
add
add
add
add
arpl
sbb
nop
push
mov
leave
nop
jmp
dec
mov
add
xor
repnz
nop
nop
jae
cmpsb
add
add
pop
add
cmc
xor
push
mov
xchg
ret
add
pop
add
add
add
mov
mov
push
clc
repnz
nop
nop
jae
add
pop
add
add
add
add
imul
nop
jae
add
mov
pop
addl
nop
nop
jae
push
add
add
mov
add
lsl
push
mov
xchg
ret
push
add
add
mov
jne
nop
push
mov
leave
nop
jmp
jb
push
in
xchg
mov
push
push
mov
xchg
ret
add
add
sub
add
add
addl
jne
repnz
nop
nop
jae
mov
add
add
popa
mov
clc
repnz
nop
nop
jae
add
enter
imul
xchg
ret
lret
add
cmp
add
lret
les
add
cmpsl
push
nop
push
mov
leave
nop
jmp
add
add
sbb
add
mov
add
add
repnz
nop
nop
jae
mov
add
in
stc
div
clc
repnz
nop
nop
jae
add
lea
add
add
mov
push
mov
xchg
ret
add
add
add
enter
cmp
test
nop
push
mov
leave
nop
jmp
add
add
add
mov
cmp
cld
nop
nop
jae
add
add
inc
mov
push
jmp
dec
mov
int
xchg
add
add
add
mov
clc
repnz
nop
nop
jae
dec
add
add
add
je
shl
clc
repnz
nop
nop
jae
cmp
add
add
adcb
nop
push
mov
leave
nop
jmp
cld
push
add
mov
nop
push
mov
leave
nop
jmp
arpl
pop
mov
int
add
mov
clc
repnz
nop
nop
jae
add
add
cmp
add
push
mov
xchg
ret
cmpsb
add
enter
jb
add
ljmp
add
add
repnz
nop
nop
jae
pop
mov
orl
test
nop
push
mov
leave
nop
jmp
add
add
dec
add
mov
dec
cmp
repnz
nop
nop
jae
add
dec
int
push
roll
add
dec
mov
push
mov
xchg
ret
jb
add
add
add
les
mov
xchg
ret
jb
add
add
mov
xchg
ret
and
add
add
sub
add
add
add
stc
lods
push
mov
xchg
ret
add
pop
ds
lret
cmpsb
cltd
rcll
xor
nop
jae
add
add
add
js
add
mov
arpl
add
add
pop
sub
push
mov
xchg
ret
add
add
int
enter
add
mov
ret
nop
push
mov
leave
nop
jmp
mov
lret
or
or
add
add
aad
in
push
mov
xchg
ret
push
xor
add
add
mov
lret
clc
repnz
nop
nop
jae
push
cs
add
enter
fdivr
repnz
nop
nop
jae
add
add
add
add
mov
mov
xchg
ret
push
add
enter
cmpsb
sub
in
call
nop
jmp
add
add
push
clc
repnz
nop
nop
jae
pop
add
add
add
sub
aas
jne
nop
push
mov
leave
nop
jmp
add
xchg
add
mov
push
mov
leave
nop
jmp
add
add
jecxz
ds
enter
out
inc
nop
push
mov
leave
nop
jmp
shll
cmpsb
add
push
add
lret
clc
repnz
nop
nop
jae
scas
mov
add
add
mov
clc
repnz
nop
nop
jae
add
add
add
imul
js
clc
repnz
nop
nop
jae
add
add
add
push
outsb
in
mov
clc
repnz
nop
nop
jae
add
jecxz
pop
push
add
mov
add
clc
repnz
nop
nop
jae
mov
les
add
add
sar
clc
repnz
nop
nop
jae
enter
push
arpl
push
mov
mov
or
add
add
out
add
and
pop
mov
mov
movsl
and
add
out
pop
leave
test
mov
push
add
add
add
add
add
mov
cmp
lods
daa
add
divb
push
or
add
push
aas
xchg
pop
adc
sbb
add
ret
in
xchg
iret
jae
mov
lds
cmp
sbb
mov
xchg
pop
aad
push
xlat
inc
xor
js
inc
mov
dec
add
pop
ja
lods
add
xchg
insb
mov
pop
adc
add
adc
xorl
lcall
imul
add
add
push
mov
les
add
add
std
mov
sbb
incl
add
fistpl
xor
stos
cmp
sub
fwait
add
add
add
outsb
addr16
inc
add
add
sar
push
jp
insb
add
add
and
add
pusha
mov
nop
lds
add
pop
cmpsl
lods
sub
add
add
outsl
mov
ljmp
add
add
inc
or
sub
add
divl
add
add
stos
or
pop
lods
cmp
inc
mov
push
push
cmp
insb
mov
cmpsl
cltd
dec
add
add
fbld
lcall
xchg
mov
jne
push
pop
das
and
add
add
xor
js
mov
push
roll
stos
cs
jmp
add
add
add
add
shlb
js
sub
add
add
fsubrl
rcrb
xor
xor
sbb
add
and
add
add
jbe
aaa
ss
nop
dec
call
mov
mov
ds
roll
dec
and
add
add
mov
lcall
dec
outsb
orl
xchg
repnz
mov
in
push
aaa
lcall
xorb
loopne
add
daa
test
stos
inc
add
add
add
add
repnz
mov
repz
add
mov
lret
ficoml
scas
xlat
and
cli
in
cmp
add
add
pop
adc
scas
add
add
add
and
add
add
jnp
outsb
inc
out
aas
push
lea
sbb
fcomip
xor
lret
xchg
push
decl
repnz
push
xchg
rcrb
cmc
frstpm(287
fsts
dec
add
add
and
add
add
add
add
add
add
push
cmovno
pushf
cmp
aaa
pushf
inc
mov
adc
add
mov
cmpsb
adc
xchg
push
roll
scas
leave
jp
xchg
adc
mov
fbld
mov
scas
mov
mov
fcompl
push
or
mov
not
andl
add
add
imul
add
add
invd
add
add
ret
int3
rcr
mov
mov
xchg
lods
popf
enter
notb
sbb
add
or
iret
xor
outsl
cs
mov
or
add
add
das
aad
fwait
cmpsl
aad
sti
lahf
push
stos
inc
cmp
testb
cmp
cmpsl
inc
mov
pop
and
add
add
jne
dec
cli
scas
jae
dec
jmp
pusha
add
add
lret
addr16
enter
xlat
dec
mov
mov
mov
and
aad
testl
adc
xor
add
add
dec
fnsave
testl
mov
pushf
add
add
add
jmp
push
daa
jo
nop
or
sbb
cwtl
aad
xchg
pop
or
add
pop
aam
lahf
daa
int3
sub
mov
mov
pop
loope
mov
add
add
test
mov
repnz
cmp
add
lea
mov
pop
jns
add
and
dec
mov
nop
int3
inc
dec
sub
add
add
push
and
add
add
mov
mov
fxch
loop
mov
gs
add
add
add
add
add
add
push
repz
sub
add
add
enter
add
lret
cmpsb
mov
mov
mov
add
add
add
add
lahf
xchg
clc
xor
mov
add
adc
add
add
add
add
add
fdivrl
jbe
or
add
add
push
cli
stos
dec
add
add
clc
call
xchg
add
test
daa
sub
mov
dec
cltd
and
add
add
leave
je
outsl
sub
inc
mov
mov
mov
xor
jmp
js
lret
pop
nop
inc
mov
jecxz
ret
insl
pop
inc
lret
les
xchg
add
or
add
add
enter
add
subl
cmp
add
add
or
test
xor
mov
dec
add
add
cmp
out
out
xlat
lret
mov
adc
sahf
call
je
bound
test
push
xchg
rcl
jns
sbb
push
sub
add
out
sub
add
add
nop
cmp
enter
pop
ret
lret
inc
out
js
inc
imul
fdivrs
imul
wbinvd
xchg
ja
and
shlb
stc
dec
scas
inc
sahf
fwait
push
cltd
loopne
rcrl
mov
jp
outsb
ret
jns
or
movsl
leave
xchg
fadds
add
add
inc
ret
inc
mov
inc
stc
sar
cli
ficoml
xchg
add
cmp
pop
mov
add
dec
rolb
notl
in
inc
lahf
sub
push
cwtl
add
add
xorb
xor
mov
xor
or
add
add
daa
inc
add
add
repz
test
push
lret
lods
dec
mov
xor
add
add
sub
out
call
add
add
add
fistpl
je
adc
push
in
sbb
es
popf
or
jecxz
xchg
int
sub
add
add
pop
shlb
scas
add
lret
insb
mov
or
dec
jae
xchg
in
rclb
jne
xchg
popa
add
add
add
lods
cmpsb
shll
mov
in
mov
add
xor
pushf
outsl
bound
ja
mov
subl
sbb
jg
sbb
mov
jecxz
sbb
add
add
push
sbb
test
lret
mov
push
jbe
lahf
push
dec
sbb
cmp
mull
outsb
mov
jns
loopne
inc
add
add
stos
stc
xchg
out
sub
add
add
inc
pusha
add
add
shll
mov
jge
lret
enter
test
mov
adc
jmp
sbbb
stos
rcrb
sbb
add
jecxz
inc
lods
repz
cwtl
or
add
and
inc
test
mov
in
add
add
inc
mov
stc
rcll
shr
cmp
movsb
inc
jbe
and
in
mov
dec
push
std
jge
push
leave
dec
cltd
adc
pop
retw
xor
dec
test
add
std
xchg
mov
or
popa
fwait
lret
mov
push
je
iret
push
shrb
jne
lock
mov
in
inc
addb
add
add
add
and
mov
mov
and
add
add
pop
mov
jno
mov
jb
push
dec
xchg
or
add
add
xorb
and
add
add
pop
lds
add
add
mov
add
add
adc
push
mov
out
call
repnz
bound
mov
jmp
popa
test
popw
xchg
xor
mov
sbb
imul
add
adc
jmp
pop
dec
pusha
mov
cld
mov
add
add
jnp
sub
add
dec
xor
inc
into
out
movsl
mov
shlb
cmpsb
js
add
mov
add
add
push
out
pop
ret
dec
or
pop
inc
dec
stc
adc
inc
inc
repnz
xchg
bound
xchg
or
add
add
lcall
xlat
inc
mov
fwait
mov
shll
jg
aas
iret
test
add
add
add
andl
add
mov
xor
sub
cmp
cs
ffreep
ds
mov
js
push
call
push
lock
inc
enter
inc
add
add
jns
or
mov
orl
add
ret
pop
push
ss
mov
adc
cmp
popa
mov
mov
add
adc
inc
jbe
or
push
test
fsts
int3
cltd
out
xor
pop
imul
mov
imulb
push
adc
movsb
mov
cmc
push
lods
mov
push
ja
cld
imul
sub
add
pslld
icebp
pop
mull
dec
mov
fs
mov
add
iret
inc
inc
out
mov
aad
icebp
push
jo
push
and
sbb
inc
leave
mov
add
jne
dec
add
add
cwtl
bound
add
add
fldcw
movsl
loopne
push
popl
ds
mov
imul
jp
shlb
push
xor
mov
add
add
cmc
es
ljmp
pop
cmpl
sbb
addb
add
jge
int3
loop
pusha
add
add
mov
pop
jno
stos
adc
out
add
add
adc
add
add
push
mov
jl
mov
jo
daa
push
inc
incl
ljmp
or
gs
xchg
negl
das
push
sbb
and
add
add
int
cwtl
cwtl
repz
mov
add
out
mov
test
xor
div
mov
clc
pop
or
mov
sub
repnz
sub
add
add
test
mov
in
out
sbb
aas
daa
aaa
mov
mov
jge
mov
jne
mov
sub
add
add
ds
add
cmp
sbb
fsts
aam
inc
mov
cmp
or
add
add
cmp
add
sbb
push
xchg
xor
mov
out
pop
dec
test
addr16
xor
dec
add
add
out
lcall
and
xchg
call
and
add
add
jnp
mov
push
int3
cwtl
xor
mov
insl
mov
xor
lock
gs
hlt
adcb
outsl
pop
loop
sbb
sbb
faddl
fisttps
add
add
push
cs
cmp
add
mov
xor
aas
insl
stos
scas
test
ss
add
add
test
test
push
add
add
add
pushf
cltd
mov
mov
push
cmc
stc
push
jb
cmp
stos
adc
rcr
mov
inc
shll
loope
push
daa
sub
aaa
js
imul
add
add
lcall
mov
add
xor
mov
in
cli
xorb
insl
sbb
mov
inc
add
add
adc
pop
or
add
add
sbb
add
dec
mov
sbb
adc
es
add
add
popf
rcll
mov
xor
add
add
jp
pop
inc
ja
jbe
js
xchg
or
mov
outsl
pop
movsb
out
or
mov
inc
mov
inc
mov
mov
add
lahf
test
mov
data16
repnz
cmp
stc
push
sbb
mov
insw
incl
jns
aas
pop
sarl
jbe
xrelease
sahf
add
add
sub
add
ds
imul
or
add
add
stc
xchg
arpl
add
add
jbe
add
add
xchg
mov
add
add
xor
imul
add
mov
mov
add
add
xorl
cmp
add
add
cwtl
sub
add
cmc
mov
mov
fimuls
mov
mov
mov
add
add
popf
call
xchg
les
add
add
jl
jno
in
mulb
icebp
jnp
and
xchg
repz
add
add
filds
inc
mov
xor
popf
push
ja
cmpsb
push
idivl
lock
add
add
sbb
xor
pop
fstps
clc
pop
shll
fisubs
add
add
loop
in
xor
call
add
inc
les
push
mov
add
add
stos
sub
add
add
fnsave
outsb
jns
mov
xor
stc
rcrb
add
add
fistl
cltd
pop
pop
adc
hlt
jnp
mov
iret
daa
or
mov
mov
add
jp
pop
fistps
dec
fistpl
lock
sbb
add
cmc
pop
mov
adc
hlt
ja
loopne
shll
mov
xor
sti
cld
dec
mov
add
add
xchg
mov
cmpsl
cs
xchg
aam
sub
add
add
inc
leave
inc
cmpsb
mov
pop
or
add
add
sbb
hlt
add
add
out
leave
jg
mov
arpl
mov
notb
test
mov
xlat
lret
imul
jnp
mov
jmp
cmp
and
add
add
dec
or
dec
add
add
cmpsb
test
sbb
jmp
add
data16
cmp
xchg
pop
sub
les
add
add
inc
add
add
mov
mov
sub
xorb
popf
sar
sbb
sbb
addr16
aas
mov
pusha
mov
sbb
or
add
add
add
add
ds
fmull
add
sahf
rolb
lds
or
add
add
ljmp
fcmovbe
fsincos
nop
mov
add
mov
cmp
add
shlb
add
add
add
pop
cmp
add
add
aaa
mov
repz
xor
mov
add
mov
in
out
cld
shl
inc
repz
dec
mov
cld
and
int3
movsl
adc
pop
stos
push
dec
add
add
dec
mov
in
dec
ficoml
add
imul
movl
mov
lret
add
add
inc
add
add
test
jns
movsl
ja
scas
enter
mov
add
pusha
mov
jl
scas
xchg
mov
mov
add
add
sbb
cltd
xchg
test
sbb
add
add
push
mov
inc
test
fimull
call
inc
mov
sub
cmpsl
inc
lret
xchg
sti
inc
popf
mov
cmp
jb
pop
dec
pop
loop
bound
add
dec
push
pop
jmp
push
pop
push
mov
sub
ret
decl
sbb
xchg
add
add
mov
dec
xchg
pop
stc
jnp
or
add
add
add
add
in
jns
push
repnz
inc
scas
adcb
cmpsb
sub
add
add
mov
pop
stc
mov
jecxz
inc
ret
pop
mov
add
mov
and
sub
add
add
inc
mov
and
add
add
data16
lods
dec
sahf
ljmp
add
add
xchg
mov
jecxz
adc
mov
cs
xchg
adc
add
test
adc
dec
mov
inc
mov
xchg
inc
xchg
xor
not
dec
xor
mov
repz
in
cmp
add
loope
icebp
mov
dec
dec
jns
in
xchg
imul
hlt
push
mov
jg
out
dec
xor
add
add
lds
fwait
adc
ss
jl
aam
pop
mov
in
push
into
push
inc
mov
jp
mov
add
add
xor
outsl
cmp
add
add
iret
jle
fnstenv
xchg
daa
push
mov
cwtl
jns
shll
mov
dec
jnp
ss
das
adc
scas
sbbb
add
push
or
add
add
loop
xchg
jb
scas
rol
arpl
clc
mov
mov
stos
xchg
sbb
push
andl
notb
jmp
mov
out
mov
sub
adc
outsb
shrl
hlt
cld
xor
xorps
sbb
mov
sub
shlb
dec
or
add
add
sub
add
add
or
clc
rorl
sbb
lods
loopne
add
add
rcl
js
int3
shl
push
aad
lods
cmp
add
add
int3
jo
test
fisubs
gs
adc
pop
ficompl
mov
ret
add
decb
jmp
xor
js
cltd
mov
arpl
mov
test
shlb
adcb
add
add
es
jae
test
mov
movsb
enter
jae
in
xchg
inc
add
add
ret
mov
rcl
jns
stos
out
add
add
add
das
jge
mov
pcmpgtd
pop
dec
add
add
vmread
mov
cs
adc
sbb
dec
mov
and
daa
arpl
cmp
negl
mov
mov
mov
jg
mov
aas
xchg
pusha
mov
dec
cmpsb
mov
cmpsb
lret
fstpl
imull
cli
test
jbe
xchg
cltd
and
stos
pop
ljmp
mov
push
out
out
movsl
movsl
xchg
add
add
mov
xor
sub
inc
fwait
cmp
dec
mov
xlat
dec
xchg
adc
aas
add
add
add
or
inc
pop
test
sbb
add
add
add
inc
add
add
adc
adc
in
mov
frstor
jl
daa
push
loope
push
cmpsb
cmp
push
std
adcl
lock
mov
add
add
add
sbb
repz
jmp
jp
leave
mov
add
add
inc
mov
setg
movsl
mov
into
push
out
cltd
leave
and
add
add
imul
mov
push
xor
fbstp
jo
out
jmp
or
and
daa
aas
pop
out
mov
inc
push
or
setne
or
add
add
push
stos
jno
or
add
add
lds
lea
or
cwtl
mov
and
mov
pop
call
and
add
add
and
cmpsl
jecxz
xchg
dec
gs
popf
scas
cs
mov
sub
pop
xor
dec
mov
stos
cmc
pop
mov
std
daa
mov
or
mov
add
popf
repnz
cmpl
push
lods
mov
mov
add
add
xor
xor
xchg
sbb
mov
sahf
in
fdivrl
pop
or
sbb
arpl
push
mov
pushf
push
jecxz
pop
and
inc
dec
mov
cli
push
repz
test
jmp
mov
add
jns
sbb
insl
aas
fistpl
ljmp
add
mov
xor
rorl
pop
pop
jmp
in
std
nop
adc
mov
lcall
xchg
mov
fnstenv
adc
and
add
add
je
cltd
push
jae
add
add
add
add
sbb
mov
inc
mov
loope
in
jge
mov
push
shl
dec
mov
lret
leave
inc
psubw
mov
or
add
add
jl
loop
add
add
push
scas
nop
jecxz
sbb
adc
cmp
loop
add
loopne
add
add
ret
iret
call
dec
inc
ja
enter
mov
orb
add
and
fldenv
popa
insl
mov
leave
push
jg
lret
jno
shll
sbb
push
jbe
xchg
mov
in
scas
cmc
bnd
in
adcb
movsl
jnp
pop
insb
add
add
roll
int3
fnstenv
orl
xor
mov
add
add
sub
cmp
and
mov
lret
cmp
inc
addb
mov
jae
pop
cmp
pop
out
adcl
scas
dec
jl
add
jmp
jae
push
lods
push
mov
mov
cmpl
mov
iret
xchg
pop
lds
dec
lods
imul
fisubrl
or
add
add
jns
or
inc
inc
bound
mov
add
add
mov
subb
adc
jb
les
dec
out
push
mov
add
add
add
add
jae
add
add
sub
movsl
into
inc
push
outsl
sbb
in
mov
push
mov
add
outsl
hlt
jo
es
ret
into
and
add
add
sub
sti
mov
or
daa
loopne
sbb
mov
lret
adc
xor
add
add
add
add
or
add
add
lret
icebp
push
ljmp
add
add
out
xchg
jl
cmp
sub
xor
lds
jno
lods
sub
jle
out
out
fs
xor
pop
fldl2t
js
mov
scas
fbld
lret
aas
stc
stos
pop
loope
aam
fcoml
dec
mov
test
pop
xor
dec
cmp
push
add
mov
sub
pop
stos
lcall
dec
insl
mov
cmp
mov
insb
add
add
inc
fsubs
add
add
sahf
aad
mov
add
add
repnz
js
fstl
sub
push
repnz
push
add
enter
fwait
pusha
mov
shll
add
enter
cwtl
xchg
clc
push
push
out
mov
cli
sbb
ss
mov
add
lret
and
and
add
add
and
add
add
jle
and
fsubrs
orl
inc
inc
xor
push
cmp
push
cli
ss
scas
inc
mov
jl
or
jecxz
data16
add
add
je
adc
mov
add
add
fisttps
add
dec
dec
jmp
xchg
arpl
les
loop
pop
mov
sub
add
add
push
fidivs
mov
add
and
add
add
clc
sahf
jnp
mov
or
add
add
xchg
in
push
jg
aam
sti
lods
cmpsl
dec
mov
movsb
outsl
cmp
mov
sbb
gs
jle
xchg
mov
shlb
cs
and
in
mov
dec
mov
in
cmp
pusha
add
add
sbb
or
add
and
add
add
jae
fwait
js
insb
add
add
adc
add
add
xlat
out
inc
test
sub
add
add
mov
sub
add
add
ljmp
call
adc
xchg
popa
sub
add
add
inc
mov
dec
jne
xchg
loopne
js
mov
jp
fcomi
rclb
add
add
xor
jge
cmp
outsb
xlat
call
xchg
dec
lock
fidivrl
inc
adc
dec
fistpl
inc
movsl
cli
pop
loope
lret
add
add
in
adcb
mov
fistpl
cmp
jl
mov
rcrb
repz
mov
lahf
aas
dec
cli
in
insb
add
add
xor
dec
cmpsb
pop
inc
stos
scas
dec
mov
sub
sub
add
add
add
push
jmp
add
in
out
or
add
add
add
and
stos
jle
mov
fimuls
add
push
mov
rorb
inc
sub
add
add
int3
push
repnz
jae
sbb
inc
popf
fbstp
adc
dec
xchg
fistl
int
jge
mov
adc
jbe
leave
push
sarb
xlat
imul
pop
or
add
add
add
jb
mov
je
jmp
push
test
mov
add
add
mov
or
pop
add
inc
fcmovnbe
add
add
into
sarl
inc
pop
nop
dec
add
add
xor
dec
add
add
xchg
call
lahf
imul
push
cmp
add
adcb
sbb
lods
lock
xchg
js
insl
in
and
jp
fistps
insl
mov
mov
add
mov
popa
call
xchg
add
lret
adc
xchg
mov
xor
fsubrl
in
fdivrs
mov
jno
daa
push
cli
inc
js
inc
fst
sub
ds
cwtl
xor
xchg
jl
mov
cmpsl
movsb
in
or
mov
add
imul
mov
dec
add
add
jo
or
sub
rcl
mov
rclb
cmp
sti
inc
jo
jp
ljmp
inc
sub
mov
pop
pop
dec
dec
xor
in
dec
mov
mov
cmc
rcrl
fdivl
jb
or
mov
mov
mov
mov
and
add
add
push
je
sbb
add
add
lcall
cwtl
mov
dec
scas
andl
dec
or
inc
mov
jle
push
and
jae
sbb
jb
mov
jno
shll
pop
ret
sub
scas
repnz
fdivrp
nop
testl
mov
adc
lock
jns
xchg
mov
negl
scas
dec
mov
loop
in
into
push
sbb
loopne
adc
mov
or
mov
movsb
mov
les
inc
xchg
gs
inc
out
ljmp
add
sbb
pop
int3
sti
mov
fnstenv
jecxz
cltd
cmp
lods
cs
ljmp
iret
mov
lret
mov
clc
shlb
add
add
fbstp
sub
data16
pop
push
cs
sub
add
add
xchg
push
mov
jno
adc
jbe
adc
xor
arpl
jp
out
mov
xor
add
add
addr16
sub
add
add
xchg
push
lea
add
jno
mov
push
orb
outsb
adc
add
add
sub
out
imul
cltd
jecxz
rorl
pop
scas
mov
add
add
leave
xchg
cli
shrb
mov
pop
push
jecxz
pop
jecxz
fdivrs
imul
rcr
mov
add
pop
mov
outsl
adc
call
pop
js
popa
cmpsb
jge
es
mov
dec
mov
dec
pop
jle
aas
jne
sbb
cltd
and
mov
out
xlat
sti
test
sub
stc
dec
mov
add
aad
mov
bswap
push
mov
jae
sbb
add
add
cli
mov
gs
jl
andb
add
loope
sbb
cli
adc
lds
iret
dec
fcoms
outsl
push
mov
cld
jl
mov
idivl
xor
mov
mov
lds
pop
or
xchg
arpl
add
cmp
int3
mov
loopne
inc
outsb
jle
sbb
data16
add
add
cmpsb
inc
cs
add
jnp
jbe
mov
xchg
or
mov
add
add
pop
and
lret
cmp
add
add
xchg
loope
andl
sbb
add
add
repz
mov
test
in
add
jp
sub
mov
add
js
mov
add
inc
das
aad
lods
jp
add
mov
gs
xchg
pop
out
scas
int
push
jo
loop
ret
fcmovb
movsb
cbtw
sarb
or
add
add
add
add
stos
pop
sub
cli
and
lock
ret
aaa
sbb
jmp
mov
dec
mov
flds
add
add
mov
imul
popf
popa
jmp
add
add
add
cmp
popl
lods
or
xor
xchg
inc
push
sbb
add
add
je
movsl
test
icebp
or
xchg
mov
lods
rolb
gs
add
add
lds
ljmp
adc
test
xorb
add
arpl
add
add
stc
sarl
mov
in
subl
mov
mov
mov
sub
add
adc
xor
aaa
bound
xor
in
push
mov
mov
cmp
out
fnstenv
add
add
pushf
pop
jnp
aad
xor
and
sarl
nop
mov
mov
cmpsb
sub
orl
fsub
cld
js
or
push
out
pop
in
shlb
pop
repz
xchg
sub
ss
add
add
mov
insb
add
add
mov
or
mov
arpl
or
add
add
testl
add
mov
add
add
xor
std
sbb
xchg
push
int
and
mov
jmp
add
add
inc
leave
jle
jmp
xchg
shll
mov
push
cmp
mov
xor
mov
inc
mov
add
add
aad
movsl
or
add
daa
jecxz
sbb
mov
and
add
add
mov
jg
call
repnz
push
aas
and
add
add
add
xlat
les
add
add
or
add
es
mov
js
cmpsb
mov
add
add
add
dec
adc
add
dec
pop
imul
and
loopne
jmp
rcll
es
das
dec
sub
add
add
imul
add
adc
add
add
sbb
imul
cwtl
cmp
pop
add
add
add
jno
xchg
dec
jbe
fucomp
daa
add
pop
push
ret
fnstsw
inc
and
mov
push
sbb
das
pop
cmp
nop
rcrl
jo
movsb
jl
jb
aaa
or
add
add
addr16
sbb
add
add
push
or
add
add
hlt
sbb
outsl
jle
mov
out
add
add
out
push
loop
jnp
mov
mov
ret
mov
rorb
pop
cmp
lds
pop
sti
sbb
movsl
cmc
lock
js
jl
mov
js
popa
test
cmp
pop
cli
shl
insb
mov
call
mov
add
add
lahf
xchg
mov
jnp
add
add
add
fildll
mov
shrb
cmpxchg
nop
stos
test
in
mov
push
xor
pushf
adc
fcmovnu
outsl
iret
pop
std
iret
cmp
out
add
add
add
jle
leave
xor
lds
add
add
or
pop
in
mov
and
add
add
mov
push
test
sub
sub
add
add
mov
in
ret
out
mov
mov
mov
sarb
mov
inc
mov
jae
hlt
fyl2x
mov
pop
mov
loopne
fcoms
jle
add
add
xor
mov
dec
xor
add
mulb
xchg
cmp
pusha
mov
ret
sbb
inc
mov
fadds
mov
xor
jge
sbbl
sahf
stos
mov
rep
or
cmpsb
pop
inc
and
add
add
cli
fsubp
jbe
mov
mov
int3
stos
push
push
cmc
js
int3
mov
lds
ja
mov
fldt
mov
add
push
daa
les
enter
pop
cmpsb
sbb
fldcw
out
scas
test
xor
dec
mov
push
mov
add
cmp
add
add
testl
mov
pop
dec
pop
mov
push
add
outsl
ss
fadds
inc
add
add
pusha
add
add
adc
jg
adc
call
push
xor
daa
cmp
pop
fucom
mov
adc
mov
shlb
cmpsb
dec
jnp
xor
and
jp
add
add
push
pop
fs
push
inc
add
add
inc
mov
xchg
push
dec
add
add
dec
add
add
pop
movsb
cmp
add
add
ljmp
add
aaa
aaa
jo
imul
adc
notb
andl
jp
lret
inc
mov
std
imul
sbb
jnp
cmovbe
lret
aam
xchg
add
mov
lds
add
add
add
sub
and
add
add
ss
add
mov
add
nop
mov
insb
add
add
sbb
rorb
push
lods
inc
add
push
dec
add
add
mov
sahf
jne
mov
jecxz
jns
add
add
fs
mov
mov
fdivrp
push
insb
add
add
mov
test
push
sub
incb
hlt
pop
add
out
jmp
in
loop
add
ds
or
jbe
movsl
xchg
add
lock
cmpsb
xchg
subl
mov
jecxz
fadds
in
or
add
add
inc
add
add
adc
fdivrs
xchg
pop
xchg
clc
inc
cmp
cmp
fldl
ret
popa
mov
mov
and
push
addr16
and
ss
imul
jne
adc
push
cwtl
xchg
lahf
or
xchg
adc
in
arpl
hlt
out
in
jne
add
add
cmp
pop
rcr
cmp
cltd
mov
in
arpl
ljmp
add
add
shr
cmp
pop
push
xchg
test
in
or
add
add
test
jp
loopne
in
cs
adc
mov
jp
jo
push
xchg
test
ret
add
add
xchg
pop
and
lahf
enter
popa
pop
arpl
add
add
in
xor
mov
push
addb
jo
cld
leave
daa
xchg
ja
enter
pop
rolb
adc
add
add
add
or
sub
and
ljmp
pop
add
icebp
gs
pop
adc
mov
pop
jmp
in
push
fnstenv
mov
adc
scas
or
adc
mov
int
fdivr
rorb
push
les
mov
dec
leave
or
add
add
xor
ja
pop
rol
push
jns
cmp
and
cmp
outsl
lods
pop
ret
jecxz
fiaddl
and
add
add
or
add
add
mov
fnstenv
fmul
les
lcall
insl
iret
add
aaa
xlat
and
adc
mov
jle
mov
xor
inc
add
add
sbb
add
mov
popf
orb
add
add
xchg
cs
pusha
mov
mov
js
mov
add
add
add
lea
nop
sbbb
mov
nop
mov
addr16
sub
add
add
adc
mov
jp
sbb
lds
xor
lds
pop
rcrb
test
inc
add
pop
ret
js
aas
daa
rorb
jns
jbe
mov
iret
xor
add
add
add
lock
call
add
das
mov
popf
mov
sub
inc
add
add
cmp
dec
mov
repz
inc
div
sar
test
mov
enter
add
add
xchg
roll
or
push
pop
cmpsb
jecxz
push
push
push
jle
inc
mov
mov
inc
stos
push
or
xor
movb
addl
add
adc
subb
rsqrtps
add
mov
pop
imul
mov
dec
lahf
or
mov
js
pusha
add
add
or
add
add
add
add
cwtl
testb
sti
cmc
daa
test
mov
lods
clc
pop
adc
add
ret
lds
cwtl
or
add
add
jl
push
pop
add
lahf
aaa
stos
xchg
push
ret
jnp
loopne
test
shl
sbb
mov
adc
daa
jge
shll
ret
sbbl
sub
add
add
push
mov
rcl
add
dec
loop
mov
add
fadd
mov
cmpsl
push
fnstcw
stos
iret
test
test
push
xchg
add
add
es
shlb
push
sarb
mov
loop
add
cmp
sbb
mov
leave
pop
or
cmp
lret
mov
rcrb
jns
gs
or
hlt
cwtl
pop
lcall
fsubp
jle
jl
ljmp
adc
addr16
sbb
add
add
lds
mov
movsl
gs
popf
aaa
scas
dec
pop
shrl
xchg
pop
mov
inc
push
aad
mov
mov
mov
adc
add
add
dec
mov
sbb
cmpsl
das
xchg
mov
inc
pop
mov
add
add
dec
sbb
xor
lods
out
dec
xchg
out
repz
in
ljmp
add
add
cmp
fcoml
repnz
add
add
ret
jbe
mov
dec
cmc
dec
mov
inc
out
stc
out
mov
cmp
xchg
adc
enter
adc
mov
cmp
push
push
bound
xchg
sbb
sbb
or
sub
add
add
push
mov
add
add
mov
sbb
mov
pop
pop
hlt
out
jb
mov
mov
add
add
dec
jg
clc
aad
test
sbb
add
mov
add
add
jae
inc
in
push
jp
je
jg
lcall
sub
add
xlat
cmpsl
or
add
add
movsl
stos
cwtl
adc
cmp
add
mov
or
movsb
pop
jmp
push
or
add
add
shl
mov
stos
outsb
xor
popa
aas
bound
add
add
in
adc
add
add
loopne
ret
add
mov
xchg
scas
ret
pop
sub
ljmp
mov
add
push
adcl
mov
jnp
vpandn
dec
mov
pop
daa
dec
add
iret
stos
mov
out
pop
dec
mov
or
mov
jg
mov
loope
leave
add
add
add
inc
mov
out
rcl
idivb
sbb
xchg
dec
jp
hlt
push
ror
sti
or
aas
daa
jo
ror
or
and
sti
push
call
mov
mov
cwtl
and
add
add
iret
mov
rcll
cld
movsl
cmpsb
lods
rcrl
add
hlt
sbb
xchg
jns
or
add
add
int3
xchg
pop
mov
adc
repz
and
aas
and
mov
lea
cwtl
sub
add
add
je
test
pminsw
xor
mov
in
sbb
fwait
jle
popf
mov
in
add
sub
jns
mov
xorb
mov
insl
ss
xchg
push
sar
mov
pop
push
mov
iret
test
push
repnz
sub
add
add
testb
test
add
push
std
and
mov
mov
aam
sub
add
add
ret
lods
sbb
xchg
push
xor
shll
mov
shlb
push
push
cmp
sbb
ret
ret
in
dec
add
jmp
cmc
push
lods
jmp
dec
mov
loopne
sbb
jl
lea
sub
add
add
mov
mov
dec
ja
insb
mov
sub
add
add
fwait
gs
fsubs
jmp
add
bound
push
adc
enter
dec
ljmp
outsl
mov
popf
mov
xchg
nop
xchg
adc
dec
test
inc
scas
xchg
sub
dec
out
jo
push
inc
cltd
mov
movsl
and
mov
push
out
push
xchg
push
icebp
sbb
mov
es
push
push
fildll
fdiv
mov
fists
pop
or
add
add
adc
adc
add
add
out
and
add
mov
sub
add
add
sti
mov
add
add
lahf
ficoml
inc
out
jmp
fldl
and
lea
sub
js
insl
shlb
jae
and
add
add
popf
int
ror
aas
mov
sbb
movl
add
add
add
add
mov
rcrl
add
push
lret
push
sarb
outsb
mov
add
sub
imul
add
add
add
dec
sbb
xchg
ja
into
and
add
add
add
add
inc
mov
shlb
xlat
xchg
add
add
jb
hlt
jns
repz
fwait
cmp
das
xchg
subps
mov
xor
xchg
daa
mov
iret
mov
or
sub
pop
sbb
shlb
xlat
push
popf
mov
rcrb
xor
xchg
sub
out
and
push
cmp
fs
and
add
xchg
sub
lea
xchg
sbb
mov
nop
xchg
jl
into
xor
scas
dec
mov
stos
cmp
push
and
add
bound
pop
and
add
pop
fsubrl
mov
loopne
push
or
movsl
mov
and
add
add
mov
mov
inc
sub
mov
cmc
aam
imul
or
add
add
add
add
add
sub
hlt
mov
and
add
add
add
add
mov
push
aad
mov
jl
scas
inc
cmpsb
clc
push
lds
add
sub
imul
mov
rorl
dec
adc
lock
and
push
or
add
add
pushf
sti
push
adc
adc
sbb
stos
inc
add
add
sub
add
add
or
pop
jbe
cmpsb
cltd
add
iret
in
or
add
add
cli
sahf
shrl
xchg
or
add
add
adc
jns
movsb
add
imul
mov
pusha
mov
inc
mov
mov
out
pushf
mov
xchg
mov
add
add
into
mov
ror
add
add
xchg
stos
scas
pusha
add
add
pop
jg
jg
clc
fcmovbe
push
and
push
jb
xlat
xchg
repnz
mov
mov
mov
inc
pop
adc
loope
sbb
stos
pop
cmp
rorl
mov
mov
out
pop
aas
cmp
frstor
mov
xchg
out
jne
mov
dec
cli
dec
add
add
jne
int3
and
add
call
mov
sarl
popf
mov
add
cwtl
mov
add
cmp
add
mov
push
mov
out
and
mov
jb
out
sti
scas
pop
in
popf
mov
outsl
fstpt
cli
mov
mov
push
aad
gs
in
out
iret
pop
sbb
loop
repnz
xor
out
adc
add
add
and
add
add
mov
adc
roll
pop
imul
add
add
in
inc
xor
mov
addr16
lahf
mov
xor
pop
repnz
fcom
outsl
lock
inc
inc
jg
nop
inc
mov
cs
push
push
js
mov
add
popf
push
into
aaa
stos
sti
leave
imul
xor
sbb
add
add
setl
adc
add
sbb
and
add
add
add
push
pushf
push
inc
xor
jmp
xor
mov
or
add
popf
stc
sbb
inc
mov
jp
gs
jg
or
inc
imul
add
add
sbb
add
add
add
sbb
push
jl
mov
add
add
inc
rcl
in
push
mov
inc
add
add
pop
xor
xlat
and
mov
pop
mov
sbb
dec
pop
xchg
jo
test
add
add
in
xchg
adc
pusha
mov
or
xor
sub
clc
es
in
sub
cmp
push
push
rclb
adc
sub
mov
adc
comiss
dec
sti
push
jl
add
add
subl
rol
dec
adc
dec
add
add
into
sbb
lahf
fs
add
pop
sbb
add
add
int
xchg
and
mov
add
add
add
push
mov
fistpl
rcrl
mov
or
cmpsb
or
xor
ds
mov
addr16
lock
mov
jmp
push
mov
adc
fadds
add
cmp
add
mov
dec
testb
jae
cltd
cld
and
iret
pop
inc
jbe
insb
mov
ror
stc
mov
aad
xlat
cld
aad
and
mov
jno
mov
lds
shlb
rclb
mov
out
into
push
mov
xor
mov
mov
add
add
add
cmp
add
sbb
add
add
jl
push
mov
add
out
push
sub
add
add
in
pop
test
and
xor
adc
rorl
dec
add
add
mov
ja
xor
mov
das
scas
push
rcll
add
add
add
xor
mov
push
addr16
divl
sbb
inc
add
add
insl
jns
notb
mov
insb
mov
sahf
sbb
cmp
dec
add
add
stos
sub
add
add
mov
cmp
adc
aaa
add
add
add
and
or
add
add
xor
test
add
add
add
or
xorb
shlb
add
add
enter
sub
sbb
mov
xor
cwtl
arpl
scas
fdiv
or
int3
rorb
das
xchg
add
cmp
xchg
iret
inc
xchg
pop
add
add
add
sbb
mov
add
add
ds
iret
pop
xor
std
jge
loopne
jl
lret
add
add
or
outsb
daa
pop
sbb
or
adc
int
fcompl
add
and
add
add
es
push
lahf
aaa
cmpl
jns
inc
add
add
and
mov
xchg
fmul
je
es
add
add
push
in
sub
or
add
add
jecxz
sbb
cltd
aas
xchg
test
cmpsl
sub
mov
sbb
and
jecxz
jecxz
aad
add
add
cli
add
add
add
pop
dec
popa
jle
imul
mov
add
add
ds
mov
mov
add
add
add
xchg
jnp
sub
add
add
push
decb
add
add
lea
lea
aas
shl
mov
mov
inc
add
add
sub
shlb
pop
stos
shlb
add
or
mov
mov
fcoml
out
sbb
inc
inc
sub
js
sar
lcall
mov
in
ds
add
add
add
inc
mov
aaa
pop
push
rcl
dec
add
add
inc
pop
cmpsl
pop
je
add
cli
out
rorb
into
ss
aaa
push
jo
das
mov
add
push
stos
mov
rclb
inc
sub
add
push
or
fisubrl
lods
inc
and
mov
add
insl
and
add
add
test
dec
lods
mov
push
lds
add
add
pop
dec
xchg
arpl
mov
jb
push
and
push
add
add
cmpb
rol
add
imul
mov
jg
iret
inc
sbb
cld
adc
imul
jne,pt
test
xchg
pushf
subb
mov
mov
es
int3
cmp
bound
stos
test
jnp
lods
ja
outsl
movsb
mov
and
lret
loop
pop
gs
mov
xchg
icebp
mov
add
cmp
lods
aas
insl
popf
inc
mov
xor
add
add
mov
and
add
add
add
insl
stos
shl
ds
xor
and
xorb
insb
mov
js
and
cmp
and
ds
jae
dec
add
add
int
xor
mov
cmp
push
mov
add
add
cmp
xor
out
cmpsl
icebp
push
mov
xor
aad
cmp
push
lea
add
lds
lret
into
ss
add
add
add
in
lahf
outsb
repnz
sub
add
add
jecxz
popf
repnz
mov
pop
inc
sbb
ds
in
cwtl
inc
in
lds
push
je
repnz
cs
adc
pop
mov
das
cmc
xchg
jl
rcl
cld
aam
stc
jg
into
push
or
loope
xchg
pop
mov
jb
hlt
pop
xor
xor
pusha
mov
mov
call
add
sbb
add
sub
stos
sar
bound
mov
ds
xchg
insl
cld
xor
mov
jb
loope
lods
lea
add
imul
out
data16
ja
jb
pop
sti
stos
cmp
mov
adc
insb
mov
scas
cmp
xor
test
cli
add
add
add
repz
pop
adc
push
imul
jecxz
mov
xchg
int
mov
inc
cmp
mov
dec
pop
sbbb
popa
fwait
pop
shrb
scas
mov
xchg
shll
add
add
mov
mov
jmp
xor
scas
aam
insl
arpl
aam
lret
fcoml
or
push
cmpsb
cmpsb
push
pop
into
push
xchg
adc
adcb
loope
add
add
inc
jne
add
add
add
repnz
mov
add
add
adc
dec
xlat
add
pop
pop
inc
mov
or
add
add
xlat
cmpsl
mov
adc
sub
inc
add
add
dec
mov
or
add
add
in
insl
loope
jle
mov
add
dec
scas
sbb
lahf
xor
mov
or
add
add
add
call
adc
sarl
inc
add
push
and
popf
fwait
inc
pop
divl
sub
shlb
mov
xor
arpl
enter
cmp
mov
daa
bound
scas
or
lcall
test
adc
dec
add
add
je
aaa
pop
or
notb
pop
pop
loop
sub
add
add
jmp
add
gs
cmp
push
jno
add
into
push
dec
add
aad
rcrb
ficompl
cmp
push
adc
ljmp
lcall
sbb
pop
adc
lahf
je
xor
add
add
cmp
cs
mov
dec
ret
add
mov
xchg
add
add
mov
ss
sbbb
adc
imul
outsl
test
fidivrl
adc
stos
subl
testb
sbb
cld
cmp
add
add
test
movsl
xchg
movsl
and
push
sub
rcrl
mov
sbb
mov
mov
aaa
pop
push
pusha
mov
scas
inc
loopne
pop
sti
leave
and
jmp
mov
and
add
add
add
cmp
cmp
fnstcw
iret
js
mov
mov
loop
jmp
leave
test
mull
add
add
mov
add
dec
and
inc
add
add
movsl
jne
fidivrl
add
gs
ss
shlb
xchg
inc
or
inc
sub
dec
rcrb
jmp
add
add
pop
cs
scas
test
add
add
in
js
in
fwait
mov
add
add
jb
dec
or
add
add
xchg
mov
pushf
inc
pop
mov
add
inc
aaa
inc
imul
mov
xor
ds
add
add
mov
div
jle
movsb
aam
and
add
add
add
add
in
jnp
pop
cltd
or
xchg
or
fsubr
test
add
xor
jmp
mov
xchg
lret
mov
imul
cwtl
jecxz
inc
push
mov
add
sets
pop
int3
in
xchg
add
xchg
aam
cwtl
outsb
scas
bound
sbb
jmp
push
mov
cmp
cmp
cmpl
mov
add
add
pop
mov
xor
repz
mov
add
jne
add
add
add
aaa
and
test
cmp
cltd
aas
mov
test
loope
adc
pop
imulb
cmp
jg
in
test
mov
js
daa
loope
cwtl
lea
or
push
fdivr
fdivl
mov
add
add
movl
push
push
xchg
popa
mov
add
add
cwtl
imul
add
xchg
cmp
add
or
stos
filds
fcomps
push
sti
and
add
add
jl
frstor
jmp
and
add
add
add
add
add
add
add
or
pop
push
cmc
mov
mov
add
add
xchg
sbb
pop
inc
sbb
dec
ljmp
adc
add
mov
add
out
adc
and
mov
sahf
leave
lret
add
add
mov
and
dec
mov
xor
dec
pop
sti
cmp
pop
adc
idivb
dec
lock
cmp
dec
mov
add
add
mov
mov
xor
xchg
in
pop
in
into
cmp
add
mov
rcrl
mov
cmpsb
cwtl
ret
inc
cs
pop
fimuls
xor
les
mov
sbb
add
cmp
cmp
adc
outsl
sahf
push
jb
mov
adc
data16
mov
xchg
ffreep
push
mov
xchg
stc
lods
sbb
js
scas
push
movsl
test
test
cmp
pop
mov
inc
or
add
sbb
add
fisubs
mov
aad
rsm
arpl
add
sub
push
mov
add
add
cmp
cmp
add
add
add
or
aam
mov
repz
push
int3
insb
add
add
call
add
push
outsb
lahf
jb
movsb
jp
and
add
add
add
add
and
out
xlat
loopne
mov
push
bound
add
push
jo
xchg
or
add
add
mov
xor
loop
outsl
sahf
enter
mov
aam
mov
repnz
add
add
xchg
in
scas
out
fdivrs
dec
lahf
pop
bound
mov
emms
neg
xchg
ficoms
mov
cmp
cwtl
xor
shr
out
pop
dec
shrb
add
add
shlb
fisubrs
mov
stos
mov
inc
mov
and
test
loope
adc
out
push
lret
orl
add
add
in
std
xor
loop
sub
add
add
incl
pop
xchg
mov
add
add
and
add
add
ds
adc
mov
jae
add
subl
and
adc
jle
inc
add
add
pop
push
ljmp
subl
mov
hlt
sti
mov
add
xchg
cmp
adc
pop
mov
add
add
mov
sbb
dec
mov
aaa
cltd
mov
adc
call
ss
mov
stc
jae
iret
js
xchg
mov
mov
sar
mov
jns
lret
sti
loop
push
dec
pop
xchg
push
daa
lret
outsb
push
push
dec
insl
mov
jle
ja
push
cltd
lret
jmp
push
leave
js
and
mov
push
push
fistl
xchg
cltd
clc
jo
jns
and
sub
andl
mov
cwtl
adc
cmp
mov
add
test
jge
in
sub
xor
sub
add
add
leave
rolb
add
and
div
scas
rol
mov
add
cwtl
cmp
dec
inc
add
add
cld
repnz
add
add
rorl
insb
add
add
loopne
imul
outsb
repz
hlt
xor
or
push
push
jp
sbb
sbb
fistps
shl
mov
mov
inc
adc
jmp
mov
add
push
fscale
xor
gs
cmpsl
das
in
dec
ucomiss
xchg
sub
pop
xorl
sub
int3
shrb
add
leave
mov
in
sub
xor
out
nop
sbb
add
add
add
add
inc
add
add
dec
mov
sbbl
popa
lahf
test
mov
out
mov
add
push
imul
outsl
push
out
cmp
push
loopne
pop
lds
xchg
ljmp
jg
jnp
mov
aam
dec
sti
sbb
jge
or
add
add
add
imul
int
xor
cmp
and
fsubl
popf
nop
cmc
into
xlat
stos
pusha
mov
and
mov
jbe
pop
mov
jae
or
mov
popa
fcoms
sbb
mov
mov
idivl
popf
lock
adc
push
mov
xchg
pop
lret
jecxz
data16
loopne
pop
scas
scas
mov
test
jo
dec
cld
dec
fldz
add
add
add
jae
sbb
movsb
imul
jb
lods
mov
pop
jl
sahf
push
fwait
out
repnz
out
mov
add
dec
xchg
rcl
cmpsl
popa
adc
data16
add
add
jg
mov
test
mov
subb
mov
mov
les
mov
rclb
fwait
jmp
mov
test
lahf
cmp
dec
mov
pushf
leave
les
add
add
add
add
sub
add
add
enter
jne
test
xchg
sub
mov
inc
sub
adc
sbb
nop
fcompl
ret
inc
dec
mov
jo
outsl
adc
add
add
jg
mov
cmp
inc
pop
nop
test
mov
lea
dec
inc
or
sbb
add
dec
test
add
add
dec
push
test
add
add
push
sbb
mov
loop
shrl
add
add
fwait
xchg
into
imul
push
test
jnp
pusha
add
add
jb
std
fldcw
testb
inc
sbb
roll
jne
push
pop
mov
lea
inc
pop
icebp
data16
mov
dec
sbb
inc
arpl
in
xor
cmp
gs
js
add
add
jge
mov
lods
or
add
add
cmpsb
sub
mov
xchg
imul
insb
mov
outsb
jl
cmp
jno
lea
inc
test
add
sbb
rcrb
lret
xchg
loop
dec
es
mov
or
lret
mov
xor
sub
add
add
push
and
sbb
inc
mov
adc
popf
jle
push
pop
int
divb
leave
in
pop
aaa
sub
or
loop
stos
addr16
outsb
and
insb
add
add
xor
ret
mov
mov
add
iret
jg
xchg
mov
add
inc
sub
add
add
add
add
inc
mov
sbb
outsl
xor
cmp
jge
jno
dec
sbb
je
xor
mov
stos
jmp
stc
inc
bound
xorb
rcrb
and
xchg
lcall
adc
cmpsb
sbb
int3
mov
add
add
hlt
outsb
and
add
add
add
jne
or
lods
icebp
jle
adc
or
add
add
out
adc
sbbb
add
add
movsb
sahf
pop
mov
sbb
add
add
inc
cld
mov
mov
cld
jl
dec
bound
xchg
ljmp
call
add
add
in
add
add
dec
and
imul
pop
sbb
jge
cmp
jb
xchg
popa
push
call
cmp
cs
gs
add
xchg
xlat
mov
cli
push
popa
les
add
add
push
pop
aaa
test
add
add
ret
inc
enter
add
add
add
add
add
add
cmp
dec
add
add
sub
shrl
adc
leave
adc
sub
mov
shl
jne
pop
sub
add
add
and
jg
sub
clc
push
das
enter
mov
mov
sbbl
mov
dec
mov
push
dec
xor
adc
inc
add
add
or
add
add
sub
mov
mov
mov
mov
fcmovne
push
and
add
add
aaa
loopne,pt
xchg
add
add
add
shlb
add
add
add
xchg
cmpsb
sub
inc
push
mov
pop
jbe
xor
rorl
outsl
fcmovbe
adc
jge
mov
mov
and
mov
faddp
test
andl
popf
pop
sahf
sbb
movsl
inc
lods
lahf
sub
inc
sbb
clc
aaa
mov
mov
in
and
add
add
adc
or
mov
mov
mov
icebp
fildll
mov
subb
add
sub
add
add
ja
xchg
pushf
leave
or
sub
add
add
add
add
in
push
leave
adc
xor
rcrl
xchg
outsl
push
ja
sbb
outsb
into
mov
add
fmuls
fists
inc
add
add
mov
xchg
cltd
xor
and
fcoms
das
push
test
test
lock
cmpsb
ja
mov
cli
pop
inc
add
add
jbe
stos
adc
stos
xchg
pop
pop
mov
xlat
test
push
dec
sti
adc
add
add
es
cmp
and
fistpl
pop
mov
add
add
mov
mov
lret
push
cld
sub
push
ret
xor
stos
adc
xor
dec
pop
xchg
fnstcw
or
das
pop
jmp
add
add
xlat
mov
jecxz
dec
out
sbb
add
popa
rolb
aad
add
add
cmp
fisttpl
add
add
jl
loope
idivl
nop
cmp
pop
jmp
cmpsl
or
add
add
leave
faddl
aaa
lock
fsubrl
jo
lea
movsb
iret
mov
mov
mov
push
popa
xchg
sbb
xchg
jno
mov
add
in
sub
add
add
add
lds
pop
sbb
daa
push
hlt
add
add
add
mov
in
adc
pop
cmp
xchg
push
xchg
aad
dec
jmp
sub
add
add
mov
xchg
mov
sti
xchg
test
add
add
jmp
push
mov
add
cld
nop
cmp
jle,pt
mov
cmc
pop
push
fucom
frstor
lcall
dec
add
add
and
add
add
test
cmpsb
jmp
rol
shlb
cwtl
cmpsb
push
or
cmc
loop
loopne
inc
xor
cmp
mov
mov
imul
add
add
lcall
nop
or
inc
mov
ret
mov
and
add
add
call
mov
flds
xor
cmp
hlt
arpl
dec
test
jge
or
out
push
mov
into
or
sarb
dec
mov
dec
xchg
push
lock
push
cmp
sub
aam
or
add
add
repnz
mov
cmpsb
loope
out
add
add
add
xchg
incl
pop
push
lret
add
add
ja
cmc
cmp
scas
adc
test
add
add
imul
add
add
cmp
subl
mov
outsl
xor
push
into
aad
in
mov
mov
jne
pusha
add
add
jo
loopne
out
das
in
es
into
popl
mov
dec
movsb
mov
test
add
add
push
or
jge
mov
fwait
mov
popf
cmp
mov
sbb
cmpsl
movsb
mov
mov
add
daa
movsb
in
stc
dec
mov
insb
add
add
adc
jo
or
cwtl
enter
lock
inc
std
pop
mov
add
jmp
pop
ds
sarl
mov
dec
inc
cld
js
out
or
add
add
sub
mov
xchg
pop
jle
cmpsl
int
push
enter
ljmp
adc
mov
xchg
test
sbb
xchg
dec
hlt
mov
daa
xor
add
add
dec
jl
xlat
mov
add
add
or
cmp
add
push
sbb
inc
mov
sbb
mov
add
add
mov
jbe
mov
add
or
sbb
mov
pop
pop
and
add
add
and
add
add
adc
add
scas
nop
add
sahf
ret
inc
mov
inc
add
add
mov
sbb
rorb
and
xchg
and
cwtl
xchg
imul
ret
add
stos
mov
mov
add
jecxz
pop
aaa
mov
icebp
dec
mov
fprem1
push
jle
and
jb
pop
cltd
xchg
mov
mov
ret
popa
cwtl
mov
movl
add
addr16
push
and
add
add
mov
or
mov
fsts
sahf
cmp
and
cmp
fst
test
cli
sahf
and
xchg
std
dec
bound
jo
add
add
xchg
fdivp
test
sbb
lds
aaa
mov
scas
jmp
sub
add
add
lcall
nop
mov
aam
and
shll
leave
imul
add
add
add
addr16
jg
mov
add
fsts
xchg
push
call
mov
push
lods
fbstp
cmp
call
sbb
addb
jbe
pop
nop
mov
in
rol
mov
pop
mov
adc
xchg
jl
xchg
fsts
cs
mov
stos
movsb
into
sbb
lcall
add
mov
mov
lret
inc
jbe
mov
push
pop
mov
push
xchg
mov
inc
add
add
or
add
add
mov
cmp
fisubrs
fnstsw
xor
notb
add
les
mov
add
add
leave
sbb
push
mov
xor
add
add
enter
mov
add
add
sub
add
add
add
dec
mov
cmp
add
adc
mov
cli
clc
mov
dec
mov
lret
je
xor
add
add
out
jmp
pop
mov
pop
or
jae
movsb
xlat
sbb
movsl
adc
nop
fiadds
add
ret
cmp
rcll
pop
xchg
mov
adc
jg
sbb
cld
add
add
add
fldt
js
add
out
push
jp
push
inc
iret
comiss
mov
insb
mov
lock
outsb
and
aaa
fbstp
pop
mov
mov
bound
mov
lds
call
mov
pop
sub
out
cmp
sub
fisubrs
scas
lcall
add
add
cwtl
inc
notb
scas
testb
in
pop
sbbb
mov
mov
clc
push
mov
rorl
pop
push
dec
sbb
scas
scas
lahf
pop
enter
pop
xchg
jnp
xor
mov
push
cli
cwtl
mov
add
add
add
add
pop
pop
stos
mov
ja
jecxz
push
mov
inc
sbb
add
and
mov
jmp
push
jge
jg
sti
adc
aad
push
lahf
adc
jle
in
jmp
mov
pop
gs
lret
push
and
add
add
pushf
push
popf
mov
sbb
sub
ja
cmp
mov
inc
mov
or
bound
jle
incl
add
into
ja
mov
mov
mov
mov
xchg
push
and
add
add
jo
sub
mov
add
add
mov
std
xchg
leave
adc
loope
push
jl
adc
popa
stos
or
fsubrl
test
mov
push
sub
out
fnstenv
or
cmp
mov
loop
push
insb
add
add
cmpsb
into
pop
ljmp
add
add
leave
xchg
inc
pop
stos
popl
jno
add
add
cmp
xorl
int3
jp
in
jmp
int3
cwtl
add
cmp
stos
mov
xlat
orl
daa
push
xchg
xchg
movsb
jbe
or
add
roll
cmp
leave
or
sbb
neg
test
aaa
scas
jns
add
mov
mov
add
sub
add
and
repz
mov
add
add
test
adc
insb
mov
xadd
mov
xlat
add
rol
cmp
mov
jp
ficoms
fdivrs
dec
add
add
or
aaa
ret
lret
loopne
cmp
pop
push
fisubrs
or
add
add
jp
jae
lds
jmp
cli
sarb
into
icebp
repnz
add
add
test
add
xor
mov
mov
inc
push
pop
stos
sbb
pop
mov
mov
jge
rcrl
loope
push
sub
add
add
add
or
inc
pop
jne
lahf
mov
pop
sub
add
add
add
add
out
pushf
sbb
sbb
aas
hlt
clc
aaa
pop
jbe
push
jle
shlb
and
or
add
add
inc
adc
dec
or
add
fwait
jnp
cmp
adc
sub
xchg
or
add
add
add
add
loope
je
std
out
xor
sbbb
xlat
mov
add
add
mov
test
out
and
mov
fs
jnp
jbe
mul
rorl
add
add
shrb
mov
mov
adc
mov
adc
xchg
gs
test
cmpsl
push
pop
movsb
and
add
add
pusha
mov
dec
mov
cmpsl
jbe
adc
jg
mov
jmp
add
jo
cmc
cmpsl
sub
mov
add
adc
push
jns,pt
lods
repz
xchg
and
fildll
je
dec
mov
mov
xor
cs
jecxz
aam
cltd
sub
aas
and
add
add
sti
insb
add
add
or
or
add
add
sub
add
add
or
stos
repnz
cld
jbe
or
add
add
test
xchg
hlt
inc
and
decl
std
stc
dec
rcpps
dec
mov
in
scas
sub
push
das
cwtl
mov
push
fnstcw
pop
icebp
jnp
push
stos
nop
mov
movsb
push
pop
pop
outsb
mov
add
and
pop
mov
jbe
mov
gs
lods
add
pusha
mov
sbb
jo
add
add
push
popa
mov
repz
aad
xchg
loope
loop
jge
jae
mov
or
mov
stos
ljmp
cmp
dec
js
or
or
sub
add
add
add
lock
add
sub
add
add
cmp
mov
in
pop
add
add
add
int
push
xchg
scas
pop
or
add
add
lcall
dec
mov
mov
add
add
xchg
xor
out
dec
sbb
jle
push
inc
mov
adc
enter
mov
inc
scas
jae
data16
adc
inc
add
add
pusha
add
add
in
sub
add
add
int
out
mov
mov
nop
mov
dec
dec
adc
inc
xor
dec
mov
aam
cmpsb
sahf
cmp
pushf
or
add
add
imul
add
rcrb
dec
enter
imul
pop
push
in
fmull
add
add
outsl
mov
push
shll
adc
push
out
sub
add
add
popf
sbb
push
filds
sub
pop
sub
add
add
imulb
add
adc
adc
add
add
pop
add
add
add
arpl
or
in
scas
int
dec
fidivrs
add
jae
std
jnp
mov
add
imul
xchg
scas
repz
pop
sbb
mov
add
add
mov
adc
mov
and
sbb
xchg
std
sbb
fsubrl
cmp
popf
mov
fisttpl
ret
dec
add
add
ja
fcmovnu
dec
jl
xchg
aas
inc
test
mov
add
stos
mov
push
inc
mov
cmp
xchg
inc
or
add
add
push
sbb
push
sub
add
add
cmc
shll
ja
icebp
sub
push
cwtl
mov
cld
jmp
push
imul
push
test
add
pop
jecxz
fists
add
add
pop
arpl
jb
sti
inc
sahf
fsubrs
mov
mov
mov
add
xor
mov
mov
scas
push
int3
mov
outsb
ja
fnstcw
dec
mov
loopne
das
mov
cli
and
mov
ds
mov
inc
xor
lahf
mov
and
add
add
lods
cld
pop
cmpl
mov
xor
sub
popf
pop
imul
mov
rcrl
mov
add
add
add
xchg
loop
mov
pop
dec
jnp
mov
add
add
sbb
mov
insb
mov
mov
and
add
add
dec
test
add
add
insb
add
add
aaa
dec
push
loope
stos
insb
add
add
scas
popf
or
add
add
test
xor
mov
pop
xchg
sbbl
movsb
adc
mov
andl
inc
push
insb
add
add
push
mov
pushl
ud0
ss
divl
cmp
addl
stc
cmc
inc
dec
mov
dec
adc
jecxz
dec
ret
clc
mov
loope
inc
xor
dec
sbb
enter
push
leave
je
mov
out
pop
sbbb
out
inc
mov
ss
fmuls
xor
jp
inc
add
add
add
push
jae
add
add
jle
mov
roll
and
or
mov
scas
sbb
mov
bound
int3
jle
js
add
add
arpl
xor
pop
sub
mov
or
add
mov
dec
lcall
fisubl
int3
mov
cmp
xor
loope
jno
adc
add
add
mov
fldcw
add
add
mov
in
and
add
add
out
mov
push
push
inc
aam
aas
call
nop
mov
fisttps
test
pop
or
add
add
loope
xchg
add
xor
enter
rcll
mov
ret
sbb
fldl
test
dec
pushf
aam
or
jnp
mov
data16
in
clc
dec
fsubrs
ljmp
push
push
into
dec
mov
fimull
pushf
cmpsb
sti
out
imul
stc
mov
add
js
and
mov
pop
xchg
or
add
add
popa
scas
pop
push
into
adc
mov
push
jg
aam
fidivs
xor
jno
testb
pop
lods
and
add
add
sti
sub
fidivl
xchg
mov
push
mov
negb
xchg
shl
push
and
clc
dec
xchg
jmp
test
xlat
push
push
push
jne
mov
pushf
rcrl
out
or
push
xor
cld
inc
pop
insb
mov
imul
add
add
dec
cmp
xchg
movsl
cmp
mov
mov
mov
mov
mov
pop
dec
pop
popa
or
inc
sub
add
add
inc
mov
idiv
sbb
hlt
ret
add
add
inc
add
add
adc
mov
or
add
add
sub
sarb
push
insb
add
add
out
das
es
mov
loop
fcoms
add
dec
mov
inc
dec
add
add
xchg
jp
push
mov
mov
add
add
out
sub
stos
mov
add
add
stc
jo
ret
push
shl
xchg
add
jbe
stc
push
gs
je
clc
pop
pop
les
inc
loop
ljmp
jg
sub
call
jle
rcl
or
repnz
mov
adc
xchg
ret
adc
aaa
stos
dec
frstor
in
leave
repnz
dec
pop
popa
stos
adcl
jge
and
add
mov
imul
stos
dec
enter
cmpl
add
add
daa
xchg
not
mov
jmp
out
xor
cld
push
lret
pop
fisubrl
xchg
mov
xchg
pop
aad
stc
dec
mov
sub
decb
popa
jo
pop
cld
stos
std
push
jne
sti
jbe
loop
ljmp
ret
adc
jb
fwait
adc
adc
pop
std
mov
testb
neg
mov
add
ficompl
xchg
pop
jo
mov
adc
xor
sti
inc
lahf
jl
test
mov
and
or
cwtl
mov
mov
leave
xlat
dec
pop
clc
imul
mov
jae
mov
inc
mov
ja
xor
dec
add
add
in
inc
pop
ss
xchg
mov
push
xchg
mov
add
sbb
xchg
es
loope
test
mov
pop
dec
lret
in
mov
inc
sub
add
add
shr
loop
mov
repnz
hlt
loope
pop
pop
or
add
add
push
std
mov
fwait
cld
outsl
xchg
sbb
push
cltd
dec
inc
mov
sub
xchg
test
jne
fmul
or
add
add
lahf
dec
mov
repz
mov
cmp
cmc
sbb
ficomps
movsl
mov
movsb
fsub
mov
cltd
sbb
add
pop
mov
sbb
jl
fiadds
add
add
iret
daa
and
jo
dec
movsl
out
out
pop
inc
imul
xchg
mov
mov
xor
sbb
xor
jmp
outsb
loopne
mov
mov
add
loopne
sti
dec
xchg
loope
xor
enter
movsl
jle
push
mov
add
insl
ret
xor
adcl
rcr
mov
mov
jmp
or
xor
pop
dec
jb
lods
mov
adc
mov
jg
vcvtsd2ss
inc
xor
dec
or
dec
leave
jmp
xchg
outsl
fisubrl
push
pop
aas
xchg
arpl
insb
mov
pop
sbb
insb
add
add
adc
and
cmc
fndisi(8087
iret
pop
cltd
je
mov
lahf
roll
fmul
movsl
imul
or
add
add
xor
imul
add
lret
add
add
pop
loope
pop
insl
jmp
lcall
in
push
push
in
jp
pop
cmp
cwtl
cs
jge
imul
sbb
add
add
pushf
in
lock
inc
add
add
push
imul
add
ljmp
add
add
dec
xlat
xchg
mov
add
push
mov
jbe
cli
xor
adc
sbb
mov
mov
jo
jmp
inc
ljmp
inc
add
add
mov
pop
insl
sub
mov
and
inc
add
add
in
adc
loopne
pop
push
sbbb
call
add
sub
sarl
add
add
adc
sub
lods
test
test
out
js
arpl
idivl
in
inc
lock
roll
imul
jnp
xchg
xor
fmulp
mov
in
push
lods
xor
push
stos
adc
addb
adc
jp
call
addr16
popf
and
divb
push
dec
mov
add
add
insl
enter
dec
mov
fstl
out
aam
lock
lcall
add
add
cltd
and
mov
shr
cmp
scas
push
test
pop
movsb
enter
add
add
add
add
pop
add
add
add
jecxz
int3
les
outsb
inc
mov
sub
add
add
add
add
add
mov
xchg
pop
adc
mov
vminpd
jmp
adc
push
add
cmp
inc
mov
pop
add
movsb
ret
cmp
add
cld
pop
ss
mov
lock
sub
int
add
out
out
adc
clc
ret
jmp
xor
dec
in
nop
movsl
in
ret
sarl
add
add
jg
sti
xor
add
pusha
mov
jb
mov
cmpsb
pop
cmpsb
cmpsb
mov
mov
movsb
sub
add
add
stos
and
add
add
push
pop
push
sarl
lcall
add
add
mov
adc
add
loopne
add
add
add
xchg
mov
push
pop
mov
rorl
add
cmc
loopne
and
popf
ret
int
xchg
insb
add
add
dec
loop
or
add
mov
ds
jnp
mov
mov
sbb
mov
jb
stc
dec
xchg
push
repnz
xchg
add
stos
adc
mov
xchg
xchg
inc
mov
incb
lret
fnstcw
dec
loopne
arpl
push
stos
xor
mov
mov
js
stos
jae
push
adc
pop
pop
mov
icebp
inc
add
add
jmp
arpl
add
mov
add
add
insl
ret
mov
cmpsb
sahf
jmp
mov
mov
pop
add
add
cmpsb
popl
jg
push
gs
std
push
in
jne
leave
shlb
jns
jno
adc
jae
add
add
cmp
xchg
xchg
push
and
in
sub
sub
add
add
mov
sub
mov
lods
ret
repz
mov
push
adc
jb
or
lods
in
add
pop
cmp
inc
or
mov
rol
outsl
aas
jge
popf
ret
repnz
stos
outsb
into
adc
add
add
rclb
es
push
outsl
inc
repnz
add
add
lods
push
dec
xlat
mov
lret
lods
mov
fcoms
add
push
inc
ja
out
leave
xchg
lret
xor
sub
add
add
xchg
insb
add
add
mov
or
in
cs
dec
mov
pop
ja
or
dec
cld
ds
xor
in
mov
out
andl
pop
scas
sbb
je
push
cmp
nop
adc
ficomps
fucom
sahf
fmull
mov
add
add
sub
cld
lret
jg
sbb
add
jle
xor
stos
mov
add
popf
lea
add
jecxz
mov
xchg
push
scas
aam
jmp
sub
jp
xlat
cltd
fidivs
jbe
stos
cmpsb
pop
mov
mov
adc
lds
push
std
std
pushf
test
cmpsb
or
add
add
add
add
in
cld
xchg
push
jbe
dec
enter
pop
sbb
add
add
add
add
inc
ss
add
add
lds
xchg
add
and
sub
fdivr
and
add
add
add
and
add
add
data16
sub
les
lret
outsb
je
lret
lahf
fsubs
sbb
adc
bound
aaa
bound
sub
jmp
cmp
mov
mov
adc
mov
aad
cmp
lret
scas
jno
pop
dec
push
fnstsw
faddl
fnstsw
jo
popf
pop
out
push
mov
mov
xchg
inc
adc
add
add
lahf
add
push
ss
push
movsb
push
gs
sbb
jno
lods
call
mov
outsl
aas
fadd
mov
mov
jle
mov
es
add
fistl
add
add
push
add
cwtl
and
add
add
and
lret
in
mov
sbb
jge
dec
add
add
xchg
sub
add
add
push
mov
subb
insb
mov
idivl
cmp
xorl
outsl
xor
aaa
mov
in
insb
mov
mov
mov
cmpb
dec
nop
ret
push
xchg
dec
lret
dec
inc
xor
mov
es
cmc
cmp
enter
es
mov
lds
adc
ret
nop
cmpsl
stc
enter
fwait
lods
fwait
push
shll
jmp
ja
sub
xor
sub
add
xor
xchg
sbb
xchg
dec
les
rcrb
lret
add
adc
xchg
mov
lock
frstor
add
add
lret
fildll
sbb
and
add
add
mov
add
fmull
ss
aam
rcrl
fstps
pop
xchg
pop
and
stos
lahf
movsb
jmp
cmp
ljmp
push
sub
add
add
imul
stos
dec
inc
ja
push
push
jecxz
mov
cld
bound
add
add
cs
mov
xlat
addr16
mov
jne
mov
aas
mov
rcrb
jg
stos
shll
xchg
ret
pushf
mov
scas
and
push
xchg
and
inc
inc
adc
outsl
mov
call
add
aaa
adc
pop
push
ret
sub
mov
add
add
jecxz
mov
stos
in
shl
movsl
bound
daa
fbstp
loope
std
or
push
dec
nop
aam
push
cltd
xchg
pop
cli
test
jae
fcoms
sahf
sub
and
add
add
dec
inc
dec
stc
lea
add
push
adc
jns
adc
lods
ficompl
rcpps
je
fstpt
add
adc
dec
inc
mov
or
mov
push
ffree
icebp
lds
pushf
push
and
inc
sbb
jp
call
cs
cmp
push
cli
inc
frstpm(287
fildll
mov
jmp
pop
inc
cmp
repz
sbb
movsl
add
outsb
popa
jno
push
dec
push
inc
movsl
or
stc
popf
sub
in
inc
fisttpll
add
mov
or
add
add
dec
lods
leave
xchg
adc
add
add
push
and
cld
dec
nop
fdivrp
lcall
daa
aas
xchg
cs
add
mov
inc
movsb
cmp
cmpsb
in
rcrb
adc
push
cmp
jnp
add
add
push
gs
bswap
sahf
inc
adc
mov
dec
or
lea
add
add
addr16
shrl
add
add
out
leave
add
mov
repz
pop
push
cltd
fldt
imul
cltd
add
mov
fdivrl
mov
test
das
lcall
cmp
scas
mov
push
ja
mov
add
and
dec
mov
jns
xchg
sub
inc
leave
jl
cltd
lock
inc
dec
mov
lret
ss
clc
adc
sbb
lcall
fstl
adc
and
add
add
add
loopne
push
mov
sbb
cmp
outsb
mov
fs
int
adcl
push
jmp
bound
pop
sahf
inc
jnp
fstps
cmp
xchg
lret
xchg
sbbl
or
add
add
rcr
mov
adc
jno
jo
popl
mov
cwtl
jecxz
and
ds
lods
xchg
push
mov
lahf
jne
and
add
add
push
jl
push
push
iret
out
cmp
lods
ret
rcr
sbb
dec
ror
push
out
sahf
mov
lods
dec
xchg
add
add
add
add
add
fwait
in
outsl
gs
test
les
scas
mull
add
add
mov
sbb
or
add
add
inc
cmpsb
jno
pop
rorl
pushf
fidivrs
hlt
mov
jo
aas
xor
ss
push
pop
out
add
add
outsl
mov
andb
add
imulb
dec
dec
fbld
jge
fidivrl
sbb
dec
mov
or
or
cmp
jb
int3
push
stos
xchg
inc
add
add
cld
std
lret
xchg
aam
imul
and
and
add
shrl
and
notl
add
add
sbb
aad
cmp
mov
push
testl
mov
xlat
mov
hlt
xchg
mov
add
pop
shr
shrl
mov
sub
sbb
mov
add
add
add
mov
sub
add
add
out
jns
cmp
test
imul
add
cmp
dec
push
xchg
jle
add
add
add
add
add
sbb
mov
add
add
add
push
sub
add
add
mov
mov
imul
xchg
adc
jno
mov
or
sbb
mov
add
stos
and
add
add
aaa
dec
mov
or
add
add
mov
mov
sbb
add
das
lret
lds
add
add
mov
xchg
jmp
outsl
in
loopne
xor
add
add
add
sub
add
lret
pushf
ss
add
pop
or
lret
into
sub
shrl
add
add
imul
arpl
and
add
sti
inc
stc
mov
mov
add
popf
or
xlat
arpl
into
push
xor
add
add
add
pop
sub
xchg
jae
fwait
into
sub
add
add
dec
mov
jg
jae
les
mov
jnp
ss
cmp
jo
pop
jbe
mov
call
arpl
dec
push
daa
je
in
stc
stc
out
popf
lock
cmp
rol
mov
fdivr
insl
imulb
mov
sbb
mov
scas
mov
imul
add
mov
ja
jge
inc
mov
sub
es
pop
dec
sbb
fs
mov
cwtl
std
ret
jp,pn
dec
cmp
movsl
sahf
iret
or
shll
je
jg
das
bound
fucomi
sbb
cmpsl
jbe
dec
xchg
inc
jl
sub
dec
pop
mov
add
add
stos
jae
push
jmp
mov
mov
xor
xchg
cltd
decl
lods
sub
add
add
xor
dec
pop
or
mov
sub
inc
dec
add
test
or
jmp
mov
cmp
stc
xor
imul
js
dec
call
scas
and
xor
jne
jno
arpl
and
sahf
testl
mov
jl
mov
add
add
add
fwait
and
jae
xchg
fwait
dec
decb
sti
imul
push
cltd
xor
mov
stos
inc
fsubs
sub
add
add
add
pusha
mov
jo
or
dec
add
add
cs
dec
js
aam
cmp
cmp
add
jge
fidivrs
sub
std
mov
or
add
add
add
add
dec
repnz
ds
test
icebp
mov
popa
int3
fisttps
add
add
add
jae
cmp
out
mov
xor
lret
lcall
and
sbb
cld
adc
xor
test
test
decl
push
imul
add
add
mov
sub
repnz
arpl
dec
pop
xlat
adc
dec
movsl
mov
add
shlb
jbe
mov
pushf
cs
rcr
test
jbe
xor
xor
popa
jecxz
outsb
and
add
mov
xchg
xor
push
test
ret
or
fmul
pop
fiaddl
add
add
pop
push
sbb
shll
add
cmp
iret
adc
add
xchg
add
add
add
or
add
add
mov
movb
movntq
out
test
mov
adc
mov
or
add
or
add
add
mov
jb
dec
add
pop
test
xor
mov
lock
gs
imul
jne
pop
mov
pop
push
iret
lods
and
stos
and
mov
add
jg
mov
add
cld
sbb
and
add
add
mov
lret
not
iret
rorb
add
add
clc
pop
enter
inc
xor
jecxz
insl
mov
xor
addb
adc
sbb
lahf
push
mov
aad
sahf
dec
xorl
add
jnp
push
pop
sub
shll
and
add
mov
xchg
dec
add
add
loope
sbbl
sub
push
jmp
scas
dec
and
fcomp
sub
add
add
cmp
push
sbb
push
ss
pop
gs
stc
arpl
ss
subl
loopne
test
add
sbb
and
add
scas
mov
push
dec
mov
pushl
sub
sbb
je
stos
sbb
add
add
pusha
mov
sub
add
add
not
and
pop
sti
inc
cmp
mov
add
add
imul
hlt
shrl
add
xor
add
mov
xor
mov
movsb
xchg
xchg
test
leave
jl
mov
push
pop
cltd
pop
push
mov
adc
out
sbb
cmp
dec
add
add
mov
add
rcrl
or
lds
add
add
mov
inc
add
add
int
and
mov
sbb
add
inc
xchg
mov
aad
and
movsl
fnstenv
addl
push
inc
fwait
push
adc
pushf
andl
add
add
sub
roll
add
les
add
add
pushl
add
add
add
add
xchg
xlat
cmpl
and
fxch
cmp
adc
out
mov
jns
and
add
add
movsl
sub
push
test
adc
sbb
xor
cmp
outsl
inc
add
add
lret
mov
mov
ss
add
add
ljmp
add
cmpsb
in
ffree
lcall
adc
jmp
mov
add
decl
into
fmull
pop
xchg
add
and
cltd
sub
add
add
sbb
mov
mov
add
add
lahf
mov
pushl
sub
pusha
add
add
sbb
inc
hlt
cld
enter
arpl
imul
repnz
jnp
sbb
mov
mov
pop
dec
testl
xlat
jge
and
add
leave
xor
jo
fsubs
add
jns
iret
cmc
sbb
pop
inc
xchg
jg
sbb
mov
cmpsl
jnp
push
jl
xchg
fcompl
inc
add
add
daa
dec
sbb
adc
jo
arpl
jne
pusha
mov
xorl
cmp
sbb
test
pop
inc
cmpsl
xor
add
and
add
add
push
dec
add
add
jae
add
leave
inc
mov
movsb
add
add
add
std
imul
xchg
sbb
add
add
mov
jmp
mov
cltd
out
jg
call
in
sbb
and
addl
aas
imul
ret
jne
in
out
sub
into
sbb
dec
or
jbe
in
sub
mov
xor
and
jmp
push
push
add
add
add
add
add
lds
add
add
add
data16
movsl
stos
jge
pop
dec
jne
ljmp
add
add
lds
xor
add
insl
sbb
or
add
add
push
aam
fisubrs
dec
lods
pop
int3
imul
add
add
xor
mov
dec
mov
add
add
xchg
loop
add
add
pop
jns
adc
add
add
add
add
mov
leave
loop
xor
add
add
mov
jno
jmp
add
add
xchg
pop
pop
rorl
mov
daa
int
add
scas
mov
push
out
fdivl
add
add
aaa
lret
inc
mov
int3
mov
mov
dec
rcll
mov
iret
movsl
fldenv
push
adc
add
add
and
add
add
jecxz
dec
es
cld
xchg
and
out
aam
push
push
dec
ret
mov
adc
out
mov
sti
and
add
add
js
in
bound
add
add
adc
xor
rorl
and
rolb
ret
ds
lahf
xor
xchg
or
and
data16
and
ret
call
inc
shlb
cmp
xchg
les
push
mov
mov
test
ljmp
add
pop
sti
aam
mov
xchg
add
add
add
add
add
cmc
movsb
sub
push
push
scas
sub
add
cs
pusha
mov
outsb
inc
shr
add
add
andl
and
add
add
mov
into
hlt
es
ficoml
repnz
std
imull
add
xor
xchg
movsb
cld
lahf
jg
add
add
test
sub
sbb
add
add
ret
sbb
ficompl
add
fcomi
int3
aad
or
pushf
jnp
sti
lods
clc
dec
xchg
dec
mov
dec
or
push
lds
inc
add
add
jle
dec
add
fists
xchg
out
cmp
add
add
lods
js
and
test
sub
add
add
add
lret
add
add
adc
pop
cmp
das
repnz
enter
add
add
dec
ja
mov
sub
ds
aas
push
mov
xor
or
aaa
sbb
mov
add
pop
xor
test
mov
mov
xorb
pop
push
ds
sbb
jne
inc
add
add
es
push
rcr
sub
add
add
shlb
mov
mov
dec
add
add
out
mov
fwait
ret
movsb
sub
lea
push
mov
add
add
adcb
pop
sbb
arpl
xchg
lret
and
add
add
add
add
jnp
sub
add
add
mov
xor
into
pop
dec
icebp
push
test
lock
mov
push
ljmp
cmp
ret
imul
add
add
imul
jmp
in
in
mov
lock
add
pop
lods
cli
leave
in
sbb
stos
xor
push
stc
shr
sub
add
xchg
inc
add
add
push
imul
cwtl
test
cwtl
movsl
push
push
sub
xchg
je
pop
xchg
jae
mov
into
sbb
and
pop
push
and
or
dec
lds
mov
push
fisubrs
push
into
in
push
mov
enter
inc
mov
xchg
ss
out
fwait
add
nop
out
lea
mov
add
pop
stos
jmp
add
add
ljmp
daa
mov
push
jbe
imulb
push
repnz
int3
mulw
adc
mov
aaa
push
fs
pop
movsb
ss
ss
jl
and
cli
shll
les
rcll
in
push
inc
mov
fs
repz
adc
adc
push
cmpsl
push
xchg
fcmovnbe
or
add
add
jl
insb
add
add
push
mov
test
xor
fisttps
mov
jne
ss
out
idivl
imull
pusha
add
add
jns
xchg
add
xlat
lods
iret
shlb
lods
mov
fwait
adc
test
insb
mov
std
pop
sbb
adc
add
add
pop
shl
cmp
lret
sub
jnp
fisubrl
pop
push
jecxz
add
add
add
add
adc
int
cwtl
and
sub
adc
mov
inc
mov
push
push
jo
add
mov
mov
push
lret
mov
out
mov
xchg
pop
and
add
add
ror
not
loopne
push
sub
add
add
pusha
add
add
lods
fwait
stc
inc
sub
add
add
addr16
cwtl
es
cmpsb
xchg
add
add
scas
add
add
cmp
and
cmp
pushf
test
push
cmp
mov
mov
and
mov
add
add
pop
cmp
shll
ljmp
and
add
add
mov
cmp
je
mull
add
add
sbb
and
add
add
or
add
add
push
add
add
cmpsb
lcall
ror
inc
add
add
push
inc
mov
cltd
xor
add
outsb
stos
aad
jno
movsb
pushf
sbb
imul
inc
jnp
jecxz
sub
add
add
pop
and
add
add
sbb
push
stos
pop
pop
and
adc
idivb
mov
or
xor
pop
cmpsl
pop
sbb
or
push
mov
dec
and
cmpsl
bound
in
out
add
add
ljmp
dec
mov
ret
popf
adcb
bound
dec
add
add
repnz
sbb
or
test
adc
sub
andb
sbb
push
pop
jg
cli
xor
je
mov
inc
and
add
push
push
ljmp
mov
cld
mov
mov
pop
mov
call
add
add
out
add
add
add
cmp
or
add
add
sbb
add
loopne
pusha
mov
add
add
push
or
mov
xchg
out
aam
pusha
add
add
add
add
add
dec
pop
sub
add
add
rcpps
add
mov
dec
or
add
adc
add
add
mov
add
add
add
fptan
dec
jle
int3
scas
jmp
adc
push
fsubrl
dec
inc
pop
aad
lcall
out
mov
add
shll
cmpb
push
inc
push
add
xchg
pop
inc
mov
add
lret
arpl
add
sbb
push
xchg
xchg
jno
add
add
add
dec
add
add
pop
pusha
mov
int
insl
sub
add
add
lcall
inc
add
incl
add
add
stc
cmpsl
mov
and
add
add
pushf
addr16
or
enter
mov
jg
std
fmul
jge
pop
movsl
mov
leave
test
movsl
push
mov
sub
popa
jne
xchg
fmul
add
stos
arpl
push
or
jo
mov
in
cmpsb
insb
add
add
dec
xchg
pop
cmp
ja
sbb
cs
pop
iret
jbe
lea
add
add
push
inc
mov
pop
xchg
in
dec
dec
out
mov
push
fmuls
jg
in
add
add
pop
int
addr16
mov
or
jecxz
xor
outsb
cli
adc
bound
add
inc
outsb
jo
lret
lods
fdivr
add
loopne
rclb
movsl
push
ret
add
dec
mov
rolb
xchg
mov
fimull
shrl
mov
dec
sub
sbb
mov
add
add
xchg
push
jnp
mov
jno
pop
mov
add
mov
add
xor
xlat
jecxz
mov
cmc
push
or
fimull
pop
xor
adc
jle
ja
mov
xor
mov
icebp
lret
mov
sbb
and
add
add
dec
add
add
push
and
pop
orl
add
out
loopne
cs
add
mov
add
add
f2xm1
cli
sub
scas
out
scas
or
add
xor
sub
add
add
xor
jmp
push
push
test
stc
sbb
ret
nop
cs
mov
gs
xor
jle
sbb
iret
sbb
loopne
pop
imul
sti
dec
xor
and
add
add
xchg
and
daa
stc
cmp
jmp
test
std
out
cli
loope
push
stc
scas
test
cmpb
les
and
lahf
pop
add
stos
jo
stos
dec
lret
push
and
ja
mov
or
add
add
sbb
xor
fsubrs
add
add
xchg
add
add
jecxz
inc
fidivrs
movsb
das
xor
pop
jae
push
xchg
pop
cmpsl
stos
int3
mov
stos
xchg
fildl
mov
pop
adc
cwtl
jo
xor
or
add
test
adc
jo
outsb
mov
adc
shl
inc
add
add
fldl2t
sbb
push
pop
outsl
testl
bound
add
add
lret
rclb
ljmp
pop
mov
add
add
cmp
lds
ret
into
cmpsl
mov
test
xor
popa
pop
add
ret
add
add
jne
sbb
add
add
cmp
rcrb
into
cli
or
pop
rclb
mov
add
add
xor
jo
push
ficomps
cmp
out
or
mov
pop
dec
test
jns
adc
pushf
push
out
mov
movsb
add
add
add
int3
inc
ret
pop
cmc
lahf
adc
and
add
add
add
add
add
add
push
imul
xchg
or
add
add
stc
add
add
add
add
stos
in
ror
adc
push
sarl
mov
mov
ljmp
add
add
dec
pop
or
add
stc
pop
jo
cld
xor
int
insl
rorl
add
jbe
lcall
xor
pop
push
fsts
les
add
add
cli
xchg
push
fnstcw
or
jns
xor
add
add
sbb
pop
rorb
clc
push
in
out
das
push
ret
sbb
xchg
gs
mov
add
add
add
add
sub
outsl
addr16
xchg
adcl
hlt
mov
bound
cltd
popa
aam
out
inc
pop
ja
fs
xor
fsub
shr
into
das
add
add
rclb
add
add
jae
mov
in
mov
je
pop
adc
mov
pop
fisubl
add
add
imul
add
fildll
push
cmpsb
dec
cwtl
cmp
lcall
sti
hlt
or
pop
or
or
add
add
lods
inc
add
add
add
xchg
adc
jp
mov
dec
mov
pusha
mov
aam
jae
mov
cmp
lcall
leave
or
mov
xchg
stos
mov
add
into
xchg
jnp
popa
and
outsl
xor
inc
add
add
incb
cmc
and
leave
rcr
enter
mov
push
lock
add
add
xor
mov
pop
and
add
add
add
jo
inc
push
fisubrl
sub
add
mov
pop
push
xchg
jge
add
add
add
ret
arpl
add
iret
imul
push
fiadds
add
jle
adc
push
sub
or
mov
add
int3
jp
popf
push
sti
dec
add
add
lock
repz
xchg
mov
vdivps
dec
add
add
add
add
popf
addb
out
mov
mov
mov
adc
and
push
sbb
add
add
add
or
cmpsb
inc
mov
add
add
xchg
sbb
scas
pop
lahf
pop
mov
rcrb
mov
js
loope
aas
push
fcmovnu
dec
out
cli
jmp
or
shl
nop
push
or
fistps
lods
cld
xchg
dec
xor
ja
adc
add
add
pushf
movl
out
mov
inc
push
jo
cmp
lock
inc
cmp
mov
add
add
out
in
mov
lcall
add
repnz
jge
subb
add
xor
xchg
and
add
add
add
add
mov
pop
mov
imulb
push
jmp
add
or
mov
lods
mov
nop
mov
mull
repnz
lea
add
outsl
fisttpll
mov
xchg
pop
inc
mov
insl
sub
push
out
add
js
add
loopne
in
icebp
pop
pop
adc
add
sbb
add
jb
sti
movsl
scas
dec
pop
add
testl
sarl
and
xchg
ja
push
stc
movsl
jns
adc
xchg
in
fisubs
add
adc
lods
pop
pop
sbb
sarb
jns
orb
les
or
fs
cmp
jns
pop
push
push
jnp
mov
add
add
xlat
xchg
sbb
push
mov
pop
or
xchg
loop
notl
xchg
dec
mov
xor
mov
mov
ja
aad
or
add
add
rorl
out
pop
add
pop
stos
hlt
dec
pusha
add
add
call
mov
pop
leave
dec
insl
adc
sbb
and
rcrb
dec
ja
fnsave
push
iret
mov
dec
pop
add
inc
add
add
hlt
stc
add
add
add
aad
jmp
mov
xor
add
add
aam
lahf
cmp
add
add
dec
jl
hlt
repz
adc
outsb
stc
jbe
popa
icebp
in
sbb
mov
cmpsl
push
adc
sub
mov
setbe
lret
jnp
test
add
dec
or
xor
pop
rorl
mov
fldl
add
xchg
orl
inc
xchg
and
add
add
in
xchg
or
rcrb
test
adc
out
pusha
add
add
and
add
add
cmp
add
add
add
cmp
in
stc
fidivrl
pop
cltd
scas
mov
mov
jne
add
add
add
xchg
out
cmc
pop
push
dec
in
cmc
flds
mov
cmp
sub
lret
lcall
movsl
and
push
inc
mov
std
sbb
ficomps
mov
sbb
mov
std
shll
fwait
mov
jmp
inc
std
or
add
add
add
pop
jo
xor
pop
or
inc
shrl
cmp
ja
daa
std
fwait
and
add
add
mov
add
and
lea
movb
add
add
jns
data16
add
add
ret
sbb
add
add
add
pop
repz
add
add
mov
adc
mov
inc
int3
arpl
sub
add
add
fistl
cmp
sub
sti
dec
mov
lcall
adc
cmpsb
and
add
add
add
add
mov
and
add
add
mov
sub
into
jecxz
adc
lcall
adc
out
into
inc
jl
insb
mov
mov
mov
rcr
enter
enter
lret
mov
sbb
into
repnz
mov
add
add
lock
add
add
fsub
ret
or
inc
shrl
add
or
imul
and
int
lock
mov
sahf
sub
adc
jnp
lds
cmpl
aam
dec
mov
mov
aad
das
jae
jmp
mov
jae
mov
enter
xchg
loop
mov
cwtl
inc
cmp
imul
cltd
jnp
cmc
mov
sub
push
pop
out
cmpsw
push
lods
and
add
add
sarl
add
add
xchg
sub
add
add
xchg
das
negl
push
bound
test
lret
ljmp
inc
add
add
out
cmp
mov
gs
add
add
mull
dec
xchg
mov
or
add
add
into
jae
ja
orl
sahf
push
fimuls
add
add
pop
mov
or
mov
mov
pop
adc
stc
aam
mov
sbb
mov
xchg
add
add
jecxz
lret
adc
jnp
inc
pop
pop
and
add
scas
dec
mov
dec
in
shll
xchg
aam
insl
fdivs
enter
xchg
dec
int3
xchg
fstps
add
dec
popf
cmc
repnz
adc
push
mov
add
ret
or
add
add
fidivs
xor
add
add
fwait
scas
pusha
mov
xchg
and
xchg
stos
andb
add
jo
dec
jbe
adc
mov
hlt
add
bound
add
jnp
inc
add
add
into
cmpsl
adc
dec
mov
and
add
inc
pop
pop
push
cmpsl
pop
cmpsl
xor
fstpl
adc
call
adc
loopne
cmp
call
add
or
add
add
add
add
adc
add
add
jmp
add
add
add
add
jecxz
jp
loopne
jno
push
out
inc
daa
std
adc
sarb
add
add
xchg
addr16
cmpsb
lods
lret
or
cmp
mov
jmp
xlat
fcmovb
xbegin
mov
push
out
push
pop
push
call
inc
ds
push
cmc
push
mov
jecxz
dec
stc
pop
xor
add
add
jl
mov
mov
jle
stos
xor
add
sub
add
add
add
add
outsb
push
pop
nop
dec
cmp
lods
in
fisubs
outsb
roll
adc
popa
add
sub
add
or
mov
mov
lahf
mov
add
push
inc
rcrl
fmulp
mov
loope
mov
imul
pushl
mov
dec
push
popa
sub
add
add
push
fld
test
add
add
add
in
add
add
icebp
pop
or
add
add
je
sahf
pop
out
pop
mov
fdivl
add
push
ds
xchg
mov
icebp
sti
mov
ret
add
add
jo
add
add
testb
add
add
xor
mov
push
mov
sahf
das
pushf
jecxz
loope
add
add
pop
cmpb
mov
mov
or
nop
cmp
cwtl
xchg
xchg
lea
push
sbb
xor
add
fisttpl
mov
mov
pop
fdivr
cli
decb
push
fistpll
dec
xchg
dec
and
xor
inc
jno
clc
dec
roll
mov
fbld
cmpsl
jmp
and
jecxz
ds
nop
inc
arpl
jp
lret
sub
add
add
or
and
and
mov
push
inc
add
add
add
cmp
add
aas
adc
fisttpl
pop
inc
jo
add
add
fneni(8087
or
push
int3
stos
add
add
add
dec
shlb
add
mov
cmp
cs
lods
imul
cmp
mov
mov
xchg
and
add
add
adc
repz
das
rorl
add
mov
inc
ljmp
sbb
add
add
inc
add
add
pusha
mov
or
and
cs
popf
sbb
mov
inc
sub
add
add
sub
jae
lret
outsl
xorl
jo
push
push
sbb
mov
sahf
dec
add
add
jecxz
jb
ret
pop
roll
add
add
xchg
lods
sbb
dec
mov
mov
mov
sbb
gs
cmc
adc
sub
add
add
std
jb
pop
push
icebp
fnstenv
xor
mov
cmp
sub
add
add
mov
outsb
sbb
cwtl
stc
jmp
pop
pusha
add
add
fwait
and
inc
dec
pushf
xchg
cmc
xor
adc
mov
dec
cmp
mov
add
add
sbb
jl
cli
movsb
shr
lcall
lock
fdiv
adc
add
add
add
add
add
add
mov
cs
xor
add
add
xorl
rcr
int3
jecxz
cltd
inc
sub
add
add
push
jb
and
and
lret
mov
cmc
xchg
cmp
xchg
outsl
test
test
inc
addl
xchg
test
sub
ret
lcall
inc
inc
xchg
cltd
jecxz
sub
xor
mov
mov
inc
add
add
idiv
and
add
add
inc
rcr
inc
mov
cld
xor
add
mov
add
in
std
pusha
add
add
popa
lret
scas
or
lahf
or
add
add
add
icebp
outsb
shlb
add
add
add
pushl
adc
mov
sbb
add
add
add
stos
pop
inc
pop
sbb
xor
testb
mov
xor
pop
popf
inc
add
pop
fildl
jae
mov
inc
mov
xchg
js
scas
pop
mov
pusha
mov
or
scas
outsb
dec
imul
out
insb
add
add
jbe
inc
ret
sbb
mov
dec
lods
xchg
and
mov
frstor
inc
mov
pop
push
or
into
test
add
add
mov
lcall
or
add
add
mov
add
call
mov
mov
inc
stc
lods
jbe
addb
fldcw
mov
add
add
and
loopne
leave
and
imul
mov
pop
and
add
add
add
add
fwait
cmc
ljmp
cmp
jmp
test
frstor
dec
mov
jmp
cltd
stos
jnp
or
out
mov
jecxz
and
add
pop
and
cmp
jbe
jne
cmp
sub
mov
mov
push
dec
mov
add
fimuls
add
mov
mov
xchg
jb
mov
movsl
out
scas
je
out
aas
sbb
xchg
cmp
and
mov
iret
hlt
xchg
dec
inc
stos
push
repz
fsubr
out
subl
mov
addr16
cld
addl
add
add
js
fsubrs
push
pop
movsb
ret
in
mov
mov
add
add
enter
add
dec
mov
dec
fwait
add
cs
sbb
mov
mov
stc
aad
xchg
idivl
mov
add
out
xchg
inc
pusha
add
add
push
and
sahf
shlb
scas
xor
mov
mov
mov
sub
leave
ret
xor
out
or
add
add
add
add
stos
shlb
mov
push
mov
cmp
lds
repnz
add
add
mov
push
mov
add
add
testl
mov
and
shlb
sbb
add
mov
data16
popf
and
mov
dec
jbe
cmpsb
fidivrs
jb
and
cmp
jbe
xlat
mov
dec
add
add
or
out
pop
pushf
fcom
pop
jnp
fidivrs
mov
jne
ljmp
xor
adcl
or
add
add
sarl
loopne
mov
out
and
add
add
mov
mov
add
push
inc
fwait
mov
pminub
add
add
movsb
mov
mov
ret
xor
sub
add
add
cvtdq2ps
fcmovb
mov
cmpsb
movsb
jg
outsb
sub
jno
decb
out
add
insl
int3
outsb
dec
inc
out
rcr
mov
jne
sub
outsl
mov
icebp
sbb
jl
sbb
mov
jb
push
cmp
sti
mov
out
mov
sub
outsb
sub
add
add
in
mov
xorl
aas
lods
cmp
add
add
jmp
std
mov
add
add
push
in
mov
push
sub
or
add
add
in
mov
xchg
add
add
ficoml
mov
dec
push
add
add
add
shlb
mov
push
push
and
dec
and
add
add
push
xor
imul
fisttpll
mov
xchg
lret
mov
fistl
add
add
xor
in
stos
insb
mov
sbb
inc
add
add
sbb
mov
push
inc
stos
mov
dec
add
add
ss
in
enter
add
cmp
mov
lea
rcrl
push
lahf
add
sahf
jmp
es
sub
add
mov
sbb
push
xlat
gs
daa
adc
dec
std
in
mov
add
stc
pushf
int3
add
dec
mov
insb
mov
mov
cs
add
rcrl
neg
pop
int3
xchg
jne
notl
add
add
scas
and
enter
fiaddl
mov
insb
add
add
rcrl
mov
jae
jl
xor
sarb
cmp
xchg
lret
lcall
adc
mov
pop
xchg
push
loope
fbld
xchg
sti
pop
in
or
add
add
mov
mov
add
add
loopne
mov
add
pushf
inc
push
mov
ja
ds
mov
sti
dec
mov
aad
shrl
adc
out
clc
fsub
js
add
lcall
mov
mov
shl
sub
and
stos
in
add
dec
add
add
jmp
out
aaa
scas
test
push
int
bound
add
add
daa
dec
int
dec
sar
adc
jo
dec
add
add
add
and
add
sarl
jne
test
arpl
dec
nop
mov
add
add
dec
lret
pop
lret
push
cmpb
add
add
or
add
add
icebp
cmc
in
loopne
lods
cli
push
jmp
call
mov
xchg
sbb
inc
pop
sbb
mov
mov
push
inc
pop
or
add
add
adc
clc
addr16
mov
cmc
mov
leave
push
jge
inc
daa
sysret
pop
ficoms
or
add
push
adc
jnp
pop
adc
insl
scas
sbb
or
les
mov
movsb
xchg
fisubrs
mov
aaa
add
es
adc
mov
pop
cwtl
and
add
add
xchg
std
adc
call
int3
ret
xor
mov
add
add
sbb
movsb
dec
call
add
test
add
add
rorb
mov
movsb
mov
xor
add
add
adc
adc
cmpb
add
add
repz
adc
add
add
sub
pop
das
decl
es
add
add
test
jo
sub
add
inc
mov
leave
mov
cmp
push
or
add
add
cli
pop
roll
je
pop
add
in
sbb
add
add
pushf
addl
test
pop
test
mov
shlb
pop
push
dec
movsb
daa
xchg
dec
sub
sub
add
add
js
dec
cmp
test
lret
inc
data16
add
add
scas
dec
sar
repnz
call
lea
fdiv
mov
add
add
mov
jne
stos
das
pop
push
stc
cld
in
mov
out
ja
push
pop
stos
fbstp
jae
lds
sahf
push
pop
imul
xchg
jecxz
dec
in
pop
inc
arpl
dec
int
sbb
cmp
orl
add
mov
cmp
arpl
call
sbb
cmp
add
add
sbb
in
shlb
mov
sub
and
add
add
es
add
ret
add
add
add
add
add
js
cmp
mov
pop
mov
push
mov
mov
push
cmp
shlb
push
or
jg
mov
and
jne
das
fcoms
add
shrb
jno
dec
mov
cmc
popf
out
fwait
adc
xor
pop
repz
push
and
repz
add
add
inc
repz
insl
outsl
push
push
dec
mov
sbb
lret
mov
xor
xchg
cmp
sbb
sbb
mov
cs
push
iret
pop
popf
jmp
inc
add
add
or
add
add
loop
jmp
pop
push
in
adc
add
jle
add
add
push
push
jnp
dec
xchg
sbb
add
add
lret
mov
push
pop
mov
add
add
test
inc
ds
adc
and
push
add
mov
mov
add
aad
lret
push
decl
sub
cli
nop
mov
sahf
aad
add
add
add
js
pop
andl
jg
into
cmp
mov
rcl
mov
mov
add
add
aaa
fbld
addr16
mov
out
or
fsubrs
adc
stos
test
add
add
add
add
add
add
add
add
add
mov
add
add
sbb
cmpsb
imul
test
fisttpll
ljmp
cmp
dec
imul
xor
ret
faddp
js
lret
push
fwait
scas
int
lods
jns
jne
dec
mov
popf
iret
ljmp
mov
sbb
pop
sbb
movsb
in
lods
pop
outsl
int
inc
add
add
adc
jb
adc
mov
push
or
lods
fcompl
inc
pop
inc
pop
cmc
lea
add
stc
cwtl
js
data16
inc
xor
stc
mov
loope
push
stos
cwtl
notl
mov
shll
aas
xchg
orb
xor
xchg
std
add
add
add
add
jge
aad
mov
mov
push
or
mov
add
flds
add
add
add
pop
aad
push
mov
adc
xchg
xlat
sub
add
test
outsl
jnp
dec
mov
fwait
xor
jb
repnz
or
out
dec
adc
mov
mov
fsubrl
sbb
jle
jae
aaa
cmp
xchg
outsb
adc
pop
sub
fisubrl
xchg
xor
cmp
nop
mov
add
add
dec
cmp
sub
mov
xlat
insl
nop
pop
push
subl
decb
adcb
mov
pop
mov
mov
lahf
ficomps
dec
sub
rcll
and
out
rcrl
cmp
mov
and
out
or
mov
mov
lret
sub
add
daa
cmp
and
sti
imul
xor
xor
cmpsb
mov
adc
inc
add
add
fsubrs
loope
sbb
loopne
pop
push
cltd
pop
xor
add
std
mov
mov
enter
in
fcom
popa
push
out
mov
sub
sub
mov
add
add
add
cltd
loope
loope
dec
xchg
xchg
and
aaa
adc
and
mov
add
je
push
ror
es
xchg
inc
mov
add
adc
push
clc
mov
add
xchg
inc
jg
adc
xchg
pop
xchg
js
orb
iret
or
sbb
cmpsl
jnp
sbb
add
cltd
test
push
xor
mov
pusha
add
add
scas
out
out
mov
add
je
scas
mov
adc
sbb
jne
test
xlat
and
xchg
xchg
std
xchg
rcr
adc
adc
in
int
mov
adc
xchg
pop
cli
push
jb
pop
add
jg
imul
pop
xor
enter
xor
test
test
jp
mov
into
jge
mov
loope
sub
jo
mov
ds
sahf
sbbb
test
popf
lods
or
add
add
aam
mov
icebp
push
cmc
add
add
push
stc
shrb
cwtl
mov
addr16
jmp
cwtl
shrl
shr
adc
dec
and
add
push
cmpsl
sahf
enter
jae
jbe
jge
jl
cwtl
xchg
cmc
inc
add
add
mov
mov
icebp
sub
adc
bound
pop
mov
mov
mov
xchg
dec
in
jg
bound
mov
int3
in
jle
scas
arpl
add
add
sub
sbb
add
add
add
rol
sbb
inc
dec
add
add
or
add
add
mov
pop
push
jp
lret
adc
or
add
add
add
add
dec
inc
mov
sub
add
add
pushf
aas
fst
fwait
dec
xlat
loopne
jne
clc
sti
mov
adc
stos
xor
daa
pop
out
rclb
add
add
dec
xchg
test
sahf
dec
adc
popl
and
mov
ret
mov
fsubrs
add
inc
add
add
or
add
add
push
jae
dec
lock
js
add
add
add
or
mov
adc
daa
sub
add
add
mov
add
add
xchg
test
mov
fwait
popf
sbb
scas
lods
mov
sub
add
add
lahf
in
push
xor
add
sbb
xor
add
add
and
test
pusha
mov
xchg
adc
mov
push
sub
imull
jbe
in
ret
loopne
xchg
push
rclb
jae
inc
adc
adc
add
orb
add
push
cmpsl
bound
scas
dec
mov
add
in
repz
cwtl
fucom
xor
add
add
add
cmp
pusha
mov
mov
dec
mov
jl
icebp
aas
loopne
adc
popf
push
pop
ficompl
mov
push
mov
dec
movsb
dec
test
jg
popf
dec
orl
lcall
mov
sub
addr16
cmpsb
or
outsb
aam
popf
xchg
cmpsb
idiv
pushf
jle
mov
sbb
jae
or
adc
and
ficomps
and
call
add
stc
fiadds
adc
cmp
add
rcrb
scas
adc
fstps
sub
jle
pop
ficoms
rcll
int3
dec
sbb
add
sbb
mov
mov
push
data16
insb
mov
add
sbb
mov
imul
pop
jo
fldenv
mov
pop
cltd
cwtl
cld
jb
sub
jo
scas
sbb
out
imul
test
loope
or
sbb
pop
pop
cmp
cmp
inc
hlt
sbb
shrb
fdivs
dec
jg
cld
scas
pusha
add
add
lret
nop
dec
cld
inc
sahf
sbb
bound
lock
xchg
sarb
add
add
fneni(8087
mov
mov
push
or
add
add
mov
add
xchg
mov
sub
sub
add
add
dec
sub
add
add
mov
fldt
sbb
jecxz
sub
sbb
int3
pop
cltd
mov
jg
cmp
mov
test
addr16
test
mov
ljmp
ja
pop
in
leave
and
add
add
add
mov
add
push
imul
add
add
xchg
pop
inc
add
add
pop
aaa
push
push
arpl
aaa
mov
mov
jle
cmp
test
mov
add
add
das
sahf
arpl
lahf
mov
roll
sbb
bound
sahf
notl
aaa
daa
rorl
or
jno
adc
dec
xor
imul
je
test
add
and
push
movsl
fimull
sbbl
lret
pop
arpl
rcrl
loop
pop
jp
add
scas
mov
inc
jmp
add
add
add
add
test
and
sbb
cmpsb
stos
testb
lods
out
xchg
outsl
std
sbb
lahf
mov
jecxz
sub
lcall
adc
add
mov
leave
jg
cmp
xorl
lods
or
hlt
imul
and
movsb
cmp
addl
xor
jb
mov
or
add
add
cld
in
dec
mov
sub
add
add
fdivl
into
pusha
mov
sbb
mov
rcll
mov
test
les
add
adc
add
rolb
inc
add
add
loopne
mov
inc
and
add
add
in
xor
js
je
xor
in
pop
dec
or
aas
repz
push
mov
mov
popf
push
pop
jecxz
sbb
add
add
fmuls
imul
sbb
aad
xchg
scas
pop
in
loope
sbb
xlat
negl
das
iret
xchg
fcomps
lods
nop
mov
jno
leave
pop
das
leave
call
dec
loop
aam
call
fisttpl
add
nop
mov
mov
pop
jle
jecxz
out
fadds
add
mov
cmp
jns
sub
lret
into
cltd
jecxz
mov
jb
mov
dec
mov
xor
mov
lock
add
add
scas
out
test
subb
fcoms
sub
imull
lahf
rcrb
out
cmp
aaa
xor
stos
addl
add
outsb
mov
dec
lcall
jmp
lods
aam
cltd
in
cmpsb
sub
adc
ds
outsb
fisttpll
adc
add
shrl
add
outsl
mov
pop
cmpsb
into
add
add
add
mov
rcr
mov
add
add
or
add
add
jp
adc
out
enter
sbb
inc
add
add
or
add
add
data16
add
sub
add
add
add
add
sub
test
add
add
roll
add
push
mov
das
xchg
cmp
mov
inc
and
mov
mov
cmpsl
int3
mov
dec
jb
mov
jo
mov
int3
nop
shll
test
dec
mov
mov
sub
mov
and
outsl
add
cmp
clc
std
push
mov
clc
jge
adcb
int
push
call
add
jnp
push
add
add
add
fwait
xchg
dec
into
mov
mov
add
add
xor
ja
test
data16
std
aam
cmp
cmp
add
add
push
adc
dec
sbb
pop
push
mov
cmp
xchg
mov
loopne
stos
aam
lock
pop
jge
cmp
pop
mov
pushf
mov
add
add
add
add
or
xchg
adc
add
add
add
repz
scas
jg
leave
dec
jnp
mov
pop
xor
aas
adc
adc
add
mov
test
lret
xor
jns
inc
lock
push
outsb
jno
cmp
fsubl
cmpl
pop
push
pop
pusha
mov
ljmp
mov
pop
add
jecxz
adc
adc
add
add
orb
scas
add
xchg
mov
jecxz
adc
add
add
sub
add
jg
pop
outsb
jbe
loope
or
dec
add
add
pop
nop
pushf
ds
clc
mov
inc
clc
mov
mov
jns
call
push
fcomip
adc
leave
ljmp
imul
dec
add
add
scas
stc
pop
xchg
minsd
repnz
mov
pop
ror
mov
and
gs
lahf
or
add
add
jno
or
add
add
sub
into
jecxz
adc
cwtl
cmp
test
cli
sti
pop
fcomps
push
mov
movsl
scas
xchg
es
jbe
mov
sbb
movsb
int3
in
dec
lods
xor
test
adc
mov
dec
mov
sbb
test
add
repnz
out
mov
xchg
loopne
push
pop
push
mov
and
mov
lret
mov
xor
add
add
adc
add
nop
data16
sub
mov
push
stos
pusha
mov
add
add
add
add
add
cli
push
fnstsw
or
mov
test
sub
fcmovbe
mov
add
add
shl
sub
add
add
lods
mov
xchg
adc
push
aad
loop
and
inc
fst
sub
sub
addr16
in
fdivrs
cld
ficoms
jbe,pt
mov
mov
xor
xchg
icebp
xchg
out
push
leave
inc
out
xor
ds
mov
cmc
cmc
cmpsb
ljmp
add
push
inc
jbe
cwtl
lcall
iret
xor
ret
mov
lea
clc
inc
cmp
add
add
hlt
and
sub
sub
int
pop
test
in
mov
mov
mov
push
gs
mov
add
xchg
mov
pop
jl
jae
int3
and
add
add
daa
out
xchg
inc
add
add
sbb
jg
notl
pusha
add
add
mov
mov
xlat
repz
add
add
add
add
sbb
dec
jg
add
xor
dec
imul
int3
arpl
out
xchg
mov
xchg
out
pop
popf
push
mov
inc
adc
cmpsl
cmp
or
mov
add
push
int
scas
pushf
add
mov
add
mov
jnp
add
add
cmp
push
or
in
or
into
pop
or
mov
mov
pop
cmp
inc
nop
pop
movsl
and
push
fwait
loop
dec
aaa
lret
xchg
xchg
add
add
pop
push
jnp
stc
or
mov
jg
je
inc
mov
jno
psubsb
or
fdivl
out
ljmp
test
nop
cmp
push
mov
leave
cwtl
push
dec
les
mov
sub
cmc
jo
ret
sbbl
add
pop
inc
mov
xchg
mov
aad
lods
push
fidivrl
sbb
cmp
in
jge
imul
xlat
lods
mov
push
fcomi
dec
mov
shrb
cmc
shrl
mov
das
bound
add
add
pop
clc
roll
lock
cmp
fs
jge
mov
and
das
int3
xchg
cld
push
loop
pusha
mov
jp
movsl
outsl
iret
movsl
pop
jno
xchg
popa
cmpsl
lods
cmp
out
inc
add
add
arpl
mov
loopne
add
add
mov
mull
mov
cwtl
inc
fnsave
jg
dec
je
das
sbb
dec
or
add
ret
inc
adc
adc
call
add
add
int
imul
add
add
add
cmp
mov
sbb
call
push
push
out
jb
repz
stos
dec
mov
jecxz
push
and
add
add
add
add
sbb
and
test
cmpl
jae
cwtl
cld
xor
jbe
mov
dec
std
push
jp
ret
jns
mov
sub
lds
outsl
mov
je
mov
and
aaa
dec
mov
sub
rclb
out
xchg
data16
pop
out
jl
in
addr16
inc
mov
std
cmp
sub
add
add
in
lcall
xor
add
add
add
xchg
and
xor
sbb
ret
les
pop
fucomi
pop
adc
add
scas
imul
add
inc
mov
arpl
lret
mov
add
add
arpl
cld
sub
add
add
sahf
cli
push
jge
or
add
add
push
andb
popa
jl
enter
ja
jo
rcl
dec
add
cmp
pop
sub
add
add
stos
scas
push
inc
cmp
sub
add
add
mov
mov
inc
jno
mov
push
mov
sti
iret
pop
ret
mov
mull
lret
jae
jmp
popa
pop
shr
add
add
mov
push
xor
add
stos
pushf
cmp
add
inc
test
adc
test
cwtl
fsubrs
pop
lcall
sbb
sbb
es
and
rorb
add
sub
sub
mov
sub
or
mov
and
adc
mov
std
andl
add
pop
mov
hlt
mov
frstor
jno
mov
movsl
add
ljmp
add
xchg
mov
repz
add
add
push
mov
mov
and
pushf
lock
adc
add
add
dec
dec
sbb
push
nop
pop
int
and
add
add
loopne
imul
imul
pop
dec
lods
sub
push
or
mov
dec
mov
das
cmpl
add
add
add
add
push
mov
xchg
aas
addr16
popa
push
cmp
jge
jbe
mov
add
add
xor
and
mov
loopne
inc
mov
es
push
inc
sub
and
add
add
add
add
mov
push
out
pop
and
add
add
stos
xchg
add
add
daa
scas
fldl
mov
and
add
add
add
add
dec
xchg
push
add
add
cmp
rolb
mov
dec
dec
mov
sub
add
sbb
mov
add
add
xchg
sahf
ret
or
add
add
cwtl
stos
inc
mov
test
cmp
ja
pop
mov
mov
add
add
mov
outsb
and
add
add
ljmp
stos
shrl
loop
mov
xor
insl
loop
adc
pop
repz
rclb
push
cmpsb
cmovs
add
add
mov
add
rol
xchg
adc
cli
int3
lahf
pop
lcall
sti
push
cmp
add
or
js
cmpsl
dec
pop
and
test
movsb
jmp
mov
ja
xor
outsl
jnp
mov
rcl
clc
dec
mov
insl
shr
mov
add
movsl
int3
sbb
jns
aaa
xchg
xchg
push
outsl
mov
rcrb
mov
icebp
or
cmp
lds
pop
jecxz
mov
sbb
aam
mov
jmp
pop
cmpsl
popf
stos
sahf
aam
cs
cmpsl
sub
add
add
imul
xchg
inc
mov
aam
mov
push
in
fisttpl
mov
loope
inc
cmp
and
adc
push
ljmp
test
enter
in
mov
rcll
add
xchg
dec
test
ja
sub
add
add
push
test
addr16
add
add
add
scas
iret
negl
add
add
fidivrs
stos
andl
add
add
push
and
mov
fisubrl
mov
mov
adc
and
test
jle
ret
pop
aas
daa
jno
cmp
xor
mov
jo
stc
xor
add
add
mov
jmp
imul
sbb
xlat
sbb
sub
add
add
add
add
xchg
inc
add
add
add
aad
xlat
mov
ljmp
cwtl
insb
add
add
mov
add
test
incb
dec
add
add
and
add
add
test
add
add
fidivrs
aas
jno
adc
popa
dec
mov
push
in
sbb
add
add
xor
add
fsub
scas
inc
push
mov
push
out
xchg
sub
add
add
push
adc
add
push
fsubr
xor
and
add
add
push
dec
add
add
add
add
add
fistpl
es
call
jbe
inc
sbbl
add
add
adc
lds
xchg
sbb
into
sbb
sub
xchg
pusha
add
add
mov
xchg
rcll
test
test
add
jnp
adc
mov
add
add
aaa
pop
cli
les
mov
sub
add
add
add
add
mov
decb
push
sub
add
add
in
sub
jle
xchg
outsb
js
push
add
add
jnp
or
hlt
dec
xor
add
add
add
jns
inc
add
add
cmp
push
stos
xchg
push
fmull
add
add
xchg
fbld
lock
jge
pusha
add
add
stos
xor
mov
std
cltd
popf
outsb
cmp
cmovs
cmpsl
popf
sarb
adc
cmp
rorb
add
add
mov
or
hlt
xor
mov
pop
adc
cli
mov
sbb
mov
mov
mov
and
add
add
mov
cmp
pop
sub
fstpl
nop
push
xchg
jge
outsb
or
sbb
inc
aas
or
add
add
add
sahf
mov
or
add
add
insl
fcoml
cmp
aaa
push
sub
insl
mov
js
adc
and
add
add
xor
cmpsb
mov
fdivl
mov
add
std
fdivrs
outsb
fmul
push
push
into
andl
call
dec
add
add
test
punpcklbw
add
add
add
add
add
and
movsb
xchg
add
bnd
add
xor
stos
fs
inc
add
add
push
es
jg
inc
hlt
add
add
add
add
add
add
or
fidivrs
sbb
add
add
sub
jg
add
add
stos
test
dec
jecxz
fisubs
add
push
cmp
les
xchg
mov
jl
jmp
mov
inc
mov
cmp
and
mov
inc
xor
int
pop
mov
data16
adc
ret
dec
add
add
cmp
insl
in
int3
outsb
mov
rorb
push
jnp
movl
sbbb
add
add
add
adc
insl
imul
and
add
add
or
mov
and
int3
call
mov
pop
in
pop
cs
sbb
pop
dec
ror
cmpsl
or
mov
add
add
or
jecxz
sbb
sub
loop
mov
popf
int
xchg
nop
sub
and
add
add
mov
mov
jnp
mov
inc
add
add
add
sahf
add
add
xchg
addr16
cmpsl
mov
cli
addb
xchg
sahf
fiadds
add
and
out
jae
iret
pop
and
dec
sbbb
add
ds
aam
mov
push
sub
cmp
inc
mov
jecxz
cmpsl
idivb
cmc
adc
mov
dec
aaa
push
adc
test
pop
push
ljmp
push
dec
cwtl
and
add
add
add
dec
sub
add
add
out
add
add
movsl
stos
daa
adc
es
daa
sub
packssdw
jno
mov
int3
push
je
and
int
add
mov
fwait
sub
ss
push
outsl
add
sub
add
add
scas
leave
imul
mov
sbb
xor
mov
xor
aaa
into
cwtl
cli
fidivs
loop
lahf
jae
or
add
stos
loop
imul
bswap
sbbl
add
add
ss
jge
and
enter
stc
cltd
sub
or
xchg
leave
aam
vphadddq
or
inc
mov
add
add
add
ljmp
mov
add
push
push
faddl
xchg
inc
outsl
insl
rolb
rcrl
xchg
add
add
inc
and
dec
jecxz
jl
aaa
test
das
pop
push
add
add
add
data16
cmp
movsb
call
xor
js
dec
out
adc
add
add
imul
add
jns
xchg
dec
add
add
lods
sub
add
add
in
add
mov
inc
mov
mov
ljmp
mov
mov
sarl
int
sub
ja
pop
test
xchg
cli
sbb
pushw
negb
mov
mov
mov
lret
pop
out
aam
test
cld
push
pop
jae
mov
dec
or
outsb
push
add
add
push
push
mov
add
add
add
sti
and
or
data16
cmp
cltd
mov
add
ret
orb
sbb
roll
mov
inc
loope
jns
cs
fs
fistps
movsb
fcmovb
rclb
sbb
add
add
add
mov
mov
inc
mov
push
mov
push
xor
xchg
sbb
gs
lods
jmp
dec
test
push
cs
jp
dec
loope
sti
inc
in
xlat
xor
mov
push
lret
fwait
sahf
shlb
test
adc
fdivs
fs
push
es
loopne
xchg
sbb
rcr
adc
stos
ret
repz
movsb
popa
mov
lret
jmp
add
add
cmp
cmp
ljmp
cld
sub
add
add
add
mov
pop
mov
add
add
add
jno
add
add
imul
mov
add
push
test
add
bswap
in
add
add
push
pop
inc
mov
outsl
xchg
jo
add
add
pop
rolb
dec
jecxz
sbb
loope
fdivl
cmp
jmp
jp
loopne
sub
mov
sarl
xchg
mov
lret
lods
jno
sub
add
add
fst
xchg
jno
mov
push
add
add
test
stos
jne
sub
add
add
popa
inc
jnp
insl
mov
mov
mov
and
mov
push
push
xor
cwtl
cld
pop
xchg
fnstenv
add
xor
loop
mov
sub
aaa
shlb
add
cmp
imul
xchg
add
mov
xor
add
mov
add
add
add
sbbl
push
jecxz
cmc
jge
jge
add
add
aaa
je
xor
movsl
imul
imul
adc
ret
fs
and
pop
mov
call
mov
sub
add
add
sbb
add
movsl
dec
cwtl
inc
add
add
pop
xchg
pop
in
test
cmp
sub
cmp
lods
cmp
mov
fldenv
xlat
jp
aas
xor
pop
sub
out
xchg
add
cmp
bound
mov
jb
lea
add
add
add
add
in
xor
mov
div
xor
and
mov
adc
enter
lea
dec
xchg
mov
fwait
push
inc
add
add
pop
push
xchg
mov
cmc
jbe
nop
dec
stc
sub
ja
and
mov
jnp
xor
add
pop
mov
popa
push
call
std
out
sbb
add
ds
mov
lahf
inc
rolb
aam
out
lea
mov
mov
repz
cmp
mov
jp
imul
add
add
add
jo
sub
sbb
add
add
enter
add
add
mov
xchg
mov
ljmp
add
fnsave
into
mov
leave
inc
adc
sub
add
add
add
cmp
movnti
push
in
xchg
sbb
pop
clc
ret
std
cmc
ret
lds
inc
ss
or
add
add
add
jg
xchg
or
add
add
mov
add
mov
xchg
mov
sbb
loop
icebp
cs
fisubs
dec
mov
scas
int
lahf
cwtl
push
fwait
pop
repnz
mov
cmpsl
inc
add
add
ret
out
movsl
pop
and
fimuls
rcrb
adc
pop
adc
or
push
sub
add
add
fwait
xor
mov
mov
push
mov
mov
mov
add
mov
pusha
add
add
xchg
pop
adc
arpl
add
pop
icebp
arpl
arpl
xchg
sub
lahf
mov
xchg
dec
add
add
cwtl
xchg
data16
adc
rolb
xorl
mov
imul
outsl
jle
mov
cmpsb
lods
mov
mov
jmp
jecxz
cld
ret
in
je
mov
pop
imul
cmpsl
xor
repnz
das
xchg
movsl
or
in
in
out
in
sub
add
aaa
in
test
mov
add
pop
jmp
cmp
dec
cmp
mov
add
pusha
add
add
lret
shrb
add
xchg
mov
mov
add
cs
xchg
or
dec
add
add
leave
insl
mov
cmp
xchg
sub
add
mov
inc
xchg
sub
mov
mov
fidivrl
lea
add
mov
and
in
inc
mov
popa
scas
jge
xchg
shrl
das
addr16
inc
inc
add
into
popf
add
mov
aad
mov
in
std
add
jmp
daa
jmp
or
incl
pop
pushf
cmp
inc
pop
fscale
xchg
sar
xchg
dec
jo
and
and
xchg
push
push
fadds
push
loope
test
lock
lea
jmp
mov
ret
popf
leave
scas
inc
and
ret
lods
pop
test
jno
mov
bswap
sahf
icebp
xor
je
loopne
add
inc
test
or
shll
mov
loope
inc
nop
lret
add
cltd
test
test
fsubrl
add
add
shll
fs
scas
icebp
sub
jno
and
out
sub
mov
test
ret
sub
add
add
imul
jmp
inc
imul
add
adc
pop
mov
mov
scas
add
fidivl
xor
nop
gs
cmp
out
jecxz
xchg
gs
outsb
pop
add
add
mov
pop
fiaddl
pop
or
mov
or
cmp
add
add
icebp
scas
fstps
in
sbb
add
add
mov
adc
mov
loopne
jo
add
mov
mov
mov
mov
call
fidivl
pop
andb
enter
add
lods
jl
sti
in
cli
call
push
pop
push
and
int3
sub
dec
add
add
jo
mov
mov
out
jne
cltd
cmp
xchg
add
add
mov
mov
add
add
xlat
sbb
push
rcrl
pushw
arpl
and
aad
std
mov
jmp
add
add
pop
and
mov
xchg
add
data16
cmp
ljmp
nop
and
mov
add
sub
bound
movsb
pushf
gs
add
add
xchg
and
add
add
das
mov
mov
rcrb
add
add
xchg
sub
add
add
vandnpd
movsl
or
jnp
sbb
push
and
cvtdq2ps
test
xor
test
add
mov
add
add
lea
or
or
add
add
shl
mov
rol
fimuls
shrl
in
fwait
push
pop
enter
dec
mov
mov
mov
add
std
lret
insl
cwtl
outsb
xor
mov
jg
xchg
push
fsts
iret
push
pop
es
dec
mov
mov
cmpsl
push
xchg
sbb
mov
inc
mov
push
pop
sarl
test
or
rol
lods
lahf
pop
shrb
pop
jns
mov
and
add
add
add
pop
and
scas
xchg
test
mov
scas
jnp
adc
cmpsb
insl
push
inc
cltd
gs
ror
out
popf
and
add
add
cli
mov
add
add
lock
fsubr
dec
sub
mov
inc
add
add
mov
dec
cmp
sbb
test
xor
cmp
cmp
cmpsb
gs
call
daa
add
add
or
mov
add
add
dec
mov
jbe
orb
fucomi
sbb
vshufps
ret
and
inc
xor
jnp
cmp
mov
movb
stos
icebp
xchg
lcall
or
pop
inc
daa
dec
int
fistps
push
lret
inc
scas
pop
arpl
fldcw
pushf
fs
xchg
sub
or
shlb
lds
jne
xor
test
dec
adc
sub
sar
mov
mov
mov
jle
sbb
mov
add
mov
mov
faddp
bound
sub
bound
fdivrl
int
mov
repz
rclb
jbe
imul
sbb
cmpsb
sub
mov
fwait
xor
faddl
mov
jecxz
clc
inc
jl
sub
push
outsl
add
rol
ret
jo
adc
dec
in
stos
lret
sti
xchg
add
rorb
adc
adc
jle
xor
vcvtsi2ss
sbb
cli
mov
or
and
jae
mov
jg
adc
lret
pop
dec
lret
aas
dec
sub
cld
jno
inc
repz
rolb
add
jo
rclb
inc
or
test
ja
nop
loope
sbb
andb
popf
xor
je
shll
and
ja
fdecstp
push
xor
add
inc
fnsave
cs
mov
iret
outsl
gs
dec
popf
xchg
ret
scas
out
pushf
push
jnp
add
adc
cmp
imul
fistps
jmp
incl
pop
test
fdivr
xor
xchg
add
jl
xchg
jo
aas
stos
fiadds
mov
push
mov
add
dec
add
add
popa
mov
insl
negl
mov
and
mov
add
push
cli
icebp
push
or
gs
fs
aad
push
cmp
xor
pop
cmp
xor
add
add
in
inc
or
add
add
inc
pop
hlt
sub
fstps
add
add
add
in
push
test
jle
xchg
mov
add
add
add
and
jle
int3
int
sbbl
test
pop
fidivl
mov
jp
sub
fmull
out
add
add
scas
inc
cmp
out
pop
je
mov
mov
xchg
sub
add
add
test
popa
jae
mov
aad
mov
sub
pop
or
pop
and
in
loop
repnz
cmp
add
dec
jl
mov
or
pop
sub
add
add
sub
ljmp
lret
in
push
icebp
test
mov
mov
cld
dec
xchg
mov
add
add
mov
les
push
pop
cmp
ljmp
add
add
add
push
jge
in
out
or
add
add
add
in
daa
loopne
sub
inc
int
xchg
xchg
and
mov
loope
and
add
add
mov
pusha
mov
cmp
add
scas
lret
outsl
pop
cltd
outsb
add
aam
in
cmp
ror
ret
pop
fistps
and
add
add
subl
lret
inc
mov
add
add
add
jne
test
dec
cwtl
mov
add
add
xchg
sub
mov
hlt
popa
sbb
mov
add
add
push
cwtl
fdiv
cmp
mov
mov
cmp
inc
jb
xor
lds
hlt
lds
mov
add
add
jmp
cmpb
mov
add
cwtl
push
daa
jecxz
fidivl
mov
xchg
imull
or
add
add
gs
clc
lcall
leave
in
cmp
add
insl
mov
jl
mov
mov
mov
push
jno
clc
mov
sbb
in
adc
add
add
shlb
out
mov
xchg
int
mov
add
fs
sub
mov
push
mov
or
cmpl
int3
or
jne
in
loop
dec
add
add
push
stc
aas
mov
mov
loopne
ljmp
test
add
out
pop
ficomps
add
add
js
popa
ljmp
cwtl
aaa
lds
add
add
mov
add
add
add
ss
stos
cltd
dec
mov
pop
sub
hlt
int3
and
add
add
lea
stos
jp
cmp
iret
and
add
add
mov
leave
mov
mov
xor
xor
push
fs
cmp
mov
push
shrl
test
out
push
arpl
xchg
mov
xchg
test
pushl
rorb
pop
pop
push
sub
aaa
xlat
repnz
clc
mov
repz
xchg
mov
inc
mov
dec
push
aas
into
sub
add
add
cmpsl
or
add
add
int3
mov
lea
jl
jge
sub
adc
add
add
add
ja
shll
inc
sub
add
std
enter
jp
mov
js
jae
xor
adc
hlt
mov
icebp
mull
add
add
into
outsl
add
push
jns
xlat
push
jbe
push
rcll
cli
aad
sahf
repnz
lea
lea
sbb
xchg
imul
dec
mov
xchg
adc
pop
inc
push
adc
mov
into
xor
sbb
movsb
mov
and
xor
cmp
sbb
ss
cmp
mov
sub
lcall
inc
cmp
and
add
sbb
faddl
je
stc
or
jle
subl
shll
add
mov
add
pushl
add
add
add
cmp
mov
jnp
jle
mov
out
jle
lea
or
add
add
jae
xchg
stc
dec
add
add
movsb
imul
pusha
mov
cmp
iret
mov
pop
outsl
loop
jns
dec
mov
jbe
clc
add
add
add
add
add
cmp
insb
mov
push
mov
dec
pushf
sbb
push
push
sbb
movsb
xchg
aaa
sbb
xchg
adc
and
mov
xlat
sahf
sbb
dec
adc
inc
add
add
stc
add
add
add
pop
lods
scas
ss
nop
shlb
popa
and
outsb
dec
add
add
add
push
fs
ret
mov
jae
mov
imulb
sbb
mov
dec
out
loopne
sahf
sub
add
add
jge
lret
shl
in
add
outsb
lret
stos
stos
sub
pop
lods
xchg
repnz
mov
mov
pop
mov
push
mov
aaa
fisubrs
add
test
inc
pop
js
test
lret
jmp
loopne
mov
repnz
push
mov
jnp
lock
jmp
rclb
in
or
add
add
and
jo
cmp
xchg
mov
dec
add
add
inc
mov
fcompl
into
pop
ret
popf
fst
push
cmp
lock
fdiv
imul
int3
icebp
and
add
add
shll
mov
or
xchg
leave
ljmp
sub
add
add
mov
inc
iret
xchg
imul
add
pop
das
mov
lods
shlb
lcall
insb
add
add
xchg
xchg
push
inc
aad
pushl
sbb
add
add
aam
addb
jno
add
add
mov
mov
add
add
pop
insb
add
add
mov
and
add
aaa
sarb
sub
xchg
clc
adc
jnp
add
add
loopne
jns
lods
pop
mov
add
mov
cs
xchg
addr16
ds
bound
mull
add
add
js
hlt
sub
pop
mov
add
add
push
arpl
dec
test
add
mov
add
add
xor
mov
sti
ret
repz
pop
data16
xchg
aam
mov
js
ljmp
mov
adc
push
sub
push
push
lods
push
iret
cmpsl
aas
movsl
fistpl
outsb
or
in
mov
or
add
add
test
mov
add
add
xor
neg
loop
lret
jne
mov
imul
add
add
push
push
nop
push
loope
stos
cli
and
add
add
loope
into
push
gs
pop
das
loopne
test
add
pop
jge
call
add
add
sub
test
jge
repnz
cmp
inc
cmc
das
or
add
push
mov
mov
pop
insl
out
jno
add
add
add
add
jg
in
gs
imul
lcall
mov
mov
jg
outsb
sbb
insb
add
add
add
add
add
pop
shll
sbb
fcmovnu
movsb
and
test
xchg
imul
add
add
xchg
add
add
add
stos
and
das
jae
repz
mov
and
sbb
out
mov
pop
add
rorb
add
rorl
add
xchg
jbe
jle
iret
movsl
rclb
rcrb
xor
lret
popa
popf
inc
xor
add
and
add
add
add
add
into
aaa
aam
into
pop
mov
shl
or
adc
jo
icebp
inc
mov
push
xor
ss
call
nop
or
add
add
add
add
cmpsb
jns
mov
popa
xchg
push
cmp
idivl
xchg
je
cmp
mov
fsubrs
add
add
loop
mov
push
or
repz
push
mov
xchg
mov
add
insl
mov
ds
adc
add
add
int3
jnp
and
add
add
adcl
aaa
or
lret
dec
push
mov
mov
add
add
xor
vorps
or
mov
xchg
mov
lcall
out
mov
rcrb
in
ss
mov
jne
movsl
or
ss
icebp
adc
inc
notb
popf
int
int3
popf
mov
mov
mov
add
std
add
add
add
mov
dec
out
mov
ss
cs
or
addb
out
sbb
xor
lock
add
add
out
or
add
add
movsl
mov
inc
fadd
loop
add
add
movsb
daa
adc
pop
adcl
lock
cmp
gs
add
add
add
sub
gs
jo
gs
aad
mov
dec
cld
cmp
into
fnsave
mov
add
add
mov
mov
enter
sub
add
add
add
xchg
jp
mov
enter
pop
hlt
xchg
fisubs
xor
add
in
push
sbb
adc
movsl
push
adc
add
add
add
cld
paddsw
in
mov
sbbl
mov
mov
mov
neg
add
adc
int
fnstcw
out
mov
icebp
dec
push
rcrb
sahf
int3
test
fmuls
scas
cmpsl
addb
add
in
dec
jnp
mov
arpl
mov
xor
add
pop
loope
inc
out
or
sub
sub
shrl
dec
push
xchg
lds
mov
sbb
cltd
lretw
ds
scas
and
inc
push
imul
popf
mov
cltd
mov
push
jb
jnp
out
and
inc
mov
pop
dec
je
je
aaa
jl
dec
sbb
insl
jae
add
add
and
ds
mov
lcall
into
fcomps
push
testl
add
icebp
mov
lret
push
mov
and
adc
and
add
add
pop
lea
aaa
lret
std
popa
cmpsb
cwtl
sbb
mov
mov
push
mov
dec
jle
popf
xchg
loop
ret
js
ds
imul
in
sub
add
add
add
add
cmp
testb
add
add
cld
or
add
add
ffree
ss
sbb
dec
jns
sarl
dec
rcrb
add
aad
inc
fiadds
add
add
xchg
and
inc
xor
ror
or
loope
icebp
cmp
outsl
and
or
add
add
xor
add
into
mov
push
jb
mov
sub
add
add
loopne
mov
jecxz
xor
loopne
int3
scas
xchg
adc
add
out
das
lcall
and
mov
in
inc
xchg
sbb
fwait
xchg
xchg
add
add
mov
add
add
add
arpl
inc
mov
shrl
inc
sahf
dec
add
add
mov
push
mov
cmp
xchg
pop
into
cli
mov
and
add
add
xchg
lds
xor
call
popa
repnz
add
push
sbb
xorb
add
add
pop
xor
repnz
shrb
cwtl
push
sbb
mov
dec
inc
cli
push
and
add
add
jp
pop
and
in
rorb
fwait
lret
mov
xor
sahf
push
icebp
push
mov
jae
fneni(8087
jp
idivb
push
or
add
add
add
add
mov
or
out
cld
into
jmp
and
sub
adc
add
hlt
lret
cmp
mov
dec
pop
mulb
dec
lret
dec
xor
cltd
mov
int3
popa
xor
in
xchg
and
mov
lahf
cmp
add
add
pop
shlb
aas
push
push
cld
jmp
loopne
test
xchg
mov
add
add
jmp
push
inc
inc
jg
jle
mov
lods
pop
jns
or
stc
outsb
xchg
adc
push
icebp
fdivrs
mov
xchg
subl
xchg
inc
xchg
pop
dec
mov
xlat
mov
sbb
dec
pop
xor
mov
mov
ljmp
mov
cmpsl
sub
add
add
add
or
add
add
pusha
add
add
inc
mov
jecxz
adc
popa
lea
sub
test
out
nop
lock
mov
xchg
mov
push
fcoms
arpl
add
mov
add
rcr
or
dec
add
add
ret
mov
mov
mov
imul
jl
jle
and
mov
pop
inc
cmp
mov
adcb
pop
jae
lea
add
add
or
add
add
xchg
and
add
add
mov
mov
fs
in
fucomip
xchg
imul
sbb
xor
lock
mov
addr16
adc
mov
cmpsl
inc
lods
sbb
es
sbb
sub
add
jae
or
cltd
dec
cmpsb
pop
shl
xorl
nop
xor
dec
fs
test
stos
aaa
push
inc
popf
in
lret
adc
add
add
cmp
xchg
dec
mov
mov
mov
pusha
add
add
push
clc
scas
inc
sti
mov
ror
iret
testb
mov
adc
add
mov
cmp
add
jmp
add
jmp
add
addr16
add
inc
ljmp
cmp
xor
loopne
push
stc
jae
orb
add
lds
mov
inc
add
add
mov
mov
sub
add
add
fcompl
mov
gs
lock
les
notl
pop
adc
rorl
das
lret
mov
call
mov
jg
and
bound
add
jmp
jle
stos
dec
push
stos
outsl
xchg
movsl
dec
pop
xor
dec
mov
mov
mov
dec
fisttpl
sbb
ljmp
add
jmp
pop
push
or
add
add
mov
jno
dec
test
add
add
je
and
pop
aaa
xor
or
dec
push
std
das
pop
outsl
pop
and
add
fmul
pop
out
std
push
lea
pop
stos
aad
jp
popa
sub
add
add
jne
cs
push
jge
dec
mov
stc
jae
add
add
mov
add
add
hlt
test
xchg
mov
movsl
in
sbb
add
add
clc
scas
les
mov
subl
add
cs
inc
les
dec
xorl
frstor
rorb
add
cmp
cmp
lahf
sbb
rorb
jbe
pop
mov
cwtl
js
add
add
push
iret
lods
sub
dec
inc
gs
out
jne
push
mov
add
xchg
sti
xor
cmpb
aaa
push
and
insl
inc
mov
mov
stos
jecxz
cmc
fiadds
jno
in
insb
mov
inc
gs
xlat
adc
add
xchg
mov
adc
outsl
pop
fidivl
mov
xchg
cmp
fldt
movsb
mov
daa
xchg
dec
add
add
mov
xchg
xchg
cmpsl
xchg
mov
adc
and
jno
inc
mov
shr
xchg
adc
jae
pop
test
add
and
add
add
xlat
inc
mov
das
int3
mov
lret
inc
add
add
xchg
sbb
ja
sbb
mov
rorl
insb
add
add
test
imul
test
jbe
or
add
add
add
push
sarb
sub
fst
jne
test
mov
pop
xor
imul
js
shlb
mov
xor
sbb
movb
add
add
shl
test
mov
mov
push
sub
add
add
mov
gs
lods
aaa
lcall
sub
mov
jg
jnp
inc
lret
add
add
xchg
nop
adcb
jae
mov
inc
lods
lods
lea
lock
insb
add
add
inc
xchg
and
push
mov
or
add
add
mov
push
jae
das
jae
in
lret
mov
add
or
lds
add
add
mov
add
push
fs
cmp
mov
scas
lret
out
rcll
mov
xorb
lods
int
xchg
int
mov
add
or
pop
sbb
jmp
pop
mov
cmp
imul
inc
lcall
ret
and
add
add
cwtl
xchg
or
out
mov
add
add
sub
add
add
mov
aam
pop
or
add
add
mov
jbe
sub
add
add
push
inc
push
out
imul
hlt
imul
inc
and
lock
add
add
cwtl
addb
loop
inc
test
sbb
bound
mov
add
lods
adc
repnz
jne
int
add
add
adc
and
xchg
popf
cli
mov
idivb
in
lret
ret
sbb
stc
mov
nop
pop
out
fimull
or
add
add
lret
std
rcll
add
lock
sub
test
push
test
add
add
clc
mov
add
dec
mov
test
cs
adc
cmp
pop
jl
cmc
test
mov
dec
xchg
pop
adc
or
add
add
pop
cmpsl
aas
out
ror
imul
pusha
mov
lock
add
add
add
cmp
dec
imul
scas
pop
xor
jne
xor
cmp
cmp
pop
xchg
daa
or
add
add
add
ds
mov
and
cwtl
or
lods
fwait
and
mov
mov
push
xchg
inc
mov
add
add
in
fdivs
add
add
push
test
jg
imul
cmpsb
cmp
cmp
add
cs
stc
fmuls
add
add
aad
pop
std
out
push
and
add
add
add
add
mov
scas
inc
add
add
pop
out
ljmp
add
add
das
lea
inc
jno
cs
es
stos
cltd
mov
push
xchg
or
push
jne
pop
inc
clc
mov
sahf
jne
lcall
ss
lock
fcompl
pop
bound
movsl
and
jnp
xlat
jmp
lret
pop
scas
mov
test
pop
and
mov
jle
cmp
add
add
mov
push
in
pop
lcall
jle
or
sub
add
add
xchg
xor
out
int3
lcall
dec
cmc
ret
movsb
out
jns
adc
rolb
push
movsl
inc
mov
sbbl
mov
jns
jecxz
mov
add
add
adc
xor
enter
xor
mov
andl
jae
pop
add
push
mov
pop
jecxz
xchg
jle
dec
push
cltd
jp
mov
xor
add
add
add
pop
sarl
loopne
mov
mov
in
or
add
add
repnz
call
outsb
xor
pop
add
sub
or
outsb
inc
ljmp
or
add
add
hlt
cmp
add
aam
mov
adc
jg
lahf
pop
shr
cmp
mov
xor
shll
add
add
add
add
add
add
cmpsb
popa
cmp
add
add
in
test
out
scas
pop
orl
add
add
sub
add
add
adc
dec
mov
out
xchg
addl
cmc
sbb
add
add
add
add
add
pop
rcll
pop
mov
mov
or
add
add
rol
sub
mov
mov
xor
add
sbb
cmpb
add
mov
dec
push
mov
or
xchg
sub
add
add
clc
mov
add
add
sbb
add
add
cld
test
jl
add
ds
enter
cmp
pop
sbb
pop
adc
mov
inc
add
add
mov
daa
pop
xor
push
mov
jmp
in
jne
fiaddl
add
add
sbb
jmp
cmp
add
xchg
jecxz
adcl
jne
push
les
add
add
cmp
xor
imul
inc
mov
push
mov
fldl
test
sbb
dec
add
push
pop
cmp
enter
cmp
add
add
sti
mov
pop
dec
cltd
bound
mov
sub
add
add
add
jne
jp
fs
mov
jp
xchg
je
lods
xor
imul
inc
add
add
movsb
pop
lcall
out
pop
or
cld
hlt
push
push
push
sub
mov
inc
dec
fldl2e
inc
mov
mov
push
out
jb
mov
ja
outsl
ret
push
xor
add
add
cmp
add
add
add
push
int3
sub
add
add
lret
lcall
sbb
adc
jmp
mov
or
add
add
ficompl
jb
and
push
lahf
testb
push
mov
popa
inc
mov
movsb
inc
mov
ja
dec
add
add
inc
int
mov
pushf
cmp
pop
mov
fcom
jp
mov
mov
arpl
out
es
jl
loope
ficoms
loope
dec
cmp
or
pushf
cmp
sub
mov
sbb
mov
jno
pop
jno
sub
ret
test
xchg
ret
xchg
test
dec
inc
clc
jecxz
inc
jns
mov
es
add
xor
in
add
add
movb
push
adc
add
add
sahf
push
xor
sbb
ljmp
sbb
rep
sbb
xlat
xor
inc
inc
orl
lret
jecxz
negb
lahf
push
xchg
xlat
or
sbb
fidivrl
mov
cmp
leave
popf
sbb
repz
mov
orl
in
out
lret
jns
mov
add
add
and
sbb
mov
mov
shrl
sarl
mov
je
inc
aaa
jmp
sahf
mov
add
dec
xchg
mov
or
mov
inc
mov
pop
daa
inc
jp
enter
add
shlb
pop
aam
add
add
aas
mov
mov
add
add
cli
ljmp
xchg
dec
pop
xlat
mov
cwtl
in
fstl
jns
cmp
jo
arpl
xchg
push
imul
add
add
pop
mov
jno
and
orl
push
mov
outsb
xor
pop
or
xor
loope
sub
inc
cltd
add
mov
xchg
enter
in
into
adc
add
add
pop
push
xorl
inc
add
add
inc
xchg
lds
mov
jne
insb
add
add
xor
fisttpll
add
add
fnstsw
mov
mov
push
pop
outsb
dec
add
add
adc
cs
mov
push
jo
inc
and
aam
cmp
lea
add
add
mov
mov
sub
add
add
xchg
jge
cmp
hlt
push
insl
fldenv
push
ljmp
add
xchg
or
jl
test
cmp
sub
lea
stos
inc
lcall
fsub
and
pop
shlb
add
add
sbb
les
test
add
add
gs
and
add
add
jl
test
or
xchg
and
lahf
and
lock
sbb
mov
ficoms
test
add
add
es
test
fldpi
jmp
hlt
mov
sub
in
sub
xlat
shll
add
out
orl
cmp
faddp
inc
stos
imul
add
mov
sub
or
outsb
das
fcmovnu
in
ljmp
filds
add
aam
xchg
scas
inc
mov
or
add
add
jl
add
mov
fwait
cmp
out
mov
inc
mov
jns
inc
movsb
leave
fcomi
insb
mov
push
cmc
addb
ljmp
mov
dec
or
lock
loope
xor
out
sti
mov
ds
jns
sbb
lock
xchg
imul
adc
jecxz
in
add
add
cmp
scas
shlb
and
imul
add
sbb
add
in
mov
xchg
xor
and
push
incl
xor
add
add
mov
dec
xor
scas
and
add
add
mov
jb
pop
sub
add
add
scas
dec
jecxz
and
rcll
mov
xchg
div
cld
leave
fdivrs
or
jle
jmp
add
data16
test
or
mov
je
mov
xor
jno,pt
adc
add
add
jb
xor
dec
jns
add
add
enter
add
add
mov
and
outsl
or
iret
repnz
mov
jmp
adc
fs
adc
add
add
mov
adc
daa
push
fsubs
add
jne
cmpsl
cmpsl
xchg
sub
xchg
sbb
jmp
faddl
push
push
mov
inc
and
nop
xchg
in
push
add
add
enter
nop
lret
jo
out
dec
clc
aam
jb
sub
add
add
add
push
enter
rcr
jne
imull
mov
inc
jmp
xchg
push
mov
add
fildl
add
sbb
xor
dec
add
add
inc
add
add
add
cmc
outsl
or
imul
fwait
sub
in
icebp
sarl
vpsllw
inc
or
cmc
cld
cmp
add
add
fists
push
push
dec
mov
subb
mov
out
adc
jne
loope
lock
out
stos
aam
daa
testb
push
jge
jo
or
and
xchg
inc
push
and
jnp
arpl
pop
cmpsb
dec
mov
mov
mov
pop
mov
sti
sti
jne
push
dec
vsqrtsd
sbb
int3
or
add
add
mov
xchg
pushf
dec
add
add
add
jmp
mov
notl
sub
add
xchg
add
add
add
add
pop
inc
mov
pop
sbb
add
jge
sahf
xchg
add
add
mov
stc
rcrb
mov
int3
popf
fstp
pop
test
dec
mov
xchg
mov
dec
mov
mov
shl
pop
bound
push
nop
fbld
dec
jo
add
add
push
mov
gs
sarb
loop
pop
into
jle
jno
mov
mov
add
add
add
add
add
mov
add
add
adc
add
add
jge
clc
xor
mov
jb
xor
xor
fsts
xlat
sbb
lea
pop
xchg
mov
jl,pn
mov
ds
add
add
inc
add
add
inc
add
add
push
add
ja
mov
sbb
add
dec
fdivrp
imul
cmp
pop
dec
mov
add
add
add
add
cwtl
pop
cs
dec
add
add
mov
mov
pop
test
add
add
rcrl
les
test
add
lods
lret
aas
or
lret
or
mov
rcl
lcall
je
sti
int
push
stos
out
hlt
cmp
jo
dec
add
add
and
add
add
scas
movsl
test
daa
xchg
in
pop
mov
out
js
push
adc
fwait
insb
add
add
mov
orb
idivl
pop
jb
xchg
push
cmp
add
and
mov
movb
add
jecxz
add
add
add
sub
add
add
jne
lods
push
jne
je
insb
mov
cwtl
push
sbb
pop
mov
insb
add
add
jle
mov
or
sub
add
add
mov
pop
add
pushf
dec
pop
mov
std
ja
xor
sahf
nop
pop
stc
adc
inc
nop
nop
sbb
add
dec
sarl
jge
popa
add
and
cmp
jle
aad
repnz
fwait
dec
cmpsb
xchg
push
pop
dec
adcb
std
mov
pop
sub
xchg
push
outsb
dec
mov
adc
add
add
mov
sbb
enter
pop
xorl
adc
xor
mov
arpl
sub
mov
cmp
cmp
pop
ret
cmp
jno
movsb
mov
push
ds
negl
iret
add
add
add
xor
inc
fisttps
add
add
add
inc
add
add
cmpb
push
xchg
sub
add
add
test
jl
mov
das
sbb
in
mov
jb
xor
fdivl
xchg
pop
mov
push
push
push
clc
lahf
ja
dec
xchg
fisubs
icebp
jae
lret
outsb
pop
or
cmc
popf
sub
add
add
mov
xor
dec
fcmovnb
mov
fistl
fadds
adc
mov
outsl
adc
xor
mov
fstp
xchg
cmpsb
pop
iret
xor
aaa
test
add
pop
mov
jg
jle
pop
mov
xlat
or
fnsave
mov
aaa
and
int
xchg
je
std
fnstcw
in
mov
stos
dec
add
add
push
jbe
js
fistpll
mov
inc
sub
repz
adc
insb
mov
cmovl
add
add
cltd
cli
jnp
aam
and
sbbb
sbbl
push
aas
iret
fmull
in
mov
popa
xchg
test
inc
add
add
loop
add
add
add
cltd
adc
ljmp
pop
jecxz
dec
pop
adc
add
add
add
add
adc
inc
aas
dec
testb
lds
push
pop
mov
mov
xchg
xchg
shrb
les
add
add
outsb
add
add
add
add
push
les
loope
test
ficoml
pop
push
out
jnp
pushf
mov
int3
filds
or
pop
lods
ds
pop
out
cmp
jg
add
mov
and
add
add
leavew
dec
add
add
cmpsb
mov
add
push
lcall
jp
and
add
add
add
add
add
xchg
js
adc
pop
leave
xchg
sti
outsb
int
push
dec
add
add
add
add
add
push
lret
popa
ret
mov
add
pushw
pop
sbb
jo
pop
cwtl
inc
rcrb
pop
stc
test
add
cmp
or
lcall
xchg
test
adc
add
add
push
aaa
ret
sbb
add
add
ljmp
inc
push
jg
push
pop
mov
cmpsb
ja
add
add
gs
push
inc
jl
add
add
add
adc
mov
cmpsb
into
mov
data16
xchg
cmp
add
add
les
pop
inc
add
hlt
xchg
lods
daa
dec
add
add
jmp
push
insb
mov
adc
jecxz
das
out
cmpsl
xor
mov
jne
mov
adc
pop
stos
or
arpl
add
popf
inc
adc
std
and
add
add
cmp
ljmp
add
fprem
pop
movsl
movsl
int3
inc
je
add
add
mov
loope
out
adc
mov
mov
sbb
lret
out
mov
xlat
jg
into
rcl
adc
cmpsl
mov
mov
cld
ret
mov
mov
add
dec
dec
jp
add
add
jae
sub
inc
clc
and
add
stc
jg
int
fsubrl
lea
xchg
cli
xchg
push
adcl
dec
add
add
inc
push
xchg
mov
jns
xor
mov
push
dec
jne
cmpsl
adc
add
add
xchg
mov
movsb
in
mov
mov
test
or
addr16
lock
add
add
fisubl
test
jge
out
mov
or
add
add
shl
sub
lahf
lea
add
cmp
das
in
sbb
pusha
add
add
out
je
cmpsb
bnd
add
add
pop
fdiv
and
jbe
mov
icebp
jae
leave
jge
dec
mov
mov
sub
cs
ss
cmp
add
add
inc
push
cli
mov
add
add
dec
mov
lock
push
add
dec
add
add
shrb
add
add
inc
enter
jl
pop
dec
push
fisubrs
add
sbb
add
rorb
push
gs
iret
ret
popa
xchg
mov
xchg
xor
ja
dec
mov
xchg
rorb
add
fdivrs
jb
lcall
pop
cmp
mov
add
add
adc
subb
add
add
scas
pop
mov
cmp
add
add
sub
incb
fdivr
ljmp
add
add
jmp
xchg
jno
and
add
add
add
add
jbe
sbb
repz
sbb
mov
fmull
cmpsl
jl
ss
and
ret
xlat
cmp
mov
inc
shlb
sar
sti
or
add
add
fisubs
add
add
icebp
insl
xor
adc
dec
sbb
je
jo,pn
sbb
test
fistps
fdivl
popf
sub
push
jae
add
add
jno
mov
add
daa
adc
sbb
cs
subb
push
pop
jg
inc
out
jle
mov
in
jecxz
mov
fwait
and
add
add
mov
pop
mov
pop
jnp
daa
adc
sarl
test
xchg
cli
jbe
popf
pop
jne
shrb
or
dec
ss
pop
cmp
jmp
mov
push
sub
add
add
xor
jbe
je
add
or
push
push
sub
add
add
xor
jnp
int
push
into
xor
fst
or
sub
std
xchg
iret
int
in
add
add
or
jmp
gs
mov
lea
push
xor
xchg
gs
sub
add
add
sub
clc
andb
lock
dec
mov
ja
push
xor
add
add
push
std
fs
in
mov
xchg
push
stos
mov
mov
lods
pop
ret
dec
or
jmp
cmc
cli
mov
and
add
add
sti
pop
and
and
leave
adc
aaa
repnz
pushl
inc
lds
pop
jbe
jmp
lret
push
cmp
mov
cmpsl
or
adc
mov
mov
das
adc
inc
cmp
ds
sbb
add
and
scas
pop
imul
rolb
add
inc
jnp
pop
xchg
jge
jnp
pushf
fnstcw
stos
mov
mov
xchg
aas
ds
movsl
jno
jo
int
outsl
adc
lods
data16
add
add
add
add
lock
jl
sar
sbbb
adc
insb
mov
fucomi
push
rolb
push
mov
or
add
add
add
test
movsl
jnp
das
push
jle
xor
jbe
aas
jecxz,pt
xlat
and
xor
mov
add
or
orl
imul
jnp
data16
frndint
je
xor
xor
or
or
js
mov
pushf
pop
shlb
ret
jg
adc
mov
mov
dec
pop
push
inc
xchg
fistpl
adc
lods
mov
das
repnz
or
fsubl
inc
iret
aad
fcompl
cmpsl
test
add
mov
and
mov
das
cmp
push
hlt
push
jno
fidivl
or
add
add
push
push
mov
out
fdivl
pop
xchg
add
adc
mov
add
adc
sbb
inc
cmpsb
jecxz
sbb
mov
fcoms
shll
pminsw
xorb
add
add
mov
jb
and
sub
mov
mov
mov
jle
add
add
push
lods
pop
rcrl
nop
pop
add
add
add
loopne
mov
imul
popf
sbb
jne
mov
dec
mov
jnp
mov
push
movl
aaa
add
xchg
out
pop
ss
dec
add
add
add
rcrl
pop
dec
sub
add
add
ret
rorl
or
jnp
rcrl
add
add
es
jns
inc
ljmp
jno
mov
pop
inc
popl
fcomi
repnz
pop
cwtl
mov
or
add
pop
fcmovbe
stos
pop
dec
inc
insl
rclb
add
bound
add
add
iret
cmp
inc
mov
call
aaa
fstpl
dec
add
add
inc
insl
shrb
pop
repnz
sub
add
add
jo
sbb
mov
adc
sbb
push
out
mov
jl
inc
pushf
pushf
pop
mov
fidivl
or
mov
add
add
dec
cmp
add
add
jb
xchg
das
mov
add
add
add
cmp
mov
sub
inc
jmp
outsl
callw
or
jl
ds
pusha
add
add
fiaddl
inc
dec
sub
add
add
jecxz
cltd
mov
in
scas
add
jp
mov
jb
xchg
and
add
mov
out
add
mov
and
add
push
mov
inc
add
add
cltd
mov
mov
repz
outsb
imul
cmp
xchg
sub
xor
sub
add
add
add
add
popf
pop
mov
roll
add
add
add
add
dec
mov
add
add
add
add
add
push
jg
out
jge
push
add
xor
or
add
jge
shlb
sbb
pop
push
dec
mov
add
add
std
ror
cmpsl
lret
pop
xchg
jmp
add
repnz
xor
mov
dec
mov
or
je
mov
sub
pop
cmp
add
add
orb
push
fstpl
inc
mov
adc
cli
fmul
daa
pusha
add
add
js
mov
jp
adc
adc
call
adc
add
add
pop
adc
push
inc
add
add
xor
cwtl
fisubrl
int3
iret
push
mov
add
stos
cmpb
inc
mov
sti
negl
xor
out
shrb
dec
fsubrp
or
add
push
jne
lret
mov
push
imul
mov
push
rcll
aaa
push
jge
push
in
pop
vhsubpd
mov
mov
scas
enter
sbb
add
inc
lcall
add
add
cld
pop
xchg
add
pop
mov
mov
push
or
clc
jnp
adc
add
rcrb
add
add
jae
mov
ss
mov
or
push
xor
sub
add
add
nop
loop
scas
xchg
mov
mov
sahf
push
lds
fstpt
or
add
add
inc
out
popf
mov
add
jmp
adc
pop
mov
mov
stos
nop
loop
xchg
pop
cmp
and
add
add
push
leave
lock
sbb
inc
repnz
popa
sbb
add
add
add
and
arpl
enter
add
add
sub
insb
mov
pop
and
fidivrs
aad
inc
lock
in
push
pop
stos
xchg
mov
xchg
fidivrs
lods
pop
mov
add
sbb
cmp
add
add
sub
lcall
mov
mov
push
or
mov
jl
mov
xor
rorl
or
mov
lock
add
add
dec
mov
mov
sbb
lds
xor
cmp
outsb
in
and
add
add
imul
add
sbb
mov
xchg
xchg
test
add
add
imul
pop
inc
mov
das
jo
cs
add
scas
push
mov
xor
popa
ljmp
and
aad
dec
sahf
jle
mov
add
add
jb
lods
loope
push
push
inc
mov
sbb
int3
mov
add
add
pop
jl
mov
add
add
rcrl
add
inc
mov
mov
add
add
cmpsb
cwtl
inc
push
inc
push
jb
pop
movsl
cmp
imul
aas
test
add
or
scas
push
pop
imul
mov
mov
xchg
daa
fidivrs
rolb
adc
inc
cmc
mov
shlb
add
add
addr16
mov
add
mov
imul
cmc
jae
dec
and
add
add
mov
sahf
inc
add
or
xor
lods
inc
movsb
mov
aad
inc
pop
or
add
add
sub
mov
iret
push
leave
xchg
push
jne
push
jp
sarl
pop
lds
xlat
das
cmpsl
lods
test
mov
loope
jbe
mov
nop
jecxz
xchg
out
pop
pop
ds
hlt
and
add
add
mov
fcoml
lock
stc
cmc
inc
cmp
rol
push
clc
aas
inc
and
or
inc
pop
and
add
sarb
repnz
add
add
add
add
pop
adc
dec
push
lock
jg
jmp
fmull
xlat
cwtl
rcrb
add
je
outsl
dec
inc
add
add
lock
jge
sbb
pop
jo
pop
stc
dec
and
add
add
test
pushf
aad
mov
movsl
mov
and
shlb
mov
add
xchg
fsubp
adc
add
add
insb
add
add
adc
sub
sub
mov
add
add
insl
sbb
inc
pop
rcrl
fwait
dec
sub
adc
in
ljmp
aam
je
mov
lock
iret
out
push
mov
push
xchg
popa
push
ficoms
add
add
or
inc
add
add
push
frstor
add
pusha
add
add
jnp
push
lock
subl
mov
push
adc
mov
mov
jge
mov
xor
mov
add
add
testb
add
add
repz
loop
jne
push
jbe
inc
mov
sbb
idivl
stc
pushf
sbb
imul
xchg
fsubrl
add
das
rcr
ss
lcall
add
test
popl
mov
outsl
cld
add
push
dec
fisttpl
adc
mov
mov
mov
subl
int
ja
pushl
in
push
addr16
aas
push
pop
add
add
int
inc
adc
push
xchg
sbb
push
and
add
add
add
add
mov
jp
and
add
add
sub
add
add
add
sahf
and
add
dec
mov
xchg
mov
mov
stos
mov
push
gs
xchg
lods
out
adcb
xchg
cltd
inc
push
mov
sbb
adcb
lods
xchg
adc
and
mov
dec
aad
jecxz
jle
pop
mov
sarl
add
fildll
dec
cltd
loope
sbb
movsl
and
add
jnp
xor
add
xchg
xor
jnp
inc
mov
or
test
add
push
adc
mov
out
cwtl
push
idivb
sub
push
lea
lods
mov
xchg
ss
jecxz
lcall
inc
mov
dec
nop
out
adc
add
add
mov
cwtl
mov
fdivp
pop
mov
lods
js
fbld
divl
jp
xchg
loop
jmp
pop
sub
push
movsl
mov
jecxz
movsb
and
pop
aam
test
mov
subl
xor
push
mov
mov
cmp
dec
sahf
daa
adcl
inc
mov
inc
mov
xchg
imul
xor
lds
jp
test
iret
xor
adc
negl
inc
jl
jbe
pusha
add
add
addb
sahf
popa
in
pop
dec
add
add
or
mov
rorl
cmp
jg
mov
add
add
add
add
add
add
adc
mov
add
add
add
jne
push
pop
adc
in
inc
mov
sub
add
add
add
add
inc
pop
add
add
mulb
mov
xchg
es
add
out
inc
outsb
test
out
sub
idivl
and
push
cmp
and
out
lcall
cld
imulb
add
jmp
mov
mov
and
pop
jecxz
arpl
add
add
dec
loopne
mov
lcall
or
add
add
rcrl
mov
popa
push
cld
sbb
xlat
arpl
adc
add
ljmp
xchg
mov
rcll
jmp
bound
jno
mov
in
mov
aas
aas
xor
inc
decb
dec
sub
add
add
scas
xor
mov
cmpsb
mov
sbb
inc
stos
out
cmp
fwait
ja
mov
and
add
add
js
inc
inc
mov
rcr
icebp
or
add
add
lods
inc
pusha
mov
cmp
xor
push
cmp
enter
add
lods
pop
aas
mov
xchg
sub
mov
add
dec
mov
jb
mov
push
out
lcall
add
add
add
dec
sbb
cmpsb
xchg
jo
cmp
cld
cli
nop
push
sub
add
add
ja
lock
test
jnp
sahf
cmp
jg
mov
or
jle
sbb
sub
add
add
sub
add
add
push
divb
mov
xor
mov
cmpsb
mov
add
mov
mov
mov
pop
adc
cli
idivl
repz
out
cmp
add
add
andl
andb
movsb
fwait
repz
jns
mov
fisubl
leave
fistps
pusha
mov
out
and
in
jmp
je
dec
mov
mov
iret
push
sti
xor
ficoml
xor
add
movsl
push
mov
int
rol
js
aas
fisubrs
add
cmp
add
add
xor
adc
add
out
hlt
repz
in
sbb
jb
dec
mov
imul
sbb
fs
dec
into
push
and
sub
add
add
out
cmpsl
cli
dec
sbb
inc
mov
push
cld
mov
add
add
cld
movsb
xchg
pusha
add
add
rorl
add
add
mov
add
sub
cld
ss
stos
or
add
subl
add
add
je
stos
jge
jp
push
sub
icebp
sbb
adc
mov
loop
aaa
test
arpl
movsb
in
xchg
xlat
lcall
jmp
mov
inc
in
jle
xor
xchg
in
je
cmp
inc
mov
imul
inc
mov
mov
dec
mov
pop
sub
mov
es
cwtl
xchg
mov
mov
sbb
add
outsl
pushf
cld
and
xlat
inc
aad
jge
push
pusha
mov
mov
jecxz
inc
or
add
add
sub
push
lret
arpl
pusha
mov
daa
cmp
inc
dec
mov
packsswb
js
xchg
test
sub
shlb
filds
fisubrl
sbb
add
add
xchg
lods
mov
bound
add
add
sub
add
add
mov
xor
sbb
mov
pop
mov
imul
sub
add
add
xchg
jo
pushf
dec
mov
cwtl
sub
inc
stos
add
sub
mov
aam
cmp
loope
jb
mov
add
add
lea
movsb
into
int
inc
add
add
inc
xor
add
add
xchg
ficomps
xor
or
push
dec
sbb
jae
es
aam
push
mov
in
push
std
je
out
jge
push
xor
adc
je
jnp
mov
xchg
mov
jecxz
mov
sbb
mov
daa
mov
mov
xor
jg
je
pop
loop
pop
out
mov
into
repz
mov
cmp
add
pushf
stc
or
add
add
aad
fsubrs
inc
notl
cmp
iret
cmpsl
into
sbbl
adc
outsl
shrl
insb
add
add
cmp
out
mov
and
jne
and
out
std
cmp
add
sahf
adc
clc
addr16
out
pop
mov
sbb
xor
in
notl
stc
icebp
xchg
lock
call
inc
mov
adc
cmpsb
loopne
lods
or
push
out
dec
lods
lods
push
fwait
jle
mov
iret
bound
inc
dec
mov
leave
push
fwait
lahf
fsubrs
mov
xor
mov
dec
inc
jne
mov
ret
lret
add
add
ficoml
sub
cmp
mov
test
add
add
add
add
icebp
add
jmp
xchg
sub
add
add
push
push
mov
push
jmp
inc
test
push
loopne
fdivrs
stos
test
sarb
inc
roll
cwtl
jae
xor
mov
lcall
add
add
add
add
add
mov
add
testl
add
lods
sbb
stos
push
mov
loope
ds
mov
adc
adc
ror
and
cs
sub
add
das
add
repz
and
add
push
in
cwtl
adc
mov
sbb
add
jecxz
add
add
arpl
add
add
pushf
ljmp
jnp
mov
imul
ret
or
adc
test
pop
aad
add
add
mov
add
add
add
add
add
sahf
push
movsb
mov
add
add
scas
inc
xchg
sub
cmpsb
roll
cmc
jno
scas
xorl
xlat
xor
scas
mov
sub
lock
fidivrs
add
mov
xor
adc
std
adc
shll
push
cmpb
mov
pop
push
cltd
cmpsl
shll
lcall
dec
stc
mov
adc
out
call
ljmp
sub
inc
aad
xchg
rcrb
or
sbb
cwtl
mov
push
test
pop
jl
push
in
lods
mov
stc
loop
dec
aas
repz
movb
xor
xor
test
incb
push
or
pop
sbb
jle
inc
aas
jmp
dec
ret
add
add
pop
adc
mov
add
add
imull
add
cmp
js
mov
add
add
pop
insl
dec
add
add
push
mov
adc
add
lock
into
cli
mov
shll
sbb
imul
push
mov
lock
lods
in
rorl
add
add
faddl
xchg
add
fadds
mov
dec
xchg
popa
pushf
daa
lock
xchg
xlat
leave
imul
lahf
mov
inc
lea
push
sub
add
add
pslld
dec
dec
add
add
testl
rclb
add
add
icebp
xchg
mov
inc
pop
out
rcl
pop
outsl
adc
add
inc
notl
fdivp
sbb
int
enter
mov
jns
push
lock
dec
sub
add
add
mov
pop
dec
movsb
fidivs
cli
dec
mov
stc
cmc
push
rcrl
insl
or
add
add
sub
jle
jae
xchg
push
call
cld
call
add
int
cmpsb
flds
add
xchg
ja
jae
nop
jae
push
push
mov
inc
loope
pusha
add
add
push
xchg
cld
stc
sbb
repnz
sbb
adc
daa
fs
jmp
mov
movsl
inc
mov
dec
cmpb
andl
call
xchg
push
shll
dec
in
lret
inc
inc
and
add
add
testb
add
inc
mov
clc
dec
jg
idiv
pop
mov
stos
jl
cmp
or
into
lods
gs
adc
add
pop
in
popa
aad
cmpsl
jge
out
call
or
add
add
xchg
ficomps
sub
cwtl
sub
adc
dec
nop
and
icebp
icebp
mov
stc
jne
imul
inc
xor
push
ljmp
xor
loop
xor
add
add
mov
add
loopne
scas
mov
bound
scas
enter
add
mov
out
std
cmpsb
pop
and
jg
lret
mov
xlat
xlat
cld
or
add
add
lret
les
or
add
add
and
stc
add
add
pop
js
clc
loope
stc
clc
ret
pushf
stos
ja
test
call
mov
int3
lods
in
sub
add
loop
ljmp
push
mov
rclb
cmp
add
add
add
add
aas
into
add
add
add
sahf
imul
add
fistps
jg
mov
jmp
dec
mov
aad
add
add
xlat
or
add
add
imul
pop
push
sbb
jae
scas
push
sbb
jg
out
pusha
add
add
cmc
pusha
mov
lods
xor
mov
add
cmpsb
lret
sub
test
aas
jecxz
mov
add
add
xchg
dec
mov
aad
pop
push
sub
dec
in
pop
scas
clc
sbb
add
add
xchg
sub
cmpsb
sbb
xor
mov
rcrl
lock
mov
data16
sbb
outsb
leave
ds
mov
or
inc
cmp
jle
addl
add
add
fbld
fwait
and
add
add
inc
outsl
cmpsl
sub
inc
fld
pcmpeqw
addl
push
jae
mov
lahf
cmp
lods
arpl
or
jmp
add
add
fs
ljmp
mov
xor
and
add
add
arpl
stos
cmp
movsb
pushf
xchg
aaa
rcl
cwtl
and
add
add
xchg
cli
jl
sbb
add
xorl
xor
add
add
push
call
add
add
out
sar
add
inc
add
add
std
in
mov
je
push
and
add
add
iret
clc
mov
loop
sbb
add
add
loope
jbe
adc
xlat
pop
jae
inc
add
add
testb
add
mov
cmpsl
stc
shll
add
add
outsb
inc
sub
dec
and
add
sub
add
add
inc
add
add
fbld
xor
adc
jg
ret
add
add
pop
fwait
mov
ljmp
mov
ds
jmp
add
add
lods
xchg
mov
imul
cmp
ret
fstl
jle
jecxz
movsb
jle
lock
add
mov
cli
xchg
mov
out
inc
mov
xchg
adc
mov
scas
daa
cs
jne,pt
jle
adc
xchg
pop
mov
add
mov
dec
add
add
mov
leave
mov
insb
mov
xlat
inc
mov
insl
pusha
mov
test
push
dec
add
add
add
add
or
mov
add
add
test
cmp
jecxz
fdivs
mov
mov
loope
xchg
addr16
jle
add
add
xchg
xchg
mov
cld
sbb
mov
stos
pop
mov
in
addl
cmp
cmp
pop
or
shlb
cmp
ljmp
mov
mov
shlb
addr16
add
add
das
decl
add
add
add
andb
cld
mul
mov
cmp
imul
mov
sahf
dec
mov
jne
mov
not
inc
add
add
lods
popa
sub
add
add
ds
add
add
mov
add
add
add
jecxz
les
mov
push
dec
movsl
push
stos
ss
jnp
mov
pop
sarl
test
add
xchg
stos
mov
sarb
xchg
aad
sahf
outsb
aas
push
push
je
leave
mov
or
add
add
data16
gs
add
fistpll
jecxz
mov
negb
stc
movsb
cmp
add
add
mov
repnz
mov
jb
scas
cmp
imul
push
shll
je
sub
into
in
dec
fdivl
push
mov
xor
es
push
xor
shlb
mov
js
es
ret
add
ss
add
add
add
fcomi
aam
pop
push
dec
mov
add
pushf
cwtl
lock
imul
cli
sub
repnz
mov
add
add
in
xor
mov
mov
loope
icebp
xchg
insb
add
add
es
inc
add
add
lret
sub
loopne
lahf
jg
add
into
leave
xchg
nop
jae
lahf
loop
fs
arpl
scas
xchg
cmpb
pop
scas
std
and
add
add
ja
lea
mov
add
add
add
fwait
xchg
shll
arpl
jp
stos
jp
xorl
int3
dec
mov
shrl
mov
jbe
pop
hlt
lock
scas
add
add
add
rcrl
mov
fwait
inc
push
ds
add
aam
mov
rorb
iret
mov
movsb
mov
and
add
add
sbb
ret
push
lcall
shrl
pusha
mov
add
add
cmpsl
cmp
xchg
lcall
add
mov
fstl
add
pop
roll
mov
lcall
out
pop
pushf
push
or
pop
test
arpl
fiadds
imul
xor
add
sbb
dec
loopne
add
add
test
clc
out
xchg
in
pop
xchg
pop
sbb
push
cltd
push
inc
and
add
add
stos
aaa
and
subb
ds
push
pop
ja
push
add
int3
mov
addr16
push
test
test
fstpt
pop
stc
sbb
jne
jno
sub
add
ss
push
in
std
loop
mov
addr16
pop
fbld
add
xorb
mov
ja
je
out
sub
add
add
negb
inc
add
add
jle
inc
loope
imul
mov
or
add
add
jle
inc
mov
jns
imul
cmpsl
add
inc
fwait
dec
roll
orl
fmuls
add
add
and
add
add
loopne
xchg
cmpsb
add
add
add
add
add
add
add
jg
add
add
and
add
add
sub
add
add
sub
add
add
repz
jae
push
ret
cmc
test
rol
ljmp
mov
mov
mov
xchg
stc
sub
in
in
shrb
jmp
fidivl
fstps
loopne
stos
test
out
xor
scas
xor
or
xchg
stos
aas
sub
add
add
add
add
xchg
cmc
leave
orl
add
jae
add
add
inc
jg
and
sub
lahf
or
add
pop
nop
or
add
add
stos
pop
call
add
add
shlb
sbb
add
add
jo
cli
mov
add
sbb
inc
pop
rcll
add
xchg
movsb
xor
cmp
lret
push
mov
jns
outsb
adc
in
repnz
sub
xchg
int
mov
es
jl
lcall
add
add
sahf
out
jne,pt
std
popf
add
lcall
pop
cmp
cmpsl
mov
jl
jg
addr16
mov
add
cmp
mov
lret
jo
mov
xchg
add
fsub
gs
decl
mov
int3
in
sub
add
add
test
mov
ds
cmc
adc
je
ljmp
add
add
xor
pop
jno
mov
mov
loopne
mov
hlt
and
in
mov
mov
fdivs
mov
jnp
push
xchg
inc
add
add
pop
inc
lcall
mov
jo
cmp
mov
add
add
popa
lahf
jp
loopne
mov
jge
mov
mov
and
add
add
push
mov
push
sub
xlat
and
add
add
imul
add
mov
imul
int
test
add
arpl
lcall
mov
mov
add
add
xor
in
fiadds
pop
fcomp
popf
in
add
test
scas
mov
popl
add
add
clc
xlat
nop
ret
daa
cmp
mov
jnp
pop
push
or
sbb
gs
shl
xchg
dec
jbe
xchg
cmpsb
mov
inc
scas
lods
cmpsb
test
mov
dec
inc
mov
addl
add
gs
in
mov
stc
jbe
xor
shrl
xor
stos
dec
xchg
inc
add
add
inc
in
jecxz
add
add
add
mov
pushf
cmp
cmpsb
and
add
add
dec
fimuls
fcomps
add
add
xor
data16
jae
jge
adc
pop
mov
push
xchg
adc
xchg
cmpsb
ds
push
or
inc
inc
add
add
sbb
in
jno
pop
cmp
add
js
push
fcoms
addr16
xlat
test
mov
lret
adc
cld
mov
cmp
test
jae
out
ds
in
pop
pop
adc
rcl
scas
outsl
mov
rcrl
repz
add
add
jmp
sarl
divb
jns
push
aad
lcall
jp
mov
dec
jne
leave
std
mov
imul
out
gs
pop
call
add
add
sbb
daa
mov
mov
mov
aad
add
add
and
add
out
mov
and
aaa
fcoml
inc
push
pop
and
mov
into
xor
add
dec
roll
add
add
outsl
push
inc
inc
xchg
sar
pop
iret
inc
out
add
add
sbb
mov
out
cmp
mov
and
adc
pop
dec
fidivs
push
mov
jle
inc
mov
mov
push
lret
shll
sbb
mov
add
pop
jo
or
mov
add
add
jnp
rcrl
lock
aaa
and
test
push
hlt
push
inc
test
enter
add
cmp
mov
aaa
test
les
sub
lds
and
add
outsl
and
lods
mov
add
pmuludq
das
and
mov
mov
mov
mov
cmpsb
das
scas
jle
jnp
add
add
cmc
adc
mov
sbb
pop
xor
mov
xor
add
add
mov
jecxz
icebp
std
fcoml
xor
insb
mov
ror
aam
mov
mov
inc
fisubrl
notl
repnz
jnp
mov
sbbl
dec
pop
fstpl
das
jns
out
inc
imulb
add
add
and
mov
clc
int3
xchg
leave
mov
add
add
push
iret
fscale
push
adcl
mov
add
add
push
insb
add
add
lods
cmc
js
mov
dec
add
add
add
fiadds
movsl
es
and
inc
sub
fstl
add
add
add
aad
data16
movsl
sub
ljmp
out
mov
mov
inc
mov
fildll
movb
jp
insl
or
repnz
add
add
jle
mov
xchg
push
jl
movsl
aas
addr16
inc
adc
xor
cmpsl
ret
push
add
push
lods
stos
nop
sub
add
add
sbb
add
push
lds
mov
jp
dec
sbb
and
add
add
dec
push
xchg
ds
and
add
add
inc
mov
aad
push
lahf
mov
mov
fstpl
iret
popa
lea
ret
mov
add
add
add
add
add
add
sub
lods
addb
add
add
add
mov
add
pop
xor
add
add
inc
ss
gs
add
sbb
push
cli
and
daa
push
cwtl
popa
pop
xor
in
pop
jno
sbb
add
add
or
add
mov
add
dec
and
or
add
add
add
dec
mov
cltd
push
and
int
jns
inc
add
add
imul
add
mov
fstpt
repnz
addr16
mov
jne
pop
ss
jl
imul
sbb
fcmovu
mov
inc
arpl
xor
add
add
jne
jp
pop
mov
sti
dec
cwtl
push
adc
push
adc
enter
in
push
dec
icebp
xor
in
xor
pop
nop
insl
cltd
adc
leave
mov
cmc
xor
movsl
add
into
stos
sub
add
add
jno
and
stos
aad
and
sbb
rcrb
adcb
jmp
in
add
add
add
add
mov
das
jl
push
or
mov
shrb
inc
xor
mov
cmp
test
shlb
repz
add
add
pop
iret
jp
test
inc
mov
jbe
or
add
add
jno
jmp
jbe
xchg
push
sub
xor
xchg
mov
xchg
push
andl
add
add
jb
pop
push
in
inc
or
add
add
sbb
mov
lods
sbb
xchg
jmp
outsb
xor
nop
jnp
add
add
add
jl
cmp
add
popa
gs
jnp
xchg
data16
mov
push
dec
pop
dec
xchg
enter
mov
mov
outsb
hlt
imul
push
xchg
call
or
add
add
mov
ret
mov
add
add
jo
jecxz
stc
daa
inc
add
add
iret
ja
rcrb
adc
sub
or
inc
mov
add
add
or
sub
add
add
mov
mov
enter
add
js
inc
add
add
cmpsb
sbb
add
add
jl
out
ljmp
gs
fsubrs
add
xor
scas
loopne
cli
mov
inc
sbb
das
aam
outsl
stos
and
in
mov
xchg
int
sahf
cmpsb
shrb
rcl
repnz
pop
and
push
fisubrl
pop
popf
xchg
test
es
mov
push
cmc
add
cmp
mov
add
xor
aam
xor
and
xor
mov
adc
stos
aas
ror
cmp
test
aam
mov
or
rcrb
cmp
jo
in
inc
ret
add
add
call
inc
add
add
adc
in
jno
cmc
cmp
mov
or
mov
pop
and
and
pop
sbb
psubb
pop
dec
pop
in
ja
lds
cli
dec
mov
add
push
and
add
add
scas
xchg
cld
dec
cmp
dec
and
rclb
test
loope
add
add
jne
test
add
pop
pusha
add
add
fcmovb
mov
add
inc
rclb
add
add
add
inc
xor
add
add
addb
add
add
mov
scas
cmp
push
icebp
call
add
add
shlb
leave
loope
lods
sub
dec
mov
cmp
add
and
add
add
ss
inc
cmp
fadds
cmp
mov
add
add
xchg
add
out
or
iret
mov
jae
bound
add
add
sbb
add
add
adc
enter
or
mov
fwait
aad
sub
push
sub
mov
mov
pop
sbbl
stos
out
dec
add
add
xabort
jbe
jmp
pop
pop
sbb
adc
adc
mov
lea
je
jecxz
mov
cmpl
xchg
scas
jmp
inc
mov
rcrl
cmc
insb
add
add
cltd
scas
sti
mov
xchg
sbb
pop
loopne
sub
les
mov
cmp
cld
jl
push
in
lods
xor
or
scas
push
cmp
imul
mov
in
xor
pop
arpl
call
xchg
push
lret
fimull
mov
mov
les
adc
das
push
or
add
add
push
push
inc
mov
shrl
sbbb
sub
xchg
xlat
sbb
cld
nop
testb
inc
xlat
inc
mov
testl
mov
cmp
clc
pop
jnp
pop
mov
bnd
sbb
out
xchg
rclb
mov
cmpb
add
push
mov
cs
movsb
cmc
push
sbb
enter
pop
shr
pop
stos
jbe
lret
push
out
cmp
pop
xor
mov
jp
add
mov
adc
call
jp
xchg
mov
add
add
into
hlt
repz
pop
or
mov
scas
or
mov
in
mov
nop
push
aad
add
add
cld
sahf
movsl
lret
pop
cli
jp
lea
inc
adc
ficompl
inc
mov
add
add
push
sahf
inc
add
add
negb
mov
mov
outsb
call
inc
add
add
cmp
pop
sub
js
daa
mov
mov
cli
popf
shll
xor
add
add
add
xlat
add
in
mov
nop
jno
push
stos
xor
aas
pop
xor
pusha
mov
shlb
add
out
mov
rolb
cmp
lock
jg
sub
cmp
cmpsb
mov
mov
pop
stos
mov
add
add
repnz
lds
rorb
add
add
add
mov
loopne
cmpsb
push
pop
cltd
rcr
das
mov
imull
mov
add
add
fwait
in
push
rorl
mov
movsl
add
add
add
add
dec
ficomps
xchg
leave
jnp
test
ficomps
add
nopl
rolb
mov
insl
push
jo
int
mov
sub
scas
pop
sub
add
jae
sub
mov
add
add
xchg
orb
push
leave
mov
add
jg
push
jns
ljmp
add
add
pusha
mov
lea
aam
dec
mov
xchg
sbb
jno
sbb
mov
pusha
add
add
call
loope
push
cwtl
shl
aam
sub
pop
cs
xor
sahf
enter
dec
inc
inc
pushf
inc
movsl
xor
add
add
lahf
xchg
outsb
xchg
in
and
mov
sub
test
in
jae
call
add
and
scas
lea
lret
lahf
sarl
pop
sbb
repnz
fucom
push
gs
outsl
sub
inc
sub
add
add
add
dec
or
dec
add
add
push
mov
xchg
test
xchg
add
xor
add
add
add
pushf
mov
imul
iret
push
sub
add
add
sub
int
jno
sahf
sub
cltd
aam
ret
add
add
js
push
add
add
fs
cmp
outsl
out
mov
mov
and
jae
divps
dec
sbb
jb
or
add
add
add
pop
add
sbb
icebp
push
out
hlt
test
mov
jne
fildll
cli
mov
shll
ljmp
movsl
push
pop
popa
rcl
cmp
loop
subb
test
fldl
and
add
add
push
push
and
mov
add
add
loopne
pop
push
rcll
in
cmpsl
inc
add
add
xlat
loopne
and
add
add
push
scas
cmp
jbe
arpl
lahf
cmp
loope
call
in
jbe
or
lea
xor
int3
jp
insb
add
add
cli
sbb
lret
add
add
jb
dec
cmp
ror
add
add
outsb
icebp
imul
sbb
insl
adc
loop
inc
push
filds
or
out
xchg
shrb
dec
jge
jle
xchg
cmc
cli
mov
add
add
aaa
popf
lds
jecxz
cld
or
aam
mov
clc
scas
cmpsb
xchg
clc
xchg
jne
clc
arpl
cmp
ss
ss
add
add
sbb
adc
mov
leave
lods
jle
push
hlt
mov
mov
test
xor
inc
insl
pop
push
es
mov
lahf
xchg
pop
xor
sub
xor
xor
sub
add
add
or
mov
clc
nop
mov
cmp
add
mov
dec
iret
into
test
cld
shrl
test
add
sbb
xor
jno
call
add
add
add
lds
lret
dec
mov
cli
mov
adc
ljmp
or
add
add
add
or
mov
mov
jl
dec
add
add
add
add
add
cli
pop
adc
repz
or
subl
add
xchg
ja
ret
pusha
add
add
fimuls
mov
shr
out
sbb
or
sbb
mov
mov
add
mov
stos
pop
outsl
sbb
xchg
sbb
dec
das
jb
roll
les
mov
stos
jmp
bound
sub
add
add
mov
sub
add
add
leave
int
or
add
mov
les
outsb
lods
add
add
add
add
lret
add
lcall
call
jmp
push
pop
out
xchg
les
dec
adc
xor
shlb
in
in
fldt
add
add
dec
fimull
add
add
icebp
aam
add
add
jl
and
add
add
je
mov
add
pop
cmp
pop
mov
xchg
roll
fstpl
jecxz
mov
jmp
fbstp
mov
and
add
add
adc
insb
add
add
rorl
jbe
ss
loop
mov
mov
test
mov
in
mov
add
add
faddl
into
sarl
loope
push
sldt
add
add
or
add
or
test
fstl
add
add
push
mov
rorb
add
sub
sub
bound
cltd
pop
sti
inc
adc
add
add
xchg
out
cltd
adc
add
add
mov
add
add
inc
sbb
xchg
add
add
mov
add
mov
je
push
iret
loop
jmp
popf
cli
ljmp
xchg
call
add
add
add
add
add
xchg
adc
pop
test
mov
mov
sbb
es
jne
mov
pandn
add
repnz
or
pop
ret
scas
push
outsl
pop
push
mov
adc
xchg
push
imul
inc
mov
outsl
pop
andb
mov
add
dec
mov
xchg
xlat
jl
xchg
out
int
jne
xchg
clc
cmpb
xchg
dec
mov
leave
ret
sbb
inc
cmpb
pop
cwtl
sti
inc
in
jl
scas
lods
mov
add
xor
jnp
mov
je
xchg
sarl
add
add
jno
cmp
outsb
push
icebp
cli
push
mov
or
mov
pop
negl
pop
jge
scas
pop
aad
out
movsb
and
mov
pushl
or
add
add
scas
idivb
sub
add
push
fcmovu
lock
mov
dec
sbb
jno
and
add
add
sub
and
or
fimull
jp
into
test
mov
insb
add
add
jmp
add
dec
pop
into
ja
cli
sub
fidivl
test
adc
dec
out
cmc
mov
xchg
add
mov
fnstsw
int3
pop
ljmp
repz
or
mov
mov
shll
outsl
or
add
jns
push
adc
mov
add
inc
mov
push
dec
add
add
rorb
inc
mov
lret
pop
pushf
fcoms
add
xchg
lods
cmp
xor
inc
mov
pop
out
dec
mov
out
sbb
mov
out
xor
add
add
jo
js
out
sub
mov
sub
test
into
mov
mov
testb
movsb
push
inc
loopne
push
mov
std
mov
aas
push
jle
repnz
xor
inc
dec
fcmove
sub
loopne
add
cmc
or
pop
mov
insl
ljmp
mov
inc
mov
arpl
mov
add
add
ljmp
es
add
mov
out
pop
xchg
xchg
add
pop
sub
add
add
add
add
pop
cmp
dec
sbb
jae
mov
push
loope
insl
pop
add
mov
mov
movsb
lcall
and
mov
in
lcall
rcll
loop
cmpsl
xor
mov
inc
jle
aas
and
xchg
ret
leave
pusha
add
add
or
loope
add
add
cmpl
add
add
pop
ret
icebp
sahf
mov
sbbb
mov
rcll
sub
and
jb
daa
jp
js
bound
push
nop
jle
cs
mov
mov
pop
push
fisubl
int
xor
in
and
bound
mov
adc
xchg
inc
and
add
add
xor
sub
rol
push
loope
test
add
icebp
and
sahf
xchg
add
jp
dec
inc
add
add
popa
dec
xchg
pop
xchg
imul
stos
jns
outsb
dec
push
icebp
fbld
add
jge
loopne
add
add
push
sti
js
mov
pop
xor
mov
inc
test
insb
mov
int3
lods
roll
cwtl
push
iret
sbb
push
call
lret
or
dec
gs
push
mov
push
leave
and
add
add
jbe
or
push
stos
shll
inc
or
add
add
into
pop
jle
inc
mov
cmpsb
mov
jl
shlb
mov
lret
cmpb
aad
add
out
xchg
inc
pusha
mov
in
mov
popf
cmp
outsl
cmp
pop
mov
sub
mov
stos
jb
lahf
insl
test
mov
add
add
add
push
sahf
outsb
push
out
inc
xchg
ficoml
enter
and
addr16
xchg
pop
cs
ret
outsl
pop
inc
mov
mov
popf
subb
out
mov
add
pop
mov
sub
mov
dec
out
xchg
mov
push
add
push
and
loopne
je
test
mov
xchg
mov
jb
add
add
cmp
lods
mov
sub
add
add
add
add
dec
sbb
pop
mov
mov
add
add
cmpsb
pop
fists
outsl
add
add
add
imul
or
xchg
rcll
mov
daa
add
add
add
ds
fdivs
sbb
rcr
mov
loopne
in
jmp
mul
dec
add
add
add
push
nop
push
pusha
add
add
notl
mov
in
jg
negl
sbb
xchg
cmpsl
mov
loopne
cltd
pop
push
aad
lock
lds
add
add
aaa
std
scas
call
rorb
cltd
dec
jecxz
inc
lahf
test
repnz
mov
add
sub
neg
mov
sbb
leave
lret
lret
xchg
aam
fsubrs
add
add
dec
inc
jns
call
cs
mov
ja
sub
xor
add
add
lret
ret
push
dec
inc
jbe
aad
lahf
sar
jmp
mov
add
add
add
add
add
adc
add
add
mov
xor
int
push
xor
fs
add
pop
and
add
add
jl
cwtl
and
add
add
mov
pop
int
sbb
pop
lods
sub
add
add
les
scas
adc
fiaddl
add
add
stc
pop
mov
int
pop
and
add
add
test
pop
je
lret
cmp
mov
es
xor
xor
lods
and
lock
lahf
push
jb
xor
daa
inc
mov
xchg
jmp
sbb
push
pop
xchg
add
mov
mov
cwtl
ja
gs
xor
mov
in
sbb
daa
inc
add
add
mov
test
sub
xchg
out
adc
flds
lret
fs
mov
jno,pt
std
sub
in
add
add
add
cld
repnz
push
xchg
test
mov
fildll
add
add
add
add
add
nop
and
mov
inc
add
add
rcr
mov
push
pushl
addr16
fwait
or
pop
push
xor
add
add
jbe
jl
arpl
popf
or
adc
or
out
nop
les
push
mov
or
mov
hlt
inc
std
bound
and
js
and
mov
xchg
test
jle
pop
and
jb
push
inc
inc
cld
dec
in
in
std
arpl
daa
pop
mov
fsubp
fnsave
mov
add
push
mov
dec
or
cli
andps
add
mov
and
ret
inc
movsb
jge
andl
fptan
mov
add
add
jp
loop
fiadds
cli
cmp
aas
push
pop
cmp
cmpsl
sub
add
add
leave
push
adc
sub
cmpsl
sti
movsl
call
pcmpeqb
rol
inc
mov
add
add
pop
sbb
dec
insl
jbe
xor
decl
sub
mov
cmp
pop
lahf
xchg
lcall
cmc
cmp
lahf
pop
fcomps
into
sbb
add
add
loopw
mov
inc
js
out
imul
add
add
iret
jo
es
inc
repnz
add
add
sbbb
add
mov
lods
cmpsb
into
sub
jl
push
movsl
xor
push
cltd
xor
icebp
sbb
pop
das
jmp
and
adcb
cld
sub
add
add
mov
bound
aaa
inc
add
add
loope
sbb
fnstenv
cmp
push
push
cwtl
push
movsl
cwtl
int
lea
dec
cmp
inc
scas
loop
lret
fcmove
jo
or
cmp
add
sub
out
jo
dec
mov
fnstenv
shlb
jge
pop
dec
or
andb
leave
cltd
xlat
pop
imul
lods
aam
gs
cli
inc
addl
add
add
sub
or
in
mov
mov
sahf
dec
fsubl
mov
addl
mov
mov
inc
push
push
mov
xor
shrl
push
adc
ja
jb
cmp
lcall
pop
jle
out
sbb
adc
loope
mov
mov
popf
fstl
pop
lock
pop
mov
xchg
std
xchg
sbbl
push
pmuludq
mov
or
inc
mov
aad
in
test
in
jo
stc
xor
test
mov
sub
xor
add
imull
mov
add
inc
jp
imul
or
add
add
je
add
add
mov
push
or
and
fstpt
mov
add
add
cmpsl
inc
fbstp
loopne
repnz
in
xlat
mov
pushl
add
add
loope
and
in
adc
lock
sbb
rol
sbb
in
sahf
push
scas
rcrb
xchg
xor
stos
rcrb
outsl
mov
add
add
push
jno
and
push
call
fistl
lds
add
add
in
jb
popf
adcb
mov
add
mov
mov
jp
outsl
cmp
xchg
stos
push
pop
movsb
push
adc
std
test
sbb
add
sub
das
loop
stos
mov
cltd
lods
daa
jbe
ret
mov
loop
or
add
xor
test
pusha
mov
add
add
loopne
push
mov
pop
and
les
add
notl
add
add
fimull
mov
cwtl
or
jo
mov
and
jnp
push
mov
add
add
cmpsl
add
add
add
add
push
data16
loopne
push
fiadds
xlat
cmp
add
add
mov
sbb
int
lahf
rcrb
rolb
push
hlt
or
add
add
xor
dec
mov
sbbl
and
mov
add
add
xchg
lret
cmp
jge
lds
mov
add
mov
adc
das
fstps
mov
mov
xchg
scas
out
add
add
add
or
cmp
rolb
mov
outsb
movsl
mov
xchg
add
aaa
jg
sets
mov
test
loop
decb
jae
aad
lahf
push
stos
xchg
sbb
sub
add
add
mov
cmp
mov
pop
insl
inc
mov
lods
pop
rep
sub
add
add
mov
incl
mov
hlt
daa
or
cmp
pop
adc
add
xchg
add
sub
jmp
mov
out
sbb
add
inc
push
push
lcall
mov
orb
pop
and
leave
in
xchg
and
add
add
sbbb
mov
pop
mov
add
add
out
ja
shll
and
push
inc
push
in
fnsave
xor
add
add
icebp
push
or
add
add
mov
xorb
and
push
pop
push
mov
aad
out
ror
int
ja
jg
push
jne
insl
jae
pop
xchg
jae
cmp
xchg
rclb
xor
adc
and
add
fimull
push
js
jmp
add
add
mov
cmc
lds
sub
fildll
xchg
imul
fucom
ja
add
add
dec
add
add
ja
aad
or
enter
mov
pop
icebp
xchg
jne
mov
sarl
popf
push
dec
cmp
cmp
mov
rcrb
ret
add
add
xchg
in
ljmp
sub
add
add
mov
jge
mov
lahf
mov
mov
pop
mov
sub
add
lods
mov
das
cmp
shll
or
adc
add
add
mov
add
inc
pop
fldenv
inc
imul
fsubrp
push
in
mov
enter
mov
fmull
push
mov
fs
sbb
dec
pushf
insl
jge
mov
add
into
dec
mov
sbb
das
bnd
lahf
sub
add
add
or
sub
add
add
xor
gs
stos
cmp
sbbl
dec
adc
pusha
add
add
shll
add
add
push
push
fidivs
cmp
inc
je
add
add
add
imul
in
sbb
in
imul
lds
pop
fldl
cwtl
sbb
enter
imul
cmp
xchg
cmp
add
aaa
loop
mov
add
add
test
mov
loope
nop
push
mov
jl
jns
lahf
out
test
cmpsb
insb
mov
or
push
arpl
fcomip
popf
sub
add
inc
mov
outsl
lock
mov
sbb
or
out
add
add
sbb
push
ret
lods
adc
push
mov
add
add
pop
leave
or
add
add
jle
dec
sbb
xchg
and
out
fildll
add
add
jo
push
aad
xchg
xor
in
add
nop
imul
xchg
leave
pop
lret
dec
jae
inc
adc
mov
cmp
or
jle
ret
jbe
cld
test
lret
push
repnz
subb
fwait
stos
mov
mov
and
xor
ret
ror
call
add
add
pop
cmp
add
add
shl
and
fistpl
mov
movl
add
add
lds
add
add
sub
adc
lods
jo
or
add
add
mov
inc
add
add
clc
test
pop
rcrl
lea
add
add
push
jnp
aas
xchg
scas
shrl
add
add
fnstenv
divb
mov
mov
add
mov
add
add
add
arpl
add
xrelease
dec
jecxz
cmpsl
xor
mov
lret
or
shlb
leave
aas
rorl
nop
mov
ljmp
sbb
sub
jmp
jb
mov
cmp
popa
dec
add
add
imul
add
add
pusha
mov
mov
into
arpl
ret
and
lahf
adc
and
mov
mov
sub
rcll
setno
inc
xchg
adc
jnp
sbb
mov
mov
pop
jae
mov
cmc
mov
or
add
add
mov
ret
outsl
dec
mov
popa
test
insb
mov
mov
outsb
popf
pop
xor
push
fwait
mov
inc
shl
pop
fisttps
adc
or
jae
mov
sahf
stc
jl
jmp
andb
repnz
mov
push
sti
stc
cmp
mov
test
ret
mov
mov
adc
mov
push
jae
or
add
add
cmp
add
add
lods
mov
dec
inc
mov
sub
add
add
ror
fcomi
mov
imul
dec
mov
xchg
mov
in
mov
add
add
mov
adc
mov
add
daa
cltd
push
dec
and
add
add
jmp
mov
pop
push
jmp
pop
aas
push
jb
mov
pop
in
mov
push
sub
adc
push
ss
fildl
imul
jecxz
fisubrs
mov
mov
xor
pop
sub
in
cmp
cld
outsb
and
mov
sub
insb
mov
mov
jae
test
add
jl
movsl
cmp
insb
mov
sbb
mov
mov
and
add
add
clc
push
mov
mov
sbb
add
add
lods
jno
mov
mov
xor
loopne
clc
mov
mov
scas
stos
rcll
je
cmp
imul
lret
add
add
push
push
pushf
jmp
add
add
push
loopne
arpl
aam
mov
inc
mov
ret
out
xchg
xchg
shrl
or
mov
stos
dec
jge
adc
mov
cld
lcall
push
arpl
and
mov
fsubs
add
leave
loopne
push
xchg
jp
sahf
inc
sti
pop
test
sbb
inc
adc
xchg
mov
sbb
aas
fisubs
loop
cmp
add
dec
movsb
xchg
inc
add
add
inc
repz
adc
xor
daa
sub
add
add
jno
inc
and
jb
repnz
push
sub
add
add
mov
mov
xor
lcall
push
fiadds
mov
adc
and
add
flds
add
out
xchg
mov
add
add
push
pop
jle
xchg
adc
inc
lods
ficomps
sub
sbb
add
test
mov
out
inc
inc
sub
movsb
in
add
add
add
nop
movsl
or
inc
test
and
adc
pop
pushf
jecxz
jnp
out
jne
lock
test
add
pop
in
and
add
lea
add
vpaddusb
dec
jne
sbb
mov
push
pop
in
push
repnz
sub
loop
test
xchg
push
inc
in
pop
mov
adc
add
add
sahf
mov
in
lret
dec
cmpsb
shll
push
pop
dec
scas
inc
mov
pop
roll
lcall
ja
dec
andl
mov
lea
xor
pop
adc
add
imul
add
add
xchg
mov
mov
mov
scas
mov
scas
int
and
xchg
add
imul
add
xchg
inc
mov
iret
orb
cs
in
stos
add
add
icebp
add
nop
xchg
pop
or
out
adc
es
cmp
cs
sub
xor
adc
add
add
js
hlt
push
dec
mov
mov
jle
add
add
jbe
pop
ror
ljmp
mov
mov
add
add
dec
lcall
pushf
inc
pusha
mov
adc
jns
or
add
add
lret
xor
test
push
adc
pop
rorl
add
add
dec
mov
jnp
mov
int
mov
shlb
mov
icebp
sub
add
add
bound
inc
dec
xchg
push
or
dec
mov
stos
push
jle
xchg
rorb
aam
mov
add
push
cmpsb
dec
add
add
inc
mov
inc
lahf
in
push
xlat
ss
pop
mov
loope
das
xchg
mov
nop
ret
jno
sbb
push
cmp
sub
int3
mov
cmp
insl
rolb
icebp
repz
stos
imul
add
pusha
mov
mov
push
push
pop
out
roll
add
cli
lods
icebp
mov
pop
aad
ljmp
popa
std
xchg
call
xchg
sbb
cmp
add
add
push
popa
scas
loop
xchg
xchg
das
and
divb
add
add
add
cmp
popf
jge
lret
sahf
lahf
ret
lret
mov
mov
mov
mov
push
push
and
add
add
or
add
add
pop
call
fdivrs
cmpsb
xchg
pop
jp
movsl
sti
push
xchg
mov
fidivs
int
notb
or
add
add
jp
or
add
add
push
lahf
add
add
adc
add
sbb
cs
ret
mov
popa
sub
add
add
mov
push
inc
add
push
ja
pop
xchg
mov
imul
add
add
pusha
add
add
out
mov
pop
sbb
mov
fiaddl
ret
inc
add
add
fdivrs
cmpsl
movsb
dec
sub
add
add
cmc
popl
adcb
lods
push
or
ret
out
stos
outsl
push
pushf
lds
mov
xchg
mov
xchg
jnp
mov
add
add
jg
lahf
decb
loope
xchg
sbb
xchg
test
add
add
mov
lret
cmpsb
or
lods
lods
mov
repz
mov
int
jmp
adc
lods
aas
inc
jmp
rcl
pushf
push
ja
incb
test
fsubl
and
add
mov
test
loop
aad
ret
pop
cmpl
cmpsl
pop
test
mov
dec
ss
rolb
jbe
outsb
mov
mov
jae
add
mov
add
add
hlt
mov
add
adc
cmp
repnz
add
add
scas
mov
fidivrs
add
push
jns
xor
pushf
stc
stos
jecxz
cmpsl
xchg
push
sub
add
add
cmpsl
ret
sub
mov
frstor
int3
js
add
add
cmp
ljmp
add
add
stos
sbb
cld
loope
push
xor
repnz
enter
scas
enter
dec
jbe
arpl
xchg
mov
add
movsb
inc
cmp
add
add
lods
stos
push
inc
lea
mov
insl
push
mov
mov
xchg
sub
aaa
inc
popf
jne
mov
jg
inc
sbb
rclb
adc
ss
outsb
je
addl
push
lcall
add
out
mov
add
add
add
lds
add
add
jp
cmc
push
sub
xor
notb
cld
cmpsb
ret
bound
add
das
repz
add
add
or
std
daa
jle
mov
add
lcall
push
stc
pop
lea
jne
repz
xor
mov
mov
cmp
mov
add
add
repnz
jecxz
push
lea
mov
hlt
sti
sub
add
pop
and
cmp
mov
add
pop
inc
mov
add
add
add
addr16
loop
mov
mov
rolb
add
cmp
insb
mov
inc
aad
lahf
or
mov
add
out
cltd
orb
pop
inc
repz
out
jns
das
sar
fmul
insl
cwtl
inc
jae
lcall
add
pusha
mov
fwait
pop
mul
fimuls
lret
imul
outsl
cwtl
jecxz
jp
fwait
push
mov
pop
mov
push
dec
mov
mov
sub
in
pop
mov
fwait
aad
fidivs
jge
cli
sub
xor
mov
add
add
orl
shr
lret
pop
scas
push
sub
lret
lock
fwait
mov
mov
cld
ds
je
sbb
sub
add
add
push
mov
xchg
out
mov
add
jnp
mov
xor
insl
pop
clc
movl
add
add
add
cmp
scas
in
mov
mov
push
leave
lahf
fiaddl
or
or
and
add
add
add
dec
pop
xchg
hlt
add
bound
add
push
mov
test
push
adc
add
push
mov
add
add
add
popf
push
cmp
xchg
inc
pop
jp
loope
mov
jnp
jne
outsb
ljmp
add
or
lods
cmp
sti
mov
test
frndint
add
add
add
fidivrs
xchg
push
insl
cmpsb
and
inc
rcl
cs
add
add
imul
sarl
or
pop
in
jle
lock
loope
shlb
add
add
sub
add
add
dec
cwtl
push
mov
cli
hlt
insl
loopne
xor
cmp
mov
andb
adc
test
subb
adc
ficomps
ret
cmc
cmp
xor
dec
mov
loop
cmp
push
les
pusha
add
add
test
or
popa
jo
jecxz
jge
inc
mov
js
cwtl
mov
stos
sub
das
out
lds
pavgw
sbb
adc
in
mov
aam
mov
mov
subl
fstpt
lds
xor
sahf
dec
shll
jg
xchg
mov
pop
add
pop
pusha
add
add
out
mov
ss
add
add
xchg
mov
movsb
pop
add
mov
xor
jae
xorb
jae
fwait
movsl
shll
imul
mov
xor
sbb
add
test
arpl
push
cwtl
rorl
jecxz
adc
je
mov
and
lcall
into
sub
add
add
inc
add
add
pop
je
imul
fnstsw
push
mov
sbb
adc
and
mov
push
imul
ja
inc
pushf
sub
add
add
aaa
xchg
pushf
sub
add
add
mov
jno
mov
and
push
mov
fmuls
pop
pop
fcmove
xchg
adc
cmp
push
mov
add
push
xchg
out
mov
mov
sbbl
movsb
jle
push
call
fs
sbb
push
dec
enter
pop
xor
jle
pushf
rcrb
xor
repz
fisubrl
mov
out
dec
and
shlb
mov
mov
add
mov
mov
movsb
rolw
out
outsb
dec
jno
dec
mov
ja
cmpl
fisubrs
insl
sub
inc
repz
add
add
ja
mov
add
jae
mov
loopne
lods
mov
adc
test
stc
adc
shr
inc
lea
movsl
std
jle
cmp
mov
lcall
nop
cwtl
es
add
push
xor
add
pop
or
inc
shlb
lds
inc
mov
popl
mov
mov
push
adc
ds
inc
add
add
inc
adc
add
add
and
enter
mov
mov
cmpsl
shlb
cmp
add
out
and
add
add
adc
add
jo
pandn
test
inc
das
lods
cmp
stc
fadds
mov
lret
push
in
cmp
jl
frstor
add
add
test
adc
mov
into
pop
das
mov
pop
mov
xor
fisubs
xor
fldt
jecxz
fisttpl
icebp
mov
out
sahf
mov
sub
push
cmp
or
jl
mov
data16
add
add
add
xor
adc
adc
outsb
cmp
popf
lods
ja
adcb
mov
add
out
ret
adc
popf
ret
inc
mov
xchg
or
in
jmp
adc
add
xor
jge
and
ficoml
js
adc
pop
fdivl
in
adc
cmp
shlb
cmpsl
scas
mov
add
jbe
enter
adc
add
add
mov
add
add
xor
xchg
cwtl
or
jns
add
add
add
fbstp
gs
mov
add
jp
pop
pushf
clc
rcr
adc
hlt
rol
inc
xor
aad
dec
add
add
sti
adc
pushw
movsb
push
push
stos
ret
pop
pop
jp
cmp
clc
inc
jp
sub
cmpsl
mov
mov
mov
dec
add
add
dec
xor
dec
push
rcl
pop
cmp
cmpsb
dec
add
add
dec
mov
ja
sub
sahf
add
xchg
xor
add
add
fdivr
jl
pop
fcmovbe
ret
and
arpl
lea
add
pop
fistl
mov
mov
add
xor
add
add
incl
in
cld
pushf
mov
add
add
add
loopne
sub
add
push
or
mov
sbb
add
mov
leave
xor
add
add
js
add
add
add
nop
xchg
mov
out
xor
stc
daa
insb
mov
push
imul
mov
mov
add
add
aam
ljmp
popf
dec
addr16
rorl
lds
loop
mov
add
fsubr
cwtl
dec
inc
pop
lea
outsb
jne
imul
incl
mov
xchg
sub
je
add
add
add
add
cltd
adc
add
add
les
jmp
shl
mov
test
mov
mov
pop
addr16
lods
mov
in
inc
pop
insb
add
add
jecxz
push
pop
dec
or
sub
mov
fdivrs
in
iret
cvtps2pi
in
das
adc
sti
push
addl
add
add
repnz
call
add
add
test
out
and
fildll
vshufps
xorl
inc
xor
mov
add
adc
je
popf
sub
add
add
xor
daa
cmp
mov
add
addr16
add
add
add
addr16
pop
or
push
aad
cmovnp
test
xchg
mov
pop
arpl
jmp
add
xorb
scas
mov
mov
pop
jne
xchg
pusha
mov
insb
mov
stos
pop
lahf
stc
lcall
push
mov
push
lds
push
cmpsl
sub
add
outsb
pop
jmp
add
adc
add
out
adc
cli
jns
in
mov
push
fsubl
adc
adc
add
add
pop
mov
pop
dec
ret
xor
pop
or
add
add
aam
fsubp
and
add
add
mov
sbbl
popf
ds
fdivl
xchg
dec
out
lret
imul
dec
repnz
push
jne
in
cmp
lds
sbb
fisttpll
inc
scas
js
jo
popa
inc
mov
enter
popf
enter
inc
add
add
in
add
add
add
xchg
xchg
inc
mov
mov
fcompl
mov
and
add
add
adc
or
add
add
add
pop
jl
call
mov
add
add
push
call
add
aam
nop
sbb
add
add
mov
add
mov
int3
cmp
dec
jg
les
add
push
aad
mov
push
xchg
ja
add
call
jne
cmp
add
add
add
mov
lds
fwait
add
add
add
lret
add
push
testl
int
xchg
xor
dec
mov
and
add
lret
repnz
push
and
add
add
add
add
fstl
sbbl
add
pop
xchg
test
or
sbb
test
scas
mov
push
pop
sbb
in
imul
add
add
ss
addr16
pop
aad
inc
sbb
mov
out
hlt
leave
cmc
cld
ficoml
pop
mov
add
add
add
add
add
and
outsl
cltd
xor
fsubrs
nop
xor
inc
mov
rcr
fistpl
sub
and
fimuls
or
inc
mov
addr16
sbb
add
insl
ja
xor
cmp
adc
cltd
mov
jno
jl
cmpl
outsb
icebp
rcrb
or
add
add
add
add
add
sbb
rorl
adc
ja
and
add
daa
cmp
push
stos
or
and
ss
mov
popf
cmp
push
cld
mov
mov
clc
int3
lcall
add
mov
adc
sub
and
das
mov
add
add
add
add
pop
nop
xlat
inc
add
add
xchg
mov
aad
inc
jecxz
dec
or
mov
jge
dec
dec
sahf
es
mov
out
mov
add
push
ljmp
pop
mov
add
dec
cmpsb
add
lods
neg
mov
wbinvd
xor
fadd
inc
mov
int3
xor
test
int3
lea
mov
mov
pop
xor
push
popf
orl
addr16
jl
mov
inc
add
add
outsl
jns
cmp
cli
inc
pop
mov
add
cmpsb
xor
push
push
mov
sub
test
popa
dec
shll
loope
push
cmp
fadds
add
add
push
sbb
add
add
add
lock
jo
sub
out
lahf
sbb
mov
mov
jno
dec
inc
xchg
aad
push
ficoml
popa
pop
mov
jb
in
sbb
testb
add
popf
smsw
fnstsw
jns
lcall
xchg
mov
sbb
mov
loope
lahf
mov
push
xor
cvtdq2ps
pop
rcll
shlb
push
in
loopne
frstor
cmp
push
cmp
jo
push
push
push
pop
jo
mov
xor
sti
pop
push
fwait
push
cmc
clc
cmp
std
cmp
daa
jne
ja
mov
cmp
or
add
add
into
xchg
push
add
jg
outsb
and
add
add
push
push
sub
clc
in
out
incl
add
add
add
add
add
cmp
adc
sbb
add
add
loope
inc
push
adcb
add
pop
lea
pop
rol
xchg
inc
inc
stos
push
sti
cmp
pop
mov
and
rorb
outsb
iret
mov
add
mov
shlb
arpl
sbb
fdivs
mov
insl
outsb
in
xor
add
xorb
mov
inc
mov
add
sub
popf
addl
add
xchg
hlt
ficoml
enter
add
add
sub
sar
add
pushf
mov
dec
subb
fiaddl
sbb
outsl
jbe
and
add
mov
dec
add
add
ja
mov
or
add
add
lret
lret
imul
add
push
push
fbld
mov
jns
jb
loop
insb
mov
sti
push
push
cld
xor
movsl
push
mov
mov
and
sarl
xchg
pop
and
mov
adc
or
add
add
int
push
cmpsb
cld
fidivrl
mov
mov
add
add
cmp
out
shrb
aaa
mov
sbb
test
add
cwtl
or
in
jb
xchg
sarl
sbb
shlb
dec
pop
sbb
inc
jno
cwtl
xchg
iret
pop
dec
jb
outsl
mov
cwtl
fistl
shrl
add
add
pop
nop
adc
fidivrs
sahf
mov
pop
out
xchg
loop
js
int
mov
add
add
fisubrs
pop
sbb
ficoms
les
push
cmp
dec
add
add
or
push
les
subl
add
pop
sbb
pop
pusha
add
add
pop
xor
jnp
andl
add
icebp
ficompl
dec
movsl
sbb
or
push
pop
int
mov
or
mov
std
jle
inc
bound
push
call
add
add
xor
popa
adc
add
add
and
into
jmp
lea
test
faddl
fadd
arpl
xor
scas
dec
jo
aas
call
pop
iret
mov
stc
dec
mov
cli
jns
imul
add
add
add
bound
xchg
add
sub
into
daa
mov
add
adc
add
negl
sbb
push
inc
jl
ja
bsr
mov
cli
pop
subl
jp
jp
rorl
mov
cltd
push
mov
fisubs
mov
add
add
pop
mov
lret
ficoms
outsl
mov
add
into
in
jne
rclb
or
out
fnsave
ja
mov
mov
aas
xor
out
lods
add
add
fdivrl
cmpsl
cmpl
std
mov
and
or
rclb
cmpsl
sahf
pop
inc
jne
lahf
movsb
pop
pop
pop
push
bound
js
cmp
in
pusha
mov
lods
pushf
mov
aad
mov
jnp
sub
xor
pop
or
add
add
daa
test
mov
add
call
out
andb
fcoml
add
add
add
push
icebp
jmp
add
add
add
ljmp
adc
mov
or
sub
adc
ja
add
add
stc
stos
cmpsb
mov
hlt
push
ret
popf
loopne
push
jmp
popf
addl
add
add
rorb
push
inc
jle
insb
add
add
and
out
sbb
add
or
add
add
inc
mov
pop
mov
fs
stos
jp
mov
add
add
fdivrl
jg
pop
mov
and
in
nop
xchg
sarb
outsb
sarl
or
xchg
sbb
sbb
out
movsl
fnsave
pop
mov
lods
cmpsb
or
mov
sbbb
and
add
add
jb
dec
mov
lods
push
aas
fidivl
scas
xlat
cmp
pusha
mov
and
stos
jae
add
add
rolb
lods
rcr
dec
push
rorl
add
fdivrp
ja
stc
sbbl
lock
sbb
xchg
xchg
inc
add
loop
mov
add
add
add
pop
fmulp
push
cmpsl
rdmsr
movsb
push
inc
add
add
fwait
jnp
cmpsl
xchg
fsubl
mov
add
add
add
inc
mov
add
add
in
inc
and
or
jno
daa
pop
test
xchg
or
adc
inc
sub
iret
xor
pop
into
in
out
in
mov
cmpsl
cmp
stos
cmc
leave
add
xor
xlat
movsl
loop
inc
mov
xchg
push
pop
dec
sub
add
add
lcall
add
add
pop
mov
int
push
dec
ss
xchg
ljmp
sbb
scas
movsl
ret
fsubrl
cmp
jg
dec
mov
inc
aaa
xor
notb
cwtl
adc
mov
cmp
das
adc
dec
jmp
or
add
add
mov
call
xchg
jecxz
mov
cld
mov
lret
pop
nop
and
add
add
mov
nop
pop
iret
push
dec
push
mov
sbb
add
add
sahf
scas
adc
ja
cld
xchg
pop
sub
pop
mov
xor
repz
stos
adc
cli
pop
jecxz
xchg
pusha
add
add
pusha
add
add
cltd
lcall
xor
icebp
xlat
gs
mov
mov
fcom
stos
je
fildl
add
add
cmpb
sahf
mov
add
jno
inc
test
sarb
xor
mov
fs
clc
aas
add
fistps
inc
ss
and
add
add
fcmovb
sub
pop
cld
and
and
pop
stos
adc
out
movsl
mov
cld
push
lods
jbe
fs
fdivrp
mov
test
sbb
push
mov
add
add
xor
mov
mov
add
ljmp
jae
int
mov
dec
cwtl
mov
lret
xchg
pop
test
out
cltd
in
in
sbb
push
cmp
idivb
mov
aas
mov
add
ja
call
push
rclb
inc
add
add
adc
add
add
cmp
push
leave
dec
addr16
jae
enter
add
pop
mov
fldl2e
jns
scas
push
mov
xchg
jnp
or
add
add
mov
rcr
mov
add
add
add
aas
lret
ds
add
add
add
adc
dec
dec
push
lcall
push
sub
add
add
test
das
sahf
das
mov
dec
sbb
add
cmpsl
mov
dec
out
in
and
jnp
lock
iret
pushf
mov
movsb
cmpsl
int
cmp
add
add
push
movsl
cmp
jp
hlt
sahf
add
add
add
sub
push
dec
fdivs
push
int3
mov
mov
mov
add
add
fistps
xchg
inc
sbb
mov
dec
pop
and
xor
hlt
hlt
ds
add
scas
ljmp
pop
aam
setge
test
decb
pop
out
add
fwait
ret
sbb
arpl
jp
xor
add
add
mov
and
repnz
xchg
jg
mov
gs
shl
mov
inc
or
inc
add
add
or
add
add
add
or
add
add
arpl
lret
lods
cmp
push
test
or
add
add
insl
sbb
add
add
fisubrs
jmp
cmp
into
mov
add
mov
jae
test
mov
xor
out
imul
movsl
mov
add
fwait
scas
pop
sarl
jle
add
add
in
pop
jmp
add
add
jb
pop
adc
xchg
sub
into
mov
add
add
push
fcmovnb
jo
nop
sbb
int
mov
cli
pop
push
gs
jae
popa
lahf
incb
add
mov
jecxz
and
js
lcall
jecxz
jns
mov
shrl
in
adc
jp
inc
mov
sbb
mov
xor
add
add
adc
pop
xchg
jno
imul
jno
addb
dec
add
add
inc
add
add
ret
inc
add
add
mov
lcall
pop
jle
and
add
jbe
dec
add
add
add
aam
and
add
add
ffreep
inc
add
add
into
sub
movsl
or
ja
adc
ret
or
sbb
pop
xchg
push
dec
out
loope
push
add
add
add
enter
sti
mov
mov
mov
scas
cmp
aas
es
cmp
mov
push
out
xorl
idiv
mov
xor
inc
xor
add
mov
lret
add
add
jecxz
sbb
push
mov
and
sub
add
add
sub
imul
shrb
xor
mov
add
add
std
fisubrs
out
outsb
xor
nop
pop
inc
out
xchg
add
add
sahf
andl
xchg
idivl
xor
popf
das
push
stc
jno
ds
pop
stc
movsb
mov
dec
test
fidivrl
loop
testb
cwtl
mov
mov
cwtl
pop
push
sub
pop
mov
xor
add
int
xchg
mov
jge
mov
dec
add
add
pusha
mov
push
out
mov
sar
and
add
add
lahf
xor
sbb
negl
insl
push
std
xor
sub
add
add
icebp
pop
mov
call
add
add
inc
add
add
repz
pushf
add
cmp
scas
shlb
adc
cmovo
add
add
add
add
aaa
dec
add
add
cmc
push
fdivp
test
cs
xor
jecxz
negl
and
ret
hlt
lods
sbb
mov
lods
mov
mov
clc
xor
inc
in
jg
lds
stos
cmp
add
jno
loopne
xchg
mov
addr16
add
add
mov
add
add
call
mov
push
sbb
lds
jno
das
add
add
add
scas
add
scas
jo
pop
jl
jmp
sub
add
add
icebp
cmpsb
lods
or
add
add
jecxz
in
lods
or
lds
int3
loopne
leave
xor
fidivrl
cmp
pop
pop
sub
popa
inc
call
jb
xchg
enter
test
divl
add
add
add
and
add
add
add
add
add
popf
imul
sub
aaa
lds
in
es
ja
mov
mov
sub
add
add
mov
and
push
ficompl
and
add
add
mov
push
sub
add
add
insl
add
add
add
fbld
sub
add
add
push
int3
jle
push
es
or
cs
ret
jae
add
or
daa
ss
xchg
outsb
into
fisubs
mov
mov
sub
sub
push
mov
aaa
outsb
test
fistl
lea
add
add
and
add
xchg
test
imul
mov
jmp
cmc
add
mov
aas
cld
pop
mov
test
sbb
add
lret
or
add
cmp
adc
mov
xor
jp
adc
inc
scas
add
iret
fistpl
mov
mov
mov
push
sbb
xor
mov
imul
or
mov
add
add
dec
push
cmp
push
int
scas
jle
mull
mov
outsb
pop
js
jp
fs
pop
and
imul
and
ljmp
cmp
push
inc
iret
je
sub
popa
xchg
dec
cwtl
jp
enter
add
add
add
add
addl
mov
xchg
nop
out
es
mov
add
jl
ljmp
mov
test
or
pop
sbb
push
pop
jmp
add
adc
mov
mov
je
add
add
add
xchg
es
add
add
add
add
inc
add
add
or
imul
gs
ficompl
stc
add
ud2
in
push
cmp
in
push
movsb
out
incl
add
add
lds
clc
test
in
mov
cmp
push
test
mov
rcrb
fcompl
and
es
in
pushf
inc
cmp
mov
mov
and
orb
adc
dec
mulb
loopne
outsl
fidivrs
push
xchg
sub
add
inc
fchs
ljmp
add
add
mov
icebp
mov
add
add
or
mov
aaa
sub
add
add
popl
and
add
push
cmovne
push
xchg
add
add
add
add
add
cltd
sub
popf
mov
and
adc
mov
jno
xchg
inc
and
jo
push
inc
inc
pop
cs
add
add
sarl
cmp
lcall
xchg
out
js
mov
scas
cmpsl
or
in
jl,pn
lcall
loop
in
sub
pop
bound
inc
test
addr16
lea
nop
sbb
repnz
add
cmp
mov
jecxz
leave
outsl
push
int
sahf
sbb
pusha
add
add
dec
nop
mov
add
add
sub
incl
add
push
test
jne
mov
push
jae
and
add
add
fiadds
mov
add
add
int
sahf
push
mov
iret
push
test
add
stos
lahf
cmp
cmp
adc
mov
fnstenv
cmp
add
add
add
add
cli
negl
cmpsb
xor
add
xchg
or
add
shlb
lock
jle
mov
test
xor
add
push
inc
icebp
push
xchg
cmp
insl
cmp
std
adc
jecxz
push
in
repnz
enter
add
sub
add
add
leave
push
imul
mov
int
mov
testb
add
rorb
ljmp
add
aas
cmp
add
and
inc
daa
mov
mov
add
fistpl
arpl
cmp
push
cltd
cli
adc
add
sbb
insl
xchg
ds
add
scas
pop
sub
lea
inc
mov
lods
jbe
xor
pop
js
mov
mov
jecxz
jge
and
sbb
cmp
inc
jo
cmc
or
add
add
mov
or
add
add
loopne
dec
dec
insl
hlt
push
pop
stc
or
mov
lods
jnp
and
xchg
outsl
stos
push
xchg
test
lods
out
jno
cmc
sti
xchg
cltd
sbbb
cltd
aas
inc
add
add
xchg
test
lods
jmp
bound
outsb
mov
jle
mov
sub
add
cltd
xlat
xchg
iret
fnstcw
call
cli
ja
dec
imul
scas
inc
lret
aas
into
ror
loope
imul
mov
jp
pop
out
add
add
add
cmp
xor
popa
jnp
cwtl
fiaddl
out
sub
inc
mov
cmpsb
clc
jo
outsl
mov
adc
add
add
out
mov
jg
jae
div
sbb
add
or
mov
sub
add
add
jp
fadds
ljmp
cmc
mov
adc
xor
xor
add
add
xor
push
or
jmp
mov
adc
jne
add
add
xchg
pop
xchg
ret
xchg
negb
adc
lahf
into
mov
and
add
add
jb
incl
fdivs
push
cmp
out
and
lcall
push
pop
mov
pop
add
add
add
sub
mov
add
add
mov
push
out
inc
iret
and
incb
add
add
in
add
aas
sub
jl
mov
mov
fcoms
loopne
push
add
imul
cli
in
sahf
mov
aam
enter
xchg
sti
fdivr
adc
imul
std
in
add
add
mov
inc
fbstp
aaa
xchg
jbe
daa
pop
xor
mov
mov
jnp
icebp
pandn
add
add
pop
jne
and
add
add
shll
aas
adc
mov
sarb
add
add
fcoml
decb
push
repz
insb
add
add
inc
jnp
and
mov
mov
sub
out
push
sbb
cmp
adc
ror
mov
mov
int3
pop
pop
jno
sbb
bound
sti
fsubrs
add
add
add
add
lock
sbb
sbb
inc
mov
and
mov
negl
popa
fxch
sub
xor
inc
jno
rolb
pop
mov
jo
mov
add
stc
mov
add
add
je
or
add
add
lgs
loope
sbb
in
jge
daa
loope
add
pop
dec
std
cmc
std
push
fbstp
adc
lock
sub
or
add
add
aaa
jbe
xor
and
add
add
mov
int3
lahf
fnstenv
add
add
out
jmp
sbb
int3
ret
lahf
push
in
xor
mov
ljmp
mov
dec
xor
add
mov
add
cmpsl
into
in
jg
es
outsl
sti
pop
mov
pop
lret
int
fdivr
dec
mov
in
das
call
dec
and
add
add
xchg
popa
dec
mov
out
mov
repnz
jl
andl
stos
popf
leave
inc
int
push
das
in
xchg
lahf
pop
dec
mov
mov
add
jmp
sbb
xor
jle
xchg
add
movsb
sti
or
mov
add
pop
push
lret
add
add
add
add
rorl
mov
pop
jb
add
add
mov
iret
es
xor
xchg
jnp
xchg
sub
sub
mov
dec
push
ja
mov
in
and
pop
enter
add
add
sub
add
or
add
add
shrb
lods
popf
mov
pop
push
pop
stos
into
aaa
mov
adc
add
add
scas
loopne
push
jl
adc
sahf
nop
mov
frstor
mov
pop
or
aam
mov
mov
into
sahf
addr16
fbld
mov
xor
add
add
decl
adc
aas
mov
push
jbe
push
ss
xlat
testb
cmp
pop
lret
leave
push
lahf
mov
cmp
in
adc
fidivs
rclb
mov
add
data16
xor
int
mov
imul
mov
cltd
pop
xchg
adc
mov
add
add
add
int
out
pop
cltd
adc
add
add
and
clc
push
xor
pop
dec
mov
mov
add
add
inc
or
aad
into
ficomps
pop
scas
sbb
stos
dec
xorb
mov
push
jbe
hlt
and
imul
fs
outsb
movsl
out
inc
rcrl
scas
and
imul
loop
inc
sbb
jge
xchg
or
lahf
pop
stc
mov
sub
enter
adc
lds
cmpb
add
or
add
add
scas
or
add
add
mov
dec
or
ds
jbe
or
add
add
lea
add
add
sub
sbb
xchg
or
dec
add
add
pop
mov
cmpsl
sub
movsl
addl
mov
add
add
icebp
adc
cli
clc
inc
jns
jne
pop
dec
addr16
cmp
add
ja
jb
add
hlt
and
ret
add
add
lret
mov
add
add
inc
cwtl
inc
add
add
push
rcrl
loope
addb
add
add
add
add
jge
sub
iret
ret
ss
gs
sub
mov
jle,pn
out
outsb
std
xchg
and
sbb
add
mov
pushf
pop
data16
test
jmp
pop
mov
icebp
bound
push
popa
arpl
xchg
sti
sbb
andl
jl
shll
lods
pusha
add
add
pop
inc
out
fbstp
loopne
push
mov
ja
xchg
lcall
shl
mov
fdivl
mov
add
pusha
add
add
mov
in
std
xlat
test
jmp
mov
adc
subl
idivl
add
fisttps
add
xchg
pop
lods
pop
out
adc
push
push
popf
pop
movsb
ljmp
mov
sub
lock
repnz
adc
addl
shl
lea
jno
xchg
mov
sti
pop
enter
sbb
int3
fnstsw
mov
inc
hlt
mov
daa
mov
ret
jp
jno
and
add
add
add
dec
xchg
sbb
sahf
xchg
cld
xorb
notb
mov
mov
lret
mov
mov
adc
insb
add
add
add
add
cmp
pop
add
and
add
add
stc
inc
insl
loop
rcrb
add
inc
adc
enter
cwtl
jne
sbb
stos
jle
fidivrs
lods
adc
imul
enter
fwait
or
aaa
jge
movsl
movsb
push
imul
das
in
stos
daa
mull
shlb
add
add
cmp
enter
int3
xlat
sar
std
jl
or
mov
loopne
jge
mov
add
addr16
jge
subl
aaa
std
dec
and
add
add
xor
add
add
cmp
fstp
mov
push
xchg
icebp
out
mov
movsb
bound
add
add
mov
fidivl
js
add
add
movsb
mov
out
rorl
add
add
add
xor
add
movsl
mov
xchg
add
jno
pop
jno
loop
gs
imul
inc
and
int3
push
jmp
pop
xchg
mov
mov
dec
loopne
call
mov
data16
mov
mov
std
pop
lahf
push
sub
cli
jle
insb
add
add
popa
and
jne
repnz
ret
mov
add
add
xchg
or
add
add
imul
inc
sarl
test
add
mov
add
add
ja
mov
rdtsc
cltd
cld
inc
int3
dec
pop
push
jbe
outsb
xchg
loop
cmp
push
ljmp
dec
addl
fs
and
add
add
xchg
mov
dec
push
dec
xchg
cmp
xchg
sub
idivl
fcoml
mulb
add
add
mov
sbb
sbb
testb
cwtl
addr16
sbb
add
add
loope
mov
test
rorb
adc
jbe
mov
jbe
xchg
or
add
add
add
add
xor
or
add
add
imul
lcall
cmp
addr16
out
add
jns
jle
hlt
jbe
in
mov
mulb
add
add
add
add
jae
push
loope
xchg
add
add
inc
andb
inc
inc
inc
mov
push
shrb
pop
pop
shl
outsb
sbb
testl
jne
push
cmp
add
stc
sub
add
add
add
add
or
cmpsl
das
jno
sub
mov
in
push
sbb
ja
stc
push
jno
call
nop
push
pop
fsubrl
push
in
fdivrs
popf
es
xchg
idivl
add
add
popf
cmp
rcr
mov
adc
imul
test
arpl
test
sbb
daa
es
int
push
sub
add
add
fwait
repz
mov
jecxz
loope
xchg
gs
jno
lea
adc
loop
add
add
add
add
add
jo
cmp
daa
in
popa
xchg
or
mov
add
add
jle
fsubrs
mov
add
push
push
dec
fstps
add
add
cmp
fisubrs
lock
mov
jge
outsl
adc
fcomi
add
add
add
add
stos
test
and
fnstsw
mov
in
xchg
adc
hlt
int
leave
fs
and
add
lcall
add
negb
mov
es
ja
mov
pop
sbb
pop
icebp
scas
sub
psubusw
into
adc
add
add
rcl
inc
fildll
add
add
and
out
xchg
cmp
adc
psubb
mov
jl
test
pop
loopne
or
lret
add
ss
mov
call
fucomp
insl
lret
mov
and
add
add
add
pop
jge
push
push
lcall
adc
add
rcrl
cli
loope
rclb
jmp
add
add
lret
push
test
dec
inc
mov
xor
cmp
sahf
rol
stc
les
and
add
add
add
add
pop
push
cmp
add
add
pop
scas
xchg
arpl
das
dec
test
jecxz
enter
mov
mov
daa
push
mov
pop
mov
daa
add
sarl
adc
in
cmc
xlat
mov
sbb
fistl
in
int3
push
sbb
pop
sub
add
add
or
ljmp
add
fcomi
aam
add
add
or
add
add
mov
test
fimull
add
add
add
fcomip
and
adc
cmpsb
jecxz
mov
push
fsubrs
add
add
out
movsl
xor
roll
jge
lret
push
cmp
ret
outsl
inc
push
mov
push
xchg
imul
imul
push
push
push
jnp
xor
negl
jne
adc
cmp
jle
ret
mov
stos
es
pushf
clc
sub
add
add
shr
lock
mov
andl
mov
rorb
dec
mov
push
movsb
xlat
add
dec
mov
dec
decb
add
push
inc
shrb
add
add
mov
add
add
add
push
pop
push
mov
or
add
add
mov
add
in
outsl
sub
movsl
outsb
in
popa
fs
mov
push
dec
sti
into
popf
jmp
mov
scas
int3
mov
ds
bound
pop
cmp
or
add
add
dec
mov
push
scas
xchg
mov
mov
cmp
call
or
mov
mov
jne
xchg
roll
test
push
sub
dec
adc
sub
dec
add
add
cs
sbb
rcrl
dec
test
leave
push
lods
lods
cwtl
and
rcll
mov
xor
js
inc
cld
inc
addr16
jp
fnsave
enter
add
add
test
arpl
mov
mov
lret
inc
add
add
or
in
je
sbb
xor
into
xor
loop
add
add
dec
imul
ljmp
add
add
add
test
ljmp
stos
mov
outsl
xor
add
add
data16
pop
lods
dec
loope
fistpl
stc
mov
ret
loop
jge
mov
adc
in
jo
jns
and
add
pop
dec
ret
lods
rorb
lret
data16
loop
shll
insl
int
cmp
mov
addr16
out
les
push
or
pushf
jne
dec
or
pop
in
insb
mov
sti
fdivl
add
or
add
add
ja
and
add
add
add
add
mov
add
add
mov
xchg
mov
cmp
add
add
xor
popa
movsb
lahf
and
aam
and
stc
push
push
dec
mov
paddb
dec
sti
inc
lret
icebp
sbbb
mov
inc
rcr
leave
xor
cwtl
leave
icebp
cmp
mov
jp
mov
aad
dec
pop
enter
inc
stos
cmp
xchg
divl
xor
mov
stc
cli
loopne
cmc
jno
push
imul
shl
ljmp
lahf
sbb
add
jl
cmp
adc
out
cwtl
addl
movsl
dec
pop
clc
pop
push
loopne
cs
arpl
aad
and
aas
fcmovnu
sbb
int
es
add
add
test
mov
sub
mov
popf
cmp
ss
sub
add
add
aad
add
add
add
lods
dec
in
leave
sbb
add
add
shll
subb
pusha
mov
imul
add
add
inc
rcll
add
jecxz
iret
insb
mov
add
add
je
pop
add
cmp
in
adc
jge
sbbb
dec
push
rcll
add
and
add
add
cmp
lahf
dec
add
add
dec
call
cmp
sbb
arpl
add
add
jne
mov
mov
or
add
add
movsl
into
leave
cmp
lret
scas
sub
adc
int3
and
add
jno
jo
cmp
jmp
mov
and
xchg
jae
dec
xchg
xor
aaa
fs
test
repz
adc
add
xor
sbb
mov
dec
mov
in
mov
dec
clc
scas
mov
xchg
mov
ds
mov
jae
inc
stos
fisttpll
push
cmc
in
fsubrl
sub
add
add
fbstp
mov
mov
mov
testb
xor
lret
cmp
imul
push
pop
or
in
rclb
cmpsl
subl
and
add
add
xor
out
sbb
add
jp
xchg
pushf
sub
pop
loopne
and
adc
mov
sbb
add
add
mov
jecxz
xchg
imul
cmpsl
and
add
testb
add
mov
je
mov
add
add
add
add
dec
mov
sbb
mov
mov
mov
mov
add
xor
stc
cmp
adc
sub
subb
ret
add
jle
loopne
pop
sbb
push
dec
add
add
mov
sub
popf
ljmp
es
movsb
mov
mov
mov
push
mov
les
repnz
loop
addr16
pcmpgtw
adc
idivl
dec
or
cmp
int3
lcall
hlt
lods
fidivs
daa
insb
mov
add
add
fwait
mov
push
test
imul
mov
in
add
add
add
mov
sub
add
add
pop
aam
and
sar
add
add
addr16
imul
int
das
add
jg
xorb
add
add
add
and
add
add
sbb
and
add
add
out
cmc
imul
std
in
aad
cmp
push
add
add
and
add
add
data16
adc
mov
add
ror
test
xchg
add
add
cmp
sub
mov
jle
mov
adc
cltd
pop
and
mov
add
add
into
scas
push
dec
mov
add
add
outsb
andb
sbb
pop
sbb
fidivrl
add
add
lds
add
add
outsb
jne
adc
add
leave
pushf
cs
in
mov
fisubs
call
add
sub
into
inc
and
dec
ficompl
imul
add
add
add
add
cmp
ja
inc
cli
fsubl
int
push
push
add
add
add
loop
insl
test
sub
xor
lds
xor
add
add
fstps
sub
lds
add
add
frstor
add
cmp
and
add
add
push
mov
add
add
xor
add
add
mov
cmp
scas
sub
add
add
add
lock
push
data16
add
add
int3
jecxz
icebp
shl
mov
add
add
add
add
xlat
ljmp
mov
sub
cmpb
add
cmp
cmp
and
add
add
iret
pop
push
adcb
or
mov
dec
cltd
rcll
scas
outsl
cwtl
xlat
or
add
add
add
add
add
rclb
jge
rcll
xchg
sub
mov
add
mov
mov
stc
jns
xchg
lret
xchg
and
add
rep
or
xchg
jecxz
pusha
add
add
aaa
mov
add
push
in
xchg
xchg
out
ja
mov
mov
mov
dec
mov
sub
pop
mov
loopne
bound
add
add
cli
cmp
inc
sbb
xchg
xor
test
add
add
mov
add
clc
push
jnp
lock
mov
push
mov
pop
mov
pusha
add
add
add
add
xchg
repnz
fsubrs
mov
mov
add
add
push
loopne
notb
cmp
clc
or
mov
imul
sub
add
add
mov
adcb
lea
add
add
mov
add
jb
pushf
or
sub
mov
push
pop
insb
add
add
test
adcl
mov
test
mov
ja
jecxz
cltd
sub
push
or
cmc
xlat
or
imul
jo
xor
fistps
mov
stos
jno
jge
mov
pop
ja
pop
jae
enter
cli
sub
add
sbb
add
mov
jb
repz
outsb
and
add
add
cli
loope
sahf
cmp
add
add
out
out
clc
xchg
add
xchg
pusha
add
add
or
stos
sahf
pop
jp
mov
fidivrs
add
add
add
add
fs
mov
js
xchg
mov
xchg
xlat
rcl
xchg
inc
mov
mov
add
add
out
mov
iret
xchg
xchg
mov
add
jle
lock
mov
sub
add
add
out
rcrl
add
add
addr16
les
stc
cmp
inc
or
es
lock
pushf
cmp
loopne
pop
pusha
mov
out
sbb
sub
mov
fnstenv
pop
popf
and
add
add
divb
stos
xor
push
xlat
mov
add
ret
pop
add
xchg
and
pause
fnsave
imul
mov
add
add
add
mov
dec
mov
jle
fwait
imul
aam
mov
pop
fsubrs
notl
subl
in
cs
outsb
cltd
lock
mov
filds
insb
mov
rclb
add
xchg
fldl
cmc
outsb
pop
mov
in
mov
mov
imul
lahf
mov
cmpb
push
or
gs
clc
mov
cmp
in
adc
imul
sbb
push
cli
dec
stos
cmp
mov
jbe
dec
lahf
dec
jne
loope
jecxz
incb
bound
cmpsl
jnp
stc
je
mov
add
add
daa
mov
pop
iret
pop
fstpt
mov
xlat
mov
mov
out
shlb
add
add
pop
jmp
dec
and
add
xor
xchg
or
add
add
decb
add
mov
push
mov
inc
mov
lock
push
add
enter
add
add
add
add
add
fcom
pop
or
leave
shl
xchg
lods
scas
push
jge
adc
sahf
loope
sbb
mov
xchg
add
mov
imul
xlat
jne
add
add
and
add
add
das
cmp
cmp
jnp
inc
ficomps
dec
sti
rorl
add
dec
leave
mov
push
adc
pop
cmp
mov
mov
iret
xor
clc
lock
roll
inc
decb
sbb
inc
iret
xchg
mov
xchg
add
add
add
adc
inc
test
add
mov
mov
add
add
add
std
addr16
add
add
jp
add
and
rorl
ffreep
xlat
sar
mov
mov
inc
mov
add
add
testb
add
add
popf
mov
mov
stos
cmp
dec
sub
jae
aas
gs
incb
lret
mov
mov
movsb
shrl
sti
xor
add
add
pop
xor
pop
mov
imul
stos
mov
int
xchg
mov
js
gs
add
test
mov
movsl
in
mov
add
mov
add
cmpsl
mov
lret
push
frstor
add
add
jae
xchg
add
xchg
leave
push
xor
xchg
or
enter
subb
jp
imulb
data16
or
add
add
imul
add
add
lds
jecxz
or
pop
rol
lahf
mov
push
hlt
jns
loope
fldl
addr16
popa
inc
mov
dec
jl
cmp
xlat
mov
call
mov
movsb
pop
call
sub
add
add
shrb
mov
mov
or
in
push
adc
mov
jnp
fs
inc
fadds
jmp
add
xchg
flds
add
fnstsw
mov
add
adc
shlb
xchg
ret
enter
out
fdivrp
and
inc
add
add
jo
test
sub
imul
movsb
faddl
aam
cmp
repz
dec
inc
pop
pop
or
add
add
neg
je
cmc
insl
mov
push
and
add
dec
push
or
add
add
jnp
add
call
dec
mov
pop
xor
stos
stc
fsts
enter
add
jae
sbb
xor
push
pop
test
xorb
sbb
add
ja
sub
mov
add
sub
add
add
push
pop
idivl
adc
icebp
sahf
psubusw
xor
mov
cmpsb
outsl
cs
pop
stos
aam
or
add
add
inc
inc
imul
add
lea
aam
arpl
mov
inc
push
and
xchg
adc
sub
xlat
dec
mov
add
add
loop
pop
dec
pushf
je
xchg
xlat
cmp
jae
testl
repnz
repz
enter
in
inc
jmp
rclb
add
aad
inc
cmp
mov
mov
add
add
add
and
xchg
inc
inc
shrb
xor
push
mov
jo
testb
add
add
lcall
fisubrl
add
sbb
add
add
push
pushf
add
bound
add
add
bound
fucomip
shr
jbe
mov
jno
aam
ret
sub
test
mov
out
xchg
cli
pop
and
dec
lods
cmp
add
add
insb
add
add
icebp
fwait
push
inc
add
add
arpl
cwtl
add
ljmp
gs
and
add
add
ror
jo
sbb
push
mov
mov
or
test
mov
cmp
xchg
add
add
fisubrs
jge
in
insl
jns
sbb
push
or
dec
add
add
sarl
stos
cmpsl
fisubs
and
add
add
add
add
dec
push
inc
int3
mov
bnd
sub
push
loope
ljmp
sahf
pop
or
cltd
pop
fisttpll
add
add
add
add
jl
inc
pop
scas
push
add
add
add
mov
aas
in
dec
addr16
jl
xchg
or
fsubrl
and
add
insb
mov
push
sub
mov
inc
mov
add
test
inc
test
mov
jle
xor
sub
push
mov
xlat
imul
mov
idiv
lcall
push
and
add
add
mov
mov
shll
add
es
pop
rclb
out
adc
add
mov
imul
add
add
imul
xor
test
add
add
dec
push
sub
add
add
xchg
sub
mov
icebp
pop
je
jmp
push
ret
push
dec
pop
cmp
xor
pop
sbb
add
cmp
add
dec
mov
fcmove
and
add
add
inc
int3
xchg
outsb
imul
adc
add
add
mov
jno
xor
out
fwait
sub
hlt
cmp
lahf
mov
insl
sbbb
sbbb
mov
inc
mov
xchg
add
add
xchg
inc
add
clc
in
test
sbb
daa
pop
cmpl
fwait
testb
imulb
add
push
divl
add
add
mov
xchg
ficompl
lods
cli
loope
sbb
dec
add
add
pop
cmp
pop
lods
xchg
xchg
sub
add
add
add
add
add
add
or
add
add
mov
fisttpll
jns
lea
mov
inc
mov
push
add
jae
or
call
shrb
ss
dec
mov
fcomps
sbb
adc
std
push
mov
xor
xor
mov
setnp
mov
add
add
lock
daa
aad
or
add
add
lea
mov
sbb
fidivrs
add
add
mov
add
jnp
out
xchg
sbb
lock
lret
cwtl
jne
add
add
xor
add
add
add
xor
add
add
cltd
insb
add
add
popf
inc
mov
add
push
stos
dec
mov
cmp
mov
mov
outsl
outsb
sbb
add
fistpll
push
adc
pop
popa
daa
mov
out
fimuls
shrl
and
add
add
in
call
inc
cmp
and
std
insl
dec
out
ret
fprem1
push
adc
add
add
pop
fdiv
lods
call
add
add
andb
add
add
adc
pop
bnd
ds
add
add
add
add
imul
aaa
add
jo
ret
js
mov
fwait
rcll
jecxz
inc
sub
fnstsw
shlb
mov
shl
aad
sbb
roll
push
jb
into
insb
mov
cmpsl
inc
stos
xor
jo
inc
add
add
cmp
push
frstor
cmp
xrelease
adc
or
mov
rorb
add
pop
gs
add
add
dec
lods
int3
lret
out
gs
rolb
sub
hlt
add
add
cltd
stos
gs
mov
mov
decl
orb
adcb
add
push
scas
pop
xchg
fadd
jge
mov
add
stos
push
cwtl
es
in
inc
sbb
dec
xor
adc
lret
idivb
inc
subb
pop
test
sbb
int3
mov
mov
into
ss
add
ja
inc
stos
sahf
das
push
divl
dec
movsl
xchg
hlt
ret
fisubl
test
jb
js
out
rolb
les
stc
adc
and
push
fisubrl
movsb
rol
clc
or
frstor
into
pop
push
ja
mov
add
add
xchg
push
jnp,pt
lret
pop
stc
inc
testl
sub
mov
dec
add
add
inc
mov
push
in
into
shl
cwtl
mov
mov
sbb
adc
jb
clc
aaa
and
pop
shrl
add
dec
add
add
call
in
pop
mov
lds
ret
xor
push
pop
add
rclb
jbe
jbe
push
dec
add
add
sbb
xchg
add
add
xchg
sbb
push
fdivs
aad
das
mov
xchg
lods
xchg
aas
shl
adc
mov
sbb
lret
push
imul
popf
sub
mov
mov
add
add
es
leave
jl
insb
add
add
fbld
jne
fildl
pop
insl
pop
loope
mov
or
or
hlt
pop
fnsave
scas
lock
sahf
imul
add
orl
push
das
and
add
add
push
ss
out
xor
push
pusha
add
add
insl
inc
daa
cwtl
push
mov
mov
add
icebp
adcl
enter
fs
pop
gs
xchg
dec
jne
call
mov
adc
scas
bound
int3
sbb
fidivrs
nop
ret
ss
jbe
sub
repz
in
or
inc
pop
pop
add
jo
add
add
add
mov
imul
add
add
rcr
cmp
jne
mov
test
arpl
add
add
bound
sahf
dec
leave
daa
arpl
frstor
pop
and
add
add
add
repz
dec
sbb
imul
insb
mov
mov
mov
in
push
dec
add
add
stos
lods
mov
adc
cltd
dec
dec
add
add
xor
std
test
jne
jb
jb
movsl
mov
push
or
add
add
xchg
adcl
inc
insl
jg
mov
int3
rcl
movsb
loopne
lcall
nop
clc
cmp
add
add
in
ja
repnz
xchg
fidivs
aas
dec
or
push
mov
add
add
jae
ljmp
dec
or
add
sub
lock
add
add
add
iret
fisttps
or
adc
add
add
add
loopne
jbe
cmpsl
pop
arpl
test
ja
sbb
adc
gs
xchg
shrl
outsb
pop
ret
fwait
outsl
scas
or
add
add
ret
es
cld
inc
and
call
and
hlt
push
jns
add
add
movsb
sub
add
add
push
mov
cltd
add
aad
repnz
mov
lcall
inc
push
xchg
shr
sub
in
or
add
add
jl
loop
cmp
xchg
and
stos
scas
aaa
adc
mov
sbb
add
add
xor
xchg
adc
add
add
add
cmp
aam
decb
add
add
lahf
add
add
add
xchg
rorb
add
ss
jmp
add
push
adc
xchg
or
ret
lods
out
gs
movsl
or
add
add
lcall
add
add
loope
ja
cwtl
addb
add
hlt
jp
push
mov
imulb
mov
leave
enter
xchg
cld
out
inc
add
add
add
addr16
out
ja
mull
mov
pusha
mov
call
dec
mov
test
push
pop
sbb
hlt
mov
lret
scas
insl
jnp
adc
call
fscale
xlat
adc
xor
add
or
fxch
inc
sahf
mov
xor
lods
cld
add
add
add
mov
inc
push
lahf
lret
mov
in
jno
lahf
hlt
mov
sub
cwtl
dec
pop
mov
shlb
xor
rcll
lea
andl
add
rclb
cli
mov
jge
sub
add
add
add
xor
mov
jecxz
fwait
sahf
mov
test
xor
add
repz
fs
pop
push
xlat
xor
sbb
inc
add
add
inc
arpl
inc
jnp
orl
or
push
in
adc
jbe
lcall
jae
addl
jo
mov
nop
jmp
add
add
add
adc
mov
jb
push
cmp
fsubrp
pop
sub
test
lods
sub
ret
les
loop
dec
out
push
test
fistpl
jle
pop
jae
adc
sbb
add
fiaddl
or
out
mov
add
data16
addr16
or
outsb
cmp
aad
sub
cmp
insl
sub
inc
pop
xor
lea
lahf
out
sub
jmp
testl
inc
ret
xlat
int
adcb
fiaddl
add
add
jp
fsubs
add
add
pop
lds
test
dec
sub
pop
stos
pop
mov
int
xchg
adc
movsb
testl
sbb
out
mov
repnz
mov
lahf
jg
rcll
test
adc
in
outsb
data16
pop
mov
add
add
add
gs
push
lods
in
jo
les
add
mov
movsb
and
add
add
pushf
test
sbb
cmpsl
rolb
jecxz
push
adc
inc
ja
dec
test
add
add
leave
and
sub
push
or
sub
jne
xor
push
popf
adc
scas
ficompl
or
ret
adc
divl
mov
add
mov
cli
mov
add
xchg
add
add
add
int
mov
xchg
jp
movsb
mov
add
subl
add
pop
cld
filds
and
loopne
addl
shrl
outsl
sti
ds
add
icebp
push
test
mov
aad
and
push
jge
clc
lret
pop
mov
pop
push
xchg
addb
add
add
add
push
add
add
add
ficoml
std
sbb
aad
fdivl
cmp
add
add
fucomp
xor
mov
ja
sub
add
add
or
int3
jge
es
or
xchg
loopne
das
sbb
hlt
gs
xchg
sub
mov
mov
fidivrl
cmp
sub
sahf
mov
xchg
clc
lea
sub
xor
add
add
std
clc
das
dec
decb
int
out
out
in
dec
les
bound
fisubrl
or
add
add
test
pop
xor
jno
mov
hlt
in
and
or
jnp
dec
push
arpl
int3
push
ret
icebp
jbe
js
jg
adc
lcall
push
bnd
test
pusha
mov
push
fwait
je
lret
xlat
int
push
pop
and
mov
iret
dec
pop
sbb
push
andb
lock
stos
imul
cmp
xchg
push
decl
sub
push
lds
test
add
add
add
cltd
stc
and
lods
cmp
cs
aad
stos
andl
hlt
add
pusha
add
add
bound
rorb
mov
add
add
add
add
push
scas
jge
mov
cmp
ja
test
out
dec
add
add
lock
iret
push
mov
enter
mov
add
or
xchg
sbb
dec
add
add
push
fidivrs
std
dec
mov
fs
inc
mov
insl
cmpb
and
mov
test
push
mov
jae
es
xchg
adc
jnp
sbb
in
mov
cli
dec
add
out
pop
test
mov
or
add
dec
add
add
mulb
mov
mov
pusha
mov
addr16
repnz
cs
clc
xor
ficompl
sarl
add
add
xchg
pop
adc
add
fimuls
jmp
xor
cmp
loop
xor
insb
add
add
xchg
or
add
add
addr16
and
push
mov
fcomps
push
or
add
add
ror
mov
push
mov
push
loopne
mov
push
repz
arpl
add
add
mov
xor
sahf
out
cmpsl
xor
cmp
nop
movsl
fprem1
jge
lahf
and
repz
push
int
fucomp
xor
add
add
int
mov
sub
add
add
je
pop
rcr
jmp
or
add
fdivr
imul
add
add
pop
cmp
ss
data16
decl
int
xchg
out
adc
cli
addb
scas
loope
addr16
scas
jbe
mov
fnstcw
inc
add
add
jb
lret
fstps
iret
xchg
cld
fwait
and
mov
lahf
in
or
pop
fwait
fwait
adc
adc
cmp
es
pop
test
fnsave
ja
push
pop
pop
xlat
push
cmp
mov
push
mov
add
movl
add
popf
sub
mov
in
sub
add
add
pop
pop
cmp
nop
dec
add
add
scas
aas
loope
sbb
gs
mov
hlt
stc
bound
add
enter
inc
les
add
sbb
xchg
stos
sbb
push
in
cwtl
sbb
shrb
jl
stos
mov
add
add
in
into
movsl
fsubrs
incl
add
add
lret
sbb
neg
insb
add
add
sub
add
add
mov
mov
es
in
mov
loope
mov
shl
pop
xchg
cmp
xor
or
add
add
push
test
add
scas
cli
pusha
mov
nop
push
cmpsb
imul
push
aaa
mov
xor
sbb
in
inc
xchg
xchg
pusha
add
add
int3
jecxz
iret
sbb
cli
sbb
mov
outsl
cmpsl
push
outsb
mov
jb
add
add
add
daa
js
insl
lods
mov
lahf
sbb
adc
xchg
sub
add
add
lds
add
add
daa
inc
add
add
push
xor
push
dec
mov
sub
add
add
test
xchg
dec
popf
xlat
movsl
add
xchg
cmp
dec
fiadds
add
orl
inc
mov
push
jae
rcrl
xor
int3
push
lret
cmp
adc
add
add
popf
rolb
int3
scas
jne
or
push
imul
xlat
or
add
add
add
add
mov
sti
daa
mov
movsl
or
ljmp
pop
mov
push
sbb
lds
dec
je
jns
sbb
add
add
out
pop
xchg
fiadds
cmpsl
mov
lock
js
ss
dec
add
add
clc
daa
inc
add
dec
or
dec
and
sub
mov
jl
aad
jp
daa
and
inc
lret
scas
sub
arpl
inc
imul
add
mov
add
add
add
push
fisubrs
pop
xchg
lahf
jl
sbb
mov
fs
lock
add
add
fisttpll
adc
stc
push
movsl
sbb
ljmp
add
add
jb
sub
add
sarb
or
push
add
repnz
add
lahf
add
sub
icebp
repnz
mov
jns
push
and
icebp
scas
sahf
in
pop
push
xchg
mov
add
add
fsubl
push
in
in
mov
pop
jmp
test
add
inc
sbb
jge
xor
data16
adc
sahf
push
notl
sub
sub
add
add
testb
cli
add
shl
mov
sahf
imull
test
cwtl
sti
into
out
movsl
nop
sub
xchg
arpl
jo
adc
add
insl
or
add
mov
roll
cwtl
inc
mov
push
inc
mov
and
repz
pop
jbe
dec
xor
or
xchg
gs
xor
rolb
cmp
rcl
iret
mov
add
add
imul
mov
iret
call
mov
add
add
sub
add
add
mov
xor
mov
push
fsqrt
stc
int3
sbb
jb
inc
sbb
add
fs
andl
aas
shrl
call
add
add
pop
pusha
mov
test
jle
fisttps
add
add
dec
pushf
das
inc
mov
pop
aad
mov
jp
jecxz
push
push
xchg
add
mov
jg
mov
mov
add
add
lock
jnp
aam
dec
add
add
add
aam
inc
add
add
inc
cmp
je
addr16
or
xchg
jnp
jne
jne
mov
adc
add
xor
test
jle
lods
jg
test
pop
ds
lods
mov
lods
add
jge
sub
push
add
add
add
add
add
xor
xchg
xchg
testb
mov
jmp
andb
add
add
idivl
test
mov
pop
orb
les
imul
xchg
ficoms
loop
inc
fst
test
pop
pop
es
mov
adcl
mov
cld
sbb
jnp
loope
mov
lret
mov
add
add
jmp
lods
pop
add
mov
hlt
gs
adc
shl
js
clc
sub
in
clc
mov
adc
add
add
cmp
lea
cmp
pop
lea
push
pop
pop
fbstp
or
rol
iret
adc
mov
jle
sbb
xchg
daa
push
pop
xor
mov
jmp
dec
mov
and
add
add
xchg
sub
add
loope
sbb
add
add
push
jno
xchg
movsb
rcll
js
push
and
bound
cs
lds
cmp
iret
in
mov
rolb
inc
jg
outsb
fldenv
popa
cmp
idivl
mov
out
push
int
sbb
pop
js
or
add
add
in
cmp
bnd
insl
jge
mov
fcomi
stos
sbb
adc
sbb
cmp
fmul
push
xorb
mov
mov
sub
ret
out
push
mov
add
add
ss
lret
cwtl
dec
icebp
or
add
add
popa
pop
repz
mov
sub
mov
scas
in
xchg
ljmp
add
jge
xchg
or
adcb
or
pmuludq
shlb
add
bound
lea
mov
pop
jno
iret
inc
mov
pop
push
pop
hlt
mov
add
xor
std
cmp
add
add
or
and
add
add
cmpsl
xchg
shlb
aad
hlt
xchg
pushf
enter
fmuls
pop
fdivl
rcrb
xchg
imul
movsb
add
add
add
add
add
stc
and
aad
test
inc
adc
dec
popf
add
jae
add
pushf
xor
mov
fisubl
mov
and
repz
or
xor
test
add
add
add
push
shl
jae
add
jnp
add
add
add
out
cmpl
jmp
movsb
add
in
pop
sahf
test
pop
repnz
cmp
add
add
sub
add
add
test
and
jo
inc
add
add
inc
mov
pop
and
repnz
or
add
add
cltd
negl
cmp
mov
das
outsb
in
push
and
mov
dec
jo
jb
mov
mov
ja
jl
imul
add
add
fldenv
and
xor
leave
loopne
test
js
push
add
inc
add
add
add
dec
mov
mov
je
xchg
push
xor
pop
xchg
and
out
loopne
sbb
adc
repnz
add
mov
lods
aaa
jnp
pop
icebp
jnp
stos
inc
pusha
add
add
or
les
mov
push
arpl
add
add
icebp
xor
inc
mov
sub
jl
jmp
xorb
shlb
add
stos
dec
or
or
xchg
in
jne
inc
mov
xchg
orl
dec
add
add
adc
sub
mov
xor
jae
scas
mov
jge
movsl
mov
aad
xor
inc
pop
jbe
fcoms
pusha
mov
out
and
stos
fdivrl
stos
xchg
mov
sbb
mov
add
or
add
add
loop
je
dec
mov
nop
cmpsl
insb
mov
icebp
rcll
mov
dec
add
add
mov
out
sbb
or
cmpsb
ret
inc
shll
imul
movsb
pop
cmp
lock
add
jb
cmp
add
rcrb
adc
cmpsl
add
add
sub
add
add
clc
int3
or
add
add
imul
aam
loop
push
sbb
insb
mov
inc
add
add
xchg
dec
inc
test
ds
push
es
mov
add
add
add
add
int
dec
into
neg
dec
out
pop
adc
repnz
das
add
insb
add
add
add
add
add
push
sahf
fcmovnu
es
jp,pn
dec
ja
aaa
mov
fistl
add
add
sub
add
add
pop
mov
dec
add
add
adc
je
bound
xchg
mov
xor
pop
cs
xchg
sub
mov
add
add
jmp
jg
cs
test
mov
jmp
inc
loop
xchg
and
mov
jbe
scas
sbb
add
int3
lahf
outsl
into
inc
hlt
push
testl
push
stos
xlat
rclb
add
add
push
mov
inc
mov
roll
add
add
mov
add
add
mov
aad
loop
mov
mov
xor
addr16
inc
add
add
jecxz
loop
add
add
mov
outsb
push
int3
hlt
jmp
add
add
aad
mov
popf
and
add
add
inc
fildll
xor
add
ficompl
add
aaa
sahf
pop
or
add
add
mov
sbb
add
dec
add
add
dec
testb
imul
add
add
xlat
or
loopne
push
xor
shl
loop
pop
sbb
mov
imul
xor
mov
mov
enter
add
aam
push
int
xchg
jl
add
add
adc
outsl
xchg
adc
clc
xchg
or
add
add
add
add
pop
cmpsl
out
push
cli
mov
daa
ficoml
in
sbb
inc
insl
xor
add
ror
or
add
add
add
add
add
add
cmp
psrld
outsl
aam
int
adc
add
pop
lcall
push
insb
add
add
mov
sub
test
into
dec
mov
push
in
pop
jl
xchg
add
add
mov
add
xchg
xor
nop
jno
jg
push
push
push
popa
mov
add
into
and
jle
into
scas
leave
sbbl
add
mov
xor
xor
add
add
repnz
mov
pop
mov
push
loope
or
push
sub
insl
mov
sub
popa
dec
cltd
adc
das
punpckhwd
dec
cmp
add
add
xchg
xor
or
in
add
mov
iret
imul
popa
movsb
adc
stc
push
lahf
jle
pxor
popf
xchg
cmp
adc
jp
add
add
int
pop
push
jbe
in
mov
aaa
sti
jo
sub
add
add
sub
add
add
add
add
movsl
mov
add
sub
xchg
adc
lcall
dec
add
add
gs
fmuls
add
add
lock
lods
jmp
cmp
inc
jo
add
add
and
add
add
jae
pop
xor
aad
fstl
jp
push
pop
pushl
loope
add
push
and
xchg
jmp
mov
femms
nop
add
add
add
aam
sub
adc
dec
add
add
div
sbb
gs
sbb
adc
sbb
xchg
fstpt
jb
je
pop
inc
add
add
les
insl
into
push
das
mov
mov
add
movsl
int3
lret
mov
hlt
inc
cmp
sbb
add
stos
push
push
mov
add
add
add
out
fwait
add
add
add
jmp
pop
and
lret
repnz
inc
mov
mov
mov
rorl
push
daa
movsl
mov
push
xchg
jge
jbe
repnz
mov
pushf
jae
and
mov
lds
pop
std
mull
mov
cmp
add
push
jp
adc
xor
fwait
loop
mov
mov
mov
add
add
hlt
cmc
add
add
add
js
xorb
xchg
sbb
mov
mov
pop
scas
cmpsb
sbb
mov
push
je
shrb
mov
mov
pop
pop
sti
adc
add
ja
lods
mov
in
mov
pop
mov
add
add
add
add
in
mov
inc
scas
cmp
lds
ds
fidivl
lcall
push
or
ss
dec
je
cmc
push
cli
push
insl
lret
pop
cmpsb
jbe
add
add
in
inc
mov
mov
add
sub
add
add
mov
stc
lret
mov
add
subb
jb
xor
pop
cmp
xor
sbb
repz
out
rorb
repz
mov
fsts
js
adc
jne
sbb
cwtl
popa
jmp
cmp
hlt
push
imul
iret
lret
fmull
or
jae
cmp
lods
add
outsl
mov
addr16
lock
jl
xchg
cmp
or
leave
addr16
insb
add
add
jmp
in
mov
les
mov
sbb
add
in
cli
adc
enter
adcl
inc
mov
lods
je
add
add
lods
arpl
pusha
add
add
xchg
mov
mov
test
nop
clc
testb
rcpps
xlat
call
das
fdivrp
fldt
add
add
cmp
out
fdivs
jnp
outsb
ljmp
cli
sub
add
add
ss
adc
ja
xchg
test
pop
repnz
or
add
aad
sub
bound
fs
inc
or
add
add
and
repz
xor
inc
out
loopne
pop
out
mov
and
add
add
andb
jbe
add
cmp
xor
add
push
lods
in
and
add
add
dec
stos
dec
or
bound
mov
and
xchg
jecxz
ret
mov
call
push
nop
mov
imul
int3
pop
sbb
xorb
add
add
add
int3
lds
movsb
cmp
xor
pop
cmp
xor
xor
cs
test
add
add
mov
cmpb
pop
outsb
adc
xchg
fisubrs
add
stc
mov
cmp
add
add
add
push
jb
add
add
scas
leave
pop
aam
rol
les
rorl
and
add
add
sbb
add
xor
mov
test
mov
pushf
cli
and
sub
add
add
mov
add
ja
subb
sbb
sub
scas
sbb
jne
mov
mov
jecxz
stc
xchg
jge
dec
add
add
add
add
mov
cmpsb
ds
jecxz
xchg
cmc
cwtl
sub
pop
mov
or
add
add
leave
pop
cmpsl
fwait
or
sarl
leave
out
mov
pop
mov
add
sub
xchg
mov
pop
adc
hlt
pop
movsl
sub
xchg
out
sub
mov
mov
ja
test
ret
jb
test
fwait
sub
add
add
repnz
or
loopne
cmpsl
xchg
cmp
cmp
shld
shl
imul
and
int3
sub
xor
add
add
out
lea
add
xchg
adc
cmp
dec
and
imul
es
pushf
scas
or
add
add
mov
push
adc
jae
les
cli
adc
outsl
add
push
sub
add
add
pop
sbb
xor
add
lret
lds
sub
int
pop
icebp
xchg
mov
fisubrl
cmpsl
inc
add
add
sahf
lods
push
pop
pushf
pop
aas
dec
and
sbb
mov
add
jge
in
andb
add
add
push
jo
xchg
cmpsb
repz
add
xchg
add
fisubl
pop
jnp
iret
adc
mov
xchg
bound
negl
pop
and
aad
loopne
jg
jne
loop
pop
cmp
test
mov
sub
add
add
ret
add
add
imul
jb
sbb
xor
add
add
add
add
in
mov
repz
or
xor
test
sbb
enter
orb
ret
dec
pop
push
jo
add
add
adcl
mov
mov
mov
int3
inc
pop
or
inc
add
add
mov
aaa
idivl
jp
popf
mov
or
ss
sbb
mov
mov
sub
add
add
push
sarl
sti
movsb
outsl
add
add
dec
dec
and
add
mov
inc
inc
adc
add
loope
and
push
out
cmp
jle,pn
clc
insl
enter
jmp
js
lret
xchg
loopne
fdivl
xor
add
cmpsb
push
iret
mov
insl
pushl
popa
sub
xor
cmc
mov
jns
jmp
inc
into
stos
cmp
add
add
pop
mov
add
fildll
dec
push
outsb
xchg
inc
inc
out
call
or
iret
cltd
inc
imul
rorb
add
dec
add
add
push
xor
rorb
mov
jbe
movsl
xor
add
add
pop
or
add
add
add
add
pop
loopne
mov
push
mov
add
add
xor
mov
jne
adc
add
cmp
add
add
out
cmp
bound
cmp
cs
lret
outsl
fwait
rcrl
in
in
addr16
shrl
add
jb
inc
inc
int3
loope
jbe
rolb
add
and
clc
or
add
add
push
pop
xor
pushf
fwait
mov
loop
add
add
and
add
add
pusha
mov
push
inc
in
filds
ljmp
add
add
arpl
dec
sbb
lcall
jo
jne
sti
mov
pusha
mov
xlat
jmp
pushf
aam
js
fimuls
add
add
add
std
ds
or
cli
mov
pop
addr16
push
stos
lods
arpl
fmuls
or
add
add
cmp
cmpsl
sarl
movsb
inc
cld
mov
adcl
outsb
test
push
adc
sub
push
int3
iret
daa
mov
mov
loope
rol
push
leave
cli
lret
jb
mov
jmp
rcl
ds
inc
add
add
lcall
add
inc
sbb
test
jp
jle
fisttps
xor
test
stc
add
adc
and
aad
cmp
inc
sub
add
add
shlb
add
add
push
pop
stc
cmp
add
or
lock
test
les
lcall
cmpsb
cli
xor
mov
cmpb
cwtl
lahf
pop
sbb
sahf
test
rorl
add
test
add
add
and
dec
mov
test
jmp
pop
inc
cmpsl
mov
jo
cmp
push
push
pop
xchg
sbb
xor
std
mov
add
add
xchg
mov
xchg
jle
mov
ja
rolb
jle
and
ret
inc
lods
shll
push
in
pop
loop
hlt
mov
add
adcl
jns
cmp
jmp
inc
sub
add
add
mov
popa
or
inc
cmc
sub
lret
add
add
mov
aad
movsl
mov
loope
inc
outsw
dec
add
add
rcrb
jmp
add
add
daa
add
gs
lods
test
popf
fsubrs
xchg
add
add
add
jo
mov
fimuls
sub
mov
repz
fsubp
jge
mov
add
test
push
xchg
mov
add
inc
push
and
mov
inc
adc
mov
xchg
popa
mov
gs
mov
jp
add
add
ret
sub
xchg
xor
push
inc
add
add
iret
movsb
popf
les
sub
jle
mov
jmp
inc
in
xor
push
pop
inc
add
add
push
xlat
or
add
add
or
jb
jl
xchg
mov
add
dec
mov
add
add
test
add
jl
pop
std
cli
loopne
jne
add
add
lret
sti
xor
add
xchg
leave
mov
add
xchg
dec
mov
mov
leave
repz
cs
ljmp
andb
pop
mov
inc
push
scas
jae
cld
int
shl
mov
mov
add
aam
mov
data16
in
out
lods
or
add
add
xor
jb
in
jg
pop
pop
mulb
add
add
push
fstl
rcrb
mov
mov
iret
mov
add
add
add
inc
mov
push
loope
in
sbb
jl
xchg
imul
jne
xlat
push
sub
add
add
cmp
xchg
xchg
add
add
mov
rclb
adcb
sbb
jno
mov
inc
ret
cld
cmp
scas
xchg
fsub
inc
ret
ret
int3
mov
add
add
ret
dec
mov
xchg
add
add
add
outsb
loop
jo
sub
out
je
ds
add
popf
xor
add
add
jecxz
in
inc
mov
add
inc
lods
xor
adc
xor
mov
jmp
jp
mov
add
add
aas
mov
jnp
xchg
xor
mov
loope
hlt
mov
jle
add
add
fs
or
ret
add
add
ljmp
add
orl
cmp
dec
mov
out
add
fldcw
inc
mov
adc
add
add
and
pop
daa
inc
xchg
int
add
add
add
pop
and
and
mov
push
jne
cltd
add
into
pushf
sub
and
mov
stc
out
daa
mov
add
add
orb
add
out
aas
cmp
daa
fsts
push
xorl
pop
js
lahf
xor
lods
jns
cmc
pop
pushf
lock
xor
and
add
add
mov
ss
add
add
mov
rolb
add
ja
sahf
notl
adc
stos
cmp
shrl
das
loope
or
mov
cld
sub
cmp
insl
insb
add
add
sub
cmpsl
push
in
fidivrs
or
test
cmp
cmp
xchg
aad
rcrl
inc
fsubl
add
add
pop
je
lahf
test
iret
xor
inc
adc
mov
or
inc
add
add
hlt
test
pop
filds
sub
xchg
inc
add
add
insl
in
mov
fisubs
inc
mov
lds
xchg
mov
sbb
adc
jno,pt
imul
fsubs
dec
mov
and
mov
add
add
push
push
mov
add
movsl
lods
xchg
pusha
mov
lds
add
add
cld
out
adc
jne
pop
add
int3
push
fmull
idivl
xchg
cmpsb
or
add
add
les
lcall
add
arpl
add
add
scas
es
and
cmpsb
dec
pop
pusha
mov
fists
add
dec
mov
loop
add
add
add
push
sub
add
add
add
cmc
leave
mov
mov
mov
mov
out
push
or
in
jge
mov
pop
xor
jge
clc
and
add
add
test
jne
mov
cmp
test
mov
enter
add
add
and
mov
or
add
add
aas
scas
or
xchg
test
rcll
subb
add
dec
fs
jb
add
add
enter
stos
sti
gs
js
mov
sti
mov
into
mov
pmaddwd
cmp
fisttps
mov
mov
inc
mov
mov
add
add
add
add
iret
adc
adc
sahf
xchg
push
mov
or
push
and
pusha
mov
push
pop
jl
sub
inc
sets
sub
cmp
pop
mov
nop
mov
out
jb
clc
mov
lods
shr
insb
mov
in
rol
jne
sub
ds
iret
jge
xor
add
inc
add
add
jo
mov
ja
out
xlat
mov
ret
in
jp
add
js
adc
dec
add
add
add
mov
dec
mov
fcomip
inc
movsb
fildll
lea
mov
adc
imul
dec
add
add
das
ss
iret
lods
mov
es
cwtl
sarl
or
mov
mov
scas
stos
insb
mov
xor
popf
jno
ret
xchg
adc
call
push
mov
add
mov
add
xchg
rcrl
mov
and
add
add
scas
pushl
add
add
xchg
pop
mov
inc
add
add
and
pop
push
ficomps
stc
sbb
int
fwait
add
add
add
data16
add
add
mov
xor
push
xlat
scas
insb
add
add
dec
add
add
pop
and
xchg
sbb
pop
popf
ljmp
dec
dec
mov
cld
lahf
inc
pop
xchg
cmp
push
cmp
add
add
add
adc
push
mov
outsl
push
leave
es
loope
mov
repz
sbbb
cmp
aaa
fnstcw
movsb
imul
lcall
add
add
loop
addl
mov
push
jnp
xchg
popw
jl
sub
mov
xchg
mov
push
out
mov
push
hlt
xchg
addb
add
out
xchg
jge
push
push
clc
mov
sbb
in
lret
adc
test
arpl
mov
in
je
cli
ds
das
in
sbb
lds
neg
cmc
popa
or
dec
test
stos
xor
pop
sub
mov
nop
test
cs
add
iret
cld
es
or
das
mov
mov
pop
faddl
xchg
cli
mov
cmp
dec
std
imul
jb
pop
dec
ss
rcrb
gs
testb
add
jae
cmc
xchg
mov
test
in
mov
mov
cmp
mov
dec
mov
mov
shr
aas
cltd
test
popa
icebp
jns
adc
add
push
mov
test
cltd
lahf
iret
adc
add
dec
add
add
push
add
add
imul
mov
cmpsb
push
mov
add
and
js
push
lcall
fadd
mov
mov
loopne
inc
add
add
mov
mov
imul
rorl
add
add
pusha
mov
cmp
add
add
add
mov
cmpsl
jmp
add
add
add
add
js
lret
add
mov
cmpsb
dec
ljmp
add
ror
leave
in
mov
xor
fsubrl
jl
mov
add
rcrb
mov
aad
loope
and
nop
push
inc
mov
inc
xchg
lock
pop
pop
cli
stc
ljmp
mov
mov
mov
add
mov
shll
les
jae
sub
push
pusha
add
add
cli
inc
inc
dec
iret
jmp
or
stos
bound
ret
les
add
add
into
adc
add
add
mov
shr
scas
mov
sbb
frstor
test
sub
lahf
adc
hlt
xor
pushf
inc
inc
xchg
adc
mov
daa
jne
jg
ds
addr16
stos
inc
fidivrs
jmp
mov
iret
movups
stos
loop
lea
inc
mov
out
adc
mov
dec
repnz
mov
sbb
sub
add
add
xchg
lods
jmp
add
add
jne
pop
xchg
xor
inc
and
imul
push
adc
xchg
jae
stc
fldcw
rorl
inc
cli
mov
sub
pop
jnp
fdivp
xchg
inc
jae
rcll
mov
add
add
shll
add
adcb
and
int3
mov
insl
cltd
cli
gs
in
push
jnp
push
mov
xchg
in
call
add
in
or
add
add
xlat
or
dec
or
in
sbb
std
cmc
aas
jl
pusha
mov
rorl
add
or
add
sarb
and
add
add
in
inc
repnz
popa
stc
add
add
add
insl
push
inc
mov
out
jl
shll
xlat
and
or
add
add
add
scas
jno
jl
mov
inc
popa
sbb
jns
dec
xor
stos
aam
cltd
aaa
pop
scas
out
push
in
int3
mov
ljmp
scas
hlt
pop
loope
lahf
pop
push
pop
sub
add
add
pop
xor
lret
outsb
ljmp
mov
cmp
jmp
ds
repz
stos
insb
mov
push
rcrl
dec
jg
push
std
push
mov
das
push
popa
pop
xchg
das
cmpsl
in
js
sahf
add
add
jmp
or
add
add
lods
int
jne
sar
ret
jb
mov
add
testb
adc
push
and
repz
mov
add
add
add
insl
sahf
repnz
push
out
je
mov
sbb
addb
add
add
add
cmpsl
bound
shlb
sub
or
add
add
mov
lahf
int3
mov
fnstenv
fistpl
add
xor
add
add
mov
adcl
int
add
add
ss
add
add
xchg
outsb
ror
leave
cwtl
jne
cwtl
jno
cmp
pop
js
mov
stos
dec
outsb
fiaddl
ret
in
add
sti
clc
mov
jb
pop
stc
rcl
and
or
inc
sbb
sbb
loop
aad
popf
push
fcom
jp
xor
sub
dec
xchg
dec
pop
and
jae
cs
xor
push
fwait
shll
sub
loop
jmp
outsl
and
add
add
mov
repnz
add
pop
add
mov
int
mov
jg
add
jns
fdivrs
cmpsl
or
add
add
enter
incl
mov
xor
data16
add
add
test
inc
nop
js
fisubs
sbb
mov
add
cld
jo
mov
add
add
sub
add
add
lods
push
mov
dec
xchg
clc
add
in
bound
add
add
mov
add
es
push
in
sub
mov
add
add
dec
mov
add
add
sbb
test
jne
out
pushf
and
aam
jg
sub
fndisi(8087
mov
sbb
xchg
push
and
cmpsl
cmc
mov
sbb
jns
mov
lock
and
add
add
cltd
jns
and
scas
inc
stos
das
jg
sub
push
daa
shrb
add
add
or
jle
mov
stc
sub
inc
add
add
and
mov
outsb
and
lock
dec
and
arpl
jle
or
add
add
test
mov
fmull
add
add
ss
xor
adc
lds
iret
sarl
inc
dec
inc
daa
dec
and
rclb
sarl
add
mov
add
add
notb
add
and
add
add
push
repnz
add
pop
imulb
sbbb
pop
outsl
addl
mov
imulb
leave
mov
mov
xchg
fadds
add
add
mov
sub
add
add
mov
jle
sti
jle
lods
divl
sarb
and
addb
and
add
add
add
add
ficompl
sahf
mov
dec
add
add
adc
cmp
add
add
mov
jecxz
lahf
stos
jnp
rorb
sbb
and
inc
sub
or
iret
pop
iret
add
add
add
in
jb
rcrl
popf
push
adc
movsb
shl
push
lret
popa
xchg
insb
mov
sub
inc
mov
xor
stc
mov
or
add
syscall
fists
add
add
cmp
imul
jmp
insb
add
add
mov
mov
add
jae
inc
lock
add
add
cmpsb
test
inc
jbe
fdiv
or
add
sbb
loopne
mov
stc
out
add
add
add
aad
or
bound
add
jns
orb
jae
or
add
add
mov
xchg
ret
stos
popf
xor
mov
mov
add
add
je
fwait
iret
mov
add
jge
cmp
mov
add
pop
or
add
add
cmpsl
mov
mov
or
incl
add
push
je
adc
push
inc
pop
leave
cmpsl
xchg
push
mov
cmp
inc
add
add
add
cmp
cmp
cmpsb
cltd
or
push
mov
lret
ss
jbe
adc
in
xor
push
ja
push
cmp
add
add
in
ret
lcall
add
add
mov
int3
fs
or
add
add
out
test
xorl
push
mov
xlat
pop
adc
and
cltd
icebp
das
sub
xchg
scas
push
dec
repnz
add
add
shl
int3
fisubl
in
or
sub
jno
dec
lahf
sub
add
add
jg
sbb
jo
or
imul
repz
or
add
add
xchg
popa
sbb
add
add
or
clc
and
pop
and
popa
cmc
loop
dec
mov
sub
add
mov
and
stos
lds
mov
aas
bound
sub
push
add
add
add
mov
pop
jo
mov
inc
jnp
and
ret
ret
mov
pop
daa
push
xchg
ret
mov
or
pop
push
mov
add
and
mov
test
push
sub
add
add
add
add
out
mov
and
add
add
add
fistpll
pop
rolb
sarb
and
movsb
popa
pop
fistpll
repz
inc
fists
cld
mov
jno
jnp
clc
and
inc
test
jno
dec
sub
add
ror
pop
inc
push
sbbl
pop
inc
mov
ret
ret
mov
rcrb
pop
sahf
shl
fwait
loopne
jne,pt
sub
cltd
shr
xchg
ds
sti
jno
imulb
xchg
testb
pop
jne
push
movsb
fcmovnb
xchg
inc
xchg
sub
mov
stc
mov
orl
add
add
incl
cmpsl
aam
punpckhwd
pusha
add
add
in
mov
cmc
sarl
pop
sub
add
add
int3
and
mov
sub
add
add
sbbl
outsl
hlt
and
filds
push
inc
adc
into
clc
repnz
sub
add
add
pop
add
sbb
push
popf
nop
mov
into
cmp
cs
je
icebp
push
leave
hlt
ja
mov
orb
mov
push
pop
jmp
lret
jno
jne
push
jp
cmp
push
imul
repz
dec
push
scas
pop
insb
mov
mov
hlt
roll
add
add
push
jne
xor
fstpt
lret
pop
push
mov
xchg
xchg
adc
add
add
mov
sbb
and
add
add
cmp
cmpsb
les
shrb
gs
adc
gs
add
add
rol
pop
sub
inc
add
add
mov
add
add
addr16
add
add
mov
add
fldt
add
in
out
mov
cld
or
mov
inc
push
addr16
shlb
add
dec
add
add
adc
bound
mov
loop
cmpsl
mov
mov
fstpl
ja
data16
mov
mov
std
jg
push
sbb
add
rcrl
lods
pop
push
or
cld
dec
add
add
pop
dec
pop
add
sti
push
int
mov
aas
xor
mov
cmc
xor
jbe
lret
ss
sbb
lods
inc
std
and
mov
pusha
add
add
mov
es
and
lret
add
add
add
imul
add
sub
jne
push
insl
mov
adc
add
test
jecxz
mov
stos
or
add
add
add
add
ret
loopne
ret
dec
fimuls
add
add
add
sub
lcall
push
cltd
jl
sub
add
add
jle
adc
xchg
cmc
rcrl
movsl
mov
add
pop
fs
mov
xchg
lret
frstor
add
mov
out
and
add
add
dec
add
add
andb
dec
pop
sbb
add
ret
ds
inc
sbb
add
popa
and
dec
add
add
movsb
fnsave
ret
xchg
xor
fsubp
add
popf
inc
xor
jnp
lret
xchg
xor
test
test
aad
aam
jae
sbb
add
and
inc
cmp
cmp
add
add
loopne
movsl
fsubl
add
add
outsl
add
outsb
xor
ret
lret
cmpsb
mov
sti
push
inc
pop
leave
aaa
pop
loopne
mov
subb
xor
daa
lcall
sahf
lds
add
add
jns
sbb
mov
xor
sbb
aam
xor
adcl
sbb
mov
mov
imul
sub
in
xor
inc
add
add
lock
lea
add
add
rol
aam
pop
bound
in
push
xchg
fadds
add
xor
add
mov
mov
adc
imul
outsl
jecxz
insl
in
daa
xlat
inc
clc
call
stos
nop
aam
mov
clc
addr16
fistpll
dec
xor
fld1
shrd
and
adc
aas
repnz
mov
mov
sahf
test
add
add
mov
push
idiv
nop
sub
mov
add
add
add
add
jecxz
pop
dec
pop
dec
call
or
add
add
es
rolb
add
add
adc
mov
loopne
push
add
add
add
add
xlat
push
xorb
stos
mov
es
sbb
out
pop
xchg
dec
xchg
movsl
jae
in
mov
mov
nop
pop
mov
jl
fadd
pushf
cltd
mov
in
insl
and
add
add
gs
xor
ret
add
add
mov
xor
insl
loopne
pop
repnz
inc
nop
mov
mov
sbb
es
jae
xchg
int3
aas
jmp
aam
nop
imul
cwtl
lret
mov
bound
jns
jnp
lea
out
pop
pop
mov
nop
test
fwait
xchg
fwait
rorl
pop
jecxz
fistpl
and
add
add
adc
mov
mov
cwtl
add
loop
imul
shr
sbb
test
fistps
add
addr16
mov
add
add
add
daa
es
and
mov
test
add
enter
imul
cs
negb
addr16
ljmp
xchg
out
movsb
sbb
xchg
xor
mov
sub
faddl
std
mov
add
add
add
sbb
add
add
or
mov
pop
gs
push
xchg
movsl
sub
cmc
popf
lods
xchg
out
jns
sti
daa
and
js
sbb
add
add
adc
dec
sarb
lret
mov
cmpsb
orl
add
add
sbb
mov
cwtl
sub
add
cmp
dec
in
stc
jge
mov
std
jle
ja
mov
add
lods
and
or
icebp
jno
inc
jnp
loopne
mov
fstps
mov
dec
mov
add
add
and
add
jno
pusha
add
add
mov
cmc
mov
std
jae
mov
mov
mov
add
add
mov
shr
push
shl
mov
aad
outsl
adc
into
in
les
add
add
leave
jl
push
imul
add
add
adc
add
dec
mov
dec
xchg
xor
add
ljmp
mov
adc
daa
aas
ss
cwtl
push
xchg
jno
pop
dec
insl
sub
add
add
add
lcall
and
add
add
sub
mov
shll
push
jne
ljmp
mov
rorb
add
mov
and
ljmp
test
mov
xor
add
add
orl
mov
mov
scas
jmp
and
add
add
stc
or
mov
push
aas
hlt
test
stos
je
add
add
test
mov
popa
insl
adc
mov
sub
lcall
cli
xorb
pop
jb
cmpl
sub
jmp
xchg
mov
sarb
add
fdivr
push
mov
sub
add
add
add
add
das
decl
push
jge
fildll
addb
add
add
add
or
fdivr
les
push
fnstenv
dec
imul
mov
cltd
add
add
add
or
add
add
add
bound
xchg
pop
in
mov
cmp
lcall
stc
cli
sbb
cwtl
cld
adc
std
scas
xor
add
add
mov
aas
and
fcmovnu
ja
xchg
and
mov
jnp
gs
add
or
imul
shll
push
dec
mov
sub
sub
add
add
aaa
ja
mulb
add
add
cltd
sti
pop
lods
popa
mov
or
add
add
mov
and
idivl
cs
jno
dec
mov
dec
adc
push
inc
pop
cmp
and
add
add
insb
mov
scas
lcall
xchg
dec
popa
enter
sub
mov
outsl
or
imul
dec
int
shlb
lahf
pop
mov
outsb
xchg
cs
ficompl
pop
es
inc
xor
sahf
js
fldz
mov
pushf
push
xlat
insl
mov
mov
mov
sbb
xchg
add
data16
mov
shlb
cmpb
aaa
mov
aad
ds
pop
lcall
nop
xor
xchg
jge
mov
jl
hlt
jns
jge
xchg
mov
and
jns
add
add
sti
stos
xlat
dec
add
add
or
push
xor
or
in
inc
subl
iret
outsb
sub
add
add
sub
add
add
pop
jbe
pop
xor
add
add
add
and
add
add
jbe
add
add
ljmp
repnz
add
jl
adc
sbb
add
add
add
push
push
or
ds
imulb
out
push
jo
mov
sbb
pusha
mov
adc
or
xor
add
add
add
add
sti
and
icebp
cwtl
test
ficompl
xchg
js
lcall
add
adc
xchg
iret
add
sti
sbb
lret
push
sub
rcrl
xlat
cs
jmp
add
out
jp
mov
add
mov
add
inc
add
add
push
frstor
and
jecxz
lret
insb
mov
in
lods
add
cmp
and
fcoms
push
scas
test
mov
push
gs
sarl
sbb
push
mov
adc
cmp
daa
cltd
popa
pop
fucomp
xchg
stos
push
outsb
cmp
push
mov
mov
or
outsl
xor
add
add
dec
add
add
xlat
ss
and
add
add
cld
xchg
stos
in
sub
mov
add
jbe
mov
mov
mov
cmp
xor
xorb
add
add
call
pop
jno
mov
add
int3
lret
rcll
mov
pop
sub
jmp
aas
xor
add
add
sub
add
sub
mov
xchg
xor
pop
rclb
jp
sub
mov
inc
in
ror
fnstsw
adc
pop
inc
mov
add
add
hlt
call
xchg
jecxz
mov
mov
push
fsubl
mov
jo
mov
mov
add
subb
js
out
fbld
add
je
dec
lock
dec
mov
bound
lock
push
mov
inc
mov
icebp
push
fidivl
js
sti
jl
arpl
xchg
fs
add
and
in
fdiv
lret
add
add
ss
shl
mov
fwait
jecxz
add
add
rclb
xchg
adc
jg
test
icebp
ret
lds
add
lock
out
sbb
add
add
or
mov
mov
or
inc
jp
xchg
mov
lahf
in
nop
repnz
mov
push
xor
stos
out
and
add
add
inc
jns
cltd
leave
push
push
dec
or
add
add
mov
mov
add
add
ffree
mov
jmp
in
push
in
mov
stc
lods
add
add
add
cwtl
cs
das
leave
arpl
add
cmpsl
pop
ss
repnz
push
nop
mov
stos
test
call
add
add
add
add
daa
xchg
inc
push
xor
mov
add
add
jns
mov
inc
sbb
and
in
decb
mov
add
dec
jl
lds
push
and
and
mov
shl
inc
nop
mov
add
scas
xor
lock
sbb
adc
sub
jp
add
add
jl
push
and
ret
jns
pop
xlat
cwtl
lock
lds
mov
adc
lea
push
test
add
add
push
jo
push
pop
push
push
scas
fdiv
cmp
mov
popa
decb
adc
fsub
notl
sub
add
mov
push
pusha
add
add
fstp
push
xor
fmull
aaa
bound
add
add
xlat
xchg
mov
add
dec
dec
adc
and
add
add
pop
dec
add
add
movsl
sbb
mov
test
dec
out
test
cltd
mov
xor
fimull
fnstenv
stos
int3
xlat
cmpsl
jae
mov
mov
lret
lock
addb
add
add
mull
add
add
xchg
mov
ret
push
js
inc
dec
add
add
mov
add
dec
fadds
add
add
mov
mov
add
lret
inc
add
add
adc
mov
inc
inc
add
add
xor
fidivs
or
cmpb
xchg
ret
dec
mov
add
xchg
ret
dec
or
add
add
push
test
mov
jle
add
add
add
cmp
jbe
mov
add
or
pusha
mov
add
push
je
test
and
add
add
loop
pop
push
sbb
cmp
push
int3
ja
aad
sbb
adc
inc
lock
lahf
aad
jb
scas
jns
dec
mov
enter
in
push
mov
jge
sbb
add
ljmp
and
pop
mov
dec
add
add
add
test
icebp
and
add
add
mov
std
mov
das
xchg
fnstcw
cs
add
add
shr
clc
jne
ljmp
pop
adc
add
push
dec
fimull
ja
arpl
in
addb
add
add
repz
or
push
loop
jle
jo
aad
icebp
cmp
mov
jmp
add
add
dec
cwtl
xor
icebp
fdivr
jo
jp
add
add
add
jo
jb
dec
out
add
nop
mov
bound
add
add
and
cli
insb
add
add
pop
mov
cmp
cmp
mov
mov
xchg
mov
pop
xchg
cmp
xor
jmp
iret
cld
sbb
mov
mov
shlb
xlat
push
cmpsl
mov
nop
lock
add
add
xchg
mov
pop
and
add
add
xor
mov
stos
xchg
xor
mov
xor
xchg
dec
jns
rcll
mov
cwtl
dec
mov
js
mov
lea
mov
add
add
add
add
add
shl
xchg
xor
call
fimull
sarb
stos
fcmovnu
mov
add
test
xchg
xchg
jp
mov
lds
jmp
xchg
fldenv
movsb
dec
add
add
out
mov
pop
sahf
pop
sti
lahf
shrb
es
sub
or
add
add
hlt
repz
js
dec
dec
mov
ds
jnp
inc
mov
mov
mov
cmp
and
add
add
add
mov
add
and
add
add
cli
sbb
add
add
cmp
je
sub
add
add
adc
loope
adc
imul
jge
imul
add
lock
add
add
aaa
sbb
fidivs
fcompl
add
add
add
add
add
or
sub
mov
insb
mov
mov
outsb
fstp
pushf
lret
xorl
inc
sbb
cmp
fwait
mov
shrb
push
jb
push
mov
sti
and
sub
add
add
add
push
mov
adc
aam
pop
pop
je
jbe
sub
add
add
add
add
test
mov
fstpl
xor
ja,pt
ds
and
add
add
ja
gs
in
cltd
out
inc
jl
stos
test
and
xchg
mov
ds
add
add
push
lidtl
add
fldcw
push
stos
add
pop
andl
cld
jmp
xchg
sub
add
add
notb
mov
movl
mov
mov
add
add
mov
je
add
add
dec
push
mov
orb
add
add
and
fisttps
add
mov
add
sbb
sbb
bound
mov
add
xor
push
add
add
add
and
add
add
xchg
mov
or
scas
sbb
shlb
pop
int3
lea
mov
pop
pop
divb
add
aas
flds
dec
pop
inc
mov
cmp
xchg
mov
jp
fcoms
icebp
repz
xor
add
movsb
ljmp
mov
inc
sub
add
add
cltd
pop
mov
sub
add
add
add
add
fidivs
mov
sub
add
add
jo
aad
into
mov
sbb
dec
cmp
call
cwtl
out
cmpsl
dec
jo
outsl
fs
mov
fmul
xor
jo
aad
repnz
add
add
pusha
mov
scas
cmpsl
shlb
add
test
adcb
out
es
xor
imul
mov
xor
xor
loopne
in
jbe
in
push
test
stos
ja
aas
addr16
rcrl
add
or
add
add
cmpsb
aam
test
add
add
dec
out
cmp
repnz
sub
add
xor
sbbl
nop
in
xchg
cmpsb
push
xchg
and
add
add
int3
push
fsts
push
fstpl
mov
mov
shlb
push
inc
out
or
add
add
dec
add
add
mov
movsl
mov
xchg
or
loope
gs
push
sbb
stos
dec
add
add
fimuls
cli
clc
pop
pop
lds
push
lods
mov
add
sbb
cmp
and
jae
add
add
xlat
addr16
mov
adc
add
add
add
jle
mov
ss
cmp
fistpl
mov
mov
inc
enter
push
and
add
add
cld
sub
jns
cmpsb
pop
add
add
add
ds
das
and
inc
in
jb
movsl
xor
test
and
push
push
push
fdivrs
sub
add
add
pop
pop
sahf
jno
mov
or
rcrb
lock
popl
jecxz
lods
jg
dec
mov
lret
mov
sub
jbe
sbb
adc
xor
fcomip
push
cmp
push
pushf
jo
mov
mov
jb
pop
mov
lock
lret
frndint
add
cmpsl
lds
push
out
es
pop
scas
mov
cmpl
xchg
dec
decl
add
add
ret
enter
dec
stc
inc
sub
pop
pop
hlt
xchg
jl
notb
ficompl
push
cmp
jae
mov
add
mov
mov
aad
jbe
jne
fnstenv
lcall
xchg
jb
out
push
repnz
cmp
sbb
subl
add
adc
cmc
dec
mov
outsb
sbb
cmp
scas
idiv
xor
inc
fs
or
add
add
mov
pop
je
test
dec
fsubrl
add
xchg
dec
add
add
out
inc
dec
mov
iret
add
add
jl
add
add
mov
mov
add
add
xor
add
add
mov
pop
xor
xor
orl
js
adc
and
repnz
mov
lea
sbb
loopne
mull
push
sar
fldl
repnz
mov
add
add
int
mov
push
in
repnz
mov
mov
mov
adc
adc
add
add
push
aas
cmc
pusha
add
add
cwtl
pop
lret
dec
paddsw
mov
push
and
lahf
mov
enter
xchg
adc
jge
add
add
sbb
iret
push
dec
mov
mov
js
iret
pop
mov
sub
data16
clc
lret
cmc
out
mov
add
movsl
pop
in
data16
shlb
das
jecxz
and
mov
adc
mov
sti
call
out
int
cmp
mov
icebp
lods
xchg
fadds
add
lea
or
add
add
std
cmp
popa
inc
cmp
in
imul
cmp
lds
jecxz
rclb
add
mov
sub
add
add
not
or
jbe
into
imul
and
add
add
mov
add
les
pop
inc
jne
mov
pop
cmc
aad
pop
xor
xchg
xor
scas
adc
js
cmp
mov
pop
jle
jge
das
push
popf
jl
add
add
add
js
pop
jno
loope
inc
pop
movsl
loope
mov
inc
dec
test
test
cltd
or
dec
add
add
cmc
pop
mov
jns
pusha
add
add
subb
mov
or
add
add
push
and
orl
mov
add
jno,pt
push
lods
je
xchg
jbe
xchg
or
add
add
lcall
loope
pop
lds
cmp
push
jle
aam
add
add
bound
mov
pop
cwtl
xor
jmp
fdivs
fimuls
xor
add
add
ja
mov
insl
cli
loopne
sahf
fistpll
push
xor
adc
add
adc
cmp
aas
cmp
cwtl
ja
and
add
add
enter
push
sub
add
add
enter
fnsave
inc
or
inc
mov
mov
cmp
leave
fwait
ljmp
sarl
mov
mov
mov
mov
xor
jge
imul
leave
xor
pop
sub
add
add
pop
cmp
pusha
add
add
mov
cltd
mov
add
cwtl
addl
add
add
test
jbe
pop
mov
jmp
aad
rcr
cmpb
xor
push
push
stc
mov
add
fwait
dec
rclb
loopne
imul
addl
dec
lahf
xor
add
add
adc
outsl
dec
mov
pop
sub
sub
cmpsl
pop
pop
lock
or
lods
ja
test
cmpsb
jmp
xchg
or
add
adc
arpl
cwtl
adc
gs
lret
xchg
dec
cmpsl
sub
sarb
loop
bound
fnstsw
add
add
jns
inc
mov
pop
mov
xor
lret
add
add
test
cmp
add
out
pextrw
and
add
add
mov
fildl
add
add
push
les
push
or
negb
cmp
xchg
repnz
bound
and
xchg
jge
cld
orl
inc
or
mov
ja
lods
jl
mov
xor
add
cmpsl
nop
popf
fldl
add
add
xchg
repnz
fsubrs
mov
imul
iret
sub
jns
pop
add
xchg
lret
cltd
fisttps
js
xchg
jns
jmp
add
or
jl
mov
cmp
mov
xchg
outsb
pop
lret
add
add
aaa
mov
daa
xchg
mov
in
and
xchg
lcall
add
xchg
orl
sbb
inc
lcall
add
sbb
add
add
in
sub
add
add
xchg
push
push
xor
add
push
cli
js
in
call
in
dec
add
add
inc
mov
add
std
shrb
add
add
add
mov
pop
imul
mov
fwait
xor
add
jo
mov
outsb
sbbl
add
add
dec
mov
inc
mov
mov
mov
jnp
adc
xchg
sub
cmpl
jb
call
push
inc
call
sub
add
add
add
bnd
test
add
jecxz
andl
add
jl
std
into
xor
cwtl
adc
jg
push
add
push
mov
add
add
sub
add
add
mov
and
push
pop
outsl
xor
xchg
scas
and
gs
shlb
add
add
fidivrs
fdivs
and
pop
inc
movsl
shl
out
sub
add
add
fstp
cmp
cmpb
jg
je
xchg
mov
cmp
inc
mov
int
addr16
cmc
inc
mov
cwtl
in
popa
cltd
sub
add
add
das
mov
int
mov
in
insb
add
add
cs
pop
std
and
add
add
pop
jne
mov
arpl
mov
jg
stc
lea
fs
mov
fcomip
stos
aam
add
add
add
add
add
xchg
xchg
adc
mov
movntq
add
add
mov
add
push
sbb
aaa
cs
mov
push
mov
xor
dec
cltd
adcl
out
inc
jb
adc
pop
nop
ds
scas
mov
cmp
pop
jae
pop
adc
mulb
add
add
andl
aaa
and
add
add
shll
adc
mov
and
dec
mov
add
add
add
add
in
rcrb
and
add
add
xchg
clc
xchg
scas
pop
push
mov
cltd
push
loopne
jae
xor
jge
mov
mov
sbb
scas
mov
dec
pop
add
shrb
insl
jle
fst
xor
adc
lds
push
cs
push
jae
mov
addr16
insb
add
add
imul
insb
add
add
lahf
and
add
add
add
fbld
int
test
mov
cmc
pop
mov
addr16
add
add
jmp
ljmp
inc
lock
add
int3
add
add
mov
ret
jae
and
add
push
test
mov
mov
xchg
jmp
mov
cmp
xchg
xlat
adc
and
sbb
out
sub
mov
pop
mov
mov
jmp
cli
jle
dec
push
dec
mov
add
jge
adc
stos
divb
inc
push
add
lods
insl
xchg
dec
mov
dec
push
and
cmp
add
add
push
mov
fcoml
sbb
aaa
cmc
enter
push
and
in
addb
push
mov
add
testl
imul
in
sbb
push
insb
mov
movsb
jle
xchg
loopne
pushf
ret
leave
add
push
fidivs
add
dec
add
add
std
jae
js
icebp
add
fdiv
test
mov
das
xchg
pop
adc
dec
and
add
add
int3
call
add
add
fmull
xchg
out
pop
jno
sub
add
add
add
add
ljmp
fdivs
adc
push
std
xor
mov
arpl
loopne
leave
xchg
dec
mov
ficoms
stos
ret
in
mov
aad
pusha
mov
add
add
gs
cmp
sub
test
arpl
mov
or
xor
mov
out
es
push
in
sarl
std
sti
cmp
dec
daa
aas
adc
xchg
mov
fnstsw
add
rcrl
mov
sti
xor
je
scas
repnz
xchg
pushf
and
add
add
shrl
out
and
cli
aad
test
in
sbb
add
test
mov
lods
lcall
adc
xchg
jns
repnz
add
pusha
add
add
test
loopne
inc
add
add
sbb
adc
jo
jne
cwtl
repz
insb
add
add
repnz
add
add
aas
cmp
add
add
scas
mov
mov
cld
mov
ljmp
cltd
test
int
orl
add
mov
or
add
outsb
test
and
add
sbb
add
add
xchg
dec
scas
bound
cmp
mov
lods
dec
or
pop
sub
add
add
imul
mov
lret
int
add
cmp
cltd
push
test
les
fsubrs
add
movzwl
cmc
cld
daa
std
dec
sbb
add
add
mov
xor
ss
aaa
fstl
and
add
add
int3
cmp
add
add
gs
mov
cmp
xchg
mov
cmp
xlat
push
push
or
xchg
adc
int3
bound
add
add
cld
push
push
mov
add
int3
fisubrs
add
add
add
add
mov
cmpsb
adc
cli
inc
and
jg
das
dec
adc
imul
add
add
add
add
push
outsl
shrl
xor
add
popa
int3
popf
mov
jge
pop
jae
xlat
clc
fst
jb
push
test
js
cmpsb
leave
add
add
add
mov
movsl
add
lea
fwait
or
add
add
xchg
adc
add
add
inc
mov
imul
add
aas
adc
jbe
fildll
add
add
ret
and
add
data16
repnz
mov
add
add
add
and
loopne
stos
int3
jecxz
mov
add
mov
dec
mov
test
adc
and
pinsrw
lcall
add
add
adc
add
add
out
pop
adc
sub
add
add
add
mul
cmp
test
sub
add
add
sub
add
fst
out
mov
xor
push
xchg
aas
xor
cltd
nop
jl
add
add
cmc
or
add
add
mov
mov
out
mov
je
jne
leave
cmpsb
sub
pop
frstor
add
add
push
mov
mov
xchg
cmp
jmp
jns
xchg
mov
add
add
jge
inc
mov
into
cmpsl
iret
addl
imul
add
outsb
pop
dec
jge
stc
mov
insl
test
xorb
cltd
or
add
add
mov
ficoms
and
jge
mov
stos
lea
fs
and
or
add
add
icebp
int3
pop
jl
mov
inc
xchg
leave
int3
jo
xchg
mov
outsl
cmp
jg
mov
sbb
or
xchg
sbb
jne
pop
mov
rorl
adc
fsts
movsl
jb
imul
sbb
add
add
cwtl
lock
mov
add
add
dec
push
xchg
or
mov
sarl
add
add
push
cmc
adc
pop
adc
sub
add
add
clc
and
add
enter
iret
push
sti
repz
ljmp
add
add
add
push
mov
outsb
sbb
and
xchg
cmc
sub
icebp
adc
mov
fiaddl
add
mov
xlat
cmpsb
jle
test
test
add
shlb
loope
hlt
shlb
in
scas
gs
cmpsb
aad
push
test
mov
cltd
push
or
add
add
add
add
fwait
outsl
lret
inc
lock
sbb
jle
call
xchg
push
daa
cmp
lea
sbb
mov
xchg
loopne
fcompl
add
outsb
nop
cmp
adc
mov
out
mov
add
mov
fisubrs
addl
out
stc
cmp
jp
push
xor
push
adc
add
xlat
out
dec
mov
into
and
add
add
addr16
or
add
add
test
scas
jl
cmp
fisttpll
add
add
add
xchg
lret
imulb
adc
push
sarb
pop
cld
sbb
mov
rclb
das
in
flds
push
inc
arpl
mov
push
ljmp
push
pusha
add
add
adc
movsb
push
lods
or
push
xchg
enter
inc
xchg
add
mov
cmp
xchg
into
bound
add
call
sub
add
add
mov
add
mov
call
jns
test
popa
loope
inc
into
pop
push
mov
mov
dec
ss
xchg
out
fbstp
adc
jl
jnp
mov
xchg
push
ds
push
jns
aas
repz
lcall
adc
sbb
mov
inc
add
add
mov
mov
mov
pop
cmpsl
out
jnp
push
sbb
out
cmpb
sub
clc
xor
xor
das
fstps
or
add
add
xchg
flds
mov
jp
add
add
add
pushl
add
dec
ljmp
dec
cmc
dec
add
add
add
fsubrl
add
add
add
pop
lahf
or
shrb
add
dec
dec
dec
aas
adc
add
add
pop
test
xor
lods
mov
movb
add
add
add
int
cmc
and
lea
lods
ljmp
ja
call
cmp
push
fsubs
add
pop
roll
jno
outsl
imul
data16
jmp
stos
dec
outsl
aaa
sbb
loop
imul
mov
int3
es
cmp
rorb
and
ja
lods
sub
dec
add
add
imul
into
xchg
jl
mov
push
xorb
pop
inc
mov
mov
push
sbb
inc
or
fisttpll
int3
xchg
sub
add
add
add
add
or
or
add
add
push
lds
and
add
add
add
add
hlt
dec
cmp
jnp
add
sub
xchg
mov
loope
add
and
sbb
pop
mov
mov
aam
insl
shll
add
adc
sub
loope
add
add
cmp
dec
add
add
into
icebp
add
add
add
lods
inc
cmp
add
popl
sub
add
add
imul
pop
clc
dec
mov
sub
add
add
dec
in
mov
jle
jp
mov
sub
movsl
mov
mov
push
imul
cli
cmc
mov
in
sti
sub
add
test
jae,pn
repnz
mov
pop
jb
add
int3
mov
add
mov
insb
mov
cmp
add
add
push
mov
inc
jecxz
imul
scas
mov
shl
push
lods
inc
add
add
dec
mov
sbb
ret
adc
cmp
cmpsl
adc
add
stos
xchg
sbb
add
add
mov
xchg
and
or
add
add
add
add
or
add
add
cmp
xor
cmp
dec
add
add
xlat
stos
xor
pop
dec
daa
and
mov
in
inc
add
add
aam
inc
ljmp
and
add
out
aad
cltd
mov
add
add
call
or
add
add
add
add
pop
ret
adcb
mov
in
das
ja
int3
push
dec
frstor
sub
add
add
loope
xchg
cmpsb
cmp
add
add
sbb
scas
push
and
add
add
ds
in
sub
orl
jb
adc
inc
aas
push
lods
dec
out
gs
xor
add
add
add
push
xchg
jp
cld
or
hlt
sub
add
add
pop
adc
cmpl
das
and
lret
dec
mov
lods
xor
mov
dec
xchg
pop
push
das
imul
add
add
add
or
add
mov
out
dec
call
imul
add
add
or
inc
add
add
pop
lret
cs
in
aas
xorl
rcrl
add
add
rcrl
jl
add
add
jecxz
daa
ljmp
in
and
and
mov
adc
pop
ja
cmp
add
add
xlat
icebp
test
cmp
dec
mov
es
mov
pusha
add
add
sarl
leave
pop
fucom
jge
add
xchg
jnp
rorb
cmp
mov
and
dec
mov
orl
add
push
pop
jbe
jl
mov
jae
inc
pop
loopne
push
xchg
test
jmp
lcall
jo
jns
rclb
add
add
and
in
mov
adc
add
add
iret
aaa
in
mov
add
add
je
notl
in
std
aaa
pop
dec
das
nop
mov
add
jbe
mov
cmp
fs
add
add
add
nop
bound
or
dec
jecxz
lea
fwait
cli
jmp
xor
push
icebp
das
daa
jp
pop
and
notb
mov
mov
lods
adc
sub
sar
jmp
add
lcall
sahf
pop
leave
push
out
lods
jmp
add
mov
or
xchg
sbb
rclb
cs
sbb
fwait
sbb
mov
mov
shl
outsb
enter
sub
shlb
mov
add
add
jo
outsl
pop
inc
push
jns
rcll
and
xchg
inc
inc
mov
sbb
jg
jo
fidivs
add
add
add
add
mov
arpl
xchg
adc
mov
outsl
mov
ljmp
lret
cld
mov
fimuls
add
xor
aaa
xchg
mov
insl
mov
add
add
add
stos
repz
sbb
and
adc
sti
or
cmp
inc
mov
lea
xchg
int3
or
add
add
cmp
add
add
or
enter
lods
cmp
jo
repz
outsb
ss
gs
add
add
scas
cmp
orb
add
add
add
add
push
stos
popw
ds
or
adc
or
adcl
add
cmp
xor
add
sahf
inc
mov
mov
ss
and
jne
jmp
out
call
add
jle
mov
sub
add
add
xor
push
shrl
lea
clc
stos
adc
bound
cmp
adc
add
mov
push
out
out
jg
fcmove
ljmp
dec
addr16
std
lcall
xor
cwtl
lock
jg
inc
movsl
or
stc
xchg
pushf
fcoml
jo
shlb
add
add
pop
shll
add
add
sbb
xchg
hlt
daa
hlt
jo
add
add
add
mov
pop
popa
std
js
dec
hlt
aas
adc
push
and
test
test
and
and
add
add
add
add
icebp
xchg
xor
in
in
into
test
add
or
dec
mov
into
xchg
test
cs
mov
sti
pop
shlb
push
imul
add
decl
mov
mov
sbb
js
add
add
push
xchg
xlat
gs
jle
push
fstl
lret
xchg
mov
test
stos
or
add
add
pop
jmp
in
mov
xchg
adc
aas
test
es
fadds
icebp
movsb
dec
add
add
mov
add
add
add
add
sbb
add
rorb
push
mov
add
pusha
add
add
gs
fstl
loope
out
push
fidivl
out
mov
shrl
mov
add
add
add
and
add
add
add
add
pop
testl
ja
fs
cmp
and
xchg
or
mov
test
add
jnp
test
xor
into
mov
push
lods
pop
test
add
add
fnstsw
add
ret
mov
insb
add
add
jg
ret
mov
mov
fs
ret
lods
pop
call
mov
and
popf
sbb
mov
pop
cmp
andl
mov
mov
dec
mov
mov
outsl
add
dec
std
adc
add
add
movsb
ret
pop
fs
mov
adc
movsb
sarb
cli
pop
mov
jmp
mov
add
hlt
sbb
xor
add
push
scas
je
test
xor
mov
or
test
adc
cmp
stc
repnz
out
lock
lods
inc
mov
xchg
cwtl
daa
xchg
mov
add
add
fimuls
popf
xor
neg
test
inc
sbb
cwtl
pop
fwait
mov
pop
mov
and
dec
jbe
mov
xchg
jmp
add
add
add
bnd
mov
ret
shlb
in
loopne
das
cmp
fincstp
rcll
push
icebp
or
dec
add
add
in
inc
loope
shrl
sbb
jp
push
lods
stos
sti
cmp
xchg
push
jbe
push
xchg
cwtl
inc
jl
xor
cmp
cld
mov
pop
test
cwtl
popa
sub
loop
cltd
cmpsb
loopne
pop
mov
jle
or
sub
dec
mov
pop
fidivs
dec
sbb
dec
mov
pop
mov
out
add
mov
testb
pushf
stos
sbb
daa
sbb
pop
mov
adc
inc
add
add
out
movsl
cli
push
adc
mov
mov
stc
cwtl
adc
out
in
lea
sub
push
out
in
hlt
mov
add
mov
push
addr16
icebp
or
add
add
mov
hlt
mov
sahf
inc
push
dec
mov
sub
das
dec
fists
push
push
incl
push
lcall
in
mov
add
mov
sbb
pop
cmc
movsb
push
daa
mov
sbb
nop
cmp
mov
mov
jle
add
add
cmc
cwtl
jne
out
add
mov
imul
movsb
mov
pop
jns
shr
jno
into
insb
mov
mov
test
and
add
add
cmp
mov
mov
jb
cli
insl
punpcklbw
add
add
imull
repz
mov
dec
and
add
add
add
adc
bound
into
cmp
sbb
outsb
mov
mov
or
add
add
loopne
or
scas
push
xchg
xchg
aaa
and
add
add
push
lock
dec
xchg
push
les
dec
cltd
cwtl
add
dec
ficompl
mov
add
add
ss
sbb
and
add
add
xchg
stos
jno
fcom
or
lret
add
add
in
aas
stos
cmp
mov
and
add
mov
jmp
add
add
add
and
add
adc
pop
in
inc
add
add
mov
add
aas
adc
add
add
dec
hlt
fmull
adc
mov
add
xchg
and
or
mov
loope
dec
mov
cmpsb
out
shr
lds
mov
add
add
add
mov
add
aaa
rcll
push
cwtl
ret
jae
add
add
shll
add
bound
mov
fnstenv
jne
push
test
clc
lahf
push
subl
and
add
add
add
add
iret
mov
test
out
das
cmpsb
dec
mov
inc
mov
fildl
subb
cmp
mov
clc
mov
inc
add
add
dec
push
push
xchg
lds
fisubrl
scas
movsl
mov
sub
adc
aad
cmp
pop
push
aam
xor
loopne
mov
jo
xchg
sbb
in
subl
pop
cmp
dec
xor
leave
inc
cld
out
call
stc
jae
addr16
out
lret
jbe
outsl
pusha
add
add
inc
mov
push
icebp
xchg
imul
out
test
test
push
mov
inc
add
add
mov
fwait
push
mov
xorl
cmc
dec
hlt
pop
fwait
add
sub
inc
fiaddl
and
add
out
sub
add
add
jecxz
mov
add
lea
add
pop
dec
pusha
mov
xlat
and
mov
ret
xchg
pop
imull
mov
xor
mov
data16
andl
mov
stc
lods
divl
in
mov
add
add
gs
mov
movsl
xchg
push
add
xchg
cmp
movsb
mov
loop
sbb
add
add
or
add
add
dec
faddl
jmp
invd
mov
mov
mov
das
pop
mov
loopne
inc
mov
int
mov
push
sub
ljmp
aad
in
and
add
add
xor
lret
add
add
adc
jo
insl
stos
or
repz
inc
add
add
out
mov
mov
repz
mov
sbb
dec
aad
leave
cmp
pop
sub
mov
lea
sbb
add
test
imul
add
add
repz
sbb
add
aas
xor
out
mov
add
add
int3
pop
popf
mov
pushf
xchg
dec
dec
mov
mov
add
add
mov
dec
cmp
or
add
add
add
add
ljmp
cli
add
jmp
cli
pop
jbe
mov
add
scas
add
shll
add
jl
xlat
aam
add
add
dec
jne
jl
xchg
ret
push
rclb
iret
cmpl
dec
mov
jne
dec
mov
push
cmp
sub
dec
data16
add
add
inc
mov
sbb
mov
xchg
jle
daa
jno
push
mov
xchg
inc
or
add
add
pop
and
add
add
insb
add
add
push
pop
fidivl
mov
mov
add
add
rol
sbb
hlt
push
pushf
cltd
test
sub
movsb
mov
in
add
dec
mov
aaa
ds
ja
jnp
jo
in
ret
cmp
add
fldcw
aas
sti
movsb
add
jl
jge
jns
test
pop
iret
sbb
mov
add
jno
outsb
and
lea
add
add
add
add
insb
mov
out
add
add
push
xchg
cmpsb
daa
push
rcr
cmp
add
mov
or
sub
add
add
enter
sahf
scas
mov
cld
jno
mov
add
add
lds
jg
in
sahf
out
jl
pusha
mov
out
jmp
push
cmp
ret
lock
add
add
cltd
xor
add
add
add
xchg
sub
lret
das
mov
add
ss
movsl
mov
daa
mov
xchg
in
nop
out
fsubs
adc
lds
sub
and
add
add
push
addb
add
xor
or
add
add
outsl
cpuid
sbb
jle
mov
pop
mov
add
mov
dec
add
add
sub
das
jae
nop
das
inc
cmp
mov
daa
daa
xor
sarl
inc
xor
add
add
scas
lea
add
add
push
inc
or
mov
fs
pop
xchg
pushf
fstps
push
dec
jge
scas
jb
insl
es
jp
or
mov
mov
je
aad
rcll
add
add
adc
lods
imul
sbb
out
xchg
mov
inc
notb
pushf
imull
add
mov
xor
push
insl
bound
inc
out
adc
dec
sub
sbb
sub
subb
dec
pop
and
cmpsb
call
inc
stos
ret
test
mov
add
outsl
pop
mul
push
js
add
add
xchg
in
adc
bswap
cmp
add
ds
pop
into
fistl
pop
pop
mov
mov
add
add
add
jecxz
jge
push
adcb
sahf
mov
jnp
sbb
mov
push
push
in
dec
lods
repz
jg
xchg
nop
inc
pop
cmpsb
push
adc
mov
pop
jecxz
mov
xchg
add
scas
out
mov
add
add
mov
imul
nop
fdivs
mov
xchg
test
or
xchg
les
outsl
mov
lahf
push
cmp
movsl
aad
or
add
add
add
dec
add
add
jbe
gs
pop
sub
or
lret
push
mov
sbb
inc
fsub
cli
out
and
push
pusha
add
add
jl
repnz
and
push
daa
sub
add
add
jmp
jecxz
mov
mov
add
add
loope
jp
and
add
add
mov
add
add
popa
inc
mov
add
aad
lods
dec
movsb
jge
mov
fwait
pop
sub
pop
adcl
mov
push
adcl
rep
nop
ljmp
pop
cvtpi2ps
mov
aad
es
fcmovnbe
cmp
sbb
fsubl
jne
adcb
push
mov
push
and
add
add
cltd
scas
pop
fcompl
cmpsb
lret
mov
dec
sub
cwtl
cmp
add
inc
add
add
inc
mov
dec
sbb
test
and
dec
in
aaa
mov
jmp
fsubs
jne
fistps
sub
dec
ljmp
pop
iret
insl
adc
movsl
xchg
sub
lahf
mov
insb
add
add
lcall
sbb
jnp
outsl
jg
sub
add
add
les
or
lods
dec
imul
pop
das
add
imull
add
pushf
jge
jbe
push
testb
xor
sub
pop
push
inc
sub
insb
add
add
pop
jecxz
mov
pushf
dec
mov
fdivl
lea
insl
das
shlb
xor
mov
push
add
add
add
add
insb
mov
in
mov
add
in
mov
fisttpll
add
add
inc
insb
add
add
mov
inc
xchg
aad
mov
xor
pushf
cmp
psubb
cmpsl
pop
or
push
xchg
mov
and
add
add
dec
pop
loopne
fs
or
js
ja
loope
mov
sub
add
add
add
cmpsb
jns
cmp
mov
in
mov
sbb
pop
nop
enter
rcl
push
xor
mov
outsb
ret
jno
sbb
shll
out
data16
add
add
add
add
pop
push
imul
lds
add
add
mov
pop
in
cmp
gs
inc
fcomps
pop
dec
cmp
leave
cmc
pop
mov
add
add
pusha
mov
jmp
mov
add
add
imul
push
mov
xchg
sub
mov
mov
sbb
movsl
call
cli
movsw
shrb
fstp
and
ret
inc
add
add
les
xchg
push
mov
sub
add
add
add
add
sti
add
add
add
pop
sub
add
add
daa
cmc
xor
and
mov
sbb
xor
bswap
xor
jnp
cmp
mov
scas
int3
adc
ljmp
xchg
fdivrs
orl
add
add
cmpsb
adc
pop
pop
xchg
inc
shll
xchg
in
repnz
sbb
push
arpl
fxch
jae
in
bnd
xor
jmp
add
add
fsubrl
add
adc
mov
add
enter
jb
cmp
sbb
sti
daa
lds
add
add
inc
xchg
mov
push
mov
ffreep
jno
cmp
pand
testb
mov
push
sbb
int3
sub
add
add
mov
aad
add
add
int
pusha
mov
stos
lret
cmp
mov
add
movsl
push
sbb
lret
in
pop
push
push
out
push
xor
stos
xchg
popa
lret
jnp
and
sbb
js
outsb
shr
notl
leave
test
add
add
add
std
pushf
mov
insl
dec
ret
jge
sbb
add
cmp
xor
mov
add
mov
push
loop
push
sub
add
add
add
add
xchg
adc
mov
in
movsl
xchg
les
mov
cli
mov
or
jbe
sarb
out
out
pop
sub
add
add
inc
mov
aaa
scas
jge
mov
test
rcl
push
jne
popa
jae
sti
pop
jae
sub
add
add
inc
add
add
mov
nop
xchg
divl
test
xchg
stos
xor
nop
jnp
dec
xchg
cmpsb
cmpsb
add
mov
xchg
add
add
mov
jns
mov
subl
out
cmpsl
pop
pop
jl
stc
mov
hlt
mov
add
add
mov
fisttps
mov
dec
iret
push
pusha
mov
adc
dec
jbe
mov
sub
push
push
sub
insb
add
add
xchg
out
lock
jecxz
lret
jge
or
dec
pop
mov
mov
push
fists
push
jae
cmp
xchg
in
fistl
sbb
mov
movsb
addr16
add
fdivs
cs
repz
fdivrl
ret
js
int3
loopne
add
add
mov
dec
int3
fnstenv
mov
add
or
sti
xor
add
add
sub
inc
push
jl
in
push
xchg
pop
sbb
sbb
inc
mov
mov
push
or
cmp
lea
jb
ds
jnp
push
int3
push
push
iret
sahf
mov
fildll
add
add
cmp
cltd
push
xchg
negl
jae
mov
jne
dec
into
fsubp
push
mov
lret
dec
mov
add
add
cld
cmp
movsb
inc
sub
add
add
push
mov
add
adc
inc
pop
daa
mov
out
out
jecxz
cmp
stos
je
sbb
neg
int
mov
add
add
jle
jae
outsb
mov
jns
add
add
repnz
pop
mov
add
repz
dec
stos
es
enter
jg
gs
add
sti
movsl
aam
xor
lea
les
adc
add
jle
or
dec
les
or
pop
sbb
int3
ffreep
lahf
xor
push
sbb
leave
cmpsb
sbb
add
int3
lcall
stos
mov
mov
add
repnz
sub
push
rcrb
std
dec
mov
xchg
jmp
aaa
test
sahf
std
adc
sbb
add
inc
xlat
fiaddl
fwait
xchg
cltd
in
mov
inc
jecxz
sub
fimuls
push
inc
cltd
