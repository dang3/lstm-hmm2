add
add
icebp
add
add
add
and
add
add
add
add
add
add
stc
stc
jecxz
jecxz
add
or
or
add
add
add
add
xchg
add
mov
add
add
add
add
add
inc
inc
add
add
mov
add
add
add
jecxz
add
add
add
add
add
add
add
add
das
cmc
add
add
add
sgdtl
add
xchg
add
add
add
add
add
add
add
add
add
add
add
add
add
add
incl
add
add
add
add
add
add
add
add
int
add
add
add
add
add
add
add
nop
add
push
push
push
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
fldl
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
movsl
movsl
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
test
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
inc
inc
inc
inc
add
add
add
sti
sti
sti
add
add
loopne
add
add
cmc
cmc
add
add
add
add
add
add
add
add
add
add
add
add
or
or
add
add
add
add
add
imul
mov
add
add
sbb
sub
add
add
sub
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
sti
sti
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
rcl
roll
add
lock
add
add
add
add
add
add
add
mov
add
add
xor
add
add
add
add
xchg
xchg
xchg
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
clc
clc
add
add
mov
add
add
xchg
xchg
xchg
or
add
add
add
add
add
add
add
add
add
loope
add
pop
pop
add
add
add
add
inc
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
hlt
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
loop
loop
add
add
add
add
lret
dec
add
add
add
add
add
ds
add
add
add
add
add
add
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
das
add
add
add
add
add
add
add
sahf
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
loopne
add
add
add
add
add
add
add
add
add
add
add
lock
add
add
sti
add
add
add
add
add
add
add
add
add
add
add
add
ss
add
add
add
add
add
add
add
mov
add
add
inc
inc
add
add
add
add
adc
add
add
add
add
add
add
add
add
add
add
sub
add
add
xchg
add
add
add
push
push
push
push
push
add
add
lcall
add
add
add
add
add
add
lock
add
add
add
add
add
add
lret
add
add
add
pusha
pusha
pusha
add
movb
add
sbb
add
add
add
add
add
add
add
add
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
insb
insb
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
mov
test
push
push
push
push
push
push
push
push
push
mov
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
jbe
push
push
push
push
push
push
push
push
push
push
push
push
push
rcl
pop
pop
pop
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
iret
iret
mov
push
push
push
push
push
push
push
push
push
push
addb
push
push
push
push
push
push
push
push
push
pusha
pusha
or
or
push
push
jns
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
movsl
xlat
push
push
push
push
push
mov
push
push
push
push
push
push
push
push
fcomp
push
push
push
push
cmc
cmc
push
push
push
push
push
push
push
push
push
push
jp
pop
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
lods
pushf
pushf
pushf
pushf
pop
pop
pop
pop
pop
int3
int3
pop
pop
pop
pop
pop
pop
mov
pop
pop
pop
pop
pop
pop
pop
pop
rol
roll
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
mov
pop
pop
pop
pop
pop
pop
ds
pop
pop
pop
pop
pop
pop
pop
pop
sub
pop
pop
pop
movl
pop
pop
pop
pop
pop
pop
pop
pop
insb
insb
pop
pop
pop
pop
inc
inc
pop
pop
pop
pop
pop
pop
pop
adc
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
fiadds
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
sub
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
push
push
pop
pop
jne
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
insl
insl
pop
inc
inc
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
or
or
or
or
or
mov
or
mov
or
or
or
or
or
movsl
or
or
or
or
or
or
or
or
or
or
in
or
or
or
or
or
or
or
pop
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
mov
scas
or
or
or
or
or
or
or
or
or
or
or
or
stos
or
or
or
or
push
push
or
or
or
or
or
or
or
push
push
push
push
or
or
or
or
or
or
or
or
or
popa
popa
popa
or
or
or
or
mov
or
adc
or
or
or
or
or
or
or
or
pop
or
or
or
or
cs
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
shrl
jl
jl
or
or
sbb
or
bound
dec
dec
or
or
or
or
or
orb
or
or
or
or
or
or
leave
leave
or
or
or
or
or
or
or
pop
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
leave
leave
or
or
or
or
or
or
or
or
or
or
or
or
int
int
or
or
or
or
or
or
or
or
or
or
or
wbinvd
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
aam
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
decb
or
push
push
push
mov
or
or
adc
or
or
or
or
or
or
or
or
or
or
or
or
or
mov
or
or
or
or
or
cltd
or
or
push
or
xor
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
ret
ret
ret
or
or
cli
or
out
out
or
or
or
or
or
or
mov
or
or
or
xor
xor
xor
or
or
or
testb
or
or
or
or
or
or
or
cli
cli
cli
cli
or
or
or
or
or
or
or
or
or
or
or
or
or
or
cmp
or
or
or
or
mov
or
or
or
mov
or
or
or
or
or
or
jns
jns
or
lea
or
or
or
or
or
or
or
or
or
or
or
sbb
or
or
or
xchg
or
decb
or
or
or
or
or
jp
xchg
cmp
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
aam
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
xor
or
or
or
or
or
or
or
or
or
dec
dec
dec
mov
or
or
or
or
or
or
or
or
or
or
or
inc
or
or
or
or
or
cli
cli
scas
scas
scas
or
or
or
or
or
or
or
or
std
or
or
iret
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
xor
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
xor
or
or
pop
or
or
or
or
or
push
or
jnp
or
or
or
or
or
or
or
popa
popa
or
rorl
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
gs
or
scas
scas
or
or
or
or
or
or
or
out
out
cs
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
ja
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
popf
popf
or
and
or
or
or
jl
or
or
or
or
or
or
or
or
or
or
or
or
or
mov
push
push
push
push
push
sub
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
dec
push
mov
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
sbb
sbb
push
push
push
push
push
push
rcl
rcl
fisttpl
push
push
push
push
push
push
push
push
push
push
push
push
push
cs
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
sysret
pop
pop
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
addl
push
add
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
in
push
push
push
push
push
push
push
push
lcall
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
mov
push
push
push
push
cmpsb
cmpsb
push
push
push
push
push
push
push
push
push
push
push
push
push
xchg
xchg
psubsb
setl
insb
insb
punpckhwd
wrmsr
cmpxchg
bndldx
invd
addps
ud2
or
or
pfrcpit1
cmpsb
cmovo
btr
pextrw
movups
adc
adc
adc
adc
adc
adc
adc
and
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
aaa
aaa
adc
pushf
ret
adc
adc
adc
adc
adc
and
adc
adc
adc
adc
adc
adc
mov
adc
adc
adc
cmpsl
cmpsl
cmpsl
adc
adc
adc
adc
out
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
ja
adc
push
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
ja
ja
adc
sub
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
push
adc
adc
pop
pop
pop
pop
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
ja
adc
adc
adc
mov
adc
adc
adc
adc
mov
adc
adc
adc
adc
adc
pop
adc
adc
adc
adc
adc
adc
adc
adc
lods
adc
adc
adc
adc
adc
adc
adc
aam
aam
adc
adc
adc
jl
adc
adc
adc
adc
adc
adc
adc
jl
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
xchg
adc
lret
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
arpl
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
xchg
adc
fstp
std
std
adc
adc
into
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
mov
adc
and
adc
adc
adc
adc
adc
adc
adc
adc
adc
in
in
dec
dec
dec
adc
adc
adc
adc
adc
adc
adc
cmpsl
cmpsl
cmpsl
cmpsl
dec
adc
adc
adc
adc
adc
adc
pop
pop
adc
adc
adc
adc
adc
clc
clc
clc
clc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
jns
adc
adc
adc
adc
adc
adc
cmp
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
mov
adc
ss
adc
adc
adc
je
je
adc
adc
adc
adc
adc
adc
adc
adc
dec
adc
adc
lret
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
pop
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
pop
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
test
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
fistl
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
push
adc
adc
adc
jle
data16
adc
adc
adc
adc
adc
ret
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
stc
stc
adc
adc
adc
adc
mov
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
in
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
xor
adc
adc
adc
adc
adc
lcall
adc
adc
adc
adc
sbb
adc
adc
jnp
jnp
adc
adc
adc
adc
or
adc
adc
adc
adc
adc
dec
dec
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
cmp
adc
adc
adc
adc
adc
adc
adc
and
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
or
or
push
push
push
push
push
push
push
push
push
push
push
push
mov
cmp
push
push
push
push
jle
jle
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
mov
insb
push
push
push
push
push
push
push
push
push
push
push
push
notb
push
push
push
push
push
push
push
push
push
push
inc
push
push
push
push
push
push
push
push
push
mov
test
push
push
push
push
push
push
push
push
push
push
push
mov
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
cmp
push
push
push
push
push
push
push
push
push
push
push
push
push
push
rcll
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
sub
push
push
push
push
push
push
push
push
push
push
push
add
push
push
push
push
mov
push
push
push
push
loopne
push
push
push
push
push
push
push
push
push
push
push
push
test
push
nop
push
push
push
push
push
push
in
in
in
in
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
jg
pop
pop
pop
pop
pop
pop
pop
pop
push
lods
sub
scas
adc
pop
pop
pop
pop
loop
pop
pop
dec
dec
dec
pop
pop
pop
pop
ret
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
ljmp
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
gs
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
cmpsb
pop
pop
pop
pop
or
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
xlat
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
mov
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
xlat
xlat
xlat
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
mov
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
repz
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
data16
pop
pop
int
mov
pop
pop
pop
pop
pop
rcll
pop
pop
pop
pop
pop
pop
pop
pop
pop
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
add
sbb
sbb
lret
sbb
mov
sbb
sbb
test
push
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
jmp
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
out
out
out
mov
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
enter
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
dec
imul
push
push
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
pop
sbb
sbb
sbb
sbb
sbb
sbb
sbb
mov
mov
rorb
ss
test
cmp
imul
mov
movsb
add
out
scas
nop
mov
fisubrl
mov
ret
mov
xor
das
adc
and
mov
movsb
fisubl
outsb
jae
jle
ficoml
stos
jp
ret
pop
cmp
orl
mov
xchg
test
out
and
mov
sbb
add
mov
mov
ret
mov
repz
mov
fs
cmp
filds
ret
cltd
jb
stos
ds
lret
mov
cmp
dec
push
push
pop
std
icebp
xchg
adc
pop
add
int3
or
inc
and
and
sub
add
sbb
sub
std
jge
xorl
ret
repz
sbb
in
xchg
mov
or
mov
inc
shrb
rol
xor
mov
out
call
punpckhwd
shl
out
pop
mov
jbe
sbb
sub
mov
mov
mov
cltd
push
jge
in
xlat
repnz
mov
mov
fcompl
push
sbb
stos
push
mov
es
shll
cwtl
loopne
adc
imul
test
imul
add
das
cmp
ret
mov
gs
ret
fld
repz
mov
ret
mov
mov
clc
mov
adc
xchg
xor
mov
fdivrl
ret
mov
sub
mov
repz
push
stos
fadds
push
sti
pop
mov
push
sar
hlt
cltd
repz
movsb
test
cli
push
pop
leave
mov
mov
dec
ret
mov
inc
sub
add
push
cltd
pusha
ret
mov
enter
lock
xchg
inc
push
out
xor
cmp
add
xchg
jno
inc
push
cmpsl
mov
xchg
in
adc
add
cli
cltd
repz
jecxz
mov
in
mov
mov
jne
test
or
scas
cli
jbe
sbb
mov
ds
imul
in
sahf
scas
mov
rcll
mov
cld
inc
fldcw
cmp
ret
push
sbb
push
mov
dec
in
inc
inc
cmp
movsl
lret
in
nop
mov
ret
mov
ret
mov
and
mov
in
sbb
push
imul
fcomp
cs
pusha
ret
pop
movsl
loopne
fdivrl
cmp
ret
mov
ret
jbe
or
rolb
ret
xor
js
pop
push
outsb
ja
lret
add
adc
mov
js
mov
add
sar
std
loopne
xchg
adc
inc
ret
xor
mov
mov
pushf
mov
loope
xchg
cs
xor
fmuls
push
or
mov
adc
jno
lahf
xor
lods
adc
fbld
push
inc
ret
mov
lods
dec
sahf
cmp
dec
and
sub
mov
and
mov
in
xchg
mov
dec
ret
mov
xorb
ficomps
sti
xor
adc
mov
mov
xchg
shlb
add
fisttps
sub
mov
inc
ret
mov
xor
mov
sahf
cmpsb
push
pop
outsl
call
cli
inc
fsub
in
ret
mov
mov
cmp
out
mov
mov
ret
cmpsb
dec
ret
dec
jb
into
enter
fdivr
cs
push
inc
arpl
pushf
mov
mov
pop
in
mov
adcb
sbb
dec
ret
mov
sar
pop
cmp
sub
enter
test
or
sbbb
into
loope
ret
mov
out
bnd
scas
in
add
jbe
test
dec
push
outsl
jg
mov
jmp
cwtl
adc
aam
into
shlb
test
ret
mov
inc
sbb
lock
cmp
mov
xchg
pop
add
ret
mov
fcomps
data16
mov
xchg
inc
add
mov
insl
jle
test
outsl
stc
xor
add
push
icebp
or
mov
outsl
mov
cmc
sbb
mov
popf
add
mov
arpl
inc
js
ret
mov
mov
jbe
dec
orps
cmpsl
mov
xorl
xchg
cmpsb
roll
mov
ret
mov
clc
push
test
push
pop
push
into
inc
adc
notb
in
ja
out
leave
xor
imul
int3
popf
int3
shrl
mov
movsb
mov
dec
out
shrb
sub
ret
mov
mov
sarl
sub
mov
shll
ret
inc
enter
add
adc
inc
fcomp
xchg
push
jl
int3
jmp
sbb
or
mov
pop
add
mov
pushf
mov
cmp
bound
mov
inc
ret
push
dec
ret
mov
ret
bound
push
cmp
pop
popa
pop
push
mov
mov
and
push
ret
mov
in
shrl
cwtl
push
int
test
push
les
stos
idivb
les
std
xchg
pop
movsb
repz
idiv
ret
sahf
clc
cmc
pop
add
mov
xchg
add
fs
mov
ret
mov
cwtl
add
mov
lret
jmp
js
icebp
dec
lea
jns
adc
lods
push
or
pop
sub
ret
mov
ret
jp
push
dec
dec
pop
cmc
cltd
stos
movsl
cld
mov
aad
outsb
leave
pop
jge
jns
cli
push
mov
push
iret
inc
ret
or
mov
data16
aam
or
pop
push
and
mov
add
xor
test
sbb
inc
sub
mov
incl
mov
loop
cmpsb
cmp
or
mov
ret
mov
mov
mov
cli
lds
push
or
clc
cmp
in
fidivrs
pop
cs
pop
sbb
ret
mov
jmp
ret
mov
addr16
daa
sub
aaa
dec
fwait
adc
inc
jno
ret
mov
jbe
xor
mov
push
sbb
test
and
mov
mov
mov
and
mov
sub
push
add
mov
mov
push
mov
data16
add
add
insl
movsb
push
or
out
mov
pop
dec
add
mov
jle
mov
push
jg
mov
dec
pop
daa
xchg
cmp
cmp
divb
mov
jbe
int3
push
mov
ret
dec
int3
xorb
call
pop
adc
mov
jnp
cmp
mov
shrb
add
imul
inc
out
repz
inc
ret
mov
jp
pusha
ret
in
call
insl
shl
ds
lret
or
lods
jae
pop
xor
dec
lret
jae
push
je,pn
les
cmpl
stos
cwtl
pop
cwtl
cmp
push
push
push
mov
sbb
mov
jl
ret
mov
aam
push
xor
jne
jmp
xchg
cmp
or
imul
loop
push
pop
jp
shlb
movsl
and
jp
ja
add
mov
ret
insl
popa
adc
es
adc
aas
daa
pushf
push
lods
dec
ret
popf
push
movsl
sarl
fcoml
mov
push
shrb
xor
ret
clc
cmpsb
cld
inc
std
and
ret
push
sub
lcall
shrb
sub
ret
cmp
lods
xchg
ret
gs
outsl
add
fcmovne
loop
adc
jne
mov
fdivrs
jecxz
add
xchg
sbb
cmpl
sub
mov
add
push
inc
roll
mov
jae
push
adc
lock
out
ret
and
add
jl
xchg
repnz
and
sarb
add
xchg
gs
mov
mov
inc
xorl
cmp
popf
push
ret
mov
outsl
cmc
add
lods
mov
sti
mov
cs
int3
mov
mov
add
mov
inc
mov
test
out
popf
inc
xor
gs
in
orb
in
ret
mov
ret
fidivrs
test
movsb
outsb
sub
push
pop
in
pop
pushf
mov
shrl
in
bound
ficoms
ret
dec
fwait
jbe
stc
cmpsb
mov
clc
dec
sub
mov
cmp
test
mov
inc
ret
xchg
mov
cmc
jb
shll
jmp
sbb
ret
mov
mov
ret
pop
outsl
jmp
adc
mov
test
mov
push
sbb
adc
add
mov
pushf
jno
push
test
sub
ret
inc
test
into
pop
jns
sti
mov
js
xchg
adc
ret
mov
dec
add
clc
xchg
pop
leave
sub
mov
mov
xor
icebp
test
inc
dec
or
inc
cmpsb
push
dec
mov
adc
add
jecxz
ret
out
lretw
cld
movsb
pushf
sbb
mov
dec
pop
out
xchg
shll
mov
test
fbld
bound
ret
mov
xchg
sub
mov
ret
mov
test
mov
jecxz
mov
adc
aad
lock
add
mov
leave
outsb
adc
cmp
xor
inc
cld
sbb
inc
add
push
lcall
mov
jmp
jae
addr16
adc
add
testl
jmp
mov
mov
add
mov
pusha
ret
int3
fsubrs
mov
imul
sahf
shlb
mov
call
lds
adc
lret
ret
mov
ret
add
mov
xor
mov
mov
dec
cli
loope
enter
sbb
pop
mov
cmp
test
jmp
sbb
pop
mov
mov
add
movsb
jp
inc
jbe
push
rclb
mov
arpl
cmp
cmp
and
add
test
call
jle
fdivs
push
adc
ret
mov
ret
mov
cmp
nop
pop
shll
shlb
ret
mov
mov
mov
push
inc
loope
xchg
push
and
out
faddl
nop
inc
pop
aad
jbe
mov
lret
xchg
inc
ret
mov
xor
ja
xor
pop
fiadds
les
js
sahf
xor
das
ljmp
outsl
call
icebp
dec
ret
mov
mov
imul
out
and
dec
ret
mov
xchg
pop
dec
ret
cld
cmp
inc
ret
out
ss
dec
inc
test
cli
jecxz
mov
fsubl
or
stos
les
dec
and
inc
out
xchg
repz
cmp
pop
gs
sub
pop
and
dec
ror
mulb
icebp
adcl
fsubp
lahf
std
add
jle
fcompl
aaa
test
push
inc
in
mov
insl
shlb
cmp
add
push
lcall
xchg
jge
xchg
pusha
ret
mov
pop
out
jb
ret
stos
adc
ret
push
cmpsb
xchg
lock
mov
ret
mov
addb
repnz
in
lods
leave
mov
loopne
decl
and
mov
cmp
mov
adc
ret
ljmp
sbb
test
xchg
mov
std
cmp
jp
mov
add
add
ret
fistl
and
dec
pop
clc
push
xchg
jno
jg
mov
ret
add
iret
mov
xchg
rol
pop
sbb
aam
stos
fwait
sti
imul
inc
dec
ret
mov
or
xchg
add
mov
mov
jb
pop
mov
sbb
jmp
loop
mov
inc
mov
rorb
or
stos
jp
out
lahf
add
repnz
ret
mov
and
sub
std
jae
jmp
scas
pop
stos
sbb
or
mov
insl
jge
cmp
add
mov
mov
sub
xor
add
rcll
in
or
mov
insl
inc
aad
cltd
and
ds
setne
xchg
dec
ret
pop
lret
es
ret
mov
add
inc
lahf
lds
aaa
push
fnstcw
mov
enter
add
mov
mov
int
lea
xchg
pop
imul
add
push
mov
adc
in
sbb
adcb
movsb
ret
cmp
or
ret
insb
ret
mov
adc
or
mov
mov
outsl
imulb
add
hlt
data16
mov
xor
into
xor
cmp
pop
lds
xchg
ja
or
mov
mov
cltd
iret
add
scas
insb
ret
mov
imul
cmpsl
ret
mov
jo
push
mov
mov
dec
ret
call
pop
cmp
ret
jl
mov
push
enter
int3
jae
mov
fucomp
sub
mov
sub
in
cltd
add
daa
pop
or
mov
fwait
dec
pop
sbb
mov
pop
mov
mov
pusha
ret
out
loopne
xchg
xor
dec
orb
pop
hlt
mov
ret
mov
cmp
and
mov
cli
lahf
inc
out
xchg
xor
jnp
cmc
arpl
gs
mov
daa
push
ja
nop
cwtl
jo
xor
in
les
xchg
sti
sbb
mov
push
inc
ret
jg
inc
mov
test
xchg
nop
sbb
adc
mov
jo
mov
push
cmp
pop
lahf
inc
ret
push
int3
push
insb
ret
shl
or
insb
ret
mov
pop
inc
ret
shlb
push
jecxz
ret
aad
nop
hlt
push
inc
xchg
hlt
or
mov
ss
lcall
add
mov
inc
into
mov
cmp
jg
xchg
jb
and
mov
mov
xor
xchg
aad
pop
imul
add
popl
add
and
mov
jl
jp
scas
dec
xlat
jmp
lahf
xchg
push
lcall
mov
int3
mov
push
out
rolb
add
add
fistpl
rorb
add
adc
cmc
and
aad
mov
add
cmpsl
mov
mov
lds
or
and
inc
or
lods
xor
add
mov
fsts
outsb
and
or
mov
pop
cmp
stos
push
icebp
adc
aas
and
mov
adc
xchg
cld
aaa
insb
ret
mov
mov
inc
and
addb
add
imul
fwait
jg
or
mov
cs
jnp
rolb
bound
pop
inc
stos
sbb
aam
lret
ret
mov
push
xor
nop
and
and
mov
into
mov
mov
hlt
stc
les
mov
pop
andl
cwtl
mov
pop
jae
and
mov
cmp
dec
arpl
jb
inc
pop
and
mov
cmp
stc
pop
add
mov
xlat
pop
dec
ret
into
loop
inc
push
pusha
ret
mov
push
cld
fsubs
dec
cltd
sahf
sbb
inc
ret
mov
or
mov
stos
xor
insb
ret
mov
add
mov
xchg
imul
mov
ljmp
inc
pushf
or
jb
movsl
jge
dec
sub
lret
lea
je
xor
sub
mov
mov
out
aaa
insl
pop
jecxz
sbbl
xchg
mov
sub
pushf
cmp
pushf
dec
decl
or
mov
imul
test
orl
mov
jns
adc
popa
dec
mov
ret
movsb
mov
call
jmp
sbb
fst
in
aaa
mull
ret
scas
cli
outsb
xor
lcall
lods
repnz
fwait
repz
ds
dec
ret
or
mov
mov
outsb
test
lret
add
mov
aaa
ds
sbb
mov
ds
mov
cmp
inc
cli
fs
mov
push
and
mov
sub
mov
dec
pop
popa
adc
fistpl
ja
ds
jns
jge
add
add
xlat
cli
add
clc
push
je
mov
add
mov
cwtl
cmp
mov
mov
cmp
popf
js
mov
sub
mov
ds
arpl
dec
ficoms
cmp
push
xchg
mov
sub
scas
mov
add
cmpl
das
mov
dec
cld
dec
add
mov
and
inc
ret
mov
adc
xchg
or
cltd
add
mov
mov
push
out
movsl
mov
out
rep
and
mov
sub
addr16
mov
mov
in
movsb
lods
xchg
inc
popf
cmpb
mov
sub
and
movsb
xlat
mov
mov
xchg
gs
jo
mov
cld
test
push
push
jo
push
lds
rorl
add
ret
mov
in
ret
gs
add
and
movsb
inc
or
mov
push
sub
mov
add
mov
ss
test
dec
ret
mov
mov
jno
flds
mov
jge
jo
fstl
loop
xchg
std
rorl
ret
hlt
cltd
sub
xchg
xchg
rorl
mov
inc
and
mov
add
inc
fs
jno
sub
jmp
mov
repnz
sarb
pusha
ret
mov
stos
stc
movsl
imul
dec
int
fdivl
loope
inc
ret
mov
adc
and
add
lock
cmc
popf
std
push
lahf
pushf
inc
ret
mov
icebp
xor
xor
and
into
and
mov
jne
adc
push
pop
addr16
inc
stos
add
sti
cld
daa
fdivp
sarl
mov
xchg
sub
mov
add
jl
mov
jp
cli
inc
rorb
adc
or
fisubrl
and
mov
mov
jmp
inc
ret
shll
jmp
out
jge
pop
pop
or
fnstenv
jmp
cmc
jbe
insl
pop
mov
inc
mov
ficomps
jne
pushf
lods
mov
mov
lahf
imul
pop
add
imul
sbb
int3
adc
loope
lret
cli
inc
ret
mov
add
es
jbe
xchg
mov
subl
xor
fs
movsb
pop
push
jnp
icebp
stc
mov
and
mov
repz
lret
ss
aaa
stc
insb
ret
lcall
fs
js
jne
xor
push
xchg
add
sahf
push
mov
insb
ret
mov
mov
xchg
push
push
mov
mov
mov
out
ret
xchg
xor
mov
jns
push
inc
jb
jmp
inc
mov
lcall
inc
ret
mov
jno,pt
bound
jl
jl
jmp
add
mov
jmp
jns
or
mov
jo
shll
push
xor
sub
xchg
lock
pop
adc
add
pop
lods
mov
or
mov
xor
xchg
movsl
sub
mov
mov
mov
or
mov
mov
and
mov
mov
adc
add
fdivr
pop
dec
ss
xchg
add
ret
xchg
add
and
rcrl
mov
mov
mov
add
pushf
lods
sarl
inc
push
in
cmp
inc
fst
into
push
dec
sti
lret
dec
sub
popl
outsb
push
ficoml
push
dec
add
fs
mov
add
xlat
cmc
adc
ret
mov
xor
jns
xchg
mov
imul
sti
cmpsl
cmp
mov
xchg
sahf
pop
fisubrs
jg
dec
sbb
inc
loope
sbb
cltd
scas
rclb
fiadds
or
inc
fimuls
pop
loopne,pt
jle
mov
cmpsl
js
ret
mov
jg
pop
and
popa
push
cmpb
cmpsl
fs
mov
insb
ret
xor
push
es
out
jne
adc
pop
sub
mov
ret
mov
ret
popa
divb
add
cmp
dec
mov
shll
ja
ret
dec
xchg
sub
mov
jl
xor
lret
imul
ja
sbb
sub
dec
ret
clc
pusha
ret
mov
fnstsw
xor
mov
mov
cli
les
mov
or
mov
add
jl
xchg
mov
jg
jg
ret
les
inc
mov
ljmp
pop
popa
cmp
ret
mov
cmp
iret
pop
jne
lcall
lret
and
push
pop
jne
adc
sub
ret
mov
jge
mov
hlt
inc
in
pop
ret
pop
inc
mull
mov
mov
sarl
outsl
lret
aaa
aad
add
mov
notb
fs
mov
and
mov
lret
xchg
add
mov
jecxz
shl
dec
loopne
xor
iret
stos
and
xor
ret
jne
pop
rorl
pop
fs
les
adcb
push
pop
lods
mov
imul
dec
ret
push
mov
jne
lahf
lods
test
mov
mov
repnz
push
call
mov
cmp
or
mov
sub
mov
adc
cwtl
sub
mov
mov
add
xorb
jnp
popf
aas
mov
push
adc
ret
jge
cwtl
add
sub
testb
movsl
push
jne
and
mov
mov
loop
cmp
testl
out
adc
pop
push
dec
movsl
mov
ret
adc
scas
mov
or
mov
or
jnp
cmp
ret
mov
dec
ret
mov
pop
pusha
ret
xchg
lahf
add
dec
lret
mov
cmpsb
inc
lock
je
fisttpll
jge
cmp
fiaddl
sub
fs
jp
mov
ret
mov
mov
ljmp
fistps
cmp
inc
ret
mov
arpl
and
pusha
ret
mov
mov
sub
mov
ret
mov
mov
loop
push
in
adc
ret
mov
inc
xor
std
push
or
jg
sti
icebp
xorl
bound
xchg
adcl
cmp
mov
inc
inc
das
cmpsl
lahf
and
into
push
ret
nop
and
ret
mov
jge
push
mov
ret
stos
out
lret
or
ret
mov
roll
mov
or
testb
or
mov
ret
mov
pop
mov
out
jmp
test
xor
jno
jo
adc
bound
je
into
loopne
inc
inc
push
add
mov
nop
clc
fsubrl
or
cmp
stos
jbe
mov
stos
out
addl
out
mov
and
jl
inc
stc
push
fisubrs
ret
mov
push
sarl
mov
fdivrp
inc
fisttpl
push
mov
sar
ret
mov
ret
insb
ret
repnz
rorb
mov
andb
dec
lret
ret
push
inc
int
xlat
xor
sbbl
sub
jns
imul
sub
mov
cmp
enter
loopne
daa
out
xchg
inc
ret
mov
mov
push
mov
test
sbb
cwtl
fs
mov
sbb
and
and
mov
loopne
jne
ret
jmp
adc
shr
xlat
jp
mov
ficompl
xor
sarb
xchg
mov
test
mov
adc
flds
add
jo
insl
cld
lods
sti
fiaddl
ret
into
sahf
cs
cs
aaa
dec
cmp
je
mov
loope
sbb
jp
cmpsb
into
dec
mov
add
sub
shll
mov
and
mov
sub
repnz
lcall
ja
sarl
lods
xchg
into
sub
pop
mov
ret
mov
insb
ret
mov
add
mov
div
mov
imul
lret
push
testb
sbb
enter
fdivr
sub
mov
dec
ret
jo
xchg
adc
ret
mov
cld
addr16
lock
je
addr16
lods
test
cmpsb
mov
stc
pop
mov
fs
mov
xchg
and
xchg
push
mov
scas
jmp
ret
mov
cmp
nop
jge
es
adc
hlt
adc
test
lret
pop
ret
mov
pusha
ret
mov
push
dec
inc
ljmp
ret
mov
xchg
mov
std
incl
leave
pop
add
mov
add
xor
jl
scas
out
mov
push
add
mov
out
andb
js
sub
mov
ret
mov
test
stos
pop
fwait
test
add
inc
jecxz
fimuls
add
and
ret
mov
xchg
inc
out
inc
int3
add
mov
lcall
stos
mov
dec
js
fwait
cmp
mov
or
inc
jl
cmp
aam
lret
dec
push
data16
lret
sti
cmpsl
and
lsl
movsl
sub
push
xchg
outsb
mov
mov
mov
je
lock
mov
push
icebp
add
sub
mov
or
mov
cmpsb
lods
push
jns
jge
push
imul
cmp
mov
mov
outsb
push
or
mov
ret
mov
jbe
hlt
mov
lret
loop
int3
fsubp
js
ret
mov
test
out
pop
loopne
in
repz
jp
aaa
fyl2xp1
mov
or
add
adc
cmc
sub
mov
dec
movsl
pop
ret
pop
sbb
ret
jmp
push
pusha
ret
mov
jae
mov
mov
add
pop
sub
mov
mov
jnp
pop
fstps
test
pop
adc
jl
jo
push
or
mov
aaa
add
out
inc
in
fs
mov
dec
fucomp
push
mov
push
jge
pop
addl
jns
sub
mov
cmp
push
sbb
push
cli
and
inc
ret
and
pusha
ret
mov
mov
and
fsubrl
jno
jg
inc
jns
ret
mov
insl
add
mov
in
clc
mov
mov
ret
mov
ret
mov
xchg
int3
xchg
dec
dec
daa
push
inc
ret
pop
pop
cwtl
loope
ret
mov
fdivs
push
js
loopne
push
or
mov
push
lret
pop
inc
orl
mov
fmull
mov
xchg
xor
and
xor
add
test
rcrl
jne
enter
mull
xor
das
insl
rorl
add
movl
clc
push
lea
call
sub
add
add
mov
cmp
je
mov
clc
push
push
push
call
test
clc
jne
dec
add
mov
add
add
push
push
push
push
push
push
push
call
test
jne
xor
cld
push
es
lea
movl
push
push
push
push
push
clc
call
push
or
lea
je
movzbl
or
add
mov
add
not
cld
xor
test
cld
jne
call
dec
mov
add
add
rorb
mov
bnd
cmp
mov
mov
mov
or
lea
lea
add
xchg
shr
shr
xchg
lock
and
sub
cld
jne
push
mov
jne
push
add
mov
sbb
ret
cli
pop
outsb
xor
add
mov
mov
add
rcll
clc
jns
lods
stos
mov
lret
pop
adc
adc
outsl
sub
mov
into
out
xchg
lods
mov
rcr
shr
shlb
sub
int
lcall
ret
dec
ret
push
mov
stos
jle
ret
mov
ret
mov
sbbb
hlt
out
popa
lods
pop
add
adc
or
call
dec
ret
jns
and
pop
lgs
jle
pop
push
adc
and
mov
push
mov
fnstcw
lock
iret
scas
cmp
mov
add
repz
or
mov
in
sub
push
clc
mov
aaa
push
lret
cmp
lea
int3
das
xchg
test
cltd
xchg
dec
arpl
inc
ret
mov
pop
rclb
loop
std
xor
add
lret
push
xor
arpl
mov
or
out
test
xor
loop
and
dec
outsl
push
adc
imulb
movsb
and
mov
or
sar
ret
mov
jno
inc
stos
push
cltd
pop
or
mov
clc
fwait
movsb
into
sarl
fsts
sbb
mov
push
jl
mov
xor
repz
ffreep
cmpsb
call
mov
dec
sub
add
mov
ret
push
xchg
cmpsl
or
adc
rol
jl
mov
mov
inc
adc
incl
fsubr
ljmp
add
xchg
add
xchg
mov
mov
adc
jnp
gs
dec
ret
jb
sub
mov
jb
xor
mov
mov
shll
cmpsb
cmp
sbb
or
mov
inc
jmp
movsl
dec
shll
push
cmc
sbbl
dec
mov
into
movsl
out
sbb
add
push
enter
sbb
jmp
sub
pop
aam
jno
into
sub
and
mov
ret
loopne
punpcklwd
mov
sub
mov
push
pop
dec
inc
ret
mov
mov
pop
pop
mov
push
and
mov
les
test
out
movsl
mov
or
mov
scas
jmp
ljmp
rcl
mov
ret
mov
and
mov
and
iret
jmp
xor
cmp
fmull
add
mov
and
pop
dec
jg
cmp
mov
mov
les
insl
mov
insb
ret
cmpsb
cld
in
mov
sbb
or
xchg
imul
inc
ret
mov
fiaddl
add
jmp
out
cmp
loop
insl
aam
xchg
lods
push
add
xchg
add
mov
mov
push
pop
enter
mov
cld
adc
xchg
inc
ret
mov
adc
push
test
je
clc
mov
hlt
insl
cmpsl
pop
jo
ret
iret
fwait
das
adc
sbb
outsb
push
mov
ret
push
mov
add
add
sahf
aam
cld
jb
ja
xor
xor
mov
add
incl
ret
fs
mov
cs
out
fmull
jnp
lcall
enter
call
pop
js
stos
mov
add
fstpl
je
ret
mov
pop
mov
ret
add
les
lods
or
add
push
adc
ret
xor
pop
nop
jl
jbe
orb
sbb
sahf
movsl
pop
pop
pop
out
fwait
or
in
cmp
mov
enter
mov
mov
lahf
mov
sbb
push
stos
adc
sbb
push
fwait
and
mov
add
mov
push
sbb
sbb
imul
and
jnp
cmp
leave
xlat
lock
les
int
xor
in
xchg
in
pushf
lock
in
and
mov
push
jg
faddl
sub
sbb
dec
adc
dec
sbb
mov
jp
fs
mov
negb
push
jge
in
and
ds
testl
push
pop
push
sub
add
test
mov
test
inc
sbb
add
fstps
xor
or
mov
sahf
xor
je
notl
inc
add
pop
sub
mov
outsl
mov
mov
imul
movl
push
or
mov
in
or
outsl
xor
cmp
add
cmpsb
push
dec
fs
mov
sti
mov
xchg
and
mov
xchg
lret
push
xchg
iret
cmpsl
mov
dec
jmp
outsl
adc
sbb
xor
push
add
aaa
pop
push
jae
ret
in
sbb
repz
and
mov
mov
cltd
out
fistpl
push
adc
test
mov
push
mov
mov
push
mov
push
lock
fcompl
xchg
and
lea
loop
ret
mov
dec
imul
cmp
imul
pop
xchg
enter
mov
mov
pop
in
push
in
fwait
mov
jb
push
test
int
push
outsb
clc
stos
loope
aad
fiadds
and
sahf
cmp
mov
cs
loope
ret
icebp
mov
mov
xchg
dec
shr
dec
and
mov
cmp
je
jnp
add
add
push
xlat
cli
nop
jo
js
mov
sbb
mov
cmp
adc
mov
mov
add
adc
sarl
jmp
dec
ret
mov
jnp
dec
ret
mov
daa
rcr
leave
fsubrl
add
in
mov
mov
cmp
mov
sub
jle
push
mov
add
cmp
jnp
xchg
mov
mov
in
pop
inc
popf
movsl
test
push
cmp
lock
mov
mov
fstl
mov
into
push
or
mov
and
add
bnd
sub
mov
cmpsl
pusha
ret
mov
mov
jns
mov
pop
imul
scas
cmpsl
dec
ret
xchg
clc
daa
xor
gs
mov
cmp
ret
rcrl
sahf
lahf
mov
stc
mov
mov
ret
mov
or
rcpps
out
aam
adc
lcall
pop
loopne
xchg
add
mov
or
mov
sarl
repz
fisttpl
add
add
jle
ss
flds
mov
sbb
pop
push
or
adc
inc
sbb
mov
dec
repnz
lcall
add
ret
mov
inc
add
mov
ss
xchg
lds
repz
jg
xchg
push
jp
test
sbb
adc
push
lea
fcmove
adc
or
fwait
loop
mov
add
sbb
adc
ret
dec
ret
stc
scas
push
sub
mov
shll
pusha
ret
mov
add
xchg
ret
push
push
movsb
adc
adc
outsb
das
imul
or
xchg
imul
pop
iret
adc
add
or
inc
xor
push
cmp
cli
lods
enter
es
xor
hlt
rorb
add
add
mov
movsl
repnz
nop
jmp
add
mov
rcrl
out
out
nop
mov
cmp
aam
shll
bound
push
notl
adc
inc
xchg
aas
adc
adc
je
mov
pushf
pop
jne
cmp
iret
sbb
pop
imul
xchg
inc
sbb
lods
cmp
mov
add
in
mov
sub
mov
add
in
push
in
xor
int3
push
lds
mov
aaa
je
lods
jne
pop
inc
ret
mov
mov
mov
repnz
xchg
loop
mov
out
dec
add
sbbb
sbb
aas
mov
and
lahf
cmp
mull
mov
mov
adc
adc
add
int3
mov
xlat
outsb
or
mov
inc
int3
stc
jecxz
fidivrl
cmp
cwtl
int
fisubrs
mov
sub
xor
repz
ret
xchg
mov
loopne
push
sub
fwait
cmpsb
mov
sbb
xlat
sub
mov
add
or
add
sti
in
cld
push
out
push
movsb
adc
aaa
push
hlt
clc
cmp
das
push
rcll
ret
in
loop
xchg
dec
jmp
iret
enter
cmp
cmp
data16
xor
jmp
test
test
add
pop
mov
add
insl
adc
push
cld
or
mov
sbb
pushl
jne
negl
pop
mov
pusha
ret
cmp
and
mov
sbb
mov
insl
enter
jge
mov
xchg
mov
cltd
mov
clc
addl
inc
ret
mov
pop
leave
fwait
mov
ret
mov
sarb
cmp
pop
cwtl
outsb
xchg
or
mov
fists
scas
fistpl
std
leave
lahf
xchg
mov
jge
adc
adc
sbb
cld
or
fisttps
and
mov
adc
sarb
inc
fidivl
or
mov
aad
mov
mov
add
bnd
mov
paddsw
mov
or
mov
jnp
sub
into
outsl
lret
sbb
fsubr
aam
std
sub
mov
or
cli
cmp
ret
mov
imul
push
and
push
mov
add
sub
insb
ret
mov
adc
inc
mov
inc
xchg
jge
jg
ret
mov
lahf
xchg
btc
sbb
ljmp
jp
ret
mov
add
mov
ja,pn
addr16
xchg
mov
mov
push
arpl
inc
pop
addr16
or
mov
pusha
ret
mov
push
add
mov
ret
mov
ret
sbb
enter
outsl
daa
or
ds
loop
dec
shrb
jb
popa
data16
adc
aaa
lahf
mov
fidivl
roll
popf
icebp
mov
push
lods
dec
ret
ret
adc
ljmp
and
repnz
mov
push
ss
dec
leave
pop
cmc
push
cmp
int3
inc
xchg
xchg
fs
mov
add
int3
cs
and
lea
lods
jecxz
ret
xacquire
xchg
inc
loope
loopne
pushf
lds
mov
add
mov
inc
ret
push
adc
in
icebp
cwtl
imul
stos
fdivl
jge
cs
ret
out
jo
fstp
insl
rorb
push
popf
jge
aaa
out
addr16
sub
add
out
xor
add
mov
jns
add
aaa
bnd
dec
out
ret
aam
xor
inc
sub
mov
loope
sbb
jle
xchg
mov
push
out
lods
jns
ret
jnp
lods
test
sbb
dec
adcb
cmpsb
mov
mov
call
ret
cmpsb
fdiv
inc
ret
mov
jmp
pop
hlt
jne
push
inc
shll
mov
inc
ret
lods
inc
pmullw
and
mov
push
adc
add
fisttps
pop
repz
mov
xor
cld
arpl
or
aam
jo
dec
xchg
pop
ficompl
add
mov
in
cltd
popf
inc
pop
jecxz
push
out
aam
stos
push
movsl
loope
inc
inc
jg
pop
push
add
in
adc
jp
popa
xor
push
cmc
xor
ret
call
add
mov
cmp
add
mov
mov
xorl
dec
lret
xchg
into
push
cwtl
sub
rolb
mov
scas
jge
lret
fidivl
add
cmpxchg
repz
or
adc
mov
cli
mov
clc
call
divb
popa
push
dec
into
cwtl
fs
mov
cmpsl
stos
push
lahf
sub
test
mov
or
pop
movsb
sbb
jmp
jle
adc
int
shrb
ret
cmpb
ret
mov
pop
mov
ret
mov
cmp
and
loope
pop
xchg
or
mov
rclb
cltd
or
adcb
jg
xlat
jg
arpl
andl
add
test
dec
pushl
or
xchg
sbb
or
fildll
add
lods
and
mov
int3
call
pop
cmp
cmp
mov
test
fwait
mov
mov
sub
mov
add
pop
jmp
mov
adcl
push
stos
adc
sbb
push
ret
mov
xchg
add
mov
cmp
sub
xor
ret
sbb
mov
sub
or
mov
inc
cmc
jns
push
mov
int3
sub
mov
jb
ret
and
cmp
sub
mov
mov
jb
mov
out
add
mov
test
xor
sbb
popa
aad
jo
ret
mov
and
mov
sub
andb
mov
dec
ret
mov
add
mov
dec
pop
repnz
xchg
mov
sbb
ljmp
mov
pop
jp
xchg
call
nop
jmp
add
add
cmp
pushf
js
xor
nop
nop
jae
lahf
add
add
loopne
leave
in
jb
sub
repnz
nop
nop
jae
cmp
add
in
and
mov
add
inc
and
repnz
nop
nop
jae
xchg
push
leave
jb
lock
ret
mov
add
jge
inc
add
add
add
dec
fiadds
push
roll
mov
clc
repnz
nop
nop
jae
loop
add
cltd
mov
and
nop
nop
jae
testl
xor
ljmp
cld
nop
nop
jae
add
loop
roll
adc
add
cs
cltd
xor
push
mov
xchg
ret
add
add
add
fiaddl
mov
clc
repnz
nop
nop
jae
add
je
adcl
jae
push
add
cmp
out
sub
add
adc
stos
push
mov
xchg
ret
add
add
add
xchg
jno
nop
push
mov
leave
nop
jmp
add
addl
add
loop
add
dec
ret
in
xor
add
add
add
add
addl
lahf
leave
push
cmp
cwtl
inc
add
inc
add
mov
add
dec
dec
add
push
xchg
sar
repnz
nop
nop
jae
es
adc
add
xchg
push
add
jne
push
mov
xchg
ret
sub
push
loopne
inc
add
add
mov
adc
repnz
nop
nop
jae
je
add
dec
add
test
jno
add
add
cmpl
sub
push
fld1
push
mov
xchg
ret
ja
add
push
add
jmp
nop
nop
jae
push
push
add
daa
pop
es
roll
add
dec
dec
mov
nop
push
mov
leave
nop
jmp
or
add
ja
lahf
in
add
cld
nop
nop
jae
push
add
add
add
xchg
push
push
mov
xchg
ret
add
add
add
add
add
shll
dec
push
mov
xchg
ret
sbb
inc
add
sahf
xchg
pop
mov
adc
dec
test
xchg
ret
loop
leave
add
xchg
add
nop
nop
jae
push
hlt
add
outsb
add
ljmp
aam
push
mov
add
add
add
dec
or
pop
mov
inc
add
rclb
jle
add
push
fiaddl
add
in
ja
add
add
test
test
repnz
nop
nop
jae
add
add
hlt
add
lods
push
nop
push
mov
leave
nop
jmp
add
jae
sub
add
add
push
je
clc
repnz
nop
nop
jae
add
inc
cmp
sarb
repnz
nop
nop
jae
add
add
push
add
xor
clc
repnz
nop
nop
jae
add
add
add
in
fiaddl
add
cmpsl
add
clc
repnz
nop
nop
jae
xorl
jb
movsb
inc
ret
mov
dec
sub
repnz
nop
nop
jae
mov
jb
outsb
in
add
add
bound
shl
push
mov
xchg
ret
sub
daa
add
xor
add
add
enter
add
and
and
add
add
dec
inc
add
add
je
mov
dec
and
add
repnz
nop
nop
jae
add
dec
cmp
pop
add
jg
add
repnz
nop
nop
jae
push
sahf
mov
leave
in
add
loopne
mov
xchg
cmc
mov
clc
repnz
nop
nop
jae
inc
add
fiaddl
mov
add
pop
clc
repnz
nop
nop
jae
ds
xor
ja
hlt
in
jne
clc
repnz
nop
nop
jae
add
loopne
jb
add
add
clc
repnz
nop
nop
jae
outsb
jp
add
loop
addl
loop
and
mov
xor
nop
push
mov
leave
nop
jmp
mov
push
add
fidivrl
paddusb
and
push
mov
xchg
ret
jb
add
dec
ds
add
nop
push
mov
leave
nop
jmp
add
add
add
add
jp
push
jl
loope
icebp
clc
repnz
nop
nop
jae
imul
add
add
hlt
mov
xor
clc
repnz
nop
nop
jae
outsb
push
add
add
icebp
popl
clc
repnz
nop
nop
jae
add
inc
ljmp
push
jbe
ja
clc
repnz
nop
nop
jae
jp
add
cmp
add
add
je
clc
repnz
nop
nop
jae
lahf
push
add
repnz
nop
nop
jae
sldt
add
add
add
fsubp
aas
fistpl
nop
push
mov
leave
nop
jmp
add
in
add
fisubl
add
ret
mov
mov
clc
repnz
nop
nop
jae
inc
add
add
add
sub
mov
leave
nop
jmp
jb
add
mov
in
ja
add
repnz
nop
nop
jae
add
je
verw
ret
cmc
fld1
push
mov
xchg
ret
add
sbb
add
dec
add
add
leave
or
cld
nop
nop
jae
ja
add
add
je
add
jo
add
clc
repnz
nop
nop
jae
add
jae
add
add
out
inc
sarl
lret
mov
leave
nop
jmp
leave
sbb
sbb
add
mov
jno
inc
add
leave
add
adc
add
pop
add
clc
repnz
nop
nop
jae
xchg
roll
sbb
push
add
mov
enter
in
leave
nop
jmp
add
add
add
xchg
getsec
ret
add
add
add
popf
in
xchg
fiadds
add
ljmp
repz
repnz
nop
nop
jae
add
addl
dec
ficompl
leave
push
push
mov
xchg
ret
add
add
daa
add
jne
clc
repnz
nop
nop
jae
add
add
and
xchg
jb
leave
pop
and
mov
add
dec
xchg
inc
add
add
and
push
ds
add
sbb
loope
les
mov
xchg
ret
add
cmp
add
popf
mov
clc
repnz
nop
nop
jae
add
push
jp
add
add
mov
xchg
ret
add
cltd
add
add
leave
pop
xorl
mov
xchg
ret
add
leave
testl
push
push
mov
xchg
ret
add
add
mov
cmp
add
dec
je
shr
clc
repnz
nop
nop
jae
add
add
add
daa
mov
test
stc
clc
repnz
nop
nop
jae
in
add
mov
clc
repnz
nop
nop
jae
movl
add
fwait
push
mov
add
je
cmpsl
xchg
add
lcall
add
xchg
pop
add
mov
leave
nop
jmp
cmp
mov
add
add
dec
mov
push
mov
xchg
ret
xor
out
rcl
add
outsb
add
movl
adc
clc
repnz
nop
nop
jae
dec
add
jge
in
cld
push
mov
xchg
ret
add
testl
and
adc
jns
clc
repnz
nop
nop
jae
add
in
pop
lahf
dec
jp
push
leave
add
ret
mov
mov
leave
nop
jmp
ja
add
add
add
pusha
clc
repnz
nop
nop
jae
push
roll
dec
cltd
mov
add
sahf
insl
push
clc
repnz
nop
nop
jae
add
add
hlt
pop
in
loop
sbb
pushl
push
mov
xchg
ret
and
roll
add
jb
jne
clc
repnz
nop
nop
jae
add
add
fiadds
pop
out
add
in
leave
nop
jmp
push
add
dec
pop
add
push
mov
xchg
ret
add
add
leave
cmp
nop
push
mov
leave
nop
jmp
add
add
daa
add
xchg
je
movsb
push
push
nop
push
mov
leave
nop
jmp
add
add
add
add
es
dec
call
and
mov
xchg
ret
loopne
xor
cmp
and
add
add
clc
repnz
nop
nop
jae
add
ja
add
in
add
testb
and
mov
dec
cmp
push
mov
leave
nop
jmp
xor
mov
popf
shlb
lods
add
cld
nop
nop
jae
add
push
add
add
sbb
nop
nop
jae
add
and
lahf
add
clc
push
push
add
add
nop
nop
jae
in
loopne
add
adc
incl
inc
testb
add
cltd
add
jp
cmp
add
pop
clc
repnz
nop
nop
jae
pop
ja
add
ja
push
ja
fistpl
cld
nop
nop
jae
push
add
add
out
add
iret
push
push
mov
xchg
ret
orl
inc
outsb
xchg
add
fiadds
adc
repnz
nop
nop
jae
add
adc
add
jae
clc
repnz
nop
nop
jae
dec
add
add
add
add
add
xchg
add
popf
leave
ds
div
jp
xor
mov
mov
clc
repnz
nop
nop
jae
cmp
xchg
popf
add
add
inc
add
push
test
cmp
nop
jmp
add
add
add
dec
ljmp
push
mov
leave
nop
jmp
add
sbb
add
addr16
clc
repnz
nop
nop
jae
fisubl
add
add
ret
clc
repnz
nop
nop
jae
dec
sub
sahf
adc
mov
add
add
add
clc
repnz
nop
nop
jae
lahf
andl
daa
add
cmp
xchg
ret
push
mov
xchg
ret
leave
loop
push
fiadds
outsb
in
inc
leave
mov
mov
clc
repnz
nop
nop
jae
adc
add
push
xchg
add
adc
mov
xchg
ret
hlt
sbb
in
sahf
leave
add
add
add
push
mov
xchg
ret
roll
je
add
add
mov
inc
nop
push
mov
leave
nop
jmp
add
addl
loopne
mov
add
cmp
repnz
nop
nop
jae
loop
add
cs
push
add
xor
divps
nop
nop
negl
repnz
nop
nop
jae
add
leave
inc
cltd
out
divl
sub
mov
repnz
nop
nop
jae
ljmp
loop
add
add
call
in
leave
nop
jmp
add
add
mull
roll
sbb
fld1
push
mov
xchg
ret
roll
es
popf
in
dec
mov
in
lahf
sub
mov
xchg
ret
add
add
push
mov
lea
xchg
mov
sahf
loopne
pop
dec
popa
inc
inc
mov
clc
repnz
nop
nop
jae
add
ds
shll
add
mov
mov
leave
nop
jmp
push
add
jae
add
aaa
repnz
push
mov
xchg
ret
add
xchg
add
add
in
leave
nop
jmp
inc
push
subl
neg
loop
push
mov
xchg
add
in
add
mov
add
cld
shr
add
push
loop
sbb
jge
rolb
repnz
nop
nop
jae
add
add
mov
out
pop
push
nop
push
mov
leave
nop
jmp
roll
push
mov
lahf
push
add
jge
clc
repnz
nop
nop
jae
add
out
leave
shl
add
loop
negb
addb
cmp
ret
addl
es
andl
xchg
add
push
mov
xchg
ret
add
leave
add
xchg
add
cltd
add
add
nop
push
mov
leave
nop
jmp
lahf
adc
add
loopne
sbb
push
clc
repnz
nop
nop
jae
daa
add
add
in
adc
add
lods
adc
add
repnz
nop
nop
jae
push
loop
add
mov
push
mov
xchg
ret
cltd
ja
es
add
add
ja
add
popa
cli
call
nop
jmp
jae
in
dec
add
ljmp
nop
nop
jae
add
add
xchg
ltr
clc
repnz
nop
nop
jae
add
add
add
ja
ja
xor
mov
xchg
ret
add
inc
push
cmp
les
fcoms
dec
clc
repnz
nop
nop
jae
ds
cltd
add
add
cmp
dec
add
nop
nop
jae
add
add
add
xor
add
out
nop
push
mov
leave
nop
jmp
leave
add
mov
sbb
add
push
mov
xchg
ret
add
cmp
add
add
and
mov
in
and
add
popf
sahf
loopne
add
add
inc
adc
add
shlb
adc
repnz
nop
nop
jae
loopne
ds
add
leave
leave
leave
loopne
jae
clc
repnz
nop
nop
jae
cmp
fiaddl
add
ja
add
add
fcmovu
out
push
mov
xchg
ret
dec
addl
add
not
add
mov
nop
push
mov
leave
nop
jmp
cmp
add
add
testl
repnz
nop
nop
jae
loop
leave
xchg
leave
add
add
push
push
mov
xchg
ret
add
xor
push
sub
add
add
push
in
pop
mov
clc
repnz
nop
nop
jae
add
add
mov
add
jle
clc
repnz
nop
nop
jae
add
pop
add
cmp
shrl
fldl
clc
repnz
nop
nop
jae
add
add
test
test
repnz
nop
nop
jae
add
add
inc
leave
add
in
fisubl
mov
clc
repnz
nop
nop
jae
mov
je
add
ja
leave
ja
dec
fiaddl
mov
clc
repnz
nop
nop
jae
pop
sbb
dec
add
add
jecxz
xbegin
jae
xor
cmp
hlt
add
push
popf
add
adc
cld
nop
nop
jae
loopne
push
add
add
mulb
loopne
push
clc
repnz
nop
nop
jae
es
add
push
je
sarb
repnz
nop
nop
jae
add
add
add
pcmpgtb
jne
add
add
cmp
add
add
adc
call
repnz
nop
nop
jae
add
add
xor
add
cmp
mov
push
mov
xchg
ret
mov
sbb
fiadds
add
test
repnz
nop
nop
jae
loop
add
add
popf
popf
add
add
clc
repnz
nop
nop
jae
divb
add
add
sub
rclb
pshufw
cmp
ret
add
add
add
add
add
jp
xor
in
inc
add
add
jp
outsb
leave
mov
adc
nop
jae
cs
xor
in
add
ja
add
das
mov
clc
repnz
nop
nop
jae
fiaddl
dec
push
add
cmovns
nop
jmp
add
push
inc
cs
fiadds
add
add
mov
clc
repnz
nop
nop
jae
add
add
add
adc
lret
pop
push
mov
xchg
ret
testl
add
push
add
add
mov
xchg
push
mov
xchg
ret
ja
push
leave
add
add
jp
lock
mov
nop
push
mov
leave
nop
jmp
je,pn
add
push
loopne
jae
clc
repnz
nop
nop
jae
shrl
add
mov
add
add
dec
xchg
jne
clc
repnz
nop
nop
jae
cltd
testb
leave
jb
ja
add
cld
nop
nop
jae
add
loopne
push
add
add
imul
nop
push
mov
leave
nop
jmp
add
in
in
cmp
mov
add
repnz
nop
nop
jae
sahf
leave
add
push
fiadds
inc
xor
nop
push
mov
leave
nop
jmp
and
loop
push
outsb
add
daa
pop
xor
clc
repnz
nop
nop
jae
sub
add
add
mov
push
mov
leave
nop
jmp
out
add
ja
and
add
inc
adc
nop
push
mov
leave
nop
jmp
add
add
ljmp
xor
repnz
nop
nop
jae
add
mov
add
add
hlt
add
push
mov
xchg
ret
testl
dec
add
add
add
add
mov
sar
repnz
nop
nop
jae
add
add
roll
es
push
in
and
mov
add
push
clc
repnz
nop
nop
jae
add
in
outsb
sbb
loop
in
push
nop
push
mov
leave
nop
jmp
loopne
add
add
clc
mov
cld
nop
nop
jae
sbb
ja
add
and
popf
add
nop
push
mov
leave
nop
jmp
addl
popf
add
add
loop
setnp
nop
jae
and
add
add
lahf
add
add
add
mov
leave
nop
jmp
add
je
add
sub
add
in
in
mov
clc
repnz
nop
nop
jae
xor
loop
ja
add
cld
nop
nop
jae
add
addl
and
push
mov
xchg
ret
add
sub
add
out
loopne
cli
repz
clc
repnz
nop
nop
jae
add
cltd
push
adc
mov
clc
repnz
nop
nop
jae
subl
dec
add
or
sbb
clc
repnz
nop
nop
jae
push
sub
add
add
enter
and
repnz
nop
nop
jae
loopne
add
popf
dec
add
add
mov
aam
xor
push
mov
xchg
ret
mov
add
add
cmp
add
repnz
nop
nop
jae
jp
add
add
roll
add
dec
roll
cmp
repnz
nop
nop
jae
inc
add
ja
add
add
add
add
movswl
clc
repnz
nop
nop
jae
roll
leave
mov
leave
add
in
leave
cmpw
nop
push
mov
leave
nop
jmp
add
cmp
add
push
cmp
cld
nop
nop
jae
add
dec
add
add
sbb
inc
add
add
add
add
testb
add
jne
clc
repnz
nop
nop
jae
loop
add
add
sub
repnz
nop
nop
jae
push
sahf
sbb
lahf
adc
add
lock
cs
nop
push
mov
leave
nop
jmp
add
add
mov
cmp
mov
mov
clc
repnz
nop
nop
jae
dec
addl
add
add
add
clc
repnz
nop
nop
jae
push
add
leave
add
loop
mov
inc
push
mov
xchg
ret
add
jae
daa
notl
add
add
add
outsb
inc
add
cmovne
cs
sub
add
and
push
mov
xchg
ret
add
push
add
jae
es
insb
ret
mov
inc
adc
mov
xchg
ret
leave
leave
loop
dec
sarl
add
add
in
mov
clc
repnz
nop
nop
jae
add
mov
push
clc
repnz
nop
nop
jae
add
out
popf
add
dec
add
add
hlt
dec
mov
clc
repnz
nop
nop
jae
adc
addl
push
xchg
cmp
rep
nop
push
mov
leave
nop
jmp
add
jb
add
cmp
clts
flds
mov
xchg
ret
mov
jb
ja
add
jmp
repnz
nop
nop
jae
hlt
push
add
hlt
add
add
cmp
add
nop
push
mov
leave
nop
jmp
add
xorl
ljmp
iret
test
xchg
ret
add
add
push
add
leave
push
ret
jge
clc
repnz
nop
nop
jae
add
add
add
sbb
loop
mov
clc
repnz
nop
nop
jae
outsb
sbb
pop
sbb
add
in
pop
push
mov
xchg
ret
in
add
mov
sbb
in
add
testl
cld
nop
nop
jae
ja
sbb
add
add
push
sbb
mov
cld
nop
nop
jae
add
ja
ljmp
sub
mov
insb
gs
repnz
nop
nop
jae
in
out
jp
add
jne
clc
repnz
nop
nop
jae
add
pop
add
add
sub
outsb
inc
les
mov
clc
repnz
nop
nop
jae
sbb
add
add
push
daa
add
dec
push
clc
repnz
nop
nop
jae
testl
je
leave
cmp
add
mov
pop
and
push
mov
leave
nop
jmp
loopne
add
add
jae,pt
add
mov
nop
push
mov
leave
nop
jmp
mov
outsb
popf
add
daa
divb
mov
cld
nop
nop
jae
push
out
popf
add
add
pop
add
nop
push
mov
leave
nop
jmp
ja
push
jb
jp
loopne
sbb
xor
nop
nop
jae
sub
sbb
add
add
push
add
add
jmp
loop
shl
out
push
add
add
cmp
loop
add
ficomps
fdivp
cmpsl
mov
clc
repnz
nop
nop
jae
add
es
verr
verw
lock
lea
push
mov
xchg
ret
loop
testl
xchg
pop
clc
repnz
nop
nop
jae
add
add
add
add
test
repnz
nop
nop
jae
add
verr
add
leave
add
push
mov
dec
add
add
fildll
add
jmp
gs
ficomps
repnz
nop
nop
jae
lahf
xor
loop
add
shrl
cmp
repnz
nop
nop
jae
add
add
add
add
add
jb
add
mov
mov
xchg
ret
add
je
add
ja
outsb
ror
leave
jnp
out
clc
repnz
nop
nop
jae
add
add
add
leave
rcl
pop
jb
clc
repnz
nop
nop
jae
out
add
sub
add
push
lds
mov
test
clc
repnz
nop
nop
jae
leave
add
add
ds
movsl
mov
nop
push
mov
leave
nop
jmp
add
psrad
cmp
in
add
add
clc
repnz
nop
nop
jae
in
add
add
mov
cmp
inc
cs
mov
clc
repnz
nop
nop
jae
and
sub
add
jae
loopne
and
mov
nop
push
mov
leave
nop
jmp
add
add
cmp
add
in
sub
add
clc
repnz
nop
nop
jae
mov
add
ja
call
nop
jae
add
cmp
sbb
or
mov
xchg
ret
add
push
add
jb
add
add
add
js
repnz
nop
nop
jae
ja
loop
xchg
ljmp
mov
pusha
clc
repnz
nop
nop
jae
in
loopne
addl
sbb
neg
sbb
clc
repnz
nop
nop
jae
cltd
loopne
cmovs
popf
add
adc
add
push
add
clc
repnz
nop
nop
jae
ficoml
sbb
mov
test
out
icebp
push
push
mov
xchg
ret
xor
add
inc
add
shll
xchg
mov
adc
nop
jmp
add
add
leave
add
add
add
add
add
repnz
nop
nop
jae
mov
lahf
add
xchg
mov
mov
push
mov
xchg
ret
sub
push
mov
mov
adc
repnz
nop
nop
jae
add
sub
mov
jp
mov
push
mov
leave
nop
jmp
dec
push
and
add
lahf
add
mov
clc
repnz
nop
nop
jae
sbb
add
imull
daa
push
in
ret
popa
clc
repnz
nop
nop
jae
cmp
add
jae
je
cltd
push
mov
clc
repnz
nop
nop
jae
ljmp
dec
add
call
clc
repnz
nop
nop
jae
add
ds
add
out
add
cld
nop
nop
jae
leave
add
inc
in
loop
ds
popf
ret
clc
repnz
nop
nop
jae
jae
and
mov
inc
add
add
add
push
mov
xchg
ret
cmp
add
orl
clc
repnz
nop
nop
jae
add
outsb
divb
jp
mov
push
mov
xchg
ret
push
hlt
cmp
add
push
testl
lret
push
mov
xchg
ret
add
push
add
add
add
jne
clc
repnz
nop
nop
jae
add
fisubrs
add
ja
clc
repnz
nop
nop
jae
leave
add
add
loopne
add
add
sbb
test
repnz
nop
nop
jae
in
testl
fwait
clc
repnz
nop
nop
jae
ds
mov
add
sbbl
repnz
nop
nop
jae
ja
add
push
add
out
clc
repnz
nop
nop
jae
add
add
add
sbb
out
add
mov
cmp
ret
add
add
leave
add
loop
add
cmp
insl
push
push
mov
xchg
ret
cmp
add
hlt
ja
add
movl
and
push
mov
xchg
ret
leave
add
add
in
add
cli
clc
repnz
nop
nop
jae
notb
leave
ljmp
jno
push
es
jecxz
repnz
nop
nop
jae
cmp
add
add
add
jne
nop
push
mov
leave
nop
jmp
add
mov
or
push
mov
leave
nop
jmp
add
leave
add
add
mov
xchg
fadd
sub
push
mov
xchg
ret
cmp
add
leave
add
inc
cmp
cld
nop
nop
jae
sub
inc
loopne
roll
push
add
inc
mov
nop
push
mov
leave
nop
jmp
add
push
add
add
add
test
add
clc
repnz
nop
nop
jae
add
jp
ljmp
add
and
and
add
push
je
addl
fucomip
sub
clc
repnz
nop
nop
jae
add
add
sbb
je
jecxz
push
mov
xchg
ret
femms
add
jae
add
outsb
sahf
loop
push
imul
inc
add
sbb
add
fisubrl
add
call
clc
repnz
nop
nop
jae
mov
cltd
shrl
add
add
aaa
add
clc
repnz
nop
nop
jae
sbb
leave
add
add
jp
adc
sub
nop
nop
jae
add
addl
pop
loop
adcb
mov
xchg
ret
add
add
add
add
add
add
les
push
mov
xchg
ret
je
dec
add
loopne
fiadds
add
fwait
push
mov
xchg
ret
add
add
push
pop
add
jp
loopne
daa
mov
clc
repnz
nop
nop
jae
subl
add
mov
inc
call
inc
add
cmp
cltd
add
add
sub
ja
fwait
clc
repnz
nop
nop
jae
outsb
lahf
lahf
leave
push
outsb
mov
mul
mov
nop
push
mov
leave
nop
jmp
add
subl
insb
ret
mov
cmp
repnz
nop
nop
jae
sub
add
add
add
mov
mov
xchg
ret
lahf
add
rcl
inc
push
add
add
cs
cld
nop
nop
jae
loop
push
add
add
add
sub
mov
xor
nop
pop
sub
repnz
nop
nop
jae
leave
ljmp
pop
clc
repnz
nop
nop
jae
verw
inc
add
in
add
add
mov
cld
nop
nop
jae
sbb
in
add
jb
pop
clc
repnz
nop
nop
jae
mov
add
loop
adc
ror
push
sbbb
inc
jb
clc
repnz
nop
nop
jae
add
ja
push
movsl
stos
nop
push
mov
leave
nop
jmp
add
add
inc
add
push
mov
cld
nop
nop
jae
cltd
subl
add
sub
add
add
jo
pop
clc
repnz
nop
nop
jae
push
add
and
add
out
add
mov
scas
nop
push
mov
leave
nop
jmp
xchg
adc
jb
add
mov
clc
repnz
nop
nop
jae
add
leave
add
add
inc
je
inc
pop
push
mov
xchg
ret
xchg
loop
add
add
push
mov
xchg
ret
add
jb
pop
add
add
add
add
xchg
push
mov
xchg
ret
sub
add
mov
add
loop
push
clc
repnz
nop
nop
jae
add
add
add
add
add
int
push
sub
pusha
xchg
inc
add
leave
add
addl
shll
mov
xchg
ret
push
add
add
loop
push
loop
push
push
mov
xchg
ret
jae
add
inc
add
mov
clc
repnz
nop
nop
jae
sbb
add
add
pop
nop
push
mov
leave
nop
jmp
add
leave
jp
add
jb
loop
jne
clc
repnz
nop
nop
jae
add
add
add
sbb
fiaddl
out
mov
clc
repnz
nop
nop
jae
cltd
push
in
add
add
add
je
mov
pop
push
clc
repnz
nop
nop
jae
dec
add
add
add
sahf
ljmp
inc
clc
repnz
nop
nop
jae
add
add
je
loop
lahf
add
add
mov
in
movsb
les
or
add
fidivl
rolb
mov
cmp
cld
nop
nop
jae
sbb
add
add
mov
mov
clc
repnz
nop
nop
jae
push
jae
push
add
jb
add
push
clc
repnz
nop
nop
jae
daa
add
in
add
sbb
addl
or
clc
repnz
nop
nop
jae
ja
add
xchg
sub
leave
dec
jne
clc
repnz
nop
nop
jae
add
push
mov
sti
push
clc
repnz
nop
nop
jae
add
cltd
add
jp
jnp
clc
repnz
nop
nop
jae
push
add
add
cs
popf
verr
push
mov
xchg
ret
add
inc
in
cs
and
adc
push
mov
xchg
ret
mov
cmp
add
jae
leave
push
ret
mov
push
mov
leave
nop
jmp
add
add
add
dec
sub
ljmp
mov
xchg
ret
out
add
add
hlt
cmp
inc
add
cmp
jmp
mov
cmpsb
add
cs
add
loope
add
pop
fistpl
clc
repnz
nop
nop
jae
push
shl
leave
xor
add
add
sti
add
clc
repnz
nop
nop
jae
popf
push
daa
add
leave
dec
fs
mov
add
push
mov
xchg
ret
roll
in
hlt
add
add
leave
add
add
das
add
clc
repnz
nop
nop
jae
add
mov
sub
xor
je
clc
repnz
nop
nop
jae
lahf
add
add
add
inc
and
cld
nop
nop
jae
fmulp
sbb
and
add
jne
nop
push
mov
leave
nop
jmp
loop
adc
add
sahf
into
push
push
clc
repnz
nop
nop
jae
leave
pop
add
in
jae
sahf
fiadds
add
and
mov
push
mov
xchg
ret
sarl
test
mov
ret
in
call
clc
repnz
nop
nop
jae
add
push
inc
push
sbb
inc
iret
je
clc
repnz
nop
nop
jae
add
dec
lods
popa
pop
nop
push
mov
leave
nop
jmp
mov
hlt
cs
push
sbb
and
mov
xchg
ret
add
push
neg
jb,pn
add
in
aas
test
nop
push
mov
leave
nop
jmp
rcrl
je
adcl
jae
push
in
sahf
add
add
sbb
ja
repnz
pop
cmp
repnz
nop
nop
jae
je
jb
sub
add
mov
testl
andl
add
add
push
es
pop
adc
add
repnz
nop
nop
jae
add
popf
add
cmp
and
repnz
nop
nop
jae
add
ja
cs
loop
inc
jb
fistpl
nop
push
mov
leave
nop
jmp
add
popf
add
add
add
divb
nop
push
mov
leave
nop
jmp
and
addl
in
inc
add
rcrl
mov
leave
nop
jmp
popf
add
testb
push
push
jb
mov
jne
clc
repnz
nop
nop
jae
add
cmp
add
outsb
mov
loopne
inc
add
add
add
out
inc
cltd
roll
push
popf
adc
push
add
add
repnz
nop
nop
jae
add
inc
mov
add
or
nop
nop
jae
add
add
testb
call
xor
repnz
nop
nop
jae
leave
add
add
add
mov
outsb
or
add
repnz
nop
nop
jae
push
jae
add
add
sbbb
push
mov
xchg
ret
movl
add
daa
jb
mov
cld
nop
nop
jae
add
sbb
in
mul
add
leave
sahf
ljmp
nop
nop
jae
add
add
add
ds
imul
clc
repnz
nop
nop
jae
outsb
add
leave
sbb
xchg
stos
push
clc
repnz
nop
nop
jae
roll
cs
add
add
popf
add
ret
mov
clc
repnz
nop
nop
jae
adc
add
xor
add
add
push
mov
xchg
ret
add
add
add
add
xorl
testb
add
repnz
nop
nop
jae
leave
add
fiadds
jb
sub
ret
mov
jmp
nop
nop
jae
add
add
popf
add
push
repz
clc
repnz
nop
nop
jae
sahf
jae
sub
jae
push
cmp
clc
repnz
nop
nop
jae
shll
add
add
and
xor
add
decl
push
mov
xchg
ret
cmp
add
imul
clts
iret
je
nop
push
mov
leave
nop
jmp
push
popf
popf
lcall
jmp
addl
add
add
ja
add
fsubp
cltd
loop
fiaddl
test
repnz
nop
nop
jae
hlt
cltd
daa
add
xchg
add
into
inc
xor
clc
repnz
nop
nop
jae
hlt
add
add
fcmovu
adc
mov
xchg
cli
jge
and
clc
repnz
nop
nop
jae
add
push
add
or
test
clc
repnz
nop
nop
jae
jp
add
jmp
mov
add
cmp
hlt
cmp
inc
addl
pop
and
into
push
xchg
clc
repnz
nop
nop
jae
add
add
push
add
loopne
popf
cmp
fld1
clc
repnz
nop
nop
jae
addl
add
leave
add
cltd
fwait
clc
repnz
nop
nop
jae
add
inc
inc
popf
push
sahf
jmp
jmp
push
mov
leave
nop
jmp
ja
add
add
leave
add
dec
popa
clc
repnz
nop
nop
jae
add
mov
inc
add
lahf
add
lds
nop
nop
jae
ljmp
in
add
ret
mov
push
or
push
mov
leave
nop
jmp
add
add
ja
leave
add
push
mov
leave
nop
jmp
ja
sahf
adc
out
add
xor
sub
mov
outsb
and
mov
xchg
ret
pop
add
loopne
push
push
add
out
nop
push
mov
leave
nop
jmp
loop
leave
ja
push
dec
xor
add
call
add
clc
repnz
nop
nop
jae
add
pop
sub
lahf
add
sbb
clc
repnz
nop
nop
jae
push
add
and
lahf
add
mov
clc
repnz
nop
nop
jae
add
add
ja
sbb
ljmp
nop
nop
jae
add
cmp
popf
leave
add
add
add
lods
test
nop
push
mov
leave
nop
jmp
inc
add
mov
add
add
add
inc
mov
clc
repnz
nop
nop
jae
sub
add
loop
add
add
jno
aas
add
imul
pushl
add
push
inc
jp
mov
clc
repnz
nop
nop
jae
inc
testb
add
add
mov
clc
repnz
nop
nop
jae
add
outsb
add
add
push
popa
push
mov
xchg
ret
sldt
add
cmp
fisubrs
push
add
sub
clc
repnz
nop
nop
jae
add
add
add
mov
add
add
repnz
nop
nop
jae
add
add
pxor
push
pop
push
nop
push
mov
leave
nop
jmp
jb
jb
out
loopne
cs
add
popa
clc
repnz
nop
nop
jae
add
add
ljmp
cmpsl
test
nop
push
mov
leave
nop
jmp
fisubrs
notl
add
add
add
ret
add
push
mov
xchg
ret
add
sahf
out
add
addl
shlb
mov
xchg
cmp
mov
adc
push
mov
leave
nop
jmp
add
sub
add
add
ds
mov
push
mov
xchg
ret
add
pop
in
add
add
leave
xchg
xchg
xchg
ret
push
add
push
add
adc
mov
nop
nop
jae
inc
add
add
add
add
pop
mov
sbb
add
clc
repnz
nop
nop
jae
add
add
daa
inc
add
dec
xor
clc
repnz
nop
nop
jae
add
add
popf
add
fimull
jg
clc
repnz
nop
nop
jae
hlt
ljmp
add
fidivs
fistpl
clc
repnz
nop
nop
jae
mov
add
push
out
xor
add
scas
fld1
nop
push
mov
leave
nop
jmp
add
div
sub
add
inc
jb
into
stc
pop
nop
push
mov
leave
nop
jmp
xchg
add
add
daa
add
clc
repnz
nop
nop
jae
add
add
add
push
sti
pusha
push
mov
xchg
ret
add
addl
push
es
add
lcall
lea
add
push
mov
leave
nop
jmp
hlt
inc
add
add
ds
add
mov
xchg
ret
je
add
adc
add
add
add
incl
in
inc
add
add
leave
leave
mov
orl
cmp
jae
repnz
nop
nop
jae
add
inc
add
je
clc
repnz
nop
nop
jae
jp
in
test
je
clc
repnz
nop
nop
jae
add
cmp
testl
roll
mov
xchg
ret
add
cltd
pop
loopne
inc
adc
rcr
and
mov
xchg
ret
fisubrl
add
push
add
mov
push
sti
clc
repnz
nop
nop
jae
outsb
lahf
idivl
add
add
sub
clc
repnz
nop
nop
jae
mov
ja
ljmp
nop
jae
add
add
add
add
add
add
ret
ret
inc
shl
push
mov
xchg
ret
add
shl
add
add
add
push
add
add
je
clc
repnz
nop
nop
jae
cmp
add
ljmp
add
add
jb
je
add
add
inc
pusha
ret
and
mov
and
repnz
nop
nop
jae
add
add
add
add
mov
cmpsb
xor
add
repnz
nop
nop
jae
add
inc
repnz
repnz
nop
nop
jae
add
add
push
add
loopne
adc
push
mov
leave
nop
jmp
add
loop
out
add
adc
push
nop
push
mov
leave
nop
jmp
add
add
addl
add
jp
fisubrl
lods
push
mov
xchg
ret
add
loopne,pn
in
cmpxchg
in
add
dec
pop
clc
repnz
nop
nop
jae
add
xor
add
fiaddl
cmp
xor
push
mov
xchg
ret
jb
add
add
add
ror
mov
inc
ret
mov
call
inc
add
push
add
add
cmp
in
sbb
mov
push
mov
leave
nop
jmp
push
add
sub
add
add
ljmp
cld
nop
nop
jae
add
add
add
add
push
inc
inc
add
mov
loop
nop
push
mov
leave
nop
jmp
add
add
add
add
xor
adcl
repnz
nop
nop
jae
add
sub
add
jne
clc
repnz
nop
nop
jae
in
sahf
cmp
add
add
nop
push
mov
leave
nop
jmp
add
add
add
xchg
sub
sub
mov
sar
call
nop
jmp
add
and
ja
add
clc
repnz
nop
nop
jae
divb
add
add
outsb
add
mov
and
mov
repnz
nop
nop
jae
mov
add
loopne,pn
ficomps
inc
fwait
push
mov
xchg
ret
dec
sahf
mov
add
add
add
add
mov
xchg
ret
outsb
mov
jb
add
ja
loopne
addl
lea
nop
push
mov
leave
nop
jmp
xor
add
push
shl
push
clc
repnz
nop
nop
jae
dec
add
shl
add
in
cmp
in
dec
cmp
push
mov
leave
nop
jmp
add
add
lahf
add
sub
sub
jecxz
nop
push
mov
leave
nop
jmp
add
inc
roll
add
div
and
dec
ret
mov
mov
push
nop
push
mov
leave
nop
jmp
fidivl
verw
sub
ret
fistpl
push
mov
xchg
ret
je
loopne
fiaddl
jp
add
add
sub
clc
repnz
nop
nop
jae
in
jp
out
add
testl
xchg
ret
sub
daa
ja
add
in
cmp
add
clc
repnz
nop
nop
jae
add
loopne
add
push
push
mov
xchg
ret
mov
add
cmp
jb
loop
push
cmpsb
into
and
cld
nop
nop
jae
add
leave
je
push
call
clc
repnz
nop
nop
jae
add
roll
add
add
ja
xor
push
mov
xchg
ret
push
leave
add
inc
ja
cltd
add
add
ret
mov
add
add
repnz
nop
nop
jae
add
add
roll
add
nop
push
mov
leave
nop
jmp
xor
add
dec
fcmovu
cmp
add
clc
repnz
nop
nop
jae
outsb
add
push
sub
ljmp
nop
nop
jae
add
add
add
es
add
push
push
clc
repnz
nop
nop
jae
pop
add
xor
add
add
daa
gs
clc
repnz
nop
nop
jae
sldt
loopne
mov
add
sbb
rcll
in
mov
sub
lock
adc
add
add
mov
dec
add
lock
sub
clc
repnz
nop
nop
jae
ja
add
add
add
movzwl
push
mov
xchg
ret
add
add
andl
mov
leave
nop
jmp
add
add
add
add
ret
nop
push
mov
leave
nop
jmp
xorl
xor
sub
mov
pop
inc
add
cs
loop
add
add
jae
dec
xor
rorb
pop
jp
add
mov
ljmp
push
clc
repnz
nop
nop
jae
add
daa
loopne
add
cmp
fimuls
mov
add
add
ret
add
mov
xchg
xor
cmpsl
shlb
push
nop
push
mov
leave
nop
jmp
sub
add
fiaddl
add
adc
inc
mov
clc
repnz
nop
nop
jae
add
add
mov
add
dec
lds
repnz
nop
nop
jae
pop
add
add
adc
push
add
clc
repnz
nop
nop
jae
dec
push
sub
loop
cs
imul
and
mov
mov
mov
xchg
ret
add
add
add
add
add
add
test
nop
push
mov
leave
nop
jmp
lahf
add
add
add
mov
jl
ret
pop
sahf
push
loop
fld1
clc
repnz
nop
nop
jae
lahf
add
add
hlt
sahf
add
jb
add
mov
repnz
nop
nop
jae
add
mov
leave
add
push
testb
push
addl
ret
fiaddl
loopne
add
add
add
mov
push
nop
push
mov
leave
nop
jmp
leave
add
ja
loop
adc
les
mov
xchg
ret
add
leave
ficompl
add
addr16
clc
repnz
nop
nop
jae
es
loop
loop
add
or
add
pop
add
add
movsl
and
cmpsb
movb
add
add
xchg
inc
mov
clc
repnz
nop
nop
jae
add
mov
sub
mov
xchg
ret
add
fiaddl
movl
loop
ljmp
cld
nop
nop
jae
add
sub
loopne
add
jmp
nop
nop
jae
add
add
daa
add
add
divb
ret
dec
ret
mov
scas
enter
nop
nop
jae
pop
dec
add
inc
add
ljmp
mov
add
ret
test
incl
xor
cmp
add
mov
dec
add
inc
push
add
add
add
lods
clc
repnz
nop
nop
jae
sbb
daa
cltd
idivl
push
add
ljmp
cmp
nop
push
mov
leave
nop
jmp
xor
leave
je
add
daa
and
clc
repnz
nop
nop
jae
mov
in
jp
add
in
inc
push
push
mov
xchg
ret
pop
dec
add
testl
or
clc
repnz
nop
nop
jae
out
add
add
fistps
mov
xchg
ret
add
add
add
jp
in
add
dec
cmp
repnz
nop
nop
jae
add
jb
addl
mov
cmp
ret
leave
add
add
add
push
outsb
ja
sub
add
mov
xor
repnz
nop
nop
jae
add
push
fiadds
add
loop,pt
pop
clc
repnz
nop
nop
jae
add
add
add
add
popf
mov
nop
push
mov
leave
nop
jmp
add
mul
sub
push
add
ds
sbb
add
repnz
nop
nop
jae
sub
in
add
es
add
mov
add
nop
nop
jae
je
loop,pn
loop
outsb
add
lahf
cwtl
testl
xchg
ret
fidivl
add
add
add
jbe
ret
fisubs
push
mov
xchg
ret
jae
add
daa
jae
add
push
fs
xchg
dec
ret
mov
pushl
add
push
sbb
add
in
add
repnz
nop
nop
jae
add
add
add
jo
test
nop
push
mov
leave
nop
jmp
add
sahf
add
outsb
sub
lret
add
push
mov
xchg
ret
test
sahf
add
adc
mov
clc
repnz
nop
nop
jae
mov
sbb
add
cmp
cld
nop
nop
jae
add
hlt
daa
jb
add
sub
cld
nop
nop
jae
add
ja
pop
add
add
pop
call
nop
jmp
testb
mull
add
inc
ret
mov
mov
clc
repnz
nop
nop
jae
mov
mul
ja
add
mov
xchg
ret
add
leave
add
jae
inc
add
add
ds
add
repnz
nop
nop
jae
add
add
mov
cld
nop
nop
jae
add
loop
add
popf
inc
out
jns,pn
rclb
nop
jmp
sbb
add
xchg
xor
cmp
nop
push
mov
leave
nop
jmp
popf
ljmp
xor
in
pop
add
clc
repnz
nop
nop
jae
and
popf
add
sbb
push
mov
xchg
ret
sahf
add
mov
add
add
and
popf
ds
mov
or
repnz
nop
nop
jae
add
add
loopne
loopne
add
push
add
mov
adc
nop
push
mov
leave
nop
jmp
add
ja
leave
add
jl
clc
repnz
nop
nop
jae
add
mov
adc
inc
mov
nop
nop
jae
popf
add
add
rorl
add
lea
clc
repnz
nop
nop
jae
add
add
add
test
pusha
clc
repnz
nop
nop
jae
daa
add
popf
fidivs
add
adc
add
clc
repnz
nop
nop
jae
push
add
in
add
jae
testl
jae
add
add
mov
imul
nop
jae
add
sbb
shl
fsubp
fists
mov
xchg
ret
dec
push
daa
add
in
add
icebp
mov
push
mov
xchg
ret
sbb
add
push
inc
add
mov
xchg
ret
sbb
push
push
fsubrp
leave
sbb
add
cltd
iret
add
clc
repnz
nop
nop
jae
sahf
daa
leave
jp
jp
ds
fld1
clc
repnz
nop
nop
jae
sbb
ljmp
dec
pushf
xor
jmp
nop
jae
add
add
mov
pop
mov
leave
clc
repnz
nop
nop
jae
add
sub
add
add
roll
lds
repnz
nop
nop
jae
push
sbb
cmp
dec
add
cmp
clc
repnz
nop
nop
jae
leave
add
add
out
add
ret
xor
outsb
inc
add
add
add
and
add
jae
daa
out
je
clc
repnz
nop
nop
jae
add
mov
cltd
loop
mov
clc
repnz
nop
nop
jae
add
sbbl
repnz
nop
nop
jae
add
add
out
sub
leave
leave
and
je
gs
clc
repnz
nop
nop
jae
xor
inc
testb
inc
addl
xchg
inc
fld1
push
mov
xchg
ret
add
and
add
add
xor
insl
push
nop
push
mov
leave
nop
jmp
loop
add
loop
add
add
add
push
ret
mov
nop
push
mov
leave
nop
jmp
add
add
add
jb
leave
add
mov
nop
push
mov
leave
nop
jmp
cmp
popf
loopne
cmp
testl
or
clc
repnz
nop
nop
jae
add
and
xchg
add
es
cmpw
clc
repnz
nop
nop
jae
fiadds
add
add
add
repnz
nop
nop
jae
hlt
add
divl
pop
orl
adc
add
leave
cmp
add
xchg
push
cli
icebp
lea
nop
push
mov
leave
nop
jmp
add
add
loop
add
xchg
ret
mov
clc
repnz
nop
nop
jae
add
add
add
add
add
es
rcll
dec
jnp
add
inc
movl
add
add
fwait
clc
repnz
nop
nop
jae
add
jp
mov
add
add
arpl
mov
leave
nop
jmp
add
add
push
add
es
call
clc
repnz
nop
nop
jae
add
je
add
add
inc
aaa
pop
clc
repnz
nop
nop
jae
add
leave
outsb
add
imul
add
leave
leave
pop
clc
repnz
nop
nop
jae
add
add
sub
movl
roll
push
mov
xchg
ret
add
add
add
add
or
mov
test
inc
mov
add
int
add
cmp
push
clc
repnz
nop
nop
jae
hlt
testb
add
add
out
jecxz
loope
incl
add
repnz
nop
nop
jae
add
add
push
add
adc
mov
push
mov
xchg
ret
add
add
push
pop
add
roll
div
movsl
clc
repnz
nop
nop
jae
inc
ljmp
inc
daa
daa
push
ds
push
nop
push
mov
leave
nop
jmp
add
mov
in
push
add
xchg
inc
add
cmp
loopne
dec
add
in
mov
lock
push
nop
push
mov
leave
nop
jmp
push
sbb
je
add
testb
psrlq
repnz
nop
nop
jae
dec
add
fidivrl
add
sbb
clc
repnz
nop
nop
jae
ficomps
loopne
add
test
in
xor
add
cmp
add
stc
sbb
lock
jmp
add
add
add
leave
add
loopne
mov
into
repz
push
mov
xchg
ret
leave
sahf
add
fiadds
cmp
sub
add
push
clc
repnz
nop
nop
jae
daa
add
cmp
loop
add
fiaddl
adc
sbb
repnz
nop
nop
jae
fidivrl
mov
add
in
into
cmpb
nop
push
mov
leave
nop
jmp
add
sub
add
jp
push
clc
repnz
nop
nop
jae
loopne
add
add
in
push
add
dec
add
mov
add
mov
clc
repnz
nop
nop
jae
mov
sbb
add
add
add
cld
nop
nop
jae
add
mov
pcmpeqb
jnp
inc
lock
push
mov
leave
nop
jmp
popf
sub
cltd
outsb
sbb
add
rcrl
cld
nop
nop
jae
loopne
add
add
push
add
add
loop
fwait
nop
push
mov
leave
nop
jmp
hlt
jb
add
add
loopne
add
xor
in
add
nop
jmp
leave
ficomps
std
pop
push
mov
xchg
ret
testb
xchg
xor
pop
lahf
sbb
dec
push
push
mov
xchg
ret
sub
add
add
sbb
add
add
jne
clc
repnz
nop
nop
jae
add
and
leave
add
adc
mov
lds
dec
add
add
add
test
add
shr
push
mov
xchg
ret
loop
mov
ds
add
fisubrs
inc
add
clc
repnz
nop
nop
jae
nop
loop
and
inc
mov
add
add
clc
repnz
nop
nop
jae
jb
add
add
adc
pop
fistpl
push
mov
xchg
ret
je
xchg
add
add
add
ret
lret
mov
nop
push
mov
leave
nop
jmp
add
add
mov
mov
nop
push
mov
leave
nop
jmp
add
daa
fidivs
dec
add
repnz
nop
nop
jae
add
add
mov
add
nop
nop
jae
leave
push
jae
add
push
push
loopne
mov
and
sbb
clc
repnz
nop
nop
jae
add
add
loopne
add
leave
lret
leave
nop
push
mov
leave
nop
jmp
leave
add
add
leave
add
lahf
add
fdivs
clc
repnz
nop
nop
jae
add
sub
add
add
push
mov
aam
inc
add
push
add
cmp
cltd
add
data16
add
push
mov
xchg
ret
dec
add
leave
out
add
add
add
clc
aaa
cld
nop
push
mov
leave
nop
jmp
and
inc
add
add
add
ret
mov
repnz
nop
nop
jae
adc
jae
adc
hlt
add
add
and
mov
inc
sub
mov
and
add
add
add
pop
movl
repz
push
mov
xchg
ret
add
add
adc
push
dec
mov
addl
push
mov
xchg
ret
add
dec
sub
add
add
and
popf
push
clc
repnz
nop
nop
jae
idivb
roll
add
add
cltd
add
add
rclb
xchg
jnp
add
add
add
xor
add
add
call
clc
repnz
nop
nop
jae
lahf
add
and
popf
mov
jno
add
outsb
add
add
adc
mov
mov
clc
repnz
nop
nop
jae
jb
in
fiaddl
add
dec
jb
add
mov
cmpl
nop
push
mov
leave
nop
jmp
add
add
cmpl
repnz
nop
nop
jae
add
add
add
sub
or
repnz
nop
nop
jae
add
sahf
and
add
or
sbb
push
mov
xchg
ret
ficoml
cs
leave
add
cmp
add
mov
clc
repnz
nop
nop
jae
xor
add
and
out
fs
mov
push
push
mov
xchg
ret
add
add
add
add
mov
xchg
ret
sbb
ja
add
leave
js
nop
ja
clc
repnz
nop
nop
jae
push
ljmp
or
mov
repnz
nop
nop
jae
cmp
add
add
dec
xchg
es
repnz
nop
nop
jae
sbb
jp
fiaddl
push
popf
add
push
mov
leave
nop
jmp
add
cltd
add
inc
ja
sbb
add
call
clc
repnz
nop
nop
jae
add
jae
jb,pn
cmc
add
clc
repnz
nop
nop
jae
leave
roll
adc
jb
jp
xchg
out
clc
repnz
nop
nop
jae
sahf
outsb
hlt
add
out
add
mov
nop
push
mov
leave
nop
jmp
mov
inc
cmpl
add
mov
sti
add
add
nop
push
mov
leave
nop
jmp
loopne
jp
inc
add
mov
mov
push
mov
xchg
ret
dec
add
add
add
sub
add
cmpsl
push
push
mov
xchg
ret
and
leave
push
add
leave
xchg
fiaddl
and
mov
push
mov
xchg
ret
add
add
push
inc
add
add
dec
jp
add
clc
repnz
nop
nop
jae
fcmove
add
fiaddl
add
add
add
dec
xor
cld
nop
nop
jae
adc
sarl
dec
movl
into
pop
jecxz
fld1
nop
push
mov
leave
nop
jmp
add
add
adc
add
lds
nop
nop
jae
add
add
push
add
loopne
lock
nop
push
mov
leave
nop
jmp
add
sub
add
leave
jg
push
mov
xchg
ret
xor
and
dec
add
add
add
sbb
repnz
nop
nop
jae
add
popf
add
movsb
adc
lock
repnz
nop
nop
jae
shrl
add
add
dec
dec
push
mov
xchg
ret
add
add
add
add
shll
call
nop
jmp
add
add
es
add
push
push
mov
xchg
ret
add
add
add
fiaddl
add
add
test
incl
add
add
in
add
add
add
mov
fwait
push
clc
repnz
nop
nop
jae
testl
add
je
add
adc
inc
ret
push
mov
nop
push
mov
leave
nop
jmp
mov
add
push
test
adc
xchg
ret
add
hlt
add
add
outsb
add
neg
push
mov
cmpsl
inc
add
xchg
add
fcompl
out
add
add
add
mov
mov
pop
sbb
bound
mov
imul
and
xchg
inc
and
mov
sbb
mov
jge
cmp
inc
xor
jle
push
adc
mov
xor
mov
gs
mull
mov
ret
mov
ljmp
pushf
mov
mov
lret
rclb
gs
cmp
mov
aaa
cmpsb
bound
ss
mov
ret
pop
jl
and
loopne
ret
mov
inc
inc
sbb
mov
push
mov
adc
ret
mov
enter
add
jg
arpl
jmp
shrl
add
sub
cmp
inc
and
out
dec
inc
aaa
data16
adc
out
add
mov
imul
xchg
popa
test
fdivrl
pop
push
xchg
xorb
pop
in
roll
lea
ret
mov
addl
mov
mov
dec
aam
fwait
outsb
loop
sbb
ret
mov
cmp
cmpsl
ja
push
or
jp
and
iret
pop
dec
scas
scas
pop
pop
in
fimuls
add
lds
imul
and
add
xchg
sbb
sub
mov
dec
mov
xor
adc
lods
shlb
inc
ret
mov
or
sub
orb
inc
ja
pushf
test
ret
cmp
inc
and
sub
clc
imul
mov
dec
psubw
ret
mov
or
mov
ret
mov
add
imul
add
sub
mov
pop
xchg
fldcw
in
or
mov
pop
and
mov
fnstcw
mov
stc
mov
mov
ret
mov
lret
mov
and
mov
xchg
cmpsb
leave
scas
ret
push
sub
jecxz
and
cli
es
ret
mov
add
ret
mov
ret
test
cld
popa
pusha
ret
mov
ret
incl
inc
xchg
jbe
idivb
mov
add
mov
rol
xlat
jle
ret
mov
add
and
ret
mov
adc
cltd
cmpsb
mov
test
pop
fidivl
movsb
pop
push
sub
pop
adc
ret
pop
mov
add
fdivrs
ficoml
nop
scas
bound
clc
icebp
cmp
pushf
shll
xchg
xchg
mov
and
mov
xchg
arpl
fst
js
mov
dec
inc
push
lock
push
lods
loopne
out
pop
inc
jae
movl
dec
ficompl
jmp
jg
stos
jmp
add
mov
adc
sbbl
movsl
adcb
mov
vunpckhps
or
mov
or
dec
in
pop
mov
ret
cwtl
or
mov
xchg
pop
inc
aad
cld
mov
js
iret
push
xchg
pushf
pop
aam
jg
lret
roll
add
adc
mov
aam
cmp
jns
fisttpll
ds
in
pop
mov
jb
add
dec
lret
push
xor
inc
add
mov
lods
sub
mov
mov
lods
lret
andb
cmp
mov
add
ret
mov
out
mov
clc
pop
and
int
jno
push
je
js
jbe
add
mov
mov
add
dec
repnz
mov
scas
std
mov
stos
aam
jecxz
ret
cld
das
xchg
push
jb
pop
lret
ret
roll
mov
fdivl
lods
notl
add
mov
cs
jg
bound
gs
jae
gs
mov
nop
outsb
mov
test
hlt
outsb
or
in
cmc
add
lds
mov
sti
fs
jle
xor
push
enter
and
mov
push
ret
mov
jle
aad
adc
mov
mov
cli
mov
xor
mov
mov
test
push
loopne
popa
xchg
or
ret
mov
ret
mov
xadd
add
scas
mov
ret
mov
ret
jge
ret
ja
fimuls
lods
push
ret
mov
or
mov
adc
lods
bswap
xor
ret
xchg
repnz
mov
cli
sub
rcrb
add
jl
scas
mov
xorl
ss
lds
cli
mov
jae
xor
cmp
jae
add
jg
inc
fnstenv
stos
pop
push
mov
mov
inc
and
std
pop
and
and
imul
dec
ret
mov
push
xchg
lea
ja
jge
push
stc
mov
out
sbb
ret
mov
or
mov
dec
or
push
mov
cltd
cld
outsb
or
mov
inc
lea
mov
add
and
rcll
inc
or
adc
insl
out
stc
insb
ret
mov
mov
ret
mov
mov
das
sbb
jmp
dec
iret
gs
negl
icebp
repnz
lahf
popf
testl
dec
mov
ret
mov
pop
add
xor
pop
cmpb
divb
or
cltd
sarl
add
push
loopne
sbb
jecxz
push
or
mov
inc
cmpb
add
sub
push
or
add
add
jle
fisubs
int3
mov
mov
dec
pop
pop
push
leave
fst
pusha
ret
push
pop
mov
and
sbb
push
and
sub
mov
inc
setb
cmp
ret
mov
mov
jge
push
inc
or
add
adc
clc
mov
gs
ja
mov
push
mov
mov
add
mov
imul
add
add
add
sbb
addr16
loopne
inc
push
pop
leave
addr16
ret
test
sbbb
jne
punpckldq
and
mov
dec
ret
mov
rol
cmp
add
lock
mov
stc
or
add
adc
jmp
sub
insl
cmc
dec
int
sub
xlat
call
xorl
adcb
mov
loope
into
push
pop
cmpsl
aam
add
ret
mov
fwait
outsb
int
out
fldl
rcl
mov
pop
or
aad
loop
movsb
mov
mov
js
ret
mov
mov
aas
sbb
divl
fnsave
movsb
fstl
ret
sbb
adc
ret
mov
and
mov
mov
mov
push
scas
xchg
mov
xchg
jp
cmpsb
pop
sub
ret
mov
iret
ds
es
xchg
jae
ret
add
mov
ret
popf
xor
mov
out
push
push
pop
dec
jmp
add
pusha
ret
sub
push
cmpsb
inc
mov
mov
lods
ficoml
ret
mov
aas
ds
push
lods
xor
mov
push
xor
xor
lret
push
and
mov
mov
jle
lock
add
cmpsb
test
sub
mov
cmp
and
mov
mov
add
cwtl
push
repz
imul
mov
mov
aaa
testb
pop
mov
lea
imul
sub
mov
adc
iret
decb
divb
adc
jo
rol
xchg
adc
adc
aas
sbb
add
or
add
filds
adc
or
ret
mov
mul
sbb
notl
insb
ret
mov
lret
negb
mov
leave
pop
lret
repz
xchg
sub
xchg
iret
mov
or
mov
dec
and
add
add
xchg
ljmp
sbb
jmp
pop
mov
ret
mov
int3
shlb
lods
inc
ret
mov
fisubrs
add
mov
bound
add
push
out
add
flds
bound
add
fmuls
mov
add
lret
jo
jmp
aam
and
mov
out
push
sbb
mov
sarb
dec
iret
mov
mov
shll
ret
mov
rclb
outsl
mov
imul
sub
mov
add
pop
cmpsl
inc
mov
iret
aaa
out
push
stos
lahf
push
cmpsl
push
mov
jmp
cmc
test
cmp
psubw
and
inc
ret
mov
ret
mov
xchg
repz
add
push
lret
jnp
ret
xor
mov
pop
xor
mov
xchg
insb
ret
or
xor
mov
cwtl
orb
loop
dec
sbb
fistpll
cld
jnp
loopne
jge
xchg
or
cmc
out
push
int
mov
fadds
mov
into
jmp
ret
cmpsl
push
rcll
jns
and
lods
pop
mov
mov
cmp
mov
int3
dec
sbb
add
or
frstor
pop
sbb
ret
mov
dec
cmp
mov
bound
ret
xorl
repz
push
out
pop
and
mov
jle
ljmp
scas
and
jge
dec
mov
inc
or
mov
cld
xor
mov
pop
xchg
lock
mov
inc
or
mov
nop
adc
adcb
jne
fidivs
fwait
rorb
cld
add
les
mov
dec
add
ret
mov
pop
out
pop
lcall
mov
push
filds
mov
mov
mov
xchg
and
mov
mov
ret
mov
add
dec
jbe
mov
insl
adc
mov
sbb
lcall
jmp
add
movsb
sub
mov
mov
inc
push
cmp
push
pop
cmc
pop
loopne
vpmaddwd
xchg
movsl
popf
cmp
insb
ret
mov
add
xor
inc
ret
mov
dec
ret
push
jns
jmp
stos
sbb
call
mov
pusha
ret
mov
and
ret
mov
pop
inc
mov
mov
mov
jno
cmp
ja
or
mov
sarb
aad
adc
movsl
inc
fwait
nop
aaa
mov
lds
rcll
jl
loopne
mov
hlt
mov
lock
orb
jbe
rcr
lea
fcmovbe
xchg
and
mov
cli
mov
and
mov
es
rep
xor
pop
mov
mov
repz
push
inc
movsb
and
lds
jne
dec
push
into
cmp
popf
les
add
je
cmp
inc
rol
or
shlb
mov
repz
dec
ret
mov
dec
ret
mov
push
std
loop
add
mov
add
push
movsb
mov
mov
xchg
test
jp
mov
jge
ss
ret
mov
outsb
xor
mov
pop
push
pop
out
xor
mov
jge
ret
mov
mov
outsl
sbb
addb
mov
stos
adc
pop
pop
push
inc
movsl
in
pop
xchg
dec
ret
mov
int3
sub
mov
jb
in
adc
mov
mov
in
mov
push
mov
mov
jecxz
mov
pop
call
xchg
cmp
xchg
mov
push
in
ljmp
repz
cmpsb
int
mov
mull
mov
sbb
adc
xchg
test
mov
loop
mov
ret
orl
rcr
dec
ret
mov
mov
icebp
adc
lds
movsl
cmp
ret
mov
rcrb
sbb
xchg
adc
roll
fs
xchg
mov
icebp
mov
popf
mov
cmp
and
cmpsl
ja
out
xor
rorb
cmp
les
xchg
or
pop
xlat
in
lret
bound
add
cmpsl
and
mov
dec
movsb
out
rcrb
pop
ret
sub
cwtl
lods
repz
lock
test
mov
add
mov
in
sbb
sbb
xlat
mov
mov
inc
adc
inc
and
cltd
iret
ror
aad
cmc
fldcw
pop
dec
push
iret
xchg
out
loope
mov
xchg
mov
or
mov
fdivrs
mov
imul
inc
ret
cltd
sub
ret
jo
mov
jnp
inc
push
testl
sbb
mov
lds
stc
add
roll
ret
fsubs
mov
xor
cmpsl
lods
inc
adc
cmp
inc
ljmp
mov
mov
push
dec
jb
xor
and
cmpsl
adc
or
mov
imul
les
movsl
leave
leave
sbb
mov
jns
lret
mov
adc
decb
daa
leave
loop
ret
mov
enter
dec
mov
ret
mov
imul
add
mov
lret
fdivrp
push
ljmp
add
cmp
ret
stc
frstor
repnz
cmpsl
dec
ret
insl
pop
xchg
xchg
mov
dec
ret
mov
clc
sahf
lret
inc
cltd
adc
xchg
lahf
ret
push
fbld
add
sub
xchg
cmp
push
mov
or
mov
mov
sbb
mov
or
mov
enter
inc
ret
add
lcall
lret
and
mov
inc
sub
ja
jns
pop
sbb
inc
ret
mov
pop
shrl
loopne
ljmp
jg
cmpsl
pusha
ret
test
ds
mov
ret
push
loope
pop
sbb
cltd
or
adc
add
mov
mov
ret
mov
cmp
mov
adc
aad
sbb
mov
mov
in
movsb
push
es
scas
xor
xchg
inc
add
inc
xchg
jg
mov
hlt
pushf
subb
cmp
aas
call
ret
mov
add
insl
xor
push
sbb
sub
sbbl
add
mov
and
mov
sbb
fistpll
cltd
out
addr16
ret
aaa
inc
push
dec
ficoms
loop
cmp
jbe
and
mov
ret
mov
movsb
stos
cmpsl
in
xchg
jbe
in
stc
mov
lods
or
mov
les
std
jg
outsl
hlt
into
data16
icebp
test
out
xchg
fs
push
pop
xor
xor
mov
mov
sub
mov
mov
loopne
dec
je
lods
aaa
aad
dec
fwait
out
or
inc
mov
jecxz
cmp
iret
pop
roll
incl
stc
ds
fs
dec
ret
mov
stos
clc
cwtl
mov
jo
xchg
addl
pop
jo
cmp
arpl
sbb
push
movsb
aas
dec
cmpsl
mov
add
jno
push
push
lods
lcall
inc
jmp
dec
enter
adc
lret
push
add
ret
lock
mov
aaa
inc
cmp
sbb
and
mov
cmp
and
mov
fwait
pop
lods
sub
xor
rcr
dec
ret
mov
nop
scas
fsub
ljmp
sub
mov
lock
stos
aas
ljmp
mov
add
xchg
add
out
xor
adcb
clc
popf
xchg
inc
std
aaa
or
ret
aaa
xor
xrelease
jmp
das
ficomps
bound
dec
mov
add
fsubs
cli
xchg
cmpsl
sub
mov
and
into
xor
add
push
mov
add
aam
dec
push
fidivs
cltd
std
outsl
mov
xor
scas
js
gs
call
add
adc
mov
mov
add
ja
xchg
mov
jne
pusha
ret
push
xor
or
sub
ret
mov
cmp
fadds
and
mov
cmp
fiaddl
out
cs
out
push
gs
mov
inc
add
mov
sbb
ficoms
mov
in
call
mov
out
test
lock
aaa
jp
mov
push
or
movsb
add
subl
add
int3
cmp
add
bound
pushf
pop
cmp
dec
ret
mov
lret
ret
mov
pushf
js
sti
push
inc
test
add
ja
icebp
stos
pop
test
cmpb
add
gs
jl
mov
rorb
adc
int3
adc
sub
mov
push
imul
dec
add
andb
lret
gs
adc
sub
sar
pop
mov
jo
inc
inc
push
mov
cmpsl
loopne
and
mov
data16
shll
and
push
fidivrl
ds
and
mov
sub
aad
xor
jb
mov
dec
ret
adc
xchg
rcrl
mov
jp
test
push
popa
mov
ret
xchg
cmpsb
fdivrs
add
push
xchg
ret
mov
ret
sbb
loop
cld
mov
nop
movb
add
adc
dec
subl
jbe
mov
cmc
shll
add
pop
fs
out
ret
imul
mov
cmpb
xchg
sub
inc
ret
sbb
mov
lods
jl
jge
mov
adc
xchg
ficomps
push
xchg
imul
pop
fstpl
test
sbb
adc
pop
sbb
in
stos
cmp
jecxz
in
cmc
inc
ret
movsl
mov
add
mov
add
mov
lret
iret
push
loope
sbb
xor
aam
xchg
int3
xchg
push
add
jl
mov
jmp
jle
movsb
xlat
or
mov
pop
lea
mov
mov
sbb
lods
sub
lcall
aam
xor
mov
add
in
addl
inc
xor
sbb
pop
jle
in
out
jl
mov
mov
sti
mov
mov
mov
pop
xchg
cmp
mov
xor
int3
out
lret
add
add
lea
add
xchg
ret
push
pop
test
jp
mov
icebp
jge
ret
lods
xchg
stos
insl
std
negl
mov
push
fcmovbe
xchg
cwtl
inc
fimull
mov
dec
movsb
mov
mov
repz
mov
sbb
scas
sbb
mov
testl
movsb
sbb
inc
add
adc
cmp
sbb
pop
sbb
mov
inc
ljmp
int3
sbb
xor
push
rolb
test
add
dec
mul
add
mov
xchg
rorb
int
fsubl
test
pop
fistl
in
mov
or
add
popf
andb
mov
sbb
fnstenv
dec
ret
mov
mov
sbb
push
sub
mov
mov
cmc
inc
ret
mov
fcoms
push
mov
cwtl
movsb
push
loopne
outsb
fwait
test
push
jg
je
adc
and
mov
jge
andb
shll
xchg
sahf
adc
ret
mov
aas
vcomisd
inc
jecxz
dec
push
stos
xchg
push
mov
imul
mov
cmp
js
push
test
lahf
mov
movsl
push
pop
cmp
stos
dec
ret
pop
sub
lds
dec
rol
sub
mov
pop
outsb
stc
sbb
jp
movb
leave
sbb
pop
int3
ds
mov
ret
mov
sub
loop
idivl
repnz
cld
test
ret
jp
aaa
fldl
rorl
aad
hlt
xor
mov
jnp
stc
jb
ret
test
fdivl
lea
ss
leave
subb
lds
add
mov
subl
loopne
popf
insl
xchg
ss
loop
lods
mov
subb
jp
sub
push
jge
sbb
add
xorl
ret
subl
loope,pt
arpl
xchg
in
jo
push
leave
mov
mov
pop
test
mov
fiaddl
jno
mov
cmp
lock
ret
mov
dec
mov
mov
test
ret
mov
mov
lods
xor
jbe
in
stc
insl
bound
fmull
mov
outsb
jno
fimuls
inc
ret
aas
loope
lods
es
lock
icebp
lret
mov
sbb
pop
pop
jb
jae
mov
xlat
cmp
data16
fwait
mov
fbld
inc
mulb
repnz
cmp
loopne
movsb
add
dec
jg
inc
and
mov
int3
repnz
lahf
loopne
jecxz
outsl
rolb
mov
test
cli
add
cmpsb
jl
fldt
jne
loop
js
neg
mov
inc
cmc
je
xor
repz
mov
daa
lcall
xchg
mov
leave
jge
pop
cmc
mov
jmp
add
mov
stos
pop
loop
push
push
sti
inc
cs
and
loop
dec
pop
push
lcall
enter
outsl
loopne
repnz
lods
push
and
mov
and
loop
out
stos
in
insl
addr16
ret
mov
cmc
jle
jno
jne
adc
adc
sub
mov
repz
pop
push
xor
in
inc
repnz
fstps
dec
cltd
push
xor
xor
lret
std
xor
in
pop
loope
mov
cmp
xor
ret
mov
ljmp
subl
mov
mov
jns
in
fstpt
call
mov
and
hlt
repnz
push
adc
ret
mov
or
mov
inc
inc
adc
icebp
in
out
stos
and
negb
ret
cs
cmpsl
popf
insb
ret
push
pop
ss
jbe
mov
add
adc
xor
int
pusha
ret
mov
add
ds
lahf
popf
pop
jp
push
lods
push
inc
or
mov
pop
dec
ret
or
mov
fwait
sub
imul
jge
dec
ret
dec
ret
mov
int3
fs
mov
xadd
pusha
ret
mov
insl
bnd
mov
sub
ret
or
dec
ret
out
sub
inc
fsts
add
mov
jle
insb
ret
or
sub
les
sti
imull
pop
pop
inc
je
insl
sub
add
arpl
cmpsl
clc
in
xchg
aam
es
sub
out
movsl
inc
pop
fs
adc
ret
mov
dec
pop
jo
fldl
add
cmpsl
push
lds
ret
mov
ret
mov
mov
sub
mov
pop
sub
lea
ret
mov
addr16
test
jmp
popa
inc
jle
imul
xchg
xchg
lock
rcll
aaa
out
orl
inc
lahf
arpl
add
mov
inc
add
add
out
jecxz
ret
xlat
xor
subb
jae
fsubs
mov
dec
ret
repz
sub
fisubrs
mov
mov
inc
ret
mov
or
clc
jbe
fiadds
jge
xchg
leave
andl
lret
out
cmc
cmp
push
scas
cmp
cli
xor
int3
into
ljmp
add
ljmp
mov
mov
ret
sahf
dec
or
mov
cs
push
lods
inc
pop
xor
test
mov
mov
cmp
jl
lret
je
fldt
iret
repnz
leave
mov
add
add
ret
mov
mov
movsl
or
mov
fsubrp
inc
cwtl
hlt
add
sarb
and
mov
mov
add
push
test
pop
pop
sti
fisubrs
and
fists
ret
mov
mov
ret
mov
mov
sti
push
shlb
ret
mov
fwait
test
call
int3
push
cltd
in
loope
dec
loop
ret
mov
push
xchg
dec
xor
je
cmc
push
ret
mov
or
mov
mov
xor
fs
mov
mov
testl
icebp
je
inc
ret
sbb
pop
lds
cli
test
mov
cwtl
mov
or
xor
or
mov
pop
and
and
xor
leave
mov
insl
sbb
jns
cmp
rolb
cld
dec
out
cli
xchg
push
call
add
mov
ret
inc
ret
mov
rcrl
daa
ja
adc
add
mov
push
push
ds
jg
xchg
mov
ror
out
dec
mov
call
or
mov
xchg
mov
loop
xchg
sub
rorl
repz
inc
aaa
mov
mov
mov
mov
aas
imul
fs
mov
add
decb
popf
insl
sub
mov
add
inc
fcmovnbe
or
ret
mov
ret
mov
sbb
sbb
cmp
mov
fidivs
push
xchg
xchg
inc
cltd
inc
jae
in
cwtl
ss
adc
mov
pushf
pop
mov
xchg
mov
dec
enter
xor
push
stc
outsb
bound
push
test
xor
xchg
gs
lods
cli
adc
push
dec
mov
roll
aas
adcb
or
xchg
pop
imul
fiadds
cmpsl
dec
shrb
adc
leave
mov
adc
mov
movsl
or
mov
lock
mov
dec
or
ret
xchg
mov
xchg
imul
les
lods
xor
fsubrl
dec
dec
outsl
test
push
test
add
xchg
push
add
mov
push
or
jb
pushl
fwait
rcll
sub
andb
push
jae
push
inc
push
jne
mov
add
ret
outsb
inc
add
mov
push
aad
sub
sahf
fidivs
call
mov
pop
mov
jmp
fidivl
fs
mov
xor
add
add
pop
mov
ret
into
pop
jo
pop
or
adc
fs
mov
add
pop
push
sbb
sub
mov
rolb
mov
xchg
jge
jmp
push
mov
or
int
insl
sbb
dec
cmp
dec
ret
mov
sbb
mov
sahf
adc
je
aad
mov
loop
mov
add
mov
ret
mov
cvtdq2ps
xor
test
and
jle
mov
xchg
ds
inc
ret
mov
mov
js
jecxz
decb
mov
add
mov
scas
mov
mov
popf
stc
or
mov
gs
adc
inc
ret
push
stos
repz
mov
call
pushf
aas
mov
pop
rcll
test
adc
es
mov
pop
int
mov
rcll
xor
push
sbb
in
fnstsw
fs
xchg
add
push
movsb
mov
cmpsl
sahf
sub
mov
pushf
testb
ljmp
ret
mov
outsb
fs
mov
icebp
sahf
movsb
sarb
aam
mov
jns
jb
jp
mov
lods
cmp
adc
mov
ret
mov
mov
ret
mov
ret
mov
dec
jmp
add
aas
stc
xor
push
push
aam
cs
shr
push
in
lds
stc
pop
aas
rcrl
push
inc
or
mov
add
and
mov
push
ja
mov
push
push
and
mov
pop
mov
jne
dec
ret
mov
add
rolb
push
mov
cmp
mov
cmp
xor
es
mov
mov
push
out
lds
mov
jl
push
pop
out
lea
add
mov
popa
enter
add
test
sub
rcrb
idivb
mov
sahf
ret
inc
ret
shrl
xlat
fdivs
sub
add
dec
and
dec
ret
pop
push
push
movsl
fxam
mov
mov
mov
add
mov
gs
negl
mov
int3
and
add
mov
ret
dec
movsb
test
cwtl
sarl
fstl
cmpsb
push
lret
mov
add
jg
imul
sahf
xor
insl
repnz
jg
add
add
mov
jnp
xor
lret
cmpsl
fisttpl
cld
ret
mov
sbb
stc
cmp
mov
out
cmp
ret
mov
int3
pop
dec
push
ret
xchg
je
add
mov
push
dec
mov
push
xchg
sbb
sbb
add
mov
mov
sub
mov
mov
addb
js
adc
hlt
int3
mov
loope
dec
call
adc
insl
enter
mov
push
out
sub
add
popa
fsubs
mov
sub
xchg
push
pop
bound
out
push
lcall
jge
lret
dec
call
mov
jp
movsl
mov
push
jo
add
ret
mov
add
add
in
adc
test
outsl
add
les
jo
in
dec
add
mov
ret
mov
add
mov
ljmp
popf
adc
scas
jnp
sbb
jns
lret
shlb
mov
out
fmul
mov
add
mov
mov
inc
testl
ret
lcall
mov
dec
add
test
pop
pusha
ret
mov
add
std
mov
mov
inc
inc
insl
push
popa
mov
sbb
adc
sub
mov
mov
cmc
outsb
scas
add
jb
dec
movsl
cwtl
movsb
sub
mov
test
aaa
js
cmc
inc
cwtl
test
push
ret
xor
ror
out
adc
lret
or
mov
push
mov
fwait
xchg
lds
sub
push
or
nop
xor
in
ret
mov
and
mov
cmpsl
les
loope
pusha
ret
sub
sbbl
or
mov
outsb
mov
clc
rclb
dec
iret
mov
cltd
sahf
outsl
scas
mov
inc
ret
insl
das
in
cmp
out
inc
adc
nop
enter
aaa
sbb
popa
inc
ret
mov
sub
pop
movsl
jecxz
es
inc
pop
xor
into
shrl
ret
push
into
mov
in
add
pop
mov
int
ret
nop
mov
push
mov
xor
fstps
shrb
add
inc
ret
mov
push
cmp
add
add
mov
loop
int3
js
outsl
jl
shrb
das
outsl
add
ret
mov
push
xor
push
xor
call
mov
bound
pop
mov
cmpsb
xchg
push
ret
adc
aaa
dec
ret
mov
lea
ret
gs
push
pop
pop
xchg
lcall
orl
ret
mov
cs
cmp
adc
mov
mov
ds
pop
inc
sbbb
cmc
loope
push
and
dec
ret
mov
add
shll
ret
mov
push
js
rcl
dec
mov
scas
jl
xchg
shll
pushf
out
subb
test
add
cmpsl
pop
xor
out
and
movsl
ret
sub
mov
bswap
xchg
lods
pop
es
xor
adc
or
mov
pushf
push
dec
aam
cs
inc
popa
pop
das
sbb
adc
mov
fwait
mov
lahf
shl
jmp
cli
mov
loope
inc
adc
imul
iret
loopne
test
ret
insb
ret
mov
dec
std
inc
ret
idiv
es
arpl
pop
cld
sub
jnp
mov
arpl
mov
sub
ret
push
mov
cmp
iret
fwait
mov
fs
mov
addr16
dec
push
out
dec
jl
sbb
subl
add
lahf
mov
ret
or
mov
insl
stos
pop
mov
add
repz
jmp
sbb
daa
sub
jae
mov
inc
ret
mov
mov
xor
mov
leave
ja
cmp
int3
mov
or
mov
cmc
in
stc
sbbl
xchg
and
mov
scas
mov
xchg
cmc
inc
xchg
lds
push
insb
ret
push
out
dec
dec
or
mov
xchg
lock
adc
fcoms
insl
iret
xchg
filds
pop
leave
test
dec
mov
add
inc
divl
out
sub
mov
add
shrb
jp
and
or
mov
add
mov
cld
push
and
fs
mov
stos
pcmpgtb
mov
mov
add
xchg
int
call
lret
imul
cmp
es
movsb
cmp
jo
xor
lods
sub
mov
aas
mov
and
test
add
loop
ret
mov
pop
or
rclb
bound
mov
pop
push
movsl
idivb
jmp
dec
jb
sbb
aad
cmp
lahf
push
outsl
cmp
lods
xchg
lods
cmpsl
test
mov
sub
mov
xchg
sub
mov
das
mov
adc
rolb
jne
sub
mov
sub
push
imul
int3
scas
xchg
push
jae
cmp
repnz
shlb
xlat
shll
mov
xchg
rcll
or
inc
jns
add
mov
mov
std
sbb
xor
aad
inc
lret
push
test
js
nop
js
test
mov
mov
repz
popa
cmp
pop
adc
sub
jns
ret
popf
and
lahf
jecxz
xor
or
mov
js
scas
push
sarb
jle
lret
mov
sub
cltd
mov
fisubl
rol
lds
xchg
push
mov
jp
adc
xchg
fldenv
and
mov
ret
mov
sti
add
mov
pop
mov
mov
ljmp
pop
adc
mov
xchg
or
popf
pop
and
sbb
mov
sub
adc
push
xchg
sub
cli
pop
je
mov
inc
ret
mov
dec
push
and
mov
adc
fcmovne
movsb
adc
ret
mov
movsb
int3
push
pop
or
mov
jecxz
xor
fs
xchg
stos
mov
je
mov
mov
lret
dec
ret
xlat
adc
shl
enter
arpl
jne
fcmovnu
sub
mov
ret
lret
ss
sahf
mov
dec
pop
add
mov
loopne
push
ja
cmp
test
or
add
cmp
testl
in
lea
cmpsb
subl
inc
and
add
mov
mov
pushf
leave
cmp
sbb
fwait
dec
ret
xchg
std
or
mov
push
punpckhbw
mov
xor
fstpl
cwtl
lods
call
sti
pop
stc
cmpsb
or
rcrl
sub
icebp
shlb
lcall
dec
and
mov
ret
mov
or
mov
or
pop
xchg
mov
dec
sub
push
test
arpl
xchg
push
js
or
mov
pop
stos
mov
add
daa
adc
mov
dec
mov
ljmp
bound
dec
fstpt
sahf
pop
sbb
nop
cmp
nop
dec
inc
ret
lods
jae
sub
mov
ret
mov
sub
mov
data16
loop
jge
hlt
icebp
lahf
out
jg
cmpsb
in
sahf
xor
adc
sub
in
jo
lds
mov
cmp
mov
mov
mov
sbb
jle
sbb
xchg
jecxz
mov
or
pusha
ret
push
jno
loopne
arpl
push
in
lea
ret
icebp
add
ret
or
mov
ret
mov
ret
mov
lock
mov
popa
sub
add
repnz
mov
mov
dec
ret
push
rcrl
cwtl
dec
ret
lret
int3
adcl
or
mov
mov
daa
aaa
pop
lcall
or
dec
ds
cltd
push
adc
adc
mov
sbb
call
add
cmp
ret
sbb
and
dec
or
mov
imul
clc
xor
or
mov
add
ds
fld
xor
call
mov
ret
outsb
xor
repnz
das
movsl
or
mov
add
ret
inc
repz
ret
and
mov
mov
sbb
inc
je
int3
pop
sub
pop
jbe
jecxz
jmp
out
data16
leave
movsl
pop
sub
add
mov
shlb
pop
out
push
je
lods
cmp
ret
nop
xchg
mov
or
ret
mov
ret
mov
add
pop
in
mov
mov
lcall
sbb
sub
sbb
in
jmp
cmp
add
xchg
mov
ret
clc
sarb
imul
cmp
les
je
mov
jne
jp
dec
sub
sub
add
cmp
mov
hlt
mov
repnz
aam
loop
mov
sub
mov
ret
mov
mov
ret
sahf
dec
ret
mov
mov
pop
mov
clc
ss
scas
push
jmp
iret
cwtl
cmc
push
sub
mov
and
mov
fistpll
push
rol
push
push
pop
jg
testb
ret
lea
outsb
inc
mov
mov
popa
loope
ret
andb
ret
int
jl
add
mov
mov
xchg
ret
mov
mov
dec
ret
mov
and
aad
mov
add
mov
inc
pop
test
ret
mov
adc
aas
jo
pop
dec
xchg
xor
rclb
test
lods
pusha
ret
jb
test
cmc
repnz
dec
movsl
ret
ret
mov
pusha
ret
fs
adc
ret
in
lock
call
rcrl
orb
mov
push
xlat
sbb
sbb
out
rcl
cbtw
fcmovnb
out
aas
mov
xchg
aaa
jge
dec
and
mov
lcall
add
orl
add
in
cmpsl
jb
test
mov
mov
inc
or
mov
or
scas
or
shll
test
addr16
loop
and
stos
je
test
xor
add
add
mov
pushf
mov
mov
add
ljmp
lret
jle
xchg
and
mov
cmpsb
shll
addl
shrb
arpl
div
je
out
movsl
jno
insl
sbb
jl
jb
jg
gs
js
mov
sub
nop
dec
jmp
xor
dec
scas
mov
jp
lds
inc
add
ljmp
aam
inc
ret
mov
test
mov
shr
mov
ret
mov
loope
mov
and
mov
lods
pop
xor
or
imul
add
sbb
dec
mov
test
in
movsl
js
cli
or
mov
push
mov
jne
sub
dec
ret
lds
dec
sub
into
dec
lds
mov
xor
loope
xor
test
xchg
jl
inc
lds
je
mov
pop
cli
repz
pop
rcrl
lret
mov
or
and
mov
mov
pop
sahf
lcall
adcb
add
cld
pop
iret
mov
add
mov
or
lahf
xchg
mov
inc
clc
mov
inc
jno
cmp
mov
adc
dec
pushf
xchg
jnp
mov
cltd
fcompl
push
test
sub
xchg
movsl
shll
sub
push
or
mov
das
popf
in
xor
push
cld
je
push
dec
leave
in
and
jge
sub
in
mov
lds
rcl
out
pop
inc
xchg
dec
ret
negb
pop
jmp
pop
bound
es
push
test
xor
test
lock
or
mov
push
dec
xchg
bound
add
adc
and
mov
mov
movsb
xchg
addb
push
icebp
add
mov
jne
ret
cld
in
ds
mov
iret
out
pop
add
mov
mov
call
mov
add
popf
add
mov
lret
mov
test
or
add
lahf
xor
mov
mov
cmp
xor
adc
inc
mov
ret
lret
mov
ror
cmpsb
jmp
lret
stos
mull
aas
xor
es
mov
xlat
mov
fisubrs
xchg
call
add
push
in
jmp
jae
sub
mov
pop
pusha
ret
fwait
daa
cld
cmp
arpl
and
in
icebp
pop
mov
mov
mov
ret
push
or
incl
mov
fwait
inc
sub
sti
sbb
sarl
add
or
mov
int
ret
fidivrs
mov
pop
in
jno
xor
imul
mov
mov
fsubp
je
xorl
fyl2xp1
push
mov
inc
ret
mov
pop
shrl
mov
aaa
popa
mov
pop
mov
ds
cmpsl
xor
add
mov
pop
es
ret
mov
ret
mov
mov
xchg
sbb
clc
ret
inc
mov
mov
sarl
xor
imul
mov
add
mov
mov
pop
adc
dec
jns
fdivrs
jae
ret
mov
out
dec
xor
test
add
push
lahf
push
fiadds
ret
mov
xchg
sbb
pop
xor
gs
incl
in
repnz
in
mov
adc
push
or
rclb
jge
out
lods
aam
jmp
push
sbb
mov
stos
mov
ret
mov
add
mov
lahf
adc
shll
ret
mov
aam
clc
test
repz
daa
xor
add
pop
xor
sti
ret
jg
jbe
arpl
lods
or
lock
or
dec
imul
cmpsb
xor
in
xchg
xor
jle
sub
push
std
fidivrl
lock
clc
insb
ret
pop
or
scas
inc
sbbb
mov
repnz
pop
daa
dec
leave
mov
sti
mov
lret
xor
imul
mov
ret
les
mov
loop
test
add
inc
popa
lock
stos
sar
mov
ret
out
imul
pop
cmpsb
mov
xchg
fdivrl
jb
push
test
and
mov
sub
pop
sub
lock
ds
inc
inc
ret
mov
add
or
cs
fdivrp
mov
cmpsl
xchg
push
iret
cltd
ficomps
mov
sarl
cwtl
mov
xchg
daa
andb
mov
ret
mov
cltd
mov
xchg
mov
add
mov
fsubr
fs
mov
loope
data16
fnstcw
mov
adc
push
mov
adc
push
into
repnz
xor
jecxz
inc
or
pop
popa
stc
mov
adc
loopne
push
add
add
cmp
sbb
and
sub
jmp
enter
in
pop
pop
inc
add
ret
mov
inc
ret
mov
pop
mov
xchg
mov
inc
loope
adc
adc
xchg
jae
cmp
and
iret
push
push
out
mov
repz
ret
scas
jo
cmp
inc
popf
mov
ret
inc
ret
mov
fnstenv
xchg
dec
jmp
scas
jle
ss
lods
test
out
dec
ret
mov
inc
or
inc
ret
mov
mov
push
dec
ret
mov
mov
lret
imul
mov
stos
add
mov
ret
mov
mov
mov
sub
jno
adc
xor
xchg
call
fists
mov
lcall
mov
jbe
ret
add
pop
ret
cltd
mov
push
js
shll
cmp
jg
das
jmp
ficomps
jns
mov
fstps
and
mov
cmp
aaa
sbb
fnsave
push
call
cli
shrd
addr16
sbb
push
lods
jmp
mov
mov
adcl
mov
pop
jmp
aad
dec
mov
add
jle
rorb
push
ja
ret
movsb
push
retw
jecxz
jmp
xor
cmpb
enter
jo
daa
loop
ret
mov
scas
xchg
push
out
int
ret
xchg
sub
cli
adc
gs
ret
mov
add
ret
mov
js
lea
cmc
push
mov
lods
mov
dec
inc
sahf
leave
mov
push
xchg
jo
mov
jno
mov
dec
ret
mov
jecxz
stos
cmp
add
mov
ret
clc
je
jns
and
inc
cmpb
adc
and
or
mov
xor
sub
mov
out
dec
mov
pop
rorl
inc
cmp
lods
pop
pop
jecxz
xchg
xor
add
dec
daa
leave
push
punpckhbw
mov
mov
test
je
sbb
mov
ret
mov
or
mov
mov
inc
shrl
push
push
fidivrl
ret
mov
fmul
sub
iret
xor
mov
dec
pop
jbe
enter
jne
cld
mov
jb
ljmp
add
xchg
jne
out
rcll
les
mov
lods
cli
jp
add
mov
call
adc
out
jns
outsl
pop
adcb
jno
out
ds
mov
xchg
pusha
ret
xchg
dec
call
sbb
ret
mov
out
cmp
les
add
mov
mov
jecxz
adc
cmpsb
sarb
rol
insb
ret
mov
or
mov
adc
add
aad
and
mov
ret
mov
and
push
ret
mov
fsubl
push
cmp
ret
insl
incl
sbbb
ret
mov
cmc
pop
cmp
fscale
dec
ret
in
out
in
xchg
xor
ret
mov
pop
clc
test
insl
fldl
add
mov
loop
inc
add
mov
xchg
insl
addb
arpl
mov
cli
dec
imulb
out
shll
mov
nop
mov
movsb
pusha
ret
mov
add
repnz
add
ret
mov
sub
mov
add
add
mov
cld
pushf
mov
sub
gs
push
mov
jge
ret
sbb
adc
lret
and
pop
imul
push
repnz
ss
cmp
add
mov
ret
mov
lock
orb
jl
imull
cld
loope
pop
iret
outsb
cmp
lcall
stos
in
andb
mov
and
mov
inc
cmp
mov
adc
add
ret
mov
xchg
leave
add
inc
xchg
dec
iret
loopne
push
lret
mov
and
mov
inc
ret
mov
inc
mov
test
outsl
xor
lret
test
out
or
mov
and
mov
cltd
inc
cmp
pusha
ret
mov
clc
inc
pop
or
icebp
insb
ret
mov
jo
dec
mov
pop
xor
sbb
mov
sahf
leave
jg
fsub
movsl
iret
dec
jae
ret
mov
lcall
xor
push
and
mov
dec
ret
xchg
stos
in
sbb
xlat
sub
adc
sub
loop
jmp
mov
cmp
pop
fistps
mov
stos
lds
out
push
cltd
xor
cs
ret
mov
sub
mov
iret
rclb
loop
jg
add
mov
popa
pop
mov
xchg
or
mov
jbe
dec
stos
mov
out
xchg
xchg
pop
test
ret
mov
orl
jne
ss
ret
mov
add
into
into
lods
loope
bound
cmp
mov
adc
adc
je
rcrl
add
mov
aaa
mov
jmp
pop
cltd
int
lea
or
mov
insb
ret
mov
sbb
sub
ret
cmp
pop
adc
pop
sti
jo
mov
lret
adc
push
adc
imul
push
sub
jg
shufps
loop
cmp
movsl
add
adc
jno
ljmp
lods
shrl
testl
cmp
ds
ja
imul
stos
jg
ret
mov
ret
mov
and
mov
xchg
lcall
iret
movsb
jbe
ret
int3
push
push
adc
ss
movsl
jb
pop
sar
and
mov
loopne
mov
cmpsb
add
pusha
ret
mov
fs
mov
popa
push
cmp
adc
or
mov
sbb
test
ss
pop
pop
jbe
std
jle
mov
mov
mov
push
stc
mov
add
mov
arpl
lods
cltd
and
clc
jno
out
mov
pop
cmp
cmp
jae
ret
or
mov
dec
out
pop
and
mov
add
js
lds
mov
and
mov
sub
mov
fst
lods
adc
outsl
push
dec
add
loopne
adc
inc
ret
sarl
cmp
adc
sbb
mov
pop
xor
aam
push
and
sbb
out
xchg
aas
mov
mov
jecxz
inc
jbe
fistps
adc
xor
add
mov
adc
xchg
xor
mov
mov
paddusw
jno
xchg
nop
push
test
imulb
add
inc
xor
ss
push
xchg
or
add
mov
loop
cmp
fwait
shrb
pusha
ret
pop
adc
iret
test
adc
shlb
add
or
mov
in
and
std
mov
in
add
in
jp
inc
shlb
cwtl
sti
push
loope
and
inc
xor
jno
jp
push
divb
inc
ret
jg
repnz
mov
sub
mov
ret
sub
mov
std
adc
addr16
fs
arpl
add
mov
ret
mov
and
dec
mov
mov
dec
andb
enter
mov
data16
mov
fs
sbb
scas
mov
push
scas
test
dec
and
add
mov
scas
stc
inc
add
mov
jge
inc
insb
ret
push
sbb
mov
aas
jne,pt
fidivs
ret
mov
cmc
cmp
xchg
cs
das
xor
adcb
add
movsl
or
adc
cmpxchg
xor
xchg
xchg
dec
sub
mov
add
movsl
lock
mov
loopne
ret
enter
sub
dec
ret
mov
mov
mov
cmp
sub
out
in
cmp
push
push
stc
cmp
xor
add
xchg
push
popa
aam
or
out
out
cmp
sbb
pop
jns
pop
push
xchg
dec
ret
jno
or
mov
sahf
jns
fsubs
or
lock
push
or
loop
das
add
loope
hlt
sub
push
cmpsl
push
pslld
mov
and
mov
pop
stos
gs
jnp
mov
mov
ret
mov
mov
mov
sub
mov
mov
add
push
in
fdivl
push
out
adc
scas
std
mov
jge
les
jmp
rcrb
mov
mov
ja
ret
sub
xor
test
ret
rcrb
in
and
mov
sbb
ljmp
add
ret
xchg
lcall
and
add
daa
outsl
pop
insb
ret
stos
ret
dec
into
and
mov
push
inc
ret
mov
jmp
add
mov
arpl
nop
xor
or
das
dec
ret
loop
mov
pop
push
mov
and
loope
cmpsl
popf
je
int3
mov
ss
mov
or
aas
inc
test
push
and
mov
mov
stos
out
mov
daa
inc
fldenv
mov
lods
dec
mov
cmp
sub
inc
rclb
not
test
mov
mov
pop
sub
mov
lret
jb
or
mov
into
pushf
cs
cmpsb
ja
ret
std
xchg
inc
mov
mov
ret
lds
lods
cli
std
mov
js
cltd
adc
jb
test
rcrl
fnstcw
stos
jbe
or
std
roll
mov
and
ret
mov
and
out
fmul
leave
stos
ss
push
inc
add
mov
out
lahf
mov
repz
stos
cmc
nop
scas
sub
neg
cmp
push
and
pop
sbbl
push
and
push
movsl
add
mov
push
rorb
mov
xchg
gs
ret
mov
ret
mov
mov
xor
inc
ret
mov
pop
imul
mov
dec
fwait
es
data16
sbb
xor
in
and
mov
add
mov
mov
movq
inc
jns
or
mov
mov
xchg
sbb
or
mov
add
mov
sub
mov
jecxz
nop
pop
inc
mov
sub
lods
sub
mov
es
int3
push
int3
aam
icebp
jl
popa
imulb
ret
xor
and
gs
ret
mov
mov
sbb
call
stos
mov
sahf
cltd
les
addr16
mov
call
loope
cmp
jecxz
fsubrl
adc
filds
popf
and
ss
incl
pop
mov
xchg
adc
xor
dec
ret
mov
sub
ret
jae
sub
test
dec
lods
cs
ret
ror
push
pop
and
cmp
xor
dec
das
dec
notb
sub
mov
adc
mov
imul
les
push
cmpsl
inc
fstpt
jo
push
mov
sub
mov
add
jne
push
and
push
push
popa
repz
mov
enter
sbb
addb
add
mov
push
jno
hlt
ljmp
jae
iret
xor
test
or
mov
xchg
into
aas
pop
pop
adc
repnz
loop
ret
pop
lea
inc
xchg
shll
mov
rolb
imul
ret
mov
jb
xchg
mov
shrb
sub
test
jns
xor
adc
pop
sub
cmp
daa
cmp
cmp
adc
ret
mov
imulb
mov
add
cmp
jecxz
lds
push
dec
ss
sahf
imul
sub
mov
adc
ret
outsb
scas
sbb
add
fdivrl
popa
test
jmp
subl
push
in
cmp
sbb
mov
xorb
xor
aas
std
dec
ret
mov
or
mov
jb
out
dec
insb
ret
inc
pop
mov
ret
mov
push
jp
push
push
sbb
pop
notl
pop
fcomps
out
aad
stos
cmpb
shrb
adc
inc
adc
enter
ret
xchg
xor
inc
adc
push
test
adc
ret
enter
aas
sbb
gs
jae
mov
fwait
inc
ret
mov
gs
mov
mov
mov
dec
ret
mov
mov
mov
add
cmp
lcall
pmuludq
xor
sbb
mov
ret
mov
movsb
mov
jge
mov
mov
inc
add
clc
jl
dec
ret
in
ja
mov
cmc
lds
outsb
and
xchg
test
movsb
mov
imul
aaa
in
and
addr16
mov
sub
mov
outsb
scas
jno
inc
ret
mov
mov
loopne
bound
jbe
jno
repz
push
popf
shl
inc
mov
push
jae
mov
cmp
add
add
xor
xchg
and
mov
imul
int3
imul
jle
ret
mov
push
lods
push
push
stos
xor
add
fnsave
xchg
iret
stos
popa
insl
daa
lods
mov
mov
xor
in
xlat
mov
add
cltd
cmp
ret
arpl
in
ret
rcrl
and
mov
les
iret
push
pop
xchg
repz
ret
popl
mov
pop
mov
test
and
out
aam
cmp
mov
and
lahf
icebp
syscall
pop
sbb
sbb
into
sbbl
gs
pop
mov
push
dec
ret
mov
sub
ja
sub
pop
push
mov
jns
push
add
jo
or
mov
mov
mov
cmp
shll
mov
mov
add
jmp
in
jnp
insb
ret
push
jb
jo
mov
ret
ret
insb
ret
or
mov
pop
mov
jp
adcl
or
and
ret
mov
inc
ret
pop
mov
notl
fsubrl
mov
or
mov
dec
ret
cmpsl
mov
pop
fs
repnz
les
add
mov
pop
es
sub
adc
arpl
pop
jl
lcall
lds
ret
mov
ret
mov
add
out
sub
jbe
cltd
mov
or
iret
test
sbb
ret
ljmp
sbbb
sub
dec
xorb
jle
xchg
out
out
adc
lret
jae
and
mov
mov
loopne
leave
jns
cmp
mov
fsub
pop
outsl
or
lcall
add
add
sub
lods
lods
jge
inc
cltd
dec
mov
mov
mov
ret
int
add
and
or
outsl
mov
cs
sbb
lods
jb
ret
call
idivl
add
sub
mov
jge
aas
ljmp
jmp
ret
dec
ret
pusha
ret
push
mov
pop
and
add
fmuls
pop
jns
inc
ret
cmp
std
mov
add
mov
mov
jnp
pop
or
push
dec
movups
jecxz
int
outsb
and
jbe
add
or
xchg
push
mov
imul
pop
out
nop
fcmovnu
sahf
or
aaa
aaa
xchg
into
rcll
lret
mov
jcxz
sbb
ret
mov
fidivs
add
jae
rclb
mov
lock
jns
push
in
ret
mov
iret
pushf
xor
enter
mov
mov
call
inc
ret
mov
mov
aad
je
ret
mov
jge
iret
lahf
inc
xchg
xor
add
aad
cltd
pop
mov
outsb
push
dec
sbb
push
fs
rcl
repnz
mov
mov
jg
ja
inc
or
loopne
jge
insl
xchg
insb
ret
and
mov
sbbl
ret
mov
imul
jb
shll
fidivrl
cmp
test
ret
fidivrl
enter
add
stos
stos
jmp
popa
dec
test
test
pop
and
subl
out
jle
or
mov
cmp
iret
sar
mov
rcrl
adc
lret
fidivl
aas
jno
cmpsl
cltd
xchg
jae
or
scas
xchg
call
rcl
or
mov
push
mov
lods
test
in
sub
dec
cmpsb
clc
mov
out
mov
pop
xor
xor
mov
ret
xor
push
lea
push
jno
ja
sbb
jbe
add
sub
mov
mov
into
test
mov
lret
jl
lods
iret
pusha
ret
mov
push
cmc
inc
ret
mov
loopne
cmp
xlat
jecxz
imul
fxch
mov
arpl
ljmp
loop
imul
add
mov
add
sarl
in
xchg
daa
mov
push
pop
movsb
mov
jp
ret
mov
imull
ret
mov
mov
sbb
cmc
arpl
outsl
outsb
test
adc
jbe
lea
add
insb
ret
fstpl
cmp
jne
xchg
cmp
aam
scas
mov
jne
pop
mov
lret
inc
xchg
rcll
mov
jge
mull
test
cmpsb
push
dec
dec
jbe
dec
sbb
xor
sbb
je
mov
outsb
jb
ret
mov
or
mov
dec
ret
add
sahf
mov
stos
out
dec
xor
mov
fidivl
dec
xor
xchg
jne
ret
adcl
and
mov
xorl
pop
adc
or
mov
ret
push
in
gs
int3
xor
out
jno
jno
aas
aad
adc
loopne
mov
push
cmp
mov
mov
mov
sti
jg
inc
arpl
cld
lcall
inc
stos
out
mov
daa
iret
scas
mov
loope
ret
hlt
pop
les
in
outsb
movsb
cmp
sar
das
dec
jno
push
push
in
mov
test
mov
sub
xor
ret
mov
inc
ret
sub
mov
outsl
jns
divb
push
popa
xor
ret
xor
push
jbe
insl
call
movsb
xchg
roll
stos
iret
lds
add
test
and
xchg
shrl
insb
ret
mov
jge
ret
mov
push
pop
xor
inc
ret
mov
loop
test
fstl
xor
mov
ret
out
fs
hlt
cmp
sahf
mov
sbb
add
sbb
xchg
ret
mov
fs
notb
scas
lock
ljmp
and
lcall
ret
iret
push
mov
mov
and
mov
mov
int
ret
mov
add
cmc
sbb
and
mov
push
cltd
fisttps
stos
ljmp
xchg
xchg
xchg
stos
call
repnz
in
sbbl
mov
mov
les
jbe
add
or
leave
push
jno
adc
cmp
test
add
enter
cld
sbb
xchg
xchg
ret
enter
mov
sub
xchg
sub
and
mov
dec
ret
scas
jle
out
aas
into
mov
dec
cmpsl
shrb
xor
sub
push
pusha
ret
mov
pop
movsb
mov
scas
imul
addr16
in
mov
pop
or
xor
or
in
cmpsb
jge
ret
mov
sahf
jg
je
lahf
dec
cmp
ret
pop
insb
ret
or
ret
pop
aam
mov
dec
ret
stos
notl
add
mov
ljmp
lods
fxch
dec
out
loopne
movsb
and
mov
add
sbb
dec
xor
je
sti
pop
push
jnp
mov
popl
mov
dec
test
sarb
int3
bound
ret
mov
gs
cmp
push
in
push
addr16
mov
mov
push
cld
push
shll
lds
jmp
sub
dec
ret
mov
insl
jnp
cmc
bound
xchg
and
mov
sti
jl
orl
cwtl
sbb
int3
mov
dec
test
xor
ja
xchg
cmp
xchg
out
adc
clc
bound
orl
mov
leave
out
addb
jne
stos
inc
sbb
push
sar
ret
iret
mov
push
sub
mov
or
mov
mov
les
ficompl
push
lds
loop
xor
dec
ret
mov
push
iret
rorl
xor
in
lea
inc
ret
or
push
ret
mov
orb
xchg
add
loopne
adc
dec
ret
out
mov
mov
mov
aam
push
ljmp
insb
ret
adc
pop
mov
xchg
mov
xchg
clc
sub
mov
add
fwait
gs
dec
andl
add
ret
lret
mov
fdivl
mov
jge
iret
xchg
cmp
pop
shlb
sahf
push
jae
pushf
xor
clc
mov
out
aad
mov
dec
ret
lods
xor
mov
xor
mov
cmpsb
sbb
ret
ret
mov
add
inc
push
inc
ret
rcrl
jnp
movb
aad
insb
ret
mov
mov
and
ljmp
ret
mov
ret
mov
cwtl
aam
mov
fdivs
bound
and
in
sub
arpl
cmp
fwait
xchg
cwtl
repz
in
mov
ret
cmp
ret
mov
add
shll
jg
int3
add
pop
pop
stos
sub
mov
dec
test
mov
xor
nop
mov
test
mov
mov
or
inc
out
dec
mov
sub
mov
lahf
cmp
dec
pop
fistpl
js
mov
cmp
push
and
push
orb
jae
ret
mov
ret
mov
push
jge
icebp
dec
mov
cmc
shrl
add
cmp
popf
inc
xor
pusha
ret
mov
out
repz
push
rclb
lret
jge
jmp
pop
pop
jle
xor
or
mov
fxrstor
in
pushf
xchg
mov
out
inc
jbe
cmp
pop
rcrb
daa
mov
mov
ret
call
adc
add
mov
shrl
gs
das
test
cmp
dec
sarl
push
inc
ret
jle
cmp
dec
ret
mov
dec
mov
inc
pop
out
sub
stos
subb
add
mov
scas
xor
dec
int3
cmp
add
aad
sub
cmc
jne
mov
add
mov
mov
add
inc
dec
add
std
fistpl
sahf
test
add
ret
cs
outsl
cmp
cmpsl
int
ret
mov
xor
les
mov
pop
in
stos
inc
ret
mov
mov
lahf
add
inc
ret
lret
out
js
cmpsb
movsb
fs
daa
and
dec
leave
rcl
jae
sbb
cmp
dec
cmp
and
mov
out
push
ret
jp
incb
push
popa
outsb
mov
ret
mov
xor
imul
adc
sbb
movsb
aas
mov
add
add
mov
cmp
adc
and
mov
mov
xor
mov
sub
inc
jbe
sbb
lea
mov
jp
ret
mov
pop
popf
lret
pop
clc
mov
jmp
out
aad
or
xor
push
test
push
in
fiadds
dec
outsl
in
fwait
sub
data16
out
and
dec
ret
mov
sti
int3
jge
cmp
xchg
adc
pusha
ret
mov
add
inc
cltd
mov
fidivrl
stos
lret
and
fs
into
stc
popf
pushf
testb
out
movb
inc
and
add
mov
mov
add
in
mov
mov
cmp
sbb
jmp
push
aad
push
lret
es
outsl
sub
add
ret
mov
test
sbb
adc
nop
or
lcall
dec
dec
mov
ret
pushf
xchg
repz
fwait
pop
cmc
xchg
imul
test
ret
push
mov
out
xor
add
shr
add
mov
fadd
mov
and
mov
add
mov
loopne
mov
int3
add
jbe
xchg
inc
in
outsb
mov
ret
mov
mov
mov
ret
fistl
in
sarb
jmp
sahf
and
jb
das
cmp
test
outsl
subb
adc
xchg
adc
ret
sbb
ret
stc
fsubs
cmpsb
into
out
pusha
ret
mov
repnz
fldenv
sbb
mov
push
dec
mov
pop
int3
sub
outsl
xchg
lods
and
add
mov
jne
ss
loop
lods
push
loope
xchg
lret
add
sub
adc
mov
cwtl
gs
ljmp
loope
xchg
push
cmp
imul
mov
mov
mov
cmp
inc
ret
mov
testl
mov
aas
loope
mov
stos
popa
dec
ja
push
pushf
fsubrs
xchg
ret
ret
mov
cs
je
dec
inc
in
mov
jo
clc
fs
mov
add
lods
adc
sub
push
dec
insl
mov
rcr
pminsw
pop
dec
ret
scas
flds
mov
lahf
add
push
add
inc
sub
mov
jne
ret
into
pop
lea
loope
mov
dec
ret
mov
aad
dec
ret
push
push
pop
scas
iret
jmp
dec
ret
xchg
pop
ljmp
stc
cmp
scas
daa
das
inc
ret
mov
cmpsl
jo
jl
sarl
dec
ret
mov
ret
dec
ret
insb
ret
mov
fiaddl
pop
lock
mov
std
sbbb
xor
jbe
xor
xor
mov
dec
dec
ret
mov
adc
ret
mov
pop
mov
jge
imul
mov
ljmp
add
sub
call
sub
sbb
ret
mov
ret
xchg
push
out
sub
mov
push
add
mov
xchg
popa
gs
and
ret
mov
xor
mov
inc
mov
cmpsb
xchg
and
add
ret
in
shlb
ret
mov
ret
sub
out
jmp
cmpsl
lock
rcrb
mov
mov
ret
push
aaa
add
mov
xchg
scas
pop
pop
dec
aaa
jp
inc
ret
mov
push
pop
jo
aas
mov
ret
mov
cmp
lock
push
insb
ret
inc
cmp
inc
or
mov
add
mov
lret
mov
fs
mov
jbe
inc
es
xor
or
mov
push
xchg
popf
jno
in
inc
ret
sarb
es
ljmp
fs
sarb
mov
test
shrb
lods
add
mov
mov
inc
mov
ret
inc
xchg
leave
jge
dec
jmp
ret
stos
xor
pop
ds
add
mov
sbb
add
mov
xor
dec
xlat
sti
imulb
jmp
in
xchg
pop
push
andb
xbegin
sub
add
mov
mov
mov
std
mov
mov
ret
inc
stc
data16
mov
adc
shrl
or
ljmp
ret
cli
aaa
push
xor
leave
negb
nop
pop
push
sub
mov
jmp
imul
pop
mov
inc
jo
mov
add
outsl
add
jae
jne
cmp
mov
in
sub
mov
cmpsl
orl
lret
sub
mov
or
cmp
insb
ret
mov
cmp
add
mov
push
mov
and
pop
push
movsb
mov
cmpsb
out
jl
lods
iret
hlt
jb
and
insl
pop
cmp
sbbb
test
test
push
orb
in
jo
jmp
jno
flds
add
fiadds
mov
mov
fisttpl
faddl
mov
dec
leave
inc
ret
mov
cmp
mov
lock
in
jle
scas
repz
shll
or
ret
mov
dec
mov
loope
test
jmp
je
fistpl
jge
sarl
xor
loopne
in
adc
lcall
push
xchg
ljmp
sbb
jo
xlat
dec
incb
mov
mov
inc
outsl
xor
imul
bound
jmp
inc
ret
mov
ljmp
lret
mov
mov
in
push
enter
andb
ret
mov
mov
xchg
das
xchg
cmp
rorl
mov
stc
xor
popa
gs
add
mov
ret
adc
ret
jne
das
jp
rcrl
add
inc
ret
mov
insl
scas
jne
push
repnz
insl
js
ret
xchg
cmpsl
enter
and
mov
sbb
in
or
mov
pop
mov
or
insl
add
mov
cmpsl
sbb
popa
xchg
mov
andb
xor
jb
divb
dec
dec
insb
ret
mov
push
fildl
mov
pop
ficoml
or
pop
mov
stos
in
push
or
mov
xor
push
pop
or
mov
jno
xor
ljmp
das
cmp
rcr
shrb
cltd
lahf
jp
push
jno
sub
push
pop
popa
cmp
mov
lcall
mov
cmp
xchg
cmp
cltd
int
jo
push
xor
cltd
mov
ret
mov
cmp
fildll
leave
fs
mov
jno
xchg
push
arpl
int3
iret
jl,pt
addb
mov
jge
ljmp
pop
sbb
jbe
jmp
mov
dec
and
xchg
sub
mov
jno
test
pop
pop
into
iret
loopne
scas
adc
xchg
cwtl
jae
pop
es
in
xor
push
rol
inc
in
inc
jns
incl
push
jae
cmp
add
iret
jnp
and
hlt
mov
or
mov
xor
inc
ret
mov
jae
shl
mov
cmp
out
mov
or
mov
pop
add
mov
in
shrl
mov
test
ret
adc
jns
adc
aam
lods
dec
ret
mov
and
fcomp
xor
mov
add
out
repnz
in
sarb
jo
xor
stos
push
popf
cmp
jmp
rorb
imul
xchg
fbld
jp
jns
pop
out
push
mov
and
mov
mov
and
pop
pop
stc
cmp
xor
mov
pop
add
add
jne
sti
jo
sbb
nop
mov
jg
clc
mov
inc
dec
iret
mov
pop
ret
sets
mov
mov
mov
ja
pushf
cwtl
ja
lahf
arpl
adc
inc
push
mov
sldt
mov
cmp
mov
repz
das
xor
jge
in
or
outsb
jp
ret
in
cmp
mov
aad
mov
stc
data16
imul
fidivrs
pop
dec
ret
pop
jl
loop
out
inc
imull
call
mov
addr16
push
shll
add
rorl
test
push
adc
cmpl
add
sub
add
mov
sbb
fucom
lock
mov
dec
cmc
cli
pushf
and
jns
cwtl
icebp
stc
ret
sti
adc
cmp
inc
outsb
adc
insb
ret
sub
mov
mov
mov
mov
mov
mov
lret
mov
scas
scas
daa
adc
out
cs
and
xlat
fldl
andl
xor
cmpsl
push
cld
add
mov
lahf
pop
add
mov
mov
jmp
mov
ss
dec
in
mov
mov
sbb
jl
or
mov
add
push
jge
faddl
and
ret
mov
add
in
jo
xor
ret
mov
out
xorb
add
mov
mov
adc
movsl
lds
inc
sbb
add
ds
sbb
ret
mov
xor
cltd
outsb
jbe
jmp
out
fs
push
mov
pop
mov
xor
xchg
cmpsb
mov
dec
ret
mov
pop
push
dec
fsubs
gs
lret
arpl
mov
loop
pusha
ret
mov
jbe
ret
jne
cmp
add
sbbl
arpl
bound
ret
mov
ret
mov
scas
aam
enter
add
push
jg
pop
leave
outsl
sbb
ret
mov
loop
mov
pop
mov
pushf
and
add
mov
push
icebp
stc
sbb
or
mov
jno
mov
add
das
xlat
pop
add
mov
mov
cwtl
cmp
mov
std
push
notl
pop
in
xchg
or
mov
add
adcl
ret
ficomps
dec
ret
iret
inc
shrl
mov
cltd
int
call
add
cmp
or
and
out
ss
jno
cmp
lds
inc
sub
leave
sbb
xchg
or
mov
ret
mov
imul
dec
mov
mov
addr16
and
cmpsl
imul
jp
dec
outsb
nop
outsl
and
mov
out
cs
mov
dec
ret
cmp
add
xorb
scas
lods
mov
cmp
add
pop
cmp
cs
ret
cmp
mov
and
mov
ja
int
aad
pop
xor
mov
push
fwait
cmp
push
pop
cli
and
mov
fmull
cmp
popf
in
imulb
adc
aaa
push
int
cmc
mov
xor
sub
mov
test
pop
lret
nop
push
mov
push
mov
jno
lock
stos
pusha
ret
insl
or
mov
rcr
xchg
jmp
sub
arpl
mov
jno
and
int
repnz
lock
cmpsl
xor
cmpsb
dec
ret
mov
xchg
pop
fs
inc
hlt
nop
fidivl
inc
movsl
cmc
inc
ret
mov
mull
sbb
dec
in
adc
bound
jmp
test
shlb
ret
mov
jl
xchg
cmp
xor
lds
mov
mov
add
mov
stos
jle
cmp
cmp
pop
fisttpll
ret
mov
in
mov
inc
sub
jno
cmp
or
ret
loopne
xchg
xor
xor
or
mov
lret
sbb
inc
movsb
subl
add
mov
push
test
xor
mov
mov
cmp
daa
test
jne
fbstp
adc
cli
mov
imul
cmp
push
add
adc
pop
mov
les
pushf
addl
arpl
inc
cmp
outsl
lds
ret
mov
fcom
sub
stos
mov
add
paddusw
pop
aas
int3
xchg
ret
jg
iret
xchg
mov
pop
pushw
add
aaa
sub
cmp
and
adc
rcrb
stc
addr16
test
mov
mov
cmpl
ret
mov
adc
jl
and
add
mov
ret
clc
add
inc
jecxz
mov
mov
fisttpl
xchg
loop
es
ret
mov
aam
and
es
or
mov
ret
adcb
ret
jns
cmc
pop
pop
and
mov
mov
outsb
aam
cli
out
and
mov
jg
mov
mov
mov
add
std
xchg
adc
fwait
push
and
pop
cmp
mov
in
cmc
push
lods
add
mov
xchg
add
movb
rcrb
out
mov
push
rcl
jmp
add
xchg
xor
or
mov
ret
pop
and
jge
or
inc
or
cmpl
dec
lods
mov
aad
loope
outsl
xchg
test
dec
repz
ret
mov
mov
push
jae
adc
cli
ficoml
out
movsl
rcr
push
stc
iret
scas
add
mov
inc
ret
cmp
dec
ret
xor
adcb
add
ret
mov
xor
dec
ret
mov
imul
pop
mov
mov
enter
and
mov
arpl
mov
cld
icebp
movsl
adc
pushf
addr16
gs
mov
push
sub
inc
mov
push
pushl
shll
mov
adc
mov
add
inc
stos
mov
inc
ret
mov
xchg
mov
sarl
ret
fnstcw
dec
inc
ret
jg
push
xchg
mov
rcrb
clc
pop
mov
add
inc
mov
ret
mov
sub
mov
mov
inc
mov
cli
jo
cmp
lock
push
in
stos
jecxz
ret
sti
jp
es
mov
xchg
xor
mul
mov
cmc
int
fsubr
clc
mov
loop
fdivr
call
ret
mov
and
les
add
cs
movsb
jae
out
ret
mov
push
xchg
mov
add
pop
mov
lods
rolb
ret
es
mov
fldt
add
and
shlb
add
mov
or
push
in
rcrb
cwtl
stc
dec
ret
fildl
fcomps
jg
add
arpl
ret
mov
jg
jl
xchg
psubw
mov
sub
movsb
dec
addr16
mov
mov
xor
cli
imul
adc
inc
sti
add
adcb
enter
pop
pushf
xchg
add
icebp
jb
insb
ret
mov
ret
sbb
mov
out
xchg
ja
adc
xchg
out
mov
insb
ret
mov
mov
btc
push
das
gs
inc
ret
jae
sub
push
ja
pop
ret
ret
mov
aaa
pop
cwtl
sub
jle
movsl
sbb
and
dec
mov
fucomp
adc
fcmove
ljmp
cltd
push
fadds
inc
std
push
flds
icebp
and
dec
xor
jge
pushw
push
aad
inc
ret
mov
ret
push
or
mov
adc
pop
xlat
roll
lods
cmp
xchg
jp
xchg
pusha
ret
sub
mov
lahf
cs
mov
push
cltd
ret
ret
inc
nop
pop
xor
aaa
mov
and
mov
add
push
mov
ret
mov
fcomps
daa
fs
mov
xor
jnp
ja
rclb
push
divb
xor
mov
mov
scas
jbe
clc
cmp
cld
dec
mov
mov
cmp
add
mov
mov
cmp
cvtps2pd
jno
push
call
adc
add
std
dec
ret
mov
jecxz
aad
jg
jb
mov
dec
scas
scas
clc
cmc
cltd
aad
repz
push
lds
pop
xchg
aam
ret
mov
pushf
test
dec
adc
mov
push
cli
shlb
mov
aas
dec
js
adc
fwait
or
xor
movsb
es
int
ljmp
popa
addr16
cmpsl
sahf
xor
call
addr16
cmc
xor
and
xor
mov
cmp
xchg
mov
push
inc
cmpsl
lods
fcoms
mov
je
mov
adc
and
xchg
js
enter
fdivrl
jbe
ret
jbe
cmp
ret
mov
sub
mov
and
mov
xor
es
loop
push
mov
mov
lock
rep
arpl
sbb
fnstsw
gs
sub
in
cld
arpl
pop
sub
ja
ret
sti
loop
lea
lret
imul
mov
adc
shll
idivb
jns
ret
mov
out
adcb
mov
repz
in
inc
ret
jmp
inc
imul
and
mov
out
jne
addr16
int
cmpsl
pop
popf
xor
or
insl
mov
inc
cmpsb
ret
test
mov
ret
mov
mov
addr16
mov
sbb
dec
mov
aas
mov
fwait
cld
and
jle
pusha
ret
mov
push
test
add
add
arpl
outsl
lock
jae
mov
mov
nop
jmp
xchg
xor
mov
movsb
xchg
pop
out
cwtl
sub
or
mov
cmp
popa
xor
std
mov
pusha
ret
mov
add
push
imull
dec
pop
in
xchg
addl
sub
jbe
mov
inc
ret
js
push
hlt
rcrl
stc
mov
inc
mov
jg
sbb
cli
mov
dec
mov
add
out
cmp
or
mov
mov
in
sub
incl
sub
mov
rclb
movsl
jb
ret
and
ret
mov
jl
pop
add
mov
pop
shll
aas
add
fnstcw
std
push
push
sub
mov
jne
cmp
cltd
push
mov
out
jecxz
movsl
pop
movsb
rolb
mov
dec
or
mov
fldln2
sub
push
in
and
add
mov
mov
or
pop
add
mov
sub
mov
movsl
mov
xchg
jbe
sti
jb
xchg
hlt
sub
in
mov
cmp
mov
or
xchg
inc
inc
mov
sub
add
mov
jg
call
rorl
sbb
mov
ret
mov
push
mov
adc
outsb
xchg
pop
mov
lcall
push
in
imul
ret
pop
les
push
sbb
rol
cmp
xchg
push
add
es
ds
icebp
out
xor
cmp
imul
test
inc
scas
insl
sbb
cmp
add
mov
ret
mov
push
imul
out
repz
mov
cmp
add
pop
push
lcall
ret
mov
out
fcoml
fs
mov
rcl
es
add
push
add
das
xchg
jne
test
mov
ret
and
inc
inc
ret
mov
subb
mov
repz
mov
inc
ret
daa
pop
mov
pop
pop
xorl
out
push
cmpsl
imul
ljmp
xlat
cld
adc
aaa
popf
in
loopne
dec
scas
jp
xor
arpl
lock
sbb
dec
mov
daa
push
cwtl
scas
imul
clc
or
mov
sub
mov
lcall
ret
mov
push
out
jp
pop
mov
iret
xchg
mov
mov
jmp
imul
inc
dec
and
sbb
push
mov
rolb
lret
sbb
gs
movsb
inc
ret
loopne
or
ja
jno
push
jo
pop
push
xchg
dec
jno
mov
pop
jmp
sub
pop
mov
fs
or
in
in
and
mov
repz
aad
test
xchg
rcrl
mov
rcl
popa
test
out
cld
inc
ret
jne
test
and
mov
inc
arpl
nop
mov
sbb
orb
mov
push
xor
int
fsubp
adc
scas
xchg
aad
dec
pop
fmull
add
pop
shll
or
push
fs
repnz
ja
mov
hlt
sub
ret
mov
inc
in
nop
and
mov
add
pop
add
sarl
rcrb
test
cmp
push
add
push
push
or
xor
mov
mov
cmp
lock
in
push
ret
jp
mov
mov
leave
xor
cmp
cmp
icebp
fisttps
add
in
ret
push
icebp
movsl
js
fists
pop
adc
dec
cwtl
into
jecxz
push
mov
mov
add
mov
cli
pushl
into
sbb
pop
jbe
cli
sbb
ret
mov
add
mov
xor
jp
ret
push
adc
fstpt
adc
dec
push
rcrb
sahf
cmp
ret
dec
ret
mov
ret
mov
push
movsb
add
pop
test
fidivs
int3
jno
xchg
mov
fsts
mov
jb
jae
ret
pop
sti
push
and
sahf
jo
jnp
xchg
sbb
fsubr
xchg
lret
sub
int3
int3
popl
inc
lock
sub
mov
leave
xor
mov
mov
inc
xchg
lahf
imul
adc
lcall
xchg
lcall
ret
mov
jmp
imul
push
ret
mov
add
and
nop
and
arpl
out
jle
lods
mov
push
mov
sar
inc
fistl
dec
ret
mov
cmpsb
addr16
je
arpl
lods
movsb
andb
add
sub
shrb
add
xchg
xor
es
iret
push
sbb
adc
add
ret
mov
aam
push
in
cmp
mov
and
iret
mov
mov
fs
iret
andl
or
nop
mov
push
mov
in
mov
aaa
fmul
sbb
pop
dec
ret
nopl
rcr
or
mov
nop
xor
sbb
xchg
and
out
jl
movsb
ds
jbe
sti
mov
mov
and
and
and
mov
and
and
mov
inc
jae
es
or
mov
js
cmp
ds
ret
mov
cs
cld
popf
adc
mov
stos
push
outsb
in
sbb
jns
mov
cwtl
ljmp
mov
adc
push
mov
jmp
mov
testb
lcall
lret
hlt
loopne
pop
push
pop
xor
int
mull
ret
mov
add
mov
test
push
mov
mov
dec
pop
add
mov
add
xchg
cvtps2pi
cmp
pusha
ret
pop
ljmp
xchg
rcrb
adc
rorb
mov
or
das
push
or
mov
fdivl
adc
out
mov
arpl
fdivs
sub
xor
movsb
jg
lahf
xchg
xlat
xchg
jmp
pop
jae
pushf
inc
test
lea
ret
test
scas
sub
mov
add
xchg
fidivl
int
add
mov
ret
mov
push
or
add
ret
mov
dec
inc
inc
scas
pop
sub
arpl
add
mov
sbb
dec
push
out
pop
push
cwtl
inc
fwait
nop
push
ret
lock
or
mov
repz
xchg
mov
push
xor
mov
adc
sub
mov
mov
cmp
mov
jge
aad
ret
mov
ret
mov
jns
in
fld
xlat
ljmp
pop
int3
xor
inc
ret
sbb
push
mov
in
sti
xchg
push
lcall
xchg
loopne
cwtl
xor
inc
mov
cli
leave
sbb
or
mov
xchg
xchg
loopne
and
out
icebp
hlt
push
sbb
add
and
jecxz
cltd
aas
loope
loopne
into
or
mov
ret
mov
xchg
push
fiadds
pop
cld
mov
inc
xchg
xorb
shl
ja
ret
mov
sbb
mov
add
adc
ret
test
push
fcoms
lcall
fcoml
out
movsl
lds
or
mov
mov
xor
imul
sub
aaa
ds
notb
add
sarb
push
pop
ljmp
mov
out
icebp
pop
outsl
lret
ret
mov
xchg
xchg
or
mov
shrb
insb
ret
mov
ja
cmpb
into
in
in
pop
pushf
mov
adc
call
stc
push
jecxz
repnz
xor
ret
mov
fmull
mov
add
mov
xor
cwtl
cmp
dec
ret
mov
push
sub
cmp
or
mov
pushf
lods
and
mov
fs
mov
push
loope
mov
mov
and
mov
dec
add
mov
test
ret
mov
sub
add
out
in
frstor
push
mov
jb
mov
sub
mov
jns
ret
adcb
mov
scas
cwtl
add
mov
xchg
in
movsl
inc
ret
arpl
jo
jb
ret
mov
test
mov
xchg
pop
lret
xlat
push
xchg
adc
mov
xchg
fisttpll
mov
notl
mov
push
and
sbb
insl
loope
ret
mov
notb
orb
inc
ret
pop
sarb
int
es
ret
push
adc
inc
dec
add
adc
popf
decl
xchg
fwait
popl
hlt
addr16
repz
push
mov
sbb
lock
mov
fs
out
sbb
and
mov
ret
ds
jnp
ss
ret
jns
jg
test
lods
loop
xchg
mov
mov
outsb
shl
aad
inc
add
mov
push
pushf
fistps
xchg
test
stos
add
mov
icebp
pop
mull
je
in
xchg
popa
jmp
mov
add
in
or
add
jbe
aaa
clc
xor
fs
mov
mov
imul
pop
inc
scas
mov
hlt
gs
lret
jl
and
add
mov
lcall
scas
mov
ret
fildl
inc
mov
push
inc
scas
inc
ret
mov
ds
xchg
in
lret
mov
cltd
loopne
rcll
dec
js
xchg
aaa
dec
dec
xor
leave
test
mov
rclb
mov
mov
das
mov
jmp
cmp
aam
mov
sarb
push
mov
sub
jp
jp
mov
mov
cmpl
xchg
enter
pop
xchg
dec
ret
addr16
nop
ss
xchg
out
push
out
ret
and
mov
lcall
stc
xchg
insl
cmp
ret
dec
call
mov
and
mov
mov
inc
movsb
or
dec
int3
shlb
sub
sbb
lret
int3
cli
lds
arpl
inc
je
pop
inc
add
shl
mull
movsb
mov
test
ret
sbb
mov
and
mov
ret
mov
loopne
pop
mov
inc
je
mov
inc
inc
xchg
push
shl
cmp
or
pushf
stos
iret
add
dec
imul
push
inc
ja
ret
jecxz
int
sbb
jg
inc
les
sbb
and
jl
lret
sub
xor
rcrb
cli
lret
or
jnp
ret
mov
sub
add
adc
call
js
mull
mov
or
data16
mov
in
push
dec
mov
popf
aas
lock
shll
add
imul
inc
enter
aaa
push
out
shrl
add
mov
xchg
gs
add
mov
mov
inc
xchg
cmp
loope
mov
mov
sub
rep
cmc
pop
mov
cwtl
sub
ret
cmp
mov
adc
cmp
adc
mov
jb
push
xchg
fdivr
push
lods
movsb
push
fdivl
cmp
adc
cmpl
fistl
sahf
jne
lret
jmp
xchg
mov
push
sahf
sub
mov
test
addr16
scas
loop
push
adc
in
fwait
outsb
sbb
xor
int3
in
inc
ret
mov
ss
dec
sarb
enter
pop
xchg
enter
mov
push
leave
repz
roll
dec
sub
mov
pmuludq
ret
mov
push
scas
in
into
push
or
pop
dec
push
push
imul
repz
in
cli
loop
mov
inc
ret
cld
mov
inc
ret
gs
ret
mov
incl
icebp
stos
and
xchg
test
xor
fiadds
and
loope
mov
inc
ret
mov
xor
cltd
fs
into
cli
mov
icebp
mov
lcall
add
test
iret
cmpsl
stc
lret
test
fstps
cmp
arpl
or
es
mov
add
and
dec
dec
dec
inc
ret
mov
loop
lahf
mov
add
mov
cltd
aam
cmp
push
repz
jb
sbb
aas
mov
mov
push
scas
fwait
mov
add
mov
cmc
fisubrs
es
ret
clc
jge
lock
int3
dec
ret
mov
add
sub
mov
mov
adc
mov
add
xchg
mov
mov
jmp
mov
push
lahf
dec
faddl
push
lahf
test
pmuludq
divl
or
rorb
add
cltd
mov
mov
lahf
xor
pop
or
mov
mov
insl
adc
dec
xor
dec
jb
ret
sub
out
arpl
test
ret
mov
or
xchg
mov
cli
dec
ret
mov
int
jecxz
daa
add
and
jne
add
mov
add
or
jmp
mov
mov
xchg
imulb
and
mov
sbb
cmc
imul
fs
or
add
jns
jmp
push
xor
bound
adc
dec
push
inc
ret
sub
out
dec
jg
scas
fsubp
cli
fs
push
and
ret
push
or
mov
jle
pop
sahf
dec
ret
mov
dec
inc
das
aam
ret
mov
out
jg
add
mov
mov
push
jmp
jae
js
xor
inc
dec
and
mov
ret
mov
push
add
push
inc
sub
jmp
sahf
adc
lods
dec
push
subl
std
insb
ret
mov
and
dec
nop
je
adcl
push
aaa
xor
mov
fstpt
movsb
sbb
mov
xchg
mov
sub
cli
sub
sub
mov
fnstenv
data16
stos
lods
into
insb
ret
mov
ret
mov
mov
dec
lds
jae
outsl
mov
sarl
add
xchg
dec
insl
pop
push
cmpb
lcall
mov
mov
ret
mov
pusha
ret
mov
lret
mov
ret
lock
dec
push
test
in
mov
insl
add
in
and
mov
pop
mov
push
fs
mov
mov
sbb
cmpsb
xor
lods
rorb
in
xchg
ds
sbb
xor
cs
stos
xchg
in
sub
mov
lock
clc
es
and
mov
out
push
fcompl
push
ret
push
cmp
sub
mov
shll
ret
jns
fs
decb
add
shlb
pop
lods
adc
mov
sbb
mov
push
fdivr
pop
les
add
ret
mov
xor
mov
push
mov
and
mov
cmp
rclb
in
dec
ret
mov
add
lcall
imul
xchg
notb
adc
xorb
cmc
enter
adc
imulb
ret
push
pop
jmp
pop
shll
movups
push
pop
lods
hlt
aam
std
pop
push
out
jns,pn
mov
mov
jmp
cmc
nop
test
jl
inc
xor
repz
mov
ret
mov
and
push
outsl
insl
cmpsl
enter
mov
cmp
cs
fsub
stc
adc
ret
mov
mov
pop
mov
lock
push
outsl
mov
dec
ret
and
cmp
mov
sbb
and
or
cli
shrb
shll
loop
jb
xchg
xchg
cmp
mov
or
loop
movsb
mov
or
push
inc
or
sub
dec
ret
push
add
mov
and
mov
inc
xor
or
insl
fsubrp
xor
mov
adc
adc
xor
rclb
jmp
push
add
push
lret
movsb
int3
ret
push
test
rcll
inc
ret
mov
inc
out
push
add
mov
mov
and
mov
xlat
sbb
lds
lds
je
xor
movsl
pop
xchg
adc
aad
addr16
mov
out
mov
pusha
ret
fs
mov
mov
callw
or
mov
fbstp
add
pop
lods
cmp
xorb
das
out
adcl
test
xchg
or
mov
lcall
add
mov
sbb
sub
mov
jb
or
movl
sbb
les
jnp
pop
dec
ret
and
cmp
lret
addb
iret
jns
xchg
and
mov
test
in
lahf
fcmovb
sbb
xor
cli
xor
dec
xchg
mov
push
pushf
adc
sub
or
push
cwtl
insl
call
xchg
pop
fsts
push
ret
mov
arpl
fs
dec
pop
shll
mov
fsubrl
ss
mov
mov
mov
in
sar
add
add
adc
int
ret
mov
add
adc
xchg
cmp
mov
xchg
jg
idivb
sahf
pusha
ret
clc
cmpsb
insb
ret
mov
sbb
lea
add
pop
sbb
add
ret
bsr
jnp
dec
jg
sub
dec
mov
inc
mov
add
lcall
cmpsb
repz
out
push
cmc
cmp
add
add
repnz
mov
lcall
scas
mov
mov
add
mov
mov
mov
jne
sbb
sbb
test
mov
xor
add
sub
mov
in
pusha
ret
mov
adc
add
pop
adc
add
cltd
mov
nop
jno
adc
sahf
xchg
mov
jmp
xor
mov
notb
sti
stc
lcall
dec
data16
mov
xchg
mov
xchg
lcall
dec
or
mov
aas
fimuls
or
addr16
mov
mov
push
jp
ret
mov
and
sbb
cmp
add
popa
insl
xchg
push
jo
adcb
daa
jae
movsl
cmc
lea
sahf
or
mov
ret
insb
ret
xor
leave
pop
fs
mov
mov
jae
add
test
imul
int
js
xchg
add
mov
or
add
mov
mov
and
ret
mov
dec
ret
lret
push
jmp
loop
pop
inc
imul
cmpsb
mov
add
lret
ja
psrld
ret
adc
lahf
loop
sahf
inc
addl
xor
adc
push
fwait
ret
push
insl
sbb
aad
xchg
adc
sub
lds
add
mov
ret
mov
daa
xchg
sbb
mov
pop
lods
enter
mov
dec
mov
xor
or
push
and
jmp
push
xchg
push
pop
inc
sub
ret
mov
dec
pop
xchg
dec
bound
in
xor
ret
mov
ret
mov
adc
fimuls
push
mov
dec
xchg
push
push
aad
cs
dec
aaa
pop
adc
lods
repnz
pop
adc
xchg
sahf
and
in
dec
iret
loopne
inc
call
add
add
sbb
inc
sub
xor
pminsw
add
push
in
gs
mov
rclb
ret
dec
push
jae
sti
xchg
out
dec
adc
ret
push
push
pop
xchg
mov
ret
dec
inc
ret
mov
movsl
pop
cmp
mov
test
ret
fdivrl
pop
cmp
cmp
xchg
int3
inc
test
mov
ja
sbb
jge
ljmp
sbb
mov
mov
mov
subb
out
xor
adc
push
sbb
pop
cmp
mov
jne
fcmovbe
and
dec
pop
out
addr16
ret
mov
jae
add
das
ds
push
int
dec
adc
mov
data16
cld
loop
inc
ss
loopne
inc
sahf
xor
inc
ret
les
lcall
or
stos
rcll
stc
or
mov
add
jle
mov
mov
ret
mov
rorb
add
mov
jge
iret
cmp
push
rcl
adc
fisttpl
dec
neg
cmpsl
out
andl
lods
test
jb
rcr
outsl
movsl
dec
shr
rep
mov
mov
mov
jg
xchg
adc
mov
xchg
popa
jbe,pn
and
dec
push
dec
nop
in
lcall
push
test
lea
cmp
add
sahf
inc
mov
jo
mov
dec
push
add
mov
into
mov
add
add
icebp
push
adc
loopne
lods
mov
and
or
repnz
sti
dec
mov
insl
sbb
lret
scas
gs
fcmovnbe
jg
inc
pop
cltd
into
and
inc
ret
mov
cmpsl
xchg
cmp
ljmp
jae
ljmp
iret
cmp
out
fs
mov
pop
pop
popf
mov
into
fcompl
popf
mov
rolb
ret
sbb
mov
arpl
mov
cs
sahf
mov
xchg
xor
xlat
cmp
adc
and
mov
sbb
das
mov
mov
ret
dec
ret
mov
xchg
addr16
fs
mov
leave
mov
in
stos
clc
xchg
fwait
mov
xor
or
jge
les
sahf
aam
loop
fs
mov
inc
mov
push
shrl
add
lds
cld
call
mov
fsub
test
testl
sbb
fbld
push
gs
xor
sub
mov
mov
add
mov
fsubrs
mov
inc
ret
pop
or
shll
arpl
adc
sub
lock
mov
shll
mov
pop
and
fsubrl
into
push
mov
sbb
mov
outsb
imul
leave
inc
pushf
sub
mov
jmp
lret
sub
filds
negb
pop
cs
and
cmpsb
jp
push
mov
dec
mov
popf
adc
ds
xchg
ss
mov
sahf
arpl
xchg
mov
xchg
push
cmp
and
mov
cwtl
aaa
test
test
dec
jae
jecxz
std
push
lahf
fst
or
cli
aam
jl
sub
jo
and
mov
adc
jb
adc
and
mov
rcrl
mov
outsl
popa
mov
inc
mov
cmp
nop
je
stos
loopne
mov
aas
xor
mov
shrb
mov
addl
mov
aaa
or
mov
sti
rcrb
rclb
cmpsb
ss
rcll
inc
cmp
out
cmp
mov
pop
das
xor
xchg
mov
int
jns
mov
xchg
ret
dec
pop
shr
adcb
sbb
add
bound
ret
mov
in
cmpsl
inc
test
jl
fisubrl
fs
shll
mov
push
inc
pop
push
daa
mov
adc
out
sahf
in
mov
pop
jl
fcom
or
mov
add
mov
jae
add
mov
in
fstl
mov
add
pop
xchg
adc
mov
lea
test
les
out
ret
es
mov
mov
gs
xlat
repz
cmp
or
imul
popf
test
add
cmp
pop
and
xor
out
cld
inc
ret
jge
xchg
pop
popa
flds
jp
pop
dec
lods
inc
int3
in
sub
add
xchg
pushf
push
fdivs
ret
pop
or
out
sti
aad
or
push
in
cmpsl
das
or
mov
xchg
ret
add
ret
fcompl
dec
enter
addb
pop
xor
sbb
rolb
mov
test
std
sbb
push
mov
out
adc
push
fstps
cmp
push
std
dec
push
mov
jo
pop
xor
push
aas
mov
inc
ret
mov
or
out
cmpsl
jns
push
enter
cltd
push
sub
mov
add
fs
mov
fisubs
lock
outsb
xchg
adc
adc
adc
and
inc
sub
mov
xchg
rorl
pop
pop
mov
dec
jb
pop
xchg
aas
mov
stc
std
pop
aaa
in
cmp
mov
dec
xor
test
ljmp
pop
cld
xlat
sbb
sbb
sbb
push
stc
sbb
pop
std
dec
mov
lods
cwtl
ret
fimull
mov
and
ret
xor
inc
stos
xchg
push
and
repz
das
add
mov
mov
jecxz
jp
test
sbb
shlb
jmp
hlt
or
mov
add
ret
mov
cltd
mov
in
dec
ret
sbb
mov
cltd
xchg
jo
aas
pop
lock
hlt
sbb
imul
das
hlt
stc
mov
ret
mov
push
pushf
jp
fsubrp
jb
jle
dec
cmp
ret
mov
adcl
gs
push
push
jle
das
fistps
mov
js
inc
lods
pop
mov
jp
mov
push
in
jnp
mov
ja
xchg
add
jecxz
or
cli
jo
sbb
push
mov
inc
in
roll
add
mov
mov
pop
sbb
jg
sahf
stc
test
mov
pop
fldl
ret
mov
jns
ret
mov
jno
lock
roll
adc
mov
ds
das
dec
ret
in
sub
mov
add
ret
mov
filds
popf
xchg
fldenv
push
sarb
add
dec
sbb
fdivrp
or
mov
push
push
fsts
fldcw
mov
mov
xchg
pushf
mov
enter
mov
inc
insb
ret
mov
lahf
or
adc
add
imul
sub
mov
ret
mov
aas
jmp
ror
push
rorb
out
aas
xchg
aam
dec
nop
jae
clc
cmpsl
jb
popf
inc
mov
mov
ret
push
xor
add
dec
stos
push
repnz
dec
sub
ret
mov
lds
add
mov
popa
adc
stos
das
addb
test
lret
jl
adc
mov
mov
test
xchg
outsb
mov
loope
ret
shl
pushf
push
adc
aam
std
add
jp
ret
mov
add
mov
mov
data16
insb
ret
mov
js
adcb
leave
jmp
pop
and
add
mov
cmpsl
push
add
fwait
lret
mov
pop
cmp
lods
scas
jge
mov
xlat
stos
lcall
and
mov
pop
fcomps
das
rclb
inc
ret
mov
sub
sbb
xor
sub
into
jae
jnp
inc
movsb
leave
mov
inc
mov
adc
mov
mov
xor
pushf
in
mov
xchg
ret
mov
add
inc
mov
cmp
mov
into
fstps
mov
rcll
pop
fwait
shll
pop
mov
out
mov
or
je
lea
ret
mov
loopne
mov
ret
dec
jl
ret
push
inc
push
push
jp
js
ret
mov
xchg
lret
or
fs
mov
sbb
add
mov
push
outsb
xor
data16
mov
xchg
mov
push
fcompl
out
imul
sbb
popa
dec
out
movsb
or
pop
push
inc
jl
fs
mov
sti
mov
mov
call
stos
sbb
sub
pop
and
mov
mov
pop
cld
cltd
jmp
in
mov
rcrb
sub
mov
push
stos
pusha
ret
mov
test
js
imul
gs
sbb
lods
pop
js
push
mov
ret
mov
cmp
inc
ret
test
sub
sub
pop
pop
scas
pop
cmp
mov
push
xchg
mov
icebp
mov
insb
ret
pop
cltd
mov
sub
icebp
scas
sub
jnp
jmp
xchg
jmp
push
xchg
ret
mov
add
aas
mov
mov
clc
or
mov
pop
dec
ret
push
inc
testl
add
cmp
add
jne
mov
mov
lret
shlb
add
lret
mov
xchg
popf
sbb
fst
jae
inc
pop
clc
movsl
int
ret
sbb
xchg
pop
sub
mov
add
jecxz
mov
pusha
ret
movsb
dec
in
mov
testb
xor
xor
ret
mov
pusha
ret
mov
ret
pop
jae
in
scas
pop
mov
cmp
cmpsb
dec
cwtl
jbe
js
lods
or
push
cmp
inc
sbb
or
mov
mov
cmp
mov
xlat
gs
mov
cmpsb
xchg
out
sub
mov
leave
lahf
sub
cltd
rcrl
insl
sbb
jns
dec
ret
mov
es
xchg
test
sub
hlt
daa
ds
lcall
add
push
imul
pop
pop
xor
xor
push
adc
pop
fstp
ljmp
or
mov
mov
xacquire
jns
ret
mov
or
add
mov
mov
jae
push
mov
in
or
ror
not
jle
insl
iret
sub
xor
push
push
inc
in
ret
mov
add
mov
popf
xor
iret
or
cwtl
or
mov
adc
jecxz
cmp
ret
rcrl
dec
inc
scas
mov
pop
pop
dec
outsl
jl
or
mov
ret
inc
les
js
nop
jo
cmp
loop
adc
dec
je
inc
ret
mov
pop
repnz
loope
ror
inc
ret
mov
dec
jnp
inc
aam
adc
push
pop
int3
push
out
dec
in
mov
dec
ret
mov
sbb
mov
add
mov
xor
mov
ret
mov
pop
out
in
cli
je
or
mov
scas
cmp
add
aam
mov
adc
dec
ret
mov
and
ret
in
xor
push
or
mov
sarl
dec
mov
and
mov
or
xchg
cmp
jecxz
mov
and
mov
dec
ds
jecxz
addb
nop
jmp
sbb
scas
jp
push
sub
fdivp
push
nop
out
push
cmp
ret
pop
pop
push
lds
sahf
jl
mov
or
push
and
mov
mov
roll
adc
jno
xchg
mov
xor
jle
mov
pusha
ret
fcoml
movsb
xor
add
mov
out
mov
addr16
ret
int
cli
add
mov
ror
int
inc
mov
out
sub
mov
xor
jle
aaa
rcr
xor
sbb
push
sub
add
add
iret
mov
cwtl
imul
add
xchg
xchg
sbb
xchg
aad
das
jmp
sub
mov
pushf
leave
sub
mov
pop
or
sahf
lock
mov
cmp
insl
shr
out
sbb
arpl
xorl
fs
test
movb
lods
and
out
repnz
bound
shl
pop
dec
push
pop
jno
ret
and
ret
in
lock
mov
pop
negb
lods
ja
push
fwait
mov
and
xor
daa
adc
jl
ret
push
cltd
stc
xor
arpl
test
test
cmc
dec
loop
bt
lds
iret
inc
ret
mov
hlt
jp
xor
sbb
add
pop
in
mov
mov
mov
ret
loope
sbb
ret
jecxz
mov
stos
hlt
leave
rol
int3
inc
sti
fnstsw
xchg
ror
ret
cmpsl
ficoms
psubq
mov
mov
add
jbe
push
xchg
pop
sub
jg
jmp
push
xchg
pushf
inc
push
aam
xchg
dec
push
jl
add
imull
int3
push
pusha
ret
adc
cmc
mov
jb
aaa
and
test
add
repz
jae
inc
ret
mov
and
mov
or
lds
bound
cld
xlat
sub
dec
ret
mov
jo
or
ret
lods
insl
fs
mov
fisttpll
lret
ds
es
std
push
sbb
fs
inc
mov
rcrb
mov
xchg
sub
mov
sub
out
inc
ret
mov
mov
loop
push
ret
mov
add
mov
arpl
sbb
outsl
loopne
bound
sbb
add
ret
leave
jp
inc
xchg
lret
mov
ret
fwait
dec
mov
lock
aam
xor
aad
addb
pop
sbb
je
cmpsb
jno
xchg
jge
jbe
ja
imul
push
xchg
inc
adc
mov
call
ret
mov
cmpsl
rorl
mov
stc
jae
ret
mov
push
push
pop
xchg
mov
pop
in
push
xor
sbb
add
mov
ds
push
repz
push
enter
lods
and
ret
lods
sbb
jecxz
hlt
scas
and
adc
add
mov
pop
sub
sahf
or
into
mov
sbb
mov
push
nop
movsb
roll
push
jne
mov
cmp
sub
push
xor
repz
out
andb
repz
or
js
insl
in
es
fistpl
rclb
xor
stos
in
cmpsl
aaa
inc
ret
das
xchg
std
not
test
ret
ret
sub
pop
push
popf
loope
insb
ret
mov
div
int
popf
repz
cmp
add
ja
jecxz
mov
adc
jne
add
in
clc
imul
adc
daa
mov
pop
addl
cld
push
push
loop
add
hlt
pusha
ret
mov
shlb
push
mov
mov
jmp
xchg
mov
dec
sub
add
clc
hlt
cmpsl
lods
lods
mov
or
inc
push
fdivr
std
loope
mov
add
cmp
mov
in
test
inc
je
jecxz
jo
dec
stc
fmull
mov
mov
mov
ja
push
jg
ret
push
pop
adc
aam
mov
pop
fs
mov
add
xchg
not
jp
push
or
outsb
movsb
xchg
in
jg
inc
dec
inc
push
pop
hlt
in
je
aaa
dec
ljmp
cmp
lret
andb
ds
sub
lea
mov
pop
inc
ficoml
sbb
add
fdivl
sbb
lea
add
iret
es
fs
mov
sbb
pusha
ret
pop
push
jb
js
lods
bound
loop
jg
lods
fisubs
ret
mov
push
sahf
push
je
push
lock
pop
xlat
into
fistl
add
lret
xchg
lods
sbb
add
mov
push
mov
mov
fisttpll
sbb
ret
jne
xchg
jne
ret
push
ds
mov
lods
sub
ret
mov
mov
aad
or
scas
stos
push
pop
and
mov
xor
or
imul
mov
mov
popa
pop
push
cltd
ljmp
inc
lret
mov
cmc
outsb
addr16
inc
ror
mov
add
test
mov
ret
ljmp
scas
and
mov
ret
int3
mov
mov
or
jl
cmp
add
aam
ret
mov
ret
mov
insl
xor
jmp
movsl
pop
inc
xlat
or
fadds
aad
mov
mov
sbb
xor
hlt
pop
fdivrl
inc
inc
repz
int
jb
adcb
arpl
int
mov
cmpsb
or
push
pop
clc
imul
fcmovnb
inc
mov
jo
test
jns
mov
inc
mov
popa
xchg
fwait
in
mov
mov
idivb
repnz
repnz
mov
ret
mov
xchg
push
loop
mov
pop
adc
and
mov
add
aam
shrb
mov
push
push
xchg
jbe
ret
bnd
lods
and
mov
ljmp
mov
push
out
pop
repz
lea
pop
lock
movsl
pop
push
es
mov
pop
call
lret
or
mov
mov
ret
pop
or
ret
mov
fs
mov
rolb
nop
shlb
data16
cmp
adc
es
lret
aas
mov
mov
push
sbb
sbbl
mov
faddl
cmp
dec
push
push
and
or
ret
mov
outsl
and
mov
bound
xor
aaa
sub
fidivrl
xlat
cmp
mov
mov
cmpsl
adc
add
mov
bound
mov
cmp
sub
jle
jmp
mov
xor
ljmp
mov
sub
shrl
mov
push
imul
aad
sbb
cmp
xchg
out
ret
dec
jle
shrl
scas
cmp
and
ret
mov
cmp
mov
ret
cmp
rorb
or
mov
lea
cmp
ret
mov
lahf
cltd
inc
scas
push
jnp
jecxz
je
fwait
ds
mov
rolb
jg
push
xor
jno
aaa
sub
mov
inc
ret
movsb
mov
loopne
cmp
mov
popa
call
add
ret
mov
add
push
out
ret
mov
ret
mov
iret
pop
inc
pop
cmp
ret
adc
or
mov
lea
fwait
in
xchg
test
ret
pop
movsb
pop
cmp
xlat
push
pop
add
outsl
cltd
mov
ret
mov
mov
cmp
pop
je
add
mov
out
jae
aas
jmp
mov
in
mov
and
jnp
inc
add
mov
dec
ret
xor
ret
mov
add
ret
inc
popa
and
xor
add
add
mov
xchg
inc
sbb
cs
sbb
in
repnz
mov
das
or
mov
mov
inc
lock
dec
jle
lcall
xor
ret
inc
or
mov
ret
mov
movsl
fiadds
pop
xchg
das
fs
mov
lock
inc
ljmp
je
mov
out
and
or
add
jg
jg
shl
pushf
test
cmp
cmp
shr
imul
notb
xchg
or
nop
sbb
cmp
mov
popa
inc
mov
add
jg
dec
ret
aaa
adc
jmp
jmp
jg
repnz
ret
inc
ret
or
mov
add
call
add
adc
scas
outsl
mov
mov
pop
addr16
inc
sbb
push
inc
sub
sahf
jo
inc
fs
mov
jns
out
sub
mov
mov
ret
sbb
add
out
lock
fs
mov
add
mov
add
fstp
pop
pop
std
dec
js
push
inc
ret
xor
dec
inc
data16
cwtl
in
add
inc
bound
mov
add
push
notb
shll
mov
int
repnz
jmp
pop
cli
cld
dec
insl
mov
addr16
pop
mov
pop
ja
imul
cmp
xchg
mov
out
cmp
and
and
arpl
insb
ret
sbb
lahf
mov
jns
stc
mov
add
ret
adc
pop
xorl
adc
not
imul
mov
ret
sub
mov
mov
or
push
cmp
stc
popf
sub
mov
mov
cmc
jl
mov
push
repnz
adc
ret
mov
popf
mov
dec
je
mov
lahf
fs
mov
jns
loopne
mov
pop
add
mov
testl
xchg
inc
aam
cmp
and
lods
dec
cli
inc
ret
jge
inc
lods
js
cmp
or
mov
or
jo
jg
sub
mov
ret
daa
dec
mov
push
insl
sbb
sub
mov
add
add
js
mov
mov
and
jns
idivb
into
mov
mov
cmp
add
xlat
cmp
dec
mov
rcll
and
nop
pop
or
ret
mov
cmp
sbb
add
mov
push
imul
xchg
imull
push
adc
cmovl
mov
mov
mov
int
push
dec
loopne
xchg
add
mov
mov
xchg
scas
adc
bound
dec
push
gs
mov
pusha
ret
mov
or
ficomps
movsb
pop
mov
mov
popf
and
sti
icebp
mov
push
jge
ret
push
mov
or
mov
das
xchg
ret
orl
ljmp
add
add
adc
divb
je
call
ret
aam
jmp
cmp
pmulhuw
sbb
push
lcall
lods
sub
sbb
jle
test
jno
ret
mov
ds
dec
fwait
push
insl
out
adc
mov
les
in
stos
adc
aam
ss
or
mov
int
cmpsl
mov
xor
ds
ret
mov
add
mov
ret
mov
sbb
into
ret
sub
push
stos
add
mov
ljmp
add
ret
js
hlt
sbb
ret
mov
pusha
ret
test
push
mov
mov
cmp
jbe
int
dec
ret
mov
mov
ds
mov
mov
mov
repnz
xchg
xchg
ljmp
pop
data16
sub
dec
xor
mov
test
call
stc
dec
lahf
jge
mov
lds
outsl
mov
add
mov
pop
push
mov
xchg
adc
movsl
mov
pop
xlat
jge
loopne
in
pusha
ret
mov
add
mov
fnstenv
lahf
icebp
pop
popl
jne
aad
pushf
push
cmp
push
fldz
into
psubd
pop
jg
je
ret
and
mov
fwait
insb
ret
mov
lods
inc
sbb
mov
sti
pop
addl
pop
xchg
mov
shlb
xor
mov
fistps
pop
js
test
and
ret
inc
std
xlat
int3
mov
daa
aad
cltd
scas
mov
dec
ret
push
scas
in
jae
pop
ds
pushf
lods
inc
inc
ret
mov
mov
ret
mov
imul
add
ret
mov
inc
add
xor
pop
rcr
mov
pop
dec
movsl
and
mov
jecxz
fcmovnu
sarl
jbe
jmp
fistpll
cmp
mov
cltd
fistps
shll
mov
xchg
stos
and
adc
fucomp
xor
or
ret
adc
pop
mov
xchg
adc
push
repnz
push
jo
sahf
mov
ret
sbb
ja
mov
add
in
je
jl
or
mov
fs
adc
pop
add
push
adc
orl
ret
lahf
push
pushf
scas
sub
iret
stos
jle
scas
inc
jecxz
pusha
ret
outsb
xchg
fidivrl
mov
xor
ds
lea
call
adc
adc
testb
sub
sarl
pop
jl
scas
clc
mov
pop
scas
div
lea
fnstcw
iret
cmp
xchg
mov
or
aaa
add
mov
nop
loop
adc
or
lods
xor
adc
outsb
mov
rorb
les
ret
cmp
inc
ret
mov
mov
mov
dec
lcall
push
in
and
mov
leave
stc
call
mov
aaa
and
jne
cmp
adc
xchg
or
push
aaa
inc
ret
addr16
movsb
pop
jecxz
cmpsl
int3
enter
sbb
pop
or
fcmovnu
shlb
cld
inc
jae
cmp
fidivrl
or
in
sbb
inc
ucomiss
push
lcall
ss
mov
add
xlat
push
sbb
mov
popa
es
fadds
insl
ret
mov
and
push
pushf
in
dec
mov
sbb
bswap
std
fsub
sarb
xchg
out
or
xchg
dec
xchg
stos
test
je
cltd
sbb
push
in
subb
in
cmpsb
cmp
ret
outsl
lcall
ficomps
cmc
addr16
lods
mov
xchg
inc
ret
mov
bound
mov
ficomps
lret
xor
sbb
nop
adc
hlt
lret
and
clc
xor
sbb
dec
mov
xchg
push
jp
mov
popa
pop
test
mov
push
nop
repz
ljmp
add
repnz
xchg
mov
add
push
int3
movsb
sbb
fidivrs
addr16
addb
ret
cmp
push
push
movb
outsb
adc
xchg
lock
cmp
mov
sahf
xchg
test
fistps
sub
add
inc
ret
sarl
je
lcall
add
mov
stos
rolb
cmp
sbb
mov
jle
jns
inc
ret
mov
daa
mov
sti
in
adc
dec
xchg
addl
test
call
mov
aam
push
xor
mov
rclb
daa
movsl
int3
lcall
sub
cmpsl
outsb
repnz
or
add
mov
add
mov
mov
sahf
xchg
jne
sub
jecxz
fsubrl
add
lret
outsl
xchg
subl
leave
andl
mov
add
mov
mov
mov
push
aas
aas
and
mov
add
lahf
test
mov
lea
pop
sbb
sub
out
int3
mov
jp
inc
test
dec
sub
mov
cltd
scas
movsb
xchg
mov
push
cld
or
repnz
fmull
add
aad
pop
mov
sub
mov
or
mov
inc
ret
fimull
jecxz
cmp
incl
int
int3
popf
fdivs
bnd
mov
add
sub
mov
inc
push
mov
or
ret
inc
ret
mov
fwait
inc
loopne
pop
jecxz
xor
add
fsubrl
aas
cmc
mov
pop
mov
cmc
mov
repnz
insb
ret
mov
daa
jb
dec
ret
mov
repz
pusha
ret
xchg
xor
lea
stc
adc
dec
ret
jle
pop
and
jle
and
cs
popf
and
mov
mov
or
mov
mov
add
mov
xchg
repnz
xchg
je
vrangesd
mov
adc
testl
mov
xchg
inc
loop
add
mov
mov
mov
inc
mov
shrb
loopne
xor
mov
icebp
xchg
lret
mov
mov
cltd
adc
inc
jle
ret
inc
ret
mov
dec
sbb
inc
ret
fnstsw
test
xor
adc
shll
sbb
add
mov
ud0
or
mov
xchg
sbb
ret
mov
push
inc
ret
mov
mov
push
ret
xchg
cmc
pop
mov
jge
ss
mov
fmuls
fcoms
add
mov
mov
dec
insl
push
jl
sti
loope
mov
rcrl
fldt
ja
push
xor
pop
sbb
cmc
dec
push
jmp
lret
dec
cmpsb
cmp
jo
xor
ret
mov
ret
mov
add
fnsave
xlat
mov
sbb
push
fdiv
or
xor
add
sti
rcr
sub
mov
gs
imul
fildll
add
scas
push
mov
frstor
push
jo
shlb
pop
iret
xor
sub
push
subl
xor
loopne
mov
je
jne
add
push
add
mov
ret
mov
xor
out
lahf
fisubrl
out
inc
cmp
fimull
mov
adc
jo
cmp
pop
xchg
cmp
es
rcrb
inc
addr16
mov
mov
mov
jmp
mov
pop
xchg
and
loop
cmp
mov
or
jecxz
inc
popa
jge
ljmp
out
sub
iret
sahf
push
or
gs
xchg
fwait
mov
movsl
push
push
dec
add
mov
in
in
enter
push
sub
mov
mov
ficoms
sbb
insb
ret
test
ret
mov
pop
rorl
sub
mov
push
loop
leave
sub
testl
inc
ret
mov
dec
fildl
jb
loopne
jo
and
mov
ror
das
gs
ret
pusha
ret
mov
add
mov
rcrl
outsb
and
mov
stc
bound
adc
mov
pop
pop
pop
xchg
testb
aam
pusha
ret
push
fbld
out
mov
mov
cmp
adc
fsqrt
dec
ret
dec
ret
mov
ret
sub
adc
mov
fsubrs
mov
ret
xlat
push
mov
shrb
fsubs
lds
mov
ret
mov
xor
mov
and
mov
ret
mov
mov
cmc
int3
es
xchg
adc
mov
lea
ret
push
cwtl
dec
ret
mov
loop
xchg
imull
add
mov
mov
scas
stos
xchg
inc
add
mov
ljmp
mov
mov
ds
ret
add
mov
pop
test
int
cmpsb
cmp
mov
shrl
ret
mov
fcmovnbe
inc
lfs
jle
inc
je
out
add
mov
dec
ret
mov
push
xchg
mov
inc
ret
mov
fcmovnb
test
leave
lret
mov
inc
les
adcl
pushf
sbb
lret
scas
push
xchg
and
arpl
mov
jns
ret
sahf
ljmp
ret
int3
repz
call
and
dec
push
out
pop
xchg
fwait
add
mov
xor
sbb
rorl
jge
or
jno
mov
mov
mov
dec
aam
lods
mov
sarb
cwtl
mov
loopne
push
jnp
cld
or
xor
add
mov
shlb
lcall
mov
inc
sub
stos
andl
dec
ret
mov
daa
fbld
lods
lea
xchg
xchg
scas
and
adc
adc
mov
push
cmc
pop
clc
in
fistpll
ret
mov
sbb
lock
lahf
mov
js
mov
pop
jbe
adc
mov
ror
add
pop
rorl
dec
ret
mov
mov
push
sub
sbb
xchg
out
fdivs
add
mov
ret
mov
jmp
push
jno
xor
xor
je
aaa
scas
push
mov
or
mov
cld
pop
icebp
cmc
stc
test
ds
lcall
add
xor
and
mov
add
out
push
repz
mov
mov
xor
sbb
push
cmpsb
fidivrs
out
jae
mov
lock
in
xlat
sbb
lahf
daa
xchg
jge
xor
loopne
das
fwait
inc
and
pop
cmc
dec
ret
call
inc
mov
add
repz
mov
xchg
pop
adc
or
xor
mov
loopne
pushf
mov
jle
fbstp
sarl
out
outsl
cmp
cmp
xchg
adc
fucomip
fsubr
jae
xor
mov
fildl
ret
mov
xchg
ds
roll
sahf
cltd
mov
ret
mov
loopne
popf
ja
mov
das
mov
mov
ret
pushf
pop
pop
jle
arpl
mov
inc
ret
mov
mov
mov
in
fdivrl
add
movsb
mov
ret
mov
push
xchg
cmp
mov
sbb
in
test
fs
mov
push
xor
pop
ds
ret
and
mov
xor
gs
out
pop
push
cmp
and
aad
fsubp
mov
xor
lds
ss
ss
nop
popf
push
jecxz
mov
push
xchg
std
add
dec
arpl
xchg
sahf
add
mov
mov
sbb
xchg
cmpsb
test
in
and
mov
xor
jmp
dec
cltd
jo
ret
mov
push
inc
fisttpll
mov
out
cmpsb
hlt
add
mov
mov
sti
and
cmp
mov
ret
mov
ljmp
daa
mov
cmp
orb
fistpll
test
mov
xchg
jnp
sbb
cmp
sbb
sub
es
add
faddl
add
bound
daa
loope
pop
or
mov
cld
or
jns
pop
mov
cmpsl
rclb
pop
lret
push
imul
lds
ret
mov
add
jne
xor
xchg
pop
test
add
sbb
int3
adc
adc
jp
leave
stos
je
pop
sbb
nop
and
mov
push
pop
test
dec
jle
movsb
sbb
ret
mov
lcall
add
aaa
test
in
jb
xchg
cltd
or
mov
cmp
pop
lahf
pushf
jecxz
cld
sub
xor
jg
inc
lea
xchg
push
aad
sti
lcall
xchg
mov
scas
les
cmp
ret
mov
lods
or
lret
and
mov
aas
xor
shrl
imul
sub
mov
dec
ret
pop
and
push
shll
mov
lea
ret
das
push
bound
pop
jns
ret
rolb
mov
add
jo
jecxz
pop
bound
jmp
inc
lret
insb
ret
shll
cmp
stos
or
mov
inc
lcall
filds
add
ret
xor
push
pop
mov
enter
ret
dec
arpl
cs
sub
mov
sbb
push
sbb
insl
pop
movsw
mov
jne
sbb
out
shrl
xor
jecxz
mov
aam
cmp
push
leave
add
lret
mov
sahf
lods
insl
imul
mov
push
dec
sub
push
jl
push
mov
in
sub
pop
mov
sub
jne
popl
add
push
rorl
ret
sbb
sub
sbb
fwait
or
mov
jl
mov
mov
jno
mov
xchg
push
or
sbb
and
cmp
ret
jp
test
iret
outsl
adc
cwtl
sub
pop
pop
ficoml
add
mov
sub
sub
jne
push
xorb
add
fcompl
ret
mov
mov
int
das
sbb
mov
and
das
dec
push
mov
repz
lcall
cpuid
mov
inc
dec
fcmovne
stos
data16
int
ret
sbb
popa
lods
push
stc
orb
stc
cltd
imul
pushf
jnp
pushf
adc
or
mov
sbb
add
mov
ret
sbb
dec
aas
pop
cmp
fbld
mov
movsb
insl
adc
add
xchg
and
mov
add
mov
enter
ret
mov
jecxz
add
lahf
and
mov
fistpl
inc
aaa
dec
xchg
pop
insb
ret
mov
mov
cmp
stc
dec
mov
cltd
xchg
out
loopne
xchg
push
or
mov
in
shll
xchg
pusha
ret
mov
cmp
popa
scas
adc
mov
jl
sar
das
mov
ret
out
ret
mov
lahf
cmp
cmp
incb
cmp
aaa
out
or
nop
sub
mov
shrb
lret
imull
add
dec
into
or
push
push
push
clc
or
jb
clc
hlt
or
mov
addr16
int3
mov
mov
mov
jg
sbbl
pop
mov
psraw
out
xchg
test
aam
dec
jo
lcall
dec
mov
shrl
fisttpl
sarl
insl
sbb
push
daa
inc
ret
mov
aad
push
sub
mov
cli
pop
mov
dec
aam
ret
in
imul
add
sbb
add
push
in
loop
popf
addb
lods
in
jo
adc
rcrl
mul
add
mov
dec
add
mov
sbb
ja
xchg
addr16
adc
das
gs
mov
adc
aad
xchg
pop
dec
ret
push
push
mov
adcb
jo
mov
pop
aad
outsb
mov
popf
test
xchg
inc
pop
stos
push
inc
ret
insb
ret
mov
das
xlat
dec
ret
mov
pop
notl
push
push
inc
sti
jmp
xor
insl
push
ret
mov
mov
inc
ret
out
and
fwait
cmc
ss
xchg
iret
lea
push
dec
adc
loope
mov
dec
test
mov
add
hlt
mov
ret
or
jb
cltd
dec
jns
inc
jb
out
sub
mov
mov
cltd
xchg
add
leave
lret
roll
xchg
and
adc
push
xor
ret
mov
push
scas
lret
pop
repz
into
lret
popa
pushf
mov
push
ror
repnz
addb
sbb
or
mov
adc
pushf
ja
dec
xchg
sbb
fmuls
cmpsb
sub
push
pop
into
popa
jno
sub
mov
and
jb
adc
jg,pn
addr16
stos
adc
mov
inc
loopne
push
xchg
and
inc
ret
mov
or
scas
int3
inc
testl
xchg
mov
inc
ret
lret
lcall
mov
out
mov
jl
enter
int3
fidivrs
dec
mulb
mov
xchg
repz
aaa
xlat
cmp
arpl
dec
mov
dec
cmp
or
mov
ret
mov
dec
adc
hlt
sbb
ds
imul
or
and
in
pop
fildll
pop
jge
lahf
ficoms
jg
ret
mov
ret
mov
inc
ret
mov
sbb
fldcw
out
jmp
int
leave
lahf
sti
repnz
push
jmp
mov
loope
and
mov
out
hlt
inc
cltd
leave
lcall
negb
and
mov
add
ret
repz
insl
out
jg
outsb
add
mov
gs
adc
jb
idiv
push
mov
mov
scas
push
pop
lock
lock
mov
stc
add
mov
mov
jns
out
jmp
imul
mov
add
in
lods
inc
mov
mov
dec
jle
ret
jns
pusha
ret
shlb
mov
push
jecxz
xor
sbb
pop
aaa
mov
fnstenv
add
mov
ret
mov
pop
and
cmpsl
push
push
pop
sub
jns
lock
inc
pop
lock
cmp
mov
inc
ret
mov
mov
pushf
inc
rorb
add
loop
loopne
popa
xlat
mov
imul
mov
add
and
ret
mov
pusha
ret
mov
movsl
leave
dec
les
inc
lcall
fiadds
ret
xchg
jbe
addb
dec
mov
mov
add
mov
push
jne
add
inc
hlt
bswap
cmpsl
push
aam
xchg
notb
cltd
in
mov
mov
mov
cmp
ret
mov
inc
ret
mov
movsb
or
mov
push
xchg
xchg
ret
movsl
stc
dec
xor
mov
xchg
cmp
mov
sub
mov
mov
sbb
pop
xchg
mov
pop
test
and
mov
rcll
and
mov
into
test
jp
ret
mov
jne
or
mov
lcall
stos
xchg
xor
mov
outsb
paddw
fs
mov
add
push
xor
push
ljmp
in
mov
sub
mov
sub
mov
pop
xchg
cmpsb
pop
inc
pop
rclb
jle
adc
aam
and
mov
xchg
es
and
fcompl
cmp
ss
stos
fldl
adc
add
add
xchg
jmp
dec
ret
nop
xchg
hlt
xchg
add
mov
add
scas
lret
movl
add
mov
ret
filds
mov
ret
mov
movsb
jmp
fs
in
clc
pop
ja
jg
std
cmp
ret
mov
xchg
pop
repz
ret
xor
scas
xchg
mov
inc
ret
sub
in
ljmp
clc
inc
xor
pusha
ret
lods
and
xor
xchg
lods
pop
outsl
sarb
inc
ret
mov
test
sbbb
mov
aam
add
inc
adc
shlb
daa
pusha
ret
mov
sub
dec
sub
mov
nop
in
rorb
mov
mov
pop
jae
or
mov
ret
mov
jg
and
mov
ret
mov
repz
xchg
push
sbb
xchg
aas
test
in
leave
cmp
adc
mov
int
xchg
add
sbb
mov
adc
pop
frstor
xchg
jbe
and
mov
loope
fwait
sahf
fnsave
add
ret
mov
mov
add
adc
test
push
aad
ljmp
pop
or
mov
add
inc
cmp
enter
jl
ret
mov
inc
mov
or
mov
orb
xor
mov
mov
sub
mov
and
push
inc
cmp
adc
push
jge
data16
push
and
mov
mov
lea
xchg
stos
sbb
jno
jge
insb
ret
mov
ret
mov
sub
mov
loope
add
mov
in
lods
xchg
ret
mov
mov
imul
xchg
data16
xchg
cltd
pop
sub
mov
imul
xor
aad
cli
inc
xlat
jno
outsl
push
inc
ret
mov
faddl
jb
sub
mov
pop
adc
jp
roll
ret
aam
pop
je
std
in
shl
sub
cs
ret
repz
push
insb
ret
mul
cmc
mov
loop
into
aam
ljmp
jmp
pop
xchg
sarl
xor
in
and
mov
mov
ret
fsts
nop
inc
ret
mov
in
ret
sub
mov
ret
mov
ja
pop
jns
cmp
xchg
xchg
xlat
test
loope
test
add
fiadds
xchg
ret
mov
cmpsl
nop
xchg
cli
xor
mov
sub
sbb
repz
fcom
adc
mov
sbb
je
andl
xchg
ret
mov
fisubrl
pusha
ret
dec
fwait
test
mov
inc
ret
mov
mov
movsb
aas
and
dec
lcall
add
ljmp
neg
push
neg
fidivrs
add
cmc
jnp
test
ret
mov
inc
mov
pop
pop
incl
dec
sub
mov
es
pop
jl
and
mov
add
mov
pop
hlt
dec
ret
jmp
popf
jmp
ret
mov
mov
stos
dec
jo
in
shl
and
inc
divb
xchg
push
mov
ficoms
lret
and
lock
or
enter
pop
sbb
add
mov
ret
cs
cmc
push
pop
mov
insl
enter
aaa
ss
push
pop
xchg
push
xchg
lods
fldcw
xor
insb
ret
xor
xor
test
push
aaa
jmp
xsavec
popa
movsl
loope
mov
xor
mov
lods
fimuls
pusha
ret
notb
push
jnp
jge
mov
scas
xchg
jg
incb
mov
pop
jae
bound
mov
jp
lret
xchg
test
movsl
insb
ret
cmpsl
lds
push
test
pop
adc
fs
mov
in
jae
test
in
jno
adc
push
ja
adc
movsb
outsl
pop
fwait
jecxz
dec
aad
ficoms
mov
std
hlt
fsubp
loopne
and
mov
push
ljmp
fcompl
pop
das
mov
in
popa
lods
scas
into
sub
mov
sub
jbe
jb
ret
mov
add
mov
aas
loope
shr
xchg
mov
mov
in
sbb
lahf
mov
inc
hlt
adc
mov
lahf
in
fnstenv
jmp
sub
mov
lret
cwtl
xor
loope
mov
jg
adc
lret
sub
mov
mov
mov
lret
stc
lcall
mov
ret
add
xchg
out
push
inc
ret
mov
fucomi
jle
roll
push
mov
outsb
es
sub
mov
mov
mov
add
psadbw
add
xchg
sub
js
jmp
or
xor
int
cmpsb
aaa
imul
insl
sub
or
xchg
fisubs
lds
outsl
iret
in
jae
dec
push
mov
cs
jl
jb
idivl
lcall
adc
pop
mov
cmc
or
mov
cmc
xchg
mov
fdivrl
add
mov
sbbl
pop
into
in
nop
ret
pop
sbb
and
mov
cwtl
lcall
cmpsl
test
cmp
push
mov
loope
mov
and
sahf
cmp
shr
cmpsl
or
mov
push
jo
mov
sub
mov
inc
xor
fdivr
fwait
adc
jo
stos
jp
imul
data16
and
orb
rorb
mov
dec
cmp
cmp
lret
cmpsl
movsb
mov
movsl
xor
ljmp
mov
push
test
loop
adc
add
fs
mov
decl
sbb
lods
jecxz
xor
ret
outsl
shrb
jecxz
test
scas
cltd
jmp
jmp
xlat
and
cmp
mov
xor
ret
mov
mov
mov
movsl
fdiv
push
outsl
fmull
adc
or
mov
adc
sub
aam
push
and
mov
mov
add
inc
cmp
orl
and
mov
add
pop
addb
xchg
fdivrs
mov
in
jmp
xchg
cwtl
push
mov
cld
shl
outsb
aad
lcall
pop
adc
xchg
or
fidivrs
test
dec
inc
sarl
arpl
out
sbb
movsb
lock
mov
lcall
add
mov
xchg
inc
ret
enter
fdivp
aam
nop
push
jne
or
mov
popf
int3
push
dec
jp
ret
mov
pop
ljmp
push
xlat
js
ret
mov
mov
add
mov
xchg
adc
sbb
sbb
leave
cmp
pop
mov
leave
call
test
rorb
mov
ret
mov
aad
or
movsb
mov
mov
jl
adc
lahf
or
mov
and
aam
test
aam
aam
mov
movl
or
xchg
xchg
fidivrl
ss
imul
mov
cmp
sub
add
stos
mov
and
add
cs
je
ret
mov
pop
mov
test
dec
roll
es
fnstenv
ret
lcall
xor
sub
inc
fmul
stos
mov
or
mov
mov
test
in
and
jecxz
xchg
mov
shl
sbb
sbb
mov
adc
aaa
loopne
add
mov
cmpsb
int3
sub
mov
mov
cli
push
sbb
push
jge
cwtl
mov
mov
sub
in
sub
mov
lcall
jp
xchg
outsb
xchg
xor
std
jmp
push
mov
mov
ret
mov
mov
pop
pop
sbb
jl
pop
add
add
sub
inc
ret
mov
test
mov
stos
test
aaa
mov
int3
pop
or
popf
in
sub
mov
add
call
loopne
scas
xor
aam
xor
repz
mov
mov
in
daa
and
mov
pop
push
and
mov
inc
ret
mov
pop
or
iret
or
mov
xchg
data16
aaa
leave
mov
test
add
add
arpl
lods
imul
pusha
ret
push
cltd
adc
mov
idiv
outsl
sbb
gs
rdpmc
scas
mov
inc
ret
mov
jle
and
and
lahf
aad
lods
mov
mov
std
and
mov
lret
and
mov
mov
clc
pushf
insb
ret
mov
add
cmp
ret
mov
int3
add
mov
push
xchg
frstor
add
dec
ret
mov
push
mov
adc
mov
pop
cmp
enter
mov
push
dec
ret
mov
and
mov
add
xor
or
mov
insb
ret
mov
adc
sbb
mov
aad
mov
pop
sbb
push
lcall
xor
or
lret
fs
mov
fiadds
or
add
mul
je
lret
or
mov
push
stc
pushf
dec
ret
sbb
outsb
jnp
mov
rorb
aaa
xchg
sbbl
loope
mov
cltd
inc
pop
pop
jb
stos
pop
iret
mov
mov
lret
in
xchg
push
jae
ret
pop
ficompl
jb
jnp,pn
imul
jl
sti
xchg
sub
in
leave
adc
mov
cli
jnp
add
test
dec
and
mov
fbld
outsl
xchg
shl
sbb
push
add
mov
mov
ljmp
add
pop
adc
les
jno
add
mov
jb
mov
rorl
fwait
ja
dec
mov
test
add
mov
out
mov
mov
pop
sbbl
pop
mov
test
push
mov
call
mov
mov
ret
xchg
jnp
rorb
loopne
jmp
cmp
jns
int3
or
mov
mov
push
cmc
or
mov
mov
mov
add
imul
sub
add
mov
in
add
dec
arpl
ret
mov
mov
add
stos
sbb
xor
pop
cmc
xchg
lds
cmp
mov
outsb
cmp
or
ret
hlt
sub
in
arpl
push
cli
bound
mov
ret
pop
pushl
movsl
daa
into
movsl
stos
in
and
cmpsl
inc
ret
out
pop
xor
xchg
and
mov
sarb
stos
dec
scas
int3
out
and
mov
fiadds
jbe
mov
xchg
scas
mov
clc
into
lods
roll
jecxz
xchg
lret
add
mov
sahf
and
push
push
inc
andl
cmp
jns
ret
mov
add
mov
mov
add
mov
and
dec
ret
mov
mov
cmp
pushf
mov
loop
ret
mov
jns
jle
popf
xor
aad
xchg
rclb
sub
jge
insl
adcl
or
mov
mov
movlps
in
pop
and
mov
loopne
ret
push
adc
mov
mov
mov
xor
std
sysret
movsl
xchg
pusha
ret
push
aam
xchg
scas
sub
fcoml
aad
cmpsl
pushf
jecxz
or
mov
add
pop
hlt
cmpsl
int3
xchg
xchg
push
addb
inc
ret
adc
fisubrl
xor
sbb
dec
jo
xchg
mov
mov
mov
jmp
sbb
mov
outsl
imul
jp
insl
fisubrl
jns
sahf
jo
or
les
das
and
jmp
pop
xchg
stc
repz
jl
outsb
mov
or
mov
aad
sti
int
mov
std
mov
daa
ljmp
pushf
pushf
mov
pusha
ret
mov
cmpsl
into
cmp
sbb
hlt
addl
sub
dec
cmpsl
movsl
push
fs
sbbl
pop
lds
mov
inc
xchg
xchg
xor
jno
in
jl
in
mov
push
popf
mov
cltd
ljmp
xlat
int
ret
mov
mov
mov
mov
int
xor
pop
or
mov
push
add
adc
add
xchg
rcrl
ret
enter
mov
push
inc
sbb
insl
sbb
inc
jno
test
sbb
pop
das
sbb
lret
mov
cmp
inc
fdiv
push
or
mov
jb
subl
xchg
sub
mov
mov
mov
fisttpl
ficoml
xlat
mov
push
loopne
xchg
test
test
nop
loopne
hlt
ds
jne
ret
mov
sub
mov
add
inc
inc
adc
imul
scas
xlat
lods
and
cmp
outsb
cmp
xchg
sub
ret
mov
cld
xor
enter
sbb
add
pop
cmp
jne
mov
and
lds
jecxz
mov
jp
out
adc
loope
stc
sbb
push
pusha
ret
test
mov
xchg
lods
das
xor
xor
sub
adc
in
sbb
inc
xor
cmp
and
fdivl
dec
shl
xor
mov
pop
jnp
in
mov
push
scas
bound
sub
in
rclb
in
rcll
out
dec
ret
jg
sbb
inc
ret
aam
lcall
xchg
jb
push
push
fiadds
aad
sub
repnz
mul
aas
xchg
mov
mov
sbb
dec
push
stos
inc
mov
loopne
fiadds
xor
leave
imul
push
or
aad
fbld
out
sbb
adc
xchg
loop
cld
push
sbb
mov
xchg
sbb
ret
xor
push
cmp
fwait
jl
push
push
mov
pop
or
mov
ret
add
push
into
ds
pop
mov
lock
sbb
sub
add
in
lcall
movsl
in
push
ret
mov
ret
mov
pop
jne
decl
stc
or
mov
xchg
xchg
das
icebp
daa
dec
ret
dec
ret
mov
out
jne
cmpsb
mov
sub
mov
xchg
pusha
ret
mov
movsb
push
jnp
nop
and
xor
jge
ret
xchg
gs
sti
popa
xor
pusha
ret
into
xchg
das
es
fdivrs
add
mov
ljmp
mov
dec
fmul
jns
pop
cli
lret
ret
mov
out
enter
cmpl
loope
pop
ljmp
ljmp
or
sub
ss
mov
stos
pop
or
mov
ret
mov
fs
fsubrs
clc
sbb
movsl
flds
jo
push
in
cmpsl
fbld
pop
cltd
push
mov
inc
ret
fldcw
push
mov
inc
pop
fs
jp
mov
sub
dec
cmpsl
leave
jmp
pop
fs
mov
or
mov
pop
xor
std
push
inc
ret
mov
ret
mov
jne
enter
add
add
pusha
ret
mov
cmp
add
mov
jae
jbe
xor
ds
int3
jno
mov
jo
xchg
cmpsl
xchg
stc
mov
pop
hlt
pop
xchg
sar
push
xchg
mov
push
imul
xchg
and
mov
mov
push
sbb
neg
movsb
mov
cmp
clc
push
scas
fwait
lret
les
xchg
stos
bound
ret
cli
mov
and
ret
ret
mov
mul
loope
ja
or
xchg
ss
or
xor
cltd
or
or
dec
xlat
ljmp
stos
lock
pop
pop
mov
outsl
push
mov
pop
inc
pop
adc
lcall
lret
gs
push
xchg
loope
adc
or
cld
movsl
ljmp
and
cltd
fsts
dec
ret
and
ficompl
aas
std
stos
loope
xor
out
lods
jp
fld
mov
int
push
popf
xchg
dec
ret
mov
mov
mov
fs
or
adc
jae
outsl
mov
mov
int3
adc
jne
pop
stos
add
add
loop
ds
ret
cmp
mov
xchg
jne
push
aaa
xor
xchg
xchg
sti
push
xlat
lea
frstor
push
test
js
xchg
cmp
add
fs
mov
scas
jp
dec
fbld
or
into
mov
imul
faddp
ds
sti
sti
test
pusha
ret
mov
and
jno
ret
push
ret
mov
add
mov
add
add
mov
mov
or
mov
mov
loopne
std
lods
rcrl
test
movsb
mov
subb
and
adc
add
xor
add
ret
dec
adc
enter
ds
daa
pop
into
rcrb
andb
mov
mov
and
ja
sbb
mov
jp
inc
fstpl
popa
aad
ret
stc
lea
mov
inc
ret
dec
ret
or
mov
call
lcall
lock
mulb
mov
inc
int
int3
mov
out
rolb
ljmp
ret
mov
jecxz
or
jecxz
imul
push
out
add
in
xor
sbb
add
mov
imul
add
imul
sbb
xor
icebp
aaa
into
sbb
mov
mov
add
jbe
mov
nop
mov
dec
sub
mov
nop
mov
jle
xor
out
clc
loope
mov
adc
fwait
or
mov
mov
jnp
test
pop
ret
or
in
movsl
sub
pop
inc
in
ret
mov
inc
hlt
dec
scas
or
ret
jb
into
in
pop
mov
cmp
pop
add
imulb
daa
push
in
inc
rorb
pop
imul
mov
ret
xchg
dec
ret
in
cmpsl
das
call
movsb
mov
add
push
loopne
xor
call
lods
pusha
ret
mov
sbb
ret
mov
testb
gs
dec
fidivrl
ret
jmp
inc
xlat
out
test
adc
fiadds
in
mov
ds
mov
bound
mov
jle
or
aas
mov
ret
xchg
shrb
xor
xchg
fcmovnu
jg
mov
inc
ret
add
in
dec
stos
add
mov
in
mov
dec
inc
ret
mov
in
repnz
jecxz
xchg
scas
movq
xchg
in
std
in
cmpsl
lea
jle
mov
cmpsb
or
mov
insb
ret
mov
ret
mov
ret
mov
int3
stc
mov
jb
mov
mov
ret
out
jbe
lock
andb
jmp
dec
xor
adc
xchg
out
rcll
popa
inc
ret
mov
mov
xor
mov
jl
ret
mov
add
xchg
mov
gs
push
cmp
divl
push
stc
mov
enter
icebp
dec
or
or
mov
add
mov
sti
out
and
lret
mov
leave
pushl
jo
jns
jo
push
sbb
test
mov
ret
mov
add
mov
mov
fidivl
out
inc
ret
mov
mov
lret
inc
mov
mov
sarb
aad
xchg
scas
jl
out
push
pushf
lock
adc
arpl
cmp
xchg
jecxz
lods
jg
cld
outsl
or
inc
ret
cmp
ret
mov
ret
dec
ret
mov
movsl
rorb
sbb
fnstcw
xchg
mov
stos
scas
popf
inc
ret
mov
scas
test
stos
and
add
mov
cmp
fsts
out
int
cmp
xchg
ljmp
jne
xchg
addr16
ret
pushf
jle
push
test
add
mov
inc
ret
mov
aaa
adcl
mov
mov
fs
mov
cmpsl
add
cmp
add
aam
fnsave
add
mov
test
and
mov
insb
ret
add
mov
pop
and
mov
cmpb
cmp
adc
and
push
mov
adc
stos
or
hlt
test
enter
cmpsl
roll
push
popf
mov
add
mov
shll
add
dec
jg
imul
daa
lret
scas
mov
sub
mov
mov
push
repnz
daa
mulb
ret
test
cmc
icebp
loope
push
adc
test
ret
mov
adc
sahf
repnz
js
mov
mov
mov
add
sub
mov
out
inc
ret
jmp
push
and
mov
imul
mov
adc
sbb
dec
dec
test
fcmovb
xchg
dec
ret
int
ret
out
test
call
push
in
imul
movsb
test
push
xchg
pop
shrl
and
ret
lret
xchg
cmpsl
insl
test
sbb
cmp
fisttpl
add
xorl
adc
mov
popa
push
outsb
mov
sbb
adc
mov
push
out
cltd
sbb
imul
fs
mov
or
inc
sub
loope
mov
pop
adc
cmc
sbb
push
push
stos
stos
and
leave
jge
push
aam
xchg
lea
test
les
movsl
add
mov
add
test
popf
xchg
sbb
cmpsl
repz
cmp
stc
xor
sbbb
ret
jg
jle
sub
mov
fsubrs
fildll
cmp
jnp
ja
lcall
rcl
xchg
aaa
push
ror
fs
ret
dec
lcall
rol
sbb
sbb
lea
mov
roll
ret
mov
mov
sbb
cmp
jnp
xchg
mov
hlt
mov
ret
out
out
movsl
outsl
imul
in
test
pushl
imulb
call
pop
mov
jbe
orl
mov
xchg
repz
sub
mov
movsl
enter
add
rorb
mov
imul
mov
test
ret
je
jne
repz
std
jmp
jmp
mov
mov
cltd
ljmp
cmp
pop
in
aad
pusha
ret
mov
sahf
sub
imul
push
stos
pop
insl
sar
mov
mov
jnp
jbe
mov
ret
add
pop
cmp
cs
ret
mov
in
cs
sbb
out
and
mov
hlt
mov
mov
jecxz
inc
test
movsl
add
mov
add
add
add
push
mov
mov
lcall
subl
nop
shrb
ret
mov
cmc
aas
xchg
movsb
cmp
sub
mov
sub
mov
sub
add
mov
add
rcll
insb
ret
rcr
push
std
mov
cmp
adcb
sub
mov
in
stos
sub
mov
cmp
push
cmp
xlat
push
aas
icebp
aaa
cmc
scas
out
mov
cmp
xchg
add
dec
mov
nop
push
mov
ret
pushf
xchg
lcall
daa
adc
icebp
adc
mov
mov
test
lods
imul
nop
ja
jae
rcl
cmp
and
add
push
mov
addr16
mov
cwtl
mov
mov
inc
fs
xorb
inc
jmp
ds
sub
mov
add
je
adc
sbb
add
pushf
or
mov
mov
test
adc
imul
sbb
or
mov
imul
lcall
int3
cmp
mov
and
mov
xchg
fsts
jmp
stos
mov
push
sahf
icebp
cmp
lds
add
xchg
or
mov
ret
add
mov
adc
mov
fnstsw
mov
hlt
orb
xchg
call
cltd
in
push
shrb
sahf
cmpsl
sbb
jbe
sbbl
add
fdivrs
or
mov
imul
cs
icebp
adc
pop
or
add
inc
ret
mov
xor
mov
ret
mov
ret
mov
mov
mov
jl
sbb
mov
ja
or
mov
or
mov
or
mov
ret
bound
add
push
add
pop
and
sbbl
add
jae
jg
xor
test
fstl
test
cmp
xlat
xor
xor
jle
adc
push
add
sub
pop
xor
jb
push
cmp
ret
mov
xchg
shrl
cmc
test
outsb
pop
and
mov
and
add
repnz
mov
push
in
in
cmp
or
mov
mov
ret
cwtl
sbb
push
cltd
sub
mov
test
in
call
leave
test
add
pop
js
test
nop
daa
aam
cs
pop
scas
sub
mov
cmp
and
sub
nop
xchg
xchg
cltd
fistl
jno
xchg
cld
cmp
shll
mov
push
pop
jne
mov
mov
imul
jnp
mov
negb
lods
lods
jne
inc
ret
mov
jle
ret
adc
aaa
aas
cs
lock
int
add
scas
repnz
sub
mov
fdivr
add
in
dec
dec
andb
mov
fpatan
fdivs
bound
ret
hlt
mov
ret
mov
fwait
call
mov
inc
ja
call
lcall
movsl
or
mov
inc
ret
lahf
jne
test
jge
cmp
xchg
out
lds
push
int3
jecxz
jno
movsb
add
mov
adc
xchg
xchg
addl
cltd
push
push
mov
and
int3
pop
mov
dec
ret
aaa
leave
add
jle
rcll
inc
pop
xor
lods
icebp
inc
inc
ret
mov
outsb
dec
mov
ret
mov
jmp
daa
jmp
adc
add
cld
rclb
iret
dec
subb
ss
mov
stos
add
add
dec
movsb
insl
inc
inc
mov
rcrb
dec
sbb
or
test
ja
ljmp
pop
ficomps
jno
cmp
pusha
ret
jl
lds
les
scas
shlb
or
mov
xor
push
sub
xlat
dec
add
mov
ret
mov
add
mov
mov
in
cmc
les
scas
sahf
sbb
add
ret
jo
imul
movsl
jmp
add
mov
aam
aas
cmp
sub
mov
negl
xchg
in
imul
lcall
rcll
mov
add
mov
or
hlt
push
lret
pop
imul
adc
pop
daa
adc
mov
pop
je
imul
add
pop
mov
sub
mov
push
push
mov
sbb
psrlq
jno
sub
mov
sub
jno
test
mov
add
mov
dec
je
pusha
ret
mov
push
in
inc
pop
hlt
daa
pop
mov
aad
cmpsb
jo
aas
adcb
ret
xchg
pusha
ret
mov
imul
jl
add
mov
leave
jmp
or
mov
pop
out
leave
popf
mov
add
or
mov
pop
dec
sbbl
test
mov
or
testl
add
adc
nop
mov
repz
adc
xor
ret
mov
lods
mov
cs
lcall
hlt
sbb
push
fwait
rorl
mov
lods
mov
das
test
ret
mov
outsb
out
daa
mov
or
add
mov
ret
mov
es
shlb
sarb
in
jno
inc
ret
test
ret
mov
cmp
out
and
jmp
mov
add
mov
mov
push
pop
sbb
add
inc
ret
mov
lds
sahf
lods
mov
shll
mov
scas
popf
stos
cmpsb
inc
xlat
pusha
ret
mov
add
add
ret
mov
sar
pop
lea
push
xor
sbb
pusha
ret
mov
shlb
xchg
mov
cmpsl
push
dec
inc
dec
ret
cld
in
test
mov
push
push
jmp
and
mov
mov
inc
cmp
mov
dec
jmp
roll
pop
pop
fnstcw
sahf
or
lods
loop
ret
mov
mov
jp
ret
mov
or
sahf
lea
xchg
xchg
popa
mov
dec
pop
push
sub
cli
cmp
mov
sahf
xor
pop
int
or
fucomp
jno
call
add
sar
das
pop
mov
mov
mov
ret
sbb
ret
jo
repz
adc
mov
and
popa
clc
scas
mov
mov
aam
lock
mov
out
adc
xorl
add
mov
jp
pop
jb
aas
or
mov
mov
stc
in
fs
mov
inc
ret
mov
sbb
ficomps
lret
out
jno
fsubl
jbe
fcomps
xchg
std
xchg
mov
adc
adc
sahf
sub
jbe
lods
rorl
pop
dec
ret
mov
add
leave
shl
or
leave
sbb
test
mov
mov
je,pn
jae
jns
movsl
push
xchg
mov
push
and
jp
mov
sub
lods
or
outsl
test
push
call
pop
pop
lock
push
sbb
inc
loopne
rclb
mov
mov
lret
and
and
adc
add
and
mov
sbb
xor
stc
inc
xor
jo
daa
sub
inc
and
mov
pushf
bound
out
push
add
divb
stc
cs
lods
mov
bound
shrl
ret
pop
loope
mov
pop
mov
xor
adc
xchg
out
out
inc
mov
daa
add
mov
push
popf
clc
in
test
shrl
mov
dec
pop
insb
ret
mov
cmp
xchg
nop
scas
and
mov
push
ljmp
mov
dec
pop
jno
dec
mov
adc
push
xchg
mov
div
test
mov
pop
or
jge
out
push
mov
leave
lret
mov
jae
push
add
sti
mov
push
repnz
fwait
or
xchg
xchg
jae
sbb
fiadds
aad
cmp
fisttps
es
or
mov
icebp
sbb
dec
hlt
out
nop
mov
mul
clc
sbb
ss
negl
ret
mov
sub
jnp
xor
inc
into
sub
lock
ret
sub
mov
ret
sarb
pop
push
pop
push
mov
mov
mov
testb
push
mov
inc
test
iret
inc
ret
in
movsb
dec
hlt
jge
inc
imul
mov
xlat
adc
and
fisubrs
into
movsl
loop
inc
pop
mov
outsb
inc
pop
in
or
mov
pushf
xor
mov
cli
sbb
iret
cld
movsb
inc
test
lds
pushf
inc
pushf
pusha
ret
sbbb
ret
mov
daa
mov
mov
ffree
xchg
cs
ret
mov
popa
into
mull
adc
dec
das
int3
jno
or
mov
xchg
sub
mov
or
mov
ret
mov
frstor
mov
add
sub
mov
jae
xchg
add
dec
pop
into
push
push
mov
adc
adc
shlb
insb
ret
mov
xchg
shlb
xchg
insl
sbb
push
push
sbb
cmpsl
push
inc
push
or
mov
mov
sbb
add
loop
pop
jns
call
inc
sbb
sti
out
sbb
jp
loop
cli
call
ret
mov
add
jnp
ret
daa
mov
push
popf
jb
and
adc
clc
push
xchg
push
jno
cmc
push
xchg
inc
ret
mov
les
cmp
xor
ret
mov
cltd
xchg
xchg
iret
call
xchg
or
sbb
sub
sbb
nop
ds
lcall
nop
dec
in
ja
xchg
stos
dec
push
xor
push
mov
or
mov
add
and
jno
loopne
jmp
and
out
jl
or
dec
adc
loopne
cli
dec
lds
loop
adc
cmp
fdivrs
stos
sbb
pop
add
int
in
and
and
or
mov
mov
xchg
fsubrp
inc
push
mov
test
jmp
add
pop
or
xor
sub
sub
cmp
ret
pop
loope
pop
sbb
mov
xor
sbb
xor
sahf
mov
sbb
insb
ret
movsb
add
ret
ljmp
pop
xchg
stos
xor
sbb
cld
mov
icebp
push
add
mov
adc
mov
mov
movsl
adc
or
sub
dec
ret
into
push
adc
mov
dec
jecxz
fs
lods
inc
ret
mov
jecxz
into
fnstenv
flds
ljmp
dec
aas
inc
nop
std
xor
mov
aaa
xlat
jmp
ret
mov
mov
pop
push
mov
pop
into
pop
mov
cli
jle
nop
aad
fs
jp
scas
adc
xchg
mov
adc
pop
popf
js
lock
sbb
add
push
inc
ret
pop
or
mov
or
mov
push
add
add
mov
fdivrl
jnp
push
and
mov
pop
dec
jle
inc
ret
std
mov
mov
stos
add
ret
mov
popa
pop
pop
sbb
cli
test
aaa
les
ret
cmpsb
xor
mov
mov
lea
sub
out
sahf
push
jo,pn
int3
adc
incl
cmpsb
sti
fadds
xchg
jns
and
mov
pop
movsb
adc
and
fcmovb
or
jecxz
sub
mov
in
sub
movsl
stc
jbe
xchg
adc
scas
sbb
aad
cltd
mov
sarb
idiv
bound
cmpsb
mov
lods
push
and
test
inc
ret
jmp
mov
cmpsl
out
les
xor
ret
daa
dec
inc
ret
mov
pop
push
sbb
cmpsb
lahf
mov
ret
push
dec
mov
mov
jne
inc
stos
ret
js
ret
and
or
mov
inc
ret
mov
std
lret
and
rol
jp
xor
ret
sbb
mov
mov
cs
xchg
jns
push
lds
add
lods
in
inc
ret
mov
scas
lea
add
mov
mov
cmp
jb
add
add
xchg
icebp
lock
lea
mov
adc
xorl
dec
ret
sahf
or
call
sbb
jns
bound
pop
push
jbe
mov
dec
or
lods
das
jge
cmpsb
fimuls
sbb
lds
push
jno
in
sub
mov
mov
jo
fldcw
mov
jno
sar
rorb
enter
cmpsb
in
add
add
push
lds
lret
jae
hlt
adc
jno
fisttpll
xchg
in
or
and
aad
fmulp
mov
and
arpl
add
mov
ret
mov
add
mov
lcall
sbb
cmp
test
pop
bound
mov
addb
iret
lods
xor
push
adc
lods
sub
lock
ret
mov
clc
mov
jnp
pop
pop
push
into
mov
dec
cs
ret
fwait
out
loopne
mov
movl
pop
cld
in
add
ret
cwtl
stc
in
inc
push
mov
imul
lret
mov
or
push
push
jl
orb
adc
nop
jns
push
cmp
sahf
push
mov
addr16
xchg
xlat
fidivrl
fisubl
xchg
dec
lahf
jle
xor
mov
pop
ss
movsl
mov
mov
xchg
rcr
xchg
mov
sbb
mov
sbb
scas
mov
cld
xchg
in
lods
movsb
mov
loopne
ror
mov
jno
xchg
push
dec
cmp
sti
pop
mov
cmp
sub
fadds
mov
and
and
das
repz
daa
xor
adc
shll
xchg
outsl
fs
mov
inc
filds
ret
mov
inc
or
mov
or
xchg
push
lret
jns
into
dec
pop
repz
mov
icebp
fbstp
or
ret
mov
cmp
outsl
rcr
out
lds
sbb
aam
aaa
stos
push
mov
sbb
add
sahf
pop
jnp,pn
pop
mulb
in
jns
mov
ds
int3
shlb
repz
dec
pop
dec
xorl
mov
cmp
dec
ret
mov
fistl
pop
sbb
mov
xchg
ljmp
movsb
filds
ret
ja
das
pusha
ret
mov
mov
popf
rol
aaa
mov
add
sbbb
mov
test
loop
adc
xor
imul
fldenv
negl
mov
and
mov
pop
inc
ret
push
das
inc
push
sub
stos
repz
rclb
ss
les
jnp
rorb
mov
neg
sbb
mov
stos
push
xchg
aad
inc
ret
mov
mov
jae
xchg
nop
mov
dec
ret
xor
push
mov
dec
sub
into
idivb
lds
ja
sub
outsl
xor
mov
fnstenv
lods
inc
ss
lods
sbb
mov
jb
mov
sar
inc
dec
ret
adc
adc
xor
lahf
loopne
int
gs
cs
xchg
inc
pop
jmp
mov
add
push
or
cltd
loopne
mov
outsl
nop
mov
push
dec
xchg
jo
je
xlat
mov
ret
mov
adc
scas
sahf
cltd
fbld
cmp
sti
xchg
insl
iret
fstpt
ret
mov
ja
jl
or
std
pop
nop
stos
adc
jmp
dec
ja
dec
xlat
add
mov
into
outsb
call
jne
mov
adc
cld
shlb
stos
mov
aam
ljmp
mov
shl
fisubrl
add
mov
sti
std
jb
jo
jl
int
xchg
ret
jb
jne
sti
stos
leave
les
cld
pop
fidivs
add
ret
mov
mov
inc
ret
movsb
push
shll
rorb
mov
add
dec
ret
dec
xchg
or
mov
mov
add
jnp
stc
xchg
xor
frstor
enter
les
push
mov
push
xchg
divb
mov
adc
push
ljmp
ret
int
xor
mov
enter
sub
push
ljmp
pushf
xchg
ja
ss
je
in
out
jge
ret
idivb
xor
scas
fsub
lcall
xchg
int3
inc
xchg
sar
add
mov
mov
xchg
add
mov
push
push
frstpm(287
push
cwtl
pushf
mov
jle
xchg
adc
xlat
pusha
ret
mov
mov
dec
bound
or
pop
cmp
imul
das
sbb
mov
movsl
add
pop
cmc
dec
pusha
ret
mov
ret
mov
lcall
jno
sbb
cmp
mov
sub
mov
aam
xor
aas
mov
inc
ret
mov
inc
pop
dec
ret
inc
cmpsl
sub
mov
jbe
test
mov
mov
dec
jecxz
nop
das
pusha
ret
int
jp
and
mov
loop
enter
push
jecxz
and
mov
mov
or
mov
ret
enter
ds
gs
scas
cmpsb
std
iret
dec
ret
jno
mov
xchg
or
inc
fstpt
add
sahf
fdivs
fmuls
cmpsl
sub
roll
mov
sub
mov
shll
add
xchg
mov
xor
add
out
dec
xchg
mov
jb
ret
fs
xchg
mov
push
icebp
pop
shrb
add
fwait
adc
fisubl
dec
cvtpi2ps
sub
outsl
sub
rorl
jne
or
lcall
mov
std
add
mov
pop
xchg
mov
lcall
enter
adc
fidivs
jmp
ret
mov
xor
out
dec
mov
jp
mov
lcall
outsl
test
mov
jno
or
inc
movsl
mov
les
iret
adc
ret
ja
or
mov
popa
adc
fistl
mul
mov
mov
push
sbb
push
xchg
jg
ret
mov
cmp
insl
addb
add
mov
mov
out
jbe
push
add
mov
pushf
lods
xlat
jne
add
mov
rcrl
push
push
mov
ret
mov
mov
loope
call
jl
mov
pop
sub
mov
xor
ret
mov
mov
outsb
icebp
sbb
sbb
mov
pop
stc
ja
cld
push
loopne
cmp
popf
outsb
lret
ret
pop
mov
subb
leave
pop
in
movsl
inc
ret
mov
dec
ret
mov
mov
das
imul
inc
mov
ret
fnsave
fstps
aas
pop
mov
mov
adc
pop
mov
inc
ret
fcoms
add
stos
enter
sbb
mov
mov
push
gs
ret
mov
mov
push
rcl
or
xor
add
mov
ret
mov
or
mov
stc
inc
add
mov
fcmovnbe
out
push
cmp
xor
ficompl
pop
mov
jb
call
add
xor
fstps
outsl
sti
fsubr
sahf
push
daa
insb
ret
ja
or
in
mov
repz
mov
dec
ret
or
jp
xor
add
xchg
enter
sbb
sbb
or
ret
lret
cmpsl
adc
push
mov
aam
ljmp
ret
mov
pop
jae
ret
adc
inc
xor
ret
jns
loopne
pop
xchg
insb
ret
mov
lret
lahf
lea
out
in
and
mov
aas
xchg
loope
fmuls
add
lahf
stos
mov
push
jb
fistl
lods
mov
xor
js
fcomp
push
jecxz
add
mov
add
imul
lods
shrl
mov
das
out
push
fldenv
adc
orb
icebp
icebp
jb
push
sub
mov
fs
mov
mov
test
icebp
mov
les
pushf
repz
shll
xor
dec
fcomps
incl
ret
mov
add
mov
xor
mov
cmc
in
sahf
add
out
xchg
push
sub
imul
aas
out
inc
nop
cs
aas
cs
mov
int
cmp
pop
cmpsb
mov
xchg
jle
inc
iret
fs
test
mov
lock
dec
pop
mov
arpl
push
inc
repz
jae
mull
add
add
mov
inc
ret
mov
leave
xor
mov
sbb
mov
jns
adc
mov
ficoms
lcall
sub
pushf
xor
ret
inc
jp
xchg
push
dec
mov
loop
jecxz
sub
mov
mov
xor
gs
and
sub
sbb
dec
jle
or
mov
jg
out
imul
in
ret
sub
pop
sti
pop
xchg
shrl
add
pop
aas
adc
ret
mov
outsb
pop
insb
ret
mov
orb
xchg
scas
xchg
loopne
cmp
fildl
add
mov
add
add
adc
push
out
ret
jno
outsl
insl
pop
mov
jno
mov
add
mov
cli
add
in
mov
push
imul
push
aas
xchg
jle
jg
dec
add
js
ret
in
insb
ret
mov
mov
pop
cmc
jbe
mov
lahf
mulb
add
mov
and
jmp
dec
cs
mov
icebp
insb
ret
mov
add
or
movsl
cltd
out
pop
mov
in
mov
pusha
ret
xor
or
mov
inc
ja
sahf
dec
add
add
subb
test
pop
lea
xchg
orps
pop
jb
mov
outsl
inc
mov
xchg
push
and
enter
and
mov
pop
sub
and
mov
lahf
jecxz
ret
mov
popl
add
cs
mov
cmpsl
jbe
push
jl
sbb
cmpsl
sub
mov
add
les
dec
icebp
xchg
neg
or
lods
or
stos
jbe
mov
cmp
lods
inc
test
xlat
lock
rorb
jmp
mov
inc
jl
fstl
cmp
xor
and
mov
scas
loopne
adc
dec
pop
stc
test
mov
cli
test
mov
call
mov
cltd
lods
jmp
lret
sti
jb
stos
jb
out
lret
lcall
int
sub
aaa
outsl
test
loop
int
and
fcomps
jge
cmc
shlb
jge
dec
outsb
mov
pop
pop
mov
shrl
push
ret
mov
ja
loopew
mov
add
mov
sub
mov
pusha
ret
mov
test
outsb
push
int
ja
daa
xchg
fsts
sti
lahf
sbb
inc
into
mov
mov
mov
mov
xor
jg
pop
or
mov
pushf
mov
xchg
lds
mov
mov
xchg
cmpsb
mov
mov
push
sti
mov
ret
mov
jg
data16
leave
and
aas
sub
movsb
push
adc
push
out
inc
ret
inc
xchg
add
push
xlat
ja
and
mov
ret
mov
test
sub
test
out
aas
rcl
enter
xchg
mov
cmp
shrb
mov
xchg
loopne
push
rcr
mov
fld
test
xor
out
jl
lret
cmp
add
dec
aas
pop
pop
push
shrl
add
outsl
lcall
dec
cltd
enter
adcb
xor
ret
lods
inc
and
stc
xchg
andl
mov
jg
scas
xorb
test
mov
adc
cmpsl
ds
xlat
push
mov
mov
adc
lahf
or
dec
loop
lea
sub
mov
roll
je
outsl
mov
sbb
cmp
dec
adcb
data16
popf
decl
ret
std
dec
cmc
add
sub
mov
std
hlt
xor
and
mov
mov
out
push
inc
mov
push
repnz
mov
xor
fisubrl
mov
aaa
mov
jmp
aam
cmp
ljmp
and
fsin
out
adc
mov
pushf
cmp
ret
mov
mov
out
outsl
popf
fisttps
inc
ret
mov
fcmove
sbb
dec
inc
ret
ret
mov
or
ret
ds
and
mov
add
add
jl
push
in
jne
shr
ss
mov
insb
ret
mov
nop
mov
ret
rcr
dec
cltd
repz
mov
loopne
in
lods
jmp
or
mov
stos
pop
lea
add
mov
mov
dec
pop
rorl
cmp
inc
xchg
daa
es
push
xchg
push
fstl
lret
ret
nop
icebp
lret
ss
ret
push
push
pop
sub
rclb
xchg
xchg
testl
sbb
fistpll
jp
inc
ret
mov
xchg
xor
cmpsb
mov
dec
fnstcw
mov
xchg
xlat
or
mov
add
mov
and
push
mov
aas
sbb
rcll
ss
push
jno
fcoml
pushf
and
mov
in
sub
out
mov
push
daa
aas
dec
add
mov
add
add
xor
push
push
cmp
cmpsb
pop
lock
out
mov
incb
loope
pop
adc
and
dec
ret
jbe
test
movsb
sub
nop
cwtl
aam
push
dec
ret
mov
mov
mov
push
inc
fwait
out
sub
jmp
rcl
scas
dec
lods
jle
orl
mov
imul
add
mov
lcall
adc
pop
ss
mov
mov
shrd
sub
or
add
sub
cmp
and
sbb
leave
push
enter
popa
push
inc
ret
mov
mov
enter
fistl
xlat
js
mov
je
ret
xchg
in
rcrl
fimull
push
jecxz
add
mov
mov
popf
sahf
pusha
ret
mov
sbb
in
adc
add
mov
pop
aas
es
mov
jo
sbb
ja
ret
stos
mov
sbb
ret
outsl
inc
mov
test
test
loop
xchg
jo
out
cmpsb
shrl
sbb
add
jp
ljmp
pop
iret
test
or
sbb
in
xor
add
shlb
mov
mov
add
xchg
sbb
cmpsb
mov
ret
js
test
jge
nop
lcall
mov
enter
fsubp
icebp
sub
movsb
js
in
sbb
cmp
icebp
addr16
mov
mov
cs
jb
rolb
cld
cmp
ss
and
jmp
push
in
ja
ficoml
dec
ret
mov
ret
mov
add
push
int3
push
mov
mov
in
jle
imul
pop
xor
mov
pushf
sub
mov
js
ret
shll
fistpll
loop
jbe
push
add
nop
out
aas
clc
mov
aam
cmc
mov
nop
mov
adcl
ret
rorb
iret
adc
jl
ret
sti
fsubp
xor
dec
push
xchg
fcoms
jp
sbb
mov
push
pop
std
mov
add
mov
pop
inc
aaa
pushl
cli
cwtl
xchg
or
mov
ret
mov
adc
notb
pop
lahf
add
or
mov
ljmp
mov
add
clc
pop
pop
jecxz
adc
stos
test
out
sahf
sahf
push
test
xchg
mov
push
repz
add
sti
cwtl
and
sub
mov
dec
add
mov
xchg
add
push
sub
ret
mov
ret
mov
popf
leave
data16
xchg
rorb
pop
mov
pop
adc
add
mov
add
insl
mov
and
jne
addr16
xor
push
dec
ret
jge
mov
mov
in
lea
mov
pop
fwait
insl
inc
ret
movsb
sahf
aas
add
inc
cmpsb
aad
pop
dec
movl
mov
insb
ret
mov
lret
dec
xchg
sbb
sub
mov
js
dec
enter
dec
dec
ret
or
adc
ret
mov
add
cld
into
leave
mov
repnz
cmp
ss
or
test
sub
lds
add
mov
add
dec
ret
push
fldl2t
xchg
decl
test
movsl
pop
lock
leave
cld
and
sbb
repnz
dec
andb
mov
ljmp
lds
pop
sbb
jnp
add
mov
cld
mov
xchg
mov
cmp
push
mov
adc
out
add
mov
mov
xor
out
inc
leave
lods
lods
jae
mov
mov
mov
mov
in
fdivl
ret
repz
or
xor
add
adc
mov
sbb
cmp
ror
jmp
repz
and
mov
cmp
push
icebp
and
ret
out
mov
inc
dec
and
mov
bound
mov
add
sahf
icebp
fstpt
push
mov
cmc
subb
or
call
es
cs
jg
mov
mov
out
push
ret
add
xchg
mov
int
ret
fists
adc
das
add
pop
mov
neg
jae
mov
ret
movsl
shr
xor
mov
stos
mov
out
mov
jae
out
scas
or
xor
mov
aam
jne
ret
mov
xor
imul
push
add
daa
xchg
mov
insl
inc
push
sub
cli
mov
lods
push
or
cmc
cs
je
loopne
les
sbb
cmp
ret
mov
jp
sbb
add
loop
mov
fcomi
dec
inc
ret
mov
shr
cmp
push
rclb
adc
jnp
xchg
ret
call
jge
cs
les
daa
cmpsl
fbstp
add
cmpsb
mov
fdivp
pop
sub
jnp
adc
and
les
xchg
adc
pop
leave
lods
divl
fisttpll
jle
lcall
or
mov
imul
scas
sti
pop
shrb
add
popa
in
fwait
bound
fwait
aas
vprotq
inc
ret
mov
rolb
mov
sbb
xor
inc
ret
fsubrl
icebp
out
push
lods
jno
jmp
inc
rorl
or
into
adcl
xor
ret
xchg
jns
jl
cmp
pop
xlat
dec
test
push
xchg
adc
loop
stos
lret
and
add
inc
popa
mov
mov
add
dec
in
and
mov
nop
call
jno
ret
mov
sahf
int3
and
xor
sbb
ret
insl
cld
ret
jge
xchg
scas
loop
sbb
jnp
sub
rclb
mov
or
call
cmp
lahf
nop
ds
add
ret
mov
mov
cmpsb
scas
stc
xor
in
push
mov
add
lock
mov
fld
lret
loopne
aad
xor
xorl
fadd
test
jbe
mov
jb
aam
and
lods
mov
pop
cmpsb
mov
sub
mov
fldl
mov
push
or
jae
daa
inc
je
cmp
jae
mov
jp
ljmp
imull
std
je
ljmp
bound
ret
pop
jge
dec
cmp
addr16
or
push
cmpsb
push
out
cmp
cmpsl
jb
inc
dec
dec
add
jo
jo
add
add
mov
filds
ret
cli
mov
cmp
or
arpl
out
jns
repz
lcall
out
xchg
scas
int
ret
test
dec
ret
mov
in
push
and
loope
imul
dec
aas
sbb
popa
cs
mov
jnp
push
aas
mov
jle
cmp
test
adc
lods
ret
mov
ret
mov
lcall
int3
or
ret
mov
mov
cmpsb
pop
scas
jmp
jl
addl
and
mov
ja
or
pop
dec
ret
jp
cwtl
je
or
inc
ret
jae
or
mov
data16
rcl
mov
ficoms
ret
ret
xorl
aam
pop
dec
adc
push
addl
add
mov
in
jmp
ja
gs
mov
jg
fs
xor
sbb
hlt
hlt
insb
ret
mov
jnp
in
je
push
fdivl
ret
push
sub
or
mov
jae
cmpsl
xchg
int3
jge
inc
fdivrs
mov
ret
xchg
subb
out
add
in
xchg
jmp
cwtl
repnz
cld
xchg
es
enter
outsl
add
mov
jb
mov
mov
je
bound
ja
fcoms
mov
lock
lcall
lahf
fidivrs
inc
mov
mov
mov
push
rep
xchg
adc
cmpsl
inc
xor
mov
movb
sub
mov
rcrl
xchg
sbb
xor
pushl
mov
mov
jg
inc
dec
ret
mov
sub
mov
inc
pushf
testb
test
popa
mov
std
and
dec
mov
mov
mov
ret
mov
fildll
mov
mov
push
in
imul
mov
pop
in
ret
cli
jns
cmpsb
test
pusha
ret
mov
popa
dec
adc
add
ret
mov
mov
push
sbb
mov
es
repz
cmp
retw
cmc
mul
mov
mov
dec
leave
sub
mov
cmpl
xchg
xor
lret
lds
mov
and
mov
mov
ret
cld
test
negl
add
pop
jns
outsl
jae
jmp
popf
xchg
es
ds
not
cmp
sbb
dec
jae
out
push
movsl
fldenv
testb
pop
out
das
mov
or
mov
ret
mov
ret
mov
popa
into
gs
adc
add
cmpsb
out
inc
popf
xor
lock
or
mov
xchg
lcall
pop
sub
add
mov
fcomi
cmp
leave
xor
pop
add
add
push
rorb
mov
in
cltd
xor
mov
add
repnz
or
mov
jmp
int
add
lcall
daa
hlt
lock
gs
cmp
pop
mov
loopne
pop
sub
rcll
rcrl
jle
add
mov
mov
mov
push
sar
push
jg
enter
mov
sbb
mov
xchg
mov
test
or
mov
mov
cmp
in
xor
nop
ret
mov
fcmovnbe
push
ficompl
ret
mov
cmp
xor
xlat
mov
inc
ret
imull
mov
ret
mov
inc
ret
mov
push
mov
test
adc
icebp
imulb
mov
jmp
inc
adc
xchg
sti
clc
mov
imul
jle
loop
ret
mov
aad
fistpl
adcb
arpl
mov
mov
and
loopne
rcrb
dec
sbb
push
leave
les
ja
imul
pop
inc
int3
mov
push
xor
aad
sbb
fdivs
mov
cmp
inc
pop
int3
hlt
xor
testb
leave
mov
push
xor
mov
icebp
pusha
ret
mov
mov
add
in
outsb
out
sbb
ret
mov
lcall
cld
lret
stc
mov
mov
mov
clc
cmpsl
lods
pop
and
fcoms
inc
ret
mov
or
mov
ret
mov
adc
push
ss
fucom
insb
ret
bound
inc
aam
inc
jo
mov
sbb
sarl
push
int
add
insb
ret
mov
popf
cli
jl
push
hlt
imul
test
addl
xchg
addr16
decl
dec
popa
lods
gs
pusha
ret
mov
push
add
mov
jmp
clc
das
test
and
mov
ret
sbb
jmp
test
shll
rorl
pop
adc
fcmovbe
das
xchg
cmp
dec
arpl
rolb
xchg
push
and
mov
push
dec
aad
xchg
aas
sti
push
out
out
bound
mov
push
xchg
sahf
pop
add
lock
pusha
ret
mov
fmul
cwtl
cs
mov
mov
pop
idivb
push
inc
aad
loope
insb
ret
mov
lock
inc
cmp
adc
aaa
mov
ror
and
test
fnstsw
dec
dec
fsts
mov
mov
adc
inc
and
pop
sbb
xchg
idivl
mov
dec
inc
jne
and
out
fs
cwtl
fs
popf
inc
xor
popa
add
mov
mov
outsl
xorb
sbb
pop
lcall
ret
mov
and
mov
mov
mov
push
xchg
aam
lods
test
ret
mov
and
bound
pushf
leave
pop
push
push
daa
push
pop
das
stos
movb
mov
jne
xor
mov
dec
pop
roll
arpl
push
mov
bound
sbb
xchg
push
mov
pop
sub
or
mov
fs
sarl
pop
incl
dec
mov
cmp
and
pop
xchg
leave
xchg
mov
push
xor
jb,pn
je
mov
mov
int
dec
int
int
sbb
add
sub
stos
lea
loop
call
mov
cs
or
mov
prefetchnta
sub
mov
xchg
insl
rcll
test
pop
cwtl
xor
popf
and
mov
or
mov
cmp
sti
out
stos
inc
ret
cwtl
outsb
push
jne
sub
std
and
ret
sbb
push
repz
jp
jle
jle
ljmp
cmp
and
mov
loope
mov
cmpb
mov
jl
adc
scas
imul
mov
adc
jb
ret
mov
sti
lret
mov
ret
mov
xchg
incb
cmp
sbb
popf
jae
loop
push
cmovns
sub
lret
xor
cld
xchg
dec
aad
inc
xor
adcb
int
andl
mov
loop
test
ret
jle
insl
aas
adc
test
mov
add
pop
mov
stos
push
pop
loopne
inc
ret
push
push
in
iret
je
ss
and
ret
mov
inc
dec
xchg
or
shrb
sub
push
sbb
sbb
sbb
adc
es
mov
pushf
mov
mov
mov
and
add
repnz
sahf
and
arpl
leave
mov
or
pusha
ret
sub
mov
add
mov
ficoml
ret
mov
xchg
imul
mov
cmp
jo
sbb
jl
cmp
push
dec
or
mov
inc
jge
ret
mov
sbb
inc
jl
push
pop
std
and
mov
iret
rcl
sub
leave
xchg
pop
xchg
cld
fistl
push
dec
ret
mov
xchg
mov
and
jmp
xor
out
cmc
dec
sub
fisttps
andl
dec
push
jnp
xor
xchg
scas
shrl
or
fs
inc
mov
add
movsb
addl
mov
ret
mov
sub
mov
xlat
rcrl
ret
mov
in
out
or
icebp
dec
cmp
popa
lahf
repz
xor
ss
push
jp
push
addl
mov
jl
mov
or
inc
mov
xor
lcall
and
mov
mov
sub
pop
push
push
inc
or
mov
push
mov
sub
sub
dec
ret
inc
bnd
popf
push
jae
push
mov
test
rcr
addr16
jnp
ret
out
stos
and
bound
mov
sbb
jbe
add
lret
outsl
lock
mov
add
mov
push
test
jnp
adc
mov
lods
pusha
ret
aam
cli
std
dec
dec
xchg
jns
dec
sub
mov
pop
icebp
dec
cmp
js
aam
and
mov
sub
lods
movl
inc
ret
out
insb
ret
mov
mov
push
daa
mov
inc
mov
data16
jle
scas
in
mov
mov
lcall
clc
bound
dec
ret
mov
xchg
xor
mov
ret
fcmovnb
iret
int
inc
insl
icebp
aaa
adc
ljmp
daa
mov
add
jb
sub
mov
dec
ret
icebp
and
add
inc
jae
adc
into
dec
ret
pop
xchg
push
iret
jo
add
cld
jl
add
mov
mov
cld
pop
lods
sub
mov
dec
mov
sub
mov
cmp
add
push
unpckhps
jmp
stos
mov
push
lcall
xor
bound
cmp
repz
jecxz
push
cmpsl
xor
sub
mov
cs
adc
xlat
filds
clc
jb
ret
mov
pop
sbb
jp
ret
mov
ret
mov
outsb
movsb
xchg
sbb
push
mov
add
mov
imul
in
dec
mov
cmpsb
imul
jo
cs
jae
fiaddl
notb
ret
out
bound
out
ret
mov
fisubl
add
out
fucom
in
add
mov
add
jmp
add
mov
xor
add
push
adc
xorl
in
mov
push
mov
mov
mov
mov
lods
adc
or
ret
or
aam
sub
ss
add
sbb
gs
sarb
mov
nop
mov
fstps
loop
sub
sub
jo
ret
jnp
ficomps
ja
shlb
call
scas
pop
iret
hlt
shl
jns
test
mov
inc
test
int
insb
ret
mov
add
push
xchg
sub
enter
pop
outsl
dec
pop
jns
ret
mov
mov
xor
and
mov
clc
nop
and
arpl
sub
mov
add
adc
sub
add
mov
ret
xlat
repz
test
mov
and
fs
mov
add
gs
pop
add
ds
mov
mov
push
addl
icebp
cmp
add
lahf
xchg
xchg
pop
movsb
push
inc
push
clc
out
iret
inc
ret
mov
and
add
loopne
pop
jle
xchg
testl
jb
mov
mov
mov
ja
insl
popa
call
xor
jle
cmp
ret
dec
ret
icebp
mov
lock
or
mov
outsb
push
dec
into
je
and
mov
out
rol
xchg
mov
jbe
mov
push
pop
jl
inc
and
mov
pop
mov
fnstcw
pop
repnz
push
pop
cmp
mov
xchg
mov
inc
dec
out
cmp
and
fs
out
dec
pop
les
jmp
das
shl
outsb
push
push
fistpl
cwtl
push
arpl
push
sbb
add
or
mov
insb
ret
mov
pop
jge
jecxz
ret
mov
xchg
mov
hlt
mov
push
ret
sbb
inc
daa
movsb
dec
js
inc
add
add
mov
shll
mov
or
hlt
push
shlb
and
pop
or
ret
mov
cmpl
add
mov
icebp
pop
sbb
mov
and
mov
dec
adc
ret
sbbl
xchg
ljmp
ja
cmp
in
cltd
test
cmp
pop
lods
and
lret
push
shlb
or
mov
hlt
dec
ret
ret
rclb
ficomps
arpl
outsb
jmp
add
scas
pop
out
mov
ret
and
xchg
out
mov
daa
shlb
aam
jnp
adc
shrl
loop
shlb
ret
data16
push
jnp
je
stos
jo
out
mov
ret
faddl
dec
ret
pop
les
sub
mov
cmp
jecxz
mov
loope
ret
sbb
dec
sub
ret
cli
mov
jne
push
xor
cmpsb
test
ss
xor
add
rol
out
and
mov
mov
xchg
ja
add
nop
mov
xchg
test
je
xchg
lods
xchg
push
jecxz
mov
rorb
mov
inc
add
mov
sub
sub
add
and
ret
les
pop
cwtl
lahf
add
mov
ret
xor
inc
testl
add
fisttps
cs
adc
rcl
xchg
dec
movsl
ljmp
mov
js
ss
cmp
pop
push
push
cltd
lods
inc
inc
sbb
shll
jl
in
pop
jbe
mov
fdivp
xchg
pop
and
add
cmp
cmpsb
push
lods
jmp
sbb
ret
mov
cmp
push
dec
ret
mov
sub
sub
mov
scas
imul
ret
mov
out
jae
fsubrs
cmp
mov
pop
sbb
aas
mov
add
hlt
fs
fnstsw
iret
pop
or
insb
ret
mov
or
mov
ret
dec
iret
sarb
shlb
fmulp
movsl
or
push
iret
push
popa
lea
mov
leave
test
xlat
test
orb
ljmp
rclb
scas
pop
movzwl
mov
xchg
ja
xchg
and
mov
cmp
shrl
and
dec
ret
lcall
mov
lods
xchg
stos
fiadds
loope
mov
and
mov
lret
test
jl
mov
das
fiaddl
and
xchg
xchg
leave
pop
enter
add
scas
mov
mov
mov
add
cmp
ret
and
rcll
test
jne
sub
mov
ret
mov
mov
data16
es
ja
ret
mov
dec
ret
pusha
ret
mov
add
adc
ret
ljmp
push
aaa
aam
cld
in
cmp
out
sbb
push
and
mov
ret
cmp
mov
dec
inc
movsl
iret
cmp
inc
ret
adc
dec
sbb
stos
or
int3
or
shll
add
dec
ljmp
cli
mov
lock
sbb
xor
pop
scas
sub
mov
out
inc
das
mov
cli
push
fcom
inc
mov
outsb
push
pusha
ret
mov
push
popf
sar
fimull
mov
ret
mov
jnp
jmp
cmp
push
add
jae
adc
in
es
push
mov
mov
insb
ret
fs
scas
ja
in
inc
ret
iret
sbb
roll
in
ret
mov
jge
movsb
stc
add
ret
mov
mov
mov
loope
fists
ret
sub
mov
jb
ret
sub
ret
scas
enter
ret
mov
mov
add
xchg
lds
sahf
push
add
mov
push
mov
lods
shlb
xor
add
lret
lret
inc
loop
and
mov
ret
or
pop
and
mov
push
adc
out
pop
jnp
shll
clc
lods
jne
ret
push
idiv
cwtl
loop
push
stos
ja
dec
cmp
xchg
call
imul
testl
inc
mov
xchg
shll
jns
sbb
add
sbb
dec
ret
jge
push
mov
jb
out
mov
orl
add
mov
mov
ret
scas
lret
shrb
ss
in
cmp
ret
icebp
loopne
push
lcall
push
stc
fsubl
push
mov
or
mov
sub
mov
mov
sbb
int3
in
adcl
xchg
es
clc
dec
ret
cmp
xchg
sub
mov
bswap
je
scas
gs
data16
push
or
cs
mov
sbb
and
decb
fs
xor
jno
sub
mov
sarb
adc
and
mov
mov
mov
pop
inc
shl
stc
in
stc
cmp
test
dec
jmp
cmp
lods
inc
jle
inc
ret
mov
cli
xor
xchg
mov
or
out
push
sub
mov
pushl
leave
dec
ret
int
int3
aam
dec
ret
and
mov
mov
push
ss
lret
push
insl
cmp
call
das
shrb
cmp
push
fists
mov
ffree
iret
mov
push
add
dec
out
fistl
push
jecxz
ja
int
test
lock
cld
add
mov
cmpsl
xchg
add
mov
xor
inc
ret
mov
psubsw
ret
or
adc
in
jge
flds
inc
mov
jp,pt
aam
sbb
aam
cs
jg
cld
out
lods
adc
lea
xor
mov
data16
pop
fldcw
ljmp
in
jno
jbe
cld
imul
mov
hlt
mov
or
mov
ret
mov
and
das
ret
insb
ret
push
cs
mov
xchg
jbe
and
mov
leave
ret
sub
mov
sub
je
mov
insb
ret
mov
pop
nop
sti
lods
test
xorl
dec
popf
add
add
movsb
mov
add
add
je
pushf
and
jge
ljmp
pop
stos
add
mov
xor
into
test
jmp
xorb
rorb
cs
sbbl
ret
mov
fdivrs
fnsave
jp
rcll
pop
mov
out
in
cmp
adc
test
lret
scas
jo
outsb
mov
dec
movsl
cmp
cmp
and
xchg
lods
lret
mov
mov
xchg
stos
subl
mov
inc
and
das
cli
roll
mov
xor
add
add
cmc
xor
cmpsb
inc
add
mov
shll
adc
and
dec
mov
dec
into
stos
sbb
ret
insl
add
sbb
fsubrs
sub
mov
sbb
aad
adc
iret
push
dec
stos
jbe
mov
fisubs
mov
ret
hlt
jle
cltd
mov
lea
cmpl
jge,pn
sbb
and
or
mov
sbb
mov
dec
test
lcall
adc
push
jo
jns
dec
xchg
xchg
inc
lock
add
in
fwait
pop
stos
inc
ret
mov
dec
ret
mov
adc
ret
pop
gs
xor
aam
addr16
pop
daa
ret
fbld
mov
in
cmp
push
rcrl
imul
cld
mov
adc
sbb
jge
dec
push
loope
fistpl
xor
mov
and
pop
dec
xor
mov
add
nop
and
sbb
ret
cmpsl
rorl
dec
ret
mov
enter
ret
dec
ret
sub
mov
push
sbb
subb
add
mov
adc
dec
mov
rcrl
int
xor
mov
es
lret
jns
cmp
dec
pushf
cmpsl
push
jp
into
iret
adc
mov
ret
shlb
ret
mov
ret
mov
ret
mov
cmpl
xor
xchg
jnp
ljmp
mov
in
lahf
rorb
cmpb
ret
mov
call
mov
je
jbe
sub
mov
ret
bound
add
mov
push
test
or
mov
add
cli
xchg
mov
cmp
lret
mov
add
test
insl
fistps
fdivrl
jl
push
jmp
and
mov
cmc
mov
dec
fwait
push
popf
sbb
ret
lods
or
add
push
test
add
mov
sub
mov
add
ret
pop
fs
mov
ret
cli
inc
ret
mov
in
clc
movsb
dec
fldcw
or
sub
xor
outsl
xchg
push
fs
mov
mov
mov
push
adc
loop
xchg
ret
ret
mov
outsl
mov
outsb
sahf
pop
push
pop
pop
push
icebp
aaa
mov
inc
xchg
daa
cmp
lods
jmp
cmp
cld
xor
mov
mov
add
xor
add
jmp
rolb
xchg
and
jbe
popl
or
ret
or
pop
divb
and
cmc
test
popf
add
ror
sub
xchg
outsb
xor
jnp
sub
mov
mov
push
testb
pop
mov
mov
aas
arpl
push
iret
aas
or
or
ret
pop
sysret
jmp
popf
push
mov
xchg
cmpsl
mov
call
mov
in
ret
ljmp
inc
je
pop
fbstp
imul
mov
jmp
es
mov
mov
iret
addr16
ret
rolb
lods
push
inc
ret
mov
loop
dec
dec
xchg
adc
mov
cmp
cmp
inc
adc
sub
mov
outsl
sub
mov
sarb
lahf
or
mov
or
mov
nop
ja
mov
or
mov
jmp
lea
pop
loopne
dec
push
xor
add
dec
ret
jbe
mov
jge
pop
jg
ss
inc
ret
int3
arpl
lea
ret
movsb
add
mov
xchg
jae
mov
cmc
sbb
jns
je
div
jo
ret
std
push
jb
pop
outsb
rcrl
ljmp
cmp
pop
jnp
lcall
mov
add
push
ret
loop
insb
ret
mov
push
mov
rcr
adc
out
push
sub
adc
gs
mov
pop
idivl
mov
cld
fstl
inc
insb
ret
add
in
pop
sarb
imul
ret
adc
jg
flds
jne
pop
fidivs
mov
mov
dec
dec
ret
and
cmp
out
ret
mov
adc
fldenv
add
adc
jecxz
ret
lods
inc
shlb
mov
fisttps
push
push
out
shlb
push
xor
cwtl
jmp
daa
pop
sub
xor
sti
inc
call
mov
aaa
das
fwait
push
nop/reserved
addr16
mov
add
cmc
jns
xlat
sub
mov
push
xorb
and
cs
lahf
mov
mov
pop
dec
ret
mov
push
sub
imul
cs
test
cli
add
mov
mov
push
jne
jmp
lret
dec
fisubrs
mov
push
cltd
in
ljmp
xor
add
xor
xchg
xchg
and
ret
push
push
movzwl
cwtl
and
mov
bound
mov
jmp
test
xchg
mov
ret
inc
rcll
cmpsb
jle
ret
mov
repnz
xor
push
out
xchg
int3
jmp
add
mov
les
mov
ret
mov
jno
out
scas
enter
mov
gs
jl
or
pop
xchg
scas
rorl
push
ds
aas
jnp
jnp
mov
test
xchg
jae
stos
and
ret
lcall
push
ud2
and
ret
das
pushf
nop
adc
pop
je
inc
std
xchg
pop
cmp
mov
adc
aas
or
imul
cmpsb
cli
add
scas
sbb
mov
xchg
je
push
and
sub
mov
imul
xchg
cld
scas
dec
ret
mov
sahf
xchg
adc
fiaddl
clc
test
aam
rol
mov
and
sti
mov
sub
and
mov
and
mov
xchg
push
mov
cmp
fmulp
pop
insb
ret
xchg
jg
jmp
and
jmp
ret
mov
pop
jbe
inc
ret
mov
mov
call
jle
adc
xor
jo
pop
jle
mov
cmp
jmp
xor
fs
mov
call
mov
testb
mov
inc
es
sub
outsb
ja
adc
mov
inc
ret
mov
jne
imul
jmp
ret
mov
les
rorb
ret
ror
icebp
mov
cwtl
fisttps
hlt
nop
xor
aas
cmpl
jne
stc
cmpsl
sbb
aas
je
jnp
mov
mov
insb
ret
mov
in
xor
mov
xchg
outsb
stos
popf
call
rclb
popf
repnz
inc
ret
mov
aam
mov
hlt
pop
xchg
lock
int
xor
ret
mov
mov
add
cmpsb
movsl
mov
ret
xor
jmp
movsl
jmp
mov
mov
jb
dec
insb
ret
pop
int3
int3
rclb
pop
ucomiss
ret
add
mov
pop
mov
rclb
pop
push
cltd
sbb
ret
or
mov
insb
ret
push
lahf
adc
fnsave
icebp
sbb
xchg
in
jmp
ret
test
idivl
and
mov
add
xchg
lods
lock
xor
dec
sbb
in
inc
jmp
jmp
cmpsl
test
cmp
scas
sub
nop
outsl
das
test
inc
pop
dec
pop
xor
jno
sbb
inc
jbe
pop
sahf
mov
sub
ret
mov
mov
data16
fs
xchg
addr16
push
cmp
mov
fiadds
lret
cltd
push
mov
xchg
repz
testb
mov
xchg
iret
loope
stc
fs
mov
and
movsb
rcrb
mov
les
mov
or
imul
mov
aad
lds
call
add
mov
lds
jns
in
mov
mov
aas
dec
pushf
js
xor
shrl
cmp
add
add
ret
mov
dec
mov
ret
mov
push
push
lea
ret
mov
pop
insl
push
inc
jb
mov
stos
loope
jle
push
mov
test
fs
mov
mov
mov
jbe
jecxz
xchg
adc
jmp
shr
lret
inc
sbb
pushf
call
jge
ret
mov
cmp
fs
dec
aad
and
mov
les
cmpb
fucomp
xchg
fnstsw
pop
rolb
stos
mov
inc
and
movsl
out
fs
jp
ret
mov
xchg
inc
push
pusha
ret
out
js
lret
cwtl
jb
ret
mov
sbb
mov
add
jle
pop
mov
ret
mov
mov
inc
inc
inc
cmp
ret
mov
mov
push
mov
jns
mov
pop
pop
test
dec
aad
fcoml
div
sbb
and
mov
sbbl
mov
xchg
push
xchg
mov
xor
into
out
stos
mov
jno
inc
cmp
ja
insl
xor
pop
pop
mov
sti
imul
cltd
inc
mov
inc
ret
idiv
loopne
aam
in
dec
rolb
add
push
sbb
inc
lods
das
pop
pop
or
gs
sub
in
call
xchg
and
push
mov
adcl
cmp
inc
jo
xor
test
fbld
mov
pop
jmp
scas
outsb
xor
inc
leave
mov
and
ret
pop
pop
sbb
ret
mov
push
ret
mov
rcl
mov
sbb
loopne
sub
mov
mov
ret
mov
push
cmp
stos
ret
hlt
sub
push
mov
lock
inc
mov
push
sarb
push
subb
dec
ret
mov
mov
in
xor
jbe
insl
leave
push
insl
dec
lods
push
movsl
adc
inc
ret
mov
leave
dec
in
mov
mov
cltd
push
cwtl
test
fsubrp
jne
dec
scas
inc
pop
shll
xor
jb
ja
ret
mov
insl
cmp
mov
pop
fwait
rolb
ret
mov
rdpmc
xor
std
outsb
fs
movsl
faddl
movsb
or
mov
dec
ret
sbb
out
push
mov
add
lahf
mulb
add
jmp
dec
dec
xchg
jmp
ret
mov
cmp
sub
mov
ret
pushl
hlt
inc
mov
and
add
bound
into
push
push
fidivl
push
add
mov
sbb
mov
mov
mov
pop
rcr
xlat
subl
add
insl
add
push
push
cmp
cmp
push
fisubrs
add
insl
jl
hlt
cmpsb
inc
or
jb
add
popa
cwtl
add
sbb
push
pop
call
dec
ret
cmp
mov
ret
mov
push
xor
and
pop
push
mov
adc
fninit
dec
ret
mov
adc
ret
lret
xor
enter
add
nop
decl
mov
loop
xchg
mov
jo
dec
ret
mov
sbbl
xlat
sbb
push
mov
or
mov
das
out
loope
lret
mov
cli
stc
add
jo
jo
into
sub
mov
dec
jecxz
pop
adc
sub
shlb
cmpsl
lds
sbb
popa
sbb
lods
dec
or
mov
xorb
imul
rcll
add
mov
insb
ret
mov
pusha
ret
mov
cmp
les
aad
cmp
add
sbb
jecxz
add
mov
cli
pop
adc
fimuls
add
inc
xchg
and
mov
int
xchg
repz
jecxz
inc
xlat
sbb
xchg
std
ret
cmp
jecxz
ret
mov
nop
xchg
push
jne
cli
add
popa
test
and
filds
xor
mov
mov
jecxz
mov
inc
or
push
rcll
cmp
cmp
ret
lahf
in
adc
je
loope
js
pusha
ret
mov
or
ret
ret
negl
pop
lret
jns
pushf
fiaddl
add
out
xor
sub
test
sub
mov
inc
jmp
dec
in
incb
cmp
add
mov
dec
jge
outsl
call
xor
push
jae
or
jecxz
pop
mov
jnp
mov
sbb
add
fistps
mov
pop
ud1
sarb
xorb
add
cmc
fldpi
sub
ret
jb
into
daa
ret
ja
push
xchg
mov
mov
pushf
pop
loop
scas
sub
mov
ret
mov
ret
mov
popa
inc
xchg
idivb
cmp
mov
xchg
aad
fisubrs
fs
mov
ret
fwait
jge
cmp
hlt
jo
sahf
inc
outsl
enter
sub
adc
shll
cmp
aas
in
sub
mov
mov
add
add
shll
dec
in
xor
subb
add
xor
imul
js
jb
sahf
enter
fs
das
add
int3
sahf
out
sbb
ret
mov
enter
mov
adc
mov
fldl
ret
jg
mov
mov
scas
fiaddl
mov
lock
push
pop
and
inc
mov
jg
adc
and
iret
push
addb
add
or
jae
add
mov
repz
pop
dec
or
mov
notb
loope
in
or
dec
ret
mov
test
lcall
test
add
jle
incb
jecxz
jo
mov
sub
mov
ljmp
fs
dec
dec
ret
mov
add
ret
jns
push
xchg
lods
sbb
fcos
or
inc
aam
les
loop
push
lcall
shll
int3
loope
aas
jge
pushf
cmp
insl
cmp
push
sub
dec
ret
mov
or
mov
xchg
inc
jg
xor
adc
mov
bound
popa
xchg
data16
pushf
mov
xor
sbbb
mov
enter
mov
add
pusha
ret
jecxz
pop
aas
jnp
inc
ret
mov
lock
push
mov
mov
mov
mov
mov
outsl
out
mov
inc
xor
add
xchg
add
mov
cmpsl
cmp
xor
sbb
push
frstor
push
popf
sbb
into
xorb
jp
rcrl
mov
mov
pop
mov
lcall
orb
add
cmp
test
fstpt
jg
lock
pop
daa
gs
jge
aaa
and
add
enter
pusha
ret
mov
sti
nop
lret
scas
xor
jecxz
sbb
xchg
shl
sub
mov
ret
and
xor
lcall
rol
ret
sub
mov
or
mov
push
mov
pop
je
and
in
ds
xorb
mov
pop
xchg
xor
inc
mov
pushf
xchg
mov
jmp
pop
movsl
int
push
lret
sbb
in
shlb
cmpsl
pop
fwait
stc
andb
out
mov
ret
mov
xchg
hlt
lods
xor
out
mov
xchg
xchg
lret
aad
loope
rcrl
mov
addb
push
cld
jo
push
add
mov
or
mov
xorl
ret
bound
test
loop
sbb
mov
inc
movsb
push
jns
cmp
mov
subb
ret
lea
movsl
or
scas
mov
fisttpl
add
add
push
clc
hlt
xchg
ficoms
sbb
dec
pop
lods
aaa
cmp
mov
push
out
dec
jae,pn
pop
inc
test
push
sbb
cmp
mov
rorb
ror
out
cmp
fbstp
adc
shrb
loopne
adc
mov
add
int3
inc
xor
push
pop
pop
cs
ret
mov
iret
subl
arpl
xchg
dec
pop
addr16
imul
fstpl
ror
ror
test
xchg
jmp
cli
jg
fimull
mov
sbb
cmpsl
mov
adc
ret
xchg
ret
push
push
data16
inc
ret
mov
pop
lret
test
cmp
lock
xchg
test
pop
imul
adc
and
mov
and
xchg
mov
mov
les
add
mov
pop
ja
lods
fwait
mov
jnp
ret
pushf
mov
subl
adc
push
into
std
in
imul
fs
mov
push
push
mov
xchg
or
mov
mov
or
mov
sub
xchg
dec
adc
sarb
pushf
test
fldt
ret
mov
mov
lahf
jbe
pop
call
mov
dec
sub
mov
into
lds
add
mov
xlat
aaa
push
aas
mov
adc
sbb
mov
fstl
and
mov
popa
dec
test
add
cmpsl
adc
ret
mov
mov
mov
pop
mov
push
outsl
aas
shr
scas
jno
xor
mov
push
dec
fdiv
xchg
inc
pop
mov
or
icebp
in
adc
cmc
lret
jp
aad
inc
sahf
loope
movsl
mov
mov
sarb
ret
and
mov
mov
mov
pop
xor
mov
push
repnz
shr
in
repnz
add
mov
fs
mov
sub
pop
test
out
sbbb
xlat
lahf
scas
stos
sahf
ret
inc
jecxz
mov
mov
mulb
and
mov
pop
sti
push
ret
mov
ret
in
mov
shr
in
scas
hlt
ss
pop
mov
pop
ror
mov
hlt
lret
xorl
dec
mull
xchg
push
sahf
mov
pop
stos
sub
rolb
jnp
ret
popf
fs
fdivrs
mov
repnz
lods
mov
jle
xor
jl
ret
adc
dec
mov
imul
jmp
into
mov
sub
mov
lods
pop
loop
js
xchg
push
jg
push
inc
ret
mov
push
push
hlt
mov
push
push
sbb
cmp
out
lock
ret
mov
idivb
std
nop
fcmovu
shrb
scas
mov
mov
je
aas
inc
lea
cmc
outsb
jle
ret
mov
xchg
bt
outsb
add
ds
or
and
mov
xchg
iret
fadds
ret
mov
dec
xor
and
mov
lret
subb
movsl
out
das
push
jbe
in
in
add
imul
mov
inc
sti
mov
out
or
ret
mov
mov
mov
adc
scas
xor
dec
xor
ret
ret
or
mov
cmpsl
or
and
mov
or
and
push
pushf
mov
mov
xor
ljmp
or
fmuls
add
xchg
sahf
xchg
and
adc
add
out
dec
ret
ljmp
cltd
dec
ret
mov
mov
ret
mov
push
add
mov
add
pushf
fs
cmp
ljmp
sub
mov
cwtl
adc
ret
mov
xchg
ja
mov
jo
xchg
fs
sbb
push
xchg
add
mov
ret
mov
cs
mov
shlb
addr16
add
and
add
push
loopne
in
cwtl
mov
out
sub
sub
mov
mov
push
sti
dec
shl
jbe
jl
popf
cmc
rclb
jno
lock
rcr
movsb
imul
dec
ret
mov
int3
shl
scas
ficoms
ret
push
adc
mov
push
inc
ret
mov
xchg
mov
xchg
mov
mov
sub
aad
and
mov
in
les
mov
ret
insl
push
xchg
scas
cmp
into
inc
shl
js
ret
mov
sub
mov
add
cmpsl
pop
cmp
push
addr16
ret
mov
push
jl
jae
adc
jg
adcl
ret
mov
sbbb
mov
mov
adcl
mov
push
cmp
bnd
jbe
sbb
adc
ret
mov
mov
sbb
jp
ret
mov
mov
mov
rolb
mov
cld
dec
sub
sbb
inc
ret
mov
xor
ss
xchg
bnd
or
cmp
sbb
fistl
or
mov
ror
daa
jb
ret
mov
push
rclb
pop
mov
andl
lods
call
repz
stos
xor
jmp
mov
jecxz
or
std
xchg
and
sub
mov
dec
and
mov
mov
push
outsb
xor
jmp
in
sarl
loopne
adc
ret
mov
inc
ret
mov
mov
mov
ret
pushf
add
outsb
cmpsb
jne
sub
add
ret
mov
movsl
inc
ret
mov
sbb
mov
mov
xchg
pusha
ret
mov
inc
jg
ret
lods
scas
loop
data16
mov
ret
mov
scas
sbb
clc
pop
shrb
ret
jns
jecxz
mov
out
add
sbb
ret
mov
inc
ret
mov
sbb
fsub
out
ja
lods
aad
in
sbb
fdivrp
xchg
movl
js
sub
mov
pop
pop
lcall
fs
mov
ss
or
sub
insb
ret
in
stos
adc
ret
fiaddl
pop
sbb
call
add
xor
mov
pop
repz
psrld
clc
test
mov
movsl
pop
cwtl
mov
das
lock
add
inc
lock
shll
jmp
ret
cmp
mov
xchg
mov
ret
mov
ret
mov
xorb
aam
aaa
out
jnp
push
sbb
stc
mov
mov
ret
mov
mov
ret
pop
mov
add
jo
and
imul
ret
mov
mov
movsb
lods
out
xlat
mov
pop
lret
jg
mov
call
jmp
aam
aaa
xor
inc
fs
adc
mov
in
pop
or
mov
jno
jo
out
into
inc
ret
inc
insb
ret
mov
mov
mov
xor
lods
jmp
loop
push
jb
or
mov
mov
gs
test
inc
imul
push
push
lea
jl
or
ja
in
mov
mov
xchg
cli
stc
mov
or
mov
out
jle
mov
push
add
stc
out
cmc
xchg
jb
ret
mov
and
mov
stc
pop
in
mov
push
cmp
adc
movsl
push
or
aad
ret
js
cmp
push
xor
inc
aaa
int
xchg
ds
insb
ret
int
xor
push
mov
push
cmp
repnz
loop
dec
mov
pop
mov
adc
xor
scas
decl
pop
sub
mov
jb
data16
scas
add
sbb
out
xchg
in
mov
push
mov
testb
iret
inc
icebp
add
inc
ret
popf
lock
lahf
mov
jo
out
into
rep
mov
ret
mov
inc
out
adc
jae
jg
in
add
repz
push
test
mov
cld
in
push
shlb
daa
push
mov
add
adc
in
in
xor
mov
pop
pop
rcll
mov
ss
or
aas
add
mov
push
jno
out
mov
pop
jg
incl
mov
cmp
add
cmpsb
add
mov
cmp
adc
mov
push
inc
dec
add
mov
xor
mov
aaa
aas
pop
push
mov
mov
test
add
ret
popa
push
sub
or
popl
mov
aam
in
aam
pop
hlt
bswap
imul
out
or
and
inc
ret
mov
xor
or
mov
add
mov
mov
rclb
and
mov
mov
push
in
daa
xor
fistps
fs
adc
dec
jge
outsb
jle
push
outsl
mov
mov
inc
test
jne
jo
imul
or
fs
mov
dec
pushf
sbb
les
rorl
loopne
cltd
out
out
andb
into
pop
dec
xor
in
inc
mov
fldz
add
cmp
sti
push
pop
pop
fcmovu
dec
jne
pop
cmp
js
xor
xchg
jge
cmp
fsubs
mov
mov
faddl
lahf
mov
mov
push
sub
ret
mov
mov
mov
mov
lretw
ficoml
into
add
push
xlat
push
jae
jno
inc
jecxz
sub
xor
ret
stos
lds
ret
clc
fstpt
dec
pop
int
mov
mov
shrb
lods
push
jmp
adc
push
repz
sub
ret
in
add
push
ret
mov
shrb
fs
mov
push
out
cwtl
dec
insl
jp
nop
lret
dec
lods
cmp
fs
sbb
pop
idivb
jnp
push
jecxz
fidivrs
cmp
andb
sti
sub
add
aad
push
lock
sbb
sbb
loopne
mov
jmp
xor
mov
and
mov
mov
scas
or
mov
mov
mov
dec
std
insb
ret
dec
mov
mov
dec
mov
jb
cmc
test
mov
out
sub
test
sbb
sub
mov
int3
fwait
dec
scas
mov
mov
xchg
adc
mov
mov
loopne
scas
lahf
lea
les
mov
scas
push
push
aad
push
aaa
cli
push
adc
daa
jg
ret
movsb
add
mov
js
push
mov
popa
mov
fistpll
test
call
pop
int
mov
xchg
sbb
cmp
rclb
dec
ret
mov
lea
incb
jae
ret
aaa
cmp
fsubrl
sarl
ret
mov
hlt
pop
loopne
loopne
inc
aad
nop
mov
dec
or
mov
add
mov
imul
mov
and
push
mov
jp
cli
xchg
mov
int3
dec
jb
xchg
arpl
movd
push
aas
in
loopne
rorb
rorl
cmc
stos
test
add
mov
mov
ret
addr16
je
sub
jnp
iret
mov
pusha
ret
mov
add
fadds
sbbl
xor
je
xchg
ljmp
jbe
mov
testb
add
mov
add
dec
daa
xchg
ret
mov
subl
cld
xor
cltd
fsubrs
ret
ljmp
mov
scas
cltd
aaa
mov
adc
pop
adc
inc
lods
ss
clc
sarb
mov
mov
jecxz
addr16
cmp
add
mov
ret
jno
int
ret
mov
mov
ret
sbb
jle
inc
mov
inc
xchg
into
jecxz
rolb
sbb
jne
push
cs
lcall
pop
adcl
lret
cmpsl
sub
jmp
mov
xor
scas
pop
jmp
xor
mov
out
in
aam
xchg
xchg
ds
lds
adc
dec
ret
mov
and
push
out
jmp
cmp
add
mov
pop
out
mov
xor
loopne
ljmp
dec
pop
js
mov
aam
sti
test
lahf
push
dec
ret
xchg
xlat
jb
mov
jmp
lahf
sub
mov
mov
add
out
pop
add
push
test
add
mov
cmp
mov
push
jp
adc
mov
mov
ret
mov
push
mov
jb
into
pop
movsb
inc
lds
or
gs
je
lds
ret
mov
add
lock
in
stos
loop
dec
ret
movsl
sub
in
xor
pop
adc
mov
mov
in
mov
aad
pop
pop
inc
imul
sub
mov
ret
xlat
mov
sahf
loope
fstl
hlt
iret
in
xchg
mov
add
cltd
mov
add
sub
mov
rep
mov
push
dec
cmc
aad
adc
jbe
adc
lods
jae
push
jne
lds
mov
add
sbb
movsl
xchg
or
mov
out
inc
ret
mov
push
push
jno
jp
pop
pop
mov
xor
lods
rcrb
je
ret
mov
es
xor
insl
mov
cmpb
mov
sub
mov
xor
pop
scas
push
xchg
pushf
xchg
sub
lret
rcrb
aas
jbe
out
stc
and
mov
popf
jb
add
adc
mov
sub
jp
push
or
xchg
ljmp
mov
daa
rorb
mov
mov
fcompl
or
mov
aaa
mov
out
adc
pop
inc
ret
mov
jne
aaa
lret
cmp
or
mov
fisttpll
xchg
sbb
fisttps
mov
ret
mov
pushf
add
xor
lret
mov
mov
pop
dec
adc
ds
ret
scas
fistpl
and
shl
mov
mov
xor
mov
mov
add
mov
inc
imul
ret
mov
mov
cld
xchg
add
mov
ljmp
sti
sub
sub
dec
cli
pushf
pop
pop
or
out
inc
jg
pop
aas
loope
das
sbb
lock
add
addr16
cltd
mov
and
mov
jl
xlat
push
push
cmpl
mov
sub
mov
add
mov
inc
sub
adc
andl
and
mov
mov
mov
or
cmpsl
or
mov
mov
mov
loopne
push
stc
loop
add
add
nop
mov
ret
mov
ret
mov
adc
outsb
mov
push
fbld
fcompp
sbbl
push
stos
lcall
xchg
add
mov
stos
push
mov
mov
jb
jle
xor
xchg
add
shll
and
mov
inc
dec
inc
sub
mov
aam
loopne
or
adcl
ficomps
mov
xor
jno
mov
adc
mov
jl
mov
add
loop
ret
ret
pop
xchg
or
push
call
mov
idiv
add
add
xchg
mov
push
cmp
ret
mov
pop
mov
jg
inc
ss
mov
cmp
dec
ret
mov
mov
roll
shlb
mov
pop
push
xor
int3
inc
int
push
sbb
daa
jp
or
mov
ret
mov
ret
lods
sbb
add
ret
lcall
jb
dec
sahf
sub
andb
fildll
mov
adc
jnp
fsub
cmp
or
push
adc
jp
shlb
add
push
xor
test
jp
orl
pushf
out
sbb
add
leave
decb
mov
test
addr16
pop
push
mov
iret
fdivp
in
aam
jmp
ret
aam
ret
push
sub
push
aad
pop
jne
sbb
lock
mov
push
test
jne
loopne
in
mov
ret
scas
or
mov
mov
test
mov
out
gs
cmpsl
push
out
jg
stos
fs
mov
add
in
pop
lods
xor
mov
cs
push
lock
xchg
cmp
test
dec
ret
mov
aad
jl
hlt
inc
arpl
daa
shll
mov
scas
rorl
sub
in
mov
mov
add
jns
cmp
push
rolb
adc
ret
mov
mov
xor
call
xor
mov
push
jae
dec
and
or
mov
ret
mov
pop
pushl
sub
mov
add
mov
addl
cwtl
sarb
lods
or
adc
push
test
add
in
dec
ret
mov
lea
sub
mov
lock
mov
ja
sbb
icebp
or
mov
mov
fs
fidivs
icebp
jb
xchg
fmul
xchg
cld
sub
test
or
sub
je
mov
and
ds
pop
jns
out
cmp
ja
cmpsb
xchg
repnz
mov
cmpl
xchg
cmpsb
mov
push
aas
mov
mov
jno
daa
nop
adc
cltd
pop
pop
jmp
sbb
push
idivb
push
lcall
loop
sbb
sbb
ret
mov
shll
or
mov
add
cmp
jo
ret
mov
cs
addr16
adc
cmp
pushf
or
in
outsl
sbb
push
push
cmp
int
mov
mov
cmpsl
out
mov
mov
mov
mov
mov
cmpsl
sub
jbe
ret
mov
repz
cpuid
adc
mov
fucomip
sbb
mov
sub
mov
ror
jne
rorb
cmp
and
cli
inc
das
aaa
mov
add
add
mov
fimuls
add
pop
jecxz
inc
and
mov
add
mov
shl
pop
inc
out
or
jl
sbb
ret
mov
std
stos
icebp
orb
dec
and
and
push
sub
mov
das
ljmp
mov
sbb
cmpl
in
jge
cmp
mov
mov
leave
xchg
lods
in
add
out
fstp
in
je
ret
mov
push
cmovp
cmpsb
das
mov
sub
add
push
call
cld
out
repnz
jl
rcrb
sti
adc
fucomi
icebp
stc
test
mov
and
ret
mov
lea
cmp
inc
fwait
sub
daa
sarl
lods
bound
xchg
sbb
add
scas
push
in
xor
repz
push
testl
dec
ret
mov
push
fistl
ret
dec
bound
mov
inc
test
push
mov
ret
push
cltd
int3
es
xchg
jmp
xchg
dec
fldl
fneni(8087
mov
arpl
sub
xchg
outsb
cmp
repnz
push
test
dec
imul
xchg
pop
mov
add
push
cmp
icebp
xorb
mov
cld
lret
mov
sub
mov
movl
mov
xor
dec
cmp
data16
ficoml
xor
iret
inc
jb
fnstcw
inc
dec
enter
and
jecxz
hlt
gs
mov
sbb
icebp
fistl
pop
addr16
int3
fsubl
test
mov
sub
mov
or
mov
add
cmp
jo
sbb
popa
call
mov
ret
mov
fisubs
add
movsl
jb
insl
cmp
jbe
xor
repnz
cs
xchg
insl
mov
call
push
xor
mov
ret
mov
mov
outsl
inc
aaa
sarb
int
inc
pop
data16
sbb
insb
ret
mov
push
dec
and
mov
push
movsl
outsb
shl
lcall
xchg
sub
mov
repz
adc
cmp
leave
scas
pop
adc
aas
sbb
shrl
xchg
mov
xchg
test
fstl
loopne
sarb
stos
jns
or
and
mov
jle
mov
cmp
push
insl
lret
pop
sub
mov
lcall
and
mov
ret
mov
popa
faddp
xchg
push
cmp
mov
aaa
push
out
lods
pushf
pop
out
jmp
add
fidivl
ret
mov
test
cmc
je
lret
outsb
sti
jle
push
insb
ret
mov
inc
ret
mov
aad
mov
and
add
popf
push
call
mov
mov
xor
cmp
mov
mov
fadds
add
mov
lods
mov
xor
stos
frstor
cmp
repnz
push
push
les
out
aaa
sahf
mov
mov
pop
jae
jbe
mov
ret
lods
push
xchg
inc
ret
mov
xor
adc
pop
ja
nop
daa
mov
lcall
add
mov
ret
mov
add
jnp
fstl
pop
mov
popf
je
cmp
stos
xorl
ja
mov
push
aaa
jnp
mov
mov
jo
jmp
sub
mov
dec
sbb
mov
fisttpl
test
fistpll
and
out
sbb
movsl
mov
add
ret
mov
in
jmp
push
mov
add
sbb
mov
call
or
dec
add
sbb
mov
test
popf
add
mov
xor
xchg
cmp
push
bound
add
fsts
and
shll
mov
pop
push
or
mov
int
push
and
jecxz
lret
mov
jmp
ret
mov
ret
lea
jg
mov
cmp
pop
mov
push
repz
popa
inc
hlt
inc
ret
push
fbld
push
mov
xchg
sbb
cld
pop
clc
movsl
pop
lds
lock
loopne
mov
xchg
jecxz
das
mov
inc
mov
add
push
sub
mov
ss
in
sub
divl
fwait
lods
add
xor
insb
ret
mov
lahf
out
lds
pop
lods
in
cli
or
mov
jnp
fcomps
enter
ret
mov
cmp
loop
out
sub
insl
xor
mov
enter
mov
dec
push
out
imul
and
mov
xor
ret
mov
push
sti
lea
pop
lahf
es
ret
inc
ret
or
test
add
add
pop
ss
mov
or
stos
xchg
lea
or
lcall
scas
sbb
mov
jb
sub
push
sub
mov
pop
pop
out
test
movsl
mov
sbb
sahf
lret
add
add
mov
jmp
adc
sbb
loope
lea
add
ja
push
das
mov
pop
iret
ror
fisubs
ret
cmp
xor
mov
stos
loopne
fidivs
adc
lcall
cmp
mov
mov
outsl
push
xor
insb
ret
mov
mov
and
mov
or
mov
pop
dec
ret
mov
mov
push
dec
sti
arpl
xor
mov
sbb
lods
push
loope
in
add
mov
test
cmpsl
jbe
xor
ret
std
in
mov
adc
sti
sbb
push
in
lds
xor
sbb
lock
cmp
movsl
jb
cli
cmp
ret
mov
data16
jmp
inc
fwait
and
ss
adc
cs
sbb
add
adc
mov
add
mov
popl
mov
jne
imul
add
mov
mov
add
jmp
sbb
mov
mov
pop
adcl
inc
push
add
mov
repnz
int
subl
ret
mov
or
lret
jbe
mov
sbb
insl
mov
dec
dec
movsb
add
ret
jmp
sti
addr16
hlt
sub
inc
ret
adc
mov
push
stos
out
btc
add
mov
mov
pop
out
mov
mov
jo
jg
xrelease
ret
pushf
xlat
js
and
add
movsb
pop
inc
add
aas
scas
mov
mov
lcall
out
add
pop
and
mov
ret
mov
push
inc
or
mov
or
daa
xchg
fsubrl
outsl
rcll
je
push
push
in
sbb
adc
ljmp
shlb
idivb
push
mov
mov
pushf
and
jmp
or
inc
sub
enter
cmp
repz
clc
jecxz
jnp
pop
pop
loope
cwtl
test
lcall
mov
into
clc
test
xlat
xlat
mov
insl
push
mov
cmpsl
mov
mov
jmp
mov
ret
out
aam
mov
cmp
add
mov
ret
roll
add
frstor
movsl
sub
inc
dec
filds
dec
inc
ret
xchg
sbb
mov
mov
inc
add
jmp
adc
pusha
ret
mov
neg
pop
xor
add
mov
add
mov
add
hlt
or
stc
jo
push
movsl
pop
mov
inc
pop
jg
repnz
mov
add
outsl
or
jecxz
jne
push
sbb
sarl
jne
xchg
lock
mov
mov
push
xchg
loop
add
sahf
mov
test
jo
out
mov
icebp
cld
scas
and
add
mov
hlt
movsl
cmp
push
xchg
mov
mov
lret
dec
cltd
movb
lods
jne
adc
or
std
cmp
into
movsl
xchg
add
mov
leave
xchg
sub
xchg
add
mov
add
xchg
cmp
repnz
icebp
call
ljmp
pop
xchg
jne
jmp
out
das
ljmp
cli
rcll
aad
ret
pusha
ret
mov
xor
xchg
push
jne
call
xor
push
cmpsl
inc
xchg
jmp
jmp
add
adc
lcall
mov
les
ret
les
or
mov
ret
mov
or
xchg
lret
ret
in
push
push
cltd
mov
add
or
mov
clc
and
cmp
xchg
stc
adc
mov
push
loope
xor
fs
movsl
push
jle
xchg
fldt
ret
mov
push
ret
mov
push
clc
push
out
or
rcl
je
sub
mov
mov
popa
mov
mov
fcompl
ss
adc
inc
stos
fiaddl
cmp
dec
ret
dec
pop
push
fs
pusha
ret
fld
mov
cmpsl
mov
xchg
test
loope
vunpcklps
clc
loopne
add
inc
push
jl
xchg
pusha
ret
mov
cmc
bound
in
inc
movsb
ret
test
jg
pop
inc
ret
xor
sarb
bound
ret
mov
push
cltd
dec
ret
aad
pop
cli
cld
sbb
sub
mov
xlat
data16
mov
xor
add
test
outsl
inc
jge
or
mov
and
mov
add
push
push
loop
popf
lret
cmp
insl
dec
or
mov
ljmp
mov
repnz
imul
xchg
es
xchg
lcall
lods
and
mov
ret
mov
ret
cmpsb
sahf
lock
loope
xchg
pop
jnp
hlt
lea
add
in
dec
lock
cmp
add
imul
dec
push
mov
je
jae
call
ret
mov
rorb
add
movsl
subb
add
mov
dec
xchg
jmp
mov
ret
gs
push
mov
fisttpl
dec
mov
and
push
xchg
test
jb
pop
stos
fs
mov
or
mov
and
push
std
fstl
mov
xchg
roll
ret
mov
jb
pushf
push
das
mov
pop
jg
ret
mov
jle
jge
in
mov
lahf
sub
fcmovnb
ds
and
push
fstps
inc
xchg
test
fadd
in
lock
fadd
jb
enter
push
in
icebp
cmpb
aad
adc
or
add
mov
cmc
mov
pop
aam
fstpt
pop
add
inc
movsl
jle
dec
ret
mov
mov
leave
les
imul
and
jmp
inc
ret
mov
dec
ret
mov
push
sbbl
sbb
scas
xchg
jnp
stos
sbb
aas
mov
mov
lcall
mov
xchg
enter
dec
xchg
jno
push
xor
testl
add
mov
jl
pop
das
dec
sbb
mov
push
push
xchg
es
mov
std
scas
cli
cmp
cli
inc
repz
addl
jg
or
dec
ret
adc
inc
movsl
jb
fsubrl
sub
mov
pusha
ret
leave
mov
or
xchg
mov
stos
cs
test
cmp
fistpll
sbb
and
jmp
test
xchg
neg
mov
or
ret
mov
add
fidivs
sub
lcall
shll
loop
dec
ret
mov
jecxz
repz
mov
mov
imul
cwtl
jns
inc
pop
xor
test
mov
jle
inc
ret
ds
lret
iret
jmp
jp
movsb
mov
add
sahf
mov
pushf
push
sbb
imul
mov
mov
adc
mov
ds
cs
pop
adcb
pop
xchg
fcoms
sub
subl
je
mov
dec
out
adc
mov
lods
popf
xchg
xchg
pop
aam
ret
mov
fwait
sbb
adc
pop
xchg
cmc
and
dec
xor
mov
sbb
push
dec
ret
mov
inc
rcl
push
sarl
dec
imul
mov
hlt
jmp
add
mov
dec
add
mov
or
inc
in
sub
mov
imul
cmp
nop
xor
outsb
xchg
mov
fwait
adc
ret
mov
dec
ret
lods
test
mov
leave
mov
push
ret
mov
mov
jns
std
sbb
popf
pop
sbb
jno
mov
adc
ret
mov
pop
push
xor
xchg
arpl
mov
andb
add
je
sahf
subb
add
dec
ret
mov
out
pop
pushf
je
fs
cmp
sahf
mov
sbb
mov
add
out
movb
add
mov
add
mov
mov
mov
sub
test
jae
ss
xchg
fdivrl
xorb
cmpsb
jns
lret
std
xor
out
nop
into
xor
and
mov
mov
call
push
shl
lahf
imul
ret
imul
add
jb
in
ret
push
add
loope
and
mov
movaps
mov
jp
or
adc
mov
dec
call
jg
add
mov
ret
lea
mov
ret
or
mov
xlat
loop
or
mov
push
cmp
pop
outsl
lcall
mov
mov
sbb
mov
das
insl
fstpl
dec
inc
lods
cmp
mov
out
pop
sti
lods
pusha
ret
mov
ret
mov
dec
add
ret
mov
lahf
jmp
pop
push
or
insb
ret
mov
dec
pusha
ret
xor
addps
ljmp
lds
cmp
nop
pop
push
roll
and
lods
sti
push
cmp
xor
dec
mov
inc
push
imul
mov
push
adc
ret
mov
and
pushf
jle
mov
ret
mov
out
pop
scas
fnstsw
popf
cld
pop
jle
rorb
inc
lds
dec
push
popf
ja
stos
test
in
jmp
mov
cmp
mov
sub
pop
fs
add
add
add
mov
xchg
push
jae
int
ret
mov
pop
jbe
ret
add
mov
fdivrs
aaa
pop
adc
dec
ret
mov
sbb
lods
pop
pop
shrb
cld
mov
imul
leave
popa
xchg
sysenter
mov
scas
cmovb
mov
xor
nop
and
mov
insb
ret
shl
jmp
sbb
mov
test
inc
jbe
insl
mov
and
mov
adc
fs
dec
jg
and
mov
push
dec
cmc
and
inc
xlat
push
enter
mov
fidivrl
ret
xor
pop
mov
dec
pop
repnz
xor
mov
dec
ret
loop
adc
jo
daa
sub
inc
pusha
ret
mov
outsl
add
cs
adc
fisubs
mov
lret
loope
leave
inc
push
and
mov
in
jg
ret
jp
test
adc
cmp
gs
xchg
jno
loop
hlt
push
fsubrs
in
test
addr16
lret
ret
and
mov
push
test
repz
adcl
dec
ret
bound
and
mov
xchg
jp
mov
inc
mov
pop
lahf
int3
sub
mov
mov
mov
xor
add
inc
fsubl
xchg
imul
add
ficoml
jns
and
push
mov
fucomi
adc
mov
lods
nop
push
into
loope
ret
mov
and
scas
jae
hlt
adcb
stc
jmp
mov
insb
ret
fs
jo
ret
mov
push
hlt
fsubs
adcb
cs
idiv
add
pushl
push
mov
mov
jb
push
shl
ljmp
and
mov
sbb
sub
adc
cmp
ret
mov
add
jns
ret
add
fdivl
insb
ret
pop
cltd
scas
mov
in
adc
fdivrs
jbe
aam
jmp
cld
cmpsl
pop
pushf
inc
ljmp
add
ret
int3
cli
jp
mov
icebp
or
inc
fnstenv
adc
dec
xchg
push
bound
mov
testl
sbb
mov
jno
mov
pop
sub
sub
mov
mov
dec
ret
mov
out
cmp
jae
jg
out
adc
cld
cmp
out
and
in
scas
jbe
popf
insl
xchg
cmpsb
ds
aam
mov
inc
ret
mov
lds
mov
or
mov
ret
adc
aaa
jg
lret
mov
inc
jae
ljmp
add
xchg
cmpsl
imul
xchg
push
xchg
ljmp
xchg
sbb
loopne
or
inc
ret
lret
dec
or
popa
insl
inc
and
mov
shr
mulb
into
mov
dec
stos
dec
xchg
in
popa
dec
jo
aad
pop
jns
inc
mov
jecxz
and
mov
test
mov
inc
mov
into
push
cltd
mov
xor
int3
sub
shrb
test
rolb
pop
out
data16
xchg
xchg
aas
cmp
data16
mov
xchg
ret
mov
mov
repz
stos
mov
fldcw
mov
dec
ret
dec
in
dec
rol
mov
pop
cmp
push
cmp
jmp
lahf
or
dec
rcll
jnp
das
xchg
imul
pop
imulb
imul
push
ds
mov
ret
mov
xchg
xlat
pop
adc
mov
lcall
je
out
mov
xchg
mov
sub
xor
xor
xor
mov
jne
cmpb
xchg
movsl
push
xchg
adc
mov
add
rcll
jmp
divl
mov
dec
inc
in
push
adc
inc
lock
bound
aas
cmp
sub
mov
jle
cmp
mov
mov
inc
ret
mov
ret
push
xor
cmpsl
lea
push
mov
bound
stos
hlt
xor
dec
push
fcomps
or
xchg
rcrl
test
loope
xchg
add
in
dec
aas
jp
pop
test
push
invd
ret
inc
ret
mov
stos
lret
mov
pop
cs
sbb
shlb
adc
sbb
mov
ljmp
movsb
or
mov
mov
mov
add
mov
add
stc
mov
shll
hlt
ret
jne
hlt
mov
push
fdivrs
gs
je
lahf
inc
ret
mov
push
movsl
push
call
mov
repnz
cvtdq2ps
lods
pushf
int
clc
mov
sbb
inc
lcall
and
xchg
lret
nop
outsb
dec
aam
push
cmp
cmp
sbb
js
sub
pop
lahf
sbb
ret
cwtl
aaa
dec
pop
pop
sub
mov
sbb
push
fsts
cld
mov
jl
sub
mov
dec
ret
mov
push
mov
xor
xchg
inc
ret
mov
jmp
push
shrl
ret
mov
ret
mov
jl
mov
rcrb
imul
out
pop
das
inc
sub
mov
arpl
mov
sub
out
sahf
push
inc
sbb
das
mov
pop
jnp
mov
jp
outsl
outsl
push
mov
iret
pop
add
ret
mov
je
bswap
cs
cmp
mov
rcl
iret
jl
data16
and
sub
xor
jns
dec
ret
mov
frstor
push
pusha
ret
mov
mov
leave
xchg
fsubr
addb
into
add
cld
or
mov
ret
mov
xchg
stos
call
ret
mov
js
ds
shrl
mov
lcall
add
hlt
add
dec
ret
lods
push
aaa
adc
lods
ljmp
push
ret
in
sbb
nop
les
lret
mov
jecxz
fistps
ret
mov
in
enter
test
mov
add
mov
add
sahf
cmpsb
das
lret
cmc
and
cmp
pop
daa
adc
clc
in
mov
inc
repz
adc
fs
adc
repnz
sub
out
push
or
add
push
jno
push
cmpsb
or
mov
stos
xlat
pop
pop
or
dec
add
adc
mov
mov
push
stos
imulb
shlb
incb
mov
sub
mov
inc
pusha
ret
mov
movsb
mov
mov
push
icebp
jmp
pop
pusha
ret
ficoms
adc
jne
in
imul
sti
lret
inc
ret
and
mov
adc
mov
xchg
sub
cmpsl
add
mov
test
imul
cmp
jb
xchg
inc
sub
jne
push
out
push
pop
fdivrs
les
cs
es
jmp
add
push
cmp
sti
repz
jle
out
sbb
ljmp
stc
movsb
jae
shlb
repz
mov
ret
fs
mov
fiadds
push
ljmp
lds
push
add
mov
repnz
push
and
mov
ret
mov
popa
jbe
ret
sub
mov
sbb
imul
cmp
sbb
xchg
mov
cmc
stos
mov
ret
mulb
xor
add
dec
ret
mov
aas
jl
pop
popa
inc
insb
ret
dec
cld
sbbb
mov
movsb
xchg
add
mov
add
das
mov
nop
jp
add
sahf
or
sbb
cmpsl
and
mov
mov
ret
mov
enter
mov
lret
fdivrs
lods
push
xchg
cmp
lahf
pop
repz
push
mov
mov
roll
mov
jae
scas
xchg
push
int
ja
jnp
fistpll
pop
push
pop
int3
sub
in
js
adc
inc
mov
roll
out
lea
dec
jnp
mov
push
cmp
mov
ret
mov
adc
add
push
cmp
push
push
add
mov
push
or
xor
mov
and
ret
jno
and
mov
inc
ret
mov
dec
dec
ret
mov
mov
ret
mov
push
clc
frstor
sbb
out
dec
lret
jnp
push
mov
ret
push
jp
xchg
sub
fdivs
test
jmp
adc
shll
ret
mov
or
mov
js
pextrw
addr16
jge
xor
and
pop
mov
and
mov
ret
mov
cld
fcomp
mov
adc
fs
mov
mov
xchg
aam
ret
sti
mov
sbb
inc
ret
mov
cmp
inc
out
and
push
adc
loope
jnp
push
push
popf
aam
and
mov
int3
jg
or
mov
notb
rol
data16
out
rorb
test
xchg
sahf
pop
jae
pop
test
lret
lds
sbb
lea
and
cmc
jns
jne
ljmp
fdivl
lods
sub
sub
mov
scas
js
cld
mov
bound
shlb
cmp
ret
jge
hlt
out
add
popa
insl
js
lods
adc
pop
push
jno
lods
cmp
mov
cmc
xchg
cmpsl
xchg
or
cmp
push
xchg
xchg
jg
aaa
loopne
scas
jecxz
cmp
cmp
mov
popa
roll
sti
and
mov
cs
enter
js
sub
mov
inc
inc
mov
cmpsb
gs
sub
jnp,pt
aad
gs
mov
add
dec
leave
xchg
push
les
mov
add
aad
pop
inc
ret
dec
mov
jbe
ret
mov
mov
adc
icebp
pop
or
mov
ss
sbb
ret
fcmovnu
pop
jae
sub
pop
aam
push
scas
pushf
mov
ret
fldenv
ds
xchg
lret
jl
xor
mov
stc
out
jae
push
xchg
xor
xchg
arpl
pop
fisubl
sti
and
mov
nop
jmp
add
mov
stos
shlb
push
pushf
push
or
push
data16
push
stos
pop
cld
sar
pop
lods
rcr
push
jne
or
mov
push
inc
ret
cmpsl
ds
xchg
aas
fnstcw
jecxz
push
mov
dec
cmpsb
mov
ret
mov
bound
cld
add
int
xchg
stos
or
push
lahf
sarb
xchg
popa
gs
ljmp
std
mov
mov
add
roll
add
inc
ret
mov
mov
call
std
push
mov
mov
shlb
sti
mov
inc
mov
dec
add
movb
xchg
pop
jae
push
stos
fcomps
andl
nop
enter
imul
aam
fadd
pop
iret
mov
push
mov
js
cmc
add
sub
mov
push
dec
mov
mov
imul
push
enter
data16
test
xchg
xchg
lock
mov
ljmp
add
orl
mov
test
jge
ret
mov
cmp
xor
out
jle
xor
sbb
ret
mov
imul
je
xor
sbb
clc
sub
xchg
mov
aaa
test
ret
mov
xor
popa
xchg
or
inc
or
scas
popa
mov
sbb
dec
mov
add
xlat
or
xor
xchg
iret
sbb
mov
ret
jmp
add
cli
cmpl
dec
scas
mov
jl
js
das
in
jno
adc
push
add
mov
jge
sahf
jge
push
xchg
jecxz
pop
dec
ret
mov
add
lods
nop
push
sbb
mov
push
nop
add
popa
jecxz
push
inc
mov
sbb
add
push
insl
dec
in
ret
and
lret
lds
add
mov
fildl
mov
shll
and
shll
daa
sbb
lahf
push
or
add
cmc
xchg
loopne
ret
mov
mov
cmp
ret
and
mov
test
stc
mov
ret
mov
punpckhbw
mov
add
mov
lods
inc
xor
cmp
adc
xchg
inc
mov
push
add
arpl
out
mov
cwtl
ds
enter
mov
push
hlt
jl
add
mov
push
fs
mov
push
and
add
pop
sbb
push
pop
push
icebp
pop
xchg
rorb
push
cmp
jg
cmpsb
lret
mov
mov
pop
pop
push
push
jg
movsb
pusha
ret
mov
ret
mov
push
fwait
cli
jno
mov
mov
pop
cmp
jno
xchg
jecxz
fs
mov
outsb
and
add
imul
mov
sub
mov
add
lock
ret
aad
mov
add
das
or
jp
xor
xor
pop
lock
push
jne
loop
loop
shl
pusha
ret
mov
ret
mov
and
mov
xor
leave
pushf
loopne
push
out
push
cli
testb
out
sti
dec
lret
mov
loopne
mov
mov
daa
out
fidivs
mov
outsb
jg
jmp
jbe
push
sub
mov
fdivl
xchg
and
mov
push
les
je
shlb
jl
fstpl
cmp
fdivl
jecxz
out
aas
mov
test
mov
add
mov
rolb
sbb
jae
mov
sti
jne
popa
inc
mov
imul
mov
add
add
push
add
mov
movl
ret
mov
mov
add
aam
or
cmp
test
cmp
lock
xor
adc
insl
add
mov
rcrl
imul
add
pop
mov
shll
ds
cmp
xchg
sbb
imulb
mov
fiadds
rcl
pop
ss
adc
cmpsb
xchg
jno
and
roll
or
adc
cwtl
push
mov
add
bsr
dec
push
mov
les
add
repz
xchg
mov
mov
jmp
int3
movb
nop
repnz
jle
push
mov
ret
add
mov
adc
sub
fimuls
xchg
ret
sahf
js
rcll
fwait
mov
jno
push
push
jmp
jg
in
out
lret
cli
cmpb
fcmovnu
ds
lcall
ret
mov
fsub
add
xchg
in
pop
dec
ss
mulb
jle
out
sbb
jb
adc
movsl
cs
enter
ret
mov
sub
dec
cmp
pop
scas
mov
add
insb
ret
mov
push
cmp
mov
or
jo
popf
outsb
into
icebp
and
mov
cmp
sbb
lods
lods
test
stos
mov
ret
mov
mov
mov
or
dec
ret
lret
fwait
jg
lods
xor
xchg
dec
adc
or
mov
xor
call
inc
cmp
push
lea
loopne
or
mov
xchg
mov
xlat
pop
and
mov
lcall
ds
loopne
nop
jo
jae
stos
jmp
mov
into
xchg
hlt
adc
adc
xchg
inc
mov
mov
cltd
lods
lahf
sub
dec
pushf
stos
ljmp
sub
fmul
jbe
movsb
push
xchg
jecxz
sbb
jnp
mov
adc
lcall
xor
xor
test
add
inc
xlat
cli
xchg
mov
mov
in
mov
fldenv
mov
push
sub
int
sbb
mov
inc
aam
notl
call
mov
ret
cwtl
ret
mov
rol
bnd
das
lcallw
jne
popf
xor
add
js
ret
sub
jle
mov
cld
sbb
andl
inc
mov
shl
cmp
xchg
test
aad
por
mov
outsl
push
inc
imul
or
or
mov
push
insb
ret
fsubs
mov
pop
ret
addr16
inc
ret
mov
ja
xchg
jns
enter
sbb
scas
test
and
dec
ret
das
or
sub
js
subl
add
mov
lret
aaa
push
mov
in
lods
xchg
mov
mov
ljmp
addr16
ret
mov
or
mov
inc
mov
push
push
daa
stc
subb
bound
leave
loope
push
xor
loope
ret
mov
pop
or
cli
imul
pusha
ret
and
push
sbb
leave
arpl
ret
mov
fcomip
jecxz
and
sbb
out
cmpsb
repz
adc
pop
shlb
loop
cmp
sahf
push
pushf
dec
shlb
inc
pop
call
ret
push
mov
push
test
xchg
mov
or
or
add
add
ret
mov
andl
addr16
lahf
xor
jno
in
jo
int
cli
mov
in
mov
mov
inc
adc
ret
lret
fimuls
mov
ret
mov
loopne
sbb
lods
sahf
mov
scas
mov
mov
imul
cmp
aas
sbb
cmp
push
jg
xchg
jo
movsl
adc
lods
mov
jge
aaa
addr16
cmc
loopne
xchg
cmp
mov
negl
and
mov
in
dec
ret
xchg
or
rolb
mov
movsb
mov
push
sub
ficomps
call
add
mov
mov
ret
leave
jmp
insl
and
fucomi
in
daa
sbb
mov
add
jge
xchg
push
shrb
push
test
dec
fsubr
pushf
in
dec
ret
mov
cmp
ret
mov
add
lds
add
mov
iret
sub
push
jnp
cmp
jo
test
ret
mov
add
shlb
mov
int3
sahf
mov
mov
fisubs
jge
jns
ret
xchg
cmp
dec
jbe
pop
rcl
jo
sub
mov
sbb
mov
mov
cmc
call
cmp
ljmp
je,pt
ljmp
add
aad
xorl
outsb
cltd
jne
insb
ret
mov
lods
adc
add
jecxz
dec
ret
int3
addr16
cmp
ljmp
cmp
daa
enter
or
xchg
arpl
enter
js
nop
fcompl
pushf
cmp
mov
ret
mov
mov
cs
ret
lock
gs
shl
mov
mov
test
add
scas
push
jbe
sti
mov
mov
add
mov
adc
xor
and
push
aaa
bndstx
add
sti
mov
mov
sarb
push
js
aaa
jae
push
xor
sbb
push
add
add
or
mov
push
fisttpll
ret
mov
push
dec
cmp
je
mov
jno
movsb
sub
mov
and
aad
jbe
and
mov
xchg
xor
push
dec
enter
dec
rcl
out
jecxz
mov
rcrb
add
ret
mov
in
loopne
lret
cmpsb
stc
adc
divb
dec
faddl
add
or
mov
inc
ret
popa
in
ret
pmulhw
ss
inc
std
dec
xchg
shl
or
push
cmpsb
push
add
mov
aam
jecxz
fiaddl
cwtl
dec
lahf
lods
cmp
mov
mov
loop
push
add
pop
pusha
ret
mov
notl
dec
stc
dec
ret
call
adc
aam
xor
xchg
stos
lea
add
adc
movl
ret
mov
adc
xor
mov
lods
test
je
dec
iret
cld
and
mov
sbb
in
xchg
cmp
into
add
lcall
ret
sbb
jmp
ret
mov
xchg
xor
mov
inc
or
sbb
xlat
adc
insb
ret
mov
test
fistps
jo
ja
das
push
dec
call
add
inc
and
aam
outsb
shlb
xor
minps
mov
cmp
divl
inc
ret
ljmp
mov
mov
mov
jns
adc
test
mov
ret
inc
and
cmp
jmp
nop
imul
aam
sbb
ret
push
sub
imul
xchg
mov
int
mov
mov
adc
sbb
mov
bound
inc
arpl
jo
mov
mov
cs
jmp
arpl
inc
adc
gs
mov
ss
fs
aaa
inc
ret
int3
cmpsb
adc
or
mov
inc
pop
ljmp
add
xor
inc
ret
mov
sbb
mov
mov
add
daa
mov
out
mov
mov
xor
pushf
outsb
add
repnz
jp
inc
ret
adc
xchg
scas
jb
ficoms
xorl
jo
jne
jae
xchg
mov
shll
adc
mov
xchg
aas
adc
xchg
iret
pop
xchg
xchg
js
lahf
xor
xor
mov
add
sbb
jno
xchg
pop
mov
mov
data16
inc
lahf
pop
leave
lock
mov
mov
pop
fldcw
ret
pop
hlt
lret
dec
iret
imul
test
outsb
sub
mov
lea
test
je
add
mov
loope
ror
jmp
add
subb
pop
xor
aaa
or
stc
mov
addl
add
add
jne
ret
lret
ret
mov
mov
hlt
test
das
in
out
cltd
mov
sti
fadd
mov
ret
std
aam
pop
dec
pop
sahf
cmp
mov
pop
and
mov
je
popf
insb
ret
mov
cwtl
or
mov
inc
outsb
jmp
imul
rcl
or
add
mov
inc
dec
test
aad
mov
add
and
mov
sub
pop
shll
fstl
stc
jns
push
bound
cmpsb
dec
dec
jbe
sahf
sar
adc
inc
jmp
fidivs
test
ret
int
push
adc
or
mov
movsb
add
ret
mov
pop
inc
je
repnz
xlat
mov
in
cld
cmp
iret
mov
hlt
insb
ret
js
stc
xchg
mov
add
ror
lea
mov
push
lahf
jno
or
sub
mov
dec
aad
and
aad
pop
nop
imul
enter
cld
adc
inc
xchg
imul
ret
addl
repz
ret
and
out
push
cmp
bound
movsl
je
cmovae
pushf
adc
add
dec
ret
fcomp
jmp
push
mov
mov
pushf
inc
ret
sbb
ljmp
push
bound
cli
loope
add
ret
jp
jae
ret
aad
xchg
mov
out
mov
pop
xor
mov
cwtl
jne
cmpsl
fadd
and
sti
mov
andl
int
xor
sbbb
xor
out
or
mov
mov
fsubs
scas
lods
cwtl
jmp
xchg
jecxz
or
mov
mov
andb
lds
ret
mov
adc
insl
or
ret
dec
ret
mov
push
negb
push
jge
dec
cmp
and
mov
sahf
fcomps
xchg
icebp
jmp
std
add
inc
ret
mov
jle
cli
arpl
xchg
fucomp
jl
stos
mov
int
push
data16
jnp
xor
rorl
ret
mov
movsb
sub
mov
mov
ret
mov
jo
xor
gs
push
mov
sub
mov
loop
pushf
dec
push
aas
mov
inc
jnp
sbb
ret
std
pop
jmp
push
sti
in
mov
mov
mov
lret
mov
push
add
hlt
push
in
aaa
sbb
insb
ret
xchg
mov
dec
ret
mov
jnp
dec
out
mov
mov
add
mov
push
sahf
lods
and
les
mov
xchg
pop
dec
ret
or
jae
int
fsubr
es
sbb
and
addl
cmp
mov
inc
ret
shlb
fisubs
nop
cmc
faddl
sbb
fnstenv
fsts
push
and
push
sahf
mov
je
fistps
mov
mov
ret
mov
lods
inc
dec
ret
cmp
inc
jae
jecxz
cwtl
inc
pop
xor
fs
movsl
rorl
xor
add
ret
int
ret
jmp
mov
mov
cmp
jne
aas
ss
int
stos
enter
mov
popf
sbb
lahf
sarl
mov
push
stos
lds
in
cmp
ret
mov
icebp
cli
lret
or
mov
cmp
pandn
ja
push
lea
fisttps
mov
add
imul
and
mov
js
xorl
mov
mov
loopne
fbstp
mov
ret
imul
sahf
std
jmp
sahf
inc
ret
mov
call
mov
jnp
les
mov
in
shrb
cmp
jp
sub
popa
iret
jno
lcall
dec
mov
shll
push
loope
dec
scas
into
fstpt
adc
test
inc
shlb
add
mov
add
add
mov
or
je
mov
movsl
fs
mov
pop
jmp
lea
add
mov
daa
aad
rcr
lds
and
mov
dec
aam
jb
or
movsl
lea
or
mov
popf
sbb
cmp
jle
jmp
mov
icebp
loope
ret
ljmp
lds
mov
outsl
push
adc
in
sbb
cld
cmp
adc
lea
ret
mov
add
add
xor
push
arpl
rcrl
add
dec
ret
mov
add
xchg
or
lea
aas
fisubrs
test
push
adc
push
push
add
sti
stos
fisubs
adc
cmpsb
xor
fs
mov
or
mov
int
xor
sbb
inc
ret
mov
mov
mov
mov
mov
imul
add
sahf
inc
and
mov
icebp
data16
mov
mov
pop
inc
xchg
js
xor
ret
mov
arpl
stos
dec
int
js
stos
das
ja
and
xchg
data16
sub
pop
mov
mov
ret
sbb
jns
js
xchg
fcmove
data16
jecxz
shrl
insl
cmp
int3
mov
sbb
ret
mov
pop
jl
jae
aaa
bound
xlat
ret
shll
push
pushl
adc
add
scas
pop
mov
stc
popf
mov
jns
scas
mov
and
es
les
push
shl
jo
xchg
mov
sahf
mov
mov
mov
cmp
mov
inc
ret
mov
add
test
ja
xchg
test
add
jecxz
pushf
push
and
jmp
ret
mov
pop
pushf
sub
mov
iret
ljmp
xor
xor
loop
lods
and
pop
sub
lea
mov
sub
mov
mov
add
out
lret
adc
mov
fnstsw
lret
mov
sub
mov
jo
hlt
lock
mov
mov
xchg
cwtl
sarl
insl
movsb
adc
daa
mov
mov
pop
mov
push
cwtd
dec
push
cltd
dec
das
mov
jl
add
mov
movsbl
push
aaa
xor
subb
mov
adc
mov
pop
cs
dec
mov
movb
mov
add
dec
daa
cmp
dec
sbb
shlb
stc
frstor
in
lds
mov
ret
lret
sbb
repnz
dec
ret
push
jge
ret
or
jne
adc
mov
cltd
lret
jmp
rcrb
ret
ret
stos
xlat
mov
push
xor
and
mov
ret
mov
mov
ret
mov
ret
mov
sbb
fists
dec
inc
ret
mov
inc
push
xchg
es
push
cli
add
xchg
aad
daa
dec
pop
adc
insl
add
pop
pop
mov
pop
clc
sub
jl
and
orb
insl
jo
lret
xchg
sti
adc
andl
add
push
dec
shll
xchg
adc
add
xchg
xchg
fwait
mov
add
aad
sahf
mov
xchg
call
enter
pop
adc
sbb
inc
daa
jecxz
add
loope
ret
popf
add
mov
ret
mov
out
out
ret
adc
push
cwtl
dec
add
mov
jp
scas
rcrb
lret
pop
pop
sub
mov
mov
cld
ret
lock
shr
dec
xor
popf
jb
mov
dec
lahf
arpl
aaa
jne
xor
je
xlat
dec
ret
cs
cmp
in
xor
xchg
xchg
cmp
lea
fisttpl
inc
ret
adc
jp
scas
ret
push
cmp
cli
cmp
mov
push
mov
add
mov
jmp
pop
test
jmp
shll
lods
jne
mov
ret
mov
cmc
jl
and
cmp
hlt
sbb
add
push
jnp
ret
push
pop
imul
add
mov
xchg
sbb
xor
adc
inc
inc
sbb
aad
mov
cmp
faddl
mov
mov
mov
cmc
dec
xchg
jecxz
mov
imulb
inc
fwait
sbb
popf
aad
xor
and
cli
xchg
fsubl
sbb
xor
in
inc
cmpsb
into
jge
lret
cmp
dec
xchg
ror
jno
or
ret
adc
mov
cmp
push
sub
cmp
add
enter
push
mov
add
jo
ret
cmp
cs
repz
pusha
ret
mov
add
xor
in
mov
jecxz
shrb
pop
mov
jmp
push
mov
xor
cmpsl
add
mov
adc
adcl
icebp
lds
inc
mov
cli
xchg
pop
pop
mov
add
jge
out
or
mov
add
lods
aad
stos
and
sub
push
lcall
ret
mov
push
or
cmpsl
icebp
mov
das
mov
dec
pop
andb
sbb
mov
into
jg
gs
into
push
out
testb
cmpsb
mov
lea
add
mov
in
mov
stc
and
pusha
ret
inc
mov
add
dec
ret
loope
je
sbb
mov
add
or
mov
xchg
popa
xor
scas
mov
pop
push
jl
lret
or
stos
movsb
lret
adc
repz
roll
call
leave
lock
mov
cwtl
out
xchg
cmp
mov
int3
sbb
mov
imul
add
rcll
sbb
cmp
ret
mov
adc
insb
ret
mul
mov
mov
mov
push
jo
cltd
test
mov
xchg
sbb
movsb
scas
fistl
fstps
mov
mov
xlat
arpl
sbb
clc
jbe
adc
add
mov
sub
mov
and
inc
ret
std
adcl
and
ret
pop
aam
lcall
test
scas
mov
xchg
dec
ret
mov
rclb
pop
rcr
js
insb
ret
mov
push
arpl
in
pop
cmp
popf
pop
mov
push
lock
xor
call
cmp
lret
jne
ret
mov
push
pop
cmp
add
mov
add
mov
test
lret
fidivs
lret
cmpb
dec
cmc
pop
fisubl
ret
inc
ret
mov
ficompl
mov
das
pop
fisubl
cwtl
cmp
mov
lock
push
inc
mov
fs
hlt
je
pop
movl
add
sarb
cmc
adc
jle
int3
loop
lods
repnz
icebp
and
fwait
jb
add
jg
jno
popa
sub
fdivrs
adc
cmc
adc
lods
cltd
ficoms
mov
ds
mov
je
pop
sub
mov
aam
call
roll
jge
ds
xchg
mov
mov
cltd
mov
inc
loop
add
push
xchg
and
mov
push
sbb
add
mov
cwtl
in
xor
lcall
sbb
mov
out
pushl
into
aam
dec
inc
orb
ret
ljmp
push
fsub
sbb
ret
pushf
pop
xor
fidivrl
jnp
jne
ret
mov
sub
mov
iret
pop
stos
sub
inc
sbb
jle
popa
ljmp
jmp
cmp
xor
insb
ret
mov
jle
ret
add
mov
add
jp
or
mov
repnz
xchg
outsb
push
pop
xor
js
cmp
or
ret
mov
mov
inc
sti
imul
dec
cli
add
ret
mov
add
mov
pop
xchg
xor
outsb
mov
mov
or
sti
std
lea
add
ss
loope
mov
xor
cmpsl
rclb
cwtl
data16
jne
hlt
sub
dec
pop
arpl
push
push
jl
or
mov
cmp
ret
mov
mov
ret
mov
data16
inc
andb
ret
test
cwtl
cmp
aas
lahf
or
mov
imul
sbb
lods
fs
mov
mov
inc
dec
ret
mov
jns
nop
ljmp
ret
mov
sbb
pop
jns
mov
cmp
fldcw
mov
add
sub
test
cmpsb
jg
cmp
das
push
xchg
pop
mov
adc
sahf
mov
mov
pop
cmp
mov
pop
mov
fnstsw
inc
jo
push
lahf
mov
sbb
outsb
add
mov
aas
jge
ret
mov
inc
jbe
enter
rorl
cmp
inc
and
mov
pusha
ret
mov
cmpsb
inc
xor
inc
rcl
fst
stos
sti
push
or
mov
inc
dec
scas
sbb
fbstp
push
mov
inc
xchg
and
dec
mov
aad
ficompl
inc
add
mov
lods
imul
repnz
mov
xor
push
pop
mov
jge
outsl
jae
mov
xchg
daa
push
xchg
fs
aad
divl
ret
mov
enter
mov
add
insb
ret
test
int3
out
jae
sub
mov
lahf
sub
mov
insb
ret
mov
inc
dec
ds
lcall
xorl
fwait
inc
ret
fs
mov
ret
inc
ret
daa
scas
fsubs
mov
pop
fistl
cmp
loop
mov
stos
jge
inc
movl
stos
stc
xor
movsb
cmp
add
shlb
xchg
xor
xchg
in
ljmp
jnp
shl
or
xchg
int3
xchg
add
and
or
popa
xchg
aam
inc
ljmp
aaa
sarb
push
lods
imul
test
ss
lret
mov
adc
icebp
in
mov
jle
ret
mov
and
dec
loope,pt
mov
in
shl
jno
pop
inc
ret
or
add
push
and
mov
ret
mov
stc
inc
ret
fcoms
arpl
adc
mov
add
pop
or
mov
sti
adc
add
mov
ret
mov
ss
imul
add
ret
scas
dec
aam
imul
cmc
jle
dec
ret
push
fcmovu
insl
pop
inc
hlt
push
fsubrp
ljmp
mov
js
aam
pop
jl
in
into
pop
mov
push
sbb
add
ret
cmp
and
roll
mov
test
cmp
pop
mov
or
mov
add
mov
test
pop
scas
aam
call
cs
sub
mov
inc
adc
add
orl
in
int
stc
rcrb
aaa
bound
dec
ret
lds
push
lock
aas
call
fdivrl
or
dec
push
stc
xchg
fwait
xor
push
js
and
int
out
scas
dec
jmp
pop
insl
sbb
lea
xchg
ret
fcmovne
mov
and
mov
xchg
shlb
jl
push
sbb
jo
cmp
add
push
dec
ret
cmp
pop
dec
mov
ret
jno
stos
jno
mov
or
dec
ret
mov
and
mov
mov
and
mov
mov
adc
incl
ret
mov
stc
push
ret
xchg
pop
lds
mov
lods
aas
call
push
adc
icebp
sub
or
mov
add
mov
mov
fs
mov
add
jno
mov
out
loop
aaa
mov
fwait
jno
pop
lcall
lock
loope
fstpt
ret
ret
pop
jmp
sub
mov
ds
fsts
decl
test
or
mov
inc
push
ja
addr16
xchg
mov
or
sbb
adc
lds
jb
and
imul
mov
test
push
sbb
inc
ret
das
xor
ret
push
in
jo
xor
sti
pop
fwait
rorb
js
pop
lods
testl
lcall
test
imul
add
add
ret
mov
jnp
xchg
fmuls
add
jno
ds
ret
ret
sub
mov
stos
icebp
repnz
stos
add
mov
mov
add
add
cltd
ja
out
int
mov
cs
arpl
ficoms
or
mov
and
ret
pop
push
je
add
mov
jne
ja
aaa
fmul
mov
and
add
stos
xor
clc
out
out
push
pop
and
mov
sti
int3
rcl
xor
out
bound
out
jl
out
add
fs
movsb
jecxz
andb
mov
mov
sti
rcrb
scas
jg
ljmp
xchg
test
add
mov
mov
psubusw
fcmovb
mov
imul
in
cli
jno
pop
mov
mov
push
push
int
push
xchg
stc
pop
mov
pop
es
cltd
xor
ret
mov
ret
lret
scas
loopne
testl
xor
xchg
push
nop
addb
mov
in
push
dec
ljmp
outsb
adc
ret
mov
ljmp
add
pop
add
es
push
jnp
testb
sub
fucom
add
add
add
mov
xor
pusha
ret
rcrl
mov
dec
mov
je
ret
mov
push
mov
mov
ss
insb
ret
mov
mov
popa
sti
dec
dec
inc
jne
fldcw
mov
ret
mov
push
inc
adc
xchg
mov
scas
sti
mov
inc
push
dec
mov
jae
sti
test
sbb
ret
jnp
mov
mov
mov
sbb
or
adc
mov
sbb
adc
mov
inc
fistl
push
push
cmp
mov
xor
stos
cmp
insl
and
fbld
nop
imul
test
jne
ret
sub
pop
insb
ret
ficoml
fldl
popf
pop
jmp
icebp
loop
insl
sub
movsb
mov
out
pop
sub
aad
add
enter
or
mov
add
push
movsb
mov
stc
push
or
imul
dec
mov
add
mov
divl
jae
mov
mov
ret
mov
ret
mov
adc
loope
inc
mov
mov
insb
ret
mov
ret
fcmovu
fadds
shll
test
popf
subl
xchg
ret
cmp
mov
lds
subb
cld
push
popa
outsb
xchg
push
sub
mov
subl
add
mov
add
scas
mov
pop
xchg
mov
ret
mov
mulb
mov
out
fimull
xlat
repnz
xor
or
mov
xor
ret
fdivrl
sahf
mov
cmp
dec
movups
lcall
std
lods
ficomps
mov
cltd
mov
mov
iret
xchg
or
push
jmp
add
mov
std
mov
mov
mov
ss
xor
adc
repz
and
fwait
scas
ret
pop
jle
aam
pop
xorl
js
sbb
mov
sti
adc
stos
jb
push
add
sbb
js
ret
jo
ret
jne
mov
ficoml
mov
ret
pusha
ret
sub
mov
mov
ret
loop
push
sbb
fdecstp
pop
jno
lcall
mov
cli
stos
sub
and
push
push
stc
add
mov
aad
ret
mov
push
clc
je
push
mov
mov
and
jnp
xchg
sub
cs
push
repnz
add
mov
mov
push
rcll
les
xchg
int3
dec
je
imul
xlat
and
mov
dec
ret
icebp
rcrl
cmc
push
xor
xor
add
repnz
pop
fldenv
xor
inc
jl
push
stc
ficompl
dec
inc
adc
mov
mov
add
test
add
mov
insl
adc
mov
pop
push
xor
sti
push
push
fistl
mov
ret
dec
cmc
mov
mov
in
mov
ret
rcrb
dec
and
xor
sahf
adc
lret
std
pop
jmp
outsb
arpl
jne
mov
lods
mov
decl
testl
lret
rcll
aad
dec
fldcw
clc
inc
into
mov
out
popa
xchg
mov
ds
cmp
fnstsw
ret
clc
xor
aad
mov
add
ret
mov
adc
aas
test
sub
mov
push
sbb
nop
daa
out
stos
outsl
push
int3
push
or
pop
shll
xchg
cmpb
jge
xor
fwait
sti
xor
movsl
gs
pop
mov
daa
mov
ret
fcoms
pop
mov
xchg
adc
sahf
ljmp
fstp
push
in
cs
pop
lret
jge
mov
lods
push
pop
or
mov
xorl
jp
roll
add
fwait
mov
mov
mov
and
xchg
pop
gs
jge
scas
ljmp
inc
ret
add
mov
cmp
mov
sbb
push
out
pop
cwtl
sti
popf
leave
and
mul
inc
cmp
mov
mov
adc
andb
jnp
ret
and
out
xchg
push
popa
add
icebp
cmp
ret
shll
inc
addr16
push
insb
ret
mov
mov
mov
mov
mov
mov
lods
push
imul
add
mov
cmc
mov
ss
in
mov
add
mov
jbe
into
mov
repz
mov
xor
pusha
ret
inc
pop
sub
mov
jmp
sbb
dec
ret
icebp
lcall
or
mov
add
pusha
ret
fnstcw
hlt
xchg
movsb
xorb
adc
imul
dec
xchg
sub
mov
adc
inc
add
mov
ret
mov
adc
jb
dec
lods
aad
add
mov
jnp
ret
mov
lahf
insb
ret
inc
jnp
ret
mov
jp
clc
xchg
fwait
cli
ss
into
mov
test
adc
jae
and
mov
cmc
fdiv
out
dec
ret
mov
sbb
pop
push
adc
and
mov
pop
pop
lcall
mov
jo
daa
scas
dec
ret
mov
not
dec
ret
mov
dec
div
inc
pusha
ret
mov
mov
push
mov
fcom
insl
aas
jae
cmpsl
sahf
or
add
fiadds
mov
mov
pop
loopne
shl
ret
mov
fcomi
lcall
lret
int3
int3
dec
or
inc
or
mov
push
mov
jb
test
popf
mov
lret
and
xchg
mov
mov
rorb
ret
dec
outsl
lret
xchg
push
fadds
out
out
test
or
and
ss
jbe
dec
ret
mov
movsl
ja
mov
ss
jmp
jns
mov
ljmp
addl
popf
mov
xchg
popa
fwait
lret
push
push
je
sub
lret
mov
ret
mov
ret
mov
out
rcrb
cmpsl
cmp
lds
rcl
adc
jb
fsubl
ret
loop
pop
sbbb
push
xor
add
mov
add
add
cwtl
ljmp
pop
mov
and
mov
add
mov
jae
sbb
jge
xchg
aas
adc
fbstp
ret
push
mov
mov
test
ret
mov
jbe
push
dec
ret
mov
std
sbb
fcoms
je
cmp
lock
gs
cmp
dec
mov
testb
cld
stos
addb
sub
or
mov
into
enter
xchg
and
mov
xchg
lahf
jno
xor
mov
or
enter
xor
enter
mov
dec
sub
cwtl
aas
xchg
pop
int3
add
mov
rcrb
mov
loopne
cmp
push
rcrb
pop
jecxz
repz
das
or
mov
hlt
pop
xor
xor
or
xor
lods
pusha
ret
mov
ret
xchg
scas
fwait
mov
outsl
cltd
and
sbb
push
and
mov
lods
scas
adc
loope
ret
mov
xchg
xor
mov
das
adc
add
mov
or
ret
daa
popf
or
mov
lea
fcompl
addb
xchg
ds
mov
and
lret
xchg
fmul
and
mov
add
ret
mov
cmp
bound
cltd
in
movsb
pop
sub
sbb
test
mov
or
mov
ret
mov
ret
xor
push
dec
ret
mov
add
mov
dec
ret
mov
inc
jmp
add
add
scas
adc
mov
sahf
rclb
ret
pop
loope
dec
mov
or
mov
push
sub
add
mov
mov
xor
daa
mov
mov
cmp
imul
adc
inc
xorb
and
mov
mov
xor
pop
lret
imul
and
test
daa
pop
gs
fdivp
dec
ret
sbb
push
sarl
out
xchg
out
dec
mov
push
mov
out
adc
movl
or
mov
push
stos
mov
push
pop
lods
sbb
fcomp
bound
sub
mov
mov
dec
ret
add
xor
or
sti
cmpsb
and
pushf
das
jp
dec
inc
ret
mov
sub
rol
outsl
pop
push
lahf
jle
xchg
int3
push
mov
mov
clc
into
mov
cmp
jnp
gs
xchg
mov
sub
dec
in
mov
mov
dec
fdivrs
xor
std
jbe
divb
jno
cmpsb
cmp
addr16
xor
mov
je
movsb
popa
pushf
mov
xchg
rolb
paddd
cmp
xchg
loopne
cli
test
or
mov
push
data16
push
push
jo
imul
stos
fdivrp
jbe
pop
les
iret
sbb
outsl
jp
rclb
hlt
jle
pushf
stc
das
loope
xor
mov
or
adc
imul
and
mov
ret
mov
jge
adc
mov
std
jle
mov
loopne
mov
test
dec
ret
push
out
inc
sarb
add
mov
ljmp
mov
lea
sbb
movsl
adc
cltd
sub
mov
test
and
pop
xlat
rol
mov
jnp
push
xor
adcb
xor
fldcw
and
xlat
int
scas
rorl
mov
push
adcl
pop
and
call
pop
sub
mov
push
and
mov
mov
push
or
enter
adc
add
and
data16
sbb
mov
mov
adc
test
std
xchg
test
ss
sub
push
es
leave
in
push
mov
inc
ret
or
dec
data16
ret
mov
mov
out
out
and
mov
scas
sub
adc
decl
pop
push
in
dec
fs
mov
xchg
jge
or
mov
ret
mov
pop
in
ror
xor
ret
fs
mov
mov
sub
mov
mov
xlat
ret
jns
repnz
rol
pop
lock
mov
cltd
dec
pop
rorb
mov
in
pop
push
xchg
mov
mov
jne
jl
dec
ret
mov
mov
ret
mov
mov
dec
ret
mov
int
pop
fldl
jmp
xor
scas
or
mov
imul
mov
ret
pop
push
int3
aaa
scas
vdivsd
aad
cmc
pop
cmpsb
adc
mov
iret
in
push
andl
mov
lahf
movsb
test
pop
in
pop
mov
xor
and
mov
loopne
mov
push
cmpsl
adc
cmp
sahf
int3
fbstp
xor
push
mov
mulb
ljmp
into
jge
adc
scas
lds
cltd
pop
cmp
movsb
addr16
mov
jns
loop
pop
cmp
xor
push
in
jns
fwait
and
cmp
inc
or
push
adc
ret
mov
add
pop
je
sub
outsl
add
mov
pop
mov
scas
mov
xchg
sub
mov
mov
adc
mov
mov
scas
test
jno
dec
movsl
aas
cmp
jnp
dec
ret
fildl
pushf
and
outsb
xor
leave
out
rolb
ret
mov
outsb
out
andl
lahf
cwtl
lahf
jmp
inc
rolb
mov
stc
inc
xchg
aaa
out
dec
push
movsl
jo
lret
leave
jo
cwtl
or
mov
sub
jg
popf
push
mov
ret
pop
je
gs
jg
sub
mov
sarb
pop
cli
mov
scas
cs
inc
cmp
mov
jle
lods
mov
fidivl
sub
inc
ret
dec
mov
hlt
outsl
test
aas
and
mov
add
mov
lock
fs
cmc
push
sbbl
inc
ret
mov
jg
popa
fisttpll
call
inc
out
inc
ret
lds
dec
sbb
lods
lods
outsl
btr
xchg
mov
in
fdivs
lds
testl
sub
std
mov
mov
loopne
or
mov
mov
add
test
mov
roll
add
pop
js
bound
jb
pop
xlat
loopne
stos
es
xchg
xor
scas
jle
mov
ret
mov
je
xchg
dec
ret
mov
ja
add
mov
das
xor
add
add
inc
ret
mov
sbb
rcrb
ja
lcall
sub
aad
std
gs
mov
test
pop
sbbb
sbb
in
pop
addr16
test
loopne
sub
dec
pop
cmp
and
mov
popa
pushf
xchg
jo
adc
push
inc
ret
gs
lcall
push
add
cmp
je
push
imul
jns
sbb
add
cmp
pop
loopne
ret
mov
ret
mov
aas
ficomps
out
sub
shl
mov
ljmp
in
add
mov
pop
mulb
leave
cs
cmp
jp
adc
dec
ret
das
bnd
ret
jmp
dec
cwtl
and
mov
mov
sub
mov
jb
inc
mov
rorl
vpunpckhdq
and
mov
ret
xchg
fistpll
xor
xchg
aam
xchg
je
stc
imul
ret
mov
push
scas
loop
fiaddl
mov
popf
mov
add
stc
fistl
add
arpl
push
inc
add
adc
xorl
sub
add
xchg
imul
dec
mov
xor
mov
aam
mov
xchg
push
add
mov
jmp
mov
ljmp
add
pop
adc
or
ret
mov
ja
jg
sub
icebp
stos
mov
jecxz
xchg
subb
add
ret
hlt
popf
es
ret
mov
lods
insb
ret
push
bound
mov
mov
test
adcb
push
add
mov
scas
test
adc
addb
cs
es
ret
or
mov
fwait
inc
sub
cmp
inc
fdivl
jge
xchg
cmc
and
mov
adc
std
cltd
dec
test
fildll
iret
sbb
jae
in
out
and
mov
cmp
ret
ret
sahf
int3
cs
test
inc
insl
mov
sbb
push
fstpl
xchg
adc
inc
sbb
inc
ret
mov
filds
cld
and
mov
mov
sbb
add
push
fbstp
iret
jnp
ret
inc
inc
std
push
mov
orl
add
mov
ljmp
pop
and
pop
inc
add
dec
dec
ret
test
or
push
jmp
pop
scas
or
rolb
mov
ret
mov
jae
in
sahf
rclb
mov
mov
add
leave
pop
xchg
hlt
jb
into
movsb
loope
push
imul
aam
fistps
mov
mov
and
dec
sub
frstor
roll
mov
inc
xchg
pop
aam
jb
ret
sahf
in
push
faddl
in
sarl
ret
out
cld
jmp
lret
ret
pop
mov
adc
pop
inc
cltd
mov
shl
repz
aam
es
test
push
mov
int3
push
inc
mov
or
loop
movzbl
insb
ret
stos
insl
jg
ret
loope
fst
mov
add
mov
push
mov
ret
mov
in
ret
dec
or
mov
sub
jbe
loope
fsubrp
adcb
dec
pop
mov
ret
mov
or
es
mov
cmp
bound
or
jo
ret
and
fiaddl
pop
mov
rcll
mov
fdivrl
in
and
mov
clc
jno
pop
icebp
add
inc
cmpsl
push
mov
jae
adc
shrb
push
pop
jb
xor
add
sbb
dec
sahf
aad
jae
dec
mov
xor
les
or
mov
popa
push
and
add
pop
ja
les
mov
out
repz
stos
push
sub
lret
scas
dec
mov
pop
lea
sbb
leave
lods
insl
pop
mov
daa
mov
rcll
fwait
mov
xlat
inc
or
fisubrs
lock
shlb
fcoms
ret
pop
scas
cmp
jmp
mov
ret
mov
push
fldl
mov
sub
ret
mov
lock
lods
inc
jp
inc
pop
dec
ret
mov
dec
ret
mov
push
xchg
test
sbb
stos
push
je
nop
jle
idivl
xlat
pop
es
lea
test
in
jae
ret
jg
repnz
jns
negb
mov
cmp
ret
jge
xchg
xlat
push
pop
lods
andl
fnstenv
ret
xor
xor
gs
mov
fsubrs
out
out
ret
mov
dec
sbb
addr16
jno
pop
mov
xchg
jge
lods
insl
pop
or
mov
cmp
dec
ret
mov
data16
pop
divl
sub
mov
mov
add
mov
xor
pop
lds
adc
mov
fs
mov
in
xor
and
fcomps
adc
pop
add
mov
ret
mov
ret
dec
pusha
ret
inc
sub
inc
out
pop
and
mov
ret
fwait
test
fbstp
stc
hlt
xchg
out
int
and
jb
mov
mov
loop
mov
daa
lea
test
aam
into
lret
data16
sbb
sbb
clc
xchg
hlt
js
xchg
repz
ret
jno
lcall
aam
ljmp
mov
jo
lods
jge
jmp
or
ljmp
inc
ret
or
lods
cmc
mov
aas
xchg
mov
sub
pusha
ret
mov
ret
and
ret
cmp
xor
mov
int
inc
ret
mov
mov
ret
dec
ret
or
and
subl
ret
mov
inc
lahf
sub
mov
mov
mov
fnstenv
jmp
enter
add
cmp
mov
pop
xor
sbb
insb
ret
mov
or
sub
xor
test
jp
inc
ret
subb
pop
aaa
in
inc
ret
mov
ret
and
ret
mov
mov
clc
add
pop
insb
ret
jge
scas
insb
ret
lds
ret
cmp
fadds
ret
mov
nop
test
int
or
xor
in
sub
pushf
xchg
cli
fistpll
pop
lret
orb
add
mov
out
sarl
fdivrl
and
in
jl
adc
lahf
inc
adc
cmp
jns
sbb
xor
lcall
addb
add
push
sub
mov
ret
mov
ret
xchg
inc
add
mov
mov
outsl
lcall
jp
push
cmp
inc
fwait
fwait
mov
int3
push
pushf
fs
aas
pusha
ret
mov
lock
adc
xchg
cmp
mov
adc
ret
xor
outsb
mov
push
in
fstl
pop
sub
mov
ljmp
xchg
dec
sub
add
mov
sbb
fwait
mov
sbb
mov
pop
xor
leave
mov
add
pop
rorb
inc
ret
mov
aam
and
xchg
daa
lock
sbbl
push
xchg
lret
xchg
jne
ja
jno
pop
adc
jp
cwtl
lcall
ret
mov
shll
movb
ret
pop
sar
inc
and
mov
ret
mov
arpl
les
sub
mov
xchg
ljmp
add
mov
sbb
push
sbb
test
cmc
scas
subl
notl
and
sti
mov
fdivrs
xor
adc
sbb
adcb
ret
fisubs
pop
or
ret
mov
and
mov
adc
mov
int3
negl
shll
jmp
imul
mov
data16
fs
mov
ret
mov
pusha
ret
mov
cmp
or
rol
nop
stos
and
pop
jnp
add
mov
mov
mov
test
fistpl
sbb
ret
sub
out
jnp
pop
adc
add
ret
dec
punpcklbw
mov
add
mov
add
daa
xchg
and
sub
mov
jecxz
fs
mov
dec
mov
sbb
outsl
jo
lea
loope
test
or
test
mov
push
rolb
lea
pop
arpl
cmc
scas
pushf
mov
clc
idiv
mov
pop
mov
scas
fsubrl
fsts
pop
hlt
dec
nop
xchg
mov
js
or
ret
mov
mov
mov
mov
add
mov
mov
ret
xor
ret
mov
call
loope
andps
loop
dec
gs
cltd
repnz
jo
std
repnz
mov
outsl
pop
jg
push
mov
pop
mov
data16
and
mov
int
push
les
inc
lds
push
js
aas
fs
mov
mov
pop
push
xorb
mov
xchg
push
inc
fimuls
imul
sbbl
es
push
bound
shlb
insl
in
fdivs
ss
repz
add
inc
in
xchg
or
push
mov
pushf
fs
loop
xchg
fdivrp
push
xor
add
jl
test
mov
xor
repz
sub
add
push
clc
pusha
ret
mov
mov
add
mov
aam
popf
fs
mov
mov
ds
mov
xor
push
aas
in
shlb
cltd
js
std
adc
gs
xlat
and
adc
push
insl
xchg
pop
or
ret
cmp
add
xchg
cmp
mov
psubw
pusha
ret
mov
jecxz
add
dec
iret
push
popf
or
sti
rcrl
ret
dec
sbb
xor
mov
pop
dec
int3
inc
ret
mov
dec
in
fidivrs
inc
negl
lahf
inc
or
push
dec
aas
mov
dec
mov
ret
mov
jge
jl
lods
push
cs
pop
dec
push
enter
mov
cmp
or
in
cmp
cmpb
dec
pop
push
enter
lea
xchg
stos
in
fwait
xor
test
fstpt
pop
jge
and
mov
ret
out
and
mov
ret
pop
movsl
fcoms
add
dec
mov
ret
mov
sbb
aaa
sub
push
jae
add
mov
js
xchg
sub
mov
call
xor
or
push
bound
ljmp
test
mov
pop
jge
pop
clc
add
cmp
sbb
add
aam
idiv
popf
xchg
ljmp
lret
mov
or
incl
repnz
mov
add
xchg
cli
bound
stc
repz
jbe
pushf
jo
out
ret
mov
adcb
dec
inc
mov
inc
js
hlt
mov
sub
mov
jae
push
inc
ret
mov
xchg
shlb
ret
sub
ret
sbb
pop
dec
cmp
icebp
inc
test
push
hlt
sbb
rorb
jmp
mov
ljmp
sbb
cld
addr16
pop
adc
pop
add
dec
xorps
mov
adcl
xor
xchg
lock
aam
pop
adc
and
ret
int
cmp
add
clc
lahf
adc
sahf
cld
and
lods
dec
test
popa
gs
inc
ret
sub
mov
pop
inc
sbb
and
cs
pushf
jmp
add
mov
loop
xchg
daa
adc
add
nop
loop
xlat
pop
fldcw
adc
mov
sub
add
dec
sub
je
test
add
andb
xchg
jno
loop
data16
scas
push
fcmovu
adc
add
int
jno
adc
daa
adc
mov
das
inc
roll
pop
fwait
cld
rorl
daa
outsb
mov
push
lods
jle
imul
mov
incl
outsl
dec
or
mov
mov
cmc
push
sub
mov
pop
xchg
or
pop
mov
nop
mov
xlat
pop
mov
insb
ret
mov
enter
std
lods
jne
jle
sub
ret
iret
out
aaa
sub
mov
mov
mov
jnp
enter
sub
int3
jmp
ja
rcr
les
inc
cld
mov
pop
or
ret
iret
bound
cwtl
pop
sbb
cmp
jg
adc
mov
scas
jo
push
mov
cmp
push
lcall
aas
stos
xchg
pop
mov
cmp
xor
push
and
pop
jl
fwait
mov
mov
sub
mov
ret
mov
lcall
push
bound
jl
or
add
push
cmp
push
loop
ret
in
or
xor
mov
aaa
popf
jns
mov
xchg
cmp
mov
notb
xor
cltd
es
aas
std
cmp
xor
jp
gs
aaa
mov
mov
pop
inc
ret
and
pop
je
insl
lods
sbb
pop
call
add
cmp
ja
adcl
outsb
es
js
popf
push
cld
insl
push
inc
xor
mov
call
js
popf
xor
xor
sub
mov
add
adc
aad
lds
mov
test
and
and
mov
rorl
mov
sbb
rorl
xor
dec
mov
out
pop
insb
ret
mov
rclb
inc
popf
repnz
test
in
lahf
movsl
mov
adc
xlat
dec
pop
add
mov
loopne
sahf
mov
mov
sbb
and
into
jb
cmpsb
xor
cmp
fdivl
push
or
aam
mov
xchg
push
imul
sarl
xchg
mov
pop
cli
sub
lock
add
mov
pop
lods
dec
enter
outsb
lods
stos
xlat
push
data16
mov
inc
ja
pop
inc
pop
sahf
rcrl
xor
out
dec
nop
shrb
mov
das
jae
inc
shlb
inc
ret
xlat
mov
mov
inc
ret
clc
and
mov
ret
mov
xchg
in
fnstsw
pop
sbb
dec
or
mov
push
jecxz
or
xlat
in
loope
mov
mov
nop
dec
into
jp
mov
mov
nop
jl
jmp
or
sarl
cs
lret
jp
cli
push
xadd
ss
cmp
jno
mov
mov
push
ret
popf
outsl
push
mov
mov
into
idivl
xlat
gs
jo
mov
lahf
mov
add
fmull
fwait
movsl
test
test
cwtl
inc
sub
and
xor
inc
cmp
xor
incl
dec
stos
cmp
cwtl
cwtl
mov
sbb
mov
inc
ret
ja
inc
xchg
adc
xchg
xchg
scas
in
adc
pop
push
icebp
inc
sbb
rorl
jecxz
push
push
inc
jl
cmp
mov
pop
xchg
push
or
fcoms
jbe
enter
ret
mov
outsl
jmp
mov
lcall
or
mov
loopne
jp
add
mov
cmp
mov
push
les
pop
sbb
push
mov
cmp
push
sbb
ret
mov
stc
and
push
mov
out
pushf
push
das
das
push
mov
inc
fs
mov
pop
sar
test
xchg
xor
dec
cwtl
enter
int
dec
add
fidivrl
ja
cmp
das
test
adc
js
mov
std
inc
aad
je
daa
frstor
notb
push
fnstenv
sbb
outsl
add
cmp
pop
clc
and
adc
enter
push
adc
mov
bnd
popa
adcl
addr16
push
mov
inc
mov
jg
jno
jmp
xor
pushw
push
arpl
lods
inc
ret
mov
sbb
in
std
mov
lock
dec
ret
or
mov
iret
mov
add
mov
ss
xor
scas
fdivrp
push
mov
inc
fsubrs
je
ret
mov
mov
inc
fldcw
dec
loopne
or
cltd
out
pusha
ret
mov
mov
fdiv
pushf
lds
mov
cwtl
fisubs
dec
xor
daa
mov
movsl
lods
jg
mov
rorl
or
mov
ret
mov
inc
ret
pop
push
fwait
ret
fwait
pop
int3
xchg
imul
movsb
mov
int3
jae
xchg
fcomip
add
mov
ficoms
mov
mov
xchg
and
mov
push
jb
add
sub
out
pop
mov
push
cmp
push
orl
sub
mov
pop
pop
movsl
push
add
mov
jle
bound
xor
test
sbb
cmpsl
pop
popa
jp
cmp
jnp
test
aas
mov
add
add
sub
mov
xchg
insb
ret
pusha
ret
mov
je
daa
and
test
sub
mov
inc
adc
fdivs
in
jg
insl
inc
outsb
mov
mov
or
mov
dec
dec
inc
jl
and
mov
jl
int3
stos
inc
xor
and
jg
fiadds
aad
fdivrp
cmp
mov
fbld
bswap
sbb
test
cmp
jae
jo
test
pop
mov
inc
pop
mov
mov
pop
inc
adc
es
xor
jnp
add
jmp
add
mov
sub
lock
xchg
cmp
sbb
inc
fucomip
cltd
push
jno
ret
addr16
in
pusha
ret
mov
arpl
and
mov
push
mov
lret
nop
add
jo
add
shlb
testb
subl
add
add
sbb
cltd
mov
mov
movsl
inc
movsb
or
sub
xchg
jne
rcll
sti
jbe
dec
popa
mov
sbb
add
inc
adc
jle
sub
mov
mov
ss
xchg
ficoml
mov
jne
push
outsl
mov
jge
fdiv
test
xor
jecxz
or
mov
sub
add
adc
add
adc
mov
outsb
subl
cmp
jmp
inc
adc
cwtl
cli
inc
outsb
ds
ret
mov
and
or
inc
into
xchg
push
das
sbb
repnz
or
add
mov
inc
ret
addr16
scas
adc
ret
mov
inc
sbb
jge
ret
arpl
ret
or
fs
push
aaa
hlt
add
mov
ret
mov
scas
and
dec
ret
fchs
jmp
popa
dec
mov
mov
ret
mov
test
out
out
cmc
test
aaa
pop
sub
mov
fnstenv
push
sub
mov
mov
fiadds
orb
flds
adcl
push
add
mov
mov
xor
nop
xchg
xchg
adc
adc
out
mov
stc
adc
in
arpl
push
hlt
jge
xchg
cltd
jp
mov
outsb
popa
inc
movb
mov
push
push
push
sub
in
js
pop
dec
ret
cltd
out
sahf
add
mov
stos
sub
mov
aam
dec
jecxz
sbb
adc
ret
mov
jb
ret
mov
add
mov
out
adc
icebp
inc
ret
jno
movsl
sub
aam
fcmovb
fildll
shr
fdivrp
mov
imul
test
jl
ret
mov
mov
mov
xchg
add
mov
ret
push
fcmovne
insl
iret
popf
mov
mov
jb
push
test
or
jp
adc
mov
subl
out
icebp
mov
xchg
stos
in
xchg
fsubs
arpl
inc
icebp
add
xchg
and
mov
mov
pusha
ret
in
and
incb
sti
mov
orb
mov
mov
ret
mov
ret
and
pop
or
das
mov
mov
insb
ret
cmc
and
dec
ret
mov
call
in
jae
jg
jmp
inc
call
add
cwtl
outsb
mov
lcall
sbb
sbb
shl
xchg
loop
ret
mov
fldl
adc
mov
ret
das
test
sub
cmp
pop
test
and
inc
ret
out
push
pop
popa
mov
in
push
fiaddl
add
std
jp
in
ret
mov
ret
clc
or
mov
xlat
pop
adc
pop
mov
cmc
lret
mov
push
out
mov
cmc
in
outsl
cmp
mov
mov
sub
mov
sub
out
call
je
or
jge
sbb
push
sar
lret
xchg
pop
dec
ret
jbe
stos
into
xchg
push
mov
jne
into
jmp
ret
mov
fisubs
js
pop
lret
jb
mov
dec
ret
mov
mov
sbbb
or
in
ja
js
mov
add
data16
ficoms
js
add
mov
sarb
out
out
pop
mov
ret
mov
and
int
shlb
imul
rolb
in
fisttps
pop
xchg
push
jmp
mov
mov
enter
jecxz
cmp
call
sbb
mov
ret
in
xchg
pop
nop
pop
mov
xchg
or
mov
sub
jmp
mov
or
mov
dec
icebp
aam
add
mov
iret
xacquire
and
mov
dec
jge
sarl
ss
mov
mov
xchg
ja
ja
or
mov
loop
jg
ret
jne
sbb
stos
icebp
jle
ret
mov
or
outsb
decl
mov
add
inc
ret
inc
xchg
cmp
or
mov
out
push
cmp
push
sbb
repnz
mov
movsl
cmpsb
and
cmp
add
pushf
push
or
xchg
sub
out
movsl
push
push
sub
mov
inc
adc
pop
aaa
lock
jno
cmp
ljmp
xor
mov
fbstp
sub
mov
sbb
cmp
iret
ds
mov
ret
mov
sub
mov
loope
dec
push
js
jne
insl
xchg
push
movsl
test
push
stc
aaa
push
outsl
adc
aam
and
mov
ret
mov
icebp
fiaddl
dec
inc
cli
mov
push
cld
jae
sub
mov
movsl
jno
push
into
ds
and
call
imul
mov
imul
ret
mov
ljmp
adc
pop
jmp
cmp
fcomi
jno
lret
mov
adc
mov
ret
mov
movsl
dec
inc
inc
ret
shrl
add
dec
ret
sti
jge
and
inc
loope
or
adc
es
mov
xchg
xchg
stos
pop
lret
cli
insb
ret
jecxz
enter
add
sti
or
lahf
jecxz
inc
ret
mov
dec
xor
leave
clc
and
jl
pop
repz
pop
lret
cmc
es
daa
add
mov
dec
ret
mov
lret
sbb
inc
aad
sbb
ret
mov
and
mov
js
fcomps
push
jns
gs
repnz
rcrb
mov
mov
cmpsl
sub
mov
stos
ficoms
aas
sbb
pop
outsb
inc
movsb
loopne
cltd
jp
ds
xchg
xor
les
loopne
cmp
ret
mov
pop
jl
out
dec
ret
mov
dec
ret
mov
mov
ret
sub
adc
mov
jmp
xchg
xor
adc
mov
xchg
jb
and
mov
shlb
fimuls
and
xor
enter
jg
adc
dec
imul
cmp
test
mov
aas
pop
loopne
notl
mov
cmp
jno
push
bound
or
mov
mov
cmp
int
shll
sub
sbb
in
lock
ret
fdivs
sar
repz
push
xchg
icebp
nop
push
cmp
add
lods
jo
push
ret
mov
ret
mov
add
cli
testl
shlb
or
push
sub
ja
xorb
inc
aam
dec
or
mov
inc
sbb
clc
xor
fwait
push
stos
xchg
jge
xchg
stos
add
dec
jecxz
mov
jbe
push
push
mov
ret
mov
outsb
mov
mov
sarb
jo
ret
mov
mov
fidivrs
jecxz
outsb
imul
into
ja
stc
mov
push
dec
shrl
add
cli
ret
pop
jmp
mov
ret
pop
cmpl
mov
mov
add
lcall
fadds
push
roll
aas
into
ds
test
add
or
xlat
dec
sbb
mov
add
cmpsb
mov
dec
ret
enter
ret
shlb
sub
mov
xor
adcl
out
push
xchg
decb
test
mov
loope
in
loop
push
jmp
jne
lahf
mov
popa
and
mov
add
lret
push
out
fstpt
out
push
xor
mov
mov
sub
and
jge
push
inc
add
mov
sub
bound
ret
mov
fcomip
bound
inc
test
test
cwtl
in
loope
dec
sahf
dec
out
adc
mov
add
sub
xchg
ja
lahf
out
mov
xor
arpl
pop
dec
ret
fmulp
ja
lahf
inc
sbb
sub
mov
jae
cmp
imul
or
mov
mov
xchg
jg
rol
xor
sbb
mov
fsubl
rorl
add
sbb
pop
mov
mov
mov
add
ret
mov
leave
jno
lcall
push
cld
jns
xchg
jmp
ds
inc
add
mov
mov
ret
mov
mov
sbb
push
lret
mov
or
mov
pop
loope
into
jmp
mov
popa
rcll
adc
data16
mov
mov
jns
inc
sar
or
dec
test
cmp
sti
push
addl
fxch
ljmp
repnz
ret
push
movsl
jo
ret
jle
out
mov
jecxz
push
iret
lret
nop
xchg
sub
divl
mov
cmp
push
leave
jmp
mov
ret
mov
scas
stos
mov
aaa
xor
adc
jae
dec
ret
sbb
sbb
dec
cltd
notl
xor
mov
fcomps
push
pop
cld
sub
mov
ss
xlat
jnp
xorl
jle
xor
mov
addr16
xchg
pop
dec
ret
mov
shrb
cwtl
addl
testl
aad
rcr
ss
mov
movsl
push
dec
sbb
add
stos
dec
xor
pop
lds
div
aam
pop
test
ret
addr16
cs
je
xchg
iret
inc
sbb
mov
int
jns
dec
call
jl
push
xchg
jo
je
jo
cwtl
xor
jge
xchg
or
jge
leave
repz
and
push
mov
xor
xchg
jne
sub
aam
mov
jae
dec
imul
cli
sarb
jp
cli
gs
aaa
mov
push
cld
or
mov
adc
sar
pusha
ret
sub
inc
inc
mov
ret
mov
add
iret
xchg
jo
cli
arpl
and
test
mov
jp
sub
mov
fsub
inc
and
mov
ret
mov
popf
hlt
gs
xchg
mov
add
int
rcl
cmp
lcall
addb
in
mov
call
inc
ret
popa
sahf
or
mov
das
sbb
dec
add
mov
in
and
sub
cld
enter
ret
mov
fs
notb
sub
mov
ret
cli
test
mov
jecxz
sahf
aaa
jne
and
inc
xlat
les
add
xor
dec
ret
jnp
mov
movsl
stos
mov
xor
ret
mov
mov
jp
cwtl
jecxz
dec
lret
and
mov
xor
pop
insl
jnp
and
mov
push
lds
loopne
sarl
wbinvd
adc
mov
icebp
xor
ret
mov
push
or
pop
mov
or
ret
lods
sub
mov
or
iret
add
mov
jns
inc
ret
ret
dec
mov
nop
lock
and
je
loopne
push
dec
ret
pushl
fists
cmc
mov
bnd
sub
xchg
mov
outsb
sahf
test
iret
xchg
loopne
mov
mov
inc
insl
nop
adc
xlat
jl
pushf
and
mov
lahf
lea
add
inc
lods
adc
gs
jmp
ret
mov
add
ret
mov
inc
dec
sbb
mov
jmp
ret
mov
sbb
mov
fisubl
add
push
ret
lods
mov
iret
dec
ret
mov
js
cmp
xor
jnp
shrl
sahf
fldenv
adc
mov
add
stos
inc
pusha
ret
mov
add
adc
dec
dec
jo
or
mov
cmpsb
xchg
or
insl
outsb
ficoms
mov
dec
push
es
clc
pop
test
mov
push
adc
jl
inc
mov
add
add
mov
sahf
int3
dec
ret
mov
ret
mov
pop
xchg
insb
ret
mov
lods
jns
loop
fwait
xchg
ret
stos
fcompl
les
loope
fisubs
adc
in
push
fwait
mov
inc
popa
stos
mov
xor
in
daa
das
les
adc
ret
loop
add
insb
ret
inc
call
ret
mov
mov
into
sbb
jl
and
cld
pop
xchg
mov
rcrb
push
mov
lret
pusha
ret
mov
push
je
in
arpl
xchg
bound
dec
ret
mov
pop
add
shl
pop
rcrb
popa
xor
sub
stos
sbb
jns
out
ret
test
jg
movsl
push
ds
ret
pop
dec
and
push
clc
pop
iret
mov
push
fstl
inc
ret
ljmp
roll
add
out
add
mov
test
mov
das
push
mov
repz
fsubs
ret
andb
mov
mov
xor
add
mov
push
call
add
mov
or
cmpl
push
mov
or
pop
cmp
and
mov
inc
ret
mov
ret
sbb
sub
pushf
mov
rcr
in
dec
cwtl
mov
sub
sarb
cmp
add
addr16
ret
add
xchg
repz
jg
imul
aaa
sbb
push
sarb
cmp
xor
not
loopne
mov
stos
lret
sar
xlat
xchg
out
add
mov
mov
into
data16
ret
cmp
lea
lock
sub
mov
call
cmp
rcll
decb
mull
movsl
loopne
mov
mov
in
cld
jecxz
std
pop
jle
ret
mov
movsb
hlt
jb
sti
jno
fisttpl
or
mov
subl
cwtl
cli
cwtl
daa
aaa
aas
jmp
inc
mov
fs
dec
and
scas
shll
add
out
stos
xchg
jmp
xchg
add
mov
inc
ret
sub
mov
pop
shl
clc
aad
xchg
pop
leave
adc
push
jno
jle
aaa
imul
add
incb
cmpsb
dec
xchg
pop
cmp
adc
xchg
pushf
call
adc
mov
add
lods
fs
mov
jae
mov
add
mov
jl
jg
daa
pop
or
inc
ret
mov
sbb
add
les
mov
jecxz
jnp
daa
fldenv
clc
cmp
mov
inc
ret
mov
enter
mov
add
jns
int3
inc
jno
je
iret
iret
incl
push
test
mov
fisubrs
gs
xor
ret
mov
pop
adc
fcmovnu
push
add
mov
cmp
and
add
mov
mov
adc
pop
repnz
dec
stos
sbb
and
mov
cli
scas
cs
jp
cmpsb
insb
ret
popa
and
aam
jb
xchg
adc
add
subl
std
push
cmp
test
into
loop
push
push
ficompl
and
mov
xor
cmp
inc
ret
mov
sub
js
sub
mov
jb
mov
mov
jae
popa
jbe
sbb
cmp
add
mov
xor
push
pop
sub
cmc
mov
mov
jo
cmpsl
push
inc
mov
inc
test
mov
fwait
cli
jl
and
mov
sbb
add
fdivs
dec
ret
jmp
push
xor
ret
mov
jnp
mov
out
mov
sbb
ret
stos
or
pushf
jo
lock
mov
inc
test
inc
adc
aas
fistps
shrb
and
mov
lahf
pop
jmp
std
cmp
pushf
in
clc
xchg
dec
xchg
imul
lods
ret
pop
lods
xchg
mov
xor
ret
mov
fistps
add
mov
stos
xchg
stc
add
xchg
fdivl
pop
incl
lret
mov
sbbb
jp
ret
add
movsl
sbb
in
aaa
in
sub
mov
or
mov
add
ret
mov
ret
mov
xchg
mov
gs
imul
sub
cmp
leave
pop
push
ret
pop
dec
orl
addr16
mov
xchg
push
mov
ja
adc
pop
xchg
shl
jecxz
cmpl
pop
inc
add
loope
jns
