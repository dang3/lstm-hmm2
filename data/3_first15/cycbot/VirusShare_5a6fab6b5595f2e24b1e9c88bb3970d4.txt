mov
mov
test
adc
lret
popa
push
lds
cmp
enter
sub
push
adc
and
rcll
notl
lods
mov
add
shl
lock
scas
sbb
int
int3
repz
lcall
pop
adc
sahf
xchg
decb
or
cli
push
or
fs
fsub
push
icebp
mov
cmp
sub
ret
cmp
outsl
inc
add
outsl
jb
pop
mov
inc
push
lods
incl
jl
lods
out
imul
mov
ficoms
into
jle
cli
addb
add
push
jp
mov
sub
add
loop
jecxz
scas
dec
adc
xor
push
je
in
mov
adc
and
sub
or
jmp
js
lea
inc
add
ret
mov
ret
icebp
sub
in
sub
fildll
jp
out
jo
js
bound
negb
clc
inc
add
jmp
stos
scas
push
mov
sub
mov
insl
xor
stos
lods
aas
in
mov
addb
cmp
add
xlat
push
adc
scas
xlat
addr16
mov
out
mov
mov
cmp
outsl
adc
cmp
jo
jnp
add
xor
dec
lods
xchg
add
pop
push
sbb
loope
dec
push
sbb
xchg
pop
es
lds
popa
adc
ja
mov
mov
sahf
fnsave
rolb
in
shrl
or
cmpsl
ljmp
add
int
add
cmc
iret
mov
and
out
aad
pushf
jno
imul
cmp
mov
repz
in
imul
mov
aad
stc
mov
mov
pop
mov
addb
add
in
lret
call
add
add
jmp
add
fldl
stos
out
push
add
loope
cmp
bound
lahf
shrb
fiadds
add
lea
cli
add
mov
and
xchg
jne
push
insb
cmp
mov
in
push
loope
cmc
and
sub
adc
inc
add
add
jo
mov
add
xchg
dec
lret
mov
push
pushl
int3
xchg
or
bound
test
push
jno
je
jmp
xchg
cmp
add
xchg
adc
mov
mov
cld
cmp
mull
jl
add
push
push
jno
adc
bound
adc
ja
clc
ljmp
imul
std
ret
sub
mov
arpl
add
hlt
gs
mov
xorl
add
add
or
mov
leave
sbb
cmp
aas
mov
mov
sub
and
mov
adc
das
les
imul
ja
xchg
call
cli
popf
movsl
rolb
adc
out
add
fldenv
pop
imul
cmpsl
push
enter
or
shrl
mov
sti
call
and
bound
add
or
push
aas
aas
addb
fsubr
add
pop
and
out
addb
mov
and
jp
pop
icebp
lods
insl
stos
dec
mov
xor
inc
add
cmp
add
daa
xchg
jb
call
arpl
stos
insl
aas
sub
aad
sbb
fcoml
dec
stc
insl
daa
hlt
ss
addb
add
add
sub
sub
sub
repz
rcl
jp
jmp
jne
clc
inc
add
popf
sbb
rol
add
adc
sub
mov
insb
sbb
mov
movsb
dec
xchg
aad
add
pop
add
mov
orl
in
fldl
sahf
sbb
out
add
ljmp
xchg
cmp
xchg
xor
sub
scas
aas
movb
dec
and
fisttpll
mov
aad
xlat
clc
inc
fadd
out
dec
or
lods
lea
add
mov
in
cltd
sub
cwtl
lret
add
xchg
mov
fcmovb
mov
std
imull
adc
add
push
rcl
mov
dec
xchg
ljmp
aad
movsb
inc
xlat
jp
mov
add
pusha
add
mov
cmp
clc
aaa
push
outsb
push
mov
aaa
add
jge
mov
adc
rorb
inc
xor
jle
fndisi(8087
jecxz
jns
out
jae
mov
jne
xchg
roll
addb
jge
add
lahf
xchg
rolb
add
add
loopne
add
push
lods
mov
and
roll
add
fbstp
movl
sub
call
jo
ja
je
sub
or
rorl
xor
call
andl
dec
cmp
mov
jnp
mov
data16
in
lock
movsl
push
cmp
push
adc
jle
hlt
sbb
not
cmp
hlt
ljmp
sbb
out
mov
pop
addb
outsb
push
insb
jnp
insl
mov
adc
add
rcll
iret
inc
add
jl
jle
mov
enter
rorl
cwtl
stos
push
pop
xor
insb
cmpl
in
sub
gs
jp
push
and
jl
inc
add
test
push
fcoms
xor
fsubs
jne
int
out
ds
int3
cmpsb
add
dec
mov
insb
test
cmp
add
outsl
out
hlt
push
lods
movb
out
imul
sub
in
dec
cmp
pop
lods
dec
nop
enter
ja
lret
fildll
jae
cld
xchg
xchg
lret
push
add
mov
inc
add
mov
push
push
jp
inc
add
subl
adc
pop
frstor
sbb
and
int
sub
jne
mov
lds
addr16
loopne
into
xchg
inc
add
je
insl
cmp
in
push
hlt
int3
call
push
jne
std
adc
cmp
popa
out
adc
jp
pop
mov
sub
mov
iret
out
ret
add
push
jb
pop
outsb
sbb
add
scas
mov
fdivrp
sub
out
mov
aaa
dec
jmp
cltd
imul
cmp
inc
or
lcall
jbe
mov
nop
xor
push
movsb
pop
int
fsts
dec
mov
imul
loop
and
dec
fnstcw
jbe
or
add
mov
add
rol
jbe
add
xlat
xchg
mov
xchg
adc
pop
insl
addb
fists
mov
dec
xchg
push
int
fadd
add
xchg
rolb
inc
andl
and
sahf
jbe
daa
test
lods
fisttpll
mov
je
push
std
sahf
xlat
out
jecxz
mov
dec
repz
sub
adc
imul
xchg
mov
in
add
int3
pushw
or
fidivrl
sbb
pop
test
call
jb
scas
in
inc
loopne
push
push
mov
xor
dec
mov
xchg
xlat
add
push
add
enter
loopne
add
cmp
imul
xor
into
push
scas
movsl
leave
into
xchg
mov
sarl
xchg
xor
dec
movb
inc
add
add
jle
inc
pop
test
arpl
push
data16
addr16
out
in
jae
add
lret
add
ret
ss
xor
leave
dec
in
addb
mov
inc
mov
cmp
popf
xchg
loop
or
fisttps
and
add
mov
sbb
push
cmp
inc
cli
lret
add
mov
shrl
adc
push
cli
insl
sarb
mov
stos
ljmp
pop
mov
push
lcall
jbe
fbld
xor
fdivrp
xchg
nop
js
cmp
dec
mov
mov
add
call
scas
sbb
dec
nopl
push
add
add
das
movsb
push
mov
adc
xchg
int
push
or
sbb
mov
cmpsl
push
add
xchg
testb
addb
sbb
jge,pn
or
push
aam
sbb
mov
repnz
and
jecxz
loop
inc
fucom
jge
cmp
outsl
in
mov
xchg
rolb
inc
add
and
addr16
in
aam
mov
dec
scas
out
lret
cmp
add
dec
sbbl
popf
rcrb
es
fsubr
pop
jg
inc
stos
sbb
insl
jecxz
or
add
push
add
aam
test
xor
xor
and
xor
mov
pop
sub
sub
pop
incb
add
fisubs
jne
pushf
cmp
inc
cmc
sbb
sub
xchg
repz
or
out
cmc
sahf
jecxz
add
mov
xlat
cld
dec
sbb
les
lret
je
add
xor
sbb
daa
andl
push
loop
shll
fadds
adc
ja
pusha
add
add
adc
add
test
or
add
aad
fimuls
sti
addr16
pop
push
pop
add
rcrb
gs
push
insb
fistl
mov
add
dec
inc
add
mov
aad
test
sbb
pop
das
ja
xlat
push
insb
and
pushf
adc
sub
pop
jnp
lcall
dec
mov
ret
ljmp
stos
scas
inc
add
lock
mov
mov
outsb
mov
or
adcl
aad
mov
dec
mov
hlt
add
lock
or
stos
mov
test
stc
std
inc
xor
mov
push
in
leave
mov
add
ds
mov
int
xor
pop
push
jg
bound
mov
sbb
in
pusha
add
out
inc
jecxz
mov
lcall
pop
dec
jb
add
add
int3
idiv
test
out
addr16
dec
stos
fcoml
xchg
enter
xchg
outsl
xchg
addb
loope
leave
out
push
lea
xchg
xchg
out
fidivs
dec
jg
mov
sbb
rclb
ret
lods
dec
add
pop
std
cmp
out
ja
sahf
sbb
cmp
mov
bound
sub
scas
jb
mov
or
lds
add
fs
jp
push
lret
cmp
ret
inc
xchg
pop
pop
loop
xchg
jmp
or
sub
jbe
loop
insl
jbe,pt
cltd
lcall
addr16
mov
inc
add
cltd
jg
cmp
or
and
ret
in
mov
add
xor
insl
ret
dec
test
pop
sbb
jo
jnp
mov
and
push
mov
add
fidivrl
inc
add
cmp
adc
add
push
add
imul
dec
movsl
xchg
and
jb
sbb
adc
push
lret
push
loopne
addb
adc
lods
lods
mov
xor
fildl
add
sub
or
ds
shr
sub
push
bound
or
mov
sub
or
les
mov
add
std
ret
add
jns
inc
add
dec
out
cmc
test
add
mov
repnz
ljmp
dec
in
pop
sub
pop
sahf
push
or
fimull
jae
push
clc
iret
mov
or
mov
icebp
sbb
adc
addb
lock
iret
jmp
push
xchg
mov
lret
sti
movb
lahf
fwait
mov
jo
gs
add
add
mov
stos
repz
cmpsl
gs
jmp
in
sub
add
add
iret
rcll
popf
out
aam
rolb
das
mov
std
sub
dec
cwtl
stc
pusha
add
add
or
pop
decl
in
into
adc
vmovntps
shr
andb
in
movsb
add
add
cld
push
push
push
push
push
push
push
push
bnd
mov
pop
dec
imul
cmp
ss
push
call
cmp
je
mov
lea
push
push
es
call
push
jmp
icebp
mov
nop
cs
lea
xchg
or
lock
lea
repnz
pop
add
ss
cs
push
lret
add
add
jge
cli
push
xlat
sub
imul
add
push
pop
jns
lea
dec
mov
pmullw
add
inc
add
add
inc
fldenv
xchg
sbb
in
mov
lcall
pop
stc
mov
add
test
jne
xchg
jge
mov
adc
add
pop
out
sub
cli
ja
daa
out
test
jmp
mov
add
ja
mov
imul
aam
cli
neg
jle
jae
push
cmp
inc
add
in
push
imul
xchg
int3
pop
mov
in
inc
js
lods
in
add
bswap
inc
add
es
stos
hlt
mov
or
jnp
add
push
xchg
add
cmp
xor
stos
dec
cltd
scas
mov
outsl
int
xor
push
test
and
pop
mov
cmpsb
insl
lret
movsb
dec
imul
add
jbe
add
xor
shll
roll
out
lahf
in
xor
stos
xchg
xor
jge
add
adc
add
add
lret
push
pop
push
add
icebp
jb
in
add
scas
mov
sbb
mov
mov
xor
fadds
pop
lea
add
loope
movsl
jns
or
outsl
imul
xchg
and
xchg
movsb
sbb
dec
mov
iret
mov
xchg
mov
sahf
leave
adc
loope
dec
xchg
xor
add
dec
and
test
fisttpll
mov
daa
add
scas
inc
add
out
add
xlat
movsl
xlat
das
in
cmp
add
test
enter
adc
leave
rolb
dec
mov
cld
pop
outsl
mov
add
pop
adc
adc
sahf
jne
add
test
aaa
mov
outsl
push
in
movsb
repnz
pop
and
cwtl
lahf
ss
test
add
pop
pop
add
xor
adc
add
jecxz
aad
adc
mov
cmpsl
jmp
cmp
aad
leave
adc
push
dec
mov
aas
ror
lock
leave
mov
and
xchg
sbb
jle
call
jo
ja
mov
in
mov
inc
add
dec
mov
cmp
cmpsb
cwtl
into
xchg
mov
xchg
push
cmpsl
or
or
xchg
bound
rorl
mov
push
add
ret
and
dec
fldcw
add
lods
movsb
ss
mov
ljmp
add
dec
cmpsb
xlat
xchg
sbb
sbb
cltd
sbb
add
push
rorb
push
popa
cmp
inc
add
push
pushf
inc
add
das
push
push
imul
adc
arpl
add
es
mov
add
xor
stc
ret
and
gs
test
stc
sub
stos
cmp
dec
cld
cmpl
addb
pmaddwd
in
testb
add
outsl
aaa
mov
movb
pop
in
or
add
and
dec
stos
mov
imul
and
jbe
mull
mov
hlt
mov
sub
pop
and
add
cmp
mov
js
mov
mov
lret
cli
fwait
aad
xor
aad
add
mov
cmp
int3
xchg
imul
jle,pt
in
mov
movb
mov
push
adc
and
aaa
sbb
add
pop
lret
sbb
outsb
imul
xchg
xlat
mov
sbb
dec
xchg
jns
sub
push
cwtl
aam
jmp
xchg
ret
jbe
add
xor
cld
call
or
fmull
pushf
lret
push
pop
jl,pt
stc
mov
push
fwait
mov
sqrtps
dec
rep
dec
push
ret
insb
cmp
ret
mov
js
xchg
fsubl
outsl
xchg
add
adc
fildl
ja
sbb
inc
add
aad
xor
pop
cmp
inc
push
inc
shrb
loop
iret
movb
sti
insb
in
mov
cli
xchg
mov
std
sbb
sbb
xor
lds
mov
mov
jmp
xchg
in
les
cs
inc
add
push
add
test
mov
fidivrl
pop
add
cmp
outsl
test
lret
fistps
popa
mov
outsb
repnz
mov
cmpsb
les
mov
add
add
jl
xchg
repz
lret
xchg
aam
and
inc
insb
loop
cli
mov
and
inc
add
pop
adc
icebp
xchg
or
dec
cmpsl
outsl
fildll
cltd
pop
das
xchg
out
sbb
xor
movsb
mov
adc
adc
or
add
lods
stos
arpl
adc
xchg
test
push
add
add
mov
or
xor
mov
mov
addb
mov
jge
cmc
pop
cmp
pusha
add
fidivs
call
addr16
mov
add
inc
xlat
mov
pushf
dec
xor
add
ljmp
add
push
xor
pop
ret
inc
add
dec
out
jecxz
dec
or
dec
xchg
lret
fadds
add
ss
imul
les
stc
mov
movb
xor
das
fwait
pop
clc
jl
lret
jne
jle
sub
sub
sbb
stos
pop
lcall
jns
movsl
inc
add
xor
push
ret
push
std
pushl
add
notl
bnd
add
lock
cmp
xchg
dec
push
xor
add
jno
add
mov
scas
sub
adc
mov
test
das
xor
daa
jp
insl
jge
inc
push
cmp
cld
inc
add
pushf
xchg
icebp
std
xor
jg
fildll
popf
lock
mov
aad
mov
mov
add
mov
xor
mov
push
stc
test
push
addl
cmp
cld
stos
cld
pop
adcl
cmp
xchg
rorb
je
and
popa
addb
mov
bound
pop
mov
dec
dec
jl
fistpl
push
fwait
push
es
ja
mov
add
outsb
bound
inc
add
pop
inc
add
jecxz
fadd
js
orl
rorl
jns
stos
in
popf
inc
add
int3
arpl
fisttps
sti
lods
data16
int
stos
pop
faddl
and
mov
pop
xor
mov
mov
int
test
fsubrs
gs
scas
or
jb
push
inc
insl
lds
lods
xor
pop
mov
cmc
aam
daa
mov
cli
adc
add
sub
sbb
cltd
lock
push
mov
push
popa
ja
xor
jo
mov
fnstsw
addb
pop
xor
test
dec
aam
push
repnz
ret
call
push
mov
add
stos
add
outsl
lcall
pop
inc
inc
push
jno
mov
pusha
add
sub
lahf
push
mov
cmp
and
dec
mov
arpl
fidivs
xor
add
mov
pop
insl
test
add
push
in
mov
aam
lahf
fnstsw
fiadds
in
xor
and
pop
and
arpl
ds
sti
lds
roll
add
sub
push
lret
jmp
ret
adc
xor
cmp
xchg
jb
mov
dec
imul
lcall
xor
jb
sbb
sarl
inc
std
adc
pop
cmp
in
lods
dec
sub
loopne
sbb
mov
sub
xor
fs
movsl
jg
push
sub
add
outsb
xchg
mov
imul
pop
push
daa
incl
add
fcompl
bound
lahf
pop
fld
add
insb
mov
je
mov
stos
leave
test
sbb
add
popf
imull
popf
js
cmc
int
call
sbb
mov
xchg
cld
dec
rolb
daa
rolb
ja
rcr
sub
adc
inc
add
call
ja
cmp
addr16
ds
push
and
int
lock
js
popa
jbe
mov
fbstp
mov
addb
dec
pop
adc
xchg
xlat
xorl
in
push
adc
loopnew
imul
cltd
xchg
jns
dec
gs
xor
mov
sub
pop
push
stc
jno
cmp
jbe
add
and
and
daa
imul
dec
cs
push
fs
jg
movd
push
movl
add
jmp
ret
mov
mov
push
addb
add
sbb
sbb
push
mov
icebp
sub
in
or
gs
iret
dec
mov
push
sti
leave
add
cmp
xor
add
dec
out
jp
cltd
lret
aad
pop
aam
add
jne
dec
lods
pop
mov
aam
dec
fimull
jne
adc
inc
add
bound
mov
in
mov
repnz
in
jg
add
mov
ret
add
and
inc
ret
fsubrs
pop
mov
inc
ss
leave
jecxz
xor
add
ret
fucomi
pop
mov
imul
repz
mov
je
fwait
pop
addb
jl
in
mov
jp
insb
loope
cmp
jmp
add
dec
or
and
movb
xor
xor
push
ja
repz
add
add
cmp
shlb
lock
add
push
lea
add
cld
std
out
inc
mov
mov
neg
sub
dec
jmp
mov
rcr
jnp
call
arpl
or
fmull
add
lods
add
pop
les
sub
add
test
dec
jecxz
lcall
sahf
or
arpl
xor
cli
push
das
roll
mov
mov
push
aaa
adc
aas
lock
pop
enter
xor
adc
call
ss
sub
stos
sbb
mov
cmc
xchg
dec
mov
add
dec
mov
add
dec
push
and
dec
cmp
sub
rolb
loope
aam
adc
add
adc
add
loop
insb
mov
in
cmp
repnz
not
cmp
and
add
in
or
xlat
and
pop
sbb
mov
add
cmp
add
mov
jo
jb
sbb
push
jg
popf
out
incl
nop
push
mov
xor
cmc
cs
aad
mov
and
add
add
xor
xchg
add
icebp
adc
pop
sub
adc
add
mov
sbb
jp
das
xchg
sub
sub
aam
std
pop
dec
pop
jl,pt
cmp
addb
sbb
test
xchg
add
add
xor
xchg
outsb
jbe
pop
cmp
inc
add
or
jl
mov
push
cmpsl
dec
and
jne
pop
xor
adc
daa
repnz
xchg
jne
add
pop
pop
in
and
cld
fistl
add
add
mov
sub
xor
aaa
cli
xor
lahf
sbb
gs
in
push
inc
fmull
add
add
sahf
mov
and
jmp
gs
aam
leave
push
mov
pop
aaa
jl
ss
add
xor
inc
add
cld
and
jne
mov
add
insl
mov
movsl
stc
dec
xor
test
scas
xlat
pusha
add
fsubl
pop
push
inc
add
in
sub
add
loopne
cmp
push
mov
pop
stc
sbb
add
test
test
add
arpl
lfs
dec
cmp
add
dec
xor
out
inc
pop
sarb
mov
lcall
jp
cmp
add
dec
data16
lcall
jno
fldl
sub
rcll
add
lds
ljmp
cmp
xor
add
xor
jg
cld
daa
inc
add
jg
sti
cmpsb
mov
test
divps
scas
lretw
add
adc
mov
and
dec
jecxz
mov
daa
lds
stc
ficoml
rcrb
cmp
adc
mov
or
clc
mov
jg
leave
pop
pushf
gs
sub
or
testl
int
jnp
into
ror
mov
fistpll
adc
add
mov
jecxz
push
cmpsl
insl
mov
orl
aaa
movsl
push
lds
inc
xor
add
int3
cmp
jnp
add
jl
jbe
jno
pop
loope
pushf
sbb
mov
jl
xchg
inc
add
sub
add
movsb
movb
sbb
mov
add
push
push
icebp
dec
or
mov
adc
mov
js
jle
enter
add
movsb
aad
push
add
aad
sbb
push
push
aaa
into
outsb
sbb
mov
out
fimuls
rorl
push
add
cli
mov
dec
stc
iretw
mov
or
cs
add
xor
repnz
pop
insb
push
repnz
cmp
inc
add
adc
rcr
add
mov
stc
cmp
dec
fdivs
add
js
out
inc
dec
mov
mov
add
add
rorl
hlt
adc
xor
in
in
mov
pop
xchg
mov
add
pop
mov
addr16
cmp
in
jnp
jp
add
and
add
mov
add
dec
xchg
roll
add
and
or
push
les
fisubrs
scas
stc
sub
mov
jbe
sti
xchg
in
insb
rolb
sahf
sub
pop
pop
movsl
loope
rolb
cltd
imulb
into
ret
in
mov
mov
xchg
mov
cmp
add
test
sub
add
shrb
mov
dec
rorl
cmp
maxps
fsubrs
fistpll
jmp
pop
leave
sub
add
movsl
cs
loop
dec
repnz
xor
add
xchg
pop
rcll
je
mov
mov
xchg
mov
mov
test
xchg
push
insb
add
add
mov
dec
fxch
mov
add
xchg
sub
ret
cmp
scas
je
cmpsl
xchg
add
test
xorl
shlb
lahf
sub
lret
pop
sbb
movl
jmp
in
imul
dec
jmp
addr16
adc
leave
mov
add
movb
sbb
xor
dec
pop
shll
sbb
cmc
sahf
imul
js
cmp
outsb
pushf
mov
cmpsb
aas
mov
in
mov
add
sbb
fldl
xor
icebp
push
fdivs
movb
fdivrs
pushf
pop
ljmp
out
cs
lret
adc
mov
mov
mov
test
adc
add
testb
cmpsl
jmp
cltd
inc
add
sbb
jp
mov
ljmp
or
xchg
xchg
dec
stos
cmc
clc
jecxz
sbb
add
and
or
sbb
cmp
repnz
cmc
aaa
fcmovb
add
xchg
cltd
push
pop
aad
xchg
stos
gs
js
dec
adc
mov
lcall
ss
mov
scas
les
xor
out
addb
clc
jle
cmp
lret
jle
or
add
inc
inc
add
mov
inc
cmp
imul
fwait
mov
push
cli
inc
mov
test
adc
fldcw
clc
int
sub
sub
add
inc
out
or
lods
sbb
rcll
addb
movsb
imul
je
or
push
enter
sub
mov
bound
andl
xor
add
repnz
mov
dec
lcall
clc
sub
insb
cmp
outsl
xchg
sub
ss
sub
aaa
add
repnz
je
and
aaa
add
xor
pop
scas
repnz
jae
mov
add
mov
lret
or
je
cmc
xchg
jbe
mov
pop
clc
jle
cmpsb
push
dec
xchg
ficoms
sbb
mov
fmull
mov
push
sub
sbb
inc
sahf
repnz
out
jb,pt
movsb
testb
int3
or
loope
push
imul
cmp
add
dec
lret
movsl
jl
test
jp
ljmp
dec
jno
aad
mov
add
addb
mov
jp
add
out
std
test
pop
or
loop
add
daa
repnz
jnp
inc
add
in
mov
jno
add
push
fldt
dec
push
and
test
je
addr16
xorl
popf
in
pusha
add
add
bound
push
fistpll
test
ja
cmp
jbe
repz
lahf
outsl
gs
xchg
mov
rcrl
add
xchg
xchg
dec
pop
addl
enter
adc
xlat
pop
imul
cmc
mov
add
jnp
repz
fnstenv
add
loop
pop
mov
jecxz
mov
pop
cs
add
int3
mov
es
pusha
add
mov
xchg
mov
push
mov
add
push
add
outsb
sbb
xchg
cmpsw
into
imul
jmp
divb
addl
sub
into
adc
push
mov
add
xor
mov
clc
ja
in
ficompl
and
mov
sub
pushf
or
repnz
into
inc
add
lret
mov
add
or
push
jae
or
push
mov
mov
xorl
je
add
xlat
iret
outsb
icebp
mov
fcomps
sub
adc
mov
out
mov
push
push
enter
mov
or
sub
add
ds
clc
inc
add
add
adc
mov
pushf
fldenv
mov
add
adc
sar
dec
xchg
jg
or
cli
pop
das
int
add
pop
lret
lret
dec
cs
enter
leave
cwtl
xchg
mov
xchg
pop
cwtl
pusha
add
jb
sbb
mov
pushf
add
jo
jge
add
lea
std
in
sbb
pop
mov
scas
or
ss
repnz
ret
cltd
xchg
aad
sbb
add
mov
insb
xor
cmp
addb
dec
cmp
addl
inc
add
sub
ficoms
add
dec
dec
fsubrs
xchg
jnp
inc
add
cld
outsb
cmpsl
ljmp
imul
arpl
add
ror
push
repnz
pusha
add
popa
cmp
add
or
popa
les
cld
mov
adcl
inc
add
rorl
sbb
cli
je
xchg
sbb
cmpsl
movb
shlb
add
jl
mov
mov
xor
pushf
mov
xor
add
sbb
bound
mov
roll
cmp
pop
mov
cltd
lea
ja
push
clc
std
adc
add
divl
fst
sub
add
fnstcw
jle
xchg
pop
jbe
shll
add
int
fldl
add
shl
stos
pop
cwtl
sub
add
aad
inc
add
push
xchg
mov
jecxz
and
sub
sbb
in
adc
inc
add
test
out
push
jne
lods
incl
jne
repz
pop
mov
cs
mov
mov
jecxz
xor
mov
les
jp
divl
les
push
dec
movb
xchg
in
mov
gs
scas
sbb
out
stos
sbb
fistps
outsl
or
or
rolb
ds
fucom
addb
inc
add
add
je
outsl
dec
addb
pop
test
adc
jl
mov
add
enter
mov
das
stos
cld
jno
idivb
add
mov
jo
fcoms
add
fmull
adc
enter
add
sub
fdivrp
imul
fsubr
xlat
pop
out
add
xchg
add
pop
fistl
inc
add
cmp
aad
sbb
lret
mov
push
push
rcl
jmp
xchg
popa
popa
std
pop
repz
jno
ljmp
in
xchg
clc
fldcw
std
jp
add
or
mov
cltd
and
mov
adc
clc
popl
arpl
cs
fistps
dec
aad
rolb
or
inc
ficompl
inc
jp
lret
fsubl
nop
jmp
xchg
jle
mov
repz
pop
out
ret
adc
sbb
outsl
inc
add
aad
lds
rorb
add
jp
in
pop
call
mov
jnp
lret
test
mov
jle
push
inc
cmp
popf
shr
xor
mov
int3
adc
shl
loope
xchg
sbb
outsl
pop
aad
fildll
xchg
mov
add
imul
mov
mov
xchg
int3
cli
xchg
dec
or
add
sbb
xor
loopne
sti
lock
add
dec
sub
repnz
pop
xchg
fwait
dec
sub
mov
das
push
mov
vmovq
sbb
outsl
out
lock
adc
orl
adcl
xchg
int3
inc
fcompl
imul
sub
mov
xchg
int
add
les
push
nop
jne
add
add
aas
mov
add
xlat
fwait
mov
dec
sub
cltd
mov
dec
fsubrl
std
jg
out
push
into
pushf
inc
add
dec
add
out
adc
sub
adc
jno
mov
inc
add
inc
mov
jno
add
sbb
jecxz
and
test
cmp
sbbl
test
hlt
jb
add
pop
add
sub
xchg
adc
clc
sub
stos
dec
or
rclb
cmc
pushf
ja
aad
loopne
fdivl
and
mov
aad
pop
mov
inc
add
repnz
jecxz
and
pop
arpl
addr16
negw
out
add
sub
add
or
outsl
pop
pop
mov
push
mov
ret
cmpsl
repz
mov
mov
cltd
jmp
fldl
add
pop
out
mov
pop
loopne
loop
int3
jl
in
loopne
mov
sti
lds
in
aad
or
mov
pop
enter
mov
aas
or
addb
xor
and
push
add
icebp
inc
sbb
sbb
sub
sti
and
jae
ja
jle
hlt
addr16
pop
mov
or
adc
sti
add
rolb
jecxz
test
gs
rolb
pop
push
sti
xchg
iret
xor
push
into
in
or
dec
mov
into
pop
xor
lds
fimuls
sbb
addb
mov
sbb
loop
add
fidivs
jne
movsl
ljmp
sbb
mov
add
add
dec
push
jae
push
pop
pop
xchg
addb
push
add
mov
xor
mov
test
and
test
jae
mov
push
dec
jo
inc
add
push
cmp
jg
add
mov
leave
loop
addr16
loopne
punpckldq
lock
bound
in
adc
adc
insl
cmp
xor
pop
and
xchg
jae
mov
mov
fdivrl
stos
inc
insb
and
pop
adc
dec
add
lods
icebp
mov
imul
fs
mov
mov
int3
stos
mov
js
xor
inc
add
mov
inc
popf
or
fucom
mov
mov
fistl
bt
xchg
out
leave
xor
pop
roll
cld
push
add
inc
cwtl
jmp
enter
mov
jle
dec
popf
inc
add
in
in
mov
clc
mov
and
adc
js
fnstcw
testb
pop
clc
out
test
add
ja
ja
or
jno
fs
hlt
out
inc
jg
mov
cltd
aad
push
in
pop
nop
aad
pop
dec
rolb
ja
add
stc
mov
xchg
cmpsb
shll
jg
jb
sub
mov
sbb
loope
mov
mov
or
js
movb
dec
rolb
aam
les
pusha
add
add
add
nop
add
lods
adc
movb
cmpsl
test
loope
jb
outsl
out
mov
dec
and
mov
or
dec
in
pop
ret
jb
adc
add
jb
jne
push
or
mov
xchg
movb
mov
stos
int
xchg
insl
adc
mov
fstpl
dec
adc
xchg
lahf
xor
cmp
out
rolb
jg
addb
insb
push
add
adc
fisubs
add
jnp
imul
inc
add
add
push
pop
into
or
or
jecxz
dec
addb
add
mov
push
scas
inc
add
adc
fwait
imul
lcall
out
push
cwtl
xchg
pop
mov
cmc
lock
notb
adc
cld
jo
scas
das
mov
pop
movsl
mov
jo
mov
addb
push
sub
jmp
call
mov
aaa
xchg
jecxz
in
xor
add
mov
addb
add
ss
push
jmp
pop
add
cmp
push
mov
jne
mov
insb
inc
mov
push
faddl
mov
mov
adc
add
push
xor
cmp
or
sub
pop
push
sbb
mov
addb
jmp
add
test
pop
pop
dec
mov
into
push
mov
adc
add
add
jb
movsb
and
mov
cli
mov
and
add
inc
add
inc
clc
scas
ja
cmpsb
xor
adc
jbe
rolb
xchg
sti
mov
mov
xchg
rolb
add
push
add
in
add
or
int3
aas
sbb
push
mov
outsb
std
push
rclb
mov
roll
xchg
out
add
dec
push
daa
pop
inc
add
lcall
flds
xchg
adc
push
or
dec
filds
sub
mov
xchg
jnp
pop
xor
cld
cmp
add
iret
mov
mov
sbb
and
cmp
lret
lods
sub
mov
orl
fistpll
je
mov
das
push
mov
add
test
jecxz
xlat
sbb
mov
ljmp
imul
insb
dec
ret
loope
inc
xchg
pop
test
sahf
sbb
xor
add
movsl
sbb
xchg
call
ss
push
aad
cmpsl
mov
mov
out
daa
cmp
add
push
addb
xlat
inc
add
pop
in
add
lcall
xor
test
mov
dec
pop
inc
add
adcl
addb
sahf
push
inc
add
ljmp
adc
testb
push
jo
lret
push
pop
and
dec
cmpsb
xchg
push
scas
pop
shll
lahf
scas
sub
or
int
lock
cmp
add
push
xchg
pop
lods
fimuls
popa
aam
sbb
add
mov
aad
add
arpl
mov
add
je
insb
daa
out
js
xchg
in
and
add
sarl
add
mov
fldl
stos
stos
dec
jb
pop
add
test
mov
jp
movsb
inc
add
or
fstpl
fidivs
bound
jne
add
inc
sahf
add
pusha
add
add
add
cltd
fwait
cmc
fldl
xor
sub
pop
hlt
or
mov
mov
fldenv
ss
mov
adc
js
mov
xchg
jbe
fldl
dec
push
push
push
inc
repz
mov
lods
outsb
nop
push
je
ficomps
xor
adc
adc
mov
into
aas
popf
rcll
loop
jle
xchg
lcall
xlat
and
int
dec
into
mov
js
int3
test
jg
xchg
xchg
js
jge
cmp
imul
pop
mov
lret
add
loopne
addb
add
sub
leave
lods
popf
fisubrs
add
sbbl
lods
out
bound
push
xchg
lcall
xor
or
dec
mov
arpl
test
leave
pusha
add
pop
or
push
xchg
pop
test
out
mov
jne
les
andl
add
or
xlat
sub
sbb
or
jbe
shrl
jp
imul
push
lret
cmp
push
or
add
mov
mov
adc
add
pop
xchg
sbb
mov
lods
jns
je
shll
push
sti
sbb
out
lds
sbb
add
stos
imul
mov
add
add
fsubrs
add
sbb
mov
es
push
cmp
pushl
pop
sub
rcr
cmpsb
push
in
iret
jl
ds
lret
cmpsb
and
rolb
cmc
adcl
lods
mov
aad
addb
insb
mov
sub
and
jae
cmp
cld
pop
jecxz
cmpsb
pop
adc
enter
push
repnz
push
mov
pop
xor
push
mov
mov
faddp
add
sub
mov
or
add
jle
rcrb
mov
fwait
shrl
add
inc
add
xor
mov
or
addl
mov
sbb
xchg
mov
inc
add
cmp
and
lods
sahf
cld
lret
jmp
sti
sbb
ret
test
jbe
test
lea
popa
ret
jecxz
and
dec
mov
cmp
sahf
pop
inc
add
xchg
jle
cmp
lds
movsl
xchg
sub
lcall
pushf
push
imull
cmp
bound
dec
pop
and
xchg
enter
or
xor
mov
mov
into
sbb
jmp
ja
adc
lea
out
xchg
dec
jmp
and
das
jae
adc
xor
fwait
sbb
je
adc
lods
jbe
push
jge
mov
sub
test
pop
mov
ds
das
jmp
jne
test
lret
sbb
push
jle
and
or
jecxz
lahf
insb
cmp
mov
fdivrl
movb
push
cmpsl
dec
mov
in
aam
xchg
adc
add
sahf
sbb
mov
arpl
jo
push
lea
pop
xchg
jne
mov
shlb
add
sbb
push
mov
inc
add
jno
fbstp
push
cmpsb
push
inc
loop
insl
adc
ds
cld
mov
jle
mov
loop
add
cmc
pop
add
xlat
mov
sbb
cmp
or
dec
push
xor
xchg
add
mov
jge
jns
cmp
nop
push
pushf
popf
pop
fimuls
sbb
push
ret
mov
sub
nopl
push
outsb
jp
das
sub
sub
jmp
adc
add
xor
sbb
test
xchg
dec
js
mov
add
adc
rolb
sti
mov
inc
add
add
adc
adc
jo
pop
bound
mov
fistpl
shll
add
push
adc
jns
add
jo
adc
and
stos
test
push
lods
sbb
mov
or
jmp
js
push
jecxz
test
mov
jno
int3
gs
stc
cld
push
mov
add
ja
ror
mov
ds
lods
addb
js
push
push
sbb
mov
es
pop
stos
and
mov
adcl
dec
fnstcw
lea
add
dec
or
add
rep
or
dec
movsb
cmp
inc
xchg
inc
cwtl
inc
lods
adc
pop
xchg
jb
or
cmp
shrl
xor
sti
sbb
rcrl
cmpsl
cltd
in
dec
out
push
jno
in
dec
and
cmp
leave
int3
dec
dec
and
xor
mov
mov
inc
add
mov
sub
inc
add
dec
sub
pop
pop
jb
jb
push
cmp
sarl
jp
jne
add
mov
and
ljmp
fcmovnu
out
dec
mov
jne
fdivl
jnp
decl
into
dec
jl
xchg
iret
mov
js
add
push
sahf
mov
add
loop
cmp
adc
pop
das
or
mov
push
add
clc
rcl
test
xchg
jne
cmp
in
insb
scas
xor
loopne
jne
push
rcrl
lds
add
and
inc
add
fmull
shl
pop
cmpsb
pop
push
mov
cmp
lock
lock
mov
out
inc
add
shlb
int
test
mov
add
aad
and
fildl
popf
into
adc
ret
data16
pop
std
ds
cmp
out
jmp
movb
movsl
lea
mov
cmp
add
xchg
pop
xor
sub
aas
outsl
fisubl
add
in
insb
iret
lret
sbb
cmpsl
jp
gs
mov
xchg
imul
aas
mov
inc
outsb
cmp
adc
jno
or
arpl
add
psubw
lea
push
cmp
add
pop
pushl
test
push
jmp
add
movb
scas
or
pusha
add
mov
lahf
data16
sbb
add
imul
in
jg
movsb
pop
not
jg
rcrb
fisubrl
test
dec
ljmp
fidivrl
aas
jmp
xor
fdiv
push
popa
cmp
and
jmp
push
xlat
xchg
sbb
pop
movsb
inc
pushf
xchg
add
icebp
cmp
add
adc
cmp
adc
sbb
iret
cld
mov
mov
push
mov
addb
icebp
ljmp
aam
hlt
aad
ljmp
jbe
mov
sahf
jge
inc
add
inc
pop
lock
add
jmp
cwtl
es
push
jge
cmpsl
addb
add
shll
ficomps
incl
sub
mov
ffreep
aaa
pop
and
into
lods
push
fwait
lock
jno
pushf
pop
imul
mov
sub
and
mov
sbb
dec
mov
je
mov
cmp
or
jnp
jle
mov
mov
insb
inc
add
in
test
sub
jge
cmp
std
rorb
and
cmp
movsl
bts
insl
cmp
adc
add
test
push
xor
cmp
fs
cmc
cmp
test
cltd
xor
xchg
shlb
mov
add
push
inc
fwait
mov
xchg
out
sub
adc
mulb
ds
push
add
jae
sbb
sti
adc
push
out
fcomps
add
fcomps
add
mov
add
movsb
cmp
jne
scas
mov
mov
jle
pusha
add
clc
inc
jbe
mov
add
xchg
insl
cmovne
stc
jbe
push
jecxz
into
or
mov
addb
inc
movsl
xor
sar
dec
dec
cld
lock
pusha
add
clc
movb
inc
shll
test
push
add
or
mov
mov
add
jle
repnz
repnz
ljmp
sub
es
adc
push
add
pop
in
hlt
ffree
add
inc
add
and
outsb
and
push
call
js
outsw
aaa
inc
int
push
mov
iret
aam
or
pop
or
pop
jnp
mov
inc
pop
mov
jo
adc
in
in
ret
in
cmp
xchg
lods
ret
in
mov
add
scas
or
pop
inc
add
test
ret
add
stos
repz
imulb
pop
stc
xchg
mov
std
hlt
repz
jo
pop
arpl
adc
xchg
lods
fmull
insl
out
sbb
imul
in
xchg
xor
or
add
push
add
fldt
clc
dec
adc
sti
add
js
jbe
addb
test
add
movsl
cmp
inc
add
pop
inc
jmp
sbb
add
inc
add
inc
add
cmpsb
lcall
push
push
cmc
adc
je
test
inc
lods
jecxz
add
dec
ror
jecxz
repz
jae
push
loope
popf
mov
push
je
imul
push
out
add
call
addb
popa
ja
cmp
lret
add
mov
lods
jb
hlt
dec
xor
push
add
dec
js
lret
loopne
rorb
add
in
push
add
mov
add
lret
push
sahf
rolb
xor
aam
lods
or
call
jl
push
jg
clc
cwtl
int3
add
leave
jecxz
scas
xor
pop
addb
je
lods
test
mov
iret
pushf
std
std
or
test
fwait
xchg
xchg
sub
dec
mov
mov
divl
stos
add
bound
xchg
mov
popl
lds
dec
clc
shl
push
cmp
loop
sub
add
xor
sub
xor
sub
cmp
rcrb
aas
pop
cmp
sbb
add
jcxz
mull
dec
adc
pop
fldcw
inc
pop
out
adc
mov
ss
mov
adc
ds
cltd
sub
not
pop
out
add
jg
mov
jbe
addr16
dec
lea
je
xchg
in
and
test
leave
jg
je
aaa
es
adc
cmp
ucomiss
pop
jae
aas
jno
jmp
clc
movb
leave
int
add
cmpsl
or
add
lods
pop
cltd
push
dec
sti
js
add
cmpsl
bound
dec
popf
adc
outsb
xor
aaa
sbb
leave
inc
add
addb
out
dec
xor
xor
pop
movb
sub
mov
leave
push
ret
mov
scas
mov
fdivrl
adc
cmp
jb
xor
pusha
add
clc
mov
inc
push
push
int
xchg
je
loope
jle
jno
jno
and
pop
addb
and
sbb
add
repz
push
add
add
sub
push
lods
mov
das
inc
add
sbb
outsl
cs
xor
push
pop
addl
jae
addr16
fiadds
add
add
jae
movsb
pop
fdivl
push
les
xchg
pop
imul
mov
popa
mov
adc
sbb
mov
mov
adc
fs
aam
ret
xchg
ds
pop
int3
cmc
mov
js
jb
add
popa
test
xor
outsl
jne
loopne
dec
aaa
and
jne
add
mov
or
out
xor
rol
jl
cwtl
jle
and
fdivl
push
xor
add
sbb
pop
pop
or
stos
dec
out
xor
push
std
callw
pop
mov
lods
sbb
test
sbb
push
add
jae
mov
add
xor
lahf
push
xor
xor
add
push
mov
add
int
pop
pop
dec
mov
in
das
shrb
dec
fbstp
jo
mov
popf
test
clc
dec
in
jbe
sbb
les
lock
clc
test
movsl
push
dec
aam
inc
add
add
cmp
push
jg
dec
xchg
enter
jo
and
push
or
xor
and
icebp
push
mov
add
sub
cmpl
and
adc
bound
xchg
pop
movsl
inc
add
sbb
cmp
jno
stos
pop
cltd
mov
decl
add
imul
mov
pop
inc
cld
in
daa
mov
dec
outsl
mov
adc
push
fistpll
mov
sahf
data16
adc
arpl
cmp
and
and
out
popa
cltd
jo
add
pop
data16
xchg
cs
inc
add
clc
fwait
ja
or
les
pop
pushf
jge
sbb
cmc
pushf
sbb
aaa
insb
decb
outsl
into
cli
mov
xchg
rcll
outsl
movsl
call
push
insl
mov
mov
or
iret
in
stos
push
addl
lahf
ja
pop
je
loope
mov
push
idiv
jmp
push
call
dec
pop
mov
cmp
decl
insb
adc
sbb
cmp
mov
lods
cmp
sbb
cltd
std
mov
movb
push
inc
add
enter
shll
cs
rolb
lods
mov
pop
jp
shll
or
add
or
sub
xor
loope
pop
push
jb
push
scas
pop
jns
jl
xor
int3
shlb
hlt
mov
aas
inc
cltd
test
add
aam
out
push
sarb
or
stc
enter
fiaddl
cli
inc
add
leave
aas
xor
shl
daa
repnz
nop
rolb
add
sbbl
data16
pop
pop
and
add
int
mov
call
stos
loope
cmp
xor
cmp
mov
mov
adc
mov
push
push
xchg
cmpsb
pop
shrl
pop
test
and
add
outsb
out
sti
mov
stc
add
and
std
sub
cmp
mov
lahf
and
jns
add
sub
sub
ds
jae
mov
shrl
ficompl
stc
lock
mov
add
out
cmpsb
pop
cwtl
mov
push
enter
lret
js
add
mov
cmp
push
mov
shrl
lea
mov
cld
mov
add
int3
pop
cmpsl
pushf
fldcw
inc
add
add
test
cvttps2pi
fsubl
cmp
aas
popf
cwtl
hlt
test
in
movntq
pop
xchg
pop
adc
inc
push
and
rolb
pop
jecxz
jb
sti
mov
imul
sub
mov
fs
pusha
add
pop
insb
in
inc
add
push
outsl
jb
dec
loope
data16
outsl
mov
push
aas
in
xchg
sti
add
insl
mov
out
loopne
mov
cmp
mov
jle
jae
sbb
add
sahf
and
call
add
dec
ds
inc
lods
lcall
shrb
lret
shr
dec
inc
add
mov
mov
pop
adc
loopne
dec
jmp
int3
outsl
mov
add
out
rolb
or
push
mov
idivl
mov
jl
leave
insb
mov
mov
xor
xor
mov
addb
or
mov
dec
sub
mov
mov
icebp
pop
jbe
sub
xchg
pushf
cmp
addr16
jge
std
pop
lods
fsts
lock
arpl
notb
jg
adc
pop
adc
mov
cmp
icebp
pop
dec
out
jg
outsl
xchg
sahf
sbb
add
popf
loope
add
dec
insl
pop
fwait
mov
and
pop
xchg
aad
bound
jecxz
cmp
add
add
sbb
dec
cltd
rcll
shll
add
ud2
sub
cli
mov
mov
setle
mov
scas
sub
popf
push
push
inc
add
add
mov
jecxz
add
xchg
out
cmp
ja
mov
dec
dec
jg
jmp
jo
movsb
xchg
sub
jno
add
ss
cltd
div
popa
jo
shl
lret
jb
inc
faddl
xchg
arpl
add
cmp
fisubl
add
rorb
cwtl
dec
jmp
add
loop
mov
fidivs
outsl
das
mov
pop
push
pop
cwtl
dec
or
mov
in
ds
adc
add
pop
lret
push
int3
and
dec
scas
movsb
scas
adc
add
mov
mov
sbb
imul
cld
adc
mov
sbb
dec
add
mov
cld
ds
add
dec
mov
movsl
aam
aam
pop
cmp
and
mov
push
mov
mov
or
adc
addr16
and
test
add
add
dec
add
pop
sub
outsl
sbb
pop
xor
mov
cmp
inc
sub
int
push
sbb
xchg
sbb
les
movb
add
push
addr16
mov
in
fldt
insb
pusha
add
insl
pop
in
outsb
test
int3
test
sub
xchg
jmp
fxch
cs
push
dec
cmpsb
and
sub
in
bound
loop
ds
stc
addb
shlb
lcall
lcall
lcall
popa
test
ljmp
push
and
push
sub
xor
dec
xchg
pop
xor
rolb
fisttps
call
xor
sahf
pop
dec
sub
xchg
and
mov
and
repz
aad
je
add
popf
fs
fwait
add
out
push
or
movsl
in
pop
sbb
lock
addr16
fidivs
pop
testb
mov
repz
push
add
cmp
push
jp
mov
inc
popf
xor
xor
test
cli
xchg
ja
sbb
dec
push
std
or
push
add
mov
popl
out
mov
ds
fiaddl
fdivl
inc
add
dec
out
mov
xchg
ljmp
sbb
fcmovne
stc
jo
lock
sarl
icebp
repz
add
int3
dec
leave
pop
repz
mov
pop
sub
stos
add
dec
sub
xchg
ds
add
rclb
addb
and
outsl
dec
mov
cmc
add
popa
push
mov
xor
repz
mov
stc
push
inc
add
call
addr16
les
fisubrl
lods
mov
addr16
addb
xor
xchg
das
leave
js
hlt
xchg
cs
in
add
inc
add
je
add
sub
add
ja
pusha
add
sub
stos
rcr
jmp
cwtl
cld
mov
stos
mov
pop
pmaxsw
add
sar
or
jno
add
icebp
add
ficompl
and
icebp
xchg
imul
mov
xor
jo
pushf
mov
cmp
insl
mov
addr16
pop
in
sub
cwtl
stos
imul
mov
add
mov
and
das
sbb
mov
xor
outsl
inc
test
std
enter
and
or
mov
sahf
das
sub
sub
add
in
addb
pop
out
and
dec
das
loop
add
mov
jp
gs
mov
jne
repz
add
add
push
push
and
in
stos
loope
movsl
icebp
cmp
add
pop
addb
ljmp
sbb
sbb
push
rcrl
addb
dec
bound
dec
les
dec
lcall
lods
enter
adc
add
stos
push
push
adc
cmp
insb
mov
call
rolb
ret
cmp
outsb
repz
cmp
add
clc
xlat
mov
hlt
mov
mov
call
add
jle
add
mov
icebp
mov
pop
inc
add
push
imulb
mov
add
adc
xchg
mov
push
sbb
inc
add
daa
fwait
into
std
sub
push
inc
add
stos
xchg
add
movsb
push
jecxz
mov
pushf
dec
pop
xchg
clc
movups
or
fwait
popa
ret
add
lahf
and
test
gs
mov
pop
and
popf
mov
pop
leave
fists
int3
push
mov
cmpsl
mov
jb
add
add
xor
jmp
cmpsb
add
mov
add
cmc
sbb
jp
mov
mov
cli
jo
inc
add
or
pop
dec
insb
std
mov
cmpsl
push
test
out
xor
jbe
and
arpl
inc
add
mov
je
add
cmpsb
inc
cmp
js
stc
cltd
adc
push
sbb
and
test
gs
push
mov
ja
sti
pop
mov
add
loop
add
rcrl
mov
pop
xor
pusha
add
adc
out
inc
add
mov
js
movsl
dec
dec
xor
or
gs
mov
push
pop
cld
push
jp
xchg
mov
into
sbb
in
lock
aad
cmp
out
je
jl
loopne
lahf
faddl
sub
cwtl
cmc
mov
test
es
sbb
jno
mov
ds
add
add
xchg
fbstp
mov
adc
inc
shll
and
inc
add
insl
out
mov
in
mov
inc
pop
inc
add
mov
and
insl
pop
scas
xchg
pop
in
adc
xchg
dec
adc
ss
sbb
sub
xchg
sbb
hlt
or
stc
fs
fmull
lock
ret
mov
cltd
stos
or
jae
and
inc
movsl
or
hlt
in
cmp
in
mov
loope
and
sbb
adc
pop
filds
pop
push
pop
pop
pusha
add
add
daa
movl
fildl
xor
cmp
cwtl
xchg
sbb
repz
inc
add
jmp
cmpsl
inc
js
stc
mov
cltd
or
add
out
icebp
adc
test
inc
add
in
cmc
jecxz
outsb
push
xor
cwtl
xchg
and
sub
pushf
lods
fwait
in
mov
xor
xchg
mov
inc
pop
mov
add
pusha
add
add
xchg
iret
aas
mov
cmp
test
sbb
pusha
add
or
into
int
add
decb
push
add
mov
push
add
mov
shlb
adc
push
xor
add
rcrb
nop
mov
push
jmp
push
bound
addb
add
add
or
inc
add
add
xor
add
mov
test
dec
das
inc
cmc
fcomps
test
mov
shll
cmp
cmpsl
insl
fbstp
outsb
push
test
insb
jae
add
inc
mov
xchg
pop
and
push
sti
xor
incb
addb
push
out
jno
inc
dec
mov
mov
scas
in
lods
cmp
add
hlt
jb
mov
or
jp
xchg
xchg
pop
clc
out
add
add
push
mov
mov
popa
cmc
loope
jns
mov
push
pop
in
mov
into
fisubs
and
mov
jle
in
es
add
adc
outsb
lods
aas
jno
loop
add
out
jnp
out
shl
xchg
lret
pop
lock
mov
pop
sbb
in
add
rolb
movsb
sbb
jo
cmp
fbstp
xorl
pop
mov
lahf
inc
mov
mov
sub
pushf
or
in
mov
cmpsb
sbb
jo
out
inc
jne
aaa
or
add
enter
xchg
xchg
in
xchg
inc
fs
and
mov
jle
aad
rcrl
cwtl
movb
sbb
pop
sbb
or
sub
cmpsb
fdivs
pop
test
mov
dec
mov
add
cmp
dec
mov
es
and
add
mov
std
adc
push
test
jmp
add
xor
movsl
cmp
and
xchg
and
repz
rcll
and
add
pop
cwtl
and
popf
dec
lahf
cs
pop
add
inc
inc
add
adc
add
inc
add
mov
incl
or
pusha
add
sub
orl
xchg
push
movsb
into
cmpsl
addb
inc
add
pop
sub
movl
jnp
sti
pop
or
jmp
cmp
xchg
pop
add
mov
pop
pusha
add
cmpsl
into
arpl
fistpl
add
jns
sub
test
cld
mov
clc
xor
push
icebp
cmp
or
mov
and
sub
pop
cltd
push
push
inc
add
pop
mov
popa
xchg
jbe
aaa
pushl
inc
add
jg
sub
inc
add
push
cmp
pop
sbb
mov
inc
mov
fsubrl
add
out
add
xor
pop
std
jb
int3
jge
pop
sbb
add
test
add
sbb
pop
je
mov
mov
push
stc
mov
xor
mov
jo
xor
or
sub
out
mov
and
dec
dec
lock
pusha
add
jecxz
sub
push
or
outsl
sti
adc
into
jg
pop
and
add
fs
lds
jne
fisubrs
push
imul
aaa
cmc
lret
adc
sub
add
mov
out
mov
sahf
les
std
inc
add
mov
out
mov
jmp
dec
gs
or
lahf
imul
fbld
or
scas
insb
aam
fstpt
add
mov
cmpl
add
sbb
or
xor
popf
jo
shlb
lea
rclb
cs
mov
outsb
cmp
scas
or
dec
cwtl
inc
cmp
xchg
mov
add
lcall
scas
dec
insb
test
outsb
xor
push
cmc
mov
add
add
int3
add
decl
movsb
and
insl
test
movsb
lds
mov
inc
add
pop
cltd
adc
mov
insb
mov
xchg
ss
lods
test
inc
dec
inc
bound
test
push
inc
and
sub
aas
daa
mov
pushf
js
add
xchg
mov
add
lret
mov
clc
fadds
insb
addr16
xor
or
and
in
shrb
push
mov
into
xchg
bswap
les
fidivrl
insb
add
stc
mov
cmp
dec
inc
add
add
mov
jbe
cs
sub
jp
lods
mov
fwait
mov
imul
mov
add
ss
or
fstpl
addb
add
outsl
pop
sbb
lea
pop
or
scas
adc
and
cmp
jle
lret
push
clc
inc
call
sub
add
xchg
pop
inc
add
test
jecxz
cwtl
je
or
js
call
or
or
cmp
xlat
push
addl
xor
pop
pop
mov
push
leave
cmp
scas
ficompl
sbb
push
push
fs
add
cmpsb
imul
cmc
aam
sbb
add
scas
test
mov
jmp
into
loope
mov
out
aaa
insb
xor
pop
in
iret
loopne
add
jl
add
sub
jp
stos
rolb
mov
iret
push
cmc
movsl
mov
push
xchg
jbe
xchg
enter
sub
add
push
xor
add
xchg
subl
lds
jbe
sub
lods
repz
movzbl
add
pop
xor
add
icebp
andl
mov
mov
add
fldcw
dec
stc
pusha
add
sbb
mov
push
test
or
mov
hlt
inc
add
fiadds
mov
dec
mov
pop
sub
mov
sbbl
mov
fsubr
gs
jo
ljmp
ret
clc
or
dec
pop
into
cmp
inc
add
push
ret
mov
jle
into
jmp
mov
push
not
jb
xor
sub
les
adc
lahf
rolb
repz
out
gs
or
out
imul
jb
mov
add
icebp
out
adc
add
xchg
bound
outsl
dec
pop
jge
and
hlt
xchg
aas
inc
add
xchg
lods
cmp
and
sub
add
std
js
push
add
lods
fiaddl
mov
xchg
add
in
push
and
mov
aas
add
pop
jmp
add
sbb
mov
jl
xchg
xchg
xchg
and
lods
dec
cli
jb
push
add
cmp
fs
cmp
mov
popf
sub
orl
add
int
lret
xchg
mov
in
jne
jle
jnp
add
popf
sbb
mov
ret
mov
add
pop
mov
aaa
mov
jns
jnp
jne,pn
add
push
loope
push
mov
movsl
in
lea
neg
cld
inc
cmp
mov
jg
pop
inc
add
sbb
insb
lds
imul
cld
sbb
and
in
ss
les
cmp
mov
fcomps
les
and
xchg
xor
mov
imul
movsb
jno
and
mov
lock
add
mov
cmc
popf
mov
fwait
adc
push
jae
mov
movb
sub
dec
xchg
sbb
outsl
leave
addb
es
dec
sbbl
add
out
cli
lret
inc
or
add
in
mov
je
lds
clc
xor
pop
jle
sbb
mov
sub
mov
xchg
rcll
mov
bound
inc
add
jns
jp
shlb
mov
repnz
inc
lret
pop
sbb
bnd
imul
into
push
sub
mov
scas
jg
add
mov
mov
rcl
add
daa
push
ficoml
lret
jmp
ljmp
and
jb
in
das
es
inc
add
dec
aam
push
fistl
mov
mov
loopne
imul
dec
sbb
mov
inc
mov
imul
jecxz
pushf
out
jae
xchg
icebp
aad
sbb
out
dec
ljmp
lret
gs
cld
push
repnz
add
add
fnsave
add
andl
sbb
adc
lods
pusha
add
mov
pop
dec
push
mov
ficoml
pusha
add
mov
mov
mov
sti
loop
js
adc
add
add
mov
and
add
add
and
movb
sub
sbb
int
outsb
adc
insb
push
xor
dec
stos
js
in
jl
add
lds
sub
jo
ds
pop
inc
in
ljmp
xor
aad
xor
ds
icebp
sub
push
mov
fwait
nop
sub
mov
fs
aas
cmc
test
add
mov
bound
pop
in
lods
inc
add
cli
lds
cli
mov
cmp
inc
add
pushf
int3
sub
ret
pop
jle
shrl
add
aad
lods
cmc
shrl
stos
cmp
add
mov
cmp
testl
fcoms
mov
jbe
cltd
xchg
ss
hlt
mov
pop
std
in
popa
mov
clc
movsl
mov
and
addb
jge
and
pop
outsl
push
daa
or
xchg
in
lcall
mov
test
jg
jge
inc
cmp
mov
aaa
pop
inc
add
mov
mov
cmpsb
push
push
ret
mov
bsr
xchg
mov
cmc
sbb
add
sahf
mov
push
das
xchg
test
sbb
rolb
mov
test
mov
in
jmp
add
test
or
push
adc
push
testl
adc
and
stc
push
jnp
jae
jae
scas
sbb
sbb
mov
jbe
lahf
pshufw
adc
mov
ljmp
push
lods
std
aaa
ss
les
stos
sub
insl
mov
testl
jae
js
add
mov
add
insl
push
jl
lret
push
les
fwait
jbe
mov
addb
jmp
clc
xchg
in
pushf
push
imul
add
divl
inc
add
das
outsl
mov
push
mov
int3
enter
aaa
jmp
icebp
mov
xchg
test
mov
xor
stos
mov
pop
aaa
mov
mov
fisttpll
and
mov
sbb
mov
test
add
sub
pop
xor
xor
dec
push
psrlq
jb
inc
add
shrb
cmpsl
fsubl
movb
pop
or
add
pop
cmpsb
mov
mov
push
rcl
lcall
fcompl
cltd
cmc
xor
xchg
and
fnstenv
and
leave
int3
and
dec
repnz
xchg
ja
mov
inc
insb
rolb
cmp
mov
add
clc
sbb
adc
and
jl
pop
cld
push
lret
dec
je
pushf
popa
lea
add
outsl
icebp
or
cmp
scas
sub
pop
dec
loopne
mov
lret
push
mov
and
js
inc
jns
out
push
add
push
mov
outsl
jbe
loope
and
js
cld
outsb
shrb
loopne
inc
ljmp
push
add
sub
mov
adc
mov
mov
in
imul
xchg
stos
notb
aam
push
lds
add
sbb
inc
jae
outsl
sbb
add
pushf
gs
add
outsl
lds
pop
jle
popa
push
and
test
dec
inc
add
jae
out
xor
aad
add
insl
jne
jb
push
mov
out
mov
adc
mov
add
pandn
xor
movsb
push
pop
test
pop
rorl
pusha
add
cmp
ja
jecxz
jl
pop
cmpsb
sbb
fildl
pop
pop
testb
xchg
mov
push
or
push
mov
push
add
add
fwait
push
add
popa
hlt
pop
pop
inc
cmp
push
pop
add
fcoml
loope
fnstenv
adc
test
test
pop
sbb
add
ljmp
push
dec
push
mov
cmp
shlb
cmp
add
gs
add
shl
dec
shll
sub
add
xchg
arpl
data16
divb
lods
xchg
push
cmp
adc
ja
bound
mov
pop
jnp
lea
cmp
dec
rolb
insl
push
sbb
jb
xor
movsb
sub
xor
lcall
cmc
fstpt
add
loope
jmp
add
or
aas
fldl2e
pop
insl
mov
ss
fidivl
pop
inc
fwait
add
int3
outsb
push
xor
ds
add
mov
repz
or
ljmp
sbb
add
hlt
sub
push
das
or
ret
sub
jle
stos
popa
xor
hlt
sbb
popw
ds
mov
fstl
or
push
cmp
arpl
sbb
pop
test
inc
add
pop
outsl
stos
mov
out
sub
or
add
fiadds
sub
out
jge
add
mov
jae
push
lret
testl
sbb
clc
es
jb
and
xadd
add
loopne
jbe
mov
pop
es
in
jo
data16
xchg
pop
xor
push
xchg
popl
sub
out
push
add
inc
add
clc
and
and
pop
in
sahf
dec
dec
test
filds
sub
xor
and
xchg
mov
pop
in
jg
insl
or
mov
cld
mov
repz
adc
in
into
shr
mov
dec
mov
fucomip
mov
mov
pop
pop
xor
add
inc
add
bound
or
popf
push
cmc
jmp
test
jl
stos
mov
movb
sahf
rcrl
test
or
bound
sbb
dec
test
or
add
call
inc
add
rorl
mov
loop
ss
mov
mov
or
jno
and
pop
int
js
add
std
movb
dec
mov
mov
fcomip
jecxz
and
test
cmp
jo
lcall
add
int3
xchg
decl
stos
or
add
pop
xor
nop
enter
pop
pop
mov
sbb
bound
push
mov
cwtl
test
add
add
incl
pop
push
mov
loopne
das
repnz
jp
aad
and
add
and
in
rolb
jo
push
aam
fwait
lock
or
add
add
jbe
aas
repz
fistps
dec
push
loope
or
ss
push
shll
in
cmpsl
push
dec
out
pop
pop
add
push
fsubrs
lods
stos
in
cmp
das
cmp
cltd
dec
cmpsb
add
movsb
lods
fnstsw
insl
aaa
or
mov
xlat
iret
bound
sub
push
jbe
push
cwtl
mov
rolb
sub
add
jmp
adc
iret
stc
daa
xchg
in
mov
xor
lods
jb
stos
inc
push
sbb
rcrl
mov
add
jp
hlt
mov
lock
lods
hlt
add
outsb
sbb
add
loop
inc
add
push
aas
addb
push
stos
out
jge
nop
xchg
scas
jge
cmp
enter
push
loop
ret
pop
fstps
js
xchg
pop
movl
cmpsb
and
fisubrl
addl
dec
inc
jmp
test
sahf
in
or
xchg
jae
imul
add
cmpsb
pop
cmp
cmpsl
call
push
mov
les
cltd
rcr
inc
ja,pn
in
mov
mov
jp
cmp
push
mov
xor
mov
xor
pop
jg
xchg
mov
adc
mov
fwait
mov
dec
popf
and
xchg
mov
add
lods
mov
addb
ret
aad
out
aaa
mov
mov
sub
sbb
movb
mov
sbb
fwait
pop
lds
cltd
cmp
inc
iret
xor
push
je
loopne
int
dec
movb
push
lahf
pop
dec
lea
add
in
ret
jg
ljmp
and
push
inc
add
jg
mov
push
fstl
incb
insl
lahf
call
sahf
cmc
sub
jecxz
dec
std
fidivrs
mov
add
fsts
ret
fmull
movl
adc
sarb
mov
push
aas
call
fbld
mov
cwtl
pop
pop
jg
inc
adc
mov
add
and
adc
or
add
xor
xlat
push
push
mov
xor
dec
fsubs
add
mov
cli
mov
sub
repnz
imul
push
sbb
je
das
mov
and
repnz
jns
jns
mov
aaa
cmpsb
scas
adc
push
cmc
cmc
test
xchg
ret
iret
fwait
and
mov
jb
push
pop
jns
sti
movsl
arpl
add
add
pop
cmp
add
pop
mov
fsubrp
xchg
roll
xor
add
bound
xor
mov
add
add
add
mov
movsl
ljmp
pusha
add
push
out
add
lret
xchg
pop
cmp
stos
dec
into
enter
sub
les
push
cmp
sub
popa
push
xlat
stc
ljmp
mov
and
push
jg
cmp
mov
mov
inc
nop
cli
aas
inc
lock
pop
xchg
outsb
lock
js
lcall
pushf
out
cmpsl
jecxz
inc
add
add
sub
pop
fwait
jecxz
stc
inc
addl
sub
add
pop
aas
out
mov
pop
lret
hlt
sbb
int
mov
outsb
pushf
in
negb
or
js
add
mov
test
or
mov
jno
ret
add
je
sahf
fldenv
add
rclb
mov
mov
sbb
mov
cmp
and
movsb
cmp
dec
mov
leave
in
mov
dec
mov
push
nop
movsl
je
les
mov
or
imul
sub
cli
mov
and
adc
add
fadds
sti
jne
nop
adc
xchg
jle
jmp
lea
rolb
clc
push
push
push
pop
sarl
stos
popf
ficoms
lret
adc
add
jbe
int
sbb
movb
cmpsb
in
mov
pop
lret
sub
jge
add
mov
inc
add
test
jge
test
lret
stc
sbb
sub
lahf
cmp
push
ficompl
ror
add
scas
add
dec
cmc
loopne
and
mov
xor
add
jo
inc
lds
push
jmp
data16
inc
add
arpl
shll
add
pop
push
ljmp
jb
add
adc
in
and
mov
sub
popa
add
in
inc
rcr
fs
shrl
sbb
fsts
cmp
jle
inc
add
fimull
add
or
inc
mov
aam
jns
and
or
int
add
addb
push
mov
sub
jnp
pop
rcrl
sbb
mov
cmc
das
aas
jmp
add
out
stc
mov
popa
mov
dec
jp
pop
scas
pop
lret
out
shr
int
imul
xor
ss
xor
push
sub
mov
sbb
xchg
addb
pop
dec
inc
add
lret
sub
into
insl
push
pop
es
popa
in
dec
lret
outsl
outsb
loop
lods
and
cli
sbb
js
out
push
popf
aas
jl
jo
insl
mov
lea
add
xchg
or
push
add
es
adc
test
xor
imul
cmp
inc
add
push
js
cmc
fdivr
cmp
std
cmp
dec
shll
mov
sbb
cmp
aam
fimuls
repnz
std
loopne
out
cmp
or
sbb
add
iret
mov
data16
scas
xor
xchg
mov
pop
add
mov
add
sarl
mov
mov
repnz
scas
out
ret
repz
in
cmp
jo
xchg
pop
xchg
and
push
sub
out
fistpl
and
push
std
rolb
dec
cmp
out
mov
add
insl
inc
insl
std
and
dec
jne
cli
int
and
sub
push
add
and
xor
sub
mov
sub
and
sbb
jecxz
or
dec
sub
mov
jno
dec
adc
test
dec
jne
scas
cld
pop
andnps
or
dec
dec
in
insb
cld
mov
ss
popa
stc
loope
ljmp
outsb
scas
ret
mov
pop
out
cmpsb
mov
sub
cmp
mov
jno
or
cmc
aaa
sub
xor
int3
leave
lea
sub
dec
push
das
mov
xchg
stos
push
lahf
cmp
and
mov
lea
fisttpl
and
iret
mov
pop
sbb
das
and
cmp
push
xchg
test
repz
xor
cwtl
dec
add
push
dec
sar
ss
cmp
mov
inc
test
and
cmp
fstps
mov
fsts
sahf
jecxz
pop
into
dec
sahf
xor
jle
inc
add
jnp
arpl
add
out
or
add
inc
loop
pop
push
jmp
cmpsb
mov
dec
out
add
test
popa
aaa
mov
jg
pop
adc
push
adc
sahf
fsubrl
pop
aaa
test
mov
dec
int
mov
mov
das
pop
imul
and
in
fs
mov
mov
aas
or
mov
lods
rolb
loopne
aas
mov
and
js
mov
cltd
xlat
or
cmp
push
stos
and
lds
add
movb
mov
mov
js
sti
addr16
les
mov
into
imul
and
push
out
cmpsb
add
lods
xchg
pop
mov
loopne
dec
int3
xchg
mov
add
pop
js
in
int
cmp
in
push
movsb
pop
mov
ja
xchg
cs
and
xor
aas
inc
add
addb
addr16
je
add
pop
gs
cmc
mov
push
data16
push
repz
test
cltd
shl
push
decl
inc
data16
das
mov
stc
jp
dec
outsb
ljmp
mov
data16
add
fs
dec
pop
int3
dec
sti
nop
sub
xchg
es
clc
stc
popa
xor
or
and
xchg
sbb
ss
hlt
sub
add
pop
in
stos
call
repz
js
dec
pop
mov
aad
push
je
dec
cwtl
xor
or
cmc
fnsave
and
fsubrl
inc
add
xor
pop
push
jmp
loop
outsl
mov
add
clc
dec
jmp
aad
fists
mov
jno
add
inc
add
es
aad
add
sbb
cmpsl
xchg
or
xor
pop
movb
subl
push
adc
int
push
ja
call
jae
cmp
fucomp
aam
push
add
hlt
pop
and
xlat
mov
push
loope
add
outsl
pop
and
jb
mov
sbb
lods
dec
setbe
pop
push
inc
add
cmpsl
inc
add
outsl
sub
movsl
push
pop
movsb
cmpsb
fsts
sbb
jnp
mov
cmp
add
jo
call
cmp
push
scas
or
mov
jg
inc
pop
loope
jl
xor
xor
repnz
mov
sbb
add
ds
leave
cmp
scas
in
pop
aaa
les
cmp
dec
cmp
add
out
or
pop
mov
je
xchg
push
repnz
adc
stos
xchg
imul
sub
pop
push
sbbl
inc
add
adc
adc
movb
inc
call
add
sbb
in
shl
outsl
notl
push
cmpsb
dec
popa
xor
jg
imul
mov
pop
insb
int3
xchg
cmpsb
out
jmp
add
mov
mov
and
xchg
cmpsl
adc
aam
inc
nop
pop
or
sahf
ret
xor
cmp
ret
lret
mov
aaa
pop
add
loop
or
add
cld
dec
mov
pop
mov
jecxz
lock
mov
xchg
movsl
jp
add
call
aam
dec
and
loop
out
sub
and
movsb
sbbl
lahf
jb
stc
xchg
dec
dec
gs
sbb
mov
ror
rolb
enter
pop
dec
icebp
cmp
sub
test
mov
xchg
push
inc
add
add
mov
push
pop
inc
mov
and
add
jge
adc
cmp
jmp
sbb
jne
pusha
add
pop
fcoml
add
xor
outsb
daa
mov
cmpsl
push
inc
cltd
push
enter
mov
mov
sub
xchg
popa
mov
int3
sbbl
add
aas
jns
fdivl
adc
addr16
add
lret
xchg
cmc
mov
jo
fsubs
dec
pushf
inc
add
in
mov
dec
loop
xchg
mov
addb
test
mov
add
jns
jno
add
cmpsb
roll
pop
jg
pminub
add
fs
orl
dec
dec
nop
addb
pop
inc
jne
xchg
mov
mov
mov
jl
lods
testl
add
leave
xor
fcomps
loope
mov
mov
xlat
mov
add
jns
rcrl
jl
mov
pusha
add
cmpsb
loop
mov
loope
rolb
add
je
in
addb
mov
xchg
push
add
push
lds
imul
add
lret
push
rclb
das
pxor
pushf
ja
mov
push
int3
insl
and
cmp
and
xor
mov
add
mov
xor
adc
mov
add
sbb
xchg
clc
les
jns
xor
les
mov
or
push
cmpsl
loop
add
mov
ja
lds
mov
sub
fadd
mulb
filds
cmp
outsb
pusha
add
or
aaa
sar
int3
iret
mul
cli
inc
clc
xorl
add
mov
scas
lret
stc
fs
imul
dec
sub
add
xchg
sub
cmp
mov
cli
pop
jg
sub
pop
xor
jle
mov
jmp
clc
add
adc
lods
push
dec
fs
mov
addb
push
in
cmpsl
stos
loop
cmp
imul
aas
lock
test
arpl
in
imul
in
xor
enter
outsb
mov
pop
cli
and
addb
aad
test
ja
test
leave
fstpl
jo
lret
pushf
inc
pop
mov
mov
cli
push
popa
int
test
add
mov
lret
mov
lahf
inc
mov
popf
stos
out
fisubrl
xchg
or
hlt
lods
nop
push
inc
mov
rcrb
shll
cmp
push
add
dec
movsb
xor
add
xchg
popa
or
dec
lcall
fsub
cld
ds
testl
aas
rorb
movsl
inc
mov
addb
adc
jne
xor
imul
jmp
or
fldenv
fsubrl
inc
add
xor
cmp
pop
dec
push
adc
js
inc
in
mov
lods
out
inc
xchg
and
sub
inc
add
cmpsb
inc
push
out
mov
dec
adc
push
mov
add
push
lods
insl
jl
ljmp
js
mov
or
jae
addl
nop
jnp
pop
pop
inc
sub
add
inc
add
idivb
je
cmp
lods
mov
pushf
popf
inc
jns
icebp
mov
cmc
push
cli
push
addr16
sbb
add
sahf
sbb
pop
mov
stc
xchg
cmc
adc
add
mov
ljmp
js
mov
jnp
sti
cli
imul
leave
and
lea
enter
dec
jl
sti
movsb
lret
sub
xor
enter
add
dec
sub
mov
ror
mov
iret
cwtl
mov
xor
aaa
aad
stos
imulb
pop
sti
pop
lret
repz
dec
sbbl
aam
mov
outsb
mov
mov
pop
pop
mov
repz
mov
mov
add
sbb
pop
iret
das
repnz
cmp
add
roll
pop
jae
out
imul
jbe
daa
repnz
push
shrb
int3
mov
cmpsb
add
addb
pop
fbld
inc
insl
mov
mov
xchg
inc
cs
pop
inc
fidivs
icebp
dec
mov
incl
jl
jb
jle
push
dec
aad
and
out
push
hlt
ret
push
sbb
add
sbb
mov
sub
mov
pop
xchg
inc
add
lret
popf
notb
fstps
jle
movsl
lods
ret
ret
mov
mov
adc
fcomip
pop
sbb
shlb
add
or
test
jns
mov
add
jne
inc
add
outsb
xchg
lret
fnstenv
xlat
add
add
mov
addr16
ret
fnsave
in
js
push
add
dec
int
add
mov
lcall
cmpsb
pop
xor
int3
enter
into
cwtl
cltd
push
sbb
int3
js
xor
add
jmp
and
out
in
iret
icebp
or
mov
xchg
add
mov
mov
scas
shrl
cmp
sbb
xchg
and
xchg
outsb
push
add
ja
add
and
sbb
shrl
popf
cwtl
mov
lret
jne
add
pop
ds
jns
jb
mov
inc
lock
inc
add
test
scas
jp
test
cwtl
int
pop
movnti
movsl
test
dec
aaa
mov
or
add
add
add
add
jne
mov
lds
lret
je
iret
push
cmp
add
add
sbb
gs
adc
add
scas
int3
cmp
add
jb
xor
add
mov
hlt
popf
fnstenv
xor
sbb
pop
sub
ret
movb
test
stos
push
add
adc
dec
push
rolb
cmc
sub
ficoml
mov
and
orl
and
cs
rorb
mov
cmp
fldl
movb
adc
insb
lods
mov
fsub
sub
stc
xor
push
cltd
pop
addr16
and
add
inc
add
int
push
sbb
xor
cmpsl
xchg
sub
scas
mov
movb
addb
add
fwait
int3
addr16
pop
lea
mov
add
lock
mov
push
cmpsb
aam
fwait
sub
push
lds
jecxz
cs
mov
fidivrs
inc
xor
add
xchg
rcl
dec
pushf
fistpll
push
ja
inc
adc
movl
mov
ljmp
jmp
ja
sbb
sbb
orl
cmpsb
dec
sti
movsb
aam
cld
mov
adc
add
or
movsb
rol
add
movb
out
mov
bnd
mov
push
movsl
jmp
add
mov
add
scas
fnstsw
into
ja
add
stos
cmp
into
mov
inc
add
dec
mov
pusha
add
pop
lret
cmp
jns
test
mov
add
cmp
and
mov
std
xchg
xor
enter
int
or
cld
cmp
ret
cltd
test
sub
int3
sbb
pop
and
insl
xor
inc
add
push
sub
es
add
adc
add
mov
aaa
pop
inc
add
mov
sub
push
xchg
sub
js
add
xor
test
jb
jmp
mov
in
sbb
mov
gs
je
sub
add
movsb
dec
in
cmc
ja
add
js
mov
ss
cmp
add
icebp
sub
lea
mov
aam
jae
dec
cmp
jne
push
les
or
pushf
call
lcall
xor
push
enter
aas
push
stc
out
movsl
movsb
cmpsw
and
or
push
inc
add
mov
fdivs
jmp
inc
jl
test
sub
cmc
addb
imul
stos
gs
lret
lcall
imul
stos
mov
adc
jecxz
lods
mov
push
push
or
push
add
sub
xor
pop
leave
scas
jae
dec
xor
hlt
rcrb
add
pop
jb
cmp
jbe
xorl
pusha
add
or
je
xor
mov
out
pop
testb
add
outsl
int3
sub
fisubrs
or
cmp
test
add
xor
mov
add
add
adc
cmp
fwait
data16
xor
and
xchg
aad
add
mov
mov
sbb
cmc
push
and
and
iret
int
loope
fbstp
dec
push
mov
dec
sub
add
add
jg
jge
cwtl
in
test
loope
pop
mov
hlt
arpl
cmp
mov
out
xchg
ss
inc
add
inc
sub
movsl
sti
pop
sub
sbb
pop
mov
test
icebp
mov
add
sbb
movsl
je
add
pop
divl
and
push
movsl
cmp
adc
inc
jp
xorl
xchg
xchg
push
in
mov
insb
and
xchg
xchg
xlat
sarb
add
pop
fldcw
inc
pop
clc
ret
stc
adc
add
xor
int3
jno
test
add
in
addb
popa
lods
mov
fsubrl
bound
add
mov
nop
sahf
lahf
or
dec
addb
cmp
inc
add
lcall
jmp
mov
mov
loopne
setle
lea
test
in
sbb
inc
pop
shr
ror
push
into
fld
es
pop
cmp
lods
mov
inc
xchg
mov
add
das
ja
in
repnz
aaa
outsb
int3
dec
or
pop
addb
add
vandps
add
lods
fildll
cmp
push
daa
insb
dec
loope
movb
mov
hlt
inc
push
add
daa
dec
and
rcll
push
rcrl
add
push
and
lods
or
cmp
add
fs
ficoml
daa
adc
rorl
sub
xchg
sub
hlt
inc
lds
mov
lea
mov
shll
add
addb
es
mov
lods
xor
int
jl
jmp
fdivrl
mov
popf
jb
cmp
push
je
add
mov
sub
add
cmpsl
jmp
sub
inc
add
or
or
inc
mov
add
dec
mov
add
mov
adc
enter
add
data16
les
xchg
scas
lock
ds
add
stos
in
es
ds
test
mov
sbb
pushl
push
add
xor
testb
sub
sbb
jae
dec
sbb
test
pop
cmp
das
add
xchg
popf
inc
add
in
xchg
sti
cmpsl
push
nop
pop
sbb
jge
xchg
ljmp
and
add
cld
push
lods
out
add
xor
and
jo
shlb
pop
mov
mov
add
cmp
push
or
mov
or
dec
pop
fwait
push
add
scas
pop
pushf
mov
stc
jb
add
add
add
stc
jb
add
push
mov
xchg
ret
iret
aad
mov
add
add
add
popa
xchg
aad
add
stc
jb
mov
dec
sub
mov
pop
adc
and
or
xor
dec
or
mov
xchg
ret
mov
test
adc
add
jb
add
outsb
add
push
sar
mov
push
mov
xchg
ret
add
mov
je
stc
jb
mov
movsb
push
mov
xchg
ret
ss
add
inc
add
xchg
das
add
stc
jb
outsb
mov
add
add
rol
add
hlt
sbb
add
add
add
lret
mov
push
mov
xchg
ret
add
add
imul
stc
jb
test
dec
outsb
outsb
sub
mov
xlat
sbb
outsb
add
adc
dec
mov
stc
jb
aad
movsl
stos
pop
cmp
stc
jb
cmp
add
adc
jb
add
repnz
popl
xor
pusha
stc
jb
add
nop
sbb
sbb
jmp
adc
add
add
add
xor
push
mov
xchg
ret
movsl
add
add
mov
stc
jb
add
add
jg
stc
jb
add
and
movzwl
push
mov
xchg
ret
fildll
push
stc
jb
pop
movsl
add
dec
cs
sub
stc
jb
add
add
inc
add
fadds
addb
add
les
ret
outsl
push
stc
jb
add
filds
jecxz
add
movb
add
push
mov
xchg
ret
add
add
jb
sbb
aad
add
clc
stc
jb
add
add
mov
popa
fldl
add
jb
add
add
nop
jmp
iret
add
test
pop
testl
nop
jmp
repnz
aad
lea
stc
jb
add
or
sbb
mov
jb
jns
add
sbb
shl
push
mov
xchg
ret
ds
add
mov
cmp
nop
jmp
gs
fcomip
xor
and
jb
add
add
movsl
add
add
jb
movl
test
and
pop
adc
add
add
and
jmp
add
add
add
push
mov
xchg
ret
mov
add
jne
stc
jb
add
add
dec
push
push
mov
xchg
ret
add
add
pop
stc
jb
add
cmpsl
outsb
popl
sbb
cmp
jb
add
mov
add
rcll
add
xchg
ret
sbb
nop
add
es
mov
stc
jb
add
ret
add
inc
and
stc
jb
add
test
ljmp
je
add
gs
add
insb
test
nop
jmp
add
add
add
loop
outsb
jne
stc
jb
add
repnz
mov
stc
jb
add
add
in
aaa
lds
add
add
imul
adc
add
cld
in
inc
add
sbb
mov
sar
sub
add
add
dec
add
add
xchg
das
mov
nop
jmp
add
add
mov
stc
jb
mov
jp
nop
jmp
mov
pop
add
add
mov
sub
ret
rorb
ss
pop
push
mov
xchg
ret
les
sbb
adc
test
mov
nop
jmp
add
add
add
adc
adcb
add
add
rolb
add
rep
stc
jb
filds
mov
add
fists
xor
loope
mov
stc
jb
gs
mov
jl
and
jb
add
mov
add
add
stc
jb
add
movsl
mov
mov
insb
pusha
stc
jb
add
and
add
stc
jb
test
add
add
add
pushl
nop
jmp
iret
add
mov
dec
add
or
stc
jb
repnz
inc
add
add
jmp
add
cmpsl
ja
add
push
repnz
jb
ds
xor
stc
jb
add
sbb
pop
stc
jb
add
aad
add
jns
cwtl
push
push
mov
xchg
ret
add
movl
aad
push
push
mov
xchg
ret
add
jns
mov
orb
add
and
add
fidivl
add
stc
jb
lret
add
add
cmp
push
mov
xchg
ret
mov
add
movsl
or
mov
xchg
ret
loope
add
arpl
inc
add
add
movl
sbb
mov
xchg
ret
add
add
cmp
add
jb
add
and
shrb
inc
push
mov
xchg
ret
adc
add
pusha
add
push
mov
xchg
ret
mov
sbb
push
push
mov
xchg
ret
add
jne
nop
jmp
movl
pop
stc
jb
add
lret
add
add
stc
jb
inc
add
add
dec
add
mov
pusha
nop
jmp
outsb
jns
dec
or
adc
ret
stc
jb
add
std
and
add
movl
dec
lcall
add
add
xor
addr16
adc
add
outsb
add
sbb
xor
add
stc
jb
add
inc
sub
sbb
and
sub
ja
sbb
dec
cmp
jb
add
add
add
xchg
incl
xchg
ret
cmpsl
add
or
push
adc
jb
add
nop
repnz
lret
push
push
mov
xchg
ret
adc
gs
mov
outsl
jb
stc
jb
lret
add
add
nop
jmp
mov
add
test
mov
sub
test
jb
add
sub
or
add
add
add
decl
stc
jb
add
inc
push
add
push
sub
add
add
mov
add
out
adc
outsl
arpl
stc
jb
sbb
lea
stc
jb
sbb
loope
mov
or
add
jb
add
test
xchg
or
add
add
add
mov
hlt
loope
add
stc
jb
mov
add
mov
or
add
jb
mov
sbb
dec
add
mov
xchg
ret
add
into
sub
stc
jb
movsl
sbb
add
add
aas
mov
stc
jb
add
add
add
fisttps
mov
loopne
test
jge
popa
add
jmp
insb
mov
pop
out
shl
stc
jb
filds
add
add
sub
stc
jb
push
test
jecxz
cmp
imul
popa
and
add
mov
in
ror
push
mov
xchg
ret
add
add
shr
push
stc
jb
mov
sbb
add
xor
jb
add
dec
adc
xlat
in
inc
add
add
stc
jb
mov
add
popa
xchg
sti
mov
push
mov
xchg
ret
add
loope
fs
cmpl
add
add
jb
add
add
add
add
dec
outsl
popa
fs
jb
add
iret
add
push
stc
jb
test
ss
add
sub
sub
jb
loopne
add
sbb
sbb
jb
add
loopne
mov
ds
stc
jb
repnz
add
scas
je
stc
jb
dec
dec
add
and
imul
add
incl
add
iret
add
sbb
popa
stc
jb
add
loope
iret
adc
pop
ss
ret
nop
jmp
dec
add
add
add
add
andl
adc
add
add
movsb
mov
xlat
jno
jne
stc
jb
add
add
pop
push
add
lret
mov
inc
add
mov
nop
jmp
add
sbb
add
dec
add
mov
xchg
ret
add
add
lods
mov
stc
jb
add
and
mov
stc
jb
popl
add
inc
push
mov
nop
jmp
les
add
or
clc
stc
jb
test
sub
pop
add
stc
jb
add
lret
jl
xor
inc
icebp
inc
add
add
ds
nop
jmp
add
or
jmp
add
gs
or
add
xor
add
stc
jb
adc
push
nop
jmp
mov
add
clc
adc
add
jb
add
add
add
decl
test
clc
call
add
cmpsl
xchg
mov
fcoml
jb
mov
fcomip
add
ficompl
jb
lret
add
add
pop
xchg
dec
inc
stc
jb
test
insb
add
inc
out
jne
stc
jb
movsl
add
pop
push
mov
xchg
ret
add
call
stc
jb
add
add
adc
addb
xchg
lahf
mov
push
mov
xchg
ret
add
mov
push
mov
xchg
ret
dec
add
mov
stc
jb
add
add
lea
roll
add
test
imul
add
ja
add
add
aad
mov
jle
inc
add
add
repnz
add
jb
pop
dec
cmpsl
sbb
push
mov
xchg
ret
movsl
jecxz
and
xor
add
adc
add
add
add
mov
xchg
ret
add
add
mov
xchg
ret
add
add
mov
rclb
popl
inc
add
add
add
sub
stc
jb
mov
add
icebp
outsl
jb
stc
jb
mov
stc
jb
insb
dec
dec
lret
loope
and
nop
jmp
loopne
mov
adc
add
jle
enter
out
adc
push
mov
lea
nop
jmp
mov
add
dec
add
xchg
stc
jb
add
add
add
sub
hlt
fldl
xchg
ret
movl
push
mov
xchg
ret
repnz
add
pop
stc
jb
add
add
jg
test
sbb
add
jb
add
add
sar
jb
dec
sbb
add
dec
dec
ss
decl
add
add
add
adc
xchg
clc
inc
add
pop
sub
sar
jb
add
adc
dec
add
mov
stc
jb
movsl
add
add
nop
jmp
add
jecxz
add
add
stc
jb
add
jns
push
mov
stc
jb
add
mov
xor
push
mov
xchg
ret
add
mov
dec
and
push
mov
xchg
ret
mov
pop
nop
jmp
add
add
test
push
jmp
stc
jb
add
ds
push
stc
jb
add
dec
nop
sbb
add
or
nop
jmp
ss
add
out
push
nop
jmp
aad
add
stos
sbb
add
fs
call
stc
jb
pop
mov
mov
adc
and
and
add
sbb
jb
outsb
pop
add
mov
push
mov
xchg
ret
mov
test
stc
jb
dec
filds
add
cmp
add
ss
mov
sbb
rcrb
jb
repnz
dec
push
mov
xchg
ret
adc
jecxz
pop
and
add
nop
jmp
add
cmpsl
add
nop
jmp
add
mov
loop
aas
add
push
mov
xchg
ret
add
adc
add
insb
insb
stc
jb
mov
jmp
call
stc
jb
add
add
test
decb
jb
add
add
jb
shr
add
test
add
nop
jmp
add
jns
mov
imul
stc
jb
jmp
mov
jns
add
gs
push
mov
xchg
ret
add
aad
mov
mov
jmp
add
mov
subl
jmp
add
mov
sub
addb
add
or
add
and
or
add
add
shlb
push
stc
jb
add
stos
add
jecxz
inc
add
add
inc
push
adc
stc
jb
add
add
rcll
lods
push
mov
xchg
ret
add
add
mov
add
test
nop
jmp
add
add
add
and
jmp
dec
cmp
jb
rolb
jmp
add
inc
or
mov
xchg
ret
nop
mov
lret
stc
jb
add
add
mov
data16
inc
cmp
mov
xchg
ret
movsl
repz
jmp
nop
jmp
add
cmpsl
add
daa
hlt
arpl
stc
jb
add
movb
mov
xchg
ret
add
into
sub
nop
jmp
add
add
nop
js
push
mov
xchg
ret
add
add
and
push
stc
jb
add
add
dec
add
cmp
inc
and
jb
add
inc
lock
dec
cmp
jb
add
sub
push
add
sub
mov
stc
jb
ret
aad
add
outsl
push
push
mov
xchg
ret
mov
add
mov
add
jmp
mov
iret
push
out
add
stc
jb
ss
xchg
jno
cld
movzwl
stc
jb
add
rep
stc
jb
add
ss
outsb
mov
mov
xchg
ret
push
ret
add
repnz
mov
stc
jb
sbb
add
pop
push
mov
xchg
ret
add
mov
stc
jb
adc
add
add
jb
add
adc
add
lcall
sub
add
test
lret
push
mov
xchg
ret
add
outsb
rolb
mov
pop
nop
jmp
pop
add
jns
or
push
mov
sub
test
cmp
mov
ljmp
out
or
add
add
push
push
add
iret
add
mov
jns
add
mov
push
mov
xchg
ret
mov
pusha
stc
jb
add
repnz
add
add
sub
mov
xchg
ret
les
add
add
push
push
mov
xchg
ret
loopne
add
ret
push
add
stc
jb
add
mov
push
jb
jb
cmp
mov
out
div
nop
jmp
outsb
xchg
add
jmp
stc
jb
into
repnz
push
add
out
or
add
add
adc
add
rolb
movsl
inc
jle
nop
jmp
add
add
add
nop
jmp
add
add
sub
mov
and
ds
nop
jmp
sbb
add
jecxz
ret
add
add
sbb
add
add
add
iret
push
mov
lods
xchg
stc
jb
sbb
dec
add
mov
stc
jb
add
test
mov
sbb
add
add
add
cmp
push
mov
xchg
ret
cmpsl
add
nop
popa
sbb
subb
incl
add
add
add
add
les
or
mov
xchg
ret
add
repnz
xor
push
mov
xchg
ret
dec
test
decl
mov
sub
ret
add
loope
sub
stc
jb
add
aad
loope
scas
mov
stc
jb
pop
add
add
insb
adc
stc
jb
push
dec
add
out
add
add
ss
and
inc
stc
jb
push
repnz
test
add
js
sti
stc
jb
xchg
mov
add
add
stc
jb
add
mov
xchg
ret
adc
add
pop
push
mov
xchg
ret
add
add
lret
xlat
js
rclb
fiadds
xchg
ret
add
dec
add
push
mov
xchg
ret
ss
ss
mov
stc
jb
add
nop
add
add
negb
test
add
stc
jb
sub
add
mov
nop
jmp
mov
add
xlat
mov
xorb
add
adc
pop
push
stc
jb
add
mov
add
add
iret
mov
nop
jmp
nop
add
or
pushl
ja
loope
add
arpl
insb
push
stc
jb
push
add
add
popa
add
jb
adc
add
add
movsl
mov
jb
xchg
add
adc
dec
dec
stc
jb
mov
add
add
iret
mov
stc
jb
dec
iret
loopne
add
stc
jb
add
mov
xor
nop
jmp
lret
inc
mov
idiv
stc
jb
add
cmpsb
lea
add
add
add
mov
add
inc
filds
pop
cmp
mov
xchg
ret
dec
add
inc
add
or
stc
jb
into
stos
add
out
add
mov
stc
jb
jecxz
add
add
lds
add
add
add
adc
insb
add
push
mov
xchg
ret
mov
lret
mov
jb
add
add
ret
into
fdivp
movsb
stc
jb
inc
add
xchg
rolb
mov
inc
add
or
jb
or
add
jl
stc
jb
jns
add
and
push
mov
xchg
ret
add
add
repnz
pushl
push
mov
xchg
ret
dec
add
pop
mov
test
sti
stc
jb
add
add
stc
jb
ja
dec
aad
add
subb
add
add
add
add
adc
mov
xchg
ret
add
add
je
stc
jb
add
add
mov
nop
jmp
add
add
out
popa
nop
jmp
add
add
mov
stos
insb
add
add
nop
jmp
add
test
push
stos
pop
stc
jb
mov
dec
stos
aad
mov
stc
jb
dec
add
or
mov
stc
jb
nop
mov
pusha
add
jb
sub
inc
jp
sar
xorb
incl
and
add
mov
insl
xor
stc
jb
pop
mov
in
add
add
stc
jb
add
iret
aaa
xor
jne
stc
jb
add
dec
sub
adc
nop
jmp
add
add
push
scas
mov
stc
jb
dec
add
adc
nop
nop
lds
stos
stc
jb
add
add
nop
jmp
movsl
pop
add
add
add
mov
add
nop
jmp
adc
cmpsl
hlt
sbb
icebp
stc
jb
repnz
ret
lret
cmp
mov
xchg
ret
ffreep
ret
add
sub
xor
add
stc
jb
jmp
enter
push
mov
xchg
ret
add
adc
mov
stc
jb
movl
add
pop
stc
jb
jmp
into
bnd
add
popf
lea
stc
jb
adc
add
add
movzwl
stc
jb
add
popl
adc
mov
stc
jb
add
add
add
or
jmp
add
push
stc
jb
nop
add
mov
inc
add
xor
stc
jb
movsl
add
add
add
inc
and
stc
jb
aad
loopne
mov
jb
filds
ds
add
xchg
mov
add
nop
jmp
add
nop
mov
sbb
mov
push
pop
and
push
mov
xchg
ret
add
add
mov
add
add
repnz
add
push
out
div
scas
call
stc
jb
movsl
add
repnz
movsl
xchg
flds
dec
in
add
rolb
inc
adc
jb
aad
movsl
mov
add
stc
jb
add
filds
add
add
pop
inc
add
xchg
dec
cmp
jb
nop
add
xchg
xchg
push
add
nop
jmp
add
add
sar
dec
nop
jmp
ss
add
test
pusha
push
mov
xchg
ret
mov
jae
sbbb
add
sub
add
incl
jecxz
stos
dec
and
testb
mov
xchg
ret
sbb
add
stc
jb
jecxz
repnz
add
or
add
jb
add
add
clc
pushl
push
mov
xchg
ret
add
add
push
mov
xchg
ret
sbb
mov
adc
stc
es
nop
jmp
add
xchg
aaa
xchg
lds
mov
stc
jb
add
rolb
repz
or
add
jb
add
movsl
sbb
stc
jb
add
popl
stc
jb
cmpsl
add
add
je
jmp
xor
add
nop
jmp
add
ret
add
and
push
mov
xchg
ret
test
jmp
stc
jb
add
add
aam
sub
stc
jb
add
mov
cmp
push
mov
mov
xchg
ret
lret
add
test
adc
add
add
dec
ret
add
shr
stc
jb
add
jmp
outsb
cs
cs
stc
jb
outsb
add
pusha
push
mov
xchg
ret
add
add
add
ret
jmp
add
add
push
stc
jb
mov
dec
add
add
mov
mov
xchg
ret
jmp
ret
sarb
add
jb
jmp
add
pop
ss
cld
movzwl
stc
jb
ja
add
out
call
stc
jb
or
add
aaa
dec
movzwl
stc
jb
adc
stos
add
movb
add
or
add
cmpsl
pop
sub
add
add
xor
xor
stc
jb
add
cld
stc
jb
test
inc
add
nop
add
cmp
nop
jmp
test
add
ljmp
add
add
add
ret
mov
mov
sub
inc
rolb
insb
add
or
jb
add
dec
outsb
add
adc
pop
stc
jb
add
les
add
mov
xchg
in
jbe
sub
xorb
jmp
mov
rcll
push
push
mov
xchg
ret
add
outsb
add
loop
inc
add
add
stos
fisttps
incb
xchg
ret
loope
push
add
pop
stc
jb
add
repnz
mov
push
mov
xchg
ret
add
nop
jmp
add
mov
test
sahf
mov
nop
jmp
add
xchg
test
mov
stc
jb
add
or
nop
jmp
fbstp
add
loope
add
rolb
outsb
cs
sub
jb
repnz
add
add
adc
mov
stc
jb
aad
cmp
loopne
add
stc
jb
add
movsl
add
push
or
add
jb
ja,pn
add
lock
fwait
mov
stc
jb
outsb
add
add
cmp
jb
add
notl
in
jmp
add
loope
add
imul
xchg
ret
add
push
stc
jb
iret
dec
xchg
clc
xor
push
mov
xchg
ret
add
inc
mov
in
inc
add
adc
rolb
jle
dec
cmp
jb
mov
adc
js
call
add
add
cmp
mov
stc
jb
add
test
jb
add
loope
into
add
add
orb
xchg
add
dec
filds
fildll
mov
stc
jb
dec
inc
add
adc
add
add
add
adc
add
add
repz
jb
add
sbb
mov
jne
nop
jmp
add
loope
push
cmpw
stc
jb
and
mov
mov
imul
out
incl
add
add
add
push
decb
jmp
iret
repnz
add
cs
stc
jb
add
mov
mov
add
inc
and
add
incl
dec
adc
mov
mov
xchg
ret
add
add
dec
std
push
push
mov
xchg
ret
sbb
jbe
mov
cmpb
incl
aad
stos
add
add
jb
add
and
and
sub
jb
xchg
add
das
add
push
mov
xchg
ret
movsl
add
adc
shrb
mov
xchg
ret
add
add
sbb
cmp
jb
add
add
call
mov
xchg
ret
nop
adc
or
loop
stc
jb
cmp
inc
push
add
stc
jb
add
add
mov
push
stc
jb
adc
sub
lret
add
loopne
add
push
stc
jb
gs
ret
insb
nop
add
rolb
jb
add
add
add
dec
xor
push
mov
xchg
ret
lret
ds
and
mov
stc
jb
into
add
mov
adc
mov
xchg
ret
add
cmpsl
mov
icebp
stc
jb
add
add
xor
jge
nop
jmp
add
add
adc
add
stc
jb
nop
add
add
add
or
stc
jb
loopne
xchg
orb
add
test
incl
subb
add
add
add
insb
cmp
nop
jmp
add
dec
add
or
mov
xchg
ret
test
roll
push
mov
xchg
ret
loope
loopne
ret
stc
jb
add
sbb
mov
lret
and
add
add
add
add
add
outsb
add
dec
leave
ror
push
mov
xchg
ret
or
cs
icebp
inc
add
add
add
stc
jb
add
push
into
add
jmp
jmp
iret
add
ret
nop
jmp
add
add
icebp
int3
rep
push
mov
xchg
ret
add
add
jae
sub
xchg
repz
incl
add
filds
jne
nop
jmp
cmpsl
add
outsb
add
mov
stc
jb
add
sbb
outsb
add
add
jb
mov
lock
lds
mov
jb
add
adc
add
cmpl
incl
add
mov
inc
add
insb
add
mov
mov
stc
jb
jmp
mov
mov
adc
jb
loope
add
aad
jp
dec
cmp
jb
popl
ret
mov
add
mov
push
mov
xchg
ret
add
add
mov
add
add
jb
add
gs
mov
push
mov
xchg
ret
add
test
lods
stc
jb
sub
aad
pop
mov
nop
jmp
add
repnz
stc
jb
add
add
mov
add
xchg
in
mov
stc
jb
adc
or
cmpsl
pop
test
nop
jmp
add
add
jns
fistl
std
loope
add
add
mov
les
stc
jb
mov
js
repnz
jmp
sbb
pop
dec
push
int3
inc
push
mov
xchg
ret
add
cmpsl
add
or
jb
add
add
add
add
pop
test
push
mov
xchg
ret
test
add
stc
jb
add
push
add
stc
jb
add
loopne
add
sbbl
xor
ljmp
movl
cmc
add
add
jb
add
add
pop
xor
stc
jb
sbb
add
push
pop
push
push
mov
xchg
ret
jmp
add
add
stc
jb
add
add
rep
stc
jb
push
nop
test
add
iret
push
add
xor
cmp
stc
jb
insb
add
add
in
pop
push
mov
xchg
ret
add
jecxz
dec
sahf
add
stc
jb
add
xacquire
dec
mov
stc
jb
add
mov
mov
sti
stc
jb
ja
add
sbb
dec
adc
jmp
stos
inc
add
add
add
sti
nop
jmp
add
dec
add
push
mov
stc
jb
mov
add
sub
or
sbb
add
and
adc
lock
stc
jb
add
dec
aam
sbb
jb
add
xchg
add
stc
jb
add
add
add
test
stc
jb
add
dec
add
nop
jmp
add
add
dec
rolb
mov
nop
jmp
stos
add
add
cs
lods
xor
stc
jb
stos
add
iret
lahf
je
stc
jb
mov
jge
stc
jb
add
xchg
add
cld
subl
push
mov
xchg
ret
test
shll
lea
nop
jmp
mov
add
and
stc
jb
mov
mov
add
add
ljmp
add
call
stc
jb
cs
mov
jmp
stc
jb
dec
outsb
add
add
sub
mov
stc
jb
cmp
mov
add
mov
xchg
stc
jb
ret
add
jns
jmp
dec
arpl
rclb
pop
in
inc
add
outsb
inc
add
rcr
test
stc
jb
add
ja
xor
mov
xchg
ret
add
mov
out
lea
stc
jb
add
add
add
xor
add
stc
jb
jmp
addr16
jb
jb
mov
rclb
jp
jge
stc
jb
add
and
add
push
mov
xchg
ret
stos
movsl
iret
xor
js
push
mov
xchg
ret
add
add
inc
loope
movzwl
stc
jb
add
add
cmp
push
filds
xchg
ret
iret
add
repnz
jmp
add
fbstp
pop
rolb
sub
icebp
inc
add
mov
insb
inc
mov
loope
pop
push
stc
jb
add
add
repnz
add
je
stc
jb
sub
jns
insb
mov
stc
jb
les
dec
mov
ret
mov
outsl
arpl
add
jb
add
add
xchg
add
iret
mov
stc
jb
or
add
add
stc
jb
add
outsb
lock
add
nop
jmp
add
add
add
push
stc
jb
dec
add
loopne
add
repnz
mov
stc
jb
into
lret
dec
add
xor
push
stc
jb
add
add
ret
mov
rep
push
mov
xchg
ret
add
push
add
jb
add
add
mov
stc
jb
jecxz,pt
add
add
add
pop
fcos
incl
add
jg
xor
cmp
call
ja
add
mov
inc
add
adc
mov
add
nop
jmp
filds
add
ja
add
adc
ljmp
add
add
add
stc
jb
add
add
mov
adc
jb
aad
loope
add
add
dec
push
nop
jmp
add
mov
inc
add
jne
stc
jb
add
add
add
jle
mov
add
sub
sbbb
int
pop
jae
jb
or
add
add
popa
add
mov
xchg
ret
sbb
movzwl
stc
jb
add
outsb
add
lea
jmp
add
add
dec
test
test
inc
add
jmp
into
adc
adc
das
mov
stc
jb
add
add
cs
xchg
inc
fmull
jmp
sbb
add
push
divl
xchg
jae
mov
push
mov
xchg
ret
sbb
addb
mov
stc
jb
add
jmp
dec
add
jle
add
incl
add
ja
add
mov
xchg
ret
add
sbb
push
mov
xchg
ret
sub
ret
mov
mov
aam
incl
add
add
push
dec
push
mov
add
jbe
and
add
xor
insb
inc
jb
stc
jb
add
mov
lds
mov
stc
jb
les
sbb
pop
mov
stc
jb
lret
add
add
add
stc
jb
dec
add
add
push
mov
xchg
ret
add
into
jecxz
sahf
imul
stc
jb
add
sbb
push
xor
stc
jb
cmp
repnz
ds
sbb
nop
jmp
add
jmp
push
imul
in
incl
add
ret
jmp
bound
jae
push
push
mov
xchg
ret
rolb
popl
xchg
or
jmp
incl
add
imul
incl
adc
mov
cs
pop
stc
jb
lret
add
mov
add
push
mov
xchg
ret
add
dec
jns
push
mov
add
xor
push
add
mov
stc
jb
add
outsb
fistpl
jb
nop
add
test
scas
mov
push
mov
xchg
ret
loopne
repnz
jb
shl
add
mov
stc
jb
add
add
cmpl
add
inc
add
adc
incl
mov
cmp
push
mov
cmpsl
pop
push
lret
xlat
cmp
or
imul
mov
sbb
mov
in
les
inc
icebp
in
mov
add
dec
sti
fmul
pop
sub
ret
xchg
jns
inc
notl
sub
sahf
dec
cmp
fnsave
sub
jle
jb
add
ret
or
ja
lahf
sbb
cmp
inc
in
les
adc
mov
rcll
xor
dec
push
xor
add
add
aas
push
lcall
repz
in
push
pusha
add
add
jp
cmc
negb
inc
mov
test
imull
push
js
fldl
pop
je
sbb
jnp
cmpsl
pusha
add
mov
repnz
cmp
mov
daa
adc
xor
fnstsw
mov
test
aad
inc
jae
dec
jp
test
jmp
dec
inc
loop
ret
sbb
push
test
mov
loope
loop
lods
jno
dec
addb
add
rolb
sub
jge
or
pushf
jb
pop
and
add
int
leave
in
popf
dec
addb
icebp
push
sbb
popa
jecxz
add
pop
sbb
add
pop
sub
add
jmp
push
ficoml
mov
add
mov
maxps
sbb
popa
movb
and
add
lret
sub
cmpsb
and
add
fldcw
out
inc
bound
or
pop
jbe
push
push
push
mov
sahf
mov
ret
pop
xor
pop
or
xchg
mov
sbb
repz
xor
jne
lock
fldt
sbb
test
jecxz
or
movsb
adc
lods
and
jmp
stos
and
stos
fs
mov
inc
add
mov
mov
pushf
cmp
sbb
bound
addb
mov
stos
ja
xchg
movsb
popa
outsb
mov
aam
fisubrs
aam
adc
jns
jl
mov
mov
out
es
pop
int3
pop
xchg
fdivr
movb
xchg
sbb
and
stos
and
pushf
test
inc
add
arpl
add
fisubrl
mov
mov
ret
fsubrs
or
mov
in
fistps
xlat
lods
rolb
push
mov
jne
cs
scas
movsl
dec
mov
pop
push
jmp
aad
xor
add
repz
in
add
jecxz
and
stos
stos
lcall
mov
imul
adc
lods
mov
std
in
into
inc
add
in
cmp
sarb
pop
sahf
stos
repnz
filds
add
adc
jl
mov
sub
mov
sti
sub
cli
stos
repz
push
cmc
jb
enter
cmp
mov
inc
dec
pop
xchg
add
lock
add
cmp
scas
push
adc
rcr
or
push
outsb
sub
xchg
testb
addb
cld
ret
test
jmp
sbb
fmuls
and
pop
mov
xor
lods
sub
stos
sub
test
cmp
xchg
sar
ret
sti
loope
inc
aas
lret
mov
jo
and
or
cltd
insb
adc
add
clc
dec
add
addr16
cmp
aaa
out
dec
sahf
pop
cmc
icebp
mov
fnstenv
dec
mov
lahf
jp
add
add
loope
mov
test
sub
dec
push
les
sbb
pop
test
adc
and
fdivrl
add
dec
or
das
mov
jp
arpl
aad
bound
out
pop
cmpsl
stos
dec
cwtl
pusha
add
push
xchg
xor
stos
xchg
or
pushf
dec
sbb
mov
inc
add
fstp
cmp
loopne
inc
add
dec
sti
mov
lahf
cmp
nop
xorl
pop
sbb
add
mov
pop
fstpl
dec
enter
mov
jl
movsb
cld
vphaddbd
push
add
sti
aad
jne
cmp
popa
dec
stos
lods
in
out
daa
push
xchg
aaa
mov
or
pop
aaa
addb
add
imul
sub
sub
xchg
in
inc
add
in
jmp
push
sub
xchg
bound
jbe
inc
add
inc
pop
fwait
cmp
pop
stc
shrb
add
adc
lods
pushf
loope
addb
add
fdivrp
bnd
add
mov
not
sub
aad
cld
shll
or
sub
add
cltd
addb
add
into
adc
pop
fmul
and
pop
aad
inc
add
and
mov
insb
into
jge,pt
mov
fidivs
addb
jl
or
lret
sbb
lods
int
movb
call
aaa
mov
add
jp
movsl
stc
xor
mov
add
ret
mov
xlat
rolb
ljmp
add
and
jb
sub
mov
cs
inc
add
rcl
pushl
aad
push
out
jo
daa
pop
adcl
sub
scas
cmc
mov
inc
add
mov
mov
add
dec
call
mov
imul
rcr
and
push
pop
icebp
inc
aad
je
vmovlpd
sbb
add
into
xchg
mov
gs
test
add
out
mov
sub
xchg
add
cwtl
clc
in
adc
shll
test
sbb
push
xchg
dec
pop
mov
xchg
sbb
cmp
jbe
jb
xchg
mov
aad
add
cmp
in
rcrl
add
and
push
testb
jp
mov
cld
test
push
jecxz
dec
cmp
out
cmpsl
or
sub
sldt
sub
pushf
jne
cmc
mov
lock
jae
sub
add
pop
xchg
cld
mov
pop
xchg
int3
xor
push
jmp
pushf
mov
outsl
xchg
add
lds
mov
cltd
int
mov
loopne
and
jle
orl
pop
mov
in
fcmovbe
jp
data16
or
fidivs
lahf
imull
lcall
in
jmp
sbb
lret
je
ds
and
in
mov
mov
cmpsl
out
nop
xchg
inc
jae
adc
setp
jno
lcall
lds
jae
sti
sbb
xchg
loop
cmp
cmc
jmp
test
add
xor
lret
inc
add
lea
add
lcall
sub
mov
insl
ss
test
xor
push
pop
popl
push
mov
jmp
movl
les
icebp
push
cwtl
jl
imul
les
mov
and
push
add
stos
addl
inc
jle
add
adc
lahf
lds
int
es
shll
and
add
lds
iret
in
mov
inc
dec
inc
dec
mov
or
iret
jmp
inc
add
loopne
jmp
pop
fistl
push
es
cmp
mov
int3
mov
push
je
inc
add
popf
aam
mov
push
push
mov
xchg
addb
jbe
add
mov
mov
sti
mov
cltd
icebp
dec
jg
sub
cli
gs
sub
addb
mov
dec
xchg
xchg
std
or
cmp
inc
add
scas
hlt
out
ja
add
cmpsl
test
rcll
mov
add
inc
pop
sub
call
adc
push
lret
inc
add
loope
mov
das
mov
cmc
xchg
repnz
push
add
add
cli
sub
test
imul
pop
mov
decb
ficoml
jnp
outsb
mov
in
out
sbb
pop
lods
testl
add
test
cmpsb
rcrb
xchg
cs
cmp
imul
xor
inc
loopne
mov
out
shrl
jae
push
adc
imul
push
leave
xchg
dec
mov
les
popa
bound
inc
and
adc
nop
add
push
js
xchg
stc
cmp
add
inc
sti
add
mov
les
and
mov
sar
scas
cli
or
cmp
cld
in
mov
cmp
ret
out
dec
push
add
rcrb
call
and
pop
mov
xor
pop
les
cwtl
sbb
adc
dec
out
neg
sbb
xchg
je
and
push
std
push
loopne
bound
popa
push
jge
inc
add
addb
sub
rcrl
mov
pop
lea
add
jbe
or
cmp
add
pusha
add
fs
and
sub
lods
adc
mov
bound
mov
pop
push
test
ret
add
cmp
sbb
cmpsl
mov
add
mov
dec
addr16
fildll
and
iret
pop
orl
cmp
push
sub
add
lock
add
add
pushf
xchg
leavew
fadd
pop
pop
imul
add
push
lods
sti
repz
cs
add
jae
pop
push
int
jl
loopne
and
pusha
add
lcall
jns
mov
push
dec
push
lds
or
cld
in
mov
adc
addb
add
inc
add
push
into
sahf
aad
inc
add
sahf
push
divl
xor
repnz
outsb
ja
addr16
xor
add
add
cmc
mov
push
sub
add
enter
mov
xchg
push
sti
jno
pop
sbb
mov
loop
add
add
clc
cmpsb
push
push
xor
mov
xchg
js
xor
stc
mov
fdivrl
xchg
inc
test
fs
pop
ret
insl
lret
leave
xchg
sub
push
inc
add
mov
frstor
movsb
fs
dec
and
in
add
call
aad
aaa
lcall
or
ja
repnz
dec
in
lcall
or
pop
push
sahf
popa
cwtl
rcll
push
mov
data16
lret
push
jns
or
aas
jl
add
repz
jae
add
int
mov
sbb
imul
inc
outsl
cmp
xor
push
sbb
cmp
xchg
inc
fstp
mov
fildl
cwtl
psllq
rsm
dec
dec
pop
xor
add
test
push
dec
mov
or
jbe
dec
pop
lret
repz
xchg
add
and
clc
jns
insb
jecxz
jo
stc
mov
lods
pop
mov
fstps
test
psllw
das
mov
mov
ss
mov
sti
sarl
xchg
lret
cmc
xchg
int3
insl
xor
gs
loope
outsb
pop
movb
add
cmp
pop
mov
dec
xlat
pushf
dec
and
lcall
and
rolb
sbb
mov
lret
jge
or
pop
outsl
mov
lods
sahf
xor
bnd
ret
pop
jmp
popa
fcoms
mov
jb
push
jle
popf
or
sub
call
adc
jecxz
jno
pop
sub
arpl
rolb
add
xchg
sbb
cmc
sahf
dec
lods
movsl
add
jp
cmp
push
push
mov
xlat
out
sbb
add
ds
push
jo
mov
pop
inc
add
imul
addb
les
incb
int3
push
fstpt
jno
jo
insb
jno
psrad
xor
xor
cltd
mov
push
cwtl
cmp
mov
cmp
dec
push
sbb
mov
sbb
xor
add
data16
add
into
lahf
filds
scas
inc
cli
sub
cld
pop
xchg
mov
jp
mov
xchg
shll
inc
sub
mov
pop
jnp
jbe
push
fimuls
roll
nop
push
repz
dec
sbb
shlb
add
add
movb
in
add
fld
add
sub
xchg
stos
sub
sbb
add
add
aad
push
xlat
cli
inc
push
ljmp
push
addr16
xchg
mulb
movsb
inc
outsb
test
out
pop
call
mov
mov
push
std
inc
test
pop
mov
jae
dec
or
cld
ss
das
xor
lret
xor
xchg
rclb
add
pop
lret
cwtl
adc
dec
inc
divb
lds
jns
add
jnp
stos
faddl
cmpsb
stos
push
adc
in
addb
push
loopne
pop
aas
ret
cmpl
jno
mov
sbb
push
iret
sbb
mov
adc
xchg
in
lods
mov
repnz
mov
push
cmp
test
fnstsw
cmpsl
out
into
nop
call
sub
cmpsb
mov
cli
jmp
daa
fdivs
add
mov
es
and
mov
add
xor
test
sbb
sub
loop
cmpsl
mov
jns
cld
lcall
ja
fcomps
out
ja
add
das
js
loopne
push
imul
sbb
sub
jns
in
outsl
inc
pop
mov
cmpsl
sbbl
xor
xchg
push
mov
lods
jnp
mov
add
sub
in
out
pop
adc
insl
clc
jnp
in
add
lcall
lds
sahf
fbld
mov
add
pop
mov
add
jecxz
lea
lods
lds
cltd
stc
inc
add
leave
inc
jb
rcr
or
test
push
dec
mov
test
movsl
test
push
add
adc
adc
popa
psubusw
mov
add
mov
inc
rcrl
or
and
mov
push
test
add
ret
addr16
sbb
stos
cli
lcall
call
xchg
in
shlb
add
xchg
or
ret
jmp
fldenv
mov
pop
mov
mov
add
xchg
cwtl
scas
pop
dec
imul
mov
mov
sbb
dec
add
aad
or
mov
jge
add
adc
add
add
push
cltd
mov
sti
test
scas
fidivl
aad
sahf
outsl
mov
add
roll
cwtl
cwtl
xchg
fadd
add
pushf
scas
in
jg
iret
pop
sub
xchg
int
movsb
push
jge
es
cmp
dec
mov
jle
loopne
adc
mov
decl
sbb
ja
cmp
xchg
cltd
pop
ficompl
xlat
lahf
fcoml
movsl
movsb
call
add
notb
mov
sbb
mov
xor
sahf
xor
add
lret
dec
push
mov
test
out
add
sbb
add
push
xchg
outsl
lahf
fwait
push
roll
call
rolb
rolb
mov
push
xchg
and
loop
pop
test
jmp
jl
ss
add
fmul
cmp
cmp
add
data16
in
xor
mov
xchg
lahf
dec
mov
add
adc
mov
push
scas
mov
adc
push
sbb
adc
or
fiaddl
addb
repz
test
test
popf
or
mov
push
pop
pop
and
pop
xor
cltd
and
lea
loope
pop
and
inc
ja
shll
in
outsl
mov
mov
cmp
mov
xchg
sub
add
sbb
arpl
fwait
jmp
test
fdivs
mov
mov
inc
pop
sub
cmp
xchg
add
pop
adc
mov
std
in
mov
xchg
imul
in
out
cli
mov
add
outsb
sbb
clc
fbld
sub
imul
lahf
insb
mov
imul
cmp
adc
dec
cs
aas
mov
push
aam
adc
jns
add
rorl
xor
push
or
add
int3
dec
inc
add
and
ja
pop
test
lret
and
cmpsl
data16
lods
cmp
push
pushf
movsl
pop
mov
aad
xlat
lods
jecxz
fcoms
popf
test
or
ret
xor
adc
sub
cli
sbb
add
sahf
jbe
test
arpl
mov
addr16
add
imul
and
divb
aam
pop
or
sbb
xchg
xchg
dec
jecxz
or
mov
bnd
add
in
mov
add
push
ss
pop
or
aaa
rclb
push
out
sub
cld
fadds
pop
leave
in
iret
jmp
outsb
push
in
movsb
sarb
cmp
sarl
xor
aas
xor
jmp
aas
mov
cmp
push
cld
pop
adc
mov
add
add
movsb
pusha
add
stos
fisubl
out
xchg
mov
xchg
call
add
add
pop
mov
jmp
xor
lea
rcr
das
jnp
push
adc
pushl
ja
int
add
bound
dec
fidivl
add
int3
mov
cmc
shll
xlat
jbe
jge
add
aas
pusha
add
lods
xor
add
cs
add
adc
pop
xchg
cmc
repz
sarl
in
test
add
or
pop
push
pop
push
negb
pop
addl
jmp
push
into
sbb
ljmp
les
jbe
add
idivb
jns
sbb
iret
lock
mov
mov
jmp
mov
xchg
mov
mov
out
cmp
fwait
nop
cltd
test
add
mov
scas
outsb
dec
imul
add
jb
in
pusha
add
xchg
aam
mov
filds
add
lods
push
fisubs
xchg
mov
jl
mov
iret
sub
cmp
add
ja
mov
stos
lods
add
fwait
popf
sbb
bound
jmp
dec
mov
inc
stos
mov
enter
xchg
mov
sub
data16
add
xchg
xor
inc
add
addb
fists
lret
out
and
pop
rorl
cltd
rolb
stos
fsts
jecxz
pop
and
or
dec
scas
push
scas
push
data16
push
mov
scas
shlb
cmp
mov
adc
cltd
mov
lods
rorb
push
int3
lcall
sbb
scas
pop
dec
push
out
push
das
mov
dec
lret
movsb
xlat
dec
dec
scas
ret
or
or
in
loope
dec
fs
lods
inc
dec
jecxz
sahf
mov
sbb
jno
add
jb
jns
mov
int3
insb
daa
outsl
add
cmc
sarl
mov
js
xor
mov
add
inc
add
iret
and
movsl
pop
and
addb
inc
add
pop
sub
out
pop
ja
sub
mov
sub
sbb
aaa
fnstenv
add
mov
add
les
out
push
push
imul
sub
jp
add
push
lock
mov
iret
inc
std
pop
mov
mov
add
jnp
movsb
jo
and
sarl
dec
mov
insb
inc
or
sub
mov
mov
pop
mov
pop
push
out
mov
leave
xor
lahf
in
addl
add
gs
xchg
enter
sub
hlt
divb
inc
add
add
xchg
jbe
jo
dec
push
hlt
int
popa
add
pushf
inc
std
ja
ds
das
pusha
add
loop
sahf
out
loopne
mov
cmp
mov
sub
or
ret
jnp
fbstp
imul
mov
add
daa
cli
movb
or
in
push
rclb
lea
test
repz
cmp
add
cltd
es
nop
dec
popf
lcall
pop
xchg
jle
xor
pcmpgtw
mov
pop
jne
add
add
add
mov
fst
shlw
aam
adc
xor
inc
add
or
add
popf
mov
int3
or
add
add
sbb
lret
nop
adc
sahf
shl
pop
dec
outsl
cli
ret
addr16
hlt
aam
push
jp
xor
aam
cmp
inc
add
and
xor
out
rol
mov
rolb
ret
jle
add
scas
inc
and
fimull
or
test
in
sarl
movb
adcl
pop
push
mov
xor
push
dec
add
mov
or
mov
pop
test
xchg
cmpsl
sbb
ja
in
mov
cmp
pushf
fsub
out
mov
scas
subl
adc
insb
xor
adc
cmp
xorl
pushf
or
sbb
or
and
mov
jne
orl
push
mov
add
aad
subl
cmp
pusha
add
push
pop
pop
jp
test
mov
sti
in
es
dec
daa
sti
jno
cltd
mov
add
pop
adc
fwait
jno
sbb
shr
das
movsb
mov
add
add
sbb
dec
into
add
xorl
sub
addb
cmp
mov
loop
dec
pop
out
pop
lahf
mov
js,pn
ja
sub
adc
xchg
cmp
int
mov
int3
int3
enter
dec
inc
pop
inc
stc
adc
add
stos
mov
lock
mov
dec
ds
insl
inc
fdiv
fsubrl
add
sarb
mov
mov
movsb
inc
add
jns
test
sbb
xchg
fwait
push
add
jnp
outsl
les
fcmovbe
sbb
incb
repz
dec
xchg
mov
scas
loop
inc
pop
mov
lcall
mov
daa
stos
int
ja
imulb
loopne
push
push
icebp
mov
add
dec
mov
mov
jae
lret
cltd
mov
and
and
repnz
adc
add
movsl
jg
bound
and
loopne
push
insl
xchg
adc
lods
sub
bound
lahf
out
jp
cmp
sub
mov
cmp
cs
pop
mov
jg
sub
outsb
mov
sbb
mov
inc
lahf
jo
fwait
imul
cmpsb
dec
rorl
add
fdivrs
stos
mov
jbe
pop
test
shlb
sbb
test
test
stos
into
push
movsl
pop
shlb
and
add
rolb
jmp
inc
add
adc
je
fucom
aam
inc
push
adc
lcall
outsl
pop
jae
push
cmp
xchg
xchg
in
xor
jo
pop
mov
mov
sbb
mov
cmp
sbb
repz
ret
mov
add
and
pop
mov
or
sti
dec
sahf
stos
dec
sbb
push
lret
push
jmp
dec
and
push
mov
mov
jbe
movb
sub
je
sti
mov
mov
sbb
xchg
aas
cmpsb
and
push
icebp
push
or
out
lods
adc
call
cmp
outsl
addl
movsl
fbstp
add
scas
inc
lock
out
icebp
cmp
pop
cltd
rolb
lock
adc
out
adc
mov
jb
cs
sbb
or
cltd
lods
pop
sbb
add
inc
inc
add
aaa
jne
xchg
es
lcall
add
push
cld
cmc
inc
dec
xchg
lret
xchg
int
lcall
into
jae
jno
fldl
adc
in
addr16
push
test
push
push
pushf
xor
stos
rolb
mov
js
pusha
add
add
std
add
aam
or
dec
pop
cmp
test
dec
xchg
out
daa
popf
stos
mov
cmpsl
aas
outsl
pop
push
and
fcoms
xchg
ret
add
xor
movsb
sbb
or
fcompl
mov
xchg
addb
and
mov
adc
roll
dec
push
adc
push
xchg
loope
adc
mov
lret
cmp
addb
lock
int
or
push
xlat
lods
popa
or
inc
add
jbe
push
inc
add
lea
and
add
mov
xchg
je
test
jg
in
daa
jo
push
or
stos
inc
stos
mov
lock
mov
dec
fidivl
jmp
stos
sub
mov
dec
ljmp
jecxz
pop
rcr
pop
inc
add
nop
mov
add
incb
mov
xchg
jmp
add
dec
pop
lods
jge
jg
enter
mov
cmp
jb
outsb
jg
inc
mov
insb
xor
pop
enter
add
add
sub
outsl
jp
and
add
sarb
add
fnstcw
rolb
popf
lret
and
push
mov
jl,pt
add
dec
add
cltd
add
add
sahf
aaa
ds
push
cmp
or
ja
neg
or
cmp
xchg
shlb
jge
clc
mov
add
xor
addb
enter
push
pop
aad
add
dec
dec
fs
shll
leave
popa
rol
add
idivb
adc
leave
notl
mov
in
out
cmp
push
pop
incl
hlt
pop
xchg
arpl
add
add
sbb
cmp
mov
mov
cwtl
addb
mov
jmp
lock
or
or
cmp
add
mov
mov
decb
lret
insb
mov
cld
pop
ljmp
out
dec
in
lods
insl
cmpsb
es
pop
push
sahf
inc
lret
xchg
iret
push
mov
mov
xchg
or
sub
xor
add
arpl
pushf
clc
jmp
aad
mov
sbb
test
xchg
jne
les
push
jnp
imul
lock
fwait
hlt
xchg
mov
sub
xor
jmp
cmp
xchg
mov
push
lahf
sbb
outsb
pop
xor
or
add
dec
push
adc
or
mulb
addr16
fidivs
and
test
pop
idiv
dec
cmp
fwait
stc
or
dec
lds
test
pop
lea
inc
shll
dec
cmp
scas
test
roll
jle
and
cmp
pop
sub
add
inc
bound
int3
mov
in
sbb
fisubl
fmull
xchg
xor
dec
filds
mov
fldl2e
outsl
inc
add
push
addb
mov
dec
idiv
jg
and
int3
jge
or
je
scas
jo
xchg
movsl
out
add
mov
dec
sub
nop
pop
push
ja
jmp
iret
out
std
xchg
add
addb
pop
into
xor
adc
pop
data16
loop
enter
sbb
sbb
jg
xchg
data16
jle
and
pusha
add
fwait
inc
pushf
jle
loopne
xchg
mov
cwtl
and
repnz
push
loop
and
adcl
mov
ds
xchg
loopne
sub
arpl
test
mov
es
xchg
mov
daa
movsb
mov
xor
mov
fildl
add
xor
add
inc
outsb
mov
sub
insb
pop
dec
mov
dec
pusha
add
scas
pop
dec
rolb
mov
xor
sar
or
out
faddl
or
fcoml
sbbl
pop
cmpsb
and
ret
push
out
push
or
sti
test
stos
fsubrp
xor
add
stos
and
xchg
insl
out
fninit
mov
add
and
das
loope
icebp
pop
push
hlt
inc
bound
test
xchg
je
push
sub
dec
jae
lds
jge
pushl
fbld
out
or
mov
mov
cmp
negb
sbb
push
xchg
sub
je
xlat
rcll
mov
neg
les
fcmovnu
addb
mov
push
or
das
iret
bound
inc
add
je
lds
push
imul
insl
and
push
pop
sbb
call
cmpsl
lods
sub
mov
dec
cli
add
mov
std
add
fwait
cwtl
loopne
pusha
add
jnp
fcomps
mov
pop
dec
outsl
fdivp
push
scas
cwtl
in
mov
add
idivl
mov
lret
sbb
lret
test
and
js
addb
mov
lods
mov
cmc
add
sbbl
loop
sub
jmp
out
mov
mov
lods
aam
mov
push
xor
cli
out
mov
mov
cmc
stos
inc
mov
cmp
je
sub
jg
or
jo
jns,pn
pop
cwtl
dec
jno
or
jns
add
nop
push
outsb
nop
dec
mov
dec
push
add
addb
mov
hlt
movsl
out
and
into
pop
or
icebp
pop
movb
mov
add
pop
pusha
add
mov
dec
pop
lret
cmp
add
dec
mov
push
call
xchg
and
and
fucom
mov
mov
out
dec
fcmovb
shlb
fidivs
add
cmp
lcall
add
xchg
addl
adc
aad
push
cmc
mov
add
rcrl
mov
push
arpl
xchg
pop
add
inc
add
je
aas
sub
dec
inc
ficompl
fcmovnbe
jmp
bnd
sub
lea
add
sti
cmp
add
adc
add
add
pop
ret
add
or
cmp
test
lahf
cld
setnp
add
xchg
popl
popf
imul
ret
add
add
push
fildll
sarl
das
stos
movb
inc
add
jle
sub
test
mov
addb
mov
pop
mov
jne
and
ljmp
xor
add
cld
push
fdivs
add
dec
cli
xchg
inc
jp
cmp
loop
jo
adc
in
mov
xor
cmp
outsl
and
cmpsb
push
mov
jo
add
ret
in
dec
jle
loop
movsb
outsb
fwait
cmp
movsb
push
sti
pop
frstor
inc
add
addr16
cmpl
stos
mov
shl
fcomp
jb
cmp
dec
test
lods
lret
xor
mov
and
xchg
sarb
hlt
adc
xor
pop
pushf
fwait
jnp
sbb
add
cmp
lahf
test
adc
ss
es
dec
mov
lock
outsl
loop
push
stos
xlat
das
or
mov
sub
pop
imul
sub
mov
jnp
add
inc
add
mov
pop
xchg
lret
cli
push
xor
js
movl
bound
test
xchg
add
fs
jnp
movsl
dec
sahf
mov
xchg
inc
xor
imul
add
jl
pop
cld
or
addb
nop
int
and
aam
loope
ret
pusha
add
cwtl
popl
add
or
ret
push
push
icebp
mov
dec
jg
mov
daa
lock
or
xor
mov
add
movb
lea
enter
xchg
into
test
push
jns
std
mov
imul
popf
das
jecxz
cmpl
rolb
xchg
pop
test
daa
mov
cli
dec
jbe
leave
cwtl
mov
jecxz
add
lds
pusha
add
sahf
pop
imul
test
xchg
stos
into
sub
jmp
and
insl
movsb
mov
js
dec
dec
and
inc
and
ret
movb
sahf
stc
mov
out
xchg
pop
dec
mov
pushf
mov
dec
xor
xor
cli
push
or
addb
cwtl
inc
add
dec
stc
punpckhwd
dec
add
movsb
outsl
imul
xlat
aad
aam
mov
add
xchg
mov
out
ljmp
in
mov
add
in
add
fucomp
push
mov
addb
aas
xor
aam
mov
scas
test
cmp
inc
adc
movsl
push
inc
cld
jne
mov
lcall
std
jo
aas
and
bound
loope
mov
ds
in
add
outsb
loopne
ljmp
add
add
test
push
outsb
push
out
cmp
out
mov
push
sbb
mov
jns
repz
sub
mov
or
cli
daa
xrelease
inc
add
sub
lret
or
pop
mov
shlb
cmp
mov
aad
push
dec
jmp
mov
js
stos
popf
pop
scas
mov
shl
and
dec
pushf
and
cli
xchg
and
jg
xchg
ljmp
adc
ret
mov
out
int3
mov
cmp
pop
add
push
sub
fistps
into
or
mov
sbb
cmp
stos
loopnew
cmp
sbbl
bound
daa
adc
fsubl
pushl
test
add
sub
clc
ds
pop
mov
in
xor
mov
add
xchg
fidivrl
faddl
ja
fdiv
pop
ja
add
add
or
mov
loop
adc
fnstenv
cmpsl
lret
mov
lret
gs
add
sub
push
bound
pop
or
cmp
dec
and
mov
push
testb
inc
push
leave
pop
bound
xchg
into
jg
pop
pop
jne
add
lret
mov
jb
sbb
lds
adc
xchg
mov
mov
cmc
inc
add
or
adc
add
add
mov
fs
jb
outsl
and
scas
in
inc
scas
flds
movsb
and
shll
lret
pushl
cs
mov
mov
mov
stos
ret
and
lret
jg
ficoms
xchg
fnstcw
ficoms
adc
mov
sub
test
dec
bound
clc
xchg
xchg
and
idivl
add
fistpll
add
add
addr16
fidivrs
add
nop
lds
or
popa
inc
mov
je
push
and
mov
dec
cmp
popa
clc
addb
push
add
dec
mov
xor
movsb
and
cmp
sbb
xchg
mov
sub
movsl
xchg
addb
dec
sub
mov
mov
or
ljmp
bound
cltd
push
arpl
psubd
mov
in
xor
jg
and
lret
jmp
icebp
enter
pop
adc
fwait
xor
push
mov
ret
adc
mov
cmp
fbld
std
in
mov
in
sub
cld
mov
pop
and
mov
shll
hlt
fcomip
pop
insl
imul
adc
and
repnz
sub
popa
mov
push
daa
js
bsf
repnz
mov
sub
mov
add
xchg
inc
add
stos
cli
xor
mov
jecxz
enter
pop
push
inc
add
ds
sti
jb
imul
rclb
test
sub
mov
mov
fistl
sti
xor
add
aaa
inc
loope
aas
repnz
out
daa
cmpl
mov
mov
rclb
repz
andl
and
sub
fimuls
cmc
arpl
push
add
scas
jae
test
hlt
mov
adc
pop
inc
adc
jno
adc
mov
fsts
or
adc
add
aam
es
sti
inc
rolb
or
mov
roll
xchg
add
xchg
lods
push
sbb
mov
adc
leave
fwait
sub
mov
pop
push
mov
ss
sbb
call
jns
mov
add
inc
push
sub
call
repnz
xchg
stos
add
mov
in
mov
addps
xor
inc
add
and
lret
push
iret
mov
sbb
and
addb
inc
add
sbb
push
lahf
mov
popa
out
sahf
sbb
iret
push
inc
add
add
lea
mov
mov
inc
add
dec
test
fldl
imul
icebp
and
pop
mov
inc
add
add
add
add
cmpsb
mov
mov
push
in
adc
sub
imul
je
std
cmp
lock
les
xchg
je
pop
jg
lea
add
and
add
push
lods
mov
lds
add
fwait
jp
or
stc
add
xchg
xchg
xor
inc
std
sub
mov
dec
movsl
push
ds
out
call
dec
fstl
ret
lret
xor
stos
rol
add
fisttpl
sbb
add
fwait
add
mov
fcmovb
pop
inc
add
mov
and
jmp
or
pop
jmp
movb
shrl
add
push
jecxz
in
mov
addl
mov
rolb
ja
nop
dec
inc
add
mov
rolb
pusha
add
add
add
xchg
mov
xchg
or
add
call
scas
pop
lcall
adc
push
mov
add
mov
jge
jbe
jno
add
pop
lcall
fwait
jg
add
popa
mov
sub
testl
rolb
xchg
dec
inc
add
divb
loopne
hlt
loope
imul
xchg
inc
add
inc
mov
repnz
shll
sub
rol
in
in
xlat
out
jmp
outsl
lea
add
out
add
add
adc
sti
pop
and
push
sub
lds
cmpsb
cmp
xlat
mov
stc
sbb
arpl
push
mov
add
insl
jg
cld
roll
dec
cvtsd2si
movsb
cmp
pop
in
push
loope
popa
scas
lock
test
push
push
call
insb
push
mov
jbe
and
push
clc
and
ds
add
fsubrl
das
test
adc
add
or
add
fidivrs
push
repnz
mov
gs
mov
fcompl
test
and
fsubs
add
aam
mov
and
push
add
adc
or
ret
sbb
jns
add
xor
add
or
clc
push
test
bound
in
mov
cmc
mov
xor
push
adc
loop
add
divb
roll
add
mov
inc
add
mov
xchg
in
shlb
cmp
or
cmpsl
and
sub
xchg
pop
ja
mov
and
xchg
inc
sbb
add
cs
jl
adc
lods
jge
repz
and
add
rcrb
add
sub
jecxz
mov
shr
mov
push
inc
ret
lahf
enter
test
lahf
ffree
test
jl
cs
lret
sbb
sub
std
pop
clc
adc
imul
pop
or
pop
or
lock
inc
and
mov
and
jl
sbb
sbb
aas
jno
ret
push
lock
add
fsts
aaa
ljmp
bound
pop
pop
fdivs
fisubrs
out
cmp
dec
xor
outsb
test
ret
jb
mov
mov
enter
add
add
clc
xchg
lret
fiaddl
scas
lods
mov
jecxz
out
in
fisttpll
rclb
push
cltd
js
outsb
mov
add
stos
xor
insl
test
test
jbe
mov
movsb
mov
fdivrl
cld
xchg
ret
lods
fisubs
add
inc
add
loopne
pop
lods
mov
ss
stos
popf
push
adc
mov
mov
adc
and
sub
add
cwtl
sbb
pop
dec
xor
nop
add
sbb
cmp
push
jecxz
outsb
sti
repnz
in
lock
push
mov
add
sub
imull
in
nop
xchg
dec
mov
pop
cmpsb
pop
hlt
xchg
add
cmp
and
insb
pop
out
and
mov
cmpl
mov
lcall
dec
test
xchg
and
aas
mov
push
stos
rcrl
bound
je
stos
pushl
inc
out
add
sbb
sub
daa
loop
cmp
icebp
cmp
int3
push
jecxz
sti
pop
mov
and
jne
xor
je
mov
add
int
add
iret
leave
jne
sbb
sbb
add
mov
cmp
pop
addr16
jl
or
dec
pop
lods
call
cld
scas
addb
push
adc
enter
pop
inc
add
xchg
add
push
insb
packuswb
pop
jbe
xchg
mov
std
lods
xor
pop
arpl
movb
movsl
pop
dec
lods
pop
outsb
mov
add
xchg
fistpl
mov
in
mov
mov
fwait
imul
je
push
pop
rolb
or
xchg
and
test
cwtl
add
lret
ljmp
sub
add
adc
add
inc
xchg
xchg
lahf
mov
mov
xchg
push
add
addr16
and
lret
hlt
adc
dec
leave
enter
fldcw
push
in
mov
xchg
or
std
cmp
ret
fmuls
dec
sub
bound
cmc
into
or
push
adc
add
pop
inc
add
inc
add
sbb
insb
push
idivb
adc
inc
dec
and
jg
insb
or
outsl
test
sti
push
cmp
jmp
xchg
out
or
fwait
inc
add
add
dec
in
add
add
sbb
popf
data16
dec
inc
add
jg
xchg
pop
cwtl
call
xchg
lods
push
push
mov
add
xor
cld
jb
inc
add
and
jnp
add
mov
jp
ficoml
adc
add
aam
dec
aaa
sub
inc
add
cmp
push
outsl
popa
pop
loope
inc
add
out
scas
push
sbb
mov
arpl
add
lret
add
xchg
shll
push
add
push
push
add
outsl
iret
mov
gs
add
cli
jle
pop
jmp
jno
sub
test
mov
mov
add
pushf
lahf
sahf
xchg
jl
add
scas
xchg
sbb
cmp
add
jae
int
xor
mov
xchg
inc
incl
and
mov
rcr
or
pushf
pop
aad
mov
dec
ljmp
out
push
pop
ja
cld
addb
xor
icebp
inc
pop
aad
add
add
inc
insl
int3
addb
sbb
mov
add
pop
cltd
in
push
popf
ds
outsl
rcll
bound
dec
hlt
fidivs
pushl
xchg
xchg
je
stc
push
sahf
push
inc
add
js
adc
pop
jp
scas
push
add
ror
repnz
stc
addb
test
cli
and
mov
pop
cs
push
int3
mov
clc
aas
out
mov
or
xlat
inc
add
inc
out
jb
fstps
dec
sub
pop
movsl
sbb
shr
out
dec
cmc
fcoms
mov
adc
add
stos
jnp
ret
xchg
sbb
jnp
bound
add
fdivrp
or
add
add
or
sti
inc
pusha
add
or
add
pop
and
jne
movb
call
inc
add
add
in
xchg
lock
cmc
sbb
in
scas
enter
xlat
xchg
lock
pop
fnstcw
in
adc
mov
in
pop
pusha
add
pop
repz
lds
in
test
outsl
scas
dec
cmpsl
pop
in
and
in
ljmp
sub
rolb
dec
xchg
movsl
or
sbb
xchg
jno
add
scas
frstor
adc
inc
add
enter
xchg
leave
sahf
jnp
sub
aas
xchg
test
pop
fwait
addr16
xor
stc
icebp
iret
sbb
stos
movsb
mov
into
push
dec
loopne
data16
outsb
loop
and
or
dec
repz
jns
jne
mov
pusha
add
lret
push
or
mov
fidivrs
iret
jmp
mov
clc
lret
jp
jae
pop
hlt
jmp
popa
outsl
sub
ret
add
push
leave
push
outsb
out
xor
xchg
xchg
daa
mov
or
add
add
loope
jae
add
xchg
and
xchg
scas
push
mov
outsl
and
scas
adc
cmp
out
es
sbb
mov
and
out
inc
add
or
pop
out
cld
mov
and
xchg
pop
es
jle
movsb
push
negl
addr16
mov
and
jp
out
add
adc
add
mov
lcall
add
rorl
jecxz
add
test
hlt
test
add
iret
scas
popa
outsl
mov
push
lds
mov
mov
push
movsb
sbb
inc
movsb
icebp
mov
lods
js
dec
movsl
fbld
mov
dec
rolb
push
push
add
push
cmp
mov
jae
lea
movb
xchg
pop
and
inc
pop
mov
mov
ret
push
mov
sarl
jb
mov
inc
push
shll
sub
insb
add
lahf
cli
mov
jb
pop
je
jecxz
jle
pop
or
add
mov
roll
mov
repz
xchg
sub
push
or
bound
jg
rolb
clc
sub
jg
imul
or
and
add
sub
sub
push
mov
xor
mov
add
arpl
cmpsb
in
repnz
loopw
imul
pop
xchg
xchg
mov
in
mov
push
add
mov
loop
les
adc
test
mov
push
add
addb
add
ret
add
sub
push
mov
sub
push
idivl
imull
mov
out
movsl
sbbl
push
sub
test
add
imul
aas
or
movsl
jns
push
sahf
mov
addb
ret
shr
lsl
repz
pop
lods
popf
mov
mov
dec
ficoms
dec
push
cmc
leave
scas
mov
jne
lret
push
repz
aad
bound
mov
js
xchg
and
jnp
add
jns
popa
add
cmpsb
scas
inc
add
fstps
data16
pop
adc
mov
push
add
cwtl
outsl
xchg
call
ficoml
xchg
sub
push
pop
pushf
mov
sar
clc
cmp
test
push
adc
test
lods
xchg
addb
jl
xlat
neg
jg
dec
pusha
add
sbb
daa
xchg
mov
notl
sbb
push
mov
dec
lea
xchg
out
mov
inc
or
mov
mov
adc
inc
iret
xchg
stos
ja
mov
mov
ret
in
jne
jae
xchg
sub
xor
adc
out
lea
push
xor
ss
repz
xor
dec
cmp
fnstsw
xor
es
test
aad
and
ret
in
sbb
pop
adc
cmp
jge
nop
lds
lea
lds
hlt
stc
push
shrl
mov
repnz
mov
ret
pop
pop
sti
insb
cmp
cmp
sub
lahf
addr16
mov
movsl
push
xor
imul
in
ret
lea
mov
fs
mov
add
and
addb
mov
subl
mov
mov
add
mov
es
push
dec
cld
dec
dec
testb
jp
fwait
aam
repz
mov
xchg
mov
fldl
imul
cmp
repz
lret
outsl
pop
movb
add
add
adc
ja
aaa
ja
cs
imul
ret
scas
or
adc
mov
jne
mov
xchg
or
mov
das
and
lahf
nop
cmp
outsb
mov
sub
and
and
mov
add
mov
jae
xchg
addb
or
je
aam
xchg
push
out
xor
pop
jmp
dec
cmp
icebp
scas
adc
scas
js
insl
hlt
and
mov
jbe
adc
int
icebp
cltd
cwtl
inc
add
lret
pop
cmp
packuswb
les
xchg
push
push
mov
test
push
shlb
jle
add
mov
pop
mov
pop
shl
fnstsw
jno
dec
jp
je
sub
ror
pushf
mov
inc
add
or
sti
and
push
sub
pop
sub
push
add
dec
and
addb
ret
mov
cmpsb
xchg
std
mov
sub
add
lods
dec
imull
inc
notb
xor
cld
mov
nop
mov
ret
add
rcrl
test
push
push
in
xchg
scas
iret
repnz
mov
loop
inc
xor
add
xchg
sbb
or
sub
push
aad
aas
xor
mov
mov
push
or
add
add
add
push
insb
daa
pop
inc
add
adc
pop
mov
cmpsb
inc
lds
cmc
mov
scas
mov
jecxz
inc
inc
add
scas
push
into
adc
outsb
or
add
icebp
mov
int3
mov
fisttpll
dec
push
call
push
lods
je
out
movsb
lahf
mov
lods
adc
out
scas
pop
push
mov
cmc
out
bound
rolb
push
sbb
xchg
mov
mov
scas
xchg
lret
mov
cmp
pop
rcrl
xor
ss
outsb
jmp
js
cs
add
in
or
fsubrs
lret
lods
aas
or
pop
js
ljmp
inc
add
mov
into
inc
inc
dec
stos
pop
inc
add
test
push
cmpsl
mov
pop
jecxz
add
pop
cwtl
cld
insb
push
and
sbb
dec
loopne
test
inc
fs
dec
adc
cmpsb
push
shrb
add
cmpsb
xor
add
mov
cmp
sub
cltd
and
add
loop
add
inc
jae
mov
inc
add
lahf
aas
ret
and
testb
or
mov
ss
add
insl
lret
imul
iret
mov
js
push
jbe
add
cmpsb
or
xor
dec
mov
cwtl
sbb
sub
sbb
inc
xlat
fadds
add
out
mull
mov
adc
add
popa
mov
fdivrl
or
sarb
sbb
shrb
add
mov
cmp
mov
cld
mov
fsubs
mov
clc
pop
fidivrl
pop
popa
imul
pop
daa
mov
push
xor
gs
stos
push
ret
rolb
jg
jnp
lahf
iret
arpl
add
mov
ret
inc
movsb
jnp
cs
outsl
repnz
sbb
sbb
lea
cmp
inc
rolb
or
adc
lret
pop
xchg
mov
cs
es
std
lods
movsl
pop
add
mov
addb
insl
aad
xchg
in
in
mov
shl
pop
jecxz
jmp
test
mov
mov
mov
shll
inc
add
outsl
out
pop
fsubrl
jo
push
xchg
jp
fwait
jl
popf
sub
xor
getsec
xchg
add
gs
dec
int
jae
ret
jns
jg
sqrtps
dec
cmpl
fs
mov
std
sub
ret
or
pop
sar
outsb
ror
js
cld
fdiv
add
dec
int3
cmp
add
xlat
popf
mov
mov
scas
lds
je
cli
sbb
sti
push
enter
cwtl
nop
dec
je
add
test
adc
mov
jp
jnp
xlat
lahf
testb
hlt
mov
jecxz
mov
mov
inc
stos
mov
loope
and
gs
mov
or
stos
xor
je
popa
inc
add
add
into
xor
dec
in
add
add
mov
jb
mov
mov
xchg
rol
add
jmp
sub
add
push
add
sub
cltd
outsl
arpl
pop
jb
lahf
or
push
mov
push
sub
jg
push
mov
repz
icebp
jno
negb
push
jnp
imul
mov
adc
or
add
es
cld
adc
mov
adc
movsb
stos
inc
adc
adc
shlb
pop
sbb
mov
addb
div
and
ficompl
xchg
in
add
mov
fistps
cli
test
popl
out
add
pop
xchg
bound
test
ss
sbb
jae
add
xor
sbb
imul
inc
addb
ds
xchg
dec
jo
addb
sub
push
rolb
cmp
add
pop
mov
cmp
push
inc
sub
movsb
inc
add
sbb
push
xchg
add
xor
sarl
xor
push
stos
leave
pusha
add
xorl
mov
adc
cwtl
pop
add
dec
and
xchg
add
add
pop
in
add
cmp
mov
addb
ljmp
scas
or
insl
aas
cld
shrl
test
xchg
fisttpll
sub
cmp
dec
and
cmp
push
adc
xor
daa
or
rcl
jns
loopne
and
loop
jmp
push
mov
lret
xchg
cs
in
pusha
add
hlt
popa
jle
ds
out
lods
inc
push
sub
jmp
addb
imul
aas
into
idivl
sbb
add
into
xlat
js
cmp
dec
pop
fstps
push
push
xor
pop
dec
dec
or
ja
ja
fisubs
inc
add
add
add
add
in
mov
adc
movsb
lods
popa
mov
add
add
les
cmpsb
ds
into
push
rolb
fs
jp,pt
mov
arpl
out
lea
xchg
iret
xchg
jne
call
sarb
into
addb
pop
lea
int3
mov
scas
xchg
or
pushf
dec
cmp
std
daa
mov
mov
push
pop
out
popf
ficoml
push
mov
insl
sub
in
test
mov
xchg
cmpsb
shr
lret
popf
movsl
mov
fs
push
test
jmp
loop
push
dec
and
popl
cmp
sbb
clc
fstpt
sub
bound
add
repz
lods
cmpsb
and
mov
jl
data16
es
repz
mov
jb
xchg
pusha
add
xchg
dec
ja
loop
add
clc
rolb
dec
xchg
icebp
imulb
mov
rcr
inc
mov
clc
cli
mov
sti
popl
sub
pop
std
cli
jne
mov
mov
cmp
in
stos
and
adc
fildl
mov
jno
arpl
popa
dec
add
push
mov
incl
xchg
and
add
mov
mov
xor
fcomps
pop
data16
add
repnz
add
cmovle
sahf
xchg
das
pop
repnz
lds
fadds
mov
fstp
psubd
jno
adc
add
pop
in
inc
add
mov
cmp
aaa
sub
pop
leave
in
inc
add
inc
add
out
inc
add
cmpsb
pop
jae
dec
aam
sbb
xchg
scas
cmp
push
xchg
xchg
ds
xchg
gs
cmpsb
jecxz
adc
or
xchg
cmp
aad
test
lea
add
lahf
mov
jno
add
lret
inc
add
sbb
fcoml
dec
and
mov
lods
pop
ja
addb
pop
push
xchg
mov
cld
inc
add
rcrb
xchg
addb
lcall
inc
add
sub
add
inc
add
sti
lods
je
std
and
rol
movb
cmp
add
shll
cmpsl
inc
push
adc
sbb
out
cli
add
stos
lret
or
or
ljmp
addb
fst
jp
lock
add
jge
jge,pn
xchg
jno
es
cltd
xchg
fstpt
mov
lret
out
mov
insl
popf
inc
das
aaa
rolb
cmpsb
fadds
add
jp
cmp
fisttps
push
pop
hlt
xchg
psrad
out
leave
mov
imul
insb
movb
mov
xchg
sarb
pop
jmp
cmp
add
cld
add
loopne
pushl
mov
lods
jge
or
fldenv
pushw
xor
push
scas
imul
stos
jno
xchg
or
pop
pop
repz
add
xchg
lea
xlat
frstpm(287
leave
mov
dec
ret
cs
adc
jmp
add
jno
sbb
push
inc
lds
sub
adc
iret
fnsave
pop
sub
lret
rolb
mov
dec
sub
insl
push
shrl
int
scas
out
mov
xor
sbb
xchg
in
jns
cs
inc
add
leave
push
fs
pop
jno
sub
in
addr16
mov
xor
addb
dec
mov
mov
popf
bnd
push
mov
mov
push
xor
mov
jo
add
fbld
mov
add
popa
std
mov
xor
repz
aam
mov
lods
push
test
add
push
aam
mov
rcrb
dec
out
je
iret
ds
pushf
push
add
mov
add
popf
fdivrp
cltd
xor
adc
xchg
testb
cmc
push
in
pop
xchg
movsl
or
cmpsl
xor
js
out
nop
fucomip
insl
loop
and
addr16
and
punpckhwd
fwait
das
pusha
add
jae
cmp
add
out
popa
push
xor
fucom
xchg
push
sub
je
add
in
in
ret
ficompl
dec
or
divl
ja
add
lcall
sbb
xor
mov
pop
out
shll
mov
out
je
sbb
mov
add
inc
add
sub
adc
test
imul
icebp
inc
add
fchs
inc
xor
push
fs
fcompl
loop
push
mov
mov
adc
sti
add
inc
jmp
xchg
std
shrb
dec
dec
pop
loopne
psubusw
not
or
cwtl
mov
and
addr16
add
add
mov
mov
loope
add
cmpsb
sub
cltd
push
stos
shll
mov
leave
test
cmp
in
aas
ss
repz
xor
cmp
cmp
cld
dec
sub
add
fistpll
out
xchg
jb
mov
pop
jp
and
push
outsb
fwait
and
push
cltd
xor
clc
mov
and
xor
adc
xchg
adc
mov
push
adc
push
inc
cltd
outsl
mov
add
adc
xor
jo
mov
icebp
addb
inc
add
add
mov
adc
push
xchg
cmpsb
push
adc
iret
pop
mov
movsl
pminub
movb
pop
sbb
xchg
cli
rclb
addb
inc
add
mov
add
imul
imul
lahf
and
add
es
jp
or
mov
stos
jmp
insb
fucom
sahf
int3
mov
and
add
mov
decl
jae
sbb
dec
fadds
pop
push
push
es
ret
sub
cltd
mov
cmc
rorl
push
outsb
or
loopne
lret
test
xchg
pusha
add
stos
imull
add
lcall
mov
inc
sahf
sti
mov
add
out
sbb
jne
jg
mov
pop
cs
aad
mov
jne
mov
cmp
dec
pusha
add
icebp
into
cli
fstps
aam
mov
cmp
stos
dec
repz
stos
cmp
and
lods
add
dec
mov
add
mov
mov
xor
and
dec
dec
aad
dec
mov
xchg
dec
inc
add
lahf
jle
fidivl
fwait
movsl
mov
add
mov
sub
mov
mov
jae
in
xchg
ret
pop
movsb
xor
fdivs
cmp
mov
jb
jp
add
scas
mov
imul
add
cmc
jp
pusha
add
cmp
add
add
cld
push
cmp
add
mov
test
pop
sbb
cmpsb
lds
mov
test
adc
sbb
sahf
addb
cltd
ret
jbe
cwtl
fwait
test
add
sahf
sbb
inc
add
ret
test
or
add
inc
add
add
in
push
pop
les
mov
mov
addb
sbb
adc
cwtl
loope
arpl
push
repnz
jb
mov
pop
mov
push
push
idivl
pop
call
add
jp
popa
xchg
sbb
push
jbe
xchg
mov
jbe
push
lods
pushf
ret
lcall
rorl
ljmp
fidivrl
add
add
repnz
test
rolb
js
pop
iret
jbe
push
out
add
lret
pop
fstpl
sub
sti
sarb
adc
dec
mov
push
xchg
sub
xor
sbb
add
mov
pop
stc
add
cmp
scas
xchg
inc
push
sub
cltd
mov
or
sti
jge
pop
jmp
add
sbb
pop
js
insb
fadds
add
mov
out
insb
out
outsl
dec
mov
mov
sub
les
sarb
mov
movsl
pop
clc
adc
add
test
jg
xadd
outsl
leave
dec
sub
xchg
cmp
sbb
insl
xchg
jg
adc
add
stos
mov
pop
fsubs
adc
jno
add
sbb
sbb
mov
fimull
mov
pop
lahf
rclb
xchg
cwtl
xchg
adc
sbb
jg
push
adc
es
sbb
xchg
dec
jge
adc
dec
xlat
lock
push
adc
pop
push
mov
jns
xchg
and
addr16
cmp
rcl
sbb
ds
mov
fists
outsl
adc
leave
sar
test
and
push
add
inc
cli
sub
xor
add
fnstcw
dec
mov
push
fstps
cli
dec
test
fwait
call
ljmp
xchg
or
in
push
dec
stc
mov
push
insb
xor
push
add
add
inc
add
cmp
lret
pusha
add
fwait
mov
add
and
push
sbb
inc
add
jne
shrl
repnz
xchg
nop
push
adcl
sbb
cmp
stos
cmp
shlb
xor
dec
in
sbb
imul
sbb
sahf
pop
xor
mov
repz
push
in
add
rorl
jge
cmpsl
mov
add
jp
movb
lret
sub
das
xor
add
add
aas
push
rcl
pop
cmp
cmp
push
xchg
into
xchg
imul
cmp
addr16
or
imul
sti
dec
inc
fstl
out
sbb
cmp
add
pop
mov
jbe
adcl
movb
jge
adc
dec
mov
mov
pusha
add
or
pop
bnd
lret
cmp
mov
dec
or
addb
mov
outsl
sub
js
or
stc
add
aam
and
sahf
adcl
lahf
jge
xor
sbb
sub
xchg
int3
std
scas
fadds
lds
les
inc
sub
lea
sahf
mov
xchg
lret
sub
mov
addb
movsl
fidivs
int
shll
add
jbe
fistpl
sbb
imul
ret
jns
in
mov
bound
lret
test
xchg
dec
dec
cmc
cmp
fstl
cltd
rclb
arpl
movsl
jae
clc
sahf
stos
inc
add
imul
mov
add
dec
sub
sbb
es
sub
je
loope
iret
dec
mov
addr16
sub
ret
lock
imul
mov
movb
cmpsb
scas
mov
stos
sub
sbb
push
inc
add
es
pop
call
out
jno
xchg
loop
sub
pop
mov
stc
cmpsb
dec
xchg
push
jmp
dec
test
mov
mov
sub
mov
dec
pop
cli
mov
fcmove
ds
pop
mov
ret
or
aas
mov
add
inc
add
jmp
in
add
add
add
nop
pxor
dec
shlb
xor
add
enter
or
inc
add
cmpl
mov
in
negb
and
clc
sub
aam
lcall
push
mov
or
or
aas
es
cmp
fwait
sub
adc
loopne
jge
mov
adc
cmp
xlat
insb
mov
clc
cmp
jne
cmp
jmp
test
jge
cwtl
fstps
addl
add
or
mov
mov
jnp
adc
push
adc
add
xchg
sti
dec
sbb
jbe
mov
push
sub
stc
lods
shr
popf
shrb
ss
push
leave
push
mov
cwtl
outsb
mov
inc
add
adc
imul
dec
mov
addb
or
pusha
add
repnz
push
aad
gs
add
in
pushf
jecxz
sbb
push
xlat
sarl
pop
popa
out
sbb
clc
mov
add
dec
loopne
stos
mov
rcr
addb
lea
test
loopne
scas
adc
ret
xor
je
test
mov
rolb
enter
push
jno
pusha
add
test
call
mov
add
mov
dec
sub
add
jns
aaa
repnz
mov
pop
je
adc
iret
into
cs
in
test
dec
sbb
loope
decb
xchg
fs
paddsw
repnz
loope
gs
pop
adc
cmpsb
insl
pop
push
loope
xor
in
jmp
nop
lret
fwait
pop
mov
xchg
cmp
mov
ja
lods
xchg
or
ret
mov
xchg
xchg
inc
add
and
sahf
jae
imulb
pop
xor
add
and
dec
fmuls
scas
or
jge
mov
fwait
test
sahf
test
mov
jbe
repz
test
std
xchg
test
mov
cmp
repz
mov
push
iret
and
and
shl
lret
lret
es
in
pop
xchg
adc
addb
rolb
dec
ret
cld
das
dec
mov
add
ret
and
outsb
aas
sub
movsl
sub
movsbl
shrl
fdivrp
hlt
je
jb
add
adc
mov
or
xor
movsl
faddp
add
or
mov
push
int3
mov
sub
fisttpll
xor
sahf
add
fnstcw
mov
and
add
out
pop
addb
and
movsb
arpl
add
xor
cltd
sbb
mov
test
cwtl
cmc
pop
test
jnp
out
loope
bndldx
cld
scas
xchg
addr16
pop
stos
nop
sub
in
nop
or
add
int3
dec
shl
jno
lock
sub
push
rol
inc
add
dec
pop
nop
and
out
cmpsb
xchg
movb
mov
mov
jecxz
add
mov
pop
xchg
cmpsl
xor
hlt
out
inc
add
movsb
xor
scas
adc
aam
lret
mov
add
pop
test
stos
mov
out
mov
inc
add
add
xchg
fucomip
hlt
stos
clc
add
mov
add
rep
and
les
cmp
mov
mov
in
sbb
push
shll
or
cmpsb
mov
cmp
and
mov
or
inc
test
lods
lods
pop
push
iret
and
bound
jmp
mov
test
shll
inc
add
add
clc
pop
enter
adc
add
jl
xbegin
addb
inc
add
inc
add
repz
dec
add
add
les
xchg
mov
xchg
push
cmpl
mov
xchg
adc
incb
pop
test
imul
addb
jl
pushf
push
loop
mov
fcoml
lcall
inc
add
push
xadd
sahf
or
jmp
aas
jbe
clc
aam
mov
xchg
cwtl
and
mov
pop
inc
cmp
rcll
sbb
add
sarl
aaa
shll
imul
jmp
lahf
scas
dec
jge
add
or
inc
xchg
mov
jne
inc
and
add
jge
or
xor
and
cmp
test
xchg
jnp
push
push
ja
xchg
arpl
add
in
dec
push
shl
mov
add
add
arpl
ret
clc
test
add
scas
loop
jg
outsl
loop
movsb
scas
lcall
jecxz
sbb
imul
pop
inc
add
or
scas
xchg
jge
sbb
outsb
in
mov
repz
sbb
incl
dec
push
out
push
add
cmpsl
dec
mov
pop
inc
add
lahf
jbe
fbld
sub
cld
hlt
cmpsl
decl
sub
and
movb
in
sbb
dec
cmp
pop
push
sub
lea
and
test
jg
test
mov
rorl
addb
sbb
or
add
mov
mov
int
mov
cmpsb
add
cmp
into
and
iret
aam
shll
push
mov
dec
mov
shrb
jecxz
push
adc
lret
xchg
mov
add
sbb
aas
inc
jo
pusha
add
jno
dec
pop
cmp
push
icebp
stc
cmpsb
mov
add
sub
adc
add
les
add
mov
lea
into
mov
add
fisttps
adc
popa
mov
sahf
fadds
in
add
addr16
shlb
dec
insb
jmp
add
repz
add
movb
jge
lret
inc
add
ds
dec
mov
repnz
shrl
mov
xor
jecxz
icebp
pop
insl
ret
mov
push
xchg
inc
add
push
add
ja
mov
jnp
push
add
hlt
mov
dec
mov
mov
and
dec
cmpsb
mov
add
int3
scas
sbb
xchg
xchg
lea
cmp
arpl
enter
mov
xchg
mov
test
cmp
adc
fcmove
mov
sub
fldl
stos
cltd
call
push
mov
sti
or
add
das
mov
or
dec
xchg
sub
pop
leave
xchg
pop
mov
divb
xor
adc
nop
fcmovne
and
add
icebp
scas
nop
ss
mov
mov
es
psllw
mov
mov
or
inc
add
iret
sbb
sub
lds
aam
or
add
inc
add
cmpsl
fwait
jbe
dec
pop
sti
lahf
jp
jnp
push
scas
movsb
in
or
add
pop
push
jecxz
xor
add
stc
xchg
sbb
add
push
mov
addr16
call
pop
in
test
cmpsb
into
mov
mov
cmp
cmp
sbbl
ds
shlb
into
jl
push
mov
pop
pop
xor
dec
sub
dec
insb
fs
dec
leave
pop
mov
aaa
jle
add
addb
push
sbb
pop
test
mov
mov
mov
mov
xor
dec
jno
add
and
sbb
add
sub
mov
inc
add
push
mov
icebp
jb
add
sbb
or
push
movb
jo
jno
popa
push
mov
sbb
aas
ficomps
fmuls
imul
and
mov
fdivp
data16
push
add
test
mov
and
ss
jnp
aaa
jo
or
imul
mov
test
dec
jnp
sbb
int
test
or
leave
and
xor
mov
dec
xor
cmp
or
or
call
xchg
addb
pop
int
push
mov
or
cli
iret
movsb
xchg
mov
sbb
test
cmpsl
sub
add
clc
pop
sar
or
scas
rolb
pusha
add
movsl
dec
test
jge
or
or
outsb
dec
xchg
push
jne
add
gs
add
and
stc
sahf
push
pop
test
loope
xchg
add
loopne
addb
into
divb
imul
or
push
xchg
pop
jg
rolb
add
fildl
dec
fbld
sbb
lahf
cmp
pop
stos
pavgw
add
and
test
out
mov
arpl
repz
lods
push
sub
mov
add
push
mov
push
lea
inc
icebp
scas
lea
idiv
push
nop
xchg
lret
xchg
or
jno
arpl
add
mov
aaa
push
mov
sub
pop
ljmp
add
movsl
mov
add
mov
push
rclb
nop
inc
add
pop
lods
movsl
xchg
inc
pop
data16
pop
cld
loopne
subl
pop
and
push
aaa
adc
push
pusha
add
dec
jp
xchg
cmp
pusha
add
adc
inc
stc
xchg
push
cli
cmp
sub
add
jmp
dec
inc
add
inc
add
gs
movsb
repz
sub
out
jno
out
push
add
or
mov
xchg
add
daa
stos
mov
add
mov
or
stc
jmp
and
add
ljmp
dec
push
js
push
fsubp
dec
sbb
fdivs
cli
pop
decb
pop
mov
xor
add
cmp
jge
out
xor
es
or
rorl
mov
fldt
push
push
pop
mov
pop
rcr
addb
ror
inc
add
or
rcrl
ror
std
mov
sbb
popf
test
das
cmpsl
xchg
out
ret
add
cmp
dec
pushf
sub
movb
mov
rolb
xchg
push
aaa
int3
cmpsl
push
enter
stos
adc
std
adc
imul
jecxz
ja
incb
ja
jmp
jb
mov
add
cmp
add
es
test
test
adc
leave
jo
aam
push
das
out
iret
or
xchg
rorb
aaa
pop
lods
shrb
mov
mov
push
jns
rolb
mov
cmp
cs
inc
add
rcll
cmpsw
push
icebp
lcall
jp
or
sarl
test
adc
push
lods
imul
add
bnd
icebp
repnz
faddp
lods
jle
push
int
add
mov
sub
aam
pop
bound
mov
dec
ss
jne
lock
cmpsl
mov
add
test
leave
add
fisttpl
inc
lock
movb
testl
dec
test
inc
dec
ret
dec
add
jns
data16
add
pop
test
leave
stos
cmp
xor
lahf
mov
pop
push
add
fstl
lock
add
bound
rolb
inc
add
out
out
push
xchg
mov
ss
pop
lds
outsb
adc
mulb
xlat
xor
movb
sub
shl
aam
add
pop
and
rcrb
adc
pop
popa
aaa
add
loopne
clc
cltd
nop
push
addb
aam
ss
addb
adc
outsl
icebp
mov
cld
hlt
xor
js
mov
add
add
cwtl
mov
jmp
and
xchg
mov
xchg
pusha
add
adc
call
repz
and
cmc
out
inc
add
or
or
xor
bound
and
sub
jecxz
pop
out
fwait
addb
push
cmovae
sbb
inc
inc
add
mov
xchg
fimull
add
inc
inc
add
xlat
push
add
jbe
sub
or
lret
lret
movsb
sti
pop
jge
test
popf
mov
xor
stos
iret
push
sbb
insl
xchg
out
lret
lods
dec
hlt
arpl
cs
push
out
out
jo
mov
or
or
fwait
rolb
mov
popf
bndstx
lret
iret
add
mov
jecxz
dec
pop
out
pop
int3
aaa
jmp
lea
jo
nop
dec
movsl
inc
add
test
pushf
mov
dec
addb
roll
mov
lcall
scas
adc
add
push
xor
lea
in
clc
fs
stos
xchg
lods
xor
xchg
adc
sub
wrmsr
das
push
stos
nop
test
and
call
push
pop
insl
fnstsw
dec
mov
add
nop
xor
pushf
fstpt
add
ret
jge
mov
int3
and
inc
cmc
bound
bound
fldenv
add
lock
dec
xor
mov
mov
pop
mov
insb
push
repnz
jno
mov
xchg
dec
adc
nop
sbb
mov
fbld
addl
push
test
sub
jg
sbbl
out
xor
fsubl
shll
add
pop
jge
or
es
test
sti
push
aam
dec
in
jo
cmp
daa
cmpsb
xchg
push
jns
xchg
dec
jmp
pop
cmpsl
fdivs
xor
sti
jmp
or
rolb
fsts
pop
sbb
nop
daa
xchg
mov
mov
dec
sub
sbb
adc
xchg
push
push
fisubl
jg
insb
mov
cmp
je
sub
pop
mov
dec
cmp
aaa
sub
xchg
pop
sub
arpl
flds
sbb
test
jmp
addl
pop
xchg
push
ret
test
sarb
bound
scas
mov
popf
mov
add
push
lock
repnz
adc
pop
aam
insb
xor
mov
je
and
js
add
xchg
cmp
ret
push
inc
push
or
ret
add
sub
add
adc
mov
mov
xlat
sbb
jecxz
call
pop
or
mov
shll
adc
and
add
hlt
mov
or
and
sbb
outsb
into
es
shl
mov
xor
cmp
xor
jge
and
fsubp
aam
aas
lock
clc
mov
add
add
sbb
push
jmp
jns
call
mov
sbb
nop
lret
inc
xchg
mov
inc
add
inc
sub
ja
jle
clc
icebp
adc
dec
je
or
pop
sub
mov
jg
add
rcl
cmp
xor
jle
adc
push
pop
shl
outsl
inc
dec
in
jbe,pt
cli
jns
mov
lods
sbb
fisubrs
push
sub
pop
sub
hlt
lods
lcall
or
sub
cmpsb
ja
mov
inc
add
sub
call
mov
imul
cmp
jbe
and
pusha
add
fdivrl
add
scas
loop
mov
in
fcmovb
add
outsl
popl
stos
scas
pop
mov
mov
push
xor
dec
ja
push
loopne
ss
jbe
jne
mov
bound
fistl
data16
adc
jnp
pop
aam
pop
pop
inc
insl
ret
insb
jp
lret
xor
mov
in
add
popl
aaa
pop
cmp
jle
inc
test
dec
mov
mov
stos
cmpsb
cmp
inc
xorl
mov
xchg
dec
add
lods
mov
ss
jae
pop
sbb
push
stos
movb
dec
mov
cmp
sahf
and
add
add
add
dec
stos
icebp
ja
sbb
das
jmp
lcall
dec
stos
mov
cs
cmp
add
xchg
push
stos
stc
sbb
add
fcomps
repnz
pusha
add
xchg
or
call
push
and
add
xor
xor
data16
iret
adc
test
adc
scas
sub
ljmp
add
xor
fsubp
loopne
xchg
ret
mov
mov
pop
xchg
jmp
mov
lods
mov
bound
je
pop
std
test
xor
xchg
call
xchg
iret
sub
rolb
mov
enter
fmul
mov
xchg
lret
xchg
mov
add
jne
add
cltd
int
sub
scas
nop
push
sub
add
and
fucom
or
daa
jne
inc
add
push
in
outsl
out
or
mov
add
sbb
mov
stos
xchg
test
movsl
out
push
mov
into
cmpsb
push
push
and
xchg
push
jnp
add
push
scas
sbb
xor
imul
loope
clc
into
pop
mov
test
add
or
mov
loopne
push
aam
and
push
lds
mov
fdivrl
ds
daa
out
flds
sub
and
fwait
pop
add
lds
push
jl
inc
les
push
add
ja
mov
cmp
inc
add
dec
mov
push
or
mov
sbb
mov
push
addb
lcall
pop
jecxz
repz
jmp
lea
shrl
test
pop
xchg
imul
lock
add
jecxz
fnsave
shll
inc
add
aaa
mov
jbe
fsts
loope
int
dec
gs
inc
add
mov
push
imul
mov
neg
jle
bound
sub
adc
rol
lods
fmuls
dec
xor
rcl
dec
stos
inc
add
jl
xchg
xchg
jno
fcomi
fnstsw
jmp
call
push
push
jae
stc
mov
push
pop
test
jbe
scas
cmp
pop
fs
xor
xor
outsb
dec
hlt
sub
push
dec
loop
jo
add
dec
sub
lret
mov
ds
mov
notl
add
or
xchg
loopne
in
push
add
push
dec
mov
sbb
stos
xlat
int3
mov
push
jno
lret
adc
add
add
add
sub
pop
add
cmp
mov
mov
sbb
mov
xchg
jns
out
je
jnp
add
inc
add
loop
inc
js
inc
add
mov
enter
add
fistpll
mov
cli
les
jb
add
add
push
add
and
aaa
sub
adc
xchg
jecxz
add
fbstp
xchg
mov
cmp
push
pinsrw
fwait
cmp
adc
mov
sahf
outsb
mov
jne
xor
addb
push
dec
data16
push
mov
fnstsw
decb
cmc
xlat
movsl
and
or
xchg
mov
xchg
and
mov
adc
mov
in
sbb
add
mov
loop
cmpsl
pusha
add
push
sbb
mov
addb
nop
mov
xor
jae
jns
jo
out
in
in
dec
or
pop
inc
aam
test
and
sarl
pop
mov
dec
pop
and
int3
mov
ss
add
mov
aaa
xchg
ljmp
arpl
mov
and
xchg
int3
or
xchg
pushf
cmp
xchg
push
sbb
mov
mov
add
jns
sub
testl
imul
push
sbb
es
out
dec
enter
shl
sbb
xchg
fsubr
scas
fbld
sti
xor
popf
leave
inc
adc
nop
lret
inc
add
adc
scas
push
push
mov
repnz
add
cld
ret
stos
test
mov
adc
mov
pop
sbb
inc
xchg
sub
mov
jb
pop
pop
notb
jo
jmp
mov
push
inc
add
and
dec
xchg
dec
std
sbb
fiadds
cwtl
scas
mov
sub
inc
inc
add
rolb
push
inc
lock
add
adc
sbb
mov
and
push
pop
insb
push
add
add
sahf
or
push
sahf
push
add
loopne
dec
cmp
gs
add
aas
lret
sbb
cmp
mov
ljmp
add
sub
aad
xor
push
pop
pop
in
jne
jmp
add
xor
loopne
fbstp
repz
movb
mov
fdivr
xchg
sbbl
and
push
pushf
mov
addb
xlat
jge
pop
mov
and
les
xchg
jae
adc
cmp
mov
add
icebp
mov
bound
sbb
xor
movsl
int
loope
add
sub
lea
mov
push
stos
mov
cmpsl
stc
push
push
sub
test
push
xchg
pop
repz
insl
cmpsl
cwtl
das
rcll
in
push
push
mov
out
pusha
add
push
insb
xor
pop
movb
jmp
add
daa
outsl
mov
xor
jp
and
sub
dec
lock
pop
shll
aas
mov
add
jae
std
addb
jmp
rorl
add
pop
mov
daa
xchg
or
lcall
or
mov
cli
sub
into
cwtl
mov
aaa
ret
sub
xchg
int3
mov
pop
pop
ljmp
push
movb
and
sub
fsts
cmpsl
cpuid
jnp
inc
xchg
sub
jmp
std
insb
lcall
xor
sub
aas
sahf
decb
mov
cmp
add
jno
lret
daa
jmp
jne
adc
pop
mov
pushf
ljmp
das
scas
mov
cli
hlt
insl
adc
sbb
aas
mov
out
stos
jmp
dec
or
mov
xor
xor
popa
push
adc
sbb
in
push
ljmp
jns
add
daa
mov
xor
dec
jbe
cmp
pop
sti
test
xchg
xchg
lcall
aad
mov
out
inc
add
add
aam
les
add
add
sub
fsubr
fstl
testl
orl
lret
les
iret
sbb
jbe
add
add
cwtl
inc
outsb
sbb
fsubs
add
mov
mov
ret
js
xchg
lds
pop
jno
lret
pop
test
into
add
or
push
push
das
xchg
ja
icebp
jl
jle
and
push
add
sbb
xchg
jbe
add
jb
icebp
clc
sub
test
add
outsl
or
add
push
test
push
xchg
inc
lahf
xchg
negl
dec
enter
or
sti
jle
clc
fbld
add
clc
jmp
sahf
and
mov
add
mov
cmp
inc
xor
sbb
cmp
inc
mov
push
push
inc
cwtl
cmc
mov
xor
stos
sub
cmpsl
jp
jp
fisubl
mov
xchg
lcall
push
ljmp
into
sub
xchg
dec
insl
addb
adc
outsl
mov
or
shll
loopne
inc
pop
call
mov
or
loope
fcmovnbe
add
sbb
nop
es
mov
ret
aaa
xchg
rcrb
sahf
dec
sti
sbb
add
mov
ds
stos
hlt
mov
and
lsl
in
pop
dec
pop
ds
shlb
cmp
frstor
stos
aam
test
shll
inc
add
xchg
or
stos
addb
inc
dec
dec
jne
loope
sti
fstpl
pop
js
push
dec
cmp
add
inc
push
xlat
ljmp
mov
out
push
add
stos
daa
sbb
sahf
mov
mov
inc
add
mov
subl
push
jecxz
add
xchg
xchg
icebp
leave
adc
fldcw
lcall
pop
jbe
or
xchg
push
inc
add
mov
push
or
mov
mov
outsb
shll
cmpsl
mov
addb
notb
add
add
mov
addl
pop
shrl
add
add
shlb
mov
jecxz
cmp
mov
push
or
arpl
pop
add
insl
mov
outsb
pop
pop
insb
mov
int
xor
daa
push
lea
add
scas
imul
push
add
push
and
add
loopne
stos
cmc
xchg
adc
push
pop
in
jae
sub
jnp
dec
pop
dec
popa
fs
sbb
mov
clc
xlat
xor
add
negl
add
shll
loope
dec
mov
ret
inc
add
inc
add
imul
hlt
mov
ficoms
mov
cmpsb
dec
mov
addr16
ficompl
or
add
test
nop
lahf
insb
ja,pt
jecxz
add
fdivs
jle
in
pop
dec
stos
xchg
inc
scas
pop
adc
test
arpl
pop
mov
fs
xor
fimull
addr16
jns
push
addb
xlat
std
or
lfs
loop
add
push
test
cmpsb
push
inc
pusha
add
and
out
pop
dec
pop
inc
add
cli
shrl
inc
add
xchg
jns
int
ret
mov
ljmp
in
out
pop
dec
lahf
add
jl
in
add
pop
lds
pop
mov
int3
cmp
out
sar
xchg
enter
insl
mov
fdivl
add
add
in
outsb
or
add
push
mov
add
shlb
mov
incb
fidivrl
cmpsb
mov
in
add
das
cmp
movsl
pop
jo
ljmp
fs
jo
add
add
lds
pop
test
test
jo
clc
mov
mov
insl
loope
add
push
add
sub
inc
add
cli
lcall
out
mov
push
repnz
push
adc
into
push
dec
popf
fsubrl
inc
loope
add
mov
add
mov
pop
mov
xor
inc
fwait
lds
mov
lods
pushf
sbb
loop
sbb
mov
call
add
fists
lea
xchg
adc
jns
jno
cli
mov
xchg
sub
jecxz
adc
lret
cmp
fisubrs
icebp
adc
mov
jp
out
push
mov
pushf
mov
add
je
mov
out
jb
ret
sub
loope
cmc
fisttps
sbb
add
ror
add
imul
add
js
mov
addb
mov
movsl
in
push
xchg
lods
aad
es
and
mov
test
or
sahf
xor
add
pop
pushf
std
fwait
data16
minps
test
push
cmp
jmp
sbb
push
jg
sub
xor
push
fnclex
repz
xlat
jmp
imul
or
add
mov
add
add
mov
imul
push
lock
idivl
sub
add
out
retw
sub
insb
test
outsb
aas
out
dec
ds
sbb
and
gs
loope
add
add
mov
ret
add
fcomps
xor
test
test
sbb
aas
xor
fistpl
add
sbb
mov
dec
popfw
push
loop
add
bound
add
ficomps
xchg
adc
jne
movl
gs
std
jge
or
xchg
mov
pop
hlt
fcoms
mov
mov
xchg
int3
pop
aas
jmp
add
push
add
ss
aad
sbb
sahf
sub
les
jge
add
push
or
testb
ja
cmc
jge
or
add
mov
sub
fmuls
mov
bound
sub
push
xchg
pop
xchg
rep
jg
jge
shrl
mov
xchg
movb
add
test
fldl
jnp
pop
and
push
mov
add
jno
movsb
outsl
xchg
jno
imul
out
cmp
or
enter
outsb
aaa
add
pusha
add
add
mov
pushl
mov
into
popa
ret
out
insl
loop
mov
add
aas
mov
add
bnd
mov
dec
js
fisubs
add
inc
hlt
test
lock
add
fld1
ss
and
push
add
fwait
dec
pusha
add
fwait
fwait
das
inc
add
pop
std
in
and
cld
pop
movsb
je
addb
lret
jns
push
and
popf
stc
shr
scas
cli
loope
or
fstpt
sub
movb
test
lods
or
in
mov
rolb
inc
ret
in
lods
xchg
sarl
test
imul
fisubs
out
xor
cmc
jecxz
adc
and
push
rolb
lea
test
cmp
sub
pop
mov
ret
add
sub
xchg
and
ret
call
loopne
dec
fbld
loop
sbb
sbb
cmc
rcrl
outsb
add
jp
sub
decl
sbb
cmpsb
xchg
sbb
sahf
repz
push
add
inc
add
add
dec
pop
dec
mov
jp
push
lret
enter
add
fimuls
fdivrs
pop
xchg
and
test
add
add
add
enter
push
xor
mov
dec
jne
test
push
inc
add
ja
jnp
sbb
mov
push
xchg
stos
or
cltd
addb
add
cmp
mov
xchg
filds
jp
inc
adc
cmp
ret
sub
rolb
jae
cmp
sub
stos
cltd
jecxz
or
lds
insl
cmpsl
popf
js
add
out
clc
or
cmc
pop
sti
lcall
ret
mov
ss
adc
lcall
pop
je
inc
lods
popa
cmpsb
push
arpl
cmp
add
push
sbb
xor
push
add
add
add
addb
mov
scas
movsb
insb
pop
jno
adc
pop
or
jae
sub
dec
cld
lret
imul
push
cmc
cmp
jbe
gs
push
add
fldl
les
inc
add
jl
inc
add
int
mov
aas
loopne
or
lcall
add
jbe
push
pop
cmp
xlat
addb
into
or
cmp
jmp
test
push
ret
leave
repz
xchg
jmp
sub
push
dec
xor
inc
scas
and
sbb
sub
outsl
sbb
mov
sahf
mov
push
inc
add
jge
add
push
fwait
push
xor
xchg
push
push
xchg
mov
fmulp
fisttps
lds
xchg
xor
dec
out
ficomps
ja
dec
divl
pop
out
insl
scas
xchg
cmp
mov
cwtl
xchg
movb
inc
das
or
shr
dec
lock
aaa
loope
bound
mov
mov
std
sbb
push
dec
rorb
ss
push
xor
sarl
or
addb
arpl
scas
xchg
pusha
add
sbb
fcom
add
sbb
mov
mov
push
mov
pop
jns
push
push
mov
insl
cmp
push
jae
ss
int3
out
or
fwait
xchg
inc
add
add
sub
xchg
adc
jne
add
jge
data16
mov
sub
push
cmpsb
mov
sbb
mov
gs
and
aaa
fmul
mov
pop
int
add
dec
pop
mov
mov
out
stos
out
lods
cltd
add
inc
in
test
gs
ret
movb
pop
loope
aad
outsb
gs
pusha
add
xchg
sub
rcrb
stos
pop
xor
push
js
mov
cs
cmc
or
mov
add
inc
mov
cld
mulb
icebp
xchg
xor
adc
add
mov
daa
mov
cmp
test
addb
scas
dec
fiadds
add
lods
adc
dec
fdivrl
mov
inc
sub
fimull
lea
xchg
push
xchg
jbe
mov
jne
add
inc
add
mov
fmull
cmp
mov
negb
lods
fs
cmp
aas
mov
mov
in
cli
mov
aaa
clc
xchg
pop
popa
mul
arpl
mov
aam
mov
lods
enter
imul
scas
jge
out
aad
leave
cmc
repz
add
cmc
clc
add
ret
xchg
repz
or
aam
dec
int
mov
js
in
loope
xchg
push
stos
push
xor
pop
push
xchg
lds
mov
add
aas
btc
imul
push
mov
mov
cmpsb
xor
jp
add
xchg
dec
and
inc
add
mov
das
sub
outsb
icebp
inc
push
sarb
fbstp
mov
lea
jnp
sbb
xchg
pusha
add
fldenv
add
add
les
je
xchg
iret
outsb
shrb
pop
mov
js
add
rolb
add
es
cmp
xor
push
loope
pusha
add
add
add
jg
sbb
outsb
clc
daa
shll
fdivl
mov
inc
fisubrs
inc
xor
push
mov
orl
xlat
sub
repnz
mov
into
cmp
push
hlt
pop
iret
xor
push
inc
cmp
mov
imul
jb
in
pushf
movsl
inc
add
in
lahf
cmpsl
lds
xlat
add
sbb
mov
adc
leave
sbb
cld
lock
test
jg
repz
mov
jb
add
lea
stc
addb
stos
push
shrb
imul
adc
std
and
movb
xor
fsqrt
fistpll
movsl
sub
dec
sub
negl
mov
xchg
shrl
scas
into
popf
inc
mov
pop
add
jge
nop
xchg
mov
lock
imul
add
or
add
fistpll
jnp
nop
mov
cmp
sbb
or
jo
and
mov
sbb
sub
aam
push
movl
xlat
push
pop
ret
clc
jnp
lcall
lahf
jbe
ficoml
and
xchg
fisubrs
cmpsb
push
or
and
notl
cli
cmp
push
xor
mov
add
xchg
nop
pop
lahf
jnp
movsl
in
movsl
lret
inc
add
stos
mov
je
cmp
cmc
sbb
sbb
stos
xorl
sub
je
add
int3
pop
aam
dec
out
stos
inc
add
jmp
sbb
pop
hlt
into
sub
imul
addr16
jne
jnp
cmp
dec
add
pop
cmc
sub
pop
sbb
jno
mov
adc
jnp
add
aad
xchg
movb
add
nop
cs
std
dec
and
inc
add
shl
imul
popl
add
adc
and
adc
xchg
inc
or
fsubp
inc
lahf
and
lods
mov
in
inc
add
sub
mov
cltd
in
push
aam
jo
gs
sub
jno
jg
enter
lcall
mov
outsl
cli
sahf
insl
ss
movb
dec
pop
pop
clc
mov
xor
movsl
imul
dec
lock
pop
out
inc
mov
sahf
push
nop
dec
movsl
xchg
or
cmp
push
add
into
out
add
addb
testl
aam
iret
cld
popf
xchg
sub
std
push
pop
jmp
inc
lret
mov
cmpsl
popf
add
mov
inc
dec
iret
cli
sbb
jmp
enter
mov
xchg
mov
adc
jo
into
add
adc
rcrl
ret
out
insb
lods
mov
addb
ret
pop
mov
or
mov
add
test
xor
ret
jg
int
pop
scas
dec
ss
bound
adc
ret
or
push
lea
add
xchg
xor
notb
mov
xlat
xchg
repnz
or
mov
lret
int3
out
add
add
cmpsl
jle
dec
sub
insl
dec
inc
lods
and
fwait
dec
mov
jmp
leave
lea
mov
ja
xor
std
test
cwtl
pop
xchg
jns
es
cmpsb
or
filds
xor
inc
add
imul
in
imull
jmp
dec
or
int
pop
pop
sbb
dec
shrl
xchg
add
pop
lods
mov
int3
cwtl
leave
inc
add
or
insb
out
add
dec
cwtl
out
push
hlt
cmc
dec
movsl
ret
lahf
jnp
repnz
dec
iret
xchg
push
lahf
bnd
xchg
flds
je
fldenv
add
xchg
jnp
and
sub
jae
mov
mov
mov
cmp
cwtl
or
cmp
pop
sub
mov
add
stos
lahf
sub
jno
xchg
in
xor
jne
add
adc
pop
loop
add
ljmp
mov
test
jg
pop
mov
enter
sbb
leave
inc
add
popf
dec
in
sbb
dec
rcrl
rolb
test
aas
and
add
loope
rolb
jnp
addr16
add
roll
bound
mov
cmp
mov
lods
lea
iret
xchg
pop
cltd
pop
or
add
add
xor
clc
inc
sub
lds
or
lea
jno
mov
in
push
push
sbb
mov
ret
mov
in
add
push
lcall
test
addr16
lret
arpl
dec
cli
in
add
pop
bound
and
mov
cltd
jne
xchg
idiv
push
xchg
pop
push
in
pushf
cmpsl
pop
mov
testb
test
inc
add
adc
repnz
sub
jmp
xor
imul
inc
lods
xchg
decb
sti
jnp
gs
add
je
lret
dec
fstpt
inc
addb
mov
aaa
es
inc
add
jns
or
sbb
lret
cmp
xchg
jl
adc
pop
jne
mov
scas
or
mov
jl
dec
hlt
pop
sbb
add
push
xchg
mov
aas
fisubrl
mov
cmp
insl
push
push
add
cld
jae
rolb
xor
sbb
dec
sbb
test
push
push
int3
cmpsl
dec
sub
pop
inc
add
push
mov
add
mov
add
cmp
repz
mov
or
pop
pushf
pop
or
leave
mov
jae
addb
arpl
add
mov
jae
gs
push
in
movsb
fildll
mov
in
mov
add
mov
test
adc
jbe
pop
outsl
test
push
addb
add
push
xchg
xor
pop
cmp
push
add
out
pushf
out
push
shrb
out
aaa
adc
push
aad
sbb
add
lods
fidivrl
cmp
ret
mov
add
and
dec
bound
jb
mov
and
fdivr
daa
and
and
fisubl
mov
jns
and
dec
push
and
insl
fists
adc
lret
mov
sub
insl
jns
mov
test
daa
mov
ljmp
add
shll
xlat
and
ljmp
mov
lock
outsb
ds
xlat
dec
pop
adc
inc
mov
add
je
das
inc
add
mov
sub
mov
sub
dec
inc
add
gs
dec
sub
cmp
push
or
xor
add
mov
jmp
xchg
sub
jmp
inc
adc
sbb
mov
cmpsb
mov
xlat
sti
pop
int3
inc
add
addb
push
movsb
test
mov
xor
shl
xor
ret
add
aas
bound
cli
xchg
cmpsl
movb
sub
int3
pop
std
sbb
cmp
adc
add
xor
mov
add
or
repz
inc
add
push
mov
addb
pminub
insb
cld
xchg
repnz
in
dec
jmp
scas
scas
cmp
jp
aaa
xchg
pop
pop
addb
pop
mov
lcall
mov
xchg
pop
insl
inc
pop
fstpl
gs
and
mov
pop
push
add
mov
lods
add
lods
add
filds
mov
or
test
push
and
int3
mov
mov
js
jbe
sub
rorl
into
in
insb
add
lret
rolb
std
inc
les
mov
es
xor
fcomps
loope
xor
movb
and
push
mov
dec
jecxz
mov
dec
outsl
push
cs
negl
wrmsr
lret
lret
cmp
repz
outsl
adc
sbb
je
lahf
xchg
and
loopne
insl
xlat
cmp
push
aad
add
dec
ss
jecxz
lcall
xchg
jnp
add
lods
ror
fadd
add
and
daa
insb
sar
adc
dec
pop
inc
jp
cmpsb
mov
or
daa
jl
pop
rolb
mov
mov
mov
sbb
dec
or
aas
xchg
lds
mov
lods
lock
add
lret
dec
inc
data16
shl
jmp
add
jmp
add
call
cmpsl
add
loope
les
rolb
nop
lds
mov
fisubl
add
sub
mov
add
jne
aaa
mov
sti
adc
xchg
pop
and
fst
sbb
inc
add
sti
outsl
cmp
mov
out
add
mov
adc
sbbl
jle
cmp
push
test
cmp
loope
dec
pop
add
pop
int
dec
push
out
stc
mov
add
in
loope
mov
insl
enter
scas
lea
std
jmp
nop
mov
add
add
xchg
dec
fstps
mov
jne
add
popl
jge
jge
adc
sbb
gs
icebp
xorl
jno
insl
mov
mov
cmc
xor
add
shlb
fsubrl
jae
add
pop
popa
inc
cld
mov
lods
push
add
sbb
fldz
shlb
sub
hlt
sbb
test
add
ret
mov
ja
cmp
mov
add
jmp
ret
cmp
mull
push
add
push
jae
pop
iret
in
jge
xchg
test
scas
test
add
xchg
dec
imul
inc
call
push
jb
fidivrs
add
add
ret
xlat
pop
popf
movsl
leave
stc
mov
test
add
notb
push
mov
sahf
iret
pushf
pop
jl
aas
or
icebp
pcmpeqw
gs
mov
add
aam
sbb
leave
movsb
xor
dec
pop
xchg
mov
mov
xor
std
cmp
add
popa
setnp
push
dec
aas
push
xor
repz
mov
sbb
mov
fiadds
add
xchg
adc
push
mov
xor
add
mov
push
xor
dec
sub
hlt
mov
and
aam
add
insb
adc
xchg
fdivrs
dec
scas
mov
dec
xchg
in
mov
inc
add
std
or
aad
arpl
stos
js
push
push
sbb
inc
add
xchg
jae
mov
jecxz
mov
xchg
addb
mov
mov
cld
sub
push
dec
jmp
movl
add
filds
push
ds
std
adc
pushf
xchg
dec
sub
cld
xchg
out
inc
pop
mov
xor
xchg
pop
cmp
outsb
test
js
add
jl
sbb
mov
lret
sbb
adc
rolb
std
aas
int
xchg
daa
jg
mov
sti
jl
cmp
aaa
iret
mov
add
ss
push
test
ss
cli
cli
xor
cmp
in
bound
dec
jno
pop
add
imul
shl
call
inc
shrl
fildll
stos
movsl
pop
add
pop
inc
add
xchg
mov
lds
lcall
cmc
pop
or
repz
addr16
add
out
mov
fs
or
ror
pop
fcomp
aam
leave
fdivl
loopne
aaa
jb
test
mov
movsb
cmpsl
popf
xlat
add
shrb
fidivl
mov
add
loopne
movsl
movsl
imul
aad
mov
add
add
nop
popa
add
xchg
mov
loopne
addb
cmovno
and
mov
push
aas
hlt
jb
xlat
je
out
fsubp
inc
sub
push
popa
adc
fists
imull
add
stos
or
outsl
sbb
push
inc
xchg
mov
test
push
push
lea
pop
cwtl
les
xor
add
adc
lret
stc
and
enter
inc
popf
imul
rol
add
hlt
push
leave
xor
jb
aaa
jne
rolb
inc
add
dec
mov
and
xor
fistpll
dec
pop
and
sti
pop
dec
cmc
or
or
pop
jne
cltd
mov
lcall
jmp
sub
dec
mov
out
call
or
or
sub
cld
xchg
lds
pop
xor
insl
inc
add
add
rclb
xchg
and
add
mov
or
sarb
out
inc
sbb
pop
pop
sbb
dec
test
jmp
repz
push
push
pop
nop
addl
sbb
je
sub
daa
aaa
mov
mov
add
push
mov
add
std
xchg
movsl
inc
add
jnp
jg
hlt
out
popf
out
xor
std
mov
mov
dec
jp
pop
mov
rolb
mov
add
lret
lock
arpl
add
imul
idivl
enter
mov
cmpsl
adcl
in
aam
dec
mov
jns
addb
inc
mov
push
jecxz
inc
add
jg
sub
push
mov
add
repnz
lret
add
cmp
roll
mov
dec
movb
xchg
pop
ret
mov
out
aas
add
aas
mov
mov
jle
lods
jle
sbb
ret
mov
adc
jecxz
sub
daa
push
out
cli
mov
fdivrl
xchg
push
push
mulb
sbbl
iret
clc
mov
dec
xor
sub
jns
jnp
add
imul
sbb
jl
cmpsl
enter
or
jnp
aas
mov
gs
int3
push
add
and
out
lret
insl
or
mov
add
cmpsb
mov
mov
aam
aas
jae
sub
ret
cmp
and
push
cs
adc
stc
stos
fs
and
add
roll
mov
add
mov
sbb
sub
add
rolb
mov
repz
and
xor
xchg
mov
inc
add
clc
inc
in
sub
aaa
sub
push
sbb
adc
out
xchg
lret
test
push
out
cmp
mov
out
push
inc
add
push
inc
fucomip
mov
hlt
std
cwtl
gs
cmp
pop
addr16
mov
call
sub
pusha
add
add
aad
add
jbe
mov
sub
pop
lret
dec
pusha
add
add
rolb
sub
add
mov
test
push
and
and
fdivrs
mov
push
add
add
fdivrl
inc
inc
add
push
pop
mov
jl
addb
dec
push
ljmp
mov
jb
lods
sbb
imul
mov
xor
mov
fists
test
cwtl
lea
mov
or
mov
cmp
pop
push
jae
jge
push
cmp
fidivrs
sar
xlat
repnz
jno
and
ss
mov
test
push
int
xchg
dec
data16
icebp
fimuls
xor
int
jge
cmp
lds
bound
rolb
cltd
aam
xchg
cmc
into
nop
aad
push
pop
push
and
and
mov
int3
lahf
imul
xorl
loopne
in
inc
add
leave
jnp
adc
rolb
test
sbbl
add
fucomi
push
bound
add
push
adc
jl
xor
lods
std
gs
clc
mov
lea
mov
and
sbb
test
and
push
out
fdivrp
or
cmpsl
adc
mov
sub
les
mov
sbb
add
jbe
es
push
jecxz
pop
push
cmp
jle
mov
add
jmp
and
sub
mov
mov
mov
adc
incb
daa
push
jecxz
out
insb
flds
add
pop
mov
xor
add
jne
push
xchg
cmpsb
mov
and
lahf
sahf
cmp
cmp
daa
xchg
cmp
aam
or
fcmovnb
in
mulb
frstor
pop
scas
arpl
dec
les
xchg
or
add
sahf
leave
movsl
mov
lods
int3
pop
clc
dec
pushf
out
pop
lods
test
dec
mov
jb
pop
repz
jl
add
arpl
adc
cmpsb
js
icebp
mov
in
mov
and
push
push
std
sub
mov
iret
push
cmp
jns
or
jmp
loope
cmp
push
xlat
push
cmp
xor
sti
cltd
xor
mov
jb
add
xor
sub
add
stc
movsb
testb
scas
repnz
das
dec
les
fidivs
out
push
mov
out
add
scas
pop
sub
adc
mov
xchg
scas
or
push
clc
mov
mul
xor
repnz
push
arpl
xor
inc
add
pushf
push
test
jbe
vmovaps
jb
shrl
fldt
mov
call
scas
inc
adc
movsb
aaa
cmc
repz
jae
cmp
inc
add
movsb
rolb
out
aaa
push
lods
or
sbb
push
std
push
hlt
adc
dec
jo
sub
ret
add
add
add
add
scas
jne
xlat
dec
lret
add
rcrb
dec
push
sbbl
add
push
in
imull
push
fidivs
jno
add
mov
movsl
jbe
sub
xor
mov
inc
cltd
inc
stos
out
mov
add
aas
xchg
fs
aam
add
rolb
add
ja
scas
test
mov
dec
sahf
das
jb
mov
push
jle
daa
hlt
push
cmp
dec
data16
das
push
cmpsb
int
jno
inc
rolb
add
mov
loopne
lcall
jmp
jne
je
xchg
adc
fdivs
int3
adc
cwtl
add
lret
xor
enter
icebp
adc
adc
inc
add
sti
mov
jle
clc
cmp
inc
add
or
clc
lea
into
dec
inc
add
pop
xchg
std
ss
ret
add
xchg
pop
pop
repnz
cmc
inc
add
push
call
dec
dec
jle
cmp
add
pushf
cmp
push
gs
fdiv
or
push
in
xor
jnp
punpckhbw
clc
dec
pop
add
add
add
arpl
fwait
mov
add
mov
ret
icebp
cmp
pushl
and
add
mov
movb
pop
es
xchg
push
sub
fnstsw
fdivl
out
lds
mov
mov
hlt
sbb
pop
fcomps
add
adc
sar
dec
inc
xor
lods
outsl
cmp
push
cmp
mov
ret
xor
or
sbb
ja
ret
xor
pusha
add
lods
pop
pusha
add
lds
imull
loope
add
lea
mov
andl
jg
in
out
push
daa
pop
incb
inc
add
add
sbb
push
sarl
jae
ds
add
mov
ja
xchg
popf
xchg
int
mov
add
mov
aas
xor
ljmp
mov
loope
jl
cmp
inc
inc
add
iret
sarb
adc
sbb
add
cmp
ds
rcrl
outsb
popa
or
lret
les
subl
mov
lods
bound
insb
pop
push
stos
add
movsl
std
jnp
scas
add
add
adc
push
cld
jb
fidivl
fiadds
sub
mull
pop
push
fnop
push
jno
add
addb
fcmovu
dec
test
dec
add
sarl
add
lods
flds
pop
jae
mov
imul
mov
add
rolb
ret
cmp
ss
add
add
sbb
add
ficomps
pop
iret
imul
mov
add
push
and
dec
add
push
movb
stc
in
dec
cli
test
push
orl
push
and
xchg
lea
add
aam
dec
push
rclb
adc
sub
mov
push
pop
scas
sub
xchg
adc
inc
xor
repz
mov
cs
add
add
xchg
jnp
add
add
out
and
cltd
add
jg,pn
add
fsubl
fisubl
pop
adc
pop
jmp
sub
sti
arpl
push
mov
sahf
mov
pop
sbb
les
jnp
jbe
lcall
scas
sub
std
pop
pop
test
inc
add
hlt
mov
adc
push
add
cmp
add
enter
fstps
and
rol
or
mov
addb
test
inc
add
test
inc
pusha
add
inc
mov
out
addb
repz
mov
popf
sti
stos
mov
jle
sbb
inc
add
call
scas
lods
jnp
xchg
cli
cmpl
movsb
xor
loopne
dec
loope
and
lret
mov
aaa
test
push
fndisi(8087
outsl
add
fadds
jb
lret
scas
daa
or
push
sbb
outsb
sarl
jle
adc
push
xor
hlt
inc
lods
pop
addb
mov
test
js
inc
mov
daa
fiaddl
ret
popa
xor
and
rcll
ret
lcall
xchg
sbb
cmp
mov
test
das
imul
mov
push
outsb
enter
fcoml
mov
pop
js
mov
rol
xchg
cmpsb
cmp
push
daa
ljmp
pop
shl
lret
push
add
and
in
pop
rorl
adc
add
cltd
push
push
outsl
and
and
sub
mov
xchg
test
push
stc
jae
push
test
mov
add
add
cmp
and
xchg
xor
mov
mov
bound
pop
in
das
jg
jae
xchg
cwtl
ss
int3
mov
sbb
xor
lock
ret
xchg
out
iret
gs
sahf
pop
invd
adc
add
aad
stos
or
sahf
mov
cmpsb
test
mov
add
leave
xchg
sahf
jne
jo
sbb
imul
aas
dec
mov
add
jno
shrb
jno
pop
aaa
int3
xchg
dec
or
sbb
mov
add
sbb
cmp
or
xchg
clc
cmp
in
aad
jmp
xchg
mov
cltd
push
out
cld
xor
sub
add
add
push
lahf
out
mov
dec
roll
loopne
ds
bound
in
or
push
jecxz
addb
stos
xor
test
mov
pop
jg
mov
add
push
fsubs
mov
add
imull
addb
cmp
mov
sub
arpl
cmpsl
push
aas
inc
add
sbb
xor
test
ficomps
xchg
movb
test
bnd
mov
cmp
bound
fcmovnbe
cmc
aaa
xlat
mov
push
jecxz
movsb
jo
fwait
int
arpl
hlt
jae
shll
ret
xor
dec
push
pop
repnz
ljmp
inc
add
or
mov
sbbl
xor
dec
inc
push
dec
mov
adc
add
scas
cmp
mov
fiaddl
add
iret
stos
popa
adc
ret
sti
mov
inc
mov
jmp
and
xor
fnstenv
outsl
pop
in
ficoms
outsl
cmp
imul
or
das
gs
movb
test
das
int
mov
cs
or
bound
sti
jne
xchg
mov
lock
fcmove
sbb
addl
add
pop
xchg
sti
sub
xorl
lods
mov
scas
sbb
xor
mov
mov
add
and
sbb
inc
inc
stos
mov
mov
xchg
mov
es
cs
sbb
movsl
xchg
out
cltd
js
pop
xchg
sbb
int
xor
out
jge
push
dec
push
inc
add
add
dec
popa
mov
sarb
jle
popa
push
sarl
lret
push
add
jne
jne
sub
cld
mov
stos
xor
jbe
add
xchg
mov
xlat
insl
inc
add
addb
jmp
add
cli
lret
stos
sub
bound
pushf
dec
das
les
push
cltd
bnd
xor
mov
push
inc
add
int
add
push
push
sahf
aad
xchg
div
adc
jnp
push
outsb
imul
out
sub
loopne
rolb
or
pop
push
ljmp
push
cld
pushf
fs
dec
mov
test
sub
or
inc
add
jo
add
mov
push
insb
pop
stos
add
or
lret
cli
outsl
and
and
ret
fnsave
clc
insb
push
jg
movb
xor
test
ljmp
xor
lahf
dec
add
sbb
loope
push
push
mov
pusha
add
sub
push
mov
ds
mov
mov
push
js
jg
hlt
repz
cmp
mov
jno
inc
add
add
loopne
inc
add
insl
je
adc
aad
jo
jp
add
pop
call
call
cmp
jno
cmp
and
fnstsw
xchg
or
sub
add
inc
scas
inc
add
addb
dec
mov
das
sbb
jge
mov
ljmp
les
cltd
aam
jb
push
ja
insb
mov
add
out
xor
lods
ljmp
sub
sub
fcoms
or
scas
and
pop
jo
adc
pusha
add
push
mov
lcall
test
scas
int3
daa
scas
or
mov
hlt
xor
mov
rcrl
in
push
jmp
outsb
jp
cmp
and
shll
cmp
std
outsl
mov
mov
sbb
push
xchg
cmpsb
pop
push
adc
mov
mov
jbe
add
adc
pop
dec
jl
and
lock
addr16
pop
mov
cltd
into
dec
and
movsl
xchg
addl
pop
outsb
loop
and
fincstp
dec
rolb
std
fldl
add
or
int3
sub
xor
fildll
xchg
inc
add
mov
fs
insl
int
adc
in
inc
add
xchg
sar
lcall
cmp
or
jp
add
mov
pop
icebp
fmull
inc
je
int3
movsl
xchg
pop
call
in
and
add
jg
fbstp
push
jecxz
jmp
add
outsl
push
cmpsl
and
inc
imul
stc
push
enter
sahf
inc
add
xor
and
mov
push
pop
fwait
and
mov
icebp
leave
sbb
outsl
mov
sbb
cmpsb
inc
sub
cmp
rcrb
addb
rolb
repz
sub
pop
xchg
mov
push
add
or
jbe
inc
add
jb
scas
sbbl
mov
add
les
scas
dec
shll
add
repnz
aam
fcmovbe
arpl
sub
les
in
test
es
push
clc
or
out
ds
add
inc
add
cs
sub
addl
pop
cmp
arpl
add
in
xchg
leave
nop
insl
sub
add
xchg
mov
jo
decb
and
daa
das
inc
add
adcl
xlat
sub
inc
into
dec
pop
push
lods
js
les
inc
xchg
push
orl
ljmp
ret
sub
stos
add
xchg
xchg
data16
int
add
hlt
addr16
push
jg
push
roll
or
repnz
test
mov
or
js
daa
imul
pop
fisubs
test
jg
insb
dec
addr16
push
hlt
imul
clc
lds
mov
pop
scas
stc
jb
dec
mov
jbe
add
lods
mov
int
mov
loop
add
or
mov
add
xor
pop
mov
cli
mov
jno
sub
cld
fiaddl
or
fstpl
bound
sub
inc
fisubs
les
imul
jnp
mov
cmpsb
out
ds
add
xchg
mov
cld
fstl
push
fisttps
sti
scas
movsl
int3
sub
add
adc
mov
mov
xchg
std
mov
data16
and
ja
add
test
aam
sbb
sbb
add
lods
cmp
push
add
push
rolb
xor
dec
xor
fldl
imul
sbb
sub
pop
cld
sub
mov
nop
sbb
add
mov
lock
mov
rolb
jae
add
test
mov
jmp
stc
mov
add
xchg
ficoms
xchg
mov
mov
insb
in
mov
xor
decb
in
jo
test
xor
bound
push
add
jl
add
lock
mov
gs
add
mov
repz
fimull
cwtl
pop
scas
or
jge
movb
add
mov
add
xchg
mov
test
inc
mov
cmp
cwtl
lock
stos
adc
or
das
adc
add
cmpsl
ja
ja
in
stos
testb
sahf
mov
subl
adc
iret
jg
inc
add
add
sub
push
push
cmp
cmpsl
jge
aad
aas
andl
sbbl
xor
pop
stc
mov
mov
ret
add
add
push
push
out
out
repnz
nop
add
xor
mov
bound
mov
dec
lock
or
cld
imul
and
xor
es
call
outsb
mov
pop
inc
add
repnz
ds
mov
out
pop
jnp
adc
stos
loope
mov
mov
add
repnz
mov
clc
out
pop
pop
loopne
push
cmp
popf
lock
ja
fists
lea
push
or
test
inc
add
mov
mov
movb
shlb
loope
ds
xchg
xor
cs
push
jne
stos
dec
push
sub
add
testl
pop
stc
pop
iret
cmp
bound
cmp
mov
fs
mov
cmp
pop
sti
jge
add
or
movsb
cwtl
dec
jmp
aas
xor
xor
add
dec
mov
ret
sti
jmp
add
ds
addb
jle
into
mov
xor
add
dec
xor
dec
sbb
cmp
lret
nop
push
adc
cwtl
add
ljmp
add
push
test
imul
imul
cmp
fimull
cli
lahf
inc
pop
add
add
xchg
inc
add
push
cli
mov
xchg
sbb
add
mov
js
lcall
enter
add
push
or
add
mov
leave
cwtl
gs
adc
inc
insb
popa
xor
sbb
push
xchg
shrl
add
sub
popf
mov
sbb
push
xor
js
fmull
pop
sub
cs
outsb
pop
fwait
data16
mov
jnp
adc
je
mov
mov
dec
popf
mov
dec
loope
jmp
jbe
arpl
sbb
cmc
add
mov
test
decl
xor
jo
adc
cltd
ret
pop
adc
iret
mov
xor
sub
push
dec
lcall
repz
or
adc
loop
sub
add
outsb
add
pop
pop
lret
dec
fs
sub
push
inc
add
push
xchg
mov
mov
aam
adc
xchg
inc
add
add
add
aaa
push
cs
dec
lcall
cmp
sub
add
jno
pop
test
loop
mov
sub
lcall
jo
lcall
sub
sahf
shl
and
xchg
sbb
adc
nop
gs
out
pop
mull
or
add
pop
mov
cmp
ljmp
jno
push
adc
repz
sbb
push
adc
add
fldt
stos
jge
fimuls
mov
inc
add
push
xor
je
rcrl
mov
lcall
mov
mov
mov
add
ret
jno
and
rcr
lahf
addr16
gs
add
cli
jmp
xchg
pop
arpl
adc
data16
popf
mov
mov
in
js
mov
daa
pop
in
cli
push
test
cmp
and
lret
gs
xchg
jnp
add
add
pop
push
or
jecxz
mov
add
mov
add
inc
addb
or
push
add
mov
or
and
mov
add
fistpll
data16
ss
jne
lock
mov
jg
sarb
cld
xchg
addl
or
in
push
or
mov
mov
jge
aad
dec
daa
pop
dec
cltd
std
and
push
les
loope
pop
sbb
cmpsl
sub
sbb
pop
jno
push
sbb
int3
mov
mov
jae
pusha
add
insb
lea
jns
cmc
addr16
xadd
aad
xor
inc
imul
xor
mov
xor
movsl
mov
lcall
movsl
shll
stc
mov
adc
movsl
jge
xchg
xchg
adc
pop
mov
daa
pop
jecxz
scas
addb
pop
cmp
add
xor
add
pop
stos
popa
jmp
adc
pop
push
sub
or
fstl
popf
push
lds
sbb
ficoml
mov
add
pusha
add
rorl
fcoml
pop
mov
mov
aam
add
or
stc
nop
jg
sbb
iret
out
add
gs
xchg
stos
mov
mov
call
in
push
sub
add
or
push
pop
inc
add
sub
fbld
divl
ljmp
add
and
test
int3
xor
add
mov
insb
hlt
or
leave
jg
xchg
pop
xor
lea
push
mov
imul
push
or
call
ss
jmp
scas
shrb
ja
jno
enter
xor
adc
xor
push
inc
add
xchg
and
stc
mov
stos
ret
jb
movsb
pop
insb
repz
push
add
jae
push
pusha
add
sbb
cltd
pop
xchg
mov
lret
jmp
cmp
add
testl
add
addr16
mov
addb
inc
nop
sar
pop
js
mov
inc
add
xor
pop
mov
add
add
or
jbe
scas
iret
inc
add
ror
xor
sbb
leave
test
sbb
jg
add
dec
jne
add
addr16
hlt
jge
mov
int
in
into
push
testb
xor
pop
fs
cmp
sbb
xor
dec
push
add
cmpsb
ljmp
mov
dec
push
cmp
movsb
es
xlat
pop
xchg
jnp
aas
or
xchg
push
dec
jle
daa
and
add
adc
mov
test
xchg
xchg
out
pop
pop
lea
cmp
push
stc
mov
fnstcw
addb
in
adc
lds
push
in
push
clc
cmp
mov
leave
out
push
xchg
les
lret
fists
pop
xor
daa
cmp
and
fucomip
pop
xor
adcl
out
and
cmpsl
aad
mov
mov
ret
arpl
cmpl
mov
add
icebp
icebp
loopne
outsb
jg
outsb
aam
ret
jnp
or
cld
pop
fildl
lcall
sub
call
add
pop
and
pop
xchg
fld
or
jb
push
testb
and
mov
dec
into
testb
and
mov
insl
adc
jl
add
dec
jno
dec
loop
mov
pop
les
lcall
pop
loopne
popf
adc
in
mov
push
out
cmp
sti
cmpsl
mov
fbstp
mov
pop
es
lret
pop
int
mov
jb
mov
cmpsl
mov
jp
mov
cs
rorb
lods
jmp
jns
and
mov
xor
enter
shrl
inc
icebp
dec
addb
add
lcall
enter
fst
adc
aad
fistpl
in
mov
jae
mov
out
mov
loop
fcompl
test
push
or
mov
lods
in
addb
and
xchg
repnz
repz
push
lret
lds
add
rolb
fildll
out
in
or
push
pop
imul
fdivrl
inc
add
adc
jno
lret
pop
ret
jmp
pop
dec
xor
inc
add
aaa
arpl
cld
data16
fistpll
add
dec
repnz
push
lcall
add
out
mov
xor
inc
and
mov
loop
fcom
addr16
inc
fmuls
jbe
jae
inc
add
adc
shll
mov
outsb
out
adc
ret
testl
xchg
mov
mov
leave
adc
cmp
add
inc
mov
push
add
imul
add
pop
je
add
dec
mov
add
out
rolb
fstps
jnp
mov
dec
adc
jbe
lcall
add
insb
jmp
push
ret
in
hlt
adc
and
adc
add
addb
aaa
pop
call
cmpsl
adc
push
aas
push
and
sbb
loope
in
adc
add
push
jns
fcomps
jmp
out
addr16
push
cs
mov
and
call
mov
add
dec
mov
add
rolb
jae
add
jo
fsubs
je
std
push
mov
outsb
sbb
xlat
push
add
cld
aad
lret
movsl
std
aaa
orl
xchg
rcll
jge
push
sbb
inc
add
xor
push
lret
xchg
rolb
push
loop
jno
icebp
dec
cs
jno
adc
pop
aam
les
jo
dec
rorl
mov
cmpsl
xchg
jbe
movsb
les
inc
rolb
js
sub
insl
dec
in
inc
pop
shl
sbb
jle
push
aaa
sub
out
cli
cmpsl
outsb
nop
jbe
in
mov
push
pop
ljmp
push
add
mov
lods
push
inc
nop
cmp
in
xchg
push
fstl
ret
cltd
hlt
mov
ret
cmp
sbb
xor
loopne
int3
push
sbb
rcrb
cwtl
arpl
add
adc
fmuls
and
adc
mov
inc
test
xchg
lock
ja
pop
add
jnp
inc
cmp
pop
sahf
mov
mov
fistpll
push
cmp
xchg
pop
test
imul
in
aad
jne
sub
jb
out
xchg
outsb
jnp
add
dec
inc
int
xchg
pop
and
pop
adc
add
pop
inc
mov
or
fimull
cltd
jne
mov
adc
insb
cltd
cmp
or
jo
dec
jns
pop
pop
sbb
push
dec
sbb
in
add
stc
jg
xchg
adc
push
xchg
pop
sbbl
testl
mov
inc
adc
cmp
add
dec
in
xchg
sbb
and
pop
and
add
test
jo
ljmp
add
jecxz
fstpl
aam
lds
add
jge
vpmaddwd
sub
fcoms
add
popa
mov
cmp
jno
sub
mov
cld
test
add
mov
mov
notl
in
mov
push
jle
sbb
jle
cmp
pop
adc
cmpsb
repz
sub
loope
pop
sub
mul
mov
push
xor
xchg
pop
fisubl
add
call
mov
lds
mov
inc
jae
dec
cmp
xchg
jbe
dec
mov
dec
xor
mov
daa
sbb
add
in
push
fs
mov
fwait
or
mov
les
test
xor
rcrb
mov
mov
add
pop
popf
adc
add
enter
aam
dec
mov
popf
call
inc
jle
lods
sub
dec
add
cmpsl
fbld
add
add
aad
lods
mov
int
pop
ss
fs
lcall
jae
jo
dec
jl
mov
movsb
sub
push
movb
data16
mov
pop
sub
pop
fisttpll
xor
jbe
cmp
xchg
leave
movsl
cmc
cmp
and
popf
lds
jo
and
pop
shlb
aas
xlat
out
dec
dec
push
add
cmpsl
repnz
mov
xchg
sbb
mov
pop
lret
ja
push
jecxz
cmpsb
mov
mov
ljmp
into
jmp
pop
sbb
sbb
mov
mov
xchg
cmpsl
mov
add
pop
push
pop
sahf
fwait
jbe
sub
adc
fstpl
test
add
outsb
les
fildll
add
mov
adc
mov
jns
xor
add
or
pop
fcomps
and
jns
xor
lahf
sub
add
push
movb
jmp
push
inc
dec
je
or
push
mov
add
insl
pop
es
loopne
jecxz
or
add
je
jne
popa
xor
bound
into
inc
add
cmp
outsb
sub
add
push
xchg
bound
push
sub
das
stc
dec
call
dec
and
pusha
add
addr16
xchg
add
dec
mov
add
pop
jb,pt
push
addb
lds
call
arpl
push
cmp
js
adc
leave
jecxz
add
xchg
add
ljmp
pop
cli
aas
je
addb
js
pop
rcr
add
and
addb
cmp
jmp
add
xchg
icebp
xor
and
cmp
in
add
out
mov
aam
sub
mov
dec
in
gs
xchg
fwait
jp
fldcw
stc
outsl
cmp
sbb
push
sbb
xor
aas
xchg
mov
sbb
cmp
clc
or
fisttpl
dec
dec
xchg
jae
movsl
xor
enter
sub
fdivl
push
and
sbb
fucomp
aam
dec
and
adc
ja
add
add
adc
in
mov
lret
pop
idivl
daa
test
and
das
xchg
dec
mov
rcll
mov
sbb
xchg
jbe
out
pop
loopne
clc
fwait
jae
pop
shl
and
push
ljmp
mov
cmp
mov
shrl
add
cs
lret
jne
pop
pop
shll
fmul
cmp
lods
adc
addb
lea
addb
out
cmp
in
dec
jno
push
adc
mov
jg
clc
inc
add
stos
xchg
lcall
add
xor
pusha
add
dec
cmpsb
lcall
aas
mull
repnz
cltd
mov
push
and
pop
repz
mov
xchg
mov
arpl
inc
add
mov
sub
fld
add
outsb
arpl
fbld
dec
arpl
sbb
cltd
xchg
push
std
pop
mov
out
jbe
inc
add
