mov
loopne
xchg
mov
movsb
loopne
pop
cmpsl
loopne
mov
test
mov
test
loopne
dec
test
loopne
sbb
loopne
mov
loopne
mov
movsb
loopne
mov
test
loopne
jecxz
loopne
or
loopne
sub
loopne
test
mov
mov
loopne
push
loopne
mov
loopne
out
loopne
xcrypt-cfb
mov
mov
loopne
ljmp
mov
test
loopne
mov
loopne
outsb
cmpsb
loopne
mov
loopne
push
loopne
ljmp
mov
test
loopne
adc
loopne
mulb
loopne
hlt
cmpsl
loopne
mov
loopne
xchg
cmpsl
loopne
mov
test
mov
test
mov
mov
loopne
or
loopne
push
mov
loopne
push
test
loopne
jle
loopne
add
cmpsl
loopne
loopne
loopne
movsb
movsl
loopne
lods
mov
loopne
inc
movsb
loopne
jle
loopne
movsb
loopne
addr16
jns
loopne
inc
movsl
loopne
cmpsb
loopne
jecxz
loopne
les
loopne
in
loopne
mov
loopne
sbb
mov
loopne
jle
loopne
adc
loopne
dec
test
mov
cmpsb
loopne
jmp
mov
test
loopne
test
loopne
jae
loopne
aad
loopne
cmp
loopne
add
loopne
cwtl
mov
loopne
lahf
cmpsb
loopne
shlb
loopne
les
loopne
test
loopne
push
cmpsb
loopne
fisubl
loopne
jg
loopne
adc
loopne
fisubs
loopne
pusha
cmpsb
loopne
jae
loopne
add
loopne
subb
mov
cmpsb
loopne
jmp
loopne
mov
mov
loopne
jg
loopne
sahf
movsb
loopne
inc
mov
loopne
lea
loopne
dec
cmpsl
loopne
mov
loopne
cmc
cmpsb
loopne
mov
loopne
cltd
mov
loopne
xlat
mov
loopne
or
cmpsb
loopne
stos
movsl
loopne
inc
movsl
loopne
dec
mov
loopne
sbb
mov
movsb
loopne
jmp
loopne
adc
mov
loopne
mulb
loopne
inc
mov
loopne
bt
mov
mov
loopne
push
movsl
loopne
and
loopne
mov
loopne
adc
movsl
loopne
mov
test
mov
movsb
loopne
jp
loopne
push
cmpsb
loopne
adc
loopne
in
loopne
push
test
mov
mov
loopne
adc
loopne
aad
loopne
push
mov
loopne
and
loopne
lods
movsb
loopne
mov
loopne
mov
cmpsl
loopne
cld
movsb
loopne
jns
loopne
andl
shlb
mov
mov
loopne
jecxz
loopne
mov
loopne
jns
loopne
test
cmpsl
loopne
imul
loopne
pop
cmpsl
loopne
sbb
mov
movsl
loopne
insb
movsl
loopne
fldcw
loopne
cltd
cmpsl
loopne
arpl
loopne
leave
mov
loopne
or
mov
loopne
lds
loopne
std
cmpsb
loopne
ret
mov
mov
loopne
push
movsl
loopne
xor
loopne
dec
movsb
loopne
xchg
test
mov
movsb
loopne
pop
cmpsl
loopne
mov
movsl
loopne
jle
loopne
adc
mov
loopne
push
cmpsl
loopne
dec
cmpsl
loopne
xor
loopne
loop
loopne
adc
loopne
test
loopne
add
loopne
jmp
loopne
mov
loopne
mov
loopne
enter
pop
test
mov
test
mov
mov
loopne
pop
movsl
loopne
jmp
test
mov
mov
loopne
sti
mov
loopne
pop
movsb
loopne
lods
movsb
loopne
loopne
loopne
mov
test
mov
movsb
loopne
cwtl
mov
loopne
js
loopne
and
loopne
dec
cmpsb
loopne
andb
mov
cmpsl
loopne
mov
loopne
stos
cmpsl
loopne
jns
loopne
pop
test
mov
movsl
loopne
outsb
mov
loopne
mov
movsl
loopne
sub
loopne
adc
test
loopne
push
test
mov
mov
loopne
out
movsb
loopne
nop
cmpsl
loopne
xor
loopne
pop
test
mov
test
mov
cmpsb
loopne
stos
cmpsl
loopne
dec
movsl
loopne
int3
mov
loopne
adc
loopne
add
test
mov
mov
loopne
stc
mov
loopne
bound
loopne
je
loopne
andl
mov
mov
loopne
andb
mov
cmpsl
loopne
add
loopne
add
loopne
jns
loopne
in
cmpsb
loopne
mov
loopne
js
loopne
outsb
cmpsl
loopne
cmpsl
loopne
les
loopne
mov
loopne
mov
mov
loopne
std
test
mov
cmpsb
loopne
pop
cmpsb
loopne
xchg
movsl
loopne
cmpsb
mov
loopne
jg
loopne
shlb
mov
test
mov
movsl
loopne
fs
mov
cmpsl
loopne
push
movsb
loopne
push
movsl
loopne
stos
movsb
loopne
loop
loopne
jbe
loopne
std
cmpsl
loopne
shlb
loopne
cmpsb
loopne
mov
cmpsb
loopne
pushf
test
mov
cmpsl
loopne
add
loopne
mov
mov
loopne
loopne
loopne
cmp
mov
test
mov
movsb
loopne
jl
loopne
mov
mov
loopne
cmp
mov
loopne
xor
movsb
loopne
add
loopne
cmp
loopne
jae
loopne
adc
loopne
test
loopne
mulb
loopne
inc
cmpsl
loopne
jb
loopne
data16
loopne
frstor
loopne
out
loopne
push
mov
loopne
ja
loopne
sbb
loopne
inc
movsb
loopne
inc
mov
loopne
stos
mov
loopne
movsb
loopne
cmpsl
loopne
mov
cmpsb
loopne
or
loopne
push
mov
loopne
inc
cmpsb
loopne
cmp
loopne
cmp
cmpsl
loopne
sbb
loopne
aad
loopne
das
test
loopne
inc
movsl
loopne
lods
test
mov
mov
loopne
mov
loopne
popf
movsb
loopne
movsw
loopne
mov
loopne
fwait
mov
loopne
icebp
cmpsl
loopne
cmpsl
loopne
cmp
loopne
mov
movsl
loopne
jno
loopne
ljmp
loopne
lret
mov
test
mov
movsl
loopne
js
loopne
das
test
loopne
arpl
loopne
lret
mov
cmpsb
loopne
cmpsl
loopne
dec
mov
loopne
mull
loopne
mov
cmpsb
loopne
inc
mov
loopne
insb
movsb
loopne
dec
cmpsl
loopne
jl
loopne
sub
loopne
push
cmpsl
loopne
js
loopne
mov
loopne
xchg
cmpsl
loopne
adc
loopne
xchg
test
mov
movsl
loopne
cld
movsb
loopne
dec
test
mov
mov
loopne
adc
mov
loopne
ljmp
mov
cmpsl
loopne
or
loopne
xor
loopne
inc
mov
loopne
clc
test
mov
mov
loopne
push
movsb
loopne
andl
mov
test
mov
mov
loopne
mov
loopne
data16
mov
cmpsb
loopne
cmpsl
loopne
test
movsb
loopne
andl
loopne
xchg
mov
loopne
in
loopne
addr16
xor
loopne
cmp
loopne
xchg
mov
loopne
mov
loopne
lret
mov
mov
loopne
mov
movsl
loopne
shll
loopne
mov
test
mov
mov
loopne
fisubl
loopne
dec
mov
loopne
enter
imulb
loopne
jmp
test
mov
test
mov
cmpsb
loopne
cmpsl
mov
loopne
xchg
test
mov
cmpsb
loopne
mov
cmpsl
loopne
clc
mov
loopne
scas
cmpsl
loopne
ljmp
mov
test
loopne
pop
cmpsl
loopne
jge
loopne
lds
loopne
xchg
loopne
xchg
mov
loopne
xchg
test
mov
test
mov
cmpsb
loopne
loop
loopne
mov
cmpsb
loopne
repz
loopne
sub
mov
loopne
mov
cmpsb
loopne
imul
loopne
fisubrs
loopne
or
loopne
add
loopne
out
cmpsb
loopne
xor
loopne
pop
movsl
loopne
xor
loopne
cmp
loopne
mov
loopne
loopne
loopne
xor
loopne
xor
movsb
loopne
fbld
mov
mov
loopne
repz
loopne
frstor
loopne
adc
cmpsl
loopne
bound
loopne
xchg
loopne
imul
loopne
jecxz
loopne
push
movsb
loopne
cmp
loopne
inc
mov
loopne
lods
cmpsl
loopne
cmpsb
loopne
sub
loopne
push
movsl
loopne
and
loopne
jne
loopne
loopne
cmpsl
test
mov
movsb
loopne
xor
loopne
push
cmpsl
loopne
imul
mov
mov
loopne
push
cmpsl
loopne
adc
loopne
jb
loopne
clc
movsl
loopne
adc
loopne
sub
loopne
sub
loopne
shll
mov
cmpsb
loopne
outsl
mov
loopne
popf
movsl
loopne
leave
test
mov
mov
loopne
aam
loopne
clc
cmpsb
loopne
movsb
movsl
loopne
lds
mov
test
loopne
add
loopne
fisubs
loopne
sbb
loopne
pop
cmpsl
loopne
xor
movsb
loopne
movsl
loopne
push
cmpsl
loopne
lock
loopne
shll
mov
mov
loopne
sbb
loopne
jnp
loopne
pop
test
loopne
ret
mov
mov
loopne
mov
loopne
cmc
movsb
loopne
mov
cmpsb
loopne
int
loopne
fwait
movsl
loopne
xor
loopne
jbe
loopne
cli
movsl
loopne
dec
movsl
loopne
mov
movsb
loopne
shlb
iret
test
mov
movsl
loopne
inc
cmpsb
loopne
push
movsb
loopne
inc
mov
loopne
adc
mov
loopne
shlb
loopne
out
test
mov
movsb
loopne
adc
test
mov
mov
loopne
and
loopne
sub
loopne
or
loopne
lret
mov
movsb
loopne
enter
xchg
mov
loopne
jl
loopne
jge
loopne
jmp
loopne
andb
mov
cmpsb
loopne
jmp
loopne
loope
loopne
nop
mov
loopne
xchg
mov
loopne
sub
test
mov
mov
loopne
add
loopne
mov
mov
loopne
cmp
loopne
out
loopne
stos
cmpsb
loopne
mov
loopne
xchg
movsl
loopne
inc
mov
loopne
dec
movsb
loopne
pop
test
mov
test
mov
mov
loopne
sub
mov
mov
loopne
sti
movsb
loopne
mov
mov
loopne
add
cmpsl
loopne
adc
loopne
imul
loopne
shrl
loopne
mov
loopne
stos
cmpsl
loopne
in
cmpsb
loopne
and
loopne
xchg
test
mov
cmpsb
loopne
out
loopne
mov
cmpsl
loopne
out
loopne
popa
cmpsl
loopne
cmp
loopne
inc
movsl
loopne
jl
loopne
xchg
mov
loopne
inc
test
mov
movsl
loopne
loop
loopne
mov
loopne
add
loopne
push
mov
loopne
ret
mov
mov
loopne
enter
xor
movsl
loopne
cmp
loopne
sti
mov
loopne
pushf
mov
loopne
push
cmpsb
loopne
mov
mov
loopne
cmp
loopne
push
mov
loopne
test
loopne
lock
loopne
std
cmpsb
loopne
push
cmpsb
loopne
cmp
mov
test
mov
mov
loopne
pop
cmpsl
loopne
push
mov
loopne
outsl
cmpsl
loopne
sub
loopne
andl
loopne
shll
loopne
sahf
cmpsl
loopne
push
test
mov
test
loopne
cmp
mov
cmpsl
loopne
jg
loopne
inc
mov
loopne
imull
loopne
aam
loopne
mov
mov
movsb
loopne
das
movsb
loopne
mov
mov
loopne
mov
loopne
int
loopne
out
loopne
pop
movsl
loopne
jecxz
loopne
add
cmpsb
loopne
or
loopne
dec
mov
loopne
mov
movsb
loopne
bound
loopne
xlat
mov
loopne
cmpsl
loopne
mov
loopne
lods
mov
loopne
xchg
mov
mov
loopne
push
cmpsl
loopne
popa
cmpsb
loopne
sub
loopne
pop
test
loopne
jecxz
loopne
sub
movsl
loopne
test
loopne
push
movsb
loopne
fisubl
loopne
fsubl
loopne
mov
mov
loopne
mov
loopne
pop
mov
loopne
and
loopne
mov
cmpsb
loopne
jp
loopne
das
mov
loopne
lret
mov
mov
loopne
insb
mov
loopne
arpl
loopne
shll
andl
mov
mov
loopne
aam
loopne
mov
movsl
loopne
cmp
loopne
bound
mov
test
mov
test
loopne
aaa
cmpsl
loopne
shlb
loopne
push
movsb
loopne
sub
loopne
push
mov
loopne
in
loopne
xor
movsb
loopne
sbb
loopne
push
test
mov
mov
loopne
aaa
cmpsb
loopne
shlb
loopne
inc
test
mov
mov
loopne
andb
mov
test
mov
cmpsl
loopne
lahf
test
mov
mov
loopne
push
loopne
sub
loopne
andl
loopne
mov
loopne
jl
loopne
arpl
loopne
sahf
test
mov
cmpsb
loopne
adc
loopne
cmpsl
loopne
adc
loopne
int
loopne
stos
movsb
loopne
and
loopne
insl
mov
loopne
dec
cmpsb
loopne
dec
movsb
loopne
fldcw
loopne
popf
movsb
loopne
mulb
loopne
push
mov
loopne
lcall
mov
cmpsl
loopne
aaa
test
mov
movsl
loopne
jnp
loopne
out
movsb
loopne
mov
loopne
mov
mov
loopne
andb
mov
movsl
loopne
movsl
loopne
and
loopne
xchg
loopne
jg
loopne
push
test
loopne
inc
cmpsl
loopne
mov
mov
loopne
push
mov
loopne
sub
mov
loopne
push
cmpsl
loopne
lahf
movsl
loopne
mull
loopne
outsl
test
mov
mov
loopne
mov
movsl
loopne
xchg
mov
loopne
dec
cmpsl
loopne
stos
movsb
loopne
into
movsb
loopne
into
cmpsb
loopne
or
loopne
insb
cmpsb
loopne
jo
loopne
lock
loopne
mov
mov
loopne
lret
mov
movsl
loopne
shlb
loopne
mulb
loopne
and
loopne
jb
loopne
xlat
mov
loopne
jb
loopne
fisubl
loopne
test
mov
test
mov
movsl
loopne
add
cmpsl
loopne
sbb
mov
mov
loopne
sub
loopne
push
cmpsl
loopne
ds
mov
test
loopne
jl
loopne
mov
loopne
out
loopne
jp
loopne
push
movsl
loopne
cli
cmpsb
loopne
mov
movsb
loopne
outsb
movsb
loopne
mov
movsl
loopne
jbe
loopne
xchg
loopne
xlat
cmpsb
loopne
dec
movsb
loopne
scas
mov
loopne
andl
and
loopne
push
cmpsb
loopne
xchg
cmpsl
loopne
mulb
loopne
mov
loopne
fisubs
loopne
sub
loopne
outsb
cmpsl
loopne
fisubl
loopne
fsubs
mov
test
mov
mov
loopne
push
test
mov
movsb
loopne
movsl
loopne
jmp
loopne
pop
movsb
loopne
xor
loopne
jb
loopne
js
loopne
pop
test
loopne
push
mov
loopne
movsl
mov
loopne
arpl
mov
mov
loopne
cli
cmpsb
loopne
pop
movsb
loopne
pop
movsl
loopne
adc
loopne
movsl
test
mov
mov
loopne
or
loopne
sub
cmpsb
loopne
mov
loopne
jne
loopne
aam
loopne
mov
mov
loopne
dec
movsl
loopne
dec
mov
loopne
mull
loopne
addr16
jle
loopne
shll
loopne
shld
mov
movsb
loopne
xchg
movsl
loopne
aam
loopne
movsl
movsl
loopne
arpl
loopne
adc
cmpsl
loopne
adc
loopne
cmp
loopne
mov
cmpsl
loopne
pop
test
loopne
mov
test
mov
cmpsb
loopne
das
cmpsl
loopne
or
loopne
fldenv
loopne
shll
loopne
dec
cmpsl
loopne
mov
loopne
dec
test
loopne
push
cmpsb
loopne
pop
mov
loopne
stc
movsb
loopne
add
loopne
loope
loopne
andl
xor
cmpsb
loopne
mov
test
mov
test
mov
mov
loopne
shrb
loopne
mov
loopne
inc
cmpsl
loopne
aas
mov
loopne
push
cmpsb
loopne
pushf
mov
loopne
mov
loopne
lock
loopne
movsl
loopne
or
loopne
in
loopne
sahf
mov
loopne
pop
movsb
loopne
jae
loopne
shll
loopne
test
loopne
in
loopne
jmp
loopne
andl
mov
mov
loopne
push
mov
loopne
or
loopne
mov
loopne
jg
loopne
dec
movsl
loopne
out
loopne
enter
repnz
loopne
xor
loopne
pop
movsb
loopne
adc
loopne
cmpsb
loopne
subl
loopne
fildll
loopne
add
loopne
jmp
mov
loopne
xchg
mov
loopne
xor
loopne
jae
loopne
fsubl
loopne
jecxz
loopne
sub
loopne
out
loopne
pusha
cmpsl
loopne
dec
movsl
loopne
jecxz
loopne
mov
test
loopne
adc
cmpsl
loopne
jge
loopne
and
movsl
loopne
in
movsb
loopne
xchg
test
mov
mov
loopne
mov
loopne
dec
mov
loopne
les
loopne
cmpsl
mov
loopne
out
mov
loopne
int3
movsb
loopne
sub
loopne
dec
mov
loopne
dec
movsb
loopne
sub
loopne
mov
loopne
mov
cmpsb
loopne
mov
mov
loopne
repnz
loopne
mov
loopne
jns
loopne
out
loopne
call
movsl
loopne
mov
movsb
loopne
andl
mov
cmpsb
loopne
inc
movsl
loopne
inc
mov
loopne
dec
test
mov
cmpsb
loopne
jne
loopne
inc
mov
loopne
add
loopne
or
loopne
pop
movsb
loopne
mov
cmpsl
loopne
mov
loopne
add
loopne
ret
mov
loopne
in
loopne
lds
loopne
pop
movsl
loopne
mov
test
mov
mov
loopne
je
loopne
pop
movsl
loopne
cs
mov
test
mov
movsb
loopne
out
movsb
loopne
out
loopne
cmpsl
loopne
pop
mov
loopne
int3
mov
loopne
mov
cmpsl
loopne
fsubrl
loopne
mov
loopne
movsb
loopne
mov
movsl
loopne
sbb
loopne
mov
loopne
fisubs
loopne
stos
test
mov
cmpsb
loopne
or
loopne
lcall
mov
mov
loopne
pop
test
loopne
inc
cmpsl
loopne
sub
loopne
scas
mov
loopne
scas
movsl
loopne
nop
mov
loopne
xchg
test
mov
cmpsb
loopne
cmpsl
cmpsb
loopne
popa
cmpsl
loopne
mov
loopne
clc
cmpsl
loopne
jbe
loopne
das
movsb
loopne
xlat
cmpsb
loopne
adc
loopne
ljmp
mov
cmpsl
loopne
stos
mov
loopne
stos
test
mov
movsb
loopne
fsubl
loopne
mov
movsl
loopne
bound
loopne
fldenv
loopne
cmp
loopne
jl
loopne
leave
movsl
loopne
loop
loopne
lret
movsb
loopne
jecxz
loopne
shlb
loopne
and
loopne
daa
test
loopne
pop
cmpsl
loopne
mov
loopne
push
test
mov
test
mov
movsb
loopne
mov
loopne
int
loopne
mov
mov
loopne
mov
movsb
loopne
cmpsl
loopne
sbb
cmpsb
loopne
mov
loopne
xor
mov
mov
loopne
shlb
mov
movsb
loopne
stos
cmpsl
loopne
cmp
mov
mov
loopne
sti
mov
loopne
pop
cmpsl
loopne
test
loopne
cmp
loopne
sbb
loopne
je
loopne
int
loopne
dec
mov
loopne
jp
loopne
out
movsb
loopne
subb
mov
movsb
loopne
and
test
mov
mov
loopne
frstor
loopne
mov
loopne
push
cmpsl
loopne
jae
loopne
sbb
mov
cmpsb
loopne
xor
loopne
xor
loopne
jns
loopne
enter
mov
loopne
loope
loopne
cmp
pushf
mov
add
pop
adc
add
mov
jl
cld
pop
mov
push
pop
in
fisttpl
fiaddl
jecxz
test
xchg
lret
add
add
add
adc
add
add
fldt
fdivrs
divl
fistl
xor
lcall
pop
xchg
fiaddl
mov
adc
add
test
dec
xor
add
pop
cmp
add
clc
repnz
push
jl
inc
clc
xbegin
clc
shl
clc
notb
add
out
mov
das
lcall
add
mov
out
xabort
fcoml
jge
clc
icebp
and
add
clc
rcrl
clc
imul
add
add
add
clc
cmp
add
mov
mov
add
fsubl
mov
clc
inc
add
xchg
xor
test
mov
dec
outsl
mov
cmp
pushf
lock
pop
mov
inc
clc
xlat
ret
add
je
dec
mov
insb
xor
add
out
cld
mov
clc
out
jb
add
aas
fisubrl
clc
add
add
dec
mov
clc
lock
add
mov
adc
daa
clc
pop
add
test
stc
fldenv
add
or
and
add
fcmovnu
dec
scas
addr16
pop
mov
push
dec
or
int3
mov
sbb
fstpl
imul
popf
mov
dec
cmc
jns
inc
add
sar
mov
mov
clc
pop
clc
testl
clc
push
cmp
jmp
inc
add
lcall
add
xor
add
clc
out
push
icebp
fs
mov
sar
imul
clc
fs
dec
jns
clc
mov
cmp
add
jle
cmp
enter
das
push
clc
mov
pop
int
outsb
pop
iret
jmp
outsb
jbe
push
add
inc
clc
mov
pop
clc
in
test
ss
sub
jae
add
mov
cmp
xchg
push
mov
add
popf
jno
add
clc
insl
push
push
mov
loop
push
jecxz
sub
int
sbb
pop
push
jmp
or
add
dec
push
add
xchg
push
clc
roll
add
xor
add
add
add
push
aam
int3
fwait
pop
aam
cmp
test
push
cmp
pop
mov
push
xchg
test
mov
adc
push
clc
push
clc
add
jge
repz
lods
jle
pushf
es
mov
clc
frstor
xchg
cmp
add
fisubrl
push
clc
sbb
std
imul
add
sbb
into
fstps
or
add
inc
clc
mov
xor
add
add
jo
add
add
push
add
enter
push
clc
cmp
xchg
into
jns
add
cmp
es
enter
mov
clc
or
ss
xchg
sub
sbb
clc
aad
clc
sbb
add
cmp
add
or
add
lret
push
add
ret
clc
ja
mov
or
fs
das
insl
sar
add
cmp
inc
clc
xchg
lods
aad
incl
imul
pusha
add
push
mov
jecxz
add
jo
add
int
adc
add
sbb
leave
scas
pop
xchg
es
testb
mov
add
jle
aad
lea
add
nop
mov
gs
jecxz
loopne
mov
clc
add
add
sbb
ret
sbb
clc
gs
mov
add
add
push
add
push
test
mov
sbb
add
dec
xor
data16
xchg
mov
ljmp
leave
sar
addr16
mov
add
mov
mov
outsb
clc
cmc
sbb
clc
mov
mov
add
add
add
shrb
clc
jbe
leave
test
push
clc
ljmp
sbb
adc
add
clc
or
int
or
sbb
add
clc
js
inc
clc
or
push
xchg
mov
test
add
cmpsb
clc
mov
mov
clc
xor
add
lret
data16
loope
cltd
xchg
cmp
add
mov
hlt
rol
clc
xchg
jnp
xchg
mov
mov
pop
out
scas
push
inc
add
and
add
data16
gs
push
jecxz
pop
nop
idivb
in
cli
dec
inc
clc
in
into
cmp
pop
xchg
pop
add
add
clc
test
cmp
cmpsl
clc
imul
clc
sub
add
cmp
out
xchg
mov
add
dec
bound
add
clc
shlb
clc
lret
aaa
gs
jno
add
movsl
clc
repz
loop
repz
xchg
gs
dec
bound
add
adc
pop
clc
fiadds
or
hlt
pop
fcoms
push
arpl
add
mov
mov
cmp
dec
lcall
cmp
iret
je
test
dec
dec
adc
add
sar
xor
roll
clc
je
mov
add
add
movsl
clc
aam
add
cmpsb
clc
aaa
cmp
add
add
inc
add
movsb
clc
mov
clc
mov
data16
fldl
cmp
add
add
mov
add
fwait
sub
inc
clc
lea
add
clc
sti
test
out
shll
inc
add
imul
mov
xchg
dec
sbb
or
add
jle
jle
inc
clc
cmp
inc
clc
inc
add
inc
add
jno
add
add
mov
push
add
mov
fincstp
xor
add
imul
mov
add
dec
mov
xchg
mov
add
add
lret
or
lret
pop
xchg
loope
popf
bound
add
mov
clc
xchg
movsl
clc
mov
popa
add
lods
ljmp
addr16
fwait
xchg
js
clc
xchg
out
int
clc
out
inc
add
xor
add
add
add
out
fcomps
cmp
int
aad
lcall
jmp
mov
lret
clc
outsl
jecxz
cmp
clc
push
add
jle
add
fwait
mov
clc
lahf
sub
ret
clc
push
imul
xchg
mov
jae
add
add
and
add
push
add
aaa
repnz
clc
cs
mov
out
and
add
fwait
cmp
inc
clc
and
add
add
into
mov
ficoml
add
pusha
add
pop
xchg
xchg
in
mov
gs
pop
adc
clc
push
ss
clc
xor
add
fisttpl
outsl
das
xchg
sbb
cwtl
div
push
pop
insl
xchg
int
add
add
add
add
mov
outsb
jae
add
ds
or
je
mov
adc
add
add
xor
add
cmp
sbb
clc
push
add
pushf
ss
bound
add
clc
xchg
push
push
testl
clc
push
clc
cmp
add
aam
clc
imul
add
and
add
clc
imul
jge
clc
loope
mov
sbb
add
add
adc
add
rclb
lret
in
jmp
outsl
fimull
rolb
mov
xor
add
mov
xlat
xchg
pushf
je
ljmp
repz
cmp
fs
repnz
cmp
add
cmp
dec
inc
add
test
jnp
add
xchg
int
add
dec
test
jne
clc
clc
fimuls
clc
pop
clc
stos
fdivrl
mov
clc
or
add
inc
clc
push
pop
xchg
pusha
add
mov
test
movsb
clc
adc
add
lcall
add
clc
call
icebp
sub
add
pop
cmp
jge
fists
add
clc
sbb
imul
cmp
dec
fidivs
add
out
jge
add
mov
lahf
add
in
push
sub
push
push
push
push
push
push
call
sub
es
push
mov
and
xor
not
test
setne
nop
nop
loop
pop
lea
or
sub
xchg
not
es
ss
pop
add
movzbl
es
push
or
and
push
mov
add
add
push
mov
push
push
call
push
call
leave
ret
mov
sub
mov
xchg
sub
add
ret
test
nop
nop
nop
nop
nop
push
push
push
je
mov
adc
test
jne
ret
pop
jmp
andl
mov
lea
push
push
push
mov
push
lret
jmp
aam
clc
sbb
push
add
push
sar
sbb
sub
add
mov
add
arpl
add
cmp
add
add
add
cwtl
xchg
iret
cld
in
cli
int
xlat
jo
add
jno
add
sub
leave
stos
xchg
loop
xchg
adc
add
add
inc
clc
in
adc
add
add
jns
sbb
cld
pop
inc
add
je
or
jp
fnstenv
clc
das
cmp
clc
cmp
push
fmuls
mov
loopne
mov
add
sti
jo
add
add
pop
nop
stos
movq
or
add
in
push
jge
mov
test
jecxz
mov
add
cmp
jmp
and
add
clc
xchg
in
inc
clc
mov
and
or
aam
ret
clc
mov
add
out
mov
clc
jo
add
pop
sub
clc
hlt
sbb
clc
cs
aam
enter
jns
mov
leave
cli
xchg
addr16
dec
int3
xchg
aad
scas
push
pop
push
mov
sar
add
dec
mov
or
mov
push
push
mov
movsl
clc
jmp
inc
clc
inc
add
cmp
add
pop
dec
add
add
clc
xchg
fcoml
add
cs
or
clc
mov
data16
data16
push
add
add
cmp
clc
call
addr16
aas
adc
jp
clc
sub
pop
add
add
clc
push
dec
lfs
sbb
pop
scas
xor
add
mov
sub
inc
add
testb
add
add
dec
or
mov
insb
addr16
ret
sbb
stos
test
add
dec
in
daa
clc
sub
aas
negb
xor
add
clc
lods
adc
add
lea
and
add
add
and
add
add
mov
xchg
dec
imul
sarb
inc
add
xor
add
push
add
mov
clc
ds
dec
and
movsb
clc
inc
add
js
mov
clc
sbb
add
xor
add
cwtl
insb
push
lea
fdivr
fnstcw
inc
add
push
loope
jno
add
or
ficoml
data16
pop
into
mov
cmp
mov
data16
ja
clc
or
add
shll
inc
clc
mov
xchg
cld
imul
or
adc
add
clc
imul
cld
sbb
clc
fsubl
nop
push
add
ljmp
add
add
lods
inc
clc
inc
add
es
push
dec
divl
xchg
jnp
xabort
sar
jmp
jle
push
pop
stos
mov
pop
push
insl
adc
add
pop
mov
inc
add
cmpsb
clc
inc
clc
xchg
incl
cmp
clc
movsb
clc
lock
movsl
clc
mov
fidivl
ljmp
add
add
add
add
idivb
mov
insb
aaa
scas
xor
sar
xbegin
daa
clc
int
nop
xor
clc
jmp
mov
add
loop
sar
movsl
clc
aas
pop
xabort
in
pop
push
add
add
iret
repz
add
and
jne
xabort
add
data16
and
add
add
mov
clc
cs
push
popa
add
movsb
clc
xor
add
clc
push
add
jmp
add
pop
bound
add
pop
push
addr16
es
popa
add
jecxz
sub
dec
add
add
jne
add
add
add
xchg
or
outsl
jmp
jae
add
imul
add
mov
add
movsb
clc
lret
outsb
mov
push
add
add
add
mov
clc
push
ljmp
add
add
add
addr16
mov
adc
add
movsb
clc
stos
in
stc
adc
add
into
adc
add
mov
xchg
mov
mov
lods
jns
repnz
add
ficompl
clc
xchg
cld
dec
jbe
sbb
clc
mov
clc
sub
clc
mov
clc
pop
lods
lods
jl
add
fmulp
daa
clc
xlat
dec
sub
ds
loope
inc
add
sub
ja
rolb
push
lahf
cmp
int3
leave
cvtps2pi
test
in
fbld
faddl
add
pop
lea
clc
sbb
xlat
jge
pushf
cmp
in
ret
fists
clc
push
arpl
add
mov
inc
add
icebp
pop
dec
jecxz
push
ret
add
jg
clc
sub
push
xchg
push
add
gs
cmp
fwait
sar
mov
lods
push
lret
cmp
push
lods
out
pop
sub
add
push
pushf
xor
add
mov
adc
add
add
sub
rcrb
add
inc
add
jne
jl
es
pop
mov
fwait
repnz
icebp
xchg
push
sar
add
add
jmp
xor
add
add
add
add
mov
adc
add
xchg
in
gs
flds
lret
leave
xchg
push
iret
dec
sub
clc
sahf
inc
clc
mov
clc
mov
jnp
jl
mov
scas
mov
je
or
filds
add
add
mov
jne
clc
dec
sbb
clc
push
pop
adc
sbb
add
add
scas
fmulp
call
add
call
push
add
mov
add
inc
clc
jae
add
xchg
mov
add
cmp
into
adc
clc
xabort
xabort
add
out
je
clc
or
add
lret
jecxz
mov
clc
adc
add
dec
cltd
add
add
add
out
ljmp
sti
int3
mov
or
clc
sbb
adc
imul
xor
repnz
pusha
add
fists
add
jmp
add
dec
faddl
clc
add
add
pop
and
add
add
fisubs
es
je
mov
fiadds
enter
clc
out
add
mov
xor
add
clc
cltd
mov
out
arpl
add
push
clc
lods
add
add
sbb
and
add
jb
add
clc
mov
incl
add
add
pop
cmp
add
sbb
sbb
add
aas
cli
data16
push
cmp
mov
out
loop
dec
not
nop
cmp
add
add
dec
lcall
pop
cmp
push
add
xor
add
add
enter
add
or
clc
jae
add
clc
xchg
es
data16
mov
cltd
aaa
sbb
fs
bound
add
xor
in
cmp
add
add
add
fmulp
mov
stos
sbb
lahf
jp
dec
push
gs
inc
clc
loopne
cmpsl
clc
mov
cmp
ljmp
scas
rolb
jbe
fwait
cmpsb
clc
outsl
clc
push
aas
sar
clc
inc
clc
or
add
push
cltd
data16
pop
pop
pop
clc
test
addr16
pop
jno
add
cltd
sbb
mov
adc
sarl
scas
cld
mov
and
add
clc
push
clc
rcrb
and
mov
cmp
add
leave
push
mov
jmp
and
add
add
in
aas
jge
add
add
data16
jle
repnz
or
and
add
add
mov
clc
rcll
add
dec
cmp
add
or
cmp
nop
outsl
push
add
rol
clc
fstl
clc
js
sbb
adc
clc
clc
sti
pop
adc
pop
stos
mov
ret
add
inc
clc
pusha
add
rclb
sub
imul
add
add
clc
dec
jmp
pop
mov
scas
push
add
sbb
test
or
mov
dec
push
cmp
addr16
xchg
sar
ljmp
add
push
push
mov
clc
clc
ljmp
arpl
add
clc
cmp
mov
add
inc
clc
aad
pushf
jge
add
call
clc
mov
add
add
add
mov
aam
movsb
clc
nop
xor
add
imul
test
out
cmp
push
add
pop
clc
xor
add
loopne
mov
xchg
xchg
mov
mov
shrb
xchg
mov
aad
or
and
add
in
xor
add
pop
imul
adc
add
or
pop
cmp
clc
sub
clc
mov
push
add
lcall
mov
jo
add
das
jns
push
add
cwtl
and
add
fdivl
add
addr16
ret
clc
pop
ds
add
clc
push
sahf
std
or
in
xor
add
jbe
pop
popa
add
dec
cmp
dec
lret
add
adc
pop
add
add
xchg
bound
add
mov
pop
dec
cwtl
jecxz
jl
push
outsl
xor
add
insb
sub
imul
xor
add
fimull
add
add
mov
add
clc
adc
add
ljmp
add
push
add
inc
clc
test
pop
mov
inc
clc
scas
in
mov
xlat
imul
clc
fdivrl
loopne
bound
add
mov
clc
scas
adc
add
test
clc
arpl
add
mov
clc
sub
pop
adc
clc
push
clc
outsl
sar
clc
jg
sub
dec
jns
sub
daa
clc
mov
cmp
pop
out
push
add
mov
sub
mov
fwait
jp
fcomp
into
push
je
lret
data16
mov
add
jb
add
negl
adc
add
pop
es
push
add
clc
adc
push
fnsave
add
pop
add
add
cmp
add
push
pop
fstl
add
das
inc
add
dec
sbb
clc
js
inc
clc
mov
mov
add
add
test
clc
dec
popa
add
test
clc
push
test
pop
xbegin
int3
xchg
shll
mov
in
sahf
push
jg
mov
add
cmpsl
clc
mov
dec
dec
jl
pushf
int3
dec
leave
lods
cmc
jns
add
jl
dec
fstps
int3
enter
clc
outsb
mov
clc
out
jo
add
movsl
clc
sub
arpl
add
inc
add
iret
test
std
test
je
add
movsb
clc
mov
add
dec
cli
in
adc
add
xchg
in
cwtl
mov
push
add
movsb
clc
std
insl
repz
pop
loopne
xchg
sbb
clc
fimuls
push
add
hlt
and
add
clc
xchg
cmp
sar
add
push
test
inc
clc
in
stos
jg
clc
scas
test
clc
sbb
clc
push
add
ds
mov
add
dec
out
aam
clc
add
add
add
shl
add
add
mov
add
imul
fsubp
clc
mov
cmp
push
mov
je
add
or
sarb
mov
clc
and
add
add
push
clc
out
push
add
cmpsb
clc
xchg
dec
nop
out
mov
jmp
add
sbb
sbb
add
dec
fsubs
add
inc
add
mov
xchg
push
add
add
add
mov
data16
or
xchg
frstor
sub
cwtl
xor
add
add
add
es
imul
bound
add
clc
scas
test
add
mov
push
add
test
sbb
pop
call
add
mov
pop
mov
cmp
adc
out
cmp
or
push
xchg
aas
pop
loopne
loope
sbb
clc
mov
popa
add
and
jg
fldt
jl
clc
or
pop
sbb
add
xchg
inc
add
jbe
in
mov
aas
mov
int
sbb
clc
adc
add
add
add
mov
mov
clc
adc
fstpt
mov
clc
popf
insl
add
add
mov
sub
and
add
mov
add
dec
mov
add
push
add
mov
pop
cltd
aam
mov
scas
xchg
and
add
clc
loop
sub
clc
xor
add
data16
xchg
mov
jmp
cwtl
mov
sub
mov
pop
mov
mov
push
clc
jle
add
sbb
clc
data16
call
mov
js
mov
lock
add
pop
lahf
clc
shrb
sub
negl
add
xchg
xchg
pop
stc
in
fldcw
add
xchg
rclb
and
add
add
pop
sub
xor
add
add
out
std
inc
add
adc
add
hlt
outsb
and
add
clc
gs
jle
add
cmp
add
mov
clc
test
push
clc
or
mov
fnstcw
add
aad
adc
add
icebp
ret
pop
inc
add
mov
add
fldt
clc
dec
xor
add
add
icebp
add
add
paddusb
push
add
fstl
add
add
inc
add
out
ret
clc
bound
add
clc
dec
inc
clc
bnd
clc
enter
add
or
cmpsl
clc
mov
in
repz
xor
mov
add
xor
add
add
clc
sahf
xchg
das
mov
adc
add
cltd
xor
add
testb
sub
and
add
clc
jle
clc
mov
fwait
cmp
out
mov
xabort
add
ds
je
or
ds
inc
clc
in
cwtl
pop
fs
cmp
or
clc
sub
or
rcrl
bndldx
add
add
ljmp
add
sbb
clc
jnp
add
add
jg
clc
mov
xor
add
clc
xor
clc
sub
inc
add
xchg
movsb
clc
and
clc
push
add
pop
loope
out
mov
jmp
clc
sbb
imul
cmp
es
or
jmp
xchg
adc
jnp
jg
xchg
xor
stos
sub
lcall
enter
jmp
mov
add
xor
add
dec
data16
stos
mov
xbegin
hlt
fs
sub
add
lock
push
clc
dec
aaa
mov
ja
add
pop
cmp
movsb
clc
mov
notb
add
mov
add
lahf
mov
in
push
add
mov
push
clc
push
divl
mov
clc
jno
add
and
add
clc
mov
clc
push
push
adc
add
clc
fadd
clc
aaa
jl
add
sar
clc
lcall
or
add
add
dec
push
lcall
addr16
xor
add
add
imulb
data16
repnz
out
jmp
cltd
nop
mov
mov
add
add
mov
jns
add
aas
sar
clc
sbb
add
sti
icebp
xbegin
jmp
xchg
mov
mov
add
adc
add
clc
cmp
mov
clc
test
ja
add
sarb
lock
inc
add
cmp
add
outsb
jnp
movsl
clc
nop
jp
pop
das
xor
inc
add
test
jb
add
fs
pusha
add
xchg
xchg
imul
cmp
pop
imul
test
jle
mov
es
sbb
shr
inc
clc
arpl
add
adc
add
clc
sahf
sub
inc
add
shlb
add
data16
daa
clc
bound
add
clc
in
gs
mov
clc
xor
clc
and
add
mov
add
lock
clc
push
dec
push
pop
decl
jbe
clc
cmpsl
clc
cmpsb
clc
push
rcll
add
imul
clc
mov
add
add
add
inc
add
inc
add
popf
xchg
in
mov
fmulp
adc
add
enter
cmp
sbb
jno
add
fs
lret
fnstenv
add
cmp
mov
add
add
gs
dec
xor
add
clc
std
inc
add
testb
add
in
aad
jbe
clc
xchg
xor
sar
icebp
xor
add
in
lret
in
es
cmp
add
add
clc
inc
clc
popa
add
scas
sbb
pop
inc
clc
jno
add
mov
mov
add
data16
xchg
or
add
add
sub
add
clc
jb
add
aam
clc
and
add
clc
test
jl
xor
add
add
inc
add
call
pop
stos
inc
add
cmp
fwait
xchg
rcl
mov
sarb
mov
xor
or
add
add
and
in
mov
clc
packuswb
jae
add
clc
pushf
push
mov
pop
pop
ffreep
clc
adc
clc
insl
mov
jb
add
add
jb
add
mov
fbstp
icebp
push
sbb
or
clc
movsl
clc
inc
clc
rolb
clc
ja
cmpsb
clc
adc
add
mov
fisubrs
cmpsb
clc
imul
stos
dec
inc
clc
inc
add
push
jle
cmp
inc
add
mov
xchg
push
push
clc
outsl
movsb
clc
mov
add
add
iret
mov
clc
negb
mov
clc
xchg
xabort
dec
xchg
movsb
clc
sub
xlat
xchg
add
push
xor
add
add
add
es
xor
add
jl
clc
xchg
xor
add
leave
mov
fcmovb
clc
and
add
add
inc
add
in
and
add
clc
nop
mov
add
xor
add
call
loop
fisubl
add
fwait
mov
loopne
push
add
inc
clc
adc
lock
pop
fs
xlat
or
pushf
mov
xor
add
clc
shrb
loopne
pop
mov
clc
arpl
add
incb
adc
cmp
dec
enter
or
insl
inc
clc
inc
add
push
add
jne
clc
test
or
jmp
add
add
adc
add
dec
loopne
inc
clc
pop
clc
inc
add
daa
clc
dec
dec
pushf
aas
movsl
clc
fwait
scas
mov
and
add
push
add
loope
adc
clc
int3
xor
add
mov
clc
call
clc
xchg
mov
push
call
add
mov
add
test
add
cmp
mov
jnp
jbe
data16
lods
jae
add
push
add
and
add
jns
add
ss
jno
add
clc
push
call
add
add
add
insl
cmp
test
xor
add
add
jge
add
add
dec
mov
clc
mov
push
clc
hlt
shr
stc
repz
add
push
mov
fwait
pushf
lea
or
fs
testb
sub
jge
lods
xor
add
push
add
dec
push
add
xchg
mov
sbb
loop
loopne
int
testb
add
add
in
mov
xor
add
clc
leave
mov
bound
add
loopne
pop
cmp
mov
add
mov
add
and
add
fsubl
mov
add
icebp
sar
sub
adc
pop
cmp
add
stos
push
insb
repz
or
pusha
add
ljmp
xor
add
jb
add
enter
out
cmp
or
pop
clc
cli
cld
mov
test
add
add
bound
add
clc
and
add
ds
pop
adc
add
gs
push
add
testb
dec
dec
pop
out
leave
push
mul
clc
es
sbb
clc
pop
mov
imul
cmp
clc
ljmp
js
clc
jns
mov
out
add
filds
xchg
mov
scas
in
icebp
or
dec
out
lahf
sub
adc
fsubrs
fwait
inc
clc
lret
adc
add
or
daa
clc
gs
std
sbb
mov
add
add
dec
inc
clc
cmpsl
clc
push
add
xlat
cmp
xor
clc
jnp
mov
mov
clc
sbb
outsl
push
add
add
or
clc
sbb
mov
sub
clc
xchg
mov
add
jmp
repz
clc
dec
jae
add
clc
jbe
inc
add
mov
clc
sbb
add
cmp
repnz
add
add
add
sbb
add
dec
call
clc
xchg
jp
add
add
in
mov
cs
add
or
inc
add
inc
add
pop
push
add
xchg
leave
ret
clc
cmp
clc
push
fsubl
scas
cmp
std
fildl
clc
xor
add
add
xchg
neg
out
out
sub
pop
xchg
mov
add
aas
xor
add
out
jne
xchg
iret
or
add
add
ja
add
pop
scas
outsl
mov
add
mov
inc
clc
sar
sti
sbb
fwait
adc
add
arpl
add
mov
add
clc
cmp
pushf
neg
add
inc
clc
cmp
clc
pop
test
xor
add
insl
sti
adc
add
sbb
add
pop
iret
fcoms
add
mov
mov
clc
adc
add
clc
xor
add
clc
loop
or
jae
add
or
pop
stc
add
mov
add
push
ret
inc
add
cmp
clc
fs
cltd
dec
add
std
in
pop
mulb
vandnps
add
inc
add
mov
in
rorl
clc
je
fsubrs
and
add
data16
push
push
ja
clc
push
add
cmp
sar
jp
clc
mov
out
fucomp
scas
sub
clc
adc
add
cmpsb
clc
add
add
clc
cmp
clc
xor
hlt
or
clc
xchg
sub
mov
and
add
add
cltd
xchg
out
out
popl
arpl
add
clc
popa
add
imul
clc
ljmp
inc
clc
fs
gs
cmpsb
clc
dec
in
out
ss
jb
add
clc
call
dec
fmuls
jne
add
add
arpl
add
add
jnp
cs
add
pop
fwait
insl
fs
cli
out
es
jbe
cmp
dec
jne
jne
adc
add
cld
mov
cmp
sbb
xbegin
movsb
clc
pop
scas
pop
push
and
inc
clc
sar
add
loope
cltd
in
pop
in
leave
clc
js
add
test
inc
add
add
inc
clc
mulb
or
and
add
add
add
mov
pop
add
add
mov
clc
and
add
jle
mov
clc
pop
lret
hlt
cmp
add
xchg
jecxz
xor
in
test
clc
cld
in
icebp
movsb
clc
xchg
xchg
xor
xor
add
clc
inc
clc
jecxz
mov
add
loop
pop
hlt
jno
add
dec
or
sahf
loopne
dec
push
xor
add
clc
sar
add
loopne
xchg
mov
or
clc
sub
mov
cmc
enter
fstpl
clc
sub
gs
mov
jle
sub
xchg
sarl
add
clc
mov
cmp
dec
mov
stos
je
out
mov
clc
movsb
clc
aam
add
daa
clc
pushl
add
add
faddl
add
push
clc
mov
xor
add
cmp
add
cld
pop
mov
xchg
mov
clc
mov
sbb
push
call
clc
sub
lahf
inc
add
rol
clc
ja
clc
out
sbb
mov
add
jnp
in
add
add
pop
nop
negl
add
mov
add
xor
push
mov
in
pop
xor
push
mov
xor
add
clc
mov
add
dec
push
xchg
gs
jecxz
pop
mov
scas
dec
and
add
mov
add
sbb
inc
add
aam
add
roll
clc
scas
testl
mov
sbb
add
fsubrs
rclb
add
incb
and
add
add
pop
xchg
aas
sbb
addr16
mov
add
in
and
add
int
clc
jge
cld
lahf
jecxz
mov
add
jb
add
clc
push
add
jmp
jo
add
es
jo
add
add
cmp
sbb
mov
fs
stc
fadds
clc
push
clc
mov
loop
cmp
xchg
sbb
mov
clc
xor
stc
idivb
std
and
add
and
add
sbb
clc
xchg
mov
fisubl
push
add
scas
pop
pushf
dec
cmp
imul
mov
clc
std
jecxz
movsl
clc
inc
clc
xchg
scas
adc
add
add
add
add
roll
add
add
cmp
sub
das
push
mov
clc
push
add
inc
clc
repnz
fisttpll
dec
adc
add
xchg
add
js
gs
or
cmpsl
clc
and
add
add
rcl
or
inc
clc
out
lea
jl
push
stos
popf
mov
add
sbb
mov
mov
cwtl
cmp
dec
in
push
add
int3
test
push
ret
clc
mov
add
push
add
imul
add
add
xlat
dec
fwait
popa
add
jmp
sar
clc
xor
add
add
clc
xor
add
cmp
popa
add
inc
clc
jecxz
fcmovne
nop
dec
xor
add
sub
shrb
out
mov
sub
clc
gs
and
add
out
mov
insl
leave
bound
add
clc
sub
clc
inc
add
out
mov
push
add
loop
bound
add
mov
clc
push
and
jmp
add
pop
xabort
clc
hlt
enter
fstl
fabs
clc
outsl
and
pop
je
clc
mov
xor
cwtl
popa
add
fcomp
mov
add
mov
jp
xbegin
aas
xor
add
add
pushf
call
jp
arpl
add
jmp
pop
insb
pop
dec
mov
clc
jmp
dec
adc
add
add
dec
dec
dec
out
into
testb
add
clc
test
fldcw
clc
in
test
cmp
jns
fbstp
loope
push
xor
add
in
ret
clc
mov
push
add
xchg
js
addr16
and
add
loope
stos
jnp
xbegin
aam
jno
add
dec
cmp
mov
add
mov
jg
bound
add
test
vpmacsdqh
adc
add
movsb
clc
cmp
add
hlt
test
out
jnp
mov
xor
add
xchg
insb
cmp
pop
clc
and
add
repz
pop
jnp
lret
mov
jae
add
add
xchg
ret
clc
lcall
sub
scas
nop
bound
add
sahf
pop
clc
notl
adc
add
pop
in
or
clc
test
hlt
std
int
add
es
cmp
cltd
mov
cmp
add
loope
adc
popa
add
pop
out
push
xchg
push
test
fmull
cmp
movsl
clc
xor
add
add
jg
mov
add
inc
add
fisttps
pop
aas
imul
mov
iret
mov
pop
add
add
mov
pop
xbegin
dec
shl
inc
add
xor
add
xor
add
inc
add
shlb
add
push
scas
pop
mov
int
xchg
mov
add
pop
sub
add
cmc
loope
nop
xchg
cli
jmp
and
pop
mov
xchg
dec
clc
js
clc
sub
clc
mov
add
push
mov
add
cli
mov
add
jno
add
clc
pop
clc
sbb
add
add
aam
clc
xor
add
and
clc
add
add
clc
data16
sti
mov
ret
sbb
aaa
int
add
fwait
mov
clc
test
pop
sbb
clc
cwtl
rdpmc
add
lock
add
clc
cwtl
xor
adc
add
add
gs
push
test
jecxz
mov
push
clc
xlat
ja
inc
clc
sub
add
mov
clc
lock
sbb
stos
sub
clc
or
add
add
add
push
and
add
add
clc
push
dec
out
adc
inc
add
mov
jo
add
push
pop
mov
fucomi
rol
clc
cwtl
xor
add
push
clc
fs
das
dec
mov
cmp
xchg
adc
icebp
fcompl
xchg
cmp
js
mov
clc
or
inc
clc
push
test
adc
lods
mov
mov
pop
pop
fistps
push
repz
testl
push
cmpsl
clc
mov
daa
clc
loopne
mov
notl
add
push
add
fstps
and
sar
call
popf
sar
add
icebp
push
clc
enter
add
add
add
addr16
jbe
in
repz
add
xbegin
clc
mov
clc
cmp
mov
leave
insl
sbb
imul
adc
lods
and
mov
jmp
and
add
punpckhbw
sbb
clc
mov
add
mov
cmp
add
jmp
cmp
loope
aaa
clc
xchg
nop
mov
add
std
data16
pop
or
clc
inc
add
pop
pop
pop
fldl
add
xbegin
clc
lahf
das
jle
add
lret
mov
pop
sub
add
sbb
push
add
cmp
inc
clc
fadds
add
pop
push
push
add
inc
clc
mov
clc
xbegin
icebp
out
cli
out
add
divb
add
add
add
and
add
dec
rorl
clc
in
test
popf
mov
clc
dec
mov
fnstsw
jge
add
add
clc
mov
push
add
addr16
iret
stos
sub
or
mov
cmp
mov
pop
ret
clc
pusha
add
pop
repnz
adc
add
in
inc
add
out
and
sahf
iret
test
test
pop
test
out
loopne
jbe
insb
loope
and
add
repnz
pop
pop
paddb
cmp
add
inc
clc
cmp
xchg
mov
shlb
add
outsl
and
add
cmp
clc
pop
xchg
es
cltd
outsb
xabort
jge
clc
mov
and
add
clc
xchg
imul
add
cmc
cmc
fs
ja
cmp
clc
lock
xchg
loop
xchg
cvttps2pi
jmp
clc
clc
xchg
fidivl
add
jb
add
add
gs
clc
mov
cs
clc
push
add
adc
add
add
lret
inc
add
mov
add
mov
clc
lret
or
push
push
add
cli
dec
out
mov
xlat
scas
aad
mov
popf
xchg
push
add
sar
lret
pusha
add
ror
mov
clc
sub
jnp
inc
clc
mov
dec
inc
add
adc
add
add
cld
sahf
cld
and
add
clc
cmpsb
clc
ret
sar
lea
jns
scas
sub
jbe
add
xor
add
add
sarb
xchg
ret
daa
clc
in
push
fnstcw
int3
adc
add
add
sbb
jp
clc
pop
sahf
mov
ljmp
pop
and
add
inc
add
inc
add
sub
shrb
cmp
add
add
add
arpl
add
jge
add
out
data16
cli
int3
mov
pusha
add
ret
clc
pop
iret
data16
jecxz
div
jnp
jnp
add
dec
dec
arpl
add
clc
add
cmp
adc
add
push
add
rclb
add
add
jl
mov
sub
or
xlat
shll
and
add
gs
or
adc
jge
lahf
ljmp
out
cld
gs
cs
add
lahf
in
cld
icebp
mov
aaa
or
jnp
iret
and
add
sub
dec
sti
jp
scas
sar
imul
add
inc
clc
icebp
loope
dec
sbb
lea
gs
push
leave
insb
xchg
rcl
incl
mov
or
push
add
cmp
mov
add
sub
xchg
push
cmc
jae
add
outsl
mov
mov
jo
add
mov
hlt
enter
add
gs
pop
std
je
fst
mov
lcall
clc
cwtl
push
repz
add
add
daa
clc
test
out
push
cwtl
sahf
mov
mov
mov
clc
push
add
cmpsl
clc
mov
sar
adc
add
add
add
pop
mov
sub
mov
cmp
js
clc
sbb
jmp
cmp
clc
daa
clc
cmp
clc
jmp
dec
in
add
push
cmp
inc
clc
and
add
clc
xabort
jo
add
pop
pop
push
mov
adc
or
sub
clc
dec
adc
add
add
hlt
adc
cmpsb
clc
aaa
dec
stos
inc
add
into
mov
xchg
sbb
cmp
adc
lret
cmp
clc
add
add
add
push
add
stos
sub
in
cmp
fcmovnu
lock
xor
pop
add
add
jns
add
test
in
inc
add
mov
add
push
add
lock
add
cmpsl
clc
xor
add
outsb
stos
out
icebp
push
gs
ss
shrl
aad
outsb
call
clc
jb
add
sub
imul
cmp
inc
add
sahf
je
clc
data16
scas
faddl
clc
test
out
or
bound
add
sbb
fldl
push
push
je
clc
pop
faddp
clc
fidivrl
je
clc
jnp
iret
push
clc
adc
add
add
clc
ret
inc
add
sub
sbb
clc
hlt
mov
add
mov
ds
clc
icebp
fwait
inc
add
lock
cltd
sbb
clc
incl
add
inc
add
mov
popf
dec
xor
add
or
add
outsl
inc
add
jbe
clc
test
cmp
push
clc
inc
clc
xchg
adc
add
add
adc
mov
lahf
aam
mov
clc
push
add
add
add
shr
adc
clc
cmp
sar
clc
sub
mov
addr16
lods
ljmp
add
pushf
adc
clc
in
mov
xor
add
insb
rolb
stos
pop
lret
mov
inc
clc
push
add
xchg
test
mov
cmp
mov
add
pop
or
pop
ret
clc
and
add
clc
mov
pop
bound
add
mov
dec
xchg
pop
pop
push
data16
and
add
push
clc
scas
jbe
sub
add
addr16
xchg
pusha
add
mov
add
add
or
add
jbe
jnp
clc
cwtl
dec
mov
ret
clc
or
std
add
fwait
shll
jb
add
in
scas
mov
add
cmp
and
or
add
mov
cmp
push
pusha
add
mov
push
clc
mov
scas
dec
push
add
pop
and
inc
clc
dec
sub
clc
imul
sub
data16
adc
add
js
mov
dec
mov
add
das
ja
xchg
mov
add
jns
push
sbb
cli
push
sbb
pop
jp
loop
xlat
mov
clc
out
into
push
clc
and
add
ja
push
jecxz
cmp
xlat
popa
add
cmp
sti
lods
adc
add
inc
clc
jmp
adc
add
or
add
add
adc
add
jns
pop
sub
add
inc
clc
push
add
xchg
aas
mov
int3
cmp
gs
xchg
sbb
jne
sbb
clc
xor
add
jmp
out
out
mov
or
sbb
add
add
rolb
add
clc
loope
std
cmp
add
push
xbegin
add
sub
xchg
mov
cmp
add
push
add
dec
aam
add
add
lcall
add
dec
ficoml
jno
add
clc
jecxz
mov
aam
repz
add
dec
or
clc
cmp
add
out
movsb
clc
aam
add
test
lret
lret
loopne
add
add
inc
add
cwtl
mov
sbb
in
cmp
adc
clc
pop
mov
ja
clc
lret
scas
or
clc
mov
addr16
in
ljmp
into
decl
call
add
scas
sub
cmp
sbb
clc
jne
ret
clc
mov
mov
mov
mov
fnstsw
clc
jnp
clc
movsl
clc
inc
clc
lret
xchg
and
add
add
add
inc
add
fs
loope
lret
addr16
adc
add
sbb
xor
add
clc
and
sar
clc
mov
stc
movsl
clc
shl
fdivrs
add
outsl
insl
enter
mov
jnp
jbe
xchg
or
enter
mov
dec
es
sub
clc
mov
xchg
dec
out
adc
add
xor
add
pop
inc
add
sub
dec
cs
loope
xchg
stos
xchg
insl
pop
pop
inc
clc
repnz
mov
mov
clc
stc
mov
xchg
mov
add
sbb
mov
add
sbb
inc
add
add
cmp
xor
add
pop
push
add
xor
add
mov
push
mov
clc
iret
add
add
mov
loope
jecxz
or
dec
cmp
imull
es
sub
add
push
jge
add
push
add
and
add
and
add
lret
test
xchg
out
cmp
jecxz
or
add
add
jp
stos
cmp
mov
add
xchg
test
outsb
kmovw
insb
adc
add
sbb
out
scas
mov
jmp
push
add
sbb
bound
add
pop
lret
sbb
data16
xor
and
add
lret
xchg
push
add
add
clc
fisttpl
clc
int3
sahf
xchg
sbb
xchg
or
pop
call
jnp
add
xor
lret
aad
add
sar
jb
add
sub
clc
ret
clc
mov
test
clc
mov
pop
or
clc
fdivrp
push
clc
and
add
mov
clc
sub
clc
imul
push
jmp
clc
clc
or
clc
lret
clc
popf
call
add
clc
scas
mov
cmp
clc
mov
adc
add
add
add
clc
in
jne
push
arpl
add
clc
decb
clc
push
add
lret
and
cmp
fcom
sti
push
add
in
sbb
clc
nop
fld
clc
adc
test
add
sbb
clc
xchg
das
out
jno
add
aas
mov
clc
mov
std
scas
push
adc
add
add
aas
mov
clc
or
fdivrl
add
dec
in
mov
add
das
and
add
pop
lods
cwtl
cmp
mov
add
inc
add
mov
add
jb
add
add
lret
out
jecxz
mov
add
mov
stos
adc
xchg
stos
jno
add
add
lods
sar
bswap
or
mov
pop
pop
es
jp
push
sub
arpl
add
clc
lcall
lods
imul
clc
xchg
insb
ret
jle
jl
cltd
add
add
jns
clc
int3
int
adc
sub
add
addr16
das
daa
clc
sar
clc
pop
mov
xor
add
clc
xchg
add
fstpl
insb
aam
or
cmp
clc
icebp
mov
pop
sbb
inc
clc
pop
mov
add
clc
xchg
inc
add
sub
push
in
aaa
mov
pop
sbb
or
adc
add
add
scas
mov
fldl
push
es
es
in
loop
push
mov
xbegin
add
test
daa
clc
mov
fidivrl
add
sub
add
and
add
clc
sub
xor
add
add
or
clc
and
add
add
sbb
lods
sub
inc
clc
xabort
add
cmp
cwtl
dec
jp
leave
sub
dec
adc
clc
xor
loope
addr16
cmp
pop
clc
mov
jnp
add
jg
adc
add
push
push
clc
jno
add
or
add
add
jnp
mov
cld
mov
clc
push
cltd
push
clc
scas
hlt
cld
or
add
inc
clc
jmp
movsl
clc
lods
xchg
pop
mov
push
ret
test
sbb
imul
int3
hlt
out
arpl
add
add
push
stos
lods
lods
adc
clc
aas
add
add
sti
sar
roll
clc
mov
aaa
xor
add
jecxz
leave
mov
cmp
int
add
pop
clc
sbb
clc
leave
cmp
add
push
jge
add
cli
out
jl
mov
add
fidivl
add
test
clc
stos
inc
add
leave
pop
cld
dec
xlat
sahf
rcrl
ficompl
jnp
cmpsb
clc
sbb
clc
mov
cmp
add
fs
dec
icebp
scas
xchg
xchg
je
movsl
clc
and
add
mov
fimull
clc
push
add
cwtl
cmp
clc
xor
add
jmp
push
clc
add
add
pusha
add
fisubs
cmpsl
clc
pcmpeqd
add
movsl
clc
leave
cmp
clc
test
jbe
mov
add
clc
dec
lcall
clc
mov
iret
int3
push
add
sti
into
into
inc
clc
pop
push
add
xchg
mov
add
je
cmpsl
clc
pop
cmp
clc
sub
fucomip
jp,pt
add
bound
add
sub
clc
fldt
add
add
add
das
cmp
add
ja
add
dec
mov
enter
clc
leave
xchg
xchg
sbb
cmp
add
clc
mov
and
push
mov
jns
shll
scas
pop
xchg
xchg
mov
xchg
mov
scas
dec
vdivps
or
lods
stc
sar
mov
jg
clc
dec
fstpl
test
inc
add
inc
clc
test
shll
mov
clc
cmp
mov
add
add
int
in
call
data16
adc
add
add
add
sar
mov
xor
add
mov
fld
clc
mov
push
sti
fcmovnu
aas
dec
xchg
cmpsl
clc
in
inc
clc
sub
addr16
cmp
add
add
add
clc
adc
add
fisubrl
add
jno
add
add
pop
flds
add
mov
fidivrl
jmp
in
mov
clc
and
push
int
aaa
mov
fsubrs
adc
add
clc
call
adc
add
clc
pushf
xabort
cmp
clc
stc
xor
clc
xchg
rorb
add
fmulp
cli
pop
clc
lea
mov
dec
lahf
out
xchg
or
cmp
pop
clc
and
add
stos
xchg
sbb
pushf
jmp
clc
sub
clc
xchg
scas
pop
cmpsb
clc
push
push
adc
add
test
adc
add
clc
push
pop
mov
sbb
loope
loopne
adc
clc
mull
clc
xor
fldln2
xor
or
aas
dec
int3
dec
jns
dec
lahf
mov
xor
add
add
push
lea
lods
inc
clc
nop
in
cvttps2pi
add
add
or
add
sahf
push
add
stos
cmp
clc
ret
clc
jmp
push
add
in
pop
clc
scas
je
push
dec
xabort
lcall
xchg
xor
clc
inc
add
mov
inc
clc
call
mov
sahf
sar
clc
jne
add
mov
push
clc
pusha
add
mov
int3
sbb
ror
push
add
pop
pop
clc
clc
jecxz
ret
mov
push
clc
and
add
add
dec
sbb
sub
add
js
cli
pop
cmpsl
clc
lods
mov
outsb
jno
add
add
aas
je
clc
cmc
call
pop
fs
inc
clc
sub
clc
mov
insl
mov
lea
dec
xabort
push
add
movsb
clc
data16
xchg
jl
clc
xor
add
loop
jns
adc
add
pop
push
cwtl
cmp
add
cltd
mov
rcl
cli
push
add
mov
add
dec
dec
into
fcomps
fsubl
jmp
and
add
clc
vmovups
add
clc
repz
add
nop
int
add
loopne
pop
pop
xlat
or
xor
add
sbb
pop
push
inc
clc
cmp
shlb
add
cmp
pop
push
cli
dec
fs
lods
adc
clc
cmp
clc
mov
test
xor
add
clc
inc
clc
enter
lock
push
add
pop
jb
add
cmp
add
das
pop
mov
jb
add
out
bound
add
mov
repnz
jg
clc
fisttpl
lret
jmp
clc
fs
xor
add
bound
add
jnp
adc
push
clc
cwtl
fucomip
mov
repnz
clc
push
push
fwait
jmp
dec
addb
and
add
dec
aas
pusha
add
cmp
cmp
int3
insb
pop
popf
xchg
pop
cmp
add
or
add
imul
or
add
add
add
inc
add
xchg
xchg
ret
lahf
cmp
add
mov
cmp
pop
sar
add
push
add
dec
pop
ja
add
dec
sub
push
mov
std
lcall
sahf
push
or
or
enter
gs
rcl
inc
clc
ljmp
add
aam
and
add
push
ret
sub
or
and
add
push
clc
cli
testb
and
add
xchg
popa
add
sub
movsl
clc
hlt
dec
cwtl
call
fstpl
lock
mov
cs
clc
jecxz
fisttps
inc
add
sbb
clc
xor
add
add
push
dec
fs
pop
xbegin
imul
jl
ja
clc
inc
clc
stc
adc
add
add
clc
cld
mov
adc
add
add
mov
js
jecxz
mov
cs
add
dec
insb
jg
clc
fidivrs
pusha
add
iret
rcll
inc
add
lcall
loope
test
clc
stos
dec
out
xlat
hlt
icebp
xbegin
add
add
mov
xabort
hlt
fsubrs
stc
es
hlt
and
add
mov
add
sahf
cmp
aas
out
lods
mov
jge
add
xor
add
test
push
dec
push
add
cmp
pop
idivb
add
mov
sbb
push
xchg
out
or
sub
clc
cmpsb
clc
lret
xchg
add
add
add
inc
add
mov
fwait
test
aas
xabort
clc
aad
clc
pop
pop
ret
clc
inc
add
outsl
xchg
std
ja
clc
movsl
clc
pop
xbegin
add
xor
add
add
xchg
push
add
jmp
loopne
addr16
outsb
out
jbe
out
mov
dec
mov
fst
xor
add
pop
add
div
fwait
jmp
pop
das
test
xchg
xor
insb
push
clc
add
add
add
idivl
push
add
cmp
daa
clc
jbe
testl
clc
cmp
add
out
js
xchg
and
cmp
jle
fwait
cld
fwait
jmp
mov
add
add
add
mov
data16
jne
mov
cmp
sti
fwait
jmp
or
add
inc
add
pop
mov
dec
adc
add
add
add
clc
adc
add
clc
jne
jl
xchg
sub
pop
repz
push
sub
add
pop
daa
clc
aad
das
mov
jbe
inc
add
sub
clc
jno
add
repnz
add
add
lret
lcall
jmp
insb
inc
clc
mov
add
aas
jno
add
scas
or
push
xor
add
adc
add
clc
jg
fdivrs
mov
inc
add
fs
jl
inc
clc
cmp
add
push
fisttpl
jb
add
dec
xor
add
add
sbb
add
fs
jge
jae
add
jle
clc
iret
xor
clc
push
add
rcrb
clc
cli
ljmp
add
or
lods
daa
clc
js
fsub
clc
cmp
add
xlat
mov
mov
add
add
adc
add
test
pop
add
fwait
jmp
pop
into
outsl
mov
outsl
cmp
sub
mov
add
jmp
pop
mov
lods
jnp
xchg
jg
int3
xor
add
xchg
push
push
sbb
xor
push
and
add
dec
push
aaa
or
sub
sbb
insb
shlb
add
shll
or
sub
pop
cmp
jbe
add
adc
add
add
add
and
add
add
gs
dec
pop
daa
clc
jbe
clc
cmc
fcomi
ret
clc
xor
add
rclb
add
loopne
dec
jle
es
pop
shl
clc
into
pop
xor
add
clc
pop
fisubrs
clc
ds
clc
mov
pop
jle
mov
cmp
add
push
add
push
add
jno
add
add
jns
clc
add
add
repz
shlb
lock
out
loopne
ljmp
ja
add
into
pop
shll
clc
sbb
clc
js
mov
clc
int
add
push
add
sub
clc
adc
add
jno
add
push
ret
sbb
mov
add
sarb
pop
cwtl
cmpsb
clc
dec
gs
push
xchg
and
add
into
into
and
add
pop
jmp
add
clc
mov
xchg
cmp
ret
clc
add
add
jmp
add
in
dec
xchg
pop
sbb
into
dec
rcl
or
ret
clc
aaa
out
pop
adc
add
clc
cmp
xbegin
add
xchg
add
add
add
cmp
lcall
cmp
add
add
clc
repz
cmc
test
fwait
sub
test
xchg
add
in
add
add
add
inc
clc
cmp
xchg
adc
add
xchg
sub
clc
cmp
add
cmp
mov
clc
jns
sub
clc
push
cmp
jnp
mov
mov
movsb
clc
fimuls
add
cld
jo
add
add
mov
clc
add
add
pop
fwait
jmp
jge
jg
sub
add
testl
jmp
jnp
dec
inc
clc
xabort
cmp
insl
mov
arpl
add
clc
negb
xor
clc
fdivl
add
je
aas
lods
out
jo
add
cmp
in
and
inc
add
aaa
jmp
xor
add
add
add
mov
addr16
or
fdivrl
out
push
clc
cmp
mov
clc
fldenv
popf
mov
add
add
jp
loop
jno
add
xchg
mov
add
and
add
add
add
add
sub
pop
jne
clc
imul
add
loope
jo
add
add
or
add
jbe
clc
scas
out
arpl
add
mov
dec
insb
lahf
dec
pop
inc
add
das
lods
push
add
repnz
add
add
add
jno
add
xchg
test
int3
dec
int
jp
data16
sub
jg
aad
clc
ret
clc
clc
std
gs
push
das
push
inc
add
sbb
sub
in
out
clc
xor
add
add
add
push
clc
add
aas
hlt
lcall
jo
add
add
call
clc
xchg
push
clc
es
pop
fdivrl
fst
mov
adc
add
push
jne
fwait
jmp
aad
clc
inc
clc
in
inc
clc
cmp
das
sbb
mov
lahf
sti
mov
mov
sbb
rolb
add
add
das
rcr
test
rcrb
pop
cld
push
ret
sub
sub
clc
in
sar
xor
cmp
clc
mov
add
adc
adc
aas
aad
mov
add
imul
cld
or
std
xchg
xchg
test
cmp
push
repnz
add
or
clc
hlt
int3
test
outsl
flds
test
mov
pop
push
and
jg
push
clc
push
add
dec
mov
add
or
xor
fwait
jmp
xchg
or
cmp
clc
addr16
test
push
clc
push
add
inc
clc
enter
clc
push
add
fisttpll
sar
inc
clc
out
lahf
insb
mov
add
xabort
mov
fwait
jmp
sub
insb
pop
cmp
clc
xchg
cmp
add
fwait
jmp
sahf
cmp
cmc
adc
add
call
jg
js
and
cld
push
ret
add
lods
jno
add
jnp
push
push
add
es
pop
xlat
jae
add
clc
cwtl
ss
clc
sbb
aam
xchg
add
jb
add
fdivl
add
mov
clc
dec
lea
into
add
add
add
icebp
repnz
add
add
add
mov
clc
hlt
xor
add
bound
add
jb
add
sar
clc
incl
repz
jmp
insb
add
add
cmp
clc
cmc
jbe,pt
push
das
xabort
lahf
adc
add
icebp
jl
mov
mov
jecxz
stos
inc
add
sub
fs
sti
xor
add
clc
out
fcomps
and
mov
xor
add
call
sub
cmp
add
clc
fsubrl
lock
clc
fs
and
add
push
cli
dec
dec
imul
clc
aam
add
add
jne
add
aas
shlb
push
add
mov
jle
test
add
jbe
cmp
mov
sti
sub
shll
iret
sahf
rclb
fwait
jmp
add
push
push
movsb
clc
lods
gs
iret
mov
xor
fwait
jmp
sub
xor
cltd
xchg
fnstsw
push
icebp
push
bound
add
jo
add
xabort
clc
or
add
es
pop
jns
out
das
lcall
add
dec
nop
sub
hlt
test
aam
in
inc
add
adc
and
add
add
mov
out
gs
or
clc
clc
xchg
or
aaa
xchg
fdivl
add
pop
out
shl
clc
repnz
add
fwait
jmp
sub
pop
cmp
clc
mov
clc
sub
jnp
clc
add
add
out
add
add
push
add
mov
add
clc
jo
add
dec
sbb
fwait
jmp
add
es
xlat
cld
and
add
add
outsl
mov
add
mov
jecxz
xchg
push
jbe
jns
cli
lock
repz
mov
addl
sub
fwait
daa
clc
mov
mov
stc
inc
clc
dec
in
test
clc
fidivl
clc
cld
dec
jae
add
aas
add
sub
xor
add
fsubrs
pop
add
add
add
add
pop
pop
xchg
mov
clc
test
mov
clc
inc
add
test
jg
out
xor
add
add
pushf
cmpsb
clc
pop
or
cmp
jmp
add
pop
pop
pop
mov
ja
sbb
add
addr16
lcall
mov
clc
pop
imul
and
add
gs
repz
xlat
rolb
cmp
lods
ljmp
sbb
lea
cld
push
ret
sub
sub
rclb
xor
add
add
add
ja
ljmp
push
add
xor
add
clc
jno
add
clc
lods
and
add
push
xchg
adc
add
mov
and
add
and
add
into
sub
inc
add
stc
lock
push
mov
fwait
jmp
scas
stc
movsb
clc
pusha
add
dec
pop
dec
lea
mov
fxch
repnz
loope
loope
push
add
and
add
imul
mov
xchg
pop
push
icebp
int3
arpl
add
add
clc
incl
jnp
add
or
jecxz
pop
movsl
clc
push
mov
add
add
sub
clc
jl
clc
fisubrl
gs
imul
xor
clc
out
jle
xabort
jb
add
sbb
mov
loopne
push
je
fwait
jmp
fmul
loop
incl
pop
and
jmp
inc
movsb
andb
jbe
in
push
mov
ret
outsl
cwtl
inc
add
cld
fs
divl
clc
push
adc
cmpl
fwait
jmp
add
jecxz
push
mov
fwait
jmp
sub
sub
clc
mov
cwtl
jnp
add
jno
imul
inc
clc
jno
add
add
test
arpl
add
clc
xchg
pavgw
in
fwait
sti
into
xchg
nop
push
add
sbb
sbb
or
clc
in
popl
add
pop
cmp
inc
clc
mov
mov
and
add
xchg
or
push
clc
cmp
mov
inc
clc
sub
xor
iret
cmp
adc
arpl
add
adc
add
fwait
jmp
jp
xor
clc
loop
push
jne
fwait
jmp
stos
fidivs
cld
inc
clc
lods
jp
push
jmp
clc
arpl
add
clc
cmpsb
clc
aas
xor
add
in
ret
clc
jns
int3
push
push
cld
push
ret
pop
adc
sub
add
or
jg
out
cmp
lods
cltd
adc
add
je
sub
add
cs
mov
mov
in
cmpsb
clc
add
add
xchg
insb
rclb
push
add
cmc
sbb
clc
out
dec
pop
adc
add
sbb
dec
dec
cmpsl
clc
adc
add
pop
push
ja
cmp
xlat
dec
pop
data16
pusha
add
imul
inc
add
repz
add
add
fiadds
add
mov
imull
add
inc
add
xchg
int3
xchg
xlat
int
add
pop
ds
add
cmp
clc
mov
cmp
mov
add
jae
add
in
out
xchg
pop
daa
clc
ret
clc
into
out
rclb
add
std
push
stc
mov
psubsw
cmpsb
clc
jmp
int
movsl
clc
fidivs
outsl
sti
cmpsb
clc
lock
add
mov
movsl
clc
xchg
inc
add
fisttpl
pop
jge
clc
pop
in
add
add
add
jecxz
dec
aad
clc
cmp
add
add
cltd
decb
push
add
add
sbb
or
inc
add
add
add
hlt
add
cmpsb
clc
aaa
mull
loop
bound
add
xor
cmp
clc
jnp
add
push
jmp
clc
pop
jo
add
insl
mov
clc
push
hlt
out
pushf
push
pop
mov
add
add
insl
mov
jmp
inc
sbb
ja
adc
add
sub
cmpsl
clc
lcall
pop
inc
clc
movsb
clc
pushf
das
mov
leave
dec
and
add
enter
jg
lea
add
and
add
add
add
add
adc
add
add
xor
add
xlat
pop
clc
fisttps
cli
mov
rolb
add
aad
and
add
adc
add
clc
call
lret
add
cmp
push
and
add
add
or
fbld
pusha
add
mov
clc
jg
imul
fwait
jmp
pop
jge
divb
add
add
xchg
repnz
lock
rcrb
test
mov
adc
ret
sub
xchg
mov
ljmp
add
clc
xor
add
test
xchg
mov
sbb
or
fimull
lret
pop
cmp
mov
xchg
cwtl
push
scas
xor
add
jno
add
add
xabort
add
xlat
inc
clc
fisubs
add
test
stos
cmp
add
mov
popf
jae
add
clc
xor
add
add
rol
clc
fdiv
add
aas
xor
add
clc
ret
clc
mov
pop
clc
in
push
ret
clc
pop
pop
stos
inc
clc
pop
mov
add
pop
std
sub
add
add
js
add
inc
add
pop
clc
jns
clc
and
add
hlt
jle
add
scas
sarb
cmp
add
mov
fiaddl
ret
xor
aas
adc
pop
icebp
inc
clc
mov
jecxz
xchg
addr16
aad
ljmp
pop
xor
add
icebp
cltd
mov
add
mov
add
mov
popf
sbb
in
stos
imul
lock
and
jno
add
xchg
into
sbb
cmp
cmp
adc
add
cmp
jns
clc
ret
clc
dec
sbb
inc
add
lods
cmp
mov
cmp
adc
add
dec
xor
add
xchg
push
loopne
ljmp
jp
jno
out
inc
clc
lods
rcll
lods
jle
add
mov
into
insl
nop
mov
push
test
cld
push
ret
mov
mov
push
add
repz
aas
pop
test
iret
jae
add
lret
push
clc
sbb
mov
add
fwait
jmp
push
push
fwait
jmp
mov
popa
dec
repnz
clc
cmp
mov
push
fcmovne
lcall
pop
test
add
add
cs
cmp
clc
push
add
mov
stc
test
dec
loopne
pop
pop
and
add
sbb
clc
bound
add
clc
test
or
add
inc
add
mov
xchg
notb
bound
add
add
clc
out
mov
or
add
scas
cmp
and
jnp
cmp
jp
roll
cmpsb
clc
sub
clc
jmp
dec
bnd
add
pushl
fwait
jmp
push
inc
add
outsb
xchg
in
loopne
xchg
push
popa
add
imul
decb
and
bound
add
add
dec
push
xor
add
outsb
loopne
stos
stos
push
jnp
arpl
add
cmp
and
add
add
ja
xor
add
pusha
fwait
jmp
jp
insb
push
insb
mov
clc
push
add
into
cmpsb
clc
mov
clc
sub
in
ss
add
sbb
dec
or
or
add
push
pop
cld
push
ret
add
cmp
inc
add
mov
fwait
jmp
sub
xchg
imul
cmp
clc
or
lock
mov
insl
jg
clc
add
add
mov
clc
flds
add
pusha
add
std
xor
loop
pop
fadds
je
loop
xchg
xchg
jnp
int
adc
add
mov
dec
add
add
fldt
flds
clc
aas
fistl
add
movsb
clc
stc
cmc
lret
xchg
lods
pop
out
cmpsb
clc
cld
jmp
xbegin
clc
cmp
icebp
inc
clc
sbb
sub
add
call
cld
push
ret
sub
clc
imul
mov
add
adc
add
add
clc
jmp
cwtl
insb
xchg
cld
lods
nop
lock
mov
mov
rorb
ljmp
mov
clc
ret
clc
mov
cmp
int
dec
adc
add
and
fwait
jmp
nop
mov
pop
cmpsb
clc
xchg
lret
out
ljmp
pop
fsub
clc
mov
add
cmp
clc
add
add
inc
add
stc
mov
mov
push
xchg
fwait
jmp
scas
or
add
jmp
scas
jp
push
or
mov
mov
sar
or
or
add
call
push
ret
xchg
adc
rol
clc
jge
clc
sbb
add
clc
dec
roll
add
mov
push
aam
push
add
rcrb
test
fcom
das
jb
add
add
add
add
scas
out
into
data16
movsb
clc
xchg
pop
xchg
into
cmpsb
clc
jle
popf
test
push
sub
mov
add
std
lea
test
mov
add
mov
insb
dec
sahf
push
test
cmp
sar
add
das
scas
or
add
mov
test
jl
clc
xabort
sar
cs
fucomip
xchg
ds
clc
mov
out
adc
add
clc
rorl
mov
add
popf
dec
push
clc
ret
clc
sub
add
jge
xchg
mov
add
add
clc
add
test
lahf
sahf
loopne
and
add
insb
jno
add
add
clc
pop
mov
clc
mov
fstpt
in
test
ret
mov
and
xor
add
clc
jae
add
das
push
or
enter
and
add
clc
out
or
sahf
and
jmp
add
add
ljmp
add
lahf
xor
add
sub
cli
sbb
test
add
fwait
jmp
stc
sar
fcomps
xchg
pop
xchg
popa
add
dec
cwtl
xor
add
pop
xchg
xchg
mov
add
inc
add
cwtl
arpl
add
clc
hlt
lods
int
adc
add
clc
or
addr16
jmp
clc
fsubrl
mov
clc
loopne
inc
add
cwtl
or
add
mov
lods
cmp
jb
add
add
ss
add
inc
add
dec
fidivrl
dec
aas
scas
iret
aas
pop
mov
aas
loopne
inc
clc
push
push
inc
add
clc
pop
push
mov
add
mov
sbb
xor
add
jo
add
add
add
and
clc
or
jb
fwait
jmp
jge
test
das
fiaddl
clc
pusha
add
decl
pop
add
das
cwtl
nop
sbb
add
fstpl
or
das
jae
add
xchg
mov
lcall
add
add
sub
add
cmp
push
ret
sub
stos
cmp
push
add
sbb
add
add
inc
add
cmp
clc
or
add
jmp
popf
cmp
mov
adc
add
lret
in
ja
lcall
mov
add
and
add
add
mov
jmp
and
movsb
push
mov
jo
add
outsb
sub
add
inc
clc
xchg
push
mov
mov
push
add
mov
into
sbb
testl
pop
emms
xchg
mov
clc
mov
clc
clc
pop
cmp
jg
pop
aam
clc
scas
lock
ret
lea
out
push
mov
ja
mov
add
jg
rorb
pop
clc
xchg
repz
push
push
pop
xchg
push
mov
fdiv
mov
jns
into
mov
mov
fwait
jmp
fs
or
add
add
cld
xabort
clc
add
mov
clc
out
rolb
clc
sbb
call
in
xor
ljmp
add
add
dec
push
push
add
add
add
aam
xchg
xor
clc
jmp
jnp
xor
clc
sbb
outsl
adc
add
inc
add
pop
pop
clc
pop
or
add
xor
add
add
xchg
push
sar
nop
fisttpll
mov
xchg
inc
add
jae
add
cltd
sbb
add
xchg
sub
lods
cwtl
sbb
lret
stc
imul
xor
aas
and
add
add
jl
add
sar
clc
sub
add
inc
add
mov
clc
shll
movsl
clc
jecxz
mov
iret
sbb
cltd
bound
add
add
pop
popa
add
cmpsb
clc
iret
ss
mov
mov
clc
mov
xabort
clc
stos
inc
clc
push
add
clc
cmp
add
pop
lret
cwtl
ds
xchg
out
add
add
shrl
mov
mov
clc
fisubrs
cmp
add
adc
xchg
pop
push
add
push
jae
jmp
mov
clc
mov
insl
cmp
clc
int3
fldcw
out
fldcw
jne
add
out
jp
clc
cmpsb
clc
inc
clc
xchg
lods
jne
add
jg
adc
add
inc
clc
xchg
ljmp
mov
fcomip
loopne
and
add
or
arpl
jmp
pop
mov
mov
cli
rclb
add
cmpsb
clc
scas
cmc
jbe
clc
es
cmp
jmp
add
push
add
stos
jnp
clc
xabort
sbb
mov
test
add
push
lret
mov
add
das
cld
push
loope
and
push
ret
xor
cmp
jle
pop
clc
in
mov
add
mov
sarl
clc
sub
xchg
fwait
jmp
movsb
and
mov
mov
clc
sar
xchg
out
jg
sar
lret
and
add
add
push
add
add
adc
push
lea
dec
add
add
test
flds
clc
mov
add
xchg
cmpsl
clc
xbegin
clc
add
pop
clc
movsb
clc
or
out
sahf
sub
add
xchg
cmp
cmp
clc
lahf
cmp
pop
or
jecxz
push
fdivrs
clc
dec
fwait
jmp
sbb
sub
add
rorl
hlt
dec
lahf
cltd
test
jbe
pushf
lret
imul
mov
push
add
sarl
ds
sub
or
cltd
mov
clc
and
add
dec
imul
clc
icebp
push
cmp
test
daa
clc
and
out
lret
push
dec
sub
add
inc
add
enter
clc
mov
clc
ret
clc
mov
mov
je
fwait
jmp
imul
mov
clc
in
jno
add
imul
data16
xor
add
add
sbb
fwait
jmp
inc
jmp
clc
iret
sbb
sbb
fdivs
ret
fwait
jmp
pop
test
nop
ja
jns
clc
lahf
imul
add
mov
sar
clc
mov
clc
jle
aam
pop
ds
add
add
cmp
cmp
sbb
sarb
dec
xor
add
clc
pop
in
fsubrl
cld
icebp
lcall
dec
ficompl
clc
inc
clc
xchg
inc
clc
cmc
test
aam
add
sbb
and
rolb
push
in
push
dec
pusha
add
imul
xor
jl
mov
lahf
inc
clc
sub
add
adc
adc
add
int
pop
loop
rcl
mov
jp
pop
clc
jg
add
add
xchg
push
add
sbb
rcl
inc
add
mov
add
stos
xchg
sti
pop
inc
add
add
add
mov
add
sbb
jg
clc
mov
and
add
mov
fcomp
hlt
lods
xor
mov
mov
lret
xchg
stos
xlat
out
mov
fiadds
push
arpl
add
jg
push
mov
arpl
add
xchg
mov
pop
rcrb
clc
xor
add
cltd
cltd
dec
push
out
mov
in
popf
je
clc
jmp
push
clc
or
add
xchg
dec
jl
clc
mov
icebp
push
mov
clc
pop
cli
jge
in
lea
fcomip
pop
cmp
cmpsl
clc
pop
cmc
outsb
bound
add
add
ret
push
adc
insl
inc
add
inc
add
enter
std
in
add
cli
or
add
mov
xchg
cmp
test
xor
add
loop
int
lret
scas
testb
cli
loopne
leave
fnstsw
sbb
gs
xchg
mov
clc
fstpt
outsb
sub
clc
xbegin
add
mov
cmp
add
cmp
clc
test
icebp
out
fsubrs
add
insb
jno
add
fildll
adc
jmp
xor
jp
std
dec
cs
sub
cmp
clc
lods
in
pop
jnp
add
add
jmp
add
call
repz
add
cmpsl
clc
in
mov
mov
push
clc
sar
cli
sub
sbb
add
call
lods
xor
add
add
je
xchg
out
jb
add
inc
add
jb
add
add
mov
mov
insl
repz
clc
aaa
clc
and
add
xchg
push
jg
or
adc
add
jge
push
outsl
xbegin
sub
dec
mov
clc
sbb
les
add
add
add
stos
in
mov
adc
add
mov
clc
fsts
add
lret
push
jno
add
add
out
xor
leave
nop
bound
add
clc
gs
in
cmp
clc
mov
jmp
or
xchg
inc
clc
push
mov
jns
fdiv
pop
inc
add
nop
insb
lahf
sbb
add
repnz
clc
fists
add
jge
clc
insb
vmovlps
add
test
mov
inc
add
mov
test
sub
add
lret
addr16
test
dec
daa
clc
fists
sbb
mov
push
fwait
jmp
or
leave
notb
outsb
imul
mov
and
sbb
insl
imul
clc
cmp
roll
add
sub
aaa
sti
std
lods
add
add
jmp
outsl
insb
jno
xor
add
fsubs
clc
push
imul
in
cli
sub
clc
sbb
hlt
push
dec
bound
add
leave
sbb
xchg
push
add
push
add
add
and
xor
add
mov
decl
mov
add
sub
clc
gs
push
add
mov
cmp
cmpsl
clc
hlt
or
std
push
pusha
add
adc
add
or
adc
push
ret
or
inc
clc
and
add
mov
add
cmpsb
clc
in
adc
add
clc
mov
xchg
jl
leave
cmpsl
clc
aas
sub
scas
push
add
add
loopne
mov
inc
add
pop
xor
mov
xchg
insb
mov
xor
clc
lea
add
cwtl
jnp
sar
clc
lahf
addr16
out
repnz
add
lcall
adc
add
jno
add
add
mov
fwait
jmp
dec
sbb
jmp
jmp
xor
outsl
sub
dec
mov
cmp
clc
xchg
cmp
push
fwait
jmp
adc
add
sar
add
adc
add
clc
hlt
stc
push
add
adc
add
clc
jge
clc
cmp
mov
push
mov
pop
adc
add
add
and
add
add
sbb
clc
adc
add
push
pushf
cmpsl
clc
mov
add
inc
add
scas
movsl
clc
mov
pop
pop
daa
clc
jns
pushf
fsubs
jp
fmull
loope
mov
push
mov
sti
in
adc
add
iret
mov
sbb
xor
add
add
xor
add
jmp
clc
jecxz
push
out
and
add
or
aaa
push
or
add
xor
add
add
pop
pusha
add
push
mov
fwait
jmp
sub
add
mov
fwait
jmp
adc
lea
add
scas
sar
add
cli
sbb
loope
jle
clc
loop
push
add
rorl
leave
mov
roll
cltd
mov
push
cmpsb
clc
divl
add
clc
ja
ret
clc
or
clc
push
add
adc
add
mov
fwait
jmp
mov
repnz
add
pop
sbb
add
add
stos
cmp
shrb
push
ret
or
clc
out
adc
add
xbegin
clc
jnp
cmp
lret
rcrb
jns
icebp
ret
clc
xchg
jg
pop
xchg
mov
mov
inc
add
scas
shlb
add
pusha
add
movsl
clc
iret
sbb
xchg
sbb
clc
nop
mov
clc
sti
repz
jns
add
sub
sahf
sub
clc
fadd
clc
xbegin
sarb
call
imul
inc
clc
addr16
mov
loopne
mov
clc
and
adc
mov
add
popf
mov
cmp
add
adc
add
add
movsb
clc
push
add
rclb
cmp
clc
into
call
or
test
add
out
mov
mov
or
imul
jmp
dec
imul
sub
clc
pop
mov
add
inc
add
push
add
cli
sbb
cmp
add
add
add
cmp
xchg
jne
and
add
and
add
sbb
out
lret
out
sti
inc
add
loope
pop
sub
and
xchg
adc
int3
cmp
leave
xchg
xabort
cmc
out
loope
jp
clc
enter
add
add
mov
clc
jno
add
add
fcomps
adc
add
aaa
gs
in
inc
clc
cs
clc
mov
clc
mov
add
shl
clc
mov
lcall
push
fwait
jmp
cmp
xchg
loope
inc
add
sub
add
lods
in
pop
pop
std
and
add
add
mov
xchg
xchg
cmc
xchg
int3
das
jge
push
jmp
bound
add
add
lahf
bswap
jne
clc
test
cmp
rcrl
jbe
lock
clc
scas
insl
add
xchg
and
add
mov
clc
bnd
rolb
fcomp
mov
arpl
add
push
enter
fwait
aad
fsubs
add
pop
es
dec
icebp
ss
jl
clc
push
cmp
cld
push
ret
sub
sahf
sub
je
adc
add
jle
add
or
mov
add
out
and
add
or
mov
clc
dec
test
push
dec
test
mov
scas
cmp
popa
add
inc
clc
in
ret
clc
int3
mov
jbe
es
jne
pop
notl
add
add
pop
stos
or
pop
clc
clc
ss
clc
idivb
add
sar
mov
jne
fwait
jmp
cmp
clc
decl
mov
ljmp
and
clc
cmp
fmulp
hlt
sub
jl
mov
fimull
stos
inc
add
fnstenv
add
fcmovu
push
add
arpl
add
dec
mov
add
cmpsb
clc
jmp
clc
in
cmp
add
popl
add
clc
jmp
xchg
ret
cs
add
pop
push
add
add
outsl
adc
add
add
clc
xchg
mov
add
fyl2xp1
add
add
clc
cmp
add
push
push
xor
add
into
xbegin
clc
movsb
clc
jle
or
int3
addr16
sar
movsl
clc
punpckhdq
clc
fidivl
add
add
cltd
into
pop
fcmovb
clc
mov
and
add
xchg
jecxz
sbb
add
ja
push
add
into
jb
add
pop
imul
popa
add
xor
add
mov
jnp
ja
lods
jge
add
push
pop
js
clc
mov
shl
mov
incl
subb
sub
add
data16
cmp
imul
add
add
mov
das
je
jno
add
or
xor
add
cmp
clc
fwait
jl
add
out
mov
and
mov
sbb
movsb
clc
mov
xor
add
nop
inc
clc
icebp
out
jecxz
fisubl
add
test
mov
add
mov
popa
add
roll
cmpsb
clc
sub
add
add
push
add
ljmp
leave
add
add
mov
clc
xchg
jo
add
mov
add
add
add
push
clc
pop
fs
sbb
pop
ret
clc
jmp
scas
xchg
pop
jns
jp
and
mov
add
add
cmp
add
mov
push
movzwl
fwait
jmp
xchg
dec
pop
push
sbb
jb
add
clc
scas
test
stos
pushf
rclb
add
call
clc
pop
inc
add
xchg
stos
test
sub
cmp
mov
clc
push
add
fwait
jmp
push
dec
fwait
jmp
ja
add
cmpsl
clc
das
push
mov
fwait
jmp
and
pushw
fcoms
mov
xchg
nop
xchg
xor
clc
cmpsl
clc
int
xchg
jmp
xbegin
clc
adc
add
add
xchg
and
add
add
sbb
clc
sub
decl
push
ret
sub
sub
push
mov
xlat
pushf
out
sbb
inc
clc
inc
clc
mov
rep
fwait
jmp
or
or
pop
add
cltd
test
clc
dec
sub
add
cli
pop
stos
enter
into
pop
clc
pop
inc
add
stos
je
clc
fcoml
add
inc
add
cli
xbegin
clc
mov
call
test
jge
stos
add
add
pop
fidivl
add
fwait
jmp
sub
imul
cmp
add
fdivrl
mov
add
xchg
jo
add
lret
jmp
fwait
jmp
add
mov
cld
push
ret
inc
outsl
add
lret
add
xchg
pop
adc
in
out
rdmsr
add
push
dec
add
sub
push
sub
add
mov
add
xchg
sti
dec
mov
push
fcmovbe
add
add
add
add
scas
fwait
lods
rcrb
bound
add
clc
add
add
clc
cmp
push
or
test
mov
push
add
jno
add
mov
adc
clc
add
add
cmp
jg
mov
xor
pop
mov
je
fidivrl
add
xor
push
clc
lcall
cli
cmp
sbb
mov
jge
sbb
clc
add
loop
insl
sar
clc
lcall
std
filds
clc
cmc
mov
fldenv
clc
clc
out
pop
es
stos
popf
imul
mov
mov
xor
add
jmp
inc
fwait
jge
mov
clc
dec
daa
clc
jp
add
mov
jae
add
adc
pop
dec
inc
clc
test
push
pop
popf
add
add
mov
dec
lret
adc
add
ffreep
clc
xchg
lret
fldl
clc
cld
cmp
popf
push
push
sti
fcomp
jb
add
gs
decl
jbe
inc
add
adc
inc
add
mov
mov
cli
cmp
pusha
add
xor
cwtl
xchg
or
adc
add
in
xchg
mov
xchg
add
cmpsb
sub
jo
add
clc
mov
mov
push
add
adc
add
add
fldln2
jnp
xchg
xchg
scas
cltd
jg
jmp
aam
cmp
mulb
sbb
add
xbegin
add
outsl
cmp
stos
xchg
inc
clc
jecxz
push
and
add
add
lea
fwait
jmp
sub
xor
inc
add
popf
mov
pushf
push
cs
lea
add
lahf
xor
add
add
mov
shll
and
add
cld
push
ret
cmp
cmp
cmp
or
jmp
aaa
xor
out
fdiv
imul
clc
mov
add
lcall
jne
fnstcw
xchg
cld
cld
cmp
add
out
xor
add
add
stos
xchg
pop
in
repnz
clc
push
cmc
adc
add
mov
clc
bound
add
add
ss
leave
fisubrs
inc
add
sar
mov
gs
fstpl
les
fwait
jmp
pop
xor
clc
sar
lea
fwait
jmp
ja
adc
je
add
jb
add
pushl
cld
push
ret
ja
xor
add
add
inc
clc
push
mov
fwait
jmp
pop
iret
sbb
nop
insb
sbb
add
subb
sub
ret
clc
stc
mov
push
xchg
mov
add
inc
clc
rclb
push
cmovo
add
pop
inc
clc
aam
clc
mov
dec
mov
add
mov
lret
sbb
xchg
add
ret
cmpb
clc
leave
jbe
push
jmp
mov
ja
inc
clc
and
add
int
scas
rcr
or
sti
aas
idivb
add
out
js
sti
and
add
clc
cmp
cmpsb
clc
pop
adc
testl
ds
add
in
lock
add
pop
std
pusha
add
stos
jg
or
push
jb
add
ja
clc
add
clc
ret
clc
testl
add
daa
clc
or
add
mov
mov
xor
addr16
addr16
mov
sbb
jecxz
pavgb
sbb
test
xchg
out
fsubrs
pushf
jne
insl
in
lods
fistl
push
push
cmp
insl
aas
mov
xor
scas
je
clc
pop
add
add
pop
and
add
jge
or
add
aam
add
mov
in
jno
add
push
jbe
clc
icebp
add
add
add
jo
add
iret
fdivrp
inc
add
xor
clc
sub
es
test
xchg
test
mov
clc
clc
mov
add
xchg
aam
add
mov
clc
sub
nop
sub
sti
ljmp
inc
and
jmp
cmp
lahf
inc
clc
push
add
inc
add
pop
mov
mov
add
repz
mov
add
insl
cmpsb
clc
in
sti
add
add
lock
jae
add
inc
clc
jae
add
push
add
iret
pop
push
add
mov
hlt
outsb
mov
add
fwait
jmp
mov
clc
cwtl
cmp
and
leave
inc
clc
mov
cltd
je
clc
adc
jge
scas
adc
add
pop
movsl
clc
ror
dec
cmp
add
add
sub
push
sbb
dec
cmp
jmp
test
mov
pop
into
iret
ret
clc
push
mov
add
test
daa
clc
clc
bound
add
clc
pop
cmp
call
cld
push
ret
pop
sub
jmp
mov
fwait
jmp
mov
add
xchg
add
add
fildll
jne
arpl
add
add
cmpsb
clc
inc
clc
movsl
clc
mov
clc
dec
inc
add
add
add
clc
sbb
leave
xor
stos
call
clc
pop
clc
jg
add
sub
clc
cmc
push
leave
popa
add
dec
sub
pushf
mov
add
xchg
xor
add
scas
xbegin
cmp
mov
loop
pop
push
add
sub
cmp
clc
pop
clc
ret
clc
aad
idivl
xor
add
pop
clc
shlb
out
inc
clc
jb
add
cld
push
mov
add
aaa
cmp
scas
aam
add
and
add
clc
add
jbe
int3
mov
sbb
add
clc
and
add
add
pop
hlt
data16
clc
mov
test
hlt
lret
add
xbegin
cld
in
pop
cmp
mov
add
jp
mov
add
push
loope
mov
pop
clc
jb
add
add
dec
dec
es
ja
clc
std
insl
cmp
mov
mov
add
and
imul
clc
iret
movsl
clc
outsb
jge
lcall
or
add
cmp
add
out
nop
mov
or
mov
call
call
jmp
sub
sub
add
push
add
or
or
jb
add
add
nop
mov
push
add
add
add
loope
mov
clc
pop
lods
scas
jns
mov
jg
clc
or
push
clc
imul
add
jo
add
mov
clc
sbb
jmp
xor
ja
es
outsl
inc
add
es
jb
add
and
add
clc
insb
add
js
clc
icebp
cmp
ret
clc
imul
add
mov
mov
clc
sbb
sar
xchg
pop
lcall
mov
clc
dec
addr16
loope
and
add
shlb
clc
stos
push
jne
fwait
jmp
std
testb
or
add
pop
clc
cli
sub
cs
xchg
loope
pop
fidivs
add
add
cmp
adc
mov
push
add
fnsave
fcmovb
clc
mov
add
rcl
enter
mov
mov
int3
mov
inc
add
add
add
or
cmc
xor
clc
clc
push
clc
pop
pop
clc
in
fldt
pop
repnz
clc
and
add
out
push
add
addr16
repnz
notl
xchg
push
add
mov
clc
imul
add
and
add
enter
add
cmp
mov
pop
clc
repnz
jge
clc
dec
outsl
jmp
ret
clc
adc
add
js
out
fwait
mov
add
pop
mov
clc
lcall
cld
push
ret
es
pop
xor
add
test
clc
nop
pusha
add
cmp
sar
add
aas
into
or
push
iret
xor
mov
xor
fdivrp
aad
popa
add
xchg
stos
jge
clc
fistl
add
add
cmp
mov
lods
push
add
or
push
adc
cmp
xor
imul
lods
inc
clc
push
jmp
cmp
adc
add
pop
adc
add
add
adc
add
add
mov
idiv
aaa
adc
add
add
imul
lahf
cmp
pop
clc
add
add
jp
clc
out
push
inc
add
sub
or
add
divl
add
sbb
clc
std
stc
jne
fdivrs
sub
dec
dec
clc
dec
ret
clc
frstor
test
pop
clc
jne
cmp
sar
lcall
add
pusha
add
cmp
cmp
clc
inc
clc
daa
clc
push
add
sbb
pop
sbb
add
cld
push
ret
push
and
add
ljmp
mov
fstps
add
xchg
push
leave
call
add
insb
xbegin
clc
out
inc
clc
add
add
add
sub
out
push
add
cmp
sar
fisubrl
add
jg
add
je
add
push
add
dec
cmp
push
fwait
jmp
mov
or
sbb
add
xor
add
mov
push
add
inc
add
iret
xbegin
jecxz
mov
add
clc
pop
fisubl
clc
cmp
clc
cld
dec
add
test
popf
popa
add
push
add
and
data16
dec
movsl
clc
inc
clc
mov
mov
clc
mov
clc
dec
mov
dec
sub
nop
cmp
push
mov
imul
jg
adc
add
outsb
mov
clc
xlat
sbb
jl
cmp
in
inc
add
add
lcall
add
inc
add
punpckhdq
clc
xchg
add
sbb
lret
add
add
dec
cmp
pusha
add
sub
sub
clc
movsb
clc
and
sbb
das
push
add
sub
jecxz
nop
jl
dec
nop
cltd
pushf
sbb
mov
or
mov
popa
add
xor
add
sub
lods
sti
jecxz
fstpl
xor
add
mov
aam
insl
jmp
cmp
sbb
daa
clc
and
add
add
mov
clc
mov
fwait
jmp
jno
test
clc
cmpsl
clc
jb
add
add
adc
add
add
cmp
pop
mov
repz
clc
sar
inc
clc
jbe
out
add
add
add
clc
cmp
stc
mov
outsb
add
sbb
inc
add
loop
and
add
xor
push
lcall
add
ficomps
lahf
dec
fisttpl
sbb
xchg
xchg
xchg
jg
add
clc
js
add
pop
clc
jmp
clc
inc
add
push
in
idivl
clc
jns
imul
clc
pop
xor
add
mov
dec
and
add
test
sub
stos
xchg
enter
mov
mov
bound
add
add
push
add
mov
clc
gs
sar
int3
cmp
clc
sti
lahf
shrl
push
and
add
jmp
clc
repnz
negl
jp
out
fbstp
bound
add
clc
mov
mov
cmp
push
cld
push
ret
sub
sub
add
aad
mov
fwait
jmp
popa
jg
inc
clc
enter
mov
adc
add
add
jns
xchg
es
test
arpl
add
xchg
sub
add
add
xchg
call
xabort
xchg
xor
aad
clc
xor
add
clc
cmp
mov
neg
imul
add
add
clc
outsb
dec
int
add
inc
clc
rdpmc
add
jnp
enter
clc
psubd
adc
add
adc
add
cs
clc
out
mov
sub
leave
jle
add
xor
add
ss
mov
clc
out
cmp
mov
push
clc
bound
add
add
add
mov
fwait
jmp
sub
push
add
out
icebp
pop
adc
add
add
add
iret
outsl
dec
inc
clc
aam
sub
mov
push
xlat
and
add
push
add
nop
je
clc
and
add
adc
add
sub
out
loopne
movsl
clc
dec
xlat
mov
clc
xchg
sub
jns
clc
ret
clc
mov
sub
xchg
es
lret
ljmp
inc
xor
fwait
jmp
scas
aas
xchg
js
aad
jae
add
push
add
cmpsl
clc
xchg
xchg
jno
add
aaa
stc
mov
clc
jo
add
clc
pop
insl
push
cmp
add
in
add
add
sar
add
es
out
stos
bound
add
je
push
add
insl
clc
mov
cmp
xchg
or
clc
jne
push
repnz
rorl
xchg
mov
sar
sar
pop
shr
daa
clc
divb
dec
sub
xor
add
fmul
clc
add
bound
add
clc
inc
add
rcll
rol
clc
popf
stc
push
fdivr
dec
loopne
mov
sti
nop
jge
clc
cmpsl
clc
dec
int
xchg
js
add
dec
push
adc
add
push
add
sbb
jb
add
add
cltd
inc
clc
data16
mov
add
scas
ja
sub
and
movsb
clc
mov
mov
and
pop
pop
dec
call
ja
clc
mov
sub
xchg
push
clc
fisttps
xchg
insb
add
add
add
add
clc
jbe
in
mov
add
add
xchg
push
add
into
push
sar
xchg
je
clc
jbe
clc
jg
mov
add
ret
inc
add
cmp
nop
ret
push
sub
leave
je
add
and
add
lods
jge
faddl
clc
movd
mov
call
cld
push
ret
cmpsb
or
push
push
sub
add
xchg
lahf
repnz
add
add
inc
clc
push
add
mov
push
add
and
add
add
and
add
add
adc
add
pop
fwait
jmp
pop
or
sar
mov
add
add
lret
xor
add
cmp
scas
jp
out
fists
add
add
jno
add
je
jge
clc
mov
lock
add
add
mov
mov
lcall
clc
popa
add
test
jnp
cmp
clc
mov
call
add
add
pop
adc
add
xchg
pop
xbegin
shr
fwait
jmp
sub
clc
jae
add
cmp
shrb
push
stc
cmpsb
clc
jo
add
push
bound
add
lea
cmp
clc
rep
clc
cmc
clc
adc
add
xchg
loop
data16
xchg
push
and
add
and
add
shll
add
cmpsl
clc
stc
lods
dec
test
cmp
and
add
add
adc
add
cld
push
ret
aaa
pop
insb
scas
clc
xor
add
rcrb
add
sub
add
pop
clc
pop
stc
ret
test
out
mov
add
xchg
push
add
add
add
adc
js
sub
pop
and
add
inc
add
lods
addr16
ss
sbb
fcompl
js
lret
jle
clc
ss
sbb
add
lods
sbb
out
fwait
sbb
xor
add
inc
add
cmp
inc
add
clc
sub
xor
add
pop
clc
xor
push
add
pop
push
int3
push
adc
add
out
aaa
mov
clc
dec
xor
add
insl
call
cmp
fwait
jmp
sub
scas
shrb
ss
cmpsb
clc
fdivp
es
imull
clc
push
add
mov
add
and
push
ret
aaa
mov
cld
jne
cmp
clc
scas
push
add
mov
clc
imul
sub
cmp
lods
fdiv
cli
cld
cmp
fimuls
sar
add
cmpsb
clc
mov
jmp
push
sub
lods
adc
xor
add
fsubrl
loopne
mov
and
push
add
cli
lret
push
mov
clc
stos
push
add
mov
add
push
add
test
mov
jns
clc
rolb
and
add
clc
cmp
out
push
sbb
std
arpl
add
add
enter
lret
fwait
jmp
sub
sub
add
add
push
fwait
jmp
or
movsb
clc
adc
add
and
add
push
outsb
rol
clc
test
push
mov
push
cmp
sbb
push
add
pop
cmp
fcompl
add
pop
sar
lcall
lcall
and
add
pop
clc
jb
add
add
fdivrp
mov
adc
add
add
divl
fs
clc
pop
clc
xor
add
cmp
fistps
cmp
clc
mov
dec
cmp
add
cs
repz
add
add
add
cwtl
aam
push
jge
add
into
jb
add
clc
std
ret
add
xabort
rep
shll
jge
popa
add
nop
jnp
clc
xchg
lret
cmpsl
clc
stc
loop
push
arpl
add
clc
dec
std
add
add
in
pop
sar
inc
clc
push
jnp
add
cmpsb
sub
test
dec
repz
shl
sar
mov
add
in
int3
cmc
lock
repz
pop
xor
add
clc
xbegin
lods
sub
add
je
add
repnz
das
aam
mov
clc
ficoml
add
or
clc
or
add
lret
xor
add
adc
add
or
and
or
jge
cmp
in
jge
imul
xchg
mov
lcall
cli
enter
add
daa
clc
add
add
add
hlt
fwait
cwtl
loopne
data16
xor
add
ftst
clc
sbb
mov
clc
sbb
movsb
clc
in
fs
test
insl
testb
add
cmp
out
dec
popl
loope
jp
fcompp
sbb
pop
push
add
mov
sbb
add
clc
ret
into
fisttpl
clc
push
clc
sti
sar
unpcklps
dec
pop
sbb
clc
loop
imul
clc
test
cmp
sub
clc
std
or
clc
cwtl
outsl
jo
add
sar
xchg
pop
cli
insl
push
aas
pop
xchg
jbe
xchg
outsb
rclb
nop
jmp
cmp
clc
shll
add
clc
cmc
or
clc
stc
adc
add
mov
clc
push
mov
rorb
add
cmpsb
clc
in
fmull
sub
cmp
add
clc
outsl
inc
add
jns
ljmp
add
sar
cmp
roll
add
inc
add
pop
xor
add
pop
fwait
jmp
sub
add
inc
clc
adc
add
movzwl
fwait
jmp
pop
es
shlb
add
jbe
add
adc
add
mov
clc
add
add
shl
fwait
jmp
aas
dec
pop
pop
movsl
clc
aas
clc
es
sbb
jnp
xchg
adc
add
imul
jl
lret
iret
push
add
fnstsw
add
ljmp
stos
rclb
add
or
jbe
add
ktestw
in
pop
add
clc
mov
clc
das
pop
clc
arpl
add
scas
push
jnp
add
cmp
clc
dec
clc
aam
and
add
icebp
into
out
ret
ja
out
sbb
xchg
jmp
adc
cmp
add
test
push
jbe
pop
cld
push
ret
sub
clc
loope
mov
je
pop
cmp
mov
cli
cmp
xor
add
add
cmp
js,pn
stos
pop
lock
cmpsb
clc
lcall
push
adc
jmp
pop
and
add
add
das
mov
cmp
cmp
in
jae
add
clc
in
scas
jo
add
push
add
movsl
clc
mov
xor
add
clc
pop
mov
and
repz
cmp
clc
in
xor
add
add
repz
add
clc
mov
pop
pop
jne
inc
add
adc
add
out
jns
in
inc
add
xbegin
clc
jno
add
add
jmp
clc
data16
sbb
out
cld
or
xchg
push
add
xor
add
jae
add
add
popa
add
outsb
push
pop
clc
jbe
clc
pusha
add
mov
dec
pop
in
in
push
dec
enter
stos
fidivl
xor
add
xchg
add
sub
ret
clc
xchg
ds
daa
clc
adc
add
call
add
inc
clc
jp
adc
inc
add
pop
test
mov
push
pop
pop
jp
sbb
stos
inc
add
cmp
jge
add
lods
sar
cmp
dec
sbb
clc
sub
dec
icebp
mov
jnp
outsb
xchg
mov
add
sbb
mov
add
xchg
adc
add
lcall
inc
add
inc
or
or
aas
inc
add
pushf
pop
aas
inc
add
lea
sbb
clc
mov
fcomps
mov
clc
push
scas
js
add
mov
in
or
mov
gs
push
add
dec
adc
add
add
add
lock
lea
popf
dec
push
add
fwait
jmp
push
cmp
add
test
cli
xor
clc
daa
clc
xchg
into
xchg
adc
add
stos
fs
dec
sti
adc
add
clc
cld
cld
sar
mov
in
xchg
xchg
sbb
clc
sub
add
add
mov
add
cmp
aad
test
xor
ret
clc
aam
clc
sbb
add
sub
dec
mov
das
cmp
int3
arpl
add
jmp
mov
jmp
sbb
push
cld
push
ret
aas
xor
stos
sub
popf
fdivl
jp
sub
xlat
nop
bound
add
add
add
dec
sub
mov
rcrb
hlt
arpl
add
or
stos
sbb
clc
loope
push
add
fwait
jmp
push
cmpsl
clc
jnp
pop
pop
jmp
jae
add
dec
lea
daa
clc
pop
bound
add
clc
xlat
or
mov
add
add
cld
push
ret
cwtl
xor
add
testb
add
add
mov
sbb
clc
lock
jmp
sub
out
mov
add
add
cli
clc
push
add
jae
add
add
add
cltd
mov
mov
fwait
jmp
sub
pop
mov
clc
ja
mov
stc
sub
pop
in
pop
aad
mov
add
sub
movsb
clc
int3
sub
or
mov
shll
jmp
add
shlb
mov
mov
pop
jns
insb
xor
add
clc
pop
clc
and
add
std
mov
add
rclb
add
xor
pop
push
in
mov
add
mov
ja
movsl
clc
xchg
sbb
clc
mov
outsl
sar
ljmp
and
or
jmp
test
sub
add
jno
dec
add
add
push
add
add
add
add
push
cmp
add
push
add
add
xchg
popf
push
cmp
add
push
and
add
jl
add
dec
cs
clc
fcmovnb
clc
stos
out
xabort
push
clc
pop
frstor
add
stc
or
clc
popa
add
loopne
fisttpll
dec
inc
add
lret
repnz
jmp
ja
sub
xor
ljmp
je
add
fwait
arpl
add
clc
mov
cli
outsb
sub
xchg
test
dec
cwtl
sub
add
add
add
mov
add
add
mov
push
add
data16
lret
clc
pop
shlb
inc
add
mov
adc
add
arpl
add
xor
clc
insb
adc
add
jae
add
xbegin
shll
add
add
sub
clc
test
mov
dec
sub
dec
clc
je
add
lret
mov
sub
add
add
mov
xor
add
add
push
push
inc
add
add
test
inc
add
xor
add
add
cld
mov
clc
jno
add
clc
in
and
add
inc
sbb
push
ret
or
xchg
mov
inc
add
sub
xchg
add
xchg
nop
sub
clc
jmp
clc
xchg
push
add
into
push
xor
push
or
clc
pop
clc
mov
sbb
mov
cld
fdivrs
jl
and
add
int
pop
jae
jmp
inc
push
mov
stos
test
cmp
xor
add
mov
clc
push
add
dec
cmpsb
clc
jge
xchg
lcall
jmp
adc
sub
fdivrs
mov
mov
stos
addr16
cmc
jmp
out
jmp
clc
cwtl
lock
jge
in
fs
adc
add
sar
sbb
dec
xor
sar
pop
pop
test
mov
jmp
jmp
orb
sub
clc
aad
xor
add
lret
mov
sbb
mov
fwait
jmp
jg
xor
insb
inc
clc
aaa
enter
pop
or
lret
xor
add
out
mov
clc
pop
mov
in
add
pop
pop
clc
movsb
clc
mov
hlt
sbb
adc
add
pop
das
imul
xor
sahf
jb
add
add
fbstp
add
inc
clc
int
mov
clc
xchg
pusha
add
adc
add
mov
ja
aad
add
push
cmp
nop
loope
outsl
mov
in
mov
cmpsl
clc
test
clc
ret
add
mov
fcomps
iret
pushl
rcrb
pop
adc
arpl
add
clc
xchg
inc
add
mov
add
ror
mov
add
xor
add
stc
or
or
cltd
or
add
add
add
inc
clc
sub
out
mov
outsl
arpl
add
add
sub
xor
xchg
jbe
clc
outsb
out
push
imul
popa
cs
dec
mov
add
clc
test
cvtps2pi
imul
xlat
jl
cmp
add
mov
pop
jmp
clc
push
loopne
dec
push
clc
xchg
mov
std
sub
xchg
jp
add
repnz
and
add
lods
mov
mov
adc
add
icebp
popa
add
inc
clc
pushf
add
mov
cmp
clc
mov
jp
clc
push
jmp
sub
lcall
or
add
dec
jle
clc
push
clc
es
pop
incl
ret
fwait
jmp
mov
subb
add
clc
mov
jo
add
clc
jle
and
add
clc
pop
inc
add
test
cmp
add
jmp
cltd
in
leave
fwait
movsb
clc
mov
add
sub
clc
in
push
adc
add
jl
cmp
outsl
scas
push
pop
clc
gs
lock
fcmovne
popf
cwtl
cmpsl
clc
or
clc
adc
add
xlat
mov
outsb
divb
add
and
add
add
push
rep
cld
push
ret
jno
test
add
push
lcall
push
add
cmp
add
add
or
push
clc
jle
clc
mov
xor
add
dec
adc
add
call
jmp
jge
dec
aaa
jg
add
inc
clc
mov
leave
adc
add
outsl
ret
xabort
clc
test
clc
test
add
add
add
mov
xchg
pop
mov
pop
mov
call
push
ret
sbb
popa
dec
into
rorb
nop
push
add
mov
clc
lret
out
ja
lea
push
clc
jne
add
fwait
jmp
sub
add
add
add
cmp
clc
scas
movsb
clc
push
add
jl
or
sub
addr16
sbb
xchg
pop
outsl
mov
mov
dec
push
clc
sub
clc
ljmp
add
cs
add
fwait
jmp
pop
fs
lea
clc
mov
or
mov
jmp
pop
test
in
sub
ss
clc
test
jmp
or
clc
adc
add
dec
out
mov
lock
sti
and
lods
mov
ljmp
mov
push
add
lock
enter
mov
clc
cmp
mov
add
iret
cltd
mov
xchg
mov
mov
adc
mov
mov
push
add
fists
clc
mov
aas
add
fwait
jmp
cmp
clc
test
mov
mov
adc
add
clc
sub
bound
add
push
sub
cld
push
ret
sub
ss
push
add
mov
imul
out
cmp
lret
decl
sub
add
sub
dec
ds
add
add
mov
in
mov
pop
je
clc
test
daa
clc
pop
xchg
popa
add
scas
and
add
and
add
in
loop
pop
sub
or
add
add
push
jno
add
sbb
mov
add
lcall
clc
ja
clc
jl
es
out
mov
push
ret
test
add
out
add
add
add
sub
mov
clc
xchg
sbb
iret
out
mov
jmp
es
pop
movsb
pop
xchg
mov
add
xchg
mov
and
add
in
jbe
cwtl
push
clc
insb
imul
call
add
out
mov
dec
sbb
stc
xchg
in
pop
xchg
cmp
mov
lock
mov
clc
in
repnz
add
add
sar
dec
faddl
out
nop
xor
add
dec
cmp
popa
add
xchg
adc
cmp
add
inc
add
mov
dec
lcall
clc
push
clc
cld
scas
aad
movsb
clc
aas
loope
sti
cli
rclb
add
je
dec
bound
add
cmp
ljmp
and
movsl
clc
xlat
xor
call
mov
iret
jb
add
bound
add
rep
fwait
jmp
sub
xor
stc
cmp
sub
fwait
icebp
clc
xchg
leave
js
clc
rcrb
repnz
sbb
jmp
dec
cwtl
push
sub
xchg
sar
addr16
push
push
mov
clc
push
clc
inc
add
pop
bound
add
stos
ljmp
clc
and
xchg
lods
outsl
xor
add
add
add
sbb
xchg
jmp
ja
pop
adc
clc
cmp
add
cmp
add
add
mul
clc
ffree
clc
test
clc
iret
cmp
clc
nop
cmpsl
clc
fs
mov
clc
ret
clc
test
mov
cmp
add
enter
inc
add
iret
sti
rorl
add
mov
je
fwait
jmp
test
xchg
sahf
leave
imul
icebp
or
clc
ja
mov
jge
add
mov
sub
dec
mov
clc
jae
add
add
pop
adc
add
clc
sbb
clc
mov
add
out
push
add
sub
add
sub
clc
xor
add
xchg
movsb
clc
lods
stos
pusha
add
cltd
sbb
inc
add
xor
outsl
sarb
inc
clc
cmc
in
scas
mov
mov
adc
add
push
mov
mov
add
add
fs
add
add
negb
mov
clc
in
jnp
clc
clc
dec
push
add
mov
clc
inc
add
xor
add
fsubp
clc
xor
add
clc
cmp
in
mov
xor
add
rol
clc
cmp
scas
inc
clc
in
stc
push
cld
test
fdivrl
sub
add
add
mov
cmp
clc
mov
clc
inc
add
cs
jle
add
xchg
aad
dec
xlat
inc
add
incl
repnz
sub
je
xor
fwait
jmp
fs
jno
or
clc
fbld
add
jbe
test
mov
add
pop
popa
add
rcl
aas
mov
add
and
add
dec
xchg
das
insb
mov
inc
add
mov
clc
xor
ljmp
clc
clc
mov
clc
jb
add
clc
mov
jg
pop
clc
mov
cli
hlt
dec
sub
add
jno
add
loope
scas
aad
xchg
shlb
sahf
outsl
data16
adc
add
clc
inc
clc
pop
out
loope
sbb
rcrb
dec
outsl
sub
popf
out
call
and
add
insl
mov
lock
imul
add
loopne
adc
add
clc
movsl
clc
inc
clc
fisttps
add
inc
add
aaa
out
xchg
xbegin
pop
pop
add
add
push
sahf
pop
hlt
xchg
jo
add
push
mov
jge
push
dec
mov
inc
add
lcall
mov
mov
imulb
push
dec
dec
sbb
jo
add
or
add
xchg
inc
clc
dec
or
adc
add
lret
add
filds
stos
mov
js
adc
clc
sub
mov
clc
data16
loope
js
clc
jns
mov
fidivs
inc
clc
mov
in
daa
clc
test
test
clc
mov
add
add
mov
pop
dec
je
jmp
pushf
aas
test
add
mov
clc
and
add
cli
xchg
dec
add
add
pop
or
or
adc
add
add
mov
push
add
jae
add
push
clc
jo
add
and
add
addr16
cmp
scas
mov
clc
mov
addr16
mov
fsubrs
add
lea
test
cmpsl
clc
mov
jp
cmp
add
fdiv
mov
sti
in
sub
pusha
add
dec
jg
aaa
jae
add
inc
add
lods
in
mov
enter
clc
lock
and
add
add
and
add
pop
sti
cmp
add
dec
mov
push
ret
cmp
clc
lahf
loopne
data16
aad
clc
filds
test
clc
push
jmp
scas
add
call
jmp
sub
sub
jge
sub
add
call
jb
add
jae
add
pushf
in
fcomps
imul
incl
jne
fwait
jmp
xor
es
add
inc
add
pop
cltd
mov
clc
xor
lret
data16
mov
clc
ljmp
ljmp
add
popa
add
mov
mov
push
add
xchg
xor
add
out
fwait
xor
add
out
clc
lahf
sbb
jmp
mov
mov
repnz
sub
add
pop
jmp
clc
add
add
clc
inc
clc
outsb
movsb
clc
jns
clc
sub
lret
add
or
mov
clc
hlt
xchg
data16
mov
pop
clc
cwtl
sub
clc
sub
mov
jmp
xbegin
fistpl
into
sar
or
das
outsl
sub
dec
insb
mov
add
add
imul
xchg
ja
jmp
fwait
jmp
jg
shlb
add
add
lret
rcrb
lcall
es
fisubs
add
cmp
add
jae
add
add
jbe
jno
add
add
jns
add
mov
repz
popf
outsl
jl
add
dec
mov
add
lods
mov
add
daa
clc
xchg
pop
clc
lods
inc
clc
cmp
clc
addr16
inc
add
xabort
roll
mov
clc
leave
loope
insb
pop
dec
es
cmp
out
mov
jge
clc
mov
clc
scas
dec
fcomp
push
add
xor
ror
jb
add
test
mov
cmp
lods
lahf
jno
add
cmp
xchg
dec
inc
clc
scas
mov
mov
cmp
pop
cld
push
ret
or
push
test
clc
push
fiaddl
add
and
add
add
cmpsl
clc
sub
mov
clc
iret
testl
jmp
mull
mov
clc
daa
clc
cmp
outsb
outsl
or
add
add
inc
clc
nop
vandps
fwait
jmp
pop
inc
clc
ljmp
push
inc
clc
jae
add
add
insb
adc
add
cmp
add
cmp
sub
mov
sub
clc
and
add
add
lock
pop
mov
vmovaps
xchg
mov
clc
fmuls
add
cltd
je
add
mov
add
pop
imul
clc
das
sub
inc
clc
pop
push
add
fwait
jmp
movsl
clc
add
add
cmp
call
icebp
lods
add
add
ficomps
clc
push
lret
jp
adc
clc
adc
add
clc
pop
push
sbb
push
ret
xchg
sub
pop
dec
mov
clc
inc
add
sbb
push
ret
inc
test
movsb
lods
lret
adc
add
dec
ret
xbegin
add
cmpsb
clc
sahf
and
enter
es
cld
clc
add
add
add
clc
mov
add
sbb
bound
add
mov
xchg
adc
xor
clc
mov
add
sahf
mov
clc
je
and
add
lret
mov
and
add
dec
adc
add
add
hlt
or
adc
add
clc
mulb
add
cmp
cmp
pop
xor
add
add
add
movsl
clc
test
push
mulb
add
xchg
adc
inc
clc
movsl
clc
cwtl
stos
add
add
stos
cmp
test
jnp
imul
aam
dec
cli
cs
sub
je
cmp
add
int3
cmpsb
clc
xor
add
sbb
sahf
sar
pop
cmpb
mov
fwait
jmp
push
add
clc
fstps
jp
or
mov
clc
push
sub
jmp
add
clc
jb
add
mov
xchg
inc
add
test
add
add
je
add
add
add
or
xor
add
ds
or
outsl
lock
add
mov
or
add
add
cmp
movsb
clc
pop
mov
xor
fwait
jmp
pop
push
dec
pop
mov
adc
add
add
add
add
add
mov
inc
add
je
push
sbb
add
add
xor
add
clc
cmp
sub
jl
mov
push
ret
jge
push
sbb
add
clc
aaa
enter
test
jg
fwait
jmp
jp
fiadds
inc
clc
mov
push
cmc
inc
add
sahf
push
sub
gs
xchg
fsts
add
jge
push
test
sar
jo
add
clc
xchg
lods
popa
add
ds
add
sub
add
jno
add
add
test
imul
out
mov
push
add
pop
mov
stos
cwtl
inc
add
and
add
add
mov
clc
scas
insl
je
add
insb
inc
add
repnz
xchg
mov
cmc
sub
clc
in
sub
pusha
add
mov
clc
cmc
fimull
aad
inc
clc
pop
sub
daa
clc
mov
clc
sbb
clc
cld
push
ret
aaa
or
lock
add
add
fisttps
push
mov
lret
fcmove
add
add
aas
add
add
add
loop
cmp
das
lods
pop
xchg
sbb
add
sub
clc
pop
cmp
add
call
fwait
jmp
movsb
and
sub
cli
mov
js
clc
jl
xor
add
into
xor
add
and
add
lcall
xchg
mov
xlat
loopne
pop
mov
pop
jbe
mov
clc
aaa
and
add
add
mov
fwait
jmp
sahf
lods
sub
popl
or
stc
push
add
push
add
stos
imul
cmp
jp
adc
or
insb
push
cwtl
daa
clc
dec
mov
cmpsb
clc
mov
push
ret
sbb
fwait
ljmp
add
popf
mov
clc
xchg
xchg
mov
cmp
push
mov
enter
xchg
pop
dec
push
add
push
cmc
cmpsl
clc
mov
push
add
das
out
xchg
int3
sti
xlat
jl
clc
or
add
inc
add
ss
add
int3
jae
add
xor
fcomi
lods
movsl
clc
push
cld
std
jecxz
jne
clc
jae
add
add
scas
or
push
mov
clc
and
add
cmp
mov
pop
xchg
es
lret
add
arpl
add
leave
cmp
add
test
jns
int
cmp
xchg
lahf
sub
jge
or
mov
int3
repz
add
dec
cmc
addr16
xchg
mov
int
sbb
mov
add
clc
jl
clc
cld
fisubl
clc
out
std
xor
cmp
cmpsl
clc
xor
add
add
add
add
out
shrb
into
lods
xor
add
add
add
jne
xabort
clc
mov
clc
jp
push
lcall
dec
mov
arpl
add
clc
sub
stos
sti
test
icebp
cltd
mov
add
mov
adc
add
outsb
add
push
cltd
aad
clc
gs
jbe
xchg
in
inc
add
xchg
jns
clc
push
clc
mov
fwait
jmp
add
inc
imul
clc
push
add
xchg
or
xor
decl
or
ret
jg
inc
cmp
data16
mov
clc
sub
clc
pushf
in
mov
out
add
add
mov
imul
sar
cmp
push
add
pushf
cmp
add
outsl
cmp
cmp
clc
xor
stos
xor
add
inc
add
cmp
clc
cmc
loop
push
xchg
in
adc
add
adc
add
dec
dec
and
add
clc
aad
clc
xchg
cmp
and
add
mov
add
lea
add
clc
and
add
mov
lret
stc
pop
push
or
mov
fwait
jmp
jge
insb
sbb
ljmp
mov
add
fwait
jmp
mov
clc
scas
cmp
add
mov
clc
mov
pushl
cld
push
ret
jg
cmp
clc
ret
add
adc
add
imul
add
adc
add
xchg
inc
clc
xor
add
add
incb
add
clc
push
incl
sub
add
or
push
clc
mov
aas
push
push
xchg
xor
add
lret
stos
sbb
add
push
add
fldt
test
push
cld
push
ret
test
push
add
in
aad
aas
pusha
add
test
add
mov
cld
cwtl
arpl
add
add
bound
add
add
fisttps
icebp
data16
clc
daa
clc
mov
add
cmp
cld
in
negb
clc
sbb
dec
add
fs
push
pop
imul
push
clc
hlt
test
xbegin
sti
clc
adc
add
clc
ja
xor
add
addr16
js
add
fwait
jmp
xor
sub
cmp
iret
sar
inc
add
push
movsb
cld
push
ret
pop
add
pop
dec
xor
add
mov
clc
test
cs
fwait
jmp
sub
add
add
jecxz
mov
pop
cmp
inc
add
xlat
sti
js
and
push
add
repnz
add
add
add
xchg
adc
add
pop
in
lock
ss
clc
cmpsl
clc
xchg
jbe
clc
xor
cmp
repz
fstpt
add
jg
sbb
add
mov
aas
mov
movzwl
fwait
jmp
and
pusha
add
sarb
jns
clc
inc
clc
or
adc
add
pusha
fwait
jmp
or
xchg
jp
cmp
clc
or
xabort
xbegin
adc
add
movsl
clc
sub
pop
and
add
mov
stos
jl
push
add
scas
push
shll
sbb
das
mov
clc
jnp
add
xlat
leave
xchg
loopne
cmc
sar
hlt
mov
out
sbb
cmp
mov
mov
mov
sbb
enter
call
test
iret
sahf
jbe
lock
lods
xabort
in
in
pop
push
add
inc
add
dec
inc
clc
sbb
mov
sbb
mov
jns
jnp
add
outsl
cltd
push
mov
add
pop
clc
jb
add
fcmovb
clc
xlat
loopne
xchg
mov
clc
xchg
ja
mov
clc
cmc
pop
and
mov
add
add
es
cmp
daa
clc
mov
mov
push
push
mov
adc
add
clc
arpl
add
add
mov
jmp
xchg
scas
sahf
dec
inc
clc
scas
jl
clc
push
sbb
cli
imulb
sub
add
cmpsl
clc
inc
clc
sbb
into
sti
cmp
jg
clc
repnz
add
clc
mov
clc
cmpsl
clc
lods
jns
clc
xchg
jecxz
push
xor
add
cmp
clc
jge
cmc
cmp
lods
add
add
lret
add
rcrb
jmp
add
jb
add
test
clc
sub
add
mov
add
pushf
dec
jns
clc
stos
mov
jbe
fwait
jmp
je
sub
push
ret
xor
xchg
pop
jle
faddl
clc
sar
sti
mov
hlt
out
gs
in
pop
cltd
jge
clc
mov
addr16
ss
mov
clc
pop
clc
mov
add
clc
sub
dec
clc
dec
cli
xbegin
push
adc
clc
inc
add
mov
cmp
in
jg
clc
in
mov
xchg
lcall
add
add
aad
lahf
jle
and
add
add
add
cmp
clc
and
add
mov
dec
out
xchg
hlt
clc
aad
pop
jo
add
sti
push
add
sahf
and
add
jmp
cmp
ret
clc
mov
clc
mov
add
sbb
clc
scas
data16
ljmp
add
ds
outsl
stos
mov
add
sar
push
add
inc
clc
scas
adc
out
dec
pusha
add
pop
leave
fcom
fmuls
add
push
shlb
negl
test
xchg
daa
clc
jbe
cmpsl
clc
lret
mov
or
pop
ja
mov
outsl
stc
inc
add
adc
add
xor
add
test
sbb
xchg
or
adc
add
cmp
mov
xchg
and
add
stos
xor
add
pop
mov
cmp
daa
clc
xabort
ret
clc
pop
xchg
imul
movsb
clc
lcall
inc
clc
inc
clc
data16
shll
push
add
pop
sub
add
add
push
add
mov
add
add
add
add
cmc
inc
clc
cmp
cld
mov
adc
add
iret
add
inc
clc
xchg
lods
xor
add
jnp
add
scas
sub
mov
dec
mov
sbb
add
pop
xlat
jbe
add
fwait
jmp
dec
data16
sub
aam
cmpsb
clc
cmp
fldt
rep
fwait
jmp
scas
jp
push
mov
stos
cmp
push
ret
add
mov
add
cmp
fldcw
vmulps
add
fidivrs
mov
clc
rol
clc
jno
add
dec
pop
jns
sub
aas
out
add
jp
clc
dec
fadds
pop
cmp
clc
adc
add
add
add
add
mov
pop
cmp
xchg
push
clc
sub
in
lods
jl
cmp
add
out
loopne
add
add
das
cmp
mov
dec
adc
add
xchg
inc
add
jmp
sub
clc
int3
stos
push
add
push
xchg
xchg
loop
test
clc
aad
cmp
xchg
cmp
sbb
fwait
jmp
aaa
fs
das
popa
add
lret
mov
fwait
jmp
jno
pop
sahf
jp
push
add
stos
cmp
out
or
clc
push
outsl
fwait
jle
gs
js
pop
sub
add
adc
add
inc
clc
mov
add
nop
cmp
jle
and
push
mov
push
push
pop
fwait
or
pusha
add
or
mov
adc
sub
or
clc
xor
clc
mov
mov
add
popl
dec
fadd
clc
int3
into
pop
mov
ret
clc
or
loop
mov
or
push
jmp
mov
sub
add
add
je
dec
or
add
sub
mov
fwait
jmp
and
icebp
loope
sti
repnz
add
inc
add
test
xchg
addr16
pop
cmp
mov
mov
enter
add
push
icebp
mov
sahf
push
push
clc
out
pop
mov
clc
call
fwait
jmp
fcmovu
test
movsl
clc
mov
xor
into
mov
enter
fnstcw
test
cld
push
ret
aas
jge
jg
pop
cmp
add
fsts
cmpsb
clc
arpl
add
add
sti
sbb
add
imulb
xchg
cmp
sti
scas
add
add
xor
add
mov
add
ud1
add
lods
pushf
fstp
pop
std
mov
push
add
dec
adc
clc
fidivrs
sub
mov
clc
jbe
sbb
out
imul
add
xchg
out
inc
clc
mov
mov
mov
scas
ret
fistl
add
mov
clc
test
mov
stc
mov
add
repnz
ljmp
dec
push
and
call
jb
add
stc
pop
ljmp
fwait
jmp
pop
push
sub
stos
loop
jno
add
xor
add
push
popf
into
je
clc
jae
add
fcomp
pop
leave
push
sbb
clc
out
or
dec
inc
add
or
cltd
sar
clc
inc
add
stc
jnp
pop
sti
inc
add
jl
jle
nop
cmp
mov
xchg
bound
add
out
xor
add
add
popf
pop
pushf
or
add
add
stos
cmp
cmp
add
insb
cmp
inc
clc
mov
clc
ljmp
clc
push
add
movsb
clc
popf
xabort
xchg
add
mov
add
add
out
je
pop
clc
push
add
mov
nop
dec
mov
clc
push
cmp
ja
dec
mov
dec
jmp
clc
mov
inc
add
fs
mov
clc
or
push
fisubl
lock
add
rclb
clc
call
jmp
push
or
es
sub
add
and
add
popa
add
cmp
mov
clc
add
add
aaa
jle
clc
push
add
std
test
loopne
xor
add
jae
add
add
add
loope
mov
repz
jmp
clc
shlb
mov
clc
mov
mov
shr
xchg
cmp
mov
push
cmp
inc
clc
call
clc
mov
mov
in
xor
clc
out
pop
fwait
inc
add
fldl
test
add
mov
clc
inc
clc
mov
test
gs
gs
int3
xor
clc
shl
clc
movsl
clc
cmp
clc
sar
clc
push
clc
fs
movsb
clc
mov
decl
cld
push
ret
sub
mov
cmp
enter
add
jg
in
inc
add
dec
fidivrs
sarl
mov
add
inc
clc
shrb
clc
ror
mov
int
add
mov
ror
test
sbb
cs
out
into
mov
jo
add
clc
or
add
or
add
push
fimuls
aam
add
add
add
pop
popf
cmp
clc
pusha
add
push
dec
adc
into
xor
clc
push
rorl
jp
clc
inc
clc
and
add
clc
nop
adc
add
clc
add
add
pop
clc
adc
add
lock
sbb
fwait
jmp
adc
dec
push
ds
pusha
add
jbe
sar
add
sbb
test
mov
shrl
pop
clc
lret
mov
add
mov
lods
jg
clc
jno
add
add
inc
add
mov
xor
jb
add
jmp
sub
xchg
pmuludq
notl
add
add
mov
xchg
cmp
add
clc
lods
xchg
cmp
movsb
clc
fstl
xbegin
add
icebp
stos
imul
add
pop
xchg
add
adc
cs
add
jle
cmp
pop
clc
rcrb
icebp
sbb
lea
sub
mov
clc
cmp
iret
cld
mov
sti
inc
add
sub
popaw
add
inc
clc
inc
add
xchg
sti
lret
fsubs
add
cmc
cmp
clc
es
scas
jo
add
add
dec
pop
test
int3
sti
push
xchg
cmp
push
or
jmp
cmp
sbb
sti
push
ja
popa
add
lret
popa
add
push
add
fwait
jmp
out
sbb
popa
add
mov
lcall
jmp
clc
and
add
jne
clc
push
add
jne
add
xor
jg
clc
jge
clc
mov
or
add
je
jb
add
fsts
sub
xor
add
dec
clc
jle
clc
jp
clc
fs
stc
inc
jg
aas
sub
pop
sub
add
adc
jg
xchg
loopne
jne
decl
cld
push
ret
xchg
sahf
mov
jmp
add
loope
push
add
clc
and
add
clc
sub
testl
add
fs
loopne
sub
clc
cmp
add
imulb
cmp
sar
cmp
clc
sti
inc
add
pop
daa
clc
enter
pop
fsubrs
mov
fwait
jmp
mov
clc
stos
mov
out
cmp
es
mov
sbb
sbb
clc
mov
or
das
or
push
push
fwait
jmp
sub
sub
lea
clc
jl
push
add
add
fwait
jmp
xchg
sub
idivl
add
push
mov
jo
add
and
add
push
add
outsl
dec
and
std
pushf
into
xchg
xbegin
mov
add
sub
push
push
cltd
inc
add
xor
jle
rcrl
xor
cld
push
ret
sub
test
rorl
test
add
inc
clc
xchg
cmp
clc
cld
outsl
sbb
clc
fimull
add
lods
sahf
lods
xor
add
jo
add
add
add
add
pusha
add
and
add
mov
and
add
add
ds
add
ss
xchg
dec
inc
clc
cmp
mov
fwait
jmp
and
pop
fwait
jmp
push
inc
xchg
sub
add
add
call
add
stos
movsb
clc
mov
clc
add
add
pop
clc
jmp
mov
add
fs
push
or
scas
jmp
clc
ds
inc
loopne
jmp
test
or
aad
clc
insl
push
clc
je
into
add
add
shrl
fwait
adc
add
clc
ljmp
pop
gs
sbb
sub
pop
inc
clc
ret
clc
out
and
push
add
cmp
data16
xor
add
mov
sub
jnp
xor
add
in
lods
push
add
jne
je
sar
dec
mov
xchg
xchg
inc
clc
xbegin
aas
xabort
add
fnsave
ja
shll
mov
xor
add
clc
xor
add
jecxz
xor
add
add
xor
add
mov
clc
and
mov
mov
add
mov
dec
lret
shlb
add
clc
dec
mov
inc
add
ficoml
add
leave
frstor
jae
add
add
push
fs
lods
dec
mov
adc
add
and
add
add
ds
ja
add
ds
clc
fcoms
add
cwtl
and
add
sub
imul
aaa
inc
clc
adc
add
clc
out
mov
icebp
into
pandn
add
popf
fs
sub
in
xor
add
jae
add
clc
in
adc
jl
clc
jns
mov
fwait
jmp
movsb
sub
std
ljmp
add
pop
sub
lret
dec
loope
aad
clc
cmc
jp
clc
sar
push
scas
icebp
mov
add
xor
cli
dec
jmp
clc
dec
outsb
add
add
pop
cmp
std
jp
out
insb
xor
add
add
decb
clc
mov
insb
cwtl
jne
add
add
add
mov
add
add
add
cmp
aas
and
add
in
dec
cmp
mov
sbb
clc
shr
or
icebp
cld
stos
lods
mov
out
rolb
add
xchg
cmpsb
clc
test
add
mov
push
jnp
add
push
out
push
fwait
jmp
sub
cs
xchg
cmp
add
es
cmp
sub
add
aam
mov
cltd
loopne
mov
dec
fdivr
adc
jb
add
jecxz
in
pop
xor
add
xor
add
data16
mov
push
dec
fwait
jmp
sub
sub
sbb
mov
icebp
incl
sbb
ret
fwait
jmp
mov
sbb
or
cld
push
ret
ja
pop
dec
vmread
xlat
ljmp
pop
mov
sbb
clc
dec
test
jle
insb
xor
mov
mov
sub
cmpsb
clc
mov
push
cmp
and
add
clc
fidivl
add
xchg
lret
inc
and
jmp
sub
xor
xabort
dec
push
jmp
push
sub
insl
scas
mov
clc
add
add
add
cmp
inc
clc
imul
add
in
xchg
xbegin
and
jmp
fwait
test
xchg
addr16
fsubs
daa
clc
pop
or
add
test
lret
add
js
clc
sbb
cmp
mov
add
jmp
cmpsb
clc
mov
lret
shll
imul
sbb
inc
add
dec
jp
sbb
push
daa
clc
lea
fimull
cwtl
push
add
push
mov
add
aaa
xor
xchg
sbb
inc
add
aad
clc
cmp
push
clc
imul
fwait
jmp
jg
sub
imulb
dec
pop
pop
loope
push
jl
add
add
sub
xbegin
add
movsb
clc
shld
clc
inc
clc
std
add
add
clc
scas
push
push
fwait
jmp
fwait
sub
aaa
cmp
jnp
nop
ficomps
clc
lods
test
add
sbb
nop
push
cmp
loop
cli
xchg
mov
ja
arpl
add
pop
jge
int3
push
xbegin
dec
push
fwait
jmp
popa
insb
sub
push
clc
jmp
add
cmp
push
add
jo
add
or
add
add
fcoml
add
add
add
dec
lea
clc
insb
sbb
clc
inc
add
xor
fwait
jmp
jno
pop
or
clc
xor
sub
clc
in
loop
scas
insb
cs
pop
pusha
add
imul
lcall
add
sbb
push
clc
xor
add
clc
push
cmp
add
out
sbb
push
popl
fwait
jmp
cmpsb
je
cmp
clc
push
lcall
pushl
cmp
mov
xchg
mov
clc
adc
add
clc
lahf
xchg
scas
scas
fwait
pop
pmaddwd
mov
xor
add
add
push
add
cmpsl
clc
cmc
push
jg
ficoms
add
add
cmc
push
pop
scas
scas
sbb
pop
lcall
sbb
test
int3
stos
hlt
xchg
xor
add
clc
icebp
mov
jmp
adc
ficoml
add
clc
lret
adc
add
jbe
add
cmp
mov
sub
stos
addr16
push
dec
push
add
stos
in
xchg
add
add
xor
add
nop
nop
xor
add
add
xchg
push
or
in
xchg
jl
xor
cmp
cmc
inc
add
pop
or
rorl
mov
add
sar
push
ret
xor
xor
pop
xbegin
add
sub
mov
sub
fcomps
pop
cltd
lea
mov
hlt
push
aas
cs
add
cld
stos
mov
xchg
in
jns
dec
cld
push
ret
sbb
add
lods
inc
clc
adc
clc
cmp
movsb
clc
addr16
cmpsb
clc
or
lret
popa
add
repz
rsqrtps
add
add
loopne
and
add
arpl
add
clc
jp
mov
and
add
clc
scas
sar
addr16
push
xchg
arpl
add
movsb
clc
stc
push
mov
xchg
fstps
fisubrs
sub
push
jp
clc
je
add
fwait
jmp
sub
dec
dec
popf
shl
clc
adc
cmp
rolb
lods
dec
jp
clc
adc
cmp
xor
add
mov
add
add
add
push
ja
inc
add
mov
dec
sub
or
pop
push
sar
push
clc
sbb
mov
lock
push
add
rorb
cmpsb
clc
and
add
mov
test
inc
add
mov
out
xor
add
clc
insb
call
clc
push
jne
add
mov
icebp
xchg
xabort
test
push
mov
add
fwait
jmp
fldcw
sbb
ret
add
fwait
jmp
aaa
fs
ror
pop
cs
clc
inc
add
repz
mov
fwait
jmp
push
outsl
dec
rolb
sub
add
dec
popa
add
lret
call
ret
clc
out
cmp
test
add
lret
addr16
xlat
sbb
clc
sti
mov
push
add
add
iret
mov
clc
fbld
xor
lods
addr16
cwtl
inc
clc
sbb
sti
cmpsb
clc
insb
pop
lret
pusha
add
push
clc
cld
dec
and
add
add
in
sbb
out
add
call
push
clc
dec
lahf
inc
clc
inc
add
jmp
bound
add
pop
imul
mov
add
clc
outsl
and
add
icebp
adc
jno
add
adc
add
and
add
int
mov
sar
dec
xor
rcrl
push
outsb
jg
add
add
and
add
add
mov
addr16
dec
pop
std
inc
add
cmp
pop
fisttpl
adc
add
bswap
xor
clc
sar
dec
cmpsl
clc
or
add
popf
sub
add
adc
add
cmp
add
popl
add
add
js
movsl
clc
add
add
add
mov
enter
add
add
testb
add
fmuls
dec
or
sahf
fsubr
mov
pop
clc
push
add
aad
test
out
repz
aaa
sub
add
dec
fstps
add
int3
out
mov
jnp
push
push
sbb
clc
dec
stos
je
add
mov
dec
pop
lock
add
cmp
mov
clc
cli
scas
adc
add
pushf
outsl
push
add
xchg
fildl
clc
daa
clc
push
clc
pop
inc
add
or
adc
add
xor
clc
sbb
or
inc
add
lods
add
pop
inc
add
cmp
add
or
add
push
add
mull
add
bswap
sbb
jae
add
daa
clc
jg
push
inc
add
js
clc
xor
add
add
arpl
add
add
lret
arpl
add
popf
aaa
outsl
ret
clc
or
es
xchg
call
cmpsb
clc
push
dec
mov
ret
je
cmpsb
data16
leave
sahf
xchg
mov
mov
inc
add
iret
sbb
clc
aaa
test
xchg
loope
lahf
cmpsl
clc
or
jmp
sbb
aaa
das
mov
fs
dec
sbb
fwait
jmp
sub
xchg
lret
lock
mov
add
dec
or
cli
in
cmpsl
clc
clc
insb
je
clc
cmp
add
stc
dec
cmc
test
adc
add
xor
pop
fwait
jmp
cmp
ficomps
or
mov
add
cld
mov
lcall
clc
pop
push
add
call
add
xor
and
cmp
xchg
jge
or
clc
xchg
jo
add
loopne
out
add
add
clc
test
cmp
xor
add
and
aad
adc
add
inc
clc
sahf
fs
mov
cmp
add
add
out
repnz
jmp
mov
xabort
cmc
popa
add
dec
mov
cltd
mov
clc
push
add
daa
clc
aaa
or
in
push
ret
xchg
adc
cmp
pushf
xchg
cld
push
add
xor
add
gs
popa
add
xchg
cltd
cmp
add
cli
ja
addr16
add
in
out
test
out
jle
aas
and
clc
sub
pop
clc
and
mov
push
mov
clc
in
xor
add
fisubl
clc
fwait
je
data16
jecxz
or
stos
ret
clc
sarb
jp
popa
add
in
jl
clc
jl
leave
pop
cli
xchg
dec
dec
scas
lret
add
test
or
call
add
add
dec
sbb
add
add
hlt
lea
gs
or
arpl
add
addr16
mov
jmp
das
adc
adc
add
adc
add
add
push
add
jmp
aaa
lret
sbb
call
fwait
jmp
mov
clc
in
cltd
or
inc
sub
ljmp
adc
add
clc
arpl
add
stos
sub
xchg
dec
inc
add
loopne
cmp
add
pop
clc
bnd
pop
inc
clc
push
add
mov
adc
fwait
jmp
sub
movsb
popa
xchg
mov
mov
and
add
inc
add
jbe
clc
shrl
clc
test
jb
add
fcoml
sbb
jns
and
pop
js
clc
cmpsl
clc
pop
mov
xbegin
sub
in
ja
cmc
test
add
imul
lahf
and
add
add
add
add
pop
and
add
ret
add
mov
add
push
add
loop
cld
sub
and
add
rorb
xchg
decl
mov
adc
jmp
xchg
push
stc
lret
movsb
clc
dec
sahf
clc
cltd
xabort
mov
out
adc
sub
xor
add
cmp
add
leave
adc
add
testl
int3
test
cmp
clc
or
cmp
out
sub
ss
sub
clc
call
clc
sar
clc
adc
add
pushf
gs
jnp
imul
mov
add
or
icebp
aaa
cmp
stos
jle
test
cmc
hlt
or
add
clc
push
add
shlb
repnz
clc
jbe
cld
fwait
into
cmc
sar
mov
push
add
pop
clc
adc
add
push
jb
add
jne
push
add
xchg
add
stos
scas
sub
clc
xchg
insl
mov
cmc
decl
outsl
pop
imul
clc
clc
lods
cmpsb
clc
mov
jge
sbb
aam
inc
add
sahf
or
fs
sar
inc
clc
data16
fstl
add
cmpsb
clc
mov
add
push
add
inc
clc
stos
jo
add
xchg
vmovaps
sar
add
dec
xchg
add
add
clc
int3
aam
pop
pop
mov
fwait
jmp
sub
lret
xor
add
add
fwait
jmp
push
adc
sub
out
cmp
mov
sbb
jmp
jno
cmp
cmp
clc
mov
jg
clc
cmp
xor
add
add
xbegin
cli
cmp
loope
add
dec
mov
add
popf
or
cs
in
cmp
clc
jle
gs
add
add
sub
and
add
add
clc
sahf
mov
mov
sahf
outsl
dec
sub
xor
sbb
push
ret
xor
scas
popf
sahf
lret
add
clc
lret
adc
add
mov
sbb
clc
test
xor
add
jp
clc
fcom
je
xor
clc
in
in
push
jo
add
loop
int
add
sbb
add
add
mov
mov
clc
in
sahf
push
xor
add
fwait
jmp
sub
dec
test
cmc
out
cmp
add
inc
add
dec
fs
stc
add
add
clc
and
add
clc
mov
pop
outsl
in
jecxz
dec
add
add
imul
sbb
dec
cmp
jmp
xchg
inc
push
hlt
in
mov
cmp
test
out
stos
sub
clc
sahf
sarl
xchg
push
add
pop
nop
data16
cmpsb
clc
stc
sub
add
clc
mov
mov
add
sar
mov
vcvtps2pd
add
cmc
xor
add
cmpsl
clc
test
add
mov
xchg
cmpsl
clc
aas
pop
insl
outsl
jns
movsl
clc
nop
int3
imul
addr16
es
clc
dec
je
cmp
jno
add
push
dec
fwait
jmp
sub
add
xchg
es
repz
jl
cmp
add
pop
rcr
sub
add
add
sbb
clc
incb
add
mov
mov
add
jb
add
add
loopne
xchg
imul
push
add
ss
add
cmp
sti
aad
lcall
clc
dec
pop
or
cmpsl
clc
popa
add
mov
add
pop
clc
add
add
aas
jg
add
icebp
stos
dec
sbb
nop
jae
add
sub
add
or
push
add
lock
inc
add
xchg
cmp
jl
add
mov
test
jne
fwait
jmp
aas
ret
clc
imul
ret
clc
fldcw
and
add
clc
jns
mov
mov
add
add
clc
inc
add
mov
ljmp
fmull
sbb
repnz
clc
xor
add
xchg
push
iret
dec
ss
sub
xabort
cmpsl
clc
mov
add
clc
dec
lods
push
mov
add
clc
cwtl
fisubrl
clc
js
sub
sahf
mov
mov
push
outsl
sub
add
pop
mov
add
clc
add
clc
je
mov
out
push
clc
sbb
clc
xchg
lret
enter
jo
add
add
mov
clc
push
or
clc
inc
clc
inc
add
out
lcall
clc
sbb
fwait
jmp
or
or
cmp
sub
adc
add
add
mov
xor
add
add
es
pop
and
add
clc
es
pop
outsb
adc
add
cmp
push
add
nop
out
sahf
test
test
lcall
add
arpl
add
clc
clc
scas
test
ja
mov
clc
push
mov
fwait
jmp
add
pop
mov
clc
test
push
negb
clc
out
cmp
cmp
add
jo
add
shl
clc
and
add
add
adc
add
mov
cld
popf
stos
xchg
push
add
push
ja
and
add
loop
leave
add
add
push
dec
mov
add
or
xor
pushf
sbb
jmp
sub
cmpsb
jge
idivl
push
ss
sub
cmp
add
popf
xchg
mov
lods
dec
adc
inc
add
repz
add
cmp
add
clc
mov
lock
add
cmc
sahf
push
je
or
cmp
add
cmp
mov
add
jae
add
add
add
clc
sub
add
fwait
jmp
lods
sub
pop
loop
pop
je
pop
mov
clc
data16
std
add
add
popf
pop
xchg
out
xor
add
cmp
aam
insb
cmp
or
in
cmp
movsl
clc
mov
add
push
popf
cmp
ja
add
stc
mov
jbe
xchg
add
add
jne
fwait
jmp
and
add
int
xbegin
gs
std
ljmp
sti
loop
adc
add
mov
mov
push
add
pop
test
cmp
or
jno
add
jmp
cmp
insl
pop
push
imul
jb
add
xchg
enter
xor
add
clc
pop
mov
divl
add
int3
gs
jle
call
add
je
add
sbb
add
pushl
clc
test
push
add
addr16
scas
pop
xchg
mov
add
scas
fwait
sbb
scas
sbb
ljmp
sub
aaa
mov
clc
xchg
cwtl
mov
fs
jl
inc
clc
or
clc
adc
add
lock
add
dec
pusha
add
adc
add
xchg
inc
clc
sbb
push
adc
je
decl
test
add
fwait
jmp
jecxz
outsl
xor
add
and
mov
xchg
sub
mov
je
outsl
jp
push
scas
cs
add
adc
add
xlat
add
add
add
test
call
fwait
jmp
popa
sbb
aad
add
add
jle
pop
jbe
fcoms
clc
cltd
add
add
add
push
in
lahf
pop
outsb
mov
aad
sbb
mov
pop
sar
incl
cld
dec
mov
or
ss
pop
xchg
pop
nop
test
clc
movsl
clc
sar
cmp
aas
dec
lods
aas
or
clc
mov
add
xor
add
mov
scas
lea
add
mov
sbb
push
add
pop
jp
clc
scas
xchg
mov
gs
fiaddl
jns
and
add
imul
add
add
push
sub
stc
decl
and
add
ja
fwait
imul
fwait
jmp
mov
sub
or
adc
in
insb
fsubrs
add
add
cmp
mov
jecxz
mov
aad
cmpsb
clc
and
add
aam
incl
jmp
nop
das
sub
sahf
mov
out
and
pop
adc
add
das
jp
jecxz
in
mov
pop
mov
push
cld
push
ret
sub
dec
cwtl
pop
insl
out
or
clc
inc
clc
or
fcompl
cmp
fwait
jmp
inc
clc
sub
add
out
mov
fdivrs
inc
add
movsl
clc
rcrb
clc
in
into
insb
cmp
clc
cltd
cmpsb
clc
add
or
add
xor
add
out
cwtl
fdivrl
add
add
mov
std
sub
add
xor
clc
mov
iret
dec
xor
add
add
mov
add
push
clc
clc
xor
add
jp
add
in
mov
add
add
add
mov
mov
sub
mov
xchg
xor
add
popa
add
dec
xor
add
clc
cmp
clc
inc
clc
insb
lret
add
dec
mov
clc
test
mov
add
add
add
sub
xchg
xchg
mov
int
add
pop
xor
jmp
ss
clc
lock
add
push
push
add
call
lods
push
insb
insb
aaa
xchg
out
sbb
fisttpl
out
xchg
out
jno
add
in
cmp
clc
xchg
lret
fldenv
add
clc
out
pop
mov
clc
mov
add
leave
jp
clc
cli
push
movsb
lcall
mov
popf
or
add
and
add
add
lcall
fwait
jmp
sub
mov
popa
add
bound
add
repz
and
add
jb
add
add
add
leave
xbegin
add
ror
push
add
sbb
es
pop
push
pop
jge
mov
lcall
call
sbb
clc
movsb
clc
add
sar
rcr
cs
xchg
bound
add
bound
add
mov
add
fwait
jmp
inc
clc
jle
and
add
add
mov
punpckhbw
jmp
and
ja
and
cmpsl
clc
leave
jb
add
add
aad
add
js
clc
jl
add
clc
ficoms
clc
or
add
push
add
jl
add
clc
popf
mov
clc
adc
add
clc
aas
shrb
add
add
clc
and
add
mov
add
js
clc
sbb
add
add
add
mov
push
insb
inc
clc
clc
mov
add
mov
sbb
add
add
mov
in
cmp
lret
fsubrl
xchg
xor
cmpsb
clc
mov
xabort
clc
adc
add
dec
dec
or
cmp
add
push
add
mov
mov
dec
or
stos
mov
clc
dec
sub
xchg
ret
insb
dec
das
das
sar
clc
add
jecxz
mov
mov
cmp
fstps
clc
fmull
push
out
sub
sub
fimull
test
pop
dec
lods
lret
mov
test
push
fildl
add
mov
push
add
and
add
sar
clc
jno
add
scas
mov
sbb
push
add
adc
add
aad
clc
mov
cmp
outsl
add
lock
jne
mov
clc
mov
subps
icebp
push
fimull
add
xor
add
clc
mov
clc
sar
add
xchg
bound
add
clc
sahf
test
mov
sbb
xor
add
clc
pushf
xabort
fmuls
jle
push
add
out
xchg
fwait
mov
xor
add
push
fwait
jmp
mov
imulb
enter
and
add
mov
movsl
clc
xor
add
jnp
clc
push
sub
fwait
jmp
sub
sbb
or
jno,pt
add
add
add
cmp
clc
dec
inc
add
jno
add
cmp
sub
add
lret
pushf
cmp
clc
pop
stos
aam
add
add
test
insl
adc
lods
add
dec
sar
mov
add
add
mov
cs
in
fldt
int3
fisttpll
mov
mov
jmp
fwait
sbb
clc
call
jmp
and
nop
and
sarb
sub
sub
sub
hlt
nop
dec
jno
add
mov
add
or
lods
adc
stos
out
leave
jo
add
mov
clc
dec
xchg
aam
clc
add
add
add
daa
clc
cwtl
add
add
scas
or
movsl
clc
lret
pop
daa
clc
gs
call
clc
add
and
inc
add
sar
mov
jp
ffree
clc
mov
add
inc
add
imul
sub
sbb
lahf
lahf
test
or
add
cltd
and
mov
leave
cmp
adc
cs
add
add
add
loop
hlt
mov
imul
call
add
mul
clc
adc
add
xor
mov
dec
jb
add
into
mov
and
add
xchg
mov
lret
pop
cmpsl
clc
add
add
add
xchg
fiaddl
adc
add
clc
pop
sbb
repnz
jmp
sar
cmc
in
out
test
mov
push
ret
sub
cld
mov
test
fdivrl
and
add
or
clc
mov
ja
mov
fs
shr
out
dec
mov
nop
or
mov
fcompl
push
add
jnp
add
mov
dec
cmp
js
push
push
jmp
fwait
jmp
push
xor
clc
push
stos
inc
clc
mov
int
clc
dec
sub
mov
data16
adc
add
sbb
fcoml
add
sub
add
cmp
clc
pop
mov
mov
pop
rcll
ret
fwait
jmp
sub
je
mov
mov
and
add
call
mov
add
or
mov
add
cmp
push
pop
fwait
jmp
ja
or
or
or
clc
cmpsb
clc
idivb
popa
add
and
adc
add
int3
push
add
cmp
pushl
fwait
jmp
pop
rorb
add
fwait
jmp
sub
dec
cmp
xchg
lock
mov
je
fwait
jmp
xbegin
add
rorl
sub
pop
add
xchg
ret
xlat
jmp
clc
push
xchg
or
push
outsl
adc
add
add
add
mov
push
clc
cltd
pop
sub
scas
cmp
add
stos
mov
clc
xchg
or
add
in
pop
jmp
out
ljmp
lcall
jp
pop
xchg
fidivrl
add
xchg
xor
add
jmp
pop
sub
sub
adc
add
add
mov
mov
push
add
aaa
pop
mov
add
lret
pusha
add
cmp
mov
add
add
xor
fwait
jmp
or
jge
clc
fcmovbe
cwtl
pop
js
add
hlt
or
outsl
outsb
pop
push
loop
mov
clc
inc
clc
ret
sbb
mov
sbb
add
jnp
in
imul
push
add
std
leave
xor
add
sbb
jmp
jge
mov
scas
push
js
jbe
aaa
iret
shl
clc
dec
aam
mov
jnp
sub
push
lcall
ljmp
inc
add
jecxz
sahf
lret
add
nop
cli
add
add
add
xchg
dec
adc
add
mov
fwait
jmp
add
pop
inc
clc
pop
incl
jle
inc
add
xchg
test
mov
inc
add
lea
ja
mov
mull
xchg
or
cltd
inc
add
or
dec
mov
push
clc
repz
fidivs
add
out
mov
or
and
repnz
jae
add
movb
add
add
mov
in
lahf
adc
add
data16
add
add
add
iret
outsb
push
add
int3
nop
cld
inc
clc
cmp
cmp
add
jecxz
inc
clc
pop
add
bound
add
pop
adc
add
push
clc
fadd
clc
leave
pop
std
jae
add
inc
clc
sar
call
or
insl
into
inc
add
adc
xchg
sar
clc
jbe
cwtl
xchg
sbb
mov
clc
sub
gs
jo
add
xor
add
clc
lods
add
clc
dec
test
add
dec
lret
mov
xchg
adc
add
imul
add
outsb
jno
add
push
add
in
adc
mov
xlat
dec
mov
jo
add
xchg
mov
push
stos
in
sub
mov
clc
imul
rcrl
aaa
es
and
mov
mov
pop
clc
mov
add
add
clc
push
out
neg
cltd
mov
push
mov
add
mov
movsl
clc
mov
iret
push
clc
fcompl
sbb
add
xor
add
out
stos
sar
mov
clc
cmp
clc
jmp
aas
xbegin
test
inc
clc
ret
jmp
clc
xchg
enter
jge
clc
xchg
ds
push
aam
xor
add
cmp
push
clc
push
add
fwait
jmp
shrb
lahf
test
dec
cld
push
ret
sub
add
add
or
add
outsb
jne
fbld
add
es
push
add
push
xor
add
adc
add
fwait
out
add
add
clc
cs
jno
add
out
ss
stos
daa
clc
repnz
clc
cwtl
inc
add
jecxz
das
stc
xor
add
cmp
clc
sbb
repz
jmp
sub
sbb
pcmpgtd
inc
clc
inc
add
inc
clc
mov
popf
loope
scas
lock
push
cld
push
ret
sub
jge
iret
jo
add
dec
cs
or
data16
push
leave
cmp
fwait
jmp
sub
bound
add
cmp
dec
mov
add
sahf
sarb
dec
push
add
aas
clc
rol
clc
jl
loope
pop
xchg
mov
add
into
inc
add
cmp
cmp
insb
or
clc
addr16
add
jb
add
add
push
add
icebp
cwtl
push
clc
movsl
clc
fwait
mov
pop
sbb
aam
and
add
mov
fwait
jmp
push
test
inc
clc
fdivs
add
clc
faddl
nop
push
out
fsubp
clc
or
sub
add
push
jne
fwait
jmp
pop
icebp
in
cltd
cwtl
mov
addr16
add
mov
or
jmp
sub
push
mov
cld
push
ret
pushw
xor
clc
in
sbb
jmp
pop
test
sbb
cltd
sbb
mov
sbb
clc
jbe
out
and
add
jl
push
add
insb
inc
clc
sbb
and
add
jno
add
out
bound
add
add
fbld
frstor
add
sahf
nop
push
mov
fwait
jmp
mov
sub
cwtl
popl
add
mov
mov
add
mov
jb
add
clc
enter
cmp
int
dec
imul
adc
add
add
mov
fwait
jmp
imul
stos
xchg
cmp
cmp
or
add
push
ret
cmp
lock
add
es
mov
push
cld
push
ret
aas
sub
add
das
xor
add
cwtl
sub
add
in
cmp
clc
jns
push
add
sbb
fwait
jmp
dec
jne
add
pushf
ds
clc
jecxz
cs
add
stc
ljmp
mov
add
adc
cmp
es
xor
clc
jmp
out
or
icebp
xor
fs
lock
imul
nop
fimull
clc
arpl
add
clc
clc
pop
sub
insl
insb
add
add
add
adc
add
sbb
pop
fwait
jmp
adc
sahf
push
clc
push
add
pop
push
clc
jo
add
push
mov
fwait
jmp
es
sub
ja
loop
into
add
clc
push
xchg
hlt
inc
clc
cltd
mov
mov
out
inc
add
dec
lret
out
pusha
add
sub
popa
add
or
iret
test
rclb
add
add
add
add
cmp
cmp
fwait
mov
and
mov
dec
mov
pop
push
jmp
push
sub
cmpsb
clc
pop
iret
add
push
pop
mov
lcall
dec
push
clc
cmp
push
add
push
add
sub
and
and
add
add
loope
int3
aam
ret
clc
mov
add
mov
mov
fwait
jmp
cmp
clc
es
jno
add
ror
jp
add
pop
js
sbb
add
mov
push
clc
xchg
dec
jge
loop
stos
xor
add
repz
add
inc
add
aaa
sbb
aaa
jg
clc
dec
adc
add
add
ja
jae
add
movsb
clc
mov
mov
jecxz
push
add
in
pop
jl
jbe
cld
pop
clc
mov
arpl
add
add
inc
add
outsb
into
outsb
pop
clc
push
xchg
in
inc
add
shll
add
add
add
xchg
lods
mov
xchg
bound
add
sahf
aad
add
test
pop
lret
fwait
cwtl
rcrl
mov
xchg
out
popa
add
xor
cmp
clc
jb
add
cli
repz
adc
stos
shrl
jne
cld
push
ret
insb
sub
clc
xor
cmp
jl
add
ds
clc
shrl
add
add
adc
add
clc
sbb
test
icebp
lcall
push
sbb
test
lcall
add
fwait
jmp
adc
movsb
fiaddl
daa
clc
pop
mov
add
adc
dec
fwait
scas
add
cmp
jbe
adc
add
cmpsl
clc
push
jg
clc
push
mov
hlt
sbb
mov
clc
cmp
icebp
popf
dec
xor
fwait
jmp
sub
mov
clc
cmpsb
clc
sub
and
add
xchg
scas
or
sub
cmp
mov
mov
push
ja
xchg
or
pop
fistps
dec
iret
jecxz
or
lahf
pop
jne
out
sbb
test
jecxz
mov
out
icebp
adc
add
mov
sbb
lds
dec
leave
mov
push
in
cmp
push
sbb
aam
clc
repz
icebp
bound
add
and
add
das
sar
add
xchg
xor
add
add
clc
xor
clc
popf
rorl
data16
dec
cmp
and
add
clc
add
add
xchg
pushf
sbb
nop
push
add
inc
clc
mov
sti
push
sbb
add
cmp
add
pop
rcrb
clc
mov
scas
push
inc
add
jne
jnp
clc
lock
sarl
dec
repz
add
mov
adc
add
jg
sahf
jne
repnz
pusha
add
and
loope
push
add
std
inc
clc
pop
clc
xor
add
add
add
test
add
xlat
jp
cmc
sbb
add
adc
add
clc
and
or
adc
add
cmp
pop
clc
mov
push
xor
add
stc
es
mov
clc
out
jb
add
stc
data16
cmp
add
fwait
jmp
xchg
movsb
sub
clc
cmpsl
clc
cmp
popa
add
outsl
gs
cmp
div
stc
or
sub
clc
insl
sar
and
add
das
insl
sbb
mov
clc
cwtl
out
movsl
clc
stos
mov
cmc
xor
outsb
mov
xor
add
sti
cmp
add
iret
push
xchg
jecxz
sti
pop
xor
idivb
mov
sbb
jmp
decl
pop
icebp
mov
call
add
pushf
xbegin
pop
mov
add
insb
mov
push
add
scas
cmp
scas
int
and
or
xabort
sbb
aaa
or
stc
clc
std
popa
add
adc
add
jmp
pop
xchg
js
sbb
or
fwait
jmp
sub
je
mov
or
sti
and
jo
add
mov
push
cmp
pusha
add
inc
add
inc
clc
or
xchg
push
mov
add
add
clc
adc
add
clc
mov
dec
sub
jmp
jp
cmp
lods
sub
pop
xchg
mov
inc
add
cli
push
push
ret
aaa
or
clc
into
and
aam
mov
iret
jmp
clc
mov
movsb
clc
sbb
push
ret
dec
jg
test
test
add
add
nop
xor
jae
add
pop
dec
cmp
push
add
ljmp
and
mull
clc
fdivrl
insb
rorb
testb
scas
mov
push
adc
inc
add
push
sub
aas
jge
clc
icebp
mov
clc
mov
clc
popa
add
sahf
popl
add
repnz
jmp
mov
jbe
lea
pop
stc
or
add
ficoml
add
dec
fidivrl
xchg
movq
lret
mov
dec
adc
xbegin
clc
mov
clc
xbegin
insl
insb
repz
daa
clc
pop
popa
add
shrb
add
adc
and
add
pop
test
xchg
bound
add
lock
add
ret
clc
cltd
loopne
hlt
repz
fdiv
inc
add
jmp
add
cmp
rorb
jmp
jg
sub
clc
cltd
mov
repnz
add
fisubrl
push
mov
push
clc
xchg
xchg
inc
clc
adc
out
xlat
adc
add
lods
mov
mov
pop
lcall
add
add
popf
mov
clc
das
jno
add
pusha
add
xchg
push
and
out
sbb
clc
in
mov
push
add
add
mov
or
add
push
jmp
popa
or
mov
cltd
jae
add
pop
pop
push
clc
jnp
and
add
popl
xbegin
cltd
sbb
adc
add
clc
or
clc
jb
add
clc
jo
add
add
clc
xchg
cmp
cmpsl
clc
bound
add
aam
hlt
mov
ljmp
cmp
mov
adc
jmp
dec
xchg
or
xchg
cmp
add
inc
add
int3
cmp
add
paddusb
mov
push
fwait
jmp
or
xchg
cwtl
data16
push
add
popa
add
vcvtdq2ps
mov
cld
push
ret
movsb
data16
enter
mov
or
fidivrl
lret
cwtl
pop
clc
stos
xchg
jle
sbb
clc
inc
clc
in
mov
ss
lret
add
push
add
pop
sbb
jmp
add
mov
adc
add
adc
add
clc
scas
cld
fistps
inc
clc
test
xlat
jo
add
jmp
clc
mov
add
popf
movsb
clc
jbe
jnp
dec
pop
clc
test
push
xchg
inc
clc
add
or
add
add
insl
mov
mov
add
dec
lahf
mov
clc
scas
dec
lods
dec
gs
dec
push
xchg
xchg
ja
pop
pop
add
add
sbb
adc
add
fists
ret
clc
loopne
lret
ds
pop
fwait
jmp
push
or
clc
cmp
clc
lcall
clc
xchg
jns
clc
icebp
inc
add
adc
add
and
pop
jo
add
cmp
cmp
add
clc
in
cmp
pop
clc
enter
add
sbb
repz
add
adc
add
stos
int
add
mov
pop
in
ror
cmp
call
add
fs
imul
and
add
clc
dec
incb
outsl
sbb
add
rcll
add
add
push
clc
push
aas
push
add
test
movsb
clc
sti
and
call
push
ret
test
adc
add
add
clc
xor
add
add
stos
inc
add
inc
clc
lret
pop
pushf
outsb
ret
clc
hlt
mov
fwait
jmp
sub
mov
jmp
mov
add
mov
or
jmp
dec
sahf
mov
adc
clc
mov
add
lods
lret
es
iret
cmp
das
clc
jbe
bound
add
pushf
insb
movsl
clc
jnp
cmp
stos
push
clc
adc
add
sbb
repnz
testb
dec
stc
mov
xor
add
mov
clc
cli
and
add
add
iret
bound
add
add
clc
inc
clc
and
add
add
mov
ret
clc
xchg
mov
js
repz
push
sbb
lea
add
out
js
icebp
ret
clc
add
add
mov
clc
or
cld
sbb
clc
cmp
daa
clc
lret
movsl
clc
inc
clc
jbe
clc
std
popa
add
jns
int3
add
add
gs
test
pop
xor
add
insl
pushf
addr16
lock
push
fwait
jmp
push
push
insb
jg
push
shr
mov
sub
clc
or
js
clc
roll
dec
stos
mov
hlt
cmp
or
aam
add
xchg
push
sbb
mov
and
add
add
fcomps
fcoms
add
lea
add
cld
ljmp
clc
mov
clc
inc
add
sub
clc
jbe
aam
clc
outsl
popa
add
insb
sti
ja
mov
clc
mov
inc
add
pop
aam
adc
add
clc
sbb
add
lcall
clc
je
jp
xabort
jo
add
add
mov
dec
xchg
mov
fs
cmp
pop
fwait
jmp
push
popaw
pop
sub
test
xor
test
cmp
add
fs
cmp
test
add
fwait
cwtl
jge
lods
cs
scas
ljmp
and
cmp
add
jge
out
add
add
add
stc
and
add
lret
mov
add
imul
and
add
add
aaa
int3
fildll
add
cmp
pushl
cld
push
ret
xchg
lea
mov
in
sub
add
fisubl
sbb
add
loope
insl
xchg
addr16
in
jnp
stos
mov
xchg
sbb
mov
clc
jge
add
jmp
fwait
jmp
pop
shlb
add
add
aaa
adc
add
jge
inc
clc
mov
add
add
jp
icebp
int3
stc
stos
or
add
bnd
add
xabort
inc
add
xor
add
add
clc
cmp
stc
in
dec
sub
jl
sbb
add
decl
popf
jb
add
ja
add
sbb
mov
incl
lods
sbb
add
dec
insb
xchg
out
rcrb
add
clc
or
push
add
loopne
cs
scas
nop/reserved
inc
clc
jne
or
lea
aam
int3
lahf
jg
enter
cli
mov
mov
mov
clc
xchg
insl
pop
clc
jle
push
cmp
mov
sub
daa
clc
pop
into
mov
clc
out
gs
mov
add
add
cmp
clc
push
and
add
add
ret
add
xchg
xabort
mov
fwait
jmp
adc
xor
add
test
cmp
fsub
clc
fisttpl
add
push
mov
xor
mov
pushf
pop
or
mov
lret
rcll
add
add
fcmovnb
clc
jb
add
clc
pop
and
add
clc
adc
push
add
js
clc
sbb
clc
push
add
xor
add
pop
out
pusha
add
lods
xor
add
jge
jns
add
dec
jb
add
jae
add
sbb
clc
jecxz,pn
je
int3
aas
xchg
ss
jmp
add
mov
aas
push
mov
fwait
jmp
sub
sub
cmp
jns
psubb
clc
ja
outsb
shlb
clc
inc
clc
repz
fdivl
push
clc
test
dec
int3
and
pop
xchg
inc
clc
sbb
mov
adc
add
add
mov
lahf
sahf
push
add
in
mov
pop
or
ret
test
test
clc
fists
jns
icebp
pushf
sub
insl
and
fldcw
and
push
ret
test
sahf
sbb
clc
data16
gs
pushf
out
negl
leave
sbb
add
xor
cmc
xchg
push
jmp
push
and
lret
add
cmp
clc
mov
clc
or
sti
data16
sbb
jmp
es
lea
clc
adc
xor
add
dec
test
sahf
mov
cmp
clc
adc
add
add
je
clc
and
add
out
out
push
cmp
mov
cld
push
ret
sub
cmp
jne
fwait
jmp
xbegin
lods
push
je
pop
test
push
add
gs
clc
dec
sbb
add
mov
xchg
mov
arpl
add
dec
inc
add
jne
dec
repz
fwait
jmp
or
scas
push
out
daa
clc
loopne
push
add
push
cs
imul
fwait
jmp
sub
fs
mov
or
add
add
scas
and
add
into
pushf
xor
add
outsl
or
arpl
add
push
add
mov
addr16
mov
add
xchg
dec
popa
add
pop
sbb
add
fcoml
adc
fneni(8087
clc
mov
clc
inc
clc
call
add
pop
sar
dec
cltd
stos
test
xbegin
loope
out
mov
sbb
add
add
roll
add
inc
add
fdivrs
out
cli
and
add
cmp
cmp
clc
sub
mov
pop
cmpsl
clc
jl
push
mov
clc
sbb
adc
and
cmp
lret
push
daa
clc
add
clc
xlat
mov
push
fwait
jmp
dec
add
xor
add
mov
insb
jo
add
clc
jbe
add
mov
and
aad
fs
cmp
inc
clc
jmp
stc
xchg
dec
lods
adc
adc
add
xor
clc
push
add
inc
clc
push
mov
fwait
jmp
cmp
xchg
sahf
leave
out
cmp
xor
add
add
mov
mov
fdivr
mov
and
add
inc
add
pushf
mov
add
lcall
push
es
adc
add
add
mov
jmp
push
movsb
popa
inc
add
dec
mov
clc
mov
js
jmp
sbb
dec
mov
clc
pop
arpl
add
clc
pop
es
inc
add
shl
clc
jns
cmp
add
sub
loop
jge
add
cld
push
inc
clc
gs
cmp
aam
clc
dec
push
das
addb
sub
clc
pop
adc
movsl
clc
nop
idivb
add
or
into
add
clc
add
add
push
add
sbb
xor
mov
cltd
frstor
add
clc
mov
xchg
sub
clc
punpckldq
add
add
jne
clc
dec
sub
int3
fdivr
fwait
adc
lcall
add
xor
add
clc
pop
mov
dec
aas
pop
mov
shlb
add
add
add
movsl
clc
dec
shrb
pop
aaa
adc
jbe
clc
daa
clc
push
mov
fwait
jmp
dec
subb
pop
cld
mov
add
addr16
out
fs
cli
mov
add
xchg
xor
add
push
hlt
cmp
or
add
mov
and
add
pop
mov
mov
add
rclb
pop
clc
inc
add
mov
xlat
cmp
repnz
add
sar
or
int
clc
insl
inc
clc
lcall
out
push
add
lods
mov
mov
clc
mov
clc
xabort
or
clc
jp
stc
and
add
or
pusha
add
or
push
add
aas
pop
leave
or
clc
mov
sub
pop
inc
clc
rclb
dec
fwait
jmp
sub
sub
pop
fwait
jmp
nop
cmp
sbb
add
add
pop
es
pop
mov
out
pop
clc
xchg
cltd
nop
cltd
mov
in
jbe
stc
adc
add
and
add
cli
mov
clc
shlb
sarb
je
push
push
xchg
cld
mov
pop
mov
mov
lods
cmp
sub
add
pop
push
test
cld
push
ret
push
scas
sub
test
jb
add
add
mov
pop
nop
repz
add
inc
clc
hlt
xchg
jnp
jno
add
add
sbb
and
add
add
movsl
clc
mov
add
imul
sub
xor
fwait
jmp
sub
sub
add
add
fs
cmp
clc
xlat
movsl
clc
inc
clc
inc
clc
add
add
rcrb
xbegin
dec
and
add
clc
es
xchg
push
add
inc
clc
lods
inc
clc
fwait
sub
clc
fimuls
or
jge
pusha
add
and
cmpsl
clc
data16
pop
clc
mov
push
push
add
mov
xchg
shlb
cmp
add
sbb
add
xchg
scas
mov
aam
cmp
lret
push
push
inc
add
insb
je
inc
xchg
mov
mov
repz
push
clc
mov
outsb
inc
add
xchg
mov
mov
ds
xchg
addr16
outsl
add
add
ja
add
testl
clc
jbe
icebp
sbb
add
add
popf
in
jno
add
loopne
cmp
insb
mov
add
xchg
mov
mov
cmp
lods
cld
es
mov
add
clc
xor
add
add
xor
add
mov
inc
clc
jecxz
pop
adc
add
add
pop
mov
decl
test
lcall
cli
lods
das
gs
mov
cmp
jb
add
jb
add
push
int3
mov
rcll
add
add
add
ret
clc
mov
add
repz
decl
cld
push
ret
adc
mov
clc
mov
mov
add
add
cmp
push
add
fwait
jmp
es
mov
jmp
nop
das
or
xchg
mov
pop
clc
scas
cmp
int3
or
add
js
add
sub
dec
lret
cld
push
ret
sahf
outsl
sub
clc
cmp
sub
ljmp
movzbl
rorb
outsl
xor
add
mov
stos
push
add
dec
imul
mov
clc
insl
push
inc
clc
in
xchg
aas
test
inc
add
xchg
xlat
mov
clc
cmp
lret
push
clc
cwtl
jg
add
std
jmp
sbb
adc
mov
jae
add
sar
div
mov
in
lret
cmp
clc
mov
add
mov
add
dec
and
add
clc
pop
sub
pop
pop
sub
clc
inc
add
jbe
jp
adc
add
repz
add
add
add
mov
iret
inc
clc
in
mov
and
add
add
ds
add
lret
jecxz
cmc
and
add
clc
or
mov
clc
sub
out
sbb
out
mov
adc
add
or
adc
add
or
lods
sar
clc
mov
test
clc
daa
clc
call
sbb
clc
dec
repz
jp
push
and
add
clc
sub
add
add
add
add
clc
xlat
jae
add
call
add
mov
add
clc
cmp
cmp
sbb
lods
ss
add
sbb
push
ret
mov
clc
cld
adc
add
add
add
aas
sub
adc
add
xor
add
mov
clc
popf
sub
add
iret
cmp
add
push
add
cld
push
ret
subb
add
es
shrl
cwtl
into
mov
cmp
mov
mov
fisubs
clc
mov
lcall
mov
out
cmpsl
clc
add
add
cmp
out
push
sub
add
mov
pop
clc
push
clc
mov
repz
ret
cmp
clc
mov
xabort
add
add
xchg
pop
mov
clc
push
mov
fwait
jmp
test
mov
clc
push
es
mov
and
inc
clc
xor
add
clc
xbegin
mov
cmp
add
cwtl
mov
clc
cli
xor
add
clc
sbb
add
xor
add
sbb
mov
lods
lods
dec
pop
or
stos
shll
add
test
inc
add
ljmp
fs
xchg
push
add
dec
pop
jne
clc
dec
mov
add
cmp
add
mov
add
clc
and
add
lcall
imul
addb
cld
jg
jae
add
xor
add
add
loope
sbb
push
add
jmp
add
jmp
clc
inc
clc
ficoml
adc
push
ret
jp
mov
clc
aad
mov
js
add
cmpsl
clc
sub
lods
sbb
clc
pop
hlt
inc
clc
cld
mov
add
rol
clc
loopne
aaa
loop
fwait
push
add
cld
ret
clc
sbb
add
pop
in
adc
leave
std
mov
mov
add
test
mov
add
sub
add
cmp
mov
cs
or
sbb
test
cmp
add
pushf
in
xor
add
add
clc
push
insl
xor
sub
add
addr16
pusha
add
stc
xchg
in
xor
lahf
shrl
add
fistps
testl
xchg
push
pop
icebp
inc
add
pop
jmp
test
add
add
add
scas
xor
mov
fistpl
pop
cmc
ja
unpcklps
fidivrl
add
out
push
fdivs
add
add
fwait
jmp
xor
test
clc
clc
push
sub
fwait
jmp
jge
or
push
lods
mov
notl
mov
clc
xchg
add
add
into
or
xor
clc
out
mov
clc
cmp
add
add
xbegin
and
pop
mov
dec
jmp
repnz
popf
add
dec
inc
add
ds
add
and
add
add
cli
inc
add
aas
insb
mov
xchg
pop
inc
clc
cmp
add
xchg
sub
pop
xabort
insb
mov
clc
xabort
xchg
test
add
scas
cmp
add
test
add
mov
clc
cmp
adc
add
ret
clc
pop
cmp
and
add
jne
fwait
jmp
pusha
add
mov
pop
js
add
dec
or
add
mov
clc
and
add
mov
enter
cmp
mov
bound
add
clc
cmp
loop
mov
mov
add
add
add
pusha
add
inc
add
jbe
xor
mov
ret
clc
pop
clc
dec
push
add
and
add
add
fwait
jmp
movsb
sub
add
add
dec
mov
jecxz
std
test
pop
or
clc
inc
add
sar
pop
sbb
sgdtl
add
add
and
add
mov
outsl
or
or
adc
push
jmp
adc
imulb
mov
cmpsl
clc
jo
add
clc
outsb
xchg
fisttps
cmp
sbb
clc
xor
cmp
shlb
and
add
add
jecxz
and
add
inc
clc
gs
movsl
clc
xchg
jge
or
cmp
clc
cld
inc
add
rorl
loope
popf
es
sar
sar
lret
clc
mov
jmp
mov
imul
jmp
je
clc
mov
add
ret
mov
mov
inc
add
dec
cmp
add
add
std
addr16
or
clc
hlt
or
sbb
add
xchg
es
push
add
rcl
popa
add
imul
clc
adc
add
xor
push
add
cs
clc
mov
aas
pop
pop
incl
roll
add
inc
or
popa
add
jmp
add
popf
cli
scas
mov
jle
repnz
jmp
pop
es
jns
clc
mov
clc
pop
cmp
add
add
imul
roll
inc
add
push
push
arpl
add
add
es
sti
xabort
cs
adc
clc
xor
add
dec
mov
std
out
jbe
ja
add
test
jp
lret
mov
xor
add
cmpsl
clc
insb
adc
add
in
insb
aaa
mov
js,pt
add
incl
test
das
adc
clc
cmpsb
clc
jno
add
or
sbb
clc
call
pop
clc
xchg
xabort
dec
in
and
sub
insb
into
pop
test
in
loop
jg
ds
or
add
or
cmp
aam
inc
clc
clc
mov
sub
xchg
seto
add
jmp
fwait
jmp
cmp
aas
xor
add
mov
clc
cmpsb
clc
pop
sub
add
sahf
popf
sbb
clc
and
add
sbb
clc
mov
add
lret
clc
mov
in
add
lods
mov
clc
pop
lcall
push
sbb
std
mov
sbb
leave
decl
add
add
test
clc
dec
add
add
fdivp
sar
fisubrl
leave
iret
sbb
das
outsl
incl
add
call
cwtl
popf
mov
add
mov
push
test
push
push
out
ficompl
add
shl
jo
add
add
pop
inc
clc
scas
xor
add
add
inc
clc
in
xor
add
jmp
clc
enter
fwait
jmp
push
pop
dec
scas
clc
jne
addr16
mov
add
pop
or
mov
sub
add
pop
lods
mov
jo
add
or
push
ret
jp
pop
sub
jle
add
mov
lcall
clc
add
add
clc
sub
jge
or
call
cld
push
ret
xor
or
clc
add
fisttps
inc
add
cld
push
inc
add
enter
movsl
clc
cwtl
fprem1
pop
inc
add
and
mov
fwait
jmp
je
clc
dec
jl
add
inc
clc
test
or
xchg
xor
add
clc
push
sub
pop
clc
in
xchg
mov
fwait
jmp
mov
push
or
dec
jb
add
inc
add
mov
jl
clc
cmc
test
push
enter
cld
mov
test
mov
and
add
add
clc
pop
push
sub
clc
jae
add
movsb
clc
bound
add
add
add
rep
cld
push
ret
mov
add
sub
inc
clc
cmp
in
hlt
sbb
add
adc
add
and
add
das
pop
clc
push
clc
outsb
xor
add
xor
add
rol
clc
icebp
stos
sub
clc
cmpsb
clc
loope
add
add
mov
cmpsl
clc
in
fbstp
add
or
mov
lret
clc
test
push
add
jl
pop
rcl
mov
xor
add
mov
sub
ds
mov
add
lret
sbb
xchg
push
jae
add
nop
imul
inc
add
cs
cmp
cmp
clc
adc
add
clc
push
sbb
jmp
mov
xchg
and
out
insb
fsubrs
add
cmp
rorl
fbld
add
ja
push
clc
fisubl
add
in
sbb
push
ret
jge
add
sbb
or
fisubl
add
sbb
mov
scas
sarl
jmp
das
mov
add
adc
add
jmp
lea
addr16
imul
pop
ljmp
stos
fs
lret
mov
pop
push
add
shl
cmp
cld
push
ret
inc
nop
mov
cmp
add
add
into
add
add
fldcw
ret
sbb
jmp
inc
clc
test
clc
mov
sub
cld
push
ret
movsb
es
xchg
test
cmp
jmp
add
mov
pop
pusha
add
fmulp
fbstp
mov
mov
fwait
jmp
sbb
dec
sub
clc
mov
mov
data16
mov
or
cs
add
xor
add
clc
xor
clc
fidivrl
movsb
clc
xor
add
lea
movsb
clc
stos
inc
clc
mov
add
add
clc
xchg
pop
jbe
clc
adc
add
loop
jb
add
pushf
jmp
push
data16
aas
in
sub
xchg
cmp
ljmp
pop
mov
clc
fnstcw
push
add
jb
add
bound
add
fmuls
test
add
test
cmp
add
movsb
clc
gs
cmp
cltd
and
add
add
dec
xchg
in
popa
add
mov
adc
cmc
dec
test
clc
mov
incl
inc
cmp
jmp
inc
dec
inc
fdivrl
add
clc
cwtl
sbb
cmp
fisubrl
jl
add
add
add
iret
mov
clc
lret
sub
cmp
clc
pop
or
daa
clc
ds
cmp
clc
cmpsb
clc
out
punpckldq
add
bound
add
add
pop
out
adc
add
bound
add
jbe
lock
dec
mov
add
insl
movsl
clc
aaa
sub
add
clc
cmp
mov
jo
add
clc
push
lcall
decl
mov
rorl
mov
push
fwait
jmp
das
xor
orb
mov
sbb
inc
add
adc
add
add
xbegin
clc
int
iret
jo
add
mov
fwait
jmp
or
clc
fistpl
mov
jmp
add
xabort
clc
fcompl
call
clc
outsl
pop
and
add
fisubrl
add
mov
mov
add
aaa
imul
jl
clc
mov
mov
clc
or
cmp
lret
xor
add
add
add
jnp
imul
loop
cld
push
ret
mov
daa
clc
cltd
dec
dec
mov
fdivr
mov
fwait
jmp
push
lcall
test
dec
into
mov
outsl
fwait
jmp
push
add
iret
in
out
and
xchg
xchg
popa
add
cmp
add
add
clc
movsb
clc
push
add
call
je
inc
add
mov
push
ret
je
xor
call
add
inc
clc
loope
fisubrs
clc
dec
inc
add
cmp
xbegin
inc
clc
leave
sbb
add
push
lods
push
arpl
add
add
xchg
call
clc
cmp
loop
ret
clc
pop
clc
inc
clc
fisttpll
aaa
out
cmp
clc
iret
and
add
int
add
push
add
jmp
push
add
xchg
fldt
add
mov
sub
push
pop
fldt
add
mov
add
add
add
clc
insb
fdivrp
clc
stos
data16
addr16
shll
mov
mov
cmp
cli
inc
add
in
lods
jnp
add
fwait
jmp
cmpsb
mov
ret
push
sarl
ds
clc
jmp
cmp
add
or
pop
test
xchg
fsqrt
mov
and
add
add
jns
pop
mov
mov
adc
dec
mov
loop
out
sub
ds
clc
jo
add
xchg
enter
cmp
insb
jl
bound
add
loop
jp
cmp
stos
fbstp
clc
push
or
shl
clc
xor
add
icebp
cmp
jns
add
xor
add
push
add
in
mov
add
cmp
pop
clc
or
clc
push
add
pop
fisttpll
clc
sbb
jno
add
out
adc
add
add
movsb
clc
push
add
cli
movsl
clc
lock
jne
clc
stc
addr16
cli
and
add
test
jg,pt
stos
push
add
pop
jp
sbb
xchg
lcall
add
mov
cmp
add
clc
into
sbb
imul
add
mov
inc
clc
data16
movsl
clc
sbb
cmc
jmp
das
pop
decb
clc
adc
add
xlat
mov
mov
mov
add
popf
add
mov
cmc
xbegin
test
cs
sub
clc
aas
jno
add
lods
cmp
clc
mov
fwait
jmp
sub
inc
add
xbegin
push
add
ret
clc
xlat
add
add
add
clc
iret
pop
mov
sub
loope
and
arpl
add
add
cmp
cli
sbb
clc
adc
add
xchg
icebp
lods
insl
pop
dec
jmp
repz
add
add
adc
dec
fisubrl
add
pop
fs
mov
add
sbb
ret
clc
cmp
ret
clc
lret
add
out
fnsave
add
pop
inc
add
adc
add
xbegin
push
add
add
add
clc
test
aaa
test
mov
aad
add
pop
das
mov
add
decl
inc
add
sahf
mov
xchg
adc
add
jns
or
clc
adc
add
clc
cwtl
out
add
cli
add
add
clc
push
lret
inc
add
aas
scas
das
cmp
mov
pop
cmp
stos
fiadds
clc
xor
add
clc
insb
pop
sbb
mov
fdiv
rcll
pop
jp
clc
mov
push
pop
and
mov
sbb
shrb
enter
push
add
das
cmp
int3
ss
pop
mov
out
iret
lods
imul
or
je
lock
gs
int3
std
sbb
xlat
fsub
clc
cli
movsb
clc
out
test
ds
gs
xor
add
xchg
pop
pop
xbegin
add
pop
push
sarb
mov
clc
xchg
pop
in
pop
enter
push
clc
cli
push
add
jmp
clc
add
add
clc
add
add
mov
cmpsb
clc
inc
add
add
add
leave
xor
fnstcw
jno
add
add
addr16
loope
mov
scas
sar
or
add
daa
clc
mov
add
dec
mov
add
push
add
cwtl
push
mov
fwait
jmp
push
test
clc
pop
or
jb
add
jg
and
ljmp
ss
mov
fisttpll
mov
clc
jne
mov
inc
clc
pop
xchg
mov
clc
fwait
mov
mov
or
mov
add
add
pop
scas
xbegin
pusha
add
xor
add
add
xchg
negl
rcrl
clc
xor
add
int
clc
ljmp
pushf
xlat
sub
jbe
jg
das
cmc
or
clc
mov
lcall
ljmp
rolb
fmul
stos
xor
add
xor
add
add
pop
clc
mov
clc
pop
jbe
clc
stos
jns
sbb
push
insl
pushl
popa
xor
clc
jo
add
push
add
inc
clc
mov
mov
mov
add
cmp
pop
pop
clc
sar
clc
inc
add
pop
clc
cmpsb
clc
adc
int
xor
add
loopne
call
push
ret
adc
cmp
mov
add
xabort
push
lcall
add
pop
data16
or
clc
push
push
fwait
jmp
jno
mov
sub
push
clc
sarb
add
leave
jns
enter
fstps
je
fwait
jmp
adc
add
add
in
mov
aad
add
mov
add
sahf
sbb
fcomip
mov
outsl
mov
jp
add
dec
and
add
aas
stc
fsubrl
inc
add
hlt
sub
clc
xabort
clc
repnz
clc
jmp
mov
xchg
test
clc
push
add
add
add
std
addr16
inc
add
loop
pop
jae
add
clc
frndint
xchg
add
add
sbb
push
in
push
ret
xchg
movsb
rep
or
sti
xbegin
iret
imul
je
add
lahf
push
jge
clc
jge
test
add
add
fs
mov
das
pop
clc
popf
push
ds
jle
clc
push
xchg
mov
clc
ds
test
notb
mov
push
push
cmp
cld
push
ret
push
xchg
cmp
aad
clc
loope
add
add
add
repz
icebp
dec
add
fucomp
jae
add
add
call
cmc
movsl
clc
jg
inc
clc
sub
clc
pop
clc
test
in
out
call
push
add
inc
add
dec
or
pop
jns
clc
mov
mov
and
enter
or
push
clc
mov
adc
add
jmp
clc
dec
and
add
aad
std
sub
cmpsl
clc
and
add
and
add
sub
push
js
mov
mov
jno
add
cs
and
loope
xor
add
sub
add
sub
sar
popl
add
add
sahf
mov
add
clc
inc
clc
iret
pop
clc
pop
clc
xlat
xchg
xchg
sbb
in
popl
add
es
lods
jns
xchg
std
sar
or
sub
hlt
xchg
shlb
mov
clc
jo
add
nop
test
push
cmp
add
xor
add
add
xor
add
mov
pop
push
popa
fwait
jmp
and
mov
js
clc
in
arpl
add
fwait
scas
cmpsb
clc
push
fldt
fst
jnp
add
ret
xor
add
in
jno
add
clc
decb
sub
clc
loopne
add
pop
in
cmpsl
clc
cs
dec
xchg
pop
mov
add
je
clc
arpl
add
lahf
mov
test
jo
add
jae
add
nop
cmpsb
clc
mov
push
ljmp
xchg
in
sahf
data16
mov
clc
stc
cmpsl
clc
jnp
test
popa
add
sar
adc
add
clc
xchg
push
mov
sahf
add
clc
sbb
push
ret
adc
sub
pop
clc
inc
add
or
ret
dec
jae
add
and
add
clc
test
pop
mov
cmp
scas
add
xchg
and
add
clc
xchg
xor
jmp
xlat
push
push
fwait
jmp
ja
mov
add
cwtl
dec
or
clc
arpl
add
ret
clc
sbb
gs
mov
jne
aad
or
lods
data16
xor
pusha
add
nop
pop
lahf
mov
aam
call
sahf
sub
icebp
and
add
clc
pusha
add
xchg
sarl
add
in
call
sub
int3
xchg
loopne
dec
and
add
mov
clc
sbb
imul
clc
sbb
enter
mov
sahf
imul
mov
xchg
jbe
addr16
xabort
add
fwait
jmp
inc
cwtl
jno
add
imul
clc
clc
cs
mov
add
push
test
iret
xchg
aaa
xchg
mov
xchg
mov
and
add
imulb
adc
add
mov
add
sub
cmc
or
add
add
add
add
add
add
clc
fwait
int3
xbegin
xabort
clc
dec
cltd
mov
addr16
call
jge
test
int
jl
sub
frstor
lcall
xchg
xchg
adc
add
and
add
add
xchg
sbb
push
xabort
jg
dec
bound
add
hlt
imul
adc
add
add
fs
mov
jle
add
jg
clc
mov
sar
lcall
clc
cmp
jns
clc
outsl
clc
adc
or
or
clc
or
jns
add
sar
clc
add
add
cmpsl
push
pop
lods
lods
lahf
pop
popf
cli
xchg
cmp
xor
add
fimull
adc
add
clc
push
sbb
sub
jmp
sahf
jnp
clc
adc
add
clc
sub
je
lods
mov
inc
clc
mov
stc
xchg
jae
add
and
stc
in
mov
sbb
xor
add
jl
cmp
add
add
scas
fsubp
clc
in
mov
add
popf
or
bound
add
add
dec
or
mov
fwait
mov
in
xor
add
add
add
cs
push
clc
fdivrl
add
jp
pop
fwait
jmp
pop
nop
das
adc
aaa
sub
mov
or
es
cmpsb
clc
iret
mov
cmp
clc
mov
clc
jecxz
cmc
pusha
add
scas
xor
add
add
sbb
or
xor
add
clc
push
daa
clc
add
jne
clc
gs
notl
int3
insb
xor
add
clc
jns
clc
sar
clc
xbegin
repnz
outsb
dec
mov
insl
addr16
mov
cmpsb
clc
fs
rolb
clc
mov
add
mov
repz
add
lds
mov
aam
adc
add
aas
cmp
pop
imul
gs
fs
in
shll
add
aas
xchg
iret
mov
sbb
push
add
pop
sub
cltd
dec
jns
repnz
add
movsb
clc
ds
gs
in
mov
clc
mov
add
or
aad
imul
clc
out
repz
add
lahf
negb
daa
clc
mov
add
fists
loopne
sbb
add
add
ffreep
clc
or
sbb
jmp
mov
pushl
in
arpl
add
clc
mov
add
lahf
lods
sub
daa
clc
cltd
loopne
repnz
add
clc
sbb
mulb
and
adc
add
dec
dec
xchg
into
or
insl
push
add
mov
add
mov
cmp
scas
push
pop
mov
gs
decl
popa
add
sar
dec
pop
clc
push
add
jo
add
gs
push
lret
adc
add
push
clc
and
add
dec
mov
mov
stos
mov
add
clc
adc
add
add
imul
clc
adc
jle
inc
add
push
add
jmp
insl
adc
lret
add
aad
add
leave
dec
pop
xchg
xor
add
add
sbb
push
ret
pop
fs
lods
push
dec
pushf
hlt
dec
mov
lcall
call
add
ret
clc
cmp
je
mov
shll
add
xor
add
fstl
lret
and
add
add
es
pop
xchg
mov
scas
jg
jbe
inc
add
push
call
fnstenv
clc
and
push
mov
add
fiaddl
push
testl
lcall
cmp
mov
clc
xor
iret
aaa
jbe
clc
fstp
fwait
dec
dec
out
movsl
clc
int3
xchg
mov
add
jnp
pop
scas
xbegin
push
mov
fwait
jmp
fs
lods
mov
clc
xchg
addr16
inc
clc
ljmp
insb
inc
clc
inc
clc
or
loopne
mov
cmpsb
clc
cmpsl
clc
push
sahf
mov
add
clc
out
in
lods
push
add
push
xor
pop
cmp
jecxz
or
add
test
stos
adc
add
add
add
push
push
ljmp
es
jns
pop
pop
adc
nop
popa
add
repnz
fldt
bound
add
clc
add
aas
iret
add
add
add
mov
add
adc
out
gs
fwait
mov
clc
mov
sub
push
add
enter
clc
jmp
sbb
clc
mov
clc
xchg
call
mov
jl
xchg
sbb
xchg
or
clc
inc
clc
lcall
clc
inc
add
inc
add
popa
add
shl
mov
push
jmp
cmp
mov
clc
xchg
jb
add
mov
inc
clc
cwtl
movsb
clc
sar
xchg
in
pop
aam
add
push
add
mov
nop
inc
add
mov
cli
pop
mov
lods
dec
bnd
ljmp
data16
shlb
inc
add
jp
clc
std
push
cwtl
xor
mov
fwait
jmp
aas
mov
add
sti
ss
add
adc
add
add
mov
xor
add
mov
sar
add
popf
cmp
add
dec
xabort
add
loope
add
add
clc
rep
mov
add
in
xchg
into
pop
stos
scas
int3
xchg
lea
cmp
clc
sahf
stc
xlat
mov
push
inc
add
movsb
clc
xlat
jns
clc
push
movsb
clc
fbstp
data16
push
aaa
and
add
push
xchg
mov
out
sahf
arpl
add
mov
push
clc
and
add
clc
stc
lea
mov
test
cmpsb
clc
arpl
add
add
push
icebp
or
out
in
idiv
adc
add
mov
xor
add
xchg
insb
and
add
repnz
mov
idivl
add
lret
clc
cmp
clc
movsl
clc
jge
clc
dec
enter
movsl
clc
or
mov
scas
and
add
clc
mov
push
clc
dec
cmc
ficompl
add
cmp
add
cmp
push
add
cmp
in
mov
lcall
add
nop
cmpsb
clc
or
pop
xbegin
sbb
xor
add
hlt
sar
sub
add
dec
xchg
mov
cld
or
ret
clc
test
dec
dec
jecxz
movsb
clc
out
fisubs
clc
or
add
test
mov
clc
pop
push
add
xchg
sarl
dec
mov
pop
mov
outsl
movsb
clc
sub
icebp
pop
pop
clc
loopne
mov
popa
add
xlat
iret
push
fmuls
xbegin
clc
mov
and
add
aam
pop
add
add
jmp
add
dec
and
inc
add
nop
aam
ds
cmp
pop
jmp
mov
sti
cmp
cld
cmp
test
add
clc
add
lods
jmp
add
add
cltd
inc
add
xabort
pop
mov
je,pn
int
pop
enter
clc
clc
lods
inc
clc
test
add
lock
in
mov
shr
out
iret
pop
cmpsb
clc
imulb
in
inc
add
pop
imul
mov
jmp
xor
add
add
add
popf
adc
add
clc
sbb
add
add
add
test
fwait
movsb
clc
daa
clc
sub
add
lret
mov
add
add
fisubs
ja
mov
add
fimull
daa
clc
mov
test
jmp
mov
std
cmp
xor
add
mov
lea
xor
mov
clc
cmpsl
clc
push
add
addr16
lods
mov
clc
sub
inc
add
cld
iret
scas
mov
sti
mov
add
add
cmp
cmp
add
clc
mov
clc
sbb
push
add
ds
fistps
sub
add
add
in
adc
add
add
mov
hlt
ss
pop
iret
pop
mov
repnz
popa
add
insl
inc
clc
xchg
cmp
xchg
das
aaa
test
jne
mov
cli
push
pop
lcall
clc
and
add
add
lock
clc
leave
jmp
jmp
mov
das
int
lret
push
add
data16
cmp
clc
adc
add
daa
clc
cmp
add
mov
and
add
clc
fs
push
xor
add
clc
cmp
aas
loope
das
add
add
add
lods
es
gs
in
or
fcmovb
clc
xor
add
clc
sub
add
cmp
sar
repz
in
fmuls
imul
add
cltd
cmp
and
add
xchg
xor
clc
and
add
cmp
clc
iret
cmp
pop
pop
data16
cmpsl
clc
mov
push
int3
and
add
lret
jae
add
add
clc
xchg
loop
dec
sbb
adc
add
adc
add
ret
clc
pop
clc
test
xchg
stos
or
cs
add
sar
add
popf
loop
dec
jb
add
inc
clc
or
clc
jne
loope
pop
jbe
clc
dec
lods
popf
sbb
dec
sub
xchg
aas
fcompl
clc
pusha
add
sub
sar
jl
shlb
add
clc
mov
clc
xor
iret
cmc
cmp
add
scas
pop
jecxz
and
add
pop
clc
imulb
mov
mov
and
fldl
testl
add
push
add
jl
hlt
push
iret
pusha
add
fldenv
add
pop
jne
cmp
push
inc
add
dec
push
add
push
add
xor
add
xor
add
clc
nop
mov
mov
clc
mov
clc
mov
test
ret
pusha
add
jno
add
clc
aam
push
or
dec
xchg
out
push
vcvtps2pd
jb
add
fistl
aam
add
and
fimuls
lret
mov
push
add
pushf
and
repnz
add
pop
aam
inc
add
pop
push
and
add
add
mov
clc
xbegin
add
jbe
clc
xchg
mov
sar
clc
outsl
lods
push
mov
std
or
stos
sbb
sbb
or
outsl
movsl
clc
dec
aad
clc
push
xor
arpl
add
ret
clc
cmp
clc
push
pcmpgtd
ror
cmc
test
sbb
jno
add
int3
inc
add
mov
add
jo
add
iret
xchg
clc
push
add
xchg
es
lea
add
inc
clc
pushf
and
add
or
data16
dec
jmp
xchg
cmpsl
clc
sbb
and
add
cs
dec
aam
lods
out
adc
add
xchg
inc
clc
pop
movsb
clc
xchg
xbegin
push
imull
cmp
aam
xlat
pop
sbb
ja
sub
clc
dec
xbegin
add
clc
clc
xchg
mov
add
xchg
or
pop
jbe
std
xchg
sub
je
sbb
add
pop
stos
xchg
jecxz
imul
clc
js
cmpsb
clc
sar
imul
xchg
adc
mov
adc
add
scas
and
and
add
jno
add
inc
add
inc
clc
jne
jo
add
add
adc
add
stos
inc
clc
es
mov
mov
clc
in
repz
add
add
jne,pt
ret
push
add
mov
leave
loopne
push
std
pop
clc
sbb
leave
jbe
clc
cmp
ljmp
cmp
outsb
push
add
test
mov
loope
addr16
pop
fsts
add
mov
jno
add
jb
add
add
add
out
cmp
mov
cmp
xchg
jno
add
or
clc
insl
cwtl
inc
add
repz
sbb
loope
and
and
add
stos
rcrl
mov
or
mov
add
mov
xor
add
push
int
clc
test
stc
and
add
jnp
lods
repz
add
cmp
add
ret
add
add
add
cmp
sti
js
add
sbb
or
mov
clc
std
add
add
insl
dec
out
mov
add
mov
mov
stos
mov
out
and
stc
nop
in
fdivl
add
clc
mov
jmp
mov
arpl
add
clc
insl
aaa
stc
dec
popa
add
inc
clc
test
xabort
mov
add
sahf
in
test
inc
add
ljmp
and
add
clc
test
add
add
call
push
add
addr16
mov
push
add
cmp
stc
cwtl
ja
pop
imul
sub
js
clc
std
sbb
add
or
add
pop
mov
clc
stc
jns
clc
pop
push
mov
popa
add
cmp
add
and
cmp
add
add
and
lret
iret
jl
mov
movsl
clc
adc
add
add
jnp
or
inc
add
jl
fsubr
pushf
cmp
dec
sbb
int
clc
fs
jge
and
add
cmp
clc
dec
sbb
clc
jno
add
test
mov
add
hlt
xchg
push
clc
cmp
in
mov
clc
mov
mov
fs
fwait
outsb
ja
add
fnstcw
rcrb
pushf
xchg
dec
mov
clc
mov
add
out
or
xchg
in
addr16
or
add
or
in
mov
mov
cmp
arpl
add
clc
cmp
add
or
nop
jno
add
or
add
clc
jg
xor
add
add
dec
and
cmpsl
clc
fstpt
mov
fsubrs
jbe
push
jp
cmp
clc
out
add
aad
mov
mov
add
add
mov
sub
lods
out
frstor
add
hlt
fmul
inc
clc
xchg
loopne
push
jae
add
mov
scas
sti
test
add
add
ds
test
stc
mov
push
add
cmp
clc
add
add
pop
clc
jmp
add
clc
imul
sub
cli
mov
add
fwait
xchg
aam
add
and
add
clc
addps
lahf
lret
stc
cld
rcll
loope
jnp
mov
stos
test
add
ret
clc
gs
mov
clc
mov
test
adc
pop
clc
cmp
sbb
adc
add
clc
ja
add
cmp
clc
scas
out
enter
push
fmull
test
ss
adc
add
cli
in
stos
clc
and
push
xchg
xchg
scas
or
clc
or
into
jecxz
lahf
mov
pushf
or
stos
pop
mov
cmp
cmpsb
clc
ret
add
add
hlt
scas
std
imul
clc
adc
add
add
fs
cmc
loope
outsl
lret
or
xchg
imull
or
fsub
clc
test
neg
bound
add
iret
add
add
add
cmp
add
cmp
out
xor
mov
out
push
adc
add
xchg
lret
adc
add
push
or
jne
add
push
xabort
add
lahf
xabort
lret
mulb
add
xchg
cmp
inc
clc
jg
clc
cmpsl
clc
jnp
push
add
mov
test
pop
clc
imul
ret
clc
mov
mov
clc
movsb
clc
add
add
jo
add
add
adc
add
jns
mov
inc
add
xabort
popf
cmc
dec
addr16
inc
add
fbstp
mov
push
add
and
add
clc
sbb
clc
dec
clc
jmp
add
inc
clc
clc
xchg
mov
fidivl
and
add
adc
add
add
shll
cmp
outsb
fs
mov
pop
push
or
clc
mov
xchg
in
dec
jb
add
clc
out
daa
clc
cli
pusha
add
xchg
xor
or
or
jb
add
and
add
and
cmp
clc
jl
sbb
inc
add
jle
clc
mov
shll
add
add
adc
cmp
cs
clc
clc
xchg
cli
aam
int
int3
push
add
loop
dec
xlat
repz
add
add
nop
mov
xchg
jb
add
inc
add
mov
cmpsb
clc
fcmove
in
lahf
cld
clc
ds
ja
cmp
clc
pop
mov
clc
xchg
push
sub
add
add
add
clc
sub
fistpll
ja
and
into
fnstenv
add
lea
clc
mov
clc
mov
test
mov
test
out
pop
aam
xor
add
mov
js
clc
add
add
cmpsl
clc
xchg
pop
push
clc
push
add
addr16
out
sub
sbb
fiaddl
add
sub
int3
lea
clc
xor
iret
lock
pop
sub
rorb
fs
jnp
ss
int
cld
xchg
mov
clc
clc
mov
int3
data16
dec
and
add
add
clc
mov
add
mov
fisttpll
mov
mov
add
inc
add
adc
imul
pop
iret
lret
or
add
add
addr16
lock
add
add
test
adc
add
pusha
add
pop
addr16
lods
popa
add
pop
faddp
clc
scas
mov
test
cmpsb
clc
lods
inc
clc
lods
scas
shr
pop
xor
add
int3
mov
sbb
ffree
clc
cs
jnp
popa
add
mov
add
add
sbb
mov
push
add
ret
add
fisttpl
pop
arpl
add
outsl
lret
jmp
mov
add
imul
add
sbb
add
addr16
dec
sbb
dec
push
adc
sarl
movsb
clc
jp
daa
clc
sahf
push
add
push
add
pop
and
add
dec
jge
clc
sbb
fwait
movsb
clc
cmp
lret
rcrb
shr
xbegin
jmp
movsl
clc
pop
loop
ret
add
pop
decb
push
sbb
in
add
add
add
and
push
dec
scas
popa
add
icebp
jecxz
mov
cli
inc
clc
dec
mov
into
jp
sub
xabort
add
outsb
ds
add
ja
in
adc
add
add
add
test
dec
fdivrs
add
stos
shll
add
push
shll
add
pop
pop
clc
mov
clc
jge
pextrw
xbegin
jle
sbb
repz
int3
jecxz
add
add
mov
mov
dec
or
shrd
sbb
fldt
sahf
push
add
icebp
in
mov
add
scas
out
push
add
mov
ds
add
popf
dec
dec
cmp
ret
clc
xabort
add
scas
scas
or
repnz
addr16
repnz
clc
mov
clc
mov
pop
jns
add
in
sbb
dec
and
add
jnp
clc
sar
fstpl
in
xchg
testb
shlb
add
enter
xchg
ja
cs
mov
shll
cmp
adc
clc
cmp
dec
stc
gs
js
xabort
lcall
clc
ljmp
addr16
outsl
outsb
push
jmp
cs
mov
sub
add
or
sti
push
bsr
add
dec
or
or
add
out
in
ret
clc
hlt
out
jp
cmp
clc
data16
inc
add
and
clc
lcall
clc
cmp
clc
add
ret
clc
add
add
add
add
xbegin
add
rorb
add
add
cmp
pop
and
add
clc
das
xor
add
std
ss
fsubr
test
sar
add
push
clc
out
sub
clc
lcall
repnz
clc
inc
clc
xchg
je
sub
add
je
add
add
clc
add
add
add
jb
add
xor
add
add
dec
gs
sub
clc
enter
ja
clc
fcmovu
pop
mov
cmp
std
adc
add
clc
or
xchg
jnp
fistpll
sar
jns
ja
pop
cmp
outsb
push
add
aaa
popf
push
add
add
clc
mov
or
add
add
clc
push
add
fsubl
cmp
add
das
cmp
sbb
add
and
add
add
or
mov
add
lods
cld
xchg
aaa
pop
xbegin
add
clc
test
pop
push
adc
add
clc
fdivr
cmp
add
pop
cmp
clc
mov
add
out
aad
mov
clc
xor
mov
sub
inc
clc
mov
int3
or
add
popf
adc
add
xor
add
clc
sar
clc
push
sar
enter
add
clc
ss
adc
push
dec
scas
sbb
popf
hlt
add
add
xor
add
nop
sahf
jno
add
add
xchg
loopne
sar
clc
mov
or
add
leave
cld
mov
lret
add
xchg
push
jge
push
add
mov
jmp
clc
push
imul
into
jmp
adc
add
clc
jo
add
add
clc
mov
lcall
add
sbb
clc
add
cmp
add
add
or
sar
data16
inc
clc
sub
scas
jbe
sub
testb
jae
add
clc
gs
cmp
pop
adc
add
or
clc
xchg
adc
xchg
mov
lods
cmp
pop
fcoms
adc
add
add
sbb
clc
cmp
mov
pop
mov
shll
add
mov
sub
or
divb
add
in
popf
aaa
mov
ret
clc
jbe
in
leave
jmp
push
add
jae
add
aad
mov
ds
add
jno
add
jns
inc
add
pop
inc
add
clc
pop
imul
popa
add
xchg
xrelease
add
xlat
mov
or
loope
popa
add
jne
add
add
test
ljmp
js
clc
arpl
add
inc
add
adc
add
add
xor
and
out
mov
xbegin
clc
outsl
repz
jnp
lock
adc
call
fs
mov
add
add
pop
clc
add
add
scas
jnp,pn
clc
mov
setbe
rcl
cltd
icebp
outsb
mov
sub
and
add
add
fwait
xchg
icebp
fcompl
or
clc
lret
jl
aas
add
clc
or
test
clc
filds
add
loope
scas
loopne
pop
out
cmp
hlt
inc
clc
jge
mov
outsl
jecxz
data16
idivb
mov
stos
mov
xchg
xchg
popa
add
pop
ret
add
popa
add
dec
fsts
add
inc
add
inc
add
lods
out
cmp
clc
ficompl
clc
ds
out
xchg
or
push
jg
aaa
xchg
popf
cmp
sar
add
dec
inc
clc
sbb
clc
xchg
pop
addr16
mov
sub
add
push
add
imul
roll
add
and
add
nop
mov
clc
inc
add
cli
adc
add
cmp
clc
stos
decb
mov
pop
out
adc
add
pop
cltd
and
and
mov
test
jnp
dec
clc
inc
add
ss
push
fs
lahf
call
inc
add
jb
add
xchg
loopne
push
or
add
jmp
clc
add
add
cmp
clc
xchg
cwtl
ljmp
mov
add
iret
cwtl
mov
clc
and
add
clc
dec
cmp
add
add
mov
aam
clc
mov
add
prefetch
pop
jl
push
clc
sub
mov
xchg
inc
clc
in
mov
movsl
clc
pop
ret
clc
cmp
lcall
cmpsl
clc
cmpsb
clc
add
add
add
inc
add
inc
clc
xchg
fldenv
add
cmp
cmpsl
clc
dec
jns
leave
push
jmp
clc
ds
nop
sub
ds
add
add
add
push
dec
cld
mov
add
rcl
pop
clc
dec
dec
iret
jo
add
dec
push
xor
add
lock
in
xchg
loop
push
add
inc
add
sub
jge
cmp
fnstenv
jo
add
mov
ljmp
adc
add
clc
xchg
push
clc
out
pop
or
fldcw
and
int3
sbb
pop
pop
xor
test
clc
push
add
adc
add
jecxz
stos
sub
inc
add
js
clc
movsb
clc
dec
pushl
add
sub
add
mov
jge
clc
outsb
push
clc
mov
sar
data16
xchg
add
int3
dec
inc
add
pusha
add
mov
add
xor
add
mov
clc
iret
inc
clc
cmc
lods
dec
jp
clc
lods
mov
clc
dec
cmp
cmp
inc
clc
sbb
add
shrb
fsts
add
or
data16
xbegin
add
or
clc
mov
mov
bound
add
cld
movsl
clc
mov
imul
add
sub
fcomps
mov
mov
and
dec
sub
xabort
fisttpl
imul
es
xchg
jns
pavgb
sub
clc
push
arpl
add
clc
add
add
adc
add
add
push
xchg
xbegin
and
add
repz
jns
clc
and
add
clc
push
adc
add
add
mov
add
jecxz
call
cmp
sub
mov
adc
add
clc
gs
push
add
cmp
enter
xlat
xor
add
je
sbb
jge
add
cmp
or
clc
lret
pop
clc
fmuls
add
clc
sbb
stos
enter
xor
pop
cmp
dec
shlb
add
int
or
push
clc
cmpsb
clc
imul
pop
inc
clc
cmp
clc
loop
jg
sub
add
mov
clc
or
clc
aad
add
icebp
sub
loope
sti
lahf
gs
mov
call
sarb
call
test
jbe
xor
add
and
lret
test
cli
jb
add
add
jae
add
xchg
cmp
out
push
add
add
and
add
clc
aas
sub
clc
lahf
int3
ja
addr16
mov
int3
jg
and
add
sbb
clc
jmp
fwait
test
add
add
mov
pop
rcrb
cmp
cmp
add
dec
fcomi
cmpsl
clc
mov
int3
cmpsl
clc
push
jne
clc
repnz
clc
xlat
out
bound
add
or
clc
in
jg
jecxz
out
or
clc
lea
pop
or
clc
cmc
push
add
cli
inc
clc
jecxz
cli
jle
push
cmp
fadds
or
clc
fcoml
add
scas
sarb
shlb
xor
add
adc
add
fldcw
jnp
xor
sbb
clc
mov
sbb
clc
ss
lods
je
xchg
dec
and
add
add
sbb
enter
or
lea
push
add
push
add
or
mov
xor
add
clc
popl
add
clc
clc
loop
sub
add
cmp
clc
mov
mov
shll
add
clc
and
aaa
incb
sub
leave
jg
clc
icebp
push
add
stc
je
das
daa
clc
mov
jg
adc
add
call
clc
gs
and
add
clc
jl
test
cld
ja
push
add
sahf
int
clc
inc
add
mov
mov
clc
outsb
fiaddl
clc
sbb
scas
or
fsubrs
jne
clc
sbb
pop
clc
mov
fs
ds
sub
add
enter
pop
mov
sbb
clc
push
popf
xor
add
popa
add
and
add
xor
into
jle
add
mov
add
mov
lods
jl
add
pop
movsl
clc
add
add
adc
add
and
add
jg
clc
iret
mov
add
aas
pop
movsl
clc
mov
add
hlt
xbegin
mov
not
rcll
add
nop
or
clc
jge
clc
push
test
mov
add
adc
add
jle
clc
jge
aas
push
sar
js
add
into
into
addr16
mov
out
popa
add
and
stos
cmp
stos
mov
pop
clc
mov
ljmp
adc
add
sub
add
add
xchg
sahf
ret
scas
test
push
inc
add
adc
add
add
sbb
popf
scas
imul
cs
and
add
add
jle
lret
ficomps
inc
clc
mov
bound
add
test
mov
clc
mov
add
int3
insl
sbb
add
sar
data16
mov
push
aas
iret
es
dec
ret
clc
jnp
sub
bound
add
push
add
movsl
clc
ret
clc
inc
add
lods
jmp
cmpsl
clc
sub
add
add
adc
add
clc
fwait
push
bound
add
add
add
mov
fnsave
test
enter
push
nop
jg
add
xchg
outsb
jbe
aad
mov
icebp
test
rorb
icebp
mov
add
clc
pop
clc
rorb
add
add
add
add
mov
clc
mov
clc
xchg
push
leave
xor
add
xor
add
push
add
scas
dec
jno
add
mov
add
lods
mov
sahf
aas
mov
clc
xchg
nop
cmp
add
pop
pop
jbe
fsubl
add
clc
and
lcall
clc
and
add
arpl
add
xor
add
fisubl
pushf
mov
push
add
add
add
into
push
add
pop
mov
push
mov
cltd
and
cmp
mov
lret
addr16
or
das
mov
lock
mov
mov
cwtl
out
int
loopne
jae
add
scas
pop
push
bound
add
sub
pushf
sbb
add
push
out
or
add
or
clc
ret
mov
or
nop
sahf
fiadds
xchg
jns
jne
sub
clc
mov
iret
jmp
clc
adc
add
clc
sbb
add
aas
loope
jge
aad
sar
pmullw
cli
scas
cmpsl
clc
dec
cltd
stos
cmp
clc
add
cmp
clc
in
scas
add
add
popa
add
gs
pushf
or
clc
addr16
dec
pop
arpl
add
add
int
test
clc
push
mov
popf
cltd
sub
vrcpps
add
push
jo
add
inc
add
xor
in
and
lahf
dec
inc
add
pop
clc
dec
dec
or
imulb
aad
mov
sbb
xchg
fsts
add
rorb
fimull
add
jo
add
imul
fiadds
dec
xor
add
add
clc
mov
add
daa
clc
div
xlat
js
sub
clc
push
add
fdivr
add
add
clc
mov
jbe
mov
clc
xchg
add
add
add
xor
add
aaa
je
add
inc
add
inc
add
data16
inc
clc
repz
add
pushf
repnz
clc
arpl
add
mov
sub
out
mov
mov
add
add
bts
cmp
sbb
xchg
mov
repnz
inc
clc
jp
add
add
aaa
jae
add
sbb
sbb
add
add
clc
cwtl
cli
jle
add
inc
clc
cmpsl
clc
push
clc
xchg
icebp
push
clc
es
je
popa
add
sahf
xchg
imul
add
adc
add
and
add
loope
in
pusha
add
cmp
clc
iret
loopne
daa
clc
and
clc
mov
gs
cmp
add
xchg
out
lcall
arpl
add
cmp
add
adc
jecxz
das
mov
clc
or
clc
jmp
adc
shl
dec
xchg
xor
add
add
jnp
fsubs
imul
add
arpl
add
add
mov
bound
add
xchg
sub
clc
insb
aam
jp
dec
fildl
xchg
sub
push
add
and
add
daa
clc
stc
cmp
ret
clc
cmpsl
clc
inc
clc
dec
adc
add
dec
add
add
daa
clc
pop
cmp
and
add
imul
mov
add
clc
pop
mov
cltd
mov
jmp
inc
clc
cmpsb
clc
shrl
cmc
repnz
mov
imull
mov
scas
xchg
fisubl
push
clc
clc
mov
inc
clc
iret
fisttps
std
xchg
add
xchg
out
sbb
clc
push
js
push
add
nop
pop
pop
loope
in
and
dec
mov
test
mov
add
jns
mov
out
fmuls
add
hlt
int3
test
nop
inc
clc
js
clc
in
outsl
add
pop
mov
add
aad
test
fcmovb
clc
lcall
add
mov
add
into
cmp
cmp
add
dec
in
nop
jnp
clc
mov
add
out
inc
add
test
mov
mov
sub
insb
pop
mov
add
adc
add
mov
add
incl
inc
add
and
add
aaa
addr16
mov
clc
and
outsb
adc
fwait
lret
clc
mov
push
add
push
mov
add
jl
scas
xchg
jecxz
mov
dec
sahf
das
lret
add
fwait
adc
add
stos
fidivrl
mov
out
mov
lcall
clc
nop
out
cmp
add
mov
add
cmp
add
add
xchg
mov
or
cmp
in
filds
add
or
insb
xor
add
movsb
clc
js,pt
clc
aad
dec
or
cltd
scas
fdivl
clc
push
add
add
sub
or
inc
clc
ds
xor
add
or
and
add
clc
mov
nop
cmpsb
clc
fcompl
pxor
mov
clc
jne
or
cld
adc
add
jb
add
or
jg
xor
add
clc
decl
int3
in
xor
das
fwait
xchg
cmp
inc
add
mov
mov
add
adc
add
clc
mov
clc
fdivr
sar
add
cmp
inc
clc
add
add
add
mov
pop
add
imul
dec
sarb
clc
xor
add
xchg
push
cmp
roll
jae
add
add
cmc
jbe
cmp
sbb
ret
clc
jno
add
jecxz
inc
add
and
add
add
xchg
mov
clc
icebp
inc
clc
sbb
add
call
clc
inc
add
push
ds
clc
pop
mov
push
movsb
clc
test
mov
clc
je
stos
mov
push
out
and
add
clc
fisubl
pop
leave
sbb
std
mov
clc
jb
add
push
add
adc
ret
clc
cmp
or
loopne
cld
clc
stc
loopne
cmc
gs
out
in
mov
inc
clc
test
inc
add
mov
icebp
lret
add
or
xchg
repz
dec
lock
popf
fxch
cmp
aaa
push
faddl
fistps
lahf
push
mov
pop
jno
add
ret
clc
jg
sbb
add
sbb
pop
mov
ljmp
adc
add
out
jne
insb
or
jge
jno
add
jp
std
inc
add
mov
sbb
clc
pop
push
add
cmp
sub
cmp
clc
roll
push
std
push
add
xbegin
clc
sbb
icebp
inc
add
fwait
mov
pop
popf
nop
fisubs
clc
imul
test
inc
clc
push
add
clc
or
add
add
inc
add
pop
or
rcrb
jnp
add
in
cmpsb
clc
jns
pushf
sub
add
jge
data16
clc
sbb
xchg
and
movsb
clc
lock
add
sahf
sub
xchg
adc
add
jmp
add
js
clc
rcll
shll
add
data16
pop
mov
add
clc
or
add
add
add
test
push
push
inc
clc
aam
test
push
xor
add
dec
aas
adc
add
scas
ljmp
xchg
push
dec
inc
add
push
add
pop
in
test
add
fdivrs
insb
jecxz
mov
jle
add
add
mov
movsb
clc
dec
pusha
add
xchg
int3
add
add
add
aam
test
in
lret
clc
xchg
sbb
fucomp
dec
leave
shlb
jmp
clc
mov
add
rcrb
lret
or
clc
xchg
cmp
clc
inc
clc
jmp
repz
add
or
shl
clc
push
add
stos
cmpsb
clc
pop
add
add
loope
fisubrs
rolb
clc
jecxz
and
add
clc
ja
adc
add
cmp
shll
mov
test
pushf
lahf
mov
jbe
ret
clc
mov
mov
inc
clc
cli
mov
add
jmp
inc
clc
adc
arpl
add
cld
sbb
jno
add
clc
lret
jle
clc
mov
pop
jae
add
add
add
mov
add
jns
inc
add
fwait
mov
jecxz
gs
daa
clc
adc
add
pop
mov
xchg
jmp
sar
add
fwait
aas
lods
jmp
enter
cs
pop
sub
jne
clc
outsb
inc
add
push
cmp
xchg
jno
add
add
scas
cmp
jl
imul
mov
mov
mov
clc
mov
and
dec
pop
clc
cmp
popf
stos
into
mov
add
or
add
add
outsb
lea
sahf
test
and
add
mov
mov
clc
push
clc
fnstsw
add
add
movsl
clc
incl
clc
ljmp
add
nop
and
add
cmpsl
clc
cwtl
jae
add
aad
stc
cmc
js
popf
es
gs
jo
add
ss
sub
fwait
push
int
dec
jle
icebp
ror
out
jbe
inc
clc
fcompl
or
cld
sbb
add
fidivrs
pop
pop
gs
fsubp
clc
xor
add
pop
pop
xor
clc
rdseed
xbegin
fildl
add
clc
fsts
clc
ret
clc
jno
add
xor
add
sub
jecxz
fidivl
clc
xbegin
clc
rolb
add
clc
mov
mov
std
push
add
cmp
mov
clc
and
add
mov
add
into
xor
add
in
xchg
mov
int3
cmp
add
dec
push
add
mov
je
inc
add
pushf
mov
jg
mov
stos
addr16
aaa
out
arpl
add
hlt
push
xor
add
add
bound
add
clc
pop
dec
push
inc
clc
xlat
dec
movsb
clc
cld
sub
cmp
inc
add
neg
ss
clc
jecxz
xor
add
and
add
clc
js
inc
clc
push
add
scas
in
jb
add
clc
imul
pop
jg
sar
clc
movsb
clc
movlps
add
add
jb
add
data16
add
data16
pop
sbb
clc
cmp
mov
adc
xor
add
mov
mov
aam
popf
int3
mov
test
mov
clc
hlt
mov
adc
add
adc
push
clc
dec
std
gs
mov
sub
jecxz
inc
clc
out
jl
or
in
add
test
and
add
clc
inc
clc
dec
clflush
cs
push
jo
add
and
ljmp
mov
cmc
adc
add
insb
cmp
pop
xchg
cwtl
pop
mov
xlat
in
cmp
icebp
fwait
pop
xchg
lret
dec
mov
je
clc
leave
jecxz
pop
clc
call
add
xchg
push
clc
and
add
shr
adc
add
clc
xchg
insb
and
sbb
fisttps
cmpsl
clc
fnstenv
jns
mov
pop
jl
jno
add
clc
sar
xbegin
xor
add
clc
pop
stos
add
add
nop
rcll
add
inc
add
repz
adc
add
jecxz
stos
cmp
add
cltd
mov
clc
mov
add
ret
clc
bound
add
pop
pop
push
aaa
das
inc
add
pop
sbb
push
add
lcall
push
push
add
dec
push
cmp
add
jp
popf
and
ljmp
hlt
sar
clc
pop
and
add
pop
mov
sbb
cs
pop
jge
sbb
add
add
leave
imul
std
lahf
sbb
enter
and
add
push
add
cmp
je
shr
sub
clc
or
clc
fs
sub
ret
clc
adc
add
clc
adc
clc
add
add
add
mov
fdivrs
jmp
add
xchg
int
clc
jl
jge
std
sub
mov
xor
add
add
add
hlt
int
mov
fcomip
loopne
jbe
add
pop
sbb
in
dec
mov
dec
cld
fucomp
push
xlat
and
test
clc
jb
add
add
add
clc
mov
push
add
in
cmp
dec
aam
cwtl
call
push
inc
add
test
rcll
jae
add
dec
aas
mov
stc
pushf
outsb
mov
add
clc
push
xchg
sar
cmp
xor
testb
add
loop
and
add
mov
cmp
cmp
jb
add
stc
mov
add
aad
jnp
xlat
sar
into
mov
add
mov
pop
push
add
xchg
xabort
add
push
add
dec
or
clc
dec
jp
and
inc
clc
mov
mov
repz
add
clc
mov
cs
lcall
insb
in
push
pop
and
add
pop
dec
push
add
insb
cmpsl
clc
daa
clc
pop
test
inc
clc
dec
mov
add
sar
lcall
dec
adc
add
arpl
add
loopne
mov
fcmovu
icebp
test
ljmp
sub
mov
add
dec
mull
clc
cmp
clc
repz
clc
cltd
lret
xchg
popa
add
dec
jns
sbb
jbe
clc
pop
mov
or
clc
jp
insl
scas
mov
mov
clc
cmp
add
add
push
add
cmpsl
clc
inc
add
sub
push
or
rorl
push
add
xor
add
ret
clc
loop
or
dec
ret
clc
jge
clc
and
add
or
push
push
add
inc
add
mov
add
jmp
clc
leave
lret
int
xchg
lods
std
pop
fsubr
add
data16
mov
mov
mov
mov
clc
mov
add
xor
add
ljmp
add
clc
xbegin
clc
dec
fidivs
adc
bound
add
notl
mov
clc
cmp
clc
and
add
je
clc
int
rclb
int
pop
sbb
jmp
xor
add
stos
cmp
add
jo
add
add
in
out
mov
sbb
mov
clc
ret
lret
jl
cmp
scas
ret
clc
pop
sub
imul
pop
testl
outsl
push
loop
pushl
sahf
sbb
dec
cmp
and
add
xchg
cmpsl
clc
arpl
add
fstl
add
inc
clc
mov
xchg
cmpsb
clc
cmp
jne
fsubl
clc
jecxz
cmp
add
test
jle
clc
mov
clc
sub
jp
jp
mov
clc
lods
pop
add
add
mov
je
xor
add
push
sahf
lock
leave
adc
clc
mov
add
push
clc
inc
clc
sub
cmp
add
notl
add
pop
clc
xor
add
jmp
in
push
add
mov
ss
test
cld
and
fsubrs
cld
clc
dec
mov
clc
cmp
mov
add
mov
mov
stc
outsb
dec
adc
add
imul
jecxz
test
call
jb
add
aaa
mov
enter
jno
add
cmp
nop
fistl
add
ret
clc
in
testb
movsb
clc
mulb
clc
dec
cmp
sahf
fs
mov
test
mov
clc
jns
lahf
push
test
jne
add
cmp
clc
inc
clc
mov
jmp
mov
sub
add
add
dec
sbb
cmp
add
stos
popa
add
nop
sar
clc
adc
push
add
aad
jecxz
das
adc
negb
dec
pop
clc
pop
arpl
add
dec
jno
add
add
in
std
mov
ret
clc
in
mov
add
bound
add
sub
pushf
movsb
clc
test
outsb
sahf
pop
jge
mov
clc
pop
fsts
fstl
add
clc
push
push
jbe
add
push
popf
in
mov
jle
pop
scas
add
dec
shlb
add
sar
cmp
or
sbb
mov
cmp
add
lods
in
adc
add
add
jne
clc
sub
dec
xor
add
clc
adc
add
jae
add
or
fs
call
clc
sahf
sub
cmp
lea
clc
dec
mov
add
cmp
push
add
shrl
sub
clc
jp,pt
pushf
mov
iret
dec
lock
out
or
push
movsl
clc
xabort
add
cmp
imul
shr
dec
fnsave
add
add
clc
xor
mov
addr16
dec
cmp
aaa
lret
rcll
add
fcmovnbe
pushf
xor
js
inc
add
nop
or
clc
sub
xchg
push
hlt
das
aad
add
sbb
loop
sar
jl
xor
add
clc
call
add
mov
clc
mov
cmp
cld
notl
add
push
clc
fnstenv
add
rol
clc
vcmpps
imul
add
and
add
cwtl
mov
pmulhuw
jg
add
icebp
lret
mov
push
add
xchg
je
jno
add
pop
lock
clc
lea
clc
mov
daa
clc
inc
clc
jae
add
pusha
add
sub
clc
inc
add
loop
adc
add
jb
add
clc
cmp
inc
add
sbb
clc
stc
fnsave
add
mov
clc
fmulp
movsb
clc
ss
ja
jo
add
rorl
xchg
lcall
add
fcomi
xbegin
push
push
xchg
iret
sub
push
std
mov
jns
popf
pop
adc
add
jg
adc
add
add
inc
add
scas
push
stc
add
or
push
stc
mov
add
clc
cmpsl
clc
and
add
add
aam
push
lods
inc
clc
and
add
lods
dec
aaa
adc
add
add
loope
sbb
dec
clc
das
lea
clc
dec
or
push
push
mov
mov
daa
clc
mov
idivb
jb
add
cmpsb
clc
sar
ljmp
add
cs
clc
sbb
movsb
clc
nop
shrb
repz
mov
imulb
xchg
jne
pop
out
cmp
clc
mov
clc
push
sahf
pop
cmc
xor
add
mov
out
cmp
test
leave
cld
fisubl
clc
xchg
cmp
clc
sbb
clc
lods
mov
sbb
clc
xlat
push
push
into
imul
add
js
insl
xchg
pop
push
pop
mov
test
clc
or
add
out
cmp
pop
xor
add
lcall
pop
clc
rorb
mov
and
imul
lahf
or
stos
and
add
clc
pop
adc
outsb
add
add
add
add
clc
test
xor
add
jge
ss
adc
add
add
or
clc
and
add
dec
lcall
add
stc
inc
clc
dec
sar
ds
jmp
or
clc
xchg
repnz
dec
jg
clc
pushl
aad
add
sub
jns
add
pop
into
xchg
jp
clc
push
add
push
add
xchg
das
sbb
hlt
jbe
sbb
xabort
insl
pop
jge
and
add
cmpsb
clc
xbegin
add
mov
clc
sar
jmp
stc
mov
lcall
push
mov
dec
xor
add
fcompl
hlt
loope
push
ja
jno
add
ds
leave
add
add
clc
mov
mov
sbb
clc
mov
mov
jle
dec
jno
add
in
mov
mov
pop
mov
push
add
test
pop
push
ljmp
sbb
add
cmc
adc
add
add
add
sub
ret
popl
clc
es
lahf
adc
pcmpgtw
sahf
int3
in
movsb
clc
jg
pop
stos
mov
add
add
cmp
sub
decb
add
jmp
clc
in
mov
add
add
or
js
mov
xor
add
clc
xchg
and
add
add
pushf
xabort
clc
insl
or
clc
sub
leave
mov
and
add
aad
clc
cmp
mov
mov
clc
je
clc
or
add
loop
sub
pop
clc
cli
sar
clc
dec
outsl
cmp
clc
sub
or
cmc
in
mov
cmc
push
cmc
jecxz
bound
add
add
bound
add
sahf
testb
push
add
repz
jo
add
jl
sbb
xchg
mov
mov
push
loopne
sar
clc
xchg
outsb
stos
mov
clc
bound
add
clc
fucomp
jns
jmp
inc
clc
or
pop
inc
clc
sub
loopne
pop
psllw
fstpl
pushf
inc
add
ret
adc
sti
cmp
add
nop
popa
add
mov
lods
xabort
and
add
clc
xchg
jb
add
in
sar
scas
cmp
add
cmp
pusha
add
cmp
clc
hlt
inc
add
sar
test
inc
add
xchg
fs
xchg
dec
adc
add
xchg
push
clc
xchg
mov
sar
fidivrs
adc
clc
cmpsl
clc
sbb
jp
xchg
and
add
clc
sahf
in
or
clc
cmc
mov
daa
clc
stos
jle
fprem1
inc
add
aam
xchg
mov
test
clc
pop
cmp
mov
clc
cmp
add
xor
clc
push
repz
xchg
dec
pop
mov
clc
or
clc
scas
cltd
test
add
add
cmpsl
clc
fs
popl
add
fdivs
add
test
mov
clc
xchg
repnz
lods
pop
jne
std
xor
add
sbb
mov
das
and
clc
add
add
clc
lock
divl
jns
pop
adc
add
pop
push
rcrl
clc
enter
xor
add
clc
cmp
add
clc
adc
add
insb
xabort
jns
clc
fidivl
add
jb
add
mov
ss
clc
sahf
mov
mov
clc
pushf
scas
in
mov
in
sbb
scas
shll
xor
add
clc
js
ljmp
in
sub
xchg
inc
add
pop
int3
dec
stos
mov
cmc
push
inc
add
getsec
add
add
add
aam
enter
add
test
call
xchg
cmp
clc
lret
clc
or
cwtl
xor
add
cmp
add
movsl
clc
ffreep
clc
lock
add
stos
mov
test
mov
mov
clc
dec
or
imul
imul
fwait
cmp
xchg
jne
mov
inc
clc
cld
fwait
mov
clc
jae
add
testl
jle
clc
mov
mov
push
add
add
cltd
mov
xchg
mov
out
addr16
leave
xchg
mov
add
cmp
clc
inc
clc
sahf
stc
cltd
ret
clc
or
clc
jnp
push
shll
aas
cmp
sub
jae
add
lods
lcall
lock
mov
cs
bound
add
push
mov
add
pop
out
mov
clc
inc
add
popf
pushf
dec
and
add
jge
sbb
push
push
add
ret
clc
out
add
mov
push
add
sbb
xabort
clc
in
push
sar
xchg
pusha
add
data16
cmp
clc
xor
add
fmul
pop
xchg
and
add
xabort
cmp
shlb
mov
dec
inc
clc
aas
lods
mov
mov
sar
mov
adc
push
mov
clc
mov
movsb
clc
aam
push
add
lret
cmp
cmp
clc
sbb
add
clc
ja
clc
cmp
insl
lcall
xchg
inc
add
push
pop
push
cmp
clc
mov
clc
ljmp
movsl
clc
cs
mov
clc
sub
mov
xor
add
add
add
clc
cmc
cmp
cmp
clc
test
xchg
add
add
mov
testl
add
aas
add
ficoms
add
clc
insl
or
push
clc
imul
lea
add
mov
add
clc
rcll
inc
add
dec
inc
clc
lcall
clc
cmpsl
clc
loope
mov
sub
mov
clc
inc
add
lret
pop
sub
repz
add
clc
jg
clc
ret
clc
popf
cmp
add
mov
clc
push
in
cmp
mov
clc
cmp
test
lock
inc
add
imul
add
add
push
add
sar
out
add
add
clc
xchg
cli
fcomps
mov
test
dec
faddl
add
ss
outsb
insl
jnp
xchg
in
pop
in
xor
add
jg
jae
add
jmp
add
push
add
rorb
xbegin
or
pop
xor
cmp
mov
aaa
or
clc
data16
mov
add
add
sub
cmp
fwait
mov
clc
sbb
jmp
add
add
in
stos
in
aad
scas
call
lcall
add
clc
call
add
mov
cmp
jns
int
xabort
mov
add
jmp
cmovno
add
xor
add
jp
add
fwait
pop
pop
cmp
jmp
clc
inc
add
jg
pop
scas
cmp
clc
push
add
enter
add
outsb
insl
sbb
adc
add
clc
movsb
clc
or
clc
push
pop
clc
add
add
clc
je
clc
push
lods
sbb
clc
jnp
and
test
mov
cmp
add
sbb
jl
clc
insl
mov
add
add
mov
inc
clc
in
shl
clc
or
add
movsl
clc
jl
icebp
bnd
add
add
imul
xlat
add
add
mov
sub
xlat
inc
clc
mov
add
mov
cmc
cmp
fstl
add
xor
add
repnz
jo
add
clc
mov
aam
dec
xbegin
add
clc
lods
mov
pop
and
add
clc
fisubs
add
cmp
sar
pop
add
add
add
addr16
insb
int
clc
pop
mov
adc
add
stos
mov
mov
pushf
sub
js
mov
mov
cmp
mov
inc
add
ficoml
add
add
dec
sbb
clc
lcall
popa
add
je
lods
inc
add
mov
cmp
aas
das
push
cli
test
add
adc
imul
xor
clc
imul
xchg
inc
add
xlat
inc
add
bound
add
sub
clc
sbb
add
cmc
inc
clc
iret
lock
repz
lahf
sbb
mov
in
add
pop
clc
ds
loopne
jne
clc
gs
pop
inc
add
sub
cmp
add
clc
sbb
rcrb
stos
fucomi
fldcw
int3
fimull
cmp
clc
adc
sti
cmpsl
clc
jae
add
add
mov
popa
add
cmc
cmp
mov
scas
stos
clc
mov
clc
push
cmp
add
in
jmp
clc
icebp
outsl
das
test
sub
add
fists
sar
add
inc
add
sub
cmp
ret
clc
das
imul
add
or
test
xchg
cmc
xor
xbegin
stos
mov
xchg
sub
inc
clc
stc
sbb
mov
add
push
add
lret
mov
pusha
add
arpl
add
add
imul
js
clc
fwait
sarl
clc
sar
jmp
mov
shll
cmp
clc
sub
push
imulb
pushf
jle
ror
lods
cmp
stos
push
mov
jno
add
add
ss
clc
and
add
xor
add
add
inc
clc
movsb
clc
pop
not
mov
add
clc
xlat
jb
add
add
dec
stos
cwtl
cmp
clc
loope
stos
loop
leave
ss
adc
add
pop
mov
test
clc
icebp
in
es
fistl
clc
pop
lock
add
add
add
roll
cmp
pop
cltd
jb
add
push
add
das
dec
pop
mov
add
fcmovnbe
jmp
sbb
clc
pushf
arpl
add
lods
popa
add
lods
cmp
clc
mov
mov
mov
add
push
mov
clc
sub
add
cmpsb
clc
xlat
or
sahf
sbb
mov
fidivrs
add
add
add
mov
clc
xor
add
clc
and
add
xor
add
pop
dec
pushf
pop
push
clc
mov
xbegin
add
dec
test
cmp
sbb
clc
lret
pop
add
add
lock
clc
xchg
fs
iret
xchg
push
add
leave
adc
add
add
and
rol
clc
xabort
xabort
sar
outsl
or
push
add
inc
add
jmp
enter
add
ficompl
add
and
adc
add
test
add
inc
clc
or
push
clc
xchg
sbb
add
push
filds
clc
lret
jge
stc
insl
into
outsl
js
xchg
xlat
jo
add
add
test
pop
adc
add
and
jnp
clc
cld
mov
sbb
add
mov
in
sub
clc
jg
movsb
clc
mov
add
ja
add
outsl
or
inc
add
jmp
arpl
add
in
sub
clc
div
gs
lock
clc
scas
and
outsb
out
mov
imul
lahf
ds
aas
adc
inc
add
das
insl
or
cld
dec
sub
pop
jmp
push
add
lcall
ss
add
dec
scas
mov
int3
add
add
ds
add
pop
fbld
add
shll
clc
cmp
add
sar
popa
add
outsl
and
add
clc
adc
add
jo
add
add
jbe
rclb
add
mov
clc
pop
jl
repnz
jbe
clc
cmp
clc
shl
xchg
repz
movsb
clc
xchg
iret
xor
add
xchg
outsl
aaa
jg
push
clc
xabort
clc
xadd
inc
clc
popa
add
or
push
cltd
mov
mov
xor
add
imul
movsb
clc
mov
clc
push
add
cmp
aaa
inc
add
loope
je
push
push
mov
fs
iret
aas
popa
add
mov
clc
jmp
clc
ljmp
clc
pop
call
clc
call
testb
add
adc
add
jnp
mov
mov
sar
daa
clc
aas
xchg
pop
imul
xchg
jns
pop
cli
xchg
mov
cwtl
enter
sbb
jne
mov
clc
fidivrl
add
fmul
cmp
outsl
fistps
xchg
insb
mov
clc
mov
stc
aad
jg
mov
add
sub
filds
add
mov
std
jo
add
add
xlat
fsts
hlt
jb
add
clc
stos
or
add
out
out
and
cmpsb
clc
mov
add
mov
xchg
jne
clc
jp
add
push
add
rorl
cli
jb
add
arpl
add
add
xor
add
clc
mov
jecxz
jb
add
add
mov
clc
and
add
jmp
add
imul
clc
inc
clc
and
add
mov
clc
dec
je
add
push
sti
jbe
mov
nop
and
add
lret
pop
clc
push
jmp
add
add
iret
int
push
jbe
mov
loop
jle
test
xchg
aas
fdiv
adc
add
jmp
inc
add
cltd
pop
lock
sub
test
pop
clc
push
es
ret
clc
stos
jl
fdivrl
and
add
test
out
dec
and
add
jmp
pop
mov
lahf
xor
dec
mov
add
pop
aas
dec
loopne
and
add
add
ss
das
mov
cmp
pusha
add
push
nop
insl
cmp
sbb
sbb
std
into
pop
lahf
sar
sbb
lods
out
sbb
and
add
clc
cmp
cmp
mov
cmp
clc
int
dec
mov
clc
test
mov
add
clc
sub
clc
push
fidivl
xchg
add
into
sti
fisubl
clc
addr16
xor
add
or
adc
add
lods
daa
clc
pop
push
mov
add
clc
inc
clc
cmp
add
add
paddw
jg
clc
repnz
test
int
lcall
clc
mov
mov
clc
jne
fistpl
sti
je
dec
aad
inc
clc
inc
add
or
mov
cmpsb
clc
push
add
outsb
cltd
and
add
ljmp
push
add
clc
stos
push
add
mul
clc
push
add
xchg
or
adc
lock
add
add
das
or
pop
out
xor
add
xor
ja
enter
cmp
add
push
mov
mov
jl
shr
lahf
mov
mov
ljmp
ret
clc
out
clc
cld
bound
add
sub
cmp
dec
mov
ret
clc
aam
mov
add
xchg
sub
movsl
clc
mov
clc
mov
and
sub
aaa
int3
and
clc
ja
clc
rclb
jg
pop
icebp
aas
push
cld
push
adc
clc
sbb
add
sub
clc
scas
lods
aaa
stos
mov
insl
mov
add
scas
addr16
enter
adc
add
push
cmp
jle
clc
pop
aaa
out
fnstcw
mov
add
push
and
add
push
aas
sar
fbstp
clc
dec
mov
dec
push
das
test
cmp
add
add
add
add
dec
pushf
int3
sub
pop
adc
add
add
xchg
adc
add
dec
outsb
mov
mov
lcall
or
mov
add
out
inc
add
mov
mov
or
jmp
cwtl
sahf
ljmp
mov
in
adc
add
clc
add
add
add
adc
add
push
add
and
add
std
test
test
pop
repz
inc
clc
ficomps
add
push
in
insb
mulb
fnstcw
jge
add
or
lahf
xchg
mov
push
clc
push
dec
dec
fsubr
clc
repnz
pushl
add
inc
clc
lret
js
mov
xor
add
add
out
sub
pop
loopne
sbb
add
outsb
push
push
es
add
add
aas
jg
jb
add
clc
cmp
clc
xor
add
cs
dec
repz
add
mov
fisubrs
ljmp
and
add
pop
inc
clc
sar
clc
xor
inc
add
mov
pop
pushf
test
xchg
dec
loopne
das
mov
je
push
mov
test
add
cmp
cmp
xbegin
or
clc
fcmovnu
test
and
arpl
add
lret
add
dec
jle
out
or
repz
inc
clc
cmc
scas
mov
clc
mov
sbb
xchg
gs
push
testl
loopne
ret
clc
dec
jae
add
cltd
js
xchg
pop
jle
add
clc
fisttpl
add
test
mov
push
clc
js
es
sub
clc
loopne
push
call
fdivrs
insl
test
fildll
sub
xor
add
clc
call
sbb
leave
mov
clc
cld
outsl
ljmp
jp
mov
idivb
cltd
pop
add
shrl
clc
and
mov
add
bound
add
add
out
jnp
cmc
cmp
scas
pop
mov
sbb
dec
int
xchg
inc
clc
sub
adc
add
add
add
xbegin
mov
es
push
pop
jge
push
sub
rcl
dec
sbb
in
sbb
add
pop
hlt
xor
add
pop
jne
add
push
push
add
mov
dec
sbb
add
clc
cmpsb
clc
pop
test
sbb
add
leave
ljmp
clc
pusha
add
add
decl
std
test
jmp
mov
jne
popf
cmp
add
jge
clc
jle
iret
into
gs
mov
sar
clc
sti
mov
mov
rcrb
pop
jp
clc
jmp
add
add
add
xchg
mov
cmp
clc
dec
mov
add
xor
add
add
add
cmp
xabort
xchg
fwait
mov
add
add
gs
add
add
push
add
inc
add
insl
ss
clc
out
fxrstor
sbb
sbb
clc
jno
add
add
add
clc
shll
sub
arpl
add
mov
std
mov
push
add
ljmp
loop
dec
bound
add
stos
xchg
inc
clc
and
add
imul
cmp
adc
ljmp
add
add
add
jnp
mov
xchg
dec
jne
mov
mov
add
nop
cmp
dec
jbe
add
and
add
add
dec
ret
clc
mov
adc
add
add
pop
jb
add
mov
add
sub
jnp
sbb
lahf
cmc
in
bound
add
scas
clc
add
add
or
push
add
mov
out
xor
add
insb
jg
add
cmp
add
jbe
jb
add
adc
add
daa
clc
cs
dec
arpl
add
add
out
pop
or
add
rcl
dec
cwtl
mov
gs
jbe
mov
xchg
xchg
sbb
inc
clc
arpl
add
clc
fs
sub
adc
data16
dec
cmp
data16
movsl
clc
push
add
xbegin
add
jbe
mov
or
dec
inc
clc
add
add
xchg
call
sub
call
or
lods
or
push
insb
mov
ds
jge
pop
iret
push
add
add
xchg
mov
inc
add
jmp
sub
gs
fwait
push
add
in
mov
sub
daa
clc
dec
cmp
sbb
test
add
adc
add
inc
add
mov
clc
fmulp
arpl
add
aam
ja
rcr
xor
mov
mov
test
push
cld
sti
hlt
ja
aad
xchg
in
sbb
mov
clc
dec
test
and
add
out
je
add
test
xchg
cmp
add
push
add
push
es
mov
xchg
xchg
addr16
add
add
clc
and
add
test
fcomps
sar
clc
cmp
lahf
and
call
pop
mov
popf
ds
mov
pop
xor
add
ss
in
mov
clc
xchg
ficomps
add
add
into
or
outsl
out
dec
xor
add
dec
mov
or
lcall
add
jmp
sbb
testl
add
out
ljmp
nop
sub
in
sahf
inc
add
or
clc
xchg
fcoms
add
sar
add
in
mov
clc
and
mov
dec
cmp
dec
inc
add
test
rdpmc
add
aaa
xchg
jmp
mov
dec
dec
fldl
add
ljmp
clc
mov
xor
add
jb
add
dec
xor
add
xabort
push
dec
xor
add
sub
sbb
sar
inc
clc
xchg
repz
xor
add
icebp
pop
ja
clc
scas
push
add
int3
adc
add
mov
icebp
jecxz
xor
aad
jmp
xchg
push
add
cmc
fnstsw
mov
add
clc
cmpsl
clc
gs
cs
push
add
sbb
stos
popa
add
xchg
out
jns
xabort
jmp
aas
outsl
cmp
clc
addr16
mov
repz
gs
jnp
rorl
addr16
sbb
pop
lock
pop
lods
data16
movsb
clc
data16
out
jbe
push
add
ret
or
sub
adc
add
add
add
dec
xor
add
add
jb
add
jb
add
clc
insb
iret
add
mov
push
fs
clc
mov
inc
add
mov
clc
cmp
jle
xchg
or
dec
or
push
jo
add
frstor
outsl
or
insl
aaa
ds
clc
and
add
clc
bnd
clc
jg
dec
icebp
sbb
clc
pop
inc
add
fwait
sar
cmp
lret
and
add
clc
mov
add
aas
imul
clc
adc
add
sbb
mov
jmp
clc
in
cmp
clc
mov
mov
in
gs
ret
clc
cmp
clc
add
add
mul
clc
popf
lods
outsb
xor
push
mov
loop
pop
pop
cmp
add
pop
mov
das
dec
icebp
lahf
rcrb
sar
es
clc
add
pop
mov
sar
js
push
fnstenv
mov
cmp
mov
data16
mov
in
adc
add
clc
pop
pop
mov
xor
mov
xlat
aaa
scas
mov
fucomp
cmp
add
iret
lea
je
lock
xor
add
mov
clc
cltd
comiss
xor
add
mov
testb
push
jne
out
mov
add
ret
clc
mov
fistl
add
fcomps
inc
add
fidivrs
mov
jno
add
and
add
in
jno
add
clc
std
inc
clc
mov
clc
stos
mov
add
and
add
clc
mov
xchg
xor
add
clc
hlt
dec
ja
inc
clc
add
add
inc
add
sbb
call
dec
clc
and
add
push
clc
mov
cmp
add
add
add
or
jb
add
add
inc
add
ds
add
and
add
iret
sbb
sub
out
leave
or
jle
push
bound
add
clc
mov
xchg
outsb
mov
clc
add
add
add
clc
pop
dec
in
xchg
jmp
jne
aaa
push
add
in
iret
mov
add
test
add
jae
add
clc
xbegin
dec
insb
or
add
clc
jl
clc
inc
clc
mov
cmp
and
add
push
mov
add
add
push
sub
fdivs
push
clc
sbb
mov
add
ret
clc
sar
add
and
sbb
jg
or
push
call
sbb
push
add
cltd
pop
push
fldt
mov
sbb
add
ja
mov
pop
and
jle
mov
add
pusha
add
loope
shll
mov
cmp
jp
jle
add
sub
lock
mov
test
and
mov
mov
fbld
pop
push
pop
mov
fwait
mov
xor
add
arpl
add
xor
add
adc
add
jnp
mov
adc
add
add
and
lcall
sbb
ss
ficoms
cmp
lahf
lea
pop
and
add
repz
clc
xor
add
addr16
mov
add
push
pop
clc
dec
mov
cmp
cmp
add
adc
imul
lods
ss
pop
or
dec
xchg
cmp
test
clc
inc
clc
push
inc
add
sbb
imul
push
pop
xchg
pusha
add
sub
mov
insl
fld
clc
jg
clc
out
mov
clc
iret
push
xchg
scas
push
add
repz
xor
add
mov
vandps
push
and
add
add
loope
mov
inc
add
xor
or
or
mov
clc
test
and
add
gs
clc
test
add
add
add
add
clc
xbegin
add
aaa
scas
add
add
sub
dec
es
xchg
mov
pop
sub
clc
out
addr16
jge
clc
jp
pushf
dec
push
clc
xchg
jge
stos
mov
clc
lret
add
mov
clc
loope
int
out
jns
insl
fidivrs
lock
lret
in
sbb
mov
aad
or
clc
aaa
pop
xchg
hlt
add
jbe
add
inc
clc
xchg
mov
cwtl
ss
and
add
out
aaa
push
xor
add
call
add
mov
clc
pop
push
cltd
lcall
jno
add
add
pop
and
add
push
mov
push
clc
jle
sar
stos
mov
push
clc
push
push
jl
add
ret
clc
imulb
add
cmp
clc
inc
add
cmp
fcmovnb
clc
jne
clc
mov
cmp
pop
sbb
adc
add
add
add
inc
add
pop
clc
negl
or
sub
and
jle
hlt
nop
mov
clc
adc
add
insb
ja
add
mov
sub
cmp
out
std
or
add
mov
add
add
push
clc
bound
add
clc
fxch
sbb
clc
enter
bnd
clc
fsubrl
inc
clc
mov
add
mov
popa
add
pusha
add
sub
cltd
adc
add
cmp
clc
sub
mov
cli
push
clc
inc
clc
mov
add
clc
rcl
sbb
jnp
rcrl
clc
xchg
jge
jge
test
ds
and
add
stos
mov
hlt
sbb
add
add
add
push
cmp
fs
jecxz
clc
bswap
jp
inc
clc
cmp
clc
or
add
dec
cmpsl
clc
mov
cltd
xor
add
mov
clc
notl
aad
inc
add
push
clc
push
pop
clc
mov
clc
xor
add
mov
clc
mov
sub
add
xor
addr16
mov
add
arpl
add
xchg
movsb
clc
rorb
popa
add
cmp
clc
insb
push
leave
mov
clc
fwait
push
and
mov
clc
sbb
clc
inc
add
jg
out
ret
clc
repnz
push
clc
lret
xchg
lea
cmp
clc
stos
ja
int3
hlt
sbb
cltd
cmc
ljmp
int3
das
cli
idiv
jecxz
xchg
inc
clc
lods
pop
push
push
sbb
add
mov
mov
daa
clc
cmp
add
push
cli
mov
loope
dec
pop
inc
add
xor
add
xor
add
clc
push
add
in
adc
add
mov
clc
in
cmp
clc
jno
add
int
mov
clc
outsb
or
loopne
adc
add
cmp
pop
clc
xlat
inc
clc
xchg
nop
nop
push
add
inc
add
mov
out
sbb
sar
addr16
jl
into
jge
clc
aas
pusha
add
popf
mov
lret
inc
clc
loope
sahf
add
add
xchg
in
imul
outsb
daa
clc
mov
mov
mov
stos
leave
xor
add
clc
mov
add
lock
add
add
push
add
ds
mov
or
in
sbb
clc
inc
add
mov
hlt
shlb
clc
dec
sub
cmpsb
clc
jnp,pt
pop
fs
inc
clc
sbb
push
nop
scas
mov
clc
fwait
fs
sbb
add
inc
add
xlat
cmp
xchg
leave
lods
mov
std
dec
sub
test
clc
pop
div
sar
clc
outsl
pop
cld
sub
clc
jb
add
clc
pushl
add
enter
fwait
int3
decl
jp
dec
pop
scas
pslld
add
add
add
pop
es
add
add
outsl
dec
stc
lods
in
dec
adc
add
movsb
clc
xor
add
adc
add
add
clc
xlat
cltd
lahf
dec
cmp
scas
ficoms
clc
mov
add
xchg
sarb
add
cmp
sbb
add
clc
dec
lea
hlt
cld
mov
clc
push
test
add
clc
add
add
sbb
scas
test
jns
jecxz
jg
clc
rorb
mov
ss
repnz
sbb
add
fdivrp
jmp
push
clc
int
mov
mov
or
add
daa
clc
dec
push
add
divl
clc
xchg
push
out
das
add
add
clc
inc
add
dec
out
mov
add
je
clc
movsb
clc
add
jbe
sbb
push
add
imul
push
add
sbb
add
add
dec
push
add
test
clc
mov
clc
adc
add
cmp
add
clc
leave
fstpl
imulb
out
xabort
dec
push
inc
add
cmovl
clc
repnz
add
sar
jge
clc
or
in
adc
add
dec
push
add
scas
js
test
push
add
xchg
stos
insl
and
add
clc
or
clc
cltd
adc
add
jb
add
clc
jl
clc
dec
jl
insb
push
jmp
icebp
scas
dec
xor
add
add
pop
pop
clc
iret
cmp
dec
mov
pop
gs
mov
arpl
add
pop
inc
clc
iret
enter
sub
add
pusha
add
pop
mov
add
out
fidivl
add
clc
xchg
jae
add
add
sbb
add
push
add
xchg
jo
add
in
js
add
clc
xchg
push
add
dec
addr16
xchg
cmp
mov
add
iret
xor
add
loopne
insl
nopl
clc
pop
pusha
add
popa
add
jg
inc
add
into
sub
mov
clc
xor
add
add
sbb
sbb
pop
test
clc
gs
cmp
pushf
jb
add
dec
dec
test
push
loopne
sar
add
movsb
clc
add
add
lret
push
mov
clc
je
mov
inc
clc
dec
sar
push
sbb
dec
lahf
je
int
xchg
add
add
adc
add
add
fadds
sbb
inc
clc
arpl
add
push
cltd
inc
clc
mov
movsb
clc
lcall
mov
fs
iret
jo
add
inc
clc
jo
add
add
movsb
clc
dec
aad
sbb
clc
movsl
clc
mov
clc
leave
test
inc
clc
mov
pop
insl
adc
clc
ds
sub
fstps
ljmp
in
dec
pop
xchg
pop
pusha
add
push
repnz
mov
scas
push
mov
test
arpl
add
add
mov
scas
dec
lret
icebp
daa
clc
jmp
test
lahf
rorb
inc
add
lahf
das
cmp
bound
add
clc
mov
mov
add
movsb
clc
mov
iret
dec
in
movsl
clc
dec
cmp
add
push
dec
lea
add
int
clc
sub
clc
icebp
xchg
in
ds
lods
movsb
clc
cmp
int3
clc
lea
push
clc
and
fwait
cld
pop
clc
daa
clc
fisubrs
or
add
movsb
clc
aad
clc
loopne
stos
daa
clc
cltd
push
inc
clc
xor
add
clc
push
test
cld
fs
das
cmc
mov
pop
clc
mul
clc
lock
fs
pop
adc
add
out
sbb
clc
mov
clc
add
add
add
sbb
stc
inc
clc
out
test
mov
cmpsb
clc
leave
cmp
clc
cmp
clc
mov
and
lahf
push
in
stc
push
movsb
clc
sar
aad
lea
aas
ret
mov
sahf
sahf
fadds
add
testl
enter
inc
clc
test
out
bound
add
add
mov
add
inc
add
test
aas
mov
clc
decl
fildl
nop
hlt
cmpsb
clc
scas
sbb
add
or
jge
pop
out
pop
dec
dec
cld
repnz
and
add
cmp
and
add
add
aaa
lret
clc
lods
das
xor
add
add
mov
add
loope
adc
clc
adc
add
dec
enter
out
cmp
adc
add
sub
lret
jecxz
jp,pt
call
inc
clc
sub
mov
clc
jbe
mov
xor
clc
in
leave
sar
dec
sahf
dec
push
add
cld
mov
add
clc
inc
clc
ret
fadd
clc
add
add
mov
add
or
clc
in
fldl
inc
add
fwait
add
inc
add
and
fidivrl
clc
in
cwtl
out
jne
into
jbe
sti
out
nop
dec
xchg
mov
xor
add
clc
sub
lods
and
stc
jbe
adc
add
add
add
add
sub
pop
add
cmc
sbb
or
add
fimull
clc
fucom
clc
pop
inc
add
imul
mov
stos
int3
aad
popf
sar
lcall
cli
inc
add
or
iret
aad
dec
daa
clc
push
imul
push
push
sbb
cmp
cmpsb
clc
push
sti
fists
lods
popa
add
sub
mov
or
gs
cli
mov
loopne
mov
add
adc
add
clc
mov
repnz
clc
mov
add
leave
mov
jns
call
cltd
enter
clc
jo
add
add
clc
push
mov
dec
sbb
add
mov
or
clc
pop
cli
dec
cmpsl
clc
sub
add
repz
add
clc
add
add
mov
test
es
gs
xor
add
mul
clc
push
loope
ficomps
jl
clc
xlat
jae
add
sub
add
lcall
add
clc
sub
test
cli
test
cmp
clc
lods
fs
push
add
add
push
add
mov
pop
xchg
ret
clc
je
aam
jp
dec
jg
clc
mov
dec
arpl
add
daa
clc
mov
cld
cltd
insb
and
add
std
sub
stos
mov
fst
and
in
add
jmp
outsb
sti
xchg
adc
clc
adc
add
adc
add
cmc
popf
ficomps
mov
xor
add
clc
cmp
clc
pop
inc
clc
cmp
shrb
add
scas
cmpsb
clc
inc
add
dec
movsb
clc
popa
add
jp
add
stos
inc
clc
lcall
stos
mov
clc
cmpsl
clc
jnp
pop
clc
add
add
inc
clc
test
ljmp
push
add
sub
xor
add
ljmp
fsubs
std
xor
add
adc
add
add
lods
out
sub
add
clc
push
cmp
fists
loopne
xchg
xbegin
lock
clc
loopne
loope
in
inc
add
in
cwtl
mov
pop
push
jmp
inc
clc
call
mov
or
inc
add
int3
mov
xabort
sub
push
lret
xor
add
mov
pop
fcmovne
pop
and
add
add
loop
mov
repnz
add
pop
gs
repnz
clc
mov
add
scas
je
push
test
out
scas
push
pop
aas
dec
lea
clc
mov
push
mov
sarl
sahf
cmp
clc
pop
mov
or
addr16
sbb
out
jne
add
sub
divl
cmpsb
clc
xor
add
out
int3
aaa
or
pop
add
jg
scas
outsl
sar
pusha
add
nop
sahf
mov
movsl
clc
pop
sbb
mov
add
add
out
push
adc
and
add
inc
add
sub
or
insl
out
nop
mov
clc
and
call
ja
movsb
clc
push
dec
jns
stos
popa
add
outsb
push
adc
add
xor
add
clc
sbb
or
clc
mov
pop
clc
icebp
mov
ljmp
clc
mov
sbb
clc
ficomps
sar
or
cmp
into
sahf
cmp
mov
jp
jb
add
addr16
pop
scas
inc
add
std
nop
ret
clc
lods
inc
add
cmp
pop
or
clc
add
add
add
add
psubb
decb
add
add
adc
pop
fdivrl
xchg
pusha
add
cli
mov
sbb
clc
shrl
and
add
push
sar
clc
imul
daa
clc
inc
clc
sahf
fistpl
push
inc
add
inc
add
movsb
clc
inc
add
pop
testb
ret
clc
jmp
add
das
lret
hlt
pop
aaa
inc
clc
arpl
add
add
or
add
cmp
add
add
clc
mov
add
add
mov
mov
sub
sub
cmp
clc
pop
out
pop
clc
push
clc
mov
mov
aas
cltd
adc
pop
and
add
clc
xor
add
add
pop
sar
jbe
xor
add
xor
clc
data16
cmp
add
lahf
icebp
cltd
ljmp
xbegin
mov
add
fnstenv
stos
mov
xor
ja
inc
clc
call
add
mov
into
outsl
inc
clc
ds
add
add
add
lcall
mov
adc
add
pop
mov
add
dec
enter
lods
or
cmpsl
clc
clc
into
repz
mov
clc
mov
dec
xor
add
cmpsb
clc
jns
ljmp
add
add
xchg
add
add
mov
add
imulb
jno
add
and
add
add
add
add
or
int3
leave
cltd
test
stc
jnp,pt
add
sub
xor
add
cmpsl
clc
inc
add
call
ret
clc
pop
outsl
or
clc
outsl
out
jge
clc
mov
add
or
dec
jmp
mul
clc
int
jne
add
sar
add
mov
sar
clc
rcr
test
or
mov
ss
add
xbegin
add
imul
int
dec
repz
clc
repnz
outsb
adc
cmp
clc
leave
lahf
mov
mov
add
jmp
cmp
clc
sbb
imul
cwtl
mov
test
sbb
mov
xor
add
aaa
cmp
sbb
jnp
fnstenv
add
clc
rcrb
fs
fwait
in
and
add
push
push
add
xor
add
mov
repz
add
mov
pop
dec
test
pop
out
jmp
pop
and
pop
push
add
int
xor
add
fwait
scas
test
sub
sub
clc
aas
bound
add
das
fdiv
jnp
clc
xchg
cmp
add
call
cmp
clc
lea
add
add
pusha
add
sub
pop
or
cmp
int3
repnz
lods
scas
sti
mov
sub
xchg
into
int3
test
outsb
out
mov
inc
clc
outsb
mov
int3
dec
mov
xchg
int3
push
add
sub
xchg
xchg
mov
pop
clc
lock
push
add
jno
add
sbb
fwait
push
or
test
jle
mov
clc
push
popl
jb
add
clc
dec
xor
add
xchg
std
mov
test
mov
add
or
add
adc
stc
pop
mull
add
add
push
jmp
clc
je
jg
add
jmp
leave
fimull
dec
mov
xchg
inc
add
sar
xchg
dec
fadd
clc
dec
scas
das
xchg
and
add
sub
add
add
sahf
jle
add
bound
add
or
clc
xabort
sub
imul
add
push
add
das
mov
add
repnz
in
jo
add
xchg
ficoms
inc
clc
xchg
outsb
pop
and
add
add
frstor
clc
add
push
mov
pop
leave
out
fs
and
xor
adc
clc
rorl
clc
xbegin
add
loop
inc
add
imul
add
and
cmp
daa
clc
inc
clc
inc
clc
xabort
add
imul
xchg
loopne
cmp
add
mov
add
xchg
dec
mov
lret
leave
adc
add
clc
leave
int
iret
dec
push
add
mov
clc
mov
clc
inc
add
add
add
sbb
add
insb
sub
cmp
je
imul
push
add
sub
or
clc
xabort
dec
sarl
and
add
push
filds
add
ljmp
jo
add
clc
fwait
push
add
jae
add
add
movsl
clc
test
out
xbegin
xor
add
jb
add
stc
inc
add
cmp
cmp
inc
add
es
xabort
clc
in
dec
jle
mov
pusha
add
dec
adc
add
clc
lea
add
add
add
pop
mov
or
mov
or
add
add
aad
cmp
outsb
and
xchg
bnd
add
add
add
mov
inc
add
daa
clc
inc
add
lcall
mov
cmp
outsl
test
loopne
ror
shll
add
lods
int
push
ds
mov
add
fisubrs
and
add
push
clc
sub
repz
mov
pusha
add
mov
clc
xor
add
xchg
sub
scas
pop
jecxz
insl
pop
jb
add
std
pushl
pop
push
mov
add
mov
mov
ds
sti
es
mov
push
cmp
cmpsb
clc
add
clc
cmpsb
clc
iret
dec
mul
clc
push
add
popa
add
mov
xlat
test
mov
cmp
dec
popf
incb
add
lods
call
add
add
add
mov
clc
mov
jmp
clc
jmp
xchg
mov
inc
add
push
add
and
add
aad
clc
fistps
add
mov
mov
clc
inc
add
mov
jp
fs
fdiv
adc
insb
push
jl
inc
clc
pop
sahf
mov
push
daa
clc
loop
cmp
clc
data16
filds
into
cmpsb
clc
mov
insb
lods
out
sbb
cmp
mov
clc
push
add
in
ja
adc
add
pop
pop
shl
clc
lret
ds
dec
std
ret
add
repnz
clc
sbb
outsl
insl
xchg
in
jp
sub
and
add
mov
push
movsl
clc
in
adc
clc
movsb
clc
dec
negl
frstor
imul
xchg
test
gs
or
repnz
in
push
xchg
sub
jmp
into
mov
in
dec
cltd
aas
and
add
clc
fmul
sub
add
jb
add
insb
fildl
dec
ljmp
add
cwtl
shlb
push
adc
add
movsl
clc
add
add
iret
out
add
sbb
mov
int3
jp
dec
inc
add
js
fucomip
mov
add
aam
nop
mov
loopne
mov
xabort
add
push
clc
addr16
cwtl
fs
jg
nop
or
cmp
clc
mov
add
inc
add
scas
test
pop
call
add
jl
xor
sbb
add
mov
add
jnp
add
xbegin
in
mov
mov
in
sbb
leave
or
icebp
mov
bound
add
es
push
clc
sar
rcl
xchg
xchg
inc
add
pop
inc
add
and
lcall
add
add
dec
jne
aad
sti
jl
clc
loopne
sbb
clc
mov
clc
clc
push
inc
add
cmp
pop
pop
roll
ljmp
js
inc
add
push
repz
clc
inc
add
mov
add
out
adc
add
cmova
push
add
pop
inc
clc
loope
xor
add
cld
ds
scas
mov
test
clc
xchg
push
add
cld
pop
leave
add
add
in
pop
cmp
adc
add
clc
mov
add
int3
pop
clc
iret
pushf
pusha
add
daa
clc
cs
jb
add
add
pop
add
add
add
push
push
int
int
mov
scas
mov
add
icebp
xchg
mov
cmp
ds
add
insl
mov
add
add
add
icebp
int
insb
adc
clc
push
clc
loop
xbegin
mov
clc
setb
xor
add
clc
insb
bound
add
mov
sub
and
mov
and
adc
add
loope
jp
and
mov
xor
fs
and
add
repz
clc
mov
jl
dec
mov
outsl
mov
clc
popf
push
mov
shrb
cmp
jmp
sub
or
ret
clc
mov
add
arpl
add
mov
fwait
lret
cmpsb
clc
push
aam
add
and
add
test
clc
addr16
fwait
sub
lret
add
pop
jl
clc
and
add
pushf
lret
out
movsl
clc
int
fimull
mov
add
mov
push
xchg
mov
add
repz
clc
outsl
cli
scas
scas
xor
add
clc
cld
adc
add
scas
sbb
daa
clc
cmp
xchg
sahf
jno
add
and
add
out
push
cmpsl
clc
je
sub
mov
add
loop
lahf
test
clc
inc
clc
and
add
rcr
iret
pop
clc
inc
clc
in
scas
sti
inc
add
cmp
shlb
add
add
mov
and
add
cwtl
jge
sbb
mov
mov
rclb
add
arpl
add
inc
clc
ror
inc
add
je
pop
pusha
add
dec
scas
das
inc
clc
jb
add
in
imul
faddp
clc
jl
adc
add
jo
add
clc
xchg
push
jge
add
dec
out
gs
scas
daa
clc
arpl
add
popf
sbb
clc
inc
add
data16
outsb
lea
jmp
add
imul
clc
push
enter
lea
add
icebp
lret
lret
dec
cmovbe
sbb
add
stc
mov
xchg
test
int3
and
add
pusha
add
add
add
add
mov
movsb
clc
rolb
add
push
mov
mov
add
clc
pushf
jmp
clc
popf
lret
sar
popf
mov
cli
push
out
clc
jns
addr16
ljmp
imul
outsl
push
repnz
dec
arpl
add
aaa
imul
inc
clc
mov
add
add
outsl
xlat
mov
loop
cld
mov
addr16
pushf
or
add
add
add
int3
sbb
clc
pop
icebp
xlat
sbb
add
add
outsb
scas
aas
mov
clc
cmpsl
clc
pop
inc
clc
sbb
clc
gs
add
add
jp
clc
push
add
add
insb
and
add
inc
clc
mov
stc
das
sub
push
add
jp
push
add
loopne
ficoml
clc
jae
add
std
sbb
add
add
in
add
clc
clc
out
stc
xchg
dec
add
add
out
lea
add
sbb
cltd
pop
popa
add
cwtl
lret
add
add
add
fsubp
clc
or
add
lods
fsubrl
xabort
cwtl
and
test
xchg
adc
add
or
clc
fnstenv
sar
adc
add
add
inc
add
jmp
add
add
add
test
add
pop
mov
add
mov
dec
filds
imul
clc
scas
js
shlb
lcall
add
or
aas
cli
jne
jne
mov
pop
sar
push
ljmp
add
int3
cmc
daa
clc
cmp
add
push
adc
add
add
add
clc
ffreep
clc
inc
clc
inc
clc
loope
jl
clc
lret
push
lret
aas
ret
clc
inc
clc
mov
add
mov
popf
sub
cmovge
push
add
arpl
add
add
es
scas
xchg
rcrb
xor
add
cmp
mov
clc
push
add
ret
clc
ret
clc
mov
clc
or
mov
add
add
in
cwtl
pop
jb
add
add
add
stos
pop
inc
clc
shrb
add
mov
pop
and
add
pusha
add
jnp
aam
clc
adc
add
clc
loopne
jg
clc
jg
add
scas
xor
add
je
clc
adc
push
clc
mov
leave
and
add
fldl
jle
cli
fdivp
add
add
arpl
add
push
jb
add
stos
or
or
aaa
cmp
clc
dec
xchg
pop
mov
inc
clc
add
add
add
dec
mov
fcompl
mov
pop
clc
xor
inc
clc
clc
mov
add
repz
jno
add
jmp
lods
add
add
add
fistpl
add
mov
in
popa
add
add
add
clc
enter
sub
fistl
inc
add
aas
push
add
lret
sub
xchg
pop
jmp
scas
lret
add
clc
add
add
lock
ljmp
add
add
dec
leave
jmp
out
cmp
sub
cmp
pusha
add
das
and
add
mov
cmp
clc
lods
and
add
sbb
icebp
pop
jno
add
sar
pop
xchg
rorl
ja
push
icebp
xchg
in
mov
or
clc
imul
dec
xchg
lods
shrl
mov
in
addr16
push
inc
clc
push
mov
push
ficoms
add
mov
xchg
enter
shlb
inc
clc
sbb
clc
rcrl
clc
fistpl
loopne
xchg
loopne
ret
clc
mov
int3
xchg
fstpt
xbegin
clc
adc
add
add
mov
or
pop
sarb
add
add
add
out
out
push
add
xchg
or
mov
fwait
mov
jo
add
sub
out
aas
testb
sbb
mov
adc
add
add
cmp
filds
test
sub
out
jne
mov
clc
cs
jne
clc
push
dec
add
lret
loopne
push
add
push
jno
add
fisubl
clc
cs
rol
clc
sbb
clc
or
adc
sarl
out
dec
loop
dec
sar
cmp
mov
add
add
inc
clc
scas
jecxz
dec
ljmp
sub
clc
shrl
sar
add
dec
test
add
add
xabort
out
mov
clc
xchg
pop
mov
loop
into
xchg
mov
add
mov
push
add
cmc
clc
inc
add
jp
clc
fisttpll
jp
clc
je
adc
imul
add
clc
nop
mov
adc
add
cmpsb
clc
out
lods
mov
inc
add
scas
stos
out
fs
cmp
pop
nop
jnp
jo
add
push
ret
xchg
out
jle
add
leave
repnz
push
jb
add
clc
iret
or
clc
mulb
add
addr16
inc
add
add
dec
bound
add
add
cwtl
sar
outsl
mov
enter
cmp
aas
out
in
dec
xor
add
jo
add
jl
test
mov
cli
pop
jecxz
bound
add
addr16
push
fucom
clc
bound
add
clc
jns
pop
ss
mov
dec
stos
inc
add
sti
xlat
adc
add
mov
lret
addr16
and
add
sti
ret
clc
dec
sub
clc
inc
clc
and
add
clc
add
add
clc
xor
add
add
stos
inc
clc
push
add
push
add
inc
add
cmp
or
decl
push
or
mov
call
loope
sbb
xchg
insl
popa
add
fs
jb
add
add
imul
aad
xlat
idivb
outsl
ret
cmp
cld
aam
stc
xor
add
add
add
repnz
rcrb
in
sti
arpl
add
mov
fsubs
cmp
sbb
dec
sub
lods
sub
fbld
add
int3
and
and
cmove
repz
loope
mov
and
add
insb
push
mov
lcall
stc
lods
in
mov
add
xabort
jmp
ja
rcl
fldt
ds
jg
in
jno
add
pop
clc
cltd
test
lods
mov
push
cmp
jl
add
jae
add
rolb
ss
test
fisubl
push
add
cmp
add
add
mov
dec
into
inc
clc
cmp
not
icebp
mov
jp
sbb
popa
add
mov
push
add
sbb
sbb
aas
aam
clc
push
add
in
loope
add
add
fdivrp
aad
dec
lcall
mov
jg
clc
dec
dec
jnp
lods
or
clc
loopne
jae
add
pop
and
clc
adc
add
add
add
clc
fdivrs
int3
das
mov
movsb
clc
movsl
clc
push
add
and
add
testl
call
mov
add
stc
loopne
lcall
shrl
xchg
pop
jp
mov
add
sub
dec
sub
clc
loopne
dec
fdivrl
push
xchg
into
and
add
shl
or
add
icebp
out
xor
test
push
insl
sahf
sbb
jmp
and
cli
add
in
stc
pop
clc
cmp
add
sbb
jbe
add
fisubl
test
cwtl
mov
add
dec
mov
mov
mov
jns
clc
pop
bound
add
clc
push
cmp
add
fs
xchg
in
mov
clc
cs
pop
loopne
or
clc
lock
or
push
clc
in
lea
jge
sub
add
clc
ljmp
sbb
enter
cmp
pop
mov
add
clc
test
xchg
or
add
sub
mov
clc
adc
add
icebp
lock
mov
add
dec
shl
clc
mov
jle
clc
inc
add
test
adc
add
clc
scas
add
add
add
xor
add
dec
fsubl
add
scas
cmp
xor
add
dec
lods
inc
add
jbe
clc
cmp
add
insb
push
test
clc
in
data16
divb
add
aad
clc
ljmp
clc
sub
mov
add
imul
inc
add
dec
jl
adc
add
add
test
into
inc
add
cmp
add
mov
mov
inc
clc
je
or
or
stos
dec
mov
xor
add
push
add
xchg
pop
iret
int3
pusha
add
int
add
jno
add
xchg
mov
push
mov
adc
add
pop
aas
repz
pop
add
add
adc
add
add
fists
bound
add
clc
loope
xchg
and
jb
add
and
add
cmp
cmpsl
clc
out
jbe
insl
mov
add
cmp
add
add
dec
data16
xor
add
add
jg
clc
int
pop
out
adc
add
clc
ss
mov
add
loopne
stc
adc
jns
xchg
mov
add
jmp
je
clc
or
clc
ss
inc
clc
fmull
jmp
fs
sar
jbe
add
lcall
xor
add
bnd
clc
cwtl
cmpsb
clc
adc
clc
inc
clc
cmpsb
clc
add
add
lea
add
aas
jns
clc
mov
enter
pop
scas
arpl
add
lods
add
add
jecxz
dec
push
add
mov
or
cmpsl
clc
ja
enter
testl
push
fisubrl
xor
sar
jbe
xor
add
leave
and
add
lods
repz
leave
mov
add
mov
scas
add
add
inc
clc
jg
jae
add
popf
jle,pn
add
pop
mov
clc
int
outsb
test
and
add
xchg
or
jp
loop
test
adc
add
add
sbb
movsb
clc
sub
add
push
add
xor
add
repz
adc
add
rcll
add
xor
and
add
add
mov
clc
pushf
pop
add
add
nop
fisttpll
scas
insl
lods
xchg
pause
and
add
clc
in
es
sar
cmc
lods
addr16
mov
icebp
add
mov
das
lods
add
add
cmpsl
clc
and
add
scas
sarb
mov
and
add
sub
es
ja
add
push
cmp
push
add
aaa
lock
xchg
cmpsl
clc
sub
add
push
arpl
add
add
push
clc
cmp
mov
mov
clc
mov
lahf
daa
clc
test
add
sbb
sub
dec
jmp
icebp
bound
add
fdivrs
xchg
or
shr
out
pop
mov
sahf
aam
adc
add
movsb
clc
lahf
cmp
cld
sar
in
push
add
dec
push
add
dec
repz
xchg
mov
sar
xchg
sbb
addr16
push
dec
cli
adc
add
cmp
mov
lcall
jecxz
mov
clc
popa
add
lods
cmp
add
in
fptan
xchg
jmp
push
pop
mov
int
loopne
pop
es
xchg
outsb
mov
clc
test
xor
add
mov
das
sub
or
aas
cmp
and
add
jns
dec
shll
push
add
jbe
add
add
add
clc
incb
clc
ds
inc
clc
sbb
add
sub
add
push
add
cld
or
clc
cmp
add
ja
cli
pop
xor
lret
or
clc
call
lahf
jo
add
sbb
rsqrtps
add
xor
add
xor
add
xor
add
mov
and
add
adc
loop
inc
add
cmp
cmp
add
jb
add
shrl
add
cmp
jmp
cmp
mov
add
add
add
clc
insb
js
adc
mov
clc
clc
in
sub
clc
xchg
cmp
sub
add
cltd
pop
sbb
js
sub
add
jbe
and
add
pop
shlb
mov
repnz
add
add
scas
push
push
add
out
enter
mov
out
dec
enter
jo
add
scas
shlb
add
mov
add
rcrl
sub
xor
add
clc
arpl
add
test
lcall
add
sub
sbb
sti
mov
lahf
pushf
jae
add
jle
clc
daa
clc
pop
xchg
push
add
jp
clc
mov
nop
fcomps
add
cmp
in
lahf
aad
clc
mov
in
stos
out
mov
addr16
mul
clc
xchg
fiaddl
ljmp
jg
ss
add
stos
mov
int
test
imul
outsl
cltd
sar
add
xor
add
cmp
jns
call
xchg
insb
inc
clc
inc
clc
mov
add
sub
ja
pop
data16
mov
add
xchg
push
pop
dec
xchg
outsb
mov
js
add
sub
inc
add
ficoms
add
xor
add
xbegin
jle
mov
sbb
add
into
cmc
scas
in
cmp
xchg
test
ret
clc
mov
xchg
pop
mov
add
pusha
add
clc
inc
add
or
add
add
and
add
call
fs
sub
int
jnp
add
es
loop
int3
gs
dec
vmovlhps
hlt
test
pop
xor
add
sbb
aas
adc
add
clc
sub
adc
add
cmp
fsubrs
stos
cli
push
stos
mov
fnstcw
add
fcoml
add
add
std
fdivl
out
pop
fisttpll
mov
hlt
test
test
push
mov
push
sub
push
loop
fwait
add
add
clc
pop
cs
clc
xor
add
xor
add
inc
add
jmp
clc
add
mov
clc
push
es
and
add
xchg
int3
mov
clc
xor
add
xchg
test
cltd
and
add
ss
test
mov
add
pushf
push
add
ja
jns
jnp
mov
clc
mov
push
push
es
xor
clc
out
cmp
das
test
aad
sub
stos
adc
movsb
clc
clc
add
add
cmc
jmp
pusha
add
sub
inc
add
leave
sub
lea
lahf
xlat
lock
nop
fs
cltd
mov
js
sbb
adc
clc
loope
loop
sub
pop
or
xchg
or
add
add
add
mov
clc
xbegin
xor
add
notb
push
pop
jecxz
mov
add
or
add
clc
dec
inc
clc
ja
clc
jno
add
inc
add
inc
add
out
rcll
repz
pop
cmp
in
jg
jne
hlt
mov
cmp
mov
daa
clc
cmp
aam
in
scas
cltd
adc
add
cld
adc
add
lea
add
sti
inc
add
hlt
rorb
imul
clc
xchg
testb
popf
std
bound
add
add
clc
xchg
ljmp
xabort
filds
add
push
lods
push
repnz
sti
lret
add
sahf
dec
in
push
add
stos
out
push
shll
add
add
data16
inc
clc
jl
scas
sbb
sbb
pop
and
add
sbb
add
clc
jnp
pop
movsl
clc
mov
clc
pop
bound
add
clc
sub
add
clc
in
fsubs
mov
mov
clc
adc
clc
cltd
push
clc
and
add
pop
hlt
mov
pop
dec
add
add
sub
push
mov
mov
adc
add
jmp
in
mov
jno
add
shl
xor
add
cmp
fldl
add
mov
fsubrs
insl
mov
cmp
lods
repnz
mov
and
or
push
out
mov
jmp
ficoml
add
dec
icebp
inc
clc
inc
add
repnz
outsl
into
cmp
push
add
xchg
mov
pusha
add
imul
push
sbb
add
movsl
clc
mov
pop
mov
pop
popa
add
xchg
sar
inc
add
test
jge
sub
adc
add
clc
nop
stc
addr16
cmpsb
clc
dec
ja
add
addr16
pop
icebp
pop
sbb
clc
cmp
cld
into
adc
cmp
push
add
sbb
mov
push
clc
mov
clc
sbb
add
add
mov
clc
icebp
cmp
add
mov
add
add
add
icebp
scas
jo
add
xor
add
aas
sbb
fwait
dec
mov
clc
dec
stc
push
xchg
pop
loop
cmp
add
mov
clc
xchg
or
daa
clc
push
cmp
pop
ds
add
push
add
das
mov
bswap
pop
xchg
pop
jg
pop
jns
clc
sbb
pop
clc
addr16
in
inc
add
jg
aas
pop
push
test
sbb
jbe
icebp
loopne
dec
pop
popa
add
adc
push
pop
or
insl
fldt
add
xabort
clc
pop
enter
in
cltd
push
xchg
cmp
clc
in
mov
adc
add
add
jo
add
dec
sbb
out
das
jns
sbb
pop
loope
lock
add
lret
xchg
ja
enter
es
pop
dec
push
shll
fldl
add
bound
add
add
test
push
icebp
call
xor
add
add
gs
movsl
clc
sbb
repnz
adc
add
imul
add
fimull
inc
clc
jle
xchg
filds
add
fbld
clc
fdivrs
fistps
insl
out
in
cmp
clc
push
jno
add
add
sub
data16
inc
add
sbb
clc
lock
add
cmpsl
clc
pop
pop
add
add
add
lcall
cli
repz
ljmp
repnz
jecxz
xchg
jbe
dec
jecxz
sahf
or
add
xor
add
mov
mov
in
inc
clc
xchg
dec
lods
cmp
add
cltd
sar
js
add
in
jnp
add
test
mov
add
loop
inc
add
mov
divl
std
push
clc
loop
clc
mov
clc
cltd
pop
jae
add
and
add
popa
add
ja
clc
scas
adc
lods
clc
inc
clc
cmpsl
clc
sub
jle
inc
clc
inc
add
adc
add
add
pop
pop
jae
add
clc
clc
sti
xchg
cli
dec
add
pusha
add
repz
imul
add
xor
add
clc
jge
insl
sub
dec
imul
sbb
movsb
clc
add
add
add
clc
gs
cmpsl
clc
jecxz
adc
add
add
sub
pop
dec
mov
add
cmpsb
clc
es
test
clc
lea
jne
clc
sub
mov
loop
mov
add
cwtl
mov
xlat
cs
out
mov
ja
clc
inc
add
stos
cmpsb
clc
pop
clc
xor
cmp
cwtl
pop
daa
clc
pop
mov
xchg
je
xchg
xor
clc
das
fcomps
push
add
mov
out
shl
cmp
clc
sti
or
aaa
cld
lods
inc
clc
std
scas
xor
sub
push
sar
pop
je
add
adc
dec
dec
jl
clc
cmp
clc
filds
add
je
clc
int3
push
out
hlt
es
dec
inc
add
pop
fiadds
add
fidivrs
in
test
scas
pop
jge
ss
add
cltd
test
inc
add
daa
clc
je
cmp
test
arpl
add
loopne
mov
add
pop
cmp
or
clc
sub
clc
inc
add
pop
sar
mov
clc
into
mov
clc
xor
add
fisttpll
pop
cmp
mov
cmp
dec
dec
sub
clc
js
push
clc
fsubs
enter
push
mov
add
mov
enter
fildl
adc
add
add
jnp
mov
add
shrb
movsb
clc
pusha
add
hlt
pop
in
dec
push
jnp
sbb
and
add
arpl
add
clc
inc
clc
cmp
add
and
clc
es
jg
mov
mov
add
mov
and
add
repnz
add
call
add
add
pop
xchg
jns
add
cmp
addr16
cwtl
js
push
pop
inc
add
addr16
iret
jmp
push
sbb
clc
mov
test
pop
inc
add
ficompl
int
mov
add
jbe
add
cmp
add
outsl
lret
sub
sbb
push
out
sarb
outsl
repz
add
leave
mov
or
clc
aam
mov
ret
mov
pusha
add
push
and
clc
inc
add
cmp
js
dec
mov
add
xchg
out
jae
add
sub
clc
lods
iret
insl
or
aam
cmp
add
push
xchg
faddl
out
stos
cmp
pop
inc
clc
mov
icebp
xchg
ja
sub
scas
insl
xchg
mov
add
clc
sub
mov
add
mov
mov
add
add
sar
leave
xor
add
mov
add
add
add
push
add
repnz
xchg
and
add
call
or
stc
dec
inc
clc
sar
mov
clc
data16
cmp
add
stc
mov
clc
popf
jg
into
dec
pop
push
clc
sub
add
pop
bound
add
add
cmp
adc
lea
add
push
fsubr
in
je
pusha
add
pop
outsl
daa
clc
divl
aam
add
shrl
jno
add
add
pop
push
scas
xchg
fisubrs
mov
js
cmpsb
clc
jge
loopne
in
dec
hlt
xchg
lock
cmp
add
sub
dec
mov
mov
cmp
clc
adc
add
xchg
push
add
cmp
jecxz
int3
push
clc
xor
clc
into
sbb
stos
pop
aaa
jg
dec
cmp
sub
push
sbb
jmp
clc
ds
mov
cmp
aaa
cmp
add
dec
hlt
or
add
xabort
fistl
add
outsb
pop
loopne,pt
and
clc
cld
dec
mov
add
popf
shlb
add
in
sar
mov
cmp
bound
add
push
add
jnp
mov
add
sub
add
in
in
clc
stos
dec
pop
pop
inc
clc
push
aam
jge
fldcw
adc
add
loop
pop
daa
clc
lods
xchg
sti
call
iret
jo
add
jl
clc
push
out
fisttps
add
icebp
push
pop
mov
dec
addr16
lahf
insl
cli
movsl
clc
xchg
push
clc
mov
daa
clc
fcmovb
clc
inc
add
out
mov
add
add
test
sar
lea
add
and
lods
insb
es
inc
clc
mov
clc
cmp
hlt
cmp
movsl
clc
sti
push
add
mov
flds
clc
cmp
enter
and
clc
mov
xor
cmpsb
clc
gs
pop
sbb
add
clc
data16
xchg
es
mov
clc
clc
mov
add
jl
dec
adc
add
popa
add
aas
and
add
cs
in
or
loop
cmp
add
add
push
add
jae
add
add
add
add
clc
rorb
imul
sbb
clc
icebp
nop
or
clc
jbe
clc
push
push
mov
clc
insb
cld
imul
rol
clc
add
add
lret
add
add
sub
mov
clc
cmpsb
clc
stos
call
add
mov
xchg
cs
dec
xor
fcomps
jnp
decb
and
add
arpl
add
add
sub
jnp
int3
repz
adc
cmp
pop
pop
or
iret
pop
jae
add
add
sbb
insb
leave
cs
or
dec
xchg
sahf
xchg
and
add
clc
pop
das
dec
and
jg
clc
or
add
add
add
add
add
dec
inc
clc
int
mov
adc
adc
or
clc
jl
clc
add
add
inc
add
jb
add
icebp
xor
add
add
inc
add
dec
jb
add
fs
mov
add
imulb
dec
pop
pop
or
cltd
and
add
clc
ret
clc
xchg
loopne
ret
clc
test
or
push
xchg
or
leave
jne
add
and
clc
xchg
iret
stos
push
cmp
jmp
outsl
or
and
add
clc
nop
int
push
dec
dec
sbb
add
lea
mov
add
jle
int3
adc
fcmovnbe
or
mov
rcrb
loopne
sub
clc
sbb
mov
add
loope
and
clc
je
add
dec
lock
xbegin
outsl
popf
aaa
shrb
clc
ds
clc
cmp
clc
scas
mov
add
cmp
jle
push
clc
popf
or
pop
cmp
and
mov
clc
mull
add
sub
daa
clc
pop
clc
dec
clc
or
ljmp
clc
xor
cmp
cmp
mov
gs
insl
sub
mov
clc
lahf
jno
add
add
add
add
mov
aam
bound
add
add
clc
cmp
add
and
clc
fs
addr16
xchg
cli
sbb
add
xlat
in
fisubrl
push
add
lea
or
jl
out
imul
add
or
ss
push
inc
add
cs
xchg
pusha
add
sbb
clc
push
mov
push
lea
stos
daa
clc
adc
add
mov
add
cli
jl
push
jle
clc
ds
lock
add
mov
mov
cs
clc
in
clc
stos
cmp
faddl
add
loopne
mov
outsb
pop
mov
mov
inc
add
add
add
add
add
jg
add
pushf
in
out
jb
add
push
add
lea
clc
jg
add
aam
inc
clc
cltd
in
clc
outsb
mov
add
insb
mov
nop
xlat
bound
add
add
cmp
push
mov
loope
aaa
mov
add
es
leave
push
jno
add
clc
jae
add
mov
shlb
add
bnd
call
mov
clc
add
add
xchg
jae
add
clc
loope
test
inc
add
fdiv
jecxz
mov
clc
std
add
add
arpl
add
jb
add
or
xchg
cltd
xchg
push
clc
lret
add
add
push
add
push
add
jmp
in
inc
add
add
add
add
xabort
adc
add
stc
push
xor
cmp
add
xbegin
imul
add
push
sti
mov
jbe
or
outsl
and
add
add
out
aam
clc
divl
add
ret
clc
std
ds
mov
lret
leave
lods
cwtl
cmpsl
clc
ret
clc
or
sar
xchg
loop
mov
pop
loop
push
out
cli
loope
aam
jbe
movsl
clc
mov
xchg
adc
dec
je
mov
clc
stc
cmpsl
clc
jns
clc
and
add
clc
stos
std
xchg
mov
add
int3
xchg
ss
mov
cwtl
jno
add
clc
movsb
clc
sbb
mov
neg
iret
mov
mov
pop
push
cmp
add
outsl
mov
add
mov
ret
clc
pop
sar
clc
sub
mov
insl
lock
clc
inc
clc
out
inc
add
in
mov
push
clc
xchg
jne
ss
xor
add
cwtl
and
add
or
sahf
mov
clc
xchg
into
pop
clc
cmp
clc
scas
in
mov
xchg
dec
fistl
add
vrcpps
add
clc
jecxz,pn
gs
mov
dec
mov
add
or
out
sbb
mov
fcmovb
clc
push
mov
add
add
or
sub
ljmp
ret
clc
dec
popa
add
inc
clc
xor
aad
clc
mov
hlt
lcall
clc
insb
fildl
xor
add
clc
fmull
xbegin
movsl
clc
out
lcall
cmpsl
clc
es
mov
add
pusha
add
aam
add
outsb
fisttps
sub
add
inc
clc
xor
add
xchg
xbegin
test
mov
aad
popf
lret
or
cmp
pop
int3
inc
add
popa
add
xchg
sub
add
and
add
clc
movsl
clc
lcall
add
clc
jb
add
not
mov
mov
add
in
fsubrs
mov
add
pop
repz
pop
and
add
push
inc
clc
add
add
clc
test
sub
add
add
clc
pop
scas
sbb
add
clc
sub
mov
movsl
clc
mov
clc
movd
add
pusha
add
scas
inc
add
test
sar
xchg
ret
clc
push
add
sub
xchg
dec
dec
sbb
add
add
js
xchg
out
scas
scas
out
je
push
test
pop
clc
in
das
scas
gs
clc
insl
movsb
clc
push
add
mov
clc
insb
jg
shr
xchg
mov
add
or
clc
sub
clc
sub
add
mov
in
cmp
pop
in
out
pop
and
add
scas
pop
push
add
insb
loopne
rcll
add
push
add
push
pusha
add
mov
sahf
add
or
xchg
xabort
mov
jnp
jno
add
push
ss
lret
outsl
arpl
add
jle
jns
stos
out
ret
clc
xor
add
add
aam
add
push
add
rclb
adc
add
mov
lret
jecxz
ret
clc
cmp
add
mov
ja
pop
xchg
pop
inc
add
jb
test
cmp
inc
clc
lea
jp
clc
and
add
test
cmp
mov
cltd
adc
add
cld
adc
add
add
aam
push
or
lret
jns
inc
clc
sub
out
push
pusha
add
pop
push
mov
pop
imul
dec
and
add
xor
add
insb
ljmp
clc
aaa
repz
cmp
stos
out
scas
in
movsb
clc
outsl
jne
nop
cmpsl
clc
sbb
add
sbb
out
sbb
jno
add
adc
jg
pop
mov
and
add
icebp
gs
adc
add
mov
lock
clc
adc
add
clc
and
test
xor
clc
lret
leave
je
clc
inc
add
hlt
adc
lahf
sbb
clc
stos
push
clc
test
add
clc
data16
pop
sar
clc
jge
clc
xbegin
cmc
movsb
clc
int
xchg
imul
add
rorl
mov
add
sub
popf
imul
cmp
cmp
add
cli
cltd
sahf
gs
icebp
repz
stos
in
sub
jo
add
dec
xor
add
add
add
add
out
das
into
ss
cmp
add
push
int
pop
in
pop
cmp
fmull
test
mov
add
out
int
add
in
pop
daa
clc
adc
dec
pushf
fcmovnb
clc
push
aas
clc
fcmovb
clc
cmc
xor
add
outsl
int3
ret
clc
pop
scas
push
add
mov
mov
add
add
push
jle
jl
xchg
and
stos
sar
repz
push
pusha
add
sbb
lea
add
js
in
ljmp
push
clc
repz
mov
gs
xchg
add
add
test
aad
and
jecxz
cmp
daa
clc
sar
push
cmpsb
clc
stos
or
fwait
xchg
fwait
jns
push
pushf
jle
fstps
cmc
pop
jbe
add
pop
ss
xabort
bound
add
dec
aad
imul
in
hlt
mov
add
clc
xabort
mov
add
mov
push
lods
rclb
add
clc
stos
cmp
insb
xor
clc
dec
mov
mov
pop
clc
int
cmp
aaa
stc
pop
jne
clc
dec
jecxz
push
add
dec
or
sub
aad
clc
mov
daa
clc
bound
add
clc
in
push
mov
std
and
add
and
or
adc
add
xor
clc
or
add
add
push
clc
out
pop
lret
shlb
add
clc
push
clc
xlat
jb
add
add
xlat
bswap
xchg
mov
xor
add
clc
inc
clc
push
clc
sbb
add
push
dec
lods
sub
add
outsl
xchg
jl
add
fwait
outsb
mov
add
aas
sub
clc
js
ds
fadds
popf
cwtl
dec
lock
es
add
add
add
push
mov
clc
je
add
pop
imul
ret
clc
cmp
add
sbb
hlt
es
cmp
add
dec
xor
add
xchg
test
in
lods
rcr
or
shlb
add
inc
clc
call
sbb
call
xor
mov
add
mov
mov
clc
inc
add
movsl
clc
xor
add
clc
or
add
push
arpl
add
ljmp
loopne
push
add
popa
add
push
data16
call
add
clc
cltd
add
add
clc
stc
mov
cmpsl
clc
mov
push
in
ret
clc
mov
cld
scas
add
add
mov
clc
insl
and
xchg
pop
clc
or
clc
jne
push
push
add
cs
sub
inc
clc
div
and
data16
hlt
rolb
add
push
clc
xabort
inc
clc
pop
add
add
push
clc
sub
add
imul
and
dec
shll
push
clc
arpl
add
inc
clc
popf
push
jge
int3
mov
inc
clc
es
inc
clc
cmp
clc
jle
sbb
loop
mov
mov
add
pop
fyl2xp1
adc
sbb
or
cmp
sbb
mov
pop
hlt
sbb
add
clc
push
add
aam
jae
add
clc
push
outsl
sbb
inc
add
pushf
icebp
lock
add
jmp
xlat
repz
bound
add
lret
and
dec
xor
xchg
jb
add
mov
pushf
hlt
call
test
clc
pop
sub
fstps
fsubr
pop
push
add
lods
mov
add
rorl
push
arpl
add
add
or
mov
int
cltd
in
sahf
cmp
fldl
add
clc
add
add
test
mov
test
and
add
clc
add
in
lcall
lret
mov
clc
add
pop
cmp
pop
clc
pop
clc
dec
cmp
sbb
sar
enter
add
inc
add
sub
jo
add
outsb
adc
clc
test
sub
and
add
clc
mov
fiaddl
jo
add
sbb
clc
jge
gs
xchg
sbb
add
push
clc
cld
icebp
gs
repz
cwtl
cwtl
popa
add
jb
add
adc
inc
add
mov
inc
clc
add
add
xchg
cmp
cmpsl
clc
sub
fsubp
clc
inc
add
fsts
and
add
adc
add
fsub
clc
cmp
mov
pop
hlt
cmp
add
xchg
adc
add
add
xchg
bound
add
clc
inc
add
sub
fcmovu
xchg
inc
clc
in
stos
aam
cmp
rorl
jmp
add
and
add
add
push
add
push
clc
mov
adc
add
push
clc
lods
and
xabort
enter
add
add
add
pop
cmp
fcoml
add
clc
aam
mov
add
cwtl
pop
sub
xor
add
daa
clc
movsb
clc
int
add
movsl
clc
outsl
popa
add
push
call
add
adc
add
stc
xor
sti
jg
jle
xor
add
sar
cmp
add
data16
mov
add
cmpsl
clc
test
sarl
add
testl
clc
add
add
mov
add
add
lret
jp
add
mov
sbb
insl
test
lods
lods
leave
fadds
clc
pop
xchg
cmp
sbb
add
adc
add
jmp
popf
rorb
clc
xchg
push
add
das
ret
rcr
iret
fisubs
xchg
jp
mov
mov
lahf
roll
add
pop
mov
lods
clc
popf
dec
loopne
inc
clc
inc
clc
push
push
clc
xchg
ja
or
fimuls
fldl
mov
iret
or
add
cmp
stc
outsb
jo
add
push
jp
jp
popa
add
mov
add
insl
stc
adc
add
daa
clc
sbb
add
xbegin
mov
mov
mov
mov
mov
repnz
pop
test
xor
add
clc
pop
mov
cld
push
add
sti
push
cmp
and
add
add
push
add
je
popl
clc
jns
push
add
cmp
add
lret
cmp
repnz
sbb
pop
cmp
repnz
add
push
pop
jp
mov
clc
mov
lret
mov
add
inc
add
adc
add
mov
aaa
xchg
xchg
mov
dec
rcll
repnz
jecxz
lret
jl
clc
push
add
add
add
add
repz
cmc
xchg
cli
jge
add
push
pop
add
add
je
add
inc
add
sub
cmpsb
clc
or
clc
sbb
xchg
cmp
jl
xor
mov
pop
faddp
clc
pop
hlt
das
sub
mov
xchg
mov
mov
cli
dec
faddl
add
add
pusha
add
in
in
adc
mov
clc
and
cwtl
add
movsb
clc
out
dec
test
inc
clc
fdivp
ret
clc
pop
xabort
dec
add
add
cmpsl
clc
and
add
outsl
sub
clc
popf
outsb
fcoms
test
add
fmull
leave
cs
cmpsb
clc
mov
cmp
pop
sahf
and
add
loope
sbb
fwait
push
hlt
cmp
clc
push
pop
clc
mov
clc
cmp
push
add
sti
icebp
aas
pop
jmp
lods
fists
jl
push
cld
stc
jbe
mov
jb
add
add
clc
inc
clc
sbb
mov
lea
addr16
sahf
xchg
dec
lcall
xchg
add
scas
aam
cwtl
push
sub
push
add
add
clc
cmp
add
jno
add
clc
sub
clc
test
clc
cmp
add
bound
add
or
add
shll
add
out
ljmp
pop
popl
add
clc
lock
fadds
add
jmp
cmp
clc
jns
clc
push
add
dec
loopne
scas
jno
add
add
sbb
clc
pop
cmp
clc
inc
clc
cmp
add
xchg
ret
clc
aad
loopne
mov
shl
clc
and
add
ds
add
mov
and
add
cmp
cwtl
popf
arpl
add
dec
enter
inc
add
and
add
inc
add
out
lret
pop
fstpt
pop
cmpsl
clc
xchg
mov
daa
clc
xor
add
scas
movsb
clc
inc
add
mov
add
lods
dec
movsl
clc
ja
clc
push
in
ret
cld
mov
add
loope
xchg
xchg
in
test
add
imul
xor
cltd
xor
add
sar
jge
add
add
mov
sahf
jbe
clc
jns
cmp
add
cwtl
scas
and
add
cmp
mov
cmpsl
clc
xchg
into
push
push
sti
sub
cmp
mov
clc
push
clc
stos
dec
int
pop
mov
data16
pop
sbb
arpl
add
add
pop
aam
mov
clc
pop
inc
add
cmpsb
clc
ss
clc
push
clc
fisubrl
push
imul
xor
add
mov
sub
addr16
mov
mov
add
add
lret
push
jne
clc
push
iret
push
push
in
leave
cmpsb
clc
mov
sbb
fsubrl
loopne
pop
clc
adc
popf
in
and
add
add
pop
cli
cmp
adc
xchg
iret
xchg
popf
add
add
add
out
lret
cmc
add
add
clc
fs
cmp
outsb
jp
imul
movsb
clc
mov
fadd
clc
push
add
loope
bt
pop
lret
mov
divb
xabort
and
add
clc
pop
mov
add
ret
mov
cmp
call
add
add
clc
jg
scas
pop
push
mov
add
add
loopne
fwait
das
ret
jae
add
sub
sub
add
into
and
add
add
aam
mov
jo
add
clc
mov
clc
cwtl
in
rolb
add
adc
add
add
mov
addr16
hlt
call
repnz
jmp
add
test
fmuls
scas
push
add
cli
xor
add
rcrb
jne
jne
mov
xchg
inc
add
and
add
mov
xchg
and
add
repz
inc
clc
sar
xabort
clc
sar
pop
cmp
ret
clc
addr16
jl
enter
cmp
movsb
clc
cld
sub
push
mov
and
add
icebp
je,pn
push
shlb
xor
insl
push
add
dec
jb
add
and
xor
clc
leave
jae
add
arpl
add
ljmp
cs
pop
clc
push
notb
clc
add
mov
cmc
ret
cmp
add
pop
stc
lods
jnp
fcoml
add
mov
clc
xor
add
mov
lcall
add
int
clc
dec
test
inc
add
outsb
test
mov
xchg
sbb
add
clc
adc
add
daa
clc
iret
rcrb
add
shl
clc
fmuls
mov
fwait
xchg
mov
shrb
hlt
add
add
add
das
and
add
push
push
fidivrl
into
ljmp
mov
test
sbb
pop
in
adc
add
cmp
and
add
clc
add
add
jecxz
mov
clc
mov
dec
out
adc
xor
mov
aad
lea
or
stos
inc
add
in
xor
add
in
in
lea
add
lahf
sbb
clc
outsl
push
das
add
add
clc
clc
repz
add
test
and
mov
add
add
fiadds
add
xchg
pop
addr16
adc
add
jae
add
lahf
cmp
clc
mov
jmp
inc
clc
sub
add
add
movsb
clc
leave
clc
sar
data16
jg
mov
or
clc
xchg
ret
bound
add
clc
sub
cmp
add
clc
sub
dec
jne
jge
jae
das
lahf
in
jmp
clc
std
mov
jecxz
pop
into
mov
pushf
sbb
clc
sar
mov
ficomps
mov
dec
push
mov
clc
lods
test
int
clc
xchg
lea
cmp
mov
add
into
inc
add
push
add
ret
clc
je
add
dec
push
jne
clc
xabort
jnp
sbb
sub
inc
clc
aaa
mov
jg
in
jg
sub
push
add
push
xor
mov
xor
add
xor
add
sar
int
jp
clc
or
add
add
dec
dec
xor
add
std
out
pop
xor
cmp
dec
xchg
mov
sbb
and
add
add
add
ss
inc
clc
fsubp
clc
in
out
mov
add
mov
or
clc
test
dec
push
es
outsb
sarl
add
cmp
arpl
add
add
push
add
add
clc
int
add
scas
loope
xlat
adc
scas
mov
addr16
mov
add
mov
clc
pop
es
dec
jns
aad
adc
add
add
pop
cltd
jae
add
ds
add
dec
repnz
je
adc
add
test
cmp
dec
xor
add
pop
xchg
scas
into
scas
test
jmp
add
adc
add
dec
clc
pop
cmp
fistpl
or
add
mov
into
or
fsts
add
shl
cwtl
movsb
clc
add
add
add
mov
adc
add
clc
jmp
pop
cli
cmp
sub
in
clc
iret
in
push
add
hlt
dec
mov
clc
dec
aam
fisubs
add
cmp
bound
add
add
pop
cwtl
fildl
sub
mov
clc
xchg
mov
dec
test
sbb
clc
mov
add
add
lods
call
sbb
into
mov
lret
adc
add
mov
xchg
sub
roll
add
std
xlat
roll
add
add
add
or
std
pop
add
add
xor
clc
inc
clc
adc
add
pop
inc
clc
push
repnz
xchg
stos
jp
add
push
add
leave
sub
sbb
mov
clc
hlt
adc
cmpsl
clc
dec
or
mov
sub
clc
imul
inc
add
hlt
adc
add
push
sbb
add
pop
adc
jno
add
loopne
popa
add
aas
pop
aad
clc
test
out
or
xchg
mov
outsb
jecxz
xchg
cmp
pop
mov
add
push
call
out
rol
clc
stc
cmp
clc
jns
jl
jns
clc
jl
adc
cmp
clc
xor
add
push
add
xchg
arpl
add
clc
xor
add
ficompl
xchg
ret
lcall
clc
movsb
clc
inc
add
iret
jns
add
lods
cmpsb
clc
xchg
jbe
add
or
in
sub
clc
inc
clc
out
pop
test
jg
xchg
and
add
add
repz
jmp
jb
add
adc
add
outsb
dec
xchg
mov
clc
sar
lods
scas
push
out
test
mov
mov
add
jnp
inc
clc
popa
add
aas
push
add
in
dec
lods
es
xlat
adc
add
imul
add
dec
popa
add
xchg
jge
ljmp
add
jp
mov
add
ja
add
gs
cmp
add
dec
std
xchg
pop
or
daa
clc
mov
mov
pop
out
adc
clc
jns
lcall
clc
pop
ret
clc
dec
inc
add
popa
add
sar
clc
xor
add
insb
xchg
jmp
clc
fstpt
int
clc
or
clc
pop
xor
add
cmp
add
clc
push
jl
clc
stos
mov
jecxz
vmovntps
add
clc
out
movsb
clc
xor
add
xor
add
add
enter
jnp
mov
jbe
clc
xchg
pop
or
mov
mov
xchg
outsb
int3
lods
push
shll
add
add
test
ss
clc
lods
aam
lret
xor
add
mov
es
adc
add
clc
into
sti
mov
repz
mov
outsb
int3
test
xbegin
hlt
cmp
fadds
inc
clc
in
mov
je
adc
nop
bound
add
xchg
dec
jb
add
fisubrl
mov
aaa
add
add
clc
roll
add
or
lea
pop
fildll
jnp
cmp
add
sti
mov
aaa
mov
clc
add
add
fidivrs
cmp
jmp
jg
add
mov
fucomi
add
add
pop
ja
shr
cmp
loopne
imul
clc
ret
clc
sar
add
mov
inc
clc
lods
cmp
cld
push
test
add
add
clc
call
add
mov
xchg
lods
out
inc
clc
cmp
add
outsl
mov
clc
pushf
imul
clc
add
or
outsl
mov
add
sar
sub
cs
clc
sahf
mov
or
add
mov
clc
fdivl
add
add
clc
lret
fidivrl
hlt
xchg
cmpsl
clc
divb
and
add
test
jp
add
sbb
loop
pusha
add
aas
lock
data16
dec
mov
clc
mov
and
icebp
out
pop
push
add
movsl
clc
and
out
aad
clc
push
std
mov
add
hlt
inc
clc
pop
scas
cli
mov
icebp
jbe
cs
mov
cmp
add
mov
push
inc
add
push
add
jno
add
add
ret
fadds
mov
add
jmp
push
hlt
add
add
call
add
sbb
jecxz
push
add
mov
and
add
or
cmp
in
int
mov
jmp
scas
jno
add
add
dec
jg
mov
test
ret
xchg
sbb
clc
pop
sbb
add
or
loope
add
add
add
clc
mov
clc
js
add
cmp
mov
clc
ffree
clc
cmpsb
clc
in
jne
clc
inc
add
in
push
add
dec
lcall
in
lret
mov
inc
add
lea
clc
dec
pop
sbb
imul
aaa
xchg
inc
clc
loopne
cmp
push
clc
dec
mov
repnz
xchg
testb
adc
add
clc
mov
add
clc
xchg
std
cmp
jecxz
push
clc
ja
out
sub
or
add
data16
inc
clc
out
adc
add
clc
sbb
and
add
sub
cmp
in
imul
add
pop
jo
add
clc
pop
jnp
lahf
inc
clc
aad
add
sar
bound
add
add
ret
clc
jae
add
in
xor
add
mov
out
icebp
dec
fstpt
pop
or
jbe
mov
jg
roll
add
jne
clc
sub
mov
jg
add
add
clc
test
clc
cmp
push
add
lods
addr16
je
sbb
fistpl
mov
lods
lret
fimull
jb
add
lcall
xbegin
add
das
out
sub
add
or
sarl
adc
add
mov
xor
cltd
and
add
mov
xabort
into
pop
jmp
pop
enter
add
clc
sub
in
clc
fidivrs
ds
cmpsb
clc
cld
in
flds
cmpsl
clc
jmp
clc
data16
lods
xor
ss
mov
mov
push
mov
jno
add
aam
insl
pop
test
mov
jl
add
xchg
dec
movsb
clc
lods
mov
or
inc
add
out
mov
sbb
cmp
add
push
add
enter
add
int3
cmp
in
xchg
test
clc
pop
es
jns
push
add
loopne
jbe
clc
pop
and
push
add
xor
add
mov
xchg
xchg
scas
cmp
mov
fs
int
lods
jo
add
inc
add
add
add
clc
out
xor
flds
add
mov
mov
push
jae
add
daa
clc
jmp
out
out
adc
add
jns
clc
popf
jne
outsl
inc
clc
inc
clc
mulb
add
add
push
add
scas
out
pop
mov
add
push
add
movsl
clc
mov
add
shr
inc
clc
int
imul
add
add
add
xchg
js
pushf
xchg
loop
insb
dec
nop
and
add
add
sub
pop
sti
test
sbb
repz
movsb
clc
imul
clc
in
repnz
aad
add
imul
mov
pop
clc
int3
cmp
clc
mov
clc
inc
add
rol
clc
ds
inc
add
or
into
push
jo
add
imul
pop
clc
idivl
mov
scas
std
and
imul
add
xlat
or
inc
add
sti
add
es
lahf
addr16
loop
idivb
cmp
or
imulb
jns
xor
add
add
pop
rep
sbb
xor
add
add
push
clc
cmc
mov
pop
cmp
mov
cli
mov
ds
xchg
push
mov
mov
sub
cmp
lods
pop
enter
add
sbb
int
inc
add
nop
arpl
add
clc
scas
inc
add
cmp
add
outsl
add
add
add
push
popa
add
aas
mov
mov
clc
fs
pop
xchg
pop
clc
push
add
mov
or
inc
clc
cmpsl
clc
mov
xor
clc
mov
sbb
aaa
jp
add
pusha
add
add
add
into
push
lret
fstps
jbe
dec
inc
add
xchg
das
xchg
cmp
das
xlat
icebp
push
sbb
xor
add
clc
insl
xchg
mov
clc
dec
lea
je
xor
add
clc
mov
clc
loop
adc
add
clc
daa
clc
add
add
jg
add
push
clc
add
add
outsl
and
ds
inc
clc
in
jp
push
xchg
mov
add
mov
add
clc
fidivrl
into
fmuls
aad
adc
add
clc
lahf
cmp
pop
clc
test
xchg
jl
push
add
aaa
call
clc
mov
clc
sub
cmp
clc
push
mov
stos
sub
push
add
add
cmp
fcoms
mov
test
jmp
xchg
pop
cmp
mov
cmp
jp
ss
jns
mov
add
lea
jecxz
xor
mov
clc
push
add
mov
add
repnz
flds
in
cmp
je
add
add
and
add
mov
std
adc
add
mov
add
clc
xor
dec
iret
ja
cli
jnp
aaa
in
cmpsl
clc
lret
xchg
dec
mov
pop
xor
ss
clc
pop
cwtl
bound
add
aas
mov
clc
jbe
hlt
inc
clc
out
pop
adc
add
jb
add
push
add
jns
ljmp
loop
sub
clc
adc
cmp
sub
lea
add
add
mov
rorl
add
add
push
movsl
clc
dec
add
lods
sbb
fimull
clc
adc
add
add
add
sti
aad
clc
push
daa
clc
pop
inc
add
adc
add
add
psrlw
in
dec
sar
shl
clc
lea
mov
iret
or
xor
add
or
icebp
pop
mov
int3
cli
cmpsb
clc
add
add
popa
add
push
loop
iret
cmpsb
clc
inc
clc
fstl
rclb
jl
inc
clc
jne
je
push
add
mov
clc
pop
ret
clc
imul
jge
imulb
add
jbe
clc
adc
add
loop
push
pop
mov
xor
inc
clc
int3
sub
jnp
clc
jge
add
xor
add
loopne
outsl
xchg
mov
cmp
jbe
clc
mov
and
add
add
std
in
mov
sub
xchg
lods
mov
add
jae
add
mov
testb
add
into
sub
and
add
in
jl
clc
test
and
mov
clc
into
xor
je
ljmp
add
shll
fnstenv
xlat
out
jno
add
clc
push
xchg
lods
adc
add
inc
add
inc
add
test
clc
das
pop
in
jne
mov
add
pop
lahf
xor
cmp
clc
or
add
add
ljmp
outsb
aas
idiv
cltd
mov
jle
inc
clc
divb
add
add
xor
add
xchg
add
xor
cld
mov
fdivrs
out
das
mov
inc
add
mov
icebp
test
cmp
sbb
add
xchg
adc
add
out
je
clc
xor
add
add
jae
add
fwait
aad
push
add
mov
mov
clc
mov
add
lret
mov
enter
jb
add
mov
clc
data16
pop
clc
mov
rclb
js
clc
and
add
sarl
push
xor
add
inc
clc
sub
jns
add
push
jle
inc
clc
and
sub
clc
stc
jle
clc
repnz
add
pop
mov
clc
je
adc
add
outsl
sbb
xchg
cmp
clc
enter
dec
or
add
aad
in
push
add
js
add
das
jg
add
add
clc
push
cld
sbb
sub
sub
inc
clc
push
and
add
arpl
add
dec
mov
push
in
jae
add
sub
ret
clc
pop
stc
or
outsb
mov
mov
clc
bound
add
shl
add
dec
mov
jmp
test
icebp
xchg
ss
out
loope
movsb
clc
scas
mov
add
aaa
mov
ljmp
add
jb
add
add
inc
add
int3
ret
clc
jle
add
jno
add
cmp
jp
clc
fmuls
loop
cmp
add
fcompl
mov
add
cmp
filds
in
or
and
add
add
clc
sub
xchg
add
add
cmp
add
mov
clc
cmp
add
std
mov
add
clc
fstps
cmpsl
clc
mov
ficomps
jb
add
inc
add
dec
test
add
jp
ljmp
sahf
add
out
mov
in
mov
clc
xchg
jp
arpl
add
cwtl
mov
clc
sahf
mov
add
aaa
mov
sub
dec
into
push
scas
gs
repz
jl
clc
out
into
sbb
add
xchg
pop
sbb
add
jg
xchg
push
out
mov
daa
clc
jg
clc
stc
mulb
add
in
xchg
jb
add
add
inc
add
and
xor
add
or
push
add
and
add
int3
loope
rcrl
roll
sar
data16
jae
add
mov
lret
adc
push
xchg
movsb
clc
loop
adc
add
cmp
std
xor
dec
negb
push
clc
mov
aam
mov
add
int3
rorb
loope
in
or
cmp
mov
add
shlb
sar
jb
add
clc
mov
clc
adc
add
data16
xor
add
clc
arpl
add
dec
adc
add
jge
add
mov
pop
cmp
es
sbb
clc
ficoms
add
cmpsb
clc
insb
xor
add
data16
pop
dec
mov
jle
dec
lcall
clc
pop
outsb
clc
loop
lret
add
jmp
add
iret
insl
nop
lea
jl
scas
mov
add
cwtl
xabort
cmp
jg
lcall
out
jmp
pop
dec
js
sub
clc
xchg
jae
add
add
push
in
inc
clc
out
fisubrs
jmp
shld
iret
add
add
clc
pop
lods
popf
dec
icebp
cmpsb
clc
mov
jmp
push
add
lret
add
pop
cmovo
add
xlat
clc
mov
xchg
test
jns
adc
add
in
dec
jb
add
kmovw
popf
imul
jecxz
mov
xchg
negl
clc
hlt
and
ret
or
add
xchg
sub
and
add
add
push
mov
clc
pop
repz
add
adc
add
add
leave
fisttpll
xchg
or
je
insl
sbb
inc
clc
xor
add
aas
cmp
pop
jnp
dec
pop
clc
pop
insb
and
add
mov
add
xor
add
clc
shll
add
push
add
inc
add
dec
or
adc
clc
xchg
pop
mov
clc
push
add
dec
dec
jp
frstor
clc
out
sbb
clc
add
in
ret
clc
jnp
cs
pop
bnd
clc
and
clc
push
gs
jns
pop
mov
jle
jne
imul
add
test
mov
addr16
lret
add
js
dec
test
mov
adc
add
pop
push
jnp
clc
push
add
sbb
clc
push
jg,pt
and
add
adc
add
adc
add
addr16
movsb
clc
fldt
sahf
decb
cmp
clc
repz
das
sar
ss
movsb
clc
pop
icebp
jle
clc
jmp
leave
mov
jnp
cmp
add
icebp
xchg
xor
add
xchg
test
push
add
cli
sub
sub
pop
or
push
jl
add
add
pop
or
in
jg
pop
fcom
pop
fs
sar
cmpsl
clc
lods
dec
enter
leave
add
mov
add
sbb
fdivrs
jle
cwtl
shlb
add
adc
add
add
pop
xor
je
xor
add
pop
push
add
jbe
daa
clc
mov
int
and
add
adc
add
add
mov
cmp
clc
out
sbb
pop
mov
sbb
mov
push
pop
mov
add
or
and
add
fidivrl
pop
add
add
adc
add
int3
dec
fs
cs
clc
imull
push
add
ficomps
sbb
fsubl
add
xlat
pusha
add
divl
clc
mov
xchg
mov
loope
jge
aas
mov
push
or
mov
sbb
add
mov
add
aaa
mov
dec
mov
cmp
add
sbb
jge
push
lea
cmp
clc
cmpsb
clc
notb
adc
add
add
roll
jle
add
scas
and
add
fs
loop
dec
cmpsl
clc
lahf
rcl
test
cmp
xbegin
add
lret
push
add
pop
adc
add
add
add
clc
movsl
clc
adc
add
adc
add
clc
push
clc
or
pushf
adc
xlat
enter
in
mov
add
cwtl
xchg
loope
push
add
mov
push
mov
data16
xlat
pop
clc
cmp
cmp
pushf
mov
clc
mov
pop
add
add
clc
sarl
add
cld
fidivs
add
cmp
js
clc
dec
fst
out
pop
repz
fsub
clc
std
inc
clc
sub
push
clc
mov
add
sbb
add
imull
rcrl
into
mov
int
clc
xlat
add
add
inc
clc
aas
out
cmp
shlb
add
sbb
clc
xor
jmp
cmp
jne
popa
add
mov
int
inc
add
mov
adc
add
add
clc
push
sub
add
add
notl
add
push
shll
sbb
clc
hlt
cmp
fcmovb
clc
mov
clc
sahf
cmp
add
add
sbb
es
mov
daa
clc
pop
ret
sub
ljmp
push
or
add
clc
xbegin
dec
or
xabort
clc
int
add
hlt
xabort
mov
loopne
shr
push
add
push
jbe
clc
aaa
shr
insb
aad
sbb
clc
push
add
jo
add
clc
aad
clc
cmp
add
ret
or
ljmp
data16
push
dec
mull
add
outsb
add
add
pop
add
add
mov
insb
cs
mov
shll
add
repnz
test
pushf
aaa
imul
clc
insl
push
clc
or
clc
loopne
xchg
in
cmp
push
xor
add
sub
cmp
add
clc
xchg
aas
or
cmp
loope
cmp
mov
icebp
inc
add
inc
add
xabort
aas
jbe
icebp
idivl
icebp
mov
mov
sub
add
bound
add
add
add
push
add
dec
popf
pop
sbb
clc
mov
mov
out
mov
pop
push
add
cmp
inc
clc
xchg
stos
xor
add
dec
add
add
pop
add
add
arpl
add
cmpsl
clc
mov
add
cmp
clc
pusha
add
jmp
mov
pop
clc
mov
clc
mov
jge
int
add
cltd
jne
add
lods
into
dec
jg
lahf
into
int3
cmpsb
clc
stc
pop
je
fnstcw
int3
cmp
into
test
xor
lock
add
dec
push
add
out
ss
add
jmp
nop
inc
clc
pop
mov
xchg
push
add
stos
cmp
and
add
sub
clc
and
add
add
imulb
push
adc
add
push
add
cmp
rclb
add
clc
inc
add
fnsave
add
mov
clc
inc
clc
out
test
push
test
std
mov
fidivrl
cld
xabort
clc
mov
out
add
fucomip
pop
in
clc
mov
push
dec
pop
cs
movsl
clc
pop
leave
jnp
clc
sbb
sub
or
add
dec
int3
aad
rolb
add
pop
inc
clc
stos
ljmp
add
xchg
xor
add
sbb
and
add
pop
sbb
mov
test
clc
pop
pop
mov
add
cmp
movsl
clc
or
lods
test
add
push
or
clc
nop
out
cmp
call
pop
add
bound
add
mov
fimull
mov
cli
push
add
inc
clc
clc
or
pop
fdivp
call
add
or
in
xlat
negb
dec
mov
jno
add
jno
add
add
dec
add
add
dec
inc
add
loop
xor
add
sbb
aaa
jae
add
add
cld
inc
add
cmpsl
clc
push
jbe
jb
add
aaa
xabort
cmp
nop
inc
add
mov
add
jb
add
add
xor
add
and
add
clc
xor
add
clc
jns
insl
out
insl
push
fcoms
add
jg
push
bound
add
fxch
jmp
insl
test
add
add
mov
xlat
test
clc
lock
xor
add
outsb
push
add
lret
add
frstor
add
cmp
scas
stos
ss
clc
int
pop
jne
sti
icebp
dec
or
mov
mov
clc
in
mov
pop
test
xchg
mov
mov
add
add
popa
add
dec
or
repnz
repz
cmp
repz
insb
addr16
pop
clc
arpl
add
test
or
add
xor
add
ljmp
ja
iret
push
into
cmp
push
enter
clc
jg
clc
jp
add
movsl
clc
sar
popa
add
sub
test
mov
dec
xbegin
lock
movsb
clc
fidivl
add
push
clc
dec
daa
clc
stos
inc
add
add
add
inc
add
cmp
cwtl
cld
pop
dec
jg
lret
fadds
cmpsb
clc
lahf
popa
add
jmp
mov
clc
lret
clc
mov
clc
mov
int3
sub
jbe
xor
shrb
daa
clc
or
add
push
jno
add
add
fnstsw
add
dec
fisttpl
ja
clc
lock
jmp
clc
push
push
add
ds
add
int3
mov
clc
pop
xbegin
add
jecxz
add
xor
add
clc
or
inc
clc
jle
clc
nop
ljmp
pop
mov
nop
dec
jb
add
js
adc
add
inc
clc
stos
mov
std
sar
pop
xor
add
clc
push
dec
insl
adc
add
dec
ss
mov
clc
std
cmpsl
clc
dec
outsl
push
and
add
outsb
mov
popf
sar
jg
cmp
pop
clc
pop
mov
add
push
add
dec
pop
call
add
add
in
and
jae
add
add
sub
out
inc
add
adc
add
add
inc
add
jno
add
idivl
mov
add
popf
ja
repz
cs
into
out
mov
push
in
ss
rolb
add
mov
xchg
popf
mov
mov
or
jl
and
add
xlat
ret
clc
aad
loop
aad
clc
loopne
cmp
negb
mov
jmp
iret
mov
and
add
shrl
out
mov
add
sub
sarl
fstps
sar
jg
test
mov
clc
cmpsl
clc
push
fs
adc
add
push
mov
mov
add
mov
clc
pop
push
jb
add
imul
mov
push
add
xchg
jp
mov
in
popf
fimuls
xor
clc
mov
jp
clc
sar
add
add
add
sbb
negl
add
leave
fistpll
mov
xor
add
add
mov
add
cmp
xlat
in
jmp
sub
and
and
add
add
add
add
adc
add
xor
add
clc
pop
clc
xor
add
inc
add
mov
xbegin
jmp
add
data16
sbb
xchg
xchg
negb
add
mov
mov
jecxz
enter
and
and
xor
add
clc
scas
lods
xlat
ja
clc
xchg
push
add
call
add
add
clc
fimuls
clc
jno
add
stos
in
ljmp
pop
enter
fldcw
mov
jge
lods
je
loop
mov
sahf
clc
pop
or
pop
loope
xchg
shl
mov
ret
clc
cmp
add
mov
xchg
or
add
cmp
clc
inc
add
xlat
cs
insl
mov
iret
pop
or
add
mov
or
repnz
add
add
clc
push
add
jle
fsubr
in
data16
out
call
add
cmpsl
clc
leave
test
inc
clc
dec
mov
iret
out
dec
adc
add
out
jne
movsl
clc
mov
inc
add
sub
cmpsb
clc
cltd
cmp
dec
mov
add
test
ss
daa
clc
fstpt
shr
xchg
pop
movsb
clc
outsl
sbb
clc
xchg
push
and
add
pop
dec
mov
push
add
sbb
fwait
aad
inc
clc
jno
add
push
clc
dec
aaa
movsb
clc
xabort
add
mov
add
test
sbb
add
inc
add
pop
stos
aas
xchg
and
add
clc
jecxz
dec
test
mov
add
and
add
sub
lcall
clc
push
xlat
movsl
clc
jbe
fstpt
push
cli
pop
inc
clc
or
nop
sbb
clc
clc
push
dec
mov
inc
add
xchg
shll
clc
hlt
xadd
push
lret
xor
add
mov
add
fsubs
aaa
fisttpll
mov
cwtl
xchg
cmpsb
clc
sbb
add
add
int
movsl
clc
and
add
add
inc
clc
sar
imul
pop
leave
into
cmp
xor
clc
es
fmulp
cltd
adc
add
add
add
add
add
xbegin
sub
xchg
pop
xchg
sbb
pop
pop
arpl
add
clc
cmp
addr16
leave
repnz
scas
push
add
inc
clc
movsb
clc
into
push
in
rep
mov
pop
ja
clc
cmp
clc
fstpt
pop
notb
or
add
cmp
clc
xchg
push
and
jp
dec
test
jb
add
add
call
or
add
imul
sarb
add
add
add
daa
clc
dec
push
pusha
add
adc
test
mov
aas
ret
clc
loope
out
mov
bound
add
insl
pushf
into
movsb
clc
mov
add
arpl
add
pop
push
add
popa
add
or
add
rcrb
mov
add
pop
xchg
mov
clc
data16
bound
add
add
jne
clc
or
inc
clc
aad
clc
mov
scas
xchg
cmp
add
and
add
or
clc
pop
push
shld
clc
jo
add
out
mov
sub
jp
clc
push
add
ret
clc
aaa
xchg
clc
sub
icebp
jnp
mov
add
add
scas
sar
mov
dec
popa
add
mov
mov
push
add
or
aam
jo
add
or
inc
clc
jmp
dec
push
clc
popa
add
shll
push
clc
pop
test
clc
outsl
and
add
call
xor
add
clc
xchg
add
jb
add
add
add
cmpsb
clc
mov
inc
add
xchg
sub
clc
cmp
and
add
adc
clc
ret
clc
lods
fnstsw
clc
sahf
mov
inc
add
sarb
jp
into
fstps
or
xor
add
add
push
aam
outsl
out
jne
clc
dec
daa
clc
mov
es
mov
mov
inc
clc
inc
clc
dec
add
add
add
cmpsl
clc
adc
add
int
push
push
add
mov
bound
add
add
clc
cmp
add
xor
dec
xbegin
clc
nop
add
add
enter
inc
add
xor
add
movsl
clc
addr16
dec
test
clc
pop
mov
add
mov
fidivrs
add
adc
add
mov
mov
ljmp
fidivl
jo
add
add
rep
out
push
add
iret
imul
sub
ficoms
xchg
inc
clc
jno
add
add
cmpsb
clc
jb
add
mov
aaa
fistpll
cmp
pop
mov
jne
into
cmp
or
dec
int
arpl
add
inc
add
fcoms
add
clc
mov
dec
stos
push
bound
add
add
lret
pushf
mov
clc
out
mov
jp
mov
mov
jnp
clc
sub
xor
add
add
dec
lea
in
xor
add
outsb
fwait
xchg
jno
add
clc
xabort
sbb
clc
lock
in
jne
adc
add
fs
xchg
movsb
clc
mov
outsl
xor
mov
ret
test
psubq
add
push
and
add
add
push
add
pop
das
mov
clc
add
and
mov
jp
clc
mov
cmp
mov
rol
clc
xchg
jns
mov
addr16
jmp
bound
add
pop
div
cwtl
push
sub
add
clc
and
add
aaa
fmull
ret
adc
add
fwait
sbb
clc
push
add
ss
das
icebp
xor
add
add
clc
call
enter
ret
inc
add
mov
dec
sbb
clc
jmp
popf
push
dec
popf
stos
cld
xchg
in
pop
adc
sub
and
add
cwtl
cmpsb
clc
in
fisubrs
mov
clc
pop
cmp
and
add
inc
clc
push
nop
sbb
sbb
clc
loopne
inc
add
idiv
jno
add
push
add
rolb
add
movsb
clc
lods
mov
clc
pop
lret
lods
test
fidivrl
and
jo
add
add
add
movsl
clc
cmp
cmp
inc
clc
xchg
jg
mov
mov
dec
ss
cli
push
sbb
fbstp
add
inc
add
call
and
add
xchg
jns
cmc
nop
and
add
movsl
clc
scas
ds
clc
sub
dec
cli
jo
add
shrb
add
xchg
out
fs
sarl
jb
add
or
clc
js
data16
jp
add
add
clc
lods
sub
jae
add
and
push
aad
add
or
iret
push
inc
clc
lcall
clc
test
mov
cli
roll
add
cmp
add
adc
add
popa
add
pop
clc
mov
and
add
clc
addr16
mov
aam
inc
add
cmpsl
clc
jo
add
icebp
adc
add
lods
mov
add
jl
sub
adc
add
add
cmp
clc
xbegin
stos
sub
push
lods
adc
add
add
or
movsl
clc
mov
or
xor
add
test
pusha
add
and
add
dec
dec
mov
sub
out
jmp
jb
add
test
fidivrs
adc
or
inc
clc
mov
out
jb
add
add
jns
clc
add
add
int
cli
lcall
add
adc
add
popf
ds
add
add
push
rorb
loope
test
push
add
fiaddl
add
out
xchg
mov
add
pop
xor
add
pop
sub
add
dec
daa
clc
scas
dec
gs
pop
insl
pop
in
into
adc
add
daa
clc
and
add
lret
lahf
push
addr16
iret
push
addr16
xor
add
pop
repz
jg
xchg
cmp
add
repz
add
fildll
add
clc
and
clc
fisttps
in
sbb
lcall
jb
add
outsb
xor
lea
add
mov
lret
clc
mov
add
ret
jecxz
dec
aaa
cmp
cmp
mov
clc
sub
jmp
insb
movsl
clc
rclb
and
add
clc
lods
xchg
cli
insb
ret
dec
mov
add
cmp
inc
add
pop
xchg
dec
arpl
add
clc
aad
pop
clc
fiadds
push
xchg
sbb
clc
ljmp
mov
clc
fldl
fwait
pop
dec
adc
add
mov
call
add
imul
adc
add
clc
data16
sbb
in
testl
add
dec
loop
sti
mov
jge
clc
jbe
clc
adc
clc
sbb
add
aas
jbe
clc
mov
add
cmp
pop
mov
add
push
mov
add
movsb
clc
daa
clc
jg
clc
pop
dec
push
mov
add
test
sbb
sub
and
xor
add
add
mov
add
xor
add
movsl
clc
inc
clc
inc
add
xchg
xor
add
adc
dec
cmp
clc
sbb
and
fnstcw
add
add
mov
xbegin
add
clc
dec
add
add
add
inc
add
aam
push
add
testb
fidivl
add
mov
xor
add
adc
add
add
cmp
mov
sbb
add
add
xlat
scas
sbb
aas
fldt
xor
add
xor
lods
stos
jne
pop
cmp
out
scas
mov
mov
adc
add
xchg
sub
add
clc
into
gs
das
out
je
bound
add
and
bound
add
aam
add
cwtl
xlat
in
out
in
arpl
add
clc
push
jmp
jg
clc
cltd
sub
imul
fdivs
in
lret
mov
mov
clc
aam
add
cmp
push
add
icebp
cld
inc
clc
clc
xor
add
add
add
add
cmpsb
clc
xor
add
rcrb
nop
jno
add
in
pop
clc
mov
rcr
cmp
push
cwtl
pop
inc
add
lea
repnz
lcall
mov
negb
add
add
clc
mov
clc
mov
pop
pop
clc
aas
jg
cld
dec
loop
inc
clc
sbb
fs
outsb
arpl
add
fcoml
add
clc
stc
push
add
adc
add
clc
call
gs
xor
add
mov
cmpsl
clc
fldt
sbb
add
lret
mov
mov
add
mov
xor
push
rorb
or
adc
add
imul
test
jle
add
sub
jns
clc
repnz
add
and
pop
mov
add
sub
je
add
sbb
add
lret
aad
mov
clc
adc
add
xchg
das
aas
iret
loopne
jns
pop
pop
push
xor
add
add
ds
pop
sub
sahf
mov
add
push
clc
in
cmp
jns
cmpsl
clc
icebp
das
ret
clc
xor
sarl
sbb
jne
push
add
push
sub
clc
sub
add
aad
adc
and
add
js
and
add
or
aas
jecxz
cmc
in
mov
pop
clc
mov
mov
add
outsl
bound
add
fmull
iret
mov
clc
jns
dec
fs
clc
mov
sar
cld
cli
aam
clc
ret
clc
mov
adc
add
clc
pop
jbe
sbb
clc
das
fstpt
clc
xor
add
xor
add
xchg
xchg
push
adc
mov
scas
push
and
cmp
pop
stc
xchg
cmp
jae
add
xbegin
xchg
scas
cld
xbegin
add
cs
push
ficoms
stos
std
cs
stos
in
aad
in
pusha
add
jno
add
add
iret
cmp
mov
clc
jl
in
stos
test
jns
mov
ficoms
clc
sahf
or
cmp
aaa
leave
ljmp
aam
test
cld
mov
clc
movsb
clc
cltd
popa
add
jge
arpl
add
cmpsb
clc
pop
clc
xchg
pop
clc
push
lods
pop
out
test
clc
in
and
add
imul
pop
movsl
clc
inc
add
mov
inc
clc
leave
xchg
xchg
sbb
sbb
ror
insl
cmp
or
sti
jge
popa
add
mov
clc
ljmp
int3
mov
add
cmpsb
clc
or
clc
jge
lea
add
bound
add
clc
in
lret
add
pushf
or
add
dec
pusha
add
bnd
add
push
clc
hlt
ret
clc
repz
daa
clc
rol
clc
inc
clc
das
int
xchg
add
pusha
add
lods
popf
push
add
cmpsl
clc
scas
imul
clc
cld
push
mov
xor
add
clc
shl
cmc
pusha
add
pop
push
clc
fbstp
pop
clc
sbb
pop
test
dec
jns
adc
add
add
lret
cmp
repz
sar
mov
add
bound
add
add
add
push
jb
add
add
add
add
sbb
add
clc
mov
jg
mov
clc
jnp
add
mov
inc
add
pop
sub
sub
clc
push
add
jmp
clc
movsb
clc
xchg
jnp
mov
call
std
jns
or
clc
dec
mov
push
or
add
xor
add
add
push
add
fdivrp
cmp
clc
fnsave
clc
hlt
es
pop
jb
add
clc
mov
pop
ss
add
or
clc
push
jle
ss
jb
add
inc
clc
add
jnp
lcall
inc
add
int
push
lcall
iret
push
add
clc
push
add
pop
lcall
cmp
add
sbb
xor
mov
clc
add
add
xchg
test
pop
fdivl
and
add
cs
test
dec
loop
pushf
sbb
xchg
xbegin
add
adc
add
add
imulb
clc
mov
jb
add
mov
aam
pop
in
pop
movsl
clc
clc
scas
dec
adc
add
clc
pop
test
xor
pop
out
sahf
dec
sbb
mov
sub
popf
inc
clc
mov
clc
mov
addr16
push
mov
ret
out
cmp
nop
mov
add
mov
add
jne
data16
xor
add
mov
lods
or
add
push
jne
mov
add
adc
mov
cmp
clc
call
jo
add
sbb
clc
sar
clc
aas
jno
add
arpl
add
loope
mov
stos
clc
jmp
clc
ja
pushf
fldl2t
jecxz
fcoml
add
or
clc
aam
jp
clc
xlat
cmp
ljmp
cmp
clc
dec
sbb
aad
test
push
add
add
adc
add
sti
imul
add
fld
clc
cli
into
in
cmp
cmc
fucomp
mov
clc
cwtl
xor
add
cmp
add
mov
mull
add
sbb
in
xabort
clc
mov
add
testl
jg
cs
cmp
fcompl
add
clc
cwtl
dec
aam
add
insb
fsts
add
mov
fnstcw
addr16
push
mov
add
add
incl
clc
dec
jbe
and
add
in
xchg
or
clc
aaa
ficoms
add
xchg
pop
clc
js
add
push
aad
mov
push
add
idivl
add
and
add
xlat
lods
lret
xor
add
xchg
sub
cmp
daa
clc
fnstenv
sahf
or
mov
clc
cmp
scas
fucom
clc
sti
enter
adc
mov
push
xor
clc
repnz
testl
adc
add
aas
jno
add
clc
sbb
mov
jge
add
inc
add
dec
shll
add
jp
adc
add
fdivs
mov
fs
data16
out
ljmp
sub
adc
add
icebp
notb
add
clc
cmp
xor
add
lret
and
add
add
mov
clc
push
add
mul
clc
xor
add
mov
mov
lods
jb
add
scas
and
add
clc
in
xor
add
pop
test
dec
clts
clc
addr16
insb
clc
out
insl
jmp
clc
sar
cmp
add
pop
cmp
stos
mov
push
jl
add
enter
clc
xchg
clc
dec
pusha
add
push
clc
mov
movsb
clc
out
adc
push
add
cmp
add
inc
clc
mov
push
push
clc
sti
dec
sahf
sub
sbb
add
clc
jnp
add
pop
inc
clc
mov
adc
mov
clc
xchg
xor
add
dec
xor
add
add
inc
add
test
xlat
and
add
add
sub
pop
sbb
add
xchg
inc
add
mov
fsubrs
sbb
push
clc
xchg
pusha
add
sbb
ficompl
je
outsl
mov
pop
cld
pop
sbb
cmp
add
add
add
insl
imul
add
push
push
movsb
clc
insl
lret
add
jns
out
inc
clc
loopne
stos
xor
clc
out
inc
add
out
mov
push
scas
clc
ds
outsl
mov
clc
enter
add
sbb
add
add
xchg
mov
out
sub
in
aas
in
mov
mov
clc
test
clc
and
xor
add
ss
dec
xchg
and
add
dec
out
pop
daa
clc
pop
cmp
or
clc
push
jne
clc
jmp
sub
imul
inc
clc
pusha
add
and
add
fnstenv
das
sar
mov
popf
iret
pop
sahf
cmp
add
pushf
mov
push
add
mov
and
add
clc
fcoml
add
add
sbb
adc
add
clc
pop
jle
clc
mov
jne
jae
add
fdivrs
dec
leave
mov
add
mov
dec
leave
mov
sbb
push
add
push
add
xor
add
xor
add
clc
sar
sub
push
cs
ret
mov
aam
outsb
test
clc
cmp
pop
clc
sbb
add
pop
sahf
fists
lret
clc
add
hlt
stc
mov
call
pop
push
add
xchg
pop
aad
add
add
add
cld
push
jg
adc
cmp
enter
add
xor
add
enter
jo
add
ret
xchg
mov
mov
ret
clc
negb
pop
lret
stc
mov
ror
pop
mov
cmpsl
clc
sub
add
fisttps
clc
mov
test
out
add
mov
xchg
cmp
xchg
out
imul
pop
outsl
into
stos
sar
cmp
mov
push
add
jecxz
loope
fisttpl
mov
add
mov
pop
js
clc
mov
or
add
clc
jle
add
and
add
call
xor
lods
fdivrp
push
add
pop
clc
xchg
dec
lahf
loope
push
ja
clc
or
clc
inc
clc
and
jb
add
cmpsb
clc
lea
arpl
add
clc
mov
cli
push
clc
pop
adc
add
mov
movsl
clc
xchg
aas
adc
add
xchg
pop
mov
add
repnz
mov
lret
xchg
xchg
inc
clc
mov
clc
xor
leave
and
add
add
pop
xchg
jg
dec
dec
iret
cmp
out
mov
xchg
or
clc
push
add
xchg
loope
mov
add
aad
push
test
cmp
clc
push
push
dec
fisubrs
jno
add
add
mov
add
jns
jae
add
add
dec
data16
pop
int3
mov
cmc
popa
add
mov
lahf
aas
mov
push
add
inc
add
or
clc
mov
cli
push
cmpsl
clc
cli
sbb
pop
mov
cli
sub
add
mov
adc
add
clc
push
xchg
dec
xor
add
ret
ret
clc
or
add
inc
add
push
dec
fwait
cltd
dec
or
xor
add
lcall
add
test
cmp
mov
dec
xchg
xchg
pop
aaa
imul
int3
popa
add
adc
adc
add
xchg
out
xor
add
adc
add
clc
add
add
add
add
std
out
pop
out
sbb
nop
test
sbb
or
dec
cld
testb
pop
sub
clc
mov
mov
inc
add
xlat
mov
clc
xbegin
add
cltd
and
add
pop
add
xabort
ret
sahf
push
mov
std
imull
or
pusha
add
pusha
add
mov
in
jno
add
add
test
add
add
ljmp
add
jl
and
clc
into
push
clc
or
push
mov
jle
clc
dec
pop
leave
mov
xchg
idivl
cmp
shrl
clc
xchg
pop
mov
add
mov
add
add
clc
cmpsb
clc
push
jmp
fstcw
pop
mov
clc
ret
outsl
pusha
add
add
add
jmp
clc
xor
mov
insb
shll
add
or
clc
xchg
repnz
add
or
add
jecxz
push
add
lods
and
add
sbb
add
sbb
xchg
cmp
clc
daa
clc
adc
add
fbstp
repz
dec
inc
clc
pushf
repnz
clc
push
cmp
add
mov
aam
clc
or
xchg
xor
add
add
cs
lods
jle
popf
jo
add
clc
xchg
mov
daa
clc
lea
fstps
add
jmp
clc
adc
out
mov
dec
out
repz
ljmp
push
add
cmpsl
clc
outsl
pop
pop
ds
daa
clc
decb
mov
pop
mov
imul
xbegin
iret
sub
xabort
clc
stos
xbegin
clc
out
and
add
pushf
fdiv
mov
out
shl
clc
pop
cli
outsb
aad
jg
or
mov
inc
clc
pop
clc
jl
mov
scas
es
data16
cmp
ljmp
daa
clc
cmp
xchg
push
add
add
clc
out
cmc
out
bound
add
xor
clc
add
clc
push
pop
dec
in
push
clc
out
jecxz
and
mov
add
sub
adc
data16
mov
inc
add
popf
pop
testl
cmp
xchg
cli
xor
add
pop
clc
push
add
jno
add
dec
clc
add
or
add
push
add
mov
in
das
cmp
xor
add
cmp
add
int3
pop
sti
pop
mov
int
xchg
lret
and
clc
dec
jg
in
fsub
clc
pop
mov
add
jnp
push
add
out
lret
mov
mov
stos
jmp
cs
jmp
popa
add
out
mov
adc
add
add
fldcw
sbb
cmp
clc
dec
pop
xchg
pop
enter
add
xor
add
add
xor
xbegin
add
testl
mov
clc
mov
into
test
xor
add
clc
jb
add
in
mov
add
add
push
add
rolb
add
add
clc
or
clc
add
add
add
lods
mov
push
fs
pop
insb
std
jnp
test
mov
clc
dec
pop
loop
data16
movsb
clc
icebp
jo
add
insl
xor
add
xchg
cwtl
jmp
clc
push
xor
mov
aas
test
sar
add
inc
clc
xor
add
mov
inc
clc
in
add
add
out
sub
adc
add
dec
iret
mov
clc
pop
fadd
clc
xchg
adc
add
fidivrl
adc
add
movsl
clc
xlat
ret
mov
or
cli
ret
clc
xlat
mov
clc
and
add
scas
cmpsb
clc
ss
in
mov
out
mov
neg
add
add
xbegin
pusha
add
pop
clc
cs
jg
stos
jbe
add
jl
sub
sbb
clc
adc
mov
add
in
hlt
hlt
cmp
clc
mov
mov
mov
add
add
rcll
add
push
add
test
fnsave
add
jb
add
clc
int3
push
add
inc
clc
push
add
repz
inc
clc
mov
lock
clc
clc
cs
pop
clc
es
inc
add
mov
fisubl
test
add
jp
clc
or
mov
clc
out
mov
popa
add
inc
clc
in
jb
add
clc
mov
clc
pop
mov
cmc
cmp
jg
popf
pop
add
add
arpl
add
clc
rcrl
clc
xchg
outsl
sbb
arpl
add
mov
out
adc
add
add
insl
fdivr
and
add
add
clc
sbb
xchg
inc
add
sbb
jae
add
push
inc
clc
loop
sbb
add
movsb
clc
sbb
aaa
cs
fidivrs
fldl
add
or
add
push
and
add
add
fs
enter
sbb
add
add
clc
cld
fistps
adc
add
xor
add
clc
mov
data16
mov
push
add
mov
mov
pmaxub
add
mov
fs
xlat
pop
xchg
mov
inc
add
jno
add
add
dec
push
add
cmp
add
ljmp
in
sbb
clc
nop
sub
out
ficoml
xchg
fstps
dec
dec
arpl
add
clc
in
mov
cmp
insl
int3
scas
xchg
lcall
scas
imul
jle
adc
push
pop
inc
clc
mov
ret
dec
add
add
xchg
jmp
xor
add
mov
clc
out
lea
fsubr
cwtl
pop
clc
mov
mov
aas
std
dec
sub
popa
add
mov
add
add
loope
xor
add
repnz
add
and
add
call
mov
clc
arpl
add
clc
shll
add
pop
sbb
add
push
addr16
popf
jl
clc
repnz
ljmp
clc
imul
clc
or
add
in
push
add
or
iret
xabort
add
lock
add
dec
aad
and
add
add
cmp
movsl
clc
int3
ds
mov
movsl
clc
loopne
dec
lods
mov
enter
mov
add
mov
ficoml
add
push
pusha
add
cmpsl
clc
testb
mov
mov
sbb
clc
cmp
push
add
inc
add
mov
add
clc
pop
inc
add
into
pushf
daa
clc
imul
clc
or
or
clc
dec
test
push
and
add
adc
add
mov
jl
cmp
sbb
add
in
cmp
into
inc
clc
pop
out
fs
je
push
xor
add
mov
mov
add
clc
mov
sbb
add
bound
add
sbb
xor
clc
push
add
in
in
loopne
dec
gs
shrl
mov
or
and
add
add
jae
add
add
xchg
maskmovq
testl
cmp
sbb
mov
clc
lret
add
add
mov
aam
pop
clc
mov
jns
add
add
add
jbe
add
dec
sar
adc
add
and
add
add
mov
add
jbe
jecxz
fwait
xchg
cwtl
push
add
pop
xabort
add
add
dec
inc
clc
aaa
mov
mov
cmpsl
clc
imul
stos
js
fs
xbegin
stc
shlb
clc
jne
sbb
jge
and
add
mov
clc
xor
add
mov
add
push
add
mov
add
scas
int3
adc
add
je
add
cmc
xchg
sar
inc
clc
imul
mov
add
add
cltd
xchg
test
mov
add
lods
jno
add
icebp
cmp
sbb
imul
in
adc
add
popf
out
fwait
mov
ss
nop
sub
add
adc
add
add
cmp
mov
loop
sarb
cld
mov
fcmove
loop
pop
and
jno
add
call
add
mov
mov
enter
loopne
push
cs
clc
push
clc
sarl
dec
dec
cmpsl
clc
lods
cli
pop
filds
add
jp
jmp
clc
xchg
xor
add
es
push
data16
fwait
dec
jne
aad
scas
cmp
pop
sub
clc
scas
faddl
jno
add
jg
popa
add
out
mov
sub
das
int
clc
sbb
mov
push
add
imul
add
lea
add
xor
add
clc
adc
add
clc
xor
add
js
lret
dec
adc
add
fadd
clc
push
mov
add
cmp
imul
dec
lcall
dec
push
cmpsl
clc
test
and
clc
jp
in
bound
add
add
outsb
aad
inc
add
add
add
add
pop
or
pop
inc
clc
and
sahf
adc
push
add
jg
leave
and
add
sar
in
pop
clc
mov
add
cmpsb
clc
scas
mov
clc
push
and
add
add
stos
in
sar
add
push
add
pop
inc
add
mov
add
clc
pop
xor
add
lea
xor
lret
cltd
sub
mov
and
add
lods
repz
cmc
pop
js
mov
jae
add
add
add
movsb
clc
cmp
faddl
add
jge
rorb
lods
xchg
mov
jecxz
lahf
insb
cwtl
sar
fisubrs
sub
out
xor
add
pop
mov
clc
add
and
add
sbb
mov
aad
fstl
lea
add
into
mov
pop
int3
add
clc
mov
xlat
adc
add
add
mov
pop
test
fcomps
cli
fmull
sbb
add
cld
cmc
mov
lret
mov
mov
add
std
ret
jge
into
mov
call
js
clc
and
adc
add
cmp
clc
lret
mov
add
sar
fdivrl
add
add
clc
loop
adc
movsl
clc
shl
clc
rclb
shrb
inc
add
mov
add
in
xchg
inc
add
push
cmp
pop
push
add
sbb
jnp
ret
mov
ds
add
rolb
jae
add
mov
inc
clc
add
add
in
lods
push
add
add
xor
add
xchg
push
add
add
jnp
repz
lahf
pop
mov
data16
std
dec
fs
sar
jle
and
add
add
adc
add
and
xor
add
clc
sub
lock
and
add
out
repnz
jnp
clc
adc
add
pushf
sar
push
add
in
inc
clc
xchg
bnd
add
aam
cmp
mov
cwtl
sti
dec
cmp
filds
add
or
clc
std
mov
mov
add
out
jmp
imull
fimull
xchg
mov
fmul
testl
sbb
mov
jno
add
test
cld
cmp
cmp
jg
je
sbb
imul
add
clc
xbegin
clc
add
add
es
mov
add
pop
clc
mov
mov
clc
or
clc
dec
push
imul
mov
add
push
add
mov
clc
ds
xbegin
add
daa
clc
adc
add
pop
ds
nop
add
insb
out
xchg
mov
mov
clc
aas
sub
push
add
add
clc
jl
jle
lret
mov
jo
add
dec
arpl
add
rcrb
clc
lcall
lcall
add
mov
add
add
add
ss
mov
clc
or
sub
clc
cmp
and
or
jne
add
sar
dec
push
add
jnp
mov
sti
test
cmpsl
clc
dec
fdivrl
clc
scas
xchg
in
or
clc
sbb
mov
add
fwait
pusha
add
lcall
add
mov
iret
movsl
clc
dec
jbe
fidivrs
clc
push
xchg
sahf
xchg
mov
dec
lret
add
lret
arpl
add
mov
clc
movsl
clc
hlt
xchg
lahf
ret
ret
clc
jmp
clc
mov
sub
ret
clc
cs
fwait
inc
clc
or
add
add
sub
pop
mov
clc
out
or
ljmp
add
or
js
clc
clc
mov
popf
push
inc
add
xchg
int3
add
add
fsubrs
clc
cmpsb
clc
iret
sahf
inc
clc
inc
clc
imul
leave
pop
je
pop
ljmp
clc
jae
add
sarb
out
enter
add
ja
cmp
outsl
loope
mov
add
sub
add
cmp
add
xchg
xchg
shlb
mov
add
cmc
inc
clc
nop
cs
adc
jle
cmp
jg
cmp
clc
ret
clc
or
mov
add
inc
clc
mov
sbb
int
clc
mov
add
add
push
add
mov
gs
jmp
cld
add
add
clc
sub
cwtl
push
push
push
in
push
push
clc
sbb
clc
bound
add
pop
push
add
add
add
adc
add
clc
add
clc
and
sub
sbb
mov
clc
out
int3
mov
clc
sub
add
add
cmp
add
mov
add
xchg
jno
add
mov
and
add
out
cltd
push
popf
add
insb
sbb
pop
sub
pop
xlat
iret
loopne
dec
dec
dec
push
hlt
push
xor
add
cmp
clc
and
add
add
pop
cmp
clc
aad
add
cld
push
add
add
mov
cmp
faddl
jae
add
add
sar
mov
clc
ret
and
add
xchg
sbb
clc
rorb
cmp
push
mov
imul
sti
sub
popa
add
div
lahf
dec
or
out
sbb
add
clc
lock
clc
xchg
adc
add
add
cmp
push
or
call
add
and
lea
sbb
add
sar
add
dec
xchg
mov
jmp
add
adc
imul
add
clc
fsubrp
sar
add
call
iret
cmp
clc
pop
and
add
es
mov
clc
inc
add
mov
clc
jecxz
mov
notl
add
add
loop
in
ficoml
sub
clc
cmp
add
sbb
add
loop
pop
incb
stc
jge
xor
fstpt
repz
or
clc
add
add
clc
scas
test
int
xor
lahf
xchg
and
fisubl
clc
fabs
clc
jae
add
mov
dec
pop
jle
clc
lahf
insb
fmuls
add
or
add
push
pop
aad
add
sub
jb
add
pop
clc
aam
out
mov
xchg
and
cmc
sub
clc
aas
sub
jb
add
ja
sbb
xchg
inc
clc
fs
mov
fistl
add
jp
dec
test
clc
pop
aad
cmp
sub
add
add
call
add
jbe
cmpsb
clc
popa
add
movsb
clc
aaa
inc
clc
mov
clc
jns
clc
jmp
js
add
push
pop
popa
add
mov
shrb
sub
add
dec
ret
clc
fsubp
clc
popa
add
and
sahf
adc
add
ss
clc
or
clc
adc
clc
cmp
xor
add
lods
push
rolb
add
add
fmull
clc
adc
add
clc
cmp
mov
clc
sahf
int3
xchg
sbb
out
add
ret
and
add
negl
jmp
xlat
pop
jno
add
add
add
add
mov
lret
fildll
test
push
add
clc
popf
shll
sub
call
call
add
inc
clc
rcl
sar
sbb
es
cli
clc
lea
inc
clc
sub
out
push
add
imul
add
loope
jae
add
push
add
enter
add
add
add
faddp
clc
jmp
jmp
std
scas
push
dec
and
add
loope
cmp
inc
add
adc
in
pop
cmp
sub
clc
repz
add
inc
clc
pop
clc
jmp
lods
stc
jns
sub
clc
push
jbe
clc
or
inc
clc
mov
cmp
push
clc
xchg
cs
ljmp
mov
clc
fstl
sbb
add
add
clc
mov
clc
fmuls
clc
cmp
add
fsubs
push
das
imul
add
xchg
adc
add
add
add
xlat
cltd
cmp
add
jmp
insb
ss
clc
mov
push
rclb
add
addr16
dec
ja
shll
add
test
dec
fcomi
sub
xchg
lahf
daa
clc
mov
add
add
mov
lock
clc
dec
idivb
push
ficompl
add
outsb
stos
pop
inc
add
inc
clc
dec
add
add
add
add
call
clc
jb
add
clc
sub
cmp
clc
jb
add
lahf
repnz
mov
in
add
add
addr16
pop
cmp
add
clc
cmp
add
inc
add
enter
clc
add
add
cmpsb
clc
movsb
clc
or
add
fidivrs
add
outsl
mov
push
jns
pop
xor
cmp
arpl
add
add
lods
decb
pop
xor
xbegin
xchg
cli
add
add
clc
dec
ret
clc
and
clc
cmp
ja
and
add
outsb
sub
add
mov
push
add
shl
fsubrs
dec
or
clc
ret
clc
xchg
mov
hlt
push
add
loop
xchg
sub
xchg
add
add
jo
add
clc
adc
add
adc
add
pop
fistpll
adc
add
xchg
test
cltd
sbb
cmpsl
clc
pop
ret
clc
mov
clc
mov
xchg
out
xor
add
ret
add
xor
add
add
xbegin
xor
add
clc
jno
add
clc
mov
cmpsl
clc
pop
inc
add
call
clc
mov
add
or
clc
fbstp
cld
inc
clc
inc
clc
pusha
add
adc
add
dec
jns
clc
sahf
cmp
jge
xor
add
cmp
add
and
add
cmp
mov
iret
or
xor
cmp
sbb
clc
bound
add
xchg
push
add
mov
imul
add
stc
scas
hlt
inc
clc
pushf
jg
jnp
sub
push
xor
add
xchg
xor
add
call
push
sub
pop
mov
add
pop
clc
out
jno
add
and
sbb
clc
icebp
mov
int
clc
inc
clc
imul
aam
push
sub
iret
movsl
clc
lock
add
clc
lahf
jns
enter
sub
add
insb
mov
add
or
fdivrl
pushf
mov
clc
dec
jp
imul
inc
add
or
add
fisubl
clc
mov
mov
clc
pop
xchg
or
and
clc
das
mov
cmp
add
call
dec
js
mov
mov
clc
mov
jae
add
mov
add
mov
add
xchg
fisubrl
or
clc
insb
mov
sub
inc
clc
mov
clc
mov
xor
add
insb
fnstcw
popa
add
sub
dec
cld
lahf
out
scas
lea
push
add
scas
and
jbe
clc
imul
inc
add
lock
add
add
clc
scas
pop
sbb
enter
dec
lahf
push
clc
push
sti
aam
inc
add
sti
rcll
je
add
lahf
xchg
repnz
add
test
pop
add
lods
mov
and
add
iret
pop
clc
in
clc
repnz
fwait
push
repnz
push
fwait
loopne
sbb
add
clc
jbe
sub
aaa
mov
pop
add
add
inc
clc
mov
fiadds
add
mov
add
add
mov
clc
lret
mov
clc
dec
mov
add
add
add
pop
clc
mov
add
sar
popf
or
into
fs
jmp
xchg
push
ljmp
clc
test
clc
sbb
xchg
js
imul
clc
mov
mov
pop
fwait
sbb
clc
adc
add
fnclex
clc
stos
mov
movsl
clc
inc
add
aaa
pusha
add
ja
xchg
sti
push
lahf
insl
aad
dec
scas
loop
jl
push
icebp
jo
add
fistpl
jae
add
add
add
add
or
imull
jl
inc
clc
add
add
gs
call
add
call
sub
es
xabort
mov
and
add
in
mov
clc
mov
jo
add
repnz
popl
fsubrl
imul
xabort
clc
clc
and
add
test
sub
shrb
jnp
enter
fildll
mov
add
jle
add
add
add
pop
das
out
sbb
clc
mov
clc
sub
adc
xchg
jne
clc
das
aaa
ss
clc
pop
lret
inc
add
cmp
clc
pusha
add
dec
test
aas
neg
lock
clc
idivb
cmp
clc
scas
mov
pop
test
clc
sbb
push
clc
fnsave
add
jae
add
xchg
inc
add
jecxz
aad
in
cmp
and
inc
clc
data16
push
clc
mov
leave
mov
push
mov
add
jle
clc
sub
sbb
pslld
add
add
mov
lahf
divb
dec
or
clc
or
imul
lret
inc
clc
into
int3
lea
clc
iret
cmp
iret
int3
sbb
add
mov
bound
add
adc
lods
mov
loope
xchg
fbstp
add
sub
xchg
push
int
clc
loope
xchg
cltd
out
cld
in
pop
inc
add
cmp
clc
cmp
inc
clc
decb
inc
clc
jecxz
lock
add
xor
out
mov
pop
push
clc
mov
add
pop
pop
es
mov
clc
xor
add
clc
push
es
pop
loop
fs
clc
notb
cs
and
add
add
mov
add
push
add
mov
pop
fdivrl
xchg
test
mov
es
adc
add
cld
int
add
add
add
ret
add
add
add
add
loope
enter
clc
sti
jno
add
add
push
add
sub
cmp
addr16
fcom
or
cltd
jecxz
inc
clc
inc
add
add
add
mov
push
popa
add
lods
push
cmpsl
clc
scas
lea
mov
add
es
cmp
add
movsb
clc
mov
testl
out
jp
add
std
in
into
cmp
sahf
cli
jns
lahf
movsb
clc
cmpsl
clc
dec
mov
mov
clc
inc
add
shrl
clc
pop
repz
push
jecxz
movsl
clc
or
clc
pop
outsb
or
add
add
cmc
jge
hlt
sar
cmp
and
add
xchg
dec
mov
push
push
mov
clc
and
add
inc
clc
pop
inc
clc
push
add
pop
clc
cmp
sar
clc
dec
iret
das
push
add
aad
clc
mov
add
loope
leave
adc
add
cmp
clc
xor
add
add
divps
or
enter
loop
sbb
add
push
fbstp
clc
fisubrs
cmp
aam
xor
add
add
repnz
lcall
add
add
add
mov
test
mov
add
popa
add
mov
clc
sub
popf
movsb
clc
iret
loop
mov
sar
add
clc
aaa
dec
dec
xor
add
mov
add
add
add
add
xor
pop
js
clc
jmp
cmc
lret
xor
out
adc
add
ror
lods
sub
adc
add
xchg
enter
clc
xor
add
es
pop
sub
clc
pop
mov
clc
mov
xor
add
or
aas
xlat
adc
add
clc
mov
or
add
leave
fnstcw
add
mov
cmp
adc
add
cmp
clc
data16
es
sbb
mov
mov
add
add
add
jmp
add
clc
ret
sbb
add
xor
add
adc
add
xchg
mov
add
add
add
xchg
push
jne
add
pop
sbb
shll
clc
mov
ljmp
or
cld
pmaxsw
int3
pop
clc
aas
frndint
data16
and
add
mov
es
jne
pop
gs
mov
dec
ljmp
jns
fdiv
mov
push
or
push
xor
add
adc
add
pushf
std
int3
push
js
or
out
mov
icebp
aaa
mov
add
mov
clc
fidivrl
scas
jo
add
clc
cmp
sbb
inc
clc
dec
jne
xchg
lahf
je
add
xchg
int
pop
adc
add
mov
clc
pusha
add
ljmp
push
add
enter
or
mov
pop
cmpsb
clc
adc
add
insl
out
sar
jns
pop
cltd
xabort
hlt
pop
roll
add
pop
das
mov
push
fsubs
pop
clc
push
fsts
add
stc
aad
add
in
pop
arpl
add
add
cld
stos
sbb
clc
scas
sub
sbb
mov
add
das
rorl
sbb
cmp
scas
cmp
adc
add
lods
push
fs
mov
add
cmp
add
jge
clc
xor
sub
aas
out
fbld
add
ss
mov
fsubl
mov
push
flds
add
inc
clc
incb
add
mov
add
mov
sub
xchg
sub
add
or
aad
add
cwtl
jno
add
add
clc
movsl
clc
push
add
stos
fldl
add
in
cmp
cmpsb
clc
out
mov
in
and
sub
add
jb
add
clc
out
insl
xlat
nop
arpl
add
xchg
dec
arpl
add
push
add
pop
and
add
stc
ret
jbe
add
adc
add
mov
clc
cmp
add
jmp
mov
pop
pop
filds
add
jb
add
pop
dec
mov
popl
add
cltd
lods
daa
clc
imul
jbe
imul
pop
xor
clc
inc
clc
push
clc
jmp
push
int
std
mov
cmc
cmp
clc
addr16
cmpsl
clc
jmp
fld
clc
inc
clc
cmp
dec
lahf
idivl
cs
enter
dec
dec
sarb
xor
xchg
xchg
lcall
mov
dec
mov
inc
add
sub
add
loop
roll
aad
clc
xor
add
jmp
test
sub
bound
add
data16
int3
pop
clc
sahf
pop
mov
sub
clc
sbb
mov
add
in
test
lods
or
ret
clc
add
add
call
repz
leave
xchg
imul
clc
adc
add
clc
int3
mov
and
add
outsb
xor
clc
xchg
cmp
lret
arpl
add
add
add
sbb
sbb
js
and
in
and
add
add
add
add
adc
add
clc
add
add
cs
mov
into
mov
add
stc
cmp
lods
xchg
bound
add
mov
fwait
mov
std
call
clc
jno
add
add
mov
or
add
xor
add
add
aad
add
int
fs
lahf
je
add
add
add
inc
add
das
sub
push
sbb
pop
and
add
clc
das
and
int3
scas
jns
add
inc
add
dec
mov
repnz
inc
clc
test
clc
jmp
clc
pop
aaa
test
jmp
clc
insb
imulb
and
add
clc
mov
data16
jp
clc
sbb
cmp
add
mov
stc
and
add
or
ficoms
add
repnz
clc
cvtpi2ps
push
loope
repnz
sub
inc
clc
push
mov
and
add
pop
data16
xor
clc
jle
into
int3
and
repz
inc
add
aam
fwait
ret
add
fs
pushl
add
clc
pop
pop
scas
sbb
clc
aaa
adc
add
icebp
xchg
push
add
mov
add
clc
imul
cmp
mov
add
add
in
xchg
add
add
dec
sub
add
jg
cmp
pop
jbe
ret
clc
mov
clc
stos
jp
clc
pop
xchg
push
cli
gs
sar
inc
add
xchg
mov
clc
xor
add
clc
sbb
leave
and
add
clc
dec
nop
cmp
add
test
add
or
add
clc
lahf
sub
mov
sbb
add
je,pt
dec
mov
std
fnsetpm(287
clc
and
add
clc
mov
add
dec
test
pushf
in
or
clc
push
clc
sub
fiadds
mov
fs
int3
ror
cmp
clc
push
add
scas
push
jle
adc
mov
clc
in
jb
add
cmp
jbe
push
xchg
jp
or
mov
clc
ret
clc
mov
js
add
std
jb
add
add
mov
dec
mov
sub
clc
pop
mov
cmp
lret
lods
imul
int
mov
add
bound
add
add
clc
es
push
lods
data16
mov
clc
sbb
add
clc
mov
incl
mov
imul
add
ja
mov
add
packssdw
fmul
dec
out
insl
inc
clc
pop
sbb
lods
jge
cmp
xor
add
cmp
clc
push
repnz
adc
add
mov
mov
jo
add
ficompl
outsl
dec
add
fists
test
mov
adc
mov
clc
mov
and
add
dec
fsub
clc
testl
clc
ret
clc
fwait
adc
add
jb
add
add
add
fdivrs
push
add
xor
add
push
cmpsl
clc
enter
xchg
mov
test
add
fwait
mov
mov
clc
lahf
mov
mov
add
cmp
push
add
xlat
stos
lea
dec
scas
packsswb
add
call
push
add
pop
push
add
add
push
sbb
out
adc
add
add
clc
xor
add
jecxz
push
clc
out
fists
add
add
add
pop
dec
mov
xchg
xlat
mov
in
xor
insl
sbb
outsb
jp
add
mov
lret
xchg
fmull
sub
lret
clc
push
add
dec
fldl
add
add
test
jns
pop
pop
mov
movsb
clc
jg
xchg
cmp
paddusb
mov
clc
jne
mov
jbe
clc
xchg
mov
and
add
cmpsb
clc
insl
jl
repz
mov
and
ret
clc
loop
pop
aas
sub
cmpsb
clc
data16
inc
add
dec
cwtl
scas
popf
xbegin
add
add
popa
add
or
dec
pop
ds
pushf
testb
es
fsts
add
jne
pop
mov
scas
cltd
aaa
mov
add
mov
add
pop
daa
clc
xchg
push
fimuls
data16
test
push
and
add
ret
mov
add
mov
sub
mov
inc
clc
lret
adc
add
xbegin
mov
sbb
in
enter
add
sub
dec
pop
int
fadds
or
arpl
add
add
loop
push
add
sahf
mov
std
pop
sbb
xchg
cmp
ljmp
push
or
dec
rcll
add
add
add
call
add
and
add
mov
add
movsl
clc
jo
add
xor
add
pushf
xchg
into
mov
xchg
gs
xchg
ss
mov
jbe
lock
movsl
clc
scas
mov
add
adc
add
cmp
inc
clc
jge
add
and
lods
aaa
bound
add
dec
mov
clc
mov
stc
imul
sbb
cwtl
pop
cmp
jecxz
scas
imul
bound
add
pop
bound
add
clc
jg
dec
out
sub
clc
jecxz
xchg
daa
clc
aaa
push
add
inc
clc
mov
aaa
cmp
mov
lock
xor
add
mov
mov
aaa
fs
xor
add
popa
add
xchg
cld
ret
clc
out
mov
sar
cltd
push
push
add
xchg
pop
scas
popf
push
add
clc
test
inc
clc
mov
clc
push
mov
add
lods
ss
clc
mov
mov
add
add
lock
int3
cmp
roll
xchg
imul
clc
dec
xchg
fs
fcoms
add
add
mov
cmc
dec
or
daa
clc
mov
inc
add
stc
cli
fwait
xchg
push
add
jle
mov
clc
jno
add
pusha
add
mov
js
std
lods
dec
movsb
clc
loopne
cmpsl
clc
leave
add
add
add
clc
xchg
cs
mov
add
add
sbb
cmpsb
clc
outsl
xchg
das
mov
cmp
dec
lret
jo
add
add
add
cmp
clc
mov
push
add
divb
add
or
clc
ljmp
cwtl
stos
mov
pop
dec
loop
cmc
push
clc
in
jge
push
addr16
test
xor
add
add
xchg
sub
mov
xabort
xchg
xabort
add
add
sub
add
add
cs
in
cmp
lcall
imul
adc
add
mov
jnp
dec
xbegin
or
js
add
add
clc
in
sub
int
push
xchg
sar
daa
clc
or
add
or
pusha
add
out
fldenv
add
lods
mov
shrl
pop
xchg
insb
movsl
clc
cmp
clc
sar
and
add
xor
adc
add
jge
or
clc
aas
mov
xchg
and
sbb
add
dec
xor
add
lret
add
xchg
push
fisubs
adc
add
clc
pusha
add
cmp
add
sahf
push
test
dec
fcompl
or
xor
add
cmp
add
sbb
cld
mov
clc
dec
add
add
clc
add
add
clc
jne
push
xabort
mov
mov
add
clc
sub
push
add
loopne
sbb
add
out
cli
and
addr16
xchg
das
in
popa
add
add
or
mov
icebp
in
mov
add
bound
add
or
popa
add
test
clc
sar
clc
roll
stos
pop
xchg
jne
lcall
adc
add
clc
xor
clc
and
push
clc
clc
in
insb
imul
xchg
push
xor
add
ljmp
clc
push
mov
int3
cs
jge
clc
sbb
add
stos
flds
test
and
add
inc
add
jecxz
fldt
add
or
js
testl
jne
clc
or
add
cld
mov
add
mov
loop
lret
pop
sahf
or
sub
mov
das
add
in
dec
aaa
pop
pusha
add
sbb
mov
jle
clc
add
ja
fs
add
add
clc
loope
in
sti
jp
clc
jno
add
fadds
clc
inc
add
or
icebp
inc
add
aaa
jns
clc
repnz
add
xlat
xchg
jae
add
add
mov
dec
xor
add
js
clc
pop
push
push
add
add
add
clc
sub
mov
adc
loopne
ret
add
or
push
add
mov
mov
out
push
in
fxch
popa
add
lahf
js
add
int
xchg
mov
int
jl
add
dec
test
mov
sub
adc
bound
add
out
cmp
fxam
clc
mov
clc
pop
or
xlat
mov
add
or
add
testl
aam
test
add
add
sbb
add
cmpsl
clc
and
mov
sbb
add
fidivrl
cltd
loopne
fwait
ret
clc
dec
dec
clc
sub
jno
add
add
cmp
clc
push
daa
clc
xchg
ja
ljmp
add
add
xor
add
inc
add
push
rorl
stos
jmp
gs
call
in
stos
pop
clc
mov
jo
add
cmp
es
pop
pop
clc
clc
jg
cli
in
jo
add
rclb
add
pushf
out
or
and
add
clc
clc
ret
jge
cmp
mov
xbegin
add
add
mov
clc
mov
add
arpl
add
clc
or
and
add
sub
movsl
clc
adc
add
mov
fwait
loop
jb
add
fldcw
inc
add
insb
aad
add
and
lock
add
jmp
into
sbb
add
mov
xchg
stos
and
or
mov
add
data16
insl
scas
es
fistpl
and
add
xbegin
or
and
add
clc
fiaddl
clc
jo
add
jle
and
add
inc
add
std
mov
sbb
push
add
xchg
adc
add
dec
loop
cmc
mov
pop
clc
sarb
lret
cwtl
pop
xor
add
add
add
add
cmpsb
clc
cmp
aad
clc
mov
pop
clc
dec
ja
test
in
mov
add
vandnps
out
in
jns
sub
in
push
or
add
adc
add
pop
clc
mov
clc
testl
lods
add
clc
add
in
add
add
add
and
add
clc
mov
add
stc
jp
jb
add
clc
loop
xor
add
daa
clc
jne
jmp
mov
clc
cmc
add
add
ds
xor
sub
fists
add
out
add
add
dec
outsl
mov
aas
imul
add
jns
add
add
mov
hlt
hlt
xchg
ret
dec
pop
daa
clc
loop
pop
clc
add
add
cli
insl
adc
add
add
clc
cld
adc
add
add
add
add
clc
test
add
mov
mov
clc
clc
jno
add
add
arpl
add
ss
clc
scas
std
inc
add
jmp
jle
clc
arpl
add
clc
xor
add
add
mov
add
xor
add
mov
outsb
cmp
dec
mov
xor
add
cwtl
mov
clc
mov
mov
test
clc
sbb
adc
add
sbb
loope
inc
clc
fldenv
sahf
pop
add
add
add
pop
mov
add
sbb
cmp
out
lret
enter
clc
nop
int3
fwait
out
ja
add
and
popf
jb
add
mov
sahf
mov
cld
push
test
fistpll
mov
cmp
popf
and
add
mov
clc
enter
add
add
clc
loop
cmpsl
clc
dec
sub
clc
and
imul
add
dec
jle
add
loopne
incl
inc
add
inc
clc
sbb
sbb
clc
lret
clc
xchg
iret
insl
xchg
lods
add
add
push
add
jmp
out
aam
pop
repz
dec
inc
add
fisubrs
dec
fwait
dec
xor
add
push
add
mov
xbegin
xor
sbb
dec
add
add
ja
clc
and
add
and
add
add
clc
fbstp
add
test
jns
add
jnp
mov
jae
add
add
add
add
push
mov
add
repz
add
ljmp
insb
cmpsl
clc
mov
iret
pop
mov
clc
nop
inc
add
xchg
arpl
add
ss
dec
imulb
clc
pop
mov
out
bound
add
add
lea
mov
aam
clc
aad
clc
clc
adc
add
add
jae
add
bound
add
cmp
lods
imul
sbb
sbb
clc
adc
nop
mov
mov
mov
and
add
clc
push
add
mov
clc
nop
popa
add
jne
add
es
lock
mov
add
dec
mov
inc
add
cwtl
mov
add
stos
xor
add
std
lret
xlat
or
mov
clc
cs
mov
mov
clc
fld
clc
cwtl
adc
add
clc
add
clc
dec
aas
sub
clc
xor
add
inc
add
popl
add
pop
outsl
shlb
and
add
xchg
push
cmpsb
clc
ret
cltd
jne
clc
inc
clc
lea
add
xchg
fs
sar
clc
dec
shl
clc
lock
clc
out
jb
add
shll
add
sar
aaa
pushf
sub
cmp
lret
clc
dec
lahf
cmp
mov
jo
add
sar
inc
clc
mov
cli
sbb
clc
inc
add
mov
clc
test
jmp
add
clc
push
add
mov
clc
inc
clc
outsb
sbb
add
clc
sub
sbb
aam
dec
mov
clc
jp,pt
mov
clc
imul
loop
sub
and
sub
jns
dec
fcoms
add
bound
add
add
xor
add
add
add
add
clc
fstps
fs
mov
leave
lcall
add
loopne
pop
add
add
clc
das
pop
std
sbb
ficoml
repnz
clc
clc
cwtl
pushf
js
dec
cmp
add
mov
dec
rorb
clc
cmp
or
mov
clc
cmp
scas
mov
sti
cmp
clc
outsl
ja
ljmp
clc
xbegin
add
aam
data16
jnp
add
jg
loop
test
jo
add
clc
inc
clc
push
add
movsb
clc
push
add
daa
clc
jns
dec
icebp
stc
cmp
lret
pop
je
fwait
dec
repnz
xor
add
enter
pushf
push
shll
add
pop
dec
pusha
add
xor
add
es
mov
add
clc
ljmp
clc
or
clc
mov
or
pushf
pop
lcall
sbb
clc
stc
xchg
push
pusha
add
test
xor
add
repnz
in
mov
sar
iret
sbb
clc
out
pop
pop
sub
mov
lock
clc
add
clc
mov
popf
imul
shl
clc
cmpsl
clc
or
mul
clc
repz
pop
fiaddl
add
cld
add
add
lods
shll
clc
int3
sbb
int3
push
add
stc
jns
aad
js
xor
add
add
sbb
clc
mov
cmp
test
or
inc
add
out
mov
clc
xchg
xchg
cmp
pop
pop
ror
jns
fs
push
mov
push
clc
cmp
add
or
cmp
clc
jle
icebp
mov
clc
jb
add
sbb
xchg
cmc
pop
and
lret
push
and
add
lods
xor
add
clc
add
add
xchg
add
add
jne
js
rcrb
in
test
clc
xchg
insl
ss
xchg
es
xchg
or
mov
add
add
dec
test
call
clc
out
shlb
add
sbb
nop
mov
or
dec
adc
add
jbe
clc
dec
sahf
das
int3
pop
nop
sub
clc
hlt
in
and
add
fwait
scas
sub
into
add
add
movsl
clc
cmc
push
push
icebp
push
loop
fsubs
clc
inc
add
add
in
xchg
jecxz
pop
cmp
clc
rorl
xchg
js
clc
loop
iret
fwait
inc
add
push
fs
push
clc
je
push
jns
clc
xchg
add
add
or
add
jl
push
addr16
ja
std
rcrl
in
not
push
add
jo
add
jo
add
clc
xchg
sar
clc
xchg
pop
jo
add
enter
test
clc
pop
mov
scas
in
and
xlat
add
add
test
in
mov
in
xchg
adc
in
clc
sar
clc
fdivs
add
jbe
mov
add
movsl
clc
jmp
mov
and
stos
test
addr16
cltd
mov
xchg
lock
clc
pop
in
mov
or
daa
clc
add
cmpsb
clc
sar
sub
dec
loop
adc
clc
sub
mov
imul
add
adc
add
xchg
mov
imul
test
mov
js
loopne
rcrb
clc
xchg
xor
add
add
out
cmpsl
clc
leave
shrl
pusha
add
in
fcmovne
mov
add
fildl
add
and
arpl
add
pusha
add
xlat
pop
xchg
adc
pop
cmp
inc
add
std
out
das
mov
add
adc
add
sbb
inc
add
popa
add
lods
mov
lods
jge
clc
adc
mov
fcmovb
clc
arpl
add
in
into
mov
clc
pop
std
mov
xor
add
add
enter
dec
dec
pop
xchg
leave
es
lcall
clc
es
or
js
clc
sbb
mov
clc
mov
scas
aaa
xchg
mov
xchg
xbegin
add
jle
lods
mov
nop
clc
in
xor
add
xabort
clc
pop
clc
xabort
stos
aas
cmp
jecxz
mov
jae
add
sar
pop
clc
jg
cmp
add
jle
add
ret
add
add
add
xchg
push
insl
inc
add
cmp
clc
cmc
leave
or
fcmovu
mov
fdivrs
pop
adc
add
push
cmp
ds
in
hlt
adc
add
movsb
clc
dec
mov
add
out
das
mov
inc
add
mov
dec
mov
insb
fwait
adc
or
cli
xor
add
push
add
add
add
addr16
cmp
clc
movsb
clc
mov
cmp
sar
mov
pusha
add
pop
xor
scas
or
jl
aad
pop
pop
mov
add
jg
sbb
clc
sub
clc
clc
into
enter
add
clc
fistpll
add
jmp
xchg
xchg
test
out
inc
clc
lods
rcr
roll
add
lret
push
in
clc
clc
call
cwtl
hlt
jnp
pushf
cmpsl
clc
imul
push
mov
dec
and
and
add
add
pushf
aas
xor
add
add
pop
cmp
add
push
jp
scas
xabort
mov
shr
push
mov
clc
mov
mov
and
add
add
add
add
clc
xor
xchg
xchg
jle
clc
dec
add
add
add
lock
es
scas
push
add
cld
adc
add
add
add
add
add
out
cmp
inc
clc
cli
push
sar
fnstenv
inc
add
inc
clc
iret
cmp
clc
rclb
test
mov
push
add
lcall
cld
cmp
add
adc
add
gs
loopne
dec
bnd
mov
add
pop
dec
imul
data16
mov
in
inc
clc
out
out
and
add
dec
mov
add
mov
sar
cmp
cmp
cltd
fildll
add
clc
mov
dec
ja
insl
jbe
clc
xchg
jnp
xor
add
push
clc
push
xchg
pushf
adc
add
add
cmpsl
clc
out
fdivr
scas
lret
add
mull
lock
aaa
cltd
add
leave
sub
clc
jle
hlt
mov
dec
xchg
cmp
clc
scas
dec
loopne
not
lret
add
stc
adc
clc
cld
mov
lret
add
out
xor
add
nop
cmp
in
push
addr16
inc
add
jmp
xchg
jbe
add
loopne
hlt
stos
cmp
jae
add
mov
aas
gs
lcall
stos
mov
fcoms
adc
add
jge
add
add
pop
movsl
clc
clc
mov
add
popa
add
test
add
sub
clc
clc
jge
add
mov
iret
lahf
xchg
xchg
dec
sub
sub
fwait
or
int
xor
add
cmpsl
clc
xchg
mov
dec
sarl
decb
pusha
add
mov
clc
lods
cmp
xrstor
push
add
jge
clc
mov
add
push
adc
add
cmp
push
add
adc
pop
clc
aad
dec
out
std
jbe
outsb
int3
or
add
add
and
add
lret
cmp
inc
add
in
dec
cmp
add
pop
sub
mov
xbegin
mov
add
cmp
add
cld
cmp
add
xchg
mov
add
add
push
sbb
add
repz
sbb
sbb
ljmp
clc
and
fisubrl
cmp
sti
pushf
pop
mov
clc
scas
bound
add
mov
add
add
clc
or
jno
add
testb
clc
lea
mov
mov
add
js
in
fbstp
jp
clc
cmc
jmp
add
cltd
cmp
ds
inc
clc
insb
mov
dec
jmp
add
clc
adc
clc
arpl
add
push
add
jbe
push
add
aaa
dec
xbegin
clc
mov
and
add
clc
cmp
push
add
shlb
clc
inc
add
pushf
xor
add
fmuls
fwait
xchg
testl
pop
dec
xor
add
add
clc
inc
add
jne
push
add
rorl
cli
test
add
push
add
inc
add
fcomi
sub
add
dec
aaa
push
xabort
clc
int
add
clc
aaa
cmc
mov
jbe
loop
xor
add
add
repz
ljmp
rorb
add
nop
loope
ss
pop
xchg
outsb
test
clc
inc
clc
dec
mov
xchg
sub
cld
aas
cmpsl
clc
pop
data16
repnz
sbb
xabort
clc
sub
cmpsl
clc
ljmp
add
add
add
mov
jmp
push
add
sbb
sbb
add
xor
clc
xchg
pop
push
add
mov
clc
push
add
jg
pop
xchg
data16
xbegin
add
clc
fdivs
fucomip
sbb
xchg
das
addr16
testb
add
insl
clc
aaa
stos
gs
pop
sbb
clc
mov
sbb
push
add
mov
dec
divb
and
add
mov
cmp
add
dec
jbe
cmp
add
clc
adc
sarl
in
cmp
pop
lea
add
cmp
sbb
add
mov
add
adc
add
add
add
pushf
test
cs
mov
clc
repz
and
add
add
xchg
mov
clc
and
add
clc
shl
clc
imul
in
sbb
stc
xchg
sahf
inc
add
push
add
out
sub
and
ror
iret
cmp
clc
cmp
ret
xchg
pop
xabort
add
ret
clc
pop
push
pop
movsl
clc
cmp
cmpsb
clc
out
shll
add
add
test
jl
pop
jl
sub
add
sbb
lahf
pop
cmp
add
add
add
sub
clc
fwait
mov
clc
in
jnp
bound
add
mov
cmpsl
clc
fs
arpl
add
clc
out
inc
clc
cld
mov
test
imul
add
add
out
or
add
inc
clc
add
xchg
xlat
jno
add
clc
mov
jns
aam
clc
mov
add
sbb
clc
jg
clc
jge
add
sar
pushf
inc
clc
push
jmp
neg
cmp
add
mov
mov
add
add
ret
clc
mov
cld
dec
jge
hlt
popf
xor
add
rol
clc
push
dec
cmp
cmpsl
clc
stc
stos
mov
or
jp
imul
jbe
dec
shl
cmpsb
clc
pop
jne
adc
add
xor
add
add
movsb
clc
mov
mov
clc
xchg
ret
clc
ss
jp
adc
add
add
rcrb
scas
sub
ss
clc
pop
push
int
incl
mov
sub
xor
add
mov
clc
or
clc
imul
clc
aad
add
xchg
jmp
xbegin
add
out
cmp
add
clc
add
xchg
push
jae
add
add
cmp
clc
rcll
add
or
add
gs
inc
clc
add
add
push
and
and
add
clc
loop
sti
adc
add
and
jae
add
dec
jnp
int
xchg
repz
xor
add
xor
inc
add
push
jmp
xor
loopne
and
add
add
stos
fildll
push
and
add
add
sar
fs
cmp
add
sbb
add
jmp
jo
add
dec
and
adc
cmpsb
clc
push
add
das
inc
clc
lcall
lret
push
add
pop
addr16
xchg
icebp
jle
add
cmp
mov
int
mov
dec
pop
ja
clc
mov
add
mov
add
inc
add
pop
lahf
xlat
addr16
and
add
int
loop
mov
mov
jae
add
fidivs
add
add
xor
add
clc
jp
int3
mov
in
cmc
data16
jnp
sbb
ljmp
fstl
add
xor
add
add
add
sbb
adc
add
mov
clc
in
sub
fcmovu
iret
fs
outsl
inc
add
outsb
hlt
fisttps
add
imul
dec
dec
sub
clc
push
repz
clc
shll
add
clc
int3
push
ret
clc
int
clc
xchg
adc
add
lock
daa
clc
pop
pop
jmp
add
leave
dec
out
fistl
rclb
adc
ret
movsl
clc
out
sub
clc
xchg
inc
clc
xabort
add
cmp
add
cmp
and
add
jb
add
dec
sub
nop
push
mov
push
add
mov
add
mov
clc
aaa
add
int3
dec
push
add
stos
loopne
rol
clc
fidivs
fs
xchg
dec
cmpsb
clc
aad
popa
add
xchg
call
clc
add
add
hlt
vpmacsswd
add
cmp
push
ss
lods
cmp
dec
jae
add
js
clc
mov
push
jnp
clc
xor
pop
pop
ss
gs
jp
clc
dec
mov
jp
mov
add
clc
cmp
jp
xor
add
lahf
and
add
sbb
push
add
outsl
lea
clc
jl
clc
cmp
cli
dec
mov
clc
mov
clc
popa
add
outsb
xor
add
xchg
sar
lock
add
clc
insl
jg
daa
clc
jne
mov
mov
pusha
add
add
xor
add
negl
pop
fnstenv
clc
test
mov
data16
ret
clc
lcall
clc
sbb
xchg
fnstenv
add
cs
pop
push
popf
mov
clc
stos
mov
clc
pop
push
add
mov
lods
jne
pushf
fldt
xor
add
add
add
dec
gs
or
loop
cmpsl
clc
jmp
clc
loope
jne
clc
inc
add
rorb
add
sbb
notl
add
cmp
clc
jg
movsl
clc
inc
clc
pop
clc
xabort
sbb
jne
lret
add
in
inc
add
movsl
clc
xchg
mov
add
mov
das
sti
inc
add
cmp
xor
add
adc
add
inc
clc
or
add
mov
mov
add
gs
dec
fildll
lcall
clc
das
popf
cs
add
ss
sub
add
xchg
or
clc
pop
clc
lods
pop
add
add
mov
xlat
sbb
sbb
sub
into
jmp
add
mov
clc
jae
add
fimull
add
mov
clc
jg
adc
add
cmpsb
clc
pop
pop
push
cmp
clc
popl
cmp
add
add
or
jo
add
rclb
clc
xchg
mov
std
stc
pop
xor
clc
adc
add
add
and
add
add
movsb
clc
dec
dec
stos
outsb
and
add
mov
ret
clc
jnp
xchg
das
ret
ret
clc
push
clc
cmp
push
mov
clc
jle
xor
add
mov
inc
clc
test
gs
push
dec
movsb
clc
std
stos
jp
sar
xor
clc
inc
clc
aam
movsb
clc
int
clc
jp
shrl
bound
add
mov
clc
clc
iret
jp
sub
adc
add
aad
cmc
test
xchg
jmp
clc
add
mov
movsb
clc
add
mov
clc
push
push
mov
clc
ss
into
mov
jmp
jns
pushf
mov
inc
clc
pop
or
or
clc
rorb
jg
lock
add
addr16
ret
clc
leave
cmp
dec
mov
clc
inc
add
cmp
movsl
clc
and
into
inc
clc
inc
clc
je
clc
cmpsb
clc
push
add
outsl
std
clc
in
mov
dec
scas
cmp
and
add
add
add
add
clc
scas
out
sbb
icebp
sbb
sar
rcl
xchg
or
or
lret
clc
int
jmp
clc
push
add
xor
add
clc
out
sar
xor
add
mov
inc
add
mov
push
pop
fcoms
test
add
sub
push
scas
out
int
clc
mov
xchg
hlt
inc
clc
data16
mov
clc
movsb
clc
xor
add
mov
add
lahf
fidivrl
lret
cmp
pop
out
inc
clc
sarb
xchg
nop
mov
add
mov
movsl
clc
jne
pop
cmp
lock
jne
cmp
shrl
out
inc
add
jbe
cmp
ja
mov
add
mov
fdivs
xchg
loope
inc
add
mov
and
add
add
aaa
cmc
push
clc
fstpl
clc
mov
clc
xabort
cmpsb
clc
mov
fdivl
add
adc
mov
mov
popa
add
push
add
out
loopne
sub
add
lods
gs
jg
dec
aad
mov
xor
js
ficoms
push
jge
lret
sar
pop
sbb
add
and
add
mov
clc
or
clc
push
iret
iret
jl
test
mov
clc
test
clc
push
bound
add
clc
pop
adc
add
mov
pop
mov
or
add
imul
out
jbe
clc
mov
stos
cmp
clc
push
push
add
mov
clc
dec
lcall
leave
mov
mov
clc
jmp
clc
push
mov
add
adc
add
sbb
in
inc
clc
sar
jge
mov
mov
clc
or
scas
cmp
clc
xor
and
add
jecxz
cmp
outsb
arpl
add
shll
push
mov
mov
loopne
mov
push
stos
dec
cmp
add
add
add
add
outsb
cmp
clc
mov
imul
pushf
xchg
xchg
test
fsubrp
cmp
int
popf
popa
add
and
add
dec
mov
sbb
in
jno
add
clc
mov
add
sbb
je
notl
add
inc
add
call
clc
gs
scas
xor
ret
clc
inc
clc
mov
cmp
clc
in
and
add
enter
or
cmp
and
add
add
cmp
inc
add
mov
sbb
sbb
add
add
xor
add
gs
xchg
pop
stc
ret
clc
xchg
sbb
xchg
mov
pop
out
add
add
add
stos
test
clc
sti
and
cld
lock
lret
xchg
or
add
jge
mov
clc
xor
add
mov
movsb
clc
in
movsb
clc
mov
rcrb
fucomip
decl
into
push
add
fisubs
add
jle
add
add
sub
clc
div
into
aas
lea
sub
cmp
clc
push
lods
xor
add
sahf
push
add
pop
inc
add
pop
xchg
lods
add
add
add
sbb
add
xor
add
add
or
mov
in
aaa
mov
xor
aam
add
xor
add
jp
ffree
clc
fstpt
aaa
mov
add
imul
add
fsubl
inc
add
xchg
pop
clc
sub
inc
clc
inc
add
sarl
loop
insb
icebp
mov
add
pop
in
mov
add
test
jge
clc
imul
outsl
or
push
in
clc
dec
arpl
add
ljmp
test
jecxz
inc
add
cmpsb
clc
inc
add
cmp
jne
clc
xor
leave
add
add
mov
sub
clc
cmp
clc
gs
sub
mov
scas
iret
mov
clc
dec
jge
dec
scas
add
cmp
add
xor
add
inc
clc
inc
clc
imul
add
mov
jae
add
cmp
clc
dec
inc
clc
sti
sub
jo
add
push
add
mov
push
add
cmp
enter
es
enter
cmp
jecxz
inc
add
cmpsl
clc
scas
jle
insl
mov
add
insb
jne
mov
add
xor
add
clc
sti
jo
add
fnsave
add
add
push
add
mov
add
mov
out
cwtl
jl
add
cmp
or
loop
jo
add
pop
clc
jno
add
pop
mov
lahf
jae
add
add
jne
clc
stos
cmp
push
clc
fcmovne
sbb
add
clc
jmp
cmp
jns
clc
fucomip
add
add
sbb
inc
clc
jbe
xor
add
add
push
cld
stos
in
push
imul
dec
pushf
hlt
mov
das
stc
repnz
xchg
jb
add
clc
sti
fadds
add
mov
add
add
xchg
fcmovu
dec
lret
fdivrp
jo
add
add
mov
add
mov
or
add
addr16
imul
data16
xchg
scas
out
sbb
add
push
push
add
push
fdivrl
push
aad
in
repnz
xchg
xabort
add
imul
jle,pt
cmpsl
clc
mov
repz
xchg
sub
sub
add
scas
pop
clc
sbb
add
push
je
add
icebp
test
push
jbe
cmp
jmp
inc
clc
push
jmp
leave
cli
jne
sub
push
add
adc
add
clc
lea
mov
push
add
pop
imul
bound
add
add
pusha
add
pop
adc
stos
call
xabort
inc
add
inc
clc
mov
dec
aad
clc
popa
add
cmp
jae
add
std
sbb
mov
ret
clc
sbb
mov
sahf
push
mov
clc
mov
clc
sub
clc
jo
add
add
nop
pop
cmp
incb
lret
add
add
vmovaps
mov
cmp
add
cld
daa
clc
stos
mov
outsl
aam
push
add
leave
cli
jne
add
jp
addr16
daa
clc
mov
clc
fadds
test
inc
clc
sub
ds
sub
clc
roll
add
xchg
jno
add
fs
popf
outsb
xlat
out
sbb
or
xchg
mov
clc
push
add
sub
jne
sub
in
fldt
test
lret
xbegin
popf
lcall
scas
push
mov
addr16
add
add
add
dec
dec
lahf
out
repnz
add
add
int3
ds
mov
clc
popf
push
mov
arpl
add
clc
add
rorb
test
test
xchg
pushf
fimuls
scas
das
pop
mov
lret
xor
add
ret
clc
xor
add
sbb
add
iret
xor
add
pop
cmp
clc
xor
add
add
cmp
and
jmp
add
ss
add
test
inc
clc
int3
cli
and
add
dec
mov
xchg
test
sti
cmpsl
clc
dec
mov
mov
clc
xor
and
add
cmp
clc
dec
inc
add
push
mov
clc
push
repnz
push
add
outsl
movsb
clc
xchg
repz
sub
add
scas
mov
add
jl
ret
clc
lods
ficomps
clc
fisubs
add
mov
leave
xor
xchg
dec
aas
inc
add
aas
adc
add
inc
clc
ficompl
push
pop
scas
mov
clc
hlt
dec
jmp
adc
adc
add
lock
add
sbb
add
xchg
cmp
clc
imul
add
add
push
cld
inc
clc
dec
mov
push
sbb
inc
add
clc
pop
xchg
fs
ficoms
cmp
or
punpckhwd
clc
cmp
add
aas
enter
add
mov
pop
aas
jge
cmp
dec
jle
pushf
cmp
clc
mov
jl
dec
sbb
clc
int3
clc
xabort
push
mov
xchg
loope
jbe
je
xchg
push
add
movsb
clc
jno
add
add
push
add
fistps
xchg
cmp
sbb
or
jge
clc
jne
xchg
cmp
clc
dec
pop
lcall
add
cs
mov
clc
int3
sub
add
push
add
add
add
clc
jmp
add
cltd
xor
add
add
clc
adc
add
xchg
mov
add
jae
add
repnz
clc
add
add
add
and
clc
sbb
loop
inc
clc
jno
add
lcall
cmp
mov
add
pop
mov
xor
add
loop
inc
clc
outsl
cmp
pusha
add
data16
out
add
add
add
add
clc
fidivrs
movsl
clc
jnp
add
cmp
mov
call
add
icebp
mov
add
sub
xor
add
outsb
int3
loop
pushf
outsb
in
into
push
sub
clc
cmp
add
and
add
negl
fldcw
clc
aam
arpl
add
clc
jno
add
add
cmp
clc
and
add
add
add
lahf
scas
cmp
clc
cmpsb
clc
mov
jnp
in
and
add
bswap
repnz
sarb
fs
pop
clc
aaa
cltd
inc
add
and
int3
outsb
sar
add
xchg
lock
inc
add
jp
add
negb
mov
xchg
or
inc
add
mov
add
jmp
pusha
add
icebp
cmp
cmpsb
clc
push
xor
xor
das
pop
adc
lret
xchg
and
nop
pushf
push
lods
lods
sub
mov
test
add
add
add
js
xor
clc
sbb
fsubs
clc
data16
xchg
outsl
in
xlat
fsub
clc
sbb
push
add
push
clc
notl
mov
mov
cltd
mov
aad
adc
add
clc
cmp
insb
sar
push
pop
repz
add
add
add
add
jbe
add
ss
push
add
push
add
enter
call
add
das
push
cmp
mov
daa
clc
sub
add
inc
clc
data16
ljmp
and
sub
scas
mov
push
or
push
clc
or
clc
mov
mov
cld
sbb
loop
aam
fildl
add
clc
cmp
stc
insb
stos
in
imul
aam
jns
sbb
clc
jecxz
xchg
dec
and
add
add
aad
mov
test
pop
xor
add
push
pusha
add
jle
imul
pop
clc
stc
mov
mov
add
js
mov
add
es
je
sub
sar
mov
adc
add
add
and
or
and
add
clc
pop
or
stos
call
mov
add
pop
clc
mov
clc
jge
mov
add
pusha
add
xbegin
inc
add
in
mov
outsb
or
clc
mov
add
inc
clc
dec
push
mov
std
insl
mov
add
add
int3
xchg
jae
add
mov
mov
push
add
in
xchg
sbb
leave
data16
out
es
pop
push
clc
cmp
jge
jmp
sahf
es
or
in
scas
adc
and
add
push
add
sub
add
pop
clc
push
mov
clc
int
mov
shrb
add
out
jns
sbb
or
add
ja
cld
cmp
addr16
adc
add
mov
js
mov
xchg
daa
clc
sub
push
sbb
mov
cmp
movsb
clc
sbb
test
loop
lods
mov
or
call
adc
add
clc
dec
mov
push
jnp
insl
xor
clc
inc
clc
xchg
out
dec
fstps
clc
addr16
in
rcrb
cmp
inc
clc
in
xchg
push
add
insb
mov
clc
mov
mov
dec
stos
jns
clc
shl
clc
jns
inc
add
cmp
cli
out
mov
xor
add
ja
pop
xchg
xchg
mov
pop
mov
clc
add
add
ja
loop
out
decb
leave
sub
clc
cmp
mov
pop
xchg
cmpsl
clc
iret
jne
sbb
repnz
mov
pminsw
mov
jnp
add
inc
add
mov
icebp
iret
cli
sar
xabort
clc
cmp
push
mov
add
push
xlat
int3
cmova
lahf
decb
add
and
xor
js
push
nop
sbb
sar
add
dec
int
clc
or
adc
add
add
mov
clc
cmp
clc
jno
add
cmp
data16
nop
mov
add
pop
and
mov
xor
add
mov
adc
add
add
fcoms
clc
xbegin
hlt
and
add
mov
add
push
lahf
testb
call
clc
sub
cmp
jb
add
clc
adc
add
es
data16
cmp
inc
add
and
add
and
add
cmp
add
rcr
xor
add
mov
mov
data16
and
add
clc
adc
add
stc
insl
lahf
dec
cmpsb
clc
sub
add
roll
add
xchg
add
push
mov
clc
test
xabort
add
int3
inc
add
and
add
add
cmp
add
or
xchg
addr16
adc
jb
add
mov
insl
jnp
lods
mov
pop
ds
jnp
xor
add
je
aad
clc
ljmp
pop
inc
add
stc
sarl
push
sub
clc
jns
sti
push
clc
out
push
add
mov
dec
test
aad
daa
clc
mov
or
popa
add
imul
push
ret
repnz
and
add
mov
fstpt
jae
add
in
test
aas
pop
ret
clc
xlat
std
pop
sub
add
add
aas
out
ljmp
test
fildll
mov
clc
sbb
ficomps
clc
mov
pusha
add
pop
stos
hlt
jns
clc
lret
add
mov
push
clc
add
add
add
add
push
mov
pop
dec
into
es
mov
clc
cmpsb
clc
mov
mov
aad
mov
push
push
mov
int
std
lret
inc
clc
popa
add
ficoms
add
lret
add
mov
mov
jns
sub
add
inc
add
sub
add
sar
lret
inc
add
cltd
xchg
mov
clc
add
clc
push
dec
xabort
clc
add
pop
adc
add
dec
and
add
popa
add
stc
out
and
add
es
insb
clc
icebp
lods
repz
jbe
and
add
sbb
add
dec
out
lods
in
aaa
pop
movsl
clc
daa
clc
or
cmp
add
add
test
inc
add
fwait
int
ss
test
sbb
clc
test
cmp
clc
cmp
mov
clc
outsb
stos
cli
inc
add
cmpsb
clc
dec
ret
clc
in
xchg
pop
xor
add
lock
clc
jne
lcall
xor
add
xor
add
add
add
inc
add
aaa
sbb
push
xchg
push
iret
mov
out
pop
das
sbb
and
jg
outsl
lods
sarl
sar
add
sub
sar
add
cli
in
sar
aas
repnz
test
ret
clc
lret
ficoms
dec
xlat
cmp
cmpsb
clc
mov
clc
add
add
add
xchg
xor
add
dec
or
clc
xabort
ret
clc
adc
add
aad
clc
mov
add
leave
sub
push
xchg
cltd
ret
clc
outsb
mov
add
mov
jge
adc
ret
clc
mov
or
test
sbb
dec
adc
add
std
test
sbb
fwait
dec
sbb
add
test
into
push
clc
icebp
fmuls
ss
xchg
call
jl
xlat
aad
lock
pushf
daa
clc
data16
ja
clc
xlat
mov
rorb
insl
sbb
clc
inc
clc
dec
bound
add
cmp
mov
leave
daa
clc
mov
clc
movsl
clc
ljmp
clc
iret
cmp
sbb
das
xchg
push
add
adc
pop
fistl
add
sub
add
out
adc
add
clc
mov
mov
add
add
cmp
clc
mov
clc
mov
dec
fldcw
vmovlps
add
xbegin
push
add
sar
insb
mov
aad
cmpsb
clc
mov
xchg
dec
data16
lods
xchg
hlt
sahf
lret
add
cli
jns
sub
mov
loope
pop
dec
mov
add
mov
push
out
mov
pop
mov
clc
sbb
pop
xchg
scas
add
add
xchg
sub
clc
inc
clc
test
stos
ja
fldt
add
clc
jge
loopne
sub
add
fmulp
sub
add
pop
pop
mov
pop
clc
fsqrt
es
out
outsb
mov
jne
clc
ja
clc
in
or
mov
add
dec
mov
clc
call
jl
clc
push
add
stos
clc
xor
add
jae
add
int3
inc
clc
jo
add
add
imul
clc
insb
lret
dec
pushf
sbb
push
or
add
add
cli
pop
xchg
call
pop
aad
cwtl
adc
add
fstpt
jg
sub
add
add
jecxz
push
add
stos
stos
push
jno
add
jecxz
je
mov
pop
cmp
clc
mov
add
lock
dec
lret
arpl
add
scas
arpl
add
sub
insb
fdivrs
clc
adc
add
add
repz
ja
clc
in
scas
mov
xor
add
add
or
add
outsl
pop
add
add
xchg
cmpsl
clc
rorb
clc
xbegin
push
lahf
fstl
and
add
test
scas
loop
jl
outsb
and
add
add
clc
xor
add
fiaddl
sub
mov
add
test
and
add
mov
js
movsl
clc
cmp
xor
add
add
add
xor
add
mov
stc
outsl
add
add
adc
clc
mov
add
adc
add
and
or
push
dec
adc
add
add
int3
out
adc
add
add
test
test
mov
imul
mov
in
xchg
test
iret
push
xchg
pushf
pushf
sbb
add
dec
jmp
add
add
vandnps
xchg
imul
sarl
mov
mov
ret
clc
out
dec
scas
mov
clc
imul
imul
xor
icebp
xchg
lea
add
pushf
sub
cmp
jbe
clc
iret
dec
fisubl
mov
xlat
lcall
and
add
clc
cwtl
icebp
das
adc
add
pop
test
lock
pushl
jne
in
fdivrl
push
add
dec
cmp
push
add
xchg
hlt
mov
add
loopne
ljmp
and
add
add
loope
or
add
inc
add
in
jmp
dec
lahf
inc
add
mov
add
xchg
ds
clc
push
in
and
add
and
add
add
add
test
add
mov
sub
mov
or
in
pushf
add
loope
jmp
jns
dec
lcall
push
fisubrs
jbe
jmp
sti
std
xchg
cmp
pop
xchg
jb
add
pop
jb
add
or
add
add
add
clc
mov
clc
xor
add
popa
add
mov
add
nop
data16
inc
clc
in
mov
clc
adc
add
clc
push
ret
clc
inc
add
loop
inc
add
cmpsl
clc
add
movsl
clc
daa
clc
test
lods
popa
add
repnz
clc
mov
clc
test
add
clc
cmp
mov
clc
fbld
in
xbegin
data16
inc
add
and
add
dec
inc
clc
inc
add
inc
clc
cld
cld
iret
decl
add
dec
and
fistps
clc
test
out
pop
clc
lret
clc
xchg
idivl
add
mov
pop
test
mov
add
or
insb
jle
xchg
aam
fs
jns
and
cld
lock
ret
clc
and
add
jo
add
mov
ficompl
es
test
call
add
repz
or
add
sar
jge
cmp
sbb
sub
sub
jbe
aad
leave
lock
clc
or
int
sbb
das
mov
add
xor
add
add
clc
ret
or
add
add
add
add
add
lahf
mov
clc
pop
movsb
clc
stc
and
cld
ds
lret
clc
xor
sbb
mov
xchg
cmp
sub
pop
nop
pushf
mov
pshufw
call
aad
clc
outsl
jnp
dec
jmp
jp
jns
clc
test
and
add
arpl
add
mov
add
lock
cli
xchg
sar
clc
and
add
repz
jl
add
add
add
add
loope
and
push
sar
data16
and
add
add
mov
clc
jae
add
add
imul
cld
add
add
adc
add
test
add
testl
popf
mov
jmp
loop
fistl
add
aas
incb
add
or
clc
mov
test
fwait
enter
add
push
add
ret
fstl
outsb
inc
clc
push
aam
aas
mov
jmp
jecxz
push
cmp
aad
xor
es
sbb
add
xchg
cmpsl
clc
jecxz
shl
clc
push
insl
clc
xor
add
sar
clc
cmc
push
pusha
add
adc
xbegin
lret
mov
in
sbb
gs
xor
imul
clc
mov
cmpsl
clc
mov
clc
push
push
clc
push
mov
adc
add
add
stos
shlb
mov
cmp
cwtl
je
arpl
add
push
aam
in
mov
ljmp
add
test
add
add
add
inc
clc
idivl
add
dec
sahf
jmp
outsl
dec
xchg
test
imul
pop
sbb
cmp
add
loop
cmp
push
and
add
cli
push
add
sbb
lods
ret
xlat
push
movsl
clc
cmp
clc
cmp
dec
sbb
icebp
das
xchg
mov
ljmp
idivb
add
jne
call
xor
add
test
scas
in
ja
int
clc
push
mov
es
psrlw
add
stos
mov
test
push
sbb
lods
sbb
sbb
push
add
inc
clc
xor
add
or
cmpsl
clc
roll
add
repz
pop
in
mov
sbb
clc
sub
lcall
pop
mov
or
add
mov
add
push
mov
add
int
adc
add
icebp
lahf
dec
xor
add
clc
pop
out
sti
decl
adc
add
jbe
mov
clc
and
push
add
push
add
inc
add
mov
cwtl
cmp
mov
lea
add
xor
add
pop
adc
loop
inc
clc
xor
add
clc
or
mov
dec
fcoml
add
jns
add
mov
clc
popf
nop
call
clc
push
clc
popa
add
neg
stc
stos
add
icebp
sbb
clc
fdivrs
bound
add
inc
add
xchg
test
std
pop
call
add
add
mov
add
ds
add
or
jnp
loope,pt
jecxz
cmp
into
hlt
push
clc
mov
mov
mov
cmp
outsl
test
in
mov
clc
data16
mov
adc
add
fistl
fmuls
aaa
xor
add
clc
jg
lret
je
clc
inc
clc
cmp
push
push
clc
repz
add
adc
add
mov
frstor
add
pushf
sahf
ret
or
int3
mov
add
add
clc
stos
xchg
das
xchg
shl
mov
vmovlps
add
add
iret
lock
mov
add
loopne
mov
add
add
hlt
aam
jg
clc
aas
inc
clc
cmp
clc
xchg
xabort
leave
adc
mov
jg
clc
mov
lret
sub
add
push
push
xor
add
add
sar
clc
ds
mov
clc
mov
cwtl
jno
add
add
add
mov
mov
mov
sar
clc
mov
mov
xchg
mov
add
pmullw
lret
add
sahf
xchg
jo
add
dec
jne
push
cmp
insl
dec
cmp
xchg
popa
add
insb
and
clc
fucomi
cmp
daa
clc
mov
inc
clc
jg
shlb
clc
ds
in
rorl
xor
add
add
push
add
out
imul
in
inc
add
cmp
clc
je
aam
add
or
jmp
clc
pop
xor
cmp
loopne
pop
aas
cmp
mov
clc
mov
lret
mov
clc
mov
jge
loope
into
push
sbb
adc
add
bound
add
int3
jnp
test
mov
clc
sbb
add
stc
xchg
xabort
clc
cmp
pusha
add
dec
cmp
clc
fwait
mov
cmp
and
mov
into
leave
ficoml
clc
jl
pop
fdivl
add
pop
fs
cltd
bnd
add
jo
add
add
scas
je
clc
jne
clc
xchg
or
inc
clc
outsb
insl
int
lcall
aad
xor
imul
in
sbb
xor
add
add
xor
add
outsb
addr16
out
mov
data16
inc
clc
lcall
cmp
adc
add
cmc
inc
clc
aaa
cwtl
dec
fsubr
loopne
cmp
out
scas
decb
add
data16
out
mov
clc
and
add
add
pop
sbb
add
add
add
push
mov
mov
cmp
clc
dec
push
add
iret
push
ret
clc
out
add
add
clc
cmp
add
jecxz
xor
and
clc
loopne
cmp
jbe
add
fadd
clc
add
test
jb
add
add
add
movsb
clc
out
sbb
add
fimull
cwtl
xchg
jecxz
sahf
xor
add
xchg
insl
fstl
decl
sbb
int
jnp
clc
fnsave
clc
cmp
cmp
add
mov
int3
push
add
mov
fnstsw
add
and
cmp
stc
add
add
jg
test
aad
clc
fsubr
stos
xor
mov
cmp
fcoms
add
xchg
mov
icebp
xor
add
clc
or
jno
add
xor
fildl
add
pushf
sbb
pushf
js
clc
sbb
std
pop
lods
clc
adc
add
add
or
xchg
sbb
movsb
clc
shrb
mov
testb
and
add
add
ja
stos
adc
add
clc
cltd
dec
inc
add
mov
xchg
aaa
insb
call
fldt
pusha
add
test
iret
dec
int3
icebp
out
lcall
mov
jb
add
cmp
add
mov
sar
clc
es
sar
clc
movsb
clc
add
add
add
xbegin
clc
mov
stos
inc
add
dec
or
scas
cmp
add
shll
pop
outsl
imul
clc
jne
sub
add
lcall
add
lods
in
mov
clc
lods
adc
add
jl
add
sbb
cmp
mov
fadd
clc
cmp
sub
clc
movsb
clc
inc
add
test
add
adc
add
jle
sarb
fsubl
add
mov
mov
loop
jmp
cmpsb
clc
popa
add
mov
or
gs
iret
outsb
inc
add
out
data16
cmp
jnp
gs
jg
clc
into
push
add
repz
cli
cmp
add
bound
add
sub
clc
mov
mov
clc
xor
add
add
cmp
clc
jo
add
dec
fwait
and
add
arpl
add
add
add
mov
mov
mov
jmp
decl
push
movsb
clc
mov
dec
int
movsb
clc
push
add
sub
mov
fs
aam
cli
in
jae
add
clc
fimuls
mov
or
jmp
clc
arpl
add
mov
push
testl
clc
out
stc
add
add
shll
add
and
inc
clc
sbb
jae
add
ds
rcrl
add
xbegin
clc
imul
add
add
add
xor
add
clc
adc
add
add
inc
add
sub
add
fcoms
add
add
imul
out
sarb
stos
push
fld
clc
dec
nop
into
jbe
pop
in
inc
add
xor
add
clc
scas
jno
add
clc
dec
sub
add
pop
xchg
push
add
push
add
test
int
add
add
jo
add
clc
and
add
insb
jmp
leave
pop
inc
clc
inc
add
mov
clc
mov
push
arpl
add
clc
lahf
mov
clc
mov
pop
pushf
dec
pop
cmp
cmp
je
clc
push
add
outsb
lcall
push
mov
add
pop
mov
push
rcrl
enter
add
je
in
xor
add
sar
clc
jno
add
test
call
clc
inc
clc
mov
add
int
clc
cmp
addr16
fwait
add
add
push
pop
xor
add
ljmp
sbb
or
cmp
pop
jne
add
dec
mov
enter
mov
clc
sub
jge
pop
ds
out
clc
or
popf
lea
sub
add
add
add
pop
filds
add
insb
ss
mov
add
ljmp
and
add
mov
add
pop
mov
adc
add
je
out
inc
clc
pop
stos
loop
mov
jnp
call
add
mull
clc
ds
int3
pop
outsl
mov
stos
lahf
ja
add
pop
test
clc
fs
sub
add
and
add
push
pop
out
push
fisttps
jmp
clc
cmp
mov
in
ljmp
jecxz
jb
add
clc
push
add
jnp
addr16
in
adc
rorl
sbb
clc
adc
out
jb
add
add
add
add
add
add
loopne
push
push
add
mov
xor
add
add
push
add
das
cmp
add
push
pop
cmp
mov
push
add
sub
jnp
jmp
push
add
push
add
mov
ja
pop
mov
add
cltd
add
add
jne
clc
cmp
lods
scas
xor
lea
add
xchg
nop
lcall
mov
jle
clc
dec
jmp
mov
cltd
jg
mov
inc
clc
cmpsl
clc
popa
add
das
dec
xchg
sbb
add
cmp
cli
insl
mov
add
xchg
leave
call
clc
fildl
movsl
clc
sub
clc
push
clc
mov
cmp
lock
sbb
clc
pop
clc
fs
add
add
xor
adc
lret
clc
jmp
add
ljmp
add
in
cli
push
push
repz
shl
clc
je
psllw
pusha
add
or
es
pusha
add
out
clc
das
inc
clc
add
pop
clc
inc
add
scas
cmp
mov
call
clc
mov
add
ljmp
add
add
out
pop
ja
stos
lcall
mov
add
pusha
add
in
clc
adc
add
or
daa
clc
cmp
clc
cmp
std
add
mov
xabort
clc
pop
sub
add
es
cltd
cmp
das
inc
add
fcomi
inc
clc
adc
add
sbb
xchg
data16
repnz
ss
cltd
sub
add
cld
cmp
xor
add
adc
add
pop
or
clc
mov
popf
cmp
aaa
add
add
inc
clc
mov
push
out
cmp
xor
add
clc
push
push
clc
add
fstps
pop
push
xchg
mov
push
add
inc
clc
adc
add
push
ja
clc
cmpsb
clc
repnz
mov
xor
add
dec
or
xchg
cmpsl
clc
adc
add
sbb
or
mov
push
dec
push
xchg
cmp
mov
clc
mov
lods
mov
clc
outsb
inc
add
mov
clc
dec
xlat
adc
add
fstpl
mov
das
mov
clc
cmp
or
clc
push
add
pop
clc
cmp
test
fstp
lods
outsl
adc
add
clc
and
add
pop
movsb
clc
pop
xchg
ss
and
add
push
dec
sub
xchg
in
iret
cmp
mov
push
iret
test
add
ds
movsl
clc
stos
ret
clc
or
add
popf
insb
pusha
add
popa
add
cld
sub
and
mov
lahf
cmp
pop
aam
lcall
repz
push
dec
sbb
clc
ficomps
xor
es
icebp
mov
add
lock
clc
addr16
mov
clc
xabort
dec
data16
xor
cmp
add
pop
xchg
xor
add
push
xchg
jns
lret
and
xor
add
sub
dec
push
clc
jp
clc
es
xchg
xchg
or
inc
add
inc
add
mov
mov
add
add
mov
mov
add
add
add
sub
clc
dec
insl
imul
xchg
add
add
arpl
add
inc
add
push
add
lea
add
bnd
add
push
clc
leave
adc
add
sbb
jmp
clc
sar
and
add
dec
push
roll
pop
fidivrl
lret
xor
push
add
cmp
lcall
mov
js
out
xor
add
bound
add
cmpsl
clc
jnp
pop
clc
shrl
popa
add
xor
add
add
dec
jmp
mov
clc
enter
mov
sbb
or
imul
clc
mov
jne
clc
mov
mov
cmp
mov
push
movsl
clc
jg
mov
shrb
pop
xabort
clc
adc
add
add
dec
jo
add
aad
data16
add
add
add
cwtl
fcmovnbe
add
add
add
xchg
outsb
pusha
add
push
add
mov
cli
cmp
add
pop
xabort
or
add
std
insb
lahf
or
add
add
lods
inc
clc
and
add
xchg
mov
xchg
mov
clc
and
add
icebp
mov
in
scas
je
clc
mov
add
and
jle
pop
clc
cmp
push
cli
gs
adc
add
mov
clc
sub
clc
addr16
push
clc
aam
pop
ss
add
xlat
inc
clc
stos
sub
add
gs
clc
fdivr
fidivrl
inc
add
adc
add
fmul
cmpsb
clc
mov
clc
or
add
jge
add
push
pushf
sbb
xlat
roll
add
negb
mov
mov
clc
std
sar
loopne
lock
clc
loope
mov
into
movsl
clc
ss
pop
xchg
pop
hlt
cli
stc
vcvtdq2ps
push
cmp
mov
add
dec
sti
es
dec
mov
add
pushf
sub
das
jge
lahf
hlt
jb
add
add
add
add
add
push
mov
lahf
pop
inc
add
in
faddl
clc
test
testl
add
add
jbe
sar
clc
icebp
popa
add
jnp
add
and
fldcw
hlt
repnz
add
sub
mov
call
cmp
jecxz
ljmp
cmp
clc
lcall
test
mov
aaa
adc
add
and
add
mov
popf
lods
fs
cmp
rcrb
push
add
lock
stos
pusha
add
inc
clc
adc
xor
jae
add
scas
dec
lret
cmp
pop
fldenv
add
es
pop
xabort
adc
clc
arpl
add
in
dec
push
sbb
clc
jne
add
mov
and
add
clc
pop
jecxz
jmp
mov
add
gs
addr16
push
add
jb
add
mov
add
xor
add
add
insb
pop
dec
push
jp
sbb
fidivs
clc
cli
out
and
add
pop
and
add
and
add
in
and
add
sbb
mov
sarb
xchg
inc
clc
mov
aas
mov
clc
dec
and
mov
xchg
das
inc
clc
call
dec
std
mov
clc
push
mov
clc
cmp
dec
movsl
clc
inc
clc
xchg
pop
pop
loope
inc
add
add
pop
clc
scas
mov
pop
sbb
lret
xabort
std
test
sub
add
out
mov
sbb
mov
sbb
mov
cmc
iret
js
clc
inc
clc
repnz
add
enter
add
fdivrs
fidivrl
out
jae
add
lcall
jbe
pushf
pusha
add
cmp
push
sti
and
add
js
add
fcompl
add
add
clc
cld
inc
clc
jl
add
fnstenv
add
add
inc
add
sbb
adc
add
cmp
out
pop
test
div
jecxz
imul
adc
add
clc
xor
add
inc
clc
ljmp
outsl
fisubrl
sti
rclb
add
clc
sub
add
jl
clc
test
inc
add
clc
lods
or
clc
cmp
fistpll
add
clc
push
pop
test
enter
add
add
xor
clc
and
dec
mov
sub
bound
add
lock
add
xor
add
outsl
xchg
cmp
pop
in
idivb
mov
add
xchg
in
xchg
cmp
xor
add
clc
test
cmp
clc
and
add
xchg
mov
into
jl
add
scas
mov
push
add
mov
add
ds
cmc
scas
negb
jp
ficompl
clc
ficomps
cltd
cmp
stc
ja
add
adc
add
rorb
xchg
mov
iret
outsb
fwait
cmpsb
clc
out
jmp
dec
icebp
jae
add
stc
inc
clc
loope,pt
cmp
jmp
rcl
addr16
lcall
cmpsb
clc
push
cli
arpl
add
sub
and
test
jb
add
fadds
clc
and
add
bound
add
jns
clc
fdiv
insl
inc
clc
sbb
mov
add
xor
add
divb
add
clc
fnstcw
shll
add
sbb
jno
add
and
add
inc
add
mov
dec
adc
add
in
jmp
and
add
add
clc
leave
imul
clc
xchg
adc
jno
add
add
add
insb
int
clc
pop
clc
insb
cwtl
and
mov
lods
jge
mov
clc
push
lret
sahf
lods
xor
add
clc
push
repz
imul
mov
xchg
or
bound
add
sbb
xchg
pop
adc
clc
pop
aad
clc
pushf
lret
int3
fcmovnbe
jb
add
push
lret
pop
test
inc
clc
add
add
adc
add
clc
or
cmpsb
clc
bound
add
jmp
add
mov
clc
or
js
clc
ret
clc
inc
clc
jae
add
add
mov
xchg
int3
adc
add
clc
mov
aam
mov
clc
psubsb
clc
jle
stc
mov
clc
mov
add
add
out
cmp
sbb
clc
test
jle
add
gs
xor
add
sar
idivl
call
add
mov
clc
mov
add
rcr
jmp
sbb
test
clc
sbb
clc
scas
add
xor
add
mov
daa
clc
xor
add
push
add
and
add
add
pop
insl
out
ficoml
inc
clc
clc
sbb
add
push
clc
sbb
pusha
add
and
lods
xor
add
add
jno
add
clc
pusha
add
xchg
imul
cld
adc
add
add
lock
loop
cmp
mov
clc
push
add
jl
movsb
clc
and
add
sar
mov
mov
sarl
clc
xchg
and
add
add
je
clc
sahf
cmp
test
jl
add
jno
add
popa
add
cltd
int
out
pop
nop
xchg
mov
add
fidivrs
jmp
clc
aaa
lea
cmc
ja
pop
or
pop
daa
clc
pop
cmp
add
push
sahf
jae
add
xchg
and
add
je
and
add
clc
sub
add
add
adc
add
jne
clc
xor
add
in
test
and
add
mov
clc
mov
test
add
push
cwtl
repnz
add
imul
xor
add
cmp
xbegin
sti
push
fnstsw
fdivl
add
icebp
jmp
add
add
js
xchg
jecxz
pop
iret
mov
clc
outsl
in
xbegin
fsubrl
mov
mov
add
inc
add
outsb
mov
adc
es
cmp
add
stos
lods
scas
out
mov
faddl
xlat
pop
test
cmpsl
clc
pushf
aad
jnp
add
jae
add
in
dec
cmp
cmpsl
clc
clc
cltd
jb
add
mov
mov
clc
jecxz
mov
movsl
clc
cmp
mov
add
mov
clc
mov
jns
push
arpl
add
clc
fimuls
sub
add
or
clc
adc
add
push
clc
jge
and
js
cwtl
sarb
jbe
jge
sub
imul
call
pop
clc
cwtl
sub
xor
add
call
fs
xchg
cmp
cmp
jl
out
push
jae
add
clc
dec
cli
lcall
add
leave
mov
test
mov
ffree
clc
jb,pn
add
clc
push
clc
jp
jo
add
imul
clc
cmp
clc
and
shrd
lods
jae
add
lret
or
clc
sbb
data16
in
ds
ret
clc
sar
cmc
imul
clc
jge
xlat
lahf
push
add
push
jge
clc
add
add
clc
mov
add
sbb
dec
add
insb
xchg
add
add
clc
dec
stos
mov
mov
clc
rorb
nop
xor
add
add
cmp
mov
xchg
sub
sub
clc
jle
jmp
clc
push
inc
add
decl
sbb
or
clc
mov
clc
jmp
pop
adc
add
add
push
add
bound
add
clc
ljmp
sbb
adc
add
add
jecxz
jecxz
sti
popf
call
add
test
add
add
cmpsl
clc
xchg
xchg
lock
add
add
std
test
xbegin
add
xchg
test
ja
int
clc
xchg
sar
mov
test
imul
aam
add
lea
add
cli
adc
add
add
dec
push
add
jle
mov
pop
inc
clc
push
pusha
add
xabort
mov
jb
add
gs
push
xlat
mov
clc
ret
jmp
clc
imul
nop
or
ret
clc
push
lock
clc
popa
add
jecxz
jno
add
add
jp
mov
mov
or
sarb
testb
add
jecxz
mov
imul
pop
sbb
add
aam
jne
icebp
cmpsl
clc
xor
add
add
clc
adc
add
stc
cmp
push
clc
jae
add
nop
mov
clc
inc
add
clc
jne
ret
mov
gs
mov
add
clc
faddl
add
add
shrl
fs
dec
je
sub
mov
add
add
push
add
sar
add
mov
clc
xor
add
clc
dec
rolb
fs
aam
add
sbb
and
add
and
add
clc
int3
cmpsl
clc
cld
cltd
iret
inc
add
inc
add
lock
clc
test
and
add
in
shrb
add
jbe
cmp
insb
lock
clc
test
sbb
add
xor
add
int
dec
cmpsb
clc
je
ss
clc
jle
lea
cld
xor
add
add
stos
pop
mov
or
fistps
push
cli
std
in
fiaddl
test
xchg
scas
in
pop
aaa
sti
int
adc
outsb
jbe
and
add
add
repnz
dec
cmp
or
add
lods
clc
jecxz
sar
mov
xchg
adc
add
add
add
stos
cmp
clc
mov
clc
and
add
clc
out
dec
dec
push
cmp
cld
dec
imul
mov
add
test
pop
push
add
movd
int3
cs
add
or
clc
imul
add
bound
add
add
mov
add
lret
frstor
out
pop
movsl
clc
loop
or
cmp
add
xchg
ret
int3
pop
mov
clc
pop
add
gs
adc
add
clc
xchg
dec
daa
clc
loope
insl
ret
out
mov
clc
loopne
and
dec
mov
clc
mov
sarl
add
dec
mov
add
xchg
das
cmpsb
clc
js
clc
jb
add
adc
add
pop
int3
test
pop
hlt
loopne
pop
aam
inc
clc
dec
adc
add
add
jge
jo
add
clc
add
add
clc
ljmp
call
clc
insb
xabort
sbb
xor
inc
add
xchg
xchg
mov
sub
clc
arpl
add
imulb
add
mov
jo
add
or
and
add
clc
icebp
sbb
mov
out
int3
xchg
addr16
cmp
mov
adc
add
cld
push
add
pop
rcrl
add
jecxz
data16
dec
loope
inc
clc
ficoms
xbegin
add
clc
jmp
std
mov
jo
add
xor
add
sub
aad
add
add
xchg
cmp
add
rorl
dec
inc
add
pop
clc
cmp
cmp
pop
pop
repz
fimuls
adc
add
add
clc
mov
jmp
sub
push
gs
pop
pop
sbb
pop
dec
loope
push
clc
in
jns
nop
jge
dec
jnp
add
cltd
mov
jl
add
sahf
nop
pushf
popf
in
jnp
icebp
pop
decl
ret
clc
mov
mov
cwtl
mov
imul
mov
mov
je
clc
inc
add
decl
inc
clc
clc
psubsw
add
add
clc
push
cmp
add
jecxz
mov
gs
sbb
lcall
icebp
ficomps
jns
or
inc
add
adc
cmp
dec
mov
clc
adc
add
aas
fnstenv
cltd
adc
add
vmovntps
cmp
add
in
cmpsb
clc
push
enter
adc
xor
add
psubq
notl
clc
gs
push
add
outsb
cmp
add
push
std
leave
xlat
cmp
add
xbegin
push
add
or
clc
jecxz
push
cmp
adc
add
mov
clc
gs
fstps
cmp
popa
add
add
jb
add
clc
mov
clc
sti
push
add
inc
add
cmp
pop
mov
cmp
fbld
shlb
out
call
cmp
add
iret
aad
lcall
clc
add
add
or
clc
sbb
outsl
hlt
jb
add
jno
add
add
clc
sar
add
cld
pop
loopne
mov
ja
push
add
xor
clc
cmp
sbb
dec
aaa
sbb
pop
daa
clc
xor
ja
dec
inc
clc
add
add
add
sub
clc
jmp
add
cmc
pop
ret
cmp
cmpsl
clc
mov
add
clc
in
cli
pop
mov
inc
clc
push
mov
fsubs
and
add
add
add
mov
add
or
jae
add
clc
cmp
cmp
rorb
mov
add
inc
clc
bound
add
add
clc
xchg
xchg
or
ret
jecxz
push
xchg
fs
jne
fnstcw
clc
pop
int
arpl
add
bound
add
xor
out
in
jo
add
sbb
add
pop
jl
xchg
inc
add
jnp
int
leave
push
add
adc
add
popf
fbstp
clc
lea
pop
clc
mov
mov
insb
xlat
mov
add
clc
jmp
clc
push
xlat
sub
jp
pop
xchg
lods
add
add
cmp
inc
clc
xchg
negl
sbb
sub
cmp
call
iret
pop
pop
xor
add
sbb
clc
test
xbegin
stos
sti
ss
mov
fld
clc
jns
clc
out
inc
add
jno
add
mov
cmc
cmp
add
push
add
sbb
adc
clc
xchg
in
sti
xor
push
rcll
arpl
add
popf
ja
clc
test
sub
clc
ss
mov
cli
ljmp
out
popa
add
push
mov
add
cmp
shl
clc
pop
and
add
fmuls
dec
cmp
pop
push
clc
xor
add
clc
jge
sar
in
dec
mov
popa
add
fisubs
add
in
jne
push
add
test
inc
add
pop
insb
leave
push
mull
add
sbb
clc
insb
stos
and
enter
mov
jge
xchg
ja
clc
insl
cmpsl
clc
lcall
vshufps
sub
fs
es
xabort
add
or
clc
add
add
ret
clc
lcall
cltd
movsb
clc
mov
or
clc
cmp
leave
xor
add
enter
lods
cli
fimull
mov
clc
push
add
xlat
pop
fisubrl
clc
and
sub
mov
loop
cmp
add
aaa
push
inc
add
pop
cmp
dec
arpl
add
add
cmp
clc
movsb
clc
add
pop
out
enter
sub
dec
std
shll
add
js
add
insb
fwait
cmpsl
clc
loope
stos
xchg
mov
clc
fs
dec
add
add
inc
add
mov
mov
sti
jp
sub
clc
inc
add
cmc
jp
dec
pop
pusha
add
es
inc
add
pop
sub
add
fs
out
clc
sbb
dec
data16
xchg
aaa
xchg
outsl
pusha
add
jne
add
add
divl
add
mov
and
add
and
add
popa
add
pop
loopne
push
add
or
add
lods
lods
pushl
xchg
mov
add
leave
add
add
mov
jle
push
out
std
in
cwtl
mov
pop
xchg
fwait
or
lock
jecxz
jae
add
cmp
xchg
mov
and
add
xchg
sti
daa
clc
pushf
div
dec
dec
loopne
xor
xor
add
clc
mov
add
add
add
adc
add
icebp
fmuls
add
add
clc
lods
push
add
mov
clc
hlt
dec
enter
push
add
sub
cmp
movsb
clc
dec
test
cmp
mov
add
add
add
add
dec
jmp
add
fnsave
add
popa
add
add
add
add
add
fwait
nop
daa
clc
push
inc
add
xchg
cmp
add
cmp
insl
ficoms
ret
clc
xlat
fcomi
cmp
pop
clc
mov
clc
in
test
bound
add
xabort
fwait
pop
mov
xor
add
add
cmp
and
pop
and
add
add
adc
add
add
insl
mov
dec
notb
add
jge
jecxz
push
insb
adc
bound
add
filds
add
mov
add
not
or
add
pop
mov
leave
adc
dec
lret
iret
stos
ffreep
clc
xchg
xchg
cmc
in
adc
cmp
pop
gs
call
clc
push
loope
dec
dec
adc
clc
push
clc
clc
imul
fstl
add
hlt
and
add
ret
clc
mulb
add
xor
add
xor
mov
clc
lahf
popf
xchg
cmp
add
clc
mov
in
mov
clc
pop
lods
jnp
repz
jo
add
leave
mov
mov
loope
mov
idivb
clc
adc
clc
or
clc
cmp
test
inc
clc
mov
mov
pushf
cmp
loopne
xchg
adc
jne
jge
jle
clc
push
fst
cmp
test
movsb
clc
and
add
adc
add
add
addr16
push
add
je
int
pop
clc
lcall
insl
test
add
lahf
mov
add
add
add
fcmovb
clc
xor
mov
pushf
mov
add
xchg
or
ja
clc
sahf
adc
add
clc
popa
add
jg
or
clc
sbb
inc
clc
icebp
mov
clc
cmp
fcoml
jno
add
mov
mov
sarl
out
fdivrs
and
add
xchg
lods
shrl
enter
jbe
inc
add
xchg
cld
xchg
and
add
add
jnp
movsl
clc
fcmove
or
clc
inc
add
xchg
jle
add
in
sub
nop
jle
fisubl
add
clc
sub
clc
loope
es
jge
xchg
jge
pop
jmp
pop
ljmp
leave
jbe
inc
clc
inc
clc
mov
sahf
or
mov
clc
dec
std
inc
add
fstpt
adc
add
ja
adc
add
sar
add
and
mov
out
sbb
add
loop
cmc
mov
pop
sub
pop
inc
clc
test
sbb
jl
clc
mov
aas
nop
dec
adc
mov
clc
xabort
clc
icebp
das
cmp
inc
clc
mov
cmp
out
sub
add
clc
mov
mov
shl
sbb
clc
sahf
pusha
add
push
hlt
in
in
sub
cmp
and
jmp
clc
jg
mov
mov
add
clc
mov
clc
add
add
add
std
push
add
jae
add
adc
add
xor
add
add
lret
add
clc
xor
add
mov
pop
stos
dec
movsb
clc
outsl
cmpsl
clc
imul
repz
pushf
mov
clc
pop
clc
data16
dec
mov
jnp
sar
add
mov
xchg
mov
add
pop
sbb
clc
daa
clc
je
clc
mov
hlt
inc
clc
mov
add
add
add
xchg
gs
inc
clc
std
loopne
or
push
out
lods
sbb
scas
ret
clc
movsl
clc
cmp
push
pop
scas
lea
add
mov
clc
cmp
mov
and
add
sbb
lea
or
add
repnz
push
add
add
add
add
lret
ja
cmp
add
leave
insl
in
sbb
addr16
jp
add
lret
add
and
add
add
xchg
sub
add
cmc
and
add
inc
add
xchg
cltd
lret
xor
add
sbb
jp
je
hlt
lods
pop
mov
cmc
mov
test
call
clc
cmc
push
pop
and
add
leave
jmp
and
insb
stc
je
outsb
sahf
sub
addr16
rol
clc
cmp
cmp
loopne
iret
mov
mov
push
mov
dec
adc
cmp
add
mov
clc
ret
clc
add
add
pusha
add
xchg
xor
decl
add
stos
int3
ret
test
and
pushf
out
sbb
cmp
xor
add
add
add
pusha
add
sub
add
je
dec
fwait
nop
cmp
clc
test
add
jae
add
add
xchg
jl
add
pop
sarb
inc
add
icebp
testb
sub
xor
add
ffree
clc
cltd
mov
add
push
daa
clc
cmp
mov
or
data16
and
add
add
push
push
add
mov
cs
lret
clc
sbb
xrelease
repnz
mull
add
or
add
mov
icebp
iret
fistps
xor
add
sub
cli
out
ja
or
add
add
xor
add
in
sbb
push
stos
cmp
clc
dec
sub
jne
ds
outsb
mov
icebp
mov
sub
int
aam
hlt
call
cmp
clc
or
add
adc
add
sub
sar
jmp
clc
cmp
into
and
add
clc
out
mov
mov
jns
lcall
in
push
hlt
or
bound
add
add
shll
cmp
add
bound
add
cmp
mov
sbb
add
clc
xor
pop
push
lret
add
clc
aam
iret
mov
adc
add
clc
fstpt
in
mov
add
and
add
clc
push
add
aas
adc
add
clc
push
add
popa
add
notb
add
mov
out
and
add
mov
cmp
add
lods
mov
pop
movsl
clc
pop
out
sub
mov
jno
add
dec
jo
add
scas
test
add
cmp
clc
clc
add
add
int3
and
add
sti
cmc
xlat
je
call
inc
clc
xor
add
clc
and
je
testb
dec
adc
add
add
or
clc
and
add
add
inc
add
push
add
or
inc
add
test
jne
inc
clc
and
add
clc
fimuls
clc
push
aad
ds
mov
add
clc
jbe
add
and
add
int
push
add
or
or
pushf
mov
cld
movsl
clc
add
xor
out
inc
add
pop
xchg
mov
clc
gs
enter
add
aam
mov
jns
lods
jecxz
xabort
add
xchg
jp
add
test
xor
clc
lahf
xchg
data16
inc
add
inc
add
inc
add
and
add
add
pusha
add
dec
into
mull
add
sahf
sbb
cld
adc
add
jb
add
xbegin
add
mov
mov
mov
mov
mov
add
leave
out
cmp
clc
aad
add
push
sub
fs
aam
clc
repz
add
push
sub
push
in
xbegin
clc
fimull
add
sbb
jmp
push
jb
add
sbb
mov
mov
cmp
dec
sub
cli
pop
cmp
je
jb
add
popf
inc
clc
mov
test
fldl
push
add
fsubrl
inc
add
je
rolb
add
add
push
add
dec
pop
ja
xchg
mov
add
jo
add
sbb
sbb
int3
sti
mov
cmp
xchg
fcoml
add
stc
push
xlat
dec
stos
sbb
std
mov
xabort
sub
cmp
add
sar
aaa
jmp
add
jle
mov
ds
cmp
clc
dec
xchg
and
add
clc
dec
inc
clc
or
add
lret
icebp
cmc
or
add
add
sub
mov
clc
push
dec
sub
xor
sbb
bswap
adc
scas
fildl
clc
jbe
fsts
fwait
push
sub
sub
clc
xchg
xabort
clc
sub
add
rolb
add
imul
clc
ja
clc
int
fcomi
data16
sub
jge
fnsave
clc
pop
das
and
sarb
add
mov
mov
adc
add
mov
mov
jle
int3
daa
clc
adc
clc
cltd
push
add
loope
imul
sub
sbb
cmp
ljmp
add
add
in
sbb
add
movsl
clc
pop
outsl
push
clc
add
shll
add
pop
cmp
aam
repz
lret
lock
adc
hlt
sbb
movsb
clc
cmc
es
mov
xabort
ret
lcall
add
pop
sti
or
clc
ljmp
pop
or
ret
clc
imul
pop
add
add
repnz
add
clc
jge
icebp
fisttps
add
fs
lock
add
clc
lret
arpl
add
jle
fdivrl
add
adc
add
fistl
add
sti
outsl
lret
loop
test
add
clc
lret
mov
clc
in
pop
pop
shll
push
add
adc
add
xor
add
cmp
mov
mov
aad
sbb
clc
hlt
sub
outsl
loopne
movsl
clc
sarl
mov
icebp
xor
add
add
or
dec
sbb
add
pushf
or
out
xor
clc
xchg
and
cmpsl
clc
cltd
das
mov
out
dec
hlt
fwait
lret
xor
add
inc
add
mov
sbb
mov
lcall
add
dec
aas
sar
pusha
add
xor
add
add
jne
fistpll
clc
repz
jl
clc
lret
clc
add
add
sbb
int3
mov
lock
clc
add
add
stc
loop
push
add
xchg
test
shll
add
pop
mov
rorl
std
dec
loopne
insl
gs
loope
inc
add
test
int
data16
cmp
add
cmp
out
lods
sti
jno
add
jnp
and
inc
add
bound
add
add
and
cmp
cmp
cwtl
sub
stc
cmp
add
add
add
gs
fistps
xor
add
add
arpl
add
adc
add
inc
clc
insl
dec
mov
push
nop
cmc
dec
repz
mov
xor
add
add
clc
inc
clc
gs
mov
add
data16
enter
stc
mov
out
and
add
div
fnsave
cmp
arpl
add
mov
mov
mov
add
repnz
scas
aam
clc
repnz
decl
jecxz
xchg
mov
xor
add
xchg
dec
inc
clc
cmpsb
clc
loope
dec
sub
aam
or
clc
in
adc
add
clc
roll
clc
xchg
jg
clc
dec
mov
clc
aaa
pop
jo
add
add
clc
push
cmc
mov
add
clc
jbe
imul
and
in
mov
add
push
add
or
add
in
ljmp
lret
test
pop
stc
pop
push
add
push
or
adc
add
sbb
loope
lea
add
das
pop
mov
outsl
scas
sub
pop
jbe
lods
jb
add
fwait
sub
mov
outsl
or
imul
pop
mov
test
mov
clc
scas
pop
xchg
dec
test
repnz
add
xchg
fwait
xor
add
add
imul
add
add
cltd
cs
into
into
cmpsl
clc
xchg
add
add
add
add
sar
xbegin
jno
add
push
add
je
pop
lock
fwait
cmp
sub
clc
mov
mov
push
mov
clc
sbb
sar
clc
adc
add
addr16
mov
lret
xbegin
lret
clc
mov
cmp
mov
jg
clc
cmp
test
stc
insb
cmp
clc
in
ja
push
fs
or
adc
dec
jl
mov
nop
in
mov
ja
push
aam
dec
pop
jle
sub
cld
push
add
in
add
add
add
cmp
clc
xor
add
test
mov
push
aas
int
add
xor
add
adc
add
cld
sub
aam
clc
gs
leave
fcomip
rorb
add
loop
test
rcrb
imul
add
inc
clc
cmp
jg
xor
add
bound
add
clc
mov
jp
in
in
std
pop
jp
inc
clc
mov
push
aam
in
out
ret
clc
cmp
add
repnz
clc
or
pop
sti
fstl
add
xbegin
add
add
in
mov
push
sbb
and
add
clc
lods
es
dec
lea
cmp
and
add
xchg
pop
mov
loopne
mov
sub
mov
pop
cmp
clc
and
add
imul
cmp
add
push
push
imul
cmp
jle
rclb
add
pop
sub
xbegin
cmpsb
clc
jg
pop
sbb
dec
xor
add
clc
pop
pop
stos
xchg
fsub
clc
movsl
clc
insb
mov
add
mov
pop
jg
add
mov
add
arpl
add
or
inc
add
dec
or
popf
imul
cmp
add
xlat
std
mov
sbb
push
arpl
add
pop
ss
sbb
xbegin
jne
clc
mov
pushf
sar
clc
aam
lods
jl
cmpsb
clc
mov
cmpsb
clc
rorl
sbb
adc
add
outsb
cmp
add
loope
jne
sbb
jl
push
add
lods
push
stc
ss
mul
clc
add
add
in
jae
add
cmpsb
clc
testb
cmp
clc
mov
mov
clc
sub
fwait
dec
dec
mov
fnsave
sub
out
sbb
cmp
add
and
add
sub
jp
dec
pop
test
xor
repnz
add
in
outsb
pop
arpl
add
clc
out
mov
clc
mov
inc
add
pop
mov
sar
mov
outsb
xchg
sbb
sub
mov
clc
hlt
fisttpll
add
inc
clc
shl
clc
dec
movsb
clc
clc
vxorps
xchg
arpl
add
and
add
add
fidivrs
or
add
lock
stos
icebp
pop
loope
lret
or
clc
out
jo
add
clc
dec
fdivrs
pop
push
add
js
clc
movsb
clc
jp
mov
inc
clc
or
clc
xor
add
xchg
leave
dec
hlt
mov
clc
and
add
add
daa
clc
pop
fucom
clc
leave
clc
adc
add
add
add
psllw
pop
cltd
aas
push
add
imull
mov
pop
clc
das
mov
add
add
sbb
clc
inc
clc
lock
clc
sar
enter
outsl
mov
cmp
xchg
in
cwtl
xlat
add
add
pop
clc
in
ret
fs
dec
mov
add
add
add
fdiv
bnd
popa
add
or
rol
clc
cltd
mov
clc
into
call
clc
xchg
sar
clc
aam
clc
sbb
sbb
lock
sub
or
add
sar
lahf
mov
clc
inc
add
xchg
sbb
add
add
fidivl
clc
mov
add
mov
push
add
xchg
jo
add
jg
pop
clc
mov
cmp
bound
add
xchg
jo
add
pop
clc
dec
jle
inc
add
inc
add
pcmpgtd
xchg
stc
shr
pop
xor
add
add
push
xlat
lahf
rcr
lret
cmp
divb
add
cmp
lock
cmp
jne
stc
clc
cld
movsb
clc
aad
clc
sub
inc
add
out
push
stos
jnp
add
push
push
add
mov
negl
clc
and
add
jnp
in
cmc
vandps
cmp
in
pop
xchg
fdivrs
mov
adc
add
dec
lret
jbe
clc
inc
clc
xchg
pop
aam
clc
icebp
lods
fsts
inc
add
sub
inc
clc
jle
jg
or
mov
clc
sub
pushf
push
add
xbegin
iret
or
and
add
das
cli
clc
jne
popf
pop
mov
clc
nop
jg
in
bound
add
pushl
scas
imul
roll
clc
cmc
mov
cltd
fwait
xabort
pop
clc
or
clc
mov
clc
dec
pop
leave
test
clc
scas
cmp
pop
ljmp
inc
clc
sub
add
cmp
sar
js
pushf
jbe
clc
cltd
jo
add
insb
inc
add
push
in
push
daa
clc
xabort
je
clc
lock
mov
inc
clc
or
lret
dec
pop
dec
daa
clc
mov
repz
test
fistl
clc
clc
sbb
lret
out
push
add
ftst
clc
cmp
in
insb
xlat
jle
push
add
es
cwtl
jne
add
in
inc
add
test
jns
fidivrs
add
dec
js
or
pop
add
add
clc
int3
imul
jo
add
arpl
add
push
add
fcmovne
cmp
and
add
add
push
push
add
and
add
ds
clc
stos
roll
pop
clc
mov
adc
add
ss
mov
add
cmp
clc
pop
sub
jge
push
pop
repnz
and
add
add
shll
add
imul
pop
add
add
jmp
dec
imul
clc
dec
cwtl
imul
fcmovnb
clc
xor
add
clc
loope
decb
add
adc
add
clc
rep
mov
dec
dec
jne
test
pop
adc
add
push
add
and
add
add
repnz
mov
xchg
xchg
cmp
mov
inc
clc
adc
lock
push
outsl
cmp
clc
std
jnp
cmp
add
adc
add
clc
out
in
in
ret
xlat
dec
xabort
mov
clc
xor
add
cmp
fwait
arpl
add
sbb
add
outsb
xchg
mov
clc
nop
mov
inc
add
push
test
xadd
sahf
fsubrp
pop
dec
aaa
jge
in
adc
add
stc
or
dec
sbb
inc
add
xor
add
sub
xor
mov
jno
add
xor
add
inc
add
ret
clc
mov
add
rcrl
or
and
add
and
mov
inc
clc
xchg
pop
xbegin
fcmovbe
inc
clc
stos
mov
in
and
or
clc
or
inc
clc
imul
pop
xchg
fsubrl
test
cmp
cmpsb
clc
popf
adc
add
clc
mov
push
add
add
add
clc
fisttps
movsl
clc
stos
inc
clc
inc
add
enter
clc
mov
jle
test
aas
xor
add
add
jg
loopne
imul
loopne
or
cltd
adc
add
push
dec
mov
lret
add
out
cmpsb
clc
and
int
clc
aam
in
ds
pushf
gs
dec
scas
sbb
clc
sbb
pop
cmp
clc
data16
xbegin
aaa
or
push
push
repnz
lea
clc
inc
add
addr16
imul
cmp
std
push
clc
aad
arpl
add
mov
inc
add
dec
mov
xchg
push
clc
test
xchg
jg
and
add
xor
add
mov
repz
ds
int3
inc
add
mov
add
lods
xchg
aaa
mov
add
movsb
clc
dec
or
jge
mov
add
mov
clc
fdiv
xor
add
mov
add
mov
shlb
clc
fsubrs
add
mov
shrl
clc
xlat
movsl
clc
dec
push
flds
inc
clc
and
clc
mov
ljmp
scas
cmp
add
sar
mov
psllw
jmp
lods
adc
add
pop
xlat
xor
add
pop
push
rol
clc
or
jno
add
fsubrp
leave
in
pop
xor
add
xlat
lods
xchg
push
or
mov
clc
mov
push
xchg
sub
clc
ret
clc
out
mov
dec
mov
and
add
jo
add
dec
adc
add
mov
sub
bound
add
inc
clc
lret
test
push
add
shrl
clc
push
clc
loopne
jne
xor
add
cmp
cmp
add
mov
cltd
arpl
add
jae
add
pusha
add
out
divb
xabort
fldcw
testb
push
add
sub
add
jnp
clc
dec
lcall
add
stos
jno
add
add
stc
in
nop
and
add
add
xabort
clc
jno
mov
fisubrs
lods
push
and
test
lods
js
test
fsubrs
ficoml
mov
clc
adc
add
add
into
mov
add
or
clc
add
add
jle
ja
mov
xchg
mov
lcall
clc
sbb
cwtl
sub
clc
scas
das
jbe
push
clc
adc
and
add
scas
pop
dec
sar
mov
push
clc
dec
js
clc
mov
add
mov
mov
inc
add
or
adc
add
insb
cmp
cmp
clc
xor
mov
movsl
clc
cmp
clc
outsb
pop
xchg
lahf
out
jb
add
add
clc
ja
clc
clc
pop
cli
scas
rcr
push
push
mov
add
sbb
clc
int
xor
divb
clc
fstpl
shlb
call
jmp
gs
mov
add
adc
add
int
fs
xor
add
lock
sub
add
mov
add
dec
jb
add
adc
add
add
clc
mov
dec
mov
xor
add
add
add
add
out
dec
shrb
or
add
xchg
nop
outsl
mov
xor
add
xor
add
cmp
clc
push
add
mov
rcr
stc
sbb
clc
lods
rorl
cwtl
add
add
out
test
clc
xchg
ret
clc
test
cmp
lods
jecxz
pop
clc
fsub
clc
outsl
ret
int
sbb
sub
add
inc
clc
cmp
push
add
loopne
sbb
add
add
test
popf
dec
pop
mov
add
xor
add
add
fsubrs
out
inc
clc
mov
sub
dec
aam
clc
push
pusha
add
push
add
inc
add
push
add
add
ffreep
clc
inc
clc
pushf
mov
clc
ss
mov
dec
inc
clc
and
inc
clc
add
aad
fnsave
or
aam
clc
cmp
add
add
hlt
jo
add
lods
mov
es
and
add
clc
popa
add
adc
add
outsl
and
add
clc
std
data16
fisubrl
xlat
arpl
add
xlat
xchg
push
mov
inc
add
or
and
add
add
outsl
loopne
sbb
clc
xchg
mov
clc
insl
sbb
add
add
push
mov
and
dec
out
data16
aad
or
adc
add
out
cmp
clc
mul
clc
bound
add
push
mov
xchg
inc
clc
clc
pushf
mov
clc
in
mov
add
jne
mov
push
add
mov
push
std
test
cmp
clc
sahf
mov
clc
cmp
clc
pop
sub
add
movsb
clc
inc
clc
repnz
mov
cmp
adc
add
xchg
xchg
pop
test
or
push
add
add
add
iret
pop
jp
add
fwait
inc
clc
das
mov
hlt
jle
ret
sub
xchg
mov
mov
lock
cmp
dec
mov
clc
mov
mov
adc
imulb
pshufw
mov
cmp
add
add
mov
mov
arpl
add
ss
clc
inc
clc
and
add
pop
sbb
es
mov
mov
mov
mov
clc
ja
mov
push
clc
stos
in
jmp
mov
push
test
lods
dec
fimull
jmp
shll
pop
cwtl
outsl
cmp
cmpsb
clc
test
xor
fildll
cmpsb
clc
inc
clc
cmp
pushf
jge
dec
and
add
fsub
clc
jg
inc
add
in
inc
add
mov
add
scas
jl
add
daa
clc
fbstp
add
add
add
das
imul
out
pop
mov
clc
test
xchg
idivb
pop
lcall
add
std
pop
pop
imul
fnstsw
jnp
aad
fadds
add
sar
aad
lea
inc
clc
imul
push
lods
push
sbb
add
add
xor
clc
mov
dec
pop
clc
add
add
daa
clc
fisubrs
ljmp
dec
adc
add
add
enter
mov
add
cmp
mov
or
sub
pushf
cmpsb
clc
xchg
inc
add
and
in
or
stos
test
clc
xchg
insb
and
add
sar
xor
add
add
das
pop
pop
sar
inc
add
mov
push
loop
repz
add
add
sahf
ds
clc
cmp
add
add
jecxz
push
clc
mov
jnp
fmulp
inc
clc
mov
clc
sub
jne
add
xchg
addr16
movsl
clc
mov
loope
add
add
xbegin
push
and
add
inc
add
fiadds
sbb
ss
test
add
sar
sub
xchg
ret
xabort
clc
inc
clc
or
add
push
add
jnp
stc
sub
push
dec
xchg
jmp
stos
js
add
sbb
addr16
mov
clc
or
cmp
inc
add
add
add
mov
clc
dec
jnp
adc
add
pushf
bound
add
movsl
clc
add
add
pushf
pop
mov
xor
add
add
cmp
rorl
inc
clc
leave
dec
mov
rcrl
xor
add
mov
das
jno
add
mov
imul
push
out
xbegin
add
push
icebp
inc
clc
pop
jne
mov
xchg
add
add
add
pushf
test
add
cmpsb
clc
movsl
clc
pushf
jle
imul
clc
iret
sti
out
rolb
add
popa
add
or
add
inc
add
push
add
cltd
sub
clc
push
add
mov
clc
sub
clc
jl
fadd
clc
adc
clc
mov
pop
push
add
lea
lods
dec
push
add
add
sbb
daa
clc
cmp
clc
adc
movsb
clc
or
dec
aas
data16
rcl
dec
cmp
clc
nop
sbb
clc
nop
pop
aam
jnp
add
adc
clc
scas
sub
add
mov
repnz
in
pop
sbb
add
pop
clc
push
pop
xchg
inc
clc
xbegin
xchg
mov
clc
lea
inc
add
xor
add
test
add
popa
add
sar
xchg
push
call
mov
clc
cltd
lea
aas
out
lea
sbb
push
add
adc
sahf
test
stos
sub
and
ljmp
xchg
lcall
pop
push
xor
add
ds
mov
add
or
add
clc
pop
insl
pusha
add
mov
fisubl
add
mov
mov
mov
test
data16
adc
add
inc
clc
pusha
add
sub
inc
clc
push
clc
mov
mov
testb
jmp
cmpsb
clc
repnz
add
fbstp
mov
pop
and
add
cmp
add
aaa
xchg
daa
clc
hlt
in
fwait
test
rcrl
lret
push
add
test
dec
xchg
cmpsb
clc
popa
add
mov
pop
xchg
cltd
ret
insb
xchg
out
shrb
clc
xor
add
and
lods
call
cmc
shll
add
push
add
cmp
fdivl
add
ret
clc
test
hlt
mov
aaa
add
add
add
out
push
je
and
add
add
mov
cmpsl
clc
in
lcall
add
neg
add
push
push
pop
popa
add
ss
add
and
add
mov
jno
add
clc
jle
add
cli
mov
inc
add
push
push
xor
add
lret
clc
imul
sub
insb
pop
clc
sub
add
sbb
add
add
or
add
loopne
test
out
cli
lods
loopne
cwtl
ss
pop
clc
jns
pop
je
sar
imul
in
mov
push
clc
mov
add
mov
imul
add
push
add
dec
in
push
xchg
xor
add
add
adc
add
add
jl
xchg
add
add
add
bound
add
jg
jle
gs
in
enter
clc
jge
push
adc
add
add
add
add
add
mov
jp
test
js
loop
cmpsl
clc
inc
clc
push
addr16
lahf
stc
inc
add
cmp
ds
clc
cmp
push
pop
mov
clc
es
pop
and
add
push
nop
mov
fdivrp
cli
mov
std
or
or
clc
neg
mov
clc
pop
clc
mov
inc
add
jnp
and
add
clc
inc
clc
pop
xchg
jno
add
sbb
clc
or
add
add
clc
stos
ror
pop
clc
lret
iret
sbb
pop
lock
add
cmp
repnz
clc
inc
clc
ja
sar
clc
pop
fstpl
loope
in
lea
clc
lahf
stc
scas
adc
add
add
and
add
push
dec
mov
clc
and
add
add
jl
inc
add
jg
jmp
jmp
inc
add
into
jl
clc
sub
clc
pop
clc
loope
xchg
dec
mov
clc
push
clc
fistpl
add
sub
add
loopne
shll
clc
ret
imul
mov
clc
rolb
add
clc
push
clc
clc
push
jmp
inc
clc
or
testb
add
clc
clc
pop
clc
or
pop
dec
pop
in
jp
iret
sahf
mov
sub
clc
fidivl
add
add
lcall
clc
shl
in
pop
es
fsubr
or
push
add
rep
mov
clc
adc
add
cltd
int
mov
add
ret
jo
add
clc
adc
std
and
add
cmc
or
clc
js
je
clc
out
and
mov
clc
int
add
jg
sbb
and
add
clc
mov
add
mov
add
ljmp
add
out
cmp
and
add
add
sbb
push
iret
jle
add
in
fwait
xor
add
or
xchg
xchg
xchg
testb
push
sarl
sahf
xchg
pusha
add
pop
xor
add
add
or
add
dec
ljmp
outsb
jmp
add
mov
add
in
sub
mov
add
in
sub
clc
lock
xor
add
pop
jp
ret
clc
jge
test
scas
and
add
add
mov
add
add
add
inc
add
mov
add
push
popf
fwait
xchg
rolb
add
das
mov
in
pop
xchg
leave
and
pusha
add
inc
clc
pushf
and
add
pop
sar
push
out
popa
add
mov
pop
mov
loope
or
pop
mov
fs
stos
ret
clc
fildll
mov
add
or
clc
mov
clc
outsl
pop
cmp
daa
clc
dec
push
add
mov
clc
enter
inc
add
int3
cmp
push
sub
cmp
ljmp
push
add
cmc
sbb
jnp
cmpsl
clc
mov
inc
clc
imul
clc
mov
mov
pop
xor
sbb
pop
cmp
pop
rclb
ljmp
lock
xchg
test
fdivl
add
mov
and
fimuls
enter
sub
add
bndstx
jbe
xlat
dec
out
jmp
pop
fs
or
lcall
in
jl
clc
and
add
jae
add
inc
clc
xchg
push
clc
push
sub
pop
sbb
clc
dec
xor
add
or
adc
add
repz
adc
add
clc
lret
add
fists
clc
loope
clc
stos
ja
xor
add
js
mov
inc
clc
fmulp
movsb
clc
jmp
call
stos
xchg
sbb
into
data16
fwait
cmp
clc
dec
addr16
push
data16
dec
pushf
sti
jp
add
add
data16
scas
test
cmc
inc
clc
rorl
mov
add
fsts
xor
add
clc
call
cld
lea
add
mov
clc
mov
cmc
mov
jl
clc
aam
or
push
sbb
dec
push
xor
add
es
mov
call
dec
loope
into
repnz
and
add
std
jnp
jle
mov
jge
xlat
push
add
cmpsb
clc
jns
push
add
cmp
ja
add
test
jecxz
push
daa
clc
nop
lods
cltd
clc
mov
clc
sbb
sbb
jae
add
pop
pop
hlt
inc
clc
pop
mov
mov
ljmp
clc
jmp
add
clc
mov
insl
movsb
clc
int3
decb
xor
add
add
push
add
sahf
push
or
lock
clc
inc
add
in
and
add
in
fs
into
mov
clc
inc
clc
pop
fucomp
push
inc
add
xlat
xchg
push
add
pop
clc
push
out
div
sar
add
inc
add
push
add
cli
std
lret
or
mov
pop
jbe
mov
clc
shlb
clc
sub
jb
add
clc
mov
add
and
add
add
mov
clc
nop
push
lret
insb
nop
cmp
sti
xchg
das
xor
add
adc
add
dec
cmp
add
sbb
fsubs
add
cmp
mov
inc
add
hlt
xchg
imul
std
add
add
add
and
mov
movsl
clc
je
clc
in
mov
daa
clc
mov
add
push
add
fcmove
inc
clc
push
jmp
je
add
cmp
mov
data16
enter
clc
jge
cli
cmp
shrb
cmpsl
clc
fsubr
dec
sbb
clc
xor
add
inc
add
lahf
cmp
je
je
clc
jp
mov
add
xchg
sub
clc
xor
add
add
inc
add
aas
cs
outsl
ret
clc
je
clc
inc
add
mov
jns
adc
add
add
add
pop
xor
mov
add
insl
dec
lods
or
add
mov
clc
and
add
kortestw
jle
clc
cs
mov
in
addr16
imul
enter
clc
jecxz
or
clc
or
mov
and
imul
sub
addr16
sub
clc
ja
add
adc
add
add
push
clc
sbb
dec
fstl
clc
jae
add
sarb
xbegin
insb
pop
scas
cmp
pop
push
add
dec
mov
ret
clc
out
inc
add
sbb
mov
rcll
jne
mov
jae
add
jge
clc
dec
bound
add
add
jno
add
fsubrl
add
add
cmpsl
clc
cmpsb
clc
inc
add
sbb
add
adc
add
imul
add
imul
clc
cld
mov
clc
cmp
iret
adc
add
test
mov
pop
jmp
clc
jnp
je
add
add
pop
into
cmp
out
inc
add
aas
js
xchg
hlt
clc
in
inc
clc
sar
cmp
das
das
shld
push
arpl
add
add
mov
enter
add
jnp
int
dec
jo
add
add
jmp
aad
in
sub
clc
jmp
repnz
mov
incl
add
clc
pop
in
cmp
inc
clc
out
fcompl
add
into
int3
jp
adc
add
gs
ljmp
clc
fists
clc
int3
mov
cmpsb
clc
dec
mov
sti
icebp
jns
mov
add
loope
xor
add
push
imul
divl
add
adc
add
add
xchg
mov
push
add
jmp
clc
icebp
and
add
clc
aaa
add
add
out
inc
clc
in
rcll
clc
and
add
xchg
mov
mov
insl
sarb
jmp
clc
pop
clc
inc
clc
daa
clc
insl
mov
cmpsb
clc
xor
clc
cmp
clc
jae
add
add
add
in
xor
add
clc
ret
pop
mov
add
jmp
sahf
add
insb
mov
add
push
add
inc
clc
mov
add
outsl
lock
sbb
lcall
shrb
add
cmp
js
fnstenv
clc
scas
sub
loopne,pn
std
ja
add
bound
add
outsb
loopne
int3
outsb
push
jo
add
push
add
add
add
inc
clc
mov
adc
test
cld
push
pop
pop
clc
or
add
inc
clc
mov
add
test
add
pop
je
clc
mov
add
lret
inc
add
jmp
add
pop
ret
xchg
push
add
aaa
frstor
sub
pop
dec
cmp
clc
inc
add
mov
clc
stos
dec
and
add
fbld
push
push
fwait
push
jmp
out
stc
xor
add
inc
add
in
aas
push
xor
add
add
lcall
into
mov
cmp
jne
test
es
int
jne
pop
ja
cmp
pop
outsl
out
fists
add
sbb
sar
out
fadd
clc
xchg
outsb
lret
cmpsl
clc
loopne
jae
add
add
add
push
cs
push
add
add
add
jmp
jo
add
std
push
add
ret
clc
sbb
and
add
add
add
pop
clc
inc
add
cmp
sub
inc
add
sub
adc
add
lcall
clc
call
add
clc
cltd
dec
inc
add
add
add
and
add
or
aam
pusha
add
adc
add
add
clc
xlat
xor
add
add
add
pusha
add
inc
add
push
pop
cmp
inc
clc
pop
out
loopne
jmp
jmp
rolb
and
add
movsb
clc
imul
sbb
clc
dec
dec
push
lcall
test
popa
add
push
xchg
sub
dec
pusha
add
xor
add
not
cli
ja
add
xchg
cmp
sbb
cmp
in
xor
add
add
popa
add
adc
add
add
mov
pop
inc
clc
leave
scas
inc
clc
and
add
je
add
push
daa
clc
mov
cmp
mov
je
adc
add
mov
jbe
ljmp
inc
add
mov
out
pop
mov
add
cmp
jp
sub
add
xor
add
in
xor
add
and
add
pop
shrb
dec
bound
add
add
sti
pop
push
add
cltd
inc
clc
sbb
clc
pop
clc
xchg
into
push
add
mov
inc
clc
and
add
jae
add
in
mov
mov
add
add
sub
ss
add
inc
add
ss
cmp
jl
clc
fsts
stc
dec
cmp
clc
lret
sar
clc
fmul
jp
cltd
sub
add
add
cmp
add
shlb
add
add
shlb
add
jecxz
test
jle
clc
xor
add
sbb
xbegin
pop
mov
clc
pop
or
dec
jmp
add
push
inc
add
xor
add
jmp
clc
pop
clc
xchg
test
sub
add
lods
rolb
fistpll
push
arpl
add
movsb
clc
int
clc
cwtl
mov
mov
sar
add
lret
cwtl
into
icebp
sub
add
ds
das
mov
inc
add
lret
movsb
clc
push
mov
mov
lods
xor
add
clc
xor
add
cmp
add
mov
add
sbb
add
and
scas
leave
test
jle
jle
es
add
jne
add
in
rorl
lret
test
movsl
clc
xor
add
mov
pop
and
add
scas
and
xchg
and
add
add
popf
and
add
add
stc
jg
add
insb
fs
add
add
add
pop
jle
imul
pusha
add
xabort
clc
dec
cmp
inc
add
cmp
stc
leave
mov
clc
stos
mov
clc
mov
leave
push
add
add
add
jge
mov
pop
cmp
add
imul
pushf
pop
cmpsl
clc
adc
add
jno
add
clc
neg
and
test
add
clc
mov
jae
add
ficoms
test
popf
dec
pop
push
mov
add
push
lcall
mov
lock
fisubrl
clc
testl
hlt
ret
clc
mov
add
add
aam
das
pop
push
inc
add
sub
and
add
clc
fs
mov
int
mov
jno
add
in
xor
add
jmp
fs
jne
cmc
repz
or
and
add
cmp
clc
jp
mov
arpl
add
add
clc
fidivrs
mov
inc
clc
xor
cmpsl
clc
xor
add
clc
sub
mov
xor
add
fcompl
add
fs
cmp
mov
add
pop
clc
jge
mov
loopne
clc
fdivl
sahf
rol
clc
add
aam
clc
push
icebp
and
cmp
or
or
clc
daa
clc
mov
add
loopne
enter
sbb
sbb
add
mov
jmp
and
add
divb
clc
and
xor
add
stos
mov
cmp
clc
dec
sbb
mov
clc
shl
mov
add
stc
cmc
sarb
sub
sbb
clc
mov
mov
cmp
add
clc
xabort
mov
add
push
add
scas
jg
clc
and
add
add
int3
iret
mov
xchg
std
faddl
add
popf
mov
test
inc
add
jae
add
inc
clc
sti
leave
xchg
js
clc
sbb
cmp
add
pop
clc
popa
add
jb
add
lcall
add
mov
add
lock
repz
add
inc
add
stc
insl
sub
loop
jno
add
out
push
dec
cmp
cli
pop
or
jl
xlat
jle
add
sub
roll
add
add
clc
mov
dec
dec
sub
add
pop
enter
fistpll
popa
add
fwait
cld
mov
clc
xchg
cmp
outsl
push
push
pop
aad
out
js
push
add
pop
jb
add
add
inc
add
sbb
adc
mov
mov
add
testb
push
add
and
add
dec
inc
clc
cmpsl
clc
stc
mov
clc
push
das
add
add
mov
add
xabort
jns
imul
fidivl
clc
push
sbb
inc
clc
dec
adc
push
fadds
add
fiadds
cmc
dec
outsb
rcrl
ret
clc
and
add
add
in
xor
add
and
add
add
or
outsl
pop
in
adc
inc
clc
push
sbb
adc
add
xlat
inc
clc
fdivrs
mov
xor
cmp
add
sbb
mov
gs
gs
clc
dec
mov
addr16
scas
mov
jns
add
or
or
add
roll
adc
add
cli
inc
add
mov
add
arpl
add
popa
add
mov
mov
aaa
dec
pusha
add
popl
add
sbb
cmp
pop
int3
out
mov
add
add
stos
enter
cmc
pop
mov
icebp
jnp
fcompl
adc
add
clc
movsb
clc
std
jae
add
sbb
mov
add
mov
push
jecxz
psubd
add
inc
add
in
jle
clc
dec
in
lea
mov
mov
mov
jne
mov
int
clc
loopne
out
dec
std
adc
clc
xchg
jg
rorb
clc
jno
add
pop
and
notl
add
jge
clc
fbld
cli
sub
lock
clc
xor
clc
repz
clc
stos
dec
xor
fwait
mov
cmpsb
clc
js
fcmovne
adc
add
clc
xor
add
xchg
cmp
xor
cmp
clc
mov
clc
sbb
lods
pop
jge
fcomp
mov
xchg
cmp
cmp
push
add
or
jns
enter
sbb
add
add
or
dec
fmuls
mov
sub
mov
jo
add
adc
add
insb
add
cmp
clc
filds
data16
cmp
add
clc
in
mov
mov
cmp
add
sbb
add
mov
and
add
cltd
jmp
add
adc
add
clc
pop
jne
clc
xchg
xchg
mov
xor
add
loop
popa
add
jb
add
je
cmp
dec
push
clc
pop
ja
imul
cmp
clc
mov
loopne
insl
add
add
fwait
data16
aam
pop
cmc
and
add
and
add
js
add
add
add
add
mov
cmp
jb
add
sahf
mov
or
jnp
clc
jae
add
add
in
aad
clc
and
add
cmp
add
clc
jo
add
fisubrs
out
jbe
add
jle
xlat
mov
cmp
mov
std
push
hlt
pop
lahf
notb
jae
add
clc
push
mov
push
clc
insl
mov
call
repz
add
add
ret
fld
clc
push
add
add
cmpsb
clc
push
jns
dec
repz
mov
clc
imul
lcall
add
stos
mov
jnp
in
negl
cmp
mov
lods
inc
add
pop
add
add
add
mov
add
xor
add
dec
fnstenv
push
inc
add
ljmp
clc
out
push
push
add
rorl
iret
lods
add
add
clc
mov
xchg
mov
clc
mov
out
lods
pop
adc
add
clc
ret
clc
xchg
add
add
add
add
add
jbe
xbegin
xchg
dec
imul
test
add
clc
and
add
add
or
add
add
es
sub
imul
insb
fwait
cmc
add
ja
add
scas
testl
add
add
xbegin
clc
xbegin
and
add
add
lret
add
add
jmp
add
enter
clc
or
stos
mov
add
jle
clc
push
add
cmp
cld
ljmp
jae
add
sbb
sub
pop
cmp
adc
add
add
jns
add
add
sbb
clc
popa
add
nop
pop
inc
add
inc
add
cltd
jge
shll
add
loopne
ljmp
mov
cmc
fsubr
xchg
xchg
push
xchg
ret
clc
arpl
add
clc
pop
fmul
insl
xor
add
cmp
lods
cmp
clc
or
dec
push
add
arpl
add
xlat
push
xchg
and
lock
scas
fstl
ja
js
fsubr
mov
mov
add
jp
leave
pop
jp
clc
mov
dec
pushf
repnz
clc
pop
lock
sub
inc
add
aad
mov
add
add
sub
push
add
push
xlat
xchg
repz
gs
mov
outsl
outsl
pop
push
add
outsl
pop
and
xor
add
or
add
add
scas
cmp
icebp
xchg
popa
add
in
mov
clc
sub
add
jb
add
and
add
jmp
add
add
clc
leave
jno
add
xor
fst
mov
xchg
sub
add
push
cmp
aas
loope
xchg
int
sbb
sub
add
rorl
enter
add
cmp
mov
lods
sbb
mov
aaa
dec
test
xchg
jg
ds
adc
add
push
push
clc
dec
fsubr
call
clc
popa
add
xabort
mov
clc
aad
mov
inc
add
daa
clc
and
fs
jnp
clc
lods
mov
dec
sbb
aas
sbb
cltd
fsubl
in
xchg
jle
clc
dec
add
add
clc
jecxz
loop
mov
clc
mov
xor
add
or
adc
add
jp
jo
add
add
or
outsl
inc
clc
sub
sar
clc
inc
clc
jne
repz
ret
in
or
movsb
clc
int3
out
pop
mov
or
shlb
add
xchg
cmp
sarb
sti
scas
into
pop
push
clc
aas
push
in
jp
push
add
stos
shrl
jecxz
dec
int3
test
clc
pop
pop
fstl
iret
sub
push
mov
add
add
clc
out
jno
add
add
add
test
sbb
jnp
fists
clc
sbb
test
divb
ds
jecxz
mov
dec
cmp
clc
cmp
mov
add
clc
mov
pop
add
and
add
add
dec
add
add
in
jns
push
add
roll
std
adc
pop
clc
enter
fmuls
jmp
clc
xchg
out
adc
add
add
add
add
xchg
fcomp
add
call
clc
or
jbe
add
divl
add
in
stc
push
add
xchg
cmp
fcomps
mov
add
