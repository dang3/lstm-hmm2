inc
add
add
inc
inc
add
add
pop
add
add
add
add
jne
add
add
add
add
add
add
and
add
add
bound
pop
add
and
xor
add
add
addr16
push
add
add
adc
je
add
inc
add
inc
adc
adc
fs
add
add
add
add
push
xor
jne
fs
add
add
push
inc
add
add
add
add
xor
add
add
xor
add
ss
jae
add
jo
add
add
add
add
add
and
xor
inc
add
and
add
inc
add
push
add
xor
inc
add
add
add
add
add
fs
add
add
add
add
add
pusha
add
inc
add
add
add
add
xor
add
add
inc
push
pusha
and
add
add
add
adc
add
add
and
add
add
jae
add
add
add
add
add
add
jne
add
add
add
add
add
xor
add
arpl
adc
jbe
add
add
add
je
add
add
push
add
xor
push
push
add
add
inc
add
adc
add
addr16
add
and
and
add
inc
push
pop
add
xor
inc
add
arpl
add
add
add
push
jo
add
push
add
add
add
pop
add
and
xor
and
xor
add
add
add
xor
xor
add
add
add
add
daa
add
add
add
add
push
add
and
add
add
add
daa
adc
add
add
add
push
adc
add
pop
push
add
add
push
add
aaa
add
inc
ja
add
add
jne
popa
adc
and
add
add
push
add
xor
push
add
jne
xor
add
add
add
add
add
add
and
add
add
and
add
add
add
pusha
xor
add
push
push
add
add
add
add
add
push
inc
add
add
bound
adc
daa
add
inc
add
inc
add
and
adc
jae
and
jne
add
push
add
inc
add
push
popa
push
add
add
push
jo
add
add
xor
inc
add
and
jno
add
add
add
adc
add
add
add
add
add
add
inc
adc
add
add
push
add
add
inc
add
add
add
add
jne
push
push
and
add
inc
add
push
adc
add
add
add
add
add
je
add
add
and
push
je
xor
add
inc
add
add
ja
add
add
add
pop
add
add
add
add
add
add
add
push
adc
adc
add
xor
add
add
add
adc
je
add
add
inc
push
inc
add
add
add
add
add
add
add
push
push
pop
add
inc
push
pop
pop
jno
add
inc
add
and
and
add
add
add
jo
add
add
push
pusha
add
push
add
add
add
bound
arpl
add
jo
push
add
add
add
inc
add
add
and
jb
add
push
add
adc
add
add
data16
daa
bound
inc
xor
jne
add
xor
add
add
je
add
add
add
inc
add
add
add
push
add
add
add
add
add
add
add
push
add
add
add
inc
add
pusha
add
add
daa
arpl
add
add
xor
adc
add
add
add
add
add
add
add
add
add
add
add
add
push
add
add
add
push
add
adc
push
xor
ja
push
push
push
add
add
inc
add
add
add
add
add
pusha
push
inc
inc
push
jo
add
add
add
xor
push
adc
and
add
xor
je
adc
xor
add
add
add
aaa
and
adc
je
add
xor
add
add
add
push
add
add
add
adc
adc
add
add
add
add
adc
xor
inc
add
add
add
and
add
adc
add
push
add
add
pop
add
push
add
add
fs
push
add
inc
add
push
add
and
adc
aaa
jo
push
add
jb
add
push
add
add
xor
add
add
pop
add
xor
push
and
xor
add
bound
push
add
add
add
inc
and
add
daa
pop
push
inc
ss
adc
add
add
and
add
inc
add
push
and
pop
add
jae
add
add
add
xor
add
add
adc
push
push
add
gs
add
add
add
add
daa
ja
add
jne
add
add
add
jb
add
add
add
push
add
data16
add
inc
adc
bound
popa
xor
add
add
add
xor
jae
add
daa
add
inc
and
push
add
add
add
add
jae
push
add
inc
add
add
bound
add
add
add
adc
add
and
add
add
add
and
xor
add
push
add
jno
add
ja
add
add
add
xor
and
jo
adc
add
add
add
add
add
push
inc
bound
add
add
jno
add
add
add
aaa
pop
and
add
add
xor
jno
add
add
push
add
add
add
add
add
xor
add
add
add
arpl
add
add
add
add
add
add
add
inc
add
add
push
add
add
add
add
add
add
bound
xor
adc
add
add
inc
add
je
inc
add
add
add
and
add
add
add
add
add
push
add
xor
add
add
add
inc
inc
and
add
push
push
push
add
push
arpl
push
push
add
add
add
add
jno
add
add
add
add
add
add
push
add
add
add
push
add
add
push
add
add
add
add
add
ja
push
inc
add
add
add
add
add
add
popa
add
add
add
push
add
push
push
add
add
xor
add
add
aaa
add
je
inc
inc
add
add
add
add
add
inc
add
add
add
add
add
adc
add
xor
adc
and
add
add
add
push
add
add
add
addr16
adc
push
add
add
add
add
add
and
push
adc
jae
add
add
add
add
push
add
add
pop
adc
add
add
pop
aaa
add
add
push
add
popa
adc
adc
and
jae
add
push
add
and
adc
add
inc
ja
add
xor
add
inc
add
daa
inc
add
inc
add
add
and
add
add
inc
add
add
jb
adc
add
add
push
adc
daa
add
add
add
add
push
add
add
inc
add
and
add
add
add
add
add
add
jbe
popa
add
add
add
add
and
add
inc
add
and
add
add
inc
add
push
and
xor
jo
add
and
inc
add
add
add
add
aaa
jo
add
push
popa
add
inc
and
add
add
je
add
pop
add
add
add
push
push
add
addr16
push
add
add
add
add
add
add
add
inc
add
add
add
inc
adc
pop
add
add
add
add
push
daa
add
popa
inc
add
adc
add
pusha
add
add
add
adc
adc
jbe
add
inc
add
add
add
add
add
add
add
add
xor
add
add
add
jo
add
add
add
add
push
add
daa
inc
and
add
add
add
add
add
push
and
popaw
push
add
adc
adc
je
add
add
add
add
pusha
add
inc
jb
je
jae
add
push
add
add
add
add
add
xor
xor
adc
add
add
push
inc
xor
and
and
adc
pusha
pop
add
add
data16
add
and
popa
push
push
add
add
jne
pop
adc
inc
add
add
add
add
add
jae
push
add
jno
push
jb
add
add
add
add
add
add
add
adc
inc
add
add
add
add
and
bound
add
add
push
add
and
add
inc
add
xor
add
add
add
and
add
adc
add
add
add
add
add
add
add
add
add
push
add
inc
add
add
inc
add
daa
add
aaa
xor
arpl
add
add
jbe
add
add
add
add
pop
aaa
add
push
add
add
add
add
add
inc
add
add
xor
add
add
jne
add
add
aaa
add
push
add
add
adc
add
add
inc
add
add
xor
add
push
add
add
add
ss
add
push
add
jae
add
add
add
add
pusha
jno
and
add
pop
add
add
add
inc
add
push
jbe
push
xor
adc
add
push
ja
je
add
add
add
push
add
add
pusha
add
inc
pusha
data16
inc
add
inc
add
add
add
xor
add
adc
add
add
inc
push
add
and
push
jbe
inc
add
inc
add
add
pop
add
push
pop
add
add
xor
add
arpl
inc
inc
add
add
add
add
inc
add
add
add
inc
push
ja
push
add
and
push
adc
add
add
add
add
add
add
xor
add
xor
push
add
add
daa
add
add
aaa
push
add
add
ja
and
xor
add
adc
add
add
add
add
pop
add
and
jae
add
jbe
add
add
add
add
add
pop
and
add
push
add
add
add
add
add
add
ja
and
add
add
add
push
push
inc
add
push
daa
arpl
inc
push
push
add
add
add
add
add
adc
add
add
add
add
add
add
add
add
je
add
push
add
add
and
add
add
add
add
add
inc
add
add
add
add
add
add
xor
adc
add
add
add
ss
add
adc
add
ss
add
fs
xor
and
bound
data16
add
add
add
add
add
add
pop
add
daa
bound
inc
push
xor
add
push
xor
push
add
xor
add
ja
and
add
add
add
add
arpl
add
add
jno
add
add
add
and
jbe
add
jae
es
jbe
add
pop
fs
jae
add
adc
add
add
add
adc
add
add
jbe
add
add
adc
add
add
add
xor
pop
xor
add
add
add
pusha
popa
add
arpl
add
push
inc
pop
add
add
add
je
inc
add
xor
add
add
add
xor
aaa
jo
push
add
inc
add
add
inc
add
add
jbe
add
add
push
xor
add
aaa
add
add
push
push
add
add
add
add
add
push
add
push
add
add
add
add
push
add
add
add
add
add
add
xor
push
add
xor
jno
pop
jno
add
add
and
add
add
and
push
push
arpl
add
add
add
add
add
pop
add
push
inc
add
add
jbe
push
add
add
add
inc
inc
inc
inc
and
add
ja
add
push
adc
adc
pop
add
inc
add
adc
add
push
inc
add
add
add
add
adc
add
jb
and
add
inc
inc
xor
add
add
and
add
inc
add
push
add
gs
add
ja
inc
add
add
add
add
add
add
add
es
add
pop
jo
add
add
add
and
add
adc
add
bound
add
add
jo
add
add
add
add
inc
add
inc
xor
add
add
pusha
add
pop
xor
pop
add
add
add
add
add
add
inc
add
add
add
add
add
pop
add
inc
add
add
pop
xor
add
add
add
and
add
je
add
add
add
add
add
add
inc
pusha
add
add
jno
add
push
add
add
arpl
inc
add
inc
add
inc
add
add
add
inc
add
add
add
ja
add
xor
add
add
xor
add
bound
add
add
xor
add
add
adc
xor
add
add
inc
add
add
add
add
push
adc
and
add
add
jae
jbe
add
jo
add
arpl
adc
add
add
add
add
add
add
inc
add
inc
inc
push
add
push
xor
add
add
and
add
add
add
add
add
jno
inc
push
add
xor
add
add
add
add
push
adc
add
push
add
add
jb
jbe
add
push
add
add
add
add
and
add
inc
add
add
and
add
add
add
add
add
inc
add
add
bound
popa
add
add
add
xor
add
push
push
add
add
adc
add
aaa
add
add
add
and
and
add
push
pop
bound
push
add
add
add
and
add
add
add
je
add
adc
add
add
add
push
add
add
jo
add
inc
add
ja
add
add
add
xor
add
add
inc
pusha
add
xor
xor
add
jne
jo
add
xor
add
add
add
push
adc
add
inc
add
add
push
fs
add
add
add
add
add
add
addr16
add
add
aaa
add
add
jno
add
je
push
add
xor
add
adc
add
add
add
add
aaa
add
add
add
adc
and
add
inc
add
arpl
add
adc
add
add
add
adc
push
push
add
add
add
adc
jo
push
add
push
add
xor
inc
add
bound
arpl
jae
add
add
add
add
inc
add
push
add
pop
bound
add
add
adc
push
inc
data16
push
add
adc
add
push
push
add
es
add
je
add
arpl
add
daa
je
add
add
add
add
add
fs
and
je
add
add
add
and
push
push
push
add
add
add
pop
adc
push
add
add
add
add
add
jno
ja
add
bound
and
and
push
pusha
add
push
add
add
popa
and
popa
and
add
add
adc
daa
add
add
add
xor
add
add
add
add
pop
push
ja
add
inc
add
push
addr16
je
jbe
add
add
add
add
add
aaa
add
add
add
inc
add
add
add
add
add
inc
add
inc
xor
add
add
addr16
inc
inc
add
add
add
add
bound
push
xor
pusha
add
inc
add
xor
push
add
push
add
add
add
jne
inc
adc
jne
push
push
and
xor
add
add
add
push
add
add
add
push
add
inc
inc
data16
add
add
add
xor
add
add
add
add
add
add
add
add
aaa
add
push
add
add
add
push
add
add
add
jb
add
je
add
adc
add
add
add
push
add
add
add
xor
push
bound
add
je
bound
ja
add
pop
add
and
add
add
popa
add
add
inc
add
jno
popa
add
bound
add
add
add
add
add
push
add
add
add
jbe
inc
ja
add
add
add
add
push
add
add
add
jno
add
add
add
add
push
add
jne
arpl
inc
popa
and
inc
add
jbe
add
add
add
add
add
add
push
add
add
add
add
inc
add
add
add
push
jo
add
adc
push
xor
push
add
add
add
je
add
fs
add
bound
push
add
and
add
inc
jb
add
aaa
inc
add
adc
add
and
add
add
inc
add
add
add
and
and
inc
inc
pusha
push
add
push
popa
add
adc
push
jb
data16
add
add
add
adc
add
add
add
add
and
add
add
add
add
adc
jno
add
push
jbe
push
add
add
jae
add
push
add
adc
and
data16
add
add
jb
add
adc
popa
data16
jo
jne
add
add
inc
and
xor
add
add
add
add
add
jno
pop
add
jbe
push
add
inc
add
add
add
add
add
add
add
add
add
add
push
add
add
add
add
add
add
add
jo
and
add
inc
add
inc
and
add
add
inc
add
add
add
add
add
add
add
add
push
add
add
add
pusha
jne
inc
add
add
add
push
inc
add
add
xor
inc
add
je
add
push
add
inc
jbe
daa
add
add
and
inc
push
aaa
add
imul
push
clc
lods
lcall
jg
addl
decl
dec
mov
lcall
jno
and
inc
adc
mov
fsubl
enter
jnp
pushf
fisttpl
ljmp
ljmp
call
cmpsl
cmpsl
mov
hlt
rcrl
stc
in
and
pop
movsb
jmp
inc
jecxz
cmpl
lret
pusha
scas
mov
movsb
call
lcall
or
jmp
into
insb
lock
fyl2x
int
dec
mov
call
inc
mov
decl
add
repnz
call
sti
mov
fisubs
pushl
test
incl
push
or
call
lcall
jbe
jbe
sbb
incl
ljmp
mov
pop
incb
pushl
ss
test
decl
mov
filds
jmp
fstps
push
dec
add
mov
ljmp
add
mov
mov
decl
ret
xor
cli
inc
jne
fcmovne
inc
push
scas
incl
dec
mov
decl
inc
mov
xchg
mov
pop
js
fstps
xchg
mov
fnstsw
pop
test
xor
xor
or
pushl
imul
into
mov
pop
cmp
push
sbb
ljmp
jl
mov
call
sbb
nop
insb
mov
jns
jecxz
mov
mov
sbb
cmp
call
stos
call
sarl
pop
xchg
mov
push
stos
mov
xchg
jmp
xchg
push
inc
mov
inc
mov
mov
pushl
mov
bound
cmp
pop
xor
pop
clc
lods
push
cltd
scas
incl
or
pushl
repnz
mov
mov
decl
jnp
cmp
adc
fsub
push
test
stos
add
lcall
imul
jmp
pop
cmp
int3
pop
xchg
out
jmp
int3
mov
nop
mov
mov
inc
xchg
adc
push
and
lcall
ficomps
mov
popf
sbb
mov
pushl
ds
xchg
in
rcl
gs
adc
or
cs
jmp
repnz
incl
aad
imull
pop
movb
lcall
ljmp
incl
icebp
les
mov
mov
incl
mov
or
and
fwait
lret
xchg
into
ret
mov
xlat
add
cmp
daa
add
ljmp
loop
dec
int
mov
shr
cs
call
mov
pushl
clc
rorb
call
xlat
mov
adc
loopne
popa
add
repnz
ljmp
mov
sbb
aas
adc
pop
add
fcomip
cmp
ret
lods
jo
leave
pop
mov
ljmp
jp
arpl
cs
cmp
push
sbb
adc
lcall
out
fldl
int
push
mov
pushl
daa
dec
stos
mov
in
aaa
xchg
in
inc
add
in
jno
inc
ljmp
lcall
or
call
xchg
push
pop
lret
push
cmc
inc
dec
or
int
and
ljmp
ss
or
dec
adc
ret
mov
int3
shr
jno
lcall
push
sub
call
xchg
jo
shll
cmpsl
add
loope
movb
add
jo
mov
ljmp
scas
pushl
and
decl
das
cltd
push
lcall
lea
xchg
lcall
and
lcall
decl
push
decl
call
mov
cltd
aaa
lahf
dec
push
inc
mov
ljmp
cmp
fildl
bound
fcmovbe
pop
push
mov
cld
push
in
sub
ljmp
jns
add
inc
sbb
incl
cs
mov
add
call
pushf
xchg
stos
loopne
lret
add
call
sbb
push
mov
int
xchg
dec
mov
pop
lret
push
push
jnp
sbb
fstps
add
decl
into
idivb
ljmp
pop
repz
dec
jge
cld
mov
test
ret
mov
lcall
xchg
cmp
popf
xchg
pushl
aaa
push
cmc
sub
decl
mov
repnz
decl
lret
and
sbb
iret
daa
imul
rclb
mov
jmp
test
call
mov
jns
inc
repnz
adc
ljmp
icebp
daa
xchg
lahf
mov
imul
negb
pop
aam
sub
sar
addl
jo
mov
cmp
xchg
add
ljmp
sub
rolb
lock
add
incl
je
mov
mov
loope
xchg
adc
xchg
enter
out
pop
ret
inc
cmp
dec
sti
jmp
xchg
outsb
jb
jmp
jne
pushf
dec
sub
mov
sub
fstl
mov
mov
cmp
scas
out
sub
dec
cmpl
push
nop
push
cmc
mov
sub
inc
push
cltd
insl
adc
inc
into
in
jg
bound
mov
scas
pushl
xchg
out
inc
mov
push
fcmovnu
mov
or
lcall
imul
daa
cmp
mov
ljmp
call
and
lcall
pop
shl
inc
add
cmp
ds
je
decl
sbb
inc
ret
or
pushl
decl
mov
push
ficomps
or
fcoml
pushf
pop
test
sbb
incl
call
jns
test
jbe
incl
fwait
lock
into
jne
push
xchg
inc
or
decl
fwait
sub
incl
xchg
jmp
mov
nop
jle
aad
scas
pushl
lea
push
call
shll
sbb
ljmp
fwait
repnz
lcall
cmp
pop
adcl
popl
out
pushl
push
mov
cmpsw
push
incl
add
dec
sahf
iret
pop
popa
xor
ljmp
pop
inc
pop
xlat
decl
les
jmp
jg
mov
adc
pop
sub
push
insl
repnz
jmp
into
jno
jo
and
mov
nop
sbb
mov
ljmp
nop
pusha
add
decl
push
je
push
lret
hlt
test
call
adc
pushl
int3
ljmp
lcall
mov
test
fcomp
lahf
adc
adc
js
inc
insl
rcll
cmp
out
pop
dec
js
inc
cs
inc
rclb
mov
cltd
sahf
ss
call
mov
ljmp
incl
leave
jnp
call
jmp
incl
ljmp
call
adc
decl
jbe
dec
mov
pushl
sbb
jmp
xor
loop
mov
aam
aam
sbb
in
repnz
sbb
decl
ljmp
jecxz
push
sbb
sub
call
cmp
xchg
or
inc
sub
incl
push
add
ljmp
xchg
fdivp
lcall
call
jno
dec
into
xchg
popf
sbb
incl
into
sbb
outsb
test
call
sub
subl
dec
sbb
ljmp
movsb
call
dec
iret
mov
jl
int3
adc
cmc
mov
test
ljmp
jns
sahf
adc
pop
loope
sbb
cmp
in
jmp
lcall
mov
mov
cmp
dec
pop
adc
mov
cmpsl
dec
pushf
loope
call
lret
aaa
jmp
ljmp
mov
mov
lcall
daa
adc
cmpsl
adc
xor
shll
lcall
push
add
decl
cmc
mov
adc
sbb
out
cmc
or
decl
jge
sarb
push
mov
lret
pop
mov
jl
push
dec
xor
fstpt
adc
inc
mov
call
and
pushl
xadd
mov
xor
lea
push
out
add
call
cmp
pushl
pop
push
xchg
into
cmp
lcall
leave
es
pushl
fwait
leave
out
inc
or
js
popa
dec
sbb
call
lods
ljmp
cltd
movsl
cmp
imul
and
dec
clc
icebp
cli
mov
lcall
out
push
add
fdivl
decl
lcall
loopne
adc
jmp
push
add
call
mov
or
ljmp
jb
jl
cmp
imul
popf
adc
sbb
push
leave
pop
cmp
pop
sub
jb
jmp
in
jl
js
or
lcall
push
out
lret
arpl
cmp
add
decl
push
fistpll
fdivs
add
sub
lcall
sbb
push
jg
rorl
and
cmp
cmpsl
shr
xchg
lds
out
stc
mov
in
imul
push
jmp
fdivrl
mov
lcall
incl
cmp
stos
and
lods
les
insb
enter
lcall
ret
mov
call
in
loope
stos
xchg
call
fmul
xor
cmp
or
decl
push
je
sub
fsubl
aas
jg
notb
push
pop
and
mov
cmp
or
ljmp
decl
cmp
mov
xchg
fidivrs
les
mov
mov
jmp
imul
jno
jmp
add
call
pop
mov
idivl
imul
cmpsb
call
test
incl
lcall
in
jno
loop
decl
pop
add
ljmp
xchg
mov
pop
or
dec
jp
es
ljmp
ficoml
and
rcrl
push
in
pop
loop
insb
ljmp
fcmovnb
or
das
add
jl
sbb
out
dec
jmp
hlt
or
incl
arpl
and
decl
adc
pushl
mov
aas
rcrl
cmp
jmp
push
push
sub
in
and
lcall
push
xor
cmp
pushl
pushl
icebp
jne
incl
pop
mov
sub
call
std
mov
pushl
jl
incl
ljmp
mov
je
call
mov
lcall
test
xor
sbb
adc
xor
or
mov
decl
shlb
pushl
leave
add
inc
inc
fsub
sub
xchg
insl
inc
cmp
dec
dec
mov
loope
fs
aad
hlt
daa
rolb
mov
mov
adc
in
addr16
cmpsb
jmp
incl
push
enter
mov
jge
jb
xchg
call
leave
jmp
cmp
scas
jmp
and
fidivrs
sbb
mov
sub
push
fstpt
cmp
call
inc
mov
scas
std
cmp
pushl
aas
jno
push
cmpsl
mov
insb
decb
aaa
adc
lock
lds
push
stc
nop
cmpsb
out
mov
ljmp
inc
jmp
sbb
inc
idivb
mov
daa
push
es
jmp
xchg
in
in
pop
push
mov
icebp
add
lcall
mov
jae
xor
out
sbb
jmp
je
arpl
leave
out
daa
push
fisubrl
decl
fists
adc
ljmp
dec
jge
xchg
xchg
jecxz
push
cs
jmp
mov
rolb
aas
push
cmp
cmp
idivl
fnclex
adc
fisubrs
fimull
xor
test
jmp
pop
sti
sbb
int
arpl
fisubrl
pushl
jecxz
insl
dec
rcrb
imulb
out
in
pop
aam
nop
pushf
sbb
decl
lcall
dec
pop
inc
imul
mov
data16
leave
mov
pop
and
cld
dec
aas
out
insl
xchg
inc
cmp
mov
pop
mov
jno
and
call
movsl
add
ret
pop
pop
fildll
mov
call
ljmp
mov
loope
sub
inc
xlat
sub
decl
sbb
int
jmp
stc
cmpl
jmp
ljmp
popf
mov
call
cmp
lcall
jno
sbb
cmp
mov
call
ss
dec
mov
add
cmp
std
jg
mov
incl
sub
dec
aad
cmp
mov
incl
push
sub
dec
fbstp
sub
sti
and
decl
cs
call
xchg
jns
dec
lea
pushl
ljmp
sbb
inc
jg
xchg
lds
or
ljmp
jbe
out
add
jmp
pop
add
call
mov
jl
jns
aas
push
push
imul
cmp
push
xor
scas
cmp
pushl
lcall
cmpsl
std
jmp
ljmp
add
push
dec
sbb
sub
dec
cmp
sub
jmp
cmp
push
movsb
lcall
jecxz
dec
inc
mov
decl
sti
cmp
in
orl
ljmp
jmp
test
call
dec
in
jmp
and
std
lods
cli
xchg
lea
xchg
aas
insl
mov
into
sbb
incl
cmp
into
lfs
pop
out
ss
fcomi
lcall
sbb
sbb
jmp
inc
pop
insl
and
ljmp
in
push
das
jns
rclb
fmull
movsl
xchg
decl
int
dec
imul
and
pusha
jp
loop
jae
pop
dec
out
adc
lock
sbb
inc
nopl
loop
jo
jge
mov
cmpsb
decl
pushl
fstpl
jp
jmp
add
mov
inc
add
incl
xchg
inc
scas
incl
inc
rorl
call
sbb
push
xchg
pushl
scas
lcall
adc
out
jmp
sub
out
jmp
or
icebp
mov
push
jmp
mov
push
das
nop
scas
inc
lret
clc
jmp
loopne
mov
incl
sbb
pop
pop
dec
inc
sarl
xchg
sbb
ljmp
sub
push
mov
add
lcall
sub
jmp
lcall
fcmovne
into
and
incl
jae
lret
scas
decl
pop
fs
mov
in
leave
lock
ljmp
out
jl
fnsave
jg
pushl
test
decl
cld
stos
lea
adc
sub
fildll
adc
lcall
dec
ror
movq
pop
push
arpl
xlat
cmp
fnstenv
sbb
ret
lret
fisttpl
adc
adc
jnp
faddl
pop
adc
jmp
mov
push
xor
cmpsb
incl
lcall
decl
dec
bound
sti
test
lcall
std
cmp
sti
jmp
aaa
cmc
stos
jmp
dec
dec
arpl
ret
call
pop
inc
sub
pushl
and
mov
cli
arpl
adc
popa
cmp
inc
xchg
decl
fxch
ret
pushl
sbb
mov
adc
addr16
jb
pushf
sbb
imul
subl
dec
cs
call
dec
stos
call
dec
mov
jns
lcall
ljmp
call
std
mov
loop
jb
sub
ljmp
mov
or
mov
ljmp
jmp
jmp
xor
push
mov
inc
dec
mov
mov
or
add
fsubrp
loop
and
dec
movl
mov
push
add
push
dec
or
ljmp
int
sti
adc
incl
mov
gs
mov
mov
cmp
decl
ds
mov
jo
lods
jmp
inc
jl
push
shrl
mov
jo
imul
shl
cmp
jmp
sbb
out
leave
mov
jmp
jo
stos
fdivrl
iret
and
mov
fldenv
in
loope
jl
incl
pushl
dec
or
decl
inc
cmpsl
cld
hlt
lds
jge
lods
pushl
fcomps
cmp
ljmp
popf
jg
pop
dec
out
and
call
sub
jmp
fldl
mov
pushl
fwait
jp
sub
lcall
push
repnz
sbb
mov
call
pop
dec
push
cli
in
add
aas
mov
pushf
aad
shll
sbb
jmp
out
fisttps
cwtl
outsb
shl
cmp
pop
inc
or
ljmp
call
xor
xchg
push
sbb
and
dec
push
dec
imul
cltd
sub
call
lcall
repnz
lods
lcall
hlt
cmp
fdivp
mov
rorl
dec
xchg
sti
popf
inc
xor
out
sbb
fs
test
incl
sbb
test
ljmp
mov
inc
sbb
in
xchg
add
jmp
inc
xchg
enter
ljmp
push
cmpsl
insl
inc
lcall
imul
push
push
cmp
or
mov
fstl
or
pushl
out
push
lcall
adc
sbb
stc
jns
jb
call
ljmp
nop
fcoms
push
xchg
das
leave
jecxz
cli
cmp
bound
lcall
scas
leave
sbb
pop
fildll
call
and
mov
jmp
add
call
aad
jg
in
ljmp
pushl
pop
mov
decl
in
sbb
pushf
sub
pop
test
incl
outsl
jae
ljmp
jecxz
leave
aas
iret
in
push
cld
fisubs
cmp
sub
js
decl
jmp
jle
adc
and
jns
scas
cmp
call
call
jmp
or
lcall
call
xchg
ds
sbb
jp
jns
mov
jnp
hlt
sub
inc
mov
decl
cmpsb
pushl
ljmp
daa
inc
xchg
sub
fisubl
clc
push
shrl
adc
shll
and
scas
aas
sub
std
cmp
push
incl
ljmp
push
mov
ljmp
push
jns
inc
popa
and
push
lcall
and
out
push
call
push
mov
aaa
mov
mov
dec
xchg
es
dec
inc
les
push
mov
daa
push
adc
lods
jmp
stc
mov
movsl
adc
cld
or
inc
cltd
std
mov
call
ljmp
and
cmp
jmp
rclb
stos
cmp
lcall
xlat
ret
jno
sub
jp
cmc
int
ljmp
lcall
pop
es
cmp
adc
js
out
repz
or
fcmove
jmp
cmp
or
call
rcrl
cs
jmp
xor
add
decl
call
nop
scas
push
jns,pt
out
pushl
pop
fnstenv
jmp
mov
jmp
jnp
inc
out
mov
mov
adc
xor
aam
nop
fnstsw
insl
cmp
xchg
sbb
push
xchg
lods
pop
cmp
sahf
cmc
and
call
jecxz
ljmp
jl
out
test
test
incl
lret
xor
dec
loop
pushf
xor
sub
decl
push
mov
aas
sub
rcl
xchg
add
fnstcw
and
mov
iret
jp
cmp
setg
cmpl
sub
pushl
mov
call
inc
inc
pushf
or
scas
mov
inc
inc
sbb
fmulp
jle
or
push
js
pushf
jge
mov
jmp
pop
daa
imul
pushl
mull
call
incl
sti
pop
sti
popa
adc
fisttpl
and
lock
pop
adc
lret
loop
pop
pop
test
call
mov
jmp
in
push
ljmp
add
decl
rep
mov
push
push
sub
call
lods
jp
cmp
test
mov
mov
fsubs
decl
decl
ss
mov
lcall
incl
pop
jge
mov
lret
call
ljmp
ljmp
int3
stc
xor
pop
test
add
loop
pusha
add
incl
xchg
jecxz
cmp
scas
call
push
xchg
sbb
pop
jmp
push
mov
lcall
cmp
sub
jmp
push
xor
pusha
lahf
aad
cmp
divl
and
ljmp
leave
xchg
shl
push
and
incl
invd
mov
inc
out
xor
fildll
into
and
call
mov
jns
push
mov
mulb
imul
inc
cmc
mov
jmp
and
pushl
cli
or
out
loopne
fcompl
mov
call
scas
lcall
push
test
pushl
push
push
cmp
xchg
sti
dec
mov
out
in
sbb
test
jmp
ljmp
icebp
in
repz
insb
aam
aas
inc
add
push
sub
add
cmp
fstl
cmpsl
and
push
ljmp
jb
push
call
movsb
lcall
loop
and
jmp
incl
call
cmova
mov
push
mov
ljmp
mov
int3
xchg
pop
jo
enter
xchg
popa
mov
fcompl
outsb
jb
lahf
cmpl
or
call
addl
stos
jno
inc
jno
mov
mov
xlat
add
jmp
inc
cs
decl
jnp
mov
sbb
cmp
xchg
decl
incl
dec
xor
push
cli
aam
sbb
lcall
es
call
mov
int
pop
rcll
int3
pop
call
jmp
mov
ljmp
test
or
pushl
js
dec
fstps
push
add
jbe
incl
ljmp
lcall
dec
pop
xchg
jbe
ss
nop
lds
movsl
jnp
push
incl
in
inc
nop
scas
dec
cmp
decl
shl
repz
out
scas
mov
and
jmp
decl
jmp
cmp
shlb
call
dec
xchg
mov
lcall
sti
imul
fldcw
iret
loop
decl
jns
pop
pop
mov
adc
sbb
lcall
push
sahf
jg
decl
punpcklwd
repz
add
decl
decl
xchg
jecxz
enter
call
ja
mov
cmp
mov
lcall
stos
aas
lahf
sbb
inc
clc
outsb
sub
incl
lods
xchg
pop
cmp
jmp
push
in
push
jnp
pop
cmp
cmpsb
decl
cmp
sbb
mov
call
pop
jb
mov
test
lret
jl
aaa
outsl
push
add
inc
xor
add
and
push
mov
add
lea
push
push
push
push
xchg
clc
cmp
je
ret
call
clc
or
lea
mov
shr
shr
add
push
push
push
push
call
leave
ret
ret
xchg
mov
or
xchg
shl
add
lea
sub
shr
dec
not
sub
mov
clc
je
push
pop
add
lea
clc
jmp
jmp
push
mov
sub
lea
orl
movl
push
push
push
push
clc
call
test
je
in
dec
and
push
push
push
call
mov
sub
test
jne,pn
add
call
sbb
jg
jl
push
ljmp
mov
leave
sbb
decl
clc
and
xchg
sbb
mov
into
sub
pushl
mov
ljmp
cltd
pop
icebp
out
and
insb
xor
adc
into
mov
ljmp
call
jmp
adc
aas
bound
pushl
lea
sbb
int
popf
jae
fsts
lods
mov
cmp
inc
push
sbb
cmp
dec
and
xchg
and
dec
popa
xchg
lret
jmp
aas
in
jecxz
push
dec
mov
outsl
and
cmc
loope
jle
in
sbb
push
inc
sbb
call
lods
jl
jmp
stos
decl
hlt
cld
adc
incl
in
cld
stos
pushl
in
sarb
stc
daa
jl
cmpsb
jmp
mov
pushl
decl
ljmp
movsl
cmp
incl
ljmp
xchg
call
lret
pushf
shl
cld
data16
incl
rolb
and
incl
popl
jno
decl
pop
int
adc
int
pop
shlb
jmp
inc
mov
jmp
js
scas
push
add
decl
or
ljmp
jmp
iret
cmp
fiaddl
popa
xor
dec
in
or
cmp
ljmp
insl
pop
gs
jmp
and
jmp
ret
mov
call
pop
popa
cs
dec
jp
mov
jno
xchg
aam
ljmp
scas
mov
notl
sti
or
decl
jecxz
pop
fstpt
decl
push
call
shlb
sub
jmp
jne
pushf
insl
pushf
lds
xor
xchg
xchg
or
pop
add
ljmp
xor
mov
es
decl
out
leave
in
cmpsl
add
jle
lods
pushl
dec
pop
repnz
mov
fildll
pushl
xor
cmp
push
dec
push
jae
jmp
mov
movsb
dec
mov
pushl
decl
mov
stc
push
xor
incl
pushl
pushf
xor
mull
mov
incl
imul
ljmp
call
add
mov
loopne
pop
lahf
mov
ljmp
es
incl
ret
jmp
sub
lcall
imul
dec
into
pop
movsb
pushl
cwtl
test
lcall
ss
cwtl
lcall
call
fnstenv
cmp
inc
into
xchg
xchg
je
and
decl
sarb
jmp
test
cld
fsubrs
incl
mov
inc
sub
ljmp
incl
incl
jecxz
cmc
mov
xchg
sbb
into
or
in
sti
call
fildl
decl
pusha
cmp
test
pushl
xchg
inc
jecxz
ljmp
daa
stc
xor
ds
adc
mov
incl
popf
loop
pop
adc
out
enter
decl
mov
call
dec
dec
push
sub
daa
add
decl
aas
inc
dec
ret
mov
pushl
test
call
jge
in
mov
pushl
xor
decl
pop
mov
outsb
rclb
pop
push
sbb
and
mov
xor
inc
fistps
jl
leave
insl
rorb
pushl
ljmp
in
test
lods
dec
push
jmp
decl
lcall
lea
push
jecxz
repz
dec
add
lcall
mov
cmp
lcall
adc
incl
cwtl
mov
mov
push
nop
adc
enter
incl
stc
imul
das
pushl
pop
xor
pushl
pop
psubsb
inc
lods
mov
or
decl
jmp
mov
push
es
ljmp
cmp
dec
test
movsl
cmp
pop
jle
push
xchg
dec
push
inc
sbb
jne
jp
sbb
jmp
sub
lcall
inc
in
roll
pushl
mov
dec
pop
push
jge
cmp
ja
or
pushl
mov
fildll
or
cli
push
cwtl
dec
sarb
call
shll
jne
mov
js
xchg
scas
ljmp
cmp
iret
clc
test
adc
in
and
inc
outsb
scas
ljmp
lcall
fdivrs
fcmovnbe
mov
mulb
push
loope
jns
mov
adc
inc
sub
ljmp
jns
filds
lret
pop
jno
incl
movsl
pop
nop
add
call
dec
pop
cmp
sbb
in
jns
mov
incl
cli
ljmp
and
dec
push
rcl
push
mov
call
out
stc
mov
pop
les
decl
call
nop
add
pushl
jmp
shlb
xor
sarl
dec
push
out
inc
faddl
decl
inc
ja
movb
sbb
inc
mov
out
ror
fadds
push
mov
js
jl
pop
sub
ljmp
decl
xchg
and
mov
pop
jns
or
call
inc
out
popa
mov
es
fimull
cmp
ljmp
jmp
dec
jnp
loop
shlb
push
sbb
int
push
addr16
imul
push
fidivs
or
cli
rclb
popf
imul
test
call
pushf
lods
aas
loope
test
pop
cltd
rorl
mulb
enter
mov
mov
jnp
out
leave
das
insl
sarl
mov
inc
xchg
fadd
xor
cmp
and
decl
call
pop
add
add
incl
pop
mov
fwait
jbe
and
push
ljmp
decl
mov
xor
jo
jne
mov
arpl
jmp
mov
xor
std
jb
mov
push
sti
mov
idivb
xchg
mov
lcall
pop
popa
js
jmp
pop
push
pop
and
pop
pushf
push
pushf
divb
mov
addl
loopne
sub
cmpsb
decl
ja
gs
dec
push
insb
je
sub
push
jbe
ja
pop
lcall
int3
adc
jmp
cmp
fs
fsubrl
cmp
jmp
add
and
push
outsl
add
jmp
add
xchg
repnz
and
pushl
stc
and
incl
jmp
dec
xchg
push
fwait
aam
mov
or
and
dec
test
fistpll
rcr
sub
call
fs
mov
ds
pop
or
mov
idivb
call
inc
dec
fcomps
adc
arpl
jns
mov
jnp
pusha
repnz
jb
ss
or
incl
adc
jecxz
lods
incl
outsb
test
xor
pop
mov
incl
pushl
add
jmp
sub
mov
in
in
dec
pop
cmpsb
out
inc
out
imul
jmp
mov
testl
dec
jb
dec
push
or
lcall
shlb
repz
stos
test
shl
add
inc
out
packsswb
das
std
and
jg
bound
mov
sahf
mov
incl
and
inc
push
notl
mov
jmp
gs
ret
mov
cs
in
mov
ljmp
es
lcall
aad
aad
dec
sub
out
fstpl
jg
insb
dec
test
lcall
out
or
call
sub
pop
shrl
jmp
rcll
jg
out
pop
push
dec
pushf
mov
ds
pop
mov
rorl
mov
mov
cld
xchg
in
movsb
incl
sbb
jne
lods
ljmp
jmp
mov
xchg
int
sub
pushl
fiadds
call
jmp
mov
jmp
insb
sahf
jbe
mov
cli
test
ljmp
push
je
mov
movsb
jmp
in
nop
and
jae
push
mov
ljmp
jns
xchg
lret
les
daa
xor
sbb
lds
popf
scas
into
cmc
movsl
mov
fwait
or
dec
aaa
aam
xor
lods
mov
pop
flds
in
mov
cmp
scas
les
xchg
es
pushl
loope
adc
out
or
decl
sub
jmp
mov
jg
call
fidivrl
jb
xor
inc
mov
jmp
cmp
cmp
call
push
test
call
lahf
lret
out
leave
and
incl
mov
mov
jmp
pop
jbe
push
jnp
incl
cmpsb
ljmp
stos
int3
mov
inc
cmp
pushf
cmp
jmp
ret
rcl
data16
lahf
ja
mov
loop
pusha
and
lcall
or
ljmp
cmp
in
jb
enter
inc
mov
fcompl
push
jmp
ss
sbb
inc
pop
clc
mov
inc
insb
mov
in
and
call
loope
or
pushl
push
sub
mov
xchg
test
xchg
or
fisttpl
das
push
jnp
dec
pop
cmp
incl
call
fcomip
add
adc
pop
fldt
stc
dec
iret
jmp
das
jge
lds
fistpl
roll
decl
jge
xor
out
repz
pop
sub
arpl
mov
pushf
test
jl
fwait
jle
adc
push
int3
ja
lcall
mov
xchg
call
xor
dec
jl
sub
incl
call
loope
push
test
call
push
enter
adc
decl
fptan
je
inc
cmp
loope
incl
or
mov
mov
decl
jo
out
lea
jg
cmp
enter
call
xor
lea
aam
pop
jne
pushf
loopne
jne
imul
mov
ljmp
cld
scas
test
decl
or
dec
das
sarl
test
frstor
xchg
ds
pusha
xor
sbb
xor
sub
push
cli
xchg
incb
lcall
inc
fs
fwait
cmp
cld
int3
sbb
xchg
dec
mov
out
popf
cs
lcall
lcall
and
ljmp
lcall
lret
push
ret
adc
xor
stos
adc
cltd
imul
lcall
enter
fcoms
ds
pushl
enter
adc
aas
cs
push
clc
out
jmp
incl
in
cli
sub
dec
xchg
mov
ss
shlb
and
dec
repnz
in
test
jmp
aad
push
push
push
add
pushl
jp
fcoml
sub
rcll
inc
mov
sarl
adc
jo
cmpsb
ljmp
mov
pushl
loopne
inc
push
nopl
lahf
clc
mov
dec
cmc
frstor
call
xchg
adc
jl
jl
pushl
imul
incl
adc
repz
lcall
aas
outsb
add
sbb
mov
jmp
mov
lcall
out
fnstcw
aad
cmp
inc
test
decl
jmp
jecxz
sbb
cmp
lcall
mov
incl
pop
cmp
int3
fidivl
push
out
or
jl
push
cmp
xor
scas
cmpsb
push
pop
jge
adc
imul
jne
xor
leave
je
xchg
pop
fists
xor
fcompl
addr16
mov
cmp
jmp
sbb
xor
push
lock
mov
incl
cmp
cmp
lcall
xchg
push
stos
js
cmp
mov
out
lds
mov
scas
movsl
cmp
call
test
test
cs
cmp
sub
call
inc
dec
push
cmpsl
adc
xor
or
jmp
adc
jno
jnp
pushl
jmp
mov
ret
adc
push
insb
arpl
jg
mov
ljmp
decl
mov
hlt
sub
lcall
jbe
fstpl
call
inc
lods
fs
mov
push
and
jg
loope
push
incl
in
mov
popa
notb
adc
and
sbb
mov
testb
iret
pop
mov
aas
dec
imul
or
decl
es
call
testl
jmp
pushl
icebp
es
call
jno
pushf
gs
cmp
xlat
cmp
jmp
fiadds
ljmp
inc
push
adc
sbb
adcl
and
lcall
pushl
or
popf
pusha
imul
xor
push
ret
xchg
mov
fcompl
ljmp
stc
scas
sbb
call
xor
mov
mov
ljmp
xor
ret
ja
fcmovnbe
pop
jmp
mov
dec
popa
notb
clc
nop
nop
nop
nop
jae
in
add
add
push
frstor
call
call
clc
nop
nop
nop
nop
jae
add
dec
jno
add
mov
call
clc
nop
nop
nop
nop
jae
hlt
add
ss
ss
scas
mov
clc
nop
nop
nop
nop
jae
sbb
add
sbb
mov
xchg
ret
add
dec
xchg
popf
push
cmp
out
push
clc
nop
nop
nop
nop
jae
add
notl
addb
push
jnp
lock
nop
nop
nop
nop
jae
sbb
add
add
ret
push
mov
xchg
ret
add
mov
ss
add
add
add
imul
clc
jae
push
mov
xchg
ret
add
int
sbb
add
addr16
dec
fsts
nop
nop
nop
nop
jae
add
dec
add
js
mov
nop
push
mov
leave
nop
jmp
mov
add
sbb
xor
fld1
clc
nop
nop
nop
nop
jae
add
add
hlt
add
add
add
clc
nop
nop
nop
nop
jae
sub
ret
add
movsl
rolb
xlat
mov
push
mov
xchg
ret
bound
add
add
add
add
and
inc
xchg
inc
add
dec
add
add
popa
sub
add
into
ret
push
mov
xchg
ret
push
add
add
dec
add
add
test
push
mov
leave
nop
jmp
jo
mov
cmp
xchg
add
mov
jo
add
ret
add
add
sbb
push
js
pop
push
clc
nop
nop
nop
nop
jae
cmp
push
add
add
sar
add
clc
nop
nop
nop
nop
jae
add
sbb
add
sub
add
sub
pushl
jne
push
mov
xchg
ret
add
add
push
add
bound
xchg
fwait
sub
mov
xchg
ret
add
int
popa
testl
mov
pop
clc
nop
nop
nop
nop
jae
add
add
dec
add
or
sub
xor
or
ret
imul
add
add
lock
jmp
inc
loopne
movsb
jmp
hlt
add
rcrb
add
inc
divl
add
add
lcall
call
cltd
add
push
mov
xchg
ret
add
jns
ss
add
adc
add
clc
nop
nop
nop
nop
jae
add
add
lods
push
mov
add
jnp
add
iret
add
rcr
add
add
test
adc
dec
clc
nop
nop
nop
nop
jae
or
in
sub
ret
add
add
add
xchg
mov
push
mov
xchg
ret
ljmp
movsl
add
nop
nop
nop
nop
jae
mov
add
dec
imul
pop
push
mov
xchg
ret
add
add
cmp
repz
mov
test
nop
nop
nop
nop
jae
mov
jns
add
repz
dec
ja
nop
nop
jae
push
add
sbb
repz
ljmp
lret
push
mov
xchg
ret
add
jo
add
add
leave
push
push
mov
xchg
ret
add
add
add
js
lcall
sub
incl
pushl
clc
nop
nop
nop
nop
jae
add
add
movsl
add
adc
loope
test
or
add
nop
nop
nop
nop
jae
add
mov
jo
add
nop
nop
jae
add
xchg
ret
add
fwait
xchg
add
cmp
push
inc
add
ret
or
mov
ss
add
pop
mov
clc
nop
nop
nop
nop
jae
ss
cmp
add
sbb
je
ljmp
pop
push
mov
xchg
ret
mov
mov
fwait
movb
pop
ret
nop
push
mov
leave
nop
jmp
mov
add
bound
add
push
mov
xchg
ret
add
cmc
cmc
add
int
add
add
or
jg
add
jge
add
or
add
add
add
mov
clc
nop
nop
nop
nop
jae
cmc
push
int
ss
sbb
push
mov
push
add
add
sub
add
fldl
test
push
jns
addr16
clc
nop
nop
nop
nop
jae
repz
rolb
fwait
or
addr16
nop
push
mov
leave
nop
jmp
mov
add
inc
push
push
mov
xchg
ret
add
mov
or
sub
or
mov
push
add
nop
push
mov
leave
nop
jmp
cmp
push
add
add
push
outsb
roll
clc
nop
nop
nop
nop
jae
add
add
xchg
add
inc
inc
add
imull
xchg
xchg
ret
push
sub
sbb
add
stc
add
clc
nop
nop
nop
nop
jae
imul
addb
hlt
popa
add
add
pop
clc
nop
nop
nop
nop
jae
dec
cmp
mov
add
ret
ret
add
nop
push
mov
leave
nop
jmp
add
orb
add
dec
fwait
mov
nop
push
mov
leave
nop
jmp
add
add
add
pop
push
mov
xchg
ret
rolb
inc
add
bound
hlt
jecxz
out
clc
nop
nop
nop
nop
jae
ss
ljmp
add
push
mov
xchg
ret
add
sbb
add
in
add
add
xchg
xchg
push
mov
xchg
ret
rcrb
int
add
addr16
add
add
nop
nop
jae
ss
add
add
add
add
incl
jp
inc
add
push
sbb
add
sbb
mov
clc
xor
xor
nop
nop
jae
add
jno
dec
push
or
mov
mov
nop
nop
jae
cmc
add
hlt
inc
ss
int
dec
jns
ljmp
mov
xchg
ret
stc
sub
in
add
repz
mov
inc
cmp
nop
nop
nop
nop
jae
add
ljmp
sub
mov
xchg
ret
add
dec
js
mov
cmp
mov
or
out
jmp
add
add
add
add
js
add
cmp
add
push
clc
nop
nop
nop
nop
jae
add
add
sub
add
rolb
add
nop
nop
nop
jae
frstor
int
add
popf
cmc
push
clc
nop
nop
nop
nop
jae
mov
add
add
add
jmp
jmp
push
add
add
add
dec
shlb
cmp
fwait
add
ret
push
mov
add
nop
nop
nop
nop
jae
es
add
or
mov
clc
nop
nop
nop
nop
jae
add
stc
sub
movsl
cld
decl
mov
add
nop
nop
nop
nop
jae
add
js
mov
addr16
add
cs
dec
push
push
mov
xchg
ret
add
cmp
sub
add
pop
call
clc
nop
nop
nop
nop
jae
hlt
add
shrb
push
dec
fwait
clc
nop
nop
nop
nop
jae
push
mov
or
add
rorb
test
cmp
add
nop
jmp
sbb
dec
fldl
outsl
mov
push
mov
xchg
ret
fwait
add
addr16
add
fisttpll
add
fsts
nop
nop
nop
nop
jae
dec
add
add
pushf
repz
ds
xor
clc
nop
nop
nop
nop
jae
push
add
add
imul
lds
clc
nop
nop
nop
nop
jae
add
jge
jo
popf
imul
jae
add
rolb
movsl
testl
add
sub
clc
nop
nop
nop
nop
jae
mov
mov
imul
push
cmp
decl
mov
xchg
ret
ret
cmc
dec
add
add
movb
add
lahf
push
mov
cmp
add
mov
xor
mov
add
xchg
or
enter
push
mov
xchg
ret
add
add
dec
rcrb
add
jns
sti
push
push
mov
xchg
ret
cmp
add
add
cmp
add
clc
nop
nop
nop
nop
jae
sub
es
mov
nop
push
mov
leave
nop
jmp
cmp
add
add
sahf
add
nop
push
mov
leave
nop
jmp
push
add
add
or
inc
push
mov
clc
nop
nop
nop
nop
jae
sub
repz
sbb
sub
push
mov
sub
add
add
sbb
in
jp
add
mov
lods
add
clc
nop
nop
nop
nop
jae
dec
add
add
add
add
ljmp
ljmp
decl
je
clc
nop
nop
nop
nop
jae
jno
sub
rclb
mov
add
push
add
movsl
add
shlb
jge
imul
and
sub
dec
add
add
add
add
add
ret
clc
nop
nop
nop
nop
jae
push
fstpl
in
rcrb
jge
sub
pop
inc
add
imul
add
repz
add
test
xchg
push
mov
jb
dec
or
add
add
ret
add
xchg
cmp
and
add
add
jmp
nop
push
mov
leave
nop
jmp
add
push
add
add
add
push
dec
add
shr
clc
nop
nop
nop
nop
jae
add
add
add
ss
cmpsb
decl
push
mov
shlb
clc
insb
jge
xchg
outsb
push
lret
sbb
mov
nop
nop
nop
jae
add
add
ljmp
cmp
jb
clc
nop
nop
nop
nop
jae
add
mov
ss
lods
jmp
xorl
jp
add
ss
mov
add
pushf
add
fidivrl
mov
clc
nop
nop
nop
nop
jae
in
repz
in
sbb
add
jo
ret
stos
jmp
ljmp
add
mov
adc
testb
add
jne
das
add
popa
adc
nop
nop
jae
add
repz
es
add
mov
mov
leave
nop
jmp
movsl
push
add
add
add
ljmp
test
nop
nop
nop
jae
jge
add
sbb
fdivrs
push
mov
xchg
ret
add
ret
ret
sbbb
pop
nop
push
mov
leave
nop
jmp
add
ret
add
sub
mov
fisttpl
nop
nop
jae
add
add
add
mull
add
fwait
clc
nop
nop
nop
nop
jae
dec
sbb
add
ljmp
push
mov
xchg
ret
add
ss
ret
es
mov
mov
sbb
je
clc
nop
nop
nop
nop
jae
add
ret
ss
dec
mov
nop
push
mov
leave
nop
jmp
cmc
push
add
add
cmp
and
nop
nop
nop
jae
mov
sbb
mov
mov
add
clc
nop
nop
nop
nop
jae
add
dec
add
cmp
jno
and
fld1
clc
nop
nop
nop
nop
jae
add
fwait
add
or
add
addr16
clc
nop
nop
nop
nop
jae
repz
es
rorb
mov
add
nop
nop
jae
sbb
dec
add
popa
sbb
addb
into
fmull
je
clc
nop
nop
nop
nop
jae
dec
add
fwait
add
leave
push
push
mov
xchg
ret
or
ret
dec
mov
fcomps
push
mov
xchg
ret
add
stc
add
cmc
movb
add
js
sub
nop
nop
jae
mov
popa
bound
add
add
xor
push
mov
xchg
ret
add
fwait
add
add
es
add
clc
nop
nop
nop
nop
jae
add
add
pushf
fst
addb
jno
mov
push
mov
xchg
ret
ret
mov
sbb
dec
fwait
dec
xchg
add
cmp
rcrb
mov
clc
nop
nop
nop
nop
jae
dec
add
ret
jo
add
call
enter
inc
adc
nop
nop
nop
nop
jae
popa
add
cmp
or
mov
je
nop
push
mov
leave
nop
jmp
add
add
dec
js
push
nop
push
mov
leave
nop
jmp
add
mov
add
add
add
decl
push
mov
add
roll
add
push
dec
aas
repnz
cmpsb
push
into
daa
add
subl
clc
nop
nop
nop
nop
jae
int
push
rolb
add
sbb
mov
xchg
ret
popf
add
ret
dec
push
sbb
popf
cmc
in
push
mov
jl
add
fs
mov
add
leave
add
add
add
nop
nop
jae
add
ret
add
dec
add
add
xor
jmp
nop
nop
jae
add
mov
add
add
add
add
jp
decl
sbb
nop
nop
nop
nop
jae
sub
add
add
popa
bound
add
pushf
mov
rcrb
add
es
add
pop
imul
clc
nop
nop
nop
nop
jae
add
jge
imul
add
lcall
pop
jnp
leave
nop
push
mov
leave
nop
jmp
add
add
ljmp
fmuls
inc
clc
nop
nop
nop
nop
jae
push
add
rolb
add
movsl
int
int3
sub
in
leave
nop
jmp
add
add
add
ret
jno
add
cmp
dec
mov
clc
nop
nop
nop
nop
jae
cmp
sub
add
add
push
clc
nop
nop
nop
nop
jae
dec
fldl
add
add
add
fwait
xchg
nop
push
mov
leave
nop
jmp
dec
movsl
add
add
or
fwait
add
pushl
jae
pop
adc
nop
nop
nop
nop
jae
add
push
or
ror
sub
lcall
clc
add
sub
add
popa
sbb
add
popa
js
fld1
clc
nop
nop
nop
nop
jae
add
add
add
add
or
jecxz
clc
nop
nop
nop
nop
jae
stc
add
add
dec
mov
bound
nop
push
mov
leave
nop
jmp
add
add
es
xchg
movsl
js
cmpsb
cmp
fistpl
nop
push
mov
leave
nop
jmp
add
add
add
add
hlt
push
leave
inc
push
mov
xchg
ret
js
inc
ss
shl
dec
fwait
lock
mov
xchg
shl
nop
push
mov
leave
nop
jmp
mov
add
add
push
test
nop
inc
add
cmc
es
ret
push
add
fistpl
push
mov
xchg
ret
add
cmp
dec
dec
fldl
jno
hlt
cmovns
pop
pusha
inc
add
jns
inc
mov
inc
jge
add
mov
adc
call
inc
add
fwait
add
add
int
add
add
cwtl
pop
fwait
clc
nop
nop
nop
nop
jae
es
ret
in
add
ret
lahf
and
push
mov
xchg
ret
add
addr16
add
add
add
clc
nop
nop
nop
nop
jae
jge
add
add
add
inc
mov
clc
nop
nop
nop
nop
jae
add
add
jge
cmp
add
nop
jmp
stc
add
dec
add
mov
pop
push
mov
xchg
ret
popa
add
push
add
in
add
add
mov
into
xchg
xor
nop
push
mov
leave
nop
jmp
add
ret
add
movsl
add
push
mov
xchg
ret
add
cmc
sub
dec
dec
orb
jmp
clc
nop
nop
nop
nop
jae
add
push
lods
shr
clc
nop
nop
nop
nop
jae
add
rcrb
dec
sub
out
adc
mov
clc
nop
nop
nop
nop
jae
popa
imul
add
cmc
push
add
push
push
push
mov
xchg
ret
add
popa
jno
ret
add
push
push
mov
xchg
ret
add
popa
mov
add
clc
nop
nop
nop
nop
jae
add
add
add
dec
add
negl
clc
nop
nop
nop
nop
jae
add
fisttpll
stc
jge
or
add
clc
nop
nop
nop
nop
jae
repz
or
push
cld
fistl
mov
xchg
ret
add
addb
add
add
sbb
or
nop
nop
nop
nop
jae
cmp
add
dec
in
add
sub
sbb
pop
clc
nop
nop
nop
nop
jae
add
add
add
popf
repz
ljmp
nop
push
mov
leave
nop
jmp
add
imul
sbb
add
cmpsb
jmp
add
push
mov
xchg
ret
hlt
mov
add
in
or
add
add
sbb
jno
js
add
push
xchg
add
add
add
addl
nop
nop
jae
in
add
jge
add
ret
add
call
add
push
mov
xchg
ret
add
mov
add
icebp
clc
nop
nop
nop
nop
jae
stc
jns
in
add
dec
negl
add
push
clc
nop
nop
nop
nop
jae
add
inc
mov
or
xorb
clc
nop
nop
nop
nop
jae
sbb
add
je
clc
nop
nop
nop
nop
jae
add
add
movsl
mov
push
add
nop
push
mov
leave
nop
jmp
xchg
jno
popf
dec
fstl
jo
rcrb
adc
stos
call
ja
movb
mov
xchg
ret
es
add
bound
popa
pushf
jge
add
mov
clc
nop
nop
nop
nop
jae
pushf
ljmp
shlb
sbb
ljmp
dec
neg
add
imul
jno
add
add
add
adc
pop
shlb
push
mov
xor
add
loope
out
out
out
add
add
add
nop
push
mov
leave
nop
jmp
add
negl
mov
mov
xchg
ret
add
mov
add
add
sbb
fistpl
push
mov
xchg
ret
ljmp
add
add
or
mov
push
mov
xchg
ret
imull
jno
inc
add
in
fucomp
call
clc
nop
nop
nop
nop
jae
add
add
xor
adc
mov
clc
nop
nop
nop
nop
jae
repz
add
repz
addb
or
jmp
cmp
nop
nop
nop
jae
jo
add
jns
hlt
pop
xor
and
clc
nop
nop
nop
nop
jae
add
dec
add
imul
or
add
nop
push
mov
leave
nop
jmp
negl
add
jo
add
clc
nop
nop
nop
nop
jae
add
add
add
nop
nop
nop
nop
jae
es
add
add
movsl
popa
clc
nop
nop
nop
nop
jae
add
add
mov
add
add
add
in
add
clc
nop
nop
nop
nop
jae
add
add
jns
pushl
inc
outsl
inc
add
mov
add
add
repz
and
clc
nop
nop
nop
nop
jae
dec
int
testl
sbb
mov
clc
nop
nop
nop
nop
jae
repz
mov
bound
frstor
pusha
clc
nop
nop
nop
nop
jae
bound
add
pushf
dec
dec
in
dec
add
clc
clc
nop
nop
nop
nop
jae
add
xchg
popf
inc
add
popa
add
cmp
nop
nop
nop
jae
add
ljmp
inc
xchg
call
nop
push
mov
leave
nop
jmp
add
ret
dec
or
nop
nop
nop
jae
add
rolb
pushf
ret
inc
mov
clc
nop
nop
nop
nop
jae
imul
add
add
mov
add
nop
nop
nop
nop
jae
inc
testl
add
mov
xchg
ret
addb
ret
add
add
add
ret
xchg
push
mov
push
mov
xchg
ret
add
push
movb
add
add
ret
push
mov
xchg
ret
sbb
int
dec
rolb
or
mov
repz
sbb
pop
call
nop
jmp
xchg
add
sub
movsl
fnsave
call
clc
nop
nop
nop
nop
jae
add
ret
jo
sbb
push
mov
xchg
ret
xchg
add
add
push
add
add
add
push
push
mov
xchg
ret
add
repz
stc
add
shlb
notl
push
mov
xchg
ret
add
add
mov
rolb
inc
dec
add
nop
push
mov
leave
nop
jmp
add
ret
sbb
sbb
add
in
push
mov
xchg
ret
ss
mov
ljmp
add
fistpl
push
mov
xchg
ret
dec
add
movb
add
dec
cmpb
cmpl
nop
push
mov
leave
nop
jmp
cmc
fldl
mov
mov
call
nop
jmp
add
add
jno
push
add
call
pop
clc
nop
nop
nop
nop
jae
cmp
repz
jo
popa
add
addr16
push
mov
xchg
ret
dec
add
addr16
rolb
sub
ss
cltd
pop
push
mov
xchg
ret
js
sbb
add
add
ret
add
add
clc
nop
nop
nop
nop
jae
jns
fwait
add
mov
add
sbb
xor
adc
nop
jae
add
in
jno
movsl
add
into
xlat
inc
clc
nop
nop
nop
nop
jae
add
popf
push
add
dec
or
add
xchg
mov
nop
push
mov
leave
nop
jmp
add
dec
bound
add
js
mov
jmp
add
sbb
add
sub
add
repz
add
sbb
and
nop
nop
nop
nop
jae
add
fnsave
repz
sub
mov
xchg
ret
add
add
inc
jno
fwait
mov
clc
nop
nop
nop
nop
jae
add
add
dec
add
add
aad
inc
adc
nop
nop
nop
nop
jae
add
cmp
add
add
shlb
nop
nop
nop
jae
add
add
add
ljmp
fnsave
clc
nop
nop
nop
nop
jae
add
add
cmp
add
jo
movswl
clc
nop
nop
nop
nop
jae
mov
popa
add
add
rep
sbb
movsb
clc
nop
nop
nop
nop
jae
cmp
add
fwait
add
add
add
je
clc
nop
nop
nop
nop
jae
addr16
dec
add
clc
nop
nop
nop
nop
jae
add
add
cmc
add
int
addr16
popa
clc
nop
nop
nop
nop
jae
rclb
popa
mov
add
lcall
push
mov
xchg
ret
mov
or
sbb
clc
nop
nop
nop
nop
jae
push
addr16
mov
push
add
inc
add
in
out
xchg
push
mov
xchg
ret
cmp
ret
addb
add
cmp
push
cmp
clc
nop
nop
nop
nop
jae
dec
add
add
mov
push
lcall
nop
nop
nop
jae
add
ljmp
add
push
clc
nop
nop
nop
nop
jae
xchg
movsl
add
add
sub
dec
or
add
call
mov
clc
nop
nop
nop
nop
jae
sbb
stc
add
movsl
add
and
mov
xchg
ret
add
sub
add
je
sub
cmp
nop
nop
nop
nop
jae
xchg
or
add
mov
adcb
add
xlat
call
clc
nop
nop
nop
nop
jae
add
mov
hlt
add
rorb
push
mov
xchg
ret
mov
mov
add
movb
ret
test
in
leave
nop
jmp
or
add
add
add
addr16
push
mov
xchg
ret
jge
js
mov
add
add
add
nop
nop
nop
nop
jae
dec
add
add
add
add
fistpl
push
mov
xchg
ret
dec
hlt
add
add
add
xchg
inc
add
bound
add
or
inc
je
cld
clc
nop
nop
nop
nop
jae
or
rolb
popa
cmp
xchg
popa
js
gs
clc
nop
nop
nop
nop
jae
sub
add
jo
dec
or
dec
mov
push
mov
leave
nop
jmp
mov
rolb
add
add
add
decb
mov
arpl
add
test
or
add
add
mov
call
in
movsb
add
roll
je
add
les
sbb
and
aam
and
clc
nop
nop
nop
nop
jae
push
add
popa
add
and
push
mov
leave
nop
jmp
add
add
add
sbb
mov
clc
nop
nop
nop
nop
jae
add
add
add
int
push
addr16
clc
nop
nop
nop
nop
jae
add
add
add
mov
decl
call
test
sbb
clc
nop
nop
nop
nop
jae
pushf
add
add
add
sub
ret
mov
clc
nop
nop
nop
nop
jae
ljmp
mov
movsl
jg
add
add
leave
nop
jmp
fnsave
in
ljmp
cmp
nop
push
mov
leave
nop
jmp
addb
addb
dec
sbb
add
dec
dec
adc
nop
nop
nop
nop
jae
add
ljmp
add
mov
clc
nop
nop
nop
nop
jae
in
add
add
add
add
push
jae
clc
nop
nop
nop
nop
jae
add
add
popa
movb
add
push
mov
xchg
ret
jno
mov
sub
add
dec
add
ss
cmpw
nop
push
mov
leave
nop
jmp
add
sbb
add
mov
jp
sub
clc
nop
nop
nop
nop
jae
add
mov
add
cmp
movsl
add
inc
clc
nop
nop
nop
nop
jae
ret
mov
ljmp
loope
inc
push
mov
xchg
ret
add
add
add
add
jge
test
out
in
jge
push
mov
xchg
ret
add
mov
sbb
in
add
add
push
mov
nop
nop
nop
nop
jae
popf
mov
ret
js
and
nop
nop
nop
nop
jae
add
add
dec
or
push
add
rol
add
push
mov
xchg
ret
mov
add
add
ret
mov
in
sbb
js
add
add
bound
add
add
sbb
add
nop
nop
nop
nop
jae
add
sub
add
add
jne
push
mov
xchg
ret
add
add
ljmp
inc
push
clc
nop
nop
nop
nop
jae
add
fwait
add
popa
mov
mov
leave
nop
jmp
cmp
popa
fucomp
int
add
in
incl
addb
sub
sub
add
stc
cmp
imul
xor
clc
nop
nop
nop
nop
jae
add
in
jge
add
add
lcall
cs
nop
push
mov
leave
nop
jmp
add
add
add
int
lea
push
mov
xchg
ret
add
add
cmp
mov
fld1
clc
nop
nop
nop
nop
jae
add
dec
add
add
icebp
call
clc
nop
nop
nop
nop
jae
repz
add
or
pushl
xchg
push
mov
xchg
ret
add
add
dec
fwait
cmp
int
negl
or
inc
add
popa
cmc
xchg
dec
cmc
add
fistpl
mov
xchg
ret
ljmp
add
mov
add
xor
ret
mov
push
mov
xchg
ret
ret
dec
ljmp
add
inc
clc
nop
nop
nop
nop
jae
push
add
add
sbb
add
mov
or
incl
call
xor
clc
nop
nop
nop
nop
jae
jge
add
add
add
mov
clc
nop
nop
nop
nop
jae
add
fldl
ss
add
mov
nop
nop
nop
nop
jae
add
sbb
sub
push
aam
inc
je
clc
nop
nop
nop
nop
jae
dec
add
add
sbb
xchg
push
clc
nop
nop
nop
nop
jae
dec
dec
stc
add
add
add
mov
add
push
mov
xchg
ret
dec
dec
add
sbb
sbbb
push
clc
nop
nop
nop
nop
jae
add
add
repz
add
add
add
nop
nop
jae
dec
jge
repz
mov
push
nop
push
mov
leave
nop
jmp
add
inc
dec
fwait
add
add
dec
jo
test
nop
push
mov
leave
nop
jmp
add
ret
add
add
lods
push
mov
xchg
ret
add
js
dec
add
add
in
adc
clc
nop
nop
nop
nop
jae
pushf
ret
ljmp
dec
add
mov
nop
nop
nop
jae
mov
dec
add
sbb
mov
sar
nop
nop
nop
jae
dec
ret
add
cmp
jno
in
add
add
clc
nop
nop
nop
nop
jae
add
add
add
add
or
cmp
nop
nop
jae
add
add
add
push
add
add
jle
mov
nop
push
mov
leave
nop
jmp
add
sbb
imul
add
mov
clc
nop
nop
nop
nop
jae
sub
or
stc
mov
clc
nop
nop
nop
nop
jae
add
add
add
add
adc
call
leave
nop
jmp
ret
sbb
jns
add
add
movsl
adc
test
in
clc
nop
nop
nop
nop
jae
add
popf
add
add
dec
sub
nop
nop
nop
nop
jae
movb
add
add
inc
and
push
mov
leave
nop
jmp
int
in
fwait
sarb
add
out
testl
nop
nop
nop
nop
jae
sub
or
add
ljmp
mov
clc
nop
nop
nop
nop
jae
or
add
scas
push
clc
nop
nop
nop
nop
jae
add
rorb
add
add
push
clc
nop
nop
nop
nop
jae
ss
mov
cmc
mov
add
add
nop
nop
jae
ret
testl
push
sub
add
fwait
mov
clc
nop
nop
nop
nop
jae
cmc
add
add
int3
add
clc
nop
nop
nop
nop
jae
inc
add
add
sub
clc
nop
nop
nop
nop
jae
add
mov
loope
dec
cmp
push
mov
leave
nop
jmp
add
add
add
add
sub
call
mov
ljmp
movb
jno
add
add
add
addb
push
push
mov
xchg
ret
inc
add
add
jo
add
sub
call
jge
clc
nop
nop
nop
nop
jae
add
add
stc
add
nop
nop
nop
jae
js
dec
ss
push
cmc
add
add
cmp
decl
push
mov
add
movsl
inc
pop
rclb
add
addb
add
add
lods
add
mov
nop
push
mov
leave
nop
jmp
add
sub
add
push
hlt
add
addl
cmpl
add
dec
inc
call
nop
nop
jae
hlt
mov
add
xchg
mov
xor
scas
pop
clc
nop
nop
nop
nop
jae
jno
add
mov
push
ss
repz
dec
pop
push
mov
xchg
ret
fldl
sbb
add
and
jmp
xbegin
jae
add
add
add
movb
or
mov
leave
nop
jmp
mov
add
add
add
repnz
sbb
clc
nop
nop
nop
nop
jae
add
add
stc
repz
push
mov
xchg
ret
add
dec
inc
int
add
jns
add
dec
dec
mov
clc
nop
nop
nop
nop
jae
add
add
add
repz
or
pushl
jbe
clc
nop
nop
nop
nop
jae
push
add
hlt
push
movsl
add
test
in
call
nop
jmp
addb
rolb
add
movsb
jmp
push
mov
leave
nop
jmp
dec
add
add
inc
add
add
pop
push
mov
xchg
ret
add
add
jge
add
cmp
push
clc
nop
nop
nop
nop
jae
inc
cmp
mov
ret
add
clc
shlb
cmp
mov
xchg
ret
mov
mov
jns
add
clc
nop
nop
nop
nop
jae
add
dec
dec
mov
jge
dec
sar
loopne
mov
xchg
ret
ret
repz
add
add
add
loop
enter
incl
xor
nop
nop
nop
nop
jae
add
in
add
add
sub
pop
mov
clc
nop
nop
nop
nop
jae
fldl
add
cmp
repz
pop
pop
clc
nop
nop
nop
nop
jae
dec
cmp
in
dec
dec
add
jo
mov
mov
leave
nop
jmp
sbb
imul
rolb
add
add
out
push
mov
xchg
ret
movsl
add
add
add
popf
popf
add
xor
mov
xchg
ret
mov
mov
add
or
dec
cltd
add
insl
and
icebp
inc
mov
add
add
nop
push
mov
leave
nop
jmp
add
add
mov
add
jnp
clc
nop
nop
nop
nop
jae
mov
movb
sbb
add
mov
sub
nop
nop
nop
nop
jae
add
cmp
push
fistpl
clc
nop
nop
nop
nop
jae
add
sbb
add
nop
nop
nop
jae
hlt
js
add
add
add
sbb
cmp
nop
jmp
jns
repz
add
inc
cmpl
nop
push
mov
leave
nop
jmp
jge
add
add
add
clc
nop
nop
nop
nop
jae
popa
or
js
add
jg
clc
nop
nop
nop
nop
jae
add
add
popf
ret
push
add
push
nop
push
mov
leave
nop
jmp
add
notl
jns
add
int
add
xchg
cmp
nop
push
mov
leave
nop
jmp
jo
popf
mov
jo
ret
mov
jne
clc
nop
nop
nop
nop
jae
mov
add
mov
pop
cmp
nop
nop
nop
nop
jae
add
repz
dec
add
rolb
sbb
nop
nop
jae
add
add
pushf
jge
xchg
js
sub
add
clc
nop
nop
nop
nop
jae
add
add
add
add
testl
hlt
call
nop
jmp
add
dec
add
add
bound
push
mov
adc
imul
imul
fldenv
lods
push
mov
xchg
ret
add
fwait
fwait
xchg
add
push
add
scas
jmp
push
inc
add
ss
add
rolb
add
xor
push
mov
xchg
ret
add
add
add
testl
nop
nop
nop
jae
repz
dec
dec
mov
fwait
pushf
add
cmp
call
xor
push
mov
xchg
ret
add
add
add
add
sub
in
xor
movsl
add
add
and
xor
imul
add
movsb
add
mov
incl
add
clc
nop
nop
nop
nop
jae
js
js
add
jno
add
js
or
add
clc
nop
nop
nop
nop
jae
mov
hlt
push
mov
clc
nop
nop
nop
nop
jae
in
fwait
testl
add
mov
lods
cmc
add
roll
add
add
test
push
add
nop
nop
nop
jae
push
add
add
sbbb
add
add
cmp
push
add
add
add
incl
nop
nop
nop
nop
jae
mov
bound
mov
imul
decl
push
mov
push
sarb
add
mov
xchg
add
add
xor
sarb
push
mov
leave
nop
jmp
jns
add
es
popa
add
add
nop
nop
nop
nop
jae
sub
push
add
int
add
testl
jmp
stc
add
ljmp
jg
clc
nop
nop
nop
nop
jae
sub
addr16
dec
add
pop
clc
nop
nop
nop
nop
jae
add
add
add
cmc
add
adc
nop
jmp
add
add
add
ljmp
push
mov
leave
nop
jmp
dec
mov
add
add
add
add
mov
inc
and
push
mov
leave
nop
jmp
popa
add
ret
popa
mov
add
push
clc
nop
nop
nop
nop
jae
add
sarb
add
pop
mov
nop
push
mov
leave
nop
jmp
add
add
cmp
push
jmp
clc
nop
nop
nop
nop
jae
add
cmp
xor
in
leave
nop
jmp
add
or
add
inc
xor
clc
nop
nop
nop
nop
jae
add
add
add
rolb
lock
aas
fistpl
clc
nop
nop
nop
nop
jae
jns
int
jno
pushf
rorb
aaa
jl
clc
nop
nop
nop
nop
jae
add
add
imull
out
add
call
add
nop
nop
nop
nop
jae
add
dec
add
add
add
jmp
mov
push
mov
xchg
ret
add
pushf
add
add
add
ret
xchg
ss
std
add
add
nop
nop
nop
nop
jae
add
js
sbb
dec
push
mov
and
fcomps
add
add
add
push
mov
xchg
ret
sbb
add
imul
add
ret
mov
clc
nop
nop
nop
nop
jae
sbb
dec
dec
push
add
push
add
leave
or
clc
nop
nop
nop
nop
jae
add
add
add
call
clc
nop
nop
nop
nop
jae
shl
testl
inc
or
jns
add
rolb
int
in
add
imul
testl
or
add
popa
or
add
nop
pop
pop
fistpl
clc
nop
nop
nop
nop
jae
repz
add
add
add
dec
cwtl
and
dec
int3
pop
add
clc
nop
nop
nop
nop
jae
fstpl
rol
add
sbb
add
jge
clc
nop
nop
nop
nop
jae
add
add
js
xchg
add
push
arpl
call
nop
jae
sbb
add
inc
ret
lock
call
xchg
push
mov
leave
nop
jmp
add
xchg
call
pusha
clc
nop
nop
nop
nop
jae
add
dec
add
add
rolb
add
popa
clc
nop
nop
nop
nop
jae
add
add
popa
mov
in
sbb
or
fistl
nop
nop
nop
nop
jae
shrb
add
add
pop
mov
nop
push
mov
leave
nop
jmp
ss
ljmp
addr16
ret
mov
clc
nop
nop
nop
nop
jae
add
push
int
movsl
add
movb
mov
xchg
ret
add
popa
ss
ret
add
push
xchg
pop
add
clc
nop
nop
nop
nop
jae
add
int
dec
add
popa
cmp
xchg
out
inc
clc
nop
nop
nop
nop
jae
dec
popa
add
sbb
add
incl
jmp
clc
nop
nop
nop
nop
jae
ss
mov
add
add
sbb
clc
nop
nop
nop
nop
jae
jo
ret
add
sub
mov
sub
pushl
push
push
mov
xchg
ret
fldl
sbb
js
add
ljmp
nop
nop
jae
shlb
dec
add
add
add
jnp
mov
leave
nop
jmp
ret
mov
mov
xchg
nop
nop
nop
nop
jae
add
inc
popf
stc
add
int
add
add
nop
nop
jae
mov
es
mov
dec
fs
add
clc
nop
nop
nop
nop
jae
dec
add
add
add
in
clc
nop
nop
nop
nop
jae
add
add
movsl
int
push
push
imul
mov
cmp
sar
nop
nop
nop
nop
jae
add
mov
fwait
add
ss
movsl
sub
clc
nop
nop
nop
nop
jae
int
ss
add
sub
ret
add
clc
nop
nop
nop
nop
jae
popa
shr
or
add
mov
nop
push
mov
leave
nop
jmp
cmc
jo
dec
repz
add
add
nop
nop
nop
nop
jae
stc
mov
add
add
shrb
cmp
call
push
mov
xchg
ret
shr
dec
add
repz
jo
push
mov
clc
nop
nop
nop
nop
jae
sub
sub
add
add
push
shlb
mov
xchg
ret
add
add
testl
addr16
push
mov
xchg
ret
add
in
dec
add
divl
add
out
inc
add
add
popa
testl
cld
outsb
cmp
xor
clc
nop
nop
nop
nop
jae
rorb
mov
testl
push
nop
push
mov
leave
nop
jmp
xchg
repz
sbb
jns
or
rorb
add
clc
nop
nop
nop
nop
jae
add
add
sub
xchg
data16
push
push
mov
xchg
ret
in
or
add
or
add
ret
add
in
leave
nop
jmp
bound
add
dec
sbb
stos
clc
nop
nop
nop
nop
jae
fldl
mov
add
xorb
nop
nop
nop
jae
add
add
add
add
jle
jb
nop
push
mov
leave
nop
jmp
rolb
imul
add
add
add
nop
nop
nop
nop
jae
dec
add
sbb
rol
imul
push
add
sbb
fwait
add
add
add
add
add
clc
nop
nop
nop
nop
jae
es
stc
add
add
xchg
jmp
nop
nop
nop
nop
jae
add
add
add
cmp
add
inc
inc
add
nop
nop
nop
nop
jae
add
add
mov
js
je
clc
nop
nop
nop
nop
jae
repz
mov
repnz
nop
nop
nop
nop
jae
add
or
movsl
add
add
fistpl
nop
push
mov
leave
nop
jmp
in
add
sbb
add
xor
nop
nop
jae
add
or
add
add
call
clc
nop
nop
nop
nop
jae
push
add
dec
fnsave
add
add
inc
or
addb
or
ret
add
sub
add
jno
add
jne
aaa
push
and
nop
nop
nop
nop
jae
add
mov
popa
add
add
ljmp
mov
cltd
pop
push
mov
xchg
ret
add
add
add
fnsave
add
ss
xor
push
mov
xchg
ret
add
add
in
cld
clc
nop
nop
nop
nop
jae
or
add
add
mov
add
test
nop
push
mov
leave
nop
jmp
mov
popf
add
rolb
jmp
nop
nop
jae
bound
movsl
ret
add
add
ret
clc
nop
nop
nop
nop
jae
jge
rolb
fwait
add
or
add
add
push
push
mov
xchg
ret
ret
add
ljmp
add
mov
clc
nop
nop
nop
nop
jae
add
sbb
add
dec
cmp
nop
push
mov
leave
nop
jmp
sbb
jge
add
sar
jne
push
mov
xchg
ret
add
cmp
add
jge
mov
outsb
inc
add
popf
add
add
popf
add
add
mov
lock
add
add
add
add
lods
add
out
inc
movsb
pop
jbe
test
nop
push
mov
leave
nop
jmp
repz
add
sub
add
add
push
mov
add
aas
sarl
test
loope
add
cmp
test
add
mov
nop
push
mov
leave
nop
jmp
rorb
cmc
add
add
ret
push
push
mov
xchg
ret
add
push
rcrb
js
ffree
call
clc
nop
nop
nop
nop
jae
or
add
popf
repz
call
clc
nop
nop
nop
nop
jae
negl
dec
add
inc
pop
mov
clc
nop
nop
nop
nop
jae
add
push
add
popf
add
nop
nop
nop
nop
jae
add
add
add
add
mov
jne
clc
nop
nop
nop
nop
jae
fwait
add
mov
mov
leave
nop
jmp
cmc
dec
dec
add
add
jge
add
jae
clc
nop
nop
nop
nop
jae
add
add
add
push
add
add
in
leave
nop
jmp
cmp
add
repz
sbb
add
stos
jne
clc
nop
nop
nop
nop
jae
add
sub
dec
mov
dec
pop
fld1
clc
nop
nop
nop
nop
jae
add
add
popa
add
jno
jo
das
pusha
clc
nop
nop
nop
nop
jae
add
int
add
add
decl
push
clc
nop
nop
nop
nop
jae
int
jge
sub
imul
cs
clc
nop
nop
nop
nop
jae
sub
add
mov
add
dec
imul
nop
jae
add
popa
add
movb
sbb
ja
add
add
add
sbb
js
xchg
mov
or
and
push
dec
rolb
add
jns
popa
add
sbb
mov
xchg
ret
add
sub
add
mov
cld
xchg
xchg
ret
add
jge
add
dec
add
add
add
clc
nop
nop
nop
nop
jae
add
add
inc
hlt
pop
or
nop
nop
nop
nop
jae
cmp
ret
add
add
nop
nop
nop
jae
stc
add
add
sub
insb
xlat
push
push
mov
xchg
ret
add
add
add
add
mov
mov
lcall
clc
nop
nop
nop
nop
jae
dec
xchg
dec
add
add
add
mov
shlb
decl
adc
in
add
adc
jg
dec
mov
dec
add
add
out
add
sbb
pusha
push
mov
xchg
ret
rolb
dec
push
cmp
testl
ret
clc
nop
nop
nop
nop
jae
ret
add
add
rolb
add
add
add
nop
push
mov
leave
nop
jmp
add
add
sub
sbb
inc
bound
out
jns
add
cmp
add
mov
popa
add
clc
nop
nop
nop
nop
jae
add
add
add
aas
fwait
clc
nop
nop
nop
nop
jae
or
add
in
or
add
dec
add
pushl
clc
nop
nop
nop
nop
jae
add
add
lret
nop
push
mov
leave
nop
jmp
add
dec
add
add
add
jo
pop
fists
push
mov
leave
nop
jmp
push
js
mov
add
sub
push
fstpt
clc
nop
nop
nop
nop
jae
cmp
add
add
push
dec
aaa
push
mov
xchg
and
add
lods
into
add
add
outsb
add
dec
pop
jne
push
mov
add
add
add
dec
add
xlat
testb
xchg
push
cmc
ljmp
fs
add
xchg
add
add
popf
hlt
add
cmc
enter
add
add
clc
nop
nop
nop
nop
jae
add
add
ss
add
push
mov
ljmp
mov
str
add
bound
add
mov
and
nop
nop
nop
nop
jae
add
add
imul
addr16
xchg
std
rep
clc
nop
nop
nop
nop
jae
add
add
xchg
cmp
add
add
call
nop
push
mov
leave
nop
jmp
add
add
bound
mov
out
nop
nop
nop
nop
jae
dec
add
xchg
hlt
or
call
lds
add
add
dec
add
dec
fwait
stc
add
fldl
shl
stos
nop
push
mov
leave
nop
jmp
add
add
mov
add
fwait
dec
sub
nop
nop
jae
dec
add
in
add
movb
lods
addl
dec
js
add
dec
sbb
dec
fucomp
add
clc
nop
nop
nop
nop
jae
push
add
mov
add
push
push
mov
xchg
ret
rol
add
dec
cmp
adc
mov
clc
nop
nop
nop
nop
jae
mov
add
repz
sub
incl
incl
lcall
jmp
bound
dec
add
or
shrb
add
in
dec
add
pop
clc
nop
nop
nop
nop
jae
rorb
fisttpll
dec
mov
add
fld1
nop
push
mov
leave
nop
jmp
add
xchg
dec
jge
add
mov
add
clc
nop
nop
nop
nop
jae
repz
cmc
repz
sbb
sar
nop
nop
nop
nop
jae
xchg
add
dec
mov
jo
ljmp
push
xor
call
nop
jmp
jno
add
sbb
pushl
hlt
or
in
adc
jle
add
add
in
xchg
sbb
pop
push
mov
xchg
ret
push
mov
in
cmp
add
push
push
mov
xchg
ret
add
add
add
bound
ss
hlt
int
in
jmp
int
jns
add
jno
add
add
in
dec
rolb
sub
inc
add
clc
nop
nop
nop
nop
jae
add
add
add
jnp
xor
add
dec
ss
add
cmc
fstpl
ret
dec
repz
fists
nop
nop
nop
nop
jae
repz
sbb
add
cmp
sar
nop
nop
nop
nop
jae
sub
cmc
pushf
ret
add
mov
add
add
clc
nop
nop
nop
nop
jae
add
in
jns
add
fstpl
scas
jle
incl
popa
nop
push
mov
leave
nop
jmp
addb
sbb
in
add
add
add
sub
or
ret
add
add
cmp
add
sub
add
clc
nop
nop
nop
nop
jae
addr16
in
dec
movsl
add
repz
call
call
add
clc
nop
nop
nop
nop
jae
ret
add
push
xorl
clc
nop
nop
nop
nop
jae
dec
add
add
jbe
call
clc
nop
nop
nop
nop
jae
push
mov
mull
sub
repz
nop
nop
nop
nop
jae
imul
add
jns
add
ret
rolb
jmp
leave
nop
jmp
mov
add
dec
mov
dec
push
add
clc
nop
nop
nop
nop
jae
sub
add
cmc
bound
int
push
mov
xchg
ret
add
rolb
add
es
add
add
add
add
push
mov
add
scas
clc
nop
nop
nop
nop
jae
xchg
js
add
dec
add
push
mov
xchg
ret
add
add
in
repz
add
nop
nop
jae
add
mov
sbb
add
or
nop
nop
jae
sub
push
sub
xchg
ret
add
add
repz
clc
nop
nop
nop
nop
jae
xchg
repz
add
add
add
jmp
mov
xchg
ret
mov
add
push
add
add
add
push
mov
xchg
ret
mov
fwait
add
fwait
add
add
add
add
cmp
and
shrb
add
adcb
mov
incl
js
sbb
in
leave
nop
jmp
dec
dec
add
mov
push
bound
stc
jo
cmpsb
call
call
nop
push
mov
leave
nop
jmp
add
movsl
dec
rolb
add
push
mov
xchg
ret
movsl
pushf
in
dec
rorb
add
add
fwait
or
mov
in
mov
dec
add
shlb
add
jno
rcrb
dec
call
clc
nop
nop
nop
nop
jae
add
sarb
add
add
popf
push
cmp
add
add
add
sbbb
int3
add
push
xor
outsb
insl
pushl
clc
nop
nop
nop
nop
jae
add
cmc
push
add
add
jmp
xorl
clc
nop
nop
nop
nop
jae
mov
dec
add
repnz
shll
andb
adc
inc
ja
idivb
push
mov
xchg
ret
add
add
add
add
repnz
clc
nop
nop
nop
nop
jae
add
add
ret
add
call
nop
jmp
add
mov
add
nop
nop
nop
nop
jae
add
add
sbb
sbb
add
negb
mov
leave
nop
jmp
add
add
mov
sbb
add
nop
push
mov
leave
nop
jmp
ss
dec
add
add
add
add
push
push
mov
xchg
ret
mov
add
add
dec
movb
add
lahf
cmpsl
ljmp
add
andl
pusha
xchg
add
mov
clc
nop
nop
nop
nop
jae
rolb
dec
add
cmp
add
dec
push
pop
out
pop
clc
nop
nop
nop
nop
jae
es
popa
add
add
add
nop
push
mov
leave
nop
jmp
dec
repz
add
add
xchg
aas
mov
clc
nop
nop
nop
nop
jae
rol
add
add
add
push
pop
jne
clc
nop
nop
nop
nop
jae
dec
push
add
sub
add
ljmp
add
xor
incb
inc
repnz
gs
inc
call
fstps
mov
xchg
ret
inc
add
add
mov
ss
dec
inc
xor
nop
nop
nop
jae
add
mov
ljmp
roll
nop
nop
nop
nop
jae
add
imul
pushf
fnstsw
dec
fldt
push
mov
xchg
ret
mov
js
push
sbb
add
mov
cmp
nop
push
mov
leave
nop
jmp
sbb
jns
add
call
negl
nop
jae
dec
repz
jno
add
add
clc
nop
nop
nop
nop
jae
add
popa
add
mov
add
add
push
mov
xchg
ret
add
add
add
or
add
fwait
push
mov
xchg
ret
jge
add
sbb
add
add
cmp
dec
dec
imul
nop
nop
nop
jae
jno
repz
sbb
dec
shrb
int
sub
nop
nop
jae
add
add
cmp
repz
ds
dec
nop
push
mov
leave
nop
jmp
add
or
add
mov
fwait
mov
clc
nop
nop
nop
nop
jae
frstor
fwait
popa
rolb
mov
or
nop
nop
nop
nop
jae
mov
add
popa
add
test
clc
nop
nop
nop
nop
jae
testl
add
jl
and
nop
nop
nop
nop
jae
testl
add
sub
mov
leave
nop
jmp
dec
dec
add
dec
inc
add
mov
dec
shrb
call
nop
jmp
ret
add
push
add
decl
mov
clc
nop
nop
nop
nop
jae
repz
movsl
add
popf
add
outsb
das
add
clc
nop
nop
nop
nop
jae
add
dec
jge
jge
add
jno
clc
nop
nop
nop
nop
jae
mov
add
jo
sbb
or
add
push
mov
xchg
ret
fisttpll
js
movb
scas
pop
push
mov
xchg
ret
cmp
cmc
repz
ret
testl
add
add
nop
nop
nop
nop
jae
jo
repz
int
pop
jae
nop
nop
nop
nop
jae
push
sbb
add
mov
rcll
nop
nop
nop
nop
jae
add
add
add
dec
cmpsl
shr
clc
nop
nop
nop
nop
jae
dec
push
add
add
add
sbb
adc
nop
nop
nop
nop
jae
mov
add
rolb
push
decl
cmp
or
nop
nop
nop
nop
jae
int
add
in
xor
pusha
push
mov
xchg
ret
add
add
sub
dec
add
ss
dec
add
nop
nop
nop
nop
jae
mov
dec
add
jmp
push
mov
leave
nop
jmp
repz
dec
mov
inc
add
jae
clc
nop
nop
nop
nop
jae
hlt
in
push
add
cmp
add
sbb
aas
adc
nop
jmp
add
stc
jge
add
add
mov
pushl
enter
nop
nop
jae
add
add
dec
ss
add
add
mov
nop
push
mov
leave
nop
jmp
add
stc
fisttpll
incl
jne
clc
nop
nop
nop
nop
jae
push
dec
jbe
add
clc
nop
nop
nop
nop
jae
mov
sub
mov
clc
nop
nop
nop
nop
jae
or
add
notl
pop
clc
nop
nop
nop
nop
jae
add
add
add
dec
sub
push
push
mov
xchg
ret
add
or
add
ret
add
push
push
fcoml
nop
push
mov
leave
nop
jmp
mov
add
add
ret
push
nop
push
mov
leave
nop
jmp
pushf
dec
jns
shr
add
add
bound
in
ret
push
mov
xchg
ret
repz
dec
sub
sbb
mov
add
mov
nop
nop
jae
add
add
add
add
jo
loopne
jp
xchg
push
clc
nop
nop
nop
nop
jae
add
jo
sub
add
movsl
dec
cli
sbb
ljmp
push
push
mov
xchg
ret
in
add
or
add
jo
lods
ljmp
incl
xchg
clc
nop
nop
nop
nop
jae
add
testl
push
dec
dec
popa
mov
add
clc
nop
nop
nop
nop
jae
in
add
mov
push
mov
xchg
ret
add
jge
add
es
mov
repz
mov
xchg
ret
add
mov
sbb
movsl
in
add
push
mov
xchg
ret
sbb
add
add
mov
subl
push
mov
xchg
ret
push
add
or
cmc
movzwl
clc
nop
nop
nop
nop
jae
add
push
add
add
inc
xor
clc
nop
nop
nop
nop
jae
add
add
rolb
add
lods
push
mov
xchg
ret
sub
push
add
add
cmc
add
js
xchg
pushf
or
nop
nop
nop
jae
add
repz
sbb
cmc
add
lsl
clc
nop
nop
nop
nop
jae
cmp
add
rcrb
cmp
pushl
mov
leave
nop
jmp
add
add
add
add
addr16
mov
push
mov
xchg
ret
mov
add
rclb
sub
sub
nop
push
mov
leave
nop
jmp
add
add
inc
clc
nop
nop
nop
nop
jae
in
sbb
or
add
cmc
jge
sbb
pushl
push
push
mov
xchg
ret
in
rol
movsl
xchg
add
cmp
add
imul
js
add
jge
add
cmp
mov
mov
xchg
ret
add
add
popf
add
cmp
rorb
nop
push
mov
leave
nop
jmp
add
pushf
add
add
add
pushf
inc
add
clc
nop
nop
nop
nop
jae
add
sbb
mov
cmp
pushl
insl
stos
clc
nop
nop
nop
nop
jae
add
or
mov
add
lret
add
push
aas
add
adc
or
and
mov
jmp
adc
cmp
into
dec
pop
repz
pop
fwait
andl
or
bound
jno
iret
js
frstor
pushf
roll
decl
pop
loopne
pushl
jnp
inc
aam
mov
iret
jnp
xchg
outsb
dec
add
ljmp
lret
xor
leave
cmpsl
ja
push
pusha
out
adc
addr16
push
jp
lret
jmp
divl
ficoms
cs
jl
repnz
jmp
dec
push
es
ficomps
or
pushl
xchg
sarl
call
call
sub
jae
int3
add
icebp
lea
mov
decl
sbb
cmp
or
incl
mov
sbb
bound
fmull
incl
mov
negl
lcall
xor
cmp
decl
mov
pushf
test
inc
mov
fs
arpl
mov
rcrb
jno
ljmp
call
fsubl
dec
jnp
sub
jmp
into
and
call
mov
lcall
or
call
lcall
insb
sbb
lds
pop
xchg
lock
jmp
add
jmp
fcoml
jmp
sbb
rcrb
incl
jmp
test
ljmp
ljmp
shl
xor
out
test
xchg
lcall
arpl
pop
repz
fcmovnu
lock
lods
ljmp
dec
mov
fwait
in
cmpsb
decl
inc
jg
pop
scas
pop
jp
push
adc
jecxz
mov
lods
jmp
jmp
push
lods
out
stos
inc
fdivr
popf
mov
arpl
lret
incl
jnp
incl
pop
lods
push
cmpsb
jmp
cld
push
push
popl
fsubl
inc
push
jecxz
push
sbbl
test
test
subl
pop
add
ljmp
dec
xor
call
decl
dec
sub
jmp
ljmp
cli
push
call
cmpsl
repnz
call
insb
loopne
ret
mov
and
call
lcall
ljmp
call
cli
js
inc
jmp
pop
repnz
ljmp
cld
out
xor
jg
mov
push
lods
dec
adc
inc
add
ljmp
ja
jecxz
decl
cltd
push
mov
incb
pusha
stos
push
pop
cld
or
push
cmp
jmp
ljmp
punpcklbw
notl
mov
je
mov
pushl
push
adc
cld
rcrb
negl
and
call
push
add
decl
sahf
imul
and
call
jmp
call
push
call
mov
ljmp
jmp
or
pushl
shl
add
pushl
pop
test
js
lcall
hlt
test
ljmp
mov
call
shlb
dec
sub
pop
sbb
inc
dec
sub
cmp
cmp
call
jnp
ret
cmc
push
cltd
mov
and
lcall
decl
lods
incl
incl
iret
loop
pushf
adc
jmp
pushl
pop
push
jge
pop
jbe
mov
jmp
pushl
aam
test
incl
jg
cwtl
loopne
jmp
jg
xchg
lcall
out
rclb
pop
hlt
mov
das
cmpsb
std
pusha
rcrb
int
in
mov
jge
stos
incl
incl
lcall
ljmp
xchg
out
into
inc
cmp
mov
cld
pop
push
mov
lcall
hlt
cmp
decb
call
scas
jg
pusha
das
cmpsb
incl
test
mov
call
xchg
cmp
rorb
call
es
call
xor
fcomps
call
xchg
insl
push
repnz
call
fbstp
sbb
rcrb
inc
movl
jmp
jb
decl
cmp
jne
xchg
pop
insl
addr16
mov
cmp
dec
movsl
and
inc
pop
pop
sti
movsl
sti
adc
mov
cld
cwtl
pushf
jb
mov
decl
pop
mov
call
dec
cmp
jmp
xor
imul
mov
call
mov
in
test
cli
jp
inc
pop
loope
sub
decl
aaa
ret
imul
lcall
jae
rcrb
cmpsb
pushl
shrb
inc
sti
hlt
mov
decl
lahf
lret
mov
sub
push
fnstcw
lcall
into
iret
in
and
pushl
jecxz
aaa
insb
test
pushl
xchg
dec
jp
or
decl
mov
lcall
incl
dec
xor
aam
jge
jge
rcrb
inc
xor
jmp
fstp
stos
push
jg
pop
lcall
fsubrs
dec
aaa
mov
sbb
shl
movsb
jmp
pop
test
push
pop
ret
cld
scas
mov
decl
cwtl
comiss
mov
sbb
ljmp
leave
fcoms
dec
pop
in
test
dec
mov
xchg
decl
hlt
or
cmp
roll
jae
test
jmp
jb
xor
divb
sub
decl
decl
ljmp
andl
shrb
fstps
fld1
add
ljmp
pop
insl
cwtl
js
rcr
lret
bnd
aas
call
out
sbb
push
sbb
call
sbb
daa
jmp
gs
incl
incl
into
out
push
fildll
cmc
out
dec
test
and
xchg
sarb
mov
pushl
push
inc
shlb
out
xchg
ds
inc
and
jmp
jne
xchg
xchg
dec
adc
inc
cmpsb
decl
push
fcmovb
sbb
in
pusha
int3
movsl
inc
mov
add
decl
dec
jle
jmp
cmp
dec
add
sbb
sarb
call
popf
xchg
dec
dec
push
ljmp
pushw
loope
cmpl
nop
int
arpl
jl
mov
in
ljmp
pushl
push
test
push
dec
xchg
pop
sarl
pop
sub
pushl
test
enter
fldl
or
ret
call
scas
decl
mov
xchg
add
leave
sub
mov
imul
mov
inc
bswap
repz
xchg
out
in
addr16
call
loope
out
cmp
cmp
sub
lcall
outsb
cmp
pop
ss
cmc
arpl
test
lcall
movsl
adc
pushl
sub
mov
jmp
pushl
push
hlt
out
mov
adc
add
call
add
clc
dec
jp
jno
jmp
ljmp
inc
adc
or
jmp
mov
rcrl
mov
aad
imul
pushl
jns
mov
int3
sub
popa
cmp
xchg
sub
popa
pushf
sub
decl
add
pushl
sbb
lcall
test
decl
or
imul
jbe
imul
incl
jns
cmp
jmp
call
mov
call
int
call
in
out
or
incl
jg
aaa
xor
sbb
dec
lea
pushl
jl
ljmp
ljmp
mov
fisubs
stos
shll
lahf
cli
cmc
pop
push
test
inc
add
lcall
pushl
ljmp
out
nop
lahf
jb
push
lcall
mov
or
jmp
ljmp
cld
lahf
xchg
mov
jno
fmulp
test
hlt
jnp
pop
shr
nop
ds
arpl
adc
call
cmpsb
pushl
pusha
sub
sbb
inc
mov
call
aaa
aaa
xchg
mov
popf
insb
loopne
push
incl
ljmp
pushl
adc
cmp
jne
push
jne
int
in
lds
sbb
dec
sub
call
enter
dec
daa
lds
push
push
pop
in
sub
scas
out
jno
cmpsl
roll
arpl
jns
cltd
xchg
decl
sub
lcall
mov
cs
inc
inc
adc
mov
pop
inc
jle
leave
daa
shrb
dec
gs
loopne
into
jl
cmp
incl
mov
mov
movsb
out
je
movsl
mov
push
mov
jecxz
sub
call
jmp
loopne
mov
jmp
pushl
fucomi
test
jno
sub
call
cld
adc
call
cs
ljmp
incl
es
jmp
jmp
aad
push
add
push
mov
insl
jg
js
or
ljmp
jmp
sub
inc
cmp
enter
out
dec
push
push
icebp
mov
insl
cltd
adc
adc
jmp
mov
and
pushl
leave
addr16
lea
popa
ljmp
jns
and
scas
mov
push
movsl
or
incl
lcall
pop
inc
and
inc
adc
mov
push
push
push
repnz
jmp
aad
dec
sub
incl
stc
arpl
out
fwait
fs
decl
call
sbb
shrb
pop
pop
inc
mov
push
mov
xchg
sahf
xchg
jle
and
insb
rcrl
fsubl
push
inc
xchg
loopne
hlt
sbb
pushf
in
bound
add
jmp
mov
out
mov
lcall
cmp
ss
bound
mov
in
lahf
adcl
xor
dec
stos
ret
bound
xor
sub
jmp
pop
aas
lea
cmp
sti
push
aam
cmp
mov
fbld
sbb
mov
les
std
mov
push
or
call
gs
push
mov
add
inc
sbb
push
pop
adc
sbb
dec
inc
or
ss
scas
ljmp
push
aas
lods
mov
push
jmp
incl
mov
decl
call
les
decl
inc
inc
adc
loopne
sub
or
push
jg
loopne
loop
adc
fninit
or
movsl
add
call
cld
mov
incl
mov
cmp
xchg
jae
mov
lcall
mov
jmp
incl
decl
jecxz
push
pushl
enter
lret
cmp
pushl
cmp
lcall
jmp
xchg
cld
add
pushl
insb
xor
xchg
mov
jmp
idivb
sbb
sbb
fstps
fisubl
mov
sub
out
aad
fisttpll
jle
sbb
call
fistl
pushl
out
outsb
stc
dec
test
xor
mov
dec
dec
pop
fnstenv
call
das
out
mov
or
incl
cltd
cmc
push
leave
dec
add
movb
leave
and
push
jbe
mov
icebp
data16
call
cmp
xor
jge
imul
mov
call
pop
js
mov
jb
mov
inc
and
call
call
out
les
rcrb
push
fadds
mov
cmc
add
lcall
mov
mov
jno
cmp
jnp
daa
cmc
inc
push
pushl
add
jmp
mov
lcall
in
addr16
mov
lcall
das
jle
push
or
lcall
dec
mov
fsub
fbld
xlat
pusha
lahf
test
decl
or
call
das
sti
cmp
sbb
mov
scas
incl
push
adc
mov
or
decl
xchg
jle
sbb
stc
popf
mov
xor
sahf
js
popf
adc
decl
mov
jge
pushf
fsubp
xor
ret
pushl
fisubl
call
incl
incl
ds
shl
les
decl
call
inc
add
aas
and
ljmp
lods
push
mov
and
add
insl
outsb
into
add
popf
lret
test
pop
sbb
popf
adc
lcall
sub
call
or
call
bound
lcall
in
rorl
fcoms
mov
mov
lds
loop
push
decl
jp
jmp
mov
or
push
shlb
insb
inc
adc
imul
and
jnp
lcall
decl
pop
xchg
cwtl
loopne
aam
and
lcall
call
lret
outsl
inc
call
lret
mov
pop
das
jmp
and
cmpsb
ljmp
inc
notb
popf
aam
jmp
push
arpl
jo
int
rol
jmp
dec
icebp
gs
jmp
ss
into
xorl
decl
shll
pusha
rcr
push
inc
in
test
lret
testb
mov
decl
xchg
sbb
js
jp
loop
mov
cmp
jns
addr16
jecxz
and
outsb
jge
lods
stc
mov
call
push
gs
out
rorl
aas
sbb
cmp
out
mov
jmp
push
lcall
call
sub
sub
pushf
roll
cltd
xchg
mov
cmp
ljmp
and
lcall
mov
jg
add
mov
inc
dec
push
incl
pop
clc
out
repnz
imul
or
mov
jmp
dec
sub
in
mov
or
js
mov
inc
sbb
lcall
push
cmp
fnstenv
call
addr16
pushl
rorb
call
cmp
lcall
stc
jp
rolb
jmp
addr16
inc
insb
adc
mov
jmp
xor
jmp
decl
jns
sbb
mov
pop
jecxz
mov
dec
scas
lcall
inc
add
sti
dec
pop
xor
call
dec
pop
mov
ljmp
call
jmp
cmpsl
lret
mov
ss
push
insl
add
call
fcmovbe
dec
in
mov
fbld
lret
and
fsub
mov
and
popa
dec
xchg
incl
pop
shlb
or
inc
gs
xchg
loop
dec
leave
mov
ljmp
movsb
mov
leave
inc
stos
cmp
lock
dec
loopne
pushl
cmp
inc
jns
inc
xchg
mov
add
lcall
sbb
aaa
adc
call
clc
es
call
cs
ds
popf
leave
sub
cmp
iret
sahf
test
xlat
rol
pushf
inc
outsb
mov
call
inc
insb
inc
popa
cmp
mov
pushf
aad
lret
daa
push
add
lcall
dec
mov
adc
sti
pop
aaa
jp
jmp
mov
decl
lcall
or
jmp
int3
dec
sahf
pop
pop
lods
std
lret
xchg
adc
movsl
sub
adc
mov
fistpl
decl
push
inc
jno
cmp
inc
stc
std
lahf
and
lods
decl
mov
pushl
lret
mov
loop
fisubl
arpl
jp
in
leave
arpl
cmp
ljmp
ljmp
jmp
lcall
loop
data16
dec
das
das
iret
xchg
pushf
xchg
adc
arpl
mov
jmp
pushl
sbb
cmp
incl
in
pop
test
inc
clc
jmp
mov
stc
cld
push
mov
cli
hlt
mov
fs
dec
mov
cld
pushf
mov
icebp
push
add
pop
shrl
fsubs
loopne
mov
decl
jg
adc
cmp
adc
jmp
dec
hlt
mov
mov
sahf
xor
sti
sub
incl
adc
popa
xor
lahf
add
incl
lcall
jp
incl
dec
adc
mov
jmp
jge
lret
call
mov
rorb
call
cmp
jmp
sbb
int3
sub
inc
pushf
int3
sbb
int
xchg
call
je
icebp
ljmp
xor
push
dec
dec
pushf
sarb
js
decl
sub
jmp
jnp
lcall
pop
pop
cmp
cs
inc
sarb
sarl
inc
and
pushl
push
test
lcall
push
lods
add
call
incl
incl
ds
xor
stos
decl
and
push
mov
leave
outsb
sbb
insl
je
cli
test
incl
push
mov
jmp
xor
int
repz
sbb
leave
dec
sub
rcl
leave
sbb
push
lcall
mov
lcall
lcall
mov
mov
jmp
call
aad
mov
fiaddl
jo
sbb
push
add
push
fs
dec
imul
pop
clc
mov
pushl
xchg
imul
mov
sti
rcll
push
out
dec
cmpsb
incl
inc
arpl
xor
jl
jmp
imul
incl
hlt
outsl
stc
xor
and
jl
ja
ficomps
or
in
push
iret
lods
in
pushl
cmp
cmp
lcall
jbe
ljmp
jae
ljmp
push
dec
pop
imul
push
jbe
popf
add
inc
loop
and
fsubrl
or
pop
jns
loope
movsb
jmp
mov
pushf
inc
in
cli
cmpsl
cmp
pop
das
adc
pop
out
xchg
lcall
mov
aad
rclb
incl
push
pop
jnp
jmp
call
push
test
inc
push
pop
pop
pop
pop
fidivs
decl
enter
pushl
decl
jmp
dec
sub
dec
or
push
sub
jmp
add
incl
cmpsb
ljmp
jmp
lcall
inc
inc
dec
jl
outsl
sbb
mov
sti
in
lods
jno
pushl
call
inc
mov
push
sbbl
cmp
call
add
decl
incl
pop
mov
shll
pop
stos
call
outsb
add
out
mov
call
cmp
mov
mov
out
sub
cld
in
push
pushf
xor
fnsave
inc
filds
out
sub
ljmp
lcall
lahf
das
ret
push
inc
out
push
lret
jnp
xor
decl
cmp
fmul
lea
lcall
addl
pushl
hlt
decb
mov
push
push
cwtl
out
rcrl
jnp,pt
incl
jecxz
jo
jmp
sub
jp
sub
pushl
add
xchg
lcall
bound
shrl
xchg
lea
out
stc
jno
icebp
inc
sbb
push
lcall
pop
pushf
shlb
xchg
mov
adc
inc
xor
jno
or
stos
movsb
in
adc
sub
ds
jns
test
in
mov
xchg
adc
decl
push
inc
sbb
cmp
sbb
pop
out
or
lcall
cmpsl
in
gs
rclb
dec
ror
cli
fsts
jmp
repnz
push
inc
cli
push
jl
ficoml
push
ljmp
push
out
imul
cmp
decl
xchg
jmp
out
inc
testb
or
ljmp
ljmp
xchg
ljmp
add
or
cmp
loop
daa
mov
sub
test
js
outsb
jno
fidivrs
call
jmp
pop
pop
das
test
push
in
mov
decl
jmp
ret
cmc
fwait
adc
push
dec
dec
int3
dec
and
mov
insl
mov
fistpl
pop
out
push
xor
ljmp
cmc
inc
add
push
test
jg
daa
sbb
out
pop
push
cmp
stos
jmp
sbb
incl
imul
xor
inc
imul
xchg
ja
sbb
mov
mov
push
dec
lcall
bound
loope
mov
lods
jo
incl
mov
ljmp
gs
jmp
ja
sti
enter
pop
fimull
push
push
incl
aam
jmp
add
dec
adc
sahf
lods
decl
xchg
loope
sti
push
pushl
dec
xchg
jle
mov
ljmp
les
jnp
and
xor
xchg
sub
push
insl
xchg
mov
or
jmp
mov
gs
sbb
jb
add
lcall
sarl
sti
mov
in
in
sub
ljmp
push
call
and
xchg
call
and
dec
jno
pop
cmp
incl
ret
mov
sub
lcall
sub
ljmp
fldcw
call
sub
cmp
aam
mov
push
pusha
fisubrl
in
dec
inc
sub
mov
loope
inc
pavgw
mov
jmp
dec
adc
inc
xchg
add
call
jmp
jmp
lahf
pop
cmpsl
int3
jo
lret
inc
out
test
ljmp
roll
es
cmp
mov
lcall
out
popa
push
push
lock
inc
sub
inc
xchg
adc
leave
add
jmp
lret
icebp
fwait
insl
or
ljmp
decl
rcr
addl
int3
dec
lods
into
sub
or
ljmp
pop
push
lods
sub
jmp
pushl
addr16
cmp
inc
popa
xchg
stos
lcall
aam
push
int
out
rcll
xor
incl
inc
push
and
decl
push
shrl
lcall
mov
push
jp
or
jmp
jmp
cmp
cmp
lcall
cs
ljmp
mov
imul
incl
loopne
jl
ret
pop
addr16
pushl
jl
shll
jmp
incl
mov
lods
std
ja
cli
inc
dec
push
jmp
ljmp
lcall
daa
leave
ss
mov
mov
int3
rclb
mov
outsl
and
lcall
mov
mov
insl
outsl
cs
cmp
in
shll
jmp
cwtl
mov
lock
mov
push
mov
sub
call
incl
lcall
in
jge
cs
decl
mov
pop
mov
outsb
or
fs
incl
inc
cmpsl
mov
fildl
mov
push
scas
ljmp
and
ljmp
out
rcrb
insl
adc
lods
pushl
ret
hlt
nop
cmp
fnstenv
std
iret
inc
add
mov
call
negb
xchg
dec
xchg
pop
xchg
adc
rolb
jmp
fs
ret
fisubs
jo
cmpsb
mov
or
ljmp
push
decl
test
cs
jmp
ret
rcr
xor
jne
sbb
mov
xchg
ja
lcall
je
popf
aad
das
es
ljmp
ljmp
jb
into
mov
fmul
dec
cmpsb
incl
into
inc
sub
call
inc
cltd
or
cs
in
lds
adc
ljmp
mov
xor
in
popa
mov
push
add
incl
mov
call
jnp
repnz
jne
jnp
shlb
cmp
jg
out
pushf
sub
fdivrs
lods
jmp
mov
mov
lcall
ficomps
dec
sbb
call
dec
fs
jmp
ljmp
incl
in
and
ds
jl
insl
enter
mov
pop
mov
jmp
and
mov
dec
push
adc
sub
pushl
pushl
outsl
cmp
xchg
lods
mov
aad
call
xor
push
icebp
sbb
call
into
sahf
mov
sub
aas
mov
imul
decl
jmp
mov
pop
ret
nop
xor
call
jmp
mov
ljmp
in
cmpsb
call
cmp
pop
xor
mov
int3
cmp
mov
decl
push
xor
mov
jae
pushl
pop
xchg
dec
nop
mov
xor
mov
pop
gs
call
sti
inc
lds
outsl
xchg
xchg
jecxz
and
call
movsb
call
lcall
lahf
nopl
decl
sub
call
cmp
nop
test
jnp
adc
or
call
jno
es
ljmp
adc
pop
dec
outsb
mov
sub
ljmp
mov
sbb
imul
or
pushl
push
daa
jmp
mov
push
in
je
icebp
pop
mov
pop
scas
hlt
sahf
lds
scas
incl
xlat
fwait
pop
push
jmp
sbb
mov
incl
subl
inc
rorl
jmp
sub
inc
jmp
cmp
ljmp
sub
jmp
loopne
cmp
jmp
call
push
std
pusha
xchg
dec
mov
pushl
mov
lcall
sti
ret
jno
call
xlat
sub
aaa
rolb
stc
jne
bnd
clc
xchg
loopne
jo
loop
and
dec
insb
in
dec
pushf
xchg
xchg
repnz
or
fdiv
and
mov
daa
nop
test
jmp
outsl
cmp
mov
jne
les
xchg
repnz
cmc
cmp
dec
enter
ret
push
ljmp
mov
xchg
iret
clc
sub
scas
ljmp
inc
ror
mov
hlt
leave
je
stos
call
insl
xchg
hlt
hlt
movsb
decl
mov
push
mov
fldcw
sub
into
es
decl
jns
mov
pop
pusha
and
pop
push
in
dec
sbb
sub
ds
ja
ljmp
pushf
mov
jg
pop
fnstcw
insb
jns
and
xchg
roll
test
xchg
stos
call
stos
dec
mov
fistpl
jmp
imul
dec
dec
lahf
mov
lcall
movsl
out
bound
mov
mov
sahf
push
cmp
call
sbb
push
add
call
xchg
push
test
incl
decl
pop
cld
cmp
mov
hlt
mov
mov
pop
mov
jne
test
inc
push
mov
lcall
lea
jecxz
jle
mov
ljmp
gs
add
in
jp
push
mov
sbb
outsb
push
maskmovq
mov
or
call
or
jmp
pop
test
fmul
and
pop
in
pop
jne
jbe
ljmp
pushl
decl
sub
ljmp
jmp
adc
int
fcmove
sbb
jl
add
mov
out
or
call
cwtl
mov
incl
mov
inc
jns
xchg
dec
sbb
movsb
pushl
and
mov
lcall
mov
adc
jge
xchg
jmp
or
jmp
decl
incl
stc
in
fsubl
ret
xchg
or
jmp
mov
cwtl
jl
cmp
movsl
xor
jecxz
jle
and
stc
push
dec
pushf
inc
dec
lret
iret
inc
ljmp
inc
adc
shlb
loopne
lods
jmp
imul
in
mov
sbb
cmp
decl
xor
cmp
pushl
adc
loope
dec
int
test
dec
je
or
cli
es
pushl
mov
pushl
movsb
inc
xor
into
sbb
cmc
push
scas
decl
and
fsubrs
dec
xor
sahf
mov
lds
stos
repnz
jge
inc
insl
jo
inc
fsubr
inc
mov
lcall
and
shll
decl
mov
mov
out
push
pop
dec
insl
out
inc
stc
cmc
or
in
out
mov
inc
cmp
mov
rolb
out
popf
jbe
xchg
js
clc
mov
jmp
xchg
sbb
dec
das
dec
push
outsl
aas
sahf
mov
int3
sub
jmp
in
xchg
dec
and
pushl
out
std
shlb
push
and
mov
sbb
icebp
imul
mov
push
loopne
pop
iret
test
out
add
call
adc
mov
loop
jl
clc
mov
cs
jmp
data16
xchg
sahf
pop
or
cmp
mov
insl
outsl
cmp
dec
xchg
lcall
out
xor
mov
inc
pop
lcall
lock
jo
jns
push
es
incl
clc
or
incl
ds
fsubrl
inc
popa
jnp
decl
xor
lcall
js
xor
dec
mov
insb
xor
cld
dec
push
fs
and
mov
sbb
jae
adc
incl
xchg
lret
pop
cmpsb
jmp
and
dec
lcall
mov
call
ljmp
iret
push
jnp
pop
and
jno
sub
ljmp
inc
xor
repz
push
pop
inc
shrb
insl
lods
call
fnstcw
lea
decl
xchg
jecxz
cmp
decl
sub
call
insl
icebp
test
decl
call
or
incl
adc
movsl
push
in
push
pop
dec
jns
mov
dec
sbb
mov
ljmp
lret
jo
xchg
popf
pusha
adc
aad
inc
pop
pop
cmp
decl
jle
dec
sbb
gs
cmp
lcall
push
mov
ljmp
inc
lods
decl
cmp
jmp
mov
scas
inc
mov
lods
jmp
int3
push
andl
out
mov
adc
in
mov
cmp
call
je
mov
ljmp
sub
lcall
clc
mov
push
jbe
add
add
inc
outsl
mov
push
jecxz
sbb
scas
mov
cs
jmp
incl
call
ljmp
cs
lcall
incl
mov
popa
popa
cmp
ljmp
sahf
ss
mov
scas
sub
out
data16
or
ljmp
out
xchg
leavew
xor
or
lock
sub
pushl
bound
call
cld
pop
push
fmuls
jge
call
sahf
data16
shlb
fistpll
jnp
sbb
insl
pop
pop
jg
fstpt
pushl
mov
mov
jmp
sbb
add
std
or
dec
push
call
fucomip
jmp
fildll
test
clc
push
jb
or
fcomps
mov
call
and
lcall
test
incl
idivl
inc
push
sti
insb
push
pushl
and
jmp
and
ljmp
pushl
ljmp
insb
call
dec
out
and
call
movsb
call
iret
xlat
cwtl
add
jmp
lcall
jmp
call
cltd
mov
mov
cli
pop
lcall
ljmp
mov
ljmp
and
lcall
and
in
insb
mov
inc
aad
xchg
pop
mov
lret
scas
push
cld
shl
mov
and
or
push
jbe
add
xchg
add
push
dec
fs
xchg
adc
mov
inc
mov
mov
jmp
jp
test
decl
dec
test
mov
lods
jmp
in
add
jnp
xbegin
ljmp
sub
sub
jmp
incl
sub
incl
faddl
and
out
ret
icebp
mov
push
insl
sub
decl
idivb
sbb
dec
loope
jg
loop
add
or
ljmp
and
lds
pushl
and
xchg
cmpsb
jmp
dec
or
incl
cmp
pushl
mov
ljmp
ljmp
scas
sub
jmp
jp
add
mov
mov
fwait
mov
fmul
fidivrs
faddl
pushl
int
push
add
test
mov
lret
push
pop
out
in
mov
adc
inc
mov
jmp
rcl
jns
aam
mov
ljmp
inc
sbb
jnp
inc
inc
cmp
insl
aad
std
xchg
sub
jge
mov
ljmp
femms
decl
popf
mov
rorl
add
dec
inc
cmp
add
xor
imul
xlat
shrb
pushl
push
lods
pop
nop
mov
cmp
ljmp
call
mov
call
cltd
add
xlat
inc
inc
push
sub
incl
cmpsb
cmp
test
fcmovnb
in
ljmp
call
and
push
adc
or
fisttpl
xchg
push
lret
ficoml
jle
dec
loopne
movsl
test
push
andl
call
call
rcll
jle
add
push
or
mov
fadds
push
xor
push
in
inc
lahf
or
call
mov
std
jne
lcall
cmc
stc
mov
adc
ror
imul
lret
packssdw
incl
pop
idivl
cmp
jl
sub
jmp
push
cmp
jbe
fnsave
out
mov
jnp
js
add
ljmp
pushl
sub
sbb
or
decl
sbb
jmp
inc
jge
decl
mov
or
sti
leave
add
or
out
out
cmp
push
das
mov
call
sarb
xchg
mov
pushl
incl
shl
stos
frstor
dec
sub
sarb
adcl
int
jmp
xchg
pop
jnp
adc
cmp
cs
lcall
xor
sub
incl
push
jo
pop
aaa
test
ljmp
adc
xchg
pusha
mov
aad
jmp
aad
jmp
and
pushl
stos
pop
mov
sub
js
scas
loopne
fildll
xchg
insl
shlb
fnstenv
aas
inc
push
lcall
scas
add
xor
leave
lods
aaa
add
call
mov
dec
call
shlb
cmp
je
fisttpll
xor
mov
dec
mov
or
incl
jmp
test
lock
mov
daa
repnz
jbe
stc
xor
mov
rolb
inc
mov
aas
xchg
loop
call
adc
sbb
mov
pop
xlat
movsl
stc
or
inc
dec
sahf
xchg
das
cmp
lcall
add
call
or
jmp
fadd
leave
shll
rcr
xlat
out
push
cmp
pop
dec
into
xor
mov
lock
enter
jmp
pop
inc
fadds
mov
ja
jmp
pop
mov
jmp
push
cmp
jmp
xchg
inc
js
jns
inc
lods
mov
jmp
decl
call
pop
push
rorb
and
in
addr16
test
ljmp
sbb
cmp
incl
cli
scas
mov
lahf
mov
mov
es
incl
ss
faddl
pushl
stos
ss
inc
sub
ljmp
lcall
addr16
fstl
xlat
aas
in
lock
movsb
fstp
jnp
aas
sahf
int
sbb
inc
pop
rclb
call
cmp
cmp
push
call
and
pop
xchg
fs
call
add
lcall
loope
inc
mov
idivb
lock
pop
leave
sbb
mov
sbb
mov
sbb
dec
cld
inc
fbld
cmp
imul
jns
ss
mulb
fisubs
fucomip
push
xor
out
nop
mull
fimuls
mov
lods
sets
in
loope
test
lds
cmp
jmp
pop
imul
pop
into
push
cmp
push
or
pushl
xor
mov
call
and
lcall
xor
jmp
lcall
lods
ljmp
decl
lcall
icebp
jns
cmp
jns
imul
or
push
cmpsl
adc
das
inc
mov
sub
pop
jmp
mov
call
pushl
or
stos
jmp
mov
sbb
lods
cmp
insb
fdivr
data16
pop
int
jno
idivb
lcall
mov
pop
and
int3
test
stc
testl
or
leave
adc
inc
test
call
cmc
xchg
decl
xor
jge
rolb
add
inc
add
pushl
fs
sti
movsb
ljmp
inc
pop
leave
icebp
mov
movsl
push
pop
inc
das
and
push
jnp
sub
lcall
shll
jmp
loop
fsts
repnz
repz
sbb
xchg
aam
in
pusha
dec
xorl
fcompl
dec
loope
jecxz
xchg
lret
dec
mov
lods
incl
jmp
xchg
ja
push
rcll
neg
gs
dec
mov
xor
sub
jmp
loope
xor
jl
in
xor
faddl
sub
decl
and
add
cmp
and
decl
pushl
adc
pushl
cld
in
pop
in
pop
fst
fwait
mov
pushl
loope,pt
call
decl
ljmp
ljmp
fdivrl
incl
dec
arpl
pop
es
lcall
nop
lea
mov
mov
negl
sbb
ret
ret
pushl
aaa
out
enter
decl
cmp
incl
ljmp
pushf
js
dec
mov
std
sti
sub
cwtl
dec
arpl
test
call
sub
roll
scas
test
insb
push
jge
push
dec
jno
jb
pushf
fstl
cmp
lcall
sub
invd
js
into
shr
stc
inc
add
incl
incl
jb
jg
sub
incl
adc
pop
mov
cmp
jmp
cmp
scas
ljmp
outsb
scas
jmp
outsl
mov
dec
xor
incl
call
call
repz
and
fcmove
lret
popa
les
or
ljmp
insl
adc
adc
pop
shlb
sub
inc
pusha
in
push
scas
lret
add
lcall
pusha
pop
mov
test
jle
jmp
jb
cmp
jmp
dec
pop
repz
dec
sbb
pushl
decl
cmc
jecxz
scas
or
pushl
push
pop
push
enter
scas
jno
mov
jo
or
jmp
decl
push
ficoml
in
mov
ret
pop
imul
jnp
incl
test
mov
cltd
jecxz
dec
sbb
call
mov
inc
stos
enter
cmpsl
jbe
xor
add
fs
xchg
decl
push
incl
rol
xchg
cwtl
and
dec
imul
cltd
and
in
sbb
insb
stos
ljmp
ret
pop
and
es
inc
and
call
incl
sbb
mov
jl
es
ljmp
xlat
xor
notb
pushl
ljmp
add
call
notl
outsl
add
cwtl
stos
incl
call
or
out
push
dec
xchg
xor
loop
call
fcmove
push
bound
cmp
je
jb
xor
inc
adc
ja
pop
jle
mov
icebp
jl
jl
sbb
cmp
leave
inc
test
out
leave
bound
cmp
mov
decl
xchg
lret
push
es
out
or
fildl
inc
mov
cs
jmp
xor
sub
and
cmp
pushl
int3
ret
xor
xchg
lods
pushl
mov
cmp
decl
mov
xchg
inc
cmp
xchg
pushf
sbb
das
mov
enter
pop
or
adc
outsl
testb
sbb
cmp
dec
lea
ljmp
fldcw
jns
shl
push
dec
in
jg
pushl
fisubl
dec
scas
decl
mov
fcoml
je
sub
and
pushl
mov
dec
icebp
jne
insb
fdivl
jb
ja
dec
xchg
xchg
leave
mov
insl
add
lcall
sbb
repnz
cli
bound
dec
test
incl
call
scas
ljmp
cmp
dec
adc
out
pop
jecxz
daa
sbb
incl
js
adc
pushl
push
popa
sahf
ljmp
divl
jne
cld
pop
add
ljmp
pushl
xchg
call
sbb
lcall
sub
adc
push
pop
stos
jmp
and
inc
inc
or
icebp
add
push
mov
pop
add
ljmp
jmp
and
call
inc
xchg
mov
in
inc
dec
aad
or
lds
rorl
inc
fcmovnbe
arpl
incl
ljmp
cmp
xchg
push
loopne
hlt
push
dec
mov
dec
ljmp
dec
mov
aas
jp
ficoml
mov
jne
pop
xchg
js
push
sub
incl
outsl
cmp
mov
mov
notb
ljmp
out
xchg
pop
iret
add
mov
shll
popa
subl
call
push
mov
add
incl
dec
sar
div
push
add
and
xor
cmp
mov
lcall
cmp
push
movsb
lcall
dec
mov
je
loop
orl
mov
sub
decl
and
ljmp
jns
xchg
dec
sub
pushl
iret
pop
dec
fs
push
pop
lods
dec
adc
out
jmp
call
std
aam
incl
lods
movsb
out
popa
js
bnd
or
decl
mov
clc
cli
loop
and
push
push
cmpsl
mov
mov
incl
jmp
lcall
das
loopne
scas
decl
mov
xchg
pop
out
dec
rorb
xlat
sbb
cmp
ret
decl
fwait
jecxz
cld
cmp
ljmp
jecxz
jno
ja
jns
ja
or
jnp
cld
mov
mov
cltd
jle
loope
push
push
dec
mov
push
loopne
or
sti
xchg
lret
add
incl
fistpll
lret
fwait
pop
lock
and
out
xchg
dec
xor
adc
stc
adc
loop
rcl
addr16
dec
mov
dec
add
jae
sbb
test
dec
inc
pushf
and
call
cltd
lret
rorl
enter
call
lahf
daa
fs
dec
or
out
xor
mov
roll
decl
mov
push
or
jmp
out
sub
inc
or
pushl
decl
jl
icebp
and
lcall
cmp
sti
out
pop
popa
iret
mov
jmp
inc
or
mov
ljmp
test
pushl
js
gs
and
ljmp
loop
clc
arpl
push
add
decl
out
pop
repz
jmp
stos
jmp
sub
pushl
dec
sub
push
out
lret
ret
mov
mov
or
dec
push
jno
xor
push
mov
inc
ret
dec
fistpl
jo
frstor
cmp
add
mov
mov
decl
clc
inc
jno
out
xchg
das
xor
in
scas
pop
loopne
movsb
jmp
scas
inc
mov
popa
adc
push
jb
xlat
jnp
lods
sbb
incl
push
call
push
push
dec
dec
mov
lcall
cld
pushl
pop
and
test
ljmp
jmp
dec
inc
push
ret
mov
adc
jmp
seto
and
incl
shr
or
incl
fwait
sarl
or
adc
jle
lret
mov
dec
pop
mov
mov
jle
int3
inc
xchg
mov
cmp
call
lods
xor
dec
pop
add
call
xchg
lds
jecxz
cld
jp
adc
les
aas
aas
cmp
sub
pushl
lcall
lcall
mov
add
decl
sahf
push
jb
out
movsb
dec
cli
call
je
orl
inc
xchg
leave
mov
call
nop
rorl
push
test
decl
mov
lcall
lock
incl
push
dec
fdivl
out
jg
inc
dec
add
decl
popf
dec
je
ljmp
push
dec
push
call
insb
inc
jb
mov
jmp
scas
ljmp
jge
lcall
inc
dec
or
cmp
call
adc
jmp
cs
decl
and
sti
in
xchg
and
je
shll
jecxz
fcmovu
push
out
mov
mull
sbb
mov
push
pushf
mov
sarl
adc
hlt
movsl
mov
push
in
mov
popf
test
fnstsw
jl
sub
lcall
xchg
movsb
decl
cwtl
pop
arpl
add
sbb
add
inc
mov
jg
xchg
inc
push
xchg
mov
fadds
inc
mov
pop
cs
ljmp
stos
test
push
dec
cs
lcall
shll
in
mov
mov
lods
push
jmp
pop
ret
jno
outsl
sahf
shlb
hlt
rorb
adc
int3
lods
inc
push
mov
incb
mov
decl
or
stos
call
add
jmp
jb
lcall
incl
lcall
cmpsl
push
cmc
mov
mov
js
or
adc
pushl
sbb
cmp
lcall
fwait
mov
jle
call
popf
mov
daa
xchg
aaa
stos
lcall
or
dec
outsb
das
into
rcrl
les
aas
inc
fldt
ljmp
push
jmp
cwtl
std
enter
jge
cmp
xor
inc
and
push
mov
mov
push
aaa
aad
sahf
adc
sahf
jae
das
jmp
loopne
inc
xchg
rorb
repnz
notb
addr16
popf
test
decl
call
xor
sarl
jns
lock
inc
lret
inc
cs
jmp
jg
mov
xchg
popa
push
xchg
dec
dec
xchg
jmp
adc
call
je
std
jmp
popf
ljmp
fldcw
cwtl
add
leave
pushf
pop
in
dec
ljmp
call
cs
decl
in
jbe
cli
popf
out
sahf
insb
pop
mov
loope
push
sbb
or
push
paddb
mov
cli
lods
decl
or
ljmp
call
call
popf
int
pop
jmp
imul
add
dec
xor
lods
lcall
jmp
jl
or
jnp
push
pushf
pusha
pushf
rorl
bound
pop
add
shr
mov
mov
inc
push
pop
lret
jmp
inc
xor
mov
sub
cmp
lcall
shl
clc
fs
repnz
mov
mov
pushl
out
add
dec
ss
ret
adc
les
xor
rol
mov
cmpsb
decl
fisubrs
jecxz
xchg
icebp
cmp
fsub
jb
and
pushl
pushf
mov
sub
ljmp
ljmp
pop
pop
lods
and
lcall
dec
push
cwtl
fstps
and
jmp
dec
dec
or
mov
adc
int
jb
ljmp
or
gs
push
pop
xchg
fucomip
sub
ljmp
mov
jle
xchg
decl
imul
jecxz
sub
ljmp
xchg
call
xchg
push
ljmp
jmp
test
fwait
imul
or
adc
loop
fdivrs
push
adc
lcall
aad
pushl
mov
imul
incl
nop
aam
insb
adc
out
stos
push
jge
jno
mov
ljmp
lcall
cltd
into
scas
push
mov
ljmp
pushl
stos
jmp
xor
outsb
ret
shlb
lahf
int3
das
fwait
movsb
ljmp
pop
dec
mov
cmp
notl
fistpll
stos
inc
and
dec
push
jbe
xchg
pop
mov
shr
nop
pop
push
scas
movsl
mov
call
mov
cld
xor
loop
in
and
ljmp
jmp
xchg
mov
ljmp
sti
jg
jnp
std
rol
cld
cmc
mov
mov
addr16
ljmp
cmp
jmp
ljmp
push
sbb
mov
call
fcmovb
inc
mov
gs
aam
fisubrl
fcmovnu
xlat
cmpsl
loopne
pop
cs
ljmp
push
ljmp
sbb
xlat
jg
pushfw
fidivs
jmp
and
aam
jno
int
enter
adc
fxtract
imul
decl
decl
in
data16
sahf
dec
inc
pop
loope
xor
decl
call
loop
dec
sbb
pop
cmpsl
xchg
ficompl
lcall
je
bound
or
call
ret
cmc
xchg
lods
ljmp
lcall
mov
in
mov
push
ja
fs
jmp
mov
sub
ljmp
dec
repz
lock
addr16
inc
adc
pop
cwtl
xchg
mov
jmp
mov
lcall
clc
idivb
pop
cmp
icebp
push
out
mov
loope
arpl
push
jp
jecxz
icebp
rol
cmpl
vmwrite
mov
decl
jmp
mov
jmp
mov
push
mov
movsb
jmp
roll
sbb
fistpll
pop
daa
divb
ja
or
lcall
das
mov
jmp
aaa
nop
sbb
pop
cmp
mov
insl
sub
pushl
ja
in
push
lret
pushl
sub
incl
lcall
popa
lret
xchg
ja
mov
fs
jmp
jmp
incl
cwtl
and
jmp
and
jl
pushf
xlat
fisubrs
incl
cmp
call
and
cmc
sbb
pop
icebp
add
and
out
ds
jno
pop
pop
jae
xchg
test
mov
or
call
rclb
mov
aad
pushl
lret
ljmp
mov
decl
push
dec
test
stc
push
jmp
fcompl
mov
dec
jno
xchg
in
je
sbb
xor
mov
out
pop
mov
sub
lcall
push
out
xchg
mov
lcall
xchg
or
sub
decl
mov
pop
and
inc
cld
data16
dec
outsl
rclb
notl
cmc
or
incl
les
int
arpl
bound
jmp
lcall
lcall
lds
pushl
dec
scas
pushl
stos
incl
pushl
push
fldenv
xchg
inc
sub
incl
dec
mov
call
cmp
xchg
and
jmp
int3
cmp
mov
fistpl
mov
xchg
xchg
xlat
outsl
insl
les
jmp
test
jmp
lock
dec
xchg
dec
lahf
jg
cmp
decl
cmp
rorb
decl
imul
xchg
xchg
ret
dec
insb
lret
scas
call
mov
ljmp
pmaxub
xor
les
pushl
shl
xchg
fisubs
cmp
jmp
jmp
ja
pushl
cmp
ljmp
xorl
stc
sbb
out
dec
jge
out
jmp
jle
stc
jmp
xchg
and
rcll
outsb
hlt
iret
adc
mov
decl
loopne
repnz
int3
movsl
ror
push
mov
decl
lods
idivb
mov
push
fisubrs
pop
mov
pusha
add
decl
adc
dec
or
lcall
add
fbstp
insl
mov
call
fsts
dec
sub
ljmp
mov
push
cmp
into
push
sub
pushl
outsl
jno
lcall
mov
decl
orl
push
cmp
insb
mov
movsb
lcall
stos
jmp
aad
push
adc
mov
jmp
imull
sbb
sahf
sbb
shll
pop
mov
decl
test
push
mov
dec
in
testb
mov
fcompl
jnp
stos
jae
pop
test
inc
inc
repnz
jb
out
scas
pop
aas
inc
mov
xchg
inc
inc
ret
adc
dec
cmp
outsb
mov
mov
push
ja
aam
insl
sbb
push
movsb
lcall
push
sbb
ficompl
in
pop
pop
sti
cli
mov
cs
incl
xor
lock
aas
inc
test
xchg
or
dec
std
std
mov
call
incl
pop
mov
imul
dec
daa
fsts
mov
std
sub
dec
popf
jecxz
jecxz
jle
xchg
call
add
pusha
jecxz
loope
jae
mov
inc
in
cli
lock
adc
insb
outsl
insl
xchg
adc
inc
addl
arpl
decl
call
aam
mov
rorl
sub
call
cmp
sub
jns
jmp
push
popa
cwtl
mov
nop
dec
rcrl
fisttps
fmull
lcall
xchg
mov
sbb
pop
jmp
lret
inc
xor
pop
cs
incl
push
xor
ljmp
loopne
push
in
lahf
push
dec
aas
es
decl
stc
clc
out
sbb
mov
jmp
dec
scas
pushl
jnp
ljmp
push
dec
xchg
dec
xor
je
pushl
imul
push
push
leave
pusha
js
or
jle
mov
dec
fs
adc
mov
jmp
lock
pushl
nop
mov
mov
testb
push
pop
sub
jmp
ljmp
jmp
jne
mov
pop
test
aas
outsb
dec
ficoms
mov
sti
test
cld
and
mov
out
scas
sub
pop
ja
xor
outsb
imul
pop
aas
pop
fstpl
lahf
shll
jmp
cs
push
sub
call
push
xchg
cmc
subl
sbbl
je
les
incl
mov
incl
arpl
shr
popa
pop
sub
and
loopne
inc
sbb
xchg
xchg
pop
sbb
lcall
jmp
mov
sbb
ret
adc
pop
add
aad
sub
incl
mov
jnp
addr16
mov
enter
call
out
push
pop
or
incl
dec
sbb
lcall
jl
pop
or
cmp
push
cmp
decl
add
sub
pushl
fldl
decl
call
fcmovu
js
cltd
mov
mov
adc
mov
jno
sub
call
dec
aam
or
push
stos
inc
icebp
inc
sbb
data16
mov
inc
sahf
daa
sbb
jbe
cmc
aaa
xchg
dec
xchg
test
fdivs
inc
jecxz
scas
push
loopne
mov
dec
test
lods
ja
int
test
incl
lcall
ljmp
call
imul
out
loop
ljmp
and
orl
data16
jmp
cmpsl
or
aas
icebp
jo
mov
lea
push
dec
push
in
sub
decl
dec
and
ficomps
cmp
std
jp
fistps
and
jle
shrl
decl
shr
jp
xchg
and
call
jecxz
fidivrs
jmp
dec
and
pushl
and
inc
xor
sub
out
add
fdecstp
jne
sub
rcl
or
xor
lret
xor
jecxz
mov
add
call
xchg
xor
jmp
call
push
jb
out
fldt
xor
loopne
cmp
incl
pop
mov
mov
jae
inc
ljmp
decl
call
lcall
insl
incl
cmpsb
call
aas
cmpsl
xor
xor
dec
mov
icebp
push
arpl
pop
daa
or
ds
pop
mov
out
test
incl
es
ljmp
popf
je
test
incl
or
call
xor
subl
das
and
jmp
jmp
sub
dec
push
test
jmp
repnz
call
ljmp
pushl
call
jb
push
testl
clc
out
jbe
popf
pushf
aas
fildll
fstps
jns
cld
and
in
cltd
mov
incl
js
decl
and
call
dec
les
pop
mov
decl
js
sub
jmp
hlt
pushf
notl
mov
test
decl
das
mov
decl
inc
mov
xchg
push
sbb
inc
shrb
inc
sub
in
jo
jecxz
mov
leave
pop
push
mov
incl
xor
ljmp
push
je
sub
ljmp
cld
test
dec
adc
push
adc
xchg
sbb
lret
insb
mov
push
cmp
call
and
mov
lcall
adc
dec
push
jl
fisubrl
xchg
ljmp
jmp
jae
pop
adc
cmp
clc
jmp
add
inc
sbb
gs
xchg
popf
xor
cmc
jge
sub
sub
jmp
nop
xor
loope
inc
cwtl
xchg
add
incl
fs
je
and
jmp
xchg
lret
call
add
ljmp
xlat
and
clc
mov
bnd
xchg
mov
adc
in
push
xchg
insl
insl
outsl
cwtl
rcll
mov
cmp
fists
ret
dec
push
mov
fwait
cmp
decl
mov
jmp
jp
aad
jo
scas
xchg
sub
inc
pop
jb
stos
shr
push
mov
dec
xchg
push
add
lcall
jmp
in
bound
adc
clc
lcall
lcall
into
cmp
lcall
out
xor
lds
cmp
cwtl
jae
ljmp
cs
decl
js
jmp
loopne
jg
xchg
adc
ljmp
inc
fisubrl
lods
add
call
fisttpll
pop
sbb
jge
clc
mov
push
je
ret
add
pushl
inc
cmc
cltd
cwtl
jne
decl
aaa
xchg
dec
out
movl
gs
loop
jmp
cs
call
fcomps
jbe
add
dec
ds
mov
jmp
mov
in
cmp
mov
decl
and
out
mov
cmp
out
call
fildl
call
sbb
insl
ljmp
sbb
ficoml
mov
mov
in
inc
pushf
jae
mov
push
adc
mov
cmp
jno
xchg
push
test
fimuls
call
cmpsb
call
out
leave
add
decl
call
and
call
das
test
mov
dec
hlt
add
jmp
arpl
decl
lea
cwtl
push
lds
adc
scas
out
leave
lds
lcall
mov
incl
ja
mov
xchg
push
ljmp
incb
cli
sbb
cmp
sub
jmp
adc
push
lcall
ret
inc
fsubrs
decl
incl
lcall
push
adc
sahf
cmpsb
ljmp
scas
call
lret
std
scas
inc
push
sti
push
scas
lcall
imul
scas
inc
sbb
sbb
jmp
popa
out
xor
mov
lgs
jmp
aam
test
in
add
cmpsl
push
jmp
push
int
xchg
shr
jmp
popf
into
jecxz
or
pop
push
adc
jbe
pop
sbb
imulb
pop
inc
push
mov
leave
call
jmp
in
and
add
in
dec
push
sbb
decl
adc
cld
das
pop
cmp
call
mov
pop
into
sbb
and
decl
push
int3
loope
mov
xchg
lcall
incl
jnp
call
adc
ljmp
mov
jmp
cli
pop
and
decl
inc
fbld
jge
insl
inc
mov
je
pop
out
and
call
lret
mov
jbe
mov
cmp
call
xchg
jmp
jo
inc
cltd
adc
lods
decl
jmp
jmp
loopne
arpl
or
incl
sbb
and
sub
decl
lcall
decl
incl
mov
in
in
test
std
jp
pop
test
ljmp
call
int3
loope
dec
out
jge
subl
mov
call
jmp
push
dec
movsl
inc
aad
ror
rol
sub
lcall
es
incl
pushl
mov
fimuls
jmp
pusha
jle
iret
outsb
add
call
mov
test
or
incl
es
ljmp
cmpsl
ret
incl
pushl
xor
lcall
and
cmp
inc
mov
fst
jne
sub
adc
jmp
or
mov
jmp
std
arpl
pop
and
scas
jge
pushl
mov
pop
inc
mov
incl
lea
std
adc
add
lcall
jl
add
jmp
dec
mov
lcall
clc
push
jbe
jo
pop
ret
imul
iret
aad
ljmp
xchg
mov
mov
ljmp
pusha
int3
xor
pop
xchg
bound
push
sub
mov
pushl
mov
decl
jge
inc
mov
mov
dec
and
inc
mov
mov
xchg
jecxz
wbinvd
sahf
push
and
call
out
out
cld
cmc
dec
dec
inc
test
bound
lea
ljmp
pushl
clc
add
pushl
imul
cli
add
cld
adc
es
call
aam
ret
inc
mov
pushl
cwtl
push
std
pop
cmp
push
call
mov
pop
popf
loope
pop
adc
inc
movsb
fstl
mov
dec
icebp
aam
jns
sbb
push
xor
dec
dec
xchg
push
jnp
stc
leave
push
call
pop
or
jmp
nop
fildll
pushl
cmp
decl
sti
jo
sub
pushl
jle
xor
mov
enter
jmp
jg
out
lods
pop
pushf
daa
jge
push
xchg
xor
push
lret
out
fwait
cmp
push
in
jmp
ss
pop
hlt
jmp
xchg
stos
cld
mov
cmp
rcrb
in
xchg
incl
or
leave
add
add
dec
push
incl
fbld
xor
xlat
mov
js
xchg
sub
sbb
cs
ljmp
push
les
sti
pop
push
jmp
loop
ret
push
decl
dec
ret
push
jmp
shrl
decl
int
mov
call
fdivl
repnz
pop
push
sbb
and
lcall
daa
out
xchg
incl
jns
and
in
mov
add
pushl
sbb
loopne
adc
scas
aam
jne
cs
ljmp
adcl
jmp
sub
pushl
cmp
lcall
loop
pushl
scas
jmp
xchg
incl
dec
out
outsl
stc
arpl
jmp
inc
sbb
mov
cmp
mov
ljmp
pop
add
dec
add
pop
dec
ret
subl
test
ljmp
jb
sbb
pop
and
out
jecxz
sbb
incl
fidivrs
sbb
sbb
dec
and
incl
pop
cmp
ljmp
cmp
imul
jns
mov
daa
pop
pop
pop
adc
test
push
jecxz
scas
ljmp
shr
adc
cmp
and
xor
loope
jg
ret
outsb
ds
push
int3
mov
lcall
addr16
and
pushl
jmp
cltd
xor
call
out
pop
xor
jnp
jp
ja
inc
jp
test
lcall
sbb
imul
sarb
ljmp
jp
or
jmp
incl
cmpsb
incl
adc
push
pop
sub
stos
call
inc
hlt
sarl
jbe
inc
mov
jmp
inc
mov
inc
or
add
aaa
test
iret
or
pushl
fwait
sahf
xchg
xor
push
lcall
dec
mov
pushf
das
std
decb
test
mov
std
adc
movsb
push
test
incl
decl
xchg
cmpsb
push
stos
lcall
and
call
in
data16
mov
jae
gs
or
mov
mov
lcall
sti
mov
xor
xchg
jge
cmpsl
dec
mull
mov
call
adc
orl
cmp
mov
int
sahf
dec
mov
push
and
cmp
lcall
or
lcall
rcrl
mov
jb
lock
pop
jnp
dec
or
pop
inc
into
pop
sub
lea
lds
dec
inc
loopne
push
jno
insl
clc
add
jmp
sub
and
pushl
outsb
int
jne
in
cmp
decl
push
call
sbb
jne
lock
jg
lcall
int3
xchg
decl
daa
sbb
mov
pushl
into
push
xor
cmp
shlb
lcall
cmp
jmp
ja
xor
call
and
imulb
js
mov
cld
pop
jns
and
xlat
popf
add
mov
or
test
std
add
jmp
lcall
cmpsl
outsb
and
ret
sub
pop
and
lcall
fiaddl
incl
faddp
shrl
enter
dec
les
jmp
or
pushl
cmp
sbb
stc
mov
call
sbb
xor
push
jns
ljmp
pop
jne
pop
cwtl
lds
add
decl
jmp
jmp
aad
repnz
or
jmp
sub
jmp
push
dec
cmpsb
pushl
sub
inc
inc
mov
jle
inc
dec
cmp
outsl
inc
xor
call
call
incl
out
sbb
push
shlb
pushl
nopl
incl
and
ljmp
outsb
push
mov
ljmp
incl
mov
xor
pushf
push
arpl
pop
jg
inc
xchg
mov
mov
ljmp
pushl
in
ds
adc
cmp
incl
fsubr
add
jmp
push
cltd
cwtl
sub
iret
and
inc
inc
icebp
push
pushf
inc
or
jmp
sarl
out
jmp
cmp
aad
jmp
ljmp
dec
popf
fdivr
sub
call
adc
sub
fildl
es
fildll
scas
stc
pop
sbb
sub
jmp
fidivrl
out
call
pop
xor
ja
xchg
mov
inc
pop
cs
incl
push
mov
jmp
fwait
iret
pop
in
cmp
rorb
into
pop
and
pushl
call
or
sti
out
dec
addr16
jl
das
enter
xchg
xchg
pop
jbe
add
jmp
sub
xor
pop
cli
inc
xor
incl
add
arpl
jmp
call
sahf
lahf
dec
clc
test
test
call
add
fld
stos
call
pusha
sbbl
mov
iret
hlt
sbb
decl
lcall
into
xchg
leave
sub
sub
incl
sbb
sub
push
test
pushl
ficompl
adc
inc
mov
adc
call
les
cltd
push
imul
decl
call
pushl
outsl
popf
jb
sbb
dec
xlat
aas
push
int3
in
inc
loopne
inc
push
mov
out
in
out
pop
and
mov
mov
lcall
test
decl
js
lea
mulb
xor
jb
stc
gs
and
decl
mov
dec
addr16
dec
xor
or
lcall
inc
in
sub
incl
fldl
pop
cmc
js
leave
xchg
lahf
mov
adc
and
lcall
loopne
xchg
sbb
adc
mov
mov
push
cmp
mov
inc
imull
aam
jp
ret
and
pushl
push
fstl
add
ds
add
mov
xchg
int
lcall
jae
mov
inc
imul
out
fmul
sbb
fwait
cmc
std
in
in
jmp
and
inc
mov
jmp
mov
decl
mov
sub
mov
pushl
out
lcall
push
xchg
inc
push
cmp
or
fistpll
das
int
push
lcall
gs
imul
pop
xor
mov
sbb
jmp
dec
stos
daa
xor
lahf
sti
cmp
mov
notb
push
mov
xor
dec
insb
mov
jmp
mov
mov
decl
mov
inc
xchg
cmp
inc
jp
and
dec
in
in
incl
stos
inc
cmp
decl
jmp
dec
movsb
decl
mov
cmp
adc
cmpsl
fs
mov
fimuls
decl
jmp
stos
scas
decl
sub
jmp
sbb
xor
call
es
mov
dec
xchg
ljmp
jmp
mov
push
lcall
jns
jb
add
ljmp
jge
and
popf
inc
cld
pushf
mov
sub
jmp
pop
mov
decl
insl
stos
call
xbegin
push
cmp
xchg
lods
outsl
test
stos
dec
shll
add
lods
hlt
nop
pop
pop
fisttpll
das
loop
jg
clc
mov
jmp
or
decl
in
pushf
or
incl
jb
mov
mov
push
fldenv
push
dec
mov
decl
push
xchg
rcl
imul
xor
imul
call
xorl
push
xchg
ficomps
jb
pop
rcrl
cs
ljmp
inc
testb
lcall
adc
mov
mov
add
into
loopne
sbb
mov
insb
mov
scas
call
popf
xchg
mov
sbb
pop
add
ljmp
frstor
call
ljmp
sahf
into
lods
jmp
js
mov
dec
push
jmp
mov
bound
xchg
pushl
scas
ljmp
cli
jp
push
call
mov
lcall
jg
js
mov
testl
inc
fcompl
mov
clc
inc
ficomps
mov
call
fimull
and
jnp
mov
out
cmp
mov
push
mov
cmpsl
test
decl
cmc
jmp
pushl
in
or
ljmp
xchg
mov
push
out
sbb
andl
pushl
dec
stos
out
and
in
xchg
mov
fs
jmp
xchg
dec
pop
cmp
pushl
mov
adc
pop
loop
adc
mov
cmp
push
call
call
jp
js
dec
insl
imulb
aad
inc
pop
je
or
adc
pushl
dec
jp
push
cmp
jmp
dec
sahf
adc
test
ss
xor
loopne
xchg
popa
mov
popa
inc
fidivl
and
cmp
sub
lcall
out
mov
ljmp
pop
inc
mov
sub
jmp
fistps
call
in
sbb
dec
fstp
cwtl
push
cmp
mov
cmp
call
scas
jl
incl
or
je
fbstp
mov
je
call
dec
sub
pushl
pushf
jno
call
or
bound
and
call
lcall
ljmp
fsubrs
mov
cmp
push
negb
push
xor
sbb
ss
imul
in
or
decl
cltd
lret
mov
decl
pop
dec
pop
int3
sbb
inc
pushf
aaa
mov
pop
arpl
ret
sbb
jl
push
test
out
push
or
incl
jge
jae
cmpsl
stc
vmovhps
mov
frstor
hlt
inc
sbb
popf
mov
ret
mov
loope
sub
lcall
cmp
fs
sbb
test
pusha
dec
sub
call
xor
pushl
jp
in
es
in
outsl
and
call
mov
cli
jns
sub
call
push
cmp
push
xchg
bound
test
call
fs
sbb
add
mov
into
sbb
push
hlt
insl
push
lcall
das
faddp
aas
out
mov
mov
or
inc
mov
incl
mov
lcall
decl
mov
sub
sbb
pop
push
sahf
iret
stos
incl
outsb
jne
nop
and
sarl
mov
dec
cmp
pushl
xor
lcall
lcall
mov
jmp
incl
jmp
cmp
ret
movsl
sbb
xchg
imul
lcall
fidivrs
jmp
in
xor
fnsave
adc
add
cli
lods
jmp
jg
test
pop
sahf
in
pop
aad
xor
push
push
mov
lcall
dec
fimull
ljmp
push
cmpsl
iret
pushf
clc
mov
dec
xor
pop
sub
incl
ljmp
pop
and
call
mov
jns
xor
pushl
test
test
cs
mov
mov
sbb
mov
movsl
sub
fmull
push
call
mov
sub
add
lcall
and
call
incl
jmp
int3
push
out
aam
loopne
xchg
push
cmc
cmpsb
lcall
mov
xchg
pop
imul
jle
rep
cmpsl
test
mov
call
shll
jmp
call
aaa
mov
jle
mov
jb
sub
incl
xlat
dec
mov
push
xor
addr16
aam
call
loopne
bsf
push
inc
xchg
xchg
aaa
cmp
iret
inc
cmpsb
call
incl
add
sbb
xor
cmpsl
scas
mov
daa
sahf
jge
mov
or
mov
cmp
and
push
shlb
cld
mov
and
out
rorl
mov
mov
out
add
jmp
frstpm(287
jne
mov
movb
jmp
jg
cmpsb
fbstp
mov
idivl
ret
pushf
insl
xorl
iret
aas
mov
and
ja
add
decl
lcall
inc
loop
jg
test
jnp
stc
insl
aaa
out
lret
cli
aam
scas
call
hlt
jmp
inc
xchg
mov
lcall
sahf
fdivp
and
sbb
pop
ret
inc
fs
add
ljmp
decl
lret
mov
jge
add
mov
movsl
pushf
je
pushl
ret
incl
stos
jbe
fimull
sahf
pop
inc
push
stc
xor
adc
fucom
push
ljmp
lcall
cmp
stc
cmp
ljmp
fisubrs
jnp
mov
dec
mov
imul
call
jp
jb
mov
lods
incl
mov
mov
push
inc
mov
xchg
call
xor
add
pushl
dec
sbb
call
mov
call
jl
ljmp
add
cmp
ljmp
add
pop
out
pop
scas
rcrb
xor
mov
mov
jmp
cmp
push
inc
sbb
bound
pop
imul
jnp
jmp
push
fildll
cli
push
ficoms
push
dec
mov
into
sti
dec
in
or
incl
push
lcall
repnz
adc
ljmp
lcall
insl
loope
aam
sub
adc
in
ljmp
jge
mov
into
cs
call
std
pop
jl
movsb
incl
call
popa
push
mov
push
sbb
xor
mov
dec
f2xm1
cld
lods
pushl
lea
loop
arpl
fmul
inc
xor
dec
rcll
xor
test
lcall
cld
cmp
in
pop
xchg
xor
jmp
sbb
in
push
je
js
insb
and
and
fcom
cmp
stos
call
call
jge
nop
jne
sub
lods
call
xor
mov
and
sbb
rolb
pushl
push
pushl
inc
sub
pushl
pop
cltd
or
pushl
inc
sub
fidivrl
mov
ljmp
dec
mov
pushl
jmp
in
movsb
ljmp
in
pushl
loopne,pt
movsb
call
ljmp
inc
les
iret
mov
jmp
movsb
call
cs
in
mov
add
jmp
jnp
ss
incl
je
mov
out
repz
cmp
incl
jnp
cwtl
inc
pop
je
decl
cmp
popa
filds
cmp
fldl
pop
sbb
pushf
test
lcall
xchg
pop
pop
mov
test
incl
popf
rsqrtps
push
aas
rcrl
les
push
iret
sbb
sub
xchg
ds
push
ss
jmp
fadds
push
inc
push
incl
out
popa
pop
shr
icebp
adc
cld
xchg
jmp
lcall
jo
cmc
xlat
xchg
cs
aas
das
xor
adc
dec
inc
mov
mov
xor
js
push
jo
int3
mov
decl
filds
jnp
cwtl
insl
or
clc
lret
rorb
jge
test
lcall
jne
sbb
add
ljmp
lcall
stos
push
cmp
mov
or
xchg
mov
movsb
pushl
xchg
pop
push
adc
decl
pusha
mov
incl
mov
call
dec
add
decl
add
lcall
push
jmp
xchg
lcall
mov
and
jmp
jp
or
decl
adc
cmp
push
adc
or
jmp
pop
inc
fisubs
mov
call
inc
mov
inc
or
adc
jmp
loope
add
incl
add
cmp
pushl
ja
adc
push
inc
inc
test
incl
lcall
push
incl
call
jno
cmp
das
sbb
cmpsb
call
shl
dec
push
pop
das
dec
in
add
adcl
inc
push
jmp
add
ljmp
decl
pushl
loope
bound
cwtl
aad
jmp
scas
mov
clc
pushf
mov
pop
jge
adc
in
out
lcall
add
push
xchg
xchg
sti
push
jmp
popa
dec
add
out
add
cmpsl
fnstcw
mov
mov
and
jecxz
sbb
out
test
decl
std
scas
jmp
mov
sahf
in
or
das
mov
insl
jmp
fcmovnb
sti
dec
jne
push
jmp
dec
movsb
inc
cmc
lcall
or
xor
daa
aaa
xchg
add
rcl
scas
mov
lcall
ljmp
popf
xor
decl
jmp
jnp
jnp
fwait
loopne
ds
dec
pop
mov
pop
rcr
xchg
adc
pushl
pop
sub
pop
add
ljmp
jg
scas
decl
xor
ret
cs
fbld
pusha
adc
sub
incl
in
lahf
cmpsl
js
das
sbb
stos
cmc
popa
mov
in
jecxz
loop
call
sub
cmp
decl
repnz
jle
test
jmp
aad
mov
decl
insl
test
jo
ds
in
push
jle
push
out
sub
shrb
jmp
pusha
jno
incl
mov
inc
stos
push
or
pushl
lcall
xlat
cli
sar
in
xchg
test
into
dec
cld
jmp
jge
incl
popf
test
or
mov
jmp
rorb
dec
hlt
xchg
dec
jne
xchg
std
fwait
sbb
popl
cmp
scas
mov
incl
xchg
dec
and
pushl
aas
pop
and
fwait
mov
pop
stos
jmp
decl
mov
lcall
into
adc
inc
test
jmp
loop
mov
jmp
mov
sbb
inc
sbb
ds
pushl
es
cmp
lcall
sbb
ljmp
call
adc
fbld
mov
cmc
test
cs
fbstp
add
incl
loope
xchg
add
pushl
inc
insb
popa
sub
es
decl
xchg
icebp
sarb
mov
lea
or
fstpl
mov
dec
mov
pcmpeqb
std
push
and
call
adc
cmpl
adc
adc
lods
push
loop
popa
sub
cmp
fwait
sub
xchg
out
dec
popa
mov
dec
testl
jno
das
test
push
cmp
xchg
adc
xchg
stos
divb
xchg
xorl
push
inc
pop
ja
ret
out
fwait
movl
sub
jmp
sbb
dec
xchg
ds
mov
dec
imul
mov
stos
incl
add
jle
mov
pop
enter
outsl
push
jmp
jp
fwait
add
jmp
push
cmc
xchg
inc
push
push
fstps
incl
call
fldcw
sbb
in
leave
in
sbb
dec
cld
in
iret
aam
cmp
jbe
je
push
shlb
incl
fcomps
sub
call
pop
mov
xor
cmp
incl
cmovo
mov
ljmp
jecxz
sub
decl
mov
arpl
pop
mov
pop
in
ret
mov
dec
adc
test
ljmp
inc
nop
pushf
lock
pushl
sub
aad
incl
dec
stc
sub
mov
mov
adc
xor
dec
jae
pop
shl
test
inc
jno
sub
add
fcmovb
mov
xor
enter
xor
push
cmp
jmp
push
iret
xchg
test
jmp
mov
sub
xchg
loope
pusha
test
add
decl
popf
repz
pop
push
and
inc
dec
cmpsb
incl
xchg
jae
mov
call
jge
aad
stc
fwait
sbb
xor
fsts
push
pop
and
test
call
cs
dec
mov
call
add
clc
cwtl
gs
lret
clc
std
sbb
dec
ja
push
xor
xor
lods
cmp
jmp
addr16
add
mov
pushl
sbb
insl
jb
mov
outsb
orl
lcall
mov
cmc
aas
sbb
xor
lret
push
pop
jge
xor
ljmp
dec
popa
cmp
ljmp
incl
loop
pop
inc
popa
jb
repz
movsl
jge
es
jns
decl
jge
enter
mov
jmp
push
int
jmp
dec
mov
sub
decl
pushl
mov
lcall
mov
sahf
dec
inc
push
adc
sub
sub
js
movb
xchg
pop
test
call
popf
pop
pop
inc
scas
pushl
aas
lcall
enter
ljmp
ljmp
in
popf
cmp
call
push
rorb
cmp
jbe
or
dec
push
fwait
pop
stos
call
imul
jmp
xchg
ja
and
pushl
adc
adc
xchg
movsl
mov
jmp
mov
cmp
mov
in
jle
push
movsb
push
outsb
bound
cmpsb
jmp
loop
and
decl
pushf
cmp
jmp
stos
call
rep
jns
aam
pop
xchg
les
push
sbb
in
dec
or
decl
addr16
cmp
pushl
call
fstl
jae
xor
or
pop
test
lret
in
dec
pusha
mov
jmp
adc
jne
adc
jmp
or
mov
mov
call
call
sub
incl
jg
fisubrs
mov
stc
mov
pushl
xchg
add
jbe
mov
fs
addr16
stc
jmp
decl
push
push
push
pusha
dec
movsl
sub
std
add
ljmp
int
cmp
cmpsl
cmp
rclb
hlt
mov
incl
outsl
stos
mov
gs
xor
rcrl
es
jmp
decl
mov
pushl
repnz
jmp
je
imul
jne
adc
sbb
mov
dec
bound
sub
fistpll
xchg
xlat
mov
push
rcll
decl
dec
lcall
pushl
inc
imul
mov
sbb
jge
stc
out
repz
lods
imul
mov
leave
imulb
call
ror
pop
bound
mov
mov
decl
mov
mov
decl
or
lcall
adc
xor
xchg
push
xlat
mov
push
repz
or
incl
lcall
sbb
sub
incl
call
movsb
pushl
fsts
xchg
movl
decl
mov
pushl
mov
ljmp
js
and
jns
cmp
test
push
cmp
push
bound
gs
loopne
push
cltd
imul
nop
push
jle
sti
imul
ljmp
mov
incl
incl
stos
call
cmp
pop
sbb
ja
mov
jmp
xchg
xor
inc
jp
daa
or
call
icebp
lods
pushl
adc
decl
lcall
xchg
pop
cmp
lcall
sbb
cmp
and
mov
mov
out
or
mov
add
in
cs
push
repnz
loope
mov
data16
das
inc
bound
xor
sbb
mov
cmpsl
inc
push
pop
shll
pushf
testl
addl
inc
rol
xlat
imul
pop
mov
lcall
dec
mov
pushl
jmp
cmp
incl
ljmp
jae
mov
insb
shrl
ljmp
dec
xchg
mov
call
decl
pop
adc
test
aas
push
into
jnp
mov
in
jmp
sti
into
lods
lcall
in
add
call
movsl
push
mov
adc
xor
aam
pop
adc
or
outsb
mov
push
pop
adc
cld
out
mov
call
sbb
xor
pop
and
cmp
jae
fwait
xchg
dec
in
cmp
call
cmp
adc
add
ljmp
fisubrl
xor
call
xchg
or
push
test
pushl
add
fistpll
decl
in
call
mov
cmp
enter
xor
divl
sbb
add
sti
out
or
jmp
add
data16
xor
xchg
mov
mov
jmp
fimuls
pop
js
loop
test
repnz
movsl
ret
jl
lock
mov
pushl
stos
jmp
sbb
pushl
jmp
aad
mov
out
sub
pushl
insb
and
jmp
xchg
sub
call
cmp
sbb
inc
pusha
rclb
mov
xchg
lods
ja
push
push
lret
incl
adc
or
sub
pushl
push
pushl
push
adc
popf
adc
mov
xchg
mov
aas
mov
incb
mov
out
jnp
jge
jmp
dec
lret
mov
lahf
rcrb
lock
fsubrp
push
lods
call
push
mov
ljmp
inc
mov
jns
and
pushl
pushl
sub
decl
add
lcall
insb
inc
pop
push
sti
ret
arpl
aas
sub
adc
mov
jle
in
shlb
mov
lcall
xchg
mov
ljmp
loop
cmc
aaa
xorl
xchg
cs
ljmp
fdivrl
jmp
and
lcall
jmp
fwait
push
push
xchg
in
cmp
decl
call
mov
incl
jnp
insb
add
pushl
cmp
or
ljmp
ljmp
xor
or
and
jmp
inc
jecxz
pop
jb
or
call
push
inc
xchg
mov
mov
jmp
in
incl
jmp
incl
fmull
out
and
decl
dec
mov
xchg
cmp
pop
leave
out
call
jle
and
lret
ljmp
call
xchg
dec
mov
mov
pop
push
ljmp
cld
jns
xor
pushl
lds
inc
mov
sub
push
paddusb
imul
push
dec
call
js
and
dec
mov
mov
leave
int
cmp
xor
cmp
or
outsb
push
adc
jae
incl
inc
cmpsb
dec
cmp
jb
pop
cmp
inc
les
testl
insl
pop
jb
cmc
dec
stos
dec
mov
decl
fldt
sub
mov
ljmp
testb
sub
jmp
pushl
fidivrl
sub
test
std
lock
push
sub
lcall
inc
ja
mov
call
nop
xchg
ljmp
jle
push
fnstcw
cmp
or
or
dec
cmp
mov
lcall
pop
add
ljmp
mov
ljmp
shlb
mov
push
pop
mov
incl
out
jb
add
mov
out
in
data16
test
call
repz
fwait
dec
popa
scas
jecxz
cmc
cmp
pop
adc
or
lcall
cmpsl
add
call
add
call
pop
fwait
js
not
and
incl
sub
dec
out
addl
or
decl
mov
cmp
scas
or
pushl
in
xor
incl
jmp
xorl
decl
cmpsb
decl
jge
jp
fisubs
pop
add
incl
pushf
mov
jbe
arpl
call
adc
dec
dec
xor
decl
xchg
ds
cmp
lock
or
and
decl
add
ljmp
mov
pushl
int3
test
jmp
decl
jmp
push
sub
jmp
cmpxchg
je
dec
jb
pop
adc
jne
jg
mov
cld
add
inc
repnz
negb
decl
decl
sub
pop
mov
mov
mov
cmp
cmp
sub
push
jae
lds
adcl
pusha
cmp
call
push
jnp
jmp
incl
lcall
pusha
lods
cmp
pop
js
leave
sti
pop
xor
pop
or
jmp
sbb
mov
insl
jo
arpl
dec
js
sti
js
repnz
out
xor
lcall
addr16
dec
sub
jmp
scas
mov
pushl
cmp
cmp
adc
pop
sbb
fstp
lret
lds
pop
shll
setne
loope
mov
xchg
aam
mov
jmp
xchg
mov
sub
pushl
faddp
inc
les
es
jmp
lcall
mov
ljmp
aad
inc
ficomps
insb
xor
test
js
ljmp
out
ss
cmp
push
cmp
dec
cmovp
addl
or
incl
mov
inc
out
jno
mov
out
imul
push
pop
jbe
push
std
push
push
dec
mov
xor
shlb
call
dec
adc
cmp
not
inc
popa
cmp
jmp
scas
xlat
test
mov
jmp
push
jmp
jg
incl
mov
push
incl
lcall
xchg
inc
jnp
stos
jmp
daa
adc
mov
jmp
decl
mov
call
inc
dec
add
in
loopne
mov
pushl
sub
lcall
jno
xor
stos
jp
mov
shll
into
mov
das
in
lcall
incl
adc
les
pushl
in
sbb
cwtl
pop
inc
sub
xor
pushl
ljmp
stc
cmpsl
dec
sbb
enter
decl
xlat
lds
push
incl
imull
fadd
pusha
jl
or
in
sbb
mov
incl
mov
push
mov
cwtl
fisubl
xor
jmp
dec
fistl
scas
ljmp
ds
mov
pushl
test
mov
cs
jns
push
fisubl
out
jle
lret
sahf
xor
pop
add
ljmp
xor
ljmp
xchg
pushf
sbb
mov
fcoml
fdivrl
mov
pushl
decl
dec
mov
decl
decl
lcall
xor
cld
push
ljmp
push
dec
gs
jg
pop
or
lcall
pop
enter
decl
ljmp
lret
add
call
inc
jae
xchg
outsl
nop
insl
nop
sarb
imul
pop
dec
mov
cmp
ljmp
xchg
je
enter
lahf
push
jo
xchg
pushf
mov
sub
dec
lods
fisubrl
dec
aad
dec
xchg
nop
test
pop
loope
movsb
pushl
ljmp
pop
lcall
incl
inc
stc
into
or
mov
stc
push
cmp
not
in
incl
mov
push
idivb
incl
loop
movsl
cmp
cmp
sbb
cmpsb
pushl
xchg
xor
decl
inc
cmpsl
jle
add
aas
sbbl
xchg
bnd
and
call
ret
ja,pt
dec
lods
incl
mov
mov
adc
push
mov
and
lcall
jmp
loopne
xchg
mov
dec
fisttpl
ljmp
call
inc
xchg
ss
inc
addr16
jl
inc
je
cltd
cld
sbb
cwtl
xchg
mov
daa
sti
jne
mov
aas
inc
jnp
push
dec
xor
in
out
jbe
hlt
int
ljmp
or
jmp
push
shr
or
ljmp
jmp
fistpll
ljmp
dec
jne
sarb
lahf
popa
jbe
clc
push
aas
sarb
lret
dec
orl
incl
jge
jmp
mov
decl
fs
call
sbb
mov
loop
jp
xor
mov
pushl
popa
ds
and
pusha
cmp
push
inc
sub
dec
ret
aas
sub
jmp
nop
loopne
lds
ds
cs
call
pop
mov
inc
push
stos
incl
or
incl
cmp
cmp
incl
sbbl
adc
push
cld
shll
outsb
aad
pop
lock
aad
hlt
sbb
jg
push
aad
pop
mov
lcall
inc
sub
decl
popf
aam
push
call
outsl
xchg
sbb
mov
and
lcall
cmpsl
leave
xor
xchg
mov
push
pop
and
incl
lcall
addr16
xchg
arpl
stos
cli
mov
sbb
inc
dec
jge
stc
sub
ljmp
pop
stos
call
push
push
inc
mov
incl
mov
in
adc
push
push
fnstcw
mov
mov
std
mov
dec
xor
es
pushl
clc
icebp
push
pop
fmull
adc
jp
xlat
mov
xchg
aaa
les
fdivs
mov
xlat
iret
mov
mov
cmp
les
push
repnz
notl
sbb
ficoms
pop
xchg
ds
mov
push
or
std
pushf
je
cmp
incl
sub
decl
in
mov
xor
call
loopne
adc
xchg
sub
mov
lcall
incl
pushl
stc
xchg
xchg
gs
dec
mov
test
ljmp
pop
mov
fbstp
lret
insl
push
cmp
out
xchg
jmp
call
push
or
stc
popa
iret
ret
mov
decl
lcall
lcall
pop
repnz
xor
roll
mov
add
pushl
and
ljmp
push
xchg
pop
std
pop
loope
lods
xchg
push
sbb
push
and
ljmp
xchg
push
inc
cs
decl
xchg
sub
jmp
adc
rol
inc
mov
out
add
ljmp
lds
dec
sahf
out
and
jmp
mov
jnp
in
frstor
lcall
cmp
push
adc
ds
ret
pop
movsb
lcall
cs
jg
inc
cltd
xor
mov
sahf
imul
aad
pushl
adc
jp
add
pop
xchg
sbbl
lahf
sub
mov
cmp
jmp
aas
lret
pop
xor
ljmp
jmp
cmp
dec
add
pop
test
sub
adc
pop
aas
jecxz
xchg
mov
fstpl
pop
inc
sbb
fdivrs
ficoml
jne
cmp
bound
insb
jns
mov
pushl
jmp
cld
cmp
dec
test
ljmp
cmp
shll
jmp
jne
cli
push
dec
cmp
adc
mov
jl
dec
loop
aaa
inc
adc
inc
push
and
lcall
testl
hlt
push
ljmp
and
pushl
inc
push
call
jecxz
repnz
setle
decl
fidivrs
sub
fstps
cs
inc
inc
add
inc
jbe
mov
push
add
mov
mov
sub
cli
xor
xor
out
lock
push
mov
call
lret
cmp
repz
xor
fwait
push
pushf
xor
les
pushl
jmp
pop
inc
sub
dec
inc
sbb
scas
add
decl
fadds
mov
pop
pop
cli
iret
or
ljmp
repz
mov
mov
jle
mov
incl
sub
pushl
mov
in
mov
sbb
jne
cmp
jmp
fnsave
pushl
push
std
pushf
jecxz
scas
incl
dec
imul
xchg
jecxz
decl
fs
decl
lcall
out
hlt
push
jns
cmp
inc
movsb
decl
and
jmp
call
fs
lods
mov
push
loope
jmp
call
pop
pop
pusha
mov
pop
sahf
dec
mov
add
lcall
outsb
and
stos
ljmp
push
cmp
jmp
lcall
cwtl
xchg
clc
push
inc
popa
inc
xchg
xchg
stos
jg
fs
pop
pop
aam
outsl
xor
dec
repnz
lea
push
aaa
xchg
ljmp
movb
dec
dec
jl
mov
mov
pushl
mov
pushl
out
in
enter
call
incl
in
add
lcall
hlt
pop
imul
push
dec
test
incl
shl
lahf
dec
mov
enterw
adc
decl
jmp
loope
es
incl
fs
pop
in
xchg
xchg
incl
leave
fildll
int3
test
jmp
test
and
decl
mov
fninit
das
xor
das
push
add
cmpsl
arpl
dec
rcr
push
sti
jno
repnz
or
bound
jg
xchg
ficoms
dec
cmpsb
sti
mov
cmp
js
cmp
push
jns
dec
pushf
adc
call
aaa
jmp
push
notl
out
mov
mov
incl
xchg
fisttps
movsb
pushl
test
call
mov
mov
jmp
add
stc
popf
jo
repnz
icebp
jns
shll
popa
gs
sub
cltd
pushf
hlt
paddsw
movsl
cltd
inc
ret
pushl
pop
dec
iret
lea
push
mov
call
cmp
lcall
fwait
stos
repnz
push
pop
xchg
inc
cmp
call
adc
mov
imul
dec
xlat
xchg
lcall
enter
aas
scas
ds
lods
ss
call
push
imul
test
incl
mov
push
aas
adc
jbe
dec
jg
shll
or
arpl
ljmp
lcall
jecxz
dec
adc
xchg
xor
sub
xchg
lcall
push
cmpsb
call
add
push
mov
decl
ljmp
cld
je
cli
icebp
scas
push
stos
mov
pushl
sub
call
insb
jl
or
call
push
ljmp
dec
push
xor
shl
mov
push
cmp
adc
mov
dec
sub
ffreep
iret
pusha
mov
lea
mov
mov
decl
pop
jb
cmpsl
mov
sbb
mov
fdivrl
jmp
cmp
lahf
push
ljmp
jmp
push
pushl
lret
cmpsb
ljmp
fadd
stos
adc
and
movsb
sti
xlat
fnstenv
int3
out
arpl
in
adc
mov
and
push
incl
jecxz
incl
mov
hlt
arpl
iret
mov
addr16
scas
sbb
cmp
ljmp
mov
decl
sti
aaa
mov
jmp
ficoms
into
ret
pop
iret
push
jno
push
push
jb
ds
call
pushl
test
aas
in
pop
push
lea
adc
lcall
insb
call
jne
rolb
incl
lcall
cwtl
ja
or
cmpsb
cmp
pop
fiaddl
push
push
fwait
cmp
jno
out
jno
jbe
inc
cmp
jae
es
decl
mov
xchg
cmp
decl
test
decl
jb
pop
mov
xor
adc
lcall
mov
cmc
pushl
dec
aad
cli
outsl
cmp
call
ljmp
adc
into
js
lcall
out
cmp
jle
call
cmp
sbb
les
incl
adc
cmp
mov
loope
data16
push
cld
stos
ljmp
mov
inc
les
mov
incl
call
ljmp
sub
pushl
je
ljmp
aas
fidivrs
decl
jmp
test
pushl
jg
aas
or
fdiv
aas
and
pushl
ds
jno
incl
add
jmp
fsubs
lods
repz
mov
cmp
pop
xchg
insl
cmpsb
jmp
lods
call
push
pop
xchg
push
push
call
xor
xchg
loope
mulb
pushl
pushl
cwtl
cmp
fistps
pop
dec
rcll
push
jnp
push
mov
lcall
mov
xchg
lods
inc
jnp
in
sti
fbld
cmp
mov
insl
pop
and
dec
in
jge
cmpsl
mov
inc
outsb
mov
div
sti
loope
ljmp
sbb
icebp
and
push
xchg
cmp
push
lcall
outsl
and
lcall
pop
dec
sbbl
cmpsb
lcall
dec
add
into
dec
rcrb
leave
or
dec
xchg
ljmp
nop
or
ljmp
jb
ljmp
inc
or
incl
dec
and
sarl
mov
ljmp
xlat
xchg
mov
ljmp
mov
jmp
aas
mov
mov
and
enter
sahf
movsb
cmp
mov
inc
fistps
pushl
cs
decl
sub
lods
pop
rcr
xor
cmp
decl
stc
loope
je
jne
test
jmp
leave
add
ljmp
pop
je
jge
adc
jl
mov
xor
xadd
pop
xor
jp
decl
pop
jb
data16
ficoml
sti
jmp
mov
stc
dec
addr16
add
push
mov
incl
add
pushl
lods
fisttpl
mov
cmpsl
sbb
pushl
neg
cmpsb
call
nop
adc
mov
pushl
js
push
jne
ds
call
incl
pushl
cmpsl
mov
mov
or
incl
xchg
test
sbb
mov
fnstenv
jge
loopne
hlt
imul
ljmp
fwait
sub
decl
aas
xchg
loope
push
xor
pop
xchg
mov
mov
dec
ss
adc
xchg
dec
and
jmp
sbb
mov
inc
scas
incl
scas
xchg
sub
clc
rcrl
test
ja
sarl
bnd
sbb
push
pop
inc
ret
fsubs
cmp
push
out
ret
es
jmp
shrb
sbb
inc
mov
jmp
jmp
add
jne
dec
mov
jmp
call
mov
jmp
push
pop
sub
std
mov
pushl
out
int3
cmp
xchg
insl
rorb
mov
dec
xchg
fcom
dec
sub
cmp
inc
stos
inc
divb
push
pop
push
cmp
jmp
sbb
xchg
les
movsb
push
xor
lahf
cmc
aad
push
cltd
dec
pop
popf
pop
adc
jae
jmp
inc
jmp
jne
cli
mov
ljmp
clc
adc
mov
call
daa
repz
incl
enter
in
mov
mov
push
jnp
push
xchg
push
aam
mov
clc
imul
add
push
das
out
aas
out
call
dec
xchg
add
lcall
popf
ds
pushl
ret
mov
pushl
jmp
pop
adc
hlt
or
fnstenv
mov
and
pushl
cwtl
dec
push
and
call
mov
ljmp
jge
pop
loope
shll
gs
dec
mov
popa
adc
xchg
outsb
adc
cmp
pop
adc
in
or
dec
or
call
or
dec
stos
jno
jb
cld
jb
ljmp
sub
popf
adc
pop
inc
mov
decl
cli
imul
pushl
dec
dec
or
and
repz
push
sti
mov
lcall
xlat
mov
push
dec
or
call
xor
pop
repnz
jge
mull
mov
lcall
mov
cmp
pushl
fwait
push
jp
push
inc
jecxz
lret
inc
xchg
pop
cld
je
mov
ljmp
pushl
cmp
jg
xchg
mov
out
mov
fs
lcall
test
jge
aam
incl
sbb
push
push
push
aam
rclb
mov
scas
ja
in
lcall
sub
mov
ljmp
and
cmp
jmp
fcoml
jbe
rcll
or
call
add
sti
dec
test
jmp
add
call
pop
stos
incl
inc
sbb
loop
stos
ljmp
ljmp
cmp
cmp
mov
jmp
xchg
sub
in
or
incl
xchg
jmp
mov
or
movsb
jle
fisttpl
jmp
fs
dec
das
cs
ljmp
aam
popa
inc
xchg
mov
hlt
add
call
adc
sbb
sub
xchg
bound
inc
cltd
iret
aam
dec
jg
outsb
ljmp
dec
sub
pushl
add
aas
dec
push
into
mov
lds
int
aaa
clc
adc
dec
gs
popf
push
decl
les
xchg
xchg
lret
int
jmp
cmp
decl
jmp
out
adc
xadd
add
mov
dec
sahf
inc
bound
push
jnp
push
fidivs
mov
pushl
adc
mov
call
repnz
incl
inc
or
cmp
mov
push
call
pop
add
jmp
lcall
decl
pop
pop
ja
clc
std
xor
xchg
sub
decl
decl
sbb
mov
call
adc
insl
mov
mov
fcomp
mov
push
aad
add
jmp
ret
push
sbb
mov
cmp
lods
xor
cmp
adc
jne
push
add
jne
add
ljmp
lcall
ljmp
pushl
cmp
or
lcall
inc
mov
cs
dec
inc
ljmp
dec
push
jge
shl
adc
mov
jae
fdivs
pop
ljmp
mov
lock
fidivrl
ljmp
in
push
in
repnz
or
xor
add
lcall
pop
loope
cmp
lcall
and
call
push
out
jp
fs
fsubs
inc
repz
lock
pushl
icebp
hlt
xchg
pushl
loopne
scas
cld
jnp
incl
fwait
adc
loopne
cmp
jp
std
xchg
cmp
push
cwtl
ficoms
out
repz
ljmp
push
ljmp
stos
pushl
das
out
dec
out
and
pushl
sar
insl
push
xor
lcall
dec
mov
jmp
fistpl
cmp
rorb
xor
mov
mov
pushl
fcmovnb
mov
call
sub
js
push
jo
push
cmp
ljmp
mov
push
inc
in
inc
xchg
lds
jmp
mov
mov
push
stc
sub
lcall
jmp
ret
fstp
loopne
out
into
adc
add
jmp
dec
mov
jmp
sbb
jmp
insl
jge
jg
xchg
movsl
xorl
fstp
jb
lret
xchg
jnp
test
call
in
jnp
leave
inc
adc
pushl
fsubp
ficoml
int3
sbb
add
enter
ja
incl
call
jae
pushf
add
or
pushl
call
sbb
mov
call
mov
xor
push
jmp
mov
jmp
jl
mov
push
call
jmp
inc
iret
cmp
jmp
lahf
add
incl
inc
gs
je
sub
decl
cltd
sti
aam
shl
ja
cmp
lods
jmp
call
xor
push
test
cmp
mull
and
incl
inc
and
call
and
decl
mov
decl
cmc
inc
test
loope
pushl
into
inc
dec
sub
inc
cmpsl
nop
insb
mov
adc
jp
and
pushl
dec
outsb
aas
push
pushl
mov
cmp
dec
or
daa
dec
in
bound
xor
pop
sub
lds
xchg
dec
and
pushl
jg
mov
lcall
out
rol
or
pushl
test
daa
hlt
in
xor
scas
dec
testb
decl
sub
aas
decl
dec
xchg
pusha
or
sarw
mov
decl
decl
and
inc
xchg
cmp
ljmp
sub
inc
jg
cli
lods
call
call
and
jmp
clc
dec
pusha
pop
fimuls
decl
imul
jg
jmp
push
sub
push
negl
ljmp
fidivrl
orl
cmp
call
imul
push
decl
decl
cmp
and
ljmp
clc
outsb
imull
call
leave
sub
insl
mov
pushl
pop
push
ror
inc
movsb
incl
cmp
outsb
cli
stos
ljmp
call
lcall
jmp
pop
xchg
sti
dec
dec
pop
or
decl
ds
adc
je
sub
mul
js
inc
movsl
mov
fidivl
pop
xor
jmp
sar
stos
call
sbb
les
jmp
mov
push
push
loop
into
and
out
cs
call
jne
push
cmp
sub
inc
loope
sub
incl
pop
mov
xor
ja
ret
stc
ss
xor
aam
in
outsb
jbe
lahf
fcoms
push
dec
inc
mov
inc
cmpsb
ljmp
sbb
xchg
xchg
ficoml
or
jmp
mov
shlb
cmpl
lcall
xchg
push
cmp
decl
lcall
sbbl
das
jg
or
decl
decb
orl
inc
push
inc
or
loop
sbb
ljmp
divl
jmp
and
call
mov
decl
dec
pop
es
std
pop
fildl
fmuls
dec
or
test
pushl
dec
mov
xor
out
leave
stos
lcall
cld
call
scas
test
ljmp
jmp
push
out
insb
inc
insl
das
mov
sub
sub
inc
cmpsb
call
in
cmpsb
ljmp
in
fimuls
xor
push
xchg
icebp
adc
mov
pushl
mov
loop
xchg
aam
inc
mov
out
add
decl
cmpsb
lcall
les
push
imul
ljmp
jae
push
pop
out
ljmp
mov
push
mov
push
loop
or
mov
jb
xchg
shrl
popf
xchg
inc
lret
decl
dec
cmpl
cmp
mov
pushl
push
ljmp
adc
test
jmp
sub
jp
mov
decl
fisubrl
xchg
dec
pop
pop
push
call
or
jnp
mov
jmp
cmp
or
adc
aaa
mov
fbstp
ja
cmp
pop
cmpsl
sbb
scas
popa
pop
imul
call
data16
dec
aaa
pop
or
out
js
dec
mov
rcll
pushf
rclb
ljmp
bnd
mov
ljmp
icebp
insb
jg
lcall
jge
push
cwtl
adc
pop
mov
fdivrs
sub
incl
mov
call
cmpsb
lcall
lcall
lcall
or
dec
push
aaa
popf
pop
icebp
or
pop
cs
lcall
pusha
cmp
lret
ret
jl
inc
cmpsb
incl
outsw
ljmp
fldcw
loop,pt
push
js
loopne
ss
ljmp
mov
cltd
bound
mov
cmp
ss
mov
fdiv
jns
pop
dec
mov
fsubrl
cmpsl
mov
repnz
es
jmp
decl
pushl
push
incl
mov
and
call
adc
dec
mov
jmp
lcall
push
aas
aad
sub
jmp
out
adc
adc
mov
xor
fldt
decl
incl
aas
jbe
lret
pop
idivl
fidivs
push
out
decl
lcall
iret
add
cs
dec
daa
out
dec
mov
decl
mov
jmp
inc
inc
xchg
loop
pop
lods
cmp
mov
ljmp
call
mov
jmp
stos
incl
dec
mov
jmp
xor
insb
inc
adc
jmp
ja
mov
hlt
fistpl
int
cmp
negl
fdivr
jmp
mov
add
ds
sbb
loop
in
push
and
decl
lods
add
decl
lcall
xchg
inc
mov
mov
xchg
hlt
push
lcall
push
outsb
movsb
ljmp
call
arpl
rcll
pop
and
sub
inc
add
lcall
mov
andl
decl
adc
cli
pop
rorb
or
cmpsl
inc
sub
pushl
scas
pushl
scas
jmp
aam
dec
testb
lcall
xchg
jge
out
mov
insl
mov
orl
sbb
cmp
call
in
cmp
jecxz
out
mov
aaa
xchg
loop
xor
mov
rol
insl
das
out
xor
popa
mov
pushl
sti
fdivl
mov
rorl
jg
mov
lcall
sarb
call
adc
out
lcall
push
jmp
andl
dec
fdivrs
mov
shll
mov
movsl
push
sub
incl
jmp
push
mov
jnp
stos
jmp
loop
es
call
daa
dec
iret
push
aas
jno
int
shr
xchg
and
pushl
inc
inc
stos
jmp
lcall
cmp
ds
adc
lock
sbb
pop
ror
aas
int3
ret
mov
mov
xchg
jge
loop
in
cs
ljmp
test
jb
mov
incl
movsb
dec
push
mov
in
add
cwtl
fidivs
incl
jl
cmc
loope
xchg
mov
push
addl
sbb
jecxz
xchg
xchg
cs
jmp
jp
test
inc
mov
jl
jmp
jbe
push
xor
dec
lret
and
ljmp
cwtl
stos
adc
lcall
call
jb
lret
dec
add
lcall
lcall
fdivs
jmp
in
dec
push
imul
jmp
lret
adc
cld
pop
mov
cmp
mov
pushl
pushf
push
loope
out
jne
std
mov
lcall
mov
lahf
jo
fwait
jae
mov
inc
bound
out
dec
pop
and
ljmp
ljmp
lods
jmp
xor
incl
nop
xchg
aad
std
push
adc
xchg
or
jmp
xchg
fistps
dec
xchg
jl
mov
aad
xlat
jno
clc
fwait
add
push
mov
push
xchg
shll
inc
loop
xchg
fcoml
stos
jmp
decl
pop
sub
lea
insl
inc
pop
sbb
or
incl
call
int
in
sbb
mov
lcall
test
jmp
clc
sub
cs
call
dec
scas
or
pushl
repz
inc
shl
mulb
fiadds
out
pop
jmp
lret
daa
or
es
decl
xchg
les
or
sbb
xlat
xor
jae
outsb
inc
jp
call
mov
lcall
insl
xchg
cmpsb
pushl
lcall
lea
je
fbstp
movsl
testb
jl
loopne
add
out
mov
out
mov
jecxz
push
xchg
jmp
dec
popf
jle
xor
rcll
mov
daa
push
sbb
sti
arpl
inc
mov
incb
adc
aas
mov
jecxz
hlt
mov
mov
in
ret
xchg
adcl
decl
pushl
aas
cmp
add
incl
mov
mov
pushl
push
sbb
icebp
bound
call
mov
lcall
pushf
js
cmp
cmp
pushl
dec
and
std
sbb
or
sar
cmp
lcall
add
cld
jb
adc
fstps
movsb
call
je
xor
xlat
push
xchg
push
bound
inc
mov
inc
mov
sbb
and
lcall
decl
ret
lods
ja
add
lcall
xchg
decl
ds
cmp
ror
or
stc
fs
call
leave
jne
xor
faddl
jg
jl
adc
lret
icebp
push
and
cmp
mov
aas
shl
or
lcall
into
fnstenv
or
push
cs
jp
into
cld
popf
test
incl
mov
lcall
bound
lahf
adc
hlt
pop
push
ljmp
cli
mov
decl
fidivrl
fs
jmp
inc
mov
call
sub
dec
insl
scas
inc
inc
add
call
inc
mov
imul
adc
sub
decl
jae
out
sub
lcall
lret
rolb
inc
std
icebp
fxch
pop
or
incl
imul
pushl
mov
shrl
inc
es
decl
in
cs
inc
add
incl
fcomi
jl
fstpl
ljmp
int
js
jmp
sub
test
dec
sbb
jge
add
and
lcall
push
ljmp
js
xchg
mov
cli
insl
push
jns
mov
push
mov
lcall
mov
decl
adc
ja
fcmovnb
inc
out
clc
cmp
mov
movl
stos
call
pop
iret
fstpl
in
push
cmp
out
cmc
pop
test
ljmp
call
lcall
mov
cli
or
cmp
cmpsl
pop
jno
mov
js
enter
adc
imul
and
decl
call
push
fstps
jnp
add
ljmp
or
decl
scas
jo
fsubr
imul
arpl
add
fisubs
inc
cmp
xor
negb
jmp
pushl
stos
add
incl
in
dec
shrl
ret
dec
jb
ljmp
mov
jg
xor
pop
mov
fiaddl
ljmp
cli
sub
cld
arpl
mov
pop
shl
jnp
xor
xor
xchg
cld
mov
test
call
adc
add
test
lcall
jmp
inc
or
incl
adc
jnp
sub
call
aad
aad
cmp
inc
mov
es
decl
jmp
ret
add
dec
pop
popf
aas
repnz
xchg
sti
jp
incl
pop
mov
cld
pusha
dec
stos
out
pop
insb
xchg
mov
push
mov
je
scas
jmp
cmpsb
ljmp
jmp
ljmp
cmp
mov
decl
incl
cmc
pop
les
lcall
icebp
adc
sahf
aam
sbb
aas
sub
jmp
add
incl
roll
mov
mov
push
dec
test
ljmp
push
rcrl
repnz
cld
test
sbb
xchg
cmp
incl
jno
lods
call
mov
inc
addr16
cmp
mov
movsl
sub
adc
stc
stc
push
pop
out
xor
addr16
ret
decl
test
ljmp
in
scas
pushl
and
jge
and
decl
incl
push
test
jnp
jp
adc
aaa
rcrl
dec
xchg
imul
icebp
sbb
aam
loopne
fdivrl
adc
adc
mov
movsl
lret
lcall
shl
pop
push
enter
push
cmp
cld
ja
mov
call
pop
gs
cwtl
mov
decl
ljmp
pushl
pop
call
cmp
in
lcall
das
inc
sbb
add
call
call
and
dec
scas
pop
jne
stc
cli
rcll
or
lcall
inc
ss
or
lcall
xchg
dec
dec
sbb
jo
call
gs
es
pushl
push
lods
ljmp
cmovo
pop
rolb
or
cmp
xchg
cmpsl
into
aaa
push
push
incl
lcall
movsb
push
jno
mov
decl
or
sbb
inc
mov
incl
mov
add
fdiv
adc
ss
jmp
xor
mov
xlat
int
pushl
dec
pop
daa
mov
adc
push
ljmp
jmp
xor
cld
jmp
das
xor
and
inc
dec
xor
ss
or
jge
fsubs
lcall
sbb
adc
mov
stos
pop
dec
testl
incl
decl
fcompl
loopne
pop
sbb
movsl
or
mov
inc
lcall
or
incl
call
xchg
dec
das
sub
in
add
pushl
mov
xchg
push
scas
mov
fstp
sub
ljmp
jp
mov
call
addr16
dec
lods
decl
call
push
dec
mov
decl
jg
xor
cmp
pushl
decl
inc
arpl
int
lea
ljmp
subl
mov
incl
imul
cmp
pop
and
mov
inc
es
pushl
adc
sbb
inc
stos
call
push
or
sbb
jp
inc
loopne
lret
adc
repz
pop
aad
into
hlt
cmp
dec
in
push
rorb
scas
ljmp
pushl
mov
ds
push
lods
cmp
xlat
ja
push
mov
lcall
pop
std
cmc
adc
mov
inc
cltd
pushf
jno
mov
sub
ljmp
incl
mov
mov
push
pop
fbstp
lahf
xchg
loope
inc
mov
incl
int
cmpsb
incl
jmp
pop
aaa
in
pop
flds
ljmp
in
xchg
movsb
lcall
out
ss
loope
pushl
push
sbb
jmp
mov
inc
cltd
out
das
inc
pushf
and
fsubrs
gs
xor
ret
pop
je
mov
decl
mov
decl
cli
popa
out
inc
ret
lahf
mov
dec
adc
cmp
call
clc
xchg
xor
xor
cmpsb
decl
mov
fisttpl
jmp
or
inc
out
stos
lcall
xchg
ljmp
sahf
push
sahf
sub
lcall
jl
mov
cmpsb
lcall
mov
incl
jle
decl
fsubl
pushl
or
pushl
loope
mov
mov
call
dec
cmp
pushl
add
push
lods
int
pop
mov
insl
mov
lahf
jo
es
call
rcr
xchg
adc
mov
and
lcall
outsl
mov
pushl
inc
int3
xor
call
jg
mov
int3
popf
sbb
ljmp
push
mov
inc
mov
cmp
mov
mov
sbb
decl
mov
pop
dec
sarb
ljmp
pop
mov
test
or
pushl
clc
scas
call
xchg
fisubl
mov
cmp
push
ficoml
scas
iret
aam
xor
xchg
fsubrs
in
sub
clc
andl
and
pop
lret
add
inc
js
pusha
iret
push
xchg
mulb
inc
inc
imul
pushl
es
lcall
je
mov
rorl
jno
cli
fdiv
insb
lahf
ja
pop
jno
test
mov
call
mov
add
lcall
push
scas
aaa
iret
imul
mov
pushl
sub
hlt
and
sbb
pushf
sub
std
and
popl
jmp
std
ror
lcall
fcmovb
mov
mov
lahf
push
repnz
es
jmp
sub
aam
inc
or
jmp
jno
gs
sbbl
dec
daa
inc
jl
ja
call
pop
sub
jmp
mov
adc
ss
clc
sbb
call
lock
incl
jae
loopne
aad
xor
loop
rcrb
and
outsl
xchg
mov
fcoml
or
mov
repnz
stos
call
ljmp
call
cmp
adc
lcall
incl
and
call
cmp
lcall
adc
cmp
push
aad
incl
bound
inc
mov
decl
clc
sbb
pushl
cli
pop
sti
dec
sarb
xor
dec
clc
ljmp
pop
insl
call
mov
or
mov
decl
mov
push
inc
mov
jl
fbstp
push
pop
xor
dec
jle
into
das
jae
dec
sub
pushl
dec
adc
out
out
fdivs
sbb
cmp
es
call
cmp
ret
cmp
jbe
ljmp
sbb
std
pop
sub
call
xor
xor
pop
mov
or
push
sbb
ljmp
jp
jne
cmpsb
decl
icebp
jge
lcall
inc
fidivl
xchg
or
or
call
fbld
call
sbb
aad
adc
jge
hlt
push
incl
pmulhw
loop
sub
jmp
pushl
mov
call
mov
jmp
lcall
stos
ljmp
rolb
inc
or
push
les
add
in
mov
jmp
popa
int
sbb
adc
xchg
scas
out
ret
and
jmp
lea
decb
js
mov
incl
popa
or
incl
call
push
add
inc
pop
cmpsb
ljmp
fdivrs
fs
ja
fstps
call
enter
mov
shrb
dec
aaa
push
fiaddl
mov
fdivrl
rcrl
and
call
jg
sbb
pushl
inc
sbb
cwtl
pop
ja
mov
lcall
xchg
and
xor
dec
cmpsl
ret
jmp
out
lock
loope
call
stc
and
jmp
sbbl
adc
jmp
xchg
dec
or
mov
test
xchg
cltd
lret
mov
addr16
das
pop
call
jmp
decl
xchg
mov
jmp
mov
mov
lcall
add
decl
pop
adc
shr
adc
jle
sbb
jmp
decl
lock
sub
addr16
dec
jle
mov
pushl
sub
sbb
add
fisubrl
inc
dec
lods
lcall
adc
inc
mov
push
lock
xor
cs
decl
call
call
data16
jmp
push
add
fnstcw
repnz
xor
lods
cmc
mov
jmp
xchg
arpl
pcmpeqb
aad
lcall
lcall
push
pop
cltd
js
pushf
adc
mov
dec
shll
ljmp
push
mov
dec
imul
pushl
fidivl
xor
iret
scas
pop
out
clc
pusha
adc
mov
mov
pop
in
ljmp
push
mov
call
cld
cld
data16
and
ljmp
xlat
fdivrl
clc
lahf
and
stos
add
lcall
inc
push
fnstsw
dec
inc
xor
pop
inc
enter
inc
call
sub
sub
call
mov
sbb
aad
xchg
incl
or
jmp
ljmp
jmp
pushl
xor
jb
sbb
decl
call
pushl
sub
decl
divl
fcomi
outsb
stos
outsb
es
jmp
mov
jle
and
push
gs
xor
je
jge
outsb
mov
lcall
aad
out
push
cli
cld
ds
ljmp
lcall
ljmp
push
aad
lcall
outsl
fisttpll
ljmp
aas
add
fwait
aas
sbb
arpl
jns
leave
jae
add
lcall
push
mov
push
pusha
sbb
in
testl
or
ljmp
add
push
pop
mov
rorl
in
popa
out
loopne
jmp
and
mov
aas
cmp
push
fcomps
fmuls
inc
cmp
mov
lret
cmc
hlt
mov
pop
mov
dec
xchg
imul
mov
xchg
sbb
and
and
loope
leave
pop
inc
mov
decb
cmp
inc
mov
cmp
ljmp
in
sbb
notb
ljmp
psubw
lds
in
pop
ljmp
in
pushl
inc
xor
jmp
into
mov
insl
dec
aam
ss
fsub
pushf
call
fs
inc
test
out
or
cs
jmp
decl
ror
outsb
lret
pop
pop
fptan
lds
mov
ljmp
push
repnz
cwtl
inc
add
inc
inc
fidivrs
jmp
jmp
dec
inc
or
pushl
decl
incl
xchg
adc
pop
and
call
iret
dec
or
punpcklbw
xor
jb
clc
rclb
and
ljmp
incl
add
ljmp
std
int
xor
out
jp
jmp
mov
enter
mov
or
call
scas
jmp
outsb
add
inc
inc
push
jmp
mov
outsl
push
ret
pop
cmp
aas
roll
arpl
jb
jg
icebp
add
or
sub
pushl
je
pop
sub
decl
shr
pop
cs
ljmp
pushl
cmp
enter
int
cmc
cltd
mov
or
incl
fisubl
mov
inc
xchg
aas
enter
lcall
insl
jp
rcrl
or
incl
mov
xor
jmp
xor
mov
insl
loop
push
pop
jno
ss
mov
loopne
push
cmp
insl
adc
cmc
movsl
dec
add
call
inc
aam
iret
dec
fdivs
lock
flds
pop
sti
push
or
inc
xchg
mov
mov
decl
insl
pop
into
mov
lret
jmp
aam
lahf
jle
xchg
push
dec
or
pushl
push
cs
push
cs
jmp
mov
mov
mov
push
mov
jmp
push
lcall
gs
cli
cmp
decl
fwait
pop
push
jbe
cmp
lods
push
mov
jmp
loope
or
inc
fimuls
mov
jb
jmp
jge
push
inc
or
call
les
adc
fadds
loop
lcall
ficoms
shrl
jnp
in
mov
pushl
sub
xchg
cmp
ljmp
mov
cmc
cmp
fwait
std
push
pop
sub
incl
stc
movsl
fldenv
xchg
ljmp
cmp
jmp
dec
out
icebp
xorl
es
pushl
mov
enter
lods
jnp
divb
xchg
jmp
lea
jb
je
loopne
xchg
jg
popa
jecxz
ja
clc
cwtl
aad
and
ljmp
push
insw
xchg
add
sbb
sbb
rcrb
xchg
mov
leave
and
inc
pop
and
inc
pop
ja
sub
lcall
or
jmp
ljmp
divl
sbb
push
or
jge
pop
pop
test
call
das
aas
data16
test
ljmp
jns
in
cmc
add
jl
lock
decb
incl
pushl
lret
adc
cwtl
xlat
xor
fdivs
or
lea
inc
in
icebp
orl
jno
fs
push
inc
xchg
js
xor
adc
loop
out
add
call
movsb
call
pop
jns
jge
pop
add
inc
xor
pop
adc
sbb
and
cli
jge
outsb
mov
rcr
inc
rol
addr16
scas
pop
fs
sbb
decl
cli
sbb
repz
pushl
incl
fnstenv
gs
shlb
lcall
pop
aas
mov
lret
jo
sahf
arpl
adc
pop
testl
cltd
mov
jmp
sub
fs
add
jmp
jle
cmp
xchg
rcrl
xor
push
pushl
cmp
adc
jmp
and
pushl
imul
call
jmp
xor
push
xchg
sarb
push
jle
xlat
test
incl
stos
iret
jno
inc
bswap
shll
adc
stos
int3
mov
jmp
jg
cmp
loopne
pop
shll
jmp
stos
call
outsb
or
aas
outsl
fldt
dec
ss
aas
sarb
xchg
adc
out
scas
push
xchg
lcall
jecxz
stc
lods
pop
jnp
sbb
cmc
fisttpll
test
incl
inc
les
incl
xor
loopne
sub
mov
mov
adc
clc
inc
je
and
int
out
nop
or
cli
pop
insl
xchg
jmp
cmp
cmp
fnstcw
sub
push
fsubr
adc
mov
inc
inc
popa
fnsave
mov
aad
inc
xor
clc
adc
and
incl
mov
xor
jmp
lds
push
pop
pop
xchg
pop
es
cmp
xor
hlt
cmp
lods
lcall
lods
sbb
xor
rcrl
hlt
cwtl
push
arpl
call
pop
mov
pushl
and
ljmp
jmp
in
dec
dec
dec
lret
sub
fdivs
dec
fists
xor
ljmp
pop
jns
imul
data16
decl
loope
mov
xchg
mov
mov
fiaddl
outsb
sub
call
cld
jl
decl
hlt
ja
mov
inc
nop
lret
inc
iret
jno
js
pop
xor
xor
jmp
incl
or
call
push
fisubl
mov
add
ds
dec
pop
mov
incl
lcall
pop
mov
lret
sub
call
dec
or
cmp
in
shl
int3
push
movsl
loope
push
lods
call
decl
push
jle
sbb
cltd
adc
add
jmp
or
decl
sub
inc
mov
std
push
jmp
decl
or
jmp
js
dec
pop
movsb
jmp
pop
test
jecxz
loope
fsts
push
in
fbstp
mov
mov
pushl
decl
mov
push
pop
ljmp
loopne
jl
mov
fbld
fwait
mov
ja
jae
xlat
insb
icebp
divl
ss
sarl
jmp
cmp
inc
jl
sbb
incl
mov
jmp
call
add
pushl
or
jmp
xor
cmc
jns
incl
incl
shl
mov
push
daa
aaa
orl
decl
xor
decl
incl
incl
mov
dec
jecxz
add
stc
pop
mov
mov
push
imul
sahf
fnsave
rorb
jmp
jmp
push
push
cmp
pop
enter
sbb
pusha
les
jecxz,pt
xchg
xchg
jno
imul
and
sub
pushl
pushl
enter
in
inc
test
inc
push
cmp
cmp
sub
ljmp
cmp
in
cmp
dec
xchg
out
lcall
mov
inc
jae
and
mov
aam
mov
mov
adc
push
push
ds
es
push
pop
call
dec
jb
xchg
out
xor
cmp
decl
dec
push
mov
cs
mov
iret
pop
cmp
mov
mov
data16
loope
dec
cmp
jns
xchg
and
fdivrl
decl
jg
jl
addr16
add
lcall
mov
movsl
mov
cmp
incl
jle
inc
das
inc
sbb
clc
mov
scas
sub
js
xchg
stos
sub
cmp
push
arpl
and
mov
adc
data16
ljmp
push
jnp
ja
mov
push
jecxz
push
movsl
xor
sub
ljmp
lcall
jg
aad
jb
dec
das
lea
jmp
push
call
rorb
decl
pop
add
out
incb
loopne
enter
enter
decl
fnstenv
frstor
pushl
inc
jae
movsb
pushl
xor
mov
stos
add
pushl
stos
lcall
adc
imul
pop
sbb
xchg
mov
int3
leave
rorb
pop
fwait
jg
out
or
lcall
cli
pop
sub
push
testl
inc
outsb
cli
adc
dec
inc
cmp
incl
aam
cmp
or
cli
fmuls
sbb
incl
jmp
mov
out
adc
and
fists
cmc
jp
ljmp
cmp
push
mov
ret
adc
add
ljmp
cmp
jne
cmp
add
ljmp
ljmp
scas
pop
adc
pop
test
in
ret
mov
ljmp
ljmp
jno
daa
push
inc
cmp
adc
jns
inc
in
adc
jae
dec
add
incl
pop
fidivrl
xchg
mov
pushw
xor
stos
sub
call
or
into
push
xchg
call
fidivrs
out
jae
inc
scas
sbb
cltd
pop
iret
mov
call
adc
jmp
pushl
ljmp
adc
lcall
push
jno
lcall
decl
call
adc
mov
jmp
mov
jns
and
jmp
insb
in
adc
mov
mov
mov
jbe
subl
addl
pushl
ret
ret
loop
cmp
push
jns
js
jb
inc
add
xchg
mov
call
add
pushf
mov
outsl
iret
lea
pusha
and
sti
adc
ja
pop
pop
sub
jmp
stos
jno
das
jb
lcall
ljmp
fstpl
and
jbe
sub
ljmp
sbb
dec
jge
loop
out
and
ljmp
fldt
rcll
call
add
fcom
clc
xor
push
push
mov
jmp
scas
jmp
lds
dec
fucomi
ret
adc
clc
cmpsl
loop
mov
ljmp
fisubrl
cmp
xor
mov
mov
lcall
or
cmpsb
mov
jnp
sub
incl
mov
or
ljmp
cwtl
cmp
lret
decl
call
inc
cmp
sti
adc
lcall
inc
mov
lcall
sub
push
test
lcall
incl
push
sahf
sub
jmp
push
lea
pushf
sub
cmp
pushl
mov
pushl
mov
lock
sub
ljmp
adc
cwtl
pop
outsb
rclb
sbb
fadd
ljmp
cmp
mov
push
mov
jae
xchg
cmp
ljmp
jmp
jmp
cmp
mov
incl
ret
lea
ss
cmc
push
fs
out
es
lcall
shll
decl
dec
xchg
sub
dec
loop
call
clc
mov
mov
lcall
sahf
lds
mov
decl
cmp
call
jo
mov
push
jnp
call
out
adc
sahf
and
cmp
pop
ret
or
adcl
sub
call
jbe
jo
push
dec
mov
sar
test
dec
xchg
push
push
arpl
es
jmp
lret
mov
incl
dec
lock
incl
pop
loope
pop
or
loope
outsb
jp
xor
xor
in
push
push
xor
test
popf
cmpsb
jmp
fidivl
cmp
push
js
jnp
incl
pushl
fdivrl
call
mov
call
enter
decl
push
mov
shrb
or
incl
xor
lahf
mov
nop
test
add
jmp
out
sub
fiaddl
and
mov
decl
jmp
push
fildl
inc
test
call
ljmp
sub
ljmp
decl
pop
mov
lock
ljmp
adc
clc
jp
out
jge
cli
loope
jmp
addr16
incl
mov
xor
dec
faddl
incl
lea
mov
fiaddl
pushl
and
push
fcomps
call
call
push
xchg
lcall
mov
mov
ljmp
mov
ljmp
ljmp
decl
scas
pop
inc
sub
rorl
inc
in
fwait
out
cmp
or
jns
pop
stos
decl
cmp
lods
mov
push
cltd
xlat
ja
cwtl
mov
push
arpl
ljmp
pop
hlt
cld
pop
mov
mov
cmp
push
call
push
cmp
test
decl
ljmp
jle
cld
cmpsl
aad
jp
mov
insb
das
jae
jg
cmpsb
lcall
inc
imul
xchg
dec
fsub
bound
add
cmp
incl
call
push
ret
jmp
dec
jmp
pushl
ljmp
cmp
loop
adc
push
cmc
ss
jmp
div
sbb
inc
push
incl
mov
lcall
push
lcall
aas
push
stos
arpl
cmp
ljmp
jo
add
pushl
jne
adc
cmp
jns
add
incl
int3
inc
loop
jmp
inc
je
movsbl
push
xor
imul
aad
adc
jbe
popf
aad
in
xchg
xchg
adc
mov
sub
addr16
push
jae
outsl
and
xchg
mov
push
repz
test
call
and
arpl
je
xchg
test
pushl
jmp
dec
mov
mov
call
or
push
inc
addl
decl
ljmp
fdivrs
push
js
cwtl
pop
ret
icebp
adc
pop
pop
fs
or
call
arpl
xchg
fwait
jbe
mov
xor
divl
call
jmp
xchg
mov
push
and
dec
jae
lcall
sub
xor
lcall
pop
xchg
repz
cmp
dec
cld
into
jg
mov
jmp
pushl
pop
mov
push
adc
aam
jp
push
or
ljmp
sub
out
jo
stos
pop
stos
lcall
dec
cltd
repz
fdivl
adc
cmp
adc
out
repz
jmp
push
jns
inc
mov
jmp
mov
jno
sti
mov
jg
call
scas
lcall
fmulp
mov
ljmp
or
fidivs
jp
jmp
iret
iret
mov
pop
lds
rcrb
jns
dec
sbb
xchg
gs
add
decl
dec
jg
fwait
add
ljmp
lods
jmp
div
sahf
jecxz
xchg
fldenv
xor
fidivrs
jle
lock
enter
dec
cli
cmp
ljmp
rcll
xor
push
fcomps
adc
jae
rorl
push
int3
ljmp
decl
pop
mov
incl
lcall
jns
cmp
call
pop
lds
sub
mov
lcall
sub
jmp
insl
stc
test
sub
sub
ljmp
call
add
decl
cmp
js
xor
call
test
js
das
mov
call
and
push
mov
and
jmp
push
cmp
inc
iret
xlat
sbb
mov
cmpsl
filds
incl
sbb
fs
insl
pop
icebp
dec
cld
pop
jno
mov
sub
mov
lcall
pop
or
inc
pop
cmp
sbb
in
mov
jmp
xchg
push
inc
dec
test
out
in
fsubrs
lcall
js
call
add
pop
adc
push
cmpsb
jmp
push
js
fsubl
imul
aad
dec
mov
mov
incl
lret
ljmp
fs
cltd
hlt
data16
cmp
cmc
movsl
jae
rolb
push
jle
cli
push
outsl
mov
call
sbb
lcall
ficoml
lret
adc
jl
xchg
dec
or
lcall
call
jmp
int
pushl
fildl
cld
push
test
lcall
xchg
and
pop
mov
jmp
jge
pushl
movsl
std
xchg
fidivs
xor
cmpsb
lcall
adc
mov
decl
cli
das
jmp
ja
mov
mov
lret
inc
shll
incl
lcall
push
movsl
mov
scas
lods
pushl
mov
pop
inc
clc
ss
adc
shll
add
jmp
test
dec
pushf
fsubr
push
test
decl
fadd
imul
sub
call
dec
jmp
push
jle
and
sbb
jmp
scas
xor
push
call
in
fstl
sahf
clc
lea
add
jmp
mov
mov
mov
sub
lcall
in
xchg
xchg
call
ljmp
ljmp
mov
pushl
decl
push
jmp
sub
jmp
fs
daa
aad
scas
incl
dec
clc
loope
push
test
pushl
add
gs
ss
jmp
inc
and
icebp
hlt
imul
cmpsb
push
pusha
aas
loop
sbb
aas
add
ljmp
lcall
jmp
ljmp
mov
add
incl
mov
call
xchg
cld
aad
inc
test
call
data16
lcall
or
call
pop
or
fldenv
mov
pushl
xchg
push
mov
je
cmp
push
push
dec
push
sbb
jecxz
movl
sub
jmp
js
incl
xor
xorl
test
decl
push
fdivrl
or
jmp
cmp
ljmp
call
cmpsl
adc
decl
scas
mov
sbb
adc
js
mov
sub
push
incl
jns
mov
xchg
ljmp
incl
ret
icebp
or
push
shll
in
xchg
fs
sti
test
decl
lock
jmp
cmpsl
or
and
test
mov
call
pop
mov
xor
call
outsl
xchg
testl
dec
rolb
mov
incl
dec
sub
arpl
adc
movsl
push
lcall
repnz
sbb
clc
dec
rcrl
jnp
xchg
in
cmp
decl
rcrl
cmp
or
jmp
loop
pop
jecxz
fwait
adc
insl
dec
gs
sub
mov
mov
pushl
lahf
add
dec
xchg
in
fwait
sti
and
decl
call
daa
jle
jo
xor
cmp
incl
and
pushl
xor
lcall
hlt
loope
xor
into
adc
inc
dec
ror
add
lcall
adc
pop
push
sarb
iret
sub
pushl
frstor
stc
add
add
inc
movsb
jmp
jmp
cld
sub
jmp
hlt
imull
lods
ljmp
lahf
pop
outsb
adc
adc
scas
ljmp
mov
ljmp
cmp
or
lcall
xchg
call
jmp
dec
fists
mov
popf
pushf
cmpsl
inc
in
lcall
push
dec
xchg
int3
shl
push
js
aad
sbb
xor
ljmp
leave
xor
scas
pop
cmp
cmp
xchg
push
and
jmp
jle
mov
push
incl
daa
add
call
jbe
add
ljmp
decl
lea
cltd
add
push
call
adc
push
lss
add
pushl
jnp
in
add
dec
mov
sbb
sbb
incl
ficoms
lcall
sbb
cmp
cmp
test
pushl
ljmp
lcall
mov
ljmp
xchg
jmp
mov
lods
inc
insl
fs
mov
add
cmp
xorl
flds
scas
divl
jg
ret
mov
shrl
pushl
jmp
shlb
inc
ret
out
inc
std
es
push
adc
int3
sbb
mov
lods
test
sbb
push
pop
push
inc
imul
idivb
daa
call
pusha
lahf
dec
scas
inc
add
pushl
jle
mov
pop
mov
lcall
jmp
cmp
dec
jo
pop
outsl
or
lcall
call
push
cmp
cmp
rorl
jecxz
pushl
jmp
out
jge
incl
fimuls
inc
jle
jb
inc
mov
int3
mov
jmp
xlat
add
cmp
call
insb
cmc
iret
lock
add
pushl
js
and
xchg
mov
dec
add
hlt
jp
fs
sub
jl
sub
pushl
mov
mov
loop
ret
mov
pop
bound
call
cmp
mov
and
ljmp
push
notl
inc
pop
loope
add
call
jmp
jg
mov
fs
jnp
fildll
lcall
notl
cwtl
jle
jg
imul
xchg
pop
sahf
mov
in
pop
filds
or
xor
mov
fisubl
lret
xchg
insl
jno
mov
jns
jmp
outsl
jecxz
call
cwtl
mov
mov
cs
ljmp
push
lock
pushl
mov
push
mov
bnd
mov
mov
mulps
test
jmp
sub
inc
add
lcall
mov
adc
call
pop
fwait
jg
sbb
call
xchg
repnz
lcall
call
call
js
mov
dec
fwait
sti
pop
aaa
adc
ljmp
mov
in
dec
xchg
pushl
push
pop
or
lret
and
call
add
mov
and
jno
inc
popa
cmp
ficompl
jmp
rcrl
cltd
loopne
mov
mov
jb
pop
movsl
sti
inc
ret
and
lcall
mov
ja
pop
xor
shll
lret
lds
push
arpl
fwait
or
inc
sub
call
mov
in
mov
inc
cmc
in
sub
decl
decl
call
call
dec
jmp
inc
push
mov
in
and
call
fs
ljmp
stc
dec
in
sub
mov
lret
push
jmp
dec
out
cld
fcoml
add
incl
xchg
xchg
lret
sbbl
int3
mov
xchg
das
dec
adc
push
cmp
dec
in
test
std
pop
sbb
cwtl
aaa
loope
call
pop
push
jno
imul
fucomi
dec
mov
xchg
cs
in
dec
shlb
mov
jecxz
add
jmp
adc
ds
pop
mov
lcall
in
xchg
jne
call
mov
inc
push
pop
dec
dec
in
cli
mov
mov
inc
push
mov
cmovb
sbb
scas
cmp
pop
push
lods
ljmp
push
sbb
xchg
pushf
pop
push
mov
jnp
mov
xchg
incl
orl
fcomp
add
std
cmpsl
outsb
andl
and
xchg
decl
ss
xor
or
in
or
sub
decl
dec
loopne
fcomps
adc
cltd
stc
fnstcw
out
test
call
mov
jno
mov
call
inc
pusha
popf
sbb
push
call
std
test
ljmp
pop
cli
sub
inc
sub
pushf
icebp
jmp
jg
push
add
ljmp
les
jmp
mov
into
adc
ljmp
pop
push
mov
out
cmp
bound
call
call
cmc
bound
iret
repnz
idivb
cli
adc
sahf
mov
lcall
decl
sub
sub
mov
and
xor
ss
pop
cmp
std
mov
lcall
int3
cmp
lcall
sarb
dec
in
adc
xchg
cld
push
cmp
add
inc
movsl
movsb
cld
jbe
enter
push
jle
movsb
pushl
dec
sbb
sbb
dec
lock
cmpsl
push
decl
adc
pop
dec
lret
and
jmp
sub
sub
incl
cmp
dec
and
jmp
hlt
cmp
decl
jmp
adc
sub
incl
and
cmp
cmp
xchg
jmp
pop
loopne
xor
sar
dec
rcr
mov
cld
loope
ljmp
call
mov
shll
jmp
movsl
mov
in
jbe
sbb
scas
incl
jne
lahf
adc
cs
call
mov
and
sub
push
pop
lock
dec
stc
cmp
aaa
sub
decl
les
xchg
rolb
fbld
push
lock
mov
stc
ficoml
mov
stc
call
jle
pop
inc
jmp
jne
insl
adc
cs
jl
test
imul
aad
mov
mov
arpl
mov
sbb
inc
loop
call
ljmp
aas
adc
cld
cmp
lahf
xchg
sub
xor
jmp
sbbl
xor
int3
loopnew
mov
add
decl
mov
jb
jbe
ss
inc
xor
fisubl
sub
call
dec
fildl
pop
pop
pop
gs
mov
sbb
imul
mov
jmp
xchg
fmull
ss
aas
or
call
and
call
mov
clc
mov
sbb
dec
cld
sahf
push
in
push
pop
enter
pop
adc
stos
and
push
xchg
jmp
ficoml
cmp
std
push
jp
push
push
roll
cmp
jmp
mov
mov
push
push
push
jge
jns
jae
inc
mov
ljmp
jle
jae
inc
push
sbb
xor
xchg
cmp
pushl
fcmovu
sbb
cld
cmp
ret
cmpsl
sbb
dec
scas
xchg
jmp
sub
ljmp
pop
lcall
test
fcomp
add
lcall
pop
push
test
mov
pop
add
call
scas
js
lods
jmp
sti
push
xchg
push
incl
xchg
fistl
fwait
popa
cmp
inc
pop
add
lcall
pushf
pushl
decl
incl
sti
insl
pop
lock
add
icebp
test
jmp
dec
mov
and
sub
decl
call
pop
xchg
xor
repz
jp
xor
ret
test
ljmp
push
push
sbb
test
scas
call
push
add
jmp
lcall
push
in
and
ljmp
insb
pop
or
jmp
and
sub
call
movsl
pop
and
ljmp
loope
xchg
push
mov
call
rcrb
lret
cmp
pushl
dec
push
in
movsb
pushl
mov
lcall
test
incl
cmp
repz
fists
ljmp
pop
inc
lods
adc
loop
mov
sub
insl
in
cld
rcr
lea
mov
jnp
push
jl
xchg
movsl
out
call
int3
dec
pop
cltd
mov
dec
aad
jo
incl
and
jmp
dec
push
bound
cs
pushl
pop
cmp
ljmp
std
add
incl
es
std
inc
mov
add
xlat
arpl
decl
incl
mov
cmpsl
out
loopne
stos
lcall
push
jae
or
incl
cmp
out
push
mov
jmp
loope
fwait
hlt
push
add
xor
mov
in
sbb
incl
mov
addr16
repnz
inc
faddp
xchg
addr16
call
dec
inc
pop
rcll
jge
mov
push
shlb
xchg
hlt
aam
inc
or
stc
xchg
pop
fadds
push
mov
je
ss
repnz
rol
leave
popf
in
in
int
push
out
xchg
xchg
fldcw
out
divb
aam
ljmp
popa
add
outsb
int
inc
addr16
ret
adc
ret
push
ja
cmp
imul
inc
stos
mov
decl
loop
mov
cmp
sbb
push
bound
sbb
or
ret
incl
lcall
add
decl
aam
in
arpl
aas
and
fadds
mov
mov
out
cmp
repnz
cli
inc
lea
out
inc
in
push
jmp
fisubrl
add
decl
jmp
stc
bswap
cwtl
bound
pushl
push
sub
and
lcall
or
test
roll
insb
sub
decl
les
jmp
inc
jg
inc
std
xlat
fbstp
cmp
call
subl
cs
jmp
decl
sbb
xor
ss
in
xchg
pop
pop
or
mov
jmp
fisttps
call
jl
loope
or
pop
mulb
jb
ljmp
push
cltd
imull
fadds
cmp
jmp
cmp
lods
das
jb
pop
sahf
push
mov
cli
push
scas
ljmp
decl
lods
sti
mov
dec
andl
pop
inc
mov
push
mov
lcall
sub
pushl
pop
iret
cmp
jmp
pushl
add
lcall
jp
cmp
or
mov
mov
cltd
gs
out
sbb
mov
fmull
pushl
cmp
out
mov
mov
and
push
ljmp
sahf
push
rcll
clc
sbb
dec
popa
test
hlt
aas
jmp
clc
mov
incl
xor
cmp
inc
inc
sbb
mov
je
push
sbb
addr16
sarl
std
mov
add
xchg
loop
dec
xor
push
xchg
jp
out
lds
pushl
call
push
and
call
std
mov
call
icebp
lock
mov
pop
pop
pop
popf
mov
ljmp
lcall
in
ljmp
jnp
and
jmp
call
loopne
jle
lds
ljmp
fistps
inc
pop
push
jae
cmpsl
stos
and
push
push
push
push
sar
xchg
addr16
scas
aaa
push
dec
movsb
mov
push
call
call
pushl
sub
ffreep
movsl
jmp
cmp
in
out
lcall
cmpsb
fcoms
out
cmc
outsb
and
add
call
adc
call
jo
push
je
jns
mov
repnz
sbb
pushl
pushl
filds
incl
movsl
and
ljmp
ds
decl
inc
or
incl
xchg
mov
sbb
scas
and
jmp
loop
aaa
mov
mov
cmp
decl
cmp
pushl
xchg
pushf
repnz
nop
xor
and
cmp
fmuls
repz
loop
outsb
dec
cmpsb
inc
scas
in
mov
mov
push
aam
add
pushl
push
call
sub
jne
adc
pushf
xchg
movsl
jl
scas
incl
fdivs
call
lods
ljmp
sbb
ljmp
leave
add
jmp
xchg
xor
decl
jmp
in
daa
push
fs
inc
xchg
push
mov
sti
inc
push
in
mov
adc
add
jns
xlat
mulb
aaa
icebp
mov
dec
pop
rorl
jge
jno
xchg
sarl
sub
cltd
push
loope
sbb
mov
iret
ds
mov
mov
and
incl
rorb
xor
or
jmp
lcall
or
insl
enter
xchg
jbe
xor
repz
pop
js
outsl
xor
iret
ja
fistpll
push
fldenv
addr16
push
cmp
subl
out
xor
mov
jns
fsts
jle
fiadds
cmp
push
fdivl
or
jae
decl
dec
xchg
pop
stos
scas
test
ljmp
pushl
int
loope
cmc
xchg
sbb
std
mov
inc
or
pushl
add
ljmp
mov
pop
xorps
inc
sub
call
jl
pop
test
jg
jnp
cmpsl
sbb
popa
jmp
sbb
push
xchg
mov
call
jbe
cli
jae
lcall
inc
dec
roll
dec
fwait
js
inc
bound
incl
mov
jmp
unpcklps
data16
mov
adc
cmp
cmpsb
ds
jmp
xor
lcall
sub
imul
scas
dec
sub
jmp
testl
call
js
icebp
xor
push
lret
add
call
mul
clc
mov
push
mov
ss
xor
pusha
ret
lret
scas
pushl
or
jge
dec
cmp
decl
lock
xor
movsl
inc
cwtl
mov
ljmp
call
aas
data16
jmp
fisttpl
shl
repnz
scas
pop
dec
fisttpll
dec
pushf
jp
clc
xor
arpl
xor
lret
pusha
dec
cld
into
insl
adc
into
and
pop
push
xor
ss
incl
cmc
fdivrs
add
dec
sub
cmp
pop
mov
decb
mov
call
mov
cmp
call
lods
incl
pop
xor
subl
mov
fcmove
ss
xchg
push
xor
incl
adc
decl
inc
xchg
fldt
or
shrl
jge
inc
or
decl
dec
stos
push
and
jmp
decl
lcall
std
scas
into
cs
call
popf
shrl
ljmp
test
decl
dec
mov
hlt
outsb
or
out
dec
xor
push
scas
mov
push
out
jnp
lea
and
gs
decl
inc
in
push
push
je
into
xchg
decl
int3
loope
mov
lds
js
push
enter
into
pop
push
inc
int3
idivb
mov
imul
dec
movsl
mov
inc
jo
sub
out
xor
jo
js
cmp
xor
out
fisubs
cld
inc
enter
outsl
mov
mov
rcll
mov
lcall
push
and
lcall
fnstcw
in
into
xchg
pop
int3
push
mov
imul
lea
lcall
inc
repnz
cld
inc
mov
loop
pop
in
inc
repnz
adc
shrb
sti
lcall
js
cmp
shrl
aam
es
push
pop
xor
outsl
lahf
xor
mov
pushl
mov
mov
js
lcall
js
jmp
sbb
ljmp
pop
rcll
dec
out
sub
jbe
xchg
push
movl
decl
mulb
pop
outsl
pop
add
call
loopne
inc
xchg
mov
outsl
outsl
mov
cmp
mov
push
lcall
or
lcall
inc
jecxz
xor
sarb
fists
ljmp
jns
ficomps
ljmp
cmp
sbb
lcall
out
push
clc
or
call
mov
fwait
dec
clc
imul
push
decl
adc
cmp
fstps
lds
std
outsb
ljmp
lcall
xor
pop
testl
pushl
in
mov
lods
call
lock
in
lods
iret
add
incl
sub
call
push
fdiv
fisttpl
cmp
lea
in
cmp
fildll
lret
call
push
ja
or
call
sbb
ja
fnstenv
pop
mov
jl
and
cmp
cmpsb
jmp
lret
mov
int
mov
cmpsl
adc
das
jle
jle
lcall
inc
push
decl
in
xchg
jmp
adcl
push
push
sbb
mov
stos
call
mov
call
jae
cli
out
sbb
shrb
cmp
clc
cmpsb
jnp
jmp
and
cld
clc
push
mov
cmp
xlat
out
sub
cwtl
cmp
incl
in
arpl
fcoml
aad
inc
testb
loop
cmp
in
mov
ret
shl
xor
pushl
sahf
ds
out
lods
cmp
call
sti
cmp
push
incl
mov
pushl
inc
cmpsl
push
rorb
xor
decl
test
call
bound
mov
incl
cwtl
cmpsl
mov
shl
mov
pushl
dec
mov
sub
clc
and
ds
ljmp
orl
lcall
adc
int3
lods
pop
cwtl
cltd
enter
push
fwait
rcll
repz
js
pushl
repz
push
mov
sarb
lahf
pop
dec
jae
call
outsb
push
dec
jne
test
call
pop
or
lcall
cmp
mov
jmp
incl
mov
inc
cltd
mov
mov
pushf
push
pushl
dec
andl
cmp
ljmp
lcall
cli
xor
xor
sbb
movsl
pusha
es
pushl
ljmp
mov
mov
jg
loop
adc
mov
fisubs
data16
ljmp
jmp
mov
or
lcall
pop
inc
and
mov
xchg
mov
mov
inc
mov
jge
xchg
pop
inc
cmpsl
pop
inc
inc
cmp
ljmp
incl
lcall
decl
jno
mov
mov
loope
call
cltd
loop
into
aam
imul
pop
mov
jmp
xchg
mov
jg
stos
clc
clc
stos
fidivrl
mov
incl
jmp
subl
call
xchg
push
call
hlt
jo
mov
mov
negb
xchg
pop
push
push
adc
ljmp
and
mov
sbb
push
decl
bnd
jecxz
pop
scas
cs
fucom
cmp
ljmp
incl
cmc
jne
scas
decl
ljmp
pushl
fisubs
cltd
cmp
mov
aad
mov
data16
leave
mov
xchg
pop
int
outsl
push
dec
imul
lcall
je
xor
incl
decl
jmp
out
test
call
sbb
cwtl
xor
sub
test
decl
decl
jns
decl
addr16
lcall
add
ret
jnp
mov
push
xor
decl
jecxz
xchg
jnp
mov
call
adc
inc
sub
call
xchg
xchg
sub
decl
mov
jmp
dec
sbb
sub
jmp
arpl
add
jg
jb
pop
lods
mov
jbe
mov
jg
inc
shrl
mov
sarl
ds
incl
call
outsl
xchg
push
fisttpll
nop
inc
inc
push
negb
sti
shrb
xchg
cmpsl
leave
push
dec
outsl
outsl
mov
ljmp
jbe
loopne
jle
orl
decl
ljmp
mov
lods
mov
xchg
mov
out
aam
jmp
decl
insl
push
and
jmp
fnstcw
call
decl
pop
hlt
ds
push
lcall
mov
cmpsb
lcall
sub
incl
stc
sbb
lret
aad
pop
outsb
addr16
incl
adc
push
add
call
out
out
mov
ljmp
sbb
decl
mov
nop
mov
daa
adc
repz
cmp
pushl
xor
mov
in
insl
jns
dec
mov
fs
cs
pushl
jns
leave
outsb
incb
adc
enter
in
push
mov
call
or
call
xchg
scas
ljmp
push
jl
cmp
ljmp
dec
jb
ds
or
addr16
outsb
test
mov
lret
pop
inc
pop
js
cmp
jl
jmp
cs
pushl
inc
cmp
fldl
pop
inc
arpl
xchg
sbb
mov
jle
push
popf
aas
repnz
andl
xlat
mov
xchg
test
int3
xchg
inc
into
mov
add
ljmp
ret
stos
incl
lea
sub
ljmp
js
xchg
mov
pushf
lock
sbb
inc
and
call
jmp
call
inc
loop
push
sbb
jae
add
jg
test
pushl
or
pop
mov
ljmp
enter
pushl
fcomps
mov
clc
add
add
lcall
call
push
mov
fadds
popf
add
lcall
jnp
sarl
add
ljmp
xor
inc
in
daa
into
es
out
aas
cmp
jno
dec
aaa
add
call
mov
lea
jmp
push
incb
stos
jmp
bound
mov
divps
outsl
daa
mov
jmp
sbb
ljmp
in
je
cmp
incl
ja
incl
decl
xchg
dec
movsb
decl
rcll
call
sarb
jns
mov
lcall
adc
test
incl
mov
ljmp
ss
stos
sub
inc
lods
inc
out
pop
xchg
sahf
into
adc
movsl
jo
cwtl
sub
clc
int
test
jae,pt
jmp
pushl
into
stc
gs
repz
fistpl
dec
sub
and
dec
repz
xlat
gs
dec
jmp
pushl
mov
mov
call
adc
mov
call
cmp
mov
jns
xor
leave
mov
decl
aas
sub
js
in
pushl
cltd
daa
pop
aad
hlt
insl
int
hlt
pop
jp
lods
decl
popf
cltd
mov
xlat
das
jmp
cmp
loopne
cmp
mov
cmp
decl
jne
lods
call
aad
jo
jnp
out
call
popfw
leave
leave
shll
push
cmpsl
xor
pusha
add
adc
loop
fistpll
data16
adc
jo
xchg
in
sti
cmc
out
or
inc
ljmp
xchg
mov
ljmp
dec
add
pushl
lret
add
lcall
mov
out
push
jnp
xor
mul
bound
ljmp
mov
cli
sub
jnp
addl
ljmp
clc
fadd
adc
pop
call
mov
dec
dec
jecxz
insb
push
xor
lcall
pushl
jmp
mov
sub
sbb
roll
das
test
xchg
and
incl
mov
notrack
fwait
bound
decl
cmpsl
ds
jmp
loopne
lcall
ljmp
pop
push
ds
cmp
lcall
je
and
decl
jle
cmp
xchg
mov
call
decl
push
ljmp
push
cli
setae
jmp
fst
rcrb
test
leave
xor
jo
xchg
pop
stos
fsubs
sbb
and
jmp
jmp
inc
lret
push
incl
incl
std
lcall
fstl
cs
jmp
das
sub
shlb
xchg
int
lret
pop
adc
dec
in
or
inc
nop
sbb
cmp
cmp
insb
in
lods
incl
inc
push
mov
outsb
mov
lcall
lahf
jg
jge
cli
outsl
mov
mov
pushl
cmpsb
dec
xchg
imul
ljmp
aad
add
ja
xchg
push
cmp
mov
jle
test
ret
outsb
lea
jae
hlt
sub
out
jmp
push
sbb
xchg
repz
sub
call
cmc
call
pushf
roll
mov
jbe
xor
cmpsl
inc
idivb
outsl
fwait
mov
jns
lcall
xor
popf
push
lcall
pop
pop
mov
or
mov
jmp
mov
es
decl
mov
hlt
ret
dec
imul
mov
in
xchg
cmp
call
test
xor
gs
xchg
inc
mov
pop
pop
push
pop
xchg
sub
jns
cmp
lods
aad
lcall
call
add
push
jns
mov
decl
pop
pop
out
js
outsb
int3
pop
add
ljmp
adc
jle
ficompl
inc
xchg
aam
sub
pushl
imul
lcall
aas
cmp
mov
dec
fiaddl
pop
pop
hlt
push
jge
gs
decl
call
cmp
pop
lret
add
dec
xor
or
adc
iret
cmp
ljmp
fisttpll
jbe
mov
lds
jbe
and
pushl
ljmp
xor
mov
dec
insb
add
decl
sbb
cmovb
test
decl
insb
xabort
push
imul
std
ljmp
dec
dec
and
call
ficoml
jge
imul
mov
jecxz
adc
repz
pushl
inc
jns
subl
sub
jmp
arpl
add
push
out
push
sub
lcall
cltd
mov
rclb
jno
pushf
pop
mov
aas
sbb
incl
cmp
pushl
sbbw
divb
mov
adc
mov
std
or
ljmp
cmp
lcall
mov
xchg
lods
or
jmp
pushl
pop
xchg
decl
jl
pop
jg
sub
jmp
call
ja
push
mov
je
fisubl
lods
incl
pop
sbb
incl
ljmp
lcall
pop
lea
mov
fs
pop
out
mov
rcl
call
decl
xchg
or
jg
call
call
ja
stos
sti
cmc
daa
pop
adc
sbb
aas
cs
decl
lcall
pop
sub
decl
mov
pushl
decl
push
repz
arpl
aam
push
pop
fcompl
int
repz
pushf
cmp
imul
mov
jge
in
loope
pop
push
imul
xchg
mov
xchg
repnz
adc
jle
cmp
repnz
xchg
int3
or
jg
aaa
fabs
jp
leave
adc
ss
fisttps
aas
stc
in
outsl
pop
sbb
cmp
ljmp
adc
mov
jp
pop
mov
sarb
push
sub
jmp
mov
dec
mov
frstor
cmp
loop
repz
movsl
sahf
pushf
sti
pop
and
lcall
test
call
fdivl
mov
jecxz
jmp
jmp
ljmp
notl
lods
pushl
cmp
xor
incl
push
push
inc
outsb
imul
and
jmp
call
push
out
cmpsb
incl
movsl
xchg
clc
cmc
aas
push
call
lahf
push
push
or
fdivrl
dec
movsl
loope
mov
pop
lret
push
adc
pusha
inc
adc
cmc
repnz
test
push
arpl
iret
lods
xchg
stos
pushl
sbb
mov
in
scas
jl
call
out
adc
jmp
dec
enter
outsl
test
or
mov
jmp
mov
pop
nop
aam
dec
or
lcall
add
gs
cmpsb
decl
mov
movsl
pushf
xchg
inc
adc
popf
sub
movb
cmc
jno
lea
call
enter
ja
call
ljmp
cmpsl
mov
fwait
loop
jnp
sahf
adc
pusha
aaa
cmp
mov
ja
lcall
lcall
dec
pop
aad
call
cld
and
decl
shll
mov
xlat
sbb
lcall
cltd
daa
scas
decl
decl
fildl
mov
ljmp
lcall
cmp
lret
cmc
div
scas
fiaddl
dec
dec
push
pusha
in
stos
ljmp
or
lcall
loop
call
mov
add
jnp
jb
mov
movsb
decl
mov
jmp
add
out
sarb
call
shll
fbstp
jmp
aam
shufps
movsb
call
xorl
lret
push
fwait
pusha
push
jns
mov
sbb
jl
dec
sti
sbb
xor
adc
je
lods
dec
sahf
and
decl
cmpsb
pushl
push
mov
and
ljmp
stos
jmp
fdiv
iret
mov
or
incl
push
mov
mov
test
adc
sub
push
adc
aas
mov
ror
shll
jge
xor
pop
mov
jo
jne
dec
lcall
jo
sti
sbb
ljmp
jg
aad
in
out
cwtl
xor
into
outsb
add
decl
dec
out
xor
mov
insb
pop
popa
mov
das
insb
into
jl
xchg
dec
xor
push
bound
cmp
jnp
push
jmp
xchg
fcmovu
out
call
jmp
jb
sarb
cmp
imul
mov
inc
adc
jg
scas
ljmp
ds
iret
std
mov
and
pop
inc
out
cmp
call
ret
adc
in
and
ret
jmp
pushl
and
jmp
pop
shrb
test
out
add
std
loop
notl
fcmovne
xor
cltd
cmp
jmp
push
repz
inc
adcl
xor
push
dec
mov
and
jmp
adc
xchg
pusha
pop
adc
and
ljmp
jmp
and
mov
jp
in
push
mov
cmp
xor
test
incl
incl
adc
dec
push
cmp
out
dec
add
or
cld
addl
cmpsb
push
xor
push
lcall
decl
add
sub
incl
aaa
mov
xor
in
sub
decl
sti
lret
adc
or
stos
dec
pop
cwtl
push
in
inc
add
pushl
mov
decl
adc
push
dec
call
jl
or
ficomps
cmp
mov
lcall
mov
repz
call
inc
pop
pop
cwtl
cltd
inc
push
jae
cmc
std
iret
mov
mov
scas
call
shl
iret
std
adc
dec
fwait
and
mov
ljmp
pushl
ss
xor
mov
cmp
pushl
lret
jg
int
cmovae
mov
ljmp
pushl
jl
adc
and
lcall
flds
mov
mov
or
incl
xor
out
pop
jno
cmp
pushl
pop
cmovnp
sub
pushl
aas
or
hlt
call
jmp
pushl
jp
popf
frstor
test
push
push
push
aaa
mov
incl
push
cmp
lods
lcall
test
sbb
call
dec
int3
sub
incl
jmp
incl
jb
mov
loopne
sti
rorb
fdivrs
xchg
mov
inc
sarl
fbld
popf
jo
decl
mov
sub
ljmp
push
subl
ficoms
ljmp
call
cmp
lcall
adc
xchg
xor
lcall
out
fildll
rolb
int
jmp
shl
rcrb
loop
daa
or
out
mov
call
fstp
sub
neg
jge
ds
mov
arpl
repnz
dec
add
cmp
dec
shll
in
lods
add
pushl
or
ljmp
jmp
cmp
jp
movsb
jmp
sbb
inc
or
call
int
int
add
sbb
cmp
inc
cmp
leave
add
inc
sub
add
jnp
aad
les
incl
jecxz
dec
jl
repz
push
push
incl
cld
js
ljmp
cmp
lcall
xchg
mov
adc
push
push
jb
inc
movsl
pushf
push
in
addr16
fstpl
mov
push
push
icebp
out
cld
and
pushl
sbb
xor
aam
call
sbb
mov
ljmp
mov
xchg
jnp
pop
or
inc
jns
jp
push
add
lret
jmp
xor
jecxz
fcmovnbe
lods
lcall
jp
decl
call
ja
push
sub
inc
mov
movsb
lcall
push
mov
ror
jo
mov
incl
add
incl
ficompl
cmp
dec
push
mov
dec
int
pushl
sbb
inc
cltd
stos
cwtl
cli
lods
dec
inc
cmpsl
ja
outsl
push
push
sub
mov
add
ret
lcall
lcall
andl
adc
xchg
xor
jmp
call
ret
sbb
xlat
in
pushl
decl
or
lcall
dec
ss
cmp
push
mov
jno
cmp
lcall
shll
dec
xchg
test
daa
adc
sbb
xor
mov
stc
cmp
add
popa
jns
gs
jmp
dec
loopne
nop
je
mov
xchg
aad
xor
in
scas
xchg
add
jl
sub
mov
decl
add
jmp
xchg
cmp
inc
xchg
push
pop
add
call
lock
xor
jb
jl
sarb
sub
incl
ret
stos
call
fcmove
cmp
jmp
sub
pushl
movsl
mov
es
decl
cs
decl
pop
in
dec
mov
out
pop
jl
xor
sbb
push
jecxz
xor
hlt
sbb
cmpsb
pushl
and
notl
inc
push
and
mov
lcall
frstor
xor
call
fmuls
aad
mov
shll
cmp
loopne
push
pushl
shll
ljmp
jae
movsl
sub
inc
in
sti
xor
iret
pop
or
jecxz
arpl
rcrl
lock
jmp
pushl
pop
or
fcmovnb
dec
jb
repnz
dec
sbb
arpl
stos
adc
mov
stc
dec
xchg
shl
mov
dec
add
jo
pushl
ljmp
pop
cmp
enter
stc
inc
and
pusha
rcll
inc
jne
lods
lcall
lcall
add
ljmp
pop
and
sti
pop
lahf
shlb
dec
jne
xor
in
popf
inc
sbb
inc
leave
lods
cmp
mov
pop
lea
ljmp
clc
clc
push
add
ljmp
mov
xor
or
xor
xlat
cmp
jmp
add
ljmp
das
jmp
fisubrs
daa
jle
lcall
std
push
pushf
pusha
cmp
popa
loop
sbb
pop
push
fildl
loop
movsb
incl
leave
negb
sub
lcall
push
adcl
and
incl
xchg
sbb
jg
daa
add
call
jge
mov
iret
enter
jmp
fbstp
mov
or
mov
fsubl
and
fidivs
adc
jmp
mov
decl
js
jge
out
mov
pushl
clc
mov
dec
dec
mov
cld
xchg
cltd
adc
xchg
inc
jle
call
jae
insl
leave
pop
fdiv
mov
aam
inc
addr16
or
ljmp
adc
ret
pop
jb
push
push
jmp
cmp
movsl
xchg
jmp
ljmp
fnstcw
repnz
or
sbb
icebp
lcall
add
lcall
cld
jns
add
lcall
sbb
jb
mov
mov
xchg
mov
jne
lea
push
jns
mov
ljmp
adc
add
mov
mov
loopne
testb
cmp
xor
pop
mov
cli
gs
jae
mov
sbb
call
or
cmp
call
mov
sbb
ljmp
sub
call
fistpll
fwait
movsl
adc
mov
lods
pushl
mov
push
cli
mov
vpunpcklbw
push
ljmp
ljmp
filds
fbld
inc
sub
jmp
mov
aas
test
ljmp
call
call
inc
repz
jecxz
lods
mov
dec
and
lcall
or
jmp
xor
sub
lcall
jge
cwtl
bound
pushl
pushl
mov
into
aam
in
sti
fistpll
ljmp
xor
lcall
inc
jno
pop
insw
push
data16
pop
add
pushl
jl
jmp
ss
mov
shrl
xchg
push
pop
and
pusha
aad
lods
jmp
mov
decl
pushl
jge
mov
ljmp
fadd
int3
mov
push
jmp
lcall
out
ljmp
jmp
sbb
jmp
mov
aad
jg
push
lret
bound
out
lock
pushl
pop
push
ljmp
dec
idiv
pop
sub
enter
popa
xchg
stos
mov
lock
xor
mov
decl
ret
xchg
mov
addr16
jge
out
push
int3
ds
call
cs
jmp
xchg
in
pop
icebp
addl
jg
icebp
mov
daa
lock
jmp
ljmp
les
xchg
add
je
cmp
sti
pop
inc
and
sarb
rcll
inc
pop
stc
mov
inc
cmp
loope
inc
or
ljmp
call
or
incl
call
lods
mov
pop
cmp
mov
cltd
adc
test
cmp
out
xor
popf
dec
cmp
adc
shlb
dec
fnstenv
mov
ljmp
mov
sbb
pushl
fwait
shrl
std
lret
jg
fisubs
xchg
dec
fsubrl
or
cmp
xlat
bound
xor
aad
cmpsb
lcall
test
shlb
lcall
cmp
add
call
fstl
mov
ljmp
ljmp
mov
push
pushf
loop
pushl
pushf
fnstsw
decl
pop
rcr
das
iret
lret
out
pop
dec
xor
xor
call
lock
mov
push
xchg
fwait
jbe
sub
call
test
pushl
inc
pop
jno
sub
incl
and
mov
inc
push
xlat
sub
and
xchg
imul
clc
notl
imul
and
jbe
leave
daa
or
mov
dec
ret
sbb
pop
pop
xor
mov
or
mov
pop
add
lcall
test
cmp
call
mov
lcall
jns
cmp
jbe
mov
cld
and
insl
ficomps
add
jmp
inc
sub
push
clc
in
icebp
bound
aad
adc
shlb
pop
int
in
iret
divl
or
cld
stc
xchg
imul
fcmove
test
call
mov
decb
hlt
loopne
das
cmc
and
les
mov
test
decl
pushl
xor
lcall
mov
add
cld
rorl
pop
fincstp
xchg
test
in
insl
lret
fisubs
lret
dec
push
inc
inc
dec
orl
adc
cld
scas
cs
call
mov
cltd
outsb
imul
incl
ret
pop
scas
ljmp
dec
fiadds
call
sbb
dec
shlb
call
test
jnp
jnp
rcrb
jl
ljmp
dec
das
dec
push
inc
mov
inc
test
push
dec
in
inc
cmpsl
stos
dec
movsb
call
enter
jne
call
lods
jns
cmp
fdiv
push
inc
inc
sarb
fimuls
cwtl
dec
movsl
das
daa
movsl
stc
add
push
mov
adc
js
jne
jl
push
insl
sbb
xor
ss
incl
lret
xchg
cmp
or
and
adc
mov
inc
xor
pushl
fidivs
shld
ds
sbb
call
ljmp
into
scas
jmp
or
decl
xor
xchg
push
call
in
daa
inc
nop
push
sub
decl
xchg
lret
test
or
ljmp
icebp
in
jmp
pushf
fs
adc
insl
jbe
xchg
into
movsl
or
test
pushl
lcall
jmp
mov
jmp
mov
std
sti
push
inc
in
mov
inc
popa
pop
aas
push
push
out
cli
test
repz
inc
cmpsl
les
incl
ljmp
xchg
aaa
inc
push
mov
clc
push
add
cmp
mov
mov
lret
inc
loop
xor
mov
inc
packssdw
mov
stc
xor
fists
inc
sbb
xchg
and
into
stos
pushl
sbb
mov
jmp
ss
imul
gs
aam
or
lcall
mov
call
js
cltd
mov
jmp
rclb
push
sbb
xor
cmp
fs
sbb
mov
call
pusha
repnz
fimull
dec
mov
inc
cmp
jmp
mov
add
ljmp
dec
sub
ljmp
ljmp
dec
loop
insl
dec
mov
outsl
sub
jno
pop
lcall
mov
scas
decl
pop
dec
mov
es
decl
fxtract
adc
aam
push
inc
test
ljmp
aaa
mov
incl
push
pushl
jle
ja
xor
ljmp
adc
fstl
sub
ljmp
xchg
sub
push
add
xor
pushl
fcompl
ljmp
cmp
repnz
lea
pushf
xor
lock
ljmp
aad
inc
ss
push
dec
scas
jmp
in
test
fcmove
add
pop
push
in
lahf
imul
dec
sar
or
adc
sahf
dec
aaa
xchg
outsl
and
xor
cmp
decl
loope
sub
ljmp
push
in
sbb
cmp
cmp
call
ljmp
jmp
jnp
es
mov
inc
stos
ljmp
fisttpl
decl
inc
in
sbb
xchg
mov
loopne
shlb
mov
xlat
xor
pushl
cmpsb
lcall
jne,pt
cmp
pushl
cltd
push
shrl
jmp
or
incl
add
ljmp
push
dec
jnp
in
fs
push
xor
hlt
dec
xchg
fstps
cmpsb
inc
add
call
xor
icebp
dec
adc
imul
cs
incl
repz
xor
insl
bound
inc
ficompl
jne
sbb
out
pop
pop
aaa
adc
or
call
cmp
xchg
decl
jg
test
push
aad
mov
jo
ret
cmpsb
pushl
jp
cltd
pop
inc
sbb
bound
enter
lcall
sahf
inc
sub
xchg
push
push
inc
inc
and
call
sbb
iret
sbb
ja
mov
jmp
popa
xchg
jno
lea
dec
lahf
inc
jle
mov
push
cmovge
iret
adc
enter
stos
ljmp
mov
pushl
xchg
xchg
ret
mov
jbe
add
fstpt
push
in
jne
aas
in
jns
dec
or
mov
push
xchg
pop
sbb
out
int3
pop
shll
cmp
mov
mov
lcall
jmp
orl
pop
stc
out
int3
ja
adc
xlat
sub
pushl
decl
in
popa
mov
pusha
dec
shlb
mov
jnp
jb
decl
inc
or
les
lods
ljmp
jmp
out
mov
das
js
cmp
scas
decl
cmp
dec
ss
mov
lret
cs
call
inc
pop
cmp
decl
es
jmp
mov
mov
dec
dec
sarl
cltd
imul
jl
test
popf
fsubr
fsubrl
incl
mov
dec
mov
stos
pushl
jb
pushl
lcall
in
leave
das
sub
jno
aam
push
loope
clc
in
add
pushl
testl
clc
mov
and
decl
vphaddubd
icebp
flds
mov
add
mov
jl
lods
ljmp
push
cmp
push
jmp
pushl
es
jmp
adc
sub
push
inc
jbe
cmp
pushl
fdiv
or
ds
stos
mov
lds
lods
push
sub
lcall
inc
add
nop
sub
ljmp
dec
mov
cld
imul
push
in
sbb
lcall
out
mov
pushl
call
inc
iret
push
sub
mov
xchg
cmp
lcall
insl
dec
mov
lcall
pusha
adc
inc
push
jmp
fmull
out
call
xchg
dec
adc
decl
push
xor
stc
lret
mov
lcall
jp
sbb
ja
xabort
fildl
pop
jnp
fisttps
push
call
ljmp
out
ljmp
sub
push
inc
fisubrl
add
push
incl
jge
jg
cmp
lods
jmp
outsl
adc
pushl
decl
sbb
jp
incl
lcall
insb
inc
in
shl
insb
lds
jmp
dec
push
fimull
cld
push
pop
sub
out
mov
sbb
lret
ret
mov
inc
adc
sahf
xor
call
ljmp
fwait
nop
inc
aaa
das
jmp
jmp
sub
call
fs
test
add
jmp
mov
mov
dec
push
adc
pushl
icebp
cltd
in
sbb
jmp
aam
nop
cmp
pusha
ds
pop
or
mov
shlb
call
push
test
call
les
pop
jne
add
dec
push
mov
or
incl
mov
dec
inc
fisttpll
incl
xchg
mov
jg
cmp
scas
dec
mov
xor
pop
divb
nop
mov
js
sbb
cmpsb
jmp
bound
iret
inc
mov
ljmp
adc
dec
pop
jno
cltd
pushf
enter
push
fadd
stc
sbb
jns
cmp
inc
aaa
stc
jno
lret
push
sbb
call
mov
sbb
pop
xchg
mov
jmp
hlt
lods
decl
jmp
mov
adc
repnz
daa
es
push
sub
das
pop
les
cli
in
sbb
jns
push
cwtl
out
adc
or
lcall
bound
pop
rorb
iret
xlat
xchg
and
xlat
mov
andl
sub
out
mov
xchg
xlat
popf
cmp
ret
nop
mov
add
cmpsb
lcall
pusha
mov
pushl
cmp
jmp
jmp
inc
xchg
inc
inc
std
push
daa
pop
inc
ja
mov
mov
jmp
jno
mov
arpl
dec
je
ret
js
jle
mov
cs
ljmp
leave
mov
inc
mov
lea
and
fnstcw
adc
loope
sbb
jo
xor
push
dec
out
push
dec
mov
fadd
mov
fucomp
xor
cs
ljmp
incl
cltd
test
jl
loopne
push
cs
jmp
movsb
decl
imul
mov
inc
push
call
lret
dec
push
jns
ljmp
lods
and
int
push
and
filds
sub
decl
insb
aas
push
add
add
lcall
mov
sub
ljmp
mov
shlb
icebp
les
lea
es
pushl
inc
leave
dec
sub
fimuls
jnp
mov
xor
inc
fsts
popa
jcxz
js
push
fsubr
inc
imul
adc
lcall
int
cmp
es
decl
loope
loop
or
out
mov
repz
ficompl
lock
xor
cmp
ljmp
pushl
incl
jmp
adc
out
lock
jg
pushf
ss
sarl
incl
repz
ret
push
and
lcall
test
faddl
incl
icebp
popa
mov
pushl
das
pop
call
mov
sbb
fnstcw
jmp
jno
insb
arpl
jecxz
pop
cmp
jae
jnp
call
repz
incl
lcall
in
add
call
mov
jmp
repnz
fwait
sahf
scas
pushl
jp
sbb
and
loope
inc
fidivrs
mov
call
sub
call
ljmp
mov
mov
pushl
rcrl
repnz
decl
incl
inc
pushf
ss
test
push
jg
arpl
xchg
dec
sbb
pop
movsb
mov
js
inc
jnp
jo
cmp
incl
icebp
dec
add
jmp
mov
idivb
mov
call
jp
pushl
clc
and
xor
mov
imul
pop
gs
call
std
in
xchg
or
pushl
jb
push
sub
lcall
jns
add
push
incl
cmp
lcall
sub
jp
rcr
dec
jne
push
inc
dec
or
js
xchg
addr16
decl
lcall
popa
push
nop
hlt
rcrb
mov
pop
ds
inc
scas
jmp
lcall
test
jl
or
dec
xchg
fldenv
jg
inc
loop
and
mov
fcomi
xchg
aaa
addr16
dec
cmp
xor
and
decl
dec
shl
pushf
xchg
lahf
or
cld
jbe
cmp
lcall
call
pop
aad
in
push
or
lcall
decl
jns
push
sub
cmp
jmp
jle
cmp
clc
dec
inc
in
or
decl
jmp
push
inc
push
fmuls
mov
adc
jmp
ljmp
mov
jecxz
pop
clc
mov
or
lcall
outsl
push
cld
lcall
sub
js
jmp
lcall
pop
sbb
mov
sub
cmc
cltd
and
ret
aas
shrb
dec
loopne
adc
dec
scas
jmp
push
lcall
fcoml
lret
ljmp
xor
mov
ljmp
ljmp
lcall
xchg
call
in
jno
loope
mov
mov
pop
pusha
cs
push
inc
adc
popa
outsl
mov
incl
pop
cmc
add
push
pop
mov
jecxz
pushl
lret
sahf
adc
jb
dec
and
xor
daa
in
out
pop
add
pushl
and
std
adc
test
incl
div
lret
pusha
sahf
sbb
into
push
mov
mov
sbb
xchg
sub
decl
call
into
cs
dec
jge
xchg
xor
push
jle
sarb
lcall
loope
out
lcall
xlat
jle
sub
incl
jp
incl
jns
cld
aaa
mov
xchg
cmp
ljmp
fidivrs
mov
call
xchg
test
incl
mov
push
nop
sub
pushl
dec
adc
inc
sub
ljmp
jnp
aas
jle
jmp
jecxz
repnz
sub
ljmp
incl
cmp
mov
mov
inc
mov
adc
pop
mov
mov
xchg
jle
rcr
sub
mov
add
pushl
filds
rcll
cmpsl
jo
adc
je
in
sbb
mov
jmp
or
mov
gs
call
or
stos
lcall
clc
gs
decl
lcall
leave
push
jmp
inc
jnp
xor
cli
enter
out
jmp
nop
mov
jmp
int3
mov
call
cmp
jno
add
incl
sbb
sub
pop
aaa
push
out
decl
push
decl
in
cmc
mov
int3
pop
and
data16
decl
inc
mov
push
rorl
push
int3
xchg
and
movsl
push
out
mov
mov
push
call
je
or
imul
fldt
incl
sbb
sub
jp
add
decl
dec
mov
pusha
ds
and
popf
ss
stos
iret
or
sahf
dec
or
pushl
xchg
js
test
ljmp
fwait
sbb
mov
es
decl
jle
call
js
clc
aas
cltd
imul
push
adc
outsb
pushf
icebp
xor
in
lock
fbld
mov
bound
nop
dec
jae
pop
push
test
sbb
insl
mov
inc
lret
pop
inc
cmp
out
mov
in
or
lcall
out
das
push
scas
and
ljmp
cmc
xchg
push
out
les
push
icebp
push
pop
jo
ja
jmp
push
push
jmp
movsb
pushl
pop
xor
dec
lea
add
mov
test
fnstcw
push
arpl
add
fsubl
call
divb
adc
call
call
cmpsb
call
imul
push
lret
pusha
test
incl
and
call
push
lret
fildl
incl
pop
cmpsl
fcomip
fwait
push
ljmp
dec
je
and
jmp
jmp
sbb
lcall
ds
ret
inc
dec
jge
clc
xor
testl
xchg
sbb
mov
sub
call
lcall
cmp
push
fldl
ss
fidivs
and
imul
sarl
std
sub
decl
lods
cmp
fcmovbe
das
sub
jmp
stc
fwait
pusha
xor
push
loopne
jmp
incl
outsl
mov
decl
lcall
es
incl
mov
fwait
pop
inc
adc
lcall
test
lcall
icebp
jle
add
sbb
dec
mov
sub
adc
dec
or
push
js
sarb
pop
cmp
nop
mov
scas
call
repnz
dec
fidivrs
inc
out
test
push
lcall
inc
cmp
pushl
daa
mov
incl
xor
mov
jmp
lcall
jg
dec
out
or
decl
dec
enter
decl
ja
fsubl
sbb
adc
pop
adc
shlb
lcall
incl
pop
aad
cmp
lcall
xchg
sub
call
je
and
jmp
cli
push
inc
push
inc
ret
loopne
decl
fs
out
sub
fcoms
and
call
fldlg2
adc
jmp
dec
scas
decl
dec
ret
fcoms
pop
cltd
popf
call
leave
dec
push
leave
ret
rorb
sub
dec
outsl
lods
js
nop
mov
push
decl
mov
dec
cmp
cmp
mov
das
and
mov
lcall
aad
push
sub
repz
jmp
leave
xor
arpl
daa
mov
or
jmp
lahf
cmp
lcall
dec
xchg
loopne
test
pusha
in
imul
push
xchg
pop
stos
dec
popa
inc
dec
cmc
push
inc
xcrypt-ctr
cmpsl
fiaddl
int3
mov
dec
movsl
pop
sub
xor
daa
mov
es
clc
clc
mov
incl
movsl
sub
movsl
or
daa
pop
jb
es
decl
pushl
jmp
fisubrs
mov
push
or
incl
loop,pt
push
jmp
enter
jmp
sahf
pop
and
jmp
rorb
std
mov
pop
roll
push
ss
push
adc
arpl
repz
test
call
inc
movsl
mov
xchg
jno
dec
pop
cmp
mov
add
mov
daa
push
add
add
in
jnp
xor
testl
int
or
push
and
pushl
cmp
fimuls
jns
mov
bound
mov
scas
ljmp
cwtl
mov
fmul
xchg
outsb
and
decl
hlt
jmp
cmpsl
or
insb
fisttps
push
movsl
xchg
cmp
or
incl
xchg
mov
pusha
inc
and
mov
xor
xchg
xchg
jbe
sbbl
mov
ljmp
decl
lcall
cmp
dec
mov
in
push
xchg
fimull
lcall
je
imul
push
jmp
scas
jmp
mov
dec
pop
addl
decl
ljmp
and
decl
jno
sahf
push
jns
loope,pt
cmp
decl
and
inc
pop
fs
fsubs
pushf
mov
in
bound
push
and
inc
lock
jmp
inc
xchg
aad
cmpsl
mov
adc
ja
cmpsb
decl
push
test
ljmp
pushl
incl
xchg
xchg
push
call
scas
pushl
adc
dec
adc
in
imul
sub
cli
lock
add
call
aad
repz
dec
add
xor
incl
cmp
cmp
adc
incl
pop
inc
adc
adc
cmp
incb
sbb
lods
ljmp
lcall
sbb
push
mov
sbb
and
decl
ljmp
cwtl
rep
lock
cmp
int
test
pushl
adc
std
or
incl
in
dec
push
pop
cli
icebp
lods
ret
lods
incl
ss
decl
dec
bound
fstl
dec
jg
pop
jle
push
repz
jns
push
adc
adc
jmp
call
and
lcall
lock
mov
mov
sarb
jp
xchg
mov
incl
inc
xor
out
push
call
flds
decl
pop
push
icebp
xchg
js
dec
cmp
fcoms
add
pop
test
call
sub
ljmp
cmp
sub
popf
outsb
inc
gs
lret
mov
lds
call
test
jmp
dec
mov
push
jmp
push
cli
push
dec
mov
xor
ljmp
cmp
or
pushl
arpl
mull
mov
addr16
orl
lahf
shll
push
dec
mov
cwtl
mov
lcall
jns
xchg
bound
and
pushl
dec
aas
add
mov
jecxz
fdivrl
add
ret
mov
pop
shrl
dec
xchg
or
out
cwtl
dec
dec
call
nop
pop
push
sahf
adc
push
decl
cmp
fcoms
punpckhwd
dec
mov
clc
and
call
call
iret
fdivs
pushl
add
call
lcall
dec
cmp
inc
jl
cmp
sub
decl
cmp
pushl
enter
stos
sub
fsubl
lock
ja
aad
mov
int3
xor
sub
cmp
fstpt
pop
mov
ljmp
call
or
insl
insl
add
ljmp
xchg
incl
jno
out
mov
ljmp
test
pop
mov
jmp
or
pushl
decl
rolb
add
fsts
jge
add
icebp
rcrb
out
jae
pushl
sub
push
mov
push
jns
lret
mov
jmp
xchg
dec
adc
popf
lods
xchg
pushl
decl
cmp
jmp
pop
enter
ljmp
xchg
call
fldenv
jg
call
push
pop
push
jmp
je
pop
jo
pushl
stos
mov
ljmp
jmp
decl
jmp
dec
enter
incl
aas
xchg
mov
and
sbb
decl
and
inc
inc
mov
cli
into
pusha
jno
sbb
push
pop
sbb
rcrb
lcall
shll
loopne
test
and
mov
ss
dec
jl
fisubrs
cmp
ljmp
decl
add
incl
or
ljmp
pushl
sbb
bound
sub
call
incl
decl
decl
shll
sbb
mov
dec
mov
lcall
xor
xchg
scas
icebp
jmp
mov
daa
mov
fisubl
fisubl
pushl
jae
mov
js
pop
push
jmp
cwtl
in
or
jmp
fsts
pushl
or
jns
mov
xor
in
cld
mov
in
lcall
int3
push
lahf
add
jmp
fs
inc
std
xchg
inc
push
arpl
daa
pop
and
push
lcall
ljmp
call
loope
jns
or
lea
in
cmp
dec
fdivl
aaa
push
or
cwtl
mov
aas
sbb
call
jg
xchg
loopne
sbb
lcall
dec
mov
lcall
inc
push
jp
cmp
xor
sub
incl
incl
jle
pop
mov
cwtl
jecxz
jns
movsl
scas
ljmp
pushl
aas
push
cmp
pushl
cs
lcall
clc
pop
or
inc
test
sahf
xchg
cmp
pop
inc
sbb
cld
cwtl
sub
std
mov
decl
and
call
or
inc
mov
xorl
cmp
push
decl
std
rcrl
int3
out
movsb
ljmp
lahf
testl
ja
fistl
jmp
xchg
or
incl
adc
cmpsb
lcall
lahf
and
jns
xchg
in
into
adc
fildl
jg
pop
inc
je
mov
call
pop
pushf
jo
imul
jmp
push
scas
fcompl
ja
loopne
gs
jmp
outsl
lods
lcall
scas
mov
pushl
repz
jmp
call
push
stc
and
aas
adc
sub
sti
cmpsb
in
mov
rcll
aad
call
pushl
aam
arpl
cmpsb
lcall
cmp
incl
pop
insb
sbb
pop
sbb
out
or
call
cmp
decl
enter
bound
test
jo
sbb
inc
or
jmp
push
std
push
into
jo
ljmp
pop
addr16
pushl
sbb
mov
or
jmp
push
arpl
or
dec
mov
mov
dec
mov
add
mov
jmp
mov
push
jbe
mov
push
call
fcompl
daa
sub
outsb
test
idivb
call
or
jg
push
paddb
add
call
jmp
incl
add
decl
decl
xor
ror
and
inc
or
mov
pushl
pop
out
jns
out
outsb
mov
call
xchg
rclb
leave
mov
or
insb
or
call
fstl
xchg
fsts
dec
mov
xchg
test
test
pushl
dec
rcrb
cmp
sbb
dec
lret
dec
add
lcall
cmp
ljmp
or
ljmp
jmp
push
rol
adcl
repnz
bound
adc
aad
push
dec
or
mov
ljmp
mov
fmuls
jmp
pop
mov
call
iret
jb
jae
pop
insl
lcall
cmp
pop
push
pop
adc
cmp
push
call
ret
call
loop
and
jmp
fistps
addl
mov
icebp
mov
sub
decl
call
cltd
es
pushl
push
incl
clc
jle
jg
shr
aaa
aam
out
into
sbb
mov
incl
sbb
jne
push
xor
mov
idiv
fsts
sbb
mov
push
pushf
xor
pop
mov
incl
mov
ljmp
jo
fcoms
jmp
cmp
sbb
sbb
and
incl
aaa
pop
hlt
xor
bound
lcall
test
adc
repnz
dec
or
aas
sub
ljmp
mov
cs
jmp
inc
in
push
call
adc
inc
adc
ds
ja
lret
mov
push
clc
rol
je
aam
pop
jb
xor
add
into
jbe
adc
mov
popf
jge
outsb
je
mov
mov
xchg
call
pop
sub
outsl
fwait
mov
jle
ret
cli
xchg
stos
lcall
decl
mov
idiv
xor
dec
cmc
addr16
pushl
push
test
mov
jmp
dec
xchg
in
pop
and
dec
incb
jns
mov
jmp
dec
inc
ja
pushl
lret
push
pushl
mov
jns
int
sbb
lds
shrb
lcall
ja
mov
jns
cmp
ljmp
out
sub
sti
push
in
sub
or
incl
inc
mov
dec
out
cltd
test
fmul
ds
xchg
bound
jmp
mov
stc
push
pop
ds
lcall
inc
call
shll
mov
decl
pushf
or
hlt
inc
inc
shlb
lods
insl
jg
jnp
rorb
fidivs
ljmp
shrb
xlat
ffreep
das
sub
incl
jmp
out
sub
jmp
addr16
rcrl
call
push
inc
push
inc
and
incl
decl
inc
fistl
lea
incl
pop
bound
xor
xchg
incl
jmp
add
addr16
fdivs
mov
rolb
mov
mov
call
adc
lret
cld
push
jecxz
push
lcall
or
lcall
mov
sarb
pop
add
jmp
jl
pop
push
jmp
out
push
pushl
xor
jo
lcall
mov
pushl
xchg
icebp
cli
gs
pop
sbb
cmc
cmp
and
incl
scas
push
mov
fistpll
rcrl
inc
cmp
daa
les
mov
daa
popf
lock
jmp
call
add
or
jmp
lcall
cmp
dec
adc
daa
and
lcall
lods
sti
jbe
in
imul
add
adc
lcall
pushl
das
es
pushl
cmpl
fcmovu
jne
pop
add
mov
lret
daa
cmc
mov
lret
and
push
mov
scas
decl
or
call
jmp
fmul
inc
sub
call
xor
adc
decl
test
call
xor
in
mov
lcall
cli
or
mov
int3
sbb
or
mov
cmc
popl
jnp
xor
fisubrs
test
clc
cwtl
jae
xchg
lcall
cld
ljmp
call
hlt
repnz
pushl
xchg
jle
and
divb
cmp
sbb
mov
mov
xchg
pushl
fbstp
sbb
ds
and
jp
inc
ficoml
std
inc
dec
dec
xor
xchg
mov
sbb
jl
jnp
xor
sbb
lods
decl
adc
call
imul
ficomps
lcall
and
lcall
aam
jno
cmp
mov
call
or
cmp
jmp
jmp
cmp
ljmp
lcall
mov
mov
pushl
cmpxchg
mov
dec
scas
sub
lcall
jle
incl
lcall
jg
test
call
pop
inc
or
mov
jg
xchg
out
shl
or
jmp
es
push
lret
mov
push
pop
icebp
push
in
dec
mov
jge
fiaddl
dec
xchg
or
call
outsb
cmpsl
ja
data16
scas
stos
jmp
ret
lahf
mov
decl
outsl
aaa
sbb
mov
sti
push
cmp
add
jmp
cltd
adc
jae
and
and
js
jns
call
mov
jmp
push
mov
rdmsr
jnp
ljmp
jmp
cmpsl
cs
fnstenv
decl
cmpsb
ljmp
push
arpl
xchg
decl
addr16
jg
pop
jg
fildll
decl
sarb
push
dec
mov
and
mov
pushl
inc
in
out
rorl
jge
mov
pop
jne
fiadds
popl
insl
add
jmp
stc
mov
dec
xchg
xchg
imul
and
call
hlt
xchg
adc
mov
lcall
loope
pop
ja
fistpll
or
lcall
test
incl
cmp
testb
sbb
outsb
mov
mov
scas
in
sar
addr16
ljmp
xchg
dec
cmp
incl
neg
leave
push
jmp
sbb
push
push
cmp
incl
mov
jmp
mov
jmp
pushl
cli
scas
mov
loop
ret
and
cmp
ror
je
loopne
mov
push
pusha
test
incl
lods
outsb
test
jnp
push
decl
jno
std
push
inc
bound
repz
xchg
in
and
ljmp
lods
fildll
decl
repz
fsubrl
inc
test
ljmp
sbb
out
adc
and
cmpsb
decl
push
ja
and
push
in
ss
dec
insl
cmc
shlb
decl
cmp
sbb
jmp
rorl
cmpsl
jp
xchg
test
pushl
loop
sbb
sbb
icebp
lahf
xchg
aas
inc
xchg
mov
into
clc
in
lret
cld
adc
lods
mov
xor
push
fdivrs
jp
out
pop
xor
adc
cmpsl
rorb
cmp
pop
insb
imul
xchg
mov
or
push
cmp
cmc
out
lcall
in
int3
xchg
in
repz
adc
cmp
add
decl
jne
lods
call
clc
aad
add
lret
mov
jl
cwtl
clc
add
xor
imul
pushl
call
popa
mov
mov
lret
cld
pop
mov
out
sti
add
incl
xchg
lcall
sahf
xor
sbb
push
lahf
xor
incl
inc
cmc
push
xor
and
ljmp
xor
and
pushl
cmpsb
decl
cmc
repz
cmp
ljmp
call
int
in
fldcw
lcall
lea
jmp
rcr
xchg
dec
fdivs
cmp
or
sbb
mov
ss
fs
movsb
incl
add
decl
jmp
incl
push
call
ljmp
scas
cmp
outsl
enter
fmulp
push
pop
into
xchg
and
pushl
cmc
cld
repz
outsl
push
adc
push
jo
ljmp
ret
adc
mov
mov
xor
push
aad
sarb
pushl
call
mov
or
pushl
dec
mov
dec
xor
cmp
lret
call
jo
cs
inc
push
in
push
jne
repnz
cmp
jmp
shl
in
and
incl
or
lcall
das
sub
lcall
xor
mov
jmp
in
test
ljmp
lcall
push
mov
sbb
xchg
push
loopne
dec
dec
stc
mov
inc
rcll
out
jmp
pushl
jne
loop
decl
mov
ljmp
imul
fwait
mov
gs
mov
ds
or
pushl
jns
inc
jecxz
aaa
mov
inc
pushf
ljmp
mov
xor
mov
dec
jle
ret
mov
mov
push
push
push
jmp
daa
jle
mov
ljmp
mov
es
jmp
ret
mov
mov
lods
jle
xchg
loopne
mov
lcall
add
mov
out
lcall
shr
jge
xchg
add
cs
incl
call
push
mov
xor
inc
mov
pop
inc
lock
jecxz
out
je
fdivrl
inc
mov
outsb
jnp
cli
lcall
sbb
out
ljmp
inc
cs
jl
xchg
push
call
pop
pop
test
cmp
cmp
jle
ljmp
jmp
cmp
sahf
subps
inc
push
das
sub
pushl
mov
adc
decl
xor
xor
mov
pushl
aam
ret
std
inc
sahf
mov
ljmp
lcall
int
ja
dec
pop
sti
insb
es
pushl
jl
ret
mov
and
call
or
lcall
call
pushl
jae
decl
ljmp
push
ljmp
js
mov
ret
call
rolb
jns
xchg
xchg
fistps
sarb
aam
out
xchg
xorl
outsb
xchg
push
adc
imul
call
mov
cli
mov
mov
rorb
xchg
cmp
lcall
xor
rcrb
or
decl
and
inc
cmp
cs
call
sbb
test
decl
mov
pushl
cmp
sbb
fnstsw
jmp
repz
lcall
arpl
pusha
inc
outsl
push
incl
in
xchg
mov
mov
lds
jae
arpl
test
call
push
dec
popf
xchg
decl
shrl
mov
ret
idiv
aaa
xchg
pop
aam
fcompl
xchg
insb
lahf
enter
jns
cli
push
push
nop
bound
out
and
out
ficoms
outsl
sbb
mov
jmp
call
out
notl
push
push
dec
in
scas
pushl
cmp
cli
fst
jne
fistpl
ljmp
decl
inc
inc
mov
fdivl
ja
das
mov
insb
ljmp
incl
adc
sar
enter
push
in
js
xchg
xchg
push
xchg
call
dec
test
call
mov
push
addr16
sarb
dec
inc
cmpsb
pushl
xchg
and
adc
pop
movaps
cmp
sub
jmp
jmp
mov
and
jl
jae
cs
incl
ljmp
inc
lds
jecxz
fnsave
dec
cmp
lcall
gs
mov
push
ret
imul
outsb
and
mov
jmp
sbb
cmp
dec
pop
cmp
jp
je
pop
mov
cltd
and
incl
rcl
adc
sbb
ds
mov
add
call
inc
in
incl
add
ljmp
adc
lret
inc
jbe
pop
ficomps
imul
loop
push
lds
hlt
and
ljmp
sub
dec
imul
cmp
ljmp
rcr
jne
incl
jmp
lcall
int
sub
decl
sub
mov
jnp
outsb
int
imul
cmp
ljmp
mov
xor
pop
dec
in
and
mov
mov
add
cmpsl
stc
inc
fwait
xchg
iret
test
shl
scas
ljmp
in
adc
inc
cmp
cmp
jmp
fwait
or
cmc
push
cltd
mov
push
popf
stos
sti
shl
pop
lret
clc
sahf
scas
mov
jmp
ds
call
std
stos
inc
jmp
stos
pop
sbb
dec
mov
cli
adc
call
out
add
ljmp
and
adc
stos
ljmp
xchg
shll
jmp
pop
ljmp
call
lea
call
fidivrs
insl
fbld
xchg
movsb
jmp
sahf
dec
lret
mov
lret
sar
inc
xor
mov
decl
inc
pop
imul
incl
mov
ljmp
pushl
jmp
hlt
sbb
lcall
mov
call
imul
xor
and
call
sbb
out
jge
into
ret
imul
add
rol
es
decl
stos
in
xchg
xchg
push
jl
jmp
movsl
aaa
lock
cld
push
pop
fs
add
decl
jmp
adc
cs
fsts
push
jno
decl
cs
jmp
cld
lods
or
incl
mov
fidivrl
fmulp
mov
out
push
fmuls
and
pushl
inc
lret
repz
mov
mov
mov
incl
ret
fisubl
aas
pushf
xchg
push
jnp
cmpsl
imul
rorb
incl
out
push
mov
jo
pop
outsb
mov
push
addr16
lods
xor
loop
xchg
sub
call
incl
insb
mov
xor
inc
cmp
sbb
outsl
sub
lret
cld
cmp
pushl
xor
mov
rcr
ror
mov
dec
scas
aas
insb
cmp
frstor
push
test
mov
and
ljmp
ljmp
cmp
pop
imul
lcall
pushl
leave
or
call
fldt
lock
ljmp
decl
decl
fiaddl
js
inc
sbb
fidivl
inc
leave
jae
enter
push
jmp
mov
push
lcall
cwtl
fwait
repz
mov
jmp
fs
cli
xchg
add
jmp
call
test
pushl
push
cwtl
mov
jmp
pop
push
ljmp
call
bound
push
xchg
pop
add
jle
notb
inc
cmp
xchg
notl
in
pop
ret
out
insl
add
mov
jmp
outsl
pop
lret
dec
cli
repnz
push
std
dec
scas
lcall
mov
out
pop
jp
and
ljmp
jne
pusha
in
popa
jae
mov
popa
jg
stos
jmp
push
and
xchg
decw
arpl
xchg
outsl
fsubl
decl
cmpsl
jmp
pushl
stc
jmp
adc
jg
outsl
mov
pop
or
adc
icebp
mov
das
out
sub
sbb
lcall
dec
cli
incl
dec
jns
cli
in
out
cmp
sahf
sbb
pushl
adc
sbb
pop
bnd
sub
call
push
jbe
decl
jg
leave
rclb
dec
cmp
ljmp
lahf
xor
lahf
mov
and
jmp
incl
push
call
les
mov
icebp
and
mov
ljmp
out
jecxz
shlb
ja
pop
movsb
jmp
jns
pop
fwait
shll
xchg
fnsave
mov
push
lcall
call
sub
addr16
ds
dec
cmp
mov
inc
jns
xor
test
call
adc
aad
jmp
scas
push
push
cmp
dec
je
decb
int3
sbb
pop
inc
mov
cmp
push
mov
incl
or
call
mov
in
sahf
imul
out
mov
mov
dec
push
and
jl
aaa
mov
loopne
mov
and
decl
pushl
dec
mov
repnz
jbe
jns
cmpsl
cs
ljmp
lcall
call
sub
pushl
sti
sub
lcall
into
gs
call
xchg
pushf
les
cmp
mov
add
std
xor
incl
insb
std
cmp
pushl
roll
lcall
decl
jmp
les
in
decl
cltd
int
cltd
insl
pop
shlb
push
decl
sub
ljmp
cld
es
inc
je
push
jg
push
xchg
negl
lret
popf
pop
xor
adc
xchg
jae
add
incl
into
pop
jmp
les
cmp
jmp
lcall
sahf
jmp
cmpsb
inc
sbb
pop
mov
js
inc
xchg
hlt
add
incl
sbbl
incl
pushl
ljmp
jge
adc
push
pushl
lds
and
xor
js
std
sub
decl
cmc
adc
lahf
cmp
lcall
ds
call
adc
push
dec
and
lcall
je
adc
and
call
out
lock
and
add
pushl
cltd
xchg
scas
decl
call
insl
dec
jb
xor
mov
mov
addl
pop
mov
jmp
loope
jb
shlb
pushl
in
loopne
inc
lea
andl
aaa
out
int
jb
xchg
jg
xor
loop
mov
daa
and
ficompl
adc
aaa
sbbl
sub
jmp
mov
cmp
lahf
pslld
dec
out
dec
imul
add
pushl
dec
imul
addr16
insl
mov
mov
push
add
filds
cmpsl
decl
inc
int
sti
imul
icebp
in
outsb
xchg
jbe
adc
lock
xor
lods
call
pop
jl
adc
scas
incl
cmp
dec
fistpll
mov
ljmp
pop
testb
jmp
lcall
inc
fisubrl
test
incl
repz
stos
loope
mov
fistpll
ljmp
cmp
sti
cmp
xchg
fs
scas
jmp
add
jnp
jae
data16
gs
insb
sbb
mov
ljmp
addr16
xchg
jecxz
test
jmp
dec
mov
sahf
fwait
dec
mov
jecxz
push
jmp
decl
pop
xchg
mov
xor
movsl
adc
call
xor
call
ss
call
pop
jp
or
pushl
cwtl
push
int
adc
sbb
cld
xor
xchg
push
jbe
xchg
push
mov
mov
clc
pusha
loope
sub
pushl
inc
cli
lock
lds
jmp
mov
pushl
pushl
pop
mov
into
xchg
push
cmpsb
lcall
in
mov
decl
lea
outsl
fisubrl
mov
adc
mov
and
cmp
jmp
mov
pushl
dec
mov
ljmp
adc
cltd
sub
ljmp
ret
call
push
mov
jmp
lcall
out
imulb
decl
sbb
sub
mov
and
pushl
pop
lea
sub
lcall
dec
scas
sub
inc
xchg
test
push
pop
dec
scas
rcr
cli
mov
fdiv
rcr
jnp
push
sub
jmp
add
add
or
leave
mov
sub
das
das
xor
jb
aad
out
test
call
xchg
subl
decl
decl
sbb
or
ljmp
cmp
adc
add
pushl
jmp
jmp
push
cmp
incl
sub
inc
inc
das
in
push
das
inc
xchg
shlb
add
call
and
add
incl
push
mov
sahf
xchg
sbb
jae
cmp
lcall
jmp
push
das
repnz
stc
inc
mov
add
cmp
stos
pop
pop
iret
mov
repnz
lret
mov
sti
movsl
push
call
push
incl
cld
xchg
call
mov
pop
jmp
sbb
cmpsl
cmp
ss
mov
xchg
imul
sbb
leavew
mov
mov
cmp
stc
jbe
jle
mov
incl
decl
jle
mov
insl
jo
in
loop
fdivrp
int3
lds
stos
fs
cmp
popa
and
decl
mov
pop
sbb
cmp
js
fildl
stc
inc
xor
insl
xchg
loopne
cmp
jmp
pusha
cltd
insl
jae
inc
insl
imul
sbb
sub
mov
sbb
jmp
decl
inc
adc
movsb
inc
ss
gs
mov
jns
mov
loope
or
incl
lcall
dec
xchg
sub
push
inc
mov
xor
ret
jmp
jae
fisubl
popa
sbb
cs
pushl
in
ljmp
jmp
leave
xlat
jp
aam
xchg
add
pop
clc
mov
aaa
cld
jle
fs
icebp
sbb
out
xchg
in
add
outsl
in
cli
fcoml
test
ljmp
or
call
jmp
shlb
lcall
int
mov
call
sbb
decl
pop
mov
ja
test
incl
jmp
sbb
sarb
fmuls
adc
fsts
setns
outsl
mov
js
scas
pop
mov
incl
lcall
es
incl
cwtl
pushf
test
ljmp
inc
imul
inc
push
lahf
xor
push
andl
stos
decl
lcall
mov
and
in
pushf
pushf
adc
fwait
inc
and
xor
ds
call
pavgw
dec
int
xor
or
cli
scas
sti
jb
mov
add
scas
addr16
cmp
aad
sbb
fimuls
sub
mov
call
decl
ffreep
push
pop
mov
movsl
dec
into
mov
pushl
and
fiaddl
pushl
imul
ret
push
pushf
jnp
jmp
mov
sub
inc
fs
adc
popa
cmpsl
shlb
add
dec
popa
push
in
test
inc
cld
out
lock
pop
xchg
or
call
aad
fcmove
popa
cmp
fs
mov
or
cmpsl
aad
pushl
inc
pop
cmp
test
dec
mov
dec
mov
cli
sub
loopne
inc
imul
adc
js
ror
mov
adc
add
push
rorl
adc
pushl
push
mov
pop
xor
dec
hlt
add
jge
pushl
lahf
push
ss
divb
lock
mov
add
icebp
xchg
inc
push
pushl
inc
pushf
xor
cltd
dec
mov
inc
sbb
pcmpgtb
imul
adc
fcom
or
shrl
mov
or
decl
lcall
or
filds
jle
push
adc
cmp
incl
xchg
push
nop
stos
add
incl
or
loope
inc
cmp
add
ljmp
cld
xchg
mov
bound
mov
inc
cmp
ljmp
add
mov
push
jns
sbb
and
dec
ret
aaa
fnstenv
pop
mov
shll
jo
jae
mov
pop
dec
xchg
ljmp
jmp
cmp
ds
xchg
sti
push
in
adc
das
push
aas
push
xchg
sahf
shll
jae
and
lcall
xor
incl
push
add
add
adc
jnp
mov
mov
jmp
xchg
aaa
jmp
ljmp
loopne
jo
push
pop
stos
jmp
data16
pop
cs
jmp
nop
lods
shll
jo
cmc
nop
stos
lcall
push
les
jmp
mov
jg
push
xor
aas
push
pushf
insb
sub
pushl
mov
lcall
jns
mov
sub
mov
call
and
inc
and
decl
cs
incl
lcall
push
push
and
sbb
and
ljmp
inc
mov
push
inc
movsl
rcrl
call
xchg
adc
xor
lret
rcll
cmpsb
pushl
call
test
xchg
inc
mov
call
pushl
jb
jb
lret
add
pushl
mov
incl
lcall
jp
aad
outsb
mov
jmp
mov
push
test
mov
dec
shrb
repnz
iret
xchg
ljmp
ret
popf
mov
jmp
movsl
sti
in
inc
lret
sahf
pop
and
incl
dec
xchg
scas
call
push
mov
xchg
stc
push
into
dec
shr
cmp
ljmp
fdiv
xor
ljmp
pushl
idivl
jle
stos
mov
push
ljmp
mov
mov
cmp
jmp
shll
lcall
lcall
push
in
aad
mov
test
jmp
adc
adc
decl
lods
add
call
push
cltd
decl
dec
xchg
mov
jmp
sub
jmp
pop
pop
pop
sbb
or
call
pop
outsb
jno
lcall
jmp
push
ror
jo
sahf
jecxz
outsb
cmp
cwtl
and
decl
incl
push
xorl
call
mov
add
adc
jmp
int
jp
jg
mov
dec
push
ljmp
ljmp
popf
add
pushl
rcl
dec
pusha
lods
jmp
repz
roll
lods
clc
push
pop
push
dec
jmp
sbb
call
mov
ljmp
decl
cmp
inc
rolb
jmp
push
xchg
jg
sahf
push
lods
jg
daa
cmp
mov
dec
pop
or
lahf
aas
ret
adc
out
pop
fmull
push
pop
dec
movsb
decl
mov
rorb
pop
sti
mov
decl
incl
jmp
div
fbld
loopne
jae
mov
xor
decl
jne
cltd
stc
mov
mov
aad
pop
push
sbb
aaa
in
pop
inc
ljmp
mov
ljmp
jg
sbb
pop
testb
cmp
mov
pop
scas
lcall
pushl
cmp
imul
push
in
clc
out
aas
out
adc
pushl
scas
lcall
xchg
mull
hlt
xchg
pushf
lahf
xchg
scas
lcall
fnstenv
ljmp
jno
inc
push
je
lods
lcall
incl
aas
js
and
sti
jg
and
call
inc
mov
jne
daa
scas
call
push
dec
inc
dec
xor
cltd
or
call
push
clc
pop
pop
cmc
dec
mov
bnd
insb
jno
fldln2
pop
ja
cmpsb
ljmp
mov
lcall
cli
or
call
incl
lret
repnz
pop
inc
cmp
adc
iret
data16
fnstsw
jmp
js
out
cmpsb
inc
mov
push
xchg
ds
pushf
mov
ljmp
mov
jle
call
dec
popa
xor
cli
stos
pop
xor
add
jle
sbb
xlat
ret
mov
cli
xor
dec
ret
xor
inc
dec
stos
lds
decl
adc
jl
xchg
lret
mov
aaa
jle
xchg
jmp
and
ja
adc
pop
or
push
lahf
pop
jne
fmulp
pop
stos
call
cmc
ljmp
jmp
cmp
xchg
call
pop
adc
push
mov
or
mov
sti
mov
push
rcl
es
mov
lods
decl
mov
push
ret
inc
aad
jo
es
ljmp
mov
and
mov
incl
sti
cmp
pop
cmpsl
adcl
cmpsl
fidivrl
sbb
imul
dec
shll
stos
decl
cmpsb
incl
cmpsb
lcall
enter
cmp
pop
jo
clc
ja
mov
pop
icebp
fisttpl
dec
dec
and
jnp
adc
shrl
or
jmp
push
jmp
cmc
cmp
jmp
fcom
xchg
pop
push
out
lcall
call
and
mov
test
mov
lcall
aaa
fwait
jp
sub
lcall
push
cmpsb
call
testb
sub
fcoms
dec
dec
cmp
mov
popa
sbb
and
decl
adc
rcrb
adcl
mov
pop
movb
incl
inc
mov
xchg
outsl
and
pushl
in
movsl
jmp
lahf
xor
lcall
mov
movsl
out
cli
sbb
decl
data16
outsl
out
clc
mov
cmpsb
lcall
mov
pop
jecxz
ss
ljmp
cltd
les
std
imul
decl
popl
xor
cmp
incl
sarl
mov
jmp
pop
stos
lcall
ljmp
pushl
or
decl
out
movsb
push
fsubs
fnstenv
call
adc
std
inc
mov
mov
call
in
iret
inc
lds
fs
jp
inc
push
ljmp
pushl
or
push
xchg
dec
inc
jle
sbbl
pop
push
ss
fwait
iret
iret
rcrl
ljmp
ljmp
push
xor
sub
push
push
cmp
lcall
leave
xchg
mov
decl
pop
inc
bound
cmp
cmp
clc
mov
mov
or
decl
push
or
sbb
addr16
pop
mov
jno
lods
ljmp
xor
cmpsb
decl
inc
pop
jmp
push
inc
jne
call
out
dec
mov
push
xchg
xchg
into
out
js
cmpsl
lcall
call
insl
or
jnp
dec
or
fnsave
sub
iret
or
incl
push
sub
call
dec
mov
test
insl
addr16
jmp
out
push
dec
cmp
incl
mull
jmp
push
jmp
jnp
add
inc
cmp
and
sub
push
loope
pop
outsl
mov
loopne
movsb
call
jp
jp
fwait
jae
dec
inc
add
jmp
lret
jg
test
inc
dec
xor
loop
cmp
pushl
mov
jge
mov
incl
lea
loopne
lret
cmp
repz
xor
lcall
push
cmp
std
and
pushl
out
insb
ja
cmp
xchg
leave
inc
dec
mov
dec
clc
inc
sub
pop
jns
outsl
sub
mov
decl
decl
add
lcall
xlat
pushf
jg
mov
cwtl
push
inc
movsb
call
jb
cmc
pop
xlat
rolb
ds
add
pushl
mov
sbb
push
into
out
mov
push
cmp
jle
cmp
sub
bound
mov
mov
pushf
xlat
test
ljmp
call
or
jmp
push
xchg
ds
ljmp
push
cmpsb
push
mov
dec
movsb
jmp
decl
mov
addr16
xchg
xchg
aaa
jge
dec
shrd
mov
movsb
lcall
mov
cmp
inc
mov
lcall
pop
mov
inc
mov
decl
imul
decl
adc
jmp
mov
mov
push
push
pushl
std
fs
fldenv
cwtl
outsl
enter
and
inc
into
push
and
mov
ljmp
push
repnz
push
mov
cmp
insl
lock
push
push
lods
push
jne
inc
movsb
inc
jno
inc
sbb
pushl
adc
jp
incl
daa
inc
std
popf
popf
dec
mov
push
cmp
jmp
adc
loope
dec
xchg
cmpsb
pushl
cmp
pop
sahf
sub
lcall
pop
faddl
jp
dec
lds
mov
sub
call
fcmovnb
and
decl
addr16
fldenv
hlt
sub
pushl
mov
test
jo
cld
add
es
lcall
mov
sub
pushl
add
decl
fdivrl
add
jnp
mov
push
aam
jmp
and
adc
shl
gs
pop
sub
call
pop
mov
or
dec
inc
jb
out
mov
push
xor
popf
dec
mov
mov
ljmp
into
and
incl
jmp
jmp
decl
jl
stos
mov
decl
arpl
push
into
daa
loope
repz
or
decl
ljmp
arpl
xor
and
incl
lcall
mov
adc
xchg
ljmp
sbb
imul
cmp
lcall
lcall
decl
push
fidivrl
xchg
std
adc
mov
cld
adc
sub
incl
sub
ljmp
call
mov
incl
decl
rcrb
xchg
das
inc
fadd
rcr
jbe
xor
mov
ljmp
test
enter
iret
add
incl
jmp
outsb
xor
pop
xchg
cld
push
jp
inc
dec
sahf
or
push
arpl
and
incl
rclb
cltd
jo
adc
ss
pop
push
movsl
add
jge
mov
stc
jmp
jmp
dec
test
add
cld
xor
ljmp
repz
add
decl
dec
popa
notl
out
add
aaa
popa
lds
daa
and
mov
loop
sub
ljmp
adc
ljmp
inc
ds
cmpsl
addr16
hlt
push
mov
inc
sbb
jae
pushl
incl
lcall
cmpsl
dec
mov
bound
adc
pusha
pop
jns
pop
stos
dec
cmp
call
mov
pushl
call
jae
mov
adc
sbb
aas
imull
inc
test
jmp
pusha
hlt
pop
push
pushl
pushf
in
mov
adc
mov
scas
decl
push
add
xor
xor
call
ljmp
incl
mov
inc
out
les
jae
mov
cmp
inc
mov
mov
call
ljmp
cmp
sahf
jecxz
pusha
sbb
mov
xchg
rorb
mov
inc
aaa
sysexit
fs
or
and
jmp
mov
rol
ret
imul
lods
out
inc
lds
xlat
xor
lods
rclb
jge
out
sbb
pushl
jge
incl
jl
popa
and
and
incl
add
frstor
cmp
mov
cmp
xchg
repz
ja
pop
push
pop
lea
aas
jle
fnstenv
jmp
mov
pop
mov
and
call
stc
mov
jmp
push
pop
inc
mov
xchg
pop
xor
or
incl
popf
dec
mov
jmp
fdivs
pushl
mov
lock
pushl
call
push
pushf
push
jg
fs
mov
and
jmp
push
ds
adc
scas
filds
cltd
insb
mov
fnsave
jae
xchg
frstor
loopne
enter
lcall
push
inc
adc
lcall
xor
adc
sbb
inc
adc
ljmp
test
loop
or
out
xchg
mov
fbld
ljmp
push
inc
lret
call
lcall
lods
cmp
les
pop
fadds
in
mov
nop
pop
sbb
decl
inc
inc
pop
jno
xchg
jmp
insb
fistl
outsl
aas
pop
clc
or
incl
push
adc
cmp
mov
aas
aas
pop
in
lea
pushl
mov
and
stc
sbb
sbb
and
jle
push
jmp
cmpsl
push
sub
push
push
sub
adc
sbb
pusha
leave
stos
incl
data16
mov
inc
movsl
inc
jge
call
imul
xchg
jbe
pop
ss
sub
inc
in
ror
jmp
pop
xlat
sarl
mov
lcall
inc
push
mov
mov
push
ficoms
push
pop
and
ds
ljmp
js
addr16
push
jmp
inc
and
jmp
call
pop
adc
sub
lcall
fcom
mov
pop
xchg
popf
adc
incl
jmp
gs
jmp
adc
loop
push
aas
hlt
fldenv
adcl
jmp
sbb
ljmp
mov
xchg
pusha
xor
adc
es
inc
cmp
cmp
push
lahf
arpl
xlat
orl
in
and
lcall
mov
jno
aad
ljmp
ljmp
cld
aaa
inc
adc
ret
lret
insb
adc
cld
lock
jg
cmp
cmp
fildll
xchg
test
scas
xor
fadds
lcall
es
incl
lea
mov
mull
arpl
pop
ret
cmp
mov
jns
dec
pop
xchg
add
data16
mov
ljmp
jg
lcall
lcall
out
jbe
cmp
xchg
sarl
jp
je
call
xlat
sub
int
mov
mov
inc
je
sbb
push
mov
insb
cmpsb
decl
incl
lcall
inc
sbb
aad
cltd
je
lahf
rorb
in
fsubs
cwtl
mov
push
in
pop
jge
pusha
loope
fisubrs
jg
xchg
psubb
movsb
decl
out
mov
push
dec
les
jns
out
or
xchg
sub
lcall
jge
mov
pop
jp
xor
sub
dec
dec
enter
xlat
mov
jl
jmp
lret
xchg
cmp
jmp
popa
stc
notb
jp
int3
icebp
jp
lcall
and
fiaddl
ljmp
pop
pop
inc
mov
stc
outsl
push
ds
inc
outsl
aas
xor
add
call
mov
incl
mov
cld
add
lcall
ja
call
jmp
pop
dec
mov
xor
lret
stos
std
pop
inc
pop
std
decl
addr16
xchg
ret
inc
dec
or
mov
incl
xor
cmp
loop
nop
pop
fsubrs
inc
inc
enter
push
call
mov
push
lcall
jle
mov
ljmp
mov
cmpsl
add
lcall
call
ja
les
xchg
ljmp
add
dec
push
pushl
xor
cmp
call
lahf
inc
aaa
clc
enter
jne
sarl
push
out
popf
mov
das
jns
in
or
ffreep
jb
lret
int
push
cmp
sub
lcall
shrl
rcr
inc
pop
js
fists
push
mov
lahf
and
jmp
into
orl
pop
arpl
or
jnp
ds
incl
jmp
or
push
fidivs
add
mov
dec
imul
mov
fists
imul
aam
lcall
jo
xchg
inc
xchg
xor
incl
out
sbb
ds
stos
lcall
jns
cltd
adc
sti
das
push
decl
jmp
inc
scas
iret
mov
mov
adc
dec
scas
inc
cmp
lcall
iret
test
push
lds
pop
jg
jns
lcall
and
pushl
hlt
cmp
out
sub
js
push
fisubs
add
cmp
call
clc
mov
push
int3
pop
cmpsl
pop
ja
ficoml
adc
mov
rorl
adc
iret
pop
cmpsb
pushl
dec
sahf
and
push
adc
shr
and
call
push
pop
push
shlb
cs
call
add
lcall
loope
sti
leave
add
out
outsb
enter
incl
incl
nop
je
inc
out
dec
outsb
loop
dec
test
movsb
cmp
call
popf
adc
sbbl
cltd
xlat
popa
dec
and
jmp
cs
ljmp
sub
lods
mov
fucomp
mov
mov
incl
and
adc
dec
subl
pop
push
nop
add
mov
in
imul
mov
add
call
cmc
cmp
mov
push
fcomps
adcl
mov
call
jno
lcall
call
shrb
fbstp
pusha
mov
stos
and
push
test
mov
loope
incl
decl
adc
mov
jle
and
jnp
or
incl
sbb
fstpl
jnp
cmp
je
into
in
xchg
cli
je
and
adc
incl
in
in
mov
inc
mov
inc
mov
sbb
mov
ljmp
stos
decl
and
cmp
mull
incl
pop
xor
xor
sahf
bound
lods
lcall
jne
imul
jmp
ljmp
call
pop
dec
mov
sub
jl
mov
mov
push
or
xchg
mov
dec
inc
nop
xchg
jmp
add
jae
jno
repnz
jns
lock
out
mov
inc
pushf
lcall
jno
mov
stc
cmp
mov
add
add
decl
jmp
in
jp
popf
cmpl
sti
pop
call
dec
cmp
mov
ljmp
fs
xchg
xchg
xchg
insl
jg
push
xor
enter
adc
cmp
les
test
xchg
pop
pop
mov
cmp
std
and
mov
incl
push
cld
pop
out
in
inc
push
shl
push
add
mov
out
mov
pushl
cmp
sarb
inc
inc
test
call
pop
xchg
sub
add
repnz
jo
dec
imul
lcall
mov
inc
mov
dec
adc
lods
int3
push
addr16
xchg
pushf
fld
lds
outsl
xchg
mov
lds
call
and
call
mov
inc
xchg
ljmp
jns
sub
xor
ljmp
leave
icebp
enter
jge
push
inc
xchg
add
ljmp
imul
inc
insb
mov
add
call
jle
mov
jmp
cmc
lret
adc
inc
mov
push
sbb
xchg
inc
push
ljmp
decl
test
cmp
sti
sub
pushl
inc
clc
in
outsb
or
inc
jle
decl
pop
jno
flds
fisubrs
mov
mul
push
fs
nop
scas
push
mov
incl
icebp
mov
dec
xchg
and
sub
ljmp
sub
nop
push
in
cmp
icebp
xor
jo
ja
or
call
pop
lret
push
sbb
xchg
sub
xchg
test
mov
mov
incl
daa
negl
ret
data16
push
pusha
ss
ds
ljmp
dec
cmp
decl
decl
stos
pcmpeqb
call
push
sbb
daa
out
loop
xchg
out
aaa
sub
incl
aas
loopne
movsl
pushf
repz
inc
or
in
aas
negb
call
inc
mov
ds
fdivrs
cmp
lcall
mov
xchg
mov
decl
cli
fidivl
out
stos
xchg
cmp
movsl
and
sarl
cld
stos
ljmp
adc
jp
pusha
scas
call
sbb
sbb
add
dec
jg
call
sbb
and
lcall
pop
xor
jmp
pop
and
call
adc
fistpll
lock
decl
jp
sub
add
call
into
enter
push
mov
arpl
ljmp
ljmp
and
cmp
push
pop
bound
mov
jmp
jns
inc
mov
outsl
mov
dec
mov
call
mov
mov
subl
cli
jle
stc
or
lcall
ret
sub
incl
cltd
pop
mov
outsl
rcrb
or
jmp
sbb
mov
lds
popa
xchg
lea
mov
bts
in
jbe
add
mov
mov
in
dec
jg
ljmp
out
jb
out
pop
jmp
xor
decl
decl
inc
sbb
mov
hlt
lods
dec
in
addr16
pushl
jmp
push
cli
sbbl
call
jae
cmpsl
xchg
adc
pop
push
filds
incl
incl
inc
addr16
rcrb
adc
push
or
push
jmp
call
call
dec
fwait
inc
cli
les
push
aam
packsswb
add
pop
popa
std
sbb
call
adc
xor
enter
pushl
and
call
iret
mov
nop
fsubs
lcall
fsubrs
ljmp
and
pushl
decl
jmp
aad
jg
into
repz
stos
filds
lcall
stos
call
das
test
sbb
or
mov
sbb
xor
arpl
cmp
jns
push
jmp
inc
xchg
repz
xor
xor
mov
fdivr
popa
cmpsb
call
xchg
push
and
pushl
in
pushl
adc
cmp
test
aas
xchg
insl
xchg
mov
jmp
scas
mov
stos
incl
or
ljmp
and
lcall
ljmp
sbb
fdiv
fucomi
xchg
add
incl
pusha
sbb
out
or
ljmp
call
mov
nop
jno
int
imul
mov
cmp
pushl
inc
push
in
adc
repnz
sbb
or
cmp
adc
enter
mov
ljmp
jns
jecxz
divl
push
push
cmp
adc
lret
pushl
int
jmp
ljmp
and
lcall
insl
lcall
add
inc
dec
movsb
call
lods
push
addr16
cmp
jmp
call
add
call
stos
fwait
cmp
dec
lcall
in
push
insb
add
decl
xor
popf
cmpsl
xchg
jmp
dec
js
jg
and
lret
pop
hlt
mov
std
sarl
pop
data16
jbe
popf
dec
push
xchg
inc
pop
cmp
lcall
jmp
mov
inc
push
shr
ficompl
fwait
rolb
mov
repnz
lds
xor
mov
adc
loopne
fdivr
xchg
test
inc
repz
cltd
jae
or
cmp
dec
out
inc
testb
addr16
dec
ja
xor
mov
test
cmpsl
je
rclb
jmp
sub
lcall
and
lret
mov
sbb
repz
lea
mov
pushl
lcall
insl
and
mov
sahf
dec
and
jecxz
jne
and
pushl
outsb
sub
incl
push
mov
dec
add
fs
iret
movsb
call
scas
add
inc
xlat
std
ljmp
call
inc
cmp
dec
testl
dec
cmp
jmp
jmp
pushl
xorl
pop
dec
in
fnstcw
jmp
stos
or
mov
adc
push
dec
stos
cmp
pop
aad
mov
aad
out
inc
sub
repz
dec
cli
mov
push
rclb
jmp
iret
out
inc
clc
mov
jmp
jne
ret
xor
mov
inc
push
ljmp
cwtl
jbe
mulb
sub
jmp
lcall
inc
mov
add
incl
decl
ljmp
xorl
rorw
pushl
arpl
aad
or
ljmp
pushl
lods
inc
ja
jg
xchg
hlt
js
std
and
lcall
inc
movsb
jmp
mov
pop
push
stos
push
dec
sbb
incl
insb
mulb
mov
dec
mov
call
scas
jmp
lods
call
xlat
pop
inc
in
jmp
call
cmpsb
pushl
xor
sar
dec
jmp
ret
test
cmp
ficoml
add
pushl
xlat
lods
decl
hlt
xor
xchg
incl
rcr
mov
call
and
aad
movsl
inc
cmp
scas
jmp
push
je
sarb
pop
push
dec
scas
dec
dec
pop
jmp
ljmp
jl
cltd
adc
sbb
stc
mov
cmp
mov
call
ljmp
jnp
pusha
popa
scas
adc
ljmp
and
jmp
mov
call
lcall
mov
test
lcall
call
push
out
mov
or
jmp
pusha
std
in
bound
cmpsb
jmp
out
cwtl
lret
dec
sub
pushl
mov
mov
clc
out
insl
mov
daa
inc
adc
lcall
sbb
incl
jmp
add
pushl
push
incl
jns
mov
push
incl
std
pop
movsb
incl
jge
cs
ljmp
rcr
xor
lcall
out
mov
rcrl
call
es
jmp
incl
cmc
clc
jmp
jae
cmp
in
je
dec
shrl
push
ret
mov
pop
sub
jmp
in
mov
or
mov
pop
dec
mov
out
daa
mov
js
or
ljmp
call
cmp
ffreep
cltd
push
loop
sbb
xlat
into
cmp
call
mov
lcall
jmp
and
dec
jl
mov
incl
dec
stc
fbstp
pop
mov
jmp
sbb
outsb
prefetchwt1
aam
inc
push
test
daa
mov
jge
sub
pushl
repnz
adc
mov
incl
mov
iret
lahf
dec
or
lcall
ret
mov
jg
inc
js
inc
xor
mov
and
incl
push
ja
sub
decl
decl
cmp
sbb
push
jmp
decl
decl
inc
and
lcall
mov
je
ss
adc
and
test
jmp
add
lcall
rolb
lcall
daa
sub
incl
and
ljmp
or
fmulp
int
inc
mov
jle
adc
imull
lahf
mov
test
roll
inc
mov
sbb
mov
inc
xchg
and
incl
pop
mov
inc
adc
cwtl
sar
adc
push
sub
maskmovq
negl
fiaddl
mov
add
dec
rorl
call
xchg
jo
into
addr16
sub
in
pushf
add
lods
call
cmp
ja
sub
decl
jecxz
movsl
mov
enter
movsl
xchg
jne
mov
dec
push
pop
and
call
mov
push
sbb
test
inc
mov
dec
fnsave
and
decl
jmp
push
loope
rcr
stos
jmp
shlb
push
imul
pushl
jbe
add
call
add
dec
fld
movl
inc
pop
shr
sub
call
out
mov
call
add
pushl
leave
dec
dec
jmp
jmp
sub
popa
sub
call
cmp
decl
inc
adc
mov
jmp
lcall
out
jae
ret
ljmp
inc
inc
leave
lcall
mov
jmp
test
insl
repz
dec
hlt
movsl
cmpsb
incl
jge
call
ljmp
incl
stos
decl
sbb
push
add
jge
pop
inc
mov
cwtl
jmp
decl
ljmp
inc
mov
jb
adc
lcall
testb
aaa
xor
icebp
inc
xchg
popa
push
fisubl
jmp
dec
test
pushl
push
repnz
in
and
cmp
repz
testb
inc
jne
stos
pushl
mov
rorb
outsb
sbb
addr16
mov
call
call
dec
enter
popf
movl
mov
jmp
inc
jno
xor
jl
pop
aas
fisttpl
xchg
or
les
mov
sub
and
jmp
cmp
inc
push
idivb
ss
daa
inc
sub
outsb
and
push
sahf
push
xchg
gs
incl
mov
ljmp
lcall
decl
call
scas
lcall
xchg
pop
push
mov
xchg
imul
lret
call
out
cmpsl
xor
test
pop
xor
push
notl
cmp
push
jmp
inc
scas
push
pop
lcall
insl
stc
push
decl
jmp
sti
imul
data16
rcr
imul
call
mov
push
out
jge
cmp
dec
fimuls
lcall
jb
ret
add
push
adc
add
mov
lcall
jge
fidivrl
ljmp
adc
dec
int3
jne
mov
mov
aas
xor
cmp
pushl
sbb
pushf
or
sbb
sarb
xor
inc
das
lds
inc
dec
adc
mov
push
out
xor
adc
sbb
jb
mov
or
pushl
sti
push
pushl
lfs
adc
out
sub
cmp
dec
dec
sub
call
xchg
lods
inc
fwait
std
cli
mov
inc
push
mov
xchg
ret
jno
cld
inc
scas
int
cltd
sub
lcall
jle
jecxz
and
in
sub
jmp
sub
lcall
div
ror
jae
sbb
popf
add
cld
inc
sub
add
nop
dec
scas
lods
and
lcall
cwtl
or
mov
jmp
xor
mov
arpl
or
jmp
inc
int3
xor
incb
in
ds
jb
mov
sub
push
call
incl
mov
add
pushl
jmp
ret
push
cwtl
cmp
xor
add
js
cmpxchg
stos
pushf
mov
incl
xchg
testb
inc
dec
sub
mov
loope
sbb
jle
jmp
lcall
mov
push
xchg
lcall
cmp
rcr
mov
mov
push
pop
jbe
roll
pushf
lock
pushf
or
inc
sbb
ljmp
mov
call
jmp
mov
mov
inc
dec
inc
jns
int
jg
das
cmp
and
jmp
xchg
std
mov
push
jmp
xor
sbb
ja
jmp
inc
and
inc
mov
outsl
insb
xlat
cmp
jl
pop
pop
jo
loop
cs
pushl
jae
ret
incl
call
fdivs
xor
daa
cmp
gs
mov
inc
mov
adc
pushl
call
or
decl
mov
xchg
incl
push
xlat
shlb
jp
clc
sbb
sti
or
cs
ljmp
insb
push
pop
xchg
pushl
mov
jge
fisttps
pushl
cmp
addl
icebp
adc
loope
bound
rclb
int3
jmp
arpl
bound
scas
out
mov
push
cmp
out
inc
pusha
jle
mov
jmp
mov
xor
stos
incl
and
jmp
jmp
push
js
incl
dec
fsubrs
sti
sub
jmp
pushl
jmp
decl
fcmovbe
sub
dec
pop
dec
icebp
adc
incl
adc
sbb
xor
push
mov
out
push
fcoms
ljmp
fsubs
mov
adc
lcall
push
ljmp
fs
jb
mov
cmp
lcall
jmp
mov
push
lods
sub
jmp
decl
fiadds
decl
adc
fbstp
xchg
cmc
mov
jp
decl
call
mov
stos
call
pushl
push
jmp
and
roll
in
jns
loop
or
decl
sbb
jp
fldl
ja
xlat
stos
fists
xor
arpl
ds
mov
adc
lret
fwait
push
adc
cli
mov
js
sbb
cs
lcall
sub
pop
lcall
loop
fldcw
aas
hlt
icebp
fdivrs
call
mov
sbb
sbb
mov
stos
incl
incl
sti
inc
lret
iret
clc
rolb
adc
ljmp
inc
iret
cmp
jl
mov
push
cs
ljmp
cli
cltd
aad
mov
insb
xchg
sub
call
cld
gs
ljmp
sub
xor
and
pushl
call
cmp
decl
push
pop
andw
movsb
jmp
mov
cmp
cltd
sbb
xor
xchg
in
dec
hlt
lcall
fsubs
jmp
sub
push
xor
sbb
clc
je
cli
shll
out
insb
dec
jo
loopne
pushl
push
sub
jmp
cld
shll
sbb
adc
dec
cmp
call
pushf
jmp
decl
xchg
daa
adc
mov
clc
pop
nop
jmp
lahf
movsl
lcall
ljmp
jmp
in
lcall
jmp
xchg
mov
dec
adc
aaa
popf
jnp
pushl
in
pop
mov
loope
mov
call
enter
mov
xchg
cmc
xlat
test
fcomip
adc
es
lcall
mov
repz
or
das
arpl
fdivl
jnp
push
test
jmp
lcall
inc
pop
hlt
out
pusha
sysexit
mov
cwtl
jbe
lcall
movsl
pop
xchg
cmp
hlt
loop
gs
dec
movsl
stos
ljmp
cs
ljmp
jmp
sarb
jmp
loopne
jmp
push
dec
jmp
je
jg
xor
in
adc
push
call
dec
sti
pop
pushf
sbb
cmp
push
movb
fiaddl
cmp
incl
jmp
test
jmp
push
lods
call
imul
ljmp
fwait
test
inc
fs
jmp
push
dec
cmp
xor
fcmovb
std
faddl
jmp
pushl
mov
call
sub
lcall
dec
xchg
movsb
pushl
sbb
ljmp
pushl
inc
xchg
stos
cli
js
lock
dec
lret
stos
jmp
cmp
ljmp
inc
adc
jmp
push
jnp
addr16
int3
std
xor
sbb
dec
les
insb
iret
xchg
xchg
mov
mov
call
jp
popa
pop
jns
push
addr16
xor
cltd
or
jnp
movsb
push
movsb
push
leave
and
mov
ljmp
mov
jg
bound
adc
pop
inc
sbb
sbb
pushl
dec
jno
mov
lcall
push
or
es
out
xchg
sbb
leave
cli
jg
dec
cs
fst
xchg
scas
pushl
popa
xor
xchg
call
xor
decl
call
out
je
sar
sub
incl
sub
lcall
std
cmp
mov
icebp
negl
lods
dec
cld
and
ljmp
mov
movsl
dec
push
adc
cmp
mov
mov
cmp
xchg
flds
add
call
cld
push
xor
cmp
mov
sbb
mov
call
loope
sti
shrb
jnp
mov
mov
lcall
xchg
mov
xor
repz
fcomi
pop
mov
rorl
rol
divb
cs
fldl
jmp
movaps
js
cwtl
cwtl
push
inc
push
mov
test
call
scas
addr16
ljmp
incl
cmp
add
jp
int
call
mov
call
decl
add
fistpll
outsb
lods
jle
push
roll
mov
scas
lcall
imul
xchg
jge
and
xor
aam
rorb
ljmp
call
jmp
xlat
push
push
jmp
push
or
dec
jo
loopne
sub
cld
mov
jae
pop
pop
pushf
pop
movsl
mov
inc
in
or
pop
insl
push
jmp
call
push
cmp
incl
inc
mov
dec
ror
mov
daa
idivb
cmp
lcall
cmp
call
fyl2xp1
idivb
in
inc
xor
ljmp
loope
ror
inc
push
imul
decl
xor
mov
js
push
lcall
test
ljmp
push
cwtl
push
mov
incl
std
loop
out
and
call
mov
leave
idiv
pop
ret
xchg
mov
stos
ljmp
pop
mov
pop
mov
xchg
sarl
xor
xchg
add
mov
add
pushl
bound
pushl
stos
call
in
jns
jl
mov
cmp
jmp
jg
inc
cmc
sbb
fbstp
dec
pop
sbb
jb
pushl
pop
xchg
push
inc
cmp
and
decl
jg
inc
push
loop
lcall
xchg
lock
enter
jb
mov
decl
mov
test
inc
daa
out
loope
call
lds
jmp
pop
or
ljmp
call
mov
mov
ja
nop
and
sub
cmp
mov
in
dec
insb
sbb
mov
pushl
mov
xchg
mov
and
std
rorb
inc
nop
lcall
mov
push
inc
dec
add
in
in
inc
or
dec
xchg
js
iret
outsl
xchg
fwait
cmp
ss
pop
xchg
xor
jmp
sets
ret
xchg
iret
imulb
sbb
decl
cmp
call
mov
lcall
cmp
loope
outsb
push
dec
xor
pop
jo
and
out
add
decl
decl
icebp
shl
outsb
or
decl
add
lcall
call
pushl
dec
adc
les
cmp
mov
or
cld
sahf
pop
cmp
dec
add
lcall
popa
sub
jmp
pushl
hlt
lds
addl
insl
std
xor
mov
jae
dec
enter
insb
push
sbb
stos
mov
push
mov
jp
clc
pop
xchg
inc
push
fnstenv
sti
sbb
dec
xor
insl
mov
incl
or
pushl
loope
mov
call
call
lret
dec
stos
mov
cmc
xor
clc
ljmp
mov
loopne
lcall
push
pushl
push
ret
cs
pushl
aas
push
adc
ljmp
cwtl
sub
mov
xor
in
cmp
clc
inc
push
fdivrl
decl
inc
arpl
loope
fbstp
or
push
je
cmp
inc
adc
mov
mull
sub
jmp
and
inc
sbb
clc
push
loop
and
mov
jp
in
dec
mov
and
dec
cmp
inc
es
decl
push
dec
js
jmp
xor
pop
stos
loope
gs
dec
incl
testl
mov
jmp
ds
loope
lret
mov
call
mov
fldt
inc
push
pop
jecxz
lods
lcall
sahf
rcrb
add
incl
incl
not
scas
cmpl
ret
jno
aas
add
decl
aas
cmp
decl
cmp
mov
adc
cmp
lcall
jg
pop
aaa
cli
jmp
adc
sub
mov
pop
mov
mov
int3
aaa
push
icebp
cs
incl
push
call
xor
cmpsl
jae
in
adc
cld
inc
adc
inc
mov
lcall
dec
sbb
push
dec
out
xchg
lcall
pop
sbb
adc
fsubl
imul
dec
lock
pop
xor
outsb
sahf
adc
adc
lcall
pop
push
movsl
inc
loope
loop
shll
cmp
lret
pushl
inc
dec
daa
lods
repnz
jecxz
call
jmp
lcall
pushl
and
dec
mov
add
xchg
fcmovnbe
mov
jmp
lock
and
das
xor
hlt
cmp
pop
rcll
stc
mov
mov
mov
pushl
sbb
dec
inc
rolb
lcall
jge
into
call
push
call
fisubrs
outsb
cltd
ds
cmpsb
call
out
xchg
sub
pushl
addr16
in
sahf
fnstenv
loop
inc
xchg
dec
pop
sub
jmp
jecxz
jno
mov
add
lcall
loope
js
push
push
call
negl
cmp
call
fsubrl
cmp
dec
into
jns
fs
je
or
lcall
je
sti
xchg
loopne
pop
out
sbb
or
stos
mov
jge
jmp
inc
clc
lds
and
mov
repnz
xchg
ret
aas
call
call
leave
inc
xchg
jb
fistps
cmp
lock
mov
das
mov
les
add
and
jmp
loop
xchg
or
call
mov
lcall
dec
in
push
sbb
addps
pushl
aam
divl
aam
xchg
pop
adc
pusha
sub
or
mov
loopne
mov
ret
decl
lcall
gs
pushl
pushl
call
enter
lcall
lcall
mov
incl
dec
fidivs
hlt
pop
insb
subl
iret
jb
cmp
jmp
and
jno
jnp
fisubs
mov
adc
dec
adc
sub
inc
imul
imul
adc
incl
mov
decl
pusha
xchg
push
sti
leave
lret
data16
adc
jp
push
fisubrl
pushl
adc
outsb
push
call
in
lcall
lcall
icebp
inc
or
mov
and
decl
jns
lods
jmp
jb
cmp
mov
cmp
stos
lret
es
decl
imul
push
pushl
or
test
sti
jnp
ljmp
sbb
push
hlt
sbb
jmp
movsb
inc
push
xchg
data16
jecxz
call
rol
xchg
cmp
popf
push
call
pushf
inc
sub
and
call
cld
enter
decl
decl
jmp
lcall
xor
out
in
xchg
out
mov
shlb
push
push
incl
cmp
movsl
lret
xchg
call
ljmp
pop
lahf
test
pushl
pop
mov
pop
decb
sbb
push
mov
jmp
mov
out
popa
mov
ljmp
lahf
fdivp
xchg
lds
xor
add
dec
nop
jmp
gs
xchg
push
adc
jbe
add
fwait
popf
cmpsb
jmp
jmp
es
decl
lcall
iret
into
xchg
inc
mov
repnz
repz
incl
decl
popa
push
ds
in
or
and
and
call
adc
jge
push
cld
dec
cmp
cmpsl
push
call
pop
cmp
sbbl
inc
jnp
adc
incl
fistps
fmuls
jg
xchg
push
stc
jl
pusha
adc
call
leave
mov
shll
mov
nop
dec
les
lock
push
mov
inc
and
out
mov
test
pushl
daa
push
push
rorb
mov
add
inc
lcall
fcmovbe
fidivs
scas
decl
incl
pushl
push
dec
add
jmp
test
mov
incl
inc
mov
inc
sbb
adc
pop
rorb
incl
inc
ficoml
aas
repnz
adc
push
subl
ljmp
call
xchg
sub
pushl
cmp
add
decl
pushl
ja
es
call
incl
ljmp
pop
xchg
cmp
insb
pop
mov
incl
call
in
std
rcll
mov
sub
pushl
out
or
mov
xchg
cs
decl
jo
decl
ret
loope
ljmp
call
sub
push
adc
insl
xchg
ds
push
call
mov
fldt
call
lret
jmp
ffreep
cmp
pop
stos
call
mov
mov
call
and
pop
adc
lcall
dec
mov
jmp
daa
cmp
sbb
sbb
loopne
aas
mov
cmp
clc
xchg
mov
loop
dec
or
mov
cmp
jmp
pop
xor
inc
imul
fadds
jmp
inc
dec
ret
lea
lcall
incl
out
jmp
sbb
jp
dec
or
ljmp
cltd
jg
jbe
pusha
in
out
das
pop
and
enter
inc
popf
aaa
clc
pusha
in
xor
ljmp
add
incl
shlb
fwait
and
decl
call
sbb
data16
fwait
mov
pushl
dec
mov
hlt
fstpl
movsl
cmp
push
adc
jmp
decl
call
jle
fisttpl
mov
jmp
pushl
sarb
push
xor
lcall
jecxz
daa
pop
int
lock
mov
cmc
xor
call
pop
adc
adc
jmp
out
jbe
mov
call
js
pushl
jmp
jb
mov
mov
daa
idivl
fwait
int
ljmp
decl
call
mov
ljmp
lcall
push
outsl
fisubl
jo
jp
dec
in
lock
fistpll
pop
mov
lcall
cli
je
sbb
dec
push
ret
cmp
jmp
stos
cs
push
xchg
enter
sti
xor
fxch
cmp
mov
mov
out
push
es
aas
xchg
out
std
mov
jae
lds
lods
dec
jo
repz
lret
xor
sbb
adc
push
mov
dec
or
ljmp
xchg
decl
adc
sbb
jmp
shll
xlat
std
jmp
push
adc
incl
call
adc
int
lock
leave
inc
xor
jle
adc
call
mov
adc
mov
std
add
ljmp
incl
ljmp
call
btrl
xchg
mov
pop
dec
cwtl
jno
mov
dec
push
stos
inc
mov
push
int3
push
in
adc
stos
decl
ljmp
and
pushl
cmpsl
loop
jg
pushl
pusha
sub
jns
cmpsl
push
test
jg
cs
repnz
call
jmp
std
pop
sub
lcall
loop
adc
cs
decl
pushl
loop
pop
cld
sub
mov
ljmp
decl
push
add
les
xchg
nop
mov
ljmp
out
mov
pushl
sub
iret
movsb
inc
ror
mov
pushl
loope
sti
xor
jmp
in
or
incl
lahf
ret
mov
imul
jne
mov
insl
jmp
mov
push
leave
push
stc
add
call
cmp
fnstenv
movsl
inc
jecxz
jmp
movsl
push
or
inc
jmp
or
incl
lods
dec
xor
pushl
pop
das
push
shrl
lcall
clc
push
push
xor
or
jmp
pop
push
mulb
mov
and
incl
jge
decl
pop
mov
inc
aaa
clc
in
loop
rorb
decl
iret
sub
decl
incl
mov
xor
jb
dec
mov
aas
xor
inc
jb
jge
dec
pop
pop
mov
xor
jle
lock
sti
pop
adc
pop
and
rcl
aad
jae
movsb
jnp
loope
add
fcomps
dec
lea
cltd
mov
dec
shlb
inc
int3
sub
decl
or
incl
ljmp
ljmp
imul
jmp
and
call
fbstp
jecxz
sbb
out
mov
lock
pop
jle
jecxz
xchg
sbb
test
inc
adc
add
and
dec
cltd
js
xchg
setge
sarl
pusha
mov
aam
jmp
int3
gs
push
xchg
sbb
add
fdivl
add
cmp
xchg
cmp
jmp
int
das
mov
jle
pop
stc
sub
nop
ret
jb
mov
decl
sti
cwtl
adc
test
call
or
je
add
lcall
shl
push
mov
jmp
cmp
decl
loop
bound
mov
and
icebp
fdivr
lock
ljmp
mov
jg
xor
xchg
mov
pushl
and
jmp
dec
dec
inc
jmp
lcall
push
pushl
push
xor
incl
mov
loop
jno
xchg
jmp
mov
call
jge
pop
in
add
cmp
fidivrl
fcomip
mov
pop
test
inc
and
jbe
sbb
cmp
incl
aas
pop
inc
cmp
into
out
jae
mov
mov
movsl
dec
scas
mov
xor
and
jp
fstpl
and
incl
pusha
pop
sub
sti
rorb
jmp
mov
xor
sahf
pop
fsubs
sbb
and
pushl
sub
mov
or
dec
push
fwait
and
push
lret
shrb
mov
xor
cmp
fistl
paddw
popa
pop
or
movsb
lcall
pushl
cmp
not
xlat
lds
cmp
xchg
jb
ljmp
adc
jmp
mov
out
icebp
fisubs
adc
pop
das
lcall
data16
mov
fwait
repz
stc
hlt
addr16
shll
decl
cld
mov
mov
das
mov
dec
mov
mov
imul
jb
std
xorl
sti
std
dec
jne
dec
out
add
call
mov
outsl
mov
std
out
test
cmp
and
call
cwtl
hlt
js
adc
bound
into
sub
dec
cmc
xchg
loope
test
ljmp
xor
rcll
push
arpl
fs
adc
insb
adc
fdivrp
lret
in
or
lcall
jae
sbb
jp
dec
jecxz
ljmp
pop
popa
ret
stos
call
inc
jp
movsb
call
out
inc
jg
call
scas
dec
dec
ret
insb
shrb
sub
pushl
push
out
push
pushl
es
lcall
xchg
fnstenv
push
or
cmp
mov
decl
sbb
flds
test
fcoml
scas
decl
imul
cli
shlb
mov
lcall
pushf
jns
xor
pop
loopne
xchg
out
cmpsb
decl
cmp
cmp
es
pushl
xchg
call
jbe
inc
add
jmp
jmp
or
sbb
sub
push
adc
cmp
push
and
call
push
icebp
nop
idivl
sub
xor
cmp
jmp
or
outsb
fs
lods
rcl
adc
push
cmc
div
rorb
pushl
xchg
cmp
call
xor
jmp
jg
subl
pop
dec
jmp
iret
xlat
fcomip
aaa
aad
lcall
push
lcall
shr
pop
jbe
cmp
dec
mov
mov
call
mov
or
inc
das
cmp
call
outsl
pop
jne
cs
jl
add
ljmp
adc
xor
dec
out
sti
jne
shl
hlt
inc
loop
fwait
jg
incl
mov
cli
ss
adc
dec
roll
incl
push
xor
loope
cmc
je
inc
mov
stc
pop
mov
xorl
push
ss
sahf
sar
lds
xchg
adc
push
pop
jl
mov
pop
xor
jo
cli
mov
push
mov
clc
cld
in
addr16
lods
fmuls
test
out
jbe
mov
jmp
test
jmp
decl
aam
test
lcall
dec
icebp
push
scas
decl
insl
lods
jg
mov
mov
incl
lcall
cmp
sahf
pop
inc
out
das
mov
or
pushl
or
mov
mov
jae
arpl
jge
rorl
mov
leave
pop
jle
test
incl
pushl
adc
negl
aad
adc
lods
jmp
addr16
movsb
ljmp
dec
dec
es
call
scas
inc
inc
mov
cld
pop
dec
ss
incl
lcall
call
and
pop
add
cmp
cld
xchg
pxor
jne
inc
aam
jmp
cmp
incl
adc
outsb
repz
aad
mov
xor
and
xor
pop
cmc
int3
cmp
jmp
jns
push
pop
mov
pushl
fdivrp
cmpsb
jmp
dec
lods
dec
push
fmulp
or
in
daa
sbb
mov
ljmp
jnp
icebp
mov
decl
cmp
sub
call
fiaddl
pushl
enter
incl
dec
inc
ror
shl
mov
adc
and
jmp
decl
in
mov
ljmp
incl
pop
dec
pop
cmpsb
push
cmp
iret
pushf
add
in
xchg
incl
hlt
dec
out
subl
mov
inc
lahf
pop
and
push
jmp
push
int
lcall
decl
jbe
mov
aaa
xchg
cmp
mov
jge
xlat
fidivrl
jge
call
insl
js
movsl
jae
shrl
lcall
cltd
popa
clc
xchg
xchg
mov
push
mov
push
cmpl
push
dec
jns
in
mov
sbb
dec
ret
jmp
incl
xor
ret
lahf
jmp
cmpsl
out
subl
dec
loope
jp
cmp
sub
js
sub
pushl
decb
aas
push
xchg
add
jb
popf
mov
dec
stos
dec
dec
push
cmp
lds
mov
js
leave
adc
clc
push
rorl
sub
in
mov
push
lcall
stos
incl
and
jmp
jmp
dec
lcall
sbb
call
sbb
pop
sti
pop
jmp
mov
call
sti
shl
inc
mov
fdivs
and
call
aam
and
ljmp
test
lcall
dec
stos
pushl
decl
mov
xchg
pop
and
pushl
repnz
dec
xchg
inc
mov
mov
jmp
pop
dec
sbb
mov
call
lret
arpl
sub
incl
in
mov
les
push
mov
jmp
into
sbb
sbb
xchg
decl
out
iret
xchg
sar
pop
sub
ljmp
and
mov
je
cmpsb
lcall
ljmp
dec
gs
cld
mov
jl
adc
adc
jle
xor
stc
adc
inc
out
cmc
aad
mov
ljmp
adcl
jmp
call
pushl
xor
test
call
lret
lods
ljmp
pop
jne
ret
mov
pushl
adc
sbb
ljmp
sub
incl
mov
imul
cmp
adc
testb
xor
cli
lret
in
xor
dec
xchg
popl
out
rcrb
ds
cld
ja
mul
sub
cmp
shlb
stc
xchg
sti
notb
lcall
test
incl
sbb
call
xchg
filds
call
pushl
or
int
and
ljmp
lcall
je
lods
dec
mov
imul
call
xchg
enter
stc
cmp
jae
cmp
pushl
gs
mov
decl
decl
repz
and
dec
or
mov
ljmp
xchg
clc
dec
sbb
mov
call
lahf
xchg
jae
mov
lcall
data16
into
daa
pop
add
jmp
mov
cs
incl
mov
faddl
ljmp
mov
stos
jnp
aas
sub
ljmp
movsb
jmp
decl
dec
mov
push
fadds
rorl
inc
mov
mov
add
jmp
mov
mov
ljmp
sbb
mov
push
adc
and
or
incl
decl
pop
push
sbb
insb
sbb
inc
mov
in
cmp
out
je
pusha
xor
mov
pushl
dec
and
decl
gs
inc
cmc
fnsave
ret
loop
movsl
mov
aad
ljmp
lcall
ljmp
sbb
es
push
int3
dec
mov
sti
dec
cs
pushl
gs
sbb
mov
mov
imull
incl
lar
pushl
ljmp
cmpl
ljmp
ret
decl
pushl
movsb
pushl
fldcw
mov
cmp
fs
outsb
or
ljmp
mov
ljmp
or
push
insl
and
js
cmp
jmp
rorb
shll
decl
decl
out
mov
push
je
push
jbe
test
imul
pushl
dec
jne
test
pop
cmpsl
cli
and
call
sbb
roll
xor
rorl
cmpsb
decl
lea
cmp
mov
jge
fs
test
mov
mov
mov
push
pop
dec
mov
repnz
shrb
stc
orl
filds
pushf
jne
cmc
movsb
incl
decl
lea
push
insb
and
decl
bnd
incl
mov
dec
xchg
and
call
ljmp
jge
cld
mov
decl
test
call
test
lcall
mov
loope
mov
jecxz
push
add
incl
bound
inc
mov
dec
int
mov
ljmp
ljmp
jmp
addr16
incl
pop
cld
insb
pop
mov
aad
mov
sbb
mov
pop
outsb
daa
xor
pop
ljmp
jecxz
aam
xor
dec
push
stos
call
sti
xchg
xchg
pop
sbb
pop
push
imull
out
mov
push
mov
fwait
sub
lcall
pop
add
push
mov
xor
je
fimuls
and
loopne
push
das
sbb
push
cld
lahf
sbb
sbb
push
push
notl
hlt
xchg
sub
imul
jle
lcall
cs
ljmp
mov
jmp
push
int
sti
xchg
inc
or
fucomip
je
cmp
call
mov
lcall
cltd
lcall
fcoml
push
enter
dec
push
insl
sbb
incl
call
das
mov
inc
xor
mov
aas
cmp
pushl
pushl
test
call
mov
dec
mov
jle
and
lcall
fistpl
mov
lods
jp
ds
xchg
decl
lcall
xchg
inc
inc
in
in
incl
mov
pusha
lock
or
icebp
rorb
sub
lcall
mov
mov
std
sbb
call
pushl
xchg
mov
pushl
pop
mov
fisttpl
mov
insb
in
dec
sub
xchg
push
call
lret
ja
add
lcall
sub
inc
inc
hlt
je
lock
stc
jbe
sbb
jl
ja
add
pushf
dec
aam
mull
clc
jae
mov
shlw
mull
mov
dec
mov
and
and
xor
jb
push
lcall
loop
mov
add
fucomip
gs
pushl
out
fwait
stos
lcall
mov
incl
dec
jne
mov
jno
fldt
cmp
push
jp
sbb
xchg
lods
sbb
stos
decl
movsl
mov
jnp
lods
incl
mov
rcll
rcrl
mov
lcall
decl
mov
jmp
aas
mov
jge
push
outsb
negl
js
lcall
add
ljmp
pop
inc
xor
sub
sub
mov
incl
std
fmull
cmp
shll
sub
imul
push
movsb
jmp
insb
mov
ds
mov
pushl
pushl
push
popf
repz
jl
sub
jmp
xchg
cmp
pop
in
mov
test
jmp
fsub
sub
jmp
stc
jbe
push
cmp
call
clc
scas
shl
inc
cmp
mov
es
ljmp
jmp
incl
jp
jae
pushl
lcall
lcall
mov
mov
call
test
lcall
lods
mov
push
mull
fadds
fwait
dec
xor
icebp
imul
filds
pushl
push
bound
jmp
pop
ljmp
lret
dec
out
test
incl
stc
mov
dec
push
adc
in
rcl
jne
inc
movsl
mov
pushl
cmp
adc
out
das
mov
add
mov
mov
lods
incl
js
and
lcall
call
cmp
or
jmp
cs
ljmp
pushl
mov
sub
decl
xchg
outsb
in
push
jmp
mov
test
decl
call
out
dec
movsbl
sub
dec
cmp
loopne
call
jbe
add
divb
push
cmp
dec
mov
jmp
mov
mov
jmp
loopne
ret
aaa
xchg
ljmp
mov
adc
sub
ljmp
scas
call
push
shlb
pushl
jmp
dec
cmp
repnz
ljmp
decl
lret
xchg
jno
es
call
jno
std
xchg
and
jle
lcall
or
call
pop
mov
repz
cld
adc
test
call
das
nop
inc
mov
pusha
xchg
insl
xchg
jle
out
lea
cmp
int3
push
jmp
fnsave
fildl
fidivrs
lcall
jns
aas
jecxz
jge
sar
inc
mov
or
mov
dec
and
bound
mov
in
sbb
cmp
js
cs
pushl
xor
mov
inc
movsl
pop
push
jp
sub
lcall
lcall
int3
jp
gs
decl
stos
ljmp
inc
mov
fmulp
push
dec
jg
push
stc
mov
test
dec
lret
jge,pt
bound
pushl
das
rclb
js
jp
lcall
nop
test
stc
sub
pushf
cmp
ljmp
in
lret
gs
lea
jbe
gs
xchg
jb
push
xor
sbb
ljmp
scas
dec
dec
and
mov
and
fdivrl
mov
inc
pop
add
cld
movsb
lcall
sbb
pushl
cld
std
add
mov
fnstcw
call
sarb
jo
xchg
andl
in
and
or
pushl
iret
xor
jl
in
stc
adc
xchg
mov
inc
sbb
imul
ljmp
dec
gs
loopne
mov
ret
rcrl
or
incl
push
jnp
sti
sub
rclb
add
mov
mov
xor
pop
jg
lcall
lds
outsl
push
xchg
loope
incl
scas
push
jmp
ds
stos
ljmp
in
and
ljmp
in
popa
mov
mov
mov
scas
add
lcall
xlat
mov
pop
in
sbb
push
cs
jp
movsb
inc
test
pushl
pop
xchg
push
jg
fisubs
jmp
fstpl
pop
ds
rolb
cmovnp
fldl
or
jmp
adc
js
scas
mov
lcall
cmp
rclb
lods
ror
in
nop
js
fwait
cmp
leave
rolb
adc
jno
loop
out
ljmp
call
outsl
add
ds
adc
xchg
mov
pop
and
dec
insb
dec
cli
shr
jbe
jmp
ds
hlt
enter
outsb
mov
lcall
mov
push
jecxz
mov
divb
les
xlat
sarl
out
mov
stos
jge
jecxz
jmp
in
push
lret
decl
repz
jmp
pop
cmpsb
call
mov
incl
push
arpl
cwtl
orl
xlat
and
sbb
lret
mov
out
loope
push
jns
incl
aaa
push
lock
mov
arpl
int3
cmp
mov
call
jl
pop
xor
fwait
or
shrb
xchg
loop
adc
jmp
daa
das
cmc
aaa
sarl
call
mov
decl
lcall
add
incl
push
inc
push
rcl
adc
add
lcall
inc
sahf
push
push
jae
dec
xlat
ljmp
incl
cmp
ja
mov
pop
pop
dec
mov
cmp
pushl
cmpsb
js
aad
je
pop
add
or
call
xlat
xchg
pop
ret
add
ljmp
ds
inc
dec
ljmp
inc
xchg
mov
dec
jmp
int3
insb
std
cmpsb
incl
xchg
sbbl
cld
jns
enter
js
ret
pop
ret
data16
sbb
lcall
add
fsubrs
add
incl
shll
xor
pop
cmp
mov
mov
fmul
cmp
mov
incl
mov
sbb
popa
xor
pop
sbb
inc
pusha
fwait
cmp
ss
add
lock
jae
decl
mov
ljmp
adc
pop
and
and
xor
pushl
sti
jb
fiadds
jmp
movsb
ljmp
incl
aad
dec
add
pushl
call
xchg
ljmp
imul
mov
jle
xchg
stos
jmp
jb
mov
add
lea
mov
incl
inc
loopne
call
xor
inc
daa
add
cmp
insb
ja
nop
add
daa
stos
orl
aaa
insl
ret
ret
adc
mov
sub
js
movsl
xlat
loop
jmp
jmp
xor
jl
pop
cmpsl
dec
int3
dec
repnz
out
insl
aaa
mov
call
push
clc
out
pmaxub
and
ljmp
movsb
inc
outsl
jnp
pop
test
decl
pop
fstpl
mov
mov
in
push
dec
dec
out
add
jmp
aas
in
lret
decl
lods
lcall
popf
mov
or
std
inc
lret
xchg
cli
inc
rcrl
in
iret
out
mov
sub
in
mov
incl
decl
sarb
jnp
es
fadds
dec
xchg
lcall
ret
cmp
pushl
jle
cmp
jecxz
mov
push
pop
jo
jl
pusha
mov
mov
decl
xchg
pop
sbb
lcall
frstpm(287
add
sahf
movsl
nop
jns
inc
mov
clc
adc
xchg
loope
sbb
shl
dec
pop
jecxz
call
nop
xor
mov
enter
fmuls
sbb
xchg
push
pushl
jge
push
xor
inc
imul
xchg
push
sbb
inc
dec
das
cmp
mov
sub
adc
dec
rorl
fldenv
incl
cmp
add
pushl
inc
aad
decl
in
decl
add
call
daa
lcall
js
dec
adc
test
sbb
sub
pushl
adc
ret
jecxz
push
loop
xor
mov
data16
xchg
adc
lret
cmp
std
lcall
decl
rorb
call
icebp
add
call
mov
mov
pop
pop
jmp
call
pushl
fstps
or
mov
filds
or
sbb
divb
mov
stc
pop
sub
incl
incl
pusha
dec
and
decl
insb
dec
test
call
jp
cld
jmp
jne
pop
inc
adc
lock
lock
aaa
jno
push
lods
pushl
sbb
jns
sub
decl
call
and
mull
ljmp
adc
clc
lods
jmp
sbb
adc
sub
jmp
inc
outsl
test
and
call
in
ljmp
decl
push
jns
fdiv
outsl
ret
decl
cmc
aam
inc
mov
aam
add
jb
pushl
adc
data16
xchg
imul
ret
sub
and
lcall
inc
inc
sti
cmpsl
add
and
push
push
js
add
lcall
inc
or
clc
jle
jmp
mov
ljmp
int
shr
ret
cld
cmp
fiaddl
into
stos
jmp
and
decl
call
jle
jmp
test
jno
mov
in
mov
cmp
push
ja
enter
lcall
pop
stc
lods
testl
pushl
popf
clc
cmp
incl
ljmp
out
lcall
mov
fldcw
push
into
into
cmp
stos
jmp
int
xor
imul
dec
xor
movsb
incl
out
sub
decl
add
jmp
jmp
jg
mov
dec
xchg
ljmp
ret
stos
dec
mov
adc
jmp
mov
lcall
cmp
incl
call
shll
mov
sbb
decl
call
aas
add
ljmp
and
call
clc
je
and
aas
cmp
fidivrs
mov
in
rol
es
call
push
inc
stos
in
add
lcall
mov
stc
je
mov
call
jg
and
ljmp
jmp
mov
lcall
inc
mov
out
repz
ljmp
inc
inc
sar
sbb
xor
jb
xor
stc
lcall
sbb
jmp
jmp
rcr
add
decl
xchg
cmp
mov
call
jne
iret
shll
scas
call
jmp
mov
xlat
dec
mov
lock
incl
daa
pop
cmp
call
adc
pop
jno
mov
inc
cld
ljmp
push
sbb
cmp
jmp
fiadds
push
push
push
cmpl
jmp
mov
std
and
push
notl
mov
xchg
ljmp
cmp
call
jle
out
in
fldcw
push
pop
push
cmp
jmp
loope
icebp
pop
and
dec
xor
inc
jmp
arpl
rcl
aas
addr16
xchg
xchg
push
mov
incl
sbb
and
fisubs
call
and
sub
xor
pop
js
mov
loop
xor
sub
ficomps
lcall
mov
inc
fidivrl
in
pop
outsl
dec
movsb
lcall
cmp
push
repnz
inc
xor
lcall
lret
fbld
mov
jnp
test
cmp
inc
xor
or
cmp
ljmp
dec
cs
incl
mov
movsl
int
mov
test
ljmp
ljmp
pushl
jg
imul
outsb
mov
mov
cld
jg
dec
outsl
sub
pushl
incl
dec
jecxz
inc
mov
call
lods
jmp
jae
xor
js
icebp
cs
incl
call
popf
cmp
insb
testl
decl
jp
repnz
xor
ficoms
mov
push
sbb
shl
lret
cltd
int3
cmp
dec
into
cs
fdivrs
and
jmp
test
pop
fdivrp
jbe,pt
or
lcall
and
call
mov
cmp
jbe
mov
dec
pop
push
pushl
daa
mov
outsb
iret
pop
cmp
sar
xor
pushl
mov
les
mov
data16
and
jmp
xchg
ja
fldl
or
pushl
jns
aam
inc
jb
lock
pushl
mov
stos
sub
cmp
ljmp
testb
call
das
or
call
jno
push
decl
dec
xchg
lods
pushl
sub
ljmp
mov
cmp
ret
pop
and
dec
outsl
lahf
jge
cmp
ljmp
dec
mov
lcall
je
xor
sbb
xchg
faddl
data16
decl
repz
cmp
dec
cmp
decl
fmulp
ret
sbb
call
fistpll
fwait
mov
daa
imul
pop
ret
pop
xor
lret
je
and
ljmp
pushl
es
in
scas
js
push
pop
pop
or
call
ljmp
lcall
jno
mov
jmp
pusha
js
cmp
movsb
call
mov
sti
inc
cmp
incl
adc
inc
cmc
adc
sbb
inc
cmp
aas
nop
sub
pushl
cmp
lods
or
fistl
fucom
jae
mov
cmovg
out
push
and
js
rol
fwait
jmp
int
pop
adc
das
int3
popf
jnp
push
fistpll
test
lcall
push
incl
dec
cltd
push
stos
stos
ljmp
out
loopne
cmc
or
call
int3
xor
mov
ljmp
std
in
bound
mov
inc
push
push
es
jmp
push
stc
adc
out
cmp
fstpl
cmp
test
pushl
call
movsb
jmp
sub
pushl
jae
dec
dec
pop
movsl
in
scas
inc
sbb
pop
std
adc
push
ljmp
in
out
dec
mov
jmp
std
outsb
dec
fildl
call
rcll
mov
ljmp
inc
fildl
pushl
xor
jp
jge
ss
sub
jb
adc
aas
pop
push
and
incl
ljmp
inc
or
jl
push
iret
push
fcompl
add
incl
ljmp
jmp
pop
movsl
jmp
sub
push
insb
cmpsb
pushl
mov
lcall
decl
lahf
cmc
cwtl
mov
test
sbb
jmp
dec
rcrl
push
popa
xor
dec
or
or
cmp
xchg
aad
xchg
pop
jle
andl
cmp
ljmp
mov
fisubs
aad
push
jl
lcall
in
cmc
jg
pop
cmp
decl
std
loopne
inc
mov
cmp
ljmp
call
pushl
fstpt
icebp
ret
inc
mov
outsl
in
ljmp
jg
lcall
call
push
int3
imul
call
lcall
push
jb
mov
lds
call
and
and
call
sub
ret
xorl
loopne
inc
dec
lahf
cmp
xchg
scas
mov
ljmp
cmpsb
call
cmc
push
call
cmp
stc
movsb
push
cmp
pushf
mov
ljmp
dec
mov
out
add
gs
xor
call
xchg
add
lcall
pushl
xchg
incl
incl
mov
repnz
push
pop
fdiv
mov
pushl
mov
xchg
jecxz
repnz
sub
ljmp
pop
mov
call
push
add
mov
jmp
jbe
mov
cmp
jmp
cmc
push
incl
sub
jmp
mov
mov
jmp
not
inc
out
ljmp
cmp
leave
cltd
push
sub
mov
inc
mov
cs
ljmp
test
pushl
gs
jmp
mov
jbe
jle
es
incl
ljmp
mov
lcall
mov
cmp
mov
incl
fiadds
cmp
lcall
adc
lock
jbe
sbbl
lahf
adc
pusha
mov
pushl
inc
pop
inc
mov
cmpsl
mov
lcall
shrl
ljmp
inc
bound
int
or
call
inc
mov
mov
call
lcall
sahf
xor
ljmp
incl
sub
pushl
sub
add
call
and
mov
push
mov
xchg
cmp
jecxz
xor
lcall
loope
test
mov
mov
or
dec
jbe
lahf
lret
mov
xchg
imul
ljmp
inc
pop
iret
test
jmp
cmc
insb
or
ljmp
xlat
mov
lcall
gs
jo
call
lcall
mov
pushl
jmp
push
call
sbb
incl
out
pop
aas
sub
jmp
cmpsb
ljmp
add
je
stc
gs
and
les
ret
gs
dec
push
lods
xor
xor
cmpsb
out
cwtl
sbb
jmp
jge
mov
mov
ficoms
adc
inc
jno
cmp
std
arpl
adc
int3
ret
rcr
sarb
add
rol
jo
clc
cmp
orl
call
jnp
dec
lock
jge
jp
jmp
stc
fs
jmp
test
incl
lcall
or
stc
inc
sbb
fistps
xchg
mov
js
jp
inc
jae
ljmp
pop
shll
cmpl
cwtl
sbb
