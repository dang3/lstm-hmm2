insb
jnp
dec
mov
push
fs
out
out
out
dec
cwtl
push
jne
outsl
xor
mov
int
push
add
rolb
mov
test
fcomps
and
ret
add
inc
add
lock
mov
push
add
mov
loopne
mov
add
mov
mov
arpl
add
or
cld
ljmp
sub
cmc
push
add
add
xor
xchg
add
jb
mov
add
mov
rorl
push
out
jbe
pusha
add
push
add
pop
mov
or
or
cmpsl
jg
adc
add
jae
pop
pop
xchg
sbb
push
push
movsb
xor
jg
mov
pop
mov
adc
add
mov
rolb
mov
mov
jg
sbb
loop,pt
mov
and
adc
mov
in
and
mov
test
sub
out
mov
jecxz
iret
or
jns
jnp
add
xchg
clc
sub
pop
rolb
lea
fldl
push
pop
loop
mov
loopne
mov
movsl
test
addr16
imul
add
mov
std
cld
push
cmp
mov
mov
addb
rolb
mov
lcall
add
repnz
lock
push
sbbl
popa
pop
fs
cli
fnstcw
lahf
adc
out
mov
cmp
stc
mov
scas
pushf
dec
inc
lcall
stos
mov
sbb
mov
jp
and
or
jl
add
jnp
mov
jbe
and
stos
cmp
clc
inc
add
sub
mov
aam
jno
add
adc
mov
lahf
lock
fcoms
jo
mov
add
cs
loope
fnstenv
iret
push
mov
mov
push
dec
sub
mov
inc
hlt
out
and
sub
sub
mov
xchg
add
mov
lods
loop
mov
popf
aas
mov
lods
call
out
setp
mov
add
jae
or
add
lahf
bswap
cmp
xchg
add
repnz
sbb
fiaddl
add
cli
insb
jle
stos
mov
add
insl
imul
mov
add
mov
xorl
sbb
and
mov
sahf
push
jo
mov
mov
mov
mov
out
mov
ss
pushf
jp
fiaddl
add
add
jns
mov
data16
pop
push
add
jns
push
test
imul
daa
dec
push
xlat
test
popf
mov
mov
dec
les
mov
daa
push
inc
add
pop
inc
xchg
dec
dec
xlat
data16
adc
outsl
popa
testl
push
inc
dec
rolb
jmp
cmp
sub
or
push
push
pop
or
test
or
jg
es
lret
push
ret
outsb
jo
mov
fstpl
add
sti
mov
cmpsb
inc
in
pop
int
xchg
in
xchg
les
cmp
mov
mov
inc
shll
mov
add
mov
jg
into
cmpl
jne
mov
add
add
jl
dec
jbe
mov
fdivl
cmpsb
out
mov
ljmp
xlat
dec
test
ljmp
push
iret
daa
popf
data16
sbb
jg
cmp
cmp
inc
add
arpl
add
mov
jae
mov
mov
push
pop
dec
nop
add
xchg
outsb
and
mov
mov
push
mov
aas
mov
xlat
cli
xlat
insl
insl
movsl
movsl
clc
and
adc
mov
addb
cmp
push
adc
test
push
sbb
fcomps
test
mov
call
mov
mov
cmp
pusha
add
dec
add
in
cmp
dec
inc
add
add
outsb
in
lret
sub
adc
mov
not
or
cmp
fs
aas
mov
xchg
adc
lea
cwtl
inc
rolb
mov
add
mov
push
inc
xor
and
mov
rolb
mov
add
mov
in
xchg
adc
mov
mov
add
aas
pop
jle
repz
mov
bound
mov
cmc
push
das
sub
add
fstpl
adc
mov
movsb
cmp
xchg
test
mov
out
mov
les
add
jp
movsl
mov
mov
jno
add
xor
pop
xchg
loopne
mov
mov
mov
xchg
add
mov
xchg
pusha
add
lods
mov
add
mov
mov
adc
sbb
jno
ds
mov
dec
jmp
mov
mov
add
test
insb
add
lods
and
add
mov
and
mov
mov
add
jae
lcall
into
mov
jns
jge
cs
or
mov
mov
sub
sbb
es
cmp
push
add
je
stos
mov
test
and
mov
pop
or
jns
push
add
sbb
cmp
xor
sahf
xorl
lret
inc
lcall
mov
jns
rolb
mov
add
inc
xchg
jmp
inc
ljmp
out
pop
pushf
jl
lahf
loop
mov
xchg
sub
jecxz
movsl
cmc
dec
bound
mov
push
push
in
xor
aas
fcmovnbe
add
xchg
add
bound
mov
mov
dec
push
and
jmp
xlat
or
add
mov
mov
and
mov
sahf
xlat
sbb
add
add
dec
add
add
addr16
es
mov
xchg
lcall
mov
cltd
jne
stos
aas
xchg
xchg
add
roll
jno
les
mov
mov
das
xchg
cmp
or
jmp
push
xor
mov
add
repz
mov
mov
aad
cmc
test
add
test
cmpsb
adc
fistl
rcl
add
add
add
push
add
les
pop
addb
test
mov
dec
test
sub
mov
fwait
mov
mov
cld
roll
out
add
jb
mov
nop
add
enter
pop
repnz
cld
fldl
cld
flds
test
mov
jecxz
jp
aam
xor
mov
pop
push
cs
mov
cmc
sbb
dec
je
jns
xchg
add
test
add
mov
and
mov
cmp
mov
xor
loopne
mov
fstpt
sbb
push
nop
add
andl
cmc
pop
pop
mov
push
inc
add
add
mov
sub
push
movl
cmp
dec
stos
jecxz
jle
jno
and
mov
loope
pop
xchg
mov
jbe
dec
cmpsl
outsb
mov
mov
mov
adc
add
add
je
sarl
mov
ret
fs
scas
xor
mov
imul
aad
push
lea
data16
and
into
jmp
mov
mov
mov
in
inc
rolb
mov
repz
inc
mov
mov
cvtps2pi
lret
mov
jb,pn
mov
add
lahf
pop
mov
sub
push
xor
xchg
push
add
lret
mov
daa
sarl
int
xchg
add
pop
push
mov
inc
mov
mov
jl
add
mov
jmp
lea
mov
and
mov
mov
cmp
fwait
push
frstor
add
sahf
mov
add
add
hlt
rolb
mov
cli
stc
xlat
fstpl
clc
aad
or
push
lods
sbb
nop
add
ljmp
add
cmpsl
mov
add
push
sbb
mov
add
jnp
mov
mov
push
add
mov
outsb
inc
add
add
push
mov
and
mov
pop
jge
xchg
pop
mov
shll
fwait
das
outsl
movsl
outsl
xchg
stos
adc
jmp
call
shrl
add
or
adc
mov
mov
mov
mov
out
mov
cmp
jg
stos
adc
mov
lods
ret
add
xor
mov
call
dec
push
add
add
mov
insb
inc
popf
rolb
mov
test
mov
sbb
fnstcw
sub
cmpsb
inc
xchg
push
ret
or
sub
add
mov
xor
adc
mov
mov
vcvtss2si
inc
push
repz
pop
xlat
loope
pop
or
dec
ja
mov
push
jae
xor
daa
in
test
cmp
mov
mov
sub
movsb
sub
fnstenv
cmp
pop
fnstcw
pop
mov
inc
pop
stc
xchg
add
arpl
test
add
or
lds
leave
imul
movsl
mov
repz
call
mov
popf
out
fcompl
jae
xor
mov
pop
arpl
xchg
add
rorl
xor
mov
mov
addb
xor
mov
ret
xlat
out
lahf
push
clc
loope
add
xchg
lds
cmp
popa
mov
add
mov
mov
loope
add
mov
mov
in
sub
negl
sbb
fbld
add
add
xchg
push
fstp
or
pop
mov
add
mov
out
xchg
sub
loopne
mov
add
mov
add
add
jo
mov
add
add
sbb
or
mov
lods
or
ret
out
inc
out
dec
mov
mov
popa
add
sbb
mov
push
sbb
add
cs
aaa
ficomps
inc
add
add
jb
mov
mov
add
and
mov
imul
rolb
mov
jmp
mov
mov
lret
pop
sbb
andl
fbld
mov
jecxz
mov
add
pop
pop
inc
add
jnp
pushf
mov
scas
lods
clc
xor
mov
dec
sub
mov
sub
pop
push
lret
mov
arpl
int
jmp
mov
inc
dec
xchg
dec
cmc
inc
cwtl
mov
cmp
test
popa
sbb
jae
add
inc
pop
xchg
fiadds
loop
mov
nop
add
mov
push
mov
jne
add
shll
mov
jbe
mov
dec
ss
jl
mov
ljmp
sub
mov
sar
add
xchg
xor
mov
add
add
add
les
jbe
pop
mov
or
cli
testl
jne
jl
dec
fadds
stos
push
dec
add
fists
clc
gs
stos
xor
fisubrs
dec
lea
popf
jmp
bound
mov
jp
jge
pextrw
pop
push
int3
jo
mov
test
cmp
stc
aam
and
mov
add
cmpsb
sub
repnz
pusha
add
mov
cmc
loopne
mov
add
xor
mov
sbb
ljmp
push
mov
and
add
mov
add
mov
mov
jne
out
sbb
sub
test
inc
add
test
pop
dec
fstpl
xchg
add
mov
repnz
push
push
add
stc
push
add
mov
xchg
dec
ret
and
add
mov
mov
mov
fildl
mov
stos
add
push
arpl
jne
add
dec
iret
call
pop
inc
add
pop
cmc
je
add
lahf
es
in
into
sbb
call
sbb
pop
bound
mov
jg
int
jb
mov
sbb
jge
scas
push
cmp
nop
add
mov
add
sahf
sub
or
les
addb
out
lcall
addb
push
ja
pop
jo
mov
or
gs
popf
dec
jae
add
dec
mov
in
jle
jo
mov
sub
push
push
push
push
push
push
cld
call
sub
es
movzbl
cmp
ss
push
push
call
cmp
je
es
lea
cs
sub
mov
push
es
call
test
jne
jmp
leave
push
lret
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
nop
lea
lea
sub
add
mov
sub
sub
push
pop
push
je
jmp
add
add
mov
jbe
or
mov
push
push
scas
mov
add
lock
add
rcrl
outsl
outsb
lcall
fmuls
dec
and
and
mov
xchg
cmp
loopne
mov
nop
add
shl
adc
add
fdivr
rol
rolb
mov
out
icebp
add
movsb
push
aaa
xor
scas
inc
insb
imul
pop
cmp
sbb
out
and
mov
mov
xchg
cmp
cltd
sahf
iret
iret
xor
push
out
sbb
lods
sub
fdivrp
iret
loopne
mov
add
add
mov
jmp
push
mov
test
add
repz
add
push
enter
cmp
hlt
movsl
je
mov
inc
into
rolb
mov
test
pop
add
push
je
xor
pushf
push
add
mov
cmpsb
fidivl
mov
mov
push
dec
cmpsb
fmuls
add
mov
popa
and
mov
in
das
clc
fcmovu
fstps
mov
fwait
pushf
outsl
sahf
dec
daa
leave
jno
mov
xor
mov
add
jnp
push
inc
mov
nop
add
mov
push
inc
testl
push
rolb
mov
jge
cmp
mov
or
fwait
adc
mov
add
mov
inc
sbb
fcmove
leave
imul
je
xchg
inc
jns
dec
dec
clc
stos
pop
inc
add
mov
sbb
dec
fsubrs
pop
aam
or
mov
add
inc
icebp
imul
push
push
fmull
adc
popa
xchg
inc
add
mov
inc
add
add
jae
jae
or
push
add
xor
mov
jle
rcll
popa
scas
dec
in
dec
mov
mov
or
out
insl
cmp
mov
in
jmp
add
pushf
mov
add
add
mov
push
movsl
ficomps
in
push
js
sub
into
les
and
add
add
add
mov
movsb
int3
xor
orl
jge
les
je
and
xchg
pushf
imul
xor
mov
nop
add
ljmp
rolb
lock
pop
inc
fldenv
push
add
pop
popf
pop
jno
inc
in
pop
or
lcall
sub
ljmp
cmp
xchg
mulb
addr16
movsl
pop
dec
leave
cmpsl
fldcw
push
mov
repnz
push
data16
mov
pop
adc
add
dec
sub
adcl
jmp
push
sahf
aam
add
mov
pop
sbb
sub
mov
cmp
into
test
jl
add
pop
js
das
jecxz
push
rolb
mov
arpl
dec
outsb
mov
dec
mov
dec
cmc
jp
cmp
andl
out
pop
cld
add
inc
add
add
mov
loope
out
cmovge
leave
in
mov
iret
push
fcoms
add
mov
dec
cmpsl
lods
lock
fsubl
clc
sub
add
in
push
and
lret
mov
cmp
mov
mov
or
dec
int
add
add
xor
inc
mov
add
dec
mov
fs
scas
mov
mov
cmp
in
add
lea
mov
mov
mov
jb
mov
rolb
mov
jg
out
mov
mov
rolb
mov
inc
jg
enter
or
loope
mov
inc
out
mov
add
test
adc
mov
mov
add
mov
push
add
iret
mov
test
add
cmp
mov
hlt
push
outsb
lcall
in
fsubr
inc
rolb
mov
pop
cmp
fs
push
loopne
mov
popa
test
outsl
xor
pop
and
loopne
mov
xor
mov
addb
adc
add
insb
push
mov
sub
mov
add
add
lods
stos
push
dec
adc
popf
xchg
push
adc
mov
add
and
mov
jmp
add
pop
mov
mov
int3
adc
iret
inc
add
pushf
jmp
ret
mov
inc
and
mov
add
pusha
add
add
xor
mov
leave
mov
pusha
add
jecxz
add
mov
adc
pushf
cmp
inc
scas
movsb
ss
cmpsb
and
mov
and
add
jno
add
mov
mov
cwtl
push
test
pop
jl
out
inc
dec
mov
mov
pusha
add
jo
mov
mov
jl
popa
mov
out
jle
cli
in
push
and
add
add
and
cmp
movsl
into
cmp
dec
xchg
rolb
mov
ret
or
adc
mov
sub
mov
dec
mov
in
jno
das
mov
dec
loope
mov
add
push
pop
fsubrs
xor
sub
leave
xor
jbe
push
popf
inc
xor
mov
xor
jb
mov
mov
add
add
call
add
add
mov
dec
mov
mov
arpl
add
stc
jecxz
cwtl
jns
mov
add
mov
jmp
add
mov
repnz
adc
mov
or
dec
cmp
add
inc
cld
fidivrs
mov
add
lahf
icebp
jmp
add
mov
mov
vunpcklps
pop
ret
gs
add
mov
add
add
bound
mov
inc
pusha
add
sub
lods
mov
or
addb
push
push
pop
sbb
ds
ss
aam
or
lret
mov
push
rol
and
add
add
cmpsl
lds
push
xor
cmpsl
pop
rolb
mov
sbb
pcmpeqb
dec
pop
sbb
adc
clc
aam
cmp
cmpsb
cmpsb
xchg
push
addl
adc
addb
lret
adc
enter
cli
mov
addr16
jo
mov
mov
test
insl
in
mov
sbb
mov
mov
mov
jmp
pop
pop
je
sub
mov
sbb
add
add
add
insb
aaa
arpl
add
xlat
push
cs
jecxz
outsb
xor
nop
add
add
dec
imul
add
test
fs
add
mov
jne
push
add
dec
mov
int
fsubs
add
push
les
clc
andl
outsb
and
mov
pop
mov
scas
xor
and
push
jne
test
mov
js
pop
pop
inc
rolb
mov
add
xor
mov
push
shll
imul
in
add
pop
mov
push
xchg
add
scas
test
mov
sbb
mov
adc
pop
cmp
mov
mov
dec
jne
add
mov
test
in
mov
xlat
mov
add
fcom
inc
cmp
dec
cltd
add
push
add
inc
mov
pusha
add
add
bound
mov
add
mov
sbb
aaa
sub
movsb
hlt
data16
mov
test
add
mov
push
xchg
mov
rorl
ljmp
inc
add
mov
add
sbb
iret
mov
stos
fldl
mov
imul
add
mov
js
push
cs
dec
mov
mov
mov
aaa
push
stos
inc
xor
mov
clc
mov
add
jbe
dec
jae
or
mul
sbb
sti
sub
sub
out
pusha
add
lea
add
push
bound
mov
add
sub
mov
mov
dec
mov
ljmp
rolb
ljmp
add
mov
loop
mov
out
or
and
idivl
popa
das
rolb
and
mov
rolb
mov
add
push
jae
sub
bound
mov
lret
cmp
mov
addr16
lahf
pusha
add
pop
pop
mov
add
mov
xlat
push
add
mov
orl
movsb
aaa
jnp
lock
or
loope
insb
shll
jnp
add
mov
xchg
js
hlt
and
out
lret
pop
inc
cmp
or
int3
cmc
adc
cmpsl
push
jb
mov
sub
es
pop
mov
push
insb
repz
lock
mov
add
add
add
push
inc
in
xchg
add
xchg
xor
repz
jae
mov
add
aaa
loop
mov
cmp
lahf
adc
ds
mov
push
pushf
fdecstp
mov
ret
out
ljmp
mov
fstl
push
xchg
sub
jmp
rcll
mov
adc
mov
test
push
jl
lret
out
in
jmp
out
xchg
mov
cmp
pop
pushl
add
mov
mov
jns
jbe
push
add
jmp
insb
cld
xor
mov
add
fnstcw
xor
add
push
push
ds
add
xchg
add
pop
lods
push
pop
int3
and
cwtl
add
mov
addb
dec
push
mov
add
mov
stos
fdivl
pop
pop
inc
lea
add
add
sti
add
icebp
mov
add
mov
pop
je
inc
jae
inc
cmpl
mov
xor
mov
add
inc
add
jmp
mov
cmp
aas
cwtl
adc
test
add
sbb
add
add
test
mov
pop
bound
mov
add
mov
mov
mov
mov
jnp
add
repz
sets
mov
mov
dec
xlat
xchg
cltd
cmpl
cld
dec
lahf
pop
shll
mov
pop
jo
mov
push
je
sub
add
add
jl
add
es
add
cmc
push
push
or
add
into
jecxz
push
xchg
je
cltd
insl
cmp
je
and
mov
fwait
sub
add
lds
mov
ss
pop
ds
pop
mov
out
xlat
ret
mov
dec
cltd
push
add
xor
add
mov
mov
arpl
repnz
cld
mov
pop
scas
ja
call
mov
cmp
jne
jecxz
adc
test
lds
mov
sbb
push
dec
mov
mov
mov
cmc
icebp
dec
push
mov
xchg
std
push
add
fidivrl
add
fmuls
pushl
add
mov
pop
cmp
lods
mov
mov
xchg
cmpsb
dec
mov
mov
jmp
repnz
out
jge
add
mov
add
fnstenv
xor
mov
mov
cmovae
das
call
imul
je
inc
add
dec
pushf
mov
loop
mov
mov
xor
add
adc
mov
adc
mov
arpl
mov
sub
mov
fnstsw
fstl
add
and
mov
add
test
add
mov
inc
pusha
add
int3
mov
out
push
inc
mov
dec
inc
xor
cmp
insl
out
and
mov
add
dec
sahf
ss
sbb
add
sub
mov
mov
repnz
add
lret
mov
mov
and
mov
pop
dec
arpl
add
mov
mov
gs
mov
bound
mov
rolb
leave
xchg
push
int3
mov
push
je
sbb
icebp
pop
imul
repz
lods
mov
mov
add
mov
pop
mov
cld
pop
push
lret
jp
pop
push
or
clc
pop
ret
pop
pop
imul
pusha
add
xchg
pop
inc
sub
xchg
test
adc
mov
add
mov
es
sbb
sub
adc
add
cmc
shl
dec
loope
test
iret
loop
mov
jns
sub
inc
popa
popf
pop
xchg
int
inc
fisubs
add
mov
mov
push
stos
aaa
or
out
cltd
mov
sub
or
cmp
cmpsb
lock
in
add
add
or
dec
adc
xchg
test
mov
add
mov
fcoms
add
jp
dec
pop
push
in
xchg
fisttpll
mov
mov
add
inc
sub
das
adc
add
mov
mov
repz
mov
fsts
or
iret
jp
imul
scas
sbb
add
imul
movsl
xchg
stc
lods
sub
outsl
jecxz
push
addb
or
in
mov
mov
sbb
sub
mov
pop
push
add
sub
add
mulb
ja
mov
mov
js
ja
outsb
mov
sbb
add
mov
repz
ds
push
inc
dec
xor
subl
in
xchg
dec
jmp
add
enter
pop
test
sub
mov
mov
xchg
in
adc
add
push
fs
loop
mov
dec
ds
mov
mov
popa
enter
sub
aas
ja
mov
inc
add
dec
jge
fiaddl
add
mov
test
sar
xor
mov
and
popl
and
mov
pop
inc
rolb
mov
xor
mov
xchg
pop
jmp
mov
loop
mov
lcall
sahf
jg
or
cmpsl
rolb
mov
adc
repnz
mov
xchg
adc
and
cmp
mov
aam
push
dec
push
add
dec
sub
sti
divl
pushf
rolb
mov
add
addb
test
or
add
push
push
add
xchg
add
out
cmp
add
push
jl,pt
jle
test
mov
mov
xchg
lock
cmpsb
stos
or
adc
lcall
cmpsl
lods
in
add
mov
dec
xchg
xchg
push
add
sbb
push
add
fldl
mov
jo
mov
add
js
in
push
mov
dec
bound
mov
scas
xchg
dec
loopne
mov
lahf
sbb
mov
mov
push
add
cmp
in
shll
add
or
cmp
mov
call
add
mov
add
pop
mov
test
mov
add
test
add
or
inc
mov
push
add
pushf
mov
mov
icebp
ja
in
add
mov
stc
out
pop
xchg
xlat
cld
lock
mov
add
mov
jns
outsl
ljmp
inc
imul
push
es
add
mov
mov
pop
cmpsl
lock
lcall
pop
or
or
mov
mov
push
mov
add
add
inc
sub
mov
ljmp
out
mov
scas
xor
sahf
pushl
jo
mov
push
jmp
mov
fildl
add
cmpsl
inc
add
fidivs
mov
sub
inc
mov
add
in
add
mov
pop
jp
add
mov
add
int3
sub
mov
into
pop
adc
addb
and
jo
mov
push
or
add
dec
cmp
addb
pop
outsb
adc
hlt
or
pop
pop
push
mov
dec
pusha
add
movsb
jo
mov
xor
mov
in
add
mov
mov
add
inc
cmp
lcall
scas
fwait
lds
pop
push
push
jg
mov
gs
push
inc
ss
out
jl
inc
sub
mov
mov
les
insb
inc
imul
popa
adc
mov
test
mov
lods
in
popf
int
push
pop
sbb
outsb
daa
call
in
pop
jno
mov
and
mov
pop
loop
mov
add
leave
lock
push
sti
int
xchg
xor
lea
clc
adc
mov
add
mov
add
adc
mov
push
fcomps
hlt
cmp
or
mov
mov
mov
sbb
lea
adc
rcrl
mov
mov
mov
mov
add
movsb
pop
in
test
jnp
cmp
ja
xor
pop
sub
push
mov
sbb
sbb
mov
testl
sbb
xor
push
aaa
sahf
and
jle
arpl
pop
test
int
add
mov
test
push
lea
inc
dec
jb
mov
sbb
xchg
sub
mov
jle
lods
test
lock
add
add
mov
mov
loop
mov
mov
adc
mov
ds
test
add
mov
add
lahf
cmpsb
ret
push
xchg
aam
inc
add
add
push
xchg
mov
pusha
add
add
test
jns
inc
scas
jg
sbb
sub
sbb
or
aaa
and
push
add
or
inc
add
mov
mov
fldcw
sub
rolb
mov
int
das
ss
mov
add
push
fistpl
inc
flds
cs
mov
cmc
pop
loope
xorl
cmp
add
ds
loopne
mov
lahf
mov
add
mov
xor
mov
scas
stos
cmp
add
sub
mov
repz
jns
out
add
cmp
mov
mov
insl
mov
mov
fistl
cli
dec
daa
pop
xchg
pop
inc
or
push
xor
pop
mov
mov
pusha
add
inc
popf
test
fwait
repnz
addb
adc
mov
inc
add
adc
mov
das
push
sti
cmp
test
fldenv
add
shll
sub
sbb
fs
inc
add
sub
mov
cld
adc
mov
push
add
push
pop
cmovo
mov
mov
mov
xchg
jp
dec
std
inc
sub
push
push
mov
das
add
mov
xchg
add
mov
xchg
mov
jb
mov
dec
mov
jns
mov
mov
dec
push
pop
mov
mov
jg
add
mov
jle
rcrl
push
jae
cld
out
mov
add
push
test
adc
mov
xlat
fsubl
mov
push
dec
mov
mov
jge
or
rcll
xchg
push
add
or
stos
mov
lret
fiaddl
cwtl
clc
pop
out
test
add
mov
insb
jb
mov
cmp
add
test
dec
jo
mov
in
cld
enter
lea
aad
inc
inc
push
add
and
mov
add
add
mov
in
icebp
out
rolb
ret
dec
adc
daa
jle
add
mov
rolb
mov
cmpsl
and
cli
in
shll
inc
mov
sahf
mov
out
lods
stos
cmc
pop
fsts
mov
inc
repnz
mov
xor
mov
test
sub
or
mov
mov
add
mov
mov
pop
stos
nop
add
inc
add
xlat
sti
fistl
pop
xor
cmp
and
mov
dec
pushf
sarl
xchg
add
pop
test
xor
sbb
sub
add
mov
dec
jg
jbe
sub
mov
push
out
in
sub
rolb
mov
sbb
push
cmc
pop
clc
or
xor
mov
pop
pop
out
scas
adc
mov
add
mov
add
leave
and
mov
js
add
cwtl
adc
lret
mov
lods
cmp
mov
xchg
mov
mov
inc
mov
mov
outsb
sub
and
and
outsl
cwtl
movsb
and
mov
mov
jmp
xchg
stos
pop
and
mov
add
add
mov
rcrl
cltd
dec
pop
lods
jae
mov
mov
jns
xor
ret
outsb
in
and
and
mov
test
clc
push
rolb
scas
push
rolb
mov
and
jl
and
mov
in
daa
push
jo
mov
jmp
mov
add
dec
loopne
mov
add
mov
loopne
mov
dec
or
fcmovbe
cld
repnz
fists
push
mov
fcompl
dec
popa
popa
stos
movsb
icebp
ror
ret
push
sbb
js
add
mov
das
cltd
add
mov
addps
stc
mov
jmp
mov
les
pop
ret
cmp
cli
test
push
dec
mov
mov
mov
loop
mov
mov
lret
imul
jno
push
xchg
sub
les
hlt
mov
adc
mov
movlps
mov
cmpl
test
or
mov
in
fnsave
add
mov
pop
inc
add
xor
cs
mov
mov
jge
jb
mov
movsl
sbb
movsl
ror
outsb
in
lret
rolb
mov
rolb
push
cltd
fidivl
inc
or
cmp
add
mov
jg
imul
jb
mov
sahf
lcall
mov
add
and
mov
mov
addb
mov
jno
mov
pop
adc
mov
xlat
inc
cli
jl
pop
imul
lcall
mov
sub
add
jp
ror
xor
mov
inc
mov
outsl
sahf
in
push
or
rolb
push
mov
add
incl
mov
add
mov
jne
insb
dec
push
in
mov
mov
add
xchg
push
or
insb
sahf
jo
mov
add
pop
je
scas
outsb
jno
add
mov
loop
mov
das
lea
daa
lock
pop
ds
inc
mov
mov
add
add
fiaddl
cmp
int3
jne
add
jmp
fwait
xchg
les
add
ja
loopne
mov
mov
mov
fwait
mov
add
stc
cmp
pop
add
mov
pop
jp,pt
dec
into
xchg
stc
xorl
dec
aam
inc
add
and
mov
mov
out
ficoms
add
imul
mov
and
mov
stc
jecxz
loope
call
stos
insl
lds
stos
lret
xchg
inc
mov
jge
iret
sarl
add
sub
dec
push
daa
mov
fnstcw
add
adc
add
mov
int3
rcll
jle
mov
mov
fdivrl
add
mov
int3
sbb
test
lock
inc
mov
mov
pop
xor
mov
mov
cmpsl
jbe
imul
push
mov
add
lret
out
dec
jge
sar
pop
roll
and
out
add
and
mov
nop
add
push
xchg
test
pop
adc
mov
add
sbb
push
add
mov
or
sbb
aad
pop
xor
mov
xor
mov
mov
add
mov
add
ret
clc
mov
iret
xor
mov
mulb
add
or
add
cmp
jbe
out
jmp
aas
jp
test
pusha
add
mov
dec
cs
jbe
imul
mov
mov
sti
cmp
into
mov
add
jb
mov
mov
test
bound
mov
mov
jl
scas
xor
mov
xchg
int3
lds
mov
add
xor
mov
addr16
cwtl
cmp
pop
hlt
lcall
addb
xchg
cmc
lcall
out
fsubs
lcall
xchg
in
sub
test
jge
xchg
addr16
stos
xlat
pop
shl
mov
loop
mov
mov
mov
int3
div
cmp
xchg
mov
mov
mov
inc
xor
mov
inc
jo
mov
lahf
add
mov
punpcklbw
mov
mov
cmp
ss
add
adc
mov
mov
cmp
mov
imul
xchg
pushf
fwait
loopne
mov
cmp
mov
sbb
mov
mov
add
jge
mov
cmp
push
in
addb
push
out
fstl
fucomi
pop
mov
shrl
add
inc
aaa
sub
pop
mov
add
mov
enter
lahf
pop
and
stos
jp
mov
xchg
add
add
addb
mov
dec
test
add
mov
xlat
pushf
pop
ret
rolb
mov
addl
test
aaa
jns
addb
jns
mov
loope
xor
mov
mov
clc
movsb
sub
push
or
mov
mov
in
adc
add
iret
add
int
ret
lods
inc
add
dec
jl
std
js
lds
and
frstor
pop
adc
mov
sub
pop
outsb
into
xor
xor
dec
xchg
jo
mov
add
mov
jb
mov
in
lcall
dec
into
test
mov
mov
rolb
pop
je
movb
rolb
mov
mov
mov
pusha
add
mov
rcrl
dec
xchg
je
pop
adc
pop
xor
push
inc
push
outsb
sbb
cmpsl
ljmp
aad
jl
rolb
xchg
or
daa
es
jle
adc
insl
imul
xchg
adc
mov
sub
popa
push
imul
cmp
cmpsl
adc
mov
add
cmp
aad
nop
add
push
fwait
lcall
pop
and
mov
mov
adc
mov
mov
cwtl
dec
inc
in
aad
sbb
mov
mov
fists
jl
rolb
mov
xchg
movsl
pop
inc
add
xchg
adc
add
aad
xorl
adc
mov
push
adc
mov
fiadds
loopne
mov
xlat
cmp
push
js
add
andl
mov
or
pop
lar
mov
pop
and
roll
pusha
add
mov
lods
pop
fsubl
aas
inc
in
adc
lock
aad
aad
push
jo
mov
cli
bound
mov
cmp
cmc
xchg
fldl
sahf
pop
cmp
mov
lods
addb
jae
jp
pop
popw
or
ret
inc
pop
and
add
fwait
cmpsl
stc
popa
loope
add
add
sub
jge
sahf
push
mov
add
test
push
add
out
mov
in
int3
addb
inc
dec
push
mov
add
decb
add
add
cmp
jmp
or
add
hlt
icebp
pushf
xchg
jno
sbbl
xchg
push
jno
pop
jo
mov
insl
jnp
popa
out
ja
xchg
xchg
inc
add
pop
test
add
push
addb
sub
ret
cmpsb
icebp
movsl
movsb
add
mov
dec
outsl
stos
jne
call
arpl
stos
out
dec
inc
test
shll
nop
add
xchg
in
je
xor
rcll
xor
dec
test
insl
das
mov
cmp
add
push
push
faddl
int3
js
sub
add
mov
arpl
int
or
gs
pop
sub
cli
fisubl
mov
fbld
sbb
jecxz
and
iret
enter
fcoms
in
in
lock
fwait
dec
mov
xor
into
mov
mov
add
sbb
mov
add
in
mov
add
and
mov
mov
jl
test
les
or
scas
je
jnp
fs
push
and
mov
xor
mov
push
xchg
pushf
test
fmull
jle
add
mov
add
cld
and
outsb
dec
jge
adc
mov
ljmp
mov
out
aaa
fcmovnb
xor
push
or
add
mov
popa
sub
icebp
push
sbb
jbe
insl
bound
mov
adc
xor
mov
ja
das
clc
mov
mov
add
mov
add
mov
mov
xor
push
outsb
cmp
or
mov
mov
add
jl
jg
addr16
pop
call
sub
mov
add
in
lcall
add
jno
imul
inc
rolb
mov
mov
addb
dec
pop
imul
pusha
add
mov
pop
push
dec
mov
cmp
pushw
cmp
jp
xor
sahf
int3
push
and
mov
fmull
mov
push
in
fwait
pop
cmp
or
icebp
jl
outsb
push
fdivs
add
cmp
jl
out
cmp
jg
add
test
add
push
add
test
add
mov
add
xchg
push
xchg
add
jle
dec
adc
je
add
fld
in
in
xchg
xchg
outsl
jp
icebp
cli
scas
test
ja
icebp
ljmp
bound
mov
out
mov
mov
add
imul
andl
mov
mov
mov
in
inc
lea
add
xchg
jns
popa
mov
je
fucomp
imul
push
push
add
add
cwtl
in
mov
add
das
daa
into
js
xor
mov
add
and
inc
mov
dec
inc
add
mov
mov
sub
mov
mov
jg,pt
loopne
mov
mov
bound
mov
xchg
and
test
addb
enter
mov
lds
iret
sbb
cmp
add
add
mov
cmc
dec
and
out
outsl
pushf
ss
dec
insb
push
sub
sub
jle
pop
sub
add
push
add
add
cmp
jle
std
into
or
cwtl
popa
mov
sarl
add
push
lods
xchg
add
mov
mov
xor
mov
add
hlt
loop
mov
gs
dec
movsl
mov
add
push
sbb
pop
lds
jbe
add
jno
mov
add
pop
cmp
leave
int
aaa
jno
xor
fbld
xchg
test
pop
mov
sub
mov
mov
jb
mov
push
rolb
mov
adc
and
add
mov
movsb
addr16
cmpsl
rcll
mov
xor
pop
cmc
arpl
ss
mov
add
pop
mov
fnstsw
or
rolb
mov
add
or
test
and
add
pop
int3
lcall
jle
xor
mov
jbe
sbb
xor
js
add
mov
lds
mov
mov
jecxz
aad
add
add
movb
mov
in
cmpsb
imul
add
inc
out
sub
sti
inc
inc
nop
add
add
les
xor
mov
lcall
add
add
scas
jb
mov
sbb
add
rolb
mov
into
imul
jecxz
dec
dec
add
push
add
ljmp
or
xor
cmp
add
inc
add
inc
adc
into
mov
and
mov
idiv
sbb
dec
pop
fildl
test
adc
mov
lods
jo
mov
cmp
cmpsb
xchg
dec
pandn
cmp
mov
add
mov
outsb
imul
mov
cmp
mov
jmp
ffreep
add
adc
movsl
inc
loope
mov
lea
cmc
cld
lahf
or
mov
jb
mov
rep
sbb
add
add
in
gs
int
jmp
add
je
pop
xchg
push
sahf
fisubrl
insl
ds
mov
add
jo
mov
add
push
mov
mov
mov
mov
xchg
and
aam
xor
mov
push
std
out
test
mov
lret
loope
add
mov
mov
and
rolb
xchg
adc
pusha
add
pop
or
add
add
pop
dec
int3
mov
fistps
xor
popa
or
jbe
xchg
dec
or
icebp
xchg
mov
lea
int3
aam
add
addl
mov
xchg
xchg
add
fsubs
pop
mov
mov
add
cmp
xor
pop
push
and
and
scas
mov
push
daa
rolb
mov
leave
test
xchg
add
cmc
clc
jae
add
fstl
and
outsl
fists
sbb
std
ljmp
or
dec
iret
xchg
xchg
xchg
inc
movl
rolb
mov
outsl
ja
jne
repz
dec
mov
cli
inc
in
sbb
test
lods
sub
add
mov
mov
cwtl
mov
int3
popa
add
mov
ljmp
aad
push
add
xlat
stc
mov
addb
fwait
xor
mov
mov
mov
mov
rorl
ss
repnz
testl
add
pop
mov
mov
inc
arpl
loop
mov
mov
push
pop
add
mov
jnp
add
add
pop
rolb
pop
insl
inc
repz
xor
mov
das
outsl
push
stos
add
cmc
jno
adc
push
add
mov
ds
inc
push
sti
or
mov
cwtl
cmpsl
rolb
mov
movsb
dec
jge
popa
movsl
mov
jg
mov
lods
insl
loop
mov
mov
gs
mov
mov
mov
into
cmp
gs
insb
pusha
add
sbb
add
outsb
mov
add
enter
jns
add
xchg
cmp
mov
add
pusha
add
mov
repz
inc
dec
sub
mov
insb
loopne
mov
aas
lret
hlt
fsubr
fcomps
add
cld
pop
rolb
mov
xor
mov
cmp
add
adc
mov
push
add
ds
push
mov
and
mov
add
jnp
sbb
cli
addb
mov
mov
add
mov
push
sub
dec
mov
add
add
pop
adc
movsb
push
add
cmpsl
loop
mov
xor
aaa
cmp
or
sbb
arpl
add
add
add
insb
leave
push
add
ret
rolb
mov
dec
pop
lods
fidivrs
in
mov
test
dec
fnstenv
fnstenv
rcll
or
adc
mov
mov
add
daa
pushf
mov
sahf
mov
fidivrs
movsb
ljmp
inc
enter
mov
add
mov
mov
add
mov
fmull
sub
jnp
add
and
mov
rcrl
jle
or
mov
push
and
mov
inc
fs
int
jns
xor
push
jge
insl
inc
shrl
rcl
loopne
mov
mov
push
testl
add
daa
add
mov
in
inc
jp
mov
arpl
inc
fldt
or
popa
scas
rolb
mov
mov
sub
xor
mov
addb
in
push
xor
scas
pop
outsl
xor
mov
add
mov
sbb
loopne
mov
or
add
mov
and
push
and
mov
test
pop
jae
cmp
add
mov
repz
add
jge
jge
jnp
add
inc
xchg
arpl
lcall
jg
stc
pop
sbb
xor
mov
push
add
fdivrl
mov
pusha
add
mov
inc
jp
fsubs
inc
stos
pop
dec
out
nop
add
mov
daa
inc
add
mov
add
add
add
lock
jp
jle
dec
mov
add
or
xchg
add
lods
test
dec
cmp
fwait
je
sbb
in
xchg
xchg
mov
sbb
lret
lahf
loopne
mov
inc
add
test
iret
mov
jmp
adc
pop
cmp
add
cld
lods
shll
mov
push
in
push
mov
push
testl
xor
out
lcall
mov
test
mov
or
mov
mov
loop
mov
push
add
xchg
inc
or
fs
scas
pop
js
out
mov
insl
insl
fadd
and
dec
aas
sub
je
fimuls
cmpsb
out
pop
add
add
add
mov
popf
in
cld
sbb
xchg
lcall
fdiv
ja
add
fs
xor
data16
mov
aas
xor
stos
sub
add
adcl
sub
int3
cmpl
mov
add
sbb
clc
mov
in
inc
movsb
js
mov
into
mov
loopne
mov
int
dec
push
xor
mov
jle
add
sub
inc
sbb
sbb
add
pop
lods
and
mov
lret
in
into
push
add
mov
ret
jecxz
bound
mov
lcall
mov
mov
fisttpll
gs
mov
decl
xchg
jns
pop
loop
mov
cmp
stos
faddp
add
movsl
test
cmp
add
sbb
sbb
ljmp
add
add
add
add
push
test
push
mov
dec
mov
add
cmp
add
mov
dec
fsubs
cwtl
jecxz
sahf
loop
mov
jnp
mov
push
cmp
fdivs
inc
cmc
pop
jnp
xchg
push
add
or
mov
out
jns
adc
add
fcomps
mov
fs
or
mov
push
cltd
aam
cmp
fisttps
popa
sub
add
mov
lods
ficoms
push
and
mov
imul
into
add
push
mov
int3
test
add
add
fdivrs
aam
xor
loope
loop
mov
out
cmp
add
jne
cmp
loopne
mov
add
mov
rolb
mov
insl
test
pop
in
lds
sub
lret
mov
aaa
xchg
add
xchg
sti
std
dec
and
mov
sbb
imul
mov
pop
push
out
jg
popl
scas
sti
push
data16
add
add
imul
imul
add
outsl
or
add
mov
cmp
mov
inc
leave
lahf
mov
dec
adc
fildl
push
lret
enter
add
lahf
mov
add
cwtl
imul
jmp
fildll
or
push
iret
add
les
add
lods
or
nop
add
mov
and
mov
pop
stos
mov
in
loop
mov
sub
add
in
add
rolb
add
mov
insl
cld
repz
mov
lods
sti
xor
mov
add
mov
mov
dec
shll
add
xchg
shll
lret
mov
mov
adc
mov
add
mov
mov
insb
push
xchg
pushf
jb
mov
mov
cmp
or
jns
rolb
mov
movsl
imul
pusha
add
adc
fbstp
add
nop
add
in
adc
mov
sub
inc
int
rolb
mov
add
mov
movsl
push
push
inc
pop
sbb
mov
dec
loop
mov
dec
lcall
adcl
fwait
mov
cmp
lret
adc
mov
je
mov
pop
pushf
cmp
mov
sbb
sti
sub
inc
sti
clc
push
addr16
fld
mov
psubq
mov
or
dec
ljmp
inc
mov
xchg
addb
push
gs
das
jae
test
jge
les
adc
or
and
mov
mov
mov
roll
jbe
in
std
cmp
add
mov
mov
mov
sub
mov
mov
mov
add
and
imul
cmp
fsubrl
lods
mov
and
mov
or
loop
mov
jne
jbe
cmp
pop
pushf
gs
mov
mov
ficoms
xchg
add
sub
mov
mov
cmpsl
sbb
or
rolb
mov
push
pop
pop
sti
sbb
out
pop
and
mov
stos
in
jg
sub
mov
arpl
rcll
xor
dec
xor
mov
xor
push
cmpsb
lahf
add
add
fucomp
cmpsl
loope
add
mov
push
add
imul
mov
add
mov
cld
add
mov
add
je
adc
mov
out
dec
fwait
xor
mov
int
lods
out
add
mov
mov
packsswb
mov
icebp
addb
push
add
mov
add
add
xor
imul
out
add
adc
ljmp
mov
shll
mov
scas
dec
in
add
xchg
add
mov
mov
adc
add
xlat
xor
mov
xor
mov
xor
mov
add
cld
push
cs
add
test
lret
push
lret
jl
add
in
inc
adc
dec
seto
mov
ds
add
push
push
xor
mov
sti
mov
cmp
pop
fsubr
je
popf
jo
mov
fists
xchg
je
add
mov
jmp
cmp
cld
mov
int3
es
jns
fcomi
inc
nop
add
gs
mov
mov
mov
add
push
mov
bound
mov
push
shrl
dec
xchg
xor
mov
add
sub
mov
mov
add
inc
inc
enter
int
cmp
enter
cmpsl
fbstp
leave
cmc
hlt
adc
mov
mov
add
mov
into
rolb
mov
mov
aas
movsb
adc
testb
jo
mov
loope
lock
je
add
imul
sbb
jnp
enter
add
add
daa
xor
mov
mov
outsl
cwtl
and
mov
mov
mov
add
mov
cltd
pop
pop
mov
hlt
inc
jge
fsubs
mov
xor
mov
xchg
mov
lods
das
jle
fidivrs
mov
lock
adc
mov
add
out
jle
daa
icebp
insb
call
mov
push
stos
std
sbb
fcomip
jo
mov
mov
add
sbb
add
rcll
add
push
shl
pushf
cmp
addr16
push
xchg
inc
mov
lcall
dec
push
mov
in
jl
cmc
call
mov
mov
pop
push
jns
and
add
lods
mov
js
ljmp
add
xchg
int3
sbb
movsb
fmull
leave
imul
mov
mov
xchg
mov
mov
enter
test
ljmp
add
pop
addl
mov
mov
add
lret
js
mov
mov
aam
pop
out
add
mov
leave
mov
lret
mov
and
mov
mov
add
and
mov
aas
lret
js
add
sbb
adc
mov
adc
mov
cmp
call
sbb
sahf
lds
mov
add
cmp
dec
loopne
mov
inc
mov
push
arpl
xor
mov
out
inc
jmp
leave
mov
sti
adc
mov
jecxz
rolb
mov
pushf
shl
mov
das
jle
scas
dec
cwtl
and
or
add
add
pop
mov
cmp
cmpsl
clc
or
int
fistpl
add
mov
and
mov
xor
mov
jbe
pop
cmp
add
pushf
pop
adc
divb
dec
imulb
jns
xor
add
mov
add
mov
jno
imul
ja
xor
mov
add
mov
rolb
mov
in
add
push
xor
mov
xor
outsl
lea
xchg
sbb
jnp
ret
and
add
or
lret
pop
cltd
xor
mov
add
xchg
jg
mov
push
pop
popl
add
popf
fldl
push
pop
sub
pushf
sarl
add
sbb
dec
mov
mov
dec
cmpsl
inc
addr16
push
fadds
mov
das
stos
xchg
mov
mov
and
mov
add
xchg
in
add
loopne
mov
std
mov
lcall
loop
mov
mov
mov
stos
hlt
push
mov
addr16
pop
inc
shl
add
mov
jge
jmp
popa
push
fsubs
pop
in
and
push
lods
push
inc
add
add
mov
add
pop
sub
cltd
jb
mov
sbb
mov
movsl
scas
add
imul
sbb
pop
inc
add
icebp
jle
fwait
aas
xorl
filds
pop
push
jae
in
nop
add
and
popf
fldz
fimuls
add
dec
ds
add
mov
push
xor
mov
lods
cmpsl
or
add
sbb
sub
lret
int
sbb
inc
add
sbb
inc
ds
pop
iret
or
aam
clc
out
jns
roll
sub
fdivl
mov
mov
out
iret
push
add
mulb
add
pop
inc
das
loope
xchg
lock
mov
inc
inc
add
jbe
add
out
dec
out
jge
jnp
das
imul
pop
push
jbe
adc
add
mov
lcall
cmp
les
push
add
daa
pop
shll
add
test
mov
pop
jg
xchg
sbb
out
outsb
movsb
xor
dec
adc
mov
add
loopne
mov
cmpsb
push
popf
test
add
mov
fsts
mov
mov
jnp
or
out
xor
push
push
add
xchg
sub
sahf
dec
jnp
pop
xchg
stc
arpl
dec
sub
or
cltd
frstor
push
push
and
pop
test
ss
and
in
addb
fcomps
add
pop
cmp
add
fstpt
shll
sbb
stos
ret
lock
lcall
mov
das
rcrl
add
int
push
and
jo
mov
out
aas
push
and
add
inc
xchg
adc
mov
jns
adc
mov
add
cs
jmp
pusha
add
popa
and
mov
and
xlat
lahf
mov
pop
push
test
mov
mov
fsts
push
push
xchg
push
or
mov
movsb
out
mov
push
jnp
jnp
cmp
mov
scas
jnp
inc
mov
repnz
push
test
rcrl
add
repnz
mov
mov
push
xchg
sahf
pop
arpl
or
cmp
fildl
hlt
nop
add
cmp
lds
jno
test
dec
popf
je
sub
mov
mov
aas
push
xchg
jo
mov
push
xchg
mov
lea
out
andl
mov
cmp
add
mov
movsb
dec
lcall
push
push
frstor
fidivs
add
add
mov
add
sbb
push
add
mov
cltd
enter
clc
mov
cmp
rolb
mov
pop
mov
sbb
add
lds
sub
mov
jbe
and
mov
cmp
sbb
addr16
add
mov
add
jg
sub
cwtl
mov
add
mov
jl
xchg
fmull
imul
nop
add
fldl
pop
jl
and
std
js
inc
add
xchg
add
ret
out
inc
loop
mov
ret
xor
movsb
jo
mov
es
insl
pop
sub
hlt
ja
push
push
push
add
imull
enter
inc
add
divb
pop
out
sbb
pop
add
sub
test
mov
xor
pop
popa
cltd
xchg
sub
cmp
cs
insl
push
cs
add
fxch
jmp
loopne
mov
xor
cld
das
xchg
mov
aam
shll
mov
add
mov
mov
adc
mov
jmp
mov
mov
daa
add
repnz
inc
addr16
or
sub
rorl
lahf
mov
not
ret
addb
mov
or
and
mov
das
movsl
int3
fwait
adc
test
mov
enter
rolb
mov
add
fnstenv
adc
mov
cmp
add
cltd
cmp
and
add
out
add
jl
addb
push
mov
out
pop
imul
mov
lret
arpl
addb
inc
test
sub
cmp
adcl
out
popf
push
aam
push
adc
mov
mov
add
mov
add
add
mov
lds
add
xchg
add
mov
mov
push
add
mov
add
push
add
add
jl
jnp
mov
jb
mov
addb
cmp
add
mov
cmp
mov
add
xchg
add
mov
add
dec
sbb
cmp
inc
pop
add
cmovae
mov
outsb
sbb
in
pop
mov
xchg
ds
lret
dec
adc
repz
and
mov
add
gs
mov
loope
into
popf
cmp
xlat
mov
arpl
aam
sub
xchg
fwait
dec
cmp
fnstenv
aas
mov
rcll
fstp
pop
lcall
adc
mov
xchg
in
add
cli
test
inc
lcall
lods
push
add
hlt
imul
mov
rolb
pop
and
mov
cmp
add
mov
or
add
mov
std
lcall
add
stos
aam
xchg
xchg
mov
arpl
add
pop
aaa
stc
xor
mov
lret
mov
mov
and
mov
mov
mov
cmp
mov
in
addb
movsb
sahf
xchg
jae
dec
xchg
sbb
aas
inc
xchg
or
dec
loop
mov
leave
cmp
add
add
xor
mov
scas
push
scas
mov
pop
dec
inc
add
aaa
outsl
bound
mov
scas
pop
xor
jg
scas
mov
add
lds
pop
lds
sub
test
insb
inc
add
ficompl
add
clc
mov
mov
add
addb
inc
gs
pusha
add
loop
mov
pop
or
or
push
ret
add
mov
aas
jmp
call
or
add
add
mov
je
mov
push
add
inc
xor
mov
adc
lock
sub
or
adc
and
cs
add
cld
push
and
repz
enter
inc
inc
repnz
add
decb
daa
sub
add
inc
into
pop
fcoms
stc
cmpsl
jo
mov
cmp
loope
xor
sub
popa
adc
add
push
push
add
fadd
add
xchg
mov
mov
add
pop
addb
jecxz
push
jno
push
mov
cmc
popa
aad
xchg
push
jmp
push
nop
add
add
cmpsb
jecxz,pt
sub
ljmp
out
add
mov
mov
jmp
add
jo
mov
out
cmpl
cli
lahf
movd
xchg
pop
imul
or
iret
pop
mov
mov
fwait
ds
mov
add
push
imul
mov
add
icebp
sbb
and
mov
scas
test
adc
add
lods
xlat
cwtl
in
or
mov
inc
add
add
jmp
roll
add
repnz
je
add
cmp
add
add
nop
add
jo
mov
push
roll
mov
out
lods
pushf
fwait
jae
fiaddl
add
or
cmpsl
lret
push
and
mov
add
call
mov
dec
mov
lret
push
mov
cmp
mov
mov
mov
and
add
push
add
outsl
bound
mov
push
xor
fwait
push
pop
jle
call
mov
addb
icebp
add
mov
jecxz
jnp
xchg
xchg
addr16
bound
mov
sbb
mov
xchg
add
scas
mov
mov
mov
add
fwait
arpl
or
mov
nop
add
mov
add
add
mov
add
sbb
lfs
or
pop
pop
cmpsl
stc
cwtl
ja
inc
mov
push
cmp
mov
mov
das
in
add
daa
inc
test
pop
add
aad
aaa
addb
xchg
jecxz
scas
add
adc
jno
mov
imul
std
or
pop
cmp
or
stc
mov
add
push
push
sbb
insb
imul
mov
dec
sbb
mov
mov
stos
xchg
add
push
add
inc
add
std
mov
mov
fsubl
xor
mov
dec
push
fildl
les
sbb
addb
or
mov
mov
add
push
hlt
mov
mov
pop
pop
mov
mov
in
fsubrs
addb
into
adc
mov
xchg
lcall
scas
mov
je
add
nop
add
add
mov
daa
mov
or
les
xchg
je
or
sub
fcomi
sub
or
add
add
mov
pop
popf
ret
pop
or
pop
rolb
mov
add
add
lea
out
imul
xor
mov
mov
mov
push
lret
mov
add
mov
jle
inc
js
cmp
add
mov
daa
inc
add
xchg
inc
mov
cli
ja
sbb
pop
push
mov
mov
cmp
push
sbb
mov
jne
gs
add
addb
jg
xchg
xor
mov
sub
xchg
sub
mov
jge
push
add
and
mov
add
push
jb
mov
dec
fs
adc
repnz
xchg
push
je
adc
mov
cmpl
mov
test
push
jno
add
mov
jo
mov
cltd
mov
lock
stc
mov
inc
add
and
lret
mov
cmp
mov
mov
mov
mov
add
add
ret
shll
add
add
dec
mov
mov
push
mov
mov
sub
add
lahf
push
jmp
mov
shl
iret
mov
mov
sub
int3
push
add
add
mov
add
sahf
popa
push
cmp
sub
cmp
sbb
aad
stos
hlt
push
add
mov
mov
int
lret
in
dec
scas
ljmp
jg
xchg
cmpsl
cltd
js
notl
jecxz
xchg
mov
dec
imulb
inc
mov
jo
mov
outsb
jno
sbb
test
lock
sub
pop
enter
cwtl
test
int
enter
int3
incl
cmpsl
comiss
push
dec
and
mov
loopne
mov
mov
andl
lds
lods
mov
xchg
add
add
cmc
in
xchg
cmpsb
rolb
mov
add
dec
adc
mov
std
pop
pop
xchg
mov
cmp
int
gs
aas
mov
outsb
inc
add
mov
sub
mov
in
pusha
add
lods
jl
push
mov
andl
lds
add
mov
test
rep
test
xor
aam
sub
mov
mov
add
sbb
loop
mov
pop
lcall
mov
bound
mov
jmp
stos
pop
mov
mov
mov
mov
dec
push
push
add
clc
lret
cmc
pusha
add
or
faddl
pop
add
cmp
out
ljmp
mov
add
lods
xlat
in
jmp
or
add
mov
cmp
lret
adc
sbb
out
mov
fmuls
insl
arpl
fwait
cmp
add
add
pop
out
lret
lods
clc
mov
mov
mov
xor
mov
add
xor
add
xor
mov
cmpsb
cmp
data16
mov
addb
pop
es
add
testl
aaa
out
xor
cwtl
push
cli
movsb
adc
addb
xor
mov
add
jns
add
out
add
pop
jb
mov
test
jns
add
stc
inc
jg
add
mov
out
pop
fadd
mov
add
add
add
leave
xor
fucom
xor
cmp
add
add
enter
mov
add
subl
icebp
mov
mov
mov
add
outsb
pop
out
popa
pop
mov
fnstcw
jmp
push
or
rolb
mov
fwait
jno
adc
mov
and
mov
sub
cltd
in
push
pop
pop
test
mov
jge
cwtl
rorl
mov
fistpll
es
mov
lea
add
faddl
add
sbb
mov
xchg
add
fs
or
push
clc
nop
xlat
cwtl
mov
nop
add
add
clc
adc
cmp
cmp
insl
test
nop
add
adc
fnstcw
leave
push
add
mov
push
mov
inc
pop
push
add
lds
rolb
mov
or
mov
mov
mov
add
xchg
test
ret
ja
outsb
pusha
add
lods
test
mov
add
add
jl
push
jmp
pop
cmpsl
sub
xchg
inc
and
add
add
jo
mov
popf
rcl
rolb
mov
jmp
cwtl
ret
clc
adc
mov
jnp
cmp
jno
add
das
out
or
add
jae
lea
sub
cmpsl
icebp
adc
mov
addb
stos
mov
pop
fisttpl
iret
cmpsb
mov
pop
add
mov
fidivl
and
cmpsb
or
jl
fisttpll
jns
adcl
mov
mov
dec
das
nop
add
sahf
pop
mov
pop
lret
xor
mov
mov
inc
mov
pop
jge
pop
mov
cs
popf
push
outsl
push
pop
push
add
lods
inc
or
sub
negl
mov
add
push
push
add
aaa
test
outsb
mov
add
repz
mov
dec
push
add
lret
jmp
mov
cltd
xchg
add
add
nop
add
add
jbe
push
inc
jb
mov
mov
jp
add
pop
rolb
mov
in
popa
lret
xchg
mov
jo
mov
dec
out
add
in
daa
movsl
add
mov
dec
scas
mov
add
lods
lods
xchg
pop
sti
imul
jmp
cmp
ss
out
add
add
fs
hlt
dec
gs
dec
lahf
inc
out
or
lcall
add
outsl
cmp
add
dec
popa
mov
sbb
and
or
add
pusha
add
adc
ss
sub
xor
mov
cmpsl
push
pop
stc
test
fisubrl
popa
sub
movsb
jno
adc
test
mov
sbb
add
push
fdivrl
add
ror
adc
mov
movsb
xor
push
and
mov
imul
ds
and
mov
lods
add
test
je
add
mov
inc
je
outsb
sub
add
popa
pop
and
mov
fisttps
lret
inc
outsl
decl
mov
push
inc
mov
out
inc
adc
sbb
arpl
push
mov
jb
mov
add
jae
gs
add
add
add
daa
popf
dec
push
aaa
xchg
jmp
add
add
adc
imull
repnz
aam
add
add
add
mov
fidivrl
or
cmp
outsl
xchg
stc
mov
rcrl
push
xchg
stos
and
mov
mov
mov
add
adc
mov
add
lret
outsb
loopne
mov
add
xchg
add
pop
pop
movb
mov
mov
sub
add
in
ds
mulb
idivl
adcl
scas
mov
adc
jae
push
xor
data16
cmpl
add
mov
mov
inc
add
iret
pop
jecxz
out
out
loope
pop
and
faddl
sbb
mov
ret
lods
mov
xor
jae
jmp
xor
fwait
out
add
mov
test
pop
ficompl
scas
xor
jne
push
push
add
lahf
ds
xchg
add
lods
pop
ret
stc
jl
add
fs
add
push
add
pop
xchg
subl
inc
out
or
ss
loop
mov
inc
push
into
adc
xchg
int3
jge
cmp
add
mov
push
js
popa
push
adc
mov
mov
daa
push
mov
sbb
push
popf
aam
enter
add
addr16
add
clc
jp
mov
sbb
fwait
aas
in
sub
ljmp
pop
aaa
mov
fisubl
mov
and
in
inc
add
mov
cmp
add
cmpsb
push
add
mov
push
ficompl
push
out
std
outsb
inc
adcl
pop
mov
add
mov
cs
ja
mov
jno
lock
cmp
add
mov
add
pop
cmpsb
sub
outsl
adc
mov
adc
mov
gs
add
push
mov
mov
add
mov
leave
sbb
insl
adc
out
rolb
mov
leave
xor
inc
cltd
pushf
sub
loop
mov
imul
movlps
jo
mov
add
fwait
and
mov
test
in
push
dec
xor
mov
push
movsb
mov
sti
sub
in
stc
and
sub
inc
add
xchg
adc
mov
cli
inc
add
mov
out
add
arpl
and
dec
mov
or
add
out
push
lock
jbe
push
jo
mov
xchg
or
push
enter
xor
aam
push
mov
add
sarl
xor
push
add
push
addb
sub
add
add
clc
std
rolb
mov
xor
sbb
sbb
adc
add
add
add
popa
dec
daa
mov
sti
ja
sbb
outsb
imul
jge
lock
std
cltd
in
outsb
lods
ss
loope
adc
mov
sbb
pop
dec
mov
mov
or
rolb
mov
or
pop
xchg
cltd
inc
test
sub
mov
les
jp
pop
xchg
add
out
jp
lds
int
fsts
xchg
add
inc
add
lahf
mov
mov
lea
call
mov
push
repnz
mov
pushf
outsb
inc
insl
or
pusha
add
xchg
sbb
ljmp
add
aas
call
sbb
jge
mov
mov
mov
add
repnz
rorl
push
add
mov
mov
sub
adc
mov
add
in
xor
mov
inc
adc
test
add
mov
push
or
push
sub
add
fdivrs
sahf
inc
in
xchg
mov
mov
add
add
mov
push
pop
jp
push
stos
mov
div
jae
jo
mov
add
mov
or
lea
repnz
add
inc
mov
dec
loopne
mov
and
mov
mov
add
add
add
jg
cs
lahf
jbe
and
mov
add
into
pop
and
test
addb
sti
mov
mov
fwait
notb
and
add
mov
sub
notl
add
jbe
and
daa
jg
xor
mov
ret
das
sub
idivl
add
xchg
pop
mov
fwait
jns
daa
xor
or
popf
dec
jl
sub
inc
add
daa
jae
clc
lcall
add
sbb
outsb
pop
or
sti
std
out
ljmp
mov
rcr
pushf
movsl
mov
or
adc
adc
lcall
and
mov
xor
mov
mov
sub
enter
xchg
sbb
sbb
call
sbb
stos
jb
mov
push
addb
pop
dec
mov
arpl
add
mov
inc
add
lret
jae
pop
daa
dec
jecxz
adc
stc
int3
test
cli
cmpsl
pop
adc
mov
mov
mov
xchg
mov
xchg
add
inc
add
lds
jb
mov
enter
mov
mov
stc
adc
mov
aam
add
xchg
add
sbb
xchg
mov
lds
out
ret
ucomiss
add
mov
push
sbb
jne
int3
and
add
cmp
je
and
mov
sbb
in
insl
sbb
dec
pop
and
mov
stos
mov
loopne
mov
mov
add
out
inc
sub
fidivrl
mov
mov
les
mov
loop
mov
adc
mov
pusha
add
repnz
dec
pop
fmul
dec
fists
test
popa
outsl
fsubrl
xor
inc
std
inc
pop
sub
xchg
sahf
jae
sub
mov
push
xchg
mov
outsb
js
mov
prefetch
xchg
add
add
adc
mov
push
test
pop
shll
mov
in
add
jo
mov
dec
insl
out
scas
sbb
mov
xchg
add
pop
inc
add
loope
iret
mov
and
mov
add
out
int3
in
pop
push
int
inc
test
icebp
sub
add
bound
mov
add
add
mov
dec
push
mov
in
sub
fisubl
adc
mov
inc
add
add
jb
mov
pushl
enter
ja
mov
ret
hlt
lods
lods
loop
mov
sub
xor
mov
mov
cmp
iret
leave
lods
mov
popf
jno
fisubrs
pop
dec
xchg
stos
nop
add
mov
mov
and
cld
shll
add
mov
mov
add
xchg
ja
add
adc
mov
jge
negl
and
out
mov
dec
sbb
dec
insl
push
aam
mov
test
add
ret
pop
imul
enter
test
add
stos
push
add
mov
mov
pushf
adc
add
fidivs
mov
rolb
out
push
cmpsb
addl
sbb
jnp
xchg
test
mov
into
mov
mov
add
not
push
lods
inc
xor
xor
add
mov
paddb
shll
mov
add
call
mov
mov
adc
add
sub
aam
add
mov
imul
leave
outsb
clc
sbb
lods
inc
add
jle
add
movl
jne
xchg
mov
mov
sahf
int
lods
fs
mov
push
xchg
data16
xor
adc
mov
movsl
repnz
push
add
jecxz
nop
add
push
sub
mov
test
mov
cmp
fisubl
mov
dec
sbb
or
jae,pt
pop
and
mov
add
lds
pop
push
jnp
cld
sbb
and
mov
push
cmp
fsubrl
adc
xor
lock
mov
add
or
mov
mov
mov
add
xchg
test
nop
add
ds
or
add
xchg
add
mov
inc
xchg
lret
mov
add
movsb
push
push
mov
movsl
jge
negl
push
or
icebp
mov
mov
repnz
mov
mov
std
out
lock
mov
xor
mov
scas
test
mov
mov
or
add
scas
test
mov
lods
pop
mov
fwait
pop
jb
mov
add
mov
mov
mov
mov
inc
gs
mov
loopne
mov
into
pop
xor
out
or
add
add
repz
mov
stc
nop
add
fwait
pop
pop
dec
sbb
insl
das
test
jnp
jno
add
mov
loop
mov
mov
mov
lods
pop
nop
add
add
xchg
pop
lods
stc
fwait
inc
cmp
add
lds
cwtl
xchg
pop
je
push
mov
and
roll
sti
data16
xchg
popa
fdivl
mov
adc
mov
xchg
jmp
add
icebp
cmp
rol
pop
dec
stc
inc
jb
mov
sub
cmp
insb
out
stos
out
add
push
inc
test
lods
xchg
add
enter
xchg
mov
add
add
mov
ljmp
lods
pop
mov
mov
or
cmp
and
mov
jmp
add
mov
cmp
xchg
test
pusha
add
pusha
add
push
and
add
inc
push
mov
add
cmp
push
daa
pop
xchg
pop
and
mov
add
sahf
dec
dec
push
add
mov
inc
lret
cld
roll
add
rolb
insl
test
add
add
addb
icebp
addb
push
data16
xor
mov
imul
jbe
or
and
add
aad
cmp
mov
in
lds
fdivl
jmp
push
mov
lds
or
sub
xchg
xor
mov
xchg
jmp
mov
mov
lret
mov
movsl
mov
lea
add
lods
pop
jmp
add
loop,pt
mov
fisubl
les
push
mov
inc
cli
aas
and
mov
hlt
cmp
mov
add
mov
mov
push
add
jl
and
add
mov
cmp
mov
jecxz
add
push
add
add
mov
add
cwtl
dec
jae
xor
mov
push
sub
pop
xchg
inc
add
inc
sbb
negl
dec
loopne
mov
fcmovu
sbb
enter
add
xor
pop
fs
jg
outsb
mov
add
mov
rolb
mov
xchg
xor
or
add
inc
aad
push
and
das
gs
sbb
mov
pop
mov
xor
mov
addr16
sbb
mov
mov
xor
mov
inc
mov
adc
or
lcall
dec
xchg
out
inc
daa
cmc
mov
mov
data16
adc
mov
nop
add
mov
sub
sbb
testl
fnsaves
add
mov
mov
mov
std
mov
push
add
add
call
shl
arpl
inc
add
mov
sub
inc
enter
fisubrl
xor
mov
push
mov
test
cmpsl
or
test
cmpsl
lock
mov
and
dec
pusha
add
mov
clc
xor
mov
int
repz
add
inc
mov
push
push
jo
mov
imul
imul
insl
js
jmp
out
das
jae
ds
icebp
mov
enter
and
mov
ljmp
add
imul
imul
and
or
mov
ret
mov
cwtl
daa
add
xchg
cmp
jns
outsl
ret
push
mov
je
inc
ljmp
mov
in
add
sub
and
rolb
jmp
das
int
in
loope
scas
mov
add
and
add
imul
push
inc
add
popa
dec
jne,pn
add
mov
mov
mov
add
repz
mov
pop
sbb
mov
xchg
movsb
mov
jns
ljmp
mov
inc
add
and
and
mov
daa
je
mul
add
cmp
out
mov
xchg
pop
and
pop
cwtl
outsb
xor
and
or
dec
fcmovne
push
mov
aam
pop
adc
add
loope
mov
cmp
add
mov
cmp
add
mov
add
mov
pop
or
int
mov
aam
sar
rorl
clc
ljmp
imul
ret
mov
cmp
inc
in
dec
nop
add
and
mov
mov
ss
jmp
or
std
insb
pop
mov
fisubrl
ret
fld
jl
mov
mov
les
jg
xchg
aad
add
gs
sarl
mov
inc
aas
rolb
mov
stc
cltd
or
or
enter
lods
int3
das
sub
out
in
enter
and
mov
frstor
xchg
lret
daa
cmpsb
push
jge
pushf
add
stc
add
mov
pop
add
pop
sbb
add
mov
adc
rcl
pushf
out
add
add
in
and
add
negl
adc
out
mov
dec
sub
inc
fcoml
negb
nop
add
and
add
jne
outsl
xor
fstpl
icebp
adc
mov
mov
or
lock
sub
ret
adc
outsb
fadd
aam
into
sub
outsl
dec
jb
mov
mov
xchg
cmc
popa
cltd
mov
fiaddl
mov
ljmp
test
sbb
out
out
and
mov
imul
add
add
push
int
push
outsl
pop
dec
mov
mov
cmp
out
in
inc
aaa
call
cmc
imul
push
int
push
addb
jp
sti
mov
add
dec
push
mov
data16
nop
add
add
jmp
cmp
pop
inc
add
mov
jecxz
jb
mov
aad
cmp
adc
mov
xor
add
jne
add
mov
xor
add
add
jne
jle
add
lret
jp
shl
add
loop
mov
mov
adc
mov
add
aaa
inc
mov
adc
ljmp
mov
or
xchg
jecxz
int
mov
mov
notl
int3
dec
fisttpll
or
sar
lret
movsb
lods
ret
inc
jp
pop
push
inc
ror
and
mov
mov
cmpsb
in
adc
sti
pop
lds
pop
int
add
or
call
arpl
jg
add
inc
add
repnz
jae
nop
add
mov
add
push
mov
xchg
ret
add
add
push
jnp
dec
push
clc
repnz
jae
add
lret
add
add
mov
cmpl
push
mov
xchg
ret
add
mov
mov
xor
add
xchg
ffreep
clc
repnz
jae
cmp
add
sub
repnz
jae
icebp
add
leave
sbb
out
xchg
sqrtps
repnz
jae
add
sub
pop
testb
inc
xchg
add
clc
repnz
jae
movsb
push
insl
mov
clc
repnz
jae
add
out
add
jo
mov
mov
mov
add
fwait
cld
nop
jmp
push
add
pop
fwait
xchg
clc
repnz
jae
pop
add
add
add
push
mov
xchg
ret
sub
mov
add
dec
push
clc
repnz
jae
mov
add
out
add
and
clc
repnz
jae
pop
dec
mov
add
cmp
mov
xchg
ret
add
cs
fwait
cld
nop
jmp
out
pop
add
dec
stos
push
pop
add
clc
repnz
jae
add
push
add
push
clc
repnz
jae
movsb
mov
adc
icebp
add
add
mov
mov
push
push
mov
xchg
ret
add
nop
cmc
nop
add
rolb
mov
add
push
add
add
add
test
inc
add
add
add
pop
push
mov
xchg
ret
mov
cmp
jle
pop
clc
repnz
jae
loop
into
add
add
inc
push
mov
xchg
ret
mov
add
add
iret
mov
clc
repnz
jae
push
rep
clc
repnz
jae
sub
in
push
add
add
cld
add
push
mov
xchg
ret
add
add
mov
push
mov
xchg
ret
add
cs
add
or
repnz
jae
add
nop
add
repnz
jae
nop
add
or
cld
nop
jmp
movsb
jno
iret
add
push
push
pop
sbb
nop
jae
pop
xchg
loop
add
add
mov
push
adc
add
push
add
mov
add
aas
add
add
add
and
add
mov
dec
add
mov
xchg
ret
pop
add
mov
or
mov
xchg
ret
add
and
mov
xchg
ret
fwait
inc
pusha
add
sub
add
and
mov
call
fwait
cld
nop
jmp
mov
add
cmc
loope
push
clc
repnz
jae
lods
add
add
xor
clc
repnz
jae
pop
add
add
add
jne
fwait
cld
nop
jmp
add
iret
rcrl
movsb
clc
repnz
jae
push
sub
int
add
push
push
mov
xchg
ret
add
pop
add
sbb
orl
add
add
add
sub
nop
stos
lods
mov
clc
repnz
jae
out
add
out
add
rorl
clc
repnz
jae
mov
adc
arpl
sar
repnz
jae
out
out
jno
mov
pop
sbb
sar
nop
jae
sub
loop
nop
add
add
shll
imul
inc
adc
repnz
jae
mov
add
sbb
cs
jge
cmp
xchg
adc
nop
jae
add
push
fimuls
jae
add
xchg
movsb
nop
add
clc
repnz
jae
add
add
add
mov
clc
repnz
jae
add
add
leave
mov
clc
repnz
jae
sub
mov
push
sub
push
add
add
add
stos
in
add
movsb
clc
repnz
jae
pop
add
xchg
xchg
out
sbb
in
mov
dec
adc
jnp
inc
add
push
sub
inc
call
mov
add
pop
ds
push
mov
xchg
ret
add
xchg
and
fwait
cld
nop
jmp
mov
nop
add
add
push
push
mov
xchg
ret
ja
movsb
sub
nop
push
int
inc
loopne
mov
xchg
ret
nop
loop
out
nop
sub
repnz
jae
add
add
adc
int
test
add
clc
repnz
jae
mov
mov
pop
add
mov
mov
inc
mov
repnz
jae
mov
push
iret
add
leave
add
xchg
popa
add
mov
xchg
ret
add
add
dec
or
repnz
jae
cmc
add
add
nop
pop
cs
clc
repnz
jae
inc
pop
add
cs
add
mov
jmp
add
mov
fwait
sub
clc
repnz
jae
lods
dec
add
sbb
cld
nop
jmp
jb
add
add
xchg
add
test
and
add
repnz
jae
add
add
test
adc
add
repnz
jae
add
pop
popf
mov
fwait
cld
nop
jmp
iret
mov
add
add
clc
repnz
jae
pop
add
fwait
nop
jnp
adc
adc
add
add
adc
int
inc
add
nop
jmp
cs
add
push
xchg
add
add
push
clc
repnz
jae
xchg
add
aas
rol
push
mov
xchg
ret
add
push
mov
push
push
mov
xchg
ret
pop
add
push
add
sub
std
call
and
add
add
adc
scas
dec
clc
repnz
jae
pop
add
sub
mov
push
mov
xchg
ret
leave
add
xchg
sub
add
push
clc
repnz
jae
add
nop
jae
es
out
add
mov
xchg
ret
add
add
xchg
adc
add
repnz
jae
mov
add
addb
mov
push
mov
xchg
ret
stos
into
lret
lods
push
add
aad
and
push
mov
xchg
ret
add
add
push
mov
xchg
ret
cmp
sub
add
repnz
jae
add
sub
add
xchg
jb,pn
out
add
nop
jae
and
stc
jno
add
mov
jne
clc
repnz
jae
sbbb
shr
clc
repnz
jae
add
mov
mov
xchg
ret
add
add
imulb
jae
add
add
add
clc
repnz
jae
xchg
cmp
lea
in
inc
add
add
add
add
mov
inc
add
add
push
add
xor
add
fwait
cld
nop
jmp
add
lods
mov
sar
repnz
jae
movsb
add
add
add
push
fwait
cld
nop
jmp
add
in
add
add
push
mov
enter
jae
add
cs
cmc
jb
add
sar
nop
jae
cs
mov
add
push
leave
pop
push
mov
xchg
ret
stos
add
and
dec
mov
fwait
cld
nop
jmp
add
add
imul
xchg
or
add
into
add
add
pop
add
fwait
cld
nop
jmp
add
add
mov
ja
mov
and
mov
push
mov
sbb
flds
add
ja
pop
fnstsw
inc
in
add
outsl
and
add
add
add
add
add
out
add
nop
jae
add
in
cmp
cmp
add
add
add
push
add
add
or
xchg
clc
repnz
jae
out
lret
nop
add
add
iret
inc
das
add
clc
repnz
jae
ja
add
add
mov
pop
fwait
cld
nop
jmp
stos
or
add
pop
mov
add
clc
repnz
jae
add
add
add
std
clc
repnz
jae
add
add
jae
mov
add
test
clc
repnz
jae
xchg
add
into
add
mov
fs
mov
clc
repnz
jae
pop
add
mov
add
push
add
nop
jae
add
add
add
sub
repnz
jae
into
mov
add
add
repnz
jae
sub
dec
iret
mov
add
push
clc
repnz
jae
add
add
or
clc
repnz
jae
cmp
add
dec
mov
push
mov
xchg
ret
or
add
insb
mov
clc
repnz
jae
or
add
mov
sub
fwait
cld
nop
jmp
iret
add
repnz
add
clc
repnz
jae
pop
int
cwtl
mov
mov
push
mov
xchg
ret
adc
add
nop
inc
sbb
nop
jmp
into
add
add
mov
cwtl
add
clc
repnz
jae
dec
add
add
jno
jmp
nop
jae
add
sub
xor
mov
sbb
repnz
jae
add
add
add
mov
mov
push
mov
xchg
ret
es
lret
scas
push
clc
repnz
jae
icebp
nop
add
into
mov
je
mov
clc
repnz
jae
add
add
inc
xlat
inc
add
pop
inc
add
add
cld
or
add
repnz
jae
add
add
test
fwait
cld
nop
jmp
add
add
loop
pop
add
clc
repnz
jae
add
add
nop
jae
pop
mov
add
out
lret
xchg
clc
repnz
jae
push
push
call
and
out
sub
push
add
add
clc
repnz
jae
into
out
icebp
add
mov
clc
repnz
jae
add
jb
loop
mov
pop
xor
fwait
cld
nop
jmp
add
add
push
sub
mov
push
clc
repnz
jae
add
sbb
cmp
repnz
jae
add
mov
jne
clc
repnz
jae
inc
add
mov
clc
repnz
jae
pop
nop
add
dec
push
fwait
cld
nop
jmp
cwtl
add
out
mov
add
add
clc
repnz
jae
in
add
sbb
push
mov
xchg
ret
sub
cmp
and
repnz
jae
push
out
add
push
data16
xor
add
fwait
cld
nop
jmp
add
cs
iret
add
clc
repnz
jae
add
add
and
dec
add
clc
repnz
jae
and
add
mov
clc
repnz
jae
cs
add
push
add
push
mov
xchg
ret
stos
add
icebp
pop
cmpl
fwait
cld
nop
jmp
add
sub
subl
add
sub
add
add
jb
in
jne
clc
repnz
jae
add
pop
clc
repnz
jae
add
add
add
add
fwait
cld
nop
jmp
dec
mov
add
jns
jne
fwait
cld
nop
jmp
add
add
fwait
add
push
mov
pop
add
out
cld
add
jmp
add
jb
dec
sub
push
mov
xchg
ret
pop
add
push
mov
and
xor
jae
jno
push
add
add
jmp
add
add
add
add
mov
repnz
jae
movsb
icebp
nop
push
add
mov
xchg
ret
add
jb
mov
jecxz
je
clc
repnz
jae
sub
push
in
decl
clc
repnz
jae
add
hlt
xchg
push
repnz
jae
in
sub
pusha
add
pop
and
fwait
cld
nop
jmp
add
add
stos
add
rolb
mov
test
jmp
ljmp
push
add
pop
add
clc
repnz
jae
push
mov
stos
push
pushl
clc
repnz
jae
add
push
clc
repnz
jae
leave
fwait
add
nop
add
rcrb
cmc
lcall
and
push
nop
arpl
pusha
push
mov
xchg
ret
add
mov
mov
xchg
ret
addb
sbb
add
mov
push
mov
xchg
ret
add
add
out
add
mov
fs
add
popa
fs
repnz
jae
add
nop
pushf
push
clc
repnz
jae
add
pop
pop
add
leave
sub
pop
add
add
push
imul
movsl
fiadds
xchg
ret
int
add
ljmp
loop
add
add
add
inc
out
lea
push
mov
xchg
ret
add
add
jp
repnz
cld
nop
jmp
push
add
add
inc
dec
lea
fwait
cld
nop
jmp
add
inc
add
push
push
mov
xchg
ret
add
add
add
add
repnz
jae
xchg
and
add
push
or
mov
xchg
ret
iret
push
nop
nop
add
inc
and
mov
mov
call
nop
jae
add
add
jne
fwait
cld
nop
jmp
mov
xchg
push
or
clc
repnz
jae
add
jb
fwait
cld
nop
jmp
add
add
jne
clc
repnz
jae
add
add
add
push
enter
nop
jmp
mov
add
adc
add
push
mov
nop
jmp
ja
add
add
push
push
mov
xchg
ret
add
movsb
add
xchg
pop
jne
clc
repnz
jae
add
add
add
repnz
jae
mov
into
icebp
inc
popa
dec
div
fwait
cld
nop
jmp
add
add
sub
mov
popa
clc
repnz
jae
mov
add
ret
ret
fadds
inc
cmp
mov
xchg
ret
add
add
push
mov
mov
xchg
ret
pusha
add
add
popa
movsb
aam
xor
jmp
incl
add
add
mov
and
fstl
in
and
add
add
add
add
cmp
push
push
mov
xchg
ret
mov
add
add
xor
mov
fwait
cld
nop
jmp
add
rcr
and
fwait
cld
nop
jmp
add
add
add
mov
mov
mov
push
mov
xchg
ret
inc
pop
in
xchg
add
mov
ret
add
add
jb
sbb
add
add
add
jmp
movsb
add
pusha
add
mov
clc
repnz
jae
dec
add
sub
clc
repnz
jae
push
push
cmp
fwait
cld
nop
jmp
add
add
add
clc
repnz
jae
add
add
sub
or
test
adc
add
repnz
jae
push
add
jecxz
scas
mov
push
mov
xchg
ret
pop
stos
add
enter
jae
sub
add
add
mov
clc
repnz
jae
add
add
jae
into
add
add
movsb
clc
repnz
jae
mov
add
es
loop
mov
clc
repnz
jae
pusha
xchg
add
mov
xchg
ret
pop
nop
add
push
inc
stc
shr
clc
repnz
jae
add
arpl
xor
clc
repnz
jae
add
add
mov
push
mov
xchg
ret
add
out
add
xor
cmpw
fwait
cld
nop
jmp
add
stos
mov
call
clc
repnz
jae
add
add
mov
add
fwait
cld
nop
jmp
into
add
add
xchg
add
cmc
inc
add
add
dec
in
xorb
nop
jae
add
adc
mov
sbb
loop
clc
repnz
jae
add
xchg
dec
mov
clc
repnz
jae
dec
add
or
inc
add
add
clc
repnz
jae
jno
loop
push
push
clc
repnz
jae
add
cmc
sub
add
mov
add
add
add
mov
add
adcb
add
clc
repnz
jae
adc
xchg
cld
clc
repnz
jae
out
xor
jae
inc
add
add
mov
add
imull
and
fwait
cld
nop
jmp
into
pop
add
in
add
pop
mov
clc
repnz
jae
add
add
add
les
repnz
jae
mov
add
add
xor
cmp
jbe
fwait
cld
nop
jmp
add
into
add
addr16
iret
mov
clc
repnz
jae
sub
mov
add
jne
jg
andl
jae
into
add
xchg
jmp
into
push
push
add
xchg
faddl
xchg
ret
add
jno
nop
push
rclb
ljmp
cmc
out
pop
mov
mov
add
clc
repnz
jae
out
stos
push
mov
cmc
push
pushf
div
clc
repnz
jae
and
or
mov
clc
repnz
jae
in
ja
add
nop
jae
sub
nop
fimuls
mov
adc
repnz
jae
pop
add
push
add
jmp
push
add
mov
clc
repnz
jae
mov
mov
add
dec
push
clc
repnz
jae
add
sub
adc
lcall
out
call
cld
push
clc
repnz
jae
mov
add
lahf
push
push
mov
xchg
ret
sub
out
add
mov
fwait
cld
nop
jmp
pusha
jb
mov
loop
push
mov
xchg
ret
nop
and
je
fwait
cld
nop
jmp
add
add
add
nop
jae
nop
add
mov
iret
mov
imul
fwait
cld
nop
jmp
nop
add
mov
pop
add
dec
ret
clc
repnz
jae
xchg
movsb
add
push
jle
add
out
incl
icebp
dec
out
lods
add
add
clc
repnz
jae
mov
add
mov
nop
jmp
add
nop
add
out
push
clc
repnz
jae
add
leave
mov
add
clc
repnz
jae
add
xchg
addb
outsl
push
push
mov
xchg
ret
in
in
add
fwait
subb
mov
clc
repnz
jae
add
or
leave
add
es
call
fwait
cld
nop
jmp
add
pop
push
inc
sbb
push
fiadds
xchg
ret
push
iret
and
clc
repnz
jae
add
push
add
add
add
cld
nop
jmp
add
sbb
add
or
mov
xchg
ret
xchg
stos
add
add
dec
cmp
repnz
jae
add
add
xchg
lea
fwait
cld
nop
jmp
add
lret
add
sbb
cld
nop
jmp
mov
add
adc
clc
repnz
jae
add
inc
add
push
mov
xchg
ret
add
mov
shrl
clc
repnz
jae
ja
add
sbb
repnz
jae
add
mov
xor
cld
inc
add
add
add
outsb
add
clc
repnz
jae
cmc
mov
add
or
mov
clc
repnz
jae
add
or
loop
repnz
push
mov
xchg
ret
ja
push
add
jp
mov
stc
add
add
pop
add
dec
add
clc
repnz
jae
ja
mov
xchg
xchg
cmpsb
call
jae
add
into
add
add
clc
repnz
jae
add
cs
mov
mov
add
mov
add
xor
clc
repnz
jae
add
push
and
fwait
cld
nop
jmp
cmp
loop
mov
fwait
cld
nop
jmp
add
clc
repnz
jae
stos
in
add
add
xchg
mov
push
clc
repnz
jae
in
add
xchg
loop
sbb
insb
inc
jb
clc
repnz
jae
movsb
adc
add
mov
xchg
ret
sub
inc
add
fwait
out
frstor
repnz
jae
jno
add
sbb
dec
push
mov
xchg
ret
sub
xchg
iret
add
inc
add
nop
jae
add
add
push
incl
stc
xchg
add
add
into
add
mov
fcoms
mov
xchg
ret
add
add
out
jno
or
mov
clc
repnz
jae
add
push
xlat
dec
pop
clc
repnz
jae
add
add
add
mov
clc
repnz
jae
add
jo
mov
add
push
mov
xchg
ret
stc
add
mov
sbb
xlat
inc
add
dec
nop
inc
add
leave
xor
clc
repnz
jae
mov
cmp
clc
repnz
jae
add
into
add
mov
push
mov
xchg
ret
add
pusha
add
call
fwait
cld
nop
jmp
add
add
mov
popf
mov
clc
repnz
jae
into
in
add
insl
add
clc
repnz
jae
add
add
pop
cs
and
push
mov
xchg
ret
add
jb
add
pop
clc
repnz
jae
stos
add
pop
dec
lods
clc
repnz
jae
add
iret
add
or
sub
add
or
jmp
incl
add
add
mov
add
mov
clc
repnz
jae
xchg
push
add
repz
jmp
add
add
add
mov
add
add
add
push
mov
xchg
ret
add
mov
push
and
call
clc
repnz
jae
add
leave
pusha
pop
movswl
clc
repnz
jae
cwtl
add
pop
push
mov
xchg
ret
jb
into
jno
pusha
mov
cmpl
fwait
cld
nop
jmp
add
repz
xchg
xor
pop
push
mov
xchg
ret
sub
pop
add
clc
repnz
jae
pop
push
lcall
jae
ja
pop
add
add
add
push
mov
xchg
ret
add
add
jmp
jae
jno
add
and
clc
repnz
jae
nop
dec
loop
mov
scas
subl
push
mov
xchg
ret
push
out
add
mov
jae
sub
ja
add
jno
add
mov
add
je
add
repnz
jae
and
testl
fwait
cld
nop
jmp
add
pop
mov
rclb
clc
inc
add
sbb
repz
or
adc
add
ja
jmp
push
mov
xchg
ret
sub
into
ja
add
movzwl
fwait
cld
nop
jmp
mov
add
add
imul
addl
add
push
pop
add
mov
clc
repnz
jae
add
xor
mov
mov
clc
repnz
jae
add
cmp
push
mov
xchg
ret
add
add
into
add
add
clc
repnz
jae
loop
add
leave
push
mov
mov
xchg
ret
add
jb
add
mov
call
clc
repnz
jae
pop
mov
mov
inc
fwait
cld
nop
jmp
sub
add
push
clc
repnz
jae
add
sub
repnz
jae
add
loop
mov
pop
mov
push
mov
xchg
ret
sub
out
add
inc
add
mov
clc
repnz
jae
add
add
push
lahf
push
fwait
cld
nop
jmp
mov
add
ret
clc
repnz
jae
add
mov
pop
jno
mov
add
mov
xchg
ret
add
call
clc
repnz
jae
xchg
and
je
sub
repnz
xchg
ret
add
cmc
lret
mov
mov
mov
adcl
add
add
repnz
jae
add
add
add
and
clc
repnz
jae
add
push
mov
fwait
cld
nop
jmp
add
nop
push
pushl
clc
repnz
jae
add
add
add
andl
inc
add
push
jne
clc
repnz
jae
jb
add
ljmp
add
add
add
sar
repnz
jae
add
add
push
clc
repnz
jae
loop
add
lea
fwait
cld
nop
jmp
push
sub
dec
push
clc
repnz
jae
add
add
popl
clc
repnz
jae
xchg
add
jb
pop
xchg
repz
add
add
iret
mov
or
jg
inc
add
movsb
mov
xchg
movsb
mov
mov
cmp
ret
push
test
mov
push
mov
xchg
ret
inc
add
add
shr
clc
repnz
jae
sbb
mov
out
add
mov
clc
repnz
jae
push
repnz
clc
repnz
jae
add
dec
clc
repnz
jae
adc
add
add
scas
mov
clc
repnz
jae
push
add
mov
push
mov
xchg
ret
add
bound
mov
inc
add
add
cs
push
mov
xchg
ret
add
enter
jmp
or
mov
add
add
js
idiv
repnz
jae
sub
add
lret
add
clc
repnz
jae
add
add
add
clc
repnz
jae
and
inc
add
mov
clc
repnz
jae
leave
cs
push
mov
mov
jae
add
add
mov
add
in
push
or
clc
repnz
jae
int
add
xor
mov
ja
clc
repnz
jae
pop
stos
push
nop
jae
push
push
nop
add
mov
add
add
insl
loop
clc
repnz
jae
out
nop
add
js
popa
add
mov
xchg
ret
add
add
sbb
sar
nop
jae
icebp
push
sub
icebp
out
ja
mov
clc
repnz
jae
mov
add
cmpsb
add
clc
repnz
jae
xchg
iret
add
data16
jns
sar
nop
jae
mov
pop
inc
jno
add
fwait
cld
nop
jmp
lods
into
add
sub
clc
repnz
jae
add
dec
add
test
or
add
repnz
jae
sub
add
adc
inc
add
into
mov
or
add
cmp
jae
repnz
jae
lods
add
in
mov
clc
repnz
jae
mov
add
into
add
scas
push
push
mov
xchg
ret
pusha
cmp
add
addb
es
inc
mov
nop
jmp
add
add
jae
cld
mov
clc
repnz
jae
add
pop
ja
fwait
mov
jae
leave
add
out
mov
mov
mov
push
mov
xchg
ret
cmc
lods
jno
cs
mov
xchg
ret
add
subb
es
mov
clc
repnz
jae
nop
inc
les
addb
add
aas
xor
jnp
inc
pop
inc
add
push
push
mov
xchg
ret
lret
ja
add
stos
leave
sub
nop
jae
push
cmc
jns
jae
clc
repnz
jae
pop
add
add
add
clc
repnz
jae
add
add
jmp
nop
jmp
add
push
sub
repnz
jae
add
cwtl
push
lods
push
lret
mov
clc
repnz
jae
add
jbe
add
clc
repnz
jae
iret
sbb
xchg
into
adc
nop
jae
xchg
mov
push
mov
fwait
cld
nop
jmp
mov
sbb
sbbb
sub
push
mov
xchg
ret
pusha
sub
fwait
cld
nop
jmp
pusha
add
add
jo
fwait
cld
nop
jmp
sub
loop
pop
add
adc
repnz
jae
mov
mov
sub
dec
movzwl
clc
repnz
jae
add
pop
fwait
cld
nop
jmp
add
add
lods
add
stos
sub
test
stc
clc
repnz
jae
add
dec
push
clc
repnz
jae
add
and
clc
repnz
jae
add
out
add
es
add
mov
xbegin
scas
in
dec
mov
add
add
or
add
repnz
jae
mov
cwtl
ja
sub
clc
repnz
jae
add
cmp
mov
test
fwait
cld
nop
jmp
movsb
add
xchg
ja
je
clc
repnz
jae
nop
add
mov
xchg
add
add
jmp
pop
movsl
add
add
push
inc
add
add
add
add
clc
repnz
jae
add
add
sub
add
nop
jae
push
add
add
jmp
adc
out
inc
add
mov
add
add
in
push
push
mov
xchg
ret
jb
nop
mov
add
inc
fwait
add
clc
repnz
jae
add
add
pop
push
mov
xchg
ret
add
sbb
nop
jae
add
add
push
mov
add
jmp
add
and
leave
mov
clc
repnz
jae
add
add
add
or
clc
fwait
cld
nop
jmp
pop
add
lods
add
add
push
push
mov
xchg
ret
xchg
add
add
ret
aad
pusha
add
clc
repnz
jae
stc
add
jmp
cmc
es
iret
sub
mov
jb
add
fwait
cld
nop
jmp
mov
add
pusha
and
mov
add
add
clc
repnz
jae
jb
add
nop
jmp
and
add
add
inc
sti
test
fwait
cld
nop
jmp
jb
pusha
add
add
add
mov
cmp
cld
nop
jmp
add
add
dec
push
fwait
cld
nop
jmp
add
add
add
add
xor
xchg
inc
add
sbb
cwtl
cs
mov
nop
jmp
or
add
dec
adc
mov
mov
push
mov
xchg
ret
add
add
add
repnz
jae
xchg
dec
add
push
mov
xchg
ret
nop
cs
mov
clc
repnz
jae
cmp
dec
xchg
sub
clc
repnz
jae
mov
add
pop
test
popa
add
mov
xchg
ret
pop
movsb
add
out
jmp
mov
add
add
add
add
es
clc
repnz
jae
add
mov
push
push
mov
xchg
ret
jb
mov
add
cld
nop
jmp
add
nop
add
sub
push
mov
xchg
ret
or
add
add
adc
jmp
clc
repnz
jae
add
xchg
jnp
movb
add
clc
repnz
jae
add
mov
sub
dec
incb
xchg
ret
sub
mov
xchg
ret
mov
add
dec
add
jmp
add
add
add
fwait
cld
nop
jmp
add
add
push
mov
lret
addb
call
add
clc
repnz
jae
lods
add
add
clc
repnz
jae
push
add
and
clc
repnz
jae
push
cmc
jb
mov
mov
mov
clc
repnz
jae
push
add
add
cwtl
push
clc
repnz
jae
push
and
push
mov
xchg
ret
movsb
nop
add
push
add
repnz
jae
add
add
mov
clc
repnz
jae
add
pop
push
mov
xchg
ret
into
pop
fwait
pusha
dec
push
xchg
lea
popf
clc
repnz
jae
iret
out
add
clc
repnz
jae
push
add
repnz
jae
cs
or
add
ja
add
clc
repnz
jae
add
lods
push
imull
nop
jae
subb
leave
push
ret
fwait
cld
nop
jmp
push
push
mov
mov
mov
clc
repnz
jae
add
or
sti
fwait
cld
nop
jmp
jno
add
add
or
add
repnz
jae
out
lret
push
sbb
add
cli
shl
clc
repnz
jae
leave
mov
leave
add
in
mov
clc
repnz
jae
or
dec
add
clc
repnz
jae
add
sub
sub
push
scas
pop
push
mov
xchg
ret
mov
add
xor
fwait
cld
nop
jmp
add
fsubp
incl
add
add
add
add
mov
clc
repnz
jae
ja
out
add
stos
mov
push
mov
xchg
ret
add
xchg
xchg
add
dec
push
clc
repnz
jae
add
push
adc
add
sub
faddl
xchg
ret
mov
add
mov
test
loop
lcall
cli
ljmp
mov
mov
xchg
ret
add
xchg
add
mov
mov
lea
fwait
cld
nop
jmp
add
add
mov
mov
xchg
ret
pop
add
add
pop
clc
repnz
jae
add
and
or
mov
xchg
ret
cs
pushf
call
fwait
cld
nop
jmp
add
or
repnz
jae
add
add
cmp
test
add
repnz
jae
mov
jb
int3
push
mov
xchg
movsb
pop
or
mov
add
sub
mov
jb
mov
add
fwait
cld
nop
jmp
add
push
or
repnz
jae
add
add
into
test
fadds
xchg
ret
add
sub
add
add
mov
in
out
jmp
incl
add
pop
push
mov
fwait
cld
nop
jmp
add
push
imul
nop
jae
add
mov
ror
push
mov
xchg
ret
push
push
add
mov
mov
xchg
icebp
sbb
lock
add
inc
and
repnz
jae
pop
mov
add
movb
mov
xchg
ret
jb
add
icebp
fistpll
lret
nop
jmp
add
nop
add
fwait
cld
nop
jmp
add
mov
add
outsb
push
push
mov
xchg
ret
cs
add
add
mov
testb
cmp
ret
add
leave
add
icebp
and
mov
inc
push
adc
clc
repnz
jae
mov
inc
mov
add
or
inc
add
xchg
and
addb
mov
cld
nop
jmp
add
add
add
dec
cmp
fwait
cld
nop
jmp
mov
int
fwait
xorl
clc
repnz
jae
add
outsb
mov
clc
repnz
jae
mov
add
clc
repnz
jae
add
and
nop
jae
in
lods
stc
or
test
repnz
jae
push
add
into
call
push
mov
xchg
ret
add
add
cmc
mov
cld
nop
jmp
add
mov
add
pop
add
or
inc
add
cwtl
cmp
lods
push
mov
xchg
ret
mov
pusha
add
push
mov
repnz
jae
push
add
add
push
mov
xchg
ret
sub
pop
adc
iret
mov
add
add
cld
nop
jmp
dec
add
jno,pn
add
add
and
cld
nop
jmp
mov
add
add
sub
add
add
repnz
jae
add
inc
sub
add
add
add
lods
add
jle
cmp
clc
repnz
jae
add
cs
xlat
cmpsl
xchg
push
mov
roll
jae
sbb
leave
add
aad
add
mov
push
mov
xchg
ret
sub
add
xchg
repnz
jae
add
push
mov
pop
and
push
mov
xchg
ret
or
add
repnz
jae
add
lret
stos
add
jb
mov
dec
add
mov
xchg
ret
push
cs
and
mov
jmp
add
nop
sub
mov
popf
mov
jmp
add
ja
jb
add
add
xchg
sub
jae
add
add
adc
cmp
clc
repnz
jae
out
es
mov
clc
repnz
jae
into
dec
add
adc
repnz
jae
add
mov
clc
repnz
jae
add
xchg
pop
sub
sahf
loop
add
hlt
add
lahf
enter
aaa
add
mov
clc
repnz
jae
add
add
scas
xor
clc
repnz
jae
add
pop
mov
sbb
push
mov
xchg
ret
fwait
add
add
out
leave
jne
push
mov
mov
inc
jnp
add
test
mov
add
repnz
jae
add
mov
test
clc
repnz
jae
add
iret
xchg
shrl
cld
nop
jmp
mov
add
leave
icebp
xchg
fstl
repnz
jae
into
sub
nop
inc
pushf
push
clc
repnz
jae
icebp
xchg
xchg
cwtl
nop
add
dec
mov
clc
repnz
jae
add
and
add
call
fwait
cld
nop
jmp
in
add
or
out
jno
add
pop
in
add
inc
filds
jmp
pop
mov
pop
add
xchg
pusha
or
clc
repnz
jae
add
add
push
leave
add
or
fs
insb
clc
repnz
jae
add
push
mov
xchg
ret
add
cs
add
jno
add
fwait
cld
nop
jmp
add
in
or
loop
mov
xchg
ret
in
dec
stc
pop
add
nop
jae
and
push
sub
jno
mov
clc
repnz
jae
add
add
imul
fwait
cld
nop
jmp
add
add
mov
jecxz
xor
fwait
cld
nop
jmp
add
add
cs
pop
add
repnz
jae
adc
je
je
clc
repnz
jae
add
add
rorl
and
repnz
jae
add
cmp
dec
mov
fwait
cld
nop
jmp
push
add
jmp
jp
fwait
cld
nop
jmp
int
add
add
push
mov
or
add
add
dec
sbb
add
add
ljmp
mov
sub
rorl
into
push
lcall
push
fsub
add
cld
test
add
mov
xor
mov
bound
mov
fiaddl
add
mov
push
imul
clc
leave
pushf
pop
sub
add
cmp
xor
shll
pushf
shrl
add
mov
dec
pop
jne
stos
push
add
ss
push
arpl
push
pop
push
stos
sbb
mov
outsb
cli
and
mov
pop
popa
lea
xchg
lds
fidivl
sub
xor
push
xchg
pop
pop
js
mov
or
add
les
push
mov
add
nop
add
jno
in
es
xchg
add
push
movsb
sbb
mov
lock
dec
xchg
mov
xchg
rolb
mov
xchg
add
push
add
add
add
mov
mov
repz
jge
add
addb
gs
in
dec
fwait
pusha
add
lcall
dec
nop
add
js
add
add
mov
xchg
scas
inc
stos
add
les
add
mov
movsb
arpl
je
add
loop
mov
cmp
in
dec
and
mov
mov
add
mov
xor
add
push
clc
bound
mov
push
add
add
add
loopne
mov
cmp
mov
mov
add
jl
ret
add
mov
xchg
add
sti
sbb
add
xchg
cmp
daa
mov
push
push
add
xchg
cmp
xor
pop
stos
popf
jmp
add
cmp
xchg
out
and
mov
mov
mov
jnp
push
fildll
mov
and
push
add
jo
mov
jge
add
add
push
fcmove
jbe
sbb
pop
add
cld
dec
leave
and
mov
add
add
add
mov
push
inc
jns
mov
mov
mov
mov
lock
jl
pop
push
add
jbe
outsl
dec
pop
jno
add
lahf
mov
dec
call
arpl
enter
adc
add
dec
insl
sub
add
sbbl
xor
sti
pop
xor
mov
add
push
popf
movsb
adc
pop
call
clc
jle
cmp
add
cmp
xor
mov
dec
and
mov
dec
insb
in
test
add
jno
out
das
and
mov
fdivrl
mov
sti
dec
dec
mov
lret
stc
rolb
mov
out
outsl
imul
fcompl
mov
outsl
mov
mov
add
ret
out
push
add
push
add
xchg
add
mov
cld
int
aas
dec
repnz
and
mov
add
mov
aaa
inc
dec
inc
xchg
imul
mov
mov
sahf
in
aam
in
into
cmp
out
mov
cmp
add
cmp
cltd
rolb
mov
push
or
mov
adc
push
std
pushf
cmp
pop
sahf
push
pop
test
or
xchg
xor
lock
rolb
mov
jb
mov
lods
leave
testb
add
add
inc
add
mov
mov
mov
add
insb
mov
pop
adcl
lcall
cli
cmp
adc
dec
push
add
aad
jnp
add
mov
jnp
pop
shrl
mov
dec
loopne
mov
mov
loopne
mov
ss
hlt
xor
mov
xchg
xchg
imul
cs
scas
push
pop
stc
mov
out
aad
flds
cltd
cmc
incl
add
xchg
add
mov
stos
cmp
and
xor
xor
in
adc
pop
arpl
jnp
add
mov
mov
es
cmp
xor
adc
xor
jmp
fnstenv
mov
mov
out
js
sub
jns
add
mov
addb
mov
sub
shrl
add
mov
mov
mov
sbb
inc
add
mov
imul
cmpsb
aam
mov
addb
and
add
add
bound
mov
inc
lahf
insb
push
bound
mov
outsb
aaa
push
or
lock
aas
and
fwait
gs
stc
loopne
mov
test
mov
das
add
mov
hlt
addb
call
in
lds
fistps
mov
movsl
in
stc
sub
xor
mov
lret
jl
jmp
nop
add
add
or
and
add
xlat
jle
cmp
std
jg
jecxz
add
mov
mov
cmp
add
orl
mov
mov
sub
ljmp
mov
and
scas
aas
and
outsl
jo
mov
bound
mov
adc
call
sahf
bsr
mov
push
dec
mov
out
in
mov
jnp
add
icebp
add
mov
xchg
or
repz
sub
test
mov
xor
mov
cltd
test
add
add
add
xor
add
inc
push
filds
subl
rolb
mov
lret
stos
fistl
sbb
add
insb
je
mov
inc
cmc
stos
iret
cs
mov
add
jge
jecxz
push
sbb
inc
push
in
push
aas
pop
xlat
cltd
jp
lea
mov
mov
mov
mov
icebp
fistl
add
aaa
cmp
imul
mov
pop
sub
cld
cmp
ret
add
mov
add
or
dec
out
pop
sti
clc
jg
pushl
aam
mov
pushf
jns
add
mov
repnz
xchg
add
jmp
mov
loope
aas
sbb
add
lock
mov
add
adc
imul
and
mov
fcompl
push
add
pop
mov
mov
add
mov
jecxz
arpl
add
in
mov
ja
cmp
repnz
jmp
test
add
ljmp
sbb
mov
add
jnp
mov
arpl
in
aam
mov
loope
in
mov
add
sub
jle
cmpsb
xor
pushf
cltd
dec
shll
mov
test
lcall
add
pusha
add
fs
add
insb
ret
fldt
sub
fistps
xchg
push
add
add
add
jns
push
adcl
add
push
mov
add
xor
stc
mov
mov
repz
dec
push
adc
mov
insl
std
mov
scas
mov
add
and
or
add
sarl
nop
add
aas
push
loope
inc
inc
out
adc
mov
and
inc
enter
sub
and
mov
sbb
add
loope
iret
xchg
sbb
mov
nop
add
daa
hlt
notl
add
mov
insl
mov
add
mov
cmp
add
jbe
cmpsl
lcall
leave
sub
mov
mov
loop
mov
test
xor
add
add
les
dec
push
arpl
and
cltd
xchg
and
and
mov
cli
inc
xchg
and
sub
or
pop
adc
mov
xchg
lods
or
popf
loop
mov
add
mov
mull
add
outsb
aaa
mov
inc
add
add
lock
fsubs
add
test
push
scas
add
jmp
jnp
mov
xor
cmc
out
mov
hlt
arpl
pop
mov
jnp
addb
mov
ret
lret
clc
mov
add
mov
cltd
sub
je
movsb
clc
in
mov
incw
xchg
iret
mov
out
scas
push
add
mov
rcr
test
stc
sub
add
mov
sbb
add
les
mov
aam
scas
cwtl
mov
mov
add
add
lret
insb
pop
sub
mov
and
mov
js
orl
mov
fcmovnu
inc
cli
outsb
cmpsl
mov
mov
mov
imul
pop
adc
pop
inc
add
add
mov
pop
cmpsb
iret
jp
aam
adc
jmp
je
jmp
stc
dec
push
add
and
mov
or
pop
inc
add
add
xor
scas
pop
pop
add
adc
movsl
push
pop
inc
add
jo
mov
mov
mov
insb
jge
add
lods
adc
mov
fmull
arpl
add
mov
mov
and
xchg
add
add
and
lds
add
loopne
mov
xlat
adc
add
mov
mov
pop
xlat
lret
dec
xchg
add
mov
pop
push
aas
je
and
adc
mov
add
fld
xchg
jne
add
jg
popf
adc
mov
jnp
test
adc
cmpsl
rolb
mov
adc
mov
mov
pop
outsl
test
imul
repnz
push
add
aaa
in
add
push
add
stc
addb
in
in
xchg
jp
sahf
dec
fwait
stos
add
iret
repnz
mov
dec
mov
add
add
mov
data16
sbbl
lods
and
movsb
fisttpll
mov
sbb
mov
cwtl
les
testl
add
ds
adcl
mov
xor
cmpsl
xor
mov
mov
adc
jecxz
push
mov
enter
xor
stos
push
push
add
push
jb
mov
add
jle
adc
mov
lahf
xor
mov
add
add
add
mov
pop
push
loope
out
xchg
imul
sub
mov
lds
das
xchg
hlt
imul
xchg
loope
or
cmp
pop
mov
insb
xchg
xchg
pop
mov
inc
add
add
adc
iret
in
push
ljmp
and
sahf
popf
test
inc
add
mov
add
das
aas
jns
add
mov
cmpsl
daa
mov
mov
mov
push
pop
imul
adc
mov
cmp
pop
pop
sub
inc
fwait
and
mov
xchg
or
nop
add
loope
inc
xchg
jmp
sbb
inc
sti
mov
cltd
add
mov
sti
sbb
add
add
xchg
inc
lahf
movlps
mov
or
dec
dec
aad
push
jne
insl
jg
sti
icebp
xchg
les
add
mov
add
dec
push
imul
xorl
jmp
adc
mov
jmp
inc
inc
jno
add
test
fcomps
les
and
mov
add
ret
jge
mov
inc
stos
mov
out
add
sbb
notb
add
out
inc
add
jmp
into
add
mov
add
pop
inc
cmp
mov
xor
push
inc
mov
xor
mov
add
loopne
mov
sbb
scas
jle
pop
jmp
mov
mov
lret
mov
movsb
dec
sbb
sbb
addr16
jb
mov
das
sbb
jbe
out
mov
mov
inc
xchg
imul
arpl
mov
add
lahf
jne
adc
inc
mov
add
aas
push
and
mov
arpl
hlt
sub
add
cmp
dec
push
push
addb
sbb
add
std
je
out
ja
lds
addr16
cmc
cmpsb
imul
xchg
add
or
dec
xchg
add
xchg
pop
jno
movq
int
in
and
daa
jo
mov
je
jno
mov
mov
xchg
or
mov
iret
sbbl
xchg
addb
add
and
add
add
mov
jbe
add
jge
in
add
mov
add
jmp
daa
pop
insl
lds
add
push
add
sub
cmp
pop
sbb
xchg
mov
cltd
dec
ja
fstpl
pop
push
mov
js
push
push
add
xchg
aad
adc
or
rolb
mov
aas
pop
aam
enter
ja
rcrl
test
fidivs
add
push
scas
mov
mov
pusha
add
add
dec
xchg
dec
imul
or
push
ljmp
fcmovb
je
pop
jl
out
sbb
add
add
mov
jle
lahf
fdivrs
dec
bound
mov
movsb
cmpsb
xor
add
xchg
into
cmp
rolb
mov
sbb
sub
sahf
popf
nop
add
mov
sahf
mov
sahf
in
jne
psubusw
cmp
nop
add
mov
mov
pop
jmp
add
into
daa
or
hlt
insl
jmp
mov
aaa
or
pop
jbe
out
test
and
out
stos
jge
ss
jbe
into
jae
inc
xchg
sub
jb
mov
add
leave
ljmp
push
mov
cmp
mov
lcall
pop
sti
call
mov
aam
pop
push
jmp
mov
sbb
add
mov
cmp
mov
push
testl
rorl
data16
mov
jecxz
adc
cltd
jmp
ret
popf
cmc
cltd
outsl
xchg
scas
jnp
test
pop
lahf
out
xchg
dec
adc
mov
sahf
sbb
mov
add
add
add
inc
add
xor
sub
cmp
add
addl
rcll
add
mov
push
cmp
not
add
ffreep
add
pop
jp
in
cmp
push
dec
inc
mov
mov
ret
sbb
cltd
lea
pop
mov
into
xchg
pop
fnstsw
pop
rolb
mov
mov
mov
test
sbb
mov
sbbl
add
push
clc
cld
aas
sub
cmp
arpl
sbb
ljmp
mov
mov
add
cli
cld
popa
mov
push
cmp
add
fcoms
jmp
add
addb
imul
loopne
mov
dec
out
bound
mov
cmp
add
mov
popf
es
inc
add
mov
ret
lahf
out
sahf
mov
out
mov
mov
lret
jmp
mov
push
push
mov
mov
inc
add
sub
xchg
roll
add
mov
nop
add
mov
call
leave
sbb
cwtl
insb
xchg
add
std
add
mov
lret
push
scas
pusha
add
xor
dec
or
leave
sti
xchg
testb
mov
inc
or
lret
xlat
test
cwtl
pop
sbb
cmovbe
mov
push
pusha
add
add
bound
mov
popf
movsb
inc
inc
dec
fstpt
jne
aad
mov
jl
pop
inc
add
stos
cmp
bound
mov
aad
fldt
add
mov
cmp
int3
cltd
dec
repz
push
loope
or
mov
fisttpl
mov
mov
add
out
jnp
or
or
xlat
push
subl
push
jecxz
arpl
mov
mov
push
add
ja
aad
pop
mov
aaa
mov
addb
rorl
lock
and
mov
sbb
movsb
add
jo
mov
loop
mov
insb
cmp
repnz
cmp
add
es
mov
mov
ja
add
int3
daa
mull
cmp
repnz
sbb
pop
or
test
pop
sub
lods
inc
mov
insl
ret
mov
cwtl
iret
mov
or
das
lahf
and
mov
add
cmp
add
mov
out
out
push
punpckhwd
add
add
dec
sub
insb
hlt
jg
jecxz
cmpsb
mov
mov
les
add
sub
jecxz
inc
adc
add
pop
icebp
mov
and
mov
in
mov
mov
add
inc
mov
add
mov
add
imulb
mov
pop
addb
push
add
inc
into
gs
daa
fldt
sahf
pop
dec
pop
fldl
iret
rolb
mov
lret
rolb
arpl
xor
dec
xor
add
in
insl
popf
inc
push
sub
test
lret
cwtl
pop
lret
mov
sub
out
pop
cmp
add
daa
sub
dec
dec
mov
mov
mov
xchg
add
mov
cmc
mov
dec
add
mov
sarl
mov
jl
clc
add
mov
sub
hlt
imul
push
add
jp
push
mul
add
lods
adc
mov
nop
add
movsl
cmp
addb
xchg
and
imul
les
jo
mov
cmpsl
xor
addb
dec
sub
faddp
add
sub
push
lcall
add
mov
cmc
sahf
roll
mov
in
add
hlt
jo
mov
sub
or
aas
or
in
push
and
mov
pop
and
push
add
or
push
nop
add
pop
lea
mov
in
xor
add
mov
pushf
cli
lds
ljmp
fbld
je
or
fdivrl
in
xor
mov
shrl
xor
mov
jmp
call
pop
sbb
lods
cs
add
inc
insl
xor
je
jl
repz
pop
fxch
js
inc
ljmp
add
add
push
sbb
cmc
icebp
jecxz
jnp
lret
cwtl
addr16
cmp
add
mov
jne
xor
mov
jno
add
mov
dec
or
aam
inc
add
mov
and
adc
mov
insl
insl
push
jp
and
data16
aad
jmp
ret
das
mov
insl
pop
push
or
dec
and
add
xchg
sbb
add
dec
mov
mov
inc
add
mov
mov
std
cld
roll
es
fiaddl
mov
sbb
in
push
mov
inc
pop
lea
mov
push
add
or
imul
cmp
and
mov
stc
lahf
add
xlat
push
inc
rolb
dec
lcall
dec
mov
push
add
and
add
sbb
mov
sbb
cmp
adc
shl
mov
aaa
pop
pop
jecxz
add
repnz
cmp
jns
mov
or
jo
mov
mov
mov
mov
mov
add
mov
adc
pusha
add
cmp
loop
mov
add
add
mov
jge
fbstp
add
add
loope
out
test
jae
cmc
cmp
mov
testb
push
bound
mov
ret
movsb
xor
push
dec
test
data16
pop
and
jp
clc
mov
push
cmp
notl
push
hlt
fdiv
add
out
jmp
movsl
inc
sbb
push
in
mov
cmpsb
jmp
cmpsb
mov
mov
mov
mov
add
mov
popa
jb
mov
fsub
arpl
lods
fidivrs
in
bound
mov
add
adc
mov
in
stos
into
add
or
mov
mov
imulb
lea
jne
addb
cmp
fwait
push
xchg
add
mov
lret
jle
ja
inc
ret
push
xchg
std
lods
sub
xchg
add
push
nop
add
sar
sbb
add
rorl
aas
scas
mov
pop
lret
mov
xchg
imul
mov
dec
jge
add
ja
add
stos
jp
xchg
ret
cwtl
movsl
cmc
rolb
mov
addb
pop
push
mov
add
lea
mov
pop
dec
fildll
push
sub
mov
mov
inc
add
hlt
insl
pop
cmpsl
ds
add
in
add
rolb
es
mov
fisubrs
dec
cmc
in
ficoms
add
adc
jns
int
or
cmp
add
filds
hlt
mulb
lods
fistl
pop
xchg
mov
sbb
xchg
bound
mov
cmp
cld
cmp
int
fs
lcall
mov
sbb
sub
xchg
xchg
sbb
mov
call
scas
sti
xor
cld
daa
arpl
sub
dec
repnz
lock
and
push
xor
cwtl
or
lahf
xchg
or
lock
mov
insb
and
mov
xor
mov
sub
sbb
mov
add
push
gs
ret
xor
mov
cli
int
ja
and
lea
xlat
movsl
xor
xchg
movsw
les
stos
cwtl
sub
push
pop
mov
xchg
xchg
push
jp
xlat
sub
enter
add
xchg
arpl
mov
add
sbb
add
mov
mov
add
shll
mov
mov
mov
xchg
aad
add
pop
stos
push
scas
mov
inc
cmp
scas
std
or
lods
out
push
pop
pop
popa
clc
test
inc
shll
mov
imul
add
mov
inc
add
fs
out
sbb
or
jle
outsb
lock
lret
testl
push
in
scas
call
ret
sbb
sbbl
inc
das
sbb
add
aam
cwtl
mov
insl
inc
outsl
cs
lods
cmpsb
sub
popw
pop
sub
in
push
adc
cmp
jg
mov
sti
int3
movsb
sbb
out
mov
mov
xor
ja
popf
outsl
xchg
and
scas
and
mov
lds
add
mov
jo
mov
nop
add
add
mov
inc
inc
cltd
fimuls
mov
cmp
add
xchg
mov
mov
jl
mov
dec
adc
shll
je
aam
sub
iret
fstl
fidivrl
lret
jmp
mov
mov
adc
mov
cmp
mov
mov
add
out
cmp
jnp
ja
mov
jb
mov
pusha
add
test
jecxz
mov
mov
out
jns
xor
mov
test
mov
xchg
mov
push
imul
mov
push
int3
bound
mov
js
lea
push
sbbl
mov
mov
out
jp
and
mov
outsb
mov
add
sub
add
xchg
in
lcall
testb
mov
mov
add
ret
imul
rolb
dec
mov
sahf
arpl
in
js
cli
mov
adc
out
les
mov
bt
add
add
xchg
in
decl
jecxz
xchg
add
push
and
mov
movsl
lret
test
sub
lret
sbb
repz
mov
pop
fidivrs
negl
push
jne
add
lods
data16
add
push
xor
mov
and
mov
jo
mov
fnstenv
mov
mov
add
push
push
test
mov
inc
mov
mov
nop
add
mov
es
movq
jns
imul
mov
jmp
add
out
inc
add
mov
nop
add
rcll
add
pop
movsb
and
sbb
mov
inc
fisubrs
cs
add
clc
cmp
pop
movsb
push
mov
in
mov
movsb
repz
lret
cmp
adc
enter
mov
addr16
xor
mov
mov
add
add
mov
lcall
ss
mov
mov
add
mov
scas
sub
sti
push
out
mov
jb
mov
mov
addb
cltd
aad
decb
fsubrs
pop
out
add
pop
or
add
mov
add
dec
cmp
mov
mov
push
mov
or
xor
mov
or
mov
ss
jae
dec
cmp
scas
repnz
and
xchg
lods
mulb
adc
sti
cmp
mov
mov
add
add
mov
scas
mov
mov
add
push
add
daa
scas
mov
mov
jno
es
and
mov
mov
add
jo
mov
cs
dec
sub
cmpsb
popa
movsb
jo
mov
add
dec
lods
fsubrl
fistps
push
add
push
add
pop
xor
push
scas
mov
mov
pop
xchg
pushf
arpl
in
cmp
ja
add
add
mov
cld
cwtl
mov
pop
inc
lock
add
addr16
addr16
mov
lahf
sbbl
mov
add
decb
rcll
mov
arpl
and
mov
or
add
ja
adc
mov
xor
mov
mov
xor
int
add
sub
mov
mov
mov
mov
rolb
pusha
add
mov
cmc
or
and
dec
pop
mov
fmull
fildl
add
add
std
rolb
mov
mov
add
push
add
data16
add
stc
or
push
add
in
xor
in
adc
mov
add
adc
pop
sbb
insl
push
mov
add
xchg
int
push
imul
pushf
lods
fcmovbe
push
dec
fistl
push
ds
cwtl
in
pop
or
mov
aas
push
add
mov
cmc
add
mov
jl
add
add
xor
mov
in
cs
add
loope
sub
lcall
stos
fcoml
mov
cmpsb
inc
repnz
enter
mov
mov
scas
or
dec
mov
xchg
cmpsb
lcall
xchg
add
mov
mov
jg
adc
dec
clc
insb
inc
add
movl
js
mov
mov
inc
push
enter
mov
pop
xlat
test
push
ja
in
in
xor
addb
lods
dec
insb
jne
lds
outsl
aas
cmp
push
xor
mov
mov
mov
scas
adc
out
fwait
sti
xor
shll
xchg
sbb
add
pop
in
mov
cmp
add
push
sub
xor
mov
or
mov
or
jb
mov
lock
add
mov
jb
mov
add
add
mov
jo
mov
sti
push
add
or
rolb
mov
add
push
add
sub
wbinvd
mov
push
mov
arpl
jmp
add
lock
imul
add
fidivl
std
add
mov
loop
mov
pop
in
inc
add
insl
xchg
jg
add
add
cmc
mov
mov
idiv
cmp
test
jo
mov
dec
loope
mov
mov
mov
sahf
bound
mov
xchg
dec
sbb
lret
nop
je
add
mov
push
lea
stos
adc
mov
lods
subl
add
mov
pop
and
mov
xor
mov
sbb
or
movsl
mov
mov
and
and
mov
cld
cltd
loopne
mov
add
mov
add
in
or
xor
mov
mov
stos
mov
dec
jnp
xor
cmp
add
outsb
aam
mov
std
add
push
sub
movsb
call
pop
adc
mov
cmc
push
aam
push
in
icebp
dec
clc
jo
mov
icebp
addb
lods
movsl
popa
int
push
cmp
stos
mov
add
xchg
mov
lea
mov
mov
fstpl
or
or
add
mov
stos
mov
fucomip
pop
mov
mov
add
mov
popf
and
mov
cmp
pop
sbb
fstpt
addr16
jb
mov
sbb
and
push
add
mov
add
adc
pushf
adc
mov
scas
cmp
or
jnp
and
pop
aaa
shll
jno
adc
clc
fstl
mov
cli
in
sbb
push
int3
xlat
sbb
xchg
add
cmp
sbb
mov
jbe
and
fmull
insl
dec
out
ja
inc
mov
mov
je
fisubl
shll
cmp
outsb
js
and
int3
jnp
push
mov
push
mov
das
sbb
lret
les
addb
bound
mov
add
jl
stos
popa
imul
add
xchg
rolb
inc
add
mov
mov
jne
pusha
add
xor
ret
fidivs
add
in
faddl
repz
cmp
repz
pop
arpl
mov
mov
ljmp
adc
sahf
mov
add
mov
das
aas
adc
or
icebp
xchg
push
test
ret
outsb
arpl
sbb
push
add
jl
add
pusha
add
cmp
xor
mov
leave
cmp
test
inc
add
mov
pop
dec
lock
add
mov
or
mov
add
add
and
mov
add
push
leave
test
mov
jl
fs
jo
mov
test
add
ret
fsts
cwtl
xor
loope
jnp
mov
int
imul
and
mov
mov
add
xchg
test
add
and
mov
mov
add
jb
mov
fs
mov
out
pop
into
mov
mov
xchg
aam
nop
add
inc
pop
add
add
add
hlt
fcomps
push
pop
lret
adc
inc
inc
add
mov
sub
jne
mov
mov
add
mov
leave
add
add
pushf
mov
inc
mov
add
and
mov
mov
lahf
faddp
add
push
mov
fldpi
xor
mov
cmp
out
add
dec
clc
std
jg
push
add
mov
das
js
in
rolb
jbe
xorl
ficoml
xlat
out
sbb
dec
adc
mov
add
jmp
sub
mov
dec
adc
mov
add
add
mov
imul
lods
or
arpl
jnp
add
or
push
inc
add
addb
cli
aas
pop
push
add
sbb
push
mov
insl
ss
dec
js
push
outsl
cmpsl
lret
pushw
mov
mov
add
mov
push
insb
repz
adc
mov
cmpsl
mov
mov
mov
std
dec
lock
mov
cltd
jne
sub
ret
loop
mov
jl
jg
adc
mov
pusha
add
add
mov
jne
mov
lcall
xlat
or
int3
aaa
push
repz
add
dec
sbb
fwait
mov
orl
pop
pop
lds
clc
sub
popf
adcl
dec
or
xor
mov
cmpsl
jne
mov
mov
sbb
aad
ja
fwait
pop
xor
rolb
fstpl
mov
add
scas
sbb
hlt
repnz
stos
mov
xor
mov
jo
mov
in
sbb
mov
lods
int
xchg
jg
out
cli
mov
and
mov
les
push
js
add
pop
scas
lret
pop
xchg
mov
add
adc
mov
fs
fwait
sbb
mov
sahf
ljmp
jle
les
mov
fwait
outsl
mov
mov
addb
sqrtps
jb
mov
add
into
stc
dec
pop
popf
stc
popa
mov
mov
mov
add
rolb
mov
xchg
xchg
add
pop
push
sub
stc
std
or
arpl
xchg
jmp
inc
add
mov
pop
add
mov
insb
xchg
mov
repnz
add
ss
mov
mov
ficoml
pop
pop
std
push
inc
loop
mov
pop
mov
insl
test
dec
push
insl
or
lahf
fstl
adc
testb
cmp
add
out
pop
out
and
outsl
sbb
aad
out
mov
jge
add
test
adc
les
pusha
add
pop
in
les
stos
push
stc
sbb
scas
or
popf
xor
mov
and
mov
push
pop
jp
pop
xchg
lods
ror
xchg
add
fistps
sbb
dec
ds
pop
mov
cmp
sbb
and
mov
or
stc
xchg
cmp
xchg
mov
lcall
cmpsl
mov
add
pop
cmp
push
add
mov
add
sahf
pop
push
pop
lods
in
aaa
push
cli
cmp
sbb
adc
jmp
into
loope
jo
mov
imul
faddl
icebp
out
add
add
in
add
jno
push
add
loop
mov
mov
sub
iret
dec
mov
mov
fwait
jno
aad
insl
lret
add
jle
add
mov
aam
scas
sbb
or
xchg
enter
sbb
lds
pushf
jle
int3
mov
mov
add
inc
pop
ffree
bound
mov
mov
mov
insl
pusha
add
add
add
fnsave
inc
test
enter
ljmp
ljmp
data16
addb
idiv
or
mov
clc
stc
cmc
arpl
aaa
test
add
test
cmc
iret
lahf
cld
popf
dec
inc
xchg
std
fsub
add
mov
cmpsl
es
fdivp
sub
jb
mov
add
bound
mov
cmp
roll
jle
and
xor
insb
adc
mov
adc
mov
xor
mov
loop
mov
roll
inc
loop
mov
add
cmp
xchg
xchg
les
fidivs
ja
ret
xor
sti
and
push
scas
or
cltd
add
mov
jl
sbb
ss
test
imul
cmc
decb
adc
mov
and
add
jmp
add
mov
mov
mov
negb
push
push
add
dec
xchg
xor
mov
jns
push
cli
rolb
mov
adc
mov
or
sbb
xlat
iret
pop
add
mov
mov
fs
mov
mov
mov
add
mov
fisttps
sbb
pop
int
addb
mov
in
dec
rolb
cwtl
jle
cmpsl
fdivrs
mov
in
mov
pop
sub
sbb
add
xor
dec
xor
mov
into
cli
add
lock
adc
mov
cmp
outsb
pop
mov
mov
fxch
add
addb
xchg
shl
add
add
stos
pop
sbb
inc
add
mov
popf
xabort
mov
cmc
pop
scas
iret
imul
rcrl
add
mov
add
sarl
mov
mov
jmp
in
mov
jecxz
lahf
mov
adc
ljmp
jno
arpl
lods
lahf
fxch
adc
insl
out
cli
out
lock
and
fidivl
xchg
and
xchg
in
dec
xchg
add
lock
add
mov
add
add
cmpsl
jns
arpl
jnp
mov
lcall
mov
add
mov
inc
clc
xchg
xchg
mov
add
mov
add
add
hlt
or
shll
out
cmp
popf
in
push
add
add
mov
add
add
mov
sbb
push
sbb
xchg
add
insb
mov
call
mov
test
lcall
fistpl
into
bound
mov
and
push
or
adc
mov
pushf
in
inc
cmp
lret
mov
mov
push
movsb
dec
fcmovb
inc
push
lcall
gs
shl
add
jo
mov
fadds
inc
inc
cli
popf
cmpsl
pop
xor
mov
mov
std
lahf
inc
out
sysenter
repnz
rcll
aad
push
sub
add
mov
cli
and
and
mov
xlat
and
xchg
jne
adc
fistpl
arpl
push
dec
add
mov
ret
pop
mov
xor
mov
iret
stos
inc
mov
mov
leave
pop
js
add
loopne
mov
js
mov
and
mov
cld
pusha
add
cltd
int
xrelease
mov
add
test
mov
jbe
mov
add
imul
dec
js
into
mov
sbb
xchg
mov
sub
adcl
pop
mov
or
insl
in
xor
mov
sbb
xor
mov
adc
mov
mov
mov
outsb
or
daa
insl
mov
xor
out
mov
mov
or
cmp
repz
mov
jo
mov
add
add
mov
or
or
into
stos
pushf
out
imul
mov
add
out
push
sbb
xor
mov
push
sub
pop
mov
test
adc
mov
add
sbb
xchg
loop
mov
xchg
add
mov
jno
add
inc
jge
int
jne
mov
insl
cmp
add
mov
sbb
or
inc
jle
jg
aam
jnp
sub
mov
sub
add
add
push
icebp
jmp
sub
dec
lock
stos
sbb
lock
mov
scas
xchg
sbb
mov
or
mov
mov
dec
and
aas
popa
adc
add
dec
pop
arpl
in
ficomps
add
or
and
mov
adc
addb
or
in
mov
mov
pop
sub
cmp
pop
jge
and
add
mov
mov
notl
mov
cmpsb
pop
outsb
mov
mov
mov
cmpsl
mov
mov
mov
mov
xor
mov
cld
cwtl
xor
lock
mov
imul
adc
mov
add
gs
mov
cmp
add
and
and
pop
jle
fisttps
pop
xor
adc
jo
mov
nop
add
xor
stos
lock
add
mov
data16
jnp
add
adc
mov
pop
das
imul
mov
pop
sub
cmp
int3
cmp
mov
jnp
add
mov
jmp
in
inc
call
cmp
je
lcall
into
jb
mov
enter
and
pushl
add
mov
inc
dec
adc
xor
mov
add
scas
insl
jmp
and
xor
outsl
adc
add
add
pop
jle
sbb
add
and
ja
call
jg
and
mov
scas
inc
mov
enter
inc
add
fidivl
xor
mov
stc
or
add
adc
out
xor
mov
frstor
mov
int3
xchg
lcall
mov
add
or
add
mov
popf
int
or
mov
in
pop
loope
aaa
leave
mov
mov
test
inc
add
outsl
stos
cmp
xchg
mov
fnstsw
add
stos
mov
test
pop
lock
jg
add
jl
mov
loopne
mov
push
repnz
xchg
mov
xchg
fs
mov
jmp
adc
mov
loopne
mov
mov
sbb
shr
arpl
adc
out
lods
adc
les
mov
loopne
mov
add
movsl
mov
jb
mov
add
or
or
rolb
inc
add
adc
mov
or
mov
jo
mov
lea
xor
test
mov
xorl
sbb
mov
and
add
hlt
outsb
loopne
mov
shll
push
and
mov
aas
xor
mov
jmp
add
adc
add
stc
cmp
pop
mov
add
add
rolb
int
mov
ret
pop
mov
mov
mov
imul
lock
pusha
add
mov
jnp
fdivs
enter
inc
stos
push
iret
aad
test
dec
xchg
push
pop
and
mov
fsubs
lret
lret
addr16
mov
cmpl
mov
fstpt
sbb
mov
push
push
push
das
sahf
lea
xor
mov
mov
mov
mov
cmp
xor
cmp
pop
sub
add
idivb
call
inc
jecxz
fists
inc
mov
xchg
push
add
loop
mov
out
add
cld
and
adc
mov
sahf
sahf
jmp
adc
mov
xor
mov
xor
mov
in
push
gs
mov
inc
add
add
cmpsl
lret
and
mov
adc
mov
push
imul
cmp
add
ret
jbe
add
mov
cmpsb
dec
push
aaa
sahf
mov
mov
data16
test
popf
dec
jp
add
sbb
ds
add
dec
and
outsb
mov
mov
mov
loopne
mov
mov
rolb
mov
lods
in
sbb
pop
in
add
adc
dec
loopne
mov
jp
leave
cmc
cld
bound
mov
addb
xor
pushf
pop
xchg
mov
iret
mov
add
mov
adc
and
pop
push
add
rolb
mov
sbb
add
push
xchg
icebp
pop
sbb
xchg
add
cmpsb
insb
push
setno
jle
add
add
lret
sub
and
dec
dec
add
repnz
mov
rolb
mov
xchg
ljmp
sbb
add
fdivp
aad
ds
mov
mov
add
mov
mov
mov
sti
loop
mov
add
xchg
cli
jg
add
add
das
loope
fsub
xchg
adc
mov
add
mov
loopne
mov
xor
ret
jno
mov
adc
mov
stos
mov
sbb
ja
and
cmp
add
data16
add
dec
rolb
mov
fisttps
fidivl
mov
scas
mov
sbb
iret
aad
add
mov
mov
add
mov
push
stc
loopne
mov
dec
cld
fucompp
outsb
mov
mov
mov
mov
lods
stc
push
push
ret
loope
mov
inc
into
mov
or
adc
fwait
dec
inc
pop
test
in
or
loop
mov
test
push
xchg
xchg
insb
movsl
ss
rolb
out
scas
inc
add
sbb
mov
add
enter
add
sti
xchg
pop
rcl
add
xor
mov
add
rolb
mov
mov
sub
xchg
mov
jno
movsl
ror
jae
mov
pop
lods
gs
xor
mov
jae
fstps
mov
lea
cltd
out
and
fdivrs
lods
scas
pop
mov
mov
xchg
rolb
mov
push
insb
xor
mov
rcl
add
out
movsb
es
lahf
sbb
into
imul
mov
jne
rolb
mov
fdivrp
jp
inc
int3
add
mov
pusha
add
pop
xor
imul
push
ret
aad
call
add
mov
mov
mov
fs
fisttpll
int
push
out
xchg
into
insl
stc
adc
mov
mov
xor
mov
add
imul
enter
dec
jp
add
mov
mov
sahf
mov
push
lea
in
ficomps
adc
mov
mov
add
in
je
add
movsl
add
mov
in
xchg
add
inc
push
lea
or
add
push
add
cmp
sub
add
out
and
aaa
push
js
lods
or
add
sti
pop
or
int3
out
nop
add
cmp
xchg
imul
xor
mov
add
mov
bswap
int
movd
je
clc
aas
outsb
jbe
rolb
mov
ret
push
addr16
or
sbb
and
mov
add
mov
and
imul
and
add
add
sub
outsb
repnz
or
sub
add
dec
gs
out
and
mov
cmp
pcmpgtd
sahf
lods
push
jg
mov
add
in
icebp
xchg
mov
inc
xor
dec
push
fs
mov
nop
add
test
ret
int
lods
cmc
sti
sub
pop
lods
cmpsb
push
sbb
add
dec
xor
mov
pop
movsb
into
sub
into
cvttps2pi
mov
xchg
add
mov
inc
add
cmp
mov
pop
sub
mov
mov
xchg
add
dec
out
das
stos
fistpll
lahf
xchg
add
cmp
and
jge
add
mov
movsb
push
mov
rolb
mov
push
imul
les
mov
loope
add
loope
sbb
xchg
cli
aam
xchg
out
pushf
leave
xor
mov
shl
add
mov
adc
insb
adc
sub
add
xchg
add
pop
outsb
popa
mov
adc
pop
cmp
addb
rolb
mov
or
insb
adc
mov
data16
jmp
shll
add
add
mov
mov
push
fs
cs
sub
cmc
test
push
sbb
jp
repz
ja
repz
jns
push
dec
lods
mov
sbb
sahf
fisubs
jp
jns
pop
imul
pop
jno
push
add
xchg
stos
adc
jo
mov
mov
ret
mov
cli
pusha
add
mov
test
icebp
jge
inc
add
push
cs
idivl
lahf
mov
add
mov
rolb
mov
cmpsb
cmp
rcrl
cmp
jo
mov
and
cwtl
pop
and
mov
add
inc
or
sub
sub
and
cmp
mov
fimuls
ds
mov
lcall
and
add
mov
cmpsb
rolb
mov
out
imul
mov
sbb
js
and
push
rol
add
add
sbb
fisubrl
add
cld
inc
ljmp
jbe
add
adc
sub
add
lods
repnz
int
or
mov
cmp
add
push
sbb
out
and
adc
adc
mov
out
mov
mov
pop
jmp
add
add
les
add
add
add
mov
add
xchg
dec
mov
or
lret
cmp
enter
sbb
mov
xchg
addb
mov
pop
stos
cmp
sub
adc
add
jnp
cli
mov
repz
ret
sub
das
fidivrs
or
inc
xlat
push
add
jo
mov
iret
arpl
addb
aaa
cmp
insl
add
jg
push
insb
int3
pop
mov
mov
bound
mov
mov
sbb
out
or
ret
mov
loope
add
cli
fcomps
out
sarl
lods
add
add
lods
fdivrs
push
add
add
cli
sbb
and
push
pusha
add
scas
std
test
hlt
aad
fldt
jns
imul
cmc
jnp
mov
inc
adc
mov
add
outsb
mov
push
enter
addb
xchg
and
mov
push
mov
add
test
scas
and
sub
xor
mov
add
popf
xchg
stos
stc
jnp
add
xchg
ds
mov
dec
mov
mov
jno
pushf
xchg
sbbl
mov
pop
mov
jle
fwait
sbb
icebp
mov
ds
lcall
clc
aaa
mov
in
sbb
add
cmp
add
je
aad
pop
cmp
push
or
loop
mov
add
lds
jmp
push
int
add
mov
out
push
fists
addb
pop
fs
ja
add
xchg
cmpsb
fdivl
pop
mov
mov
pusha
add
add
loop
mov
pop
rep
aad
int
or
int
inc
inc
add
ds
add
mov
mov
add
mov
and
pop
inc
add
test
rolb
mov
adc
mov
xchg
shll
in
xchg
ds
mov
lea
lds
dec
inc
sbb
out
sti
nop
add
add
xlat
insb
cmc
icebp
and
mov
jne
jle
ficoms
xor
mov
mov
sbb
or
arpl
mov
push
lret
jg
test
xchg
add
test
inc
add
cmp
push
or
xchg
out
jnp
sbb
test
add
sub
add
and
mov
stc
lret
mov
xchg
add
aaa
cmp
test
mov
add
mov
add
add
ret
jl
sub
xchg
or
mov
add
add
cmpsl
xchg
add
fsubs
mov
test
stos
push
add
mov
mov
cwtl
hlt
dec
scas
aad
mov
cmp
cmpsb
add
movl
loop
mov
xchg
dec
mov
inc
push
hlt
mov
hlt
mov
lret
and
mov
push
jb
mov
add
mov
add
mov
lret
add
cmp
or
jbe
inc
stc
xchg
sub
cli
gs
sbb
dec
push
add
mov
push
pushf
dec
xor
pop
push
insb
notl
outsl
xchg
add
sbb
jl
sub
jl
lret
shr
xchg
sbb
and
mov
mov
aam
mov
dec
push
ret
sbb
inc
stc
add
mov
scas
or
mov
fcmovnu
push
push
std
jle
js
push
into
xor
pop
cmp
lret
push
cmp
mov
mov
addr16
xchg
inc
add
lds
dec
punpckhbw
push
push
cwtl
fists
add
scas
and
add
push
mulb
in
xchg
sbb
xchg
add
mov
sbb
add
mov
jno
add
mov
mov
fnsave
adc
mov
data16
push
popa
sbb
mov
pop
lods
fcmovnbe
ficompl
pop
jle
mov
fdivrl
test
or
add
mov
mov
add
mov
mov
dec
push
inc
dec
add
mov
xchg
mov
xchg
cmpsl
jle
add
add
hlt
icebp
and
lock
mov
lret
es
aas
enter
in
pop
xchg
add
and
into
xor
int3
push
mov
xor
mov
rcll
enter
in
insb
popf
add
mov
xchg
add
mov
fimuls
mov
push
xchg
push
or
cmpsl
arpl
int3
popa
lahf
dec
out
imul
mov
adc
add
shrl
rcrl
adc
mov
push
test
movsl
test
rolb
mov
frstor
pop
ljmp
adc
add
mov
mov
pushf
dec
push
cmpsb
movsb
int3
pop
cmc
sbbl
lcall
pop
aaa
mov
in
cli
push
ficomps
add
dec
jne
add
stos
pushf
iret
idivl
movsb
xlat
mov
cs
cmpsl
mov
or
push
mov
dec
arpl
add
push
not
push
addr16
cmpsb
mov
add
pop
sub
sbb
xor
mov
dec
aaa
add
pop
ret
ss
sub
stos
mov
ficompl
inc
hlt
sbb
cmp
mov
and
mov
cmp
add
add
aaa
xor
fcmovb
sub
xchg
loop
mov
inc
jmp
push
loopne
mov
push
push
cmpl
aam
and
mov
mov
scas
add
mov
add
inc
push
mov
mov
jle
add
shrl
les
out
mov
ds
add
push
mov
sub
adc
lea
add
pusha
add
mov
push
mov
add
add
stos
dec
jmp
add
rorl
fidivrs
int3
in
sub
out
add
das
jg
dec
or
test
pop
or
add
push
add
mov
push
xor
sub
mov
add
sbb
jns
sub
mov
mov
cwtl
mov
and
sbb
jbe
mov
les
mov
arpl
ret
test
mov
mov
lcall
out
out
mov
mull
add
add
test
hlt
ds
sbb
outsl
rorl
inc
and
ss
in
mov
fdivs
jbe
gs
add
pop
movsl
inc
movsl
push
scas
in
add
pusha
add
and
mov
mov
mov
add
faddl
add
mov
lret
push
mov
scas
mov
cmp
adc
mov
or
push
mov
bound
mov
push
mov
push
dec
add
mov
add
sub
lods
xor
push
loopne
mov
mov
push
sub
fsubrl
lods
in
xor
mov
repz
addb
inc
xor
and
mov
cltd
cs
cmp
add
dec
xor
fdivl
pop
std
dec
jae
outsl
loopne
mov
jnp
lcall
rolb
je
repnz
stos
pop
imul
lahf
mov
mov
jmp
push
into
adc
add
push
add
dec
ds
jl
dec
dec
pushf
push
add
mov
call
cmp
lds
ja
xor
outsb
daa
mov
lahf
mov
sub
sbb
and
xchg
xor
mov
ljmp
and
mov
rorl
ficomps
sbb
lods
rolb
or
xchg
addr16
mov
jbe
popa
stc
sbb
mov
add
mov
add
repz
jle
lret
mov
add
jne
sbbl
hlt
lret
pop
jp
adc
add
mov
and
and
xor
mov
xchg
sbb
mov
inc
adc
popf
fildll
add
cmp
mov
fidivl
xchg
mov
inc
pop
loope
push
inc
add
lds
aad
ljmp
pop
push
out
inc
mov
add
into
cmpsl
ret
push
xchg
scas
cli
int3
xor
mov
out
loop
mov
cmpsb
adc
mov
add
rolb
mov
add
mov
adc
imul
mov
insl
and
mov
scas
cmc
aaa
cmp
insb
jecxz
add
adc
lcall
add
mov
adc
push
add
fs
divl
mov
roll
sbb
rolb
mov
jnp
push
cmp
push
or
pusha
add
mov
jbe
jp
daa
leave
mov
xor
add
add
xchg
stos
repz
cli
jp
loope
push
and
rcll
mov
loope
dec
push
add
es
xor
jmp
push
in
in
sbb
and
icebp
pop
lea
outsb
xor
test
cmp
add
adc
jbe
cmpsb
das
divl
adc
xor
push
js
mov
lret
or
adc
mov
mov
popa
or
mov
jg
fwait
add
mov
adc
dec
sub
jne
fstpt
mov
lret
es
pop
mov
dec
mov
add
xor
add
test
in
ret
out
shll
daa
sbb
nop
add
scas
enter
sub
addb
cmp
add
sbb
in
sub
mov
leave
aam
stos
loop
mov
add
repz
jmp
jmp
loopew
hlt
ds
add
add
jmp
sti
into
mov
mov
int3
mov
rolb
mov
fstpt
adc
mov
add
mov
loope
cli
pop
push
out
add
xchg
in
out
pop
or
push
mov
dec
lods
cli
inc
add
mov
jp
cmpps
int
aam
daa
cmp
mov
js
adc
inc
add
add
add
mov
jne
xor
mov
mov
dec
cs
add
rcll
std
lcall
add
add
mov
xchg
movsl
add
rorl
jmp
cmp
int
int
add
and
mov
mov
add
stos
add
mov
or
popf
xchg
push
clc
loope
mov
xchg
dec
pop
in
out
cwtl
dec
xor
mov
sbb
loope
pop
pop
fcmove
mov
mov
add
jne
aaa
std
mov
add
add
add
in
pop
mov
mov
add
std
mov
pusha
add
xor
es
add
add
repnz
mov
in
add
rcll
fsubr
outsb
sahf
repnz
jg
loope
movsb
movsb
nop
add
scas
xlat
cmp
mov
outsb
jne
pusha
add
add
jmp
add
pop
bound
mov
mov
pusha
add
in
push
adc
mov
out
lahf
add
mov
pop
or
mov
cmp
mov
clc
cmp
stc
pop
nop
add
pop
test
sub
add
add
add
add
fs
push
mov
clc
cmc
dec
jl
dec
mov
out
lods
shrl
add
leave
in
sahf
sarl
jae
xorl
dec
lock
fcoml
add
ja
add
lahf
idivl
sub
add
int3
hlt
mov
xchg
clc
scas
ds
push
test
xor
mov
pushl
mov
cwtl
fildll
aam
test
xor
mov
hlt
dec
inc
js
pop
jmp
add
loope
xchg
add
push
mov
xorl
mov
cmp
mov
test
sub
mov
fwait
arpl
sub
add
lahf
fsubs
mov
jbe
test
adc
mov
xchg
add
rolb
loopne
mov
pop
add
pop
cmpsl
push
add
andl
insl
ficomps
adc
or
movsl
fbld
or
mov
gs
bound
mov
add
outsl
aam
add
test
dec
call
and
mov
stos
xchg
xor
lahf
or
push
es
testb
push
xor
and
mov
enter
mov
jae
mov
mov
inc
add
je
and
mov
dec
sarl
jo
mov
ss
add
or
fs
jno
outsl
mov
aas
std
sbb
mov
out
in
add
pop
stos
adc
mov
mov
pop
push
cmpsb
mov
inc
and
dec
xchg
mov
xchg
sub
and
push
mov
mov
add
mov
adc
fimuls
mov
aad
add
add
outsl
sbb
xor
mov
add
dec
in
lahf
push
pop
push
add
loopne
mov
testb
mov
rolb
ret
in
jns
add
sub
mov
add
in
lock
mov
mov
cmp
stc
mov
fistps
push
cltd
clc
sub
mov
lods
icebp
cmp
loope
movsb
filds
jg
ret
mov
iret
test
lea
pusha
add
popa
movb
mov
gs
mov
movsb
jo
mov
mov
andl
add
jl
or
and
fmuls
push
mov
pusha
add
movsb
xor
mov
add
sub
loope
das
or
add
add
push
out
or
jg
stos
icebp
jl
inc
add
add
and
mov
xchg
inc
jb
mov
inc
lds
ljmp
pop
cmc
inc
lahf
or
xchg
push
std
daa
pop
mov
cmpsb
das
shll
add
test
cmpsb
inc
and
out
dec
fucomi
or
cmp
mov
arpl
mov
cmc
mov
sbb
pop
pop
in
sbb
gs
movl
adc
mov
je
test
fsub
pop
inc
push
add
pusha
add
push
sbb
dec
stc
dec
and
std
daa
mov
lret
mov
in
pushf
push
dec
dec
stos
mov
lock
into
mov
imul
or
xchg
daa
mov
add
mov
sub
out
stos
dec
js
addb
int3
lock
xor
pop
mov
sar
add
or
out
or
add
add
mov
add
add
cmp
sub
jns
xchg
xchg
js
lahf
lret
mov
add
add
jl
lcall
fwait
nop
add
mov
add
ret
out
ljmp
add
call
pop
in
mov
pushf
jge
cmp
lock
inc
xor
aas
push
adc
dec
xchg
aaa
xchg
ret
das
lcall
sub
add
mov
adc
mov
cmp
add
in
push
add
mov
lds
arpl
rorl
jae
test
pusha
add
mov
add
sahf
fnstenv
out
pop
aaa
or
add
pop
jo
mov
cmp
ds
fldl
je
cmp
mov
add
cmp
les
mov
mov
test
iret
into
add
mov
mov
mov
add
mov
add
inc
push
shll
cwtl
lds
and
mov
add
add
repnz
mov
mov
es
rolb
mov
ret
sbb
cmpsb
pushl
adc
mov
stc
fwait
js
or
mov
add
push
in
mov
mov
dec
shll
pop
dec
mov
add
add
sbb
push
je
int
fs
neg
int3
outsb
pop
das
pop
sbb
pavgb
mov
mov
mov
idiv
mov
sti
xor
mov
pop
int3
test
add
mov
call
mov
or
inc
add
dec
push
add
mov
ljmp
mov
das
shll
xchg
iret
rolb
mov
roll
fdivrs
repz
pusha
add
add
in
aam
in
loopne
mov
loop
mov
aad
inc
push
mov
mov
mov
insb
pop
sbb
mov
repnz
pushf
mov
mov
ud1
jb
mov
mov
cmp
pop
mov
mov
mov
mov
push
cmc
push
popa
jecxz
pop
fistpl
xor
addb
xor
mov
mov
add
push
lods
sub
adc
popf
or
jb
mov
leave
or
loope
add
cmc
hlt
adc
dec
in
cmpsb
cmpsl
xlat
cmc
ret
fbstp
inc
pushf
or
stc
sbb
roll
dec
jle
cmp
lahf
nop
add
mov
loope
ror
pop
xchg
js
add
mov
add
or
arpl
aam
rol
fnstcw
xor
mov
add
cmp
xchg
adc
or
jnp
adc
add
pushf
mov
out
or
push
mov
sbb
xchg
xchg
and
or
lods
sbb
dec
lock
add
nop
add
lods
mov
or
mov
sub
push
pop
xor
cmp
push
in
sub
call
pop
icebp
mov
mov
pop
adc
mov
add
jns
nop
add
or
mov
sub
jno
push
pop
test
out
mov
mov
imul
xchg
pop
mov
mov
adc
movsl
cmp
stc
mov
mov
insl
fldenv
movsb
push
lahf
loop
mov
aam
fs
testl
ficoml
shll
repnz
test
jbe
rcll
mov
and
xchg
lahf
push
add
add
clc
and
rolb
cmpsb
sti
push
mov
mov
push
pop
hlt
ljmp
cmc
mov
sbb
test
cld
sub
stos
cmp
push
test
add
mov
stc
jl
or
add
jne
arpl
sub
pop
stos
cmp
movsb
in
sub
xor
mov
mov
add
or
mov
mov
addr16
out
clc
lea
cld
inc
rol
iret
aam
sub
xor
mov
popf
sbb
mov
add
mov
lock
push
dec
das
pusha
add
rolb
inc
add
iret
addr16
pop
dec
sbb
inc
in
pop
rolb
mov
les
mov
or
mov
mov
add
adc
mov
mov
adc
adc
fadds
add
xchg
mov
inc
sbb
push
fisttps
pushf
popf
dec
push
insl
cwtl
pop
dec
dec
jmp
xchg
mov
test
add
fistpll
aas
or
add
mov
lods
mov
je
imul
mov
dec
scas
sbb
mov
or
mov
fimull
imul
sbb
xchg
int3
adc
sbb
mov
mov
mov
sub
loope
or
mov
test
iret
mov
sub
mov
call
pop
mov
and
mov
sti
cwtl
in
xlat
ljmp
loop
mov
out
push
add
mov
mov
add
mov
pop
sub
add
cld
stos
xchg
pop
imul
gs
and
push
ret
pop
data16
jp
add
insb
loope
movsb
mov
sub
and
or
mov
add
add
add
sub
bound
mov
lahf
push
mov
dec
push
mov
push
add
cmp
leave
sbb
cmc
jp
add
add
ds
out
jbe
and
jo
mov
setno
add
mov
insl
dec
test
pop
fisttpl
mov
add
pop
jns
jmp
add
add
je
icebp
jle
dec
xchg
push
cmp
pop
ja
jne
mov
mov
xchg
sub
ret
add
add
jecxz
add
inc
inc
inc
xorl
scas
popa
sbb
add
dec
xor
mov
sti
test
dec
or
add
mov
pop
daa
inc
lea
pop
mov
dec
or
mov
or
push
dec
lea
icebp
sub
icebp
cltd
adc
mov
movsb
dec
imul
addb
cli
xlat
cmp
or
ss
sub
inc
add
test
xchg
add
sbb
xchg
add
jmp
or
mov
in
mov
jae
mov
popa
sub
xchg
jnp
adc
mov
adc
cwtl
test
push
mov
inc
fcomip
sub
loopne
mov
cs
jnp
jns
sbb
inc
and
or
xchg
sbb
fs
pop
or
push
push
into
lods
push
sbbl
add
into
jae
and
stos
jno
pop
mov
in
dec
int3
mov
inc
daa
lahf
jmp
adc
lock
fists
leave
enter
cltd
loopne
mov
mov
pop
sub
push
xchg
into
adc
ds
nop
add
stos
lods
repz
add
jno
mov
mov
mulb
mov
dec
mov
xchg
jb
mov
pop
test
cmp
mov
pop
and
jecxz
out
lea
add
sub
mov
imul
or
jb
mov
jne
push
xchg
mov
push
dec
sbb
mov
adc
mov
add
std
pop
rolb
es
imul
pop
in
xor
mov
and
mov
addl
push
jb
mov
add
pushf
bound
mov
sbb
cmp
add
mov
add
scas
xor
add
dec
out
add
pop
cmpsb
repz
icebp
fimuls
test
add
mov
sbb
ret
push
sub
cmc
inc
inc
popf
wrmsr
add
lds
das
mov
add
push
mov
and
sub
sub
int
fidivrs
leave
sub
lea
add
add
and
xchg
add
jle
xchg
jg
or
mov
mov
xchg
xchg
mov
jbe
mov
xor
mov
jp
loope
mov
mov
push
cmp
sbb
add
mov
mov
mov
push
pop
rolb
std
dec
mov
xor
mov
mov
in
or
push
adc
add
add
popa
movsb
xor
mov
and
push
push
dec
mov
jno
pushl
mov
mov
jmp
add
mov
mov
add
mov
cmp
add
mov
mov
out
cmc
mov
mov
lret
jge
sbb
mov
fs
aaa
out
cwtl
in
rolb
xchg
xor
mov
bound
mov
sbb
cmpsb
mov
mov
addl
add
aas
push
add
add
push
add
and
add
mov
xchg
xchg
loope
repz
out
ficompl
imul
xchg
add
add
and
add
lds
mov
call
mov
xlat
lods
lods
lret
aam
sbb
test
cwtl
xchg
add
dec
mov
sub
push
push
xor
mov
mov
push
daa
cmp
add
scas
mov
jns
add
test
bound
mov
fs
and
mov
add
xchg
adc
mov
loope
add
or
jmp
and
out
lods
sbb
mov
jg
push
rolb
mov
pushf
push
cs
push
ljmp
scas
sub
sub
vminsd
jl
pop
jo
mov
add
and
mov
xor
add
pop
inc
dec
xor
and
add
mov
add
jmp
add
add
aam
movsb
pushf
push
test
add
add
mov
mov
mov
add
mov
arpl
imulb
jae
jecxz
pop
stos
addr16
push
sub
xchg
mov
fpatan
pmullw
and
mov
pop
lods
push
call
xchg
add
or
into
stos
xchg
push
xchg
add
into
rolb
mov
mov
add
mov
xchg
inc
mov
add
iret
push
add
into
cli
mov
test
dec
and
adc
mov
imul
es
stos
pop
cs
add
dec
or
ret
std
sub
data16
mov
sti
aad
test
add
add
or
add
in
enter
adc
mov
push
ss
cmpsl
hlt
push
add
cli
cmpsb
test
inc
ds
add
dec
pop
or
pop
push
push
addr16
int3
icebp
fucom
add
dec
popa
leave
xchg
rcrl
mov
rcrl
mov
arpl
mov
mov
out
loop
mov
jmp
push
sub
adc
mov
dec
adc
mov
push
add
mov
mov
dec
movsb
push
orl
mov
mov
push
cltd
hlt
push
add
into
cmp
cmp
cmpsb
or
in
push
aaa
test
cmp
dec
jne
jge
xor
mov
scas
cmp
jae
push
lock
jmp
add
mov
add
insl
mov
add
dec
aad
ljmp
in
dec
dec
pop
inc
xchg
mov
js
sub
jo
mov
add
mov
je
in
lret
mov
add
mov
add
ret
lea
xchg
dec
sbb
sub
sbb
fwait
and
mov
cmp
cwtl
lds
lods
mov
mov
add
fistps
mov
xor
mov
repnz
idivb
mov
test
movsb
dec
mov
pop
xchg
xor
mov
divb
add
popf
inc
add
out
add
add
add
inc
add
dec
popf
jb
mov
jb
mov
add
pop
jp
rcrl
repz
pusha
add
xchg
int
jns
call
sbb
jno
loop
mov
adc
add
sti
call
pushf
ret
xor
mov
out
fwait
mov
sbb
pop
lock
mov
add
icebp
out
inc
push
pop
mov
add
out
dec
fisttpll
imul
adc
push
push
mov
and
mov
add
add
inc
add
mov
dec
dec
bound
mov
add
add
adc
sahf
jne
into
loopne
mov
and
aam
pop
int3
sub
adc
aad
rolb
dec
mov
stc
add
insl
jns
out
sbb
add
add
add
and
lret
test
add
xchg
cmp
xchg
ret
jg
mov
add
test
add
insl
push
mov
mov
ljmp
and
add
mov
add
mov
cmp
outsb
dec
outsb
jge
imul
fst
pop
addr16
add
sub
mov
sbb
rolb
mov
mov
mov
and
xor
movsb
cmp
mov
add
loop
mov
dec
fadds
into
or
test
mov
sbb
gs
add
mov
mov
add
mov
icebp
pop
int
lcall
pop
and
mov
aas
and
mov
out
dec
ret
jg
or
mov
pop
sahf
daa
inc
add
add
mov
test
jns
xchg
lock
pop
and
push
xchg
leave
sbb
sbb
add
xlat
out
scas
pop
sbb
add
push
xchg
add
xchg
dec
mov
add
xor
mov
xchg
mov
insl
fst
adc
jl
cmpsb
arpl
pop
jp
jecxz
push
ja
add
dec
xchg
lret
and
mov
aaa
add
mov
pop
test
lods
pop
test
rolb
mov
loope
imul
test
inc
pop
mov
and
inc
push
mov
dec
adc
dec
arpl
scas
out
aam
aam
call
push
xchg
sbb
ljmp
inc
ljmp
and
jl
lods
pop
mov
jge
test
popa
mov
mov
dec
jl
xlat
iret
in
push
repz
mov
push
add
mov
jne
iret
enter
out
cmp
push
frstor
push
add
jne
inc
add
mov
mov
xchg
sti
and
mov
or
std
push
push
inc
add
inc
fisttpl
xchg
sbb
call
push
test
lret
xor
add
or
push
sbb
xchg
add
arpl
in
pop
pop
sub
mov
mov
call
mov
ret
push
stos
movsb
loope
add
inc
push
add
or
xor
fisubrs
mov
add
mov
dec
push
add
jbe
sub
and
cmp
sbb
js
stc
inc
outsb
pop
stc
push
add
adc
mov
add
mov
idivb
testl
and
sbb
jge
fsubr
fcomps
push
add
mov
popf
std
and
inc
loopne
mov
add
lcall
rolb
mov
add
mov
xchg
add
inc
movsb
xor
mov
xchg
and
mov
pop
mov
sbb
loopne
mov
mull
add
inc
and
mov
push
inc
sti
or
mov
mov
lds
add
jmp
push
dec
push
add
adc
sbb
mov
stos
push
xchg
mov
add
je
rolb
mov
mov
or
in
es
repnz
lods
or
or
add
add
mov
fstpl
push
daa
sub
dec
in
xor
mov
xchg
lret
cmp
pop
jb
mov
pop
lahf
mov
add
add
mov
mov
daa
dec
sub
dec
xchg
fistpl
add
jo
mov
adc
mov
add
lcall
add
cmp
repz
add
scas
xor
add
insl
xchg
cmp
add
inc
sub
add
add
mov
mov
mov
mov
mov
mov
out
fdivl
add
pop
or
lret
mov
mov
nop
add
add
popl
add
mov
add
pop
daa
imul
cld
xchg
add
je
dec
add
mov
aaa
out
popl
push
rolb
mov
and
mov
daa
mov
add
movsl
sbb
testb
inc
repnz
push
out
xchg
lods
cmp
cmp
shl
mov
add
mov
add
icebp
subl
int
inc
dec
movl
mov
add
inc
popf
adc
and
mov
into
jl
mov
push
in
scas
lret
sub
mov
mov
adc
inc
mov
cwtl
fdivrs
test
jp
xchg
xor
sbb
mov
mov
addb
addb
mov
push
add
stos
mov
rcrl
mov
add
fcomps
mov
and
add
stc
bound
mov
add
notw
mov
mov
jns
inc
ss
test
or
cwtl
ret
int3
jmp
jp
push
lret
xchg
add
or
pop
hlt
repnz
or
mov
sub
mov
out
jne
divl
pusha
add
jb
mov
xchg
fnstenv
test
mov
int3
popf
imulb
ljmp
loope
dec
push
add
ret
push
flds
pop
mov
jns
inc
mov
xchg
xchg
addb
lods
pusha
add
pop
jle
sbbl
jecxz
dec
mov
fnstcw
lret
inc
testb
add
mov
loope
xchg
or
adc
sub
add
mov
mov
dec
sub
in
add
out
sub
mov
pop
out
dec
in
cs
movsl
stc
jno
mov
add
xor
jp
addb
lock
adc
ss
mov
add
mov
inc
jb
mov
add
jae
add
repnz
ret
fsubr
xchg
cltd
ja
addr16
mov
or
add
movsl
xchg
push
in
gs
adc
fists
mov
pop
mov
mov
les
add
pusha
add
stos
or
ss
bound
mov
clc
jae
mov
add
add
sbbl
cmp
es
test
fmull
jge
add
inc
fdiv
fistpll
icebp
jmp
aaa
adc
adc
and
or
lret
or
add
push
mov
and
push
stos
das
mov
xchg
clc
je
xchg
push
in
or
inc
int3
xchg
inc
xchg
mov
cltd
into
push
ds
mov
push
add
push
popf
daa
je
ret
das
cmpsb
jb
mov
in
iret
cld
daa
adc
mov
negl
addb
lret
jmp
rolb
mov
outsl
call
mov
pushl
insb
cmp
jo
mov
pusha
add
xor
mov
mov
xchg
mov
movl
lods
lret
pop
xor
or
and
add
add
mov
xor
mov
inc
mov
adc
cli
pop
pop
sub
push
out
les
dec
out
inc
add
and
mov
arpl
lock
jmp
jnp
mov
mov
sub
pop
rolb
mov
and
xor
sbb
xchg
sub
mov
int3
ficoms
test
pop
pusha
add
sbb
mov
fs
pop
leave
roll
pop
fsubrl
stos
cmove
add
mov
repz
fiadds
rcll
cld
pop
jb
mov
pop
xchg
xor
rcll
scas
add
ret
mov
mov
lds
cmp
xchg
jns
pusha
add
mov
out
add
test
addb
sti
xchg
jbe
cmp
push
repz
inc
les
repz
push
add
xchg
mov
in
add
push
fisubrl
inc
fimull
repz
sahf
adc
mov
sbbl
add
xchg
ffreep
fstpt
lret
int3
rolb
mov
inc
insb
in
adc
add
xor
add
mov
mov
mov
add
dec
aad
pushf
mov
dec
mov
mov
add
lods
imul
add
shll
fs
ja
mov
lret
adc
stos
or
mov
mov
stos
and
mov
pop
fisttpl
cli
in
inc
pop
or
and
inc
pushf
dec
pop
push
jge
pop
push
fnstcw
sbb
and
push
adc
addb
inc
rolb
mov
lods
push
add
rcl
mov
sbb
sbb
arpl
cmp
insb
add
jl
les
out
dec
dec
pop
jbe
sahf
cmc
xchg
ret
push
cmpw
push
gs
ljmp
rorl
mov
scas
pop
cmp
dec
adc
mov
dec
xor
mov
or
scas
pop
repz
sarl
cmpsb
mov
and
push
sub
rolb
mov
mov
push
sbb
mov
mov
mov
add
xchg
add
add
test
add
or
subl
sub
insb
hlt
call
addb
insb
testb
add
add
cli
xor
inc
insl
pop
adc
mov
mov
xor
mov
out
mov
outsb
cmpsb
daa
lds
pop
add
mov
xchg
add
mov
xchg
xor
mov
in
addr16
data16
xlat
cmp
mov
out
dec
add
cltd
cwtl
mov
push
std
inc
add
ja
in
pop
xchg
jp
movsb
mov
ret
out
inc
mov
scas
enter
mov
adc
mov
push
add
jle
pop
jns
fisttps
dec
fwait
cmp
lds
mov
dec
pop
stc
cmp
lret
inc
add
jge
pop
push
add
xchg
ret
dec
cmp
lea
add
mov
lods
cmp
add
jp
add
push
outsb
jae
add
loop
mov
sbb
mov
mov
add
inc
add
sbb
sub
add
mov
lds
jecxz
test
mov
addb
mov
push
cwtl
adc
mov
rcll
sbb
inc
xchg
add
in
xrelease
inc
mov
inc
mov
mov
pop
jecxz,pn
out
add
cmp
mov
mov
loopne
mov
or
lds
imul
cmp
and
mov
sbb
sub
rolb
into
sbb
mov
mov
or
rep
or
push
sahf
jg
push
lahf
lahf
mov
add
jae
js
mov
loop
mov
ret
and
iret
daa
out
cmp
or
mov
and
mov
enter
add
cwtl
fnstsw
add
add
mov
fcomps
fdivr
inc
inc
pop
dec
sub
add
mov
fmull
jae
inc
mov
roll
or
ja
mov
and
mov
adc
or
pop
cmpsb
jnp
add
mov
sbb
xor
mov
mov
mov
mov
nop
add
and
int3
xor
int3
jb
mov
add
dec
adc
mov
lods
dec
jecxz
movsl
iret
loopew
add
stc
and
fs
insl
inc
in
add
ss
xor
mov
or
push
jg
xor
mov
lods
push
jb
mov
in
fxtract
pop
mov
call
and
mov
add
ljmp
cmc
push
das
dec
push
add
mov
jg
sub
add
mov
stc
push
adcl
lret
mov
dec
sti
adc
mov
fimuls
iret
fs
aam
pop
mov
pop
lock
or
mov
movsb
push
out
mov
jp
push
add
adc
pop
test
rolb
inc
sbb
add
mov
movsb
push
icebp
adc
add
add
or
out
testb
mov
mov
jmp
in
mov
jnp
rolb
mov
add
mov
xlat
cmpsl
and
adc
xlat
loop
mov
cwtl
frstor
mov
or
add
repnz
add
mov
rolb
mov
xchg
add
test
add
das
imulb
xlat
mov
in
mov
sbb
aas
jno
sub
int3
jnp
add
cmpsl
mov
js
dec
jmp
add
pop
pushf
repz
cwtl
jl
iret
movsb
xor
pop
and
out
add
mov
in
imul
add
mov
add
xchg
jge
punpckhwd
stos
mov
add
mov
ret
mov
lock
xchg
dec
rolb
mov
add
addb
daa
das
cmp
push
xor
int
pop
in
lock
add
das
repnz
arpl
add
add
fwait
popa
inc
inc
xor
sub
outsl
dec
jb
mov
push
mov
push
dec
pop
jecxz
sub
insl
cmp
popf
gs
push
or
fwait
push
jno
nop
add
push
addr16
out
jge
cli
xor
cwtl
leave
sub
jl
inc
out
add
inc
xor
mov
add
add
fcomi
sub
mov
mov
imulb
add
mov
mov
or
pusha
add
add
add
jle
jmp
xor
jbe
xchg
loope
add
aad
addr16
jge
mov
rol
mov
add
and
loope
add
mov
mov
in
mov
mov
in
inc
test
or
mov
divl
add
adc
push
fdivrl
nop
add
mov
mov
stos
ss
nopl
cmpsb
push
xlat
ljmp
out
lods
push
fildl
cwtl
inc
add
ja
test
nop
add
out
dec
jg
mov
mov
movsb
add
ret
mov
mov
pop
push
sahf
xchg
and
add
jle
mov
int3
dec
cmc
loop
mov
mov
rolb
mov
add
lret
xlat
mov
in
adc
mov
mov
out
subl
fnstenv
ret
lcall
or
movsb
mov
cmp
in
add
jp
pop
sahf
rol
cmp
popa
ficomps
add
push
push
insb
lret
add
lock
mov
popa
sahf
or
out
faddp
stos
testl
add
mov
mov
repz
pop
int3
jb
mov
ljmp
lea
dec
mov
mov
rolb
mov
mov
mov
dec
mov
out
pop
repz
or
lret
xor
sbb
xchg
cltd
and
mov
arpl
jge
outsl
pop
push
push
pop
sub
sbbl
roll
mov
mov
out
ret
daa
inc
or
mov
fistl
rcrl
or
pop
scas
rolb
mov
stc
add
mov
add
nop
add
add
dec
sub
add
in
push
add
mov
add
and
mov
cmpsl
fistpl
divb
lods
add
add
dec
mov
add
popa
mov
icebp
fmuls
ds
loopne
mov
mov
pop
inc
add
xchg
inc
mov
outsl
repnz
xchg
in
loope
cmp
hlt
push
pop
adc
add
add
dec
lret
cmp
addb
dec
gs
out
das
sahf
xor
xchg
add
imul
aam
out
addb
testb
push
pop
cmpsb
adc
mov
mov
fildl
add
sbb
xchg
and
sti
test
insl
jle
add
jp
inc
mov
fsub
add
add
inc
and
aad
sbb
sub
adc
lods
and
mov
or
popa
or
sbb
out
jo
mov
cmpsb
cmpsb
jecxz
mov
add
in
push
sbb
aas
mov
jo
mov
adc
mov
adc
out
arpl
mov
jnp
mov
mov
in
negb
out
xlat
imull
lds
mov
xor
add
dec
rorl
inc
add
mov
xlat
mov
cli
cmpsb
inc
or
add
pop
iret
call
push
hlt
mov
mov
push
loop
mov
mov
sub
pop
inc
xlat
cmp
dec
xchg
pop
push
mov
pop
out
or
push
cltd
pop
pop
cld
and
or
mov
sub
cld
add
cs
sub
adc
mov
pop
je
icebp
lds
add
xlat
mov
xorl
in
in
cmp
lock
lods
add
pcmpgtb
cmp
push
mov
push
dec
bound
mov
or
mov
aaa
sahf
xchg
sub
shrl
dec
cwtl
and
mov
aam
add
ffree
shl
imul
mov
xor
mov
aaa
mov
add
lret
xchg
out
sbb
jl
mov
xchg
add
add
mov
loop
mov
mov
lods
adc
mov
add
jl
mov
mov
add
or
mov
loop
mov
mov
or
sbb
outsl
ds
jmp
scas
jbe
outsl
leave
adc
ret
add
lret
movsl
scas
testl
pop
ja
fbld
xchg
inc
fld
push
dec
sbb
jae
xchg
lret
xchg
push
icebp
sar
add
leave
les
cmp
adc
mov
ds
mov
or
add
movsl
jge
add
mov
addb
jmp
mov
add
mov
adc
add
add
shll
jecxz
mov
insb
daa
jmp
add
cli
hlt
sub
or
pop
xor
add
sbb
int3
hlt
push
xchg
js
jl
sti
xchg
add
in
dec
std
dec
fisttps
push
inc
rolb
mov
inc
stos
lods
xor
mov
mov
mov
addr16
faddl
addb
push
cmp
das
mov
fdivs
push
dec
int
push
sbb
popf
js
jno
jns
cli
mov
add
sti
out
sub
dec
pop
insb
pop
mov
mov
adc
xor
mov
mov
iret
mov
loopne
mov
mov
fisubs
mov
push
jl
add
mov
add
pushf
jp
int3
xchg
inc
sbb
push
scas
out
sub
hlt
imul
xor
mov
and
cmpsb
in
pop
sbb
cli
push
xchg
ja
mov
mov
lret
mov
dec
insb
mov
add
int3
adc
xchg
add
pushf
lret
rolb
mov
test
push
shll
sbb
popf
rorl
inc
cld
clc
imul
add
mov
and
add
add
jecxz
aas
xchg
add
addb
into
mov
imul
mov
or
mov
sbb
add
xchg
mov
add
les
mov
add
pusha
add
add
mov
mov
add
pushf
push
jae
movsb
lock
and
mov
mov
repz
das
dec
sti
fiaddl
out
xchg
mov
mov
js
push
in
mov
rolb
mov
push
xor
add
sti
mov
mov
repz
inc
gs
das
js
ss
or
adc
inc
mov
mov
rolb
mov
mov
add
xchg
sbb
outsb
push
add
mov
rolb
mov
add
push
lock
stc
mov
xchg
and
test
and
add
popa
mov
jl
js
mov
loopne
mov
pop
movsl
mov
fimuls
cld
push
pop
or
xchg
add
add
add
or
ss
mov
mov
add
add
or
sbb
and
mov
shll
into
test
dec
in
mov
dec
pop
sbb
icebp
mov
scas
jg
mov
inc
add
stos
xor
push
xchg
add
and
test
js
fldt
repnz
mov
mov
test
mov
mov
dec
loopne
mov
mov
push
add
jge
call
cmp
pop
dec
pop
pushf
dec
dec
push
xchg
sub
sbb
push
cmpl
jns
sbb
mov
adc
cmpsb
addb
loope
ret
mov
cld
xlat
sub
addb
dec
sahf
lahf
dec
xor
mov
lret
repz
add
add
out
loope
loope
cmc
leave
test
add
add
cmp
mov
add
sarl
adc
mov
jg
stc
push
add
pop
and
mov
and
jne
cld
or
mov
add
mov
xor
mov
hlt
call
pop
sti
loop
mov
inc
mov
add
mov
jb
mov
mov
enter
add
pop
stos
jb
mov
aad
addb
jae
cltd
test
xchg
sub
inc
mov
fisubrs
icebp
lret
mov
dec
lock
add
inc
add
hlt
mov
roll
xor
push
mov
sub
pop
test
jbe
pop
sbb
fistl
cwtl
xor
repz
mov
inc
icebp
cltd
push
out
call
mov
mov
push
add
add
xchg
jp
jno
repnz
dec
aas
xor
xchg
sbb
daa
or
les
repnz
and
inc
pop
in
mov
add
mov
addl
dec
fidivrl
mov
mov
lcall
test
cmovp
test
inc
add
loope
sbb
in
adc
add
jmp
dec
jno
loop
mov
push
xchg
in
sub
lock
rolb
icebp
or
jbe
pop
mov
pop
test
adc
add
add
mov
mov
push
outsl
out
adc
mov
es
and
sub
pop
pop
sti
inc
sub
fs
inc
and
aaa
rol
add
add
out
inc
inc
add
out
gs
sti
inc
add
mov
adc
sbb
push
pop
scas
cld
mov
mov
adc
test
jne
cmpsb
popa
fucom
xor
mov
test
adc
sub
cmp
jno
add
add
cmp
cmpsl
inc
out
mov
mov
test
mov
mov
out
lea
insl
ljmp
rolb
mov
adc
push
fadds
or
sbb
or
jbe
aam
outsb
add
mov
mov
xchg
pop
out
sbb
push
rolb
mov
add
pop
in
inc
add
imul
mov
jmp
mov
cmpsb
sbb
add
add
mov
or
or
mov
mov
ja
bound
mov
add
pop
popf
cli
sub
fidivs
jmp
cmp
cmc
mov
pop
leave
icebp
inc
popa
xchg
sub
test
pop
push
jge
jbe
fistpll
xchg
aaa
jmp
addb
add
mov
add
inc
xor
mov
jno
add
fnstenv
mov
push
add
sbb
ljmp
leave
inc
mov
mov
sub
ret
mov
mov
push
inc
inc
add
mov
subl
or
mov
ret
xchg
mov
mov
xchg
jo
mov
add
jne
cwtl
sub
inc
mov
add
push
fiaddl
add
cld
test
add
mov
mov
es
jae
pop
call
jb
mov
cmpsb
ret
sbb
cs
dec
shl
leave
sub
mov
mov
aas
push
add
or
add
mov
dec
das
push
out
mov
push
mov
mov
out
adc
aam
es
sti
inc
pusha
add
jge
clc
outsl
cltd
mov
mov
cli
push
add
push
scas
inc
add
push
and
lea
mov
add
inc
sbb
cld
aaa
dec
jmp
icebp
mov
xchg
push
mov
imul
pop
iret
call
add
push
xchg
dec
xor
add
mov
mov
add
rcl
out
add
mov
mov
adc
cmc
mov
mov
jno
add
fidivs
mov
fucom
add
add
cmc
push
jecxz
mov
cmpsl
xlat
movsl
lods
sti
or
mov
fisubrl
sti
sti
sub
xor
stos
sub
or
or
int3
jge
hlt
inc
lcall
xchg
scas
adc
stos
nop
add
or
push
fdiv
jmp
add
std
mov
xor
xor
jno
cs
inc
pushf
jno
ret
shll
mov
ret
mov
mov
sub
int3
std
std
bound
mov
mov
mov
das
push
loop
mov
ficoms
cld
xchg
mov
mov
sbb
faddl
jnp
loop
mov
jno
popf
inc
add
cltd
fnstcw
mov
add
mov
add
sub
lock
add
mov
mov
mov
sbbl
dec
dec
popf
pop
mov
loop
mov
push
int
sbb
xor
outsb
addb
or
push
xchg
xchg
add
add
add
adc
mov
scas
xor
xor
xchg
add
or
xchg
jp
add
bound
mov
add
jno
add
lds
jne
out
cmc
cwtl
push
pushf
xchg
jecxz
cmp
and
mov
push
xchg
mov
in
aam
mov
je
insl
fmulp
mov
daa
cmpsb
jbe
push
aaa
imul
out
cmp
daa
mov
dec
rcrl
loop
mov
add
mov
add
add
js
in
inc
push
xchg
add
into
andl
fisttpl
ljmp
call
lcall
mov
push
clc
ret
loop
mov
sbb
add
lea
icebp
mov
js
cmp
imul
mov
add
mov
push
xor
ds
adc
add
add
add
and
call
add
addb
test
cld
js
inc
fprem1
in
mov
add
and
pop
test
and
jmp
push
out
int
or
out
out
lock
add
loop
mov
add
jnp
call
push
inc
movsl
mov
mov
add
imul
push
cmc
cltd
sub
mov
pop
fsubrs
mov
push
enter
add
add
adc
push
add
push
mov
jl
mov
xchg
lret
aad
add
faddp
fdivrs
into
mov
jnp
and
mov
frstor
push
inc
mov
inc
adc
mov
notl
repnz
fwait
addb
aam
popf
sub
xchg
mov
dec
lret
es
rcll
dec
scas
sarl
mov
mov
mov
mov
sbb
addb
sub
ss
fsubs
dec
mov
mov
xchg
insb
lahf
xor
rcll
mov
jecxz
aam
or
or
pop
lea
add
xor
inc
std
popa
push
das
jae
shll
inc
jecxz
xor
mov
inc
add
adc
hlt
mov
cmp
add
mov
mov
rolb
mov
xchg
mov
mov
mov
add
mov
mov
and
pop
xor
fdivrs
aaa
aad
bound
mov
mov
mov
pop
and
cmpsb
insb
ja
nop
add
mov
les
pop
dec
out
add
add
mov
sti
jnp
in
mov
outsl
scas
jl
jns
add
jnp
in
push
daa
orl
jl
repnz
jge
cmp
int3
out
jmp
jb
mov
mov
push
loop
mov
add
cmp
jnp
jl
cwtl
mov
dec
call
dec
mov
fidivrl
mov
das
ret
arpl
movb
jae
mov
out
ds
rcl
dec
test
dec
jne
js
xor
mov
mov
add
cmp
jb
mov
push
push
scas
les
add
pop
add
icebp
imull
popf
loopne
mov
ss
jge
xchg
or
add
or
daa
xor
mov
add
add
add
inc
cmp
xchg
add
lods
pop
insb
inc
je
sti
jo
mov
mov
addr16
xor
pop
and
jbe
daa
out
test
cmc
ss
iret
rolb
adc
add
cmc
and
scas
or
add
lods
jl
add
xchg
int3
xchg
inc
add
int3
xchg
mov
jne
push
cmp
ljmp
test
shll
int3
inc
stos
testb
cmp
push
cmp
add
xor
mov
pop
das
mov
mov
add
int3
or
add
xchg
dec
dec
mov
jge
cmpsb
std
pop
je
xlat
jns
cmpsl
fmull
add
std
in
mov
push
sbb
insl
clc
or
push
sbb
mov
mov
cld
adc
test
add
mov
mov
lock
mov
mov
and
mov
xor
jmp
add
push
pop
mov
sub
bound
mov
cwtl
mov
push
sbb
jo
mov
add
add
mov
add
mov
cmc
jae
movsl
mov
jmp
pop
jae
add
push
add
addb
js,pt
jecxz
icebp
fadd
mov
decb
inc
mov
test
sbb
lahf
cmp
mov
mov
mov
mov
stos
daa
out
push
add
cmpl
add
sbb
rcrl
inc
add
mov
popf
jecxz
push
lcall
mov
xor
mulb
mov
xor
sti
insb
inc
xor
repnz
add
mov
xor
mov
rolb
mov
inc
add
mov
mov
lock
mov
sbb
int
add
gs
into
jns
in
add
cs
push
pop
mov
push
in
jns
fs
lods
pop
jne
movsl
mov
andl
pop
xchg
loop
mov
cmp
pop
ds
repz
pop
mov
add
cmpsb
arpl
cmp
ljmp
add
mov
ficompl
or
aam
dec
loop
mov
sbb
fnsave
push
out
negl
mov
add
sub
mov
inc
mov
add
imul
mov
mov
add
pop
and
push
inc
pop
mov
mov
ret
xchg
sbb
rolb
mov
std
adc
inc
or
mov
mov
push
subl
add
fidivrs
xchg
xor
mov
add
mov
rcll
fimull
repnz
repz
push
and
mov
stos
sbb
in
mov
add
pop
rorl
int
mov
rolb
loopne
mov
inc
add
pop
dec
push
inc
out
push
wrmsr
add
add
add
sbb
das
mov
ja
stc
rep
imul
repz
add
sub
xchg
push
add
jle
movsl
and
add
dec
pop
lock
xor
xor
mov
inc
dec
out
mov
jb
mov
imul
push
out
mov
scas
xor
push
xlat
or
rolb
jl
lea
push
inc
cmp
add
mov
add
push
pop
popf
faddl
add
mov
mov
mov
scas
jbe
adc
mov
scas
fwait
push
jg
push
adcl
add
hlt
and
mov
fidivs
sbb
push
add
icebp
or
mov
xor
mov
or
cmp
inc
add
and
adc
mov
xchg
mov
mov
add
inc
add
or
pop
xchg
add
aaa
insb
sbb
push
inc
icebp
cmpl
jb
mov
lea
jbe
jns
push
cld
push
xor
push
and
jp
or
ljmp
sbb
bound
mov
add
mov
jbe
xchg
jmp
mov
mov
stos
pushf
lahf
out
scas
add
mov
imul
mov
push
rolb
imul
cld
sbb
jae
loopne
mov
jbe
ljmp
add
clc
add
sbb
push
xor
mov
mov
mov
out
outsl
lahf
enter
aad
push
push
jp
out
mov
mov
fwait
sbb
or
jbe
stos
or
push
and
add
lret
sbb
in
in
or
clc
push
or
es
leave
ja
jnp
fsubr
lret
scas
outsl
cmpsl
cmpsl
in
pop
test
or
test
add
add
inc
add
sbb
addr16
pop
push
dec
jmp
js
pop
fs
std
cmc
dec
mov
mov
xchg
sub
flds
add
push
adcl
repz
add
cmp
dec
stos
inc
icebp
addr16
pusha
add
dec
sub
cmpsl
xchg
in
add
mov
or
mov
mov
fs
in
xchg
and
stc
cmpsb
stos
jbe
mov
gs
push
add
mov
test
mov
and
jle
rolb
mov
lret
push
dec
sbb
std
mov
mov
adc
mov
mov
cmp
lods
mov
add
mov
add
cmc
sarl
outsb
pop
repnz
add
mov
mov
pop
dec
fsubrp
and
and
add
add
jae
push
test
movsb
addb
lods
aam
inc
mov
into
aas
stc
popf
hlt
daa
imul
push
push
fstpl
add
push
add
scas
mov
in
ds
inc
cmp
mov
sahf
mov
jg
rorl
adc
mov
shrl
xor
add
icebp
nop
add
dec
daa
xchg
mov
add
imull
fcmovnu
inc
add
jno
leave
das
test
cltd
popw
dec
or
rcrl
mov
mov
imul
mov
push
lret
enter
xor
dec
sub
ret
push
int
add
add
shrl
jg
inc
add
mov
mov
xor
popa
ret
insb
dec
in
mov
les
jmp
sti
rolb
mov
jg
mull
add
add
add
in
mov
xchg
inc
add
test
repz
mov
loop
mov
loop
mov
das
mov
addb
popf
mov
mov
pop
cli
ljmp
cmpsl
mov
add
mov
and
mov
into
aad
add
cwtl
in
lcall
sbb
in
sbb
xchg
add
mov
mov
mov
jp
add
mov
mov
aad
add
and
mov
in
es
mov
sub
fmull
insb
insl
lds
mov
fmuls
xchg
clc
xor
loopne
mov
cs
mov
add
add
pusha
add
mov
mov
mov
sub
popf
cs
in
adc
xchg
test
add
sbb
add
mov
movsl
mov
jmp
popa
push
xor
out
push
cmpsl
stos
mov
add
mov
das
inc
add
movsl
pop
jno
sub
add
mov
js
xor
mov
in
fadd
inc
add
adc
mov
andl
mov
or
push
mov
sub
push
add
inc
pusha
add
frstor
or
jne
add
nop
add
xchg
add
xor
add
mov
int
and
sbb
xor
mov
or
mov
fsubrs
jb
mov
out
clc
lcall
add
mov
and
mov
add
imul
mov
push
fsubrp
les
or
pusha
add
mov
inc
add
imul
sti
fisttpll
add
notb
add
out
or
push
lods
xchg
mov
mov
xor
jle
jl
add
sub
or
or
mov
xor
add
lods
js
dec
mov
push
xchg
add
inc
lret
and
aam
loop
mov
mov
push
pop
push
add
je
mov
test
add
mov
imul
mov
xor
mov
add
fwait
lret
addb
test
clc
int
adc
mov
fsts
mov
inc
adc
scas
ret
sarl
scas
inc
pop
and
mov
add
add
lds
cmpsb
and
pusha
add
add
sbb
push
test
jb
mov
iret
lea
lret
push
bound
mov
mov
pop
push
add
pop
jbe
xchg
add
jne
clc
lret
inc
sarl
aaa
and
mov
or
xor
das
dec
mov
inc
bound
mov
movl
in
or
cmp
ret
out
and
add
xor
sub
leave
jbe
test
fstpt
fimull
test
jns,pt
mov
push
xor
mov
mov
push
bound
mov
add
add
xchg
xor
mov
mov
mov
xorl
std
jg
fmuls
sti
adc
jecxz
add
mov
and
mov
dec
push
add
add
aaa
dec
stos
or
mov
cmp
out
std
cmpl
push
cmp
add
popf
jno
xchg
aam
add
add
dec
notb
mov
add
lret
cmpsl
inc
jb
mov
add
fsub
adc
mov
jmp
mov
pop
and
fsubrs
lock
inc
xor
xor
add
cmp
ja
xor
pop
bound
mov
sbb
loope
xor
push
add
mov
repz
pop
cmc
push
mov
add
sub
popa
movsl
test
cltd
and
lcall
std
imul
dec
inc
mov
out
data16
add
mov
out
lahf
out
push
sbb
dec
jo
mov
cli
xchg
jge
sbb
add
mov
insl
test
mov
mov
imul
xchg
jecxz
xchg
add
fcompl
loope
xchg
add
sub
addb
mov
xchg
loope
jp
jne
test
add
out
rolb
mov
or
test
idivl
sub
stc
xchg
in
cmc
push
leave
fdivrp
lods
mov
mov
in
out
pushl
mov
test
scas
ret
sub
sub
scas
div
push
rolb
mov
pop
popf
ds
or
movsl
push
push
jecxz
or
into
xor
mov
xor
mov
jle
dec
mov
xchg
xor
mov
dec
push
pop
out
or
mov
mov
mov
add
mov
mov
aad
adc
mov
push
repnz
add
inc
scas
in
xchg
mov
mov
pop
mov
mov
mov
pushf
and
push
add
cmp
mov
imul
pop
imulb
aad
adc
add
mov
dec
gs
je
cmp
sti
cwtl
mov
jmp
inc
dec
mov
scas
fwait
lret
add
je
rolb
mov
daa
test
leave
jo
mov
lret
mov
fs
in
add
add
jns
push
mov
dec
push
pop
cmp
pop
pop
fs
push
roll
stc
aam
inc
pop
in
pop
shll
mov
repz
add
jae
add
ret
cs
mov
inc
push
pop
cmp
out
loopne
mov
nop
add
sahf
aam
dec
ljmp
fidivs
jnp
dec
mov
and
rol
pop
dec
mov
push
add
push
lds
nop
add
and
repz
cmp
sub
test
je
cltd
mov
bound
mov
add
out
arpl
mov
lahf
imulb
inc
mov
pusha
add
cmc
pop
cmp
inc
xor
repz
jbe
sbb
pop
mov
push
out
movsb
sbb
and
sub
xchg
sti
loopne
mov
dec
dec
lods
sbb
push
pop
imulb
sub
shll
mov
jecxz
push
das
and
xchg
fisttps
hlt
lods
add
stc
stc
mov
add
jle
add
mov
jns
stos
cltd
jno
aam
add
stc
int
and
jno
cmp
ljmp
cli
out
dec
inc
negb
cmp
sub
femms
daa
sub
fnstenv
dec
add
adc
mov
add
mov
clc
rolb
mov
cmc
sbb
add
add
push
repz
mov
addr16
jecxz
fimuls
add
mov
mov
and
add
xchg
repz
mov
sub
ret
imul
call
rolb
mov
and
or
xor
jmp
add
pop
mov
je
mul
imul
mov
std
mov
mov
addb
jno
or
xchg
cmp
test
loopne
mov
loope
sbb
add
stos
jns
and
mov
fsubrs
sahf
mov
mov
repz
mov
push
sub
xor
mov
and
xchg
add
mov
mov
ficomps
pop
or
add
movsl
jge
adcl
add
jbe
bound
mov
test
and
mov
sbb
mov
mov
xchg
call
adc
fsts
sbb
sbb
rolb
mov
ja
sbb
mov
mov
add
mov
mov
or
push
inc
and
mov
faddp
lock
pop
or
adc
xor
popf
sub
test
mov
add
add
inc
rolb
mov
in
ljmp
add
cmp
dec
fcmovbe
movsb
push
pop
das
adc
mov
add
addb
xchg
mov
pop
dec
xchg
add
cmp
jbe
cmp
popa
sub
addb
mov
jg
outsl
push
cmp
outsb
addb
lcall
jecxz
inc
add
aas
cmc
inc
add
adc
mov
jne
scas
push
test
repnz
mov
add
pop
jne
xchg
xor
mov
pop
inc
imul
mov
add
push
scas
and
mov
and
adc
arpl
pop
sbb
scas
aas
mov
popa
bsr
test
imul
inc
add
sub
leave
ljmp
mov
inc
lahf
cmpsb
imul
mov
add
xor
mov
imull
mov
jmp
add
mov
outsl
add
je
cmc
bound
mov
and
sub
in
incl
cmc
popa
lret
mov
mov
mov
loop
mov
push
pop
or
xchg
push
add
and
addb
push
repz
mov
test
mov
mov
mov
mov
push
inc
add
mov
mov
popa
adc
add
push
or
add
mov
shr
negl
ficomps
loop
mov
mov
dec
sub
jg
scas
sbb
add
jbe
insb
adc
add
cmp
add
jmp
pop
push
sbb
outsl
jecxz
add
mov
xchg
inc
add
mov
add
jmp
cmp
fisubrs
imul
and
mov
pop
jle
add
or
in
outsb
mov
hlt
add
mov
aas
cltd
fdivr
xchg
add
add
mov
roll
jae
add
add
xor
jns
and
addl
xlat
sbb
loop
mov
mov
loop
mov
adc
mov
mov
add
pop
movsl
loope
sahf
sahf
mov
add
jns
add
mov
xor
mov
cmp
loopne
mov
jo
mov
push
xchg
out
scas
lods
incb
mov
add
push
aam
push
add
ja
jecxz
sbb
cmp
cmp
sbb
mov
mov
add
rolb
repz
sbb
mov
dec
loopne
mov
pop
lods
xor
mov
into
shl
and
mov
xchg
add
mov
push
lods
cmp
fildl
mov
push
add
mov
ffree
add
jne
add
pop
mov
mov
loopne
mov
int3
push
pop
loopne
mov
dec
ret
in
ds
enter
sbb
sub
repz
mov
enter
sbb
test
xor
mov
inc
imul
mov
mov
repz
mov
cs
sbb
std
push
lahf
add
ja
jg
add
mov
outsb
clc
mov
cmp
aaa
jg
cmp
sbb
xor
mov
adcl
cwtl
mov
push
test
in
das
pushf
adc
popf
mov
addb
fcoml
addb
sahf
addr16
add
and
in
jne
mov
int
mov
cmp
lahf
push
mov
add
outsb
sbb
sub
jmp
enter
lods
mov
sahf
pop
push
add
addr16
scas
imul
aaa
pop
cmpsl
and
lcall
pusha
add
in
inc
add
divl
mov
add
insl
nop
add
add
push
jle
cld
data16
mov
dec
push
mov
jb
mov
add
jmp
add
rolb
mov
sbb
pop
rolb
mov
cmp
mov
sub
push
das
mov
test
xchg
add
sbb
dec
mov
mov
push
inc
add
add
mov
add
adc
mov
lret
mov
inc
add
xchg
dec
mov
mov
mov
test
cmp
mov
mov
jp
adc
mov
sub
or
add
and
mov
sub
or
dec
mov
sub
push
daa
and
sbb
xchg
jnp
ljmp
add
push
mov
scas
push
add
mov
add
xor
out
mov
lahf
sbb
in
inc
push
ja
add
mov
aam
int
lock
cmp
add
add
sub
in
sbb
add
out
out
push
data16
jle
sbb
adc
add
sub
nop
add
mov
xchg
aam
inc
inc
mov
sahf
repnz
jg
mov
aaa
repz
les
inc
push
mov
mov
movsb
in
add
aas
mov
mov
mov
mov
in
adc
mov
ficomps
out
jno
lock
xor
or
add
js
bswap
push
ljmp
mov
add
fistpl
pop
mov
mov
imul
add
mov
mov
in
adc
std
fs
mov
add
mov
add
rolb
mov
bound
mov
mov
pop
imul
outsl
jno
enter
outsl
dec
xor
xor
test
xchg
imul
push
cmp
leave
lcall
jl
cmp
fisubs
pop
arpl
sarl
popf
mov
imul
in
iret
je
icebp
pop
push
cwtl
mov
lods
fnstsw
popa
cmp
arpl
add
inc
mov
dec
mov
das
testb
mov
call
jo
mov
lret
sbb
fidivl
es
jb
mov
bound
mov
dec
inc
add
mov
enter
add
xchg
mov
and
push
cwtl
mov
stc
addr16
pusha
add
add
daa
dec
xchg
insl
xchg
add
push
mov
mov
xor
in
int3
lret
jp
mov
push
std
gs
mov
mov
rcl
je
adc
pop
jge
out
mov
jbe
mov
push
mov
jecxz
inc
dec
adc
jbe
cs
data16
jecxz
xchg
xchg
movsl
jp
js
add
dec
outsl
out
sti
fsts
fisttpl
inc
or
repz
inc
movsl
daa
pop
xchg
popf
xchg
adc
mov
jg
pop
imul
xchg
add
sarl
mov
addb
dec
lods
xchg
mulb
adc
stos
inc
lock
aad
adc
adc
insb
movsb
insl
js
mov
movsl
add
push
adc
pop
jns
clc
sub
add
icebp
sub
add
adc
inc
dec
cli
or
xchg
xchg
xor
push
push
das
mov
fmulp
fimuls
test
pop
loopne
mov
pop
test
push
add
in
outsl
xchg
xlat
dec
sbb
add
mov
mov
scas
sbb
cmc
mov
sub
sub
cmp
mov
repnz
mov
mov
mov
xchg
inc
add
xor
mov
jno
xor
rolb
mov
jle
in
and
mov
add
scas
mov
or
cmp
loopne
mov
ret
mov
adc
xchg
xlat
xlat
mov
mov
add
into
xor
mov
lcall
cltd
call
add
xchg
and
add
mov
sbb
jo
mov
fistps
sbb
test
mov
in
inc
cmp
dec
icebp
addb
mull
inc
sbb
insl
add
in
jmp
pop
call
add
cmp
les
ja
push
cmpsb
popf
adc
mov
mov
add
add
rolb
in
mov
sti
loopne
mov
lock
mov
pop
and
in
dec
sub
lret
daa
data16
push
lods
fs
fldl
loope
cwtl
je
push
in
push
call
add
mov
iret
nop
add
and
add
mov
jne
in
push
arpl
add
mov
test
sub
adc
mov
ljmp
pop
imul
pushf
mov
out
jb
mov
mov
cwtl
pop
clc
push
shll
jg
fildl
xor
push
xor
mov
mov
mov
add
ja
inc
or
add
dec
scas
insl
xchg
inc
sti
cltd
push
add
push
mov
sbb
and
mov
push
add
adc
and
mov
mov
fldenv
incl
mov
in
add
das
rolb
mov
push
add
add
sub
add
fwait
popf
mov
mulb
sbb
mov
icebp
jno
jecxz
imul
nopl
test
sbb
mov
mov
jle
or
fwait
dec
rolb
bound
mov
ss
int3
mov
xor
daa
pop
movsl
out
sub
cmpsl
jnp
sahf
idiv
sahf
fwait
add
add
mov
or
cli
das
outsl
adc
cmp
xchg
lret
pop
fistl
cmp
stc
das
shll
mov
leave
pop
lods
fwait
mov
mov
mov
jg
lret
jecxz
f2xm1
add
xor
mov
cltd
in
add
stos
mov
pop
dec
fldt
jge
jns
push
ret
pushf
cmp
imull
jae
daa
int
dec
mov
imul
xor
push
cmp
xor
sbbl
in
js,pt
loop
mov
adc
mov
or
xchg
repnz
rcll
lods
adc
mov
into
jle
inc
mov
stos
add
arpl
adc
mov
pop
test
sub
mov
cmc
adc
mov
outsb
dec
out
mov
mov
inc
jne
mov
fdivrl
stos
sahf
rolb
rolb
mov
add
adc
mov
fcoms
mov
push
sub
mov
push
imul
add
mov
push
ds
mov
or
add
push
lods
shrl
daa
sub
mov
or
xor
mov
inc
pop
pop
fisttps
scas
adc
inc
add
add
push
add
jp
adc
mov
popf
mov
push
rolb
inc
loop
mov
add
and
jge
adc
je
cli
adc
add
push
jo
mov
call
notb
mov
adc
lret
repz
sub
mov
or
pop
adc
mov
sbb
push
add
mov
aam
lods
pop
pop
pusha
add
movsb
addb
ljmp
add
dec
and
jp
xlat
adc
xor
mov
fs
out
lods
and
mov
out
fimull
jae
jge
add
cwtl
in
push
jns
cld
inc
xor
add
inc
sbb
ja
add
mov
xor
pop
jp
stos
das
out
bound
mov
cmp
mov
inc
fisubl
test
mov
repz
add
push
fnstsw
sbb
push
repnz
mov
pop
mov
push
lahf
and
int3
cmp
lock
jno
add
add
ss
add
jns
add
outsl
pop
cmc
lea
iret
popf
pop
call
mov
xor
mov
ljmp
mov
imul
jb
mov
imul
dec
pushf
jge
and
push
out
mov
mov
mov
add
mov
mov
adc
fstl
es
repz
loopne
mov
sub
add
adc
lock
cmpsb
push
inc
xchg
add
dec
or
add
add
sub
add
mov
jne
xlat
bound
mov
ss
push
add
movsb
mov
repnz
jmp
aam
adc
add
popa
cmp
sbb
js
pop
pop
dec
bound
mov
add
into
loope
add
add
ds
add
cmpsl
pop
mov
dec
in
lds
fidivrs
aam
fldt
pop
dec
loopne
mov
lods
std
stos
cltd
psrlq
into
sbb
add
pop
imul
loopne
mov
insb
xchg
pop
int3
lods
sub
mov
pop
mov
mov
xchg
enter
pop
inc
ds
pop
imul
popa
ljmp
jge
add
popf
or
inc
add
lds
add
jae
add
push
add
nop
add
and
add
mov
inc
sbb
sbb
add
push
dec
addb
and
mov
and
aaa
mov
stos
hlt
xorl
shll
pop
or
jbe
in
xlat
rorl
dec
mov
mov
hlt
mul
ret
aam
xchg
pushf
mov
mov
lahf
popa
loope
outsb
lods
push
mov
addr16
pop
mov
lcall
xchg
lock
mov
out
lock
ss
add
sub
test
and
sub
xor
mov
nop
add
cmp
int3
ret
add
xor
rcr
add
xchg
popa
je
add
sbb
repz
bound
mov
dec
jne
xor
add
adc
xor
movsl
mov
addb
jb
mov
jecxz
mov
icebp
sub
xchg
pop
aaa
sub
mov
sti
inc
add
dec
je
and
mov
xchg
ljmp
adc
mov
push
jnp
addb
jg
add
xor
cs
aaa
mov
adc
mov
mov
xchg
popf
pop
mov
call
jne
je
add
sub
add
iret
imul
inc
add
or
cwtl
movsl
pop
out
in
sbb
pop
cmp
push
sub
sbb
cmp
or
add
add
dec
addb
repnz
stc
mov
pushf
cs
add
add
outsl
in
add
inc
les
lret
insb
es
pop
nop
add
and
xor
data16
lret
add
pop
jg
mov
or
mov
stos
insl
jns
cmp
mov
dec
add
add
dec
xchg
jo
mov
sbbl
jecxz
mov
mov
pop
dec
push
mov
data16
pop
ljmp
lret
mov
jno
add
dec
add
add
add
adc
mov
cli
xchg
iret
ljmp
add
add
mov
mov
fcom
add
push
fwait
call
mov
jg
fdivs
or
sub
cltd
push
add
add
mov
mov
cmp
leave
ss
repz
sub
sbb
les
dec
outsb
test
mov
add
mov
mov
cmc
outsb
pop
xchg
and
mov
mov
scas
iret
push
retw
stc
repz
loop
mov
sub
dec
insb
movsl
xchg
ds
jnp
mov
sbb
clc
cmp
inc
orl
push
loopne
mov
or
jae
jle
arpl
incl
rolb
mov
call
or
imul
mov
out
mov
add
xchg
cmpsb
les
nop
add
outsb
jbe
jbe
add
fbstp
int
outsb
xor
mov
sti
mov
add
insb
or
daa
adc
mov
repz
add
adc
mov
dec
jl
fldenv
xchg
out
xchg
add
lods
inc
mov
mov
push
mov
mov
test
mov
cwtl
mov
xor
pusha
add
mov
ss
mov
mov
pop
sti
jns
add
jp
popa
mov
adc
mov
lcall
addb
dec
in
stc
in
push
add
mov
push
mov
mov
mov
add
in
out
sub
add
mov
add
or
out
or
xor
mov
inc
inc
hlt
ffreep
movhps
in
lods
pop
rorl
test
jb
mov
movhps
add
fildl
add
addb
in
aam
add
dec
or
push
or
pop
repz
xor
bound
mov
lock
mov
mov
add
jp
into
or
mov
aam
loopne
mov
mov
call
