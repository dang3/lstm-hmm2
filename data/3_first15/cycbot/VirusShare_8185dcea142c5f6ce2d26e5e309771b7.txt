jmp
fimuls
add
clc
mov
dec
rolb
insl
or
add
cmpsb
add
jo
in
cmp
add
dec
and
add
add
mov
stos
out
imul
sbb
dec
jmp
add
lret
movb
add
mov
pop
mov
dec
pop
push
add
add
inc
sbb
add
or
add
add
sbb
xchg
add
pop
call
test
add
add
and
dec
pop
stos
out
hlt
add
mov
add
mov
imul
sub
cmp
add
inc
jnp
add
push
fld
mov
flds
add
add
dec
aam
outsl
inc
add
add
push
mov
mov
out
roll
mov
sub
push
push
push
cld
call
sub
mov
cs
movzbl
cmp
ss
lea
push
lea
push
lea
push
lea
push
push
call
cmp
je
es
lea
cs
cs
es
call
test
jne
jmp
push
lret
icebp
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
lea
lea
sub
add
mov
sub
sub
push
pop
push
je
jmp
add
add
shrl
cmp
addb
add
add
add
movb
fldt
pop
xchg
sbb
sbb
clc
jo
std
push
add
out
mov
test
pop
flds
xor
xor
outsb
push
add
adc
cmp
add
add
pop
testb
ret
jb
data16
imul
add
stos
lods
rolb
mov
sbb
test
and
cwtl
mov
add
mov
inc
add
sub
addb
inc
test
sbb
add
mov
and
add
xchg
add
jg
movsl
cs
add
add
add
clc
repz
add
add
add
inc
add
mov
sbb
add
xchg
add
add
dec
aam
rolb
mov
adc
pop
push
clc
cmc
dec
sub
ret
add
sub
sbb
add
jmp
cmpsb
add
ret
inc
add
xchg
add
add
add
add
mov
in
add
add
and
shll
inc
outsl
cmpsl
sub
mov
and
add
add
std
push
add
icebp
adc
dec
gs
sbb
mov
movsl
cwtl
repnz
enter
mov
add
outsl
sub
add
mov
add
cmp
and
test
add
mov
js
andl
xchg
lahf
or
add
test
add
popl
pushf
push
sub
pop
aaa
or
cmpsb
add
mov
mov
ja
add
add
sub
add
jno
rolb
dec
movsl
xchg
add
add
add
add
xor
pop
addr16
add
xor
jae
sahf
push
jmp
aaa
data16
jge
add
aad
xor
add
add
xor
stos
xchg
iret
ds
push
jne
and
dec
out
bound
mov
push
add
test
cmp
add
in
add
xchg
int
add
pop
push
xchg
xchg
add
add
adc
or
add
sub
gs
fcomip
xchg
arpl
add
ljmp
adc
push
inc
add
push
xchg
xor
xlat
xor
mov
mov
add
xlat
addb
mov
add
sbb
cmp
movsb
add
cli
xchg
add
rolb
cmp
cld
mov
inc
add
pop
pop
ljmp
lahf
insb
adc
xchg
add
add
xchg
inc
add
jp
add
into
jbe
outsb
add
mov
and
xchg
add
mov
ja
lret
lcall
lods
bound
mov
add
mov
add
fwait
clc
cld
imul
cli
cli
mov
pop
fistpll
mov
addb
movsb
add
shrd
jg
xchg
cwtl
xor
idivl
ds
scas
sub
in
jge
push
add
add
xchg
lret
add
movsb
add
add
fdiv
fldl
pop
mov
cmp
add
cld
adc
pop
lods
cli
adc
jnp
add
outsl
mov
js
movsb
add
ljmp
jle
mov
sbb
adc
dec
aam
lahf
jno
stos
and
add
add
imul
pop
daa
and
mov
add
mov
mov
daa
movsb
add
mov
xor
jge
imul
sbb
fmull
xchg
cwtl
adc
pop
stos
xchg
lret
insb
lea
mov
xor
mov
lahf
repz
popa
or
out
addr16
add
add
add
add
add
mov
mov
inc
add
lds
add
push
add
sbb
add
mov
ds
mov
xchg
nop
add
jns
fwait
ljmp
lret
pop
cmp
xchg
jmp
js
out
imul
and
and
bound
mov
test
xchg
add
add
popa
imul
loopne
or
add
movsb
add
fcmovnu
stos
test
pushf
scas
repnz
adc
add
add
repz
arpl
adc
mov
and
sub
sbb
xchg
cmp
fldt
jnp
testb
xor
pop
dec
dec
adc
fldcw
lret
push
add
setp
mov
test
mov
jbe
sbb
sub
sbb
or
jge
add
add
add
aam
popf
movsl
xchg
test
aad
lock
jns
xchg
ret
push
mov
jo
out
inc
push
add
add
push
push
pop
and
mov
jle
stos
xchg
sub
add
mov
pop
or
icebp
mov
call
rcll
add
mov
je
outsb
xchg
add
and
pop
jno
daa
fwait
jb
ret
and
pop
add
add
mov
lods
pop
aaa
cmp
mov
add
cwtl
pop
scas
push
insl
stc
add
out
xchg
icebp
out
dec
mov
add
and
rolb
dec
add
jb
sub
mov
xchg
sub
add
add
lods
int
lahf
xchg
add
add
add
test
adc
setp
push
inc
add
mov
cmpl
insl
sub
add
jo
add
js
adc
xor
push
dec
and
add
insb
insl
ret
addb
pop
adcl
cmp
mov
insl
out
cmp
adc
jp
in
or
cmp
and
add
mov
xor
jno
in
cmp
xchg
jmp
xchg
push
add
add
add
push
add
addb
add
xchg
cmpsl
scas
aam
sahf
pop
cmpsl
in
dec
mov
and
mov
add
cmc
jg
xor
xor
adc
inc
xchg
xor
pushf
and
add
mov
fadd
add
sub
pop
fsubs
sub
xor
daa
cs
cmp
clc
ja
jge
lcall
ljmp
mov
sbb
add
imul
nop
add
add
mov
fsts
popf
xchg
add
mov
insb
movb
sbb
add
add
fld
std
mov
jle
add
add
adc
and
mov
dec
sub
in
cli
jae
sbb
add
mov
add
lahf
mov
inc
add
add
inc
add
stc
int
jbe
inc
rolb
xchg
icebp
cltd
mov
add
and
add
mov
add
test
stc
push
add
fmull
je
dec
enter
out
dec
xchg
popa
mov
add
add
cmp
stos
out
pusha
add
rolb
jbe
jge
and
mov
adc
mov
test
scas
inc
xor
add
add
mov
aam
std
xor
call
push
push
pushf
push
icebp
xchg
ret
sti
xchg
mov
add
add
jecxz
fcmovne
cmp
add
push
leave
add
xor
push
mov
add
scas
sbb
mov
rolb
mov
out
mov
out
mov
fstps
or
cmp
pop
pop
lods
lods
xchg
add
cld
cwtl
add
mov
xchg
push
call
add
add
cmp
add
add
mov
jle
cld
mov
rorl
lods
jmp
movsb
add
pop
repz
add
mov
add
into
insb
or
jae
fdivs
std
inc
add
add
ja
and
cmp
pushf
sub
rcr
xor
out
in
add
or
mov
rolb
in
cmp
std
sbb
mov
xlat
out
jbe
push
add
add
rolb
xor
add
add
add
mov
cld
rolb
xchg
mov
mov
and
mov
add
mov
mov
gs
dec
fwait
out
test
inc
out
imul
add
dec
aam
pop
ljmp
sub
add
or
aam
push
push
clc
pop
dec
pusha
add
lods
or
add
inc
add
xor
and
aas
mov
popa
jge
ret
inc
add
into
dec
jno
movsl
scas
ljmp
dec
lea
popa
addr16
cmpsb
add
and
dec
inc
add
add
xchg
add
mov
or
out
jno
mov
sub
into
sub
outsl
add
mov
bound
mov
cli
sub
rolb
inc
xchg
mov
push
or
mov
xchg
sbb
repz
add
add
cld
push
add
add
addb
dec
ret
add
add
jnp
imul
sub
js
ret
add
fnstsw
insl
xchg
add
jne
mov
fldenv
xchg
add
sub
jmp
loope
mov
xchg
add
std
outsb
cmp
std
out
jp
imul
out
add
add
data16
cmp
xchg
add
add
addr16
jge
add
hlt
add
add
ljmp
inc
pop
and
das
fldenv
add
add
loop
add
mov
jecxz
add
mov
mov
jmp
stos
sbb
js
xchg
enter
push
jae
scas
imul
rolb
cmpsb
add
and
push
add
and
dec
dec
mov
mov
cld
repnz
add
add
xchg
xrelease
pop
mul
fiadds
add
and
aas
popa
sbb
or
mov
mov
hlt
add
add
movb
add
mov
mov
add
pop
rolb
jg
fcmovu
lock
mov
sub
pop
lock
call
mov
mov
and
add
add
or
leave
or
add
add
add
add
js
jns
inc
add
add
xchg
sub
add
push
out
ja
or
xchg
mov
jge
sahf
xor
add
lret
fimuls
add
out
sbb
pop
test
stos
push
sbb
xchg
push
add
and
ret
mov
and
mov
sbb
add
add
mov
and
mov
lcall
push
add
add
xchg
lods
cmpl
add
xchg
add
mov
add
mov
imul
mov
add
inc
xchg
xchg
push
add
add
addr16
pop
push
nop
add
add
or
xchg
insl
shrl
jae
mov
outsb
pushf
int3
popf
xchg
add
and
and
or
add
add
adc
cmpsl
mov
clc
fprem1
aaa
out
adc
test
add
mov
loop
xorl
xchg
sub
mov
push
leave
sbb
test
inc
inc
scas
test
and
addb
and
mov
sbb
out
sbb
rolb
xor
mov
mov
scas
xchg
add
mov
add
sub
pop
add
add
rolb
pop
lock
arpl
scas
movsb
add
inc
int3
and
mov
pushf
jle
add
push
add
fwait
loop
movb
sub
mov
mov
mov
data16
add
cltd
cltd
lods
dec
mov
add
loopne
push
add
xor
iret
cmp
arpl
lods
add
nop
add
add
add
sbb
add
cmc
dec
jo
lahf
adc
addr16
push
stos
push
fwait
bound
mov
add
add
add
add
add
add
ret
arpl
pop
mov
add
add
xor
ljmp
add
cmp
add
or
cmp
xchg
xor
cs
addb
andl
cmpsl
and
mov
lcall
jbe
and
mov
add
jo
mov
adc
adcl
stos
iret
mov
stos
roll
add
in
push
add
inc
add
lock
rcrl
testb
aad
pop
cmp
add
std
sbb
call
jbe
std
orl
sbb
jno
mov
pop
mov
outsb
popa
fldt
jecxz
add
aam
xchg
add
add
int3
sub
add
mov
push
pop
xchg
adc
clc
or
sub
adc
std
xlat
xchg
add
cld
and
add
add
add
mov
mov
or
gs
sbb
dec
int3
ljmp
sub
mov
or
adc
pop
stc
lock
add
sahf
push
lcall
hlt
add
orl
mov
insl
xor
cmpsb
add
dec
and
mov
data16
mov
add
fxtract
add
mov
loopne
add
mov
jmp
popf
and
mov
cmp
clc
lret
mov
jmp
and
pop
sahf
pop
out
lea
nop
add
lcall
add
mov
add
rolb
pop
xor
roll
or
mov
add
add
xor
in
jp
das
lea
data16
jge
in
pop
cs
and
add
add
mov
add
rorl
pop
jg
push
add
fldl
add
inc
push
inc
add
add
add
add
mov
cld
cmp
dec
push
pop
mov
add
sbb
cs
in
insl
test
adc
fxch
jne
test
sbb
xchg
in
shl
add
push
sbb
pop
push
add
roll
jecxz
call
add
fldt
call
and
and
pop
outsl
fmulp
sbb
push
add
lcall
add
push
add
data16
repz
and
mov
mov
cmc
mov
jnp
mov
pop
je
xchg
dec
lods
rolb
sub
ds
in
jmp
cmp
xor
ds
cmp
add
cs
and
mov
mov
js
dec
shll
add
pop
push
movb
imul
mov
mov
rolb
pop
push
cmp
xlat
dec
sbb
dec
shl
loop
pushf
lahf
mov
adc
fs
int
add
stos
lret
mov
xchg
add
cmpsb
add
add
bound
mov
adc
aam
mov
mov
sub
nop
add
pop
repnz
add
repnz
add
xchg
add
add
add
add
add
mov
mov
test
das
into
gs
xchg
add
inc
lods
lahf
xor
js
sub
add
cltd
or
add
add
add
xchg
add
push
add
imul
movsb
add
add
cmp
xchg
inc
add
adc
jne
dec
jl
shll
in
lea
ret
pop
popa
fwait
insb
es
add
mov
rolb
add
xchg
shll
add
cmp
xor
jb
mov
fwait
lcall
jno
add
xor
out
dec
xchg
add
mov
cli
fbstp
mov
inc
mov
cmpsb
add
pop
inc
add
scas
je
pop
jge
add
mov
lret
nop
add
add
loope
rolb
xchg
subl
add
rolb
add
sub
in
ds
mov
add
jmp
add
pop
arpl
adc
xchg
add
out
xor
sub
lret
nop
add
ret
inc
pop
push
add
add
mov
out
movsl
fsubrs
sbb
outsl
and
js
push
add
icebp
adc
add
cmc
add
mov
add
add
mov
dec
mov
fdivrs
fs
pop
jb
cwtl
push
add
add
inc
add
dec
sub
add
adc
mov
cmpsb
add
dec
pop
and
mov
or
push
add
or
pop
ret
push
cli
xchg
pushf
mov
dec
les
lds
inc
inc
addr16
mov
xlat
mov
imul
adc
add
add
pushf
xchg
add
add
mov
sbbl
add
add
mov
rolb
rolb
pop
imull
mov
inc
lret
test
jne
call
mov
lea
cmp
add
mov
add
cwtl
aas
jbe
in
cmp
les
stc
out
sub
dec
or
add
rolb
popf
lret
add
sub
add
jecxz
stos
inc
adc
add
xchg
cmpsb
add
std
or
xchg
add
add
xchg
mov
or
daa
enter
dec
jle
mov
sub
add
add
mov
add
inc
add
add
and
add
add
test
in
mov
rcr
insl
dec
dec
mov
jne
js
cmp
pop
stos
cmp
add
pop
mov
add
add
aam
mov
in
xor
ss
add
in
pop
and
mov
data16
add
jl
or
iret
fisubl
in
rcll
adc
ds
add
add
movl
add
mov
mov
add
sub
int3
mov
inc
filds
xchg
cmc
insl
ds
in
adc
add
dec
mov
mov
push
mov
dec
mov
jnp
hlt
add
dec
pop
data16
inc
ja
mov
aam
out
cmp
add
je
cmp
fcoml
popa
fldcw
out
ljmp
mov
into
sub
movsl
sub
xchg
add
mov
add
add
add
add
dec
add
insl
dec
mov
js
add
lret
loopne
mov
lret
cltd
test
stos
out
dec
popf
push
hlt
add
mov
jg
pop
inc
pushf
inc
add
add
add
arpl
jp
mov
stos
lcall
add
in
mov
mov
lcall
test
push
push
mov
add
hlt
add
mov
pop
cmpsb
add
gs
cmp
daa
ret
pop
sbb
loope
add
dec
sub
add
add
fcomip
cwtl
out
sti
pop
push
mov
cld
inc
add
inc
imul
add
add
add
add
sti
push
add
mov
adc
push
add
loopne
xor
out
lret
mov
dec
bound
mov
add
add
js
cmp
add
add
loope
ja
add
ret
adc
repnz
push
add
mov
push
add
loope
lret
ret
rolb
loopne
mov
push
cld
imul
shll
lods
mov
add
inc
add
in
pop
or
xchg
add
clc
clc
sub
subl
add
iret
xor
mov
sub
aad
loope
mov
xchg
add
arpl
add
mov
data16
adc
add
add
leave
or
testb
push
jge
add
add
add
out
add
mov
mov
push
add
iret
inc
sbb
add
mov
je
mov
adc
mov
out
fcomps
and
mov
xchg
add
xor
or
xchg
jb
cld
sbb
push
add
movsl
leave
sarl
pop
icebp
in
xchg
add
add
testb
dec
mov
cmp
mov
in
fsub
and
mov
add
addr16
testb
add
and
mov
add
loop
data16
add
mov
idiv
jo
xchg
add
out
aaa
add
addb
outsb
sbb
out
add
add
mov
adc
addr16
rcll
push
push
addb
add
fisubrl
add
add
add
pop
or
and
lcall
inc
fsin
addb
cs
lret
adc
aam
xor
stos
sub
out
fcomi
sbb
cmp
dec
outsb
adc
mov
and
arpl
add
sbb
xchg
loop
pop
mov
loopne
addb
into
das
inc
add
pop
add
imul
mov
mov
add
add
scas
das
mov
pop
adc
inc
add
out
sub
arpl
add
add
add
pop
xor
aam
movb
mov
pop
sbb
dec
in
addr16
add
lods
dec
addb
add
test
pop
stos
add
ds
add
mov
mov
movb
xchg
add
gs
add
add
cwtl
jle
or
repnz
add
lods
dec
jnp
inc
inc
add
add
or
xchg
add
adc
cmp
dec
leave
test
jnp
movsl
out
lods
jle
or
add
insb
add
jp
xor
pop
aam
daa
scas
push
loopne
sbb
xchg
add
dec
jge
jmp
outsb
insb
lds
loopne
dec
daa
fstpt
dec
pushf
sub
aaa
call
adc
push
add
pushl
add
push
add
add
bound
mov
test
in
aad
mov
jne
mov
and
push
xchg
dec
cwtl
or
add
cld
mov
mov
in
sbb
imul
add
mov
les
xor
dec
cmc
fsubrs
inc
das
xchg
add
in
mov
arpl
add
add
add
add
xchg
xchg
add
sub
lret
sub
add
mov
lods
rolb
xchg
add
cltd
mov
add
cli
adc
pusha
add
add
loop,pt
mov
and
mov
mov
push
add
mov
push
call
add
and
mov
add
aad
add
testb
add
xorl
orl
mov
cmp
repnz
data16
xchg
add
add
xchg
add
add
add
mov
xor
sub
iret
insl
rolb
or
jns
sbb
add
testl
loop
negl
pop
mov
jmp
sbb
popf
inc
pop
jbe
push
das
popf
sahf
ret
add
cltd
jne
cmp
push
mov
add
and
inc
data16
mov
repnz
add
mov
inc
add
push
add
mov
fwait
cmp
in
adc
or
int
add
stos
mov
test
add
push
add
mov
push
add
shrl
mov
xor
sbb
mov
ja
add
jecxz
add
and
mov
mov
sub
inc
and
mov
add
push
xchg
scas
ljmp
lcall
add
mov
xor
add
sbb
mov
mov
repnz
mov
aas
test
fisubl
mov
sub
fnstsw
add
add
mov
jb
push
add
mov
add
xchg
add
xor
aam
mov
lcall
ret
add
sbb
lret
je
push
add
or
add
mov
push
and
push
dec
adc
movsl
mov
add
add
add
mov
mov
lea
jge
add
cwtl
lods
mov
add
mov
test
leave
rolb
push
addl
mov
imul
out
imul
mov
stc
pop
in
je
ljmp
mov
add
add
mov
add
add
xchg
inc
add
adc
popa
cli
in
outsl
mov
shll
mov
scas
rolb
push
pop
and
and
mov
add
test
fidivrl
lahf
pop
adc
adc
add
add
iret
loopne
fdiv
add
add
loop
scas
dec
jo
push
and
mov
outsl
jecxz
repnz
fidivrl
add
mov
call
add
cmp
and
pop
pop
mov
add
jne
adc
lahf
mov
imul
ret
imul
outsl
inc
std
xchg
aam
addb
dec
mov
nop
add
and
jl
and
mov
xchg
rolb
add
add
add
ja
repnz
mov
adc
scas
cmp
ja
mov
scas
je
lahf
dec
dec
loop
pushl
jecxz
and
js
idivl
into
sti
dec
push
mov
adc
addb
fwait
dec
mov
add
add
into
mov
adc
mov
aas
cmp
or
mov
testb
add
add
out
add
mov
pop
imul
add
inc
add
sub
push
add
add
push
jp
add
rolb
pushf
rolb
nop
add
add
xor
inc
dec
dec
lock
add
add
and
add
jns
nop
add
add
add
xchg
add
mov
sub
or
aad
add
add
push
cld
adc
cmpsl
mov
out
nop
add
je
loope
cwtl
mov
rcr
sbb
cmp
mov
fcoms
outsb
inc
mov
lcall
lret
mov
mov
xlat
mov
imul
jl
xchg
add
cmp
scas
movb
cld
outsb
add
aad
cmp
add
aam
rolb
outsl
cs
jbe
or
repz
add
mov
pop
das
pusha
add
add
leave
loop
dec
sbb
stc
in
xchg
outsl
jg
add
add
add
mov
xlat
insb
rolb
sub
push
pop
aas
out
dec
xchg
add
jp
mov
add
jl
add
icebp
ret
xchg
adc
and
mov
and
xchg
xor
mov
adc
faddl
and
arpl
inc
add
cmp
jl
add
push
mov
add
inc
add
rol
pop
mov
std
push
jo
adc
das
jecxz
add
and
mov
jbe
pop
push
inc
jae
xchg
add
jne
out
out
add
sub
add
insl
inc
add
lret
sub
add
add
add
out
sbb
add
mov
add
js
jb,pt
pop
dec
outsl
sub
out
mov
push
add
jle
aam
inc
add
adc
addb
adc
mov
inc
add
sbb
add
mov
fdivl
add
addb
mov
rolb
daa
mov
mov
push
jae
sbb
xchg
add
add
add
sub
mov
add
cmpsb
add
add
cmc
mov
xor
fimull
xchg
add
add
mov
pslld
xorl
push
std
out
lahf
fisubl
add
xchg
add
inc
out
push
add
mov
popf
dec
lea
insb
cs
add
cli
inc
add
xor
fidivl
add
rolb
rolb
dec
xor
js
add
mov
pop
xor
jp
add
sub
ljmp
jo
dec
lods
ja
cmpsl
add
and
test
add
add
test
sub
add
loope
cwtl
mov
fbstp
push
lods
cmpsb
add
sub
pop
push
lcall
cmp
push
insl
mov
adc
add
cmp
lahf
and
dec
push
sbb
add
add
adc
push
add
add
or
sbb
inc
add
fisubrl
in
sbb
dec
jo
test
add
add
jle
cmpl
add
stos
add
pusha
add
out
xor
or
jmp
inc
push
mov
add
mov
add
push
jnp
push
add
inc
mov
sbb
add
in
addb
aad
dec
jno
add
ret
or
sbb
out
add
inc
add
gs
mov
mov
mov
add
out
mov
add
lods
mov
xor
inc
add
add
stc
and
add
mov
outsb
push
add
mov
mov
mov
xchg
test
and
mov
sbb
fnsave
fdivr
movb
xchg
jge
add
cwtl
cmp
push
addb
mov
add
pop
xor
icebp
outsl
adc
bound
mov
iret
rolb
jbe
dec
aad
or
cli
rolb
dec
cmp
stos
popf
cmp
jbe
cmp
inc
mov
mov
adc
inc
add
jle
add
add
mov
cli
xchg
inc
add
jo
rcll
add
mov
loope
bndldx
add
jge
add
xchg
add
test
and
xor
jo
testb
add
jbe
and
mov
mov
jno
add
mov
cmp
lahf
into
mov
fcoml
add
sahf
add
mov
nop
add
std
pop
pushf
ds
es
or
xor
les
xchg
and
and
jmp
jae
add
add
pop
or
addb
movb
inc
add
and
mov
xchg
add
jbe
pop
test
iret
lea
inc
add
hlt
add
mov
add
sti
sub
add
mov
bound
mov
jne
mov
add
data16
xchg
xchg
add
ds
and
add
inc
lret
adc
push
inc
add
add
repz
testb
insb
jp
les
pop
pop
imul
jecxz
test
stos
je
cmpsb
add
add
repz
sub
inc
cmp
add
fidivrs
nop
add
ds
pop
cmp
add
dec
dec
mov
add
add
mov
cmc
jl
push
jp
addb
xchg
and
dec
mov
dec
pusha
add
arpl
add
mov
add
test
nop
add
dec
nop
add
fwait
push
cmpsl
add
sub
addb
std
rolb
addb
fldl
arpl
fwait
cmc
pop
dec
inc
lea
in
gs
inc
aas
xchg
mov
add
adc
out
pop
xchg
add
cmp
shll
add
scas
push
add
add
mov
add
sbb
add
dec
mov
lock
push
add
mov
mov
adc
add
test
jl
or
add
add
gs
adc
cltd
ja
push
out
popf
add
pop
repnz
testb
pushf
stos
or
sbb
cmp
add
lret
add
mov
jne
add
rolb
ja
sbb
ret
cmp
add
push
dec
jns
mov
add
or
xlat
arpl
mov
add
mov
mov
add
inc
mov
add
mov
movb
add
add
inc
add
add
mov
mov
out
call
cwtl
aad
enter
jle
add
add
int3
outsl
hlt
add
std
jge
jno
xor
lds
add
sahf
dec
mov
mov
add
add
add
xchg
add
mov
push
adcl
jge
add
fisttps
add
push
add
push
mov
and
stos
xchg
add
add
add
or
les
xor
add
mov
jmp
dec
movsb
add
lahf
or
mov
add
arpl
pop
mov
testb
add
or
popa
add
mov
xlat
pop
repz
add
add
stc
push
outsl
mov
mov
xor
subl
ljmp
and
xchg
or
mov
ja
dec
jae
push
add
add
in
add
out
add
in
and
mov
popf
divl
add
xlat
cld
clc
fs
repz
xor
pushf
add
stos
rolb
inc
fsubrl
insb
cld
stc
or
icebp
movb
add
sti
xchg
das
in
xor
xlat
in
xchg
xchg
inc
add
mov
ljmp
dec
rolb
test
or
pop
ret
add
repz
popa
mov
mov
lods
mov
pop
dec
cwtl
mov
push
add
pop
std
xor
popa
mov
add
fiaddl
gs
fdivrl
mov
push
std
mov
dec
pop
push
add
add
add
jg
in
repz
mov
enter
pushf
std
jae
add
sub
sbb
je
rolb
cmp
pop
push
add
add
out
adc
push
add
popl
daa
mov
push
add
add
mov
add
add
sahf
cmp
insl
inc
add
jnp
add
xchg
xchg
mov
add
push
jns
mov
push
add
sub
dec
mov
push
add
adc
dec
xchg
add
jle
add
add
pop
mov
pop
lods
sahf
cwtl
loop
dec
dec
lds
add
add
rolb
aas
leave
pop
mov
mov
dec
fucom
add
scas
add
jno
lret
lret
pop
and
add
pop
iret
outsl
pushf
lcall
push
add
jp
aam
cmpsl
jbe
cmpsb
add
mov
addb
add
add
and
add
add
sub
enter
dec
sbb
pop
leave
gs
data16
mov
leave
xor
add
mov
and
mov
add
sarl
add
out
fisubrl
jmp
inc
adc
scas
das
xlat
bound
mov
add
rolb
lea
cmp
sbb
mov
or
mov
aas
lods
mov
fwait
popa
scas
imul
cmc
jbe
insl
inc
add
add
mov
inc
rolb
dec
xchg
add
lock
sarl
pop
cmp
add
add
inc
add
add
cmp
aad
add
jmp
and
jg
add
fcmovu
mov
cmp
jbe
add
jno
jp
rolb
lods
jecxz
ds
lret
sbb
jbe
add
mov
adc
lods
pop
mov
inc
pop
add
add
rolb
adc
push
dec
cmc
push
add
les
push
add
lret
js
add
add
lret
cmp
add
and
adc
cli
in
add
add
add
rolb
outsl
ret
xor
add
leave
aad
add
out
fnstcw
add
adc
sti
sub
cmp
mov
addb
sub
or
mov
add
lret
call
test
mov
mov
sbb
movsl
jge
xchg
add
add
push
add
out
sbb
leave
adc
add
mov
and
mov
lods
out
xor
dec
arpl
push
rorl
mov
stc
push
add
loop
out
cmpsb
add
push
jne
add
dec
sub
test
insb
data16
push
add
mov
mov
add
out
sub
and
out
add
cmp
add
add
test
ret
pop
sbb
aas
pop
or
fadds
imul
mov
add
mov
add
stc
and
add
aam
xor
lret
xlat
addb
pusha
add
in
loope
mov
or
add
pushf
int3
or
add
sbb
add
lea
and
insb
stos
loopne
jnp
xor
add
add
jecxz
xchg
add
add
cltd
xchg
xchg
or
popf
adc
mov
add
dec
mov
add
mov
add
out
cmp
testl
sub
cld
add
add
testb
pop
or
xor
mov
cmpsb
add
inc
pop
jg
add
push
add
add
add
add
dec
rol
movsl
paddw
cmp
mov
stos
pop
xlat
or
add
dec
or
add
dec
ss
test
repnz
or
adc
add
mov
mov
add
arpl
add
add
addb
add
dec
cld
jbe
sahf
push
addr16
pop
loop
fimuls
mov
outsb
push
add
dec
jmp
lahf
ret
mov
add
mov
clc
dec
pusha
add
add
push
addb
outsl
addl
ja
or
into
rolb
stos
les
arpl
add
mov
loope
ja
sbbl
icebp
adc
aam
popf
jbe
jmp
aas
into
sub
or
mov
or
add
sarl
add
add
movsl
push
lods
imul
jne
les
inc
mov
add
mov
inc
pop
loopne
or
and
ja
mov
mov
mov
mov
dec
rep
add
mov
dec
jne
inc
ret
lret
insb
inc
xchg
and
lret
jae
add
dec
push
aaa
cmpl
add
aaa
and
out
mov
jo
out
test
jmp
add
je
aad
mov
add
add
mov
xchg
add
add
add
add
add
testb
jmp
add
inc
add
mov
loop
enter
movsb
add
fnstcw
fnstsw
or
push
int3
loopne
in
in
sub
cmp
imul
mov
add
les
cli
ficoml
add
add
add
add
popf
xchg
add
jae
mov
stos
mov
xor
push
rolb
lods
in
push
add
scas
repz
push
cmp
testb
push
add
cmpsb
add
sub
jmp
nop
add
imul
dec
addb
movsl
mov
nop
add
stos
cmp
jle
popf
cmpsl
frstor
rolb
rol
mov
mov
sbb
out
xor
jle
or
add
lds
fimull
mov
add
mov
add
add
flds
sub
jmp
add
mov
movsl
dec
mov
dec
mov
mov
stc
call
and
lahf
fdiv
cs
cwtl
jg
add
jne
insl
push
add
and
add
fcomp
mov
hlt
add
call
add
add
add
xchg
add
add
mov
jp
xchg
jg
into
add
mov
in
add
add
ljmp
mov
mov
out
jbe
mov
dec
idivl
mov
add
ffreep
test
jmp
add
imul
idiv
stos
iret
out
addl
fcomip
add
push
insl
dec
mov
addb
pop
add
mov
mov
insl
das
cmp
push
and
mov
mov
xor
xchg
add
hlt
add
mov
jp
inc
std
insl
lret
add
mov
add
inc
add
add
jp
xchg
or
ret
add
mov
test
adc
adc
mov
repnz
scas
xor
sub
addr16
add
fstpl
sbb
add
stos
mov
addb
lahf
repnz
mov
push
add
addb
gs
xor
sbb
jp
add
mov
addb
push
push
add
dec
ss
mov
mov
loopne
dec
das
mov
pop
addb
jg
push
or
jl
add
lret
push
add
xchg
add
xor
jp
cld
test
push
add
iret
mov
add
sub
add
or
xor
in
outsl
sub
add
loopne
clc
daa
and
in
jne
cmp
cmp
sti
or
scas
and
cltd
add
test
mov
pop
cmp
jns
leave
sub
mov
inc
add
add
or
nop
add
cmp
add
add
repz
xchg
add
sub
adc
rolb
mov
xor
add
mov
add
rolb
adc
add
push
js
add
lods
adc
loopne
dec
out
xchg
sbb
rolb
jg
cltd
inc
add
add
inc
pusha
add
xchg
xor
cld
fnstenv
mov
add
xlat
push
outsb
mov
test
and
push
gs
sti
or
popf
xor
test
testb
add
and
and
stc
add
dec
imul
dec
arpl
jo
push
xchg
sbb
add
add
add
int3
sti
pop
nop
add
lret
addr16
adc
add
mov
movups
push
add
lea
add
add
enter
sbb
push
add
and
cmp
dec
js
sub
lahf
ret
test
pop
movsl
jp
xchg
mov
into
iret
movsb
add
mov
pusha
add
sbb
push
frstor
push
push
mov
in
inc
in
pop
in
mov
add
cmp
hlt
add
fidivrl
cmp
aas
test
pop
movsb
add
hlt
add
xor
out
add
addr16
add
icebp
and
sti
push
add
add
pusha
add
das
pop
lea
inc
adc
rol
fwait
inc
xor
in
mov
push
add
pop
and
mov
push
add
push
fistpll
rep
lea
jg
xor
inc
add
add
loopne
into
out
sub
inc
dec
mov
pusha
add
das
ds
add
add
add
add
xchg
pop
jno
pop
outsb
cmp
xor
xchg
add
add
jle
xor
xchg
pop
mov
add
enter
and
add
add
add
mov
cmpsb
add
add
cmp
rolb
les
pop
pop
push
ret
add
add
scas
mov
and
mov
inc
add
roll
leave
xor
mov
fidivrl
cmp
add
xor
sub
rol
mov
jne
add
movsl
movsl
sahf
adc
adc
out
nop
add
push
add
mov
cmp
push
nop
add
pop
pop
mov
push
arpl
xchg
leave
jnp
lock
enter
add
add
movsl
jmp
nop
add
test
aad
fcmovbe
add
sahf
sub
cmpsb
add
and
mov
fidivrs
andl
addb
and
stc
and
mov
loop
and
adc
testb
je
fistpl
inc
add
dec
mov
rolb
cs
lea
add
jg
cld
test
data16
adc
cli
notl
clc
pop
into
loop
and
mov
add
stos
or
push
add
sub
in
mov
stos
and
das
addb
mov
lock
add
add
jg
add
add
out
lods
push
add
rolb
sub
push
shl
add
mov
arpl
sub
sbbl
movsb
add
out
and
sub
jge
mov
and
mov
into
pand
jg
sbb
movsl
test
adc
icebp
pop
leave
dec
ret
add
add
jp
and
cmp
add
imul
add
push
add
add
add
fcmovu
or
add
add
add
dec
sub
add
sbb
add
xchg
cmp
rolb
push
add
or
and
stc
mov
rolb
cltd
pop
push
add
lret
mov
stc
or
loopne
xchg
lods
mov
sub
ljmp
cmp
cmp
xchg
xchg
add
in
aam
rolb
in
mov
cmp
mov
rorl
repnz
add
sub
in
sub
push
pop
lea
add
std
ret
mov
sub
aad
dec
rolb
bound
mov
fdivrp
push
add
out
pop
aad
add
mov
lods
in
jg
lock
add
add
lahf
lcall
sub
xchg
add
add
add
add
sbb
add
mov
xchg
adc
dec
add
inc
jbe
fmull
add
ror
dec
mov
push
add
add
out
in
lcall
mov
je
fwait
xchg
add
add
mov
add
add
mov
insl
sbb
popa
inc
mov
push
add
lret
mov
lcall
add
add
aad
add
jns
movsb
add
add
lcall
pop
mov
mov
mov
repz
mov
mov
add
pop
inc
lea
mov
add
pushf
jmp
adc
mov
mov
jno
in
pop
ret
and
mov
dec
mov
pop
mov
cwtl
add
add
mov
inc
add
inc
add
mov
add
in
stos
adc
dec
jns
jge
sub
mov
sub
jle
xchg
mul
add
push
pop
out
jecxz
int3
push
jp
pusha
add
add
in
pop
dec
int3
lods
jnp
cmp
push
jbe
in
hlt
add
dec
mov
loop
in
pop
mov
xchg
in
in
cmp
movsb
add
jo
inc
add
jb
pop
sbb
inc
xchg
fwait
lahf
fisubrs
and
mov
cltd
xor
fidivs
jle
add
clc
ret
rolb
xchg
add
hlt
add
ret
test
pop
jmp
or
push
mov
fsubs
add
push
dec
nop
add
add
mov
data16
add
std
repnz
add
ret
daa
cmpsb
add
add
aam
sbb
mov
int
movsl
bound
mov
add
fstpl
push
mov
push
adc
stc
cmpsb
add
add
sub
add
hlt
add
ds
inc
add
mov
add
dec
icebp
rcll
in
mov
mov
jmp
mov
cmp
dec
xchg
push
add
pop
xlat
sbb
add
loope
add
add
sbb
testb
add
add
sahf
xchg
movsb
add
and
sbb
in
fcmovb
add
punpckhbw
pop
insl
gs
add
mov
sub
mov
add
sub
push
jo
testb
add
popf
hlt
add
sub
mov
mov
add
lds
lds
dec
xor
adc
add
mov
mov
pop
and
incb
add
dec
test
sub
add
cli
loop
daa
add
mov
push
ss
cmp
push
ret
test
add
add
lods
mov
add
sbb
testb
add
add
in
in
jb
lods
cli
push
add
inc
add
cld
popa
mov
sbb
inc
add
jg
dec
dec
sbb
jge
jmp
mov
sti
jp
rolb
add
sahf
cmp
add
add
add
add
add
jnp
lds
xchg
add
inc
add
mov
mov
cld
push
add
add
loope
add
test
call
xlat
or
mov
pop
leave
dec
add
cmp
insl
ja
add
mov
add
push
mov
adc
and
dec
rcll
aad
add
rorl
add
sub
jb
fbld
call
mov
add
add
push
dec
lods
movsl
ret
cmp
add
jnp
add
subl
and
add
add
add
adc
rol
and
mov
and
imul
and
mov
lret
mov
repz
add
mov
clc
mov
or
pushf
mov
repz
mov
add
cmc
addb
rolb
add
movsb
add
out
into
insl
cli
leave
add
dec
or
add
out
mov
loop
out
mov
outsl
fldt
testb
add
addr16
inc
add
and
movsl
cld
jl
add
sbb
add
mov
lahf
jge
add
add
addb
add
inc
into
in
jae
add
movsb
add
mov
repnz
add
sub
cmpsl
ret
addr16
jmp
or
andl
cmpsb
add
add
sub
ja
addb
or
add
js
hlt
add
cmp
and
roll
inc
inc
add
les
int
add
or
lods
sahf
mov
jp
out
adc
add
add
push
jno
add
std
ja
sarl
add
and
add
mov
jl
add
add
mov
add
add
leave
pushf
dec
inc
add
add
cwtl
push
add
mov
push
add
imul
movsl
cmp
mov
add
push
push
pop
sbb
imul
cmp
add
add
push
xchg
incb
mov
in
test
add
add
in
ljmp
movsl
vmulpd
ret
or
inc
add
mov
repnz
xchg
inc
add
add
xchg
js
jbe
rcll
sub
cltd
adc
fnstsw
add
cmp
inc
add
test
xchg
add
and
xor
jg
popa
repnz
pop
and
pushf
or
lcall
mov
scas
mov
add
addb
add
mov
add
adcl
add
add
adc
fcomps
or
inc
imul
jg
and
mov
xor
jb
adc
imull
aam
sbb
cld
leave
mov
mov
push
sbb
add
outsb
jb
mov
sbb
jae
jmp
aad
add
and
inc
add
xchg
add
add
add
add
add
pop
inc
lods
out
imul
mov
cmp
mov
jmp
add
in
lret
movb
into
cmp
mov
mov
xor
stos
adc
mull
add
xchg
add
add
mov
dec
inc
int3
mov
adc
movsl
push
mov
sbb
add
aaa
in
mov
movb
outsb
or
movsb
add
add
xor
add
sub
imul
fldt
mov
add
mov
and
mov
mov
inc
aam
stos
scas
popf
das
cli
fildl
add
ljmp
js
xor
add
mov
jge
add
xchg
add
xchg
add
ret
push
dec
in
add
shll
stc
dec
dec
addb
add
mov
adc
cmp
dec
or
pop
addb
fldl
add
add
add
jnp
movsb
add
test
and
adc
addb
sbb
add
jae
or
jns
std
pop
cmpsb
add
rolb
icebp
sbb
jmp
xor
push
sub
pop
mov
mov
add
dec
add
mov
add
add
add
nop
add
jle
add
add
add
xchg
add
xor
pushf
xchg
aam
rolb
xchg
sbb
outsl
rolb
jl
es
repnz
xor
add
add
add
stos
mov
test
mov
out
mov
jns
add
sub
add
add
and
push
cltd
sbb
xor
mov
lret
outsl
addb
scas
jl
add
imul
adc
xor
out
sti
cmc
and
js
xor
mov
cmp
xor
xor
stos
ja
jl,pn
mov
add
add
fcmovu
sar
cmp
lea
call
scas
adc
or
add
xchg
add
addr16
mov
add
dec
jne
pop
jecxz
aam
movb
sub
outsb
adc
inc
mov
sub
sbb
add
add
daa
in
bound
mov
add
jg
add
or
add
ficomps
je
pmaxsw
add
add
mov
rcrl
mov
add
add
add
add
add
ja
mov
pop
rolb
adc
add
jp
sbb
mov
mov
jne
mov
and
mov
xchg
add
insb
outsl
xlat
data16
dec
cmp
add
out
addr16
fidivrs
imul
mov
push
jo
and
mov
negl
arpl
add
mov
add
xchg
add
add
inc
mov
mov
add
test
xchg
add
mov
jmp
push
add
test
or
lea
mov
xchg
leave
pop
and
add
sub
inc
add
dec
into
xchg
add
leave
sbb
dec
cmc
bound
mov
lea
add
inc
sub
add
xchg
add
test
sub
mov
add
add
idivl
xor
lock
or
add
test
adc
into
inc
fiaddl
add
aam
jo
inc
push
xor
add
add
cmp
xor
jns
push
add
add
pushf
push
add
lret
jge
sbb
icebp
cmp
add
pop
stos
mov
add
outsb
ljmp
hlt
add
add
in
pop
lea
sub
jmp
cmp
add
dec
sbb
sub
jb
mov
jne
add
testb
les
loop
xchg
add
dec
push
out
clc
rcr
insl
notl
imul
mov
add
mov
fnsave
fldcw
xlat
es
in
gs
pop
fwait
loop
push
add
mov
jno
lahf
ja
enter
sub
insl
xor
out
add
add
jno
rolb
addb
xchg
add
cmc
addr16
add
cs
fwait
pop
rolb
out
xchg
inc
push
add
mov
add
add
movsl
int3
push
add
ja
jle
ds
add
dec
out
fcoml
std
lahf
in
xchg
mov
inc
add
add
add
mov
addb
jns
out
scas
xor
mov
lret
repnz
cmc
jl
add
mov
movsb
add
add
mov
add
add
mov
lahf
loope
add
jae
dec
pop
testl
insl
and
mov
add
sahf
add
mov
push
add
cli
leave
mov
mov
add
das
mov
adc
add
leave
jae
add
int3
rolb
push
add
sbb
popa
push
add
xor
add
mov
lahf
jge
jns
pop
int
inc
incb
test
rolb
xor
push
add
stos
cltd
and
add
xchg
repnz
xchg
mov
mov
mov
enter
pop
inc
cmc
repnz
sub
or
push
stos
mov
les
inc
dec
pop
mov
daa
xor
and
repnz
add
and
mov
dec
sbb
add
mov
lret
js
add
dec
sbb
mov
jno
add
cmpsl
cltd
cmc
les
adc
adc
js
add
mov
add
cmp
jb
imul
xor
rcrl
dec
popl
sbb
add
push
lds
pop
dec
movb
or
mov
add
mov
add
xor
fprem
imul
frstor
lods
cmp
addb
push
add
xchg
les
xor
loope
insl
dec
dec
repnz
fnstenv
hlt
add
add
add
insl
add
aas
adc
jno
dec
add
mov
add
jg
mov
add
cli
and
add
add
sub
add
push
dec
lret
add
jns
mov
pop
mov
ret
add
cmpsb
add
sub
push
pop
addb
add
inc
add
jo
push
add
mov
mov
add
mov
pop
cmpsb
add
mov
fcomps
das
inc
add
push
add
movlps
mov
loop
fs
addr16
loop
idivl
test
jl
add
mov
add
jg
mov
je
xchg
sbb
push
pop
js
add
aas
cwtl
incb
test
fildll
fisubrl
xlat
loopnew
rolb
add
add
add
nop
add
mov
inc
hlt
add
add
clc
cmp
lcall
add
inc
add
add
cmp
and
mov
out
sbb
leave
xchg
add
pushl
add
rolb
add
int3
aas
xchg
cli
mov
ficompl
data16
nop
add
add
fidivrl
or
xchg
add
mov
enter
add
add
jp
test
inc
inc
dec
hlt
add
add
icebp
loope
ret
add
test
add
or
pop
sub
js
xchg
orl
pop
or
cmp
dec
hlt
add
mov
lods
shrl
adc
or
lahf
jecxz,pn
lret
lcall
add
icebp
addb
clc
jge
xchg
or
insl
mov
add
add
add
and
mov
push
add
mov
lahf
int
add
add
loop
testb
add
mov
sbb
inc
add
scas
outsl
xrelease
add
pop
loope
xor
test
add
bound
mov
add
pop
addr16
sub
add
sub
xchg
add
pop
sbb
xchg
pop
outsl
and
lret
inc
and
into
rcrl
mov
dec
dec
cmp
adc
pop
pop
dec
roll
add
add
sub
call
shll
jnp
add
mov
jecxz
xchg
in
sbb
mov
dec
adc
and
repnz
add
sbb
cmp
fsubrs
add
or
jecxz
mov
push
push
cmp
xchg
add
add
aam
push
add
add
insb
jl
rolb
cmp
add
adc
ljmp
and
add
jns
mov
add
mov
add
mov
push
add
add
inc
add
jo
inc
hlt
add
add
int
add
movb
jo
pop
addb
sbb
mov
cmp
rolb
repnz
mov
mov
pop
dec
imul
in
loope
mov
add
insl
mov
pop
xor
repnz
outsl
lcall
cwtl
into
into
adc
leave
mov
fincstp
push
xchg
add
pop
jge
add
je
mov
sbb
pushf
push
add
jns
jecxz
push
add
lods
outsb
pop
add
add
inc
mov
sub
xor
add
xchg
orl
add
cwtl
adc
mov
dec
xor
xor
xchg
push
add
cmp
dec
shll
dec
mov
daa
cmp
iret
inc
jmp
test
insl
adc
fbstp
les
mov
add
mov
jnp
fucomp
xor
push
mov
mov
xor
or
cld
mov
nop
add
stos
pushf
adc
add
add
fldt
fcomps
cmp
xchg
add
add
cli
sub
popa
divl
data16
loope
lcall
mov
icebp
push
add
int
add
mov
xor
and
push
add
jp
add
outsl
inc
add
mov
or
add
lods
dec
push
add
add
data16
inc
std
sti
dec
adc
pop
adc
jge
inc
add
mov
push
pop
cs
rolb
fiaddl
mov
xor
mov
sbb
cs
add
pop
mov
lds
add
xlat
mov
mov
push
xchg
cwtl
dec
mov
inc
mov
cs
add
cs
adc
push
add
sub
add
aad
add
add
mov
add
adc
sti
adc
jo
rdmsr
add
ret
add
mov
or
pop
sub
add
call
sbb
add
and
movsl
in
pop
sub
add
mov
js
add
loopne
mov
pop
rcrl
psubsb
xor
adc
and
out
add
rolb
lock
ss
repnz
rcrl
movb
cmpsb
add
add
andl
add
add
and
mov
hlt
add
xorl
sub
add
mov
sub
sbb
add
push
mov
add
call
sbb
out
leave
out
pop
cwtl
in
and
and
out
add
jo
xchg
inc
add
add
je
pop
jns
and
mov
out
inc
xor
out
jg
add
test
lret
add
add
mov
aas
stos
fstp
and
mov
jle
add
jno
add
je
int
decb
mov
inc
add
xchg
add
stc
repnz
add
mov
cltd
inc
addb
xor
add
adc
cmp
js
loop
sub
or
fisubl
cmp
add
add
std
or
cmp
push
add
aad
and
jmp
mov
aaa
lret
jg
add
and
push
xor
cmp
rep
and
mov
push
mov
das
mov
add
out
lea
xor
pop
testb
mov
jge
dec
shl
add
pop
dec
jns
les
jnp
dec
jl
ret
lret
sub
mov
out
fwait
cmp
out
jmp
add
mov
add
stc
or
sbb
add
cld
mov
and
mov
adc
xchg
add
les
lods
loop
add
xchg
add
sti
and
mov
cltd
jb
lcall
xchg
add
sbb
pusha
add
add
and
jne
lock
add
mov
insl
pop
or
add
das
out
and
fsts
add
iret
enter
add
enter
das
inc
or
movsb
add
push
test
in
inc
add
add
add
jg
sbb
add
pop
bswap
jbe
popa
shrl
jecxz
sub
mov
add
std
popa
dec
jns
jae
movsl
ja
leave
pop
addl
sbb
add
jbe
mov
sbb
push
inc
mov
adc
pop
push
addb
and
mov
add
or
out
data16
scas
nop
add
mov
lea
pop
mov
push
add
int
add
cmc
adc
push
add
imul
ja
add
add
add
mov
outsl
dec
jnp
vmovhpd
lea
shr
repnz
loopne
sbb
mov
jmp
adc
jnp
jno
fisubl
add
leave
sub
or
add
and
mov
aas
sbb
fsubrl
xor
dec
mov
adc
and
mov
push
add
fwait
cld
sbb
add
fisubrl
imul
fnsave
xor
shll
mov
or
imul
jmp
out
pop
out
and
mov
cmp
add
xor
cltd
jns
add
add
xchg
push
pop
xor
add
cmp
addr16
addb
add
fwait
rolb
pop
dec
dec
loopne
pop
inc
pop
xor
sub
xchg
jmp
pop
sub
repnz
mov
pop
insb
rolb
or
jge
mov
pop
stc
mull
ret
mov
and
mov
insl
dec
test
add
adc
xor
push
mov
hlt
add
movsl
sbb
lea
jnp
add
add
mov
add
pop
xchg
rolb
adc
lahf
cmp
add
push
add
mov
inc
add
add
cli
ds
fwait
sahf
jo
and
add
mov
insl
aaa
jo
cmp
dec
out
mov
sahf
rolb
adc
pusha
add
test
push
in
dec
xor
push
add
push
xor
pop
add
mov
inc
loopne
fadds
sub
loope
add
repz
in
mov
add
mov
mov
xor
and
js
icebp
jle
push
add
into
dec
fmuls
jb
imul
xchg
pop
sub
test
or
repz
ss
fwait
cmp
add
or
add
jecxz
and
mov
mov
add
dec
xor
inc
dec
fildl
mov
add
add
add
add
push
push
add
add
test
add
add
and
cs
add
mov
sub
add
add
sbb
cmc
mov
clc
rolb
jecxz,pt
add
inc
add
add
mov
jb
dec
adc
rolb
fsubs
xchg
add
rolb
jb
scas
add
mov
add
pop
pusha
add
loop
fiadds
jbe
dec
in
lret
xchg
add
mov
or
cmp
add
mov
push
pop
jns
adc
pop
adc
mov
lret
jbe
sarl
shrl
add
xchg
enter
dec
fisttps
movsl
cmp
xor
add
mov
loopne
rolb
pop
mov
add
add
test
roll
add
mov
add
add
add
in
fwait
pop
xchg
pop
jl
sbb
add
outsl
test
and
lock
mov
daa
arpl
in
add
inc
add
mov
insl
repz
pop
fadds
push
mov
pop
dec
sbb
add
mov
add
in
xchg
enter
mov
add
mov
mov
add
add
aad
repnz
pop
insb
lods
andl
push
add
mov
idiv
ret
ja
inc
add
add
add
int
daa
outsb
cmc
int3
jmp
push
rolb
sub
add
add
mov
mov
add
cmp
jno
movsb
add
add
unpckhps
add
stos
addl
mov
push
jmp
dec
stos
push
adc
call
fidivl
sti
xchg
add
inc
inc
inc
add
shll
add
dec
lds
mov
add
into
rolb
hlt
add
ret
int3
jno
mov
mov
mov
sbb
cmp
add
lret
iret
loope
in
add
add
mov
cmp
lock
testb
add
imul
loop
int3
jecxz
add
add
repnz
push
add
popa
cmp
stos
movb
iret
xchg
add
xor
out
enter
mov
add
cmpsb
add
push
add
mov
mov
add
add
cltd
xchg
sub
add
sub
daa
add
dec
shll
imul
add
add
shl
xchg
ljmp
movsl
jge
stos
add
arpl
add
imul
add
pop
insb
dec
into
cld
push
add
out
hlt
add
add
or
adc
mov
xchg
add
push
add
loopne
icebp
gs
add
mov
add
mov
mov
add
add
add
add
add
inc
pop
testb
jo
leave
sbb
popa
fisttps
add
or
imul
add
cld
mov
mov
mov
add
and
divl
add
pusha
add
inc
cmc
std
inc
add
or
jae
xchg
add
add
enter
pop
mov
sub
icebp
ret
adc
add
pushl
imul
lret
add
rolb
lret
ljmp
cld
sbb
dec
addr16
add
mov
mov
add
cld
outsl
movsb
add
add
in
sbb
add
aam
dec
pop
cmp
sbb
mov
mov
xchg
cmpsb
add
mov
fbstp
add
mov
jg
xchg
testb
push
add
addb
or
lahf
popa
jle
adc
add
inc
jmp
add
lcall
and
lret
mov
xchg
std
mov
xor
mov
add
xchg
add
mov
push
add
sahf
rolb
dec
jmp
mov
xchg
mov
xor
add
and
nop
add
sbb
pop
mov
fsubl
imul
outsb
mov
pop
or
add
in
xchg
cmc
pop
mov
add
jecxz
shll
sub
dec
jl
int
inc
dec
ss
xchg
or
dec
cmpsl
dec
hlt
add
mov
stos
xor
loope
push
rolb
aaa
pop
dec
mov
in
test
clc
fists
add
outsl
adc
cmc
insb
jmp
ljmp
push
jmp
cs
adc
out
fadds
jle
sub
repz
and
mov
mov
push
fdivrl
leave
pop
jl
mov
insb
hlt
add
sub
dec
push
xchg
add
add
add
add
pop
repz
add
fsubl
add
mov
ja
add
jp
mov
les
mov
test
xchg
stc
and
mov
inc
add
add
and
push
sbb
cmp
aam
inc
add
and
mov
gs
jne
data16
add
jmp
in
add
add
add
add
rolb
add
mov
jns
mov
xor
add
add
add
or
mov
subl
jg
sub
add
pop
stc
pslld
mov
add
sbb
push
jno
add
ret
popf
leave
dec
repz
push
pop
ficomps
aaa
xchg
add
jge
cmpsl
xchg
add
pushf
clc
jo
adc
mov
pop
xchg
add
mov
push
rolb
mov
push
add
mov
stos
sbb
outsb
aaa
add
push
test
add
mov
add
add
pop
loopne
test
xchg
mov
mov
cmp
cmp
inc
add
pushf
or
add
add
xchg
xor
add
or
add
leave
insl
jmp
xchg
add
iret
cmc
mov
paddd
add
add
inc
add
jmp
xor
insl
nop
add
add
mov
xchg
inc
add
dec
push
lret
jb
sbb
add
add
sbb
movb
lds
js
fdivl
mov
sahf
pop
fnstcw
mov
add
xchg
sbb
push
mov
nop
add
hlt
add
mov
testb
jno
add
int3
push
add
add
push
cmp
adc
jne
cwtl
loopne
stos
xchg
testb
xchg
add
insb
mov
xor
add
lcall
add
sub
add
pop
add
mov
sbb
xchg
cmp
mov
cltd
and
mov
mov
cmpsl
cltd
mov
add
jne
in
rolb
data16
add
into
cwtl
cmc
jb
hlt
add
out
or
xor
arpl
dec
aaa
pushf
push
add
xor
and
dec
out
pop
mov
mov
add
cs
cmpl
cld
lods
nop
add
stos
fcmovb
jo
stos
xchg
adc
xchg
add
mov
cmc
mov
mov
mov
pop
pop
loop
repnz
mov
leave
hlt
add
add
addb
push
mov
insb
iret
nop
add
add
sub
add
cmp
rcll
sub
addb
icebp
cli
pop
sbb
add
add
shll
add
and
add
mov
mov
xor
or
pushf
in
and
mov
jmp
mov
xchg
les
xchg
mov
shll
out
or
add
add
add
movsl
add
add
inc
add
cld
or
fmull
cwtl
add
loop
dec
das
rolb
pop
lock
out
jne
add
cmp
add
add
enter
loope
add
dec
mov
add
sbb
or
mov
xor
ret
cmp
aas
mov
mov
jg
imul
adc
xchg
cmp
xchg
add
fstpl
cmp
or
test
fdiv
add
mov
stos
push
sub
aaa
cli
icebp
sti
sub
add
and
add
or
test
int3
je
shrl
rolb
jg
les
inc
cmp
mov
inc
add
test
lret
adc
into
add
dec
repnz
aaa
xchg
pop
xchg
xchg
scas
add
mov
cmp
add
mov
add
das
aaa
bound
mov
repnz
jp
push
xchg
out
jbe
idivl
ja
aad
add
iret
loopne
xchg
shll
fimull
mov
lcall
mov
inc
add
add
push
cmp
add
lahf
xor
add
testb
add
iret
insb
jb
xchg
imul
add
push
add
add
iret
adc
sub
xchg
iret
adc
push
add
push
add
add
add
int3
in
mov
cmp
add
jbe
bound
mov
add
sub
dec
in
scas
adc
add
pop
call
nop
add
mov
add
mov
and
fmull
das
xor
mov
add
lock
pop
jecxz
inc
add
jmp
add
add
add
add
aaa
mov
clc
inc
je
mov
add
outsl
clc
subl
icebp
icebp
push
ja
or
mov
add
cmp
add
daa
inc
inc
stos
jnp
add
xchg
jg
sbb
sub
int
add
xchg
repnz
fmul
sub
add
inc
pop
adc
js
sub
imul
repnz
test
jle
repz
popa
pusha
add
movb
ja
cmpl
frstor
leave
lret
pushf
dec
movl
add
data16
add
mov
cmp
rolb
add
inc
lock
imul
mov
cld
aam
cwtl
push
add
and
stc
arpl
xchg
aaa
rolb
inc
add
xlat
das
lods
lds
cmpsb
add
push
add
sahf
into
insb
add
mov
jle
add
fldcw
jne
add
pusha
add
add
mov
add
test
adc
and
pop
mov
jge
add
je
pop
lods
stc
gs
add
jl
add
rolb
xor
push
sahf
stc
test
in
call
negl
xchg
add
push
pop
jbe
jge
cmp
mov
push
push
add
add
out
push
add
lods
pushf
add
mov
mov
add
add
cld
cs
pushf
cmp
add
cld
in
popf
addb
mov
push
push
imul
jmp
add
movsb
add
xor
and
data16
sub
sbb
popa
cmp
push
jae
sahf
stos
mov
cmp
movsb
add
push
add
mov
iret
testb
cs
push
imul
ret
jl
xchg
jbe
push
adc
add
lods
mov
xchg
add
nopl
int
inc
add
popf
and
mov
clc
lods
das
add
pop
lock
mov
cmp
add
push
add
and
dec
or
testb
fs
decl
or
ljmp
out
jns
popa
and
add
xchg
add
add
mov
add
jl
add
loopne
jae
rolb
repnz
cmp
push
sub
je
cltd
sti
cmp
add
mov
aam
stos
adc
outsl
ficoms
je
fld
std
rolb
mov
add
add
add
div
add
mov
out
and
ret
pop
fcmovnb
jecxz
movsl
push
xchg
pushf
daa
lock
add
add
pop
cltd
xchg
add
fsubrs
add
lahf
aaa
cmp
mov
add
push
add
repz
xchg
xor
stos
cli
jae
add
sbb
aaa
xor
fstl
add
sbb
imul
add
inc
or
add
mov
js
dec
addb
int
cltd
lea
scas
test
add
sub
push
add
add
mov
pop
or
add
sub
pop
xor
add
imul
adc
dec
adc
add
xchg
daa
lret
add
sbb
add
lahf
cmp
mov
add
cltd
sub
xchg
mov
add
add
add
mov
or
xchg
push
pushf
ds
sub
lahf
rolb
repnz
fcmovbe
add
roll
fsub
adc
inc
add
scas
into
fsubrl
mov
inc
add
add
add
bound
mov
das
dec
cmp
xchg
les
cli
inc
add
adc
sbb
xchg
push
add
sbb
loopne
xchg
add
mov
rolb
repnz
mov
xor
mov
or
add
add
dec
setg
scas
test
andl
addb
xor
ljmp
mov
cli
pop
add
out
inc
pop
test
stos
cmp
movsb
add
adc
mov
insb
sbb
in
add
add
or
add
cs
mov
add
push
lret
push
add
popf
mov
cmp
cli
sub
cwtl
adc
and
mov
adc
mov
hlt
add
mov
add
mov
dec
and
bound
mov
call
cwtl
xchg
mov
repz
call
push
add
aas
icebp
adc
dec
add
mov
mov
pop
fcmovu
push
decl
push
je
cld
repnz
sbb
xchg
jp
jg
iret
ret
xchg
pop
inc
add
lods
push
push
movb
xchg
add
data16
add
fldlg2
jmp
rolb
movsl
push
add
data16
add
sbb
sbb
add
add
add
mov
add
lret
mov
lods
and
cmp
sub
sbb
loope
add
push
add
mov
data16
inc
test
add
push
add
add
add
mov
add
add
loopne
mov
xor
sub
scas
pop
push
and
mov
add
add
jbe
cmp
mov
add
mov
add
test
push
sbb
insb
out
mov
stos
aaa
cwtl
dec
xchg
dec
cmp
mov
ret
dec
es
add
add
jne
inc
enter
add
cmpsb
add
popf
jae
clc
and
add
hlt
add
push
add
mov
mov
xor
sub
pop
add
movb
add
add
add
add
add
inc
jmp
jg
add
push
sbb
add
scas
std
sub
add
dec
push
add
int3
inc
add
sbb
out
add
scas
lock
add
in
mov
add
xchg
jle
pop
xchg
sbb
add
xor
nop
add
add
dec
add
mov
stos
bound
mov
mov
add
fldln2
push
into
xor
add
add
sahf
bound
mov
or
in
add
jns
add
push
add
adc
add
sub
add
pop
jl
shrl
push
mov
testb
inc
js
add
dec
scas
cmp
mov
stc
add
mov
jmp
mov
out
fwait
into
ds
add
or
sub
push
test
cltd
in
xchg
add
xor
add
xor
cmp
inc
adc
xor
mov
add
pop
dec
pop
lock
lret
mov
pop
add
movb
adc
rcrl
fmuls
add
mov
add
cmp
mov
add
jl
push
pop
out
sub
lret
or
icebp
aam
clc
jbe
cltd
adc
sbb
dec
sbb
jg
jecxz
add
add
dec
sub
add
sbb
or
add
add
pop
pop
imul
dec
cmp
and
add
mov
add
scas
fldl
scas
insl
iret
das
test
xor
add
add
add
push
pusha
add
inc
add
mov
add
clc
repnz
jae
out
addl
sub
add
repnz
jae
xor
pop
adc
push
add
ret
repnz
jae
dec
orb
add
add
jns
popa
add
mov
xchg
ret
push
orb
clc
repnz
jae
andb
add
dec
leave
clc
repnz
jae
add
inc
mov
clc
repnz
jae
cwtl
pop
add
add
mov
xchg
ret
xchg
add
add
rolb
sbb
nop
jmp
add
push
add
add
clc
repnz
jae
movsl
sbb
imul
add
clc
repnz
jae
add
add
and
inc
add
dec
mov
mov
or
jae
fs
add
add
jmp
repz
repnz
jae
add
add
subl
push
mov
xchg
ret
movb
add
clc
repnz
jae
orb
imulb
sbb
repnz
jae
add
movb
lea
clc
repnz
jae
add
pop
call
test
mov
add
add
add
fisttpll
mov
cmpsb
add
add
fwait
cld
nop
jmp
addl
jl
test
pop
add
fwait
cld
nop
jmp
pop
add
or
clc
repnz
jae
add
mov
add
repnz
jae
movsl
add
sub
nop
jae
push
add
test
cld
nop
jmp
add
dec
inc
inc
in
mov
clc
repnz
jae
dec
aas
add
add
mov
nop
jae
into
add
add
add
dec
mov
clc
repnz
jae
add
ja
sbb
add
clc
repnz
jae
or
sbbl
inc
clc
repnz
jae
sbb
push
add
mov
clc
repnz
jae
test
add
xor
cld
nop
jmp
xchg
add
scas
popf
add
push
mov
xchg
ret
dec
add
andb
repnz
jae
into
add
mov
and
push
shl
clc
repnz
jae
inc
movsl
mov
inc
imul
add
add
clc
repnz
jae
add
out
mov
jl
sbb
repnz
jae
ja
movb
xchg
add
add
fwait
cld
nop
jmp
add
imul
dec
push
clc
repnz
jae
add
inc
add
mov
xchg
ret
mov
add
add
jbe
xchg
add
xor
rorb
add
repnz
jae
lcall
in
xor
clc
repnz
jae
add
loope
movsl
dec
test
into
movzwl
clc
repnz
jae
add
add
call
roll
xchg
ret
jnp
add
add
jmp
add
add
pop
inc
fwait
cld
nop
jmp
add
addr16
xor
add
mov
xchg
ret
jbe
addb
jecxz
add
inc
adc
cld
nop
jmp
add
xchg
mov
rep
push
mov
xchg
ret
add
orb
mov
xchg
ret
cwtl
addl
add
mov
pop
clc
repnz
jae
dec
into
dec
dec
out
add
mov
dec
sbb
add
adc
add
mov
push
mov
xchg
ret
add
add
add
clc
repnz
jae
add
dec
add
sbb
fwait
cld
nop
jmp
movsl
add
push
add
add
add
rep
push
mov
xchg
ret
add
into
popf
rorb
loop
push
mov
xchg
ret
add
testb
add
add
add
add
push
mov
xchg
ret
add
movsl
decl
nop
jmp
popf
jmp
add
jne
clc
repnz
jae
add
add
shlb
repnz
jae
inc
add
dec
testb
call
clc
repnz
jae
dec
add
add
mov
xchg
ret
imul
add
pop
push
clc
repnz
jae
dec
add
add
inc
popf
dec
dec
add
clc
repnz
jae
jecxz
add
xchg
into
fldl
repz
cld
nop
jmp
add
cwtl
add
add
pop
mov
push
mov
xchg
ret
out
jnp
add
fwait
add
push
mov
xchg
ret
andl
add
fwait
cld
nop
jmp
sti
dec
add
addl
add
add
mov
clc
repnz
jae
add
incl
add
cmp
repnz
jae
or
subl
mov
push
mov
xchg
ret
mov
push
clc
repnz
jae
jbe
incl
mov
push
mov
mov
add
add
add
mov
mov
fwait
cld
nop
jmp
jnp
lcall
inc
add
xor
add
movsl
into
divps
adc
out
add
push
inc
mov
add
add
add
push
scas
add
sbb
repnz
jae
rolb
add
push
add
inc
mov
add
clc
repnz
jae
add
pop
test
inc
movb
fists
in
jg
add
add
mov
cs
add
xlat
mov
adc
cmp
pop
add
add
out
add
dec
je
clc
repnz
jae
testb
adc
daa
in
push
clc
repnz
jae
push
idivb
adc
addl
pop
add
clc
repnz
jae
mov
addb
add
dec
xchg
fwait
cld
nop
jmp
add
add
lock
mov
xchg
ret
add
add
insb
pushl
fwait
cld
nop
jmp
add
add
add
clc
repnz
jae
sti
add
add
nop
jae
jbe
add
cld
nop
jmp
add
add
add
nop
jae
add
cmp
add
add
ror
mov
push
mov
xchg
ret
scas
movsl
push
add
add
push
clc
repnz
jae
add
sti
add
xchg
fsubs
popa
add
repnz
jae
add
mov
mov
repnz
jae
movsl
movsl
sbb
ret
mov
clc
repnz
jae
ss
add
aam
jae
decl
nop
jmp
cmp
add
leave
dec
dec
dec
add
clc
repnz
jae
add
add
clc
repnz
jae
dec
add
addb
add
out
xor
push
mov
xchg
ret
add
xor
sbb
fucomp
inc
add
jecxz
push
add
movsl
and
add
aad
add
push
add
into
add
add
add
add
mov
add
repnz
jae
add
add
inc
and
push
mov
xchg
ret
add
add
in
push
push
mov
xchg
ret
add
ss
add
mov
jp
add
clc
repnz
jae
imul
testb
and
mov
clc
push
mov
xchg
ret
out
sbb
push
clc
repnz
jae
mov
inc
dec
inc
mov
nop
jmp
negb
add
dec
add
jbe
clc
repnz
jae
add
add
add
rep
clc
repnz
jae
add
add
dec
add
rolb
ret
add
push
clc
repnz
jae
sub
mov
xchg
add
fwait
cld
nop
jmp
add
add
add
sar
repnz
jae
leave
add
add
push
mov
push
mov
xchg
ret
add
add
dec
add
repnz
jae
add
add
add
shrl
nop
jae
add
mov
ja
call
clc
repnz
jae
addl
add
add
repnz
jae
push
mov
adc
sbb
nop
jae
add
cs
clc
repnz
jae
add
imulb
add
loop
push
mov
xchg
ret
jbe
jecxz
add
mov
and
add
mov
clc
repnz
jae
test
jecxz
add
mov
clc
repnz
jae
add
add
add
mov
clc
repnz
jae
add
jbe
bound
mov
nop
jmp
leave
add
or
dec
imul
add
clc
repnz
jae
add
xchg
aas
push
add
shrl
clc
repnz
jae
test
add
add
add
adc
add
push
mov
xchg
ret
addb
jbe
add
stc
mov
clc
repnz
jae
into
dec
fs
add
push
mov
pop
testl
mov
pop
add
pop
push
mov
xchg
ret
add
adc
mov
add
pop
fwait
cld
nop
jmp
add
shlb
xchg
xchg
adc
nop
jae
jecxz
add
testb
loope
xchg
push
mov
xchg
ret
decl
into
xor
subl
clc
repnz
jae
add
cwtl
xchg
add
push
push
mov
xchg
ret
divb
add
clc
repnz
jae
add
xor
add
popf
lods
push
push
mov
xchg
ret
add
lcall
and
clc
repnz
jae
add
add
fwait
cld
nop
jmp
dec
incl
leave
add
fstp
mov
push
mov
xchg
ret
sub
add
adc
and
push
mov
xchg
ret
addb
add
add
stos
mov
fwait
cld
nop
jmp
xor
into
cmpl
inc
add
add
add
add
add
fwait
cld
nop
jmp
dec
add
add
xorl
clc
repnz
jae
add
and
mov
add
push
mov
xchg
ret
add
movb
add
enter
jae
mov
add
add
popa
pop
jmp
add
movsl
add
into
addb
push
out
add
adc
mov
add
popa
movsb
add
add
xbegin
xchg
add
push
add
movsl
data16
and
xor
clc
repnz
jae
adc
mov
push
pop
mov
push
mov
xchg
ret
add
add
jne
push
mov
xchg
ret
add
fs
add
clc
repnz
jae
dec
add
idivb
adc
add
add
push
dec
adcb
add
mov
in
mov
clc
repnz
jae
add
adc
mov
xchg
ret
jbe
add
sti
cwtl
idivb
rep
fwait
cld
nop
jmp
add
sbbb
sub
sldt
adcb
decl
nop
add
hlt
add
idiv
clc
repnz
jae
add
xchg
jns
add
nop
jae
sbb
sbb
push
out
inc
add
push
add
sub
test
nop
jae
add
int
pop
jae
repnz
jae
jmpw
clc
repnz
jae
or
add
pop
add
clc
repnz
jae
into
lcall
mov
dec
add
mov
add
add
mov
stc
mov
adc
or
repnz
jae
add
orl
inc
sbb
repnz
jae
aas
fldl
dec
add
movsl
cmp
push
mov
xchg
ret
mov
add
mov
push
add
clc
repnz
jae
leave
inc
add
add
clc
repnz
jae
test
add
add
out
push
clc
repnz
jae
add
add
movsl
push
pop
into
outsl
add
clc
repnz
jae
test
add
add
or
jmp
leave
add
push
cmp
je
sub
push
inc
add
add
cmp
lret
clc
repnz
jae
add
mov
add
add
mov
clc
repnz
jae
add
movsl
fs
adc
add
add
add
add
popf
push
call
clc
repnz
jae
add
mov
popa
add
sbb
rcrb
add
sti
add
add
jecxz
movb
call
clc
repnz
jae
add
add
mov
je
repnz
jae
scas
leave
xchg
push
add
clc
repnz
jae
jmp
repz
sub
clc
repnz
jae
add
add
push
mov
jmp
bnd
push
clc
repnz
jae
addb
add
test
pop
cmc
add
mov
push
mov
arpl
add
insl
sbb
adc
add
cmp
rcrb
inc
push
add
dec
clc
repnz
jae
add
add
push
dec
add
adc
mov
xchg
ret
add
cwtl
mov
xor
repnz
jae
add
add
cld
nop
jmp
jecxz
test
add
pop
mov
push
mov
xchg
ret
add
xor
rep
clc
repnz
jae
sub
add
dec
mov
mov
or
clc
repnz
jae
movsl
add
mov
fwait
cld
nop
jmp
add
add
xor
sti
clc
repnz
jae
jbe
dec
data16
add
mov
clc
repnz
jae
mov
add
lea
nop
jae
test
xor
add
push
mov
nop
jae
push
sub
dec
add
inc
add
cmc
fcoml
repnz
jae
mov
dec
data16
push
add
add
stc
movswl
clc
repnz
jae
dec
xor
add
add
push
clc
repnz
jae
add
add
mov
add
clc
repnz
jae
cmp
movsl
xchg
cli
dec
push
mov
xchg
ret
jecxz
xchg
add
add
mov
pop
and
cld
nop
jmp
lcall
addb
add
jmp
add
dec
add
xor
add
add
rolb
jbe
loop
imul
in
inc
add
add
push
addr16
enter
push
imul
nop
jae
loope
add
addr16
add
push
mov
xchg
ret
pop
xchg
add
add
add
ret
fwait
cld
nop
jmp
mov
add
addb
add
addb
add
clc
repnz
jae
mov
add
and
push
mov
xchg
ret
add
loope
stos
es
clc
repnz
jae
addr16
sub
xlat
inc
add
add
push
add
int3
mov
fwait
cld
nop
jmp
dec
add
movb
mov
iret
ret
xchg
ret
add
mov
add
xor
push
mov
xchg
ret
xchg
add
loope
dec
cs
fwait
cld
nop
jmp
xchg
sbb
add
mov
les
xchg
ret
imulb
pop
or
mov
clc
repnz
jae
rcrb
movsl
ja
loop
testb
movzwl
clc
repnz
jae
add
pop
clc
repnz
jae
addr16
dec
add
add
nop
jae
push
movsl
loope
add
ret
mov
clc
repnz
jae
addb
mov
clc
repnz
jae
add
dec
push
shlb
mov
xchg
ret
jnp
add
sub
repnz
jae
dec
movb
add
add
cmp
nop
jae
add
add
add
add
clc
repnz
jae
dec
mov
add
clc
repnz
jae
add
or
add
or
add
fwait
cld
nop
jmp
dec
orb
jge
inc
push
adc
clc
repnz
jae
add
cmpb
repnz
jae
add
addb
and
mov
sbb
add
fwait
cld
nop
jmp
add
sbb
nop
jmp
xor
ss
leave
movsl
into
addb
lods
push
mov
xchg
ret
add
xorl
rep
push
mov
xchg
ret
dec
cmp
add
mov
not
clc
repnz
jae
add
xchg
add
out
test
fwait
cld
nop
jmp
pop
add
push
push
pushl
push
mov
xchg
ret
add
add
push
add
nop
jae
add
or
push
mov
xchg
ret
add
ss
xchg
xor
call
and
add
aas
add
lock
pop
push
mov
xchg
ret
add
addb
add
push
mov
xchg
ret
add
add
cwtl
sbbl
repnz
jae
or
add
push
clc
repnz
jae
add
push
sbb
and
xchg
idivl
ljmp
mov
movsl
aad
and
fwait
cld
nop
jmp
add
add
add
fucomp
add
add
add
dec
cmp
xchg
add
int
jmp
cmpl
add
add
add
or
mov
mov
xchg
ret
inc
dec
jecxz
dec
add
sahf
push
clc
repnz
jae
jbe
fstl
testb
add
clc
repnz
jae
add
add
add
add
repnz
jae
into
add
into
add
repnz
jae
add
popf
andl
arpl
add
dec
andb
addr16
mov
nop
jmp
jnp
rolb
dec
popf
dec
jl
fwait
cld
nop
jmp
cwtl
add
dec
add
lods
push
clc
repnz
jae
inc
add
testb
pushl
and
push
mov
xchg
ret
add
or
hlt
add
sub
clc
repnz
jae
add
ss
jae
add
add
add
jne
clc
repnz
jae
addb
add
add
clc
repnz
jae
cmp
add
add
gs
push
adc
addl
leave
test
add
add
add
mov
add
xchg
movsl
xchg
add
add
clc
repnz
jae
add
add
pop
push
mov
xchg
ret
rolb
add
xor
xchg
inc
je
pusha
add
nop
jae
cwtl
sub
dec
add
push
inc
mov
cmp
inc
add
cmp
add
pop
push
mov
xchg
ret
jbe
add
rolb
stos
jne
clc
repnz
jae
test
add
pop
clc
repnz
jae
add
xor
sub
mov
clc
repnz
jae
add
cld
nop
jmp
into
add
cwtl
jbe
imul
push
push
mov
xchg
ret
add
add
add
cmp
fwait
cld
nop
jmp
dec
mov
add
repnz
jae
add
add
mov
clc
repnz
jae
add
dec
dec
add
mov
mov
adc
repnz
jae
add
add
xor
movsb
add
push
push
mov
xchg
ret
movsl
add
xor
outsl
pushl
clc
repnz
jae
add
sub
cwtl
je
fwait
cld
nop
jmp
cmpb
sbb
add
sti
add
imul
lcall
push
mov
xchg
ret
jecxz
add
scas
jmp
clc
repnz
jae
xchg
add
adc
fwait
cld
nop
jmp
incl
fldl
imul
add
add
lret
xchg
add
lcall
jns
push
mov
xchg
ret
add
leave
imul
dec
pop
mov
fwait
cld
nop
jmp
movb
add
cmpb
movswl
clc
repnz
jae
ja
aas
add
inc
add
repnz
jae
popf
leave
incl
add
add
add
loope
push
clc
repnz
jae
or
add
add
sti
jo
sub
repnz
jae
inc
inc
movb
or
adc
cmp
repnz
jae
add
add
add
imul
add
sti
add
adc
add
out
out
clc
lcall
idiv
lcall
inc
dec
add
add
std
sub
clc
repnz
jae
add
jns
dec
clc
dec
inc
clc
repnz
jae
add
add
into
mov
push
mov
xchg
ret
add
pop
add
add
jge
clc
repnz
jae
idiv
inc
addb
xlat
cmp
add
adc
add
inc
push
xchg
add
outsb
add
clc
repnz
jae
push
add
add
pop
jbe
sbb
cld
nop
jmp
dec
aas
sbb
add
outsl
push
clc
repnz
jae
add
add
sti
push
push
mov
xchg
ret
imul
push
xchg
dec
in
add
clc
repnz
jae
into
add
mov
mov
xor
clc
repnz
jae
leave
adcl
lea
push
mov
xchg
ret
add
test
iret
add
push
mov
xchg
ret
addb
cmpb
pop
push
mov
xchg
ret
sub
movsl
push
add
clc
repnz
jae
imul
add
ss
repnz
jae
add
cmp
fs
add
push
repz
jmp
incl
imulb
push
add
inc
inc
add
add
mov
fwait
cld
nop
jmp
movsl
or
leave
push
dec
mov
aam
xchg
frstor
xor
add
clc
repnz
jae
cwtl
add
nop
jae
add
scas
dec
add
add
add
clc
repnz
jae
xor
fnsave
sbb
clc
repnz
jae
push
add
repnz
xor
clc
repnz
jae
push
add
add
add
mov
xor
add
clc
repnz
jae
sar
push
clc
repnz
jae
dec
or
add
add
clc
repnz
jae
inc
add
add
mov
clc
repnz
jae
add
add
les
imul
xchg
ret
push
add
add
mov
inc
add
dec
dec
orl
mov
fwait
cld
nop
jmp
fldl
add
fs
add
add
hlt
incl
ja
cmpsl
and
jne
clc
repnz
jae
aas
inc
adc
mov
jb
clc
repnz
jae
xor
add
push
mov
xchg
ret
add
imul
add
fwait
cld
nop
jmp
add
add
inc
test
clc
repnz
jae
add
push
add
and
fwait
cld
nop
jmp
addl
sub
das
jmp
leave
addl
add
jnp
xorb
rep
fwait
cld
nop
jmp
add
pop
add
push
add
push
mov
xchg
ret
add
aas
idivl
jae
jnp
add
add
clc
repnz
jae
add
jnp
add
mov
incl
add
cmp
sti
add
push
movb
fs
push
mov
xchg
ret
add
movsl
out
add
loop
adc
mov
mov
xchg
ret
mov
imul
jmp
add
add
pop
add
adc
sbb
push
push
mov
xchg
ret
testb
or
clc
repnz
jae
add
lcall
clc
repnz
jae
mov
add
loopne
popf
mov
clc
repnz
jae
into
add
hlt
clc
repnz
jae
or
add
mov
clc
repnz
jae
add
add
xor
je
mov
nop
jmp
add
or
test
add
mov
mov
mov
xchg
ret
add
dec
add
add
mov
mov
jge
clc
repnz
jae
add
add
testb
mov
clc
repnz
jae
xchg
dec
add
add
mov
xor
sub
fwait
cld
nop
jmp
popf
cwtl
add
add
add
add
div
clc
repnz
jae
push
add
leave
scas
add
and
popl
repz
repnz
jae
add
mov
loope
sbbb
inc
jb
clc
repnz
jae
add
add
add
push
clc
repnz
jae
incl
dec
pop
pop
pop
mov
push
mov
xchg
ret
ss
add
push
addr16
jg
clc
repnz
jae
add
jbe
inc
dec
inc
push
add
mov
xchg
ret
addl
add
clc
repnz
jae
add
add
imul
repnz
jae
addb
call
rolb
out
pusha
clc
repnz
jae
addb
fldl
jbe
add
das
movsb
cmp
clc
repnz
jae
ss
dec
fwait
pop
clc
repnz
jae
addr16
rolb
sti
jnp
mov
mov
xchg
ret
add
and
or
mov
xchg
ret
andb
add
add
repz
repnz
jae
add
mov
jae
add
add
shl
clc
repnz
jae
add
sbb
push
test
adc
push
clc
repnz
jae
add
leave
add
add
mov
push
mov
xchg
ret
loope
movsl
dec
movsl
ja
add
add
repnz
jae
add
mov
repnz
jae
add
inc
add
dec
inc
pop
mov
clc
repnz
jae
add
add
add
push
mov
xchg
ret
cmp
add
pop
add
enter
jae
mov
add
jae
push
mov
push
xor
jae
test
add
add
leave
push
mov
xchg
ret
add
add
add
add
repnz
jae
add
add
mov
push
mov
xchg
ret
push
movsl
ja
add
mov
inc
mov
push
push
mov
xchg
ret
or
add
nop
jmp
cwtl
add
andl
add
add
add
add
ja
xorps
or
add
add
jle
add
or
mov
xchg
push
int3
je
clc
repnz
jae
cwtl
inc
add
sbb
sti
fwait
cld
nop
jmp
test
into
sub
push
xor
clc
fwait
cld
nop
jmp
jecxz
andl
add
fwait
cld
nop
jmp
add
add
or
add
push
add
add
movb
add
loopne
add
mov
add
push
mov
xchg
ret
add
add
hlt
clc
repnz
jae
add
add
mov
fwait
cld
nop
jmp
add
orl
mov
cld
nop
jmp
add
push
adc
pop
push
xchg
aam
mov
xchg
inc
add
call
add
movzwl
push
mov
xchg
ret
add
mov
nop
jae
push
add
add
pop
push
pop
lcall
cmc
decl
add
jbe
test
nop
jae
push
add
push
inc
mov
iret
push
clc
repnz
jae
addb
add
out
dec
xchg
add
icebp
inc
add
add
jecxz
sbb
clc
repnz
jae
sub
add
je
fwait
cld
nop
jmp
adcb
add
cmpsl
outsl
xchg
clc
repnz
jae
sti
popf
add
add
pop
mov
clc
repnz
jae
add
add
inc
jp
fwait
cld
nop
jmp
imul
cwtl
aas
inc
add
inc
mov
cmp
nop
jae
xor
dec
cmp
repnz
jae
add
in
push
add
call
clc
repnz
jae
mov
add
repnz
jae
into
push
jnp
dec
jnp
push
clc
repnz
jae
add
sbb
dec
jne
fwait
cld
nop
jmp
idivb
popf
aad
movsl
cmp
sar
mov
xchg
ret
xor
sti
push
rolb
ljmp
sub
repnz
jae
add
cwtl
into
jcxz
jne
clc
repnz
jae
dec
adc
rolb
mov
jae
add
idivb
add
xor
mov
outsl
fwait
cld
nop
jmp
add
mov
fimull
nop
jae
adc
scas
add
add
or
repnz
jae
into
add
add
cmpsb
add
movsl
lds
xchg
ret
add
fldl
movzwl
clc
repnz
jae
add
lods
jmp
movsl
sti
add
lcall
or
clc
repnz
jae
divb
mov
add
pop
push
mov
xchg
ret
add
sub
dec
jbe
hlt
add
rolb
push
fwait
cld
nop
jmp
add
add
sti
sbb
outsl
loopne
cld
nop
jmp
add
scas
add
add
and
pusha
add
fwait
cld
nop
jmp
add
add
push
add
ja
clc
repnz
jae
xor
add
loope
loope
xor
push
mov
xchg
ret
or
movsl
add
pop
call
clc
repnz
jae
pop
adcb
mov
repnz
jae
add
jbe
scas
push
ret
add
nop
jmp
push
add
sub
scas
add
push
fwait
cld
nop
jmp
dec
add
add
xchg
rolb
add
shl
clc
repnz
jae
inc
push
add
xchg
add
push
mov
xchg
ret
add
into
movb
or
repnz
jae
add
or
cltd
push
clc
repnz
jae
mov
xorb
push
add
add
pop
fwait
cld
nop
jmp
push
add
add
pop
ret
fwait
cld
nop
jmp
add
add
iret
xor
push
mov
xchg
ret
mov
push
imul
pop
clc
repnz
jae
jnp
add
push
dec
push
adc
rcr
inc
add
add
add
add
enter
nop
jmp
add
add
cmp
fnsave
xchg
xchg
sub
fwait
cld
nop
jmp
imul
addb
add
push
add
fwait
cld
nop
jmp
rolb
push
or
dec
pusha
fwait
cld
nop
jmp
cmp
ss
jbe
xor
cmpsb
add
mov
clc
repnz
jae
dec
dec
add
nop
jmp
add
add
add
add
add
nop
jae
ja
add
mov
ret
clc
repnz
jae
add
addb
mov
test
jmp
nop
jae
pop
add
mov
clc
repnz
jae
add
dec
cmpsb
add
cmpl
nop
jmp
into
add
jbe
mov
add
dec
pushl
clc
repnz
jae
add
dec
add
or
sbb
add
add
dec
dec
leave
popf
leave
test
lea
clc
repnz
jae
imul
mov
cmp
cld
nop
jmp
sti
add
lcall
popa
clc
repnz
jae
add
add
into
add
repnz
jae
add
dec
push
ja
dec
scas
nop
fwait
cld
nop
jmp
fs
into
out
xor
jbe
push
add
mov
clc
repnz
jae
add
add
pop
clc
repnz
jae
add
incl
dec
dec
adc
push
mov
xchg
ret
add
sbb
adc
repnz
jae
inc
jecxz
add
dec
outsl
push
clc
repnz
jae
dec
add
imul
add
jne
clc
repnz
jae
adc
clc
repnz
jae
sti
push
add
stos
lods
push
mov
xchg
ret
inc
add
add
add
nop
jae
subb
add
xor
fwait
cld
nop
jmp
mov
mov
addb
add
inc
call
nop
jmp
dec
push
add
in
mov
fwait
cld
nop
jmp
into
add
add
add
cltd
test
fwait
cld
nop
jmp
movb
add
mov
push
mov
xchg
ret
add
push
mov
xchg
ret
add
add
add
xchg
sub
xor
add
fwait
cld
nop
jmp
or
adc
repnz
jae
or
xor
cmp
enter
mov
xchg
ret
out
add
fnsave
jle
push
mov
xchg
ret
subb
scas
ljmp
jae
add
add
fdivr
repnz
jae
add
add
add
cld
mov
fwait
cld
nop
jmp
add
inc
add
xor
je
add
clc
repnz
jae
pop
add
add
add
aad
mov
clc
repnz
jae
test
add
add
cld
nop
jmp
fs
add
add
push
sti
add
clc
repnz
jae
add
add
add
rolb
jmp
add
push
add
add
imul
xor
out
add
add
mov
push
mov
xchg
ret
out
add
adc
mov
clc
repnz
jae
add
ja
addl
mul
clc
repnz
jae
push
fstpl
inc
sub
loope
lcall
add
jle
cs
insb
clc
repnz
jae
xor
add
scas
cld
push
mov
xchg
ret
add
rorb
les
add
add
repnz
jae
add
push
push
clc
repnz
jae
pop
jnp
add
dec
fs
add
aas
fwait
cld
nop
jmp
movsl
add
add
add
add
sbb
ret
sbb
addl
incl
add
add
je
clc
repnz
jae
add
add
clc
repnz
jae
imul
add
test
clc
repnz
jae
add
clc
repnz
jae
add
pop
call
fwait
cld
nop
jmp
fldl
add
mov
clc
repnz
jae
add
add
xchg
add
jmp
add
movsl
loope
add
add
ret
inc
add
sbb
add
sub
nop
jmp
add
add
xor
loop
sbb
in
lcall
cmc
incl
push
leave
add
orl
fwait
cld
nop
jmp
add
add
add
ret
add
add
mov
popf
ss
add
clc
repnz
jae
sti
add
out
pop
jmp
jnp
pop
add
push
add
add
popf
add
jl
iret
or
and
call
add
scas
subb
cld
nop
jmp
xor
mov
jg
fistl
adc
inc
add
addb
add
xlat
arpl
add
arpl
clc
repnz
jae
add
jecxz
xor
clc
add
mov
inc
add
add
add
add
xor
add
clc
repnz
jae
add
pop
mov
fwait
cld
nop
jmp
add
inc
jecxz
add
jg
mov
push
fwait
cld
nop
jmp
add
leave
jecxz
add
inc
add
repnz
jae
push
add
fldl
dec
cmp
inc
add
add
xor
repnz
jae
jecxz
add
xchg
add
repnz
jae
add
add
sbb
sbb
add
clc
repnz
jae
add
mov
clc
repnz
jae
add
push
pop
push
test
add
mov
orl
jae
push
add
mov
clc
repnz
jae
add
add
repnz
jae
add
negb
xchg
add
call
clc
repnz
jae
add
dec
adc
or
inc
add
dec
xorb
clc
repnz
jae
add
add
movb
lods
clc
repnz
jae
add
add
fs
and
repnz
jae
cmp
sub
mov
xor
add
clc
repnz
jae
add
mov
mov
xchg
ret
popf
add
push
add
xor
pusha
clc
repnz
jae
add
and
add
push
mov
add
add
daa
add
add
jbe
push
inc
and
repnz
jae
add
add
add
pop
out
push
clc
repnz
jae
add
add
add
add
dec
push
clc
repnz
jae
sub
add
imul
push
test
clc
repnz
jae
loope
add
sar
nop
jae
push
loope
aas
add
mov
fwait
cld
nop
jmp
add
addb
inc
add
cmp
subl
cli
jmp
add
add
loop
jmp
sti
push
add
cwtl
dec
pop
add
cmp
jp
leave
sub
repnz
jae
movsl
add
out
shr
clc
repnz
jae
add
adc
add
mov
nop
jmp
leave
pop
dec
dec
add
add
int
sti
fwait
cld
nop
jmp
add
ja
add
orl
clc
repnz
jae
add
sbb
push
mov
xchg
ret
add
dec
cmp
repnz
jae
pop
sti
add
popf
ss
push
fwait
cld
nop
jmp
dec
dec
add
add
fldl
sbbl
inc
add
xor
adc
repnz
jae
mulb
mov
pop
clc
repnz
jae
add
add
push
push
add
mov
nop
jae
push
dec
into
xor
dec
xlat
repnz
add
popa
aas
mov
fwait
cld
nop
jmp
add
divb
out
add
mov
push
mov
xchg
ret
xor
add
dec
rolb
movb
outsl
add
clc
repnz
jae
add
add
add
xor
jmp
nop
jae
rolb
push
out
je
clc
repnz
jae
mov
add
push
mov
xchg
ret
into
cmp
sub
xor
addb
add
addr16
dec
add
sbb
mov
or
clc
repnz
jae
addl
and
scas
and
clc
repnz
jae
dec
add
add
add
add
add
xor
clc
repnz
jae
add
dec
add
mov
clc
repnz
jae
dec
add
add
nop
add
les
ljmp
adc
or
inc
push
out
inc
out
pusha
add
aam
clc
repnz
jae
add
aas
jns
sub
add
add
add
push
cwtl
push
push
mov
xchg
ret
add
addr16
push
xchg
clc
repnz
jae
test
add
add
jmp
jae
addl
jg
mull
repnz
jae
add
pop
movsl
pushf
push
mov
add
add
mov
jmp
push
sbb
roll
xchg
ret
jecxz
pop
add
jecxz
std
ret
clc
repnz
jae
add
add
dec
jbe
sub
add
add
repnz
jae
add
sub
leave
push
mov
xchg
ret
sbb
xor
mov
push
mov
xchg
ret
add
orb
call
clc
repnz
jae
addl
inc
add
movsl
add
add
xor
stc
push
clc
repnz
jae
add
jbe
push
cmp
push
roll
xchg
ret
or
add
movb
adc
mov
fwait
cld
nop
jmp
add
add
add
sub
clc
repnz
jae
movsl
add
sub
test
cwtl
jmp
clc
repnz
jae
movsl
dec
ss
leave
add
push
mov
xchg
ret
add
add
into
push
and
mov
add
jb
clc
repnz
jae
push
shlb
add
call
push
mov
xchg
ret
add
mov
add
add
add
dec
add
jno
add
int3
push
and
or
mov
ficomps
test
pavgb
jnp
sub
add
jns
fnstsw
aas
inc
int3
sub
sbb
lcall
jae
mov
or
cli
fdivl
xor
xor
add
loopne
subl
rolb
popa
aad
adc
sahf
or
int3
pushf
sub
jg
push
add
imul
add
lret
xlat
aad
add
add
scas
jae
and
mov
add
mov
jne
adc
out
decl
add
fnstcw
add
cltd
movsb
add
repz
leave
mov
add
add
sahf
push
push
nop
add
dec
repz
mov
push
in
add
add
lods
jno
xor
mov
mov
jb
in
sbb
shl
lea
xor
pop
out
cwtl
mov
mov
into
inc
add
aad
add
or
add
pop
inc
add
add
jle
add
add
out
es
jmp
cmp
add
push
push
aam
cmp
xor
or
add
addr16
pop
pop
and
mov
add
cli
adc
pop
gs
rolb
jmp
bound
mov
add
out
and
cmp
cltd
inc
add
add
nop
add
mov
popa
out
and
cs
add
lods
gs
add
mov
repz
sbb
add
inc
xchg
add
test
sub
add
jmp
push
add
add
add
stc
fmull
dec
sahf
cmc
mov
pop
xlat
lcall
inc
add
add
pop
pop
mov
mov
addb
lcall
pshufw
mov
test
mov
xchg
cmp
addb
ljmp
pusha
add
in
mov
inc
cmp
mov
js
inc
popa
pop
clc
imul
add
dec
mov
repnz
mov
test
or
mov
ret
jmp
mov
inc
add
push
int
cmp
in
mull
mov
icebp
ret
xchg
add
dec
lret
add
add
push
fldcw
add
mov
add
add
add
jae
push
add
rcr
das
pusha
add
rcrl
mov
testb
push
add
mov
sbb
das
cmpsl
inc
jnp
add
inc
mov
add
add
pop
mov
add
fldl
add
mov
jnp
xchg
add
mov
repnz
pusha
add
pop
xchg
add
cmp
rorl
aam
inc
inc
push
je
mov
add
bound
mov
pop
and
mov
sarl
mov
add
add
in
out
outsl
mov
test
js
xchg
xchg
add
movsb
add
adc
shrl
mov
rolb
and
repnz
add
mov
scas
jno
jnp
jge
add
in
bound
mov
add
and
mov
pop
in
mov
xchg
add
add
sub
add
push
add
add
test
add
insb
out
fistps
add
add
push
add
add
lods
lcall
push
mov
ret
dec
cmp
add
movsb
add
jns
out
mov
mov
movb
add
add
mov
gs
add
add
ret
add
cmpsl
cwtl
filds
add
jo
sahf
test
mov
add
andl
sbb
add
mov
add
out
fstpt
test
jns
add
mov
inc
add
iret
lcall
add
lret
and
orl
add
in
xchg
cmp
idiv
rolb
add
sub
sub
cs
add
push
add
push
add
dec
data16
inc
add
add
jge
call
inc
mov
add
xchg
aaa
add
pop
imul
cmp
ja
add
cs
add
cmc
or
clc
cmc
or
mov
hlt
add
xor
xchg
fwait
add
sbb
add
data16
sti
sub
add
push
lcall
mov
add
and
bound
mov
add
add
add
add
jl
xor
add
xchg
add
add
push
add
lods
adc
js
add
xchg
xor
out
pop
push
mov
sub
sbb
push
jne
add
mov
cmp
pop
cmp
sub
xchg
add
addb
add
outsl
or
mov
cpuid
add
add
or
pop
push
jp
jmp
std
and
xchg
ljmp
inc
enter
add
mov
mov
xchg
mov
inc
add
add
ds
sbb
pusha
add
pop
movb
xchg
add
rolb
mov
addb
jae
sub
mov
jmp
out
fwait
call
fnstsw
add
ss
movsb
add
push
cmp
icebp
das
lahf
ja
xor
mov
jo
xchg
add
sub
add
ret
and
mov
add
mov
in
aas
xor
lret
stos
push
push
pushf
mov
cwtl
mov
addl
lods
push
jecxz
add
popf
loope
inc
add
xchg
mov
orl
add
daa
mov
mov
fisttps
mov
mov
in
push
add
je
aaa
pop
mov
mull
scas
cwtl
lods
test
test
ret
or
fidivl
add
repnz
jg
jo
rolb
out
add
sbb
pop
adc
or
imul
dec
ja
add
testl
dec
insl
je
cld
rolb
mov
stc
jmp
lret
clc
add
dec
iret
stc
test
js
or
jl
add
rolb
dec
lcall
icebp
out
or
mov
add
pop
jne
mov
push
cmpsl
imul
add
xor
mov
insb
adc
jb
or
push
add
add
fcmovnu
mov
add
pop
mov
je
xchg
add
sub
add
mov
cmp
test
add
mov
fldcw
xor
outsl
pushf
test
jmp
mov
je
mov
mov
jmp
add
mov
roll
add
fisubrl
push
ficomps
in
inc
repnz
add
add
sbb
popf
rolb
fwait
add
cld
inc
add
daa
mov
cs
inc
sbb
add
add
add
add
cs
mov
xor
mov
imul
outsb
inc
add
or
push
add
filds
add
pop
lret
pop
mov
add
add
mov
mov
movsb
add
add
add
fdivrl
pop
insl
sbb
mov
jo
and
add
test
mov
sbb
jns
rolb
add
jo
icebp
and
or
push
and
add
add
or
std
mov
mov
mov
add
add
sbb
pop
mov
mov
adc
mov
push
add
push
add
imul
add
in
scas
ja
pop
scas
jbe
mov
sbb
xor
xor
pop
test
mov
add
icebp
pop
insb
xor
ja
xchg
push
add
fwait
push
add
sbb
sbb
lret
aas
cmp
insb
pop
sub
addr16
dec
push
add
xor
mov
pop
pop
rolb
mov
lods
stc
mov
lds
aad
xchg
cmc
fdiv
mov
add
inc
mov
add
mov
adc
push
add
scas
roll
push
add
sub
lahf
wbinvd
jl
xor
out
mov
out
popf
mov
loop
daa
test
addb
pushf
cs
add
add
rolb
add
sub
sub
mov
std
out
popa
addb
into
ret
xchg
ja
cmp
xor
add
dec
mov
dec
adc
loope
add
and
mov
mov
add
popf
repz
lds
xchg
pop
mov
cmp
push
add
sbb
inc
add
jmp
or
test
add
mov
pop
push
add
add
ds
out
cltd
sti
xchg
test
cli
push
add
add
mov
cmp
add
add
add
inc
add
mov
mov
or
add
and
sbb
xchg
add
aas
sub
pop
andl
sbb
pop
mull
add
add
insl
aaa
aam
pushf
push
add
xor
jns
jl
cmpsb
add
add
out
testb
xor
test
leave
ret
or
jbe
xchg
rcll
jecxz
add
inc
cmp
cld
cmp
call
int
add
dec
cmp
add
add
dec
filds
shl
pop
lret
out
mov
jmp
add
sbb
mov
iret
jnp
out
mov
out
cmp
add
and
mov
das
cld
push
popf
jp
add
in
dec
aas
inc
add
xor
std
inc
add
add
mov
jp
dec
iret
mov
mov
add
or
xor
add
xor
and
adc
test
add
inc
repz
cmp
aam
stc
sbb
add
add
das
push
add
rolb
roll
add
and
mov
add
out
pop
mov
mov
and
mov
rolb
xor
and
jo
add
mov
pop
jl
in
js
sub
add
loopne
or
mov
add
add
mov
add
cmpsb
add
std
in
jbe
jne
add
add
pop
bound
mov
jnp
add
add
mov
dec
ja
data16
add
add
mov
mov
add
jg
in
fmull
add
add
stc
daa
stos
loop
mov
lret
sti
ret
jg
add
xchg
add
mov
pop
fstl
lea
push
add
movb
add
add
inc
xor
pop
clc
sub
mov
add
mov
sbb
repz
jl
add
pop
test
jb
scas
in
mov
add
sub
je
sbb
push
add
xchg
xlat
ficoms
xlat
lcall
in
aad
add
fiaddl
add
stos
aas
jmp
push
sub
cmp
aam
arpl
add
insl
adc
cmp
add
xchg
js
out
mov
push
pusha
add
rolb
pop
mov
ds
add
rolb
lcall
add
add
add
xchg
sbb
test
jl
sub
mov
fs
sub
add
out
into
fwait
jl
mull
cmc
sub
inc
add
mov
add
fimull
mov
sub
gs
out
add
or
aad
sti
add
mov
fidivrl
add
jbe
dec
adc
pop
xor
adc
sub
aam
sub
or
add
pop
push
add
gs
add
dec
popf
inc
movb
sub
ror
add
sbb
xor
add
pop
movb
inc
add
xor
adc
roll
mov
cli
adc
aam
cwtl
rolb
add
icebp
mov
adc
mov
add
int
mov
xchg
inc
add
icebp
cwtl
mov
inc
add
pop
arpl
mov
add
add
ja
lods
repz
cmpsl
popl
and
test
or
or
jl
out
jmp
lds
mov
fimull
sub
add
inc
add
lods
movsb
add
cs
or
insl
mov
adc
add
mov
dec
push
add
shll
lods
pusha
add
add
add
add
cmp
add
xlat
jno
les
xor
xchg
test
je
sub
add
jo
mov
ficoml
inc
cwtl
testb
aam
add
sti
movsb
add
addb
pop
rolb
adc
jbe
cmpsl
cmp
or
add
ret
push
add
movntq
insl
or
pop
pop
aad
out
sbb
js
dec
sub
push
add
add
cmc
pop
sub
mov
test
or
data16
jl
add
dec
test
add
push
add
add
mov
push
xchg
movsb
add
gs
sbb
xchg
lret
test
pop
pusha
add
pop
testl
add
add
in
mov
inc
leave
or
push
add
jmp
jmp
inc
in
push
add
pop
out
stos
cltd
xchg
rolb
mov
push
add
push
add
add
or
mov
dec
mov
push
jne
adc
jle
ss
aas
addl
add
out
pusha
add
mov
popf
inc
add
adc
into
lds
add
repz
aaa
cltd
inc
mov
pop
hlt
add
add
pop
or
add
ljmp
add
add
mov
dec
inc
and
mov
mov
add
add
pop
icebp
push
add
add
in
and
add
or
mov
jno
insl
lds
insb
add
sbb
push
add
movsb
add
xchg
add
dec
jno
add
add
push
add
cli
mov
sub
pop
f2xm1
add
sub
in
call
cmp
aaa
mov
ja
add
ret
addb
add
ja
test
mov
dec
mov
add
mov
outsl
jbe
jg
push
add
mov
mov
adc
push
add
add
add
out
dec
addb
cmc
jo
sub
xchg
push
add
mov
add
mov
pop
mov
push
add
rolb
pop
jge
add
movb
add
sub
fcomip
jnp
add
add
sti
mull
mov
add
xchg
add
mov
add
add
add
xor
fmull
mov
add
int3
cmc
addb
and
adc
mov
call
cmp
fidivrs
add
push
fsubrp
xchg
jbe
ss
jns
xchg
push
addb
inc
add
push
rcr
add
add
mov
aad
add
jl
add
test
daa
mov
outsb
js
xchg
xor
or
sbb
sbb
ljmp
jmp
xchg
add
daa
mov
jns
push
push
jle
cmp
add
mov
ljmp
add
xchg
add
mov
push
push
scas
push
jl
add
add
add
cmp
add
add
aas
hlt
add
je
mov
jg
lock
pop
pop
pop
lret
cmpsb
add
movb
or
mov
add
mov
push
loopne
addb
hlt
add
xor
add
add
cli
mov
pushf
int
hlt
add
fcmovnbe
add
add
add
push
jae
xchg
add
add
add
sbb
sbb
add
cli
stos
xor
cmp
mov
or
out
mov
fsts
cmpl
add
mov
in
lret
rolb
jnp
add
add
ja
add
or
pop
or
lcall
add
in
add
jge
add
movsl
mov
lcall
mov
ficomps
sub
add
out
addb
cltd
call
ja
enter
pushf
adc
ret
dec
pop
addb
add
add
add
inc
add
add
add
pop
push
add
mov
inc
sti
mov
fs
xor
mov
test
adc
test
jg
pop
or
add
add
pop
call
sti
lea
mov
mov
pop
jg
mov
mov
icebp
lods
dec
mov
mov
cmp
pushf
lcall
outsb
and
mov
xchg
add
out
es
test
and
add
movsb
add
mov
inc
add
inc
add
or
add
xchg
loopne
dec
xchg
add
push
into
pushf
pop
test
add
or
mov
push
rolb
fwait
push
push
dec
mov
add
or
push
dec
scas
dec
rolb
out
jp
add
add
pop
inc
outsl
cmp
and
les
or
jns
adc
lds
add
lock
mov
add
popa
sar
mov
shll
add
pop
add
roll
jb,pn
adc
rorl
add
add
andl
pushf
mov
loop
mov
pop
ret
sub
imul
mov
in
sub
cmp
add
data16
cmp
push
cmp
jbe
mov
cmp
cwtl
mov
add
addb
rcll
pushf
mov
fwait
or
jge
xchg
add
sub
add
mov
add
add
loopne
xor
mov
rolb
cmp
add
add
fwait
scas
sahf
or
add
stos
sbb
dec
mov
add
push
dec
inc
jne
fstpt
add
adc
lahf
jge
rolb
dec
testb
mov
lock
jmp
rolb
pop
dec
cmpsl
mov
add
mov
ror
xor
insl
xchg
add
addr16
add
mov
packssdw
dec
pop
adc
pop
add
in
mov
mov
add
and
mov
inc
add
add
lea
xchg
stc
leave
dec
jp
aas
inc
lds
adc
add
aam
js
in
mov
mov
add
mov
popf
sbb
mov
add
fiaddl
and
mov
ds
mov
rolb
mov
enter
add
add
mov
jge
sub
add
add
mov
push
rolb
pusha
add
addb
jbe
leave
cmp
mov
add
add
sbb
mov
jg
mov
hlt
add
ljmp
inc
imul
jb
addb
mov
movsb
add
movsb
add
insb
jae
mov
xor
push
add
mov
out
aas
cwtl
cmp
add
push
add
mov
cmp
cmc
adc
mov
add
bound
mov
addb
add
cltd
push
add
mov
enter
inc
add
add
testb
js
add
shl
add
cmpsl
cmp
iret
mov
movb
lret
push
cmp
add
jmp
test
stc
sub
push
add
xchg
mov
xchg
add
add
sub
movsl
push
xchg
add
jge
xchg
add
rolb
adc
inc
add
lds
jge
add
add
stos
and
ret
adc
cs
add
inc
dec
add
cmp
jns
xchg
divl
loope
cmc
pop
pop
xor
rolb
add
fnsave
adc
adc
subl
xor
add
fcoms
add
ljmp
rolb
jle
les
add
cld
add
mov
popf
test
or
mov
add
add
and
add
add
mov
data16
loope
imul
mov
add
add
add
inc
dec
inc
mov
pop
mov
rolb
sti
lock
hlt
add
push
jecxz
ljmp
add
add
add
add
aam
pop
push
dec
jge
add
sub
xchg
add
std
lcall
add
add
mov
add
xlat
rolb
int3
out
inc
add
push
add
mov
add
cmpsb
add
mov
add
add
fcomps
cmp
cmpsl
xchg
lock
rolb
add
add
xchg
nop
add
push
addb
jnp
adc
fmuls
lahf
dec
or
dec
jo
pusha
add
dec
mov
add
push
mov
data16
mov
mov
arpl
lret
pop
add
mov
in
add
stos
mov
push
add
aam
inc
cmpsb
add
sub
pusha
add
dec
cld
inc
popf
push
add
add
mov
inc
mov
daa
fldcw
cmpsb
add
pop
add
dec
push
jo
fwait
enter
lahf
cwtl
sbb
or
sti
jb
sub
dec
aas
pop
xchg
add
pop
popa
pop
jne
add
add
mov
jge
add
add
in
add
aas
xchg
arpl
mov
sub
pop
insb
jno
dec
add
fstps
add
fisubrl
add
add
insl
loopne
sub
mov
add
scas
roll
mov
out
in
add
das
dec
shr
or
fcmovu
in
sbb
sti
aad
dec
loopne
jae
mov
add
mov
fs
test
fisttpl
add
add
add
jns,pn
dec
aad
jae
or
add
or
and
or
add
ja
in
mov
test
jno
push
out
addb
out
xor
dec
cmp
int3
andl
test
pop
cmp
add
add
add
setns
cmpsb
add
pushf
bound
mov
add
mov
dec
out
daa
cmp
hlt
add
add
add
mov
add
fimull
enter
mov
cltd
add
adc
push
sbb
inc
add
push
add
add
test
cmp
add
push
add
mov
cmp
add
mov
stos
dec
call
sbb
clc
ds
mov
std
xlat
stc
jns
dec
xor
rolb
pushf
sbb
pop
sahf
ret
data16
sbb
cld
lret
mov
adc
scas
and
sbb
fcomps
push
and
fldenv
cwtl
fisubs
push
add
cs
lods
push
add
lock
add
jl
into
cmp
add
push
or
repz
es
call
or
xchg
cmp
stc
add
lock
outsb
xchg
test
sub
add
mov
add
push
lret
add
mov
push
add
push
push
sbb
mov
lcall
sbb
sub
xor
pop
inc
les
push
add
dec
aam
add
push
add
sub
aas
cmp
sahf
imul
mov
fstl
jo
iret
neg
outsb
jnp
jae
mov
or
mov
std
push
add
aaa
repnz
add
add
add
popf
imul
add
fcomp
xor
xchg
add
aas
sub
int
add
test
add
add
jecxz
and
mov
xor
ja
add
push
add
je
fildll
rolb
add
mov
bound
mov
add
stc
rolb
inc
sbb
jge
jb
sbb
add
sbb
push
push
add
testb
mov
pop
hlt
add
adc
xchg
and
push
add
pop
add
jmp
out
stos
movsb
add
cmc
ficompl
rcl
add
adc
ret
mov
sahf
mov
add
aam
push
xor
xor
xchg
push
add
add
rolb
mov
icebp
fnstsw
add
aad
nop
add
test
xor
push
xchg
add
xchg
add
repz
out
scas
icebp
sbb
push
push
add
cwtl
inc
xor
std
and
mov
pop
sbb
cltd
mov
pop
jmp
add
xchg
sub
add
inc
in
out
and
test
xor
rolb
inc
add
add
sbb
dec
xor
stos
cs
and
push
add
std
cli
mov
add
jmp
push
jno
add
mov
mov
jno
outsb
jmp
push
add
xchg
gs
jmp
pop
pop
or
add
jb
push
add
or
mov
add
loopne
pop
sbb
inc
xchg
in
push
dec
inc
xor
add
push
add
je
movb
jns
push
add
mov
dec
lods
cmp
sub
nop
add
rolb
inc
inc
add
add
jae
hlt
add
mov
mov
aaa
cmpl
inc
aaa
out
jnp
daa
mov
push
add
movb
and
mov
rolb
push
adc
mov
and
std
xor
add
add
add
mov
add
pop
fs
testb
outsb
stc
cmp
addb
filds
mov
dec
popa
aam
dec
or
mov
add
mov
loopne
cmp
ljmp
add
fidivl
mov
nop
add
ja
faddl
cwtl
mov
add
jbe
mov
sbb
add
std
out
push
add
xchg
add
test
mov
sub
mov
push
addl
lea
jp
add
add
add
mov
je
popa
or
push
add
xlat
in
inc
push
add
fisubrs
add
mov
enter
out
ja
push
or
add
call
jns
and
xor
adc
lret
sub
std
lds
testb
inc
push
adc
cltd
jl
ds
push
out
mov
jno
shll
cmp
je
or
call
pop
jno
cs
add
adc
data16
add
js
ljmp
add
loope
inc
add
add
je
add
mov
add
dec
lock
outsb
sub
dec
scas
sub
loopne
dec
xchg
mov
push
add
leave
movsb
add
clc
xor
mov
mov
ret
inc
mov
fsubs
mov
add
fnsave
add
add
adc
inc
loop
imul
cmp
sub
addb
add
insl
push
add
wbinvd
clc
enter
rol
pop
fisubl
inc
add
fnsave
in
cmpl
in
push
adc
mov
push
mov
add
add
mov
add
add
add
add
adc
testb
sbb
aaa
ret
jnp
jo
dec
cmc
ds
push
add
push
dec
pop
insl
lods
jp
pop
sbb
call
in
dec
add
add
sub
aam
sub
ja
lea
das
pop
add
push
dec
daa
in
xchg
scas
jb
push
jae
add
sarl
movsb
add
add
jmp
out
add
stos
xchg
add
push
sub
into
xchg
add
sub
ret
inc
adc
popa
out
mov
add
push
lret
das
inc
add
mov
xchg
cwtl
xchg
adc
mov
add
mov
add
mov
add
mov
rolb
or
add
sbb
je
pushf
in
out
mov
dec
or
add
add
movsb
add
mov
jb
cs
fimull
add
dec
dec
ficoms
add
add
add
mov
add
mov
add
add
push
fistpll
nop
add
add
pushf
mov
or
inc
add
sbb
add
jp
add
in
mov
lcall
add
and
push
xlat
sbb
loope
inc
dec
and
inc
add
outsl
into
das
rolb
push
add
mov
mov
add
xlat
les
cmp
xchg
mov
add
lret
fscale
cmc
mov
out
dec
mov
add
ffreep
add
add
add
mov
pop
jbe
add
loope
cwtl
cmp
pop
add
mov
repz
and
mov
mov
in
adc
xor
test
and
mov
loop
cmp
add
pop
rolb
cmpsl
jns
add
xchg
mov
dec
adc
jge
fdivr
add
xchg
lds
pop
push
add
push
add
add
mov
out
insb
or
mov
add
pop
xor
lea
add
lcall
sub
cmpsl
jo
hlt
add
add
add
addl
mov
xchg
push
mov
inc
add
nop
add
add
add
sbb
mov
gs
add
push
xchg
add
mov
add
add
add
fnstenv
out
bound
mov
rcrl
add
mov
push
add
jmp
data16
mov
mov
jo
dec
pop
sub
jecxz
add
xchg
adc
enter
cmp
inc
test
les
neg
adc
push
fwait
inc
ret
cmp
fcmovbe
in
and
inc
movsb
add
mov
mov
loopne
push
stos
aas
mov
jae
mov
fists
lock
addb
test
mov
add
add
cmp
add
cltd
or
rolb
xchg
outsb
pop
out
int3
pop
jno
add
cmpsl
into
adc
add
add
add
addb
daa
jo
cmp
add
add
add
lret
bound
mov
mov
aam
out
jl
add
add
cmc
icebp
cltd
ret
mov
push
adc
add
std
outsb
add
cmp
xchg
push
add
scas
push
add
inc
mov
movsb
add
xor
bound
mov
or
outsb
outsl
mov
mov
inc
and
add
mov
xor
mov
cmc
adc
sub
add
add
mov
js
pop
dec
dec
ret
popf
pop
ds
xchg
add
and
mov
mov
mov
push
loopne
mov
pop
out
mov
pop
aaa
and
inc
insl
iret
mov
fldcw
add
add
jnp
outsl
and
xor
mov
add
mov
add
add
mov
mov
push
fsub
add
pusha
add
jle
add
add
inc
test
dec
ret
cmp
xlat
stc
sub
sbb
adc
jecxz
into
dec
pop
lea
in
aam
cmpsb
add
adc
cmp
test
stos
rorl
add
movb
mov
xchg
add
aam
adc
add
int
push
xchg
outsl
jo
pop
sub
pop
in
stos
pop
ljmp
and
add
arpl
int3
iret
stos
fidivrs
cmp
repnz
jne
das
jno
maskmovq
notl
mov
popa
sub
mov
icebp
or
out
test
add
ljmp
dec
enter
shrl
sarl
lcall
es
add
rolb
shll
add
or
aad
rolb
add
add
inc
movb
xchg
add
add
mov
or
add
jnp
add
popa
add
mov
add
sahf
sub
dec
and
add
mov
popf
aad
insb
data16
mov
jb
inc
pushf
sub
fdivrs
dec
jg
nop
add
add
enter
addb
add
stos
or
push
pop
adc
ljmp
mov
data16
rolb
add
mov
outsl
repnz
aas
sub
lods
fiadds
lds
mov
pusha
add
in
repnz
ds
add
stos
xor
dec
sbb
fs
xchg
add
orl
add
add
mov
xchg
add
mov
add
test
testb
mov
xchg
add
pop
add
fstpt
dec
push
testb
adc
loope
das
das
js
add
leave
dec
in
mov
pop
and
dec
add
pop
jp
and
and
inc
add
pop
jecxz
aam
nop
add
add
data16
aaa
mov
xchg
les
mov
and
dec
arpl
add
add
mov
add
mov
xchg
sub
nop
add
adc
sub
dec
std
and
mov
sarl
cld
dec
aam
xchg
or
add
and
mov
enter
lahf
add
add
add
add
insb
std
xchg
add
adc
sahf
lcall
fildl
add
add
repnz
sahf
xchg
add
fisubrs
stos
pop
and
pop
imul
add
add
pop
in
add
pop
jl
add
add
xlat
add
sub
add
xlat
lods
and
lods
push
add
je
aad
movswl
ret
lds
cs
xchg
pusha
add
push
mov
add
subl
enter
cmpsb
add
fstpl
out
movsl
cs
add
add
adcl
mov
mov
add
test
add
add
add
push
add
sub
testb
xchg
add
mov
and
add
xchg
cmc
mov
sbb
add
scas
paddsw
out
pop
cmp
adc
cmp
pusha
add
inc
add
add
mov
cmpsb
add
jg
pop
clc
loope
add
lock
daa
add
add
repz
cld
cmp
xchg
jge
inc
ss
jl
pop
adc
dec
add
out
call
add
rorl
in
mov
push
jne
add
mov
sti
std
add
sub
mov
adc
dec
outsb
dec
mov
add
mov
push
xchg
add
aas
loope
pop
sbb
mov
stos
mov
mov
add
mov
xor
dec
jg
mov
sbb
pop
test
add
sahf
test
shl
lahf
xchg
xor
add
adc
gs
pop
mov
add
adc
testb
jecxz
mov
add
mov
mov
dec
lods
cmp
add
xchg
add
and
mov
lret
mov
mov
cmp
ds
or
popf
sbb
mov
mov
xlat
xchg
in
fwait
adc
add
add
cld
rolb
sub
xor
jb
add
mov
add
out
lcall
mov
enter
cmpsl
cmp
and
mov
mov
leave
or
mov
test
add
sub
add
imul
out
xchg
add
add
fidivs
rolb
cli
adc
add
jns
call
add
lods
test
pop
xor
jne
dec
inc
fimuls
inc
add
jbe
push
add
dec
inc
add
add
add
pop
inc
add
add
dec
sbb
add
fimuls
push
cmp
mov
mov
inc
add
cli
xchg
out
add
sub
fwait
std
add
push
add
les
dec
loop
pop
cmp
and
jle
add
jmp
add
data16
pop
pop
add
add
pop
movsl
add
add
arpl
in
mov
hlt
add
push
pop
ja
int
add
add
dec
mov
dec
repnz
mov
inc
out
shll
call
add
add
hlt
add
cli
imul
pop
adc
pop
int3
mov
test
pop
fdivrp
pop
pop
nop
add
add
mov
add
xor
mull
fsubrs
xchg
add
je
and
aad
add
add
addb
rolb
add
inc
inc
add
jl
addb
lods
or
jmp
add
add
add
jno
add
loope
sub
add
sub
add
rolb
ljmp
add
dec
cld
sbb
sub
mov
test
push
add
add
daa
lret
cmpsl
fld
add
stos
xor
aaa
lahf
out
add
pop
mov
pop
add
lods
fsubrs
daa
cs
dec
mov
jg
cmp
push
xchg
sub
add
dec
addb
aas
push
push
add
add
xor
add
loop
mov
mov
inc
int3
fsubrs
clc
cmp
in
scas
aam
movsl
nop
add
or
add
sbb
add
add
add
add
enter
xchg
push
add
cs
xor
mov
dec
cmpsl
dec
add
add
testb
jo
jnp
add
into
inc
add
test
jae
add
mov
popf
xchg
add
idivl
jbe
les
sub
sbb
cmp
jmp
mov
push
shl
incb
xchg
add
add
push
add
loope
push
add
mov
cmp
push
add
in
mov
pop
cmpsl
inc
add
rolb
xchg
add
mov
bswap
ret
jle
iret
push
add
add
xchg
add
or
pop
add
mov
add
add
rolb
cmp
dec
push
inc
add
das
push
add
lcall
enter
jne
dec
mov
add
add
add
lods
push
mov
ljmp
js
fistpl
sbb
adc
push
jle
cld
mov
aam
pop
jns
add
xchg
scas
jecxz
add
xor
dec
adc
xor
pop
bswap
pop
xchg
fcomi
add
mov
add
jo
mov
sbb
sbb
popf
shll
icebp
icebp
mov
sbb
cmp
addb
add
add
add
loope
add
add
sub
data16
add
add
mov
inc
add
and
or
test
add
xchg
cli
mov
fcmovnbe
imul
xchg
add
lret
nop
add
add
inc
add
xor
xchg
add
ficoms
popa
inc
sub
add
jmp
push
enter
fimuls
mov
add
jecxz
xchg
add
inc
bound
mov
sub
add
jg
xchg
and
jne
daa
xor
and
add
sbb
push
add
decl
add
icebp
cli
aaa
pop
out
lret
in
cmp
loope
add
sub
jno
sub
and
out
add
adc
sub
movsb
add
add
mov
pop
adc
pop
aam
jbe
sbb
add
lds
mov
or
loope
icebp
rolb
xchg
xor
rcll
add
add
call
sti
sub
sbb
push
add
out
ja
dec
fldt
hlt
add
push
add
adcl
sbb
adc
xchg
add
xchg
add
add
arpl
add
imul
out
mov
mov
mov
mov
sub
sbb
lods
mov
add
clc
int3
data16
xor
adc
add
in
out
mov
sahf
fadd
add
lock
addl
in
jb
outsl
fnstsw
outsb
cmp
pop
inc
mov
pop
rolb
xor
rcll
xor
sub
add
sub
insb
xchg
fstps
add
jnp
testl
sbb
add
imul
inc
add
jo
lret
cmp
mov
add
sbb
ret
loopne
aas
or
push
add
ret
ja
test
enter
incb
or
add
add
cmp
jnp
arpl
andl
add
mov
pop
lahf
add
stc
je
xchg
sub
lds
cmc
aad
jns
add
xchg
pop
or
add
js
add
add
idiv
mov
add
adc
pop
mov
repnz
inc
add
in
add
cmpsb
add
add
push
add
dec
mov
aad
add
cmp
out
add
cmp
stc
addl
in
jnp
add
movl
add
arpl
add
ret
sbb
pop
in
push
and
mov
add
add
add
mov
jae
add
imul
pop
mov
cs
push
ja
xlat
loop
or
call
add
jno
add
rcrl
das
lret
dec
pop
imul
iret
cmp
mov
mov
add
dec
stc
xchg
xchg
out
add
add
imul
add
or
add
outsl
popf
and
test
mov
mov
jne
add
icebp
adc
jne
aam
sub
cmp
cltd
loop
pop
xor
sub
pushf
fisttpl
shl
add
adc
add
pop
mov
rolb
lea
insl
sub
add
das
push
add
xchg
add
add
stos
lock
cmp
loop
xorl
jo
aam
mov
stos
test
add
adc
jb
dec
push
pop
lahf
int3
aam
out
add
push
dec
cmp
dec
xor
jmp
or
aad
adc
testb
movsb
add
add
adc
xor
add
rolb
repnz
jns
dec
dec
sub
inc
sbb
lahf
fbstp
int3
mov
add
push
add
or
add
cmp
xchg
sbb
xchg
inc
out
pop
je
xor
sbb
add
mov
jg
mov
add
fimuls
fsubs
add
int
add
add
add
fs
inc
add
xchg
add
xchg
dec
add
test
add
xor
mov
rcl
addr16
or
pushf
sbb
cmp
pushf
sahf
cli
out
inc
or
ret
add
xor
or
lods
rcll
or
addb
jg
mov
add
ret
mov
pop
sub
and
sbb
ljmp
xor
idivl
add
cmp
ud2
ret
sahf
mov
cs
leave
addl
lret
rolb
lahf
adc
ret
mov
push
xchg
or
addb
pushf
inc
add
popa
pushf
fimuls
shll
fwait
add
dec
rolb
mov
add
les
das
iret
mov
addb
and
ficomps
movl
add
jle
add
scas
ds
addb
adc
pop
out
xor
jns
inc
sbb
inc
stos
adc
rolb
mov
push
add
jp
jne
lods
nop
add
add
add
scas
pop
loopne
enter
adc
imul
jp
add
push
add
mov
adc
fwait
dec
mov
add
arpl
add
jmp
js
add
add
aam
push
add
das
scas
push
add
add
or
add
popf
adc
sub
mov
int3
add
clc
in
xlat
add
test
dec
es
clc
js
jno
test
pusha
add
call
movsb
add
mov
xor
repnz
add
jl,pt
xchg
add
add
add
mov
shll
int
lcall
lds
stc
mov
dec
insl
add
push
bound
mov
add
jp
loopne
je
dec
sbb
mov
mov
test
movb
loope
lret
add
or
add
xchg
add
cmp
add
jae
stos
loop,pt
sbb
add
add
jns
or
ljmp
push
leave
mov
addb
je
in
iret
mov
cmpsb
add
add
icebp
out
test
movb
mov
arpl
add
add
call
dec
aas
int
dec
inc
add
sahf
and
sbb
add
inc
add
shrl
add
sub
jmp
testb
mov
xor
ret
ret
push
test
inc
add
ljmp
add
lea
mov
or
or
icebp
xor
add
add
in
daa
xor
lods
xchg
pushl
pop
lret
add
add
mov
enter
js
mov
add
xchg
add
stos
mov
fists
inc
jno
add
mov
cmp
mov
dec
insl
cltd
add
cmp
add
rolb
add
out
jne
push
hlt
add
ljmp
pop
push
push
add
xchg
add
loope
dec
aaa
xchg
add
ret
movb
cltd
or
add
push
mov
add
dec
cli
mov
pop
sbb
jecxz
in
lret
add
add
mov
loopne
adc
lret
fdivs
addb
aam
pop
or
int3
jb
jo
arpl
test
cld
ds
inc
imul
leave
xchg
push
push
addb
add
cmpsb
add
add
or
sub
pop
ficomps
mov
sub
and
add
ret
pop
mov
add
cwtl
movsl
and
xchg
sub
add
lret
push
lcall
cli
loop
push
pop
aas
lea
pushf
testl
xor
inc
add
push
add
pusha
add
add
sub
packsswb
add
into
aas
pop
mov
test
add
inc
add
sbb
out
movsb
add
add
mov
test
sbb
add
pop
leave
divl
push
add
outsl
mov
pop
loopne
aas
inc
cmp
add
sahf
lods
aas
mov
or
cs
sub
scas
push
add
lods
push
add
addr16
je
and
adc
xchg
inc
add
mov
sub
add
test
pop
inc
add
loope
fildll
dec
rolb
leave
mov
data16
jle
adc
add
mov
inc
add
testb
add
mov
jle
add
xchg
in
mov
mov
outsl
push
add
push
add
sbb
sub
cmp
enter
inc
pop
fcmovb
jo
aaa
cwtl
mov
sub
sbb
popf
inc
movsb
add
add
out
mov
push
add
add
add
or
add
cmp
push
jno
add
fisubrl
cmpsl
mov
lods
inc
pop
cltd
aam
les
mov
or
mov
mov
or
aaa
fisubrl
pusha
add
movsl
push
jns
add
adc
popa
add
les
inc
add
nop
add
out
jae
cmp
cmpsl
test
out
lret
add
ss
add
jnp
mov
int3
or
xchg
jb
pop
fdiv
sub
mov
mov
mov
loop
scas
mov
push
add
add
mov
scas
in
push
loopne
lods
ljmp
loopne
scas
movaps
nop
add
add
pusha
add
add
push
add
mov
add
cmp
add
arpl
add
add
cmp
dec
cli
insb
pop
fdivl
add
add
jge
inc
add
add
add
xor
add
add
add
inc
add
and
mov
inc
add
xor
add
or
lea
movsl
pop
adc
loop
popf
mov
add
jne
dec
rolb
scas
jmp
lock
mov
xor
sahf
and
mov
cli
fisubl
mov
add
add
add
add
out
dec
mov
add
push
add
push
add
jl
mov
arpl
add
mov
push
inc
add
xor
add
mov
add
add
int3
inc
add
mov
jg
add
out
imul
fnstenv
cmpsb
add
jp
outsl
or
add
add
mov
stc
and
push
addb
cmp
mov
mov
add
push
sbbl
cmp
jge
cmp
adc
and
mov
xchg
add
sbb
add
out
and
mov
mov
jns
mov
pop
test
pop
ret
popf
and
jle
add
add
loopne
mov
add
jbe
sub
jecxz
and
int3
push
lods
jmp
mov
sbb
movb
fnstenv
out
push
fsts
pop
mov
xor
push
sub
add
xor
dec
pop
int
das
clc
in
test
add
add
add
pop
or
movsl
jns
pop
fsubs
jg
mov
add
or
push
jp
mov
add
sub
pop
and
insb
jmp
scas
mov
add
ret
fisubrl
xchg
add
outsb
pop
add
add
sub
mov
addr16
add
sub
or
xchg
add
add
and
outsb
in
add
add
outsl
xorl
xor
in
xchg
scas
jbe
add
flds
add
xor
mov
add
ret
lods
cmp
pushf
lret
add
pop
mov
inc
out
or
fadd
jle
leave
xchg
out
ss
sub
xchg
and
mov
add
out
adc
negl
mov
movsl
jo
mov
add
pop
imul
add
xchg
add
js
adc
mov
push
add
dec
lds
inc
add
add
ljmp
jo
cwtl
mov
sbb
repz
add
add
add
pop
stc
jo
jl
add
cmc
loop
add
add
lret
popf
popa
push
lret
sub
mov
mov
jae
add
or
push
add
add
add
mov
fadds
add
add
push
add
les
jne
xchg
movb
mov
push
ja
xor
je
test
add
add
sub
jecxz
ja
test
add
pop
in
pop
or
adc
mov
in
add
inc
mov
add
add
sub
fdiv
push
push
adc
scas
inc
add
mov
ljmp
add
in
icebp
add
sub
add
gs
add
sbb
scas
cmp
xchg
add
push
inc
add
add
cmc
mov
clc
add
dec
test
cwtl
adc
adc
daa
push
add
mov
push
add
cmpsb
add
mov
sbb
dec
test
out
jle
xor
xlat
xchg
sahf
jne
add
inc
mov
inc
mov
xchg
add
add
out
push
loopne
inc
addb
pusha
add
add
mov
dec
inc
js
add
add
or
mov
push
cmpsb
add
add
icebp
je
mov
lret
ret
mov
adc
mov
add
push
add
into
adc
and
cmp
imul
pop
adc
inc
add
add
mov
cwtl
arpl
push
and
lds
lds
push
add
add
jl
addb
fwait
push
xlat
loope
add
sub
pop
xchg
xchg
loopne
xchg
push
sti
jno
add
adc
add
xchg
add
add
jg
out
test
or
add
in
mov
inc
add
rolb
lahf
push
sbb
add
inc
cmp
fisubrl
jne
add
inc
jle
add
mov
int
add
add
jo
addb
add
pop
sbb
fdivs
ror
scas
pop
popf
add
mov
adc
cmp
add
cmc
lea
add
push
add
add
inc
add
jae
xor
dec
mov
cmpsb
add
add
rolb
movsl
sbb
jle
push
add
jmp
rorl
push
add
and
jnp
lret
addl
repnz
add
cld
push
add
add
add
xor
nop
add
fisubrl
aas
gs
dec
push
xchg
add
add
mov
pop
push
add
mov
add
add
add
and
push
and
ds
add
ret
fwait
test
lds
mov
add
clc
add
dec
sbb
fsubl
add
add
xlat
dec
jbe
cmpsb
add
lods
insb
test
in
add
pushf
insl
test
cltd
xchg
mov
mov
add
les
push
add
mov
add
scas
cmpl
and
testl
add
fsubrs
or
scas
or
mov
push
pop
pop
mov
sti
sbb
bound
mov
mov
stos
xchg
dec
and
loop
cwtl
das
mov
out
xor
cmp
add
add
cmpsb
add
mov
add
pop
mov
sbb
add
inc
add
pop
mov
jecxz
xor
fcmovnb
out
mov
movsl
add
popa
inc
add
jae
add
mov
aas
mov
lcall
or
ja
outsl
cmp
add
enter
insl
adc
dec
cli
sub
push
adc
push
add
add
add
sbb
sub
inc
add
inc
add
testb
add
add
fwait
mov
inc
mov
add
push
add
inc
sub
add
jge
mov
out
test
testb
inc
add
add
dec
out
adc
popa
cmp
add
add
scas
pop
push
ljmp
dec
jbe
int3
data16
cmp
and
mov
mov
mov
hlt
add
pop
mov
dec
and
orl
inc
call
stos
lods
pop
or
push
add
aam
stos
test
add
mov
cld
daa
push
scas
xchg
add
inc
or
mov
les
or
dec
int
add
add
pop
rolb
inc
mov
or
mov
add
push
add
add
jg
mov
lahf
loop
dec
negl
add
inc
add
test
stc
jno,pn
add
mov
sub
decb
add
rolb
lods
mov
mov
ds
add
je
jge
test
adc
cmp
dec
jge
add
cmp
nop
add
jmp
add
adc
xchg
cmp
adc
enter
mov
inc
cmp
mov
pop
jge
add
addb
add
add
add
mov
and
mov
jge
fwait
inc
add
outsl
jnp
loop
hlt
add
add
pop
faddl
cmp
fyl2x
mov
rolb
mov
add
add
mov
mov
xlat
add
inc
jbe
int
mov
add
iret
dec
mov
mov
adc
std
adcl
mov
lea
pop
into
arpl
add
int3
out
and
push
hlt
add
add
add
pop
mov
ret
mov
cmc
push
test
outsb
shl
repnz
add
add
add
test
ret
imul
mov
add
cmp
add
add
pop
sub
or
xor
cmp
ljmp
add
push
add
sbb
mov
or
ret
dec
fstpt
outsb
and
mov
push
add
outsb
pusha
add
add
push
add
test
xlat
mov
jb
rolb
addl
cs
pop
testb
mov
xchg
mov
push
addb
sub
sub
push
add
ret
mov
add
loopne
pop
and
mov
xor
xor
mov
sbb
add
add
addb
add
inc
add
fldcw
add
sbb
movsl
cmpsl
mov
add
gs
add
aas
int
push
fwait
sbb
stos
and
mov
and
add
add
pop
jbe
xchg
add
pop
cmc
inc
add
add
add
jg
add
sahf
les
mov
mov
inc
add
pop
sub
int3
sbb
push
add
push
jecxz
push
add
add
mov
ds
je
dec
idivl
ds
pop
dec
push
cltd
push
add
add
das
dec
adc
iret
ret
or
add
mov
out
pop
sti
mov
adc
xchg
add
or
je
mov
pop
cld
xchg
add
pop
add
fidivrs
xor
jl
icebp
jmp
lahf
out
add
add
pusha
add
addb
mov
mov
push
add
add
ret
mov
add
jns
add
add
add
xlat
cmp
xchg
add
add
inc
add
idivl
ds
testb
sub
xor
add
mov
mov
fsubp
add
sub
test
add
aas
cmpsb
add
add
push
add
mov
sti
outsl
sbb
inc
lods
xlat
cmpl
add
add
and
mov
lds
add
push
mov
jb
mov
in
mov
lret
cs
add
movsl
addb
sarl
addb
rolb
add
xchg
add
add
add
lar
mov
jo
sub
dec
out
pusha
add
lea
cli
or
add
test
mov
jmp
push
test
pop
dec
cltd
dec
mov
cld
popa
mov
add
add
clc
xor
add
repz
mov
add
jmp
add
add
out
xor
jecxz
push
gs
mov
jb
call
and
add
fstps
add
add
add
dec
inc
lea
outsb
lahf
pop
loopne,pt
add
mov
add
mov
add
mov
js
mov
shll
movsl
rolb
aas
add
mov
mov
add
mov
adc
push
lock
std
push
icebp
push
add
loop
cs
push
rolb
mov
add
add
mov
mov
icebp
jns
cmp
xor
sti
push
add
xchg
mov
pop
cmpsl
jge
pop
addl
dec
fnsave
mov
add
add
jbe
cltd
push
repz
or
sbb
les
movsl
and
adc
add
mov
out
in
outsb
cmp
jo
ljmp
or
add
push
add
sub
daa
xchg
add
dec
in
push
inc
add
jl
cmp
rolb
scas
jbe
aaa
xor
sbb
das
arpl
add
int3
xor
jb
cmpsb
add
add
ja
out
xor
or
stc
sbb
jg
ss
adc
pusha
add
push
add
in
mov
add
pop
data16
in
loope
add
add
push
lods
cmp
gs
repz
add
and
mov
data16
and
mov
sti
cmp
sbb
or
add
add
add
xchg
cmp
addr16
add
add
sbbl
add
pop
push
xchg
addr16
outsb
pusha
add
lret
test
cmp
addb
sbbl
add
sbb
mov
rol
add
data16
add
dec
dec
hlt
add
or
dec
icebp
lock
test
inc
add
arpl
inc
add
fwait
mov
pop
mov
mov
aaa
push
lret
add
mov
or
xchg
out
out
inc
add
je
pop
and
mov
mov
xchg
out
xchg
bound
mov
enter
xor
dec
popa
add
jb
aad
icebp
mov
mov
add
insb
int
or
jg
movb
push
and
add
sbb
jmp
mov
gs
add
add
jnp
add
push
cli
insl
sbb
addr16
add
bound
mov
add
das
dec
loope
add
lcall
sub
xchg
push
jle
mov
shll
pop
pop
lods
sub
sbb
and
mov
mov
dec
rcll
add
pop
sub
mov
add
inc
add
xor
ljmp
adc
jnp
dec
out
out
jge
addb
rcll
sub
push
add
add
xchg
add
adc
adc
mov
sub
in
pop
addb
movb
or
rolb
and
mov
mov
mov
ds
mov
xlat
add
add
add
dec
bound
mov
mov
insb
clc
pop
das
orl
jmp
sub
int
sbb
test
mov
std
testb
add
add
pop
xchg
add
add
fcmovnbe
add
jecxz
add
add
pop
or
bound
mov
and
mov
add
repz
ret
sub
cmp
add
add
add
testb
add
in
dec
jns
add
mov
mov
add
sub
out
into
hlt
add
lahf
lea
lock
je
bound
mov
mov
add
xor
imul
sub
pushf
hlt
add
add
push
sti
mov
xor
ja
cltd
mov
enter
add
mov
add
add
in
pop
je
stos
fbld
add
mov
add
pop
js
fistps
fwait
add
add
push
add
movb
add
or
pusha
add
add
adc
mov
inc
loop
mov
lds
loopne
dec
mov
add
add
movsb
add
cmp
jbe
lcall
add
imul
and
add
in
iret
push
add
jmp
mov
mov
dec
jge,pn
sti
out
out
pop
in
std
add
rcll
xchg
clc
mov
in
add
fwait
aaa
rolb
jne
aas
xchg
mov
ret
mov
test
add
pop
pop
pop
dec
and
mov
add
push
sbb
jmp
cli
xor
and
mov
adc
mov
inc
add
add
push
sub
mov
add
xor
inc
add
stos
or
pop
fidivl
cmc
mov
push
add
stc
jp
push
je
dec
mov
loope
dec
imul
add
mov
fisubrs
pop
in
jb
fstl
push
popf
shrl
add
adc
xor
lret
add
jnp
cmpsl
mov
mov
arpl
inc
imul
xlat
jl
add
lret
dec
inc
add
add
ja
sbb
lahf
mov
add
imul
testb
ljmp
imul
in
pop
mov
daa
adc
jb
mov
add
push
clc
decl
add
mov
add
add
jp
push
add
pop
dec
cmp
stos
cmpsl
mov
add
push
xchg
add
add
outsl
sbbl
add
movb
cmp
mov
pop
xor
fxch
and
cltd
push
add
mov
lahf
jbe
jmp
daa
mov
call
mov
add
pushf
fidivs
or
xchg
fnsave
push
add
mov
cmc
mov
outsb
adc
ret
testb
add
addr16
add
enter
mov
loope
mov
sbb
add
add
popa
push
add
add
add
add
or
xchg
mov
rolb
call
jnp
decb
mov
mov
add
cmc
and
in
add
aas
addb
mov
jge
xchg
xlat
adc
test
push
pop
testb
add
add
add
aas
lcall
and
sub
imul
mov
add
add
jb
out
xchg
dec
aam
push
add
push
add
xlat
pushl
push
add
addr16
mov
pop
mov
ror
pop
add
mov
add
addb
xchg
pusha
add
dec
jg
add
or
fwait
sti
lea
aam
out
pop
push
add
stos
pushf
aas
mov
in
in
dec
mov
fucomp
repnz
mov
push
add
mov
jmp
or
in
cmp
lret
mov
dec
lods
jge
push
pop
push
add
pusha
add
add
add
addb
mov
aaa
addb
and
mov
push
leave
lcall
inc
add
adc
stc
ret
xchg
flds
push
mov
jns
movb
aaa
sbb
popl
enter
test
lods
sbb
add
ljmp
das
inc
add
hlt
add
pushf
mov
add
pop
mov
mov
popf
push
add
imul
data16
out
sub
push
sub
pushf
adc
cld
out
add
aas
fists
or
and
mov
and
mov
jge
add
mov
test
add
add
imul
les
insl
shrl
jmp
fistpl
inc
add
mov
add
or
insb
nop
add
dec
adc
mov
mov
cmpsb
add
mov
outsl
pop
or
add
mov
mov
out
rolb
sbb
lds
fadd
add
mov
in
into
jmp
xor
push
add
inc
xchg
test
adc
push
add
or
dec
dec
mov
pop
xor
sbb
add
and
mov
enter
add
and
add
dec
nop
add
add
push
cltd
or
add
add
sbb
push
dec
push
add
add
insl
sub
xchg
add
dec
add
sbb
mov
add
add
aaa
add
stos
mov
dec
mov
add
add
ja
or
add
imul
add
sbbl
jno
and
lret
sub
add
movsl
dec
pop
mov
jecxz
add
rolb
ss
cmp
orl
dec
mov
add
or
add
in
mov
inc
add
inc
adc
push
lret
addb
add
int
clc
push
add
cmp
add
or
add
rolb
adc
addps
icebp
insl
pop
sub
dec
cmpsl
adc
inc
mov
mov
jae
xlat
movsb
add
adc
aam
push
scas
xor
add
mov
std
pop
sub
add
cmp
mov
jbe
jns
add
and
mov
addb
mov
add
add
add
pop
cmp
pop
adc
hlt
add
sub
jno,pt
icebp
sub
test
add
mov
jo
rolb
sbb
and
imul
and
mov
adc
inc
add
stos
ficoms
fisttpl
cltd
leave
pop
push
mov
pop
and
addr16
cmp
leave
sbb
add
add
or
sbb
add
rolb
jle
add
bound
mov
lock
xchg
add
gs
add
jmp
add
add
add
jle
loop
cmc
in
cli
add
insb
jo
xchg
add
or
stos
push
stc
pop
cli
xchg
movsb
add
mov
outsl
xor
addb
nop
add
leave
je
adc
xor
outsb
ficompl
inc
add
rolb
push
mov
hlt
add
mov
mov
out
cwtl
inc
add
add
add
cmc
adc
lret
cmp
jns
add
lock
add
mov
sarl
add
sub
add
pop
out
ficompl
inc
add
and
mov
imul
dec
fisubl
add
add
nop
add
add
cltd
cli
popf
cltd
xor
add
add
mov
jmp
enter
cld
mov
xchg
add
loope
es
loope
add
adc
addb
cld
adc
and
mov
fsubrp
mov
jo
out
scas
sub
mov
mov
xor
pop
sbb
add
cmpsl
into
or
into
jo
jg
in
pop
mov
pop
sub
add
add
cmp
cltd
in
dec
sub
cmp
scas
mov
in
addb
aaa
mov
mov
lds
add
fimull
test
pop
xor
add
jp
xor
mov
popa
jns
add
push
add
out
stos
cmc
jns
add
push
lods
sbb
add
ljmp
add
add
adc
sbb
mov
add
fidivl
cld
out
push
add
jle
arpl
adc
add
add
add
add
cld
shll
imul
mov
push
add
addb
loopne
or
add
push
push
mov
bound
mov
add
adc
outsb
and
pop
jae
pop
xchg
add
pushf
sub
cmpsb
add
lock
insb
xchg
inc
pusha
add
sub
or
pop
fisttpll
fisubl
mov
or
add
push
xor
dec
xor
inc
mov
adc
out
mov
add
xor
dec
pop
lahf
fcmovb
add
jge
dec
add
mov
add
add
xor
leave
pop
mov
addb
outsl
leave
mov
mov
mov
mov
sub
add
add
cs
out
dec
mov
jo
dec
and
and
mov
jp
add
pushf
hlt
add
add
iret
and
jno
cmpsb
add
outsb
and
xor
dec
sarl
movsl
inc
mov
rol
add
add
pusha
add
and
add
into
add
sbb
add
pop
cmc
push
sbbl
mov
and
add
inc
pop
jne,pt
add
jge
lcall
add
push
jae
in
inc
pop
sub
mov
add
pop
in
out
fcoms
loopne
pop
insb
lret
xchg
add
add
push
or
into
pop
add
add
xchg
add
lods
std
jmp
cmp
jno
jg
cs
add
data16
push
add
scas
add
in
add
mov
add
mov
mov
lds
pop
sahf
mov
cmpsb
add
dec
or
scas
cmpsl
je
call
dec
addb
adc
rolb
mov
add
add
mov
jb
jmp
aaa
xchg
jl
push
adc
add
add
add
cmp
push
add
add
mov
push
dec
inc
lds
mov
inc
add
and
loopne
sub
add
add
add
vpmuludq
jo
ret
add
mov
add
lods
addb
jmp
add
mov
add
pop
mov
and
mov
les
fucomp
shr
add
add
add
add
add
sahf
pusha
add
aad
adc
or
fmull
pop
xchg
add
call
xchg
add
insb
jp
nop
add
push
jo
and
or
ds
pop
loopne
cmp
dec
mov
cmp
pop
lea
mov
fbstp
pop
lock
add
ret
pushf
data16
add
add
add
add
mov
xchg
mov
lcall
add
xor
icebp
lock
sub
jle
add
loopne
push
add
mov
dec
xchg
add
push
cmc
testb
add
or
mov
dec
sub
add
mov
inc
xchg
addb
std
out
stc
lods
adc
adc
dec
adc
mov
add
inc
cmpsl
call
sub
push
add
imull
add
add
xchg
mov
push
add
add
add
pushf
hlt
add
fdivrl
push
pushf
lahf
cltd
dec
push
pop
cli
add
mov
aas
pop
dec
lahf
jge
add
cmp
sub
xchg
lahf
inc
in
ja
add
add
cmp
cmp
add
add
adc
xchg
push
iret
testb
dec
push
add
pop
cld
xchg
xlat
sarl
ror
imul
and
mov
mov
in
pop
jp
or
mov
lea
xchg
pop
push
int3
mov
mov
mov
enter
add
call
add
in
daa
push
bound
mov
inc
mov
mov
clc
adc
mov
add
add
add
cmpsb
add
jbe
or
add
add
stc
incl
mov
xchg
sub
add
add
pop
xchg
mov
aas
aam
sahf
ja
add
shrl
add
call
dec
and
data16
and
mov
imul
dec
xchg
cmp
add
lods
stc
fwait
dec
xor
loope
lret
add
aam
cmpl
rolb
sahf
cs
xor
sbb
jne
add
add
cltd
add
add
jp
imul
aam
cmp
xor
clc
popa
int3
movsl
movb
dec
add
cmp
add
add
sbb
push
add
push
test
int
dec
push
add
jo
jb
mov
adc
push
add
add
cwtl
call
into
dec
ljmp
add
mov
jno
push
add
add
mov
mov
pop
imul
cmc
dec
mov
mov
add
loop
test
add
mov
sbb
hlt
add
popa
xchg
loop
int3
fstps
lock
mov
sbb
pushf
jg
add
rolb
xchg
imul
mov
mov
add
jb
test
jle
lds
jmp
movsb
add
add
add
jmp
cltd
pop
sub
add
add
add
scas
movsl
cmpsl
pusha
add
bound
mov
std
insb
inc
add
scas
pop
and
cwtl
and
inc
add
addb
mov
xor
mov
ja
add
stos
cmp
std
cwtl
movsl
setl
xlat
or
imul
add
les
arpl
hlt
add
mov
data16
xchg
js
test
out
aad
jno
add
test
and
mov
add
pop
mov
into
dec
daa
xor
xchg
jge
or
aad
add
mov
add
addl
mov
loopne
adc
mov
add
inc
mov
add
mov
add
iret
out
dec
lret
mov
movsl
in
fiadds
mov
mov
data16
movb
adc
cmp
add
test
push
repnz
lods
and
add
mov
mov
add
add
js
nop
add
into
cltd
adc
add
jmp
add
movl
push
cmp
push
add
arpl
jecxz
sbb
fcom
add
add
add
hlt
add
pop
clc
imul
sbb
lds
cmc
lds
iret
cmp
sbb
cltd
mov
mov
das
divl
sbb
push
loopne
cmp
rolb
pusha
add
jbe
cwtl
inc
enter
mov
add
add
loopne
and
aam
movsl
and
pop
loop
or
pop
into
testb
adc
pop
adc
add
pop
xlat
aas
jmp
addb
or
out
mov
add
cmp
add
add
lret
flds
or
add
nop
add
sbb
mov
rolb
add
lret
in
mov
out
sbb
inc
add
mov
mov
add
add
add
adc
inc
xor
fiaddl
rolb
iret
lock
add
or
cmp
add
fimuls
js
mov
out
das
fsts
add
push
rolb
mov
inc
dec
mov
mov
add
or
xchg
add
inc
outsb
push
add
cmp
jmp
stos
push
test
add
enter
scas
pop
push
xchg
add
mov
stos
ret
xor
mov
ljmp
clc
int
xlat
lahf
out
sarl
fs
js
subl
add
mov
mov
data16
push
movlps
shll
xchg
add
incl
add
or
add
dec
cmp
xchg
add
testb
add
inc
sbb
add
mov
gs
cmpsb
add
loopew
mov
adc
adc
dec
jno
xorl
adc
test
lock
rcll
mov
lahf
addb
adc
cmpsb
add
push
add
or
add
addl
add
gs
add
mov
add
clc
loopne
dec
mov
fstpt
loopew
inc
add
add
mov
push
mov
and
pop
or
sub
add
sahf
inc
add
xchg
pop
decl
add
mov
add
js
pop
test
adc
push
pop
psadbw
addb
loopne
test
add
into
out
add
faddl
add
into
sub
cmp
mov
mov
jae
adc
mov
add
lods
sbb
rolb
mov
lds
jmp
stc
ret
stc
ja
ret
imul
add
testb
add
adc
pop
dec
testl
rolb
mov
add
out
cwtl
les
jge
add
dec
inc
add
add
jp
add
testl
add
inc
addr16
fstl
js
fiaddl
adc
test
add
sub
or
xchg
mov
xchg
out
add
fcompl
mov
mov
pop
and
fdivrp
ja
arpl
add
xor
cmp
adc
add
mov
cmpsb
add
sbb
pop
into
rolb
in
push
add
add
add
mov
add
pop
inc
idiv
sub
sbb
add
add
jmp
xor
rcrl
cmp
in
cmp
add
gs
ret
adc
stos
clc
loope
inc
or
add
adcl
jge
add
add
add
fbstp
add
sub
rolb
aas
iret
pop
push
add
cmpsb
add
mov
pop
dec
add
pmaxub
add
add
mov
add
mov
hlt
add
add
cwtl
call
cmpsb
add
popf
addb
maskmovq
add
sub
xchg
leave
lods
pushf
roll
push
add
add
orl
add
testb
das
mov
test
push
pop
andl
testb
add
dec
call
sub
mov
sub
cmp
iret
cmpsl
lods
jl
ja
mov
mov
lods
push
add
add
or
xchg
add
and
mov
cmp
cwtl
xchg
add
lds
add
loop
adc
fstps
xchg
test
jns
add
add
mov
add
fwait
and
jne
cmp
shll
sbb
icebp
js
imul
push
add
addb
add
pop
jne
in
addb
add
out
xor
push
sbb
or
add
nop
add
xlat
sub
jle
xlat
pop
aam
pop
pop
stos
sbb
aam
cli
push
add
repz
sti
pop
xor
movsb
add
icebp
cltd
repnz
push
add
sbb
xor
stc
bound
mov
andl
call
rcll
add
into
add
jmp
data16
nop
add
dec
fstpl
mov
mov
add
xchg
add
add
xlat
cmp
hlt
add
mov
adc
test
add
jne
add
popf
leave
nop
add
clc
dec
jne
add
add
add
jne
add
mov
addb
mov
add
mov
lret
xor
bound
mov
rol
add
mov
add
add
or
nop
add
add
sbb
add
add
add
add
add
ja
fdivs
add
outsb
addb
in
dec
in
pop
cwtl
and
shrl
mov
dec
pop
jge
rolb
xchg
pop
pop
call
xor
gs
and
testb
pop
loop
jg
xchg
jg
fsubs
ja
add
loope
or
pop
dec
mov
and
lcall
add
mov
mov
lods
dec
in
mov
pusha
add
and
add
add
test
clc
sbb
into
cmpsb
add
cmp
add
or
push
adc
add
xor
xchg
lcall
out
jmp
add
push
add
dec
xchg
add
add
mov
sub
sbb
add
xchg
add
add
lods
mov
add
mov
xchg
or
in
mov
aaa
aad
add
dec
fisubs
aaa
mov
or
xor
add
cltd
nop
add
dec
cmp
or
cli
push
cmpsl
test
hlt
add
pop
lea
stc
and
mov
mov
push
add
add
movsb
add
add
add
mov
js
mov
pop
je
cmp
inc
mov
shll
gs
loop
sub
sahf
into
cs
out
add
adc
xlat
push
add
cltd
jl
sub
and
mov
add
lock
test
addb
add
loope
sbb
add
cmp
mov
mov
cmpsl
stos
push
add
pop
add
pop
lods
stos
aaa
cmp
add
pop
xchg
popa
xchg
add
bound
mov
ss
je
sti
jl
add
mov
add
xor
mov
add
std
daa
ret
and
add
int
es
addb
add
sub
stc
or
add
mov
jb
mov
pusha
add
mov
sbb
bound
mov
add
mov
sti
xchg
add
add
add
mov
add
ljmp
movsl
stos
bound
mov
movb
cmp
cmp
push
cwtl
cmp
pop
clc
and
aaa
mov
jmp
add
add
test
jle
push
rolb
push
test
dec
daa
fstpt
fs
add
and
mov
mov
insl
sbb
push
add
cmpsb
add
xlat
xchg
clc
jmp
rolb
xor
je
int
lret
pop
mov
repz
add
movsb
add
push
add
jae
lea
add
add
add
cmp
xlat
out
mov
push
add
dec
mov
mov
shl
add
repz
inc
lret
lret
jbe
and
mov
in
mov
add
int
fsubr
loop
adc
add
pop
xor
ret
dec
xchg
mov
add
sbb
hlt
add
jmp
add
add
mov
pushf
std
inc
decb
add
cwtl
testb
flds
inc
mov
add
mov
add
dec
mov
push
add
add
pop
test
add
xchg
jl
cld
repnz
sub
divl
pop
jmp
sbb
lds
in
xchg
add
xchg
mov
aaa
lods
push
add
aad
add
add
pop
fmuls
xor
dec
add
mov
push
pop
ud2
jecxz
inc
add
lcall
xchg
pop
lds
mov
and
jbe
je
mov
sahf
mov
add
repz
cli
push
or
xor
int
jmp
scas
jo
shrl
mov
add
add
in
insl
jecxz
cs
cmp
icebp
inc
aaa
or
sar
lret
and
add
mov
inc
mov
or
sub
stos
sub
sub
cmc
and
mov
add
cmp
aad
cs
mov
mov
jmp
xchg
mov
adc
add
test
das
movsl
cmp
lods
sti
out
popa
sbb
add
cmpsb
add
addb
add
add
add
test
add
adc
jo
addb
add
add
fnstsw
add
dec
fsubr
data16
sti
ja
sub
daa
inc
pushf
js
fbld
pop
sbb
mov
ja
add
add
xchg
add
add
add
hlt
add
mov
inc
ror
and
sub
mov
sti
mov
call
add
test
insb
scas
dec
or
sahf
rolb
lcall
add
inc
mov
jae
add
add
arpl
push
cmpsl
jecxz
mov
lahf
rolb
les
in
mov
add
test
out
mov
pop
inc
inc
add
pop
stos
add
imul
mov
sub
push
add
enter
lods
xchg
add
jecxz
pop
mov
data16
repz
fidivl
pop
aam
sub
and
fisubrl
mov
std
xor
pop
and
outsb
movsl
jmp
adc
cli
addr16
mov
jbe
inc
push
add
cld
jp
enter
add
lods
testb
add
movsb
add
add
mov
idiv
and
fcomp
mov
inc
add
add
xchg
xor
fs
mov
mov
mov
or
ret
mov
add
insb
dec
dec
mov
add
fcom
jle
call
add
pop
xor
sub
pop
fdivl
in
jle
mov
imul
sahf
inc
add
push
or
add
shll
and
add
dec
mov
dec
jecxz
pusha
add
mov
push
icebp
out
ret
fwait
cmc
in
mov
xor
cmp
in
xchg
xchg
je
jge
add
add
add
mov
add
fnsave
test
add
test
mov
ret
iret
mov
add
mov
cmp
imul
or
add
int
adc
mov
test
add
fcompl
inc
add
sub
add
add
cmp
add
testb
cli
stc
cmp
push
add
and
test
lcall
inc
add
pop
mov
stos
add
mov
stc
add
mov
repnz
xor
dec
mov
enter
cmp
add
std
mov
fildll
movsl
sahf
das
test
mov
jle
or
loope
arpl
add
add
add
lcall
xor
push
add
outsb
jecxz
lock
pop
pop
bound
mov
add
add
mov
mov
mov
lret
fsubrl
push
add
ret
sbb
rolb
dec
add
push
call
pop
sbb
gs
test
aam
sub
xchg
rcll
add
pop
jp
add
add
add
add
add
add
movb
add
dec
jmp
add
add
add
pop
js
in
in
leave
les
mov
rolb
or
mov
and
mov
mov
outsl
ret
in
lods
dec
xchg
add
pop
mov
xor
outsb
mov
add
xlat
sbb
add
cmc
sbb
add
in
sarl
fstl
add
mov
daa
lods
mov
cmc
cmp
or
lock
jb
mov
hlt
add
add
or
mov
rolb
aam
xchg
addb
add
inc
add
inc
add
pop
sub
movb
sbb
or
in
pop
or
call
js
jno
mov
bound
mov
in
inc
add
add
mov
xchg
sbbl
bound
mov
add
xchg
inc
jge
insb
imull
jmp
add
inc
add
adc
addb
add
xor
inc
add
jg
add
add
jns
add
add
add
arpl
aad
add
add
mov
add
cmp
imul
add
push
add
pop
adc
enter
jp
add
mov
hlt
add
or
sbb
add
std
fldcw
pusha
add
call
insl
xchg
cmp
add
xchg
add
sbb
add
add
pop
mov
xchg
cmp
sub
push
fdivrl
jo
leave
insb
popl
mov
cmpsb
add
xchg
push
add
sub
xor
xchg
mov
mov
xchg
add
imul
add
mov
mov
xchg
cmp
movsl
mov
sub
fwait
pop
adc
icebp
sbb
cmp
ret
add
add
add
and
xchg
add
cmpsl
popa
int3
outsl
or
sbb
shll
dec
mov
add
add
pop
pop
push
xor
inc
add
add
mov
pop
jb
clc
sbb
dec
sahf
rorl
shrl
ljmp
mov
jg
push
movl
cmp
sbb
push
sbb
in
lods
inc
lods
sub
out
cmp
outsl
and
jp
jne
xchg
lcall
or
mov
sbb
jp
pop
xor
cmc
movsb
add
ja
add
push
add
fwait
mov
fs
sbb
add
mov
inc
repz
insb
xchg
add
add
xor
addb
dec
push
cmpl
lock
mov
add
or
xchg
add
pop
pop
fcomps
pop
test
push
add
add
mov
add
daa
xchg
push
add
test
nop
add
add
mov
mov
and
push
mov
add
add
push
add
repnz
add
add
cmpsl
xor
add
ficoms
add
add
sbb
rolb
jb
sti
in
movb
add
daa
pop
xchg
add
lods
adc
pop
data16
add
add
loop
lea
cli
xchg
addb
mov
fdivs
cmc
aam
rolb
popa
jmp
add
sbb
add
lods
rolb
sbb
cmp
movb
loop
data16
lock
sbb
cmp
addr16
adc
rol
sub
add
adcl
lcall
add
sub
mov
xchg
add
rolb
jg
add
add
sub
cmpsl
xor
jns
sub
sahf
pushl
inc
add
add
fmuls
out
xor
push
add
adc
pop
add
mov
add
add
addb
test
test
xor
fistpl
loop
outsl
lea
add
add
sub
test
add
orl
pop
push
loope
xchg
fistps
cwtl
or
cmp
or
mov
add
std
jl
add
mov
stc
insl
sub
insl
lods
inc
add
or
outsb
movsl
sbb
add
add
mov
lahf
jl
sarl
xlat
cmpsl
xor
das
lds
add
cmp
add
dec
mov
add
mov
pop
xor
pop
jnp
adc
pop
inc
jno
push
add
cli
les
int
or
pusha
add
imul
aaa
bound
mov
push
add
jbe
xor
mov
fisubrs
add
cs
mov
sbb
shr
aad
dec
repnz
push
shll
add
mov
jmp
add
add
mov
sub
fcomp
loopne
adc
add
cmp
ljmp
fildl
xchg
fxch
shrl
sbb
jg
cmc
ljmp
jg
cmp
add
out
pop
jg
out
lahf
xchg
xchg
fdivs
lret
jg
add
jb
andl
add
add
add
stc
jmp
cwtl
addb
call
xor
icebp
sbb
adc
in
add
icebp
jg
into
mov
pop
jne
xor
jb
sbb
add
in
xchg
imul
sub
add
sub
add
add
mov
test
iret
mov
mov
cwtl
aas
testb
out
mov
inc
add
add
adc
add
test
xchg
xchg
xor
push
add
add
add
mov
cwtl
pop
data16
test
in
rcrl
pusha
add
iret
fldenv
add
jne
mov
pop
push
add
movb
add
add
jae
add
xlat
vmovapd
or
or
and
add
add
insb
mov
sbb
jmp
add
fimull
aas
or
add
dec
mov
jmp
sti
xchg
add
add
jne
add
mov
add
xchg
icebp
xchg
cmp
add
sbb
inc
pop
inc
add
push
add
int3
icebp
les
test
jnp
lock
enter
add
add
lds
sub
mov
xor
mov
ss
mov
cmp
xchg
jnp
add
sbb
enter
push
rolb
add
add
fstpt
xor
js
adc
pop
mov
sbb
jbe
mov
call
rolb
enter
gs
loop
mov
add
insb
or
mov
in
add
add
lret
add
push
add
adc
xlat
jb
pop
and
mov
mov
push
add
add
sti
mov
and
add
cmpsl
jecxz
and
add
addb
push
jl
xchg
push
mov
fistl
add
jge
jno
int
mov
fistpll
adc
mov
jbe
mov
scas
and
ret
push
aam
icebp
in
scas
sahf
pop
outsb
cmp
add
adc
hlt
add
add
out
int3
mov
data16
in
adc
mov
jae
pop
mov
add
mov
inc
add
mov
jae
rolb
mov
add
sbb
das
pushf
gs
dec
adc
xor
shll
add
add
cmp
add
in
ja
add
enter
bound
mov
sub
add
add
fsubrl
lcall
insb
ja
add
fcmovnb
add
add
sahf
mov
push
add
xor
outsl
adc
sub
loop
adc
sbb
pusha
add
fnsave
push
icebp
push
inc
iret
rolb
scas
jecxz
add
rolb
movb
add
xchg
nop
add
outsl
sahf
dec
nop
add
adc
xor
inc
add
cmp
scas
add
mov
add
mov
imul
popa
push
and
out
outsb
movsb
add
std
mov
jb
mov
sarl
add
inc
les
mov
scas
and
add
inc
add
les
xchg
add
inc
jg
shrd
mov
int3
sbb
and
mov
loope
call
gs
repnz
push
xchg
int3
outsb
mov
inc
mov
mov
insl
iret
fldcw
add
or
add
dec
dec
mov
add
add
mov
mov
cmc
aad
add
add
gs
sbb
mov
add
sti
mov
inc
add
pushf
dec
xchg
scas
inc
push
lahf
test
add
sub
inc
ret
adc
movsb
add
push
add
mov
sbb
dec
mov
stc
adc
add
add
adc
dec
xor
add
inc
rolb
jmp
or
or
add
cmc
and
adc
gs
add
sbb
add
dec
lret
cmp
add
mov
add
pop
push
add
addb
add
ret
ficomps
mov
add
xchg
cmpsl
xor
out
outsb
add
add
loop
les
fsubrl
enter
add
lods
xlat
rolb
inc
add
mov
pop
adc
add
mov
lods
cmp
inc
push
ret
adc
mov
push
dec
fimuls
popa
gs
sub
ficomps
xchg
and
frstor
add
test
inc
sbb
add
adc
in
mov
dec
fdivrl
mov
faddl
push
add
pop
leave
int
lds
mov
and
jns
stos
inc
add
mov
adc
mov
add
lret
rolb
cmp
aad
loopne
mov
mov
adc
aad
gs
adc
inc
add
xor
cmp
xchg
pop
sbb
mov
add
stc
addb
xchg
add
xor
inc
xor
insl
pushf
adc
outsl
sub
push
add
add
insl
inc
inc
add
jg
inc
add
lret
xlat
movsb
add
add
movsb
add
frstor
insb
add
mov
dec
pushf
nop
add
imul
test
out
seto
xchg
inc
push
add
adc
ljmp
mov
sub
add
clc
dec
push
add
mov
mov
add
testb
add
adc
push
inc
add
add
das
nop
add
add
and
mov
iret
int
fildl
add
into
movsb
add
das
rolb
iret
rolb
sub
mov
fbld
add
add
inc
das
xchg
jne
push
add
rorl
inc
add
cld
or
add
fwait
icebp
pop
arpl
inc
lahf
jb
cmp
inc
loopne
and
mov
jno
add
subl
aaa
pop
mov
xchg
cmp
add
xchg
add
jecxz
data16
movsb
add
fldenv
int
lret
imul
mov
int3
pop
add
mov
inc
add
jnp
push
add
and
jbe
or
je
jecxz
add
add
add
dec
inc
add
add
in
clc
mov
je
nop
add
out
rolb
leave
mov
sahf
sbb
lea
out
mov
inc
dec
sbb
inc
add
cmc
xchg
or
icebp
add
mov
and
mov
add
addb
dec
leave
cmpsb
add
outsl
cmpl
pop
jge
add
in
sub
add
jbe
push
add
iret
cmpsb
add
jl
xor
testb
add
icebp
std
jb
jo
push
pop
imul
add
add
in
cmpsl
cmp
test
pop
out
rcll
add
ret
dec
addb
add
test
jne
add
js
xor
stc
or
ret
xchg
addb
add
dec
pop
fbld
mov
and
mov
add
std
lods
xchg
add
sub
push
inc
add
push
data16
mov
sti
sub
add
and
in
xchg
jns
xchg
add
scas
test
mov
dec
lds
test
add
rolb
iret
xchg
popf
mov
push
push
add
sbb
add
leave
inc
mov
test
fbld
or
adc
xchg
mov
fsubrs
sbb
add
and
xchg
fnstsw
out
add
fidivrs
orl
roll
add
and
mov
add
add
add
fildl
adc
loope
adc
popf
stos
push
add
add
add
imul
jne
sti
aas
or
fsts
sbb
cmp
push
movb
add
clc
mov
add
lock
in
add
scas
adc
outsb
rol
add
shll
add
add
push
ret
pop
cmp
lock
lods
pop
in
inc
add
add
pushf
push
fisttpll
call
arpl
and
mov
cmp
xchg
add
outsl
adc
add
jo
fisttps
pushf
outsb
pop
mov
add
push
add
cmpsb
add
xor
lret
in
xlat
jmp
xchg
cmpsl
psubusb
lods
jl
add
scas
push
add
add
mov
and
mov
add
fists
add
push
pop
pop
sbb
int3
sub
je
aas
sub
dec
mov
loop
mov
rolb
mov
xchg
fdivs
add
add
add
sahf
pop
imul
jo
dec
in
mov
stos
aaa
fidivl
stc
xor
or
add
add
add
ret
mov
sbb
imul
orl
jecxz
add
push
add
insb
inc
add
add
leave
xor
outsb
iret
jmp
mov
push
aaa
shrl
icebp
cmp
mov
pop
imul
and
sti
je
and
popa
add
mov
in
movsb
add
adc
data16
mov
cmp
xor
push
shld
test
fldl
add
add
lret
xor
add
repz
pop
mov
bound
mov
add
cli
popf
mov
mov
mov
bound
mov
nop
add
rolb
aaa
lahf
cmp
adc
jns
xchg
cwtl
mov
add
mov
sbb
frstor
add
lret
stos
call
add
ffree
aaa
ret
and
add
dec
in
inc
or
out
push
add
repnz
sarl
push
lcall
add
pop
adc
cli
mov
add
add
roll
xchg
add
sub
add
jb
dec
xor
out
aas
adc
test
add
add
add
add
pop
pop
ja
jmp
or
xchg
testb
fbstp
fwait
mov
shll
add
lock
cli
or
fwait
arpl
cmp
sub
add
stc
jp
out
clc
or
adc
add
mov
dec
or
add
jp
mov
mov
mov
stc
mov
or
xchg
fwait
dec
push
add
bound
mov
arpl
push
add
pushf
xchg
add
mov
push
repz
inc
add
movsb
add
cmp
add
xchg
sbb
add
add
add
add
add
insb
push
adc
adc
sbb
sahf
aaa
int
xor
add
ret
sub
push
add
movsb
add
insb
in
mov
fldt
je
clc
leave
and
add
jecxz
push
add
pop
loop
inc
add
add
add
subl
out
add
mov
inc
jp
clc
xchg
add
out
addr16
mov
mov
lock
add
inc
aam
arpl
or
add
add
xchg
sahf
cmpl
add
loop
sub
add
mov
insb
rolb
and
and
mov
or
add
lret
or
sub
add
mov
sub
add
flds
adc
fucomi
adc
add
in
mov
xor
pop
lahf
mov
iret
inc
add
fst
add
call
int
sahf
test
xor
jge
add
shrl
add
movsb
add
add
das
in
mov
add
lods
popa
mov
add
jecxz
xchg
add
add
pop
mov
or
fstp
xlat
jb
outsb
and
mov
push
adc
movb
jne
add
add
call
sahf
pop
lods
addb
fidivrl
cs
add
dec
inc
movsb
add
fldl
add
pushf
stos
addr16
inc
inc
add
sbb
add
ret
in
js
call
shl
add
sahf
sub
add
pop
lea
aad
add
mov
dec
or
add
in
pop
lahf
mov
push
add
push
add
add
add
sbb
push
add
sysexit
mov
push
add
mov
fwait
sbb
pop
fs
jae
fucomi
and
mov
add
add
add
fsts
dec
hlt
add
add
or
xchg
sahf
fcom
pusha
add
add
sbb
add
pop
jo
stos
pop
xchg
enter
out
push
addb
add
mov
das
js
sti
stos
inc
sahf
jnp
fcoms
sbb
scas
mov
push
add
cmp
add
adc
daa
sub
xor
ret
aaa
xchg
mov
add
mov
nop
add
xchg
pop
inc
cmp
mov
imul
pop
ror
adc
xchg
push
fdivl
lods
in
adc
lods
int3
mov
insl
sub
mov
jne
in
xchg
dec
test
pop
cmovs
add
nop
add
xchg
add
stos
jmp
scas
sbbl
addl
mov
sub
add
inc
add
into
dec
je
mov
add
add
mov
pushf
adc
movsl
shrl
jmp
add
mov
fdivrl
jp
dec
pop
push
add
push
add
add
lcall
add
dec
aam
sbb
cltd
les
addl
lods
repnz
lods
jbe
xor
add
mov
add
add
xor
xor
push
push
add
pop
les
bound
mov
cli
push
pop
ds
sub
lock
cmpsl
pop
adcl
dec
fcom
add
hlt
add
add
add
mov
call
jge
and
int
loope
mov
xor
scas
push
lea
add
add
mov
std
dec
cmovl
rolb
dec
loop
pop
pop
xchg
push
add
or
pusha
add
mov
jg,pn
dec
cmpsl
stos
bound
mov
push
add
cld
add
mov
mul
add
add
leave
sub
fstps
fldt
add
add
sbbl
dec
mov
add
icebp
jne
pop
mov
add
add
movb
insb
loop
add
inc
add
add
movb
jmp
add
mov
jo
xor
add
add
inc
add
repnz
rolb
je
jmp
pop
fnstenv
jnp
add
mov
pop
pop
mov
add
mov
insl
pushf
imull
add
mov
rorl
add
adc
sahf
aas
dec
sub
add
add
ds
add
mov
jae
add
mov
jno
mov
jle
jae
add
add
fistps
sub
xchg
dec
push
cmp
aad
push
sub
sbb
push
dec
mov
pop
jg
add
push
add
push
mov
cmp
push
outsl
xchg
sub
mov
and
mov
add
clc
mov
mov
repz
fsubr
inc
add
rolb
aas
push
add
insl
fmuls
mov
mov
add
cs
jge
leave
sbb
pop
adc
sub
addb
xchg
add
add
sub
add
push
add
sub
cmpsl
mov
push
add
mov
add
push
insl
xchg
sub
add
mov
adc
mov
xor
cmpsl
rolb
or
test
add
inc
add
pushf
ret
dec
inc
jne
add
inc
add
add
inc
pop
dec
mov
inc
add
jno
lods
arpl
push
jo
cmp
jb
sub
stc
cli
inc
add
mov
cmp
add
add
add
add
aas
popa
fbstp
pop
xchg
or
test
jmp
pop
lock
fistl
mov
in
ret
outsl
in
rcl
add
sbb
push
inc
add
add
add
nop
add
add
loop
std
roll
pop
sbb
loopne
stc
or
cmp
mov
mov
nop
add
adc
sub
xchg
add
fldt
outsl
jne
add
cmp
xchg
dec
clc
and
xor
imul
and
loop
mov
xchg
xchg
pop
jno
lcall
cltd
jl
add
es
add
sbb
jecxz
pop
add
mov
repnz
mov
cmc
sub
jmp
add
daa
addb
add
out
xchg
loopne
mov
dec
xchg
mov
push
add
mov
bound
mov
rolb
test
aad
mov
inc
aam
dec
jb
mov
inc
add
cmc
repnz
subl
xor
add
lahf
adc
jb
sub
test
sti
sbb
leave
pop
or
cmpsb
add
add
add
in
pop
outsl
rolb
dec
icebp
mov
mov
fmul
mov
in
sub
js
jp
push
mov
add
add
add
add
cmp
jl
add
push
add
subl
and
mov
addb
fsubl
data16
add
and
xor
dec
xlat
mov
pop
mov
testb
push
add
inc
dec
mov
add
les
push
enter
jmp
add
aaa
cmpsl
add
mov
adcl
or
hlt
add
add
add
repnz
push
js
xchg
push
movb
add
repz
add
pop
push
add
jl
add
popf
imul
in
xor
fcmovnu
dec
mov
ja
add
xchg
add
sub
add
pop
rcrl
dec
xor
pop
jno
xchg
sub
xchg
add
mov
add
mov
dec
sarl
add
clc
xor
testb
dec
and
fnsave
in
mov
or
and
mov
pop
push
add
mov
movb
pusha
add
adc
xor
mov
add
mov
add
add
loope
sti
add
mov
and
and
mov
cmp
insl
add
mov
add
add
add
mov
mov
repnz
add
xchg
add
add
add
add
add
inc
mov
scas
add
mov
or
add
ffree
add
push
add
sahf
sbb
jp
sbbl
lahf
dec
dec
pushf
leave
add
mov
sbb
jp
mov
mov
mov
mov
add
adc
mov
push
add
add
mov
faddl
mov
add
int3
ficoml
add
inc
add
add
stc
je
mov
mov
add
add
jle
insl
stc
leave
test
mov
mov
lcall
ds
inc
add
add
cmp
add
add
popf
mov
aad
lss
and
addr16
mov
adc
fwait
daa
cmp
xchg
loopne
test
sub
test
mov
cli
adc
shl
jo
jge
sub
jno
cmp
add
inc
add
mov
mov
push
test
sub
popa
mov
inc
adc
inc
add
shll
call
shrl
cmp
add
add
add
pop
aam
mov
add
ljmp
add
jge
add
std
addr16
gs
add
add
add
add
cmp
mov
mov
add
mov
push
push
scas
add
int
push
outsb
xor
xor
movsb
add
gs
push
sbb
in
arpl
add
subl
cs
add
jbe
in
mov
shll
mov
add
dec
and
add
xor
cmc
xchg
and
push
mov
sbb
notl
pop
js
repz
insl
out
inc
icebp
iret
imul
add
dec
cmp
push
sbb
jns
sub
add
mov
add
add
add
dec
andl
test
data16
dec
scas
xchg
mov
add
add
push
or
add
add
mov
loope
lock
dec
push
dec
in
movsb
add
add
pusha
add
subl
cs
add
dec
movsb
add
enter
add
and
mov
jp
test
das
cmc
cmp
add
sub
add
adc
sbb
lahf
mov
adc
add
mov
adc
mov
add
sub
fcoml
je
sbb
add
push
mov
push
lahf
adc
push
add
and
scas
inc
add
add
mov
mov
je
jg
in
add
add
mov
out
addb
sbb
xchg
stos
ret
add
add
push
fistpl
rcrl
add
mov
out
sbb
aaa
xchg
add
add
ficompl
add
shrl
mov
mov
mov
sbb
and
out
xchg
add
xchg
add
ret
sub
mov
cmp
and
sub
mov
add
insb
rolb
pop
fwait
sti
arpl
push
add
testl
add
loope
sub
aam
mov
pop
mov
insl
fnstsw
lods
pop
test
pop
mov
jo
clc
xchg
data16
pop
aam
pop
push
add
in
inc
add
out
jg
fiaddl
aad
jo
push
icebp
mov
sbb
lcall
sti
mov
jne
sbb
ja
popf
sahf
scas
pop
adc
inc
add
push
add
mov
and
mov
mov
data16
add
in
sub
add
add
add
xchg
add
add
bound
mov
lret
loop
inc
outsb
nop
add
add
rolb
pop
imul
xlat
xchg
ret
xor
add
pop
in
xor
cmc
les
push
add
add
out
test
add
or
inc
mov
dec
ljmp
movb
add
jnp
add
mov
scas
mov
fadd
int3
sarl
add
add
mov
cmp
mov
mov
jecxz
dec
fmuls
pop
mov
outsl
gs
cmpsb
add
daa
in
fstpt
mov
mov
and
movb
pushf
mov
inc
add
out
aas
in
push
nop
add
int
mov
push
int3
pusha
add
insl
shr
sbb
mov
repz
add
mov
addb
add
test
add
andl
jne
jne
cli
xlat
push
cmp
jbe
xor
add
add
add
jmp
addb
cmp
repnz
inc
and
mov
add
fadd
add
xchg
add
add
add
mov
add
dec
xorl
add
dec
push
cmp
add
jge
add
rolb
dec
ljmp
jo
aaa
cs
sub
add
mov
and
mov
jnp
jne
add
inc
cmp
aaa
addb
mov
add
mov
lret
mov
out
push
add
ds
sub
cmp
add
mov
add
add
mov
add
add
sub
stc
push
lret
fst
jo
lret
cmp
repnz
jns
mov
pop
lock
out
addb
rolb
outsb
or
add
jecxz
xchg
insl
push
repnz
add
add
mov
imul
add
mov
stos
popa
cmc
jmp
add
add
je
lahf
scas
shll
add
test
repz
sbb
dec
pop
and
into
push
stc
add
mov
add
ret
ficompl
addb
mov
add
jae
stos
stc
dec
out
and
mov
fistps
mov
xor
push
add
pop
add
cmp
testb
jmp
movsb
add
test
or
add
add
inc
push
add
cmp
mov
cwtl
add
add
add
pushf
or
dec
mov
addr16
add
sub
add
int3
cld
dec
nop
add
clc
mov
int3
aad
mov
mov
aad
add
add
jno
lcall
add
pushf
les
adc
add
mov
sbb
jg
outsl
jmp
add
pop
test
push
add
sbb
add
sti
in
test
sahf
lcall
pop
push
add
inc
add
xchg
add
addb
fcomps
lods
add
push
add
add
dec
cli
test
or
push
out
add
icebp
stos
xor
pop
add
or
add
cltd
sbbl
inc
nop
add
in
xchg
mov
add
fiaddl
add
dec
rolb
add
mov
pop
adc
xor
sub
addb
mov
sbb
pop
add
test
addr16
mov
add
add
addb
cwtl
and
mov
add
add
lock
push
add
mov
loope
add
addr16
dec
fstps
aas
xchg
lret
or
jb
inc
add
sub
cmc
cs
add
mov
add
add
dec
adc
dec
cwtl
sbb
inc
add
add
stc
jmp
cmc
adc
mov
add
bound
mov
lret
inc
add
push
cmp
push
jns
add
push
into
outsl
fcmovu
add
mov
or
mov
add
rolb
sahf
lahf
outsb
insl
and
mov
jb
repz
loop
popf
mov
mov
lods
lods
daa
pop
popa
repz
add
or
imul
add
scas
cltd
mov
xchg
mov
jmp
add
cmpsl
in
push
mov
sbb
and
int
call
fisubrs
add
inc
add
xchg
mov
add
ja
jmp
sbb
into
add
adc
aam
xchg
or
push
add
adc
sti
mov
add
add
mov
mov
add
out
bound
mov
shl
sbb
adc
add
add
push
ret
scas
sbb
bound
mov
nop
add
add
mov
mov
mov
push
add
cs
add
test
testb
pop
mov
mov
add
mov
lods
out
out
sahf
add
xchg
add
sti
mov
les
jmp
xchg
shr
jl
xchg
xor
out
cmp
std
int3
lds
cmp
lahf
lea
xor
cmp
jmp
add
out
rolb
add
add
imul
aas
pusha
add
test
cs
decl
pop
push
add
cmp
mov
push
add
xchg
adc
add
add
add
add
add
adc
add
addb
mov
jno
add
jae
and
sbb
mov
in
cmp
and
mov
mov
adc
imul
mov
bound
mov
ss
add
add
mov
add
into
add
mov
out
sarl
jne
jne
cmp
mov
addr16
add
sahf
xor
add
in
add
add
inc
add
lds
loop
enter
or
add
loope
add
jle
fnsave
add
mov
lea
scas
sub
sub
add
loope
add
loopne
ret
testb
add
add
add
jbe
inc
add
popa
or
add
jg
daa
dec
cmp
cmpsl
inc
int
push
add
addb
add
add
and
mov
add
mov
cltd
movsb
add
cmp
gs
add
mov
dec
sbb
test
sahf
dec
mov
sahf
aad
mov
sub
add
add
inc
pusha
add
sbb
aaa
data16
add
testl
mov
add
fs
adc
mov
cld
add
add
data16
add
repz
bound
mov
add
jbe
jl
mov
outsb
inc
add
add
mov
repnz
add
inc
add
add
iret
testb
fsubrl
push
add
dec
jmp
add
mov
push
cmpsl
add
add
lods
adc
xor
pop
xchg
aad
leave
and
mov
add
pop
mov
enter
data16
jnp
jnp
add
jp
shrd
lcall
in
pop
or
int
lods
daa
test
outsl
lods
shll
inc
or
enter
sub
jno
adc
mov
in
popf
movsb
add
out
add
or
aam
data16
or
mov
lods
lahf
xchg
add
add
add
add
insl
add
mov
add
ret
aas
outsl
int3
push
sub
fcoml
hlt
add
add
add
add
add
inc
add
jns
cmp
push
aas
sbb
sbbl
test
push
add
add
in
jecxz
outsb
stos
dec
rolb
rcr
pop
xor
xchg
sahf
stos
test
fidivs
outsb
icebp
roll
add
add
xchg
sub
add
add
sbb
test
and
mov
leave
repz
into
addr16
jle
add
cmp
out
mov
xchg
add
xchg
dec
in
inc
inc
add
dec
aam
inc
dec
jg
adc
rolb
cwtl
push
add
loopne
mov
add
mov
add
xchg
or
dec
and
push
add
jo
cmp
sbb
std
test
add
pop
hlt
add
outsl
mov
mov
jmp
add
add
iret
add
and
mov
ljmp
xchg
xlat
icebp
jmp
xor
cwtl
sub
xor
cmpsb
add
mov
push
add
testb
adc
xor
jne
cmpsl
outsb
lock
bound
mov
and
ret
mov
jbe
push
inc
inc
add
std
mov
aam
add
mov
in
add
mov
jg
add
mov
shrl
sbb
inc
xor
sbb
adc
fsubrl
inc
add
aad
and
pushf
xchg
xor
push
sti
or
mov
pop
test
jne
add
add
nop
add
sbb
xchg
in
or
jb
cmpsb
add
add
add
mov
andl
addb
jle
add
bound
mov
fldt
cwtl
loopne
jnp
stc
fdivrs
add
pop
inc
adc
xor
jnp
pop
jns
add
mov
add
jg
add
mov
add
mov
add
pushf
fdivrl
mov
jp
mov
add
add
add
add
cli
pop
mov
shll
mov
add
fsubrl
mov
insl
xchg
mov
and
adcl
lds
addb
and
dec
loop
mov
or
and
mov
addl
mov
movsb
add
add
add
add
sub
arpl
add
lods
ss
in
out
cli
adc
or
arpl
add
movsb
add
fwait
gs
int
cmpsb
add
mov
jnp
mov
jns
add
gs
icebp
cvtpi2ps
add
dec
ficomps
outsl
andl
add
push
mov
inc
add
xchg
stos
jnp
add
xlat
test
sahf
mov
in
adc
fldcw
imul
test
add
rcrl
and
not
add
dec
outsl
inc
add
add
popa
add
mov
add
inc
add
adc
add
add
adc
aad
test
stos
in
imul
add
add
jne
mov
mov
clc
inc
lds
mov
outsl
mov
dec
in
jge
add
mov
adc
mov
push
push
xor
cmpsb
add
loope
out
xor
push
dec
into
add
jge
mov
dec
add
mov
inc
add
mov
shl
add
add
out
pop
testb
rorl
mov
mov
xor
bound
mov
mov
test
dec
data16
lods
pop
dec
das
push
cld
hlt
add
xchg
fwait
js
or
add
add
add
pop
dec
sbb
add
loop
cmpsl
xchg
test
test
add
pop
bound
mov
into
dec
mov
cltd
inc
dec
ja,pn
add
popf
push
or
add
add
add
and
mov
mov
inc
adc
mov
dec
lret
xor
add
mov
daa
sbb
mov
mov
movsl
push
cmpsl
mov
pop
mov
jmp
and
add
mov
int3
data16
pop
fmuls
add
adc
out
add
rolb
popa
mov
imul
xchg
xchg
ljmp
add
add
addb
add
or
add
mov
in
shll
add
std
mov
add
int
cmpl
add
repz
push
add
filds
mov
lcall
sbb
add
add
dec
adc
push
mov
xchg
add
mov
int
gs
add
add
add
ficoms
pop
std
ljmp
add
leave
or
add
add
imul
out
jg
lcall
xor
mov
xor
mull
add
outsb
loope
sub
cmp
bound
mov
jb
add
sahf
loop
sub
add
mov
inc
dec
jnp
sti
lea
add
mov
pusha
add
push
add
std
dec
icebp
inc
or
lahf
xchg
ficoms
add
push
cmp
mov
std
cmp
std
rolb
iret
cli
or
add
out
sbb
add
inc
add
add
aad
add
push
mov
add
scas
dec
jg
add
jne
jg
jmp
fucomip
mov
add
add
add
add
add
stos
iret
repz
sbb
test
in
gs
push
xchg
push
std
imul
mov
cmp
lret
cmpsl
pop
addb
inc
add
xchg
add
outsl
movb
mov
add
dec
mov
fstps
mov
movsb
add
sbb
outsb
add
pop
lock
stc
into
mov
outsl
cmp
add
cmp
aas
xor
mov
cmp
jno,pt
xor
push
testb
cli
jnp
push
movb
add
sub
xchg
push
add
mov
add
adc
pop
add
mov
in
inc
mov
add
cmp
add
add
add
cld
gs
fistps
xchg
jnp
adc
fs
je
stc
mov
add
add
inc
add
add
add
pop
mov
add
repnz
add
mov
pop
fcmove
cs
addb
add
repnz
cmp
add
add
hlt
add
lcall
push
dec
lds
add
push
fisubl
scas
mov
and
pushf
dec
xor
imul
mov
lret
outsl
inc
add
stos
xor
or
cmp
add
int
lock
lcall
and
fld1
sub
jle
testb
pop
aam
xor
mov
add
push
add
add
addb
ret
sub
add
xchg
add
add
mov
xor
mov
call
add
addl
mov
add
mov
add
in
xor
mov
and
mov
add
add
xor
mov
dec
addb
mov
fisubs
add
mov
sbb
pop
mov
subl
add
stc
cmp
sbb
xor
mov
push
add
mov
add
xchg
add
int
jecxz
add
add
push
add
movsl
popf
out
pop
mov
insl
scas
in
xchg
mov
pop
pop
or
jno
add
mov
add
mov
mov
stc
dec
add
add
movsb
add
stos
and
push
add
mov
lcall
push
nop
add
in
add
mov
inc
pop
xchg
add
and
mov
mov
outsl
cwtl
icebp
cltd
cmp
testb
in
in
out
scas
mov
jb
cs
xchg
add
les
rdtsc
xor
movsb
add
mov
jmp
shll
add
add
mov
jmp
cwtl
add
in
add
hlt
add
add
add
inc
add
add
or
add
add
add
add
jb
scas
mov
testl
add
add
jg
imul
ja
sub
add
push
movsb
add
cli
add
add
pusha
add
add
data16
icebp
and
loop
movsl
jnp
add
rolb
sbb
aas
stc
mov
add
popa
fcmovnu
push
add
cltd
xchg
icebp
addr16
outsb
out
lods
fs
outsb
inc
add
movsb
add
lahf
mov
icebp
ljmp
inc
jg
add
add
cs
sub
inc
out
add
mov
inc
add
cmp
mov
lea
scas
adc
cmp
mov
add
sbb
subl
fisttpl
xchg
cmp
add
mov
mov
mov
jmp
add
add
setno
or
mov
or
push
add
sbb
add
aam
int
aad
aam
mov
push
add
jbe
cmp
jg
bound
mov
mov
cs
jns
xchg
add
js
jecxz
add
xchg
pop
push
add
mov
dec
loop
xchg
jbe
mov
ja
test
xor
stos
cs
add
add
mov
icebp
popf
imul
push
add
add
xchg
add
push
aas
into
push
or
xchg
add
add
jo
push
add
mov
pop
inc
add
add
add
mov
nop
add
imul
sbb
add
add
sub
xchg
lcall
pop
jg
cld
xchg
push
add
mov
dec
push
aad
pop
fdivrl
push
inc
push
mov
add
push
jge
mov
xchg
mov
scas
mov
pop
insl
fwait
and
sub
add
ja
fsubl
mov
add
test
lret
lcall
mov
addb
add
add
daa
popf
in
addb
add
add
and
pop
and
adc
xor
cmc
sahf
int3
movb
mov
mov
push
or
add
xchg
mov
add
fisttps
fbstp
add
xor
add
lar
mov
cmpsl
add
mov
push
add
rolb
add
and
mov
js
add
jbe
xchg
mov
add
dec
cld
cmp
cmp
add
add
add
dec
and
mov
add
mov
add
cltd
pop
push
rcll
add
push
add
imul
add
pop
push
add
mov
add
dec
inc
add
das
movb
mov
sbb
mov
fbstp
push
add
inc
add
out
fmull
repnz
rolb
fildl
pop
cltd
daa
nop
add
cmp
mov
or
stos
lds
std
sbb
cmp
sbb
loop
adc
std
sub
arpl
sub
or
pop
pop
out
cmpsl
mov
fadd
cltd
push
add
push
pop
adc
xchg
add
lods
and
mov
push
add
sbb
outsb
jecxz
and
add
add
add
add
mov
add
add
loope
cwtl
fdivr
mov
dec
iret
testb
mov
add
add
cmpl
int
add
xchg
sub
add
add
adc
add
jge
sbb
add
stc
ds
sti
orl
ret
mov
out
scas
sub
mov
sub
les
push
std
inc
fnsave
popf
test
add
inc
add
or
popa
mov
and
add
mov
and
mov
mov
add
cmpsb
add
add
sbb
sub
repnz
add
mov
push
add
sbb
mov
cwtl
xchg
out
subl
cmp
pusha
add
dec
cwtl
int
out
add
add
orps
sbb
aaa
dec
cmp
and
lahf
stc
loope
scas
add
ret
cmp
fsubl
das
lods
imul
clc
mov
shll
add
mov
sbb
mov
dec
lahf
int
inc
std
imul
ljmp
addb
mov
add
cmpsb
add
sbbl
mull
and
mov
leave
fwait
test
sbbl
add
pop
cs
sub
add
add
sti
or
daa
lret
add
fisttpl
or
xchg
insb
and
or
stos
aaa
jg
mov
pop
mov
ficomps
xorl
test
sub
scas
aad
add
add
cmpsl
add
sbb
testb
fs
add
lds
call
addr16
add
push
add
sub
shrl
jae
dec
rolb
pop
les
push
push
add
test
adc
dec
pushf
cmp
add
jle
pop
stos
or
add
mov
add
and
mov
fcoms
pop
pushf
sbb
xchg
call
cmpl
aad
add
add
mov
pop
lret
jmp
sbbl
or
sarl
mov
xor
add
pop
and
jecxz
add
movsb
add
add
cli
push
or
dec
inc
add
mov
addl
mov
sbb
lods
dec
push
push
add
ret
mov
mov
testb
or
sbb
push
add
sbb
ret
out
mov
aad
ljmp
movsb
add
addb
add
mov
add
sub
add
pop
sbb
ucomiss
sbb
mov
repnz
xchg
add
add
addb
jb,pn
rolb
icebp
add
lds
inc
mov
mov
sti
jmp
pop
cmp
out
xor
clc
jp
jno
add
mov
mov
mov
loopne
movsl
adc
pop
rcll
mov
add
loope
iret
mov
pop
jp
rolb
fistps
dec
mov
stc
lcall
bound
mov
pop
mov
xlat
push
test
push
add
iret
jbe
jl
lods
pop
in
dec
mov
gs
loop
dec
xchg
mov
inc
add
stos
das
imul
add
cwtl
sti
ficomps
and
lods
mov
fisubl
mov
rolb
call
out
push
add
mov
add
sahf
scas
add
pop
pushf
xor
popf
cmpsl
scas
inc
sti
cmpsb
add
xchg
add
sbb
cmp
dec
dec
jmp
mov
add
cmc
popa
add
cmc
jb
jo
lcall
popf
mov
cli
addl
lcall
sbb
and
cmp
mov
fimuls
mov
addr16
pop
push
add
mov
add
arpl
addr16
lcall
sbb
xchg
add
stos
sub
test
push
add
add
stos
mov
add
mov
add
add
aas
push
add
pop
insl
jg
add
mov
andl
mov
add
sub
lret
xchg
fwait
xchg
add
add
push
in
mov
lret
addb
dec
fmull
lret
add
jge
add
in
ja
xchg
bswap
lahf
jo
jbe
inc
arpl
add
add
inc
add
add
add
fmull
addb
sbb
adc
add
xchg
sbb
mov
mov
add
xchg
add
push
out
and
mov
mov
push
mov
sub
pusha
add
iret
imul
int
add
in
sub
test
push
add
mov
shll
mov
fists
pop
pushf
mov
aad
addb
movsb
add
sub
push
cmp
add
addb
iret
xchg
add
add
add
mov
push
and
ret
and
mov
push
add
add
add
loope
cmp
add
sbb
sub
add
mov
sub
cld
or
add
push
sbb
add
add
mov
mov
sbb
scas
das
loope
add
movb
out
movsl
aas
add
add
or
add
push
mov
add
sbb
pop
inc
lret
test
mov
add
inc
add
aam
mov
dec
roll
mov
inc
add
ljmp
add
movsl
adc
out
imul
dec
lock
clc
adc
add
add
ljmp
pop
rorl
iret
insb
add
mov
mov
fdivrl
add
add
pushf
loope
imul
mov
pop
xor
cmc
lret
xchg
add
mov
jle
pushf
or
divl
add
add
outsl
out
mov
pop
popa
inc
mov
and
mov
mov
out
and
mov
add
mov
add
cld
dec
pusha
add
mov
xchg
mov
xor
mov
std
dec
call
add
add
xchg
add
dec
mov
pop
data16
and
mov
adc
mov
mov
dec
mov
ret
fmuls
ret
xchg
out
pop
push
int
add
ret
add
pop
cmp
push
mov
rolb
out
test
aas
xor
pop
and
decl
add
mov
lds
es
bound
mov
lret
add
or
add
incb
jmp
add
add
fcompl
mov
add
mov
add
add
enter
adc
jge
orl
pop
icebp
js
sbb
add
push
add
repz
add
cmp
inc
cmp
inc
add
xor
mov
fstps
push
or
inc
cwtl
mov
jmp
or
jmp
lcall
loop
jb
mov
fisttpll
outsl
mov
