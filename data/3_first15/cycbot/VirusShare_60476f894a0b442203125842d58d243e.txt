mov
xor
mov
out
add
jno
or
stc
fidivrl
mov
add
add
cmpsb
push
inc
add
outsl
mov
addb
push
add
insl
or
cmp
je
pop
add
adc
xchg
jae
add
or
adc
push
push
das
test
add
jg
sbb
xor
mov
sub
imul
mov
mov
push
dec
jg
mov
sub
pop
loop
mov
add
test
aad
push
loope
mov
mov
jne
cltd
pusha
add
cltd
add
mov
ftst
cli
clc
repnz
aas
lcall
add
sbb
push
insb
lret
push
mov
sub
push
push
push
push
push
push
cld
call
sub
es
movzbl
cmp
ss
push
push
call
cmp
je
es
lea
cs
sub
mov
push
es
call
test
jne
jmp
leave
push
lret
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
nop
lea
lea
sub
add
mov
sub
sub
push
pop
push
je
jmp
add
add
inc
mov
popa
sbb
lods
bound
mov
jle
fwait
inc
push
push
mov
sub
pop
fwait
add
adc
pushf
jle
mov
add
add
imull
lahf
repz
add
or
jnp
in
push
fucomi
mov
add
aam
add
mov
ja
add
leave
or
jne
gs
das
add
mov
fstps
mov
push
sub
add
and
xor
mov
xlat
adc
add
frstor
inc
cmpsl
pusha
add
add
push
ficoml
jecxz
pop
cmp
cli
jns
dec
call
mov
mov
mov
out
ja
push
jns
cmpsb
push
add
or
push
and
add
add
add
sbb
xchg
xchg
sub
jbe
test
pop
cmp
mov
add
add
jecxz
pop
insb
jbe
into
fldt
mov
cmp
mov
xor
and
mov
fwait
sub
lret
js
add
jle
push
iret
fsubl
add
jnp
lds
add
mov
insl
cmp
test
mov
mov
add
out
add
mov
inc
mov
xchg
mov
jmp
mov
rolb
mov
rolb
mov
les
mov
sbb
mov
sub
loope
addb
mov
add
push
add
sub
add
ret
sbb
push
cmpsb
mov
lods
push
ss
addb
mov
jg
cmp
scas
mov
mov
lret
mov
mov
fadds
aam
stos
popa
mov
add
mov
popa
push
add
sub
add
scas
lret
xchg
clc
add
mov
add
out
sub
sbb
outsb
outsb
fstpl
fcmovnbe
mov
cld
jne
sbb
cli
dec
in
adc
add
mov
mov
and
lret
out
filds
imul
psubw
icebp
or
xor
mov
adc
add
xchg
and
mov
mov
xor
mov
popf
mov
dec
imul
fnstenv
fwait
inc
add
movsb
cmp
nop
add
int
lods
pop
das
stos
lds
xlat
andl
mov
add
mov
add
rcrl
sub
push
imul
cmp
jnp
dec
clc
pop
test
addr16
lock
dec
ljmp
xor
ljmp
xchg
mov
mov
add
pop
pushl
mov
cmpsb
pop
push
or
imul
push
data16
pop
pop
rolb
cmc
pop
arpl
inc
mov
sbb
fldcw
bound
mov
mov
or
add
enter
add
xchg
leave
mov
mov
cmp
push
mov
push
into
push
sbb
mov
pop
popf
cmp
in
rdtsc
and
inc
add
add
insl
fsubp
push
fldcw
notb
outsb
addb
dec
dec
leave
jmp
or
sbb
sahf
jl
loope
dec
inc
fidivs
mov
loope
js
jno
xor
or
mov
lret
sub
cmp
gs
addb
mov
imul
push
mov
mov
adc
mov
sub
paddsw
jmp
mov
add
out
pop
stos
xlat
push
loopne
mov
outsl
xchg
add
mov
jne
pop
lds
sub
sub
je
es
into
bound
mov
subl
icebp
lock
fists
mov
mov
mov
xor
mov
xor
mov
fwait
and
imul
add
adc
lcall
xchg
out
outsb
std
dec
and
mov
nop
add
mov
mov
mov
cmp
arpl
and
or
add
mov
pop
jno
and
add
sub
repnz
add
xchg
lret
add
xchg
xchg
add
add
mov
xor
mov
sbb
loope
mov
jns
ret
sbb
fstps
push
mov
push
xchg
movsb
addb
jb
mov
adc
push
add
xchg
mov
jecxz
jbe
mov
add
call
fs
push
add
add
mov
pop
nop
add
stos
or
mov
addr16
cli
and
push
push
cmc
push
cmp
cmp
mov
adc
mov
sub
cld
xor
mov
es
stc
movsl
rolb
mov
in
jbe
and
inc
daa
add
je
addb
jno
dec
addl
rcrl
sub
inc
add
test
pusha
add
mov
aad
dec
pop
rolb
mov
mov
ret
data16
pop
mov
mov
pop
pop
shrl
outsb
sbb
pop
adc
addb
int
or
aad
add
jl
and
add
add
fnstsw
addb
pop
pop
fdivr
mov
mov
aam
ficoml
push
add
mov
pusha
add
outsl
pop
loopne
mov
xor
mov
add
mov
adc
ljmp
pop
mov
jmp
std
leave
sar
sbb
popf
xlat
xchg
jp
out
stc
popf
jg
dec
cmpsb
pop
mov
bound
mov
xchg
cmpl
xor
mov
push
pop
cmp
fldt
push
dec
stc
iret
imul
inc
add
scas
dec
inc
popf
cltd
ljmp
mov
add
jmp
pop
nop
add
dec
xchg
and
out
add
mov
add
jbe
add
xchg
sti
lds
and
mov
add
and
and
mov
mov
repz
add
stos
leave
lcall
add
inc
sub
ss
inc
sbb
mov
sub
loope
jge
push
add
xchg
mov
xor
mov
cmp
enter
inc
fsubs
in
cmp
cmp
mov
ljmp
jmp
mov
mov
push
les
aad
or
iret
add
mov
add
movsb
lret
cmp
xchg
and
mov
add
test
je
mov
mov
mov
and
mov
sbb
repnz
xchg
fistpll
add
xchg
out
neg
lea
cli
stos
inc
add
lcall
add
mov
xchg
mov
add
add
push
cmp
enter
cmp
mov
push
pushl
add
in
aaa
sbb
sbb
and
xor
mov
mov
add
mov
mov
cmp
add
mov
insb
jge
int3
cmp
lock
add
cli
jno
add
testl
mov
push
ret
outsb
popf
in
cmc
and
jle
jns
rolb
jmp
popf
jnp
or
movsb
add
fsubrs
pop
pop
int
adc
ret
aas
je
add
mov
cltd
jbe
sbb
leave
xchg
dec
and
inc
add
stos
out
adc
add
adc
mov
mov
dec
cmpsb
aad
cld
sub
pop
push
lds
mov
xchg
inc
add
xlat
rolb
mov
add
sahf
das
ss
mov
pop
call
fdivs
cmp
or
jns
inc
push
mov
lret
jno
cmp
push
dec
jno
movsl
mov
lods
in
sbb
gs
outsl
aaa
js
add
stos
inc
add
ljmp
clc
pop
rorl
outsb
and
mov
cli
mov
js
sbb
fmulp
xor
mov
loope
xchg
fistl
loope
add
push
xor
cwtl
push
add
sti
scas
lea
xchg
adc
mov
or
ret
pop
add
push
adc
mov
test
pop
jecxz
pop
aad
fcom
add
push
loope
pop
xchg
add
je
add
test
add
repz
xchg
lods
cmpsb
outsl
loop
mov
inc
mov
sahf
cmpsb
and
push
pop
cld
jae
outsl
xchg
fwait
adc
mov
add
ds
mov
inc
cmp
cli
fsts
dec
loop
mov
mov
xor
add
mov
add
mov
enter
mov
bound
mov
lcall
rolb
pop
ss
sti
mov
sub
mov
aad
enter
pop
inc
push
faddl
iret
xchg
inc
cmp
pop
cmpsl
adc
pop
sub
imul
cmc
xchg
pop
jg
add
mov
xchg
addb
mov
mov
pop
mov
imul
xchg
inc
sub
push
pop
pop
jb
mov
not
nop
add
cmpsb
nop
add
fnstsw
xor
rolb
mov
jne
xor
add
mov
adc
mov
jge
dec
xor
cmp
mov
inc
repnz
xchg
test
test
pop
adc
adc
out
jnp
ret
insl
mov
bound
mov
add
add
add
push
mov
mov
add
subl
sub
mov
out
xchg
je
popa
jnp
xor
mov
or
add
dec
xchg
mov
mov
adc
mov
mov
mov
add
add
inc
pushf
dec
fldt
sahf
out
scas
neg
sub
stos
addb
out
dec
mov
mov
lods
rolb
xchg
add
mov
adc
mov
inc
jno
outsb
jp
addr16
mov
add
in
add
test
sub
lods
inc
add
hlt
pop
mov
cmp
dec
pushf
xchg
pop
cmp
addb
add
mov
sarl
sbb
out
es
dec
ds
push
int3
mov
adc
mov
test
cmpsl
mov
sahf
iret
call
and
lock
mov
aas
sti
add
js
add
push
cmp
pop
cli
inc
push
ja
cmpsb
mov
add
fwait
xchg
jns
cmpsl
pushf
xchg
add
mov
js
rolb
add
mov
add
mov
cmc
mov
rolb
addb
rolb
cli
je
push
or
popf
adc
imul
dec
lds
cmpsl
xchg
push
in
bound
mov
shll
inc
addr16
lahf
outsl
mov
test
fwait
cwtl
ss
jl
inc
add
add
mov
cmp
add
cli
dec
out
sub
xchg
mov
sti
cs
add
push
xor
lock
inc
sub
mov
mov
or
jg
mov
std
jl
das
xlat
cmp
add
mov
add
mov
mov
or
int3
sub
xlat
lods
outsl
adc
icebp
out
sub
push
dec
xchg
mov
mov
mov
add
dec
ret
push
imul
fwait
adc
mov
mov
fdivl
icebp
cmp
arpl
add
sbb
mov
xchg
in
mov
sub
cmp
jge
xor
add
fidivl
sbb
mov
mov
mov
pushf
test
add
mov
arpl
add
adc
idivl
mov
xor
mov
jnp
push
aad
xor
mov
jg
xchg
jbe
mov
dec
mov
push
enter
mov
xor
mov
add
cltd
mov
sahf
pop
loopne
mov
lret
xor
mov
ds
les
push
lock
test
lods
dec
in
jnp
add
mov
dec
push
xchg
push
cmp
cmp
mov
jmp
insl
and
mov
xchg
lret
ss
addb
mov
in
stos
mov
mov
addb
pushf
inc
add
insl
sub
mov
addl
dec
test
mov
mov
mov
jo
mov
add
lahf
movb
iret
jl
add
test
subl
fildl
bound
mov
mov
fadd
add
and
data16
dec
fwait
cmc
nop
add
sarl
xor
mov
cmpsb
addb
lods
cmovnp
ret
mov
rolb
mov
mov
nop
add
mov
lahf
add
add
lahf
dec
adc
enter
sub
add
mov
add
mov
addb
mov
and
mov
adc
cmc
in
inc
data16
and
mov
or
xor
aas
mov
add
loope
xchg
mov
xlat
mov
loope
mov
pop
cld
jle
add
enter
mov
sarl
add
mov
mov
rolb
mov
das
push
pop
pop
inc
adc
mov
mov
jb
mov
pop
lret
rcll
mov
jne
add
inc
loope
bound
mov
pop
inc
add
imul
mov
push
push
add
xchg
sbb
cmp
push
fwait
imul
pop
and
mov
mov
mov
mov
mov
mov
fdiv
lock
addr16
lods
in
push
or
xchg
dec
fidivrs
cmp
imul
pop
popf
repnz
pop
loop
mov
fstpl
pusha
add
pop
addb
notl
jns
mov
adc
mov
mov
daa
aad
add
orl
repz
pop
jge
pop
sbb
cmp
or
xor
mov
mov
cmp
add
mov
out
jle
cmp
push
inc
xor
add
cmp
dec
inc
push
leave
pusha
add
adc
add
jo
mov
es
adc
fcomip
add
popa
dec
push
imul
lahf
and
bound
mov
in
mov
dec
sar
pop
dec
insb
fisubl
xor
mov
mov
clc
pusha
add
dec
popa
movsb
imul
rcrl
fdivs
fwait
mov
push
mov
and
mov
add
in
mov
add
insb
fwait
jne
add
mov
add
ret
repnz
mov
dec
fwait
mov
pusha
add
sub
add
out
add
and
mov
mov
add
add
and
mov
add
xchg
cmp
add
cmp
in
in
out
stc
sub
xor
pop
aas
stos
adc
repz
arpl
dec
lcall
jno
dec
or
mov
adc
mov
mov
addb
dec
or
into
in
sbb
out
inc
jnp
divl
fisttps
add
push
xchg
push
add
jg
cli
adc
mov
cs
lcall
or
addb
push
mov
pop
test
add
outsb
inc
add
lods
xor
mov
movsl
push
mov
mov
mov
insl
sub
add
inc
ret
repz
testl
sti
popf
xchg
faddl
adc
mov
mov
mov
inc
cmc
mov
mov
arpl
add
or
mov
sub
mov
pushf
mov
add
in
addb
cmp
pop
or
add
cmp
out
jnp
jecxz
and
mov
pop
js
jns
mov
mov
mov
popf
insb
xchg
xor
pop
mov
mov
mov
mov
bound
mov
cs
daa
clc
inc
jmp
adc
sbb
scas
sti
xchg
mov
add
pop
or
mov
mov
add
jb
mov
fsts
mov
shl
add
adc
add
inc
xor
pusha
add
sbb
mov
adc
mov
cwtl
test
mov
mov
ja
add
jle
add
in
imul
aam
add
mov
mov
leave
cwtl
popa
aas
enter
lret
loopne
mov
push
add
rolb
mov
xor
adc
mov
sub
mov
mov
jns
popf
les
lock
rolb
mov
mov
xchg
cmpsl
in
inc
rorl
scas
sbb
in
popa
mov
cmp
add
mov
inc
fwait
or
add
push
push
insb
mov
testb
cmpsl
out
pushf
dec
dec
cmp
nop
add
add
popf
ds
fsubl
pop
adc
add
mov
pushl
add
mov
xlat
inc
imull
sbb
and
in
xor
ret
lods
leave
addb
call
mov
pop
jno
mov
mov
mov
flds
cli
or
and
movsl
push
cmp
hlt
cmp
mov
pusha
add
lret
aad
pushf
mov
addr16
insl
scas
cmp
mov
sti
xchg
call
dec
out
dec
roll
inc
inc
add
jle
add
outsb
insl
bound
mov
jge
push
push
fsts
shl
mov
push
add
sub
movsb
sub
mov
outsb
mov
enter
or
les
movsb
lea
add
mov
cmpsl
pop
sub
add
nop
add
ffreep
setge
sub
mov
mov
add
inc
scas
scas
adc
mov
sub
cltd
mov
mov
mov
call
jmp
add
push
bound
mov
ficomps
in
out
sbb
inc
push
sbb
lods
or
mov
add
dec
push
ja
addr16
sbb
mov
and
mov
mov
xor
arpl
in
jae
jbe
mov
mov
out
mov
pop
aas
movsb
and
mov
mov
add
mov
lods
jnp
add
xchg
test
add
lods
pusha
add
repz
clc
pop
mov
cmp
pop
stos
lret
pusha
add
push
cmc
ss
dec
jg
icebp
add
aam
dec
jae,pn
mov
jns
add
or
push
or
add
inc
mov
add
insl
sbb
mov
add
ret
sahf
xchg
inc
jg
cltd
out
pusha
add
outsl
stos
push
xor
mov
pop
es
add
mov
lea
nop
add
loope
movsb
mov
add
out
cmp
mov
adc
sbb
sti
sahf
mov
ss
pop
inc
add
dec
or
ret
adc
add
loopne
mov
inc
in
cwtl
inc
sbb
icebp
in
pusha
add
add
adc
push
xchg
pop
popa
pop
cmc
mov
stos
faddl
mov
test
inc
mov
or
aam
cmpsl
add
mov
out
cmp
and
mov
imul
mov
fcom
add
xor
add
jbe
mov
dec
mov
mov
pop
push
add
inc
sub
jecxz
stos
push
and
sti
push
pusha
add
pop
cli
cmp
clc
mov
orl
sub
ds
add
lahf
sbb
mov
cmp
push
mul
lret
mov
sub
call
cmp
xchg
ja
addr16
cmc
inc
ds
add
pop
roll
testb
mov
fisubrl
add
lods
aam
jns
jmp
sub
lock
pop
stc
cmp
pop
push
shrl
add
sub
fmulp
out
popf
imul
movsb
roll
push
jp,pt
inc
sti
cmpsb
enter
test
and
mov
clc
mov
hlt
popf
in
mov
mov
mov
add
add
push
pop
xchg
scas
movsl
rolb
mov
mov
mov
mov
fwait
pop
pop
add
add
movsl
inc
add
rcll
mov
mov
and
mov
add
dec
add
mov
aad
mov
mov
sbb
and
sub
psrlw
mov
cmp
push
stos
js
es
jl
popf
scas
int
push
mov
sub
add
jae
add
jl
stos
push
dec
loopne
mov
sub
scas
insb
or
cmp
add
sbb
test
lds
sbb
rolb
mov
dec
sbb
mov
jecxz
mov
cmp
imul
mov
aaa
ds
sarl
and
dec
push
fsubl
aaa
jo
mov
mov
pop
adc
mov
rolb
pop
cmp
mov
jmp
sbb
sub
mov
in
in
fmuls
jmp
mov
popa
mov
mov
cmpsl
ja
add
mov
cltd
test
xor
mov
add
out
lds
pop
scas
nop
add
mov
fisttpll
fisttps
sbb
jo
mov
lods
adc
mov
loop
mov
add
mov
lcall
clc
mov
push
xchg
mov
pop
rcll
sbb
add
mov
mov
mov
cmpsl
xchg
and
push
mov
mov
add
mov
test
mov
enter
hlt
push
fisubl
pushf
or
mov
fldpi
jno
add
mov
mov
fsincos
int
lret
add
xor
sub
add
jge
sub
pop
imul
xchg
shll
mov
cmp
gs
jnp
or
push
add
or
sahf
push
add
pop
leave
add
add
popa
mov
adc
jmp
add
in
cmp
in
add
ret
nop
add
arpl
test
add
mov
mov
cmp
int3
or
aam
call
cmp
stos
subl
sub
mov
cmpsl
test
ss
add
push
dec
pop
add
mov
popa
pushf
jnp,pn
out
lahf
jecxz
add
ss
pop
iret
movsl
xchg
xchg
add
bound
mov
jb,pn
mov
addb
jp
push
jp
push
aaa
mov
xchg
ss
adc
dec
pop
loopne
mov
std
std
stc
mov
rolb
mov
lods
pop
into
ds
test
cmp
push
sbb
pop
outsl
add
movsb
xor
int
icebp
stc
xor
mov
mov
mov
add
pusha
add
sahf
mov
fadds
mov
cmp
dec
idivl
test
notl
mov
add
or
jne
add
daa
mov
sbb
add
sbb
xlat
lock
jp
mov
int
jg
add
mov
adc
xor
mov
ja
add
stos
icebp
mov
stos
sub
pop
out
out
add
addb
mov
int3
dec
xchg
and
imul
pop
lods
es
rolb
mov
mov
orl
add
mov
xchg
mov
mov
call
mov
mov
add
mov
mov
rcrw
add
call
mov
repnz
add
pop
mov
sbb
xchg
sbb
mov
in
ret
hlt
in
dec
imul
push
addr16
dec
fwait
or
mov
int
scas
or
mov
push
add
mov
leave
pop
jge
mov
push
sub
pop
das
adc
and
mov
addb
sub
into
mov
and
out
add
add
mov
sub
mov
jge
push
add
cld
xchg
outsl
out
cltd
cmpsb
xor
or
add
arpl
jo
mov
or
jmp
rolb
mov
sbb
push
jge
loop
mov
add
mov
in
pop
sbb
mov
sti
dec
rcrl
in
rcll
imull
rolb
or
es
fcompl
pushf
call
rolb
mov
mov
dec
xor
mov
add
add
jbe
pop
mov
outsl
sbb
roll
dec
sbb
jecxz
dec
pop
movsb
add
scas
xchg
test
sahf
sti
aas
xchg
add
ja
add
fcomp
xor
mov
xor
mov
leave
mov
xlat
jle
add
add
add
sbb
jp
add
mov
fstps
out
add
adcl
mov
roll
or
fldl
loopne
mov
pop
cld
cmp
sbb
mov
jge
mov
mov
add
mov
mov
outsb
mov
pushf
cmpsl
xlat
jge
inc
icebp
test
ret
cmpsl
bound
mov
xchg
test
mov
in
jl
or
sub
sbb
fwait
push
fwait
testb
fucomip
sub
stos
lahf
sub
dec
imul
pop
mov
mov
mov
outsb
aad
fs
mov
and
cmp
in
cmc
es
ret
pop
mov
enter
std
pop
gs
jbe
outsb
mulb
movsl
cmpsb
dec
pop
cmc
ljmp
jmp
pop
fsubr
inc
add
add
sub
pop
push
add
mov
xchg
xchg
add
mulb
lcallw
lcall
pop
xchg
imul
push
lods
pushf
repnz
add
add
mov
add
push
mov
mov
mov
push
das
xchg
add
sahf
sub
inc
add
cmp
pusha
add
mov
insl
jmp
ss
mov
or
push
jno
int
pop
cmp
mov
stc
and
mov
sbbl
bound
mov
repz
mov
mov
clc
arpl
jmp
rolb
mov
dec
and
inc
add
jmp
or
push
add
fdiv
add
push
dec
pop
jb
mov
es
xor
fmuls
mov
jns
and
add
mov
add
mov
mov
mov
sub
adc
mov
negb
outsl
stos
rcrl
lods
loop
mov
dec
fmull
mov
aad
ficoms
jbe
fcom
stos
cmc
sub
pusha
add
scas
cmpsl
cmp
xchg
mov
mov
jle
xchg
sbb
mov
add
cmp
icebp
and
mov
add
pop
adc
mov
jmp
dec
out
int
ds
add
cmp
mov
add
mov
call
in
jl
add
mov
mov
int3
adc
push
call
movsb
scas
std
imul
cltd
jg
enter
or
movsl
dec
fdiv
mov
inc
push
add
mov
add
mov
mov
sbb
mov
pop
xchg
add
mov
addb
into
pop
xlat
xor
mov
mov
cmp
nop
add
mov
jmp
mov
fwait
mov
sbb
mov
dec
movsl
aam
mov
add
fwait
mov
xchg
std
int3
cli
into
fistl
pop
or
not
add
mov
inc
add
adc
stos
out
insb
cmc
outsl
jl
dec
dec
lea
je
out
sub
in
jo
mov
dec
cs
test
ds
xor
mov
sub
xchg
add
add
fdivr
push
xchg
xchg
inc
add
pop
mov
ret
sub
adc
arpl
nop
add
ja
mov
push
inc
aaa
leave
fisttps
add
add
pop
daa
ret
dec
imull
push
push
pop
and
mov
pop
xchg
fstpl
jmp
in
ret
mov
arpl
xchg
pop
cmc
in
enter
and
mov
lods
ret
dec
popf
xchg
popf
dec
call
add
add
mov
test
mov
addb
fsub
mov
or
dec
movsl
xchg
add
sbb
jp
adc
aas
and
jg
addb
jo
mov
outsb
faddl
sub
add
push
mov
repnz
movb
mov
add
repnz
das
mov
lret
pop
pop
pop
bswap
lods
or
dec
flds
lahf
dec
jle
pop
pusha
add
nop
add
xor
xchg
je
shll
pop
unpckhps
pop
cmp
xchg
cmp
pop
rolb
mov
test
nop
add
xchg
movsb
pop
nop
add
add
fsubs
cmp
or
mov
sub
and
add
mov
push
jge
push
jno
inc
or
mov
insb
ret
outsb
stos
dec
stos
push
in
das
mov
mov
mov
pop
xor
mov
sbb
and
mov
mov
pop
dec
mov
add
testb
mov
test
out
inc
pop
rolb
mov
lret
fld
cmp
or
mov
loopne
mov
add
lahf
fcmovnbe
add
mov
aad
leave
iret
scas
xor
outsl
mov
add
add
mov
add
mov
push
dec
movsl
mov
jnp
add
enter
mov
push
add
xor
lds
add
add
lret
gs
inc
mov
movsb
xchg
dec
push
mov
jo
mov
xchg
or
xchg
cmp
mov
dec
arpl
addr16
insl
cs
or
pop
in
cmp
jg
or
add
pop
pop
addr16
fbld
jp
pop
mov
enter
scas
scas
dec
pop
int
inc
add
cld
mov
push
add
jmp
sbb
mov
cmp
push
out
fcmovnb
inc
ljmp
dec
add
mov
test
push
or
mov
jo
mov
or
in
stc
fidivrs
aam
hlt
loop
mov
inc
fcom
or
pop
mov
cmp
dec
push
popf
je
sub
inc
add
mov
cmp
decl
inc
xor
mov
adc
mov
adc
or
mov
add
lea
add
addr16
fcomps
and
and
mov
add
in
mov
aaa
dec
pop
xchg
cmpsl
adc
mov
mov
out
jg
add
adc
add
mov
mov
lods
push
js
sbb
in
incl
mov
shll
add
std
and
mov
rolb
mov
xor
push
add
fcomi
dec
cmpsl
dec
dec
cmp
add
mov
add
fmull
rolb
and
xchg
mov
xor
mov
pop
xchg
add
xchg
add
add
cmp
daa
pop
sbb
adc
mov
jbe
push
mov
mov
out
adc
mov
movsb
xor
add
mov
mov
arpl
xchg
les
clts
mov
cmpsl
jno
adc
mov
dec
ss
add
nop
add
dec
mov
mov
addb
xor
out
inc
sub
in
cmp
ljmp
mov
add
and
xchg
add
scas
ds
xchg
out
popa
cmp
les
add
cmp
fs
adcl
push
push
popf
div
rcrl
xchg
mov
inc
add
lods
sbb
mov
dec
mov
add
dec
ljmp
test
mov
mov
cwtl
in
rolb
stc
testb
pop
jge
pop
jmp
inc
jbe
jp
movsl
dec
negb
fsubrp
cld
fstpt
and
loop
mov
add
add
cmp
sbb
test
add
add
inc
test
cmp
or
mov
jmp
pop
aad
jl
add
sbbl
pop
pop
cmp
add
rolb
mov
mov
test
xchg
pop
out
adc
mov
aad
addb
gs
cmpsl
dec
lret
and
mov
dec
mov
add
out
and
mov
test
fcmovnu
rolb
jmp
out
data16
add
in
call
push
add
jg
bswap
pusha
add
lock
imul
add
addb
inc
add
mov
lds
sub
addr16
cmc
or
add
xor
pop
inc
fists
mov
mov
in
in
pushf
ja
stc
mov
imul
add
test
jne
loop
mov
cmc
movsb
xchg
cmp
fcomi
add
out
sub
inc
xchg
iret
mov
cmp
mov
cmpsl
fs
xor
insb
addb
dec
sbb
fidivrs
inc
add
int
add
add
dec
fwait
push
add
mov
mov
cltd
mov
mov
xor
mov
jb
mov
lcall
pop
pop
jmp
mov
mov
cltd
popa
in
push
inc
aas
and
mov
add
test
out
add
dec
jne
rolb
mov
cmpsl
pusha
add
or
mov
mov
cmpsb
fldt
adc
mov
push
inc
xchg
mov
jl
mov
mov
add
pop
push
es
add
out
fs
insl
add
and
js
push
ja,pn
mov
pop
lret
outsb
leave
adc
mov
out
and
popa
sbb
add
push
add
add
mov
sbb
mov
add
sbb
add
push
arpl
add
add
adc
imul
mov
inc
scas
fdivs
mov
nop
add
and
mov
and
xchg
in
lock
stc
rcr
in
stos
icebp
adc
mov
add
sbb
add
insl
cs
add
je
ret
and
test
mov
movsb
sub
xor
mulb
aas
sub
mov
pop
mov
and
mov
sub
xor
mov
mov
dec
out
mov
mov
mov
xchg
add
add
cwtl
mov
add
dec
or
add
int3
pop
push
outsl
arpl
mov
insl
dec
ja
cli
or
xchg
mov
add
ss
push
popf
fcomi
scas
jg
ja
mov
xchg
cmpsl
fincstp
inc
and
add
mov
imul
cmpsb
out
add
and
inc
pusha
add
repz
mov
add
or
pop
ja
sti
test
adc
mov
dec
les
sbb
js
jecxz
sub
pop
jle
testl
or
add
sub
jnp
enter
dec
dec
jns
fwait
imul
adc
addb
xor
mov
jo
mov
movsb
adc
mov
add
mov
ret
aaa
repz
mov
inc
adc
cmc
jle
add
pop
mov
inc
add
push
mov
cli
add
mov
add
into
mov
add
add
mov
daa
lea
dec
mov
mov
add
std
xor
mov
roll
inc
or
sub
push
jmp
fidivs
addb
ret
mov
adc
dec
xlat
pop
sbb
xor
mov
push
push
add
adc
add
add
add
out
inc
mov
mov
mov
mov
jmp
jecxz
pop
push
add
rorl
inc
add
jg
out
cmp
mov
test
mov
xlat
pop
mov
xlat
stc
mov
insb
add
fimuls
mov
add
pop
xchg
xor
mov
lods
dec
push
es
rolb
mov
jbe
cld
mov
lret
xchg
and
or
int
ds
xor
mov
rolb
mov
inc
stos
icebp
mov
call
std
fs
add
mov
jmp
add
pop
jecxz
mov
mov
test
jge
jbe
aaa
cmp
jb
mov
push
out
jmp
mov
xchg
add
mov
movsl
rcl
add
insl
sub
mov
lds
inc
xchg
inc
mov
imul
and
mov
ret
repz
mov
jmp
stos
mov
adc
pop
rolb
and
mov
add
mov
sbb
das
loopne
mov
dec
dec
lds
lret
movsb
and
mov
les
mov
adc
int
std
sbb
add
add
loop
mov
data16
mov
add
cmp
or
push
pop
xor
mov
in
filds
lret
cwtl
lock
ja
adc
mov
pop
mov
or
sub
jle
divl
int
add
pop
xchg
add
mov
cld
jmp
aam
add
add
bound
mov
adc
mov
test
lock
push
add
mov
mov
aam
xor
mov
sub
out
out
test
int
push
bound
mov
outsl
sbb
loope
stos
loope
add
test
test
add
pushf
outsl
push
mov
or
add
lea
inc
add
pop
push
subl
ja
sub
add
leave
jbe
sbb
clc
je
mov
add
mov
pop
int3
pop
jle
add
test
mov
or
in
nop
add
push
xlat
push
inc
lea
rolb
mov
and
mov
add
mov
leave
cmpsb
movsb
bound
mov
fisttps
add
cmp
lds
lret
mov
pop
addb
push
xchg
pop
cmc
sub
inc
push
std
loopne
mov
jnp
mov
mov
mov
add
add
in
or
call
add
loopne
mov
pop
ja
push
jp
lds
adc
mov
jae
mov
aam
and
xchg
rcr
clc
inc
add
mov
xor
add
stos
stos
adc
pushf
xor
mov
pop
adc
mov
lret
leave
dec
xchg
bound
mov
and
cmp
dec
mov
ds
add
lock
mov
mov
jge
decb
inc
add
mov
js
fcoms
popa
lcall
add
scas
pusha
add
add
pop
mov
add
mov
mov
add
mov
mov
incb
insl
push
xor
mov
add
add
lds
mov
mov
jne
add
shll
push
and
xlat
cmp
icebp
into
scas
decl
stc
xchg
add
lahf
test
clc
add
mov
lods
mov
scas
xchg
add
rolb
mov
add
inc
add
xlat
testl
jp
iret
push
sbb
aaa
dec
int
sub
lock
fsubl
push
daa
pop
pop
int3
lahf
and
mov
stos
out
stos
adc
mov
pop
sbb
cmc
add
insl
mov
fadd
daa
sub
or
cwtl
jp
sbb
mov
idiv
dec
mov
ret
inc
stc
pop
mov
mov
test
fs
jb
mov
mov
test
pop
jecxz
mov
jae
sbb
or
jne
cmp
addb
stc
cmp
add
jl
iret
sub
js
mov
cmp
sub
fidivrl
mov
mov
out
push
push
mov
xor
addb
data16
cmp
and
mov
and
mov
in
rolb
mov
rolb
mov
add
add
mov
xor
add
lods
xchg
xchg
add
or
add
pop
in
and
cwtl
cmpsl
ljmp
inc
movsb
out
xchg
jne
and
mov
ss
add
stc
arpl
add
out
addb
mov
add
or
mov
dec
cli
mov
inc
push
js
sub
mov
mov
inc
add
mov
lds
stos
inc
mov
imul
mov
sahf
xchg
xchg
add
lahf
jns
mov
mov
mov
js
sbb
test
call
stos
out
mov
sub
add
push
jns
jae
inc
arpl
pop
and
mov
push
add
mov
pop
pop
lock
jns
add
ret
add
mov
shld
add
dec
xchg
dec
adc
add
fistpll
mov
les
pop
ljmp
adc
lods
mov
loope
mov
or
sub
inc
add
movsl
nop
add
add
xor
mov
add
mov
mov
loopne
mov
add
add
add
add
adc
in
cmp
lods
mov
and
mov
or
add
mov
cmp
pop
cmpsl
push
add
add
sbb
or
test
xchg
xor
mov
cld
push
dec
mov
mov
mov
mov
dec
cltd
test
add
sahf
and
mov
addb
enter
fdivrs
inc
out
shll
dec
pushf
mov
mov
addb
sub
fadds
icebp
jmp
out
pop
icebp
scas
push
outsb
mov
lods
xchg
lea
xorl
add
add
pushl
xor
mov
jne
mov
xchg
cmpsl
xchg
imul
jl
xlat
testb
xchg
notb
mov
adc
and
xchg
add
xchg
cs
int
sub
or
xchg
lcall
push
pop
and
andl
mov
sub
jmp
adc
popf
jns
jae
ret
jb
mov
into
pop
fwait
xchg
add
adc
mov
jp
jmp
es
mov
pop
or
sarl
sbb
dec
push
out
add
sbb
add
pop
jp
add
cwtl
adc
or
sub
stc
mov
pop
pushf
data16
mov
lock
jmp
jg
filds
mov
push
xor
add
stos
xchg
sub
add
add
add
test
ror
call
mov
imulb
scas
addl
push
fisttps
faddp
cmp
add
or
sbb
mov
mov
or
stos
add
dec
sbb
xorl
mov
mov
jp
add
sti
outsb
and
push
aas
dec
xchg
add
pop
sahf
jmp
dec
adc
pop
add
add
dec
mov
pushf
or
cmp
stos
or
not
jle
cmp
adc
cmpsb
pop
push
pop
pop
movb
xorl
sub
jne
jns
inc
daa
lea
aam
iret
sahf
add
outsl
iret
cwtl
mov
notb
push
adc
mov
out
add
mov
lock
and
sbb
pop
gs
aad
imul
jle
call
add
iret
dec
das
add
loope
push
jnp
push
test
pop
aas
add
call
ds
xor
mov
in
mov
push
sbb
cmp
add
xchg
insb
icebp
popf
mov
or
push
pop
lods
jae
add
mov
push
sahf
dec
pop
aaa
mov
xchg
add
or
mov
add
ljmp
sbb
adc
mov
or
insb
insb
mov
out
cld
fisubl
int
int3
ja
call
inc
loopne
mov
add
push
pusha
add
and
mov
adc
fists
add
push
es
or
je
add
pop
and
mov
pushf
xchg
add
mov
mov
aam
push
sbb
enter
add
mov
inc
fimuls
rolb
push
add
add
xor
mov
add
pop
inc
push
add
add
testl
das
mov
push
or
bound
mov
fcmovnb
pop
arpl
add
mov
jmp
prefetch
cmpsl
push
add
cli
addr16
scas
push
call
mov
test
int
pop
test
aas
rolb
mov
xchg
push
stos
jg
fld1
push
add
out
lcall
out
imulb
dec
les
sub
sahf
pop
adc
add
jg,pt
adc
mov
mov
mov
jnp
imulb
nop
add
mov
push
test
xor
mov
push
add
mov
dec
cmpl
sub
add
jb
mov
test
push
add
pusha
add
jg
cmp
movsl
sbb
pop
add
sub
fimuls
repz
in
push
xchg
add
mov
mov
dec
xor
mov
add
sub
rolb
sub
add
pop
inc
xchg
adc
mov
sbb
or
xchg
fsubrl
lret
or
and
mov
mov
push
adc
in
test
movsb
inc
call
and
inc
lods
sbb
addb
mov
add
add
in
push
xlat
ret
mov
add
mov
arpl
add
push
mov
imul
daa
lods
sub
nop
add
icebp
fs
add
mov
adc
mov
mov
add
int3
in
xchg
add
lahf
sub
and
mov
popf
test
add
fnstenv
lret
mov
rolb
mov
arpl
cli
adc
mov
xchg
test
sub
or
add
mov
xchg
mov
jle
push
jns
add
jne
outsb
add
and
filds
adc
cmp
lret
push
je
insb
data16
arpl
inc
add
pusha
add
jl
add
mov
mov
mov
loop
mov
or
dec
mov
mov
sub
add
mov
aas
addb
xor
mov
std
jb
mov
sahf
mov
imul
fstpt
add
in
leave
push
clc
cwtl
mov
lret
mov
loopne
mov
add
xor
mov
rolb
sbb
adc
mov
xchg
popf
mov
imul
xlat
and
push
ss
aas
jbe
mov
aas
test
addb
jb
mov
adc
mov
stos
mov
add
push
je
popf
or
out
cs
jl
rcr
test
stos
jo
mov
jno
inc
imul
mov
clc
sub
cmp
jnp
add
addb
dec
insl
inc
dec
pop
imul
and
mov
add
mov
test
pop
data16
sub
fidivl
mov
fistpll
daa
pop
xchg
add
push
xchg
lods
rolb
mov
xor
mov
ficomps
xor
mov
add
add
aas
lret
movsl
or
xchg
push
pop
or
mov
mov
les
aas
rolb
mov
dec
lret
mov
mov
mov
fwait
arpl
lret
pop
push
pop
lcall
in
mull
xor
push
imul
pop
jle
icebp
and
mov
stos
sub
mov
inc
xor
xchg
ret
or
xchg
xchg
out
cwtl
cmp
leave
and
fadd
mov
xor
xor
mov
add
mov
ret
xchg
add
xor
jne
out
jl
insl
xchg
xlat
mov
push
icebp
adc
fists
pop
lahf
push
mov
out
lret
pop
jae
insb
dec
pop
adc
rolb
mov
pop
sub
cmp
cmp
jmp
push
test
dec
and
mov
pop
push
jne
add
daa
xchg
add
mov
pop
fsts
add
daa
adc
icebp
add
mov
sub
jmp
mov
sarl
pop
movsl
mov
mov
in
cmpsl
push
test
xchg
cli
jne
stos
hlt
sbb
cmc
ja
rcrl
pop
add
jl
js
pop
push
icebp
lock
mov
aaa
fcoml
push
mov
repnz
xchg
add
inc
aas
clc
in
frstor
add
fnsave
rcll
movsb
imul
fiadds
stos
pop
mov
jg
movsb
call
mov
dec
add
mov
and
sbb
or
repz
mov
and
mov
fsubs
inc
scas
xor
mov
pop
push
jns
lret
imul
dec
xchg
mov
add
add
out
add
mov
cmpsl
or
sbb
cltd
xchg
push
add
jnp
shll
ds
std
out
pop
movsb
mov
outsb
jge
or
cmc
out
rcrl
pop
addb
shll
pop
mov
mov
fisubs
adc
mov
bound
mov
pop
mov
jno
add
ljmp
mov
mov
inc
fisubrs
add
pop
sbb
or
add
and
jp
add
mov
cmp
stc
sub
mov
push
add
add
add
dec
lods
jg
add
mov
and
pop
cmp
cmp
and
mov
push
mov
xchg
scas
gs
cmpsl
jmp
pop
pop
fdivr
mov
insl
mov
jmp
or
rolb
clc
mov
repz
add
hlt
mov
cli
mov
or
jae
add
paddw
cmp
inc
xor
mov
xlat
fiaddl
fcoml
jecxz
std
push
clc
mov
sbb
add
in
pop
imul
imul
add
shrl
push
jmp
push
arpl
mov
push
push
sbb
mov
jnp
jl
sub
add
das
out
or
pushf
mov
mov
lds
jae
loopne
mov
mov
adc
sbb
int3
pop
mov
adc
mov
jecxz
jns
and
xchg
inc
add
mov
mov
mov
in
pushl
iret
dec
dec
movsb
cltd
inc
in
xor
and
sub
jbe
add
loop
mov
out
pop
or
rolb
mov
xor
mov
add
mov
inc
add
mov
inc
rolb
mov
mov
mov
mov
lea
add
jo
mov
add
sub
mov
or
jae
aas
loopne
mov
out
lcall
adc
mov
cld
cltd
push
in
jle
les
dec
sub
push
lds
push
sub
jae
pop
pop
in
mov
mov
or
push
insb
mov
sbb
xchg
sbb
mov
add
mov
add
mov
mov
ret
bound
mov
leave
sub
notb
mov
mov
mov
add
xchg
mov
jb
mov
sub
fs
add
mov
jns
inc
add
mov
sahf
push
ret
xchg
mov
xchg
das
pop
jno
xor
stc
xchg
cwtl
aas
jmp
fadd
add
or
add
nop
add
pop
je
jnp
mov
in
jge
lcall
enter
stc
xchg
add
xchg
and
mov
add
fdivl
dec
xchg
add
mov
inc
cmp
addb
dec
or
andl
pushf
adc
arpl
ds
mov
push
loop
mov
xorl
icebp
ds
stos
jp
xor
js
add
dec
repz
push
and
mov
scas
push
mov
lods
push
add
mov
movsl
sub
fnstenv
add
mov
lcall
insl
lea
pop
or
ja
add
mov
rolb
out
repz
or
mov
lock
add
mov
push
sub
pop
jnp
lcall
inc
add
or
les
add
or
jle
lret
mov
lock
adc
mov
hlt
sub
lods
ja
lods
or
cs
mov
dec
add
mov
mov
push
xchg
xchg
rolb
mov
and
andl
mov
mov
xchg
out
push
outsl
and
fnstenv
rolb
icebp
xchg
adc
mov
add
sahf
mov
sbb
pushf
mov
mov
das
push
imul
nop
add
pusha
add
cli
in
or
mov
lcall
mov
add
xchg
sbb
mov
int
rolb
mov
sub
out
je
sub
mov
aaa
push
pushf
mov
add
dec
push
add
add
iret
mov
mov
add
lods
jle
popf
lret
jns
pop
pop
scas
icebp
jl
add
test
pop
imul
lcall
sub
mov
mov
add
nop
add
or
pop
aaa
sub
mov
xchg
mov
mov
mov
hlt
jo
mov
add
cld
mov
fwait
mov
pop
test
repnz
mov
mov
js
add
mov
mov
jecxz
arpl
in
adc
js
jne
scas
loop,pn
mov
js
scas
cs
mov
mov
xchg
mov
jmp
mov
sub
pop
mov
fdiv
add
mov
popl
push
or
add
pop
push
inc
add
sbb
ljmp
pop
push
out
xchg
xor
dec
dec
mov
mov
xchg
add
insl
imul
aaa
lret
loopne
mov
mov
add
dec
and
mov
inc
add
and
add
cmp
add
jl
repnz
rolb
mov
test
add
mov
mov
enter
cmp
mov
sub
sub
arpl
add
mov
add
aad
hlt
xchg
add
out
fmull
fidivs
add
and
xor
add
cli
js
xchg
and
xor
mov
push
xchg
mov
xchg
not
mov
sbb
mov
fstpt
jmp
cltd
outsb
test
mov
adc
mov
and
mov
iret
push
sbb
test
repz
fildll
add
ret
mov
mov
mov
jo
mov
jno
int3
in
rolb
cltd
inc
jp
add
mov
mov
lret
mov
sbb
xor
mov
sub
add
add
mov
aaa
mov
mov
sbb
out
jae
add
xor
mov
call
sub
dec
std
sub
dec
mov
fcmovne
mov
push
add
push
cmpsb
jo
mov
lods
adc
movlps
mov
data16
mov
icebp
adc
mov
ret
movw
xor
mov
aaa
sbb
mov
mov
mov
je
lock
push
jge
nop
add
push
sbb
mov
mov
mov
je
frstor
pop
jae
add
addb
dec
enter
add
push
add
adc
mov
ja
sarl
xor
mov
add
mov
jmp
add
fwait
inc
add
add
sub
adc
mov
mov
mov
rolb
mov
imul
pusha
add
mov
jno
inc
lock
cmp
or
cmp
cmp
mov
sub
add
lds
add
and
pushl
add
lea
sub
add
ja
pop
shrl
aaa
add
mov
adc
rolb
mov
or
adc
loopne
mov
and
mov
test
test
std
pop
das
test
pop
ljmp
aas
adc
ja
add
aas
lock
mov
outsl
dec
push
add
loop
mov
mov
daa
mov
adc
mov
bound
mov
cmpsl
and
add
mov
xchg
in
jb
mov
mov
add
mov
outsb
mov
inc
out
or
dec
cli
imul
add
inc
dec
pop
mov
jl
rolb
push
mov
mov
push
in
mov
jp
aad
fisubl
lahf
cwtl
dec
pop
idivl
hlt
inc
jno
scas
out
fs
mov
out
sbb
add
mov
addb
les
les
and
inc
addb
mov
dec
dec
sub
add
pop
mov
repnz
add
push
in
mov
sbb
mov
add
pop
arpl
jl
clc
es
shll
mov
lret
lret
ja
pushf
push
ja
jae
xchg
push
loop
mov
sub
movsl
and
mov
scas
mov
sbb
mov
lock
push
add
or
pop
test
in
add
sub
add
lahf
cld
flds
add
dec
or
jo
mov
lods
lea
mov
std
add
sbb
jns,pn
sbb
mov
stc
fldt
clc
mov
mov
cmpl
mov
fstpt
clc
sub
imul
faddl
pop
mov
mov
cmp
mov
mov
inc
mov
xchg
jmp
pusha
add
mov
or
stos
mov
mov
sbb
add
test
cld
mov
lahf
lods
rolb
mov
or
add
xchg
mov
mov
std
jb
mov
sub
mov
jno
lds
lcall
mov
mov
push
insb
jg
add
test
add
test
xchg
aam
add
add
cmp
sbb
std
cmpsl
jo
mov
in
outsl
mov
cltd
outsl
movsb
xchg
arpl
pop
mov
fisttpl
ret
mov
call
mov
mov
dec
mov
mov
imul
push
addb
sti
lods
repnz
push
lock
sub
add
mov
or
mov
xchg
add
jns
lcall
adc
lret
adc
mov
mov
mov
add
lds
dec
xchg
add
add
mov
jmp
cmp
fyl2x
mov
ss
sbb
mov
xor
mov
in
sbb
js
fisttpl
aas
inc
xor
mov
mov
push
jle
test
pop
test
int
mov
ljmp
add
cld
sti
add
lahf
pop
out
jne
outsb
push
fistpll
adcl
cld
sbb
stc
sbb
sub
mov
push
popa
inc
ds
dec
add
add
inc
sub
mov
pop
sub
out
cmc
hlt
movsb
test
aad
fucomip
out
pop
aad
add
or
adc
mov
and
call
mov
stos
and
push
outsl
js
fdivs
rolb
mov
stc
stos
imul
mov
rorl
add
xor
mul
xchg
insl
in
cmp
dec
divl
enter
aam
cmp
mov
mov
push
add
pop
inc
mov
arpl
js
fistl
cmpsb
out
push
fdivrl
add
mov
mov
jg
sub
mov
mov
add
jl
pop
mov
add
ret
hlt
mov
mov
movsl
push
add
adc
mov
pop
push
xchg
push
jo
mov
jb
mov
push
add
push
scas
xchg
cmp
mov
or
mov
negl
inc
jle
notb
cmp
push
ret
pop
out
cmp
or
push
fwait
xchg
jmp
add
pop
and
mov
or
mov
mov
add
jo
mov
mov
aas
mov
push
or
mov
in
and
add
icebp
ret
pusha
add
into
jnp
mov
js
inc
xchg
add
iret
and
mov
mov
imul
add
add
mov
mov
fisttpl
les
imul
lock
add
inc
imul
rolb
sub
add
fstpl
mov
inc
jmp
stos
mov
inc
mov
add
movsb
test
mov
loopne
mov
mov
addb
and
fisubrs
cltd
in
scas
das
sub
call
jle
inc
ficompl
add
adc
mov
mov
mov
insb
jl
add
cmp
push
jg
je
adc
cmpsb
add
mov
add
mov
push
loope
stos
cmovs
out
or
cltd
adc
mov
into
movsl
mov
leave
std
inc
sub
push
xchg
push
push
lea
arpl
daa
test
mov
mov
mov
cmpsb
jne
mov
jbe
orl
mov
mov
sbb
insb
out
jo
mov
add
add
imul
test
lea
mov
iret
cmp
push
sub
cmc
call
xor
andl
ja
movsl
mov
mov
rolb
mov
add
add
mov
mov
ret
pop
add
mov
jmp
adcl
jne
insb
aad
les
lock
call
mov
add
cmp
mov
mov
xchg
fsubs
adc
arpl
fwait
inc
xrelease
mov
mov
add
sbb
cltd
cmc
lret
pop
pop
movsb
jle
mov
clc
sub
and
loop
mov
xor
jo
mov
sbb
jbe
add
jo
mov
mov
in
aas
or
adcl
mov
mov
dec
call
mov
add
mov
add
add
pop
enter
scas
mov
push
add
xlat
xchg
mov
or
leave
xlat
and
push
call
stos
cli
mov
adc
mov
in
outsl
dec
mov
dec
call
arpl
test
ja
fcompl
and
mov
loopne
mov
add
mov
pop
dec
adc
daa
push
ss
add
es
incb
add
lcall
jns
loopne
mov
mov
inc
fnstenv
int
insl
lock
ss
pop
inc
mov
je
andl
subl
mov
clc
int
xchg
inc
jo
mov
jnp
mov
lds
add
xor
add
add
rolb
mov
push
add
inc
ror
sub
push
cwtl
arpl
dec
lds
sub
popf
loop
mov
inc
add
dec
dec
daa
fdivr
jo
mov
adc
mov
jl
lcall
mov
jne
test
mov
in
jnp
dec
xchg
adc
dec
dec
mov
aam
add
add
ficomps
mov
mov
hlt
leave
fdiv
mov
cmp
in
jno
call
pop
rolb
mov
push
add
pop
mov
add
rolb
mov
sub
add
dec
aad
add
or
mov
add
jo
mov
add
add
mov
jns
sbb
mov
add
pop
int3
push
arpl
mov
mov
inc
leave
out
mov
jge
mov
lds
jg
shr
mov
mov
add
xor
jae
add
jno
nop
add
mulb
mov
inc
sub
ret
pop
jp
cmp
push
insl
in
inc
xor
mull
add
mov
andl
add
fldl
add
jne
adc
mov
call
cmp
lea
add
mov
aad
jg
push
add
addb
lret
mov
xchg
or
pop
je
sub
sub
add
mov
add
dec
adc
mov
sbb
push
xchg
cmp
mov
mov
stos
inc
and
add
faddp
popf
jp
mov
in
pushf
les
pop
movsl
mov
xchg
add
mov
in
sub
lock
adc
fiaddl
mov
add
add
add
mov
mov
and
sub
add
jno
sub
add
mov
fdivr
xchg
es
pop
int
or
pop
push
push
add
mov
lret
cmp
add
mov
xor
fstps
stos
mov
arpl
dec
cmpsl
je
add
or
scas
mov
mov
add
add
jmp
mov
aas
xlat
popa
xchg
push
pusha
add
xor
mov
add
xchg
ljmp
clc
sbb
add
dec
dec
sarl
das
ja
aam
mov
mov
mov
jno
mov
std
cmpsb
pop
or
sub
ret
add
inc
add
jb
mov
add
insl
ficoms
cmp
cmp
arpl
adc
mov
mov
test
mov
icebp
pop
lcall
imul
mov
lock
xchg
imul
and
mov
insb
cli
sbb
mov
addb
sub
loop
mov
add
push
out
clc
rolb
cld
adc
mov
sbb
jno
int3
cmp
inc
sub
and
add
mov
mov
add
shl
add
add
dec
fistl
fcmovnb
xchg
sbb
add
mov
inc
add
scas
addb
jecxz
jo
mov
mov
dec
lods
pusha
add
pcmpeqb
pop
mov
inc
sub
sahf
dec
add
push
popa
ret
test
popa
and
jno
std
mov
sbb
shll
mov
or
adc
sbb
xor
add
scas
call
sub
xchg
add
lret
insl
jmp
shl
push
add
mov
add
and
mov
sbb
mov
inc
mov
pushf
xchg
add
mov
mov
mov
mov
push
xlat
jne
cltd
jl
loope
dec
pop
out
fs
fwait
div
add
add
mov
add
sub
stos
out
out
inc
adc
mov
pop
pop
fwait
jl
push
pushf
fisubs
add
les
inc
in
gs
sarl
test
inc
pop
cmp
mov
mov
mov
ret
std
lods
ret
insl
test
jg
xor
mov
push
les
mov
ja
dec
pop
jp
add
mov
add
add
add
inc
add
repz
mov
test
dec
sub
cmpsb
xchg
hlt
pop
and
mov
jnp
inc
inc
enter
cmp
or
cmpl
mov
mov
add
add
jae
add
addb
stos
adc
and
dec
inc
add
mov
add
clc
cmp
lods
lds
repz
rolb
mov
lods
pop
jmp
sbb
daa
outsl
in
and
cltd
pop
test
or
sahf
ret
hlt
and
mov
sub
mov
mov
add
push
iret
xor
addb
dec
inc
jns
mov
add
pop
xchg
fisttps
cmp
fs
add
bound
mov
mov
push
add
mov
add
mov
push
xor
jns
fxch
rolb
mov
add
jae
jne
not
push
dec
aaa
jecxz
xchg
test
iret
sbb
into
sbb
mov
mov
add
add
mov
aam
test
xchg
stos
mov
adc
mov
dec
jg
mov
xor
mov
add
mov
rolb
mov
push
mov
insb
sbb
mov
push
inc
cmpsl
outsl
repz
ja
insb
jbe
add
inc
sbb
mulb
add
cli
in
xchg
and
add
hlt
mov
ds
std
stos
test
cwtl
pusha
add
add
gs
inc
add
iret
mov
cmp
mov
mov
add
hlt
mov
or
cmp
mov
mov
push
jne
int
sub
dec
jle
add
mov
mov
lret
adc
push
or
pop
fildll
sub
cmpl
lods
sub
push
add
or
movb
mov
mov
add
push
out
hlt
mov
or
add
mov
add
ret
cmpsb
mov
add
pop
lea
call
adc
mov
mov
push
test
ret
loope
sbb
and
inc
or
in
push
fstps
rolb
inc
add
iret
cltd
test
in
xchg
sub
mov
into
iret
xor
mov
add
pop
or
cltd
mov
add
add
add
push
aaa
jp
and
daa
jae
js
sti
out
jecxz
test
xor
inc
lods
pop
mov
pop
test
add
in
inc
add
in
je
mov
add
mov
adc
mov
movsb
cli
rolb
mov
mov
imul
call
push
push
mov
add
cmp
ret
bound
mov
cmpsl
inc
add
push
hlt
sub
bound
mov
sub
push
add
adc
jp
pop
jbe
dec
push
inc
cmp
test
repz
bound
mov
mov
jo
mov
fdivrl
add
lret
sub
into
hlt
shll
mov
mov
add
xchg
rolb
mov
std
add
mov
scas
rolb
mov
xchg
scas
xor
addr16
mov
sbb
sahf
imul
mov
sbb
or
jl
fimuls
stos
mov
das
jg
mov
and
mov
add
add
add
ds
sub
inc
rolb
mov
mov
pop
cmc
arpl
xchg
dec
push
jbe
ja
add
jecxz
pusha
add
mov
pushf
sbb
movsl
pop
push
ds
test
repnz
xchg
loop,pn
mov
sub
jns
add
add
scas
lds
in
lret
shrd
mov
ljmp
mov
test
mov
aaa
negl
out
or
fwait
xor
lcall
and
jecxz
sahf
fs
xorl
mov
ret
sub
mov
mov
nop
add
pop
pop
and
add
rolb
mov
cmp
dec
lcall
mov
js
push
pop
enter
out
out
jae
imul
daa
or
add
mov
add
enter
inc
lock
and
outsb
add
mov
cmp
insl
insl
or
dec
sbb
iret
in
jmp
add
jmp
xchg
sbb
testl
cli
out
inc
add
mov
add
xor
dec
add
lret
cmpsl
bound
mov
xchg
add
add
mov
iret
cmp
int
or
add
push
addr16
daa
adc
and
sbb
mov
cmpsl
fisttps
pop
cltd
aaa
cmpsb
cli
addb
gs
add
add
inc
add
add
inc
add
or
cwtl
in
lret
js
mov
mov
mov
js
add
mov
cmpsl
mov
add
gs
mov
lock
std
pop
inc
ret
xor
scas
adc
adc
mov
addb
ffreep
add
call
mov
push
fs
sub
push
xchg
adc
mov
in
test
sub
mov
insb
mov
mov
mov
inc
pop
pushf
or
dec
popa
jge
cli
jmp
adc
mov
cmpl
and
mov
mov
mov
add
mov
add
xchg
add
sub
add
mov
cwtl
shrl
call
sbb
int3
stc
jno
jne
add
jp
sbb
jne
mov
mov
jge
mov
in
mov
mov
rolb
sti
rolb
mov
divl
mov
mov
xchg
pop
lea
lods
ret
xor
fwait
in
sub
call
and
mov
dec
fdivrs
std
sub
ja,pt
in
insl
xchg
movsl
fldt
lahf
or
sbb
xchg
clc
push
cmp
insb
cmc
repz
mov
mov
adc
mov
add
mov
xchg
add
mov
inc
loopne
mov
push
xchg
adc
mov
jbe
inc
add
lret
sarl
test
adc
mov
hlt
mov
mov
mov
loope
sbb
xchg
add
movsl
mov
lret
xchg
or
dec
lods
decb
into
push
xchg
daa
in
sti
not
cli
dec
inc
add
add
and
push
push
loop
mov
clc
faddp
aas
pop
and
mov
xchg
add
pop
pop
dec
icebp
iret
mov
insb
call
adc
int3
cmp
dec
mov
imul
sarl
mov
add
mov
add
imul
jbe
in
xchg
subl
inc
add
aad
adc
xchg
inc
dec
sbb
inc
cld
scas
xor
mov
push
cmpsl
xchg
pop
xor
inc
add
test
pushf
insb
repz
mov
jae
cmp
mov
in
and
xor
mov
ljmp
cli
pop
jmp
pop
jle
fisubrl
es
cmp
stos
xchg
jns
push
xchg
fwait
out
cmpsb
fsts
mov
sbb
push
bound
mov
fnsave
and
imul
jne
scas
sub
addb
pop
les
add
fnstcw
dec
lods
jnp
stos
sbb
push
add
jnp
repnz
fnsave
mov
fs
mov
cmp
add
stos
dec
ja
shr
jle
jg
sbb
add
jmp
cmc
data16
add
nop
add
jae
inc
std
sub
mov
cmp
js
push
and
std
call
cmp
repnz
lahf
ss
rolb
and
mov
mov
adc
and
push
push
adc
add
add
sub
add
mov
mov
test
sub
add
add
loope
out
fisubl
inc
repz
or
jmp
ret
dec
int3
faddp
sbb
addr16
inc
push
jmp
mov
cmp
jmp
testb
cmp
add
fdivl
mov
sti
dec
xchg
jne
mov
jne
mov
xchg
in
mov
arpl
add
xor
mov
push
mov
add
add
jle
movsb
cltd
push
xor
mov
jno
add
mov
fidivs
mov
std
cmp
pusha
add
add
mov
imull
add
icebp
mov
add
sub
cwtl
mov
ret
jbe
fwait
dec
lock
orl
push
enter
cs
or
add
add
jnp
add
ljmp
push
jp
mov
add
add
or
rol
xor
rolb
push
and
mov
incb
outsb
jne
fiadds
sahf
fimuls
adc
mov
mov
mov
push
add
stos
nop
add
lret
out
mov
add
in
and
mov
ds
jp
insl
into
loope
es
popf
mov
mov
ud1
repnz
dec
cmp
mov
jno
add
cltd
call
mov
xor
pop
daa
cwtl
outsl
inc
add
and
add
jo
mov
xor
jl
loopne
mov
mov
mov
xor
mov
rcll
mov
inc
add
push
lds
loopne
mov
mov
out
mov
pop
arpl
or
add
add
out
adc
mov
and
mov
out
add
add
stos
mov
enter
add
mov
or
cmc
test
sbb
add
jle
pop
and
mov
test
subl
mov
test
in
sarl
loope
add
xchg
inc
sbb
addb
push
xchg
clc
imul
mov
add
ljmp
mov
aad
notl
sub
jnp
add
push
jbe
or
clc
icebp
sbb
xchg
add
add
pop
adc
mov
mov
aad
lods
dec
sub
in
jno
lret
push
and
mov
xor
mov
xchg
add
push
adc
fwait
push
ja
xchg
je
jecxz
jnp
fwait
sub
or
mov
loope
add
insl
xchg
rolb
cmp
and
jp
push
out
pop
fs
pop
sbb
xchg
out
repz
sub
mov
mov
cmp
add
sbb
divb
add
mov
xor
mov
nop
add
rolb
mov
int
fildl
add
push
in
addb
push
jle
and
push
xlat
xchg
push
push
or
sbb
add
add
clc
repnz
jae
add
sar
nop
jae
add
add
add
out
mov
add
and
add
repnz
jae
les
mov
dec
fwait
cld
nop
jmp
nop
mov
add
inc
xchg
mov
nop
jmp
daa
add
ljmp
or
clc
repnz
jae
lret
addr16
push
clc
repnz
jae
add
add
ds
add
add
movsb
enter
cmp
add
mov
clc
repnz
jae
or
stc
add
ja
and
clc
repnz
jae
add
add
push
push
mov
xchg
ret
insl
add
outsl
add
and
lret
jnp
insl
add
jmp
das
inc
dec
jl
fwait
cld
nop
jmp
nop
inc
jae
jp
mov
sub
add
mov
mov
outsl
shrl
push
mov
xchg
ret
jae
ret
mov
push
clc
repnz
jae
movsl
add
add
add
adc
pop
add
fwait
cld
nop
jmp
ja
pop
add
add
pop
loope
out
push
clc
repnz
jae
add
add
cwtl
mov
clc
repnz
jae
lret
or
add
aaa
addb
aaa
fwait
xor
fwait
cld
nop
jmp
mov
add
repnz
jae
add
or
add
cmc
je
pusha
clc
repnz
jae
add
add
lret
inc
xchg
add
clc
repnz
jae
fldl
fldl
jns
test
add
fwait
cld
nop
jmp
add
inc
stc
inc
push
mov
xchg
ret
or
add
or
mov
add
jae
pop
mov
add
add
loopne
add
add
sbb
mov
push
push
fwait
cld
nop
jmp
add
inc
xor
mov
add
nop
jmp
push
add
add
add
push
add
repnz
jae
add
mov
add
push
mov
inc
add
push
add
add
jge
fiadds
mov
push
push
mov
xchg
ret
add
or
add
and
clc
repnz
jae
mov
push
or
in
xlat
das
mov
clc
repnz
jae
add
add
cmp
repz
mov
xchg
ret
add
add
mov
jge
andl
jae
out
or
add
add
add
add
xor
add
pop
dec
mov
clc
repnz
jae
add
add
add
nop
jae
daa
lcall
xchg
out
add
clc
repnz
jae
or
jp
test
nop
jae
stc
add
enter
cli
loopne
add
inc
pop
add
push
fwait
add
fwait
cld
nop
jmp
add
cmpsl
add
mov
clc
repnz
jae
mov
add
and
lahf
shl
clc
repnz
jae
jae
enter
cld
pop
clc
repnz
jae
add
add
add
enter
jae
push
jne
cmp
add
sbb
add
repnz
jae
jne
add
lea
push
mov
xchg
ret
add
cmp
int3
pushl
clc
repnz
jae
add
add
loop
cmp
repnz
jae
add
push
add
rolb
mov
mov
push
mov
xchg
ret
loop
add
in
xchg
in
inc
push
mov
xchg
ret
fucom
mov
add
add
add
fwait
cld
nop
jmp
fstpl
push
mov
xchg
ret
bound
add
rep
clc
repnz
jae
dec
add
pop
ret
clc
repnz
jae
mov
lcall
lret
clc
repnz
jae
add
push
mov
fwait
cld
nop
jmp
out
add
push
mov
xchg
ret
movsl
add
add
mov
adc
repnz
jae
mov
add
repnz
jae
add
add
movsb
jmp
add
rep
clc
repnz
jae
add
cmp
ljmp
inc
add
inc
stc
ja
add
mov
nop
jmp
add
add
add
add
repnz
jae
enter
fwait
cld
nop
jmp
inc
nop
add
add
add
sub
mov
xchg
ret
add
cmc
sbb
mov
xchg
ret
add
add
in
mov
repnz
jae
add
add
gs
add
repnz
jae
les
out
pop
add
cld
sub
fwait
cld
nop
jmp
jae
jne
add
mov
fwait
cld
nop
jmp
add
sub
sahf
sbb
add
repnz
jae
mov
and
clc
repnz
jae
bound
add
pop
mov
push
mov
xchg
ret
add
lcall
sar
inc
add
cmpsl
add
stc
xlat
inc
jmp
jae
inc
add
mov
fwait
cld
nop
jmp
add
add
push
movsl
dec
or
clc
repnz
jae
out
in
add
out
add
shrl
jne
je
repnz
jae
add
out
inc
mov
clc
repnz
jae
add
iret
mov
mov
mov
nop
jmp
add
popf
add
cmp
pop
je
lock
sti
in
add
add
add
push
or
pop
clc
repnz
jae
add
cmp
inc
fwait
cld
nop
jmp
cmp
insl
mov
jp
clc
repnz
jae
jmp
or
dec
cmp
repnz
jae
movsl
mov
and
inc
insl
movzwl
clc
repnz
jae
add
mov
clc
repnz
jae
add
pop
or
dec
sbb
add
repnz
jae
out
add
pop
popf
je
fwait
cld
nop
jmp
in
add
sub
sti
clc
repnz
jae
add
add
mov
clc
repnz
jae
in
cmp
inc
std
subl
push
mov
xchg
ret
add
mov
inc
sbb
repz
xchg
ret
mov
pop
mov
cltd
add
clc
repnz
jae
movsl
add
cmp
fwait
cld
nop
jmp
in
ds
outsb
call
clc
repnz
jae
add
insl
outsl
dec
lods
push
mov
xchg
ret
mov
cmpsl
lcall
cmp
inc
add
add
clc
repnz
jae
jmp
in
add
add
add
jne
add
sar
repnz
jae
add
add
stc
add
stos
push
push
mov
xchg
ret
stc
frstor
add
clc
repnz
jae
mov
or
add
xchg
int
jg
clc
repnz
jae
lcall
add
mov
fwait
cld
nop
jmp
jne
add
repnz
jae
add
mov
rolb
xchg
ret
lcall
insl
push
fwait
cld
nop
jmp
add
out
jmp
add
mov
clc
repnz
jae
add
add
add
mov
clc
repnz
jae
in
ds
sbb
repnz
jae
add
add
pop
les
xchg
sahf
add
std
outsl
rcrb
orl
xorl
mov
mov
clc
repnz
jae
add
insl
mov
add
jmp
add
add
inc
add
out
add
add
xor
mov
test
mov
xchg
ret
add
or
mov
mov
fwait
cld
nop
jmp
add
add
cmp
mov
push
clc
repnz
jae
xor
push
lahf
mov
add
stos
push
push
mov
xchg
ret
popf
add
jae
lret
cmp
fwait
cld
nop
jmp
jae
out
add
xor
mov
nop
jmp
add
add
jae
xlat
nop
add
mov
xchg
ret
add
mov
call
cmp
ret
add
lea
mov
inc
add
add
add
clc
repnz
jae
add
add
jae
or
nop
jae
out
add
iret
movsl
add
les
push
mov
xchg
ret
add
iret
out
int3
pop
clc
repnz
jae
add
mov
add
jmp
mov
xchg
ret
or
add
inc
aaa
add
clc
repnz
jae
add
pop
lahf
outsl
cmp
add
repnz
jae
add
pop
bound
mov
xor
clc
repnz
jae
add
loop
in
add
fwait
push
fwait
cld
nop
jmp
add
add
fstp
add
out
add
cmp
repnz
jae
add
jns
popa
add
mov
xchg
ret
lcall
inc
loopne
repnz
jae
add
add
pusha
push
mov
xchg
ret
pop
insl
mov
add
or
mov
adc
repnz
jae
add
add
add
dec
mov
clc
repnz
jae
or
nop
add
ret
add
push
aad
add
add
cmc
add
incl
clc
repnz
jae
and
pop
add
cmp
jmp
movsl
or
cmp
inc
popf
jmp
nop
jmp
add
fnsave
add
fs
sar
incl
add
out
mov
add
inc
mov
mov
xchg
ret
and
and
mov
sar
nop
jae
mov
out
cmc
dec
push
clc
repnz
jae
add
sbbl
or
jae
jne
or
add
jmp
add
clc
repnz
jae
add
add
mov
clc
repnz
jae
daa
add
inc
cltd
mov
clc
repnz
jae
popf
add
cmpsl
add
add
mov
add
clc
repnz
jae
inc
addl
nop
jae
add
sbb
add
bound
outsl
fwait
cld
nop
jmp
in
add
add
out
adc
call
clc
repnz
jae
add
and
sub
test
nop
jae
and
ffreep
inc
add
add
mov
push
mov
xchg
ret
add
mov
sbb
add
cmc
dec
add
add
daa
cmp
mov
call
push
in
inc
add
pop
mov
add
scas
lea
push
mov
xchg
ret
or
aaa
mov
mov
nop
jae
enter
jae
out
in
jmp
mov
add
mov
add
add
jno
mov
clc
repnz
jae
add
mov
jne
push
mov
xchg
ret
mov
mov
pop
fwait
cld
nop
jmp
add
add
les
xchg
push
mov
xchg
ret
or
push
mov
clc
repnz
jae
or
jecxz
push
clc
repnz
jae
ja
fldl
xor
push
sub
repnz
jae
add
add
test
popa
add
repnz
jae
out
add
inc
inc
add
push
mov
xchg
ret
add
jmp
cmpsl
mov
nop
jmp
add
out
add
mov
fwait
cld
nop
jmp
lcall
int
mov
sbb
add
add
mov
je
fwait
cld
nop
jmp
cmp
add
nop
push
mov
xchg
ret
inc
enter
add
push
mov
clc
repnz
jae
fldl
jmp
add
addb
push
mov
clc
repnz
jae
add
add
ja
insl
out
jne
clc
repnz
jae
pop
in
mov
jae
addl
or
loopne
mov
mov
clc
repnz
jae
add
out
ret
push
push
mov
xchg
ret
jmp
add
out
add
scas
mov
push
mov
xchg
ret
mov
add
or
pop
cld
push
mov
xchg
ret
add
add
inc
mov
int3
mov
clc
repnz
jae
add
add
inc
add
mov
xchg
ret
add
add
cmpsl
add
clc
repnz
jae
cmp
add
add
dec
add
clc
repnz
jae
add
push
iret
add
inc
lret
mov
clc
repnz
jae
stc
add
add
add
mov
nop
jae
mov
mov
push
clc
repnz
jae
xor
mov
in
xchg
aad
add
sar
repnz
jae
add
movsb
sbb
popa
add
mov
xchg
ret
jne
add
pop
test
dec
push
fwait
cld
nop
jmp
and
add
add
sbb
add
repnz
jae
lcall
div
movsb
sub
repnz
jae
out
xor
daa
ret
enter
add
inc
movb
cmp
ret
addl
insb
add
clc
repnz
jae
dec
add
add
adc
add
repnz
jae
push
add
push
fwait
cld
nop
jmp
outsl
enter
add
adc
mov
add
add
clc
repnz
jae
out
inc
loop
add
add
push
push
mov
xchg
ret
add
enter
cmp
lea
fwait
cld
nop
jmp
insl
mov
add
mov
push
mov
xchg
ret
sbb
add
add
xor
mov
fnstcw
clc
repnz
jae
add
mov
add
mov
xor
enter
add
or
add
repnz
jae
push
ja
imulb
mov
fwait
cld
nop
jmp
pop
jmp
jmp
and
mov
pop
clc
repnz
jae
ds
xchg
sbb
xor
add
clc
repnz
jae
sbb
pop
fwait
cld
nop
jmp
add
add
cwtl
mov
clc
repnz
jae
in
jne
add
add
mov
adc
jmp
mov
add
add
add
ret
jnp
cltd
or
add
add
add
pop
daa
add
jmp
lahf
inc
add
add
fwait
cld
nop
jmp
add
outsl
add
jl
clc
repnz
jae
add
mov
pop
popf
xor
cli
shl
fwait
cld
nop
jmp
add
add
in
stc
jmp
mov
clc
repnz
jae
pop
out
lcall
fwait
cld
nop
jmp
movsl
push
mov
mov
xchg
ret
add
add
inc
test
add
test
fwait
cld
nop
jmp
nop
in
dec
jmp
add
cmp
clc
repnz
jae
dec
add
add
popf
dec
add
mov
mov
loop
mov
add
fwait
cld
nop
jmp
cmp
stc
jp
mov
push
clc
repnz
jae
add
push
add
xchg
clc
repnz
jae
xor
add
add
pop
fwait
cld
nop
jmp
lahf
add
add
imul
add
repnz
jae
add
addl
pop
and
repnz
jae
jne
add
inc
add
enter
add
add
add
add
mov
mov
push
mov
xchg
ret
add
outsl
add
mov
add
add
repnz
jae
insl
add
popl
fwait
cld
nop
jmp
ret
add
add
test
rolb
mov
arpl
add
repnz
jae
inc
out
mov
rolb
mov
sub
clc
repnz
jae
mov
out
mov
in
test
lea
push
add
add
dec
inc
adc
mov
rolb
mov
les
clc
repnz
jae
add
iret
mov
xor
jl
sbb
repnz
jae
add
out
add
push
fwait
cld
nop
jmp
lahf
add
add
cmpsl
add
sbb
in
lods
mov
jnp
test
add
mov
cmpsb
sbb
jge
clc
repnz
jae
xor
lret
add
add
sbb
cmp
repnz
jae
add
out
enter
pop
subl
push
mov
xchg
ret
movsl
add
sbb
repnz
jae
mov
jae
add
or
in
push
add
add
add
mov
repnz
jae
jne
outsl
add
nop
je
clc
repnz
jae
add
mov
push
mov
fs
cld
nop
jmp
insl
mov
jle
fwait
cld
nop
jmp
and
mov
bound
push
mov
xchg
ret
add
pop
push
frstor
lcall
or
add
repnz
jae
jae
enter
xchg
mov
clc
repnz
jae
add
mov
or
add
fwait
cld
nop
jmp
add
or
mov
lods
mov
push
mov
xchg
ret
nop
add
pop
cmp
mov
xchg
ret
add
mov
dec
aad
pop
push
mov
xchg
ret
add
iret
mov
mov
fwait
cld
nop
jmp
add
mov
push
mov
xchg
ret
or
add
lcall
or
clc
repnz
jae
add
mov
clc
repnz
jae
add
nop
out
arpl
clc
repnz
jae
add
add
insl
cmp
pop
rep
clc
repnz
jae
add
add
add
es
clc
repnz
jae
lcall
push
jecxz
jp
mov
clc
repnz
jae
or
nop
jmp
mov
in
add
mov
xchg
ret
mov
dec
enter
aam
add
clc
repnz
jae
jae
add
dec
add
push
mov
xchg
ret
movsl
add
lcall
jae
inc
add
add
jae
push
cmp
nop
jmp
add
or
clc
repnz
jae
add
ljmp
rolb
xchg
ret
add
add
add
clc
repnz
jae
outsl
mov
and
mov
xchg
ret
mov
mov
xchg
cmpl
cmp
lcall
fldl
movsl
add
je
clc
repnz
jae
add
lds
clc
repnz
jae
mov
jae
add
push
mov
xchg
ret
lcall
add
mov
push
mov
xchg
ret
add
inc
mov
jmp
lcall
popf
add
lahf
enter
sti
clc
repnz
jae
inc
stc
add
xchg
fwait
cld
nop
jmp
add
add
dec
mov
fwait
cld
nop
jmp
xor
insl
nop
movsb
add
repnz
jae
enter
jae
ds
inc
clc
repnz
jae
add
add
pop
ljmp
clc
repnz
jae
out
inc
inc
or
add
clc
repnz
jae
add
add
add
fldl
jmp
add
add
adc
mov
mov
xchg
ret
sbb
ja
add
mov
popa
loope
jne
clc
repnz
jae
ljmp
adc
repnz
jae
add
inc
lcall
inc
jp
jmp
incl
add
add
adc
repnz
jae
mov
add
jecxz
je,pn
clc
repnz
jae
stc
mov
push
mov
xchg
ret
add
popf
or
inc
fisttpl
mov
adc
repnz
jae
sbb
add
add
nop
jmp
jmp
mov
add
jl
inc
add
add
add
add
push
test
ljmp
mov
push
insl
add
cld
nop
jmp
add
lahf
loop
mov
push
push
mov
xchg
ret
add
add
add
add
push
mov
xchg
ret
mov
cmp
repz
repnz
jae
mov
add
xor
clc
repnz
jae
add
mov
add
lret
clc
repnz
jae
mov
popf
add
add
pushf
add
push
mov
xchg
ret
mov
add
push
enter
cmp
ret
lcall
mov
loop
inc
add
fisttpll
xor
ret
push
or
mov
xchg
ret
add
jne
in
cmp
movzwl
clc
repnz
jae
daa
add
fstpl
sar
nop
jae
add
lahf
add
daa
or
sahf
es
clc
repnz
jae
clc
ret
fwait
cld
nop
jmp
add
fldl
mov
repnz
jae
movsl
add
mov
pusha
add
repnz
jae
add
add
cmpsb
jne
add
mov
nop
jae
dec
add
jmp
add
cwtl
dec
fwait
cld
nop
jmp
mov
andl
push
lret
inc
add
lcall
and
je
clc
repnz
jae
add
out
sbb
mov
push
mov
xchg
ret
insl
add
inc
add
add
clc
repnz
jae
out
popf
lret
add
popa
clc
repnz
jae
in
add
and
add
add
repnz
jae
add
stc
xbegin
repnz
jae
inc
insl
add
add
or
repnz
jae
ja
add
add
nop
jae
add
or
movsb
lret
adc
mov
add
clc
repnz
jae
lahf
add
add
push
xchg
push
ret
mov
add
mov
mov
add
add
out
test
dec
cmp
cld
nop
jmp
inc
cmp
or
cmp
cmp
ret
mov
sbb
cmpl
fwait
cld
nop
jmp
in
insl
push
add
lock
add
add
repnz
jae
nop
add
stc
sub
dec
add
mov
xchg
ret
or
cmp
scas
mov
clc
repnz
jae
cmp
add
add
fisttpll
ret
inc
add
add
imul
jae
inc
pop
add
add
sbb
mov
xchg
ret
add
push
daa
add
repnz
jae
mov
daa
jae
and
clc
repnz
jae
pop
add
dec
cmp
repnz
jae
out
add
shll
mov
mov
mov
push
push
mov
xchg
ret
add
fucomp
add
pop
add
clc
repnz
jae
pop
add
out
add
xchg
pop
fmuls
jae
iret
add
je
fwait
cld
nop
jmp
add
movb
mov
cmp
ret
add
jmp
add
jne
fwait
cld
nop
jmp
add
xor
mov
mov
push
mov
xchg
ret
add
add
jne
fwait
cld
nop
jmp
movsl
add
jle
jge
clc
repnz
jae
add
mov
repnz
jae
add
movsl
add
repnz
jae
ds
add
add
test
jae
add
add
daa
add
movsl
push
cmp
add
add
repnz
jae
add
dec
mov
clc
repnz
jae
ljmp
mov
clc
repnz
jae
add
leave
push
push
mov
xchg
ret
iret
add
nop
out
addl
in
mov
or
add
add
pop
clc
repnz
jae
add
xor
add
mov
clc
repnz
jae
add
std
lea
clc
repnz
jae
add
out
in
mov
clc
repnz
jae
add
mov
shr
clc
repnz
jae
mov
mov
clc
repnz
jae
fisttpll
fstl
add
cmp
fwait
cld
nop
jmp
movsb
add
add
ret
adc
repnz
jae
add
movsl
cmpsl
add
movb
cmp
ret
add
ljmp
xor
dec
ss
clc
repnz
jae
movsl
add
mov
xchg
ret
add
pusha
clc
repnz
jae
mov
add
andl
mov
xchg
ret
inc
dec
mov
jge
clc
repnz
jae
out
add
or
into
je
clc
repnz
jae
fldl
add
repnz
jae
mov
stc
les
lahf
popf
push
clc
repnz
jae
popf
cmc
or
mov
cmpl
fwait
cld
nop
jmp
popf
nop
add
sbb
inc
mov
repnz
jae
add
add
push
add
clc
repnz
jae
add
add
lahf
out
ds
push
mov
xchg
ret
add
add
add
inc
or
repnz
jae
add
out
ret
push
push
mov
xchg
ret
add
daa
daa
add
pop
rolb
mov
add
add
cli
je
add
add
rolb
mov
jne
clc
repnz
jae
pop
movsl
out
xor
nop
jae
lahf
add
jne
iret
inc
lods
dec
push
mov
xchg
ret
add
lret
or
out
add
push
mov
xchg
ret
add
add
add
add
leave
sub
repnz
jae
add
mov
mov
clc
repnz
jae
out
movsl
cmp
pusha
add
clc
repnz
jae
nop
cmpsl
add
and
mov
sbb
jae
outsl
cmc
push
add
add
xor
and
mov
xchg
ret
push
ja
mov
test
pop
push
mov
xchg
ret
mov
pop
lret
add
imul
fwait
cld
nop
jmp
or
mov
bound
inc
push
mov
xchg
ret
mov
add
add
cmp
movl
add
add
add
nop
jae
add
outsl
andl
mov
add
cmp
frstor
inc
inc
add
std
jmp
mov
push
mov
xchg
ret
in
add
add
fwait
movzwl
clc
repnz
jae
cmp
xor
clc
repnz
jae
lahf
push
in
out
add
push
mov
add
sar
add
sub
pop
add
push
add
call
jae
add
ljmp
push
push
mov
xchg
ret
jmp
add
jae
mov
int
add
inc
add
mov
add
jmp
clc
repnz
jae
add
add
lahf
add
cli
not
clc
repnz
jae
enter
popf
out
and
add
stc
std
push
mov
cmp
icebp
fwait
cld
nop
jmp
stc
cmp
add
xor
add
int
push
mov
xchg
ret
pop
or
mov
hlt
pop
mov
clc
repnz
jae
mov
or
call
clc
repnz
jae
add
or
mov
clc
repnz
jae
jae
movsl
pop
adc
test
clc
repnz
jae
add
add
mov
push
mov
xchg
ret
and
add
mov
jmp
or
outsl
add
in
add
out
ljmp
fwait
cld
nop
jmp
mov
add
mov
cld
nop
jmp
add
add
add
fldl
movl
jmp
add
add
cmp
jbe
push
cmc
push
repnz
jae
mov
add
add
jne
clc
repnz
jae
add
movsl
fs
add
fwait
cld
nop
jmp
add
cmp
aad
call
nop
jae
cmpsl
add
movsl
xor
add
mov
clc
repnz
jae
add
push
adc
push
clc
repnz
jae
mov
xchg
fwait
cld
nop
jmp
add
jne
xor
inc
add
mov
clc
repnz
jae
les
addl
jne
clc
repnz
jae
add
sbb
pop
jb
clc
repnz
jae
add
or
jae
add
movsl
cmp
out
xor
clc
repnz
jae
xor
add
clc
repnz
jae
mov
mov
mov
fwait
cld
nop
jmp
add
mov
mov
cmp
daa
add
lret
mov
clc
repnz
jae
add
xor
add
mov
add
clc
repnz
jae
movsl
mov
add
nop
jae
add
or
pop
cmpsb
push
rolb
test
jae
out
ret
add
mov
jae
repnz
jae
add
in
test
add
xor
clc
repnz
jae
add
popf
add
or
js
repnz
jae
out
add
pop
clc
repnz
jae
iret
add
mov
or
add
dec
mov
push
mov
xchg
ret
popf
daa
xor
add
aas
push
push
mov
xchg
ret
add
enter
xor
clc
repnz
jae
add
mov
push
mov
xchg
ret
add
add
xor
sub
jmp
in
inc
add
add
add
and
mov
and
jg
sti
fwait
cld
nop
jmp
add
movsl
pop
add
inc
adc
repnz
jae
push
out
iret
add
sti
clc
repnz
jae
out
add
xor
clc
repnz
jae
add
stc
add
add
xchg
add
xor
inc
add
jmp
or
popf
mov
clc
repnz
jae
add
cmp
mov
stc
clc
repnz
jae
sbb
add
dec
push
add
pop
clc
repnz
jae
pop
add
out
or
cmp
add
add
mov
out
add
enter
and
repnz
jae
cmp
add
icebp
clc
repnz
jae
jne
iret
mov
add
push
push
clc
repnz
jae
add
mov
add
cmp
fwait
cld
nop
jmp
add
pop
les
mov
clc
repnz
jae
or
mov
add
into
xor
clc
repnz
jae
mov
daa
loop
ret
clc
repnz
jae
add
out
movsb
add
leave
fwait
cld
nop
jmp
jne
xor
insl
add
sti
je
clc
repnz
jae
in
add
cmp
clc
repnz
jae
enter
push
cmp
loope
add
add
clc
repnz
jae
cmp
add
add
add
out
jecxz
add
add
and
push
mov
xchg
ret
in
xor
sbb
add
movsb
es
rep
clc
repnz
jae
add
add
popf
add
fnsave
sar
repnz
jae
add
mov
repz
repnz
jae
mov
add
repnz
jae
add
add
in
scas
push
clc
repnz
jae
or
jmp
mov
inc
and
repnz
jae
add
add
movsl
sbb
add
add
mov
add
call
clc
repnz
jae
mov
add
nop
jae
in
add
add
loope
jno
stos
push
clc
repnz
jae
mov
mov
add
add
inc
adc
repnz
jae
add
mov
je
out
add
in
add
call
add
sub
add
add
adc
mov
gs
cld
nop
jmp
mov
daa
pushf
pop
push
mov
xchg
ret
movsl
add
add
add
or
cmp
ret
mov
lret
mov
jmp
add
add
nop
and
mov
clc
repnz
jae
add
mov
ret
push
mov
xchg
ret
add
add
sti
mov
fwait
cld
nop
jmp
add
lcall
mov
add
popa
call
add
pop
test
popa
add
mov
xchg
ret
add
in
add
enter
jmp
add
add
cmc
nop
movsl
add
push
clc
repnz
jae
stc
mov
push
mov
xchg
ret
add
add
bound
add
jecxz
inc
add
outsl
add
sbb
dec
add
cld
nop
jmp
insl
add
add
mov
ret
fdivrp
incl
iret
cmpsl
add
add
or
dec
mov
clc
repnz
jae
cmpsl
movsl
outsl
mov
clc
repnz
jae
out
jae
add
add
and
clc
repnz
jae
or
add
cmp
push
mov
xchg
ret
add
push
push
mov
xchg
ret
cmc
popf
add
cmc
mov
sub
clc
repnz
jae
bound
lcall
cld
nop
jmp
jne
xor
push
mov
add
adc
push
mov
xchg
ret
add
sub
fwait
cld
nop
jmp
add
mov
nop
add
push
fwait
cld
nop
jmp
mov
sbb
jne,pt
insl
mov
adc
sbbl
add
add
daa
cmp
nop
jae
outsl
in
add
lahf
lea
push
mov
xchg
ret
inc
add
mov
fwait
cld
nop
jmp
add
push
mov
add
insb
add
push
mov
xchg
ret
addl
xor
sub
mov
xchg
ret
add
add
inc
mov
push
mov
xchg
ret
lahf
popf
inc
push
outsl
or
fwait
mov
push
mov
xchg
ret
and
mov
movsb
iret
xor
clc
repnz
jae
in
add
mov
clc
mov
push
mov
xchg
ret
add
pop
add
add
push
mov
xchg
ret
add
mov
mov
pusha
clc
repnz
jae
in
push
add
add
lea
clc
repnz
jae
add
pop
movzwl
clc
repnz
jae
mov
push
cli
push
clc
repnz
jae
add
add
add
jmp
out
add
clc
repnz
jae
mov
add
mov
push
lahf
push
clc
repnz
jae
jmp
add
bound
out
mov
jmp
cmp
lret
in
movsl
xlat
lcall
cmpsl
inc
divb
in
add
fsubrp
push
idiv
lcall
loopne
jmp
add
mov
fwait
xor
clc
repnz
jae
lcall
clc
repnz
jae
add
add
cmp
clc
repnz
jae
insl
xor
cmpsl
sbb
fistl
adc
inc
add
lcall
je
add
clc
repnz
jae
inc
iret
add
add
repnz
jae
dec
mov
add
sub
nop
jae
add
cmp
push
sar
nop
jae
add
jne
cmpsl
fldl
lret
push
push
mov
xchg
ret
add
add
add
clc
repnz
jae
frstor
add
pop
jns
ja
clc
repnz
jae
inc
out
jne
hlt
test
test
repnz
jae
add
add
cmp
and
add
cmp
ret
mov
cmpsl
sub
test
add
clc
repnz
jae
add
add
inc
push
add
fwait
cld
nop
jmp
add
pop
mov
nop
jae
ret
insl
add
add
add
sub
leave
jmp
add
add
add
sbb
movb
cmp
ret
mov
inc
ljmp
add
add
repnz
jae
in
mov
cmpsb
dec
lea
clc
repnz
jae
fnsave
cmp
pop
mov
clc
repnz
jae
jae
ljmp
sbb
nop
jae
out
add
add
add
clc
repnz
jae
jmp
or
add
xor
add
fwait
cld
nop
jmp
and
add
push
clc
repnz
jae
outsl
add
add
add
in
add
add
add
jmp
leave
and
mov
push
mov
xchg
ret
add
iret
mov
mov
mov
add
or
clc
repnz
jae
in
pop
mov
clc
repnz
jae
add
add
dec
cmp
repnz
jae
add
cmpw
fwait
cld
nop
jmp
inc
mov
nop
sub
jae
add
add
clc
repnz
jae
xor
add
call
clc
repnz
jae
cmp
add
js
xor
add
clc
repnz
jae
iret
add
or
fwait
cld
nop
jmp
bound
mov
in
cmc
cwtl
movswl
jmp
call
add
lcall
or
dec
cmp
repnz
jae
lcall
add
repnz
jae
cmp
cmc
mov
sti
push
mov
add
adc
add
test
nop
dec
jne
clc
repnz
jae
lahf
out
imulb
mov
clc
repnz
jae
out
ret
out
mov
icebp
repnz
clc
repnz
jae
add
cli
mov
fwait
cld
nop
jmp
add
popf
add
and
jne
pushl
clc
repnz
jae
add
pop
push
clc
repnz
jae
lahf
inc
add
add
add
je
clc
repnz
jae
add
add
ja
clc
repnz
jae
mov
add
mov
mov
clc
repnz
jae
add
cmpsb
gs
ret
clc
repnz
jae
add
mov
ja
mov
push
mov
xchg
ret
add
daa
ds
enter
add
clc
repnz
jae
push
pop
add
mov
mov
mov
inc
ljmp
out
or
addl
scas
enter
jmp
lcall
dec
mov
clc
repnz
jae
cmc
dec
pop
dec
lods
clc
repnz
jae
popf
or
les
jl
clc
repnz
jae
add
add
adc
cltd
mov
push
mov
xchg
ret
mov
ljmp
jno
inc
add
add
xchg
jg
clc
clc
repnz
jae
add
add
or
add
pop
clc
repnz
jae
add
stc
add
sbb
dec
insl
push
clc
repnz
jae
out
add
movsb
mov
movsb
clc
repnz
jae
lret
lcall
jmp
jae
add
ljmp
repnz
jae
ljmp
add
mov
push
push
mov
xchg
ret
push
mov
ja
pop
add
clc
repnz
jae
cmp
or
push
mov
xchg
ret
add
add
add
sbb
fwait
cld
nop
jmp
add
out
add
dec
clc
dec
inc
clc
repnz
jae
pop
add
add
add
push
mov
xchg
ret
or
and
mov
and
shll
xchg
add
sahf
add
xor
mov
jb
mov
xlat
loopne
mov
add
sub
mov
cmp
mov
mov
inc
pop
sti
lods
pop
leave
lahf
cltd
hlt
fisttps
add
dec
and
mov
jnp
mov
rcrl
fadds
mov
push
or
rolb
fs
or
shll
movsb
rep
lcall
popa
pop
es
lds
mov
add
push
mul
add
push
adc
and
lods
pushf
cmp
out
sbbl
int3
mov
push
add
mov
push
dec
cmp
inc
add
rolb
mov
cmpl
dec
arpl
insb
enter
dec
jne
add
push
xchg
sbb
mov
mov
jecxz
dec
dec
pop
push
push
add
mov
and
and
mov
sub
mov
fnsave
add
mov
cmp
push
addb
add
bound
mov
lcall
pop
rcl
inc
jnp
jbe
aad
xchg
sub
mov
dec
rolb
mov
mov
mov
mov
add
test
lds
movsb
loope
lods
inc
mov
js
and
movsb
movsb
pop
push
mov
mov
mov
xchg
adc
sti
popa
jle
add
aas
addr16
add
add
mov
push
int3
fnstenv
jne
add
fbstp
dec
negl
pop
dec
jg
stos
loopne
mov
les
add
cwtl
inc
fidivl
movsl
push
add
and
cmp
xor
repnz
rorl
add
mov
scas
push
add
add
cmp
add
cmp
pop
sbb
add
cmp
add
mov
add
or
scas
mov
cmp
cmp
mov
jecxz
testl
scas
sub
imul
test
fs
sahf
jo
mov
xchg
pop
xchg
mov
push
arpl
add
insb
lods
adc
or
ds
fidivrs
add
xchg
scas
dec
imul
cmp
repnz
iret
mov
push
add
mov
add
or
mov
add
mov
fcomps
dec
jbe
scas
add
mov
mov
add
test
jbe
xchg
clc
rorl
mov
arpl
mov
int3
xchg
or
js
out
fwait
push
les
add
dec
scas
and
add
bound
mov
pusha
add
push
adc
mov
jb
mov
adc
inc
add
add
xor
mov
add
xchg
ja
loope
pop
mov
sbb
mov
sub
mov
out
fmuls
lcall
cs
mov
adc
sbb
mov
lods
sbb
aad
rolb
add
mov
and
stos
test
fstps
fistl
mov
and
mov
add
ret
test
push
scas
into
sbb
jle
frstor
sbb
aad
add
mov
jp
add
xchg
lahf
iret
stc
push
or
add
mov
rolb
mov
add
add
mov
lcall
cmpsl
pop
jmp
std
mulb
mov
inc
jmp
rolb
mov
cmp
sbb
aad
lea
fnstcw
mov
add
inc
lods
mov
into
mov
add
dec
icebp
sub
pop
jbe
add
add
xchg
mov
cmp
mov
lea
leave
jg
mov
mov
push
xchg
imul
pop
xchg
insl
xor
dec
or
add
mov
xchg
mov
cmpsl
fwait
je
push
clc
jl
add
cmpsl
sbb
je
test
aaa
lret
testb
je
add
mov
pop
popf
add
add
pop
adc
std
add
mov
mov
pop
pop
push
sub
loope
cs
dec
iret
leave
cli
inc
push
and
mov
adc
lods
std
mov
add
bndldx
je
aam
mov
stos
mov
in
mov
xor
mov
adc
mov
jg
pop
rolb
mov
mov
jl
add
xchg
pop
lds
add
add
pop
fldcw
add
cmp
test
mov
add
add
sbb
add
lea
clc
stos
shrl
sub
add
or
inc
inc
xchg
mov
ffree
lret
mov
pop
shll
add
mov
xorl
mov
mov
leave
push
mov
dec
jp
cmc
dec
dec
sbb
add
mov
mov
aas
dec
pop
lcall
sbb
xchg
xchg
addb
bound
mov
aam
int
add
ds
aam
rcrl
push
mov
dec
add
outsb
addb
aaa
sti
xor
xor
in
xor
push
test
mov
sub
mov
test
arpl
inc
adc
rolb
mov
add
mov
loopne
mov
adc
mov
mov
pushf
inc
dec
push
lcall
popf
sub
call
push
movsb
jae
adc
mov
sbb
add
movl
pop
push
add
xor
pop
pop
es
push
add
rorl
lahf
fstl
add
jmp
add
add
jge
fsubr
mov
adc
mov
hlt
pop
xor
mov
xor
mov
mov
add
xchg
pop
lret
dec
sbb
in
pop
inc
out
mov
add
mov
popa
add
add
rolb
mov
outsb
lods
iret
es
hlt
incb
daa
add
out
addb
int
cmp
jp
iret
dec
rorl
jnp
mov
mov
mov
jno
add
add
inc
fildl
mov
lret
popa
in
and
inc
les
mov
push
arpl
es
loope
add
mov
jecxz
and
push
add
dec
pop
jnp
mov
mov
inc
sahf
xor
mov
or
dec
dec
clc
jno
ret
roll
int3
cmp
push
gs
cmpsb
test
add
add
cmp
xor
mov
out
push
lahf
mov
inc
push
inc
add
push
mov
push
int3
add
sbb
je
rolb
mov
lret
lods
inc
inc
xlat
ret
hlt
cmp
or
cmp
pop
pusha
add
lods
push
xchg
out
dec
push
add
sub
in
xchg
sub
add
sbb
test
xchg
add
push
adc
pushf
or
add
cmp
cs
lret
mov
es
xchg
add
mov
mov
movsl
mov
mov
mov
ss
xchg
sbb
sbb
add
fsubl
push
fs
cmp
mov
notl
leave
and
dec
dec
ds
xchg
pusha
add
rolb
mov
sti
mov
cmp
add
decl
cmpsl
adc
cmpl
mov
xlat
enter
and
mov
mov
dec
push
inc
jl
rolb
mov
sbb
ljmp
cmp
mov
or
add
repz
addb
add
add
mov
mov
pop
lods
fisubrl
add
je
pop
pop
push
out
xchg
push
mov
mov
and
mov
push
fcoml
sahf
stos
add
or
mov
mov
push
cltd
sti
notb
xchg
mov
pusha
add
xchg
mov
es
les
mov
push
or
inc
repz
les
adc
pop
mov
les
js
daa
xlat
nop
add
cmpsl
sahf
mov
or
mov
mov
sbb
add
mov
xor
mov
mov
pusha
add
cld
xchg
pop
jne
pop
lcall
inc
cltd
test
mov
add
mov
or
push
xchg
or
jmp
mov
inc
jp
jno
sub
test
mov
adc
sub
mov
inc
adc
fistps
cmp
lock
mov
daa
adc
mov
xor
mov
ret
lods
data16
jecxz
add
das
mov
dec
fs
add
inc
push
dec
jns
dec
repz
jmp
add
push
gs
jmp
mov
add
scas
jns
push
mov
lcall
mov
dec
push
jge
lock
fsubr
push
insb
clc
sbb
push
inc
jmp
pop
pop
inc
loope
pushf
call
jge
push
fwait
jl
push
add
push
bt
dec
les
movb
js
inc
add
arpl
add
add
cmp
popa
cmpsl
dec
mov
loop
mov
xor
testb
int3
outsb
jmpw
add
sub
mov
popf
addb
sbb
mov
addb
pop
and
mov
jle
mov
mov
add
ret
jbe
add
mov
arpl
popf
pop
mov
lods
mov
sub
rolb
mov
or
jl
mov
inc
repz
jge
mov
fdivrl
adc
mov
mov
arpl
in
add
lea
jl
mov
push
inc
add
mov
mov
adc
lret
outsl
cli
fcoms
add
cwtl
push
sbb
mov
push
xlat
movsl
inc
push
adc
mov
hlt
mov
in
icebp
jp
ja
addb
loope
jmp
cltd
ret
fdivr
and
mov
add
rolb
mov
scas
jge
or
add
addb
add
mov
mov
insl
mov
jg
daa
sbb
into
xor
rolb
inc
add
push
add
push
adc
mov
gs
cmp
les
popa
dec
xchg
adc
jmp
stos
mov
and
mov
or
orl
mov
xchg
add
push
add
std
mov
and
mov
mov
inc
int
fdivrs
jg
add
pop
scas
insb
cltd
imul
aaa
push
add
jne
cli
sbb
cmp
mov
and
in
je
push
ret
les
loope
incl
mov
int
test
push
xchg
add
inc
sub
inc
test
add
mulb
cmp
outsb
jecxz
mov
add
push
aam
test
mov
push
add
jp
add
mov
mov
shll
pop
mov
xlat
mov
sub
xor
mov
insl
loope
jb
mov
push
push
js
mov
rcll
mov
and
ljmp
fisubs
test
xchg
pop
scas
es
add
add
in
or
in
sbb
sbb
pop
push
fidivrs
lahf
xchg
aas
rolb
mov
pop
xor
sub
clc
xchg
mov
adc
popa
xchg
cwtl
ja
adc
aam
mov
ret
repnz
into
nop
add
push
jne
aam
or
sbb
push
or
add
mov
mov
xchg
popa
int3
addl
mov
or
push
test
mov
mov
xchg
repnz
and
repz
mov
fidivrl
das
xchg
dec
cmc
icebp
int
mov
ds
fidivrs
mov
aaa
imul
and
mov
add
fbstp
mov
add
aaa
adc
jmp
pop
call
addl
push
add
call
dec
pop
push
icebp
push
inc
add
add
fldenv
add
testb
addl
add
push
add
add
mov
sbb
xchg
and
pusha
add
add
adc
mov
dec
push
jne
dec
add
mov
dec
sub
add
mov
stos
add
jp
fistpll
shufps
mov
xchg
mov
loope
in
xor
push
rolb
mov
sbb
mov
inc
pop
xchg
mov
cmp
sub
xchg
aaa
sub
stc
mov
lods
pop
scas
outsl
dec
addr16
ja
add
mov
push
repnz
or
mov
shrl
jg
mov
mov
add
add
insb
pop
stos
jbe
add
or
cmp
icebp
stos
mov
sbb
jl
iret
nop
add
test
cwtl
xchg
nop
add
adc
adc
insb
shr
into
push
dec
gs
add
jnp
pop
cltd
imul
and
mov
add
push
lret
xchg
les
add
mov
in
pop
inc
add
cmpsl
sub
sahf
adc
xor
add
sub
subl
mov
xchg
dec
mov
inc
push
pop
sahf
leave
jmp
test
adc
mov
add
add
in
iret
divl
icebp
test
xor
mov
rolb
sub
sbb
lcall
mov
dec
xor
rol
mov
jns
push
dec
jns
pop
mov
addb
xlat
xchg
pushf
jne
mov
mov
pop
cmp
daa
leave
rolb
mov
pop
and
cld
pop
push
add
dec
mov
mov
sbb
xchg
push
mov
mov
imul
mov
jbe
cmpsb
pop
pcmpgtw
int
or
ljmp
add
mov
mov
add
mov
mov
add
js
out
fnsave
or
jecxz
repz
mov
xor
lods
push
negb
ret
mov
pop
insl
rolb
mov
lahf
and
mov
inc
mov
int3
scas
dec
adc
mov
fwait
xor
mov
push
add
mov
icebp
cmp
push
addr16
out
inc
add
add
xchg
add
add
add
les
repz
or
and
xchg
inc
cmp
imul
ss
mov
stos
mul
add
mov
cwtl
add
fs
mov
jbe
jle
cltd
lret
xor
add
mov
icebp
jo
mov
dec
ljmp
xor
mov
pop
adc
add
add
sub
jmp
jnp
leave
jnp
cs
mov
mov
push
push
push
mov
inc
add
mov
mov
cmpsl
inc
pop
shrl
mov
inc
or
push
sub
xchg
jge
add
sub
sub
mov
mov
mulb
add
jb
mov
lock
mov
dec
push
cli
xchg
mov
mov
lock
loopne
mov
ljmp
jo
mov
ret
scas
xor
mov
cwtl
sbb
pop
andl
cwtl
lds
out
mov
push
dec
das
stos
call
add
mov
jg
mov
int
mov
mov
adc
jb
mov
mov
inc
cwtl
xchg
mov
add
mov
adc
cmp
push
insl
imul
inc
dec
mov
mov
mov
mov
bound
mov
jo
mov
add
mov
out
das
sub
mov
cmp
call
aaa
lds
add
dec
lock
sahf
bound
mov
fisttps
and
mov
adc
jmp
out
mov
rolb
bound
mov
and
repnz
add
add
rolb
mov
or
or
mov
sub
mov
xlat
xor
mov
or
push
adc
mov
add
xchg
sub
inc
jmp
inc
fwait
cmpsb
adc
clc
lock
xchg
jmp
or
roll
cltd
and
mov
add
mov
push
xchg
xchg
inc
add
pop
adc
mov
outsl
adc
adc
mov
mov
add
mov
mov
sahf
lret
nop
add
cli
fisubl
out
xchg
add
add
add
xor
mov
add
mov
xchg
inc
inc
std
mov
cvtps2pi
push
pop
loope
lods
lods
mov
lcall
push
sbb
jnp
stos
jle
push
mov
loopne
mov
xor
mov
mov
xchg
sbb
cwtl
dec
in
and
xchg
sbb
scas
and
mov
add
adc
push
mov
les
mov
ljmp
sbb
sub
add
add
into
cwtl
push
rorl
cmp
add
jp
pop
push
jp
add
and
mov
mov
adc
mov
push
fcoms
mov
push
mov
add
shl
mov
xchg
add
mov
and
jae
inc
add
fimull
add
mov
sbb
jnp
ds
dec
aam
jmp
int
loopne
mov
sbb
mov
pop
pop
repz
add
cmp
aas
inc
sbb
add
sbb
sub
mov
jbe
aaa
or
add
add
ds
add
mov
cmp
test
cli
jne
add
mov
sbb
sub
ss
jmp
or
ss
add
lock
dec
rolb
mov
add
add
pushf
scas
dec
sbb
add
popf
mov
in
enter
outsb
cmc
popa
and
mov
mov
rolb
mov
or
addr16
mov
cli
addr16
std
out
mov
and
mov
mov
leave
mov
jne
push
stos
inc
scas
jno
push
hlt
aam
leave
mov
idivl
ret
mov
mov
ja
add
mov
daa
icebp
mov
in
pop
ficoml
mov
xchg
loope
pushf
sbb
mov
cmp
mov
sarl
neg
ja
push
inc
add
xlat
dec
test
mov
pushf
bound
mov
scas
mov
pop
ljmp
add
pop
pop
push
mov
lock
mov
mov
insl
rolb
mov
mov
fisubrl
loopne
mov
into
enter
mov
enter
add
fildl
pop
push
std
arpl
ret
loope
add
adc
xchg
inc
add
int3
loope
xor
mov
andl
fmulp
rolb
mov
mov
xchg
in
dec
fisubs
jecxz
mov
xchg
mov
mov
dec
cmp
addb
inc
sbb
mov
pop
out
jbe
popf
repnz
repnz
or
mov
fldenv
imul
mov
inc
push
add
stos
int
loop
mov
js
mov
add
aam
test
loop
mov
mov
add
clc
je
push
fidivrs
mov
xor
mov
push
ljmp
cmp
mov
jno
rolb
mov
imul
inc
frstor
mov
rcrl
enter
add
mov
mov
arpl
cmp
sub
outsb
mov
add
addr16
inc
in
xor
add
sbb
xor
mov
mov
pop
push
call
push
mov
imul
mov
int
add
dec
cmpsb
test
adc
push
out
fcmovnbe
stos
mov
cmp
cltd
push
add
mov
add
add
jbe
in
adc
pop
lods
mov
xchg
fcoml
xchg
scas
in
push
aas
mov
xchg
test
push
push
scas
push
das
sarl
pushf
xor
mov
test
push
mov
lret
push
push
mov
jmp
add
xor
hlt
mov
mov
or
in
lock
pop
push
pop
popf
and
hlt
cmp
push
mov
stc
test
pop
adc
mov
out
or
mov
fiadds
int
mov
pop
ds
rolb
and
sahf
or
aam
push
lret
scas
xor
jmp
jp
sbb
pop
js
add
pushf
jg
cs
dec
imul
mov
out
jecxz
push
imul
pop
popa
pop
dec
mov
mov
add
pop
add
cmpl
hlt
pop
mov
mov
pushf
adc
mov
add
popf
mov
std
pusha
add
std
popf
cmp
push
add
jns
push
loopne
mov
add
mov
jl
cmp
ja
mov
shrl
insl
cltd
xchg
add
imul
jp
sbb
mov
pop
loopne
mov
mov
and
mov
mov
sub
add
mov
mov
jae
add
mov
xlat
test
mov
cmpsb
lods
add
mov
pop
mov
cmp
and
mov
ret
cmc
pop
sub
popa
sbb
mov
mov
sbb
add
add
cmc
cltd
dec
add
outsb
loopne
mov
popf
outsb
add
mov
sub
and
xchg
push
xchg
and
ljmp
xchg
jecxz
mov
stos
and
repz
lock
test
add
subl
xor
enter
lret
inc
add
inc
add
mov
outsl
inc
mov
add
call
mov
cmp
je
add
mov
cmpsl
xor
sbb
mov
dec
rorl
insb
push
add
add
mov
push
add
add
clc
mov
in
gs
add
mov
and
add
mov
ljmp
test
add
mov
lods
sbb
mov
and
into
jmp
mov
pop
jbe
mov
or
test
out
add
mov
xchg
mov
add
mov
inc
int3
out
inc
mov
addb
test
arpl
out
or
dec
jae
fadd
add
jg
push
pop
shll
rolb
mov
sbb
and
mov
std
lahf
in
mov
addb
sti
xchg
add
inc
dec
dec
into
loopne
mov
add
rolb
psrlw
dec
push
push
jne
int
push
insb
and
mov
xchg
fcoms
add
lods
jmp
test
xor
enter
mov
adc
mov
popf
outsl
jg
pop
jbe
jge
ret
fxch
lret
pop
push
cli
cmp
arpl
jmp
add
or
ss
stos
scas
and
mov
mov
push
mov
ret
mov
mov
push
iret
pop
imull
dec
sub
arpl
sub
adc
mov
xchg
add
fidivl
cmpsb
outsb
in
jno
cmp
pop
popf
push
jo
mov
pop
jo
mov
fistl
mov
push
pop
jge
sub
add
movsb
jge
pop
add
stc
icebp
mov
push
loopne
mov
sub
mov
subl
xchg
jns
fnstcw
add
add
daa
jnp
xchg
or
add
jmp
fldenv
add
cmp
es
adc
enter
mov
and
sub
sub
mov
out
mov
add
mov
mov
xchg
lcall
ret
outsb
repz
sub
push
lahf
daa
out
insb
into
int
js,pn
lret
clc
jp
repz
mov
mov
fdivrl
add
pusha
add
data16
repnz
push
lock
lret
imul
jne
sub
adc
mov
cld
dec
aas
aaa
fadd
adc
jg
add
and
mov
adc
fcmovnb
leave
repz
cld
and
in
test
xor
ljmp
leave
cmpsb
call
pop
ljmp
mov
in
jns
rolb
mov
dec
xlat
repnz
add
inc
sahf
sub
inc
mov
cmp
add
add
or
mov
add
insb
xor
mov
fcoms
scas
mov
mov
xchg
cmp
adc
loopne
mov
popa
or
jmp
lea
add
add
js
sbb
add
pop
popf
push
rolb
inc
es
sub
ret
addb
pop
and
insl
imul
add
push
icebp
and
add
add
add
add
push
arpl
jae
jno
mov
xchg
sub
add
mov
cld
and
mov
fwait
jl
cmpsb
in
inc
cltd
je
icebp
int
mov
repz
jg
cmp
mov
iret
or
dec
mov
imul
les
adc
dec
sub
mov
add
orl
aad
add
cltd
sbb
mov
pop
rolb
mov
add
mov
add
jp
rolb
and
push
mov
add
mov
fstl
mov
xchg
in
add
jne
add
push
insl
stos
add
mov
cmc
cmc
jle
aad
lea
jmp
push
inc
fwait
rep
call
add
jo
mov
ljmp
sbb
aas
adc
mov
mov
bound
mov
jnp,pn
add
mov
mov
call
xchg
xor
fcoml
mov
inc
add
mov
or
ret
mov
add
sub
add
daa
pop
sbb
out
test
or
arpl
add
add
sub
push
fcmovbe
inc
xor
mov
mov
xor
negb
push
pop
cli
ljmp
add
addb
dec
dec
jae
aas
xor
push
lret
and
je
xchg
pusha
add
xor
les
dec
enter
add
push
rolb
mov
cltd
add
sub
in
je
dec
pusha
add
add
mov
xchg
sbb
dec
in
or
mov
rolb
adc
std
push
nop
add
mov
sub
add
mov
push
add
push
dec
mov
mov
rcr
add
decl
test
jl
mov
or
push
add
add
add
cmc
and
mov
mov
add
add
add
nop
add
or
call
arpl
sub
rolb
mov
and
add
add
adc
add
add
mov
add
inc
or
and
mov
xor
addb
fadd
repnz
push
xchg
mov
cwtl
jmp
enter
lods
and
add
add
mov
mov
cmc
outsl
cli
xor
mov
pop
xchg
inc
lcall
xchg
and
addb
lret
nop
add
cmpsl
mov
mov
push
scas
stos
jne
cmpsl
jo
mov
call
ljmp
mov
mov
fisubl
pop
mov
cmpsb
cmpsb
dec
rolb
mov
and
mov
das
mov
pop
adc
inc
add
pop
jmp
dec
stos
or
pop
iret
adc
mov
leave
inc
jecxz
bound
mov
mov
mov
mov
cmp
insb
jo
mov
xchg
add
stos
add
mov
cld
incl
lock
imul
mov
mov
test
mov
leave
dec
add
mov
mov
aaa
ljmp
mov
out
mov
push
stos
out
jl
in
add
incb
push
rolb
mov
inc
xrelease
add
push
add
cmpl
xchg
hlt
pop
inc
add
mov
mov
sub
push
xor
jno
add
mov
div
lret
add
or
add
jns
movsb
xchg
push
test
mov
cmp
xchg
adc
mov
add
pop
ud1
fsub
add
scas
pop
xlat
lret
xchg
shll
stos
dec
pop
mov
add
popa
and
out
pop
sbb
push
add
jle
add
insl
jnp
stos
or
add
mov
dec
popf
mov
add
add
subl
in
mov
mov
adc
ret
clc
xchg
mov
mov
mov
mov
pop
lea
lret
aad
jne
push
fists
add
push
and
add
fbld
add
in
mov
cmc
dec
jmp
mov
in
insl
xor
push
push
das
and
inc
sub
add
out
lea
ja
adc
mov
push
pop
arpl
mov
add
add
adc
mov
arpl
mov
sbb
imul
pop
je
push
mov
in
lods
lea
jp
dec
loop
mov
mov
js
sub
rolb
mov
fnstenv
test
movl
ja
xor
dec
pop
gs
mov
mov
push
push
push
and
insb
push
inc
adc
hlt
setg
fcomps
fstp
mov
adcl
push
push
add
clc
iret
cmp
add
sub
fsubp
add
sbb
jne
xor
push
lods
sahf
pushw
pop
aas
nop
add
in
dec
fnstsw
insb
in
call
push
insl
xchg
lds
push
jecxz
push
mov
xor
mov
pop
push
cs
dec
cmp
in
add
ljmp
pop
in
xor
mov
call
addl
push
addb
sub
add
outsb
or
xor
js
sti
pushf
mov
ror
sbb
arpl
stos
jecxz
add
jno
pop
mov
stc
and
mov
add
jg
add
and
sti
inc
inc
mov
int
stc
icebp
lcall
lods
ja
loopne
mov
push
inc
jae
add
sahf
adc
dec
inc
sbb
rcll
mov
xor
dec
iret
and
mov
sbb
push
into
ss
in
pop
rcl
mov
mov
jecxz
xor
cmpsl
pop
xchg
test
adcl
cmp
and
dec
cmp
fists
and
or
test
add
mov
cli
adc
pop
jb
mov
test
jmp
in
and
mov
add
rolb
jb
mov
scas
rolb
cmp
xchg
aam
int
insb
loope
popa
cwtl
mov
int3
push
xor
sti
ror
into
out
jbe
xchg
add
xchg
add
lahf
mov
xor
mov
add
add
inc
add
pop
mov
pop
adc
mov
enter
mov
ds
shl
xor
adc
pslld
mov
mov
adc
mov
mov
add
ret
and
pop
jl
add
sub
mov
mov
dec
jge
lods
jp
and
mov
add
rolb
jmp
or
mov
pop
pop
xchg
mov
ret
pushf
cltd
rolb
mov
xchg
bound
mov
sarl
sbb
or
jecxz
dec
xchg
pop
test
adc
mov
rolb
mov
mov
mov
inc
add
jle
jl
notb
rolb
mov
es
jecxz
fsubl
jmp
clc
add
mov
push
dec
data16
loope
test
jo
mov
jno
scas
xor
push
stos
lods
mov
das
xor
mov
mov
add
mov
rorl
and
in
mov
sti
inc
add
mov
or
xor
mov
lock
add
cmp
add
xor
jne
mov
sub
sbb
mov
mov
mov
punpcklbw
mov
mov
ja
mov
add
cs
sbbl
mov
cli
psrad
mov
add
rcrl
dec
add
mov
rolb
cmpsb
cmp
add
mull
lahf
mov
add
jp
repz
adc
mov
dec
xchg
push
push
cmpsb
jmp
imul
fwait
mov
fdivr
sub
data16
mov
add
dec
sbb
mov
add
mov
pop
and
and
mov
rcrl
imul
add
mov
cmpsl
mov
mov
test
mov
xchg
and
inc
jge
add
push
add
mov
add
push
adc
push
add
add
inc
pop
cmp
sub
push
add
lds
imul
sbb
adc
add
add
mov
inc
add
lods
cmpsl
leave
xor
mov
shll
add
jnp
xchg
cmp
push
mov
pusha
add
ret
cwtl
rolb
mov
fsubrs
cli
lahf
lcall
loop
mov
push
add
jmp
repnz
push
das
mov
mov
rolb
mov
mov
je
dec
sub
insb
pop
xor
sbb
add
ss
cmpsb
aaa
push
sti
mov
mov
xchg
mov
stos
push
test
sbb
mov
add
out
add
pusha
add
sbb
adc
mov
push
add
les
sbb
push
add
popa
in
add
mov
mov
add
in
cmpsb
aad
pop
hlt
jge
jns
enter
mov
add
mov
jo
mov
xor
push
shll
mov
add
aad
add
adc
inc
push
cmp
jp
add
mov
pop
pop
sub
sahf
in
incl
add
les
jmp
lcall
cmp
pop
pop
mov
fwait
sahf
decb
in
inc
cs
nop
add
xchg
push
inc
add
push
jns
pop
cs
scas
sub
mov
adcl
mov
add
xchg
arpl
mov
aam
daa
arpl
ja
ja
repz
sbb
sbb
fidivs
arpl
in
pop
xchg
add
inc
xor
jg
sbb
mov
add
mov
xchg
andl
mov
sub
cmp
mov
sub
xchg
add
add
popf
bound
mov
push
adc
add
lds
testb
stc
ss
addb
mov
xor
mov
mov
mov
pop
mov
mov
popa
fmull
lret
jae
mov
sbb
sub
stos
or
rolb
xor
mov
add
test
iret
fildl
add
mov
sbb
or
push
bound
mov
add
imul
bound
mov
mov
cmpsl
addr16
jp
jl
mov
scas
mov
sub
call
add
and
mov
xor
push
and
mov
mov
mov
add
cmp
mov
mov
add
mov
sub
aas
dec
daa
pusha
add
add
dec
cmp
mov
xlat
ror
lds
or
sbb
pop
pop
lock
out
xchg
fcmovne
adc
add
inc
push
fwait
enter
add
pusha
add
mov
dec
add
xchg
add
mov
mov
add
push
and
test
dec
inc
add
out
jae
cld
and
insl
push
outsb
int
cmp
out
ja
pop
in
pop
cli
lds
cwtl
dec
hlt
jmp
add
loop
mov
or
inc
and
mov
mov
fisttpl
xor
mov
xor
and
mov
lods
add
mov
in
inc
add
xor
add
lret
mov
mov
leave
and
mov
mov
mov
int3
fucomi
out
fs
jg
add
adc
mov
scas
aam
pop
je
add
pop
mov
pop
dec
popf
idivl
add
mov
mov
testl
testl
add
sub
loope
scas
jg
cltd
and
dec
mov
push
fdivs
sar
add
or
inc
add
leave
nop
add
pop
inc
test
sub
xor
dec
pop
mov
nop
add
test
add
push
xchg
add
add
add
dec
into
xrelease
mov
inc
add
rol
inc
dec
adc
mov
addb
and
mov
rcrl
mov
jl
inc
add
mov
int
icebp
inc
push
mov
cmp
jp
add
mov
rolb
mov
pop
movsb
cltd
jne
cmp
add
jnp
add
add
dec
addb
jne
jne
jmp
les
add
sbb
jg
mov
arpl
or
mov
add
mov
add
inc
adc
loope
push
pop
cli
pop
rolb
mov
bound
mov
add
cmp
pop
or
xchg
dec
jnp
add
dec
jmp
mov
mov
hlt
xchg
stc
cld
in
imul
inc
dec
or
add
add
fsubrs
aam
xchg
add
or
lahf
sbb
cld
dec
insl
pop
fstpl
jo
mov
in
popa
inc
add
and
dec
mov
daa
mov
jmp
notl
add
add
dec
dec
ja
jae
add
add
mov
mov
sbb
jp
cld
ja
mov
pop
repz
inc
xchg
xor
mov
fistps
xchg
add
popl
rolb
mov
mov
insl
test
fsubrs
aas
sbb
js
dec
inc
rcll
mov
inc
add
add
xchg
or
pop
pop
pop
jp
cmp
movsb
mov
add
mov
add
daa
push
js
cmp
in
outsl
mov
imul
insb
ret
leave
imul
mov
pop
test
dec
cmp
mov
adc
mov
movsl
jmp
mov
negb
mov
mov
add
in
push
shrl
inc
aam
int3
shll
pusha
add
jne
in
lret
inc
les
mov
add
push
push
repz
push
arpl
push
out
fstps
filds
add
xlat
cmc
push
lahf
pusha
add
mov
cmc
cmp
mov
jns
add
push
push
mov
imul
stos
add
push
add
adc
fadds
add
inc
mov
cmc
addb
sahf
scas
jae
add
jnp
xlat
aas
loopne
mov
add
mov
xor
cwtl
xor
leave
xchg
xchg
or
jle
adc
insb
not
add
xor
mov
add
hlt
add
and
and
mov
push
shrl
cmp
sub
xor
xchg
ljmp
mov
aad
lret
fwait
or
inc
int3
fldl
roll
ficomps
sahf
xor
sahf
mov
mov
mov
out
dec
sbb
or
push
out
add
pop
imul
mov
inc
inc
xchg
ffree
nop
add
addr16
inc
dec
sbb
sub
negl
divl
inc
fdivs
cmp
lock
imulb
enter
add
mov
lock
mov
clc
xlat
or
or
pusha
add
int
into
sbb
cmp
xchg
inc
mov
push
add
mov
mov
mov
add
cmp
gs
add
mov
sub
add
lret
scas
pusha
add
repnz
adc
add
gs
addb
out
sar
jae
adc
leave
in
mov
xor
in
add
and
mov
int3
inc
mov
ret
nop
add
push
push
aam
daa
jo
mov
push
add
in
mov
add
sbb
fildl
mov
sbb
add
add
mov
mov
test
mov
or
loope
push
je
jno
sub
add
fnstenv
add
aam
sbb
mov
sbb
add
add
mov
mov
pop
mov
aad
sahf
arpl
add
pop
enter
enter
mov
mov
fildll
and
out
cld
nop
add
sub
sbb
mov
repnz
xor
mov
js
add
rorl
or
addr16
nop
add
mov
inc
push
add
add
fnstcw
jp
nop
add
jg
push
mov
mov
add
push
push
push
and
mov
xor
mov
pop
daa
lret
in
mov
sbb
or
add
in
mov
inc
mov
xchg
adc
mov
addb
out
mov
gs
xchg
and
sub
stc
jl
ja
sub
add
mov
mov
pop
xor
mov
mov
das
xchg
mov
call
and
jbe
ds
or
add
add
add
cmp
sub
mov
cmc
cmpsb
insb
outsl
loop
mov
and
xchg
mov
repnz
push
out
dec
stos
lods
jecxz
out
sbb
xor
jmp
les
push
sahf
push
push
add
xlat
arpl
jecxz
mov
xchg
jp
or
scas
mov
adc
mov
cmpsl
xchg
dec
mov
int
mov
jnp
popa
jnp
fisubl
out
pop
push
enter
call
mov
bound
mov
xor
addr16
lea
add
add
lahf
nop
add
add
add
mov
push
int3
mov
dec
lahf
and
mov
add
mov
add
jmp
add
mov
call
jp
push
push
jg
mov
mov
jno
xchg
jns
out
mov
inc
stos
aad
push
sbb
leave
sysret
cltd
ds
outsl
xchg
and
mov
sar
int3
mov
in
push
xchg
dec
mov
in
stos
ljmp
mov
xor
mov
mov
or
xchg
call
cwtl
ficomps
cmp
stos
add
xchg
gs
add
out
iret
xchg
dec
dec
push
xlat
xchg
ss
or
aad
jae
cmp
ds
rolb
mov
adc
mov
xchg
pop
lret
scas
jg
add
incb
cmp
addb
ds
insb
out
loopne
mov
inc
add
mov
aam
jge
nop
add
mov
mov
add
dec
cmp
addb
xor
mov
mov
pop
loopne
mov
mov
repnz
rcl
sub
cmp
jae
xor
mov
pop
mov
fdivl
pop
cmp
pop
add
mov
fistps
mov
and
fstl
jno
arpl
inc
mov
imul
pop
js
add
add
mov
push
ja
inc
inc
sub
add
sub
mov
jl
and
dec
out
sbb
sub
scas
inc
jb
mov
pop
data16
mov
add
add
pushf
gs
imul
mov
pop
dec
shr
sti
cld
aam
dec
pop
or
dec
pop
jecxz
inc
popa
mov
pop
sbb
mov
or
lahf
cwtl
inc
imul
mov
in
push
cs
xchg
inc
xchg
adc
add
xor
mov
push
adc
add
mov
scas
pusha
add
mov
outsl
ret
daa
cmp
inc
mov
sbb
mov
inc
sub
add
xchg
xlat
insb
add
or
add
int
xor
add
jno
addb
movsb
push
jo
mov
inc
popf
add
mov
ficoms
jl
mov
add
mov
add
adc
mov
pop
sbb
aad
jb
mov
ficompl
repnz
mov
add
add
add
pop
icebp
dec
push
add
mov
movsl
xor
mov
or
test
out
fucomi
adc
mov
lret
outsb
aas
pusha
add
add
mov
fimull
sahf
js
gs
and
push
adc
mov
push
pop
add
mov
add
add
imul
add
and
dec
xlat
es
pop
mov
in
mov
mov
add
mov
inc
add
jp
and
mov
add
sbb
inc
add
jae
push
nop
add
cmp
mov
mov
mov
pop
xor
mov
gs
push
les
add
inc
xor
lods
ljmp
xchg
leave
loopne
mov
inc
jg
jo
mov
add
mov
lahf
insb
mov
sub
xor
fdivs
call
pop
sahf
hlt
popf
mov
mov
dec
push
mov
mov
rolb
cmp
rolb
mov
mov
stos
jb
mov
aam
add
add
pop
adcl
sarl
cmc
add
aas
push
jecxz
cmp
sti
les
mov
mov
xchg
psubsb
imul
sbb
lods
data16
mov
cltd
push
xchg
inc
leave
mov
mov
mov
push
dec
subl
cmp
cmp
aaa
adc
mov
add
cmp
fistl
adc
jmp
addb
xchg
aas
pop
push
xor
push
int
arpl
cmp
jmp
cli
repnz
pop
outsb
outsl
cmc
dec
ljmp
add
add
imul
fidivrl
rolb
repnz
push
call
sbb
stos
xchg
mov
lods
cmp
add
add
aas
mov
sub
pop
sub
mov
inc
dec
mov
dec
sbb
adc
mov
add
add
mov
repnz
fcomip
add
mov
lcall
push
add
cmpsb
loop
mov
mov
fisttpll
addr16
add
imul
cmpl
and
mov
test
inc
add
add
inc
jecxz
sub
mov
sub
adc
mov
mov
dec
jno
lahf
inc
loope
fdivs
add
push
out
or
mov
ds
xchg
out
push
rolb
je
add
xor
mov
cmp
fnstcw
inc
out
out
push
jns
jmp
ffree
mov
in
mov
mov
cmp
mov
add
mov
xor
mov
cmp
add
sub
push
add
or
mov
and
movsl
xor
mov
push
add
test
dec
push
push
cmc
pop
xchg
fmul
iret
outsl
xchg
add
or
mov
push
mov
mov
roll
add
push
and
or
stos
jnp
icebp
dec
dec
scas
and
jo
mov
sbb
scas
outsl
xor
add
rolb
mov
imul
add
lods
fdivrp
cltd
lds
mov
mov
mov
dec
adc
mov
cmpsl
das
and
mov
ja
enter
mov
test
mov
jl
pop
mov
push
add
add
push
pop
and
rolb
insl
xor
mov
cmp
push
inc
add
and
mov
jne
aad
fsubrl
add
add
add
xchg
xchg
ret
mov
jae
push
mov
addr16
std
sub
dec
dec
mov
test
ds
push
rolb
mov
add
aam
or
add
adc
mov
jge
mov
add
mov
mov
add
xchg
mov
add
xor
mov
mov
pop
out
add
dec
out
cmp
add
add
fdivrl
dec
inc
ljmp
jbe
add
nop
add
cmp
mov
psllq
add
mov
loop
mov
sahf
cmp
xor
sbb
or
push
in
ret
rolb
mov
mov
xor
mov
mov
push
fisttpll
or
sub
xchg
sub
add
add
lret
add
mov
inc
add
fcmovu
in
inc
add
mov
dec
std
lods
iret
imul
xchg
add
mov
mov
add
hlt
inc
add
call
cmp
sti
loopne
mov
test
rolb
mov
movsl
lock
add
jp
cmpl
add
mov
into
cmp
add
add
mov
dec
dec
rolb
xlat
mov
and
sub
fwait
adc
pop
loope
add
or
mov
nop
add
mov
loop
mov
mov
add
ja
or
cmp
sti
stos
repz
adc
mov
inc
add
mov
mov
cmc
loopne
mov
mov
jmp
pop
mov
add
cmc
pusha
add
mov
call
cmp
mov
or
arpl
pop
jmp
xor
mov
add
sbb
mov
push
push
hlt
pop
sbb
add
movsl
or
pop
or
jmp
inc
add
mov
add
mov
addr16
pushf
add
mov
push
pop
test
test
push
cmpsb
data16
mov
mov
mov
mov
mov
add
add
das
add
mov
andl
leave
loope
add
std
mov
pop
subl
call
sti
pushf
mov
mov
rolb
mov
cld
add
inc
mov
mov
xchg
sbb
add
xchg
test
aaa
mov
arpl
and
cmp
xor
push
sbb
repnz
jne
jmp
inc
mov
idiv
adc
add
push
mov
jg
int
sub
dec
test
add
out
and
mov
dec
mov
js
in
or
xor
add
mov
add
in
int3
pop
fcomps
xchg
ja
add
std
xor
mov
cmp
repz
add
nop
add
mov
add
add
pop
addb
pop
inc
dec
or
add
mov
ret
or
mov
and
add
rolb
mov
movsb
xchg
nop
add
lods
xchg
cmc
lret
pusha
add
push
out
lods
insl
sbb
loop
mov
sub
mov
mov
inc
add
cmpsl
or
popf
fsubrl
das
fsub
bound
mov
lea
clc
jne
pop
mov
decb
arpl
add
mov
mov
inc
gs
mov
ret
ds
je
jge,pt
pop
pop
out
loopne
mov
mov
xor
jno
mov
test
shrl
rolb
mov
pop
jo
mov
in
leave
movl
or
jb
mov
add
cmpsb
out
or
pop
jb
mov
ror
mov
sbb
mov
pop
push
jno
inc
or
sbb
fmuls
xchg
sub
xor
mov
enter
inc
jp
das
popw
sbb
jae
xor
add
mov
mov
insl
inc
dec
pop
bts
pop
xchg
testl
rolb
rolb
mov
push
call
mov
jns
lock
push
test
dec
pop
idiv
dec
dec
aaa
incb
test
stos
mov
aaa
sub
add
add
mov
ds
test
enter
stc
stc
mov
sbb
loopne
mov
add
jecxz
pop
and
daa
imull
jo
mov
jl
mov
movsb
sub
loopne
mov
mov
mov
inc
add
add
sbb
add
add
lret
add
fsts
dec
pop
mov
adc
jno
gs
add
add
cmpsb
ljmp
loopne
mov
inc
inc
add
call
test
add
insb
inc
sub
xlat
mov
fildll
aaa
xchg
into
cmp
jge
inc
mov
inc
or
jb
mov
aas
fwait
ret
imul
or
das
ret
xchg
inc
add
mov
add
xor
add
mov
in
movsw
mov
mov
call
mov
insb
arpl
mov
jge
xchg
inc
adc
mov
pop
add
mov
mov
mov
aaa
or
lret
inc
push
ja
icebp
adc
mov
clc
xchg
rolb
mov
push
add
add
cmpsb
push
sbb
iret
mov
add
xlat
aad
adc
adc
dec
movsl
fsts
pop
into
lret
pop
loope
cmc
movb
jb
mov
loopne
mov
cli
pop
jo
mov
arpl
loope
and
lods
mov
add
mov
mov
out
pusha
add
mov
mov
add
sbb
out
pop
xchg
add
dec
inc
add
add
mov
add
inc
push
repnz
out
mov
fisubrs
fistpl
pop
lds
out
cmp
add
repnz
mull
add
ljmp
insl
sbb
daa
das
or
lea
inc
xor
mov
aam
ljmp
leave
addb
mov
add
add
or
jl
add
and
mov
mov
xor
add
icebp
mov
test
daa
pop
dec
call
sahf
testl
sub
outsb
arpl
add
out
popa
push
fcoms
call
xchg
mov
mov
scas
dec
push
cmpsl
lea
cmp
testb
inc
dec
fwait
sbbl
jmp
cmpsb
or
sub
add
jne
not
add
xor
in
mov
add
rcl
jecxz
and
mov
pop
fistpll
ja
sub
mov
mov
jge
aaa
push
rorl
in
dec
add
or
test
test
scas
add
inc
cltd
dec
jae
outsb
xor
mov
fisttps
mov
and
and
xlat
fsubrs
add
mov
mov
cld
and
mov
add
stos
dec
jmp
or
mov
dec
and
repnz
lds
jnp
add
repnz
cs
lcall
push
add
inc
add
repnz
insl
ds
inc
rcll
scas
pop
jg
xor
mov
add
fcompl
adc
mov
mov
outsl
xchg
jg
adc
rolb
inc
repnz
mov
push
xor
mov
adcl
daa
sub
push
rdpmc
shll
sbb
in
lahf
sub
js
adc
mov
push
int3
mov
or
push
inc
inc
fs
mov
sbb
jno
rcrl
repnz
adc
mov
dec
xchg
fwait
mov
mov
mov
insb
push
xor
mov
push
xchg
add
mov
or
add
ficomps
dec
mov
ficoml
lahf
inc
add
dec
jecxz
mov
out
adc
popf
lds
mov
add
addb
pop
mov
jne
and
test
pop
adc
mov
cmp
push
dec
aam
dec
lcall
add
nop
add
xchg
push
sub
sbb
movsb
ds
movsb
jle
rolb
mov
jb
mov
mov
jbe
add
stos
nop
add
mov
push
inc
sub
inc
add
mov
push
sbb
inc
and
mov
ret
sub
fnsave
push
inc
mov
aaa
jno
adc
add
mov
fistpl
out
jl,pt
das
and
mov
fs
inc
add
cmp
mov
inc
add
jmp
sub
add
add
fidivrl
js
jge
inc
sbb
xor
mov
add
push
mov
add
fstpt
mov
add
add
cmp
sub
outsl
cs
in
adc
mov
dec
mov
jae
outsl
cs
int
cli
sub
subl
gs
test
lds
rolb
mov
add
in
scas
addb
imul
pushf
addb
fs
test
fnsetpm(287
test
and
mov
lret
add
fsubr
aaa
enter
popa
inc
add
negl
add
adc
push
add
add
mov
sub
int
scas
mov
and
add
mov
test
add
xor
mov
mov
ljmp
out
pop
inc
jg
sbb
add
add
jle
nop
add
adc
inc
cmp
add
pop
mov
or
mov
mov
add
icebp
in
bound
mov
add
push
add
sub
inc
and
mov
addb
mov
call
jp
rolb
mov
jno
or
lods
filds
dec
sbb
pop
adc
add
out
sahf
mov
call
aaa
mov
fs
xchg
test
lret
aas
sbb
mov
sti
cmp
sbb
mov
mov
mov
mov
sub
dec
lods
pop
mov
add
xchg
xchg
add
lods
and
fldcw
rolb
mov
mov
and
aaa
in
add
xor
mov
mov
mov
pusha
add
arpl
sbb
test
pushf
cmp
add
out
mov
notl
or
push
pop
xchg
xchg
cmp
int
add
add
jp
clc
pop
mov
mov
sbb
pusha
add
cld
std
stc
inc
mov
add
add
mov
rolb
mov
xchg
inc
jo
mov
add
add
mov
mov
mov
or
mov
xor
mov
add
push
cmp
ret
dec
pushf
into
sbb
dec
jae
add
idivl
loope
adc
rolb
mov
pop
insb
in
test
test
add
mov
enter
popf
test
jmp
xor
mov
jnp
add
into
sbb
movsl
and
pop
loope
rolb
mov
add
cmp
jmp
or
lea
sbb
sahf
push
test
mov
iret
inc
scas
mov
push
outsl
cmpsl
mov
fwait
out
add
add
jg
cmp
int
xchg
filds
lret
add
mov
mov
sbbl
ja
repnz
jbe
ret
negb
dec
lds
gs
ud1
add
fsub
mov
bound
mov
adc
mov
loop
mov
pushf
rolb
movsb
pop
sbb
jb
mov
cmp
mov
mov
sbb
mov
xor
mov
loope
push
cmpsb
cltd
jbe
movsb
js
int3
push
loopne
mov
mov
stc
outsl
out
adc
imul
add
mov
cli
rolb
mov
mov
arpl
cld
sbb
cli
sbb
std
mov
addb
jp
cmp
rolb
mov
mov
pop
out
xchg
mov
pop
fnstcw
jge
callw
mov
mov
dec
cli
call
lret
ja
adc
mov
jmp
cmp
fcomip
sarl
add
push
mov
fldenv
sbb
add
in
jmp
stc
adc
xor
mov
sbb
add
jmp
pop
mov
stos
inc
mov
cmp
mov
sub
jg
movsb
or
mov
xor
ja
cmp
add
sbb
scas
fisubs
mov
sub
in
aad
js
testb
outsl
icebp
arpl
aam
test
push
add
cmc
xchg
xlat
loopne
mov
jno
add
das
sub
adc
ljmp
ss
pusha
add
pop
fwait
jle
mov
mov
fmuls
test
movsl
mov
push
jge
add
ret
cmpl
push
jl
add
imul
and
mov
or
ljmp
add
mov
dec
gs
push
jne
add
mov
stos
ljmp
repnz
mov
pop
xor
scas
dec
mov
sbb
cmpsl
pop
dec
or
push
es
xchg
fsubrp
pop
neg
pop
mov
push
add
inc
add
mov
sbb
add
pop
aad
mov
ret
jae
daa
dec
movsl
aas
and
mov
outsb
clc
push
fisubl
inc
add
arpl
xor
adc
mov
test
dec
add
imul
mov
test
add
mov
fstl
push
mov
test
lea
lahf
lock
out
add
add
add
inc
sbb
movsl
add
mov
fwait
push
mov
bound
mov
fsubs
add
mov
adc
rolb
mov
dec
fnstenv
or
sub
in
pop
jl
loop
mov
mov
add
sub
imul
xchg
jbe
xchg
je
adc
mov
jbe
inc
fists
mov
mov
mov
arpl
aas
loop
mov
lahf
insb
pushf
outsl
xchg
sbb
addb
cs
mov
push
inc
imul
movsb
dec
and
inc
std
les
push
addb
mov
xchg
imul
stos
rolb
mov
popa
push
das
in
add
mov
stc
pop
dec
push
inc
mov
add
lods
pusha
add
mov
loope,pn
add
rolb
mov
adc
stos
imul
addr16
xlat
sub
cli
adc
mov
mov
add
add
add
out
pop
popf
lods
es
mov
xchg
xchg
daa
mov
mov
decb
push
int
movsl
cld
or
push
jle
mov
add
std
xchg
push
lahf
jb
mov
popa
or
mov
mov
and
mov
fcoml
pop
push
sub
mov
mov
scas
out
mov
sub
gs
inc
pop
stos
pop
arpl
mov
ror
mov
ror
mov
xchg
ja
pop
xor
mov
dec
xchg
add
mov
sbb
mov
aam
loop
mov
test
adc
add
dec
inc
fwait
aaa
sbb
aam
sub
inc
dec
cmpsl
mov
dec
sub
mov
push
in
push
add
sub
add
mov
add
pop
cmp
movsl
fwait
int
jb
mov
xorl
mov
push
sbb
stos
addb
pop
out
jg
lcall
out
xlat
scas
xor
sbb
and
cmpsl
mov
mov
adc
arpl
imul
outsl
xchg
mov
repnz
add
sbb
into
fs
aad
mov
jns
and
mov
add
add
mov
mov
dec
pushf
fsts
cmp
xchg
mov
cmp
call
dec
pop
sahf
mov
stos
mov
call
dec
xlat
add
mov
or
out
test
in
ljmp
adc
or
mov
mov
ss
mov
pop
and
mov
in
mov
push
imul
add
pusha
add
jb
mov
std
adc
cli
insl
in
cld
xchg
cmp
pop
xchg
and
mov
movsb
mov
jne
pop
fucomip
mov
or
xor
ja
pop
inc
inc
fcoms
movsb
out
rcll
data16
jmp
jge
jmp
pop
dec
cwtl
test
mov
aaa
sub
mov
les
xor
lods
xchg
addr16
add
add
adc
dec
test
adc
mov
cmp
in
pop
xchg
repnz
aam
arpl
in
add
andl
jge
ss
pop
jae
dec
mov
or
mov
dec
hlt
mov
jl
das
lahf
pop
pop
mov
lods
fcmovbe
sbb
stos
cwtl
enter
add
sub
add
mov
and
mov
cs
add
imul
test
or
add
hlt
pop
lock
push
test
add
repz
mov
mov
pop
inc
scas
jmp
mov
mov
fnstsw
add
add
iret
sbb
push
add
cmp
test
dec
mov
add
rolb
mov
mov
mov
mov
cmp
cmc
mov
dec
in
shl
push
push
into
mov
pusha
add
adc
ret
xchg
lahf
jo
mov
cmp
push
add
dec
ljmp
movsl
cmp
mov
sub
mov
add
jp
pushf
rolb
mov
push
dec
addr16
adcl
je
add
pop
inc
in
lahf
mov
pop
in
lahf
xchg
dec
stos
jge
imul
je
add
scas
jo
mov
stos
push
rolb
mov
mov
flds
addr16
sub
mov
add
inc
cmpsb
or
add
pop
inc
jo
mov
mov
add
daa
jnp
fisubs
lds
fsqrt
arpl
mov
mov
xchg
negb
aam
rolb
mov
movl
mov
insb
gs
call
xor
mov
mov
shll
cli
mov
push
jae
repnz
rolb
push
hlt
mov
das
cmp
jle
cmp
add
push
add
xchg
loope
std
outsl
dec
ja
leave
mov
dec
cltd
aam
call
add
xchg
leave
xlat
rcrl
movsb
rcll
pop
into
mov
mov
pop
fisubl
add
mov
mov
movsb
push
add
addb
test
or
popf
sarl
inc
add
dec
enter
addb
enter
out
test
push
test
pop
jo
mov
sbb
hlt
cs
and
push
mov
int
cmp
jbe
ret
mov
jge
addr16
inc
mov
dec
jne
dec
in
das
pop
sub
stc
jl
push
add
ljmp
jnp
xlat
repnz
mov
insl
sti
push
fiadds
jno
fisttpll
sahf
push
push
add
mov
pop
repnz
jp
add
sub
je
out
mov
or
add
lea
and
mov
sub
cld
jl
sbb
push
arpl
and
mov
mov
add
test
add
adc
mov
or
inc
leave
cltd
mov
add
mov
push
ss
cmp
addl
hlt
lock
sub
fimuls
mov
mov
add
add
in
add
jg
sti
call
jne
mov
stos
or
inc
add
gs
jo
mov
fld
add
jmp
and
dec
test
jmp
lahf
inc
fisubrs
xor
dec
push
imul
mov
pusha
add
adc
and
outsb
lds
push
mov
add
add
add
pushf
adc
movsl
movd
fisttpl
add
mov
xor
stos
inc
insl
imul
mov
mov
add
mov
add
adcl
add
addb
insl
cmp
mov
mov
add
mov
push
add
mov
daa
idivl
jnp
popf
inc
add
adcl
fimull
add
mov
cmpsl
arpl
sub
add
cmpsl
xor
mov
push
daa
les
lods
dec
xor
mov
inc
int3
sbbl
mov
pushf
or
add
dec
in
icebp
loope
xor
add
cmp
xor
mov
push
mov
add
imul
jg
mov
adc
adc
mov
sub
pusha
add
stos
xchg
les
mov
sbb
mov
int3
sti
mov
xchg
add
jp
xchg
mov
lock
push
push
add
fistl
sub
sbb
inc
pop
xor
mov
inc
daa
dec
mov
add
sub
xchg
mov
gs
add
mov
xor
mov
daa
lretw
daa
bound
mov
push
mov
ret
and
loopne
mov
cmpsl
mov
mov
or
xchg
add
fldl
insb
add
out
into
sub
mov
mov
mov
push
adc
aas
clc
bound
mov
and
mov
sub
pop
imul
mov
clc
mov
mov
repz
lahf
in
adc
push
add
pop
outsl
jecxz
sbb
das
ret
call
xchg
in
adc
mov
pop
lds
jmp
sub
pop
xor
mov
add
dec
xchg
cld
push
add
dec
lds
add
mov
mov
jge
add
aad
inc
je
adc
in
and
cmp
xor
add
add
xor
dec
pushf
inc
faddl
mov
insb
mov
mov
fucomi
cmpsl
sarl
pop
mov
aad
jp
frstor
shrl
lock
xchg
das
cmp
mov
push
xor
leave
jbe
test
fsts
rolb
mov
aam
fsubrp
cld
xchg
inc
addb
jl
cmp
movb
sub
mov
cld
idivl
push
add
dec
insl
aas
js
sbb
xchg
add
int3
jge
les
push
jmp
add
rolb
mov
sub
add
ja
jbe
rolb
shr
insl
mov
and
sbb
and
mov
out
lret
cld
std
mov
sbb
push
xchg
add
or
push
jno
gs
mov
xchg
inc
add
mov
popf
pop
fldl
mov
push
in
mov
add
push
ljmp
add
mov
test
shll
addb
shll
sbb
in
call
mov
jmp
fistpl
fmull
pop
mov
jmp
or
repz
push
add
divb
loop
mov
mov
into
dec
or
mov
jmp
dec
jle
cli
shrl
sub
test
mov
add
jae
fpatan
xor
addb
iret
rcll
rolb
mov
add
aaa
ja
add
subl
dec
dec
and
mov
mov
add
shll
pop
and
cmp
add
mov
add
outsl
in
lret
les
inc
xchg
add
xor
mov
hlt
mov
add
xchg
int3
mov
add
mov
mov
daa
inc
add
rolb
mov
mov
cs
movb
sahf
lock
ljmp
sbb
add
xchg
sbb
pop
js
test
add
xchg
dec
das
aaa
inc
dec
or
idiv
rol
add
xchg
dec
daa
push
shll
dec
adc
mov
push
dec
imul
mov
adc
addb
mov
mov
mov
hlt
push
cmpsb
cmp
sahf
mov
fidivs
add
mov
test
push
sub
xchg
iret
adc
mov
mov
out
adc
mov
xor
sub
addb
or
mov
xchg
dec
adc
mov
enter
test
add
jno
add
cmp
jl
ds
push
add
test
mov
add
and
mov
lock
mov
jl
sbb
cmp
mov
mov
sbb
add
mov
or
rolb
mov
adc
add
add
ret
xchg
add
imul
mov
enter
shll
and
dec
add
add
addb
lret
repnz
add
mov
or
add
mov
mov
mov
add
addb
push
or
mov
int
jmp
add
or
rcl
mov
mov
xchg
mov
mov
repz
lcall
fidivs
iret
andl
mov
jnp
add
add
jne
cmp
xor
sbb
mov
sub
mov
cmp
movl
mov
sahf
enter
add
pusha
add
mov
mov
mov
movsb
mov
lahf
mov
mov
pop
lea
mov
in
mov
mov
xchg
daa
adc
repnz
mov
mov
cltd
shll
or
mov
test
adc
mov
mov
aad
dec
inc
inc
add
in
mov
clc
ret
pop
cs
in
ljmp
push
pop
and
mov
outsb
leave
test
add
and
mov
aas
pop
add
mov
mov
js
addl
and
add
jno
mov
inc
xor
mov
and
mov
jns
dec
add
mov
fiadds
add
test
mov
sub
pop
sub
mov
call
dec
sub
jl
adc
mov
inc
add
sbb
ss
cmp
pushf
xchg
lcall
mov
add
repz
add
mov
xchg
add
mov
in
adc
mov
inc
ficompl
loope
or
aam
or
jo
mov
bound
mov
add
scas
nop
add
adc
mov
xchg
clc
adc
outsb
mov
mov
test
mov
push
jge
fwait
leave
jmp
xchg
in
mov
mov
and
dec
lods
mov
jg
pop
testb
mov
jne
push
out
addb
mov
inc
scas
adc
and
xchg
xor
imul
pop
jmp
jbe
test
je
xchg
mov
mov
jne
xchg
cld
and
test
dec
stos
faddl
add
add
add
addb
adc
and
in
pusha
add
add
ret
pop
je
movsl
call
push
pop
xchg
lret
mov
mov
mov
add
ret
adc
mov
mov
mov
gs
pop
negl
pusha
add
movsb
scas
xchg
sub
dec
aad
cmp
mov
push
push
test
test
mov
mov
mov
addr16
scas
rolb
mov
addb
dec
std
xchg
add
mov
jmp
jecxz
icebp
jecxz
sub
adc
mov
xchg
fisttpl
mov
mov
aad
add
cmp
daa
insl
or
mov
jae
add
sbb
dec
lret
push
dec
pop
dec
cmp
add
mov
jno
or
cmp
sub
push
add
aaa
jecxz
and
mov
jmp
sbb
mov
cltd
test
dec
mov
outsb
popf
cwtl
les
dec
xchg
add
xchg
mov
inc
add
out
js
jg
add
and
fdivrs
add
jmp
and
mov
xor
int3
push
or
lods
cs
cmp
push
negl
add
add
jne
xor
pop
mov
sub
mov
repnz
pop
and
sub
mov
mov
push
loopne
mov
jp
pop
push
out
aam
icebp
leave
loopne
mov
lods
xlat
cli
pop
cmp
add
sbb
les
mov
mov
adc
int3
adc
dec
and
mov
inc
lea
stos
aam
scas
cmp
pop
popa
cmp
int3
and
push
add
jbe
xor
out
aaa
in
add
and
mov
mov
mov
insb
add
cmp
add
pop
mov
push
insl
push
rolb
sbb
add
mov
adcl
cltd
fwait
bound
mov
lods
in
cmp
inc
dec
xor
lock
add
cmpsl
cli
xchg
ja
cld
lret
ljmp
or
xor
mov
addb
jae
gs
xchg
rclw
add
inc
mov
shl
add
jo
mov
daa
adc
fmuls
cmpsl
sub
inc
xor
add
inc
cwtl
outsb
pop
mov
xor
pop
loop
mov
mov
sti
pop
sub
adc
rolb
mov
push
test
dec
div
movsl
pop
sub
cmpsb
jnp
je
add
add
arpl
xlat
cmpsl
mov
add
cmpsb
mov
push
add
in
cmpsl
pop
or
mov
add
lcall
es
dec
imul
sbb
adc
add
insb
in
add
andl
repz
ds
cltd
icebp
lret
nop
add
xchg
test
faddl
jl
sbbl
stos
xor
mov
mov
arpl
push
push
add
data16
cmpsl
out
push
jmp
add
sub
call
mov
addb
adc
mov
mov
mov
mov
push
mov
push
xor
outsb
bt
dec
roll
add
inc
in
push
adc
nop
add
xor
mov
add
or
insb
fstpl
or
push
mov
ja
dec
imul
and
inc
xchg
pusha
add
imul
dec
push
or
adc
or
add
push
aas
sub
and
pop
nop
add
xchg
pop
cs
mov
add
push
jecxz
mov
cli
dec
adc
mov
add
loop,pt
mov
repz
mov
cmp
and
mov
cmpsb
and
daa
push
add
sub
push
and
sub
fldt
add
mov
mov
adc
cmp
in
into
gs
xchg
out
cmc
rolb
mov
sub
lahf
pop
add
pop
sbb
mov
cmp
pop
xchg
movsb
pop
push
add
jnp
jp
sbb
pop
mov
fcoms
aas
pop
dec
pop
aaa
lock
add
cmp
bound
mov
mov
add
std
mov
sbb
sub
sub
mov
add
xor
push
jmp
int3
or
add
cmp
loope
push
data16
mov
loope
mov
xchg
ret
inc
add
add
test
mov
insl
adc
sbb
pop
or
mov
imul
mov
inc
and
rolb
mov
lret
jb
mov
add
and
push
xchg
add
adc
div
sub
mov
mov
add
push
add
pop
or
push
adc
sub
mov
fmul
inc
push
pop
repnz
mov
mov
stos
fisubrl
lret
mov
dec
mov
cmp
ret
mov
stc
and
repz
lcall
repnz
stos
in
lahf
cmp
mov
test
in
ret
lods
inc
push
sahf
push
fwait
rolb
mov
cltd
pop
sahf
stc
rcr
mov
in
pop
sub
sub
add
sub
xorl
add
jbe
push
adc
mov
and
mov
cli
mov
xchg
outsb
mov
add
loop
mov
fstps
mov
into
lahf
xor
das
test
dec
pushf
or
add
add
xor
cwtl
pop
out
or
enter
mov
imulb
mov
add
fstpl
addr16
add
call
outsl
push
add
fstpl
gs
daa
outsl
or
adc
test
sub
add
call
in
push
sahf
lcall
enter
push
add
stos
out
sub
fstl
xchg
add
or
ret
mov
add
dec
add
adc
mov
adc
pop
mov
mov
xor
testl
pop
xor
mov
jmp
jge
sbb
or
dec
in
out
adc
mov
ror
call
adc
mov
pusha
add
sbb
repnz
testl
or
add
xcrypt-ctr
cmpsl
ficompl
jns
push
pop
mov
into
mov
data16
or
scas
cmc
bound
mov
rolb
inc
mov
in
ret
mov
jg
add
mov
push
xchg
je
int
mov
mov
push
pop
pop
pop
das
daa
mov
addb
dec
imul
jne
test
or
xchg
mov
call
add
mov
xor
mov
add
mov
repnz
sbb
lds
adc
aas
add
mov
add
pop
iret
pop
in
outsb
push
mov
repz
add
pop
sub
and
mov
xor
mov
add
loop
mov
jp
aad
sbb
mov
mov
add
mov
aas
mov
pop
lods
xchg
or
addb
iret
ja
push
cs
or
add
add
mov
aaa
jp
xor
push
add
mov
add
ss
imul
xor
mov
mov
repnz
lods
in
dec
inc
add
sub
loopne
mov
je
and
mov
int3
sbb
fildll
sub
mov
mov
mov
cmp
movsb
dec
mov
pop
mov
and
mov
xor
mov
and
mov
sahf
lea
adc
mov
idivb
mov
pusha
add
mov
jae
add
cld
movsb
push
add
and
mov
pop
ret
mov
dec
xor
add
test
bound
mov
add
mov
movsl
adc
mov
cmp
or
push
in
jae
mov
stos
or
mov
cmpsb
dec
sub
lods
pop
orl
mov
or
pusha
add
pop
jbe
xor
mov
enter
insl
dec
jne
add
sub
lock
mov
lret
imul
sbb
daa
xchg
add
es
je
cs
adc
mov
and
mov
mov
add
add
mov
add
xchg
dec
push
out
add
mov
enter
mov
test
add
mov
xchg
out
xor
add
xor
or
add
mov
dec
out
shll
adc
mov
ret
xlat
ret
push
sbb
push
push
push
stos
mov
popf
leave
ret
mov
aas
insb
adc
cmp
loop
mov
push
xor
mov
in
cltd
push
add
mov
mov
mov
jmp
shll
les
sahf
out
or
cmp
add
sbb
movsl
mov
mov
mov
aaa
mov
add
cwtl
imul
mov
icebp
dec
es
mov
hlt
push
stos
mov
adc
mov
inc
add
xor
test
mov
rorl
push
adc
jb
mov
inc
leave
xor
rcl
movsb
gs
ja
fisttpll
add
push
in
stos
ja
lcall
push
push
ljmp
xchg
mov
lea
mov
add
xor
mov
mov
or
add
add
sbb
mov
lahf
sub
add
mov
xchg
xor
mov
add
out
xchg
insb
cmp
cmpsl
fisubs
fs
add
js
int
scas
das
bound
mov
pusha
add
add
imul
imul
add
pop
lods
addr16
xchg
xor
lahf
ljmp
test
sub
fs
inc
xchg
call
test
push
pop
imul
mov
aam
add
scas
test
negb
sub
xchg
add
addb
lcall
push
adc
mov
movsb
adc
lea
sub
into
or
mov
or
xchg
push
js
jge
add
mov
aas
and
popa
mov
jg
mov
mov
push
add
mov
pop
iret
hlt
adc
mov
cmp
pop
outsl
push
fisubs
add
hlt
movsb
lret
mov
sti
xchg
iret
rcll
mov
push
add
add
mov
mov
nop
add
push
cli
js
rolb
mov
sbb
fbstp
sahf
mov
rolb
adc
mov
sbb
adc
mov
aad
insl
push
fs
bound
mov
mov
fiadds
sbb
aad
xor
mov
add
add
lret
dec
cmp
repnz
mov
inc
enter
ret
lds
mov
pop
fs
fwait
jne
push
sub
test
repnz
add
add
cmc
ret
push
rolb
fldt
inc
imul
rolb
mov
pop
daa
aam
mov
rcl
add
add
out
push
insl
call
mov
xchg
movsb
or
or
in
notl
xor
mov
sub
cmp
cmp
lock
add
sub
adc
fidivrl
and
mov
pop
mov
mov
mov
loopne
mov
add
mov
add
mov
push
stos
or
inc
mov
aas
jae
push
jne
iret
ss
jl
cwtl
cmpsb
push
add
push
sub
ret
fildl
adc
add
mov
xchg
das
cmp
pop
push
inc
add
jl
jnp
pusha
add
dec
mov
lcall
add
push
lahf
fwait
scas
inc
push
cmp
cmp
xchg
dec
adc
mov
xchg
and
mov
xchg
sub
inc
and
incb
pop
loopne
mov
mov
dec
push
cmp
push
inc
add
mov
xchg
xchg
add
mov
lods
aaa
aad
stos
push
loop
mov
inc
inc
addb
xchg
add
nop
add
push
xor
repz
mov
cwtl
imul
cld
sbb
add
xlat
mov
sbb
jle
pop
repz
add
sbb
pop
pop
ds
inc
add
dec
filds
mov
push
add
adc
push
add
sub
sub
cmc
cli
mov
cmp
jle
add
ficoms
or
xor
xchg
or
addb
rolb
mov
adc
mov
mov
bound
mov
dec
div
inc
add
mov
jl
add
mov
cmpsl
jl
adc
mov
je
in
add
fildll
addl
mov
clc
pop
mov
add
mov
lret
sub
les
mov
cmp
push
jge
repz
add
pop
cmp
add
or
add
fucomp
arpl
add
je
adc
add
pop
adc
mov
addb
add
lock
lods
mov
inc
mov
es
add
add
sbb
add
mov
and
lret
push
mov
mov
add
mov
jp
push
in
mov
mov
cld
rolb
cmc
lcall
addb
push
jp
call
rol
cmp
adcl
test
mov
mov
mov
pop
lcall
mov
fsubs
mov
jg
aaa
push
sub
add
addb
dec
stos
sub
xor
bound
mov
mov
xor
push
ljmp
mov
sub
xchg
outsl
outsb
dec
and
add
notl
addr16
add
jle
fistl
ljmp
push
jecxz
in
pop
addl
mov
dec
ljmp
or
add
push
add
mov
push
aas
sti
lcall
mov
imul
ja
adc
push
rolb
mov
ds
orps
popf
mov
xor
jecxz
and
xchg
mov
lret
rolb
mov
mov
mov
mov
mov
add
adc
cmpsl
pushf
mov
imul
sbb
jmp
xor
loop
mov
pop
out
stos
push
xchg
add
sub
sbb
and
cmp
add
mov
cmp
nop
add
push
ljmp
dec
cmp
mov
cmp
sub
push
mov
bound
mov
das
fwait
mov
push
and
jno
scas
fmul
insl
cmp
mov
movsl
xorl
daa
inc
pop
xchg
cmpsb
mov
add
push
lret
add
jne
push
lock
or
jae
add
dec
dec
stos
xor
mov
lret
mov
pop
push
movsl
loope
movsl
lret
hlt
fwait
jns
fxch
mov
jns
push
add
xchg
arpl
out
jae
add
mov
mov
mov
add
jmp
or
mov
repz
stos
int
mov
mov
sub
xchg
nop
add
clc
js
bound
mov
mov
add
mov
stos
js
add
mov
jg
inc
insl
popa
sub
lcall
popf
mov
outsb
lcall
mov
mov
add
mov
mov
jno
add
in
out
test
mov
jecxz
lcall
xor
mov
or
mov
sub
loopne
mov
mov
jbe
sub
mov
or
cwtl
mov
int
lret
push
std
push
cmp
in
cmpsb
sbb
repnz
jnp
sub
mov
add
pop
cltd
aad
movsb
das
inc
mov
or
or
out
mov
sbb
jb
mov
mov
xchg
ljmp
add
and
mov
in
xor
adc
or
mov
loopne
mov
movsb
paddq
push
inc
pop
inc
mov
das
icebp
mov
mov
jle
out
lahf
and
mov
in
enter
push
pop
add
addb
idiv
pop
in
in
in
loope
adc
mov
pop
clc
lods
pop
push
cmpl
cmp
mov
mov
fmul
sub
mov
loop
mov
hlt
push
dec
sub
add
ret
xchg
add
add
jns
adc
lock
cltd
testl
test
xor
xlat
aam
shrl
addb
ret
lds
call
mov
enter
rolb
fcmovbe
insl
push
out
xor
std
out
nop
add
cs
pop
popl
push
mov
add
push
das
mov
into
xor
mov
push
dec
jo
mov
fcomi
push
cmp
sbb
std
jg
add
mov
mov
mov
pop
add
mov
mov
fimuls
xlat
pop
mov
aas
mov
add
fsub
fildll
xor
mov
push
popf
and
sbb
lcall
mov
add
addb
imul
cmpl
call
aad
je
nop
add
mov
push
fisubrl
fnstenv
xchg
sbb
int
aad
xor
mov
push
sar
arpl
add
int3
xchg
stos
dec
xlat
out
cmp
in
fadd
add
cmpsb
pop
nop
add
cs
cld
jl
push
push
push
je
pop
push
sti
filds
add
add
add
aaa
cmp
mov
mov
push
cmp
jbe
cld
dec
stos
enter
pushf
jp
in
ret
cmp
out
mov
int
stos
jmp
xchg
xor
xor
add
jge
out
mov
jmp
int3
stos
test
movsl
xchg
out
push
pushf
inc
cs
sbb
add
add
lods
lea
out
fwait
das
ficomps
xor
mov
mov
jle
roll
pushf
inc
dec
std
push
add
fwait
xor
pop
enter
xchg
sub
sbb
movsl
push
add
mov
mov
sub
rolb
mov
sub
jae
mov
xchg
add
sbb
add
incl
cmpsb
jle
jae
rcr
ja
xchg
cmp
add
xchg
fisubrl
inc
mov
push
and
in
pop
mov
lea
repnz
mov
roll
lds
fbstp
loop
mov
movsb
or
add
ja
fmul
pop
cli
add
pop
jmp
inc
ljmp
int
and
aas
add
mov
mov
divl
popa
mov
xchg
fbld
movsb
dec
push
ret
jmp
mov
lahf
decl
mov
add
adc
mov
add
loop
mov
bound
mov
adcl
push
and
lea
hlt
mov
mov
pop
out
pop
cmp
mov
enter
ficoml
cmpsb
imulb
mov
aad
std
shll
mov
dec
push
test
xchg
add
in
pop
add
dec
and
loope
movsl
xor
dec
dec
xchg
mov
mov
add
mov
add
inc
leave
dec
scas
pushf
cmp
sub
inc
add
mov
insl
xchg
cmpsb
stos
in
pushf
test
sti
int
bound
mov
xchg
cwtl
ja
cli
test
ficompl
movsb
iret
imul
fmuls
or
xchg
dec
mov
push
dec
mov
xchg
jmp
adc
add
mov
pop
jne
add
insb
hlt
repz
icebp
push
pop
adc
mov
add
add
pop
adc
add
inc
or
loop
mov
sti
mov
mov
dec
or
pop
jae
fisubl
aad
loopne
mov
add
sub
dec
xchg
push
pop
add
cltd
push
xor
in
xchg
push
ret
pop
in
and
cmc
push
add
insl
xor
mov
mov
mov
add
jo
mov
nop
add
add
lds
popa
cmp
mov
fcmovnbe
mov
addb
pop
cmpsb
pop
and
test
in
addr16
add
add
loope
cmpsl
sti
push
mov
mov
push
mov
xchg
xlat
rolb
ljmp
mov
stc
mov
dec
xchg
das
xchg
ljmp
inc
xor
loop
mov
dec
std
lahf
cmpsl
pushf
scas
xchg
ljmp
add
push
das
test
inc
nop
add
vshufps
scas
mov
xor
mov
mov
pop
inc
sbb
mov
mov
cmp
aad
out
int
inc
and
mov
mov
xchg
add
pop
fwait
jne
jp
add
jmp
add
mov
jle
mov
mov
mov
icebp
pop
adc
lret
mov
mov
les
mov
or
cli
mov
leave
out
je
push
loope
addb
jmp
cltd
dec
lods
add
dec
mov
fs
sahf
mov
lock
push
jae
sbb
xor
mov
addb
rolb
mov
lods
mov
sahf
cmpsb
push
lods
sub
daa
dec
cmpsl
test
add
pusha
add
add
xchg
dec
imul
in
jno
mov
and
mov
pop
ja
mov
mov
mov
pushf
and
insl
dec
and
mov
lds
jge
add
lock
mov
cmp
lock
rcrl
ret
fwait
stc
add
mov
add
cld
pusha
add
icebp
sbb
push
lods
mov
movsl
or
mov
mov
jmp
add
int
sub
push
add
loop
mov
dec
aam
jge
je
insb
repz
or
movsl
clc
sbb
add
mov
mov
xor
mov
mov
add
mov
int3
fs
icebp
xlat
add
xchg
in
ret
cmc
sub
cwtl
dec
jecxz
cmpsl
mov
mov
sbb
pop
mov
sbb
inc
add
xchg
movsl
mov
add
mov
stos
cmpsb
sbb
std
add
lods
cld
imul
pop
mov
fwait
jmp
sub
mov
lcall
dec
pminub
cld
push
xchg
arpl
in
cmp
lea
add
mov
pop
push
push
shrl
xor
adc
mov
jb
mov
add
dec
push
jns
dec
sub
cmp
mov
outsl
repz
jg
out
das
aaa
mul
xor
mov
cmp
sub
mov
repnz
rolb
xchg
rolb
and
insl
push
add
add
mov
mov
ds
leave
rcrl
jmp
mov
in
mov
or
mov
hlt
adc
test
pop
imul
fmull
add
mov
mov
aas
clc
add
mov
cmp
mov
iret
ret
fildl
stos
test
scas
rolb
lds
add
mov
cmpsb
inc
jl
add
mov
mov
mov
jo
mov
add
stc
inc
loopne
mov
push
add
dec
fsub
xor
cs
xor
mov
pop
jle
rolb
pushf
and
fimuls
or
test
loopne
mov
test
movsl
nop
add
push
gs
mov
pushf
js
ficomps
mov
mov
sbb
shll
inc
add
jns
int
add
mov
mov
xchg
rorl
xchg
add
popf
movsb
scas
cld
xchg
mov
sub
push
jge
mov
jge
sub
mov
cmp
add
mov
cld
push
push
add
das
movlps
rcrl
lods
mov
mov
mov
add
mov
dec
adc
inc
fbstp
int
and
mov
je
ja
in
cmp
aas
push
jno
xor
popf
outsb
cmovge
mov
add
stc
sbb
add
push
adc
lret
test
add
sub
nop
add
js
and
loope
add
test
leave
outsl
addb
xchg
ljmp
aas
stos
cmpsl
into
pop
add
dec
pop
xor
mov
ja
or
inc
add
fbstp
movsb
sbb
add
sbb
cli
xchg
divl
mov
cmp
ret
and
mov
mov
mov
and
mov
dec
sbb
movsb
insb
adcl
mov
adc
popf
cmp
add
pop
cwtl
int
es
loop
mov
btrl
sbb
sbb
mov
push
mov
loope
mov
add
arpl
mov
add
mov
xchg
or
call
add
popf
pop
pop
xchg
retw
jp
push
sti
inc
lcall
mov
in
mov
mov
xchg
or
aam
gs
sarl
push
stos
mov
mov
mov
mov
mov
scas
outsl
dec
scas
shll
clc
cmp
insb
das
pop
jl
aas
and
mov
pop
jne
add
or
push
add
mov
lret
fcoml
add
sub
cmp
add
data16
xor
mov
out
int
cmp
pop
pop
jmp
xorl
clc
sub
inc
stos
sub
in
xchg
iret
xor
sbb
xor
mov
jl
sub
xlat
mov
add
lret
js
pushf
or
add
add
pushf
sbb
int3
add
or
stos
mov
std
xchg
add
mov
mov
inc
jmp
xor
mov
daa
push
add
adc
rolb
mov
mov
mov
outsb
push
add
sti
mov
inc
lahf
adc
outsb
popf
adc
mov
addb
jg
mov
imul
add
fst
jne
nop
add
mov
jno
sbb
inc
sbb
add
repz
pop
xor
xchg
mov
popf
insb
or
add
iret
arpl
shl
punpckhdq
and
fimuls
mov
push
into
lcall
test
rolb
mov
pop
jle
inc
fisubrs
mov
mov
stos
leave
push
fs
fstl
mov
frstor
test
roll
js
jp
sbb
pop
cli
mov
imul
adc
mov
mov
bound
mov
pop
push
lahf
fld
cmpsl
dec
cltd
or
xchg
add
pop
loope
pop
push
add
mov
in
sahf
cmpsb
movsb
in
or
test
add
jno
cmpl
mov
add
mov
add
mov
mov
mov
ds
aas
scas
xchg
adc
or
mov
mov
stc
icebp
mov
mov
add
push
cmp
push
add
xchg
sub
mov
lods
lret
dec
ljmp
sbb
or
fldl
std
push
xchg
roll
sbb
xchg
test
mov
sub
cmp
mov
mov
or
subl
sahf
gs
add
add
add
imul
mov
repz
add
push
mov
subl
movsl
fsubl
cmp
pop
push
movsl
stos
test
dec
lods
jecxz
lea
pop
fildll
cmpsb
xchg
iret
pop
lods
mov
cmpsb
addr16
or
mov
movsb
stos
cmpsb
mov
ljmp
sub
pop
out
xlat
inc
add
ret
sub
pushf
movsb
repz
in
test
std
push
mov
mov
dec
inc
mov
mov
test
les
andl
rcrl
push
test
pop
outsb
in
xchg
push
sbb
rolb
mov
jl
adc
mov
mov
std
pop
sahf
out
cmp
outsb
aam
sbb
pop
pusha
add
jl
in
mov
mov
push
cmp
add
loopne
mov
fildl
sahf
sbb
push
add
rolb
cld
hlt
mov
xchg
or
out
or
push
xor
push
daa
xchg
push
std
mov
xchg
addb
loope
rolb
mov
mov
repz
adc
mov
shll
ret
ret
or
mov
add
std
jns
ja
cltd
pop
mov
outsl
imul
ss
jne
mov
jp
ret
pop
inc
in
pop
add
cmp
in
xchg
mov
add
lods
out
cltd
mov
mov
pusha
add
adc
push
cmc
dec
jnp
sbb
add
dec
test
scas
jmp
jp
cmp
mov
jmp
js
lds
pushf
outsl
mov
mov
mov
jmp
cwtl
dec
adc
mov
stos
test
sub
pop
sbb
into
mov
add
and
add
add
rolb
mov
push
lcall
fisubs
mov
mov
push
daa
pop
xchg
jecxz
add
cwtl
mov
sti
add
mov
mov
mov
aam
push
aam
and
add
add
clc
sbb
test
pop
aas
das
rolb
xor
mov
xchg
mov
pusha
add
ss
repnz
add
pusha
add
push
add
mov
loop
mov
fstpt
add
add
jbe
popa
rcll
add
and
mov
add
sbbl
inc
add
fsts
int
add
mov
lds
fbld
add
imul
and
mov
jmp
add
jge
clc
loope
cmp
inc
xor
mov
sub
mov
lock
add
adc
les
xor
mov
mov
mov
cmp
stos
jb
mov
push
ljmp
dec
les
mov
mov
out
in
lea
loopne
mov
pop
fadds
inc
lods
mov
mov
stos
mov
mov
sbb
add
inc
and
mov
popa
xchg
popf
xchg
pusha
add
das
adc
xchg
mov
pop
imul
jmp
stos
push
aam
add
popa
xchg
sbb
mov
scas
mov
and
movl
jo
mov
mov
mov
add
mov
in
jge
insl
loopne
mov
stos
sbb
out
ljmp
mov
insb
and
add
xchg
add
int
inc
add
addb
mov
jle
lock
cltd
xchg
jo
mov
add
pop
jb
mov
cld
ss
gs
pop
lea
addb
mov
mov
out
lea
das
jmp
xor
push
add
mov
and
mov
or
push
add
add
xor
popa
lret
fxch
cmp
xlat
jb
mov
or
add
push
in
loope
add
mov
je
aas
imul
add
arpl
dec
lcall
add
mov
xchg
mov
mov
adc
mov
mov
mov
sbb
js
fwait
dec
call
add
popa
xor
mov
les
jp
out
lea
mov
inc
mov
cs
rorl
pusha
add
add
mov
jne
cmpsl
pop
addb
in
mov
out
int3
int3
loope
and
or
mov
test
pop
push
adc
add
inc
test
xchg
mov
mov
lea
arpl
dec
fisubl
pushf
scas
mov
sbb
stos
and
mov
xor
xor
inc
add
jae
dec
push
sub
rolb
out
outsb
mov
jl
push
sub
mov
imul
in
pop
and
in
inc
ja
add
adc
mov
jmp
pop
test
pushf
test
add
push
add
in
std
inc
adc
mov
add
mov
or
mov
mov
xlat
adc
add
cs
pop
add
push
sbb
mov
movsl
clc
or
aas
push
add
mov
add
mov
into
loope
mov
add
add
insl
pop
sbb
and
or
nop
add
ja
add
cmpsb
lods
mov
mov
popf
mov
pusha
add
scas
mov
mov
jo
mov
or
mov
int3
in
and
mov
loop
mov
pop
inc
mov
dec
das
pop
fimuls
push
testl
aas
pop
ret
cmp
adc
mov
add
add
mov
lcall
pushf
scas
fsub
arpl
add
add
lods
mov
aaa
lcall
loope
nop
add
add
push
and
mov
jmp
lret
push
cwtl
stos
push
mov
pop
adc
mov
fimull
sbb
xchg
std
jb
mov
push
sbb
sub
dec
int3
mov
dec
ss
mov
nop
add
in
add
mov
add
add
add
add
add
pop
decb
cmp
fistps
mov
add
sti
pop
mov
loop
mov
mov
mov
cmp
in
cltd
mov
mov
dec
xchg
outsl
mov
inc
add
das
mov
add
movl
lret
inc
mov
bound
mov
cmp
jns
pushf
cmpsb
pop
hlt
mov
insb
cli
pop
xor
std
or
mov
mov
stos
pop
aas
loopne
mov
cmc
mov
pop
addb
imul
mov
fwait
push
mov
push
add
mov
cmpsl
std
addb
adc
xchg
mov
add
mov
sub
sub
lods
mov
add
add
dec
aas
mov
sub
je
xor
adc
add
rolb
xchg
add
add
pop
sbb
mov
xor
mov
outsb
lret
xor
mov
dec
xchg
cltd
cmpsl
pop
repnz
int3
enter
stos
int
xchg
cmp
sahf
push
lret
or
hlt
ret
mov
mov
movsl
mov
sbb
lds
mov
pop
pop
loope
outsl
in
sub
cmc
push
mov
xchg
push
fstps
add
mov
pop
stos
ss
add
mov
rolb
fdivrl
js
ficoms
pop
mov
out
dec
jg
jg
xlat
sahf
adc
add
adc
dec
jmp
jge
lods
xor
lock
jnp
cmp
stos
ds
add
mov
lods
imul
cli
outsb
rolb
mov
add
scas
gs
sbb
jno
push
cmp
je
xchg
outsl
test
xor
sbb
add
call
sti
sti
repz
push
pop
push
xchg
add
and
aam
mov
xchg
jo
mov
inc
xchg
sbb
into
push
add
scas
mov
jbe
test
sti
jne
ds
add
inc
js
into
add
add
dec
push
out
cmc
mov
jge
push
rorl
push
inc
out
push
out
rolb
mov
sub
add
xor
cmp
sub
fnsave
add
or
daa
add
add
hlt
push
sbb
stc
sahf
cmp
dec
int3
notl
lret
gs
repz
lods
call
xchg
cmpsl
and
popf
mov
scas
sub
mov
mov
ss
dec
add
ljmp
push
test
mov
mov
or
add
mov
adc
add
jns
arpl
sub
dec
jmp
mov
roll
fs
stos
sahf
xchg
mov
ret
push
add
and
fcoms
mov
rcrl
mov
ja
lds
mov
aam
add
mov
lods
add
mov
stos
push
xchg
add
or
or
push
aad
push
loopne
mov
insl
movsb
jae
add
add
jecxz
push
call
xor
mov
mov
add
int
icebp
or
adc
ja
mov
mov
sbb
add
addb
rolb
mov
xchg
jno
xchg
xchg
lds
xchg
jb
mov
cmp
pop
lahf
push
xchg
push
hlt
mov
add
pushf
cvtps2pd
arpl
xor
jl
jae
jnp
push
xchg
mov
outsb
jl
add
pushf
aad
fcom
add
cli
cmp
add
in
or
add
xor
fidivrl
add
lods
imul
cs
jge
pop
mov
add
loopne
mov
adc
mov
cwtl
cmp
add
dec
xor
sub
aaa
pop
dec
add
mov
xor
stc
adc
sub
cli
repnz
push
add
bound
mov
push
addb
mov
add
sub
jno
push
add
xchg
jne
movsb
movsl
jp
or
or
xchg
gs
push
stc
les
cmp
lahf
jle
sbb
xor
mov
mov
pushf
jg
add
gs
jns
or
lcall
imul
icebp
xor
sub
shrl
mov
add
mov
pop
fsubrl
or
mov
add
leave
fcomi
xchg
add
icebp
xor
lret
call
add
jnp
mov
sbb
fidivs
mov
test
neg
aaa
and
mov
xchg
mov
inc
sub
add
pop
call
lret
push
pop
cs
ss
push
nop
add
mov
lds
fcom
jmp
mov
aam
pop
rolb
mov
sub
aaa
outsl
cmp
add
mov
mov
mov
add
iret
mov
dec
jb
mov
in
scas
lcall
ret
or
xchg
mov
add
cmp
pop
pushf
pop
into
mov
sahf
popf
cmp
add
mov
out
pusha
add
or
call
scas
push
pusha
add
pop
dec
pop
and
mov
cmpsl
mov
mov
mov
cld
sbb
arpl
lods
lock
icebp
cmpl
scas
arpl
cltd
pop
loopne
mov
ficomps
cmp
or
fbstp
add
mov
add
loope
jne
dec
push
sub
push
jnp
idivl
stos
fs
xchg
xor
arpl
jg
std
lock
popl
add
stos
cld
push
repz
and
push
cmp
dec
loope
addb
dec
ja
addb
jg
mov
cmpl
push
hlt
push
add
addl
add
imul
out
sbb
mov
add
add
mov
sub
add
mov
cmp
mov
das
iret
imul
addb
cmpsb
mov
mov
jo
mov
mov
in
add
sub
rolb
fldenv
mov
mov
mov
add
add
js
cld
lock
aaa
pop
mov
outsb
add
rolb
sarl
mov
add
popa
jecxz
mov
jne
xchg
daa
outsb
jp
jnp
popf
movsb
lret
jg
aam
ss
outsb
repz
dec
lds
mov
inc
sbb
dec
je
cmp
mov
mov
sbbl
mov
jmp
out
in
decl
fwait
popa
leave
nop
add
mov
mov
fnsave
add
mov
or
inc
movntq
mov
and
mov
inc
lret
aas
mov
pop
xchg
pushl
add
mov
mov
and
ja
xchg
pop
jl
inc
add
add
add
aaa
mov
sbb
loop
mov
pop
inc
aam
inc
jno
movsb
mov
lcall
bound
mov
inc
rolb
mov
jl
sub
addb
imulb
xchg
add
jb
mov
loop
mov
push
popf
xor
or
daa
and
mov
shl
dec
and
iret
jnp
cmc
arpl
mov
lret
add
fistpll
add
cld
enter
mov
xchg
sub
repz
sbb
frstor
add
mov
mov
loope
cmc
stos
cmpsb
imul
sbb
je
xchg
fldenv
adc
xor
stos
mov
pop
sarl
fcmove
add
pop
lods
xor
fistps
gs
mov
es
les
mov
jmp
iret
movsb
xor
mov
sbb
mov
mov
fwait
fidivs
daa
inc
jnp
pop
rolb
mov
mov
fwait
das
cltd
ret
and
mov
jbe
packuswb
mov
cltd
pop
inc
add
lds
pop
pop
sbb
lods
rcrl
xchg
mov
mov
pop
mov
daa
jecxz
and
dec
movsl
pop
cli
add
dec
mov
add
mov
push
arpl
cld
out
lret
popa
xchg
int3
push
push
add
fisubrl
add
inc
mov
push
push
iret
sahf
mov
lahf
adc
mov
jmp
pop
push
add
add
pop
test
repz
and
jno
cmp
push
addb
adc
fs
je
gs
add
lahf
push
pop
sbb
jnp
daa
cmpsb
or
les
or
add
stc
sbb
test
jmp
add
add
xor
jge
jae
aam
lds
add
in
rolb
mov
lcall
jl
popf
push
adc
movsb
xor
mov
out
cmc
dec
mov
sub
mov
push
roll
cli
jbe
add
popa
sub
ja
adc
add
push
pop
dec
and
mov
mov
add
adc
mov
mov
mov
add
mov
rolb
mov
or
ret
cmp
mov
subl
dec
ret
repnz
add
in
add
outsb
pop
ss
icebp
push
sbb
addb
push
inc
cmc
jmp
addb
stc
enter
lcall
mov
add
jecxz
add
xor
mov
add
mov
jl
je
add
test
rep
pop
mov
push
loop
mov
ret
inc
aaa
xor
mov
add
mov
jno
into
das
mov
rcll
fstpl
or
xchg
mov
xchg
mov
mov
test
sti
inc
mov
sbb
mov
test
nop
add
mov
fsubrs
fstps
add
clc
ror
mov
lret
and
mull
stos
push
or
aam
gs
cmp
testb
insl
mov
mov
dec
add
addr16
fstps
mov
repnz
pop
sbb
bound
mov
jb
mov
out
mov
add
scas
lea
mov
addb
test
ljmp
mov
nop
add
mov
mov
or
int
cmp
add
add
inc
cltd
xchg
iret
or
mov
sti
jbe
loop
mov
std
leave
and
add
imul
cmc
dec
imul
push
cwtl
push
jecxz
test
movsl
aad
cmp
bound
mov
add
and
mov
dec
adc
mov
sbb
clc
aam
arpl
add
daa
call
push
shll
adc
aas
in
and
mov
add
xlat
mov
sub
sar
jl
ja
lret
mov
xchg
ds
adc
xchg
push
test
sarl
dec
mov
mov
xor
mov
repnz
adc
pop
mull
movsl
in
cmpsl
mov
mov
ds
sahf
int3
ret
adc
mov
or
or
sbb
dec
xchg
add
mov
mov
inc
mov
lret
pop
inc
repz
add
jg
sti
dec
test
cltd
or
jo
mov
cld
xor
pop
mov
push
das
je
xchg
xchg
add
sub
jnp
or
add
mov
jg
leave
imul
mov
add
cmp
fadds
adc
mov
mov
mov
out
inc
add
or
ja
ret
shll
pop
push
push
mov
mov
mov
icebp
testb
or
add
add
test
fstpt
mov
aad
and
jmp
arpl
add
fmuls
add
xchg
mov
pop
movsb
imul
pop
movsl
dec
sbb
mov
pop
aas
jns
cmp
repz
cld
mov
cli
and
or
inc
adc
dec
add
es
cwtl
lahf
dec
mov
add
and
mov
je
adc
loope
adc
faddp
sub
mov
dec
pop
das
faddp
add
mov
xchg
lock
dec
std
jp
das
loopne
mov
insl
jmp
add
mov
sub
mov
sti
enter
jg
xchg
add
imul
jge
out
in
stos
xchg
in
sub
imul
aad
ror
xchg
add
and
adc
mov
pop
aaa
jns
jae
mov
bound
mov
xor
mov
add
xor
pop
push
fidivrs
push
jb
mov
insb
addb
add
add
dec
cltd
jg
xrelease
add
enter
daa
mov
or
daa
push
sti
rolb
imull
push
add
js
movb
mov
mov
lds
mov
sti
cmp
mov
repz
sub
add
dec
add
mov
add
inc
add
repnz
add
mov
mov
clc
fdivrp
imul
nop
add
je
pop
sub
stos
add
add
pusha
add
sub
add
leave
xchg
jae
rolb
lock
mov
rolb
mov
add
outsb
popf
mov
push
outsb
push
push
insb
out
add
shll
mov
and
dec
mov
add
mov
js
xchg
hlt
mov
lods
icebp
hlt
rolb
mov
cwtl
jle
sbb
dec
rolb
std
or
mov
jb
mov
jnp
mov
test
gs
clc
call
mov
dec
int
inc
add
add
in
fdivl
add
mov
out
add
mov
fdivs
addb
inc
adc
push
scas
xor
cltd
jbe
xor
mov
xchg
sub
mov
add
call
js
mov
pop
cmc
pop
pop
stc
rolb
dec
mov
loopne
mov
repnz
mov
clc
jbe
fistpl
fidivl
pop
decb
lcall
jecxz
stos
dec
sub
sub
adc
mov
lret
mov
jl
inc
sbb
lods
aas
pop
mov
mov
inc
lcall
mov
jl
mov
js
xchg
or
sub
pop
js
sbb
mov
std
mov
mov
mov
leave
imull
pushf
jp
mov
js
push
xchg
add
jmp
add
rolb
mov
and
sbb
addb
arpl
mov
add
ja
nop
add
or
in
lcall
and
add
mov
lock
pop
adc
push
in
xchg
dec
cwtl
push
mov
push
xlat
sahf
shr
sbb
dec
test
add
adc
sbb
mov
rolb
mov
add
