out
loopne
sti
movsl
loopne
movsb
movsl
loopne
popf
mov
loopne
push
cmpsb
loopne
adc
test
loopne
push
cmpsl
loopne
jno
loopne
adc
loopne
and
loopne
mov
loopne
js
loopne
jmp
loopne
shll
loopne
dec
movsb
loopne
sti
cmpsl
loopne
jmp
loopne
dec
mov
loopne
sbb
cmpsl
loopne
fldenv
loopne
or
mov
cmpsb
loopne
mov
loopne
int
loopne
jb
loopne
hlt
movsb
loopne
int3
mov
loopne
loopne
loopne
hlt
movsb
loopne
xor
mov
loopne
aad
loopne
sub
movsl
loopne
cld
movsb
loopne
lret
mov
loopne
bt
mov
cmpsb
loopne
xor
mov
movsl
loopne
push
cmpsb
loopne
leave
mov
loopne
xchg
cmpsb
loopne
dec
test
mov
cmpsl
loopne
mov
loopne
or
loopne
sbb
test
mov
mov
loopne
pusha
mov
loopne
leave
test
mov
test
mov
test
loopne
bound
mov
movsl
loopne
sub
loopne
ret
mov
mov
loopne
pop
movsl
loopne
cmpsb
loopne
and
test
mov
mov
loopne
adc
loopne
lret
cmpsl
loopne
pushf
mov
loopne
cmp
loopne
inc
movsb
loopne
xor
loopne
scas
cmpsl
loopne
or
mov
loopne
cmp
mov
cmpsb
loopne
cmp
loopne
mov
loopne
sbb
test
mov
test
mov
cmpsl
loopne
push
test
loopne
andb
mov
mov
loopne
xchg
loopne
pop
movsb
loopne
stos
movsl
loopne
xchg
mov
loopne
mov
loopne
pop
movsl
loopne
js
loopne
mov
loopne
pop
cmpsb
loopne
xlat
mov
loopne
mull
loopne
xlat
mov
loopne
lock
loopne
sub
loopne
fsubl
loopne
aas
movsl
loopne
mov
loopne
and
mov
mov
loopne
mov
loopne
pop
movsb
loopne
pushf
movsb
loopne
sub
movsb
loopne
mov
mov
loopne
mov
movsl
loopne
shll
loopne
cmpsb
loopne
sub
movsb
loopne
inc
movsb
loopne
jno
loopne
ja
loopne
ljmp
mov
movsb
loopne
or
loopne
bound
loopne
jge
loopne
xor
loopne
cld
mov
loopne
and
loopne
mov
mov
loopne
inc
mov
loopne
aad
loopne
or
loopne
loopne
sub
loopne
and
loopne
mov
mov
loopne
and
loopne
jbe
loopne
shlb
loopne
hlt
mov
loopne
mov
mov
loopne
xchg
mov
loopne
movsw
loopne
shll
loopne
dec
mov
loopne
sub
loopne
jle
loopne
xchg
movsb
loopne
loopne
loopne
inc
mov
loopne
cmp
loopne
shll
loopne
js
loopne
ljmp
mov
movsb
loopne
loopne
adc
loopne
mov
cmpsl
loopne
test
loopne
scas
mov
loopne
in
loopne
mov
loopne
lahf
mov
loopne
pop
test
loopne
sub
loopne
or
loopne
cmp
loopne
push
loopne
aaa
test
mov
movsl
loopne
xor
loopne
ja
loopne
test
loopne
pop
cmpsl
loopne
xor
loopne
pop
mov
loopne
movsb
loopne
int3
mov
loopne
cwtl
mov
loopne
and
loopne
mov
mov
loopne
adc
loopne
inc
movsl
loopne
mov
loopne
xchg
mov
loopne
int
loopne
or
loopne
test
loopne
pushf
test
mov
mov
loopne
sbb
loopne
or
loopne
jecxz
loopne
aad
loopne
dec
mov
loopne
repnz
loopne
cmpsb
loopne
xchg
cmpsb
loopne
push
cmpsb
loopne
jle
loopne
dec
cmpsl
loopne
lea
mov
movsb
loopne
in
loopne
mov
test
mov
mov
loopne
fsubs
loopne
pushf
movsb
loopne
pusha
movsb
loopne
lds
loopne
add
loopne
mov
movsb
loopne
lods
mov
loopne
xor
loopne
pop
mov
loopne
fwait
movsb
loopne
xor
loopne
pop
mov
loopne
fildll
loopne
pop
movsb
loopne
push
mov
loopne
mov
loopne
int3
test
mov
cmpsl
loopne
adc
loopne
mov
movsb
loopne
icebp
movsb
loopne
add
loopne
cmp
loopne
cmp
test
mov
test
mov
cmpsl
loopne
sahf
mov
loopne
pop
cmpsb
loopne
jecxz
loopne
add
loopne
aaa
movsl
loopne
enter
movsl
loopne
sub
loopne
insl
movsb
loopne
mov
cmpsb
loopne
in
loopne
bound
mov
cmpsb
loopne
push
test
loopne
xor
mov
loopne
jle
loopne
ds
mov
cmpsb
loopne
andb
mov
cmpsb
loopne
mov
mov
loopne
in
loopne
xchg
mov
loopne
loop
loopne
lods
mov
loopne
xchg
loopne
lea
loopne
mov
movsl
loopne
arpl
loopne
mov
cmpsb
loopne
enter
jl
loopne
sbb
loopne
sub
mov
loopne
mov
cmpsl
loopne
push
test
mov
movsl
loopne
mull
mov
cmpsb
loopne
sub
mov
mov
loopne
ja
loopne
add
test
mov
mov
loopne
xor
loopne
popa
movsl
loopne
cmp
loopne
test
loopne
fwait
mov
loopne
repnz
loopne
ret
mov
cmpsb
loopne
or
loopne
jo
loopne
pop
mov
loopne
cwtl
mov
loopne
pop
cmpsb
loopne
sbb
loopne
jg
loopne
andl
loopne
pop
cmpsl
loopne
ret
mov
mov
loopne
or
cmpsb
loopne
jg
loopne
loopne
push
cmpsb
loopne
fsubrl
loopne
in
loopne
mov
mov
cmpsb
loopne
inc
test
loopne
dec
test
loopne
out
loopne
xor
loopne
inc
cmpsl
loopne
int
loopne
repz
loopne
dec
movsl
loopne
xor
loopne
andl
mov
mov
loopne
sbb
loopne
mov
loopne
mov
mov
loopne
aad
loopne
mov
loopne
js
loopne
cmp
mov
movsb
loopne
inc
cmpsb
loopne
pop
mov
loopne
hlt
test
mov
mov
loopne
push
cmpsb
loopne
push
mov
loopne
xchg
movsl
loopne
mov
loopne
jg
loopne
cmp
mov
mov
loopne
out
mov
loopne
sub
loopne
iret
mov
loopne
jmp
loopne
lret
cmpsl
loopne
lock
loopne
mov
loopne
loopne
loopne
mov
mov
loopne
jp
loopne
pop
cmpsl
loopne
ss
mov
cmpsb
loopne
je
loopne
loopne
jnp
loopne
out
mov
loopne
movsw
loopne
sahf
mov
loopne
mov
loopne
xor
movsb
loopne
mov
movsl
loopne
cmp
loopne
stc
mov
loopne
mov
cmpsl
loopne
mov
loopne
pop
cmpsl
loopne
mov
mov
loopne
fldenv
mov
mov
loopne
jl
loopne
inc
movsl
loopne
cmp
loopne
mov
loopne
xor
loopne
cwtl
mov
loopne
shll
loopne
enter
popa
movsl
loopne
pop
cmpsl
loopne
in
loopne
pop
movsb
loopne
inc
cmpsb
loopne
int3
cmpsb
loopne
shrb
loopne
movsl
loopne
jno
loopne
leave
movsb
loopne
pop
cmpsb
loopne
lret
mov
cmpsb
loopne
aam
loopne
shlb
loopne
stos
movsl
loopne
mov
loopne
mov
loopne
mov
cmpsl
loopne
jnp
loopne
cli
movsb
loopne
mov
loopne
inc
test
mov
cmpsb
loopne
ret
mov
mov
loopne
ljmp
mov
mov
loopne
mov
movsb
loopne
lret
mov
movsb
loopne
mov
movsl
loopne
cwtl
mov
loopne
cmpsb
movsb
loopne
xchg
loopne
in
mov
loopne
xchg
movsl
loopne
arpl
loopne
addr16
xchg
cmpsb
loopne
xchg
loopne
shll
loopne
ljmp
mov
mov
loopne
sbb
loopne
lret
movsb
loopne
mov
loopne
adc
loopne
pop
movsl
loopne
mov
loopne
pop
mov
loopne
jns
loopne
shll
mov
cmpsb
loopne
andb
mov
mov
loopne
in
movsb
loopne
test
test
loopne
push
test
mov
mov
loopne
xchg
mov
loopne
fsubl
loopne
out
cmpsb
loopne
arpl
loopne
dec
mov
loopne
shrl
loopne
mov
test
mov
cmpsb
loopne
test
loopne
movsl
loopne
pop
cmpsb
loopne
push
test
mov
cmpsl
loopne
lods
movsb
loopne
shll
loopne
mov
loopne
into
movsl
loopne
in
mov
loopne
shlb
loopne
int
loopne
outsl
movsb
loopne
dec
cmpsl
loopne
xor
loopne
stc
cmpsl
loopne
sub
loopne
xlat
mov
loopne
hlt
mov
loopne
cmpsb
loopne
lret
mov
cmpsl
loopne
mov
loopne
loopne
loopne
mov
loopne
movsb
loopne
fbld
loopne
cs
loopne
arpl
loopne
out
cmpsl
loopne
je
loopne
es
loopne
fsubs
loopne
jmp
movsb
loopne
push
movsl
loopne
pop
test
loopne
and
mov
loopne
mov
cmpsl
loopne
cs
mov
movsl
loopne
test
mov
test
mov
cmpsb
loopne
dec
mov
loopne
and
loopne
and
loopne
movsb
loopne
add
loopne
sub
loopne
inc
cmpsl
loopne
inc
test
loopne
inc
cmpsl
loopne
adc
loopne
nop
cmpsb
loopne
cmpsl
loopne
cmp
loopne
andl
mov
movsl
loopne
xchg
movsl
loopne
jmp
movsb
loopne
int3
mov
loopne
in
loopne
mov
loopne
inc
cmpsl
loopne
out
loopne
aad
loopne
xchg
cmpsb
loopne
push
cmpsb
loopne
xlat
mov
loopne
xchg
mov
loopne
xchg
cmpsb
loopne
mov
cmpsl
loopne
test
mov
test
mov
mov
loopne
sub
loopne
clc
mov
loopne
or
loopne
push
test
mov
mov
loopne
andl
mov
movsb
loopne
cltd
movsb
loopne
aaa
mov
loopne
lcall
mov
cmpsl
loopne
data16
loopne
push
test
loopne
sbb
loopne
cmpsb
loopne
iret
cmpsl
loopne
sbb
loopne
cmp
movsl
loopne
pop
cmpsl
loopne
insl
mov
loopne
dec
mov
loopne
fwait
movsb
loopne
mov
loopne
or
loopne
sbb
loopne
adc
loopne
cmc
movsb
loopne
mov
loopne
mov
mov
loopne
jne
loopne
mov
movsl
loopne
or
cmpsl
loopne
xor
loopne
in
mov
loopne
cwtl
cmpsl
loopne
mov
loopne
fisubl
loopne
int
loopne
enter
push
test
loopne
push
test
mov
cmpsl
loopne
out
loopne
out
cmpsb
loopne
insb
mov
loopne
xchg
cmpsl
loopne
insb
cmpsb
loopne
cltd
mov
loopne
shrb
loopne
stos
mov
loopne
je
loopne
add
mov
test
loopne
mov
movsl
loopne
sbb
test
mov
test
mov
movsb
loopne
and
loopne
bt
mov
mov
loopne
push
cmpsl
loopne
in
loopne
mov
loopne
cmp
loopne
jbe
loopne
sbb
mov
cmpsb
loopne
lods
movsl
loopne
sub
loopne
pusha
cmpsl
loopne
cmpsb
mov
loopne
jo
loopne
xchg
mov
loopne
andl
loopne
xchg
cmpsl
loopne
xor
loopne
inc
mov
loopne
add
loopne
or
mov
loopne
push
cmpsl
loopne
adc
mov
loopne
je
loopne
add
cmpsb
loopne
out
loopne
push
mov
loopne
add
loopne
aaa
cmpsl
loopne
xor
loopne
pop
test
loopne
push
mov
loopne
sub
mov
loopne
pop
movsl
loopne
push
loopne
pusha
test
mov
mov
loopne
shrl
mov
mov
loopne
loopne
jo
loopne
pop
mov
loopne
cwtl
mov
loopne
out
loopne
addr16
xchg
mov
loopne
push
cmpsl
loopne
xchg
mov
loopne
add
loopne
loop
loopne
push
mov
loopne
mov
loopne
sbb
loopne
jecxz
loopne
or
loopne
bound
loopne
and
loopne
cwtl
mov
loopne
xchg
mov
loopne
sub
movsl
loopne
jno
loopne
into
test
mov
cmpsl
loopne
test
loopne
sub
loopne
loope
loopne
and
loopne
adc
loopne
lea
loopne
push
movsb
loopne
pusha
cmpsb
loopne
sub
loopne
dec
test
mov
cmpsl
loopne
push
cmpsb
loopne
imul
loopne
mov
loopne
test
movsb
loopne
pushf
cmpsl
loopne
and
cmpsb
loopne
andl
mov
cmpsb
loopne
jp
loopne
cmp
loopne
mov
loopne
cmp
loopne
push
movsl
loopne
and
loopne
scas
movsb
loopne
inc
mov
loopne
test
mov
loopne
dec
test
mov
cmpsl
loopne
fsubs
loopne
push
movsb
loopne
pusha
test
mov
movsb
loopne
mov
loopne
pop
movsl
loopne
push
cmpsl
loopne
in
loopne
lret
mov
movsl
loopne
dec
mov
loopne
push
test
loopne
mov
loopne
loopne
loopne
std
cmpsl
loopne
frstor
loopne
out
loopne
sub
loopne
or
loopne
imul
loopne
stc
cmpsb
loopne
insb
mov
loopne
pop
movsl
loopne
pop
movsl
loopne
and
loopne
xchg
movsb
loopne
in
loopne
and
mov
loopne
outsb
movsl
loopne
push
test
mov
mov
loopne
or
loopne
lret
mov
loopne
or
loopne
xor
loopne
sub
movsb
loopne
push
mov
loopne
or
loopne
jecxz
loopne
cmc
mov
loopne
mov
cmpsb
loopne
xchg
mov
loopne
shll
loopne
insl
cmpsl
loopne
test
loopne
and
loopne
cwtl
movsl
loopne
xor
mov
loopne
fisubl
loopne
jno
loopne
sbb
loopne
into
mov
loopne
pop
mov
loopne
xchg
mov
loopne
xchg
loopne
shll
loopne
shll
loopne
enter
push
test
mov
movsb
loopne
mov
loopne
mov
loopne
cmp
loopne
mov
loopne
and
loopne
lds
loopne
cmp
loopne
mull
mov
mov
loopne
jnp
loopne
adc
loopne
mov
loopne
jns
loopne
and
loopne
sub
loopne
xchg
cmpsb
loopne
aam
loopne
jg
loopne
fldenv
loopne
les
loopne
adc
loopne
hlt
mov
loopne
push
test
mov
mov
loopne
scas
cmpsb
loopne
push
movsb
loopne
sub
mov
test
mov
mov
loopne
push
mov
loopne
mov
movsb
loopne
fisubs
mov
cmpsb
loopne
pop
mov
loopne
push
test
loopne
or
loopne
aad
loopne
xchg
mov
loopne
test
loopne
sub
mov
test
loopne
mov
loopne
push
cmpsb
loopne
pop
movsl
loopne
shld
mov
movsb
loopne
shlb
loopne
cmpsl
loopne
jl
loopne
mulb
loopne
mov
loopne
hlt
movsb
loopne
subl
mov
movsb
loopne
fldenv
loopne
inc
movsl
loopne
inc
test
mov
mov
loopne
cmp
loopne
pop
test
mov
movsl
loopne
dec
test
loopne
add
loopne
or
loopne
cmpsl
loopne
test
loopne
shlb
loopne
insb
mov
loopne
or
loopne
arpl
loopne
int3
cmpsl
loopne
ljmp
mov
movsl
loopne
pop
movsl
loopne
pusha
mov
loopne
pop
mov
loopne
fisubl
loopne
in
cmpsl
loopne
cmp
loopne
mov
loopne
push
movsb
loopne
mov
loopne
push
test
loopne
je
loopne
fsubs
mov
mov
loopne
dec
test
loopne
cmpsw
loopne
scas
test
mov
test
mov
cmpsb
loopne
popf
movsl
loopne
cmp
cmpsl
loopne
pusha
mov
loopne
insl
test
mov
mov
loopne
cltd
mov
loopne
xchg
cmpsb
loopne
sub
loopne
mov
mov
loopne
ret
movsb
loopne
movsb
cmpsb
loopne
les
loopne
push
cmpsb
loopne
cli
test
mov
movsl
loopne
fisubs
loopne
mov
test
mov
movsl
loopne
sub
loopne
mov
loopne
mov
mov
movsb
loopne
data16
loopne
out
loopne
sbb
loopne
lahf
mov
loopne
adc
mov
movsb
loopne
cwtl
mov
loopne
sbb
cmpsl
loopne
movsb
loopne
jae
loopne
cmp
loopne
sub
mov
movsb
loopne
mov
loopne
dec
cmpsb
loopne
xchg
mov
loopne
sub
loopne
shll
loopne
loopne
in
loopne
mov
loopne
pop
mov
loopne
xchg
mov
loopne
sbb
loopne
xchg
mov
loopne
arpl
mov
cmpsb
loopne
and
loopne
imul
mov
cmpsl
loopne
or
loopne
xor
loopne
adc
loopne
jmp
test
mov
mov
loopne
add
test
loopne
sahf
mov
loopne
mov
mov
loopne
andl
loopne
mov
test
mov
movsb
loopne
scas
movsb
loopne
lret
test
mov
mov
loopne
movsl
mov
loopne
jnp
loopne
xor
mov
loopne
mov
loopne
add
mov
loopne
cmpsl
cmpsb
loopne
mov
movsl
loopne
sbb
loopne
xor
loopne
xchg
movsl
loopne
xchg
movsb
loopne
jmp
loopne
test
mov
mov
loopne
xor
loopne
pop
cmpsl
loopne
jmp
loopne
cmp
mov
cmpsl
loopne
pop
cmpsb
loopne
ja
loopne
arpl
loopne
mulb
loopne
jne
loopne
jmp
loopne
mov
loopne
scas
cmpsl
loopne
or
mov
movsb
loopne
out
loopne
mov
mov
loopne
dec
mov
loopne
ja
loopne
adc
mov
loopne
adc
loopne
lret
movsb
loopne
inc
movsl
loopne
push
cmpsb
loopne
pushf
movsb
loopne
jo
loopne
jne
loopne
cwtl
mov
loopne
shll
mov
loopne
push
cmpsl
loopne
adc
mov
mov
loopne
out
movsl
loopne
cmc
cmpsl
loopne
loopne
outsl
mov
loopne
push
test
mov
cmpsl
loopne
pop
mov
loopne
cmc
mov
loopne
out
loopne
andl
mov
mov
loopne
or
mov
movsb
loopne
jle
loopne
jns
loopne
mulb
loopne
lret
cmpsl
loopne
daa
test
mov
mov
loopne
jb
loopne
lods
cmpsl
loopne
cmpsb
movsb
loopne
icebp
mov
loopne
push
movsl
loopne
push
cmpsl
loopne
jns
loopne
mov
loopne
iret
mov
loopne
shrl
mov
mov
loopne
inc
cmpsb
loopne
movsb
loopne
repz
mov
movsb
loopne
mov
mov
test
mov
cmpsl
loopne
sbb
loopne
pusha
mov
loopne
jp
loopne
cld
cmpsl
loopne
stos
test
mov
cmpsl
loopne
cmpsb
loopne
and
loopne
andb
mov
cmpsb
loopne
in
loopne
mov
mov
loopne
adc
loopne
mov
loopne
int
loopne
pop
mov
loopne
andl
mov
mov
loopne
je
loopne
daa
mov
loopne
xchg
movsl
loopne
jbe
loopne
dec
mov
loopne
cmpsl
loopne
loopne
loopne
sub
loopne
or
loopne
arpl
loopne
jno
loopne
dec
movsl
loopne
sbb
loopne
shld
icebp
push
xchg
loope
cs
popa
add
cmc
lods
fs
lock
sbb
push
in
call
add
int
loop
fisttps
add
repnz
clc
or
add
lods
push
pop
cli
xchg
and
add
clc
jnp
aas
adc
add
xor
add
xchg
nop
aam
inc
add
cwtl
aas
add
add
out
fcoml
add
imul
add
cmp
mov
clc
inc
clc
cld
scas
scas
dec
cmp
add
push
dec
mov
add
lods
and
add
cmp
test
mov
pusha
add
mov
mov
push
clc
mov
add
mov
dec
pop
jno
add
loopne
sub
sbb
daa
clc
mov
adc
adc
add
mov
add
aaa
and
push
add
and
add
clc
mov
rcrb
xor
add
clc
ljmp
cs
movsl
clc
clc
sbb
ss
inc
clc
rorl
mov
cmpsb
clc
sbb
add
sbb
or
clc
icebp
pop
jbe
test
mull
ss
mov
clc
arpl
add
add
mov
mov
mov
clc
arpl
add
int
clc
fwait
aam
mov
pop
clc
mov
add
cld
fildl
ret
add
imul
add
in
pop
sbb
jmp
clc
movsb
clc
sahf
icebp
inc
add
and
add
mov
add
mov
fsubr
or
jne
clc
or
pop
inc
add
movsb
clc
mov
clc
dec
push
mov
or
clc
dec
rclb
fwait
jg
clc
and
add
fs
pop
imulb
jp
or
insb
aad
cltd
and
out
push
mov
push
sub
lea
push
call
sub
es
push
mov
and
test
setne
nop
nop
loop
pop
lea
or
sub
xchg
not
xchg
ss
pop
add
movzbl
shr
push
or
and
push
mov
add
add
push
mov
push
push
call
push
call
leave
ret
mov
sub
mov
pushl
pop
sub
add
ret
test
nop
nop
nop
nop
nop
mov
push
push
je
mov
adc
add
ret
pop
jmp
jmp
mov
lea
push
pushl
nop
nop
nop
nop
ret
jp
test
add
das
dec
mov
lock
clc
adc
add
and
add
mov
ljmp
cld
jmp
sub
fwait
add
adc
add
out
cli
push
add
fsubs
cmp
jl
sti
dec
mov
leave
scas
xlat
add
jge
cmp
add
ficomps
and
inc
clc
js
popa
add
pushf
ss
add
jbe
sar
fs
push
popa
add
dec
sbb
clc
ror
stos
dec
aam
add
cld
jmp
ja
cmpb
jge
sbb
clc
fistpl
dec
imul
clc
jge
clc
jl
clc
rolb
add
clc
lods
clc
repz
add
loope
inc
clc
movsl
clc
cmp
cmp
xor
popf
leave
jl
clc
fwait
cwtl
cld
femms
or
cmp
mov
cld
out
push
add
movsl
clc
ljmp
xor
add
mov
ss
and
jl
loopne
ss
ja
clc
push
sahf
mov
enter
mov
add
js
sub
bound
add
add
add
add
sbb
add
and
lea
add
outsl
movsb
clc
stc
leave
inc
add
shll
cmp
jbe
adc
add
add
or
sbb
add
xchg
fisttpll
clc
movsl
clc
sbb
add
adc
add
mov
mov
add
mov
clc
movsb
clc
nop
dec
mov
clc
push
mov
cld
jmp
aas
and
adc
add
add
mov
or
xabort
out
push
clc
sub
inc
clc
mov
push
repz
test
xchg
inc
add
dec
push
add
jae
add
or
dec
call
imul
inc
add
add
add
sbb
add
jnp
bound
add
test
clc
sub
cmp
add
pop
xlat
fidivrl
add
popa
add
add
leave
mov
add
in
fistpl
movsb
clc
add
iret
fistpl
mov
mov
clc
pop
mov
inc
clc
push
sub
add
push
or
cmp
dec
sub
clc
adc
add
nop
mov
test
scas
imul
fadds
lea
add
push
add
insb
jnp
clc
sarb
cmp
icebp
daa
clc
push
add
jmp
mov
mov
xbegin
fdivl
mov
add
xor
clc
outsl
fildll
add
or
jmp
pop
cmp
je
mov
add
js
sbb
lahf
test
lock
push
cld
jmp
push
aas
movsb
imul
xor
add
jmp
sub
cli
jmp
jg
push
cmp
pusha
add
mov
test
sbb
xchg
or
lcall
push
add
xchg
and
add
clc
rcrl
scas
loope
aam
in
xor
add
ret
clc
mov
clc
ret
xabort
test
push
add
mov
add
mov
mul
clc
push
add
call
fs
mov
clc
test
mov
cld
jmp
je
dec
adc
cmp
aaa
sarb
pop
lret
add
add
add
leave
jl
xor
add
iret
sub
mov
add
clc
and
add
jmp
cld
jmp
lods
mov
add
add
out
mov
fdivp
xchg
int
clc
mov
into
push
add
je
ds
sbb
add
add
jbe
test
jae
add
sub
sub
dec
es
push
add
mov
jl
das
xabort
clc
mov
add
pop
or
rolb
cltd
pop
lret
pop
lods
mov
pop
in
xchg
xchg
mov
xchg
es
je
xor
add
pop
cmp
push
ret
lods
push
mov
jg
ret
jp
clc
shlb
add
and
add
sub
lods
inc
add
idivb
bound
add
add
cli
sar
jge
xchg
es
adc
add
shll
sub
add
jg
or
add
sub
jb
add
add
push
clc
sahf
gs
mov
add
add
push
data16
in
jp
cld
arpl
add
clc
int
inc
add
sub
add
ffreep
clc
setb
dec
mov
mov
jp
mov
in
pop
test
xor
add
add
adc
clc
repz
clc
data16
insb
sub
add
xor
add
adc
add
dec
xlat
jg
sub
clc
dec
insb
repnz
rep
enter
divb
add
clc
loop
loopne
sar
clc
testl
and
add
call
cld
jmp
adc
clc
fscale
xchg
adc
add
cwtl
je
xchg
push
test
pop
ss
ret
sahf
cmp
add
xor
fcomp
lret
pop
scas
stos
xor
cli
daa
clc
jae
add
add
scas
mov
dec
inc
add
popa
scas
adcb
aas
cmp
xchg
ret
clc
lret
sbb
cmp
clc
testl
jecxz
xor
add
add
cmpsb
clc
lret
int3
scas
pop
clc
mov
clc
add
add
mov
add
sti
and
add
jmp
add
add
jb
add
das
xchg
pop
es
leave
lret
test
add
cmp
pop
arpl
add
inc
add
xchg
stc
lods
je
push
push
mov
add
inc
mov
add
clc
sub
stos
into
and
add
in
imul
repnz
pop
pop
or
mov
push
xchg
push
cmp
cwtl
bound
add
and
add
sar
clc
hlt
and
add
adc
add
jns
clc
add
add
add
clc
push
lods
or
shr
mov
clc
in
loope
push
adc
add
clc
and
lods
xchg
int
out
inc
clc
test
fidivrl
clc
insl
imul
add
dec
pop
pushf
outsl
push
add
sub
lods
or
jmp
iret
lcall
aad
add
inc
clc
fstpt
clc
cmp
bound
add
and
add
add
cmpsb
clc
or
clc
mov
mov
insl
pop
push
add
jo
add
clc
ret
cmp
clc
inc
add
add
add
sub
clc
imul
add
add
cs
stos
add
add
cmp
ss
cmp
test
mov
add
pop
vandnps
sbb
clc
fwait
xor
add
pop
int
dec
sub
pop
xchg
xorps
clc
psubusb
sti
sub
mov
lods
mov
add
push
inc
add
movsl
clc
daa
clc
insl
fisubs
clc
gs
js
mov
clc
fwait
mov
mov
clc
mov
mov
out
xabort
aaa
adc
sub
popf
cmpsb
clc
movsl
clc
stc
mov
clc
mov
clc
in
clc
imul
add
push
add
jg
clc
sub
clc
ud0
jmp
insb
add
fst
mov
inc
add
mov
sahf
daa
clc
data16
pop
outsb
jmp
clc
test
clc
cld
repz
repz
add
idivb
loopne
mov
fisttpl
add
add
jbe
add
add
add
cld
jmp
test
clc
in
lods
stos
pop
lock
in
inc
add
xchg
cmp
add
lahf
movsl
clc
aas
imulb
jle
clc
add
add
fwait
and
xchg
push
push
xchg
mov
mov
out
xchg
push
cltd
mov
or
jmp
sub
sbb
test
clc
or
clc
dec
ljmp
add
add
add
shlb
add
cmp
repnz
mov
and
add
add
div
jb
add
std
mov
mov
clc
adc
add
lret
cmpsl
clc
cld
bound
add
push
outsb
inc
clc
jmp
jmp
outsl
inc
ja
ja
add
loop
repz
data16
cmp
xabort
cmp
clc
lahf
mov
stos
enter
cmp
add
sub
push
add
cld
jmp
lcall
inc
add
lcall
clc
fildl
pop
push
add
inc
add
out
aas
inc
clc
shrb
push
xchg
cmp
add
add
xabort
xchg
mov
inc
add
mov
rep
stc
adc
add
or
add
and
lret
push
add
pop
xor
add
clc
adc
add
clc
sahf
sub
add
sar
clc
pop
mov
mov
jmp
jne
add
add
add
adc
xchg
hlt
in
mov
daa
clc
jmp
test
add
cld
jmp
jge
clc
je
int3
xchg
mov
jl
in
dec
jmp
clc
ret
add
mov
ds
xor
clc
ja
add
fwait
hlt
pop
push
add
aad
clc
xchg
data16
sar
add
rcr
cmc
push
faddl
add
clc
daa
clc
dec
xchg
xor
test
fistps
cmp
clc
xor
add
pushl
ss
ret
mov
cld
jmp
sub
es
sbb
or
int3
mov
xbegin
or
inc
clc
out
and
adc
add
repnz
movsl
add
sub
clc
jns
pop
mov
add
add
add
adc
add
dec
loopne
xor
add
clc
push
data16
push
or
pop
ret
add
pop
mov
mov
lret
push
add
pop
clc
pop
add
add
add
dec
enter
cmp
dec
mov
loopne
icebp
shrb
outsb
and
enter
add
sbb
add
mov
add
cld
jmp
clc
inc
add
mov
clc
and
add
clc
pop
dec
cmpsl
clc
inc
add
gs
mov
arpl
add
mov
int
add
sub
int
clc
lods
roll
clc
xor
add
call
add
mov
add
inc
add
push
add
dec
mov
clc
lock
add
lods
inc
clc
iret
imul
inc
add
shlb
add
clc
lods
xchg
clc
je
add
inc
clc
xor
add
shlb
clc
inc
add
push
ja
lods
ja
fiadds
add
aam
clc
xlat
imul
mov
clc
pop
lret
sbb
incb
add
add
push
imul
shlb
add
clc
rorb
adc
add
mov
sbb
clc
jmp
cld
jmp
xor
dec
sbb
clc
cmp
push
add
inc
add
es
data16
mov
pop
pop
scas
imul
popa
add
test
push
cld
mov
add
in
jb
add
pop
scas
pop
loopne,pn
cmp
dec
ret
decb
clc
pop
xor
add
mov
jno
add
fwait
mov
add
sub
add
out
fdivr
xchg
loopne
jno
add
addr16
push
sbb
add
clc
xchg
push
or
inc
add
movsb
clc
cmp
clc
rcrb
add
pop
pop
lahf
shlb
clc
jno
add
das
fbld
decb
and
add
add
movsl
clc
adc
add
jp
inc
clc
scas
fnsave
add
clc
mov
or
cmp
in
dec
push
clc
aad
in
sar
add
jbe
push
add
sub
add
bound
add
add
add
adc
add
test
je
dec
divl
cmc
pop
imul
aad
add
or
es
fwait
mov
xchg
hlt
popf
jl
fsin
dec
sbb
mov
stos
enter
fisubrs
clc
ret
sahf
test
add
add
add
inc
add
out
out
shrl
adc
add
push
add
xchg
xchg
mov
pop
imul
adc
popf
cmp
clc
dec
push
lret
ja
add
mov
clc
or
cmpsl
clc
hlt
data16
sahf
dec
and
ds
rcll
add
call
jne
ror
fisubl
jge
lcall
or
mov
insl
add
popa
aaa
cmpsb
imul
jmp
push
cmp
es
mov
xchg
mov
or
cld
jmp
and
push
lods
push
lea
test
adc
add
clc
jmp
clc
je
clc
pop
ja
add
clc
xchg
in
inc
clc
and
add
pop
add
add
arpl
add
in
in
cmp
int3
out
int
repnz
add
add
sbb
clc
sti
repnz
add
cld
jmp
sbb
add
add
mov
sbb
push
aas
jnp
cs
push
xor
cld
jmp
cmp
out
scas
bound
add
clc
fistpl
and
add
sahf
xor
std
pop
mov
push
sbb
add
xchg
jge
inc
cmp
sbb
push
add
cmp
clc
sbb
in
cld
jmp
outsb
gs
adc
add
cld
jmp
or
clc
loope
into
jae
add
shr
cmp
loope
pusha
add
mov
lods
adc
add
inc
clc
jge
mov
pushf
test
mov
pop
nop
xchg
mov
pop
jns
push
add
outsb
xabort
leave
jl
adc
add
add
jb
add
add
int3
dec
pop
shll
loop
mov
cmp
clc
xlat
cmpsb
clc
push
lea
cld
jmp
or
dec
mov
lret
es
fisubrs
mov
jmp
inc
jmp
add
add
sbb
add
mov
jno
add
jmp
setbe
add
pop
xchg
inc
clc
jg
add
add
xabort
clc
movsb
clc
add
add
das
inc
add
pop
dec
pop
jmp
clc
adc
xchg
jb
add
data16
cmp
clc
sbb
sti
fdivs
add
and
add
ret
clc
dec
out
outsl
out
sbb
in
aaa
sar
in
hlt
push
pop
or
jb
add
jmp
cmp
push
cld
jmp
test
pop
loope
pop
cmc
movsl
clc
add
add
sub
clc
pop
test
clc
je
loopne
pop
dec
out
sub
clc
sub
or
jle
clc
insb
pop
jb
add
iret
or
or
inc
add
push
dec
dec
imul
jmp
cmc
lea
bound
add
jno
add
inc
clc
in
pop
movsl
clc
push
adc
add
pusha
add
test
call
push
cld
jmp
adc
iret
sbb
push
icebp
xchg
jns
inc
clc
inc
add
or
inc
clc
fwait
xor
add
mov
clc
xchg
sub
sub
insl
fwait
jns
mov
add
add
add
adc
add
clc
negb
jecxz
and
imul
vmovlps
add
add
jne
add
dec
mov
xchg
mov
pop
hlt
data16
bound
add
xchg
lods
push
add
loop
sub
add
dec
or
add
pop
mov
clc
fs
clc
cmp
mov
inc
add
fcmovnu
je
out
dec
out
ja
jo
add
jmp
add
xor
clc
sahf
or
mov
cld
jmp
pop
dec
push
aaa
jg
push
and
add
xchg
sub
out
dec
xor
add
out
stos
mov
clc
sub
dec
fmuls
aad
ret
clc
dec
add
add
test
add
add
clc
lcall
clc
mov
cmp
clc
mov
cmp
clc
in
mov
xchg
and
inc
clc
mov
hlt
pushf
insb
xor
add
jge
pop
cld
jmp
inc
cmpsb
jno
or
int
add
mov
clc
add
pop
in
mov
push
in
lea
clc
lock
clc
adc
inc
clc
jne
xor
add
add
into
and
cmp
std
out
clc
lods
xchg
je
clc
mov
xchg
mov
fwait
cmp
sar
add
add
mov
out
add
sub
jno
clc
cmp
add
dec
inc
clc
mov
xor
add
fsubs
in
xor
add
pop
popf
out
data16
dec
inc
add
push
rep
cld
jmp
dec
sub
mov
jge
and
add
push
ss
ret
cmp
je
cld
jmp
mov
jno
add
xor
clc
inc
add
leave
cmp
add
pop
jp
nop
sub
add
push
cmp
sbb
add
cmp
leave
jl
clc
sub
add
pop
and
add
fidivrl
clc
sbb
clc
mov
sbb
jne
cld
jmp
pop
mov
ds
sahf
mov
outsl
cmp
insb
sub
pop
shrl
and
inc
clc
xchg
inc
add
push
out
popf
xabort
pop
jmp
ljmp
add
mov
add
fs
push
add
adc
add
jmp
sub
add
add
dec
cmp
jmp
sub
add
arpl
add
loope
sub
dec
sub
add
fs
or
mov
mov
add
mov
add
add
jno
mov
aaa
xor
test
clc
sahf
or
or
scas
jo
add
clc
call
add
pushf
in
in
ffreep
clc
pop
mov
pusha
cld
jmp
das
ja
push
sub
add
sub
sub
fadds
xchg
inc
add
or
push
add
and
add
dec
add
add
imul
ss
ret
cmpsb
lea
cltd
pop
dec
mov
cmp
mov
pushf
inc
clc
or
test
jo
add
add
gs
clc
sbb
clc
xchg
enter
xchg
cmp
sbb
add
jmp
lret
fdivrl
xor
add
test
std
push
xor
add
clc
and
outsl
mov
dec
xor
clc
xbegin
int
clc
mov
clc
mov
xchg
mov
dec
adc
add
add
inc
clc
sub
js
gs
push
fs
jmp
xchg
inc
clc
jno
add
add
mov
clc
mov
insb
add
push
nop
sub
in
leave
lods
mov
clc
fs
mov
push
std
popf
sar
mov
lods
xchg
or
dec
ja
fbld
and
add
iret
mov
clc
cmp
add
and
jmp
cmp
sbb
iret
or
inc
add
sub
shl
or
ror
xor
add
lea
fimuls
push
clc
in
sar
xlat
fstps
push
clc
sbb
fst
outsl
dec
xor
add
xbegin
mov
add
es
pop
sar
dec
sbb
mov
add
push
add
nop
push
jmp
sub
pop
outsl
lock
add
pushf
int3
mov
fimuls
sub
aas
sub
outsl
mov
and
add
clc
lret
mov
xchg
jecxz
test
mov
inc
clc
mov
clc
pop
cmp
mov
js
arpl
add
add
jecxz
clc
repnz
clc
data16
xchg
test
clc
xor
dec
cli
jp
jno
add
clc
mov
jp
mov
popf
mov
xchg
jne
xor
cld
jmp
xor
lea
mov
jae
add
clc
clc
jbe
inc
add
outsl
sbb
jmp
imul
sbb
add
cwtl
mov
in
mov
mov
or
clc
sbb
add
lret
xor
add
push
cld
jmp
add
dec
repnz
jg
add
loope
nop
xchg
jp
repz
clc
xchg
xchg
sar
clc
adc
add
clc
icebp
test
dec
out
lret
lea
inc
clc
pop
pop
fistpll
test
mov
icebp
cmp
cs
cld
jmp
pop
inc
pop
or
add
xor
jle
loope
jecxz
pop
ret
clc
dec
xor
add
push
clc
lahf
clc
push
add
or
clc
fstpl
shl
clc
cmp
xbegin
aam
add
ss
add
mov
clc
in
insl
sahf
bound
add
clc
mov
add
clc
inc
clc
xchg
xlat
dec
add
mov
pop
xor
add
sarl
enter
jmp
outsl
pop
es
dec
lcall
sub
adc
add
clc
sub
xchg
mov
xor
add
and
add
dec
sbb
clc
and
sbb
cld
jmp
or
cmp
cltd
call
lret
sbb
ss
ret
inc
ja
push
and
push
clc
stos
inc
clc
sar
pop
mov
fistpll
mov
xchg
leave
std
stc
sti
sahf
cld
popf
cmpsb
clc
inc
add
je
xlat
cli
js
test
cld
jmp
data16
sub
test
pop
xchg
clc
aam
clc
lock
loop
fistpll
xor
add
add
clc
clc
jg
and
add
clc
push
mov
clc
fmull
clc
cmp
popf
out
in
and
icebp
inc
clc
in
dec
mov
add
pusha
add
movsb
clc
movsb
clc
dec
pop
pop
mov
adc
push
add
scas
in
repnz
mov
add
add
add
mov
inc
add
movsl
clc
into
sub
test
outsb
ret
clc
jbe
mov
cwtl
xchg
lock
add
sbb
clc
repnz
add
clc
or
movsb
clc
cmp
pop
negl
repnz
clc
stos
sub
adc
add
jno
add
xchg
push
add
push
add
pop
or
clc
xabort
add
aam
xor
hlt
int
lods
ret
movsb
clc
mov
add
adc
add
jecxz
sti
lods
mov
cmp
xor
add
jecxz
pop
and
add
mov
clc
lcall
daa
clc
incl
jmp
movsb
cwtl
and
cmpsb
int
and
add
add
movsb
clc
jae
add
pop
mov
and
add
cmp
sar
nop
dec
aam
clc
pop
push
inc
add
push
add
scas
push
decb
ret
clc
push
add
data16
xchg
xchg
adc
add
loop
stc
and
add
scas
stc
adc
add
clc
mov
add
cwtl
out
or
clc
mov
add
push
add
fs
jge
aaa
sbb
cmpsl
clc
dec
inc
clc
dec
sub
adc
add
adc
add
add
add
jmp
push
outsl
cli
inc
clc
in
cmp
out
cmp
int
add
cwtl
cld
push
nop
xbegin
mov
and
inc
add
mov
push
ret
dec
sub
add
ja
clc
inc
add
mov
xor
add
sar
pop
inc
add
mov
jle
mov
repz
adc
mov
data16
cmp
mov
add
mov
clc
xor
add
fistpl
or
shlb
add
mov
add
add
inc
clc
loop
pushf
or
test
clc
pop
adc
add
add
out
cltd
neg
sbb
sbb
add
mov
mov
clc
out
cmpsb
clc
fsubs
xor
add
ljmp
clc
sbb
loop
cltd
lret
lret
xchg
jmp
xor
add
fiadds
add
add
xchg
adc
add
gs
sbb
pop
cwtl
add
or
push
fsts
mov
dec
push
cld
jmp
push
sub
ss
jge
test
and
loope
aas
shrl
ficoms
add
clc
popa
add
fiadds
add
std
lahf
mov
clc
xchg
pusha
add
imul
clc
xchg
push
cld
sar
clc
in
ds
or
clc
mov
add
leave
jo
add
insb
and
outsl
mov
add
div
fchs
clc
bound
add
cli
mov
mov
cmp
cmp
jge
jne
cld
jmp
add
pop
ss
ret
outsl
or
aad
add
mov
sub
add
push
add
jmp
hlt
in
std
movsb
clc
in
jecxz
fucomp
cltd
and
add
add
gs
aam
clc
repz
negl
fmul
lcall
inc
add
pop
dec
jecxz
sub
clc
add
add
clc
popa
add
imul
jns
idiv
jge
clc
or
clc
je
sbb
clc
xchg
pop
mov
imul
inc
clc
xchg
filds
add
push
es
cmp
cmc
incl
jmp
sub
xchg
enter
push
add
ret
clc
inc
clc
mov
clc
jp
jmp
cld
jmp
xor
data16
dec
bound
add
clc
push
add
popa
add
ror
mov
clc
cld
adc
add
sub
xabort
inc
add
push
enter
dec
daa
clc
gs
cmp
push
add
jmp
clc
xbegin
adc
add
add
clc
sahf
sbb
popa
add
and
add
xchg
pop
pop
and
xor
add
sub
add
out
jecxz
cmp
arpl
add
clc
mov
rsm
stc
fs
stc
cmpsb
clc
dec
insl
mov
cmp
clc
push
add
movsl
clc
push
dec
inc
add
lea
sahf
mov
inc
clc
mov
notl
clc
pop
mov
clc
mov
test
call
dec
xor
add
lret
dec
jns
clc
mov
int3
xchg
sbb
clc
aam
adc
add
clc
mov
jp
push
ds
add
jo
add
add
pop
clc
push
aam
clc
jl
add
sbb
clc
pop
js
pushf
lret
js
jae
add
add
clc
mov
clc
aaa
arpl
add
stos
or
loope
stc
ds
mov
shrb
in
idivb
clc
mov
testb
sub
add
fsubs
mov
jle
pop
test
test
mov
mov
xchg
jg
int
jmp
cld
jmp
dec
push
add
sahf
mov
add
addr16
es
xchg
fisubrs
add
add
add
lcall
xchg
push
add
sbb
clc
mov
roll
ret
and
pop
insb
xchg
loopne
scas
sub
dec
mov
frstor
add
jge
clc
out
es
xchg
push
add
cld
jmp
push
data16
add
fs
sub
and
add
bound
add
mov
add
stos
dec
jp
gs
mov
add
cld
jmp
popf
movsl
clc
adc
or
push
mov
add
inc
add
push
jmp
test
inc
add
bound
add
cmp
dec
in
dec
movsb
clc
pusha
add
adc
outsb
mov
clc
mov
add
in
inc
add
inc
clc
jne
ja
in
mov
clc
xor
add
and
jmp
adc
sahf
fwait
dec
add
mov
push
dec
outsb
xchg
leave
out
adc
clc
int3
xabort
xor
add
loopne
cmp
add
sbb
sub
insl
pushf
sbb
or
cmp
jmp
add
add
add
cmp
mov
add
adc
add
shl
clc
adc
add
add
add
pop
call
in
iret
add
add
je
cld
jmp
out
out
cs
push
cld
jmp
pop
jp
sub
cmp
cld
fdivrs
clc
iret
mov
mov
std
addr16
and
sbb
lea
add
push
adc
add
add
jecxz
lods
jmp
add
add
ja
add
leave
jge
dec
out
fs
or
add
cmp
stc
sub
push
mov
pusha
add
outsl
scas
pusha
add
hlt
or
loope
xchg
lret
and
add
mov
xbegin
add
add
xchg
fldenv
add
and
add
test
bound
add
gs
fmull
jle
insb
jl
lods
dec
hlt
adc
dec
nop
cmp
add
jne
clc
repz
add
clc
dec
das
mov
xchg
mov
mov
cld
jmp
adc
inc
clc
cmpsb
clc
cmp
dec
inc
add
xor
add
fucom
clc
xchg
mov
mov
sub
clc
sahf
cmp
mov
repnz
clc
push
dec
sbb
add
mov
insb
cmp
add
clc
shlb
add
dec
sub
outsl
gs
mov
cld
jmp
push
sub
or
aad
push
add
jle
sub
jns
es
repnz
add
cld
lret
add
add
add
xor
outsl
dec
test
or
clc
iret
out
mov
clc
jp
inc
clc
pop
flds
clc
push
push
add
pop
or
push
fs
popf
sub
add
cs
mov
cld
jmp
insb
or
add
jmp
and
js
pop
clc
test
xbegin
add
add
in
pop
stos
push
add
test
mull
clc
out
push
ret
ss
ret
push
or
enter
pop
and
nop
outsl
adc
add
scas
mov
mov
push
jo
add
clc
fmulp
das
daa
clc
mov
shll
sbb
clc
and
out
inc
clc
sar
jmp
add
pusha
add
sar
clc
xchg
pop
clc
add
add
in
incl
xchg
addb
sub
pop
and
int3
fwait
add
pop
cmp
repz
jbe
div
mov
mov
inc
clc
xor
add
out
jmp
clc
jle
add
cltd
push
in
add
clc
sar
aad
mov
or
pop
mov
clc
cs
clc
lahf
pop
sti
or
add
imul
into
test
xchg
sar
data16
dec
adc
add
clc
dec
adc
add
add
test
xchg
mov
pop
xbegin
rcll
add
mov
fiadds
xbegin
sub
lret
nop
push
add
in
cmp
stc
test
cmpsl
clc
fstps
jl
clc
out
inc
clc
ja
clc
add
add
clc
mov
testb
sar
and
add
dec
pop
clc
jl
lahf
dec
lret
dec
or
addr16
and
add
clc
pop
ret
clc
sbb
add
add
clc
addr16
and
add
cmp
clc
add
add
clc
gs
loopne
add
add
clc
gs
out
jne
mov
xor
add
out
je
add
push
add
mov
fcoml
add
clc
repnz
clc
jl
dec
js
clc
in
xor
sub
clc
add
clc
stos
rorb
in
and
mov
ss
sbb
lahf
dec
cmp
jb
add
shll
add
stc
es
sub
push
ret
sub
or
adc
add
pop
popf
add
add
xchg
lcall
ja
mov
popa
add
mov
add
jnp
add
push
jp
xor
add
clc
mov
mov
add
inc
add
sub
and
add
cmpsb
clc
push
push
add
bound
add
jg,pn
add
pop
out
and
add
mov
fsubr
in
sbb
sbb
add
outsl
sub
add
adc
add
jg
cld
jmp
sbb
add
lcall
dec
fmull
outsl
pop
xlat
hlt
roll
lret
out
lods
test
cld
xchg
fldt
cmp
sti
jge
clc
pop
push
repnz
pop
cld
jmp
adc
add
xchg
mov
clc
cmp
add
sti
lods
push
dec
cld
jmp
xor
ja
add
clc
and
add
add
add
lods
adc
add
scas
ja
ret
clc
cmp
and
inc
add
adc
add
add
or
push
cmp
lods
lods
mov
jo
add
push
add
popa
add
inc
add
lret
out
enter
push
mov
pop
cld
jmp
sub
dec
pop
mov
add
into
ljmp
clc
mov
add
into
push
je
cld
jmp
and
add
add
clc
jmp
clc
mov
add
clc
cmp
mov
xchg
bound
add
repnz
xchg
aaa
xor
add
inc
clc
pop
fcmovnbe
ss
clc
pusha
add
jg
or
fidivs
push
cld
jmp
inc
cmp
pop
sub
xabort
add
sub
dec
or
clc
fcmovbe
outsl
ret
clc
and
add
dec
mov
pop
xchg
in
mov
dec
push
sub
ja
into
jge
inc
clc
cmp
inc
clc
sub
add
loop
cltd
cld
pop
mov
jb
add
mov
das
cmpsl
clc
out
test
xbegin
add
jmp
push
add
cs
jbe
test
int3
iret
loop
mov
bound
add
jge
lea
inc
add
add
add
sub
pop
roll
add
cli
ss
sti
push
dec
cmp
and
jmp
ja
nop
in
cmpsb
clc
mov
cmpsl
clc
mov
out
add
add
pop
pushf
push
jnp
add
push
jno
add
add
pushf
push
sbb
inc
add
lret
mov
xor
cld
jmp
dec
push
data16
xchg
xor
xor
cld
jmp
sbb
fs
clc
jecxz
push
sub
add
add
fisubrs
lea
cld
jmp
jp
mov
add
sbb
jmp
pop
cmpsb
sub
clc
mov
clc
aaa
pusha
add
in
sar
clc
push
add
mov
clc
mov
push
add
jno
add
sbb
jl
clc
lods
sbb
add
add
cmp
in
fdiv
lahf
pushf
or
clc
push
mov
cld
jmp
or
or
jae
add
add
mov
add
dec
clc
lock
outsl
mov
sub
add
imul
add
fwait
dec
push
add
push
shrl
int3
jmp
pop
negb
jmp
add
clc
fldl
mov
mov
mov
jg
sub
aam
clc
nop
adc
add
add
inc
add
insb
sub
loope
test
adc
inc
clc
cmp
test
fwait
mov
add
add
leave
xchg
aas
sbb
clc
incl
push
out
ljmp
jmp
add
clc
jb
add
clc
add
add
add
out
aad
insb
outsl
and
add
add
nop
xchg
mov
insb
push
add
cld
jmp
sub
int
xor
add
and
add
add
cld
jmp
add
jmp
sahf
cmpsb
sbb
inc
arpl
add
test
jnp
add
and
add
ret
clc
xchg
jno
add
clc
shr
mov
cmp
adc
add
outsl
js
clc
push
pop
or
add
loope
loop
sbb
adc
add
clc
push
add
mov
xchg
clc
clc
loop
inc
clc
pop
sti
loopne
pop
pop
clc
lret
mov
pop
adc
stos
cmp
clc
sub
clc
divl
add
pop
shl
clc
xor
add
stos
out
mov
jge
fisubrs
clc
mov
lods
ja
dec
xchg
sbb
jmp
icebp
ljmp
mov
add
popf
mov
mov
clc
cmpsl
clc
push
add
xor
add
mov
fldcw
clc
loope
enter
shr
es
call
push
mov
cld
jmp
cmpsb
xchg
cmp
clc
push
mov
cld
jmp
ja
insb
in
fwait
sub
js
es
xabort
or
fiaddl
add
add
add
clc
mov
pop
movsb
clc
out
add
add
fcoms
add
pop
pushf
lods
test
bound
add
lock
nop
jb
add
clc
xor
add
add
iret
mov
mov
clc
pop
clc
inc
add
mov
xchg
push
mov
add
mov
clc
mov
add
cmp
dec
je
stc
xabort
inc
clc
jge
add
add
add
mov
clc
pop
dec
loopne
jno
add
cltd
xor
add
add
sbb
pop
clc
mov
sar
movsl
clc
lcall
xbegin
shll
gs
cmp
or
sbb
nop
cmp
clc
movsb
clc
gs
fidivl
add
jge
mov
rol
clc
ficompl
add
or
add
btc
add
add
je
add
push
add
shrb
push
add
ret
clc
pop
push
rcrb
stos
jno
add
mov
pop
mov
clc
fdivs
cmp
cmp
sbb
test
stc
cld
jmp
xor
xchg
fdivrl
add
inc
add
mov
push
clc
sub
idivb
and
add
and
popf
inc
clc
sub
mov
xor
add
add
cmp
pop
xor
add
addr16
and
out
sbb
cmp
xor
add
sub
clc
jmp
lret
stos
cs
add
sub
add
outsb
cmp
mov
lret
clc
sbb
clc
jecxz
fcoms
jns
or
xor
add
clc
clc
jle
clc
lret
pop
iret
inc
clc
inc
clc
jne
rorb
fs
outsb
jne
and
add
pop
into
std
push
clc
or
add
add
add
add
pushf
inc
clc
repnz
sti
mov
and
add
clc
pop
inc
add
fidivl
clc
cmp
fidivs
sbb
popa
add
cltd
cmpsb
clc
pop
fidivs
dec
jnp
clc
mov
add
mov
test
jnp
clc
in
sbb
sbb
mov
stos
jmp
es
push
clc
repnz
jecxz
mov
or
push
add
lcall
and
add
pop
xchg
stos
repnz
add
gs
lods
cld
test
stc
loop
or
add
cli
arpl
add
clc
push
add
cld
loope
pop
xchg
std
fiaddl
push
add
push
adc
add
popf
sub
mov
add
add
jmp
nop
imul
add
jnp
add
push
jmp
lock
add
pop
push
cmp
xchg
test
sub
cmp
ficomps
xchg
gs
scas
mov
dec
adc
cmpsb
clc
rorl
push
lods
in
sar
sbb
add
or
es
je
je
rorb
add
or
clc
xlat
insb
stos
cmp
clc
fwait
xchg
push
xor
clc
sbb
scas
cwtl
pop
pop
clc
sar
clc
cld
out
cmp
inc
add
mov
out
xchg
loop
mov
push
nop
xchg
push
add
enter
xchg
jb
add
clc
cmp
add
add
cmc
dec
es
out
xabort
clc
je
cltd
test
arpl
add
clc
cmp
add
jmp
mov
clc
adc
test
push
add
add
clc
mov
lods
rolb
add
fistps
in
cli
xchg
mov
add
mov
negl
pushf
cld
ja
clc
fisttpl
add
cld
jmp
sub
clc
testb
clc
ss
sbb
aam
movsl
clc
dec
es
fidivrs
xor
add
imul
dec
pop
in
outsb
cmp
add
mov
clc
imul
or
adc
add
add
xchg
scas
xlat
test
loopne
cld
mov
dec
or
inc
clc
sub
adc
clc
add
clc
fmuls
xchg
mov
add
lret
sti
js
fisttpl
adc
cmc
repz
icebp
xchg
push
sub
clc
dec
push
mov
lea
cld
jmp
subb
sub
cld
jmp
mov
dec
rorl
jge
clc
inc
clc
xchg
mov
jg
pop
clc
lret
cmp
fadds
pop
dec
mov
out
lcall
movsb
xor
pop
xchg
lret
aas
sub
pop
gs
cltd
dec
test
clc
xchg
clc
stos
vaddps
add
scas
sar
add
insl
movsb
clc
aam
add
lock
and
clc
ficomps
aas
sbb
insl
mov
mov
xor
addr16
lcall
cmp
add
add
in
inc
add
clc
aam
adc
add
mov
sub
add
cmp
cld
jmp
sbb
insb
or
clc
lock
addr16
mov
cmpsl
clc
pusha
add
stc
jne
mov
ret
clc
je
clc
push
add
mov
mov
lods
cwtl
nop
sti
jae
add
or
out
lods
fldl
mov
clc
mov
clc
movsb
clc
scas
fists
add
frstor
add
adc
add
dec
imul
decl
bound
add
jnp
cld
jmp
jg
outsb
sti
repnz
sub
clc
add
add
movsl
clc
jnp
cltd
clc
insl
or
pop
pop
sbb
sar
add
sub
xor
add
push
add
loopne
sub
jp
dec
aaa
sar
clc
shlb
xor
ljmp
cmp
clc
pusha
add
push
add
std
jo
add
clc
bswap
pop
shll
cmc
ds
popa
add
mov
add
cld
jmp
xor
add
lock
inc
add
sub
repnz
clc
iret
cmp
clc
sbb
in
mov
sti
jle
nop
cmpsl
add
sar
clc
mov
add
out
sbb
outsb
push
sbb
cli
pop
xbegin
add
dec
loop
add
cmp
add
cld
pusha
add
bound
add
jne
clc
mov
insb
leave
mov
mov
out
out
int
out
in
cmp
jne
cld
jmp
xchg
xchg
jno
add
add
dec
scas
pushf
es
push
shlb
push
jp
clc
std
aam
add
add
add
cld
imul
pop
xchg
dec
add
add
clc
or
clc
pop
sbb
add
das
push
test
addr16
push
add
jg
add
ret
std
int3
sub
add
lcall
or
add
mov
sbb
and
cmp
clc
cmp
add
push
mov
clc
jg
lcall
clc
cmp
adc
add
push
xor
cld
jmp
sub
add
outsb
jns
clc
cmc
push
push
add
add
mov
add
add
xchg
sarl
inc
clc
fsubrs
add
inc
add
dec
cmp
imul
clc
std
mov
pushf
push
les
cld
jmp
and
out
pushf
mov
xchg
push
mov
cld
jmp
sub
adc
add
cmpsl
clc
in
test
dec
or
clc
sub
sar
add
mov
adc
add
sbb
add
outsl
pop
push
push
bound
add
mov
cmc
xor
add
lods
push
enter
lods
pusha
add
jp
or
add
add
rol
clc
mov
insb
sub
push
test
sub
dec
test
pop
adc
add
jo
add
dec
or
and
add
adc
add
insb
dec
fucomi
ret
add
add
add
mov
add
out
outsb
mov
jmp
ja
lea
aaa
mov
clc
ja
add
lea
int3
inc
clc
clc
push
clc
int
mov
data16
icebp
sbb
jecxz
and
add
add
cmp
or
push
add
add
add
clc
pop
pop
das
add
pop
mov
dec
mov
add
mov
push
clc
pusha
add
rdseed
psubd
sub
sahf
pop
clc
add
imul
push
daa
clc
test
jle
std
sub
cmp
add
and
add
add
repz
push
add
and
jle
add
jp
mov
mov
sahf
push
inc
add
ret
and
outsl
sub
cmp
clc
jg
shl
clc
idivb
add
shll
add
add
shlb
push
sar
inc
add
sar
xchg
dec
xor
add
add
rcll
xchg
adc
add
pop
push
repnz
add
leave
mov
stc
inc
clc
out
pop
enter
shrb
clc
xchg
xor
clc
daa
clc
mov
add
mov
decl
cld
jmp
push
inc
cltd
xor
add
inc
clc
xor
add
xor
add
test
fisubrs
add
cmp
sbb
lods
dec
aam
dec
add
xabort
cmp
push
test
clc
sbb
add
xor
add
ret
clc
cmpsl
clc
pop
movsb
clc
int3
mov
add
add
clc
dec
movsb
clc
in
cltd
nop
sbb
mov
popf
cmp
out
pop
xor
add
repz
add
push
add
ret
inc
add
push
sbb
dec
mov
xor
add
jb
add
clc
test
cmpsl
clc
lods
into
out
fwait
cmc
jge
push
loop
sub
xchg
stos
mov
rclb
add
movsb
clc
jae
add
clc
test
mov
pop
sbb
mov
clc
cwtl
sar
ljmp
dec
jl
xchg
addr16
or
clc
js
clc
mov
add
and
add
cmp
add
out
or
fcmovnu
mov
lods
adc
add
add
pop
clc
mov
rorl
pop
leave
jp
cmp
es
dec
aad
pop
sar
clc
xor
clc
lods
and
add
jns
add
push
add
cld
jb
add
clc
xor
add
add
mov
sbb
pop
sbb
push
cld
sub
inc
cld
jmp
or
es
mov
pop
adc
cmc
rolb
xor
add
cwtl
cmpsl
clc
add
push
add
cmc
sub
adc
clc
sub
icebp
inc
clc
cltd
in
jnp
clc
imul
pop
mov
ljmp
cwtl
mov
sbb
dec
sar
popl
xor
add
shrl
clc
stos
cld
jmp
insb
sahf
cmp
test
pop
cmpsl
clc
pop
das
aaa
sbb
push
sub
jmp
and
subb
clc
jnp
add
call
clc
call
push
ret
dec
sbb
aaa
sar
jmp
cld
jmp
cmp
mov
clc
or
cmp
clc
sahf
out
repz
xchg
sub
xor
add
fidivrl
xchg
fdivrl
cmc
mov
sbb
clc
ljmp
or
cld
jmp
sub
mov
add
mov
jbe
ljmp
mov
sbb
clc
sub
jmp
int
mov
clc
mov
sti
fwait
cmpsb
clc
dec
fxch
push
add
daa
clc
fsts
push
add
xchg
mov
push
sar
fisubrl
ret
add
and
add
cmc
jge
cmpsb
clc
xchg
pop
ljmp
add
add
outsl
fbld
clc
sahf
sahf
imul
xchg
push
xor
cld
jmp
sub
out
divl
cli
push
add
jo
add
add
jmp
mov
add
add
into
test
aaa
jno
add
movsl
clc
add
add
xchg
clc
add
mov
cmp
mov
clc
das
cmpsb
clc
or
test
fldl
xor
negl
mov
sbb
mov
jae
add
icebp
ja
js
sub
out
xchg
jb
add
jo
add
clc
cmpsb
clc
leave
iret
sarb
mov
clc
clc
cmp
mov
add
xchg
mov
mov
clc
inc
add
addr16
cmp
add
sub
add
arpl
add
xchg
aam
mov
mov
and
add
loope
fcmovnb
clc
cmp
testl
add
out
or
add
add
int
inc
add
lods
sar
adc
add
pop
cli
jbe
aam
xor
add
dec
xor
add
add
loope
out
inc
clc
cmc
pusha
add
shrl
cmp
out
call
popa
add
lcall
jmp
xor
pop
jno
add
imul
rdseed
dec
pop
aaa
fs
enter
cs
inc
add
fsubr
movsb
clc
jl
push
add
cld
jmp
int
clc
aam
push
add
jo
add
shl
clc
dec
cmp
clc
cmp
jp
mov
add
cs
jmp
add
das
lret
push
push
inc
cld
jmp
mov
jle
sub
mov
xchg
cld
jmp
mov
mov
in
aad
mov
add
clc
jl
mov
pop
push
pop
mov
add
cmpsb
clc
mov
clc
cmp
add
or
insb
add
add
add
repz
bound
add
out
mov
fsubr
jl
add
sar
clc
or
test
fcomi
adc
add
xchg
in
mov
push
stos
mov
pop
in
fidivrs
cmp
ja
aaa
fs
cmp
cmp
jmp
nop
add
mov
add
xchg
enter
repz
xchg
xor
jae
add
pop
pop
mov
push
rolb
clc
push
pop
add
data16
iret
xor
outsl
out
mov
add
mov
jl
add
add
ret
push
push
ss
ret
jge
add
xchg
lahf
push
xor
cmp
clc
scas
sahf
mov
xabort
pop
xchg
ja
add
js
ljmp
cmp
sub
add
pusha
add
hlt
out
inc
add
cmpsl
clc
vmovaps
cmp
or
fisubrl
ja
push
clc
push
and
add
clc
enter
popf
pop
xlat
insl
mov
add
or
push
add
mov
inc
add
and
add
add
in
cli
pop
pusha
add
fbstp
add
clc
sar
clc
lock
add
clc
mov
add
jecxz
das
into
jp
ljmp
cmpl
add
pop
push
add
fadds
clc
xor
add
and
xchg
and
add
clc
je
or
test
test
adc
add
add
add
clc
ja
cli
xbegin
or
jo
add
cmpsl
clc
xchg
xlat
js
dec
call
jmp
add
add
frstor
add
push
cmp
mov
xchg
xchg
out
xchg
mov
add
push
fwait
adc
add
or
add
clc
fsubrs
inc
clc
or
in
mov
add
sub
data16
xchg
insb
push
xchg
mov
imul
add
popa
sub
mov
iret
mov
bound
add
dec
adc
add
add
mov
ss
ret
imul
adc
add
jo
add
and
add
xor
add
push
add
push
jecxz
sbb
jb,pt
cld
jmp
mov
in
adc
add
loop
mov
add
add
jp
clc
jg
add
mov
je
add
xor
push
add
cmp
ret
clc
mov
pusha
add
pop
or
imul
push
fistps
stc
or
cmp
clc
xor
add
add
je
inc
clc
cmp
js
es
mov
rcrb
clc
xor
add
clc
mov
clc
or
add
dec
pop
xor
add
push
cmp
add
jno
add
mov
add
fldenv
jg
lea
adc
xchg
mov
adc
add
add
xchg
inc
add
cmp
clc
cld
mov
add
int3
imul
clc
enter
cmp
scas
cmp
and
add
lock
es
dec
pop
pop
jge
loopne
cmp
mov
aaa
cmp
fstpt
clc
add
xchg
hlt
inc
clc
dec
push
cwtl
push
add
jp
cmp
clc
je
add
xchg
ss
mov
xor
add
cmp
add
scas
mov
jp
cmpsb
clc
nop
jp
mov
cmp
movsb
clc
int
or
xor
add
clc
cmp
sbb
add
in
aad
mov
cmp
arpl
add
dec
xabort
add
ljmp
shrb
push
add
shlb
xchg
pop
outsl
int3
xabort
clc
or
add
inc
add
cmpsb
clc
mov
add
rorb
clc
cmp
mov
mov
cmp
clc
xchg
ljmp
mov
add
cld
jmp
sahf
aas
dec
sahf
jecxz
jns
pop
fisubl
add
jbe
cmp
mov
add
nop
cmp
cmp
add
adc
add
adc
add
loopne
sbb
jne
clc
int
and
add
add
fmul
inc
clc
mov
jae
add
fs
pop
shrl
bound
add
cld
jmp
pop
mov
cmp
add
clc
mov
test
shlb
inc
lea
ret
sub
mov
in
fistpll
movsb
clc
inc
add
sar
sbb
add
add
mov
sbb
sub
mov
clc
sub
add
cli
add
test
es
add
mov
test
adc
sub
push
add
adc
add
cmp
jg
clc
cs
mov
ss
ret
dec
addb
pop
fimull
in
sub
clc
sar
ja
clc
and
add
pop
clc
jg
clc
clc
add
add
xchg
and
add
add
mov
cld
jmp
inc
or
stc
out
ds
stos
pushf
inc
clc
push
cmp
cmp
scas
mov
int3
dec
or
clc
xor
add
jg
mov
add
pop
ss
aam
inc
add
out
out
ds
fs
cwtl
cmp
fidivl
mov
add
pop
mov
add
clc
clc
repz
add
es
clc
test
addr16
cmp
clc
insb
mov
stos
dec
or
xchg
push
aaa
jnp
add
jae
add
jge
add
dec
ret
inc
clc
repz
jne
ds
pop
clc
jbe
push
sahf
push
rorb
xor
add
inc
clc
xor
add
mov
mov
outsb
dec
fidivrs
add
fs
mov
mov
repnz
sub
add
clc
mov
cwtl
xchg
incl
sub
add
inc
cmp
decb
addr16
dec
cmp
data16
popa
add
jne
data16
xor
add
loope
dec
inc
add
and
add
clc
mov
add
sbb
clc
cld
outsl
inc
clc
xor
add
movsb
clc
pop
jmp
mov
mov
xchg
jne
add
cli
insl
sti
dec
jle
in
jno
add
cmp
sbb
pop
clc
push
imull
sub
add
jne
cld
jmp
in
ficompl
mov
or
cmp
push
sarb
add
sub
add
stos
fs
outsl
lods
lcall
add
mov
adc
add
add
imul
sub
arpl
add
imul
jb
add
clc
repz
add
add
push
or
cld
jmp
imul
clc
addr16
repz
inc
add
pop
adc
add
add
inc
clc
push
cmp
mov
pusha
add
aam
clc
sbb
clc
dec
lock
mov
adc
add
push
movsb
clc
fisttpl
clc
inc
clc
jecxz
adc
add
clc
inc
add
cmp
push
add
jmp
clc
outsl
stos
jmp
pop
clc
jecxz
jno
add
add
push
add
mov
rcrl
fiaddl
mov
insb
arpl
add
add
dec
cmc
es
xchg
clc
clc
xchg
jb
add
pushf
dec
pop
test
inc
add
test
movsb
clc
arpl
add
ficomps
and
add
in
scas
jp
int3
jl
nop
sbb
pop
jbe
inc
clc
and
inc
add
data16
out
lods
loopne
in
je
outsl
loope
jbe
ja
sbb
jle
aad
fbld
clc
push
add
gs
and
lret
add
sub
je
jp
add
sub
add
add
jae
add
add
cwtl
xor
add
sbb
add
sub
sub
cmp
clc
pop
jge
cmp
fists
clc
movsl
clc
cli
mov
jge
sar
mov
xor
cltd
cmp
imul
clc
popf
cmp
addr16
xchg
pop
xor
add
clc
or
leave
jo
add
fldcw
push
clc
push
jmp
sub
push
add
test
sar
std
dec
testl
cmp
jmp
clc
pushf
aam
clc
push
inc
clc
mov
sub
sub
xor
clc
pop
into
hlt
adc
clc
icebp
pushf
xor
add
sbb
or
add
or
cmpsl
clc
outsb
pop
cmp
jno
add
addr16
sub
adc
add
add
sub
clc
into
addr16
data16
mov
mov
pop
cltd
xor
add
jbe
add
out
xbegin
insl
sar
mov
cld
jmp
jg
push
sub
fidivrl
data16
insl
push
xchg
add
add
cli
fiaddl
add
add
jns
mov
repz
sbb
fcompl
clc
fistpl
pop
cld
jmp
jge
nop
dec
or
push
adc
add
add
fsubrl
mov
jb
add
add
mov
add
dec
fiaddl
add
stos
mov
incb
push
pop
rorb
add
add
clc
ret
clc
jmp
mov
jno
add
jbe
add
ret
clc
or
scas
shrb
clc
mov
add
cld
jmp
sub
sub
add
cli
pop
push
add
das
dec
fisttpl
clc
jmp
add
icebp
fcoml
outsl
and
add
dec
inc
add
mov
cmp
clc
jge
clc
sahf
call
dec
add
cld
jmp
pop
lahf
and
add
clc
xor
clc
icebp
test
add
mov
add
sti
rorb
dec
mov
sub
clc
dec
cmp
add
jp
clc
pop
dec
push
add
ss
ret
sub
add
push
ds
add
ljmp
push
cld
jmp
popa
pop
out
cmp
loopne
test
jmp
pop
jno
inc
jno
inc
clc
clc
cli
dec
xor
sbb
push
mov
pop
mull
add
out
lea
dec
sbb
clc
out
outsb
or
adc
clc
cmp
lods
sub
clc
int
xchg
data16
add
cmp
xchg
cmp
add
add
jmp
mov
xabort
clc
cmp
pushl
sar
out
push
add
or
sub
add
add
cmpsl
clc
jl
add
iret
cmp
add
stc
xor
add
pop
adc
add
add
in
xlat
dec
xchg
icebp
sub
fwait
out
and
add
clc
jae
add
xor
mov
mov
clc
sbb
jmp
push
sub
clc
insl
jno,pt
add
add
in
mov
clc
mov
clc
mov
out
jmp
add
add
hlt
test
popa
add
dec
cltd
sub
xchg
lods
sbb
add
add
loop
popf
test
dec
in
lods
ret
sbb
dec
push
add
mov
je
cmp
cwtl
mov
int3
push
push
mov
cmp
or
insl
test
js
push
add
adc
add
dec
push
add
xor
add
out
aaa
jae
add
add
dec
xlat
inc
add
lfs
jnp
clc
addr16
mov
es
test
clc
adc
add
lock
add
add
add
clc
sbb
xor
cld
jmp
dec
sub
jecxz
dec
xbegin
push
inc
clc
int
aad
dec
jecxz
gs
loope
mov
jge
cmpsl
clc
outsl
jns
dec
mov
stc
mov
mov
pusha
add
or
insl
cmp
clc
jge
clc
movsl
clc
and
add
enter
ljmp
clc
pop
aad
mov
push
push
add
imul
stos
pop
cmp
daa
clc
mov
cs
sbb
kmovw
clc
or
add
jno
add
dec
jb
add
cmp
clc
xor
add
in
push
add
lock
add
clc
mov
add
pop
sar
aas
addr16
mov
test
adc
add
ret
clc
inc
add
fsubrp
ss
add
loop
pusha
add
int
icebp
fmuls
clc
cs
loopne
add
add
test
insl
movsb
clc
insb
sar
adc
add
clc
dec
ret
jmp
dec
push
cmc
jmp
add
js
cltd
insb
mov
test
sub
mov
add
clc
or
jne
cld
jmp
cmp
ret
clc
loop
movsl
clc
out
mov
cmp
and
mov
xchg
sar
lea
out
mov
jl
or
sti
cmp
cli
push
add
xchg
cmp
add
add
jne
test
into
stos
cmpsb
clc
lahf
xor
add
add
clc
pop
clc
jne
mov
mov
fisttpl
out
out
imul
clc
inc
clc
cmp
clc
lret
insl
cmp
enter
dec
popa
add
push
add
cld
jmp
dec
adc
out
lret
clc
xor
add
add
xor
add
add
inc
add
push
out
jmp
clc
gs
cmp
ret
clc
pop
mov
push
add
sarb
xchg
mov
pop
jne
inc
add
rcll
add
out
mov
add
cmp
add
test
sub
out
in
jge
into
inc
clc
push
clc
out
es
lock
inc
add
sbb
xchg
jmp
fidivrl
mov
add
add
clc
test
mov
sub
out
sar
clc
fsubrs
push
add
mov
popf
enter
clc
outsb
or
clc
mov
add
int3
or
add
adc
adc
push
decb
std
in
pop
jnp
xchg
add
add
clc
sahf
fcomps
jns
add
loop
ds
push
das
cs
push
inc
clc
sbb
jnp
push
cld
jmp
mov
push
insb
jecxz
xchg
push
add
scas
add
dec
popf
sbb
add
dec
push
xchg
pop
cmp
cmpsl
clc
test
call
jmp
adc
sub
sbb
mov
cmp
push
jmp
movsb
dec
cmpb
add
add
loopne
or
sahf
pop
jecxz
inc
add
icebp
or
clc
fsubr
or
pop
and
clc
aas
lret
loop
xor
add
outsl
push
and
add
int
loopne
adc
add
mov
clc
add
lock
and
pop
sub
movsb
clc
push
jmp
cmp
outsb
and
jmp
sub
hlt
and
scas
and
add
xor
add
sti
in
push
jb
add
clc
xchg
gs
dec
lea
add
lcall
lret
push
add
xchg
xor
pop
aas
push
jmp
test
mov
fildll
mov
xchg
fs
dec
push
dec
mov
inc
clc
cltd
jmp
in
std
aaa
or
clc
incl
js
cld
jmp
je
adc
fidivs
cltd
jge
cmp
add
xchg
and
add
nop
cs
ret
clc
out
adc
add
add
add
clc
pop
mov
add
xchg
add
add
fnstcw
or
adc
jmp
jp
push
mov
add
jne
push
ljmp
inc
clc
push
sar
clc
lret
mov
jmp
das
inc
sub
sub
gs
ja
fbld
inc
add
fnstenv
add
push
inc
clc
xor
add
sbb
jae
add
jmp
cld
jmp
sub
aam
mov
add
xchg
das
push
add
aad
mov
scas
sar
cli
or
add
test
ss
ret
je
xor
sbb
jecxz
sub
clc
mov
push
fisubs
push
add
ljmp
outsl
sbb
sbb
decl
dec
mov
outsb
sub
add
xor
add
push
sbb
and
lods
sbb
ss
ret
cmp
xor
adc
push
ret
jno
mov
arpl
add
mov
pop
xchg
in
jmp
clc
daa
clc
pop
mov
add
inc
add
in
jne
clc
xor
lahf
cmc
add
add
add
imul
add
clc
cwtl
je
imull
xlat
inc
add
aaa
es
or
jl
and
add
add
pushf
lret
pop
outsb
sub
shlb
aas
test
push
mov
mov
mov
clc
movsb
clc
xor
add
mov
mov
add
clc
dec
mov
add
jbe
out
loop
jg
stos
dec
clc
scas
or
clc
or
das
sub
dec
test
mov
push
ret
sub
mov
arpl
add
dec
push
add
pushf
ja
clc
ret
clc
and
repz
add
dec
int
add
xor
clc
in
es
fldl
mov
daa
clc
sbb
clc
add
add
cmp
clc
scas
rorb
add
fcmovnbe
hlt
xchg
insb
jmp
clc
test
clc
dec
lcall
cmp
dec
fcoml
mov
clc
mov
mov
lea
iret
add
add
mov
add
lods
cltd
jmp
mov
cltd
lret
mov
data16
clc
mov
mov
add
and
add
clc
test
sbb
jmp
sub
test
jb
add
add
adc
mov
inc
add
mov
add
mov
clc
decl
std
lcall
xchg
pop
test
add
cs
clc
sahf
mov
mov
xor
add
add
adc
add
clc
pop
pop
dec
decl
cld
lcall
inc
popa
xchg
xchg
adc
add
add
jmp
push
pusha
add
sbb
inc
clc
call
push
add
lahf
ret
clc
dec
mov
rcrl
clc
test
sub
enter
add
add
push
mov
cld
jmp
push
je
mov
out
sbb
push
out
clc
or
lret
cli
xchg
cmc
dec
jo
add
sti
mov
insl
je
clc
push
clc
xabort
add
inc
clc
fsubrs
cmc
cmp
testl
sbb
jmp
sahf
xor
xchg
es
dec
mov
jmp
add
cmp
mov
in
fwait
cmp
push
jmp
sub
cmp
shl
clc
mov
cs
xchg
cld
jmp
sub
aaa
cmc
jge
sub
mov
add
push
js
add
popf
faddl
repz
mov
jno
add
add
sub
mov
push
imull
push
pop
mov
add
and
inc
clc
mov
mov
clc
arpl
add
add
pop
negb
test
pop
stos
xor
ss
push
add
not
push
sub
cld
jmp
lea
sub
add
cmp
inc
add
xabort
clc
cmp
xor
add
call
cmpl
cld
jmp
andb
jge
clc
pop
ror
out
inc
clc
daa
clc
mov
push
mov
and
add
outsl
jae
clc
mov
cld
jmp
cmpsb
jge
insb
je
scas
cli
sbb
clc
out
aad
cld
inc
add
xchg
add
add
pop
add
lods
in
fisttps
clc
mov
negb
add
add
xor
add
sbb
aam
iret
xchg
lret
jo
add
add
int
repnz
hlt
sub
add
js
ja
clc
cmp
clc
inc
clc
sub
or
loope
cltd
mov
push
stos
adc
add
jecxz
xchg
pop
mov
in
pop
lea
shl
jno
add
sbb
test
loop
cld
jmp
xbegin
add
sar
pop
clc
cmpsb
clc
popa
add
and
pop
mov
inc
clc
fnstenv
sub
mov
scas
shlb
add
clc
nop
cmp
addr16
push
aam
pop
sub
sbb
shrb
fs
mov
dec
cmp
imul
add
adc
add
std
inc
add
and
add
hlt
fcompl
dec
cld
jmp
sub
shl
clc
inc
add
std
push
hlt
inc
add
inc
clc
cli
xor
cmp
push
cmp
mov
iret
ret
ficoml
add
mov
add
jns
ljmp
xchg
call
cld
sub
cmpsl
clc
cmp
push
add
cmp
stos
cmp
add
cmp
mov
clc
jmp
clc
xor
clc
jp
push
or
add
clc
mov
test
sar
cld
jmp
push
ja
clc
add
mov
dec
mull
add
push
xor
ss
ret
push
sub
xor
add
add
pushf
push
add
cld
jmp
test
ret
fs
and
add
mov
push
ret
cbtw
sub
popf
xabort
rclb
add
jle
add
aas
push
xchg
pop
cmp
clc
dec
sub
add
test
inc
add
daa
clc
fwait
test
cmp
add
test
add
lods
sub
mov
fstpt
inc
add
out
fdiv
testb
jg
add
clc
mov
add
xchg
push
add
pop
in
loop
test
clc
xchg
shll
add
clc
cmp
scas
lods
into
mov
jmp
xchg
lods
dec
hlt
cmp
add
xlat
and
add
insb
jmp
call
add
xor
add
movzwl
cld
jmp
movsb
pop
iret
push
repz
call
jmp
sahf
je
cwtl
adc
clc
ss
add
dec
clc
ljmp
pop
sbb
int3
xor
add
cmp
cli
dec
and
add
add
add
lods
inc
clc
pop
mov
inc
add
mov
adc
add
push
icebp
mov
clc
cs
ja
lock
inc
clc
adc
ja
clc
je
dec
jb
add
add
add
or
cld
jmp
push
sbb
jmp
dec
xchg
fadd
clc
imul
add
test
int
jle
clc
pushf
pop
mov
clc
pop
xor
add
add
add
popf
xchg
push
clc
mov
clc
mov
call
sub
jo
add
and
add
mov
sub
sbb
clc
fisubrl
clc
out
int
add
cli
inc
clc
pop
cmp
sar
clc
cmp
sti
fstps
pop
sarb
mov
clc
stos
clc
xor
cmp
clc
es
xchg
mov
data16
jge
clc
call
clc
mov
clc
test
into
or
clc
mov
in
lods
lcall
hlt
fwait
cwtl
test
adc
add
xor
cld
jmp
adc
sbb
xchg
ret
clc
sbb
adc
cld
jmp
sub
loop
jne
popa
add
cmp
mov
add
add
add
add
add
add
clc
inc
cld
jmp
xor
dec
pop
adc
add
cmpsb
clc
xlat
jmp
clc
jne
xchg
jno
add
loop
xlat
dec
icebp
mov
mov
xabort
add
mov
adc
jmp
push
sub
gs
scas
jbe
jmp
daa
clc
lret
adc
add
jo
add
mov
sets
je
in
cmp
add
lea
cld
jmp
scas
fwait
test
out
push
fs
add
sahf
das
cmp
and
add
xor
mov
je
mov
push
add
scas
ja
clc
jge
mov
mov
inc
cld
jmp
xchg
mov
xor
and
add
clc
push
jmp
sub
jge
add
pop
in
rol
clc
ficoms
add
add
jmp
cwtl
mov
adc
add
jg
add
adc
add
add
rclb
add
clc
dec
fsub
clc
mov
add
push
pop
rorl
clc
jnp
and
add
clc
jo
add
clc
pop
into
push
add
in
test
xlat
rorl
loop
frstor
add
cmp
clc
pop
clc
ffree
clc
push
clc
stos
shlb
clc
dec
lock
add
inc
clc
dec
std
add
add
clc
push
add
cmp
imul
clc
and
scas
or
clc
fs
out
ds
adc
add
clc
icebp
add
sbb
add
movsl
clc
mov
sub
clc
dec
mov
sarl
clc
test
clc
cmp
clc
mov
add
add
pop
sub
add
add
add
add
sub
add
adc
or
xor
add
out
dec
ret
movsl
clc
adc
nop
out
lock
clc
idivl
ret
clc
repz
std
mov
dec
mov
add
lret
sbb
repz
ja
cmc
data16
push
arpl
add
add
ss
inc
clc
and
add
jno
add
mul
clc
out
fisttpl
add
loopne
mov
clc
mov
clc
xbegin
imul
cld
jmp
inc
cmp
xchg
lret
test
jge
in
sarl
call
je
add
fsubr
xor
lods
mov
add
aad
insb
addr16
cmp
int
ficomps
adc
add
clc
mov
add
out
fnstsw
dec
cmpsb
clc
cmp
and
add
sar
clc
fmulp
jae
add
clc
push
jmp
or
cmp
xor
add
lods
jne
dec
inc
add
clc
data16
aaa
xchg
xchg
cmp
push
jae
add
jp
mov
cld
jmp
cwtl
push
sub
call
xchg
fstl
jb
add
sar
clc
scas
ret
clc
jo
add
jl
add
add
add
mov
clc
jl
clc
addr16
xchg
push
test
dec
mov
clc
pop
rclb
add
add
add
or
add
clc
out
sbb
add
mov
clc
addr16
sub
xor
clc
popa
add
mov
js
clc
xchg
cld
pop
push
ljmp
add
scas
mov
stos
lret
pop
mov
add
xabort
push
push
rcrb
and
add
push
add
add
lods
decl
test
sub
add
jmp
xchg
ret
clc
jnp
clc
push
add
adc
add
clc
mov
dec
sarl
adc
add
sub
clc
mov
in
adc
add
in
lods
add
add
ss
ret
ja
jp
mov
clc
in
cmp
cmc
adc
clc
fcmovnu
icebp
push
mov
cld
jmp
push
and
cs
add
mov
test
int
clc
cmp
cli
jmp
inc
clc
shrb
imul
mov
sbb
jmp
test
pop
sbb
add
lods
add
add
cmp
inc
add
mov
dec
lcall
mov
movsb
clc
dec
call
mov
sbb
clc
sub
mov
into
cmp
lret
mov
jp
mov
add
aam
xchg
sbb
add
add
jl
lock
push
mov
add
and
out
cld
imulb
adc
add
clc
cmp
clc
mov
inc
clc
gs
in
pop
jae
add
clc
aam
je
mov
adc
add
add
cld
push
enter
inc
add
mov
add
push
add
neg
aaa
xabort
sub
cmpsb
clc
jecxz
movsl
clc
jmp
fs
lahf
sti
fsubl
in
mov
clc
pop
jl,pn
clc
in
or
sbb
lock
mov
clc
pusha
add
bound
add
cld
jmp
xorb
or
add
sub
rcl
xchg
push
imul
cld
jmp
pop
add
clc
call
pop
adc
add
sub
in
rcrb
imul
sti
inc
add
xchg
dec
push
add
arpl
add
or
aaa
sti
or
pushl
cld
jmp
orb
push
xchg
jmp
add
jo
add
add
add
out
pushf
loope
sar
mov
mov
clc
mov
es
or
add
add
dec
xor
add
mov
cmp
clc
rcrb
scas
xor
add
add
inc
add
mov
add
add
add
mov
cld
scas
mov
cld
jmp
sub
mov
add
lret
push
mov
sub
cmp
cmpsb
add
imul
add
ljmp
movsl
clc
lods
push
mov
clc
nop
xabort
xchg
cld
imul
xchg
fs
scas
mov
sbb
fcomps
sub
ss
ret
sub
xchg
mov
pop
or
clc
cmp
dec
jne
sahf
fsubrl
sub
jp
add
stos
add
add
clc
or
clc
mov
clc
xabort
add
sub
xchg
adc
aam
clc
in
out
icebp
enter
clc
and
add
jae
add
and
push
ret
pop
test
jns
clc
rorl
mov
popa
add
out
mov
inc
clc
imul
cld
cwtl
xchg
mov
clc
repnz
bound
add
add
add
movsb
clc
xchg
in
rorl
mov
add
add
push
mov
cmp
xor
add
add
dec
scas
cmp
xbegin
xchg
push
sbb
mov
jns
clc
gs
sbb
sahf
or
or
in
or
add
movsl
clc
xor
add
cmp
lock
cld
jmp
adc
sahf
sbb
aaa
mov
clc
out
xchg
xor
add
xor
add
and
add
test
push
add
add
xor
add
clc
sub
clc
aas
xor
add
add
lods
ds
xor
add
add
and
add
mov
mov
sahf
inc
add
push
add
xor
add
cld
jmp
sub
out
pusha
add
mov
sahf
xchg
fisubrl
cmp
or
add
sub
xor
xchg
cli
cli
test
and
add
push
add
addr16
xchg
iret
or
cmp
lahf
test
addr16
addr16
sbb
add
scas
shrl
add
push
add
add
inc
add
jbe
imul
add
add
aam
add
or
lret
cmpsb
clc
cmc
fs
popa
add
ja
jne
clc
aam
clc
jecxz
sbb
add
clc
out
or
add
ja
cmp
xbegin
mov
add
stos
mov
aaa
adc
ss
inc
add
lods
arpl
add
add
idivl
rorl
mov
sti
inc
add
lret
mov
clc
and
add
je
cmpsl
clc
lock
inc
add
mov
add
fldl
add
sub
pop
add
add
push
jmp
push
nop
xchg
lret
dec
pop
jb
add
clc
ljmp
out
mov
xchg
in
jae
add
xor
add
pop
int
clc
mov
out
cld
ss
sbb
add
xchg
mov
jns
movsl
clc
jp
clc
invd
das
lcall
rorb
mov
add
aad
add
add
add
add
clc
push
xabort
inc
add
lcall
add
pushf
jbe
or
mov
bound
add
dec
imul
lret
outsb
cmp
add
data16
push
adc
add
jns
push
mov
mov
clc
cmp
clc
dec
sahf
cli
icebp
mov
fwait
mov
fcoms
outsb
jg
popf
mov
add
out
es
adc
add
addr16
scas
mov
add
add
sub
clc
or
clc
mov
jmp
scas
mov
add
add
add
clc
sub
test
enter
outsb
inc
clc
mov
test
mov
add
inc
add
add
add
into
popa
add
dec
mov
clc
push
add
add
movsb
clc
data16
mov
dec
jnp
std
pushf
push
mov
popa
add
in
test
dec
in
and
add
add
add
nop
repz
xor
add
dec
jecxz
decl
test
cld
jmp
pop
popf
jb
add
and
add
ret
clc
cmp
mov
clc
xor
add
clc
cmp
xchg
lcall
clc
cmp
clc
jno
add
pushf
adc
add
sub
nop
inc
add
adc
push
add
mov
add
lret
inc
add
insl
jbe
fdivs
sub
imul
dec
aad
add
leave
cltd
push
add
add
add
adc
add
clc
incb
clc
or
jg
fwait
mov
test
cmp
add
pminsw
push
add
scas
lock
add
mov
test
sub
push
inc
add
push
add
enter
clc
push
mov
xor
add
add
push
and
add
pop
pop
mov
out
add
inc
clc
mov
cli
pop
adc
add
cmp
fnstenv
lret
cld
jmp
xchg
ss
cwtl
arpl
add
clc
mov
push
push
add
xor
pop
ss
fdivr
fistpll
clc
insl
cmp
outsl
xchg
inc
clc
dec
adc
add
add
xchg
push
add
add
add
popa
add
mov
jge
clc
imulb
xor
add
movsb
clc
lret
clc
add
add
testb
lahf
fisubl
pop
xchg
mov
or
ljmp
clc
fcomps
xchg
cmp
and
mov
mov
incl
hlt
mov
add
popf
aad
jmp
jp
clc
mov
push
clc
leave
ljmp
add
jg
clc
add
add
loopne
aas
mov
movsl
clc
data16
and
add
add
add
lret
fdivrl
jmp
mov
jno
add
daa
clc
fdivl
add
lods
xchg
dec
sub
add
mov
mov
pop
adc
fs
mov
jmp
sub
pop
cld
jmp
cmp
push
out
lea
clc
jae
add
add
add
push
add
fwait
out
repnz
mov
scas
mov
add
sti
mov
dec
testb
fbld
mov
clc
inc
add
jo
add
loope
inc
add
sub
xor
add
xchg
out
fcoms
pop
adc
add
cwtl
and
pop
pop
jno
add
cld
jmp
fs
add
mov
pop
or
jmp
cmp
test
push
mov
cld
jmp
mov
cmpsb
clc
xchg
adc
add
mov
mov
clc
sbb
push
jle
jmp
clc
pop
cmpsb
clc
js
sar
clc
std
outsl
sar
lret
jmp
cmpsb
clc
in
mov
mov
dec
add
aaa
sbb
xchg
stos
hlt
push
jae
add
add
lods
popf
cmp
jmp
push
ja
push
xabort
insb
inc
clc
sbb
cld
jmp
dec
enter
jp
add
mov
aad
jl
mov
clc
push
lret
add
sar
add
lret
xchg
sbb
insb
mov
out
jmp
clc
mov
mov
cmp
add
sub
clc
dec
jns
clc
in
ja
xchg
es
loope
aad
sti
adc
leave
sbb
adc
in
popa
add
jge
push
jle
clc
jns
add
dec
clc
aad
clc
fcomps
or
push
fdivs
add
outsb
ret
mov
inc
clc
jl
setle
mov
or
clc
stos
inc
clc
cmp
adc
add
jg
pop
aaa
xchg
push
imul
add
add
add
add
add
jmp
fs
mov
data16
mov
clc
cmp
push
dec
mov
test
bound
add
adc
add
add
jmp
test
mov
clc
add
add
dec
ds
clc
push
add
jb
add
clc
leave
sahf
adc
add
fwait
xchg
inc
add
lcall
sub
jbe
fwait
in
cmp
mov
push
ret
sub
xchg
cwtl
push
add
cld
jmp
mov
add
mov
clc
loop
roll
add
clc
ja
clc
or
clc
jmp
mov
in
test
pop
je
repnz
and
add
dec
mov
add
inc
clc
jl
movsl
clc
cmp
push
pusha
cld
jmp
sbb
push
imul
dec
xor
add
jne
int3
push
add
sbb
cmp
add
test
aaa
loopne
icebp
cmp
add
add
clc
cmp
add
pop
outsl
clc
ljmp
inc
add
cmp
add
jae
add
mov
int3
or
cld
jmp
inc
jno
pusha
add
cwtl
insl
jmp
push
ss
ret
andb
lods
dec
fmull
fs
xor
popa
add
sub
fldl
adc
add
div
push
add
clc
fucom
clc
jbe
add
or
bound
add
add
clc
mov
clc
jb
add
push
push
cld
jmp
adc
add
mov
outsb
jnp
sahf
inc
clc
push
add
inc
add
mov
mov
push
test
cld
jmp
push
outsl
ds
dec
ss
ret
nop
mov
jp
add
lret
adc
add
add
adc
add
sbb
add
clc
in
jecxz
call
clc
lret
jne
sar
enter
test
dec
push
sbb
pop
xbegin
jmp
add
mov
inc
add
dec
pop
fwait
sar
ss
push
cmc
call
xor
sub
clc
ret
clc
je
add
inc
clc
clc
movsl
clc
dec
into
dec
test
cli
pop
in
adc
clc
jo
add
mov
jg
clc
add
add
nop
notl
loopne
aas
and
mov
add
cmp
jne
dec
repz
fdivs
add
add
lods
scas
inc
add
add
add
clc
jae
add
insb
push
add
fwait
cmp
jle
stos
cld
pop
pushf
aad
imul
vunpckhps
clc
or
add
loope
cmpsl
clc
mov
clc
call
ss
fistl
jmp
dec
push
scas
push
lods
data16
test
sub
popa
add
mov
clc
sahf
inc
clc
fdivs
out
jmp
sub
or
jecxz
syscall
clc
aam
push
dec
hlt
or
inc
add
fucomp
cmp
sti
push
adc
add
add
fwait
xchg
mull
cmp
push
test
pop
jae
add
cmp
lahf
inc
add
stos
adc
add
out
dec
xor
add
add
popa
add
and
add
add
jmp
mov
add
cmp
stos
xchg
xchg
out
xchg
mov
gs
lcall
push
ret
sub
test
dec
cmp
clc
pop
in
fs
sarb
or
clc
push
add
fwait
and
add
shlb
add
jecxz
and
add
cld
jmp
mov
outsl
outsl
inc
clc
pusha
add
mov
insl
inc
add
in
xchg
out
loope
xor
add
pop
mov
mov
add
push
hlt
pop
mov
mov
out
out
das
cmc
inc
add
cmp
jl
clc
cmpsl
clc
dec
cmc
aaa
mov
nop
or
lods
ss
ret
lods
sub
mov
fists
add
arpl
add
lret
ret
clc
jnp
pop
fildl
inc
clc
push
mov
sub
inc
add
sahf
lret
xchg
cmp
je
adc
add
lock
jo
add
add
push
adc
add
mov
dec
fimuls
add
inc
clc
or
mov
push
add
and
add
push
add
ss
ret
sub
repnz
es
stos
ja
xor
mov
push
cld
jmp
and
and
add
clc
push
bound
add
std
dec
xchg
divl
add
jae
add
mov
clc
pop
mov
popf
jle
clc
jns
clc
sub
add
std
jae
add
clc
popa
add
xchg
sbb
xchg
push
add
sar
mov
jmp
add
ljmp
cmp
pop
fwait
ret
xabort
add
lods
adc
ret
clc
mov
pop
xchg
adc
add
add
cld
jmp
sub
jmp
clc
test
hlt
out
fisttpl
pop
aaa
clc
dec
push
decl
cld
jmp
scas
cwtl
jno
clc
adc
mov
mov
lods
dec
cwtl
cld
inc
clc
xbegin
pop
clc
jmp
add
add
ret
clc
dec
mov
mov
jge
clc
pushf
out
aad
je
cld
jmp
es
inc
clc
jecxz
pop
jne
dec
add
add
cmp
clc
add
add
fs
and
je
clc
outsb
out
mov
add
mov
clc
mov
mov
adc
add
add
jge
push
clc
pop
adc
add
add
pop
dec
xbegin
add
fdiv
cltd
pop
rorb
adc
add
sar
jmp
add
jge
cli
clc
out
xchg
jg
clc
pop
inc
add
pusha
add
add
add
clc
cld
pop
lahf
ss
xor
int
cmp
clc
aam
add
js
add
pusha
add
aad
clc
cmp
mov
cmp
add
clc
cmp
cmp
sahf
lods
outsb
call
adc
add
cmp
pop
clc
sbb
cmp
add
and
sub
clc
into
dec
push
cltd
xchg
xchg
aad
add
addr16
sub
add
sbb
mov
decl
repz
ljmp
mov
inc
clc
xchg
push
insl
sbb
add
push
jbe
int
loope
sbb
add
mov
xchg
or
push
and
pop
dec
sbb
loopne
xbegin
test
cld
jmp
sub
pop
or
icebp
dec
jl
fidivrl
push
clc
adc
add
and
add
clc
mov
mov
xor
sbb
clc
add
clc
cltd
sub
clc
daa
clc
mov
pop
rclb
inc
add
test
cmp
add
in
scas
out
xchg
hlt
mov
cs
sbb
dec
add
add
clc
inc
clc
or
xchg
nop
stos
xchg
mov
mov
add
pop
out
rorl
icebp
pop
icebp
and
pop
mov
clc
mov
clc
pop
cmp
jns
in
sub
dec
jle
sub
add
add
in
ret
mov
fstpt
inc
add
pop
clc
jns
xor
ja
dec
pop
scas
addr16
pushf
xor
add
jmp
cmpsb
push
adc
popf
cmp
add
rcl
mov
add
incb
divl
add
clc
test
clc
insl
mov
insl
mov
clc
test
pusha
add
cmc
nop
and
add
cmp
clc
jmp
stc
mov
add
ret
xchg
fdivrs
jl
clc
push
fildl
call
sbb
pop
imul
add
nop
xchg
pushf
popf
sbb
add
xor
add
xchg
enter
fldt
clc
mov
add
add
inc
add
cmp
adc
add
movsl
clc
movsb
clc
adc
add
clc
jnp
nop
fldt
jns
add
mov
clc
gs
mov
and
pop
jl
inc
add
fnstcw
cmp
clc
testb
jle
test
sub
clc
adc
clc
or
fildll
mov
clc
cmpsl
clc
out
push
push
sub
clc
icebp
inc
clc
mov
add
in
push
mov
clc
ja
jb
add
dec
inc
clc
js
icebp
mov
xabort
add
mov
dec
sbb
add
shl
ret
clc
dec
addr16
imul
adc
add
mov
pusha
add
sar
fcom
fsubl
leave
testl
add
sar
add
pop
sub
clc
add
add
movsb
clc
xchg
ffreep
clc
push
add
cld
jmp
scas
sahf
outsl
es
cmp
clc
and
add
xor
add
clc
idivl
lahf
mov
movsl
clc
mov
cmpsl
clc
aaa
aam
cmpsl
clc
cmp
clc
jle
xchg
hlt
notl
pop
cltd
daa
clc
xor
clc
pop
xchg
sti
ror
add
add
add
add
repnz
in
stos
shlb
scas
cmp
clc
sar
clc
aas
fisttpll
fwait
or
mov
jge
clc
int
dec
loop
xchg
add
dec
out
jle
mov
clc
lahf
jge
add
in
in
adc
add
inc
add
mov
mov
inc
add
adc
add
clc
js
adc
mov
pop
mov
add
or
ljmp
jne
popa
add
dec
enter
add
cld
jmp
adc
mov
sub
movsb
clc
movsl
clc
jno
add
add
icebp
lcall
jecxz
fadd
clc
jg
or
clc
or
int3
inc
clc
dec
push
clc
add
sbb
clc
insb
jo
add
dec
xchg
mov
sbb
repz
push
ret
pushw
stc
aad
sbb
jle
clc
sahf
pop
jo
add
fs
add
mov
clc
mov
clc
adc
add
inc
add
mov
arpl
add
xor
add
scas
cwtl
mov
cld
jmp
mov
clc
cmpsl
clc
icebp
lea
cmp
or
outsl
fsubrl
clc
xchg
je
add
icebp
xchg
xor
add
sub
mull
sahf
clc
jp
shl
ss
ret
or
clc
scas
pop
dec
outsl
data16
scas
mov
or
lock
mov
and
add
xchg
cmp
clc
cmp
clc
add
add
lea
data16
bound
add
xchg
and
add
clc
mov
and
add
clc
shrl
sar
test
scas
ss
enter
out
push
add
and
pusha
add
mov
jnp
clc
mov
mov
push
mov
mov
push
cld
jmp
aaa
das
sub
sbb
inc
add
cmp
in
mov
clc
sub
into
movsl
clc
inc
add
outsl
mov
add
add
clc
sub
add
outsl
add
add
add
jmp
push
add
add
sub
clc
jnp
clc
dec
jbe
int
xchg
jge
clc
push
clc
pop
cmp
call
inc
add
lock
scas
out
mov
rorl
cmp
xor
in
jg
cld
mov
clc
inc
add
inc
add
cmp
clc
in
xor
add
add
clc
movsl
clc
jp
stos
clc
lods
jecxz
sbb
inc
add
fistps
xchg
xchg
push
stos
adc
add
and
add
cmp
add
aad
clc
push
cmp
add
cmp
xor
add
cltd
push
stos
inc
add
cmp
testb
add
inc
clc
flds
add
mov
clc
xchg
ror
sbb
add
xchg
cld
pop
repnz
add
out
pop
loope
movzbl
std
daa
clc
xchg
loopne
mov
lcall
loopne
fs
and
ret
inc
add
push
mov
mov
pop
cmp
mov
add
shlb
add
jle
sar
clc
xchg
popa
add
out
fistps
stos
jae
add
clc
push
push
cld
jmp
movsb
adc
add
hlt
addr16
xchg
sub
sub
ret
clc
int3
and
add
divl
movsl
clc
sub
add
jae
add
xchg
adc
add
cld
jmp
push
sub
xor
mov
scas
dec
mov
clc
fmull
clc
jae
add
movsl
clc
das
aaa
add
add
add
jo
add
and
clc
jle
pop
imul
fwait
mov
pop
cld
jmp
sub
jno
stos
cmp
add
and
add
xchg
clc
cmp
and
add
arpl
add
add
sti
in
sub
add
xchg
mov
mov
xor
add
pop
out
adc
add
and
xchg
fcoms
add
lods
hlt
sub
add
incl
add
jmp
xor
out
cmp
lret
jge
mov
pusha
add
dec
mov
mov
call
stos
in
cmpsl
clc
test
clc
cmp
test
insb
test
aaa
mov
imul
and
add
and
adc
call
ss
ret
cmp
jae
add
cld
jmp
imul
or
add
lea
add
pop
clc
out
and
add
jnp
xchg
mov
clc
loop
sbb
clc
mov
add
add
jmp
insb
pop
mov
negb
fsub
clc
xbegin
add
dec
ret
clc
xchg
xbegin
add
pop
or
push
clc
mov
add
inc
clc
out
xchg
dec
loopne
add
add
clc
mov
loop
sbb
add
mov
in
adc
add
mov
clc
ret
clc
mov
fldl2t
test
repnz
add
jl
cmpsb
clc
inc
add
fcomps
dec
bound
add
clc
and
add
xchg
enter
and
add
stos
incl
mov
call
add
cmp
xor
add
sar
adc
add
inc
clc
dec
int
stos
cmp
jg
bound
add
mov
cmp
and
add
int3
in
clc
clc
inc
clc
and
add
add
sar
clc
cmpsl
clc
inc
add
jl
es
out
cli
dec
inc
add
inc
add
xchg
push
jbe
mov
mov
push
add
add
add
je
ljmp
add
loop
pop
pop
rcl
or
not
stos
divl
add
add
add
add
add
cmp
cltd
ficomps
fstpl
ss
add
jmp
sub
lcall
add
leave
or
add
push
add
out
sarl
jae
add
clc
fistl
jae
add
cmp
cli
rol
clc
insb
mov
pop
out
mov
sub
jno
add
add
mov
sub
pop
xor
pop
cmpsb
clc
icebp
sahf
sar
push
gs
scas
pop
test
mov
clc
mov
repnz
inc
add
ret
mov
push
mov
add
mov
add
jmp
ja
add
push
clc
mov
mov
jmp
cmp
xchg
and
add
xor
add
stc
call
pop
clc
xor
outsb
jns
add
adc
add
test
sub
decl
jge
push
test
sub
add
pop
xor
add
mov
pop
ljmp
add
xchg
jle
inc
add
cmp
and
jg
sbb
sbb
mov
call
cmp
inc
add
mov
arpl
add
jmp
dec
insb
imul
in
and
add
add
call
cld
jmp
xor
sub
shrb
add
adc
add
adc
mov
lods
pop
pop
daa
clc
xchg
and
add
sub
add
jne
add
cmp
push
add
fcoms
mov
jge
add
inc
clc
clc
ds
sub
rcll
add
push
jge
clc
in
lcall
es
fwait
cltd
push
insb
movsb
jmp
test
adc
add
sar
aad
sbb
push
adc
push
ret
xchg
push
push
incl
jge
cld
jmp
sbb
jmp
data16
das
aam
pushf
fnsave
add
bound
add
in
xchg
loopne
divb
add
add
out
sbb
adc
inc
clc
and
test
sub
fwait
outsl
mov
clc
mov
jb
add
dec
mov
add
jmp
clc
ljmp
js
add
xchg
adc
add
add
incb
dec
repnz
call
cld
jmp
sub
fcoml
clc
scas
cmp
xor
test
mov
aas
inc
clc
cmp
clc
cmp
push
cld
jmp
das
lea
mov
dec
cld
jmp
je
sub
cmp
lods
out
pop
pop
hlt
jnp
arpl
add
add
pop
test
clc
sbb
jmp
jp
cmpsb
push
xchg
adc
add
mulb
add
in
fisttpl
pop
movsb
clc
mov
or
out
cld
pushf
cmpsb
clc
cmp
xchg
das
mov
or
add
clc
icebp
iret
xor
add
clc
in
xlat
mov
inc
icebp
lcall
in
adc
add
or
add
add
cld
test
out
xabort
popf
cld
and
add
and
add
add
add
add
add
add
dec
sub
sbb
cli
mov
ficompl
cmp
out
mov
inc
clc
adc
add
inc
jp
cld
jmp
push
inc
add
ficoml
add
add
and
add
dec
and
add
add
shlb
add
add
mov
sahf
cli
pop
inc
add
add
add
stc
jae
add
shl
hlt
xlat
sahf
scas
insl
xor
test
push
add
imul
mov
sti
pop
pop
xchg
cmp
push
add
cld
jmp
pop
outsb
sbb
clc
push
jne
cld
jmp
cmovno
add
add
testb
clc
xchg
mov
mulb
inc
clc
adc
mov
icebp
test
add
add
add
clc
sub
add
cmp
add
jle
clc
add
add
cmp
mov
lahf
gs
add
add
pop
cmpsl
clc
bnd
clc
sar
inc
clc
adc
add
add
cmpsb
clc
into
xchg
dec
jnp
add
aaa
int3
xchg
mov
scas
add
iret
int3
add
add
sbb
clc
cmp
inc
clc
mov
jne
mov
add
add
arpl
add
inc
add
xor
repz
loope
std
sar
add
popa
add
mov
sar
roll
in
stc
repz
mov
add
clc
bound
add
clc
or
add
push
and
add
cmc
mov
in
inc
clc
inc
clc
push
mov
lods
outsb
mov
mov
add
add
add
cltd
or
add
xchg
inc
add
std
lods
mov
add
inc
clc
sbb
clc
aad
clc
ret
jne
loope
jl
xlat
stc
fisttpl
sbb
dec
cmp
jecxz
in
xor
add
in
out
xchg
in
xlat
dec
inc
clc
sbb
clc
cmp
lret
sbb
add
clc
mov
add
sub
dec
das
xchg
pop
clc
pop
out
inc
clc
or
clc
jecxz
dec
xor
lahf
pop
pop
pop
mov
or
add
addr16
std
mov
clc
sbb
clc
inc
clc
jae
add
add
push
add
push
xor
pushf
cmp
icebp
push
clc
shlb
push
add
imul
push
loop
mov
and
add
add
loope
jb
add
add
in
pop
cmp
jle
mov
fninit
clc
clc
mov
pop
lea
sahf
inc
clc
repz
clc
inc
clc
daa
clc
cld
pop
rolb
add
pop
fcomp
push
cmp
ja
cmp
test
adc
add
ret
clc
cmp
add
clc
xor
add
push
decl
test
fcos
cld
jmp
insb
addr16
and
add
add
loope
adc
dec
test
out
loopne
push
or
clc
jne
cmp
clc
mov
push
add
xchg
aad
sub
add
xchg
gs
and
add
test
aam
aas
out
clc
cld
jg
insl
mov
clc
pop
clc
adc
add
pop
rsqrtps
add
add
xor
add
popa
add
ds
clc
pop
shrb
adc
xor
mov
cmp
sub
jecxz
into
pop
inc
clc
in
jl
std
pop
add
add
cmpsb
clc
js
mov
bound
add
clc
push
add
clc
xchg
inc
clc
scas
push
add
das
xchg
cmp
addr16
mov
clc
vcomiss
push
shr
aaa
sbb
add
and
add
dec
movsb
clc
stc
stos
xor
outsl
inc
clc
rcr
scas
sub
xor
add
inc
add
movsl
clc
fwait
push
add
sar
add
sbb
clc
xlat
jmp
xchg
sbb
clc
sar
clc
adc
add
inc
add
divl
push
push
push
ljmp
push
movsb
clc
lret
int3
push
sbb
jmp
and
aaa
or
clc
clc
mov
pop
xchg
shrl
push
sub
mov
test
sbb
es
data16
sar
add
xadd
nop
mov
sub
addr16
inc
add
and
add
cltd
and
add
ret
clc
fisubrs
insb
stos
test
add
clc
jne
popf
into
test
add
mov
mov
clc
dec
sub
jmp
fwait
subb
add
test
int3
loop
in
test
lahf
pusha
add
xchg
jmp
add
sub
or
and
add
clc
int3
push
decl
ss
ret
inc
outsl
push
add
mov
das
pushf
sbb
cld
jmp
es
xchg
decl
test
sar
cld
jmp
mov
add
clc
push
adc
add
add
in
sub
ret
clc
movsl
clc
mov
outsb
dec
jne
adc
add
mov
pop
inc
clc
mov
mov
clc
xor
clc
aas
and
cmp
lock
mov
sbb
enter
jmp
sub
rol
clc
or
data16
inc
clc
ret
clc
mov
add
dec
push
and
lods
scas
ficoms
add
sbb
xchg
stc
dec
out
mov
out
mov
adc
ja
xor
cmp
shll
pop
push
adc
add
pop
fcmovb
clc
mov
mov
pop
jmp
xchg
xlat
cmpsb
clc
lock
push
add
aaa
ja
data16
cwtl
add
mov
add
jg
mov
mov
clc
icebp
fwait
or
push
add
add
add
aas
jmp
sub
add
or
dec
push
into
and
add
dec
leave
pop
xchg
xchg
push
add
sub
enter
add
inc
add
lods
adc
clc
dec
outsl
cmpsl
clc
into
fidivrs
add
fnstenv
shlb
add
xabort
clc
clc
inc
add
add
das
js
inc
clc
cmp
loopne
mov
jmp
push
adc
sub
cmp
clc
add
add
pop
out
xor
add
add
dec
xor
cs
sahf
mov
add
mov
jmp
cld
jmp
outsl
and
cmp
mov
aad
add
mov
in
xchg
push
clc
cmp
clc
cmp
imul
leave
or
ret
scas
mov
jb
add
clc
mov
add
cmp
add
lret
push
add
inc
clc
dec
sbb
push
clc
pushf
jge
add
fistpl
fsts
ret
js
add
mov
fildl
push
call
ss
ret
sahf
jge
clc
jle
fucomi
jns
clc
add
dec
add
add
sbb
add
popf
pusha
add
into
cmp
cwtl
sahf
mov
test
sub
pop
push
mov
cld
jmp
dec
lahf
out
push
xlat
push
add
sbb
push
mov
cld
jmp
mov
xchg
or
clc
mov
aam
push
ret
clc
mov
pop
clc
ret
clc
cmp
cltd
sbb
insb
pushf
popl
add
sbb
adc
add
xchg
push
add
stc
call
das
xor
clc
add
add
xabort
push
cmp
add
jecxz
ljmp
clc
cmp
clc
sbb
test
aam
cld
jmp
mov
add
push
mov
sub
inc
clc
mov
mov
jmp
test
cmp
leave
sahf
ret
xchg
cltd
sar
bound
add
cs
dec
push
push
mov
add
add
negb
leave
inc
add
iret
inc
clc
or
pop
lcall
ficoml
add
push
ret
xor
add
mov
outsl
repz
sub
xor
add
clc
addr16
pop
sbb
jl
flds
pop
clc
rorb
out
stos
cmp
clc
cltd
pop
fidivrs
or
mov
ljmp
cmpsb
sbb
push
ret
or
adc
add
xor
add
add
jne
add
jge
clc
shrl
mov
push
ret
sub
cmp
clc
mov
ret
clc
sbb
out
jns
in
addr16
cli
add
add
cwtl
lcall
add
add
add
movsl
clc
sti
adc
add
sub
clc
pop
sub
and
add
adc
add
ja
data16
pop
add
add
sub
clc
add
add
clc
and
add
or
or
stos
dec
mov
add
mov
push
sub
add
clc
adc
add
and
add
mov
cmpsl
clc
scas
iret
pop
cmp
lret
mov
add
add
sahf
inc
add
cmpsb
clc
dec
and
and
add
fdivrs
push
add
jmp
sar
add
sahf
push
fisubl
add
hlt
pusha
add
cmp
clc
and
lea
add
shl
clc
movsb
clc
xabort
mov
add
ficompl
pop
test
inc
clc
cwtl
iret
cmp
pop
clc
pop
push
add
mov
add
sub
push
or
clc
mov
add
xchg
out
xabort
das
push
cwtl
add
add
mov
xor
add
ret
cmpsl
clc
mov
add
push
gs
out
enter
clc
gs
jo
add
mov
add
add
cmp
aas
and
add
or
clc
sbb
test
sbb
rorl
cld
dec
in
xchg
and
fwait
aas
cld
cmp
cmp
add
dec
and
add
clc
mov
xor
add
enter
clc
dec
je
add
add
mov
lods
sbb
add
jecxz
cmp
sub
mov
in
movsl
clc
ljmp
jnp
cmp
cmp
aas
xchg
lahf
mov
jnp
jmp
mov
clc
and
add
add
movsb
clc
dec
sahf
ud1
xor
clc
add
add
or
icebp
xchg
cmp
add
add
add
add
clc
or
sub
clc
xchg
mov
add
movsb
clc
jg
clc
mov
pop
mov
sar
clc
adc
inc
add
cld
inc
add
sbb
add
int
add
sub
mov
sub
clc
loop
jle
clc
arpl
add
clc
xchg
push
add
cmp
icebp
xbegin
add
clc
int
pop
clc
inc
clc
scas
xor
add
clc
mov
mov
cmp
add
and
add
xchg
push
push
cld
jmp
inc
das
pop
dec
sub
jl
and
jns
add
sbb
icebp
mov
clc
jl
imul
scas
lock
mov
imul
clc
dec
aas
ljmp
and
clc
into
mov
addr16
add
mov
cli
in
xchg
pop
int3
inc
clc
add
fistpl
clc
xor
mov
lsl
add
lret
iret
data16
rcrl
lret
add
stos
lcall
push
jl
add
add
out
cld
jmp
adc
test
jns
clc
data16
sar
sub
clc
push
stos
and
test
mov
add
cmp
clc
pop
cmp
xchg
stc
enter
pop
insb
fdivl
push
add
push
add
push
push
add
xor
add
add
das
cmc
test
dec
int3
pop
pop
int
bound
add
clc
and
add
jnp
enter
mov
mov
clc
and
inc
add
jb
add
mov
movsl
clc
outsl
mov
mov
add
pushf
popf
xchg
sub
xor
sub
jmp
xlat
sbb
daa
clc
mov
and
add
dec
icebp
push
add
xabort
shll
int
add
push
add
repnz
add
clc
mov
movsb
clc
sbb
ljmp
jmp
pop
inc
push
scas
adc
push
add
jmp
and
add
add
push
add
xor
add
clc
nop
clc
out
mov
daa
clc
iret
cmp
adc
add
push
int
add
fmull
clc
jae
add
or
insl
mov
add
xor
add
add
sbb
clc
shrb
movsl
clc
pop
clc
es
dec
loope
jo
add
mov
jl
jb
add
add
fidivl
add
mov
clc
inc
add
jmp
icebp
imul
out
aam
mov
mov
add
imul
lods
xor
inc
clc
inc
add
fstpl
in
inc
add
xchg
xor
add
inc
add
out
and
add
int
clc
xabort
mov
nop
in
int3
loop
pop
test
loope
xor
xchg
inc
clc
js
jnp
add
lcall
clc
movsl
clc
push
add
pop
mov
add
xor
add
add
lret
ss
ret
pop
test
mov
scas
clc
adc
add
dec
iret
mov
add
mov
clc
repz
mov
clc
or
iret
lods
pop
jnp
add
addr16
xchg
cmp
cld
adc
push
xchg
lcall
xor
clc
sbb
sbb
loope
pop
xchg
mov
xbegin
clc
inc
add
imul
clc
mov
xchg
xor
add
jo
add
push
add
jmp
sub
imulb
push
clc
in
and
sbb
insl
int3
sub
push
add
int3
pushf
out
mov
in
jb
add
mov
add
jne
cwtl
mov
lret
in
xbegin
add
fisubl
add
jmp
cld
jmp
dec
add
clc
push
nop
cld
cmpsb
clc
mov
cwtl
jmp
imul
or
push
xchg
lea
movsb
clc
bound
add
add
pop
jge
out
xor
add
mov
clc
push
ret
clc
in
pop
mov
add
add
rep
cld
jmp
xchg
popa
push
dec
xchg
adc
add
add
cld
jmp
je
aas
and
add
clc
and
add
push
add
cmc
cmp
cmp
add
pop
jo
add
mov
loopne
xchg
fs
dec
bound
add
jmp
or
scas
adc
add
imul
cld
jmp
je
ja
clc
aaa
push
rol
clc
and
add
clc
xchg
jecxz
pop
mov
imul
add
mov
lods
inc
add
mov
pushf
pop
rorl
add
movsl
clc
jb
add
nop
addr16
xbegin
enter
clc
mov
xchg
jecxz
gs
dec
cld
mov
inc
add
hlt
or
cmc
inc
add
das
mov
rcr
mov
cmp
cld
jmp
movsb
jg
jno
clc
insl
cmp
add
sbb
xchg
jo
add
mov
clc
jle
clc
dec
or
test
and
faddp
clc
inc
add
loope
inc
clc
fwait
sub
inc
add
int
add
pop
sub
clc
repnz
add
clc
and
add
add
mov
cmp
add
add
movsl
clc
push
out
add
repz
or
cmp
xchg
mov
inc
add
xchg
shlb
add
imul
rclb
add
clc
lods
daa
clc
sbb
jmp
pop
push
pop
add
push
add
and
add
lret
clc
xor
add
movsl
clc
jo
add
clc
mov
lahf
adc
add
add
cmp
or
sbb
add
ret
clc
sub
fdivr
or
add
fsubp
clc
ret
clc
repz
lahf
das
faddp
clc
ret
clc
xchg
dec
dec
fs
into
cmp
add
mov
jne
pop
mov
std
in
push
add
fimuls
clc
popa
add
dec
sbb
sar
mov
add
mov
popf
gs
mov
pop
test
sub
cld
jmp
aaa
push
jne
cld
jmp
sbb
push
clc
pop
push
add
sub
add
clc
cmc
jp
or
add
nop
sbb
clc
fists
insl
xchg
rcr
mov
jne
jp
clc
leave
xor
mov
out
sbb
clc
cmpsl
clc
scas
loop
and
add
clc
mov
push
push
cld
jmp
nop
movsb
mov
pop
lods
mov
pusha
cld
jmp
push
pop
add
inc
clc
cs
dec
int3
ss
ja
clc
pminub
add
je
add
jle
mov
ficoml
jo
add
jmp
sub
push
ss
ret
adc
push
jp
xor
add
add
loop
mov
mov
decl
mov
adc
jmp
mov
in
ret
clc
pop
pop
enter
fstpt
gs
dec
cwtl
ja
scas
dec
int3
push
mov
clc
jb
add
clc
fwait
pusha
add
popa
add
test
cmp
clc
mov
movsb
clc
add
add
std
mov
add
pop
inc
clc
xchg
insl
push
xor
addr16
mov
or
clc
in
mov
into
inc
add
xchg
push
add
sbb
push
ret
sahf
cmpsb
xor
clc
mov
adc
add
clc
dec
jl
jae
add
and
add
lock
add
cmp
clc
mov
jmp
test
add
ds
pop
int
clc
loop
push
cmp
push
add
lods
mov
stos
loope
jl
aam
clc
mov
adc
inc
add
cmp
xchg
add
add
or
test
jg
inc
add
cmp
mov
insl
int
mov
jbe
add
and
add
jmp
lea
mov
add
push
add
adc
add
xbegin
roll
xor
add
add
fidivrl
dec
std
and
add
or
clc
mov
push
lods
push
clc
adc
add
adc
add
add
sar
push
add
cmp
leave
add
jmp
add
cltd
jbe
mov
push
sbb
int
fcompl
out
daa
clc
jmp
mov
add
jae
add
clc
push
add
mov
push
push
mov
push
add
lock
mov
jmp
clc
out
ficoml
add
cmpsl
clc
dec
gs
rcll
xchg
push
popf
cld
jmp
imul
lret
sub
add
add
sbb
jmp
or
mov
cld
jmp
cmpsb
sub
mov
clc
sahf
ret
or
popa
add
pop
pop
sti
int3
sub
fdivrl
add
cltd
pop
clc
shll
add
out
inc
clc
int3
add
add
add
dec
jne
dec
imul
xbegin
add
add
add
add
xchg
adc
add
mov
clc
imul
add
clc
pop
sbb
rep
cld
jmp
pop
jp
sub
jne
imul
mov
scas
xchg
test
aad
fndisi(8087
clc
jmp
je
clc
std
mov
lahf
add
add
add
mov
adc
push
jmp
push
or
leave
xbegin
xor
and
add
mov
add
sub
ss
aad
js
sub
nop
mov
clc
inc
clc
ljmp
cmp
add
pop
inc
add
cmp
push
add
adc
add
clc
cmc
jbe
dec
xor
add
imul
cld
pop
push
hlt
out
mov
add
mov
out
adc
add
add
movsb
clc
and
sub
clc
fcoml
add
mov
sbb
xor
add
cli
mov
lea
cmpsl
clc
sub
or
add
clc
push
insl
dec
aad
jbe
add
pop
aad
or
inc
add
or
shll
mov
inc
add
sahf
sub
jge
push
xbegin
add
sub
mov
test
sub
sub
add
clc
push
mov
cld
jmp
sbb
inc
insb
out
int3
jns
jne
faddl
and
pop
jo
add
jmp
sub
data16
cmp
ficompl
call
mov
clc
jl
sbb
cld
jmp
test
addr16
xchg
mov
sar
mov
add
lock
add
xchg
mov
insb
fistps
movsl
clc
mov
in
dec
outsb
dec
out
adc
add
negb
clc
test
fildl
add
mov
cwtl
push
mov
cmpsl
clc
arpl
add
and
add
add
dec
cmp
clc
clc
hlt
addr16
std
lahf
mov
repnz
add
xchg
or
mov
pop
clc
mov
add
sbb
add
mov
add
mov
add
add
and
or
jb
add
add
dec
dec
jns
clc
lock
add
pop
xchg
neg
sub
aaa
xchg
das
add
mov
lcall
jmp
data16
test
add
mov
xbegin
jbe
add
add
add
clc
or
lock
loope
clc
cmp
add
dec
cmp
xor
add
ljmp
add
jmp
test
clc
dec
lret
fdivl
mov
cld
jmp
mov
hlt
and
clc
pop
repnz
add
clc
cmp
push
add
ret
clc
push
gs
pop
xchg
pusha
add
in
push
leave
pop
add
xor
cmp
add
in
jno
add
add
test
adc
add
clc
addr16
jecxz
shlb
add
icebp
mov
out
mov
pop
std
cli
iret
mov
gs
push
lret
push
xchg
sbb
sahf
inc
add
es
pop
clc
mov
outsb
push
or
xchg
outsb
lods
lods
push
cli
ljmp
add
es
fnstsw
xchg
sbb
clc
cmp
jmp
pop
sub
sub
aaa
xchg
dec
fs
and
add
add
adc
add
data16
sub
repz
clc
cmpsb
clc
or
cld
adc
add
vcvtps2pd
fstps
cld
jmp
aaa
and
insb
aaa
add
add
mov
mov
loope
addr16
mov
add
add
xchg
in
fdivrl
sahf
bound
add
sar
dec
add
push
add
add
push
push
clc
mov
mov
cld
jmp
adc
sub
mov
add
add
sbb
push
add
jmp
data16
cmp
jg
add
cld
popf
lcall
clc
jb
add
test
cli
mov
cld
jmp
lods
cmp
or
clc
pop
icebp
mov
icebp
cltd
pop
dec
mov
add
lock
add
add
xchg
or
inc
clc
call
clc
adc
pop
xchg
lret
sahf
sub
je
clc
lcall
lods
clc
sbb
fidivl
insb
sub
clc
inc
add
jo
add
clc
loope
setl
clc
add
add
mov
fwait
imul
add
cltd
inc
add
ds
clc
xor
xbegin
aas
mov
add
add
cld
jmp
add
and
cwtl
jle
add
mov
enter
xor
add
ss
ret
movsb
pop
adc
clc
data16
imul
and
pop
bound
add
mov
sbb
fdivs
clc
imul
clc
push
cltd
xchg
leave
sbb
insl
faddl
ret
sub
jge
clc
mov
sbb
add
int3
sub
cmp
das
cmp
add
mov
add
ss
ret
pop
cwtl
mov
int
inc
add
pop
adc
add
mov
push
ja
movsl
clc
fcomps
xor
add
clc
clc
cmp
ljmp
das
xchg
mov
clc
in
pusha
add
add
add
push
add
jmp
jg
fidivrs
scas
pop
xchg
rolb
arpl
out
dec
lea
movsl
clc
stos
gs
clc
in
stos
cmp
add
xor
add
add
es
dec
or
inc
add
outsl
fdivrl
pop
loopne
daa
clc
scas
cld
cmp
add
add
daa
clc
sub
add
dec
sub
cmp
and
add
pop
out
outsl
cmpsb
clc
and
aad
add
bound
add
arpl
add
clc
xor
add
clc
int
add
xchg
mov
jg
cld
jmp
adc
andl
fdivr
decl
clc
fnstenv
cmp
clc
rcrl
jbe
popa
add
movsb
clc
scas
imulb
add
xchg
mov
clc
dec
mov
test
lods
stos
mov
repz
icebp
add
add
dec
fildll
repnz
sub
fwait
xor
add
mov
xor
add
fs
fsubrp
and
add
jl
push
xor
pop
int3
or
xor
add
pop
adc
add
out
xchg
ret
clc
cmp
sub
sub
pushf
sarb
clc
outsb
hlt
in
sar
clc
mov
sarb
iret
adc
add
lret
lods
int3
mov
rclb
add
cld
jmp
incb
jmp
add
add
xlat
test
pop
div
jp
adc
add
mov
mov
clc
aas
jge
clc
push
inc
add
and
in
popf
xchg
inc
clc
js
xlat
add
dec
jnp
add
mov
sar
clc
inc
add
cmpsl
clc
adc
add
clc
cmpsl
clc
daa
clc
dec
aaa
leave
jmp
mov
and
add
and
cld
jmp
xor
or
clc
lahf
insb
loope
jo
or
cld
jmp
sub
lods
push
add
lahf
xchg
xor
aad
push
outsl
insb
pop
out
xchg
shrl
dec
xor
add
mov
lods
rcrb
popf
imul
sar
clc
enter
sbb
or
clc
sbb
add
jne
push
cld
jmp
or
add
add
add
add
fldl
leave
into
push
xchg
and
add
jecxz
add
mov
daa
clc
movsl
clc
movsl
clc
pop
add
add
or
cmp
cmp
decl
test
cld
jmp
out
dec
adc
push
add
ret
clc
and
add
cmp
clc
pop
incb
adc
add
add
clc
jno
add
add
push
cmp
jno
popa
andb
add
clc
jge
outsl
mov
div
push
cld
jmp
jg
add
add
leave
xor
add
cs
push
or
clc
ljmp
add
iret
lahf
inc
add
xchg
and
clc
and
fiaddl
add
pusha
add
movsb
clc
mov
inc
add
inc
add
jecxz
das
push
ret
clc
xor
cmp
ds
clc
out
sar
data16
add
lods
add
add
pop
outsb
push
stos
test
pop
scas
sbb
dec
int
add
inc
clc
jecxz
jne
pusha
add
enter
arpl
add
xabort
clc
jne
pushf
sar
dec
pushf
lahf
push
xorl
jmp
sbb
sbb
mov
adc
sub
push
ret
push
sub
nop
std
mov
cli
mov
push
icebp
call
gs
mov
jmp
or
out
test
add
cs
clc
inc
add
pop
and
add
add
mov
cmp
xchg
mov
inc
clc
mov
xor
add
iret
pop
push
xbegin
xabort
inc
clc
jmp
dec
ljmp
add
clc
adc
add
clc
pop
cmp
clc
add
add
cmc
test
clc
dec
xchg
mov
dec
jecxz
xchg
and
ljmp
clc
shl
clc
pop
xchg
adc
add
clc
clc
mull
add
xor
add
loop
pusha
add
scas
mov
jne
xor
add
add
loop
xlat
sbb
clc
clc
in
cmp
dec
ficoms
addb
add
jmp
pop
inc
clc
or
add
dec
jbe
addr16
in
cli
aas
and
add
enter
clc
hlt
test
test
jmp
inc
clc
loopne
sbb
loop
repnz
mov
sub
sub
jmp
pop
jge
or
clc
in
std
push
out
push
clc
pop
ret
mov
ficomps
jmp
cld
jmp
popa
xchg
pop
outsl
pop
leave
adc
clc
push
out
pop
inc
clc
pop
lahf
inc
clc
fistpl
and
addr16
mov
popa
add
loop
mov
sbb
add
mov
clc
add
clc
lock
add
inc
add
dec
je
clc
jg
jmp
insl
scas
jb
add
lea
add
push
mov
add
pop
gs
jns
add
enter
add
add
sub
xor
add
clc
push
inc
clc
push
inc
clc
pop
clc
xor
push
cld
jmp
sub
iret
add
add
clc
in
xor
add
or
clc
pop
sub
lods
data16
push
add
mov
dec
xchg
jg
aas
dec
dec
xchg
jae
add
dec
or
clc
xbegin
mov
cld
jmp
sahf
or
gs
inc
clc
lahf
mov
cld
jmp
andb
jecxz
cmp
loop
push
add
ljmp
dec
sar
pop
fdivs
pop
cld
jmp
outsl
add
sub
add
dec
and
fwait
outsb
clc
mov
outsl
scas
or
add
add
pop
xbegin
cmp
xchg
aad
mov
add
out
out
mov
clc
cmp
pop
hlt
lret
xchg
loop
imulb
cmp
test
xor
add
icebp
pop
push
add
jp
js
fistps
add
movsl
clc
pop
add
add
add
push
cld
jmp
outsb
push
add
adc
add
shl
clc
pop
jecxz
arpl
add
add
idivl
add
leave
daa
clc
aad
jne
cld
jmp
gs
cmp
mov
cld
jmp
sbb
cld
cwtl
shrl
mov
arpl
add
rol
clc
jo
add
add
pop
adc
out
hlt
or
clc
push
push
clc
loope
cs
jbe
xor
add
call
cmp
ljmp
addr16
cmp
pop
clc
mulb
enter
fnsave
pop
add
add
clc
push
popa
add
hlt
push
add
aam
jb
add
add
add
jp
add
add
cmp
or
mov
movzwl
add
cmp
add
add
lcall
mov
jae
add
clc
mov
clc
jl
cmp
cmp
sub
pop
pop
sbb
cwtl
cmp
clc
xabort
clc
xor
or
add
sbb
jns
call
scas
fs
sub
add
mov
clc
jmp
popa
add
daa
clc
es
lret
movsl
clc
ret
clc
mov
icebp
es
push
fldt
jmp
mov
fs
das
or
sysenter
or
nop
hlt
adc
add
and
adc
jmp
sub
pop
xchg
push
push
jp
sbb
into
stos
decl
xchg
lcall
add
inc
add
and
add
or
clc
repnz
clc
sbb
lret
jl
push
cld
xabort
and
cmp
cltd
dec
js
pop
or
add
cmp
add
pop
int
mov
xchg
jl
clc
sbb
movsb
clc
mov
es
and
add
sub
clc
jns
cwtl
call
mov
bound
add
pop
jmp
fs
xchg
sub
add
add
and
mov
ss
ret
cmp
sahf
jl
add
scas
push
jmp
cmp
aam
clc
sti
jae
add
clc
sbb
out
sti
sbb
or
clc
inc
clc
mov
clc
xbegin
hlt
cmp
in
out
mov
lods
jle
add
fwait
mov
dec
jmp
fwait
loope
fldt
jne
xchg
push
jecxz
shlb
add
dec
or
std
in
xor
add
cltd
in
jns
jmp
clc
sub
pop
aas
pop
dec
repz
out
adc
add
lret
push
test
xchg
and
add
add
decl
ss
ret
jge
jle
clc
sbb
or
ret
clc
xchg
sbb
imulb
ror
push
add
repnz
add
adc
je
push
sar
cmp
leave
mov
push
add
ds
inc
add
aaa
clc
shlb
data16
cltd
xchg
xchg
cwtl
pmulhuw
sub
ss
jle
clc
xchg
pushf
push
add
inc
add
push
aaa
xor
clc
push
aad
jp
clc
arpl
add
push
mov
adc
xor
das
pop
clc
mov
clc
push
xor
int
clc
jbe
jg
das
pop
and
add
sar
sub
and
pop
in
xor
pop
clc
sbb
sar
jmp
push
jg
sub
push
cld
jmp
mov
outsb
mov
add
mov
sar
clc
push
add
gs
clc
dec
imul
lcall
aam
ljmp
popa
xor
movsb
pop
pop
pusha
add
clc
lret
add
icebp
jl
mov
jl
add
pop
clc
pop
scas
jne
mov
cld
jmp
sub
fwait
sub
gs
jns
add
mov
adc
add
stos
push
add
add
mov
scas
shrl
mov
sbb
cld
jmp
adc
fadd
clc
sarb
sub
adc
clc
movsl
clc
add
add
clc
mov
imul
push
jmp
xor
aaa
sub
inc
clc
xchg
push
add
out
and
add
add
je
adc
mov
add
add
mov
push
mov
pop
movsl
clc
xchg
xchg
and
mov
inc
add
jmp
rolb
hlt
lods
push
clc
or
lcall
add
add
add
cmpsb
clc
jp
cmp
fisubs
clc
int
pop
push
add
mov
out
push
add
data16
in
pusha
add
fistpl
mov
inc
lock
ret
dec
pop
cmp
dec
jecxz
jb
add
inc
clc
cmp
clc
mov
sub
sub
add
test
loop
ja
lret
mov
es
je
lods
pusha
add
mov
aaa
mov
push
add
sub
clc
dec
inc
add
mov
divl
xor
add
xchg
push
movsb
cld
jmp
jp
or
mov
add
hlt
cld
lret
adc
add
clc
mov
xchg
lea
add
shrb
lods
pop
inc
add
push
add
dec
jl
lret
cmp
add
scas
adc
add
add
cltd
ljmp
cmp
add
clc
mov
add
dec
add
add
clc
lcall
push
ret
xchg
mov
add
sbb
outsl
cmp
outsl
adc
add
and
add
mov
cwtl
pop
cmpsb
clc
rcll
add
jmp
pop
add
add
add
insb
dec
js
mov
xor
aam
clc
movsb
clc
xor
add
loopne
pop
addr16
in
clc
pop
xchg
sbb
sar
jp
test
jg,pt
clc
std
mov
fnsave
add
clc
icebp
dec
int
clc
data16
sub
inc
clc
sbb
std
add
and
push
jmp
push
outsl
test
jbe
add
sar
clc
cmp
clc
pusha
add
iret
stos
mov
sar
test
cmp
lahf
cmp
test
clc
out
addr16
push
mov
add
cld
xabort
test
lret
std
call
add
add
rclb
fnstsw
cmp
aad
clc
addr16
or
jnp
push
push
jmp
sub
or
jno
add
inc
add
cmp
clc
mov
pop
mul
clc
sbb
nop
jno
add
aam
and
lret
push
gs
inc
add
fmul
mov
clc
or
lods
std
adc
add
imul
pusha
add
gs
clc
mov
adc
add
arpl
add
xor
add
mov
add
aam
repz
push
clc
and
add
inc
add
loopne
xor
add
mov
clc
sub
jno
add
ret
clc
cmc
rorb
clc
cmpsl
clc
ds
clc
fsts
pusha
add
or
hlt
inc
add
or
sbb
clc
ja
sub
add
push
add
xor
add
xor
add
jmp
clc
or
jmp
cld
jmp
push
pop
jae
add
test
repz
cld
roll
add
sbb
popa
add
jmp
cld
jmp
aaa
push
adc
cmp
loop
cmpsl
clc
cmp
clc
test
jo
add
add
mov
clc
add
cmp
jnp
mov
add
lods
push
add
cmpsb
clc
xchg
scas
test
aad
inc
clc
inc
clc
movsb
clc
mov
clc
faddl
add
inc
add
push
add
xchg
or
test
lods
and
add
mov
xor
add
adc
add
add
mov
lcall
sub
push
fmulp
cmp
nop
push
add
popf
sub
stos
clc
pop
cmp
out
jbe
clc
mov
clc
jno
add
stc
add
add
add
pop
sar
sbb
push
jns
add
sti
fadds
mov
fsubrs
repz
jmp
jno
mov
and
in
cmp
add
push
add
push
imul
not
cld
jmp
xchg
das
xchg
inc
sub
add
addr16
sub
add
xor
add
lea
add
mov
clc
cmp
add
imul
mov
add
or
aas
xchg
and
add
push
or
pop
and
add
loope
addr16
jns
xor
inc
clc
mov
ja
clc
cmp
stos
sbb
add
cs
inc
clc
mov
lcall
out
ds
xor
bound
add
add
mov
cmp
clc
pop
and
xchg
and
add
cld
jmp
cmp
xbegin
clc
mov
loope
pop
mov
fs
fisttpl
xlat
test
inc
clc
or
add
and
push
fs
out
xchg
dec
lret
clc
arpl
add
add
cmc
bnd
jbe
into
fdivl
lret
enter
sar
cmpsb
sub
mov
add
add
sub
mov
imul
dec
imul
das
sar
push
clc
repnz
or
clc
add
stos
mov
clc
cmpsl
clc
xchg
jns
add
cmpsl
clc
or
inc
add
mov
leave
and
add
add
xchg
dec
xor
clc
fsts
add
clc
in
inc
add
or
imul
mov
mov
add
pop
xbegin
push
clc
imul
clc
sub
add
adc
repnz
fnstenv
pop
jle
gs
mov
std
xor
clc
cmp
cwtl
bound
add
jns
add
xor
add
mov
add
sar
enter
push
cmp
clc
rcr
sbb
mov
cld
jmp
cmpb
dec
clc
nop
xchg
sbb
rcrl
clc
sar
clc
cmp
clc
cmp
mov
dec
adc
add
lea
add
jns
add
scas
xchg
jnp
sbb
mov
mov
ret
clc
rcrb
mov
clc
dec
mov
in
adc
add
inc
clc
lret
icebp
xlat
mov
mov
sbb
mov
and
push
add
sbb
inc
clc
inc
add
fisttpl
clc
dec
sti
jmp
pop
add
mov
in
sbb
es
ss
stos
push
das
fsubs
clc
cli
sub
mov
leave
add
push
mov
in
sbb
dec
adc
and
add
or
addr16
dec
adc
add
rol
clc
lods
fstps
mov
cld
jmp
sub
stos
xor
arpl
add
add
inc
add
sti
mov
dec
inc
add
push
clc
xchg
dec
sbb
mov
add
and
in
lods
decl
test
lods
sub
jl
add
mov
clc
push
mov
cld
jmp
dec
and
clc
cltd
shlb
add
mov
fbld
cmp
clc
cld
jmp
add
pop
pop
jb
add
add
sbb
leave
ret
clc
mov
jg
or
mov
jecxz
movsb
clc
int
insb
adc
add
clc
sbb
inc
add
cmp
idivb
int
xchg
outsb
rorb
adc
test
clc
mov
add
add
gs
movsl
clc
sar
clc
mov
xchg
imul
add
popf
dec
jo
add
sub
shlb
push
ret
push
cmpb
clc
jns
clc
cs
pop
add
sub
adc
add
hlt
mov
add
add
add
jecxz
aam
clc
js
lods
or
adc
add
cld
jnp
push
ds
push
add
cmp
push
int
repnz
xchg
loop
and
add
push
push
cld
jmp
cmp
mov
adc
clc
movsb
clc
fdivrl
cmp
and
add
loop
push
xor
add
addr16
movsl
clc
nop
lahf
xchg
pop
sub
fwait
cmp
cmpsb
clc
rcrb
insl
aas
addr16
push
add
inc
add
and
add
movsl
clc
iret
jnp
push
add
mov
clc
imul
sbb
ret
cld
jmp
and
dec
clc
clc
fwait
outsb
scas
cwtl
jbe
clc
lret
js
clc
dec
aaa
aad
pop
dec
inc
clc
fsubl
add
mov
cmp
clc
clc
sbb
xchg
sbb
clc
push
mov
mov
clc
int
push
mov
cld
jmp
aas
je
sub
cld
sbb
sti
call
gs
or
das
inc
clc
lret
js
mov
mov
add
xchg
out
xchg
pop
cld
fcmovu
mov
add
mov
and
sub
jmp
sahf
aaa
xor
lret
adc
add
add
push
push
add
int
mov
aad
mov
sub
jne
cmc
daa
clc
push
add
xchg
pushf
jg
inc
add
lods
jmp
mov
es
cmp
clc
popf
cltd
adc
clc
outsl
into
cmp
fs
jle
jbe
fcomip
dec
mov
cwtl
add
add
clc
repz
mov
sti
pop
dec
mov
imul
or
add
add
loop
ss
ret
sub
cltd
cltd
std
hlt
push
imull
popa
add
out
pushf
jo
add
clc
inc
add
ja
inc
add
stc
xchg
add
add
flds
add
mov
loopne
or
or
lods
stos
lcall
add
add
add
dec
add
add
and
daa
clc
mov
or
jmp
add
cmp
mov
clc
dec
pop
xbegin
addr16
sbb
add
mov
cmp
add
jno
add
clc
fsubrs
add
mov
popa
add
fistpll
add
add
add
clc
cwtl
imul
push
dec
cld
imul
dec
sub
fs
sbb
xchg
and
add
push
add
sub
add
lock
repnz
clc
rolb
popf
int
outsl
cmp
clc
adc
add
clc
inc
clc
cmp
mov
add
cld
jmp
pop
sub
dec
xor
add
negb
je
cld
jmp
xchg
out
ret
add
outsb
mov
clc
push
add
dec
jecxz
out
insl
jp
movsl
clc
jb
add
xlat
daa
clc
cmpsb
clc
pop
or
sbb
clc
mov
fucom
clc
or
mov
ss
ret
andb
clc
pop
int3
dec
loopne
or
rolb
mov
clc
aad
add
std
and
add
clc
cmp
std
cld
push
xchg
call
gs
mov
out
hlt
jge
movsl
clc
xor
add
mov
add
mov
add
mov
jmp
mov
add
jns
jge
dec
std
xchg
aaa
cmp
add
adc
add
push
mov
add
sbb
test
testl
xchg
call
jge
clc
das
sar
add
add
clc
fsubs
clc
aam
clc
insl
cs
add
daa
clc
mov
mov
push
adc
add
mov
lret
clc
push
addr16
data16
jp
add
xor
add
cli
mov
add
xchg
cwtl
sub
clc
push
add
pop
push
movsb
cld
jmp
fwait
or
lret
clc
es
cltd
xchg
sbb
add
js
mov
pop
sbb
xchg
lahf
push
add
insb
or
ja
mov
mov
mov
clc
ds
in
aas
jg
clc
sub
add
push
mov
into
cmp
add
add
add
popa
add
push
cmpsl
clc
cmp
add
cmp
add
shlb
clc
mov
inc
add
gs
arpl
add
clc
data16
jle
sahf
mov
data16
fscale
das
mov
inc
add
ret
clc
dec
xabort
add
push
add
je
in
insb
pop
xor
add
lret
adc
rorl
dec
jne
and
add
sbb
scas
cs
cld
mov
add
sbb
call
cld
jmp
insb
shrl
sub
mov
jmp
sahf
data16
lahf
imul
cmp
call
call
enter
insb
sub
add
insb
stos
sub
and
add
clc
cli
scas
jns
out
icebp
fistps
adc
add
add
mov
add
inc
clc
mov
mov
adc
add
add
inc
clc
mov
pop
scas
loope
hlt
and
add
mov
ljmp
add
inc
add
cmp
aaa
or
test
leave
jl
pusha
add
mov
clc
mov
imul
call
jns
lods
fisubrl
jb
add
js
in
push
jne
xor
add
dec
sub
clc
sub
clc
xchg
xor
add
add
mov
test
lods
sahf
xchg
xchg
add
add
pop
sub
and
add
aad
sarb
clc
jecxz
xchg
sbb
clc
test
sub
pushl
cld
jmp
adc
sbb
out
popf
arpl
add
ja
call
mov
cld
jmp
imul
fs
push
add
push
jmp
sbb
call
clc
test
mov
xor
cld
jmp
sub
xchg
cltd
lcall
sbb
bound
add
clc
xor
add
add
nop
out
cmpsl
clc
jbe
sbb
clc
lock
add
add
mov
cs
sbb
ja
clc
add
enter
pop
clc
out
adc
add
push
cld
jmp
sub
clc
inc
add
gs
push
clc
pop
and
add
add
mov
clc
shll
push
cld
jmp
sub
inc
add
in
sub
mov
add
xor
add
insb
int3
es
outsl
imul
pop
mov
out
adc
clc
dec
xor
add
add
clc
and
pop
pop
clc
aam
mov
mov
clc
push
pop
jne
ret
clc
sti
repnz
enter
push
ret
outsl
outsl
push
add
xabort
fdivrl
add
imul
inc
add
cmp
cmp
clc
dec
mov
clc
insb
add
add
inc
clc
xor
in
cmp
cld
jmp
das
fwait
imul
test
ss
ret
xchg
mov
add
sub
add
xchg
dec
insb
add
add
clc
pusha
add
fucompp
imul
adc
add
cld
jmp
jno
push
dec
call
cld
jmp
dec
cmp
jno
add
hlt
sub
clc
push
add
lock
clc
aad
clc
mov
adc
add
clc
push
add
fs
call
call
stos
and
repz
cwtl
jle
add
mov
xor
add
sbb
pop
sbb
add
add
ffree
clc
pop
push
loopne
and
add
pop
mov
fisubrl
clc
loopne
xor
add
clc
cld
cmp
mov
dec
add
jmp
sbb
clc
sar
clc
xor
jo
add
dec
inc
clc
enter
jg
cld
jmp
dec
data16
clc
roll
add
add
add
add
idivl
and
add
jo
add
clc
js
add
lret
aas
add
add
push
add
cld
jmp
mov
clc
out
lahf
pop
mov
jmp
inc
test
and
clc
in
ret
clc
push
jns
clc
mov
out
add
xlat
imull
fs
cmp
clc
sub
add
push
add
jne
fxch
mov
mov
clc
stc
xbegin
add
add
xchg
jo
add
js
loopne
xchg
sbb
push
shrl
int
add
xbegin
add
cmp
stc
ret
clc
addr16
cmp
add
cld
jmp
inc
push
mov
das
or
fs
mov
mov
xor
add
add
lret
das
and
add
cs
sub
clc
push
add
sbb
stos
dec
loopne
icebp
push
add
add
sub
movsb
clc
je
repnz
call
clc
push
leave
cld
jmp
dec
cmp
add
pop
cmp
clc
push
enter
add
sub
add
clc
shr
je
test
in
cmpsb
clc
imul
mov
es
xchg
or
clc
jp
xchg
ud2
sub
clc
aas
gs
add
add
mov
add
add
insl
ret
clc
in
loop
hlt
sti
lods
dec
shl
clc
mov
frstor
add
cmp
popf
mov
add
add
add
outsl
jmp
push
add
dec
xlat
aas
push
sub
sbb
mov
clc
adc
rcl
cmp
clc
add
arpl
add
cmp
clc
add
clc
js
jbe
adc
in
jnp
inc
add
sar
sub
or
clc
loope
mov
add
popf
cld
aad
jno
add
enter
stc
fistpl
scas
insb
ljmp
clc
jge
clc
pop
add
add
add
sar
push
add
nop
mov
clc
addr16
cmp
add
clc
lock
cmp
add
fdiv
mov
adc
pop
push
push
ss
ret
dec
and
add
outsl
popa
add
cld
xlat
adc
add
add
fdiv
adc
add
sar
inc
add
cmpsb
clc
pop
ljmp
mov
cmpsl
clc
cld
sahf
stos
cli
leave
dec
pop
clc
and
inc
clc
or
mov
paddb
jnp
clc
arpl
add
jge
clc
dec
xchg
push
sar
push
clc
mov
fldt
data16
daa
clc
data16
cld
jae
add
dec
jge
push
jmp
jp
pop
adc
outsl
push
cld
jmp
push
add
add
clc
aas
loop
imul
aam
clc
pop
jb
add
dec
sub
shrl
add
fisubs
clc
push
add
ljmp
sahf
push
add
fs
imul
sar
clc
rcl
dec
cmp
sub
clc
push
and
add
dec
xor
add
pop
xbegin
adc
add
clc
pop
mov
xchg
inc
clc
cmp
clc
inc
clc
std
cmpsb
clc
loopne
cmp
add
outsb
lea
out
cltd
cmpsl
clc
push
lock
call
jg
lahf
push
nop
xbegin
push
and
push
clc
sbb
jmp
add
mov
ret
mov
add
sti
popa
add
dec
push
popa
add
iret
daa
clc
mov
push
or
jmp
fwait
inc
inc
testl
clc
cmp
or
cmpsb
clc
repnz
clc
and
add
and
add
add
clc
sub
jns
fs
add
lcall
jmp
movsb
cmp
add
push
add
mov
push
cld
add
add
sbb
ret
clc
fadd
clc
shr
cmp
cmp
icebp
int3
stos
cmp
cmp
adc
add
xchg
mov
fisttps
add
cmp
clc
push
and
add
and
lcall
jle
clc
insl
and
add
or
add
clc
push
loopne
stos
mov
into
push
cmpsl
clc
xbegin
es
push
test
cld
jmp
sub
outsl
sub
ret
clc
push
add
push
add
pushf
push
clc
adc
add
add
fnstcw
sar
cli
cmp
bound
add
add
repz
add
int3
ret
stos
cmp
add
aas
loope
xabort
add
add
add
mov
jmp
imul
xchg
fdivr
decl
sub
fwait
jp
cli
push
inc
add
pop
jo
add
add
jmp
or
mulb
add
sbb
pop
mov
add
ss
mov
jecxz
loope
nop
test
add
test
aaa
aam
add
xor
add
shrd
sub
fs
sub
add
cmp
or
xchg
aam
sbb
rcrb
nop
bsf
add
fimull
jo
add
mov
test
jmp
nop
test
sti
int
cmp
lea
add
inc
add
xbegin
out
push
xchg
mov
out
std
iret
mov
xor
add
xor
ret
clc
sub
leave
daa
clc
es
xchg
out
inc
clc
iret
pop
jno
add
xor
add
add
lods
shrl
sub
xor
fnstcw
clc
xor
add
movzwl
cld
jmp
jp
jg
add
mov
out
xorps
popa
add
or
inc
clc
inc
add
sbb
clc
xchg
lods
sbb
mov
clc
add
add
add
call
clc
movsl
clc
cs
out
lock
jb
add
push
push
cld
jmp
cmp
add
fldcw
sbb
outsb
mov
loope
inc
add
sub
sub
clc
adc
add
mov
push
inc
clc
stc
fnstenv
pop
lret
and
add
cli
in
filds
add
lret
adc
xchg
adc
add
add
clc
out
fsubrl
add
xchg
jae
add
add
xchg
cmpsl
clc
clc
sub
dec
cmc
sub
push
clc
mov
add
jb
add
popa
add
or
add
cmp
out
call
push
cs
add
and
popa
lods
rcrl
clc
jne
dec
mov
push
add
pushf
cli
push
jp
push
add
push
clc
mov
xor
add
push
add
lcall
jp
add
mov
add
adc
add
int3
cmpsl
clc
adc
add
add
mov
ret
clc
fldl
ja
clc
pushf
ret
clc
ret
out
addr16
pusha
add
pop
mov
lret
test
in
xor
add
fs
cmpsl
clc
fwait
repnz
clc
inc
clc
inc
add
movsl
clc
xor
clc
mov
mov
clc
bound
add
lsl
add
add
mov
add
cmp
xchg
sbb
add
add
stos
loope
push
jae
add
clc
bound
add
testl
pop
pop
negl
add
out
xor
add
jle
push
insb
fistps
daa
clc
lahf
int
add
shrl
mov
arpl
add
cmp
add
and
add
clc
mulb
aas
cmp
add
cmp
mov
add
adc
add
clc
jbe
clc
pop
cld
push
clc
sbb
inc
clc
cmp
and
xor
bound
add
clc
testl
lock
add
add
clc
adc
add
mov
add
dec
cli
sub
clc
push
cld
xchg
in
in
push
cmpsb
clc
ljmp
xor
add
clc
jg
add
add
add
mov
bound
add
add
add
add
add
xchg
and
add
sbb
popf
jecxz
and
add
add
inc
clc
add
cmp
and
add
sti
popa
add
lret
mov
sub
clc
mov
clc
dec
pop
loopne
push
inc
add
jns
clc
mov
cmc
sbb
clc
outsb
in
mov
mov
clc
push
into
mov
mov
fdivrl
imul
iret
fwait
pop
mov
xor
add
push
add
cmp
lods
fbstp
xor
push
pop
mov
push
cld
jmp
test
xchg
xchg
or
pop
mov
mov
clc
sbb
add
sub
inc
clc
outsl
fwait
pop
es
mov
clc
xchg
fistpl
clc
push
add
xchg
xchg
push
add
iret
and
add
imul
clc
js
add
repnz
jp
add
fidivrl
jmp
sub
mov
add
clc
xchg
pop
or
add
pop
fdivrs
mov
ljmp
repnz
adc
add
cld
pop
inc
add
add
add
loope
jg
cmp
gs
jmp
push
jne
cld
jmp
loopne
jns
add
add
shlb
add
push
add
cs
xchg
pop
add
add
add
fwait
lcall
clc
sbb
arpl
add
clc
push
stc
ret
clc
popa
add
cmp
pop
mov
clc
push
add
test
add
repnz
xchg
out
jl
inc
add
rcll
add
mov
jbe
call
push
sub
mov
data16
pop
inc
clc
inc
add
jecxz
cmpsb
clc
lods
sub
lods
push
xbegin
add
pop
clc
pop
es
sub
jg
mov
xlat
repnz
add
add
clc
mov
in
arpl
add
add
mov
rcll
add
cmpsl
clc
inc
clc
or
and
add
negb
rcll
add
lods
cwtl
mov
lods
iret
cltd
sar
sti
movsl
clc
add
add
or
jmp
add
mov
jno
add
std
cli
ss
jno
add
clc
lret
sahf
dec
jns
push
add
jb
add
mov
in
clc
mov
and
add
add
jnp
add
push
add
jmp
add
das
xchg
jl
cmp
clc
out
ds
mov
sbb
dec
or
mov
clc
js
lea
popf
dec
cmp
gs
xabort
add
or
cs
adc
mov
leave
idivb
jne
sub
jbe
add
shll
outsl
cld
jmp
sub
mov
add
xchg
outsb
fwait
movsl
clc
sub
add
add
bswap
dec
testb
enter
add
jge
mov
lods
jle
cmpsl
clc
call
loope
data16
sbb
add
push
clc
mov
mov
clc
scas
or
clc
adc
add
clc
push
fdiv
mov
pop
sub
test
lret
push
gs
jmp
jg
add
bound
add
xchg
ds
clc
lea
clc
cli
or
add
or
mov
add
cmpsl
clc
push
add
out
pop
mov
gs
sar
jbe
add
jp
repz
pusha
cld
jmp
xor
pop
inc
add
repz
clc
iret
movsb
clc
jmp
add
ret
clc
mov
mov
xchg
ret
cmp
jp
add
shll
add
pusha
add
cmpsl
clc
lea
js
clc
jmp
enter
inc
clc
cltd
lret
fwait
xchg
outsb
or
clc
and
add
add
add
xchg
and
clc
enter
frstor
add
add
mov
in
cmp
cmpsl
clc
ret
clc
and
add
dec
add
add
add
and
cmp
cmc
js
add
cmp
xchg
fsts
add
xor
add
js
sti
je
push
mov
cld
jmp
movsb
sub
clc
pop
inc
clc
xabort
rorb
clc
and
pop
mov
nop
out
push
clc
pop
mov
mov
icebp
push
add
lcall
add
push
add
repnz
add
addr16
xchg
mov
mulb
add
jae
add
xchg
jl
clc
add
jae
add
daa
clc
mov
fwait
mov
mov
add
sbb
dec
stos
int
loope
pop
outsl
mov
jmp
es
cwtl
es
xchg
aad
icebp
stos
adc
add
add
aaa
cmc
dec
pushf
push
mov
add
out
cld
sbb
je
sub
jmp
sub
add
dec
inc
add
mov
jne
xbegin
jp
pop
lret
jbe
clc
addr16
and
add
add
add
cmp
jno
add
add
sti
jg
sbb
clc
mov
aam
clc
fimuls
ret
clc
mov
or
clc
in
cmc
repz
dec
cmp
ret
clc
incb
add
pop
out
push
fscale
xor
add
adc
decl
cld
jmp
adc
xor
sbb
fs
cmp
add
add
and
inc
add
lahf
nop
aad
scas
jge
clc
jecxz
cs
clc
and
xchg
xor
add
push
add
js
data16
lock
clc
jge
clc
fs
fidivrs
insb
mov
or
cmp
clc
cmp
fisttpll
cmc
frstor
add
test
add
inc
add
inc
clc
out
mov
fcomp
int
daa
clc
sub
add
pop
lock
xor
add
sarl
add
xchg
add
into
mov
inc
add
lea
jmp
jno
push
nop
adc
push
xor
add
add
pushl
cld
jmp
push
adc
add
adc
pop
clc
sar
outsb
aad
movswl
cld
jmp
push
xor
test
aam
clc
pop
jne
clc
mul
clc
std
cmpsl
clc
jns
add
or
into
inc
add
scas
xchg
and
add
cmp
clc
mov
add
clc
jmp
sub
push
fs
adc
add
out
and
add
clc
and
add
jmp
pop
loop
jge
pusha
add
dec
nop
cmp
decl
cld
jmp
add
lock
leave
pop
clc
jns
sub
dec
and
push
loop
sub
jnp
shll
sbb
add
in
cld
xchg
lret
cmp
add
and
add
and
rol
clc
sbb
lahf
xchg
incl
sub
cld
jmp
cmp
test
fwait
jbe
test
mov
clc
rep
clc
mov
sbb
cld
jmp
and
inc
push
clc
shrl
clc
movsb
clc
mov
outsb
adc
add
pop
inc
clc
movzbl
dec
and
sbb
jne
ss
ret
adc
and
dec
inc
add
test
xchg
cmpsb
clc
lods
cmp
in
enter
adc
xor
add
clc
into
mov
int
bound
add
clc
xchg
mov
mov
out
daa
clc
iret
cmp
cmp
sbb
add
scas
cmp
clc
cmpsb
clc
cmp
out
push
push
mov
add
add
add
cmpsl
clc
pop
das
data16
imul
dec
lcall
in
adc
dec
dec
or
fs
paddusw
push
push
add
jp
cmp
jbe
add
out
dec
ds
cwtl
call
sbb
clc
clc
add
add
fisubs
add
loopne
dec
sahf
out
dec
loope
xchg
add
clc
jb
add
clc
leave
xchg
icebp
pushf
je
pop
cmp
outsb
push
dec
jge
gs
cmpsb
clc
enter
insb
push
enter
out
or
clc
loopne
scas
add
add
mov
mov
out
pop
inc
add
clc
loopne
add
add
add
or
cwtl
jle
add
int
mov
add
dec
movsl
clc
mov
cld
mov
cwtl
push
and
add
add
mov
int3
aam
inc
add
xabort
jl
clc
cmp
mov
cmp
add
mov
outsb
dec
sub
mov
clc
jno,pt
add
mov
repz
out
sbb
add
push
jne
icebp
push
add
adc
add
xchg
test
or
cmp
mov
add
sub
enter
rclb
mov
add
mov
jge
clc
clc
arpl
add
mov
scas
aaa
loop
fdivl
add
add
xor
add
cmp
xor
add
add
add
test
in
jo
add
add
fwait
sub
ficomps
ud2
push
cmp
add
push
call
clc
cmp
mov
clc
test
sub
jb
add
add
imull
stc
fwait
out
dec
pop
or
add
add
bound
add
cmp
add
mov
clc
das
sar
cmp
push
imul
lahf
pop
sub
xor
add
adc
add
xlat
das
aad
push
into
lods
imul
clc
jno
add
loope,pn
sbb
add
cmp
lods
cmp
jne
and
add
add
pop
jo
add
add
dec
inc
clc
xchg
mov
cli
popf
xabort
clc
jne
outsl
and
add
in
idiv
cmp
inc
clc
pop
es
gs
punpckhbw
add
dec
inc
add
cmp
lcall
and
add
add
mov
or
enter
inc
clc
push
test
adc
lret
add
sar
mov
loop
loop
mov
add
sahf
mov
and
add
push
lcall
and
add
xor
add
jbe
clc
push
add
adc
add
add
aam
fwait
pop
xor
add
mov
pop
cld
hlt
insb
mov
rolb
add
nop
pop
pop
cmpsb
clc
sbb
loope
push
add
push
clc
jecxz
adc
add
clc
mov
push
adc
add
sbb
bound
add
pop
jo
add
pushl
add
cwtl
xadd
data16
leave
sbb
adc
arpl
add
lock
mov
add
mov
clc
xchg
enter
clc
popf
mov
or
gs
out
imul
sahf
out
mov
jle
add
add
add
cmp
mov
dec
adc
add
add
lcall
test
mov
cmpsb
clc
or
clc
sub
in
aam
dec
lret
add
add
add
add
dec
or
adc
add
add
out
test
repnz
lcall
clc
dec
sub
xchg
imul
loop
add
add
dec
loope
lock
mov
clc
enter
clc
pushf
outsl
push
jl
clc
imul
hlt
je
jne
cmc
inc
add
adc
dec
pop
inc
clc
icebp
jnp
je
push
lods
int
iret
push
rcrb
add
pop
mov
or
or
jbe
mov
pop
fildll
clc
pop
std
adc
add
idivb
ret
adc
add
jo
add
add
movsl
clc
in
and
add
jle
clc
push
lcall
aaa
add
add
ja
clc
push
cltd
cmp
add
xchg
stos
repnz
clc
out
lods
jge
je
clc
clc
pop
sar
dec
jle
fistpll
loop
or
sti
cmp
push
clc
insb
lahf
int
clc
aad
sarb
loop
push
add
lods
inc
clc
lods
cmp
add
add
inc
clc
bound
add
pop
hlt
jbe
aam
ds
or
clc
rcl
imul
cld
cli
mov
clc
xchg
xchg
and
add
clc
adc
add
sub
sub
push
loopne
shl
clc
std
pop
popa
add
mov
add
fisubs
add
cwtl
test
cmp
inc
add
adc
add
or
push
mov
in
cmpsb
clc
sbb
out
or
clc
in
imul
clc
xchg
scas
mov
sub
add
jmp
sbb
out
push
std
mov
clc
jns
push
add
cltd
fstpl
xbegin
pop
add
add
push
hlt
insl
adc
add
push
add
dec
add
mov
clc
sar
in
fld
clc
das
rcl
jb
add
dec
into
in
test
add
mov
jl
xchg
jbe
clc
mov
and
fisubrs
push
clc
daa
clc
jo
add
add
clc
and
add
clc
imul
jl
clc
sbb
popa
add
inc
add
xor
add
add
adc
add
clc
out
xchg
cli
cmp
clc
test
clc
clc
add
add
clc
mov
clc
adc
add
jo
add
jns
or
jmp
mov
push
fdivrs
test
cli
scas
cli
mov
inc
add
dec
add
add
cmp
scas
cld
sahf
add
add
add
mov
addr16
inc
clc
movsb
clc
icebp
addr16
inc
clc
and
add
xlat
mov
add
shlb
add
test
inc
add
scas
clc
iret
xlat
cwtl
cmp
add
pop
into
mov
mov
add
jge
ret
enter
add
add
mov
sbb
xchg
mov
je
push
or
mov
clc
test
std
sub
mov
cmp
mov
add
and
add
stos
testb
loop
sar
cld
incb
popa
add
or
clc
jl
add
loopne
sbb
add
add
add
clc
jnp
ja
clc
bound
add
or
push
add
jno
add
add
cmp
scas
fisubrl
sbb
repz
sbb
push
sbb
sub
xchg
insl
and
add
clc
stc
push
shll
add
push
decl
add
popa
add
adc
add
clc
call
vmovups
add
fiaddl
clc
addr16
sbb
xor
add
push
push
dec
adc
aaa
xor
add
add
sar
xchg
lret
inc
clc
or
lret
xor
add
dec
into
pop
xchg
sti
outsl
pop
ds
cmpsl
clc
insb
pop
xbegin
dec
fstl
add
add
mov
gs
mov
cmp
mov
add
out
clc
test
and
add
aas
aad
mov
mov
fwait
out
mov
lods
dec
insb
xlat
fcoms
jbe,pn
cld
sar
mov
add
fwait
je
nop
lcall
fs
addr16
fists
clc
pop
cld
shlb
clc
shl
clc
in
mov
jge
add
in
xchg
mov
mov
clc
and
add
clc
ret
clc
mov
js
clc
lods
enter
clc
sbb
and
and
add
or
add
decb
clc
mov
xchg
lea
xchg
inc
add
cmp
xor
add
mov
xor
add
clc
and
add
clc
cmp
test
clc
fwait
sbb
add
add
xor
add
jp
add
out
mov
clc
and
xchg
jae
add
jae
add
call
clc
jbe
add
inc
clc
imul
ds
cli
adc
clc
fwait
gs
das
loop
imul
mov
add
sahf
pusha
add
rcrl
add
or
clc
fcoms
sahf
dec
xor
sar
nop
divl
add
add
xchg
out
outsb
adc
add
add
add
or
insl
cmpsb
clc
sbb
clc
lret
inc
clc
push
clc
bnd
add
popa
add
and
add
daa
clc
mov
sbb
xchg
aad
cli
cmpsb
clc
sub
cmp
lahf
pop
mov
add
or
loope
aam
xor
add
pop
cmp
clc
mov
xor
add
inc
clc
sar
add
cmpsb
clc
std
pop
sub
iret
push
stc
xchg
dec
pop
fdivr
mov
clc
sbb
fs
jo
add
add
jle
add
lock
clc
lea
add
aas
mov
dec
out
pop
and
add
dec
xchg
sbb
clc
pop
data16
cmpsb
clc
inc
add
ss
mov
out
adc
add
clc
bound
add
inc
add
mov
dec
test
xor
fdivrs
mov
add
movsl
clc
adc
data16
cmp
add
dec
repnz
add
decl
sub
mul
clc
shll
add
mov
add
and
add
add
add
clc
sub
out
aas
cmp
add
test
xchg
or
mov
add
ja
clc
mov
mov
enter
or
add
or
pop
hlt
pop
push
mov
push
call
xchg
jle
add
fucom
clc
sar
sub
add
clc
inc
clc
aas
lret
jmp
clc
or
popa
add
shll
sbb
sbb
test
cmp
add
cmp
cmp
mov
add
dec
fsubp
clc
sti
ja
nop
dec
jp
clc
sbb
test
out
xbegin
add
ljmp
bound
add
cmp
ja
clc
push
push
hlt
jp
daa
clc
in
mov
clc
insl
pop
loope
xchg
repz
add
add
add
and
add
sub
clc
mov
mov
pop
loopne
stos
test
mov
fnstenv
das
incb
mov
leave
test
aam
clc
jl
add
gs
sbb
in
add
add
inc
clc
push
pop
popa
add
xchg
sbb
out
and
add
pop
xchg
negl
cmpsl
clc
mov
add
cmp
add
sar
clc
add
add
cmp
in
lods
jae
add
clc
iret
inc
add
lahf
and
pop
pushf
gs
adc
add
add
ret
clc
daa
clc
and
add
mov
add
mov
clc
add
in
and
mov
clc
filds
and
add
sbb
iret
jb
add
test
push
add
fwait
es
adc
clc
xor
add
add
push
clc
cmp
add
jg
xchg
test
add
push
or
mov
pop
sbb
mov
add
xchg
and
lcall
xchg
inc
clc
lahf
fcoml
jnp
add
mov
push
mov
clc
mov
clc
cmp
daa
clc
dec
setns
add
sbb
and
jo
add
add
clc
pop
mov
jge
jne
or
outsl
add
add
cmp
push
add
jge
add
in
fildll
lahf
call
cmp
add
clc
jmp
xchg
out
cmpsb
clc
outsb
fnstenv
push
add
in
or
popl
test
jae
add
clc
movsl
clc
sar
clc
data16
mov
pop
dec
add
add
nop
sub
add
add
xor
pop
shll
add
mov
add
adc
add
clc
dec
or
add
mov
and
add
add
adc
add
add
pop
and
add
add
cld
mov
mov
fldenv
add
mov
mov
fldenv
rcr
sub
add
pushf
dec
cmp
rcrb
sbb
gs
dec
jns
das
inc
clc
sti
mov
js
mov
cltd
mov
lock
clc
lods
sar
popa
add
divl
add
adc
add
add
cmp
into
xchg
jne
clc
nop
pop
dec
or
hlt
xor
add
mov
add
mov
ss
clc
imul
clc
push
add
adc
add
pop
adc
add
add
adc
add
into
arpl
add
clc
xor
add
out
add
add
leave
stos
inc
clc
xor
add
sahf
stc
in
ljmp
clc
rorb
clc
data16
js
cmpsb
clc
mov
hlt
jbe
mov
fs
xlat
adc
add
jmp
and
inc
add
jbe
sar
clc
dec
xchg
bound
add
add
add
jo
add
pop
inc
add
hlt
ret
xor
add
add
dec
loope
fistpl
add
out
loop
mov
dec
call
mov
bound
add
add
clc
mov
add
adc
add
add
out
addr16
mov
dec
adc
add
arpl
add
cmp
clc
pop
lret
mov
add
xchg
add
add
dec
push
mov
xchg
das
push
add
fldcw
cmp
repz
das
insb
fcmovu
nop
in
xchg
fidivl
pusha
add
xchg
or
mov
or
cltd
mov
jnp
cmp
clc
cmp
addr16
add
mov
and
add
add
cmp
add
fsubl
clc
leave
add
add
mov
add
jb
add
or
add
add
clc
or
add
clc
xor
add
add
je
imul
sar
or
add
sub
clc
dec
imul
fistpll
xchg
movsl
clc
fwait
int3
cli
push
add
cmp
clc
push
add
fdivs
push
add
aad
clc
in
sub
insl
mov
clc
dec
nop
adc
add
jns
and
add
sbb
in
mov
add
dec
mov
push
clc
es
das
arpl
add
clc
das
lret
xchg
push
adc
add
fs
mov
push
clc
icebp
lahf
mov
fistpl
and
add
data16
inc
add
cmp
testl
cmp
aad
clc
sarb
clc
xor
add
sub
clc
gs
push
add
add
pushf
xchg
inc
add
notb
sbb
clc
cld
jb
add
mov
negb
rorb
shll
add
addr16
sbb
add
mov
add
add
pop
and
sub
push
jg
clc
addr16
jne
or
leave
jnp
ljmp
pusha
add
in
sar
clc
mov
lock
adc
add
push
mov
add
in
in
mov
add
pushf
cs
xlat
mov
add
mov
clc
insb
adc
cwtl
sub
add
sbb
fsubrs
fsubrs
fdiv
clc
jl
add
mov
das
mov
movsb
clc
and
add
cmp
add
push
xchg
mov
clc
xchg
sub
add
into
leave
sbb
clc
gs
lods
cmp
clc
mov
clc
pop
into
sbb
clc
push
imulb
cmp
sar
pop
clc
dec
jne
add
sti
and
mov
clc
mov
leave
cmp
mov
cmp
and
clc
xbegin
clc
call
mov
popf
pop
push
xchg
js
clc
jl
mov
add
lret
xor
add
or
and
add
clc
mov
sbb
add
mov
test
add
dec
adc
add
add
adc
add
rcrl
jmp
xchg
fiaddl
cmp
dec
pop
mov
stos
lret
jmp
bound
add
pop
sub
in
adc
jp
sbb
jl
clc
xchg
sub
inc
add
insb
push
aam
into
xchg
xchg
inc
clc
add
scas
cmc
pop
pop
mov
mov
jmp
or
add
mov
clc
fisubl
inc
add
xchg
popf
mov
clc
popa
add
sbb
clc
add
add
bound
add
negb
std
mov
out
mov
clc
sub
sub
add
add
add
clc
popa
add
and
add
clc
cmp
adc
add
add
test
imul
dec
add
add
or
out
xor
add
cwtl
out
adc
add
sbb
scas
xor
add
jo
add
add
nop
add
rol
clc
dec
repz
clc
fucomip
je
clc
pop
sbb
xor
insl
in
mov
test
jle
push
add
add
add
jno
add
add
dec
imul
pop
clc
jmp
xlat
cltd
xchg
loop
push
clc
jns
clc
adc
add
add
lcall
lret
lods
loope
rcrb
mov
pop
mov
das
das
push
add
mov
or
add
dec
and
aas
jbe
sbb
add
dec
lahf
add
pop
push
clc
mov
aad
clc
int3
lock
add
mov
clc
adc
add
mov
push
pop
rorb
pop
xor
pop
lahf
jl
add
mov
xchg
or
loopne
fildl
test
dec
mov
inc
clc
addr16
fwait
and
add
add
add
sub
clc
xbegin
jle
jmp
clc
gs
scas
inc
add
jae
add
push
cmp
add
rcl
add
add
stos
pop
cmp
cmpsl
clc
or
popf
dec
and
add
clc
sti
inc
clc
cmp
push
mov
add
std
pushf
iret
loopne
cmp
clc
xor
add
stc
in
mov
add
push
in
pop
xchg
pop
jo
add
sub
pop
outsl
xor
add
push
inc
add
pop
xchg
popa
add
testl
pop
xlat
dec
sar
je
out
cmp
clc
outsb
bound
add
cmp
js
add
lahf
out
sub
mov
clc
or
jmp
mov
push
dec
push
xchg
xchg
jg
clc
jl
add
and
add
movsb
clc
ja
mov
add
add
clc
dec
and
add
add
pusha
add
and
add
add
stos
jne
clc
out
xchg
sbb
add
xchg
lods
sar
xchg
in
out
mov
scas
test
clc
sub
cmp
das
dec
daa
clc
pushf
aas
out
pop
out
lods
jle
out
lret
mov
clc
xchg
fstpt
clc
xor
add
clc
jo
add
add
loope
cmpsl
clc
mov
clc
loop
adc
clc
jle
lods
dec
and
add
clc
into
data16
dec
ret
clc
cmp
test
fsubl
jne
clc
fdivrl
aam
fistpll
sbb
dec
data16
and
add
ret
cmp
clc
xor
add
mov
clc
cmp
add
add
cmp
add
pop
shlb
clc
xor
add
pop
cmp
inc
clc
sbb
inc
clc
out
pop
es
jo
add
out
inc
clc
in
fldt
xbegin
stos
dec
dec
dec
inc
add
in
inc
clc
mov
clc
cmpsb
clc
fwait
dec
jae
add
into
push
push
xor
push
outsl
outsb
lahf
jle
fimull
add
adc
add
xchg
mov
inc
clc
ds
and
loopne
cmp
xchg
lcall
add
mov
das
add
add
clc
addr16
pop
fs
in
push
clc
sub
add
ljmp
in
ret
clc
insb
push
out
mov
xchg
movsl
clc
jmp
mov
add
clc
dec
fists
add
sub
add
mov
sbb
inc
clc
lods
push
add
jp
clc
aas
push
push
out
std
nop
xor
add
clc
roll
clc
sub
dec
stos
xchg
mov
clc
pop
fs
sbb
add
test
js
mov
jae
add
push
imul
add
nop
pop
clc
and
adc
add
sar
es
cvtpi2ps
outsb
outsb
sub
mov
add
pop
clc
test
mov
int3
jge
sbb
xchg
jecxz
int
clc
mov
pop
inc
add
jbe
in
jl
ret
clc
xor
clc
mov
cmpsl
clc
ljmp
push
js
adc
clc
lret
arpl
add
add
icebp
or
fsubrs
add
or
cld
xchg
sub
adc
add
add
mov
repnz
add
pop
dec
aad
int
shrb
aas
test
clc
in
xchg
dec
sar
popa
add
hlt
cmp
inc
clc
ljmp
sub
xlat
add
add
jp
ljmp
mov
xor
add
add
dec
inc
add
into
or
cmp
clc
imul
push
inc
clc
pop
push
add
loope
sub
push
and
add
clc
jmp
aas
ret
dec
int
sub
int
mov
imull
mov
cmc
daa
clc
rcrl
std
mov
aam
idiv
and
mov
test
icebp
ds
add
outsl
fbld
add
clc
mov
imul
mov
aaa
mov
add
add
and
add
jae
add
add
mov
mov
sar
insb
push
sbb
sbb
inc
add
cmp
ja
jmp
add
fs
push
jo
add
mov
add
and
add
add
test
or
mov
add
clc
pop
mov
add
mov
add
dec
jno
add
hlt
popf
aaa
std
outsl
pop
xchg
mov
add
pop
and
add
add
imul
lcall
add
mov
clc
mov
jbe
push
add
push
clc
adc
add
shlb
xchg
pusha
add
mov
add
mov
add
test
inc
clc
je
add
sub
clc
xchg
icebp
push
bound
add
add
cld
popf
add
add
add
add
add
add
es
xor
add
clc
in
sub
or
clc
daa
clc
pop
cmp
add
sub
stos
cmp
adc
mov
into
testb
iret
incb
add
dec
mov
clc
nop
aad
clc
mov
cmp
clc
mov
mov
mov
addps
clc
ss
leave
add
sahf
mov
gs
mov
add
out
test
cmp
cmp
enter
pop
fisubs
add
fs
int3
fisttps
xor
add
psubsb
test
or
stc
pop
jecxz
test
sarb
push
sar
mov
pop
jecxz
loopne
stos
adc
add
icebp
mov
mov
cmc
and
add
clc
lods
cli
jns
xor
data16
xchg
dec
and
div
sbb
clc
sar
pop
outsl
mov
scas
cmc
or
cmp
push
sar
adc
add
or
adc
cmp
pop
xchg
cmpsb
clc
push
jecxz
bound
add
shr
leave
sbb
add
imul
clc
int3
jb
add
sbb
jp
mov
xor
add
mov
add
lret
fists
adc
add
clc
mov
pushl
cli
insl
pop
or
xor
add
ret
push
pop
sbb
add
hlt
cmc
lods
dec
std
add
roll
add
sti
in
clc
es
ss
or
enter
jmp
and
xlat
ret
clc
adc
push
test
test
jge
jle
mov
clc
adc
add
clc
flds
add
add
add
push
lods
mov
xor
add
inc
clc
push
clc
jne
clc
adc
add
mov
cmp
rcrb
test
add
clc
insb
adc
add
pop
or
adc
add
jle
out
push
clc
aad
and
add
add
add
fidivrl
add
xor
add
clc
sub
es
xchg
cmp
mov
clc
mov
add
gs
sub
or
lock
mov
stos
sub
add
pop
push
rcrl
adc
add
xor
add
xchg
int3
into
cs
int3
xbegin
insb
push
clc
xchg
mov
clc
and
mov
add
cwtl
push
es
jne
dec
std
negl
mov
clc
add
add
clc
sar
lock
add
sub
clc
push
add
lock
fisubs
add
xor
add
icebp
jle
and
clc
jbe
add
dec
mov
add
cmc
clc
in
push
add
clc
mov
add
lcall
pop
sar
dec
push
nop
mov
add
push
xchg
mov
jae
add
clc
lods
xchg
pop
xchg
mov
lea
jae
add
jno
add
mov
shlb
cld
mov
dec
or
add
dec
jg
clc
push
clc
out
sub
inc
add
add
add
clc
xor
add
into
mov
std
data16
jecxz
jnp
leave
ds
clc
int3
sub
sbb
stos
push
jp
stc
inc
add
ja
sbb
add
je
ret
cwtl
sbb
xabort
clc
cmp
xlat
lods
daa
clc
push
add
fs
or
clc
push
add
add
clc
cwtl
xchg
pusha
add
xchg
dec
cmpsl
clc
stc
jecxz
mov
clc
sar
add
sbb
insl
insl
mov
js
add
lcall
clc
jmp
repz
clc
sbb
loope
push
clc
iret
pop
jge
bound
add
mov
je
adc
add
cmp
push
repnz
add
es
xabort
add
pop
lods
jg
ss
add
add
fwait
dec
dec
cmp
clc
adc
add
lods
mov
clc
mov
nop
and
add
add
repnz
divl
add
push
add
push
add
jle
xor
add
lahf
jle
clc
stos
dec
leave
jnp
inc
clc
loopne
mov
xor
add
add
scas
sbb
pop
outsl
mov
dec
pop
nop
push
xchg
inc
add
and
add
add
pusha
add
dec
sarl
clc
inc
add
inc
clc
movsb
clc
sbb
std
mov
clc
pop
xlat
nop
pushf
add
add
clc
adc
add
std
xchg
aam
add
cli
out
xor
add
mov
pop
iret
jo
add
je
clc
dec
add
stos
int3
rcl
mov
sbb
sbb
clc
and
xbegin
add
mov
clc
test
push
dec
mov
add
and
popf
es
outsl
or
jle
int3
xor
add
repnz
clc
adc
add
jno
add
cli
mov
add
cmpsl
clc
cmpsb
clc
cmc
cs
stc
inc
add
shll
add
idivb
cmp
or
jp
lods
imul
add
add
sub
jb
add
rcrb
clc
xchg
jp
adc
add
int3
int
xchg
out
cmpsb
clc
or
test
jle
sar
fsts
jmp
clc
sar
sub
inc
clc
fsub
clc
push
clc
lret
rcll
cmp
es
das
imul
xor
add
testb
rcrl
push
add
arpl
add
clc
jnp
clc
es
sub
add
xchg
rcll
jns
packssdw
pusha
add
or
inc
clc
inc
add
or
cmp
popa
add
xor
add
adc
jmp
jb
add
jl
add
xbegin
clc
sbb
decb
arpl
add
popa
add
lcall
add
sti
jmp
pop
cmp
aad
lods
aad
add
add
pop
mov
add
add
inc
add
and
add
clc
jns
sbb
imul
add
pop
icebp
push
clc
mov
ss
cs
xor
add
clc
mov
out
stc
in
out
lock
add
insl
xor
add
mov
loopne
in
fimull
push
clc
loope
loopne
test
cmp
sar
fstpl
sar
clc
nop
pop
cmpsl
clc
sub
sub
add
cltd
scas
push
dec
or
outsb
cld
cld
add
jb
add
add
xchg
push
cld
decl
cmp
bnd
add
xchg
push
mov
clc
movsb
clc
xor
add
clc
and
add
out
pop
fisubrs
pop
cwtl
jne
and
mov
xchg
mov
mov
adc
inc
clc
lcall
sub
iret
ret
clc
and
xchg
test
clc
xor
add
clc
push
ljmp
add
nop
xlat
xor
add
clc
enter
inc
add
cwtl
out
dec
jnp
push
add
sub
add
jns
add
fildll
inc
add
rol
clc
push
jl,pn
add
stos
pusha
add
sbb
and
add
clc
push
clc
cmp
fisubrl
xchg
das
fcmovne
or
clc
fldt
lods
inc
clc
aam
lahf
enter
add
inc
clc
pop
lea
mov
neg
sarb
clc
push
aad
mov
cltd
push
push
add
dec
cmc
add
add
sar
add
clc
add
clc
popf
fwait
pusha
add
and
add
add
add
clc
jg
add
sbb
or
clc
add
add
lahf
pop
sbb
push
inc
add
cmp
jns
outsb
imul
add
add
pop
mov
pop
clc
jnp
cmp
sar
sbb
clc
frstor
add
clc
sbb
mov
add
push
sub
add
xchg
xlat
leave
and
add
popa
add
sbb
popl
add
sti
add
add
movsb
clc
xchg
in
or
or
cmp
add
add
clc
sar
add
cmp
sbb
clc
lahf
inc
clc
pop
jecxz
xbegin
add
push
sbb
clc
xchg
hlt
mov
loopne
imul
cmp
mov
jb
add
iret
call
clc
add
jle
jl
test
scas
lret
clc
pushf
jne
clc
sbb
pop
sbb
test
lahf
rclb
and
add
add
ljmp
add
mov
fmuls
fbstp
dec
push
sub
cmc
das
xchg
fcmovu
loop
movsb
clc
inc
add
pushf
clc
arpl
add
cmp
pop
and
add
xbegin
add
lret
clc
pop
ja
addr16
pop
mov
imull
clc
jo
add
clc
dec
inc
clc
mov
sub
in
sub
cli
shrl
add
sbb
push
add
cmp
stos
mov
int3
xchg
xor
aaa
inc
clc
outsb
mov
adc
clc
xchg
xchg
aad
add
mov
xchg
mov
clc
xchg
pop
out
pop
in
in
int3
stc
insl
mov
gs
push
clc
pop
fs
lcall
nop
fnstcw
clc
pop
adc
add
dec
xchg
xlat
add
clc
xchg
or
std
mov
xchg
push
add
xchg
loope
cli
push
add
push
and
mov
add
jb
add
pop
add
add
mov
add
cmp
add
push
clc
test
mov
sbb
out
adc
add
cmpsl
clc
fcoml
adc
add
dec
xor
add
add
jmp
frstor
cmp
jno
add
nopl
clc
lcall
add
in
stc
jnp
in
or
in
hlt
pop
clc
jnp,pn
popf
pop
cwtl
fildl
sbb
ja
sar
dec
jg
sub
pop
inc
add
jmp
clc
ficomps
add
incl
add
xor
add
cmc
lret
movsb
clc
push
add
jb
add
loopne
mov
add
pop
ret
clc
mov
clc
in
sbb
clc
test
seta
lret
enter
add
mov
jo
add
mov
loope
mov
clc
xor
add
adc
add
add
sar
clc
call
pop
aas
cmp
cmp
xbegin
clc
int
pop
fldcw
push
add
pop
sub
xor
add
mov
mov
add
cmp
clc
jl
pop
test
xchg
or
clc
divl
add
hlt
and
add
cmpsb
clc
inc
add
mov
add
std
mov
insl
loop
xchg
or
mov
xor
add
add
add
in
outsl
aam
stos
cmp
rcll
add
in
jge
insb
mov
mov
clc
and
add
clc
daa
clc
fsubs
sar
adc
add
movsl
clc
sti
test
mov
xor
add
clc
and
mov
sub
add
sbb
clc
pop
clc
cmp
lock
pop
clc
inc
add
insb
imul
add
add
or
jge
pop
into
repz
clc
and
mov
lea
clc
add
add
add
mov
into
shlb
add
cmp
aad
push
add
pop
dec
sbb
add
into
adc
add
sti
scas
inc
clc
add
add
add
in
gs
fstl
add
addr16
mov
clc
dec
shll
cmp
es
mov
mov
lcall
clc
jnp
enter
cs
sub
and
add
clc
xchg
pop
jae
add
sarb
clc
sub
cmp
adc
add
into
sub
fisubs
mov
cmpsb
clc
push
push
clc
mulb
clc
or
ds
cmp
clc
sbb
add
pop
pop
cmp
add
xor
add
test
xchg
in
lods
push
add
clc
add
add
cmp
arpl
add
sub
in
push
push
cmp
insl
sbb
int3
sbb
in
mov
inc
add
sub
cli
push
add
add
clc
std
pop
cmc
push
clc
pushf
cld
sbb
add
clc
fists
add
lahf
hlt
dec
popf
cmp
xchg
movsb
clc
or
das
stos
iret
pusha
add
cmp
dec
adc
mov
sub
das
add
fiaddl
add
pop
je
arpl
add
clc
inc
add
or
clc
jbe
add
fidivl
add
fildll
add
cld
insb
ret
clc
sbb
clc
nop
xor
add
in
cmp
add
push
fs
in
fwait
xchg
xlat
punpcklwd
add
popa
add
push
shr
add
add
add
xbegin
pop
sbb
add
dec
pop
cli
xlat
loope
test
fdivp
push
pop
mov
pop
bound
add
sbb
xchg
repnz
clc
sar
clc
inc
add
loopne
mov
clc
enter
jns
clc
imul
adc
add
mov
inc
add
xor
add
in
sbb
clc
rcr
push
in
test
test
dec
inc
add
outsb
data16
out
or
clc
aaa
mov
clc
sar
clc
fimull
push
add
in
je
push
add
inc
add
inc
add
inc
clc
mov
add
sbb
aam
idiv
add
bound
add
add
jmp
enter
clc
cli
mov
lock
add
inc
add
sub
adc
add
push
clc
or
loopne
lahf
lea
clc
push
aam
inc
add
sar
clc
enter
adc
add
inc
add
adc
add
add
add
jb
add
lret
jbe
xchg
xor
add
gs
es
inc
add
cwtl
adc
add
clc
push
lods
nop
shl
enter
push
jbe
push
jle
add
xor
add
jmp
aaa
push
xlat
xor
add
ljmp
sbb
out
imul
clc
fcomps
cmp
scas
imul
cmp
inc
clc
dec
out
scas
movsb
clc
mov
dec
mov
pop
ja
jbe
cmp
fs
sbb
xor
add
dec
mov
scas
out
jl
add
xor
and
add
jns
mov
mov
adc
add
add
outsb
js
xchg
push
add
outsl
lods
pop
aad
clc
mov
dec
mov
inc
add
cmpsb
clc
imul
inc
add
in
and
imul
clc
push
add
out
aad
cmp
fucom
clc
dec
xor
add
add
aad
add
daa
clc
out
jb
add
lods
cmpsb
clc
scas
sbb
ret
pop
mov
fildll
clc
mov
add
fcomps
jle
dec
test
lahf
cwtl
pop
js
out
test
hlt
mov
lcall
lahf
cmp
clc
pop
push
add
jg
dec
xor
add
add
add
add
add
sbb
mov
clc
push
out
cmp
pop
xchg
mov
mov
outsl
call
gs
fiaddl
add
ja
mov
mov
clc
mov
cmpsl
clc
lret
insl
add
add
add
push
incb
mov
clc
mov
clc
push
das
push
add
imul
add
add
popa
add
sub
clc
lret
mov
into
cs
add
arpl
add
clc
fs
jecxz
or
clc
adc
push
clc
jae
add
add
clc
scas
mov
add
add
add
cwtl
bound
add
jns
popa
add
cmp
adc
add
mov
push
add
xor
int3
cmp
lcall
clc
push
loopne
mov
aas
jmp
add
out
adc
add
mov
add
lods
pop
jp
clc
insl
out
xchg
ss
cli
adc
add
add
push
clc
dec
add
dec
push
inc
add
fnstcw
adc
add
clc
gs
jb
add
mov
out
push
dec
mov
pop
xor
add
clc
adc
add
xor
inc
clc
jbe
inc
add
add
add
add
dec
bound
add
clc
dec
out
pop
mov
in
data16
test
sub
add
add
sbb
sbb
in
mov
test
add
cmp
add
push
xor
add
clc
repz
add
add
dec
pop
frstor
add
add
add
imul
pusha
add
push
rorb
push
mov
mov
add
xchg
stos
sub
aas
arpl
add
or
add
sbb
pop
dec
icebp
inc
clc
pop
dec
or
add
inc
clc
sahf
nop
inc
clc
vmovlps
add
adc
test
insl
data16
int
xchg
fsubrp
in
test
movsb
clc
cld
gs
mov
add
mov
clc
call
fs
sub
stc
mov
jne
data16
jmp
mov
fwait
xchg
cmp
clc
nop
push
clc
mov
pop
insl
cmpsb
clc
dec
push
mov
add
add
clc
mov
outsl
xchg
or
clc
jecxz
ret
in
xor
add
xchg
repz
xor
add
clc
fcomp
dec
xor
add
out
jmp
add
mov
add
sbb
fnstenv
add
clc
fxch
push
sbb
add
jl
xchg
dec
xabort
clc
jge
clc
pop
lcall
mov
test
add
pop
fsubrp
pop
test
loopne
adc
add
xor
add
arpl
add
clc
sub
add
clc
sbb
sub
clc
push
xchg
pop
clc
dec
sub
adc
add
sar
negb
and
add
lods
rolb
iret
pushl
dec
pop
and
add
lock
insb
sbb
add
dec
ds
and
add
push
sbb
out
push
push
add
pop
leave
arpl
add
sahf
sub
add
jb
add
or
test
jle
and
add
add
xchg
jns
cmp
popf
adc
add
cli
call
add
sub
add
xchg
mov
clc
sbb
xor
add
and
add
clc
stos
mov
clc
repnz
bnd
add
add
sar
sahf
fs
jb
add
std
inc
add
push
adc
add
add
jg
shr
sub
and
add
shll
add
lret
stc
arpl
add
cwtl
int3
mov
add
inc
clc
and
psllw
scas
mov
jne
add
jge
cmp
add
mov
pop
inc
clc
xchg
xor
mov
xchg
pop
repnz
add
mov
or
clc
lret
or
push
add
cmp
es
mov
add
jl
test
or
push
mov
hlt
ds
add
and
pop
loop
sti
sarb
clc
repnz
rcll
add
sbb
clc
into
jnp
dec
and
add
jp
cmp
clc
jp
call
add
xor
add
scas
add
cmp
adc
add
add
add
sbb
inc
add
or
clc
mov
clc
lcall
mov
clc
cmp
clc
mov
add
jecxz
mov
into
dec
push
dec
imul
cmp
movsl
clc
cmp
sbb
cmpsl
clc
fsubrl
idiv
mov
mov
lcall
push
add
fisubrl
adc
add
clc
sar
cmpsl
clc
mov
leave
sub
clc
jp
addr16
aad
xchg
sub
add
inc
clc
lods
push
mov
clc
sti
adc
add
add
cs
clc
sub
lret
jbe
data16
cmp
iret
fstpt
clc
stos
out
pop
repz
add
add
clc
stos
aas
xchg
int3
push
jmp
pop
sbb
add
clc
mov
out
ret
clc
iret
jg
xor
add
add
fildll
add
jae
add
test
mov
xabort
add
mov
clc
test
sbb
loope
je
cmp
add
loope
jo
add
clc
outsb
cmc
popf
aaa
xor
imul
clc
mov
add
dec
arpl
add
arpl
add
clc
sbb
clc
imul
iret
cmp
clc
aad
clc
das
sar
clc
mov
sar
and
add
jns
decl
clc
pop
xor
add
jle
lahf
mov
mov
mov
ficomps
clc
cmp
add
iret
cld
dec
addr16
clc
adc
add
add
add
clc
xchg
adc
add
add
add
mov
jae
add
jl
clc
dec
mov
add
mov
pusha
add
das
es
mov
sub
adc
or
add
push
add
clc
rcrl
popf
pop
out
mov
es
out
xchg
jg
clc
lcall
mov
mov
add
outsl
lea
add
adc
add
cmp
add
test
mov
lahf
sub
adc
add
clc
fdivs
add
clc
fcmovnbe
push
js
bound
add
add
clc
adc
add
sub
xlat
ja
out
int3
cmp
sbb
add
cmc
imul
jbe
clc
mov
add
sar
clc
jb
add
jo
add
clc
or
clc
stos
out
aad
xbegin
into
pushf
addr16
and
add
cltd
in
mov
or
dec
bound
add
push
xor
add
clc
jae
add
inc
clc
jb
add
add
mov
add
dec
sbb
add
jmp
cmc
mov
mov
sub
pop
imul
lret
das
popf
into
cmp
out
mov
add
xor
add
fisubrl
fiaddl
sar
push
add
dec
adc
clc
inc
clc
jl
sar
in
fdivp
loope
inc
add
push
clc
stos
stos
fstpt
clc
jb
add
pop
jmp
clc
mov
add
add
add
dec
xchg
mov
add
clc
mov
scas
bound
add
push
add
xor
add
add
jp
add
adc
add
divl
sbb
add
jbe
clc
push
mov
imul
dec
jge
clc
mov
clc
imul
ja
dec
mov
pop
out
jg
addr16
nop
mov
nop
mov
lret
xchg
inc
add
and
add
pop
clc
ljmp
clc
push
jae
add
add
add
clc
out
daa
clc
or
sub
xchg
cmpsl
clc
xor
add
add
xchg
lcall
clc
in
sub
add
push
add
popf
in
sub
push
in
mov
mov
dec
clc
fisttpl
lret
cs
clc
cmp
xor
into
push
add
lock
add
clc
arpl
add
sbb
cmp
dec
jbe
lock
clc
out
popf
jbe
cli
xor
fldcw
pop
mov
clc
ret
es
lea
clc
push
or
sti
inc
clc
out
jge
clc
jmp
add
add
sbb
packssdw
stc
and
xor
add
add
icebp
jns
daa
clc
inc
clc
xor
add
stos
push
or
das
cmc
testb
clc
xchg
gs
xor
add
mov
add
mov
dec
cmp
add
or
mov
sbb
lock
add
add
or
in
xchg
insb
call
add
dec
pop
push
add
mov
clc
dec
pusha
add
mov
lret
and
add
add
fadd
clc
mov
inc
clc
test
test
mov
loopne
cmpsb
clc
ds
dec
cld
jae
add
clc
xchg
arpl
add
push
push
lods
shr
lcall
out
mov
add
mov
clc
ffreep
clc
outsl
fadd
clc
sti
xchg
xchg
lret
jb
add
add
rclb
add
sahf
inc
add
into
xor
add
sar
aaa
cmp
dec
pop
fs
sti
jns
hlt
sbb
clc
test
push
stos
cs
sahf
gs
sub
add
loope
add
add
cld
push
add
iret
sar
outsb
sti
mov
jecxz
adc
clc
and
add
add
push
add
jo
add
add
add
add
adc
add
das
sub
data16
jne
clc
mov
add
adc
mov
add
fnstcw
jbe
add
mov
inc
clc
or
mov
movsl
clc
ljmp
pushf
mov
es
push
add
js
aaa
xchg
dec
xlat
lret
ss
jns
jle
add
pop
clc
out
xor
add
int
js
push
add
or
std
int3
je
cwtl
loopne
xchg
and
add
add
add
clc
dec
cltd
jg
add
inc
clc
test
lods
sahf
cmp
push
enter
mov
clc
push
add
sar
clc
add
add
sub
mov
lret
inc
clc
xchg
push
mov
adc
jecxz
jg
clc
inc
clc
sbb
xchg
mov
clc
mov
jmp
pop
mov
add
inc
add
xor
add
add
push
mov
mov
jg
add
add
mov
fwait
xchg
icebp
inc
add
popf
je
clc
sub
out
mov
clc
push
add
cmp
clc
inc
add
mov
push
push
add
mov
clc
sbb
popa
add
loop
and
push
mov
movsb
clc
out
jecxz
sub
xchg
or
or
mov
pop
cld
imul
ret
clc
add
add
sub
xor
add
push
mov
add
stos
ret
clc
xor
add
add
ja
xchg
scas
or
xchg
and
add
and
add
add
add
jg
add
repnz
insl
shll
xchg
xlat
mov
adc
add
add
mov
add
fildl
clc
movsl
clc
sti
jne
clc
popf
icebp
mov
add
movsb
clc
mov
add
push
add
outsb
sub
xchg
hlt
fidivs
enter
add
add
pop
clc
out
mulb
mov
lock
add
nop
cmp
add
jl
popf
sub
addr16
sahf
sub
or
repnz
clc
pop
jecxz
out
xchg
jb
add
pop
mov
mov
clc
insl
fsts
and
add
out
cli
scas
gs
push
clc
jae
add
add
fbld
fisubs
fcom
adc
add
add
test
xchg
dec
fcmovbe
inc
clc
stos
lcall
mov
lods
rorl
sub
cmp
lods
fisubrs
mov
fmull
loopne
adc
add
jb
add
popa
add
mov
int3
stos
dec
sub
jbe
push
add
gs
inc
add
fs
dec
add
add
sub
clc
push
imul
sbb
add
or
fs
add
add
gs
mov
clc
xor
stc
arpl
add
clc
mov
clc
cmc
ljmp
mov
mov
add
add
inc
add
fisubrl
shlb
add
ficoms
add
mov
data16
dec
gs
nop
insb
inc
clc
insb
dec
hlt
clc
data16
ret
clc
cmp
shr
bound
add
clc
mov
add
cmp
clc
lock
pop
mov
dec
fwait
or
jg
dec
insb
scas
push
loop
fisubrl
ds
clc
fildll
add
sbb
add
or
add
xbegin
decb
add
xlat
clc
mov
clc
add
add
cli
mov
add
clc
mov
clc
lods
pop
add
add
cmp
add
clc
es
mov
je
add
fcoms
and
add
outsl
repnz
pop
clc
mov
movsl
clc
dec
adc
add
in
add
mov
in
movsb
clc
xor
cs
add
and
add
add
mov
sbb
add
es
sar
and
add
add
jmp
jmp
cmp
or
mov
add
push
outsl
mov
clc
cmp
add
push
add
lods
inc
clc
test
add
fs
out
sub
pop
cmp
or
cmpsl
clc
bound
add
mov
add
add
je
hlt
repz
clc
aas
out
mov
clc
mov
or
push
daa
clc
mov
clc
aas
jno
add
cmp
sar
call
mov
add
sbb
clc
movsb
clc
jecxz
jnp
loopne
jle
clc
hlt
and
sbb
popf
adc
add
clc
mov
mov
sar
add
mov
adc
clc
mov
popf
sar
mov
add
add
aaa
fisttpl
dec
test
icebp
cmp
clc
xchg
dec
push
add
pusha
add
push
add
xbegin
add
add
mov
xchg
leave
test
cmpsb
clc
sets
push
popa
add
cmpsb
clc
notl
clc
mov
pop
aas
aad
jg
clc
aam
and
xor
add
mov
leave
test
sti
insb
ds
ljmp
add
call
mov
test
clc
add
movsb
clc
jle
clc
inc
add
loopne
movsl
clc
push
add
jecxz
lods
or
add
cmp
clc
dec
inc
add
aam
xor
add
and
add
and
inc
add
repnz
jmp
xor
add
mov
fildl
add
push
sarl
add
sub
daa
clc
loope
imul
fxch
inc
clc
sbb
sbb
jo
add
cmp
add
leave
or
add
clc
int3
mov
aad
stos
mov
clc
pop
adc
add
sahf
sahf
xabort
imul
movsl
clc
cmc
sub
clc
loope
repz
clc
icebp
sbb
add
mov
jnp
cmp
jge
add
inc
clc
mov
clc
adc
add
clc
movsb
clc
add
add
inc
clc
int
xor
add
leave
lods
shrl
lods
pop
mov
or
clc
sar
clc
push
inc
add
sub
imul
sbb
mov
add
cltd
xchg
es
adc
add
add
add
repz
xchg
es
jp
add
add
xchg
push
imul
push
ss
cmpsl
clc
nop
pop
mov
test
pop
mov
and
add
add
repz
clc
xbegin
clc
push
mov
bound
add
jg
clc
dec
scas
pop
addr16
in
dec
ja
add
sar
adc
add
mov
add
jne
loope
adc
add
add
into
mov
clc
data16
aas
popa
add
add
add
cmp
out
cmc
daa
clc
or
mov
fwait
popf
mov
jae
add
mov
addr16
inc
clc
pop
mov
jle
add
or
sub
fwait
iret
pop
mov
jl
dec
pop
sub
add
mov
add
add
add
clc
jne
fisttps
add
sub
nop
lret
add
outsb
inc
add
xor
sbb
ljmp
mov
clc
jb
add
pop
xchg
cmpsb
clc
mov
test
sub
clc
insl
repz
inc
add
pop
notb
add
add
add
or
mov
push
add
scas
push
add
pop
out
mov
dec
lfs
sub
clc
cltd
xchg
test
clc
bound
add
add
add
xchg
pop
insl
mov
clc
popf
rcr
icebp
sub
mov
clc
inc
clc
inc
add
xchg
rorl
scas
cmp
clc
xabort
add
sbb
js
clc
push
add
dec
jb
add
lret
lahf
ficoms
add
xchg
rolb
add
js
aad
clc
jne
movlps
add
pop
je
clc
adc
add
dec
clc
xor
add
cmp
add
fldl
add
dec
and
xabort
dec
cmc
lahf
dec
push
rcll
add
cmp
jb
add
xchg
mov
leave
sub
outsb
in
or
add
iret
int3
ret
clc
mov
add
cmp
int3
inc
add
and
add
push
mov
add
pop
flds
daa
clc
dec
neg
and
jl
clc
and
push
mov
clc
pop
mov
add
jnp
lahf
aaa
ret
add
inc
add
popf
xor
clc
push
add
push
add
out
add
add
xchg
sahf
xchg
adc
add
int
stc
aam
sbb
add
mov
movsb
clc
adc
add
add
in
clc
xchg
fsubrs
clc
xbegin
daa
clc
inc
clc
clc
cmpsb
clc
push
add
mov
sti
pop
mov
pop
pop
mov
or
mov
clc
faddl
clc
insb
xchg
inc
clc
pop
add
add
add
popa
add
mov
clc
movsl
clc
sahf
lcall
rolb
leave
adc
add
add
add
inc
clc
fsubl
adc
add
cmpsl
clc
xor
add
xchg
out
push
pop
mov
mov
add
clc
inc
clc
pop
mov
clc
cmp
sbb
mov
lret
lea
dec
adc
add
clc
cmp
cmp
cmp
xlat
lods
adc
add
clc
das
idivb
mov
add
fdivr
clc
xor
lret
clc
push
add
mov
test
xchg
cmc
xabort
icebp
ds
add
add
cmc
sbb
sbb
and
add
add
push
inc
clc
pop
mov
add
clc
xchg
pop
fs
mov
clc
pop
clc
ficoml
clc
mov
add
jnp
test
gs
cmp
inc
clc
jmp
clc
xor
add
mov
add
push
inc
clc
ja
sub
clc
mov
xabort
add
add
stos
adc
cmp
lret
lret
test
jge
in
ja
leave
mov
shr
jnp
clc
mov
mov
rdtsc
add
inc
add
sub
clc
jmp
pop
stc
add
mov
add
or
fs
cld
and
add
sub
inc
add
in
cmp
push
rorb
dec
pop
mov
add
inc
clc
popf
and
add
clc
jecxz
add
add
fwait
test
sbb
add
push
cmp
inc
add
dec
sar
into
pop
test
lcall
pop
pop
sbb
add
out
aaa
sub
add
adc
add
pop
clc
mov
popa
add
out
js
clc
cmp
iret
cmp
clc
mov
sub
add
mov
and
out
mov
xor
add
or
es
ficomps
xor
add
mov
push
scas
test
add
js
add
mov
clc
clc
sahf
xchg
loop
mov
fucom
clc
xor
cmp
popf
push
xabort
bound
add
std
inc
clc
cld
movq
clc
inc
add
jl
push
add
icebp
insl
mov
add
push
xlat
push
lahf
adc
add
add
clc
jl
fs
xchg
and
repz
cld
pop
inc
add
test
data16
xchg
xchg
gs
imull
mov
add
add
jg
clc
cmc
sbb
fldl2e
add
add
add
mov
add
push
sbb
add
cmp
cltd
inc
clc
out
mov
or
fldt
dec
inc
clc
cld
loope
jns
clc
xor
int3
jns
adc
call
clc
push
mulb
mov
clc
js
add
gs
mov
es
mov
fs
es
mov
cmp
sub
sbb
xchg
sub
stos
or
clc
out
fstl
add
add
adc
add
test
clc
scas
mov
rclb
aad
sbb
push
mov
mov
sub
clc
enter
clc
cmp
xchg
xabort
xor
add
fistps
adc
add
adc
add
mov
es
cmp
xor
add
fdivs
je
clc
or
iret
test
ja
xchg
push
cmp
out
jg
mov
bound
add
sub
ljmp
clc
bound
add
pushf
leave
cmpsl
clc
mov
push
add
xor
fsubs
add
test
sbb
add
sbb
add
clc
xchg
int3
arpl
add
cltd
xchg
sbb
jno
add
add
add
add
sahf
mov
pop
gs
cmp
hlt
mov
int
add
mov
mov
mov
incl
stos
pop
and
add
mov
inc
add
push
and
add
clc
push
inc
clc
jle
clc
add
add
clc
mov
add
outsb
jnp
add
inc
clc
mov
pop
adc
add
clc
mov
add
mov
clc
xor
testl
mov
out
lods
or
pop
in
jg
adc
add
add
bound
add
sahf
sbb
cld
test
sbb
mov
clc
insb
jle
mov
mov
clc
mov
add
add
add
clc
iret
xchg
out
xchg
jns
clc
shrl
adc
add
add
add
add
out
cmp
clc
mov
push
add
jl
clc
dec
int3
jne
pop
and
add
gs
fwait
int
xchg
jl
add
mov
stos
loopne
adc
call
fmuls
pop
clc
or
lods
pop
insl
mov
xor
add
mov
adc
add
clc
xchg
sar
add
add
adc
add
clc
std
or
add
decl
add
jns
fiaddl
add
mov
nop
sarb
sub
pop
clc
clc
cmp
fs
out
mov
add
adc
push
iret
mov
clc
clc
stos
and
add
clc
and
add
jbe
outsl
data16
pop
fwait
cmpsl
clc
pop
clc
and
add
add
mov
and
add
sahf
mov
add
clc
sub
push
jmp
clc
mov
fildll
inc
add
cwtl
in
inc
add
dec
out
sub
dec
fisttps
divb
cmp
int
mov
clc
sbb
push
add
cmp
add
add
mov
negb
stos
pop
add
fists
inc
clc
call
add
add
add
add
clc
stos
sub
dec
sbb
add
add
clc
sbb
sbb
insb
xor
add
mov
clc
lods
cli
rol
clc
push
in
cli
outsb
push
add
cmovg
add
jmp
jp
clc
aam
inc
add
mov
clc
mov
outsl
jns
xchg
push
pop
ds
pop
jg
sbb
clc
stc
das
xchg
arpl
add
clc
mov
add
in
fmuls
shr
ljmp
add
add
lea
inc
add
jecxz
pop
xchg
in
or
add
cmpsl
clc
ds
jno
add
or
add
pop
mov
add
push
jmp
jne
clc
icebp
lret
clc
out
addr16
or
clc
lahf
sbb
and
add
test
jo
add
arpl
add
add
std
ds
add
xchg
pop
mov
mulb
mov
clc
and
add
ljmp
adc
add
add
in
nop
mov
xabort
add
xor
clc
ret
clc
lret
iret
ss
jae
add
pop
jge
int3
lret
fwait
mov
test
je
add
push
clc
ja
test
xchg
fcmove
pop
push
jl
add
sub
clc
push
clc
mov
sub
add
pop
jno
add
enter
mov
fs
push
es
sbb
jp
clc
pop
dec
xchg
add
repz
clc
sbb
std
dec
adc
add
add
call
add
stos
fistps
test
mov
add
mov
add
sub
sarb
psrad
mov
mov
sbb
loop
cmpsl
clc
in
pop
pop
clc
out
frstor
clc
and
add
add
fs
jecxz
iret
clc
sbb
add
add
clc
jge
and
add
clc
jle
ret
clc
push
jbe
stc
popf
mov
add
clc
cld
cmp
clc
inc
clc
cmp
add
rclb
test
add
insl
daa
clc
lret
sti
pop
xchg
popf
jge
sahf
outsl
clc
movsl
clc
in
iret
mov
add
cmp
and
aas
inc
add
in
in
cmpsl
clc
test
test
rorb
in
cmpps
cmp
add
pop
popa
add
push
xchg
jb
add
leave
xor
nop
dec
cltd
dec
adc
add
int
clc
sar
add
add
jecxz
enter
fsubp
clc
add
add
idivl
xchg
test
stc
and
add
add
add
clc
out
adc
stc
outsb
sar
xor
add
ret
and
add
mov
push
ret
sub
pop
pusha
add
ret
mov
mov
paddd
add
dec
inc
add
lret
push
je
clc
loop
xchg
xchg
or
add
aas
call
add
add
in
outsb
pop
in
clc
xbegin
scas
stos
cmp
add
dec
std
test
pop
dec
test
clc
mov
outsb
lock
add
mov
outsb
xchg
cmp
mov
sbb
clc
mov
clc
inc
clc
fistpll
clc
mov
clc
lret
clc
add
add
clc
add
add
cmc
add
out
pushf
xor
add
clc
and
add
add
lret
mov
clc
fnsave
pop
xchg
jno
add
pop
cmp
or
mov
clc
rcrb
imul
clc
sahf
clc
or
sbb
add
add
add
add
mov
inc
add
cmp
add
lea
cmp
out
inc
add
pop
sbb
mov
pop
and
jge
dec
jg
clc
mov
add
clc
xlat
lcall
inc
add
out
popa
add
in
cmpsb
clc
sti
xchg
data16
in
mov
stc
xor
add
fstpl
clc
data16
add
add
xabort
insl
push
sar
cmp
call
pop
or
pushf
int
lods
or
add
pop
cmp
add
lahf
das
call
test
jno
add
test
insl
mov
push
sarl
clc
cmc
mov
clc
jno
add
test
lock
fistpl
cmp
add
stos
xor
add
mov
add
dec
push
add
mov
add
mov
clc
not
and
add
mov
add
mov
gs
push
data16
in
lahf
cltd
lods
stc
mov
xchg
cmp
mov
outsb
mov
cli
mov
cmp
add
cmp
clc
sahf
aas
xor
sub
call
jecxz
jmp
clc
mov
clc
inc
add
shrl
hlt
int
clc
xor
add
mov
clc
or
jmp
in
aam
jmp
clc
test
aas
and
add
clc
sar
mov
fwait
sub
gs
fwait
xor
add
dec
repnz
ret
and
clc
mov
pop
adc
add
cmp
loopne
cmp
sar
addr16
test
clc
int
je
dec
add
loop
enter
cmc
fs
int3
inc
add
int3
push
clc
sarb
and
add
cmp
cmp
int
add
sbb
clc
pop
mov
clc
sbb
mov
cmp
fisubrl
jnp
add
or
pusha
add
jg
clc
or
dec
inc
add
popa
add
in
stos
jnp
push
xchg
mov
sbb
clc
xchg
fisubl
clc
lods
add
add
add
mov
add
pop
sub
clc
repz
addr16
adc
pop
cs
clc
xor
mov
clc
in
scas
push
mov
add
insb
xor
add
add
clc
test
mov
mov
clc
mov
add
clc
cmpsb
clc
xabort
nop
sbb
xchg
inc
add
das
vsqrtps
add
mov
pop
adc
add
sbb
add
mov
mov
cwtl
dec
stos
pop
mov
jmp
jne
inc
clc
dec
cltd
rolb
push
add
jbe
dec
into
pop
mov
out
test
pop
inc
clc
shrb
dec
outsb
mov
clc
fcomps
call
es
loope
mov
hlt
xchg
mov
loop
stos
add
add
cltd
popa
add
arpl
add
add
aad
mov
clc
mov
cmp
clc
adc
add
jecxz
pop
pushf
into
xlat
push
add
dec
xchg
sbb
add
add
add
add
push
lret
add
addr16
or
mov
arpl
add
clc
sar
clc
jnp
imul
aaa
fsubrl
clc
add
into
pop
jo
add
push
pop
hlt
mov
clc
mulb
sahf
mov
or
add
cmp
mov
add
and
mov
bound
add
clc
xlat
shlb
add
adc
add
add
xor
add
xchg
aaa
ljmp
cli
arpl
add
cli
mov
add
jbe
ljmp
clc
add
fs
push
jecxz
mov
je
add
xchg
jl
clc
hlt
imul
lock
push
cltd
addr16
lret
add
add
clc
add
add
add
and
add
add
jae
add
rolb
mov
inc
add
mov
je
xchg
sti
popa
add
pop
lods
and
add
add
mov
push
scas
sbb
jnp
mov
add
add
clc
push
cmp
add
cmp
add
cld
test
mov
clc
movsl
clc
test
clc
pop
dec
adc
add
mov
clc
sar
clc
fnstsw
test
add
dec
popa
add
jg
xchg
cwtl
push
xor
add
clc
sahf
push
jmp
adc
add
loopne
ds
cld
aaa
imul
adc
add
loope
fs
pop
daa
clc
aaa
adc
jecxz
cmpsb
clc
sbb
jp
add
roll
add
ss
pop
mov
clc
pop
clc
add
clc
inc
add
scas
cmp
sub
add
or
pop
add
sbb
sbb
add
in
cli
jno
add
fs
pop
pop
dec
ret
popf
aad
lods
lods
mov
mov
rcll
clc
cli
mov
sbb
test
xbegin
clc
outsb
xor
add
push
fwait
sbb
loope
cmp
in
xchg
loopne
fs
pusha
add
or
lret
mov
xor
clc
fidivrl
clc
lods
ret
clc
pop
sbb
cmp
clc
mov
clc
mov
clc
rcrb
mov
incl
add
jno
add
push
inc
add
stos
cmp
clc
lea
add
mov
clc
fnstsw
inc
add
call
cmp
dec
ret
clc
int3
jp
clc
clc
in
out
push
jecxz
add
sar
loopne
pushf
pop
dec
ja
mov
push
push
fnstcw
clc
jl
or
test
dec
filds
jns
push
add
sar
and
jb
add
dec
inc
clc
clc
lahf
stos
lret
add
adc
add
and
lods
stos
lea
sbb
add
and
int3
push
cmp
push
sti
pop
sbb
lods
push
lods
in
inc
add
add
xchg
std
push
add
cmp
inc
clc
enter
in
bound
add
add
inc
clc
mov
add
fldpi
clc
sbb
clc
xchg
cmp
pop
fs
jo,pt
add
repz
push
add
cmp
and
add
popf
div
or
jbe
mov
pop
cli
pop
lcall
pop
push
sub
add
movsl
clc
daa
clc
test
add
cmc
lcall
clc
xchg
mov
mov
rcll
add
imul
clc
or
flds
clc
adc
add
call
in
push
scas
test
fldl
cmp
add
add
pop
fsub
clc
mov
add
clc
mov
cmp
test
clc
aaa
pop
int
clc
clc
add
es
xbegin
clc
pop
cmp
es
inc
add
ds
mov
clc
cltd
mov
jae
add
sbb
popf
sub
push
in
add
add
add
add
add
pop
xchg
push
adc
add
add
lock
adc
add
add
test
push
add
ja
out
inc
add
xchg
loopne
pop
mov
cmp
pop
or
add
ficoml
mov
inc
clc
js
clc
dec
xchg
or
dec
mov
out
fsubrs
clc
mov
add
cmp
clc
jge
xor
lret
clc
movsb
clc
clc
cmc
xchg
pop
fcmovnb
clc
rclb
clc
int3
push
test
enter
add
mov
aaa
mov
mov
pop
and
add
sub
clc
loope
or
fs
mov
lods
pop
xchg
lock
add
inc
clc
ljmp
rclb
pop
inc
clc
shll
add
outsb
in
xchg
xlat
sbb
clc
imul
add
xchg
cmp
cmc
sar
icebp
and
add
jmp
clc
or
and
add
js
add
test
test
add
rorl
xchg
fistl
dec
mov
add
xor
add
add
cld
cmc
pop
xchg
cwtl
mov
inc
add
into
lret
jmp
cmpsl
clc
push
imulb
adc
add
cmp
clc
push
pop
cmp
int
add
data16
data16
push
add
sub
clc
lret
sbb
pop
mov
icebp
push
xchg
out
loop
mov
add
shlb
push
in
scas
call
decb
adc
clc
xchg
mov
add
gs
lods
or
repz
ret
outsl
sbb
add
pop
cltd
clc
pop
push
stc
push
sti
sar
cltd
mov
mov
clc
mov
dec
mov
loope
jo
add
imul
sti
inc
add
sub
add
cmp
clc
ss
or
add
iret
fcompl
dec
fwait
std
rclb
cmp
mov
cld
cmp
xchg
or
inc
clc
mov
sbb
add
mov
cmp
add
cmpsl
clc
popa
add
sar
xabort
ficompl
clc
out
in
popf
adc
add
cmp
stos
stc
mov
clc
cwtl
add
add
and
add
movsl
clc
dec
xchg
xchg
pop
clc
adc
add
std
mov
insl
push
clc
pop
push
push
add
lods
imul
clc
adc
add
mov
cmp
lock
xor
add
dec
xchg
mov
movsl
clc
dec
imul
add
xlat
cmc
mov
add
or
and
add
dec
imul
mov
cwtl
push
ret
clc
sbb
mov
clc
stc
add
out
dec
pop
insl
out
cli
fwait
jbe
mov
clc
add
jmp
insl
popa
add
inc
clc
xchg
jne
xchg
fcoms
not
push
mov
or
outsb
cmp
outsb
jbe
stc
add
inc
add
repnz
addr16
scas
flds
pop
ss
out
fwait
and
add
mov
ss
add
clc
jp
add
rcrb
add
pop
cmp
push
push
insl
jmp
bound
add
add
mov
clc
loopne
mov
add
out
hlt
sbb
sahf
sub
outsb
hlt
test
mov
clc
out
cmp
in
jle
iret
rorl
out
insb
jns
stos
pop
sbb
add
add
push
add
mov
clc
or
add
lret
clc
adc
clc
icebp
sub
add
dec
pop
or
add
cmpsb
clc
lret
adc
add
pop
jns
mov
fildl
cmpsl
clc
inc
clc
xchg
imul
pusha
add
cmp
add
pop
mov
adc
add
cmp
add
iret
in
cs
clc
sub
nop
fcomps
imul
add
bound
add
clc
aam
clc
jns
add
jge
add
sub
in
inc
clc
in
stos
mov
clc
cpuid
clc
ret
es
clc
pop
push
add
aas
mov
xchg
dec
xchg
daa
clc
sbb
lods
out
loopne
into
push
ljmp
je
or
add
push
aad
insb
jae
add
add
add
clc
xor
inc
clc
sahf
mov
add
fimull
mov
clc
mov
sbb
and
add
add
clc
xchg
dec
cld
loop
insb
loope
sub
fldl
jnp
add
cmp
sar
xchg
aas
nop
stos
sbb
add
outsb
push
sub
clc
add
add
mov
std
adc
add
pusha
add
pop
mov
clc
data16
clc
jmp
push
adc
add
clc
imul
shrb
add
mov
sahf
mov
std
fwait
dec
cmp
add
inc
add
push
add
inc
clc
sahf
popf
and
in
add
add
sti
add
add
clc
adc
add
ret
adc
add
mov
pop
pop
jge
aam
jno
add
in
aam
add
push
add
xchg
testb
fnstenv
add
push
add
push
loop
xlat
cs
sub
add
je
clc
xor
inc
clc
adc
add
add
hlt
out
js
fidivrl
or
push
clc
and
add
out
cmc
add
add
clc
aam
pop
std
mov
add
fdivl
dec
xbegin
add
jne
fsubr
xchg
data16
xchg
test
loop
nop
add
add
inc
clc
mov
test
pusha
add
jb
add
adc
clc
lret
leave
pop
rorl
clc
hlt
loopne
sar
mov
mov
clc
scas
xor
add
add
inc
add
and
add
pop
dec
pop
push
mov
cs
arpl
add
cmp
add
push
add
jle
sbb
push
clc
div
ret
clc
jb
add
mov
imul
clc
jbe
movsb
clc
pop
imul
fistpl
xchg
xabort
idivb
aam
in
mov
clc
push
cmp
clc
fiadds
add
pop
push
bound
add
test
cmp
jo
add
add
pop
add
add
inc
clc
pop
mov
push
mov
hlt
call
pushf
ja
cmp
add
and
pop
out
jmp
jns
inc
clc
frstor
add
pop
lods
stos
arpl
add
clc
jae
add
jne
lods
inc
clc
es
dec
mov
clc
xbegin
dec
add
add
clc
int3
mov
scas
shlb
sar
add
psubusb
sar
add
lea
xor
add
clc
push
add
add
iret
fsubrl
pusha
add
adc
add
jp
add
and
into
lea
nop
into
fisubrs
add
clc
push
lods
sub
pop
clc
int3
xchg
sub
lods
sar
clc
xor
add
clc
sbb
ds
pushf
lods
out
test
clc
pop
mov
add
lret
mov
pop
pop
scas
mov
add
mov
cmp
cmpsl
clc
repz
fwait
testb
bound
add
add
pop
mov
outsb
sar
fs
xabort
addr16
ljmp
loopne
dec
cmp
imul
xor
add
imul
cld
or
mov
clc
test
pop
jo
add
add
cmp
lods
incb
rcrb
xchg
xabort
stc
adc
sub
add
inc
clc
test
clc
and
add
add
mov
data16
fistpl
add
xor
add
add
ret
add
xlat
cmp
shll
add
xbegin
push
fldt
and
add
inc
add
fchs
clc
cltd
cmp
clc
cmpsl
clc
ret
clc
jmp
clc
lret
add
add
jae
add
leave
popa
add
mov
add
loopne
xor
add
aam
xabort
test
in
add
leave
mov
push
add
push
pop
xor
add
inc
add
xchg
loop
mov
loop
or
lcall
add
add
imul
push
mov
scas
or
add
push
add
ds
in
jnp
mov
clc
adc
add
mov
lods
inc
clc
cmp
in
inc
clc
cmp
add
sahf
jns
cs
hlt
movsb
clc
push
call
sbb
add
xor
add
push
add
lret
movsb
clc
inc
clc
scas
jg
out
out
mov
pop
idiv
dec
mov
add
inc
clc
or
negb
mov
add
daa
clc
insb
inc
clc
cmp
lahf
test
mov
and
add
pop
clc
pop
aaa
dec
ja
adc
lret
push
add
jbe
add
dec
cmp
adc
add
lret
icebp
mov
xor
add
clc
dec
mov
clc
sbb
lods
cmp
clc
adc
add
in
adc
lods
dec
test
cmp
mov
out
aad
pop
dec
ss
cmp
xchg
and
add
hlt
ret
clc
add
add
mov
inc
clc
mov
add
cmp
mov
add
xor
add
clc
pop
cmp
jmp
cmp
clc
mov
dec
sahf
mov
clc
negl
push
add
cmp
add
shlb
xor
add
add
push
adc
add
js
mov
add
iret
fisttps
push
in
pop
and
add
test
rorb
mov
mov
in
and
dec
mov
push
clc
jp
or
clc
jecxz
filds
out
call
sbb
dec
outsb
es
sub
dec
test
mov
aam
mov
mov
sbb
mov
or
loop
pop
scas
sbb
leave
cmp
cmp
mov
xabort
int3
cmp
jp
gs
je
clc
inc
add
push
jp
jb
add
stc
sub
clc
mov
jl
lahf
sbb
cmpsb
clc
xabort
sbb
add
jmp
fstpt
outsl
jae
add
ret
pop
jecxz
adc
add
int3
pop
sbb
dec
xchg
in
mov
lahf
lret
sbb
mov
cld
xbegin
or
clc
mov
clc
sub
imul
js
clc
aad
clc
mov
add
add
gs
pop
mov
mov
cltd
pop
pop
shlb
lcall
mov
mov
mov
xabort
lret
add
iret
mov
add
and
add
dec
add
add
mov
enter
clc
pop
clc
fs
jecxz
or
push
repz
add
add
add
out
add
xchg
sbb
test
inc
clc
dec
stos
out
jnp
leave
dec
mov
clc
fcomp
xchg
mov
adc
xchg
sar
push
cmp
or
pop
fs
arpl
add
add
xchg
and
add
push
clc
cmp
and
movsb
clc
and
aaa
push
clc
mov
add
pop
popa
add
repz
clc
xor
add
clc
lret
ds
mov
jl
add
cmp
cltd
pop
xchg
mov
mov
cmp
mov
clc
cmp
add
add
repz
dec
inc
add
das
push
jge
clc
scas
push
lahf
adc
add
or
dec
mov
daa
clc
sbb
cld
fsubrl
cmp
cs
add
or
add
add
stc
sub
mov
pop
lock
js
addr16
test
mov
mov
rclb
mov
clc
adc
cltd
mov
sub
clc
mov
fdivrs
lods
jo
add
push
stos
mov
negb
sbb
push
into
pop
mov
fnstcw
ret
push
dec
dec
popa
add
and
add
pop
fcmovbe
cld
mov
aam
jp
fldcw
dec
es
js
add
add
mov
add
add
add
dec
dec
test
mov
fsubr
popf
sub
add
je
add
ss
add
fistps
clc
roll
clc
or
add
ljmp
or
outsl
rcr
jl
out
ficompl
mov
dec
test
mov
add
add
hlt
jno
add
add
jno
add
clc
inc
clc
test
pop
sbb
mov
dec
lret
xor
add
push
add
stos
or
push
clc
inc
add
icebp
imul
cmp
push
clc
sub
adc
add
cli
mov
es
mov
clc
xchg
add
pusha
add
dec
and
add
clc
aam
dec
cmp
clc
sbb
sti
and
add
xor
add
push
pop
cmp
int
pop
jle
clc
mov
pop
outsl
loop
jnp
push
add
scas
sub
add
push
ja
mov
pop
sbb
xor
mov
cli
out
cmp
add
xchg
jl
clc
sub
gs
out
ja
xchg
int3
push
add
sar
add
dec
jnp
push
fistpl
popf
inc
add
add
mov
inc
clc
ja
clc
insb
cmp
sbb
add
enter
mov
clc
shr
es
dec
add
add
sbb
add
add
clc
xor
cmp
clc
push
add
insl
in
call
sar
or
clc
movsb
clc
xor
add
movsl
clc
in
enter
sub
cmp
clc
adc
add
mov
add
fnstenv
add
xlat
jp
mov
clc
jnp
or
clc
fcompl
clc
or
ret
clc
shlb
add
mov
mov
into
or
xchg
sar
add
inc
clc
fbld
clc
pop
clc
dec
add
xor
add
add
mov
clc
mov
clc
mov
add
xchg
adc
dec
icebp
pop
pop
jecxz
inc
clc
out
xabort
clc
fadds
add
or
clc
out
scas
dec
fstps
cld
xor
add
clc
mov
clc
popa
add
add
ja
add
fs
jmp
add
ficoms
add
clc
fldt
pop
cmc
cmp
test
xor
add
popf
mov
imul
movsb
clc
ds
outsl
dec
jecxz
popf
sub
fidivrs
icebp
lret
fwait
sbb
add
xor
pop
sti
push
int
sbb
xchg
adc
add
movsl
clc
dec
mov
xchg
cmpsb
clc
add
add
and
add
cmp
or
jbe
xchg
lret
jg
mov
std
sbb
add
add
pop
clc
sub
dec
shlb
call
add
add
add
call
sbb
clc
push
mov
add
add
mov
xabort
clc
add
add
loopne
cmp
movsl
clc
mov
pop
mov
jne
pop
and
add
lods
jg
cs
clc
jg
push
add
mov
insb
mov
loope
je
push
add
add
outsb
jo
add
mov
std
lcall
push
add
xchg
xlat
jae
add
mov
lods
test
xchg
and
add
jbe
lret
outsb
addr16
sub
daa
clc
and
add
jmp
clc
adc
add
gs
aam
clc
mov
clc
jae
add
adc
add
add
push
call
arpl
add
add
push
xchg
jg
clc
pop
push
add
dec
cli
dec
inc
add
xchg
pop
lret
push
or
clc
sub
inc
add
ret
movsl
clc
sub
add
fidivrl
clc
xchg
nop
pop
das
and
add
push
cmpsb
clc
int3
imul
pop
sub
clc
inc
clc
jg
sar
idivb
lret
bound
add
or
mov
lret
dec
xchg
dec
mov
sbb
add
add
sub
clc
jns
pop
fsubrs
mov
loopne
and
add
clc
xor
add
insl
and
add
test
cmp
pop
stc
into
sti
shll
jbe
sbb
enter
add
push
xchg
sub
push
decb
adc
add
scas
repnz
clc
outsb
push
int3
mov
add
add
mov
jbe
fsub
clc
stc
jo
add
add
pop
ljmp
add
bound
add
sbb
movsl
clc
push
xor
add
add
or
inc
clc
cmp
ficoml
mov
iret
sub
add
add
in
pusha
add
and
add
aas
sub
add
clc
addr16
push
out
dec
adc
add
add
inc
clc
add
ret
clc
sbb
sub
add
sbb
xabort
push
jnp
or
push
clc
sbb
inc
clc
fstl
add
sub
add
repz
jb
add
xchg
jge
jns
add
push
daa
clc
addr16
psubusb
dec
jecxz
xchg
leave
or
clc
imul
ljmp
daa
clc
lods
mov
add
fildl
mov
add
mov
mov
push
mov
pop
mov
and
add
add
add
jno
add
jge
and
add
push
push
add
pushf
loop
ss
cmp
adc
add
ja
cmpsb
clc
inc
clc
sub
clc
sub
xchg
cltd
jp
clc
sub
aaa
in
add
add
mov
dec
pop
daa
clc
cmp
clc
cmp
mov
mov
sti
outsl
or
bound
add
jne
clc
out
int
clc
inc
add
mov
add
js
in
push
add
pushf
es
inc
add
clc
test
inc
add
bound
add
add
and
add
pop
mov
jmp
add
add
jns
and
sub
bound
add
aam
push
lods
cli
mov
add
lcall
fstl
add
leave
je
mov
out
pop
std
pop
mov
add
clc
xchg
sar
aam
push
add
lcall
fsubrl
sub
jns
clc
mov
xchg
jb
add
add
xor
add
clc
lcall
int
jmp
push
add
xor
adc
add
clc
sar
or
xbegin
pusha
add
or
clc
incb
add
bound
add
mov
xor
clc
fs
pop
outsb
outsb
pop
or
call
out
mov
pop
insl
xor
add
add
pop
nop
out
sar
xor
push
rorb
je
jge
mov
clc
pop
and
nop
add
stos
jns
sar
jne
loop
fbstp
fdivs
test
adc
add
pop
sar
add
stos
and
add
and
add
popf
sbb
push
inc
add
lods
fisubs
clc
and
add
clc
mov
pop
testb
pop
push
clc
or
clc
sub
mov
adc
add
pop
clc
addr16
imul
dec
pop
mov
sub
pushf
sbb
add
add
ret
clc
mov
add
fwait
mov
gs
fst
lods
cmp
clc
scas
pop
add
add
and
add
clc
pusha
add
mov
repnz
add
daa
clc
inc
add
shlb
add
stos
add
add
dec
dec
jno
add
clc
repz
mull
add
into
adc
add
clc
mov
add
sar
pop
jb
add
cmp
clc
inc
clc
pop
adc
add
stos
adc
std
cmp
das
and
add
cmp
clc
in
jp
add
jmp
xlat
and
add
fs
mov
and
add
cltd
lahf
lods
jge
clc
jl
int
add
pop
inc
clc
and
add
outsb
inc
clc
or
add
add
push
cmpsl
clc
clc
div
fimull
clc
cmp
fwait
sub
add
clc
sub
clc
aad
repz
pop
mov
clc
out
das
xor
add
ss
add
stc
stos
and
add
push
add
cmp
and
add
imul
jo
add
clc
in
mov
stos
mov
xchg
enter
aam
loopne
ror
stc
into
and
add
clc
movsb
clc
sub
mov
aaa
test
fidivl
xabort
and
mov
daa
clc
daa
clc
in
add
loopne
jno
add
jns
or
clc
pop
inc
add
add
fmull
mov
clc
xchg
add
add
dec
and
add
dec
frstor
jp
clc
stos
mov
lret
add
inc
clc
push
add
icebp
cmp
sbb
add
add
clc
xabort
sti
test
add
add
add
daa
clc
adc
lahf
add
add
imul
faddl
add
in
lea
sub
lea
adc
add
add
sub
clc
mov
and
add
add
sar
cmp
cld
push
pop
xchg
imul
dec
fcoml
jb
add
add
sar
or
push
sub
add
mov
and
clc
mov
clc
data16
adc
add
add
dec
int
push
adc
movsb
clc
out
push
arpl
add
lcall
add
int3
sar
fisttpl
cli
test
mov
or
add
push
add
clc
pusha
add
test
and
add
clc
push
and
add
clc
out
call
inc
add
mov
add
add
add
imul
clc
sbb
js
push
add
loopne
fcomps
push
jo
add
loopne
cld
stc
gs
push
add
or
cmc
inc
clc
dec
cmp
mov
stc
jno
add
add
clc
sar
outsl
bndstx
mov
movsb
clc
outsl
mov
clc
xchg
insb
add
add
clc
push
xchg
daa
clc
jb
add
cmp
xor
mov
clc
stos
shrb
xchg
hlt
fisubl
add
or
add
add
clc
push
add
sub
clc
mov
jne
adc
add
clc
mov
mov
mov
clc
xchg
repz
arpl
add
test
test
cmp
clc
leave
addr16
sub
out
cmp
jo
add
add
xor
add
push
push
add
lret
add
cli
lods
mov
clc
xchg
imul
pop
xchg
or
clc
icebp
jmp
daa
clc
jnp
clc
inc
add
popf
pop
outsb
fwait
xor
add
loope
std
dec
flds
add
in
pop
mov
add
hlt
in
xor
xchg
mov
xor
add
add
xor
pushf
out
sbb
clc
call
icebp
data16
fwait
ret
add
mov
mov
clc
roll
sub
data16
dec
push
jge
arpl
add
mov
add
mov
fadds
add
fimuls
mov
add
sub
lods
loop
push
or
add
aas
jns
add
mov
dec
bound
add
push
test
sbb
add
cmpsl
clc
jb
add
clc
bound
add
adc
add
add
cmc
loope
std
lods
inc
clc
clc
adc
add
add
clc
and
add
add
push
ss
cs
fimuls
test
aad
clc
jbe
aaa
xor
notl
add
push
stos
push
int3
out
mov
filds
aam
cwtl
mov
sub
mov
bound
add
cmp
pushl
add
add
mov
lea
push
inc
clc
pop
cmp
daa
clc
cmp
clc
mov
clc
xor
add
imul
clc
aam
clc
add
add
and
add
add
xchg
xlat
jle
stos
popf
cmpsb
clc
es
movsb
clc
std
pop
out
push
add
loop
xor
cmp
aam
clc
icebp
lods
xchg
cmp
sub
push
xchg
outsb
sahf
clc
dec
or
and
add
push
add
and
add
cs
add
or
xor
add
clc
jae
add
add
add
or
stos
jle
outsb
out
insl
movsb
clc
jno
add
add
out
popf
pop
in
lods
shlb
dec
push
mov
clc
pusha
add
or
xabort
pop
leave
outsb
xchg
push
in
mov
mov
add
clc
pusha
add
jo
add
out
stos
aaa
mov
insb
fcomip
ja
add
xor
add
mov
loop
lcall
clc
rcll
add
mov
push
clc
popf
dec
imul
pop
clc
lods
add
cmp
call
add
clc
mov
add
xor
add
lcall
jb
add
or
add
std
add
add
add
testb
sbb
pop
mov
loopne
pop
movsl
clc
sbb
clc
mov
clc
or
add
dec
cmp
cmp
mov
leave
pop
dec
cmp
add
in
xor
add
add
dec
add
clc
sbb
push
mov
sbb
out
adc
add
dec
fisttpl
dec
int3
xlat
aad
or
add
add
add
push
add
movsb
clc
imul
sub
clc
data16
loope
stc
enter
clc
ljmp
push
clc
jb
add
mov
pop
jmp
clc
cltd
loope
cmp
jns
clc
rclb
repz
sub
loopne
aaa
add
add
inc
clc
push
or
lret
jmp
add
or
inc
add
cmp
mov
clc
push
add
movsb
clc
enter
xor
sahf
sti
cmp
loopne
mov
ss
mov
clc
stc
mov
add
fstpt
xor
add
pushf
or
add
add
jb
add
xchg
jge
cmp
add
fisubrs
push
addr16
inc
clc
dec
cmp
loope
pop
xchg
and
add
adc
add
clc
movsb
clc
movsl
clc
inc
clc
jns
clc
adc
mov
add
scas
bound
add
sbb
xchg
mov
mov
out
or
add
pop
dec
repnz
sbb
clc
and
xchg
pop
call
test
rcrl
xchg
fwait
and
add
add
clc
popa
add
xchg
jecxz
cmp
sbb
clc
lea
dec
ds
push
xchg
adc
add
clc
lahf
popa
add
pushl
shrb
add
nop
sbb
add
push
fnsave
push
mov
leave
cmp
mov
mov
add
mov
clc
in
inc
clc
adc
add
lret
mov
cmpsl
clc
inc
clc
das
cld
cmp
clc
pop
add
cmp
das
test
jnp
mov
movsl
clc
das
cld
lods
dec
xor
add
xchg
call
in
lret
cmp
aam
cld
mov
clc
jnp
sar
jnp
or
dec
dec
mov
clc
in
bound
add
add
add
cmc
mov
push
cmp
mov
mov
add
dec
dec
sub
add
mov
clc
outsb
inc
add
add
add
adc
clc
cld
in
pushf
cmp
add
mov
add
cmc
pop
icebp
xchg
fsubs
add
add
cmc
sbb
mov
pop
stos
pop
js
clc
xabort
pushl
data16
ret
and
add
in
adc
add
inc
clc
ret
clc
popa
add
loop
shrl
xabort
clc
add
add
test
ljmp
clc
xor
add
jno
add
add
ret
push
add
adc
add
mov
jmp
ja
jp
xor
add
dec
fnsave
clc
xchg
sub
clc
jp
fistpl
int
dec
imul
clc
idivl
clc
sti
outsl
jo
add
clc
gs
xchg
adc
add
cwtl
fdivrl
lret
add
mov
cmp
add
dec
movsb
clc
and
add
imul
lea
ja
xor
add
clc
filds
push
add
mov
int
inc
clc
aas
mov
call
add
cmp
inc
clc
gs
fidivrl
call
sub
sar
std
arpl
add
and
out
lods
hlt
pop
loop
xor
add
clc
adc
add
inc
clc
in
xchg
aaa
loope
jae
add
adc
add
fsubs
cmp
mov
adc
add
xor
add
add
add
add
clc
xor
add
add
in
jno
add
and
add
cwtl
xchg
dec
sub
add
fcoml
add
clc
sbb
fisttpll
sub
adc
or
ret
imul
add
add
sar
cltd
jae
add
insb
mov
xor
add
lods
mov
aas
out
aad
stos
cmp
sbb
loop
movsl
clc
lahf
js
dec
push
add
sarl
xor
clc
xor
fcmovu
cmp
jne
add
xor
add
jecxz
dec
bound
add
clc
shrl
xabort
pop
sbb
mov
inc
add
sahf
ror
jbe
push
shrl
aad
mov
add
mov
pop
xchg
jge
add
addr16
aam
mov
int
ret
mov
aad
pop
jo
add
pop
pop
jno
add
mov
clc
stos
pop
ret
add
mov
flds
add
adc
add
mov
fwait
out
and
add
int3
push
jmp
mov
movsb
clc
aas
add
movhps
clc
scas
sub
add
add
add
call
mov
clc
mov
clc
enter
add
adc
add
in
jmp
clc
loop
dec
mov
pop
rcrb
dec
in
mov
scas
adc
clc
sbb
cmp
add
xor
add
pusha
add
lea
vmaxps
cs
mov
dec
mov
inc
clc
icebp
call
push
into
xor
add
clc
jae
add
sti
adc
add
insb
xchg
xor
into
mov
js
mov
mov
clc
xchg
inc
clc
sub
mov
mov
inc
clc
ret
ds
adc
add
inc
clc
mov
push
clc
fcmove
popa
add
add
add
pop
insl
sbb
add
out
mov
clc
mov
add
scas
jp
xor
add
add
sarl
push
data16
stos
cltd
arpl
add
add
test
aas
insl
pop
xor
add
mov
add
jge
mov
add
je
xor
mov
repnz
cmp
mov
or
fbstp
add
insb
cmp
add
clc
dec
and
add
or
sbb
clc
arpl
add
adc
data16
push
iret
inc
clc
push
clc
lock
mov
repnz
clc
gs
mov
pop
std
pop
dec
pop
clc
inc
clc
int3
push
add
xor
add
loope
cmp
cs
push
add
dec
jg
test
fcoms
add
add
sub
add
add
out
pop
ret
clc
int
mov
clc
sub
and
add
add
push
sar
lcall
test
add
or
dec
jmp
pop
add
mov
mov
cmc
cmp
dec
in
bound
add
clc
imul
int
clc
mov
add
pop
out
push
add
fs
jnp
add
cmp
je
mov
loope
pop
stos
outsb
xchg
lret
jno
add
add
mov
add
mov
cli
imull
xor
add
neg
cmpsl
clc
mov
mov
add
xabort
xor
add
mov
sbb
js
mov
mov
sbb
cmp
clc
call
add
clc
insl
or
and
add
shrl
dec
push
mov
add
mov
add
clc
icebp
or
mov
lods
dec
leave
fs
mov
clc
mov
es
jo
add
sbb
and
add
xchg
icebp
adc
add
clc
bound
add
pop
add
clc
ret
clc
js
cmp
mov
mov
aad
sbb
dec
lcall
add
clc
push
or
sub
loopne
inc
add
je
vmovaps
add
mov
add
sarb
lods
mulb
add
push
into
gs
xchg
cld
cmp
add
add
add
aad
clc
and
add
add
inc
add
jne
clc
clc
xor
add
cmp
pop
lea
add
clc
jecxz
icebp
xor
add
add
jns
push
and
add
clc
stc
push
add
aam
and
add
pop
test
es
int
clc
or
clc
shlb
sar
pop
mov
stos
mov
outsl
inc
add
push
clc
mov
adc
clc
addr16
push
add
mov
mov
clc
arpl
add
push
adc
add
mov
lock
add
movsb
clc
fs
jecxz
and
icebp
inc
add
mov
clc
test
mov
shll
add
jl
add
mov
add
ret
clc
dec
push
add
xchg
sub
mov
mov
mov
clc
xchg
leave
jns
inc
add
xchg
data16
negl
clc
sub
clc
push
add
xor
add
adc
dec
cmp
add
outsl
inc
add
mov
add
ret
add
dec
inc
clc
loop
shrl
adc
aam
and
add
add
clc
inc
clc
data16
sub
imulb
add
add
clc
dec
mulb
lahf
cmpsl
clc
sar
clc
mul
clc
das
fld
clc
in
testl
xor
add
test
cmp
or
clc
data16
cmp
imul
xchg
fbld
pushf
jne
add
movsb
clc
xchg
movsl
clc
in
cmc
pusha
add
popf
add
add
clc
stc
sbb
gs
scas
jl
adc
add
add
out
dec
aaa
cmp
xchg
jl
clc
ficoml
add
clc
stos
inc
clc
xor
and
add
add
iret
pop
cltd
nop
aam
sar
jbe
clc
inc
add
icebp
mov
add
adc
add
push
clc
sub
add
inc
clc
pop
lret
scas
jns
shl
xabort
clc
inc
clc
pusha
add
push
jecxz
cmp
and
add
arpl
add
add
testl
shll
clc
aam
push
push
add
sti
xchg
adc
add
scas
jle
sbb
add
cmpsb
clc
cltd
shlb
add
pusha
add
xbegin
ss
xchg
std
and
add
add
loopne
ret
pop
ret
sbb
push
add
cmp
bound
add
mov
add
add
clc
cmp
push
xchg
xchg
and
xchg
lock
clc
lods
xchg
in
cmpsl
clc
cmp
imul
cld
inc
add
lea
add
packssdw
clc
fwait
pop
mov
dec
xchg
pushf
outsl
sti
js
outsb
cs
out
gs
sahf
fildll
xbegin
clc
sbb
adc
add
clc
adc
clc
loope
fwait
mov
xlat
jg
cmovnp
js
pop
pop
ljmp
icebp
xchg
xor
add
je
sbb
add
mul
clc
xchg
in
fstpl
jo
add
in
lret
add
jl
add
pop
mov
clc
jecxz
dec
push
lahf
cmpsl
clc
dec
adc
add
lcall
mov
out
push
add
js
clc
mov
fbld
add
add
mov
clc
push
and
dec
inc
add
mov
mov
pop
sub
clc
cmp
add
or
sbb
push
add
pop
pushf
mov
cwtl
xchg
ret
clc
mov
add
push
fisubrs
xor
lret
ds
addr16
push
add
fildl
add
outsl
repnz
pop
dec
test
rcr
rol
clc
or
clc
test
fwait
sub
outsl
or
add
cli
dec
aaa
sti
xchg
ljmp
clc
jecxz
mov
clc
int3
in
outsb
inc
add
sti
cmp
sbb
clc
scas
stc
lock
mov
sbb
inc
clc
add
stc
popf
dec
inc
clc
addr16
push
bound
add
clc
cs
clc
cld
mov
clc
in
add
add
in
gs
aad
mov
jbe
clc
out
mov
pop
mov
mov
jl
sbb
cmc
and
add
adc
add
cmpsb
clc
and
jnp
imul
clc
fisttpl
cld
xchg
sbb
hlt
xbegin
add
sub
clc
fucomi
fs
jmp
jecxz
and
add
add
mov
add
add
dec
dec
and
and
mov
lret
fisttpl
hlt
movsl
clc
data16
push
xchg
sahf
sar
sbb
mov
mov
and
add
clc
push
clc
or
clc
adc
clc
jae
add
clc
lods
push
add
cmp
clc
mov
sbb
xbegin
add
or
clc
ficoml
and
add
xor
add
clc
data16
sbb
clc
sbb
in
aad
cmp
clc
inc
add
sbb
add
add
jne
fsub
clc
inc
add
pushf
cmp
loop
xchg
sub
pushf
cmp
or
cltd
and
add
ljmp
std
ja
aam
xor
add
mov
sti
cmp
sti
jo
add
add
add
jmp
mov
rcll
into
aam
mov
daa
clc
lods
lahf
xchg
add
xor
add
pop
clc
lgs
add
clc
stos
rcr
sarl
dec
cmp
sub
add
movsb
clc
lcall
fimull
out
jecxz
fbstp
scas
outsl
xchg
outsb
cmp
clc
outsl
test
or
int
clc
adc
add
inc
clc
cld
mov
inc
clc
xchg
inc
add
bound
add
cmpsb
clc
cmp
cmp
sub
gs
fs
inc
clc
sbb
out
xor
add
jo
add
mov
jno
add
cli
int
clc
inc
add
stos
clc
xchg
sar
clc
movsb
clc
lea
add
inc
add
sub
jl
mov
xor
add
jno
add
jecxz
push
add
jae
add
addr16
sbb
sbb
mov
cmp
push
add
mov
int
sbb
scas
pop
push
add
or
aas
jo
add
add
add
add
cmpsl
clc
jo
add
stos
sahf
add
add
clc
clc
mov
clc
push
add
add
jmp
xabort
clc
jns
add
scas
pushf
jnp
xchg
mov
xor
icebp
lock
add
add
clc
push
add
lahf
xchg
push
or
add
xchg
pop
adc
jb
add
add
jg
in
add
add
jno
add
add
mov
clc
cmp
lock
push
mov
clc
lahf
test
insb
inc
clc
push
insb
pop
push
clc
popa
add
jb
add
push
sub
fldt
inc
add
jl
add
xlat
push
clc
mov
xchg
int3
movsb
clc
sub
cmpsb
clc
jnp
add
add
clc
cmpsl
clc
xor
add
add
add
add
mov
clc
push
loopne
jae
add
xchg
xor
add
test
cltd
dec
addr16
inc
add
mov
clc
adc
add
clc
loope
in
leave
lcall
negl
push
add
imul
add
clc
stos
scas
repz
jmp
mov
add
add
push
add
jg
pop
imul
mov
outsl
outsb
cmp
add
pop
pop
aaa
mov
out
addr16
sub
clc
call
cmpsl
clc
test
movsl
clc
jge
xor
add
clc
jg
clc
cmp
inc
add
notb
mov
and
mov
add
push
lret
cmpsb
clc
add
repz
xchg
lods
pop
stc
cmp
ljmp
push
push
clc
cli
mov
clc
cli
jae
add
mov
pop
dec
cmp
enter
repnz
clc
insb
jmp
jle
sti
xchg
ljmp
jg
clc
js
push
enter
js
scas
stos
push
add
push
testb
add
clc
xchg
aaa
jecxz
cwtl
sar
stc
fmull
aad
fcoml
clc
hlt
fs
mov
add
jno
add
clc
xchg
jecxz
sti
pop
xlat
push
add
sub
rorb
imul
stos
ret
outsb
sub
add
add
mov
sbb
add
add
aaa
into
mov
dec
nop
fists
int3
call
sub
add
xchg
adc
add
nop
inc
clc
cmp
add
cmp
clc
pop
sbb
pop
in
fwait
mov
ja
add
add
xchg
repnz
add
addr16
out
lods
fcmovnu
push
add
jecxz
jle
or
fistpll
ja
es
mov
adc
add
sub
sub
mov
jg
in
jp
js
cld
and
add
sbb
add
cltd
imul
das
jno
add
add
pop
pop
lret
int3
add
inc
add
jmp
add
xchg
out
sahf
dec
or
pop
mov
lahf
pop
mov
add
pop
push
add
sbb
add
div
xbegin
mov
add
pop
imul
and
cli
fucomp
lods
and
add
add
sbb
dec
push
add
rcll
pop
push
add
pop
lods
das
sbb
inc
add
lods
and
aad
or
clc
jge
clc
adc
add
clc
repz
add
sbb
jo
add
add
xor
clc
inc
add
jo
add
clc
dec
inc
clc
scas
out
icebp
stos
dec
inc
clc
jle
dec
cmp
mov
outsl
mov
add
dec
xor
gs
aaa
hlt
adc
add
clc
fistpll
push
add
mov
clc
shll
aas
xor
or
movsb
clc
je
add
xchg
mov
cmp
lahf
push
clc
rcrb
outsb
test
inc
add
out
xchg
cmp
add
cmp
add
clc
inc
add
lods
outsl
out
inc
clc
jno
add
clc
push
in
int3
xabort
clc
out
dec
pop
clc
sar
test
dec
sub
add
add
scas
je
shlb
clc
mov
clc
sub
cmp
mov
stc
daa
clc
xchg
xor
shlb
add
pop
testb
xchg
dec
lret
dec
jl
add
arpl
add
clc
cmp
add
enter
ds
xchg
mulb
clc
ss
mov
add
pop
shlb
add
clc
inc
add
rcrb
das
adc
add
sub
call
xchg
insl
popa
add
add
add
clc
push
add
xabort
add
mov
pop
xor
add
pop
clc
add
push
add
inc
add
lods
fisubrs
shrl
mov
negl
pop
mov
clc
inc
add
into
roll
cmpsb
clc
push
loop
call
and
add
xabort
test
sbb
add
clc
xor
add
dec
jl
fs
mov
add
or
xbegin
sbb
clc
cmp
cmpsl
clc
loop
in
add
add
arpl
add
movsl
clc
dec
mov
push
mov
fdivrs
add
and
dec
or
cmpsb
clc
push
scas
cld
hlt
insb
sahf
xchg
push
loop
sar
clc
pusha
add
sub
add
cld
in
and
add
je
clc
negl
stos
lods
jae
add
pop
sub
clc
xchg
cmpsl
clc
cld
jo
add
fcmovb
clc
mov
sub
mov
faddl
add
dec
dec
aas
push
cmp
xor
clc
and
pusha
add
push
cmp
jl
add
inc
clc
test
test
pop
jbe
lret
inc
add
fnsave
cs
repnz
test
sti
inc
clc
pushf
ds
dec
cmp
add
dec
mov
add
cmc
das
sbb
add
cmp
mov
and
clc
add
add
cmp
sub
dec
ror
jae
add
push
clc
cmp
add
dec
sbb
add
xor
add
add
mov
stos
cmp
or
add
jno
add
hlt
cmpsl
clc
jg
sbb
add
clc
mov
stc
mov
xlat
xchg
pop
rolb
add
add
fdiv
mov
add
sti
fisubrl
inc
add
mov
clc
or
sbb
add
data16
xor
add
lock
jno
add
add
add
outsl
mov
stos
sar
clc
mov
clc
ss
and
add
mov
xchg
pusha
add
xchg
cmp
add
jl
jle
xlat
loope
inc
add
aaa
sub
add
mov
jg
add
xchg
sub
clc
jae
add
clc
imul
scas
and
inc
clc
das
out
addr16
sar
push
fistpll
nop
cwtl
stos
scas
cli
arpl
add
rorl
jo
add
cmp
xor
add
push
js
and
add
add
mov
add
mov
clc
push
int3
mov
mov
je
clc
in
sub
xabort
inc
add
xchg
mov
into
or
xor
add
jecxz
or
add
clc
jae
add
xchg
add
clc
lret
mov
sub
xor
add
sbb
data16
out
in
into
loope
rorb
out
aad
add
test
add
sub
sub
mov
mov
clc
inc
clc
scas
arpl
add
dec
sar
clc
jge
clc
and
into
cmp
pop
pop
mov
dec
push
add
cmc
sti
add
add
pop
inc
clc
sbb
add
lods
div
mov
lret
clc
mov
mull
xabort
aas
mov
jle
popf
ret
inc
add
sub
test
pusha
add
mov
clc
shrb
std
ljmp
add
into
in
push
leave
jae
add
add
or
add
xchg
mov
hlt
int3
fisttpl
add
mov
pop
lret
clc
cmp
mov
popf
insl
lahf
fs
lcall
push
add
icebp
cmp
add
or
add
fnstcw
clc
aam
jnp
fs
ret
clc
or
mov
test
repz
xchg
pop
ja
mov
and
add
add
clc
and
add
xor
add
cmpsb
clc
cwtl
or
mov
dec
cmp
test
mov
dec
stc
or
cmp
clc
es
imul
push
bound
add
add
das
or
add
arpl
add
pop
jg
adc
add
cltd
mov
add
imul
aam
add
add
add
ret
data16
cmp
and
fmul
cli
fsub
clc
fistpll
fistpll
pop
int
add
add
dec
test
or
sarb
ds
add
xchg
mov
push
or
clc
add
add
imul
jae
add
clc
inc
clc
jo
add
mulb
jp
fwait
shl
mov
in
test
fdivrs
and
add
dec
or
clc
sub
add
sahf
xlat
lcall
in
cs
into
pushl
ss
or
dec
insl
cli
lock
add
sub
clc
pop
xchg
fcmovb
clc
or
add
add
enter
fadd
clc
cld
and
add
mov
and
add
lcall
and
add
loopne
ret
pusha
add
addr16
jo
add
clc
mov
clc
cli
pop
cmp
mov
aas
dec
push
add
pushf
xchg
jecxz
mov
clc
xabort
clc
xchg
mov
add
lcall
ret
pop
out
push
adc
cmp
out
gs
or
lahf
mov
add
add
push
cmc
or
xor
add
add
push
add
in
js
dec
cli
inc
clc
push
lods
cmp
add
mov
add
add
add
add
aad
clc
jle
pop
clc
loopne
lods
dec
and
add
clc
mov
add
adc
add
mov
clc
fsubl
xchg
push
clc
inc
clc
inc
add
data16
sarl
adc
add
clc
mov
clc
dec
pop
sbb
fsubl
add
add
and
aad
cmc
bnd
cmp
clc
clc
mov
cmpsl
clc
jne
add
into
pushf
xchg
xor
add
jp
add
add
add
mov
jge
xchg
mov
cmc
roll
dec
aaa
add
sub
clc
clc
sbb
sahf
push
add
add
add
add
cs
cmpsb
clc
sub
mov
add
clc
xchg
dec
xchg
jbe
clc
pop
clc
gs
popf
outsl
sbb
dec
inc
add
jbe
outsl
lods
jae
add
add
push
aad
cmp
and
add
add
sub
sub
clc
xchg
shll
add
test
xor
add
add
addr16
xchg
mov
xchg
inc
clc
call
mov
dec
fdiv
and
add
adc
clc
loop
cmp
add
dec
mov
mov
popl
clc
es
out
insl
pop
clc
lcall
dec
loop
popf
mov
out
sub
data16
ljmp
jbe
clc
or
int3
in
adc
add
clc
outsb
mov
or
add
sbb
add
clc
aas
std
js
add
add
adc
add
add
lock
add
add
and
add
adc
xor
add
clc
pop
cmp
add
sar
scas
jmp
inc
clc
xor
add
clc
cmp
clc
cmp
clc
mov
clc
pop
sti
mov
mov
clc
jo
add
cmp
cmp
jge
ljmp
add
add
popa
add
data16
push
add
ljmp
sub
stos
testl
add
sahf
in
xchg
adc
add
lret
clc
sar
dec
loope
rclb
clc
data16
loop
xor
insl
adc
add
mov
cmpsl
clc
jbe
add
data16
fstps
das
loop
fwait
loop
xchg
sar
clc
sub
jns
and
add
clc
daa
clc
jg
popf
push
xchg
inc
clc
mov
cmp
add
add
clc
adc
data16
dec
in
and
add
popa
add
dec
frstor
add
mov
add
dec
repnz
xlat
add
add
add
and
mov
repnz
rclb
add
adc
add
stos
out
je
jae
add
lea
add
into
dec
fcom
inc
add
icebp
fimull
adc
add
test
cmpsl
clc
ror
loop
lea
call
and
add
pop
add
inc
add
rorb
sbb
dec
lcall
clc
scas
xchg
and
add
je
add
lret
clc
pop
pop
loopne
sti
xor
add
add
push
xor
cmp
mov
sbb
clc
lahf
jmp
mov
clc
lock
add
pop
loope
cld
cli
inc
add
into
mov
clc
push
add
scas
and
add
imul
cwtl
lods
and
add
jp
icebp
add
add
clc
lcall
clc
xor
push
inc
add
mov
add
or
in
push
clc
jo
add
mov
clc
popa
add
mov
in
sar
add
add
clc
xchg
cltd
pop
mov
add
pop
inc
add
lods
jmp
add
mov
and
add
add
jecxz
pop
mov
clc
cmp
imul
dec
mov
mov
inc
clc
test
imul
or
rcll
add
cmp
cmp
xchg
xchg
or
scas
pop
jge
clc
push
clc
mov
add
popf
inc
clc
sub
add
clc
xabort
dec
fs
mov
xchg
xchg
cltd
sbb
insb
out
pop
clc
jb
add
clc
sti
mov
xlat
dec
pop
sbb
clc
mov
push
add
outsl
and
add
clc
mov
jno
add
add
clc
ret
data16
mov
clc
jnp
add
data16
lods
icebp
div
inc
clc
ja
clc
jmp
clc
fcom
push
add
xchg
cmp
sbb
pusha
add
push
add
pop
jne
fcoms
push
add
adc
add
or
mov
cmp
pop
dec
jge
pop
cmp
mov
pop
pop
frndint
imull
dec
leave
mov
add
inc
clc
and
add
loop
mov
clc
cwtl
push
add
int3
pop
insb
daa
clc
enter
mov
clc
cld
push
dec
sub
add
cmp
pop
adc
clc
mov
rep
test
add
add
mov
add
sub
cmp
adc
add
clc
adc
add
mov
mov
nop
adc
add
cmp
add
lea
int
dec
test
clc
pusha
add
pop
pop
clc
mov
and
xchg
fs
mov
popf
loopne
mov
aam
cmp
in
mov
insb
cld
nop
mov
cmp
test
sbb
add
push
lret
clc
pop
sub
add
mov
add
dec
lret
push
adc
add
clc
adc
add
jecxz
sub
in
pop
clc
mov
add
mov
ja
fdivrl
jns
addr16
loop
jl
into
jecxz
push
mov
clc
fs
adc
add
clc
add
sbb
clc
inc
add
xabort
clc
and
call
clc
mov
out
jbe
add
sbb
daa
clc
xor
add
xchg
or
clc
sub
cmp
push
pop
cmp
add
jnp
sub
mov
iret
je
xchg
or
jecxz
rcr
in
shlb
clc
mov
cmp
add
lods
xor
leave
jp
ds
aad
clc
jae,pt
add
adc
push
jno
add
inc
clc
cmpsl
clc
call
cwtl
ficomps
xchg
xor
add
clc
pop
adc
add
clc
or
int
push
add
xor
add
fs
or
add
clc
mov
add
std
sbb
clc
add
add
fs
in
push
add
inc
clc
dec
or
jns
jae
add
clc
jmp
out
mov
clc
sbb
rcrb
add
xchg
sbb
clc
stos
push
loope
hlt
mov
jb
add
cmp
sub
add
add
inc
add
testb
bound
add
add
xchg
mov
mov
add
push
add
pop
sar
add
loopne
clc
movsb
clc
pop
pop
mov
sub
dec
sub
data16
push
add
lahf
jae
add
or
clc
push
add
outsl
push
aam
negb
clc
cltd
push
pop
sti
fdiv
cmp
and
add
outsl
or
adc
add
xor
add
leave
jno
add
cmp
add
add
clc
fisttpll
rol
clc
sahf
enter
adc
add
add
in
sbb
shrb
xchg
insb
adc
xor
add
scas
into
adc
add
mov
clc
or
pop
hlt
rorb
add
or
add
clc
fwait
pusha
add
bound
add
add
rcrb
dec
mov
scas
iret
lret
lock
mov
inc
clc
in
dec
xor
cs
pop
xor
add
stc
test
shlb
jns
lret
mov
add
pop
jmp
mov
add
mov
cmpsl
clc
and
pop
sub
scas
enter
mov
jl
dec
sbb
push
mov
xbegin
repnz
add
push
add
arpl
add
adc
inc
add
xchg
fadd
clc
sub
mov
add
xor
add
rcrb
in
inc
add
cltd
je
clc
and
add
add
push
add
adc
add
inc
clc
ret
fcoml
clc
lcall
jae
add
and
rclb
pop
push
fdiv
sbb
out
inc
clc
lret
lcall
sar
cmpsb
clc
inc
add
sahf
lahf
cmpsl
clc
inc
add
lret
movsb
clc
test
dec
out
shl
clc
call
int3
push
add
mov
add
add
clc
or
pop
lock
add
add
das
mov
clc
cmp
xabort
xchg
and
add
add
dec
mov
xor
add
add
mov
mov
lea
add
call
clc
jbe
das
imul
lahf
jbe
aam
ret
clc
adc
add
in
mov
dec
xor
clc
jae
add
aaa
flds
clc
and
add
sahf
lods
imul
cmp
pop
stc
jmp
clc
gs
mov
mov
sub
fcompl
fs
xor
add
clc
mov
add
lcall
jae
add
add
xchg
xor
push
adc
add
push
add
mov
bswap
inc
add
mov
cmp
je
and
stos
mov
xor
add
add
adc
clc
data16
mov
add
jbe
jne
cmp
jb
add
add
and
add
add
or
fs
mov
clc
in
int3
inc
clc
pop
loope
nop
mov
add
add
add
imul
sar
cmp
inc
add
mov
lcall
add
inc
clc
jl
jo
add
cmp
clc
and
add
add
jb
add
or
clc
pop
rorb
or
pop
test
push
clc
mov
cmc
push
movsl
clc
imul
cmpsl
clc
push
add
pop
add
add
inc
add
xchg
lret
pushf
xlat
mov
mov
add
in
mov
cltd
hlt
data16
outsb
loope
sar
icebp
mov
clc
data16
adc
add
je
xor
add
jl
push
jns
sub
lock
icebp
ljmp
cld
pop
sbb
aam
inc
clc
test
xor
add
clc
jae
add
jbe
aas
lahf
push
add
push
and
ret
clc
sub
add
int3
cmp
in
inc
clc
lret
fadd
clc
inc
add
sti
xor
pop
ljmp
mov
inc
clc
pushf
out
aaa
iret
int
scas
push
add
mov
clc
lret
or
mov
sub
clc
scas
fcoml
add
push
clc
imul
mov
add
add
lret
lea
add
leave
sti
xbegin
jge
add
xchg
popf
ret
clc
cmc
pop
inc
clc
xlat
and
fstl
add
add
idivb
add
rcll
add
clc
test
fdiv
sub
clc
mov
cmp
in
call
dec
sbb
fnstsw
scas
sbb
in
cmp
ror
nop
xchg
or
clc
sub
pop
mov
push
add
dec
outsb
mov
sar
mov
loope
ljmp
add
add
mov
ret
clc
and
clc
mov
cmc
and
add
add
mov
clc
push
add
cltd
leave
mov
add
or
mov
and
add
out
jmp
add
add
sub
add
ficoms
mov
dec
mov
inc
add
aam
xor
add
pusha
add
mov
jl
mov
dec
mov
test
cmp
clc
cmp
mov
in
pop
and
add
add
clc
add
adc
fbstp
add
out
jmp
mov
shr
xor
add
cmp
clc
cltd
lahf
out
arpl
add
add
xabort
inc
clc
rcrb
sbb
xor
aad
fwait
int
mov
mov
jb
add
clc
cltd
in
adc
add
xbegin
adc
add
push
aad
fsts
fwait
and
add
add
in
ja
mov
xchg
mov
or
clc
ret
clc
ret
clc
aad
push
push
clc
stos
cmp
psllq
jne
clc
ja
sbb
bound
add
dec
lret
jmp
stos
adc
add
ror
jmp
mov
xor
sbb
cmpsb
clc
cs
in
or
sbb
inc
add
xchg
xchg
pop
cs
clc
sar
jne
pop
ja
clc
add
add
dec
pop
clc
and
push
add
pop
pop
cmp
add
add
call
cmpsb
clc
and
add
cmp
clc
inc
add
repnz
xchg
int3
fstps
clc
xlat
repnz
imul
add
clc
lcall
dec
out
push
xchg
push
pop
loop
mov
and
add
add
push
jbe
add
and
xor
add
repnz
jb
add
add
fldcw
adc
clc
lret
add
in
xchg
js
cltd
sub
add
clc
push
testl
and
add
push
je
jge
dec
repz
or
inc
clc
push
or
add
add
mov
mov
test
push
add
shlb
add
dec
mov
sub
scas
xor
add
clc
push
xor
lcall
lock
clc
cli
mov
clc
cmp
add
add
es
mov
addr16
shlb
inc
clc
lods
jnp
clc
imul
fistps
mov
add
cmp
clc
ret
clc
push
jno
add
add
and
add
add
add
in
dec
jns
add
repnz
add
mov
clc
push
std
mov
add
clc
pop
decl
clc
jl
xor
add
add
lret
adc
add
add
fldt
add
clc
lods
sar
fildl
rolb
add
add
add
cmpsb
clc
gs
stc
push
pushl
lret
hlt
dec
inc
add
dec
fimull
shlb
sbb
add
mov
add
out
cmp
add
sub
cmp
add
fcomps
add
push
add
add
add
xchg
ljmp
ja
xbegin
and
add
clc
into
add
dec
aam
sar
cmpsl
clc
push
add
mov
test
add
add
add
fidivl
adc
add
mov
cltd
fisubs
clc
sahf
xor
cmp
xor
add
jae
add
cmp
aas
daa
clc
inc
add
sub
add
dec
aaa
popa
add
add
mov
pusha
add
cmp
add
arpl
add
dec
cmp
push
add
mov
mov
add
clc
repnz
clc
push
add
fs
cmp
clc
adc
add
clc
pusha
add
mov
adc
and
sar
clc
loope
stos
rcll
inc
add
loop
dec
hlt
daa
clc
pop
sbb
add
sub
out
stos
aaa
enter
clc
arpl
add
clc
jge
clc
loope
and
add
mov
inc
add
jg
sbb
xor
scas
xor
jmp
jns
clc
test
clc
push
add
ret
add
add
dec
mov
cmpsb
clc
pop
ja
sarl
jp
pop
mov
in
fwait
pop
test
aam
cmp
sub
scas
jge
cmp
add
ss
add
add
dec
mov
push
mov
xabort
jns
adc
add
cwtl
adc
add
clc
pop
xchg
mov
ret
pop
sub
ret
clc
dec
mov
jmp
test
into
pop
jp
dec
fwait
std
shrl
dec
es
mov
cwtl
mov
xchg
aas
push
jmp
push
cmpsb
clc
mov
sysret
clc
and
add
add
add
add
fs
fsubs
clc
dec
sbb
add
clc
cmpsl
clc
movsl
clc
adc
add
sar
in
daa
clc
mov
dec
sbb
add
add
lcall
clc
sbb
xor
add
in
das
addr16
jle
push
xchg
popf
mov
clc
dec
mov
push
add
aam
pop
gs
dec
mul
clc
mov
jo
add
add
add
loop
insb
cmpsb
clc
xchg
scas
xor
add
mov
mov
add
inc
clc
jmp
inc
clc
or
jns
clc
shrb
movsl
clc
mov
and
add
push
ds
insl
push
pushf
ja
clc
jns
clc
cmpsb
clc
stos
mov
xor
add
clc
xchg
sub
in
jnp
pop
stos
ja
loope
inc
clc
xchg
dec
xor
add
clc
in
es
jg
in
data16
and
je
jns
clc
icebp
es
jae
add
into
xbegin
xchg
and
add
push
pop
data16
inc
clc
sar
add
or
loop
scas
cmp
clc
daa
clc
popa
add
jne
clc
imul
mov
clc
fimuls
push
add
inc
clc
adc
add
add
mov
fwait
jns
inc
clc
fimuls
int3
mov
out
and
pop
clc
das
int3
lahf
test
shrb
test
push
clc
push
jbe
cmpsb
clc
jle
clc
jge
and
add
add
jmp
ret
cmp
jmp
xor
add
into
xchg
ja
lret
mov
sub
call
mov
add
sub
clc
sbb
clc
in
inc
add
cmp
xor
add
sahf
pop
movsb
clc
mov
add
fildll
add
mov
shll
clc
sar
js
clc
mov
in
add
xor
movsl
clc
sub
clc
clc
and
add
add
add
std
into
jg
jns
mov
xchg
xbegin
cmc
stc
pusha
add
mov
popf
das
lret
in
or
clc
add
add
dec
and
add
es
outsb
mov
clc
mov
clc
test
add
es
imul
and
add
adc
add
aas
fnstenv
add
gs
jae
add
leave
sbb
inc
add
dec
ds
add
xchg
inc
clc
fmul
inc
clc
sub
or
clc
lods
loop
mov
clc
hlt
adc
add
clc
or
or
jg
cmp
aaa
xchg
mov
add
pushf
insl
aas
sbb
push
add
xlat
xchg
push
push
cmp
fisubs
pop
sbb
or
inc
add
lret
add
push
add
lret
mov
or
add
push
add
add
xor
add
push
add
arpl
add
and
inc
clc
mov
jo
add
lcall
or
out
cld
mov
mov
dec
lahf
and
add
mov
mov
mov
xor
imul
push
ja
clc
mov
inc
add
in
call
cmp
clc
push
hlt
add
add
push
push
ret
mov
rorb
clc
xchg
cmc
in
sahf
mov
xchg
aas
pop
jle
or
clc
ret
add
add
add
add
clc
pop
clc
lods
mov
mov
mov
inc
clc
mov
fistpl
into
and
add
add
mul
clc
inc
add
ljmp
in
stos
mov
rcll
add
clc
je
clc
arpl
add
add
add
add
testl
cmp
clc
dec
dec
fnsave
add
clc
sar
cmp
clc
clc
xor
add
dec
mov
clc
push
inc
clc
xchg
dec
incl
mov
clc
push
clc
xchg
fisubrs
sbb
clc
in
dec
and
add
loopne
sub
cmp
add
nop
mov
clc
cmpsl
clc
lret
dec
out
and
sub
ds
test
mov
clc
jno
add
inc
clc
xchg
jg
sub
add
add
jl
cltd
fadds
sbb
clc
mov
add
sub
add
push
push
popa
add
insb
fs
in
jb
add
clc
rclb
push
add
pop
mov
clc
daa
clc
add
add
sahf
push
cmp
leave
jmp
xor
stc
mov
add
daa
clc
call
xbegin
clc
sbb
jbe
add
ret
clc
mov
stc
sar
in
jnp
clc
sub
out
mov
cmp
clc
adc
add
add
clc
ljmp
cmpsb
clc
jne
clc
jmp
xor
add
clc
cmpsb
clc
inc
add
lahf
lret
add
add
ljmp
aad
scas
shll
add
fidivrs
push
mov
or
inc
add
add
add
clc
pop
xchg
idivb
push
clc
push
dec
test
mov
call
clc
push
add
dec
movsb
clc
ret
clc
mov
fwait
jecxz
cmp
add
add
test
clc
and
add
stos
add
add
cmp
add
inc
add
imul
clc
mov
in
xchg
mov
in
mov
fisubl
add
mov
js
lcall
addr16
jge
aam
fiaddl
add
int
stos
push
add
bound
add
vshufps
mov
add
loop
dec
mov
add
add
add
rol
clc
outsb
movsb
clc
add
mov
add
add
jnp
imul
clc
push
add
and
lods
push
cmpsb
clc
not
cwtl
mov
outsl
stos
shrl
pop
ficoml
movsl
clc
leave
ret
sbb
add
push
and
and
add
adc
add
sbb
cmp
sub
clc
clc
adc
add
add
add
cmp
into
push
clc
or
jo
add
fs
mov
clc
jle
clc
jo
add
clc
test
pop
jge
in
xchg
and
add
clc
imul
in
rcll
push
jns
stos
or
movsl
clc
fidivrl
scas
jnp
pop
sub
add
inc
add
scas
add
add
cmp
jecxz
int
clc
and
add
add
clc
lea
adc
lea
cs
repz
add
lock
or
sar
clc
int3
dec
cmc
clc
aas
mov
inc
add
cmc
cmp
rorb
add
add
mov
mov
aas
add
add
cmp
call
push
add
mov
clc
inc
clc
mov
ljmp
xor
add
add
clc
scas
sub
add
enter
dec
dec
leave
outsl
cmp
xlat
je
sbb
clc
jae
add
aam
add
mov
dec
imul
xchg
mov
clc
pop
sar
add
sahf
outsl
ja
add
sbb
add
sbb
mov
xor
add
add
lock
add
or
clc
mov
add
jo
add
bound
add
sbb
adc
add
add
clc
dec
mov
cmp
clc
hlt
push
fmuls
clc
xor
add
and
add
clc
hlt
rcll
cltd
insl
push
push
clc
adc
repnz
ficompl
and
add
push
fdivrs
mov
adc
add
clc
roll
add
dec
je
add
pop
mov
add
sbb
cmpsb
clc
jmp
add
xchg
ds
sbb
sarb
add
pop
js
clc
or
aas
pop
clc
push
mov
mov
clc
daa
clc
mov
inc
add
test
and
add
test
add
add
ret
cli
daa
clc
stos
xchg
pop
cmp
idivb
cmp
fs
test
imul
mov
xchg
aaa
icebp
sbb
enter
pop
inc
add
incb
add
pop
outsl
push
add
jbe
cmp
fldenv
mov
clc
push
clc
femms
sub
pushf
test
xor
add
mov
clc
xbegin
dec
cmp
xor
add
outsb
aas
icebp
shll
clc
pop
jl
cmp
pop
clc
test
mov
dec
es
imul
jno
add
clc
inc
add
test
sub
clc
inc
clc
mov
push
jno
add
xor
add
inc
clc
mov
popf
mov
clc
pop
inc
clc
cmp
lea
cld
jae
add
xchg
push
fisubl
add
clc
cwtl
sti
repnz
mov
clc
lods
cmp
clc
inc
add
nopl
cmp
test
mov
hlt
sar
clc
shl
clc
cmp
clc
mov
mov
sbb
movsl
clc
sbb
mov
adc
add
add
and
add
nop
lcall
and
data16
sub
or
and
add
in
sbb
clc
lods
dec
pop
enter
pushf
out
mov
clc
ja
clc
out
jl
sar
add
shlb
add
add
adc
add
add
clc
sbb
clc
insl
jnp
aad
outsb
push
mov
add
fdivs
clc
fisttps
outsb
xchg
hlt
mov
ret
inc
add
inc
clc
mov
test
jmp
clc
mov
mov
add
clc
mov
cmp
int3
stc
xchg
inc
clc
mov
aad
jl
clc
mov
mov
mov
xchg
mov
test
sbb
add
dec
fstl
add
mov
xor
add
cmp
sbb
mov
adc
clc
sti
clc
and
add
add
lods
adc
add
clc
repnz
jbe
mov
clc
adc
add
lcall
push
dec
and
add
jmp
rolb
clc
and
jo
add
clc
cmp
clc
mov
add
push
add
jge
clc
push
clc
fcmovne
enter
dec
jno
add
cmp
popf
pop
jecxz
inc
add
pushf
cmp
clc
rcl
pop
mov
add
ret
movsb
clc
sbb
adc
rorb
test
add
outsl
stc
xchg
test
sub
popa
add
xor
add
loope
sbb
clc
jg
add
hlt
mov
repnz
mov
leave
fldt
add
insl
add
add
lret
lods
roll
add
cwtl
xchg
mov
into
ja
clc
out
jg
dec
out
cmpsl
clc
jle
cli
mov
add
popa
add
add
cmp
clc
jo
add
movsb
clc
jecxz
je
jo
add
sub
clc
sbb
nop
pop
negl
xchg
pop
or
clc
xchg
adc
int
stos
pushf
pop
sub
movsl
clc
mov
mov
clc
cmp
stos
nop
loope
scas
xor
add
loopne
or
hlt
mov
js
lock
jno
add
add
sbb
add
push
add
std
push
outsb
push
add
cmp
lahf
fstl
add
clc
push
add
adc
add
loopne
in
stos
add
add
out
mov
clc
rorl
inc
add
add
jg
lock
adc
add
add
fisubs
add
adc
add
clc
bound
add
aas
add
add
clc
push
out
fistl
add
adc
add
mulb
add
add
cld
inc
add
out
frstor
es
and
xchg
xor
add
add
add
aaa
mov
inc
clc
pop
jp
mov
mov
add
add
add
clc
mov
add
sahf
xor
add
mov
push
add
xor
add
and
mov
add
add
add
add
mov
pushf
cmp
add
add
add
in
icebp
xbegin
sti
mov
add
pop
jns
add
imulb
roll
add
mov
clc
std
stos
add
add
add
std
pop
clc
lret
sbb
cmp
add
out
testl
fabs
clc
mov
ffree
clc
xchg
fisttps
clc
xchg
dec
xchg
out
pop
ficoms
add
ret
clc
je
clc
pop
clc
push
mov
out
xor
add
pop
dec
xchg
ret
clc
outsl
dec
add
add
pushf
hlt
dec
in
popf
lahf
mov
add
add
clc
mov
pusha
add
cmp
movsb
clc
ficoml
pop
ds
jb
add
add
vmovntps
arpl
add
clc
sbb
add
pop
clc
lea
add
sbb
clc
or
inc
clc
out
sbb
or
mov
clc
aaa
mov
jl
clc
add
add
add
imul
pop
inc
clc
jle
pushf
pop
lahf
add
add
xchg
das
mov
add
lcall
clc
lahf
insb
add
add
int
pop
bound
add
or
add
je
add
ret
clc
xor
cmp
out
mov
add
jmp
push
add
add
fisttpll
add
into
inc
add
adc
dec
or
pushf
loop
pop
clc
xor
add
pushf
add
add
std
cmp
dec
outsl
in
loopne
movsl
clc
inc
add
mov
clc
out
add
add
add
mov
dec
inc
add
lret
in
pop
and
add
push
jl
bound
add
lret
pop
cmp
clc
ficoml
xchg
xchg
inc
clc
push
mov
add
and
add
pusha
add
imul
out
sarb
shl
mov
add
mov
rorl
cmp
pushf
mov
gs
adc
add
into
scas
xor
add
clc
out
repnz
add
add
add
clc
in
outsl
daa
clc
aaa
xor
add
xchg
add
add
add
lock
cmpsl
clc
xchg
out
xchg
mov
or
clc
pop
ljmp
call
hlt
cld
pop
out
xor
add
clc
ret
mov
pop
popf
push
add
mov
push
add
je
clc
lcall
ret
movsl
clc
xchg
adc
add
shll
add
stos
sahf
or
pop
dec
leave
sarb
cltd
test
insb
mov
add
js
aas
dec
pop
cmp
add
push
ret
clc
push
cmp
inc
clc
jl
add
lods
int
daa
clc
call
pop
jbe
mov
add
sub
mov
mov
inc
add
xor
add
push
lret
jb
add
add
sub
clc
je
clc
jle
jp
icebp
ficompl
in
xor
add
stos
clc
shl
clc
js
cmp
jmp
clc
mov
add
xchg
and
hlt
xchg
leave
sbb
ja
add
mov
jge
clc
loope
sbb
mov
mov
add
xor
add
adc
add
cmp
mov
clc
jle
add
adc
add
inc
clc
divl
aaa
hlt
loope
mov
clc
jp
lcall
and
es
lcall
lcall
cmpsl
clc
leave
jb
add
add
cmp
clc
ret
clc
mov
dec
mov
clc
jns
push
adc
add
aad
clc
xabort
sti
push
add
push
add
mov
clc
ja
clc
stc
adc
add
add
repnz
add
mov
add
mov
bound
add
test
clc
xor
add
or
cmp
clc
mov
xsave
cmp
mov
in
in
mov
or
outsb
jnp
faddl
hlt
add
add
in
push
add
push
add
fs
xchg
sti
es
push
add
dec
cmp
clc
jbe
pusha
add
pop
pop
inc
clc
jmp
add
cmp
add
cld
lcall
dec
push
sbb
ljmp
clc
adc
add
pop
negl
scas
into
xor
sar
clc
nop
into
mov
add
fcomps
clc
mov
test
repnz
add
insb
push
out
push
add
sub
clc
inc
add
push
add
dec
test
fbld
or
cmp
data16
psubq
xlat
xor
add
add
jge
mov
or
xchg
and
xor
add
add
or
clc
mov
add
jns
clc
sahf
cmp
movsb
clc
jb
add
clc
aam
clc
push
dec
jae
add
add
scas
js
and
lock
stos
xchg
es
jge
es
es
pop
cmp
xchg
scas
in
data16
sub
push
clc
lods
leave
out
sub
push
in
sub
call
xor
add
inc
clc
jb
add
clc
add
add
clc
test
test
lods
dec
cmp
sbb
lret
mov
mov
add
mov
add
sahf
inc
add
push
out
xchg
push
add
ds
xor
add
add
add
pop
movsb
clc
adc
add
xchg
pop
fcmovb
clc
shr
pop
xbegin
add
add
fs
add
add
add
lcall
idivl
mov
sub
stos
test
imul
mov
add
pushf
vmulps
add
insl
pushf
xchg
bound
add
add
sar
ret
clc
in
adc
clc
outsb
push
incl
add
fldcw
leave
adc
add
jl
sub
dec
clc
movsb
clc
adc
add
clc
adc
mov
add
push
cmpsl
clc
test
clc
data16
dec
dec
repz
add
add
rorl
jge
xchg
jbe
clc
shrb
inc
clc
mov
leave
xchg
mov
fs
cwtl
inc
clc
sarl
sbb
mov
add
ljmp
scas
xlat
pop
mov
xor
clc
fs
mov
xor
add
pop
push
add
xchg
fstps
inc
add
push
add
arpl
add
sub
or
clc
outsb
xchg
iret
ja
add
clc
int3
cltd
je
clc
fisttpl
lahf
das
add
sub
bound
add
cmpsl
clc
pusha
add
aas
sbb
jns
inc
clc
dec
data16
outsl
mov
addr16
and
add
int3
push
add
into
pop
or
mov
jle
jle
out
xchg
hlt
test
clc
inc
add
pushf
push
sub
popa
add
add
add
xor
add
or
adc
add
add
jns
clc
adc
add
fwait
inc
clc
clc
xchg
adc
add
cmp
add
dec
pop
cmp
inc
add
xchg
xchg
lods
mov
add
inc
add
jne
nop
lods
add
add
clc
jl
lock
mov
clc
daa
clc
push
or
push
add
cmc
lcall
in
or
data16
cmp
clc
into
jp
into
jp
dec
cld
lahf
daa
clc
mov
and
add
cmp
add
add
out
jo
add
stos
push
pop
clc
cmc
mov
clc
bound
add
add
stos
push
testl
cmp
pop
jg
inc
clc
dec
jmp
add
in
enter
dec
cmp
das
push
clc
jbe
clc
sbb
xchg
pop
clc
mov
add
push
sar
sub
ljmp
lret
cmp
xor
add
clc
pop
mov
int3
xlat
pop
jl
xor
add
mov
clc
jecxz
jp
pusha
add
out
add
movsb
clc
jne
bswap
jae
add
add
clc
popf
or
ss
clc
das
pop
flds
mov
cli
cs
iret
ljmp
add
push
add
int
mov
inc
add
ficomps
iret
adc
push
add
in
cmpsb
clc
out
jp
jg
add
mov
sar
and
add
shlb
jne
nop
dec
dec
das
jne
push
add
daa
clc
movsb
clc
dec
or
dec
pop
clc
inc
clc
pop
lock
jmp
add
push
add
cli
jge
mov
xchg
mov
clc
sar
clc
mov
loop
test
clc
xchg
pop
mov
clc
mov
clc
aaa
or
jnp
add
mov
add
popf
es
dec
loop
and
add
negl
xor
add
push
push
add
leave
imul
push
insl
or
push
inc
add
and
xor
add
int3
mov
push
push
rorl
clc
xchg
test
clc
lret
add
scas
or
or
xchg
dec
xor
add
clc
pusha
add
out
scas
mov
mov
add
add
push
add
jmp
clc
fs
scas
xor
xchg
pusha
add
cmpsb
clc
pop
and
add
add
add
mov
inc
clc
pushf
loope
add
lret
sbb
in
lea
fidivs
add
jnp
mov
clc
iret
add
lods
lret
sbb
ss
cltd
push
add
push
add
sub
fdivrs
cmpsb
clc
inc
clc
cmpsl
clc
repnz
pop
out
aas
dec
sub
cmp
inc
add
lock
clc
and
add
jge
das
cltd
in
rolb
add
clc
aaa
mov
lea
clc
cmp
fwait
jae
add
jl
clc
popf
dec
pop
inc
clc
mov
add
add
mov
jnp
lret
jns
and
add
jns
clc
or
dec
xchg
scas
lahf
push
add
jne
xchg
xchg
add
in
cmp
int3
mov
cmp
clc
es
cmp
adc
add
clc
outsl
cmp
test
sub
clc
xor
cmp
sbb
outsb
mov
inc
clc
add
add
mov
jle
frstor
imul
add
add
xchg
out
sbb
sahf
dec
mov
jmp
mov
jmp
add
das
das
sub
jl
jmp
mov
inc
add
inc
add
mov
ljmp
clc
scas
sub
pop
inc
clc
mov
aaa
je
scas
nop
cmp
imul
add
mov
sbb
ss
add
lock
shll
clc
in
movsb
clc
in
gs
xchg
dec
dec
dec
jns
add
stos
pop
clc
sub
push
jl
clc
pop
or
negl
mov
clc
es
lea
jp
cmp
js
add
add
pop
clc
out
pop
lret
sub
pop
int
dec
inc
add
cmp
clc
das
enter
clc
jl
daa
clc
pop
cmp
lods
lock
addr16
cmp
add
movsl
clc
and
repnz
mov
fisttpll
clc
test
fildll
or
clc
in
daa
clc
icebp
arpl
add
lcall
lea
inc
add
aaa
jae
add
stc
xlat
sub
inc
clc
notb
add
add
push
add
or
add
pop
push
clc
mov
arpl
add
data16
repnz
xchg
add
fs
jle
add
aam
cmp
stos
push
sub
cmpsl
clc
inc
clc
xor
add
bound
add
adc
add
pop
inc
add
mov
push
ljmp
clc
test
xlat
test
sar
mov
mov
clc
lods
je
hlt
cs
cmp
xchg
cmp
add
add
mov
add
sti
add
mov
add
xchg
loope
cwtl
mov
mov
jne
outsb
sahf
pop
cld
js
or
clc
negb
iret
gs
mov
lock
sahf
adc
add
in
jnp
mov
adc
add
xchg
mov
add
mov
add
testb
into
imul
adc
add
sub
lods
cmp
pop
cmc
fisttpll
clc
rcrl
add
cli
call
xor
add
lods
clc
aad
clc
in
jae
add
clc
out
addr16
and
add
mov
clc
or
dec
sub
add
pop
jnp
clc
xor
add
add
cmp
inc
clc
std
in
scas
mov
stos
sbb
inc
clc
jo
add
aas
and
add
movsb
clc
cmp
test
and
add
add
cmpsl
clc
mov
sbb
cmpsl
clc
xchg
xor
add
push
xlat
fildll
push
jle
add
jp
hlt
jl
dec
dec
mov
clc
cmp
clc
pop
clc
sub
xabort
pushl
mov
cmp
es
in
sub
add
mov
push
add
jmp
adc
add
add
clc
lcall
clc
in
es
mov
sar
clc
out
push
test
pushf
push
add
jp
pop
pop
pop
xor
add
mov
mov
push
sti
dec
add
add
push
add
lahf
pop
jb
add
mov
scas
and
lcall
cmp
loope
dec
xchg
mov
add
aas
or
inc
add
out
sub
cli
mov
seta
loopne
mov
clc
jb
add
leave
mov
clc
mov
adc
add
clc
mov
daa
clc
mov
jmp
arpl
add
clc
inc
clc
xchg
cltd
push
add
pop
clc
add
add
insl
cltd
frstor
pop
in
mov
mov
jle
clc
dec
adc
add
ds
xor
sbb
arpl
add
clc
sar
clc
sbb
add
push
mov
clc
popf
mov
clc
inc
clc
mov
repnz
add
call
cmp
int3
loope
aad
movsl
clc
jl
aaa
adc
add
clc
icebp
ja
aad
inc
clc
je
test
jmp
jg
sub
testb
movsl
clc
movsb
clc
fwait
mov
jp
loope
and
add
jp
mov
int3
cmp
clc
sahf
pop
mov
clc
outsb
je
add
in
and
test
add
das
cmp
mov
cld
insl
xchg
outsl
sub
xchg
loop
or
clc
aas
iret
cld
movsl
clc
dec
add
ljmp
xor
add
push
add
sub
clc
ret
clc
and
add
mov
adc
es
pop
clc
and
add
cmp
and
add
add
repz
pop
mov
inc
clc
push
mov
clc
cld
add
add
inc
add
push
add
cmpsb
clc
dec
in
xchg
out
fists
push
add
sub
shlb
lods
leave
sbb
das
fwait
cmp
add
xbegin
clc
xchg
sar
add
pop
and
add
out
hlt
and
mov
insb
jecxz
outsl
je
add
cmp
loope
adc
fcmovb
clc
cmpsb
clc
mov
mov
add
aaa
push
add
mov
clc
scas
push
sbb
sbb
pop
jbe
nop
mov
clc
cld
cmp
roll
add
jmp
add
mov
clc
int
es
or
xchg
push
add
scas
push
add
xor
add
lret
cmc
arpl
add
in
dec
mov
push
add
add
add
xchg
or
clc
xabort
mov
inc
add
aas
fs
pop
push
add
arpl
add
inc
clc
mov
enter
push
add
stc
cmp
in
mov
scas
push
mov
add
lods
jge
sarl
mov
sub
divb
sub
pop
push
sbb
add
jb
add
push
add
add
ss
fucomp
sub
push
clc
jb
add
outsl
inc
add
repnz
enter
mov
push
data16
std
mov
clc
inc
add
addr16
sub
clc
sar
clc
sub
add
enter
jno
add
sub
push
pop
int
ja
clc
sbb
stos
dec
inc
add
jmp
add
daa
clc
out
mov
loope
xchg
mov
test
cs
sbb
mov
add
cld
lods
jns
jnp
mov
sbb
dec
sti
data16
decl
mov
xchg
in
jnp
aad
adc
or
add
int
sub
inc
add
sub
inc
add
sub
add
push
mov
clc
and
push
clc
or
fdivrs
cmp
add
add
std
popf
push
add
jo
add
fcmovnb
clc
push
mov
loope
fistps
fs
sub
add
clc
jmp
ss
sub
add
pushf
sar
loope
ja
add
cmpsb
clc
pop
clc
or
lods
xchg
xchg
sahf
cmp
jo
add
add
pop
cld
jo
add
clc
ja
xbegin
movsl
clc
jno
add
add
ret
clc
add
add
into
or
add
sub
clc
insb
xabort
xor
add
inc
add
add
add
lods
lods
loope
adc
add
mov
or
xchg
adc
add
add
jmp
clc
lahf
or
add
lods
mov
dec
pop
sub
mov
cmp
add
call
mov
cmp
add
xor
stc
xchg
cs
mov
add
frstor
clc
xor
add
lret
popa
add
lahf
cli
inc
add
loopne
js
sbb
and
add
pop
xchg
pop
push
cli
sub
fwait
testb
mov
and
add
cld
dec
outsb
add
add
add
xchg
sub
inc
clc
nop
mov
clc
clc
mov
add
or
xchg
xor
add
push
xchg
cmp
sbb
pop
clc
ret
clc
fistpl
add
hlt
jne
dec
fmuls
arpl
add
repz
xor
add
clc
lahf
mov
stos
inc
add
stos
xor
out
test
clc
xor
add
add
out
jae
add
pop
push
add
fsub
clc
mov
add
mov
clc
xor
add
clc
jmp
clc
add
add
clc
nop
cmovg
loopne
dec
ja
jo
add
sbb
xchg
test
xlat
cmp
clc
xchg
icebp
inc
clc
jne
cmp
add
clc
mov
mov
xor
add
js
clc
fsubr
cmp
std
ja
clc
dec
mov
dec
in
cmp
fmul
sti
inc
add
add
add
add
pop
imul
mov
leave
push
add
push
cmpsb
clc
aaa
or
add
lret
add
push
je
das
out
dec
mov
dec
cmp
cli
and
add
mov
add
out
pop
clc
repnz
pmuludq
jnp
push
and
add
mov
clc
pop
cmp
push
clc
or
pusha
add
jo
add
into
push
add
add
add
repnz
mov
clc
insl
js
loope
xabort
into
mov
add
mov
add
mov
add
mov
and
add
add
inc
add
jp
cmp
cmc
adc
add
push
add
push
dec
cmp
pop
clc
cmp
sub
add
cmp
xchg
cmp
adc
add
push
sbb
cmp
add
inc
add
mov
and
mov
popf
jo
add
add
test
jl
xor
add
push
jb
add
clc
lcall
sahf
gs
pushf
repz
jns
loop
mov
push
dec
sbb
outsl
sub
xor
clc
pusha
add
je
sar
add
dec
mov
cmp
sbb
sarb
mov
add
clc
xbegin
sub
aam
add
call
mov
add
add
mov
cld
jb
add
nop
cmp
add
mov
imul
cmp
pop
fwait
pop
jecxz
jge
clc
xchg
push
mov
clc
in
incb
adc
add
add
xor
add
dec
jno
add
clc
fs
cltd
adc
clc
jb
add
add
sub
add
cmp
jmp
add
sub
lahf
arpl
add
in
leave
aad
clc
int
jl
add
mov
mov
clc
sub
sub
call
and
add
sub
mov
adc
add
cltd
jl
add
cmp
add
repnz
jg
adc
call
or
clc
xabort
mov
add
or
add
inc
add
mov
add
addr16
sub
add
mov
fcomps
add
push
stc
lods
call
js
and
add
dec
xor
add
add
clc
add
add
data16
xchg
inc
add
mov
cld
ss
mov
stos
push
clc
clc
add
cwtl
cmp
pop
jo
add
sar
sub
adc
or
clc
mov
fstpt
xabort
add
push
add
ret
incb
xchg
cmp
push
add
mov
pusha
add
fnstcw
mov
jge
add
cmpsb
clc
mov
and
add
xbegin
xabort
mov
clc
int3
test
mov
add
cmpsb
clc
adc
add
test
push
jae
add
dec
mov
clc
push
dec
pop
lods
clc
dec
pop
cmp
clc
xchg
dec
or
add
notl
daa
clc
ljmp
sbb
mov
jp
and
add
add
mov
es
lahf
aaa
jl
ficoml
std
inc
clc
loopne
dec
into
sub
add
fisubrs
pop
popf
jnp
jne
sahf
dec
cmp
mov
add
mull
clc
mov
outsb
add
inc
add
fisttpll
push
test
xchg
xchg
ret
clc
lock
int3
js
add
mov
ret
xor
add
add
xchg
lcall
sti
mov
jno
add
stos
fcmovnb
clc
arpl
add
clc
adc
add
cmp
add
add
add
pop
jae
add
shll
inc
clc
xchg
mov
add
es
adc
add
stos
stos
movsl
clc
jp
nop
and
add
add
cmp
add
jb
add
mov
mov
cmp
xlat
push
clc
stos
sbb
add
clc
push
add
sub
xor
add
jno
add
out
into
ds
and
add
je
fimuls
or
adc
xor
add
or
mov
jmp
add
mov
and
clc
dec
xchg
pop
in
int
clc
mov
insb
loop
or
fsubp
clc
outsb
dec
dec
xchg
gs
pop
mov
popa
add
mov
or
clc
cmpsl
clc
je
xchg
out
test
xchg
fimuls
clc
or
nop
push
add
icebp
mull
add
xchg
xlat
push
pop
mov
add
clc
or
ds
mov
add
aam
popa
add
adc
add
clc
pushf
jnp
clc
es
or
outsl
xor
cs
jnp
add
adc
add
add
mov
loopne
outsb
inc
add
mov
clc
iret
fadds
out
xchg
je
aas
insb
pop
push
scas
iret
loope
stc
fdivrs
xor
add
add
lods
lods
ror
jno
add
clc
leave
rdmsr
add
std
sahf
adc
add
cmpsl
clc
sub
clc
dec
outsb
repz
adc
add
mov
push
add
js
adc
add
clc
cmc
dec
mov
cmp
fcom
scas
cs
push
cmp
clc
sbb
add
jns
clc
ja
inc
clc
lret
stos
rcll
cmpsb
clc
jbe
sbb
mov
lock
addr16
clc
push
out
xchg
cmc
xabort
fldcw
xbegin
jb,pt
add
add
xor
add
jle
pop
fdiv
test
bound
add
pop
hlt
je
add
cmp
mov
clc
add
add
add
pop
jo,pn
add
pushf
out
push
xchg
inc
clc
icebp
mov
paddd
jl
outsl
push
cmp
add
mov
clc
rorl
stos
addr16
sbb
and
add
clc
add
add
add
or
add
push
add
xor
add
in
imul
add
add
clc
xor
popa
add
jle
pop
test
and
add
add
xchg
mov
and
add
adc
add
stos
cli
xchg
sbb
clc
sahf
pusha
add
test
fs
sti
mov
add
shrb
sbb
mov
out
xor
mov
xchg
mov
cmp
dec
push
stos
movsb
clc
ud1
imul
enter
mov
into
lods
inc
clc
mov
add
clc
pop
out
xor
add
add
lods
sbb
mov
fsts
popf
stc
push
clc
das
cmp
mov
clc
mov
clc
pop
adc
add
clc
xchg
arpl
add
inc
clc
clc
cmp
clc
adc
add
dec
shll
clc
xchg
push
test
sbb
clc
xchg
mov
lahf
push
add
xchg
call
js
jmp
add
popf
sub
jns
sub
mov
cmp
adc
add
aad
add
fldl
add
xor
clc
cli
mov
clc
mov
outsl
repz
pop
int
movsb
clc
sbb
arpl
add
or
clc
imul
push
add
mov
cld
dec
arpl
add
lea
add
pop
iret
out
pop
fnstsw
pushf
cmp
push
push
outsb
aad
mov
add
xchg
push
fxch
loope
leave
fwait
xchg
add
add
inc
add
iret
popf
sbb
mov
sub
mov
movsb
clc
dec
xchg
jnp
push
push
imul
add
add
add
clc
sub
mov
xchg
popl
add
xor
add
adc
add
scas
scas
fwait
dec
sahf
jmp
add
adc
add
add
inc
add
jmp
mov
movsl
clc
inc
clc
mov
out
ljmp
mov
add
or
clc
add
add
mov
out
jmp
mov
xchg
scas
xor
leave
movsb
clc
aaa
addr16
fidivs
add
lock
clc
dec
cmp
into
outsl
jge
clc
mov
mov
dec
mov
and
add
xchg
jge
aaa
aaa
mov
jae
add
stc
cltd
mov
cmp
mov
push
add
and
add
clc
into
cmp
xchg
fwait
add
add
jl
push
cmp
hlt
dec
insb
adc
add
in
shrl
ljmp
clc
xor
add
scas
inc
add
aad
mov
or
and
jp
sti
enter
add
xor
mov
clc
out
test
fdecstp
test
add
add
add
sub
add
pop
iret
pop
pop
push
pop
add
push
add
add
add
add
xchg
mov
add
cmpsl
clc
in
xor
add
add
cmp
add
pushf
inc
add
adc
add
clc
lcall
mov
add
cmp
inc
add
sbb
ret
or
cltd
xor
clc
jp
inc
clc
or
clc
outsl
jbe
mov
cmp
clc
lret
mov
add
cmp
push
hlt
sahf
mov
lcall
clc
xor
add
push
add
faddp
clc
push
add
pop
aas
xor
imul
into
mov
cld
fs
mov
add
or
mov
mov
add
dec
clc
movsl
clc
fimull
int3
shrb
int
shl
clc
lcall
xor
add
add
arpl
add
aas
fmul
cmpsb
clc
sub
gs
pushf
out
sub
clc
int
pop
push
rclb
add
xor
add
jmp
lahf
nop
pop
testl
movsb
clc
push
add
mov
clc
add
and
jb
add
popf
pop
pop
cmp
lret
add
add
clc
add
add
or
add
jo
add
add
shr
lret
pop
push
add
mov
clc
stos
jb
add
clc
daa
clc
xor
add
in
repz
add
out
sbb
jp
jecxz
or
clc
stos
test
insb
scas
in
push
pop
aad
clc
stos
jmp
add
jns
pop
repnz
dec
out
test
jge
xor
fiadds
out
cltd
fisubrl
xor
push
clc
movsb
clc
fistpll
add
add
add
hlt
orps
add
mov
xchg
mov
clc
or
mov
add
sti
inc
add
leave
inc
clc
das
xchg
xbegin
dec
jp
clc
mov
mov
sub
add
incb
clc
jo
add
stos
jl
add
popf
mov
dec
das
popf
notl
add
mov
add
out
xchg
sbb
add
das
je
jo
add
add
insl
loop
repnz
clc
push
add
cmp
data16
pop
adc
testl
clc
aam
dec
notb
clc
test
sbb
xchg
pop
ljmp
clc
pop
insb
divl
add
sti
sbb
mov
scas
ds
cmp
add
arpl
add
dec
fdivr
xor
nop
cli
jle
imul
add
add
jg
repnz
sbb
add
add
out
cmp
clc
jno
add
jne
stos
xchg
mov
push
mov
out
mov
add
sbb
add
add
imul
jne
xlat
dec
mov
clc
out
cmp
jo
add
push
jo
add
adc
add
repz
add
out
xchg
test
mov
idiv
out
mov
clc
loopne
repz
cld
repnz
jge
stos
xchg
sub
add
push
add
xchg
adc
add
stos
in
pushf
clc
aam
clc
mov
aas
adc
add
add
popf
sub
cmp
mov
cmpsb
clc
bswap
push
sbb
jmp
add
add
sub
push
mov
mov
xbegin
cmp
ss
lods
out
inc
clc
fnstsw
add
jo
add
rorb
add
fwait
jle
clc
sar
idivl
clc
add
add
add
add
add
outsl
movsb
clc
scas
cmp
daa
clc
push
imull
lods
fcoml
add
add
std
sar
dec
cmp
clc
push
sub
jae
add
add
inc
clc
inc
add
adc
add
add
push
xchg
daa
clc
or
clc
loop
jmp
sar
add
xchg
out
lahf
cmpsb
clc
mov
or
clc
int
mull
add
clc
xlat
jb
add
add
push
sti
mov
clc
cs
mov
or
hlt
dec
out
lea
out
mov
clc
sbb
data16
arpl
add
aam
and
add
cmp
clc
sbb
clc
or
cmp
sub
add
push
sub
clc
dec
xor
outsl
shrd
dec
mov
jecxz
xor
add
ret
clc
je
sub
add
clc
pusha
add
scas
jmp
clc
jle
mov
jns
fistps
clc
xlat
jo
add
cmp
jmp
jle
jmp
testl
jg
mov
cmpsb
clc
cwtl
xor
add
clc
xchg
mov
add
loopne
mov
dec
pushf
push
add
adc
cmp
mov
cmp
sar
pushf
out
mov
cld
or
add
cmp
ret
xor
add
xor
add
add
adc
clc
jbe
add
push
cmp
ss
stos
cmp
jne
stos
mov
add
xor
add
and
add
popf
nop
adc
incb
add
cs
test
bnd
add
bswap
push
mov
clc
movsl
clc
ret
add
cmpsb
clc
fs
paddusw
aas
cmp
or
pop
jmp
adc
add
mov
clc
xchg
sahf
ljmp
sbb
leave
addr16
cmp
add
es
push
add
push
add
jle
hlt
xor
add
add
xchg
stc
dec
or
and
add
aam
add
sahf
fbld
push
or
clc
xchg
and
add
pop
xchg
inc
clc
push
clc
push
icebp
and
add
clc
dec
mov
jnp
clc
adc
add
clc
nop
xchg
mov
sar
negb
add
add
cmpsb
clc
jbe
clc
push
add
sbb
leave
cmc
cltd
mov
push
bound
add
clc
xchg
sbb
mov
aas
cld
inc
add
or
dec
adc
add
pop
clc
cwtl
outsb
in
aas
inc
clc
pushf
lea
mov
clc
sub
clc
fwait
mov
sbb
clc
sbb
scas
xchg
lea
xor
add
clc
mov
clc
xchg
jns
cmp
sar
mov
clc
mov
and
add
xchg
cmp
add
and
add
clc
xor
add
xor
add
aaa
fcmove
insb
loop
push
test
pop
data16
inc
clc
push
repz
mov
pushf
popa
add
std
or
std
shl
cmp
cltd
mov
mov
clc
push
fdivrl
movsb
clc
pushf
push
add
sahf
mov
cmp
sti
jmp
clc
lcall
xor
add
shll
js
lea
add
clc
jo
add
ret
mov
sub
notl
clc
in
jno
add
add
cld
ds
loope
fnstsw
add
jp
xchg
pop
push
mov
xchg
lcall
mov
add
pop
in
fldcw
mov
outsb
cmc
insl
cmp
jne
add
cmp
mov
clc
shlb
add
mov
sbb
add
in
std
sar
inc
add
adc
mov
clc
pop
jbe
dec
cmp
clc
arpl
add
lret
clc
pop
cmpsb
clc
sbb
clc
ficompl
outsb
mov
clc
mov
aam
add
movsb
clc
lods
ja
add
outsb
push
add
js
xor
add
sahf
sti
outsl
test
xor
add
add
movsb
clc
test
clc
and
add
pop
mov
adc
add
mov
clc
push
add
push
add
fldenv
stc
fwait
shlb
jge
dec
mov
clc
mull
add
jmp
mov
add
pop
in
pop
xchg
push
add
adc
fldenv
add
cld
ret
clc
pop
out
out
and
sahf
jg
mov
clc
push
clc
mov
add
sti
xchg
std
je
cmp
clc
hlt
inc
add
test
push
push
add
mov
add
inc
clc
sti
outsb
xor
add
lock
or
fdivs
add
or
shl
xor
add
loopne
out
dec
imul
out
sbb
clc
or
adc
add
test
out
inc
add
inc
clc
sub
clc
xchg
icebp
js
clc
jp
clc
cwtl
pushf
dec
fsubrl
fnstcw
and
jmp
xabort
std
jle
inc
clc
and
add
test
lahf
jmp
add
jne
clc
pop
or
mov
out
xchg
xchg
aas
sbb
aaa
rcr
mull
add
leave
or
data16
add
add
mov
test
push
clc
mov
je
clc
fsubs
movsl
clc
cwtl
push
mov
sbb
ret
add
sbb
pop
push
add
into
sar
inc
clc
int
xchg
adc
clc
test
jl
imul
xor
pop
clc
push
add
pop
mov
stc
xchg
in
scas
iret
or
cmc
jmp
clc
movsb
clc
mov
jno
add
enter
aaa
mov
sar
bound
add
add
add
xchg
mov
clc
xchg
lcall
cmp
lea
mov
loope
sbb
mov
clc
and
jge
clc
mov
xor
add
jp
pop
clc
and
add
add
push
add
mov
add
push
add
xchg
out
sti
xlat
rcrb
lahf
leave
paddsw
mov
pop
stc
lock
add
push
add
cmc
dec
lret
push
add
test
add
stos
xor
enter
jbe
ret
clc
jae
add
push
xchg
sbb
aaa
repnz
repz
pop
movsl
clc
pop
loopne
xor
add
movsb
clc
clc
pusha
add
and
add
frstor
add
pop
fs
scas
movsb
clc
push
mov
repnz
dec
fmull
movsb
clc
arpl
add
push
push
push
clc
adc
add
pop
bound
add
nop
mov
xchg
mov
jns,pt
mov
inc
add
cwtl
pop
mov
xor
and
add
rorl
cwtl
inc
add
out
push
xchg
cmp
in
icebp
and
add
add
push
add
fisubs
fcompl
test
test
mov
sub
ror
icebp
test
rcll
add
lahf
pop
jnp
stos
mov
jnp
mov
clc
cmp
lret
jne
xabort
clc
push
add
push
repz
adc
add
jno
add
xor
add
iret
and
add
lock
dec
lock
mov
in
push
sbb
popa
add
dec
shrl
or
xchg
or
clc
es
jnp
add
cmp
inc
add
fistps
pop
scas
mov
cmp
fcoms
loopne
and
add
clc
sub
rcr
pop
clc
mov
cmp
or
add
sahf
fs
add
add
cmpsl
clc
sbb
xlat
mov
test
loop
lea
sti
fxtract
es
sbb
or
fisttpl
sbb
scas
sbb
dec
mov
clc
insl
test
iret
adc
add
add
mov
xor
add
lods
xchg
fcmovnb
clc
enter
or
sub
jb
add
sar
and
pop
and
add
mov
clc
outsb
or
clc
sar
adc
add
adc
add
gs
sub
xabort
out
stos
mov
clc
cmp
add
and
add
xor
add
clc
fdivr
push
pop
jmp
loopne
filds
add
rcrb
sub
add
mov
call
add
cmp
add
aas
stos
cmp
lcall
fstpt
cmp
clc
lods
jbe
xbegin
add
loope
push
pushf
insb
or
adc
add
clc
dec
mov
xchg
mov
clc
mov
sub
jmp
and
add
add
clc
das
push
xor
add
inc
add
mov
clc
dec
pop
clc
xor
add
cs
add
test
mov
add
dec
stos
bound
add
sub
inc
add
mov
push
xor
add
add
pop
loope
adc
add
add
lret
or
clc
dec
jle
cmp
xor
add
clc
jl
inc
add
das
std
xchg
push
clc
sbb
push
cmp
and
add
push
mov
clc
sbb
clc
in
sub
add
sarl
add
add
dec
mov
clc
pop
and
add
jmp
sbb
inc
clc
ficoml
cmc
mov
add
pmaxsw
mov
ljmp
sbb
push
clc
sub
sbb
xchg
and
add
cmpsb
clc
xchg
xchg
xchg
add
add
mov
fcmovnb
clc
sbb
push
add
out
push
lret
sbb
add
clc
lret
movsl
clc
jno
add
clc
outsb
ljmp
jne
cmc
add
add
das
pop
imul
sar
nop
ss
clc
jb
add
imul
or
push
clc
test
clc
xor
add
push
push
add
jle
inc
clc
lret
add
sbb
pop
xor
clc
jg
mov
pusha
add
out
push
add
xor
add
repnz
add
sbb
clc
dec
in
and
add
push
add
dec
shl
clc
push
add
fldenv
add
xor
cmc
sub
in
jg
clc
adc
add
add
push
lods
pushf
cmpsl
clc
adc
add
lret
ret
clc
aaa
pop
lods
jp
mov
lret
jl
inc
add
data16
div
mov
clc
movsb
clc
push
fs
loop
push
xchg
jge
clc
pusha
add
add
add
add
add
addr16
fcmovbe
and
add
hlt
or
clc
sarb
out
sar
clc
mov
sbb
mov
ficoml
add
clc
mov
adc
lcall
clc
paddb
inc
add
movsb
clc
std
pop
inc
add
repz
fs
pop
fs
push
add
push
inc
add
mov
add
clc
or
add
fwait
aas
push
push
push
test
adc
add
mov
pushf
mov
cltd
fs
mov
add
cmc
mov
lods
das
fwait
and
fisttps
add
int
hlt
mul
clc
fisttpll
clc
cwtl
je
sbb
incb
pop
clc
into
aad
nop
stos
dec
ja
mov
add
push
push
add
movsb
clc
cmp
movsb
clc
shlb
add
add
ret
clc
cwtl
sahf
adc
add
push
jns
add
jnp
sub
add
jecxz
add
add
clc
icebp
insb
xor
add
mov
jl
add
lret
clc
stc
mov
mov
dec
xchg
add
add
clc
cmp
lahf
test
mov
mov
sub
arpl
add
add
add
dec
in
push
cmp
add
imul
sbb
clc
mov
cld
stos
dec
jbe
popf
xchg
movsb
clc
bound
add
mov
es
mov
adc
clc
pop
jecxz
mov
push
jo
add
lret
add
add
out
enter
inc
add
lods
imul
push
add
add
add
push
jp
xor
add
clc
or
xchg
xor
add
insb
or
add
push
clc
dec
fsubl
ret
clc
and
add
add
add
add
clc
push
add
push
add
xchg
sbb
adc
or
add
add
mov
stc
jnp
dec
xchg
xchg
in
cmp
add
mov
scas
cmp
add
in
mov
clc
jg
clc
mov
add
add
add
outsl
scas
scas
xabort
clc
push
inc
clc
lret
add
or
jle
sahf
daa
clc
dec
leave
or
add
setbe
jmp
sub
push
call
clc
push
add
xchg
fadds
add
int
clc
leave
or
xchg
add
add
in
push
add
and
mov
in
sub
fcmovbe
leave
out
pop
dec
outsb
xchg
call
sbb
cmp
hlt
lods
ja
xchg
mov
cmp
add
clc
lcall
and
add
dec
je
clc
out
jge
pop
clc
xor
cmp
and
add
and
add
xbegin
add
clc
mov
jno
add
stos
push
shll
add
or
clc
push
add
and
add
ljmp
add
pop
clc
jb
add
mov
or
add
gs
xabort
clc
mov
mov
mov
xchg
sbb
jb
add
mov
clc
stos
mov
add
add
add
fiaddl
jmp
clc
data16
sar
iret
push
lahf
jne
test
sub
cmp
sub
push
addr16
fldl
ret
clc
mov
mov
out
push
shlb
adc
add
sbb
in
icebp
mov
xabort
cmp
in
jmp
pop
jo,pn
add
fldt
test
sbb
xchg
sar
adc
add
in
mov
clc
lret
add
lahf
fwait
clc
ja
pop
ss
push
add
add
mov
gs
movsb
clc
sbb
pop
das
pop
pop
clc
mov
clc
cmp
rcrl
clc
pop
clc
mov
repnz
clc
pause
mov
pop
jg
out
in
pop
clc
aas
imul
jbe
mov
and
stc
add
add
pop
clc
in
xbegin
add
cmpsb
clc
pop
and
add
pop
mov
jecxz
or
dec
shl
clc
adc
aam
or
bound
add
cmp
mov
and
add
cmp
clc
or
clc
in
das
sbb
clc
jg
cmpsb
clc
cwtl
ret
clc
int3
in
loopne
mov
add
cmp
add
xor
add
pusha
add
pop
fwait
push
and
ljmp
mov
mul
clc
mov
pop
out
leave
in
add
fstl
clc
inc
add
cmp
cld
mov
or
divl
add
and
add
jg
clc
hlt
pop
pusha
add
xchg
negb
clc
cmp
pop
mov
jne
lods
sar
repz
mov
clc
dec
cmp
add
jmp
out
pop
leave
call
add
add
push
add
daa
clc
insb
lahf
inc
clc
mov
outsl
out
push
add
and
sbb
jle
dec
xor
add
pop
adc
add
clc
movsl
clc
mov
push
or
imul
decb
xchg
pop
out
adc
add
adc
push
lock
jmp
or
clc
push
xchg
sti
popf
dec
pop
std
jae
add
pushf
lret
outsb
sti
pop
cmp
clc
aas
ficompl
clc
xabort
clc
aaa
jae
add
add
fisubs
add
sbb
clc
jnp
sar
clc
imul
gs
fildll
clc
sbb
adc
sahf
pop
clc
movsb
clc
aas
or
cld
mov
clc
push
test
jl
xlat
xor
add
call
ss
fcompl
clc
sbb
adc
add
push
clc
or
clc
or
push
xchg
scas
in
cmp
jae
add
cwtl
insb
mov
ljmp
clc
mov
dec
cmp
clc
inc
add
sarl
add
scas
cmpsl
clc
notl
fisubs
clc
mov
or
cmc
inc
add
add
add
cmp
jo
add
lahf
pop
xbegin
sub
add
je
adc
add
add
pushf
and
add
data16
push
mov
aas
cmp
clc
mov
clc
inc
add
and
add
adc
arpl
add
add
clc
or
jecxz
in
add
add
add
popa
add
or
repz
add
clc
mov
add
fwait
inc
add
push
add
cmp
jb
add
add
mov
xchg
jne
rol
clc
in
cmp
in
mov
clc
aas
dec
or
fucom
clc
xchg
cmp
lock
sar
push
mov
clc
mov
clc
xchg
ret
rcll
add
jne
clc
enter
pusha
add
fmull
dec
popl
add
test
clc
out
enter
clc
mov
es
or
vmovaps
clc
cmp
clc
or
xlat
jns
clc
or
and
int
add
jnp
jno
add
clc
loope
mov
sbb
stc
mov
fiadds
add
add
gs
scas
jns
xchg
repz
add
add
and
add
mov
hlt
xor
clc
addr16
cmp
pop
scas
inc
add
pop
out
push
add
adc
add
clc
popf
mov
xor
add
add
add
inc
add
jmp
add
clc
cli
mov
xchg
mov
repnz
adc
add
fwait
mov
mov
or
push
sub
add
push
push
add
pop
sbb
gs
dec
mov
lcall
jns
cmp
dec
cmp
push
xabort
add
ficoml
mov
add
jbe
or
xchg
cmp
add
scas
xchg
sub
xchg
cmpsb
clc
jae
add
clc
sub
xor
add
add
movsb
clc
js
loopne
gs
mov
out
mov
inc
clc
sub
sbb
xor
cmp
stos
cwtl
add
add
clc
adc
add
inc
clc
sbb
jmp
dec
lret
mov
mov
jb
add
scas
and
add
cld
pop
dec
mov
sub
data16
mov
test
ljmp
jle
aas
inc
add
pop
and
sub
dec
inc
add
loopne
xor
sub
inc
add
and
add
cwtl
ss
lahf
mov
mov
xlat
or
daa
clc
hlt
sub
enter
or
push
clc
mov
add
xchg
cmp
clc
mov
mov
adc
add
int
push
clc
mov
int
mov
outsb
add
add
add
sar
ss
mov
mov
xbegin
add
push
add
inc
clc
or
stos
or
fwait
mov
add
test
dec
pushf
xlat
lret
or
jmp
repz
clc
cmp
clc
dec
mov
add
pop
adc
add
repnz
clc
out
xabort
mov
add
add
clc
jno
add
add
je
jmp
pop
pusha
add
call
add
clc
dec
enter
enter
adc
add
cli
movsl
clc
sbb
clc
xchg
shlb
add
addr16
jecxz
mov
add
push
clc
inc
add
adc
add
clc
or
add
add
pop
mov
add
fmuls
clc
jmp
dec
popf
mov
add
stos
loope
xor
mov
add
sub
out
aaa
pop
je
sahf
pop
fld
clc
test
int
stos
pop
mov
int
icebp
and
add
add
add
clc
ja
test
push
add
adc
cmp
add
add
clc
mov
popa
add
data16
jb
add
add
pop
aaa
mov
add
leave
fstpl
xchg
leave
popa
add
lea
push
add
push
scas
sbb
xbegin
and
add
jns
add
sbb
clc
clc
pop
jmp
imul
fwait
sub
add
ret
cmp
add
fstl
pop
push
mov
clc
mov
push
clc
lcall
ret
es
mov
sbb
cmpsl
clc
test
ret
add
test
add
pop
iret
nop
cltd
and
add
add
add
mov
add
clc
out
outsb
addr16
xchg
jl
or
add
add
and
in
cltd
jle
clc
iret
imulb
xor
add
aas
dec
fmuls
dec
sub
fisttps
movsl
clc
dec
mull
inc
clc
lock
clc
push
add
iret
push
es
lods
sbb
mov
clc
xchg
and
add
clc
lahf
clc
jns
jo
add
add
test
or
adc
add
out
mov
add
cli
jae
add
icebp
aas
decb
add
pop
clc
bound
add
mov
add
mov
add
and
add
loope
imul
movsb
clc
pushf
xchg
mov
jno
add
dec
and
fimuls
call
mov
clc
clc
test
sahf
and
icebp
and
add
sbb
clc
inc
clc
arpl
add
inc
add
xor
add
add
add
push
mov
inc
clc
pushf
cmp
add
add
ficoml
add
mov
gs
mov
cmp
clc
push
pop
enter
stc
addr16
pop
xchg
push
ret
xchg
jmp
push
and
add
in
mov
pop
clc
test
xchg
jo
add
add
outsl
fiadds
add
dec
push
aas
and
cmpsl
clc
push
and
add
je
pop
xabort
clc
xlat
mov
gs
fistpl
sbb
or
jge
lcall
xchg
pop
mov
sar
fcoms
cmpsl
clc
icebp
pop
sub
clc
push
js
add
xor
add
clc
dec
fucom
clc
sti
dec
adc
add
clc
cli
cmp
aaa
push
lods
je
push
add
adc
add
mov
addr16
js
clc
jns
add
imul
push
rorl
mov
cltd
icebp
sbb
clc
insl
aas
cmp
clc
mov
mov
add
mov
pushl
add
pop
xabort
clc
xchg
jmp
scas
out
imul
jg
add
adc
push
cltd
in
jb
add
lahf
mov
insl
in
add
add
ffreep
clc
insl
sub
jb
add
int
cmp
add
pop
call
pop
aad
aam
add
das
dec
aaa
lret
sbb
clc
adc
add
add
jecxz
sub
push
pop
iret
jmp
divb
add
shlb
clc
xchg
movsl
clc
out
cmp
movsb
clc
cmpsb
clc
not
lcall
xlat
xchg
sbb
test
xor
add
aam
lods
dec
int3
or
jbe
clc
sbb
add
mov
dec
jo
add
jns
xor
add
aas
ss
or
clc
mov
aam
gs
xor
add
pushf
cmp
add
jle
add
mov
clc
repz
add
mov
mov
ds
cmpsl
clc
mov
xabort
add
dec
push
add
push
add
lret
lcall
cmp
mov
clc
mov
out
clc
pop
aad
clc
je
and
add
add
xlat
movsb
clc
sti
lahf
in
loopne
clc
icebp
pop
addr16
dec
out
cltd
fucom
clc
mov
add
add
add
sar
add
add
ret
clc
and
stos
jp
sub
add
xchg
imul
add
lret
lret
fs
xchg
imul
clc
pop
mov
mov
aad
loope
push
push
add
jle
cmp
add
add
clc
cwtl
mov
cmpsb
clc
inc
clc
pop
clc
aam
popf
cmp
add
add
mov
pushf
aam
add
mov
clc
jno
add
out
in
mov
imul
fs
repz
add
push
add
clc
xchg
mov
jl
icebp
dec
pop
ret
clc
rcll
clc
mov
sbb
add
cld
add
mov
and
add
add
add
add
push
cmp
add
enter
xabort
xor
add
and
add
ficomps
lods
movsl
clc
cmpsb
clc
imul
js
pop
xchg
inc
clc
mov
add
imull
clc
jle
vandnps
clc
repz
inc
clc
sbb
inc
add
pop
sahf
xchg
test
inc
clc
mov
addr16
rolb
clc
mov
cwtl
dec
push
dec
iret
jne
clc
xor
add
lahf
mov
test
loopne
outsl
ret
clc
xchg
mov
inc
clc
sub
cwtl
sub
add
clc
test
dec
pop
sbb
add
stc
test
push
add
bound
add
imul
add
clc
sar
xchg
push
cmpsl
clc
in
test
dec
or
add
fidivl
add
xchg
imul
sbb
pop
clc
xabort
dec
mov
sti
push
add
mov
clc
jae
add
sbb
lods
js
jg
cltd
outsl
sbb
add
pop
clc
add
add
add
xchg
clc
xor
cmp
mov
add
xor
add
jge
hlt
mov
push
popf
jge
adc
clc
loop
xlat
clc
mov
in
aad
clc
cmp
adc
add
add
repz
mov
add
or
add
add
fnstenv
adc
add
add
mov
push
add
xor
add
cmc
sub
pop
data16
fisubs
add
jne
inc
clc
mov
gs
sub
arpl
add
dec
cmp
jl
leave
mov
mov
and
add
jp
inc
clc
jmp
add
add
clc
jmp
push
insl
sbb
add
xchg
dec
aaa
inc
add
jae
add
mov
cmpsb
clc
aad
add
jg
clc
jno
add
rcrb
clc
out
inc
clc
ja
clc
fmuls
clc
adc
adc
mov
movsb
clc
ds
xor
add
jmp
clc
out
fisubs
bound
add
add
pop
ss
loop
push
add
cltd
outsl
sub
and
pop
in
lock
add
mov
int3
xchg
lahf
mov
clc
xlat
ja
push
push
add
popf
sar
cmp
add
mov
addr16
pop
sub
add
fdivrs
mov
cs
lcall
clc
add
clc
insb
jge
jo
add
xchg
repz
xlat
cmp
clc
jl
popa
add
mov
cmp
pop
xchg
inc
clc
sar
bound
add
jnp
arpl
add
inc
clc
cmp
mov
aad
shrb
out
aaa
mov
add
fwait
and
enter
mov
dec
lahf
adc
stc
and
add
sbb
add
add
mov
pop
pop
sub
sbb
pushl
add
cmp
xchg
cmpsb
clc
adc
add
push
jns
xor
add
adc
add
sarb
push
clc
ss
add
test
clc
pop
cmp
clc
outsl
fs
popa
add
scas
sbb
clc
sub
sti
rclb
clc
shrb
mov
bound
add
mov
add
dec
adc
add
jns
sub
mov
adc
or
clc
mov
enter
out
mov
clc
cmpsb
clc
push
mov
fdivr
mov
clc
insb
bound
add
sbb
mov
mov
in
push
add
cs
clc
es
dec
icebp
xchg
add
clc
xor
add
add
leave
xor
add
add
add
dec
ss
sub
or
cs
data16
mov
pop
cmp
pop
pop
push
add
imulb
clc
cmp
clc
jmp
fbstp
add
jbe
add
add
insl
sub
add
clc
loopne
fiadds
clc
sbb
sbb
pop
xlat
mov
jno
add
cmp
jmp
add
mov
or
add
add
xor
add
add
out
jbe
xchg
pop
push
jp
rcl
jecxz
mov
clc
in
dec
call
clc
das
push
cltd
xor
cli
and
add
mov
xchg
mov
int3
ret
dec
sub
cmp
clc
lahf
jne
mov
clc
outsl
inc
clc
int
sub
adc
add
or
add
clc
sbb
mov
clc
add
add
cli
test
loopne
xabort
add
lock
cmp
add
mov
movsl
clc
roll
add
ljmp
add
add
add
add
adc
add
clc
test
xchg
ret
add
add
mov
daa
clc
sar
repz
pop
pop
nop
jo
add
jecxz
enter
xchg
dec
out
sub
jg
clc
sub
mov
clc
sub
clc
pop
xchg
sbb
mov
inc
clc
ret
clc
xor
add
pop
outsb
adc
add
add
out
sbb
clc
cmpsb
clc
outsl
cmc
xor
add
pop
clc
movsb
clc
xchg
insb
xchg
into
xchg
test
pop
clc
xbegin
xbegin
sbb
clc
std
jo
add
inc
clc
sub
clc
jle
clc
and
scas
dec
std
repz
add
clc
mov
jne
add
sub
xor
add
jecxz
sbb
test
mov
push
add
fs
movsb
clc
and
add
lea
pop
jno
add
aam
lcall
in
fcmovbe
cmpsb
clc
push
sahf
sub
in
pop
xchg
push
std
sub
xabort
clc
xchg
loope
addr16
repnz
add
clc
ljmp
cwtl
push
clc
lahf
push
bnd
inc
clc
enter
into
xchg
aas
and
add
fstpl
hlt
data16
mov
popa
add
push
insb
adc
add
clc
mov
out
xbegin
and
add
clc
bound
add
scas
in
add
add
add
out
mov
clc
cmp
stos
xchg
mov
lock
xchg
pop
mov
push
add
outsl
add
add
add
clc
jbe
inc
add
mov
ljmp
mov
add
or
clc
icebp
dec
and
add
add
add
out
push
add
dec
sub
add
movsl
clc
repnz
add
lock
hlt
outsb
xchg
test
mov
xchg
jae
add
sbb
add
pushf
cmpsl
clc
imul
iret
sub
xchg
sahf
inc
clc
imul
add
add
clc
mov
clc
data16
jae
add
add
mov
xchg
sub
clc
mov
add
aaa
cmc
pop
dec
push
add
ss
add
neg
movsl
clc
mov
add
clc
or
add
nop
imul
push
add
nop
ljmp
or
jb
add
clc
popf
psadbw
test
cmp
mov
mov
add
add
adc
add
clc
enter
add
stc
loope
add
push
add
push
add
jmp
iret
pop
adc
add
fisubrs
iret
shrb
loope
mull
add
push
pop
out
out
jg
clc
push
push
mov
clc
cmp
insb
sar
mul
clc
call
add
xor
add
in
mov
sub
clc
cmp
add
mov
clc
shll
add
clc
dec
mov
clc
je
add
out
dec
enter
sar
pop
and
add
clc
in
xchg
sar
jp
adc
add
jbe
add
scas
int
clc
mulb
rcrl
movsb
clc
in
jne
add
ret
clc
push
lahf
shlb
sub
cmp
add
sub
xbegin
jb
add
pop
loope
cltd
nop
adc
add
ljmp
add
add
clc
je
add
add
lahf
cmp
inc
clc
or
clc
cli
sahf
xchg
rcrb
add
clc
jno
add
clc
push
clc
out
leave
cs
mov
int
clc
out
aad
icebp
push
es
out
sbb
sbb
dec
shlb
add
aad
add
and
stc
mov
mov
xabort
mov
xchg
mov
adc
add
add
cmp
inc
clc
jbe
xchg
cmp
mov
sahf
sbb
push
sar
gs
movsb
clc
xor
add
sarb
inc
add
ja
push
lods
xor
jae
add
inc
clc
xchg
mov
clc
or
int
add
add
clc
adc
add
into
dec
or
popf
lods
sbb
clc
inc
clc
js
cmp
inc
add
fnstcw
cmp
mov
clc
loop
sub
push
clc
fbld
clc
in
xor
fs
iret
adc
add
lea
clc
xor
add
xor
add
pop
mov
add
inc
add
add
insb
adc
add
fildll
and
mov
push
add
xchg
xor
xchg
or
add
ficoml
mov
push
stos
adc
add
fstpl
lods
je
cmp
ret
clc
dec
ljmp
fdivl
add
test
loopne
xor
add
push
push
out
lcall
jmp
xor
add
scas
inc
clc
fmul
or
cmp
jno
add
in
sbb
insb
out
mov
dec
xchg
sarl
outsb
pop
xor
clc
lcall
sub
pop
int
inc
clc
sbb
inc
clc
popf
icebp
push
or
sbb
add
add
cmp
add
pop
jl
clc
dec
dec
pushf
mov
jbe
clc
push
sub
mov
es
pop
clc
es
neg
jno
add
xchg
mov
jmp
mov
add
xchg
rcr
add
add
clc
push
mov
arpl
add
add
jne
clc
push
clc
xchg
sbb
arpl
add
add
jb
add
shrb
mov
cmp
clc
dec
fdivrl
jge
clc
iret
adc
add
jae
add
pop
add
add
clc
xchg
and
add
sub
mov
ds
mov
loop
insl
out
push
pop
adc
add
xchg
aaa
dec
xabort
and
add
pusha
add
inc
clc
xor
add
flds
add
add
daa
clc
ja
pop
inc
clc
adc
add
add
xor
add
clc
sub
pusha
add
stos
lret
sub
mov
out
int
pop
pop
adc
clc
es
xor
add
add
xchg
cwtl
cmp
cs
test
sub
push
adc
add
clc
insl
add
add
add
jmp
push
sar
lret
adc
add
loope
jecxz
int
add
pop
mov
ss
inc
add
bound
add
add
fnsave
add
push
add
add
das
add
add
add
in
xlat
ss
add
inc
clc
dec
mov
jmp
out
push
inc
clc
cmp
mov
clc
add
add
cmp
mov
add
clc
clc
dec
in
adc
add
lods
inc
clc
iret
sbb
clc
scas
sbb
jmp
scas
lods
in
mov
jge
cmp
sti
imul
clc
jae
add
insl
xchg
out
dec
and
add
loopne
mov
xchg
adc
add
clc
clc
jg
ds
cmp
sarl
cmp
pop
jo
add
insl
add
add
mov
ret
clc
mov
add
popa
add
movsb
clc
insl
dec
in
cmp
in
sub
add
nop
dec
xchg
mov
mov
mov
mov
add
loope
add
add
insb
xchg
mov
mov
movsb
clc
loopne
scas
inc
clc
imul
lock
xchg
test
mov
stos
adc
add
and
loope
repnz
outsl
fidivl
imul
add
inc
clc
jle
add
cmp
add
sub
pop
sbb
mov
lods
adc
add
push
ss
imul
xor
add
sbb
clc
in
mov
xor
add
cmpsl
clc
std
dec
js
pop
xor
add
add
pop
call
or
mov
cltd
nop
out
insb
lcall
clc
fstp
rol
clc
icebp
push
mov
cmp
dec
ret
add
mov
shrl
clc
sub
mov
sti
jbe
inc
add
inc
add
mov
jbe
dec
lret
add
lods
cmp
cmpsb
clc
xor
aad
sar
clc
inc
clc
iret
dec
and
sar
inc
clc
in
nop
sbb
mov
dec
cmp
add
xabort
inc
clc
xchg
pop
jmp
adc
add
lret
btc
xchg
jl
add
push
add
iret
cwtl
dec
fisubrs
sbb
pop
clc
stos
scas
cmp
push
clc
lods
insb
pop
mov
clc
sti
cmp
mov
fs
add
add
jl
clc
test
clc
xor
arpl
add
popa
add
movsl
clc
cmp
dec
vmulps
clc
mov
sti
pop
divl
mov
add
fidivrl
clc
dec
addr16
cli
jl
mov
or
add
lret
add
xchg
mov
push
push
test
xor
add
gs
inc
add
lret
jae
add
ss
jae
add
in
es
arpl
add
add
cmp
add
mov
leave
ss
xchg
cwtl
addr16
into
sbb
add
pop
std
insb
jmp
push
add
out
fs
je
push
call
add
mov
add
push
sbb
add
push
add
insb
xor
cmp
clc
test
or
add
data16
bts
add
add
cmp
mov
and
add
lea
stc
mov
addr16
insb
inc
clc
jl
mov
mov
sar
clc
iret
cmpsb
clc
push
add
fs
mov
mov
add
cs
cmp
ljmp
lahf
fnstenv
push
clc
inc
add
cmp
clc
xchg
scas
pop
bound
add
add
aad
fisttpll
repz
scas
aam
add
jb
add
add
insb
es
sti
add
inc
add
lcall
add
jne
movsl
clc
sar
add
mov
sbb
cmp
cmc
or
lods
fists
cltd
push
sbb
adc
add
pop
cmp
in
pop
push
aaa
push
add
inc
clc
jnp
int
push
clc
jle
pop
iret
mov
je
clc
cmp
add
add
clc
sbb
mov
inc
clc
push
sbb
cmp
clc
mov
stc
mov
add
push
push
or
ljmp
jg
pusha
add
ror
cmpsl
clc
int
push
add
lock
jae
add
add
add
popf
jmp
add
add
int3
adc
clc
ss
ds
in
test
nop
pusha
add
mov
mov
enter
xchg
or
push
pop
sti
push
adc
add
clc
lea
and
push
in
adc
add
sar
clc
dec
push
add
ljmp
xabort
pop
clc
pop
adc
add
jns
repnz
in
mov
mov
clc
pop
jecxz
cmp
add
push
dec
cmp
push
xbegin
or
jne
pop
clc
jle
sub
pop
xor
add
add
clc
push
cmp
push
add
sub
add
dec
jo
add
add
clc
into
or
ss
daa
clc
mov
push
sbb
scas
or
rcl
scas
adc
add
add
add
clc
jle
adc
add
lods
fidivrl
push
std
jg
out
ds
jns
fisttpl
rcrl
add
add
clc
in
arpl
add
inc
add
xor
add
incb
push
add
sub
enter
add
add
inc
add
mov
adc
add
popf
gs
cmpsl
clc
mov
aaa
dec
pusha
add
popf
jmp
leave
out
lea
add
test
push
add
fs
insb
sbb
clc
shl
clc
loop
sarl
pop
outsl
mov
inc
clc
dec
xchg
xlat
lret
push
push
push
nop
fsubs
add
inc
add
cmp
mov
push
dec
cmp
or
clc
mov
shlb
xchg
std
jns
pop
or
mov
inc
clc
cmp
clc
popa
add
inc
clc
push
clc
inc
clc
jmp
jo
add
fwait
ljmp
mov
push
out
or
vandps
movsl
clc
js
sbb
dec
outsb
mov
adc
add
fs
movsb
clc
inc
add
adc
jl
add
mov
add
scas
and
add
add
jp
sbb
lods
cmp
adc
sub
clc
test
pop
clc
shrl
test
add
add
jle
jg
adc
add
and
xchg
loope
cli
cmp
clc
inc
add
popf
cli
je
popf
and
add
sub
clc
loope
xchg
sbb
adc
add
pop
imul
add
decl
sbb
dec
push
xor
add
lock
clc
dec
and
hlt
push
dec
jae
add
in
pushf
and
add
cwtl
mov
xchg
ret
clc
push
frstor
xor
sub
sbb
mov
add
xor
add
clc
dec
daa
clc
cmp
inc
clc
lret
jp
cmp
clc
out
ljmp
add
mov
inc
add
xchg
bound
add
jae
add
js
add
addr16
inc
add
mov
clc
dec
mov
clc
cmp
es
or
push
add
push
add
ret
clc
sti
inc
clc
bound
add
das
add
add
add
add
push
outsb
daa
clc
ficompl
add
sub
lahf
sar
icebp
cmp
add
add
in
mov
add
cmp
adc
add
inc
add
sar
in
push
xchg
sahf
push
add
or
and
add
add
xchg
mov
clc
sub
add
and
repz
pusha
add
inc
add
jp
clc
and
clc
icebp
jmp
jne
clc
jne
sar
lcall
or
adc
add
lret
cmpsb
clc
ss
adc
add
test
xor
add
lods
sub
pop
clc
jo
add
mov
vcmpps
std
and
add
clc
sar
push
add
xchg
pushf
pushf
sbb
clc
scas
cmp
sar
iret
xor
add
mov
add
clc
movsl
clc
sbb
clc
adc
add
adc
add
outsb
mov
add
jge
clc
pusha
add
sti
std
xchg
xor
add
lret
add
and
add
push
xbegin
add
fdivrl
loop
fcomps
aaa
pop
adc
add
add
adc
xor
add
add
jmp
clc
mov
fidivs
add
mov
inc
clc
in
xabort
clc
xabort
adc
add
mov
dec
push
adc
add
sub
nop
pop
clc
cmp
add
add
add
or
data16
roll
clc
ljmp
mov
fdivl
add
loope
sahf
sar
add
push
jmp
rcl
push
pop
adc
sbb
jnp
add
data16
mov
dec
xchg
cmp
addr16
mov
cld
inc
add
mov
add
push
ret
inc
add
leave
sub
add
add
and
add
jecxz
mov
xor
add
shlb
add
add
clc
scas
sub
sub
clc
pop
jecxz
int3
aad
clc
inc
add
pushf
xchg
dec
xchg
ljmp
es
imul
sar
clc
cmp
test
pop
cmpsl
clc
dec
lock
xchg
jns
clc
rorl
movsl
clc
jnp
inc
add
outsl
roll
add
pop
out
data16
cmp
and
add
add
push
ss
aas
adc
add
cmp
add
dec
lods
adc
add
dec
rcl
sbb
adc
add
clc
push
cmpsb
clc
insl
cltd
dec
icebp
outsb
add
add
out
push
add
test
or
negl
clc
daa
clc
gs
or
clc
sahf
lea
add
outsl
stc
dec
sbb
push
add
add
movsl
clc
sub
clc
mov
and
xbegin
clc
cld
adc
add
mov
clc
and
add
jg
sar
lock
mov
cmc
pop
fmull
xor
add
xor
xchg
loope
je
sub
adc
add
dec
insb
mov
clc
inc
add
cmp
adc
add
addr16
push
push
add
bound
add
clc
outsb
int
clc
mov
mov
fadds
clc
pop
add
add
sbb
clc
jbe
out
jecxz
icebp
dec
movsl
clc
jae
add
xchg
int
xchg
jnp
add
jmp
push
mov
push
icebp
fstpt
idivb
rcrb
aam
clc
adc
add
sbb
clc
xchg
testb
loope
popa
add
pop
lods
into
loope
or
adc
add
push
cmp
push
clc
sar
insb
xchg
lret
add
dec
jmp
fs
aas
and
add
or
jno
add
sbb
cmpsl
clc
jno
add
outsl
fs
out
cmp
lea
dec
cli
out
jl
xor
clc
mov
pop
xchg
cmp
insl
xchg
in
ds
inc
add
mov
clc
shll
add
adc
add
add
add
jne
add
loop
cmp
jg
jnp
adc
pop
cmc
sub
xor
add
or
add
add
add
aam
ret
add
cmp
mov
cmp
cmp
jb
add
out
push
xbegin
faddp
clc
cmp
add
add
outsb
xchg
or
xchg
add
add
clc
aam
pop
dec
dec
cmp
add
add
add
add
call
xor
add
stos
adc
add
clc
jle
clc
outsl
pop
and
add
out
jne
clc
xchg
insl
andps
add
insb
sbb
inc
add
add
add
add
cmp
clc
popa
add
mov
mov
in
repz
into
inc
clc
movsl
clc
xchg
scas
pop
dec
xor
daa
clc
ror
clc
fnstsw
and
add
xchg
mov
clc
mov
mov
cwtl
jnp
sub
add
and
fs
ret
add
adc
add
clc
cmp
cmc
pop
lahf
xor
pop
outsl
xchg
cld
pminsw
cwtl
ror
push
sbb
cmp
aad
xor
cld
xchg
mov
jbe
clc
mov
clc
clc
outsb
lea
jle
call
add
add
clc
std
in
xor
pop
in
cmp
js
push
add
ret
clc
jno
add
add
in
adc
clc
fs
lea
inc
add
jno
add
sub
jne
sar
clc
mov
dec
cmp
cmc
pop
fs
clc
xlat
aas
inc
add
cs
clc
aaa
testb
adc
add
and
add
lahf
xchg
shl
clc
dec
mov
cmp
fs
stc
lcall
clc
repnz
inc
add
push
push
cmpsl
clc
addr16
dec
push
or
add
cmp
jno
add
test
pop
ss
cmp
cmc
cmp
inc
clc
mov
push
lcall
in
dec
mov
std
insl
dec
mov
testl
add
inc
clc
mov
add
fs
xchg
mov
ret
xchg
loope
mov
fmull
pop
clc
clc
int3
clc
cmp
xor
scas
mov
clc
pop
sbb
mov
cmc
aam
rcrl
out
jg
push
insb
fs
cmp
jb
add
adc
add
clc
fcmovu
imul
fs
scas
cmp
repz
xor
add
add
movsl
clc
xor
mov
xchg
push
popa
add
pop
clc
cmp
add
sub
inc
add
fiadds
xchg
mov
add
das
in
pop
rcrb
repz
dec
jbe
fstpt
jb
add
sbb
mov
add
imul
mov
clc
cmp
and
add
mov
loopne
mov
cmp
clc
mov
lahf
icebp
sar
ret
outsl
dec
dec
push
loope
popa
add
out
cmpsb
clc
into
and
add
clc
inc
clc
and
jo
add
jl
fwait
bound
add
add
popa
add
inc
add
popa
add
add
out
pop
cltd
icebp
not
or
ja
push
add
push
add
add
mov
add
lods
test
sar
clc
pop
data16
jecxz
in
add
pop
cmc
pusha
add
inc
clc
daa
clc
dec
push
add
frstor
add
add
cmp
add
cmp
stc
mov
cmpsb
clc
cld
push
add
scas
loop
sar
repz
add
add
add
jp
out
jmp
stc
fdiv
out
arpl
add
add
lahf
insl
imul
stos
testl
sahf
cmc
pop
cmp
clc
and
add
add
push
jae
add
pop
adc
aas
not
shl
clc
pusha
add
mov
loop
push
std
push
add
or
add
mov
pop
sbb
xor
add
add
imul
fistl
ds
inc
add
ret
clc
pop
scas
mov
popf
or
add
cmpsb
clc
pop
out
mov
clc
pop
mov
clc
xchg
xor
mov
add
fwait
dec
ds
add
xor
jecxz
mov
lea
add
pop
push
add
mov
add
xchg
inc
clc
cmp
mov
scas
add
add
clc
das
mov
add
xor
add
clc
inc
add
sub
pop
sahf
ret
lcall
sbb
sub
clc
nop
ficoms
repz
gs
in
pop
xor
add
sub
add
sub
into
clc
stos
mov
cmp
data16
sub
clc
imul
push
xor
add
cmpsb
clc
scas
jp
ficoml
add
jne
lods
cmp
add
mov
iret
mov
icebp
cmp
inc
add
and
add
clc
sti
xchg
jnp
add
dec
clc
and
add
sbb
data16
mov
clc
mov
pop
clc
mov
add
aaa
fdivl
add
inc
add
jbe
rol
clc
jae
add
sahf
adc
add
clc
mov
add
add
add
mov
clc
push
xchg
mov
sbb
sbb
gs
cmp
add
dec
stos
lock
clc
xor
add
xchg
pop
jle
mov
add
add
add
add
clc
fistpll
add
fistl
cmp
aam
push
clc
iret
mov
inc
clc
mov
xchg
xbegin
inc
clc
sbb
scas
rclb
scas
test
push
clc
clc
sar
xor
add
leave
lret
mov
mov
mov
clc
xchg
cmp
add
iret
repnz
cmp
dec
pop
or
cld
scas
mov
add
sub
dec
cmp
ss
icebp
aaa
cmp
sbb
xchg
add
add
and
add
clc
sar
mov
clc
shrb
lods
nop
fadd
clc
movsl
clc
cltd
stos
jno
add
loop
dec
sar
add
add
and
add
scas
ja
xchg
mov
cmp
clc
dec
roll
int
pushf
mov
fidivrl
mov
xbegin
dec
sbb
push
mov
inc
add
stos
add
add
add
xchg
test
aaa
ret
clc
sub
pop
clc
sbb
cltd
test
xor
add
clc
fs
enter
add
add
add
mov
fisubrl
jae
add
mov
pop
inc
clc
xlat
adc
add
pop
adc
add
add
clc
pop
xchg
insb
jnp
clc
xchg
xor
js
dec
or
add
jae
add
add
mov
mov
clc
jbe
inc
clc
push
sub
and
or
fiaddl
add
add
push
dec
or
xor
add
or
jbe
std
xlat
or
mov
add
sub
add
clc
jle
cmp
lea
sub
cld
cli
ja
or
add
lret
clc
je
mov
inc
add
push
xchg
jo
add
add
inc
add
test
sti
add
outsl
or
mov
add
xchg
mov
in
jnp
lea
add
int3
fadd
clc
adc
add
clc
lret
loop
js
push
add
sub
clc
mov
add
add
mov
clc
pop
leave
stos
ds
clc
das
sbb
clc
cwtl
inc
clc
es
mov
imul
movsl
clc
ljmp
clc
xor
add
mov
fwait
sub
clc
ret
clc
and
aam
add
lock
add
clc
ret
mov
add
test
int
mov
lret
or
mov
xor
add
add
sub
clc
push
js
cmp
out
shlb
inc
clc
aam
add
adc
and
add
mov
cld
or
xabort
add
clc
mov
clc
movsb
clc
pop
push
add
into
mov
mov
xor
add
add
add
push
out
jno
add
add
xchg
shrb
sub
jns
inc
add
ret
lret
sub
scas
repnz
add
dec
cmp
clc
push
add
mov
call
mov
outsl
fndisi(8087
clc
sbb
add
xchg
test
lret
add
pop
pop
mov
xor
clc
mov
fbstp
xor
add
dec
loopne
jb
add
clc
mov
add
xchg
idivb
popa
add
das
ret
cwtl
sub
arpl
add
clc
loope
jl
inc
add
hlt
jo
add
mov
add
add
lcall
clc
insl
negb
xchg
sub
add
adc
add
xchg
pop
dec
into
mov
mov
fidivs
xor
adc
add
inc
add
pop
cmp
outsl
cwtl
loop
sti
inc
clc
and
imul
sbb
add
aaa
pushf
mov
clc
mov
pop
clc
add
add
clc
xbegin
fiaddl
dec
cmp
clc
pop
adc
add
jmp
clc
add
add
leave
std
icebp
sarb
jg
in
insb
dec
pop
fsubs
rorl
repz
call
dec
in
adc
add
clc
or
inc
clc
dec
ljmp
or
clc
xchg
xor
add
clc
push
mov
add
aad
and
add
xchg
mov
mov
addr16
dec
jp
push
add
and
add
push
addr16
cmp
jmp
clc
mov
xchg
fstpl
xchg
rcll
add
clc
xchg
hlt
xchg
pushf
xchg
sbb
clc
cmp
mov
jno
add
add
push
add
es
cld
mov
mov
push
ja
clc
cwtl
cmpsb
clc
arpl
add
aad
clc
es
xchg
into
xlat
mov
add
clc
mov
clc
push
mov
clc
mov
ret
clc
and
add
mov
mov
mov
clc
out
push
test
or
jne
scas
sti
popa
add
pop
es
popf
lahf
std
cmp
ja
mov
movsl
clc
sbb
add
imul
stos
mov
and
add
outsb
xor
add
clc
push
inc
clc
cmp
clc
sub
add
dec
mov
pushf
sbb
add
fidivs
pop
push
jge
push
add
ds
pop
push
xor
add
add
lahf
pop
outsb
sti
filds
add
and
add
mov
add
cmp
jg
clc
jle
clc
popa
add
pop
inc
clc
ja
cltd
fcoms
sbb
cmp
jge
clc
movaps
sub
add
inc
clc
or
xbegin
data16
push
push
mov
pop
cmp
add
mov
clc
sub
clc
mov
and
add
jne
clc
cli
cmp
cmp
cmp
add
jecxz
cwtl
mov
jbe
movsl
clc
lret
clc
and
add
cmp
scas
ret
clc
xor
fimuls
adc
add
adc
add
push
sub
stos
jno
add
je
or
add
add
add
clc
cmp
clc
xchg
xbegin
add
outsl
ss
mov
or
dec
stos
pop
test
cmp
clc
int
clc
std
mov
lods
bound
add
add
and
mov
out
push
add
pusha
add
xbegin
add
sbb
neg
enter
dec
arpl
add
add
test
jns
mov
sbb
add
sti
cmp
xchg
clc
mov
add
scas
xchg
outsb
sahf
inc
add
gs
fldl
xbegin
clc
movsl
clc
jnp
inc
add
add
add
mov
push
add
and
add
add
xchg
mov
push
clc
add
push
add
and
add
call
sti
push
mov
clc
out
adc
add
in
sub
add
inc
add
xchg
cmp
rclb
add
loop
es
cmp
imull
clc
adc
add
clc
jge
jl
add
xor
mov
xor
add
lahf
dec
cmp
inc
clc
inc
add
xchg
jp,pt
clc
fwait
xchg
call
add
bound
add
pop
xchg
mov
clc
daa
clc
fimuls
mov
add
dec
inc
add
or
fldpi
insl
jno
add
clc
inc
clc
je
clc
sub
add
loope
insl
fdivl
outsl
clc
xbegin
addr16
ja
inc
clc
shl
clc
leave
jg
push
xchg
in
imul
popa
add
and
data16
and
in
mov
clc
jg
clc
in
stc
xor
add
scas
lods
adc
add
lahf
pop
loop
pop
into
mov
add
inc
clc
outsl
add
add
add
cmp
jbe
clc
cmp
out
lret
add
out
lret
add
cmc
ficompl
ss
test
clc
pop
jno
add
xchg
repnz
push
into
cmc
jo
add
push
clc
mov
in
jle
stos
shll
clc
jbe
add
push
add
js
clc
pop
clc
ret
clc
movsl
clc
addr16
mov
and
add
xchg
mov
cmp
lret
add
clc
xchg
pushf
fimuls
int
ja
add
add
pushf
lods
rolb
add
idivl
clc
mov
sub
js
cmp
lahf
sar
hlt
inc
add
inc
clc
cmpsb
clc
cs
aad
dec
xchg
cwtl
mov
fldenv
clc
xchg
fimull
add
xchg
or
mov
clc
aad
dec
inc
clc
mov
sti
dec
mov
add
clc
mov
jl
int
hlt
push
daa
clc
outsl
and
add
xchg
add
add
out
lock
add
in
adc
add
mov
fcoms
mov
add
addr16
icebp
mov
out
aad
clc
popf
xchg
cmp
add
test
loop
je
push
clc
push
pop
test
stc
push
adc
clc
cmp
add
push
bound
add
clc
and
add
add
add
mov
push
ds
clc
sub
clc
test
out
mov
cmp
add
xchg
jmp
popf
xor
clc
iret
jae
add
xor
add
add
xor
dec
adc
clc
cli
movsl
clc
int3
loopne
mov
popl
popf
inc
clc
bound
add
adc
add
push
jmp
add
add
xchg
or
jae
add
clc
dec
pop
insb
fnstcw
mov
cwtl
stos
daa
clc
xchg
aad
clc
mov
mov
nop
mov
add
jno
add
add
cmpsl
clc
pop
cmp
ret
clc
jnp
push
add
testb
add
sub
out
mov
fld
clc
dec
dec
mov
lock
mov
ljmp
cmp
clc
ficoms
mov
add
add
jle
sbb
lock
fcomp
call
add
ljmp
out
shl
jnp
clc
xchg
inc
add
lods
std
and
add
clc
fisubl
clc
setp
mov
add
clc
mov
fadds
add
clc
xabort
add
out
jbe
mov
clc
mov
clc
sar
add
fdivrl
mov
jns
clc
jge
add
mov
insl
mov
inc
add
outsb
aad
add
mov
clc
jmp
jmp
in
nop
shll
add
clc
fs
pop
sahf
in
xchg
cmp
in
pop
cmp
inc
clc
jbe
clc
loope
and
add
add
xabort
clc
outsl
aad
sbb
jb
add
clc
loop
leave
and
add
sar
clc
cmp
xchg
pushf
xor
loopne
mov
inc
add
sti
mov
add
add
add
push
cmp
int
clc
sub
mov
clc
insb
arpl
add
lea
mov
add
popa
add
sub
ds
and
add
add
sbb
clc
adc
add
push
and
add
clc
mov
ret
cmp
stos
mov
jge
or
clc
div
and
add
iret
pop
and
add
add
sub
fdivr
call
xor
add
add
add
dec
lcall
add
daa
clc
cmpsb
clc
repnz
popf
inc
add
sbb
dec
jg
xchg
test
add
pop
mov
push
add
inc
add
mov
clc
add
add
add
sar
clc
leave
scas
sar
push
add
xabort
int
loopne
jg
add
cs
test
fs
out
xchg
cltd
cwtl
cmp
clc
ret
add
add
inc
add
in
push
in
popa
add
ss
ljmp
push
pop
sub
add
add
stos
mov
push
es
cmc
cmp
ss
dec
daa
clc
pop
xor
add
clc
and
add
test
out
out
cmp
inc
add
lock
sar
clc
stc
inc
add
stos
cmpsb
clc
incl
clc
es
pop
fwait
xbegin
mov
clc
mov
sbb
aam
clc
fisubrl
clc
xor
add
sub
add
and
push
shll
add
jle
push
add
sub
push
add
push
add
out
aas
xchg
xchg
insb
dec
sti
clc
mov
clc
arpl
add
mov
push
add
mov
push
jl
shll
sub
lcall
negb
clc
mov
lret
testb
sar
mov
mov
sbb
mov
add
xchg
ret
xchg
sub
lods
fstl
outsl
pop
clc
int
idiv
mov
add
mov
add
gs
or
add
repz
clc
test
xor
add
add
mov
fisttps
test
xbegin
clc
out
ljmp
add
and
add
clc
test
sbb
pop
dec
pop
clc
jbe
iret
clc
mov
imul
clc
inc
add
ror
and
add
cmp
add
or
fbstp
add
add
cmp
clc
pop
jb
add
add
push
into
push
push
pop
sbb
xchg
divl
pop
loopne
ja
add
gs
jns
clc
pop
data16
cmp
add
je
clc
lods
mov
add
push
aad
adc
clc
or
addr16
xchg
sar
and
add
cmpsb
clc
lods
sbb
clc
jl
mov
add
dec
and
add
clc
nop
or
add
xbegin
rolb
add
stos
or
add
mov
add
mov
add
sbb
xchg
xchg
js
in
lock
inc
add
lahf
add
add
xlat
jecxz
add
add
scas
sar
loopne
inc
add
or
mov
mov
add
push
mov
psubw
shll
pop
clc
pop
push
xor
add
add
mov
add
inc
clc
dec
adc
cmc
fcomip
arpl
add
clc
pop
dec
es
add
xor
add
ja
clc
fldenv
add
add
int
clc
cmp
push
popf
jns
test
cmp
idivb
clc
mov
clc
and
add
fucomip
sub
add
add
add
add
out
loope
cmp
add
add
inc
clc
add
add
add
add
jp
add
cmpsl
clc
xchg
aas
insl
mov
clc
push
mov
fwait
bound
add
push
sub
add
popf
xor
clc
and
add
clc
enter
sti
dec
adc
add
in
or
xor
xchg
cli
popa
add
pop
inc
clc
inc
add
repnz
sbb
clc
pop
adc
clc
mov
add
mov
clc
call
je
sub
add
mov
in
cmpsb
clc
jbe
push
sub
call
add
hlt
sar
lock
gs
mov
add
leave
in
in
cltd
pop
xor
add
xchg
test
mov
add
add
inc
add
shlb
jbe
sbb
jle
aaa
jle
mov
mov
cmp
nop
cmp
cltd
or
inc
clc
xor
add
lahf
mov
test
add
dec
stos
xchg
faddl
aas
mov
add
dec
cmp
add
es
test
movsb
clc
mov
clc
stos
aas
iret
mov
data16
jp
push
add
xchg
pop
clc
stc
add
add
sbb
push
ret
clc
call
clc
stos
jne
icebp
mov
clc
pop
clc
or
cli
dec
push
add
pop
cmp
xor
add
add
fistpll
clc
std
movsl
clc
lahf
push
clc
push
and
add
add
clc
xchg
ds
sub
add
mov
sub
mov
clc
repnz
xchg
xor
add
icebp
sti
popf
mov
sar
xchg
push
add
fldenv
add
xchg
in
insl
cmpsl
clc
lea
jmp
mov
clc
jl
jecxz
push
sub
inc
clc
hlt
stos
cwtl
adc
add
inc
add
repz
add
mov
inc
add
mov
pop
cmp
scas
dec
jne
clc
and
add
fistl
push
rorb
add
gs
sbb
in
sbb
hlt
jmp
xlat
data16
and
ss
ret
clc
or
add
icebp
add
add
dec
das
cmpsb
clc
das
mov
out
test
clc
jo
add
add
pop
clc
inc
clc
pop
in
jb
add
add
jg
clc
je
push
loopne
int3
mov
add
adc
inc
clc
sbb
mov
clc
pop
mov
lcall
mov
dec
cmp
mov
out
or
and
add
jbe
add
jmp
pop
fildll
jae
add
dec
sub
out
add
add
leave
jns
out
sbb
hlt
idivl
and
popf
inc
clc
mov
xor
push
clc
mov
gs
cld
clc
in
loope
xor
aaa
rolb
clc
add
add
clc
xchg
adc
inc
add
push
add
inc
add
push
imul
es
out
sbb
sar
add
pop
scas
lods
popf
cmp
add
sub
clc
inc
clc
repz
add
pop
pop
jb
add
add
lahf
aam
add
in
inc
clc
hlt
mov
repz
clc
popf
nop
jo
add
ss
sbb
add
mov
scas
scas
push
xor
add
xor
clc
repnz
das
lea
lcall
cmp
add
cmp
in
jp
push
add
mov
xor
add
mov
sahf
stc
enter
and
add
clc
loop
dec
cli
mov
mov
jmp
aaa
xchg
xchg
incb
clc
jb
add
clc
or
bound
add
test
push
add
das
and
push
dec
ja
shlb
add
repz
dec
ds
add
adc
mov
add
pop
clc
fsubrl
lcall
push
add
xor
mov
mov
imul
add
mov
rolb
add
dec
scas
popf
imul
cmpsl
clc
lea
cmp
repz
push
mov
clc
cmp
clc
push
add
xlat
popa
add
out
sar
and
add
push
xchg
sbb
mov
cmp
clc
lock
sub
pop
push
mov
mov
xor
add
add
clc
or
popf
add
xor
add
incb
push
idivb
clc
daa
clc
xbegin
add
xbegin
pop
xabort
clc
mov
clc
jb
add
xbegin
inc
add
out
dec
addr16
mov
adc
add
clc
outsb
pop
jmp
clc
sbb
clc
popa
add
xor
add
clc
sar
jns
add
xor
add
add
cld
out
mov
add
insb
sub
clc
push
lea
xchg
cmp
xchg
fstpt
xor
add
add
add
fdivr
icebp
sub
add
adc
push
add
es
movsb
clc
popf
adc
add
mov
mov
xchg
insl
dec
out
lods
sbb
add
clc
in
xchg
icebp
and
ds
add
addr16
cmc
jecxz
and
add
clc
movsl
clc
sub
rorl
push
in
pushf
aam
add
sbb
lcall
mov
dec
push
es
in
clc
inc
clc
cmp
mov
clc
xbegin
xlat
pop
pop
xor
add
push
add
xbegin
pushf
cmp
push
stos
cmc
or
clc
sar
xabort
gs
lods
fidivl
add
data16
sub
inc
add
xchg
clc
lock
add
inc
clc
add
add
lock
inc
clc
out
ret
clc
mov
dec
xor
add
clc
popf
inc
add
lret
fnsave
pop
pop
fimuls
add
add
add
sarl
dec
mov
cli
call
add
xbegin
sub
add
cli
inc
clc
cmp
inc
add
add
add
aas
ss
vorps
clc
sbb
clc
mov
and
sub
add
mov
mov
add
add
in
js
pop
push
xor
add
cmpsb
clc
cmp
mov
add
xchg
jb
add
cs
xabort
xabort
lods
nop
and
add
push
add
out
jp
cmp
clc
ss
xchg
dec
int
clc
jge
mov
scas
pop
scas
loope
ret
clc
cmp
add
add
dec
add
add
out
daa
clc
inc
add
jb
add
lods
imul
add
es
pop
mov
pop
gs
js
clc
or
add
imul
add
clc
js
popa
add
leave
aad
jp
or
mov
sbb
clc
loop
or
inc
add
das
push
xbegin
test
jne
add
jg
leave
mov
add
clc
cmp
push
jle
cmp
push
adc
add
imul
mov
add
inc
add
arpl
add
dec
adc
add
clc
ljmp
push
add
daa
clc
sbb
add
xchg
pushf
inc
add
test
push
jno
add
aaa
push
add
cmp
mov
clc
rcrl
cwtl
movsb
clc
add
add
xchg
ret
clc
ret
sub
dec
js
cmp
add
add
add
push
jmp
clc
lahf
out
sti
and
inc
add
daa
clc
pop
pop
mov
add
mov
test
dec
push
mov
add
mov
mov
mov
add
xor
add
pop
mov
jnp
outsl
mov
mov
clc
mov
inc
add
test
add
fmull
das
push
std
sub
clc
push
xor
and
add
clc
scas
ret
clc
icebp
cmp
cmp
clc
sbb
xchg
not
mov
xchg
fldcw
emms
insb
cmp
sbb
cmpsl
clc
aam
cmpsb
clc
es
cmc
push
add
xor
add
dec
filds
bnd
imul
add
inc
add
fadd
clc
sub
cld
ds
add
iret
clc
push
mov
cmp
clc
sub
mov
cmp
add
ljmp
fnstcw
into
xor
add
sbb
stos
lret
into
mov
xor
mov
add
jb
add
and
add
add
add
clc
mov
pop
flds
fs
mov
adc
add
add
cmp
scas
pop
xor
notl
add
leave
rcll
clc
daa
clc
cmp
lock
popa
add
shlb
add
push
xchg
lret
sub
add
dec
mov
in
push
add
pop
jns
mov
add
or
add
loopne
jle
clc
loop
out
xabort
clc
mov
jle
xor
add
cld
mov
js
adc
add
pop
hlt
xor
add
add
iret
mov
mov
pop
pop
cmp
or
add
insl
mov
clc
push
jb
add
add
into
pop
sub
into
data16
lea
push
sub
aas
xchg
push
clc
fisttpl
dec
ret
clc
adc
pop
popa
add
sub
add
sbb
xlat
ljmp
add
mov
mov
lea
data16
xchg
nop
arpl
add
mov
pop
add
add
das
ja
add
inc
add
or
shl
leave
adc
add
mov
dec
xor
add
pusha
add
dec
sahf
shr
mov
add
adc
add
cmpsl
clc
adc
jb
add
xchg
pop
xor
add
fnstsw
lods
jge
add
add
add
push
sub
ds
add
or
add
data16
cmp
mov
test
or
cmpsl
clc
fwait
add
add
clc
clc
mov
xbegin
mov
mov
and
cs
mov
add
aas
and
add
sub
ljmp
add
inc
clc
lcall
rolb
add
cmp
add
pushf
adc
add
ret
jno
add
and
add
clc
inc
clc
mov
clc
ret
pop
out
lret
and
add
int
add
bound
add
pop
inc
clc
aad
mov
add
leave
lcall
sar
clc
mov
in
pop
rclb
jnp
mov
add
mov
jns
clc
cmpsb
clc
mov
clc
push
jno
add
sarl
int
int
out
sar
add
mov
adc
add
rorb
jl
clc
xor
add
add
add
add
add
add
js
xabort
dec
cmc
mov
add
inc
add
fwait
dec
aaa
daa
clc
sahf
popa
add
sub
je
fwait
or
and
add
add
clc
decb
scas
jae
add
aaa
adc
fimuls
pop
jns
add
add
add
repz
cmpsb
clc
sub
mov
or
test
xor
and
out
sub
jae
add
fildl
mov
xchg
lcall
add
xor
dec
sbb
clc
jp
mov
add
push
inc
add
jae
add
dec
xchg
jno
add
daa
clc
fcomi
sub
add
out
mov
add
xchg
pop
out
inc
clc
fwait
push
add
jb
add
cmp
sar
fistpll
clc
push
add
add
add
pop
or
push
add
push
pop
xor
ret
jo
add
out
push
add
movsl
clc
rcr
mov
add
add
imul
dec
jbe
dec
mov
add
mov
cmp
clc
push
clc
cmp
inc
clc
or
add
cmpsl
clc
cld
dec
pop
sar
add
in
gs
mov
enter
lods
jmp
leave
loop
jno
add
clc
jl
add
jg
clc
adc
jle
adc
clc
mov
jmp
clc
repnz
xchg
in
jge
add
sub
add
cltd
mov
add
push
add
adc
add
fstpt
or
or
add
mov
add
cmp
add
mov
repnz
addr16
push
push
clc
mov
add
add
push
lock
or
movsl
clc
adc
faddl
clc
fbld
add
sub
cmp
xchg
ss
clc
cmp
cmp
jns
clc
movsb
clc
xor
add
stos
cmpsl
clc
arpl
add
clc
test
push
test
je
add
mov
cmp
xchg
add
jmp
clc
mov
clc
cmp
mov
add
or
dec
sub
cli
stos
push
mov
sbb
lods
lods
xchg
sarl
and
add
fldenv
clc
jns
cmp
clc
and
mov
test
clc
and
add
clc
add
clc
push
add
scas
out
mov
inc
add
pop
test
repz
pop
jg
mov
out
and
add
add
push
add
jecxz
sti
jle
jb
add
inc
clc
push
add
dec
ret
clc
dec
and
add
jp
clc
shlb
popf
sub
mov
or
faddl
add
add
loopne
pop
dec
jns
inc
clc
sbb
mov
sar
add
xbegin
cmp
inc
add
cmp
sub
js
inc
add
sahf
decl
xchg
xor
clc
fsubl
add
add
clc
ss
clc
cwtl
clc
setg
push
sar
sbb
pop
jne
lods
sub
add
mov
adc
add
add
aam
push
add
mov
clc
or
sar
fwait
fwait
mov
xchg
fmul
dec
or
movsl
clc
sub
mov
sbb
or
in
push
add
aad
clc
decb
lock
insb
lods
dec
ret
clc
push
add
adc
add
pop
not
nop
hlt
xor
into
dec
aas
cmpsl
clc
mov
not
add
add
mov
clc
fadd
clc
in
mov
dec
pop
ljmp
xor
add
shll
fistl
add
loopne
outsb
in
jb
add
leave
aas
lea
jg
ficoms
add
adc
out
mov
sub
mov
clc
push
add
js
clc
sbb
fmull
and
das
faddl
imul
pushf
mov
hlt
mov
cmp
in
push
lods
pusha
add
imul
push
mov
add
push
jbe
mov
clc
mov
mov
lods
bound
add
int
or
cltd
je
insb
jns
mov
sbb
add
sub
sar
dec
sar
ds
in
out
jbe
sub
add
add
add
loop
xor
add
clc
ss
loop
sar
dec
mov
test
add
aam
clc
add
add
aam
add
loop
into
movsb
clc
outsl
xchg
outsl
sahf
daa
clc
stc
and
add
clc
pushf
int
clc
mov
jge
clc
push
xchg
jp
clc
cmpsb
clc
xabort
clc
sub
or
movsb
clc
jecxz
addr16
xlat
xabort
clc
xchg
pusha
add
js
cmpsl
clc
sub
call
mov
clc
loop
aam
push
loopne
sar
clc
pop
sarb
add
xchg
cmp
loopne
in
cli
mov
cli
filds
cmp
pop
mov
inc
add
or
lods
mov
gs
push
push
add
push
lret
ret
ret
clc
test
int
jns
pop
faddl
add
add
mov
in
int3
stos
in
jge
add
mov
repz
add
pop
test
sar
cmp
sbb
dec
mov
aad
clc
ja
clc
adc
add
jae
add
mov
cmp
cltd
and
add
das
xor
add
clc
clc
cmp
push
das
out
jge
stos
add
add
xbegin
clc
adc
rcll
cmp
clc
push
sar
sbb
out
xchg
enter
popf
cmp
adc
add
loopne
mov
adc
cmp
xor
add
stos
fdivp
fidivrs
test
popl
add
inc
clc
inc
clc
mov
add
dec
add
add
add
add
sahf
dec
push
test
inc
add
push
add
dec
push
add
add
jle
xchg
jle
add
repz
loope
rcll
in
jno
add
clc
aas
mov
xchg
add
add
mov
ret
pop
sar
clc
inc
clc
fnstsw
rcll
inc
add
das
js
xlat
scas
cmp
xchg
out
aaa
cmp
out
xbegin
or
pop
test
jle
add
stos
mov
adc
jle
mov
jge
clc
dec
jnp
outsl
mov
clc
imul
cmp
cld
pop
cmp
cmp
jge
add
repnz
fidivs
add
or
stos
lea
add
lods
push
aam
adc
add
clc
lods
mov
popf
cmp
clc
jnp
dec
mov
pushf
sub
clc
xchg
sbb
clc
adc
add
out
push
add
adc
add
cltd
mov
in
mov
add
imulb
aam
inc
clc
and
add
add
jp
int3
es
lods
pop
or
cmpsl
clc
ja
into
cmp
mov
push
sbb
clc
sbb
pop
add
add
clc
sub
jmp
pushf
pop
in
inc
add
push
pop
iret
xor
lods
test
mov
xor
add
cwtl
xor
add
in
cs
cmp
cmp
scas
add
add
adc
add
push
add
in
and
add
add
lcall
clc
xor
add
add
mov
fs
rcrb
in
es
enter
test
add
fadds
clc
xlat
mov
ljmp
push
xchg
in
or
out
call
int3
push
or
scas
and
add
push
outsb
sahf
loope
movsl
clc
enter
clc
mov
xor
add
add
gs
mov
test
dec
sub
aam
add
cmc
mov
sar
xor
mov
add
adc
add
add
push
addr16
out
ds
out
and
add
adc
add
add
add
xbegin
clc
jae
add
add
int
loop
clc
dec
pop
dec
mov
sub
xor
add
imul
clc
lahf
mov
call
cmpsl
clc
fdivl
cmp
xchg
mov
dec
adc
jle
clc
pop
jmp
test
jnp
lea
es
cs
cmp
dec
ljmp
lods
and
add
clc
jb
add
xlat
lahf
shr
jno
add
add
sub
jns
mov
clc
cmp
add
loopne
repnz
sbb
mov
dec
cmp
mov
pop
repnz
xor
add
clc
call
lods
cmp
sbb
cs
clc
movsb
clc
test
jne
push
cltd
dec
or
sahf
or
out
mov
lods
xor
add
sbb
push
clc
push
add
imul
mov
fs
sub
or
clc
test
clc
lea
xor
add
add
clc
xlat
jle
clc
sahf
mov
add
jp
push
add
cmp
cmp
pop
clc
lods
in
jb
add
movsl
clc
movsl
clc
ret
clc
scas
jo
add
mov
das
adc
xchg
sar
clc
daa
clc
or
mov
add
inc
clc
sbb
add
arpl
add
mov
clc
je
clc
jbe
jle
cli
jne
mov
clc
jle
add
testb
int3
jo
add
add
fcoms
add
clc
rclb
inc
add
dec
mov
xor
add
jle
cmp
cli
adc
add
inc
add
bound
add
adc
add
addr16
pop
stos
dec
or
jmp
clc
cmp
sar
clc
cwtl
inc
add
pop
inc
add
push
pushf
hlt
js
add
lret
add
jmp
clc
or
jg
insb
and
add
add
aam
ret
clc
popf
xchg
loopne
xor
add
add
clc
adc
es
mov
sbb
add
dec
in
rcrb
clc
pop
loope
cmp
fisubl
mov
mov
push
scas
adc
add
xchg
or
ljmp
adc
add
inc
clc
aad
inc
clc
inc
add
icebp
mov
ljmp
test
clc
mov
das
xchg
rcll
add
loop
or
stos
mov
push
add
jl
push
add
vshufps
dec
adc
cmp
addr16
pop
in
sar
cmp
ljmp
and
add
lcall
aad
add
jge
lcall
mov
add
mov
clc
pop
mov
jl
inc
add
push
int3
aam
sub
clc
pushl
jmp
clc
iret
and
cmp
sar
outsl
pop
fs
cs
jg
cs
popf
daa
clc
xchg
adc
add
pop
and
add
insl
lods
test
jae
add
add
inc
add
jnp
clc
ret
add
loopne
ja
clc
inc
add
out
and
pop
mov
clc
bound
add
clc
push
clc
and
add
sub
inc
add
lret
jg
mov
clc
inc
add
cmp
clc
mov
clc
cmp
loope
imulb
clc
cmp
sbb
add
add
add
rcr
mov
lods
icebp
push
add
xchg
movsl
clc
ret
push
cmp
mov
xchg
mov
clc
or
inc
clc
in
xor
add
adc
add
inc
add
dec
sar
clc
and
add
clc
adc
add
add
mov
xor
insl
jb
add
clc
into
ds
adc
add
cmp
add
jnp
mov
loop
fstps
xabort
clc
pop
cmp
lret
hlt
bound
add
add
aas
div
inc
clc
xchg
in
xchg
mov
add
out
push
mov
fdiv
adc
add
add
mov
sub
mov
rorl
xor
add
clc
cmp
xor
add
and
add
jp
jl
add
leave
in
xchg
mov
inc
add
insb
mov
enter
add
mov
rolb
pop
ljmp
clc
or
fistpll
mov
popa
add
add
add
dec
dec
popf
xchg
push
clc
mov
fwait
add
add
push
add
inc
clc
faddl
pop
inc
add
adc
sahf
clc
ds
sub
clc
xor
add
clc
cli
mov
jo
add
test
jecxz
mov
loop
movsb
clc
mov
jno
add
sub
popf
jns
xlat
push
add
mov
mov
xabort
invd
in
sbb
add
add
cmp
xchg
sar
cmp
clc
leave
mov
add
mov
out
mov
ljmp
add
clc
out
add
sbb
cwtl
push
add
sub
sub
xabort
test
bound
add
clc
adc
add
pop
push
add
dec
cmpsb
clc
inc
add
dec
push
add
sub
add
add
pop
je
add
push
add
hlt
push
add
cmp
aam
add
in
aam
add
push
pop
pop
adc
add
das
scas
popf
and
add
add
fs
clc
cld
lods
sub
jo
add
punpcklbw
add
or
mov
jo
add
clc
rcr
xbegin
and
add
cmp
add
jo
add
clc
popf
dec
sbb
cmp
clc
xchg
jg
clc
push
add
cmp
mov
add
add
data16
xchg
jno
add
add
fld
clc
mov
add
clc
out
dec
pushf
sar
mov
movsb
clc
mov
outsl
loope
xchg
arpl
add
fst
sub
clc
and
add
add
xchg
pop
clc
arpl
add
scas
dec
xor
pop
cmp
mov
clc
das
cltd
arpl
add
add
mov
jo
add
mov
mov
test
adc
add
push
jo
add
loopne
xchg
js
clc
add
add
xlat
outsb
ljmp
adc
add
sahf
xor
add
adc
add
add
sysret
clc
jp
mov
clc
and
cmp
inc
add
loop
sbb
clc
cmpsb
clc
into
notl
sbb
clc
out
sbb
clc
pop
jo
add
imul
add
mov
add
sbb
lods
or
add
sar
or
rdmsr
add
or
popa
add
xor
add
out
insl
sahf
dec
je
add
xor
add
add
movsb
clc
inc
clc
dec
lods
cmp
in
or
rcr
jmp
clc
jge
add
or
arpl
add
inc
add
mov
pop
ss
pop
or
add
imul
nop
jmp
aaa
push
add
and
jle
add
jbe
gs
test
lret
pop
jbe
add
and
add
add
xchg
mov
repnz
add
inc
clc
out
jmp
sub
hlt
pop
jnp
sub
clc
hlt
loop
mov
pop
push
mov
add
clc
es
lea
cld
and
add
inc
add
inc
add
and
add
clc
add
add
and
add
jl
add
cmc
pop
pushf
stc
add
add
outsb
nop
sub
clc
int3
in
push
clc
popa
add
xchg
sbb
add
add
mov
out
vphaddubq
clc
dec
pop
clc
sbb
lods
push
add
cmp
jmp
dec
adc
add
xchg
test
sar
clc
fistl
mov
add
clc
jmp
clc
mov
sbb
outsl
sbb
clc
jno
add
cmp
add
clc
pusha
add
push
add
adc
add
clc
or
inc
clc
jbe
clc
sub
js
add
ret
clc
sub
enter
dec
pop
movntq
out
xor
add
or
mov
das
fildll
sbb
cmp
add
push
add
aam
mov
aaa
jns
dec
xchg
ret
clc
push
clc
fisubs
add
arpl
add
clc
pop
or
add
pop
push
inc
add
pushf
sub
inc
clc
xbegin
add
add
mov
jg
loop
or
xor
add
pop
and
movsb
clc
cmp
movsl
clc
enter
inc
clc
mov
lock
arpl
add
add
pop
popa
add
xabort
jae
add
clc
mov
ficomps
sar
adc
add
ret
clc
and
add
nop
lcall
clc
in
push
add
aaa
nop
adc
cmpsb
clc
nop
adc
scas
loop
aaa
out
lahf
mov
aam
clc
sar
clc
sarb
xbegin
repz
pop
or
xbegin
lods
notl
and
cmp
add
scas
fwait
push
xchg
jno
add
outsb
cld
jp
add
clc
js
lcall
nop
mov
cmp
add
gs
sbb
xchg
lcall
mov
repnz
jb
add
clc
or
cwtl
vunpckhps
or
adc
adc
add
es
dec
insb
std
cmp
add
pop
xor
add
ljmp
pop
loop
aas
lcall
jmp
clc
mov
mov
clc
cld
repz
add
in
shrb
loop
repnz
pop
dec
lret
inc
clc
lcall
jp
clc
xabort
clc
mov
ljmp
pop
adc
add
xor
add
cmp
ljmp
add
pop
adc
xabort
js
out
jns
and
add
add
lods
xchg
daa
clc
jl
add
adc
clc
mov
jno
add
outsb
sub
repz
sarb
clc
dec
in
imul
add
add
clc
sub
clc
push
clc
mov
loope
test
outsl
sub
lea
imul
int3
das
test
sbb
clc
adc
add
add
xabort
iret
pop
mov
add
mov
sub
clc
mov
clc
adc
add
xadd
lret
stos
adc
add
add
mov
clc
aaa
mov
add
pop
ror
ds
xchg
fwait
mov
clc
mov
add
mov
mov
mov
ss
clc
insl
or
outsb
push
add
popf
or
clc
pop
iret
adc
add
mov
inc
add
fisttpll
movsl
clc
inc
clc
or
add
sub
jp
jb
add
clc
jo
add
xchg
push
add
popf
and
add
sub
xor
add
or
clc
add
add
dec
mov
clc
jecxz
aas
xchg
pop
jb
add
push
add
lods
movsb
clc
iret
frndint
out
push
out
or
fsubl
add
push
xchg
cmp
add
sar
add
enter
stc
push
shll
cmp
clc
mov
imul
or
cmp
js
clc
cmp
and
add
loopne
xchg
add
add
dec
jecxz
sar
push
sti
test
or
js
push
add
popa
add
faddl
clc
adc
mov
stc
add
repz
and
add
adc
add
add
jae
add
add
insl
push
sbb
add
cmc
jb
add
add
sbb
sbb
inc
clc
mov
clc
sar
push
and
add
sar
clc
pop
and
add
fsubp
clc
jne
push
add
sub
clc
aaa
add
add
leave
or
push
push
hlt
fsubrs
jp
sti
pop
lock
xabort
dec
or
add
mov
sbb
arpl
add
add
add
fcmovnu
es
sbb
add
das
out
push
clc
add
add
jp
fiaddl
push
stc
dec
out
loope
inc
add
rcl
loope
jae
add
xchg
inc
clc
cmp
add
inc
clc
loope
imull
cmp
mov
add
pop
pusha
add
loopne
mov
xor
clc
adc
clc
es
adc
add
add
scas
mov
popf
dec
xchg
pop
clc
pop
mov
clc
pusha
add
jo
add
push
add
push
popa
add
push
add
mov
and
add
out
mov
add
xchg
mov
clc
mov
add
cmp
push
sar
add
add
test
clc
jbe
inc
clc
xchg
xbegin
add
das
push
add
sub
clc
cmc
mov
add
mov
mov
sahf
into
mov
mov
clc
xchg
or
clc
sub
std
xchg
cmp
loope
pusha
add
in
push
xor
add
sub
add
cmc
adc
popa
add
pop
inc
clc
ret
clc
and
add
push
add
xlat
lods
addr16
test
sti
test
dec
and
add
mov
mov
cmp
arpl
add
daa
clc
insl
data16
cmp
clc
mov
mov
add
enter
fcompl
add
add
inc
add
and
add
add
mov
clc
cmc
mov
mov
jne
sub
or
es
pop
mov
cmc
cmp
pop
mov
xchg
enter
clc
jno
add
pushf
call
add
sar
pop
push
adc
add
add
ret
clc
bound
add
add
sar
hlt
in
ss
cmp
clc
mov
aad
mov
lahf
fwait
dec
pusha
add
push
shll
add
dec
mov
inc
add
mov
clc
lret
inc
clc
sar
repz
add
add
aas
aas
cmc
mov
xor
jecxz
jo
add
jns
jae
add
xchg
and
add
add
stos
inc
clc
jno
add
iret
test
clc
gs
push
push
clc
push
add
leave
inc
clc
sub
clc
xlat
sbb
repnz
add
in
cmpsl
clc
pop
mov
cmp
add
gs
push
xor
fsubrl
clc
sub
call
js
xor
test
adc
xor
add
clc
xor
add
add
imul
cmp
in
dec
xlat
add
add
inc
add
mov
gs
imul
add
add
add
clc
jns
pop
mov
pop
clc
xchg
out
sbb
push
add
mov
aas
fs
jnp
clc
fsubp
clc
jns
push
add
std
mov
addr16
sahf
sbb
aaa
and
add
cmp
enter
clc
popa
add
jp
mov
clc
in
pop
bound
add
add
cmp
inc
add
and
add
clc
cmpsb
clc
movsb
clc
std
jbe
clc
mov
clc
test
dec
fwait
cmp
fisttpll
sbb
adc
add
aam
out
pop
fsubs
add
mov
bound
add
sbb
add
or
inc
add
push
adc
clc
hlt
mov
add
sub
inc
add
xchg
and
lret
add
jo
add
and
fcoml
or
js
inc
add
and
add
adc
add
je
outsl
into
inc
clc
fists
add
sar
ficomps
sar
clc
idivb
jp
inc
clc
outsl
dec
sub
add
not
inc
add
stc
dec
fnsetpm(287
clc
sub
clc
movsl
clc
push
repz
xabort
add
into
std
pop
addr16
movsl
clc
pop
stos
adc
add
out
jae
add
sub
add
dec
fmul
out
into
lods
shr
add
sar
clc
dec
test
rolb
add
clc
or
xchg
outsl
out
sbb
clc
pop
cmp
int3
mov
clc
int
icebp
xor
add
add
add
xabort
xor
add
add
or
mov
push
clc
fldl
sub
pop
dec
push
ret
clc
push
dec
pop
push
mov
mov
adc
add
shll
add
cmp
clc
sub
xchg
mov
clc
inc
clc
pop
negb
inc
clc
jg
out
lock
jne
clc
int
clc
aam
arpl
add
xlat
jp
mov
clc
adc
loopne
and
add
lock
loope
mov
cmc
ja
clc
in
mov
xabort
stc
mov
add
dec
xchg
sbb
push
add
mov
mov
clc
ficoml
add
addr16
aam
clc
mov
shlb
clc
pop
add
add
xchg
cmp
cli
fmuls
in
inc
add
cmp
clc
repz
add
xor
add
clc
loopne
xbegin
hlt
mov
roll
add
out
sbb
add
dec
decl
push
cltd
out
data16
jnp
inc
clc
mov
push
mov
jecxz
incl
add
int3
fmuls
clc
sub
clc
pop
rclb
pop
stos
pop
call
sar
clc
add
add
push
movsl
clc
or
clc
dec
and
sahf
pop
adc
add
data16
pop
jecxz
lret
pop
xchg
mov
fwait
sahf
pop
shlb
clc
mov
add
cld
cli
ljmp
xchg
sub
add
sbb
add
insb
add
add
clc
mov
clc
aad
mov
jo
add
ficompl
hlt
add
add
sub
add
push
fnstenv
push
enter
add
cmp
add
icebp
mov
or
xabort
test
clc
pop
bound
add
in
cmp
add
push
push
aad
add
das
xchg
sbb
clc
aad
add
jp
movsl
clc
sub
addr16
ss
add
insl
adc
add
add
clc
xchg
push
pop
mov
aas
aaa
pop
jp
add
xchg
insl
in
adc
add
pop
jno
add
pop
clc
iret
int3
popf
add
add
or
clc
push
clc
clc
shl
and
add
cwtl
call
add
ret
ss
push
add
lret
add
dec
push
mov
push
fs
enter
push
add
sarl
clc
sub
clc
and
add
add
mov
cmp
clc
jbe
clc
push
mov
cltd
loopne
push
push
adc
sbb
fstps
test
outsl
movsb
clc
sbb
add
cwtl
cmp
add
lcall
clc
mov
dec
dec
xchg
fwait
xchg
and
add
clc
sub
ljmp
add
rcrb
add
mov
clc
xchg
push
mov
and
or
xor
add
add
sahf
sti
mov
add
adc
add
mov
es
movsl
clc
xchg
outsl
btc
add
fmuls
clc
jo
add
clc
push
cmp
pop
xchg
sar
test
mov
add
sbb
add
push
adc
add
xchg
jb
add
clc
test
xchg
mov
inc
clc
pop
outsl
call
adc
add
add
je
clc
xchg
dec
js
das
rclb
adc
add
clc
mov
sbb
stos
push
add
jnp
add
add
dec
jbe
cmp
add
pop
fsub
clc
add
or
mov
clc
cmp
mov
mov
add
pop
sub
loope
loopne
sar
push
repnz
data16
fcomp
dec
and
add
add
sahf
stc
mov
clc
jno
add
cmp
mov
add
cmp
add
pop
sub
inc
clc
xor
add
fldcw
out
das
sub
inc
clc
jne
pop
jl
dec
sbb
xor
add
clc
push
add
jle
clc
push
add
and
int
clc
inc
clc
add
add
pop
stc
flds
mov
cltd
pushf
mov
push
nop
jmp
add
cmc
scas
ret
clc
and
add
clc
or
jl
imul
add
add
jnp
out
sti
jae
add
mov
imul
add
inc
add
add
add
mov
clc
pop
xchg
mov
clc
xor
clc
cmp
fildl
add
je
clc
push
mov
clc
sub
clc
dec
cmp
push
clc
jge
pusha
add
pop
or
push
je
aaa
jo
add
cmpsb
clc
cmpsb
clc
cmpsl
clc
fildll
xchg
into
stc
mov
add
sbb
clc
mov
clc
rcll
add
out
or
pop
push
add
dec
sarl
mov
repz
mov
mov
add
fmuls
aaa
jmp
mov
add
pop
and
add
data16
lock
add
clc
jle
mov
clc
mov
jae
add
add
movsl
clc
lcall
push
clc
in
dec
ljmp
clc
mov
loop
xchg
enter
add
add
fildll
add
dec
call
push
clc
sti
dec
dec
pop
mov
iret
aas
in
nop
ss
call
shlb
mov
add
or
clc
adc
pop
pop
in
lcall
insl
mov
faddl
add
push
mov
and
and
ljmp
clc
int
clc
mov
ljmp
sub
xchg
cmp
cmp
xbegin
mov
fadds
fisttpl
adc
add
scas
adc
add
pop
loop
jnp
jo
add
add
and
add
lcall
lcall
clc
dec
push
add
jecxz
jmp
dec
cmp
mov
cmp
add
clc
push
repnz
add
loope
jae
add
xor
add
gs
mov
inc
add
xor
add
add
sbb
mov
mov
clc
fdivrs
inc
add
test
mov
testb
add
stos
push
aad
pop
adc
add
mov
and
add
clc
sbb
icebp
xchg
cs
inc
add
push
mov
add
add
add
and
cmp
jle
adc
clc
adc
add
add
add
add
int3
rcrb
sar
xchg
add
add
clc
cwtl
mov
clc
ds
je
add
in
ljmp
cmp
mov
fdivs
add
aad
clc
outsl
lea
mov
inc
clc
push
add
mov
xor
add
sub
fdivl
cli
lods
popl
hlt
cmpsl
clc
rep
es
xlat
aam
clc
adc
add
mov
clc
xchg
xchg
fucom
clc
jl
jbe
test
adc
icebp
xor
mov
data16
jno
add
jo
add
clc
xchg
loop
xabort
clc
jne
loope
lret
mov
add
leave
pop
mov
clc
push
stos
dec
inc
add
mov
sbb
ss
sub
push
clc
pop
hlt
ret
clc
mov
int3
iret
xchg
jnp
add
inc
clc
pusha
add
es
lahf
jmp
dec
in
add
add
add
data16
cmpsb
clc
cmpsl
clc
sbb
pop
mov
test
out
push
or
pop
mov
and
add
add
inc
clc
cmp
lret
add
in
add
add
add
jnp
add
lret
add
mov
dec
sbb
cmp
je
and
add
inc
clc
adc
rorl
mov
jb
add
clc
ficoml
fcmovne
pop
pop
sbb
add
push
divl
add
cmp
add
je
mov
or
push
test
test
jbe
enter
or
clc
adc
outsb
scas
mov
jp
pop
mov
dec
mov
iret
outsl
pop
clc
jp
aaa
lods
or
clc
pop
ss
inc
add
push
dec
sarb
add
mov
mov
pop
je
cmp
lods
dec
mov
mov
dec
and
add
and
add
pcmpeqd
mov
adc
add
cmp
clc
xor
add
add
mov
mov
cmc
cmp
idivl
or
clc
or
bound
add
clc
jl
lret
xbegin
mov
add
clc
mov
std
imul
hlt
push
xor
mov
xor
mov
push
mov
sub
add
adc
add
mov
clc
mov
in
shl
clc
push
sbb
clc
std
dec
fnstcw
gs
adc
add
pop
mov
in
idivl
or
pushf
out
mov
push
cmp
prefetch
or
mov
adc
clc
push
sub
clc
jbe
jge
clc
xor
add
in
pop
clc
mov
call
pop
clc
hlt
cmp
add
negb
insl
inc
add
xchg
mov
clc
int3
lret
hlt
test
push
add
out
lahf
ss
xchg
or
add
push
inc
add
xchg
in
inc
clc
pop
std
fstpl
cmp
clc
hlt
dec
mov
clc
in
aad
mov
add
and
add
add
call
add
push
add
push
add
or
or
clc
into
mov
xor
add
jne
and
add
pop
cmp
clc
pop
push
loop
mov
clc
mov
pop
clc
pop
mov
add
scas
cmp
sar
sbb
cmp
lock
clc
xchg
adc
out
adc
add
clc
lret
jne
hlt
fwait
arpl
add
add
sahf
lret
inc
add
xchg
mov
or
add
daa
clc
push
cld
ss
add
hlt
in
or
cmp
clc
inc
clc
sub
insb
sub
add
jmp
clc
fsubr
sbb
js
or
clc
aam
fimull
sub
lahf
xchg
stos
xchg
sbb
clc
dec
clc
popa
add
in
fs
push
xor
add
add
pop
in
sbb
and
add
pushf
and
add
adc
add
add
ficoms
adc
push
add
fs
mov
clc
pop
clc
adc
and
add
cmp
add
sbb
scas
enter
in
jno
add
clc
pusha
add
mov
clc
repnz
add
insb
pop
clc
and
add
clc
sbb
clc
jno
add
mov
clc
push
ficoml
cmp
hlt
push
add
adc
add
ret
int3
or
clc
shr
sub
add
clc
and
add
clc
cmp
jge
lret
add
inc
add
add
add
aas
cld
ret
clc
jmp
add
adc
add
test
setge
add
push
fstl
cmp
clc
dec
pop
sub
fisttpl
add
in
dec
aam
mov
cmp
clc
rcrl
xchg
xchg
inc
clc
cmp
adc
add
cmpsl
clc
fs
mov
std
out
add
add
mov
xchg
add
add
adc
add
mov
add
cmp
clc
add
add
mov
fcompl
mov
clc
mov
lcall
adc
add
insb
xlat
push
fstpt
ljmp
clc
movsl
clc
outsb
add
xlat
push
add
sbb
scas
pushf
sbb
std
test
imul
dec
clc
cmp
mov
push
stos
push
or
inc
clc
test
mov
clc
mov
add
pop
stos
cmp
add
fadds
mov
cmp
push
mov
pop
clc
das
insl
jp
incb
mov
clc
negl
cmp
ljmp
cmp
out
adc
add
bound
add
clc
sti
dec
cwtl
pop
cmp
ret
pop
gs
mov
push
clc
je
clc
daa
clc
pop
pop
lods
push
add
ljmp
jl
lock
sar
bound
add
push
lods
mov
cli
inc
clc
sahf
outsb
pop
scas
and
add
clc
pop
push
insb
cli
adc
add
lret
cmp
add
add
or
jno
add
ret
clc
jl
add
int3
sar
xabort
clc
sti
popf
adc
and
je
jo
add
xbegin
sarb
in
stc
sbb
sub
and
add
jno
add
adc
add
imul
and
jl
clc
repz
xor
add
and
add
pop
xbegin
idivb
call
frstor
add
and
add
mov
mov
clc
mov
add
dec
add
add
push
add
sar
add
add
add
clc
sar
cmp
idiv
insb
ljmp
add
test
cmp
addr16
dec
sbb
repnz
ds
cmp
clc
push
jae
add
rcr
pop
mov
pop
clc
inc
clc
cmpsb
clc
jmp
add
add
inc
add
jno
add
mov
adc
add
add
push
and
add
dec
jmp
sub
sub
sub
dec
mov
clc
sbb
sub
add
cmp
mov
out
xor
add
shlb
add
push
clc
roll
clc
add
add
dec
mov
mov
add
lahf
stc
imul
sbb
sub
cli
mov
add
clc
pop
clc
mov
insb
daa
clc
iret
xlat
and
add
clc
std
ja
sbb
cmp
cmpsb
clc
inc
add
add
add
clc
mov
clc
leave
xor
add
pop
out
push
jae
add
add
jbe
popa
add
and
hlt
mov
out
stos
cmc
push
cmp
clc
mov
clc
int3
cltd
aad
ffreep
clc
xor
add
or
stos
cmpsb
clc
out
mov
clc
adc
add
test
pop
xor
cmc
mov
xbegin
popa
add
dec
pop
mov
add
bound
add
add
inc
clc
sbb
mov
inc
clc
or
cmp
add
add
or
xor
add
in
cld
and
add
test
clc
ds
sub
add
dec
sub
xor
add
xchg
enter
add
cs
inc
clc
inc
add
imul
add
ret
clc
repnz
adc
add
add
ds
ficompl
in
inc
clc
movsb
clc
xchg
scas
dec
mov
push
add
inc
add
inc
clc
jecxz
fwait
inc
clc
aam
clc
cmp
add
movsb
clc
push
clc
arpl
add
stc
pop
pop
cltd
or
jno
add
xchg
push
add
int
mov
cmp
jecxz
gs
inc
clc
fs
mov
mov
add
adc
add
xchg
lea
mov
push
push
fidivl
cmp
clc
adc
add
es
insb
push
adc
add
fdivp
xlat
push
push
sarl
clc
pop
arpl
add
add
inc
clc
imul
lock
mov
clc
fstl
loope
mulb
add
clc
in
lods
popa
add
call
sahf
push
add
insb
mov
pop
mov
add
ror
gs
sti
and
cmp
clc
sbb
mov
or
mov
divb
lahf
cwtl
adc
sti
sub
pop
fmull
jp
dec
dec
push
filds
add
add
jns
lahf
jae
add
cs
clc
mov
ret
clc
mov
lret
cmp
repz
add
add
add
mov
clc
aam
mov
lods
fcoms
scas
lret
xor
mov
lea
clc
idivb
add
in
push
cmc
js
inc
clc
popa
add
xchg
add
add
sti
dec
outsl
aas
in
cmp
add
add
add
test
mov
icebp
inc
clc
ja
frstor
add
push
insb
mov
cmp
or
push
repz
clc
imul
popf
mov
cmp
clc
xchg
sub
vmovups
add
pop
jne
ss
hlt
call
mov
add
cmp
and
add
and
add
inc
add
js
add
jmp
add
in
pop
js
push
pusha
add
xor
xlat
dec
ljmp
mov
mov
xchg
pop
inc
clc
test
frstor
mov
add
dec
inc
add
lea
loopne
or
clc
mov
notl
add
ds
cli
loope
adc
add
pop
xchg
add
add
sbb
repz
push
add
clc
push
adc
add
clc
notl
mov
clc
sahf
notb
add
cmp
pushf
int3
or
clc
mov
add
sar
inc
add
insl
sarl
imul
xchg
cmpsb
clc
vsqrtps
add
lea
add
out
mov
notl
clc
test
inc
clc
mov
mov
add
mov
xchg
push
add
push
ljmp
add
cmp
add
iret
fxch
or
push
add
mov
repnz
test
adc
add
fstps
add
outsl
pop
clc
and
add
push
test
outsb
into
notb
mov
pop
clc
jl
leave
fldcw
iret
in
adc
add
add
mov
fisttpl
add
repnz
clc
popa
add
inc
clc
mov
clc
xchg
pop
clc
mov
pusha
add
dec
sbb
xor
sub
add
xabort
clc
and
xor
push
add
fwait
add
loope
push
mov
pop
sbb
clc
jnp
add
lret
mov
ja
mov
push
add
jle
mov
fists
xchg
pop
mov
jge
sar
xchg
push
loopne
cmp
fs
mov
jmp
clc
pushf
test
imul
jb
add
adc
dec
mov
add
es
lods
punpckhdq
insb
cmp
add
loop
mov
xor
clc
sub
outsb
ja
clc
inc
add
arpl
add
clc
and
add
add
mov
add
cmp
xchg
xchg
push
clc
in
arpl
add
or
popa
add
mov
add
clc
out
pop
clc
jge
pushl
xor
sbb
cmpsb
clc
pop
aad
insb
pusha
add
cld
xchg
movsl
clc
icebp
bound
add
add
add
add
push
pop
sbb
xchg
call
add
xor
inc
add
jo
add
mov
mov
clc
inc
clc
movsb
clc
pop
js
xor
add
clc
xor
add
clc
cmp
add
mov
shll
add
cmp
shrb
int3
sti
testb
clc
popf
mov
push
jp
mov
imul
clc
jge
add
add
lods
sub
pop
pop
mov
sub
and
xor
add
aad
sbb
mov
outsb
and
add
adc
add
clc
nop
xchg
bound
add
clc
enter
icebp
jne
add
adc
add
clc
cmc
pop
stc
xabort
sbb
cmp
imul
clc
and
inc
clc
cmp
add
jmp
es
stos
test
push
add
insb
imul
push
add
xchg
pop
out
adc
add
add
push
arpl
add
test
mov
into
out
dec
js
clc
xchg
mov
lea
call
add
bswap
inc
add
jnp
clc
nop
mov
movsb
clc
xor
add
icebp
inc
clc
xor
add
push
xabort
cmpsb
clc
jnp
jg
clc
stos
ss
ljmp
in
xchg
jbe
clc
loopne
and
add
add
clc
lcall
stos
jne
imul
add
mov
mov
mov
pop
clc
and
or
aas
pop
pop
stos
inc
add
pop
lahf
clc
pop
pop
pop
jge
xbegin
add
push
clc
ljmp
loopne
add
add
clc
divb
add
dec
aaa
xchg
imul
pop
test
xchg
jne
nop
cmp
xchg
mov
add
sbb
inc
clc
sti
lcall
add
ja
clc
cwtl
push
inc
clc
pop
push
add
adc
add
ret
clc
xor
add
clc
xchg
psrlw
mov
and
aas
movsl
clc
mov
cmp
mov
add
jmp
clc
push
xabort
lahf
cmp
pop
je
mov
mov
sbb
clc
js
add
pop
int3
sub
add
add
add
clc
popa
add
cmpsb
clc
adc
add
js
xor
add
and
add
xchg
lcall
mov
add
push
clc
push
in
ss
out
nop
cmpsl
clc
mov
add
add
add
cmpsl
clc
hlt
cmp
add
add
faddl
add
nop
cmp
clc
dec
mov
cmp
mov
xchg
xchg
or
clc
xchg
jecxz
mov
test
rcrl
add
xchg
pop
clc
jp
fisubl
int
or
sbb
add
clc
pop
outsl
adc
add
add
clc
stos
clc
roll
add
push
add
mov
mov
dec
clc
loop
aad
jecxz
mov
nop
idivb
int
clc
clc
aad
inc
add
leave
vxorps
add
arpl
add
dec
inc
clc
cmp
cli
and
add
add
inc
add
mov
sbb
clc
jmp
mov
xor
add
clc
add
sbb
inc
add
iret
cltd
cmp
and
add
mov
repz
leave
clc
jl
jne
add
adc
or
clc
js
sbb
sub
add
fmull
xchg
cmp
dec
dec
cs
push
mov
jl
clc
cmp
add
cmpsb
clc
lcall
and
add
ret
clc
cli
scas
inc
clc
or
xabort
add
sbb
mov
clc
mov
clc
xabort
add
mov
clc
dec
adc
add
xbegin
je
dec
dec
sub
sub
add
clc
mov
lock
clc
xchg
test
ss
cmpsl
clc
sbb
repnz
mov
clc
push
mov
sub
jl
jmp
add
stos
xor
add
jne
mov
jo
add
xchg
mov
int
inc
add
lock
inc
clc
stos
scas
loope
test
call
add
add
scas
jge
imul
add
adc
add
scas
push
add
and
or
aam
mov
test
gs
push
inc
add
pop
jo
add
int3
insl
mov
clc
mov
out
jecxz
jno
add
cmp
add
add
add
mov
aam
cs
and
add
test
add
test
clc
stos
mov
mov
das
int3
and
add
pusha
add
repnz
mov
mov
cs
clc
jge
test
push
add
push
ret
clc
push
insb
or
add
clc
sbb
add
adc
add
sarl
add
push
adc
add
push
insb
cmp
clc
fidivrl
insl
int
add
xchg
dec
cld
popa
add
mov
add
push
mov
clc
out
cmp
clc
jge
rcrl
rclb
xchg
sar
and
inc
clc
test
push
clc
push
add
mov
out
decl
repz
pop
xor
add
clc
sub
cmp
add
ss
jb
add
sbb
clc
pop
inc
add
outsl
ds
clc
mov
clc
or
clc
push
in
sarb
aad
cmp
add
insl
push
or
clc
cli
in
adc
add
clc
sar
popf
push
add
jbe
mov
clc
out
xchg
cmp
add
and
mov
xor
add
push
in
pop
fs
imul
pop
sub
in
js
push
sahf
jo
add
sub
add
push
add
cmp
add
js
out
inc
add
arpl
add
add
lea
add
xor
ja
and
add
daa
clc
push
add
in
imul
add
jne
inc
clc
sub
clc
and
xchg
ja
call
stc
push
xchg
imul
mov
clc
and
add
leave
loopne
loop
pop
inc
clc
xorps
add
cmp
sbb
sub
ja
xor
je
adc
add
mov
clc
and
add
iret
jne
in
xlat
mov
clc
pop
mov
xchg
imull
jle
clc
xor
add
add
jmp
add
add
sahf
and
add
push
jne
jle
pop
pushl
add
repnz
ss
outsl
vcvtdq2ps
jno
add
aas
push
je
vmovups
add
loopne
ja
cmpsb
clc
xchg
filds
mov
add
mov
shlb
add
add
jnp
fs
jo
add
jmp
ss
add
add
outsl
mov
addr16
sbb
add
into
jo
add
sarl
mov
lods
enter
pop
shlb
mov
out
shr
cli
pop
or
cmpsl
clc
pop
test
adc
xchg
ja
clc
aam
clc
sarl
hlt
add
add
loopne
add
add
pop
jnp
cmc
sub
std
sar
xor
pop
sarl
or
add
pushf
and
add
add
pop
clc
xchg
jecxz
xor
add
and
add
add
cwtl
mov
xor
xor
clc
int
inc
clc
in
pop
je
popf
xor
add
fcmovnb
clc
xchg
push
add
jae
add
cmpsb
clc
fdivrl
mulb
pusha
add
adc
add
sti
mov
clc
and
add
clc
xchg
clc
rcl
repnz
add
ficoms
add
mov
xchg
out
cli
mov
or
add
or
int3
add
shll
addr16
dec
hlt
pop
or
clc
jnp
je
cli
call
clc
mov
clc
outsb
mov
sbb
addr16
push
add
jns
clc
push
jge
clc
push
add
mov
pop
fisubrs
pushf
push
add
call
loop
sub
fists
clc
imul
mov
repz
ljmp
rcrl
sbb
into
jb
add
clc
xor
popa
add
sahf
mov
sbb
clc
cmc
or
std
fcoms
jecxz
push
pusha
add
out
out
push
pop
mov
imul
fdivr
scas
mov
pop
sbb
clc
jecxz
jbe
xbegin
into
xchg
adc
add
mov
sbb
add
fdivp
mov
push
xor
mov
test
mov
clc
mov
jns
push
mov
add
fnsave
add
inc
clc
aam
clc
cmp
mov
sti
xchg
xor
mov
pop
clc
pop
sbb
push
cwtl
out
out
in
pop
cli
inc
clc
jl
cwtl
adc
add
jmp
imul
push
jp
adc
push
push
add
sar
xchg
scas
cmp
rcrl
clc
inc
clc
imul
inc
clc
cmp
clc
sub
cli
inc
add
imul
imulb
fwait
cmpsb
clc
repz
clc
enter
arpl
add
enter
scas
xabort
pushf
test
sti
adc
stc
or
in
lods
leave
addr16
das
xor
clc
mov
clc
inc
clc
mov
cwtl
icebp
jecxz
leave
and
fwait
mov
mov
sahf
fists
mov
add
xor
add
clc
cld
sub
clc
out
aam
clc
add
add
add
insl
sbb
xor
fst
cmp
clc
or
inc
add
mov
xor
sub
cmp
add
clc
jg
test
lods
mov
xchg
add
add
stos
sub
sub
inc
clc
mov
cmp
sub
add
stc
dec
int
xchg
inc
add
enter
jle
repnz
lret
add
in
jo
add
add
cltd
std
clc
inc
clc
sar
add
mov
dec
aas
enter
out
dec
mov
add
add
push
bound
add
xchg
push
into
and
add
ljmp
cli
xchg
cmp
scas
sbb
clc
add
add
nop
in
fstl
test
clc
movsl
clc
xor
add
mov
add
out
jg
repz
stos
mov
add
push
lahf
sahf
sbb
or
dec
jmp
mov
xor
add
mov
adc
add
cmpsl
clc
movsl
clc
dec
out
enter
mov
sub
mov
cs
sbb
cmp
pop
insl
or
jge
clc
pop
push
xlat
cmp
clc
sbb
sbb
pushf
lret
clc
test
cmp
clc
imul
cmp
sbb
xor
clc
sbb
add
xchg
clc
dec
cmp
cmp
test
mov
adc
add
xchg
in
mov
mov
add
add
clc
inc
clc
in
pop
faddl
clc
dec
sar
sarb
clc
daa
clc
ret
mov
in
push
mov
clc
shrl
rclb
clc
lock
push
add
mov
add
sbb
add
xbegin
xchg
icebp
inc
clc
imul
or
clc
inc
clc
mov
clc
pop
roll
add
sub
loope
das
daa
clc
gs
inc
clc
out
and
inc
add
bound
add
out
xlat
in
fimuls
fdiv
add
cmp
add
xchg
inc
clc
pop
adc
add
lcall
clc
push
add
push
add
sub
and
add
clc
lret
hlt
xabort
adc
add
fwait
inc
clc
pop
lods
dec
shrb
push
xbegin
add
jle
push
add
dec
movsb
clc
insb
and
push
pop
xor
add
out
dec
cmp
jmp
cs
dec
jmp
pusha
add
leave
fwait
cmp
sub
add
mov
add
or
clc
dec
sub
add
lods
adc
add
aaa
xor
add
sar
clc
xor
add
add
push
cmp
inc
clc
shrl
fs
out
xchg
sbb
xchg
mov
add
test
adc
add
inc
add
ljmp
lret
xchg
mov
push
clc
mov
sbb
add
ljmp
loop
fdivr
cmp
clc
cmp
add
xchg
cmp
clc
sbb
sar
ja
add
cmp
cmp
test
sub
shll
sbb
inc
add
xchg
gs
jmp
daa
clc
jg
fistpll
jmp
clc
outsb
push
outsl
cmp
mov
popf
jb
add
clc
pop
xor
add
cmp
push
imul
ficoml
inc
add
cmp
add
pop
out
sar
xchg
inc
add
popf
push
add
std
gs
fstpt
rclb
add
cmp
clc
fidivrl
pop
loope
fisttpl
adc
add
mov
movsb
clc
mov
xchg
jle
clc
add
add
add
mov
pop
rorb
mov
jne
clc
mov
jne
sarl
clc
sub
mov
jae
add
clc
das
mov
sub
clc
pop
data16
inc
add
pmuludq
pop
inc
add
xchg
bound
add
add
clc
mov
dec
cwtl
mov
cmp
test
or
add
mov
faddp
clc
xchg
pop
adc
add
clc
pop
cmpsb
clc
inc
clc
std
jp
int3
inc
clc
popf
aam
cmp
mov
js
clc
cmp
test
sbb
pop
pop
aam
jp
xor
add
clc
jg
arpl
add
test
dec
xchg
in
jns
clc
sub
clc
negl
jnp
popf
cmp
test
mov
clc
push
add
mov
repz
flds
add
fs
xchg
sbb
popa
add
repz
add
add
icebp
data16
ret
fwait
sub
mov
hlt
xor
add
add
inc
add
movsb
clc
cmp
dec
push
pop
xchg
fcoml
int
add
or
add
add
mov
clc
pop
clc
lods
jmp
add
pushf
jb
add
xchg
inc
clc
lods
mov
push
jno
add
xchg
stos
sbb
add
out
adc
add
push
mov
clc
iret
mov
pop
jg
add
ret
xchg
mov
jge
xchg
mov
popf
pop
imul
out
sub
sub
adc
add
data16
inc
clc
stos
dec
pop
aam
clc
ds
adc
add
jmp
add
add
shll
add
jae
add
int3
out
sub
pop
stos
arpl
add
jb
add
clc
testb
add
xor
mov
clc
inc
clc
loopne
loop
sbb
xchg
jbe
movsb
clc
imul
sub
fs
inc
clc
bound
add
int
clc
mov
mov
clc
mov
cld
and
add
lret
fadd
clc
fists
fwait
movsb
clc
cmp
mov
outsb
inc
clc
int3
inc
add
ja
pop
xchg
push
sar
clc
repnz
add
aas
movzwl
cmp
cmp
insl
pop
movsb
clc
mov
push
jecxz
mov
call
jae
add
loope
inc
clc
call
add
rcrl
push
gs
dec
mov
add
xor
imul
or
and
add
pop
mov
clc
out
jp
insl
mov
lcall
add
ja
inc
clc
std
lock
bound
add
add
adc
add
clc
sar
adc
clc
dec
imul
stc
mov
cmp
scas
push
mov
pop
inc
clc
pop
mov
pusha
add
cli
xor
test
mov
bound
add
clc
xbegin
clc
inc
add
add
add
pusha
add
dec
jns
clc
rcll
out
xchg
daa
clc
mov
jl
push
pushf
lret
int
loopne
pop
clc
pop
addr16
std
mov
xor
add
add
aam
sbb
clc
jecxz
hlt
add
add
sbb
fistpl
push
add
je
clc
dec
jns
imul
adc
add
sbb
lret
iret
sbb
fs
cltd
cld
divl
jae
add
ja
sub
scas
mov
dec
ret
clc
ja
clc
loope
aas
sar
mov
clc
add
add
clc
push
sbb
add
adc
add
and
add
pop
popf
jnp
clc
pop
aad
sbb
add
push
add
fcoms
xchg
pop
out
mov
sar
jae
add
lret
mov
cmpsb
clc
out
mov
iret
in
scas
inc
add
test
push
inc
clc
icebp
pop
out
inc
clc
add
mov
add
mov
jle
add
xabort
clc
scas
inc
add
pushf
cmc
cmp
sbb
add
clc
sbb
scas
push
mov
add
cmp
pop
aaa
setge
sar
clc
insl
mov
stos
push
push
add
sar
ret
clc
and
add
clc
xor
clc
pop
bound
add
clc
jp
add
into
out
movsb
clc
sar
loop
hlt
imul
fscale
push
rolb
dec
adc
stos
cmp
add
xchg
sub
inc
clc
dec
xor
add
dec
out
or
clc
into
imul
clc
cs
inc
add
test
js
clc
addr16
sbb
clc
das
scas
mov
dec
aaa
and
out
or
sub
adc
add
add
imulb
fisttps
jbe
addr16
sub
add
js
clc
push
add
cmp
cmp
dec
jb
add
clc
pop
clc
int3
xbegin
or
fsubl
clc
adc
add
push
mov
xchg
mov
and
add
mov
xchg
or
clc
fdiv
mov
jne
pop
cld
mov
push
sar
cmp
add
push
add
aas
std
xchg
out
ret
add
jmp
out
dec
xchg
rcll
clc
arpl
add
gs
and
add
xchg
fisttps
nop
sar
clc
push
jl
mov
xabort
bound
add
clc
push
add
testb
into
lods
mov
bound
add
clc
sub
add
mov
push
fadds
add
xchg
in
daa
clc
repz
add
add
fwait
pop
sub
add
ds
add
mov
ljmp
mov
fsub
clc
and
add
add
xor
jge
fiadds
clc
repz
add
icebp
xchg
sbb
add
scas
lahf
xchg
sar
clc
push
jne
dec
dec
insb
jbe
clc
add
mov
add
stos
das
into
mov
fldenv
add
outsb
aad
fistl
add
mov
je
add
mov
mov
or
add
adc
add
add
outsb
dec
outsl
xor
add
cmp
dec
xchg
gs
lret
push
push
add
adc
add
stc
jno
add
clc
cmc
pop
xchg
mov
adc
add
aam
xchg
push
mov
cmc
adc
add
and
shl
movsl
clc
shl
clc
sbb
add
or
clc
test
clc
jbe
clc
imul
inc
add
push
push
leave
adc
add
cltd
sub
pop
out
ss
jb
add
es
call
jmp
add
jbe
push
push
dec
enter
icebp
ss
jl
adc
add
clc
aaa
sahf
je
mov
add
mov
test
xor
add
aas
cld
outsb
popa
add
xor
mov
add
rclb
clc
ja
add
in
stos
int
adc
add
adc
add
clc
add
add
add
sub
data16
cmp
mov
out
pop
mov
clc
pop
xlat
sbb
clc
push
and
add
clc
je
cltd
pop
pop
aad
mov
clc
in
sti
in
inc
clc
enter
lods
xor
pop
jl
lret
add
cmp
outsl
sbb
clc
outsb
mov
jmp
shrb
xor
imul
push
clc
out
cltd
jns
add
jo
add
iret
sub
fs
xchg
jno
add
cmpsl
clc
out
dec
js
mov
sbb
xor
add
movsl
clc
xchg
out
push
add
movsl
clc
cmp
lea
bound
add
add
clc
imul
jbe
or
add
clc
mov
icebp
jge
mov
clc
test
clc
clc
je
clc
mov
sbb
dec
clc
enter
pop
mov
clc
scas
sbb
clc
add
push
cmp
mov
xor
insl
nop
cmpsl
clc
or
out
and
add
jae
add
dec
fcmovu
insb
push
cmc
leave
sbb
xlat
mov
ljmp
pushl
aaa
aaa
mov
add
repnz
sub
dec
fsubs
add
sar
clc
pop
insl
cmpsl
clc
add
pop
aam
sbb
js
fwait
xchg
mov
hlt
push
push
add
adc
add
push
or
add
mov
jno
add
push
out
lock
fnstenv
add
loopne
jecxz
or
ljmp
jo
add
loope
and
add
mov
xchg
inc
add
sub
add
fsubl
cs
add
jg
add
jle
clc
lods
sub
std
adc
add
cmpsb
clc
popf
cmp
add
cmp
add
stos
lea
jmp
jle
add
mov
icebp
mov
aad
movsl
clc
adc
add
enter
lret
dec
xbegin
outsl
jne
add
cli
mov
add
inc
clc
rolb
clc
movsb
clc
mov
push
add
call
mov
push
add
xchg
push
jbe
mov
add
int
leave
xchg
xor
sbb
add
loop
push
add
cmc
cmp
push
clc
cmp
sub
add
nop
push
add
imul
clc
pop
sub
clc
mov
and
add
add
xor
add
or
mov
inc
clc
mov
add
je
add
add
sahf
pop
and
add
jg
and
cmp
clc
fs
sbb
lea
inc
clc
loop
jo
add
add
jb
add
sub
clc
jnp
cli
shrb
loop
inc
clc
filds
add
push
add
pop
shll
add
clc
mov
daa
clc
mov
add
sub
inc
add
insb
and
dec
pop
in
xlat
mov
add
inc
add
push
dec
dec
outsl
push
add
lahf
xor
xchg
push
mov
clc
lock
jne
clc
add
mov
xor
add
aam
mov
mov
std
fiaddl
add
jb
add
sub
loop
sar
nop
in
jg
mov
lock
imul
pop
dec
and
add
add
clc
dec
sub
add
and
out
push
loope
mov
mov
xabort
icebp
dec
sti
xchg
jae
add
mov
sub
add
cmp
rcl
add
xchg
or
push
pop
mov
cmp
int3
mov
clc
es
xlat
out
pop
rcrb
adc
sahf
enter
nop
jnp
clc
push
shrb
and
xor
cwtl
mov
add
add
clc
movsl
clc
aas
or
mov
mov
adc
add
dec
or
add
sbb
jl
push
dec
inc
add
adc
add
lret
push
add
jns
in
popa
add
pop
pop
pop
mov
cmp
pop
mov
jae
add
push
add
inc
clc
sbb
lret
adc
add
leave
pop
pop
xchg
fs
xbegin
es
nop
push
add
inc
add
jmp
add
sbb
clc
xabort
pop
xlat
add
add
push
pop
add
add
cmpsl
clc
jae
add
add
cmp
add
inc
clc
cwtl
into
jmp
in
sar
clc
repz
sub
add
add
clc
cmp
sbb
add
adc
add
in
int3
shll
add
push
add
and
add
pop
mov
add
bsf
lcall
push
clc
cmp
add
es
leave
ja
sar
clc
hlt
and
sar
add
sarl
clc
jae
add
add
add
jo
add
push
add
fwait
dec
test
sar
cmc
xor
add
mov
hlt
jae
add
imul
clc
loope
inc
clc
cld
adc
xchg
clc
loope
mov
add
clc
imul
daa
clc
sbb
fiaddl
sahf
xabort
add
mov
sbb
bound
add
add
cmp
clc
push
add
mov
lret
dec
addr16
sbb
roll
add
sar
add
or
add
add
sub
lods
sahf
push
cld
sbb
pop
sbb
add
stos
inc
clc
cmp
test
loope
cmovns
arpl
add
clc
push
xchg
push
int
clc
push
add
push
add
push
add
loop
push
decl
dec
sbb
clc
xchg
mov
std
adc
add
clc
mov
add
test
adc
add
in
mov
push
add
pop
gs
movsl
clc
jp
imul
aaa
xchg
push
add
out
movsb
clc
sbb
xor
add
jbe
xor
mov
into
xor
add
mov
stc
mov
mov
aas
dec
stos
sub
push
add
push
add
out
ss
clc
sarb
fisubrl
dec
inc
add
ja
dec
dec
cmpsl
clc
adc
cmp
clc
mulb
jo
add
clc
fwait
mov
sar
clc
mov
mov
xchg
bound
add
mov
jo
add
add
and
add
add
add
add
clc
sbb
push
push
pop
pusha
add
inc
add
inc
add
mov
jge
clc
out
lock
add
add
das
ds
xlat
push
xor
add
add
out
mov
clc
lret
pusha
add
aad
int3
hlt
rcrb
dec
add
mov
and
add
mov
add
scas
sbb
add
or
mov
add
add
iret
mov
cmp
clc
push
xchg
jp
add
adc
add
add
mov
rolb
add
cld
xchg
mov
clc
and
add
add
clc
mov
cmp
fs
out
mov
and
add
clc
lcall
add
mov
ja
aam
clc
insb
add
add
add
xlat
cmp
test
test
ror
adc
add
add
push
xchg
je
mov
add
cltd
cmp
adc
add
in
jp
add
mov
clc
mov
add
lods
xbegin
enter
cmp
adc
add
cmp
mov
test
cmpsb
clc
jnp
loope
imul
rcr
lahf
ret
lret
popl
add
sbb
cmc
xor
add
add
cltd
sbb
stc
sti
add
add
clc
jp
add
push
xor
mov
mov
add
cld
fs
insl
cmc
or
fidivl
add
pop
inc
clc
xchg
jne
mov
add
or
clc
js
aaa
dec
cmpsb
clc
popa
add
mov
add
add
add
add
add
in
pop
test
xlat
imul
test
xor
fwait
js
rorl
lret
lods
popa
add
mov
clc
xchg
in
aad
clc
hlt
jge
mov
cltd
jecxz
data16
xchg
flds
add
clc
adc
out
sbb
movsl
clc
lcall
cmp
push
xor
add
add
loopne
cmp
add
or
add
xor
add
add
push
add
in
push
add
mov
gs
or
xor
add
xbegin
loopne
jns
add
and
add
clc
cmpsb
clc
in
mov
clc
jecxz
pop
add
add
loope
mov
add
xchg
xlat
cld
out
fwait
repz
sub
clc
clc
popf
jns
mov
stc
cmpsb
clc
popf
lods
dec
cmp
add
cmp
clc
out
cwtl
mov
add
xor
add
clc
in
mov
and
add
fwait
test
xor
add
dec
inc
clc
insl
cld
mov
ljmp
clc
xor
push
sbb
add
rcl
and
add
arpl
add
add
clc
or
add
out
in
ss
xabort
icebp
mov
add
clc
jne
vmovaps
leave
sbb
flds
add
add
imul
shlb
push
clc
dec
add
es
insl
call
clc
rorl
clc
stos
inc
add
cmp
pop
xlat
test
xchg
jge
add
clc
or
aas
dec
movsl
clc
fwait
add
add
loopne
xor
add
add
push
scas
cmp
out
int3
leave
pop
clc
inc
clc
sub
jmp
cwtl
and
add
add
js
nop
or
xabort
stc
inc
clc
loope
pop
mov
inc
clc
lahf
jg
cmpsl
clc
mov
loop
pop
cltd
loope
imulb
xor
add
dec
ss
fistps
jp
mov
jge
cs
sahf
pmaddwd
inc
clc
push
clc
imul
clc
daa
clc
push
notb
jl
add
pop
jmp
clc
inc
clc
sar
clc
std
dec
mov
idiv
mov
clc
bound
add
stc
lods
dec
sbb
clc
mov
xchg
xor
add
je
clc
cmp
dec
icebp
es
pusha
add
mov
clc
pop
clc
pop
clc
mov
insl
lock
add
movsl
clc
adc
popa
add
outsb
out
add
movsl
clc
mov
add
lock
add
pop
cmp
add
xchg
mov
clc
repz
dec
sahf
sub
add
mov
clc
cmp
clc
inc
add
gs
iret
test
xchg
and
add
pusha
add
fnstenv
int3
das
rcrl
push
sahf
mov
enter
pop
loope
xor
pop
push
clc
pusha
add
sar
pop
repnz
xor
cmpsb
clc
pop
clc
lahf
fistpll
push
loop
scas
arpl
add
es
dec
push
lcall
bound
add
icebp
jl
clc
pop
xor
add
add
add
add
clc
fs
pop
sarb
add
clc
jg
mov
xchg
test
popa
add
repnz
add
and
add
add
add
mov
jle
lods
and
out
push
add
pop
mov
add
or
movsl
clc
mov
add
add
clc
jge
mov
test
xlat
add
add
jbe
xor
clc
outsl
ret
clc
lods
jp
cld
lret
dec
mov
test
add
add
xchg
adc
add
jns
stos
add
add
add
aas
push
insl
gs
sarl
push
gs
add
pop
vmulps
clc
cmpsb
clc
and
add
mov
or
loope
pop
or
xlat
test
inc
clc
lods
insb
cli
out
cmp
mov
mov
add
xchg
add
add
pmullw
xor
add
add
push
add
add
jo
add
add
xor
add
adc
aas
adc
add
pop
pop
and
add
add
cmp
clc
dec
mov
sbb
add
mov
add
and
add
jae
add
clc
shl
clc
add
add
and
add
add
xchg
pop
pop
xchg
repnz
add
add
add
call
xchg
xchg
jno
add
dec
push
out
cmp
clc
jnp
cmp
cmp
sbb
in
js
clc
es
jl
int
clc
das
xrelease
xchg
mov
xor
add
mov
mov
add
and
add
dec
stc
push
jg
leave
add
add
add
clc
ret
mov
add
clc
inc
clc
jnp
add
dec
lret
lret
mov
clc
lcall
fidivrl
pusha
add
fistps
xchg
ljmp
inc
add
icebp
data16
mov
add
ss
add
cmp
lahf
push
mov
pop
sub
add
pop
clc
and
add
dec
push
sub
push
and
jecxz
imul
pop
adc
add
dec
lea
push
test
xchg
in
or
push
clc
jae
add
clc
pop
outsl
in
fiadds
add
insl
fiadds
sub
push
pshufw
dec
addr16
jns
int
test
jecxz
repz
mov
inc
add
push
sbb
push
add
call
add
add
xbegin
cmp
out
sbb
leave
xchg
and
add
add
pop
ss
in
jb
add
adc
add
rcll
sub
add
add
jns
add
cmp
nop
jmp
add
scas
mov
add
or
dec
xabort
clc
sub
add
js
clc
and
add
xor
add
add
xor
add
insb
das
fdivp
sub
xadd
add
add
iret
js
enter
pop
mov
jb
add
jecxz
in
std
jo
add
clc
daa
clc
push
pop
stos
pushl
push
add
push
mov
clc
in
arpl
add
out
jnp
add
xor
add
clc
mulps
add
cmp
clc
mov
xchg
cs
inc
clc
in
ds
aas
data16
fld
clc
iret
mov
repnz
out
dec
xchg
mov
add
sbb
adc
add
test
jo
add
mov
add
cld
push
push
inc
add
cmp
cmpsl
clc
mov
fcmove
fwait
cmpsb
clc
pop
outsl
pop
sbb
popa
add
out
cmc
add
add
ret
clc
jge
ds
out
cltd
cltd
loop
repnz
clc
lock
imul
sub
add
pop
dec
fs
lret
mov
xchg
out
dec
es
ljmp
dec
cli
mov
fistl
add
aam
clc
and
mov
or
and
pop
jp
mov
add
add
mov
add
add
dec
ds
sbb
dec
hlt
loopne
mov
add
add
addr16
cld
fwait
out
fidivrs
jns
xor
add
add
hlt
pop
in
xor
add
xchg
xchg
gs
daa
clc
repnz
insl
mov
in
inc
clc
ret
clc
test
clc
cli
imul
lea
inc
clc
mov
mov
sub
clc
push
clc
xchg
adc
push
clc
iret
add
add
add
clc
in
daa
clc
inc
clc
rolb
clc
xor
add
add
xchg
xchg
or
jmp
js
test
clc
cli
stc
cmp
clc
pusha
add
pop
mov
adc
add
push
test
dec
ljmp
sub
clc
push
add
clc
mull
cmp
outsl
pop
clc
insb
sbb
add
out
lret
add
xor
add
clc
lret
adc
add
add
and
clc
or
clc
dec
idivb
int3
push
iret
cmp
iret
jns
out
or
dec
mov
mov
xbegin
rcll
add
sar
xchg
cmp
jns
add
dec
in
or
sbb
stos
mov
mov
clc
sbb
fadd
clc
push
pop
addr16
mov
outsb
test
mov
out
clc
mov
mov
add
imul
cmp
add
pop
jecxz
or
imul
dec
push
add
vphaddwd
xchg
cs
sbb
add
stos
je
iret
mov
or
push
sbb
mov
neg
adc
add
inc
clc
loope
dec
clc
imul
mov
clc
imul
and
pop
push
add
loope
add
adc
add
pop
clc
popa
add
negl
clc
and
or
adc
add
mov
add
and
add
pop
inc
add
test
cmc
pop
clc
repz
xabort
add
mov
inc
add
mov
int
packsswb
add
cmp
aam
clc
in
lods
pop
clc
cltd
inc
add
addr16
lret
jo
add
add
mov
outsb
sti
popf
mov
add
push
add
add
xchg
mov
add
repnz
nop
lahf
mov
clc
enter
sub
mov
out
cmp
imul
add
add
clc
inc
clc
inc
add
clc
hlt
insl
push
add
cmp
int3
mov
jp
clc
cmp
arpl
add
gs
js
clc
dec
iret
pop
test
cmp
movsl
clc
js
cmp
xabort
cmpsb
clc
lea
xchg
gs
nop
cs
push
xor
add
mov
aad
clc
pop
jae
add
or
add
mov
sar
mov
cmp
dec
gs
and
aad
add
add
add
jl
clc
clc
add
add
pop
sub
dec
pushf
cmp
clc
mov
mov
clc
mov
out
ret
fisttpl
scas
ss
mov
or
stos
sub
clc
cmpsb
clc
test
add
add
clc
rorl
clc
dec
pop
sbb
das
cmc
cmp
add
sub
mov
sub
aad
cmp
stos
stos
insb
sbb
add
or
xor
add
clc
fcomps
push
dec
xchg
sub
add
clc
ljmp
inc
add
jnp
clc
std
sar
fs
sahf
out
sub
sbb
mov
sbb
add
out
movsb
clc
ds
clc
imul
cmp
or
pushf
adc
data16
mov
jns
cmp
mov
push
pop
loop
daa
clc
xor
add
clc
mov
jo
add
or
clc
push
add
data16
inc
clc
mov
add
add
adc
add
add
mov
outsl
sahf
stos
mov
pusha
add
gs
cmp
shl
push
aad
icebp
movsl
clc
or
xor
add
lods
mov
cmp
fstpl
inc
add
jb
add
lcall
dec
std
aaa
pop
leave
clc
mov
or
ja
clc
aad
daa
clc
xor
add
sarl
lcall
inc
add
lods
add
add
fsubs
in
in
incl
add
lods
nop
lahf
mov
cmpsb
clc
jb
add
int
add
cmp
mov
add
add
push
add
push
adc
add
fs
loopne
jp
clc
dec
bound
add
mov
and
sar
add
add
jo
add
popf
pop
clc
or
add
inc
add
xchg
pop
clc
decl
int
add
add
jmp
mov
jg
clc
loope
or
adc
je
jnp
ret
clc
inc
add
sub
adc
add
scas
test
and
add
add
insl
stc
fmul
sub
or
and
add
test
clc
fidivl
sbb
sbb
clc
mov
repnz
dec
pop
out
xor
add
add
mov
clc
stc
cld
lcall
adc
imul
clc
daa
clc
in
push
xabort
mov
add
out
sbb
sahf
out
inc
add
adc
clc
cmp
jns
mov
add
outsb
aas
xor
add
add
pop
insl
push
add
lea
clc
mov
in
mov
add
pop
aas
add
clc
inc
add
cmp
mov
iret
xor
add
add
cmp
adc
add
sbb
clc
push
sbb
movsb
clc
cmpsl
clc
or
clc
loopne
clc
dec
iret
and
add
mov
aam
add
cmp
mov
sar
clc
add
add
sub
mov
ds
cmp
clts
clc
lea
add
sbb
clc
outsb
mov
mov
clc
lret
clc
pop
adc
clc
leave
mov
add
sbb
clc
push
imul
cmp
push
add
adc
add
aaa
mov
js
pop
mov
or
int3
add
add
and
add
ss
enter
xchg
aad
add
add
imul
jecxz
adc
clc
loopne
add
loop,pn
leave
xorps
sar
fcoml
xchg
lods
or
add
inc
clc
repnz
clc
pop
mov
sar
adc
add
insl
sar
mov
clc
jp
clc
jp
test
adc
add
clc
ficomps
add
mov
fsubs
add
or
test
adc
add
clc
mov
add
add
lahf
stos
xchg
into
mov
add
mov
rclb
add
push
add
arpl
add
or
add
sahf
pusha
add
lahf
dec
lods
xbegin
adc
jp
add
cmp
pop
sarl
clc
sub
mov
clc
fisubs
add
mov
or
cmp
add
cmp
adc
jbe
adc
add
add
add
aaa
cmp
push
roll
add
fwait
lret
sbb
ljmp
or
add
cld
call
clc
inc
add
xor
mov
fldl
aam
aad
in
push
cmp
sbb
add
lgs
clc
add
add
outsl
mov
mov
fmull
xor
add
pop
fnstcw
jo
add
or
scas
mov
clc
outsl
cmp
cmp
pop
sbb
lret
add
jle
clc
sub
fsubrl
xchg
mov
pop
push
mov
mov
cmp
cmpsl
clc
call
sar
repz
push
push
clc
xchg
cmpsl
clc
jno
add
mov
clc
fsubs
add
dec
and
add
mov
add
pushf
shlb
add
push
jae
add
add
add
clc
jge
movq
in
je
dec
loope
mov
inc
clc
clc
or
lahf
cmp
cld
pop
mov
out
adc
add
fs
xor
add
add
lret
mov
clc
inc
clc
mov
insb
sub
clc
push
cmp
out
repz
add
add
jnp
add
add
clc
add
mov
stos
jg
mov
lea
add
xchg
jo
add
clc
or
add
sub
mov
out
mov
ss
add
dec
enter
lret
jl
sbb
ficompl
push
pop
xor
xchg
mov
xor
add
add
clc
test
mov
push
add
pushf
mov
sub
push
add
inc
clc
mov
clc
test
or
add
outsb
cmc
pinsrw
add
dec
adc
add
out
hlt
push
movsb
clc
mov
arpl
add
clc
fsubrs
add
xabort
outsb
xchg
mov
xor
add
xor
or
mov
mov
clc
arpl
add
cmp
clc
in
jbe
mov
dec
jecxz
push
xchg
pop
sahf
pop
das
dec
rolb
clc
hlt
scas
xchg
fisttpl
add
dec
push
add
rcrl
add
cmpsl
clc
inc
add
mov
into
ja
add
add
scas
pop
mov
sbb
cmp
sbb
clc
mov
or
clc
mov
mov
jb
add
adc
outsb
test
ljmp
es
ja
clc
fisubrs
xchg
pop
mov
add
icebp
int
xor
add
push
cmp
add
cmp
pop
adc
add
mov
clc
insl
scas
xbegin
mov
ss
fdivs
fcoms
mov
add
mov
mov
shll
add
imul
add
aaa
shll
add
adc
add
add
sub
add
pusha
add
std
cld
ret
clc
pusha
add
clc
push
stc
es
xbegin
xor
add
popa
add
es
shr
dec
lahf
push
aaa
idivb
push
int
mov
add
cmpsl
clc
hlt
lods
lcall
mov
clc
or
jge
cli
jp
push
sar
outsb
cmp
add
push
out
cld
pop
pop
push
stos
jmp
data16
rcrl
add
xbegin
mov
imul
testb
add
in
pop
gs
and
add
adc
add
in
sar
clc
int3
sahf
cmp
in
fildll
add
add
add
or
sub
sbb
gs
xor
add
mov
dec
repnz
push
add
dec
adc
add
cli
es
and
add
enter
cmp
insb
fneni(8087
clc
pushf
shlb
ss
pop
ja
cmc
jb
add
cmp
add
clc
insb
push
cmp
sub
xor
add
jo
add
cmp
shlb
add
jns
test
cmpsb
clc
push
add
sub
into
loope
mov
add
push
pop
pop
xor
add
cmp
push
clc
cmp
add
pusha
add
loopne
cmp
clc
mov
insl
jbe
sub
clc
inc
add
fstp
mov
inc
add
lret
iret
jo
add
mov
add
cmp
in
mov
and
sbb
ljmp
popf
in
jl
fiadds
add
sar
pop
xor
clc
or
clc
mov
xor
add
clc
sahf
dec
jl
cmpsl
clc
pop
ret
clc
leave
pop
outsl
mov
mov
add
push
add
jbe
jecxz
pop
lods
addr16
js
jae
add
xabort
add
hlt
hlt
push
add
pop
pushf
popa
add
mov
add
mov
add
jle
add
sub
faddl
add
xor
add
imul
cmp
add
add
clc
cltd
scas
jne
cmp
add
add
clc
int
fwait
add
add
clc
scas
mov
mov
add
or
in
push
cs
test
cmp
clc
cld
in
int
clc
xor
add
push
clc
jp
add
mov
in
jnp
clc
pop
cli
nop
aam
add
mov
jmp
add
mov
clc
mov
pop
stos
push
xchg
bound
add
xchg
jp
push
clc
sti
stos
jp
add
and
add
add
in
mov
add
xchg
mov
clc
mov
lea
gs
mov
mov
jmp
add
cmp
mov
clc
fsubl
clc
jno
add
shrl
imul
clc
add
add
clc
int
clc
push
add
jne
fcomi
dec
out
and
add
add
sub
add
pusha
add
ficoms
add
jge
add
mov
add
xchg
mov
inc
add
cmp
jae
add
outsl
fnsave
jno
add
mov
cmp
clc
inc
clc
es
stos
xchg
mov
add
add
mov
add
pop
jp
clc
push
stos
fstps
add
into
adc
pop
clc
mov
ja
pop
xchg
fwait
mov
cmp
or
mov
lahf
movsl
clc
cmp
sar
pop
inc
clc
sbb
add
clc
mov
add
pusha
add
lods
jle
add
pushl
sub
add
mov
cld
mov
add
mov
add
mov
add
std
jbe
add
mov
sub
adc
ja
or
imul
add
xchg
dec
mov
add
test
enter
clc
daa
clc
popa
add
sub
fstpl
frstor
sbb
clc
cmp
clc
add
add
adc
add
add
add
add
outsb
mov
lock
rcrl
add
pop
pop
movsb
clc
pusha
add
push
psubq
and
shlb
add
out
cmc
and
add
adc
add
sub
push
gs
xchg
scas
pop
gs
cmp
jge
inc
add
dec
or
push
sub
inc
clc
es
pop
fimull
cmpsb
clc
out
sbb
ja
out
lret
pop
xabort
testb
add
shlb
vunpcklps
add
aas
jge
mov
add
mov
clc
push
xor
add
imulb
leave
movsb
clc
mov
sbb
int3
iret
cltd
mov
cli
xor
mov
cwtl
outsl
and
add
xchg
loope
das
test
out
push
add
jecxz
dec
lods
jge
push
add
inc
add
je
add
cltd
pop
push
add
repz
sub
and
add
sar
clc
push
add
adc
add
or
int3
insb
mov
sub
add
fs
pop
das
cmp
push
popf
sti
ja
xchg
btsl
and
add
cmp
mov
add
mov
add
pop
jno
add
add
jo
add
and
add
out
xchg
in
mov
pop
dec
sar
push
aad
cmp
add
add
add
add
add
lret
cmpsl
clc
mov
data16
jnp
xchg
xchg
daa
clc
mov
add
add
ffree
clc
xor
dec
es
es
or
add
cltd
sub
clc
cmp
xchg
movsb
clc
fnstcw
push
mov
clc
pushf
outsl
out
xchg
aam
fisttpll
cmp
clc
shlb
aam
cmp
adc
add
cmp
push
clc
and
jp
lret
pushf
inc
add
xchg
fnstsw
clc
insb
dec
cmp
jo
add
fucomip
sub
or
icebp
fdivs
push
add
jg
clc
sbb
or
add
enter
mov
mov
movsl
clc
xchg
jge
jle,pn
mov
clc
push
mov
clc
sar
jmp
pusha
add
cmp
adc
add
add
lret
std
and
fldenv
add
imull
outsb
hlt
xlat
sbb
mov
std
push
add
or
add
stc
in
push
dec
cmc
loop
test
clc
out
add
mov
lret
fdiv
lret
mov
cltd
std
jae
add
xchg
repnz
add
mov
stc
inc
add
testb
add
mov
incb
add
clc
dec
xor
add
clc
lods
or
das
clc
fnsave
pop
sbb
and
add
xchg
setp
clc
shrl
mov
clc
in
mov
clc
insl
gs
sub
mov
xor
add
and
addr16
mov
sarl
fbstp
add
in
cmp
clc
cmpsb
clc
mov
pop
clc
sub
xchg
pop
repz
pop
clc
cmp
jns
dec
aam
out
insl
sar
gs
vminps
clc
mov
mov
ret
clc
in
aaa
sub
cmp
jp
and
mov
cmp
add
lock
add
sbb
add
add
fnstcw
scas
xor
add
loope
popa
add
adc
add
hlt
jp
clc
sbb
jne
cmpsl
clc
lods
sbb
pop
add
add
add
add
xchg
loope
cmp
cmpsb
clc
js
mov
jmp
leave
xabort
ljmp
clc
mov
cmp
iret
jecxz
das
mov
clc
dec
popl
add
inc
clc
hlt
xlat
pusha
add
cmp
and
add
add
cmp
add
cmp
push
xor
fistl
clc
scas
sti
xor
add
add
and
add
add
dec
and
add
sbb
jne
and
insb
add
add
aas
jns
cld
mov
adc
add
add
clc
imul
lea
add
pop
sbb
leave
ja
movsb
clc
jge
add
cmp
add
lret
fistpll
or
and
mov
add
pop
clc
data16
pop
imul
inc
clc
nop
mov
jb
add
cld
sbb
inc
add
sbb
sub
push
mov
clc
clc
pop
adc
add
xchg
and
add
add
lock
stos
adc
add
outsl
add
add
clc
repnz
inc
add
mov
add
lods
js
clc
imul
add
and
add
mov
clc
nop
lahf
je
pop
stc
ss
clc
add
add
clc
clc
or
cmp
jne
clc
ss
clc
popf
icebp
sub
cmp
pushf
lock
sbb
call
mov
data16
ljmp
fadds
insb
pop
sub
clc
bound
add
jecxz
jno
add
int3
xor
add
jmp
add
mov
pop
and
add
add
je
add
or
imul
jno
add
adc
clc
sbb
clc
mov
add
xor
add
clc
jl,pt
clc
test
or
add
pop
imul
add
add
cmp
clc
inc
add
out
lods
rclb
scas
aam
xchg
push
test
pop
mov
clc
movsl
clc
ljmp
jnp
lcall
clc
cmp
jle
clc
pop
xchg
cs
mov
add
or
xor
add
add
adc
add
add
into
movsb
clc
jl
popf
and
add
fsubs
cmp
clc
and
add
clc
pop
ret
clc
mov
clc
clc
inc
clc
dec
xlat
xlat
cltd
adc
add
add
mov
mov
inc
clc
and
cli
or
das
scas
adc
add
scas
pop
mov
inc
add
xchg
scas
sub
cs
jl
clc
clc
cmp
xchg
lcall
add
dec
in
ficoml
hlt
cli
sbb
testb
js
dec
ds
xchg
mov
jns
scas
add
jp
inc
add
int
xchg
enter
lahf
std
dec
inc
add
xbegin
xchg
and
add
test
movsl
clc
mov
add
dec
jp
outsb
call
clc
add
add
inc
add
mov
inc
add
adc
add
adc
add
clc
adc
add
pop
jecxz
aad
add
push
push
test
add
cmpsb
clc
stos
stos
loopne
cwtl
cli
mov
add
mov
xor
add
lea
aam
or
add
fs
mov
and
add
add
inc
clc
arpl
add
xchg
int3
lahf
popf
cmc
push
clc
mov
sahf
flds
clc
pushf
pushf
repnz
add
clc
xchg
fildl
sub
clc
jecxz
data16
inc
add
push
clc
push
add
mov
push
or
add
clc
inc
add
and
mov
int
out
shll
add
fwait
aaa
inc
clc
xchg
in
lods
das
ret
clc
mov
add
inc
clc
pop
adc
add
bound
add
adc
add
push
pop
clc
fwait
loopne
push
add
fdivrl
jo
add
imul
add
shll
add
add
insl
xabort
push
xor
add
enter
test
div
cmp
rolb
xbegin
add
dec
loop
sar
add
jp
push
xbegin
fnop
ljmp
imul
xchg
push
pop
ljmp
push
xabort
in
gs
pop
dec
mov
mov
adc
add
pop
pop
push
add
scas
add
add
movsl
clc
sub
add
xor
add
or
clc
shll
xchg
cmp
fmull
add
sbb
mov
jbe
add
push
add
ja
pop
dec
push
jbe
clc
jp
add
mov
pop
mov
jl
sar
clc
push
out
add
add
push
add
inc
add
repnz
iret
ss
add
and
add
add
pop
cmpsl
clc
ret
clc
pop
mov
mov
loope
loope
xor
clc
lahf
push
add
pop
clc
leave
enter
jl
clc
nop
filds
pushf
add
add
add
add
xchg
das
add
test
dec
fbstp
mov
add
or
adc
add
cmp
clc
pop
or
mov
mov
add
out
cs
clc
pop
sbb
sahf
push
mov
sbb
cmp
ds
clc
jp
push
jle
bound
add
add
clc
jg
dec
sar
clc
mov
test
xchg
mov
test
and
sub
addr16
mov
nop
sub
add
clc
or
add
test
outsb
jnp
sbb
clc
mov
clc
mov
stc
jmp
cmp
clc
cmp
clc
sbb
out
iret
jno
add
sbb
clc
scas
enter
or
or
aaa
psubsw
add
out
cmp
clc
push
icebp
inc
clc
inc
add
xchg
sub
add
mov
add
xchg
sbb
or
cmp
sar
add
loop
fmulp
sub
out
mov
mov
fpatan
xchg
jecxz
je
sbb
mov
test
je
lock
ss
add
jns
add
push
mov
mov
sub
add
push
add
sahf
out
out
pop
and
add
add
add
push
add
push
test
sub
clc
mov
scas
gs
xchg
or
xorps
clc
arpl
add
add
xor
add
fstpl
jnp
add
in
sub
clc
movsl
clc
dec
adc
repnz
add
outsb
scas
repz
add
sub
cmp
mov
ret
push
clc
mov
push
add
test
ficoml
rclb
add
int
dec
leave
push
jg
dec
pop
gs
cs
pop
jecxz
mov
jecxz
mov
sbb
clc
or
and
add
jo
add
daa
clc
int3
pop
clc
xchg
ljmp
adc
add
add
add
or
clc
out
cmp
cmp
add
xchg
jbe
aad
dec
push
jae
add
aam
pcmpgtw
sarb
add
inc
clc
clc
sbb
cwtl
xor
add
mov
mov
clc
cmp
add
jbe
add
xchg
fsubs
xor
add
and
add
inc
clc
movsb
clc
ljmp
cmc
mov
pop
es
cwtl
mov
add
mov
mov
xchg
int
fildl
add
clc
test
lcall
pop
aam
add
push
aas
push
push
add
push
add
push
add
out
push
add
clc
test
adc
mov
clc
adc
add
jb
add
add
xchg
sub
add
out
pusha
add
adc
add
add
ds
pusha
add
xor
add
add
add
add
add
ss
adc
add
add
clc
or
clc
jmp
adc
aas
jecxz
adc
add
inc
clc
sub
add
test
add
jo
add
imul
vmaxps
clc
es
stos
sub
xchg
push
in
push
into
dec
inc
clc
sbb
xbegin
mov
mov
neg
and
add
clc
push
add
add
add
clc
xchg
hlt
add
fidivrs
daa
clc
cmpsb
clc
pop
clc
dec
pushf
inc
clc
mov
and
clc
pop
adc
add
js
pop
and
jnp
clc
cld
sub
insl
lret
test
push
mov
clc
xchg
sbb
add
insb
jno
add
add
add
lock
clc
xabort
dec
xor
add
pop
xor
add
je
mov
test
mov
shrl
cli
pop
jmp
rcrb
je
aaa
dec
loop
loopne
jge
pop
xchg
mov
loope
push
add
sti
mov
pop
clc
ja
add
add
mov
add
loopne
add
add
clc
xor
add
or
das
jecxz
mov
out
imul
pop
jns
call
rclb
pop
add
push
add
scas
add
add
clc
sbb
fs
mov
popa
add
cmpsl
clc
xbegin
add
and
add
fistl
add
xchg
into
jae
add
imul
clc
lret
push
ljmp
jno
add
and
add
cmp
test
sub
jae
add
clc
dec
aad
clc
inc
add
fildl
add
jecxz
fbstp
mov
pop
sbb
clc
mov
lcall
mov
add
out
xor
add
lret
cmp
sar
pop
call
dec
fidivl
jg
iret
aaa
mov
add
or
int
mov
xor
xor
mov
dec
ds
aaa
fmulp
lods
pusha
add
pop
adc
add
lods
push
das
sbb
mov
clc
pop
jmp
xchg
adc
add
clc
and
add
jge
mov
mov
add
dec
xbegin
setns
xchg
push
dec
into
mov
add
loope
jbe
pop
pop
mov
data16
addr16
stos
mov
xor
add
cmp
out
cmp
add
add
clc
inc
clc
push
mov
xchg
into
call
clc
or
add
mov
clc
sbb
push
xor
add
loope
imul
xor
add
jns
mov
cmp
test
loop
adc
add
mov
js
xor
add
inc
add
nop
add
add
add
add
mov
fidivrl
add
push
in
adc
add
fsubrl
nop
daa
clc
std
push
inc
clc
cmp
mov
clc
ret
clc
xchg
mov
add
addr16
lock
xor
hlt
out
lods
dec
ret
and
add
jns
clc
pop
pop
fucompp
and
add
add
clc
cmp
push
add
push
clc
test
xor
cmpsb
clc
xchg
xchg
push
add
enter
cmp
ret
clc
ljmp
clc
cli
test
jecxz
add
outsl
or
xor
clc
pop
mov
je
add
outsb
push
and
add
mov
aas
add
out
adc
add
mov
push
add
pusha
add
into
xchg
cmp
into
adc
add
clc
add
ret
clc
pushf
jae
add
add
dec
pop
xchg
mov
std
jnp
cmp
push
add
iret
clc
fs
inc
add
int3
cmpsb
clc
dec
outsl
xbegin
into
loope
sar
clc
jb
add
sbb
sbb
insl
bound
add
adc
clc
xbegin
ljmp
add
dec
push
sti
jno
add
add
cltd
adc
mov
push
daa
clc
dec
adc
add
clc
mov
adc
add
pop
clc
mov
or
add
ss
shlb
add
adc
add
clc
insl
push
cli
bound
add
jge
jle
daa
clc
jl
xchg
in
notb
cmp
fmul
and
add
add
xlat
mov
add
inc
clc
arpl
add
xchg
in
xlat
enter
fnsave
clc
pop
enter
cld
ret
clc
inc
add
aam
cld
or
fwait
addr16
push
mov
sbb
mov
mov
clc
add
jmp
sti
in
xchg
push
xchg
and
add
jecxz
cli
in
mov
add
mov
add
push
leave
xor
add
jmp
add
add
aas
push
inc
clc
add
add
add
add
add
clc
outsb
fiadds
das
sar
and
add
pushf
fidivrl
vcmpps
lock
pusha
add
jbe
add
aaa
out
pop
mov
xchg
enter
xor
add
cli
sub
inc
add
add
pop
sub
cmp
add
fdivrs
add
xchg
sbb
clc
add
add
lahf
jmp
cld
ljmp
hlt
inc
add
rcll
ljmp
clc
lods
and
add
fmul
call
add
mov
clc
dec
adc
add
add
add
or
sub
mov
cwtl
test
xor
clc
xchg
jb
add
cltd
adc
add
rcl
and
add
mov
decl
add
xchg
outsl
xabort
sarb
clc
loop
mov
add
add
cmp
sahf
mov
pushl
add
das
enter
int
add
mov
clc
enter
add
add
add
das
loopne
pop
mov
mov
xchg
das
ss
dec
dec
jnp
clc
mov
and
add
add
jno
add
pop
stc
lods
push
add
dec
into
push
out
rcrb
fsubl
test
mov
jno
add
imul
fists
outsl
mov
lret
inc
add
or
ror
in
inc
add
lods
stc
enter
clc
push
add
cmpsl
clc
dec
push
cmp
add
jnp
daa
clc
shlb
add
roll
add
or
mov
clc
lret
add
add
add
add
clc
cmp
and
iret
xchg
xchg
setns
xor
add
addr16
dec
movsb
clc
cmp
shlb
gs
xadd
scas
loop
test
cld
jle
test
xbegin
mov
xor
add
and
add
add
add
fisubrl
mov
jnp
clc
sbb
add
clc
pop
imul
data16
test
aad
add
js
gs
jmp
lea
sbb
push
sti
jmp
jg
add
add
arpl
add
cltd
jbe
in
xchg
inc
add
aaa
loopne
std
imul
add
xor
add
jae
add
int
dec
adc
xchg
cmp
ds
ja
add
mov
mov
cmp
dec
sub
inc
clc
dec
lods
rcl
bound
add
clc
add
cli
jge
sub
inc
clc
push
pop
xor
add
in
imul
cmc
jg
add
mov
add
adc
add
cmpsb
clc
sub
add
or
push
add
pusha
add
fldl
cmp
pop
out
ljmp
and
add
add
cmp
clc
inc
clc
mov
add
imul
add
add
xor
add
add
clc
out
fiaddl
jns
add
xchg
cmp
mov
insl
xchg
clc
xchg
and
repz
clc
cmp
mov
add
mov
clc
push
add
out
mov
movsl
clc
pusha
add
outsb
cmp
insb
xchg
lret
dec
jmp
int3
js
mov
pop
push
je
ljmp
pusha
add
adc
add
popa
add
sbb
js
cmp
leave
xor
xchg
outsb
xor
dec
stc
fnsave
lcall
pop
inc
clc
js
or
add
adc
add
xor
add
cmp
add
sti
jae
add
add
add
cmp
iret
pop
clc
inc
clc
jbe
sub
add
xor
add
cwtl
sub
clc
mov
clc
pop
mov
lods
xbegin
clc
gs
jnp
clc
pop
scas
xbegin
scas
fcomp
xabort
xchg
std
int
out
sbb
push
push
clc
test
dec
dec
cmpsl
clc
ffreep
clc
sahf
sub
clc
mov
sub
mov
dec
outsl
sahf
mov
add
loopne
or
mov
ficoms
and
add
dec
cmp
add
sub
or
add
or
cltd
mov
jnp
add
pusha
add
aam
clc
imul
add
cmp
clc
sub
fs
insl
gs
notb
add
lret
push
add
scas
mov
arpl
add
jne
add
add
testb
enter
clc
push
clc
fcoms
iret
stos
mov
add
pop
pushf
sbb
clc
out
or
mov
lcall
clc
cltd
adc
add
cmp
add
pop
stos
and
add
clc
test
mov
jnp
sbb
add
add
inc
clc
mov
adc
mov
cmp
add
imul
in
ret
clc
sar
adc
clc
mov
data16
lcall
add
push
add
mov
add
xlat
dec
test
or
add
sbb
clc
mov
cmp
shr
dec
lcall
stos
outsl
popa
add
movsb
clc
or
mov
enter
das
push
pop
fs
cmp
add
add
sbb
add
enter
clc
sub
add
push
movsl
clc
push
mov
xchg
jg
out
call
add
imul
arpl
add
clc
pop
clc
sarl
das
sub
shrb
sub
add
jae
add
add
add
popa
add
inc
clc
pop
ss
add
add
mov
data16
sar
js
cmp
add
ss
in
lods
scas
enter
add
cmp
mov
nop
popf
bsf
clc
in
jmp
cmp
clc
xor
add
and
add
jl
and
add
ja
add
insb
adc
add
fcoms
cmp
add
aam
sub
mov
add
mov
add
xor
imul
xchg
sub
clc
mov
fldcw
jne
loop
in
negl
dec
jnp
add
mov
fstl
add
daa
clc
test
cmp
xchg
ss
push
movsl
clc
jmp
push
popf
jl
sbb
clc
icebp
mov
aas
in
sahf
fimuls
jns
lcall
adc
add
xchg
jmp
clc
test
ljmp
or
add
cmp
leave
cmp
adc
add
add
ret
add
lret
add
enter
repnz
out
dec
out
outsb
insb
xlat
push
pop
clc
dec
stos
mov
jbe
cmp
loopne
jne,pt
ret
clc
cmp
clc
xbegin
add
add
mov
push
push
add
jno
add
cmp
or
jle
clc
sbb
jg
stc
and
lret
push
push
add
fstpt
add
xchg
rolb
add
icebp
or
data16
popl
add
clc
clc
cs
pop
mov
jmp
sub
clc
ss
cld
and
add
clc
push
add
add
add
sbb
ds
loop
lock
jg
mov
jp
cmp
xchg
xchg
cltd
or
and
add
clc
jns
clc
fbld
add
add
clc
inc
clc
cmp
add
imul
clc
inc
clc
jecxz
sbb
clc
aam
clc
lcall
add
or
mov
add
fmul
enter
push
imul
sbb
cmp
clc
iret
rcll
add
mov
clc
xor
add
cltd
sbb
nop
mov
clc
and
ret
clc
icebp
sbb
mov
mov
sbb
add
or
scas
ljmp
push
rolb
stos
int
mov
fs
or
adc
add
aam
gs
test
jl
test
clc
shrl
test
mov
fsubrs
xchg
ret
clc
and
add
cmp
mov
dec
adc
add
call
add
enter
jb
add
cmp
xor
add
mov
clc
in
xbegin
pop
fnsave
sub
add
clc
insb
repnz
in
mov
xor
dec
xchg
or
dec
jns
add
or
xbegin
test
xchg
jle
adc
and
add
clc
test
int3
xor
insb
mov
clc
push
add
outsb
out
idiv
cmc
stos
sar
xor
add
clc
pusha
add
aad
adc
ds
xchg
mov
fwait
inc
add
or
add
jae
add
add
push
cs
mov
sarl
clc
xchg
mov
lock
out
push
clc
ds
clc
cltd
bound
add
clc
mov
sbb
clc
dec
xabort
jecxz
inc
clc
cmp
clc
pop
cmp
sbb
add
push
sbb
add
pop
inc
clc
xbegin
adc
add
add
add
add
sar
std
pop
movsl
clc
mov
inc
clc
sbb
clc
cmpsl
clc
dec
sar
clc
xor
add
and
mov
sbb
fbstp
add
rolb
pop
iret
leave
xabort
imul
clc
popf
repz
add
add
mov
add
mov
jno
add
add
add
clc
sbb
mov
sub
clc
xchg
aaa
rclb
add
popa
add
aam
out
cmp
add
add
dec
mov
mov
add
test
and
add
loop
pop
das
fnstenv
int
xor
insl
mov
fwait
cmpsb
clc
jno
add
add
add
clc
pop
mov
dec
push
add
sub
scas
cmp
cmp
fistl
cmp
mov
into
sbb
push
add
ret
clc
jmp
add
sbb
clc
std
and
add
sbb
in
popa
add
sub
add
clc
or
adc
add
add
stc
xor
mov
clc
pop
sahf
add
add
clc
jle
clc
inc
add
xchg
aad
dec
cmp
add
ret
clc
sahf
cld
jns
stos
cltd
inc
add
mov
sub
add
fwait
insb
dec
and
add
sbb
add
add
fbstp
jb
add
xlat
dec
or
lret
xor
add
add
mov
out
xchg
and
add
sbb
in
mov
and
mov
scas
xlat
jg
clc
jmp
aad
cmp
add
mov
clc
movups
add
inc
clc
pop
adc
add
clc
iret
xchg
lock
clc
sarl
shl
clc
jb
add
add
mov
lret
jnp
mov
add
clc
xor
add
clc
mov
inc
clc
icebp
mov
call
xchg
aaa
out
cmp
clc
insl
addr16
out
gs
inc
clc
sub
cmp
pop
test
out
mov
and
add
loopne
jecxz
fucom
clc
jbe
test
out
repz
xchg
xchg
adc
add
xor
add
add
pop
and
add
lea
lret
clc
push
add
nop
fisubs
add
push
rcr
cli
hlt
fdivp
mov
add
push
cmp
sub
clc
xchg
and
add
sub
movsb
clc
inc
clc
imul
inc
add
aaa
pop
clc
push
or
outsl
lods
es
outsl
mov
clc
cmp
pop
sub
add
push
fadd
clc
sti
sbb
int
cmpsb
clc
cmp
divb
xor
add
add
ret
clc
stos
sbb
sahf
pop
clc
daa
clc
push
add
cmp
add
pop
cltd
sub
xchg
je
clc
call
add
cs
rep
mov
adc
add
pop
xor
add
mov
fimuls
ss
cmp
cmp
imul
int3
addr16
jbe
cltd
in
scas
xchg
dec
xchg
xlat
bound
add
clc
sub
sub
into
ficompl
mov
dec
dec
shr
push
mov
leave
dec
and
add
mov
add
xchg
push
add
mov
jl
testb
xchg
daa
clc
aaa
sub
std
cli
dec
sbb
sbb
xchg
mov
mov
fwait
inc
add
jl
imul
clc
mov
mov
add
add
int
fmull
add
or
clc
gs
pop
dec
sbb
clc
ss
clc
out
xlat
add
push
add
xchg
xchg
loope
jno
add
push
jp
das
lret
dec
test
clc
outsl
mov
insl
out
jnp
add
lret
fs
cmp
jp
add
arpl
add
pop
hlt
xchg
rcll
jmp
cld
es
jb
add
outsl
frstor
add
in
inc
clc
or
pop
jmp
loopne
mov
add
cmp
or
add
add
clc
aad
repnz
fwait
add
add
pop
in
lret
lods
mov
out
mov
gs
or
scas
and
add
xchg
ror
cmpsl
clc
popa
add
jmp
jle
mov
clc
pop
mov
add
pop
in
movsb
clc
cmp
and
add
jecxz
adc
add
add
ret
clc
mov
das
lret
add
jmp
clc
ja
and
add
push
add
and
jae
add
cmp
cmp
outsl
imull
jno
add
clc
nop
mov
add
push
lea
outsb
movsb
clc
jae
add
xchg
adc
push
add
jmp
add
mov
cmp
clc
lcall
cmp
clc
test
xchg
cli
cltd
xchg
ljmp
mov
jo
add
jbe
pushf
aam
adc
add
add
clc
push
movsb
clc
pop
sti
sbb
out
mov
inc
clc
shll
add
inc
add
sbb
clc
cmp
ja
add
add
ds
mov
lret
movsb
clc
add
add
clc
jecxz
xchg
xchg
cmp
clc
sbb
clc
or
xor
add
stc
sub
sub
mov
xchg
test
ja
add
mov
clc
xchg
mov
xor
add
clc
jnp
lea
cli
inc
clc
fcmovu
push
cmc
mov
fdivp
sub
clc
scas
in
jp
outsl
stos
test
jb
add
jl
jns
clc
cli
xchg
jp
add
in
inc
clc
inc
add
enter
mov
setnp
fcoml
fs
outsb
push
clc
xlat
dec
jns
rep
lods
jae,pn
add
sub
or
add
push
insl
popf
push
mov
clc
test
inc
clc
sub
clc
testb
add
ds
fstp
pop
je
add
data16
shrb
add
inc
add
xchg
stc
cld
xchg
in
data16
cs
add
xchg
test
push
fwait
inc
clc
mov
sbb
add
jne
fcomip
jae
add
test
arpl
add
add
mov
clc
insl
shlb
mov
mov
clc
inc
add
rcr
aad
add
pushf
pop
mov
clc
jbe
clc
cmc
cmp
clc
cmp
dec
sti
fs
sub
out
pop
mov
clc
adc
add
clc
and
sbb
add
clc
xchg
cmp
xchg
imul
add
add
mov
jo
add
enter
cmp
push
test
sub
inc
add
jne
add
xchg
fsub
clc
inc
clc
inc
add
inc
clc
mov
in
aad
pop
clc
jecxz
sbb
add
jmp
lods
test
out
xchg
sub
clc
cwtl
addr16
fisttpl
mov
mov
shrb
xchg
jp
add
test
cmpsl
clc
push
add
sub
inc
add
jp
clc
mov
add
add
ret
adc
add
jle
clc
push
cmp
clc
pop
scas
insl
inc
clc
pop
int3
aad
add
je
mov
pop
xor
clc
jp
xchg
cmp
add
add
add
mov
clc
test
gs
dec
and
add
clc
mov
clc
lret
add
clc
xlat
lcall
cmp
add
adc
add
ljmp
loope
fcmovnbe
jp
pop
jnp
push
dec
testl
pop
das
sti
or
mov
clc
mov
push
mov
pop
inc
add
imul
clc
or
add
cmp
or
add
xchg
inc
clc
and
add
leave
icebp
das
jo
add
add
add
adc
add
daa
clc
gs
test
and
and
add
xchg
jae
add
add
cli
stc
adc
xor
add
clc
jecxz
js
xor
add
clc
cmp
iret
xor
add
mov
call
data16
cmc
push
mov
cmp
inc
add
cmp
clc
ret
xchg
and
add
inc
add
mov
add
sbb
in
int
sbb
into
mov
push
add
shll
jmp
dec
fcmovbe
add
add
add
out
sub
test
sub
add
and
imul
jge
in
and
add
sub
pop
mov
test
pop
into
fnstenv
mov
xor
lret
std
xabort
clc
sahf
mov
mov
add
add
jg
icebp
push
flds
clc
dec
mov
add
push
add
pushf
test
aam
ja
mov
add
rol
clc
mov
add
cmpsb
clc
cmp
clc
std
leave
mov
clc
mov
xbegin
out
in
adc
scas
test
cmc
push
xchg
aaa
scas
clc
push
add
shrl
pop
clc
fisubrl
inc
add
aaa
xor
add
add
fsubrp
sbb
inc
add
cmp
aad
sbb
cmp
pop
lods
clc
test
or
add
add
xabort
sar
cmp
mov
adc
add
sub
clc
stc
clc
hlt
dec
insb
repz
add
adc
add
fmulp
xchg
jns
clc
mov
clc
repz
and
add
sti
push
push
clc
and
scas
mov
mov
and
add
fiaddl
int3
and
ret
clc
mov
jl
or
clc
cmpsl
clc
ficompl
clc
pop
aam
mov
add
fdivrp
jo
add
add
mov
add
int3
ja
fsubr
add
ficompl
int
and
add
cmp
sbb
mov
pop
out
xchg
mov
sub
mov
pop
lret
daa
clc
mov
pop
xor
add
clc
xabort
push
or
add
sub
clc
jae
add
aam
clc
or
clc
fs
jge
lret
enter
arpl
add
out
clc
jnp
pop
outsb
cli
mov
cmpsl
clc
mov
add
jne
cmp
and
add
scas
cmp
clc
mov
clc
int
jno
add
xchg
inc
add
int
insb
push
mov
ljmp
jge
add
pop
xchg
std
sbb
clc
cmpsb
clc
int
pop
xor
add
add
mov
clc
clc
sub
add
lret
mov
push
jnp
pushf
addr16
test
sar
push
xchg
lock
loop
loop
loop
dec
inc
clc
or
add
pop
js
outsb
xor
sbb
clc
push
mov
add
cmpsl
clc
loope
push
xchg
xabort
clc
jp
lods
or
gs
push
mov
clc
cmp
int3
fistps
and
add
mov
dec
lahf
bound
add
add
xchg
jl
add
in
insl
push
sbb
xchg
jnp
push
cmp
clc
pop
out
sub
xor
dec
xchg
xabort
add
mov
xchg
push
add
pop
push
jge
xor
add
movsl
clc
jecxz
loope
clc
ljmp
mov
and
add
xchg
jno
add
jecxz
mov
add
fld
clc
negb
call
add
inc
add
jmp
add
pop
clc
in
jmp
dec
mov
lcall
add
clc
inc
clc
push
loopne
push
add
or
and
add
clc
in
mov
clc
enter
popf
or
aam
inc
add
js
adc
add
cmp
mov
insb
cmp
es
aas
out
dec
hlt
cmp
and
add
add
call
cltd
mov
jae
add
mov
add
ret
clc
sub
arpl
add
clc
jg
add
xchg
movsl
clc
or
add
or
clc
mov
add
or
xchg
xchg
or
clc
inc
clc
add
add
xbegin
clc
in
jecxz
jp
jg
xabort
clc
add
add
add
dec
lea
mov
mov
push
lods
xchg
js
jecxz
jae
add
clc
iret
scas
dec
adc
popa
add
mov
clc
xor
add
outsb
insl
or
add
sbb
sub
push
add
add
add
mov
clc
pop
push
add
mov
clc
mov
mov
add
mov
fistpll
push
add
mov
fildll
push
pop
xor
lea
fsubs
shll
test
int
add
mov
icebp
aad
clc
cmp
clc
mov
add
push
add
je
mov
iret
std
mov
clc
pusha
add
mov
dec
outsl
push
clc
clc
fsubrs
clc
jp
push
sti
stc
push
data16
or
add
pop
lret
cmpsb
clc
fsubp
clc
mov
clc
pmulhuw
cli
xchg
test
add
rorl
clc
fcomip
pop
push
push
add
fs
and
add
add
aad
add
add
add
clc
js
pop
in
out
movsl
clc
push
fsub
clc
or
add
js
adc
add
add
add
iret
fldl
xor
dec
sub
mov
mov
add
sub
clc
shrb
add
cmpsl
clc
data16
outsb
jp
lcall
jno
add
add
popa
add
pop
clc
cmp
push
cwtl
or
pop
sub
sbb
pop
mov
pop
outsl
lock
call
imul
fidivl
add
pop
jbe
pop
fdiv
dec
xchg
pop
sti
mov
inc
clc
insb
clc
cmp
mov
or
aaa
and
arpl
add
mov
clc
int
pushf
xchg
inc
add
cmp
clc
pop
sti
test
adc
add
test
stos
xchg
xchg
or
movsl
clc
jne
cmp
xor
add
and
add
pop
push
clc
popf
cmp
pop
xchg
loop
adc
add
add
and
aas
xchg
jbe
aaa
push
add
mov
clc
dec
jmp
sbb
mov
mov
data16
mov
add
mov
sub
pushl
add
js
add
inc
add
repnz
clc
fs
outsl
ss
adc
and
add
add
mov
add
add
ja
mov
add
pop
sbb
fstp
xchg
xchg
add
add
and
add
mov
fwait
pop
xbegin
add
pushf
jle
add
lret
pop
ret
clc
mov
add
mov
cmp
mov
dec
outsl
inc
clc
xchg
out
xchg
pop
push
inc
clc
xabort
jg
add
clc
cmpsb
clc
das
mov
clc
push
into
test
adc
or
movsb
clc
sbb
push
and
add
add
pop
test
add
add
clc
fs
dec
in
sti
jle
clc
add
clc
lock
xchg
rcl
jne
cli
imul
notl
in
push
add
add
cmpsl
clc
mov
mov
in
xor
add
and
jnp
clc
jns
clc
mov
decb
cmp
addr16
jne
clc
mov
loope
cmp
inc
add
dec
bound
add
add
add
cmp
out
push
pop
jne
clc
jp
clc
lcall
add
cs
