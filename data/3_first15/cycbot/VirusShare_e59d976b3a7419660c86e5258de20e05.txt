stos
rorb
jmp
lcall
addr16
adc
xchg
jecxz
jg
cwtl
mov
xchg
out
adc
add
scas
adc
in
ret
addb
insb
push
or
fucomip
int3
pop
pop
jg
push
jp
dec
test
xor
sbb
out
jecxz
add
add
fdivs
fwait
movb
bswap
push
xchg
mov
add
inc
add
mov
insl
xor
sti
push
push
scas
and
jae
push
mov
mov
or
push
cmpsl
jle
or
cmp
int3
jg
add
add
cs
sahf
sahf
xor
imul
icebp
mov
adc
push
rol
add
arpl
xor
ss
cmp
lods
sub
add
sbb
push
cld
xor
stos
stc
cmpsb
jl
mov
cmp
add
movsb
dec
mov
add
scas
mov
push
ja
xchg
in
in
out
or
mov
data16
mov
sub
stc
and
fiadds
add
add
bound
dec
add
sbb
jl
sbb
test
in
sbb
mov
dec
fwait
cmc
mov
push
add
jnp
and
or
xchg
xor
xchg
xor
adc
movb
scas
inc
add
cltd
jle
std
xor
imul
add
jo
mov
js
outsb
mov
movb
mov
cli
mov
dec
push
jmp
subl
jne
and
sbb
xchg
call
push
jbe
rolb
and
rcll
sub
and
out
pushf
stos
inc
add
pop
xor
lea
stos
arpl
xchg
mov
cmp
add
pop
lcall
inc
xor
mov
sti
mov
mov
push
add
jb
push
xor
hlt
cmpsb
mov
shlb
fldenv
iret
pop
icebp
movb
xchg
push
push
adc
insl
aad
push
and
ret
push
out
fs
jnp
push
cmpsl
xchg
test
jno
jmp
ficompl
and
add
shll
cmc
clc
and
push
fisttpll
jbe
dec
sbb
pop
mov
add
push
add
cltd
lds
ds
pop
into
xchg
cmp
scas
and
lret
hlt
xor
cmp
data16
fisubrs
out
call
add
fldl
pushf
lds
rolb
aaa
xor
movsl
push
add
je
or
popf
cwtl
fbstp
in
cwtl
nop
aad
jnp
jl
adc
addr16
xlat
popf
xchg
jo
lea
add
in
addb
ret
lret
jb
dec
faddl
or
scas
in
inc
add
ja
sub
pop
enter
movsb
stos
js
add
push
repz
push
push
jmp
jl
lock
lcall
mov
pop
inc
lret
movsl
lea
test
cltd
or
mov
add
pop
add
cmpsb
mov
add
lock
test
ret
xchg
cld
cld
dec
add
cs
inc
pop
sbb
fdivl
jp
mov
pop
stos
cmpl
call
popa
imul
and
xlat
out
sti
imul
std
cmpsl
in
mov
arpl
je
imul
cmp
xor
je
sbb
scas
int
js
push
movb
les
push
mov
dec
xchg
insl
or
xor
jecxz
movl
add
cmp
je,pt
push
cmp
aas
arpl
mov
xor
test
mov
movsl
xchg
fwait
inc
add
or
cmp
cmpsl
dec
in
sarb
sub
xor
ss
pop
or
in
es
dec
add
gs
cmp
or
sti
mov
adc
sub
or
aaa
mov
sub
sbb
sti
adc
add
add
addb
pusha
add
xor
inc
add
mov
ret
or
lret
sbb
out
shll
jb
inc
add
push
mov
sub
jge
sbb
imul
xor
dec
mov
sbb
mov
mov
mov
mov
popf
or
pop
mov
mov
jo
mov
cmp
push
mov
add
scas
into
jno
add
jecxz
test
xchg
and
insb
sbb
add
or
mov
add
dec
sti
mov
add
mov
add
popf
addb
clc
adc
test
xlat
inc
es
adc
xchg
ret
xor
xor
jns
mov
adc
push
xchg
cwtl
jns
int
aam
jns
iretw
scas
lods
stos
test
movb
add
fistpl
adc
pop
imul
jp
aam
cmp
insb
fsubrp
ljmp
lea
outsl
sbb
in
push
jbe
jmp
pop
push
push
jle
xchg
xor
pop
adc
stos
addb
dec
adc
jg
xchg
dec
pop
lock
lods
daa
push
add
sub
push
fwait
sub
rcrb
mov
jle
lock
inc
add
out
jae
push
jmp
add
cmpsb
clc
inc
cltd
xchg
cmp
push
adc
adc
sbb
andl
iret
jb
adc
xor
mov
adc
xor
outsl
loop
sbb
rcrl
shll
add
sbb
dec
pop
ljmp
push
in
or
adc
add
cmp
push
add
pop
add
jnp
cltd
push
into
xor
test
adc
out
pop
mov
ja
sbb
sub
bnd
xor
test
frstor
sub
pop
repnz
movb
inc
mov
xchg
add
mov
pop
clc
fimull
ret
cmc
adc
mov
subl
add
xor
stos
or
pop
adc
inc
add
in
cmp
add
mov
xor
lds
lds
js
sub
add
xor
lea
pop
inc
xor
fisttpl
hlt
dec
adcl
out
data16
mov
add
aaa
mov
loop
add
cmp
jmp
fldenv
sub
or
fistl
insb
das
cmc
inc
add
fildll
out
xor
cwtl
add
or
mov
fnstenv
jp
add
mov
shl
pushf
mov
bound
and
cmp
cltd
je
jne
add
mov
test
imul
mov
mov
std
jle
neg
jnp
stos
cmpsl
mov
add
and
mov
push
cmp
out
fwait
push
addb
sbb
pop
mov
sub
sbb
fistl
cmpsb
rclb
prefetcht1
add
or
mov
jbe
insb
out
or
sti
push
mov
mov
push
fildl
out
lret
loopne
add
in
jns
pushf
xor
mov
jp
jo
enter
outsl
adc
leave
jbe
daa
mulb
add
push
dec
xchg
mov
mov
pop
scas
fiaddl
stos
cwtl
pop
push
add
xchg
lea
mov
adc
stos
rol
loope
jecxz
testl
adc
pop
mov
sbb
jb
push
and
xor
or
es
loopne
xor
cmp
cwtl
jmp
or
add
mov
call
das
cltd
test
mov
add
mov
stos
or
and
push
add
mov
fildll
iret
cld
cmp
jle
sbb
rolb
fdivp
adc
xlat
inc
loope
and
movb
punpcklwd
add
lods
xchg
add
push
add
jle
dec
decl
xchg
add
jno
insb
das
jb
addb
cld
test
and
add
outsb
fdivrl
cmp
push
mov
stos
repz
shlb
out
cmp
jmp
mov
jecxz
or
lods
adc
or
outsl
xchg
or
js
jle
insl
or
dec
fmuls
add
add
lds
imul
jg
repnz
lods
insb
movb
nop
enter
mov
fsubs
insl
out
push
add
in
es
or
subl
inc
add
ljmp
jp
jp
popf
lea
js
out
sub
inc
push
inc
add
add
lret
sub
in
sti
adc
pushf
cltd
push
push
js
out
add
fmul
push
aaa
pop
loopne
ds
inc
push
sahf
out
xor
dec
stos
aad
cs
xchg
pop
es
or
incl
adc
shll
mov
pop
jg
addb
dec
cmp
add
je
add
lret
sub
insb
push
nop
mov
ret
pop
add
adc
std
daa
lds
ss
out
cltd
or
divb
std
js
mov
xor
pop
sbb
data16
ja
add
dec
and
dec
shll
nop
repnz
sbb
invd
ret
mov
pop
in
dec
cmpsb
or
lcall
sub
fadds
add
xchg
scas
lcall
outsl
lsl
mov
xor
test
fcompl
add
or
push
and
push
add
add
into
lods
sti
mov
push
inc
add
les
mov
add
add
rolb
inc
add
inc
ja
or
mov
inc
fildl
sbb
xchg
lahf
mov
sub
mov
flds
out
jo
scas
incb
in
aam
in
outsl
cmpl
add
xor
cmc
test
sub
push
push
push
cld
call
sub
mov
imul
es
ss
lea
push
push
push
call
cmp
je
es
lea
push
push
es
call
test
jne
jmp
icebp
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
lea
sub
repnz
mov
sub
mov
cs
push
push
lret
jmp
add
add
adc
xchg
jne
test
mov
pop
ret
push
jbe
cld
push
rorb
cmpsl
pop
jo
lods
sbb
aad
aaa
add
mov
add
add
loope
dec
lods
arpl
inc
add
jl
lock
jg
inc
add
daa
movsb
test
data16
jmp
xor
jg
aad
fistl
adc
cld
mov
scas
leave
mov
xchg
sub
or
push
dec
xchg
add
scas
dec
sub
loope
icebp
pushf
iret
xchg
sbb
movsb
mov
add
les
mov
repnz
jnp
aam
xchg
je
mov
aad
add
add
mov
xchg
cltd
cmp
and
sub
cmp
jmp
push
mov
add
mov
cmpsl
arpl
fidivs
mov
lahf
ja
out
jg
and
xchg
lcall
mov
mov
add
fiaddl
adc
ljmp
iret
aam
add
add
sub
lret
jbe
cltd
and
mov
jb
jg
xchg
and
cwtl
sub
pop
cmp
ret
popa
mov
bound
dec
addb
test
add
dec
outsl
cmc
xchg
sub
push
mov
jb
mov
lea
jne
adc
add
or
scas
sbb
mov
outsb
sub
and
jecxz
jecxz
shl
popf
push
jp
mov
xchg
cmp
int
dec
les
push
add
call
pop
int3
repnz
push
ror
inc
loope
int
add
sbb
cmp
dec
mov
inc
cmpl
jne
cmc
fisubrs
adc
or
or
sub
add
mov
imul
cmc
push
imul
inc
add
jg
xor
dec
and
mov
xchg
xor
jno
stos
lds
inc
add
adc
and
jae
fstl
add
mov
addb
movsl
jb
add
pop
inc
add
add
cmpsb
sbb
xchg
cwtl
mov
push
mov
out
aaa
scas
mov
jecxz
jae
xlat
jne
push
mov
adc
push
add
ret
jno
das
cmp
testb
xchg
aas
stos
xchg
xchg
fwait
push
add
jle
stc
hlt
sub
repnz
add
ret
pop
and
mov
xchg
sbb
mov
loop
or
stos
cmp
inc
add
sti
xchg
inc
pop
icebp
sbb
je
add
inc
arpl
jno
out
aaa
lcall
mov
daa
and
mov
inc
add
add
add
nop
dec
dec
aam
int
mov
sbb
fsubl
xor
add
es
cs
adc
movsl
rorb
in
cmp
leave
ret
cmp
add
xchg
xchg
sub
push
ljmp
movsb
fadd
stos
rep
cmp
mov
or
push
les
xor
xchg
jl
mov
push
sub
cltd
pop
jl
bound
loopne
rclb
inc
add
add
outsb
mov
imul
pop
mov
mov
xchg
nop
in
mov
hlt
insb
push
ret
inc
add
in
test
add
movsl
cld
xor
or
aad
add
fs
lods
and
pop
rolb
xchg
xchg
in
and
shll
imul
add
pushf
dec
xchg
out
or
and
fwait
dec
repnz
ret
and
sub
gs
cwtl
incb
ret
nop
ret
mov
mov
inc
add
fwait
jmp
push
xchg
imul
xchg
mov
push
mov
add
ret
dec
cmpsb
fcompl
pop
and
aam
adc
loopne
divb
shll
bswap
mov
jbe
dec
xchg
pop
jmp
add
jl
jb
add
push
mov
mov
lea
ret
and
xor
push
pop
mov
subl
inc
add
lahf
mov
bound
xchg
fsubp
into
pop
jo
jmp
bound
sbb
movsl
mov
jo
out
jl
js
mov
stos
idivl
adc
add
aas
cmpsb
bound
ss
stc
dec
repnz
mov
adc
inc
add
jl
mov
push
mov
xchg
sbb
imul
add
insb
ret
out
outsb
add
mov
mov
clc
dec
ljmp
jne
push
je
cmp
cltd
lea
add
sbb
mov
add
mov
sub
or
pop
dec
mov
stos
test
mov
inc
jecxz
ja
xchg
add
into
jle
mov
add
mov
or
inc
je
daa
jmp
rcl
mov
sbb
jge
lret
rcll
rcll
adc
xor
cmp
repz
adc
adc
pop
cmp
fwait
inc
test
lds
xchg
xor
repnz
mov
push
or
loope
ss
pushf
inc
aaa
push
mov
pop
jl
es
adc
push
lds
insl
rol
ds
loope
add
aaa
add
in
xchg
mov
movsl
jecxz
jne
and
icebp
loop
adc
push
ret
fcmovbe
xchg
xchg
fstpt
add
jmp
or
lods
out
mov
ds
mov
leave
and
pop
sahf
lret
inc
pop
or
mov
add
dec
in
push
fisubs
imul
add
xor
and
not
cmp
sub
dec
jnp
xor
sti
xor
mov
jg
add
inc
add
xchg
cmp
std
aaa
dec
xchg
fwait
jp
xor
lea
add
fimull
jmp
and
push
or
jo
pop
mov
frstor
cltd
ret
and
cmp
add
int
fisubrs
xchg
cltd
mov
add
add
lahf
flds
mov
lods
cmpsb
fists
add
inc
add
lods
mov
cltd
or
movb
pop
push
clc
xchg
mov
jnp
mov
lds
add
xor
add
es
adc
leave
xlat
das
shll
pop
sbb
int
mov
js
add
adc
sarw
aaa
aaa
cltd
push
pop
loopne
mov
call
push
and
mov
xchg
mov
nop
xchg
int
xor
xlat
inc
in
mov
jl
xchg
push
and
into
sub
cmpl
pop
push
test
sbb
sub
cmp
pop
sbb
xlat
jp
fcomps
or
dec
push
fidivs
pop
mov
xchg
mov
xchg
les
sti
dec
adc
scas
cmp
add
lahf
and
xlat
arpl
sti
je
out
adc
stc
cmpl
sti
aad
and
negb
add
mov
adc
int3
data16
sbb
out
push
inc
mov
mov
sub
je
add
push
dec
jle
xchg
pop
stos
addr16
mov
dec
jae
pop
push
add
jb
std
loope
lds
jecxz
pop
mov
adc
add
add
or
iret
clc
mov
dec
push
or
sti
daa
adc
lods
rcl
stc
push
jno
mov
add
test
into
push
ja
dec
sbb
add
or
hlt
cmp
call
jns
leave
xchg
jecxz
jg
sub
xchg
enter
xchg
push
movb
mov
sarb
adc
cld
test
sub
movb
adc
rolb
dec
jg
negb
aam
jb
mov
test
out
sub
sub
test
fnstcw
xchg
movb
in
or
jl
insb
std
aam
inc
jecxz
push
fdivrs
inc
add
cltd
sub
mov
jbe
pushf
outsb
xor
mov
rolb
sbb
add
cltd
inc
add
cmpsl
lods
pop
lods
xchg
ret
push
iret
int
xchg
fidivs
add
add
addb
dec
in
pop
xor
xlat
mov
pop
cld
pop
pop
adc
add
es
jo
scas
call
fcmovne
out
xor
sub
jb
add
mov
ljmp
xchg
loopne
stos
stos
movb
mov
mov
fbld
add
cmp
adc
push
sbb
adc
push
add
add
pop
rolb
adc
gs
or
xor
sub
add
add
aam
inc
addb
xor
enter
inc
and
je
aam
addb
mov
or
stos
cmp
sti
pop
lcall
sbb
movsl
loop
xchg
subl
mov
add
ret
lahf
or
xchg
xor
in
imul
bound
addb
aad
jae
repnz
iret
lds
cs
push
add
mov
aaa
xchg
jl
or
pop
push
mov
aad
cmpsb
fisttpl
dec
add
add
pop
sub
jnp
pop
test
and
jnp
insb
mov
lods
mov
dec
andl
outsl
lret
es
add
inc
mov
jbe
cmp
movsb
xor
ja
adc
jp
test
data16
cmc
stos
mov
arpl
add
push
filds
adc
mov
jge
addb
xor
mov
add
int
add
int3
mov
dec
int3
stc
mov
cmp
mov
push
imul
ficoml
adc
push
sub
adc
add
jp
lcall
enter
or
jl
mov
cwtl
dec
ljmp
sub
jle
lret
sub
jnp
mov
pop
or
xchg
aaa
sub
pop
lcall
pushf
or
add
add
shlb
jno
jno
inc
lret
add
mov
das
sahf
inc
mov
jns
sub
and
lahf
test
mov
movb
cmc
fldt
fcompl
out
imul
call
call
sar
pop
lret
xlat
mov
std
ret
or
in
or
dec
sbb
test
xchg
lock
movsl
popa
sbb
iret
mov
push
js
jne
inc
lds
fstpt
in
hlt
pop
mov
push
xchg
leave
mov
push
cmpsb
xchg
jg
pop
add
test
mov
and
mov
sbb
dec
and
cld
jmp
bnd
pushf
out
cmp
aaa
loope
out
stos
or
jns
jno
xor
xor
sahf
inc
mov
mov
leave
ds
adc
sbb
xor
popa
mov
pop
pop
push
int3
mov
movb
stos
addb
adc
jg
lods
xor
pop
in
xor
pop
push
sbb
inc
add
repz
push
faddp
iret
popf
incl
add
xlat
pop
sub
mov
sbb
add
scas
mov
add
add
jo
movb
in
dec
jae
pop
mov
mov
mov
push
add
xor
add
stos
pop
lods
xor
adcl
lock
fldt
pop
addb
sbb
inc
mov
int3
sub
mov
sbb
pop
mov
cmp
cmp
xchg
xchg
lahf
les
mov
add
push
mov
sahf
iret
cltd
jnp
cs
adc
dec
or
inc
mov
in
lahf
xchg
fstpl
fldcw
rorl
dec
gs
fs
test
nop
adc
shlb
push
cmp
jno
in
lea
fisubs
pop
sbb
add
ret
mov
mov
inc
inc
add
or
add
jb
jmp
test
mov
fcoml
xchg
dec
sahf
jb
dec
out
sbb
jmp
mov
cld
ret
or
dec
addb
add
bound
inc
push
js
cmp
test
outsl
stc
in
mov
fadd
ret
jno
cmp
inc
add
fs
add
repz
jecxz
add
pop
int3
out
lds
loopne
push
mov
popa
xchg
pop
popa
cmp
bound
insb
aas
add
mov
add
push
push
add
xchg
pop
iret
jne
pushf
mov
sarl
shlb
pop
mov
frstor
loopne
jp
push
into
lods
mov
sub
jae
sahf
nop
push
add
push
pop
js
aas
push
add
add
shll
sbb
add
add
lahf
adc
movb
ljmp
or
popa
xchg
ret
cmp
push
fwait
add
insb
mov
insl
es
jae
add
insl
andl
add
inc
jb
or
fstpl
jge
and
movb
add
jmp
sub
ss
jl
dec
pop
incl
xchg
inc
rolb
ret
or
inc
push
movsl
les
enter
xor
add
ror
or
fstpt
popa
pop
pop
cltd
inc
shll
add
fdivl
imul
xchg
je
mov
sbb
and
pusha
add
xchg
lret
add
dec
lods
push
mov
add
pop
movsl
outsl
test
addb
sahf
jo
pop
cmp
sbb
sbb
xor
addb
roll
xchg
movb
leave
xchg
pop
sbb
mov
mov
push
xchg
inc
dec
addb
and
mov
nop
add
enter
add
hlt
fs
add
out
pop
and
ret
push
mov
inc
push
sub
sub
repz
popa
repz
add
rol
mov
and
ljmp
fwait
inc
jp
pop
ds
dec
into
add
inc
add
scas
stos
pushf
mov
cltd
loope
leavew
mov
jo
out
pop
movsl
pop
or
push
stos
mov
addb
cmp
or
int3
mov
lret
shlb
mov
scas
push
lret
add
pusha
add
addb
test
lea
add
adc
add
repz
insl
jmp
jns
jg
xchg
xchg
push
add
add
insl
mov
cld
lret
fdiv
inc
mov
sbb
inc
pop
movb
sbb
push
add
fsubrs
addb
mov
cli
rolb
xchg
and
sub
icebp
adc
lret
popa
aaa
stc
mov
fisttpll
pop
xchg
js
mov
das
lods
adc
popfw
ret
fs
jbe
adc
mov
add
push
je
mov
stc
movsb
add
mov
mov
sbb
pop
mov
push
add
xchg
pop
lock
jbe
vpcmpgtw
in
bound
scas
push
add
imul
imul
dec
lret
in
cltd
hlt
adc
out
pop
jno
arpl
insb
sbb
add
inc
add
out
add
sti
or
add
in
cmpsl
push
add
push
lea
shll
fmul
fs
addb
inc
mov
sbb
and
call
jns
add
call
jae
or
fisubrl
fiaddl
add
dec
jmp
add
mov
cmc
dec
add
mov
mov
pop
jns
out
lahf
imul
loop
inc
add
mov
daa
lods
inc
add
push
fildl
repz
mov
int3
cmp
inc
add
dec
mov
pushf
stos
jns
ljmp
aaa
stos
push
rolb
les
jne
flds
lock
test
aas
mov
mov
pop
xchg
pop
sub
mov
cltd
nop
sub
loopne
lcall
rolb
or
in
mov
scas
sub
cmp
rcll
inc
add
aas
imul
popf
jg
xchg
sbb
adc
push
insl
sti
std
aaa
flds
dec
push
jecxz
jp
cli
push
and
pop
clc
fistpll
leave
int
add
loope
add
xor
jmp
fnstenv
repnz
sbb
jle
adc
add
inc
les
out
cld
cltd
imul
insb
push
add
in
jo
push
in
dec
loop
add
inc
test
jno
add
pop
dec
je
aaa
movb
add
adc
cmp
push
sbb
jno
add
adc
push
xchg
repz
push
or
mov
in
xlat
ret
inc
and
mov
cmpsb
mov
popa
or
adc
or
mov
aas
mov
inc
popf
test
jg
ret
or
cmpsl
xchg
xor
or
call
enter
pop
int3
out
add
pop
xor
add
aad
xchg
or
cmc
push
dec
mov
jg
scas
mov
cmpsb
adc
add
add
lret
mov
out
adc
fldt
sbb
jmp
add
push
fnstsw
jmp
call
xchg
popa
int
and
mov
sbb
pusha
add
jno,pt
mov
add
call
loope
lds
int3
hlt
cmp
add
aaa
vcvtsd2si
ret
mov
add
jmp
add
mov
dec
mov
scas
aam
mov
mov
dec
pop
jl
inc
add
fdivrs
and
sbb
jb
nop
outsl
add
lea
jmp
int3
js
vcvtsi2sdl
xchg
insb
cs
inc
add
mov
add
add
jnp
out
pop
add
gs
popf
out
sahf
push
shll
mov
enter
inc
add
lcall
push
or
cmpsb
sahf
pop
mov
rsqrtps
imul
add
add
aam
cltd
ds
aas
push
adc
inc
xchg
cmp
in
stos
jo
test
lret
xchg
xor
add
adc
pop
in
dec
nop
jg
add
add
stos
daa
mov
or
adc
or
add
mov
or
lcall
inc
add
insb
scas
out
inc
add
inc
add
addb
or
stos
mov
movsb
fisttpl
sbb
rcrl
pop
fnstsw
cwtl
sub
sub
popf
xor
add
mov
hlt
dec
xor
pop
jg
inc
add
push
xchg
fistl
movsb
push
into
xor
sbb
adc
cwtl
dec
loop
push
cli
test
push
cltd
push
sub
fwait
pusha
add
leave
mov
in
sub
call
jns
rep
lods
cmp
mov
xchg
loop
fidivrl
sub
cmpsb
mov
aam
rolb
xchg
or
into
xchg
loopne
mov
dec
das
imul
rcrl
sbb
out
or
add
mov
jnp
cwtl
cmpsl
cmpsb
fcoml
loopne
add
pmaxsw
adcl
imul
imul
jle
daa
push
stos
call
lahf
mov
das
lcall
pop
dec
sub
pop
jge
inc
add
add
cltd
xchg
repnz
out
test
out
jne
leave
psubd
add
mov
mov
sbb
mov
mov
inc
xlat
or
inc
insb
mov
gs
fwait
push
push
sbb
rorb
adc
ds
add
pop
xchg
sahf
icebp
xor
arpl
add
push
aas
movsl
push
jl
and
aas
imul
dec
call
gs
push
jl
add
sbb
ds
jmp
stc
push
or
push
mov
jmp
pop
clc
push
dec
test
insb
jne
mov
xlat
mov
in
push
and
or
inc
push
dec
push
stos
sub
jae
and
cmpsl
cmp
lods
jp
sbb
mov
clc
inc
add
imul
fwait
xor
pop
test
inc
add
mov
or
cmp
es
mov
adc
add
xchg
rorl
cmp
call
mov
imul
add
je
fisttps
pushf
das
ljmp
push
stos
xor
pop
sub
mov
and
idivl
pop
inc
and
popa
dec
sbb
sbb
add
cwtl
dec
jns
or
or
in
add
inc
jne
enter
xor
inc
add
sub
mov
dec
dec
xor
fsubp
xor
int
add
adc
lods
popa
es
outsb
imull
stos
mov
movsl
inc
cmpsb
dec
lea
fldl
cli
imul
add
sti
data16
scas
pop
add
lds
adc
mov
xor
jne
fcom
jp
xor
hlt
cmp
push
sbb
lds
jg
int3
icebp
xor
loopne
add
pop
stos
or
into
sub
mov
add
add
fstpt
movsb
mov
cwtl
dec
mov
outsb
cmp
mov
xchg
or
das
adc
hlt
cltd
aam
insb
rolb
mov
mov
jg
inc
add
adc
out
sbb
movsb
inc
adc
pop
arpl
mov
cmp
push
data16
ret
inc
test
and
daa
test
xchg
inc
add
gs
push
std
cmpsb
cmpsl
sahf
sub
add
inc
mov
push
loop
adc
mov
ss
inc
mov
push
comiss
mov
add
std
es
cmc
sbb
or
lret
aas
sbb
mov
dec
sti
stc
enter
jp
mov
sbb
add
popa
cli
addr16
lcall
repnz
mov
and
insl
das
or
out
push
sub
mov
or
aad
sarl
out
stos
add
out
xchg
jne
lock
push
fucomi
dec
jo
or
and
mov
mov
jo
mov
fsubs
repnz
aas
mov
clc
negb
dec
pop
test
or
pop
cmc
inc
test
mov
call
cltd
pop
sbbl
repnz
fmulp
inc
add
xchg
cltd
xor
std
dec
cmp
cli
je
sti
cmp
xor
xchg
jecxz
sbb
add
add
popa
push
iret
jae
pop
push
loopne
xor
sbb
outsl
push
loopne
mov
mov
xor
mov
jb
pop
cltd
push
out
adc
sub
cld
mov
and
icebp
das
adc
lcall
adc
cs
into
push
dec
push
shll
mov
dec
push
add
jmp
aaa
mov
add
and
xchg
push
add
add
or
add
add
icebp
fneni(8087
dec
popf
lahf
incb
mov
xlat
movsl
pop
imul
jno
lret
mov
mov
xchg
pop
into
mov
fcomps
sub
repnz
adc
xor
xor
mov
jnp
into
stos
sbb
inc
add
fstl
popa
mov
add
mov
gs
add
imul
loope
mov
add
mov
mov
add
testl
mov
mov
xlat
jno
pop
stos
imul
lahf
arpl
aas
sub
scas
jae
xor
mov
ljmp
cmc
mov
xchg
scas
xorl
add
cmc
add
jecxz
dec
sub
mov
or
dec
fisttpl
add
pop
add
mov
cs
push
aaa
cmovne
xchg
stos
and
fistpl
enter
xlat
xchg
xadd
aaa
add
pop
call
inc
add
fiadds
add
divb
or
cltd
in
xchg
or
sbb
int3
mov
push
ds
repz
out
loop
es
aaa
mov
add
mov
nop
lcall
rolb
jns
xchg
aam
sub
mov
roll
lahf
sbb
popf
adc
push
add
lcall
add
add
repz
sub
add
sub
or
clc
test
add
addb
ds
inc
adc
into
xchg
out
push
int3
sub
add
cltd
add
sub
xchg
dec
and
sub
das
cli
testb
mov
or
mov
xchg
sti
mov
mov
sub
fdivs
stc
xchg
cwtl
addb
jno
es
sbb
add
test
jge
pop
cltd
push
add
mov
xor
and
pop
push
push
cli
cld
mov
dec
sub
jg
add
add
adc
clc
fdivrs
mov
pop
and
push
cmc
xor
cmp
stc
jp
rorl
mov
sbb
xchg
inc
add
lret
mov
push
add
cmp
add
das
jg
cmc
bound
stos
xor
cmp
adc
mov
push
lret
in
aaa
vunpckhpd
add
mov
cs
sub
sarb
mov
in
mov
xchg
enter
das
or
add
add
sbb
flds
lods
cmp
lds
scas
jp
add
add
clc
fistpll
rcr
xchg
mov
lea
push
sub
mov
cmpsb
pop
sarl
fcoms
push
jne
mov
stos
mov
lret
add
pop
inc
add
mov
pop
lahf
inc
add
sub
push
add
jnp
add
dec
adc
sub
push
and
loop
loope
imul
out
iret
cmp
add
addr16
jp
push
jg
and
vmovlps
pop
mov
adc
shll
cmc
addr16
add
dec
lret
jmp
add
mov
insb
cmpl
nop
add
js
xor
addb
aam
out
cmc
push
xor
jecxz
out
jmp
mov
test
outsl
pop
addb
imul
pop
jne
sbb
mov
adc
std
fwait
repnz
inc
dec
fimull
fisubl
add
addb
pop
mov
arpl
xchg
push
jb
mov
addb
aad
mov
xchg
cmp
add
mov
das
xchg
scas
and
jb
addb
fcoms
es
ljmp
sbb
imul
test
lcall
push
lds
add
and
pusha
add
inc
sbb
xor
add
sub
dec
push
aaa
mov
jmp
mov
insl
mov
cmp
test
daa
xchg
push
add
cs
jl
jo
sub
es
test
cmp
xor
dec
push
scas
sub
sbb
mov
loope
xlat
in
cwtl
aas
rolb
loopne
cld
mov
add
stos
cmp
sti
cmp
adc
push
push
cmp
popf
push
xchg
sbb
sbb
mov
jge
bound
les
jle
loopne
sbb
add
mov
je
and
movsb
mov
fsubrl
fildl
fwait
adc
lahf
scas
push
cmp
rcrl
xchg
add
pushf
ja
mov
stc
in
in
sahf
movsb
stos
rcrb
inc
adc
addb
push
jo
stos
lahf
fnstcw
xchg
inc
add
and
cmp
push
add
nop
fsubrs
iret
fnstsw
or
add
enter
or
and
arpl
xchg
cmp
or
add
push
jb
mov
or
add
lds
inc
pusha
add
push
or
dec
icebp
sbb
repz
cld
xor
adc
sbb
xchg
xchg
das
inc
add
or
ret
mov
pushf
xor
and
insb
pop
push
aas
in
js
jl
std
movsl
jo
pop
pushf
scas
es
xchg
mov
mov
add
add
outsb
add
xchg
enter
cmpsb
cld
jmp
pop
cmc
hlt
arpl
fwait
push
cld
cwtl
daa
mov
xor
stos
inc
xor
mov
gs
data16
sbb
imul
ljmp
mov
push
push
add
es
xchg
jmp
lret
movl
outsb
sbb
mov
out
out
and
loop
into
mov
dec
pop
cmp
xor
int
add
mov
and
ror
cwtl
nop
aas
lret
sbb
sbb
add
mov
lds
test
insb
outsb
lahf
sti
cmpsb
push
push
mov
or
fisttpll
add
pop
add
ja
fldenv
add
push
pop
push
pop
sahf
fnstenv
mov
or
inc
add
lods
cltd
lods
shll
pop
cmp
push
addr16
or
lret
mov
add
testb
fistpl
and
mov
add
jl
xchg
xor
imul
std
aam
xor
xchg
xchg
addb
ss
inc
add
jb
push
add
add
cmpsb
pop
stos
and
push
pop
movsl
mov
scas
push
mov
mov
sub
push
or
js
fists
scas
fadd
add
leave
xchg
aas
push
mov
add
add
cmp
add
jno
int3
xchg
mov
arpl
jne
and
ljmp
dec
pop
scas
rolb
sub
pop
push
pop
jb
lahf
jne
lcall
add
add
lods
sbb
push
test
shrb
add
add
push
mov
test
sub
ljmp
aas
mov
test
ret
hlt
out
xchg
imul
js
pusha
add
ret
mov
push
cmp
ficomps
mov
dec
dec
inc
cwtl
test
into
leave
pop
test
ja
ja
and
push
stos
icebp
aas
xor
push
leave
sbb
mov
movsl
sub
mov
std
jge
hlt
pop
jl
out
xchg
out
test
js
movb
cmc
ljmp
ja
bound
inc
add
nop
test
sbb
js
push
add
or
sub
cwtl
sti
mov
dec
data16
jmp
add
adc
sysenter
imul
sbb
add
add
or
negl
xchg
pmullw
pop
pushf
in
and
cld
movsb
arpl
mov
mov
arpl
movsb
lea
test
xchg
push
in
adc
dec
or
cmp
outsb
xor
cwtl
xchg
dec
add
xlat
push
lock
int3
clc
jno
mov
adc
cmp
mov
lret
cmpsb
xchg
push
push
outsl
mul
jmp
repnz
es
outsl
dec
xchg
testl
add
add
cmpsb
mov
and
mov
and
imul
mov
popf
cld
das
add
std
rcr
cltd
cli
sbb
jg
jecxz
mov
repz
xlat
adc
mov
add
ret
mov
popf
jle
mov
fwait
lods
into
push
push
out
mov
cmp
jns
and
add
pop
jecxz
enter
sbb
push
aas
into
add
and
std
insb
fwait
or
and
sbb
xchg
aaa
mov
leave
cmpsb
inc
adc
out
clc
jb
add
add
add
incb
push
stos
inc
add
jp
fwait
and
loope
mov
push
inc
push
dec
nop
insb
jle
jg
xchg
loopne
sbb
cmpl
add
clc
inc
dec
mov
sub
dec
sbb
data16
xchg
addb
adc
outsl
or
aad
pushf
dec
inc
sub
dec
xor
and
iret
inc
rcl
out
les
cmp
adc
add
int3
int3
adc
leave
mulb
jo
cmp
movsb
jno
sbb
jl
mov
es
sbb
dec
scas
stos
dec
sub
or
addb
aaa
fidivl
les
cmp
stc
in
jae
pop
addb
mov
fdiv
les
hlt
in
scas
pop
xchg
pop
stc
pop
xor
inc
add
iret
add
pop
jo
push
mov
out
push
lret
in
add
cmpsb
mov
mov
mov
repz
xor
lods
cmp
pop
mov
ss
cmp
and
inc
add
jle
sbb
jb
push
pop
loope
jne
fwait
addr16
sbb
sbb
sub
std
push
push
les
stos
mov
addb
add
fisttpll
cmp
jge
mov
add
push
fstps
sti
jp
test
mov
call
or
fildll
push
imul
sbb
sbb
xchg
outsb
inc
scas
aad
mov
sbb
fidivrs
fldenv
add
stos
out
popa
imul
leave
incl
xor
out
xor
add
xchg
sbb
call
xor
in
lods
int3
lods
out
dec
jl
add
add
mov
xchg
jne
lock
movsl
idivb
lahf
inc
add
push
in
in
clc
mov
xchg
movsl
sub
or
sub
push
sub
adc
add
lea
bound
mov
pop
adc
out
sub
pushf
or
mov
data16
ss
daa
jmp
xchg
push
sbb
lds
dec
mov
inc
add
mov
mov
loope
add
dec
push
stos
push
lods
ljmp
into
pop
aam
aam
and
push
add
mov
jg
mov
pop
dec
cmp
cmp
fstpt
pop
push
or
add
addb
scas
cmp
xchg
lcall
pop
sbb
xor
pusha
add
call
sbb
in
dec
jle
ret
gs
xchg
jnp
adc
in
xchg
jb
add
add
inc
add
shlb
push
add
addb
sub
or
imul
jnp
dec
pop
scas
int
cmp
lods
lret
sub
cmp
movsl
xor
sahf
stc
andl
add
jl
mov
stos
fadds
pop
mov
mov
add
dec
jns
cwtl
cld
or
mov
sub
loopne
mov
data16
addb
dec
push
call
repz
shrb
nop
mov
jbe
ja
jl
mov
mov
test
imul
jnp
es
inc
addb
insb
fsubp
jmp
icebp
xor
lret
fadd
add
test
rolb
and
fyl2xp1
inc
add
and
pop
mov
lock
xor
pop
mov
mov
sbb
inc
add
sub
mov
push
jp
stc
js
fcoms
loopne
jb
adc
push
push
add
xor
out
adc
or
mov
insl
ficompl
or
movb
addr16
mov
jmp
out
jg
mov
xchg
aam
dec
jne
stos
ret
ret
xor
pop
or
orl
add
dec
out
inc
add
xchg
popf
sbb
in
loope
dec
mov
lahf
jbe
and
jne
or
in
xor
sub
xchg
sti
mov
mov
popa
call
pop
loop
loopne
add
jmp
pop
sbb
bound
ret
dec
push
clc
xchg
mov
inc
and
mov
xchg
lea
push
add
rorl
pop
add
push
pop
sbb
xlat
enter
xchg
rorl
sub
mov
pop
into
rcll
mov
xchg
push
es
dec
mov
mov
add
bound
and
add
inc
dec
stos
in
add
add
enter
lods
jle
ret
leave
inc
les
sbb
popa
cmp
roll
iret
dec
push
cmpsl
lock
xchg
movsb
dec
pop
test
mov
add
xor
dec
insl
idiv
mov
or
imul
leave
mov
enter
or
push
or
aaa
hlt
mov
imul
inc
push
test
sbb
dec
mov
add
cltd
lcall
dec
jae
pusha
add
repz
leave
cmp
ret
cmp
cmp
cmpsl
sub
push
add
pop
or
dec
fildll
push
push
jmp
mov
sbb
push
fiadds
add
mov
test
push
adcl
aad
movsb
mov
push
insl
test
sbb
enter
add
lds
data16
mov
push
lret
movb
jae
outsl
inc
add
xchg
sbb
cmc
add
xchg
cmp
cmp
xlat
mov
fisubrs
mov
arpl
pusha
add
stos
cli
bound
xor
pusha
add
add
leave
cmc
jmp
movsl
loopne
stc
jb
loop
repz
outsb
or
arpl
add
add
add
loop
movsb
jo
inc
mov
xor
sub
hlt
jecxz
test
addb
mov
enter
inc
add
xchg
gs
sbb
not
jnp
adc
mov
mov
scas
mov
xor
sti
in
mov
add
fisubs
sbb
cmp
mov
jle
xchg
cld
addr16
bound
xlat
lcall
dec
js
test
sub
insb
testl
insl
and
xor
popa
ret
push
adc
imulb
mov
push
or
dec
mov
out
cli
jl
add
dec
jge
int3
gs
inc
add
loopne
sbb
scas
aaa
or
ficoml
cmp
cmc
test
roll
hlt
in
addr16
lahf
repz
hlt
int3
inc
add
test
lods
mov
mov
xchg
mov
int
fucomi
shr
cmp
frstor
pop
lds
add
sub
add
shlb
add
adc
fmul
jne
inc
cmc
lcall
add
in
fldt
movups
stos
dec
es
or
leave
xor
cmp
lds
pushf
lea
jb
inc
insl
popa
and
outsl
push
ds
mov
pop
and
scas
fidivs
adc
gs
stos
inc
add
jle
aaa
cmp
push
fwait
pop
repz
mov
add
aas
dec
xor
xchg
inc
add
test
add
add
dec
sbb
in
jae
jl
inc
add
loop
mov
aad
add
sub
pop
dec
std
cmp
insl
xchg
movb
push
cld
roll
inc
or
jb
cmp
xchg
pop
daa
arpl
fld
add
test
xchg
mov
leave
dec
popa
mov
xchg
pop
repz
iret
icebp
bound
lret
xlat
dec
out
int
add
addb
lods
jg
dec
sbb
mov
pop
push
into
cmp
test
gs
adc
xchg
fsubrs
or
iret
xlat
addb
divb
leave
fs
add
nop
adc
and
push
fisubrl
fwait
lock
inc
lcall
fwait
int3
sub
mov
add
cmp
xlat
lret
jge
jge
ds
cmp
and
out
aaa
stos
pusha
add
xchg
jo
into
mov
insl
dec
xor
mov
xor
call
pushf
jl
jle
xchg
sub
popa
jae
xor
inc
test
repz
push
cs
les
push
xchg
mov
push
mov
xchg
lret
sbb
xor
jne
cmp
int3
daa
inc
add
ss
and
add
out
rolb
es
fistps
sbb
push
xor
mov
cli
es
pop
ret
mov
sbb
rcl
inc
add
add
push
mov
ret
insl
shl
and
push
push
inc
add
fucomi
jns
or
pop
fdivp
test
lea
xor
adc
lea
test
bound
imul
adc
sub
cwtl
pusha
add
pop
ja
ret
in
or
xlat
sbb
sbb
or
sbb
xlat
cld
add
add
pop
hlt
inc
add
mov
mov
dec
adc
xchg
mov
adc
add
mov
add
dec
pop
xchg
or
inc
add
adc
mov
adc
mov
jnp
pop
leave
movsl
inc
add
mov
sub
lahf
xchg
js
imul
sub
popf
xchg
movb
dec
push
dec
mov
in
sub
add
cmpsl
or
push
idiv
sbb
stos
push
lret
insb
and
jne
and
pop
mov
dec
adc
jl
sbb
clc
dec
addb
mov
add
inc
jmp
adc
sbb
je
sbb
enter
hlt
cmc
mov
dec
inc
xor
pop
mov
test
cmpsl
enter
mov
pop
or
or
call
lods
dec
sub
int3
cmc
xor
pop
push
rorl
repnz
out
mov
add
add
mov
repz
mov
clc
test
jmp
xchg
sbb
movb
and
mov
cmp
add
ret
outsb
push
add
mov
aad
add
mov
xchg
add
stos
popf
loope
ret
sub
push
add
xchg
je
push
pop
xlat
call
addb
jbe
xchg
mov
dec
outsb
dec
cwtl
ss
int3
fbld
out
mov
push
add
mov
add
dec
fimull
stc
adc
adc
add
add
pushf
sti
cmp
push
add
mov
adc
push
jge
dec
jecxz
in
add
xor
mov
dec
cmpsb
cmp
pushf
lea
dec
sbb
jl
xor
daa
mov
mov
pop
or
cwtl
aad
int3
rcrl
pop
out
xchg
data16
mov
pop
inc
add
pop
add
or
movb
outsl
dec
std
cmp
jp
fstpt
pop
lods
pop
adc
dec
psraw
add
popa
add
cmpsl
stc
testb
addb
push
dec
lcall
shrl
mov
xorl
add
jmp
jbe
push
test
iret
or
mov
jo
add
jmp
mov
adc
int3
in
bound
xchg
mov
fdiv
add
mov
loope
ss
sbb
sub
mov
mov
pop
in
xor
jecxz
inc
addb
and
aaa
push
jns
into
cmp
wbinvd
lcall
cmp
mov
leave
push
xchg
mov
xlat
mov
dec
add
inc
loop
rcll
rorb
mov
gs
lcall
in
inc
pop
lret
mov
fxch
inc
add
xchg
sub
pusha
add
rcrb
pop
jp
sub
loop
mov
jbe
ror
mov
and
mov
sbb
jmp
outsl
fistl
push
lock
in
cmc
inc
mov
sbb
sahf
mov
inc
add
adc
lcall
push
sub
lods
and
inc
add
in
aam
sarl
xor
and
adc
pop
sub
cmp
mov
push
into
push
and
loope
scas
rep
adc
ret
cwtl
add
insl
push
pop
jae
es
dec
lcall
and
test
sub
jle
add
not
cmp
cltd
bound
stc
xor
mov
add
mov
shl
das
mov
clc
lcall
jmp
add
mov
add
lea
xor
jmp
add
add
lahf
cmp
add
clc
les
cs
pop
jecxz
add
jle
in
lock
xor
dec
and
aaa
mov
fwait
rolb
pushf
test
addb
out
inc
mov
leave
pop
jle
add
mov
mov
scas
test
in
push
cmp
loope
test
je
lret
lcall
pop
push
call
sub
sbb
cmp
aaa
add
imul
sar
rcll
addb
xchg
clc
jns
add
ffree
add
add
iret
test
mov
or
rolb
out
divl
mov
mov
cmp
inc
push
mov
jae
add
inc
sub
adc
out
add
cmp
add
fstps
popl
dec
aas
movsb
lods
xor
xchg
jnp
sti
addr16
mov
and
mov
mov
ljmp
mov
add
cwtl
mov
fistpll
data16
lret
push
icebp
leave
push
adc
cs
pop
mov
enter
fsubr
mov
daa
sbb
add
dec
movsb
rolb
or
cmp
add
faddp
je
add
loope
lea
in
dec
cwtl
bound
push
cs
inc
add
dec
stos
loop
xor
ss
imul
dec
aas
jg
cmpsb
pop
mov
adc
sub
mov
fnsave
xchg
lahf
jmp
push
movsl
incl
add
out
and
stc
in
stos
add
inc
mov
imul
leave
sahf
pop
test
loop
hlt
iret
test
mov
addb
dec
imul
fs
fcomps
lret
fistps
add
add
loope
cmp
inc
push
mov
popf
add
adc
fs
cmp
mov
aaa
ds
insb
sub
inc
test
push
and
jb
jbe
hlt
decb
mov
add
pop
sub
repz
mull
xchg
mov
push
repz
clc
jo
mov
jecxz
gs
mov
push
xchg
mov
and
mov
jnp,pn
clc
lods
repz
and
jecxz
test
aad
add
cmp
les
sbb
aad
shrl
iret
cltd
or
or
sti
lea
sub
add
outsl
or
scas
lods
jmp
xorl
dec
out
rcrl
outsl
xor
add
sub
xor
neg
bound
adc
add
xor
mov
or
sub
sti
lahf
jbe
jb
sub
ret
dec
inc
imul
insb
and
xor
xchg
int
pusha
add
jmp
ljmp
xchg
rcll
mov
add
sub
add
iret
push
mov
jp
sub
imul
inc
arpl
xchg
sahf
mull
pop
sbb
mov
add
mov
jne
add
stos
int
dec
pop
rorb
push
pusha
add
cmp
xchg
das
movsl
pushf
push
xchg
sbb
das
fcomp
in
inc
das
in
cld
inc
filds
add
cmc
mov
xlat
pop
mul
sbb
dec
sbb
stc
pop
cmc
stos
sti
xor
insl
sti
adc
add
imul
in
iret
mov
mov
dec
mov
test
gs
clc
xchg
mov
pop
sub
notl
lahf
pop
sbb
mov
les
mov
xor
pop
lret
jae
fistpll
add
int
mov
xchg
pop
lods
arpl
aad
jecxz
jno
repz
sub
add
mov
add
sub
lock
add
js
xchg
ljmp
rcrl
add
outsl
loopne
shl
dec
cmpsb
cld
cmpsb
add
inc
add
addb
and
in
push
cmp
jae
push
dec
out
ja
add
xor
adc
bound
add
sbb
push
mov
out
ret
adc
push
into
push
jnp
and
mov
mov
xchg
xchg
addr16
adc
int
in
jge
mov
xchg
daa
ret
or
mov
imul
mov
pop
sbb
cbtw
mov
dec
jmp
enter
jmp
add
add
mov
jl
mov
inc
add
imul
add
stos
jmp
add
add
jmp
adc
fistpl
cmp
and
push
in
jmp
sti
sar
add
sbb
pop
xchg
and
sahf
adc
adc
add
data16
and
or
mov
cmp
pop
mov
xlat
lods
enter
iret
push
lock
jo
inc
add
outsl
sti
sub
rep
xchg
mov
hlt
lret
xchg
mov
pop
loopne
jmp
dec
clc
movsb
shlb
mov
bound
test
mov
add
in
movsb
int3
mov
xor
xchg
test
jb
lret
js
fsubs
adc
lcall
cmp
es
addb
or
popa
sub
into
sub
push
xchg
mov
out
enter
lcall
pop
and
cmpsl
insb
jl
inc
cmp
aaa
stos
adc
xchg
sub
popa
enter
shr
in
lods
jb
std
adc
dec
jno
stos
add
add
sbb
pop
dec
rolb
cmp
add
or
repnz
in
inc
insl
nop
aad
push
add
decb
jnp
in
xchg
xchg
inc
ret
or
daa
addb
add
adc
sub
test
xchg
hlt
ret
clc
pop
ret
ljmp
in
pop
les
test
jo
cmp
add
fisttps
mov
cmp
test
clc
mov
and
lret
imul
jg
add
or
inc
add
xchg
push
push
sub
dec
or
lahf
jge
xchg
gs
adc
mov
ficomps
dec
add
and
jo
sub
pusha
add
mov
ret
mov
stos
fucomi
mov
out
fcmove
pop
dec
push
and
pop
xchg
sub
and
cmpsb
push
in
xor
dec
in
mov
jns
adc
fxtract
inc
faddl
jle
inc
lea
lds
movsb
sub
fdivs
add
push
fdivrs
adc
dec
out
mov
into
arpl
jns
imul
popa
xchg
push
ja
jbe
dec
enter
mov
mov
add
test
push
mov
repz
std
sbb
adc
add
cwtl
lods
jmp
adc
dec
ds
stos
fistl
insb
and
sub
outsb
mov
test
pop
mov
imul
cmpsb
outsb
add
pop
adc
mov
stc
sarl
stc
js
aas
adc
pop
mov
mov
iret
cmpsb
int
mov
repnz
int
dec
aam
mov
jbe
in
daa
mov
sahf
jle
cmp
adc
lods
mov
jne
lods
xor
rol
icebp
lods
cmp
ss
sub
js
mov
dec
xor
fcomp
cmc
stc
xor
loopne
addb
push
sahf
das
and
aaa
std
add
add
inc
add
imul
enter
outsl
push
cs
je
dec
movsl
mov
mov
fs
mov
add
loopne
test
push
je
add
sbb
add
add
cmp
test
mov
mov
or
icebp
jno
and
and
jge
fisttpl
mov
lret
stos
scas
fs
inc
js
jl
xchg
mov
cli
icebp
ret
test
pop
jo
pop
sub
push
lods
nop
test
add
add
add
lcall
in
cld
mov
stos
outsb
jns
cmp
sub
inc
add
xchg
sti
cmp
fdivs
shr
jb
lods
push
pop
out
sub
ret
stc
mov
add
add
xchg
dec
aas
insl
jo
cmpsb
call
rcl
inc
leave
push
mov
inc
movb
call
rolb
rorl
pusha
add
leave
adc
push
mov
in
sbb
lcall
test
xor
imul
std
pop
add
mov
cltd
test
lock
cmp
aad
rcll
fimuls
push
nop
cmp
jmp
add
cmp
notb
repnz
add
incl
add
add
sbb
inc
add
movsl
inc
add
cld
iret
fidivl
call
inc
cli
mov
adc
mov
lret
jmp
scas
lea
pop
xchg
lcall
xlat
movsl
sub
add
scas
hlt
pop
add
mov
xor
shrl
lods
lods
add
js
add
out
out
ds
add
ljmp
jne
jecxz
mov
mov
mov
insl
ds
dec
mov
inc
push
loope
push
add
aaa
push
add
hlt
insb
push
sti
inc
push
and
add
stc
pusha
add
mov
scas
mov
mov
pop
into
adc
loop
call
cmp
mov
dec
pop
mov
add
fwait
imul
pop
popa
scas
mov
cmc
cwtl
adc
mov
xor
sbb
or
in
inc
data16
movl
mov
jge
push
add
push
ja
xor
cwtl
out
inc
add
test
and
in
dec
dec
xchg
vmaxss
sub
aad
jns
pop
scas
bound
mov
sub
push
out
push
loop
js
add
movsb
enter
xchg
jl
xchg
mov
mov
aaa
ficompl
nop
adc
or
mov
pop
cmc
xor
push
add
std
xchg
mov
add
filds
ret
add
ja
push
shll
mov
add
add
inc
add
mov
cmp
jo
addb
xor
jb
push
push
bound
pop
mov
xchg
adc
xor
dec
xchg
data16
adc
iret
mov
in
ficompl
sbb
cmp
clc
add
in
and
jbe
dec
mov
sbb
fwait
mov
movb
cmp
push
gs
mov
add
jmp
aaa
imul
sub
sbb
cmp
add
loopne
lret
in
and
dec
xchg
mov
adc
hlt
movsb
clc
jl
mov
ljmp
or
mov
callw
imul
sub
jno
sub
icebp
add
aad
pop
cmc
mov
out
add
leave
icebp
sbb
mov
cltd
and
push
inc
sbb
sbb
test
iret
jg
xchg
cmp
jecxz
insl
push
jmp
test
lock
imul
lret
inc
add
iret
add
push
mov
dec
jmp
add
sti
insb
std
icebp
out
inc
add
push
push
push
ljmp
jmp
lods
or
add
sarb
or
lret
add
aam
cmpsb
cmp
adc
add
aas
sub
add
lret
bound
mov
gs
insl
std
sbb
imul
dec
fimull
aaa
mov
pop
movb
pop
stc
ja
xchg
sbb
lods
push
dec
je
adc
sub
les
addr16
ret
jle
push
xchg
imul
loop
mov
inc
add
out
mov
add
xchg
fmull
jl
sbb
cmp
cli
incb
and
adc
inc
push
jp
outsl
push
jb
mov
add
xchg
inc
add
jbe
iret
movb
push
xchg
insb
daa
jp
adc
int3
movb
sub
or
add
insb
fdivrs
adc
and
fs
lea
adc
jo
fidivs
mov
inc
add
cmpsb
movsl
aaa
out
imul
jnp
cltd
fidivrs
and
xchg
and
ret
insb
and
mov
or
in
out
movsl
mov
imulb
out
insl
dec
mov
push
lock
mov
pcmpeqw
testb
mov
leave
in
dec
addr16
sti
adc
mov
cs
loop
fmull
add
adc
add
mov
leave
clc
popa
mov
js
pop
adc
dec
adc
js
fsubrs
add
jecxz
das
mov
outsl
mov
add
xor
sbb
and
or
bnd
popa
leave
ret
adc
xchg
pusha
add
icebp
in
push
cmp
mov
cmp
sbb
cmpl
pusha
add
mov
mov
rolb
loop
add
hlt
cmc
pop
xchg
cmp
add
dec
or
jbe
test
cmp
test
mov
sub
addb
jg
cmp
fs
dec
imul
lea
iret
mov
xchg
inc
adc
add
mov
fsubr
mov
xchg
scas
ljmp
jo
push
leavew
push
cmpsb
ds
addr16
jnp
sti
inc
lods
mov
leave
jmp
daa
jb
jg
shr
xchg
fsubrp
pop
pop
int3
bound
or
sbb
test
push
mov
push
mov
and
sbb
add
fs
int3
ss
pop
cs
je
cmp
loopne
hlt
movsb
push
gs
adc
sahf
sub
jmp
mov
mov
frstor
add
add
sti
rolb
gs
push
idivl
daa
in
inc
add
xor
shl
xchg
sbb
mov
ljmp
iret
movsb
stc
push
aad
fidivl
jge
push
cmpsl
xor
xor
mov
js
add
pop
sub
in
es
inc
add
mov
add
pop
cli
xchg
into
push
add
or
es
lock
cmc
mov
test
mov
add
add
pusha
add
sti
jecxz
leave
inc
add
loope
in
rcrl
rolb
imul
test
and
xlat
jl
imul
or
dec
xchg
jmp
leave
mov
dec
cmp
loope
xchg
lea
test
and
xchg
pop
sbb
test
out
data16
cwtl
and
fisubl
or
sub
nop
cld
inc
inc
and
dec
cmp
leave
xor
scas
repz
in
das
pop
mov
add
scas
mov
add
add
dec
imul
sub
pusha
add
rolb
or
pop
jns
mov
sbb
xchg
pop
pop
push
fadds
lds
lds
fwait
out
inc
add
mov
mov
or
negl
imul
fisttpll
pusha
add
aad
into
cltd
out
test
mov
add
daa
fisttps
inc
add
add
enter
jecxz
cld
mov
xchg
and
add
loopne
loopne
add
mov
addr16
lahf
sbb
sbb
imul
sti
dec
mov
in
insb
stc
fdivs
testb
add
lcall
es
add
push
add
aas
xchg
or
sbb
sbb
add
lahf
adc
push
scas
pop
xor
sbb
inc
add
aaa
mov
imul
fiadds
add
push
cmpl
xor
lret
sub
add
add
std
fs
add
cmp
fwait
out
adc
ljmp
dec
test
repnz
push
add
lock
bound
lods
push
fwait
test
jbe
adc
lds
lock
ja,pn
dec
sbb
pusha
add
adc
add
pop
push
push
mov
mov
cmp
push
push
add
mov
add
test
mov
push
ret
imul
cmp
add
xchg
pop
mov
insb
inc
add
iret
outsl
in
dec
pop
push
xchg
sub
jg
xchg
xchg
inc
mov
fcomps
stc
rolb
out
mov
xchg
jp
mov
push
sbbl
imul
das
add
jle
xlat
xor
xor
sbb
fidivrs
xchg
nop
mov
aas
enter
sub
add
enter
rclb
inc
add
pop
mov
popf
shrl
cmp
fisubrs
push
ds
jns
pop
mov
scas
cmpsl
enter
jl
xchg
lret
rol
mov
addb
or
fistpll
mov
leave
mov
dec
inc
jo
call
es
sbb
sarl
repz
mov
push
popa
jmp
aam
fs
add
and
inc
add
and
jb
dec
sbb
mov
cmp
add
fldl
dec
dec
cmpsl
nop
rcrb
or
and
mov
nop
in
movsl
pop
adc
dec
push
lock
mov
ret
jp
nop
bound
stos
arpl
je
and
insl
xchg
inc
cmp
push
mov
push
or
mov
cmp
xor
shll
add
fildl
cwtl
sbb
mov
jmp
xor
inc
xchg
insl
xchg
test
bound
les
into
popf
movb
int3
test
pop
nop
jle
or
inc
add
lea
xor
mov
mov
sub
sub
daa
movsb
shll
mov
pusha
add
mov
add
lock
aas
add
shr
int3
inc
xchg
sub
mov
in
mov
inc
add
shlb
nop
or
mov
xchg
in
xchg
dec
and
stos
mov
xor
lods
push
sub
inc
add
add
xor
ret
insb
inc
add
sbb
add
mov
inc
fdivrp
push
push
inc
sbb
icebp
repz
cltd
out
push
add
decl
sbb
xor
xor
push
pushf
mov
or
js
pop
xchg
call
jb
dec
addb
add
fists
rcl
andl
in
test
jp
push
jg
imul
jns
sbb
xchg
adc
popf
xchg
hlt
mov
mov
pop
inc
ss
insl
es
mov
pop
leave
ja
rcl
sub
push
mov
lret
outsb
repnz
fsub
je
iret
push
xchg
or
shr
enter
movsl
rcr
sub
pushf
push
dec
int
stc
nop
pop
push
rcl
bound
shr
add
jb
add
jecxz
push
sub
out
add
and
dec
daa
mov
pop
or
xor
sbb
outsb
mov
iret
rcll
mov
mov
imul
pushf
pop
xchg
cmp
imul
addb
scas
pop
mov
mov
popa
mov
xor
or
push
cli
lds
iret
push
and
vmovdqu
add
cmp
push
mov
xor
mov
mov
sub
pop
mov
iret
mov
mov
ret
in
inc
sub
pop
test
ret
xchg
enter
les
mov
sbb
add
inc
in
push
std
insl
stos
pop
mov
pop
jns
mov
shl
pop
mov
push
int3
fimull
enter
and
add
and
fnstenv
mov
add
scas
sbb
xchg
jp
mov
and
out
pop
fwait
cmp
xor
push
cld
inc
shlb
jae
addl
addb
ret
je
stc
sbb
pop
sbb
iret
iret
fstp
in
lcall
emms
adc
xor
xor
aad
movsb
scas
xchg
xchg
std
xor
cwtl
push
add
add
jb
and
scas
pop
sub
movb
fsubl
jmp
and
cli
cmp
or
inc
nop
mov
mov
insb
xchg
popf
fisttps
inc
add
add
rolb
xchg
mov
nop
outsb
mov
mov
out
xchg
stos
pusha
add
js
add
popa
xor
mov
lods
lods
mov
mov
xchg
test
test
fildll
add
pop
and
sub
jecxz
push
lds
pop
addb
mov
or
mov
xchg
js
out
cmp
jns
mov
mov
movsb
test
or
mov
loopne
mov
fmul
es
outsl
mov
ljmp
push
insl
push
dec
data16
mov
lahf
add
mov
sbb
jge
or
lcall
ret
dec
outsl
mov
ret
fisubl
mov
push
inc
add
fs
jmp
xchg
xchg
movsb
jge
cmp
cmp
sub
xchg
aad
add
cmpsb
jne
add
sub
hlt
xlat
sub
mov
movsl
xchg
dec
xor
cwtl
jno
loop
xor
in
mov
jae
cltd
test
cld
xchg
loopne
push
dec
xor
add
xchg
les
dec
int
add
in
mov
fstpl
add
mov
add
sub
sub
xor
dec
lret
xor
jmp
and
pop
bound
sub
fcoms
jns
in
and
inc
add
mov
insb
sahf
adc
scas
cmp
mov
lds
jecxz
fcoms
or
and
add
sub
fnsave
cmp
add
add
bound
sahf
inc
add
cwtl
adc
fbld
mov
loop
adc
xchg
sbb
into
mov
push
movsb
mov
rorl
int3
push
sbb
fwait
adc
sub
ja
push
lock
addb
dec
lock
imul
and
scas
dec
into
cmp
mov
ret
lcall
ret
mov
mov
outsb
stos
inc
add
lahf
cmpsl
lahf
jae
dec
dec
ss
cmp
xorl
add
ja
add
cld
cmp
inc
rorl
mov
out
imul
jne
psllq
jae
jmp
mov
xor
cmp
add
adc
pop
clc
push
mov
sti
repnz
sbb
repnz
fincstp
cmp
cmp
into
stc
jmp
enter
std
ficoms
inc
add
push
es
push
fmuls
jmp
inc
add
or
lahf
das
lds
add
mov
cmc
lds
sub
push
or
xchg
addb
movb
add
pop
adc
add
pop
lods
adc
pop
mov
cmp
inc
push
pop
in
push
mov
add
clc
jno
roll
push
sti
push
adc
sbb
dec
inc
pushf
jno
iret
test
push
iret
sbb
or
fldcw
pop
mov
mov
add
cld
push
add
clts
add
fildl
dec
ja
jge
lock
add
ret
outsb
int
and
sbb
push
lds
nop
imulb
loop
mov
mov
test
sarb
ja
mov
pop
push
mov
testb
add
mov
in
add
addr16
aas
sbb
rolb
aas
adc
std
loope
inc
popa
insb
jns
xor
jo
or
xchg
repnz
outsb
and
lods
lahf
sub
pop
mov
xor
cmp
ja
adc
lods
mov
xchg
popf
mov
je
and
bound
repz
pusha
add
add
jae
dec
and
ja
addb
inc
lock
inc
jg
add
sarl
push
dec
pop
mov
imulb
ds
xor
stos
fst
loopne
xor
sbb
int
jb
dec
jnp
push
jge
push
lret
hlt
cmp
mov
add
xchg
fdivr
lods
xor
aas
cli
sub
cmpsb
jmp
setne
aas
push
cmp
test
sub
sub
or
data16
adc
cmpsl
notl
aad
imul
pop
insb
cld
mov
or
aaa
or
repnz
addb
adc
cltd
and
out
push
hlt
in
sbb
jae
stos
aam
mov
mov
stc
sbbl
add
pop
test
add
rep
stos
sbb
jp
add
xchg
in
inc
and
leave
cld
push
add
adc
loop
push
pop
lret
pop
inc
add
and
xor
int
hlt
jge
pushf
je
and
jne
popf
or
stc
xchg
lcall
out
sub
push
imul
jp
lods
cs
add
adc
std
cli
fmul
int
scas
and
imul
xchg
jb
jno
add
mov
push
lret
cmp
add
add
imul
sbb
mov
add
pop
and
shrl
inc
add
xchg
mov
mov
add
cmp
lret
mov
in
xchg
xor
add
addb
ljmp
xchg
fldenv
mulb
clc
or
fmuls
les
xchg
sub
dec
loope
add
mov
xchg
fbld
int
cmp
ss
testl
mov
add
xlat
add
jmp
in
loopne
sub
ja
xor
das
mov
xchg
sbb
fcoml
clc
dec
ret
dec
lds
and
push
sbb
xor
in
add
fdiv
fsubrl
push
push
add
add
fcmovne
addr16
and
add
pop
pushf
sub
jmp
sub
fwait
jmp
mov
mov
addb
test
popf
or
stos
test
mov
sub
mov
popa
mov
inc
sbb
add
iret
jne
test
lret
nop
bound
push
mov
add
xor
subl
jge
push
es
dec
addr16
in
or
les
clc
dec
lcallw
xchg
inc
inc
jne
int3
imul
xchg
pop
jo
outsb
ret
cmp
sahf
mov
push
inc
sub
push
popf
lock
sbb
xor
xlat
pop
pushf
int
adc
mov
add
add
add
fwait
test
addb
pop
test
sbb
adc
aad
in
jg
shlb
fs
out
cmp
in
xchg
clc
ret
notl
gs
jle
add
mov
outsb
fbstp
and
push
orl
in
loope
jp
xchg
shrb
out
lock
xor
add
pop
mov
call
push
in
addb
xchg
jo
inc
add
aas
xor
ljmp
daa
repz
add
xor
dec
lea
dec
dec
mov
sbb
fstps
bnd
and
dec
pop
rcll
cmp
test
ja
sub
xchg
mov
mov
mov
mov
rolb
fs
or
js
add
das
add
add
lahf
or
inc
add
sub
push
sub
jle
push
lret
pusha
add
jnp
lahf
or
flds
rol
cli
and
imul
or
test
out
lods
or
inc
add
jb
adc
stos
push
and
cltd
inc
add
fwait
pop
mov
xor
lcall
add
rolb
pop
arpl
movl
mov
pop
sbb
push
test
jno
arpl
lds
sub
add
lods
mov
incl
add
jmp
mov
mov
movb
add
push
fidivs
fisttpl
into
add
stc
cmp
push
mov
mov
add
daa
fadd
ss
test
add
add
add
inc
add
movsb
or
bound
rorl
addr16
inc
xor
data16
pop
add
add
es
pop
mov
jb
or
add
movb
add
rcl
xchg
cmp
add
xchg
cmpsl
mov
pop
rcrb
adc
ja
mov
dec
stos
adcl
and
mov
and
add
add
and
or
cmp
scas
lea
inc
xor
cli
fidivl
xchg
dec
das
loope
roll
lret
cmp
xor
add
jmp
xchg
xor
add
push
leave
pop
push
mov
push
insl
sbb
cwtl
addb
mov
and
fsubrl
ficompl
mov
movsl
testl
sbb
das
mov
adc
addb
movb
add
lret
add
out
mov
add
fiaddl
or
adc
cltd
popf
std
jmp
call
push
mov
add
cmp
mov
jnp
jns
fwait
adc
stos
xchg
add
dec
jns
das
pushl
cli
xor
fdivrl
mov
sub
loopne
jmp
and
cld
jecxz
xchg
mov
push
jnp
ffree
jae
int
pop
dec
mov
lcall
and
sub
add
hlt
fstps
sahf
mov
sarb
loop
mov
cs
mov
adc
push
lods
jge
cmc
fcompl
imul
cmp
in
jmp
inc
cmpsb
addb
adc
ss
inc
movsl
mov
add
add
loope
ljmp
and
mov
data16
pop
push
pop
jns
lret
xchg
push
add
shl
jae
add
jg
push
mov
sub
inc
add
imulb
call
shlb
mov
fstl
and
or
add
sbb
push
sbb
ret
pop
adc
ja
add
repnz
add
pop
fstps
stos
adcl
dec
and
dec
xchg
sbb
rolb
ljmp
fstps
dec
outsb
mov
mov
aas
inc
movsb
add
mov
inc
mov
movsl
mov
cmp
dec
jne
sbb
add
or
cmc
dec
shrl
xor
inc
adc
setg
and
cmp
pmulhuw
aaa
frstor
sbb
aaa
imul
sbb
pusha
add
jns
push
add
loop
dec
mov
add
cmp
jns
inc
mov
fsubr
sti
adc
jnp
lds
jmp
sbb
add
xchg
outsl
fcoml
pusha
add
pop
outsb
and
dec
aad
mov
lret
jg
sbb
xor
jne
push
fdivs
test
dec
mov
sbb
cmpsb
sarl
add
adc
test
popa
sub
push
stos
and
xor
or
rcrb
pushf
xor
sub
or
hlt
sbb
push
dec
jmp
xchg
aam
lods
jnp
divb
add
jecxz
ljmp
xchg
jnp
call
mov
or
scas
pop
stc
rcll
or
test
fstpt
sti
and
xor
or
jmp
lock
adc
xchg
mov
cmpsb
inc
jns
mov
add
cmp
fsubr
or
jp
enter
jecxz
mov
push
adc
push
or
mov
clc
fisubrs
mov
shl
and
rcrb
enter
xor
mov
icebp
pop
or
enter
rcll
addb
mov
jle
sbb
push
movsb
mov
inc
mov
mov
in
je
add
out
xor
cs
fmuls
xchg
gs
pop
xor
xchg
in
stc
repz
pop
dec
aaa
and
out
ror
mov
mov
add
sbb
cmp
hlt
cmp
add
out
pusha
add
dec
pop
adc
enter
aam
add
mov
xor
lods
sub
push
lahf
loopne
aad
xlat
mov
and
scas
adc
mov
int
testb
add
mov
cltd
mov
cmp
mov
mov
dec
xchg
ret
repz
fldt
add
jge
mov
imul
std
push
inc
jmp
pusha
add
jmp
sub
pop
xchg
mov
dec
movsl
cmp
dec
and
loope
adc
sub
ds
icebp
sub
xchg
and
mov
sbb
inc
ds
adc
into
leave
pop
fxch
fidivrs
lock
jecxz
cld
jmp
xchg
jl
subl
call
add
fldenv
add
pop
out
es
sub
cs
andl
push
pushf
lock
cmc
fcomps
nop
adc
add
int
sbb
popa
or
mov
push
sti
daa
dec
js
and
jb
pop
pop
push
push
subl
cld
jae
adc
lock
or
hlt
mov
popf
xchg
adc
xlat
xor
mov
cmp
inc
add
and
scas
jmp
loope
iret
jl
test
cmp
out
cmove
fistps
xchg
or
call
icebp
les
mov
sub
in
mov
add
add
xchg
xlat
test
add
cmp
jmp
xor
xor
cmp
add
add
lods
gs
push
fadd
movsl
sub
sbb
icebp
push
sbb
add
push
in
loopne
pop
dec
mov
inc
add
or
mov
les
add
pop
fcomps
add
dec
xchg
rolb
and
scas
inc
add
ss
fwait
jnp
ljmp
rolb
outsl
enter
cltd
jle
js
pop
rol
mov
loop
jb
jl
out
movsl
inc
add
rolb
mov
jo
in
pushf
in
mov
iret
cmp
add
out
stos
inc
add
aas
jnp
mov
ds
js
ret
pop
inc
add
fnsave
add
add
pusha
add
dec
push
add
rcrl
les
xchg
mov
mov
dec
out
imul
lods
xor
xchg
cmp
xchg
or
sbb
hlt
inc
add
xor
cmp
aad
add
hlt
xor
pop
icebp
cmpsb
jmp
mov
add
and
cmpsl
dec
push
inc
popa
mov
sbbl
scas
fists
dec
pop
jg
movb
add
add
cmp
push
lret
inc
sub
loopne
sub
jle
push
xor
pop
add
push
jbe
sbb
xchg
push
sarb
sarl
inc
add
in
popf
ror
pop
fildll
add
es
sbb
mov
xchg
test
mov
je
das
hlt
daa
out
mov
mov
roll
inc
add
cmpsl
cld
add
xchg
xchg
ljmp
in
pop
pop
in
push
movsb
cmc
rolb
sti
jae
add
xchg
lret
sbb
or
jb
dec
inc
roll
xor
adc
pop
pop
sbb
add
pop
int3
insl
jmp
xchg
pusha
add
add
repnz
shrl
std
fwait
dec
mov
sti
mov
add
push
add
mov
pop
and
adc
xor
add
add
sub
sti
sub
sti
inc
add
clc
xchg
push
fcoms
fs
add
push
aas
mov
pop
rolb
add
imulb
pop
push
adc
push
and
xor
mov
jae
inc
mov
add
clc
push
sbb
and
cs
jmp
push
test
popa
rolb
add
sahf
mov
rcll
aaa
sub
outsl
add
outsb
loopne
fimuls
mov
cmpl
fisubrs
aaa
jnp
pop
jno
add
shr
clc
mov
scas
and
stos
push
mov
push
xchg
repnz
xor
shrl
nop
loop
ret
cmp
cltd
incl
lods
test
popa
lea
fs
push
filds
loopne
add
inc
xor
xor
sub
adc
dec
or
push
sbb
inc
add
fadd
add
add
jle
or
mov
loope
or
add
mov
sub
and
aaa
cld
jbe
lods
frstor
enter
out
xchg
cmp
movsl
xchg
sub
mov
mov
mov
pusha
add
add
rclb
movb
mov
addb
adc
das
shll
sub
push
xchg
mov
leave
pop
shrb
nop
clc
sahf
mov
pop
dec
outsb
test
pop
daa
push
xchg
stc
test
test
outsl
lret
mov
prefetch
fidivs
push
mov
push
pop
or
call
movsb
shrl
add
pop
loopne
add
pop
xor
pop
mov
mov
clc
scas
mov
lods
xor
movsb
test
cli
add
cmp
addb
xor
xchg
out
add
das
test
fldenv
mov
add
test
pop
or
out
jecxz
leave
jo
mov
pop
xchg
add
mov
leave
fs
push
in
xor
xchg
or
inc
jp
cmp
sbb
div
dec
scas
jns
imul
pop
loope
dec
cmp
sub
test
jb
jg
addr16
adc
mov
mov
xlat
lahf
aad
repnz
shrl
loopne
pop
cmp
repz
cmpsl
icebp
xor
ljmp
mov
test
iret
sbb
jle
sbb
in
sub
xchg
loop
in
jb
in
cmp
sub
add
cmp
lds
daa
adc
push
pusha
add
mov
int
pop
sahf
fmull
adc
mov
mov
pop
rolb
xor
pop
fdivs
cli
lret
sti
add
xor
add
lret
adc
popf
push
sub
fcomps
pop
xchg
mov
push
add
sub
jmp
cltd
jo
fstl
add
add
je
je
add
pop
into
cmp
mov
push
out
ja
jno
dec
pop
cmp
shll
add
inc
popf
push
add
movb
adc
add
add
add
cmpl
loope
popa
mov
es
pusha
add
or
pop
inc
add
add
shl
shlb
dec
xor
maxps
add
enter
pop
les
aad
jnp
mov
addb
fstpl
xchg
cmpsl
jno
ret
mov
shl
inc
add
mov
scas
fsub
test
add
mov
and
gs
mov
adc
and
nop
pop
enter
pop
enter
mov
push
jmp
inc
add
cmp
fldt
loop
addb
popf
mov
push
xor
cmp
push
mov
inc
les
mov
pop
xchg
test
jo
fdivs
add
add
add
xor
mov
push
sbb
stos
addr16
sahf
jno
movb
fwait
test
mov
imul
add
movb
loopne
mov
xchg
stc
jge
add
dec
cmp
in
arpl
jmp
sub
mov
cmp
dec
or
cmp
or
aad
xchg
jl
xchg
cmp
mov
insl
dec
ret
or
and
fisttpll
xchg
test
imul
icebp
aad
push
push
mov
mov
mov
enter
bound
sub
pop
fsubs
add
push
aaa
jmp
dec
rcll
sub
leave
mov
cmp
aam
xchg
addl
int
lods
inc
jle
add
test
sbb
cs
mov
adc
aas
inc
add
stos
sbb
dec
insb
sub
lods
hlt
sub
jne
lea
pop
jae
mov
inc
add
sub
mov
je
out
cld
daa
mov
les
sbb
test
dec
mov
scas
out
dec
mov
lods
dec
lods
shrl
mov
sub
repnz
out
addr16
mov
cwtl
testb
bound
mov
mov
jecxz
or
dec
cmp
sbb
push
jp
in
shrd
ror
sub
ds
fildl
push
repz
std
insb
aad
pop
scas
mov
add
xchg
clc
fdivl
add
lock
dec
inc
add
inc
insb
popa
or
rorb
movb
mov
add
cmp
les
sbb
dec
stc
mov
jge
add
jno
jne
push
sub
add
cwtl
or
testb
add
insl
inc
addb
mov
xchg
sbb
fiaddl
and
insl
pop
mov
xor
add
mov
adc
movsb
or
aaa
mov
add
xor
movsl
jb
jp
xchg
fsubl
mov
add
movsb
in
movb
add
and
dec
inc
xchg
cmp
add
push
shrb
outsl
xor
lret
clc
mov
pop
pop
addb
sub
add
add
mov
faddl
add
mov
je
decl
hlt
imul
adc
mov
pushfw
in
clc
push
add
cmp
pop
jno
inc
add
add
pusha
add
push
popf
lahf
inc
push
add
idivb
xlat
cmp
cmp
push
inc
div
jp
jae
mov
add
fldl
les
or
mov
mov
pop
xor
cmp
mov
in
aaa
jno
mov
jge
test
das
ret
rclb
xor
mov
sti
sub
mov
mov
jl
mov
mov
lods
cmpsl
leave
dec
push
push
mov
adc
mov
stc
nop
es
subb
adc
nop
es
dec
pop
cmp
pop
push
mov
xchg
ret
mov
add
sahf
dec
stc
nop
es
scas
call
add
fistl
mov
xchg
ret
adc
lahf
stos
lahf
push
push
mov
xchg
ret
add
lea
cld
add
sub
test
and
add
nop
es
add
sub
sti
jecxz
add
mov
add
inc
cmp
icebp
nop
cld
nop
jmp
push
add
dec
add
push
mov
test
inc
sub
nop
es
add
add
push
mov
xchg
ret
and
lock
add
test
add
stc
nop
es
add
cmpsb
lods
mov
nop
cld
nop
jmp
bound
scas
rolb
pop
in
add
add
push
add
in
pop
cmpsl
add
leave
add
add
inc
sbb
outsb
xor
je
nop
cld
nop
jmp
movsb
inc
dec
push
addb
mov
stc
nop
es
stos
add
add
add
nop
es
add
cld
inc
add
popa
add
nop
es
movsb
or
or
fdivr
nop
es
add
add
push
mov
xor
inc
in
jl
stos
add
hlt
add
shr
stc
nop
es
lock
add
add
or
add
stc
nop
es
add
add
out
pushf
add
stc
nop
es
outsl
bound
add
sub
nop
es
add
dec
sti
add
stc
nop
es
add
in
sbb
in
pushf
add
mov
or
testb
mov
nop
es
add
ljmp
add
movsl
mov
clc
stc
push
push
mov
xchg
ret
mov
shr
in
lret
les
stc
nop
es
and
mov
stc
nop
es
stos
mov
add
mov
stc
nop
es
addb
jne
stc
nop
es
adc
inc
or
add
add
add
loop
mov
xchg
ret
jno
mov
cld
mov
add
push
mov
xchg
ret
add
mov
stc
nop
es
add
cs
scas
bound
xorl
es
dec
and
cwtl
fwait
add
push
mov
xchg
ret
test
or
add
add
push
mov
xchg
ret
fcoml
shr
stc
nop
es
mov
scas
lret
mov
stc
nop
es
or
add
popa
add
mov
xchg
ret
lret
add
or
nop
es
cs
bound
mov
stc
nop
es
push
add
cmpl
es
add
stc
nop
es
lock
inc
lods
add
add
test
nop
es
in
add
push
pop
add
stc
nop
es
movsb
add
pop
stc
nop
es
add
bound
lea
add
sar
nop
es
add
add
in
sbb
popa
stc
nop
es
add
cld
add
mov
jmp
clc
dec
lahf
or
mov
stc
nop
es
pop
add
cs
mov
nop
cld
nop
jmp
add
adc
add
call
add
add
nop
es
add
mov
push
mov
xchg
ret
shlb
fwait
mov
push
mov
xchg
ret
add
add
add
push
mov
xchg
ret
cltd
add
pop
xor
push
mov
xchg
ret
lea
das
call
stc
nop
es
sub
mov
dec
std
inc
add
xchg
mov
add
stos
cmp
nop
cld
nop
jmp
add
add
cli
mov
push
mov
xchg
ret
add
cld
addb
mov
adc
xorb
add
pop
add
mov
test
es
add
add
jecxz
cli
test
push
mov
xchg
ret
add
mov
xor
nop
cld
nop
jmp
mov
add
add
add
push
stc
nop
es
mov
add
add
and
nop
es
add
jno
add
fisttpl
cld
nop
jmp
jno
in
add
jle
movsb
stc
nop
es
add
lahf
mov
add
nop
cld
nop
jmp
add
add
add
cli
nop
cld
nop
jmp
cltd
cs
push
add
cld
jl
inc
lock
cld
nop
jmp
add
add
pop
stc
nop
es
stos
adc
or
mov
fiadds
xchg
ret
stos
add
in
mov
stc
nop
es
adc
add
add
mov
xchg
ret
mov
push
stc
nop
es
sub
bound
es
lea
add
sbb
add
pop
push
mov
xchg
ret
movsl
cmpsb
sub
js
dec
cmp
nop
es
or
movzwl
nop
cld
nop
jmp
add
sbb
test
test
sub
push
mov
xchg
ret
in
lret
cs
push
stc
nop
es
add
lock
and
inc
aas
mov
stc
nop
es
add
add
jb
and
push
mov
xchg
ret
scas
ja
add
and
imul
pop
add
add
stos
or
or
add
nop
cld
nop
jmp
xor
add
add
cmpsb
cltd
test
nop
cld
nop
jmp
add
pop
lret
add
dec
push
stc
nop
es
xor
mov
add
add
xchg
pop
push
stc
nop
es
movsb
rolb
xor
jmp
push
inc
cwtl
add
sbb
scas
cmp
movsb
stc
nop
es
pop
fsubrl
add
or
stc
nop
es
adc
add
push
mov
xchg
ret
movsb
add
sub
mov
xchg
ret
out
add
add
sbb
nop
es
add
add
add
je
sub
lods
filds
xchg
ret
add
add
jbe
loope
add
push
int
add
dec
add
xchg
ret
add
add
add
mov
cld
nop
jmp
add
pop
call
stc
nop
es
dec
mov
mov
mov
push
nop
cld
nop
jmp
add
add
pop
add
add
aam
mov
stc
nop
es
in
faddl
cs
imul
stc
nop
es
lods
cmpsb
add
jno
add
stc
nop
es
addb
add
mov
add
push
mov
xchg
ret
faddl
add
cld
nop
jmp
stos
ja
xchg
stos
add
in
jecxz
push
stc
nop
es
add
add
or
mov
incl
xchg
ret
outsl
ja
add
lret
das
pop
stc
nop
es
lods
or
add
add
add
jbe
stc
nop
es
add
out
ror
stc
nop
es
mov
pop
int3
xor
push
mov
xchg
ret
call
clc
jp
stc
nop
es
add
scas
add
pop
add
cmp
inc
add
cmpsb
add
inc
add
push
pop
jge
out
stc
nop
es
add
inc
add
les
cld
nop
jmp
add
add
add
add
pop
stc
nop
es
mov
inc
push
add
jne
stc
nop
es
push
cmpsb
inc
rorb
push
stc
nop
es
mov
add
jmp
jp
nop
cld
nop
jmp
push
mov
rclb
mov
enter
es
or
sbb
filds
xchg
ret
add
movsb
push
dec
cmp
nop
es
mov
dec
adc
call
stc
nop
es
mov
add
mov
xchg
ret
add
add
sbb
mov
xchg
ret
or
add
cmpsb
add
cs
push
mov
xchg
ret
add
add
or
nop
cld
nop
jmp
lods
lock
jb
lods
add
cmpsb
or
sbb
stc
nop
es
add
add
and
mov
push
mov
xchg
ret
or
call
nop
cld
nop
jmp
add
add
cltd
dec
je
stc
nop
es
mov
add
stos
stc
nop
es
mov
lea
or
add
nop
cld
nop
jmp
add
lret
les
stc
nop
es
cmp
arpl
dec
push
stc
nop
es
add
add
add
nop
es
add
test
add
add
cmp
es
add
jno
mov
or
stc
nop
es
add
push
mov
xchg
ret
add
mov
mov
push
mov
xchg
ret
add
pop
add
sub
add
jle
inc
add
test
add
add
loope
mov
stc
nop
es
add
add
add
add
add
stc
nop
es
adc
jmp
es
add
add
mov
push
stc
nop
es
add
cmpsb
add
add
push
mov
xchg
ret
ja
jno,pn
fstpt
nop
cld
nop
jmp
add
add
sbb
add
jl
nop
cld
nop
jmp
rolb
shr
add
mov
cmpsb
adc
nop
es
add
add
mov
movsb
stc
nop
es
add
add
add
lea
mov
adc
nop
es
movsl
add
and
stc
nop
es
in
rolb
add
inc
shll
mov
nop
dec
mov
nop
cld
nop
jmp
jno
clc
cmpsb
cmpsb
add
lcall
push
add
add
cmpsb
mov
sti
call
stc
nop
es
or
add
cmp
stc
nop
es
add
inc
add
mov
stc
nop
es
subb
mov
add
stc
nop
es
add
call
push
lock
add
add
add
movsb
push
push
nop
cld
nop
jmp
add
add
add
add
mov
cld
nop
jmp
bound
cld
lods
or
mov
nop
cld
nop
jmp
add
add
cltd
add
cld
nop
jmp
add
push
add
mov
xchg
ret
movsb
cs
mov
xor
nop
cld
nop
jmp
subb
add
sbb
push
mov
xchg
ret
add
add
lahf
jecxz
jnp
inc
or
cld
nop
jmp
add
movsl
mov
mov
mov
nop
jmp
add
add
xchg
faddl
xchg
ret
add
add
in
lret
push
cmp
nop
es
add
add
add
add
jmp
jmp
lret
add
stc
nop
es
cmp
scas
stos
insl
mov
stc
nop
es
or
fs
pushl
stc
nop
es
add
add
add
push
stc
nop
es
test
adc
push
test
nop
cld
nop
jmp
add
xchg
arpl
add
nop
cld
nop
jmp
add
cld
add
mov
add
mov
adc
nop
es
add
xchg
popa
scas
movzwl
stc
nop
es
cmpsb
add
or
inc
push
mov
xchg
ret
add
or
dec
adc
nop
es
in
rolb
jno
add
mov
mov
xchg
ret
or
mov
stc
nop
es
mov
add
lret
inc
sbb
nop
es
add
clc
mov
popf
movzwl
stc
nop
es
outsl
stos
dec
add
stc
nop
es
add
add
scas
xor
int3
add
stc
nop
es
add
add
add
inc
push
mov
xchg
ret
add
add
call
stc
nop
es
stos
add
add
movsb
add
fildl
xchg
ret
add
add
pop
pop
add
pop
add
add
sbb
add
scas
mov
pop
cmp
mov
xchg
ret
add
lea
add
sti
decl
str
mov
nop
jmp
add
xor
add
and
mov
xchg
ret
dec
add
add
mov
nop
cld
nop
jmp
mov
jno
clc
daa
push
jne
stc
nop
es
add
add
mov
stc
nop
es
faddl
or
nop
es
clc
lret
lea
dec
xor
jb
jno
or
movsl
scas
add
stc
nop
es
add
mov
add
cs
add
nop
cld
nop
jmp
add
add
stc
nop
es
add
xor
lods
outsl
test
sbb
stc
nop
es
pop
shrb
or
cld
nop
jmp
add
adc
lea
stc
nop
es
fsubl
ret
add
leave
sub
adc
add
lahf
add
nop
es
pop
add
lret
add
stc
nop
es
out
cmpsb
add
dec
or
popa
add
cld
nop
jmp
lahf
cs
add
test
nop
es
call
inc
sbb
stos
add
add
add
inc
add
push
jns
stc
nop
es
test
cmp
cmp
mov
push
nop
cld
nop
jmp
add
add
andl
jb
add
push
mov
xchg
ret
add
add
movb
cld
nop
jmp
add
add
jb
stc
nop
es
jno
shlb
std
dec
nop
cld
nop
jmp
cmpsb
xor
sldt
add
add
fisubrs
orb
push
lods
add
add
mov
nop
cld
nop
jmp
mov
add
add
add
and
push
mov
xchg
ret
pop
add
gs
mov
es
clc
mov
bound
dec
add
cld
nop
jmp
add
add
sbb
mov
call
nop
cld
nop
jmp
scas
push
add
add
stc
nop
es
or
lret
mov
shr
jmp
jb
push
add
cs
stc
nop
es
lods
stos
add
add
and
mov
add
add
stc
nop
es
add
ja
adc
cld
nop
jmp
add
fmull
cltd
sub
jb
shrb
lcall
nop
jmp
add
cmp
pop
add
and
xchg
jb
add
add
movsl
sbb
push
lahf
lea
push
mov
xchg
ret
add
clc
or
stc
nop
es
add
mov
add
mov
push
mov
xchg
ret
lea
xchg
add
or
es
add
add
or
jae
cld
nop
jmp
add
or
push
rolb
add
nop
cld
nop
jmp
inc
dec
ja
add
mov
nop
cld
nop
jmp
add
scas
mov
add
es
str
add
cld
jl
add
jnp
inc
add
dec
add
xchg
nop
cld
nop
jmp
add
lahf
ja
mov
ja
jo
add
push
mov
xchg
ret
dec
mov
dec
add
adc
les
nop
es
add
add
clc
add
repz
mov
nop
cld
nop
jmp
add
test
mov
xor
nop
es
jno
or
add
aam
add
stc
nop
es
cltd
lahf
mov
push
mov
xchg
ret
add
mov
stos
push
mov
xchg
ret
jno
push
add
jno
bswap
stc
nop
es
mov
or
lea
nop
cld
nop
jmp
and
or
or
add
es
add
xor
mov
stc
nop
es
lahf
push
outsl
dec
gs
ret
add
or
or
cltd
push
cmpsb
add
lods
add
mov
xchg
ret
add
add
dec
add
mov
xchg
ret
add
lods
bound
pop
push
mov
xchg
ret
cs
add
cld
nop
cld
nop
jmp
add
add
fwait
cmp
push
mov
xchg
ret
add
test
and
xor
add
nop
cld
nop
jmp
add
add
je
add
ret
stc
nop
es
add
dec
faddl
rclb
repz
add
add
scas
pop
xlat
xor
test
add
stc
nop
es
ja
add
push
push
mov
xchg
ret
mov
add
clc
mov
stc
nop
es
add
je
add
nop
cld
nop
jmp
add
bound
cltd
xor
stc
nop
es
pop
stos
mov
add
inc
lea
es
add
add
push
stc
nop
es
stos
adc
add
in
cld
nop
jmp
cmp
xchg
fldl
nop
jmp
add
lret
pop
pop
test
nop
cld
nop
jmp
add
mov
stc
nop
es
add
mov
arpl
add
add
stos
aad
pop
mov
push
mov
xchg
ret
cmpsb
add
sar
add
je
stc
nop
es
or
int
pop
jae
cld
nop
jmp
mov
add
lods
call
stc
nop
es
add
sbb
out
add
stc
nop
es
add
add
aad
nop
jmp
add
add
mov
or
nop
out
inc
add
add
add
add
cli
stc
nop
es
add
stc
nop
es
add
and
movsb
lea
xor
stc
nop
es
or
mov
cmp
pop
add
stc
nop
es
push
add
test
movb
add
nop
cld
nop
jmp
sub
push
stc
nop
es
dec
add
dec
pop
stos
add
push
push
stc
nop
es
call
imul
cld
stc
nop
es
xor
ja
xor
adc
stc
nop
es
add
dec
cmpsb
addr16
push
mov
sbb
loopne
dec
lahf
push
add
ljmp
pop
nop
cld
nop
jmp
or
pop
mov
add
mov
xchg
mov
stc
nop
es
add
add
add
pop
stc
nop
es
add
mov
mov
xchg
ret
lea
adc
imull
rclb
popa
std
inc
add
dec
addb
add
rep
nop
cld
nop
jmp
pop
lock
add
adc
sti
stc
nop
es
cmp
shrb
nop
es
add
cmp
or
incl
add
lea
in
add
mov
mov
add
adc
out
lea
push
mov
xchg
ret
adc
popa
call
jb
add
add
js
popa
add
nop
es
dec
add
test
push
mov
xchg
ret
xchg
add
rcrb
nop
es
jno
rcl
out
cs
stc
nop
es
add
jbe
stc
nop
es
scas
add
add
add
nop
es
and
add
test
nop
cld
nop
jmp
add
mov
lret
cmpsl
push
in
repz
dec
or
adc
add
add
insl
movswl
stc
nop
es
lahf
add
add
or
add
add
add
lea
stc
nop
es
or
add
add
jns
js
nop
cld
nop
jmp
dec
or
xor
mov
push
mov
xchg
ret
pop
add
or
mov
cld
nop
jmp
add
add
or
stc
nop
es
add
add
stc
nop
es
add
enter
jb
add
in
les
and
push
mov
xchg
ret
dec
scas
add
cs
stc
nop
es
mov
dec
dec
inc
nop
cld
nop
jmp
movsl
or
mov
mov
push
nop
cld
nop
jmp
add
add
add
adc
mov
xor
add
stc
nop
es
jno
repz
jno
mov
stc
nop
es
cltd
or
add
mov
inc
add
xchg
inc
add
test
jbe
stc
nop
es
mov
add
movsl
add
nop
es
in
add
cmpsl
movb
sbb
cld
nop
jmp
test
test
add
in
clc
jne
add
nop
cld
nop
jmp
add
add
loop
mov
push
mov
xchg
ret
lret
or
jnp
es
add
adc
and
nop
es
mov
mov
push
addb
in
push
stc
nop
es
cltd
mov
call
push
dec
lea
nop
cld
nop
jmp
xor
or
stc
jne
stc
nop
es
scas
mov
mov
push
mov
xchg
ret
add
add
push
cmp
es
add
call
cmp
add
push
mov
xchg
ret
bound
add
clc
repz
push
add
stc
nop
es
lret
stos
push
nop
cld
nop
jmp
lock
movsl
pop
mov
mov
push
mov
xchg
ret
adc
xor
lahf
sub
popa
add
nop
es
add
add
bound
add
xor
movsl
xchg
add
mov
inc
adc
nop
es
add
addb
add
xor
jno
add
stc
nop
es
stos
add
add
pop
add
push
stc
nop
es
mov
add
push
mov
stc
nop
es
add
add
lldt
pop
jne
stc
nop
es
sbb
cmpsb
add
mov
stc
nop
es
cwtl
faddl
add
sar
es
cmpsb
lret
lods
add
sub
inc
xor
nop
cld
nop
jmp
add
inc
or
nop
es
cld
add
add
add
add
es
and
add
mov
push
mov
xchg
ret
or
scas
clc
movsb
add
call
stc
nop
es
or
add
add
stc
nop
es
movsl
add
add
nop
cld
nop
jmp
movsl
add
add
std
mov
nop
cld
nop
jmp
addb
add
add
and
nop
cld
nop
jmp
add
add
outsl
lret
lock
cmc
inc
add
sbb
add
mov
add
nop
cld
nop
jmp
pop
add
add
or
cld
nop
jmp
xchg
adc
jno
push
push
mov
xchg
ret
clc
test
add
ret
insb
inc
stc
nop
es
add
cmpsb
cld
add
stc
nop
es
sbb
add
add
add
xchg
dec
mov
nop
cld
nop
jmp
mov
add
add
add
nop
cld
nop
jmp
add
cmp
add
add
nop
es
add
es
stc
nop
es
add
mov
push
mov
xchg
ret
add
add
pop
xchg
loop
push
mov
xchg
ret
add
add
nop
cld
nop
jmp
test
sbb
or
dec
inc
dec
stos
stc
nop
es
add
add
out
cmpsb
add
call
stc
nop
es
cltd
add
sbb
jb
pop
movsl
add
repz
push
stc
nop
es
sbbb
add
add
lea
stc
nop
es
dec
add
add
mov
add
push
stc
nop
es
add
add
add
cld
nop
jmp
add
test
mov
cld
nop
jmp
add
jno
add
stc
nop
es
faddl
add
push
push
mov
xchg
ret
cmpsb
push
fmul
add
lahf
or
jmp
add
stc
nop
es
mov
stos
add
cmpw
nop
cld
nop
jmp
xchg
mov
enter
into
clc
inc
add
clc
out
cmpsb
or
repz
nop
es
adc
add
push
jne
stc
nop
es
add
mov
icebp
inc
add
test
rcr
in
in
push
mov
cli
inc
add
stos
add
add
add
add
stc
nop
es
add
add
inc
push
mov
xchg
ret
call
mov
sub
push
mov
xchg
ret
add
add
cmp
call
and
stos
inc
in
scas
stos
add
lods
push
mov
xchg
ret
movsl
add
add
movsb
pushf
mov
stc
nop
es
add
dec
add
rclb
pop
loop
add
pop
movsl
cmp
loopne
mov
xchg
ret
call
aad
mov
pusha
stc
nop
es
add
lea
cmpsb
add
rcrl
jne
stc
nop
es
add
lea
es
mov
add
cmc
jp
repz
nop
es
add
add
xor
stc
nop
es
add
call
stc
nop
es
inc
outsl
cmp
pop
adc
add
add
push
stc
nop
es
shlb
add
scas
pop
out
push
push
mov
xchg
ret
add
ljmp
inc
add
mov
dec
mov
push
stc
nop
es
cmpsb
rorb
add
les
mov
stc
nop
es
adc
add
pfcmpge
es
mov
inc
push
mov
xchg
ret
add
mov
add
mov
nop
cld
nop
jmp
call
add
es
add
add
or
add
add
mov
stc
nop
es
add
add
push
mov
xchg
ret
ja
mov
add
cmp
nop
es
or
sbb
nop
cld
nop
jmp
add
addb
mov
stc
nop
es
add
xorb
sub
jb
add
add
outsl
add
jmp
mov
adc
in
sbb
clc
stc
nop
es
add
inc
xsha1
cmpsb
or
stc
nop
es
add
add
daa
push
into
jmp
nop
cld
nop
jmp
add
lahf
pop
stc
nop
es
lods
cltd
add
push
and
nop
cld
nop
jmp
add
add
add
lods
hlt
aaa
notb
add
add
stc
nop
es
xor
xor
add
stc
nop
es
add
lock
jno
push
stc
nop
es
inc
add
add
jmp
nop
cld
nop
jmp
cld
cld
stos
pop
xchg
nop
es
add
mov
mov
push
mov
xchg
ret
sbb
mov
add
out
mov
stc
nop
es
add
movsb
adc
repz
stc
nop
es
adc
icebp
stc
shl
stc
nop
es
dec
faddl
jno
add
dec
dec
push
mov
xchg
ret
mov
add
sbbb
dec
cmp
nop
es
cwtl
cs
in
add
push
mov
nop
cld
nop
jmp
dec
add
cwtl
sub
and
nop
es
test
jmp
stc
nop
es
pop
cld
cld
lret
outsl
arpl
add
nop
es
or
push
add
mov
inc
add
add
movsb
lret
add
add
idiv
fdivl
lea
es
or
out
ja
nop
cld
nop
jmp
cmpsb
clc
cld
mov
xor
stc
nop
es
add
popa
incb
nop
es
add
add
push
in
jne
nop
cld
nop
jmp
mov
mov
stc
nop
es
add
push
add
cld
push
add
stc
nop
es
cwtl
add
or
nop
cld
nop
jmp
in
add
add
cmpsl
gs
ds
stc
nop
es
add
add
in
add
and
or
xor
add
stc
nop
es
call
stc
mov
stc
nop
es
add
mov
cmpsb
and
decl
push
mov
xchg
ret
call
sub
inc
and
nop
es
rolb
sub
stc
nop
es
sub
push
nop
cld
nop
jmp
dec
lahf
add
add
test
add
jb
lea
add
add
cmp
jbe
stc
nop
es
call
adc
add
nop
cld
nop
jmp
pop
mov
add
dec
add
cmp
dec
or
mov
xchg
ret
add
fisttps
es
outsl
add
add
push
mov
xchg
ret
mov
mov
rolb
sub
mov
xchg
ret
add
jb
sbb
stc
nop
es
or
test
nop
cld
nop
jmp
add
add
add
dec
xor
stc
nop
es
dec
add
fsubs
xor
add
stc
nop
es
pop
ja
add
add
add
nop
cld
nop
jmp
mov
out
add
add
add
mov
mov
stc
nop
es
sub
jbe
stc
nop
es
lret
rclb
add
add
std
incl
add
add
sbb
push
mov
xchg
ret
verw
fsts
cld
nop
jmp
cmp
lock
add
movsb
add
add
stc
nop
es
call
mov
nop
cld
nop
jmp
or
in
xchg
or
nop
es
add
pop
lea
movsb
lcall
add
nop
es
add
xchg
mov
jmp
stc
nop
es
xorb
sar
es
movsl
pop
mov
add
pop
lea
push
mov
xchg
ret
add
stos
cmp
push
stc
nop
es
add
cld
lahf
addb
push
nop
cld
nop
jmp
in
adc
dec
mov
push
stc
nop
es
scas
add
jne
stc
nop
es
dec
add
and
stc
nop
es
add
add
insb
insb
add
stc
nop
es
lods
add
daa
jnp
pushl
stc
nop
es
add
add
mov
jp
push
mov
xchg
ret
add
lahf
sub
nop
es
add
add
add
mov
stc
nop
es
add
add
iret
xor
stc
nop
es
add
adc
add
and
loopne
add
nop
es
clc
in
lock
sbb
es
sbb
outsl
add
add
add
push
push
mov
xchg
ret
add
cwtl
add
outsl
vdivsd
in
fstpl
repz
lods
leave
lret
push
cli
loope
xchg
sbb
add
stc
nop
es
cmp
lea
push
mov
xchg
ret
movsb
stos
add
add
push
mov
xchg
ret
lret
adc
daa
int
jb
push
mov
xchg
ret
add
add
mov
nop
es
inc
mov
not
sbb
call
and
add
push
lods
mov
stc
nop
es
mov
add
mov
clc
stc
nop
es
cmpsb
sbb
cmpsb
pop
testl
nop
cld
nop
jmp
add
stos
add
and
stc
nop
es
stos
add
add
pop
stc
nop
es
mov
add
add
push
lods
cs
nop
cld
nop
jmp
or
sub
add
es
add
adc
add
push
mov
fldl
add
and
mov
sub
lret
stc
nop
es
and
jno
xor
stos
push
stc
nop
es
add
jge
lea
es
push
pop
lea
in
add
int3
push
push
mov
xchg
ret
add
xchg
mov
add
stc
nop
es
in
mov
xor
push
push
mov
xchg
ret
outsl
add
lea
or
nop
es
or
xchg
stos
push
mov
js
movsb
lock
stc
sarb
lods
mov
xor
mov
stc
nop
es
dec
cmp
fisttps
xchg
or
xchg
ret
add
dec
add
jno
mov
stc
nop
es
add
add
pop
stc
nop
es
add
or
add
jl
shl
stc
nop
es
add
add
sub
jb
dec
mov
or
nop
es
inc
add
add
pop
add
pop
stc
inc
add
out
add
stos
test
xchg
adc
push
mov
jmp
add
sldt
add
add
adc
xor
inc
add
add
or
jne
nop
cld
nop
jmp
add
or
xchg
popa
add
sub
cld
nop
jmp
dec
mov
mov
inc
and
nop
es
cmp
mov
adcl
aaa
adc
push
call
and
add
cmpsb
add
jbe
mov
stc
nop
es
xor
cmp
jne
push
mov
xchg
ret
add
add
sbb
es
movsb
in
add
adc
stos
je
stc
nop
es
movsb
add
stc
nop
es
scas
sbb
add
out
and
push
stc
nop
es
mov
sbb
inc
std
pusha
stc
nop
es
dec
or
add
arpl
stc
nop
es
jno
mov
lahf
call
jb
add
adc
pop
nop
cld
nop
jmp
mov
add
call
adc
and
cmp
ret
or
add
adc
stc
nop
es
movsb
add
stc
nop
es
add
lahf
add
lahf
lock
jl
movb
es
add
jae
mov
nop
jmp
mov
add
add
nop
es
add
lods
add
pop
or
add
stc
nop
es
add
enter
jb
push
add
dec
add
rep
stc
nop
es
add
pop
ljmp
es
clc
stos
add
add
jg
stc
nop
es
add
dec
add
jmp
stc
nop
es
add
ret
stc
nop
es
jno
call
sub
nop
es
add
fcoml
cli
push
stc
nop
es
add
add
es
mov
add
lret
lock
and
xchg
ss
stc
nop
es
add
mov
push
mov
xchg
ret
mov
add
rolb
mov
stc
nop
es
add
add
push
mov
xchg
ret
stos
add
add
mov
lret
nop
jmp
add
add
addb
pop
or
xchg
icebp
stc
nop
es
add
xchg
cltd
push
stc
nop
es
cmpsb
push
fdivl
push
push
mov
xchg
ret
mov
mov
add
nop
cld
nop
jmp
or
add
stos
sub
stc
nop
es
test
mov
nop
es
cmp
jno
add
sbb
sbbl
sbbb
add
mov
sub
sti
add
add
jecxz
incl
dec
add
aam
add
xor
mov
stc
nop
es
add
outsl
scas
add
stc
nop
es
cwtl
add
add
cld
inc
add
stc
nop
es
bound
je
stc
nop
es
add
cld
or
jmp
cltd
add
lea
pop
jne
nop
cld
nop
jmp
jno
add
mov
xchg
ret
add
loop
movb
inc
push
mov
xchg
ret
rolb
and
adc
nop
jmp
add
add
adc
loop
call
add
sahf
mov
push
mov
xchg
ret
lods
add
add
xchg
adc
stc
nop
es
lock
add
jge
addr16
sarl
lock
pushl
mov
stc
nop
es
mov
daa
add
das
mov
stc
nop
es
cld
cmp
dec
or
xor
fs
nop
es
add
nop
cld
nop
jmp
mov
add
dec
mov
push
add
dec
add
nop
es
add
add
stos
or
nop
es
add
add
xor
xchg
test
test
call
stc
nop
es
sbb
mov
jb
insb
push
mov
jo
mov
add
mov
push
cmp
add
pop
sarb
adc
mov
lods
ret
insl
cmpsl
add
add
jo
cmpsl
cltd
cmp
in
adc
test
mov
mov
pop
es
pop
mov
mov
jno
add
stos
mov
mov
xor
inc
pop
sbb
pmaxub
mov
xchg
int
push
icebp
push
mov
dec
xor
mov
pop
out
cmp
jb
lcall
pop
mov
add
jno
pop
fists
inc
xchg
push
setp
mov
iret
cmp
lahf
or
push
jl
mov
ret
dec
lcall
mov
adc
add
mov
add
add
push
add
popf
cli
push
sbb
jo
call
cmp
je
adc
imulb
jb
movq
add
sub
lret
sti
dec
inc
add
sub
xlat
jae
or
out
jae
adc
add
pop
pop
movsl
jae
scas
pushf
cmp
aas
movsl
daa
sub
add
adc
push
sti
or
rclb
cmp
adc
sahf
add
mov
mov
add
loope
ficomps
das
lods
mov
xor
cmpsb
mov
mov
pop
shll
add
fisubs
mov
cs
and
sub
jp
mov
aam
ret
jae
or
dec
insb
stos
popf
xchg
test
jbe
adc
jne
in
adc
popf
sub
xor
mov
push
push
pop
and
lea
add
test
push
jg
je
pop
jmp
add
addb
jp
cmc
psadbw
push
insl
popf
add
aad
push
cli
pop
jb
xor
add
add
inc
add
pop
jnp
xlat
pushf
mov
test
js
scas
out
outsl
loopne
sub
add
xchg
enter
add
fistl
xor
es
insl
rcll
dec
xor
mov
sub
fdivs
inc
cmc
xchg
loope
pop
push
dec
mov
jl
das
or
loop
pop
push
lahf
xchg
in
sub
sub
xchg
idivl
or
cltd
rcll
add
movsb
addb
movsl
cmp
jae
add
xchg
testl
push
mov
es
insl
aam
add
add
pusha
add
lcall
rolb
in
adc
mov
repnz
loop
shll
mov
xchg
cmc
cmp
xlat
test
mov
add
jne
jge
mov
inc
add
add
push
addb
cmp
imul
movsb
test
test
out
add
add
bound
jg
aad
push
inc
xor
mov
xchg
pop
inc
adc
jp
negl
popf
cmpsb
push
xor
into
push
arpl
arpl
add
mov
sbb
std
les
dec
and
add
push
add
pop
dec
call
push
rep
xor
cmp
adc
add
pop
push
mov
pop
pushf
cmp
or
jb
or
add
popl
add
outsl
pop
mov
mov
inc
push
js
nop
mov
push
rol
cs
jp
xchg
cmpsl
mov
icebp
inc
out
negl
lock
jp
add
cmp
mov
mov
sub
or
add
jg
loope
cmp
std
addb
lahf
stos
aad
data16
in
inc
pop
ljmp
xor
xchg
add
ljmp
jb
pop
mov
stc
and
cld
sbb
mov
pop
lods
rolb
add
push
cmc
add
add
dec
jne
dec
aas
xchg
pusha
add
stos
loop
insb
iret
jae
mov
shl
jns,pt
mov
push
adc
add
add
mov
mov
lcall
popa
bound
cs
je
movb
xchg
in
add
dec
dec
cltd
dec
or
xchg
mov
in
mov
ficompl
inc
add
lahf
jnp
push
test
mov
add
pop
out
mov
outsb
repz
int
outsl
scas
sbb
mov
xor
sub
mov
stc
stos
push
mov
stc
mov
cs
out
fdivs
adc
pop
loop
sbb
push
xor
addb
into
sbb
xor
incl
dec
jp
clc
testl
and
push
lds
mov
xor
lock
pop
rcll
or
pop
adc
pop
inc
add
fldt
cld
cmp
xor
inc
ret
sbb
pop
stos
cmp
mov
xchg
pop
and
push
and
inc
add
inc
add
jg
mov
and
bnd
inc
xor
inc
pushf
icebp
mov
add
pop
and
pop
movsl
xchg
mov
cmp
cmp
out
and
push
and
mov
lret
aad
mov
bound
mov
scas
xor
xchg
add
inc
mov
test
sub
or
jmp
push
dec
push
pop
push
jp
push
cmp
sub
lcall
les
mov
lahf
inc
xchg
push
xor
xchg
cltd
ljmp
jle
in
inc
add
push
in
add
test
xchg
inc
jl
fidivs
push
mov
fcmovu
push
add
sti
xor
enter
add
xchg
jnp
add
sti
fs
int
inc
add
ja
add
arpl
and
jl
cmc
mov
int
scas
dec
inc
add
addb
test
cmc
sarl
or
add
in
mov
add
stos
mov
dec
mov
or
bound
jl
xor
lods
xor
sbb
mov
xor
or
cmpsl
ficomps
mov
movsl
xchg
or
adc
jl
imul
lods
rorb
stos
mov
xchg
sub
aas
mov
push
xchg
jb
jp
pop
icebp
addb
ret
sub
add
add
inc
ret
pop
les
lock
mov
out
and
in
outsl
ja
cmc
sub
addr16
add
cmp
cmp
addb
stos
dec
mov
test
pop
xor
icebp
in
adc
jnp
jne
scas
and
and
add
popf
dec
inc
add
and
inc
ret
cltd
test
lock
imul
mov
sahf
fs
ss
aad
adc
aad
lods
pop
mov
push
jp,pn
add
loop
mov
add
ficompl
xchg
inc
mov
insb
dec
mov
cmp
pop
pop
xchg
push
ror
and
loop
scas
push
or
movb
lods
in
imul
lods
cmp
push
ljmp
or
jle
aam
idiv
test
and
movsb
mov
mov
daa
sbb
adc
mov
push
jg
sti
jae
out
cmp
sbb
cmp
sub
mov
or
ds
push
add
or
xor
add
les
stos
loop
jp
aaa
test
insl
push
pop
test
outsb
pop
fldcw
outsl
inc
rolb
mov
mov
iret
xor
jle
add
mov
repz
pop
addb
addr16
inc
add
push
gs
pop
idiv
cwtl
dec
mov
pop
enter
cmova
or
add
lcall
push
ds
or
jbe
add
sahf
cld
push
ss
stos
mov
imul
int
js
cmp
inc
add
jo
add
repz
cmc
popa
insl
arpl
push
sub
inc
or
outsl
add
mov
xor
arpl
shlb
xchg
mov
scas
mov
add
sub
push
out
or
cmpsb
lret
test
or
add
fs
out
adc
mov
pop
mov
outsl
jb
in
jno
add
jno
and
sbb
xlat
and
dec
xor
mov
add
out
ret
pop
arpl
xor
das
pop
mov
add
mov
lret
xchg
push
lcall
jmp
jbe
adcl
insl
mov
addr16
movb
rorl
push
mov
movsb
stos
bound
fisttpl
cmp
xchg
sbb
out
jle
mov
dec
frstor
jno
sub
pop
sub
sbb
fcomi
lock
pop
ds
ja
lret
mov
mov
xchg
rolb
rol
out
fmull
icebp
rol
add
push
jp
outsb
std
inc
adc
in
ficoml
xchg
pop
out
or
mov
out
inc
add
push
lret
dec
lret
leave
mov
dec
mov
add
jae
aaa
loop
fmul
aam
sarl
cli
sarb
cmp
stc
jbe
inc
addb
mov
sbb
mov
fsub
fldl
dec
lcall
xor
cs
popa
sbb
stos
ja
inc
add
mov
mov
sbb
pop
insb
xchg
sub
ret
cmp
daa
add
lcall
mov
movsb
jl
mov
insl
dec
sbb
fimull
and
fdiv
pop
fs
add
push
mov
ret
lods
xor
ja
hlt
nop
sub
movb
jp
fldl
add
add
adc
push
mov
add
inc
push
les
mov
inc
sbb
jle
xlat
stos
cmp
jl
ds
and
lods
jo
xchg
pop
test
mov
out
into
and
lods
pop
test
dec
pop
call
mov
incb
fdivrl
pop
pop
cmp
adcl
hlt
pushf
cmp
fidivrl
cmp
fnstsw
fnstsw
pushf
mov
adc
dec
sub
lea
movb
and
lods
lcall
sbb
or
pop
addb
lea
outsl
scas
jns
inc
add
jnp
fldenv
mov
mov
push
jne
adc
adc
mov
mov
out
push
lahf
mov
gs
pop
cmp
insb
fwait
scas
enter
mov
mov
pop
mov
dec
inc
call
push
inc
add
xor
in
add
dec
lock
outsb
es
jns
xchg
les
or
jge
add
enter
push
inc
add
ret
sub
sbb
pop
xchg
mov
insb
fdiv
and
cmpsb
js
shr
cmp
insb
popf
icebp
fwait
pusha
add
push
shlb
mov
aas
cmpsl
and
xchg
mov
popf
mov
or
test
inc
cmp
in
fidivrl
jge
sbb
pusha
add
les
cmpsl
jmp
loop
adc
pop
jb
add
xchg
stc
mov
add
add
add
lret
xorl
adc
xor
aas
and
clc
add
sub
aas
iret
inc
dec
pop
int
pop
ss
cmpl
pop
xchg
pop
jno
pop
pushl
ljmp
stos
or
inc
int
movsl
sti
adc
je
add
xchg
push
and
cld
jb
clc
jb
outsb
mov
mov
loopne
addb
cltd
jecxz
out
add
xchg
pop
sarb
loope,pt
add
cmp
sub
fistl
add
inc
add
stc
inc
add
fsubrs
mov
addr16
cli
iret
daa
add
fsubs
jnp
xchg
in
or
leave
xor
cmp
xchg
jo
sbb
iret
mov
xchg
je
ja
xor
pop
push
cmpxchg
lret
test
or
int
add
and
repnz
dec
lret
push
sub
std
stos
mov
add
roll
data16
test
inc
adc
or
in
fsub
fisttpll
icebp
loope
out
out
stc
sub
mov
and
lret
es
push
mov
sub
stos
icebp
les
lock
imul
add
hlt
or
cmpsb
imul
ljmp
sbb
js
sub
dec
icebp
pop
push
jecxz
add
jecxz
movsl
imul
lea
dec
xlat
pop
bound
adc
or
loop
sbb
int3
rcl
cmc
jge
mov
add
in
adc
icebp
push
or
jns
clc
icebp
imul
adc
sub
add
test
cmpsl
sbb
pop
sub
cmp
adc
out
sbb
push
in
adc
lds
bound
daa
adc
lahf
mull
or
in
test
movb
jbe
inc
adc
lea
push
fmuls
cmpsb
loop
mov
push
xchg
xchg
repz
das
add
add
sahf
clc
pop
pop
les
add
push
insb
mov
adc
movsb
xchg
pop
adc
in
adc
sub
clc
std
scas
pop
push
mov
add
inc
push
cmp
xchg
jno
dec
nop
nop
shl
jle
add
movsl
std
xlat
lods
lcall
jmp
add
sbb
add
push
mov
icebp
add
jg
cwtl
loopne
lret
pop
lock
clc
pop
push
push
jmp
in
cmovns
movsl
adc
push
es
xchg
int
addr16
imul
adc
add
mov
adc
outsb
xchg
pop
leave
jnp
aaa
sti
lods
push
jo
inc
add
add
or
pop
push
test
adc
add
push
divb
jmp
je
in
fisubrl
das
aaa
scas
aad
adc
push
scas
mov
mov
dec
int
cmp
xor
insl
mov
mov
pushf
call
gs
cmp
ss
outsl
pusha
add
push
xchg
lods
mov
jl
dec
or
movsl
movb
sbbl
cmp
rolb
add
shrl
ss
push
hlt
aam
movsb
cs
add
mov
add
inc
push
add
xor
inc
xchg
int
sub
and
nop
test
lret
sbb
scas
mov
int3
jno
push
aad
popa
loopne
movsl
aad
cmpsb
pushf
leave
mov
cmp
addr16
xor
fmull
mov
or
xchg
imul
add
pusha
add
dec
jbe
jae
ss
bound
mov
xchg
mov
pop
nop
sbb
mov
bound
int3
mov
aaa
out
dec
adc
imul
cltd
jg
fnstcw
inc
adc
inc
lods
pop
pop
adc
lahf
add
mov
out
sbb
add
lds
push
pop
clc
cli
repnz
add
cmp
sbb
mov
pop
sahf
gs
cmpsl
movsb
cmp
or
mov
mov
add
mov
dec
test
xor
mov
jecxz
int3
mov
popa
mov
xchg
cld
clc
add
scas
loop
pop
movsl
lret
lret
pop
jno
je
xor
arpl
jecxz
jp
mov
fs
mov
test
mov
pop
and
and
add
lcall
rolb
lcall
cs
movsb
lahf
das
sbb
das
fldln2
call
pop
push
jmp
rcr
mov
xchg
and
addr16
test
cli
adc
inc
add
ret
mov
mov
mov
fsubrp
add
shll
adc
enter
add
movsl
jno
ds
xchg
inc
add
fdivrl
les
daa
jge
xor
aad
mov
adc
das
ss
mov
mov
add
cs
sti
inc
push
jb
xor
jg
sub
ss
sbb
add
push
adc
sbb
sti
push
push
add
stos
pop
imul
inc
add
icebp
divl
in
inc
lea
cs
inc
add
inc
cmp
sub
call
xchg
cs
test
xchg
es
dec
jne
sub
jecxz
inc
add
ljmp
jo
add
cmp
out
mov
insb
inc
jg
dec
lods
push
pushf
ss
rolb
cli
addb
stos
sub
out
and
sub
pop
pop
test
addb
jne
jl
add
das
ret
cld
ja
jo
iret
sub
out
fcmovne
cmpsl
mov
add
push
add
jne
insl
iret
sbb
fsubrs
int3
sub
dec
movsb
fs
fbld
add
repz
add
mov
cmp
push
jno
xchg
lahf
test
add
jl
or
mov
mov
mov
push
mov
xor
movb
pop
data16
or
js
pushf
loop
repz
sub
movb
ficoms
jl
add
push
add
add
and
pop
pop
ret
iret
test
xchg
xchg
pop
push
sbb
pop
jg
add
push
jle
ss
dec
cmp
sbb
push
div
add
cmp
mov
sbb
fimuls
push
inc
adc
sbb
add
xor
dec
fwait
movb
mov
dec
sbb
je
js
iret
movsb
pop
test
popl
add
sub
fs
fistps
sub
aas
repz
and
jp
outsl
test
inc
add
push
jns
mov
mov
pop
insl
addr16
jns
or
xor
and
sbb
or
inc
add
aas
adc
cwtl
xchg
mov
xchg
jnp
mov
movsb
inc
add
jns
cmp
mov
test
iret
xchg
js
imul
dec
adc
fldl
pushl
daa
addb
xlat
pop
xorl
testl
mov
pop
sbb
sub
cld
adc
into
int3
and
rolb
addb
or
add
jge
ss
stos
ss
loope
adcl
das
loopne
adc
mov
mov
or
bsf
xor
pusha
add
ss
add
outsb
bound
mov
add
mov
add
pop
push
adc
jno
fstl
xor
ficomps
test
mov
in
jb
imul
xchg
xchg
pop
cli
push
fistpll
mov
add
sub
sub
jno
sar
frndint
fnstenv
push
pop
mov
lret
add
add
mov
pop
mov
add
sbb
in
jnp
loope
stc
adc
push
inc
jno
jg
add
es
xchg
loope
hlt
pop
mov
sbb
fcoms
daa
fsubrs
push
sbb
add
leave
movb
add
dec
paddd
rcl
fcompl
rcrl
incb
push
out
sti
fistps
das
xchg
lea
outsb
movsl
gs
mov
lret
cli
mov
cmp
mov
mov
movb
movsb
fcompl
pop
cltd
xchg
mov
and
add
add
arpl
sbb
fwait
stos
cs
insl
sub
sbb
les
pop
pop
adc
dec
and
xchg
movsb
shrl
in
aad
into
xor
call
dec
mov
mov
outsb
fildll
sub
add
mov
add
mov
test
in
fwait
lcall
std
movsb
xor
arpl
loope
sbb
mov
gs
adc
push
add
inc
add
add
jae
xchg
mov
pause
adc
data16
cmp
cmp
filds
test
jl
out
mov
cmp
add
stos
cmp
mov
xlat
mov
dec
js
stos
and
loop
add
movd
cmovle
and
clc
and
sub
add
xor
xchg
sbb
out
jbe
add
sub
das
push
xor
mov
idivb
add
aaa
jns
inc
add
add
out
add
add
push
bound
stc
dec
test
sbb
repnz
lock
std
sub
imul
or
mov
or
test
add
add
push
jnp
add
add
jecxz
addr16
stc
adc
jg,pn
icebp
xor
dec
xchg
xchg
or
dec
mov
dec
lods
sub
std
inc
outsb
out
scas
mov
outsb
dec
pop
fildl
dec
xor
add
dec
mov
fdiv
xlat
pop
outsl
or
sbb
dec
xchg
popf
mov
dec
sarb
xor
lock
sti
loopne
push
rolb
pushl
sub
xchg
js
mov
pushf
stos
mov
outsl
aam
clc
xor
aaa
mov
int3
lcall
icebp
out
ret
sysexit
dec
mov
addb
push
sbb
ret
push
loop
outsl
inc
add
mov
add
ss
push
addr16
mov
cmp
mov
push
add
xchg
outsl
mov
mov
mov
ds
and
sub
pushf
movb
cmp
call
mov
sbb
into
push
fnstcw
sub
mov
pop
pushf
add
mov
shrb
mov
add
push
insl
jbe
jne
or
sub
les
pop
fsubl
sbb
xor
lods
adc
push
fidivs
inc
add
ret
stos
mov
das
lea
add
fdivrl
dec
mov
jns
sub
enter
adc
add
jecxz
xor
mov
jp
cmp
push
mov
adc
sbb
pusha
add
add
in
dec
mov
push
iret
mov
in
daa
adc
imul
in
add
mov
into
and
jecxz
stos
sbb
dec
pop
push
mov
aaa
xor
cmp
xchg
jo
xor
cmpsb
add
cmp
lea
cmpsl
sahf
xlat
sbb
add
sti
sbb
add
sbb
out
xchg
cmp
jmp
test
movsl
xor
sarl
sahf
cwtl
xor
add
stos
ja
lret
add
add
add
or
test
mov
add
je
jno
or
loope
xor
cwtl
sbb
arpl
add
jl
mov
xor
das
jne
mov
int3
das
pushf
cs
icebp
mov
push
stc
lds
movsb
les
in
ffree
add
mov
inc
mov
sahf
mov
fcomip
daa
sahf
pop
cmp
stos
les
mov
ffree
add
and
cli
ja
in
mov
fidivs
ja
pop
sti
pop
add
in
cmc
in
hlt
int
fildll
rol
add
repnz
or
ret
mov
mov
sahf
pop
or
xor
rcll
xchg
daa
mov
fisubs
add
push
lods
and
into
scas
mov
pop
jno
xchg
jg
xchg
clc
test
cmp
jbe
push
mov
cmp
fsubl
add
xchg
aam
es
pushf
inc
add
inc
cmp
add
scas
or
sahf
pop
ret
popa
pop
and
int3
loop
xor
add
cmc
je
mov
adc
cli
pushf
lds
aam
push
push
add
popf
dec
in
inc
add
inc
add
gs
leave
jno
xor
jne
lds
clc
sbb
pop
pop
add
pop
pop
pop
mov
mov
mov
fcoml
lahf
pop
sbb
or
cmpsb
loope
cmp
in
add
mov
addb
pop
mov
xchg
movsb
or
addb
pop
pushf
mov
jl
mov
cli
xchg
ljmp
push
mov
push
inc
jb
xor
ret
add
xchg
jnp
cmp
out
mov
xchg
rorl
stc
js
add
inc
add
std
jp
es
mov
in
and
es
fmuls
push
xor
js
into
test
xchg
mov
clc
addb
adc
je
or
out
lock
cmp
out
mov
imul
enter
sub
or
pop
cmp
loopne
pop
das
lahf
cli
ss
add
add
add
inc
add
xor
mov
in
add
js
rolb
repnz
ljmp
fld
pop
xor
mov
fcmovnb
add
rorl
mov
test
add
add
add
mov
jmp
or
fcmovbe
add
nop
movsl
inc
shlb
add
stc
add
xor
jno
sbb
rcll
jecxz
inc
jmp
imul
xchg
jbe
jmp
push
mov
ds
push
dec
sbbl
add
mov
popa
jb
adc
mov
aam
mov
or
add
mov
loope
and
repnz
rcrl
fadd
std
fcomp
add
arpl
jb
ret
and
ret
xor
mov
lea
mov
mov
add
in
fsubrp
lret
push
xchg
lods
or
les
out
aad
mov
jo
pop
cwtl
test
dec
call
cmp
loop
lock
adc
iret
mov
add
jo
rcll
mov
xchg
cmp
cmpl
jmp
or
lret
xchg
ljmp
pop
inc
jge
shll
add
jb
cmpsb
mov
test
cmc
mov
add
or
mov
fmuls
mov
mov
pop
xchg
dec
in
test
or
sbb
add
add
and
imul
lcall
rol
add
jno
mov
in
xchg
sbb
sti
or
sbb
lock
mov
aaa
stc
lods
push
call
inc
push
add
fistl
sub
cmc
je
call
bound
add
xor
nop
xchg
jl
sbb
mov
or
insl
das
arpl
in
lret
sub
rcrl
add
mov
mov
jecxz
es
lret
imul
sub
mov
in
gs
add
lret
cmp
pop
js
in
sub
add
sub
mov
sub
cli
jmp
sbb
test
test
add
sub
add
repnz
ret
sub
push
push
xlat
mov
sub
xchg
add
imul
add
add
push
jle
out
add
out
mov
shrl
lods
jnp
ret
cmp
data16
repz
repnz
cmovb
rolb
inc
xchg
and
dec
push
or
sahf
sub
cmp
aas
mov
pop
pop
ja
inc
repnz
adc
adc
fcomps
imul
iret
push
dec
mov
insl
imul
adc
mov
mov
icebp
sbb
and
imul
xchg
lods
add
aas
mov
jecxz
sub
add
sbb
rolb
dec
scas
and
lret
sub
lahf
sbb
movl
repz
sub
mov
lods
or
inc
add
sub
mov
cmp
lret
add
xor
cli
jge
jp
mov
adc
int
repnz
mov
out
fbld
add
ret
jmp
mov
movsb
ret
ds
es
loop
jge
and
in
pop
mov
ret
mov
and
mov
nop
jae
in
adc
cmp
daa
aad
pop
push
add
add
add
movb
clc
out
sub
push
pop
lcall
sub
mov
loope
insb
test
js
xor
movsb
pop
adc
add
pop
mov
addr16
xchg
je
pop
ds
test
rolb
add
insl
ret
inc
add
sti
mov
in
mov
arpl
insb
mov
xchg
mov
addr16
test
sbb
add
xchg
pop
nop
inc
dec
xor
cmp
add
stos
aaa
ret
daa
sahf
int
pusha
add
push
add
lock
cltd
jnp
mov
js
xchg
push
getsec
jne
and
idivb
inc
fstpt
add
icebp
sbb
popf
scas
das
fists
sbb
xor
int
mov
inc
dec
aad
dec
faddl
bound
stos
js
scas
cltd
rol
add
add
push
xchg
loope
loop
add
incb
sti
ljmp
repz
adc
mov
leave
pop
aam
pop
sbb
jbe
dec
lods
addr16
jecxz
rorb
sub
cmp
cmp
cld
cmpsl
mov
add
aas
test
in
in
arpl
push
jmp
stc
mov
mov
dec
lock
out
sub
push
call
in
cmp
jmp
jp
arpl
clc
xchg
jno
fiadds
mov
mov
jnp
sub
pop
lods
cmpsl
lea
addb
jo
dec
xchg
inc
lcall
pop
das
or
jae
movb
cs
pushf
jnp
jo
outsb
jge
and
add
addl
fwait
adc
add
mov
jle
in
fildll
pop
loope
fbstp
mov
mov
fimuls
add
cmp
mov
xor
add
outsb
orl
jo
cli
cli
rclb
pop
lock
daa
mov
mov
add
lret
add
inc
dec
test
popf
or
sub
popf
dec
outsb
cwtl
out
lods
scas
cmp
push
ficomps
xor
jbe
xor
pop
ja
xchg
in
pop
and
out
fisubs
in
add
lret
cmp
insl
arpl
sbb
xchg
add
jae
jbe
sub
adc
pop
pop
cmp
aam
jmp
sub
into
mov
js
pop
icebp
xchg
les
dec
dec
inc
mov
push
push
call
mov
mov
add
testl
xor
pop
mov
dec
aad
adc
sbb
enter
into
xchg
out
ret
add
add
cltd
addb
test
sbb
sub
and
add
and
rolb
nop
cmp
add
sub
loope
mov
push
mov
mov
push
add
sub
or
vmovlps
add
mov
das
pop
jns
inc
add
xchg
push
fwait
pop
jge
adc
add
push
rcrl
int
or
sbb
xor
jno
xchg
ds
in
add
add
pop
stc
pop
xchg
sti
cwtl
xchg
sbb
call
pusha
add
jle
inc
enter
inc
mov
sub
mov
jae
orl
mov
sbb
stos
out
cmp
repz
pop
out
pop
inc
fucomi
sub
shlb
adc
add
add
xchg
mov
icebp
popa
inc
add
movb
into
cwtl
fsubrp
bound
fidivrs
inc
ret
xor
inc
dec
and
xchg
call
sti
pushf
push
lcall
inc
add
and
test
mov
iret
in
pop
and
rcrb
cmp
hlt
sbb
jp
jb
fbstp
pusha
add
pop
insl
mov
mov
je
add
mov
lahf
ffreep
addb
lods
les
jb
push
es
mov
cmp
add
mov
icebp
movb
fists
les
and
jno
jne
add
repnz
add
test
icebp
addb
in
je
call
dec
scas
xlat
pop
dec
sbb
add
shl
lahf
xchg
adc
inc
add
mov
dec
hlt
getsec
cli
lods
sbb
repnz
mov
jg
sub
xchg
dec
pop
mov
adc
add
or
daa
ja
xor
lahf
dec
xchg
jns
loope
push
sbb
add
in
daa
jge
or
lcall
lds
mov
loopne
pop
ja
rcrb
sarl
sahf
cmpsb
mov
add
ljmp
mov
add
mov
call
movb
sbb
lahf
gs
and
xchg
push
in
adc
sbb
add
popf
popf
push
xchg
jge
inc
rolb
add
xor
adc
add
mov
sbb
adc
rcll
adc
fisubl
imul
in
cmp
cmp
call
dec
sbb
scas
and
hlt
mov
cmc
aam
inc
bound
add
fistpl
repz
mov
cmc
and
add
loope
int3
cmp
pop
mov
pop
adc
inc
mov
jno,pt
add
addb
dec
xlat
aaa
lcall
mov
movntq
repnz
mov
test
mov
pushf
push
insb
test
or
push
jp
xor
scas
xor
mov
lret
pop
nop
lret
int
jmp
inc
add
scas
and
pop
test
icebp
aaa
inc
add
aam
ret
inc
add
push
cmpsl
add
into
pop
mov
xchg
hlt
push
pop
aam
psubb
daa
mov
bound
add
stc
xchg
inc
int
adc
dec
inc
add
add
mov
movsl
mov
dec
shrb
pop
clc
movsb
pop
xorl
mov
fdivs
mov
jne
les
sub
lock
lret
jge
sbb
in
ja
mov
jb
and
cs
pushf
mov
jno
cli
in
inc
inc
add
gs
push
test
jg
jg
pop
and
jmp
sub
sbb
dec
push
push
inc
add
dec
mov
inc
add
roll
add
adc
xchg
fisubrl
dec
cmp
mov
pop
sub
test
mov
add
out
push
popf
or
add
xchg
and
fimuls
lock
sahf
inc
add
out
inc
add
pop
or
and
push
xor
pop
jo
adc
cmp
inc
add
jb
repnz
cltd
jmp
dec
nop
mov
lret
in
cmp
mov
ret
and
mov
out
aam
and
scas
scas
pop
rcr
int3
in
add
push
add
jecxz
add
add
adc
jo
nop
cmp
dec
lret
adc
pop
xor
repz
insb
jp
inc
add
mov
dec
rorl
sub
ror
aas
aaa
out
and
xor
adc
add
pxor
cmp
push
sbb
mov
movb
xor
pop
adc
mov
sub
in
dec
lcall
xchg
pop
mov
jnp
xchg
push
pop
sub
lahf
mov
and
lcall
xor
mov
push
sub
jl
stc
loop
sbb
ss
cmovb
mov
cmp
fdivr
loop
in
sbb
sbb
adc
dec
xchg
mov
add
and
and
or
and
pop
adc
stos
loope
stos
pop
popf
fstl
loope
jne
and
mul
inc
adc
add
jp
add
mov
xor
or
stos
enter
das
imul
mov
jns
stos
cmc
cltd
or
sbb
out
daa
js
mov
stos
mov
clc
outsl
adc
movsl
adc
and
mov
xor
and
fstps
jge,pt
mov
sahf
lods
test
les
mov
cmp
xchg
pop
in
incl
add
scas
pop
les
jg
dec
mov
cmpsl
arpl
pop
loopne
cld
and
add
inc
add
add
cmp
add
daa
xchg
xchg
jnp
adc
inc
xchg
andl
mov
or
add
and
or
cmp
pop
mov
aaa
add
push
mov
cli
mov
scas
jne
cmc
xlat
cmpsl
sbb
jecxz
jnp
mov
jp
xchg
leave
rcll
shll
dec
or
xlat
cltd
int3
dec
xchg
aas
sub
jecxz
pop
loopne
or
mov
mov
pop
pop
cmp
cmp
or
inc
add
test
xor
jno
insb
cmc
dec
stc
mov
scas
xor
mov
stc
data16
imul
rcll
les
fdivrl
add
clc
xlat
cmp
int
aaa
pop
jmp
cmpsb
popa
popf
xor
int3
or
inc
add
loope
das
or
push
lds
push
xchg
fisttpl
jae
ds
sar
stos
fistpl
sub
adc
jbe
test
cmpsb
or
mov
jle
mov
jo
dec
push
jp
fbld
test
lods
mov
push
inc
add
aad
mov
or
push
addr16
add
test
push
popa
push
js
repnz
mov
fwait
das
add
lret
pop
gs
push
pause
dec
pushf
jb
out
push
cs
or
ljmp
lods
ds
pop
loop
or
add
push
fwait
mov
add
sub
repz
push
es
jae
lcall
pushf
push
cmpsl
int
ljmp
inc
add
js
repnz
inc
add
mov
adc
lods
xchg
jns
add
unpckhps
add
jl
sbb
aam
jb
mov
add
insb
pop
jge
in
inc
add
hlt
fnstcw
xor
sub
inc
enter
mov
add
out
push
leave
lret
add
in
test
pop
test
jo
push
scas
mov
popa
pop
and
lods
cmpsb
js
mov
jg
cmp
clc
xor
sub
xchg
andl
and
cmp
add
daa
sub
lahf
scas
test
fiadds
xchg
xor
xchg
aam
pop
jae
ret
repnz
and
pop
adc
es
loope
in
les
scas
and
enter
mov
and
or
notl
add
pop
xor
test
push
lds
fs
add
cltd
cmp
xor
lds
icebp
add
add
mov
xorl
add
ljmp
xchg
push
and
inc
add
add
movsl
mov
mov
pop
cwtl
adc
jl
jl
outsl
push
mov
repnz
nop
adc
xchg
mov
push
and
sti
leave
imul
cmp
cmp
mov
jl
add
ss
fcompl
add
push
test
add
js
test
fucomi
lods
sub
push
lahf
jecxz
movsb
lds
mov
add
pop
pop
fwait
rol
and
pop
jg
fwait
sub
insl
leave
js
jo
testl
jl
dec
outsl
loopne
add
aaa
test
out
sbb
jge
inc
add
std
jp
ret
stos
and
lret
mov
mov
fstl
fs
xor
xchg
rolb
stos
jp
outsl
aaa
push
in
mov
test
dec
jg
enter
push
xorl
insl
movsb
popf
out
cmp
rolb
dec
sti
cmp
sbb
add
data16
jp
out
or
out
je
fcmovu
adc
scas
xlat
testb
jge
ret
stos
das
lock
sub
cmpl
aad
hlt
jno
ds
and
shrl
push
push
int3
push
addr16
push
rclb
push
dec
lahf
jno
aaa
mov
into
jns
pop
xor
inc
add
ficoms
imul
aam
and
mov
add
loop
jnp
add
cld
cwtl
xor
inc
add
add
mov
xor
push
sbb
cld
mov
test
add
lret
mov
out
jbe
repz
lahf
lcall
mov
adc
adc
repnz
nop
je
mov
sbb
jp
dec
pop
in
inc
add
adc
sub
fwait
mov
jae
scas
loopne
inc
int3
mov
aas
jns
pusha
add
mov
dec
push
cmpsb
push
fisubrl
push
rcl
pop
cmp
xchg
dec
xor
inc
add
je
pop
out
push
popa
in
pushw
mov
cld
sbb
push
hlt
std
aam
xchg
jbe
gs
inc
add
rolb
add
pop
ja
loopne
out
jmp
push
inc
add
rolb
jl
ja
add
push
sbb
jb
mov
cwtl
sub
or
or
mov
mov
cmp
or
add
add
xchg
es
sti
imul
ficoml
repz
mulb
cmpsb
push
les
loop
lea
add
in
lea
add
sahf
lcall
pop
sub
jge
je
lds
fcoms
inc
jp
mov
movsb
es
and
gs
pop
lods
out
mov
ds
or
sub
arpl
push
mov
mov
mov
iret
mov
sbb
cmp
push
mov
or
stos
xchg
push
xlat
jp
pop
out
test
std
mov
sub
lock
push
lock
add
insl
cmpsl
jmp
xchg
push
push
pop
idiv
fwait
aad
stc
mov
dec
xchg
push
add
daa
js
jb
movsb
shll
lret
jmp
inc
add
cmc
adc
or
fdiv
dec
dec
pop
or
js
push
les
mov
xor
add
inc
add
mov
push
jl
add
roll
inc
jle
test
cmp
pop
xor
xrelease
xor
scas
dec
xchg
enter
cwtl
mov
add
add
add
mov
pop
idivb
pusha
add
sahf
add
movsb
popa
xor
push
pushf
gs
pop
nop
pop
push
jnp
test
divl
add
xor
pop
pop
outsl
xor
mov
mov
jmp
fcoml
sbb
inc
mov
out
mov
pop
jp
sub
jmp
xor
daa
jmp
dec
push
stc
sbb
ja
cmpsb
test
and
xchg
adc
add
mov
dec
pop
xchg
pop
or
sbb
cmp
in
mov
sbb
xor
add
lret
add
movsl
scas
insb
xor
push
and
cmc
mov
pop
stc
pop
bnd
jl
lods
out
dec
cli
lds
xor
cmp
add
insl
std
xlat
push
pop
cmp
fdivl
adc
push
bound
pop
jns
add
movb
rorl
loope
mov
xchg
mov
dec
outsl
inc
adc
add
enter
jbe
repz
add
int
shll
xor
insl
scas
mov
dec
add
push
popf
jbe
ret
or
mov
add
cli
or
pop
aaa
in
mov
mov
insb
cld
sar
es
add
and
sub
loope
std
call
sbb
adc
jnp
add
mov
test
cs
xchg
inc
add
pop
movsl
in
mov
xchg
mov
out
bound
mov
pusha
add
push
cmp
mov
scas
push
jl
test
add
xchg
dec
or
cmpl
jnp
fndisi(8087
inc
test
stc
fstpl
add
iret
int
int3
leave
sbb
mov
pop
jnp
insb
push
fcoml
ljmp
add
fidivrs
push
in
add
lock
push
insb
adc
jne
repz
mov
add
lret
adc
jo
ror
mov
int
pop
pop
lahf
out
gs
test
add
jne
out
mov
sbb
pop
sarl
sbb
es
pop
adc
addb
mov
or
add
cmpsl
sbb
mov
pop
mov
call
xchg
pushl
add
dec
mov
adc
popa
hlt
jns
lahf
ds
ljmp
push
inc
fldcw
jl
fcoms
jb
addb
stc
or
mov
and
dec
les
pop
xchg
scas
mov
fs
xlat
fwait
xchg
loop
push
jae
mov
imul
adc
mov
jg
pop
pop
aad
lds
mov
sbb
add
aas
fnstcw
xchg
stc
xchg
in
inc
or
fs
push
lods
dec
in
out
outsb
in
imul
lret
daa
arpl
out
lcall
push
xor
jecxz
xor
dec
add
mov
or
jno
popf
cmp
movb
cld
inc
imul
leave
daa
sub
mov
and
movsl
insb
divl
out
pop
mov
xchg
xchg
stos
outsl
fisttpl
cmpsl
into
fs
add
push
mov
jno
mov
scas
cwtl
into
cld
outsl
test
sub
lea
out
jo
rolb
push
dec
push
add
int
jle
cs
lahf
jmp
add
sbb
adc
dec
mov
add
popa
lret
test
and
mov
jg
pop
mov
cmp
dec
add
loope
xchg
pop
call
imul
notl
repnz
xor
xchg
mov
pop
icebp
popf
fsubrl
jns
ret
pop
out
int3
sub
dec
cmc
out
xchg
mov
arpl
sti
les
addb
sub
adc
jge
add
sbb
test
mov
cmp
jmp
js
mov
aaa
testb
xchg
or
jp
aas
aaa
pop
and
jle
bound
sub
inc
pop
dec
stos
push
addr16
ret
aas
addb
mov
loop
bound
xor
add
gs
xchg
std
push
mov
push
sbb
insl
jl
add
in
into
lods
dec
mov
jl
mov
mov
dec
xlat
push
sbb
xchg
jg
cmp
cmp
push
add
ret
xchg
push
pop
jae
rolb
mov
bnd
fsubl
addl
cmp
and
cmp
push
xchg
ljmp
les
and
jmp
test
pop
call
add
add
add
dec
mov
mov
fwait
add
cli
add
jl
imul
mov
adc
pop
aad
and
imull
pop
mov
punpckldq
jno
mov
aad
add
sbb
sub
dec
push
mov
or
push
loopne
and
add
hlt
repz
add
ds
pop
adc
xchg
push
jmp
jo
sbb
mov
sti
int3
mov
and
add
out
scas
hlt
insl
pop
lods
shll
or
sbb
imul
pop
adc
push
jb
xchg
mov
or
jo
add
fimull
or
rcl
jo
add
jo
and
dec
mov
fidivrl
xchg
sbb
dec
ss
mov
xchg
jns
not
inc
lret
aad
sbb
xchg
pop
sbb
sbb
jnp
jge
push
xor
adc
dec
sbb
add
cld
addb
and
mov
add
sub
add
xchg
repnz
add
int3
add
pop
cs
cs
xor
sbb
or
push
pop
movsl
ret
push
pop
lret
aas
cmc
xchg
or
sbb
pop
mov
or
cli
add
cmpsb
pop
stc
sub
or
push
mov
daa
mov
imul
rcll
sub
stc
or
add
mov
and
push
dec
xlat
push
inc
add
pusha
add
sbb
pop
rolb
or
sub
mov
push
pop
mov
pop
fisubrs
mov
adc
loop
je
add
sub
or
inc
add
out
jp
sbb
mov
mov
into
or
out
lret
jbe
add
inc
jbe
popa
fcomip
dec
lret
or
adc
testl
push
add
pop
and
ret
mov
in
insb
hlt
adc
clc
sbb
ficoms
mov
in
cmp
gs
mov
cmp
rolb
mov
ljmp
dec
loop
add
addr16
negl
add
sub
test
dec
inc
add
dec
mov
cmpsb
inc
jnp
test
std
fwait
jb
jmp
inc
sbb
add
fs
arpl
int
jno
mov
add
lret
push
jnp
jmp
cltd
sbb
mov
xchg
push
fmuls
mov
movb
push
stc
test
add
and
add
enter
shrl
divl
jns
jmp
imul
adc
mov
add
dec
jo
fbld
cmp
dec
fwait
inc
add
sub
nop
ficoml
adcl
addb
fbstp
mov
lahf
xchg
outsb
mov
xchg
shrl
jmp
out
outsl
pushf
movsl
or
pop
sbb
loope
rcrw
mov
add
fadds
and
adc
int
xlat
adc
jmp
daa
out
sti
incl
add
pop
dec
and
movb
and
lods
into
cmp
pop
aaa
dec
cmp
add
add
nop
pop
cmp
aas
mov
insb
sbb
out
movsl
mov
or
das
push
std
aam
lea
adc
or
lea
hlt
pop
pop
adc
mov
jmp
sahf
mov
mov
jle
add
push
push
test
push
fnstsw
jge
fstps
out
repz
insb
iret
mov
cmp
xor
mov
stos
dec
repz
adc
xor
out
cmp
inc
add
in
push
add
int
add
cmp
push
lret
mov
aad
xchg
fstps
dec
add
rolb
enter
mov
pop
jno
add
add
jge
xor
repnz
mov
jne
scas
sti
enter
int3
ror
clc
xchg
xchg
cwtl
inc
add
inc
add
clc
adc
addb
add
bnd
jg
cmc
mov
add
add
repnz
mov
ret
mov
sbb
or
xorl
dec
int
add
sbb
xchg
jle
fwait
xlat
movsl
lea
xchg
and
and
nop
imul
push
jo
mov
mov
mov
icebp
mov
pop
xchg
rolb
dec
xor
inc
add
mov
movsb
out
jle
mov
pop
add
aaa
pop
leave
inc
add
add
mov
push
sqrtps
ds
push
add
xor
mov
add
push
aaa
mov
pop
addb
xor
and
add
push
pop
cmpsb
dec
jbe
mov
dec
popa
mov
shll
insb
outsl
xor
aas
mov
hlt
addb
mov
mov
add
and
push
std
faddl
std
test
add
scas
push
pop
mov
sbb
adc
pop
dec
jne
iret
add
dec
stos
or
adc
xor
stos
imul
and
dec
inc
add
lret
mov
sub
mov
sub
test
add
gs
loope
filds
add
in
fimuls
stos
popa
cmp
and
push
pop
and
icebp
mov
call
out
rolb
jmp
imul
dec
mov
add
dec
addb
add
adc
and
enter
push
rolb
in
xchg
pop
lds
adc
shrl
loop
in
in
jno
adc
add
xchg
dec
int3
jno
leave
push
push
shr
imul
dec
les
cmpsl
mov
inc
add
push
out
add
insb
cs
lea
lret
sbb
leave
mov
xor
fists
outsl
fists
fdivs
sbb
movb
jo
dec
push
push
mov
mov
sarl
sbb
or
jmp
daa
push
push
fldl
jns
add
dec
mov
ljmp
ffreep
sub
out
xlat
pushf
out
pop
mov
pop
rep
pop
xchg
cli
test
xchg
cmpsb
outsb
or
sub
mov
xchg
cs
outsb
js
pushf
lock
push
stos
addr16
pop
push
xchg
movsl
jle
push
jmp
dec
movsb
ljmp
mov
cmovae
ret
insb
mov
xchg
ss
loope
add
and
cmp
ss
pop
in
aaa
aad
out
add
into
adc
add
jnp
jl
insb
bound
jl
or
aam
bound
std
adc
fs
or
cmpl
movb
mov
add
test
mov
add
mov
inc
shll
shr
fmulp
push
pop
das
jno
stc
add
add
mov
fimull
adc
roll
notl
inc
lds
fwait
sub
jp
pushf
mov
pop
jno
ret
jg
xor
jb
repz
inc
add
lea
xchg
push
jg
sub
imul
jp
pop
xor
sub
inc
add
inc
outsl
sarl
repnz
movsb
movsb
mov
push
insl
in
xor
adc
sub
jo
in
in
subl
pop
lods
or
pop
jp
gs
pop
cs
in
int
sbb
sahf
sub
lds
mov
xor
outsl
mov
jp
dec
inc
add
mov
icebp
movsb
pop
mov
movsb
fldl
push
outsl
push
adc
mov
das
mov
les
and
sub
inc
add
add
jns
jae
mov
pop
mov
cmp
pop
add
pop
add
aad
sub
dec
sbbl
mov
fisttps
push
aad
add
cmp
sub
add
add
mov
rolb
int
js
xchg
xchg
test
pusha
add
fcomp
movsb
movb
xor
jl
sarb
ds
insl
movb
stos
loope
mov
dec
inc
adc
in
mov
imul
cs
fcomip
mov
mov
scas
adc
add
addb
xchg
mov
cmp
ljmp
test
cmp
cltd
pop
dec
test
dec
xor
daa
inc
adc
mov
adc
add
cld
mov
xchg
aam
div
xor
test
js
aam
arpl
mov
adc
pop
push
cmp
jle,pn
sbb
mov
add
sub
stos
mov
add
outsl
into
mov
scas
jp
sbb
ss
negb
push
insl
loopne
lods
popa
xchg
inc
add
inc
lods
push
push
insl
pop
or
xchg
mov
jnp
mov
xchg
push
add
jg
add
mov
dec
lcall
mov
insl
mov
jns
add
lock
xchg
jne
or
aad
add
in
mov
inc
add
pop
lcall
test
enter
stos
addb
ret
ret
subl
movsl
into
mov
push
sarl
lds
flds
in
loopne
adc
add
adc
mov
pop
pop
add
pushf
scas
push
int
add
movb
addr16
add
into
mov
add
test
addl
lods
je
cmp
ja
add
fs
pop
pop
and
mov
in
test
xor
js
add
xor
mov
inc
add
insb
out
mov
jmp
add
int
cmp
imul
and
fwait
pop
bound
mov
inc
ret
sub
add
sbb
leave
ret
pushf
leave
jmp
add
jb
add
adc
xchg
data16
sub
jmp
psrlw
jge
jp
xor
lcall
addb
fs
cmc
movb
pushf
jl
xchg
cs
stc
shrl
adc
mov
xor
add
mulb
add
addb
int
jno
adc
and
out
cmp
mov
add
stos
lds
in
sub
sbb
loop
add
lcall
mov
out
dec
cmc
push
xlat
push
dec
gs
sub
add
cmp
dec
mov
mov
add
jmp
add
and
fists
mov
xchg
stos
cmp
mov
pop
push
xor
movb
add
mov
or
mov
stos
outsb
xor
fistl
add
sub
sub
xchg
mov
fs
mov
dec
rcl
dec
mov
or
ficomps
cmp
pop
jmp
add
push
mov
sub
pop
sbb
dec
jmp
jmp
jnp
add
out
add
jp
push
lock
xor
orl
inc
test
pop
fs
aam
or
icebp
push
ja
push
jecxz
sub
adc
aad
push
push
dec
and
fadd
dec
pop
in
or
loope
inc
mulb
mov
fisttpl
mov
scas
or
sub
jge
int3
fwait
cmp
mul
jg
and
jnp
sub
jg
fnsave
leave
gs
jae
cli
inc
add
test
loopne
xor
xchg
loop
mov
jmp
inc
sub
mov
mov
pop
sub
ret
popa
cli
dec
aas
inc
xchg
inc
add
aam
adc
je
add
mov
addr16
rorl
xorl
outsb
addb
lods
aam
pop
jae
ljmp
insb
cmp
je
add
dec
filds
out
xor
push
xchg
add
mov
ds
add
jmp
hlt
mov
add
sub
fs
or
xlat
mov
pop
das
pusha
add
inc
add
jbe
hlt
adc
sbb
adc
xor
out
or
push
cmc
sbb
inc
sbb
mov
jp
push
add
pusha
add
adc
jl,pn
mov
mov
push
or
dec
sbb
push
xor
sub
sbb
add
ja
hlt
push
and
sub
ss
call
je
jbe
and
icebp
inc
clc
rcll
cmp
add
jecxz
jb
cli
or
addb
outsb
push
add
iret
out
cmpsl
out
xchg
or
jle
add
pop
dec
arpl
add
dec
jno
mov
insb
mov
sub
xchg
or
and
cmp
jecxz
arpl
mov
addb
ret
xchg
and
aaa
mov
and
add
ja
jmp
sbb
xchg
xor
dec
jmp
sub
jae
add
jbe
aaa
mov
aad
mov
mov
sub
jmp
repz
sbb
xchg
lock
mov
xor
int
cmc
push
lahf
fbld
add
sub
das
ss
loope
pop
arpl
add
jns
ljmp
fdivl
mov
xor
js
stc
add
jns
lds
dec
popa
xor
cs
call
jo
nop
test
test
add
scas
push
xchg
loope
mov
add
sahf
xor
pop
or
rolb
jg
xchg
and
shr
mov
push
js
dec
pop
test
loop
fadd
addb
xlat
jo
add
add
jno
mov
repz
imul
mov
je
add
lods
cld
mov
xor
dec
ret
pop
imul
add
into
sbb
mov
sub
mov
pop
jne
xchg
clc
out
inc
lahf
cli
pop
dec
int3
out
xor
inc
inc
ret
jge
negb
add
in
jge
js
adc
dec
sub
adc
testb
inc
pop
sub
add
test
mov
xchg
loopne
cs
pop
insl
ret
fstl
loopne
or
sub
xlat
inc
add
add
add
in
movsb
test
pop
test
jo
add
adc
es
sbb
cmpsb
mov
ficompl
js
shll
mov
dec
sahf
dec
dec
xor
hlt
sbb
xchg
sarb
add
out
shll
popf
push
add
mov
xchg
orl
out
add
xchg
push
xor
addr16
and
lods
stos
dec
push
cmp
lahf
pusha
add
push
lahf
mov
mov
out
add
lods
mov
xchg
add
aam
cmp
add
sub
sbb
inc
add
sti
cmp
in
nop
fadds
or
pop
loopne
pop
jb
outsb
sub
adc
add
ds
add
dec
inc
add
mov
xor
sbb
mov
notl
add
push
or
push
jae
sbb
test
aad
ret
pop
cmp
test
imul
inc
fisubs
dec
pushf
xor
add
xor
adc
cmp
mov
dec
lcall
loope
adc
add
mov
pop
repz
leave
loope
mov
pop
mov
lret
xchg
sub
push
and
lods
push
incb
std
dec
aad
and
cmpsb
pusha
add
push
add
add
push
call
add
outsl
sub
jbe
push
insl
push
ss
adc
dec
leave
pop
cld
mov
addb
sub
mov
add
pop
popa
movsb
insb
insl
or
add
add
in
shrb
inc
insb
push
aam
sub
add
adc
mov
push
add
scas
fbld
push
hlt
repnz
movsb
add
shrb
xchg
das
or
add
sbb
xchg
loope
clc
shlb
cmp
aam
into
test
repz
movlps
xchg
imul
stos
mov
mov
mov
repz
popa
pop
cmp
add
in
inc
ss
and
mov
call
bound
shl
cs
adc
jmp
lods
jnp
mov
or
and
aas
lock
add
je
movsl
cwtl
sbb
add
fadds
outsb
stos
gs
pop
push
cmc
jo
test
jbe
jl
les
push
push
hlt
lret
mov
inc
add
rolb
add
cli
popa
loope
clc
ljmp
xchg
sbb
data16
das
or
xchg
xchg
lcall
pop
or
mov
mov
negb
outsb
dec
push
add
stos
xchg
test
ftst
jecxz
popf
lahf
or
mov
push
sub
push
cmc
add
mov
add
inc
add
pop
pcmpeqd
sbb
into
out
ja
cmp
addr16
mov
iret
and
fdivrs
push
xchg
add
jne
jne
fldenv
inc
add
dec
pop
pushf
xor
jge
or
pop
incb
push
or
or
scas
lods
dec
sub
int3
dec
jp
pop
ljmp
jo
lret
mov
mov
addb
push
cmp
adc
pop
mov
stos
lock
pop
mov
add
lret
ljmp
push
and
mov
add
leave
mov
mov
sbb
lret
mov
xlat
sarb
sti
cltd
pop
out
inc
pop
pushf
or
pop
pushf
into
push
mov
movb
add
insb
dec
push
add
aam
les
test
add
add
pop
loope
or
pop
or
jns
or
ja
xchg
cmp
test
xchg
sarb
push
pop
stos
xor
and
sbb
push
sub
popf
jge
lods
mov
inc
xchg
in
mov
out
push
add
rcr
test
testl
sub
psubusw
mov
and
cmp
mov
push
xor
mov
xor
and
ret
jl
mov
bound
mov
gs
movb
imul
mov
add
add
mov
cmpsl
add
dec
fidivl
xor
xchg
jmp
add
and
scas
pop
in
cmp
es
in
cmpsb
pop
jg
loope
inc
pop
decl
data16
lret
out
ret
dec
jns
cli
das
push
rol
mov
lods
cltd
arpl
mov
fbld
mov
scas
mov
lret
out
jmp
sahf
mov
call
adc
inc
call
add
add
dec
je
jb
jae
sti
imul
popf
cmp
jle
add
mov
cmp
ljmp
jmp
inc
mov
xchg
inc
loope
push
fldl
add
rolb
xor
popf
test
pop
popa
pop
lock
add
xchg
pop
mov
sub
and
cmp
add
in
sub
add
push
repnz
push
aaa
adc
lret
jno
mov
push
add
mov
arpl
push
xor
shrl
outsl
or
mov
loope
leave
mov
pop
mov
lret
dec
jle
repz
in
pop
jl
mov
addb
rolb
lods
sti
pop
or
dec
mov
add
add
pop
xor
fwait
jae
xchg
push
pop
test
and
jmp
stc
aaa
sbb
sbb
add
cmovl
sti
loopne
mov
leave
pushl
aam
xchg
nop
xor
js
push
mov
add
add
divl
or
pop
out
iret
pushf
ret
lcall
ja
jnp
sub
push
movsb
in
xor
xchg
sahf
push
rolb
mov
mov
fadds
push
push
mov
mov
add
shl
pop
sbb
nop
push
pop
xchg
sbb
push
cmpsb
out
movb
push
movsb
fcomp
leave
and
cmp
cli
mov
cs
jb
cmp
add
in
jp
jmp
add
push
cwtl
or
in
push
mov
pusha
add
mov
scas
xlat
push
orl
test
das
add
mov
and
ljmp
scas
xor
dec
pop
xchg
push
add
pop
mov
add
sub
cmc
mov
add
jge
or
xchg
aas
sahf
push
add
je
or
adc
mov
and
pusha
add
loop
jo
leave
sub
add
out
xchg
jne
add
mov
ds
mov
cmpsb
cltd
adc
push
int3
das
sbb
lcall
mov
mov
lock
jbe
xor
mov
andl
fsubs
jle
das
std
adc
lea
arpl
push
mov
add
add
ja
or
test
jp
js
clc
jo
flds
imul
add
out
int3
stos
xchg
jno
push
jnp
mov
add
and
cmp
loop
sub
sub
push
xor
jecxz
mov
addr16
mov
dec
aad
js
int3
aas
mov
sub
or
add
add
xchg
push
in
and
mov
sub
adc
adc
popa
inc
fisubrs
js
fcmovnb
sbb
sbb
jns
jo
inc
icebp
aas
dec
and
mov
push
add
add
clc
mov
push
fstps
int
orl
ss
lret
out
and
jle
jle
insl
lahf
jl
add
iret
xlat
and
dec
jl
inc
lods
mov
rorb
sbb
sbb
movsb
lds
inc
dec
push
add
pop
outsb
lods
or
sbb
lock
repz
daa
xor
pop
lret
call
adc
jl
add
adc
sarl
push
roll
adc
lret
rclb
inc
add
rclb
aas
adc
jnp
lahf
push
add
icebp
pop
cmpsl
inc
call
dec
and
call
pop
mov
ljmp
out
sbb
rolb
rcrl
loopne
test
fldcw
cmp
add
shll
mov
sub
lds
addb
mov
ret
push
orl
xchg
call
out
add
add
sahf
imul
add
js
jmp
cmp
inc
and
xor
cmp
add
insb
pop
sbb
call
adc
sbb
push
clc
fidivs
lods
push
and
add
add
xchg
or
addl
dec
notl
push
push
or
sbb
jmp
cmp
sub
jle
mov
insb
inc
jb
das
adc
push
add
das
mov
cmp
das
or
in
pop
mov
std
int3
mov
add
testb
and
je
xlat
and
sbb
je
mov
cmp
arpl
inc
add
fs
in
mov
add
jl
hlt
sub
mov
mov
jge
popa
inc
add
adc
rol
add
cmp
dec
push
push
iret
lods
sbb
fidivrl
and
mov
sub
cmc
sub
je
xchg
fistpl
scas
push
mov
add
mov
xchg
icebp
mov
pop
cmp
rcll
cmp
jbe
stos
sbb
cmpsb
xchg
in
sbb
add
cmp
sub
or
xor
sarb
sbb
pop
rolb
adc
mov
pop
in
stc
out
cld
xchg
adc
test
push
push
cli
xor
push
pop
and
jg
mov
xor
cmp
add
pop
not
mov
xchg
call
arpl
add
jl
insb
ds
jmp
xor
idivb
and
add
add
iret
jnp
push
loop
xchg
imul
xor
sub
cli
xor
aad
repz
cmp
push
add
dec
and
outsb
rolb
mulb
add
xchg
mov
xchg
out
enter
adc
or
mov
adc
out
xchg
or
push
cltd
mov
push
shll
mov
adc
xchg
shll
mov
sub
hlt
push
mov
out
xchg
sub
mov
pop
push
vmread
cwtl
lahf
push
stos
and
push
rorb
mov
int3
divb
add
or
addb
mov
mov
and
xchg
mov
test
add
jo
lods
addl
negl
sbb
rorl
pushf
and
js
jno
pop
out
mov
leave
dec
xor
add
rolb
or
notb
pop
insb
orl
fisubrs
jp
jecxz
jle
push
add
nop
cmp
or
mov
xor
sbb
add
add
push
adc
hlt
clc
add
mov
enter
popa
scas
pop
aad
in
pop
cmp
pusha
add
xlat
cs
push
sbb
mov
add
jb
add
cmpsb
rcrl
add
add
adc
stc
and
dec
or
cmp
xchg
jmp
and
fsts
add
popf
fldln2
clc
or
add
push
psubd
loope
mov
sub
movsl
stc
or
fstpt
scas
jno
pusha
add
cltd
cmp
push
enter
fmul
mov
nop
out
enter
add
push
out
jne
loopne
xchg
hlt
insl
and
cs
andl
insb
lcall
mov
mov
inc
or
add
cmp
test
add
adc
cmp
cmp
popa
addr16
push
gs
cld
jo
add
rolb
mov
out
rorl
nop
insl
test
ljmp
in
sbb
test
int
and
adc
stos
adc
in
and
sbb
xchg
jl
idivl
mov
dec
push
xchg
xchg
mov
sbb
adc
add
and
push
out
jg
cmp
xchg
mov
test
push
or
cmp
mov
add
loop
sub
add
and
movb
ss
adc
mov
xlat
jge
or
add
nop
cli
lcall
mov
add
das
xchg
xor
mov
ret
mov
add
les
inc
add
pop
mov
sahf
inc
add
and
push
addr16
sarb
cmp
or
jecxz
pop
aam
insb
rolb
into
sub
xchg
xchg
sbb
in
fs
sbb
test
bound
test
or
push
add
sbb
mov
lahf
push
jno
push
and
add
mov
dec
push
imul
pusha
add
es
movb
cld
xor
push
jmp
in
ja
push
push
jno
popa
mov
xchg
mov
addb
loop
pop
je
push
add
mov
sbb
sub
add
add
rcrl
sbb
add
repz
push
repnz
movl
rolb
add
leave
xchg
pop
test
test
loope
in
std
in
sub
or
cwtl
loopne
cmpsl
and
leave
lahf
or
loope
scas
push
iret
icebp
in
inc
and
inc
pop
and
movb
inc
add
nop
cmc
sub
inc
add
cli
popf
gs
xlat
sahf
push
add
or
fcmovu
adc
push
xor
xchg
cli
jae
add
daa
cmp
push
addr16
inc
test
out
push
inc
jg
imul
pop
popf
iret
mov
es
repnz
fstl
arpl
mull
jb,pn
pop
lods
jecxz
dec
hlt
outsb
xlat
in
in
mov
mov
stc
sub
fxch
inc
mov
pop
inc
add
dec
xor
and
cli
out
mov
es
andl
adc
das
cmpl
dec
daa
mov
neg
ja
sbb
add
xchg
ljmp
lods
fwait
mov
pop
sti
scas
ret
ss
pop
es
fldcw
and
and
add
dec
mov
push
add
sub
dec
ror
fcoms
out
sbb
in
fimull
out
mov
subl
dec
shlb
mov
cwtl
sub
dec
sbb
add
sahf
cltd
mov
movntps
and
aam
inc
add
xchg
mov
mov
mov
add
or
lock
push
xchg
xchg
mov
mov
dec
inc
add
leave
push
mov
sub
addb
cmp
je
jmp
mov
jns
or
outsl
push
adc
add
pushf
jp
dec
pop
dec
hlt
ss
out
mov
xchg
push
and
loopne
jecxz
in
xor
push
int3
je
add
xchg
outsw
imul
adc
cmp
jmp
sbb
fbld
jnp
scas
out
and
mov
mov
leave
ja
popa
mov
push
inc
imul
mov
in
lods
and
mov
roll
lea
add
mov
jb
and
add
push
adc
add
mov
jge
lods
enter
aam
mov
sbb
push
add
insl
push
add
lret
ret
push
jmp
negb
sub
out
popa
fs
and
rolb
int
fs
scas
mov
xchg
ds
test
xor
fsubl
rolb
jecxz
outsb
daa
add
ret
mov
jae
jo
or
xchg
ja
jl
and
out
dec
insb
movsb
std
ljmp
push
add
push
outsb
rolb
and
xchg
movsl
jns
add
pop
mov
jbe
lds
pop
fnstcw
js
mov
jnp
jo
add
pop
mov
or
push
cmp
enter
in
pop
add
xchg
add
pop
jne
cmpsb
adc
xchg
mov
pop
ret
fidivrs
adc
fcmovnu
xchg
mov
sbb
clc
pushf
stc
push
out
jl
mov
arpl
aam
sbb
mov
das
xlat
cwtl
fs
jae
sbb
dec
mov
pop
arpl
xchg
push
test
cmp
enter
loope
adc
cs
shll
mov
or
push
dec
lea
inc
movsb
or
push
jno
cwtl
fs
adc
inc
add
fisubs
add
adc
adc
mov
fwait
xchg
popa
xlat
dec
pop
iret
aad
inc
mov
add
in
mov
xchg
int
mov
mov
inc
add
loop
cmp
rcrl
out
jle
test
mov
clc
and
cs
cmpsb
jge
mov
repz
mov
add
add
xor
cmc
dec
scas
xchg
leave
pusha
add
jle
test
cmpsl
inc
adc
lods
pushf
pushf
xchg
data16
jge
insb
sub
push
add
aas
nop
jae
jecxz
xor
mov
addb
cmp
pop
rol
add
movsb
mov
mov
inc
in
test
in
adc
fidivs
xor
adc
cmpsl
jge
gs
xor
mov
xor
shll
adc
lret
push
xor
jb
dec
sbb
jnp
mov
repnz
fsubrl
mov
cltd
pop
lock
aas
and
dec
popf
mov
xor
sahf
jbe
insb
mov
pop
mov
add
cmp
lcall
popa
sbb
aaa
fldt
pusha
add
in
lea
std
sahf
xchg
add
sub
inc
add
mov
or
mov
outsl
push
in
in
sub
add
pushf
aas
pop
xchg
adc
or
fs
adc
or
lret
nop
push
dec
aas
loop
xor
inc
popa
pop
jb
hlt
and
int3
pop
dec
and
sbb
jecxz,pn
mov
fistps
pop
addb
bnd
xchg
sub
divps
add
in
adc
pop
pop
mov
pop
mov
add
and
inc
mov
jo
fnstcw
mov
inc
add
hlt
cmc
xor
add
js
dec
mov
add
push
sbb
adc
mov
dec
cld
rclb
push
bnd
out
outsl
fisttpl
in
xor
jmp
add
ret
dec
sbb
adc
push
add
add
xor
gs
fstps
adc
movsb
lahf
push
sub
lods
add
cld
pop
and
outsl
sarb
add
pushf
iret
xchg
add
pop
test
je
or
dec
fdivp
or
cli
or
fdiv
addl
add
repnz
inc
leave
mov
add
add
or
add
lret
lret
jp
pslld
add
imul
clc
jb
icebp
jo
xchg
inc
lods
in
ficomps
pop
jbe
lcall
jns
sub
fidivrl
add
ljmp
jmp
add
mov
add
into
stos
xor
out
jnp
pop
and
mov
xchg
gs
add
push
add
sbb
int3
jne
xchg
mov
add
pop
xor
push
addb
les
pop
test
test
jo
aam
mov
add
push
mov
subps
shrl
xor
add
jg
inc
xchg
xor
push
int3
dec
cmp
fisubrs
and
lahf
xor
mov
jl
mov
rep
cmpsb
xchg
or
xchg
and
popa
push
data16
out
inc
dec
fdivrs
insb
or
xor
es
fcmovbe
aam
or
lock
add
fcomps
imul
popa
adc
test
cmp
and
mov
fsts
ljmp
mov
fdivp
ds
pop
ljmp
and
enter
add
out
stos
cmp
xor
or
ficompl
add
push
sbb
lods
loop
mov
insl
lock
mov
inc
add
sub
jg
cmpsb
aas
sahf
mov
xor
add
jl
test
mov
movsb
ljmp
adc
sbb
push
dec
jle
cld
aaa
daa
jp
pop
cli
daa
fisttpll
dec
mov
cmp
les
iret
jecxz
push
jo
mov
lock
loop
stc
movb
xchg
test
xor
push
daa
jmp
add
cmp
add
cmp
mov
or
push
jmp
mov
add
cld
jo
add
pop
outsl
scas
scas
int
stos
or
pop
pop
inc
push
xchg
popf
sbb
mov
inc
add
aam
lds
mov
pop
stos
mov
lea
cmp
repz
jb
test
add
outsb
xchg
push
jl
lret
mov
push
pop
nop
cltd
xor
movsl
pop
repz
addb
das
and
loope
loopne
aas
lods
out
or
jp
in
cmp
outsb
stos
inc
and
js
push
lahf
ret
and
mov
dec
movsl
and
enter
arpl
push
bound
es
addr16
push
repz
and
ret
jnp
add
pop
mov
adc
jnp
cld
xchg
mov
cmp
cltd
push
sbb
add
pusha
add
xor
call
push
mov
and
in
call
in
and
loopne
int3
int3
mov
mov
jecxz
mov
push
jb
fld
pop
in
pop
addb
mov
xchg
xor
add
cmp
sahf
mov
or
dec
cmpsb
pop
dec
and
push
sub
dec
mov
test
addr16
loop
jb
sbb
add
jl
gs
sbb
xor
pop
xor
or
jmp
push
fwait
mov
sub
fimuls
ja
lret
jg
xorl
gs
inc
add
pop
aam
push
xor
jmp
adc
add
stos
mov
sub
add
add
add
inc
xor
ss
mov
lods
jns
pop
mov
test
sbb
insl
cmp
jmp
push
stos
dec
mov
andl
pop
cmp
ljmp
push
movsb
adc
cmp
add
lret
movsb
sbb
cmp
xchg
repnz
fldl
fmull
icebp
std
jnp
imul
aaa
dec
jbe
gs
addb
xchg
add
sub
je
and
gs
push
movb
mov
out
push
sub
add
push
jnp
jecxz
or
fsub
mov
and
loop
dec
repz
out
add
push
dec
lods
jb
sub
jl
adc
loopne,pn
jp
mov
xchg
fdivrp
loop
jae
add
add
outsb
xchg
pop
shll
xor
in
enter
fidivrs
bnd
in
mov
xchg
lea
shr
outsl
xorl
mov
sbb
jmp
dec
addr16
mov
movsl
add
mov
cmpsl
push
add
xor
pop
pop
dec
aam
mov
push
dec
sbb
inc
add
stos
int3
cmp
lcall
mov
clc
push
cmp
add
push
add
add
add
sub
in
into
cmp
popl
add
and
pop
mov
in
daa
lock
add
sbb
fwait
nop
cmp
mov
sub
aam
out
xchg
jns
rolb
cmc
bound
mov
out
and
addr16
add
in
aas
arpl
inc
adc
push
cmp
add
add
dec
mov
std
out
rorl
add
pop
push
stos
scas
or
pop
test
add
decl
add
mov
lods
push
mov
seto
xchg
ret
pushf
sbbl
xchg
jns
add
inc
add
hlt
ret
xchg
int
in
cmpsb
jmp
insl
stos
cmpsl
dec
xchg
pop
push
scas
dec
movsb
or
imul
xchg
mov
xchg
aad
lods
xlat
xchg
dec
cmp
in
addl
jmp
fcmovbe
iret
je
mov
add
cmp
movsl
idivb
fldl
sbb
in
mov
outsb
movb
testl
inc
or
add
inc
add
sbb
jp
mov
and
and
rcl
stos
dec
mov
add
inc
insl
ds
mov
repz
jae
push
pop
push
shll
imul
add
lods
gs
aad
and
push
pop
xchg
cld
movb
adc
and
add
mov
clc
adc
nop
fnstsw
rolb
cmpsb
adc
popa
cld
dec
push
inc
add
gs
adc
insb
xchg
outsl
push
xchg
lahf
shl
mov
scas
mov
mov
or
mov
add
jno
sbb
daa
pusha
add
popa
inc
int3
lcall
addb
stos
cmp
mov
enter
cmpsb
das
bound
aas
sub
mov
push
adc
fcmovbe
jae
cmp
or
mov
sbb
inc
add
add
rcll
fucom
fucom
mov
push
aas
pop
add
pushf
aaa
mov
rolb
shll
mov
mov
add
dec
mov
push
cmp
fiaddl
add
outsl
scas
cld
lods
pop
add
xchg
xor
push
dec
loopne
sahf
adc
test
lds
sub
scas
sub
pop
push
cmp
int
pop
jno
and
and
push
out
sub
xor
in
aad
add
fdiv
scas
outsb
lahf
mov
daa
enter
cwtl
in
icebp
jnp
cmp
inc
add
fcoml
add
add
add
stc
push
pop
test
inc
in
movlps
or
add
or
push
sti
inc
dec
fiadds
test
push
xchg
stos
dec
xor
add
push
jnp
add
inc
add
add
sub
mov
testb
jg
pop
dec
pop
jbe
add
push
popa
add
std
or
hlt
push
loopne
movb
aaa
cmpsl
or
lret
mov
faddl
cmpsb
cmp
sub
out
and
push
aad
dec
xor
sbb
fisttpll
popf
and
imul
aas
aaa
cli
mov
adc
xchg
cmp
ds
sbb
jle
xchg
push
rcrb
out
add
loop
xchg
and
and
ret
xchg
adcl
fs
test
xchg
xor
outsl
dec
mov
loop
xchg
xor
aad
push
imul
xor
clc
cmp
jnp
add
cli
xchg
add
pusha
add
sbb
rolb
lock
je
add
cmp
test
add
push
fsubs
jne
xchg
addb
icebp
lahf
sub
gs
lret
jo
outsb
sbb
pop
imul
and
mov
out
addb
movsl
and
xchg
and
dec
mov
test
sbb
mov
xchg
and
sbb
leave
lds
mov
add
lods
sbb
cltd
lahf
out
fidivl
mov
je,pt
sbb
lret
sub
cltd
inc
cmc
add
push
repz
adc
add
adc
mov
nop
jo
out
push
cmp
mov
gs
lds
sahf
push
inc
dec
jbe
cmp
jmp
inc
scas
outsb
pop
cmp
or
cs
jecxz
outsl
mov
push
popf
enter
mov
push
aad
div
xchg
out
mov
add
imul
in
dec
test
or
fwait
js
add
add
xchg
hlt
xchg
and
push
aaa
es
add
nop
mov
jp
pop
out
cli
push
jmp
shrl
xchg
int
scas
test
adc
dec
arpl
add
inc
add
add
cs
lcall
add
pop
bound
fbstp
sbb
int3
lfs
mov
cltd
pusha
add
mov
mov
mov
mov
add
insb
add
shll
sub
sub
movb
lds
jmp
sub
mov
sar
dec
jle
cmp
add
or
add
cmp
fbld
mov
add
movsb
xlat
fcom
dec
in
cwtl
movsl
addb
fnstcw
push
lret
mov
ret
les
jge
push
mov
jmp
fisubrs
cmc
adcl
fwait
mov
lret
mov
mov
arpl
mov
jbe
mov
add
lret
lock
lea
addb
pop
or
jecxz
lods
and
add
add
lock
into
outsb
add
outsb
mov
out
dec
cmpsb
daa
aam
repz
mov
push
sbb
jmp
dec
repnz
stos
inc
add
nop
add
xor
sbb
adc
out
fwait
pop
scas
repz
bound
or
and
add
cmp
lret
mov
imul
popa
xchg
inc
pusha
add
out
mov
fxch
stc
xor
add
push
outsl
je
xor
xchg
push
leave
shll
pop
pop
insb
and
mov
sbb
add
add
lcall
fldenv
jge
fs
ret
adc
push
out
out
push
mov
dec
iret
push
xchg
mov
mov
or
aad
mov
sbb
mov
add
sub
add
in
push
fstps
arpl
push
mov
or
enter
cltd
maskmovq
imull
bound
jg
lock
in
mov
sub
xchg
sbb
addb
add
add
call
push
jmp
cmpl
adc
jl
pop
imul
psubq
add
or
filds
sub
ds
inc
adc
scas
scas
or
fdivp
mov
jecxz
das
pop
jge
fstpt
cld
xchg
in
fsubs
rorl
or
jae
push
and
nop
inc
add
cltd
ficoml
scas
lea
cmp
outsb
mov
add
cmp
rolb
cmp
mov
cmpsb
jp
int3
loopne
std
stc
aam
lock
clc
pop
dec
mov
sbb
mov
adc
das
insb
shlb
fwait
lret
les
fistpl
data16
add
push
lahf
gs
mov
popf
data16
mov
cmp
add
aaa
imul
ret
leave
mov
add
jmp
and
pop
lea
push
cmp
jge
enter
pop
sbb
mov
jb
cmp
mov
dec
stc
push
jmp
movb
out
aaa
adc
js
shl
mov
bound
cwtl
xor
inc
add
xor
jbe
pop
dec
xchg
cmp
jp
inc
adc
test
decb
add
add
loope
xor
add
cs
pop
pop
cmpsl
push
sbb
push
push
inc
add
cmp
je
mov
aas
pop
in
mov
jle
ret
ja
push
mov
xchg
movsb
dec
outsl
pop
sub
mov
or
ret
andl
push
sbb
loopne
scas
dec
push
xchg
scas
dec
shrl
dec
rolb
int3
aam
aas
cmp
cmpsl
pushf
pop
mov
add
jb
dec
imul
add
inc
add
imul
jb
js
mov
fwait
jns
mov
repnz
jnp
jno
jno
insb
icebp
inc
adc
sub
in
xor
test
mov
add
rcrb
out
fwait
addb
add
jl
ja
rcll
dec
adc
cli
test
int3
jbe
sub
sbb
jg
mov
sub
or
outsl
push
fs
cmpsb
xor
lea
mov
fwait
xchg
repz
imul
pop
lds
rcr
mov
dec
gs
ret
inc
add
sub
lds
cmp
dec
loopne
mov
xchg
ss
in
adc
mov
sub
fwait
fwait
insl
mov
inc
pop
push
inc
add
mov
adc
pop
aaa
dec
call
cmp
mov
das
sub
into
mov
outsl
mov
or
cmp
je
insb
and
sahf
sti
addb
lahf
mov
in
xcrypt-ctr
cmpsl
fstps
cmpsl
ret
jmp
pop
xchg
dec
sahf
aaa
out
rcl
leave
popa
out
popa
test
jp
dec
incb
cld
cwtl
pop
add
add
ret
mov
add
les
lcall
add
stc
xchg
ljmp
imul
sbb
jbe
add
jo
mov
or
pop
loope
mov
jge
aam
cmc
inc
add
data16
xchg
popf
fcmovb
add
jne
push
and
dec
inc
add
pusha
add
int3
pop
lahf
sbb
rcl
les
pop
push
xchg
pop
adc
push
xchg
sbb
dec
xor
psubw
je
dec
sti
scas
movb
fists
push
imul
add
sub
cwtl
pop
int
sahf
idiv
or
lods
pop
sarl
loopne
and
inc
aas
or
outsb
divl
mov
adcl
pop
push
add
scas
je
jae
and
out
adc
in
sub
add
ret
push
lahf
or
pop
cmp
fs
jge
xlat
xor
and
jns
stos
jae
mov
fistpl
or
fcoms
std
pop
out
mov
push
pusha
add
ret
push
loope
out
fdivrl
adc
add
push
ret
sub
daa
insl
xchg
pop
push
bt
dec
xchg
cmp
inc
sahf
sarl
mov
aas
or
pop
mov
out
stc
inc
add
sti
mov
inc
add
lock
jnp
adc
jo
fdivrs
add
pop
nop
iret
pop
outsl
ficomps
push
addb
xchg
mov
jnp
mov
loopnew
jmp
inc
fwait
pushf
stos
lea
push
cmovo
not
lahf
mov
xchg
hlt
jl
xchg
xchg
stos
insb
pop
and
add
dec
out
pop
xor
sub
loop
mov
nop
mov
add
mov
cli
in
pop
leave
jnp
dec
adc
dec
sbb
push
movb
mov
fbld
add
addb
movb
out
add
mov
inc
add
mov
mov
mov
and
jecxz
addb
faddp
lods
mov
add
xchg
divb
push
out
and
mov
pop
nop
test
fisubs
movb
aad
or
popa
loopne
xchg
mov
cmpsb
movb
icebp
inc
jns
test
add
pop
mov
outsb
shrl
xor
pop
loopne
loope
add
stos
movb
add
cs
inc
jl
dec
xlat
mov
into
movb
push
pop
decl
data16
mov
sbb
data16
int
jmp
jbe
mov
hlt
lods
outsb
cmp
dec
ss
mov
fdivrs
push
mov
adc
inc
xor
sbb
add
mov
outsb
jae
flds
dec
movb
dec
js
sub
test
mov
movb
imul
mov
cld
sbb
das
testb
inc
jmp
ret
movb
cwtl
mov
rcll
mov
add
lods
add
push
add
fwait
jns
stos
pushf
lods
dec
push
iret
out
arpl
imul
and
outsl
mov
add
test
scas
or
cmp
adc
jno
mov
pushf
inc
add
xor
cmpsl
cmpsl
outsl
fnsave
inc
add
rorl
xor
in
jo
inc
insb
mov
test
dec
leave
imul
sahf
sbb
rcll
mov
push
mov
test
cmp
int3
push
fstl
test
dec
stc
stc
push
in
sbb
adc
and
ret
jl
lods
mov
addb
jae
test
inc
pop
and
cmp
bound
lods
mov
addr16
in
cmp
stc
addr16
in
rcrl
mov
test
mov
fiaddl
or
or
bound
pop
lods
mov
mov
ret
sub
mov
nop
fsubl
xchg
pop
jae
xlat
nop
and
add
xor
push
pop
dec
pop
arpl
or
sahf
leave
push
pop
push
repnz
icebp
push
aam
xchg
inc
nop
dec
and
inc
add
arpl
cwtl
rorl
jecxz
and
nop
xchg
aas
popa
lds
in
lret
stc
sbb
repz
push
js
ss
inc
mov
jbe
fprem1
push
pop
inc
add
out
add
stos
ss
xor
neg
mov
pop
popa
insb
clc
dec
dec
jecxz
add
add
fs
loop
mov
add
mov
or
push
shll
dec
repz
or
dec
mov
push
add
in
lret
cli
loop
mov
mov
int
jne
scas
addb
add
loop
and
movb
add
lds
push
imul
xchg
dec
xchg
inc
rolb
insb
fimuls
shll
add
sahf
jo
add
repnz
jbe
sbb
jnp
testl
cli
stos
movsb
sub
mov
xor
xor
lea
add
jmp
icebp
mov
and
pop
movsl
dec
ds
pop
das
mov
cmp
xor
cltd
xlat
push
jae
xlat
mov
xchg
xchg
xchg
dec
jmp
aaa
outsl
repz
xor
aaa
and
or
adc
divl
into
btc
xor
push
sbb
sub
out
or
mov
lds
out
scas
mov
inc
fwait
inc
add
clc
aad
and
leave
pop
and
cli
loopne
mov
add
inc
mov
jmp
add
scas
pop
je
lock
add
or
add
mov
mov
or
add
add
sbb
pusha
add
adc
add
fdiv
hlt
hlt
popf
and
jle
mov
jnp
sbb
pusha
add
push
bound
stos
xchg
sti
out
bound
mov
addb
xchg
cmp
dec
dec
aas
xlat
cmp
and
in
sbb
add
dec
sarb
addb
call
mov
dec
imul
mov
mov
hlt
mov
repz
mull
cmp
mov
mov
add
jmp
mov
stc
xchg
mov
or
rolb
sbb
add
pop
jns
arpl
aam
jns
xchg
xchg
scas
mov
and
mov
sub
dec
rcrl
add
cmp
nop
adc
mov
mov
daa
pop
pusha
add
push
or
bound
jl
and
test
imul
out
lcall
test
add
pop
int3
adc
lret
or
cmp
shll
cmp
pop
mov
jae
jmp
add
rolb
cmp
mov
mov
rolb
rolb
insb
add
enter
xor
cmp
sbb
out
mov
out
rorl
addb
out
add
mov
inc
aas
js
add
dec
clc
lock
in
mov
add
lahf
mov
add
and
xorl
dec
mov
inc
les
mov
inc
add
rorb
sub
jne
lret
stc
mov
jl
add
push
loope
ror
lahf
lds
and
sub
add
imul
mov
xchg
push
or
stos
das
adc
cmp
cmp
add
das
mov
dec
mov
inc
adc
xchg
adc
cmp
fnstcw
push
aaa
out
jns
xor
fadds
mov
sbb
js
jle
push
add
mov
and
pop
ret
push
test
cmc
jae
add
fstps
fcmove
push
inc
add
insb
mov
mov
ret
xchg
repnz
mov
add
dec
pop
scas
cmpsb
js
lcall
inc
mov
ljmp
jnp
pop
mov
inc
add
add
js
ret
jmp
jae
dec
ljmp
lds
add
mov
inc
loop
outsb
insb
clc
rcll
xor
mov
pop
cwtl
les
adc
sub
aad
add
add
fadd
sti
dec
pop
dec
sbb
cmp
sub
repnz
in
shl
daa
adc
add
bswap
xlat
cmpsb
push
dec
stos
push
mov
rorl
pop
inc
ds
or
add
ret
mov
xchg
inc
add
stos
jmp
mov
mov
push
cld
add
sub
dec
dec
mov
aas
mov
fsubrs
adc
loop
add
adc
mov
pop
add
add
sbb
sbb
add
into
loop
aas
mov
or
pusha
add
inc
add
lea
and
push
inc
add
fnstcw
cmp
pop
dec
add
dec
mov
cwtl
std
jbe
and
testl
vmovddup
mov
inc
add
fs
jmp
dec
sti
mov
xchg
cmp
int
leave
push
mov
bound
pop
dec
test
repnz
iret
push
negl
xchg
es
add
cmp
fbld
mull
int
mov
mov
movsl
cmp
fsubrs
fsubp
in
scas
mov
enter
dec
clc
out
sti
mov
inc
add
mov
cmp
dec
out
fwait
xor
ljmp
fiaddl
add
nop
push
in
mov
lahf
out
jmp
out
inc
mov
mov
call
imull
lret
in
adc
lods
aam
add
adc
pop
cmc
or
jp
aas
xor
movsl
stos
pop
popa
mov
rorl
cwtl
xchg
cmc
movsb
loope,pt
shrl
lret
mov
clc
aas
je
js
scas
xchg
jl
xchg
rolb
jae
int3
mov
stos
rcll
sarl
into
mov
das
xor
xchg
lods
mov
adc
pop
add
or
dec
pushf
lret
dec
in
push
fwait
dec
inc
add
ss
dec
xchg
mov
jmp
add
add
add
ss
jmp
sahf
mov
dec
or
in
mov
lret
lods
add
aas
or
xor
sub
jge
cld
xor
sub
mov
cmpsb
or
push
xor
sub
jb
pop
push
add
les
loop
jmp
adc
xchg
mov
mov
jno
fs
sub
pop
xchg
adc
shll
mov
adc
mov
pop
test
pop
adc
or
add
lds
cmp
mov
cltd
daa
add
push
movsl
jne
stos
hlt
xchg
jmp
insl
test
nop
mov
mov
cmp
push
nop
or
jne
sahf
push
inc
cmpsl
sbb
iret
mov
dec
bound
xchg
jae
in
push
stc
or
add
add
pop
divb
and
add
push
je
outsb
movsb
out
cmpl
aad
test
jecxz
xchg
pop
cltd
jns
xchg
test
and
mov
jp
add
iret
test
adc
mov
sub
jbe
and
dec
mov
push
mul
int
sarb
mov
test
push
and
mov
sub
ret
subl
xchg
fldcw
stos
addb
addr16
ss
aas
dec
lea
in
call
in
pop
sbb
jg
dec
and
mov
add
adc
inc
or
add
arpl
js
add
fadd
add
popf
mov
pop
push
dec
mov
fistl
scas
add
mov
sub
jmp
xor
shr
inc
add
cmp
xchg
dec
cmp
in
adc
test
aaa
jecxz
xor
cmpsl
bound
push
cld
cmp
jb
mov
loop
gs
or
push
mov
data16
push
inc
add
push
dec
fiaddl
iret
add
add
adc
xor
pop
sbb
mov
add
addb
pop
imul
jle
lret
jo
mov
mov
sbb
add
addb
fcompl
not
cmp
cmp
les
mov
loope
push
std
add
add
fisttpl
add
push
in
sub
pop
xor
add
and
insl
test
leave
xchg
data16
pop
inc
xor
jb
lea
cmp
cltd
sbb
xor
add
fldenv
sbb
lea
mov
nop
addb
cmp
add
pop
sub
stos
test
insl
push
jb
in
mov
xchg
fsts
mov
jmp
test
bnd
mov
movsl
nop
xor
jnp
insb
sub
xor
add
xor
xacquire
push
pusha
add
out
add
mov
movb
test
xchg
aam
push
add
pop
mov
addb
xor
pop
test
dec
or
add
lahf
in
xlat
cli
pop
loopnew
jns
cs
mov
pushf
pop
mov
imul
outsb
jle
xchg
or
jb
push
in
addb
hlt
push
mov
add
add
xchg
mov
cmp
cmp
and
nop
aad
out
out
jp
pop
and
jnp
inc
add
mov
std
test
mov
shl
xchg
outsl
ss
mov
dec
loop
fwait
jle
data16
fisubrl
aam
adc
mov
negl
mov
out
test
fwait
pop
ljmp
pop
jb
shll
out
inc
add
repnz
nop
les
jp
fisubs
cmp
js
sbb
hlt
push
and
inc
add
sbb
decb
in
addb
std
dec
mov
add
mov
dec
jmp
js
cmp
push
jo
out
stos
xchg
jb
outsl
sub
sub
add
pop
into
sbb
rclb
pop
adc
loope
add
sbb
fisttpll
add
cmp
and
stc
xchg
cmpsl
les
cmpsl
push
jp
sbb
jg
loop
xor
sub
add
push
mov
add
mov
out
gs
cmp
out
daa
test
xchg
loope
xchg
stos
repnz
cmp
sbb
adcl
add
add
cltd
lea
add
cmp
jo
cmpsl
xchg
xchg
popa
hlt
xchg
add
sti
push
bound
mov
pusha
add
pop
lret
pop
roll
arpl
movsb
pop
or
clc
das
jnp
dec
cltd
shrl
lods
into
dec
add
and
gs
out
fxch
push
mov
inc
pop
jge
fisubrs
fstps
rol
add
jmpw
outsb
adc
xor
xor
jg
or
out
scas
fnstsw
clc
sbb
rcr
fwait
jnp
addb
adc
psrld
add
imul
cld
jbe
mov
pop
xchg
in
add
movsl
cli
sub
aam
jno
sbb
mov
pop
pop
stos
mov
int
cld
test
cld
stc
adc
in
movsb
cmpsl
xor
int
dec
fsubs
dec
addr16
loopne
mov
mov
cmp
notl
adc
leave
add
cmp
movsb
ja
sbb
movsl
sub
jo
add
ljmp
inc
add
lcall
clc
lods
pop
xchg
loopne
test
jecxz
insb
test
mov
test
add
add
dec
adc
add
or
insl
mov
popa
movsl
aam
lahf
mov
add
scas
data16
and
ljmp
inc
rolb
and
pop
inc
add
mov
sub
movsl
test
dec
dec
add
mov
add
iret
jg
xchg
jge
insl
add
dec
aaa
jns
push
out
sbb
adc
mov
lods
ret
int
sarl
pop
in
push
or
mov
and
rol
inc
add
mov
call
or
enter
and
cmpsb
dec
add
imulb
in
and
pop
outsl
add
dec
leave
jnp
mov
add
out
pusha
add
cld
jle
push
add
add
jb
push
add
stc
sbb
mov
push
cs
test
push
adc
add
hlt
sbb
push
add
and
mov
cmpl
pop
pop
sahf
test
jns
and
push
add
js
pop
dec
testb
mov
test
rorb
pop
lahf
or
imul
lods
sbb
outsb
xor
stc
test
mov
rolb
or
sbb
lods
or
dec
xchg
add
shrl
xchg
mov
push
arpl
pushf
lods
sub
les
cmp
popf
aad
add
iret
cmp
hlt
movsl
xchg
lds
lcall
enter
push
aad
sub
movsb
lods
js
arpl
lret
push
mov
ficomps
loop
mov
mov
js
dec
int
iret
pushf
cmp
add
mov
popa
xchg
lods
or
scas
pop
fwait
sub
out
popf
xchg
jae
dec
xor
push
lods
xchg
sahf
ljmp
adc
scas
in
rcll
push
in
mov
add
add
sti
jecxz
jg
movsb
addb
das
push
gs
mov
xlat
or
sbb
bound
pop
mov
icebp
ds
popa
fisubrs
idivb
push
add
mov
add
inc
add
frstor
aaa
inc
sbb
ror
mov
test
jno
fcmovbe
rclb
lock
push
mov
idivl
jmp
push
mov
add
mov
outsb
arpl
bound
xchg
or
iret
ljmp
push
imul
push
sarl
adc
sbb
faddp
cmp
in
adc
mov
cmp
add
mov
xor
lock
add
inc
add
push
lock
inc
data16
stos
mov
movsl
sbb
icebp
scas
in
jns
out
lret
add
pop
add
les
add
pop
mov
roll
mov
add
and
stos
aam
cmp
jmp
sbb
jb
ja
lahf
call
rcl
push
and
mov
cmp
mov
lret
cmp
adc
pop
xor
fidivs
scas
push
xchg
xchg
dec
pmaxub
mov
push
imul
ret
inc
mov
pop
aad
mov
pop
cmpsl
daa
fwait
out
test
inc
add
movsb
pusha
add
inc
insl
ljmp
ljmp
add
sub
pop
ret
scas
cmp
mov
xchg
push
cld
adc
repz
dec
sub
jp
cltd
jns
addr16
insb
dec
cltd
jbe
push
je
xor
sti
mov
ljmp
xor
mov
das
mov
pop
sub
and
popf
or
push
pop
jne
xor
rcrl
ret
dec
adc
mov
mov
rorl
jnp
repz
dec
cmp
pop
scas
icebp
cmpsl
les
outsl
mov
loop
add
mov
addb
rclb
mov
ljmp
add
mov
or
mov
lahf
lock
add
xor
adc
setge
sti
push
xlat
push
mov
adc
push
mov
cmpsb
jo
in
add
jnp
test
sbb
andl
aam
mov
jle
outsb
dec
xchg
jno
xchg
inc
test
cmp
xor
cmp
add
int
xchg
mov
int
adc
lahf
stos
shrl
push
enter
loope
es
add
add
push
adc
mov
add
std
mov
xchg
dec
not
dec
fcom
xchg
jle
out
mov
xor
xor
lods
daa
sub
sub
rolb
jp
mov
push
mov
mov
and
aaa
sub
cmp
ds
mov
add
sub
movsl
xchg
lods
push
cmpl
or
lahf
sbb
cld
lock
ds
jle
or
fnstenv
fwait
xchg
and
jmp
mov
and
mov
push
sahf
les
rcr
orl
pop
push
add
pop
dec
jecxz
cmp
mov
mov
int
mov
inc
add
mov
cmp
pop
out
je
ret
dec
jno
sbb
xchg
mov
in
mov
and
add
lcall
inc
adc
push
test
sub
adc
jge
mov
cmpsl
fmuls
pop
subl
adc
test
cmp
cmp
leave
pop
cld
gs
mov
and
mov
jne
or
stos
popf
in
jmp
add
sub
cmp
add
mov
int
mov
adc
in
addb
add
inc
add
fwait
pop
mov
out
xchg
outsb
push
ja
jbe
and
sub
sbb
les
sbb
mov
loop
daa
insl
push
jle
ret
cmpsb
push
call
jmp
test
xor
popf
jno
cmpsl
pop
mulb
out
push
or
lea
and
lret
mov
sub
test
ret
roll
add
pop
add
jo
ret
icebp
jp
adc
popf
sbb
in
jp
inc
shr
flds
ljmp
xor
dec
cs
mov
scas
sarb
pop
scas
and
add
inc
mov
js
fs
add
aas
adc
mov
mov
fisubrl
out
movsb
loopne
stos
lods
xor
cmp
mov
popf
outsb
loope
push
add
fs
jge
mov
jl
testb
andl
fwait
sub
or
mov
scas
pop
popf
cmpsl
mov
leave
push
jns
inc
add
test
fildll
adc
inc
add
or
pop
std
out
mov
call
adc
insb
cmp
push
add
fnstsw
cmc
push
jmp
in
mov
mov
jmp
icebp
mov
add
iret
cmp
push
shrb
loopne
xchg
and
decl
lahf
adc
test
leave
pop
in
push
add
and
fdivl
movsb
addr16
ss
mov
dec
and
jne
mov
add
dec
add
rcrw
jle
sbb
mov
push
adc
pop
dec
adc
or
mov
jno
mov
inc
cmp
fwait
jle
xor
pop
mov
call
test
fmul
dec
jno
icebp
xor
lret
xor
push
arpl
cltd
jmp
aas
imull
call
test
in
loop
xchg
cmp
inc
jge
movb
push
add
loop
mov
lret
out
add
scas
mov
pushl
fidivrs
std
pop
push
ret
gs
mov
mov
add
pop
push
stos
cmp
mov
sarl
mov
adc
add
lret
call
aaa
xor
add
push
sub
je
adc
xlat
or
mov
test
add
icebp
data16
mov
sbb
mov
jle
add
inc
add
shll
or
adc
imul
pop
mov
mov
xor
dec
and
xor
mov
mov
lahf
xor
add
dec
sbbl
stos
mov
pop
idiv
mov
mov
inc
sbb
xchg
bound
xor
add
jb
pusha
add
inc
add
lds
out
mov
cmc
lret
clc
ljmp
mov
and
and
fs
out
fiaddl
jge
sub
push
icebp
hlt
divl
in
sbb
out
aam
mov
push
push
cmp
add
jno
das
pop
or
mov
add
xor
subps
xchg
mov
pop
in
push
adc
add
leave
xchg
push
adc
jp
jnp
xchg
mov
fstpl
mov
jns
mov
add
xor
loop
add
or
dec
xlat
in
sarl
lret
adc
push
xchg
jo
sub
push
call
push
repnz
cmp
inc
inc
fldl
xchg
inc
cwtl
das
xor
sti
out
popa
sub
test
mov
push
sub
call
sete
pop
ficomps
and
lcall
ss
add
fwait
sub
xor
adc
nop
xchg
paddusb
sbb
push
fistl
in
adc
mov
mov
ds
mov
add
jl
imul
aas
mov
pop
add
sahf
in
faddl
mov
enter
neg
cli
fldenv
outsb
jmp
fcoml
dec
lcall
xchg
and
or
jp
sbb
jmp
inc
push
ret
add
xchg
mov
cld
xchg
iret
mov
pop
es
lods
push
cmc
sub
out
ret
and
push
fdivrs
lods
mov
and
inc
es
cmpsb
add
sbb
hlt
mov
inc
add
push
push
sbb
mov
daa
jbe
lret
adc
sbb
clc
inc
add
out
mov
sbb
and
inc
add
into
insl
mov
xor
rcr
inc
dec
cmpsb
pop
dec
inc
pop
cwtl
pop
sub
push
push
xor
das
xchg
pop
call
stos
jecxz
iret
inc
dec
fnstsw
xorl
aas
lea
push
std
imul
pop
fmul
jp
mov
xchg
add
add
dec
out
cmpsb
ret
and
xchg
mov
bound
call
stos
repz
pop
mov
add
cmp
in
mov
add
xor
es
and
adc
aam
jge
mov
addb
xchg
push
adc
pop
dec
cwtl
adc
jmp
jmp
addb
or
lret
push
add
inc
in
jmp
mov
dec
lret
lcall
mov
or
mov
dec
aas
dec
addr16
test
fs
adc
test
enter
jp
mov
fidivrl
dec
pop
jae
nop
fisubrs
add
pop
inc
pandn
push
insb
xorl
aam
ss
xchg
sbb
and
inc
mov
cld
setno
stos
mov
std
in
imul
add
dec
cltd
push
pop
mov
mov
sub
scas
jne
scas
cmp
inc
ret
data16
cmp
push
in
and
pop
xchg
negb
add
jecxz
pop
or
adc
mov
int
add
mov
ja
or
nop
pop
inc
fcmovnu
stc
loope
push
ljmp
pop
jno
ss
lods
push
and
mov
lahf
xchg
adc
in
jae
and
sub
out
jge
xor
imul
sbb
aas
mov
movl
jnp
pop
add
push
sub
xchg
lods
jg
inc
iret
lret
dec
and
mov
cmpsl
cmp
loop
add
sub
repz
dec
push
iret
out
hlt
cmp
in
imul
pushf
bound
ds
lea
mov
mov
adc
add
xchg
mov
fwait
incl
mov
jo
xchg
test
dec
arpl
sub
arpl
add
xor
cli
or
mov
xor
add
xor
ss
and
ss
cmp
sub
pop
mov
add
inc
add
push
ja
mov
aaa
mov
test
pop
jecxz
movsl
pusha
add
sub
lret
mov
xor
in
mov
xorl
mov
ret
sub
jmp
mov
in
outsl
mov
and
adc
mov
data16
sbbl
or
out
add
fiaddl
rorb
dec
repnz
or
add
repnz
pop
lods
dec
ret
daa
mov
in
add
pop
es
fcoms
mov
dec
mov
and
gs
pop
xor
mov
push
jnp
pop
xchg
imul
mov
sbb
cmpsb
loope
fmul
addr16
add
dec
test
fs
dec
jae
add
add
sbb
push
xor
adc
pop
in
xor
les
cltd
inc
iret
mov
mov
aad
push
iret
aaa
pop
adc
das
ss
jp
bswap
adc
jp
sar
mov
push
mov
pop
xchg
enter
pop
movsb
mov
mov
mov
mov
mov
ja
sub
mov
shlb
cmpsb
jbe
add
adc
in
dec
mov
xchg
push
jmp
add
jmp
and
fidivrs
mov
add
mov
popa
jecxz
popa
pop
aas
scas
push
test
loope
adc
cwtl
movsb
rorl
insb
fmull
les
repnz
sub
stos
cmpsb
test
xchg
mov
pop
push
pusha
add
test
cltd
cmpsl
sbb
jp
pop
int
insb
fildl
rorl
fsts
iret
and
push
mov
cmc
loopne
xchg
clc
mov
or
or
mov
adc
jo
stc
ret
jl
fsts
sbb
cmp
stos
filds
adc
xor
sbb
push
or
cwtl
xchg
outsb
or
mov
movsl
push
mov
mov
sub
movb
test
fidivl
jl
mov
xchg
dec
and
mov
fstpt
xor
seta
loop
dec
inc
add
cmpsl
mov
insl
push
dec
out
xor
testl
bnd
xchg
inc
cltd
addb
add
add
xchg
ljmp
inc
add
xchg
sub
jns
and
addb
scas
jecxz
or
mov
inc
cmp
out
popf
iret
call
daa
dec
mov
pop
cltd
jns
sub
fcomps
and
add
in
pop
rcrb
and
out
cmpsl
push
imul
xor
aam
outsb
movsl
cmp
xor
out
jle
mov
sarl
pusha
add
je,pn
and
xchg
orl
jne
mov
or
mul
add
mov
mov
mov
and
lahf
jns
sarb
in
push
insl
inc
add
popa
lret
pop
mov
jbe
cmp
mov
push
enter
add
xchg
addb
add
mov
mov
movsl
sub
mov
lods
sbb
jo
push
js
add
inc
add
inc
mov
bound
es
xlat
add
add
mov
cmc
and
and
pusha
add
adc
dec
stc
movsl
fildll
jne
insb
rcr
rolb
cwtl
sub
add
push
int3
test
adc
in
fwait
aam
addb
mov
outsb
dec
gs
aaa
inc
add
in
in
call
inc
add
dec
lret
xlat
inc
add
add
adc
cmp
loope
mov
add
cmp
pop
xor
pop
sti
int
cmc
xlat
test
icebp
sub
add
fwait
and
popa
out
mov
push
push
lods
pop
imul
mov
enter
sub
sarb
data16
mov
adc
pop
push
cld
sub
in
sahf
jp
int3
iret
bnd
mov
das
roll
inc
mov
mov
sbb
jmp
imulb
push
test
add
add
push
mov
je
mov
jbe
cmp
and
mov
sbb
jno
mov
add
dec
cmpsl
push
mov
adc
pusha
add
decl
xchg
push
pop
jne
mov
insl
pop
add
cmp
mov
mov
xchg
mov
fdivrs
fists
adc
jecxz
add
add
jno
repnz
add
mov
ja
and
sbb
movsb
jno
mov
xchg
inc
add
add
rep
cmp
pop
xor
inc
add
jge
add
popa
push
mov
add
push
insl
lcall
pop
lea
adc
add
sub
add
add
add
add
mov
gs
iret
call
add
or
jne
jmp
xor
push
add
cmp
mov
add
sbb
push
mov
cmp
xor
movb
pop
cmpsl
mov
std
enter
pop
mov
test
mov
jb
test
lret
dec
clc
addb
sub
and
call
inc
sbb
fisttpl
inc
in
in
popl
notb
rolb
addr16
jbe
pop
ja
fs
movsb
xor
imul
rol
data16
mov
cld
xchg
push
shrb
add
adc
xchg
mov
mov
mov
push
insb
nop
sub
roll
pop
int3
leave
test
add
xchg
dec
ret
sbb
add
xor
add
popa
cmp
jle
ret
mov
pop
ljmp
and
int
pop
or
add
or
fimuls
loopew
js
mov
outsl
cli
decl
test
test
sub
mov
pushf
inc
lcall
inc
mov
pop
int
cmc
sub
jge
decl
sbb
jne
add
dec
rcl
loop
jbe
stos
add
push
movsl
push
xchg
mov
push
adc
cs
lahf
out
leave
pop
rcrl
xchg
iret
je
popa
int
addr16
loope
push
sbb
add
xchg
cmpsb
and
inc
jmp
cltd
addb
loope
push
pop
or
add
cld
jns
push
sub
fisttpll
mov
xchg
and
cmp
add
std
int3
aaa
sub
pop
cmp
scas
fsubl
pop
and
fs
enter
inc
push
sbb
gs
popa
popf
dec
dec
xchg
inc
add
fists
daa
push
mov
lds
aaa
popf
xor
dec
in
add
mov
outsb
ret
dec
push
push
xor
add
inc
pop
dec
push
adc
xchg
sbb
fprem
mov
add
cs
in
push
mov
add
iret
stos
inc
add
imul
mov
gs
add
nop
mov
in
jns
je
inc
scas
fnsave
add
add
add
mov
mov
and
xchg
adc
rcll
lods
xor
inc
sbb
dec
pop
out
mov
add
idivb
jg
cwtl
addr16
xchg
or
or
enter
cmp
cwtl
mov
jle
aaa
aas
mov
mov
mov
test
and
fidivrl
xor
outsl
and
mov
xchg
jp
data16
sbb
in
out
add
lret
stos
cmpsl
mov
cmp
pop
flds
aam
cmpsb
lock
cmpsl
andl
cmc
jo
addb
int
xor
lods
in
mov
add
jno
insb
es
aas
aaa
stos
sub
or
gs
xchg
adc
jae
inc
or
sub
fcom
sub
jne
xor
popf
loopne
adcl
jb,pn
int
rclb
cli
loope
rcrl
movl
mov
aas
outsl
idivb
inc
cmp
fstl
stos
dec
cmpsl
scas
fldl
mov
add
mov
addb
sarb
aam
jno
inc
add
js
xchg
ret
std
pop
in
imul
out
addb
and
fwait
je
adcl
lds
lcall
movups
addb
clc
push
movsl
mov
mov
js
inc
add
add
push
jbe
bnd
xchg
into
pop
addb
adcl
dec
mov
add
in
xchg
jmp
inc
pop
inc
add
pop
fwait
mov
shlb
mov
fxtract
out
sbb
call
xor
lret
xor
add
imul
fdivl
pop
add
inc
add
jmp
xlat
pop
push
ror
test
fst
fnstsw
mov
add
pop
pusha
add
dec
mov
add
ljmp
outsb
aaa
popa
int3
cmp
jecxz
jb
mov
mov
xor
rcrl
popa
sub
or
jecxz
out
pop
fcmovne
jmp
or
cld
fdivrs
and
leave
and
lahf
stc
pop
ret
je
xor
and
pop
pop
jno
mov
mov
cli
iret
hlt
pop
or
xchg
mov
jns
stos
rorl
inc
xchg
xchg
adc
cmpsb
sbb
sub
and
mov
test
shl
adc
inc
add
add
mov
pop
push
leave
dec
sub
scas
pop
mov
ja
xchg
es
add
cmp
push
or
add
mov
add
add
add
movsb
sub
aas
mov
add
mov
sub
cwtl
call
xor
push
outsb
pop
imul
jbe
cmp
shl
stc
jne
add
ret
add
loop
push
inc
add
sub
in
cmc
cmc
push
xlat
inc
add
add
ret
scas
repz
mov
sbb
stos
push
loopne
jge
outsb
iret
stos
stos
into
adc
xchg
loop
test
jnp
cmp
mov
mov
pop
mov
add
push
adc
add
es
xchg
out
inc
outsb
xor
cs
push
stos
popa
std
xor
loope
pop
loope,pt
je
popa
fs
movsb
pop
or
pop
mov
cwtl
mov
add
mov
cmp
inc
add
xchg
and
lock
add
fidivl
dec
movb
cmpsl
sub
stc
and
mov
sub
jae
add
mov
jbe
and
jae
dec
jp
xchg
push
adc
add
add
sarb
in
dec
std
cmpsb
loope
mov
add
push
push
sbb
mov
sub
jns
scas
sub
pop
ds
jp
add
mov
out
rcll
inc
sub
dec
inc
jecxz
mov
sti
fst
popa
call
int
adc
cmp
add
movsl
cmpl
push
jp
cmp
pop
mov
pusha
add
mov
add
fs
sahf
inc
add
mov
add
int3
cmp
or
push
inc
add
and
jae
jmp
fucomip
pop
cmp
add
mov
add
adc
pushf
sub
jge
je
iret
loopne
scas
jo
shlb
push
test
out
ja
stos
jmp
je
das
xor
add
jg
add
ret
dec
imul
sub
add
stc
mov
inc
add
into
stos
or
mov
sub
das
dec
jecxz
dec
sub
add
xor
xchg
sbb
pop
inc
add
add
fdivl
shl
pop
jmp
jb
add
add
lock
shrb
mov
bound
xor
repz
pop
inc
daa
mov
scas
test
ret
add
and
mov
out
addr16
mov
ror
add
xchg
mov
mov
add
pushf
int3
ret
and
cmp
gs
sbb
jns
scas
inc
les
adc
pop
into
rolb
xchg
jno
mov
and
sub
xchg
xor
jl
shll
es
jo
ret
mov
arpl
jmp
mov
cwtl
hlt
repz
add
xor
or
fisttpll
push
push
cmc
sub
pop
cmp
inc
add
es
lcall
je
jg
xor
adc
imul
mov
aas
mov
int
mov
les
pop
cmp
cmp
ljmp
inc
addb
xchg
shlb
inc
add
sar
repz
fdivrp
movsl
cs
movsl
push
xor
repnz
pop
les
inc
xor
outsb
mov
mov
cmc
adc
inc
add
xchg
ret
jo
add
cmp
ljmp
stc
repz
push
xor
movb
push
test
lcall
cmc
jo
mov
sbb
or
lods
mov
mov
data16
popf
inc
add
hlt
ds
mov
mov
mov
push
add
add
mov
add
xchg
mov
push
adc
push
xorps
loope
outsb
cmc
imul
orl
mov
sarb
daa
xchg
jno
inc
mov
xchg
insl
movsl
jo
mov
cmp
into
es
rolb
imul
mov
jno
aaa
xor
mov
pop
lea
mov
mov
or
lock
cmpsl
dec
pusha
add
and
jnp
add
and
add
into
shrl
hlt
inc
add
stos
lret
push
ljmp
jmp
test
jge
fnstenv
mov
add
pop
push
decl
sbb
sbb
jo
aam
jp
fnsave
stos
mov
fildl
jp
add
pop
cmp
mov
or
mull
inc
add
xchg
shll
jae
cld
xchg
add
mov
mov
and
cmpsl
mov
push
xor
xchg
sub
fiaddl
sbb
add
add
lret
xor
inc
pmuludq
lods
jg
lret
int3
push
int
or
inc
add
mov
jne
add
and
add
add
add
ljmp
add
bound
mov
hlt
out
xor
mov
push
loopne
push
sub
cmp
les
pusha
add
adc
xchg
mov
jne
jmp
cld
push
push
push
adcl
clc
out
call
sub
sbb
mov
add
dec
pop
int3
and
push
or
mov
rcr
addb
mov
xchg
aam
movb
iret
insb
rolb
scas
dec
add
xor
sbb
xchg
divb
dec
outsb
movsb
inc
imul
jmp
sbb
xor
xchg
lea
add
and
add
sbb
dec
mov
push
add
ret
les
mov
add
pop
ds
in
daa
mov
cwtl
pop
movsb
testl
add
inc
add
push
pop
in
lret
add
push
loop
mov
add
mov
xlat
js
push
out
adc
or
outsb
inc
add
sbb
mov
hlt
inc
add
in
xor
pop
cmc
pop
and
std
das
in
or
fiadds
lret
pop
push
jnp
mov
jae
movb
dec
iret
push
jns
stos
loop
popf
sbb
leave
mov
cmpl
add
sbb
and
pop
les
push
ja
pushf
push
add
decl
mov
lods
inc
jo
pushf
cld
cltd
sub
add
or
lods
push
jmp
pop
adc
fs
popa
sub
stc
movsl
or
sti
shlb
push
jmp
idivl
xlat
decb
xlat
mov
xchg
addb
dec
js
sarb
lea
mov
std
mov
jle
in
mov
xchg
notb
fs
add
dec
mov
add
sbb
cmpsl
pop
and
pop
mov
jnp
dec
jecxz
mov
or
mov
add
and
out
ja
fxch
addb
shl
leave
dec
jmp
dec
lret
sbb
sbb
leave
in
lods
dec
adc
cmp
test
mov
bound
dec
aas
cld
call
or
dec
mov
add
fildll
add
xor
sarl
les
jae
pmaddwd
add
std
pop
push
popa
fdiv
cmpsl
inc
add
adc
popf
popf
bound
test
adc
mov
pushf
push
sbb
fs
in
shr
aaa
inc
out
sub
dec
cwtl
clc
and
hlt
movsb
or
mov
push
xor
daa
adc
dec
jae
aam
sub
rcll
mov
adc
add
popf
push
iret
mov
mov
pop
lds
or
mov
lods
add
lds
mov
jb
mov
or
add
sub
xor
jae
sub
xchg
add
pusha
add
sub
mov
pop
pop
movb
fnsave
jp
imul
add
add
inc
add
pushf
movb
stc
rorb
xchg
pop
inc
fwait
daa
mov
inc
add
rorb
stc
mov
or
inc
add
test
add
add
fisttpl
add
add
or
call
les
add
sarb
sbb
outsb
jle
addr16
jl
iret
lds
and
lret
stos
insl
mov
xchg
push
add
jno
scas
jp
push
in
adc
dec
pusha
add
stc
addb
mov
daa
movsb
dec
into
xor
inc
add
mov
xchg
mov
aaa
sbbl
push
movsb
xlat
push
mov
or
movzwl
mov
sahf
adc
repz
addb
int
test
pop
pop
es
test
dec
jmp
pop
arpl
int3
push
pop
push
push
out
shll
xor
imul
rorl
lds
mov
lahf
in
fs
pop
out
push
add
cmp
dec
pop
imul
add
lret
xor
movb
add
xchg
mov
mov
adc
popf
out
stos
push
loopne
inc
fcomps
push
cmc
add
outsb
lods
call
inc
add
out
insl
lock
sarl
push
push
xchg
mov
movb
inc
add
bound
in
sbb
add
xchg
push
hlt
stos
scas
pop
js
fidivrl
lds
insb
dec
pushw
enter
mov
aaa
popa
and
adc
mov
mov
add
add
stc
xchg
pushf
cld
jnp
or
mov
and
adc
ds
push
lret
ss
into
rcrl
mov
push
jmp
rcrb
testb
add
mov
movsl
xor
lret
fcmovbe
ljmp
adc
add
add
add
dec
call
jmp
xor
xor
call
cld
xor
aam
lret
test
insl
inc
add
inc
add
lahf
jb
and
mov
in
sahf
arpl
adc
sbb
aaa
std
leave
pop
int
push
add
hlt
mov
or
stc
push
mov
stos
mov
movsl
add
mull
add
cmc
outsl
push
push
rcl
mov
fwait
iret
stc
iret
lds
iret
or
sub
mov
mov
lcall
frstor
sub
addr16
push
sub
nop
fisttps
es
adc
loope
jl
mov
add
cmp
xchg
lret
pop
insb
dec
sub
bound
cmpsl
jns
ja
addl
mov
movb
loope
push
rol
add
filds
loope
mov
loop
jmp
pop
sbb
cmpl
aaa
scas
popa
adc
sbb
rcr
imul
mov
clc
and
fwait
loop
std
sub
cmp
js
sbb
out
rcl
mov
das
adc
pop
aaa
jb
dec
sbb
mov
add
sbb
outsb
sarl
sahf
addb
add
and
test
xor
add
adc
clc
in
jbe
pop
movsl
xchg
lds
loop
jg
dec
sbb
adc
bound
daa
lea
add
cmp
jl
repnz
stos
xchg
cmpsl
scas
inc
add
in
cmp
in
dec
sahf
fisttps
cltd
aaa
add
inc
cmp
je
mov
jle
jns
add
inc
add
out
movb
repnz
lahf
xchg
fwait
int3
mov
pop
lret
inc
add
sub
jnp
pop
and
jae
add
and
in
iret
cwtl
jne
daa
dec
mov
xor
aas
inc
rcll
hlt
pop
xor
lret
stos
in
inc
ds
add
pop
lcall
cmp
inc
add
mov
or
clc
popa
adc
out
shr
sbb
add
mov
cmp
fs
out
pop
sub
dec
cwtl
sbb
adc
xchg
cmc
out
aad
xor
cmc
or
mov
addb
push
push
add
jmp
jnp
xlat
mov
cmc
faddp
add
inc
add
testb
lock
push
mov
jae
test
ja
add
cld
lcall
pop
jno
sbb
push
imul
push
mov
dec
sub
xchg
xchg
add
aam
jae
cmp
mov
mov
cmp
dec
and
lahf
jns
cmp
addb
test
lods
lock
cmp
pop
sahf
add
sbb
push
ljmp
add
pop
les
divl
jno
movsb
pop
push
add
add
lcall
jecxz
movsl
lcall
or
das
cmc
lock
imul
mov
arpl
ja
push
int3
outsl
cltd
outsb
pop
and
iret
testb
push
arpl
in
imul
test
int3
sahf
arpl
stos
pop
pusha
add
push
add
or
sub
lea
ret
push
inc
add
pop
ror
fwait
xor
mov
add
pop
pop
fldt
test
push
xchg
leave
repz
jg
pushl
add
loop
test
mov
shrl
xchg
outsl
pop
dec
daa
notl
bnd
add
scas
dec
jle
mov
popa
insl
cld
xchg
jp
push
faddl
loop
test
adc
stc
add
imul
fdivrl
ja
adc
icebp
lods
push
inc
add
add
xchg
loop
hlt
push
push
jbe
in
ss
add
unpcklps
les
and
dec
mov
loop
xor
lods
jecxz
push
adc
int3
out
add
xor
mov
jno
jb
inc
dec
pop
cmp
int
inc
xor
pushf
test
mov
add
cmp
cmpl
fildll
testb
orl
add
mov
dec
sub
test
add
push
mov
cmp
aaa
movb
gs
aam
mov
add
fidivrs
bound
adc
add
mov
aam
cmp
cmc
xchg
pop
mov
sub
cli
loopne
add
into
movsl
inc
add
pop
imul
mov
fsubl
mov
add
add
lahf
rolb
std
push
imul
pop
orl
mov
jecxz
mov
mov
jo
jno
add
fnstenv
sbb
push
shrl
push
into
popa
into
in
and
jmp
jecxz
pop
mov
sti
lcall
dec
rcll
mov
sti
fucomip
loopne
mov
and
xor
add
mov
add
repz
sub
add
xchg
or
adc
stos
movsb
cmp
inc
add
jmp
pop
xchg
std
pop
adc
enter
adc
sbb
add
call
lahf
cmpsb
mov
jnp
cld
stos
dec
mov
fists
mov
and
sub
je
mov
mov
push
aaa
sub
add
add
js
inc
sbb
rcl
inc
ja
in
fstps
xor
push
psubb
dec
mov
sub
and
sbb
xchg
inc
add
in
pop
aaa
push
enter
lea
add
dec
xchg
inc
add
pop
nop
or
stc
jmp
xor
and
push
stc
cmpsb
popa
and
adc
loopne
jnp
test
sbb
push
int3
cltd
xor
and
ja
add
and
add
fildl
add
out
xor
pop
ljmp
mov
in
xchg
bound
mov
mov
push
jne
push
xor
add
and
addb
repz
jge
ficoms
adc
inc
out
rcrb
add
cmpl
adc
xor
add
add
add
into
xor
push
pop
in
cmpsl
push
or
pop
and
xchg
es
stos
ljmp
cmp
sbb
pmaxsw
and
sahf
cmp
inc
add
or
sbb
sbb
loopne
call
mov
nop
mov
push
add
addr16
dec
sbb
testl
jne
xlat
push
adc
push
mov
push
mov
insl
and
in
leave
cmp
gs
mulb
add
mov
push
push
data16
aam
sbb
and
xchg
arpl
adc
imul
in
loope
out
cmpsb
sbb
rclb
es
pop
mov
popf
lahf
add
inc
add
mov
add
add
arpl
stc
addb
jl
push
aaa
add
jnp
push
inc
rorb
xor
sub
cwtd
cmp
cmp
sbb
push
fs
jl
xor
and
add
mov
xchg
pop
cld
dec
mov
mov
mov
test
ret
dec
cmpsl
push
cmc
lock
clc
pop
fnsave
sub
inc
add
sub
fiaddl
jp
mov
insb
dec
xchg
rcrb
mov
rcr
jmp
xor
pop
scas
fs
sbb
rcll
pusha
add
add
sbb
aad
mov
push
xchg
push
mov
add
sbb
xchg
loop
dec
and
and
cmc
fwait
push
fsubl
xchg
into
add
add
add
adcl
jmp
je
xor
xor
add
rcll
adc
jecxz,pt
or
sub
int
adc
add
sahf
movsb
push
mov
orl
iret
sahf
lahf
or
xor
add
jecxz
pop
jp
jmp
addr16
add
fstpt
push
es
addb
ds
sahf
mov
pop
shll
mov
dec
mov
pop
in
cwtl
inc
add
test
mov
sbb
inc
cwtl
scas
aam
scas
fildll
nop
out
sbb
rorw
xor
ret
add
inc
sti
pop
cmc
incb
cmpsb
sub
outsl
mov
call
sahf
mov
dec
or
int
add
fcmovnu
add
inc
add
add
lock
push
scas
dec
movsb
cwtl
cmp
fcompl
insb
je
out
insl
adcl
sbb
dec
popl
adc
add
stos
mov
pop
sub
mov
push
aam
cwtl
cmp
pop
adc
push
adc
xor
fwait
aaa
jmp
xchg
sti
xor
stc
insl
rolb
inc
add
xchg
fsubrl
fcmovnu
lds
divl
cmpsl
xchg
test
inc
es
test
adc
mov
jbe
add
pop
inc
mov
jge
and
movb
shll
mov
inc
shrl
jne
or
xor
pop
bound
jp
fstl
adc
jmp
xchg
xchg
xor
cmp
pop
cmp
mov
test
mov
xchg
lods
push
jge
push
scas
adc
push
dec
sbb
push
or
push
aam
imul
call
jmp
add
jp
jmp
aam
jmp
add
dec
les
pop
or
lcall
add
nop
add
inc
add
and
lahf
jae
xchg
mov
movsl
sbb
stos
mov
jl
add
stos
push
or
sub
dec
lods
data16
cld
sbb
xchg
mov
add
lods
sub
sub
loope
mov
inc
add
or
sahf
or
sub
fstpl
push
ja
shll
into
inc
add
jno
and
xchg
hlt
or
xor
pop
int3
je
cmp
fsub
sbb
lock
sbb
sub
addl
mov
std
inc
call
mov
and
push
mov
add
in
push
add
jae
jge
loopne
add
xchg
xlat
and
add
leave
mov
pop
out
stc
int3
movsl
imul
aaa
iret
xor
add
mov
inc
add
loope
loop
inc
add
jmp
fs
jmp
out
and
and
push
fwait
xchg
adc
lods
pop
mov
sub
shll
pop
mov
es
cli
xchg
dec
mov
inc
lods
push
ffree
add
aad
ret
jo
push
int
stc
cli
jo
sbb
adc
fstpt
sbb
inc
add
outsb
std
mov
ret
mov
out
scas
jbe
enter
add
add
add
cs
data16
cli
dec
fiaddl
jbe
jle
jp
scas
cs
mov
incl
rolb
add
inc
add
out
jnp
imul
std
xchg
jb
cs
dec
cmp
pop
mov
aad
pop
shll
fimuls
mov
add
iret
pop
jns
add
lahf
sbb
div
xchg
and
xchg
add
mov
jne
inc
add
lock
popa
mulb
add
adc
push
icebp
lods
ja
sub
mov
or
adcl
pop
jo
outsb
push
add
out
repnz
add
and
dec
mov
movb
sub
jae
xchg
int
mov
xor
cmpsl
les
and
data16
movsl
inc
sti
mov
orl
jns
addb
sub
lahf
inc
and
push
xchg
and
test
call
add
fcoms
add
or
cld
pop
inc
add
cmp
movb
jecxz
pop
and
outsb
add
inc
add
push
mov
adc
loop
add
adc
cmp
xchg
addl
les
jle
test
hlt
leave
lret
popf
out
vmovlpd
jnp
pop
push
add
in
bound
dec
cli
fisubs
dec
daa
xchg
jbe
mov
xchg
and
add
daa
pushf
shrb
sarb
and
sub
add
js
daa
push
out
movsb
inc
add
clc
out
rorl
arpl
or
in
mov
push
lods
sub
inc
ljmp
stos
sbb
data16
add
and
idiv
xchg
imul
int3
mov
cmp
aaa
dec
test
scas
mov
mov
rolb
add
test
cmp
je
and
pop
mov
push
jmp
aam
push
stos
iret
stos
addr16
sub
cli
rclb
rcll
add
dec
shl
mov
mov
insb
daa
popf
push
movsl
xor
fnsave
add
add
or
adc
push
lea
repz
iret
sbb
icebp
cmc
jge
add
add
scas
les
into
sbb
jle
xchg
sub
addb
cmpsb
test
push
rcl
push
ret
add
das
sbb
jg
insb
out
ss
sbb
add
mov
decb
jae
push
xchg
mov
lds
or
mov
les
dec
sbb
add
add
