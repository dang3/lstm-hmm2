shl
in
in
in
in
in
in
in
jecxz
in
jecxz
in
loop
in
call
loop
out
call
loop
inc
out
in
out
in
loope
in
in
in
call
loop
sahf
out
in
in
in
out
in
jecxz
in
in
in
jecxz
in
jecxz
in
in
in
jmp
loop
fsub
loop
push
loop
in
jecxz
in
out
in
loop
in
in
in
jecxz
in
loope
in
in
in
in
in
jecxz
in
out
in
jmp
loop
fs
loop
ret
out
in
call
loop
mov
loope
in
in
in
call
loop
xchg
out
in
jecxz
in
loop
in
loop
in
call
loop
sbb
loop
cmp
loop
and
loop
shl
loop
mul
loop
mov
loop
int
loop
mov
in
in
out
in
in
in
jecxz
in
jecxz
in
call
loop
je
loop
xchg
call
loop
push
out
in
call
loop
int
loop
pop
out
in
out
in
jmp
loop
outsl
out
in
in
in
call
loop
enter
jo
loop
jecxz
loop
aaa
in
in
call
loop
shl
loop
push
in
in
out
in
jecxz
in
jecxz
in
in
in
in
in
loope
in
in
in
call
loop
mov
loop
push
out
in
in
in
jecxz
in
loope
in
out
in
jmp
loop
jne
loop
and
loop
sbb
loop
insl
out
in
in
in
out
in
out
in
in
in
out
in
jecxz
in
loope
in
out
in
out
in
loop
in
loop
in
out
in
call
loop
aas
call
loop
outsb
out
in
out
in
out
in
in
in
out
in
loop
in
call
loop
jmp
loop
iret
out
in
call
loop
out
loop
mov
jmp
loop
das
in
in
in
in
jecxz
in
call
loop
dec
jmp
loop
mov
loop
pop
jmp
loop
loop
in
in
in
in
in
loop
in
jecxz
in
jecxz
in
loope
in
call
loop
in
in
loope
in
call
loop
jbe
loop
mov
loop
in
in
in
loop
in
in
in
call
loop
sbb
loop
test
loop
dec
jmp
loop
and
loop
inc
jecxz
in
loop
in
out
in
loope
in
in
in
jecxz
in
out
in
out
in
out
in
out
in
out
in
loop
in
loop
in
jecxz
in
call
loop
popa
in
in
in
in
out
in
loope
in
out
in
out
in
jmp
loop
mov
loop
fwait
loope
in
in
in
in
in
jecxz
in
loop
in
loope
in
in
in
loope
in
out
in
out
in
loop
in
jecxz
in
in
in
in
in
out
in
in
in
out
in
in
in
jecxz
in
call
loop
and
loop
movsb
in
in
loope
in
call
loop
loope
loop
scas
out
in
jecxz
in
jecxz
in
in
in
in
in
out
in
in
in
jecxz
in
out
in
loop
in
out
in
in
in
in
in
out
in
out
in
in
in
out
in
call
loop
and
in
loop
in
in
in
in
in
jecxz
in
loop
in
call
loop
pusha
jecxz
in
jecxz
in
in
in
loop
in
in
in
call
loop
mov
out
in
jecxz
in
in
in
in
in
jmp
loop
shl
loop
push
call
loop
jg
loop
iret
out
in
in
in
call
loop
mov
loop
mov
loop
loop
jb
loop
mov
loop
lret
call
loop
jp
loop
mul
loop
es
in
jecxz
in
jmp
loop
loope
loop
das
in
in
jecxz
in
in
in
jecxz
in
call
loop
xchg
in
in
in
in
out
in
out
in
out
in
jecxz
in
out
in
in
in
in
in
in
in
in
in
jmp
loop
pop
in
in
loop
in
loope
in
loop
in
loope
in
out
in
loop
in
call
loop
lret
in
in
call
loop
in
loop
dec
in
in
out
in
in
in
loop
in
jmp
loop
in
in
loop
in
loop
in
out
in
loope
in
out
in
call
loop
imul
loop
xchg
out
in
jecxz
in
in
in
jecxz
in
call
loop
push
in
in
loop
in
jecxz
in
out
in
jecxz
in
jecxz
in
call
loop
aad
loop
xchg
jecxz
in
loope
in
out
in
call
loop
jecxz
in
call
loop
aaa
out
in
loope
in
out
in
call
loop
pop
jecxz
in
loop
in
out
in
jecxz
in
out
in
out
in
jmp
loop
leave
out
in
in
in
out
in
loop
in
out
in
out
in
call
loop
test
loop
adc
loop
insl
out
in
out
in
call
loop
movsb
loop
in
out
in
call
loop
jns
loop
mov
loop
in
loop
in
call
loop
mov
loop
lcall
in
loop
in
in
in
loop
in
call
loop
xchg
loop
in
out
in
jecxz
in
in
in
out
in
jmp
loop
mov
call
loop
add
out
in
out
in
out
in
jecxz
in
call
loop
sbb
loop
call
loop
das
jecxz
in
loope
in
jecxz
in
out
in
in
in
in
in
jecxz
in
in
in
jmp
loop
repnz
in
in
in
out
in
out
in
jecxz
in
call
loop
xchg
in
in
loope
in
in
in
in
in
jecxz
in
out
in
loop
in
loop
in
loope
in
out
in
out
in
loop
in
jecxz
in
in
in
out
in
loope
in
call
loop
jae
loop
mov
loop
sahf
call
loop
cltd
in
in
out
in
loop
in
loop
in
jecxz
in
in
in
call
loop
mov
loop
out
in
loop
in
jmp
loop
stos
call
loop
aad
loop
loopne
loop
in
loop
aad
loop
mov
call
loop
arpl
loop
int
loop
mov
loop
iret
in
in
in
in
jecxz
in
jecxz
in
loop
in
call
loop
sahf
loope
in
jmp
loop
sub
loop
pop
jmp
loop
dec
in
in
in
in
out
in
call
loop
scas
call
loop
jecxz
loop
jae
loop
fsubrp
loop
cmp
loop
and
in
out
in
call
loop
mov
loop
jl
loop
push
jecxz
in
call
loop
lods
in
in
out
in
out
in
call
loop
xchg
out
in
out
in
in
in
loop
in
out
in
jecxz
in
in
in
in
in
jmp
loop
outsl
out
in
out
in
out
in
loop
in
out
in
loope
in
call
loop
cmp
loop
push
jmp
loop
aad
loop
sub
loop
in
out
in
in
in
call
loop
jne
loop
shl
loop
ss
loop
xor
loop
inc
out
in
out
in
jmp
loop
sub
loop
sbb
in
in
out
in
in
in
in
in
jecxz
in
in
in
call
loop
pop
loop
in
loope
in
in
in
jecxz
in
in
in
loope
in
out
in
in
in
jecxz
in
call
loop
pop
jmp
loop
data16
in
in
in
jmp
loop
fsub
loop
bnd
loop
repnz
in
jecxz
in
loope
in
in
in
out
in
jmp
loop
loop
in
out
in
loop
in
jecxz
in
jecxz
in
out
in
jecxz
in
call
loop
mov
loop
add
loop
imul
in
out
in
in
in
in
in
call
loop
in
in
in
out
in
out
in
in
in
in
in
jmp
loop
xlat
jecxz
in
jecxz
in
in
in
in
in
jmp
loop
push
call
loop
int3
call
loop
sub
loop
fninit
loop
mov
loop
jns
loop
sub
loop
dec
in
in
in
in
call
loop
mov
jecxz
in
in
in
in
in
loop
in
loop
in
loope
in
call
loop
cmp
loop
pusha
out
in
loop
in
loop
in
loop
in
in
in
jecxz
in
in
in
in
in
call
loop
and
loop
xchg
jecxz
in
call
loop
push
jmp
loop
push
out
in
out
in
loope
in
jmp
loop
mov
out
in
jmp
loop
mov
loop
xchg
loope
in
jmp
loop
jp
loop
xor
loop
mov
loop
dec
in
in
call
loop
sti
in
in
out
in
in
in
in
in
jmp
loop
fwait
out
in
in
in
loop
in
out
in
jecxz
in
out
in
in
in
jecxz
in
jecxz
in
jecxz
in
jecxz
in
out
in
call
loop
es
in
out
in
in
in
loop
in
out
in
in
in
loope
in
out
in
loop
in
out
in
loope
in
jecxz
in
loop
in
in
in
out
in
loop
in
loop
in
out
in
call
loop
hlt
out
in
in
in
jmp
loop
sub
loop
xchg
jecxz
in
loop
in
jecxz
in
loope
in
in
in
loope
in
loop
in
call
loop
jne
loop
cmp
loop
jl
loop
xor
loop
push
loop
in
jecxz
in
out
in
in
in
out
in
out
in
jecxz
in
out
in
jmp
loop
enter
xor
loop
and
loop
outsl
out
in
in
in
loop
in
in
in
jecxz
in
in
in
in
in
out
in
jecxz
in
loop
in
loop
in
jecxz
in
jecxz
in
loop
in
in
in
in
in
out
in
out
in
in
in
jmp
loop
in
in
jecxz
in
call
loop
call
loop
pop
loop
in
call
loop
call
loop
or
loop
jmp
out
in
in
in
out
in
loop
in
jecxz
in
jmp
loop
cli
jecxz
in
in
in
call
loop
and
loop
int3
call
loop
sub
loop
icebp
loope
in
in
in
out
in
jecxz
in
out
in
loope
in
out
in
call
loop
push
in
in
out
in
call
loop
je
loop
sti
in
in
jecxz
in
call
loop
inc
loop
in
out
in
in
in
in
in
in
in
jecxz
in
jecxz
in
loop
in
out
in
in
in
call
loop
pop
call
loop
cs
loop
push
in
in
in
in
call
loop
or
loop
jg
loop
pop
call
loop
push
call
loop
scas
out
in
jmp
loop
jb
loop
mov
loop
out
loop
loop
pop
in
in
loope
in
loop
in
jmp
loop
stos
loope
in
out
in
loop
in
jecxz
in
in
in
out
in
in
in
loop
in
out
in
loop
in
jecxz
in
loop
in
loope
in
loop
in
in
in
out
in
jecxz
in
jmp
loop
pop
jecxz
in
in
in
in
in
out
in
call
loop
sbb
in
in
loop
in
in
in
in
in
jecxz
in
jmp
loop
popa
loope
in
call
loop
cmp
loop
mov
loop
cs
in
in
in
loop
in
in
in
out
in
call
loop
out
loope
in
in
in
out
in
jecxz
in
jecxz
in
out
in
out
in
loope
in
out
in
out
in
loope
in
out
in
loop
in
jecxz
in
call
loop
jmp
jecxz
in
in
in
in
in
in
in
jecxz
in
out
in
call
loop
es
loop
push
in
in
jmp
loop
dec
out
in
loop
in
jecxz
in
jecxz
in
loope
in
call
loop
pop
call
loop
shl
in
jecxz
in
out
in
in
in
jecxz
in
in
in
in
in
loop
in
out
in
out
in
in
in
in
in
out
in
call
loop
ret
call
loop
insb
loop
in
out
in
loop
in
out
in
in
in
out
in
jecxz
in
in
in
out
in
in
in
jecxz
in
jecxz
in
in
in
call
loop
and
loop
cld
in
in
loop
in
loop
in
out
in
out
in
in
in
out
in
call
loop
pop
call
loop
out
loop
pop
call
loop
arpl
loop
mov
loop
xor
loop
pop
in
in
jecxz
in
loope
in
loop
in
in
in
call
loop
loope
in
jecxz
in
out
in
in
in
loope
in
jecxz
in
loope
in
in
in
jecxz
in
out
in
jecxz
in
in
in
loop
in
loope
in
loope
in
out
in
jecxz
in
jmp
loop
in
in
call
loop
shr
in
out
in
jmp
loop
pop
jecxz
in
jecxz
in
loop
in
in
in
loop
in
jecxz
in
jecxz
in
in
in
jecxz
in
jecxz
in
loop
in
loop
in
call
loop
mov
call
loop
movsl
out
in
in
in
in
in
loope
in
jecxz
in
jecxz
in
out
in
jecxz
in
out
in
call
loop
inc
jecxz
in
out
in
in
in
out
in
loop
in
loop
in
out
in
call
loop
inc
loop
in
loop
in
jecxz
in
call
loop
jne
loop
aad
loop
stos
jecxz
in
out
in
call
loop
xchg
out
in
jecxz
in
loop
in
loop
in
jecxz
in
in
in
jecxz
in
call
loop
adc
loop
nop
jecxz
in
jmp
loop
sub
loop
add
loop
shl
loop
add
out
in
jecxz
in
loope
in
loope
in
in
in
out
in
in
in
in
in
in
in
call
loop
push
loope
in
call
loop
inc
in
in
out
in
out
in
out
in
in
in
in
in
in
in
loop
in
loope
in
loope
in
call
loop
pop
jecxz
in
out
in
jecxz
in
call
loop
inc
call
loop
inc
out
in
in
in
in
in
jecxz
in
in
in
jecxz
in
loop
in
loop
in
out
in
out
in
in
in
call
loop
jae
loop
sub
loop
sub
loop
cmp
loop
js
loop
pop
jecxz
in
loop
in
loop
in
out
in
out
in
loop
in
out
in
in
in
out
in
loope
in
in
in
in
in
in
in
jmp
loop
dec
jecxz
in
in
in
jecxz
in
out
in
call
loop
in
in
jmp
loop
mov
in
in
out
in
out
in
jmp
loop
enter
lods
in
in
out
in
loop
in
call
loop
sub
call
loop
loopne
loop
xor
loop
fsubp
loop
imul
in
in
in
in
in
out
in
in
in
out
in
call
loop
pusha
out
in
out
in
out
in
loope
in
out
in
out
in
out
in
loope
in
loope
in
loop
in
jecxz
in
in
in
out
in
in
in
out
in
in
in
out
in
loop
in
out
in
in
in
out
in
jmp
loop
jb
loop
cmp
loop
cwtl
in
in
jmp
loop
addr16
in
loop
in
in
in
call
loop
mov
loope
in
in
in
in
in
loop
in
in
in
jmp
loop
add
loop
daa
jmp
loop
clc
out
in
loop
in
in
in
out
in
jmp
loop
fsub
loop
lret
in
loope
in
out
in
in
in
out
in
in
in
in
in
in
in
in
in
in
in
jecxz
in
loope
in
loop
in
jecxz
in
jecxz
in
in
in
out
in
in
in
in
in
in
in
call
loop
aaa
call
loop
int3
call
loop
sbb
loop
lahf
out
in
loop
in
call
loop
int
loop
xchg
out
in
in
in
out
in
out
in
call
loop
mov
jecxz
in
loop
in
loop
in
jecxz
in
jecxz
in
loop
in
out
in
jmp
loop
mov
loop
icebp
jecxz
in
in
in
jecxz
in
loope
in
in
in
loop
in
call
loop
jns
loop
mov
loop
mov
out
in
out
in
in
in
jecxz
in
out
in
in
in
jmp
loop
inc
out
in
in
in
loop
in
jmp
loop
pop
in
in
out
in
out
in
jecxz
in
jmp
loop
dec
in
in
loop
in
out
in
out
in
loop
in
loope
in
in
in
loope
in
in
in
in
in
in
in
out
in
call
loop
jle
loop
icebp
loope
in
call
loop
sub
loop
loopw
in
out
in
out
in
in
in
in
in
out
in
call
loop
ss
loop
mov
loop
imul
in
in
in
call
loop
jbe
loop
cmp
loop
inc
out
in
jecxz
in
in
in
in
in
loop
in
in
in
call
loop
mov
loop
add
loop
ljmp
in
out
in
out
in
in
in
loop
in
call
loop
call
loop
xor
loop
clc
in
in
call
loop
scas
out
in
call
loop
ja
loop
mov
loop
inc
out
in
jmp
loop
jb
loop
jg
loop
pop
in
in
out
in
out
in
out
in
out
in
out
in
loope
in
out
in
out
in
jecxz
in
in
in
jecxz
in
in
in
out
in
out
in
call
loop
add
loop
pop
out
in
call
loop
push
out
in
out
in
loop
in
out
in
out
in
out
in
in
in
in
in
out
in
loop
in
jecxz
in
in
in
in
in
out
in
in
in
loope
in
in
in
call
loop
icebp
jecxz
in
loop
in
jecxz
in
in
in
in
in
out
in
loope
in
loop
in
jecxz
in
out
in
in
in
loope
in
in
in
out
in
call
loop
cmp
loop
movsl
jecxz
in
loope
in
in
in
out
in
out
in
loope
in
loop
in
jecxz
in
in
in
jecxz
in
in
in
out
in
in
in
loop
in
loope
in
jecxz
in
in
in
in
in
out
in
call
loop
mov
out
in
loope
in
loope
in
jecxz
in
in
in
in
in
out
in
loop
in
jecxz
in
loop
in
out
in
in
in
in
in
call
loop
jmp
call
loop
sbb
loop
out
jecxz
in
out
in
in
in
out
in
out
in
in
in
in
in
call
loop
pop
loope
in
loop
in
call
loop
mov
out
in
in
in
jecxz
in
loop
in
in
in
jecxz
in
jmp
loop
fsubp
loop
inc
loop
in
in
in
out
in
in
in
in
in
out
in
clc
mov
xbegin
arpl
add
pop
je
clc
ret
clc
jo
add
push
add
pusha
add
test
mov
clc
fdivrl
fildll
negb
clc
sysret
clc
push
xor
sbb
add
add
jae
add
push
add
addr16
mov
clc
fnstcw
push
push
add
clc
popf
xchg
pop
aas
push
add
nop
mov
clc
fdivs
clc
fsubs
add
decb
clc
jle
fcomi
pop
scas
aad
out
iret
adc
add
sar
push
dec
and
mov
add
mov
dec
mov
add
sub
clc
mov
clc
cmp
pop
mov
add
fcompl
fisubl
mov
clc
fmuls
adc
add
fsubs
add
mov
pop
xchg
divl
add
adc
add
bswap
stos
lahf
mov
stc
or
add
inc
clc
jmp
xchg
jae
add
adc
add
mov
clc
int3
xchg
mov
mov
sti
test
out
sbb
add
mov
jo
add
aam
mov
loopne
loope
mov
add
std
mov
hlt
daa
clc
add
sar
push
add
cmc
inc
add
mov
adc
add
ljmp
add
xabort
out
js
nop
xchg
pushf
cli
out
pop
sarl
hlt
aad
jbe
or
int3
dec
add
add
stos
insb
inc
clc
or
gs
dec
push
cltd
dec
jecxz
or
xor
clc
adc
add
clc
jge
cmp
int3
mov
jmp
lret
and
add
clc
adc
add
xchg
pop
ds
lret
mov
pop
loop
mov
bound
add
adc
add
or
jbe
testl
add
leave
into
dec
hlt
push
add
cmp
dec
add
add
mov
add
hlt
cmp
fbld
scas
fisubrs
inc
clc
sbb
push
jb
add
mov
add
jecxz
fiaddl
add
icebp
add
add
or
dec
cmp
pop
cmp
je
fs
add
add
cmp
shll
adc
dec
mov
data16
xor
add
add
jg
clc
mov
sbb
mov
add
ret
test
clc
addr16
cmp
cli
jmp
loopne
nop
xor
add
clc
jecxz
xor
add
clc
jmp
jp
push
cmp
pop
stos
cli
incb
clc
inc
add
ret
mov
add
xor
add
clc
or
cli
pop
mov
sbb
aas
aaa
or
mov
mov
cmp
clc
in
cmp
clc
sub
test
mov
lahf
dec
icebp
xor
add
add
mov
popf
loop
jno
add
fdivs
out
xor
add
je
std
inc
clc
adc
clc
dec
pop
dec
clc
adc
add
clc
pop
leave
cmpsl
clc
loopne
cmp
add
pop
clc
mov
incl
movsb
clc
cltd
int
add
inc
clc
cmp
mov
mov
add
sub
add
xor
add
add
inc
add
sti
neg
push
mov
jno
add
jle
pop
nopl
add
sbb
add
clc
jbe
clc
leave
cmp
dec
jl
xor
add
add
sub
jle
and
add
pusha
add
sub
je
clc
push
add
movsl
clc
loop
xor
add
test
movsl
clc
nop
and
add
add
loop
sub
mov
dec
and
test
xchg
push
imul
insb
inc
clc
iret
sbb
pop
int
push
add
ss
add
rorb
jns
add
xchg
push
add
scas
inc
add
xchg
mov
clc
cld
fnsave
ds
loopne
dec
mov
cwtl
lret
in
mov
clc
sub
push
add
push
add
cs
outsl
adc
add
imul
mov
jp
add
gs
and
add
clc
mov
sub
mov
xchg
outsb
xor
jne
xchg
mov
aad
jno
add
pop
inc
clc
or
clc
jp
add
sahf
mov
pop
stos
push
add
mov
icebp
pop
mov
std
mov
mov
sti
insb
adc
add
push
sbb
aad
insb
jno
add
clc
dec
inc
add
sub
and
cmp
mov
lea
add
add
repnz
add
add
out
sub
cmp
clc
lahf
outsb
and
add
jno
add
clc
in
sbb
cmpsl
clc
test
shlb
add
jnp
push
clc
in
cmp
clc
xor
add
cwtl
lret
dec
push
pop
pop
outsl
sbb
xchg
mov
mov
mov
sar
daa
clc
add
ds
mov
dec
lea
add
xchg
xchg
cwtl
sarb
adc
imul
dec
inc
clc
fisubl
lret
dec
aam
mov
xor
add
add
lea
mov
clc
lahf
icebp
inc
add
dec
push
add
inc
clc
aas
sbb
arpl
add
clc
data16
enter
ja
cmp
sbb
out
cmp
mov
clc
adc
add
std
mov
cli
dec
out
aaa
sar
out
icebp
in
jae
add
fldl
add
mov
add
xor
nop
mov
push
add
jmp
mov
cmp
xchg
fisubrl
pop
xor
add
clc
lock
jne
clc
outsl
dec
and
shll
into
jp
cltd
fdiv
rorl
out
cld
push
add
popl
add
jl
sahf
sbb
mov
add
scas
jg,pt
sub
cmp
pop
clc
hlt
lahf
cmp
clc
test
ja
mov
mov
dec
outsb
addr16
adc
add
lcall
pushf
insb
xchg
sahf
div
and
lret
jle
mov
push
sahf
imul
pop
sbb
add
addr16
jmp
clc
xchg
mov
lahf
notb
clc
jge
mov
mov
clc
push
jae
add
mov
add
add
dec
cwtl
insl
mov
clc
mov
jb
add
mov
add
sahf
sbb
clc
jnp
push
add
cmp
clc
movsb
clc
testl
push
add
inc
clc
lahf
cmp
add
xor
cmp
clc
pop
pop
add
add
cmp
jb
add
add
add
clc
inc
add
clc
enter
add
clc
sarb
pop
push
and
cmp
loopne
mov
mov
ljmp
sbb
and
add
push
aas
add
add
clc
unpcklps
add
jge
das
jecxz
hlt
roll
sub
clc
sti
push
repz
add
fs
int
add
dec
inc
add
cmpsb
clc
mov
push
add
in
cmp
clc
in
jmp
add
push
cmpsb
clc
jle
xor
add
loop
inc
clc
rcll
test
push
add
sar
clc
or
clc
int3
pop
clc
cld
push
add
and
add
add
add
push
ja
jb
add
push
jle
out
fadds
mov
mov
add
cmp
daa
clc
dec
xor
adc
into
into
fldt
mov
outsl
es
sub
add
mov
pusha
add
out
bnd
clc
adc
add
gs
pop
es
jge
nop
add
add
out
mov
push
scas
cmp
repnz
add
add
add
add
clc
aam
lods
push
in
int3
mov
fs
cmp
add
lock
mov
pop
fwait
jo
add
dec
cwtl
lods
fwait
ja
es
clc
dec
mov
push
clc
iret
sub
push
add
cltd
cmp
mov
loopne
mov
xor
add
and
add
jbe
pop
mov
outsl
push
adc
sub
push
push
push
push
push
call
es
push
mov
and
xor
not
test
es
nop
nop
loop
pop
lea
xor
sub
xchg
not
es
ss
pop
add
movzbl
es
push
or
and
push
mov
add
add
push
mov
push
push
call
push
call
leave
ret
lea
sub
mov
lock
lea
lock
ret
and
je
and
sub
test
nop
nop
nop
nop
nop
push
push
push
je
mov
adc
test
jne
ret
andl
mov
lea
push
push
push
push
mov
push
lret
call
jmp
xor
add
clc
pop
shrl
mov
sub
sbb
add
ds
arpl
add
movsb
clc
pop
pop
stos
lods
mov
clc
out
xlat
out
sbb
clc
adc
add
clc
sub
and
add
push
mov
inc
add
jg
inc
add
pop
jb
add
call
xchg
mov
adc
add
scas
mov
add
into
gs
out
cmpsb
clc
pop
add
add
mov
add
add
enter
add
adc
add
clc
push
add
lods
in
or
fdivl
add
xchg
in
clc
in
pop
adc
push
call
clc
and
add
out
aaa
adc
add
clc
adc
add
clc
and
add
and
add
pop
mov
add
cmp
sbb
fstpl
jg
clc
xchg
cmp
xchg
cmp
aas
dec
push
mov
cltd
lret
add
pop
mov
add
inc
clc
mov
icebp
cmp
clc
sahf
or
iret
arpl
add
mov
mov
add
bnd
or
pop
clc
int3
call
sub
fimuls
add
movsb
clc
add
fisttpll
pmulhuw
mov
add
mov
clc
outsl
cmp
es
mov
sbb
clc
dec
lret
pushf
cltd
mov
clc
lret
mov
clc
xor
add
clc
pusha
add
sub
add
mov
sar
add
inc
add
mov
clc
xlat
sub
sub
in
push
or
add
cmp
leave
std
dec
leave
pop
inc
add
adc
add
loopne
dec
and
add
adc
add
clc
call
push
clc
push
or
add
or
clc
sbb
add
clc
popa
add
cmpsl
clc
not
testb
dec
out
outsb
daa
clc
mov
stc
cmp
add
call
cmp
add
add
clc
or
rorl
lock
mov
add
loope
cmp
daa
clc
mov
mov
int
inc
add
adc
add
add
cmp
cwtl
xor
add
adc
add
clc
or
add
or
jns
sub
inc
add
xchg
imul
clc
adc
add
clc
push
aad
movsl
clc
push
imul
pop
aaa
cmp
fadds
add
clc
push
in
xchg
xchg
cltd
jns
or
add
insb
ret
clc
loope
mov
inc
add
jns
mov
lahf
aas
lods
loop
mov
imul
add
xor
add
jmp
add
cmp
xchg
cmp
mov
xbegin
jns
add
sahf
ret
clc
or
add
sti
fwait
mov
add
mov
ret
clc
mov
clc
jbe
adc
add
add
clc
sub
inc
clc
xchg
jbe
clc
mov
cmp
inc
add
pop
or
cld
mov
clc
movsb
clc
bound
add
add
cmp
push
out
push
add
fs
out
mov
mov
add
cli
fidivrs
or
movsl
clc
ffree
clc
imul
and
add
xor
add
sahf
sub
push
add
cmp
lret
insb
aas
mov
dec
sbb
xchg
dec
xbegin
movsl
clc
jmp
leave
cs
lods
xchg
mov
fisubrl
add
pop
sub
add
mov
into
xchg
mov
pop
xor
add
add
sbb
push
jb
add
ss
add
xchg
lods
jmp
add
inc
clc
add
mov
add
das
push
mov
popf
mov
clc
jmp
or
add
jno
add
add
or
push
add
pop
sub
mov
lahf
repz
clc
stos
daa
clc
fbld
or
add
sbb
cmp
push
add
mov
mov
xor
clc
and
add
loop
pop
push
pop
jl
push
movsb
clc
bnd
add
add
add
add
mov
clc
scas
adc
arpl
add
sbb
clc
xor
add
add
mov
xchg
mov
sub
push
clc
push
add
es
std
pop
pand
cmp
mov
adc
add
int
clc
leave
dec
aad
add
xchg
adc
add
clc
mov
xlat
xchg
add
clts
clc
fdivrs
xabort
mov
sub
mov
pushf
push
out
leave
sbb
clc
fsts
mov
clc
lods
dec
add
pop
xchg
shll
notb
add
imul
push
add
imul
mov
cmpsl
clc
cmp
clc
dec
movsb
clc
stos
xlat
data16
push
add
sub
mov
sbb
scas
jo
add
int
push
add
out
cmp
test
push
scas
mov
iret
gs
inc
add
jle
cmp
dec
cmp
or
clc
adc
push
mov
adc
std
inc
add
daa
clc
ljmp
adc
add
or
add
sarb
add
pop
mov
scas
pusha
add
push
clc
adc
add
clc
or
cmpsb
clc
cmpsl
clc
xchg
cmp
jne
fldcw
clc
pop
scas
out
mov
clc
sar
add
cmp
movsl
clc
xchg
or
pushf
cwtl
inc
clc
cwtl
daa
clc
mov
inc
add
gs
sar
fdivrl
imul
popf
xchg
ds
add
add
add
push
test
inc
clc
scas
outsb
loopne
cwtl
mov
ret
clc
fcomi
insb
sar
add
jle
jl
add
adc
add
outsl
in
out
mov
je
enter
jmp
adc
jbe
inc
clc
lret
inc
clc
cld
fsts
inc
add
mov
clc
clc
cli
pushf
scas
pop
pushf
cmpsl
clc
arpl
add
mov
clc
sbb
dec
sti
test
arpl
add
mov
sbb
lods
and
add
push
add
arpl
add
add
clc
inc
clc
mov
jecxz
inc
add
movsl
clc
mov
clc
or
lock
add
add
mov
stos
jb
add
add
nop
js
clc
mov
clc
xor
pop
out
out
jge
clc
pop
cmp
sahf
lahf
sbb
add
pop
mov
pop
std
sahf
and
add
std
and
add
add
jae
add
clc
cmp
fcoml
add
jp
push
add
fnsave
sar
clc
cmp
cmp
clc
clc
inc
clc
or
std
fimull
add
add
add
out
fbstp
add
sbb
cmp
int3
add
jbe
jb
add
fbld
add
inc
add
cld
push
jae
add
popf
fistps
jne
sbb
clc
pop
adc
add
sar
clc
sahf
sahf
mov
push
add
jo
add
add
add
xchg
int
in
sbb
jo
add
add
mov
sub
clc
call
xor
add
clc
jno
add
adc
add
xchg
lcall
dec
clc
repz
add
cmp
icebp
test
sbb
enter
aaa
enter
lret
pop
rcrl
add
outsl
ror
or
clc
addr16
push
mul
clc
into
cmp
popf
test
clc
push
add
mov
clc
adc
add
daa
clc
add
pop
cmpsb
clc
cmp
enter
add
cmp
clc
mov
or
pop
cmp
add
ret
addr16
pusha
add
xchg
lods
aam
cmc
jp
lock
add
xchg
mov
clc
arpl
add
jno
add
xor
add
fists
add
pushf
fsubrs
clc
addr16
scas
loope
sbb
enter
clc
dec
call
inc
add
xchg
in
mov
add
arpl
add
add
xchg
fidivrs
sbb
push
clc
xor
add
cs
jmp
cld
in
imul
push
clc
cmp
add
add
add
dec
xlat
xbegin
sbb
add
test
mov
dec
mov
test
sar
clc
mov
clc
mov
mov
clc
push
add
xabort
add
jns
aam
int
jb
add
add
add
or
sub
clc
jg
or
sbb
push
push
or
clc
aas
mov
clc
push
xor
add
xor
add
imul
pop
clc
enter
cmp
iret
sbb
add
clc
rcl
aas
ljmp
cld
enter
lret
jnp
add
adc
add
ret
clc
add
add
dec
lret
inc
clc
fs
pop
loope
mov
and
add
gs
push
clc
lea
add
das
lock
and
add
loopne
xchg
inc
clc
mov
mov
add
mov
sub
clc
mov
push
push
scas
aaa
ror
sbb
add
add
jns
mov
fstpt
test
mov
mov
xor
add
inc
add
out
enter
fisubrs
add
in
lods
or
fidivrs
push
insb
jge
clc
pop
imul
add
jnp
push
clc
pop
push
clc
inc
clc
dec
jp
sti
pop
clc
pop
jo
add
out
lods
imulb
test
or
dec
jecxz
mov
xbegin
push
add
aaa
cmp
fistps
push
mov
sar
cltd
clc
lcall
popa
add
and
add
jmp
add
popf
mov
clc
shrb
movsb
clc
jge
clc
int3
lock
je
clc
lock
inc
add
ljmp
aad
js
mov
add
clc
scas
cmp
add
pop
clc
mov
clc
dec
mov
cs
clc
repz
add
mov
clc
in
js
das
call
pop
stc
mov
and
add
add
add
mov
clc
cmp
clc
shrl
clc
mov
mov
cmp
add
pop
jmp
lcall
ret
imul
cmp
clc
push
in
xor
add
fnstcw
add
inc
add
push
fwait
push
sarb
gs
cmp
mov
add
jbe
add
or
cltd
je
adc
add
xchg
icebp
dec
and
add
imul
fsubl
hlt
out
jmp
data16
mov
sahf
mov
jnp
add
dec
xabort
clc
inc
add
in
pop
testl
push
jns
jbe
mov
in
sbb
clc
add
add
jl
clc
xor
add
clc
insl
adc
add
scas
cltd
aas
inc
clc
or
xchg
pushf
pop
clc
sahf
mov
add
jmp
fwait
rolb
mov
add
rcrb
push
add
movsb
clc
sub
clc
xchg
inc
add
cmp
adc
add
mov
add
lock
adc
add
jno
add
nop
inc
add
inc
add
nop
clc
mov
jl
add
pop
imul
movsl
clc
mov
clc
xchg
fcom
mov
pop
mov
add
mov
add
fsts
add
inc
clc
push
rcr
adc
add
or
add
inc
clc
inc
add
mov
test
movsb
clc
cwtl
arpl
add
aad
add
push
clc
movsl
clc
lods
addr16
inc
add
dec
jmp
jp
lea
sar
lahf
cli
fbstp
clc
xor
add
inc
add
pop
lahf
adc
add
int3
and
add
adc
add
jo
add
xchg
sub
sbb
and
add
add
leave
repz
add
cltd
mov
xchg
icebp
inc
clc
cmpsl
clc
or
push
xor
add
gs
lcall
movsl
clc
inc
add
lods
scas
loopne
mov
add
clc
lcall
xchg
into
inc
clc
out
mov
and
add
fsubrl
mov
fildll
push
or
adc
add
clc
dec
pop
cmp
cmp
jno
add
sar
cmpsl
clc
ja
clc
and
test
dec
int3
dec
popf
mov
and
add
clc
hlt
pop
popf
or
pop
call
clc
add
add
add
cmp
or
sub
ja
add
test
push
insl
jle
add
add
add
add
addr16
and
clc
popa
add
int3
call
inc
add
mov
test
clc
jle
clc
mov
jno
add
and
add
jl
add
jbe
inc
add
xchg
and
add
push
inc
clc
xchg
repnz
or
clc
or
ficomps
das
jno
add
mov
cmp
add
out
sub
clc
mov
add
and
add
jae
add
xabort
xor
add
imul
add
lret
adc
add
data16
popa
add
add
adc
add
fidivl
pop
clc
movsl
clc
mov
adc
dec
in
mov
push
adc
mov
clc
mov
add
cmpsl
clc
js
rcl
push
sar
add
fstl
adc
mov
jecxz
xchg
cmp
clc
push
add
or
pop
imulb
add
pop
cld
mov
clc
pop
fadd
clc
stos
test
clc
stc
clc
cmc
aas
dec
push
sbb
ss
cwtl
rol
clc
sbb
call
add
or
mov
clc
xchg
loop
mov
push
xchg
fistpl
pop
mov
movsl
clc
leave
repnz
mov
and
add
or
push
cmp
out
add
out
pop
clc
es
imul
push
clc
clc
out
xchg
mov
add
xchg
mov
out
sub
movsb
clc
hlt
cmp
add
aam
mov
push
jmp
clc
dec
fsubrs
ss
cmpsl
clc
mov
clc
test
jmp
sar
clc
mov
inc
clc
xchg
push
add
push
je
inc
add
add
add
add
fldl
loope
pop
jnp
aam
jmp
add
cmp
faddp
clc
bsf
cs
fcompl
outsl
cmp
clc
stc
imul
lahf
ret
clc
rcrl
aas
out
push
enter
in
xor
add
push
fildll
aas
fbstp
inc
clc
aaa
dec
xor
add
xchg
call
add
add
add
and
add
or
or
call
cmp
test
xor
add
clc
test
ss
stos
sub
jns
mov
clc
in
js
clc
lret
scas
je
inc
clc
bound
add
sub
mov
dec
ds
jne
or
es
sbb
movsl
clc
lret
ret
clc
or
test
adc
add
popf
mov
xchg
lret
sub
add
add
mov
lret
jb
add
add
enter
lahf
adc
add
add
aas
cmp
aaa
hlt
jle
sub
insl
sub
clc
nop
fnsave
add
xlat
call
add
out
ud2
mov
add
ficompl
xchg
xor
add
mov
xor
add
testl
add
mov
jecxz
xchg
xchg
push
pop
jge
add
sbb
cmp
add
add
xor
add
clc
data16
pop
mov
mov
mov
sti
adc
add
add
inc
add
loop
sub
mov
mov
add
aas
push
jb
add
clc
adc
add
cmp
pushf
xor
add
shlb
clc
xor
add
lret
dec
sub
add
add
idiv
out
push
add
mov
sahf
scas
jmp
shr
sbb
add
or
lea
sbb
repz
lret
add
sub
adc
lret
cmp
fimull
add
ret
and
sar
fs
mov
dec
mov
test
add
mov
add
jbe
test
inc
clc
xor
arpl
add
clc
aam
clc
mov
xor
out
out
pop
pop
call
stc
adc
add
sub
mov
add
mov
outsb
inc
add
int
mov
cmp
fcoms
jl
add
jg
clc
sbb
fdivl
clc
mov
add
mov
add
pop
mov
enter
adc
clc
xchg
sub
clc
popa
add
push
add
mov
add
clc
or
shll
clc
jo
add
add
ja
or
cld
or
sbb
add
clc
je
add
leave
cld
lahf
xbegin
add
sbb
add
mov
and
mov
add
push
test
push
or
add
mov
sub
or
clc
testl
inc
add
cmp
clc
xbegin
add
add
lret
enter
cmp
xor
add
add
cltd
in
das
movsb
clc
jg
aas
icebp
imull
clc
jg
clc
xbegin
adc
add
rclb
sub
clc
sbb
mov
test
clc
mov
add
lods
mov
add
sahf
jge
push
jnp
pop
mov
clc
dec
or
add
xor
add
mov
or
cmp
adc
add
clc
mov
clc
lahf
es
xor
add
in
popa
add
xor
add
add
cmp
clc
clc
lods
stc
sub
popf
outsb
cmpsl
clc
sbb
xchg
and
and
jle
insl
push
aaa
xchg
jns
sbb
clc
popf
mov
mov
clc
out
sbb
add
and
add
hlt
pushf
add
clc
sarb
clc
lcall
add
bound
add
sti
or
jg
add
ret
mov
push
lods
out
sub
add
xchg
std
stos
xchg
lock
adc
add
dec
adc
sar
add
ja
rcr
pop
ss
scas
mov
xchg
sar
lret
lock
push
jp
or
add
pop
mov
mov
add
mov
clc
mov
fs
cmp
shlb
add
aas
add
push
add
dec
xchg
inc
clc
jo
add
or
xabort
ljmp
add
pop
pop
sbb
add
xchg
es
mov
add
add
push
cmp
clc
push
ret
clc
es
jne
dec
sbb
add
scas
cmp
clc
inc
add
stos
push
and
add
add
cmp
xor
add
out
push
je
inc
add
fidivrl
call
add
divb
xchg
pop
cmp
in
mov
popf
stos
pop
clc
pop
in
lret
and
add
js
test
fdivl
cwtl
push
fnstcw
sahf
sub
add
clc
lods
pop
mov
enter
ret
or
add
xbegin
nop
sbb
add
and
add
lret
inc
clc
jle
mov
pop
and
test
clc
mov
clc
stc
stc
popa
add
sub
call
ss
mov
clc
pushf
loop
pushf
ret
clc
push
and
add
fs
mov
clc
cmp
scas
out
cmp
jno
add
add
outsb
test
cmp
jae
add
clc
add
clc
aad
jnp
push
in
xor
clc
insb
jb
add
xor
add
add
clc
xchg
adc
add
icebp
fistps
clc
xor
pop
sar
mov
popa
add
xor
add
dec
xor
and
insb
arpl
add
add
addr16
mov
add
js
es
fadds
call
clc
jmp
xor
fwait
popa
add
inc
add
sbb
jecxz
push
add
sar
ret
pop
lret
add
pop
xor
add
mov
clc
fstpl
add
xchg
inc
clc
or
clc
sar
or
cmp
imul
add
sub
clc
push
clc
and
clc
lods
out
push
dec
cmp
notl
add
faddl
clc
cmpsb
clc
nop
pushf
pop
pop
mov
cmp
in
jnp
clc
pop
xor
jl
aaa
aad
push
dec
dec
inc
clc
xchg
mov
ljmp
decb
clc
push
add
lret
aaa
fwait
dec
jbe
add
mov
arpl
add
xchg
divl
clc
push
clc
push
or
clc
daa
clc
std
mov
clc
clc
mov
clc
lret
pop
hlt
cmp
xchg
ror
cmp
add
gs
or
sub
idivb
mov
ficoml
sbb
xchg
jl
shl
filds
add
fisubs
add
loope
jecxz
mov
xchg
pop
adc
add
clc
jg
mov
jo
add
ret
clc
xchg
roll
mov
or
lods
movsb
clc
sbb
xor
pop
or
icebp
cmp
lret
in
jb
add
push
clc
ja
inc
add
enter
std
ds
pop
xor
add
clc
lret
push
add
fldcw
daa
clc
add
push
xchg
pop
popf
insb
inc
clc
rcr
xor
add
pop
out
repnz
xor
add
add
mov
mov
adc
push
push
add
loope
or
mov
dec
repz
daa
clc
test
sbb
clc
jae
add
add
adc
fisubs
clc
mov
popf
pop
xlat
push
lods
iret
in
imul
pop
std
insl
adc
hlt
mov
loop
ljmp
add
push
lcall
or
out
mov
inc
clc
push
dec
pop
js
clc
xor
add
cwtl
in
pushf
fs
add
in
and
add
cmp
clc
dec
jg
adc
add
arpl
add
loopne
cmc
mulb
clc
adc
add
add
dec
jecxz
push
add
pop
nop
add
add
into
adc
add
addr16
sar
pop
sub
clc
loope
flds
clc
xor
add
repnz
pop
cmp
mov
clc
imul
ljmp
call
add
sub
cmp
rcrl
clc
or
add
push
jae
add
add
sbb
jo
add
mov
add
jns
add
xchg
lods
fimuls
lods
test
fs
sub
cmpsb
clc
into
xor
add
push
fcomip
sub
sub
clc
xor
push
js
ss
add
add
test
lahf
jbe
cmp
add
pop
inc
add
jae,pt
add
and
add
mov
sub
add
or
cmp
call
xor
add
stos
inc
clc
inc
clc
mulb
adc
add
clc
stc
jbe
dec
dec
cmp
adc
xor
add
cmp
sub
add
or
adc
jp
add
jl
add
mov
clc
lret
incb
add
add
cmp
inc
clc
inc
add
xabort
and
add
stc
mov
cmpsl
clc
bound
add
es
adc
clc
daa
clc
sti
pusha
add
fnstcw
movsb
clc
scas
test
dec
imul
inc
clc
cmp
loopne
adc
add
pop
cmpsl
clc
xor
add
out
jno
add
add
mov
aad
xchg
imul
push
insb
jl
add
add
jae
add
push
add
adc
add
add
mov
insl
mov
hlt
sti
daa
clc
insl
mov
cmpsb
clc
xchg
lahf
js
aas
mov
shufps
clc
ret
clc
jo
add
add
ret
clc
loope
in
hlt
xchg
and
mov
add
add
sbb
add
mov
cmp
cmp
fidivl
push
add
mov
add
jg
clc
int
push
shlb
pusha
add
bound
add
mov
outsl
gs
scas
xor
add
pop
jge
std
pop
sbb
clc
mov
lea
clc
dec
pusha
add
jb
add
mov
add
inc
clc
test
sbb
clc
pop
imul
add
pushf
mov
clc
inc
clc
sbb
sbb
add
ljmp
clc
popf
sbb
dec
adc
add
jp
jp
xor
add
clc
negl
add
leave
repnz
add
cltd
sar
sar
int
clc
sahf
jns
mov
and
add
add
inc
clc
call
ljmp
clc
ret
clc
push
add
in
xor
lret
jmp
sbb
xchg
xchg
adc
add
add
inc
add
cld
jge
movsl
clc
cmp
add
outsb
pop
dec
jae
add
clc
arpl
add
dec
cmc
dec
popa
add
sti
or
sbb
push
and
add
clc
xabort
frstor
ret
dec
adc
add
cmp
mov
add
cmpsl
clc
or
add
hlt
add
add
push
ja
jp
addr16
and
jl
clc
in
jbe
push
add
xor
sub
add
mov
add
cmc
nop
stc
push
clc
pushf
repnz
ficomps
add
pop
inc
add
daa
clc
pushf
insl
mov
pop
arpl
add
fidivl
add
inc
add
xchg
mov
clc
adc
add
lock
insl
leave
cmp
cmpsl
clc
mov
xchg
loope
sub
clc
loopne
mov
add
mov
out
cwtl
sbb
mov
movsb
clc
iret
push
icebp
cmp
clc
stos
std
pop
and
add
add
inc
clc
push
push
clc
cs
xchg
jb
add
xor
dec
lods
push
push
add
xchg
scas
aaa
sbb
clc
imul
add
clc
out
push
add
arpl
add
xor
add
clc
loope
fiaddl
add
add
add
cmp
mov
adc
add
std
xchg
out
outsb
lcall
and
jne
test
insl
mov
clc
push
mov
adc
clc
dec
push
xchg
add
add
xchg
jmp
clc
scas
mov
leave
cltd
lcall
jmp
xor
add
add
ss
pusha
add
mov
add
dec
adc
add
xabort
out
ss
dec
lea
or
mov
jmp
add
pop
dec
repnz
clc
add
jmp
clc
fs
sub
clc
movsb
clc
xor
add
add
xchg
add
pop
mov
add
add
pop
cmp
pop
clc
aam
push
out
cmp
clc
rep
lods
repnz
or
or
pop
clc
sub
outsb
insb
cmp
mov
add
clc
sbb
push
clc
sub
and
add
add
clc
hlt
cmp
inc
clc
jae
add
cmp
sub
add
negb
fbld
das
outsb
lret
xor
add
icebp
mov
xadd
dec
sti
mul
clc
out
cli
or
xchg
jl
clc
stos
sbb
loope
jbe
lret
dec
clc
push
clc
lret
fs
xchg
mov
pop
lods
add
add
clc
dec
fldenv
add
lods
pop
pop
inc
add
clc
jno
add
cld
stc
add
add
add
mov
movsb
clc
jl
fbld
clc
cmp
ficomps
stos
clc
gs
movsl
clc
dec
mov
push
ret
clc
pop
xor
cwtl
jg
lahf
gs
mov
xchg
cwtl
push
lahf
adc
add
rcrb
xchg
cmp
stos
gs
icebp
mov
pop
lods
out
outsb
or
ja
je
inc
clc
lock
sbb
add
pusha
add
jnp
add
cmp
add
fcomip
cmp
mov
add
imul
add
lret
stos
ret
clc
jns
cs
mov
lods
and
add
add
lret
in
pop
popa
add
xchg
xor
add
clc
fdivl
add
add
clc
popa
add
je
clc
jge
popf
mov
mov
in
cmp
clc
and
add
sub
clc
pop
adc
add
rolb
add
scas
adc
add
inc
clc
aas
or
and
add
mov
pop
xchg
mull
or
dec
mov
inc
clc
movsb
clc
pop
jnp
jno
add
add
xor
add
clc
outsb
fs
sbb
clc
ja
pop
add
add
add
adc
sbb
add
faddp
clc
jmp
xchg
add
add
pop
xchg
mov
jo
add
insb
arpl
add
add
mov
clc
in
icebp
cwtl
xor
add
mull
add
ret
clc
cmp
clc
lcall
clc
f2xm1
lret
dec
pop
xor
add
daa
clc
aaa
pushf
mov
cmp
xchg
add
add
add
mov
push
and
xchg
xor
add
clc
sti
frstor
add
hlt
sub
xor
add
scas
sahf
pop
dec
push
push
call
mov
add
insb
je,pt
add
cmp
ret
clc
rorb
gs
mov
add
stos
popa
add
sbb
dec
mov
leave
xchg
push
add
lcall
clc
mov
aas
adc
add
mov
inc
add
jae
add
adc
add
push
leave
or
xchg
test
add
aad
shr
scas
lock
add
mov
daa
clc
rorb
xor
add
lock
push
or
je
clc
or
clc
movsb
clc
jb
add
mov
xchg
push
add
rcrl
mov
jp
cmp
sub
mov
clc
mov
xor
clc
adc
adc
add
lcall
pop
sub
jmp
push
int3
jecxz
adc
clc
cmp
add
or
clc
std
sti
mov
add
add
movsl
clc
int3
mov
ret
cmp
mov
add
mov
add
ja
lock
in
mov
cmp
sar
mov
push
add
rorb
pushl
push
add
dec
add
add
gs
pop
clc
jp
or
clc
lahf
mov
add
pop
clc
sbb
add
add
out
pop
and
add
clc
mov
clc
mov
pushf
repz
enter
xor
add
clc
or
cmp
jp
push
imul
out
test
cmc
add
push
pop
test
pop
bound
add
mov
int3
pusha
add
mov
stc
ljmp
push
xor
cmc
xchg
inc
clc
clc
je
sbb
cmc
push
daa
clc
nop
xor
add
clc
mov
xor
add
xor
add
jl
out
pop
aas
es
fstpl
cmpsl
clc
cmp
sub
mov
add
enter
in
hlt
repnz
clc
dec
xor
add
testl
add
clc
dec
xabort
sub
add
cmpsb
clc
mov
xchg
pop
insl
jns
mov
push
add
and
cmp
enter
inc
clc
pop
daa
clc
mov
clc
ja
mov
js
test
jg
clc
in
inc
add
dec
mov
data16
xchg
sar
clc
loope
cwtl
leave
jg
fldt
scas
popa
add
cmpsl
clc
add
add
clc
mov
clc
loope
outsl
sub
std
mov
push
sar
add
add
add
adc
add
push
out
test
aam
pop
or
int
push
lcall
add
outsb
sub
popa
add
inc
clc
movsl
clc
lahf
jmp
clc
stos
xor
add
push
add
sub
pop
aas
daa
clc
cwtl
pop
jg
push
xbegin
add
addr16
pusha
add
out
data16
sbb
jnp
pushf
in
push
clc
fisubs
xchg
aad
add
clc
mov
xlat
pushf
jnp
mov
add
mov
icebp
sti
test
jns
cltd
jge
xor
inc
clc
in
roll
cltd
lcall
pslld
push
add
adc
add
clc
xor
add
push
pop
clc
or
jno
add
push
stc
inc
add
push
add
rolb
add
enter
cmp
cmpsl
clc
rcrb
xchg
xchg
popf
and
add
xor
add
add
dec
pusha
add
popf
mov
pop
sub
add
popf
push
add
in
out
aaa
mov
jae
add
add
clc
je
jmp
xabort
clc
xchg
sbb
clc
mov
clc
and
add
add
mov
in
lret
into
in
inc
clc
add
clc
pop
lcall
add
jp
clc
mov
addr16
sbb
jl
xchg
add
add
add
add
inc
add
xabort
pusha
add
sub
dec
add
add
cmp
pop
mov
add
dec
gs
xabort
outsb
push
clc
insl
out
sbb
push
dec
aas
outsb
mov
clc
pop
test
sbb
out
mov
jnp
mov
clc
pop
push
imul
add
mov
jne
cmp
push
imull
jp
push
add
and
add
fcomps
ret
clc
push
add
xor
add
add
add
xabort
push
movsl
clc
aad
clc
popf
aad
sbb
clc
cmc
in
or
clc
mov
clc
nop
sbb
jle
jg
or
sub
xor
add
test
clc
ret
lods
test
cmp
adc
clc
mov
dec
dec
cmp
mov
add
clc
lahf
push
pop
jno
add
dec
dec
bound
add
cwtl
push
and
add
add
lods
xchg
cmpsb
clc
in
mov
add
cmp
clc
incl
cmp
fcoml
add
xchg
cld
sub
add
pushf
cmpsb
clc
enter
add
ss
inc
add
or
arpl
add
imull
shr
pop
ja
push
scas
mov
fstps
clc
cmp
clc
rorl
pop
push
add
push
mov
lods
xchg
cmp
dec
leave
test
xchg
out
dec
add
xor
jl
clc
inc
clc
mov
clc
data16
xchg
dec
cld
dec
xchg
cli
lock
jp
sbb
arpl
add
add
mov
ds
xchg
in
mov
test
cmp
pop
push
negb
int3
ds
hlt
xor
add
cmp
dec
pop
fnstsw
clc
push
lods
jle
cli
pop
in
outsl
ja
cmp
scas
int3
mov
add
inc
add
pop
js
push
cli
cmp
lock
clc
std
jo
add
pop
cmp
mulb
clc
fs
push
add
loopne
imul
add
xor
add
pop
jmp
clc
mov
mov
mov
in
push
clc
push
in
in
xor
add
push
lahf
cmpsb
clc
cltd
fimull
sar
cmp
dec
fmuls
clc
inc
add
push
add
mov
xor
add
cld
inc
add
push
add
shll
aas
mov
lock
cmp
sti
push
daa
clc
inc
clc
daa
clc
sub
clc
nop
jecxz
xchg
pop
fiadds
sub
add
daa
clc
js
insl
xor
inc
add
dec
int
push
pop
push
cmp
daa
clc
jo
add
sbb
inc
add
imul
dec
sub
add
add
popa
add
cmp
lea
add
push
clc
aas
pusha
add
std
mov
rol
clc
mov
cmpsb
clc
mov
clc
fs
in
insb
data16
sahf
icebp
movsb
clc
dec
pop
ret
jns
add
add
pusha
add
dec
jge
add
and
add
gs
adc
add
and
pop
ficompl
xor
clc
mov
sub
jb
add
add
clc
lahf
xchg
sub
pop
inc
clc
push
in
scas
sahf
add
add
clc
test
mov
add
add
fadd
clc
lret
in
js
outsl
jno
add
jns
push
add
jp
mov
jno
add
mov
pop
test
iret
jo
add
mov
xabort
clc
jb
add
add
mov
fdiv
mov
repnz
jae
add
clc
ss
clc
xchg
pop
addr16
mov
pop
jo
add
push
add
sub
jo
add
clc
out
ss
dec
mov
dec
push
testb
add
and
jbe
aas
addr16
loope
mov
arpl
add
push
daa
clc
fsubp
clc
sub
cmp
sbb
clc
xlat
int3
cwtl
cmpsb
clc
cmp
sub
xchg
mov
clc
cmp
mov
mov
pop
push
or
add
in
add
add
cwtl
mov
lods
fidivs
add
je
mov
dec
es
adc
sti
add
add
enter
in
xor
add
add
stc
lcall
shrb
cmc
mov
xchg
inc
add
std
jne
clc
stos
mov
mov
or
sub
sbb
clc
inc
add
fisubl
clc
sahf
pop
pop
mov
add
repz
mulps
xchg
inc
clc
push
add
jbe
sub
es
push
xchg
sbb
mov
clc
mov
nop
fnstcw
daa
clc
bound
add
mov
cwtl
add
cmp
fs
pop
das
or
fimuls
clc
es
or
clc
push
clc
adc
add
add
cld
jnp
ljmp
add
mov
in
mov
jg
cmovb
add
in
adc
shll
clc
mov
loopne
fcomps
add
dec
jmp
clc
mov
jns
add
lret
ds
cwtl
in
repnz
iret
shll
daa
clc
cmp
or
dec
add
cmp
sbb
add
clc
jbe
add
adc
add
pop
add
add
lret
add
stos
loop
xor
add
add
addr16
imul
xor
cmp
cmp
clc
or
xchg
pop
clc
call
dec
xchg
addr16
ret
clc
xor
xchg
jae
add
sbb
add
int3
mov
negb
std
and
add
add
and
add
nop
mov
add
dec
fcoml
sub
cmp
loopne
pop
xchg
fildll
fdivl
clc
inc
clc
mov
stos
add
clc
enter
cs
pushf
sahf
sub
add
call
add
pop
sbb
aas
popa
add
sub
add
jae
add
out
mov
add
adc
add
adc
xor
add
fmul
adc
add
jecxz
push
add
mov
clc
and
add
add
cmp
add
sahf
testb
add
clc
sar
clc
lret
xchg
test
push
clc
jmp
add
hlt
movsb
clc
lret
test
cmpsb
clc
loopne
sar
out
adc
mov
and
add
clc
inc
add
push
add
and
clc
test
cmpsb
clc
sub
aaa
int3
ret
clc
pop
mov
add
add
clc
clc
xbegin
mov
mov
out
cli
cmp
adc
add
mov
aam
das
pop
clc
sbb
clc
loop
repz
das
pop
clc
adc
add
adc
add
add
popf
into
mov
clc
push
in
stos
cmp
insb
popa
add
mov
lea
xor
add
push
aam
clc
sub
add
jb
add
sbb
add
js
mov
mov
add
test
fmuls
clc
dec
cmp
stos
data16
sub
popa
add
sbb
add
insb
xlat
add
add
clc
xchg
or
xor
add
clc
out
aas
sar
scas
mov
xchg
push
add
inc
add
jle
clc
jp
lods
ljmp
fdivr
nop
sahf
inc
clc
mov
mov
stos
push
repnz
pop
ret
inc
add
jbe
clc
lock
add
add
clc
iret
xor
add
add
rorb
add
xabort
insl
arpl
add
add
into
xor
add
clc
aas
lcall
fs
push
add
loope
enter
je
fldl
in
push
mov
pop
ret
adc
add
clc
int3
jmp
add
jl
clc
add
clc
int3
mov
in
mov
push
inc
clc
push
dec
mov
clc
imul
cwtl
mov
and
add
jnp
add
push
add
and
add
adc
add
add
inc
clc
nop
clc
jne
clc
outsl
xor
add
cmp
add
cmpsb
clc
inc
add
lret
add
pop
fcmovu
inc
add
mov
lret
push
add
xor
clc
imul
and
add
inc
add
sub
add
enter
mov
add
add
leave
js
and
add
aad
enter
dec
xlat
bound
add
clc
loopne
stos
lcall
cmp
add
int
clc
mov
lret
sar
nop
jg
add
mov
mov
ljmp
clc
fs
outsl
fs
insb
cltd
stos
mov
push
add
lods
test
pusha
add
xor
add
pop
clc
xabort
clc
pop
stos
shll
shrl
push
clc
adc
xlat
stos
xchg
push
clc
mov
lock
add
inc
add
sbb
out
ljmp
clc
and
add
xor
add
clc
sahf
outsb
xchg
pop
dec
sar
clc
pop
ret
clc
test
add
hlt
es
mov
lahf
jb
add
push
add
stos
nop
xchg
pop
or
ja
movsb
clc
pop
push
popf
cmp
sar
daa
clc
cmp
clc
fdivl
ret
clc
mov
or
ret
clc
pop
mov
clc
push
addr16
pop
or
cmpsl
clc
clc
pop
repnz
nop
cmpsl
clc
nop
pop
mov
clc
xchg
es
xabort
add
movsl
clc
loop
add
add
add
scas
mov
mov
pop
fldl
jg
xchg
fnstsw
clc
dec
sbb
jns
add
jg
sbb
cmp
cmpsl
clc
xchg
pop
test
or
add
divb
call
clc
push
aaa
mov
lods
xlat
xchg
lea
adc
xbegin
into
outsb
add
add
in
mov
adc
add
clc
jp
clc
insl
repz
add
xbegin
clc
push
cmp
sub
test
add
dec
add
add
clc
xchg
adc
add
add
mov
or
cmp
mov
out
add
add
data16
sbb
add
ljmp
sarl
add
add
add
adc
clc
dec
mov
add
pop
clc
push
fcmovb
clc
mov
add
adc
add
test
xchg
adc
mov
clc
scas
xabort
add
adc
add
repz
cmc
loopne
lahf
jecxz
movsl
clc
adc
add
mov
add
clc
pushf
ds
mov
clc
dec
mov
cmp
nop
cs
clc
add
add
add
int3
imul
fs
cmpsl
clc
mov
push
push
sub
clc
aam
mov
or
add
mov
fsubr
movsl
clc
add
clc
cmpsl
clc
sahf
inc
clc
ret
clc
sub
clc
jo
add
add
and
mov
fcoml
push
lock
aam
mov
cmp
add
test
bound
add
mov
out
mov
and
add
ljmp
inc
clc
sub
add
sar
xchg
or
daa
clc
jecxz
das
lods
jmp
sbb
add
xchg
jecxz
pusha
add
add
aaa
filds
add
inc
clc
pop
xor
add
int3
loop
loopne
stos
mov
add
out
xor
add
clc
loope
pop
clc
es
xlat
mov
add
sbb
add
xor
add
xchg
in
arpl
add
out
adc
movsl
clc
inc
add
into
gs
cmp
add
sahf
aaa
loope
jg
in
test
xchg
add
jl
aam
clc
adc
popa
add
mov
clc
lods
ret
clc
push
add
je
cmpsb
clc
mov
push
sar
clc
add
add
clc
adc
add
push
xor
add
pop
movsb
clc
mov
aam
sbb
add
sahf
sar
xchg
mov
dec
cmc
xor
mov
clc
dec
mov
jnp
xor
add
push
add
add
add
clc
xchg
gs
loop
pusha
add
xchg
iret
filds
add
mov
je
sub
add
add
add
add
jmp
push
add
mov
mov
loope
dec
xabort
data16
scas
xlat
fistl
clc
cmp
add
add
clc
sbb
movsb
clc
add
jle
pop
clc
arpl
add
add
lret
out
test
mov
cwtl
sub
flds
icebp
ficompl
add
jno
add
lret
cld
out
pushf
push
cmp
add
lock
sub
hlt
or
clc
insb
fdivrl
cmp
clc
sbb
arpl
add
jae
add
add
dec
lods
outsb
or
stos
call
add
out
or
and
scas
pop
clc
xchg
or
push
clc
aas
cmpsl
clc
adc
add
imul
clc
xor
adc
push
outsb
icebp
loope
push
cs
ja
mov
xchg
push
and
add
mov
add
stc
add
add
sub
insl
xchg
and
add
clc
inc
add
rorb
inc
add
jecxz
cmp
cmp
clc
sbb
clc
jmp
clc
cmp
inc
clc
outsb
dec
test
fwait
ljmp
lret
mov
add
add
clc
mov
clc
sar
outsl
xchg
sub
ret
clc
cmp
clc
pop
mov
js
dec
and
cmp
mov
cmp
clc
push
add
dec
xor
lahf
in
cmp
add
clc
insl
mov
jp
clc
sbb
add
add
or
push
mov
and
sub
mov
pusha
add
shr
scas
jl
clc
xchg
lea
mov
fs
sub
xor
clc
mov
cmp
add
add
cmp
pop
clc
dec
jo
add
add
std
ret
clc
jp
clc
push
clc
mov
mov
add
clc
movsl
clc
pop
sub
add
aam
or
add
clc
insb
adc
add
popa
add
pusha
add
push
int3
bound
add
pop
fistpl
test
cld
mov
sbb
clc
shlb
add
sbb
sub
add
push
dec
mov
out
sbb
jmp
stos
cmp
push
clc
insb
cwtl
mov
add
lret
cld
es
jne
xor
add
clc
or
sbb
add
add
add
mov
mov
hlt
arpl
add
sti
dec
vmulps
je
add
push
inc
clc
mov
push
cs
clc
out
test
leave
test
mov
fs
data16
or
clc
adc
add
xor
add
add
xlat
or
inc
clc
pop
inc
clc
sahf
sarb
pop
sbb
clc
mov
clc
and
xor
enter
outsb
mov
adc
add
lret
and
jns
in
xchg
xor
add
test
clc
pop
push
add
lods
popf
push
add
and
add
add
cmp
push
stos
mov
in
pop
imul
or
jbe
pusha
add
jl
out
jge
mov
arpl
add
mov
pop
cmp
add
cmpsb
clc
push
xor
jno
add
push
cwtl
ja
bswap
xor
add
add
cmpsb
clc
js
popa
add
mov
clc
xlat
inc
clc
xchg
fdivl
sar
clc
lret
mov
sar
loop
sub
mov
push
clc
cmpsb
clc
mov
mov
add
or
add
dec
inc
clc
loopne
cli
pop
pusha
add
dec
loope
cmp
add
roll
clc
adc
add
mov
clc
cmp
clc
adc
add
into
jl
enter
pop
push
add
ret
clc
fucomip
lods
sahf
jl
add
add
int3
aaa
icebp
dec
idivb
cmp
xbegin
clc
ret
add
lret
cltd
mov
out
xor
add
out
fprem
movsb
clc
loop
pop
sar
or
clc
or
dec
std
push
cmc
aas
dec
mov
clc
fst
xor
add
jne
mov
cmp
clc
daa
clc
mov
add
clc
mov
sbb
jno
add
jbe
jae
add
add
mov
loopne
or
add
out
movsl
clc
stos
and
xor
aas
imul
pusha
add
sbb
add
loopne
sar
clc
cmp
inc
clc
or
xor
add
mov
clc
push
sbb
add
clc
pop
data16
adc
add
test
cmp
add
stos
push
ja
clc
nop
in
lods
dec
aad
cmp
add
outsb
lods
idivb
and
add
cmp
add
sub
ficompl
mov
clc
mov
outsl
pusha
add
fwait
cmp
add
or
or
sbb
add
mov
sbb
movsb
clc
loop
ret
sub
add
clc
jns
clc
cs
add
cmp
adc
clc
ret
add
sub
cmp
mov
test
cmpsl
clc
pop
mov
clc
xchg
xor
add
xchg
leave
movsl
clc
mov
dec
push
add
fcompl
clc
cmp
out
xor
nop
fwait
pop
xchg
or
push
roll
ja
add
hlt
xchg
add
adc
dec
ficompl
cmp
cmc
or
clc
inc
add
pop
out
fs
push
in
add
add
clc
pop
repnz
dec
cmpsl
clc
addr16
sahf
jmp
clc
lock
add
xor
imul
add
sub
xchg
xabort
xchg
mov
jecxz
push
or
add
movsl
clc
lret
mov
clc
ficompl
clc
mov
imul
adc
clc
repz
fdivrp
mov
adc
add
clc
push
add
mov
clc
testl
jg
ffree
clc
int3
sub
xlat
fidivrs
outsl
pop
dec
loop
mov
mov
and
add
xchg
mov
clc
push
out
mov
cld
in
lcall
add
clc
enter
std
imul
lods
cmp
clc
push
clc
jns
jne
clc
out
ret
clc
ret
int
clc
mov
add
cmp
sar
clc
test
push
add
or
push
add
dec
adc
clc
xabort
jo
add
clc
push
mov
rolb
clc
sub
xor
sarb
dec
adc
clc
inc
clc
sahf
jbe
fildll
cmp
cld
adc
arpl
add
clc
xchg
xor
add
xchg
add
add
jg
pop
xor
add
fs
xchg
test
add
add
clc
xchg
cltd
adc
fwait
hlt
mov
add
dec
adc
add
mov
add
pop
outsb
call
mov
fcomps
add
cmp
push
xor
add
popa
add
lahf
pop
popa
add
pop
jle
and
add
push
add
sti
nop
iret
xor
add
clc
ljmp
inc
clc
fbstp
add
leave
inc
clc
lea
push
das
cmpsb
clc
mov
mov
in
ja
outsb
fdivrs
push
add
or
clc
stc
jmp
out
rcrl
jp
inc
clc
xlat
mov
rcrl
add
pop
sar
clc
mov
pop
xchg
mov
add
xchg
shll
add
pop
es
cmp
xor
push
or
clc
sbb
xbegin
clc
xchg
push
xor
add
sbb
leave
push
dec
hlt
jge
je
cli
loopne
gs
mov
lcall
lods
mov
add
cmp
push
in
std
int
gs
leave
insb
std
cmpsl
clc
sub
sahf
in
dec
cmp
stos
sar
add
mov
and
add
inc
add
fldt
clc
pop
je
jno
add
add
icebp
xlat
cmp
sar
add
fs
lret
ficomps
jmp
jp
xor
std
xor
adc
clc
inc
clc
enter
xabort
add
xabort
adc
add
addr16
pushf
lock
sub
insb
ret
clc
jbe
clc
add
add
clc
cmp
add
lods
das
mov
sub
cltd
cmp
add
mov
cmp
xchg
jge
cmp
sar
pop
pop
clc
jmp
jns
pop
jne
mov
mov
push
mov
clc
cmp
push
sbb
push
ja
add
arpl
add
add
push
mov
add
mov
movzwl
add
cmpsl
clc
popl
add
pop
out
add
add
icebp
add
add
clc
inc
add
es
dec
xchg
inc
clc
cmp
cs
pop
out
pop
ret
clc
sub
add
push
jb
add
sar
fst
inc
clc
arpl
add
push
add
mov
pop
sub
repnz
add
push
pop
das
mov
aam
lahf
js
sbb
add
ds
add
mov
clc
loope
adc
add
add
daa
clc
inc
clc
pop
sar
inc
clc
mov
push
outsb
je
cmpsl
clc
xor
add
add
lods
dec
dec
push
cmp
repz
add
add
aaa
add
add
clc
and
cmp
sar
insb
mov
and
add
clc
loopne
jne
cmpsb
clc
mov
push
cmp
out
xchg
imul
inc
clc
pop
pop
and
sbb
sar
xbegin
fwait
adc
add
xchg
xchg
lcall
jmp
bnd
add
aad
clc
fcoml
add
fcomi
xchg
pop
lret
fildll
cltd
jmp
push
ret
clc
jmp
jl
loop
paddw
pushf
and
add
fbstp
add
push
add
ljmp
add
add
add
sar
mov
dec
repnz
add
add
add
imul
cltd
xabort
daa
clc
pop
mov
adc
add
ret
clc
mov
icebp
xchg
mov
sbb
cmp
sub
data16
jmp
out
and
add
or
dec
nop
lcall
sar
inc
add
sahf
sub
add
adc
add
xor
add
add
and
add
imul
clc
mov
add
clc
add
add
das
add
add
neg
loopne
cmpsl
clc
cltd
fsub
clc
mov
sbb
add
and
add
clc
mov
jmp
xchg
je
stos
mov
mov
aad
in
xor
add
add
sub
imul
sub
clc
int3
gs
movsb
clc
push
sub
iret
xchg
adc
adc
add
sbb
dec
or
mov
dec
fsubs
push
xlat
push
push
stos
pop
fimuls
mov
push
jnp
clc
ffreep
clc
jb
add
clc
imul
sub
inc
add
and
add
inc
add
mov
clc
mov
mov
and
arpl
add
mov
or
add
add
jae
add
jno
add
repnz
clc
in
scas
cli
aad
pop
clc
ljmp
and
add
clc
outsb
loop
adc
add
jge
in
fcoms
add
js
pop
push
adc
add
add
add
add
repz
clc
idiv
cs
clc
push
lods
mov
ret
clc
aad
sar
nop
mov
push
add
jne
clc
lahf
ret
clc
add
add
clc
inc
clc
add
add
test
cmp
mov
add
pop
adc
pop
rclb
add
jae
add
stc
dec
shrb
xor
add
or
push
add
add
add
pop
and
add
add
add
add
jmp
adc
add
add
and
add
rep
and
add
inc
clc
aad
xabort
sbb
add
add
add
clc
cmp
clc
sbb
data16
pop
clc
xor
add
cmp
clc
gs
mov
add
arpl
add
sub
fmuls
push
add
out
js
pop
push
mov
sbb
clc
rolb
leave
sar
pop
jnp
mov
xchg
inc
add
add
add
sar
cmc
sbb
clc
filds
mov
fistpl
out
jbe
clc
jle
clc
add
push
mov
add
add
clc
push
add
out
jbe
pushf
ss
clc
lret
xor
jl
repz
cli
xchg
stos
or
mov
pop
mov
add
cld
xor
add
add
xchg
dec
cmp
clc
pop
data16
sub
test
add
clc
es
out
scas
adc
add
add
ret
clc
jecxz
out
insl
xor
inc
clc
or
add
push
je
add
sub
lcall
outsb
lods
dec
cmpxchg
pop
cwtl
adc
xchg
and
add
pop
imul
clc
shr
adc
add
std
aas
pop
inc
clc
sbb
add
out
or
call
push
mov
jl
add
xlat
mov
cmp
inc
clc
inc
add
pop
pop
xor
add
clc
gs
mov
add
mov
xor
add
clc
outsb
arpl
add
clc
insb
pop
into
sbb
sbb
data16
inc
add
stc
fdivrs
adc
add
adc
add
movsl
clc
mov
add
jae
add
dec
lret
cld
out
loop
jmp
clc
aam
clc
push
rorl
data16
fwait
jbe
xabort
dec
jns
idiv
dec
adc
add
jne
add
mov
or
fsubrs
or
clc
xor
add
mov
adc
add
clc
clc
xchg
push
sahf
insb
enter
and
add
xor
add
and
xchg
xbegin
in
add
add
clc
sub
cltd
inc
add
inc
clc
cltd
or
idivb
jb
add
jmp
insl
xor
add
xor
add
lods
mov
cmp
mov
clc
sub
add
aad
sbb
in
cmc
mov
add
repz
add
stos
inc
add
jae
add
add
sub
insl
xchg
sub
lret
idivb
push
adc
add
clc
dec
das
dec
mov
add
rol
clc
mov
clc
lock
add
jecxz
xbegin
add
aam
mov
jp
clc
cltd
je
pop
fdivrs
jns
add
ja
fisttpl
sbb
and
mov
add
mov
push
add
xchg
adc
add
add
cmp
add
xchg
jg
add
pop
cmp
clc
mov
xor
add
clc
cmp
mov
divl
sub
inc
clc
out
ds
fcmovbe
or
xlat
in
test
add
sub
lea
add
mov
add
mov
outsl
xabort
out
inc
add
xchg
xabort
hlt
xlat
cmp
add
hlt
in
movsb
clc
mov
add
aas
dec
js
adc
add
jmp
lods
xchg
push
movsl
clc
add
cmp
clc
cmp
inc
add
sbb
sti
mov
mov
clc
stc
or
movsb
clc
inc
add
cmp
je
jnp
ss
fwait
add
add
mov
add
pop
clc
dec
lret
ja
popf
test
mov
and
add
add
jns
mov
or
add
lret
add
or
cltd
or
cmp
scas
and
add
clc
fsubrl
idiv
mov
inc
clc
mov
fcoml
jge
clc
fildll
add
test
add
jp
jbe
inc
clc
imul
stos
stos
pushf
fs
test
push
add
xabort
add
gs
push
add
call
mov
adc
clc
inc
clc
sti
sarb
or
add
pushf
pop
or
clc
jg
add
cmp
clc
mov
mov
mov
inc
add
lods
xor
jecxz
and
jl
jae
add
push
ret
insl
mov
jge
inc
add
adc
add
bound
add
add
std
stc
xchg
addr16
push
mov
xchg
and
add
dec
gs
or
clc
sbb
outsb
or
divl
add
pop
sbb
bound
add
out
xchg
mov
clc
ret
fs
push
lcall
clc
add
pop
cs
rclb
add
int
clc
pop
push
hlt
push
dec
sub
add
repnz
dec
xor
add
cmp
pop
fs
clc
daa
clc
adc
adc
adc
popf
mov
jns
jbe
pop
sbb
add
jp
mov
cmp
mov
fisubs
mov
add
mov
outsl
mov
add
lahf
inc
clc
jl
clc
adc
add
add
dec
test
mov
add
mov
add
sbb
das
lea
add
add
fildl
add
add
mov
cmp
clc
test
add
push
or
add
sar
clc
dec
in
adc
inc
clc
scas
inc
clc
push
clc
ret
clc
jecxz
pop
hlt
aaa
int
clc
out
sahf
xchg
xor
add
jl
stos
inc
add
outsl
jmp
dec
sbb
clc
cltd
fsubrp
jae
add
xor
add
clc
int
mov
push
add
add
add
clc
xchg
mov
rcr
mov
add
stos
cli
and
add
pop
clc
stc
loopne
mov
mov
add
sbb
mov
clc
repz
add
xlat
xor
add
xabort
jbe
jno
add
clc
idivl
vmread
add
in
cmp
outsb
cmpsb
clc
add
add
add
cmp
clc
je
jge
pop
sub
clc
sbb
ljmp
add
cwtl
inc
clc
aaa
jb
add
xlat
ja
int3
xabort
clc
cmp
cmp
add
popa
add
xor
push
add
jmp
push
and
add
repnz
fidivs
add
or
xchg
pop
ffreep
clc
test
in
push
push
add
push
pop
dec
shlb
add
and
add
vcmpps
add
pushf
ss
add
inc
add
cmp
clc
aas
jae
add
clc
addr16
scas
ja
xlat
clc
test
mov
add
pop
push
pop
mov
clc
pop
loopne
adc
add
add
aad
clc
add
add
add
test
out
cmp
push
pop
gs
loopne
repz
xor
add
jl
fs
imulb
xchg
in
clc
arpl
add
add
cli
dec
and
add
lea
add
fcoms
xor
add
adc
js
js
clc
scas
add
aaa
push
cmp
push
xchg
jecxz
cwtl
test
ja
stos
and
add
out
or
cmp
mov
clc
shl
pop
stc
and
add
out
fmuls
xchg
inc
add
sub
negl
and
add
add
shr
aaa
test
outsl
adc
add
xor
add
xchg
cmpsb
clc
outsl
xbegin
xor
add
testb
clc
fidivrl
add
lret
or
pusha
add
lods
clc
pop
clc
in
lock
xchg
pop
add
add
outsl
cmp
add
ss
xchg
ficomps
xchg
jecxz
adc
add
clc
inc
add
push
sar
dec
imull
or
clc
int
clc
sub
std
pop
pusha
add
pusha
add
lock
mov
aad
dec
xchg
sahf
pcmpeqw
clc
mov
fwait
nop
push
add
mov
clc
xor
add
clc
clc
xor
add
outsl
mov
jp
clc
leave
pushf
test
jp
je
add
test
movsb
clc
adc
add
jo
add
clc
sahf
xchg
mov
clc
pusha
add
out
mov
or
cld
or
clc
jbe
lods
sbb
add
insl
push
stc
lret
or
aaa
outsl
fsub
clc
pushf
jecxz
dec
fs
mov
jnp
clc
repz
adc
cmp
sub
sbb
or
fmulp
scas
add
add
clc
sarl
pop
push
hlt
outsl
add
add
sar
test
test
mov
add
stc
cmp
clc
repz
sub
clc
cmp
inc
add
jl
imul
pop
pop
ds
clc
cmc
cld
pusha
add
inc
clc
fcomps
mov
xchg
lods
dec
inc
clc
xabort
mov
clc
sbb
add
add
add
add
rcll
add
clc
xchg
das
icebp
shrb
clc
popf
in
in
mov
in
pop
int3
insb
jo
add
xlat
add
add
int3
shrb
pop
ljmp
push
add
lods
cwtl
repz
fisubs
clc
cli
jno
add
cmp
mov
fdiv
stos
xchg
xor
add
mov
clc
xchg
jp
add
jb
add
clc
das
xchg
mov
jle
arpl
add
pop
or
mov
pop
pushf
ret
clc
or
jbe
mov
data16
sar
punpckhwd
call
outsb
mov
push
pusha
add
xchg
push
mov
mov
clc
sub
add
addr16
xor
add
ret
clc
pop
js
pushf
pop
pop
mov
aaa
add
add
lcall
sar
xor
add
bsf
clc
pop
repz
leave
or
add
inc
add
out
cltd
mov
inc
add
ret
mov
mov
mov
jl
cmp
fisttps
mov
data16
inc
clc
dec
adc
add
xchg
push
dec
push
add
gs
and
add
mov
clc
insl
fucomip
cmp
loopne
xlat
sub
in
int3
scas
fiaddl
add
xlat
xlat
and
cmc
cmp
aaa
mov
clc
outsl
nop
cmp
cmc
or
dec
daa
clc
mov
pop
in
je
clc
fsubs
in
dec
inc
clc
mov
xchg
push
mov
bound
add
cwtl
imul
sub
add
movsb
clc
xlat
lahf
sbb
divl
es
mov
clc
gs
stc
pop
ljmp
or
dec
insl
loop
jl
clc
pop
clc
xchg
lea
pop
call
jae
add
mov
cltd
cmp
adc
add
dec
cltd
sar
adc
clc
idivb
sbb
push
fists
add
ja
nop
sti
out
push
dec
sarl
aam
add
rcr
and
add
add
cmp
add
es
faddp
clc
into
xor
add
and
add
add
ss
clc
add
add
dec
clc
add
clc
cwtl
pop
adc
add
and
add
add
inc
clc
pop
daa
clc
inc
clc
cltd
popa
add
mov
ljmp
clc
or
cmp
add
push
or
ret
clc
jo
add
decl
jecxz
and
push
out
add
sub
test
dec
add
add
iret
loop
pop
jnp
xor
add
push
add
pop
push
add
xchg
mov
jge
push
clc
inc
add
xchg
and
add
add
pop
inc
add
lods
add
add
push
add
jmp
push
mov
add
add
sahf
mull
sbb
add
cltd
cs
add
lods
mov
clc
in
sub
in
in
xchg
icebp
scas
cli
cmpsb
clc
mov
clc
inc
add
sahf
and
add
icebp
divl
mov
or
xabort
cmpsl
clc
outsb
add
add
pop
int
sub
add
add
add
add
add
clc
cmpsb
clc
aam
por
imul
jl
jle
in
sub
sbb
clc
sub
jno
add
clc
out
jo
add
insb
sbb
add
loopne
cmp
fiadds
clc
jae
add
test
lcall
add
xor
add
addr16
cld
sbb
dec
dec
mov
and
add
add
xlat
lret
push
inc
clc
es
xlat
inc
add
adc
pop
pop
jp
clc
stc
in
cmovnp
add
rorb
clc
inc
add
mov
fwait
hlt
fs
jmp
jp
add
xbegin
or
mov
jae
add
clc
stos
jo
add
js
int3
leave
data16
clc
mov
pusha
add
test
jae
add
mov
add
dec
jg
arpl
add
rcrl
add
loope
cmpsb
clc
dec
mov
add
add
push
inc
add
pop
fsubr
mov
popf
xchg
loopne
enter
dec
daa
clc
xbegin
cmp
into
fucomi
sbb
clc
popa
add
push
ret
clc
outsl
stos
xor
add
mov
adc
add
push
inc
clc
iret
ds
pusha
add
add
push
add
scas
pop
or
xbegin
add
pop
sar
push
int
clc
lcall
push
test
push
add
das
jge
ret
jg
neg
pop
dec
repz
clc
cld
or
clc
push
mov
dec
jecxz
fbstp
inc
add
push
loope
dec
or
mov
clc
int
clc
pop
in
mov
insl
or
clc
mov
aas
mov
inc
add
pop
es
jp
sbb
stc
in
lods
xabort
or
add
movsl
clc
push
add
mov
repnz
cmp
add
ss
aam
clc
mov
add
dec
mov
clc
xchg
cmp
lods
add
add
add
clc
aam
add
loopne
ds
add
testl
clc
fsubrs
out
test
add
add
mov
sar
jp
xbegin
clc
sub
clc
mov
lret
aas
push
add
lods
mov
add
hlt
pop
pop
std
lea
add
add
ja
clc
mov
push
add
dec
movsl
clc
rorl
add
and
add
add
mov
pushf
lock
add
mov
lcall
mov
clc
mov
clc
xor
add
adc
ret
add
jp
sub
sbb
mov
add
cmpsb
clc
inc
clc
pushf
jmp
xor
add
clc
fwait
loope
int3
nop
jo
add
dec
cltd
jne
dec
push
popa
add
jbe
cltd
add
add
push
add
popf
or
add
fsubr
jo
add
inc
clc
ljmp
add
out
in
gs
and
add
lock
dec
xchg
pop
daa
clc
mov
cmp
clc
xor
add
add
cmp
stos
xchg
jo
add
push
jno
add
add
jae
add
xor
add
sti
cmp
clc
sbb
add
ja
add
hlt
xchg
push
add
xor
add
pop
sub
pop
xor
add
add
push
clc
mov
pop
pop
mov
sti
sub
mov
clc
rcrb
stos
je
clc
adc
add
xchg
cmp
cmp
fists
add
add
add
gs
and
add
popf
sahf
popa
add
xbegin
add
add
add
pop
add
add
nop
out
inc
add
fnstsw
mov
jne
mov
je
add
jl
clc
jl
out
arpl
add
insb
fsubrl
add
lcall
je
sub
and
data16
jmp
sti
cmp
clc
imul
test
or
aam
sti
dec
mov
inc
add
adc
add
adc
add
add
add
clc
jp
scas
mov
inc
clc
stc
mov
sar
inc
add
cmp
sub
imul
xor
add
inc
clc
into
xchg
ss
add
add
loopne
push
clc
adc
add
add
fs
loope
mov
add
add
clc
mov
inc
add
or
in
sub
sbb
repz
cmpsl
clc
call
xabort
add
inc
clc
mov
add
sti
sub
es
mov
push
fstl
repz
add
add
popa
add
adc
enter
cmovp
add
add
jb
add
lods
scas
popa
add
out
mov
xchg
jmp
mov
sbb
jns
push
push
add
cmp
clc
add
add
sbb
clc
jb
add
clc
cltd
arpl
add
add
add
clc
push
cmp
out
cli
mov
sub
jbe
clc
rcll
clc
fsub
clc
pop
jl
clc
jmp
xor
add
je
add
iret
addr16
shlb
pop
outsb
mov
add
clc
jge
aaa
loopne
inc
add
arpl
add
test
push
xchg
lret
jge
sbb
add
jo
add
icebp
mov
and
add
mov
jno
add
mov
mov
push
cmp
repz
fidivrs
jecxz
popf
mov
add
push
xchg
xor
jns
loopne
inc
add
jp
repz
adc
clc
pop
clc
add
pop
jmp
clc
pop
clc
test
dec
mov
xchg
ror
or
jle
cli
cld
sbb
clc
pop
add
add
jecxz
cs
clc
cmp
aad
gs
int3
insb
je
clc
cmp
xchg
xchg
cld
cmp
add
xbegin
mov
xchg
mov
inc
clc
cmp
sar
or
sub
add
lock
jbe
clc
cmp
cmp
pop
dec
roll
jmp
sti
inc
clc
lock
clc
push
cmp
add
pop
sahf
fs
scas
mov
add
std
jecxz
or
clc
jae
add
fdivr
dec
jge
add
add
pusha
add
xor
push
jl
add
cltd
sub
add
sbb
mov
clc
stos
lea
inc
add
jg
clc
pop
lret
push
add
cs
inc
clc
dec
pop
clc
push
add
xabort
pshufw
or
jmp
push
pop
dec
data16
fdivrl
dec
dec
dec
pop
mov
sbb
out
cmp
clc
cmc
shll
add
add
dec
popa
add
das
aaa
dec
or
clc
push
cmp
fwait
xor
cmp
add
sbb
enter
jbe
sub
gs
dec
inc
clc
enter
xchg
hlt
xlat
xchg
add
add
add
pop
pop
push
add
push
cld
imul
push
call
add
clc
sub
clc
out
mov
or
dec
outsl
jmp
sub
clc
lea
clc
pop
push
mov
mov
imul
inc
clc
test
add
add
add
adc
add
es
sub
clc
lods
push
clc
vcvtps2pd
xchg
popa
add
cld
mov
add
je
ss
add
pop
jnp
sub
pop
clc
shlb
add
xchg
and
add
add
cmp
inc
add
push
jb
add
scas
outsl
mov
movsb
clc
or
xchg
bound
add
clc
mov
cmpsl
clc
leave
mov
mov
mov
mov
cmp
loopne
jnp
clc
dec
xchg
jl
mov
pop
lock
xchg
sub
add
add
ss
sbb
nop
jmp
movsl
shll
clc
cmpsb
clc
imul
stos
mov
pop
cmp
repz
clc
mov
fisttpl
mov
cmpsb
clc
sbb
add
push
add
test
xchg
popf
loopne
cwtl
pop
mov
clc
mov
js
add
jo
add
add
pop
adc
add
pushf
xchg
fimuls
nopl
add
fndisi(8087
clc
dec
pusha
add
pushl
fistl
add
sub
fldcw
clc
sub
clc
or
add
or
out
xchg
fptan
int3
mov
idivb
jne
add
add
jp
push
add
cmp
clc
mov
clc
js
call
add
push
dec
cs
pop
mov
jns
adc
add
adc
mov
clc
cs
pop
sbb
mov
clc
mov
insl
inc
add
jns
xchg
push
ja
and
jl
sbb
add
xor
clc
push
add
cmp
mov
clc
lret
sbb
mov
add
fwait
ja
jg
lahf
addr16
test
clc
fisubrs
lcall
add
inc
clc
push
mov
dec
xchg
push
stos
cmp
call
nop
jmp
or
ja
add
add
clc
test
in
icebp
fs
sbb
gs
sub
je
clc
mov
add
aad
push
sub
push
add
jmp
std
in
or
and
add
clc
jb
add
inc
sub
add
sub
lods
xor
add
leave
punpcklbw
add
add
mov
pop
pop
in
push
add
nop
jmp
cld
mov
mov
and
cmp
scas
and
add
js
clc
in
and
add
sbb
jb
add
add
jae
add
jb
add
adc
add
dec
cmp
cmp
iret
sbb
add
dec
call
mov
mov
xor
add
clc
imul
add
add
clc
add
test
xchg
and
add
sbb
je
xchg
cmp
clc
dec
sti
cwtl
mov
add
dec
mov
add
inc
add
lock
in
jg
add
pop
jb
add
add
add
adc
add
arpl
add
fisubs
add
add
addr16
xchg
es
jnp
clc
daa
clc
pop
popa
add
push
add
aam
clc
add
add
mov
int3
into
decl
add
jmp
pop
mov
clc
xchg
sahf
jge
jno
add
add
add
mov
clc
jp
mov
clc
dec
mov
clc
scas
mov
xabort
jg
nop
jmp
xor
int
add
mov
clc
xor
pop
clc
loop
push
add
pop
and
stc
imul
cmpsl
clc
pop
sbb
test
add
nop
jmp
loop
cld
dec
xor
popa
add
mov
fwait
gs
aad
dec
xlat
stos
icebp
mov
clc
addr16
push
add
add
add
add
cmp
or
clc
and
add
mov
add
cmp
add
add
xchg
data16
sub
add
scas
es
or
and
add
mov
clc
insl
adc
add
mov
inc
clc
cmpsb
clc
or
mov
add
sub
je
pop
stos
icebp
clc
imul
mov
add
js
out
add
jo
add
icebp
cwtl
dec
or
add
arpl
add
push
add
adc
lods
mov
cmp
add
sub
lahf
jle
dec
cmpsb
clc
sbb
leave
cmp
lcall
xor
add
add
clc
jb
add
add
add
sbb
jmp
arpl
cmp
and
jnp
clc
sbb
clc
repnz
add
stos
xor
clc
jecxz
push
ljmp
nop
jmp
mov
push
sub
cmpsb
clc
call
fdivs
cmp
add
pop
in
lods
clc
fdivrs
cwtl
outsb
jp
mov
push
add
mov
and
add
push
lret
pushf
sar
xchg
mov
clc
ja
xor
filds
sbb
imul
add
cmp
insb
sbb
test
prefetchnta
add
dec
push
mov
cmp
inc
clc
out
out
and
add
inc
add
push
add
ss
clc
decl
lods
add
inc
cli
vmwrite
xchg
jno
add
aaa
std
leave
ret
setl
add
or
add
sar
mov
test
fs
and
adc
clc
fwait
sbb
inc
add
dec
test
add
mov
ffreep
clc
sbb
mov
bound
add
clc
in
dec
test
arpl
jmp
add
cld
and
add
pusha
add
mov
mov
adc
add
adc
push
mov
clc
push
jne
nop
jmp
and
pop
das
inc
add
repnz
clc
add
frstor
fidivs
add
loope
pop
xchg
sbb
clc
loopne
sub
add
jle
cmp
cmp
bound
add
movsb
clc
sub
clc
fcompl
cltd
lods
sbb
add
add
clc
jg
push
add
out
insl
sahf
add
adc
add
jle
xlat
cli
in
jnp
xbegin
add
push
add
and
jle
dec
sbb
repz
clc
cltd
jne
clc
sub
add
pop
clc
xchg
ds
sub
clc
mov
push
add
repnz
and
mov
jno
add
mov
dec
popa
add
pop
outsb
xchg
jle
clc
test
pushf
fldt
add
xchg
xchg
sub
cmpsb
clc
pop
rcrl
xor
add
clc
push
adc
add
sub
adc
push
std
mov
add
clc
jo
add
mov
insb
stos
in
pop
cmp
clc
inc
clc
ss
add
into
or
mov
xor
add
nop
jmp
arpl
stos
mov
add
pop
icebp
and
add
add
push
xchg
sbb
mov
cmpsl
clc
scas
test
mov
insb
or
scas
aaa
sbb
add
sarl
into
pop
push
and
xchg
mov
clc
ret
test
mov
xor
add
add
jnp
out
bound
add
xchg
sti
popa
add
out
nop
mov
dec
xchg
stos
into
scas
rcrl
cli
fsubrp
add
jecxz
dec
cs
cmpsl
clc
sbb
add
js
fsubs
add
sub
in
xchg
cmp
fistpl
inc
clc
cltd
cmp
bound
add
add
add
cmp
ja
mov
repnz
add
pop
mov
lock
and
add
or
ret
call
aad
cmp
add
sub
adc
add
add
mov
nop
jmp
xor
xor
add
or
add
add
nop
push
add
clc
or
adc
add
clc
cmp
shll
fcoml
int3
sar
int
add
scas
jae
add
add
adc
add
enter
mov
push
mov
nop
jmp
jp
ja
shlb
push
push
cmp
inc
add
test
cmp
add
sbb
test
sub
add
add
inc
fidivl
nop
jmp
dec
in
ffree
jae
mov
clc
push
clc
mov
and
add
nop
jmp
mov
sar
sti
xchg
push
lret
xor
add
or
sar
add
jmp
or
clc
mov
add
or
clc
and
add
clc
std
pop
scas
gs
sub
in
adc
clc
pop
mov
clc
inc
clc
sub
jno
add
sar
and
clc
lcall
xor
add
cmp
int3
adc
add
or
clc
mov
add
pop
test
clc
jmp
push
clc
mov
inc
clc
shll
clc
mov
pop
clc
jg
fcomi
add
add
daa
clc
daa
clc
jge
add
nop
jmp
sub
or
loop
mov
xor
clc
cs
add
mov
add
lock
call
or
ss
in
push
cmp
pop
xchg
mov
push
cwtl
xor
or
adc
clc
scas
xchg
mov
pop
popf
or
add
or
fisttpl
cmp
sar
sub
add
pop
shr
in
and
add
call
mov
pop
sbb
mov
ljmp
add
cmp
add
in
jno
add
clc
lods
inc
add
aaa
fsubl
pop
jge
clc
or
fadd
clc
push
jl
clc
or
in
cmp
clc
adc
add
xor
add
movsl
clc
sub
clc
jle
clc
sbb
sub
pusha
add
aaa
or
add
mov
push
add
sbb
lods
shll
add
dec
mov
clc
adc
mov
aam
clc
jbe
das
cmp
or
mov
dec
xchg
enter
mov
cmpsb
clc
or
clc
pop
call
pop
jmp
jmp
push
jp
xor
pushf
add
jnp
add
inc
add
mov
and
add
clc
mov
xchg
adc
add
call
ja
add
stos
clc
in
jo
add
clc
jnp
pop
scas
aam
push
clc
dec
inc
add
movsb
clc
xchg
mov
add
add
lea
add
add
cmp
fdiv
cmp
arpl
add
bound
add
add
cmp
aas
movsb
clc
xor
cmp
clc
mov
mov
inc
clc
insl
ljmp
add
jmp
loopne
sub
add
mov
in
clc
jmp
test
mov
add
pop
repz
bound
add
add
sar
add
in
sti
stos
ja
aaa
cltd
aaa
loope
mov
mov
add
loop
xchg
xor
add
add
add
add
add
cmpsl
clc
xor
add
popf
mov
fidivl
rdtsc
add
cmp
add
int3
fcomip
mov
inc
add
xchg
fistpl
in
mov
cmc
data16
sbb
out
nop
jmp
add
add
cli
jge
cmp
aad
clc
xor
sub
inc
add
dec
bound
add
mov
clc
popf
xchg
jno
add
jne
nop
jmp
push
fldl
je
add
xor
sub
fs
stos
stc
imul
test
das
push
add
or
add
fstl
arpl
addr16
jns
fnstsw
clc
mov
mov
clc
hlt
dec
cmc
mov
js
add
cwtl
xchg
test
es
imul
sub
cmp
adc
add
add
and
add
or
nop
jmp
sub
inc
sbb
add
sbb
cli
adc
add
add
sbb
popa
add
mov
je
clc
mov
in
loop
jb
add
xchg
cmp
jmp
clc
stos
mov
clc
inc
add
mov
flds
add
add
add
mov
sti
shlb
clc
push
clc
push
push
add
jne
push
in
push
add
cmp
mov
clc
clc
xor
add
sbb
lods
jecxz
add
add
in
xor
add
imul
or
clc
in
jmp
clc
cltd
push
scas
push
cmp
cmp
and
push
push
mov
xchg
ret
in
add
into
mov
bound
add
add
loope
cs
mov
clc
lods
sbb
js
jmp
jle
dec
mov
mov
mov
add
ffree
clc
loop
xor
movsb
clc
push
clc
pop
clc
cltd
shrl
adc
jle
bound
add
add
add
nop
jmp
inc
jp
jp
clc
sbb
mov
nop
jmp
and
add
dec
lret
add
aad
clc
inc
clc
and
add
adc
add
sbb
dec
jae
add
es
mov
lcall
lods
iret
xchg
sbb
fldt
cltd
sub
pop
jne
lea
push
mov
xchg
ret
mov
clc
cmp
clc
mov
add
dec
xor
add
lods
sub
add
pushf
icebp
pop
mov
ljmp
or
clc
test
clc
or
xor
lcall
clc
xchg
mov
pop
clc
popf
cmp
loope
push
fstpt
repz
add
xchg
ret
clc
loop
sar
pop
and
add
sarb
hlt
dec
jmp
insl
adc
add
je
sub
add
add
popf
xchg
mov
sbb
mul
clc
adc
add
clc
movsb
clc
jae
add
sbb
ja
add
cli
js
add
ljmp
hlt
fdivrs
decb
ja
mov
xor
add
lcall
mov
adc
add
pop
adc
data16
cld
dec
lods
mov
lods
pop
lret
dec
mov
or
add
jl
clc
pushf
ljmp
jmp
movsl
loop
add
out
mov
mov
mov
add
add
add
outsl
push
fistpl
adc
add
clc
addr16
ror
jne
pmaxub
es
adc
add
enter
movsl
clc
sar
clc
and
roll
xor
jno
add
add
xor
add
clc
movsl
clc
jne
xor
add
clc
and
clc
and
add
add
clc
sub
inc
add
mov
jmp
inc
add
pushf
bnd
clc
jg
add
push
clc
fcomps
mov
add
and
add
dec
sub
bnd
xchg
xor
add
stc
xchg
pop
leave
xchg
imul
hlt
fisttpl
add
add
add
clc
jle
and
add
clc
push
js
add
push
in
cmp
pusha
add
adc
add
test
fimull
jae
add
pop
clc
lea
data16
lods
test
cmp
jp
cmpsb
clc
jge
jbe
sbb
aaa
xchg
lret
clc
mov
mov
xchg
ret
and
shlb
xchg
pop
cmp
ljmp
mov
clc
push
add
push
clc
jns
jnp
add
fwait
push
repnz
pop
sbb
test
xchg
add
nop
jmp
pop
or
mov
add
mov
cmp
push
mov
nop
jmp
add
loop
out
push
add
xchg
mov
xchg
addr16
add
add
push
add
sahf
ret
clc
dec
pop
and
std
icebp
pop
popa
add
xchg
aas
repz
outsl
aas
popf
jnp
mov
fwait
cltd
pop
pop
mov
push
add
add
sub
dec
fucomi
mov
clc
adc
add
add
dec
mov
xabort
stos
int
add
add
adc
cmp
add
push
xchg
lret
inc
clc
sbb
fsubs
xor
add
clc
dec
sbb
cmp
mov
nop
jmp
mov
in
fmull
pushf
rorl
mov
clc
lcall
inc
clc
call
das
mov
clc
imul
clc
arpl
add
cmp
add
aam
scas
mov
inc
add
inc
add
stc
jbe
add
sbb
clc
imul
mov
push
clc
es
mov
push
add
maskmovq
testl
stos
xor
add
jecxz
jl
add
sbb
leave
dec
fidivl
add
jecxz
jns
mov
lret
xor
add
sbb
add
cli
test
clc
aam
add
inc
add
shll
clc
mov
adc
add
icebp
lea
push
mov
xchg
ret
prefetch
popf
outsb
fs
sub
movsl
clc
hlt
pop
or
xchg
lret
cs
clc
mov
xor
add
clc
cwtl
repnz
outsl
in
out
pop
push
add
data16
mov
add
nop
jmp
adc
add
adc
add
add
jmp
clc
repz
jno
add
shl
clc
xchg
inc
clc
lahf
add
add
add
add
int3
outsl
xbegin
add
add
add
push
add
cs
push
mov
inc
add
cmp
clc
mov
sbb
std
xchg
mov
inc
clc
mov
clc
cmc
enter
out
flds
add
ficomps
xor
add
clc
xlat
or
insb
jbe
pop
cmp
xabort
pop
lock
fmuls
mov
xchg
jns
clc
inc
add
mov
xchg
call
dec
es
push
nop
add
xor
adc
and
add
add
add
clc
xor
add
std
sar
clc
je
inc
clc
and
add
mov
jo
add
add
clc
jo
add
lods
cs
icebp
xabort
add
add
decl
jmp
movsl
adc
or
jmp
mov
jae
and
add
clc
icebp
or
cli
cs
pop
cmc
adc
add
fwait
ret
clc
sbb
jge
jg
fldl
dec
push
nop
jmp
pushf
or
js
outsb
adc
add
mov
or
clc
out
and
xor
sub
push
add
push
mov
clc
cltd
fbld
add
lea
nop
jmp
pushf
jge
jae
lea
or
pop
lret
leave
out
sar
mov
ret
nop
jmp
jecxz
adc
add
xor
jle
hlt
mov
pop
addr16
lods
cli
imul
pop
movsb
clc
sar
in
lahf
xchg
xor
clc
push
es
sar
mov
nop
jmp
and
pushf
jae
loopne
jge
imul
test
mov
add
out
fwait
or
cs
test
add
push
add
adc
add
clc
fs
and
xchg
mov
pop
xchg
or
sar
fildl
fdivrs
and
add
decb
adc
add
sets
mov
xchg
mov
addl
pop
dec
sub
add
xor
add
add
and
add
jae
add
mov
add
fistpl
add
mov
test
cmp
lods
jne
cmp
jno
add
clc
ret
clc
gs
call
nop
test
dec
rol
clc
push
clc
sbb
push
cmpsl
clc
adc
clc
add
add
cmp
cltd
cs
clc
in
cli
addr16
or
inc
add
sbb
fsubrs
nop
jmp
dec
fmull
cmp
pop
mov
add
sti
add
add
add
call
jmp
add
js
or
lret
pop
cmp
sbb
jmp
add
arpl
popf
mov
les
nop
jmp
repnz
jns
lret
dec
test
mov
aam
xabort
clc
aad
dec
push
mov
xchg
ret
or
int
inc
add
jg
cmp
iret
fdivs
addr16
jnp
clc
mov
xbegin
add
icebp
gs
dec
insl
into
pop
mov
add
jle
cmpsb
clc
jnp
clc
jmp
adc
add
pusha
add
out
sbb
movsl
clc
cmpsl
clc
in
scas
icebp
dec
push
add
rolb
stos
out
out
in
or
aad
and
lret
ja
cli
xor
add
das
xabort
xabort
out
pusha
add
ret
cld
ret
pushl
push
mov
xchg
ret
fucom
cmp
add
push
jb
add
test
movsl
clc
xchg
mov
push
clc
scas
jb
add
sub
popf
cmp
clc
pop
and
sub
in
sub
fwait
push
dec
xchg
cmpsl
clc
imul
add
dec
lods
popa
add
inc
add
imul
gs
aas
mov
push
into
dec
jns
je
sub
add
mov
add
std
sub
add
outsb
arpl
add
clc
mov
pop
mov
cmpsl
clc
mov
clc
fwait
incb
add
nop
mov
in
mov
outsl
sbb
mov
lcall
add
mov
std
lock
fildll
clc
popf
jbe
add
in
in
addr16
jne
add
add
leave
cmc
pop
mov
clc
lcall
outsl
add
nop
jmp
dec
and
push
mov
pop
xchg
push
add
xor
add
sbb
fcomps
add
outsb
dec
cwtl
xor
add
add
clc
inc
add
out
push
movzwl
nop
jmp
jl
inc
sub
adc
add
clc
test
mov
repnz
lret
or
and
inc
add
mov
repnz
lods
xchg
ljmp
iret
fsubr
insb
scas
gs
add
add
pop
arpl
add
lret
xchg
jne
lahf
fs
stos
mov
clc
xchg
cld
cmpsb
clc
mull
cmp
adc
add
cltd
or
inc
clc
out
clc
push
jle
clc
dec
test
add
push
add
daa
clc
clts
clc
stc
dec
lea
add
aam
fsubp
clc
iret
shrl
nop
jmp
loop
pop
add
xabort
and
add
mov
or
clc
decb
jno
add
xchg
pop
aad
adc
sarl
mov
inc
add
pop
jmp
pushf
or
sbb
pop
data16
inc
clc
mov
add
es
xchg
in
xchg
rorl
clc
sbb
jmp
in
jae
sub
scas
into
dec
mov
into
in
jmp
add
xchg
test
cltd
cwtl
xabort
pop
loope
add
inc
add
icebp
loope
pop
sub
add
cmp
arpl
add
add
out
idivb
clc
jns
cmp
mov
sub
in
push
pusha
push
mov
xchg
ret
pop
add
decl
push
cmp
add
stos
or
clc
jne
add
add
scas
sar
clc
xabort
or
add
jl
add
mov
add
or
cmp
hlt
enter
mov
clc
js
clc
icebp
sub
xchg
sub
add
dec
fcmovu
ds
clc
int
push
nop
jmp
repnz
das
dec
mov
add
mov
nop
jmp
add
jae
popf
jl
add
add
xor
add
fs
pusha
add
mov
add
dec
in
jmp
push
add
data16
fadd
clc
cltd
es
pop
insl
mov
pop
clc
jmp
outsb
cli
scas
test
mov
fisubl
dec
add
clc
nop
dec
fmull
movsb
clc
movsb
clc
and
add
clc
jge
add
aad
pop
clc
test
flds
fidivl
add
clc
jecxz
frstor
and
add
add
xabort
clc
cwtl
pop
clc
ja
clc
int3
dec
js
cltd
ficomps
lahf
cmp
push
sub
aas
adc
add
dec
mov
jl
add
push
inc
add
or
dec
xchg
das
enter
out
inc
add
int
add
xbegin
nop
jmp
xor
shl
or
outsb
push
clc
call
xor
add
test
in
push
dec
jle
add
cmpsl
clc
fdecstp
ret
adc
add
pop
push
repz
mov
mov
stos
jne
stos
sub
clc
xchg
in
pop
gs
sar
mov
shlb
insb
push
repz
adc
add
xor
add
stos
cmpsb
clc
dec
lods
adc
add
popf
mov
push
push
in
outsl
ret
lods
inc
clc
jae
add
sub
xlat
xlat
aam
pop
push
call
nop
jmp
pushf
xor
ret
clc
pop
sbb
mov
xchg
ret
adc
sti
js
pusha
add
mov
movsl
clc
mov
sub
int
lea
data16
pop
xchg
mov
inc
clc
xchg
push
jbe
add
add
add
push
mov
nop
jmp
pop
add
add
arpl
add
sbb
sbb
add
arpl
add
add
fldl
add
out
cmp
mov
jbe
leave
nop
mov
cmp
or
sbb
ret
clc
out
test
cmp
test
xchg
dec
adc
clc
sar
jle
mov
add
popf
leave
jg
fdivl
sub
adc
add
ja
test
outsb
js
cmp
add
fsub
clc
dec
mov
cltd
mov
add
std
adc
add
imul
dec
cmpsl
clc
loopne
fwait
jne
mov
add
push
aad
jae
add
pusha
add
and
add
jo
add
ret
nop
jmp
jl
cli
movsl
sub
clc
cmpsb
clc
push
mov
clc
inc
clc
in
pop
int
loopne
add
add
add
push
cmp
add
nop
add
add
cmp
or
add
pop
mov
clc
leave
and
xabort
aad
add
sbb
cmp
hlt
fidivl
sahf
dec
push
clc
loop
jno
add
cmpsb
clc
clc
mov
sbb
into
inc
clc
int3
cmc
aad
scas
rcrb
cmp
sbb
sbb
ret
clc
test
add
add
outsl
scas
push
push
push
xchg
rcrb
adc
add
adc
add
add
cli
jo
add
mov
fwait
pop
lock
clc
inc
add
out
scas
ret
jmp
clc
or
mov
mov
clc
lods
addr16
faddp
clc
cs
sbb
xabort
add
rcrl
cmp
push
add
repz
inc
clc
sub
in
lret
inc
clc
lea
inc
clc
test
movsl
clc
std
out
ss
ljmp
ret
clc
iret
jb
add
add
push
mov
xchg
ret
loopne
mov
sub
pause
jmp
sub
sub
clc
add
add
out
add
add
pop
insl
movsb
clc
adc
add
cmpsb
clc
repz
adc
cmp
clc
push
clc
inc
clc
imul
push
clc
add
add
add
outsb
add
add
add
mov
lods
sub
mov
jle
mov
xchg
sub
pop
inc
clc
bound
add
ss
clc
scas
movsb
clc
cs
or
popa
add
mov
nop
jmp
outsb
jae
jecxz
mov
dec
and
add
inc
add
mov
push
add
mov
lods
push
mov
xchg
ret
sub
loop
jns
or
push
aam
add
add
fnstsw
add
add
mov
fnsave
outsl
adc
clc
jmp
clc
xor
add
rclb
add
bound
add
add
lahf
aaa
push
loopne
nop
jmp
xor
arpl
add
and
add
xlat
cmp
push
nop
jmp
adc
xor
pop
shlb
add
sbb
nop
cli
rcr
stos
cmp
xor
jb
add
add
add
jo
add
add
add
add
add
shl
clc
add
add
inc
nop
jmp
add
pop
frstor
dec
add
clc
call
stc
adc
add
add
jb
add
popf
mov
scas
mov
add
adc
cmpsb
clc
bound
add
add
add
xabort
movzwl
nop
jmp
out
add
add
clc
adc
add
iret
push
repnz
mov
sti
lret
sar
ret
clc
ret
repnz
aam
ss
clc
outsb
fmul
lret
insb
test
iret
adc
add
adc
add
clc
mov
or
out
xor
mov
clc
out
mov
add
inc
push
mov
xchg
ret
bound
sbb
add
int3
ret
clc
fsubrs
add
add
leave
inc
clc
jne
movsb
clc
mov
add
add
nop
jmp
xor
and
xor
mov
add
add
add
lret
clc
outsl
jmp
fcomi
pop
outsl
push
add
push
gs
pushf
pop
das
cmp
xor
add
add
clc
gs
dec
cmp
int3
leave
mov
stos
cmp
clc
out
sahf
mov
sbb
rclb
std
inc
add
jge
and
add
sub
pop
push
add
jno
add
add
mov
clc
aas
clc
inc
add
imul
jecxz
jo
add
add
pop
mov
mov
clc
pop
mov
cltd
mov
clc
scas
xor
xchg
in
or
int3
and
add
clc
test
clc
inc
add
jle
pop
rcrb
fwait
imul
jnp
add
nop
jmp
sub
add
xchg
test
clc
test
cs
and
xor
add
clc
push
xchg
mov
clc
aas
inc
add
pop
inc
clc
stos
sti
insl
es
into
sti
cmp
push
iret
mov
mov
xchg
ret
fsubrl
sub
sub
add
pop
pop
out
mov
jbe
xchg
fldenv
add
xlat
sub
in
add
add
xabort
add
add
or
mov
adc
or
clc
xabort
xchg
mov
inc
clc
jmp
add
xor
add
clc
cmc
enter
fsubrl
test
stc
or
test
xchg
dec
jle
sbb
bound
add
add
clc
pushf
jb
add
repnz
addb
add
inc
adc
add
lret
push
add
push
dec
pop
imul
clc
dec
push
add
mov
in
je
sbb
ror
jl
clc
ret
push
clc
push
add
bound
add
add
cmpsl
clc
out
pop
cmp
jne,pt
sub
push
jns
add
mov
clc
stc
sbb
rclb
mov
add
add
cmp
es
loope
je
mov
insb
xchg
loope
xchg
mov
call
jmp
xor
or
test
mov
out
leave
jae
add
dec
inc
add
cmp
clc
mov
lret
rclb
out
fwait
sar
dec
mov
add
add
add
nop
jmp
js
sub
push
mov
xchg
ret
dec
and
cwtl
adc
rorb
nop
jmp
loopne
fmull
jns
add
add
or
out
or
add
cltd
pminsw
add
dec
out
gs
jecxz
add
add
cmp
sub
mov
pop
sar
mov
nop
jmp
adc
add
mov
mov
xor
add
push
add
fs
cmp
add
fmull
sbb
data16
icebp
sub
clc
lea
clc
fcomps
mov
add
add
test
lock
clc
add
add
clc
fistpl
cwtl
daa
clc
add
add
dec
sub
sbb
inc
add
movsl
scas
cmp
push
push
push
mov
xchg
ret
add
or
inc
clc
scas
fisttps
sar
add
into
jmp
leave
xchg
sub
clc
and
add
mov
js
cmp
inc
clc
jecxz
or
cli
push
ds
inc
add
xor
jo
add
clc
flds
mov
jg
xor
add
clc
stc
sar
pop
cmp
add
clc
xchg
lret
call
shrb
imul
clc
and
add
clc
pop
adc
and
adc
nop
jmp
dec
and
add
mov
mov
add
cmp
xor
jge
add
add
clc
stos
pop
xbegin
push
lret
cmc
data16
sti
jge
lods
cmp
or
add
add
inc
clc
xchg
xlat
ret
or
loopne
test
movsl
clc
push
add
std
gs
sar
add
add
xor
add
and
add
push
add
add
add
push
mull
add
add
fdivl
add
mov
ljmp
inc
add
bswap
clc
cmpsl
clc
ret
clc
inc
add
cmpsl
clc
jmp
jmp
add
pop
pop
sbb
movsb
clc
pop
gs
ja
pop
clc
adc
add
jns
out
cmp
imul
int3
pop
cmp
add
rorb
xor
push
nop
jmp
shlb
jecxz
out
int
mov
clc
test
out
xor
add
inc
add
mov
aad
rcrl
jbe
add
or
inc
add
imul
push
nop
jmp
ja
out
int
mov
nop
mov
mov
movsl
clc
push
add
add
add
icebp
scas
mov
clc
dec
fnstsw
push
add
pop
clc
dec
pop
js
rol
clc
inc
clc
cmpsb
clc
pop
lcall
add
add
pop
jl
arpl
and
add
xor
add
add
aam
dec
popf
dec
dec
mov
dec
and
add
clc
fs
arpl
add
add
or
add
bound
add
mov
inc
clc
mov
add
nop
jmp
sub
add
adcb
fstpl
add
xchg
decl
sbb
inc
pop
add
pop
adc
insb
jo
add
add
add
pop
clc
dec
loopne
clc
lahf
pop
sbb
add
test
cmp
sar
clc
sub
mov
imul
out
jno
add
dec
stos
adc
add
add
dec
or
jmp
lret
dec
dec
mov
stc
jmp
xchg
fstpt
add
mov
lcall
aas
dec
xor
xchg
pop
xchg
pushl
nop
jmp
adc
jp
rclb
jg
outsl
inc
add
adc
add
clc
insb
sar
clc
add
add
inc
add
pop
or
clc
out
xchg
cmp
xchg
pop
cmp
outsb
dec
fdivs
add
clc
cwtl
mov
xchg
cmp
in
stos
and
add
add
sbb
stc
mov
scas
adc
add
push
add
lret
das
bound
add
add
movsb
clc
lret
add
add
xchg
nop
jmp
mov
mov
add
add
hlt
popf
or
cmpsl
clc
jno
add
add
in
pop
into
cmp
imull
jnp
and
insb
out
ds
bsr
int
mov
xchg
adc
dec
add
jbe
clc
dec
xabort
adc
add
mov
xchg
ret
mov
idiv
div
nop
jmp
sub
cld
loop
and
clc
testb
clc
mov
jmp
adc
roll
inc
cmp
mov
clc
cmp
clc
inc
clc
std
xchg
aas
call
add
jge
out
mov
mov
clc
fnsave
fsubrs
loope
clc
fstpt
int3
lcall
jle
add
loopne
popf
adc
rcr
and
add
cmpsb
clc
inc
add
sbb
sbb
jmp
add
and
cmp
add
fists
out
xbegin
push
mov
xchg
ret
stos
or
inc
add
call
clc
xbegin
add
add
pop
call
clc
repz
int3
add
add
clc
in
adc
add
add
test
cltd
sbb
rolb
add
adc
mov
pop
stos
or
mov
fucom
clc
inc
add
xor
loop
enter
xchg
in
out
jl
add
add
bound
add
pop
push
add
xchg
jne
cmp
push
add
sbb
sub
idivl
fiaddl
add
imul
add
outsl
mov
jle
sahf
fs
leave
mov
data16
adc
clc
dec
mov
clc
test
push
stc
cmpsl
clc
loope
inc
clc
jnp
sub
test
into
es
or
sub
aas
pop
sbb
repz
clc
xor
test
or
pop
jbe
clc
sbb
clc
out
popl
add
mov
lods
movsl
clc
dec
jle
dec
mov
or
add
das
dec
add
mov
clc
cmc
jmp
add
mov
or
add
add
pushf
fcoms
leave
jg
mov
jno
add
in
sbb
clc
mov
clc
push
mov
out
inc
add
sub
or
or
movzbl
push
lcall
clc
ret
jnp
adc
add
mov
cmp
add
push
icebp
jmp
jbe
nop
jmp
push
add
adc
clc
mov
adc
add
adc
add
add
imul
lods
or
mov
clc
mov
cltd
sarl
push
fnstenv
and
add
aaa
jnp
sahf
xor
add
cmp
mov
clc
mov
or
cmp
cmp
clc
arpl
add
dec
xlat
popa
add
jle
clc
in
ds
iret
or
add
in
bound
jp
mov
mov
add
add
outsb
dec
dec
inc
add
pop
sarl
push
clc
add
push
mov
nop
jmp
pop
add
sub
jl
cmp
push
mov
xchg
ret
sub
add
iret
sar
add
out
jae
add
add
mov
clc
jmp
lcall
je
jp
push
mov
add
add
add
or
add
push
fisubrl
in
aaa
leave
and
add
add
cmc
jo
add
stos
inc
clc
ret
sbb
jmp
add
dec
mov
loopne
iret
xbegin
scas
mov
xor
hlt
and
add
add
add
jne
clc
in
decl
test
add
nop
jmp
push
jns
cmp
clc
fnstsw
test
jne
cmc
and
add
add
add
lock
insb
cmp
mov
jg
fnstsw
cmp
clc
pop
pop
and
add
icebp
dec
in
mov
jge
imul
add
movsb
clc
hlt
push
add
insl
jno
add
or
outsl
cmp
clc
xbegin
push
xchg
pop
ficoml
js
add
nop
jmp
movl
mov
add
xlat
ret
mov
jp
data16
mov
clc
adc
add
jb
add
sar
add
jmp
add
ljmp
cli
nop
jmp
jns
sarl
add
xchg
mov
add
stos
jo
add
cmpsb
clc
cmc
dec
mov
xor
add
outsl
iret
sti
mov
mov
jmp
jp
adc
js
mov
test
adc
add
clc
dec
js
add
pusha
add
scas
pop
nop
xchg
leave
rol
clc
arpl
add
add
fstpt
xor
add
mov
nop
jmp
jl
outsb
pop
and
sbb
push
mov
xchg
ret
xor
bound
dec
mov
pop
shl
mov
add
xchg
pusha
add
mov
scas
test
inc
clc
mov
rorl
xchg
movsl
clc
dec
in
xlat
sbb
jmp
ret
clc
mov
stos
lea
clc
mov
xchg
pop
sahf
inc
clc
jmp
popa
add
ret
add
jle
clc
into
cmp
or
mov
clc
xor
add
inc
clc
add
add
scas
sahf
rolb
cmp
push
add
jge
and
add
fsubrs
jp
jno
add
add
jmp
cmp
add
adc
add
outsl
imul
add
pop
aaa
pop
inc
add
push
cmpsl
clc
addr16
fsubr
enter
mov
add
mov
adc
add
arpl
add
mov
xchg
ret
xor
inc
add
mov
imul
inc
clc
sub
clc
lock
clc
leave
idivl
dec
insb
in
xchg
cmp
fwait
pop
test
outsb
jmp
clc
fsubs
cltd
cmp
adc
sbb
sar
imul
imul
add
outsb
popa
add
negb
mov
push
mov
xchg
ret
adc
add
mov
jp
push
clc
mov
clc
fcmovnb
clc
jg
add
fsubl
jo
add
dec
imul
aad
cwtl
and
add
leave
shll
add
mov
pop
hlt
cmp
js
jp
add
test
pop
add
add
pusha
add
cmp
stc
mov
sbb
jmp
sub
cld
add
in
add
push
test
dec
mov
pop
pop
scas
sub
mov
add
cwtl
adc
cmp
mov
jmp
add
popf
popf
cmovle
xchg
insb
xbegin
sub
clc
ret
xchg
mov
mov
add
push
add
xor
add
enter
fnstcw
add
arpl
add
cld
mov
add
rorb
dec
lock
xor
add
test
add
add
jp
nop
fxch
push
mov
pop
mov
clc
xor
add
or
in
aad
clc
add
add
and
add
add
loopne
std
lods
jne
imull
push
jle
add
add
movsl
add
js
add
clc
mov
nop
jmp
out
repnz
cmp
add
int
cltd
cmp
or
jecxz
cmc
cltd
sbb
add
push
add
call
jmp
jae
mov
add
clc
icebp
jg
test
fdiv
daa
clc
mov
add
push
push
mov
xchg
ret
add
add
in
and
add
cmp
push
add
cmp
je
add
je
clc
sarb
repnz
sbb
js
into
xchg
outsb
sub
cmp
cli
xor
add
popl
clc
xlat
fimuls
add
mov
add
pop
in
mov
add
movsb
clc
add
add
add
jge
mov
xor
add
cmp
dec
icebp
jnp
clc
inc
clc
dec
ds
int
add
pop
xbegin
clc
jge
sbb
xchg
sarl
and
pop
int
clc
lret
clc
nop
push
add
sbb
nop
jmp
add
pop
pop
add
es
popa
add
mov
add
xor
add
clc
lret
clc
fwait
lret
inc
add
loop
cmp
arpl
add
add
push
push
add
xchg
cmp
cwtl
cs
std
lea
add
loop
inc
clc
and
inc
clc
and
rcl
popf
xchg
aad
in
inc
add
mov
clc
inc
clc
add
testb
add
sub
clc
mov
clc
cmc
ds
sar
pop
xor
ja
mov
cmpsl
clc
mov
add
scas
aad
add
mov
pop
inc
clc
xor
inc
clc
push
jns
cltd
cmp
clc
cmp
aas
and
add
data16
mov
clc
int3
jmp
xchg
sub
inc
add
xchg
ret
add
call
or
cmp
popa
add
jl
clc
jp
add
add
add
js
loopne
cli
jecxz
lock
clc
in
mov
jp
push
sbb
loop
mov
clc
fstps
xor
add
cmp
add
loope
aas
cmp
inc
add
popf
dec
ds
add
and
add
in
dec
std
adc
add
test
clc
data16
std
cmp
add
add
sub
daa
clc
pop
mov
clc
leave
outsl
cmp
sbb
xchg
cmovno
add
add
adc
add
add
dec
add
add
jbe
pop
xlat
dec
inc
clc
aam
pop
leave
lods
or
add
sar
scas
sbb
rclb
jb
inc
add
xor
ss
clc
enter
add
aad
clc
mov
insb
icebp
aaa
leave
mov
add
cmp
call
clc
fcmovnb
clc
incl
jne
nop
jmp
add
cli
pop
sub
and
pop
lock
lods
pop
push
inc
add
lret
pop
pop
clc
adc
add
or
clc
xchg
xor
add
add
xchg
push
add
mov
nop
jmp
ja
loop
cli
mov
add
cmp
stos
push
add
stc
daa
clc
inc
add
adc
add
xor
add
xchg
enter
popa
add
xchg
leave
fidivrl
shrl
add
mov
outsl
insl
sub
mov
add
stos
sti
push
adc
out
push
add
sbb
adc
add
fsubs
add
add
push
fwait
in
sub
fwait
cmp
sub
or
clc
nop
xor
loop
cmp
add
dec
fstpl
add
lods
lcall
ret
clc
or
or
add
add
clc
xchg
cmc
es
jl
mov
out
lock
clc
xchg
jbe
movsb
clc
enter
sub
mov
add
jecxz
or
out
ss
fisttpll
pop
mov
add
mov
nop
jmp
fsubrl
stos
paddb
add
dec
sbb
cmp
mov
gs
sub
push
imull
arpl
add
or
adc
add
add
mov
ret
pop
mov
imul
push
mov
xchg
ret
or
add
sarl
jp
outsb
int3
cltd
pop
test
adc
add
clc
sar
adc
add
int3
lcall
loope
call
clc
rclb
jmp
add
mov
sub
nop
jmp
push
xor
xor
mov
cmp
add
add
and
in
pop
outsl
xchg
and
add
jle
popf
iret
xchg
xchg
fdivl
add
clc
into
in
call
add
mov
or
cmp
and
add
aaa
cmp
clc
imulb
add
or
loope
inc
clc
imul
clc
mov
pop
push
xor
add
lret
ja
inc
clc
ret
add
adc
add
cmp
cmp
xchg
clc
es
cwtl
cmp
clc
insl
mov
cli
jne
nop
jmp
mov
cs
push
add
jo
add
fmull
jnp
popf
je
jl
clc
ror
pusha
add
mov
add
adc
add
popl
add
add
aaa
js
cmc
sti
dec
jns
sub
push
clc
sahf
jo
add
add
lods
lods
fbstp
clc
add
pop
add
add
test
maxps
add
add
add
pop
add
xchg
lret
fidivl
add
cmp
cmc
jle
clc
pop
jecxz
test
clc
cwtl
pop
imul
add
inc
clc
jmp
ret
clc
mov
clc
inc
clc
rcll
add
outsb
mov
lea
nop
jmp
and
or
push
or
mov
or
dec
cmp
add
enter
lcall
add
mov
sub
add
in
leave
jbe
clc
mov
jb
add
add
add
outsb
push
add
sbb
sbb
xchg
ret
movl
clc
mov
insl
mov
sub
add
mov
add
sub
mov
insb
in
hlt
outsl
js
ret
nop
jmp
jp
inc
add
rolb
sbb
dec
test
mov
adc
add
add
add
cmp
sar
add
pop
ss
add
add
add
nop
jmp
xchg
adc
or
adc
add
add
lret
in
inc
add
aad
add
jp
mov
sbb
jmp
cli
ja
add
jae
jmp
mov
xchg
int
iret
cmp
aad
stos
cltd
fs
repnz
add
lods
shrb
inc
add
aaa
push
aam
insb
sbb
ljmp
sub
clc
push
add
sar
popa
add
loope
test
daa
clc
dec
add
add
clc
test
lock
lods
mov
push
out
push
jp
add
shrb
mov
sbb
mov
xor
nop
jmp
pop
data16
arpl
lahf
or
clc
aam
push
mov
add
cmp
mov
add
push
jne
add
add
cmp
clc
popf
ret
clc
xor
movsl
clc
jae
add
add
addr16
xchg
lods
mov
paddusw
add
std
inc
add
ljmp
push
add
mov
int
clc
cld
cmp
jne
xchg
ja
popl
addr16
push
mov
push
mov
xchg
ret
outsb
add
xor
add
mov
nop
jmp
add
dec
jecxz
icebp
and
add
jmp
addl
add
or
movsl
mov
pushl
nop
jmp
xchg
or
add
jecxz
lahf
cltd
mov
pushf
xchg
xchg
out
clc
sub
dec
syscall
clc
ljmp
add
incl
add
js
clc
xor
add
ds
clc
imul
clc
cmp
pop
clc
pop
out
lock
mov
int3
vmovhps
and
mov
add
push
add
sub
add
xchg
push
clc
into
jns
clc
mov
push
mov
add
mov
clc
or
clc
cmp
clc
into
mov
push
aas
jnp
cmp
sub
add
lcall
in
sbb
lahf
pusha
add
rcrb
clc
fisubrl
mov
add
dec
sbb
xor
add
add
out
fwait
xor
adc
add
or
clc
cmp
clc
clc
cli
mov
test
push
lock
leave
cmp
in
ljmp
bound
add
xbegin
clc
pop
clc
dec
testl
shll
add
and
xor
xchg
js
sub
sarb
bound
add
cmp
add
xchg
mov
clc
mov
sub
clc
aad
mov
ljmp
aad
inc
clc
adc
add
dec
xchg
and
add
mov
enter
add
add
sub
lea
addr16
jmp
clc
lock
mov
push
jnp
clc
lahf
push
cld
cmp
lret
mov
adc
inc
clc
xbegin
fdivrl
cmp
add
add
scas
bound
add
pop
dec
sub
ja
sub
addr16
push
add
stos
das
call
jmp
clc
mov
sti
add
add
nop
es
call
add
add
pop
vandnps
jecxz
xchg
jp
fwait
inc
clc
movsb
clc
leave
shlb
clc
fdivl
clc
cmp
clc
cwtl
push
add
outsb
movsl
clc
syscall
clc
sti
out
clc
jne
add
xchg
xchg
and
add
fbstp
mov
clc
push
add
hlt
imul
add
dec
jno
add
add
add
aad
adc
add
and
add
ret
clc
daa
clc
js
sub
add
add
add
clc
ficoml
in
push
pop
ret
fwait
jmp
nop
jmp
inc
xchg
pushf
add
call
add
add
sbb
movl
inc
inc
and
inc
clc
icebp
jno
add
rolb
mov
clc
test
loopne
jle
clc
clc
or
sti
iret
dec
aaa
pop
and
sbb
xor
stos
loop
js
shr
daa
clc
sbb
add
mov
pop
sbb
add
enter
lods
sub
mov
nop
jmp
loop
add
shlb
add
clc
call
imul
push
addr16
divb
fmulp
pop
cltd
mov
aaa
jae
add
clc
fnstcw
add
cmpsl
clc
test
and
call
ja
or
pop
divb
add
jb
add
add
pop
jns
clc
push
inc
add
push
add
mov
cmp
dec
mov
push
sar
xor
add
jle
clc
xor
add
rorb
add
add
stos
mov
add
sbb
push
nop
jmp
and
add
push
imul
clc
cmp
clc
cltd
scas
mov
insl
inc
clc
dec
add
add
clc
mov
add
add
mov
outsl
push
add
mov
imul
add
repnz
jg
sbb
pop
sarl
clc
pusha
add
jge
shl
jg
add
inc
clc
in
jmp
cmp
mov
xchg
ret
add
add
clc
fwait
cmp
nop
outsl
arpl
add
pop
clc
ret
clc
test
add
xchg
clc
lea
addr16
fnsave
clc
mov
movsb
clc
imul
sar
arpl
add
add
dec
lock
in
es
lock
clc
neg
cmp
mov
add
add
mov
xor
add
add
or
adc
add
shl
sar
add
nop
jmp
outsb
out
in
adc
pop
clc
sbb
loop
pushf
sbb
iret
fisubrl
jne
and
add
mov
sarl
mov
mov
clc
pop
cmp
stos
jmp
popa
add
popf
and
test
pop
jge
rcr
lods
movsb
clc
ror
mov
clc
arpl
add
loop
jmp
data16
out
inc
add
pop
inc
clc
out
loopne
fnstcw
test
sub
xchg
gs
sbb
jb
add
clc
adc
mov
popa
add
pop
mov
data16
jle
clc
add
dec
out
jo
add
sbb
add
push
jle
clc
unpckhps
mov
rcrl
mov
sub
add
repnz
popa
add
sub
cmp
jmp
add
shlb
aas
in
lods
in
dec
scas
lea
jne
clc
in
clc
or
xor
add
sub
aad
inc
add
loopne
clc
fcoml
add
xchg
xor
add
shlb
dec
dec
jns
repnz
pushf
inc
add
jp
push
mov
nop
jmp
in
add
add
add
ficompl
xbegin
inc
clc
push
lock
sar
sub
stc
mov
mov
xor
add
dec
dec
cmp
sar
clc
push
add
adc
adc
stos
pop
pop
in
cli
sub
mov
clc
push
add
out
ljmp
out
sub
lret
xchg
fiaddl
clc
push
out
dec
jp
out
in
sbb
add
clc
cmp
lods
sub
xchg
sar
cmp
clc
psadbw
test
add
add
pop
and
add
leave
fdivs
sub
mov
jle
clc
mov
xor
add
sub
clc
das
pop
cmpsl
clc
lock
movsl
clc
add
push
or
add
clc
scas
loopne
fcoms
add
imul
add
add
int
clc
dec
mov
mov
rcll
add
leave
mov
clc
ds
es
dec
notl
add
clc
sub
add
ja
imul
add
adc
clc
push
add
sar
hlt
adc
add
lret
dec
push
clc
inc
clc
push
jmp
and
test
clc
loop
cmp
dec
dec
dec
cltd
cli
pop
xabort
clc
xor
add
add
add
nop
inc
add
add
add
gs
jmp
mov
add
xlat
and
lahf
cmp
jno
add
clc
test
cmp
pop
clc
cmp
outsl
jno
add
jle
clc
and
add
and
add
add
fbstp
lods
sub
fildl
add
clc
inc
add
push
inc
clc
push
jmp
mov
inc
and
add
clc
pop
clc
push
je
nop
jmp
mov
and
add
clc
cmpsl
clc
sbb
inc
push
mov
xchg
ret
popf
jl
popf
mov
imul
pop
clc
enter
cli
movsl
clc
sar
xor
add
rorb
ret
clc
xor
mov
stos
add
add
add
lods
fdivrl
add
sbb
clc
movsl
clc
sbb
out
pop
mov
mov
clc
inc
clc
scas
insl
lods
repnz
clc
adc
stos
push
sbb
clc
ja
adc
add
mov
cs
punpckldq
add
inc
add
int
pop
sub
daa
clc
pop
clc
fdivr
dec
push
mov
xchg
ret
add
cmpsb
clc
stos
jns
clc
push
add
lcall
clc
add
mov
xor
add
call
clc
sub
clc
nop
mov
push
pushf
jge
clc
outsl
and
clc
popf
or
add
lret
iret
jbe
or
push
mov
xchg
ret
mov
clc
hlt
push
cmpl
nop
jmp
sub
data16
bound
add
sub
inc
clc
xchg
fmull
fstpt
add
ror
dec
cmp
add
add
add
xor
dec
xbegin
mov
inc
clc
inc
add
dec
push
fistps
add
fbstp
push
clc
xlat
pop
and
pop
loopne
push
jmp
xchg
cld
add
or
lcall
mov
xchg
ret
and
loop
aas
mov
add
je
push
pop
push
mov
xchg
ret
jecxz
adc
inc
add
inc
add
pop
stos
cmp
arpl
add
xchg
or
clc
ja
add
sar
add
adc
cmp
jle
mov
xchg
ficoms
add
loope
mov
add
xor
add
ficomps
int
or
add
cltd
not
inc
clc
sbb
xchg
pop
mov
jb
add
cmp
clc
pop
jmp
ss
lods
jns
push
nop
jmp
unpcklps
adc
clc
fists
add
cltd
xchg
in
sbb
lret
add
and
mov
imul
nop
jmp
jp
adc
mov
rcr
jl
clc
and
add
cmp
pop
decl
imul
incl
sub
and
add
add
pusha
add
jg
clc
insl
xor
add
add
jnp
cmp
add
inc
clc
or
insl
push
into
ret
clc
dec
sub
add
lea
sbb
mov
mov
xchg
jl
jo
add
imul
push
add
lret
push
add
es
aad
and
cmp
and
aaa
movsb
clc
test
inc
clc
out
cltd
adc
add
test
nop
jmp
jl
rcr
pop
add
clc
xor
pop
icebp
dec
xor
xchg
jo
add
jle
pusha
add
or
mov
ret
clc
jge
dec
mov
add
clc
pop
sub
sub
test
xchg
push
add
add
add
add
push
lods
adc
add
hlt
dec
add
add
jmp
clc
ljmp
clc
inc
clc
hlt
inc
add
movsl
clc
shr
mov
test
stc
fisubrl
clc
call
mov
xchg
ret
mov
mov
or
sarb
clc
jb
add
hlt
push
xor
sti
mov
dec
cmp
movsb
clc
cmpsl
clc
pop
xchg
cmpsl
clc
push
rolb
clc
lcall
xchg
leave
clc
cmp
pop
cwtl
mov
push
add
cmp
dec
mov
clc
movsb
clc
pusha
add
vmovaps
clc
aad
dec
adc
push
xor
nop
jmp
cld
mov
pop
jb
add
inc
clc
jecxz
je
fildll
clc
lea
add
push
mov
xchg
ret
ja
mov
adc
out
jl
dec
xchg
lcall
add
and
add
clc
push
cmp
add
jns
inc
clc
lods
jns
add
lock
add
sar
imul
jnp
lock
pop
dec
pop
cmp
mov
jno
add
clc
lret
loope
stos
jl
and
inc
add
jge
fidivl
add
repz
clc
movsb
clc
cmp
imulb
js
outsb
xor
sbb
sub
add
data16
sub
clc
cmpsb
clc
xchg
xorps
test
add
nop
jmp
xchg
rdpmc
cmp
add
add
adc
add
dec
fidivrs
int
mov
call
scas
in
and
clc
iret
dec
movsl
clc
pop
sub
lods
add
dec
and
add
inc
clc
jmp
jnp
cmp
mov
aam
testb
jge
nop
jmp
pushf
adc
cli
js
into
addr16
inc
clc
pop
clc
jge
push
jmp
fwait
add
add
xchg
icebp
cmp
mov
nop
jmp
add
jns
stos
push
add
and
add
xlat
movsl
clc
cmp
xchg
aaa
sub
xchg
lods
movsb
clc
int3
notl
add
sbb
add
cmp
stos
sar
insb
sub
add
add
fstps
add
add
add
inc
add
push
add
repnz
add
add
add
dec
sub
rolb
add
add
sbb
lcall
xor
pop
and
add
push
data16
jecxz
sub
cmp
push
add
cmp
clc
movsl
clc
pop
xlat
mov
add
add
cmp
clc
dec
stos
push
push
mov
xchg
ret
add
sub
clc
adc
add
clc
and
add
sti
and
add
add
jns
xor
clc
fdiv
mov
clc
inc
add
loop
xchg
imul
xor
clc
stos
ljmp
ss
pop
clc
jmp
or
dec
roll
pop
fnsave
cltd
jb
add
add
add
add
clc
je
test
clc
dec
fstpl
lret
ret
clc
pop
cmp
gs
pop
clc
cs
jo
add
add
inc
add
lock
ljmp
out
lahf
cmp
xor
push
push
push
ret
movsb
clc
mov
dec
cs
clc
cld
fcompl
add
jo
add
jns
clc
mov
clc
pop
mov
fsts
add
clc
repnz
clc
in
repz
movsb
clc
push
add
fildl
push
push
int
and
gs
adc
add
cs
daa
clc
and
out
imul
cmp
ljmp
stc
mov
in
movsl
clc
outsl
mov
inc
add
jge
pusha
add
mov
cmp
clc
aaa
jnp
mov
add
mov
inc
clc
fimuls
dec
fistpll
nop
jmp
cli
loopne
add
jns
repnz
push
dec
mov
loope
cli
mov
mov
dec
aas
sub
cmp
add
ljmp
and
add
and
sahf
jmp
sub
shll
clc
lock
clc
inc
clc
out
shrl
outsb
int3
xchg
add
add
push
mov
dec
clc
xor
add
cs
mov
push
jne
movsb
clc
frstor
add
add
daa
clc
jne
fstpt
clc
pop
clc
sbb
add
adc
add
clc
inc
add
xor
add
add
in
mov
shrb
lahf
ret
clc
xor
sub
add
clc
xchg
add
call
pop
fistl
add
sub
movsb
clc
adc
cmc
mov
sarl
clc
cmp
das
dec
push
xchg
inc
add
mov
cmp
sar
pop
mov
arpl
add
mov
add
adc
sar
sub
add
sbb
add
dec
imulb
mov
jae
add
jp
xchg
jno
add
clc
bound
add
add
add
jle
cli
xor
add
adc
add
add
adc
add
xchg
filds
sahf
fwait
sub
push
add
push
add
in
cmp
clc
dec
jbe
clc
out
push
xbegin
popf
dec
adc
clc
push
add
and
clc
iret
cmp
or
clc
shr
sub
mov
add
and
add
push
jge
fstpl
mov
addr16
cmp
and
add
jl
add
add
and
add
test
clc
sbb
add
add
in
add
cmpb
inc
clc
push
lods
pop
popf
mov
mov
pusha
add
clc
addr16
enter
lock
clc
and
add
xor
icebp
enter
clc
mov
ja
clc
inc
add
push
add
cmp
vcomiss
clc
xbegin
clc
push
clc
enter
data16
mov
cmp
out
fsubrs
adc
add
clc
jecxz
loope
das
dec
cmc
inc
clc
aam
repnz
test
sub
jecxz
push
add
nop
addr16
cmp
lods
sub
stc
add
add
clc
or
mov
nop
jmp
dec
sub
clc
dec
push
clc
or
sbb
popa
add
dec
xor
add
mov
clc
cltd
cmpsl
clc
mov
add
dec
cmpsb
clc
xbegin
and
add
add
xchg
lret
inc
add
fiadds
add
arpl
add
jbe
add
jae
add
int
clc
jbe
pop
pop
inc
add
cmp
int
pop
loope
addr16
xchg
cmp
fbld
add
sub
clc
sub
add
clc
test
int3
adc
mov
fisubl
call
cmpsl
clc
clc
mov
xchg
fdivrs
push
add
nop
jmp
arpl
mov
add
or
lods
inc
clc
push
add
iret
cmp
push
add
lret
dec
jbe
clc
inc
add
or
sub
stos
daa
clc
cmp
clc
in
sahf
jno
add
clc
leave
inc
clc
adc
add
data16
scas
out
js
inc
add
mov
mov
clc
sbb
clc
add
fcoml
add
daa
clc
rorl
jae
add
add
push
add
mov
cmp
mov
lret
fcoml
xor
test
add
pop
pop
into
mov
add
add
add
jns
push
pusha
nop
jmp
arpl
popf
pushf
push
cld
add
cld
daa
clc
ja
arpl
add
dec
and
add
aam
jp
add
add
add
int
outsl
es
cmp
clc
push
clc
jle
dec
mov
add
add
jg
clc
arpl
add
sar
add
cmpsb
clc
scas
push
enter
cmp
add
insl
js
and
not
data16
mov
xchg
addr16
aas
sbb
cmp
adc
add
clc
push
and
add
clc
leave
hlt
rclb
add
std
in
dec
rcll
mov
nop
jmp
add
faddl
lahf
jg
add
clc
fs
jo
add
out
inc
add
and
add
iret
pop
clc
sbb
jae
add
cmc
sub
rcrl
add
or
xchg
clc
lcall
cmp
je
nop
jmp
mov
add
add
cmp
push
nop
jmp
out
sarb
cmp
pop
pop
insl
sbb
inc
ljmp
jmp
adc
add
pop
inc
add
sub
or
pop
inc
add
imul
clc
pop
jno
add
clc
int3
adc
add
cmp
jmp
movsl
add
outsb
add
ret
call
add
in
sahf
xabort
aas
fs
xchg
adc
add
clc
cmp
clc
mov
fdivrs
xor
add
clc
xchg
into
adc
add
add
sbb
pop
xchg
cmpsl
clc
mov
cmp
js
add
sub
lods
adc
add
sar
push
mov
mov
add
cli
bound
add
call
in
cmpsb
clc
add
add
clc
out
cwtl
rol
clc
test
mov
clc
cmp
add
mov
add
jnp
add
fnstenv
aaa
lods
jge
pop
inc
clc
clc
mov
push
add
nop
jmp
inc
mov
mov
clc
imul
add
clc
lret
jmp
add
in
in
in
lret
clc
sbb
mov
add
xor
add
stos
pop
cmp
pop
xchg
out
mov
mov
push
add
cmc
sar
jo
add
pop
add
add
lcall
mov
sar
clc
repnz
mov
add
mov
mov
add
clc
dec
mov
lret
jbe
add
rorb
add
add
clc
lret
mov
cmpsb
clc
sbb
ss
mov
movsb
clc
mov
mov
pushf
jb
add
add
mov
add
out
daa
clc
loop
fists
mov
outsb
lods
ja
hlt
pusha
add
mov
cmp
clc
and
cvtdq2ps
cs
hlt
imul
clc
xchg
fdivs
das
lahf
aad
xor
clc
daa
clc
pop
mov
jge
add
cmc
sbb
mov
xchg
ret
jge
shld
inc
clc
or
loope
lret
add
bound
add
fstpl
repnz
ss
in
mov
cmp
sbb
popa
nop
jmp
add
insb
mov
repz
clc
mov
clc
lea
add
insl
jns
enter
leave
push
test
fsubrp
mov
clc
movsb
clc
lret
out
imul
add
popa
add
or
add
mov
nop
jmp
sub
mov
cli
and
add
add
pop
jnp
jnp
ret
clc
push
cmp
add
mov
jns
cld
imul
rcr
cmp
clc
repnz
jnp
jge
pop
cmp
jns
clc
mov
dec
xbegin
add
clc
pushl
nop
jmp
xor
inc
arpl
clc
rcll
add
hlt
outsb
out
shrl
stos
push
cltd
mov
push
fcomps
xor
add
mov
clc
mov
cmp
add
add
push
mov
pop
dec
or
lcall
jae
add
or
add
cli
xchg
imul
add
mulb
add
cmp
mov
dec
loop
cmp
inc
clc
xchg
lods
jl
clc
cmp
clc
add
add
add
test
add
xor
add
add
sbb
mov
ljmp
dec
add
add
jo
add
outsl
inc
add
or
mov
aad
movsb
clc
jne
std
int
sub
cmp
mov
das
xchg
je
add
push
clc
or
int
sub
clc
mov
mov
inc
add
push
sub
add
xor
add
clc
scas
or
xor
mov
mov
xor
add
xor
add
clc
dec
call
test
nop
jmp
add
repnz
adc
add
xlat
or
hlt
pusha
add
cmp
mov
nop
jmp
jecxz
mov
jae
add
clc
pop
mov
add
pop
clc
sub
clc
sbb
pop
cmp
sahf
popf
cmp
and
add
fs
or
add
sbb
clc
mov
add
nop
jmp
pop
arpl
add
loopne
ss
in
loopne
jp
clc
mov
sar
clc
sub
arpl
add
add
clc
out
push
pop
clc
cltd
inc
clc
xbegin
dec
xor
add
add
stos
clc
sub
mov
nop
jmp
add
pop
mov
add
add
imul
mov
add
add
out
in
fstpt
cltd
sbb
jl
out
inc
clc
push
add
or
sbb
nop
jmp
movl
jns
mov
enter
add
mov
mov
clc
adc
add
jmp
xor
or
add
mov
jbe
clc
sti
lods
add
das
test
push
mov
nop
jmp
arpl
add
movsl
clc
popl
clc
leave
test
mov
out
pop
dec
pushf
sbb
and
push
pop
sbb
jecxz
sbb
subl
push
mov
xchg
ret
cmp
add
clc
int
test
or
sbb
adc
jne
nop
jmp
dec
xorb
inc
clc
fnstenv
jecxz
pop
mov
add
sbb
push
call
add
pushf
xchg
and
or
jo
add
xor
add
inc
add
pop
popa
add
jns
clc
dec
icebp
mov
add
mov
jg
notb
xchg
fimuls
add
arpl
add
clc
mov
stos
jae
add
insb
cmp
xlat
hlt
jmp
add
mov
mov
clc
fwait
cwtl
mov
js
adc
add
pop
lods
out
adc
add
add
add
fs
jmp
clc
shll
add
cmp
add
xchg
mov
add
out
shr
popa
add
sub
loopne
lret
add
mov
push
in
lahf
dec
push
add
loop
lods
mov
lods
xor
stos
pop
daa
clc
xor
add
mov
lcall
jb
add
aaa
pop
fisttpl
mov
lahf
jmp
clc
or
sub
inc
inc
inc
add
add
jns
clc
arpl
add
aas
add
add
jae
add
cmpsb
clc
mov
or
add
mov
int3
mov
incl
jge
loop
cmp
pop
xchg
push
add
add
add
clc
pop
in
sub
notl
out
loop
int
std
imul
mov
inc
add
insb
mov
je
nop
jmp
add
add
add
or
add
nop
jmp
loopne
jge
inc
in
sbb
add
fwait
repnz
dec
cmp
arpl
add
js
hlt
js
leave
or
add
or
mov
add
push
cmpsb
clc
mov
clc
pop
xchg
fistpl
jmp
stos
pop
shll
setae
fdivl
shll
iret
dec
in
int
clc
adc
add
or
out
mov
pop
clc
enter
add
scas
jbe
cld
ret
and
add
add
aad
clc
xchg
daa
clc
inc
clc
inc
add
and
add
mov
jne
clc
cmp
daa
clc
mov
fnstcw
inc
add
dec
adc
add
sbb
clc
aad
mov
in
cmp
or
add
fmulp
sar
out
ret
inc
add
cmp
add
and
scas
sbb
loope
adc
add
sub
mov
push
add
push
push
add
cmpsl
clc
push
out
loope
sbb
stos
pop
cmp
mov
clc
mov
inc
aam
incl
sub
movl
mov
add
f2xm1
pop
imul
std
popl
xchg
ret
add
or
xchg
aaa
in
push
pop
jae
add
jg
inc
add
push
enter
mov
test
call
add
bound
sbb
jbe
fisubl
dec
je
mov
jl
add
xchg
mov
pusha
nop
jmp
sub
mov
in
add
add
sti
jns
mov
loope
shll
or
adc
cmp
mov
jmp
inc
and
pop
clc
in
stc
mov
clc
push
cmp
mov
mov
clc
sub
clc
push
inc
add
addr16
pop
adc
add
int
pop
jae
jmp
loopne
out
xchg
xor
add
add
out
in
sar
jb
add
xbegin
icebp
nop
jmp
and
add
fdivrl
xchg
das
and
sbb
add
test
out
lea
xchg
add
add
adc
add
aam
sub
sarb
inc
add
aam
test
push
add
testl
and
push
add
divb
cmp
clc
nop
add
pop
jno
add
add
add
add
mov
add
pop
insl
je
fsubl
mov
add
stc
aad
clc
xchg
movsl
clc
push
leave
mov
scas
icebp
data16
mov
mov
xchg
ret
inc
sub
mov
mulb
je
test
scas
sar
aaa
ds
aam
ret
clc
jge
add
popa
add
int3
and
stc
cs
es
stos
gs
pop
icebp
add
adc
add
clc
push
and
add
clc
fiaddl
clc
adc
add
add
outsl
popf
xor
pop
hlt
mov
add
cmp
fbstp
add
daa
clc
inc
clc
arpl
add
into
lods
xabort
add
xchg
call
addr16
stos
dec
mov
clc
loop,pn
push
push
cmp
lods
lods
fnstenv
cwtl
test
push
inc
clc
lock
lods
mov
clc
ret
clc
inc
add
lea
repnz
loopne
mov
add
daa
clc
and
xchg
nop
bound
add
clc
imul
clc
and
add
dec
sbb
sar
data16
and
add
filds
jmp
inc
add
insl
mov
lret
inc
add
mov
push
clc
adc
pop
cmp
add
add
xchg
push
add
sub
clc
sub
jns
pop
test
fcompp
lea
roll
add
add
ret
clc
jg
pop
push
add
mov
into
sub
pop
dec
inc
add
or
clc
pushf
ss
popf
adc
add
add
add
clc
repz
nop
xchg
stos
jmp
sbb
gs
push
arpl
add
cmp
out
jne
jmp
add
add
dec
lret
mov
xchg
dec
addr16
int
jbe
mov
add
jns
and
add
add
dec
pop
dec
mov
add
shll
adc
shll
add
add
pop
mov
sar
mov
nop
jmp
add
and
mov
add
pop
xbegin
jns
add
loope
hlt
cld
data16
mov
add
cmpsb
clc
mov
clc
cs
test
add
add
rcrb
xor
jl
add
loopne
cmp
mov
xchg
inc
add
js
clc
xabort
scas
insb
popf
clc
addr16
dec
aaa
outsb
xchg
lea
add
add
clc
fistpl
mov
mov
xchg
ret
jns
xor
add
jne
pop
inc
clc
out
rolb
daa
clc
or
add
and
add
add
sub
add
loop
jne
clc
mov
add
add
movsl
clc
scas
aaa
fbstp
xabort
cmp
add
sbb
rclb
or
mov
inc
add
push
add
lock
insb
add
nop
jmp
arpl
or
and
mov
add
adc
add
clc
fsubs
push
into
mov
das
add
jge
adc
ja
mov
add
add
fs
es
es
jecxz
pop
lea
jecxz
inc
add
out
inc
add
pop
test
add
adc
add
inc
add
add
add
add
jo
add
es
add
add
clc
sbb
or
or
xchg
sub
sar
clc
mov
addr16
test
adc
cmp
and
add
hlt
movsl
clc
cs
pop
clc
ret
xor
add
add
cmp
add
cli
mov
icebp
divl
add
decb
inc
add
push
sbb
pop
cli
jne
xchg
loope
int
jp
jmp
cmp
cmp
mov
bound
add
sar
sbb
clc
into
hlt
adc
add
clc
ja
test
addr16
pop
aad
outsl
pop
or
aam
add
lcall
xchg
fwait
nop
fwait
ds
es
sbb
jmp
out
popf
add
mov
add
add
dec
in
mov
mov
inc
clc
ret
sub
clc
cwtl
push
aad
jmp
add
pop
jl
add
xchg
repz
idivl
jg
lods
incb
lret
sub
clc
cltd
out
fsubp
clc
xchg
popf
mov
popa
add
adc
add
add
clc
dec
sub
add
pop
pop
daa
clc
mov
mov
nop
jmp
fucom
adc
xor
or
add
pushf
clc
in
mov
add
and
add
xchg
clc
dec
pushf
sub
insb
sub
add
out
shrb
clc
imul
dec
outsl
dec
mov
add
add
insb
in
jmp
jne
nop
jmp
and
xchg
clc
adc
add
pop
cmc
scas
inc
clc
ret
int
clc
hlt
clc
fisubl
stos
add
clc
xlat
mov
insl
aas
xbegin
scas
dec
and
add
faddl
add
xor
add
add
add
add
jmp
add
out
add
outsl
xor
add
or
cmp
add
mov
icebp
push
adcb
jl
add
or
mov
sub
push
test
imul
clc
cld
sbb
add
mov
add
push
add
xchg
xchg
cmp
jmp
jmp
push
loopne
cld
sub
loopne
jns
mov
jmp
arpl
jecxz
inc
leave
adc
add
clc
inc
add
jb
add
lods
loopne
fdivrs
pop
nop
jmp
arpl
add
sbbb
xbegin
aam
add
push
mov
xbegin
daa
clc
mov
jns
push
add
mov
out
sar
in
xor
add
clc
or
add
xlat
stc
xchg
cmp
clc
inc
clc
push
movsl
clc
mov
movsb
clc
jge
cmp
out
js
clc
lea
sar
lock
add
sar
add
or
andnps
xchg
ret
addb
lods
inc
add
adc
in
jns
add
dec
fwait
popf
pop
inc
add
jb
add
and
clc
pop
clc
sub
cmp
pop
jmp
clc
loopne
mov
add
add
add
movl
clc
or
add
add
mov
clc
jmp
clc
cltd
sar
jge
mov
scas
stc
mov
leave
mov
jo
add
lock
xchg
xchg
pop
sar
and
add
pop
cmp
add
cmp
push
imull
lods
lret
loope
and
add
pop
ficompl
adcb
jg
add
jns
arpl
jno
add
add
jp
push
add
lcall
jne
bound
add
pop
mov
add
mov
dec
push
mov
clc
dec
sahf
fistpll
clc
sar
push
push
jbe
nop
jmp
inc
add
mov
nop
jmp
mov
jle
mov
nop
jmp
rcr
loopne
clc
fisubrl
xchg
in
scas
fucom
clc
mov
add
add
add
push
add
fcmovnbe
pop
xchg
mov
add
xabort
cwtl
push
add
nop
jmp
add
inc
pop
add
add
pop
and
add
clc
fwait
sti
mov
imul
xor
add
icebp
inc
add
ffreep
clc
stos
hlt
mov
cmp
add
negb
mov
add
add
clc
lret
sub
fdivl
add
jecxz
xchg
pop
stos
dec
icebp
iret
xor
add
call
add
jl
pop
testb
xbegin
mov
nop
jmp
jae
xchg
push
xchg
xchg
and
add
clc
mov
and
add
dec
mov
movsl
clc
sarl
cmp
cltd
leave
and
xchg
and
add
cmp
jo
add
test
loop
aad
clc
and
add
add
clc
clc
mov
data16
daa
clc
xchg
rcrl
clc
dec
mov
add
mov
cmp
clc
push
xchg
out
movsl
clc
add
add
aad
nop
xabort
and
add
add
add
xor
movzwl
nop
jmp
jae
add
add
fisubs
add
clc
adc
add
mov
add
scas
sub
movsl
clc
add
add
clc
adc
push
and
add
lock
cmpsl
clc
js
mov
push
mov
xchg
ret
loop
adc
xchg
jmp
clc
dec
lahf
cmp
add
nop
jecxz
test
mov
pop
sahf
or
pop
and
add
add
xor
inc
add
arpl
push
add
xor
add
push
data16
push
pop
pusha
add
cmpsl
clc
fdivs
add
insb
xor
add
clc
mov
clc
cmp
clc
mov
sbb
add
data16
dec
push
add
outsb
dec
cmp
mov
dec
sbb
jge
add
xbegin
add
imul
clc
ret
clc
mov
outsb
xchg
cmp
adc
decl
add
clc
imul
fdivp
imul
add
mov
clc
and
or
clc
mov
mov
push
add
insl
mov
add
mov
clc
iret
sar
jle
test
ja
xor
add
stos
fcomip
repz
jg
nop
jmp
cli
loop
pushf
stos
in
sar
clc
mov
clc
js
inc
clc
into
fildl
clc
ds
in
cmp
add
aas
push
add
cmp
out
push
add
push
in
add
push
nop
jmp
arpl
rolb
push
imul
pop
sub
clc
stos
call
enter
jbe
inc
add
xchg
vshufps
mov
clc
pop
push
add
xlat
or
add
add
out
xchg
or
clc
clc
cmp
xchg
xchg
inc
add
inc
add
ror
test
add
add
jmp
ljmp
add
jbe
clc
inc
add
push
mov
mov
clc
mov
and
add
loop
cmp
clc
jae
add
add
jecxz
fstpt
jl
sbb
add
push
faddl
inc
add
xor
rcrb
test
dec
aad
jbe
add
mov
add
stos
mov
in
jmp
pop
adc
pop
pop
mov
in
push
add
add
adc
movsb
clc
cs
jmp
nop
jne
add
cs
add
stos
jecxz
push
mov
clc
mov
clc
sar
clc
repnz
clc
clc
int3
xchg
adc
cltd
cmp
clc
into
jne
cmp
clc
cmp
cmp
nop
jmp
add
xchg
pop
lret
add
pop
loop
jno
add
jmp
clc
fadd
clc
jecxz
dec
repz
mov
mov
dec
push
mov
xchg
ret
and
xor
or
addr16
and
sub
add
inc
clc
popa
add
jno
add
add
cld
xchg
sbb
add
push
add
fildl
aad
cmp
add
push
mov
es
add
add
add
jns
movsb
clc
adc
add
clc
pop
and
and
add
call
nop
jmp
add
mov
fwait
add
add
adc
push
add
sahf
mov
push
xor
add
add
cli
sub
in
fwait
dec
adc
gs
xchg
xchg
enter
sbb
inc
clc
pusha
add
add
add
add
loopne
imul
push
push
sub
add
xchg
popa
add
add
add
push
jmp
fldl
movsl
cld
adc
iret
push
mov
add
add
test
xbegin
add
add
jbe
push
ja
and
mov
add
test
sbb
arpl
add
clc
scas
dec
fs
mov
add
das
jl
add
test
add
stos
push
clc
mov
fcomps
call
nop
jmp
sub
add
ds
push
xor
add
add
mov
jmp
bswap
mov
add
cmpsl
clc
or
add
add
add
pop
ror
adc
add
data16
and
add
add
add
mov
call
aam
fimull
xlat
movsl
clc
das
pop
fs
mov
add
lret
add
add
mov
xchg
inc
clc
into
sti
mov
push
sbb
pop
cmp
add
jecxz
sub
pop
add
dec
std
jbe
imul
in
insb
clc
or
mov
pop
ret
clc
add
add
incb
add
fwait
push
jb
add
clc
dec
cs
cmp
fistpl
sub
sub
inc
clc
insb
push
jb
add
jmp
add
adc
add
clc
in
dec
xchg
mov
std
or
add
cwtl
std
mov
sar
sbb
mov
add
pop
insb
adc
mov
data16
enter
clc
adc
add
ja
clc
dec
mov
clc
sbb
mov
add
add
sar
insl
jle
add
pop
fwait
cmpsb
clc
adc
add
inc
add
dec
push
outsb
mov
adc
add
jmp
arpl
or
int3
and
add
add
jbe
cmp
mov
mov
inc
add
sub
int
or
test
inc
clc
lret
lcall
add
inc
clc
push
add
repz
gs
xlat
nop
jmp
add
and
sar
test
mov
add
jg
clc
and
mov
call
add
add
push
clc
pop
nop
ja
pop
ficomps
add
sti
es
sub
mov
rcr
xchg
mov
add
sbb
add
add
aas
dec
push
test
clc
ja
clc
cmp
das
push
add
test
xor
ds
imul
ljmp
jmp
loopne
jns
add
xchg
dec
adc
add
clc
cltd
jp
and
add
add
clc
testl
in
sti
inc
clc
cmpsl
clc
jmp
push
mov
xchg
ret
add
fcompl
xor
sar
xchg
sbb
imul
sbb
add
jmp
in
data16
sub
inc
adc
add
or
xlat
and
inc
add
div
jmp
sar
pusha
add
pop
push
mov
sar
pop
ret
clc
bound
add
add
sub
lcall
add
jp
pop
mov
popa
add
das
nop
cli
int3
push
add
push
fucomip
xchg
mov
mov
sbb
inc
or
jns
popf
xor
add
aaa
jnp
aam
cmp
add
aad
and
add
clc
repz
shr
stc
push
push
push
mov
xchg
ret
data16
push
mov
jbe
fwait
aaa
cmp
push
add
nop
jmp
dec
mov
add
mov
inc
clc
jo
add
fbld
push
mov
xchg
ret
add
jl
add
mov
add
lods
push
add
imul
add
aaa
mov
add
decl
test
inc
add
nop
jmp
xor
jb
add
add
nop
jmp
xor
jl
add
nop
push
call
push
mov
xchg
ret
packsswb
loopne
roll
lods
dec
dec
lahf
mov
jae
add
leave
fisttpll
add
mov
xchg
ret
add
xchg
and
add
add
add
add
aad
add
cmp
cmpsb
clc
xchg
adc
add
add
loop
dec
add
add
cmp
clc
pusha
add
jle
clc
cmp
adc
cwtl
je
cmp
dec
out
insl
inc
clc
dec
out
fnstsw
add
adc
add
xor
add
sbb
dec
inc
add
and
add
insb
mov
pop
lock
test
add
add
clc
push
add
cmp
or
clc
dec
or
clc
mov
add
inc
add
test
xchg
in
repnz
add
jecxz
jo
add
cmp
decl
cld
add
pop
ja
add
sahf
xchg
cltd
mov
add
into
cmp
clc
daa
clc
and
add
push
add
lret
fcmovne
push
sahf
dec
jecxz
std
inc
add
mov
inc
clc
dec
adc
add
aad
cmp
flds
add
clc
xlat
out
mov
jo
add
imul
clc
cmp
xor
add
pusha
add
addr16
bound
add
clc
jmp
add
fcmovnb
clc
xlat
adc
inc
add
rcl
shlb
push
add
imul
repz
xlat
or
cmp
clc
fcoml
call
clc
mov
cmp
adc
add
jecxz
in
xchg
mov
addr16
fisubrs
cmp
xchg
pop
cwtl
pop
lahf
xor
repz
leave
loope
cmp
dec
stos
sub
xchg
pop
clc
xchg
jnp
sbb
dec
sahf
call
push
dec
add
add
fldcw
inc
add
pop
or
add
in
sbb
clc
mov
jns
pushf
cld
add
adc
add
cmp
push
push
cmp
add
std
jmp
mov
mov
cmpsb
clc
jl
clc
xor
mov
jne
fcompl
por
in
mov
jbe
add
aas
push
rcll
inc
add
push
add
repnz
cmp
push
rorl
inc
clc
cmp
add
mov
dec
adc
add
decl
test
jmp
mov
jno
add
rorb
mov
sub
xchg
ret
jge
add
int3
clc
sbb
cmp
sbb
test
sub
ret
jecxz
inc
jg
inc
clc
pusha
add
enter
in
add
cmp
clc
jno
add
xchg
mov
mov
xabort
imul
test
clc
lret
jg
clc
movsl
clc
arpl
add
data16
rcll
clc
mov
add
js
clc
into
and
add
call
mov
jns
dec
mov
adc
xchg
loopne
cld
out
push
lret
fwait
adc
add
fadds
add
cmpsb
clc
divb
mov
nop
jmp
dec
or
gs
fcompl
add
lock
add
pop
xor
add
stos
das
xchg
nop
adc
add
mov
insb
xor
add
add
dec
daa
clc
push
add
push
add
addr16
add
pop
imul
rep
clc
ret
push
add
ja
add
arpl
sub
or
outsl
or
mov
mov
negb
into
or
clc
and
add
pop
in
fwait
push
add
test
aad
out
ss
push
movzwl
nop
jmp
stos
mov
test
jl
add
push
xchg
push
inc
add
pushf
pop
jae
jge
fnsave
add
xchg
push
inc
clc
pop
mov
clc
cltd
es
cmp
add
aad
clc
cmp
sbb
jb
add
clc
leave
stc
mov
daa
clc
int3
xchg
sbb
xor
add
clc
adc
add
dec
data16
mov
stos
js
inc
add
or
xor
add
xor
add
in
dec
imul
add
add
sub
xchg
rcl
jle
stc
insl
xor
adc
add
add
out
lock
inc
clc
push
test
cmp
add
clc
mov
xchg
mov
clc
out
or
xchg
movsb
clc
ss
dec
aam
add
das
cmp
or
add
add
add
sbb
add
ret
inc
add
or
mov
sar
push
adc
add
add
lods
sub
cs
and
movsb
clc
lcall
jmp
xor
add
jp
popf
push
xchg
aam
add
add
add
clc
jnp
fs
xbegin
inc
clc
push
push
mov
inc
clc
dec
dec
inc
add
in
pop
xbegin
and
jmp
add
add
push
add
pop
in
sbb
clc
bound
add
clc
std
add
add
jns
clc
push
lea
clc
cmp
add
insl
jmp
sub
repz
lahf
ret
clc
fildll
add
nop
jmp
add
xlat
clc
mov
mov
clc
sahf
pop
or
pop
clc
pop
in
mov
dec
sub
cli
add
add
clc
ss
clc
cmp
push
add
mov
pop
push
xchg
fnstcw
mov
add
jge
mov
nop
jmp
adc
and
or
popa
add
sar
xabort
clc
push
clc
mov
mov
add
arpl
add
dec
fsubrl
test
cmp
jmp
fbstp
adc
add
pop
mov
lods
inc
add
fwait
sub
outsl
data16
add
rcl
aaa
jp
test
mov
cmp
xchg
movsl
clc
cmp
fdivp
sti
out
mov
add
dec
or
clc
cmp
inc
add
jnp
and
sar
add
mov
icebp
out
push
add
nop
jmp
add
dec
inc
add
mov
jb
add
add
clc
bound
add
clc
shl
test
clc
mov
xor
add
add
add
out
sub
cli
mov
and
and
loopne
sub
clc
jb
add
push
shr
nop
jmp
add
or
add
call
add
int3
mov
jge
push
add
js
add
dec
sar
xor
add
jb
add
pop
dec
rolb
dec
shlb
add
aad
dec
adc
add
add
dec
and
add
cs
mov
add
clc
cmp
frstor
add
jmp
sub
adc
clc
sub
sbb
fdivp
pop
jg
xchg
call
add
clc
sbb
add
movsl
clc
cmp
pusha
add
pop
pop
or
mov
adc
add
clc
aaa
mov
mov
ljmp
add
push
or
mov
test
insb
xchg
xchg
inc
clc
scas
inc
clc
push
add
add
add
mov
test
clc
adc
adc
test
xor
jp
insl
jbe
clc
xchg
pop
cli
popa
add
sahf
or
add
mov
dec
cmp
clc
push
lods
dec
das
popa
add
jbe
add
xor
add
sub
add
sub
add
add
add
clc
daa
clc
pop
clc
cmc
fdivr
jecxz
in
mov
fidivrl
jge
cld
sbb
mov
adc
jmp
add
xchg
int
test
add
add
jnp
push
nop
jmp
xchg
add
add
mov
loope
arpl
add
call
add
out
fdivr
cmp
jne
clc
ficoms
add
loop
xchg
lods
add
add
jns
mov
clc
test
jno
add
push
add
add
add
ds
icebp
jne
mov
cwtl
pop
dec
dec
and
add
fists
movq
add
jmp
inc
mov
dec
or
xbegin
scas
enter
icebp
mov
xabort
mov
clc
jb
add
inc
add
mov
mov
stos
lret
in
shlb
imul
clc
std
jecxz
push
cmp
aaa
cmp
dec
or
mov
repnz
sbb
dec
sub
clc
sub
add
mov
clc
push
testl
add
pop
jecxz
sub
clc
das
leave
lock
ret
clc
insb
xchg
adc
shll
sahf
xchg
or
nop
clc
jno
add
mov
ret
clc
das
xchg
adc
add
popf
dec
mov
lods
xchg
icebp
aam
mov
leave
push
push
add
insb
pop
clc
xor
sub
pusha
add
inc
add
add
add
add
inc
add
add
add
add
jae
add
pop
clc
iret
decl
push
add
sub
jp
jp
sar
clc
xchg
dec
pop
dec
xor
add
ss
xabort
clc
pop
cmp
jae
add
call
clc
loope
out
shlb
add
add
cld
mov
clc
inc
clc
push
xbegin
gs
daa
clc
pop
pop
adc
add
xor
add
dec
es
ds
int
mov
push
clc
fimull
adc
add
mov
nop
jmp
mov
pushf
mov
clc
xchg
mov
cmp
add
into
mov
aam
fcomi
inc
add
ja
clc
pop
jb
add
add
out
data16
pop
jbe
sbb
loop
mov
loope
scas
mov
fneni(8087
clc
cmp
add
outsb
sbb
sbb
add
clc
repnz
fsubl
add
fwait
mov
bound
add
rep
nop
jmp
jge
jae
inc
stos
loop
mov
nop
jmp
mov
xchg
enter
jge
add
jmp
cli
mov
call
nop
jmp
and
sub
add
sbb
jp
pop
inc
add
mov
add
jbe
jecxz
mov
add
movsl
clc
or
xor
add
add
inc
add
jne
icebp
loopne
mov
sbb
add
jns
popf
pop
jl
jns
mov
add
clc
and
aas
xchg
push
imul
add
add
ljmp
cmp
int3
inc
clc
add
add
cmp
lret
dec
and
add
clc
cmp
clc
lcall
mov
xchg
ret
in
inc
pop
repnz
mov
hlt
pop
jb
add
add
dec
cmc
aam
clc
mov
clc
add
add
sar
add
clc
mov
add
hlt
cmp
adc
add
add
sub
pop
xchg
ljmp
fwait
xor
add
mov
xchg
ret
add
add
sub
clc
xchg
pop
pusha
add
jo
add
clc
cs
xor
add
inc
clc
sar
add
in
xchg
pop
sub
in
imul
sub
dec
cmp
jmp
repnz
fdivr
mov
mov
clc
cli
mov
clc
xchg
out
cmp
dec
pop
pop
cmp
jecxz
setne
hlt
bound
add
inc
adc
jmp
stos
add
or
jbe
addr16
das
scas
in
nop
cmp
clc
out
mov
adc
add
incl
notl
incl
add
and
add
jne
xchg
mov
push
and
inc
add
shlb
clc
lret
add
dec
clc
ja
add
pusha
add
jb
add
add
adc
add
clc
cmp
clc
fistpll
nop
leave
jae
add
add
rep
cmp
gs
xabort
push
inc
clc
fs
sub
add
sub
mov
clc
jbe
xor
add
mov
clc
mul
clc
sbb
add
cmp
pusha
add
aaa
js
in
cmp
fs
fsqrt
adc
add
and
hlt
aad
dec
pop
cmp
and
add
rorb
arpl
add
cmp
ret
clc
pushf
scas
dec
sbb
cmp
in
cs
out
repnz
add
push
lcall
add
dec
gs
enter
and
add
clc
cmp
xchg
ja
out
icebp
loope
lret
jge
dec
in
lret
clc
popf
nop
in
aas
loopne
mov
cmp
clc
je
mov
push
lcall
mov
add
clc
jge
dec
or
add
mov
add
popf
pop
fmuls
xor
clc
jge
in
lea
ret
pop
xchg
stc
sbb
jmp
loopne
stos
xor
dec
arpl
add
insl
sti
cmp
mov
clc
dec
stos
ffree
clc
pop
lods
out
mov
add
mov
inc
clc
shrb
xor
add
shl
xchg
cwtl
push
mov
clc
cs
jp
add
pop
pop
push
rorb
fwait
das
repnz
test
rcr
dec
cmp
test
clc
fcoml
mov
pusha
add
inc
add
jae
add
sar
xabort
cmp
clc
jae
add
clc
ds
fbstp
clc
xchg
jp
iret
adc
add
add
add
testl
std
roll
shl
outsl
inc
clc
movsl
clc
aaa
adc
add
adc
add
add
mov
clc
sar
addr16
clc
repnz
clc
sbb
clc
sar
cmp
scas
xlat
shlb
jae
add
or
mov
add
cmp
clc
or
mov
cmp
clc
jae
add
pop
data16
aas
fimuls
add
and
add
rep
nop
jmp
repnz
add
add
das
test
cmp
clc
je
inc
clc
popa
add
adc
add
std
aas
xbegin
pop
mov
sbb
fwait
je
imul
clc
jne
out
cmp
cmpxchg
add
cmpsl
clc
mov
gs
in
sub
mov
lock
cmp
loope
sub
jb
add
clc
sbb
clc
test
jmp
clc
scas
mov
xor
add
add
or
mov
add
inc
add
and
xbegin
add
push
testl
outsb
or
mov
clc
push
add
data16
and
add
leave
xlat
insl
inc
clc
int3
clc
inc
add
cmp
sub
int
bound
add
sar
stos
fnstsw
cmp
xchg
ret
sbbb
mov
add
or
stos
lods
movsb
clc
jne
clc
pop
out
pushf
push
or
xchg
mov
clc
repnz
lea
or
add
sahf
es
push
clc
cmp
cli
xor
add
push
add
imul
test
add
push
clc
jnp
flds
inc
add
cmp
xchg
pop
clc
into
sbb
clc
out
sbb
jb
add
ret
clc
sar
add
nop
in
push
clc
pop
lahf
adc
add
xchg
fldl
add
sti
sbb
push
cmp
aam
add
push
sbb
cltd
push
add
xchg
pop
lahf
mov
mov
sar
and
add
add
sub
ljmp
out
nop
shll
add
mov
sar
aas
xchg
push
mov
in
idivb
loopne
mov
mov
sbb
jbe
or
inc
clc
mov
mov
stc
or
add
jo
add
clc
pop
cmp
or
cwtl
xchg
sbb
clc
adc
add
clc
fwait
add
add
nop
jmp
add
add
sub
dec
fcompl
icebp
sub
clc
bound
add
clc
push
mov
nop
jmp
add
adc
clc
dec
add
add
xchg
es
fstps
out
call
jmp
adc
pop
add
and
add
add
das
xabort
clc
mov
add
cmp
clc
insb
outsl
lock
popa
add
sti
arpl
add
xlat
repz
add
cli
dec
movsl
clc
gs
ljmp
mov
imul
add
fbstp
add
jae
add
add
adc
add
mov
ja
aaa
push
gs
jb
add
add
ja
pop
jnp
push
add
and
xlat
or
pop
nop
jmp
stos
add
pop
pop
mov
adc
pop
and
add
clc
popa
add
mov
jne
pop
pop
mov
add
dec
mov
add
inc
add
mov
gs
ljmp
decl
lcall
dec
push
jp
jae
add
add
xor
add
xchg
jmp
insb
mov
test
sbb
clc
sar
add
add
sub
clc
sahf
or
add
pavgw
ja
je
nop
jmp
adc
jns
stc
aaa
aaa
sbb
push
clc
jecxz
mov
or
fcoms
fbstp
add
push
jp
jle
xabort
and
add
add
add
arpl
add
mov
clc
out
add
add
jno
add
inc
clc
movsb
clc
nop
pop
clc
sbb
jb
add
mov
je
add
xchg
xchg
mov
sbb
add
inc
clc
int
clc
push
bound
add
add
and
add
inc
clc
sbb
iret
jb
add
cmpsl
clc
jl
cmp
adc
add
cmp
inc
add
fld
clc
mov
add
lret
add
movsl
clc
dec
int3
add
add
add
pushf
leave
and
add
add
fistpl
pop
in
test
add
add
clc
imulb
mov
clc
test
add
in
xor
add
clc
mov
sar
pop
jmp
jmp
fsubrl
js
mov
into
bound
add
clc
sub
add
pop
adc
add
add
mov
clc
sar
xor
add
push
add
cmp
cmp
add
std
insl
mov
and
add
mull
add
cmp
rol
clc
mov
clc
ss
and
add
inc
clc
mov
adc
gs
dec
xor
add
fbld
push
xchg
nop
jmp
add
sub
enter
push
add
push
push
jmp
out
add
add
jb
add
clc
ljmp
dec
sub
clc
mov
add
out
aaa
dec
mov
inc
add
xchg
rcr
xor
add
xbegin
clc
add
add
test
scas
call
decl
mov
nop
jmp
jecxz
adc
mov
cmp
clc
movsl
clc
hlt
lods
dec
jne
dec
fdivrs
ret
clc
ss
push
add
add
or
clc
fisttpll
mov
ss
pop
xchg
and
add
clc
push
add
push
mov
xchg
ret
add
icebp
mov
loope
add
outsb
add
outsb
adc
icebp
cld
xabort
xchg
dec
pop
push
clc
mov
cmpsb
clc
push
add
imul
cld
xor
mov
clc
rorb
jle
mov
addr16
jns
clc
jmp
clc
aad
add
jae
add
dec
jp
mov
nop
jmp
adc
or
inc
ja
add
mov
insl
mov
xchg
or
push
xchg
mov
fnstsw
fwait
dec
cmp
clc
loop
sub
imul
sub
adc
add
ret
clc
pop
xor
add
add
push
inc
clc
and
add
xchg
mov
add
mov
stos
dec
aaa
aam
sub
push
clc
mov
add
adc
add
add
stos
add
frstor
clc
push
lret
cmp
vaddps
xor
or
testb
pop
iret
pop
clc
xor
add
iret
aad
cld
lock
add
add
ljmp
je
clc
jae
add
xor
add
mull
add
mov
mov
jmp
or
nop
loop
ja
clc
stc
push
add
and
add
clc
push
add
or
cltd
or
pushf
cld
mov
pop
insl
sub
clc
mov
clc
fisttps
out
test
xchg
call
add
jne
mov
mov
add
hlt
std
stc
sub
clc
cmp
or
xor
add
inc
clc
pop
repnz
mov
call
add
orb
mov
popf
sub
mov
pusha
add
aam
clc
in
xor
popa
add
jl
clc
mov
loope
add
add
xchg
xor
add
clc
inc
clc
dec
pop
or
cmp
data16
lods
mov
das
push
add
adc
add
add
clc
imul
cld
fsts
add
js
pop
sbb
sub
mov
nop
jmp
add
dec
popf
leave
or
test
pop
cmp
adc
pop
xchg
and
add
vmovups
add
push
add
nop
jmp
popf
repnz
add
jmp
sub
cld
mov
add
popf
ja
imul
nop
jmp
ja
add
popf
mov
test
call
jge
push
outsb
push
add
cmp
jno
add
clc
cltd
sar
add
cmp
gs
add
add
add
push
cwtl
xor
add
in
test
insb
cld
fistpl
sbb
sti
sahf
shlb
add
notl
add
mov
nop
jmp
jecxz
push
adc
pop
lcall
jmp
fldz
test
outsb
cmp
add
xabort
clc
aam
pop
jbe
fwait
sub
loopne
inc
add
mov
clc
shll
add
gs
repz
sbb
adc
xchg
int
fs
cmp
in
adc
clc
call
aam
add
scas
clc
cltd
adc
add
add
add
cmp
loope
xchg
decb
dec
pop
test
xchg
jnp
jns
dec
and
add
data16
push
jb
add
clc
pushf
imul
ret
clc
add
add
pop
out
cld
adc
add
add
outsb
xor
add
aad
sub
nop
jmp
mov
add
jge
outsb
in
push
add
lcall
add
push
imul
add
cwtl
fnstenv
data16
add
add
xchg
lahf
js
xchg
dec
pop
push
add
nop
jmp
in
pushf
jae
sub
test
add
add
add
cmpsb
clc
fists
add
pop
clc
mov
add
fcomip
aad
addr16
adc
add
dec
scas
dec
jb
add
out
adc
es
sar
bound
add
das
mov
test
push
incl
aam
call
arpl
outsb
inc
push
cmp
add
mov
and
orb
cmc
cwtl
xchg
movsl
clc
sub
cmpsb
clc
nop
dec
imul
clc
int
outsb
cmp
inc
clc
fisubl
jno
add
mov
clc
out
inc
add
je
clc
fs
pushf
push
call
nop
jmp
pushf
arpl
ret
nop
jmp
sub
mov
add
xor
loopne
test
cmp
cs
clc
push
pop
clc
dec
outsl
xabort
fldz
jp
clc
aaa
xchg
sar
add
adc
jge
add
jmp
add
in
lahf
push
push
in
inc
clc
push
add
cmp
clc
cmp
add
insl
hlt
aaa
cmp
add
sbb
pause
jmp
pop
add
mov
addr16
movsb
clc
inc
clc
test
push
popf
movsb
clc
movsl
clc
dec
xchg
rep
mov
std
cmpsb
clc
push
stos
cli
sbb
add
jl
push
mov
add
inc
add
jmp
add
cmpsb
clc
mov
xor
add
sub
jmp
add
and
sub
clc
mov
add
fldl
adc
add
addr16
aas
lods
cli
mov
cld
mov
sub
hlt
mov
cmp
add
cwtl
inc
add
bound
add
mov
nop
jmp
adc
add
clc
stos
and
add
clc
jno
add
clc
rcrb
push
add
mov
cltd
jg
dec
test
add
add
aad
mov
clc
fwait
add
add
cltd
or
test
cmc
imul
popa
add
aaa
xchg
inc
add
or
add
pop
push
add
and
add
clc
mov
clc
sar
inc
clc
cmp
dec
scas
addr16
pop
cld
lock
sbb
int
add
sub
add
push
mov
xchg
ret
adc
arpl
add
clc
sti
cmp
add
pop
and
add
and
add
pop
clc
sbb
stos
push
add
sub
pop
clc
cmp
icebp
add
cld
mov
push
xabort
or
add
add
and
incl
add
xor
popf
xchg
outsl
in
xbegin
arpl
add
add
lret
mov
lods
jp
clc
into
cmpsb
clc
das
pop
mov
push
add
push
pop
mov
add
lret
lea
add
dec
mov
clc
and
add
clc
push
add
push
add
cmp
pop
dec
imul
push
cmp
jmp
fbld
add
mov
cmp
cwtl
mov
clc
push
add
fstpt
mov
sub
add
jmp
nop
jmp
add
adc
clc
fwait
ljmp
add
in
movsl
clc
and
into
pop
dec
pop
mov
or
or
inc
add
lea
sti
jbe
or
lods
clc
aaa
pusha
add
add
xbegin
clc
pop
dec
push
stos
jecxz
inc
add
cli
fdivrl
dec
sbb
sarb
clc
mov
clc
cmp
add
push
add
lcall
out
pop
mov
add
add
add
clc
int
add
out
mov
nop
jmp
adc
pop
sub
inc
add
clc
cmpsl
clc
sahf
mov
mov
jmp
rorb
and
add
clc
cmp
clc
stc
call
jmp
add
mov
rolb
mov
clc
jle
das
adc
pop
rcll
add
xabort
xchg
repnz
clc
clc
in
int
arpl
add
add
imul
pop
fidivl
add
aaa
mov
add
hlt
cmp
xchg
fsubl
loope
inc
clc
stc
mov
fsubs
pop
cmp
cmp
clc
xchg
xor
add
clc
inc
clc
and
add
jnp
xbegin
sub
call
add
clc
inc
clc
fdivs
clc
or
adc
add
cmp
fsubl
shl
nop
jmp
pop
jns
in
stos
add
mov
nop
jmp
stos
adc
jl
adc
lods
push
mov
xchg
ret
cld
bound
add
inc
add
fmuls
cltd
cmc
jnp
or
cmp
mov
out
ret
clc
jmp
xchg
in
pop
add
add
adc
add
xor
add
jecxz
or
adc
clc
aad
clc
aaa
jae
add
out
ret
add
add
cmpsl
clc
xchg
mov
call
incl
paddusw
pushf
push
lea
nop
jmp
jge
loopne
ja
add
add
or
add
clc
xchg
arpl
add
push
clc
push
add
nop
jmp
js
pop
jge
xchg
cmp
dec
push
add
pop
xchg
mov
add
lods
iret
push
clc
inc
clc
and
add
add
mov
stos
imul
inc
add
sar
pop
pop
jno
add
cmp
clc
jl
add
dec
lods
test
clc
out
and
add
clc
mov
dec
push
daa
clc
mov
clc
push
jmp
loopne
inc
add
out
outsb
ret
clc
xor
add
jbe
clc
adc
add
adc
fcmovnb
clc
stos
mov
dec
out
xbegin
fdiv
test
mov
xchg
lock
xchg
mov
clc
cs
push
clc
pop
ss
push
mov
cli
test
fstl
nop
jmp
add
outsb
and
add
inc
add
imul
iret
mov
clc
adc
add
sub
ficomps
mov
jae
add
clc
cs
mov
xor
clc
dec
mov
add
add
clc
je
mov
jp
clc
xor
add
and
add
dec
movsl
clc
dec
call
mov
jb
add
mov
nop
jmp
loopne
shr
xlat
push
add
push
jecxz
out
popf
jecxz
lods
daa
clc
push
test
sbb
clc
jno
add
push
add
mov
test
pusha
add
popf
mov
lret
sbb
push
mov
xchg
ret
pop
loopne
xlat
xchg
pop
sub
add
push
add
xabort
clc
cmp
nop
jmp
xchg
jmp
xor
pushf
jecxz
stos
popf
push
mov
nop
jmp
mov
sub
outsb
jae
add
add
cmp
xor
add
fxam
clc
inc
add
xor
insl
push
mov
mov
ret
clc
xchg
mov
inc
add
and
lock
jb
add
add
test
cli
mov
out
and
sub
pop
or
clc
repz
pop
xlat
jge
xadd
pusha
add
ret
xor
add
test
test
xor
add
clc
loopne
std
sbb
add
add
push
add
dec
filds
add
test
sar
loop
stos
jne
xor
add
add
not
into
lahf
fdivrs
xor
xchg
popf
bound
add
add
sbb
fdivr
adc
add
adc
lahf
jne
popa
add
inc
add
pusha
add
sysenter
push
sub
nop
jmp
loopne
add
sub
clc
iret
sbb
sub
clc
js
adc
jo
add
xchg
dec
js
lods
lret
add
clc
fistps
mov
xchg
dec
out
imull
pop
insb
mov
sbb
shl
clc
cmp
sbb
mov
xchg
ret
adc
mov
add
insb
ja
ror
iret
jae
add
sbb
decl
cmp
add
movsl
loopne
add
push
add
fldenv
add
es
mov
mov
sub
or
clc
lock
add
fs
lock
bound
add
clc
mov
xor
add
in
clc
xabort
add
mov
fs
sbb
add
and
add
mov
nop
jmp
sub
fstp
das
jo
add
and
add
shll
and
sahf
sub
clc
mov
clc
insb
in
into
imul
add
fisubs
add
clc
fwait
stos
xlat
jb
add
xchg
clc
in
xlat
or
add
sub
mov
push
xchg
icebp
add
add
clc
inc
add
xchg
jbe
clc
cmp
sub
pop
lock
add
add
add
scas
cmp
loopne
and
add
clc
test
dec
inc
add
leave
add
add
clc
add
add
sub
add
add
cli
mov
lock
loop
inc
add
lret
add
add
aaa
or
add
inc
clc
push
or
cmp
add
pop
imul
xor
add
jl
add
fdivrl
pop
inc
add
add
out
push
clc
repnz
add
mov
popf
jmp
mov
clc
test
mov
stos
int
mov
dec
pop
int3
adc
add
mov
nop
jmp
or
stos
lret
mov
cld
pushf
dec
cmp
xor
add
push
cs
cmp
adc
add
clc
add
add
add
imul
jmp
clc
cs
xchg
push
mulb
push
mov
xchg
ret
add
sub
dec
push
add
lret
xor
add
xor
add
clc
push
add
and
add
lahf
inc
add
cli
sub
lods
clc
or
add
clc
jnp
mov
xbegin
sbb
gs
lret
or
adc
add
add
xlat
jno
add
mov
add
add
pop
xor
add
push
clc
cmp
clc
test
xabort
jg
add
xchg
gs
movsl
clc
fnsave
add
adc
push
sbb
add
cmp
sbb
clc
loope
xor
add
add
cs
or
push
jno
add
xchg
ficompl
xchg
mov
jae
add
pop
dec
mov
xchg
xchg
lahf
outsl
sar
xor
add
add
fwait
into
xchg
stc
dec
ret
clc
movsb
clc
pop
and
clc
cmp
xchg
fisubrs
movsb
clc
inc
clc
idivl
cmp
add
sbb
mov
clc
pop
pop
in
inc
add
cmp
clc
mov
clc
out
add
mov
add
gs
jg
clc
adc
add
add
jne
daa
clc
xor
add
gs
clc
cmp
daa
clc
lcall
jle
clc
sub
fdivrp
test
sub
add
mov
clc
cmp
adc
mov
fmuls
or
fbstp
push
pop
pop
mov
sub
add
pop
clc
movsb
clc
sar
addr16
add
add
jmp
movsb
clc
adc
push
add
sub
and
add
gs
xchg
sbb
sub
out
nop
jmp
sub
dec
dec
dec
dec
fs
js
sbb
add
cmp
add
out
dec
jmp
add
mov
das
push
aaa
pop
scas
xchg
mov
jmp
stos
xor
adc
add
push
flds
clc
filds
clc
xchg
out
cmp
cmpsb
clc
imul
pop
imul
mov
add
mov
clc
adc
add
pop
clc
pop
xabort
add
sbb
add
jno
add
clc
cs
add
add
add
add
push
mov
nop
jmp
jecxz
out
adc
fldt
cmp
loope
leave
aam
cwtl
or
xor
add
mov
pushf
inc
add
xor
or
decl
cli
add
add
adc
sub
cmp
data16
dec
hlt
in
inc
add
es
cs
test
xor
in
gs
xchg
dec
add
add
xbegin
add
loopne
cmp
call
nop
jmp
jp
and
gs
jb
add
cltd
mov
and
sbb
clc
mov
lods
dec
mov
hlt
ffreep
clc
test
clc
cmp
jmp
stos
adc
clc
mov
sbb
add
clc
and
add
repz
out
ret
clc
inc
add
out
sbb
ds
scas
cmp
call
inc
add
add
pusha
add
out
jecxz
xchg
push
outsl
and
add
sub
add
imul
add
add
mov
jmp
data16
add
add
xchg
in
pop
insl
push
jp
clc
or
leave
dec
in
cmpsb
clc
mov
jg
xchg
lea
clc
and
add
pop
xchg
cwtl
mov
sbb
test
rolb
xchg
call
push
add
scas
bound
add
clc
mov
add
add
add
cmp
cmpsb
adc
xchg
ret
mov
test
and
mov
clc
mov
nop
jmp
jns
add
jge
push
add
pushf
wrmsr
add
test
add
pop
jns
add
inc
add
mov
push
add
pop
je
mov
jmp
movsl
rcrb
dec
rorb
add
fdivr
sub
add
fists
add
lods
aam
dec
or
xabort
add
mov
shlb
add
fstpt
sti
or
sbb
bound
add
popf
inc
add
fiadds
add
movsb
clc
icebp
jbe
test
clc
clc
loopne
xchg
stos
arpl
add
add
sbb
pop
clc
sub
clc
ds
add
mov
mov
xchg
ret
jns
and
add
push
add
nop
jmp
rcll
and
imul
aaa
sub
sub
imul
jnp
faddp
clc
das
sbb
add
in
or
add
jmp
add
fs
sti
sbb
in
sub
inc
clc
fdivrs
push
add
test
inc
add
out
in
dec
xor
add
sub
dec
aaa
xchg
fists
add
pop
insl
adc
add
and
dec
cmp
clc
pop
xlat
adc
add
clc
out
mov
dec
into
incl
add
inc
cli
and
add
fwait
fs
fstl
jmp
add
jmp
mov
xchg
cli
xchg
popa
add
or
jmp
and
add
push
add
loopne
adc
add
push
stc
call
fstp
sub
aaa
imul
cmp
adc
add
movsb
clc
out
xor
insb
and
data16
and
add
add
addr16
fwait
in
mov
fdivs
add
std
sub
lcall
pop
adc
add
stc
outsl
inc
add
ret
and
add
clc
and
add
movsl
clc
push
decl
mov
push
nop
jmp
adc
add
add
cmp
nop
jl
or
fs
clc
mov
sub
clc
rol
clc
sbb
pop
mov
ss
decl
add
ret
clc
ja
ss
lock
dec
or
add
jmp
push
add
mov
or
stc
test
sarb
add
push
fisubrs
mov
insb
pop
out
repnz
jb
add
clc
rcll
add
das
popf
pop
sub
add
sbb
jmp
jl
pop
in
ja
add
movsb
clc
or
pop
pop
int
xbegin
scas
out
aas
ret
clc
iret
xor
add
in
dec
mov
add
faddl
sbb
add
dec
popf
addr16
mov
add
and
add
mov
push
mov
add
testb
add
leave
fidivs
add
inc
add
mov
and
add
shll
add
add
push
add
nop
jmp
js
adc
add
push
add
enter
into
sub
fists
add
jge
ret
clc
jp
clc
add
add
clc
or
add
mov
jmp
add
dec
ss
jmp
pushf
add
add
or
popf
pop
push
fdivl
clc
sub
clc
inc
clc
call
test
mov
sbb
add
jmp
fidivl
add
in
cs
clc
imul
xchg
mov
ss
clc
dec
clc
cmc
out
imul
add
dec
jg
xor
add
push
out
inc
add
dec
imul
pop
pop
add
xor
add
clc
bound
add
cmp
in
push
icebp
mov
clc
mov
add
clc
push
add
lahf
test
adc
push
clc
out
inc
clc
in
sahf
jb
add
insl
inc
add
cwtl
cmc
mov
adc
and
jecxz
add
dec
lcall
clc
popa
add
rclb
xchg
cltd
scas
rcrb
clc
imul
sbb
xabort
arpl
add
pop
std
lahf
mov
cld
aaa
stc
hlt
in
pop
mov
dec
mov
aam
pop
mov
add
mov
add
movsl
clc
out
and
add
fimuls
fidivs
in
xchg
jnp
sbb
sbb
faddl
add
xchg
aas
and
add
mov
movsb
clc
xchg
fisttpl
push
add
push
add
fs
js
jno
add
clc
fadd
clc
out
int3
and
add
mov
add
in
add
add
pop
loope
jecxz
outsb
testb
sub
imul
push
add
arpl
add
and
adc
add
or
add
or
xchg
push
loope
cmp
add
mov
iret
insb
movsl
clc
mov
cmp
add
mov
xabort
or
clc
or
xabort
push
bound
add
add
aas
jb
add
push
clc
inc
clc
sub
clc
movsb
clc
mov
sub
clc
add
add
add
pop
jne
inc
clc
mov
inc
add
mov
jae
jmp
add
and
cmp
mov
mov
clc
loopne
test
add
and
add
and
add
add
mov
add
mov
int3
pop
movsl
clc
sub
iret
inc
clc
push
push
mov
add
inc
add
movq
clc
gs
je
mov
clc
xlat
mov
test
fsubs
mov
jmp
add
fwait
dec
idivl
cwtl
xchg
sbb
lods
pop
adc
add
add
ja
or
add
add
clc
inc
clc
xchg
push
call
add
addr16
jle
shll
add
pop
mov
add
add
mov
rclb
dec
mov
push
mov
xchg
ret
mov
clc
or
clc
jmp
jle
add
inc
add
sub
cs
clc
lea
test
add
add
mov
clc
imul
lret
clc
mov
cltd
dec
cmp
clc
or
sub
fwait
and
add
add
add
sbb
mov
shl
aad
clc
inc
add
lods
lods
test
cmp
clc
inc
add
jne
inc
add
test
ret
clc
sar
rcr
cmpsb
clc
fimuls
mov
mov
adc
add
or
or
nop
iret
adc
add
lods
adc
add
clc
fdivp
mov
jmp
rcrb
sbb
add
jbe
es
or
pop
mov
add
repz
add
outsb
lods
lods
dec
pop
add
add
add
jo
add
pop
int
dec
or
clc
sub
add
negl
clc
xor
add
cs
jns
ficoml
vmaxps
add
clc
push
add
enter
clc
loop
movsb
clc
dec
lret
add
dec
lods
xor
std
sbb
clc
push
add
nop
jmp
add
outsb
sarb
add
add
add
add
shlb
imul
mov
cmpsl
clc
and
add
add
xabort
mov
into
out
cmp
ds
mov
add
fdiv
fdivl
clc
lahf
sbb
repnz
sbb
add
fmull
clc
and
mov
jl
add
cmpsl
clc
jo
add
mov
push
push
mov
xchg
ret
xor
mov
loopne
mov
mov
mov
xchg
ret
mov
pop
jg
add
es
das
xchg
xabort
add
fnstenv
jmp
bound
cli
jl
push
push
mov
xchg
ret
and
pop
xor
add
add
clc
call
clc
inc
add
int3
popa
add
cltd
enter
rcll
mov
add
xabort
mov
mov
outsb
sub
add
cmp
add
cmp
clc
xchg
out
add
add
pop
lcall
add
sbb
rclb
add
pop
mov
popf
adc
clc
cli
sbb
push
add
sahf
mov
clc
add
add
jge
enter
mov
enter
shrl
add
add
sub
sar
clc
fisubrs
dec
cmp
jmp
add
popf
fadd
test
xchg
lret
dec
jbe
clc
push
jecxz
outsl
dec
xor
add
clc
fs
dec
mov
or
pop
sbb
insb
loop
dec
fstpl
dec
mov
clc
sar
push
add
mov
add
cs
bound
add
popf
sti
je
lock
cmp
mov
mov
lods
ljmp
jge
push
add
adc
add
clc
pushf
adc
add
clc
ret
clc
leave
fildll
add
pushf
pushf
jno
add
add
and
add
mov
mov
movsb
clc
or
ret
clc
xor
add
lods
adc
add
clc
jge
clc
xor
dec
sub
shrb
add
cmp
mov
movsb
clc
adc
mov
mulb
xchg
adc
add
add
and
fs
nop
pop
test
outsl
bound
add
clc
mov
push
mov
xchg
ret
add
movsl
clc
pop
cld
xor
add
clc
aam
add
hlt
mov
or
add
pushf
fwait
movsb
clc
ret
clc
out
or
add
clc
sti
jge
jae
add
stc
mov
scas
insl
ret
clc
jecxz
push
fimuls
mov
clc
in
popa
add
adc
add
sar
sar
cmpsb
clc
in
mov
cwtl
imul
add
cmpsb
clc
mov
mov
clc
out
stc
sahf
test
cmp
clc
insb
lock
pusha
add
push
fwait
testl
inc
clc
popf
cmp
hlt
xchg
test
movsl
clc
ja
pusha
add
cmp
mov
xor
add
add
out
pop
fwait
mov
aam
inc
clc
mov
and
add
push
nop
jmp
sar
sub
push
add
jne
xchg
jecxz
and
lock
arpl
add
sti
shrb
movb
xchg
ret
mov
pusha
add
pop
sub
out
in
aad
cmp
ja
add
sti
dec
int3
repz
nop
inc
clc
aad
clc
jno
add
adc
add
js
clc
stos
mov
lcall
jmp
repnz
arpl
add
mov
pop
fcomps
mov
nop
jmp
add
add
or
gs
dec
ds
cmp
mov
xchg
push
data16
jns
movsl
jge
and
add
pop
xchg
cmp
mov
aam
out
insb
and
add
fidivrs
dec
and
add
aaa
sub
clc
adc
clc
xor
clc
or
sahf
adc
add
clc
test
mov
fildll
loop
mov
sub
clc
add
add
jno
add
sub
xbegin
clc
xabort
pop
sub
idivb
and
add
fcomip
stos
data16
xor
clc
add
loope
popl
pop
scas
sti
fwait
cs
aas
adc
add
xchg
add
add
fsts
jno
add
mov
push
clc
das
mov
clc
imul
dec
mov
clc
movsb
clc
inc
clc
xor
add
adc
add
add
mov
and
add
sub
popf
cli
xbegin
clc
repnz
mov
sbb
cli
jbe
clc
aas
aad
add
pop
js
pop
jnp
pushf
sbb
insb
bound
add
add
sarl
xchg
push
add
nop
jmp
movl
mov
add
add
add
ljmp
sub
incl
adc
inc
jge
cmpsb
clc
lock
pop
nop
jmp
mov
movl
clc
popa
add
jae
add
clc
nop
in
dec
imul
add
nop
jmp
adc
and
cmp
add
shll
js
mov
add
fidivl
add
adc
sbb
pop
pop
lock
add
add
clc
mov
mov
sub
sub
je
popa
add
in
pop
dec
dec
aam
xor
add
aas
pop
and
add
add
xor
add
cmp
sub
clc
mov
add
adc
add
clc
es
pop
or
clc
xor
add
addr16
dec
jno
add
add
dec
out
cltd
mov
clc
inc
clc
pop
push
jae
jmp
out
fnstsw
das
add
shll
mov
xchg
xchg
inc
clc
jns
icebp
aad
enter
add
sti
inc
add
ret
mov
xbegin
or
and
add
sbb
pop
add
adc
add
clc
cmpsl
clc
imul
add
lcall
push
icebp
sub
pop
cmp
loope
adc
add
sub
add
out
addr16
in
test
clc
sub
and
add
stos
lods
or
bound
add
xlat
pushf
push
clc
rcl
mov
outsl
sbb
jmp
loopne
verr
arpl
fiaddl
clc
jo
add
out
rcrb
push
lcall
clc
bound
add
mov
or
sbb
das
cmpsb
clc
es
jge
add
xchg
movsb
clc
xor
add
add
add
clc
popf
bound
add
clc
data16
imul
movsb
clc
lcall
sbb
add
push
js
xchg
adc
add
sub
push
mov
xchg
ret
cld
adc
dec
imul
dec
mov
clc
jne
clc
fsubs
add
lahf
adc
add
cmp
clc
jl
leave
sar
mov
stc
mov
inc
clc
inc
add
clc
sti
mov
pop
jle
clc
sbb
test
call
inc
or
pop
lcall
je
pop
or
and
add
scas
jne
mov
add
ret
clc
jecxz
push
pop
loop
adc
add
push
push
add
mov
jns
cmp
jmp
rcll
adc
je
add
push
add
xchg
sahf
inc
add
pop
push
clc
stc
and
mov
add
sub
add
clc
fcoms
mov
cmp
jb
add
clc
inc
add
stos
data16
push
add
pop
add
add
clc
hlt
in
repnz
and
add
clc
jns
int3
and
in
stos
mov
jno
add
push
add
mov
cmp
add
ljmp
and
add
add
cmp
clc
mov
call
pushl
add
push
clc
mov
add
addr16
pop
out
pop
cmc
xchg
mov
daa
clc
dec
mov
clc
mov
sahf
cmpsl
clc
inc
add
inc
clc
jae
add
jo
add
out
mov
and
add
inc
clc
insl
sbb
dec
cmpsb
clc
ret
clc
data16
cmp
enter
fstpt
add
push
add
push
cmp
clc
jbe
clc
mov
in
add
add
add
add
ds
sub
outsl
cwtl
mov
and
jmp
rorl
in
xor
add
clc
call
clc
cli
jge
add
add
mov
sbb
or
clc
sbb
decl
mov
push
nop
jmp
jl
add
add
add
gs
dec
in
adc
add
sub
push
jp
into
bound
add
add
nop
jmp
sub
inc
xor
in
mov
push
add
mov
fisttps
sub
jns
adc
movsl
clc
jno
add
add
jbe
or
inc
add
ss
imul
rcll
add
jns
mov
rol
clc
outsb
cwtl
cwtl
xor
add
clc
ror
cltd
ret
mov
jmp
add
jecxz
and
add
add
add
nop
jmp
rorl
clc
xchg
lods
rcrl
cmpsl
clc
vminps
gs
clc
out
stos
push
clc
sbb
in
cmp
xbegin
xchg
outsl
imulb
imul
add
int3
mov
clc
xchg
scas
sbb
add
ret
clc
inc
clc
fs
fildll
es
aas
scas
xchg
cmp
clc
push
out
dec
aad
mov
lods
or
add
cmp
add
mov
pop
in
leave
or
sti
push
push
clc
data16
lock
clc
es
sbb
add
add
add
clc
sbb
arpl
add
add
jl
pop
push
cmp
bnd
ret
ret
clc
sbb
clc
mov
jmp
out
xchg
adc
add
add
clc
cmp
add
xchg
pop
in
sub
inc
add
sub
clc
fdiv
dec
loope
push
add
and
add
or
add
nop
jmp
jl
mov
clc
in
xbegin
or
out
or
add
jmp
cmp
add
xchg
iret
and
fsubs
add
mov
lea
add
inc
clc
dec
fsubrl
inc
clc
movsb
clc
insb
jnp
aaa
dec
adc
add
add
add
sbb
adc
clc
mov
clc
ljmp
out
fs
data16
pushf
js
popf
ljmp
xchg
xchg
inc
clc
push
clc
lods
jbe
lods
rsqrtps
add
pop
leave
rcrb
pop
arpl
add
add
xchg
inc
add
push
add
pop
dec
or
and
dec
xchg
lea
add
clc
stc
fisubrl
fisubrl
clc
rorb
sar
clc
dec
jg
clc
and
add
mov
cmc
cltd
jne
mov
mov
sti
push
add
push
lahf
pop
cmp
add
add
cld
and
add
mull
shll
clc
sarb
clc
jge
clc
repnz
add
inc
add
mov
decl
add
js
xor
wbinvd
nop
mov
cwtl
cmp
add
clc
sar
clc
xchg
cmc
psrad
mov
xchg
ljmp
js
loopne
fmull
shrb
and
add
clc
xchg
jecxz
xor
add
add
outsl
stos
testb
pop
sbb
std
sub
movsl
clc
add
add
ret
mov
sub
add
popf
mov
mov
add
ljmp
lahf
leave
cmp
clc
loop
push
add
imulb
mov
mov
mov
pop
gs
sbb
mov
xchg
ret
jge
add
mov
nop
jmp
xchg
pop
pop
out
lahf
mov
clc
scas
fcmovb
clc
into
add
mov
add
mov
jecxz
mov
es
lods
cli
xchg
adc
add
clc
and
add
add
add
add
and
add
add
insl
hlt
cmp
mov
cmp
add
test
test
incl
jecxz
jae
outsl
push
fs
jl
push
clc
sbb
adc
add
clc
gs
inc
clc
daa
clc
aaa
mov
add
or
ds
mov
clc
stos
mov
push
add
xor
add
mov
stos
clc
add
add
jae
add
cmp
jp
adc
add
clc
cmp
clc
into
pop
xor
test
lea
add
clc
aad
add
fisttpll
sub
mov
push
add
mov
jecxz
hlt
mov
fprem
sti
cs
clc
mov
xchg
in
lods
imul
ret
clc
dec
adc
bound
add
clc
push
add
mov
add
mov
add
and
add
std
xlat
jnp
push
adc
add
jle
clc
push
sub
clc
outsb
mov
clc
mov
sbb
jo
add
clc
lods
cmp
add
arpl
add
stc
pop
jb
add
pop
mov
js
clc
das
imul
clc
getsec
dec
out
icebp
jl
clc
mov
stos
sbb
push
add
xor
add
clc
jmp
mov
jp
cmp
call
or
add
dec
xbegin
add
data16
loop
imul
jne
hlt
mov
stos
loopne
mov
popl
dec
loopne
rolb
mov
push
mov
xchg
ret
add
clc
dec
sti
add
add
add
xchg
sbb
add
clc
pop
sub
sbb
add
add
repz
xchg
mov
jmp
mov
rorl
insl
xchg
dec
pop
dec
insb
and
add
movsl
clc
ss
xor
add
xchg
cmp
inc
add
gs
cld
repnz
clc
cmp
xchg
es
cmc
bound
add
mov
clc
xlat
adc
inc
clc
outsl
jle
cwtl
add
add
add
pop
or
sbb
cwtl
outsb
inc
add
sub
clc
mov
sbb
sbb
jmp
pop
pop
add
pushf
cmp
clc
sub
out
sbb
mov
ljmp
add
clc
sub
mov
shll
add
add
dec
divl
mov
arpl
add
sub
add
movsl
clc
sub
push
gs
push
add
xor
add
test
imul
sub
dec
enter
popa
nop
jmp
mov
add
xor
dec
imul
xchg
lods
shll
add
lods
outsl
ja
mov
sbb
add
shr
sar
add
sar
clc
xchg
inc
clc
cli
ffree
clc
mov
mov
xchg
outsl
xor
add
push
mov
add
push
add
jbe
add
call
lock
inc
add
in
push
add
add
add
dec
mov
xor
int
sub
pop
inc
add
aam
add
push
call
ljmp
sub
test
pushf
ja
movsb
clc
mov
sar
insl
fsts
add
aam
mov
clc
test
imul
mov
fs
pop
out
fs
popa
add
sar
dec
sar
imul
clc
nop
scas
cmc
mov
add
inc
nop
jmp
add
dec
or
sbb
jg
nop
jmp
inc
xor
clc
push
add
loop
sbb
add
pop
in
lock
clc
imul
nop
jmp
and
add
add
inc
clc
mov
aad
add
dec
mov
add
mov
add
dec
push
add
sbb
cmpsl
clc
pop
xchg
ror
enter
clc
mov
repz
lahf
sub
add
movsb
clc
mov
out
sahf
inc
clc
jle
rolb
add
ficomps
add
or
clc
pop
hlt
inc
add
pop
jl
push
cmp
stos
nop
jmp
rcrb
sub
add
push
sub
nop
jmp
out
ja
inc
add
cmp
outsb
mov
nop
jmp
out
add
pop
clc
mov
mov
clc
mov
mov
mov
adc
fiaddl
push
push
fcompl
add
pop
or
fidivl
add
clc
sbb
mov
into
push
add
ljmp
clc
adc
fs
jb
add
lea
sarl
add
pop
ret
clc
pop
decl
test
cltd
call
incl
sub
pop
clc
jns
add
mov
call
push
decl
push
mov
xchg
ret
or
jle
scas
mov
test
or
adc
add
clc
pop
cmpsb
clc
ficoml
cld
cmp
and
add
jl
and
outsb
sbb
mov
clc
sbb
add
add
pop
and
add
stc
jl
aaa
xchg
push
clc
and
psllq
call
test
xor
add
lea
addr16
inc
add
and
add
and
pop
sub
sbb
add
clc
xchg
fnsave
and
jmp
jl
loop
add
ljmp
sarb
int
add
adc
add
add
mov
clc
xchg
mov
sahf
xchg
cmp
sbb
push
mov
xchg
ret
xchg
and
add
pop
int3
mov
add
pop
jo
add
push
inc
clc
inc
clc
mov
sub
fwait
cmp
loop
push
mov
xchg
ret
inc
arpl
clc
cmc
sarb
xchg
mov
shr
clc
data16
mov
xchg
dec
mov
push
xor
add
test
int3
sbb
add
pop
and
mov
xchg
ret
jecxz
sub
jns
loopne
cs
jb
add
add
add
push
cmp
lahf
loop
mov
nop
xor
fisubrs
aad
mov
nop
jmp
jl
dec
out
bound
imul
test
mov
sub
out
sub
jae,pn
add
in
mov
xchg
ret
inc
jns
clc
or
jge
stc
out
int3
lods
jns
clc
movsb
clc
inc
clc
xchg
out
cli
cmp
int3
imul
add
clc
push
aad
mov
push
mov
xchg
ret
dec
pop
shrb
clc
lret
add
out
scas
lret
rol
clc
xor
call
nop
jmp
in
and
aam
push
add
cli
inc
clc
inc
clc
xchg
push
xchg
scas
push
add
xor
add
pop
xchg
pusha
add
imul
mov
ret
int
clc
pop
adc
mov
sbb
incl
add
add
cmp
or
clc
ds
add
push
mov
add
sahf
pop
sbb
or
add
mov
add
push
push
add
add
cld
mov
cmp
add
mov
add
jg
clc
push
data16
stos
push
xlat
in
mov
loope
loope
and
add
add
pop
je
fisttpll
add
cmpsl
clc
shrd
add
add
jbe
loopne
jno
add
add
xchg
push
pop
leave
sarb
fisttpll
outsb
out
fimuls
clc
push
or
call
sbb
add
fwait
inc
clc
push
add
ret
clc
lea
or
clc
iret
add
jo
add
clc
xchg
fildl
int
add
cs
cltd
cltd
sub
lods
cli
sbb
fs
cmpsl
clc
aad
add
cmp
mov
adc
addr16
pop
mov
fbld
rol
clc
mov
clc
out
cmp
jmp
add
push
and
fucom
adc
jecxz
inc
clc
fdivrp
incl
jmp
js
and
jl
add
es
jns
sahf
mov
xbegin
sar
jbe
dec
aam
cli
out
jns
call
fdivs
add
aaa
fstl
add
clc
movsl
clc
push
jnp
clc
inc
clc
jmp
inc
clc
push
add
inc
clc
or
ja
int
jbe
clc
lret
stos
xchg
sbb
movq
mov
loopne
aam
xor
add
add
clc
ret
clc
ja
xchg
mov
add
js
clc
repnz
ret
nop
jmp
pushf
mov
xor
in
adc
add
dec
cmp
jmp
data16
add
mov
lock
push
jno
add
add
adc
cmp
clc
repz
adc
add
imul
in
out
ds
clc
and
add
iret
or
clc
mov
mov
add
decl
jecxz
dec
sahf
dec
sti
pop
clc
mov
aas
jns
jb
add
clc
repnz
mov
jb
add
nop
jmp
or
out
add
mov
mov
nop
jmp
add
rol
sahf
repnz
jns
sub
adc
add
clc
sbb
inc
add
ja
aas
pushf
lahf
lods
xor
add
loope
call
incl
out
pushf
mov
pusha
add
jmp
add
jae
add
push
add
bound
add
out
or
push
clc
mov
lret
inc
push
adc
nop
jmp
add
push
add
push
push
inc
clc
adc
add
in
clc
and
mov
mov
clc
call
add
test
movhps
add
xabort
jae
add
xor
add
clc
jecxz
int
dec
cs
clc
repnz
clc
mov
mov
or
xor
dec
lahf
xchg
clc
clc
outsl
insb
xchg
movsb
clc
test
int
jge
clc
movsl
clc
adc
add
sbb
add
mov
sub
add
clc
imul
or
filds
add
xchg
sbb
out
inc
clc
push
clc
shl
clc
daa
clc
or
add
add
lock
cmc
xlat
xbegin
dec
mov
push
add
lret
insl
and
add
add
ret
outsb
ss
or
sub
add
ror
arpl
add
mov
incl
pop
jecxz
add
scas
xchg
movsl
clc
push
addr16
mov
and
add
jb
add
ja
push
jge
cmpsb
clc
cmp
xor
add
mov
clc
mov
add
add
add
xchg
ljmp
add
or
mov
mov
add
dec
adc
add
add
jp
clc
rcrl
pop
cmp
and
add
clc
outsb
nop
dec
xchg
out
fdivrl
clc
push
addr16
mov
push
sbb
loopne
jmp
add
enter
imul
ljmp
sbb
pop
nop
jmp
xor
bound
add
sar
xchg
mov
mov
in
cwtl
pusha
add
fwait
out
iret
adc
add
mov
fndisi(8087
clc
xchg
clc
inc
add
outsl
daa
clc
jb
add
xor
bound
add
clc
jmp
clc
scas
lcall
jmp
adc
js
adc
or
cmp
in
data16
mov
add
insl
xabort
add
shlb
daa
clc
jge
inc
clc
mov
movsb
clc
mov
pop
nop
cmp
push
add
push
mov
shl
mov
add
clc
jecxz
jb
add
add
xor
add
add
mov
sub
in
mov
dec
pop
clc
adc
add
and
add
clc
jno
add
mov
clc
add
add
inc
push
mov
xchg
ret
add
inc
add
pop
mov
add
in
mov
add
mov
clc
mov
jne
cs
bound
add
ss
lret
cmpw
nop
jmp
pop
mov
ret
jmp
mov
add
or
mov
add
in
and
add
sub
clc
data16
sbb
dec
lea
or
add
pop
pminub
cmp
inc
clc
int
clc
psubd
dec
mov
outsl
popa
add
xchg
and
add
pop
xchg
cmpsl
clc
hlt
sub
mov
clc
inc
add
aam
jae
add
cmp
clc
inc
add
or
add
lahf
por
in
pusha
add
data16
push
repnz
ljmp
jp
pushf
adc
clc
ss
clc
or
add
daa
clc
adc
add
clc
xchg
out
outsb
or
fwait
jg
xchg
fwait
mov
mov
push
push
mov
push
mov
xchg
ret
jae
lock
dec
cwtl
std
data16
mov
jb
add
test
outsb
jg
clc
stos
daa
clc
fisubrs
add
add
add
add
cmp
mov
and
arpl
add
add
pop
adc
add
add
roll
sub
add
outsb
jae
add
clc
mov
add
or
test
clc
and
add
add
adc
add
clc
mov
nop
jmp
inc
punpckldq
popf
add
add
cmp
stos
jo
add
stos
sbb
clc
test
cmc
je
xchg
jns
clc
es
adc
add
clc
dec
out
mov
loopne
dec
pop
inc
add
cmp
mov
add
lods
and
add
add
clc
sbb
in
xor
fcmovb
clc
repnz
inc
clc
pop
ja
sub
cwtl
mov
xor
in
pop
xabort
mulb
pop
cli
stos
xor
add
std
rol
clc
sar
add
jg
sub
lea
nop
jmp
data16
push
add
aad
clc
xchg
cld
es
and
add
cmp
and
add
sub
xchg
adc
add
clc
lcall
sub
clc
enter
fs
scas
insl
movsl
clc
jno
add
add
out
sub
adc
loopne
and
add
sbb
cmp
cs
ljmp
add
test
add
pop
rol
clc
mov
imul
push
call
jl
loopne
push
cmp
dec
or
popf
dec
test
idivl
or
clc
cltd
mov
decl
test
test
call
incl
inc
inc
clc
fists
push
movzwl
nop
jmp
cli
sub
cwtl
pop
fidivl
xchg
or
add
hlt
stos
ja
cltd
mov
sub
shlb
clc
jge
pop
call
nop
jmp
add
pop
vmovlps
add
add
xor
add
fldl
lods
cmp
lret
lcall
cmc
pop
enter
add
scas
loope
clc
inc
add
adc
pushl
nop
jmp
js
add
repnz
insb
xabort
clc
mov
sbb
sahf
push
jno
add
das
test
push
add
addr16
push
add
jo
add
negl
add
arpl
add
inc
add
add
add
mov
clc
push
shlb
add
dec
mov
mov
pop
call
add
jae
add
clc
mov
pop
ret
clc
repz
clc
add
add
push
add
and
rorl
or
clc
adc
add
inc
add
add
add
test
jnp
add
xchg
mov
lods
aad
mov
mov
lods
dec
xor
clc
xor
cmp
sub
call
add
or
sub
inc
add
push
add
inc
add
js
fcompl
ds
mov
icebp
inc
clc
xchg
dec
loopne
ljmp
xchg
or
push
and
nop
jmp
jp
jae
fmull
lock
dec
fwait
push
add
add
add
sbb
push
sub
pushf
jmp
add
ja
sbb
xor
add
xabort
clc
ret
and
push
insl
adc
add
add
popa
add
jge
inc
clc
out
and
inc
add
hlt
aam
movsl
clc
mov
add
add
or
clc
cmp
clc
inc
clc
lock
clc
test
or
cld
js
data16
outsl
std
xchg
mov
mov
lahf
out
mov
clc
loope
mov
mov
add
xor
add
add
daa
clc
adc
add
clc
jge
aaa
test
rolb
and
arpl
jecxz
clc
sbb
push
add
in
push
mov
add
clc
mov
add
nop
jmp
dec
add
sub
cld
scas
testl
enter
inc
clc
fisttps
aaa
push
add
jge
jnp
testb
add
add
clc
popa
add
push
add
in
cmp
xchg
xor
add
sbb
add
dec
mov
pop
fs
or
add
pushf
lahf
push
jne
call
sub
mov
test
or
mov
pop
clc
adc
add
clc
jne
addr16
sarl
je
and
and
add
clc
sbb
clc
popa
add
movsb
clc
test
add
push
jp
scas
insl
sub
repz
ret
clc
sbb
clc
pusha
add
out
sub
add
pop
cmc
pop
pop
xchg
lcall
mov
jmp
out
add
out
xchg
std
pop
int3
mov
xor
add
clc
jge
gs
cmp
add
add
mov
sar
clc
pop
sarb
notb
fmull
xor
add
add
daa
clc
shrb
sub
xor
nop
jmp
cld
and
loopne
xchg
pop
push
inc
clc
and
arpl
add
aam
mov
pop
int3
aaa
sahf
dec
lahf
add
adc
add
clc
cmp
cld
inc
clc
call
testl
clc
jmp
ret
clc
ret
cmp
clc
adc
clc
push
add
add
pushf
inc
js
pop
vmovhps
sub
clc
sbb
in
mov
sar
mov
inc
add
xchg
inc
add
jl
test
xor
add
add
pop
or
add
xchg
sub
push
lods
jl
clc
data16
cmp
push
add
ds
push
pop
cld
dec
pushf
mov
ss
add
inc
clc
sti
ss
mov
repz
lret
in
cs
clc
and
add
inc
add
fisubl
stos
aad
test
pop
add
add
movsb
clc
nop
imul
in
repnz
push
jne
pop
knotw
aad
sub
ljmp
add
nop
jmp
repnz
sub
jecxz
rorl
xbegin
add
add
push
add
push
add
xchg
push
sub
xor
or
add
ret
adc
add
stos
sbb
jmp
loop
inc
outsb
mov
stc
inc
add
and
jb
add
xchg
lea
add
push
mov
mov
add
iret
jecxz
sar
and
add
flds
add
mov
clc
lahf
push
clc
rorb
dec
sbb
stos
leave
inc
add
adc
clc
cmp
jae
add
add
fimuls
inc
clc
cwtl
sar
sub
adc
add
clc
mov
lods
adc
add
xchg
push
mov
nop
jmp
add
outsb
push
add
clc
or
jge
or
xchg
or
mov
add
icebp
sub
xor
add
ja
stos
rclb
add
pop
cmp
jne
nop
jmp
add
stos
xor
and
add
lods
xchg
push
sysexit
in
dec
arpl
add
sti
data16
std
shl
clc
cli
push
cmc
sbb
add
pushf
jmp
nop
jmp
or
xchg
lret
adc
add
and
add
jg
clc
vmovlps
add
clc
mov
mov
nop
jmp
stos
fdivrl
add
clc
stc
sub
outsl
xor
add
mov
xor
add
shrb
std
or
add
or
pop
imul
lods
ljmp
jg
add
add
clc
cmp
add
dec
pop
fmul
jne
add
cmpsb
clc
sub
and
fcoml
je
ret
clc
inc
add
inc
clc
es
lock
push
clc
inc
clc
add
add
push
add
inc
clc
push
add
clc
xchg
fdivr
mov
nop
jmp
movl
inc
clc
mov
clc
rcrl
mov
je
cmp
clc
cmp
jmp
xor
add
add
add
rcrb
insb
push
jnp
outsb
push
push
pusha
add
repnz
pop
fs
push
clc
add
mul
clc
daa
clc
mov
add
add
add
push
into
rcll
jge
loopne
or
call
clc
clc
adc
add
ljmp
call
clc
push
out
or
clc
lods
and
add
inc
clc
addr16
cmp
outsl
mov
add
mov
pop
xor
add
add
dec
lods
mov
mov
xchg
ret
add
jge
lods
into
cmp
clc
mov
fdivs
repnz
xchg
sbb
add
repz
nop
ds
and
sahf
xor
add
add
mov
clc
xchg
push
iret
enter
mov
pop
data16
aas
inc
clc
int
add
mov
pop
xor
jae
add
clc
popf
arpl
add
add
movsl
clc
mov
add
add
clc
add
add
jle
clc
jbe
imul
or
mov
add
clc
sbb
jmp
adcb
adc
pop
repnz
fildll
add
outsb
out
daa
clc
call
test
pop
xchg
out
or
pop
clc
movsl
clc
stc
xlat
jo
add
add
call
xlat
mov
fcomps
clc
dec
mov
push
inc
add
ljmp
inc
xor
nop
jmp
mov
push
mov
jns
push
scas
xchg
jno
add
clc
pushf
insl
js
clc
pop
dec
test
or
mov
push
clc
cmp
dec
jno
add
add
cmp
jge
nop
jmp
jge
sub
mov
xlat
test
ss
stos
push
or
clc
adc
add
add
clc
das
cwtl
dec
jne
adc
jge
xchg
mov
lret
loopne
xor
add
xchg
mov
mov
mov
clc
mov
outsb
mov
add
add
clc
fwait
pop
in
clc
pop
pop
inc
add
push
mov
notb
in
pop
mov
and
add
cmp
ret
xor
clc
sar
clc
jl
out
pop
stos
in
jae
add
clc
aad
mov
sarb
loope
adc
fs
mov
inc
add
push
add
adc
add
pop
cmp
add
xor
add
xchg
outsl
pushf
fildl
add
sub
fs
cld
dec
or
add
mov
xbegin
dec
frstor
add
push
add
mov
pop
arpl
add
imul
jge
in
jne
clc
cmp
adc
add
add
inc
add
pop
shrl
in
enter
sub
add
fs
sbb
add
xchg
sar
gs
cmpsb
clc
ja
popf
outsl
ret
clc
cwtl
insb
sahf
pushf
rep
fbld
jmp
or
sub
ffree
clc
xchg
scas
dec
scas
mov
je
fbld
add
clc
inc
clc
jge
out
test
xchg
push
add
inc
add
xor
clc
or
add
sub
add
out
call
inc
clc
xabort
add
leave
push
add
int
out
mov
fucom
clc
movsb
clc
cmp
out
mov
clc
bound
add
aam
arpl
add
clc
leave
or
or
jo
add
clc
inc
clc
outsl
das
xor
add
adc
mov
add
je
pop
rcll
cmp
aaa
adc
add
add
mov
call
call
sti
dec
xchg
jecxz
je
lods
movsl
clc
dec
mov
pop
iret
push
mov
adc
rorl
add
ds
xlat
clc
popa
add
add
add
xor
add
inc
add
cmp
clc
rcr
test
add
push
idivb
add
sti
jns
sub
fldcw
iret
sbb
mov
xchg
ret
add
dec
shrl
add
out
icebp
add
add
mov
clc
out
sti
mov
mov
hlt
es
insl
lret
test
xabort
add
rclb
add
clc
pop
fistpl
daa
clc
sar
cwtl
jbe
xor
add
jo
call
cli
js
loopne
xabort
and
add
mov
mov
sti
movsb
clc
fwait
sub
add
std
adc
add
ja
sti
sbb
sub
jmp
mov
lock
mov
fisubrs
add
ret
cs
aad
fcoml
fisubrs
add
pop
inc
add
push
sar
add
fwait
pop
scas
cmp
clc
cmp
add
clc
pop
dec
or
push
cmpsb
clc
out
sbb
hlt
lahf
int3
iret
cmp
clc
repz
jne
imul
push
push
jae
add
pop
adc
add
clc
and
add
clc
pop
xchg
jb
add
jae
add
pop
mov
rclb
incl
in
add
out
cmp
jle
clc
mov
dec
dec
adc
add
clc
mov
push
inc
add
and
add
xchg
pop
daa
clc
cmp
stos
lods
es
mov
cltd
inc
add
push
xchg
popl
add
out
jb
add
add
add
clc
out
push
mov
clc
out
jl,pt
clc
js
dec
pop
sub
mov
push
mov
xchg
ret
stos
xchg
cwtl
loope
fs
fisttpll
and
add
clc
lahf
in
outsb
cmp
call
dec
dec
outsb
push
mov
nop
jmp
or
and
andb
add
scas
mov
inc
clc
pusha
add
inc
clc
out
sub
xchg
push
add
or
mov
mov
xor
add
clc
aas
jg
xor
add
add
js
add
xchg
adc
add
clc
fs
aad
ret
jge
cmpsl
clc
pop
clc
jbe
add
sbb
int3
or
pusha
add
jns
inc
add
testl
clc
out
jae
add
clc
add
nop
jmp
and
xor
enter
push
add
and
add
add
cmpps
add
pop
clc
pop
mov
and
insl
jle
pop
xchg
ljmp
sub
js
repnz
adc
add
push
mov
nop
jmp
out
add
nop
adc
fildl
add
add
clc
jecxz
dec
imul
sub
mov
clc
fimuls
clc
push
add
xbegin
ret
fadds
add
add
lcall
xlat
loope
inc
clc
mov
clc
test
fimull
or
pusha
add
stos
xchg
movsl
clc
popf
cmp
sahf
cmp
clc
fs
fsts
mov
cmpsb
clc
outsl
bound
add
mov
nop
jmp
add
mov
jle
dec
adc
add
gs
fcompl
jl
push
push
mov
xchg
ret
sub
in
test
add
jle
xchg
sub
mov
nop
jmp
in
jl
jp
sub
into
xchg
imul
out
mov
add
or
add
clc
and
mov
add
sbb
add
stos
sbb
jmp
dec
popfw
movsl
adc
jbe
shrl
bound
add
add
jo
add
clc
fsts
inc
clc
add
or
shlb
clc
std
push
sub
fnsave
add
sahf
fiaddl
add
inc
add
mov
lahf
xor
add
mov
clc
push
add
incl
nop
jmp
or
adc
adc
add
add
clc
jg
cmp
add
mov
xor
add
mov
sub
imul
add
add
loopne
lcall
clc
dec
xbegin
in
jp
clc
ss
and
add
push
outsl
lods
or
add
add
lahf
add
add
add
push
je
add
mov
lods
add
add
add
clc
sar
mov
cmp
and
nop
jmp
add
cli
and
add
add
pushl
out
sub
and
sar
lock
add
push
clc
sub
add
add
xor
add
clc
mov
inc
add
cmc
jo
add
je
add
jnp
clc
xbegin
adc
add
lods
jmp
add
clc
js
clc
cmp
cmp
add
cmp
cmp
lahf
sub
inc
clc
xchg
cmp
inc
add
in
incl
mov
xchg
ret
mov
ja
add
sbb
repnz
cmc
dec
gs
inc
clc
mov
dec
jg
clc
push
movsb
push
mov
xchg
ret
adc
data16
test
mov
nop
repz
add
add
xor
add
push
jmp
loopne
xor
jae
dec
sbb
mov
xchg
ret
arpl
jns
sub
popl
nop
jmp
mov
jns
add
mov
out
fscale
jns
clc
int
enter
clc
mov
ljmp
imul
adc
add
add
mov
clc
lret
cli
jle
clc
sbb
clc
mov
fistl
lock
add
repz
mov
out
leave
push
fs
in
out
cwtl
lcall
sar
jnp
mov
xchg
jo
add
punpcklwd
add
add
add
dec
cmp
add
clc
xchg
add
cmp
int3
es
add
add
clc
xlat
mov
mov
jg
test
shl
clc
mov
add
testl
jge
out
lcall
jno
add
inc
add
xchg
inc
add
enter
add
clc
sar
cmp
and
mov
fistpll
in
inc
add
jl
clc
loope
mov
add
lahf
js
clc
pop
test
sub
sbb
xor
add
clc
push
add
rcrb
stos
out
testl
mov
and
add
clc
idivb
dec
out
stos
pop
outsb
xlat
xor
cmc
in
pop
jp
add
xabort
clc
js
clc
jmp
or
add
push
in
xor
add
add
dec
nop
shll
clc
lret
mov
xabort
repz
dec
or
jmp
dec
je
add
add
add
nop
add
add
mov
and
pop
and
int3
roll
ja
jp
clc
xchg
or
aam
into
pop
dec
stos
sub
imul
clc
loope
xor
clc
pop
call
in
test
sar
test
js
nop
jmp
arpl
arpl
rclb
js
jp
pop
movsl
movsl
cmp
xchg
incl
pop
cmp
jmp
jl
popf
jp
adc
fildl
clc
mov
insb
loop
add
add
add
cwtl
mov
imul
mov
clc
mov
pusha
add
inc
add
cmp
add
pop
lods
popa
add
imul
dec
jecxz
hlt
push
add
fwait
sti
cmp
sbb
add
cmp
add
cmc
or
mov
lcall
add
xchg
push
add
int3
out
xchg
mov
xor
add
clc
pusha
add
cmpsl
clc
adc
add
clc
nop
pop
insl
popa
add
clc
stc
pop
outsb
xchg
das
mov
mov
mov
cmp
add
add
sysenter
icebp
and
add
add
sbb
cltd
or
add
idivb
rorl
clc
cmp
sub
add
add
int3
mov
push
cmc
mov
add
dec
pop
and
add
icebp
sarb
jbe
push
add
stos
mov
add
xchg
ret
inc
pop
add
mov
add
add
fnsave
xor
add
pop
or
sub
cwtl
in
movsl
clc
sbb
jmp
dec
xor
adc
repnz
xchg
or
jmp
add
repnz
inc
adc
clc
jb
add
xor
add
clc
mov
bound
add
or
push
mov
dec
inc
add
fldcw
adc
jno
add
sbb
jmp
add
adc
clc
repnz
clc
fs
addr16
ss
clc
sub
mov
cli
js
dec
cmp
pop
testb
sub
ret
dec
pop
and
push
add
add
add
add
loope
inc
add
jno
add
cmc
int3
inc
add
stc
repnz
jecxz
xor
add
adc
add
jns
clc
sbb
inc
and
jmp
arpl
inc
cli
ja
fists
add
add
add
int3
cmp
xor
add
add
into
cmp
add
popf
jg
sbb
clc
cmp
add
cmp
xbegin
in
dec
jle
add
jle
cmp
clc
xchg
pop
loope
inc
clc
dec
push
mov
nop
jmp
jp
in
push
pop
pop
and
add
dec
mov
add
inc
add
mov
clc
imul
cli
dec
sbb
cli
sti
jns
clc
mov
jno
incl
xor
and
add
jmp
add
xchg
std
mov
std
dec
mov
call
in
cmp
clc
dec
cmp
xchg
faddl
sti
jne
testb
add
clc
mov
pop
jae
add
pushf
cltd
pop
xchg
lods
sub
push
scas
inc
add
sub
mov
and
fiaddl
clc
sbb
push
add
add
add
add
xor
add
add
mov
dec
pop
lret
add
jb
add
xor
aad
clc
movsb
clc
lods
mov
das
cmp
mov
cmp
clc
adc
add
adc
add
cmp
xor
add
clc
insb
lea
add
inc
add
sub
clc
xchg
mov
add
adc
xchg
xbegin
add
ss
clc
shrl
nop
jmp
fldl
data16
stos
ret
clc
push
push
jle
aas
in
or
add
clc
cmp
add
xor
jl
jno
add
cmp
mov
xabort
popa
add
pop
faddp
clc
lcall
pop
je
pop
mov
jg
cmp
movsl
clc
sbb
ret
clc
test
add
je
jl
clc
mov
xor
clc
and
jge
push
clc
sbb
add
shll
add
jp
dec
shrb
clc
in
cli
es
lahf
clc
or
add
and
add
fidivrl
push
inc
add
std
and
add
add
aas
or
pop
xlat
fstl
add
sbb
push
mov
xchg
ret
and
cmp
sub
add
addr16
out
mov
jnp
inc
clc
add
add
cli
lods
outsb
mov
clc
sahf
out
hlt
dec
mov
and
add
add
mov
jle
clc
dec
xchg
xchg
es
fs
outsb
and
add
xor
mov
push
add
push
loopne
in
push
add
mov
dec
dec
pushf
lea
or
sbb
pop
stc
imul
inc
add
add
add
repz
je
sar
clc
pusha
add
mov
int3
inc
add
mov
sbb
stos
mov
xchg
je
cltd
in
repnz
cmp
fbld
jnp
or
xchg
imul
imul
add
jge
data16
xor
add
cmp
pop
lods
imul
add
clc
repnz
add
add
add
xchg
pusha
add
xor
add
leave
in
nop
pop
inc
add
popa
add
lcall
clc
add
add
pop
xabort
clc
cmp
shrb
cld
push
add
ljmp
add
frstor
mov
add
inc
add
or
add
sahf
sarb
ret
clc
mov
frstor
jl
fwait
imul
mov
clc
int3
fisttpll
popf
bound
add
test
fmull
ror
cmp
call
clc
mov
add
cmp
clc
mov
setg
jns
add
mov
push
clc
or
int3
jbe
cmp
in
fwait
or
adc
jmp
add
fsub
inc
clc
push
pusha
add
cmp
add
mov
in
sbb
mov
clc
gs
cmp
jne
in
mov
dec
fadds
clc
clc
in
test
push
add
inc
add
pop
int3
out
imul
add
push
sub
clc
cmc
jl
clc
movsb
clc
pop
dec
das
jmp
es
xlat
fwait
popa
add
ret
add
fcompl
push
mov
jns
add
lcall
ljmp
clc
fnstsw
lret
cld
dec
repnz
jg
ret
clc
add
hlt
sbb
mov
stos
sbb
cmp
clc
xor
add
and
add
adc
add
add
fucom
clc
loop
pop
add
add
repnz
clc
push
xbegin
call
add
mov
xchg
iret
dec
or
sti
out
roll
ds
xbegin
add
addr16
dec
mov
scas
stos
jns
clc
mov
shlb
lods
idivl
es
incl
mov
and
jo
add
clc
xchg
pop
jne
adc
add
hlt
pop
jp
clc
repz
sar
xchg
out
ret
clc
cmc
lods
cmp
or
add
jecxz
sub
pop
push
add
sub
add
inc
add
test
adc
add
add
fdivs
add
mov
push
jp
clc
and
test
enter
daa
clc
or
sub
inc
add
mov
add
mov
clc
gs
es
cwtl
pop
lea
add
pop
or
add
and
add
add
push
add
and
add
add
mov
jmp
pop
clc
test
or
mov
clc
jns
lods
imul
clc
cltd
cmp
mulb
add
adc
add
add
add
fidivs
add
mov
clc
in
inc
clc
cmp
filds
clc
mov
cmp
testb
and
sbb
push
clc
mov
xbegin
cmc
cltd
jae
add
push
rcll
add
mov
cmp
mov
clc
popa
add
nop
ja
call
adc
add
cmp
add
add
cld
dec
out
scas
push
add
fs
stos
xlat
push
add
push
mov
stos
jge
push
add
lods
fldt
lret
mov
in
imul
add
add
add
clc
sub
jp
out
gs
fwait
mov
jns
clc
push
clc
jb
add
add
clc
data16
push
add
add
add
xchg
push
push
add
adc
add
imul
iret
mov
sub
add
in
adc
cmpsb
clc
aad
pusha
add
fstps
addr16
test
push
mov
jmp
inc
add
jnp
push
repz
aaa
dec
pop
test
pop
xlat
sub
push
iret
dec
gs
es
jp
clc
out
test
add
mov
xabort
clc
sbb
clc
mov
icebp
test
add
jnp
clc
arpl
add
clc
jp
cmp
clc
scas
int3
mov
clc
outsb
and
xlat
in
or
cmp
clc
scas
iret
mov
clc
fstpt
add
scas
mov
add
mov
push
clc
inc
clc
jo
add
add
outsb
cmp
or
jmp
repz
jecxz
mov
clc
push
add
mov
test
add
cwtl
jnp
add
add
clc
mov
imul
inc
add
test
clc
or
sbb
sbb
adc
add
inc
add
out
gs
xchg
inc
clc
xabort
mov
clc
add
add
add
mov
jnp
xchg
mov
clc
jo
add
shrb
fldt
clc
sar
lods
scas
and
scas
cmc
inc
add
cmp
lret
or
in
movsb
clc
mov
dec
fsubrl
adc
and
add
add
cmpsb
clc
mov
xchg
sahf
xchg
or
cltd
inc
add
jge
sbb
idivb
nop
jae
add
add
xor
add
clc
pop
dec
arpl
add
clc
or
add
push
aas
mov
inc
clc
out
cmc
pop
fidivrs
shrl
mov
add
inc
clc
bound
add
clc
cmp
add
cld
sbb
popf
and
add
xchg
lret
mov
dec
xchg
xor
add
clc
sub
test
test
ret
clc
out
dec
and
add
pop
push
clc
dec
cmp
mov
cmc
jmp
add
fldenv
insl
and
add
clc
popf
scas
and
sub
add
clc
aas
jnp
in
js
cmp
pop
aad
pop
mov
fs
incl
lods
outsl
jge
xor
add
add
pop
clc
xchg
mov
sar
push
push
pop
xbegin
clc
dec
mov
repz
hlt
adc
pusha
add
int
add
add
push
add
repnz
add
clc
popa
add
push
add
cmp
mov
es
mov
clc
ficomps
es
push
xor
add
pop
out
jle
loop
cmpsl
clc
adc
add
in
push
cltd
push
sti
repnz
add
pop
jne
inc
clc
cmp
push
mov
add
adc
add
add
cmp
sar
clc
mov
clc
dec
xbegin
mov
popa
add
outsb
adc
add
add
add
push
cmp
iret
mov
add
pop
stos
adc
add
aaa
call
xchg
clc
sub
mov
add
mov
clc
mov
push
add
ret
dec
vminps
cmp
clc
dec
cmp
mov
outsb
rcl
push
mov
add
enter
inc
add
sbb
add
nop
cmp
clc
adc
push
add
jle
pop
lods
idivl
push
scas
fstpl
mov
std
pusha
add
cmc
dec
inc
add
push
clc
cld
scas
and
sar
mov
add
sub
xor
add
add
cmp
mov
clc
ljmp
xchg
jmp
jb
add
add
in
in
cltd
jne
repnz
add
inc
clc
data16
sub
clc
mov
cmp
das
mov
pop
mov
xabort
clc
push
loopne
insb
ds
add
dec
ja
imul
cli
sub
mov
dec
data16
cmp
clc
mov
sahf
fs
xchg
jp
clc
inc
clc
mov
mov
test
jbe
cmp
sbb
xlat
xor
add
add
pusha
add
out
pop
adc
xlat
out
and
arpl
add
sbb
fcomps
jo
add
mov
mov
mov
fisttps
jl
pop
add
add
mov
mov
clc
js
add
inc
add
test
pop
cmp
mov
mov
add
inc
add
insb
addr16
inc
add
arpl
add
into
sbb
or
and
sub
out
add
loope
xchg
sub
add
jne
add
ss
xchg
lcall
add
push
std
mov
clc
xchg
or
sbb
dec
dec
inc
add
or
lret
pusha
add
and
add
clc
inc
clc
out
xor
add
lea
add
outsl
mov
clc
fisubs
loop
jne
mov
xor
clc
and
add
clc
push
clc
popa
add
fdivrl
data16
lods
jecxz
in
sarl
add
jae
add
add
sub
add
outsb
jge
sbb
or
clc
jnp
loop
loopne
inc
clc
sbb
pusha
add
mov
into
cmc
mov
imul
arpl
add
clc
test
mov
dec
fwait
jmp
inc
clc
stos
sbb
data16
gs
and
clc
jle
scas
mov
clc
ret
jmp
pop
adc
add
rorl
add
sbb
clc
test
clc
data16
imulb
add
ficoml
add
mov
insb
lods
cmp
and
fsts
clc
pop
jp
add
add
add
into
sti
mov
sti
fwait
test
jns
add
adc
add
lods
jbe
push
out
mov
inc
add
or
pusha
add
popf
sbb
add
inc
add
xchg
sbb
cli
sar
xor
add
repz
adc
add
add
bound
add
add
js
outsb
ffreep
clc
ss
ljmp
xlat
into
adc
clc
add
add
aas
int3
test
add
mov
adc
add
aad
and
add
add
mov
clc
fidivrl
clc
xchg
fsts
add
clc
sub
xchg
cmc
jns
outsb
std
cld
mov
clc
dec
xor
add
add
add
or
lock
add
mov
lock
clc
xor
add
out
sub
lock
sbb
cmpsl
clc
in
paddusw
add
xchg
push
add
adc
add
clc
xchg
pushf
fmuls
filds
add
add
add
add
out
xor
add
movsl
clc
pushf
push
xchg
add
add
add
mov
clc
test
pop
cld
sar
cmp
scas
bnd
mov
das
mov
pop
dec
insl
mov
add
add
sbb
add
add
add
mov
int3
pop
clc
jp
xchg
and
push
add
js
and
add
data16
mov
js
pop
movsb
clc
fstpt
clc
inc
clc
xabort
clc
clc
cwtl
ja
add
push
hlt
addr16
stos
mov
jg
clc
das
mov
clc
cld
dec
aaa
mov
fsub
clc
dec
push
scas
fstpl
inc
clc
xchg
cmpsb
clc
push
or
add
frstor
add
add
xchg
mov
inc
clc
ss
bound
add
sbb
punpckhbw
add
clc
je
add
sub
jp
add
cmp
or
jmp
mov
cmp
add
add
mov
and
cmp
lret
cld
sbb
stc
and
add
clc
clc
mov
jg
loopne
stos
in
cmp
add
mov
aaa
xor
add
add
jl
mov
out
das
stos
call
add
pop
mov
sbb
add
add
xchg
imull
clc
aad
cltd
pop
out
mov
clc
cmpsl
clc
movsb
clc
mov
and
add
loope
mov
add
imul
add
clc
mov
add
fidivrl
mov
movsb
clc
rcrl
fwait
push
add
xor
xor
add
xchg
imul
cmc
not
outsl
leave
clc
daa
clc
pop
clc
in
cmc
jg
clc
fucom
clc
arpl
add
cmp
clc
aam
decl
mov
clc
cmpsl
clc
push
xor
add
add
std
scas
pop
iret
shr
iret
cmpsb
clc
dec
repnz
mov
clc
or
xchg
ret
clc
and
add
das
cmp
clc
mov
add
pushf
insl
repz
add
adc
push
dec
sti
inc
add
aam
stos
jb
add
xlat
std
jl
lahf
cwtl
pop
clc
mov
or
loopne
and
lret
and
add
insb
xabort
faddl
add
clc
jo
add
loopne
sbb
lods
mov
outsb
mov
insl
sub
in
ret
clc
imul
icebp
loope
jne
mov
out
sar
insl
dec
lret
pop
clc
ficomps
dec
call
or
add
add
add
clc
pop
clc
hlt
pop
push
scas
mov
fisubl
clc
xabort
lcall
int3
jge
push
add
int
xchg
icebp
stc
lret
out
and
add
push
and
inc
add
mov
clc
idivb
add
add
mov
add
add
xchg
movsl
clc
push
add
pop
mov
push
add
cmp
clc
jmp
mov
daa
clc
or
clc
movsb
clc
jmp
adc
clc
lret
dec
or
aas
cmpsb
clc
fists
clc
flds
clc
jle
lods
or
fcoml
or
jnp
add
cmp
push
aad
clc
popa
add
gs
pop
push
clc
xor
mov
clc
xchg
jecxz
or
scas
jmp
clc
inc
add
or
imulb
mov
imul
xchg
push
add
xor
add
test
xchg
sub
xor
sbb
mov
add
add
pop
dec
ljmp
clc
imul
jae
add
or
adc
add
add
pop
cmp
pop
ja,pn
clc
clc
aaa
fwait
mov
pop
fmuls
add
xchg
fs
sub
cmp
mov
xchg
fldt
loope
test
push
ds
fwait
shl
clc
cmp
clc
push
sbb
clc
pop
xor
add
std
clc
mov
fbld
mov
add
push
mov
mov
fcom
or
mov
stos
ficoms
add
pop
sti
fs
repnz
or
js
lret
add
inc
add
lcall
cld
cmp
jmp
pop
cmpsb
clc
xlat
mov
sub
clc
rcll
add
add
and
jbe
push
mov
jbe
cmp
push
daa
clc
push
add
add
add
clc
xchg
fsubp
clc
je
test
clc
idivl
add
es
xchg
adc
add
clc
dec
popa
add
jne
add
sbb
in
cmp
clc
jne
clc
sub
addr16
sbb
add
repz
mov
xabort
pop
inc
add
mov
loope
cmp
cmp
clc
insb
inc
add
xor
add
jns
add
mov
faddp
clc
int3
sbb
ljmp
repnz
sbb
clc
dec
shlb
add
add
add
iret
xchg
stos
xchg
ljmp
clc
xchg
or
insl
add
add
jl
clc
mov
add
out
in
out
mov
add
add
xor
add
add
mov
mov
cmpsl
clc
sub
add
sbb
clc
es
add
add
add
pop
sub
sar
sbb
push
clc
jns
sub
sar
clc
or
and
add
hlt
push
lods
in
je
fs
jbe
test
mov
sub
loopne
fsts
clc
mov
cmp
adc
clc
lcall
push
mov
add
adc
add
dec
movsl
clc
pop
call
jge
xor
cltd
negl
sar
jbe
mov
outsb
enter
add
add
movsb
clc
iret
fs
jo
add
add
insl
sar
clc
ficompl
ja
cmp
sub
push
in
cs
int
add
stc
cmp
jmp
gs
push
aam
je
mov
mov
add
add
or
add
pop
loope
aas
test
mov
xchg
mov
stos
and
add
stc
cmp
sbb
clc
adc
add
icebp
shlb
iret
cs
fisubrs
jl
or
clc
mov
add
mov
mov
clc
sbb
push
add
pushf
cmp
add
in
daa
clc
pop
or
clc
lcall
clc
mov
mov
data16
fimull
jp
clc
inc
clc
mov
add
and
arpl
add
cmp
xbegin
clc
sar
mov
cmp
mov
clc
aas
js
mov
inc
clc
push
add
mov
out
loopne
std
imul
add
inc
clc
pop
and
add
sub
add
sar
lcall
clc
cmp
add
call
cmp
lret
dec
push
sub
xchg
xbegin
fwait
pop
mov
cmp
inc
clc
pop
inc
clc
fldenv
clc
loopne
cmp
inc
add
fs
inc
add
pop
jnp
mov
pop
clc
outsb
cwtl
pop
jne
clc
pop
dec
fisttps
out
flds
jnp
or
add
or
clc
fs
add
add
add
add
add
add
add
clc
push
jp
cmp
clc
popf
shll
inc
add
cmpsl
clc
cmp
add
mov
test
into
add
xchg
ljmp
xchg
cmp
add
movsl
clc
jne
je
mov
sahf
repnz
xor
clc
test
movsl
clc
mov
idivb
data16
aam
in
test
xor
add
mov
mov
xor
add
clc
cmc
cmp
mov
ljmp
imul
js
pop
imul
ds
clc
jbe
add
add
stos
sub
mov
push
mov
aad
add
or
sar
sbb
clc
int
push
icebp
stc
mov
push
cmp
add
sbb
add
xchg
push
imul
test
fmulp
aas
add
add
add
clc
xchg
dec
push
add
push
mov
mov
sar
mov
test
testl
add
and
add
ja
test
je
clc
nopl
pushf
and
insl
dec
insl
hlt
xchg
ret
cmp
test
add
es
fwait
pop
and
data16
push
add
pop
push
add
jo
add
lea
add
loop
mov
es
out
xchg
dec
xor
xchg
add
inc
add
in
mov
jle
lock
xor
add
add
xchg
fsts
add
ja
repnz
lret
pop
clc
scas
repz
es
cmp
add
xchg
cmp
test
adc
add
clc
xlat
xchg
addr16
mov
mov
add
cmp
add
xor
add
clc
sahf
xchg
xchg
sub
clc
cmp
clc
pop
sbb
jge
sub
mov
pop
lods
inc
clc
sbb
clc
ror
sarl
mov
insl
dec
roll
add
dec
enter
inc
clc
test
sahf
pop
inc
add
xor
add
clc
std
imulb
add
push
add
mov
mov
add
imul
lret
clc
sub
in
mov
clc
mov
clc
cmp
cmp
mov
add
stc
outsb
mov
test
push
clc
and
add
sub
out
push
pop
xchg
leave
mov
push
add
lods
test
mov
clc
push
cld
fldenv
add
add
xor
add
add
fldenv
cld
lcall
loop
out
mov
stc
jbe
xchg
cmp
add
clc
mov
and
add
clc
es
xor
add
sub
jae
add
clc
pop
mov
clc
add
add
xlat
cli
repz
clc
sbb
clc
decl
pop
dec
jmp
add
or
sar
xabort
sbb
and
add
ss
push
add
cmp
dec
sahf
insl
lea
mov
add
add
dec
cmpsl
clc
aad
std
lret
and
add
sar
push
add
sar
adc
add
push
add
mov
dec
and
add
jno
add
xchg
pop
mov
add
aam
adc
add
add
pop
clc
xchg
push
mov
lods
repnz
nop
not
push
add
mov
clc
pushf
adc
add
adc
add
clc
jmp
push
clc
add
daa
clc
add
sub
add
jno
add
add
pop
loope,pt
cmp
add
mov
add
clc
add
add
xor
clc
xchg
shll
add
inc
clc
inc
add
mov
mov
inc
clc
je
add
cld
jl
sub
xchg
dec
jle
pop
out
je
xor
inc
add
lods
pop
adc
add
clc
mov
clc
pop
jae
add
imul
shlb
in
cmp
add
adc
add
jmp
clc
add
add
add
or
flds
sbb
add
sub
add
add
pop
jno
add
clc
bound
add
test
adc
add
pop
aad
and
add
inc
clc
int
mov
jle
clc
data16
inc
clc
das
repz
xchg
std
gs
in
shll
add
inc
clc
dec
aad
faddl
add
push
add
enter
mov
clc
pop
add
add
cmc
sahf
mov
add
imul
jp
or
clc
outsb
mov
scas
fcom
jnp
ljmp
arpl
add
add
test
or
pop
lret
insl
inc
clc
lret
stos
adc
add
add
xor
add
pushf
xabort
add
repz
clc
lahf
mov
mov
clc
sub
xchg
mov
clc
xchg
int3
clc
out
sbb
jge
aas
jl
dec
cli
notb
add
clc
ja
add
mov
in
pop
lret
add
clc
int
loope
xlat
cmp
add
movsl
clc
sub
mov
in
and
add
add
mov
mov
stos
cmp
call
jge
outsl
add
add
clc
imul
test
or
inc
add
test
cmp
add
sub
ja
divb
add
cwtl
and
add
mov
cmpsb
clc
cmp
clc
sar
clc
fldenv
sar
sbb
clc
push
sbb
bound
add
mov
and
add
clc
lret
scas
xor
cmp
add
leave
inc
add
inc
clc
push
mov
mov
add
and
fisttpll
push
add
mov
movsb
clc
fxch
jl
add
xor
add
std
mov
add
jne
clc
jo
add
adc
push
add
or
test
dec
adc
add
add
clc
lcall
add
clc
pop
cmc
sbb
add
dec
cmc
jns
jle
loopne
imull
clc
jne
jmp
pmuludq
aaa
lret
inc
clc
out
stos
mov
sub
add
inc
add
sar
int
add
repnz
enter
mov
sbb
incb
clc
xchg
fwait
xchg
imulb
cmp
clc
push
jp
clc
inc
clc
jp
je
mov
clc
stc
mov
add
sbb
xabort
iret
inc
add
add
add
mov
clc
inc
add
ljmp
adc
add
xor
add
pop
inc
clc
xor
mov
sbb
test
mov
mov
cmpsb
clc
insl
add
jbe
inc
clc
addr16
push
scas
inc
clc
pushf
std
pop
bound
add
jecxz
add
add
xchg
mov
jmp
clc
popa
add
clc
sar
clc
std
mov
test
cli
stc
movsb
clc
push
pop
cmp
inc
clc
xchg
leave
test
cmp
push
add
ret
cmp
clc
or
add
clc
mov
clc
inc
clc
sub
mov
push
fs
mov
pop
xchg
sahf
mov
data16
scas
push
sub
ljmp
clc
mov
ret
clc
aad
cmp
add
fcompl
leave
stc
inc
add
pop
mov
add
add
add
and
add
aad
clc
stos
lahf
mov
push
repz
es
pop
sbb
add
mov
fadd
clc
sbb
push
insl
mov
add
push
push
inc
clc
add
fisttpll
clc
ljmp
add
add
add
inc
add
pop
adc
sar
pop
sbb
fisubrl
pop
push
xor
add
dec
arpl
add
sub
add
lods
sar
xchg
int
add
fst
push
sbb
push
add
sahf
fbstp
mov
clc
bound
add
mov
in
negl
push
clc
mov
aaa
and
add
inc
add
push
mov
das
std
jmp
add
mov
clc
cmp
sub
out
inc
clc
jb
add
add
in
jmp
out
fs
mov
movsb
clc
mov
lods
mov
jo
add
data16
mov
clc
out
in
cmpsl
clc
xchg
and
add
adc
add
clc
inc
clc
and
pop
push
add
xchg
xor
add
pop
es
icebp
push
sub
clc
out
xor
popa
add
inc
add
pop
and
call
pop
and
add
dec
jmp
xchg
add
add
clc
jae
add
adc
add
add
jg
mov
cli
mov
add
clc
pop
xchg
mov
clc
pop
or
lcall
hlt
ja
clc
out
daa
clc
mov
add
cmc
call
add
cmp
clc
jg
push
add
scas
repnz
clc
mov
cltd
dec
xchg
xor
add
dec
cld
adc
add
fdivrs
clc
scas
push
sbb
push
mov
add
push
add
dec
insb
push
out
mov
clc
insb
and
clc
mov
inc
add
call
mov
data16
push
int3
repz
clc
push
push
add
pop
ret
repnz
addr16
clc
shll
or
daa
clc
xbegin
jle
add
dec
stc
add
add
jo
add
test
in
pushf
sar
add
cmp
xchg
push
cmp
clc
pop
cmc
mov
clc
leave
ret
clc
repz
shlb
pop
sub
clc
cli
add
pop
clc
adc
add
lods
out
out
jbe
jecxz
cmp
xchg
fs
cmp
iret
and
add
clc
sub
clc
sub
add
rolb
add
clc
imul
jecxz
cmp
clc
out
loopne
jne
xbegin
push
add
je
jg
lods
out
xor
add
or
gs
push
add
dec
pop
cmp
sbb
add
jns
xchg
add
inc
clc
mov
idivb
shl
clc
xor
add
xchg
dec
jmp
clc
adc
add
mov
cmp
add
add
add
pop
scas
xbegin
clc
xor
enter
clc
dec
stos
sub
in
inc
add
repnz
pop
sub
lret
lea
add
pushf
inc
clc
lcall
dec
test
pop
out
pop
mov
jmp
clc
pop
cmp
add
clc
fcmovbe
gs
into
cmc
xchg
sub
clc
xbegin
clc
mov
mov
xor
loop
movsl
clc
mov
mov
add
imul
mov
add
add
mov
cmp
add
incl
sar
in
arpl
add
sub
pop
lods
repz
sbb
sub
jge
xor
add
add
xchg
imul
pusha
add
pop
sahf
mov
add
stc
and
add
add
das
and
clc
jg
dec
mov
add
push
jnp
add
mov
rcll
add
out
mov
pop
inc
add
aas
cmp
add
pop
push
enter
adc
add
add
mov
clc
sar
add
or
add
cmpsl
clc
dec
ficoms
add
dec
cltd
loop
aaa
and
add
xchg
jno
add
clc
lret
mov
adc
add
xlat
cmp
dec
adc
add
int3
daa
clc
jno
add
clc
daa
clc
cmp
sbb
shrb
xbegin
popf
bound
add
add
mov
add
aam
int3
sub
add
clc
mov
clc
cmp
clc
aas
pop
xchg
jecxz
data16
dec
cmp
clc
addr16
and
add
aam
clc
sbb
cmp
xchg
add
add
add
in
mov
lret
ljmp
aaa
fstl
add
movsb
clc
push
imul
xabort
insb
test
xor
mov
push
add
inc
add
stos
in
cmp
xchg
push
sahf
je
clc
inc
add
clc
repnz
push
out
pop
enter
clc
or
clc
push
add
lret
aas
or
clc
mov
clc
std
imul
jo
add
das
int3
mov
int
cmp
push
lret
cmp
loop
pop
imul
not
mov
or
std
sub
add
negb
mov
popa
add
mul
clc
push
jg
dec
loope
mov
add
sbb
add
xchg
fsts
add
clc
js
or
outsb
fs
ljmp
add
add
mov
scas
jle
imul
clc
mov
add
cli
cli
clc
jno
add
sbb
jns
shlb
add
clc
sub
clc
push
push
add
outsl
xchg
mov
clc
pop
dec
pop
rcrb
in
pop
inc
clc
lahf
sub
mov
cmp
clc
jmp
clc
nop
xchg
pop
mov
add
sub
clc
sub
xchg
sub
adc
add
add
add
clc
xchg
scas
push
mov
xabort
testb
jo
add
rclb
fwait
cmp
add
ljmp
jne
clc
jns
clc
xchg
jb
add
test
jae
add
clc
addr16
mov
cmp
jns
add
lret
dec
loope
cmova
fcomp
loop
bound
add
mov
ret
mov
pop
jnp
loop
sub
in
push
clc
xchg
or
call
aas
xor
mov
dec
dec
leave
adc
add
add
add
xabort
adc
clc
jmp
add
cmpsb
clc
test
jo
add
xbegin
jle
sub
xchg
pusha
add
xor
add
in
adc
add
add
fcomps
sar
inc
clc
idivl
fcomi
loopne
fs
jge
clc
pop
outsb
shl
clc
cmp
outsb
sbb
add
nop
sub
add
gs
and
add
jl
in
test
jns
clc
add
add
push
add
mov
aam
test
clc
sub
std
and
insb
mov
inc
add
mov
add
addr16
daa
clc
sar
insl
or
sub
push
adc
add
aaa
add
add
call
jns
sub
push
xor
add
cmp
popf
adc
add
clc
dec
adc
add
add
cld
cmp
mov
mov
lahf
fcomps
add
test
clc
loopne
enter
psadbw
clc
rcrb
and
and
xor
add
repz
add
clc
inc
clc
pop
pcmpgtd
mov
clc
cmpsb
clc
pusha
add
sarl
clc
or
clc
pop
mov
data16
jge
icebp
mov
mov
add
hlt
jg
movsl
clc
xchg
xor
div
or
mov
clc
fiadds
add
aaa
lret
add
mov
add
pop
push
add
mov
into
pop
dec
push
xor
lods
push
inc
add
jo
add
add
adc
add
and
add
clc
and
add
clc
jp
sub
clc
popa
add
and
add
xbegin
clc
jae
add
clc
repnz
stos
mov
outsb
mov
add
mov
mov
mov
dec
mul
clc
adc
add
pop
clc
and
add
add
lock
icebp
aas
in
push
add
lods
push
scas
dec
mov
pop
clc
outsb
jne
adc
xor
add
pop
jbe
clc
xchg
pop
jbe
clc
xbegin
adc
add
bound
add
clc
aas
jecxz
scas
mov
add
in
test
mov
mov
clc
cmp
jg
js
out
fsubrl
sub
clc
fcoms
xchg
icebp
jecxz
cmp
pop
add
sar
lret
rorb
sub
clc
lods
scas
testl
add
test
sar
add
mov
clc
fdivs
add
ljmp
rorb
cmp
mov
data16
clc
cmp
fcomps
rclb
stc
hlt
mov
add
add
lods
mov
pop
out
movsl
clc
xchg
add
sub
ficomps
add
sub
add
xbegin
add
add
add
adc
add
mov
arpl
add
add
add
add
clc
mov
clc
pop
sbb
fisubl
clc
cmp
add
add
clc
push
clc
ds
xchg
cmp
fsubrl
add
test
gs
push
add
outsb
rorb
push
add
sub
xor
add
add
jmp
mov
add
in
cmp
clc
pop
mulb
clc
cltd
pop
daa
clc
sar
rcll
mov
pop
jge,pn
repnz
insb
add
add
bound
add
lods
inc
add
sbb
add
ja
mov
push
sub
add
jae
add
fwait
mov
sbb
ficoms
add
clc
clc
incl
add
inc
clc
lea
add
pusha
add
dec
xor
jmp
clc
xlat
or
cmpsl
clc
loope
jnp
bound
add
xbegin
dec
stos
xchg
movsl
clc
js
xchg
push
js
xor
add
add
aaa
repnz
add
inc
add
sbb
clc
and
add
add
loop
adc
add
lods
aas
and
add
ljmp
in
inc
add
sbb
add
cmp
clc
push
add
or
icebp
pop
cmpsl
clc
bound
add
clc
roll
add
outsl
leave
in
js
clc
popa
add
daa
clc
jl
mov
gs
push
iret
push
clc
lret
add
add
add
or
mov
jne
clc
push
add
inc
clc
pusha
add
xlat
je
sbb
inc
add
int
icebp
mov
clc
mov
imul
inc
add
xor
add
ficomps
fsubl
add
into
xchg
push
clc
push
add
add
out
pop
test
aam
sbb
and
xbegin
cmp
dec
dec
pop
addr16
xchg
sahf
cmp
fsubrs
lea
stos
cld
sti
cwtl
in
out
daa
clc
nop
repnz
pusha
add
adc
add
clc
test
cld
xbegin
addr16
pushf
std
push
inc
add
in
xchg
or
shll
add
xor
into
ljmp
stos
movsb
clc
dec
test
mov
sar
inc
clc
and
add
add
cmp
aas
xor
add
cmp
add
nop
cmp
or
sti
out
pop
and
lahf
jb
add
lret
fs
mov
clc
enter
add
pop
leave
clc
gs
cltd
hlt
push
clc
sbb
scas
scas
add
add
xchg
xchg
out
in
add
push
clc
or
aam
clc
jle
clc
in
xchg
shlb
fcomps
cmp
aas
arpl
add
pop
pop
inc
add
insl
popf
cmp
lret
popa
add
fnstenv
push
popa
add
lock
sub
cli
stc
repz
stc
aam
clc
je
add
dec
jle
jb
add
or
push
filds
icebp
in
test
cmpsl
clc
xor
add
repz
sbb
add
dec
xlat
dec
fistpll
mov
add
repnz
test
xchg
inc
clc
mov
clc
stos
mov
cmp
jmp
add
lret
add
in
cmp
ret
adc
add
add
add
mov
add
loop
xchg
push
add
fs
es
or
pusha
add
and
clc
adc
add
pusha
add
aam
int3
je
lret
in
ficompl
clc
cs
add
insl
add
add
cmp
add
testl
ret
adc
add
jg
daa
clc
dec
cli
dec
dec
aad
mov
cmpsl
clc
jle
clc
pop
js
inc
clc
sbb
pushf
repnz
jmp
add
aas
mov
mov
add
xor
mov
pusha
add
lock
out
and
add
mov
lods
gs
jns
lret
add
add
clc
or
xlat
push
add
je
clc
cmp
pop
pop
cltd
in
sbb
add
sub
daa
clc
pop
inc
clc
shrb
test
add
fildll
inc
add
test
mov
cmp
scas
and
add
insb
outsl
aaa
pusha
add
dec
add
insl
xchg
and
insb
std
in
pop
clc
mov
add
jp
jle
add
scas
and
add
test
imul
clc
test
in
and
add
add
jmp
add
sub
mov
mov
clc
bound
add
mov
add
js
sbb
clc
arpl
add
hlt
cmp
jl
jmp
xor
add
sub
or
add
jmp
int3
mov
shrl
aad
mov
dec
sar
insb
jo
add
clc
js
ljmp
pop
dec
sub
leave
inc
clc
jl
iret
push
add
push
add
dec
fmul
dec
gs
push
and
fdivrl
inc
add
inc
clc
xchg
or
setne
inc
clc
imul
jo
add
fadds
ret
outsb
lea
jl
mov
clc
jae
add
repz
mov
mov
clc
push
sub
jo
add
std
mov
mov
ficoms
add
call
jae
add
jle
notl
or
mov
clc
sub
jnp
xchg
ljmp
xor
outsb
cld
or
aaa
cmpsb
clc
mov
jecxz
push
dec
and
add
add
push
insb
mov
enter
jb
add
add
pop
clc
push
dec
sub
jns
fsubrs
inc
add
cmp
aad
xor
add
in
out
data16
push
clc
es
xor
add
push
cs
xor
add
push
ret
sub
add
daa
clc
fimuls
mov
jno
add
imul
adc
jbe
clc
imul
outsl
add
add
push
or
ja
push
mov
mov
sbb
ds
clc
xor
leave
and
add
dec
cli
into
sub
daa
clc
mov
in
arpl
add
cltd
xchg
mov
add
xchg
insb
mov
sbb
add
add
xbegin
add
clc
pop
gs
int3
mov
add
pop
jne
cltd
pop
adc
add
lods
cli
push
clc
mov
cmp
add
adc
in
stos
lods
ss
jnp
pop
lea
or
clc
cmp
js
cmp
add
add
add
imul
add
add
shrb
or
add
and
add
mov
and
add
inc
clc
inc
add
and
add
gs
loop
mulb
add
clc
shlb
int
cltd
or
pop
sar
cmp
clc
frstor
leave
push
adc
add
add
clc
mov
mov
add
add
and
addr16
xchg
cwtl
scas
and
add
and
add
sti
sar
xbegin
add
addr16
fldcw
pop
cmp
test
jge
ret
dec
xor
add
js
movsl
clc
imull
or
in
popa
add
inc
clc
pop
jnp
add
fwait
jl
cmp
xchg
leave
lret
sti
adc
add
clc
or
mov
mov
popf
xlat
cmp
mov
ret
clc
in
xor
add
lret
in
lock
or
clc
pop
cmpsl
clc
dec
jmp
test
push
out
xchg
sbb
clc
xchg
std
mov
add
add
clc
jae
add
mov
add
aam
push
clc
push
add
and
lock
add
scas
jecxz
fcoms
pop
and
icebp
inc
add
mov
jae
add
jns
push
add
push
clc
incl
mov
mov
roll
add
add
push
add
push
add
fs
es
or
dec
sahf
test
clc
mov
sbb
add
jno
add
mov
mov
mov
es
std
in
pop
sar
jb
add
add
sbb
add
jno
add
movsb
clc
mov
je
add
sub
sub
add
add
outsb
repnz
mov
jmp
out
or
arpl
add
int3
adc
add
add
pop
mov
clc
inc
add
xabort
add
aam
add
loopne
mov
fimuls
sub
xchg
cltd
aam
inc
clc
jae
add
clc
mov
clc
mov
add
push
jno
add
data16
and
add
add
adc
add
mov
clc
cs
mov
dec
jmp
in
jmp
clc
adc
add
sub
add
jle
lods
mov
cmp
add
clc
and
add
add
xchg
std
xor
enter
punpcklwd
add
add
add
ljmp
add
iret
frstpm(287
clc
in
mov
mov
add
add
loopne
push
clc
mov
out
stos
jmp
clc
mov
push
add
sbb
icebp
rcl
adc
add
clc
adc
add
in
sar
or
dec
cmp
add
std
aaa
shl
clc
or
pop
sbb
aam
xor
add
jle
or
add
ljmp
clc
jmp
bound
add
push
pop
and
add
add
incl
stos
push
clc
pop
mov
mov
inc
clc
sub
cmp
clc
test
push
cmp
popa
add
adc
add
add
add
push
dec
test
bound
add
test
into
jmp
pop
cmc
pop
movsb
clc
mov
imul
adc
clc
ret
clc
xor
add
fwait
xor
clc
pop
mov
xor
clc
sbb
clc
test
ss
das
and
add
add
js
clc
sarl
add
out
int3
xchg
sub
es
or
mov
clc
dec
pop
jecxz
insl
clc
int3
sbb
lcall
pop
mov
out
call
add
add
mov
imulb
clc
pop
sti
repnz
or
stc
cli
and
add
add
mov
xchg
js
dec
sub
lret
clc
add
add
mov
clc
jl
lock
jne
sub
jo
add
add
das
xchg
data16
adc
add
add
dec
pop
clc
and
add
xor
add
or
add
cmp
add
imul
fwait
inc
clc
iret
fldenv
sbb
outsb
sbb
dec
out
cmpsl
clc
push
sbb
fisubl
clc
jae
add
insb
lcall
out
mov
inc
clc
stc
xbegin
jg
sti
add
add
add
stc
mov
std
and
test
mov
or
clc
xor
add
xchg
repnz
outsb
sti
xor
add
add
mov
add
add
add
jle
and
add
movsb
clc
pushf
scas
fsts
dec
xbegin
add
fimuls
add
lahf
xchg
mov
clc
pop
icebp
je
decl
clc
mov
add
add
xor
add
adc
add
nop
sbb
jle
clc
cmp
pop
js
add
add
xchg
das
rcr
shrl
or
clc
mov
xlat
pop
pop
popa
add
jne
push
add
mov
outsb
lods
sub
add
jne
clc
popf
imul
clc
insb
dec
test
dec
mov
movsl
clc
mov
adc
fs
mov
jl
clc
sahf
int
xbegin
lret
mov
hlt
cmpsb
clc
out
lods
mov
push
pop
mov
pop
test
xor
add
xor
add
add
js
clc
jle
clc
in
add
add
shlb
add
push
mov
sar
jne
jl
xlat
xchg
into
jo
add
sub
xor
add
cmp
pop
fcompl
xor
add
rcll
xchg
push
clc
out
mov
or
loopne
push
xchg
adc
add
scas
mov
add
lods
xbegin
sub
clc
inc
clc
out
lods
cmpsl
clc
sub
clc
mov
sub
es
push
add
sti
inc
clc
icebp
xchg
inc
clc
lock
clc
add
add
add
mov
jle
push
add
jp
incl
push
leave
mov
dec
lcall
inc
add
jne
clc
in
jbe
fdivr
push
aam
enter
pusha
add
mov
add
mov
add
pop
clc
lret
mov
test
mov
shll
add
clc
push
fnstenv
add
xchg
inc
add
mov
sar
add
add
out
cmp
lcall
xchg
dec
std
cld
push
cmp
lods
jg
sbb
lea
add
sbb
dec
add
test
clc
sub
imul
out
sarl
xchg
xchg
cmp
inc
clc
cmp
cmp
cmp
cmp
add
add
add
mov
add
add
add
bound
add
sar
fnsave
add
cs
iret
mov
cmp
and
add
add
add
add
mov
add
jne
add
scas
cmp
add
stc
aam
add
xchg
mov
add
stos
popa
add
inc
add
jp
jns
fwait
mov
inc
clc
cld
adc
add
clc
mov
jle
clc
nop
jl
jo
add
loope
and
add
mov
fldl
add
cs
clc
ret
clc
and
add
mov
je
ret
cmp
add
sub
sar
aam
aaa
aas
and
sahf
out
push
mov
mov
push
add
gs
sub
sub
clc
outsb
mov
sub
add
loop
insb
push
cltd
cmp
clc
repz
add
push
add
and
shll
add
sbb
add
dec
cmc
xor
add
clc
or
sar
and
cmp
jg
cld
mov
dec
cmp
je
and
add
add
jmp
clc
xchg
fdivrs
add
mov
clc
sub
mov
cmp
push
add
adc
add
cmp
add
mov
fwait
xchg
jnp
add
lock
mov
cmp
add
add
test
pop
gs
lahf
cmp
jge
outsl
movsl
clc
pop
or
push
imul
or
notb
add
outsl
dec
push
sbb
add
lahf
repz
lahf
add
add
in
test
iret
xor
add
sar
clc
mov
out
adc
add
inc
add
enter
popf
outsb
test
stos
sub
pop
and
add
lock
test
cmp
and
add
mov
lea
add
gs
pxor
ja
xchg
push
cld
add
xor
add
add
push
add
jnp
shr
scas
mov
testb
out
mov
add
add
sub
clc
popa
add
xchg
test
add
xabort
shlb
add
add
add
shll
add
cmp
add
mov
and
add
arpl
add
scas
test
or
add
xchg
test
inc
clc
daa
clc
push
test
push
add
inc
clc
or
add
sar
clc
xlat
mov
add
fnsetpm(287
clc
add
dec
xbegin
add
cld
hlt
mov
push
add
iret
mov
test
dec
ss
mov
inc
add
imul
clc
adc
add
add
push
clc
and
add
clc
inc
clc
push
fildll
lcall
jp
clc
sub
push
clc
outsl
mov
adc
add
test
add
in
pop
ret
clc
sbb
lret
inc
clc
inc
clc
add
jecxz
cmp
push
pop
pusha
add
push
adc
add
add
push
repnz
xchg
and
loop
push
out
daa
clc
call
cmp
xor
add
add
bound
add
aas
xbegin
inc
clc
push
add
pop
daa
clc
in
rep
ret
clc
ds
mov
add
sbb
cmp
add
cmp
popf
xchg
inc
add
lret
add
clc
mov
clc
jo
add
pop
ds
sti
mov
fwait
pop
and
lods
lods
adc
lret
icebp
lods
in
adc
add
clc
inc
add
stos
out
jmp
pop
mov
sbb
sahf
int3
insb
dec
xchg
in
cmpsb
clc
ja
adc
add
inc
clc
test
clc
mov
clc
nop
mov
and
sar
clc
push
add
sub
mov
repz
or
add
aam
fwait
test
pop
or
cmp
clc
mov
add
add
movsl
clc
push
outsl
inc
clc
mov
rcrl
das
leave
add
add
add
mov
add
add
add
jbe
sbb
add
xchg
mov
xor
add
clc
dec
shl
clc
add
add
cmp
clc
in
call
add
js
add
jle
xchg
pop
adc
mov
clc
sbb
fs
push
clc
std
jbe
clc
jno
add
dec
push
clc
add
mov
lret
nop
mov
add
fwait
sar
clc
xchg
xabort
movsl
clc
cs
mov
jge
clc
nop
mov
xchg
mov
inc
clc
cld
test
clc
pop
cltd
fs
call
clc
fbstp
pop
popa
add
dec
sahf
cmp
add
in
lock
sub
add
mov
mov
clc
jg
clc
out
mov
mov
lods
pop
cwtl
aam
clc
mov
add
clc
daa
clc
loop
out
out
and
add
clc
or
adc
add
mov
in
loopne
out
fcompl
or
fwait
ja
mov
clc
mov
xchg
add
add
mov
sub
data16
pushf
push
add
dec
inc
add
sahf
push
add
imul
sub
lret
jbe
xabort
adc
add
or
clc
je
clc
inc
clc
sti
jbe
pop
out
push
mov
clc
xchg
dec
popa
add
arpl
add
insl
jecxz
or
push
mov
jle
call
clc
xlat
inc
clc
ret
push
add
int
add
movsb
clc
mov
lcall
leave
fsubs
clc
sub
xor
add
or
cmp
clc
fwait
xchg
mov
add
add
es
stc
jp
push
and
add
and
sbb
stos
iret
jbe
add
push
clc
test
outsl
shrl
and
add
add
clc
das
pop
clc
pop
data16
iret
push
add
jne
add
repnz
add
xchg
mov
repnz
hlt
cmp
jnp
xchg
xabort
add
sub
fnstenv
add
test
mov
pop
mov
clc
add
add
fdivl
add
sbb
xor
add
clc
dec
jmp
jae
add
clc
mul
clc
flds
aad
add
lahf
xchg
adc
add
clc
sbb
add
jmp
insl
cmc
sbb
sar
mov
sbb
imul
push
clc
push
clc
fidivs
mov
idivl
sar
clc
mov
mov
int3
call
mov
mov
clc
sbb
sahf
and
add
add
ljmp
cmp
movsl
clc
lahf
cs
clc
fimull
add
xchg
mov
clc
cmpsb
clc
into
lods
icebp
sbb
test
mov
jne
cmpsl
clc
pushf
xor
add
add
data16
sbb
gs
push
add
or
adc
add
add
inc
add
cmp
inc
clc
xchg
xchg
int3
or
clc
lea
and
add
fcos
mov
bound
add
mov
clc
mov
add
adc
clc
std
sub
add
movsb
clc
call
clc
mov
mov
add
mov
clc
mov
pop
sub
ljmp
nop
addr16
sbb
clc
push
add
add
scas
das
dec
sar
and
rcll
push
clc
sbb
mov
pop
cwtl
repz
mov
cmp
dec
sbb
ret
mov
clc
adc
clc
addr16
out
call
add
lret
and
add
inc
add
sbb
push
ret
inc
add
adc
add
out
xor
add
jp
cmp
clc
pop
push
clc
mov
mov
clc
fnsave
aad
jbe
mov
data16
arpl
add
add
add
clc
adc
add
int3
imul
add
and
jae
pop
lret
push
clc
repnz
sbb
mov
inc
clc
jo
add
cmp
add
push
and
mov
add
sar
inc
clc
mov
mov
push
inc
add
outsb
call
fmuls
xchg
stos
jg
add
insb
fdivl
jns
pop
in
mov
clc
sbb
or
ret
mov
add
sbb
and
add
rolb
add
repz
insl
and
add
and
ret
clc
fcomps
clc
jl
add
ljmp
sbb
add
call
add
sub
cmp
add
push
add
and
jg
hlt
and
add
add
xor
add
add
sbb
nop
mov
cmc
sub
add
push
nop
mov
clc
jbe
xabort
movsl
clc
push
pop
hlt
pushl
add
pusha
add
aaa
jnp
mov
clc
rcll
in
hlt
xchg
testl
cmpsl
clc
sar
push
push
mov
sub
cmp
stos
pusha
add
gs
sarl
clc
lcall
clc
loopne
dec
pop
cmp
xchg
jmp
bound
add
add
and
xlat
lods
sahf
xor
add
clc
cltd
shld
add
add
push
add
xchg
cs
imul
aam
clc
call
cmp
or
xchg
mov
mov
add
movsb
clc
push
std
mov
or
clc
xchg
stos
lock
push
sbb
pop
and
add
mov
jmp
out
xchg
cmp
cmp
insb
jmp
das
dec
fwait
push
add
das
pop
stos
ret
add
push
mov
cmp
add
add
add
insb
and
add
lret
xor
add
add
repz
push
or
lea
dec
sub
add
addr16
fisttps
rolb
add
adc
add
clc
sbb
in
in
push
adc
add
push
add
pop
gs
bound
add
sub
and
add
cmp
imul
add
add
clc
mov
add
in
inc
clc
push
sbb
rol
clc
add
add
add
xabort
repnz
ret
clc
mov
iret
push
sbb
sub
cmpsl
clc
cs
add
in
push
add
fwait
imul
add
js
mov
add
clc
stos
mov
clc
imul
clc
loope
mov
mov
rolb
xchg
dec
and
add
jle
clc
addr16
nop
nop
xor
add
fcoml
dec
stos
xchg
mov
and
add
movhps
add
sub
repnz
in
xchg
notb
add
clc
pop
rol
clc
enter
cli
lods
and
add
mov
out
jg
inc
add
push
enter
add
cmc
xchg
sbb
xchg
adc
add
add
in
adc
dec
fstpl
add
cmp
clc
testb
add
loopne
cld
pop
jp
clc
mov
sbb
add
inc
add
test
cmp
rol
clc
push
repnz
add
clc
push
jnp
add
popf
push
adc
notb
add
sub
and
add
add
pop
call
clc
out
pop
stos
jo
add
je
inc
add
ljmp
mov
clc
jmp
popf
xchg
bound
add
add
ret
add
mov
sub
adc
add
add
and
add
inc
add
test
xchg
not
ja
clc
ds
roll
clc
jae
add
add
push
imul
fidivl
and
add
clc
pop
daa
clc
sbb
add
add
mov
dec
cmp
or
add
add
jo
add
and
add
pop
cwtl
aam
clc
inc
add
pop
pop
rclb
add
out
lods
sub
add
dec
jecxz
lret
xlat
lods
push
mov
sbb
add
xor
add
pop
out
jnp
popf
jne
xor
add
push
add
negb
popf
jne
xchg
test
clc
fidivl
push
add
mov
or
add
movsb
clc
add
fisubl
clc
ret
adc
clc
ljmp
push
je
xbegin
clc
xchg
mov
sbb
xor
add
pop
lock
lret
add
cmp
mov
int3
arpl
add
clc
js
imul
loope
mov
ss
or
clc
xlat
shrb
push
add
sub
scas
jge
xor
clc
adc
clc
push
add
adc
add
mov
or
gs
cmp
adc
add
outsl
cmp
xchg
lret
rcr
push
pop
ret
add
and
add
add
push
ss
mov
add
fstps
jmp
dec
adc
mov
mov
add
and
add
movsb
clc
in
clc
cmpsb
clc
aas
mov
clc
dec
and
add
add
je
sbb
shlb
add
add
add
mov
jg
rcr
ret
add
inc
add
jl
add
dec
add
add
or
mov
repnz
cmp
es
das
mov
cs
test
lret
fadd
clc
push
push
cmp
in
loopne
or
in
jo
add
add
fiaddl
add
add
inc
add
je
sbb
clc
mov
aam
xchg
cmp
cmp
dec
leave
rcll
add
mov
movsb
clc
sub
clc
aam
rol
clc
mov
pop
push
jmp
xchg
mov
cmp
add
xor
add
nop
fcomps
cld
push
jnp
clc
mov
lea
add
inc
clc
cmpsb
clc
cwtl
push
mov
add
mov
add
add
jl
clc
daa
clc
pop
jne
add
pop
and
add
add
fcmovb
clc
inc
clc
push
add
ret
xchg
loope
cmp
jecxz
ja
xchg
out
and
add
clc
inc
clc
add
repnz
add
clc
fnstcw
dec
add
add
jae
add
rcll
add
cmp
stc
inc
add
xchg
cmp
bound
add
call
mov
lret
test
pop
and
out
xor
mov
repz
mov
das
in
pop
clc
daa
clc
fcom
daa
clc
mov
add
and
add
jb
add
clc
add
add
mov
cmp
out
dec
cli
jp
or
stos
sar
jmp
jmp
clc
std
arpl
add
add
inc
clc
pushf
int3
in
incl
add
push
add
add
hlt
jp
jne
jno
add
in
or
dec
and
add
xbegin
xchg
pop
sbb
cltd
xchg
leave
inc
add
mov
clc
dec
clc
insb
loope
push
add
mov
outsl
sar
clc
jns
sti
jno
add
incb
add
push
clc
aam
repz
repz
jp
clc
xchg
xor
clc
add
add
add
add
int3
push
sahf
hlt
cltd
mov
clc
sarl
add
jno
add
lcall
pop
or
movsl
clc
inc
clc
push
or
mov
adc
aaa
add
add
add
jo
add
add
cmp
lcall
sahf
mov
add
xchg
push
lods
pop
and
add
lock
add
or
outsb
insl
jnp
push
add
add
add
jg
push
add
imull
inc
clc
pop
push
xor
add
xchg
jecxz
mov
clc
ja
fdivrs
test
clc
xor
add
ss
clc
xchg
stos
adc
xchg
mov
int3
sbb
add
add
stc
daa
clc
test
or
mov
inc
clc
pop
clc
insl
sar
sbb
sbb
dec
loopne
addr16
inc
add
or
inc
add
int
add
call
sub
cmp
in
jecxz
clc
inc
add
mov
clc
stc
and
adc
add
add
dec
movsl
clc
sar
clc
hlt
sub
clc
ja
pop
loop
ljmp
es
cltd
mov
add
enter
daa
clc
xlat
das
push
add
xlat
jmp
add
add
add
xor
add
push
cmc
sub
inc
add
cli
xchg
loopne
cmp
clc
popa
add
and
add
clc
pop
xchg
mov
adc
sub
cmpsb
clc
enter
add
aam
mov
clc
add
add
add
cmp
clc
loopne
and
add
add
cli
mov
clc
je
and
add
mov
or
repnz
ds
sub
aad
jnp
fidivrs
mov
clc
push
xor
add
add
and
cmp
mov
clc
jb
add
sarb
and
add
cmp
clc
push
test
jb
add
add
pop
js
add
je
imul
repz
dec
dec
and
add
push
add
mov
jns
and
es
repz
clc
jmp
inc
add
mov
push
add
push
add
into
mov
or
and
add
mov
add
lods
test
daa
clc
mov
lods
pop
jle
xor
add
clc
gs
sbb
add
push
das
je
sar
push
mov
cmp
and
add
add
clc
inc
add
fcoms
clc
outsb
mov
and
out
roll
add
add
add
clc
cld
sbb
into
xchg
fsubrl
add
dec
push
inc
add
jbe
adc
add
dec
stos
dec
pop
ja
mov
add
movsl
clc
test
lods
lret
jmp
xabort
sub
mov
clc
bound
add
add
add
push
sar
cmp
add
gs
xabort
clc
jae
add
add
clc
cmc
sub
clc
xchg
xor
add
lods
cmc
dec
jbe
add
mov
push
outsl
push
add
pop
call
inc
clc
ret
dec
outsb
pop
gs
jns
clc
iret
sbb
add
clc
and
add
dec
clc
dec
sar
add
add
mov
xor
add
daa
clc
xor
add
fiadds
std
xchg
xchg
sti
and
sub
mov
es
inc
add
insb
or
cwtl
daa
clc
je
push
add
out
mov
pop
mov
clc
lods
cwtl
push
stc
inc
add
jp
cld
and
fsub
clc
pop
das
push
ficoms
dec
xchg
ret
clc
loope
sbb
clc
pop
clc
sbb
clc
and
add
add
add
mov
and
add
cltd
pop
lahf
addr16
arpl
add
push
inc
clc
sarb
sub
and
add
add
clc
xchg
test
or
add
and
add
in
in
cmp
jno
add
lods
cltd
cltd
bound
add
out
gs
push
add
repnz
daa
clc
sub
mov
clc
in
jp
clc
add
add
add
and
add
pusha
add
mov
cmp
clc
and
add
rolb
mov
clc
lret
xor
clc
aad
clc
popf
jne
xbegin
clc
cltd
mov
lret
addr16
dec
aam
cmp
sub
clc
push
lock
add
aam
clc
mov
mov
add
out
shlb
cmc
mov
clc
cmc
xor
add
clc
jmp
int3
mov
adc
inc
add
cmp
pop
clc
fdivl
add
jecxz
mov
mov
xabort
lahf
rorl
add
cmp
add
add
add
add
sbb
fldenv
add
movsl
clc
cmpsl
clc
or
adc
add
add
out
divb
add
leave
mov
clc
push
add
mov
push
int
pop
clc
and
aam
outsl
add
add
fwait
imul
daa
clc
dec
ja
ds
pop
mov
add
aam
pop
jb
add
clc
mov
push
and
add
addr16
stc
adc
add
push
clc
xabort
clc
ret
mov
ret
add
in
insb
pop
clc
cmp
cltd
xchg
mov
repnz
xbegin
add
push
sub
add
push
movsl
clc
inc
clc
xchg
outsb
add
add
add
add
add
add
xlat
xchg
lcall
scas
icebp
fs
sar
testb
xchg
rdmsr
add
or
xchg
mov
arpl
add
mov
push
add
out
xor
add
add
sbb
mov
and
add
pop
stc
mov
add
push
mov
and
add
push
insl
xor
stos
cmp
clc
mov
or
fptan
jne
cmp
clc
arpl
add
clc
cmpsb
clc
xor
add
clc
push
dec
outsl
dec
mov
clc
fdiv
cs
sar
sub
idivl
call
leave
mov
mov
in
aaa
ljmp
clc
xchg
pop
call
dec
pop
or
out
addr16
pop
mov
clc
jbe
or
add
mov
cmp
test
loop
int
adc
add
push
clc
cmp
clc
push
clc
out
push
xchg
push
insb
cs
aam
fsub
clc
dec
mov
mov
clc
cli
rorl
add
pop
clc
cmp
sbb
or
clc
stos
mov
clc
pop
fs
cli
or
add
add
in
adc
add
mov
lods
cs
sub
js
push
imul
lock
xlat
je
clc
mov
add
add
imul
lret
int
cli
outsb
lret
scas
shr
jp
nop
add
add
fistpll
add
mov
clc
and
add
test
clc
dec
cmp
add
arpl
add
add
and
add
clc
xchg
sar
ds
frstor
add
into
enter
add
add
stos
ret
sar
test
clc
cmp
jno
mov
add
leave
lods
and
xabort
inc
clc
cmp
lea
pop
sbb
or
clc
mov
push
dec
push
aam
clc
sbb
insl
mov
cmp
fwait
pop
clc
cwtl
xchg
into
mov
clc
pop
fwait
add
add
sbb
add
add
jne
sbb
lods
dec
mov
ljmp
jle
jo
add
add
add
jo
add
mov
dec
ljmp
or
add
add
cmpsb
clc
testl
jp
clc
xor
clc
popf
imul
add
inc
add
add
add
es
clc
out
pop
pop
aas
imul
inc
clc
enter
add
push
or
ret
mov
repnz
or
jne
push
clc
nop
fs
or
clc
notb
add
pushf
dec
insl
imul
add
popa
add
pop
loope
bound
add
add
add
mov
push
add
push
add
insb
add
add
or
inc
add
adc
add
push
clc
xchg
xor
add
cmp
add
add
popa
add
or
mov
fisubl
clc
shl
sub
clc
sahf
movsl
clc
int
clc
leave
jo
add
add
dec
mov
add
cmpsl
clc
xchg
ds
add
iret
fmuls
fwait
and
add
sar
xchg
add
add
stc
or
std
test
lret
lods
pop
push
fnsave
add
gs
add
add
add
test
stos
ret
cld
sbb
add
mov
xchg
cmpsl
clc
dec
sbb
lahf
add
add
mov
aaa
push
negl
fcoml
clc
fsub
clc
mov
add
mov
clc
aad
adc
add
add
or
in
testb
sub
aad
repnz
add
pop
jae
add
clc
icebp
mov
add
clc
and
push
mov
movsl
clc
and
add
clc
jne
add
jbe
add
ds
clc
or
int
mov
ficompl
aad
and
add
sub
dec
loop
mov
clc
pop
dec
es
inc
add
out
add
add
add
add
je
xchg
addr16
xor
add
aaa
stos
data16
and
add
add
div
inc
clc
sti
cmp
inc
clc
xbegin
lcall
out
jbe
add
xchg
pushf
push
add
test
xchg
int
clc
mov
jo
add
pop
imul
clc
add
add
add
clc
xbegin
xor
add
push
jmp
add
add
add
clc
mov
clc
push
add
gs
xlat
mov
xbegin
clc
leave
mov
scas
dec
push
imul
add
adc
add
out
out
xabort
inc
add
xchg
cmc
xor
add
sub
add
push
mov
mov
jae
add
mov
clc
rcll
bnd
and
add
lret
sbb
clc
push
dec
fstpt
leave
clc
int
clc
enter
adc
add
clc
cmp
inc
add
sub
jbe
mov
iret
dec
xchg
or
pop
jns
pop
jge
clc
stc
mov
sbb
push
or
fldt
add
add
insb
dec
int3
arpl
add
or
add
clc
popf
pop
xor
add
add
test
add
xchg
mov
fldl
add
clc
int3
inc
clc
js
add
ret
clc
pop
sbb
push
sub
xchg
ljmp
fcmovb
clc
mov
add
cld
inc
clc
mov
pusha
add
push
add
arpl
add
mov
add
push
sub
add
clc
cwtl
xchg
cmc
ficoml
push
pop
clc
out
flds
add
xchg
lret
add
add
lcall
push
adc
add
sar
pop
jmp
add
mov
cmp
jo
add
cli
push
mov
clc
cwtl
pop
or
iret
and
inc
add
mov
xor
add
insl
stos
add
add
clc
add
push
int
clc
mov
or
clc
jge
dec
pop
jo
add
scas
jg
clc
add
add
add
cmp
clc
jbe
dec
sbb
mov
push
add
push
jo
add
add
clc
mov
repz
add
jb
add
add
pop
jo
add
out
jnp
pop
cmp
xchg
mov
std
push
mov
clc
push
add
push
clc
fiaddl
add
cmp
clc
xchg
pop
mov
out
lods
ret
clc
mov
clc
hlt
in
inc
add
clc
mov
sub
push
add
jmp
cmp
clc
je
fcoms
clc
and
mov
clc
jl
add
lcall
nop
test
mov
cmp
pop
test
add
loop
fcompl
arpl
add
cmpsb
clc
xchg
sub
add
test
pop
out
dec
adc
mov
add
add
clc
cmc
and
or
add
clc
ret
neg
mov
clc
dec
or
cld
insl
mov
cmp
clc
jb
add
add
clc
scas
fildl
rcrb
mov
xchg
xor
add
push
add
jns
jnp
xchg
adc
add
add
inc
add
out
iret
mov
clc
push
add
out
js
punpckhdq
mov
clc
mov
iret
sbb
add
sahf
push
add
add
add
dec
adc
sbb
clc
jg
and
lea
clc
dec
inc
clc
mov
clc
ljmp
shrl
cmpsb
clc
stos
push
add
mov
cmc
and
add
add
xchg
adc
add
clc
and
add
add
setg
pop
mulb
add
addr16
add
and
test
push
ljmp
ds
mov
fistpll
xor
or
cmpsl
clc
out
outsb
addr16
repz
add
in
xchg
pop
arpl
add
rorl
clc
outsb
add
add
pop
std
sub
and
sar
adc
cmp
clc
inc
clc
or
or
add
add
add
xabort
clc
pop
xbegin
lock
cmpsb
clc
adc
add
test
lods
and
add
clc
and
out
push
add
sar
xchg
cmp
add
test
test
pop
cli
push
lods
jne
clc
mov
imul
fimull
ret
iret
sbb
inc
clc
jl
in
and
add
jno
add
mov
add
push
clc
je
clc
push
add
sar
sbb
push
adc
add
jecxz
xor
add
add
add
testb
mov
clc
add
add
xor
add
add
int3
jnp
clc
mov
add
xchg
push
xchg
jnp
mov
in
jno
add
clc
pop
into
sar
add
out
mov
clc
push
add
popf
mov
clc
imul
jne
sar
clc
pusha
add
out
and
add
pop
mov
clc
dec
clc
adc
lret
imul
clc
aas
mov
pop
clc
mov
clc
sbb
cmp
or
add
outsb
adc
dec
mov
sub
arpl
add
add
clc
push
push
sbb
clc
clc
lahf
lahf
jge
clc
mov
clc
pushf
add
add
ljmp
add
add
ret
clc
push
mov
xor
add
mov
lahf
std
inc
clc
loopne
add
cwtl
mov
cltd
xor
clc
dec
mov
add
dec
bound
add
add
jo
add
xchg
dec
mov
cmpsl
clc
ja
test
stos
sub
clc
sbb
add
adc
push
jecxz
pop
in
mov
clc
repz
sar
adc
add
sbb
inc
clc
pop
dec
xor
add
clc
popa
add
sahf
inc
add
lods
sub
xchg
pop
cmp
push
add
into
cmp
sar
cmp
gs
daa
clc
push
add
mov
clc
mov
mov
add
mov
xchg
and
push
cld
xabort
je
mov
insb
push
pop
xchg
dec
outsb
lock
add
clc
rorl
lret
xor
add
clc
repnz
popf
pusha
add
push
dec
sbb
repnz
add
clc
in
push
sahf
xor
add
and
add
pushf
pop
sbb
daa
clc
faddp
clc
push
add
int3
adc
add
adc
add
cmp
add
add
in
adc
add
mov
adc
add
fcoml
add
dec
mov
clc
mov
pop
clc
jp
push
cmp
ja
clc
dec
and
add
push
lods
and
add
cmp
push
jmp
cmp
cmp
jg
jno
add
xchg
fdivrs
clc
mov
dec
das
iret
fstps
and
cmp
clc
mov
inc
add
cmc
fadds
add
mov
mov
clc
jmp
fcompl
lahf
xchg
sub
sub
clc
data16
jg
clc
pop
sub
int
enter
icebp
fcoml
and
sub
cmpsl
clc
loope
ficompl
clc
ds
xbegin
add
clc
rol
clc
ljmp
out
sub
clc
mov
dec
jp
clc
and
add
add
jp
je
or
add
leave
loop
push
add
add
add
pop
repnz
test
add
xchg
and
add
add
push
cmp
stc
loopne
lcall
add
clc
aas
cmpsl
clc
popa
add
cmp
add
es
push
add
add
clc
mov
clc
popa
add
xor
dec
lea
clc
xchg
loopne
cmp
daa
clc
xor
add
xchg
das
sbb
add
add
fidivl
push
aaa
nop
shrl
imul
add
jne
dec
std
sbb
pop
jl
fstl
sub
clc
jle
sbb
fnsave
jmp
test
clc
in
aaa
imulb
fsts
add
sub
mov
xchg
xchg
cmp
jecxz
jbe
clc
inc
add
xchg
iret
leave
jge
into
sti
ret
clc
mull
add
jnp
jmp
add
jp
sahf
pop
pop
clc
gs
cmp
pop
pop
stc
cltd
jo
add
fwait
nop
mov
clc
xchg
ficomps
cmp
push
clc
clc
cmpsl
clc
cmp
clc
cmp
fwait
imulb
push
add
aad
mov
push
clc
in
icebp
sbb
jge
xchg
into
cmp
out
repnz
scas
lock
add
loope
sbb
add
clc
lahf
cmp
clc
fmull
xchg
xchg
add
add
stos
add
fldt
es
dec
lea
fdivs
add
cmp
cmp
cmp
or
push
dec
jle
pop
mov
add
jno
add
mov
mov
imul
add
inc
clc
cmp
out
mov
out
scas
test
mov
mov
mov
add
clc
std
push
push
add
sbb
mov
add
bound
add
fcompl
or
add
es
lea
lret
cs
icebp
aaa
fwait
dec
jns
out
rep
fildl
jecxz
jecxz
xbegin
push
cmpsb
clc
cmp
imul
xlat
dec
jmp
push
push
add
sub
mov
add
and
add
clc
mov
mov
cmc
in
scas
adc
add
dec
mov
fld
clc
sbb
ja
jns
leave
repz
and
add
mov
mov
dec
stos
jnp
clc
xchg
mov
push
add
pminub
add
push
add
inc
clc
cld
cltd
jno
add
mov
sar
jo
add
add
nop
add
icebp
push
inc
clc
sbb
clc
stc
popf
xor
add
outsb
cmp
lods
cli
jl
and
sub
clc
into
jnp
mov
add
mov
repz
cmp
pusha
add
jb
add
enter
pop
add
add
xchg
and
add
mov
add
jnp
clc
repnz
mov
cmp
sbb
pop
xabort
clc
push
fsubp
clc
mov
cltd
sarl
jge
punpckhwd
imul
push
clc
sub
clc
dec
dec
scas
aam
clc
xor
xchg
adc
add
test
adc
add
adc
add
clc
mov
clc
mov
cmp
clc
pop
and
add
sti
xchg
cli
mov
inc
add
or
and
add
mov
push
add
xor
add
add
add
add
stos
mov
xchg
loop
pop
clc
cmp
in
mov
add
test
clc
xor
add
xchg
stos
pop
lret
clc
hlt
enter
out
jge
out
insl
or
cmp
clc
push
repnz
es
arpl
add
push
fwait
cwtl
xlat
dec
jbe
iret
pop
fidivrl
fdivrl
jmp
lret
sbb
and
add
es
idivl
clc
jns
or
clc
inc
clc
incb
add
cs
aad
clc
pop
or
sar
ds
clc
scas
fsubl
rcrb
clc
rolb
clc
mov
sti
cld
sbb
adc
jmp
mov
adc
add
add
add
cmp
sbb
add
icebp
loop
xlat
or
xabort
mov
jl
clc
mov
jg
insb
and
add
pop
out
pop
mov
clc
mov
clc
adc
clc
mov
xchg
jle
push
clc
mov
clc
xor
add
outsl
and
sahf
icebp
stos
jne
push
add
dec
fld
clc
push
nop
in
mov
mov
add
add
loop
jl
nop
mov
sar
add
cmc
adc
add
aam
mov
sub
add
cmp
clc
mov
mov
in
cwtl
sub
and
add
dec
cwtl
mov
add
popa
add
xchg
loopne
cs
clc
sarb
mov
xlat
int
clc
and
add
ficoml
aas
mov
clc
adc
add
xchg
jmp
xchg
xchg
loop
movsb
clc
imul
in
pop
clc
adc
clc
cmp
add
add
aam
clc
and
rclb
add
stos
pop
cmpsl
clc
test
add
add
clc
lret
add
clc
mov
fld
clc
or
add
pop
sbb
jns
mov
add
pop
hlt
call
add
xchg
pop
shrb
clc
xlat
sbb
clc
sub
iret
mov
je
in
test
out
adc
push
sar
add
and
add
shr
cmp
pop
cmp
fdivs
add
mov
clc
or
repz
add
imul
jnp
mov
clc
rcrl
ss
mov
clc
jle
fiadds
add
inc
add
push
pop
adc
add
add
sub
push
add
cmp
clc
push
add
cmp
int3
mov
clc
push
add
sbb
clc
adc
add
add
add
add
in
jne
mov
sub
add
je
cwtl
cmp
xchg
dec
add
add
and
inc
clc
imul
add
add
push
clc
into
out
jnp
imul
add
push
pop
sbb
iret
aas
in
cmp
mov
add
test
push
xchg
sbb
fisttpll
inc
add
lock
testl
test
dec
mov
clc
xor
add
add
add
ja
cmpsl
clc
ss
add
loope
xor
add
clc
mov
fwait
aas
dec
ret
clc
or
clc
pop
jo
add
sbb
pushf
clc
cmp
clc
sub
mov
mov
xchg
mov
arpl
add
lret
cwtl
cltd
call
add
inc
add
outsb
or
and
add
add
inc
clc
lahf
into
call
clc
movsl
clc
inc
add
insl
das
sbb
clc
mov
clc
mov
rcrl
data16
rcrb
add
mov
out
mov
into
roll
add
js
add
inc
clc
pusha
add
ljmp
cli
and
add
pop
jp
add
inc
add
inc
add
lock
lahf
push
dec
dec
jmp
pop
xchg
and
add
xabort
clc
add
add
data16
jecxz
shlb
sbb
add
add
push
pop
out
cmp
add
add
cmp
fiaddl
jmp
mov
pop
out
add
add
negb
test
aas
sar
lcall
add
fbld
add
jnp
add
mov
repnz
xchg
jae
add
clc
pop
sub
mov
xchg
in
xchg
sub
mov
add
add
scas
fldt
gs
rep
push
popf
bound
add
movsl
clc
jmp
xchg
test
mov
jno
add
leave
pusha
add
aam
clc
or
clc
sub
clc
xchg
jns
pop
imul
ss
dec
add
add
add
cmp
push
clc
inc
add
mov
clc
scas
lahf
push
pop
mov
int3
and
cs
xor
jmp
clc
imul
cmp
in
sbb
inc
add
lahf
cld
stos
or
clc
popa
add
into
gs
mov
clc
sar
pop
mov
add
jmp
clc
ja
fsubl
and
add
add
lods
inc
add
out
mov
leave
dec
ror
movsb
clc
ficompl
clc
push
cltd
adc
add
clc
jno
add
adc
add
inc
clc
cmp
mov
lea
insb
out
rsm
dec
jg
in
imull
sbb
pop
mov
adc
add
negl
arpl
add
fsubl
add
lcall
add
clc
pop
incb
add
mov
add
add
sbb
bnd
clc
stos
data16
sar
ds
dec
and
add
lock
mov
add
aas
aam
cwtl
add
add
add
cmp
in
jl
add
pushf
test
leave
dec
xlat
cmp
add
test
in
jmp
movsb
clc
insl
sub
clc
adc
pop
ret
mov
pop
clc
addr16
dec
jmp
fcmovnbe
adc
clc
xchg
or
nop
xor
add
or
es
jp
clc
aam
add
inc
clc
cmp
cmp
stos
xchg
pop
sub
xor
cmpsl
clc
push
ret
push
jl
dec
lret
jo
add
mov
add
addr16
fsubrl
dec
nop
cmpsl
clc
cmp
je
clc
adc
add
div
fs
xchg
push
out
ret
clc
cmp
push
xchg
fldt
and
add
clc
aaa
addr16
aaa
or
add
add
add
or
add
adc
add
incl
clc
and
add
push
add
sbb
ret
clc
jg
mov
ds
push
arpl
add
push
add
fs
pop
cmp
out
je
mov
clc
outsb
data16
ficompl
jecxz
jecxz
das
mov
sbb
outsl
arpl
add
and
adc
add
add
add
dec
push
clc
incb
jge
clc
bound
add
shlb
gs
sbb
sbb
sahf
add
add
clc
add
add
inc
add
jp
jnp
clc
adc
add
mov
imulb
adc
add
movsb
clc
faddl
clc
adc
add
adc
add
dec
xchg
sbb
add
dec
mov
add
add
mov
jbe
sti
out
jne
int3
imul
cmp
add
dec
sti
divl
loope
out
out
movsl
clc
mov
clc
cmc
lods
mov
add
xchg
xchg
rcrb
add
add
clc
daa
clc
lahf
pop
mov
add
clc
sub
dec
loope
int
shll
notl
add
outsl
jp
repnz
fs
call
bound
add
add
sub
add
xor
add
add
clc
sti
pop
or
add
push
rcr
jmp
cmp
add
push
adc
pop
mov
xor
add
clc
mov
add
scas
jno
add
mov
cld
dec
cmpsl
clc
xor
xor
push
add
pop
into
mov
or
cmp
push
das
xchg
loop
sbb
inc
add
mov
xor
and
add
add
clc
fcomps
clc
push
add
sti
dec
es
push
add
cmp
adc
add
sar
mov
popf
add
mov
out
in
pextrw
stc
iret
ret
clc
mov
inc
clc
jmp
sbb
and
add
adc
add
clc
adc
and
loop
repnz
in
jae
add
add
mov
cld
imul
bound
add
add
sbb
inc
clc
push
sbb
into
mull
sbb
or
mov
add
and
add
add
ficoml
push
clc
arpl
add
cwtl
cmc
std
adc
add
mov
sbb
clc
fxch
sahf
into
idivb
clc
in
or
add
fs
lret
add
aam
adc
add
dec
fucomi
push
sub
popa
add
sahf
sbb
clc
rcr
mov
add
add
adc
add
in
inc
clc
aam
clc
mov
lock
add
mov
add
cmc
jle
xchg
xchg
mov
clc
aaa
push
stos
push
add
mov
dec
shrb
imul
add
aaa
sub
inc
add
xabort
inc
add
cmp
add
dec
jecxz
popf
cpuid
clc
pop
repnz
in
xbegin
xlat
cmovl
stc
insl
sbb
add
fdivs
add
repz
add
sbb
gs
pop
xor
clc
mov
xlat
aas
mov
bound
add
outsb
push
loop
lahf
cmp
cmpsl
clc
push
add
add
stc
pushf
xchg
ret
clc
fdivs
add
adc
add
clc
outsb
loope
and
sub
clc
fwait
cmp
and
mov
clc
sub
jp
clc
in
xor
adc
add
add
add
jns
std
iret
xbegin
ss
add
mov
clc
ja
test
jle
xor
clc
adc
add
and
add
add
out
cld
sbb
add
adc
cs
clc
aas
mov
clc
xchg
bound
add
movsl
clc
sbb
sub
pop
cmp
clc
mov
inc
clc
fcmovb
clc
push
add
mov
add
or
xabort
add
lret
adc
add
and
add
testb
cwtl
or
add
or
inc
add
mov
ror
adc
in
push
dec
addr16
add
jo
add
add
mov
push
add
push
cmp
test
add
cmp
imul
lods
mov
ljmp
add
sar
sbb
clc
mov
out
jne
adc
add
cmp
pop
adc
add
push
add
lods
cmp
inc
add
test
pop
clc
notb
add
push
push
mov
clc
push
icebp
dec
iret
inc
add
cmp
add
xchg
xchg
aam
sbb
xchg
dec
sar
rorl
gs
xchg
sub
add
jl
cmpsb
clc
mov
push
mov
lret
add
pop
sbb
jmp
sbb
popl
add
cmp
xor
add
add
jmp
clc
push
cmp
lea
stc
fnsave
add
add
out
push
sub
clc
xchg
xchg
hlt
call
clc
incb
add
xchg
mov
vmovups
add
inc
add
cmpsl
clc
push
mov
movsl
clc
ja
add
imul
fwait
lods
faddp
clc
mov
jne
clc
mov
in
jo
add
mov
add
aas
mov
fidivrl
inc
clc
and
clc
push
push
mov
or
and
add
aad
adc
add
clc
adc
add
mov
into
jno
add
clc
xor
add
movsb
clc
mulb
add
js
sar
scas
and
add
aas
in
stos
test
or
add
adc
movsl
clc
das
ss
fucomp
cmp
clc
xchg
mov
add
mov
and
mov
cmp
fisubl
jae
add
repz
inc
clc
push
add
sub
push
push
mov
clc
nop
mov
cmp
hlt
xchg
lret
add
sar
xabort
add
testl
cltd
fildll
xchg
mov
cmp
clc
shrl
fsts
and
add
add
add
add
out
imul
clc
lods
jecxz
jecxz
stos
xchg
push
sub
add
dec
sar
xchg
push
ret
daa
clc
outsb
test
fisubrl
push
mov
add
clc
jmp
out
jmp
in
incb
clc
pop
adc
addr16
sahf
or
clc
sub
adc
add
and
add
mov
xchg
sti
imul
mov
add
dec
mov
fs
pop
cmp
int3
xchg
jecxz
xchg
pop
aaa
jge
clc
xor
add
clc
cmp
push
cmp
pusha
add
push
add
iret
gs
cmp
add
cwtl
test
bound
add
in
fisubrl
dec
bound
add
add
add
movsb
clc
sbb
inc
clc
out
movsl
clc
mov
out
fwait
pop
fnstsw
add
cmp
movsb
clc
mov
mov
adc
add
xabort
push
cs
stc
seta
cmpsl
clc
xchg
and
add
and
add
jp
popf
fs
cs
aad
dec
push
add
push
clc
ljmp
imul
repnz
clc
vmread
cmp
pushf
fisttpl
inc
add
mov
fwait
cmpsl
clc
jecxz
push
add
lahf
rcrb
outsb
dec
pop
clc
out
outsl
adc
add
add
cltd
dec
test
sbb
js
adc
add
clc
and
or
clc
inc
add
add
add
dec
mov
add
stos
test
stc
fs
lea
add
jns
add
pop
ret
clc
cld
fsqrt
cmp
cmp
clc
xor
fdiv
por
clc
cli
mov
add
jno
add
insb
mov
cmp
int
and
add
inc
add
cmp
test
loope
xchg
or
ss
clc
popf
xabort
push
push
add
and
add
pop
clc
xchg
aam
clc
idiv
je
clc
cwtl
cld
jns
and
add
clc
jne
idivb
add
jecxz
jecxz
push
jns
leave
test
mov
sets
mov
clc
mov
adc
ja
clc
xor
push
add
call
not
cmp
clc
ds
int3
jle
jns
clc
pusha
add
inc
clc
mov
sub
adc
add
pop
clc
outsb
pusha
add
cwtl
jno
add
clc
out
xchg
scas
lret
clc
test
insb
or
enter
addr16
dec
imul
or
jp
jmp
add
add
add
add
mov
cli
pop
iret
jp
clc
ret
clc
push
popf
mov
add
in
loop
pop
fwait
add
add
mov
clc
pop
jge
jmp
clc
je
lods
adc
clc
xor
add
add
jecxz
push
inc
add
aas
sbb
loop
pop
jmp
clc
mov
clc
jl
cmc
jae
add
xchg
sbb
add
push
add
dec
pop
clc
fmuls
addr16
nop
aaa
pop
cmp
push
push
aas
pop
ficompl
add
fisubs
add
ds
mov
lods
xor
clc
aad
rcrl
in
movsl
clc
xor
add
add
jbe
outsb
sbb
clc
sub
add
std
cwtl
into
rol
clc
and
add
jb
add
add
add
pop
adc
add
add
push
add
leave
inc
clc
adc
add
add
in
or
mov
add
out
clc
mov
mov
mov
clc
push
inc
add
lods
cmp
push
lahf
stos
mov
lods
and
or
add
sbb
add
cmp
add
mov
clc
xchg
push
add
add
fs
add
add
mov
pushf
out
inc
add
aam
clc
movsb
clc
dec
xchg
sti
test
rolb
add
mov
add
dec
mov
and
add
movsb
clc
lret
sub
clc
mov
or
loopne
out
insb
mov
clc
cmp
mov
sbb
add
lods
ja
cmp
xchg
imul
clc
int3
lret
in
arpl
add
lods
xchg
and
xchg
push
dec
outsl
inc
clc
xor
add
aaa
adc
ss
clc
pop
xbegin
clc
movsb
clc
and
add
in
pop
cmp
clc
shrb
add
roll
add
stc
daa
clc
out
mov
adc
add
jl
fwait
dec
push
add
aaa
mov
mov
add
sub
in
mov
test
mov
call
sub
jg
mov
add
mov
xchg
bound
add
cmp
stos
mov
adc
add
ljmp
inc
add
adc
dec
mov
push
jb
add
cmp
mov
clc
add
add
iret
and
add
add
adc
add
clc
test
mov
repnz
pop
mov
pop
clc
jns
clc
fmull
sbb
add
jl
and
jne
test
adc
add
inc
add
divb
add
add
jmp
gs
cli
ret
clc
inc
add
add
add
jg
mov
sub
clc
cmp
mov
repz
and
cmp
clc
push
dec
cmp
add
add
mov
clc
inc
add
mov
ret
add
mov
add
fisubl
add
loop
xor
add
pop
xor
add
clc
cmp
xchg
xbegin
sub
jno
add
lahf
in
outsl
push
or
mov
add
or
mov
mov
clc
push
add
bound
add
clc
mov
pop
or
add
mov
das
and
dec
cmp
xchg
inc
clc
sar
std
pop
sar
add
add
jae
add
cmp
mov
add
jp
dec
rorl
cli
dec
jno
add
add
xor
add
jl
add
je
add
or
cmpsb
clc
test
lahf
clc
ret
clc
aam
clc
sar
add
daa
clc
or
jns
add
inc
add
jge
jns
xor
add
fcom
add
add
sub
leave
iret
stc
xchg
adc
popa
add
int
add
repnz
clc
decl
arpl
add
fldenv
mov
add
pop
clc
xchg
mov
lods
sub
in
leave
adc
pop
nop
loopne
jne
inc
add
mov
dec
repnz
or
add
adc
add
inc
add
pop
movsb
clc
out
mov
dec
movsl
clc
push
add
leave
idivb
add
mov
lahf
idivl
scas
push
pop
xor
add
xor
add
or
aad
ja
clc
xor
add
add
int3
sahf
jns
sti
icebp
lahf
mov
add
jbe
arpl
add
sbb
add
stos
push
test
push
add
cmp
inc
add
fdivrp
mov
sbb
clc
cmp
mov
clc
add
add
add
dec
loopne
stos
mov
and
xabort
clc
ljmp
dec
and
add
clc
xabort
pop
data16
xor
add
add
clc
fisttps
pop
aam
ror
jno
add
clc
adc
add
ljmp
jno
add
rcl
cmp
clc
or
add
mov
lods
sar
cltd
dec
popf
mov
adc
add
clc
lods
aad
nop
je
clc
mov
add
jns
faddl
mov
clc
clc
push
or
xchg
jp
test
mov
dec
outsl
movsl
clc
fcomp
jnp
pop
inc
add
repnz
clc
jnp
enter
lods
popf
xor
add
jge
ds
add
jno
add
push
add
jecxz
jg
aaa
call
cld
add
add
add
daa
clc
insl
or
cmp
cmpsl
clc
inc
clc
pop
ljmp
or
clc
fimuls
arpl
add
or
das
or
mov
cmp
or
add
movsb
clc
fildl
add
in
cmp
add
add
add
sub
ja
xbegin
clc
or
sahf
test
ret
clc
pop
clc
xchg
mov
jle
pop
pop
pop
testb
jecxz
xchg
jmp
cmp
mov
add
cmovl
or
adc
add
add
adc
add
add
pop
mov
push
inc
clc
adc
add
add
inc
add
pop
divb
add
cli
mov
dec
sbb
push
add
fsubrl
xor
add
push
inc
clc
pop
je
sub
and
add
clc
mov
mov
mov
clc
mov
add
arpl
add
add
add
clc
lret
enter
cmp
cmp
push
clc
jno
add
add
into
repnz
aad
aaa
mov
add
int3
loop
mov
clc
xchg
data16
push
clc
adc
inc
add
movsb
clc
or
sbb
clc
mov
cmp
adc
add
dec
cmp
adc
pushf
mov
dec
int3
iret
fwait
adc
add
clc
xlat
mov
ds
clc
ret
clc
sub
add
sarl
mov
inc
clc
xbegin
inc
clc
ss
mov
popf
scas
cmp
jl
clc
ja
call
add
jns
pop
xor
repnz
stc
pop
call
fdiv
or
pop
lcall
add
sub
loop
bt
xchg
xlat
popf
scas
xor
ret
add
mov
clc
movsb
clc
ss
ss
and
mov
rcl
fnstenv
clc
push
add
mov
add
outsl
shll
out
aas
fldl
add
xchg
inc
clc
sbb
xabort
add
aaa
outsl
xchg
push
adc
add
add
jbe
inc
add
and
lahf
cld
call
pop
xor
fcompl
loopne
lods
mov
jo
add
xbegin
mov
scas
jb
add
clc
in
jle
addr16
push
push
jl
cmp
popf
in
scas
add
lret
add
jmp
cmp
pushf
push
add
jno
add
add
clc
mov
sub
xor
add
insl
cld
jle
mov
popf
dec
mov
bswap
iret
cmp
bound
add
adc
add
add
fstpl
xlat
add
add
add
inc
clc
xchg
cmp
cli
popa
add
cs
clc
dec
mov
add
cmpsb
clc
es
movsb
clc
mov
clc
lods
dec
mov
add
arpl
add
add
add
pop
das
fdivrs
clc
test
das
lahf
stos
lahf
mov
test
xchg
push
add
cmpsl
clc
push
clc
iret
jnp
push
daa
clc
clc
out
insb
cmp
clc
insb
mov
fndisi(8087
clc
and
add
inc
add
popf
pop
fisttpll
add
jno
add
add
mov
clc
add
mov
dec
in
sbb
add
push
in
fldenv
add
mov
testl
cmp
clc
pop
clc
call
cmp
inc
add
into
test
in
repnz
lret
loope
mov
xchg
dec
push
adc
add
sub
xor
add
repnz
cmp
adc
clc
outsb
gs
xor
add
clc
mov
js
add
or
push
add
jne
clc
mov
inc
clc
lods
sub
add
insl
std
xlat
pop
shr
arpl
add
addr16
cmp
add
add
pushf
lods
pop
pop
loopne
testl
clc
sub
add
popf
mov
aad
mov
clc
lea
pop
out
imul
push
roll
mov
mov
add
add
repz
xor
add
clc
mov
insl
inc
clc
into
clc
mov
adc
add
clc
push
add
cmp
jne
xabort
clc
pushf
cwtl
and
add
test
clc
xchg
jle
dec
mov
pop
mov
adc
add
repnz
jbe
aad
mov
mov
add
in
mov
popf
mov
push
dec
sti
leave
mov
clc
lods
sbb
clc
sub
stc
lret
movsl
clc
aaa
jp
cmp
sub
add
outsb
mov
clc
cld
dec
mov
stos
xor
add
clc
in
mov
add
mov
fmulp
fisttpl
mov
hlt
inc
add
adc
or
or
sub
push
inc
clc
xor
stos
or
mov
dec
inc
clc
cmp
adc
add
add
clc
adc
add
add
jo
add
mov
cld
xchg
mov
adc
test
clc
std
iret
lret
fisubs
jge
mov
aam
clc
hlt
and
add
jo
add
inc
add
sbb
add
inc
clc
push
xchg
fdivrs
add
lcall
add
repz
add
ficoms
clc
clc
test
or
pusha
add
pop
fsts
fsubl
cli
xlat
test
bound
add
add
add
push
jp
push
jns
dec
xor
add
adc
add
inc
clc
dec
imul
dec
in
push
add
shr
test
clc
push
push
lock
std
sar
into
mov
jl
dec
xchg
cmp
xor
jecxz
push
push
sbb
mov
pop
loopne
sbb
repz
or
add
adc
mov
mov
add
mov
add
xchg
test
es
inc
clc
fldcw
sbb
sub
repnz
clc
cmp
pop
jae
add
clc
cmp
clc
jl
lcall
shll
add
add
add
lods
and
lock
mov
jg
clc
imulb
lcall
mov
add
add
add
and
add
xor
add
inc
add
mov
mov
clc
jb
add
mov
jbe
mov
add
xor
add
add
push
decb
mov
sbb
mov
add
xchg
repz
add
mov
add
xchg
pop
das
cmp
cmp
scas
outsl
out
cld
mov
aam
ss
add
mov
add
popf
aaa
js
clc
cmp
add
arpl
add
add
add
dec
cld
sub
ret
clc
pushf
push
and
add
add
lahf
mov
dec
stos
xchg
mov
nop
movsl
clc
push
pusha
add
jmp
xchg
in
hlt
cltd
push
loopne
pushf
stc
cmpsb
clc
xchg
out
dec
int
mov
imulb
mov
add
sahf
stos
inc
add
call
add
outsb
jmp
jne
mov
insl
dec
stos
sub
mov
add
shlb
clc
push
add
add
pushf
sar
add
ss
push
add
sbb
add
push
add
icebp
xchg
dec
cmp
loope
xchg
repnz
sbb
test
inc
add
jge
sahf
popa
add
sbb
dec
loopne
dec
mov
add
or
add
pop
add
add
add
repz
pop
inc
clc
adc
or
lea
mov
clc
inc
add
fisubl
add
lock
add
pushf
imul
add
negb
clc
stc
adc
add
add
or
and
cltd
rcrb
pop
push
add
sti
jecxz
addr16
or
add
clc
or
add
lock
xor
push
movsb
clc
fs
clc
xchg
or
clc
sti
js
jae
add
in
scas
pop
pop
ss
jo
add
clc
adc
add
add
lcall
add
mov
clc
cmp
dec
fadd
clc
loope
inc
clc
cmp
mov
out
xor
add
clc
aas
sbb
xchg
rclb
or
add
push
nop
cs
daa
clc
arpl
add
add
sar
xor
ret
clc
mov
std
cmp
cmp
clc
mov
or
clc
cwtl
xlat
sbb
clc
sbb
test
icebp
sbb
xchg
pop
enter
pop
cmpsb
clc
ret
clc
cmp
cmp
inc
clc
lods
mov
or
add
out
pop
sar
dec
add
not
sbb
das
mov
add
outsl
xchg
ss
es
cmpsb
clc
lods
and
mov
repnz
jb
add
adc
popf
xlat
arpl
add
in
jmp
add
cmp
lods
cmp
jg
mov
add
adc
jp
iret
inc
clc
sbb
push
sbb
ret
clc
ljmp
add
mov
add
or
and
and
mov
add
add
inc
add
test
clc
push
cmp
add
outsb
cmpsl
clc
sbb
lods
sarb
mov
and
sub
add
in
dec
int3
out
pop
push
add
je
ror
mov
clc
in
xchg
lods
mov
pop
clc
cmp
aad
jmp
clc
and
add
pop
jle
out
pop
mov
jbe
in
jl
clc
and
clc
push
adc
or
clc
into
mov
add
cmpsl
clc
incl
add
clc
enter
xchg
sub
or
je
adc
add
add
std
shrl
loopne
enter
std
shr
xor
add
clc
sbb
jne
add
cwtl
jecxz
push
fiaddl
add
cli
test
fidivl
add
clc
fsubs
clc
hlt
jns
add
lret
jo
add
cmp
add
cmp
jge
ret
clc
add
add
xor
add
sub
loope
inc
add
or
xchg
sahf
adc
add
clc
lret
pop
jns
loop
hlt
pop
adc
add
add
or
clc
outsl
xchg
push
mov
mov
clc
sub
push
in
bound
add
icebp
ss
stos
addr16
mov
scas
fwait
aam
clc
or
ljmp
nop
clc
push
xchg
clc
or
sub
push
add
xor
add
repz
cli
mov
cmp
sub
ljmp
pushf
jg
out
gs
mov
add
add
sbb
add
clc
and
icebp
jl
sbb
mov
lahf
popf
or
or
clc
test
xor
add
jecxz
in
cmp
clc
aad
add
inc
clc
mov
add
mov
jns
call
add
push
clc
mov
and
add
pop
push
aam
inc
add
pop
mov
add
pop
cld
loope
and
add
add
add
loope
and
add
bound
add
clc
sub
adc
add
insb
pop
dec
cmp
clc
push
add
jbe
mov
fsubl
add
out
sub
add
mov
clc
sub
fsubl
cmpsb
clc
fcmovne
sub
clc
repz
add
add
enter
jl
clc
push
add
gs
fldt
clc
mov
add
add
add
sbb
push
int3
xor
add
clc
out
inc
clc
jbe
add
out
xor
clc
pop
xor
add
clc
movsl
clc
xchg
or
es
daa
clc
adc
clc
jmp
add
pop
clc
mov
ret
add
ljmp
clc
lock
negl
pushf
cmp
jno
add
icebp
adc
clc
mov
cmp
add
pop
xor
cmp
mov
add
sar
pusha
add
xchg
jns
pop
cs
xchg
adc
mov
push
clc
mov
std
and
sbb
clc
lcall
loopne
imul
sar
and
add
push
clc
mov
mov
add
or
mov
add
movsl
clc
aad
adc
add
clc
popf
into
pop
jmp
adc
add
sar
mov
clc
shl
dec
mov
add
lcall
xor
add
pop
pushf
push
std
fistps
stos
or
clc
cmp
xlat
inc
clc
push
xchg
std
sar
out
insl
or
add
add
push
clc
fistl
add
cmp
cmp
clc
divl
mov
or
cmp
cli
cmpsb
clc
bound
add
cmpsl
clc
cmpsl
clc
outsl
xchg
pusha
add
addr16
packssdw
sbb
mov
lret
jg
add
add
clc
dec
sub
add
xchg
mov
lods
pop
push
add
mov
xchg
xor
add
insl
push
mov
jbe
add
push
fbstp
push
adc
add
clc
inc
clc
adc
add
push
xabort
pusha
add
inc
clc
imul
clc
lcall
mov
add
popf
jl
out
adc
rcrl
ljmp
xor
add
clc
mov
fdiv
push
clc
and
add
mov
push
clc
nop
mov
test
add
clc
jnp
jns
mov
into
add
add
sar
clc
fdivl
add
cmp
neg
lahf
inc
clc
cmp
and
add
clc
fidivrl
add
popf
in
pop
repnz
add
push
push
push
sub
clc
push
add
or
sbb
xchg
js
lods
jmp
mov
sbb
add
fs
push
clc
jecxz
out
notb
add
test
loop
lret
push
add
icebp
push
inc
add
inc
add
aam
sub
push
fistl
inc
clc
pop
dec
and
add
sbb
sbb
insl
xchg
gs
ret
clc
xor
std
pusha
add
sub
xor
add
das
adc
add
daa
clc
loop
daa
clc
jae
add
clc
jb
add
cmc
add
fmul
iret
fcmovb
clc
pop
ds
or
dec
mov
add
imul
xor
mov
xor
lea
and
add
add
add
adc
add
push
in
iret
in
sub
xor
imull
jns
cs
roll
sub
add
cmc
mov
clc
mov
mov
stos
in
popf
idivb
inc
clc
pop
pop
cs
imulb
mov
aaa
pop
push
fdivrp
imul
jmp
add
faddp
clc
add
add
clc
mov
mov
xor
add
jle
mov
sbb
stos
data16
xchg
add
add
jb
add
push
adc
clc
and
add
mov
inc
add
lahf
or
push
adc
add
add
fstpt
test
xor
inc
add
into
fsubl
clc
pushf
xchg
dec
cmp
mov
mov
add
sub
push
add
mov
pop
clc
or
and
cmp
leave
js
adc
add
lahf
bound
add
add
pop
dec
jp
pop
daa
clc
push
cmp
insl
lods
in
ss
rorl
dec
fiadds
add
or
push
nop
std
cmp
clc
lahf
testb
imul
hlt
nop
lea
mov
fdivr
lahf
cwtl
xchg
dec
mov
jle
fimuls
int3
arpl
add
fsin
aad
scas
mov
mov
add
sub
add
add
mov
add
add
add
loopne
clc
nop
decb
add
add
jo
add
mov
add
add
lods
mov
xor
xor
add
lock
mov
inc
clc
push
clc
fstpl
mov
sbb
clc
enter
add
rcrb
jg
pop
jno
add
sar
clc
pop
gs
fldcw
clc
xor
xor
add
clc
add
mov
adc
add
pop
sar
clc
and
mov
add
clc
sahf
sar
ds
mov
outsl
outsb
pop
cld
dec
pop
arpl
add
add
out
add
add
clc
sti
pop
je
add
bound
add
mov
clc
out
xchg
mov
add
mov
jge
push
add
dec
inc
add
pop
sub
dec
mov
sbb
add
add
add
inc
add
cmp
clc
data16
push
xchg
and
add
push
add
mov
cmp
sub
stc
data16
xor
xchg
lcall
mov
clc
dec
xabort
out
and
add
adc
add
dec
cmp
add
mov
add
mov
push
popa
add
mov
cmpsl
clc
push
add
in
xchg
pusha
add
in
fildll
or
add
pop
adc
add
cmpsl
clc
push
mov
adc
add
add
loop
jno
add
push
clc
mov
mov
mov
jno
add
clc
xor
add
add
clc
inc
clc
and
data16
add
add
clc
cwtl
pop
mov
pop
cmp
das
jmp
clc
pop
or
add
pop
outsb
aaa
dec
push
inc
clc
mov
clc
lods
pop
sub
add
push
sub
add
ret
fnstcw
clc
fstl
add
popa
add
xchg
inc
add
iret
cld
adc
add
outsl
pop
xchg
aaa
scas
enter
inc
clc
loopne
ss
psllw
add
and
add
scas
add
add
daa
clc
cli
push
pop
jmp
push
pop
xchg
repz
clc
jge
rdtsc
add
jae
add
add
es
mov
clc
mov
sti
jns
stos
dec
aaa
fistl
add
das
push
fildl
dec
cmp
cmp
jmp
or
mov
push
in
loopne
out
dec
lods
bound
add
aaa
cs
stos
dec
cmc
push
add
or
or
add
add
popa
add
xor
add
pop
jo
add
clc
int3
ret
clc
movsb
clc
loope
adc
add
mov
clc
mov
clc
sbb
stos
sbb
adc
add
add
add
popf
rcll
add
cmpneqps
clc
mov
imul
cli
dec
stc
fldt
xor
add
cmp
xor
add
dec
pop
notl
add
into
daa
clc
mov
in
fnstsw
or
es
dec
adc
add
add
clc
imul
test
ss
clc
out
lods
jne
add
mov
cmc
cmp
lods
pop
loope
fsubr
sub
add
fcompl
out
mov
push
add
adc
add
clc
mov
mov
mov
cwtl
lea
add
add
push
inc
add
jno
add
add
add
add
fbld
add
adc
pop
lea
fsubrs
mov
cwtl
popa
add
popa
add
or
cmpsl
clc
xchg
add
mov
xbegin
add
aam
sbb
fsub
clc
xor
add
add
add
out
xor
add
aam
mov
inc
add
pushf
leave
mov
clc
clc
mov
add
or
clc
sbb
clc
mov
clc
jp
and
add
add
out
mov
insb
add
add
scas
pop
add
add
insl
xchg
pop
lods
hlt
and
add
pusha
add
cmc
push
cmp
clc
push
mov
xchg
sub
push
clc
jmp
add
mov
add
cmp
add
test
popa
add
popf
mov
pop
loop
mov
inc
add
lahf
aad
clc
jae
add
idivl
clc
xchg
loop
cmp
mov
cmpsl
clc
mov
sbb
add
add
cmp
scas
fs
jns
xlat
push
add
sbb
mov
data16
add
inc
clc
dec
cmp
clc
cmp
clc
or
jp
neg
gs
inc
clc
inc
add
rolb
add
jmp
dec
mov
mov
sar
dec
jp
sbb
inc
add
rorb
add
enter
push
data16
popf
or
add
data16
cltd
mov
int3
xor
add
add
push
add
or
add
clc
gs
xchg
adc
pushf
jae
add
sub
fs
dec
cmp
rol
clc
data16
and
inc
clc
pop
clc
jns
repnz
mov
imul
insl
loop
adc
clc
dec
sbb
add
sar
sahf
push
push
aam
mov
lcall
call
add
clc
cmp
sbb
stc
push
add
lods
push
add
ljmp
add
xchg
jne
push
add
xchg
jbe
fsub
clc
dec
cmc
push
xbegin
clc
call
dec
loop
in
sbb
push
daa
clc
xchg
stos
stc
and
add
add
dec
stc
rclb
add
dec
int3
sar
xor
add
popa
add
cmc
movsb
clc
testl
push
sbb
out
add
add
out
outsb
push
add
and
add
sahf
mov
clc
adc
add
sub
clc
stos
shlb
inc
add
lock
arpl
add
add
mov
clc
outsl
push
cmp
fs
push
add
jecxz
xbegin
xlat
stc
aam
lods
mov
psllq
or
fsts
add
cmpsl
clc
adc
add
fs
cmp
xchg
dec
sti
and
mov
dec
sar
pushf
adc
add
clc
mov
and
add
add
fsubs
rclb
add
nop
ficomps
mov
add
mov
add
add
mov
out
and
mov
and
add
insb
incb
add
sar
dec
fisttpll
ja
add
sub
test
lods
push
jecxz
add
add
hlt
loope
xchg
jb
add
add
adc
add
add
movsb
clc
push
add
aas
ret
clc
pop
pop
scas
fwait
and
add
add
aas
xabort
clc
test
clc
fildll
or
pop
out
and
xchg
xchg
pop
cmp
or
push
pusha
add
and
add
adc
adc
add
imul
mov
clc
pop
mul
clc
sbb
sub
mov
int
mov
clc
ss
js
int
outsl
jbe
dec
fsubrl
lahf
std
outsb
fsts
and
add
inc
clc
mov
add
dec
inc
add
in
outsb
lods
add
cwtl
lret
xchg
lahf
mov
cmp
cmp
lret
jo
add
jge
clc
pop
mov
outsl
lahf
enter
insb
insl
add
add
clc
pop
mov
mov
xchg
dec
repnz
push
gs
hlt
inc
add
push
add
jl
and
add
add
sub
or
clc
adc
add
add
add
cltd
fiadds
lea
in
insl
mov
add
pop
lahf
cmp
xchg
ret
xchg
pop
cmp
dec
popa
add
and
add
xor
aad
dec
out
mov
mov
clc
movsl
clc
and
add
add
add
add
add
sub
push
clc
movsl
clc
jo
add
add
xor
clc
insl
enter
popa
add
adc
add
loopne
idivb
mov
pop
clc
fstl
clc
sub
add
lcall
clc
pusha
add
sub
movsb
clc
adc
add
outsb
xchg
mov
sbb
dec
inc
add
mov
dec
fwait
push
lcall
clc
mov
fwait
leave
push
clc
daa
clc
sub
imul
jg
add
stos
movsb
clc
push
add
fdivl
lret
clc
frstor
add
stc
ret
clc
lods
and
add
xor
add
add
jb
add
mov
clc
push
clc
mov
stos
push
add
stos
push
add
jne
xchg
insl
push
push
clc
dec
dec
imul
pop
cmp
shrb
mov
jmp
add
icebp
fidivrs
notb
sub
vcomiss
cmc
into
add
in
sbb
scas
cmpsb
clc
xor
add
add
int3
fs
cmp
cmc
daa
clc
sub
add
push
clc
sub
cmc
push
add
mov
add
sub
clc
popa
add
imul
inc
add
test
mov
cmp
adc
add
jg
add
add
add
mov
movsb
clc
xor
add
movsb
clc
lods
add
add
inc
clc
int
add
ja
clc
pop
mov
insl
outsb
jle
dec
push
clc
into
add
add
sbb
shlb
pop
mov
mov
mov
stos
mov
aaa
mov
add
mov
shlb
mov
mov
pushf
mov
clc
mov
rcr
mov
sub
add
add
add
pop
out
and
add
add
stc
dec
dec
fcmove
push
jle
clc
cli
lock
lods
cmp
xor
cmp
add
add
push
xabort
mov
movsb
clc
sub
aas
inc
add
dec
jbe
in
lret
stos
or
fwait
clc
inc
add
dec
add
add
add
pop
pinsrw
pop
mov
sbb
loop
adc
add
pop
int
sbb
aaa
loopne
mov
imul
xlat
test
sbb
push
add
add
cltd
dec
rolb
fwait
sub
xor
add
dec
add
add
jp
repnz
dec
xor
xor
add
push
push
cmp
sub
sbb
lcall
popf
clc
dec
cmp
dec
cmpsb
clc
adc
add
fldt
jl
jo
add
popa
add
hlt
xor
add
sar
add
and
jbe
pop
add
add
add
mov
add
cmp
mov
fwait
stos
sbb
clc
inc
add
sar
clc
xbegin
dec
lock
xchg
jg
dec
sub
mov
add
cltd
mov
and
add
jecxz
ds
cmp
add
mov
pop
dec
fsubrl
loopne
xchg
out
aaa
sbb
cmp
cli
mov
clc
add
rclb
xor
stos
stos
cmp
jns
movsb
clc
mov
cmp
push
add
bound
add
repnz
adc
add
add
add
sti
mov
jge
mov
add
xor
add
outsl
and
inc
clc
cmp
cmpsb
clc
call
mov
int3
sbb
pop
jge
xchg
add
add
addr16
sub
mov
mov
clc
mov
ds
popa
add
ret
clc
popa
add
icebp
sbb
cmp
sub
or
xchg
pop
and
add
lahf
mov
xor
lods
je
mov
add
add
dec
jge
data16
xor
movsl
clc
pop
clc
xabort
ja
add
mov
adc
push
jo
add
cmp
mov
outsb
sub
movsl
clc
sar
add
xchg
xor
add
mov
jecxz
sbb
faddl
add
sub
fiadds
add
push
test
in
xchg
std
jg
in
into
lods
ss
imul
add
dec
pop
dec
mov
add
mov
sti
mov
add
clc
lcall
cs
shll
jbe
cmp
jb
add
add
sbb
mov
test
sbb
fcoml
cld
adc
add
xor
add
add
push
add
nop
xor
add
add
jp
mov
mov
sti
popf
sarb
pop
mov
sbb
sar
cmp
cmp
leave
pop
test
sbb
mov
loopne
sahf
call
clc
jns
clc
push
mov
add
hlt
stc
loope
mov
add
fs
inc
clc
fdivr
xchg
or
lahf
pop
fldt
fsubl
add
push
add
inc
clc
int3
mov
or
out
push
sbb
dec
jne
add
addr16
cwtl
leave
ja
pop
push
add
jb
add
out
mov
add
cmp
add
clc
arpl
add
jo
add
clc
or
add
clc
sti
push
std
sbb
mov
lock
add
adc
add
and
add
divps
sarb
je
add
mov
jmp
mov
add
sbb
add
jbe
or
clc
inc
add
inc
add
fdivs
jmp
fsubs
mov
scas
je
sarl
inc
add
dec
inc
clc
stc
sbb
dec
imul
cli
shl
clc
push
add
or
xchg
push
cmp
xchg
out
cli
adc
add
pop
jecxz
pop
pop
add
add
add
loop
vdivps
lahf
sar
add
mov
add
add
lret
std
push
add
sbb
leave
daa
clc
xchg
nop
jne
clc
adc
add
add
inc
add
es
mov
aas
data16
cmp
pop
cmp
in
cmp
clc
cmp
mov
push
inc
add
and
add
clc
into
cltd
pop
mov
add
mov
jg
inc
add
lods
pop
dec
pop
loop
dec
xchg
arpl
add
ret
clc
mov
dec
and
add
add
fdivs
cmp
inc
clc
jo
add
popf
adc
clc
xchg
add
add
scas
inc
clc
bound
add
clc
mov
add
cmp
adc
add
clc
shrb
xor
popa
add
add
add
push
pop
movsb
clc
push
data16
or
sahf
mov
clc
mov
cmpsl
clc
fwait
add
add
jns
clc
push
add
add
clc
je
sti
decb
adc
add
fadds
push
stos
adc
add
xor
add
pop
clc
xlat
test
lock
xbegin
mov
rclb
add
xor
add
pop
push
add
cmp
xor
clc
pusha
add
mov
add
gs
addr16
mov
add
mov
pop
add
add
add
test
popf
sti
lock
fldl2e
ret
clc
adc
or
add
sarl
jne
dec
push
add
or
and
add
frstor
add
inc
add
inc
clc
fmulp
lods
mov
sbb
clc
jnp
sub
arpl
add
clc
pop
push
ret
add
lea
daa
clc
loopne
cmp
stos
js
clc
aam
sbb
and
add
out
add
cmp
add
mov
stc
add
jo
add
inc
add
pop
mov
jmp
clc
sub
and
clc
push
add
or
add
xchg
fs
jo
add
add
lret
int
cmp
add
es
pushf
push
movsb
clc
jecxz
dec
lret
adc
add
sar
clc
dec
lret
pop
lods
in
xor
clc
or
clc
outsb
out
popf
push
cltd
jne
add
jbe
arpl
add
sar
arpl
add
clc
pop
aam
loop
test
add
xchg
sub
sarb
int
sbb
clc
adc
sti
jns
push
cmp
pushf
and
add
inc
clc
cmc
es
daa
clc
mov
clc
clc
int3
stc
inc
add
pop
push
clc
and
add
add
add
popa
add
cmc
lahf
mov
nop
inc
add
xchg
push
clc
cmc
ret
clc
push
mov
or
clc
cmp
push
clc
sbb
call
into
sahf
mov
clc
mov
lock
insb
cmp
cmp
mov
clc
push
filds
add
mov
xchg
xchg
mov
clc
sbb
add
fstl
add
add
out
pop
clc
sbb
clc
jp
loope
incl
aam
add
out
and
add
clc
je
and
add
fnstcw
add
inc
clc
xor
sbb
jno
add
lods
sub
add
adc
add
fldt
movsb
clc
cmp
mov
vmovups
add
lret
ret
add
sbb
clc
enter
daa
clc
lea
add
jne
add
cmp
mov
sbb
add
clc
cmp
pushf
fs
shlb
fcompl
clc
cmp
add
sub
add
cmp
lea
jno
add
idivb
dec
cmp
scas
xchg
xor
add
xchg
imul
sub
pop
testb
adc
rcl
pop
clc
cmp
movsl
clc
cmpsl
clc
xchg
das
cs
add
cmp
push
xchg
pop
inc
add
add
add
jb
add
ret
clc
xchg
imul
cs
mov
clc
mov
add
fxch
add
scas
mov
clc
clc
xchg
push
add
ljmp
clc
clc
xor
add
clc
dec
dec
dec
call
push
stos
test
xchg
push
add
add
add
loop
xor
add
lods
test
jae
add
xor
jge
mov
sar
cmp
add
cmp
mov
pop
and
std
jno
add
clc
clc
jecxz
cmp
add
test
testl
rcll
add
dec
lea
clc
or
add
add
clc
pop
jge
scas
xchg
shlb
add
dec
jle
sahf
sub
clc
outsl
adc
add
clc
ret
sub
add
shlb
clc
mov
clc
push
add
cmpxchg
clc
sar
add
sbb
jo
add
jnp
or
clc
lods
cwtl
data16
xor
incb
std
hlt
inc
clc
iret
or
pop
sbb
push
clc
fdivr
xchg
push
cld
test
jecxz
lcall
cmp
clc
add
add
jo
add
cli
mov
enter
test
sub
push
dec
scas
mov
cmp
adc
add
int
test
mov
sub
cmp
or
xor
inc
clc
cltd
outsb
out
sbb
pop
clc
jno
add
mov
push
imul
mov
add
clc
outsl
ljmp
test
jp
test
ret
clc
jle
cli
lahf
xchg
cmp
daa
clc
pop
jbe
cs
xchg
and
push
add
cmp
xor
add
dec
jb
add
clc
and
add
jns
clc
push
or
mov
iret
jl
jp
add
add
cmc
in
xchg
mov
clc
test
clc
and
add
push
add
outsb
push
add
data16
out
xchg
imul
dec
xchg
xchg
cmp
sbb
add
pop
fsubrs
pop
pop
js
clc
out
rolb
cmp
push
clc
jge
clc
fistl
add
push
pop
enter
clc
mov
mov
fidivl
add
in
int
int
clc
rcr
xchg
test
adc
add
push
sub
clc
xchg
and
add
add
add
pusha
add
ss
imul
stos
insl
aad
lock
add
pop
clc
pop
pop
insb
ficoml
add
idivb
xchg
and
add
dec
sub
add
stos
mov
add
movsb
clc
in
fcmovbe
and
mov
mov
inc
clc
mov
add
cmp
clc
mov
adc
ret
cmp
cmp
clc
inc
add
dec
or
addr16
scas
lret
test
jg
loope
pop
xor
sahf
mov
outsb
cmp
clc
xchg
push
test
xor
add
cmp
popf
jbe
data16
sar
fiadds
add
add
push
sub
add
aas
bound
add
dec
iret
lods
dec
push
or
mov
jns
clc
jb
add
clc
je
add
clc
add
add
out
adc
add
imul
add
aas
fwait
xchg
mov
in
fnstenv
add
daa
clc
jne
clc
insl
aas
push
lock
into
inc
add
mov
sbb
clc
xchg
or
clc
mov
pop
movaps
xchg
and
clc
push
add
fwait
mov
clc
mov
test
clc
and
add
cmp
mov
add
add
add
cmp
nop
arpl
add
scas
cmp
adc
add
ret
clc
nop
test
jge
fdivp
adc
add
div
xchg
mov
mov
jmp
push
add
jl
inc
add
nop
mov
add
sbb
mov
pop
sahf
jmp
and
add
sbb
daa
clc
leave
lea
add
or
add
or
clc
xchg
ss
bound
add
jb
add
int
clc
mov
clc
sbb
clc
stos
push
ret
clc
insb
cs
clc
mov
jne
inc
add
inc
add
sar
or
clc
mov
mov
mov
add
out
std
or
aad
call
popa
add
xor
clc
rcl
and
add
test
adc
add
clc
jae
add
mov
popl
clc
and
add
gs
and
add
enter
add
add
cmp
add
rcrl
add
pusha
add
je
xor
add
clc
bound
add
hlt
icebp
ret
clc
scas
pop
sbb
scas
pop
in
jnp
loopne
sar
inc
clc
cmp
clc
cmp
push
and
xbegin
int
xor
push
lret
ficoms
add
addr16
cmc
sbb
clc
inc
add
clc
cmp
mov
add
in
and
add
add
stc
cmp
jne
push
add
and
int
add
add
clc
mov
and
sbb
cmp
push
push
add
push
or
add
nop
gs
mov
daa
clc
loope
call
imul
in
push
jae
add
clc
arpl
add
imull
xor
add
cwtl
xchg
inc
clc
jae
add
clc
xor
cmp
popa
add
xchg
jge
inc
clc
sub
add
inc
add
addr16
push
sbb
push
cmp
sbb
pop
push
in
jns
clc
xabort
clc
imul
jge
sbb
clc
dec
outsb
fnsave
mov
push
xbegin
add
push
call
loop
cltd
aam
out
and
add
clc
dec
xchg
stos
insl
mov
clc
mov
add
cmp
clc
xchg
xbegin
pusha
add
pop
sub
lods
movsl
clc
icebp
cmp
scas
ss
lcall
jle
inc
add
stos
push
add
lods
jno
add
iret
adc
pop
dec
int3
es
loope
xchg
pop
clc
mov
cwtl
imul
add
sar
jp
mov
mov
jb
add
dec
dec
cs
add
test
test
out
in
lahf
es
dec
out
hlt
and
add
clc
outsl
and
add
in
sar
clc
and
add
clc
sbb
clc
sar
pop
insl
call
add
push
fwait
push
add
pop
call
insl
cmp
mov
lea
clc
cli
jmp
sti
data16
xchg
mov
clc
sar
inc
add
sub
jb
add
mov
sar
or
lcall
add
sbb
add
int3
fistpl
mov
sar
clc
and
inc
add
lea
fwait
cmp
lcall
jecxz
mov
xchg
fisubrs
fs
call
or
outsl
jae
add
clc
je
aaa
fmul
cmp
cmp
lcall
iret
mov
add
pop
xchg
jg
fdivl
add
clc
ja
clc
cli
dec
push
push
xor
add
cwtl
adc
add
add
cltd
aaa
aas
dec
ljmp
insb
jg
clc
hlt
fclex
clc
adc
add
jae
add
clc
sahf
sub
mov
adc
clc
adc
add
add
add
imul
add
jl
jp
icebp
mov
dec
cmpsb
clc
int
mov
sub
push
add
jmp
inc
clc
xor
add
add
outsb
adc
add
lahf
in
popa
add
stc
xchg
inc
add
push
add
mov
xchg
out
dec
cmp
in
add
inc
add
bound
add
push
in
pop
push
add
push
mov
add
popf
sti
clc
aam
add
xchg
xchg
out
iret
mov
clc
sbb
mov
clc
loopne
fimuls
jge
push
cld
inc
add
mov
jae
add
mov
into
rcll
cli
mov
add
push
cmp
add
jne
mov
into
test
push
push
add
je
add
xchg
or
cmp
je
add
cld
or
fisttpl
sbb
ds
cmc
iret
add
jmp
loope
call
div
addr16
mov
mov
nop
stos
ljmp
clc
jg
clc
sub
cltd
xor
add
add
pop
inc
clc
jge
pop
xor
add
clc
cmp
clc
notb
cmp
cld
cltd
lods
ret
mov
adc
add
daa
clc
push
add
and
daa
clc
fsubrl
add
cmp
ss
add
add
clc
jmp
clc
pop
pop
jne
clc
lock
add
xchg
cmp
add
xchg
dec
scas
stc
add
add
add
inc
add
icebp
mov
clc
sub
push
clc
xor
pop
ret
clc
pushf
sbb
cmpsl
clc
xor
add
clc
scas
cmp
clc
dec
mov
mov
cmp
pop
clc
cs
clc
stos
nop
imul
pop
jge
clc
in
rorl
jp
icebp
ss
jae
add
imul
clc
lcall
xor
es
enter
cmp
add
pop
push
add
inc
add
fcmovnu
push
mov
add
nop
inc
add
stos
lods
clc
cmp
jnp
iret
mov
hlt
add
add
add
xor
cmc
icebp
mov
int3
fwait
sub
dec
cmp
loop
xchg
popa
add
out
jo
add
clc
mov
add
add
add
clc
aas
bound
add
add
out
dec
push
add
shrb
add
mov
push
add
ss
inc
add
in
out
pop
test
push
mov
in
fsubrs
in
clc
sbb
jb
add
clc
hlt
mov
clc
or
sbb
add
out
mov
add
xor
clc
dec
xor
add
and
clc
rorl
add
bound
add
popa
add
xabort
xchg
fisttps
sbb
mov
clc
outsb
lods
lock
arpl
add
add
mov
clc
adc
add
clc
std
sbb
or
add
aaa
shl
or
clc
sub
pop
mov
jno
add
in
ffreep
clc
mov
shlb
add
sub
clc
or
outsb
shll
add
mov
cmc
outsb
and
add
repnz
mov
iret
xlat
lahf
cld
jle
xchg
test
sar
xchg
dec
and
fstl
add
xchg
mov
dec
mov
pop
xbegin
clc
cmpsb
clc
sbb
add
add
cmp
add
add
inc
clc
cmc
xchg
adc
add
add
clc
jle
adc
add
xchg
enter
mov
xor
add
clc
dec
mov
jp
and
fstpl
cli
jle
clc
or
add
add
clc
loopne
dec
push
cmp
add
out
xor
dec
fsubrs
cmp
ret
clc
xor
add
add
loopne
arpl
add
outsl
xor
push
insb
and
add
mov
mov
dec
xchg
dec
xchg
mov
inc
clc
das
lret
dec
test
clc
lods
mov
inc
add
push
add
in
add
sbb
push
addr16
outsl
scas
imul
jle
clc
mov
inc
add
mov
mov
sbb
adc
add
out
mov
stos
mov
js
add
rorb
enter
clc
clc
sub
adc
add
add
jno
add
add
add
repz
fidivl
add
jbe
mov
xchg
jbe
pop
xchg
sub
add
jo
add
clc
ja
cmp
xchg
dec
and
stos
lea
clc
adc
add
xor
add
clc
ljmp
ljmp
ja
add
mov
mov
mov
repnz
add
loope
jl
jns
jno
add
adc
loop
test
add
insl
and
add
cltd
mov
add
popa
add
jnp
push
inc
add
push
scas
ret
clc
push
add
shrl
push
add
hlt
in
loope
cld
stc
push
add
enter
arpl
add
pop
bnd
clc
cmp
mov
sub
je
dec
mov
ret
add
imul
mov
je
cmp
push
lret
mov
insl
sub
ljmp
fnstenv
cli
cmp
cmp
add
bound
add
xor
add
xchg
xabort
add
decl
mov
clc
gs
jae
add
clc
dec
xchg
push
add
das
outsl
clc
sar
dec
int3
add
add
clc
test
fbld
xchg
fldenv
pusha
add
sub
imul
pusha
add
and
add
dec
cmpsl
clc
dec
imul
sub
add
clc
sub
push
add
add
add
and
add
clc
mov
int
adc
add
hlt
jecxz
jo
add
add
or
add
es
sub
js
clc
clc
add
add
mov
xchg
mov
mov
add
xabort
clc
jmp
adc
add
mov
clc
out
lcall
add
data16
inc
add
out
cmp
enter
mov
lock
loopne
into
cmp
mov
add
jo
add
clc
out
mov
cmp
fwait
mov
push
add
adc
clc
loope
or
add
out
pop
xchg
cmp
push
cli
icebp
or
or
fmull
clc
inc
clc
add
data16
cld
out
mov
clc
add
add
inc
add
sub
mov
scas
sbb
add
cmc
fisttps
and
add
add
add
gs
data16
mov
sti
mov
add
lcall
bound
add
clc
cmc
pushf
fstps
nop
incb
add
clc
dec
dec
cli
push
xchg
jns
sbb
popf
lret
push
clc
mov
pusha
add
sar
cmpsb
clc
bound
add
cmpsb
clc
inc
add
inc
clc
mov
dec
or
inc
clc
mov
add
shl
dec
jae
add
mov
and
add
add
jae
add
xchg
push
ficoms
add
out
mov
loop
sub
inc
clc
mov
mov
xor
clc
push
rcr
pusha
add
inc
clc
sti
ret
clc
add
add
clc
test
std
inc
add
divl
stos
fwait
jmp
icebp
repz
mov
sti
test
aam
clc
repz
add
sub
je
add
mov
clc
lret
add
loopne
push
mov
add
aas
out
inc
clc
pop
sbb
imul
sbb
cmpsb
clc
sub
or
cli
mov
add
dec
sti
cwtl
dec
enter
outsl
mov
cmp
jbe
data16
sbb
clc
sub
stc
dec
jl
mov
pop
rol
clc
cltd
divl
add
idivb
insl
lcall
jbe
je
clc
xor
add
leave
das
cmp
clc
mov
xchg
jno
add
mov
add
or
pusha
add
cmpsb
clc
or
fprem1
lahf
jmp
pop
cmpsb
clc
dec
and
add
add
jnp
xchg
cli
push
in
pusha
add
and
add
push
call
cli
xlat
testb
dec
dec
mov
clc
push
add
jl
adc
add
adc
add
adc
add
xchg
jnp
repz
mov
push
add
push
add
repnz
mov
adc
add
stc
dec
sbb
ljmp
jb
add
add
push
clc
jecxz
test
or
add
mov
add
add
popa
add
aaa
lahf
pop
shll
es
sbb
aaa
push
xor
add
stos
into
cmp
clc
push
cmp
clc
daa
clc
inc
clc
int
add
add
xabort
mov
mov
push
add
sahf
addr16
bound
add
cmp
add
pop
cmp
clc
xor
add
aam
clc
jecxz
xor
add
cli
loopne
scas
sar
aad
fistl
add
sub
pop
lret
cmp
jbe
push
xchg
clc
nop
cmpsb
clc
inc
add
inc
add
loop
push
add
daa
clc
lock
add
clc
xchg
xor
pop
add
add
clc
fsts
add
hlt
insb
cmp
add
xchg
mov
add
mov
jp
clc
fs
fdivp
cld
aad
pop
adc
add
mov
mov
adc
add
add
cmp
fldl
or
pop
and
movsb
clc
cmp
add
pop
stc
scas
nop
pop
mov
sub
add
dec
dec
cmp
mov
clc
mov
add
pop
mov
push
clc
std
clc
aas
dec
mov
mov
mov
clc
xchg
mov
pushf
inc
add
ja
cmp
jecxz
sub
add
add
xor
add
sub
clc
mov
push
out
gs
sti
xchg
push
add
sarb
sub
clc
aad
and
add
cltd
xabort
cli
and
push
add
repnz
add
xor
pop
test
jg
xchg
inc
clc
mov
add
mov
add
fwait
cli
iret
pcmpeqd
and
add
add
mov
add
add
or
je
jmp
clc
dec
xor
add
clc
in
outsb
xlat
jl
jo
add
push
fmull
out
stos
or
push
jnp
bound
add
add
test
rorb
add
dec
pop
lea
add
pop
mov
xor
add
aam
or
ja
clc
pop
mov
clc
repz
clc
sbb
inc
clc
jp
sub
add
clc
outsb
cltd
inc
clc
pop
mov
add
cmp
clc
lahf
dec
push
sbb
add
cmp
in
jg
cmpsl
clc
inc
add
into
xor
add
cmpsb
clc
movsl
clc
jecxz
mov
add
stos
inc
add
adc
clc
pop
or
clc
xbegin
add
stos
mov
add
stos
outsb
mov
js
clc
mov
ret
clc
jp
clc
sar
popa
add
stos
iret
enter
add
add
add
add
mov
inc
add
xchg
mov
sbb
xchg
test
xchg
sub
push
add
gs
cmp
jnp
clc
setbe
xbegin
clc
jecxz
cltd
outsl
xchg
add
sar
ds
add
into
mov
xchg
mov
sub
add
fcmovnbe
mov
sbb
clc
pop
and
clc
cs
xchg
call
add
add
push
fisttpl
outsl
mov
add
pop
xabort
clc
pop
or
lahf
jne
add
cmp
mov
add
sub
clc
fmuls
sub
mov
or
add
cmpsl
clc
xor
add
mov
clc
xchg
mov
add
mov
clc
ss
dec
sub
push
push
add
or
add
out
in
xor
add
pop
push
add
out
mov
in
je
inc
add
lret
inc
add
sub
popa
add
addr16
aaa
sti
stc
repz
clc
outsl
mov
xchg
xor
add
clc
push
arpl
add
rcrb
mov
add
jae
add
mov
clc
je
mov
clc
mov
sub
clc
cmp
add
insl
fwait
loopne
arpl
add
push
add
flds
add
aaa
stos
jle
movsb
clc
sahf
pop
lcall
add
xchg
pop
adc
add
or
mov
clc
sbb
call
clc
clc
insl
sbb
add
fcomi
mov
add
clc
insl
imul
add
pop
lahf
mov
clc
pop
imul
add
stc
outsb
push
add
inc
clc
dec
xchg
js
fucomi
clc
xchg
jge
daa
clc
addr16
mov
mov
cmp
push
clc
ljmp
lcall
iret
sarl
lahf
cmp
clc
add
popa
add
and
stos
mov
add
xchg
and
add
add
or
mov
mov
xchg
mov
xor
add
shrl
out
inc
add
ror
push
add
add
add
add
pop
xchg
push
in
inc
clc
mov
clc
sahf
inc
add
icebp
sarl
add
and
add
test
and
add
rcll
cmp
xchg
dec
rcl
test
xor
add
stos
push
mov
jp
cmp
ljmp
rol
clc
fstpl
sbb
cmp
clc
push
add
es
and
cmp
mov
and
add
adc
add
jp
clc
xchg
cmp
cmpsb
clc
movsl
clc
daa
clc
fsubrl
aaa
int
or
call
add
push
test
fsubrs
shl
xor
add
add
out
ss
clc
push
mov
jne
stos
xor
add
lcall
popa
add
es
pop
in
lock
clc
fstpl
jl
add
lar
add
add
std
adc
add
clc
and
add
add
loopne
mov
mov
add
sub
cs
fisttpll
cmp
js
jp
and
add
fiadds
clc
lods
dec
notb
add
stos
push
aad
aaa
pop
push
out
push
cmp
add
push
lods
or
push
add
jne
sbb
mov
clc
lea
add
add
mov
clc
xbegin
add
clc
adc
add
xchg
nop
out
push
add
add
push
jl
and
add
add
movsl
clc
mov
jecxz
rcrb
or
adc
add
add
xor
add
sbb
add
mov
push
add
test
push
push
dec
and
add
add
push
inc
clc
or
test
ljmp
clc
fmull
push
add
fildl
clc
lea
add
jbe
clc
xor
add
clc
xchg
idivb
and
add
clc
push
add
ret
clc
es
xor
add
clc
sar
clc
aad
clc
jae
add
adc
inc
clc
sbb
clc
btr
push
std
imul
clc
sbb
call
pop
mov
scas
pop
clc
fnstenv
add
dec
add
cmp
clc
jl
adc
add
add
adc
add
clc
sbb
add
clc
and
jb
add
inc
clc
pop
sub
clc
repnz
loope
xor
add
xor
add
push
or
in
sar
or
xor
add
scas
mov
mov
add
sub
test
jle
jnp
sar
adc
add
fldenv
add
push
clc
or
clc
es
sub
adc
mov
xor
clc
ret
push
add
je
int3
mov
add
add
add
decl
clc
push
repz
adc
add
sub
test
xor
clc
xor
add
xchg
lret
popf
roll
add
outsb
fmul
imul
mov
jg
pop
sbb
sub
add
bound
add
cli
and
push
add
xchg
shll
add
mov
aaa
xchg
jo
add
test
or
lahf
in
jns
out
mov
clc
and
clc
icebp
add
add
pop
ret
clc
scas
jecxz
adc
clc
aas
and
out
imulb
lods
fs
mov
stos
push
dec
iret
sti
or
inc
add
or
clc
push
dec
jns
clc
jnp
add
fdivl
add
add
add
cmpsb
clc
lods
and
add
shlb
add
mov
jae
add
nop
popa
add
outsl
leave
sahf
mov
cs
push
cmp
clc
dec
mov
cli
cmc
push
sub
clc
popa
add
insb
sub
stos
push
add
or
lods
add
clc
jmp
jg
clc
pop
cli
fsubl
xchg
pop
ret
mov
iret
and
add
jp
push
add
pushf
xbegin
mov
cld
pop
jecxz
inc
clc
jbe
or
clc
adc
add
cmp
cmp
sub
add
clc
int3
ja
dec
cmp
lock
ss
clc
cmpsl
clc
shll
sbb
dec
scas
movsb
clc
cmp
sub
je
xchg
adc
add
clc
pop
ds
jb
add
gs
out
pcmpgtd
cld
xbegin
add
clc
ja
ret
clc
push
clc
mov
addr16
cmp
add
mov
sar
clc
dec
rol
clc
adc
push
leave
xor
add
sbb
sub
fcompl
clc
mov
add
jmp
add
fwait
dec
aad
in
mov
in
test
jmp
cmpsb
clc
js
cmpsb
clc
aas
adc
add
out
jecxz
xchg
mov
add
pop
jne
add
mov
push
add
testb
dec
daa
clc
es
add
add
aam
arpl
add
mov
adc
add
popf
push
add
loope
mov
push
pop
ds
xabort
lahf
xchg
push
sti
leave
stos
ljmp
arpl
add
cmc
mov
mov
into
sti
push
lods
fwait
in
fdivrl
xor
ficompl
add
imul
movsb
clc
notl
add
lret
sahf
std
ss
add
add
std
dec
adc
add
add
in
movsb
clc
daa
clc
add
add
add
add
es
xbegin
add
fs
hlt
adc
add
clc
sar
adc
add
clc
jmp
clc
sbb
cmp
jp
lea
add
clc
xchg
inc
clc
call
add
clc
jb
add
cmp
add
test
sar
iret
scas
scas
mulb
cmpsl
clc
cmp
sti
movsb
clc
xor
jecxz
mov
fisttps
stc
cmp
dec
inc
add
je
mov
ss
out
fwait
repz
pushf
sahf
test
pop
sahf
sar
fmul
jle
mov
sbb
clc
xor
add
sbb
xor
add
add
add
clc
jecxz
or
cmp
lea
add
mov
add
mov
xchg
stc
xchg
fsubp
clc
jo
add
add
roll
add
aad
inc
clc
pop
mov
add
add
clc
pop
call
cwtl
inc
clc
xchg
cmp
clc
ret
pusha
add
pop
push
add
pushl
fists
mov
insl
push
add
mov
cmpsl
clc
scas
adc
add
add
nop
inc
clc
ret
clc
fists
inc
add
push
jg
sbb
je
xor
add
pop
popa
add
rorb
clc
ss
clc
adc
add
xor
add
push
clc
dec
jns
push
add
pop
adc
add
push
clc
jmp
or
add
data16
xlat
aad
daa
clc
or
popf
push
sub
jns
and
add
clc
cld
rclb
jmp
mov
clc
stc
pushf
out
aaa
jecxz
inc
clc
push
clc
xor
add
dec
and
add
add
imulb
add
and
add
mov
add
stos
adc
add
add
add
clc
push
add
imul
add
jbe
sub
sahf
stc
aaa
mov
outsl
movsl
clc
dec
stos
ja
clc
add
add
clc
cmp
add
clc
mov
nop
out
es
dec
and
add
mov
add
add
clc
stc
test
sbb
clc
and
out
sbb
clc
mov
sarb
ds
clc
ljmp
cmp
add
ja
clc
fs
xor
insl
fstpt
imul
dec
cmp
dec
mov
inc
clc
mov
clc
xor
add
jge
clc
xor
add
clc
or
add
mov
add
push
add
jle
ja
fxtract
in
loopne
fs
or
scas
cltd
sbb
clc
sbb
cmp
add
das
movsl
clc
lahf
jecxz
jb
add
scas
pop
data16
ljmp
clc
lock
add
add
data16
movsl
clc
scas
cmp
out
mov
add
fsubs
push
add
cmp
pop
jae
add
imul
add
xor
add
clc
aas
lret
mov
jae
add
clc
mov
dec
popa
add
mov
add
dec
lea
clc
xchg
imulb
mov
lret
jno
add
mov
clc
sub
add
jbe
add
in
lcall
mov
xlat
add
add
clc
cmp
movsl
clc
lcall
into
ret
clc
incb
in
bound
add
cmp
out
pusha
add
cmp
jnp
push
add
gs
cmp
add
stos
or
clc
int
dec
decb
call
cmp
clc
ja
mov
fdivrl
sbb
add
xchg
test
mov
sub
add
mov
daa
clc
stos
enter
pushf
adc
add
pop
inc
clc
mov
lahf
dec
mov
mov
lock
xor
add
sbb
mov
cmp
test
imul
clc
js
push
push
clc
imul
pop
clc
imul
add
add
add
cmp
sub
mov
add
xchg
jg
jo
add
hlt
lcall
add
clc
out
clc
or
cmpsb
clc
fs
pop
jno
add
clc
imul
loope
or
clc
adc
add
add
dec
test
jecxz
adc
add
xchg
mov
scas
fmuls
ds
fdivrl
daa
clc
imul
call
add
nop
pop
clc
mov
add
repnz
lea
sar
pop
daa
clc
jle
add
jbe
pushf
adc
add
clc
cltd
add
add
add
loope
jns
sahf
bsf
add
popf
push
mov
dec
call
int
dec
shlb
sahf
xchg
jb
add
or
add
stc
adc
add
and
add
add
jmp
xchg
stos
in
mov
clc
mull
dec
fwait
nop
inc
add
add
add
pop
cli
mov
mov
jbe
clc
or
out
call
or
dec
imul
push
inc
add
mov
stc
jle
sub
clc
sbb
add
jmp
clc
mov
clc
out
push
add
lock
push
outsb
and
add
jo
add
add
icebp
adc
test
add
add
out
xchg
pop
clc
adc
add
mov
sub
sub
clc
imulb
clc
dec
fldt
pop
movsl
clc
or
testl
inc
add
outsl
cmp
clc
xor
hlt
outsb
push
movsl
clc
mov
dec
mov
scas
fnstsw
in
xchg
xchg
int
imul
sbb
add
int
scas
pop
jecxz
imul
clc
popf
mov
sbb
dec
xchg
cmp
es
or
sub
clc
inc
add
jle
and
jmp
clc
mov
add
pop
call
clc
lret
clc
xchg
sbb
pop
add
add
clc
lret
sub
mov
push
add
or
jo
add
add
fwait
mov
sub
add
test
icebp
or
add
aam
adc
add
clc
sar
clc
sbb
clc
cmp
insl
push
add
mov
ja
fcomp
pop
and
add
add
mov
repnz
xbegin
fistpl
mov
clc
cwtl
test
addr16
or
clc
push
aas
and
add
pop
and
add
clc
fld
clc
lret
add
aas
aaa
nop
pop
sar
xchg
aaa
scas
mov
clc
pop
push
test
dec
mov
dec
testb
xchg
cs
sbb
push
add
out
jno
add
add
push
add
dec
leave
xchg
xabort
sbb
or
add
add
add
clc
sar
mov
cmp
add
clc
pop
pop
jns
js
mov
add
or
ljmp
add
push
ljmp
cli
dec
mov
pop
sarb
add
add
add
in
insb
push
rcr
stos
jge
mov
mov
clc
iret
loop
or
clc
int
mov
add
dec
push
clc
xor
into
into
hlt
jnp
inc
clc
mov
mov
popf
in
rcrb
add
add
or
pop
scas
arpl
add
cmp
clc
lods
jb
add
loop
icebp
or
sub
add
mov
pop
add
add
clc
xchg
push
add
inc
add
xor
add
inc
clc
nop
gs
and
cmp
jecxz
inc
add
movsl
clc
sbb
js
mov
cmp
adc
add
data16
sbb
add
add
add
jmp
or
add
scas
mov
add
dec
outsb
lods
aad
add
xchg
insb
mov
mov
jbe
test
clc
fucom
clc
call
lea
add
mov
clc
imull
jno
add
add
shlb
insl
lret
pop
xor
add
aad
xchg
fs
and
add
add
ljmp
mov
add
bound
add
xor
xchg
cmp
dec
jae
add
add
push
cltd
cmp
inc
clc
pop
sbb
sbb
add
enter
sar
clc
nop
jge
clc
fidivl
cmp
inc
clc
test
cld
push
xor
add
rol
clc
mov
add
sbb
ds
mov
jbe
add
js
int3
inc
add
lods
sub
clc
inc
clc
pop
in
pop
aaa
ja
in
addr16
push
add
inc
clc
out
xchg
mov
xchg
lea
add
clc
cmpsb
clc
call
add
sahf
dec
movsb
clc
imul
cmp
clc
movsl
clc
mov
push
add
xor
fcomip
cwtl
mov
add
aaa
xor
add
and
add
rcrl
push
xor
add
clc
xchg
out
mov
fwait
ljmp
add
xbegin
add
mov
add
clc
xchg
add
or
add
imul
dec
sar
std
cmp
pop
cmp
add
cmp
dec
test
clc
sar
mov
mov
nop
and
add
jle
filds
add
pop
jb
add
lret
lock
fisubrs
ja
pop
popf
sub
push
add
adc
add
test
pushf
adc
add
loopne
mov
cmp
jg
clc
jb
add
adc
add
add
daa
clc
or
push
add
xchg
sbb
add
jle
shrb
xbegin
dec
faddl
clc
push
add
mov
push
clc
push
add
mov
jae
add
clc
int3
cmp
xor
add
jmp
push
shlb
add
test
dec
repnz
fimull
clc
mov
lea
add
ja
cmp
fmuls
mov
add
daa
clc
cs
pop
sbb
clc
jge
add
pop
mov
dec
sbb
add
clc
jns
xchg
xchg
inc
add
lcall
inc
add
jp
mov
xor
add
add
and
dec
jge
add
loop
inc
clc
sbb
jl
cmp
out
and
repz
cwtl
jb
add
fidivrl
mov
data16
pop
xchg
push
mov
clc
cmpsb
clc
test
clc
mov
cmp
cwtl
testl
pop
mov
clc
sbb
push
add
and
add
xchg
es
push
add
lock
sbb
roll
add
sbb
jb
add
add
clc
jne
jecxz
loope
pop
sahf
sbb
add
iret
xor
clc
clc
ret
clc
outsb
push
inc
clc
in
or
xchg
popf
adc
add
add
fmull
add
notb
xor
sub
jecxz
jne
mov
inc
add
push
clc
aas
mov
pusha
add
bound
add
int3
dec
insb
stos
mov
sar
add
insl
push
pop
sbb
clc
sbb
in
call
add
insl
sbb
insb
sbb
insb
lahf
ss
jno
add
dec
cltd
mov
out
xbegin
int
ss
add
or
popa
add
sar
sbb
add
push
add
sahf
cmpsl
clc
aam
and
add
mov
mov
push
add
or
mov
mov
clc
in
outsb
stc
out
jp
clc
mov
mov
lret
cmp
lcall
stos
dec
cmpsl
clc
jne
pop
int
add
dec
push
push
inc
add
aaa
rep
jmp
clc
fs
jno
add
clc
xchg
addr16
jg
add
out
cli
mov
in
sbb
fbstp
clc
pop
aad
clc
int
add
mov
lret
lods
cmpsl
clc
out
xchg
push
hlt
sbb
clc
sbb
add
add
mov
loop
dec
dec
loop
inc
add
mov
add
jo
add
clc
imul
pop
jle
imul
xchg
ror
cmp
clc
gs
jp
rclb
xchg
pop
dec
mov
mov
dec
mov
dec
pop
clc
pop
js
clc
push
clc
nop
test
stc
cmpsl
clc
push
add
adc
add
mov
clc
sub
mov
clc
rolb
icebp
lcall
nop
add
add
add
cmp
pop
jno
add
cmp
xor
add
mov
inc
clc
out
clc
call
add
clc
adc
add
cmp
clc
push
into
jne
push
jge
add
jo
add
mov
pop
aad
push
add
js
jmp
clc
add
add
sbb
mov
or
add
jecxz
pop
inc
add
fsubrp
mov
imul
add
push
mov
rcrb
and
add
add
add
add
js
cmp
sbb
nop
jb
add
test
xor
clc
lcall
je
addr16
jmp
clc
out
add
add
jp
data16
xlat
cmp
sar
imulb
mov
out
fs
mov
add
jge
add
mov
clc
hlt
pop
clc
and
add
add
sub
mov
int3
xlat
and
add
sar
insb
into
and
add
pop
loope
clc
jae
add
add
push
add
jge
clc
mov
cmp
inc
add
dec
cld
adc
sti
pop
pusha
add
rcll
sbb
clc
fcmovne
lcall
mov
clc
lahf
xbegin
mov
inc
add
sub
clc
push
pop
dec
je
clc
dec
lahf
cli
dec
popf
pop
addr16
out
inc
clc
push
add
aaa
mov
or
dec
cmp
stos
add
add
cmp
inc
clc
mov
push
stos
lret
leave
mov
fs
js
add
jne
clc
or
add
int
xchg
jae
add
cmp
fs
jns
mov
xchg
cmp
in
and
add
js
mov
int3
mov
add
ljmp
out
fcompl
xchg
jg
jnp
inc
add
inc
clc
mov
shl
fldt
mov
add
movzwl
pop
sub
dec
xchg
das
hlt
pop
inc
clc
sbb
rcr
jne
mov
testl
clc
xabort
cmp
add
add
jp
clc
pushl
inc
add
xabort
aas
xor
add
clc
out
pop
idiv
adc
add
cmp
leave
pop
enter
add
cmp
add
loop
lea
add
clc
xchg
pop
adc
add
clc
pop
sub
aad
push
int
clc
ret
inc
clc
lods
test
pop
inc
clc
mov
cli
push
dec
mov
pusha
add
add
add
test
add
rclb
or
pop
jp
addr16
mov
or
sbb
add
clc
mov
add
adc
jle
clc
sti
data16
pop
or
clc
and
inc
add
cmp
pop
ror
imul
add
mov
cmp
aas
cld
mov
add
mov
ret
popf
sub
add
and
or
sahf
jno
add
xor
jmp
add
aam
or
clc
out
cmc
cmpsl
clc
mov
movsl
clc
sub
movsl
clc
pushf
cmp
ja
xor
add
add
jl
dec
xchg
xor
add
add
mov
clc
cmpsb
clc
cmp
add
mov
xchg
mov
repz
cltd
jg
push
ret
dec
or
push
pop
lock
jle
and
mov
ret
clc
mov
mov
add
adc
int
add
push
add
data16
lcall
mov
pusha
add
popa
add
jmp
adc
rol
clc
vcvtdq2ps
add
int
sbb
clc
fsubl
add
sbb
adc
add
xchg
adc
add
clc
inc
clc
push
clc
and
clc
mov
add
rcl
outsl
mov
adc
cmp
cmp
sub
inc
add
out
cwtl
nop
cwtl
xchg
movsb
clc
dec
icebp
cli
xor
add
in
pop
fidivl
add
or
lods
add
push
add
popa
add
lods
lret
mov
mov
aam
data16
cmpsb
clc
push
icebp
pop
sahf
insl
mov
clc
cld
pop
movsl
clc
loope
insl
xor
add
cmpsl
clc
iret
mov
inc
clc
jnp
jmp
dec
in
loope
sahf
sub
sub
cs
add
loopne
pop
sti
push
mov
clc
adc
add
test
clc
int
add
loope
cmp
sti
pop
xor
imul
cmp
and
add
dec
lcall
cld
cmp
mov
mov
add
sbb
xchg
adc
add
add
or
stos
pop
movsl
clc
jge
jns
or
add
test
add
push
ret
add
inc
add
add
add
pop
test
and
add
clc
adc
push
jecxz
outsb
fucomip
jge
add
test
mov
sar
mov
xchg
pop
cmc
mov
add
aas
in
cmp
iret
jmp
cli
xchg
mov
pushl
fs
in
push
add
or
push
inc
add
jbe
mov
mov
xor
add
add
out
pop
jle
int
add
xlat
sub
rcrl
sub
clc
inc
add
mov
ret
clc
mov
add
mov
clc
into
sub
dec
jo
add
or
jl
ficompl
pushf
notb
jecxz
push
clc
popa
add
mov
add
xabort
test
gs
xchg
push
out
outsb
dec
sbb
cmpsb
clc
pop
loope
lods
test
adc
add
add
mov
leave
add
add
add
lea
push
add
cmp
clc
rcrl
cmp
ret
clc
testl
add
pop
int3
push
push
dec
add
add
cmpsb
clc
mov
clc
loop
repz
add
into
test
xchg
mov
add
add
add
mov
icebp
inc
clc
bound
add
clc
stc
shl
clc
dec
sbb
mov
add
mov
inc
clc
movd
popf
mov
je
pop
clc
sub
lahf
shlb
add
xchg
rsqrtps
add
clc
and
pop
clc
inc
clc
push
addr16
pop
mov
call
clc
test
push
add
jb
add
sar
test
ljmp
add
out
pop
cmp
add
mov
imul
and
add
cmc
mov
add
out
aad
xor
negl
push
dec
xor
add
mov
movsb
clc
mov
add
fcmovne
xor
add
add
nop
sar
clc
add
ficompl
cmp
add
js
nop
mov
jl
mov
clc
or
mov
cmp
add
dec
sub
or
inc
add
cmp
lods
push
and
add
add
cld
pop
clc
mov
dec
pop
pop
jb
add
clc
inc
clc
adc
add
dec
mov
dec
rcll
xchg
gs
jl
clc
sbb
clc
inc
add
inc
clc
lret
mov
cmp
scas
xor
add
lahf
std
jno
add
clc
and
add
clc
pop
clc
lods
mov
clc
lret
add
add
add
mov
sbb
out
sar
ret
fidivrs
mov
add
cmp
pop
or
adc
add
mov
clc
cmp
jb
add
push
push
jg
add
jo
add
add
xor
add
out
imul
mov
add
clc
testl
add
add
push
add
movsl
clc
adc
add
mov
data16
es
mov
cmp
addr16
outsl
lahf
and
add
clc
ret
xabort
and
repnz
pop
pop
clc
xor
add
mov
es
push
add
cmp
jnp
add
xchg
mov
clc
add
add
add
clc
and
add
clc
cmp
mov
int
fldcw
lcall
fildll
cmp
clc
jne
add
arpl
add
add
clc
cmp
clc
xchg
mov
add
es
mov
fistpl
lcall
loopne
cmp
clc
imul
pop
or
xabort
inc
add
sbb
jmp
push
or
ja
cmp
clc
and
mov
add
rcll
pop
popa
add
xor
add
add
add
dec
mov
mov
notb
mov
xchg
out
xor
add
pop
push
sub
adc
clc
fidivs
add
mov
cwtl
jp
add
movsb
clc
lret
add
add
xbegin
add
clc
jo
add
add
inc
clc
and
cmp
sbb
cs
test
lock
fcoml
add
mov
mov
outsb
xchg
sbb
dec
data16
jns
push
add
test
add
jo
add
push
clc
mov
jo
add
mov
cmp
clc
and
add
fstpl
add
or
ds
repz
adc
add
mov
lock
pop
ret
lea
inc
add
xchg
adc
movsb
clc
push
pop
clc
sar
xchg
mov
in
cmc
jmp
jg
cmp
cmp
mov
fistps
clc
pop
movsb
clc
mov
mov
pop
insl
ss
lea
add
testb
jp
add
clc
leave
push
jmp
adc
add
clc
stc
rolb
js
clc
das
xchg
xchg
ret
clc
or
sub
fcoml
add
jl
add
add
and
jl
clc
mov
into
or
scas
xchg
clc
sub
cmc
dec
call
sub
insb
inc
add
sbb
clc
icebp
fwait
sub
inc
add
imul
adc
add
jnp
mov
pop
inc
clc
dec
xchg
mov
and
sub
cltd
fadds
clc
dec
push
jns
add
stos
push
cmp
xor
pop
xor
add
out
jmp
clc
mov
add
add
icebp
mov
mov
pop
ss
std
pusha
add
xabort
add
add
add
push
add
xor
add
clc
jnp
clc
inc
clc
and
add
pop
and
add
shl
mov
clc
cmpsl
clc
and
add
push
clc
add
add
push
sub
fistl
and
movups
add
xchg
xbegin
inc
add
test
in
out
stc
jno
add
mov
clc
mov
outsl
sti
je
loope
mov
and
add
addr16
cmpsb
clc
loop
movsl
clc
clc
or
add
clc
pop
aaa
sbb
dec
std
xor
add
jno
add
stc
imul
negb
filds
movsl
clc
mov
xor
add
int
mov
popl
add
test
clc
adc
add
add
mov
add
add
clc
aam
xor
add
xchg
pop
clc
add
add
jns
rcll
cltd
jp
clc
jae
add
add
test
pop
or
stos
pop
aaa
push
add
sbb
aad
push
add
cmp
add
clc
int
add
int3
test
mov
add
call
jo
add
sar
pop
imul
clc
test
movsb
clc
mov
clc
dec
xchg
lods
fmull
lret
stos
jae
add
repnz
add
add
jae
add
add
add
ja
stos
push
jecxz
add
clc
fs
fistpll
clc
cmp
clc
xor
mov
add
and
clc
sbb
add
mov
push
add
ljmp
push
sar
pop
xchg
aaa
jmp
clc
sbb
add
adc
add
cmp
fcomp
rcll
cld
fs
sub
clc
adc
add
mov
push
add
imul
xor
add
add
add
arpl
add
sahf
test
push
sbb
imul
jge
add
push
clc
stos
sbb
cmp
add
sbb
add
wrmsr
add
fisubrl
and
add
clc
cltd
cwtl
pop
sbb
add
adc
add
add
xchg
hlt
xchg
or
cmp
pop
xchg
xchg
push
stc
jne
add
sub
add
lret
push
and
ret
jg
clc
outsl
pop
pop
lret
enter
add
inc
clc
inc
clc
jnp
pop
pop
clc
add
add
mov
add
add
test
je
clc
sbb
xabort
push
clc
push
sub
pop
fcomi
jbe
clc
maskmovq
fcomps
add
addr16
cmp
fnstsw
shr
mov
add
mov
add
insl
enter
es
cmp
mov
notl
add
add
mov
add
dec
int3
rclb
add
mov
clc
data16
jl
jno
add
cmp
call
arpl
add
add
addr16
cwtl
in
fdivs
sar
mov
cmp
dec
push
add
out
ja
clc
insb
cld
fimull
add
loope
out
popa
add
push
stos
xor
add
and
add
pop
mov
clc
jle
add
cmc
sbb
add
mov
add
add
clc
ficoms
or
in
in
aad
es
out
dec
push
push
jo
add
clc
fildll
aaa
sub
cmp
clc
mov
jne
jae
add
pop
popa
add
loop
cmp
sub
vmovaps
inc
add
iret
in
mov
add
movsb
clc
popa
add
cmp
adc
add
ljmp
xbegin
clc
int3
mov
mov
or
enter
push
mov
clc
ret
clc
push
clc
je
fcmovb
clc
sub
mov
jae
add
loopne
sti
es
xlat
das
rcrb
cmp
add
add
scas
cmp
add
outsb
inc
add
xbegin
xor
out
add
add
ss
sar
sarb
add
enter
lods
lods
xchg
inc
clc
dec
and
add
sub
clc
push
push
cmp
clc
lods
das
and
add
mov
clc
js
add
push
outsb
outsb
fwait
add
add
inc
clc
aas
mull
clc
movsl
clc
rolb
gs
iret
scas
push
xabort
mov
sahf
cmp
mov
add
fwait
inc
add
es
push
dec
cli
aam
pop
cltd
pop
or
rorl
jmp
mov
add
add
add
cmp
in
scas
sub
mov
sbb
loope
jecxz
sub
cmp
inc
add
inc
clc
sti
dec
or
xor
and
clc
cmp
nop
pop
out
in
int
clc
loope
push
add
fldt
rolb
add
call
mov
or
and
add
push
jge
clc
cwtl
and
clc
aas
mov
inc
clc
outsb
sbb
dec
iret
cmpsl
clc
pop
movsl
clc
xchg
mov
stos
mov
add
clc
xchg
jmp
add
cmp
fs
adc
add
ljmp
clc
mov
clc
xor
add
add
add
fs
psrad
jae
add
lahf
mov
xor
add
data16
lea
mul
clc
out
cmpsb
clc
stos
pop
mov
clc
je
mov
mul
clc
inc
add
sub
jg
pop
aam
add
adc
add
or
mov
int3
xchg
adc
add
clc
gs
jmp
adc
fcmovu
push
sar
clc
push
out
adc
add
and
add
jbe
xbegin
add
scas
lock
in
jle
fmull
jb
add
mul
clc
stc
pusha
add
mov
int3
sub
clc
mov
add
in
inc
clc
mov
add
clc
or
mov
clc
repz
cld
xchg
sbb
sti
mov
rcrl
add
js
clc
push
aaa
fmull
or
clc
mov
mov
loopne
add
add
outsb
call
clc
outsb
xor
add
dec
xor
stos
test
imul
sub
mov
clc
xlat
test
add
iret
or
cltd
push
add
mov
nop
add
inc
add
call
sbb
add
cmp
cmp
add
or
shll
add
add
add
imul
clc
jmp
xor
aam
bound
add
clc
xchg
ffreep
clc
or
notb
lahf
clc
mov
clc
xabort
add
pop
xchg
shr
in
bound
add
pop
sar
imul
ss
and
add
jb
add
and
xlat
stos
pop
xchg
ss
clc
popf
xor
add
push
add
shrl
mov
cld
scas
xchg
cmp
jle
add
dec
xchg
fistps
cmp
push
dec
pop
add
add
clc
push
add
mov
push
fdivrl
or
jp
clc
testb
sub
clc
mov
add
add
es
xchg
ljmp
jae
add
movq
pop
cmpsl
clc
sub
nop
push
mov
leave
imul
add
add
iret
push
jno
add
popa
add
mov
clc
or
mov
testb
sub
jecxz
lea
add
mov
fldenv
push
clc
imul
add
nop
int3
and
add
lcall
cmp
mov
add
daa
clc
imul
daa
clc
repnz
push
clc
aas
lahf
jae
add
add
add
push
js
cmp
xchg
xor
add
arpl
add
add
out
sbb
add
fdiv
jge
push
push
dec
push
pop
clc
push
add
in
dec
mov
clc
push
push
js
cmp
sti
mov
add
inc
add
in
jle
add
ljmp
mov
adc
add
add
inc
add
movsb
clc
insb
dec
xchg
inc
add
addr16
iret
mov
cmp
cmp
add
insl
shll
inc
add
push
add
jl
addr16
pop
int
fsubs
push
pop
push
pushf
xchg
scas
pop
arpl
add
test
pop
shlb
jne
outsl
repz
mov
sti
add
add
test
sbb
jp
add
jns
add
push
js
clc
mov
add
clc
in
xor
adc
add
int3
in
fisttps
das
fbstp
add
mov
mov
dec
stos
outsl
jg
mov
popl
insb
vandps
pop
clc
dec
in
sub
out
dec
in
mov
dec
xchg
cmpsl
clc
push
add
cld
xlat
jg
arpl
add
add
mov
dec
adc
fstl
mov
xabort
cld
add
add
mov
das
pop
out
mov
or
ret
or
add
lcall
int3
xor
pop
clc
mov
stos
outsb
movsl
clc
inc
clc
imul
test
mov
add
mov
clc
repnz
clc
in
adc
add
mov
and
add
pop
jnp
jle
sar
popf
mov
je
ja
xor
add
imul
mov
mov
add
add
add
add
pushf
outsl
stos
push
add
mov
xor
add
add
clc
cmp
ret
mov
add
or
add
clc
adc
add
lock
inc
add
sbb
scas
dec
dec
testb
push
inc
add
lock
or
movsb
clc
clc
out
xchg
or
or
clc
xor
add
cmp
xor
xchg
inc
clc
pop
test
mov
mov
add
add
add
push
sbb
add
out
push
add
cmc
testl
rcrl
test
cmp
xor
add
pop
mov
inc
add
xchg
xor
add
dec
pusha
add
or
movsb
clc
add
add
add
ljmp
add
add
flds
add
inc
clc
outsl
and
add
pop
mov
clc
mov
add
cmp
add
ljmp
clc
push
clc
sar
enter
add
mov
push
cmc
mov
fldl
add
test
pop
clc
sar
xor
add
clc
out
jge
out
dec
outsl
dec
movsb
clc
xabort
clc
test
dec
ja
add
xor
add
or
clc
dec
adc
add
add
arpl
add
cmc
arpl
add
clc
cmp
clc
stos
or
adc
add
add
mov
out
cmpsl
clc
sbb
add
clc
sbb
fwait
clc
mov
push
add
push
cmp
out
cmc
pop
stc
adc
add
lods
pop
jmp
xchg
icebp
mov
add
dec
fwait
dec
and
xor
add
jns
clc
testb
dec
addr16
mov
xor
out
into
out
ljmp
add
clc
jp
jns
cld
dec
pushf
add
add
clc
pushf
fcmovnb
clc
add
add
dec
xor
clc
adc
add
clc
mov
add
sar
stos
cmp
dec
and
mov
add
icebp
mov
or
sub
clc
lods
cmp
xlat
scas
cwtl
jecxz
bound
add
add
clc
shlb
add
add
clc
adc
dec
arpl
add
scas
sbb
add
arpl
add
add
clc
cmc
add
xchg
fs
cmp
add
cmp
into
fwait
add
add
nop
push
sub
add
and
add
push
xor
add
or
jns
xchg
jae
add
add
mov
incb
clc
xchg
xchg
fs
xchg
stc
mov
dec
in
adc
add
pop
rcll
test
push
bound
add
ss
jmp
push
clc
mov
add
into
jae
add
clc
dec
pop
xchg
lea
add
lahf
pop
push
cltd
dec
clc
push
inc
add
imul
clc
ja
add
dec
push
add
sub
or
add
notl
out
pop
stc
mov
dec
and
clc
hlt
xchg
dec
out
xor
add
pop
clc
pop
mov
rcll
gs
clc
and
add
sbb
xchg
inc
clc
loopne
cmp
clc
out
cltd
and
add
add
dec
xchg
sti
pop
fwait
pop
clc
add
add
pusha
add
adc
add
add
add
push
add
adc
add
or
sar
popf
data16
and
add
add
and
ss
lahf
inc
clc
out
cs
ss
sbb
add
add
add
fidivl
fmull
mov
outsl
gs
or
add
into
and
add
pop
sbb
or
clc
cli
push
xbegin
fnsave
sbb
or
add
dec
jns
clc
ret
clc
dec
rorb
xchg
lret
clc
test
or
imul
mov
add
add
add
push
add
mov
clc
imul
clc
test
data16
mov
rorb
xchg
add
add
clc
inc
clc
insb
jmp
push
out
xor
add
adc
add
cmpsl
clc
inc
clc
or
fiadds
add
and
add
add
xabort
add
inc
add
ja
cmp
cmp
fisttpll
data16
enter
add
lods
inc
add
cmpsl
clc
xlat
xlat
negl
clc
mov
outsb
clc
mov
clc
sub
pop
adc
add
addr16
push
psubw
dec
insl
xchg
out
fldcw
sahf
shrl
and
add
cmp
pop
dec
aam
dec
jge
int
push
clc
pop
lock
jno
add
cwtl
cmp
add
add
pop
push
clc
push
outsl
push
add
xabort
adc
add
mov
out
outsb
jecxz
fsubrl
or
cmp
clc
gs
dec
inc
add
into
cmpsl
clc
pushf
repnz
sub
or
add
mov
add
add
push
jae
add
loop
adc
add
sub
pusha
add
mov
push
cwtl
inc
clc
dec
mov
add
dec
xchg
out
lret
pop
lret
add
clc
mov
dec
cmp
and
add
dec
sbb
add
add
data16
cli
jno
add
ds
xabort
jmp
add
cmp
clc
add
add
adc
add
add
sahf
aam
adc
add
mov
xabort
out
out
cmp
clc
into
gs
sub
clc
sahf
in
aas
int
or
cwtl
lret
xbegin
xor
add
push
clc
mov
ret
xabort
push
pushf
pusha
add
pop
stos
adc
in
ja
mov
popl
add
mov
in
fmuls
arpl
add
dec
cmp
mov
loopne
sub
adc
add
sahf
push
xchg
cmp
sbb
clc
fimuls
test
lea
movsl
clc
scas
add
test
outsb
adc
add
mov
adc
add
stos
and
add
and
add
pop
xchg
hlt
add
add
xchg
pop
xchg
sub
cmp
fnstcw
mov
fisttpll
ret
clc
out
addr16
push
dec
dec
inc
clc
adc
add
add
inc
add
jl
xchg
jge
clc
das
jo
add
ficoml
dec
mov
mov
add
xchg
fadds
fstl
add
push
repnz
cmp
lret
sub
int3
xor
add
add
adc
add
test
addr16
sbb
pusha
add
sub
pop
inc
add
sbb
aad
in
mov
aam
sub
cmp
clc
sbb
clc
insl
cwtl
pop
pushf
inc
clc
adc
add
add
inc
add
in
push
clc
rol
clc
out
xlat
add
add
adc
sbb
push
add
push
sub
push
adc
add
xor
add
sbb
add
in
jno
add
add
int
lock
clc
ljmp
daa
clc
jge
stos
push
out
dec
aaa
mov
clc
cli
sbb
push
sahf
push
lods
das
gs
or
pop
bound
add
add
fistpl
rorb
clc
pop
mov
ret
clc
push
clc
mov
lcall
jbe
clc
xlat
xchg
add
sub
clc
jns
mov
xchg
clc
popl
out
sti
cmp
je
rcll
clc
or
add
add
xchg
push
out
push
mov
sub
add
or
add
iret
sub
adc
mov
add
clc
adc
add
lret
fcomps
clc
sub
clc
push
add
scas
mov
fmuls
clc
out
sbb
add
in
cltd
js
cmp
clc
xabort
clc
adc
daa
clc
ret
xchg
out
daa
clc
push
clc
adc
add
add
add
sysret
clc
sub
pop
out
adc
add
mov
pusha
add
loop
stos
xor
add
clc
cmp
fadd
clc
xor
add
out
pop
mov
add
push
xchg
and
add
push
pop
xor
add
jae
add
enter
xchg
xor
add
push
cmpsb
clc
cli
pop
loope
cmpsb
clc
jnp
frstor
push
in
inc
clc
call
add
and
add
add
bound
add
jge
push
clc
dec
imull
xchg
lods
ficompl
stos
mov
add
mov
sub
mov
clc
pop
pop
cmp
mov
clc
cld
or
jo
add
mov
or
push
sar
clc
test
push
xchg
iret
xchg
fists
add
sbb
add
mov
add
pop
in
mov
jg
popf
imulb
ret
and
add
add
adc
pop
jmp
fdivl
and
add
mov
clc
xchg
insl
test
mov
add
fs
fwait
cmpsl
clc
add
add
mov
clc
icebp
cltd
call
clc
mov
mov
clc
push
jbe
cs
aas
repz
cs
clc
dec
adc
add
add
push
cmp
jge
fsubs
dec
and
add
test
pop
xchg
mov
clc
or
add
je
clc
pop
pop
jo
add
hlt
xor
add
clc
insl
inc
clc
cmp
add
adc
or
clc
dec
jns
pop
push
xchg
xor
add
cmpsl
clc
sar
sub
loop
out
xchg
mov
lahf
cmpsb
clc
add
add
ret
clc
ret
clc
mov
xchg
daa
clc
popf
insb
xor
add
clc
mov
add
enter
clc
mov
jl
push
cmp
mov
pop
inc
add
jns
xchg
mov
add
jno
add
clc
incl
add
add
cmp
add
gs
dec
or
add
clc
sub
mov
cli
fs
js
xabort
out
cmpsb
clc
mov
push
and
jb
add
adc
add
cmpsl
clc
sar
mov
mov
clc
inc
add
add
add
frstpm(287
clc
cmp
add
cmp
test
xchg
idivb
clc
movsb
clc
gs
sub
xor
add
clc
mov
clc
mov
lret
mov
test
jl
clc
jb
add
or
fstp
adc
add
cmpsl
clc
fs
leave
add
add
sbb
mov
dec
push
add
xchg
xor
add
mov
movsb
clc
mov
mov
cmp
dec
or
cli
mov
xchg
adc
add
add
add
hlt
cmp
xbegin
mov
out
loopne
xchg
and
xchg
cs
jns
sahf
sub
add
pop
and
add
xchg
outsb
inc
clc
push
add
mov
push
or
pop
mov
add
add
xchg
xor
add
add
sbb
je
push
cmp
add
push
outsl
jne
mov
test
arpl
add
je
sbb
add
jg
lods
or
xbegin
out
cmp
add
in
vmaxps
clc
hlt
xchg
add
mov
add
clc
scas
call
add
nop
cmp
dec
adc
add
enter
mov
add
xchg
imul
cwtl
test
pop
clc
fisubs
cmp
pause
sub
test
loopne
xchg
mov
add
add
add
mov
cld
cmp
add
add
clc
stc
rclb
shrb
add
cmp
add
xchg
xchg
hlt
es
mov
xor
xchg
inc
add
mov
clc
xchg
mov
jmp
pop
clc
int3
mov
loopne
push
add
and
add
clc
jb
add
clc
in
or
adc
add
pop
xbegin
push
int3
mov
clc
shrb
cmp
clc
push
cmp
mov
mov
lret
mov
clc
in
sub
and
add
pusha
add
shlb
add
mov
add
xchg
imul
mov
sbb
repnz
clc
int
dec
xchg
mov
sbb
lret
or
clc
xchg
int
cmp
test
adc
add
cmp
add
out
insb
xchg
cltd
pop
cmp
loop
sbb
add
out
mov
cli
aam
lea
in
jnp
clc
mov
xlat
xor
add
clc
xor
add
clc
lret
and
add
jg
mov
jg
je
lret
add
movsb
clc
or
sbb
clc
int3
add
mov
sub
add
xor
mov
sbb
rorb
add
add
add
add
mov
inc
clc
adc
cmp
add
push
push
xor
add
clc
or
add
cmpsl
clc
shufps
imul
and
add
test
insl
das
cli
jp
xor
add
sbb
addr16
enter
clc
xchg
adc
add
inc
clc
cmp
clc
mov
clc
or
or
add
jle
push
bound
add
or
clc
or
jmp
stc
popa
add
and
add
and
add
fidivl
add
dec
fistpll
rolb
inc
clc
es
pop
and
add
sbb
lock
imul
adc
add
jmp
cltd
bound
add
test
push
clc
mov
add
adc
add
mov
xlat
leave
daa
clc
arpl
add
data16
xchg
ss
pop
adc
add
xchg
hlt
sahf
int
push
add
js
cwtl
add
add
xchg
xchg
fwait
std
mov
es
sti
rcl
cs
jg
or
pop
cmp
loope
push
clc
xchg
cmpsb
clc
pusha
add
sarb
mov
add
mov
sub
clc
adc
add
clc
mov
stos
mov
dec
push
cmp
add
add
lret
xchg
mov
clc
cmp
xchg
sbb
add
mov
add
or
add
popf
sbb
clc
dec
sahf
push
add
add
add
add
out
add
pop
xchg
jne
mov
mov
add
das
cmp
mov
cmp
or
clc
sbb
xor
add
jne
clc
or
xchg
jmp
xor
add
add
add
add
add
mov
add
add
iret
xlat
arpl
add
scas
clc
or
pop
mov
clc
mov
imul
clc
cmp
xlat
cmp
jnp
out
loopne
jnp
add
xor
sub
das
lods
xor
add
add
bound
add
sub
add
mov
movsb
clc
outsb
ds
add
add
sub
sar
fsubl
mov
imul
mov
adc
add
js
cmp
clc
push
fists
pop
adc
add
adc
and
jns
clc
xor
add
or
inc
clc
jg
clc
pop
sbb
clc
sbb
add
clc
jb
add
lahf
mov
adc
add
xor
add
clc
idivl
enter
clc
jle
clc
sbb
jnp
add
and
add
aad
cmp
clc
stc
cmp
xchg
mov
jge
clc
jno
add
cmp
loop
lods
and
add
push
add
int
cmp
in
lret
lret
cli
aam
add
pop
outsb
loope
mov
push
add
sbb
add
add
xchg
jl
sub
lods
test
mov
dec
xlat
fiaddl
enter
add
fnstsw
sti
ss
inc
add
cmpsl
clc
test
cmp
clc
loope
enter
jns
rorl
sbb
movsl
clc
pop
adc
fisubl
add
add
cwtl
ret
clc
mov
sbb
out
mull
sbb
add
stos
bnd
stos
sbb
jae
add
mov
clc
dec
cmp
push
add
add
clc
cmpsl
clc
in
jnp
mov
push
mov
add
clc
loopne
mov
stos
mov
add
add
add
fidivs
fimull
jg
hlt
xabort
jne
neg
ljmp
clc
or
pop
jae
add
in
mov
add
clc
aad
clc
mov
clc
xor
add
divb
sbb
adc
add
adc
add
add
add
adc
add
sbb
clc
sbb
clc
out
fcmove
xlat
stos
je
clc
das
jb
add
mov
aas
pop
mov
cmp
jmp
daa
clc
adc
xchg
call
clc
pusha
add
iret
or
clc
sbb
jecxz
jnp
push
add
xchg
inc
add
lret
pop
mov
push
fcom
adc
shrb
shll
clc
mov
add
out
ds
add
jne
mov
or
rcrb
push
xchg
mov
clc
gs
xchg
call
fldenv
clc
inc
clc
into
xor
add
push
add
push
mov
clc
in
aad
mov
clc
cmp
cmp
add
push
sahf
sub
mov
clc
push
sar
jmp
push
dec
mov
int
xor
add
add
xchg
sbb
push
adc
add
ljmp
ja
add
cmp
mov
push
add
std
mov
nop
arpl
add
clc
cmpsl
clc
movntq
out
cwtl
pusha
add
sub
add
sti
out
sar
cmc
fmul
repz
jecxz
je
add
xchg
stos
mov
clc
repnz
iret
push
lret
inc
clc
adc
call
mov
and
push
mov
jno
add
test
mov
clc
cli
ret
clc
pop
jmp
add
mov
movsb
clc
fwait
mov
add
jle
add
xor
add
cmp
add
stos
xor
clc
push
add
cmp
mov
add
clc
cmp
clc
sub
jmp
clc
lcall
das
test
jmp
mov
or
clc
mov
xchg
clc
daa
clc
or
gs
add
add
jg
add
xchg
aas
mov
add
lret
fmuls
add
xor
clc
pop
mov
and
add
add
cli
rcr
outsl
xchg
test
mov
adc
add
add
lods
push
xchg
xchg
test
sub
add
mov
add
push
ss
fs
loope
push
and
out
sub
clc
hlt
or
pop
clc
and
mov
add
addr16
jae
add
xchg
popa
add
scas
cs
xor
add
rclb
pop
movsb
clc
sub
fstl
push
loop
cmp
xchg
mov
add
add
ss
clc
dec
sub
and
clc
mov
add
push
and
gs
mov
cmp
repnz
add
fstpt
pop
fs
jmp
clc
loope
mov
mov
push
arpl
add
inc
add
push
add
faddl
clc
shr
int
insl
sbb
clc
mov
add
jp
fnstsw
fnstcw
add
pop
inc
add
es
and
out
stc
mov
add
jg
add
outsl
cli
scas
dec
lcall
clc
mov
int
clc
jb
add
clc
sub
inc
add
in
dec
lea
add
pop
clc
stc
test
es
data16
xchg
xchg
mov
jle
xor
add
mov
clc
push
clc
push
dec
lahf
inc
add
jo
add
sti
mov
loopne
pop
je
mov
clc
push
clc
push
add
sbb
test
fisubrl
add
inc
add
inc
add
add
add
add
push
ret
clc
xabort
xor
cmp
mov
mov
aad
repnz
clc
push
movsb
clc
es
adc
add
add
mov
fiadds
add
adc
add
xchg
fs
outsb
xor
add
add
cmpsl
clc
mov
lret
adc
add
mov
mov
add
pop
cmp
add
clc
loopne
xor
add
add
add
mov
iret
clc
pop
sbb
add
add
ljmp
add
add
clc
ss
test
push
test
fwait
xlat
xchg
add
add
mov
and
add
add
js
inc
add
jb
add
scas
inc
clc
inc
clc
push
add
insb
data16
call
pandn
or
clc
sub
inc
clc
cmpsl
clc
push
add
add
add
fbstp
add
add
add
add
mov
cs
mov
cmp
mov
clc
sbb
daa
clc
inc
clc
call
pop
or
rol
clc
push
pusha
add
or
inc
clc
mov
sbb
call
and
add
xor
sbb
clc
test
clc
test
fdivrs
adc
lods
cwtl
push
mov
add
mov
leave
lret
cmpsb
clc
and
add
out
mov
jo
add
add
clc
adc
and
add
and
add
add
nop
inc
clc
push
add
and
cli
mov
enter
enter
jle
mov
in
lahf
and
add
xlat
cmpsb
clc
jne
jns
mov
xbegin
fnstenv
add
scas
jecxz
dec
cmpsb
clc
rorb
outsb
sub
add
std
loopne
pop
xor
lods
test
mov
sub
add
sar
aam
add
in
or
clc
inc
add
fs
bound
add
ret
cmp
push
fs
or
add
mov
cmp
add
xor
add
add
clc
lods
sbb
add
mov
clc
mov
repz
jl
clc
in
mov
add
add
add
jb
js
movsl
clc
sub
mov
outsb
mul
clc
and
add
lcall
push
add
pop
test
or
clc
fyl2x
insl
enter
dec
repnz
clc
mov
mov
clc
push
cs
clc
mov
dec
mov
mov
clc
je
clc
dec
mov
add
insb
pop
push
pop
popa
add
and
add
clc
mov
sbb
add
add
add
sahf
je
add
iret
adc
and
sbb
clc
ljmp
pop
jg
clc
movsb
clc
inc
add
mov
mov
clc
push
mov
sbb
clc
pop
scas
aaa
icebp
inc
add
jmp
clc
or
clc
xor
add
mov
add
mov
clc
pop
cli
cmp
stos
xlat
dec
or
clc
xlat
dec
mov
ljmp
repnz
lcall
pop
movsb
clc
imul
add
mov
mov
add
add
or
inc
add
pop
cltd
push
add
mov
adc
add
add
mov
ss
fs
or
clc
xbegin
clc
aaa
push
clc
leave
into
addr16
push
push
add
xchg
fisttpl
cmpsl
clc
mov
ds
mov
add
push
clc
aam
inc
add
or
add
jecxz
aas
cmp
bound
add
and
pop
into
shlb
pushf
in
int
bound
add
xchg
cmp
add
adc
add
add
mov
add
add
fbstp
mov
clc
je
add
mov
clc
jle
add
pop
mov
clc
push
cld
mov
push
mov
push
add
or
and
sar
ja
and
add
add
scas
cmp
add
add
pop
or
decl
cmp
clc
icebp
test
clc
scas
add
add
add
inc
clc
xor
clc
mov
fbstp
add
cmp
clc
push
add
mov
jge
add
lods
jmp
push
add
movsl
clc
pop
dec
and
add
add
cs
mov
add
push
add
ss
mov
or
and
push
and
add
add
add
jo
add
add
jns
clc
mov
call
add
pop
cs
clc
pop
cld
fwait
xchg
mov
mov
xbegin
jbe
setno
add
xchg
fsubrp
outsb
mov
xor
cmp
clc
mov
test
testb
out
sbb
and
add
sbb
sbb
clc
es
cs
sub
add
jnp
lods
cmp
sub
inc
add
daa
clc
out
lret
xor
add
add
push
jmp
mov
clc
xabort
add
adc
dec
lods
cwtl
sub
clc
cmpsb
clc
stos
mov
add
add
pop
inc
clc
mov
xchg
or
lcall
xor
add
add
lock
jns
outsb
dec
mov
arpl
add
push
mov
clc
sub
add
add
add
pop
cs
clc
adc
add
mov
mov
clc
pop
cmp
jp
popf
jnp
sar
add
clc
data16
dec
cmpsb
clc
scas
and
lret
cmp
mov
test
jne
add
push
add
loope
inc
clc
cmp
xor
add
jge
clc
pop
out
mov
fs
jnp
in
ds
fsub
clc
cs
test
aas
cmp
clc
cmp
clc
and
clc
fisttpll
clc
es
xchg
testb
fadd
clc
roll
add
pop
fcmove
sbb
inc
add
aad
es
stos
push
cmp
cmp
mov
hlt
add
add
cmp
clc
rol
clc
loop
lret
mov
popa
add
and
add
push
add
mov
clc
push
mov
add
bound
add
std
xbegin
scas
sub
clc
inc
clc
add
add
lods
sahf
pusha
add
pop
cmp
test
xchg
in
je
nop
cld
aas
mov
add
add
movsb
clc
jle
clc
int3
aam
add
push
add
inc
clc
sub
dec
xor
clc
pushf
mov
clc
push
shlb
add
inc
add
xor
add
addr16
xlat
clc
cmp
add
out
xor
scas
jge
clc
loop
push
in
aaa
adc
fsts
clc
clc
xchg
push
xchg
inc
add
lods
add
add
fisttpll
inc
add
add
inc
add
xchg
fistps
lcall
out
test
je
out
dec
out
popl
sub
pop
imul
clc
imul
ja
sub
clc
sar
xchg
mov
clc
push
test
add
add
add
aad
pop
cmpsb
clc
push
cmp
addr16
dec
out
out
fisttpll
inc
add
hlt
inc
clc
stc
push
loope
xchg
push
stos
pushf
jl
clc
cmp
push
cmp
mov
jae
add
add
stos
pop
mov
pop
stos
in
xchg
imul
pop
daa
clc
jl
and
add
lahf
cmp
fsub
clc
mov
add
xchg
push
add
cmp
xor
add
clc
dec
cmp
pushf
jns
clc
jb
add
inc
add
xchg
inc
clc
loop
cmp
clc
xchg
je
jno
add
add
sar
ret
clc
sahf
cmp
or
sti
xor
add
clc
dec
jb
add
sub
pop
xchg
xchg
or
pop
xchg
mov
clc
sar
dec
mov
push
add
add
xchg
cmp
clc
mov
jge
inc
add
idivb
out
pop
pop
mov
mov
jl
clc
xchg
xchg
jmp
lcall
pop
xchg
sbb
and
mov
add
clc
lret
add
clc
sbb
clc
out
cwtl
bound
add
jbe
clc
xor
add
add
pop
cmp
cmp
xchg
sbb
dec
or
clc
add
add
or
add
add
add
sbb
sar
loope
push
insb
mov
mov
add
add
mov
push
add
aas
push
jbe
ret
clc
sar
mov
add
ret
adc
mov
push
and
add
clc
leave
cmp
frndint
fnsave
sar
push
jp
cltd
jae
add
cmc
ljmp
clc
pop
int3
xor
add
popl
add
jae
add
mov
add
lea
fwait
mov
out
and
add
clc
mov
jnp
fdivrs
xchg
push
popa
add
test
clc
jb
add
add
or
pop
or
int3
aaa
lods
mov
add
enter
mov
inc
add
enter
jae
add
stc
xchg
sbb
clc
int3
sahf
loopne
jno
add
mov
xor
add
movsl
clc
inc
clc
mov
popa
add
adc
add
cmp
add
dec
sub
mov
mov
lret
dec
out
add
add
add
clc
pop
data16
xchg
xor
jl
and
add
cmc
cmp
mov
add
jbe
outsb
dec
jo
add
clc
pop
aaa
and
add
add
add
clc
loope
mov
stos
imul
out
push
mov
jmp
imulb
mov
jecxz
jl
roll
add
loope
gs
imul
clc
data16
jmp
fmull
test
mov
xchg
sbb
add
push
add
cwtl
sub
dec
ret
mov
jno
add
jecxz
stos
fidivs
clc
push
imul
dec
mov
fnsave
push
sahf
cmp
sbb
add
jae
add
add
or
add
mov
push
add
cmpsb
clc
loope
out
pop
fadd
clc
fiadds
ret
clc
shl
clc
cmp
jmp
clc
popf
out
insl
xchg
cs
add
mov
and
fwait
cmp
aad
dec
shl
addr16
jp
xchg
xor
add
test
out
or
add
or
xchg
jp
xchg
fucomip
js
clc
mov
cmp
add
ret
clc
xchg
cmpsl
clc
inc
clc
mov
clc
xor
add
clc
add
add
add
and
adc
add
cld
idivl
jns
push
add
pop
loop
sub
mov
jle
add
dec
ret
clc
pop
in
fcmovnb
clc
inc
clc
add
add
clc
aaa
cmpsl
clc
test
xchg
ja
mov
clc
jae
add
mov
pop
clc
call
dec
jmp
jecxz
inc
add
cmp
sbb
clc
loopne
push
jecxz
pushf
fdivs
add
data16
adc
add
int3
test
or
clc
or
je
add
sar
add
add
std
sbb
or
bound
add
add
push
ss
sub
clc
mov
add
sub
add
inc
clc
addr16
mov
clc
jnp
insl
repz
clc
push
add
clc
ljmp
clc
xchg
lods
sbb
add
cmp
add
push
jae
add
add
insl
push
add
and
add
aaa
cmp
clc
call
cmp
xchg
hlt
repnz
add
std
dec
or
fs
or
sarl
mov
ds
out
pop
call
mov
or
mov
push
fdiv
jns
clc
inc
clc
sbb
jmp
clc
cmp
clc
gs
je
clc
xchg
dec
pop
pop
jb
add
inc
clc
and
adc
add
xlat
cmp
inc
add
mov
add
add
clc
and
add
add
add
inc
add
xchg
sbb
fs
inc
add
ss
xabort
rcrl
cmp
in
mov
into
sti
adc
add
clc
mov
mov
clc
cmpsl
clc
stos
dec
cmp
jbe
mov
nop
test
movsl
clc
lods
xchg
adc
add
push
add
div
or
add
dec
int3
dec
das
dec
cli
push
clc
pop
xchg
dec
push
cs
scas
sbb
clc
mov
add
dec
in
jns
clc
jle
pop
imul
mov
cmp
pop
clc
in
stc
sbb
mov
mov
add
add
add
cmp
clc
jecxz
jmp
mov
add
add
add
cli
iret
add
or
pop
ljmp
inc
clc
add
add
mov
add
dec
pop
aas
pop
xbegin
rorb
movsb
clc
mov
es
add
add
add
add
jne
ret
pop
add
add
clc
sbb
add
xchg
push
inc
add
imul
add
nop
or
xchg
aad
clc
bound
add
cmovl
into
inc
add
push
faddl
add
cmp
add
clc
lods
rcrl
jmp
clc
mov
add
inc
clc
mov
jecxz
daa
clc
pop
clc
xor
add
add
clc
sbb
add
clc
add
add
push
clc
xabort
add
int
jg
add
test
mov
jo
add
pop
xchg
pop
xlat
jbe
add
jno
add
add
dec
sahf
int3
push
adc
add
clc
lods
ss
imul
mov
clc
xchg
mov
push
add
push
dec
cmp
clc
dec
lea
sar
mov
add
jo
add
out
je
cwtl
inc
clc
stos
jo
add
test
mov
fdivrl
and
add
insl
pop
icebp
and
add
ljmp
cmp
clc
or
outsb
std
xchg
clc
cmpsl
clc
inc
clc
or
xlat
pop
test
es
mov
add
leave
cmp
fdivrl
sub
imul
sbb
add
clc
insb
das
xor
add
and
scas
and
add
add
daa
clc
mov
lods
je
sub
and
add
xchg
adc
pushl
add
cwtl
push
cmp
clc
sub
test
clc
jbe
cli
ja
inc
clc
ljmp
sub
repz
clc
stc
xchg
add
out
lret
add
movsb
clc
movsl
clc
push
clc
insb
js
unpckhps
cmp
add
clc
fldcw
push
and
add
xor
add
inc
clc
adc
add
add
add
add
xor
add
aam
add
or
xchg
dec
sub
pop
movsb
clc
lret
pop
in
xbegin
clc
fdivrs
fildl
stos
mov
popf
addr16
stos
mov
add
cmp
sbb
movswl
in
lcall
inc
clc
fs
cmc
std
or
pop
xlat
dec
aad
clc
or
push
add
movsl
clc
and
mov
pop
clc
cli
pop
jnp
add
pop
movlps
add
cmp
sbb
add
xlat
leave
or
clc
das
pusha
add
cld
sbb
fstpt
sbb
testl
test
cmp
xchg
jge
call
add
insl
filds
add
mov
clc
aam
or
stos
faddl
inc
clc
pop
ret
clc
push
movsb
clc
or
clc
insl
pop
pop
cmp
add
and
cmp
in
loop
std
enter
add
add
jg
add
dec
pop
pop
or
clc
push
add
dec
adc
sbb
clc
jnp
clc
mov
clc
je
add
mov
cmp
fisttpll
push
nop
mov
pop
mov
aaa
pop
clc
fldt
mov
addr16
or
clc
jb
add
clc
popf
sar
xor
add
in
mov
clc
mov
push
call
add
dec
shlb
add
clc
scas
sub
sub
repz
cld
jge
test
sti
xabort
pop
mov
dec
xchg
push
add
add
jae
add
in
nop
push
add
stos
ret
mov
addr16
adc
fadd
clc
lcall
outsl
xchg
std
jmp
clc
lock
sub
add
dec
outsb
lods
dec
fs
jne
add
xor
clc
insl
clc
and
inc
clc
jb
add
jle
sub
clc
sbb
xchg
xchg
mov
add
cmp
movsl
clc
and
add
add
add
mov
je
add
aam
adc
add
pmullw
add
clc
push
call
clc
mov
clc
aad
bound
add
clc
js
xor
add
ljmp
add
mov
push
clc
jecxz
lret
or
add
clc
xor
jle
add
int
add
sub
clc
lcall
clc
outsb
mov
cmp
aad
add
fwait
sti
dec
nop
sbb
add
jne
add
sub
add
mov
insl
out
xchg
push
xchg
mov
lea
add
add
add
in
pop
xchg
ss
jns
clc
and
add
add
aaa
xor
add
and
cmpsl
clc
lods
mov
add
xchg
jbe
add
sar
data16
popa
add
bound
add
add
cmpsb
clc
mov
and
add
sahf
add
add
out
push
repz
add
clc
jp
mov
addr16
add
add
cmp
clc
cmp
insb
mov
add
std
add
add
add
push
pop
clc
incb
add
jle
clc
and
xor
add
mov
push
out
fimuls
cmpsb
clc
adc
add
stc
test
int3
cmp
clc
push
add
fisttpl
mov
clc
std
loope
cmpsl
clc
sub
fwait
xor
sahf
fmull
out
mov
lcall
add
gs
lods
popa
add
or
in
inc
clc
shll
clc
jo
add
add
sbb
lods
mov
je
add
mov
add
push
mov
clc
insb
ret
out
arpl
add
or
clc
mov
lahf
gs
rclb
mov
push
clc
mov
test
sbb
bnd
mov
stos
xor
add
sbb
lods
and
add
outsl
cmp
add
js
clc
ja
clc
cmp
clc
xor
clc
inc
clc
dec
lods
fsub
clc
xabort
pop
mov
xchg
mov
test
mov
out
jg
mov
ret
clc
cmp
clc
arpl
add
add
dec
dec
sub
xor
add
xor
add
jno
add
add
add
add
jle
mov
and
add
int
push
popf
sub
outsl
inc
clc
dec
clc
fs
hlt
in
aad
mov
clc
cmp
leave
popa
add
or
movsl
clc
fwait
jnp
movsl
clc
cld
fyl2xp1
cld
cli
leave
adc
add
jb
add
add
pop
cmc
test
clc
push
add
inc
clc
hlt
cs
pusha
add
shl
cmp
ficoms
loopne
pop
shlb
add
clc
push
add
sub
xchg
adc
add
jg
out
mov
cmpsl
clc
jnp
cwtl
fdivrs
fistpl
xchg
fwait
shll
jl
add
popa
add
jle
mov
add
jns
cmp
clc
jnp
add
sbb
imul
adc
aas
cmp
lret
push
stc
and
add
add
add
mov
data16
dec
cmp
add
mov
mov
pusha
add
jmp
stc
mov
add
clc
arpl
add
ret
clc
inc
clc
lret
in
clc
gs
push
add
pop
xchg
push
add
mov
fs
fwait
shrb
or
lods
cmp
sub
cmpsl
clc
xor
add
lret
das
sar
test
out
ret
xor
add
add
push
mov
stos
aas
pop
and
fidivs
push
add
cmc
aam
clc
mov
clc
add
add
clc
pop
pushl
mov
clc
sbb
and
add
loopne
push
repz
mov
int3
test
pusha
add
xlat
xchg
mov
ss
mov
add
addr16
jmp
add
xchg
fwait
repnz
and
repnz
mov
aad
popa
add
push
add
add
add
sub
dec
cmpsb
clc
daa
clc
loope
push
scas
mov
add
or
add
clc
cmp
cld
sub
add
out
cmpsl
clc
or
sub
stos
in
xor
add
iret
mov
mov
clc
in
inc
clc
sbb
je
clc
add
aad
bound
add
jb
add
add
xchg
adc
shlb
clc
xchg
js
clc
xor
inc
add
idiv
scas
adc
add
add
mov
and
add
adc
add
add
mov
clc
dec
in
test
repnz
mov
ja
add
xchg
mov
push
cmp
xchg
es
aas
xchg
enter
add
pop
pop
jle
add
dec
loopne
mov
pop
test
and
add
imul
in
fs
in
je
or
add
jo
add
jmp
sub
jmp
add
add
add
adc
add
cld
pop
sub
cwtl
pop
adc
add
add
mov
clc
shll
aas
mov
clc
pushf
xchg
jno
add
xor
mov
cld
sub
add
outsb
fistpll
inc
clc
addr16
mov
ret
stos
adc
add
mov
cmpsl
clc
add
add
push
add
pop
xchg
movsl
clc
mov
mov
lahf
inc
add
cmp
mov
xchg
and
add
push
lret
jno
add
clc
push
jns
dec
out
roll
js
xchg
repz
fstl
add
jae
add
ficompl
into
ret
clc
cmc
ds
add
mov
clc
stc
sar
clc
dec
cmp
clc
mov
push
mov
pop
adc
add
sbb
sbb
add
cmp
mov
add
popf
lock
fs
fists
ret
ret
clc
jnp
fiaddl
clc
cmc
push
add
inc
clc
cmp
repnz
sub
clc
in
push
call
add
mov
clc
imul
mov
push
add
or
add
clc
mov
ds
cltd
mulb
add
push
mov
clc
mov
aaa
inc
clc
dec
jl
jmp
inc
add
ja
add
add
add
lahf
aam
clc
out
fnstenv
xor
add
inc
add
arpl
add
xor
add
loope
cmc
loope
add
add
cld
test
add
dec
dec
and
clc
push
add
mov
vucomiss
add
jae
add
ljmp
add
into
int
clc
xbegin
add
jae
add
clc
fs
ja
rcll
cmpsl
clc
test
mov
add
clc
xor
add
jmp
add
and
mov
clc
iret
xor
add
addr16
in
imul
clc
jmp
repz
add
mov
add
cs
inc
clc
cmpsl
clc
cs
mov
add
scas
cmp
clc
pop
and
add
add
mov
xabort
repz
clc
std
pop
popf
es
pop
sub
mov
dec
adc
add
clc
jg
fcomp
std
pop
mov
and
add
mov
add
add
push
js
hlt
leave
mov
clc
es
push
clc
xbegin
clc
jae
add
clc
push
sbb
add
notb
add
clc
pop
shlb
popa
add
cmpsl
clc
fs
add
add
jb
add
add
xor
add
clc
jmp
mov
lock
add
btc
add
ds
mov
movsb
clc
jg
clc
mov
and
add
clc
dec
cmp
pushf
outsb
fsubl
add
xchg
sbb
aad
dec
fs
ss
dec
xchg
mov
clc
setbe
cld
jo
add
clc
add
inc
add
inc
add
sar
add
ret
jnp
cli
ljmp
clc
adc
add
add
cmp
xbegin
clc
pusha
add
stos
adc
add
add
push
lea
add
jl
clc
pop
inc
clc
mov
popa
add
sub
in
jle
clc
inc
clc
add
add
incl
push
clc
add
ss
add
dec
or
push
in
push
add
in
push
ljmp
adc
clc
jge
add
fcmovb
clc
inc
clc
cmp
mov
cmp
cmp
mov
ficoms
add
pushf
sub
cmp
dec
cld
add
sub
ljmp
pop
lods
lea
lahf
xor
add
add
mov
add
add
cmpsl
clc
mov
clc
scas
pop
xor
mov
xor
add
clc
repz
out
outsl
jg
clc
sbb
loope
xchg
je
clc
mov
mov
clc
push
mov
push
into
sti
pop
iret
pop
clc
dec
push
add
cmp
int
inc
add
pop
clc
nop
outsl
rorb
xchg
addr16
dec
inc
clc
cwtl
and
add
mov
add
dec
jecxz
xbegin
clc
mov
imul
add
cmp
movsl
clc
leave
enter
add
add
add
push
add
push
jns
loope
jb
add
mov
jno
add
cmp
clc
imul
and
push
xchg
rolb
add
add
add
clc
leave
fdivrs
stos
stos
repnz
pusha
add
and
add
ds
clc
xchg
mov
int3
xor
add
aas
and
add
test
dec
stos
movsb
clc
inc
add
clc
inc
add
inc
clc
inc
add
je
add
xor
add
mov
clc
aaa
sbb
xor
popf
ds
cmpsb
clc
xlat
hlt
add
fwait
sbb
pop
and
add
add
xor
add
ss
out
shll
push
clc
in
xor
aaa
repnz
xchg
pop
das
fwait
jb
add
pop
inc
clc
xor
add
sub
clc
push
add
pusha
add
iret
into
sub
add
daa
clc
xchg
pop
sar
xor
add
int
inc
clc
call
add
aaa
sbb
mov
pop
push
dec
scas
and
pop
movsl
clc
rcrl
dec
sti
lcall
sbb
add
push
add
cmp
jecxz
or
stos
sbb
mov
add
add
inc
add
jmp
xor
add
sarb
in
lods
mov
jl
cld
push
clc
adc
add
push
divb
add
ja
sbb
jno
add
cmpsl
clc
and
add
add
push
add
adc
add
sbb
add
hlt
dec
adc
add
clc
stos
push
clc
mov
xor
add
pop
dec
sub
clc
out
xchg
push
push
bound
add
add
rcl
pop
scas
pop
xor
add
sar
lock
add
insb
sti
mov
add
inc
add
cltd
inc
clc
push
mov
out
clc
sbb
add
jmp
cmp
sti
hlt
faddp
clc
movsl
clc
sti
cwtl
xor
add
pusha
add
lods
lret
mov
add
inc
clc
push
push
mov
out
mov
add
pop
outsl
fs
imul
cmp
es
jmp
idivb
clc
out
push
add
cmp
adc
add
cmc
test
cmpsl
clc
sar
clc
ja
add
lods
mov
xchg
or
fisttpl
add
fcoms
add
lods
out
or
clc
and
add
clc
out
and
neg
add
or
mul
clc
loop
out
es
cmp
cltd
std
add
add
sbb
clc
cwtl
mov
adc
add
out
xchg
jbe
cmp
dec
mov
jle
lock
sti
jg
dec
aam
add
addr16
push
add
mov
in
stc
js
pop
clc
sbb
cmp
insl
test
clc
loop
outsb
pop
mov
xchg
aas
add
add
add
xchg
push
fisttps
adc
add
mov
test
outsl
icebp
or
jo
add
add
mov
push
jb
add
fstpt
in
rorl
loop
fcoml
and
add
add
inc
clc
jns
add
inc
clc
xchg
mov
add
aas
inc
clc
in
xor
add
in
lea
clc
mov
clc
mov
add
das
je
add
push
jp
mov
add
jbe
sar
push
insl
in
sbb
and
add
mov
adc
add
adc
add
mov
add
pop
data16
cmpsl
clc
xchg
push
jmp
xchg
pop
and
pushl
clc
push
add
mov
pop
or
clc
xor
add
clc
jnp
mov
clc
push
fs
ds
fidivrs
pop
sub
sub
js
addr16
cmp
add
rol
clc
mov
cld
mov
mov
xchg
imul
push
ror
aas
in
mov
jg
in
mov
repz
mov
clc
sbb
cltd
xor
add
outsb
adc
add
cmp
add
movsl
clc
and
and
add
clc
cli
add
ss
add
dec
jno
add
mov
add
cltd
das
mov
add
movsb
clc
push
fbstp
inc
clc
mov
push
add
ja
insl
mov
clc
cmp
clc
cmp
clc
addr16
mov
lret
mov
mov
clc
adc
vrsqrtps
add
mov
adc
clc
stos
fidivrl
scas
cmp
add
or
add
aaa
popl
add
stc
rep
clc
shlb
add
clc
lcall
je
mov
add
popf
gs
bound
add
clc
mov
jnp
cli
push
and
add
xchg
sub
je
clc
iret
sarb
clc
repz
add
addr16
rclb
clc
jecxz
pop
idivb
clc
or
loopne
into
aad
jo
add
clc
gs
js
jo
add
clc
pop
mov
clc
ret
clc
sti
lahf
xor
add
inc
clc
xlat
lcall
clc
inc
clc
test
push
add
out
pop
and
pushf
sub
mov
push
clc
scas
xor
clc
pop
clc
sar
cwtl
mov
outsl
sbb
lcall
cltd
push
loopne
data16
sub
add
in
in
xor
add
cli
ret
jo
add
shl
clc
push
add
mov
add
jl
clc
xchg
outsl
imul
add
lahf
stos
out
inc
clc
mov
xchg
or
mov
jae
add
add
clc
pop
mov
add
fsubrl
popa
add
sub
push
mov
clc
cmpsb
clc
loop
mov
add
pop
mov
add
push
idiv
mov
lahf
icebp
pop
and
add
add
mov
cwtl
lea
inc
add
test
jg
clc
jne
clc
jge
lods
lods
iret
push
add
dec
and
js
push
push
add
loopne
mov
xchg
mov
test
cwtl
push
add
cmp
add
jmp
clc
fdivs
xabort
add
aas
push
clc
sub
in
testl
clc
mov
clc
insl
popa
add
xchg
adc
add
js
clc
jno
add
lret
xchg
fists
mov
nop
dec
rcrl
test
or
add
mov
clc
loopne
insb
mov
enter
and
add
jp
clc
imul
lahf
dec
lock
clc
out
test
add
add
mov
imul
xor
add
clc
mov
xbegin
je
jmp
mov
test
xchg
shlb
sub
cs
arpl
add
in
dec
sbb
push
clc
push
popl
add
ljmp
push
jns
cmp
clc
loop
jge
clc
rorl
sub
inc
clc
push
dec
shl
movsb
clc
das
pop
fistps
add
enter
fisubrl
stc
scas
fnstenv
add
xchg
daa
clc
cld
sbb
add
add
rcrl
clc
cmp
add
leave
pop
stos
pop
cmp
mov
add
mov
sar
repz
add
jbe
insl
mov
add
add
sbb
lret
out
sbb
add
add
out
dec
jmp
aas
arpl
add
clc
cs
xabort
add
jecxz
cmp
clc
pop
jmp
cmpsl
clc
sub
clc
dec
add
add
add
clc
fcoms
add
or
clc
sbb
add
jge
adc
add
popa
add
fldcw
add
add
mov
clc
xor
add
add
add
add
add
mov
clc
adc
icebp
mov
fsubs
clc
clc
test
dec
outsb
es
pop
dec
cmp
bound
add
fwait
stos
mov
push
add
add
pop
lcall
or
clc
sub
sahf
add
add
add
fwait
idiv
pop
loopne
cwtl
pop
mulb
add
pop
jnp
cli
mov
int
pop
add
add
add
stc
push
add
mov
mov
maskmovq
divl
add
out
ss
inc
add
sbb
call
cwtl
pop
mov
clc
js
imulb
aaa
sti
or
jns
xbegin
add
mov
dec
adc
add
imul
push
dec
sub
sahf
js
gs
add
add
clc
lods
mov
jmp
inc
add
scas
aam
cmpsl
clc
outsb
xor
add
add
bnd
sub
mov
add
or
add
movsb
clc
push
xor
add
add
imul
out
gs
leave
mov
lods
adc
mov
add
cmp
clc
and
mov
lahf
in
push
push
mov
pop
scas
cmp
add
push
add
hlt
pop
clc
outsb
sbb
add
sbb
add
in
insb
pop
dec
fstpt
pop
iret
jb
add
fistl
add
hlt
and
data16
insl
stos
popf
xor
add
push
add
jo
add
and
add
clc
sub
dec
xchg
push
add
mov
add
add
push
mov
test
add
add
int3
mov
clc
sbb
lcall
pusha
add
sub
add
clc
dec
xchg
push
clc
in
inc
add
or
clc
pop
push
clc
pop
pop
stos
push
add
xor
add
outsl
dec
dec
scas
out
adc
add
clc
cmpsl
clc
gs
jle
clc
sar
jno
add
clc
sar
lcall
add
clc
mov
inc
clc
sub
cmpsb
clc
inc
add
scas
bound
add
in
mov
addr16
dec
xbegin
clc
mov
pop
psubb
clc
out
popa
add
sar
add
outsb
xchg
rorb
add
shl
clc
popa
add
mov
clc
fldl
mov
lret
bound
add
clc
add
add
fwait
notl
sub
loop
and
add
ret
clc
sbb
jmp
repnz
push
add
inc
add
cmp
clc
adc
enter
sub
add
clc
fisubrs
dec
ja
push
jo
add
xabort
hlt
xchg
int3
sbb
xbegin
jmp
dec
out
inc
add
xor
add
imul
pop
popf
jnp
clc
sbb
mov
add
mov
clc
add
cmp
test
and
shl
clc
jp
out
imul
es
sub
clc
pop
push
imul
shll
add
data16
mulb
add
test
xor
add
xchg
cmpsl
clc
lods
popa
add
dec
out
mov
xor
sub
mov
add
jno
add
clc
cmp
aam
push
scas
cmpsl
clc
cmp
aad
add
or
cmc
int
clc
leave
and
add
clc
ret
clc
dec
push
sar
std
mov
das
lahf
cmp
lret
dec
push
and
push
pop
clc
sub
pop
or
clc
jle
add
mov
es
fidivrs
pop
mov
or
jno
add
add
sub
push
clc
in
adc
add
add
jbe
push
add
popa
add
push
xchg
stc
insb
mov
add
lahf
adc
add
clc
mov
js
clc
lods
lea
clc
cmp
jl
add
cmc
aam
jne
lea
push
mov
cmp
out
inc
add
mov
add
push
add
mov
clc
inc
clc
pop
clc
leave
lahf
bound
add
aas
jb
add
add
add
add
lahf
mov
or
daa
clc
mov
add
add
add
dec
cmp
xchg
clc
fdivrl
sti
jecxz
mov
add
jmp
daa
clc
xchg
and
add
adc
add
jno
add
xchg
data16
es
loopne
xchg
outsb
dec
mov
add
loope
mov
add
cmpsb
clc
jae
add
inc
add
adc
add
xabort
xchg
dec
mov
sub
cwtl
lcall
add
cwtl
mov
cmp
add
mov
fstpl
out
mov
add
clc
adc
lret
mov
clc
ljmp
aad
icebp
pop
inc
clc
xor
add
shr
sub
add
mov
xor
add
fmull
stos
jg
sar
insb
and
add
in
cmc
jnp
add
mov
stos
ljmp
clc
xor
add
add
cmp
add
push
push
lret
lcall
clc
repz
lods
enter
arpl
add
xchg
mov
add
jbe
sub
insb
dec
sar
ja
add
cmp
scas
cli
outsl
lret
push
lcall
add
out
sub
push
mov
clc
sti
lahf
dec
mov
mov
sub
and
add
and
add
inc
clc
jecxz
sub
or
adc
add
add
clc
fisubl
add
mov
into
jno
add
clc
cmpsb
clc
jg
add
enter
clc
icebp
jg
addr16
imul
cmpsb
clc
data16
mov
add
daa
clc
dec
imul
xchg
push
add
adc
pop
push
lret
clc
hlt
int
or
cmp
push
add
xlat
add
add
inc
clc
pop
xor
add
iret
loop
jno
add
insb
inc
add
in
push
in
sub
add
adc
add
jge
mov
clc
hlt
mov
mov
imul
add
add
fs
add
add
add
imul
fs
sbb
std
and
add
inc
add
scas
mov
outsl
ja
clc
or
or
mov
clc
repnz
clc
xchg
sbb
clc
test
jp
mov
sahf
into
insb
sbb
add
jne
cmp
add
sbb
and
add
add
clc
cmc
std
mov
jp
inc
add
jo
add
fstps
and
add
xor
add
clc
jecxz
loope
cmc
adc
add
mov
sub
clc
arpl
add
cmp
clc
xchg
adc
add
aad
pop
xbegin
add
mov
add
push
add
cli
push
and
dec
pop
mov
add
and
add
fs
pop
add
add
add
dec
cmp
popf
fdiv
data16
sub
popf
addr16
gs
mov
clc
and
push
xlat
lods
in
mov
out
and
jb
add
add
int3
imul
clc
jbe
jle
clc
add
add
add
add
clc
sbb
add
aam
jne
clc
sbb
out
lret
pusha
add
dec
mov
dec
mov
mov
sub
dec
mov
ja
clc
cmc
jge
clc
mov
push
jg
jp
pop
push
das
daa
clc
and
add
push
xor
add
dec
push
add
push
cwtl
add
add
add
call
add
add
add
in
or
clc
xchg
xchg
inc
add
enter
add
in
bnd
icebp
mov
add
mov
popf
loopne
mov
mov
shrl
xor
add
pop
pmaddwd
scas
mov
test
clc
pop
shrl
insb
dec
clc
xchg
aaa
jecxz
lret
es
popa
add
adc
jbe
mov
dec
add
add
hlt
cmp
clc
jecxz
push
fs
sub
js
xor
add
movsb
clc
es
aaa
and
or
sub
push
int
imul
adc
or
mov
clc
ljmp
add
pop
push
sbb
lret
jae
add
add
add
xchg
mov
or
inc
add
gs
lret
push
push
add
cmp
add
jne
or
jge
clc
in
repnz
add
movsb
clc
push
lret
jo
add
push
add
push
add
scas
or
add
arpl
add
mov
mov
clc
cmc
xchg
xlat
scas
imul
clc
cmc
mov
clc
adc
xchg
call
pop
out
push
add
in
pop
xchg
and
add
jno
add
cli
inc
clc
lret
fldl
add
je
out
dec
sar
inc
clc
clc
mov
fisubrl
ja
pusha
add
inc
clc
out
fisubs
add
insb
and
add
leave
mov
add
cmp
lods
dec
xor
mov
sub
cmp
ja
pusha
add
lods
js
test
adc
pusha
add
mov
add
pop
ss
or
clc
imul
dec
sbb
add
add
add
clc
mov
je
clc
cmp
mov
jae
add
jle
mov
add
sbb
inc
add
add
add
popa
add
in
and
add
add
push
add
out
adc
jno
add
jp
lea
movsb
clc
cmpsl
clc
sbb
add
add
mov
addr16
vmovlhps
clc
jp
sahf
sar
mov
repz
add
ds
or
pop
rorl
add
mov
add
or
test
mov
cmp
mov
clc
ljmp
adc
add
dec
pop
and
add
pop
jo
add
add
mov
into
add
add
mov
sar
add
mov
aad
clc
adc
add
mov
inc
clc
sgdtl
add
add
add
add
fmull
push
daa
clc
out
xor
add
loop
cs
into
jo
add
aas
and
lret
mov
add
cmp
jmp
add
bound
add
xlat
pushf
out
sahf
insl
mov
mov
clc
mov
cmpsb
clc
sahf
fstpt
add
popa
add
stc
push
jno
add
loop
inc
clc
lock
add
aam
add
insl
mov
xor
inc
add
xchg
out
dec
sub
imul
inc
clc
aaa
dec
push
fmuls
scas
nop/reserved
add
lret
mov
out
stos
jge
es
ljmp
add
jmp
add
xlat
xor
lret
jbe
clc
add
add
ljmp
out
jmp
pop
cmp
add
pop
xchg
ficomps
mov
clc
loopne
push
in
mov
clc
adc
add
aad
clc
jae
add
clc
rcl
stc
xchg
es
fwait
mov
pop
clc
push
add
xchg
cpuid
clc
push
add
mov
ss
clc
jmp
add
push
ja
push
xor
out
cmp
fs
push
inc
clc
aaa
xchg
dec
pmulhuw
lret
fadd
clc
in
mov
clc
lods
rcl
fsubs
add
lcall
imul
cmpsb
clc
ja
clc
out
ds
daa
clc
mov
cmc
jno
add
add
popa
add
daa
clc
int
jnp
fwait
mov
xchg
clc
push
add
stos
aas
outsb
push
js
add
add
movsb
clc
rclb
clc
fisubs
add
lods
push
aaa
dec
xlat
fimuls
rclb
clc
iret
pop
or
xor
add
xor
add
cs
scas
mov
mov
dec
cld
mov
test
aad
ss
adc
add
sar
pop
sbb
fs
outsb
mul
clc
push
add
icebp
dec
or
cli
sub
mov
mov
xbegin
adc
add
cmp
cmp
add
dec
pop
or
lea
clc
add
add
add
ret
clc
nop
pusha
add
mov
add
add
clc
mov
add
sar
clc
mov
clc
cmp
add
add
ja
clc
pop
xchg
outsl
shr
bound
add
adc
add
int
cmpsb
clc
jecxz
cmp
fs
enter
clc
in
add
clc
leave
xbegin
repnz
add
testl
pushf
adc
push
add
in
cmp
das
push
clc
js
mov
adc
add
jle
shrl
mov
add
lret
cmp
clc
aas
adc
mov
mov
adc
std
mov
clc
adc
add
in
cmp
or
clc
xor
add
adc
add
add
mov
add
add
mov
add
repnz
cltd
lods
and
mov
test
ja
add
out
cmp
add
aas
popa
add
inc
clc
ja
cmpsl
clc
fwait
cmp
dec
mov
rorb
jle
aad
mov
jecxz
out
mov
notb
or
add
sahf
jns
and
add
dec
stos
add
add
xor
adc
add
clc
sbb
xor
stos
repz
pushf
xor
add
clc
into
imul
in
jmp
frstor
cmp
pop
arpl
add
add
sub
clc
mov
clc
xabort
pop
mov
dec
sbb
push
clc
mov
pusha
add
inc
clc
mov
clc
outsl
or
paddw
add
scas
jnp
add
add
clc
push
mov
and
add
lret
scas
dec
mov
clc
push
xbegin
xchg
and
clc
mov
add
js
ds
lret
inc
add
stc
mov
js
sbb
clc
pushf
sbb
push
add
push
pop
inc
add
mov
clc
ljmp
xabort
mov
push
clc
adc
xor
add
gs
push
in
mov
clc
and
add
lods
mov
mov
clc
pushf
sub
add
repnz
je
or
cmp
sbb
sub
add
lods
mov
add
in
mov
add
clc
sbb
jmp
and
daa
clc
out
jo
add
adc
clc
ret
clc
pop
ja
cs
out
push
add
aad
cmp
add
cmp
fisubl
ftst
clc
bound
add
inc
clc
xchg
push
clc
cmp
clc
ja
lret
jmp
xchg
adc
add
jo
add
and
add
cli
adc
pop
clc
in
and
add
data16
mov
or
add
add
mov
cmpsb
clc
cmp
clc
lods
inc
clc
push
add
push
sti
xchg
or
add
and
incl
jmp
add
lret
clc
std
inc
add
outsb
and
add
xchg
jns,pn
pop
push
pushf
test
sub
push
add
scas
jns
push
cmp
mov
loopne
mov
lahf
sub
clc
pop
aad
mov
clc
js
clc
cmp
test
mov
clc
mov
mov
add
sub
clc
scas
xbegin
rcr
jnp
gs
repnz
push
sub
add
sbb
xor
in
push
pop
pop
cmc
add
add
outsb
int
sbb
cld
shl
clc
jg
clc
negb
mov
data16
in
stos
ret
clc
repnz
add
clc
nop
iret
and
add
inc
add
push
jl
lock
add
gs
mov
shll
insb
into
jl
sub
xor
daa
clc
dec
scas
test
xchg
cmp
lock
clc
lods
iret
rcrb
iret
movsl
clc
adc
clc
hlt
ja
dec
add
addr16
cmpsl
clc
gs
push
add
xor
add
add
add
jle
adc
add
scas
push
clc
lahf
sub
loopne
sahf
scas
jle
jl
add
out
lret
rdseed
pop
data16
stc
add
frstor
daa
clc
fstl
adc
add
clc
aam
cmpsb
clc
jnp
add
rcrb
in
fdivrs
fwait
notl
sub
movsb
clc
adc
add
clc
clc
xabort
add
add
add
add
cmp
add
jnp
pop
xchg
push
add
icebp
add
push
add
shll
add
imull
xor
add
rclb
jb
add
xchg
imul
add
add
add
push
clc
xchg
push
add
push
add
mov
add
mov
add
sub
add
dec
je
stc
push
add
cwtl
sbb
lods
push
clc
pop
mov
add
movsl
clc
add
adc
push
xlat
dec
or
daa
clc
test
mov
clc
repz
popf
jmp
cmc
xchg
jns
iret
nop
xchg
xor
add
in
ret
clc
rcll
add
shld
adc
add
add
push
in
dec
int3
fsubp
clc
into
hlt
int3
cmp
add
pop
movsl
clc
pop
sub
clc
in
inc
clc
push
add
xor
add
dec
jo
add
clc
xchg
insl
scas
imul
clc
int
repnz
add
clc
cmpsb
clc
jne
cmp
clc
mov
pop
jns
xchg
jmp
add
pop
shll
add
into
push
add
xor
clc
mov
inc
add
add
add
clc
mov
add
sub
ja
ret
lahf
sub
clc
or
lods
jecxz
jl
iret
ljmp
jmp
add
stc
out
sbb
repz
inc
clc
data16
and
add
mulb
adc
add
add
hlt
stc
xor
jo
add
add
xlat
inc
clc
cmp
xchg
inc
clc
mov
add
pusha
add
adc
add
or
repz
outsl
scas
mov
add
sahf
bound
add
clc
mov
clc
jb
add
and
add
and
add
jmp
push
add
dec
cmp
add
sbb
insl
out
push
pop
clc
mov
cmp
fnstenv
jg
clc
insb
xor
cmp
add
xchg
fs
inc
add
cmp
pop
fwait
enter
jnp
clc
xbegin
insb
cmovae
add
clc
aad
push
add
daa
clc
mov
xor
cmp
push
add
mov
inc
clc
aas
xchg
cmp
add
jno
add
dec
inc
add
cltd
cmp
in
or
je
mov
test
dec
jl
mov
cld
test
clc
or
clc
jecxz
mov
add
add
clc
or
sbb
mov
scas
mov
lcall
aaa
push
clc
xor
add
push
xbegin
pop
clc
xlat
inc
add
out
iret
xchg
push
cmp
loop
aas
adc
add
clc
pop
xchg
ret
clc
push
pop
pushf
cli
ds
fistps
mov
push
ret
clc
xor
add
clc
xchg
adc
fdivr
mov
add
iret
inc
clc
int
loopne
fisttps
outsl
dec
jb
add
clc
popf
mov
xbegin
clc
std
hlt
or
je
sub
rcl
add
add
bound
add
mov
clc
popa
add
ret
clc
jnp
lret
pop
pop
fimull
clc
mov
adc
mov
cmp
clc
pop
push
data16
shlb
add
mov
xbegin
pop
xor
add
adc
add
add
cwtl
pop
loop
pop
push
clc
popf
sar
pmaddwd
dec
pmuludq
iret
jb
add
sub
clc
sub
xor
add
sub
cld
cwtl
mov
add
bnd
jo
add
clc
sbb
pop
and
repnz
add
adc
add
inc
clc
hlt
and
add
lea
add
mov
mov
popa
add
or
cmp
and
add
sbb
push
mov
push
add
cmp
clc
add
repnz
js
clc
cld
negl
mov
xor
add
mov
clc
jno
add
add
add
mov
stos
clc
inc
clc
rcr
stos
cmp
xor
clc
push
in
out
in
inc
add
sub
clc
add
add
insl
sbb
add
push
add
mov
xchg
insl
jl,pn
cmp
mov
aam
pop
xor
inc
add
inc
add
jp
dec
daa
clc
repnz
clc
ljmp
mov
popa
add
adc
add
into
hlt
and
clc
sub
or
add
test
test
or
xchg
insb
rclb
add
jb
add
int3
cmp
add
add
add
add
iret
lods
sar
cltd
in
scas
clc
dec
sub
add
jnp
icebp
je
cmp
add
enter
clc
xchg
in
cmp
add
fsqrt
or
arpl
add
ljmp
pop
clc
cmpsl
clc
xor
add
clc
xchg
cwtl
cltd
add
xchg
cmp
pop
dec
adc
add
sbb
xabort
sar
clc
mov
add
bound
add
mov
cwtl
xor
add
clc
sbb
ret
jle
test
loope
xor
add
std
fidivs
jae
add
mov
in
jp
fucomi
add
add
add
pusha
add
push
sbb
loopne
lret
in
jae
add
add
bound
add
adc
add
stos
jmp
fs
sbb
add
or
sub
ficoms
add
pushf
jb
add
clc
popf
or
mov
cwtl
xchg
mov
add
add
add
push
lods
mov
add
test
lock
clc
pop
lret
xchg
cmp
add
add
add
dec
sub
clc
ljmp
out
inc
add
rorb
cmp
rclb
add
add
mov
add
cmp
jo
add
mov
sbb
pop
clc
inc
clc
xchg
pop
sbb
or
inc
add
xchg
mulb
clc
into
xor
sar
aad
in
imul
repnz
add
std
jle
inc
add
or
xor
add
xchg
xchg
and
mov
repz
clc
outsb
aaa
push
aas
dec
xchg
nop
ret
clc
sub
clc
inc
clc
or
add
adc
add
xchg
movsl
clc
ret
clc
inc
clc
nop
aaa
jmp
aaa
out
jno
add
clc
cld
dec
shlb
imull
clc
push
clc
and
add
out
sub
mov
imul
clc
xlat
out
sbb
clc
sub
addr16
shrl
clc
pop
ljmp
stos
pop
mov
add
xchg
fs
test
fcoms
cmpsb
clc
lret
add
sbb
dec
loope
cmp
fs
push
pop
sub
lahf
mov
clc
jmp
add
push
add
mov
cmp
mov
add
bound
add
jl
clc
int
jbe
hlt
jmp
clc
add
cmp
cmp
add
pushf
mov
loope
test
lret
xchg
int
loop
insb
fisubl
add
mov
clc
sahf
cmp
stc
add
add
add
sbb
aam
add
jae
add
mov
xabort
cmp
dec
sar
aas
int3
daa
clc
push
dec
pop
mov
and
add
jbe
xbegin
jle
aad
and
add
mov
data16
cmc
inc
add
cmpsb
clc
pop
mov
popa
add
cmp
pop
in
xor
clc
cmc
pop
nop
cwtl
xor
add
out
mov
mov
cmc
lcall
mov
testb
add
clc
xchg
in
cmpsl
clc
jbe
lahf
or
pusha
add
into
inc
add
push
ret
clc
push
add
sbb
sub
clc
or
testl
add
int3
push
push
clc
dec
jge
clc
and
push
bound
add
clc
push
add
mov
clc
fcomps
add
std
movsb
clc
fsubrl
daa
clc
ss
mov
add
arpl
add
cmp
sarl
outsl
cmpsb
clc
push
jp
pop
cmp
add
pop
scas
xchg
xchg
fisttpl
and
push
add
int3
lock
cltd
nop
push
cmc
xabort
fldcw
out
pop
dec
stc
inc
clc
push
loopne
jge
clc
xchg
fdivr
sub
add
inc
add
mov
data16
hlt
pop
cmp
clc
mov
clc
imul
add
mov
add
mov
jle
mov
add
clc
adc
add
mov
movsb
clc
push
add
push
add
mov
add
pop
in
mov
mov
ss
div
inc
clc
aas
leave
inc
clc
mov
clc
in
jns
add
clc
adc
fcomps
call
pop
sbb
add
into
xor
test
loope
dec
dec
jl
dec
lods
or
loopne
call
sbb
jbe
sub
or
dec
cmp
movsl
clc
push
clc
jbe
clc
in
jae
add
add
sti
or
clc
cmpsb
clc
out
or
clc
pop
lahf
sar
clc
data16
dec
and
add
out
popa
add
pop
xabort
and
out
or
adc
add
mov
add
arpl
add
cmpsb
clc
and
jae
add
add
mov
pop
aaa
xchg
outsb
mov
xchg
nop
mov
mov
add
jmp
movlps
add
clc
or
clc
fldcw
fnstsw
add
add
add
mov
sbb
add
adc
add
das
scas
xchg
std
pop
push
cmc
push
lods
ljmp
xchg
repnz
out
jmp
sti
xchg
sar
clc
into
ljmp
call
movsb
clc
cmp
add
push
add
cmp
test
clc
inc
clc
shrb
out
xchg
mov
inc
clc
lahf
aaa
xor
or
add
mov
clc
sbb
clc
dec
jne
movsl
clc
pop
leave
mov
xor
add
je
clc
movsl
clc
sub
test
clc
mov
or
add
pop
out
jnp
mov
jle
clc
cwtl
xchg
iret
out
pushl
inc
add
in
inc
clc
adc
clc
bswap
movsb
clc
into
adc
add
add
mov
clc
stc
scas
fadd
clc
mov
clc
cmpsl
clc
adc
add
test
mov
add
pop
sbb
add
clc
push
lods
leave
jne
sbb
fs
dec
in
xchg
jnp
cmc
addr16
xchg
mov
sbb
xchg
sub
sahf
mov
add
jns
clc
fisttps
cmp
add
clc
fcmovnu
adc
jl
or
clc
dec
adc
add
clc
loopne
cmp
clc
xor
add
lahf
movsl
clc
inc
add
pop
inc
clc
gs
xchg
lock
clc
mov
adc
add
xor
add
xor
add
fbstp
add
clc
movsl
clc
pop
lret
sar
add
ljmp
call
jmp
call
pop
out
jle
daa
clc
pushf
rorl
push
cltd
xchg
cmp
clc
add
add
xchg
inc
clc
xlat
in
and
add
fcom
xchg
xchg
push
add
mov
adc
add
push
add
mov
dec
pop
push
mov
jp
clc
xchg
push
lea
jmp
test
xor
popf
jno
add
add
sbb
clc
ficomps
pop
xchg
inc
clc
roll
clc
cmp
add
lret
nop
imul
mov
out
cmp
xchg
test
outsl
outsb
loop
fists
clc
call
clc
repz
add
add
add
add
add
clc
xor
add
inc
clc
out
test
and
add
fs
sbb
clc
or
mov
mov
clc
mov
xor
mov
add
fcomps
icebp
xchg
sub
and
add
test
test
add
cltd
sar
or
sub
clc
stos
add
add
or
add
xor
add
leave
sar
mov
mov
pop
sbb
fmull
add
sub
gs
out
xor
daa
clc
icebp
aam
clc
sbb
add
dec
dec
sbb
and
add
jmp
pop
clc
popa
add
daa
clc
out
mov
in
jl
iret
fmull
inc
clc
mov
cmp
or
clc
xabort
out
int
cld
repz
insb
movntq
out
xor
add
mov
inc
add
data16
mov
clc
dec
pop
cld
mov
fistpl
clc
xchg
arpl
add
xor
add
add
add
add
dec
adc
add
add
mov
add
xchg
in
push
pop
ficompl
add
mov
mov
fs
clc
jecxz
cld
push
add
xchg
lret
dec
outsb
inc
add
ja
repz
loopne
mov
add
sbb
jnp
push
add
add
imul
sbb
adc
add
clc
aaa
das
lods
movsb
clc
mov
mov
add
mov
add
sub
add
lcall
add
push
lret
cld
cmc
pop
mov
push
add
xchg
jmp
lods
cmp
add
mov
sub
clc
dec
jmp
push
add
dec
popf
pop
rcl
jmp
ljmp
clc
in
and
scas
mov
inc
clc
mov
clc
iret
mov
out
xabort
clc
shll
test
jl
std
push
add
push
lock
popl
add
mov
scas
jmp
clc
test
xor
add
add
add
scas
mov
dec
fcmove
pop
clc
cmc
sar
cmp
clc
clc
mov
push
clc
imul
rcll
add
sub
dec
push
add
dec
lahf
rcr
add
add
clc
push
out
lods
sub
lods
mov
leave
stc
and
lods
mov
mov
jnp
adc
add
clc
aaa
lret
mov
mov
add
data16
and
add
add
pop
or
jb
add
jne
out
push
cmp
add
cmp
clc
rorb
sub
xchg
fiadds
int3
loop
jg,pt
inc
add
fsubl
push
add
mov
enter
dec
mov
sub
psubsb
add
cmp
clc
pop
cmp
out
mov
fucomp
cmpsl
clc
push
aaa
pop
adc
add
in
movsb
clc
xchg
ds
je
aad
lret
dec
iret
mov
inc
clc
enter
clc
sbb
add
pop
in
or
sbb
add
add
mov
in
ret
clc
loope
inc
clc
lret
or
clc
push
add
clc
aaa
add
add
cltd
ret
clc
pop
xchg
fimull
gs
dec
cmp
movsb
clc
int3
sahf
jno
add
clc
mov
and
add
clc
sahf
roll
add
mov
stos
testl
idiv
aam
lods
dec
dec
mov
popa
add
stos
mov
clc
sbb
shrb
jne
cwtl
inc
add
mov
jg
jns
jmp
fwait
repz
add
add
sbb
add
and
add
add
sahf
fnstenv
dec
outsb
mov
insb
fincstp
mov
add
in
in
mov
lret
hlt
adc
add
add
xor
add
add
add
add
or
clc
dec
data16
cmp
mov
add
js
leave
jl
clc
fistps
test
into
dec
int
int
add
or
imul
cmp
clc
dec
jb
add
xchg
stos
jae
add
out
lret
clc
cld
lret
and
add
clc
arpl
add
clc
cmp
fdivrl
jb
add
cmp
lods
and
add
clc
sub
das
jno
add
clc
rcrb
test
insl
and
add
add
rclb
xchg
imul
and
add
jl
mov
add
pop
cmp
dec
test
inc
add
cmp
clc
inc
clc
dec
outsl
mov
clc
lea
add
and
add
ljmp
push
clc
insb
cmp
clc
adc
aaa
add
add
clc
inc
add
mov
mov
add
dec
stos
mov
cmp
lcall
inc
add
popa
add
adc
add
clc
movsb
clc
and
add
xchg
sbb
add
repz
clc
mov
adc
add
add
add
movlps
add
push
clc
movsb
clc
inc
add
hlt
push
loope
sbb
inc
add
stos
into
push
pop
lret
cmp
clc
adc
add
clc
loope
push
clc
adc
add
add
ja
clc
push
add
push
dec
imul
adc
add
jbe
jp
lahf
mov
sahf
loop
loope
cmp
cmp
iret
mov
scas
in
mov
push
pop
clc
aam
fcmovnb
clc
aad
pop
arpl
add
fdivrl
cmp
sub
clts
clc
mov
hlt
dec
pop
rcll
add
cltd
ror
inc
clc
cmp
clc
cli
or
mov
add
jecxz
dec
pop
clc
outsl
es
sub
fwait
insb
add
leave
fsubrl
xor
data16
test
js
mov
fcomps
mov
fdivrs
mov
clc
sub
add
sbb
inc
add
inc
add
ljmp
jge
mov
std
sub
xchg
adc
add
add
inc
clc
inc
clc
mov
inc
add
push
clc
pop
cwtl
pop
mov
mov
mov
lret
add
insl
xchg
mov
mov
hlt
mov
add
repnz
add
dec
mul
clc
mov
clc
inc
add
and
add
jecxz
and
add
mov
sti
hlt
loope
stc
xchg
xchg
mov
stos
cmp
push
add
loopne
mov
cs
cmovge
add
clc
ss
fiadds
gs
mov
in
cltd
and
add
clc
popf
incl
jp
cmp
pop
popf
pop
sbb
mov
insl
sub
cmp
pop
cmp
cmp
jno
add
add
je
push
add
ret
jns
add
mov
clc
sahf
aas
jnp
mov
clc
aad
clc
enter
and
add
xchg
ljmp
out
ss
fidivrs
clc
sub
xor
add
add
add
push
cwtl
test
sbb
clc
scas
lods
or
push
stc
fwait
mov
jb
add
xor
add
clc
mov
push
inc
clc
gs
clc
pop
and
add
inc
clc
addr16
cwtl
insl
push
or
add
push
dec
jo
add
sbb
stos
mov
add
je
clc
cmp
add
idivb
clc
addr16
sub
clc
adc
out
inc
clc
pop
imul
out
arpl
add
mov
inc
clc
xchg
popf
test
aas
test
mov
mov
clc
sahf
jg
fiadds
das
jl
ss
add
add
sbb
ret
push
clc
sar
or
clc
pusha
add
inc
add
mov
sub
cltd
icebp
imul
clc
flds
mov
daa
clc
sbb
mov
clc
pop
jae
add
lock
clc
cmp
pop
jns
add
int3
adc
mov
ss
sbb
arpl
add
add
mov
add
ret
clc
mov
pushf
into
call
push
mov
cmp
push
push
add
and
add
xor
add
add
inc
add
fld
clc
mov
add
add
loope
cmp
jne
xabort
adc
clc
jle
loopne
ss
mov
clc
scas
jns
sbb
ror
popf
das
xlat
adc
add
mov
lret
test
rclb
call
test
add
outsb
sahf
outsb
push
sub
cmpsb
clc
pop
or
sahf
outsb
mov
outsb
sub
xor
add
push
jae
add
aaa
data16
inc
clc
adc
add
fucomip
sbb
add
out
int
add
ja
test
fistpl
fdivr
mov
add
icebp
push
cmp
aam
out
cmp
add
jle
cmp
mov
add
inc
clc
jae
add
sarb
aaa
xlat
push
add
test
push
add
sub
and
loope
xor
add
mov
add
clc
jp
add
cwtl
cmpsb
clc
rclb
inc
add
and
add
mov
popa
add
add
add
add
add
ja
cltd
cmp
clc
outsb
jmp
sub
shrb
sti
rol
clc
xchg
and
add
push
add
jge
clc
sub
jg
push
clc
mov
add
insl
sub
push
pop
clc
clc
std
pop
mov
pop
xabort
shll
clc
mov
sti
out
lcall
mov
add
in
and
add
add
xchg
call
push
iret
cmp
cmp
and
add
add
mov
fisubrl
stos
ret
add
enter
cmc
adc
add
loopne
inc
add
xchg
in
mov
clc
sub
sub
outsl
or
insb
push
add
pusha
add
and
add
add
push
xchg
cmp
cmp
inc
add
cltd
mov
push
mov
clc
mov
add
add
add
sbb
or
jno
add
clc
mov
clc
push
push
xor
mov
scas
cmp
clc
push
add
xor
add
mov
clc
pop
and
add
dec
mov
fdivrs
sar
mov
clc
push
add
data16
pop
xor
add
out
jmp
in
out
fisubrl
aaa
adc
add
sub
clc
jmp
xchg
js
dec
es
pop
xchg
xchg
xor
add
xor
add
clc
add
add
mov
dec
jg
dec
lods
popa
add
adc
add
add
mov
jmp
add
mov
push
ja
jmp
jb
add
add
nop
pop
lret
xbegin
jmp
xchg
jae
add
clc
push
icebp
or
xor
add
call
cld
jge
clc
loopne
cmpsl
clc
cmp
cmp
cmp
clc
arpl
add
sub
clc
comiss
add
clc
and
add
xchg
xchg
adc
add
enter
and
add
dec
fists
dec
cmp
or
dec
mov
pop
mov
clc
jmp
dec
adc
add
clc
and
add
clc
xchg
xbegin
dec
sbb
clc
sub
fsubrl
fdiv
sarl
push
inc
clc
das
dec
out
fsub
clc
pop
clc
mov
repz
clc
clc
psubq
fstpt
data16
push
add
cmp
push
xchg
roll
clc
mov
add
lahf
loop
xbegin
xchg
cmp
clc
loopne
test
scas
js
xbegin
popf
push
pop
cli
xor
add
in
shlb
add
out
xlat
cmp
add
sahf
stos
push
add
xchg
out
xor
add
clc
lods
ret
clc
dec
add
add
ss
dec
aaa
add
add
clc
cmpsl
clc
dec
jne
xchg
cltd
xchg
mov
add
shrl
clc
add
add
lods
xor
ret
clc
or
clc
out
xchg
push
push
cltd
adc
cltd
sar
clc
xor
add
clc
dec
pop
lret
add
scas
xchg
outsb
mov
ja
sub
add
divl
add
add
arpl
add
int3
cmp
add
aad
pop
xchg
dec
into
aas
out
mov
xchg
and
ja
loop
xor
add
mov
clc
and
add
popa
add
adc
add
cld
loopne
jbe
inc
clc
push
mul
clc
adc
add
sub
movsl
clc
cmp
clc
out
loop
and
mov
clc
in
pop
sbb
js
lods
sbb
add
inc
add
aam
mov
add
jecxz
lret
lock
add
adc
add
xabort
lret
xbegin
mov
add
insl
test
sub
ja
clc
aas
ret
clc
repnz
cmp
xchg
movsb
clc
inc
add
mov
add
ret
clc
cmp
push
mov
cmpsb
clc
dec
clc
cltd
outsb
jmp
clc
cmc
popa
add
dec
std
lcall
add
mov
dec
fldenv
clc
pushf
loope
es
and
jle
push
leave
or
xor
in
mov
add
and
add
cmc
add
add
clc
outsl
rol
clc
push
inc
add
fistl
clc
arpl
add
add
sbb
clc
mov
clc
fs
je
jecxz
cs
xchg
insl
or
and
mov
or
add
push
add
movaps
stos
cs
fsts
pop
lods
fxch
outsl
mov
clc
insb
sub
push
add
cmp
dec
mov
rorb
fwait
and
jecxz
sti
jmp
clc
in
cmp
add
sub
cmp
sbb
push
add
and
add
clc
decb
jge
clc
imul
mov
clc
inc
clc
inc
clc
xabort
mov
stc
mov
clc
ds
sub
aam
push
add
rcrb
xchg
cs
outsb
negb
clc
pop
pop
and
jge
cltd
mov
imul
ret
clc
inc
add
mov
sub
dec
mov
add
clc
push
pop
or
add
or
pop
popa
add
mov
jp
clc
and
add
add
add
inc
clc
ds
jg
jmp
add
mov
clc
inc
clc
xlat
xchg
data16
imulb
sbb
jno
add
aam
clc
icebp
je
sub
jns
into
clc
mov
clc
addr16
xor
xor
add
rorl
cld
inc
clc
xor
add
clc
add
add
clc
push
add
dec
jno
add
jne
leave
add
add
clc
add
add
cmpsb
clc
mov
jg
clc
cmp
clc
out
lahf
and
add
mov
pop
clc
movsl
clc
jmp
xchg
push
xchg
xabort
cmpsb
clc
xchg
hlt
pop
pop
in
into
inc
add
jge
lcall
jb
add
test
add
xor
mov
cwtl
or
movsb
clc
xor
aam
lret
hlt
cmp
mov
rcrl
in
aaa
cli
mov
clc
fdivr
jecxz
push
mov
add
cmp
xbegin
mov
clc
adc
je
add
mov
add
xchg
cmp
add
gs
ffree
clc
inc
clc
or
ds
add
das
popf
or
add
setbe
and
add
clc
add
add
add
clc
dec
es
ss
clc
fidivs
insb
inc
clc
popf
out
loope
notrack
jmp
add
xor
add
add
insl
add
add
add
inc
add
int
clc
push
adc
mov
imulb
mov
notl
jne
call
loop
and
add
add
pop
fwait
add
add
add
inc
add
fldenv
and
add
add
dec
cmp
add
jge
push
clc
faddl
pop
clc
lret
clc
leave
jecxz
pop
enter
add
lods
movsl
clc
lret
or
clc
mov
xchg
bound
add
arpl
add
cli
fwait
mov
or
jo
add
clc
push
clc
in
movsl
clc
xor
pop
mov
test
cli
sar
pop
ja
fbstp
add
shlb
add
add
add
clc
cmc
lods
jge
dec
push
mov
scas
xchg
sti
ds
xchg
fistps
clc
sbb
xor
add
add
push
push
adc
add
ret
clc
or
inc
add
jmp
add
mov
jbe
add
push
clc
jp
sahf
cmp
lock
call
das
push
jp
cmpsl
clc
nop
push
test
test
cmp
add
jns
clc
ds
xchg
stos
shlb
xor
add
je
jnp
daa
clc
fiaddl
add
add
add
or
mov
clc
push
sub
add
xchg
pop
data16
sub
inc
clc
out
xor
add
in
cmp
xchg
or
add
imul
add
add
jb
add
clc
sar
fildll
or
clc
mov
lahf
ds
cwtl
push
cmc
imul
leave
into
mov
clc
notl
push
add
es
js
clc
jae
add
xor
add
mov
add
out
mov
clc
sub
daa
clc
call
clc
sub
add
addr16
ja
mov
clc
inc
clc
mov
ret
clc
dec
add
add
add
add
xchg
cli
pop
xabort
clc
push
mov
clc
dec
cmp
clc
clc
out
gs
neg
pop
jge
fsubs
add
jg
add
es
aas
push
mov
mov
je
clc
pop
clc
jae
add
xchg
adc
insb
loope
mov
mov
inc
add
cltd
adc
add
clc
push
dec
mov
inc
add
push
add
mov
in
pop
lcall
sub
add
add
add
clc
pop
pop
clc
xor
add
add
lret
push
add
mov
add
mov
pop
dec
inc
clc
lcall
add
push
add
xor
add
clc
in
add
and
sbb
into
repnz
arpl
add
pop
cmp
inc
add
xchg
dec
lret
cmc
lock
add
ja
mov
add
imul
dec
pop
xchg
outsl
sar
add
inc
add
xchg
inc
add
lcall
add
mov
cmp
add
clc
sub
jg
push
push
es
fs
sub
jg
cmp
dec
clc
sbb
pop
fcmovne
add
add
cmp
add
pop
js
add
movsb
clc
ja
mov
clc
aad
clc
aad
add
dec
adc
outsl
lret
clc
loop
jmp
clc
arpl
add
icebp
imul
test
or
add
lret
int3
dec
pushf
pop
mov
test
pop
dec
hlt
jecxz
movsb
clc
inc
clc
push
cmp
lock
add
jp
fstp
pusha
add
movsl
clc
loopne
xchg
cmp
cli
add
push
add
sub
lret
iret
xor
add
pop
lods
data16
pushf
xchg
ja
fmull
dec
push
jo
add
push
fwait
xabort
ds
lods
inc
clc
mov
lea
clc
out
push
add
stos
mov
add
fstl
pop
mov
scas
inc
add
add
add
loopne
and
inc
add
sti
xchg
sbb
cld
sub
add
clc
mov
ss
clc
cs
pop
out
xchg
bound
add
cmp
add
pop
dec
sbb
lret
push
scas
jb
add
clc
inc
add
push
add
xchg
and
add
push
in
jnp
fadds
push
rclb
add
es
adc
add
sti
test
mov
clc
fiaddl
add
mov
xchg
dec
push
add
sbb
pop
mov
fldt
sub
mov
fisubrs
fcomip
xor
add
cmpsl
clc
and
add
dec
into
lock
push
sbb
add
loopne
pop
test
cs
add
aas
inc
add
sahf
iret
sub
add
or
sub
clc
test
add
outsl
cmp
xchg
popa
add
xbegin
stc
xchg
sti
je
push
add
xchg
addr16
xlat
mov
push
icebp
adc
add
dec
js
imul
in
out
fwait
mov
xor
add
or
clc
insb
pop
stos
test
mov
fcoml
add
or
add
clc
mov
cmp
mov
outsl
test
xabort
clc
test
fwait
inc
add
jl
cmp
clc
aas
cmp
and
add
xor
add
insl
sub
clc
inc
clc
mov
sub
clc
sbb
add
pushf
mov
inc
clc
fidivrs
and
add
mov
addr16
imul
lods
xchg
push
clc
dec
mov
clc
int
pop
fiaddl
add
fildll
add
into
outsb
lods
mov
inc
clc
lahf
pop
daa
clc
cmp
sub
and
add
or
push
jp
lret
test
imulb
clc
inc
clc
data16
and
dec
cmp
add
clc
fs
mov
cmp
cmp
lahf
cwtl
adc
add
clc
mov
add
lock
add
clc
sar
mov
or
inc
add
data16
sbb
sbb
add
add
cmc
inc
clc
cmp
add
popa
add
mov
and
add
adc
sub
add
clc
scas
js
dec
sahf
mov
add
clc
fisubrs
clc
push
add
sbb
lea
add
xchg
cmp
add
clc
jl
add
sub
clc
cmp
clc
jbe
clc
test
mov
push
mov
add
nop
or
sbb
enter
clc
sub
push
jp
and
add
clc
jl
clc
adc
add
add
mov
add
lea
or
lret
clc
sbb
jl
icebp
scas
xor
cmc
jl
ja
loopne
cmp
ret
clc
sar
cltd
pushf
fwait
xchg
mov
loop
sbb
sub
test
lahf
xor
add
mov
push
test
addr16
inc
clc
cs
fildll
clc
cmp
cmc
sub
fcompl
xlat
call
add
jp
mov
scas
jo
add
inc
add
call
push
add
aam
add
sbb
or
clc
sbb
clc
mov
or
add
test
inc
clc
dec
clc
insb
adc
add
clc
notl
stc
dec
xchg
sbb
clc
imul
add
cmp
inc
clc
js
pushf
test
jno
add
clc
add
add
rorl
add
add
clc
jecxz
or
clc
in
lcall
int
clc
or
js
bound
add
and
xbegin
inc
add
out
mov
clc
cmpsl
clc
test
dec
ret
mov
icebp
or
mov
gs
shl
cli
sub
adc
add
sar
clc
jp
add
ja
add
pop
jge
clc
jno
add
cmp
mov
nop
adc
add
or
add
ds
pop
inc
clc
dec
fwait
xor
mov
daa
clc
call
adc
add
xchg
fmulp
pop
dec
jae
add
js
clc
jmp
repnz
add
test
insl
xchg
jo
add
lret
pop
ja
dec
mov
sar
xchg
ficomps
xor
add
add
pop
and
jno
add
test
adc
add
add
aam
stos
pop
or
clc
movsb
clc
arpl
add
pushf
shll
add
fs
jne
mulb
xbegin
push
add
cmp
mov
clc
pop
mov
sahf
ljmp
clc
cmp
jns
in
hlt
test
add
xor
add
clc
mov
repnz
add
mov
add
rcr
and
add
pop
add
jbe
sbb
xchg
fisubs
clc
pop
jmp
clc
cmpsb
clc
cld
pop
pop
sti
in
mov
loop
dec
lods
xabort
outsb
mov
cmc
dec
pop
cmp
or
add
mov
add
gs
xchg
jecxz
sbb
jnp
clc
push
iret
std
loop
jno
add
cmp
mov
loope
ljmp
jge
loop
insl
pushf
pushl
bound
add
add
jg
add
leave
xabort
movsl
clc
and
adc
test
sbb
jmp
clc
dec
dec
add
xlat
mov
clc
sub
sbb
clc
push
pop
clc
lahf
jb
add
clc
outsb
jl
nop
scas
pop
and
add
popa
add
arpl
add
hlt
xlat
mov
xchg
mov
cmpsb
clc
adc
add
xbegin
fstps
scas
sub
cld
and
mov
adc
add
pop
sub
jne
inc
add
sar
add
add
add
ret
dec
push
sbb
add
cmp
and
add
add
xchg
mov
and
stos
stos
call
imul
movsl
clc
jae
add
fdivs
add
add
mov
dec
pop
and
add
push
js
xor
add
add
mov
adc
add
add
mov
nop
lret
loope
cmp
call
pop
push
inc
add
mov
clc
clc
lret
pop
jae
add
clc
add
add
mov
movsl
clc
cmc
adc
data16
xbegin
pop
pushf
bound
add
cmp
xchg
cmp
add
mov
clc
jnp
add
mov
rclb
dec
jg
xchg
pop
insb
jno
add
dec
lea
add
clc
cmp
sahf
nop
jnp
clc
testb
addr16
iret
mov
sub
jle
int
dec
cmp
add
add
add
lret
clc
mov
aad
add
mov
data16
out
xchg
add
add
inc
add
dec
es
stos
rorl
aad
mov
clc
fsubr
push
jo
add
shll
xchg
mov
or
mov
dec
or
xor
add
leave
fwait
push
dec
das
sar
clc
mov
or
mov
mov
sbb
add
lret
jmp
add
sub
test
fs
or
sar
out
and
add
add
mov
aam
clc
pop
cmp
add
jecxz
iret
mov
clc
jmp
jp
cs
sub
clc
loopne
imul
add
clc
int
lahf
push
out
es
jmp
pusha
add
add
add
add
clc
and
add
add
cli
mov
clc
pop
clc
mov
sbb
in
stos
test
daa
clc
std
adc
add
or
clc
test
loopne
cmp
outsb
scas
dec
sub
int
add
xor
add
mov
add
cmp
add
mov
rcr
push
dec
push
arpl
add
adc
add
cmpsl
clc
fwait
fs
std
pop
sahf
insb
pop
loope
aaa
jecxz
mov
pop
das
and
add
lea
shl
xor
clc
jmp
insl
jne
add
mov
clc
iret
ljmp
stos
fstpt
sahf
cmp
out
mov
pop
ds
lcall
test
push
pop
lods
or
fucomi
and
add
clc
jg
clc
hlt
filds
add
into
or
sub
clc
movsb
clc
xchg
test
sbb
add
mov
clc
mov
sub
and
cltd
jne
push
ljmp
test
jo
add
flds
call
clc
mov
jno
add
push
pushf
popf
stos
addr16
dec
ret
fimull
out
push
and
add
lods
inc
clc
jo
add
add
xchg
xor
add
clc
repz
sbb
ja
sar
pop
mov
pop
push
add
mov
movsb
clc
leave
stos
cmp
gs
cmp
clc
stos
insl
mov
cmp
sbb
lods
repnz
mov
clc
aaa
sbb
clc
imul
xchg
pop
lods
push
xabort
rcrb
dec
mov
notb
mov
clc
out
or
jo
add
sbb
add
jns
clc
pop
stc
add
sub
add
mov
ret
stos
or
or
fs
cmp
push
or
fs
enter
add
aas
out
mov
inc
clc
sub
add
out
sub
aas
sbb
cwtl
pop
push
add
mov
add
dec
push
add
popf
jp
not
jns
jne
or
int
add
sbb
add
pop
mov
iret
jecxz
in
fsubrl
pop
cmp
clc
cmp
push
cmp
call
cli
xchg
pop
fs
lret
or
out
push
ffree
clc
inc
add
sub
addr16
jecxz
and
jg
out
jnp
aaa
mov
cmpsb
clc
cmp
arpl
add
jbe
dec
xchg
cmp
aam
dec
mov
test
pop
dec
popf
xchg
inc
add
clc
movsl
clc
ret
clc
inc
add
pop
jle
loopne
ret
clc
cmp
clc
leave
mov
xor
add
add
fwait
mov
or
sub
clc
mov
out
and
xor
add
jbe
fdivrs
clc
dec
sbb
bswap
call
nop
cmp
add
mov
fisubl
add
lods
sub
push
add
data16
ficoml
in
inc
add
pop
clc
sub
dec
xor
add
sar
clc
nop
stos
dec
xor
add
in
dec
add
add
clc
out
dec
rcrb
incb
add
mov
arpl
add
fs
repz
addr16
sbb
scas
add
add
stos
mov
add
xchg
scas
inc
clc
push
dec
cmp
adc
add
lods
xchg
or
xor
add
stos
loope
cmp
bswap
leave
add
add
add
ret
clc
dec
sbb
clc
or
mov
sbb
clc
inc
add
repz
clc
mov
xabort
aam
cmp
ja
mull
add
sbb
cmp
clc
lock
pop
mov
or
xor
add
popf
dec
ret
clc
mov
je
clc
mov
clc
es
mov
adc
add
int3
call
add
xchg
test
cmp
cs
loope
sbb
mov
push
clc
js
add
iret
pop
inc
add
out
cli
loop
cmp
dec
pop
out
xchg
leave
aad
clc
or
cltd
pop
push
add
frstor
add
add
add
add
js
add
inc
clc
xor
add
fs
mov
add
lock
dec
push
add
xchg
clc
insb
stos
cmpsl
clc
movsl
clc
push
lahf
mov
clc
lcall
sbb
jno
add
mov
clc
sub
in
movsb
clc
test
shll
add
add
cmp
fldenv
add
clc
or
out
jmp
insl
cmp
cmp
add
dec
and
add
clc
sar
std
sbb
insl
in
loopne
iret
xabort
out
cmp
popa
add
mov
cmp
clc
fcmovbe
fcmovnbe
bnd
imul
add
in
xchg
xor
mov
clc
lods
pop
mov
cmp
add
xor
sar
call
or
cmp
add
bound
add
ret
clc
xchg
pushf
outsb
xchg
test
clc
xor
add
jmp
clc
cmp
add
sub
clc
cmc
pop
push
add
divl
sbb
jle
clc
repnz
add
pop
out
xchg
mov
clc
out
xor
add
test
jecxz
xabort
clc
xor
add
mov
mov
test
inc
add
test
xchg
jo
add
roll
mov
add
fsubrl
add
loopne
mov
mov
rorb
clc
out
es
sbb
movsb
clc
cmp
add
add
adc
add
jg
clc
mov
out
pop
test
ret
mov
push
add
mov
add
dec
repz
lods
cmp
fistpl
clc
clc
inc
clc
and
add
pop
pop
pushf
jle
add
sbb
data16
fwait
jmp
xbegin
clc
mov
xlat
push
add
inc
add
es
xor
push
add
daa
clc
mov
xchg
shrl
lods
cmp
add
call
int3
sar
adc
add
test
sbb
rolb
outsl
cs
out
mov
clc
stos
cs
xor
add
in
and
add
out
push
add
add
add
js
mov
fldl
popa
add
sti
jno
add
and
add
in
lods
and
add
add
and
add
rep
je
clc
fistpl
cld
jl
imul
and
add
jne
pusha
add
xor
add
imul
scas
push
add
je
pop
clc
dec
inc
clc
in
cmp
sar
sbb
out
sub
cld
mov
clc
cmp
add
test
and
add
sub
add
fwait
insl
sbb
call
inc
clc
pop
fmuls
ds
clc
daa
clc
arpl
add
pop
jo
add
sub
clc
rcr
dec
shrl
push
add
mov
add
cmp
cmc
push
mov
sbb
clc
jl
arpl
add
inc
add
mov
add
ret
clc
push
mov
and
add
clc
out
loop
mov
call
cmp
ss
push
clc
xbegin
add
cmp
add
fadd
clc
std
mov
mul
clc
inc
add
test
adc
add
sub
cmp
loopne
test
add
std
inc
add
and
add
clc
iret
iret
out
mov
add
add
mov
push
dec
int3
outsb
push
add
hlt
in
aaa
xchg
adc
add
fdivl
test
std
or
sbb
iret
and
add
clc
sahf
ret
clc
fnstcw
sbb
mov
aaa
icebp
test
xor
add
pop
or
sub
add
cmp
dec
mov
sbb
add
js
lea
enter
clc
leave
push
add
cmp
pusha
add
jne
dec
gs
imul
addr16
fabs
clc
std
mov
adc
add
test
loope
cld
mov
jmp
clc
popa
add
aas
rcll
add
jns
add
fwait
mov
push
test
mov
dec
cmp
or
add
cmc
jbe
clc
mov
lcall
sbb
jp
clc
fstl
out
jecxz
insb
jp
inc
clc
shrl
jo
add
mov
lret
inc
add
cmp
jle
clc
dec
sbb
cmp
add
cmp
je
dec
clc
cwtl
and
stc
insl
mov
add
mov
mov
in
pop
clc
cmp
mov
push
clc
jae
add
add
add
sbb
fdivr
outsl
js
mov
fsub
clc
clc
xchg
mov
add
add
push
cli
mov
xchg
mov
sar
lcall
sub
mov
or
clc
inc
clc
xlat
and
add
dec
lea
and
add
cs
lea
stc
fs
rclb
xchg
dec
pop
lret
scas
jge
sub
fidivrl
addr16
fs
rolb
inc
clc
push
clc
lods
dec
fs
hlt
das
sarb
xor
add
clc
xchg
aam
adc
add
in
pop
dec
adc
add
mov
cld
sbb
push
clc
or
add
in
cmp
movsb
clc
xchg
adc
add
hlt
mov
ljmp
jp
cmpsl
clc
pop
das
rcrl
add
clc
add
add
add
xchg
mov
clc
sar
mov
add
repz
xchg
adc
add
jb
add
cmp
pop
inc
clc
xbegin
clc
scas
stos
jae
add
cmp
insl
push
add
pop
mov
add
add
clc
dec
mov
add
jae
add
clc
ret
sahf
dec
adc
add
stos
call
out
xchg
dec
mov
add
xor
add
sub
clc
jmp
clc
pop
adc
fadds
add
and
add
xor
add
popf
push
add
add
decl
inc
add
xchg
lcall
jnp
insl
cmc
cmpsl
clc
test
daa
clc
pop
and
dec
pusha
add
sti
fdivl
clc
stos
mov
outsl
fcoms
jge
movsl
clc
dec
dec
xchg
shll
or
mov
clc
xchg
mov
clc
std
dec
js
clc
mov
fdivrl
jmp
add
add
repnz
enter
aas
int3
ljmp
or
clc
es
sahf
pop
imul
add
and
cltd
inc
clc
dec
and
add
das
fs
sbb
pop
sar
daa
clc
lock
add
cmp
scas
push
push
mov
or
clc
mov
je
push
idiv
or
add
xchg
sbb
xchg
cmp
lcall
push
add
xor
je
mulb
add
dec
cmp
add
loope
sub
arpl
add
add
cmpsb
clc
test
and
es
pop
fwait
and
add
jmp
add
sar
xchg
mov
pop
clc
push
add
pop
gs
rcl
jecxz
imul
inc
clc
push
mov
jno
add
ret
and
push
cli
cmp
lahf
sti
add
add
mov
clc
xabort
add
push
inc
add
adc
add
pop
add
add
xchg
pusha
add
cli
jb
add
leave
xchg
in
mov
mov
push
add
xchg
test
loop
pop
fildl
mov
and
add
add
in
push
sub
and
add
mov
add
add
inc
add
add
add
cli
xor
add
add
jmp
outsl
mov
mov
inc
clc
ss
out
dec
fadds
add
mov
jae
add
js
xchg
adc
add
icebp
cmp
inc
add
sub
std
push
mov
add
or
pushf
push
add
sahf
int
icebp
sahf
faddl
add
and
add
xor
add
iret
in
push
int
add
pop
out
aas
dec
mov
ds
clc
out
push
add
add
clc
mov
clc
sub
cmovb
add
jb,pn
add
clc
movsb
clc
dec
and
add
fs
mov
add
adc
add
clc
test
fisubs
add
out
push
clc
pop
test
or
inc
add
jmp
add
stc
jns
bsr
cmp
popf
divb
and
add
add
add
fwait
shll
jns
cmp
movsl
clc
adc
clc
cltd
cmp
fcoml
push
adc
insl
bound
add
and
add
cli
das
and
jle
shlb
add
clc
cli
push
shr
jp
add
jecxz
iret
inc
clc
xbegin
pop
clc
and
add
pop
clc
pop
add
or
xor
and
add
add
sbb
add
pop
clc
mov
ret
clc
hlt
jne
jge
clc
xlat
push
aam
clc
fdivrs
cs
mov
add
add
clc
mov
clc
push
cmp
shr
and
add
jecxz
loopne
push
fwait
ds
insb
fwait
out
pop
clc
mov
clc
fsubrs
add
xor
and
add
or
clc
data16
adc
dec
sub
pop
xchg
inc
clc
clc
mov
jnp
jo
add
push
aad
add
in
add
add
std
jne
jne
out
push
add
jo
add
repz
arpl
add
jg
inc
add
jne
mov
add
mov
movsl
clc
into
adc
add
idivl
loopne
or
loopne
or
add
dec
inc
clc
sub
clc
cmp
dec
cmp
clc
mov
clc
aad
fs
js
clc
and
int3
fs
jnp
cmp
mov
dec
cwtl
mov
clc
and
add
xabort
fs
out
mov
inc
clc
mov
jle
add
push
push
lret
lahf
loop
add
imul
sbb
pop
insb
xor
clc
int
xchg
cmp
clc
or
lcall
and
add
add
pop
mov
or
clc
movsb
clc
scas
xlat
movsl
clc
inc
add
popa
add
sbb
jnp
clc
cmp
push
add
or
rorb
add
jns
push
jmp
inc
clc
inc
add
clc
pop
clc
out
psraw
sub
add
pop
xor
add
clc
lcall
push
add
push
add
xchg
push
repnz
add
mov
std
out
xor
add
sbb
sub
cld
xchg
push
std
mov
lcall
roll
adc
add
xchg
and
add
cmp
loopne
pusha
add
lods
mov
sar
sub
add
ss
mov
mov
clc
pop
clc
and
add
clc
fidivrs
adc
cmpsl
clc
test
mov
mov
add
clc
xabort
clc
lods
add
add
inc
clc
cmp
dec
test
jl
clc
xchg
pusha
add
cmp
jl
xabort
clc
enter
repz
into
js
xchg
mov
clc
loopne
add
lods
in
xor
add
add
cmp
add
add
ljmp
add
push
add
dec
lods
mov
mov
jmp
clc
addr16
ds
clc
arpl
add
es
scas
ficomps
jne
add
clc
outsl
mov
clc
mov
add
xor
push
jl
ljmp
mov
rcl
xchg
pop
inc
add
inc
clc
mov
in
adc
add
add
inc
clc
je
lret
add
sbb
cwtl
jecxz
dec
mov
clc
push
outsl
mov
clc
xor
add
pop
push
clc
xchg
sbb
iret
push
cmpsl
clc
mov
clc
jb
add
ja
clc
rcrb
clc
pop
pop
inc
clc
repnz
xchg
push
add
hlt
adc
add
and
add
clc
out
in
cld
sbb
fidivl
cmpsb
clc
pop
clc
xbegin
clc
sbb
add
pop
sar
add
fsts
cmp
ja
or
add
inc
add
decl
push
xlat
add
add
sub
push
call
push
loope
adc
jge
add
push
mov
clc
mov
clc
jmp
xor
add
add
inc
clc
pop
mov
add
push
in
clc
jp
or
cmp
loope
ja
fs
pushf
dec
jne
hlt
dec
sub
clc
cmp
or
add
stc
and
sbb
xchg
or
lahf
pop
loope
jmp
sub
pop
push
sbb
sti
insb
sub
test
mov
aad
divl
add
mov
dec
scas
loop
jl
add
add
add
clc
push
clc
xabort
sub
xchg
xlat
ret
jbe
clc
addr16
pop
jo
add
sbb
shr
push
divl
and
add
lret
movsb
clc
xbegin
xor
clc
and
add
stos
loop
pop
clc
insl
xchg
imul
push
add
scas
stos
and
mov
clc
fisubrl
aas
push
add
push
add
inc
clc
gs
cmp
clc
pop
mov
add
jmp
mov
add
int
clc
clc
mov
clc
sahf
iret
imul
adc
add
clc
pop
scas
jnp
mov
clc
sar
clc
cld
xchg
adc
add
clc
pop
popa
add
xabort
add
sbb
arpl
add
js
clc
daa
clc
or
and
add
pop
clc
and
add
adc
add
add
pusha
add
cwtl
xchg
adc
add
clc
sbb
insb
dec
lret
add
fwait
lcall
dec
adc
add
clc
inc
clc
push
inc
clc
jmp
clc
push
pop
inc
add
sub
or
clc
int3
jbe
clc
inc
add
scas
or
push
add
popf
add
add
or
inc
clc
xbegin
clc
add
repnz
or
rclb
adc
add
jb
add
add
xchg
dec
idivb
clc
mov
nop
call
push
add
pop
jne
clc
or
dec
ret
clc
mov
dec
adc
add
adc
add
or
clc
je
shrb
sti
mov
add
fisttps
push
add
jae
add
add
add
and
add
lea
inc
clc
ret
clc
mov
add
xchg
addr16
adc
clc
cmp
clc
mov
xchg
mov
clc
sub
stos
inc
add
fildll
mov
sub
add
push
pop
call
clc
mov
xchg
mov
jmp
clc
cmp
aam
outsb
push
lret
mov
mov
stos
into
notl
cmp
add
push
fwait
iret
dec
pushf
sbb
and
add
add
adc
scas
ret
clc
ljmp
mov
and
add
add
clc
xchg
sub
jb
add
xlat
aas
repnz
add
push
xchg
sar
add
cltd
or
and
mov
sub
rcrb
in
mov
and
add
cmp
mov
add
ja
sub
jo
add
jmp
and
add
test
clc
pop
mov
sub
add
xchg
and
ds
clc
out
sub
aam
clc
inc
clc
cmpsl
clc
sub
clc
lret
push
add
jmp
add
addr16
mov
pop
xbegin
bound
add
add
add
mov
loopne
cmp
mov
mov
lods
imul
popa
add
mov
in
movsb
clc
pop
clc
inc
clc
inc
clc
call
xor
add
mov
cmp
cmp
clc
mov
jae
add
add
clc
insb
out
test
scas
xchg
xchg
lea
mov
mov
add
add
jmp
leave
roll
ss
clc
and
add
gs
inc
add
test
fmul
vstmxcsr
add
int3
in
in
fdivrl
mov
inc
add
repz
dec
xchg
cmc
ds
clc
mov
bound
add
das
negl
popa
add
test
hlt
pop
lods
mov
add
cs
fcmovbe
jne
push
int
clc
sbb
add
aas
jecxz
inc
clc
xchg
cmp
add
xor
add
sub
insb
sub
clc
sbb
ss
out
lret
mov
mov
add
cmpsb
clc
mov
or
clc
or
mov
add
mov
clc
mov
push
xlat
pop
adc
loope
gs
loop
jecxz
and
add
gs
nop
mov
add
add
icebp
imul
mov
clc
xor
add
add
jae
add
add
stc
mov
fwait
cmp
add
push
clc
xchg
fmuls
jne
clc
xlat
je
add
add
stos
mov
add
add
jbe
loop
pop
and
add
add
adc
aam
dec
test
pop
xor
add
add
mov
cmp
clc
inc
clc
repz
cmpsl
clc
popa
add
xlat
mov
dec
jbe
in
in
jp
ljmp
popf
fldcw
add
inc
add
enter
mov
arpl
add
mov
clc
scas
js
clc
clc
outsl
cmc
imul
add
push
add
cmp
clc
cld
cmp
jl
add
stos
mov
clc
stos
out
xor
rcrb
push
dec
inc
add
pop
outsb
icebp
popa
add
mov
add
fisubrs
lcall
clc
outsb
sbb
bound
add
add
push
jmp
clc
mov
mov
pop
adc
add
clc
dec
shl
lcall
movsb
clc
jnp
or
cltd
lock
clc
jl
jne
clc
cmp
add
add
inc
clc
sub
cmp
add
daa
clc
loope
xchg
sub
mov
clc
in
jb
add
push
clc
andps
rorl
clc
fcmovnu
mov
jmp
clc
mov
add
movsl
clc
imul
or
clc
scas
pop
cwtl
arpl
add
clc
push
cmp
mov
clc
xchg
iret
jp
add
add
push
out
jmp
add
sbb
sbb
loope
mov
inc
add
mov
add
stc
popl
hlt
rcr
add
add
pop
call
clc
mov
clc
cs
test
clc
outsb
fstl
pop
ret
clc
and
add
add
add
imul
clc
lock
add
mov
add
cmpsb
clc
popa
add
adc
add
adc
add
push
mov
jecxz
mov
clc
pop
lea
test
jmp
clc
mov
jne
clc
mov
add
pushf
push
add
fimuls
loopne
xor
add
jecxz
loop
push
add
pop
lock
add
add
add
std
clc
mov
rorl
add
mov
or
or
clc
and
add
jbe
inc
add
leave
inc
add
jb
add
adc
add
pop
fnstcw
sub
add
lret
xchg
ja
jmp
pop
clc
adc
add
add
add
jecxz
or
ficoms
pop
or
clc
shrl
add
pop
dec
mov
mov
hlt
movsb
clc
push
push
rolb
clc
fsts
add
add
add
mov
add
fidivs
add
xlat
xchg
movsl
clc
loopne
mov
clc
jae
add
add
cmpsl
clc
mov
add
mov
int
clc
js
add
pop
mov
cmc
in
cmpsb
clc
jl
jg
push
add
jle
push
insl
mov
sub
add
loope
ja
dec
adc
add
clc
mov
clc
inc
add
sti
pop
jl
ret
clc
xor
add
xor
add
xor
add
scas
mov
clc
fs
mov
mov
clc
stc
aaa
cmp
add
lea
add
sbb
clc
and
add
insl
test
inc
clc
mov
add
fsubr
insl
loope
sbb
insl
sbb
clc
jmp
cmp
add
mov
iret
jl
pop
clc
mov
clc
pop
movsl
clc
push
and
add
xor
add
icebp
mov
scas
and
add
and
lea
add
add
add
bound
add
jl
es
in
arpl
add
fisubrs
outsb
es
push
add
ret
stos
fsubr
sub
mov
arpl
add
clc
cli
and
add
clc
adc
add
addr16
aaa
xor
add
clc
push
into
test
xabort
std
mov
