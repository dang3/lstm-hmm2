adc
xlat
outsl
mov
inc
add
cmp
sub
pop
or
jp
dec
mov
mov
sahf
sub
dec
pushl
push
loopne
sti
filds
mov
lods
jg
add
add
idivl
incl
add
cwtl
xchg
lret
push
das
pop
cwtl
xchg
fisttpl
ljmp
lcall
ror
add
addb
enter
jg
outsl
dec
js
pop
and
add
je
cmp
lods
loopne
jmp
jno
cltd
cmpsl
fwait
jnp
mov
mov
mov
test
gs
mov
outsl
pop
jno
out
jno
lods
dec
inc
adc
or
add
jnp
inc
add
outsl
xor
sbb
xor
cltd
hlt
repz
jmp
add
jne
mov
pop
cli
fwait
xor
jne
rcr
adcl
pushf
int3
jmp
add
fsub
insl
or
test
dec
mov
jg
sbb
repnz
and
sbb
mov
pop
lahf
out
pop
aad
data16
in
lcall
mov
lods
xor
push
int
je
push
or
and
xchg
jl
add
adc
dec
leave
mov
jmp
insl
imul
xor
pop
shll
mov
hlt
push
xchg
mov
sub
adc
add
bound
inc
jo
sub
xchg
rolb
int
add
addr16
scas
leave
push
push
jl
fisttpll
add
xchg
jge
mov
or
or
sbb
mov
movb
test
sbb
xchg
inc
add
add
out
mov
stos
fstl
adc
push
push
mov
daa
out
adc
fdivs
aas
add
add
stos
scas
push
pop
dec
xor
add
insl
cmp
dec
add
mov
pop
movsl
in
pop
lds
repz
fdivrs
imul
add
int3
fsubr
jo
jae
adc
or
cmc
test
mov
insl
cltd
xchg
jle
ret
pusha
add
fwait
je
or
in
jge
and
sbb
lds
rorl
mov
add
add
cltd
lock
and
push
add
in
dec
add
in
aam
add
outsl
sbb
jne
imul
inc
enter
test
cwtl
sbb
addl
push
ds
stos
mov
add
cmc
cmp
mov
popf
add
fmuls
pop
test
adc
popf
jno
leave
and
push
das
lea
cs
lret
sbb
test
notl
cmc
push
add
gs
push
jge
cmpsl
out
add
sbb
dec
out
jg
xor
cmpsl
pop
lcall
dec
mov
fs
push
mov
stos
jo
sub
push
clc
dec
addb
jl
int3
call
iret
sub
andl
inc
jle
inc
add
cmpsb
cltd
cmp
jp
movsl
or
call
aas
movb
add
sub
stos
daa
cmp
sbb
dec
cmpsl
shlb
push
fcomps
imul
add
int
nop
aam
stos
lods
inc
jbe
and
insb
add
repnz
xchg
fstps
push
fdivp
into
lods
es
ja
lock
mov
test
add
movsl
inc
add
cmpsb
cmc
addr16
add
add
add
push
add
out
push
fidivs
cmp
pushf
int
or
or
mov
cli
out
call
clc
out
data16
adc
rolb
dec
cli
add
scas
test
popf
mov
add
in
into
mov
je
into
aad
xchg
jae
cmp
push
pusha
add
jecxz
add
lods
addb
into
xor
fwait
addb
push
cmpsb
insb
lret
cmp
das
loop
or
lods
mov
push
add
jns
jbe
mov
popl
popf
mov
out
cmp
stos
adc
push
fstp
jno
icebp
mov
inc
add
mov
sub
and
xchg
cli
das
or
mov
cs
mov
lret
stos
pop
adc
add
dec
jae
jmp
xchg
lods
or
xchg
mov
sub
inc
por
or
mov
inc
dec
inc
mov
mov
xlat
mov
cmpsl
dec
clc
and
xchg
call
inc
add
and
mov
mov
mov
dec
andl
xor
pop
pop
mov
cwtl
xchg
add
addl
imul
xor
add
xor
cmp
fucomp
arpl
add
inc
jg
das
sbb
mov
adc
ret
cmp
test
hlt
pop
aad
sahf
sub
imul
sub
sub
jmp
dec
ret
cltd
scas
lret
jmp
lret
shlb
popa
cld
jno
test
xchg
faddl
push
push
adc
mov
add
dec
clc
mov
lods
push
sub
aad
je
cmp
add
dec
xor
cli
jo
xor
add
je
mov
add
mov
movsl
into
jne
mov
fdivl
sbb
dec
xchg
in
cmc
lcall
not
in
sub
ret
mov
mov
fwait
cmp
clc
fs
adc
push
add
idiv
add
add
lock
jecxz
data16
cld
mov
jns
add
scas
adc
movsl
aas
sbb
or
test
push
ret
mov
dec
enter
adc
mov
or
xor
ss
frndint
sub
xor
cld
hlt
cld
cli
imul
sub
cmc
push
mov
les
dec
jp
addb
outsl
xchg
pop
mov
into
adc
cmp
add
add
inc
add
ficomps
inc
and
jb
loopne
or
roll
pushf
dec
insb
rolb
mov
out
push
mov
pop
xor
sub
xchg
cmp
inc
dec
pusha
add
add
rcr
hlt
adc
dec
sti
xchg
mov
andl
test
cmp
repnz
lock
std
or
add
xchg
ja
ss
xchg
add
rolb
push
fidivrs
scas
out
into
xchg
adc
lret
mov
push
cmc
sub
lahf
mov
pop
clc
pop
mov
push
add
dec
jecxz
aad
inc
add
add
push
ljmp
xchg
xor
int
push
cmpsl
dec
lock
test
insl
ds
imul
push
psrlq
outsb
mov
xorl
data16
pop
repnz
daa
inc
add
mov
jmp
xchg
pop
sbb
shrl
push
int3
sub
xchg
lcall
cmpsl
addb
popf
mov
stc
test
inc
repz
and
push
and
stc
add
and
jge
add
mov
adc
je
or
pop
cmp
jne
ljmp
int3
sub
ret
pop
inc
add
add
shll
jb
adc
scas
push
add
and
mov
je
mov
popa
data16
mov
dec
add
loopne
add
add
pop
pushf
aad
add
pop
lds
mov
jmp
mov
lea
inc
add
cmpsl
cmpsb
pop
dec
es
filds
add
jb
add
insl
or
xchg
add
dec
scas
inc
icebp
pop
mov
add
inc
mov
in
cli
and
sbb
dec
aad
and
adc
aas
in
jne
arpl
jecxz
pop
jno
dec
in
inc
xor
mov
mov
rolb
jge
pushw
pop
or
inc
or
dec
arpl
pop
divb
or
jge
mov
mov
cs
add
inc
add
cs
stos
sub
lds
aaa
outsl
lret
es
fcmovnb
add
rolb
dec
dec
sub
push
add
add
jno
xor
inc
mov
or
addb
loopne
mov
or
mov
cld
adcl
jb
jae
loopne
enter
ds
lds
pop
rolb
movsl
cmp
pop
push
mov
mov
xchg
cmp
insl
dec
pop
or
enter
ret
movb
outsb
popf
xlat
sub
push
pop
xchg
les
test
aas
into
cmp
aad
enter
mov
fsubl
repz
pop
mov
lret
lock
mov
mov
inc
jnp
adc
mov
in
fs
cmp
insb
mov
daa
stc
add
mov
mov
fcomps
push
movsb
mov
pop
inc
add
out
push
mov
loopne
movsl
lahf
cmpsl
pop
iret
js
xor
inc
clc
cmpsl
pusha
add
dec
jg
fldl
add
inc
add
test
xor
lahf
mov
in
add
inc
mulb
add
push
add
stos
daa
mov
add
xor
pop
adc
sub
inc
add
add
mov
xchg
jp
gs
push
add
add
hlt
outsb
in
shr
pop
enter
mov
lea
adc
js,pn
mov
hlt
jecxz
cld
mov
xor
mov
inc
and
movsb
cltd
out
pop
lcall
aaa
mov
out
loop
stos
arpl
cltd
stc
pop
jle
jo
sbb
cmpsl
xor
sahf
sub
pop
xchg
notl
jle
jg
out
ret
inc
stos
mov
jnp
rcll
xor
jbe
mul
in
fistpll
add
mov
ja
lods
pop
and
pop
in
insl
fdivl
fs
jbe
ljmp
sbb
or
fidivs
iret
pop
and
cmp
pop
int3
fucom
push
inc
pop
lret
out
dec
loope
fistpl
cli
mov
jl
ss
lahf
fdivs
inc
push
push
mov
jecxz
lods
push
push
sbb
lret
sub
add
aam
mov
outsl
mov
enter
popf
addr16
xchg
pop
sbb
nop
pop
je
mov
dec
or
xor
add
mov
or
es
add
sbb
into
imul
sbb
inc
push
adc
addb
insl
lea
and
scas
out
clc
ret
scas
cli
jne
pop
mov
pop
inc
add
push
dec
call
inc
cmovbe
xlat
or
nop
dec
xchg
lods
bound
jnp
add
out
out
aam
xlat
scas
mull
sarl
or
or
mov
jp
jmp
test
loop
lds
adc
mov
mov
and
xchg
fdivrl
gs
xchg
insl
out
mov
sbb
jnp,pt
call
gs
int
addb
add
inc
add
jo
push
push
ret
add
sub
aas
pop
or
dec
lods
xor
in
lcall
movd
pop
popa
je
push
jmp
addb
std
xchg
test
jl
jno
out
cmp
mov
dec
int
jns
mov
loope
add
xor
stos
add
inc
add
imul
fwait
jmp
sub
mov
mov
loopne
and
ja
jmp
or
add
add
in
sbb
cli
sbb
pop
jg
adc
call
add
push
dec
fidivs
or
ret
push
stos
mov
clc
fisubrl
mov
pop
adc
stos
push
mov
mov
movsl
cmp
push
lret
mov
push
and
add
add
lds
cld
daa
roll
fwait
movb
add
pop
icebp
sub
or
je
push
dec
add
aad
int3
movb
xchg
add
add
lods
adc
addb
sahf
or
or
stos
f2xm1
inc
add
arpl
or
mov
insl
pusha
add
lret
pusha
add
mov
xor
add
mov
sub
dec
das
mov
and
xor
fnstcw
jb
mov
mov
pop
aam
add
sti
lea
imul
jno,pn
shr
adc
aas
jmp
jbe
xchg
incb
out
lcall
addb
mov
add
xchg
cli
imul
xchg
fs
out
or
sub
add
fisttps
cmp
test
ret
xor
mov
ret
inc
gs
sbb
or
mov
add
push
push
pop
and
rcrb
mov
movsl
lahf
in
jae
psraw
sbb
pop
pushf
xor
stos
mov
out
sarb
popf
mov
ja
push
movb
cli
dec
movsl
xchg
jp
add
add
push
test
add
outsb
dec
popf
mov
dec
ja
les
cmpsl
xor
jmp
scas
xchg
ja
pop
test
push
ss
cmp
mov
add
ror
stos
popf
dec
or
fld
jbe
cmpsb
push
mov
sub
push
mov
push
push
push
push
push
push
push
push
notrack
mov
pop
dec
imul
cmp
ss
push
call
cmp
je
mov
lea
push
push
es
call
push
jmp
icebp
mov
nop
cs
lea
xchg
or
lock
lea
repnz
pop
add
ss
cs
ret
add
add
xor
cmpsl
das
mov
add
hlt
int
pop
pop
dec
xor
sub
or
adcl
cld
sub
mov
fsubl
add
xor
lret
mov
dec
dec
dec
adc
out
loop
push
fs
rcrl
add
sub
in
xor
mov
test
cmp
loopne
addr16
xor
mov
js
mov
push
add
aad
jecxz
test
add
xchg
mov
mov
clc
fs
adc
mov
movsb
int3
test
push
jae
sub
mov
movb
mov
or
add
jmp
lahf
nop
imul
mov
dec
rorl
addr16
out
push
cmp
push
add
out
loope
add
loopne
mov
cmp
int
test
add
adc
sub
xchg
rolb
nop
xchg
jae
or
add
je
or
mov
fistpll
into
movb
pop
or
xchg
or
mov
mov
jl
xor
push
cmp
xchg
xor
fmul
inc
andl
and
lock
fs
arpl
pop
xor
and
add
adc
jns
ljmp
mov
sub
imul
cmp
push
out
insb
pop
adcl
cmpsl
xchg
ret
ljmp
adc
add
dec
push
imull
ffreep
add
and
add
hlt
adcl
sahf
add
fidivl
mov
sbb
arpl
add
add
roll
jbe
add
push
push
add
popa
inc
ss
fdivl
testb
and
les
mov
or
or
test
in
leave
push
cmp
in
fdiv
sub
jge
insl
mov
add
add
add
mov
cld
xor
xor
dec
out
data16
add
push
xchg
cmp
mov
sahf
ret
dec
pop
notb
push
add
sbb
dec
push
test
addb
and
add
lock
mov
fcoml
sub
stc
clc
in
test
add
fldenv
add
cmpsl
test
pop
and
cs
dec
repz
pop
scas
push
pop
mov
daa
mov
dec
cli
xor
sahf
je
add
inc
cmp
movsl
test
jg
hlt
push
dec
jmp
add
repnz
add
inc
mov
or
adc
fwait
rolb
lret
mov
xor
out
into
mov
lret
not
int3
mov
shll
popf
lcall
mov
ds
push
shll
mov
lahf
aas
jp
lahf
movsl
out
sub
fildll
cmp
ret
jbe
js
inc
ljmp
add
cmp
loopne
daa
cmp
xchg
mov
jmp
pop
jae
fcmovbe
clc
xchg
mov
cmp
add
cmp
lret
add
in
jne
movb
adc
add
rcrl
ljmp
add
or
cmp
xchg
add
test
fisttpl
add
push
xor
add
lahf
xor
fsubrs
mov
sbb
jo
or
hlt
sub
xor
add
inc
add
shll
push
cmp
roll
addb
hlt
inc
add
ret
dec
jecxz
add
fwait
xor
add
gs
in
and
rolb
daa
fsubrs
xchg
aaa
ljmp
xchg
fistpl
movb
and
lods
addb
test
cltd
xchg
jecxz
ss
or
cmp
add
in
add
cmpl
jmp
insb
ljmp
sub
and
xchg
dec
ja
lcall
out
ds
pop
mov
cli
mov
stos
xchg
pop
pop
xchg
cltd
cmp
cmp
and
and
mov
or
push
sarl
arpl
jbe
fcoml
stos
hlt
out
je
cwtl
loope
aaa
push
fwait
jnp
cmpsl
mov
xchg
movsb
cmp
cmp
mov
inc
insl
es
mov
sbb
scas
rcll
sub
add
mov
leave
fstpl
sub
dec
je
test
or
dec
or
or
and
adc
pop
int
push
and
push
add
js
stos
int
add
xor
add
inc
add
push
cmp
xor
aam
lods
cmpsb
add
in
idivb
sub
adc
add
sbb
fbstp
pushf
mov
stc
repz
xchg
inc
add
add
repz
mov
xor
testl
popf
mov
and
mov
or
insb
jp
sbb
ljmp
repnz
add
ljmp
mov
adc
add
fcomi
jbe
push
ret
mov
add
add
inc
sbb
add
pop
ja
and
jp
fmull
fcmovu
xchg
mov
add
lcall
xchg
lods
incl
push
add
xor
lahf
and
xor
imull
add
test
fistpl
inc
xor
fdivs
not
cmpsb
pushf
lcall
or
jae
hlt
cmp
dec
inc
cmp
nop
mov
add
add
dec
add
out
arpl
pop
js
lds
add
shl
fs
xor
popa
mov
cmp
scas
cwtl
cmp
movb
mov
add
mov
lahf
test
sbb
leave
push
in
add
mov
mov
or
mov
add
jmp
fisttpl
stos
add
inc
fidivs
stc
and
lods
jno
xchg
xchg
jmp
adc
add
and
out
popa
cmp
es
add
inc
dec
dec
mov
sbbl
outsb
shrb
adc
movsl
mov
xchg
push
add
add
gs
cs
insb
flds
mov
pop
movb
shll
insb
sub
xor
jge
lret
loopne
jecxz
and
loop
addb
mov
test
je
sahf
hlt
ss
movl
lods
mov
mov
testl
adc
and
gs
inc
inc
add
add
or
jbe
mov
inc
add
ja
lahf
int
push
iret
unpcklps
popa
adc
test
and
popf
jecxz
add
pusha
add
and
mov
add
add
movsl
rcrb
and
imul
and
ror
mov
repnz
add
inc
add
add
sub
enter
inc
mov
stos
jecxz
xor
nop
mov
cmp
add
pop
inc
add
sub
add
push
dec
lcall
data16
aad
scas
fwait
test
jg
add
inc
adc
cwtl
xor
lret
mov
insl
mov
mov
and
test
cmp
jmp
bound
icebp
adc
mov
pop
pop
inc
xor
fucom
les
or
mov
jns
iret
mov
rcll
in
xor
jbe
jmp
inc
addb
add
popa
fimuls
dec
stos
mov
mov
push
or
pop
xchg
pop
ds
data16
xchg
jp
add
loop
les
icebp
lret
or
pop
jno
mov
push
or
stos
int
mov
add
pop
aad
movsbl
dec
std
jnp
lds
popf
cmp
and
leave
jnp
cld
out
xchg
inc
add
daa
mov
jmp
inc
add
sbb
jp
add
jl
pop
clc
pop
das
fildll
std
sbb
cmp
add
clc
movsb
jge
jne
add
hlt
adc
pop
into
out
mov
std
inc
add
repz
dec
pop
ret
jmp
add
add
xchg
xchg
pushf
cmp
mov
pushl
cmp
ffree
stos
mov
std
mov
pop
into
arpl
xor
mov
daa
movsl
or
inc
add
inc
sub
add
add
cmp
adc
in
push
loope
xor
xchg
push
addb
sub
push
mov
add
scas
pop
add
jle
pushf
ret
pop
nop
lcall
lea
or
add
in
insb
xchg
dec
inc
add
lock
out
loop
push
mov
mulb
loop
popa
mov
pop
jp
push
inc
adc
int3
jns
push
das
and
fbld
add
and
pop
add
loop
push
xlat
rorb
mov
in
testl
popf
pop
pushf
popa
repnz
sub
or
add
lcall
pusha
add
add
dec
jbe
in
pop
int3
shl
sub
add
inc
add
movsb
or
add
jns
add
lea
loope
mov
outsl
test
xlat
fcomi
sbb
xchg
imul
cmp
test
dec
or
cmp
inc
cmpsb
xor
lods
call
dec
jbe
jecxz
addb
shrb
fcmovnu
adc
add
aas
testb
gs
js
push
das
addb
dec
loope,pn
mov
xchg
and
xchg
lds
or
xor
and
jno
xchg
push
and
xor
mov
adc
mov
lret
fisubrs
mov
addb
and
ss
inc
add
movl
mov
cmp
imul
cld
sub
jnp
add
je
push
add
jge
repnz
mov
cld
add
fmulp
push
mov
mov
xchg
jl
jb
inc
add
std
push
or
or
add
add
sbb
insl
push
out
movsb
ds
call
push
mov
push
into
cmp
fstl
stos
push
faddp
sub
add
and
into
jl
notl
test
pop
push
push
stos
gs
xor
or
or
jae
jp
movsb
cmp
jle
pop
push
icebp
aas
leave
stos
mov
call
das
mov
ds
add
repz
add
add
ret
xchg
adc
xor
mov
adc
xor
pop
mov
fcmove
sub
aas
test
loopne
das
cs
push
ficomps
call
movsb
adc
jecxz
sub
sbbl
add
ss
int3
cwtl
roll
loopne
cs
sbb
cmp
xor
xor
and
dec
repnz
jbe
add
mov
jae
shrl
adc
mov
dec
aad
addb
and
and
ss
movsb
in
clc
imul
lods
adc
xchg
cwtl
pop
push
mov
sub
pop
aam
inc
enter
es
fstpt
in
add
jno
movsb
imul
push
sub
cmp
add
sbb
dec
mov
pop
loope
mov
push
xor
push
lcall
ret
cld
sub
xchg
lods
outsl
add
mov
mov
and
push
add
sbb
mov
add
sub
nop
insl
cmp
adc
fisubl
jecxz
jbe
cbtw
mov
add
push
mov
sub
outsl
hlt
dec
jb
and
fldcw
cmpl
mov
into
in
ljmp
lods
push
imul
neg
rorl
out
mov
xchg
pop
test
lret
jecxz
test
repz
mov
fs
stos
add
and
lahf
mov
loope
dec
mov
mov
test
lods
xor
mov
aad
int
pop
pop
mov
add
xor
ds
mov
jecxz
lods
mov
add
hlt
sub
mov
cmp
inc
add
imul
xchg
aas
mov
loope
and
rolb
mov
mov
clc
jns
mov
ffree
add
stos
je
jp
test
xor
pop
mov
aas
sub
mov
fstpt
sub
mov
add
push
mov
pushf
icebp
adc
push
imul
xor
push
lds
mov
cwtl
mov
out
mov
add
cmp
add
pop
fsubrl
lahf
push
dec
mov
and
stc
into
push
inc
pop
and
cli
rolb
lods
dec
out
je
add
sbb
andl
add
push
jne
movb
pop
lock
jo
mov
stos
cltd
mov
pushf
leave
dec
shrl
rorl
fwait
cmc
pop
xchg
dec
test
int3
shrl
movb
sbb
cld
or
sahf
out
mov
or
mov
push
add
aam
adc
and
fistl
adc
divb
dec
addl
pop
imul
mov
mov
std
lretw
mov
psubusw
addb
negb
pusha
add
mov
add
sbb
loop
imul
xchg
push
xlat
sahf
add
inc
adc
or
rol
jb
add
xchg
rol
add
add
jmp
insb
stos
sub
mov
cli
sti
cmp
inc
add
mov
data16
ja
daa
and
sbb
mov
or
int3
imul
lret
jb
dec
pushf
pop
orl
mov
jg
or
iret
jmp
mov
push
pop
sti
insl
sub
add
ss
push
add
test
adc
or
adc
dec
sbb
out
bound
loopne
jae
mov
xchg
mov
fwait
rcrl
mov
fistpll
xorl
adc
add
pop
iret
fisubrs
mov
inc
mov
push
call
pop
in
xchg
xchg
int3
dec
ss
fcoml
dec
jo
mov
jae
xlat
loop
add
or
repnz
jmp
xchg
adc
xchg
clc
popf
mov
add
and
xor
cmc
sbb
xor
mov
xchg
clc
cwtl
inc
sub
dec
fstpl
sahf
shrb
add
ss
rcrl
pop
xchg
or
or
jmp
push
pushf
test
jnp
jb
scas
movsb
ds
sahf
lods
push
cmp
pop
mov
insl
dec
mov
or
xor
add
ja
jb
add
add
fwait
ja
jp
das
stos
xchg
sbb
mov
cld
insl
cs
enter
mov
inc
inc
add
lret
push
movsb
das
xor
outsl
jbe
jecxz
pop
popa
dec
push
and
cmp
mov
jnp
and
pop
popf
push
add
repnz
mov
popf
aaa
mov
add
pusha
add
add
out
addb
push
fiadds
or
mov
out
addb
rcl
sub
pop
jecxz
adc
add
add
jno
into
cmpsl
fsubrs
inc
add
js
lcall
and
lods
pop
mov
add
xor
jmp
shrb
cmpsl
dec
loop
push
mov
or
adc
hlt
jl
dec
mov
pop
sub
adc
jge
xchg
and
rcrl
mov
mov
pop
cltd
dec
mov
sbb
std
jne
daa
mov
stos
jl
mov
sub
xchg
dec
aad
in
xchg
cmp
inc
add
xor
shlb
pop
ja
add
lds
mov
add
imul
mov
and
sub
mov
xchg
pop
cmp
add
dec
jl
loop
addl
cmp
and
pop
lea
sti
icebp
adc
cmpsb
xor
syscall
jmp
dec
mov
mov
mov
xchg
add
mov
ret
jl
mov
stc
xchg
mov
jecxz
dec
movb
or
xchg
faddl
xchg
push
mov
mov
std
movb
sub
add
cmp
dec
cmp
dec
jecxz
xchg
sbb
mov
or
mov
add
mov
xchg
rorl
faddp
add
cmp
shll
xor
push
imull
inc
add
stc
lret
movsb
cmpsl
xor
mov
jno
adc
cmp
popf
lods
sub
cmp
sub
enter
pop
pop
jmp
add
dec
jnp
addr16
repnz
sub
mov
imul
mov
inc
add
or
sbb
movsb
cmp
cltd
xchg
mov
test
icebp
push
test
xor
push
movsb
js
lret
loop
push
or
out
xchg
leave
jb
add
xor
pop
inc
loopne
and
lret
stos
mov
rolb
mov
jg
jg
int
pop
bound
cld
outsl
xchg
out
dec
outsb
nop
stc
lods
or
mov
dec
cmc
pusha
add
mov
cmp
mov
lods
divb
das
loope
lret
or
sub
mov
shrb
pop
xor
pop
adc
dec
xor
movsl
imul
sbb
xchg
inc
dec
sub
in
jbe
incb
add
ljmp
push
lcall
enter
or
and
je
and
mov
mov
sub
jl
aad
mov
xchg
pop
fsubl
jmp
add
adc
mov
addr16
js
cmpsl
into
imul
stos
pop
daa
shl
sti
test
outsb
pushl
ret
icebp
cwtl
stos
insl
and
sub
add
fdiv
pop
mov
xchg
aam
jne
in
add
es
mov
movb
stos
ret
push
cli
push
mov
xchg
mov
xchg
incb
fisttpll
add
inc
add
cmpsb
add
xchg
fsts
mov
add
pop
jns
lods
movb
mov
adc
inc
jnp
xchg
mov
mov
xchg
xor
xor
jmp
sbb
in
dec
pop
mov
cmp
unpckhps
sub
and
push
jle
ja
cmp
les
das
and
xchg
out
xor
popf
out
movb
jo
in
inc
add
push
gs
test
sub
sbb
mov
jnp
add
push
and
inc
add
pop
inc
add
out
inc
jnp
scas
pop
lcall
je
dec
sub
repnz
ss
mov
jl
aam
dec
xchg
xor
dec
sbb
add
cmpsb
adc
cmp
add
clc
dec
in
sbb
xor
pop
ret
cmp
ja
lea
push
daa
int
adc
xchg
xchg
jge
insb
mov
push
sub
lahf
pop
cmp
add
and
mov
aaa
loopne
or
xchg
faddl
mov
mov
xor
stos
dec
push
add
sub
cmpsl
pusha
add
lods
cli
mov
and
add
movb
add
push
mov
icebp
aam
nop
in
xchg
push
test
sbb
mov
sub
sbb
mov
or
stos
in
out
xor
inc
add
les
mov
or
jmp
int
add
stc
shrl
adc
testl
repnz
imul
push
inc
cmc
fnstenv
loopne
loop
leave
push
push
dec
rolb
jp
xchg
test
pop
inc
repz
repnz
push
mov
xor
add
cmc
je
fimuls
or
enter
in
addb
movb
cmp
xor
ret
jnp
dec
adc
pop
adc
xchg
lock
sbb
cmpsb
lods
mov
leave
pushf
les
sbb
add
mov
add
pcmpeqw
add
js
add
cmp
movsl
pop
dec
out
out
testb
mov
xor
shrb
pop
adc
cmp
movsb
pusha
add
data16
add
xlat
loop
push
lea
sbb
xchg
aaa
imul
addb
push
xchg
mov
cmp
mov
ds
mov
mov
in
xlat
sbb
or
and
mov
pop
test
or
or
pushf
mov
jl
int
sub
fstpt
adc
out
int3
fs
fistpll
add
out
out
sub
or
pop
adc
jo
xchg
inc
mov
inc
add
xchg
stos
stos
xor
iret
jmp
push
pusha
add
fdivrl
out
adc
fisubl
add
dec
imul
pushf
sbb
mov
push
add
add
movb
mov
add
leave
mov
cmc
add
push
mov
popa
dec
push
mov
xlat
repz
pop
scas
or
sbb
mov
jg
lea
dec
mov
add
shl
add
and
adcl
sub
jns
roll
inc
add
pop
jge
jb
add
pop
mov
aas
movb
adc
insl
call
xor
mov
mov
and
in
mov
stc
add
pop
xchg
jbe
add
pop
xchg
loopne
stos
clc
flds
add
fiaddl
jae
daa
out
in
js
sub
cmp
popf
sahf
mov
add
mov
into
fwait
jae
sub
sub
or
rorl
or
fwait
popa
dec
xor
jmp
inc
movb
in
inc
lods
dec
sub
adc
es
movb
add
ret
out
pop
scas
adc
add
push
pop
mov
and
mov
sub
leave
jmp
ja
fcompl
pop
and
addb
inc
pop
lcall
scas
jbe
mov
movb
aas
inc
repnz
pop
adc
push
outsb
adc
sbb
or
leave
mov
xchg
insl
add
jg
loope
hlt
mov
out
insl
aam
push
popa
data16
mov
mov
aad
insb
pop
push
add
scas
cmp
stc
or
push
jbe
dec
lcall
add
cli
jb
jno
add
pop
js
pop
outsb
cmp
sbbl
add
adcl
cli
repz
shlb
or
leave
ds
aas
out
ror
and
cmp
add
add
lcall
rolb
bound
mov
mov
mov
fs
pop
addb
orl
add
int
add
fs
daa
push
shl
mov
adc
idivl
out
lcall
or
pop
rclb
push
mov
cmp
mov
jne
inc
sahf
push
das
pop
fwait
jb
rcl
inc
push
or
fisubrl
aaa
imul
push
xor
out
adc
xchg
add
int
fsubs
cmp
les
pop
jmp
addb
mov
jnp
adc
or
lahf
jno
dec
push
add
mov
push
xor
je
jg
add
dec
das
out
fadd
push
ss
pop
aad
mov
cmp
in
imul
lcall
pop
sahf
shll
cmpsb
movsl
test
xor
aam
lret
inc
add
das
mov
xchg
pop
movsb
imul
add
movq
data16
push
jne
std
lahf
xor
add
add
add
loop
leave
int
cmpsl
pop
stc
inc
stos
jmp
xchg
data16
loop
out
add
or
inc
add
leave
inc
add
fcomp
mov
gs
stc
or
aaa
or
cmp
add
jg
sub
add
xchg
xchg
or
dec
imul
sbb
add
mov
lods
stc
pop
push
add
pop
bound
or
test
addb
aam
scas
adc
orl
pop
jbe
jle
add
sub
push
add
dec
xor
aas
adc
xchg
add
das
out
in
dec
cs
pop
and
into
adc
add
sbb
add
inc
and
je
add
xchg
rolb
outsl
mov
inc
xchg
cmc
xchg
movb
jle
adc
push
leave
push
cmp
insb
adc
in
add
jnp
mov
xchg
push
add
add
or
inc
lahf
push
into
jb
pop
xchg
aam
jle
jg
aas
and
xorl
stos
imul
inc
test
cmp
scas
adc
push
iret
pop
dec
pop
lds
mov
mov
mov
xchg
popf
and
dec
sar
jb
add
or
shlb
dec
sub
scas
inc
cmpsb
sbb
stc
push
add
pusha
add
lret
lret
mov
sbb
mov
cmp
add
pop
cmp
mov
ss
shll
rcll
imul
arpl
fdivrl
pop
inc
add
jo
paddd
mov
pop
dec
pop
je
pop
mov
adc
add
mov
je
jnp
loopne
jmp
sbb
add
add
mov
insl
xor
mov
pop
adc
add
push
adc
inc
into
pusha
add
push
jmp
testb
je
cmp
mov
into
sbb
popa
aam
and
xor
jnp
push
xchg
sti
cmp
and
imul
shl
pop
inc
add
lods
mov
jne
fwait
jne
fldenv
les
addb
add
dec
and
xchg
testb
outsb
int
add
fnstcw
adc
out
add
insl
lods
scas
shrl
lods
insl
sub
cwtl
jmp
pop
mov
and
jo
xlat
mov
xchg
add
inc
sub
arpl
sub
xchg
sub
cmc
sahf
mov
inc
add
aaa
repnz
jns
push
push
pop
pop
enter
push
addb
mov
add
or
loop
lds
into
mov
fidivrs
jb
jge
mov
aaa
mov
add
sub
sbb
cmc
loopne
call
in
jl
js
xchg
cmp
icebp
cmpsb
xchg
jae
lock
inc
add
repnz
out
dec
xor
sub
das
cmp
mov
aaa
pop
test
out
and
sub
fcmovu
sbb
inc
enter
iretw
aas
int
mov
scas
sbb
inc
add
pop
push
pop
sbb
cmp
dec
xchg
aad
push
jo
arpl
mov
push
aad
add
lock
push
hlt
outsb
cmp
sub
dec
sbb
mov
outsb
jmp
push
mov
pop
inc
add
popf
sahf
or
mov
jae
clc
enter
rolb
das
jnp
bound
lods
insb
add
jecxz
adc
pop
test
or
add
push
fisubl
cs
rcr
mov
mov
xor
idiv
jbe
or
mov
sub
pop
and
add
sbb
jbe
popf
mov
cmpsl
mov
add
test
fadds
ljmp
add
inc
add
insl
mov
mov
sarl
jae
push
add
xchg
add
std
addl
movsl
xchg
jecxz
and
dec
mov
cmc
les
inc
add
pop
shl
sub
call
cmpsl
inc
add
pusha
add
lock
fdivrs
insl
loope
aad
fcompl
and
or
mov
lret
lret
dec
pop
cmp
add
mov
sbb
pop
mov
push
call
shlb
push
in
lret
and
test
add
jne
in
hlt
sahf
ficoml
pop
jnp
fisubrl
mov
popf
push
mov
in
es
ljmp
adc
add
in
js
out
inc
add
cmp
cmp
xchg
jle
push
sti
out
add
pop
pop
aam
adc
and
cmp
add
pusha
add
dec
push
lods
xchg
mov
nop
ret
lock
rcr
addr16
xor
int3
mov
rolb
add
ss
mov
dec
les
andl
into
add
jb
inc
add
jge
xor
in
xchg
sti
sti
into
movsl
lret
mov
enter
lea
in
and
add
mov
mov
bound
add
aad
sbb
push
mov
push
pop
in
cs
jp
lock
outsb
pop
lcall
loope
stos
xlat
movb
add
mov
into
or
movb
xor
pop
imul
aad
dec
mov
outsl
jmp
ret
mov
mov
push
lahf
inc
add
pop
dec
xchg
fmull
mov
pop
popf
cmc
dec
sbb
xor
add
or
loop
mov
ret
div
pop
call
add
pop
popl
in
pop
movsb
mov
std
sbb
xchg
sbb
jne
dec
test
add
adc
ret
dec
out
or
hlt
cmpl
outsb
jno
faddp
add
cmpsb
loop
out
xor
xchg
push
or
xchg
lret
hlt
and
lds
dec
mov
dec
movsl
lock
or
repz
test
sub
loopne
sbb
xchg
push
cwtl
fidivs
xor
add
mov
push
add
add
outsl
add
jmpw
dec
mov
rcll
outsl
push
adc
inc
or
add
sbb
fbld
in
mull
fwait
dec
or
in
dec
iret
loop
nop
mov
xchg
in
add
addr16
mov
mov
ja
push
das
mov
add
or
sbb
fs
mov
daa
sbb
xorl
inc
add
sti
dec
sahf
loop
adc
mov
cmpsb
dec
jecxz
cld
pop
lret
enter
mov
adc
mov
add
nop
mov
add
orl
hlt
stos
pop
and
jbe
push
add
lcall
vmovss
daa
js
out
add
fdivrl
add
add
incb
add
jg
pop
dec
aam
xchg
and
in
adc
lcall
pop
push
loope
cmp
lea
dec
cmp
lods
sub
push
push
add
push
cli
mov
movsl
mov
add
mov
icebp
outsb
mov
mov
nop
insl
xchg
xchg
jo
movsl
inc
add
push
mov
daa
mov
lods
add
mov
aam
inc
mov
fsubrp
mov
jb
add
gs
sarl
lcall
in
cld
mov
inc
insb
daa
push
cmp
in
in
mov
pop
test
pusha
add
cmp
pop
inc
push
call
mov
insb
mov
or
adc
imul
movb
das
pop
aam
and
jp
jge
mov
or
insb
dec
xchg
mov
adc
adc
je
adc
xor
rcll
xor
mov
jo
xchg
into
les
rolb
je
pop
dec
inc
add
sbb
or
cld
in
jg
mov
sbb
mov
add
int3
stos
andl
lahf
negl
add
push
jbe
addb
xchg
add
sub
dec
ficoml
int3
dec
icebp
mov
add
sub
push
mov
insl
icebp
push
fsin
repz
mov
bound
add
cmp
cs
ljmp
xchg
inc
sub
je
adc
add
ret
in
popf
or
fidivrl
pop
mov
add
push
cmpps
add
pushf
fsubs
and
sub
or
add
xchg
insl
cmp
sbb
push
add
xchg
sahf
dec
clc
fcmove
js
rolb
and
lcall
insl
mov
test
add
cmp
jb
push
pop
lea
dec
push
movsl
iret
push
xor
fsincos
in
sarl
jae
in
lods
aas
add
mov
xchg
ljmp
inc
fstl
add
ret
pop
enter
mov
mov
sbb
outsb
mov
push
movsb
lcall
div
std
outsb
aam
sti
in
shlb
add
loopne
mov
mov
sub
rolb
jbe
mov
push
mov
dec
in
sbb
cli
pop
stos
pop
add
iret
sbb
add
sub
dec
ret
testl
add
and
xchg
xchg
mov
add
arpl
testb
cld
and
int3
pop
test
in
and
ss
clc
ss
imul
jecxz
addr16
push
jno
inc
add
xchg
cmpsl
mov
js
adc
movb
push
mov
pop
insl
sbb
inc
add
cltd
test
dec
shll
rcr
fsubl
out
inc
and
jl
push
bound
push
sti
pop
mov
in
add
xchg
xchg
sub
test
push
inc
add
xor
movb
cmp
push
lods
popf
and
add
leave
movb
cmp
adc
pop
pop
fldcw
mov
xorl
add
or
pop
inc
add
adc
add
xlat
ljmp
xor
adc
or
je
fistps
mov
out
and
test
mov
jp
push
rcl
call
jo
pop
and
in
and
arpl
add
dec
js
or
xchg
jmp
pop
push
mov
cmp
dec
cmp
les
flds
idivb
mov
jl
add
movsb
mov
xchg
mov
rcrb
mov
and
rcll
jmp
add
mov
jg
lcall
and
sub
pusha
add
pop
outsb
scas
pop
pop
sbb
stc
cmp
scas
push
and
mov
mov
inc
cmp
jl
add
add
jecxz
mov
stos
mov
repz
stos
mov
and
jbe
lea
mov
pop
and
add
in
add
dec
daa
adc
push
pop
xchg
sub
mov
add
dec
enter
pop
das
loopne
adc
icebp
sbb
inc
dec
xor
scas
ljmp
adc
fistpll
fwait
sub
fcom
insb
jnp
ds
in
inc
add
xlat
filds
add
out
add
push
inc
bswap
aad
add
gs
cmp
sbb
sbb
leave
hlt
adcl
xchg
xchg
fnsave
add
xlat
dec
sub
push
push
jl
or
test
pop
sbb
int3
loope
mov
add
cmp
roll
add
sbb
fs
lods
xchg
jecxz
adc
or
adc
scas
jns
mov
inc
add
ret
roll
pop
dec
je
cmp
mov
mov
ss
xchg
add
popf
in
cmpsl
inc
add
data16
sub
arpl
sub
inc
sti
push
add
hlt
test
pop
jg
mov
add
xchg
or
lods
push
lods
loope
add
mov
fimull
xlat
pop
in
add
mov
and
pop
into
jmp
outsb
stc
into
jbe
mov
dec
lods
negl
rcll
rolb
mov
sbb
push
insb
popf
fwait
mov
pusha
add
mov
mov
add
adc
sbb
lcall
mov
cmpsw
daa
scas
adc
cmp
push
je
fsubr
je
mov
jno
pop
jl
nop
sub
orl
sahf
or
jle
in
inc
subl
outsb
pop
cltd
shll
jns
cmp
icebp
icebp
adc
fdivrl
add
iret
push
imul
imul
add
sbb
cwtl
loope
test
push
aas
sbb
cmc
add
adc
add
push
mov
ss
push
cli
lods
mov
jecxz
sbb
rol
jl
aam
or
xor
fisubl
loop
adc
fstpl
cmp
jl
push
jmp
lock
mov
jl
xor
jne
sahf
mov
or
loope
call
xchg
into
pop
insl
xor
pop
insb
ret
imul
pop
std
cmc
loope
cwtl
lahf
jns
daa
push
jae
add
bound
shll
out
xchg
cmp
add
xor
scas
jecxz
xchg
mov
outsb
jl
out
pop
pop
addr16
cmpsb
inc
add
inc
add
mov
adc
mov
or
add
jg
jno
dec
test
std
addb
mov
hlt
or
ss
scas
mov
sub
add
xlat
add
or
rcrb
int3
testb
lret
lcall
cmp
dec
dec
jbe
push
cmpsb
test
cmp
xchg
adc
adc
push
lret
test
sub
pop
int3
sub
scas
mov
add
aas
dec
and
push
jne
es
ja
cmp
sbb
cmp
clc
add
rolb
mov
add
and
add
sub
iret
xor
cmp
fisttpl
cli
xchg
test
mov
xchg
push
test
scas
xor
roll
or
fisubl
jmp
loopne
inc
or
add
in
and
xor
mov
cmp
add
adc
outsb
repnz
cmp
add
xchg
shrb
repnz
popa
adc
popa
adcl
push
arpl
or
or
imul
sti
push
lods
add
add
out
sbb
fistpll
jl
mov
add
sbb
mov
add
add
add
mov
or
addb
ja
lods
nop
and
or
push
js
mov
xor
sbb
stos
std
and
adc
outsb
je
xor
sahf
dec
mov
repnz
mov
test
cmp
imul
ja
cltd
hlt
iret
sub
add
out
into
dec
pop
pop
and
sub
cltd
orl
sub
gs
push
clc
addb
mov
sub
add
sbb
stc
in
adc
xchg
test
ds
and
push
ljmp
mov
jns
fimuls
rolb
jg
out
call
cld
pop
push
and
push
mov
inc
add
icebp
mov
std
loop
xlat
shrl
lcall
mov
mov
jne
dec
int3
loopne
cmpsl
xor
xor
or
cmp
push
loopne
pop
les
mov
int
fcmove
stos
out
out
aaa
xchg
movb
jp
and
mov
or
mov
ja
push
jmp
nop
imul
loop
pusha
add
decb
je
lea
xchg
bound
and
inc
add
aaa
bound
out
jg
cmc
inc
add
enter
call
cs
mov
or
pop
or
cmpsl
lea
push
test
aam
pop
adc
inc
daa
int3
popa
pop
lret
mov
pop
jle
fsubrs
cmp
add
add
aam
and
xor
add
mov
sub
add
movsl
imul
or
mov
xchg
mov
or
ds
insl
jo
push
dec
scas
sbb
push
cmc
decl
das
xor
add
cmp
cltd
loopne
repnz
adc
xlat
jbe
dec
fs
pop
xchg
sub
leave
js
je
add
fwait
push
dec
mov
fs
cmp
ret
pop
mov
movsb
xor
add
rcll
add
add
sub
mov
je
cmp
add
mov
xchg
popa
push
in
enter
pop
ja
movb
add
push
out
arpl
add
add
idivb
ret
ss
push
lret
push
outsl
mov
pop
mov
out
jmp
lea
jp
mov
or
sub
jle
scas
mov
add
lds
fimull
xor
add
mov
add
icebp
and
and
jno
inc
fs
mov
add
add
fdiv
bnd
inc
add
sub
xor
iret
out
fistpl
repz
push
sub
or
ja
add
mov
cld
xor
cmp
add
jge
push
xchg
and
mov
mov
sub
iret
push
pop
scas
jg
rcrl
addr16
xchg
test
ror
cmp
adc
lods
xlat
mov
and
stos
push
push
fsubs
add
mov
inc
add
gs
into
lods
into
inc
insl
xchg
fcomip
pop
jne
mov
mov
dec
dec
xor
inc
add
adc
add
les
jno
addb
add
dec
xlat
test
xchg
mov
cmc
push
xor
or
into
xor
lods
or
fistl
push
pop
mov
movb
mov
and
mov
cld
in
pop
sbb
pop
in
iret
stos
adc
fsubrs
sbb
jnp
cwtl
xchg
ds
jnp
testb
hlt
lret
add
add
in
fiaddl
lret
xor
push
lret
jge
int3
mov
les
push
cs
sar
dec
xlat
lret
popa
sbb
stos
mov
cmp
loopne
add
push
popf
push
mov
fs
add
stos
sub
jp
push
add
push
pop
mov
stc
in
and
test
xlat
mov
add
add
add
xchg
in
xchg
rcl
xor
imul
pop
out
lock
mov
pop
das
xchg
add
pop
sub
lret
mov
pushf
mov
mov
lgs
add
inc
add
jb
xchg
inc
add
dec
fxch
out
cmp
ja
bound
aaa
dec
mov
push
rolb
nop
adc
push
or
pop
lock
adc
lahf
insl
mov
sub
movb
ds
movsl
jp
repnz
xchg
repz
xor
cmp
and
out
fs
dec
add
dec
dec
out
mov
je
iret
jb
jne
add
rorl
out
push
adc
adc
insb
jge
data16
mov
int
arpl
inc
add
movsb
jne
les
out
mov
add
lods
xchg
inc
add
adc
xchg
cwtl
dec
or
mov
add
cld
int
mov
sbb
data16
xor
sti
jne
out
scas
je
inc
add
js
add
rolb
stos
mov
jbe
in
add
pop
mov
jp
mov
add
cmp
movb
or
inc
add
sbb
or
add
and
leave
inc
imul
ljmp
dec
pop
add
dec
test
mov
lds
loopne
jge
in
movb
movb
std
pop
or
insb
add
mov
pop
dec
insl
cmpsb
xor
add
cltd
ss
aam
jl
dec
push
and
mov
mov
or
add
outsb
popf
ja
pushf
pop
jns
add
jns
mov
mov
add
pop
addb
rolb
sub
jge
lea
xchg
adc
pop
pop
sub
das
mov
jno
loopne
enter
int
lds
mov
xor
addb
jmp
add
xchg
cmp
sbb
sahf
movsb
data16
mov
add
data16
out
jbe
mov
decb
sbb
or
jmp
adc
imul
sarl
add
sbb
add
loope
pop
ficompl
out
add
push
ret
shlb
lods
ret
and
sbb
es
xchg
aas
or
inc
add
xchg
cltd
insb
arpl
fisttpll
pop
insb
xor
adc
add
loop
inc
add
jecxz
das
dec
stos
call
pop
adc
popf
push
and
push
outsl
aaa
dec
dec
addb
or
pop
fmuls
cmp
les
add
xchg
stos
fistpl
xor
inc
add
jl
popa
rolb
loop
inc
add
lret
add
mov
aas
addb
std
test
aas
mov
cmp
push
sub
mov
aaa
imul
or
rorl
pushl
pop
add
xchg
mov
mov
into
cmpsl
add
sti
clc
cld
cmp
popf
sbb
fcomi
into
cmpsb
gs
cmp
mov
mov
clc
fsubl
jg
sub
out
testl
mov
mov
add
pop
and
xlat
push
add
push
mov
add
add
mov
fmul
shll
lret
add
into
dec
mov
insl
or
pop
adc
add
adc
sub
xor
movsb
jne
push
or
sbb
cmc
in
xchg
out
inc
add
jbe
inc
push
negl
xlat
sbb
scas
sbb
mov
push
inc
adc
jbe
xchg
pop
mull
pop
shll
jmp
adc
pop
adc
fcompl
push
mov
xchg
cltd
pop
mov
push
dec
xchg
mov
xchg
xchg
push
cmc
test
and
ficoml
in
jo
pop
mov
sub
mov
addr16
sbb
adc
test
jns
pop
jl
jecxz
lahf
pop
addb
ret
ss
jbe
test
or
sbb
adc
adc
in
jg
pushf
mov
or
push
mov
cmpsl
push
sbb
add
push
loop
cmp
nop
or
inc
add
ja
xlat
pop
flds
shlb
sbb
out
or
push
dec
arpl
push
jno
stos
jbe
push
pop
pop
or
test
add
mov
jae
fnstsw
dec
and
xchg
or
shr
sub
outsl
xor
mov
mov
xor
ret
cltd
imul
int
mov
jg
sbb
daa
adc
popf
je
js
cmpsb
add
cld
jecxz
pop
out
add
call
sbb
mov
addb
dec
sub
mov
mov
add
ljmp
jl
mov
adc
dec
mulb
cmpsl
mov
xor
dec
mov
incb
int
ss
xor
pop
add
mov
jmp
add
ljmp
add
jns
add
add
mov
hlt
push
xor
int3
imul
push
fiaddl
inc
add
lahf
popa
mov
roll
aad
ss
out
cmp
or
inc
addb
push
rorl
cltd
mulb
adc
mul
lret
jmp
add
imulb
hlt
mov
test
faddl
add
insb
loopne
add
test
mov
mov
mov
sub
xchg
and
int
jp
dec
ss
jl
adc
dec
sti
stos
or
pusha
add
aas
leave
dec
push
enter
pop
sbb
cmp
pushf
cmp
add
push
ljmp
iret
aas
xchg
fnstsw
lret
repnz
add
jecxz
fisttps
or
scas
lds
jge
dec
ja
loope
leave
jns
outsl
rolb
or
jb
dec
test
xchg
ja
inc
mov
in
in
nop
test
orl
xor
data16
push
push
cmp
test
rorb
sbb
xor
popa
cli
and
add
mov
mov
cld
jb
jnp
adc
mov
stos
lods
sbb
adc
xchg
dec
ret
dec
enter
out
outsl
xchg
stc
and
push
shll
mov
add
into
ss
add
inc
xchg
push
add
aad
in
stos
sar
push
jo
pop
lret
xchg
popa
lods
mov
and
cbtw
addr16
js
sbb
mov
xchg
cs
std
jb
cwtl
xor
out
into
addb
leave
in
mov
sti
imul
in
scas
and
data16
fisttpll
bound
pop
pushf
cmp
and
cmpsb
jnp
mov
ffree
add
lds
add
push
sub
add
add
pushf
mov
mov
add
cmc
fldt
in
sti
ds
test
dec
cmc
hlt
pop
jne
lcall
ss
lods
loop
sti
push
iret
push
movsl
xchg
dec
fistpl
jns
jle
or
lret
sbb
test
or
mov
or
pop
idivb
imul
xchg
jae
push
mov
fisubs
add
adc
jge
mov
adc
push
gs
add
push
sbb
add
jno
sahf
dec
inc
imul
push
or
pop
push
stc
cld
push
xchg
pop
pop
sub
dec
fildll
mov
add
add
add
push
sbb
nop
inc
add
add
mov
in
dec
fsubrl
cmpsl
loop
push
int
stos
push
pop
in
mov
inc
shll
dec
mov
push
icebp
jge
jne
mov
ljmp
gs
adc
jmp
mov
int3
in
in
dec
pop
jmp
cmp
add
pushf
xor
fwait
and
cmpsb
into
inc
add
cltd
jbe
scas
xor
shrb
mov
mov
lock
mov
jge
or
cmp
xchg
adc
xlat
mov
sub
repnz
inc
add
push
push
xchg
fdivs
and
sub
jns
in
icebp
jl
add
cwtl
push
ret
dec
out
aas
pop
mov
add
scas
pop
test
lods
and
jno
xor
inc
add
pusha
add
shr
jp
ret
add
into
push
repnz
sti
std
loop
repnz
sbb
dec
in
cltd
gs
inc
sbbl
add
prefetch
les
dec
jp
das
and
add
rolb
pop
lret
ds
shl
jb
ljmp
insb
ret
and
insb
repnz
push
mov
scas
xchg
mov
stos
sub
ja
pop
jno
xlat
inc
add
sbb
jae
fsubrp
stos
in
add
and
mov
jmp
in
dec
aam
sub
mov
xor
cmpsl
pop
mov
pop
icebp
lds
xor
add
bound
or
repnz
sub
mov
stc
pop
mov
filds
imul
and
xchg
xor
cmp
cmpsl
sbb
mov
bound
mov
stc
push
xchg
fcoml
lods
mov
adc
mov
imul
into
gs
inc
ljmp
xchg
add
shrb
mul
xlat
fisubs
adc
add
sub
add
add
int3
test
aaa
and
repnz
or
outsb
addb
pop
add
in
sub
adc
sub
data16
xor
es
lahf
adc
sahf
jae
scas
inc
add
add
imul
in
fistl
dec
xchg
in
pop
mov
movsl
cwtl
repz
movb
das
inc
add
cwtl
sahf
icebp
mov
xor
jl
push
cmp
dec
xchg
ret
cmp
fs
xor
and
scas
pop
and
dec
mov
insb
jecxz
cmpsb
jae
ja
test
or
fdiv
outsb
imul
push
pusha
add
divl
leave
cli
in
fwait
js
push
and
mov
pusha
add
lock
rcrl
push
addr16
cld
dec
mov
shlb
jnp
bound
inc
insb
add
mov
dec
addr16
bound
xchg
sub
add
mov
xor
in
test
sbb
cmpsb
mov
sbb
fistps
daa
inc
xor
jbe
mov
add
fiadds
add
xchg
adc
fcmovne
mov
ljmp
push
add
push
xlat
jne
jne
sub
sti
adc
ja
and
add
add
add
xchg
adc
add
jbe
stos
lret
pop
sbb
add
mov
add
inc
add
out
int
add
inc
fdivrl
push
add
and
mov
inc
fadd
add
das
icebp
scas
out
dec
je
add
addb
cmp
and
in
popa
std
lcall
lock
sahf
aad
inc
lcall
cmp
aad
add
and
or
adc
addb
push
cwtl
lahf
or
push
add
pop
arpl
add
loop
addr16
push
scas
xchg
xchg
mov
lea
shlb
mov
inc
push
test
jno
pushf
push
mov
test
xchg
popa
stos
pop
stos
mov
mov
xor
out
ret
fisubl
sbb
adc
xchg
mov
mov
and
jnp
dec
test
cld
pop
push
pop
dec
add
cmp
bound
pop
jg
mov
cmpsl
xor
mov
pop
or
dec
jg
sbb
jecxz
sub
lret
dec
cwtl
lods
and
mov
dec
mov
or
jbe
jg
push
jge
xor
mov
inc
add
cmpsb
fnstsw
inc
add
push
test
sub
in
rcr
dec
insl
jo
add
push
sti
mov
xor
sbb
or
cmp
pop
cmc
scas
mov
out
xlat
test
enter
add
xor
xchg
xor
popa
pop
test
imul
xchg
enter
movsb
fisttps
mov
ds
fimuls
mov
xchg
mov
repnz
ljmp
movsl
sbb
fs
mov
mov
mov
pop
fstps
out
ljmp
jmp
add
vcvttpd2dqx
jl
in
mov
lret
sarb
jmp
add
sarb
adc
inc
cmp
pushf
jl
xor
adc
jecxz
mov
pushf
fbld
cmpsl
or
ret
push
add
xchg
out
scas
mov
je
mov
inc
add
xor
jp
lds
adc
pusha
add
sub
clc
mov
add
pop
inc
add
sti
pop
lods
addb
or
sbb
ja
fmull
cmp
mov
into
cltd
repz
addb
popf
scas
push
jo
jo
jl
iret
icebp
sbb
sbb
add
adc
movsl
mov
add
mov
jp
popf
loopne
adc
cli
xchg
xchg
sbb
jnp
push
sub
call
add
fwait
mov
int
pop
add
mov
sbb
cmp
inc
add
mov
mov
mov
jmp
lock
add
push
mov
movsl
xor
add
add
fcompl
mov
push
out
mov
pop
out
jle
hlt
xchg
lock
dec
adc
pop
mov
pop
mov
shr
add
xlat
out
ds
xor
in
xlat
cmp
lods
mov
mov
jo
push
push
mull
testl
loop
fwait
push
outsl
inc
mov
or
or
sub
popf
es
addb
dec
addr16
add
mov
push
addb
ljmp
mov
lods
insl
sbb
push
bound
inc
cld
pop
fimull
fwait
push
xor
push
mov
xchg
push
aas
xchg
push
or
adc
add
movb
cmp
call
or
inc
add
popf
imul
or
fsubrl
and
sub
cwtl
cmc
mov
in
in
sub
inc
add
shll
sbb
or
jmp
and
sbb
sbb
sub
pop
and
mov
das
adc
push
mov
inc
repnz
fisubrl
int
push
lock
xchg
lods
in
mov
mov
jb
rclb
mov
dec
push
cmp
ficomps
iret
popa
loopne
fwait
mov
mov
std
adc
jle
adc
aad
fisttpl
cmove
shrl
mov
add
mov
xchg
mov
sarl
pop
lods
jns
fs
loop
ret
out
popf
ds
jecxz
jge
mov
jb,pt
insb
xchg
mov
add
in
movsb
xchg
and
add
inc
cmp
addb
cwtl
das
cmp
aad
push
stos
mov
sub
es
mov
adc
xor
cwtl
leave
xor
in
xchg
pop
push
fwait
cs
nop
sbb
jae
sbbl
adc
add
and
cmp
inc
lret
xor
add
pop
and
movb
sbb
mov
cmp
lds
add
and
mov
fstpt
xor
xchg
daa
xchg
fmul
inc
js
mov
sbb
dec
push
pop
dec
out
aad
fnstcw
mov
cmp
cmp
pop
addb
jg
sbb
cld
mov
popf
leave
repz
pop
jnp
insb
enter
push
lds
ret
push
pop
imulb
addr16
sarb
leave
movsb
inc
add
push
enter
cmp
enter
jmp
out
jnp
es
mov
push
imul
lcall
cmp
test
sbb
lods
iret
push
add
stos
xchg
aam
adc
xlat
into
repnz
push
lahf
push
xchg
sbb
jge
push
xor
jp
ret
add
xor
cmp
fs
jns
add
lret
and
cld
xchg
cmpsb
les
lods
cmp
mov
dec
stos
fs
mov
mov
jmp
pop
mov
jmp
add
mov
jbe
xchg
sbb
add
dec
out
add
jecxz
push
daa
and
out
loop
xor
inc
add
dec
mov
xlat
or
xchg
add
pop
jecxz
shl
popf
cmpsl
sar
out
xor
dec
pop
push
divl
xor
xchg
cwtl
nop
idivl
mov
inc
add
cli
mov
mov
sbb
cmc
jne
mov
sub
mov
pop
mov
push
scas
ja
xchg
movb
mov
mov
aam
imul
enter
mov
xlat
add
adc
clc
mov
sbb
add
or
pop
jae
fwait
popf
push
enter
mov
mov
adc
testl
xchg
insb
pushf
add
adc
sub
xchg
xchg
int3
inc
or
sbb
pusha
add
movsb
int3
push
loope
add
cld
je
scas
and
lret
fldl2t
sbb
adc
out
pop
lods
div
pop
or
sti
addb
mov
add
jge
add
push
push
xchg
push
adc
sbb
and
mov
mov
dec
insb
xchg
ret
and
pusha
add
js
jle
cli
xor
lock
insl
les
and
lcall
scas
dec
dec
or
int3
les
fisubrs
mov
push
rolb
scas
std
mov
mov
sub
test
push
stc
jmp
cwtl
stos
leave
cmp
xchg
xchg
cmp
pushf
fsubrs
jmp
adc
sbb
icebp
js
or
mov
pop
xor
jns
pop
test
push
sub
add
dec
popf
mov
sti
fmuls
les
loopne
lahf
cmp
rolb
inc
add
pusha
add
or
adc
mov
xor
jg
ret
add
push
mov
dec
imul
insl
iret
in
xor
add
ljmp
fldenv
in
nop
xchg
arpl
xchg
fisttpll
iret
ja
or
xor
insb
sti
mov
inc
adc
dec
pushf
add
lea
adc
xlat
cli
mov
lock
xchg
loopne
icebp
or
add
dec
rcll
fsubr
xlat
sarb
xor
lret
in
adc
mov
pop
pushf
test
jb
add
mov
fmul
jo
lea
jmp
pop
push
push
out
mov
imul
sub
mov
push
out
outsl
and
xchg
in
and
push
adc
out
enter
lea
xchg
sbb
bound
cmp
jnp
fwait
stc
loope
jne
add
xchg
xchg
xchg
adc
fnsave
xor
xor
imul
inc
add
imul
and
cmp
push
xor
addb
push
jecxz
aad
jge
movl
push
pop
es
mov
add
rcll
pop
rolb
dec
adc
fsts
sbb
add
dec
in
mov
js
push
int3
push
dec
test
jb
lock
jl
xchg
shl
mov
push
stos
sub
sahf
sbb
mov
add
and
loope
inc
push
fistl
add
or
movb
inc
add
mov
addb
add
xchg
test
icebp
dec
xlat
sub
repnz
scas
fildll
mov
push
mov
pop
xchg
adc
mov
add
leave
mov
mov
cmp
push
or
idivb
fwait
stos
mov
ja
mov
sbb
add
xor
ljmp
lods
push
stc
sbb
mov
mov
mov
pop
hlt
add
test
mov
sbb
jnp
xchg
scas
add
add
in
xchg
loopne
add
movsb
scas
pop
add
push
pop
lret
movb
enter
nop
jle
icebp
loopne
add
sub
mov
lcall
add
jns
mov
sbb
inc
sub
in
sbb
lret
dec
movb
mov
js
push
in
enter
and
addl
add
sti
jb
stos
inc
add
cmpsb
and
ljmp
mov
mov
push
cli
sub
pop
lahf
int3
rcll
jmp
lahf
push
out
push
in
bound
mov
adc
popf
mov
mov
outsb
push
je
add
pop
daa
popa
in
popf
or
add
xchg
insb
inc
fwait
dec
movsb
fs
push
add
dec
negb
fs
mov
cmp
push
out
or
add
or
inc
lcall
hlt
mov
mov
sbb
jmp
sub
ja
mov
rsqrtps
sub
fwait
shrl
mov
das
push
dec
xchg
mov
es
sub
mov
leave
cmp
outsl
add
fs
xor
ret
or
loopne
push
sbb
push
aas
clc
mov
dec
jge
add
hlt
cmp
jle
jecxz
jns
mov
inc
sub
test
mov
pushf
xchg
xor
dec
stos
ljmp
and
pop
inc
add
xchg
mov
shll
sub
nop
mov
push
sbb
fdivrs
insb
sarb
sub
imul
mov
loop
insl
and
sbb
mov
stc
jns
pop
pop
sub
jle
rclb
das
dec
push
shl
sbb
sahf
jae
push
xchg
int
pop
mov
adcl
clc
lret
pop
mov
xlat
or
test
add
cmp
add
in
scas
xchg
dec
add
movb
mov
add
jnp
mov
aas
ds
and
or
add
arpl
jmp
cwtl
aad
add
popa
pop
shrl
fdivs
sbb
int
imul
push
mov
xchg
shlb
xlat
inc
add
loopne
dec
sub
ret
mov
xor
sub
xchg
jnp
sub
outsl
iret
lock
popl
xchg
pop
lock
jmp
scas
cs
xchg
fldl
arpl
xor
pop
int3
je
add
loopne
jne
enter
into
roll
mov
movsl
push
xor
stos
jl
mov
stc
mov
jno
imul
aas
repz
stos
push
pextrw
roll
subl
lods
mov
xchg
pop
jo
adc
rcrb
lret
add
mov
int3
adc
mov
into
popf
fwait
dec
mov
lock
in
arpl
test
lds
movsl
pop
addb
add
cmp
push
cmp
dec
cmp
dec
cmc
jg
add
xorl
pushf
ss
add
sbb
stc
repnz
xor
push
xor
lret
jl
movsb
cltd
jecxz
icebp
sub
and
mov
mov
test
stos
fs
out
lock
sub
pop
cwtl
jmp
outsb
cmpsl
push
add
dec
dec
mov
or
sub
jo
shrb
xor
arpl
cld
shl
mov
and
cli
mov
int
dec
mov
inc
add
ss
je
jecxz
stos
cmp
daa
jne
sbb
dec
sub
test
stos
pop
push
in
mov
cmp
popf
cmp
test
mov
nop
fdiv
int3
jo,pt
les
sbb
dec
and
push
lret
sbb
test
jg
int
jg
add
aam
and
or
sub
xchg
out
inc
iret
mov
and
add
mov
cmp
lds
repz
arpl
adc
pop
sarb
dec
outsl
insb
cmpl
inc
int
inc
add
stos
pop
fsts
cmpsb
cltd
pop
push
cmp
mov
add
push
mov
es
push
add
int3
insb
pushf
scas
add
sbb
jbe
xchg
aad
xchg
out
cld
cmp
add
loopne
and
fists
mov
sbb
or
stc
inc
add
add
enter
test
xor
pop
adc
or
xor
dec
sub
lds
push
xchg
ja
add
push
and
xorl
sub
or
nop
test
ficomps
dec
mov
xchg
stos
adc
in
mov
int
cmp
hlt
sarb
cmp
lcall
push
add
into
lret
xchg
fadds
add
jns
and
sahf
outsb
rolb
clc
sti
mov
scas
das
cwtl
jle
rolb
lea
call
or
in
incl
sub
aam
lret
sbb
fs
lods
mov
add
mov
pusha
add
popa
test
and
fcomi
std
add
add
mov
inc
sub
scas
pop
push
sub
and
dec
ja
sub
ficompl
mov
test
das
shll
cmpsb
jb
sahf
sbb
rcl
in
xchg
xor
add
arpl
pop
sarl
js
insb
mov
dec
dec
and
test
add
push
xchg
ret
sub
dec
mov
shl
ret
or
mov
xor
add
sbb
pop
lods
push
lahf
cwtl
pop
sar
jnp
sbb
gs
arpl
repnz
adc
xchg
sar
sub
fstpl
add
cmp
add
push
xor
push
push
pop
addb
push
add
int
or
pop
xchg
adc
dec
fldenv
mov
xor
xor
pop
cmp
movsl
cmp
pop
xor
mov
add
aad
dec
loopne
scas
and
mov
pop
outsb
mov
or
data16
cld
add
clc
lods
pslld
mov
push
inc
js
hlt
out
sub
jg
movb
test
iret
push
or
mov
pop
sbb
push
jns
addr16
in
addr16
or
jmp
push
add
insl
inc
mov
scas
test
jae
dec
pop
mov
je
cmpsl
push
leave
push
pop
jecxz,pt
pop
divl
xchg
pop
popa
in
add
outsl
pop
scas
sbb
int
jle
dec
mov
outsl
jae
js
movsb
int
jo
arpl
or
jb
sbb
adc
jo
add
cmp
add
pop
xchg
imul
addb
js
rolb
fmul
inc
add
dec
xor
inc
arpl
sbb
add
in
jge
addr16
xor
and
or
pusha
add
insl
dec
cmpsb
aas
out
imul
test
cltd
push
fisttpl
jo
add
aad
cmp
rcl
in
outsb
int3
divb
js
add
dec
rolb
cld
xor
call
dec
or
pop
push
jbe
add
add
bound
cmp
jge
sbb
add
push
sarb
push
test
lret
das
pop
ffreep
add
xor
push
or
add
or
adc
mov
into
xchg
arpl
xchg
cmc
push
add
cmp
or
push
int
arpl
ret
mov
mov
dec
lods
xor
add
xor
test
addr16
daa
inc
push
add
xchg
data16
stos
push
add
push
mov
lods
dec
adc
js
add
icebp
lret
xchg
insl
xchg
adc
cmp
and
incl
push
mov
inc
add
int3
loopne
fisubrs
insl
addr16
jae
and
fsubr
xchg
test
fstps
or
bound
into
mov
sbb
cmp
mov
or
mov
push
notl
cwtl
pop
xchg
test
dec
cmpsl
fmuls
gs
xor
xor
mov
push
insb
xchg
leave
add
mov
fwait
push
mov
rolb
ret
test
repz
dec
sbb
cwtl
call
rcrb
push
iret
es
pop
popa
push
fiadds
mov
cli
icebp
mov
xchg
rolb
and
scas
inc
add
addb
movsl
fdivrp
sahf
add
popa
outsb
shll
cwtl
xchg
add
dec
out
pusha
add
add
sti
out
inc
and
mov
loop
mov
mov
ret
mov
aas
mov
mov
add
pusha
add
out
add
inc
add
dec
xor
iret
xor
and
xor
lcall
and
lea
add
mov
adc
mov
bound
mov
bound
jp
jb
test
inc
add
pop
sbb
xchg
or
lcall
sub
jle
insl
test
inc
add
push
mov
cmp
pop
xlat
jmp
icebp
int3
lea
add
add
in
xor
popf
mov
and
xchg
mov
or
enter
repz
sbb
test
add
lock
add
xor
add
mov
stc
add
push
mov
gs
mov
js
and
push
std
or
add
in
in
cmp
jne
lcall
add
adc
fucomp
adc
mov
sub
ja
leave
adc
xchg
sbb
sub
cmp
push
dec
jl
lahf
dec
outsl
jle
inc
add
add
or
fisubl
xchg
cltd
push
mov
out
mov
jne
pusha
add
fwait
and
sub
test
pushf
sbb
jnp
jmp
scas
subl
push
add
std
xor
xlat
movsb
cmp
cmp
and
cmp
out
jae
dec
es
xchg
stos
dec
icebp
push
mov
mov
mov
setl
outsl
cmpsl
inc
daa
push
addl
add
rcrb
xor
lock
mov
jno
lret
mov
dec
lods
or
ss
test
add
sti
inc
in
insl
movsl
sbb
sbb
jns
xchg
out
add
shrb
cwtl
jp
addb
jp
mov
jmp
mov
xchg
ja
jle
nop
xor
jae
outsl
dec
stos
rep
in
pop
jp
movsb
int
pop
lcall
orl
inc
add
inc
ror
lds
mov
es
cli
mov
lret
add
push
lock
negb
add
hlt
dec
dec
xchg
in
aam
loopne
lret
add
adc
or
dec
rorl
cwtl
ret
cmp
sahf
in
jl
add
xchg
sbb
and
std
arpl
pop
cmpsl
jl
out
cli
imulb
push
mov
add
es
hlt
cmp
lds
push
add
cmpsl
scas
jbe
jnp
mov
ret
mov
js
add
enter
jecxz
add
pop
dec
negb
into
add
adc
cld
jb
xlat
sahf
popl
xchg
lods
aaa
and
inc
mov
rolb
int3
or
out
out
daa
stos
xchg
jp
push
add
fsubl
add
cmc
cltd
mov
push
add
mov
pushf
mov
xchg
lock
dec
push
bound
popa
or
fwait
lea
adc
xor
lahf
inc
add
push
jns
rolb
shll
add
xchg
push
ljmp
and
push
out
shrl
std
cli
sbb
jp
jbe
cld
xchg
adc
push
sahf
sbb
scas
std
mov
addb
pop
fcoms
jne
pop
or
and
aam
leave
outsb
sahf
cmp
add
pop
in
xchg
lock
ja
add
jecxz
add
inc
dec
pop
out
adc
popf
sub
and
clc
pop
xchg
stos
into
lahf
movb
jns
cld
adc
cli
outsl
cmp
xor
enter
add
fiaddl
jle
cli
adc
mov
and
addb
or
mov
dec
cmp
mov
sti
stos
sti
test
push
or
add
add
lds
xor
loopne
mov
add
or
add
add
pushl
add
addr16
jns
adc
neg
dec
and
in
jecxz
fdiv
xchg
fisttps
test
rolb
popa
dec
hlt
pop
out
hlt
mov
inc
add
mov
loopne
inc
add
add
movsb
jbe
in
leave
insb
test
add
stos
jae
mov
push
xchg
mov
xchg
fucomp
push
and
xor
jb
jl
aas
sbbl
outsb
add
add
pop
mov
test
ljmp
dec
lret
clc
loopne
insb
repz
xchg
int3
jle
push
aaa
scas
lods
stos
and
push
mov
sbb
mov
pop
mov
pmulhw
das
or
imul
inc
add
cmc
ss
rclb
xor
js
inc
les
ss
mov
ret
out
mov
mov
mov
add
rolb
mov
addb
sbbl
movsl
ljmp
xchg
andl
add
push
pop
mov
add
push
add
jno
jbe
cwtl
iret
ljmp
in
sbb
lods
mov
add
jl
xor
stc
incl
ja
inc
add
mov
add
add
enter
cmp
out
loop
add
add
sub
out
stos
jb
out
mov
test
add
push
add
mov
test
mov
loope
jb
add
out
xchg
mov
inc
dec
enter
lea
mov
cmp
xor
sub
mov
sarl
cld
xchg
inc
pop
rolb
push
xchg
mov
fisttpl
cli
stc
adc
adc
sti
jge
stc
stc
nop
loop
pop
les
loope
test
push
test
add
and
add
test
js
add
xchg
mov
dec
adcl
push
push
lds
test
test
push
cs
or
fists
test
or
mov
sub
jmp
push
jp
or
rol
add
xor
out
mov
or
mov
es
add
stos
rolb
pop
test
mov
mov
lret
mov
jae
iret
fdivrl
lret
lret
jp
pop
dec
mov
add
bnd
data16
or
mov
cwtl
jge
mov
jp
xlat
shlb
out
adc
mov
xchg
push
mov
inc
add
mov
pop
aam
add
aas
negb
jge
dec
jp
xchg
subl
rcll
mov
test
jns
cwtl
imul
mov
popa
leave
ds
int
repnz
add
inc
add
jle
mov
mov
pop
sub
pop
bound
test
clc
push
enter
add
jns
stos
sahf
push
addb
mov
ja
mov
shrl
pop
andnps
adc
bound
inc
sbb
sbb
xchg
add
mov
adc
mov
xorps
mov
rcr
inc
add
xchg
dec
jge
sbb
repz
xchg
xlat
dec
bound
sub
jo
inc
add
add
sub
push
shl
add
fnstsw
andl
mov
push
int3
and
push
pop
and
push
add
add
xchg
insb
pop
gs
xchg
sub
movl
imul
sarl
sbb
mov
push
test
movb
or
stc
xchg
mov
negb
pop
fs
inc
add
mov
or
aaa
mov
jne
fimull
lock
mov
loope
imul
xchg
push
sahf
sub
cwtl
or
push
fsubrs
dec
sbb
add
pop
push
pushf
jns
movsb
or
scas
pusha
add
add
repz
addb
sbb
mov
inc
data16
inc
lds
push
push
inc
add
add
lahf
ss
outsb
add
and
lcall
shll
add
bound
mov
lretw
pop
int3
mov
add
repz
sahf
mov
ficoml
or
sbb
xchg
outsb
in
add
icebp
sti
out
pop
lock
sti
inc
test
ret
adc
lsl
ja
sbb
fs
sub
fnstsw
push
add
sbb
jne
add
mov
inc
add
lock
testl
sub
add
add
cmc
push
add
add
loope
arpl
arpl
sbb
dec
mov
or
mov
inc
fdivrs
jne
mov
data16
jecxz
fabs
pusha
add
insl
test
mov
mov
lret
std
addb
insb
lretw
dec
and
fnstenv
push
add
push
xchg
mov
add
rcl
jge
xchg
div
xchg
or
push
lahf
arpl
repz
int3
add
ljmp
dec
adc
jmp
repnz
and
test
cmp
xchg
xlat
inc
add
lea
inc
mov
add
mov
xor
pop
out
sarl
stos
sub
les
cmp
rcrl
add
pop
fmull
lods
fs
jmp
inc
add
jne
jecxz
fidivrs
add
push
out
and
inc
add
inc
add
out
jg
fcompl
iret
xor
jl
mov
lret
add
or
fildll
cld
mov
xchg
cltd
int
fcomps
testl
add
sub
inc
add
or
pop
fwait
outsl
addr16
pop
jb
ja
add
xlat
sahf
lret
ljmp
xchg
loopne
xor
cmc
xchg
shll
add
std
cmp
in
or
or
adc
enter
push
xchg
ss
loope
ljmp
repnz
xchg
outsb
mov
dec
sub
addb
popf
push
stos
sub
xchg
push
in
or
xor
sbb
push
in
pop
pop
pop
jno
outsb
cltd
fcompl
xor
or
push
out
push
pop
pusha
add
rcll
ret
ret
jno
add
add
dec
cmp
pop
jno
mov
push
pushf
repnz
and
sub
sti
mov
dec
jno
dec
adc
imul
repnz
xchg
lea
lods
dec
mov
add
adc
push
mov
xor
data16
mov
sahf
sub
icebp
jbe
pop
push
and
jle
add
stos
inc
add
adc
xor
aas
xor
push
addr16
add
into
xchg
xchg
pop
jecxz
gs
dec
cmp
pop
inc
add
mov
fwait
loop
imul
adc
sbb
fs
jp
fdivrl
aaa
sub
sub
dec
mov
ret
out
sahf
dec
or
movaps
cwtl
jmp
or
test
rorl
and
test
inc
add
jne
cmc
mov
int3
mov
sbb
sbb
pop
cmp
icebp
imul
add
in
test
pop
inc
pop
sub
dec
aas
in
dec
push
add
xchg
ret
into
sbb
sub
push
aaa
xchg
call
movsb
cmp
sbb
test
jmp
sbbl
add
movsb
or
ror
nop
dec
call
lods
dec
movsl
mov
inc
add
fistl
std
jle
sub
mov
lods
mov
lods
dec
cmp
lcall
add
lods
sub
les
mov
ret
push
and
in
add
inc
add
add
and
repnz
and
aaa
dec
mov
loop
dec
negb
enter
fistpll
in
mov
inc
ss
bound
inc
add
ret
add
cmc
icebp
and
push
decb
pop
and
inc
les
loop
adc
add
add
out
adc
in
adc
xchg
pop
xchg
xchg
das
mov
aaa
fnsave
je
add
and
and
int
mov
ljmp
fnsave
bound
rol
les
mov
ss
divl
add
addr16
cmpl
ljmp
cmp
mov
cld
aaa
icebp
push
jns
adc
sbb
test
mov
outsl
or
sbb
das
xchg
mov
inc
add
pop
lret
shlb
rcl
xor
mov
or
jg
rcrl
mov
pusha
add
cltd
xor
or
ss
or
add
test
negl
sub
add
bound
jo
mov
fsubs
inc
loope
test
pop
dec
add
stc
clc
mov
xor
xor
jle
push
push
xchg
mov
add
fwait
lods
xlat
shl
or
dec
cmc
adc
sub
push
mov
mov
inc
add
add
dec
out
leave
and
sbb
jns
les
or
adc
into
mov
or
push
add
mov
clc
push
and
aas
inc
pop
xchg
scas
lcall
aaa
inc
add
addb
sub
add
addb
jge
addb
rolb
sbb
add
pushf
xor
xlat
aam
mov
xchg
or
fsubs
add
pop
xor
cwtl
test
popa
cmpsb
ret
jno
cmp
push
lret
jl
cltd
jns
pop
mov
sbb
xchg
cmp
inc
add
int3
insb
mov
popa
aad
in
insb
lret
xor
or
jno
or
in
orl
push
repz
dec
jb
repz
mov
loope
mov
jle
jmp
add
imul
pop
add
cmc
jp
rolb
add
mov
std
cmc
dec
mov
push
add
lods
adc
int3
xor
push
cmp
xchg
loopne
insb
jmp
add
sbb
push
add
add
ja
cmp
push
xor
enter
test
ret
jmp
adc
lods
sbb
and
xchg
pop
enter
pop
repnz
outsl
mov
add
jle
enter
sbb
add
add
inc
xchg
loopne
scas
test
cmp
test
cmpsb
and
sub
ja
and
ret
fadds
out
xchg
sub
test
loop
adc
jnp
lret
push
ud1
enter
inc
addb
inc
inc
add
xor
add
loope
pop
cmpsl
insl
push
ljmp
ret
loopne
jmp
add
std
and
add
mov
sbb
ljmp
xor
dec
insl
arpl
add
xchg
loopne
aas
xchg
jae
sbb
hlt
sub
repnz
ljmp
icebp
add
adc
push
movsl
lret
adc
or
lods
lahf
movsb
out
shlb
add
push
fld
add
add
cmp
rorl
or
lods
jo
movsl
cmp
add
dec
cs
dec
fisubrl
inc
add
inc
out
cmp
aad
pop
inc
add
push
push
out
sbb
push
add
xlat
push
xor
pop
cmp
lahf
dec
xchg
scas
movsl
icebp
mov
icebp
inc
add
ror
lods
lahf
adc
jg
test
fwait
dec
push
call
add
test
mov
lret
insl
cmp
add
push
stc
mov
add
jbe
fistps
sub
cld
imul
mov
add
add
add
cs
stc
inc
xchg
cwtl
leave
les
sbb
decl
mov
pop
arpl
popf
js
test
or
xor
int3
mov
fucom
imul
gs
mov
inc
add
add
pushl
mov
adc
loope,pt
pop
push
shll
lods
fidivl
loope
out
dec
push
loopne
add
xor
sbb
pop
mov
or
or
imul
jl
push
jo
sbbl
ret
mov
test
dec
mov
stc
jb
out
push
add
nop
jmp
jb
mov
pop
dec
fisttpll
jb
add
add
add
add
stc
jb
add
add
call
stc
jb
sahf
add
dec
mov
mov
xchg
ret
les
les
add
orb
sub
cmp
sbb
add
sbbl
push
mov
xchg
ret
hlt
add
cmp
out
push
push
mov
xchg
ret
dec
add
les
add
nop
jmp
pop
rcrl
sub
jb
add
push
mov
stc
jb
push
add
push
mov
nop
jmp
xchg
pop
add
adc
pop
add
add
jno
fisttpl
pop
pop
add
push
test
dec
add
and
push
mov
xchg
ret
add
add
movsl
mov
jb
or
add
js
pop
add
jb
add
imul
and
jb
add
add
sahf
cmp
jb
and
or
sahf
cld
add
mov
nop
jmp
cltd
add
add
repnz
jmp
add
add
add
cmp
mov
pop
out
add
dec
inc
push
mov
sti
push
mov
xchg
ret
add
and
out
cs
nop
jmp
add
dec
add
add
pop
ret
push
rclb
clc
cld
inc
add
or
add
pop
stc
jb
roll
adc
add
push
or
in
add
stc
jb
jecxz
add
rolb
call
nop
jmp
or
add
sub
jmp
push
add
xor
mov
add
nop
jmp
sub
ljmp
int3
mov
nop
jmp
add
add
mov
mov
stc
jb
add
mov
pop
stc
jb
add
hlt
push
add
add
and
sbb
cmp
inc
add
sahf
add
jmp
scas
push
add
add
sbb
hlt
fwait
mov
stc
jb
add
out
pop
nop
jmp
add
inc
inc
add
add
jno
adc
sbb
add
jb
jecxz
and
lods
push
mov
xchg
ret
add
xor
mov
stc
jb
add
push
dec
jne
stc
jb
aas
add
test
push
stc
jb
add
ljmp
stc
jb
lcall
cmp
xlat
dec
pop
push
mov
xchg
ret
add
add
sbb
add
add
inc
push
mov
xchg
ret
add
add
call
stc
jb
lcall
jge
nop
jmp
add
add
aad
cltd
scas
mov
stc
jb
push
inc
pop
cld
mov
stc
jb
add
add
add
push
xchg
xorps
jb
push
add
aas
movsl
lods
mov
stc
jb
adc
dec
add
add
out
and
stc
jb
cltd
adc
pop
sbb
jb
dec
cmp
dec
add
sbb
stc
jb
les
add
adc
jmp
add
aas
pop
call
push
push
mov
xchg
ret
add
add
pop
xor
stc
jb
add
add
add
fimuls
and
add
mov
add
add
shrb
add
push
mov
xchg
ret
js
xchg
push
stc
jb
push
add
add
xor
mov
stc
jb
add
push
xor
dec
js
rep
nop
jmp
jge
add
add
sbb
dec
mov
stc
jb
add
xchg
add
jb
add
push
add
enter
addb
add
add
add
and
jb
mov
stc
jb
add
sbb
pop
add
mov
and
cmpsb
je
movzwl
stc
jb
mov
mov
int3
mov
stc
jb
xlat
add
jne
push
mov
add
fst
add
ljmp
add
add
stc
jb
pop
push
add
rolb
sub
stc
jb
add
roll
test
jb
add
hlt
out
push
out
add
stc
jb
add
pop
test
add
sub
jb
pop
add
add
jb
add
test
call
sbb
add
add
push
mov
xchg
ret
add
call
mov
pushf
out
enter
add
xor
add
incl
add
sbb
hlt
add
add
and
jno
add
push
stc
jb
ljmp
add
jb
add
add
push
push
jmp
inc
and
jmp
add
add
jecxz
jge
rol
add
adc
jb
push
sti
push
nop
jmp
add
add
push
jecxz
and
loop
mov
stc
jb
sbb
add
add
xor
pop
mov
stc
jb
rcll
push
push
mov
xchg
ret
add
push
scas
lea
push
mov
xchg
ret
ljmp
addb
push
add
jbe
mov
jb
sahf
add
add
add
test
insb
and
stc
jb
add
push
inc
xlat
jge
mov
stc
jb
mov
jmp
sbb
add
dec
add
add
or
subb
add
add
repz
mov
mov
nop
jmp
cltd
add
cld
jge
out
mov
push
mov
xchg
ret
mov
faddl
mov
add
imul
stc
jb
add
or
stc
jb
add
add
lcall
push
mov
xchg
ret
xor
add
jp
jbe
nop
jmp
mov
mov
mov
je
stc
jb
inc
add
outsl
mov
stc
jb
ljmp
clc
push
stc
jb
add
call
add
and
js
jb
dec
aad
add
sbb
jb
dec
add
stos
push
add
stc
jb
add
pop
inc
rorb
insb
inc
insb
insb
stc
jb
add
xor
push
push
mov
xchg
ret
add
add
dec
push
push
mov
xchg
ret
add
add
add
mov
stc
jb
dec
add
add
test
nop
jmp
fcompl
add
mov
jb
add
and
jecxz
or
stc
jb
cld
add
xchg
popf
nop
jmp
insl
add
add
rclb
or
xchg
ret
add
and
add
add
add
dec
fisttpll
mov
add
jb
add
add
adc
incl
aas
jecxz
aad
mov
add
adc
div
stc
jb
push
add
mov
dec
scas
cmp
nop
jmp
add
add
cmp
or
stc
jb
add
mov
jb
cmp
add
cmp
sbb
stc
jb
inc
aas
jge
push
add
jl
push
mov
xchg
ret
xchg
lods
je
stc
jb
add
je
add
stc
jb
add
add
add
sub
jb
add
add
jbe
cltd
add
cmp
jb
add
xchg
add
push
add
stc
jb
and
sbb
popa
add
jmp
add
add
add
jmp
xor
add
add
add
dec
jecxz
mov
add
stc
jb
dec
lcall
stc
jb
cld
pop
add
add
subl
jb
lcall
add
push
stc
jb
xchg
add
push
fidivrl
stc
jb
add
push
add
nop
jmp
add
mov
je
stc
jb
faddl
add
jb
dec
add
cltd
lcall
jae
imul
add
int3
pop
nop
jmp
lcall
push
add
add
nop
jmp
add
add
push
aas
add
mov
nop
jmp
add
push
add
pop
ret
add
xchg
mov
cld
jecxz
add
outsl
nop
jmp
add
mov
ror
stc
jb
xchg
mov
jbe
call
mov
push
mov
xchg
ret
add
add
mov
push
inc
add
add
mov
fs
add
stc
jb
add
add
push
pop
add
add
add
jb
sahf
add
push
shlb
xor
add
nop
jmp
add
cld
cmpl
nop
jmp
pop
inc
cmp
adc
add
mov
stc
jb
add
add
sub
mov
xchg
ret
cmp
inc
add
in
sbb
dec
cld
incl
add
add
out
jg
les
stc
jb
inc
xchg
dec
add
add
jb
insl
add
cmp
in
jne
stc
jb
cltd
xchg
add
inc
stc
jb
pop
sahf
dec
pop
js
inc
cmp
sbbb
add
jne
jecxz
add
add
popa
ljmp
jmp
and
cmp
in
mov
stc
jb
sub
sub
inc
rclb
jb
add
test
stc
jb
sahf
xlat
lcall
and
stc
jb
call
cld
cld
push
mov
xchg
ret
add
add
add
dec
push
mov
xchg
ret
sbb
jecxz
add
stos
stc
jb
mov
add
add
and
pop
nop
jmp
add
pop
add
add
mov
gs
call
stc
jb
add
push
mov
xchg
ret
jecxz
or
add
pop
nop
jmp
push
add
add
into
jl
stc
jb
js
sahf
push
jb
cltd
pop
or
push
mov
add
add
add
add
xlat
xor
ret
stc
jb
test
add
cmp
dec
movsb
or
add
add
pop
add
cmpsb
jb
shl
stc
jb
dec
add
push
cltd
mov
mov
stc
jb
les
xchg
mov
fdiv
pushl
jb
add
add
xor
rclb
fiaddl
mov
and
xor
stc
jb
and
inc
les
mul
dec
push
stc
jb
jecxz
add
decl
stc
jb
sbb
mov
test
adc
add
add
inc
jp
push
mov
xchg
ret
sbb
cmp
xor
cld
inc
add
call
dec
stc
jb
add
add
add
cltd
push
stc
jb
pop
add
shll
sub
mov
xor
push
mov
xchg
ret
add
cld
or
sbb
add
out
test
push
mov
xchg
ret
add
mov
and
ret
testl
dec
add
and
call
sbb
add
sub
add
add
add
stc
jb
add
and
fwait
xor
stc
jb
xchg
cltd
pop
and
add
pop
push
mov
cmp
add
and
add
push
add
loope
mov
nop
jmp
add
cmp
xor
add
stc
jb
add
lods
stc
jb
cld
cmp
add
add
sub
mov
push
mov
xchg
ret
add
out
mov
stc
jb
sbb
add
add
mov
stc
jb
mov
lcall
pop
add
add
jb
add
mov
stc
jb
add
add
jb
push
push
mov
xchg
ret
out
ljmp
add
stc
jb
adc
pop
push
lock
push
stc
jb
lcall
inc
push
add
mov
xchg
std
lea
stc
jb
out
add
add
shr
stc
jb
add
insl
sbb
jb
mov
fiaddl
add
movsl
stc
jb
mov
add
jns
jg
stc
jb
push
call
ljmp
stc
jb
add
in
xchg
sbb
test
hlt
stc
jb
sbb
add
and
push
mov
xchg
ret
adc
add
pop
nop
jmp
adc
call
aad
push
add
add
mov
testb
adc
add
add
add
add
pop
push
stc
jb
add
add
add
add
insb
pop
stc
jb
add
add
add
add
lret
jmp
nop
jmp
add
add
add
jb
add
add
add
les
xchg
fdiv
stos
stc
jb
xchg
add
adc
add
stc
jb
jecxz
les
xor
add
jg
stc
jb
out
dec
add
xchg
xchg
aaa
out
mov
push
mov
xchg
ret
jne
add
push
stc
jb
add
sbb
pop
ljmp
add
jb
add
add
inc
add
mov
add
jb
xlat
xlat
add
fldenv
popa
add
mov
xchg
ret
add
and
stc
jb
dec
mov
dec
test
aas
jne
stc
jb
pop
dec
add
jp
nop
jmp
add
fiaddl
inc
adc
add
add
push
mov
xchg
ret
sbb
test
cmp
jb
adc
out
add
pop
dec
push
push
mov
xchg
ret
mov
add
adc
mov
xchg
ret
add
cld
adc
popa
add
jb
xchg
xlat
add
add
dec
decl
stc
jb
sbb
push
add
add
jne
stc
jb
add
sahf
mov
jmp
xchg
dec
fcoml
mov
sbb
jb
sbb
add
add
inc
in
mov
xchg
ret
add
cmp
sub
inc
and
jb
add
aas
add
push
dec
inc
stc
jb
aas
sub
add
les
jmp
add
add
cmp
add
nop
jmp
add
dec
add
add
jb
add
add
add
out
push
xor
pop
stc
jb
mov
jb
add
jb
jne
dec
push
mov
mov
in
inc
add
dec
add
add
mov
stc
jb
add
fiaddl
cmp
mov
and
xchg
nop
sti
je
stc
jb
add
loop
mov
stc
jb
cltd
sbb
add
nop
jmp
adc
add
add
sbb
aaa
in
mov
stc
jb
sbb
mov
call
add
add
hlt
addb
mov
stc
jb
add
add
add
xorb
add
add
add
jae
jb
sbb
add
xor
stc
jb
or
jge
mov
stc
jb
add
fld1
and
add
nop
jmp
aad
add
sahf
xor
jne
nop
jmp
add
fiaddl
add
add
nop
jmp
add
add
inc
add
out
mov
stc
jb
add
add
aad
push
add
sbbb
add
push
adc
stc
jb
add
add
add
push
push
mov
xchg
ret
mov
cmp
lahf
adc
add
incl
xchg
add
outsl
loopne
mov
xchg
ret
add
dec
mov
jb
add
pop
sbb
stos
stc
jb
add
add
add
insl
inc
push
jmp
ss
jmp
cltd
add
aad
ljmp
hlt
stc
jb
dec
push
add
cwtl
ret
stc
jb
les
ficoml
dec
add
test
fs
jb
add
add
mov
add
incl
add
push
cmp
mov
or
stc
jb
pop
mov
push
jne
stc
jb
sbb
mov
out
inc
add
add
cli
xor
nop
jmp
add
push
sbb
sahf
add
push
push
mov
xchg
ret
les
insl
add
sti
add
stc
jb
pop
aas
lcall
add
jno
inc
add
add
nop
xor
loopne
pop
rep
stc
jb
add
add
push
add
or
jb
add
cld
add
andl
mov
add
add
mov
add
add
adc
imul
subb
add
dec
add
jns
stc
jb
add
add
push
jb
ljmp
add
mov
stc
jb
add
xor
movb
sub
push
mov
xchg
ret
cmp
add
add
or
jmp
add
hlt
test
add
mov
push
mov
xchg
ret
xchg
add
pop
mov
push
mov
xchg
ret
add
add
das
jmp
stc
jb
lcall
jle
stc
jb
cltd
mov
xchg
inc
aad
pop
jne
stc
jb
add
xchg
add
add
jb
add
add
js
push
mov
xchg
ret
lcall
add
stc
jb
push
mov
add
or
test
cmpb
sub
add
mov
add
add
ljmp
push
stc
jb
and
dec
add
inc
call
inc
add
add
add
mov
stc
jb
push
out
add
push
icebp
add
push
nop
jmp
xlat
add
xchg
hlt
xor
test
aas
stc
jb
push
add
add
add
push
mov
xchg
ret
or
add
mov
cmc
sti
xchg
nop
jmp
dec
add
add
add
push
orb
incl
jbe
dec
add
fisttps
subb
lcall
add
cmpsl
and
mov
stc
jb
add
call
out
add
jmp
stc
jb
dec
add
out
cmp
push
mov
xchg
ret
add
add
stc
jb
add
add
sbb
push
nop
jmp
mov
mov
add
inc
sbb
jb
ljmp
cmp
jb
add
push
add
je
add
nop
jmp
add
add
out
mov
nop
jmp
add
add
push
add
inc
push
mov
xchg
ret
aad
add
mov
push
add
sbb
mov
add
call
stc
jb
add
jb
jne
stc
jb
add
push
test
add
stc
jb
lcall
pop
add
stc
jb
push
inc
add
dec
add
aad
push
stc
jb
ljmp
or
stos
cmc
stc
jb
sahf
add
cld
fimuls
mov
adc
jb
add
cmp
add
add
fimull
sbbb
sahf
add
nop
cmp
jb
add
add
mov
je
stc
jb
mov
movb
xchg
ret
add
cmp
leave
stc
jb
add
add
add
adc
repnz
stc
jb
add
adc
jb
add
dec
add
mov
mov
xchg
ret
push
aad
and
leave
call
nop
jmp
cltd
push
add
sbb
add
loope
xor
stc
jb
add
add
add
jb
cmp
add
ljmp
add
jb
add
and
jb
aas
add
add
lahf
ror
stc
jb
dec
cmp
mov
add
sbb
push
mov
xchg
ret
or
dec
add
add
int
cmpl
andb
pop
aad
inc
aam
push
mov
add
insb
lcall
push
dec
xchg
in
push
mov
sbb
add
call
add
push
jb
dec
ljmp
xchg
mov
out
out
incl
and
add
les
iret
push
push
mov
xchg
ret
add
dec
add
sub
stc
jb
jge
or
add
or
mov
sub
ret
add
jle
dec
or
jb
out
add
sbb
add
or
add
test
add
dec
add
das
add
nop
jmp
add
or
cld
add
mov
stc
jb
add
add
xchg
lcall
jmp
add
add
sub
orb
add
add
mov
stc
jb
add
add
call
jae
add
out
subl
push
mov
xchg
ret
add
cmpl
nop
jmp
out
cmp
inc
pop
jl
in
add
add
stc
jb
rcll
lock
mov
push
mov
xchg
ret
add
push
inc
or
cli
stc
jb
out
add
add
add
les
mov
add
pushl
stc
jb
jbe
add
add
sbb
in
es
clc
in
sahf
add
imul
sbb
fldt
rclb
cmp
add
fiaddl
cltd
sbb
jb
stc
jb
xchg
out
ljmp
push
mov
xchg
ret
add
cmp
je
sub
cld
std
inc
add
add
mov
stc
jb
add
add
add
lahf
mov
stc
jb
hlt
jb
jge
inc
add
add
jb
add
add
add
inc
out
mov
stc
jb
add
add
js
jne
stc
jb
add
add
add
fwait
mov
push
mov
xchg
ret
xchg
ret
push
mov
xchg
ret
add
add
inc
adc
mov
stc
jb
inc
inc
add
add
inc
push
pop
stc
jb
jne
xchg
add
mov
loop
mov
xchg
ret
add
add
lretw
jb
add
add
add
inc
add
scas
mov
stc
jb
add
add
adc
inc
fisubl
xor
add
stc
jb
xchg
lcall
insb
or
add
add
cmp
jb
cmp
add
add
into
mov
stc
jb
les
add
xchg
fildl
sti
stc
jb
add
add
leave
stc
jb
or
add
add
adc
sub
jb
xchg
pop
add
add
xor
push
mov
xchg
ret
sahf
add
push
or
jb
xlat
add
add
mov
sar
jb
cltd
mov
pop
call
stc
jb
add
push
mov
jb
sbb
shrl
xor
inc
popl
jno
add
add
add
inc
add
add
fisttpl
xorb
cld
mov
adc
in
call
incl
add
inc
fcompl
mov
push
mov
xchg
ret
add
add
es
mov
stc
jb
jb
add
ficompl
xor
nop
jmp
add
inc
sahf
jmp
jb
inc
add
cmp
xchg
ret
sub
jb
hlt
add
out
inc
stc
jb
aas
add
add
call
stc
jb
add
add
jb
xor
stc
jb
add
dec
or
incl
push
add
hlt
add
jmp
nop
jmp
add
add
jecxz
add
scas
add
push
mov
xchg
ret
add
jne
mov
mov
and
leave
add
nop
jmp
add
adc
cs
stc
jb
aas
add
sbb
add
cmpsl
pop
pop
push
mov
xchg
ret
add
insl
mov
in
mov
stc
jb
mov
idiv
call
incl
sbb
mov
add
sbb
jmp
add
cltd
add
add
lret
adc
jb
roll
cmp
add
fiaddl
jb
pop
push
jge
add
push
sub
test
stc
jb
xchg
push
add
pop
nop
jmp
add
sahf
add
ljmp
add
add
jb
add
add
jl
and
jb
add
add
add
lea
nop
jmp
add
add
dec
add
stc
jb
call
add
adcb
incl
add
add
mov
jb
add
mov
push
pop
add
and
push
mov
xchg
ret
jge
jecxz
cmp
push
mov
xchg
ret
add
movzwl
nop
jmp
cld
jb
faddl
das
pusha
nop
jmp
add
cltd
jb
jb
add
sub
jb
add
xchg
add
add
int
loop
nop
jmp
sbb
add
add
mov
mov
xchg
ret
sbb
add
fs
mov
nop
jmp
add
mov
pop
stc
jb
add
add
add
add
add
and
push
mov
xchg
ret
dec
add
add
or
add
add
jecxz
xchg
pop
dec
push
mov
xchg
ret
pop
xlat
push
add
mov
cld
inc
add
add
cmp
pop
stc
jb
add
adc
cmp
mov
adc
jb
xchg
ljmp
stc
jb
dec
cld
push
add
xor
mov
stc
jb
add
inc
push
add
dec
nop
jmp
pop
add
sbb
and
mov
jb
mov
insl
add
add
shr
nop
jmp
pop
dec
add
add
cmp
inc
add
pushl
stc
jb
sbb
add
push
or
stc
jb
push
push
pop
pop
mov
add
inc
add
lods
and
push
mov
xchg
ret
call
cld
cmpl
nop
jmp
push
jge
roll
jb
js
add
xchg
inc
add
push
out
add
add
add
push
dec
mov
stc
jb
add
add
mov
aas
add
push
mov
xchg
ret
push
add
imul
sbbb
jecxz
add
pop
cld
cmpsl
sub
mov
adc
jb
or
add
add
add
stc
jb
jne
add
add
insl
mov
nop
jmp
adc
add
mov
mov
stc
jb
push
dec
add
and
pop
push
stc
jb
aas
add
dec
add
add
aaa
add
popa
stc
jb
add
sahf
sbb
add
add
or
stc
jb
add
xchg
dec
test
cltd
or
add
or
add
sbb
cmp
arpl
incl
jne
add
mov
xor
add
stc
jb
add
je
stc
jb
xchg
push
jb
pusha
add
add
xor
stc
jb
test
js
popa
jae
mov
add
push
mov
xchg
ret
dec
jb
les
pop
push
push
mov
xchg
ret
dec
les
mov
stc
jb
xor
jecxz
dec
add
jnp
arpl
stc
jb
inc
ficoml
mov
mov
stc
jb
sahf
add
xchg
add
lds
add
nop
jmp
js
les
cmp
add
stc
jb
push
add
add
shrb
jb
cltd
push
call
push
pop
ljmp
out
add
add
lret
or
stc
jb
dec
add
lock
add
add
push
add
inc
push
mov
xchg
ret
add
add
inc
add
loopne
add
add
add
ljmp
jmp
cmp
push
mov
ljmp
cld
add
add
aad
mov
stc
jb
les
mov
pop
mov
add
push
stc
jb
cld
mov
add
call
stc
jb
jb
add
insl
div
nop
jmp
jb
add
xchg
dec
add
insb
add
stc
jb
add
add
add
je
nop
jmp
push
jae
add
stc
jb
add
add
pop
push
stc
jb
js
jecxz
xchg
mov
sub
jb
add
xchg
add
add
fwait
xchg
push
mov
xchg
ret
mov
add
out
mov
push
mov
xchg
ret
add
mov
mov
push
mov
xchg
ret
xor
dec
mov
stc
jb
mov
dec
cmp
stc
jb
xor
and
stc
jb
cmp
adc
sbb
inc
sub
cmc
hlt
inc
add
push
add
mov
xchg
ret
push
insl
add
mov
nop
jmp
sahf
rcrl
in
fsubrp
das
add
add
jb
pop
add
push
sti
jne
stc
jb
jecxz
add
pop
push
push
mov
xchg
ret
add
mov
stc
jb
push
mov
add
mov
xchg
ret
add
ficompl
xor
stc
jb
pop
or
out
sbb
popa
stc
jb
add
fcmovu
inc
push
add
mov
in
incl
add
push
cld
add
push
xor
push
mov
xchg
ret
add
sbb
incl
add
stc
jb
add
add
orb
incl
sbb
call
ret
push
fmuls
test
loopne
stc
jb
jne
aad
mov
adc
imul
dec
add
mov
mov
sbb
stc
jb
dec
add
add
stos
push
mov
xchg
ret
add
xlat
pop
dec
lock
add
xchg
ret
roll
add
test
sti
stc
jb
mov
dec
xchg
push
push
mov
xchg
ret
dec
lcall
or
incl
ljmp
adc
add
es
stc
jb
sbb
test
push
mov
xchg
ret
add
insl
xchg
stc
jb
dec
cmp
add
cmp
xor
decl
push
mov
xchg
ret
add
add
add
stc
jb
out
add
rolb
jb
add
jne
add
int3
pop
stc
jb
add
push
push
stc
add
stc
jb
mov
sub
scas
call
stc
jb
dec
sahf
add
add
jge
add
add
xchg
inc
ljmp
incl
add
add
sbb
sub
movb
mov
xchg
ret
add
push
mov
loope
jb
add
add
add
add
jb
or
pop
and
call
incl
jbe
cmp
pop
and
stc
jb
add
out
dec
lcall
incl
add
add
dec
add
inc
and
stc
jb
add
push
addr16
pusha
nop
jmp
inc
add
push
add
jne
mov
jb
add
add
aad
xor
jmp
stc
jb
mov
add
add
mov
xchg
ret
add
push
sahf
cmp
nop
jmp
adc
add
add
mov
stc
jb
add
insl
jbe
dec
rcrb
pusha
stc
jb
sbb
add
lcall
jb
add
pop
add
mov
mov
xchg
ret
sahf
add
add
cltd
mov
push
mov
xchg
ret
sbb
add
sbbb
mov
xchg
add
stc
jb
dec
add
inc
out
mov
stc
jb
out
add
cmp
add
mov
stc
jb
add
add
loopne
cmpsb
inc
dec
jne
nop
jmp
add
pop
dec
mov
jp
stc
jb
add
add
mov
xchg
ret
inc
inc
fdivrl
or
lcall
xchg
in
add
test
loop
stc
jb
add
add
cmp
inc
add
mov
mov
stc
jb
pop
add
cmp
mov
jb
add
adc
add
xchg
fisubs
popa
add
jb
mov
add
stc
jb
add
add
inc
pop
add
jbe
shr
stc
jb
or
add
mov
mov
js
pusha
fcos
stc
jb
inc
dec
test
cmp
nop
jmp
add
add
add
add
dec
nop
jmp
add
sahf
push
movb
inc
add
add
add
incl
push
push
add
outsl
rep
push
mov
xchg
ret
sahf
add
sub
mov
push
mov
xchg
ret
sub
out
mov
mov
fwait
mov
stc
jb
ljmp
push
push
mov
xchg
ret
inc
call
shl
stc
jb
add
js
add
sub
jb
jge
add
add
jb
add
out
dec
pop
popa
arpl
jbe
stc
jb
push
dec
add
lcall
xorb
jmp
add
andb
pop
add
sub
lock
add
and
add
add
movsb
stc
jb
mov
add
ljmp
push
outsl
push
stc
jb
xchg
add
out
xor
stc
jb
add
add
add
add
add
add
popa
add
jb
and
add
jne
mov
mov
stc
jb
add
add
add
mov
mov
nop
jmp
and
out
fiaddl
call
nop
jmp
jne
add
add
add
push
mov
xchg
ret
add
test
pop
nop
jmp
pop
add
jecxz
add
add
stos
mov
stc
jb
aas
sbb
sub
nop
jmp
add
inc
add
aas
add
add
cmpb
call
push
add
out
mov
stc
jb
add
dec
cld
test
xchg
lret
jb
push
pop
add
add
mov
xchg
ret
cmp
push
add
into
test
nop
jmp
add
insl
hlt
mov
je
nop
jmp
add
add
hlt
mov
mov
xchg
ret
xchg
pop
and
add
arpl
add
incl
add
mov
jb
add
pop
or
int3
mov
push
mov
xchg
ret
xchg
out
xchg
cmp
in
add
lahf
add
add
add
mov
mov
add
push
pop
sbb
gs
or
and
cwtl
pop
lds
movb
jnp
push
mov
xor
mov
add
cmp
dec
stos
jp
lock
dec
out
je
push
ja
outsl
ljmp
sub
push
push
je
movsb
xchg
arpl
mov
jp
ja
pushf
jle
push
jle
fwait
lea
scas
imul
sub
leave
jo
je
inc
pop
divb
shlb
adc
loopne
repz
sbb
xchg
ss
sub
or
iret
pop
xchg
pop
rorl
add
loop
jecxz
lock
out
mov
pop
lods
dec
inc
loop
repz
xor
adcl
add
jno
add
jb
jo
xor
call
or
mov
xlat
and
leave
jp
stos
jne
ret
cs
xor
int3
pop
scas
mov
and
xchg
aam
jg
xchg
cmp
addb
cs
insl
add
test
inc
add
jecxz
enter
aad
shrl
cmp
lods
dec
xchg
mov
sub
cmp
out
cltd
jb
in
sbb
cld
test
lods
pop
mov
inc
add
push
cli
push
sbb
mov
sbb
imul
mov
je
movsb
mov
and
cmp
add
xchg
sub
mov
add
ss
mov
jnp
inc
add
push
loope
stc
inc
mov
fnstenv
jns
dec
push
jmp
lds
mov
add
add
xlat
ficompl
sbb
mov
mov
add
fs
and
jae
mov
clc
push
ljmp
es
xor
dec
into
fiaddl
mov
outsb
jno
add
add
lcall
add
addb
add
and
push
sahf
lahf
jb
push
push
outsb
pop
or
sbb
add
jp
mov
rorb
sub
pushf
mov
call
jmp
cmpsl
in
shll
mov
inc
add
push
repz
aaa
and
fwait
pop
cld
stos
push
push
pop
mov
cmp
push
xor
jg
movsl
imul
loop
mov
add
pop
mov
push
add
sete
call
or
addl
sub
push
pop
inc
add
movsl
xor
aad
cmpsb
jle
add
ja
rolb
loop
dec
jmp
xchg
dec
sub
fwait
sub
xor
ds
sub
ja
mov
mov
cs
jne
shl
adc
mov
test
sbb
pusha
add
add
sahf
mov
pop
xor
lss
mov
and
dec
ret
flds
cmp
dec
push
pop
sub
mov
pop
mov
add
add
and
mov
inc
add
js
movsb
jle
pop
in
dec
add
pop
sub
cmc
fsubrs
cmp
inc
add
cmovl
adc
loopne
loop
mov
popa
xor
shll
loop
scas
in
fcomps
rclb
mov
imul
addr16
div
fwait
mov
addb
ja
aaa
cmp
mov
insl
scas
pop
pop
filds
mov
mov
icebp
lock
mov
inc
stos
jbe
leave
xchg
and
and
arpl
cmc
inc
add
mov
clc
movb
cmp
mov
xchg
cmpsb
inc
add
sub
mov
addb
pop
les
add
jo
or
mov
or
popa
inc
add
in
pop
popa
repnz
push
and
mov
test
sub
xchg
sub
aam
pop
shl
xchg
icebp
dec
inc
mov
dec
cwtl
repz
sbb
push
pushf
cltd
lods
lret
fneni(8087
aad
mov
push
sub
lods
mov
scas
pop
xchg
sar
lock
mov
movsl
cmpsl
fidivrs
add
js
xchg
fldenv
cmp
stos
inc
add
jmp
lret
scas
cmpsb
sbb
in
mov
xchg
add
sahf
dec
dec
xlat
fmuls
jnp
push
mov
loopne
clc
push
daa
jno
out
pushf
jo
add
jg,pn
dec
cmp
bound
data16
cmp
gs
adc
mov
sub
daa
test
bound
adc
add
inc
pop
cmc
cltd
gs
dec
pop
lea
xchg
lret
sbb
pop
outsl
push
inc
add
add
push
xor
mov
mov
in
scas
mov
arpl
mov
cmp
imul
push
xchg
mov
and
in
js
popf
cmp
gs
add
cltd
sbb
dec
popf
mov
and
movl
xor
scas
sbb
or
pop
dec
pop
mov
ret
pop
or
aad
add
mov
cmc
movb
add
xchg
or
xchg
jns
int
and
sub
add
stos
cmp
sub
cmp
add
xor
outsl
orl
dec
adc
out
mov
lret
jge
aas
inc
add
jno
cwtl
xchg
push
imul
ljmp
add
iret
cmpsb
push
push
or
cs
xchg
sub
cmp
add
sarl
je
pop
sbb
pop
cmp
sub
lods
add
mov
idiv
int3
inc
movsb
daa
std
and
push
mov
test
xor
addb
pop
xchg
mov
addb
sub
add
add
cmp
cmc
mov
shl
test
add
inc
cmp
inc
jno
cmp
pop
aad
rcll
inc
push
add
mov
add
lock
and
popf
bound
mov
push
or
out
sub
push
movsl
shlb
scas
jge
add
adc
add
lret
push
pop
repnz
clc
and
sub
sub
pop
or
ret
add
jo
and
rolb
cmpsb
popl
loopne
aad
js
sbb
cmp
mov
add
ret
cmp
sahf
mov
push
push
mov
pushf
mov
add
imul
mov
sub
mov
push
push
fldcw
cmp
mul
les
out
adc
nop
xor
add
vpsllw
imul
add
and
and
in
loope,pt
lea
push
inc
int
add
pop
mov
add
loopne
cmp
cltd
xchg
in
lods
rcrb
not
aas
in
add
add
add
mov
pop
lea
inc
add
loop
stos
mov
pop
ss
push
add
pop
loopne
sub
and
rorb
xchg
mov
xchg
mov
inc
add
push
mov
mov
and
outsb
fwait
popl
mov
ret
mov
scas
clc
faddl
div
push
jmp
add
mov
adc
mov
into
pop
adc
aad
add
ds
inc
add
loopne
nop
pop
scas
iret
cld
fstpt
pop
dec
repnz
sahf
xchg
and
or
insb
pop
sbb
add
mov
adc
push
sahf
add
sub
xlat
cltd
inc
xchg
cwtl
xchg
bound
sbb
xchg
mov
add
or
insb
aad
mov
test
or
out
lds
imul
add
in
push
add
hlt
loope
jl
pop
test
or
jo
je
aad
in
jp
movb
add
add
dec
rcll
fxch
or
cmpsl
std
lea
or
imul
pop
mov
inc
hlt
dec
mov
jo
lcall
jmp
dec
pusha
add
add
insb
hlt
ficomps
adc
adc
add
add
mov
imul
pusha
add
push
add
popa
movsb
adc
lcall
adc
arpl
xchg
xchg
pop
pop
fildll
leave
cmp
jecxz
mov
push
push
sti
and
shrl
mov
mov
add
ja
add
addr16
pop
insb
cli
ficoml
or
aas
jne
fcoml
inc
add
fyl2xp1
jbe
dec
dec
add
mov
hlt
xor
cwtl
cmp
daa
repz
stos
scas
jns
xchg
cmp
jl
dec
aam
sub
fsubr
cltd
dec
call
add
nop
pop
add
mov
addb
jp
add
roll
jmp
das
popa
rol
add
mov
lahf
xchg
out
pop
jne
adc
pop
fwait
imul
sbb
add
and
sub
and
divb
out
pop
jne
stc
xchg
enter
je
sub
xor
mov
test
mov
inc
into
notl
rolb
mov
call
scas
movsl
inc
std
nop
adc
push
iret
addb
out
adc
sbb
add
addr16
fisttpll
jne
test
inc
add
pmaddwd
dec
fwait
inc
in
sbb
jnp
jne
repz
add
iret
in
movb
add
xchg
outsb
dec
mov
fimull
dec
in
pusha
add
cmpsb
sbb
lock
sbb
fcmovbe
push
add
jb
and
xchg
lods
push
aam
xchg
cs
lds
xlat
cmp
call
add
push
pop
jecxz
lods
sbb
push
xchg
sbb
sarl
in
das
adc
stos
imul
hlt
and
popf
mov
stos
test
imul
imulb
jle
leave
mov
adc
mov
add
xchg
lahf
jns
lods
dec
xchg
adc
and
push
push
jnp
outsb
sub
dec
inc
add
jle
mov
add
push
mov
add
fisubs
cmpsb
inc
push
dec
add
sbb
jae
xor
cmp
repnz
sbb
sub
push
cmp
shr
add
cwtl
daa
ja
aaa
loopne
dec
lcall
push
dec
rclb
es
loopne
add
sti
fisubs
js
and
push
push
add
or
inc
add
mov
dec
out
popf
adc
aas
sub
fsubp
adc
dec
or
stos
cmpsl
and
dec
in
out
loope
mov
inc
stos
into
add
insb
lret
mov
adc
scas
jae
popf
and
add
inc
orl
push
mov
ja
add
movb
xchg
push
xchg
push
mov
add
arpl
fucomip
cmc
jmp
mov
lret
ret
popf
cmc
push
out
push
fcomi
and
mov
cmpsb
xor
cmpsl
sti
fs
mov
adc
sbb
cmp
ds
add
push
sub
fldcw
push
jo
pop
sub
sarb
add
mov
adc
dec
and
lret
frstor
iret
sub
jl
idivb
dec
bound
mov
sub
into
add
cld
stc
stos
movsl
test
scas
push
insl
pop
cmp
fdivl
movsl
pop
sbb
push
decl
loopne
inc
add
int3
push
insl
lret
sub
cld
ret
mov
aas
xor
arpl
sahf
fildl
push
jns
jmp
jb
add
data16
cmp
test
jle
imul
push
fwait
cs
mov
addb
clc
add
jo
add
adc
cmp
sub
icebp
xor
jns
aaa
cmpsl
add
mov
ja
icebp
sti
sti
ror
popl
cmp
fsubr
aad
or
in
cmp
ret
les
sub
jmp
or
sbbl
push
add
enter
sub
xor
or
es
xor
inc
mov
cmp
dec
jg
dec
rolb
inc
add
dec
shll
jge
sbb
aas
out
or
sub
sub
sub
xchg
aad
inc
das
js
add
jnp
jne
add
in
jne
sti
sahf
loop
sahf
pop
rolb
lods
ret
rolb
xor
jl
mov
jns
push
push
andl
xorl
push
dec
mov
lods
shlb
fsubrl
in
out
fisubrs
sbb
int
inc
add
add
int3
jae
push
pop
mov
jno
cmp
sbb
sbb
add
lods
adc
xchg
inc
add
cmp
mov
push
jne
repz
fadd
mov
fsub
insb
sbb
mov
adc
xor
add
in
mov
or
insl
push
add
mov
ss
movsl
in
xor
sbb
fwait
jns
push
jns
dec
cmp
jle
cltd
sbb
mov
xlat
cli
mov
inc
add
lods
fstpl
inc
scas
adc
push
add
inc
cltd
xlat
xor
leave
sbb
mov
push
adc
stos
or
sub
data16
fs
dec
push
xchg
popf
je
cld
std
ss
idivb
addb
movb
js
mov
sbb
mov
das
les
inc
cwtl
int
int
push
rcrl
lods
and
mov
inc
sbb
scas
jnp
add
lods
stos
sub
mov
and
loope
xchg
mov
sub
pushl
addb
pop
into
movb
lds
jl
out
lahf
add
push
addb
push
scas
or
lods
and
lahf
push
mulb
idivl
lret
out
inc
loop
fs
les
sbbl
xor
sbb
push
add
inc
add
lods
mov
loop
or
mov
sti
sti
aaa
add
push
jae
js
pushf
push
movb
pop
mov
dec
in
inc
add
rolb
popa
aaa
movsl
popl
lret
mov
mov
inc
cmp
icebp
and
lret
popf
popa
mov
mov
jle
insb
sub
ret
mov
lods
pop
mov
adc
outsl
fdivl
add
jle
loop
add
mov
in
inc
add
and
pop
mov
xchg
icebp
inc
sub
sub
mov
xchg
jne
outsl
sti
imul
lock
lret
and
and
gs
mov
movsl
outsl
and
out
jo
or
out
mov
fbld
add
pop
out
mov
in
push
mov
in
jo
hlt
aas
in
leave
fcmovnu
cmp
scas
cmp
push
fildll
cmp
inc
add
mov
sbb
dec
stc
lds
and
inc
add
add
add
sub
xchg
aam
or
popa
mov
pop
ror
add
out
frstor
cmpl
xor
je
xchg
adc
push
adc
rclb
pop
arpl
std
in
shll
mov
jmp
lods
fiadds
imul
push
je
je
nop
fstpt
repz
add
cmp
cmp
lods
pop
push
jnp
mov
xchg
lock
add
push
add
mov
sbb
sbb
jl
jcxz
push
add
ficoml
rorl
loopne
mov
mov
xlat
pop
or
and
or
xor
cmp
push
pop
mov
aam
add
in
fs
push
and
add
jl
sub
aam
add
sbb
repnz
or
fmuls
xchg
mov
cwtl
and
idivb
mov
repz
and
xor
aad
shl
sbb
orl
pop
in
add
test
call
adc
lret
fisubrl
jecxz
lds
addr16
push
lahf
sub
mov
imul
test
ds
fiaddl
js
adc
dec
adcl
aad
xchg
inc
add
mov
es
or
loop
xchg
pop
jae
pop
xchg
mov
gs
stc
clc
sbb
call
sub
sbb
jne
sub
mov
popf
inc
stc
dec
pop
and
daa
mov
es
add
insl
cmp
cmp
ljmp
xor
std
aaa
mov
pusha
add
scas
mov
mov
fldcw
fdiv
mov
cmpsl
and
ds
in
xorl
xlat
sbb
xor
in
sbb
xchg
outsb
je
enter
mov
rcll
mov
dec
test
dec
mov
push
mov
mov
inc
add
aam
outsb
test
sbb
jecxz
arpl
dec
cld
test
or
out
loop
or
add
fs
pop
pop
les
mov
imull
cli
std
push
stos
addb
lds
out
lds
add
loope
adc
iret
mov
insl
imul
mov
pop
test
mov
mov
cmpsb
stos
sub
add
stc
jne
xchg
sbb
pop
or
sahf
sbb
sbb
mov
lahf
int3
mov
sbb
dec
adc
mov
mov
xchg
jno
cmp
cmp
jp
mov
lock
movsl
les
jne
add
dec
xchg
add
pop
shrb
add
or
addr16
sbb
stos
out
pushf
add
cmp
push
les
add
loop
xor
pop
shlb
insb
hlt
cmp
repnz
inc
add
dec
pop
mov
pop
stos
in
popa
scas
xlat
call
add
cmp
mov
test
xchg
test
lret
jmp
push
inc
add
inc
add
pop
add
and
jo
jl
lods
ds
push
xchg
enter
sahf
ret
mov
loop
call
ficomps
addl
lahf
icebp
cmp
add
arpl
add
movsl
movsb
int3
testl
jbe
imul
out
sub
insl
push
pop
mov
add
roll
iret
mov
mov
in
push
jno
jae
jle
fwait
repnz
add
mov
popf
mov
ss
aaa
lods
aad
rorl
ljmp
sahf
test
es
pushf
addl
stc
mov
bound
cmpsb
into
push
pusha
add
pop
lods
sahf
xor
mov
rorb
adc
and
aas
add
push
add
aas
mov
mov
fmull
popa
pop
jnp
mov
pop
shrb
in
popf
outsl
sub
jmp
addr16
repnz
add
or
sub
je
inc
sub
cmp
or
in
cmc
lret
mov
jo
dec
xor
stc
push
cmp
sbb
sarb
mov
adc
les
dec
arpl
jae
fildll
inc
add
into
lds
mov
outsl
jnp
ret
test
jns
xor
insl
dec
inc
iret
or
xchg
and
rcl
jecxz
pop
addl
push
mov
xchg
cwtl
pop
cld
leave
mov
or
call
dec
dec
mov
push
imul
or
arpl
dec
out
lea
lret
sbb
cmp
nop
add
imul
repnz
sbb
jae
aas
pop
mov
add
stos
mov
jb
hlt
daa
lds
push
shll
rcll
add
lret
repz
add
and
in
les
mov
addr16
cwtl
pop
nop
jp
or
sahf
xchg
call
dec
lock
mov
cmp
dec
sub
and
sub
push
add
test
mov
add
addl
bound
mov
scas
add
and
into
das
mov
push
sarl
sti
lcall
in
nop
lods
or
fimuls
test
les
and
ret
mov
sub
push
xlat
outsb
test
add
or
or
or
adc
xor
push
pop
stc
cmp
cwtl
dec
dec
xor
fs
push
fsubrl
int
leave
adc
jge
ljmp
mov
add
int3
imul
jns
jnp
mov
add
inc
add
cmp
loop
adc
add
add
shrl
inc
add
add
test
add
cld
mov
xchg
cmp
imul
enter
ja
je
dec
or
sahf
xchg
mov
movsb
sub
pop
daa
lods
rol
add
fidivl
push
test
jns
add
lds
cmp
test
xor
xchg
daa
shl
mov
mov
or
ds
xor
sub
pop
jecxz
jne
add
sub
shll
icebp
adcl
repz
test
lds
cltd
push
ret
mov
sub
cs
jmp
fiadds
add
es
pop
adc
sbb
cwtl
idivl
mov
int
out
cld
jbe
xor
movsl
cmp
shll
and
pop
ja
stos
rorb
xor
outsb
rcr
jmp
out
mov
mov
and
arpl
jg,pn
subl
jbe
xor
fimuls
mov
icebp
das
dec
push
push
add
addb
add
mov
in
mov
pusha
add
test
push
aam
cmpsb
jne
ja
lret
popa
mov
and
mov
push
xchg
dec
gs
add
adc
or
sub
jp
lods
cmp
xchg
or
repnz
movsb
in
fs
mov
jmp
add
mov
xor
mov
imull
popf
cltd
lret
adc
fnclex
xor
add
xchg
xchg
data16
mov
fsubrl
out
or
jne
lds
repnz
insb
xchg
cli
sbb
fidivrl
lods
jo
add
loopne
mov
in
jmp
xchg
jmp
mov
addl
stos
in
jecxz
out
je
bound
orl
stc
outsl
add
ja
xchg
fdivrl
mul
test
idivl
jg
sti
push
mov
and
jo
add
mov
xlat
les
mov
sbbl
addl
add
and
or
jno
movb
push
xor
add
stos
cmp
inc
add
enter
das
push
imul
jmp
mov
and
loop
sub
mov
xor
sbb
push
cmpsb
sbb
inc
dec
push
pop
mov
or
movsb
mov
hlt
outsl
in
jno
imul
pop
int3
xor
add
shrl
sbb
loopne
decb
adc
jmp
push
push
outsb
mov
xchg
jp
scas
jns
jno
aad
add
addr16
mov
test
in
cwtl
push
sub
int
mov
mov
repnz
sub
sarl
jle
sub
fsubl
cwtl
fwait
adc
xchg
ja
or
fsubl
stos
loope
push
fdivrs
add
add
loope
mov
add
mov
aaa
push
add
adc
aad
sbb
insl
rcl
jns
lcall
mov
and
push
stos
mov
cmpsb
sbb
xchg
outsb
push
adc
aad
xor
aad
loop
add
pusha
add
std
lods
sbb
push
xor
sarl
sbb
pop
pop
aam
mov
ss
xchg
push
mov
rolb
add
xor
mov
in
out
add
jp
push
int
fnstcw
inc
xchg
insb
jno
das
test
rol
insl
into
add
cmp
mov
or
jo
scas
cwtl
xor
inc
xchg
adc
iret
pop
mov
pop
stos
aam
push
rorb
lcall
fs
scas
jle
add
inc
in
push
popa
mov
loop
loope
sti
mov
into
mov
jmp
or
and
add
lods
mov
out
aam
mov
xor
lea
cmc
jmp
pop
addb
xchg
adc
and
add
in
in
xchg
xor
add
dec
mov
pop
leave
jmp
mov
push
inc
xor
add
cwtl
outsb
jae
addb
ficoms
mov
add
jne
add
push
xor
jmp
cmp
fistps
jmp
imul
fisttpll
sub
bound
cmpsb
pop
data16
call
inc
add
push
in
leave
nop
inc
addb
lcall
aam
mov
cmpsl
cmp
imul
stc
xor
loopne
adc
call
mov
sub
mov
xchg
fistpll
or
sbb
adc
neg
jae
fwait
mov
add
pop
and
insl
imul
fadds
les
insl
icebp
mov
cmp
test
add
mov
sub
out
aam
mov
out
push
jae
dec
imul
add
mov
lods
outsl
pop
add
xchg
mov
and
jb
mov
jnp
mov
and
js
adc
out
aas
inc
push
dec
add
imul
jno
push
xchg
mov
lods
inc
add
sarl
rorl
lea
pop
outsb
sbb
xor
pusha
add
cli
pop
xchg
addr16
add
aas
push
mov
jae
push
adc
mov
push
adc
lock
out
add
out
shll
push
pop
es
das
adc
outsb
push
out
gs
mov
push
add
call
mov
inc
add
xlat
cmp
jae
adc
sbb
xor
xchg
pop
idivb
scas
xchg
addb
test
mov
sub
es
sub
addb
jp
adc
loop
aad
add
mov
sahf
or
into
cs
movsb
adc
addb
sbb
xor
add
add
in
jns
call
imulb
icebp
in
imul
dec
ds
pop
rolb
mov
pop
sub
test
hlt
leave
repz
out
in
sbb
fisttpl
jg
imul
push
into
pop
test
sub
fimull
sub
adc
add
stc
cmp
add
inc
add
aad
cmp
stos
sub
lods
dec
mov
dec
dec
mov
leave
or
popf
fwait
cmp
stos
adc
ret
call
ret
add
lods
jnp
shrl
imul
jo
jne
lret
or
mov
sahf
pop
xchg
div
das
addb
add
xor
push
xchg
xor
pop
jp
sahf
or
pop
adc
movb
push
test
jl
push
bound
das
clc
jae
add
add
stos
xor
mov
pop
sub
jns
mov
in
lret
into
sub
pop
clc
movl
add
push
push
das
test
mov
hlt
push
repz
popa
nop
and
add
into
mov
mov
and
lock
dec
divb
daa
lret
mov
xor
adc
mov
dec
insl
je
add
mov
aaa
push
mov
inc
add
push
mov
and
push
mov
sbb
pop
insl
cld
jbe
mov
add
ljmp
mov
in
xor
lea
lahf
or
add
push
pop
mov
mov
xor
jg
shll
fildll
jbe
add
push
pushf
rorb
sbb
mov
ss
pop
xchg
jae
insl
mov
inc
add
pop
out
add
mov
fs
outsb
lods
push
addb
adc
sub
movsl
fcoml
cmpsb
sbb
fisttpl
mov
cltd
cvtpi2ps
fstpl
data16
outsb
das
enter
aas
xchg
and
pushl
into
test
push
sub
sbb
mov
add
add
and
or
and
sbbl
filds
and
aaa
inc
add
xchg
mov
cltd
pop
ds
fildll
movb
add
add
jbe
push
or
adc
lods
sarl
rorb
add
jg
outsl
test
mov
pop
sub
push
lret
mov
insb
sub
movsl
ja
and
ret
mov
nop
cmp
int
add
jecxz
arpl
sbb
dec
cmpsl
inc
stc
popf
aas
enter
out
int3
repz
bound
rep
cmpsb
in
and
fcmovnb
add
xchg
push
negl
test
dec
bound
stos
roll
dec
pop
pop
pusha
add
add
test
das
pop
push
push
add
int
mov
xchg
xor
or
add
cmp
sub
test
sub
pop
pop
xchg
int
add
stos
lret
bound
push
jecxz
test
sbb
add
cmc
mov
mov
cmp
stos
jno
rolb
orl
jg
xchg
mov
shr
mov
scas
imul
aam
sub
inc
repnz
mov
xchg
add
fldl
jg
xchg
div
cs
xor
jp
jo
sub
scas
test
loope
popf
xchg
loopne
dec
push
or
out
xchg
jmp
addb
mov
leave
repz
fists
in
enter
cmp
lret
cs
add
or
inc
add
cmp
xor
rolb
or
fistps
xor
inc
add
jno
push
stc
cli
std
pushf
cmpsb
push
add
inc
add
addl
mov
pop
xchg
add
sbb
or
hlt
icebp
adc
add
cmp
daa
xchg
jbe
push
or
push
jp
test
push
aas
sub
icebp
scas
fstpt
dec
mov
jns
addb
xchg
movsb
cs
push
imul
sub
mov
cmpsl
or
add
add
add
add
sahf
or
pop
mov
add
sti
xor
xchg
in
fildll
pop
cltd
pusha
add
adc
stos
jo
add
add
loopne
add
inc
add
push
ds
mov
out
push
lds
jb
add
rcrb
xchg
mov
or
jle
cmp
pop
sbb
or
iret
ljmp
xor
add
cmp
and
add
cmpsb
sbb
popa
xor
std
enter
bound
jge
std
pop
xor
aaa
mov
or
cs
mov
hlt
adc
add
push
and
pop
pop
sbb
imul
xor
scas
xlat
mov
in
dec
xor
out
pop
pop
jbe
mov
add
jge
adc
in
inc
dec
push
dec
pop
and
jle
call
lods
push
sbb
ljmp
add
sub
add
and
pop
dec
mov
sbb
xchg
iret
and
push
mov
jle
ljmp
add
xchg
add
nop
push
and
xor
add
movsl
pushf
mov
or
and
js
sbb
fldl
xchg
or
xor
add
mov
add
mov
xchg
push
sbb
jl
fcoms
test
imul
push
inc
add
add
add
insb
loopne
test
mov
imul
mov
dec
test
cli
adc
sahf
incb
movsl
into
pop
fwait
mov
mov
aas
ret
ds
ficompl
outsb
repz
add
and
jge
pop
inc
add
mov
lahf
cmpl
mov
cmp
std
sahf
in
lea
inc
xchg
outsl
fimuls
xor
dec
and
cltd
xchg
cltd
mov
pop
xchg
xor
or
fsubrs
enter
pop
sbb
cmpsb
pop
int
add
addb
out
and
xchg
jns
add
iret
std
dec
daa
mov
and
dec
push
fwait
adc
fcmovnbe
sbb
inc
xor
out
mov
add
sarb
pusha
add
mov
xor
push
stos
pop
std
jecxz
xor
add
dec
seta
jle
sub
jle
data16
scas
inc
stos
and
int3
pop
sti
push
mov
cmp
mov
jle
inc
inc
push
add
push
and
lcall
dec
jns
fadd
add
dec
sahf
or
leave
insb
cmp
aas
cld
iret
outsb
xchg
test
dec
sbb
push
add
in
mov
add
cwtl
lahf
push
ret
jge
or
add
les
jg
imul
cmpsb
or
loopne
mov
mov
xor
call
jae
mov
push
mov
hlt
sbb
jno
lcall
and
inc
mov
jb
xor
push
in
adc
sti
push
add
fwait
xchg
xchg
addr16
scas
jle
sahf
xor
cmpsl
jge
adc
mov
fists
mov
add
into
shlb
aam
scas
adc
xchg
test
popa
sub
lods
jnp
add
fnsave
icebp
xor
cmp
add
leave
inc
inc
push
dec
mov
addb
fnstcw
int
sbb
add
push
lret
add
add
sbb
mov
pop
iret
push
xchg
int
lea
push
ret
scas
mov
cmp
or
inc
add
jg
cld
push
inc
add
and
jb
inc
out
bound
fcomps
lds
cld
bound
les
lea
adc
data16
test
mulb
cmpsb
out
ss
mov
sbb
dec
xor
add
cmp
push
adc
pop
sbb
mov
loopne
sbb
add
push
testb
imul
stc
mov
and
int3
in
jo
fadd
add
lcall
add
addb
and
addb
mov
mov
movsb
xor
push
insb
rorb
jl
cmp
jp
insb
fdivrs
xchg
add
sub
test
lds
dec
roll
pop
cld
push
add
inc
add
add
add
add
push
jle
mov
das
pop
or
jae
inc
cmp
xchg
push
les
push
xchg
mov
mov
jno
imul
neg
mov
ja
ljmp
mov
push
pop
push
jns
jne
mov
add
dec
fistpll
sbb
mov
push
js
int
push
jb
sbb
push
jmp
add
cmp
and
addb
sub
test
sbb
pop
pop
mov
xchg
add
jge
adc
add
movsl
leave
jno
dec
pop
fs
cs
stos
fcoms
nop
divl
lahf
inc
add
xchg
mov
add
aad
dec
push
add
sbb
sbb
jp
mov
test
pop
lcall
mov
cmp
inc
add
nop
mov
jge
cmp
inc
sbb
lret
sarl
scas
dec
cmp
add
pop
jecxz
add
lea
daa
xchg
inc
add
sbb
sbb
enter
mov
dec
push
bound
jl
mov
jnp
out
push
push
movsb
bound
test
mov
daa
dec
into
pop
xchg
hlt
push
push
cmp
sahf
inc
sbb
icebp
inc
add
fscale
pop
xchg
rorl
mov
mov
push
addr16
add
dec
faddl
mov
pop
outsl
stc
mov
cmp
lret
add
add
data16
int
adc
mov
pop
js
mov
je
divl
sbb
mov
cwtl
jmp
mov
dec
push
sarb
adc
jp
mov
jno
cltd
jmp
int3
sbb
lret
pop
sub
pop
mov
lods
push
add
clc
outsb
fyl2xp1
cltd
push
sub
data16
mov
add
fildl
add
fcmovu
and
or
shrl
divb
push
lods
xlat
inc
or
push
ljmp
cmpsl
enter
inc
add
ss
add
ret
inc
add
mov
xchg
or
cld
repz
sub
add
add
les
addr16
test
jge
ret
int3
pop
sub
mov
out
cmp
sub
fwait
jmp
loop
add
add
and
sbb
inc
in
xchg
hlt
out
or
mov
mov
push
jnp
rcll
dec
and
aas
imul
scas
ficomps
jbe
push
add
add
repnz
jo
mov
jno
mov
arpl
icebp
mov
aam
rolb
mov
bound
inc
mov
addb
cs
jp
push
add
repz
jg
and
aas
cmp
inc
pop
inc
mov
fisubrl
shrb
lods
dec
in
icebp
gs
ret
shrb
bound
mov
or
dec
mov
loopne
xor
jg
call
cmp
adc
push
mov
sbb
in
pop
or
aad
jno
ret
or
cmp
mov
jbe
pop
out
mov
jb
icebp
jno
lods
ljmp
sub
aam
leave
out
adc
push
stos
push
stos
xor
aam
ss
add
jp
and
mov
test
inc
add
add
fisttpll
add
push
dec
shrb
add
xchg
sti
mov
std
daa
mov
add
jns
or
or
mov
adc
test
mov
mov
mov
or
roll
mov
sbb
inc
pusha
add
pop
in
pop
inc
add
outsl
jns
xchg
add
jbe
and
sbb
divl
dec
in
and
cwtl
mov
add
sysenter
test
cwtl
lahf
xchg
sub
xor
pop
jmp
jg
add
and
mov
js
pusha
add
movsb
pop
js
aaa
adc
rcrb
push
cld
out
adc
adc
xchg
sbb
ja
fwait
data16
mov
xchg
mov
add
xchg
les
cmpsl
mov
mov
out
add
add
shrl
ds
add
sub
push
lock
out
pop
gs
cld
fstpt
cmp
inc
sub
add
jns
push
push
add
and
stc
mov
pop
add
movsl
pop
xor
cmp
stos
aad
push
xor
shl
add
cmp
pop
jmp
jecxz
cmp
nop
ja
pop
pop
mov
dec
fldl
aaa
cmp
jbe
pop
outsl
in
int3
jne
and
push
add
outsl
icebp
fcmovnu
mulb
sbb
add
mov
pop
xor
dec
aam
add
or
ss
test
pushl
cmp
mov
push
xor
dec
push
mov
or
add
insb
mov
jno
dec
xchg
dec
js
fdivrl
xchg
lcall
add
sub
cmp
jns
xor
rorl
add
test
sbb
scas
inc
add
add
adc
fidivrl
cmc
push
jno
add
out
mov
test
pop
sbb
inc
add
sbb
test
xchg
in
dec
pop
bound
dec
leave
adc
mov
aam
add
mov
addb
and
lods
inc
out
jne
popf
in
addr16
fdiv
aam
iret
fwait
test
fadds
add
lds
jae
movb
ja
adc
lret
std
xchg
bound
test
push
addr16
repz
out
inc
in
filds
popa
cli
lret
sub
mov
pushf
fcomps
dec
aam
add
cwtl
lret
adc
jns
push
xor
pop
xchg
inc
add
rolb
cmpsb
shll
cmp
pop
ret
add
repz
add
lret
cmpsl
lcall
or
add
nop
push
pushf
sub
nop
adc
iret
sub
push
inc
mov
add
xchg
or
xor
dec
xor
ret
dec
and
imul
popf
push
into
push
jo
test
xor
xor
in
mov
xchg
ret
cmpl
adc
cli
mov
add
inc
int3
loope
clc
sub
mov
push
add
pop
test
aas
inc
add
stos
jbe
mov
out
mov
jmp
insb
mov
sub
mov
fidivl
loope
cmp
pop
and
or
push
sbb
push
jg
rorl
add
mov
rolb
add
popf
imul
xchg
xchg
cmp
add
sub
jo
xchg
or
flds
xchg
icebp
inc
add
pushf
pop
in
dec
in
shrb
jne
add
xchg
shll
in
lds
lods
addr16
mov
sahf
jg
push
pop
adc
std
es
pop
iret
pop
shll
gs
sbb
pop
lret
lret
nop
dec
jne
fwait
sarb
stc
jge
lock
add
cltd
lea
sbb
leave
cltd
jmp
push
push
sahf
sti
dec
cld
test
or
sub
cmc
jecxz
dec
xchg
jp
sub
mov
in
pop
aaa
mov
bound
repnz
xchg
or
push
jbe
jo
jno
dec
shrb
fisubrs
arpl
mov
lcall
out
aam
xchg
sub
xchg
rol
add
in
sbb
mov
pop
adcl
add
xorl
test
cli
test
fisttpl
leave
pop
aam
movsl
loop
sub
cld
movb
sub
aad
out
pop
xor
not
sub
add
aad
test
jae
fs
add
mov
add
sbb
inc
pop
inc
test
add
sbb
jb
and
shll
jae
sub
out
cmp
bound
lods
jmp
test
add
arpl
clc
daa
mov
mov
scas
push
cmp
mov
bound
xchg
stos
xor
add
and
pop
xor
scas
add
xor
jbe
xchg
movsb
fisttpll
shlb
add
ret
inc
add
lahf
dec
jle
stos
dec
xor
cwtl
fwait
xor
add
mov
inc
pop
push
aas
push
into
jmp
nop
add
adc
cmpsb
fistpll
into
popl
loope
dec
imull
jecxz,pt
xor
or
fucomp
out
dec
add
gs
inc
xlat
fldl
mov
out
mov
inc
pop
leave
jle
add
lahf
in
add
je
int3
lret
outsb
outsl
jnp
jns
jbe
inc
add
sbb
or
mov
pop
xor
nop
int
inc
add
mov
add
pusha
add
arpl
add
popa
fcoms
cmc
inc
push
mov
sub
ss
aas
jbe
in
adc
stos
mov
jae
fucomp
in
inc
push
mov
repnz
sbb
xchg
jmp
negb
sahf
mov
mov
and
xor
cmp
repz
rolb
movsl
adc
push
lds
test
lcall
inc
add
add
outsb
xlat
cmp
add
inc
xchg
ret
inc
in
pop
sbb
and
push
push
pop
cmp
cmpsb
push
out
js
jecxz
pop
or
sub
divl
loope
xor
daa
leave
lds
sti
lea
mov
push
outsl
ss
repz
add
add
cmp
cmp
cmpsl
mov
movsl
popf
inc
add
nop
mov
roll
js
adc
mov
jbe
cmp
or
inc
or
iret
sbb
mov
sub
or
in
xor
aam
push
stc
int3
mov
and
pop
mov
out
push
ds
or
xchg
jmp
hlt
cmp
pushw
and
out
data16
mov
dec
sbbl
inc
add
jo
mov
hlt
xchg
push
int
cltd
mov
leave
push
mov
jns
sub
fdivrs
les
ds
inc
test
lock
sbb
mov
mov
insl
insb
or
sub
dec
adc
imul
push
es
sbb
cmp
in
movb
test
sbb
shrb
push
negl
imul
add
fidivrs
test
cmp
add
add
pop
xchg
and
add
cmpsb
xchg
fistpll
xchg
addb
out
xor
mov
cmp
cli
or
cmpl
jp
jmp
add
push
and
mov
outsl
and
xchg
add
aaa
icebp
out
dec
jp
in
add
movsl
icebp
push
mov
mov
dec
les
mov
out
or
shlb
cwtl
sar
inc
fidivrl
aad
int
pop
int
push
js
aas
sahf
rolb
add
mov
out
and
popa
rolb
add
rcrb
loop
jnp
lock
loop
add
repnz
bound
and
aam
add
in
mov
idiv
mov
andl
pop
icebp
outsb
fdivl
jle
xor
push
lods
test
bound
add
xor
sbb
mulb
loope
add
jg
push
inc
add
std
mov
adc
sub
add
int3
jns
pop
dec
pop
xlat
test
nopl
push
xor
push
pause
mov
sbb
pop
cmp
xchg
xchg
fidivs
and
ds
jae
hlt
mov
xchg
addb
ret
lcall
sub
lds
rcrl
inc
add
add
xchg
mov
and
add
loope
mov
or
add
bound
push
adc
in
lods
subl
lret
insl
push
js
adc
add
sbb
aas
mov
pop
add
aas
push
sbb
pusha
add
int
repz
jmp
push
inc
add
push
fnstcw
movb
xchg
imul
popf
and
push
addb
add
and
pop
shl
les
aaa
testb
sahf
rolb
out
adc
cmp
sbb
rorl
scas
imul
add
or
or
das
add
addb
cmp
imul
aam
mov
fisubl
fs
or
xchg
loopne
add
sbb
mov
xchg
sub
stos
leave
jle
dec
fiadds
incl
es
mov
push
push
push
push
push
add
inc
lret
add
hlt
pop
in
in
sbb
xchg
daa
pop
imul
xchg
cltd
pop
shll
xlat
or
sbb
addb
mov
adc
stos
insl
dec
push
pop
mov
xor
dec
mov
add
scas
std
cmp
scas
pushw
cmovo
mov
jle
cltd
mov
push
into
outsb
sub
gs
lahf
or
ret
fistps
in
mov
scas
movb
cmpsb
inc
movsl
stos
mov
sub
xor
pushl
pop
imul
add
pop
mov
jmpw
fisttpl
sub
jmp
add
cmpsb
ljmp
sbb
add
incb
add
sbb
adc
and
sub
add
pop
mov
sbb
outsb
fildl
add
sbb
push
mov
fcmove
popf
imul
add
test
aam
mov
xchg
or
jmp
add
jb
cmp
sub
add
cmp
lods
pushf
scas
mov
outsb
sbb
in
addb
mov
mov
fxtract
lahf
and
ljmp
ret
pop
hlt
sub
das
xchg
clc
xchg
loop
and
shl
pushf
add
mov
jae
inc
mov
addb
loopw
hlt
xlat
bound
xor
iret
cwtl
cmpsb
jnp
pop
push
loop
jg
popa
jecxz
hlt
pop
stos
adc
inc
les
rolb
push
pop
and
std
fmul
rep
pusha
add
add
sti
xchg
movsl
movb
mov
jne
or
jge
push
jnp
dec
outsl
ret
clc
rclb
imul
stos
pushf
mov
repnz
fsubl
out
cld
test
adc
add
add
out
out
add
add
add
jae
das
sbb
scas
sub
ret
jbe
dec
imul
cs
or
cmpsl
mov
add
dec
push
imul
add
jo
and
scas
sub
mov
add
addb
add
pop
aam
or
mov
sub
mov
dec
dec
jecxz
mov
addb
in
or
xor
cli
push
ja
sbb
rol
fwait
add
stos
add
mov
int3
lock
lret
xchg
sub
mov
and
arpl
mov
add
ficomps
push
push
push
cs
jle
outsl
pop
rol
sub
jne
popa
or
xchg
mov
push
std
sbb
add
and
xlat
out
sbb
pop
mov
push
mov
or
sbb
add
xchg
mov
repnz
stos
xchg
xor
jg
add
stos
imul
int
and
faddl
xor
adc
movsl
mov
loopne
add
push
inc
add
leave
aas
or
icebp
das
pop
pop
ja
shr
cmp
mov
mov
aaa
std
lds
mov
test
sub
daa
dec
cmp
jecxz
or
mov
shlb
mov
pop
imul
out
add
mov
cmpsb
dec
rolb
push
adc
push
add
fistpl
addb
mov
add
ja
mov
std
popf
mov
ficoml
rolb
xchg
dec
loope
movsb
loope
aas
xor
push
mov
repnz
or
or
fildl
mov
lods
adc
mov
ss
add
outsl
rcr
jno
pop
cmp
jl
mov
popa
je
mov
dec
sub
mov
mov
repz
popf
add
popf
jecxz
shl
les
or
nop
mov
gs
mov
rorl
inc
add
jecxz
sbb
mov
in
bound
pop
adc
iret
enter
int
add
push
add
outsl
bound
pusha
add
or
jl
mov
push
pop
stos
inc
stc
and
push
adc
jnp
int3
ret
dec
jnp
sub
jle
pop
push
dec
adc
xchg
mov
and
inc
js
std
adc
addr16
jge
je
dec
cmp
sub
jae
aad
mov
jne
dec
pop
and
add
in
push
lret
add
addb
mov
les
inc
cmp
cmp
test
add
jl
add
sahf
xor
adc
ljmp
data16
ja
nop
mov
xchg
dec
stos
or
movsb
add
je,pt
sub
and
mov
stos
pop
push
mov
mov
sub
add
sub
addb
push
iret
lds
lret
inc
add
mov
add
add
in
xchg
push
mov
fidivs
add
push
cwtl
push
cmpsl
sbb
int3
into
and
repnz
jge
add
xchg
cmp
push
and
jl
mov
ret
andl
and
repz
sbb
lods
pop
jno
jge
add
into
push
js
ss
mov
jmp
arpl
xor
out
push
sbb
cs
loopne
popf
bnd
push
pop
inc
add
movsl
push
add
stos
in
jg
sbb
xchg
push
add
adc
add
fildl
aad
mulb
in
addl
mov
sbb
imul
add
or
jmp
xor
push
adc
out
outsl
pop
loop
inc
call
out
movb
and
xchg
dec
sbb
into
xor
mov
xchg
aas
jne
lahf
subps
dec
loopne
cmp
add
cmp
push
loop
jg
add
inc
lret
fcmovu
fstpt
fdivrs
inc
add
pop
dec
inc
add
push
ret
jb
xchg
pop
pushf
push
add
shll
in
rol
test
and
hlt
inc
rolb
xchg
sub
and
mov
sbb
or
gs
fisttpll
inc
xchg
mov
cmpsl
das
bound
and
pusha
add
addb
test
mov
int3
cld
push
mov
sbb
movb
push
add
popa
push
popa
mov
pop
rorl
cmp
fisubrl
xchg
lret
sub
adc
pop
es
jmp
inc
inc
add
les
popf
jno
in
jge
rcr
stos
xchg
adc
cmp
repnz
rorl
push
dec
xor
jne
in
ss
pop
negb
sbb
addr16
in
loope
adc
sbb
andl
stos
push
add
cmp
or
fistpll
mov
cs
gs
sub
jle
aad
and
ljmp
sarb
stc
push
mov
add
inc
add
add
test
and
jae
out
sbb
lock
xor
imul
or
xor
add
jnp
pop
sbb
add
daa
sub
adc
jbe
int3
aas
push
jne
scas
sub
sub
aas
repz
jecxz
jmp
les
xchg
add
loope
cmp
or
pop
imul
add
jae
add
or
outsb
jns
mov
jmp
inc
add
inc
dec
fs
and
push
xchg
cli
and
cmp
mov
xor
in
test
aas
cmpsb
jl
mov
imul
shll
rorl
addb
lret
das
push
imul
out
jae
dec
add
adcl
push
add
cli
xchg
enter
pop
aad
ret
xchg
xor
out
adc
add
ret
enter
xchg
inc
popf
xchg
or
sbb
aaa
push
push
mov
repnz
into
lret
mov
add
lahf
lds
xor
movsl
mov
inc
add
push
gs
pop
jge
call
out
cmpsl
sbb
xchg
imulb
add
mov
push
popa
out
nop
sub
dec
imul
mov
add
hlt
mov
pop
add
pop
and
and
mov
cmp
mov
add
test
xchg
push
hlt
int3
aaa
imul
stos
aas
mov
repnz
xor
cmp
leave
sbb
jbe
pop
pop
scas
shl
mov
push
pushf
cmpsl
enter
cmp
mov
xor
mov
inc
add
fiaddl
cli
jno
testl
or
pop
addb
repnz
jmp
xor
fsub
mov
mov
jl
pop
inc
loop
adc
mov
lret
jno
imul
pop
pop
mov
ljmp
mov
hlt
cmp
mov
add
add
xchg
cmp
push
rep
pop
pop
addr16
push
jg
repnz
jo
ja
add
add
pop
fistl
repnz
cld
dec
pusha
add
and
out
mov
daa
in
add
aas
xor
push
jecxz
jp
mov
jb
movsl
pop
imulb
fimuls
xchg
sahf
popf
repz
push
pop
in
loop
movsb
mov
pop
xchg
pop
xlat
fiaddl
imul
xor
in
and
mov
or
aas
dec
xchg
sub
aaa
xchg
lea
jmp
add
aam
pop
lea
add
sahf
cmp
idiv
lret
insb
push
dec
or
sub
cmp
cmpsb
in
es
in
les
dec
daa
outsb
int
mov
jae
fbstp
mov
add
sti
aas
adc
lahf
jns
pop
packsswb
hlt
je
bound
xor
stc
outsb
sbb
sbb
test
jo
sbb
mov
fdivl
adc
add
jnp
cmp
cmp
in
mov
mov
xchg
adc
das
in
test
push
add
rolb
or
cmpsl
dec
mov
add
test
aad
add
into
push
push
insb
mov
dec
test
sbb
push
outsb
pushf
cmpsl
pop
and
and
pushf
stos
mov
movsb
lcall
push
or
sbb
mov
jecxz
add
shrl
in
dec
sarb
sbb
mov
pop
mov
inc
add
add
add
inc
jmp
leave
push
cmp
inc
add
ds
dec
and
add
gs
ds
pop
dec
pop
dec
data16
pop
mov
and
movb
cwtl
and
add
cli
out
test
xchg
jnp
dec
add
sbb
xor
lahf
adc
pop
lock
mul
push
test
ja
add
inc
cmpsb
jae
out
or
in
add
movsb
adc
add
addb
aaa
jne
sub
hlt
add
cltd
xor
hlt
xor
lcall
pop
div
leave
dec
rolb
mov
dec
sti
bound
mov
nop
out
add
test
in
pop
adc
sbb
in
fcmovu
outsl
push
lcall
ljmp
ljmp
mov
lock
rorl
push
sbb
nop
data16
mov
add
add
std
xchg
into
xchg
ficoms
add
test
cmp
add
mov
jnp
test
push
or
imul
xlat
and
mov
pushf
push
jnp
mov
push
and
and
popa
rcll
in
mov
xor
mov
fsts
mov
movsb
mov
nop
pop
add
mov
mov
add
xor
add
aad
mov
jns
aad
aas
or
adcl
dec
aaa
shrb
into
rcll
mov
jnp
lds
pop
int3
arpl
inc
add
mov
cwtl
loope
in
and
mov
xor
popf
cmpsb
mov
pop
jp
loope
pop
bound
je
icebp
sbb
push
pop
ljmp
pop
adc
pop
lods
roll
leave
dec
ret
lods
adc
addb
pop
push
and
jne
push
add
imul
sbb
mov
inc
add
pop
dec
out
adc
dec
cwtl
ficompl
jbe
push
jnp
or
ljmp
cmpsl
or
dec
out
pop
aam
adc
dec
in
add
push
movsl
repz
cmp
sti
sub
adc
adc
gs
add
cli
adc
arpl
adc
sti
insl
inc
add
add
push
cmp
nop
imul
notl
mov
rcll
sbb
imul
adc
les
jne
hlt
test
cmp
pop
pop
test
xchg
frstor
add
gs
inc
add
cmpsl
shrl
ret
mov
cmp
sbb
jecxz
push
sbb
add
loope
enter
adc
outsb
mov
dec
sbb
outsb
lcall
test
dec
lcall
pop
scas
inc
jl
mov
setbe
cmp
mov
sub
dec
dec
inc
ficomps
scas
flds
push
jge
inc
mov
dec
push
sub
add
loop
and
hlt
int3
push
addb
sub
add
dec
shrl
add
push
adc
inc
add
int3
aad
inc
add
lods
inc
mov
jno
adcl
jg
dec
jnp
sub
pop
adc
int3
cmovae
cmpsl
push
add
testl
sbb
xchg
mov
jbe
subl
xchg
clc
call
push
mov
in
and
jg
into
lods
sbb
enter
jo
fcoms
pop
sar
mov
dec
lock
and
rcll
test
mov
dec
fbld
jns
shrb
sbb
cmp
sbbl
cwtl
adc
stos
pop
lds
in
popf
stc
mov
xchg
mov
inc
mov
push
stos
shl
fs
jge
jp
lods
xlat
pop
stos
push
filds
add
nop
addl
xchg
cld
dec
hlt
add
push
mov
movsl
imul
jl
dec
scas
xor
add
push
fstp
add
inc
dec
or
lock
mov
in
cmp
push
pop
add
xchg
dec
or
addr16
and
pop
xor
cmpsl
cwtl
scas
pop
cwtl
rorl
les
lret
push
mov
addb
pop
call
clc
lahf
mov
stc
ret
jae
leave
ljmp
bound
pop
dec
and
and
push
cltd
xor
add
xchg
movb
mov
push
cmp
pop
jnp
mov
xchg
mov
lods
jnp
add
clc
jae
dec
data16
out
loop
nop
aaa
xchg
mov
push
push
loop
xchg
and
jns
rclb
pop
test
fmuls
or
pop
jo
jmp
pop
outsl
out
mov
add
cmp
xchg
sub
enter
repz
and
aaa
and
sub
and
sbb
icebp
pop
bound
iret
mov
mov
adc
fucomip
xor
mov
sub
cs
pop
mov
into
adc
pop
sub
inc
add
imul
xchg
xor
jo
cmpl
or
xchg
into
xchg
dec
push
jb
insb
mov
rcrl
ds
loope
aaa
cmp
add
sub
add
fwait
or
jg
pop
xchg
das
mov
cltd
push
adc
sub
cltd
cmpsb
repz
lods
and
add
or
stos
dec
or
cmp
scas
pusha
add
jle
lcall
mov
pusha
add
jmp
addr16
xchg
mov
stc
fwait
pusha
add
push
rorl
mov
or
sub
add
sub
mov
push
jnp
or
fcmovu
sbb
scas
jo
cld
mov
ret
adc
adc
data16
shll
es
add
in
xchg
repz
sbb
aaa
xchg
push
mov
push
outsb
sub
in
push
push
cli
mov
shll
mov
scas
pop
add
ret
in
xchg
jg
pop
dec
cmpl
outsl
xchg
or
aaa
mov
in
rcr
pop
ds
stos
loope
lds
call
ds
inc
enter
add
loope
jns
jl
inc
add
push
add
sbb
icebp
pop
ljmp
movsb
jg
outsl
cmpsl
cltd
les
fwait
xchg
nop
inc
add
add
cmp
sub
add
mov
inc
jbe
push
adc
add
push
add
ljmp
xchg
addr16
aas
mov
js
rolb
lods
pop
pop
movsl
lret
lret
add
and
and
jp
test
daa
dec
imul
in
inc
pop
leave
push
or
add
adc
lock
add
imul
movsl
pop
out
aad
dec
fcom
push
and
dec
test
out
mov
sub
cmp
mov
icebp
cltd
jle
mov
out
shlb
das
addb
aad
jns
adc
jl
add
cmp
sbb
push
jb
push
mov
or
xchg
mov
cmp
jg
mov
add
jb
inc
int3
dec
adc
in
dec
adc
cmp
clc
pop
shrl
enter
mov
xchg
mov
cmpsb
into
and
add
out
jne
test
add
mov
jmp
xor
add
and
sub
pusha
add
sbb
sahf
pop
jl
jp
sub
sahf
cmp
xor
dec
mov
lahf
test
push
push
std
push
xchg
stos
add
cmp
add
add
mov
int
mov
jmp
inc
ss
sbb
aad
and
mov
xor
fdivr
dec
jmp
mov
push
sub
sbb
sbb
mov
adc
lds
mov
out
adc
lea
popf
cmp
push
push
rolb
ljmp
ret
xor
xchg
inc
add
pop
jecxz
add
add
pop
pushf
mov
fcoml
mov
xor
xor
aad
lock
add
lret
out
mul
jnp
mov
xor
test
add
fwait
mov
addb
mov
mov
bndldx
pusha
add
test
adc
add
fmulp
mov
mov
mov
push
test
pushf
ljmp
dec
hlt
int
add
lret
jp
lret
insl
out
adc
push
jne
push
add
push
mov
mov
or
pop
cmp
imul
fsubrs
push
sub
add
jge
addr16
mov
or
mov
ret
cmp
mov
inc
add
test
mov
pusha
add
adc
inc
add
or
dec
or
cmp
test
ljmp
insl
mov
pop
imul
ljmp
in
fidivs
pushf
js
jmp
cwtl
add
sbb
add
add
push
lds
jle
cmp
andl
add
push
stos
mov
mov
push
push
sahf
pop
jl
stos
loopne
cmp
and
jnp
add
sbb
dec
cld
pop
addb
lds
js
mov
addb
popf
mov
dec
repz
movb
cmp
jno
add
jp
pop
sbb
jp
fs
add
fs
popf
mov
add
mov
popf
ret
xlat
pop
sub
add
or
inc
add
add
cmp
push
push
pop
inc
add
scas
std
rol
push
cmp
mov
insb
mov
jnp
add
xchg
sbb
sbb
mov
dec
dec
ret
imul
adc
pop
mov
and
out
in
add
sbb
dec
pop
fdivrs
mov
popa
dec
iret
iret
je
sbbl
ds
sub
fdivrl
out
pop
xchg
in
xchg
cmpsb
loope
or
and
addb
xchg
inc
add
out
rclb
rolb
mov
xchg
rolb
mov
cwtl
in
iret
dec
mov
push
cld
fwait
inc
aaa
ret
add
adc
cmp
lods
adc
jo
mov
add
dec
mov
and
movb
rclb
push
aas
lret
mov
idivb
cs
outsl
push
pop
jmp
xor
stos
xchg
fsubrs
ss
lcall
movb
sub
mov
mov
pop
cpuid
stc
test
add
jb
loop
pop
addb
dec
subl
jns
push
sub
lret
test
es
add
stos
or
js
movb
push
pop
cli
adc
rcll
cmpsl
push
inc
dec
mov
sbb
fcmovne
add
sub
ret
std
sbb
daa
inc
add
inc
add
divb
inc
dec
mov
add
sti
or
loopne
jg
adc
xor
int
out
push
loop
and
leave
inc
sub
cmpsb
mov
jge
mov
add
insb
mov
gs
scas
mov
xchg
xor
sub
popf
sbb
int
jbe
jecxz
es
xor
xor
or
pop
lcall
adc
out
ljmp
jecxz
or
imul
nop
and
mov
mov
call
inc
aad
jbe
push
xor
mov
add
add
add
data16
mov
and
push
clc
imul
dec
and
jp
add
or
cmp
inc
dec
add
xchg
jge
in
idivl
or
pop
sub
push
pushf
dec
cld
push
je
test
les
sbb
add
mov
add
jl
fsqrt
call
sub
loope
and
mov
push
divb
mov
shrb
xchg
inc
add
jno
push
or
into
and
mov
push
mov
pop
aad
mov
sbb
repz
repnz
jp
mov
cmp
test
xchg
sub
xorl
call
add
shrl
add
addl
adc
out
push
add
push
adcl
cli
fdivs
xchg
xor
movsl
vpmacswd
ja
cmp
pop
jmp
in
sub
scas
or
xlat
xchg
xchg
pusha
add
daa
sub
repnz
ffreep
add
imull
pop
stc
fldenv
xchg
inc
aas
cmc
fcompl
iret
incl
add
shll
fstp
mov
mov
loope
adc
or
dec
mov
inc
out
cs
lahf
or
rcrb
das
insb
inc
add
xchg
inc
add
arpl
imul
dec
dec
xchg
inc
add
loop
xor
shlb
add
adc
mov
mov
lods
repz
xchg
adc
jle
cmc
bound
xchg
je
daa
rorl
lods
sbb
add
push
and
mov
add
jno
and
rolb
js
popa
mov
pop
std
shlb
dec
push
es
add
xchg
shll
pop
imul
mov
fmul
movsl
adc
xlat
stc
iret
addb
add
add
xchg
add
push
or
int3
addb
xor
sub
std
add
jg
loopne
hlt
movb
push
dec
pop
lret
inc
and
bound
repz
in
push
pop
paddsb
cmp
mov
outsl
aas
jle
lds
xchg
jge
lods
sbb
add
lret
std
out
jg
add
mov
cli
mov
nop
stc
scas
in
add
adc
cwtl
sbb
push
lcall
sub
add
shll
in
add
movsb
dec
push
fdivp
inc
popa
aam
xchg
enter
cmc
inc
add
and
xor
mov
sbb
popa
movsl
sub
add
sbb
call
fucom
mov
aas
xchg
jle
add
pop
mov
add
and
and
test
push
cwtl
daa
push
sub
jp
mov
adc
xor
test
aad
add
movsl
mov
sar
mov
or
adc
outsb
xchg
sti
js
pop
or
jns
or
or
push
hlt
add
mov
loope
or
jmp
push
add
add
cmpl
add
jge
jbe
xor
xor
aad
jae
call
test
js
dec
lock
loopne
or
imul
mov
adc
add
pop
sbb
and
and
into
cmp
add
lcall
lea
iret
mov
push
popf
and
push
pusha
add
imul
inc
add
add
mov
sub
out
pushf
cwtl
xorl
jb
or
sbb
mov
cmp
jo
add
in
inc
add
enter
int3
vucomisd
ret
cli
js
or
ror
gs
aam
xchg
movd
lahf
cli
into
sbb
out
add
add
or
cmc
dec
and
popa
xor
add
in
cmp
lret
sub
push
xchg
in
add
and
sbb
jecxz
insb
in
fsub
pop
pop
clc
scas
insb
mov
mov
shrl
iret
rcrl
cmp
fidivrs
bound
cmc
push
cmp
pusha
add
cmpsl
lock
push
rorb
addb
std
push
sub
mov
call
mov
insb
dec
mov
and
scas
outsb
and
dec
jbe
inc
add
mov
add
sub
xchg
arpl
xlat
lahf
addr16
lods
or
popf
sub
and
mov
jmp
mov
ficoml
add
push
popf
mov
fisubrl
adc
shll
xor
mov
mov
aas
lret
xchg
aam
add
inc
add
ficomps
adc
les
dec
or
mov
cld
cwtl
jae
add
xchg
filds
push
mov
in
push
leave
xlat
out
push
push
hlt
stos
xor
lret
adcl
mov
push
jno
shrb
or
xchg
add
mov
ss
add
push
iret
lods
and
loope
iret
sub
push
aas
les
dec
push
cmp
inc
jmp
movsbl
pop
scas
jb
sub
mov
outsl
mov
add
jne
cmp
and
enter
lods
out
das
mov
xchg
push
mov
cmp
rolb
add
add
test
out
cmp
jle
lods
stc
xchg
arpl
cs
call
enter
dec
mov
lock
mov
jmp
sbb
frstor
psubb
js
jo
js
outsl
xchg
addb
movsb
mov
push
add
inc
add
cld
stos
jno
leave
pop
inc
add
rcr
mov
pop
mov
add
push
fmull
jecxz
sahf
cwtl
std
sarb
sbb
add
push
inc
add
jecxz
int
fsubrs
or
mov
push
insl
xchg
ljmp
push
cltd
and
pushf
push
cmp
inc
test
and
xchg
push
ret
lock
xchg
or
shll
test
add
and
add
add
aas
shlb
xor
fists
out
xor
pop
mov
rorb
imul
int3
das
cli
add
loopne
and
fs
dec
mov
mov
sbb
dec
mov
sbb
popl
add
ret
push
sahf
xchg
fnstsw
aam
push
or
mov
aad
jmp
jae
shrl
jne
inc
mov
adc
xor
outsl
pop
arpl
sbb
mov
jno
jb
adc
fdivrs
xorl
add
stc
jae
outsl
repz
sbb
xor
push
scas
push
fnstsw
popa
cwtl
cmpsl
stos
outsb
nop
aaa
fists
nop
ret
aad
pop
ja
inc
add
xlat
mov
imul
mov
pop
in
inc
test
jnp
bound
insl
aaa
addr16
in
add
sbb
mov
addb
add
push
sub
mov
daa
movsl
mov
sub
out
lahf
aad
sub
sub
sub
in
repnz
pop
mov
outsb
sbb
xchg
add
fsubp
js
mov
xor
xchg
frstor
jbe
push
add
lret
xchg
testb
mov
jl
jne
jnp
add
cltd
outsb
fsubrl
add
lods
xlat
stos
xchg
addr16
mov
cli
insl
cmp
out
out
sub
jb
pop
std
xor
lret
dec
adc
mov
adc
cltd
jg
xor
lret
mov
std
or
lret
mov
push
dec
ljmp
sbb
inc
add
add
xchg
aas
push
push
push
das
mov
mov
rorl
outsb
imull
sbb
lods
pop
mov
inc
xlat
sub
daa
roll
sbb
cltd
mov
xchg
add
pop
fsubr
cmc
aas
mov
add
xchg
sub
add
mov
cwtl
aad
movb
add
dec
push
mov
ja
bound
or
adc
lea
mov
adc
jl
call
cli
fistpll
mov
js
jg
and
out
jmp
mov
icebp
add
xchg
popf
pop
jne
aas
add
fmull
out
fisttps
jle
xchg
mov
cmpsl
sub
push
sub
jne
add
and
push
leave
xchg
lahf
adc
jne
mov
inc
lea
or
inc
sbb
xor
lahf
or
add
cmp
aam
fsubrl
scas
or
mov
insb
mov
sbb
push
push
xchg
push
jb
movsb
mov
int3
mov
add
stos
out
cmp
sub
in
fisttpll
call
mov
mov
es
mov
mov
loopne
and
sub
pushf
jnp
stc
cmp
jmp
fdivrs
and
ret
mov
lods
push
sarl
clc
push
in
sub
inc
add
mov
and
sub
movsb
add
jge
ljmp
arpl
inc
add
shll
inc
add
or
add
ret
xchg
cmpsb
mov
imul
lods
mov
data16
cs
stos
addb
add
dec
shll
cs
std
cmp
hlt
loopne
xchg
sub
sub
inc
add
cmpl
add
add
cld
jns
movsb
jae
out
push
in
or
mov
and
stos
cwtl
sahf
cmp
add
pop
xor
sbb
out
adc
cmp
sbb
mov
push
jbe
iret
push
sti
pusha
add
jp
dec
lret
arpl
add
loop
repnz
dec
icebp
dec
leave
inc
movsl
loop
mov
or
pop
sbb
inc
add
fildl
mov
or
mov
test
or
inc
and
xchg
jge
clc
lds
jb
scas
popf
inc
in
dec
test
cltd
inc
clc
jb
lret
mov
dec
push
pop
je
hlt
sbb
jne
mov
addb
inc
add
mov
sub
pop
add
cmpl
push
xlat
xor
push
pop
clc
pop
aam
mov
pop
data16
or
mov
sbb
sub
outsl
stc
lret
lcall
lret
push
out
mov
dec
fdivl
sbb
add
push
pop
mov
sub
mov
pop
inc
sbbl
vhaddpd
sub
push
pusha
add
add
inc
add
fldcw
add
aas
mov
cltd
cmp
clc
aad
lock
push
aad
xchg
addb
cmc
daa
shrb
je
ret
insb
aad
lcall
icebp
push
aam
fmuls
bound
lds
aam
and
fwait
push
push
lret
filds
xor
mov
cmpsb
in
jp
push
inc
addb
pop
push
ret
sub
mov
rol
and
dec
lahf
scas
cmp
ss
jl
cmc
mov
aad
dec
fs
test
sub
in
dec
out
jl
aas
fxch
cmpsb
fwait
pslld
push
sbb
scas
adc
cwtl
aam
mov
xor
cmp
mov
adc
mov
xor
repz
mov
xchg
jo
dec
scas
mov
fistpl
sti
repnz
mov
les
out
pop
mov
cli
xor
xchg
inc
add
jle
xor
jbe
cltd
jbe
inc
or
push
or
addr16
js
rcr
fstp
push
xchg
sub
or
shl
push
es
jmp
aam
jbe
nop
mov
cmp
lret
repz
jne
and
mov
in
test
jae
pop
cmp
ffreep
add
dec
xchg
orl
jb
pop
std
jecxz
insl
in
aam
cs
mov
or
pop
pop
imull
dec
out
add
add
and
pop
loop
add
addb
mov
movsl
leave
cmp
outsl
adc
and
cmpsb
into
in
push
lret
push
xchg
xlat
adc
pushf
mov
call
aas
cmp
mov
sbb
pop
fcomps
sbb
popl
mov
cld
add
outsl
aam
movb
sub
std
and
sbb
add
add
adc
jp
enter
add
stc
sub
iret
mov
mov
aas
inc
push
pop
mov
sbbl
xchg
mull
add
cmp
rcrl
ficoms
iret
int
iret
out
add
mov
mov
out
mov
dec
sbb
pop
push
push
insl
inc
or
enter
cmp
in
add
dec
dec
jnp
bound
mov
sbb
dec
data16
insb
rcr
push
pop
jnp
cld
dec
xor
push
pop
or
and
je
incl
inc
add
cli
or
jecxz
pop
in
cmp
sahf
pop
ja
sub
sarb
loope
lods
jle
insb
dec
xchg
add
adc
push
out
out
pop
jle
push
mov
xorl
xor
into
dec
jle
in
jne
cmp
pop
call
sahf
jecxz
mov
pop
je
or
fisttpll
test
add
cmpsl
adcl
adc
mov
adc
mov
jmp
push
xchg
dec
test
or
mov
and
std
dec
adc
out
pop
insl
or
add
and
add
cwtl
jne
xchg
mov
addr16
mov
cmp
sub
aaa
bound
push
pop
jmp
fadds
mov
jne
ja
add
push
gs
cmp
imul
call
add
mov
cmpsl
pusha
add
jle
or
mov
dec
popa
add
add
push
addr16
movb
xlat
cmp
xchg
out
sbb
mov
jbe
sub
inc
jae
lea
xlat
fldt
add
push
pop
stc
pop
movsl
jl
outsl
out
sti
in
push
mov
bound
and
mov
insb
ds
mov
fldcw
scas
test
pushf
in
lret
dec
xchg
add
out
test
aas
xchg
dec
mov
insl
xchg
adc
push
in
xor
xor
add
jne
push
cmpsl
cmp
add
fcompl
aam
fcos
pop
add
add
lea
jp
dec
push
add
cmp
cltd
xchg
cli
imull
xchg
adc
dec
cmp
adc
lahf
dec
sub
jmp
jne
jb
outsb
ret
cmpsb
push
add
outsb
push
add
add
mov
add
mov
jge
iret
cli
pop
xchg
arpl
mov
loope
stos
pusha
add
xchg
lcall
sarb
push
pop
sub
fdivrl
das
sub
ret
cmp
mov
mov
dec
ret
mov
pushf
cmp
cmp
cmp
stos
jnp
mov
in
mov
mov
xchg
cs
popa
or
pop
pop
js
add
sub
testb
stos
dec
aaa
push
pop
aaa
adc
inc
inc
test
add
add
cmp
loop
adc
mov
lds
mov
inc
lods
push
loop
or
in
sti
aaa
mov
insl
jb
mov
sar
xorl
add
jo
scas
pushf
enter
push
ja
xor
mov
dec
scas
jb
mov
mov
add
sub
stos
pop
mov
and
leave
orl
addb
std
lret
jg
imul
stos
or
stc
bound
hlt
jno
mov
je
sub
int
and
insl
out
aam
cmpsb
lods
cmp
mov
mov
imulb
xor
icebp
pop
fisubs
lock
repnz
jmp
add
lock
add
outsl
cltd
fcmovnbe
movsl
jle
fistps
sbb
mov
cmp
inc
add
jns
dec
outsb
das
mov
arpl
clc
lcall
inc
add
insb
jmp
adc
jne
cmc
dec
add
lahf
aad
xchg
call
add
lds
add
jl
add
dec
daa
adc
push
pop
pop
and
out
inc
fmul
jb
cmp
std
dec
sti
out
imul
add
add
ret
adc
add
iret
bound
sub
mov
inc
cs
mov
jb
mov
mov
mov
sbb
add
sti
lcall
mov
sbb
das
dec
adc
mov
movsb
inc
push
adc
fwait
pop
orl
add
inc
add
pop
pop
pop
imul
push
mov
sub
push
rolb
add
stos
inc
rcrb
ljmp
xchg
pop
inc
add
jbe
inc
add
lea
pusha
add
add
add
cmp
movb
add
mov
push
aam
add
dec
scas
jg
leave
jecxz
xor
add
cmp
lds
xchg
shlb
fcoml
addb
loop
sub
mov
lret
fcomp
scas
pop
mov
test
or
int3
xor
add
dec
inc
mov
pop
inc
jno
int3
adcl
enter
and
adc
sti
fisubrl
ficoms
xchg
ret
sub
add
xchg
int
ds
xlat
clc
outsb
pop
pop
push
ret
sub
mov
int3
lea
sub
repz
nop
cmp
add
stos
mov
push
int3
test
lods
jg
dec
xchg
sbb
xchg
sbb
lcall
mov
mov
dec
cmpsl
dec
addr16
aas
sahf
hlt
mov
outsl
mov
popa
daa
enter
adc
pop
outsb
push
mov
add
pop
rorl
dec
and
jnp
movb
dec
and
ret
sti
dec
xchg
movsb
mov
insl
inc
add
mov
sub
mov
jbe
fidivs
ror
sub
push
lret
add
cmc
mov
jns
jg
int3
nop
mov
dec
pop
push
bnd
pop
shll
adc
lret
add
mov
sbb
sub
out
leave
clc
push
mov
or
xchg
mov
fs
bound
mov
xchg
leave
aas
add
icebp
popf
pop
adc
add
sub
inc
out
rcrl
mov
jbe
add
inc
push
test
mov
testl
mov
mov
aad
add
loope
cmpsb
call
pop
xor
add
adc
fstpt
sbb
notl
incl
scas
jg
cmp
add
hlt
or
ja
inc
adc
roll
push
stc
adc
repz
xchg
lcall
addr16
push
mov
and
push
add
out
add
imul
cltd
cmp
jl
out
mov
add
addr16
rorl
std
push
push
repnz
movb
mov
push
ss
repz
mov
mov
leave
pushf
sub
mov
leave
push
push
sub
jl
imul
inc
stc
mov
lret
push
pop
mov
add
inc
sbb
fcomp
in
enter
push
add
mov
xor
mov
out
add
pop
mov
clc
test
xor
insl
dec
lahf
outsb
test
rorb
or
mov
dec
push
roll
jne
xor
ljmp
mov
add
push
pop
cmp
add
scas
mov
ret
push
adc
mov
fs
add
inc
cmpsl
jb
sbb
xchg
and
in
cld
add
mov
add
jecxz
pop
pop
dec
test
icebp
mov
add
sbb
push
stc
rcrb
and
cmc
jmp
pop
pop
faddp
mov
mov
jle
shlb
jbe
sub
aaa
rcrl
sub
pop
mov
dec
iret
lock
add
add
fidivrl
push
or
arpl
mov
dec
mov
sub
mov
jg
ret
repnz
inc
add
enter
jb
add
add
add
sti
mov
xchg
movsb
shll
cli
mov
arpl
pop
clc
testb
ficompl
add
add
jns
movb
popf
mov
imulb
xchg
cmp
adc
add
out
mov
js
push
add
ss
push
add
mov
push
popa
call
lret
addb
pop
cmp
loopne
pop
dec
scas
leave
dec
lcall
fisttps
adc
adc
iret
stos
pop
and
cld
jo
addr16
es
imul
loop
add
add
ds
gs
or
cs
fs
mov
lea
leave
lret
addb
mov
mov
stos
icebp
inc
and
jnp
je
jl
loopne
dec
cmpsl
or
pop
push
pop
sarb
mov
add
mov
lcall
sub
lock
or
leave
inc
add
inc
add
sbb
cmpsb
pop
push
dec
stos
cmp
pop
jg
add
push
mov
add
xor
mov
add
add
pop
cmc
push
test
inc
add
sahf
mov
mov
dec
js
movsl
inc
add
out
movsb
mov
mov
and
pusha
add
scas
fiaddl
mov
jg
or
jb
fbstp
add
push
adc
add
mov
lods
out
cmc
mov
lods
repnz
push
mov
push
xor
inc
add
test
and
test
lods
cld
inc
lret
repnz
movsb
mov
jle
cld
jmp
popa
mov
std
xlat
xchg
ljmp
call
jle
mov
pop
xor
jnp
dec
xchg
js
push
pop
cmc
fnstcw
aaa
movsb
sub
add
dec
jg
call
test
jle
sahf
pushf
insl
ljmp
out
jmp
dec
mov
adc
loopne
js
aad
sub
stos
enter
fimuls
xorl
inc
loopne
add
repnz
movsl
inc
mov
jo
and
push
dec
jmp
push
ljmp
loope
addb
jbe
cmp
ljmp
leave
fstp
push
add
test
das
or
gs
call
jns
lcall
add
inc
add
outsl
cwtl
and
lcall
or
inc
sub
fdivl
mov
mov
mov
add
stos
loop
sub
mov
push
addb
inc
not
icebp
ljmpw
sub
inc
add
mov
push
or
dec
cmp
add
sti
shl
lret
stc
pop
in
jae
sbb
push
in
lret
mov
je
add
jns
mov
fnsave
add
cmp
or
add
mov
push
leave
loop
ja
mov
inc
xchg
mov
sub
jle
pop
mov
loopne
loop
add
xchg
fst
adc
enter
mov
sahf
pop
imul
push
sti
stos
ret
xor
sub
jns
sub
mov
pop
pop
pop
pop
dec
or
mov
mov
add
add
lret
pop
push
sbb
dec
nop
ret
aam
dec
subl
mov
fcmovnu
lret
xor
sub
add
mov
sti
mov
idivl
enter
add
and
mov
bound
rclb
jl
inc
add
addb
jge
je
and
call
std
add
lods
mov
in
cmp
add
cmc
ss
in
mov
jne
fcmove
cmp
repz
dec
sub
add
dec
mov
iret
and
mov
pop
push
pusha
add
jb
push
or
add
aaa
lock
sbb
push
std
xchg
inc
xchg
and
cmp
add
and
or
add
mov
pop
mov
add
popf
mov
divb
scas
sub
jno
push
sti
add
nop
std
int
mov
mov
add
xor
popa
sbb
add
sub
pop
and
xchg
mov
movb
sbb
add
cmp
add
mov
xor
add
mulb
addr16
push
push
std
mov
cld
jno
subl
stos
xor
add
pusha
add
iret
push
adc
adc
sbb
and
add
xchg
push
sub
mov
mov
jmp
cli
fstl
rorl
iret
stc
pop
cmp
sbb
or
pop
mov
xchg
cmp
cltd
mov
iret
mov
and
jge
push
inc
add
add
push
push
pop
jecxz
fldl
add
xor
cmp
sub
pusha
add
fstpl
popf
in
test
jb
mov
cmpsl
mov
mov
mov
add
ret
mov
mov
dec
sub
jg
imul
dec
aaa
pop
lret
jne
and
loop
das
out
inc
and
clc
jo
xor
xchg
aad
test
dec
mov
xor
cmpsb
cmp
in
and
xchg
ret
mov
jno
ror
outsb
inc
push
add
subl
arpl
jae
dec
push
pop
xchg
xchg
in
les
push
cmp
sbb
les
popf
add
inc
inc
das
fisubs
pop
lcall
aam
dec
stos
shl
sub
andps
leave
fsubrp
insl
fidivrs
dec
cmpsl
cli
imul
cmp
add
mov
jge
call
sti
sbb
add
inc
shl
fdivrs
cmp
jge
xchg
enter
add
je
pop
int3
fnstsw
ja
fbld
xor
or
aad
sbb
push
sub
mov
scas
nop
xchg
cmp
or
in
lahf
nop
stc
push
add
push
add
jae
mov
int3
xchg
mov
add
lahf
jno
cmp
cli
inc
xchg
xchg
mov
mov
mov
adc
pop
push
nop
and
add
mov
repz
cmp
mov
pop
gs
sti
jp
and
fwait
mov
add
cmp
aas
arpl
sahf
lahf
repnz
out
fimuls
ds
mov
aam
add
cmpsl
bound
xchg
sarb
add
pop
cmp
fs
sub
sbb
test
xchg
sub
mov
test
lock
cli
scas
movb
sbb
loope
sti
push
add
ss
add
adc
sbb
mov
xchg
pop
fs
das
push
jecxz
addb
stc
or
daa
push
mov
nop
inc
add
lcall
insb
fiadds
sub
cmpsl
cmp
lds
rcrb
out
xor
outsb
mov
pop
sub
mov
mov
dec
jmp
ds
outsl
add
cmp
rorl
out
jae
jecxz
add
push
repnz
ds
jge,pn
mov
add
and
mov
ja
xchg
push
and
push
fwait
scas
sbb
inc
add
mov
movsl
clc
pop
add
in
and
mov
inc
mov
lock
xor
cltd
loopne
xor
call
loopne
fcoml
addb
mov
je
or
rolb
jge
and
add
dec
sub
aaa
sub
repnz
jbe
add
inc
add
xchg
jle
in
xchg
in
in
xchg
adc
dec
rolb
fistps
inc
lds
cld
popa
and
inc
repnz
mov
add
push
fsubr
popa
mov
pusha
add
lock
jg
inc
add
fstpl
lods
sbb
fldl
mov
inc
test
orl
add
data16
jno
movd
mov
inc
popl
jge
mov
inc
add
add
negb
dec
sub
push
pop
dec
push
repnz
pop
jmp
test
mov
std
adc
mov
add
pop
cmp
ljmp
jno
stos
mov
cltd
push
xchg
inc
add
out
and
add
dec
sub
iret
aas
ljmp
pop
mov
add
inc
add
loope
push
or
loopne
stos
loope
add
dec
lods
add
insb
shll
adc
cmp
add
or
icebp
inc
pusha
add
sub
mov
in
and
les
cs
mov
push
inc
add
mov
or
add
xchg
or
mov
add
adc
insb
int
lea
jl
outsb
jge
pop
xor
std
and
test
outsb
out
pop
mov
cmp
in
aas
popf
add
jno
loope
push
scas
mov
xor
or
add
iret
loopne
jno
xchg
shrb
cmpsb
stc
imul
mov
cwtl
xchg
mov
jb
aad
add
push
nop
pop
rcrb
mov
jns
jg
sar
add
scas
sar
fdivrs
pop
adc
mov
popa
mov
mov
xchg
jbe
sbb
inc
mov
sbb
jnp
lods
rcll
ja
scas
mov
push
hlt
lock
movb
dec
hlt
push
add
push
and
les
pop
jb
punpckhdq
arpl
jno
insb
push
leave
jb
jmp
jno
cwtl
hlt
push
je
xor
adc
jns
xchg
outsb
cmp
and
pop
out
or
push
into
hlt
sbb
fs
add
add
out
sub
ljmp
and
cmp
clc
mov
xorl
push
adc
cltd
ret
sbb
pop
gs
pop
mov
lcall
enter
add
mov
leave
adc
into
aaa
test
aas
jae
call
ret
inc
add
movsb
clc
adc
addb
mov
or
js
push
aas
popa
mov
mov
add
mov
aas
outsl
fnstcw
mov
or
mov
xor
cmp
aas
out
icebp
cmp
rolb
cltd
jmp
shll
lcall
add
mov
inc
jae
dec
inc
xor
push
dec
xchg
jle
cmp
mov
push
not
andl
sbb
mov
rol
imul
mov
sbb
mov
stos
idivl
add
jo
push
fs
push
add
popa
test
mov
inc
rcrl
inc
add
movsb
lods
popa
ret
add
ret
add
data16
mov
fisttpll
je,pt
jp
jno
cltd
xchg
add
or
push
rcrb
enter
push
inc
sti
sbb
xchg
ret
cmp
shrl
cmpsl
fsts
add
push
and
jbe
dec
addb
out
xchg
jle
add
xlat
xor
adc
test
frstor
pop
add
movb
dec
subl
popf
addb
pushf
xlat
push
add
stc
sbb
add
jle
movsl
fmull
add
rcl
in
cmp
dec
mov
out
xchg
leave
pop
ds
aaa
inc
add
imul
subl
flds
add
ror
jmp
mov
mov
inc
add
dec
jg
mov
sbb
dec
pushf
idivl
xchg
loop
ds
or
add
std
jns
mov
ds
mov
shlb
cmp
pop
insb
sub
cmpsl
es
movb
sub
dec
jae
cmp
cmp
shll
add
cli
leave
imul
add
cmpsb
dec
pop
pop
std
jb
add
fstpt
push
stc
test
jp
xchg
cwtl
or
das
dec
sub
sub
ljmp
push
lods
dec
mov
stc
mov
fistpll
incb
push
adc
subl
dec
out
adc
sub
adc
test
xor
imul
js
addb
pop
cli
sub
lock
je
mov
inc
add
daa
dec
rolb
pop
cmpsl
in
push
stos
test
lods
leave
and
cli
addb
and
and
push
jl
adc
push
sbb
mov
dec
cs
out
lret
rorl
stos
sbb
mov
sahf
iret
sub
aas
addl
mov
lds
add
ss
cmc
adc
add
inc
add
push
jle
icebp
mov
std
or
addb
sbb
clc
outsb
inc
add
pop
int3
data16
ds
pop
nop
popa
jg
movsl
arpl
cmc
shll
mov
add
mov
je
ds
out
mov
xor
sbb
std
xor
es
sbb
add
fstl
in
call
arpl
mov
in
cs
out
cmp
out
popf
jp
dec
inc
add
mov
or
mov
sub
movl
rclb
arpl
cwtl
cltd
and
inc
add
ret
push
lret
cwtl
lods
inc
add
loopne
ret
loope
add
outsl
inc
mov
imul
pushf
jb
push
add
add
dec
sub
lcall
fmulp
inc
sub
pop
fnop
push
fs
add
sub
inc
and
sub
aas
mov
xlat
xlat
dec
stos
lods
jmp
les
xor
into
aam
and
push
repnz
dec
mov
mov
mov
cmp
sub
ss
lds
adc
arpl
add
lea
mov
add
jns
jbe
and
and
jp
jl
sbb
xchg
xor
sbb
mov
push
outsb
popf
mov
rolb
int
fsubrl
iret
pop
stos
outsb
aad
or
adc
in
push
fwait
jo
popa
jns
push
iret
in
pushf
repnz
movswl
jne
sbb
pop
lods
jno
mov
add
push
dec
jnp
comiss
iret
addr16
or
mov
aad
rolb
insb
fdivrp
cmp
add
push
and
pusha
add
addb
add
or
mov
add
imul
add
push
lahf
subl
push
cld
sub
jae
das
xlat
je
faddl
inc
add
mov
les
ffree
or
mov
out
mov
lret
jb
jno
lcall
mov
adc
lock
and
sbb
xchg
imul
mov
xchg
lcall
leave
cmp
fwait
sub
add
stos
sbb
or
addb
jo
mov
xchg
jl
jbe
mov
mov
fsubl
in
icebp
pop
mov
dec
mull
inc
add
mov
sub
in
cs
mov
out
out
pop
mov
aad
jge
and
add
xchg
add
sub
push
int
add
outsl
jp
fsubrs
jbe
imul
out
imul
push
insl
inc
add
sub
add
mov
inc
add
add
call
lods
imul
mov
arpl
movsb
lods
popl
cwtl
mov
clc
out
xchg
test
mov
and
inc
scas
mov
add
pusha
add
mov
stc
sbb
and
add
mov
iret
cli
pop
dec
pop
xchg
lcall
and
stc
add
js
cmp
sub
hlt
sub
lods
adc
and
add
pop
sub
bound
push
rolb
js
pop
fbld
inc
movb
mov
aam
inc
mov
lea
push
sahf
push
sarl
add
cld
adc
fistpll
add
fmul
out
mov
lea
cli
or
jne
cwtl
or
mov
push
imul
mov
cmpsb
jns
outsl
imul
scas
je
cld
fistps
sti
jmp
xor
cmp
sbb
ljmp
clc
insl
shr
and
cmp
int3
loope
iret
or
xchg
scas
dec
push
sbb
sahf
sbb
cli
pop
lock
mov
dec
inc
add
test
aaa
sahf
nop
mov
dec
fisubs
add
push
mov
push
pushf
jg
mov
out
and
push
mov
sbb
movaps
stos
ror
cli
or
fwait
scas
jo
frstor
cmp
stos
neg
std
and
bound
inc
xor
cmp
lods
dec
inc
add
frstor
inc
std
inc
inc
xor
lods
std
test
cmp
mov
mov
int3
jno
mov
add
ret
mov
aad
dec
jp
in
sub
test
rolb
nop
pop
adc
add
insl
mov
add
mov
les
je
mov
mov
xchg
movsb
sub
xchg
gs
out
push
xchg
pop
sbb
jae
add
sub
cmpsl
or
mov
inc
cld
push
cmc
sub
pop
inc
fs
xor
pop
add
fcmovnbe
mov
mov
mov
xchg
push
in
push
mov
dec
jecxz
add
mov
rolb
mov
addb
jle
addr16
sub
add
push
mov
or
add
test
add
aas
shrb
cltd
cld
sbb
pop
sub
cmpsb
cmpsb
out
dec
das
xor
dec
lea
fisubs
xlat
mov
lret
inc
add
cmp
bound
jl
les
into
fistpll
sbb
cmp
rorl
outsb
add
jno
add
lret
add
pop
cmpsl
lcall
divl
cmp
add
pop
shll
add
fldcw
dec
or
jo
aas
lahf
sub
adc
fldt
mov
cmp
push
add
adc
jle
in
js
clc
xchg
movl
push
add
rorb
and
mov
add
mov
add
js
mov
lods
shrb
cmp
out
adc
outsl
jmp
divl
mov
add
add
add
and
mov
addb
fs
add
insb
add
je
pusha
add
outsl
sbb
or
or
xor
add
inc
add
ret
subl
lret
cmc
ljmp
arpl
add
jbe
adc
xchg
mov
dec
sub
js
dec
xor
add
les
xchg
out
or
inc
jno
jecxz
repnz
sbb
lock
sbb
pop
xor
or
mov
fidivrl
pop
mov
out
ja
gs
in
std
ficoml
add
add
lods
flds
sub
bound
cmc
lret
push
adc
mov
xchg
push
add
hlt
jbe
cltd
addb
inc
rcrb
movsl
imul
push
subl
pop
dec
push
or
and
stos
fidivrs
movsl
leave
mov
fsts
lret
das
scas
fists
jle
push
jb
pop
mov
mov
xor
lock
ja
xor
push
pushf
sbb
xchg
out
stc
mov
ret
mov
push
cld
mov
les
xor
add
xor
hlt
cmp
rolb
jns
mov
icebp
jnp
dec
push
outsb
addr16
jge
out
stos
cmp
xchg
ret
leave
jl
mov
mov
xor
adc
xchg
je
lock
les
pop
adc
add
xchg
je
add
add
adc
sar
and
fcoml
xchg
pop
xchg
and
mov
xchg
and
mov
jg
repz
jecxz
add
cs
and
lock
jecxz
fbstp
push
andl
cs
out
pop
dec
bound
stc
roll
loope
fwait
dec
outsl
insb
in
lds
inc
mov
and
pop
lret
xor
add
dec
xor
aad
ds
dec
xchg
lret
sub
add
sbb
js
and
add
sti
fbstp
out
sub
adc
shll
add
repnz
je
ret
test
pop
adc
mov
lods
arpl
xor
popf
jecxz
fnstcw
data16
insl
call
add
sbb
cmp
pop
mov
lods
mov
cld
pusha
add
xchg
sbb
in
es
imul
adc
out
ja
int
iret
lock
addb
dec
pop
cli
mov
cmc
sti
std
xchg
jne
gs
test
mov
push
cltd
cmp
testl
icebp
mov
adc
repnz
out
int3
or
push
pop
and
lahf
mov
or
mov
aam
xchg
cltd
or
add
inc
add
cwtl
jle
out
aaa
aam
dec
popf
mulb
mov
rolb
inc
xchg
imul
inc
add
pop
jb
mov
sub
fnstsw
out
or
cmp
pop
jnp
mov
mov
xchg
mov
pop
or
add
xor
add
and
add
jp
loopne
add
push
add
jg
mov
insl
cli
or
fisubl
jmp
add
adc
bound
jg
xlat
inc
jb
sti
and
test
and
mov
xchg
pop
sti
jp
push
pop
aaa
xor
dec
dec
cmp
aad
xor
add
add
sbb
jl
add
daa
xchg
mov
jle
jne
xor
int3
cltd
popf
icebp
adc
push
in
insb
sub
jae
mov
or
xchg
das
sub
mov
cli
pop
xor
imull
jae
or
inc
add
xchg
dec
push
sbb
add
pop
xchg
and
adc
cmp
js
testl
mov
adc
push
lea
scas
push
or
and
add
gs
push
fmull
adc
cmp
adc
adc
pushf
loopne
fwait
mov
addb
mov
inc
add
inc
aaa
outsb
jb
fstp
out
cmp
mov
add
dec
sbb
dec
xchg
jae
addl
outsl
cmp
or
cltd
dec
inc
add
fcoml
jp
int
dec
std
out
add
fdivl
jle
cmc
repz
add
fildll
repnz
mov
popa
lcall
push
leave
adc
out
cmpl
cmpsl
jno
add
shrl
cmp
lods
jbe
inc
add
aaa
mov
xchg
push
fildll
mov
add
xchg
sbb
ror
and
lock
mov
imul
movsb
push
jo
int3
sti
lret
cmp
aad
mov
xor
mov
mov
ja
sbb
push
add
push
out
inc
inc
add
movb
les
scas
insl
jbe
push
int3
sbb
das
or
cmp
test
cmpsb
popf
pop
lea
into
mov
mov
sub
fucomip
int
dec
insl
out
ljmp
movsb
xor
ja
xor
decl
sbb
add
std
ret
lcall
add
jle
stc
int
add
clc
into
pop
ljmp
cmc
pop
cmp
cmp
jl
adc
lret
mov
out
jbe
jne
or
into
test
jmp
frstor
sbb
movb
addb
xchg
addr16
sub
sbb
add
add
cmpsb
in
add
mov
inc
add
or
mov
pop
or
add
dec
nop
cwtl
jne
or
add
inc
add
test
pushf
jl
and
ret
add
stc
aam
add
push
testb
mov
xchg
std
mov
dec
stos
cmpsb
lds
in
ljmp
fs
cmovb
or
add
loopne
and
sbb
jl
or
or
add
pop
jl
pop
aas
push
add
ja
mov
inc
test
xchg
mov
cmpsb
mov
mov
addr16
xor
add
add
rcll
sub
push
cld
sbb
std
jecxz
and
pop
pop
loop
movb
mov
cli
mov
lods
mov
jae
jp
add
rcll
jae
and
xchg
movb
jg
sub
mov
push
xchg
mov
out
dec
int
jge
xor
jnp
mov
add
loop
cwtl
lock
push
add
jb
dec
mov
cmp
mov
pop
sbb
jo
lods
popf
cmp
aam
jmp
add
and
lods
jge
pusha
add
scas
loop
fucomip
adc
add
ret
or
xor
add
add
add
jmp
movb
pop
add
xchg
sub
inc
add
dec
lock
xor
out
pop
out
leave
cmp
jmp
call
test
lea
xchg
repnz
add
xlat
mov
add
pop
cmp
fmuls
nop
pop
pop
push
mov
pop
aad
sbb
cld
outsb
dec
xor
mov
add
popf
pop
inc
add
dec
addb
pop
pop
jb
imul
jae
add
aaa
arpl
adc
add
cs
pop
add
ret
inc
fcompl
arpl
int
sbb
ret
add
sti
adc
jp
mov
test
fldenv
adc
shr
cpuid
rolb
in
insl
aas
xlat
dec
subl
sbb
pop
aaa
mov
xchg
insl
mov
adc
xchg
lret
mov
inc
sbb
call
arpl
jle
sarb
and
add
add
inc
icebp
jb
pop
mov
mov
frstor
lahf
mov
xchg
ret
daa
stos
jge
pusha
add
and
add
sldt
