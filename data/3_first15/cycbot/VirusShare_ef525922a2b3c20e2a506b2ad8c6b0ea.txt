arpl
testb
in
sbb
add
loop
mov
cwtl
jl
je
addb
stos
adc
mov
add
repz
cmpsl
scas
mov
mov
mov
aaa
add
fstl
mov
add
push
inc
jle
pop
into
mov
sbb
mov
add
and
in
push
add
lock
adc
fsubs
hlt
inc
sub
adc
lods
adc
mov
lret
cmp
in
fcompl
inc
add
test
lock
pop
imul
addr16
and
dec
or
mov
les
push
add
sti
adc
aas
add
lcall
mov
mov
mov
lock
sti
mov
xchg
add
cmp
in
or
ret
sub
cmp
mov
mov
dec
push
jp
xor
sub
ds
aad
mov
add
mov
test
sar
jno
jb
mov
adc
test
in
add
mov
popf
jbe
lea
gs
sub
xchg
dec
clc
mov
add
movsb
repz
pop
push
out
bound
mov
dec
pusha
add
jb
mov
mov
add
add
xchg
sbb
ret
cmp
add
aaa
xlat
cmpsl
adc
mov
in
and
xchg
insb
insb
jmp
mov
lea
das
jmp
repnz
in
icebp
fdivl
add
mov
add
mov
add
add
add
add
xlat
jge
mov
fidivrl
mulb
aaa
add
mov
mov
jae
add
sbb
add
add
std
mov
repz
jl
push
add
cltd
cmp
movsl
jns
cli
pop
mov
mov
addr16
mov
addl
inc
sub
jnp
mov
mov
shr
or
add
notb
jb
mov
nop
add
cmpsb
mov
xor
lock
sub
mov
push
adc
mov
test
xchg
add
imul
pop
mov
add
int3
das
jmp
add
mov
aas
jmp
cltd
xor
lret
inc
add
ss
jmp
or
mov
in
dec
dec
mov
mov
arpl
cmp
sub
mov
xor
mov
lods
scas
inc
dec
xlat
daa
push
mov
pop
push
loope
mov
sub
push
push
push
push
push
push
call
lea
es
mov
movzbl
cmp
ss
push
push
push
call
mov
cmp
je
es
xchg
add
xchg
cs
sub
mov
push
es
call
test
jne
jmp
nop
leave
push
es
mov
test
je
bnd
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
nop
lea
lea
sub
add
mov
sub
sub
push
pop
push
je
jmp
add
add
aaa
fidivs
add
add
sub
pop
or
pop
or
mov
mov
fisubrs
inc
push
mov
pop
and
mov
lods
lcall
jno
add
add
cmp
jg
add
jno
adc
mov
add
out
pop
pop
dec
mov
sub
dec
dec
mov
add
push
push
add
pop
add
mov
pop
sbb
ds
lret
xor
inc
jae
or
mov
mov
add
mov
mov
pop
rcrl
mov
add
mov
or
jno
ret
add
xor
mov
add
in
jecxz
pop
inc
leave
cmp
xor
sub
lods
push
xchg
int
sub
fsubs
add
and
cmp
lds
pop
insb
jmp
nop
add
mov
fsubl
shll
add
mov
add
mov
mov
fimull
push
mov
les
ret
lds
sub
add
loope
cmp
rolb
or
push
dec
xor
mov
add
shll
push
ljmp
mov
lea
add
mov
ljmp
cld
icebp
sti
in
adc
mov
push
pushf
mov
movsb
mov
add
fimull
xchg
pop
mov
mov
and
mov
addb
adc
les
in
lret
xchg
xor
mov
adc
mov
outsb
push
fmul
movl
sub
xor
int
repz
jmp
push
add
pop
ds
ds
xchg
loopne
mov
repz
mov
lds
dec
and
add
stos
and
pop
cs
iret
xchg
es
hlt
xor
add
ja
jne
add
popa
imul
add
cmpsl
out
enter
add
inc
add
ret
pop
and
rolb
mov
push
das
inc
jle
cmp
fcomps
add
jge
lcall
gs
int3
pushl
popa
jb
mov
add
mov
adc
pop
dec
mov
or
mov
jg
inc
imul
out
and
push
mov
jg
push
addb
xor
mov
push
jns
sbb
add
mov
sahf
inc
outsl
shll
sub
faddl
gs
les
push
pop
and
add
leave
pop
and
addb
ret
das
pop
lods
jg
lret
in
pop
pop
inc
es
and
pop
sbb
int
js
sti
stos
ret
add
mov
ficoml
push
jbe
push
cwtl
mov
push
cwtl
push
cmc
stos
xchg
jb
mov
dec
mov
aas
ja
push
test
push
push
jecxz
nop
add
shll
push
or
push
mov
mov
add
mov
jb
mov
add
mov
push
ret
lods
aam
cmp
inc
add
movsl
mov
rolb
mov
jno
stc
sbb
inc
add
out
or
sbb
fidivrs
add
xchg
xor
mov
add
mov
cmpsb
pushf
cs
or
jbe
cli
lahf
jecxz
push
pop
sbb
push
sbb
leave
sbb
add
int
jne
in
loopne
mov
push
jb
mov
adc
mov
mov
xlat
ret
xor
mov
pop
lcall
mov
xchg
dec
ret
popf
adc
mov
mov
out
cmp
push
les
push
add
push
ja
add
add
add
mov
push
les
add
rolb
mov
inc
je
enter
data16
mov
cmpsb
mov
jle
inc
addb
dec
xor
mov
bound
mov
sbb
add
mov
jecxz
mov
mov
mov
sub
mov
mov
xchg
popfw
in
and
add
cs
es
jae
movsb
jge
je
leave
cmp
sbbl
ret
test
and
cmpsl
add
fwait
add
imul
sbb
xor
mov
test
pop
xchg
jo
mov
jae
ret
cli
jecxz
fbstp
add
dec
pop
inc
mov
xor
fldcw
sbb
add
cwtl
push
add
scas
dec
xchg
sbb
cli
xchg
jno
add
cld
sbb
mov
int
jmp
negb
add
test
push
ja
cwtl
int
cmp
pushf
mov
sti
test
push
cmc
mov
jne
push
push
xchg
je
mov
mov
int
lahf
and
outsb
daa
in
jmp
jp
add
adc
leave
mov
scas
stos
sub
push
add
popf
stos
jecxz
fs
sbb
xchg
mov
mov
jg,pn
xlat
mov
add
jp
mov
mov
mov
je
iret
or
pop
lods
pop
push
adc
repz
mov
sub
pop
pusha
add
or
addb
jecxz
fstpl
add
pop
stos
out
add
sub
iret
divb
adc
mov
pop
mov
pop
scas
mulb
fs
or
add
rcrl
mov
cmpl
add
xor
test
and
push
push
add
lds
add
mov
sbb
sbb
mov
fbld
addr16
mov
dec
leave
mov
rolb
mov
sub
stos
adc
adc
mov
push
lods
icebp
addb
ret
fsubrs
cmp
cs
ffreep
bound
mov
add
aaa
xor
mov
add
mov
loopne
mov
mov
add
mov
cwtl
xchg
mov
mov
pop
pop
xchg
add
add
add
or
jmp
shll
imul
mov
sti
and
mov
mov
mov
mov
jl
inc
add
pop
pop
mov
and
icebp
inc
xor
or
sbb
add
repz
add
push
and
mov
bound
mov
pop
test
les
test
cmc
jae
or
or
add
mov
add
mov
stos
mulb
mov
mov
add
jmp
cmp
add
add
sub
add
xor
mov
ret
mov
fwait
aam
movlps
mov
fistl
mov
imul
add
enter
in
shll
add
inc
inc
clc
jb
mov
mov
add
addr16
cmp
xor
mov
add
and
or
outsl
push
sbb
add
mov
cmp
addb
pop
push
jle
loope
mov
loopne
mov
jle
test
pop
ficoms
mov
mov
xor
push
add
mul
mov
int3
fstpl
fsub
add
inc
addb
pop
push
mov
mov
fistps
rolb
mov
fwait
pop
jae
test
push
xchg
orl
mov
mov
jl
jge
adc
push
loopne
mov
pop
inc
xchg
dec
fsubrl
xchg
ss
bound
mov
lcall
jb
mov
add
mov
in
sbb
scas
jl
push
push
stos
sbb
sbb
adc
loop
mov
jae
xchg
jg
pop
insb
mov
mov
clc
das
sub
push
add
pop
leave
push
or
push
fidivrs
jge
add
and
mov
jge
pusha
add
out
icebp
xchg
add
js
mov
mov
mov
test
stos
mov
sub
subl
iret
or
add
mov
mov
push
adc
add
pushf
dec
jmp
jbe
faddl
mov
fimull
push
scas
mov
dec
cmp
inc
mov
scas
mov
mov
testb
bound
mov
pushf
xor
mov
jle
mov
mov
repz
mov
add
mov
xchg
mov
rolb
mov
add
add
bound
mov
sub
jne
push
add
loopne
mov
test
xor
and
mov
lock
add
dec
xchg
jno
lock
mov
add
mov
ret
insb
nop
add
mov
call
mov
pop
gs
cltd
push
fwait
lea
imul
xchg
call
test
fldcw
sbb
cld
sti
repz
and
xchg
pop
push
push
jns
roll
add
fnstenv
mov
pop
mov
mov
sub
push
mov
mov
add
mov
mov
jns
ds
mov
sti
not
xchg
dec
jle
add
add
test
sub
addb
pop
lahf
pop
mov
push
add
cmpsb
push
shl
xchg
mov
mov
push
rolb
popa
data16
mov
cs
lods
stc
movsw
movsl
xchg
add
pop
imul
adc
mov
push
mov
mov
pop
xchg
imul
mov
sub
daa
sti
sbb
addb
les
nop
add
pop
xchg
add
add
jmp
dec
xor
icebp
dec
pop
jp
inc
cmp
sbb
in
add
add
mov
popa
jae
mov
or
mov
add
outsb
mov
fsubl
pop
outsl
pop
stos
mov
push
fisubrl
ss
hlt
popa
cltd
mov
mov
mov
jg
lahf
xchg
add
add
int
lea
pop
into
lahf
push
shl
cwtl
or
ret
cmp
add
inc
lcall
out
adc
mov
addb
leave
dec
cmp
xlat
cwtl
add
mov
mov
pushf
imul
mov
pop
mov
mov
insl
addb
jg
sbb
add
xchg
pop
mov
scas
xchg
inc
nopl
lret
clc
das
inc
add
sub
add
mov
mov
dec
loopne
mov
sub
push
sbb
add
add
decb
sti
test
sub
xchg
mov
mov
aam
fisubs
push
jo
mov
into
cs
mov
jae
add
pop
ss
push
icebp
pop
inc
pop
stc
je
inc
pop
mov
loop
mov
inc
fimuls
adc
mov
sbb
add
push
inc
je
add
or
xor
pop
jo
mov
pop
cmp
mov
dec
js
mov
sbb
sub
test
add
mov
add
hlt
in
and
cmp
sbb
sub
sti
pop
mov
adc
test
mov
fldl2e
jb
mov
sbb
mov
sar
bound
mov
push
xchg
shll
into
or
mov
dec
outsb
or
dec
sub
add
or
mov
out
iret
mov
imul
jl
inc
sahf
push
jecxz
insl
push
out
mov
sbb
dec
or
shll
jbe
xlat
lods
cmp
mov
jle
mov
mov
addb
jae
enter
fnstcw
sbb
les
dec
mov
sbb
jmp
adc
xchg
je,pt
cmc
mov
mov
mov
add
pop
outsl
adc
xor
iret
notl
push
icebp
xchg
xor
mov
mov
mov
aad
outsl
ss
adc
mov
loopne
mov
add
mov
and
mov
out
cmp
mov
adc
mov
mov
mov
insl
cld
mov
push
pop
pop
ljmp
in
add
mov
adc
mov
aas
push
cmpsl
fstpt
or
add
pop
test
cwtl
rcl
mov
mov
sub
push
xchg
daa
push
test
sbb
repnz
or
xlat
lock
inc
add
add
jb
mov
nop
add
mov
sbb
sbb
push
jb
mov
fstp
cmp
mov
push
inc
lea
mov
add
sbb
std
sti
insl
push
adc
push
jae
jns
add
dec
test
add
cwtl
pop
xlat
add
mov
dec
xor
mov
jo
mov
mov
rorl
dec
xorl
daa
push
pushf
push
sbb
insl
or
push
add
xchg
cmp
subl
add
inc
int
mov
mov
mov
xchg
adc
mov
ss
outsb
pop
sub
insl
add
mov
xor
mov
mov
xor
mov
add
push
ret
jns
sub
mov
movb
sbb
mov
mov
lret
add
int3
icebp
sbb
pop
dec
fwait
aaa
sbb
mov
fnstcw
cmp
out
mov
push
dec
lcall
xchg
add
sbb
fs
scas
lea
lds
add
push
sbb
stos
lret
adc
mov
pop
scas
jno
mov
popf
jg
or
jge
xchg
add
and
sbb
jle
lods
sub
fwait
iret
adc
mov
cmp
scas
popa
js
cmpsb
pop
scas
enter
mov
and
mov
addb
out
popf
decb
addr16
xchg
push
push
fnstenv
add
and
mov
mov
mov
sbb
jge
jecxz,pn
mov
pusha
add
xor
mov
add
cmp
scas
mov
scas
pop
inc
add
push
push
stc
xor
mov
lret
in
pop
sub
push
push
adc
mov
jmp
dec
xchg
gs
mov
daa
fsubl
push
adc
mov
test
test
fists
lds
cli
ds
stos
mov
add
jl
hlt
xchg
or
jge
inc
mov
add
xor
mov
add
add
loope
adc
push
add
mov
cwtl
cld
push
xchg
lock
loop
mov
inc
add
repz
add
movsl
pop
push
or
dec
jb
mov
mov
sbb
add
xlat
xor
mov
add
mov
mov
add
add
mov
addr16
add
add
loopne
mov
jge
fldenv
sub
dec
dec
fidivl
adc
mov
push
inc
sti
insb
cwtl
inc
fldenv
fsubs
mov
dec
jg
ljmp
mov
jl
cltd
into
xchg
push
daa
jge
push
push
add
jp
push
hlt
andl
xlat
aam
imul
add
add
and
add
adc
ss
test
imul
push
stos
xor
cwtl
cmp
xchg
push
xchg
xor
lea
aas
test
mov
sarl
xor
sti
inc
inc
int
inc
adc
outsl
dec
cmp
and
mov
mov
popf
das
repnz
add
les
mov
sub
mov
adc
mov
sbb
push
out
into
inc
add
cmp
mov
nop
add
mov
dec
cmpsl
sbb
add
repnz
jp
fnstenv
mov
fiaddl
fisttpll
adc
mov
pop
repz
mov
aaa
pusha
add
int
ret
dec
imul
adc
mov
imul
add
sub
shll
xor
mov
mov
mov
dec
pop
shr
test
out
add
push
add
add
fsubrs
push
add
xor
xchg
add
push
dec
clc
cmp
pop
lcall
sub
inc
imul
mov
loopne
mov
mov
psubq
mov
mov
jp
mov
imul
add
inc
pop
pop
jae
add
es
push
fdivp
mov
mov
aam
pop
cmp
ret
pop
adc
xchg
add
pop
add
mov
sub
add
mov
mov
sub
add
add
les
dec
xchg
fs
mov
and
sbb
loope
push
loope
mov
stos
pop
daa
xor
mov
out
mov
add
add
lret
in
lds
scas
inc
xchg
jge
clc
dec
je
sbb
test
lcall
mov
mov
sub
mov
mov
repz
mov
xor
mov
sti
mov
push
or
and
mov
dec
xlat
fs
insl
das
and
add
pop
xor
dec
inc
call
pop
neg
sbb
add
add
mov
or
sbb
or
gs
add
mov
mov
lahf
xor
mov
std
push
add
mov
rorl
and
test
stos
xchg
push
mov
mov
mov
xchg
imul
adc
in
mov
add
mov
nopl
xor
mov
mov
lock
add
nop
add
mov
cmpsb
test
jmp
pop
in
inc
add
jb
mov
sbb
iret
mov
add
cmpsb
jecxz
add
add
push
pop
push
jg
aas
imul
xor
mov
in
add
pop
pusha
add
sbb
iret
pop
outsb
out
add
data16
or
push
add
xchg
jno
add
jecxz
les
push
pop
icebp
xchg
mov
xchg
mov
push
lret
cld
add
fistl
jae
cltd
rolb
mov
jg
lock
ja
dec
das
mov
jmp
add
mov
adc
push
cmpsb
out
push
dec
pop
dec
sub
stos
lock
scas
int
add
aad
add
lret
sbb
call
out
cmp
mov
cs
pop
insb
lret
shrl
cli
outsb
sahf
push
and
sbb
sahf
dec
and
xchg
jp
add
xchg
fucomi
dec
movsb
mov
add
mov
jecxz
stos
jnp
stc
sahf
ficompl
lods
add
mov
pop
int
or
add
std
hlt
in
push
add
or
inc
push
dec
addb
lcall
test
mov
mov
lcall
test
mov
xor
loopne
mov
pop
push
adc
mov
clc
jno
sarl
pop
push
dec
pop
pop
xchg
push
loope
inc
mov
lds
add
popf
xchg
out
xor
clc
xor
mov
push
xlat
loopne
mov
add
adc
js
arpl
adc
add
fnsave
scas
sbb
add
inc
dec
or
repz
addr16
mov
or
jl
add
jb
mov
add
jae
std
call
add
add
xor
cwtl
rolb
rolb
mov
aam
les
mov
xor
mov
mov
test
add
pop
and
adc
fwait
enter
cmp
int3
push
add
jbe
in
inc
or
leave
in
lahf
outsb
shll
xor
mov
out
lret
sbb
fisubrs
mov
mov
add
adc
add
xor
daa
mov
repz
mov
icebp
cmp
out
rcrl
ljmp
cmp
cli
sub
push
and
mov
push
test
repnz
push
add
add
mov
xchg
or
pop
mov
fbld
bound
mov
push
stc
lret
nop
add
jg
cmpsb
mov
cld
popf
mov
add
jb
mov
mov
mov
xor
ja
jae
jl
add
ljmp
mov
and
fcoml
out
mov
add
or
xor
jbe
sub
test
jl
add
sub
add
add
addb
enter
add
or
mov
and
cmpsb
testl
fdiv
loope
mov
stc
lds
mov
mov
push
dec
insb
fsubs
inc
ds
add
ret
adc
cmpsl
rolb
push
fcomps
pop
ret
in
add
ja
push
jmp
add
mov
add
push
xchg
aaa
imul
lahf
jmp
mov
shll
add
add
addb
ljmp
mov
add
in
ret
fsubrs
mov
les
mov
add
jg
syscall
xchg
mov
mov
loope
ljmp
test
push
mov
and
xchg
xlat
std
outsl
pop
push
inc
add
fwait
adc
mov
icebp
mov
mov
and
mov
std
cltd
out
or
jle
cmp
ds
pop
xchg
xor
mov
jle
rolb
mov
inc
shrl
popa
fsub
fidivs
add
mov
and
mov
push
add
and
pop
mov
sub
xchg
addr16
jl
and
aas
xchg
add
inc
add
mov
fiaddl
add
push
in
cmp
inc
add
leave
das
mov
and
fdiv
push
pop
push
dec
xchg
adc
imul
repnz
mov
insl
dec
hlt
cli
out
inc
jp
add
mov
pop
negl
mov
mov
xchg
dec
jge
add
jno
aas
aas
rolb
mov
dec
add
mov
push
add
adc
imul
mov
inc
aas
and
mov
nop
add
mov
aas
and
movsb
mov
jns
push
mov
cmp
daa
xlat
sub
add
icebp
rolb
mov
mov
add
jge
sub
inc
popa
mov
nop
add
adc
mov
cwtl
movsl
idivl
das
rolb
mov
push
xchg
pop
in
adc
mov
sub
sti
iret
out
sbb
mov
icebp
inc
std
adc
add
pop
rolb
pop
push
aam
push
das
aas
jmp
add
sbb
sub
and
mov
insb
mov
xchg
das
enter
mov
leave
inc
ret
fisttpl
mov
and
mov
adc
add
mov
add
sbb
movsl
xor
mov
mov
in
movsl
aaa
rol
add
mov
sti
sub
test
mov
not
sbb
add
jle
mov
gs
enter
movsb
mov
dec
outsb
fidivl
negl
xchg
jp
imul
mov
outsb
push
arpl
mov
sbb
jo
mov
imul
mov
std
push
mov
cs
and
add
mov
xchg
mov
js
jbe
into
jne
mov
loope
add
sub
cld
test
jo
jae
fdivs
rcll
xor
mov
inc
add
imul
lahf
rolb
movl
xor
add
push
add
repz
pop
lcall
sti
xchg
adc
ljmp
scas
inc
adc
mov
add
add
adc
xchg
sub
stos
out
enter
dec
inc
pop
gs
stos
addb
xor
scas
cmp
cmpsb
mov
or
jge
add
test
push
rolb
mov
negl
push
mov
das
addb
aam
dec
bound
mov
add
add
mov
mov
lea
daa
lea
jne
and
mov
mov
jne
es
sbb
jmp
popf
das
int
push
ret
fs
cmpsb
out
dec
sbb
iret
hlt
jl
lods
pushf
mov
js
fcompl
push
jne
jle
inc
pop
cmp
mov
mov
add
dec
enter
mov
adc
cmp
into
arpl
dec
insb
movsb
std
mov
adc
add
mov
add
fdivrl
adc
test
jle
push
loope
add
mov
mov
mov
add
mov
cmp
icebp
pop
into
xchg
pop
or
mov
mov
jg
in
add
add
add
mov
ret
stc
dec
fisubl
mov
in
in
mov
or
mov
jnp
lahf
jmp
add
mov
push
mov
xchg
mov
inc
and
add
jl
mov
mov
push
mov
mov
rolb
mov
mov
es
mov
fisubrs
cmc
mov
xor
add
cltd
mov
mov
fs
shrl
je
cmc
add
mov
int
jg
mov
mov
enter
pop
jmp
arpl
lods
dec
stos
mov
mov
inc
add
in
add
mov
cmpsb
push
movsl
shl
cmp
fs
push
addb
xor
pop
inc
xlat
mov
nop
add
ds
sbb
mov
add
mov
daa
rcl
stos
push
lret
cmp
inc
add
push
pop
jns
cld
cmc
push
or
pop
adc
pop
repnz
fsubl
lret
pop
dec
cltd
sbb
push
or
mov
mov
push
das
cld
adc
mov
xchg
out
add
cli
jmp
add
sbb
int
in
xchg
ror
jae
movzwl
lret
addr16
into
aam
dec
pop
add
mov
mov
mov
scas
nop
add
jne
add
mov
lret
int
xchg
repnz
mov
lods
out
cld
in
sub
add
jo
mov
dec
xor
add
mov
mov
jb
mov
add
fwait
popf
imul
add
add
cmp
test
popa
xchg
and
mov
add
sbb
je
add
mov
lea
push
rolb
and
push
cwtl
sbb
push
add
mov
gs
sti
ret
or
dec
daa
sbbl
add
add
mov
mov
mov
mov
mov
pop
negb
mov
add
es
mov
mov
cmp
mov
cmpsb
into
cmp
add
dec
sbb
adc
dec
cmp
div
dec
movsl
add
mov
shrw
mov
mov
pop
xchg
add
cld
jae
fldt
cmp
fisubrl
loopne
mov
aad
loop
mov
cltd
loop
mov
or
cmpsl
mov
adc
mov
aas
cld
mov
pop
ljmp
add
mov
sbb
testb
push
push
jno
lret
js
in
insb
mov
mov
mov
add
outsb
sub
adc
mov
je
outsl
jmp
push
outsl
xor
add
mov
add
ret
or
es
and
aam
fwait
sti
rolb
mov
loop
mov
mov
jl
xchg
add
add
jns
and
sbb
ds
movsb
orl
faddl
xchg
scas
imul
rcl
popf
cwtl
jbe
mov
mov
add
add
push
add
mov
daa
mov
in
pusha
add
mov
stos
imul
lds
and
mov
mov
push
and
jg
mov
add
pop
dec
fcoms
sahf
ljmp
stos
mull
add
mov
out
inc
add
or
and
or
add
lds
add
add
mov
jo
mov
push
inc
jo
mov
daa
sub
cli
mov
add
mov
icebp
mov
clc
mov
add
mov
inc
rorl
movsb
addl
iret
cld
adc
idiv
push
jp
xor
sbb
mov
sbb
mov
mov
add
add
sbb
add
mov
pop
out
pop
js
outsl
xchg
add
dec
es
xchg
mov
mov
push
inc
pop
or
jmp
lret
jno
jmp
dec
add
sub
pop
xchg
add
jo
mov
lcall
add
mov
add
mov
inc
sub
gs
cmpsb
iret
pop
lods
and
add
inc
fisttpl
cld
fsts
test
pop
and
in
add
mov
lock
add
mov
mov
mov
add
addb
test
enter
ljmp
xor
mov
mov
loop
mov
in
movsl
push
fnstcw
iret
daa
sbb
push
int
popf
mov
in
and
pop
call
mov
xlat
xor
add
xchg
loop
mov
jge
add
mov
dec
pusha
add
fldt
mov
add
mov
sbb
aas
lahf
mov
mov
add
push
in
and
mov
inc
aaa
bound
mov
loope
lods
sahf
pop
jnp
mov
add
out
xor
mov
les
imul
int3
stos
int
mov
and
xchg
rcrl
jbe
pusha
add
and
pop
inc
or
mov
mov
repz
adc
loopne
mov
loop
mov
add
cmp
inc
add
push
jb
mov
lret
add
shll
lock
sbb
add
add
add
shll
add
add
nop
add
sbb
leave
push
add
mov
push
imul
add
outsb
inc
add
push
negl
add
mov
out
add
data16
mov
fmuls
or
ret
push
and
int
leave
ret
pop
orl
pushf
int3
in
rolb
mov
notl
add
adc
sti
sbb
xchg
jmp
call
imul
push
lcall
add
add
mov
insb
scas
mov
mov
xor
cmpsl
pop
out
add
pop
mov
pop
rolb
mov
add
jle
add
add
jp
jo
mov
jno
mov
sbbl
mov
add
add
mov
mov
mov
repnz
add
lret
movl
std
rolb
jle
add
das
pop
leave
push
jo
mov
adc
aas
pusha
add
pop
pop
mov
jne
add
dec
pop
lods
gs
add
add
mulb
cwtl
aas
nop
add
adc
mov
fwait
inc
hlt
xchg
cmc
xchg
dec
ja
or
push
xchg
call
jg
push
addb
mov
pop
push
add
add
dec
push
add
add
int3
aad
cs
mov
push
and
mov
or
int3
shll
mov
insb
movsl
inc
add
cld
ss
mov
fimull
and
pop
and
mov
je
mov
ss
add
mov
pop
or
add
mov
inc
dec
push
mov
mov
aad
mov
fmull
mov
inc
add
sub
inc
pop
pushf
and
lods
int3
lret
sahf
cmp
sub
fmuls
lcall
sidtl
mov
mov
mov
test
and
add
add
fs
pop
rolb
mov
rcll
adc
mov
aad
clc
sbb
add
and
mov
xchg
sbb
adc
jmp
jo
mov
add
jae
pushl
leave
gs
aas
adc
fwait
mov
push
add
mov
pusha
add
test
xchg
mov
and
mov
enter
popa
jb
mov
mov
and
mov
add
pop
mov
mov
mov
jp
push
add
aas
negl
dec
lock
add
mov
mov
roll
add
cs
lods
pushf
aaa
push
xchg
adc
rolb
mov
cli
mov
add
loopne
mov
ret
int3
fsubrs
insl
mov
inc
mov
mov
dec
xlat
pop
loope
push
cwtl
jnp
add
inc
add
jb
mov
lods
sub
bound
mov
push
out
adc
cwtl
jns
mov
mov
daa
test
cmp
inc
mov
mov
addl
lods
pop
push
jecxz
jmp
mov
xchg
push
js
ret
adc
mov
repnz
mov
xor
mov
xor
mov
jmp
stos
test
xor
or
lods
push
fisubrl
adc
mov
lods
xchg
xlat
rol
mov
stos
jg
outsb
call
mov
add
jne
xor
mov
adc
push
sbb
rcl
dec
not
add
sbb
xchg
mov
cli
call
mov
addr16
cmp
imulb
cmp
add
int
add
add
mov
pop
ljmp
mov
xchg
loope
popa
mov
cltd
add
push
add
repnz
add
loop
mov
icebp
sarl
mov
cmp
xchg
cltd
addb
xchg
adc
jnp
add
mov
push
imul
jle
test
scas
loopne
mov
mov
mov
lret
das
add
mov
add
jp
aad
mov
add
out
sarl
jmp
ja
ss
add
mov
dec
mov
sub
loope
cmpsb
fwait
ret
xor
push
fistpl
jecxz
rolb
mov
ret
push
mov
add
inc
test
enter
jb
mov
push
stc
mov
fldl
push
pop
xchg
lds
in
pop
ja
add
mov
jl
in
mov
mov
jae
adc
rolb
mov
repnz
sbb
mov
daa
inc
scas
and
mov
insl
mov
dec
dec
pop
stos
daa
add
mov
sub
add
xchg
ss
inc
sbb
cmp
addb
dec
jg
and
cli
stc
je
imul
lcall
je
jne
add
repnz
in
mov
push
add
pop
call
adc
mov
jo
mov
test
push
jmp
inc
add
pop
adc
rolb
mov
add
fdiv
mov
mov
cwtl
int
ds
inc
mov
mov
add
mov
cmp
outsb
popa
pop
and
adcl
cmp
repnz
addr16
xor
in
dec
cmpsl
inc
add
jp
and
stc
sbb
sub
xchg
push
popa
mov
add
lock
add
icebp
fwait
out
addb
iret
jl
add
mov
mov
xchg
add
or
add
daa
je
inc
add
mov
imul
dec
add
mov
lcall
cli
int3
mov
mov
fs
setge
adc
mov
add
rolb
mov
pushf
insl
or
mov
ret
and
and
ret
out
jg
pop
mov
mov
arpl
loop
mov
cmpsl
popf
cmp
adc
add
mov
add
or
xorl
add
frstor
mov
test
xchg
in
adc
mov
fdivr
stc
pop
cld
lret
test
nop
add
pop
ljmp
mov
add
outsb
or
add
dec
push
add
lods
add
rcll
fcmovbe
int3
cmp
sub
jecxz
popf
push
loopne
mov
divb
and
mov
inc
lcall
lods
ret
fnstenv
mov
xchg
out
rolb
mov
mov
daa
sub
lods
movsl
in
sub
mov
mov
dec
mov
mov
movsb
jnp
add
jo
mov
lea
mov
push
dec
out
sbb
xchg
sub
loopne
mov
add
pushf
adc
xchg
push
cmp
add
mov
sti
dec
cmpsb
push
jno
imul
dec
in
xchg
addb
cmp
mov
xor
adc
repnz
xchg
sub
sbb
outsl
sahf
jecxz
add
cmp
jle
push
mov
fcoml
mov
rolb
leave
add
mov
lret
mov
rcl
add
lahf
int3
imul
arpl
ss
cld
push
add
mov
addb
push
addb
ret
add
jp
ret
call
mov
loope
icebp
dec
or
jle
sbb
lods
loope
lods
or
test
xchg
adc
mov
jnp
cmc
bound
mov
mov
fs
imul
lret
lods
or
fiaddl
hlt
pop
push
mov
add
les
lea
dec
jmp
sub
xchg
cmp
adc
and
int3
lea
mov
xchg
dec
negl
add
mov
add
push
add
cs
add
add
mov
stos
leave
gs
lock
sub
sti
sbb
icebp
dec
cmp
add
add
adc
or
pop
and
mov
push
add
jmp
jbe
in
adc
loop
mov
add
push
mov
or
addb
mov
push
nop
add
in
and
mov
scas
ficoms
fsubs
add
rolb
push
xchg
push
cmp
add
mov
inc
shl
insl
insl
xchg
inc
xlat
cmpsb
popa
inc
add
adc
stos
in
xor
adc
loopne
mov
sub
jmp
push
bsf
sbb
add
add
mov
mov
jne
testl
andl
shll
fdivs
add
xor
xor
addb
and
mov
sbb
addr16
and
aad
mov
popf
fscale
dec
scas
cltd
mov
fdivp
add
inc
add
fs
add
in
mov
les
nop
add
aad
add
jg
mov
adc
jge
pop
inc
je
jno
stos
popa
mov
lret
jg
cmp
pushf
and
jae
cmpsl
inc
cli
or
out
xchg
ds
jg
mov
hlt
dec
push
push
add
pusha
add
imul
cltd
jns
dec
lods
and
orl
dec
lret
mov
add
popa
sub
int3
daa
mov
popa
and
xor
sub
dec
mov
jb
mov
mov
mov
int
mov
xor
mov
into
mov
in
movsb
jg
add
int3
aaa
and
mov
sbb
sbb
jp
rolb
mov
sub
mov
push
fisubl
addb
call
add
lcall
int3
fnstsw
xorl
ja
lods
adc
mov
mov
push
dec
cltd
inc
add
mov
lods
inc
pop
repz
push
cmp
push
push
add
fistl
mov
jg
add
add
add
fnstcw
mov
mov
out
ret
push
jne
sbb
cltd
es
mov
fidivs
add
out
mov
je
cmp
jge
mov
add
add
mov
nop
add
or
add
rolb
mov
aad
add
mov
ret
insb
sbb
loope
or
nop
add
lret
or
add
sbb
pop
cltd
out
adc
mov
adc
test
movsb
mov
stos
hlt
sbb
mov
push
mov
scas
out
es
insb
mov
imul
add
add
mov
fstpl
cmp
mov
sub
out
mov
ret
mov
mov
lods
and
jle
jecxz
scas
push
pusha
add
addb
jg
lahf
mov
daa
fistl
mov
fsubs
add
std
cmp
jge
jge
lahf
arpl
gs
xor
add
sub
xor
mov
mov
test
rolb
xchg
popa
mov
sub
add
add
cmp
sub
sbb
sub
js
add
add
xchg
in
xor
or
cmp
ss
jo
mov
fimuls
je
jmp
mov
push
add
mov
repz
aad
stc
out
push
cmp
jl
mov
dec
mov
sahf
xchg
imul
mov
mov
dec
xchg
xchg
add
add
mov
xchg
imul
mov
out
mov
add
test
push
test
mov
jge
mov
or
and
mov
aam
add
es
aaa
xor
mov
mov
xchg
repnz
pandn
cmp
dec
pop
lret
jmp
das
fisubrs
add
push
out
pop
cmp
pop
in
or
mov
jbe
lahf
inc
nop
add
sub
add
into
xchg
mov
ret
mov
outsl
outsb
daa
js
adc
repz
loop
mov
push
mov
add
inc
push
add
jo
mov
mov
xor
xchg
mov
sub
scas
jl
cltd
aaa
rolb
mov
lods
mov
insb
movsb
sti
push
xor
cmp
dec
aam
repnz
mov
movsb
aas
pop
pop
je
mov
mov
lods
push
add
cmp
repnz
xchg
insl
jne
and
mov
sti
mov
mov
add
enter
push
fisubl
scas
dec
jge
test
add
mov
lcall
jo
mov
outsl
popa
pop
les
fwait
imul
scas
test
hlt
dec
fistps
jmp
push
cmpsl
push
add
addr16
pushf
adc
mov
add
lea
xlat
rorl
xchg
and
cmp
add
es
cmp
mov
dec
xchg
add
push
add
sbb
test
add
ss
mov
mov
into
xor
dec
scas
cmpsl
pop
hlt
rolb
mov
push
lcall
nop
add
pop
or
lahf
mov
push
aas
inc
add
mov
mov
imul
mov
jg
jp
pop
clc
lret
cmpsb
dec
das
mov
jg
mov
jnp
or
popf
icebp
imul
andl
push
push
add
xchg
aam
add
insl
and
add
add
pop
imul
push
mov
stc
in
bound
mov
aaa
leave
in
addl
insl
cmp
cmp
icebp
ja
ret
add
xchg
decl
mov
mov
lea
lret
push
cmp
push
lds
lods
xorl
test
mov
xchg
mov
addr16
mov
mov
mov
add
adc
mov
out
arpl
xchg
mov
mov
pushf
mov
mov
add
add
es
data16
mov
mov
push
mov
add
dec
fs
adc
or
sbb
pop
mov
lret
mov
aaa
jmp
rolb
mov
jno
out
cmp
add
pop
jge
popf
inc
pop
add
stos
loopne
mov
and
adc
mov
mov
iret
pop
xchg
roll
cmp
and
add
movsl
jle
add
das
dec
in
add
add
popf
xor
stos
pop
ret
imul
mov
rolb
mov
scas
and
daa
push
add
and
adc
mov
mov
sub
xor
mov
lcall
sub
cmc
push
mov
ret
divl
mov
sbb
add
out
inc
add
lcall
mov
sbb
adcl
dec
gs
dec
mov
aam
mov
rolb
in
adc
mov
mov
movsl
pop
pop
fwait
push
add
add
lcall
mov
mov
cmp
add
xor
mov
hlt
mov
add
or
stc
lock
push
repz
xchg
inc
adc
daa
addb
test
xor
mov
mov
movsb
popa
xor
jecxz
and
repnz
mov
sbb
inc
add
xchg
loopne
mov
out
sub
jo
mov
mov
mov
xor
sub
cmp
add
dec
adc
ja
addr16
push
mov
pop
movsb
fstps
je
xchg
aam
push
frstor
pop
sub
jg
push
shl
fwait
or
add
xchg
cli
stc
insb
mov
sub
lahf
pop
ds
add
in
dec
push
sbb
mov
sub
add
dec
mov
lahf
dec
jbe
push
loop
mov
in
xlat
lret
test
mov
and
inc
dec
sbb
mov
adc
mov
mov
jae
lahf
mov
jbe
jb
mov
pop
out
lods
pop
pop
and
movsb
inc
jbe
push
in
lret
fnstenv
clc
aad
rolb
fdivl
fs
push
sub
jnp
mov
xchg
ss
or
xor
inc
fnstsw
mov
xorl
push
ret
mov
pop
insb
inc
add
nop
add
add
cmp
xor
movsb
lret
jmp
loope
jp
mov
xlat
cmp
dec
fwait
inc
add
ficoml
pop
dec
jae
test
add
pop
test
dec
sub
loop
mov
mov
lds
and
add
stos
lock
add
dec
adc
cmc
std
pop
jne
jg
lahf
cwtl
adc
mov
add
xchg
lea
mov
pushf
fs
mov
add
xchg
and
mov
add
cmc
mov
mov
add
jmp
xlat
jp
lcall
xlat
sub
add
mov
int
jbe
xchg
add
mov
rolb
out
cmp
roll
lea
mov
cltd
lea
mov
mov
push
out
add
push
add
push
popa
lret
mov
cmp
add
mov
mov
xor
push
and
inc
add
je
data16
jg
add
mov
je
idivl
add
add
mov
add
out
mov
mov
mov
adc
test
add
mov
ja
pop
jbe
and
in
nop
add
jns
dec
mov
mov
jns
or
rcrl
add
mov
xor
dec
push
jne
inc
test
out
add
mov
cmp
jo
mov
add
inc
mov
mov
in
jp
add
lods
stos
rcl
iret
mov
test
ja
add
jecxz
sub
mov
lock
add
mov
add
insl
rolb
mov
cmp
pop
mov
add
add
add
ja
stos
xchg
mov
mov
pop
xor
stos
jle
add
cmp
ja
iret
sahf
fidivrl
xchg
add
cmp
fwait
insl
icebp
add
dec
lret
test
mov
and
mov
add
jne
mov
addr16
xchg
and
mov
sbb
mov
push
jbe
xchg
imul
ljmp
imul
add
dec
mov
aas
ds
stos
xor
mov
jbe
or
inc
in
xchg
adc
adc
js
push
fldt
xchg
xor
jae
mov
push
mov
and
mov
lret
out
mov
enter
add
add
xchg
divl
incl
test
stos
or
lock
mov
add
pop
addr16
daa
sarl
jg
mov
xchg
jae
push
sbb
das
sub
gs
add
mov
clc
ficoml
sub
ljmp
mov
jmp
or
mov
mov
call
cli
pop
lods
sbb
jno
push
mov
dec
rolb
fdivs
mov
stos
lock
sbb
mov
sub
inc
jp
jnp
bound
mov
lods
mov
and
mov
lods
stc
sahf
xor
jge
aaa
rcr
int
xor
mov
add
add
cmc
add
test
and
stos
xchg
add
xor
mov
mov
mov
lods
je
out
lock
push
add
mov
rolb
mov
or
push
add
pop
mov
sub
push
xchg
cld
insb
fsts
adc
push
js
jmp
cltd
cltd
xchg
sub
test
mov
push
in
adc
arpl
add
xadd
mov
add
mov
popa
das
bndstx
mov
out
iret
xchg
adc
jle
imull
and
jmp
and
jle
cmc
scas
lock
lea
or
leave
int
add
test
cmp
insb
ss
fisubrs
inc
aam
adc
es
lret
cmp
test
sub
rolb
mov
sub
jmp
add
or
mov
fsub
ja
sub
mov
add
inc
jns
insl
cmp
pop
push
js
push
add
movsb
inc
addb
out
add
pop
inc
loope
daa
js
daa
jb
mov
aaa
adc
xchg
in
mov
mov
fs
rolb
mov
je,pt
pop
mov
mov
add
pop
dec
ret
xor
inc
add
xor
mov
mov
add
incb
mov
add
add
sbb
mov
sub
push
and
inc
outsl
dec
sub
add
cs
jnp
in
lcall
test
lods
sbb
addl
add
fadds
in
enter
aas
popf
popf
clc
or
pop
adc
mov
mov
inc
scas
popf
in
loop
mov
mov
mov
sub
dec
sub
jae
iret
mov
dec
mov
sbb
rolb
xchg
shll
or
add
inc
jmp
xchg
sbb
pop
xor
cmp
jne
movups
cli
adc
mov
jne
pop
xchg
aad
add
iret
xor
loope
sbb
cmc
xchg
mov
jnp
push
sbb
xor
mov
add
or
imul
mov
mov
ret
icebp
sti
notl
mov
aas
adc
mov
mov
in
push
and
cmpsl
arpl
jnp
add
adc
mov
std
ret
lahf
sub
lret
mov
or
aad
mov
or
mov
and
mov
jae
out
fstpt
addb
stc
inc
dec
idiv
repz
bound
mov
rolb
mov
push
add
icebp
daa
in
jl
stos
or
mov
mov
sarl
jno
add
inc
mov
xchg
cmovns
or
lods
mov
inc
sbb
add
jns
or
jecxz
in
add
add
testl
add
cltd
xor
mov
push
ret
cmc
addr16
fwait
pop
out
jb
mov
add
jae
imul
jo
mov
test
stos
xchg
add
add
add
ret
stos
mov
imul
cld
sub
add
add
sbb
inc
add
sub
pusha
add
mov
js
add
into
jb
mov
jecxz
fisttpll
mov
cltd
xor
mov
add
ret
test
push
add
push
add
add
add
test
mov
add
insl
pop
sti
popl
mov
test
mov
add
mov
jge,pt
pop
inc
add
add
cmp
push
sti
push
testb
xchg
stc
rolb
mov
mov
mov
mov
loopne
mov
in
xor
cld
jbe
lret
sub
dec
inc
jns
add
inc
dec
addb
sub
add
xchg
add
mov
ljmp
insl
push
add
adc
add
rolb
mov
add
add
push
add
adc
mov
inc
add
stos
addb
mov
xchg
xor
add
daa
imul
movsl
mov
jo
mov
test
mov
mov
jnp
or
outsl
push
mov
mov
mov
mov
mov
repnz
add
mov
out
outsb
in
int
push
shrl
in
rolb
daa
stos
fldt
ss
mov
lret
mov
dec
push
out
mov
lahf
aas
push
leave
int3
addb
mov
fnstcw
lea
aas
ja
xchg
add
mov
mov
stos
ret
mov
add
mov
imul
add
fidivl
sbb
stos
or
mov
movsl
cld
push
mull
mov
in
pop
daa
xchg
sub
rolb
mov
inc
add
in
and
push
add
pop
dec
pop
cmc
lahf
or
jmp
enter
ss
sbb
mov
mov
nop
add
lea
sbb
cld
fistpll
mov
xor
mov
mov
mov
addr16
mov
inc
xchg
in
and
mov
test
pop
out
cmp
add
mov
dec
and
mov
in
mov
insb
cmpsb
push
insl
pop
fs
cmpsl
push
mov
xor
and
mov
cmc
imul
mov
add
xor
mov
push
pop
mov
sub
mov
rol
add
add
lret
rolb
mov
mov
cmp
mov
inc
add
mov
sbb
push
popa
sbb
js
sbb
sbb
adc
mov
mov
je
rolb
mov
add
popf
and
pop
iret
jne
test
addb
xchg
xchg
scas
jg
xor
cmp
adc
mov
mov
add
add
mov
pop
sbb
fcoml
rolb
and
mov
add
jnp
inc
adc
mov
dec
inc
incb
mov
mov
add
jae
mov
ss
pop
hlt
addr16
add
inc
mov
ficoml
cmp
add
ret
sahf
mov
in
adc
mov
inc
rcrl
inc
pop
fbstp
add
dec
dec
or
stos
xor
mov
std
jle
sub
mov
mov
xor
mov
je
lods
inc
lods
out
call
xchg
add
mov
add
test
xchg
add
mov
xor
sti
test
imul
leave
dec
mov
xchg
imul
mov
mov
lret
jne
arpl
jle
push
dec
dec
lods
iret
sbb
imul
ret
inc
push
mov
add
mov
mov
dec
mov
mov
rcll
jb
mov
or
call
add
add
sub
or
push
or
mov
lcall
fisttpll
addb
es
xchg
in
add
lret
in
leave
push
jg
or
fldl
and
push
add
rcll
mov
cli
loopne
mov
jl
add
jno
fimuls
nop
add
mov
dec
fistpl
arpl
inc
cmp
add
pushf
sub
jno
jmp
or
outsb
lds
or
sub
add
rolb
and
add
jb
mov
inc
scas
lahf
fstpt
add
dec
aam
pop
aam
fcmove
fdivs
adc
test
pop
jmp
cmp
add
jp
ljmp
pushf
rorl
push
push
out
pop
andl
mov
jge
mov
mov
movsl
and
mov
negb
xlat
push
mov
dec
pop
sub
inc
push
or
int
mov
dec
pop
cmp
int3
fiadds
sbbl
push
inc
pop
push
lcall
jo
mov
ja
jo
mov
mov
add
sub
dec
jnp
add
xchg
in
dec
or
push
lods
in
push
xchg
mov
jmp
add
ds
sub
popf
pop
xor
lcall
gs
inc
add
pop
test
mov
decb
subl
lods
rolb
mov
add
xor
mov
lock
or
add
mov
pop
push
fsubl
jb
mov
imull
scas
repnz
roll
sbb
inc
aaa
das
mov
frndint
repz
xor
mov
cmp
add
rolb
sarl
out
out
xchg
jns
stos
add
sbb
cmp
dec
iret
cwtl
fimuls
ficompl
pop
dec
fs
fdivp
add
pop
test
les
sti
mov
imul
mov
mov
xor
push
neg
inc
lds
rolb
mov
in
add
add
aaa
inc
incl
loopne
mov
js
rolb
sub
addr16
xlat
lret
addl
pop
iret
dec
leave
cmc
jge
enter
pusha
add
mov
adc
mov
outsb
cmp
add
mov
mov
mov
push
add
mov
cmp
add
enter
push
pop
jmp
cmc
outsl
or
sbb
add
lret
test
xor
add
cmpsb
pop
mov
sahf
pop
faddp
testb
jb
mov
push
out
jmp
inc
add
sbb
mov
add
mov
sub
add
add
inc
out
push
and
sbb
push
pop
inc
cmp
into
fists
or
das
imulb
push
mov
mov
repz
movsb
hlt
std
xchg
shll
mov
repz
mov
pop
xor
add
push
xor
pop
jb,pn
mov
imul
clc
push
dec
pop
in
pop
mov
int
sbb
add
mov
xor
add
xchg
in
xchg
mov
aas
add
mov
or
cmp
cmp
outsb
mov
mov
mov
pop
stos
or
cmpsb
mov
add
inc
and
mov
addb
push
mov
imul
ret
mov
fdivr
mov
add
fucom
sub
mov
add
mov
mov
clc
push
das
pop
fbld
in
sub
sti
mov
add
mov
rolb
mov
int3
adc
sbb
add
add
ja
fnstenv
xor
jle
xor
lcall
add
cmp
nop
add
adc
mov
and
cmp
sub
or
jae
cmp
sti
jmp
std
divl
add
test
lcall
sarl
mov
jno
jmp
mov
cmp
add
add
mov
icebp
pop
adc
and
test
lea
in
cltd
popf
push
rolb
mov
fwait
les
popa
and
mov
pop
bound
mov
insl
xor
lock
repnz
add
add
add
lods
lds
ljmp
mov
fiadds
add
jmp
mov
aaa
add
cltd
int3
and
mov
add
mov
sub
pop
cli
sti
ljmp
repz
out
dec
loope
pop
xchg
cmpl
repz
mov
add
push
rolb
enter
xor
mov
xchg
stos
lea
add
ljmp
mov
stos
mov
jmp
and
outsl
xchg
or
ret
out
add
add
or
mov
rolb
mov
xor
incb
mov
cmpsl
mov
mov
or
add
push
movl
pop
cmp
mov
loopne
mov
mov
mov
cmp
pop
jb
mov
add
ret
ds
in
add
imul
mov
or
jmp
add
cmp
add
pop
cmp
and
ja
add
mov
jne
sub
movsb
add
mov
lea
outsl
xor
mov
add
add
sub
mov
add
jb
mov
mov
add
stos
dec
mov
rcr
pop
fdivrs
outsb
xchg
add
cmp
pop
cmpsl
daa
outsb
addr16
add
mov
mov
add
add
bound
mov
jg
push
push
lcall
xor
mov
inc
jbe
test
or
mov
push
cli
test
sub
repz
and
push
adc
mov
add
and
gs
add
sub
add
jl
xor
iret
xor
add
xor
pop
pop
dec
pop
lods
pop
cmp
sub
pop
fsubrs
pop
fmull
sbb
movsb
push
add
ljmp
lahf
bound
mov
add
xchg
push
push
push
dec
repz
sbb
mov
cld
addb
aaa
inc
dec
pop
addb
sub
sahf
sahf
rolb
xor
mov
pop
pop
xchg
sub
mov
add
mov
add
mov
es
inc
andl
xchg
sub
mov
add
add
dec
dec
addb
lcall
add
sbb
xchg
loope
js
repz
jb
mov
add
mov
mov
sbb
mov
sub
mov
mov
mov
jmp
push
lea
mov
xor
mov
push
add
mov
mov
add
add
mov
push
mov
mov
shll
sub
dec
addb
ds
mov
sub
fbstp
and
fmuls
ret
sub
mov
xor
daa
rcrl
hlt
xlat
cs
jge
cmc
mov
fnstenv
testb
mov
negl
leave
and
add
scas
in
cld
sbb
mov
add
ret
sub
ret
enter
fisubrl
mov
inc
and
mov
jmp
pop
xchg
pop
push
add
roll
mov
add
es
mov
add
dec
mov
jecxz
add
mov
es
pop
fcompp
ret
jno
ja
lret
jb
mov
dec
mov
addb
movb
pop
push
push
push
ds
movsl
push
lea
in
mov
inc
ret
or
add
aam
test
jne
xchg
push
mov
xor
mov
jne
add
aam
pop
jne
add
js
incl
jle
push
enter
fidivl
fidivrl
adc
mov
icebp
frstor
mov
int
jge
jge
mov
mov
std
leave
cltd
or
jge
add
mov
mov
xor
mov
jecxz
pop
mov
xchg
icebp
mov
mov
fidivrl
add
add
in
js
ret
push
add
stos
xor
mov
dec
rcl
mov
jl
cmp
mov
sahf
cmc
cld
aad
movsw
sub
sbb
je
push
jne
out
rolb
lcall
mov
push
sub
pop
mov
mov
or
jo
mov
sub
pop
add
mov
pop
pop
mov
fidivrs
popa
addb
mov
movsl
or
add
jne
jae
sbb
add
sbb
testb
cmp
and
mov
add
imul
cwtl
mov
mov
sbb
out
add
outsb
push
sub
and
mov
cwtl
cmpsl
mov
pop
mov
or
xchg
imul
imul
add
jne
and
mov
sbb
jge
xchg
mov
fisubrl
xchg
lods
ds
mov
bound
mov
dec
mov
cmp
iret
mov
les
int3
push
cltd
mov
int
pop
prefetch
jl
icebp
and
stc
push
add
add
jne
dec
in
sar
push
in
repnz
test
cmp
sbb
adc
loope
inc
xor
mov
ljmp
mov
das
dec
pop
lcall
jno
jp
pusha
add
push
lahf
or
add
mov
lret
add
rcll
js
add
sahf
fnstsw
add
pop
in
fiaddl
ret
rcll
dec
dec
aaa
gs
outsl
das
mov
pop
sahf
lret
jmp
pop
cmp
add
rorl
decb
push
fldenv
mov
lret
in
and
xor
pusha
add
iret
pop
dec
inc
nop
add
adc
outsb
xchg
aas
push
add
call
in
scas
sbb
dec
push
add
sub
mov
out
cmp
mov
jle
aam
icebp
mov
lahf
jmp
scas
out
and
sbb
jp
fwait
cltd
inc
xchg
rolb
mov
push
test
and
xor
mov
jl
mov
mov
xor
inc
pop
cmpsl
xor
push
stos
lods
mov
test
fs
push
incb
cmp
inc
dec
add
mov
sub
add
sbb
inc
call
je
mov
dec
out
add
add
les
add
sub
add
pop
insb
movsb
mov
adc
mov
js
jle
jge
mov
sahf
dec
ljmp
mov
xorl
dec
sub
mov
rolb
mov
push
add
and
cmp
add
fstpt
aad
jae
mov
and
add
xchg
xchg
outsb
mov
add
pop
push
lock
sbb
sub
add
stos
icebp
inc
jle
xchg
lret
dec
cmp
jns
fbstp
or
popa
adc
or
add
mov
jmp
out
push
dec
push
jb
mov
popa
pop
je
std
or
mov
ss
sub
mov
mov
xchg
shrl
pop
xchg
cs
mov
push
lret
inc
mov
push
add
add
jle
adc
sbb
lock
addr16
mov
push
int3
mov
lods
pop
out
stos
add
jle
aas
inc
xchg
xchg
push
add
rolb
mov
mov
les
xor
mov
dec
insl
popl
aad
bound
mov
test
loop
mov
add
daa
ret
data16
jecxz
xor
pushw
xchg
adc
cmp
add
mov
lahf
inc
inc
add
mov
mov
cltd
and
push
push
adc
mov
mov
es
mov
fidivrl
add
enter
xchg
push
icebp
cmpsl
dec
addb
sahf
add
mov
fiadds
test
add
mov
add
xor
mov
add
scas
jns
add
push
pop
stc
ja
rolb
lret
and
mov
add
lahf
aad
movsb
xor
mov
sbb
mov
pop
cwtl
and
sbb
xchg
mov
ficomps
fs
movsb
shrl
mov
or
loope
add
jbe
insb
inc
add
xor
push
adc
mov
add
lahf
clc
mov
cmp
add
xchg
bound
mov
jmp
data16
into
out
jnp
pop
mov
jmp
mov
mov
cmp
add
add
mov
dec
mov
loopne
mov
pop
iret
jnp
mov
movsl
pop
and
mov
pop
mov
pop
xlat
ret
cmc
cmp
ds
add
xor
cs
test
xor
and
mov
mov
insb
nop
add
insl
dec
mov
cltd
into
call
pop
push
ret
sbb
dec
lea
or
xchg
or
mov
in
fbld
add
add
xchg
ss
dec
inc
mov
xchg
sbb
mov
pop
pop
inc
hlt
pusha
add
xor
imul
and
mov
and
mov
andl
push
clc
cmp
rolb
mov
mov
insb
mov
push
cmc
push
xchg
jbe
or
or
add
mov
sbb
loope
inc
add
test
pusha
add
add
mov
mov
sbb
and
fbstp
nop
add
add
psubsw
divb
xchg
out
add
mov
into
mov
mov
cmc
xchg
push
cmp
jnp
lret
lods
ljmp
mov
loopne
mov
sub
insb
popf
dec
das
and
mov
push
clc
cmpsb
mov
mov
add
int
cmp
lret
xlat
pop
movsb
ret
xchg
fmuls
cmp
int
int
movsl
xor
mov
push
add
jp
popa
mov
or
mov
test
hlt
fcomi
es
mov
xchg
cmp
mov
add
shrl
jne
sbb
xchg
rolb
mov
xchg
addb
negl
cmp
mov
mov
call
xchg
mov
add
add
and
mov
out
add
mov
mov
mov
xchg
jno
inc
add
mov
sbb
add
add
xor
mov
mov
add
add
call
filds
dec
not
inc
adc
mov
cmc
fs
mov
mov
sub
mov
pop
nop
add
sbb
lods
sahf
mov
add
jns
or
add
shll
push
sbb
pop
jecxz
loope
add
outsb
adc
addr16
cltd
mov
add
rolb
dec
mov
jno
and
mov
pusha
add
add
pop
fsubr
fsts
aaa
lock
lea
insb
lods
pop
jne
inc
int3
or
adc
jne
add
dec
jecxz
daa
mov
add
cwtl
lds
sti
xor
mov
push
add
ret
xor
outsl
xchg
popf
pop
mov
and
mov
add
mov
lahf
pop
and
ret
and
mov
in
stos
pop
sti
fldl
mov
mov
dec
sar
inc
push
jle
dec
rolb
mov
scas
xchg
add
or
add
xor
push
mov
xchg
arpl
cmp
add
jb
mov
push
add
lock
mov
mov
jbe
pop
inc
roll
aaa
mov
jecxz
dec
mov
add
mov
sub
inc
icebp
addb
cmc
rolb
mov
add
push
mov
mov
mov
mov
sub
mov
test
mov
dec
or
les
add
mov
and
mov
xor
mov
mov
xchg
xlat
ret
jecxz
cmpsl
hlt
lea
xchg
jecxz
popa
adc
pop
mov
sbb
add
cmp
mov
pop
and
mov
add
mov
dec
inc
mov
jno
sahf
xor
jns
sbb
flds
mov
add
mov
fisubl
clc
xor
inc
mov
out
test
hlt
daa
push
mov
mov
hlt
cmpsl
stos
mov
pop
and
les
mov
lods
add
xchg
lret
push
sub
lcall
or
xor
mov
xchg
rolb
inc
mov
in
push
cld
aam
add
out
mov
outsl
add
pop
rorl
loope
movsb
jae
call
test
pop
test
repnz
ljmp
cmp
add
add
inc
inc
add
xor
xchg
mov
and
call
add
mov
test
or
sbb
stos
mov
arpl
add
test
repnz
pop
push
out
cltd
jecxz
add
aaa
int3
push
add
dec
test
add
mov
mov
inc
rolb
std
fmul
mov
inc
mov
icebp
mov
or
mov
aas
pop
lock
lods
test
dec
cmpsl
inc
mov
pop
stos
jo
mov
or
int
cmpsl
lods
xchg
mov
mov
ja
rcl
sbb
pop
push
mov
add
mov
in
jge
mov
jp
ds
cmpsb
fwait
sahf
gs
add
in
jmp
insb
in
pusha
add
add
scas
pop
or
add
mov
mov
lods
jb
mov
add
add
incb
int3
xor
and
mov
scas
pop
pop
push
inc
add
dec
movsl
mov
mov
and
mov
cwtl
movsl
and
sbb
imul
mov
ret
pop
dec
stos
aad
jle
add
dec
std
jmp
push
adc
pop
outsl
gs
add
mov
dec
push
mov
mov
or
and
cmp
inc
add
fdivp
mov
mov
push
and
mov
gs
dec
jo
mov
add
inc
adc
fdivrs
jmp
bound
mov
rolb
mov
pop
sbb
add
or
pop
rolb
mov
add
testl
jnp
add
lods
adc
mov
add
mov
std
pop
dec
adc
mov
inc
add
outsl
xor
bound
mov
daa
add
mov
xchg
mov
ljmp
cli
jbe
sbb
adc
inc
adc
mov
inc
add
add
mov
mov
repnz
xchg
inc
add
adc
fmul
adc
mov
add
add
fnstsw
mov
aas
dec
sub
aaa
ret
mov
mov
mov
popf
rcrl
sbb
cltd
dec
jne
jge
cmpsl
push
adc
scas
dec
add
mov
sbb
in
jbe
addr16
test
add
mov
aam
pop
or
sbb
dec
bound
mov
add
daa
jle
mov
mov
mov
lds
mov
les
mov
add
adc
into
and
jg
xchg
movsl
dec
adc
push
sahf
xchg
fwait
or
je
pusha
add
mov
xor
add
add
jne
add
mov
jo
mov
mov
xchg
mov
mov
add
add
gs
mov
add
add
xchg
rorl
fsts
add
push
into
aas
aad
mov
and
outsb
push
lock
mov
gs
and
add
jmp
pop
xor
std
xor
pusha
add
cmp
mov
push
add
notb
xor
add
lods
jb
mov
dec
lea
jge
cmp
xlat
in
add
loope
dec
in
sbb
mov
mov
jmp
lret
sahf
jmp
bound
mov
jae
or
data16
fisubrs
lcall
add
rcll
cld
stos
push
adc
rolb
mov
push
or
rolb
mov
mov
mov
xchg
dec
and
mov
fnstenv
sbb
jge
mov
mov
clc
xor
mov
jb
mov
xchg
cmc
mov
jmp
lea
add
add
xchg
inc
sbb
add
ss
jno
bound
mov
mov
ds
mov
dec
out
ljmp
mov
aas
daa
mov
addb
ds
cld
push
in
addr16
xchg
add
das
das
fwait
xchg
arpl
out
es
mov
dec
cmc
jl
add
add
mov
add
adc
mov
lahf
out
mov
mov
adc
shll
add
add
mov
add
jecxz
cmc
inc
add
sti
add
mov
lock
mov
mov
sbbl
mov
fnstcw
rolb
lret
addb
xchg
bound
mov
mov
add
pop
test
lock
or
mov
and
mov
pop
cmp
add
add
or
add
lea
push
jmp
pop
adc
addl
add
mov
push
dec
enter
inc
rolb
mov
cmp
mov
movsl
mov
mov
fwait
rcll
push
rolb
mov
movsb
divl
jne
into
add
mov
nop
add
sahf
push
gs
sbb
sti
sbb
add
mov
add
mov
lahf
inc
add
dec
shr
cmp
mov
mov
dec
fs
xchg
test
ret
inc
loope
sbb
xor
mov
clc
repnz
nop
cld
jae
cmp
clc
repnz
nop
cld
jae
add
je
add
mov
iret
inc
add
in
ljmp
clc
repnz
nop
cld
jae
scas
incl
enter
inc
add
nop
nop
cld
jae
cmp
add
fldl
add
dec
sub
dec
out
add
fwait
add
popf
add
and
push
mov
xchg
ret
add
out
xor
push
mov
xchg
ret
add
imulb
xchg
mov
clc
repnz
nop
cld
jae
scas
xor
ljmp
jbe
push
mov
nop
leave
nop
jmp
add
add
in
jnp
nop
cld
jae
mov
xchg
lcall
cld
jae
out
push
fst
push
int
add
add
cld
jae
add
inc
add
add
nop
nop
cld
jae
mov
add
addb
scas
mov
push
mov
xchg
ret
add
push
sub
imul
mov
push
mov
nop
leave
nop
jmp
scas
je
add
inc
int
lods
and
imul
nop
leave
nop
jmp
scas
fiaddl
popf
mov
sbb
repnz
nop
cld
jae
stos
add
add
inc
lods
lea
clc
repnz
nop
cld
jae
add
inc
jge
rolb
mov
mov
add
push
mov
nop
leave
nop
jmp
add
add
mov
out
push
mov
nop
leave
nop
jmp
add
add
add
andl
add
repnz
nop
cld
jae
fldl
add
mov
clc
repnz
nop
cld
jae
add
fstl
add
and
cli
dec
add
dec
lds
clc
repnz
nop
cld
jae
push
add
lds
cmp
adc
mov
jno
clc
repnz
nop
cld
jae
out
add
cmp
lds
nop
nop
cld
jae
add
rolb
mov
add
clc
repnz
nop
cld
jae
sar
cmp
subb
clc
repnz
nop
cld
jae
add
mov
lcall
jae
stos
add
add
add
daa
cmp
xchg
fadds
xchg
ret
inc
add
out
mov
clc
repnz
nop
cld
jae
add
add
pop
call
clc
repnz
nop
cld
jae
add
orb
nop
cld
jae
pop
add
mov
decl
nop
cld
jae
inc
add
aaa
xchg
js
inc
push
mov
xchg
ret
add
xchg
hlt
mov
adc
add
insb
add
incl
add
add
popf
icebp
or
nop
nop
cld
jae
add
fiaddl
add
in
push
jmp
add
enter
jbe
add
add
mov
jmp
ficoml
enter
addb
mov
push
add
repz
sbb
mov
adc
repnz
nop
cld
jae
mov
mov
nop
cld
jae
out
jge
fwait
push
xor
repnz
nop
cld
jae
popa
inc
sub
push
insb
pop
push
mov
xchg
ret
inc
inc
addb
adc
push
mov
xchg
ret
incl
add
push
add
pop
outsl
mov
push
mov
xchg
ret
add
add
inc
jl
rcll
in
inc
add
add
push
add
jl
mov
mov
les
add
mov
add
push
mov
xchg
ret
inc
add
xchg
test
js
dec
cmp
mov
xchg
ret
ljmp
mov
push
mov
nop
leave
nop
jmp
scas
add
mov
clc
repnz
nop
cld
jae
cmp
mov
roll
xchg
ret
add
add
inc
jns
clc
repnz
nop
cld
jae
addb
add
add
add
clc
repnz
nop
cld
jae
add
mov
and
repnz
nop
cld
jae
pop
cmp
sub
jbe
mov
clc
repnz
nop
cld
jae
insb
mov
test
add
clc
repnz
nop
cld
jae
inc
add
jg
push
mov
nop
leave
nop
jmp
fcmovu
xchg
inc
add
pusha
clc
repnz
nop
cld
jae
subb
add
push
push
mov
xchg
ret
icebp
fiadds
inc
mov
sbb
repnz
nop
cld
jae
idiv
add
add
dec
addb
jmp
mov
inc
add
mov
mov
repnz
nop
cld
jae
add
outsl
inc
add
int
jo
mov
mov
nop
nop
cld
jae
out
add
add
mov
pop
cmc
inc
add
jge
outsl
inc
add
sub
push
add
clc
repnz
nop
cld
jae
inc
inc
add
dec
push
mov
nop
leave
nop
jmp
icebp
add
add
xor
mov
add
push
mov
nop
leave
nop
jmp
add
xor
aas
add
push
mov
xchg
ret
add
add
pusha
clc
repnz
nop
cld
jae
add
add
add
mov
nop
leave
nop
jmp
add
add
push
pushf
mov
clc
repnz
nop
cld
jae
out
add
pop
push
mov
xchg
ret
add
sub
add
sbb
dec
adc
add
inc
add
fnstsw
hlt
inc
mov
in
nop
leave
nop
jmp
add
in
cmp
rclb
mov
xchg
ret
pop
data16
inc
add
add
xor
add
clc
repnz
nop
cld
jae
add
xor
push
mov
nop
leave
nop
jmp
add
addb
stos
int3
mov
clc
repnz
nop
cld
jae
test
and
mov
and
push
mov
xchg
ret
add
fldl
test
cli
clc
repnz
nop
cld
jae
add
scas
add
clc
repnz
nop
cld
jae
sub
scas
enter
and
push
mov
xchg
ret
add
mov
xor
add
clc
repnz
nop
cld
jae
add
outsb
push
clc
repnz
nop
cld
jae
inc
test
add
imul
add
xor
add
jbe
test
mov
clc
repnz
nop
cld
jae
insb
fmulp
add
add
xchg
fsubrp
add
repnz
nop
cld
jae
sub
push
mov
xchg
ret
add
add
scas
add
add
popa
add
repnz
nop
cld
jae
add
mov
mov
push
mov
nop
leave
nop
jmp
inc
xchg
out
add
push
ret
fwait
push
clc
repnz
nop
cld
jae
scas
add
repnz
nop
cld
jae
add
scas
add
mov
repnz
nop
cld
jae
add
insb
add
cmp
test
add
clc
repnz
nop
cld
jae
xchg
pop
add
movzwl
clc
repnz
nop
cld
jae
testb
add
add
and
repnz
nop
cld
jae
add
add
inc
pop
pushf
mov
push
mov
xchg
ret
icebp
mov
test
or
test
mov
nop
leave
nop
jmp
jbe
int
add
clc
repnz
nop
cld
jae
mov
popa
movsl
not
pop
and
jmp
add
icebp
add
add
aaa
inc
add
inc
and
clc
repnz
nop
cld
jae
popa
int
frstor
clc
repnz
nop
cld
jae
addb
cmp
test
mov
repnz
nop
cld
jae
addb
fisttpll
push
mov
nop
leave
nop
jmp
testb
cmp
inc
and
clc
repnz
nop
cld
jae
add
add
mov
nop
cld
jae
inc
je
cmpb
in
punpckhdq
add
add
mov
add
adc
add
fldl
jge
jmp
add
add
enter
add
clc
repnz
nop
cld
jae
add
mov
adc
mov
pop
push
mov
xchg
ret
add
out
add
cmp
add
cmp
mov
fildll
inc
and
mov
nop
leave
nop
jmp
add
add
mulb
enter
add
push
mov
nop
leave
nop
jmp
cmp
add
mov
ret
push
mov
xchg
ret
pop
add
pop
test
add
xchg
in
inc
add
add
mov
push
mov
xchg
ret
je
add
or
dec
add
repnz
nop
cld
jae
add
add
incl
add
clc
repnz
nop
cld
jae
add
add
icebp
je
aam
pop
enter
clc
repnz
nop
cld
jae
add
add
add
add
mov
clc
repnz
nop
cld
jae
scas
add
repnz
nop
cld
jae
add
data16
add
clc
repnz
nop
cld
jae
test
cltd
mov
push
mov
nop
leave
nop
jmp
mov
repnz
add
repnz
nop
cld
jae
add
cmp
mov
xchg
ret
add
inc
add
loopne
mov
inc
clc
repnz
nop
cld
jae
fwait
add
xor
test
repnz
nop
cld
jae
add
pop
ficoml
cld
jae
add
add
add
fs
rolb
addb
loope
xchg
clc
repnz
nop
cld
jae
incl
add
xor
clc
repnz
nop
cld
jae
pop
mov
cmp
rclb
rolb
xchg
ret
add
add
enter
pop
clc
repnz
nop
cld
jae
stos
jmp
add
pop
add
push
clc
repnz
nop
cld
jae
add
jmp
mov
scas
fs
add
add
sbbb
adc
in
nop
leave
nop
jmp
incl
xor
subb
in
nop
leave
nop
jmp
inc
int
add
inc
or
in
nop
leave
nop
jmp
popa
popa
add
add
repnz
nop
cld
jae
add
mov
cmpb
add
repnz
nop
cld
jae
inc
add
add
add
clc
repnz
nop
cld
jae
pop
xchg
stos
add
in
nop
leave
nop
jmp
add
je
ja
mov
clc
repnz
nop
cld
jae
add
je
out
mov
add
clc
repnz
nop
cld
jae
popa
add
or
nop
nop
cld
jae
xchg
add
add
pop
cmp
repnz
nop
cld
jae
lcall
popl
add
pop
iret
je
clc
repnz
nop
cld
jae
popf
push
mov
add
sub
add
inc
jge
sbb
add
addb
inc
lret
mov
xchg
ret
sub
mov
add
push
mov
nop
leave
nop
jmp
fldl
jbe
xor
add
nop
leave
nop
jmp
add
add
add
add
sbb
nop
leave
nop
jmp
push
mov
fnsave
insl
mov
clc
repnz
nop
cld
jae
add
aam
add
clc
repnz
nop
cld
jae
sub
fsubs
popa
add
mov
xchg
ret
add
popf
sub
call
in
nop
leave
nop
jmp
add
sbb
jnp
dec
add
push
leave
inc
add
xchg
mulb
fisttpll
testb
cmp
ret
add
add
add
push
push
mov
nop
leave
nop
jmp
je
push
add
aas
mov
push
mov
xchg
ret
add
add
nop
cld
jae
xchg
subb
sub
push
mov
sahf
aaa
push
adc
loope
lods
mov
fbld
add
aam
rep
push
mov
nop
leave
nop
jmp
jge
add
add
test
nop
nop
cld
jae
push
add
int
add
or
clc
repnz
nop
cld
jae
add
cmp
mov
add
repnz
nop
cld
jae
add
push
pop
add
pusha
add
call
clc
repnz
nop
cld
jae
add
jg
clc
repnz
nop
cld
jae
sbb
xchg
mov
push
add
clc
repnz
nop
cld
jae
add
rol
inc
pop
pop
clc
repnz
nop
cld
jae
add
sub
jmp
fiadds
push
pop
scas
scas
add
jbe
cmp
mov
nop
leave
nop
jmp
popa
mov
and
cmp
inc
add
out
add
xor
add
ljmp
xbegin
jae
pop
push
add
fwait
out
outsl
div
clc
repnz
nop
cld
jae
incl
add
add
xchg
lds
into
and
clc
repnz
nop
cld
jae
add
add
add
and
add
in
nop
leave
nop
jmp
fstp
add
std
add
clc
repnz
nop
cld
jae
enter
push
mov
xchg
clc
repnz
nop
cld
jae
rolb
add
add
adc
je
push
adcb
mov
cmp
jmp
dec
add
mov
add
add
mov
mov
clc
repnz
nop
cld
jae
pop
mov
in
nop
leave
nop
jmp
add
shrb
add
jg
dec
adc
repnz
nop
cld
jae
inc
stos
add
add
adc
clc
repnz
nop
cld
jae
popa
add
jb
push
mov
nop
leave
nop
jmp
add
add
daa
fs
insb
pushl
clc
repnz
nop
cld
jae
add
pop
add
mov
outsb
jne
push
mov
nop
leave
nop
jmp
add
pop
imul
jmp
ljmp
add
cmp
push
mov
nop
leave
nop
jmp
sbb
mov
nop
nop
cld
jae
inc
mov
add
mov
cmpsb
sub
popa
push
mov
nop
leave
nop
jmp
addb
mov
clc
repnz
nop
cld
jae
inc
add
add
fcompl
repnz
nop
cld
jae
sbb
outsl
add
mov
mov
clc
repnz
nop
cld
jae
out
add
je
mov
jae
xchg
add
sbb
add
and
mov
jmp
nop
cld
jae
add
cmp
nop
leave
nop
jmp
add
add
negb
mov
clc
repnz
nop
cld
jae
mov
sub
and
clc
repnz
nop
cld
jae
add
stos
mov
add
add
add
repnz
nop
cld
jae
add
cmp
push
push
mov
xchg
ret
add
add
inc
cmp
add
inc
add
repnz
nop
cld
jae
add
dec
pusha
add
push
mov
nop
leave
nop
jmp
test
pop
add
add
mov
clc
repnz
nop
cld
jae
add
ljmp
nop
nop
cld
jae
enter
add
lcall
movzwl
clc
repnz
nop
cld
jae
add
add
add
add
repnz
nop
cld
jae
rolb
cmp
sub
add
leave
inc
add
subb
add
clc
repnz
nop
cld
jae
addb
add
fidivrs
repnz
nop
cld
jae
add
in
add
cmp
sar
nop
nop
cld
jae
mov
test
dec
push
clc
repnz
nop
cld
jae
add
add
sub
or
add
push
mov
nop
leave
nop
jmp
add
clc
repnz
nop
cld
jae
add
out
add
push
clc
repnz
nop
cld
jae
jbe
add
cmp
in
inc
xchg
lea
mov
nop
leave
nop
jmp
add
add
fldl
addb
aam
ljmp
cld
jae
pop
add
fldl
repz
mov
nop
leave
nop
jmp
jge
add
mov
mov
pop
mov
clc
repnz
nop
cld
jae
enter
rep
clc
repnz
nop
cld
jae
pop
jmp
imul
add
ljmp
add
lea
clc
repnz
nop
cld
jae
outsl
add
add
daa
xor
mov
cmp
add
sub
push
pop
xrelease
push
mov
nop
leave
nop
jmp
add
add
add
xchg
pop
adc
add
repnz
nop
cld
jae
stos
add
incl
cmp
add
add
ljmp
sub
test
repnz
nop
cld
jae
add
lcall
clc
repnz
nop
cld
jae
negb
add
popf
add
cmp
out
add
outsl
enter
add
add
xchg
inc
pop
push
push
mov
xchg
ret
add
sub
lds
cmp
repnz
nop
cld
jae
add
pop
sub
add
ret
push
and
clc
repnz
nop
cld
jae
add
cltd
ret
clc
repnz
nop
cld
jae
add
outsl
add
jmp
push
clc
repnz
nop
cld
jae
out
pop
add
mov
push
mov
nop
leave
nop
jmp
sub
ljmp
ret
add
jmp
cmp
ret
add
inc
push
mov
clc
repnz
nop
cld
jae
cmp
icebp
cmp
add
clc
repnz
nop
cld
jae
fidivrs
or
repnz
nop
cld
jae
add
cmp
sub
mov
xchg
ret
add
add
add
cmpb
clc
repnz
nop
cld
jae
add
sub
ss
add
data16
add
out
add
push
mov
xchg
ret
add
outsl
je
add
add
repnz
nop
cld
jae
add
outsl
inc
fiadds
add
clc
repnz
nop
cld
jae
fiadds
sub
mov
xchg
ret
jge
xchg
add
popl
incl
add
clc
repnz
nop
cld
jae
add
add
fisttps
out
inc
add
cmp
out
add
rolb
mov
nop
nop
cld
jae
jge
add
xchg
add
add
clc
repnz
nop
cld
jae
add
add
in
cmp
push
mov
nop
leave
nop
jmp
add
add
pusha
add
repz
imul
clc
repnz
nop
cld
jae
je
scas
cmp
pop
stc
push
clc
repnz
nop
cld
jae
test
fwait
add
sub
test
sub
jmp
nop
cld
jae
add
subl
sub
repnz
nop
cld
jae
cmp
inc
incl
cmp
add
push
mov
xchg
ret
add
xchg
ljmp
push
mov
nop
leave
nop
jmp
add
add
xchg
add
add
mov
nop
leave
nop
jmp
add
addb
add
pop
sub
clc
repnz
nop
cld
jae
add
fwait
pop
mov
mov
and
in
nop
leave
nop
jmp
add
int
cmp
add
inc
add
add
fiaddl
inc
fisubrs
rolb
mov
sahf
mov
clc
repnz
nop
cld
jae
popl
add
gs
div
push
mov
nop
leave
nop
jmp
popl
ljmp
xor
push
mov
xchg
ret
add
inc
inc
add
inc
mov
fs
insb
add
repnz
nop
cld
jae
dec
fstp
mov
ds
push
mov
xchg
ret
add
add
enter
pop
lods
jmp
add
mov
stos
add
pop
push
incb
nop
nop
cld
jae
inc
data16
sbb
or
jb,pt
push
mov
nop
leave
nop
jmp
sub
popa
div
shrl
dec
fldl
xchg
ret
add
pop
add
inc
ds
push
mov
xchg
ret
popf
add
xchg
fiadds
stos
add
mov
test
add
add
repnz
nop
cld
jae
xor
clc
repnz
nop
cld
jae
fisubrs
xchg
fildll
push
mov
nop
leave
nop
jmp
add
add
ljmp
clc
repnz
nop
cld
jae
add
add
scas
pop
mov
nop
nop
cld
jae
add
outsl
mov
add
clc
repnz
nop
cld
jae
add
pop
stos
clc
repnz
nop
cld
jae
add
test
add
insb
add
repnz
nop
cld
jae
xor
xchg
add
mov
add
clc
repnz
nop
cld
jae
add
and
lret
add
push
mov
xchg
ret
add
ljmp
pop
adc
outsl
int3
inc
add
inc
sub
scas
add
pusha
add
jmp
nop
nop
cld
jae
inc
add
cmp
add
clc
repnz
nop
cld
jae
inc
fnsave
cmp
or
repnz
nop
cld
jae
add
inc
popf
add
jmp
add
add
incl
inc
jge
jge
add
add
mov
xchg
ret
add
add
add
add
and
repnz
nop
cld
jae
ljmp
popl
push
mov
nop
leave
nop
jmp
add
add
mov
sub
lret
add
test
mov
mov
clc
repnz
nop
cld
jae
incl
xchg
mov
inc
or
mov
xchg
ret
popa
add
add
clc
repnz
nop
cld
jae
mov
jge
push
push
mov
xchg
ret
addb
add
ljmp
clc
repnz
nop
cld
jae
scas
add
add
scas
dec
push
mov
xchg
ret
add
pop
sub
add
xchg
mov
clc
repnz
nop
cld
jae
add
inc
out
add
push
clc
repnz
nop
cld
jae
fs
ljmp
mov
add
mov
xchg
ret
fwait
add
add
add
add
fnsave
clc
repnz
nop
cld
jae
insb
mov
add
incl
push
mov
nop
leave
nop
jmp
add
pop
add
je
push
mov
nop
leave
nop
jmp
sbbb
cli
add
push
mov
nop
leave
nop
jmp
add
add
add
clc
repnz
nop
cld
jae
add
ret
push
mov
xchg
ret
in
outsl
icebp
add
push
fidivrl
mov
xchg
ret
add
add
mov
push
push
mov
nop
leave
nop
jmp
sub
incl
mov
mov
lods
push
push
mov
nop
leave
nop
jmp
outsl
outsl
pop
addb
push
out
mov
mov
clc
repnz
nop
cld
jae
add
pop
add
add
push
mov
nop
leave
nop
jmp
add
add
add
call
in
nop
leave
nop
jmp
enterw
jne
clc
repnz
nop
cld
jae
sub
jb
mov
adc
mov
add
push
mov
nop
leave
nop
jmp
add
popa
mov
pop
clc
repnz
nop
cld
jae
add
add
test
cmp
xchg
xchg
test
cmpl
push
mov
nop
leave
nop
jmp
fiadds
xor
fwait
ss
movsl
das
xorl
push
mov
nop
leave
nop
jmp
je
xor
mov
xor
mov
add
push
mov
xchg
ret
add
cmp
popa
sub
adc
push
push
mov
nop
leave
nop
jmp
inc
outsl
add
add
fwait
mulb
add
clc
repnz
nop
cld
jae
dec
add
rolb
adc
cmp
loop
push
mov
nop
leave
nop
jmp
mov
popa
add
nop
cld
jae
add
jbe
lds
dec
xchg
push
mov
nop
leave
nop
jmp
fwait
popa
decl
xor
or
clc
repnz
nop
cld
jae
add
inc
add
add
add
jne
dec
mov
push
mov
xchg
ret
sub
in
pop
mov
push
mov
nop
leave
nop
jmp
mov
pop
add
repz
repnz
nop
cld
jae
icebp
push
inc
pop
add
dec
clc
repnz
nop
cld
jae
outsl
mov
add
cmp
mov
xchg
ret
add
mov
arpl
mov
nop
leave
nop
jmp
pop
icebp
add
rcl
ret
sub
dec
outsl
popa
fs
repnz
nop
cld
jae
out
add
mov
mov
clc
repnz
nop
cld
jae
inc
sbb
lret
cld
or
nop
leave
nop
jmp
add
ficompl
add
clc
repnz
nop
cld
jae
mov
fucomp
lcall
nop
cld
jae
xchg
scas
add
movzwl
clc
repnz
nop
cld
jae
add
add
add
mov
push
mov
nop
leave
nop
jmp
add
fiaddl
fwait
cmp
add
jmp
lcall
incl
add
icebp
add
je
sub
inc
push
addb
mov
nop
cld
jae
enter
add
add
xlat
test
xor
repnz
nop
cld
jae
subb
pop
push
clc
repnz
nop
cld
jae
add
mov
pop
clc
repnz
nop
cld
jae
scas
add
idiv
sub
xor
clc
repnz
nop
cld
jae
push
add
xchg
or
dec
imul
leave
nop
jmp
mov
jno
lds
popa
out
inc
add
jge
add
inc
call
cld
jae
data16
mov
adc
add
repnz
nop
cld
jae
popa
add
pop
dec
pop
push
mov
xchg
ret
add
add
insb
add
cmp
mov
nop
leave
nop
jmp
addb
pop
fiaddl
pop
push
clc
repnz
nop
cld
jae
add
push
test
sub
sar
repnz
nop
cld
jae
add
subb
mov
add
repnz
nop
cld
jae
mov
push
ljmp
nop
jmp
je
pop
add
add
dec
add
clc
repnz
nop
cld
jae
add
sub
xchg
add
push
mov
nop
leave
nop
jmp
out
inc
add
add
jmp
add
fiadds
add
add
imulb
outsl
loopne
repnz
nop
cld
jae
add
add
add
and
mov
mov
xchg
ret
add
rolb
add
add
add
leave
nop
jmp
test
cmp
push
mov
sbb
add
popa
add
xor
add
push
mov
nop
leave
nop
jmp
pop
add
push
add
mov
loopne
clc
repnz
nop
cld
jae
incl
add
nop
nop
cld
jae
inc
stos
ror
cmp
mov
xchg
ret
add
popa
add
ljmp
and
push
mov
xchg
ret
add
add
xchg
add
add
repnz
nop
cld
jae
in
add
imul
jmp
cmp
sbb
test
gs
popa
clc
repnz
nop
cld
jae
push
pop
add
add
adc
mov
xor
repnz
nop
cld
jae
add
jg
push
mov
nop
leave
nop
jmp
add
pop
add
fwait
add
add
add
add
add
add
add
cmp
scas
mov
push
mov
nop
leave
nop
jmp
out
outsl
xchg
insl
movzwl
push
mov
nop
leave
nop
jmp
pop
add
jnp
clc
repnz
nop
cld
jae
sub
mov
add
data16
mov
mov
add
clc
repnz
nop
cld
jae
add
push
filds
jne
push
mov
nop
leave
nop
jmp
add
add
inc
add
push
push
mov
nop
leave
nop
jmp
test
add
add
clc
repnz
nop
cld
jae
add
add
mov
inc
clc
repnz
nop
cld
jae
add
add
jge
mov
push
mov
xchg
ret
inc
pop
in
add
add
mov
pop
lea
clc
repnz
nop
cld
jae
xchg
addb
xchg
cmpl
cld
jae
pop
add
inc
and
clc
repnz
nop
cld
jae
add
mov
clc
repnz
nop
cld
jae
add
add
xchg
nop
leave
nop
jmp
add
jmp
add
jns
push
mov
xchg
ret
je
add
add
sub
add
pop
lock
add
outsl
popf
add
push
ret
or
test
nop
nop
cld
jae
pop
add
loop
mov
add
push
mov
xchg
ret
add
add
and
mov
add
repnz
nop
cld
jae
add
mov
xchg
ret
add
add
inc
add
in
add
add
and
cld
add
add
add
repnz
nop
cld
jae
add
jae
nop
nop
cld
jae
cmp
add
icebp
cmp
push
mov
xchg
ret
add
add
add
lea
push
mov
xchg
ret
cmp
mov
mov
fsubs
add
add
add
outsb
add
or
xor
add
mov
clc
repnz
nop
cld
jae
outsl
add
add
cmp
lret
add
add
pop
pop
mulb
add
nop
nop
cld
jae
shl
insb
fs
fisttps
test
repnz
nop
cld
jae
pop
add
mov
add
jge
inc
add
outsl
inc
add
ds
push
mov
nop
leave
nop
jmp
inc
add
push
jnp
shrl
repnz
nop
cld
jae
test
test
add
dec
push
mov
nop
leave
nop
jmp
addb
pop
cmp
add
sub
pop
push
mov
nop
leave
nop
jmp
jmp
add
add
xchg
add
repnz
nop
cld
jae
cmpb
stos
test
add
add
clc
repnz
nop
cld
jae
popa
cmp
mov
clc
repnz
nop
cld
jae
add
jge
cmc
mov
mov
adc
repnz
nop
cld
jae
add
pop
mov
clc
repnz
nop
cld
jae
fwait
add
sbbb
ret
push
mov
nop
leave
nop
jmp
xor
testb
lods
push
clc
repnz
nop
cld
jae
fnstsw
and
add
cwtl
and
clc
repnz
nop
cld
jae
pop
jge
add
outsl
add
push
mov
nop
leave
nop
jmp
inc
add
add
add
mov
mov
jno
jnp
push
mov
xchg
ret
mov
add
cmp
repnz
nop
cld
jae
add
rep
clc
repnz
nop
cld
jae
add
add
inc
add
mov
roll
xchg
ret
add
inc
out
subb
mov
faddl
in
nop
leave
nop
jmp
fwait
add
push
clc
repnz
nop
cld
jae
add
enter
add
mov
mov
mov
clc
repnz
nop
cld
jae
out
xchg
mov
clc
repnz
nop
cld
jae
inc
add
add
clc
repnz
nop
cld
jae
add
xchg
add
push
mov
nop
leave
nop
jmp
add
add
in
clc
repnz
nop
cld
jae
cmp
test
ljmp
jmp
add
int
test
add
icebp
icebp
add
inc
ljmp
nop
nop
cld
jae
inc
sub
ljmp
push
mov
nop
leave
nop
jmp
add
xchg
stos
addb
mov
clc
repnz
nop
cld
jae
scas
add
add
jl
clc
repnz
nop
cld
jae
add
add
repnz
nop
cld
jae
je
test
movsb
xchg
jp
iret
or
cld
jae
add
add
add
mov
mov
push
loopne
repnz
nop
cld
jae
add
fldl
out
inc
add
or
repnz
nop
cld
jae
cmp
jge
stos
and
mov
mov
add
push
mov
xchg
ret
popl
cmp
mov
clc
repnz
nop
cld
jae
int
icebp
add
fs
out
add
add
add
testb
push
sar
repnz
nop
cld
jae
lds
add
add
in
xchg
sahf
rep
clc
repnz
nop
cld
jae
sbb
ficoml
mov
and
clc
repnz
nop
cld
jae
sbb
test
fwait
push
inc
push
add
nop
nop
cld
jae
je
add
fs
mov
nop
nop
cld
jae
add
incl
jg
roll
add
clc
repnz
nop
cld
jae
fst
add
pop
pushf
jg
out
jge
inc
lret
add
pop
mov
cmp
push
mov
nop
leave
nop
jmp
add
incl
add
add
cmp
mov
xchg
ret
fcmovb
mov
neg
nop
push
mov
xchg
ret
add
sub
outsl
data16
xor
clc
repnz
nop
cld
jae
add
add
or
clc
repnz
nop
cld
jae
inc
add
pop
gs
lahf
and
clc
repnz
nop
cld
jae
add
test
pop
jne
clc
repnz
nop
cld
jae
addb
das
pushl
clc
repnz
nop
cld
jae
add
inc
fs
add
call
clc
repnz
nop
cld
jae
add
jbe
sti
mov
clc
repnz
nop
cld
jae
xchg
inc
pop
add
add
mov
push
mov
nop
leave
nop
jmp
incl
inc
xchg
push
pop
pop
push
clc
repnz
nop
cld
jae
add
add
add
xchg
add
push
mov
xchg
ret
add
fwait
add
fwait
add
add
push
mov
xchg
ret
add
add
rolb
add
je
clc
repnz
nop
cld
jae
push
insb
add
repnz
nop
cld
jae
add
add
add
clc
repnz
nop
cld
jae
sub
push
add
nop
cld
jae
add
fwait
inc
out
stos
fwait
aad
xor
clc
repnz
nop
cld
jae
add
xor
test
add
repnz
nop
cld
jae
add
incl
push
mov
xchg
ret
rolb
xchg
adc
mov
jo
pushf
jae
add
and
flds
xorl
add
clc
repnz
nop
cld
jae
negb
add
add
clc
repnz
nop
cld
jae
add
dec
add
dec
mov
clc
repnz
nop
cld
jae
add
add
clc
repnz
nop
cld
jae
outsl
dec
je
pushw
xchg
sbb
loop
add
sub
add
xchg
mov
in
add
inc
add
push
add
push
clc
repnz
nop
cld
jae
add
addb
subl
push
mov
xchg
ret
mov
ljmp
add
repnz
nop
cld
jae
mov
add
clc
repnz
nop
cld
jae
mov
dec
ret
iret
mov
clc
repnz
nop
cld
jae
fidivrl
mov
xchg
pop
add
clc
repnz
nop
cld
jae
fldl
mov
repnz
nop
cld
jae
push
jbe
test
call
mov
fisttps
test
repnz
nop
cld
jae
add
mov
clc
repnz
nop
cld
jae
int
add
mov
jne
clc
repnz
nop
cld
jae
incl
pop
mov
push
mov
nop
leave
nop
jmp
add
adc
add
scas
xor
push
mov
nop
leave
nop
jmp
add
inc
add
xchg
push
mov
push
mov
xchg
ret
test
add
scas
insb
inc
fsubrp
rep
clc
repnz
nop
cld
jae
popa
ljmp
test
nop
cld
jae
add
add
add
push
mov
mov
push
mov
xchg
ret
push
mov
sbb
mov
nop
cld
jae
add
negb
inc
xchg
arpl
add
clc
repnz
nop
cld
jae
inc
pop
add
push
push
mov
xchg
ret
sub
enter
mov
add
mov
nop
leave
nop
jmp
add
pop
je
push
mov
nop
leave
nop
jmp
add
add
add
repnz
nop
cld
jae
add
inc
cmp
mov
add
cwtl
out
inc
add
mov
data16
insl
loopne
add
fwait
add
pop
inc
push
adc
mov
clc
repnz
nop
cld
jae
int
fiadds
test
cmp
clc
push
mov
nop
leave
nop
jmp
add
ficompl
addl
pusha
push
mov
xchg
ret
lds
fwait
insb
pop
sarl
jns
clc
repnz
nop
cld
jae
push
add
add
sub
nop
nop
cld
jae
add
sub
push
pop
jmp
add
add
je
add
incl
fimuls
popa
fucomip
pop
add
nop
nop
cld
jae
pop
pop
push
out
jmp
addb
add
ljmp
ljmp
sub
inc
add
pop
add
insb
fdivrp
mov
add
xchg
push
mov
xchg
ret
add
test
test
mov
mov
clc
repnz
nop
cld
jae
push
in
push
cltd
mov
clc
repnz
nop
cld
jae
pop
push
add
dec
cmp
repnz
nop
cld
jae
inc
add
add
xor
add
push
mov
nop
leave
nop
jmp
inc
add
add
and
repnz
nop
cld
jae
add
test
mov
jne
clc
repnz
nop
cld
jae
add
rclb
in
nop
leave
nop
jmp
sub
add
clc
repnz
nop
cld
jae
scas
push
add
add
movsl
inc
add
pop
push
mov
xchg
ret
incl
xchg
add
mov
repz
repnz
nop
cld
jae
stos
inc
enter
data16
mov
dec
push
mov
nop
leave
nop
jmp
add
add
add
dec
or
mov
nop
leave
nop
jmp
out
add
add
or
popa
add
mov
nop
leave
nop
jmp
insb
add
addb
cmp
nop
cld
jae
pop
add
inc
fsubrp
add
nop
nop
cld
jae
test
add
add
mov
outsb
enter
push
mov
lea
mov
lods
push
mov
xchg
xchg
and
add
icebp
jo
pop
loope
sbb
mov
nop
leave
nop
jmp
test
mov
clc
repnz
nop
cld
jae
mov
inc
dec
cwtl
xor
push
mov
xchg
ret
test
sbb
sub
add
add
clc
repnz
nop
cld
jae
add
dec
sub
aam
inc
add
inc
data16
cmp
movsl
adc
add
sub
in
nop
leave
nop
jmp
add
movsb
icebp
push
lret
push
mov
and
inc
add
pop
add
add
add
or
mulb
mov
clc
repnz
nop
cld
jae
fwait
add
shl
add
mov
push
mov
nop
leave
nop
jmp
add
add
cmp
add
in
nop
leave
nop
jmp
mov
add
jne
push
mov
xchg
ret
add
add
out
add
or
inc
add
incl
add
add
test
push
rcrl
repnz
nop
cld
jae
add
add
out
add
and
mov
mov
clc
repnz
nop
cld
jae
push
ficompl
xor
clc
repnz
nop
cld
jae
mov
pop
shrl
out
add
add
in
nop
leave
nop
jmp
add
movswl
clc
repnz
nop
cld
jae
add
add
mov
clc
repnz
nop
cld
jae
mov
add
mov
clc
repnz
nop
cld
jae
or
add
xor
or
mov
nop
leave
nop
jmp
mov
orps
or
inc
add
cmp
add
cmp
leave
push
mov
nop
leave
nop
jmp
add
cmpsl
xor
mov
dec
cmp
repnz
nop
cld
jae
in
fwait
xchg
add
ljmp
nop
leave
nop
jmp
pop
add
and
clc
repnz
nop
cld
jae
fwait
add
mov
clc
repnz
nop
cld
jae
xchg
add
mov
nop
nop
cld
jae
add
fwait
cmp
je
add
repnz
nop
cld
jae
add
mov
repnz
clc
repnz
nop
cld
jae
xor
add
jle
push
mov
xchg
ret
add
addb
add
test
idiv
clc
repnz
nop
cld
jae
out
add
dec
push
mov
add
movq
aam
imul
add
add
add
lcall
nop
jmp
cmp
add
add
adc
clc
repnz
nop
cld
jae
outsl
addb
add
add
mov
clc
repnz
nop
cld
jae
add
dec
test
push
mov
xchg
ret
mov
sbb
add
cmpsb
xchg
push
mov
xchg
ret
sub
inc
add
xchg
pop
push
mov
xchg
ret
add
incl
enter
repnz
nop
cld
jae
add
popf
xchg
add
add
mov
clc
repnz
nop
cld
jae
add
add
add
loope
mov
nop
leave
nop
jmp
add
insb
popf
add
call
in
nop
leave
nop
jmp
pop
inc
fildl
daa
out
add
outsl
pop
inc
popa
add
add
mov
push
clc
repnz
nop
cld
jae
add
addb
push
jo
mov
mov
push
mov
xchg
ret
sbb
mulb
inc
clc
repnz
nop
cld
jae
add
add
fnstsw
addb
mov
jge
clc
repnz
nop
cld
jae
cmp
add
add
movl
jae
add
icebp
add
ljmp
in
nop
leave
nop
jmp
add
out
add
pop
mov
clc
repnz
nop
cld
jae
mov
ljmp
repnz
nop
cld
jae
lds
ljmp
clc
repnz
nop
cld
jae
add
add
decl
nop
cld
jae
pop
add
pop
sbb
mov
jmp
lcall
sub
add
add
adc
push
mov
xchg
ret
cmp
int
test
mov
xchg
ret
scas
add
add
mov
add
push
mov
xchg
ret
add
inc
push
test
idivl
clc
repnz
nop
cld
jae
jge
cmp
clc
repnz
nop
cld
jae
xchg
popa
incl
add
mov
and
mov
add
clc
repnz
nop
cld
jae
push
fwait
data16
dec
mov
push
mov
xchg
ret
add
popaw
add
add
inc
add
xor
insb
add
add
repnz
nop
cld
jae
sub
dec
pop
test
push
mov
nop
leave
nop
jmp
mov
add
loope
mov
push
mov
xchg
ret
add
shr
in
add
add
push
mov
nop
leave
nop
jmp
add
add
mov
call
and
fiadds
incl
rolb
call
nop
cld
jae
cmp
xchg
outsl
add
xchg
fwait
push
jb
mov
adc
inc
add
popa
mov
add
decl
jmp
add
cmp
add
mov
add
dec
add
repnz
nop
cld
jae
jge
sub
popa
jl
push
mov
xchg
ret
xchg
push
add
shl
add
mov
add
clc
repnz
nop
cld
jae
scas
insb
xor
mov
sahf
add
mov
jl
lods
das
test
ljmp
cmp
ret
lret
in
bswap
sbb
mull
sbb
aad
fisubl
jnp
js
addb
push
add
jmp
and
add
mov
inc
add
mov
test
dec
dec
jl
leave
addb
mov
mov
add
sub
add
mov
dec
mov
lret
imul
daa
mov
ffreep
add
out
jmp
rolb
mov
mov
mov
add
inc
out
pop
adc
push
addb
nop
add
pop
push
lret
push
add
repz
fmull
jl
cwtl
lods
inc
and
mov
add
in
xor
or
mov
add
add
jmp
iret
push
loop
mov
out
je
add
mov
ja
incl
add
mov
out
pop
dec
les
xor
mov
adc
mov
clc
ja
jns
daa
ret
mov
inc
add
mov
addb
inc
fs
insb
or
push
das
mov
mov
add
stc
rolb
mov
add
add
add
mov
mov
jns
add
adc
jmp
sti
out
add
mov
gs
jecxz
cmc
je
addr16
dec
sbb
sahf
stos
paddsw
fwait
outsb
or
xor
inc
sub
fnsave
mov
clc
mov
adc
xlat
stos
inc
push
inc
mov
push
lea
lods
jnp,pn
lfs
jne
sub
push
inc
cmpsl
test
add
add
loop
mov
add
fwait
cld
xor
into
divb
xchg
fistl
add
out
sahf
sub
xor
mov
add
mov
push
outsb
sbb
cld
push
int3
jbe
call
dec
cmp
cmp
outsl
pop
lret
popa
dec
add
mov
mov
jo
mov
leave
push
aas
fstl
add
mov
adc
addr16
add
loopne
mov
mov
xor
loopne
mov
pop
loop
mov
dec
or
loop
mov
pop
cmpsl
sub
jns
ffree
add
dec
hlt
xchg
xor
mov
add
mov
dec
and
mov
dec
pushf
rolb
mov
push
mov
mov
cli
ret
scas
push
sbb
xchg
out
out
add
pop
jb
mov
fcoml
xchg
loope
xchg
jmp
mov
adc
fcompl
xchg
pop
mov
mov
roll
aas
push
or
or
lahf
xchg
push
jb
mov
mov
push
int
mov
and
popa
xchg
mov
lods
xor
daa
sbb
push
outsb
mov
mov
divl
add
testb
cmc
push
inc
mov
mov
xor
call
sbb
pop
add
dec
xchg
in
add
testb
inc
or
in
push
gs
cmp
push
xor
mov
bound
mov
add
mov
adc
outsl
cmc
and
adc
adc
imul
lds
push
sub
pushl
imul
unpcklps
out
push
mov
jnp
flds
mov
push
rolb
mov
jl
cmp
jbe
xchg
or
loop
mov
outsl
in
lds
adc
sub
add
push
sub
mov
mov
pop
mov
idiv
mov
ljmp
add
ret
je
ljmp
xchg
call
jne
pop
sbb
stc
xor
lock
jmp
add
sbb
lods
xlat
jnp
pop
imul
jo
mov
xchg
sbb
push
lcall
sbb
add
test
sbb
mov
mov
inc
add
aas
nop
add
popf
outsl
push
gs
pop
pop
sbb
pop
lock
xor
mov
dec
lea
aas
push
dec
mov
ffreep
mov
push
push
ss
jmp
test
in
insl
out
das
add
repz
mov
cmp
xchg
in
out
mov
mov
getsec
fisubrs
lea
adc
mov
add
aad
mov
mov
mov
ret
aam
js
mov
xchg
roll
xchg
push
ljmp
fidivs
dec
fwait
add
mov
rcl
lahf
xor
mov
mov
mov
sbb
sbb
mov
sub
popa
or
mov
hlt
and
cmp
add
mov
xchg
aad
push
ljmp
mov
mov
call
pop
mov
add
jg
inc
dec
jnp
push
adc
mov
add
cmpsb
xchg
testl
rcl
lods
icebp
sbb
xor
xchg
and
add
cwtl
inc
add
push
insl
jge
add
push
add
rolb
mov
push
or
outsb
faddl
in
jge
jno
add
mov
mov
mov
adc
mov
or
jmp
aam
add
dec
xchg
add
imul
stc
roll
js
out
add
mov
push
jle
ds
scas
add
scas
stos
cmp
push
push
and
fistpl
xor
sub
ss
inc
mov
test
cmc
cmp
push
ret
mov
add
mov
stos
adc
add
add
ljmp
push
xchg
mov
xor
jbe
rolb
fstpt
rolb
mov
add
add
cmp
mov
test
add
ret
adc
mov
xchg
enter
mov
add
std
rcll
call
jg
push
push
jg
outsl
leave
fcomps
sub
mov
mov
push
push
sub
add
or
into
ret
ljmp
scas
mov
mov
popf
adc
mov
jbe
add
add
xchg
mov
rolb
mov
cmp
daa
mov
add
sbb
add
mov
mov
insb
mul
mov
psrad
mov
and
mov
out
scas
ja
leave
bound
mov
sbb
add
stos
ficomps
stos
mov
mov
inc
roll
ret
scas
insb
stos
pop
or
mov
mov
push
aam
je
hlt
jle
xchg
gs
test
call
fs
mov
rolb
xor
xchg
add
mov
repz
addb
mov
ret
idivl
push
cltd
out
xor
add
mov
jp
sub
inc
mov
mov
sbb
add
out
jnp
loopne
mov
add
add
imul
int3
mov
adc
mov
lahf
aad
dec
cmpsb
insl
aaa
sahf
sub
mov
andl
sahf
mov
imul
mov
gs
or
je
mov
test
add
sahf
push
jge
rcrl
xor
xchg
cmp
icebp
jns
lahf
fs
add
lahf
jo
mov
insl
cmpsb
mov
or
daa
adc
ja
or
mov
bound
mov
shr
cmp
ss
leave
addr16
cmp
or
pminub
shll
loopne
mov
mov
mov
test
push
push
mov
cmpsl
or
jmp
ficoml
jl
outsb
popf
push
inc
cmp
mov
mov
pop
xchg
xchg
add
out
add
sub
icebp
negb
rolb
mov
cmc
test
xchg
mov
repz
addr16
push
scas
sti
in
mov
call
ljmp
das
ljmp
inc
pushf
mov
addr16
add
add
mov
mov
sahf
daa
nop
add
pop
outsl
test
mov
inc
adc
aas
and
jge
sbb
mov
mov
jle
aaa
rolb
mov
xor
push
pop
pop
mov
mov
lods
xor
add
mov
test
mov
push
rolb
mov
sbb
mov
mov
cmp
add
outsb
mov
mov
xchg
lret
stos
fisubrl
ret
mov
lods
out
push
inc
add
sbb
loop
mov
outsb
lret
sub
and
mov
pop
out
pop
sbb
testb
xchg
mov
pop
xor
mov
mov
mov
mov
or
mov
cmc
mov
mov
add
add
mov
pop
int
sbb
movhps
imul
mov
aad
mov
add
lret
push
jbe
xchg
add
add
add
mov
icebp
pop
adc
mov
shl
add
dec
mov
mov
dec
and
pop
fisttpll
xchg
push
mov
add
in
xor
test
mov
add
popf
mov
add
movsl
sub
icebp
lcall
rolb
mov
mov
sbb
jl
xchg
or
add
mov
add
dec
and
aam
dec
jle
in
dec
xor
pop
jae
bound
mov
mov
lcall
add
and
test
mov
outsb
or
mov
add
mov
jmp
loope
inc
add
sahf
and
add
mov
clc
iret
jp
pop
insl
mov
pop
imul
adc
inc
mov
xchg
add
pop
je
add
int
add
imul
pop
push
leave
sbb
cwtl
sbb
mov
sti
popf
cmp
sahf
xchg
add
mov
imul
jne
fstpt
out
lds
ret
inc
and
push
xchg
add
dec
stc
xor
mov
and
fwait
add
add
mov
icebp
push
pop
je
dec
sbb
repz
add
enter
mov
add
insb
mov
mov
and
xor
mov
mov
in
inc
addb
addb
lret
add
aam
push
les
mov
sets
mov
add
add
sub
sbb
cmp
mov
add
and
dec
cmp
add
add
pusha
add
inc
cmp
add
add
aad
mov
add
mov
add
mov
add
xor
xchg
mov
mov
mov
sbb
push
push
enter
mov
add
gs
clc
mov
pinsrw
add
mov
cmp
add
jae
add
mov
jns
nop
add
mov
jge
dec
loopne
mov
and
cmp
mov
loope
pop
stc
cwtl
xchg
aad
add
push
cmp
add
mov
jb
mov
mov
add
mov
mov
lods
fsts
xchg
dec
fldcw
add
add
mov
mov
push
cmp
out
in
in
lds
jae
inc
out
and
mov
and
rorl
insl
sbb
mov
dec
add
inc
mov
or
stos
fcompl
mov
mov
mov
test
mov
ljmp
scas
sub
into
push
lods
mov
test
or
add
xor
add
inc
add
mov
cmpsl
dec
cs
sbb
leave
pop
mov
inc
hlt
add
loope
inc
sahf
std
jl
sbb
mov
mov
add
aad
add
rolb
mov
mov
lds
movsl
pop
push
dec
push
and
mov
movl
les
ja
and
fs
mov
or
jl
dec
int
xchg
or
out
dec
int3
and
mov
sub
or
or
add
mov
mov
pushf
cwtl
insl
inc
add
add
jns
jae
xor
std
inc
add
mov
mov
mov
andl
mov
mov
enter
lds
cmp
add
jmp
push
add
cli
cld
cmp
enter
arpl
fiadds
cs
mov
jae
into
mov
mov
mov
push
or
mov
loope
add
inc
ljmp
jl
jmp
enter
fdiv
movsb
scas
cmp
pop
out
insb
add
je
fsubs
add
add
addr16
pop
scas
pop
repnz
out
cwtl
mov
je
jo
mov
std
cmp
lds
pop
arpl
sub
mov
add
call
mov
adc
mov
hlt
push
aas
inc
dec
adc
mov
jl
out
fs
fldt
dec
jnp
in
dec
int
jge
mov
add
clc
outsl
testl
add
add
mov
test
sbb
add
or
sbb
jno
in
addb
or
add
mov
jns
fnsave
mov
add
clflush
xchg
dec
adc
add
add
dec
fmuls
fwait
out
pushf
movsl
xchg
sbb
leavew
imul
les
inc
into
and
add
clc
in
xor
pushf
imul
sbb
sub
mov
add
jl
add
add
push
add
xlat
cmp
adc
mov
imul
sub
aam
jbe
add
add
xor
mov
lock
mov
mov
mov
jge
in
jne
lds
add
push
adc
mov
sarl
ss
aam
add
add
mov
fwait
ret
mov
xor
mov
mov
mov
cli
and
mov
jmp
add
repz
mov
rolb
mov
mov
or
je
push
sub
xchg
add
xor
mov
bswap
out
sbb
int
inc
add
mov
fs
lret
add
fisttpll
add
sbb
insb
mov
add
mov
aam
rolb
bound
mov
add
ret
mov
in
cwtl
push
and
daa
inc
add
jp
int3
xchg
and
mov
mov
mov
mov
add
lock
cld
inc
insl
setp
jp
add
stc
ffreep
jns
add
mov
mov
bound
mov
jp
mov
add
rolb
jge
cmpsl
rolb
xchg
mov
sub
mov
add
add
push
cmpl
xchg
xchg
xchg
fsubl
add
aam
jmp
lret
ds
aad
push
outsl
call
notb
inc
add
test
mov
ljmp
out
rolb
mov
mov
jmp
addb
bound
mov
mov
mov
cs
push
out
clc
sub
pop
adc
add
pusha
add
cmp
mov
bound
mov
inc
out
gs
loopne
mov
ss
jl
jl
add
or
pop
push
in
push
sbb
jbe
mov
ret
movsb
adc
dec
iret
in
daa
mov
mov
xor
mov
push
add
pushf
add
jns
mov
sbb
xor
mov
add
cmp
repz
repz
leave
rcll
testb
sbb
test
test
aaa
mov
mov
or
clc
je
addr16
rolb
mov
mov
mov
loopne
mov
cmp
cmp
push
mov
rolb
mov
adc
jns
jo
mov
shrl
mov
mov
push
js
xchg
add
imul
xchg
addr16
push
dec
jp
lds
cmp
jbe
addr16
lahf
or
lcall
sahf
fcomp
sbb
sub
lret
mov
mov
roll
inc
add
add
mov
push
add
xchg
inc
addb
push
outsl
sbb
das
int3
mov
mov
pusha
add
push
sub
add
mov
int3
add
mov
inc
cmp
jae
sbb
add
cmp
mov
add
outsl
addb
addb
cltd
xor
fsubr
jnp
inc
add
aam
insb
in
add
lock
cmc
sbb
mov
dec
in
stc
and
mov
mov
lret
cmp
std
dec
push
xchg
sub
add
in
movsb
hlt
iret
xor
jmp
loopne
mov
out
sub
add
sbb
lds
stc
xor
mov
mov
push
add
in
sbb
stos
add
mov
lds
push
rolb
mov
dec
repnz
lds
leave
cltd
sub
out
add
cld
jne
pop
and
mov
pop
push
pushl
ret
xchg
lds
sbb
lahf
dec
jnp
cmp
or
add
fs
dec
rolb
pusha
add
sti
jae
and
fcoml
ss
fldcw
stos
sarl
les
mov
add
mov
bound
mov
idiv
fidivl
add
add
xor
mov
jg
xor
cmc
xchg
ljmp
add
das
or
gs
add
and
in
xchg
mov
int
mov
loop
mov
mov
mov
jno
xchg
mov
lods
iret
stos
xchg
ljmp
inc
add
cmp
iret
push
sahf
jg
dec
mov
or
and
mov
mov
movsb
sub
xor
add
ret
cmp
add
mov
or
cwtl
mov
add
mul
out
popf
es
inc
scas
leave
ja
out
xor
addb
loopne
mov
mov
jno
sbb
dec
sbb
mov
sbb
cs
push
mov
mov
pop
shll
addr16
push
add
test
push
loope
add
pop
pop
loop,pt
mov
push
add
cmp
add
aam
sub
in
sub
add
ficoml
lcall
filds
inc
lcall
mov
je
call
cmp
stos
dec
xor
add
jl
lret
mov
add
ja
dec
shll
in
jp
in
jbe
add
jp
decb
js
push
repz
xor
popf
loop
mov
add
sbb
test
add
stc
pop
push
add
mov
mov
cli
mov
mov
xchg
add
xchg
addb
stos
xchg
add
lahf
out
dec
repnz
add
test
mov
cmpsb
adc
mov
pop
sbb
add
add
add
cld
xchg
push
dec
jl
int3
ss
iret
mov
or
std
ret
idiv
xor
dec
mov
add
add
cmp
cmpsb
rolb
mov
std
sbb
cld
add
mov
mov
add
add
cmpsb
adc
hlt
into
addb
cwtl
mov
inc
add
movsb
sbb
add
mov
std
arpl
xchg
loop
mov
leave
jno
sti
movsb
mov
jb
mov
imul
orl
arpl
add
mov
push
addb
stos
les
movsb
lods
sub
jle
mov
int3
or
jecxz
sub
add
ja,pt
add
out
add
mov
loope
cwtl
sbb
add
ret
sub
fmuls
add
sahf
mov
add
mov
push
sbb
add
cmp
mov
and
mov
cmpsb
aas
rolb
mov
mov
fcoml
mov
fldcw
add
scas
pusha
add
cs
addr16
and
mov
mov
or
pop
sub
mov
je
push
dec
insb
sbb
add
add
lock
sbb
add
stos
push
ret
cmpsb
mov
daa
mov
mov
movsb
cmp
out
add
mov
in
notb
xlat
test
mov
mov
add
sbb
aas
xchg
sub
pop
add
add
mov
test
mov
ljmp
gs
jne
add
add
cmp
roll
in
iret
xchg
xor
mov
push
loop
mov
inc
enter
mov
orl
mov
add
mov
rolb
mov
add
or
mov
out
repnz
mov
mov
push
add
sti
orl
cmp
dec
clc
out
sub
mov
xchg
xor
mov
rorl
fnstenv
adc
mov
sub
imul
xchg
iret
cmp
bound
mov
sbb
mov
outsb
xchg
ret
xor
add
xor
fistl
out
mov
mov
js
add
call
int3
sbb
and
rolb
push
push
adc
mov
ret
pop
aad
test
fdivrl
and
cli
xchg
mov
mov
mov
mov
mov
inc
add
inc
push
lods
mov
sbb
data16
jl
xor
out
mov
add
fs
push
dec
bound
mov
mull
pop
ja
dec
adc
lahf
and
mov
or
or
mov
rolb
mov
pop
ret
pusha
add
out
repz
xor
mov
in
test
fdiv
add
add
add
and
add
leave
imulb
lds
xchg
sbb
and
mov
pop
pop
xchg
or
sarl
enter
mov
fstpl
xor
lcall
cmp
enter
mov
repnz
lods
into
mov
aam
fs
andl
repz
mov
jle
ret
out
loope
inc
mov
mov
add
mov
sub
lds
ss
imul
add
add
mov
bound
mov
adc
pop
ss
out
adc
mov
pop
or
push
iret
cmpsl
cwtl
cld
imul
add
sti
cmp
mov
cld
ss
add
add
pop
shll
mov
outsl
aas
jno
jae
orl
outsb
repz
dec
jmp
mov
mov
out
dec
jmp
add
aaa
out
adc
stc
pushf
sub
mov
hlt
inc
movsb
pop
cmc
dec
xchg
fidivs
stc
mov
sub
js
add
clc
push
pop
pop
icebp
inc
add
mov
shll
fldl
mov
mov
loopne
mov
dec
je
add
sti
pop
addb
insl
popf
and
or
add
add
xchg
js
ret
pop
cld
adc
mov
arpl
xor
sub
mov
in
mov
mov
addr16
mov
and
add
add
inc
std
lods
mov
add
add
lods
xchg
pop
ss
lahf
push
add
std
cltd
cld
and
push
pop
or
add
jno
fnstsw
xchg
add
pandn
aaa
das
pushf
int3
jnp
add
ja
dec
adc
mov
jl
pop
pusha
add
in
ja
testl
and
lahf
jns
add
and
xor
cmc
scas
sub
add
xchg
mov
add
pop
mov
lea
pusha
add
dec
roll
mov
into
fwait
divb
pop
mov
mov
fs
and
fdivp
sub
xor
add
popa
mov
mov
les
mov
inc
add
cmp
sarl
mov
pushf
cli
jl
jne
mov
xchg
arpl
adc
lea
lods
test
rolb
mov
dec
mov
imul
jno
rolb
mov
pusha
add
sti
ret
mov
icebp
push
dec
xchg
sub
mov
add
cmp
mov
out
nop
add
dec
mov
loopne
mov
add
in
and
dec
ss
aas
jg
imul
movsl
pop
sbb
lea
out
test
test
insl
sbb
cmpl
mov
xlat
xchg
add
iret
orl
dec
fbstp
aas
xlat
xor
mov
jg
stos
xlat
xor
mov
fnclex
add
mov
xchg
or
adc
mov
add
pushf
or
scas
sbb
adc
mov
in
and
mov
notl
and
add
pushf
sub
hlt
xor
popa
test
add
cmpsl
cwtl
sar
adc
mov
outsb
insb
xchg
add
adc
jg
and
int3
out
lock
xchg
mov
mov
xchg
add
mov
pop
inc
add
adc
dec
mov
lock
mov
insb
xor
aad
movsb
cmc
fcmovne
jno
add
mov
pop
sbb
add
mov
mov
mov
incb
mov
mov
or
cmp
test
add
cmp
add
mov
push
push
push
fisubrl
push
add
pop
stos
jmp
add
mov
mov
loopne
mov
int3
cmp
call
icebp
imulb
idivb
push
popf
fidivl
test
mov
xor
cmpsb
mov
testl
jb
mov
or
add
pop
fs
xchg
jle
scas
cltd
and
inc
loop
mov
jbe
out
add
mov
mov
mov
mov
mov
add
push
cmp
rolb
mov
mov
into
mov
loope
in
xor
mov
xor
mov
rorl
add
mov
divl
add
or
nop
add
mov
add
cmp
sbb
dec
cs
add
rcr
ljmp
dec
gs
add
neg
xchg
dec
xchg
cld
test
push
mov
jns
lret
mov
push
add
xor
mov
lods
faddl
insb
lcall
add
mov
push
add
add
mov
rcl
out
add
sbb
out
push
mov
test
push
pop
lea
movsb
rolb
mov
fidivs
add
add
add
mov
mov
mov
daa
cli
ss
rolb
dec
jae
mov
je
nop
add
add
mov
mov
addb
ss
adc
mov
repz
int3
mov
sub
mov
mov
and
iret
mov
add
in
add
add
push
xchg
add
das
or
stos
js
mov
lcall
jmp
dec
lods
mov
fisttpl
mov
es
mov
out
sub
mov
xchg
pop
cli
pusha
add
imul
insb
push
cmc
mov
mov
add
mov
int3
jnp
xchg
inc
add
in
mov
and
mov
jl
push
xchg
mov
mov
add
cmpsb
iret
dec
dec
arpl
xchg
sbb
adc
add
pop
xchg
add
movsb
push
inc
imul
add
push
mov
mov
not
lds
das
jne
xor
out
cli
inc
add
icebp
mov
add
mov
xor
mov
jl
jo
mov
mov
mov
add
pusha
add
add
in
arpl
add
add
js
add
add
mov
mov
add
add
cmp
inc
add
fwait
test
mov
xor
xchg
xchg
add
jle
sub
add
mov
imul
aam
dec
data16
shr
movsl
cmp
mov
add
jno
jmp
add
xchg
out
mov
cmp
mov
jge
xchg
sub
dec
adc
add
or
mov
pop
pop
xchg
dec
addl
fistps
sti
and
sub
pop
enter
push
in
ljmp
mov
xchg
add
das
sbb
mov
add
pop
sbb
cmc
fs
jecxz
add
sbb
mov
sbb
xlat
or
inc
jg
or
fwait
in
mov
add
add
and
add
aad
je
or
mov
add
add
push
pmulhw
sti
aad
arpl
add
mov
pop
xchg
sub
jg
jnp
mov
bound
mov
push
fwait
mov
dec
mov
in
and
mov
xlat
and
and
mov
sbb
rcrl
lods
into
fstpl
pmulhuw
jecxz
cmp
mov
push
cmp
inc
shrl
jg
lahf
leave
movsl
addb
int3
mov
mov
inc
and
mov
fildl
in
push
pop
scas
adc
mov
jl
jbe
rolb
mov
add
add
shll
mov
roll
add
rcrl
fisubs
test
js
aaa
sti
push
ret
aam
cmc
les
psubb
add
add
mov
roll
xchg
int
pushf
dec
xchg
out
mov
out
mov
lret
add
mov
add
cmc
jno
dec
lock
dec
sbb
xlat
jne,pn
add
lcall
iret
imul
fsubl
mov
jp
es
js
pop
inc
call
decl
leave
xor
mov
mov
dec
dec
sub
mov
daa
lock
add
mov
jae
lret
dec
mov
sub
jle
scas
inc
add
add
sub
test
mov
xor
pop
leave
rcll
fisubrl
mov
repnz
add
fcmovb
out
or
js
lods
enter
js
arpl
push
mov
jge
leave
mov
add
xchg
jo
mov
add
mov
addb
leave
adc
cltd
xlat
pop
pop
xchg
push
add
ds
cld
cmp
cwtl
leave
imul
outsl
mov
push
addr16
gs
inc
add
adc
mov
jns
scas
jl
xchg
stc
outsl
jp
mov
add
cmp
add
xor
xor
push
mov
push
into
jo
mov
or
jne
push
addb
dec
pop
cmpsb
daa
dec
mov
sbb
push
data16
movsl
add
mov
mov
push
pushl
std
out
pop
loopne
mov
icebp
mov
sbb
add
xchg
add
push
sbbl
mov
push
add
dec
bound
mov
dec
fisttps
int3
fidivs
fcompl
outsb
addb
daa
je
outsl
aaa
pcmpgtd
add
mov
popaw
fxtract
push
addb
mov
mov
sub
stos
movsb
pop
or
add
xlat
sub
repnz
push
add
adc
sub
pop
fiaddl
gs
and
mov
and
mov
add
add
fstp
pop
push
lods
inc
testl
shll
sub
inc
add
add
sub
mov
dec
or
or
sub
and
mov
dec
or
add
int3
adc
dec
ret
xchg
shrl
mov
and
mov
xor
push
out
add
inc
add
push
inc
loop
mov
pop
jnp
lea
mov
lret
cli
sub
iret
sub
or
push
adc
add
lahf
mov
xchg
notb
rolb
mov
pop
in
outsb
adc
ss
mov
add
adc
mov
stc
cmp
and
mov
in
div
je
cmpsl
sub
cmp
popf
jnp
flds
rolb
mov
negb
mov
mov
ret
frstor
mov
stc
adc
out
or
out
xchg
xchg
or
mov
mov
js
sub
stc
add
mov
xor
add
mov
adc
mov
mov
mov
hlt
mov
xchg
cmp
cmp
add
arpl
outsl
dec
pop
jno
jo
mov
imul
push
mov
mov
mov
add
mov
add
call
pop
int3
sub
inc
add
add
mov
loope
sahf
push
mov
fisttpll
loope
add
mov
xor
add
add
mov
fsubr
xchg
adc
mov
jge
lahf
cmp
lods
inc
sub
insb
inc
add
mov
iret
and
insl
lret
lcall
imul
test
out
outsl
dec
pop
push
sahf
jae
fisubl
les
jmp
daa
jg
pop
or
push
insl
lock
sahf
adc
mov
add
mov
dec
sbb
push
or
popf
test
cmc
shl
ljmp
mov
cwtl
jo
mov
mov
out
and
add
mov
pop
pop
rcr
mov
add
and
and
add
push
idivl
mov
mov
pushfw
dec
add
mov
add
pushf
mov
adc
inc
scas
xchg
add
lret
dec
add
sub
pusha
add
out
pop
jno
jbe
stos
clc
xor
mov
aaa
sbb
add
inc
testl
or
pop
or
push
rcll
test
inc
jg
shll
sub
in
add
mov
test
jp
mov
push
mov
add
add
les
int3
aam
outsl
jl
and
bound
mov
gs
jmp
mov
jne
jae
mov
mov
xor
mov
imul
mov
add
negl
lahf
mov
add
enter
roll
inc
nop
add
adc
mov
icebp
push
add
mov
xchg
cs
inc
dec
mov
add
add
ret
out
pushf
xchg
mov
ret
jle
repnz
pop
push
add
fisubrs
out
icebp
leave
insl
dec
mov
mov
lret
fmul
pop
push
push
fstpt
jno
pusha
add
mov
sbb
rol
aas
mov
add
imul
adc
adc
iret
inc
jbe
hlt
dec
fistl
loop
mov
mov
aaa
je
stc
dec
xchg
pusha
add
sbb
xlat
out
ss
sbb
add
pop
dec
mov
stos
lahf
out
test
add
inc
add
jnp
xchg
into
lods
sbb
in
add
mov
xchg
mov
neg
int
cmpsb
fistpll
jp
popf
mov
add
sub
mov
push
int3
je
scas
mov
xor
mov
push
dec
test
es
cld
mov
cmp
add
xchg
shl
popa
mov
xor
or
es
mov
push
setns
inc
cmc
out
aad
test
cmc
lret
lds
xor
mov
push
pop
fcmovnb
jecxz
jle
imul
add
pop
inc
leave
xchg
add
mov
sbb
inc
je
push
dec
sbb
sbb
mov
add
aam
test
mov
and
sbb
mov
sub
inc
jns
add
pop
sub
xchg
cld
or
test
jmp
frstor
pop
enter
add
mov
pop
push
fiaddl
mul
imul
dec
fdivl
cmpxchg
cltd
les
call
add
and
lret
xchg
jno
fimull
jne
add
mov
add
mov
dec
xchg
data16
cli
call
dec
sub
ja
mov
lods
pop
pop
push
jge
or
jnp
cld
push
stc
jmp
loope
loope
add
ja
or
fs
gs
add
mov
mov
test
add
imul
or
add
pop
inc
in
inc
inc
arpl
xchg
add
fsts
add
add
pop
mov
push
aas
punpcklbw
mov
shrl
cmp
add
mov
in
gs
outsl
lret
in
add
add
mov
mov
sub
loopne
mov
mov
rorl
loop
mov
fsts
mov
ljmp
xchg
jecxz
jo
mov
outsl
jnp
push
sub
mov
insl
mov
add
push
add
outsl
das
decb
pusha
add
shll
cmpl
mov
mov
add
mov
pop
sbb
xlat
sti
mov
pop
xchg
lret
cwtl
push
int
add
dec
inc
fwait
stos
bound
mov
add
add
mulb
dec
xchg
dec
xor
clc
lods
pop
popf
aas
addb
jno
add
rolb
loope
nop
add
xchg
xchg
jno
iret
and
mov
gs
mov
mov
popf
sub
push
stos
shll
push
and
mov
mov
add
sahf
pop
jae
rolb
mov
mov
movsb
das
insb
or
mov
das
daa
adc
xchg
xor
jns
cmp
aas
pop
mov
add
testl
mov
add
add
add
adc
jae
clc
jo
mov
dec
mov
stos
adc
xlat
mov
pop
leave
aas
stos
jnp
mov
jge
mov
sub
imul
xor
mov
dec
push
xchg
and
gs
sbb
add
fwait
add
add
mov
jge
test
xlat
psubw
push
and
cmp
add
or
rcll
mov
cmp
add
add
pop
sbb
and
mov
mov
mov
out
js
fnstenv
fisubrs
bound
mov
sbb
mov
shll
rolb
into
jno
fidivl
cmp
mov
add
xchg
cmpsl
sub
or
mov
or
adc
in
insb
movsb
push
add
add
out
sub
loopne
mov
stos
cmc
sbb
add
push
add
jnp
cmpsb
dec
and
rcl
clc
inc
cmp
das
adc
mov
mov
pushf
les
scas
std
push
adc
rcrl
inc
addl
xchg
pop
rolb
mov
mov
mov
lock
dec
aas
outsl
push
add
push
add
call
scas
test
mov
addb
and
add
xchg
or
sub
mov
cmp
mov
jg
add
inc
xor
add
mov
mov
cltd
sbbl
jle
cli
std
je
cmpsl
call
add
fiadds
sbb
test
sub
pop
popf
xlat
mov
fnstenv
push
fisttpll
cmp
shll
add
into
ds
testl
rcr
loopne
mov
mov
stos
jge,pt
dec
push
dec
lods
ss
mov
dec
sbb
mov
add
rcll
add
imul
fwait
pop
mov
ja
fstp
sbb
sarl
mov
mov
jae
rolb
mov
cmp
dec
fisttps
out
rcrl
mov
push
mov
js
rcll
xchg
jge
popf
mov
add
pop
cmpsl
sub
add
mov
out
or
add
xchg
in
loope
in
ret
dec
sbb
add
inc
add
xchg
add
jle
jp
xor
inc
ljmp
sub
dec
sbb
les
mov
mov
in
cmp
add
xlat
nopl
mov
fldt
push
pop
or
ljmp
xlat
stc
aad
xchg
cmp
nop
add
xor
mov
jge
or
mov
add
mov
mov
scas
pop
aaa
fisttpl
ds
add
mov
in
and
lock
int3
bound
mov
mov
sbb
aaa
inc
stc
push
jg
aad
add
mov
dec
and
pushl
pop
ret
sahf
dec
mov
xor
rolb
mov
out
gs
lock
scas
fs
std
mov
add
dec
inc
jns
js
add
fnsave
lcall
add
add
mov
mov
cs
sti
mov
je
lret
xchg
sbb
insl
in
sub
es
push
xor
add
stos
jg
mov
jb
mov
mov
and
and
add
gs
sub
add
stos
fistpll
mov
in
lock
icebp
jecxz
jg
clc
pop
dec
stc
repnz
jb
mov
add
xchg
pop
test
add
sahf
lds
es
jo
mov
add
xor
nop
add
sbb
ffree
into
xchg
dec
pop
push
sahf
out
mov
fisubrs
inc
mov
out
aad
add
test
sarl
sub
nop
add
xchg
je
sub
xor
mov
inc
add
test
test
es
xchg
stc
add
mov
mov
and
iret
in
push
add
aas
in
cmpsb
sub
xchg
push
mov
imul
or
cmp
mov
das
ret
push
sbb
adc
mov
addb
lock
adc
mov
lds
add
lea
test
sub
ret
cltd
fs
cmpl
inc
das
outsl
fimuls
inc
mov
sbb
mov
add
mov
add
jecxz
stos
cmp
mov
out
ret
inc
das
jmp
rolb
mov
dec
es
xlat
stc
push
in
icebp
xlat
scas
mov
sahf
inc
add
jns
push
aas
out
add
mov
mov
iret
cmp
xor
mov
push
sbb
and
mov
add
mov
add
nop
add
loopne
mov
in
jle
dec
shrl
lahf
inc
pop
jne
pop
pop
lock
cmp
xchg
lods
filds
add
clc
xchg
xchg
add
sbbl
xchg
lods
add
xor
fbstp
dec
inc
out
imul
arpl
rep
dec
iret
mov
adc
mov
add
fnsave
push
add
sar
adcl
pop
dec
ljmp
out
and
mov
mov
cmp
mov
loop
mov
int3
mov
rorl
adc
mov
addb
popa
adc
push
stc
inc
add
and
mov
sbb
out
mov
add
mov
stc
test
add
add
leave
sub
adc
add
pusha
add
insw
push
mov
and
mov
lods
pop
popa
sbb
stos
sub
jb
mov
add
inc
data16
insb
sahf
mov
movsb
es
mov
add
int
mov
mov
lret
add
ret
adc
rolb
mov
sbb
add
xor
mov
jae
add
aam
xor
mov
add
mov
cs
jecxz
push
jle
push
repnz
cmc
sahf
cmp
cmp
mov
scas
fdivs
add
outsl
xchg
jae
out
inc
fs
aad
scas
imull
arpl
fsubrs
addr16
daa
stos
ret
mov
add
ljmp
cli
std
insl
add
mov
add
jo
mov
in
fwait
sbb
fdivs
mov
add
or
js
les
in
addr16
jg
rcr
fisttpll
dec
insl
inc
xchg
pop
inc
fwait
lods
cmp
add
inc
in
mov
add
adc
fdivrl
mov
pop
repz
mov
add
repz
mov
add
sti
xchg
or
add
add
jl
and
adc
loop
mov
cli
xor
imul
cwtl
cltd
pusha
add
jae
dec
mov
jp
add
cmpsl
in
imul
mov
inc
mov
add
add
icebp
fstpt
in
repnz
pop
adc
mov
mov
cmp
jle
nop
add
add
jno
jne
mov
test
loope
call
decl
add
xchg
data16
fabs
fildll
ljmp
mov
add
fsubp
add
mov
xor
les
jg
rolb
xchg
data16
xchg
std
mov
insl
lock
mov
add
aad
scas
rcll
ficompl
adc
rorl
das
ds
add
cmp
hlt
aad
js
add
or
push
adc
enter
ret
sahf
paddusb
loop
mov
nop
add
xchg
call
fldcw
adc
repz
cli
xor
or
mov
dec
dec
push
fdivr
push
test
dec
mov
add
nop
add
mov
jno
xor
testl
clc
pushf
jmp
mov
add
out
arpl
inc
inc
bound
mov
add
mov
xchg
rorl
outsl
push
sbb
xchg
pop
out
cmp
mov
sub
cmpsl
lods
cltd
xchg
and
mov
add
add
cwtl
or
sub
pop
mov
push
add
cmpsb
out
movsl
jns
incl
ss
pop
push
add
aam
les
mov
sti
pop
lcall
dec
fs
cmp
fadd
outsb
jle
jae
mov
mov
jmp
andl
push
sub
mov
add
add
mov
mov
lds
in
sarl
adc
xor
out
repz
pop
lret
push
add
and
imul
mov
push
add
dec
imul
mov
mov
add
and
mov
or
movsb
clc
xchg
mov
mov
add
fdivr
lods
xchg
xor
mov
clc
or
jmp
in
mov
insl
or
fstpl
jne
mov
add
mov
add
mov
mov
xchg
add
cmpsb
adc
mov
mov
add
mov
pop
jge
mov
add
popa
dec
rolb
mov
xchg
or
fmulp
lea
mov
icebp
mov
add
and
or
mov
je
add
add
add
cli
fsubs
mov
imul
rorl
jl
mov
aam
add
clc
pop
out
lds
fwait
cmp
or
inc
or
fcmove
xchg
notb
and
imul
fisttpl
jns
lock
mov
cmc
sahf
or
loop
mov
add
add
fcmove
lods
in
jmp
mov
roll
xchg
jo
mov
rolb
mov
add
out
in
mov
in
mov
mov
and
mov
dec
adc
mov
and
mov
movsl
push
out
test
mov
iret
xchg
add
ficoms
push
sti
int3
data16
add
mov
adc
mov
cwtl
dec
xor
fsubs
jecxz
int
cmpsl
cwtl
std
jmp
ret
cmp
xchg
rolb
mov
movsb
xor
jns
in
add
mov
arpl
frstor
and
mov
addb
mov
out
sbb
push
add
popf
js
xadd
mov
addb
mov
das
je
or
jae
sbb
fldl
mov
xchg
ljmp
lods
jmp
repnz
add
add
dec
adc
or
adc
cs
push
lcall
pop
pop
cmp
pushf
sti
jnp
insb
sub
push
jmp
mov
out
pop
arpl
mov
adc
mov
lret
mov
fiadds
or
jmp
dec
xchg
push
pop
pop
pop
mov
mov
cmc
iret
xor
mov
add
fmul
push
aam
pop
pop
or
cmp
add
in
testl
mov
jg
add
ret
orl
gs
push
sbb
jmp
fs
add
add
jne
dec
leave
pushf
mov
sub
mov
dec
adc
cs
rolb
mov
or
xchg
pop
xchg
push
sbb
sti
aas
or
out
out
fcomp
das
jle,pn
adc
mov
rolb
shll
jmp
ds
mov
push
scas
and
mov
add
adc
mov
fcompl
fwait
or
add
push
mov
pop
xor
jmp
jbe
add
addr16
add
push
xor
mov
mov
xchg
and
mov
test
sub
fmul
bound
mov
fst
pop
out
pop
mov
vmulps
mov
mov
std
bound
mov
mov
fwait
test
xchg
mov
adc
adc
mov
inc
out
les
test
stos
and
rolb
dec
xchg
bound
mov
xor
or
mov
push
adcl
xchg
popf
mov
shll
jge
lods
outsb
lcall
push
fnstsw
fiadds
add
mov
push
rolb
mov
pop
sbb
mov
push
add
add
mov
dec
xchg
xchg
pop
add
leave
mov
movsb
inc
add
adc
lods
adc
add
mov
mov
aam
jle
idivb
cmpsb
nop
add
sbb
jo
mov
or
add
sbb
add
cmp
sub
cmpsl
mov
mov
add
mov
les
add
pop
jmp
sbb
test
add
leave
rolb
fildl
leave
and
dec
sbb
add
mov
std
push
push
add
adc
push
xchg
or
pop
sti
clc
outsb
rolb
mov
es
rolb
mov
add
mov
fs
sbb
add
sub
icebp
adc
stos
rcl
mov
insb
or
pop
mul
adc
mov
push
outsb
repnz
adc
mov
fucom
add
rolb
mov
js
add
mov
adc
sahf
inc
addr16
stc
sub
ret
lcall
cmpsb
gs
push
repnz
in
sti
and
sub
rcrl
out
add
cmp
add
mov
add
add
xor
popf
lea
add
add
or
add
mov
add
lods
and
and
pop
pop
mov
mov
add
mov
mov
mov
and
add
bound
mov
insb
mov
add
mov
scas
add
mov
mov
popf
push
dec
mov
das
fcoms
xchg
lahf
sbb
sub
int
insl
sbb
pop
push
mov
icebp
inc
sbb
popl
test
add
and
cli
jnp
pop
loope
lcall
mull
ss
xchg
add
test
add
sub
ret
dec
sbb
movsl
lret
testl
lods
mov
repz
clc
mov
hlt
dec
fcmovbe
add
enter
inc
add
mov
mov
mov
popf
rolb
mov
jge
jo
mov
test
fsubs
mov
add
mov
add
jg,pt
add
and
call
pop
out
aaa
or
add
fwait
add
cmc
daa
movsl
bound
mov
push
add
and
scas
adcl
mov
add
stos
mov
xchg
lret
xchg
push
push
aaa
cmpsb
rcrl
mov
and
xchg
testb
mov
add
in
pop
clc
sbb
stos
mov
add
nop
add
xchg
add
and
pop
mov
adc
mov
movsl
testb
add
add
sub
jl
add
add
lock
loop
mov
mov
outsb
mov
mov
dec
mov
xor
sub
xchg
add
xor
mov
fwait
sbb
inc
in
fimuls
add
imul
push
jno
out
add
push
lretw
or
inc
add
mov
clc
scas
lock
adc
add
scas
xorl
push
lods
mov
in
xorl
add
jno
mov
xchg
jge
jnp
add
out
dec
lret
add
fwait
add
mov
add
nop
add
sbb
test
xor
inc
ja
cmp
sub
loope
cld
test
add
insl
inc
orl
sti
xchg
add
add
pop
adc
mov
pop
jns
cmpl
mov
or
ror
cmp
and
arpl
ret
jbe
mov
pop
sub
sbb
inc
mov
stos
repnz
cli
xchg
add
movsb
and
inc
out
push
lahf
sub
icebp
in
or
orl
mov
lret
dec
out
jecxz
arpl
pop
mov
push
dec
or
jle
lds
mov
int
stos
pop
enter
jns
call
scas
adc
mov
add
mov
ja
pop
sub
out
vxorpd
lret
cs
add
add
pop
cli
roll
sub
in
arpl
popa
jle
insb
test
leave
cwtl
xor
stos
jbe
js
daa
sub
add
out
mov
jno
fldl
push
popf
lds
dec
and
mov
mov
jb
mov
jecxz
add
cmp
mov
add
mov
xlat
xchg
add
mov
cwtl
inc
add
inc
and
enter
push
mov
pop
js,pt
cs
lea
add
lods
lds
mov
cmp
add
arpl
cwtl
iret
out
and
dec
jg
stos
cmp
cmp
mov
mov
xchg
outsb
stos
aaa
xchg
mov
mov
add
cs
cmpsb
jg
adc
mov
rolb
mov
icebp
fwait
loopne
mov
mov
test
jnp
xchg
jae
cmpsl
jno
xor
mov
jns
ss
sbb
mov
mov
add
push
and
add
sbb
jmp
push
ja
roll
add
mov
mov
fstpl
test
fcoml
jb
mov
add
fisttps
add
dec
aas
imul
add
push
cmp
and
addb
into
mov
mov
cmp
mov
mov
mov
add
idivb
lds
add
jle
mov
mov
in
add
adc
mov
fistpll
mov
jecxz
test
jns
vhaddps
sarl
jo
mov
loopne
mov
add
mov
push
nop
add
aas
shll
rolb
sbb
xchg
jecxz
bound
mov
jo
mov
push
add
outsb
mov
mov
incl
addb
rolb
mov
mov
mov
dec
sub
mov
gs
clc
sti
xchg
mov
mov
mov
mov
mov
mov
add
add
in
enter
xor
mov
rolb
mov
add
sub
or
cs
mov
cmp
add
jl
dec
xchg
xchg
imul
mov
mov
add
mov
mov
test
stc
jl
popf
fst
in
cltd
xchg
or
cmp
xor
xor
mov
xchg
dec
jmp
add
push
push
cs
stos
movsb
into
cld
mov
cltd
into
sub
adc
add
cmp
or
cmp
xor
or
mov
insb
aam
mov
jl
jne
in
jbe
push
pop
les
add
shrl
lods
sub
sahf
add
mov
getsec
hlt
ds
jae
push
or
cltd
in
les
cmp
inc
jle
xor
ret
daa
imul
push
add
pusha
add
fdivrl
mov
sub
imul
xchg
pop
iret
ljmp
add
mov
ret
addb
rolb
mov
jp
add
fs
shrl
pop
pusha
add
sbb
mov
ljmp
xchg
jbe
repnz
mov
sub
jne
add
jae
push
mov
xchg
pop
dec
add
addb
fnstcw
ds
jb
mov
xor
mov
inc
jmp
fdiv
shll
xchg
adc
mov
xor
jbe
and
aaa
arpl
stos
clc
lds
push
movsb
xchg
mov
add
mov
das
pop
lret
sbb
mov
nop
add
jo
mov
jecxz
mov
sarl
ret
ja
pop
add
mov
add
enter
pop
xchg
add
xor
mov
add
mov
jne
flds
add
push
or
cld
sti
mov
or
adc
mov
add
and
cmc
add
outsl
cs
pusha
add
jns
mov
mov
aas
mov
add
add
xor
mov
mov
dec
or
jns
int3
cmpsl
fadds
add
adcl
or
cmp
mov
ljmp
jns
aad
sub
rcrl
add
mov
mov
hlt
int3
rolb
mov
sbb
or
addb
or
mov
jno
into
ret
sbb
sub
sahf
and
and
out
imul
in
mov
mov
xchg
sbb
mov
add
jnp
jno
cli
mov
lds
ds
mov
or
mov
add
in
pop
jns
daa
rcll
push
inc
fstpt
push
add
push
int3
rolb
mov
inc
scas
mov
cs
pop
lret
ds
addr16
out
mov
sub
add
or
cmc
adc
cmp
cmpsb
pop
filds
dec
jbe
xor
mov
mov
sbb
or
mov
std
mov
pusha
add
jge
xchg
sub
push
aam
add
mov
jl
or
mov
dec
sbb
sbb
sti
mov
fidivs
hlt
loopne
mov
mov
fstl
add
decb
rolb
mov
mov
mov
push
std
push
icebp
or
stos
mov
inc
push
int3
and
data16
cli
sub
fiadds
xor
mov
xor
das
add
mov
js
push
mov
sbb
mov
mov
lahf
addr16
imul
inc
and
mov
mov
pop
enter
adc
mov
rcrl
loopne
mov
push
stos
lods
cmpsb
clc
cltd
mov
cmp
mov
push
mov
dec
aas
and
mov
mov
add
cmpsl
es
mov
cmp
imull
mov
jb
mov
int3
sbb
test
dec
mov
add
inc
cmp
mov
mov
pop
xor
lret
inc
icebp
jle
jg
insl
scas
lret
pop
mulb
aam
add
inc
add
jp
fstpt
push
fnstcw
push
out
add
add
pop
vaddss
sahf
jns
popa
inc
add
sbb
add
lods
push
jns
add
inc
jmp
iret
fsubl
mov
mov
add
imul
in
dec
add
add
lcall
inc
add
shl
or
ret
dec
jne
add
adc
aam
add
jo
mov
mov
push
pusha
add
push
add
xchg
push
pop
mov
pop
pop
pop
scas
out
movsl
scas
test
add
xchg
ret
popl
add
sarl
add
mov
mov
push
gs
sbb
add
pop
enter
add
pop
das
mov
mov
add
ss
out
push
dec
mov
adc
xchg
ret
jge
test
xchg
fisttpl
fwait
or
addb
test
add
imul
mov
adc
hlt
xchg
sub
add
mov
jo
mov
lret
jnp
inc
xchg
dec
test
jmp
xor
mov
add
icebp
xchg
add
add
add
push
sub
inc
imul
es
push
sahf
sub
mov
mov
aas
repnz
jb
mov
aas
fidivrl
and
sub
mov
jne
mov
iret
push
sub
imul
add
mov
in
push
dec
sbb
push
xorl
lock
popf
es
int3
jno
lds
add
loope
lds
or
add
imul
inc
inc
push
add
mov
imul
mov
mov
add
dec
popf
mov
mov
ja
and
mov
out
mov
mov
ficoml
imul
les
pushf
scas
hlt
pop
repz
xchg
or
jo
mov
xchg
fld
and
mov
cli
fdivrs
leave
insl
fs
and
sub
jbe
add
mov
jne
mov
pop
cltd
jo
mov
or
add
mov
or
sbb
test
mov
imul
out
sub
out
inc
inc
or
mov
and
mov
dec
not
mov
push
fmul
std
xor
lods
and
mov
leave
loopne
mov
ret
stos
adc
sub
add
fwait
mov
mov
add
mov
cmp
sub
fbstp
in
mov
mov
jge
inc
add
loopne
mov
add
mov
or
sbb
add
pop
add
mov
push
lock
movl
mov
xor
inc
in
jmp
out
imul
mov
add
push
push
xlat
sub
xchg
sti
rolb
mov
aaa
test
jmp
and
sub
fmuls
cwtl
mov
mov
adc
mov
movsb
inc
adc
fwait
repz
mov
add
push
add
test
add
add
cmp
xlat
mov
fnsave
leave
inc
xor
stos
push
repnz
pop
xchg
add
fwait
cmp
loopne
mov
push
add
aam
sti
hlt
test
dec
push
rolb
mov
and
pushf
pop
add
and
mov
jae
out
icebp
mov
adc
fwait
test
add
jecxz
mov
negl
sbb
pop
push
rolb
mov
push
xchg
stc
push
roll
scas
mov
mov
mov
add
mov
repnz
cltd
rolb
mov
cmpsb
add
sbb
mov
mov
add
mov
add
ret
mull
mov
gs
or
or
fwait
push
push
bound
mov
or
int
es
test
popf
push
in
cmpsb
xchg
push
jmp
or
adc
bt
add
cwtl
loopne,pt
mov
mov
mov
xchg
inc
mov
mov
daa
lds
repz
sahf
dec
and
mov
clc
jnp
icebp
push
add
cmp
lret
jne
add
or
jne
out
dec
outsl
addb
fwait
mov
xchg
repz
imul
mov
add
push
icebp
loope
mov
imul
cli
ficoml
jle
add
fsubl
push
xor
mov
xchg
push
ret
leave
cmp
dec
pushf
push
add
adc
test
imul
sbb
fwait
fs
add
jbe
insb
popf
and
mov
add
push
add
and
mov
mov
das
mov
inc
add
and
mov
pop
push
add
mov
jo
mov
dec
xor
iret
cmp
cmp
std
int
lods
mov
xchg
add
and
jo
mov
cmp
push
add
in
dec
popa
jg
add
pop
lods
fcomps
mov
push
inc
add
jnp
hlt
inc
pushl
add
mov
popa
ret
das
shlw
add
dec
std
in
sub
lea
inc
sub
stos
or
popf
outsl
sub
and
mov
add
mov
add
int
cmp
inc
pushf
or
xor
mov
push
arpl
iret
push
add
push
inc
sbb
mov
add
mov
fwait
mov
add
pop
jmp
push
mov
mov
add
pop
push
add
pushw
mulb
xor
mov
mov
insl
icebp
aam
add
mov
mov
rolb
mov
inc
add
mov
mov
add
add
loope
jb
mov
fwait
stc
adc
inc
inc
add
mov
sbb
pop
push
leave
xchg
adc
cld
xchg
add
add
les
rolb
mov
or
ret
add
mov
popa
inc
add
inc
add
add
push
push
add
add
lcall
mov
mov
cmp
nop
add
nop
add
mov
xor
mov
mov
add
xor
mov
add
aam
out
xchg
dec
fistpl
jl
stc
inc
leave
pop
and
mov
jb
mov
pop
outsl
cs
or
ja
add
jecxz
add
addb
adc
add
add
mov
lahf
mov
mov
cmpl
mov
in
mov
mov
mov
xchg
add
lret
fisubl
jb
mov
fidivrl
inc
add
aas
jmp
push
pop
adc
mov
jg
add
popa
xchg
add
xor
sbb
jns
imul
sbb
lahf
orl
mov
mov
sub
push
mov
mov
icebp
cltd
enter
add
add
mov
dec
lea
add
fsts
loope
xchg
mov
fwait
jnp
loop
mov
push
outsl
test
add
and
mov
add
add
mov
in
mov
mov
add
fbstp
scas
dec
lret
movsb
rolb
mov
daa
rolb
mov
mov
imul
mov
mov
fucomip
xor
mov
repnz
inc
cmp
cmpsb
push
je
dec
jns
pop
xchg
in
into
lods
mov
les
fldcw
push
cld
jge
inc
add
push
mov
mov
add
jo
mov
add
test
popf
nop
add
add
mov
mov
mov
mov
inc
dec
sarl
fnstenv
mov
pop
fs
aam
inc
add
mov
in
cmovge
gs
les
add
inc
inc
lock
cli
addb
cli
push
and
xor
and
ret
mov
test
int3
popa
mov
sub
add
dec
das
xlat
add
hlt
dec
mov
mov
sub
dec
adc
pushf
loopne
mov
scas
and
sbb
rolb
mov
jo
mov
jg
dec
jecxz
adc
mov
sbb
or
mov
mov
lea
mov
add
js
dec
dec
mov
outsb
dec
js
outsl
sti
mov
hlt
mov
sbb
repnz
or
imul
mov
add
addb
mov
add
jle
loope
xor
mov
iret
scas
repz
jne
dec
pop
nop
add
jge
mov
jbe
mov
mov
add
popf
sub
hlt
xlat
dec
push
add
push
add
scas
add
mov
add
mov
mov
jl
imul
enter
js
sahf
and
ja
mov
cmp
jp
ror
and
sub
cmp
sub
xchg
inc
sub
add
test
sub
push
adc
mov
mov
mov
mov
cwtl
dec
je
mov
mov
sbb
push
sahf
sub
add
pop
xchg
push
push
xor
mov
fisubl
push
icebp
ljmp
mov
and
imul
rolb
mov
jns
notl
loope
jecxz
or
push
fimuls
push
out
and
cmp
add
xlat
lock
lahf
mov
sbb
add
mov
ret
xor
push
mov
out
test
lret
inc
mov
addb
dec
sti
cli
cmp
mov
add
adc
jbe
jmp
xchg
addb
mov
add
ja
pushw
xchg
add
add
mov
in
orl
sbb
addr16
mov
ret
testl
into
gs
lret
xchg
jbe
push
mov
mov
js
adc
lock
imul
jae
ljmp
add
jg
in
cld
test
ret
mov
popf
push
xchg
iret
rol
add
repz
add
push
notb
or
xchg
dec
cmp
inc
add
lret
xor
adc
mov
mov
add
pop
rolb
mov
mov
flds
jmp
add
xchg
iret
mov
fimull
add
stos
mov
daa
mov
mov
scas
mov
inc
movsl
and
mov
or
cmp
lods
clc
bound
mov
add
arpl
dec
test
rolb
mov
lcall
out
pop
les
pushl
push
sub
int
adc
negl
adc
add
int
dec
jo,pn
mov
add
inc
fwait
clc
add
mov
mov
add
sub
inc
in
pop
scas
inc
mov
mov
lcall
mov
cwtl
or
inc
add
test
rcrl
enter
mov
dec
fnstsw
pusha
add
mov
xchg
scas
or
xchg
addb
mov
ret
ret
jb
mov
xchg
int3
jnp
push
in
mov
and
dec
mov
test
daa
dec
mov
repnz
inc
dec
adc
mov
add
sbb
push
sub
std
mov
mov
sub
mov
xchg
mov
pop
sub
jbe
add
add
add
inc
fdivrs
cltd
jns
ds
sahf
sub
out
mov
loopne
mov
push
add
fldenv
xor
add
scas
xchg
pop
or
popa
push
sahf
int3
cmp
icebp
dec
add
mov
pop
pop
push
hlt
shl
sbb
xlat
jl
fwait
pop
imul
push
add
mov
push
push
insb
mov
mov
jno,pt
cwtl
jle
jmp
loope
insl
dec
fisttps
jle
mov
add
addr16
mov
add
rolb
mov
aam
and
pop
mov
and
stos
loope
icebp
xchg
xlat
enter
adc
mov
or
xchg
or
xchg
xchg
iret
negl
xchg
lcall
rolb
mov
loope
fnstsw
test
outsl
mov
daa
clc
int3
cmp
int
loop
mov
addb
xor
mov
add
mov
test
inc
mov
fildll
mov
xor
push
cld
inc
add
mov
add
jg
mov
out
fs
add
add
push
cmpsb
sub
mov
bound
mov
mov
rolb
inc
popa
imul
sahf
xor
add
aas
in
rcll
xchg
pop
orl
stos
daa
xor
mov
lcall
xor
cltd
mov
outsl
sbb
aad
mov
adc
int
or
mov
jnp
push
xchg
add
mov
mov
arpl
fstl
fwait
mov
add
out
xor
les
xchg
add
lahf
fistl
and
add
addl
jns,pn
pusha
add
push
in
ficompl
mov
dec
add
mov
call
std
mov
mov
mov
xlat
popa
fdivrs
push
add
jmp
repnz
les
add
les
or
inc
cmpsb
adc
mov
loope
into
xchg
push
arpl
push
mov
cmc
pushf
cs
pop
ljmp
add
aas
or
cmp
xor
and
mov
or
imul
mov
mov
xor
add
add
dec
xor
mov
add
add
inc
add
movsb
outsb
movsl
fistps
adc
aam
xor
adc
stos
or
add
sti
fildl
add
fxch
imul
mov
mov
jl
inc
xchg
in
enter
fnstcw
ljmp
mov
mov
mov
add
outsl
sub
add
out
inc
scas
cs
adc
mov
mov
or
mov
mov
add
aaa
and
cmp
cmpsl
jns
into
adc
mov
fstpl
add
aas
ja
jae
lods
nop
add
mov
out
xorl
cmp
pop
inc
repnz
add
aad
xor
cvtps2pi
jp
jns
add
add
mov
mov
mov
jge
in
jbe
jge
arpl
and
mov
add
and
fisttpl
mov
xchg
dec
xchg
jmp
aam
pop
out
stos
dec
in
adc
or
add
mov
push
pop
dec
imul
lcall
mov
mov
mov
add
add
mov
xor
adc
insb
push
mov
push
out
and
mov
pop
pop
xchg
add
pushf
popa
mov
add
decb
mov
mov
push
int3
dec
pop
orl
jnp
or
add
cli
ss
mov
jmp
add
mov
pop
add
push
add
jnp
add
add
inc
pop
stos
cmpsl
xor
mov
add
rcrl
inc
ds
pop
aam
push
xchg
test
test
add
data16
push
add
inc
xor
mov
sub
aam
mov
add
mov
or
mov
mov
xor
loopne
mov
mov
add
jmp
test
add
dec
jle
ret
iret
pop
or
mov
push
fwait
ds
cmp
add
mov
add
cmpsb
ret
jmp
mov
mov
out
xor
lahf
cs
dec
inc
xchg
lds
jns
repnz
outsl
sbb
aas
stc
sahf
test
scas
ret
repz
add
ret
cmp
jns
jae
sbb
add
hlt
or
push
xor
mov
test
add
ljmp
mov
mov
ret
rorl
lcall
mov
pop
stos
sbb
sbb
add
push
jb
mov
aam
add
inc
add
xchg
in
pop
rolb
mov
call
addl
lods
jo
mov
mov
add
ret
stos
xchg
mov
pop
call
rolb
mov
nop
add
adc
movsb
add
sub
add
mov
add
ljmp
xchg
std
roll
inc
and
mov
add
pushf
sbb
js
add
add
mov
scas
xor
mov
adc
or
cmp
scas
sbb
mov
sub
insb
lods
xchg
in
push
add
sub
pop
jne
fistpl
push
add
add
xor
add
inc
add
cmp
fidivrl
mov
cmp
or
arpl
jne
xor
mov
add
cmovns
xchg
mov
add
dec
test
add
in
jnp
addr16
mov
mov
lds
cs
sub
cld
xor
mov
sub
fdivrl
xchg
stos
f2xm1
add
enter
dec
xchg
add
fistpl
add
clc
pop
stc
xchg
add
clc
push
add
fs
inc
leave
into
dec
adc
pop
stos
jg
outsl
jnp
lods
inc
push
add
push
add
mov
mov
scas
or
add
mov
mov
add
icebp
out
dec
sub
cmc
mov
jge
fdivs
outsb
xor
mov
push
fs
mov
sbb
sub
rcl
clc
ljmp
aam
jecxz
arpl
mov
and
mov
repz
pop
mov
fs
scas
xchg
xchg
and
mov
push
dec
addl
pop
mov
sahf
out
add
addr16
add
imul
ret
cltd
call
mov
mov
sbb
fisttpll
or
add
add
or
mov
cmpsl
inc
add
mov
xchg
xchg
mov
mov
outsl
xor
adc
mov
jo
mov
mov
popa
repnz
cmp
dec
jnp
jp
cmp
pop
cmpsb
movsl
ja
pop
jno
movsl
xlat
lret
adc
mov
mov
cmc
test
and
in
mov
sub
mov
aam
dec
outsb
jmp
pop
lret
sub
mov
mov
add
cltd
jno
stc
push
iret
cmpl
mov
add
and
mov
repz
iret
aad
cltd
xchg
data16
cld
jbe
push
aad
mov
mov
jns
pusha
add
popf
pop
hlt
pop
out
xchg
mov
add
rolb
mov
xor
mov
xor
movsl
loop
mov
out
test
mov
xor
mov
ljmp
add
lahf
xor
mov
add
decb
scas
jo
mov
aas
add
inc
sub
rolb
mov
fstl
bound
mov
mov
push
inc
test
add
inc
fdivrp
jecxz
in
js
sbb
test
mov
adc
mov
mov
push
psubb
mov
repz
push
addr16
mov
xor
mov
stc
ret
push
dec
and
xchg
repz
cmp
xchg
leave
imull
fwait
or
dec
jno
dec
cwtl
and
mov
mov
lret
insl
xor
popa
mov
add
add
add
inc
add
adc
add
xor
mov
mov
jne
dec
add
mov
cs
mov
bound
mov
add
pop
shll
add
add
call
xchg
push
sbb
add
into
lret
aad
insl
mov
add
mov
jnp
push
push
out
xor
loopne
mov
add
add
fs
rcl
cmp
lahf
jae
xor
add
mov
push
int3
fwait
adc
pop
gs
ds
inc
cld
add
mov
dec
sti
jae
pop
xor
dec
pop
cltd
push
add
add
xchg
fiadds
mov
push
mov
fnstcw
and
daa
mov
xchg
mov
mov
sub
or
mov
add
sahf
and
add
jle
jp
cmp
in
data16
fs
es
je
add
inc
cmpl
mov
mov
iret
lds
test
xlat
and
addb
xlat
inc
test
mov
and
xor
cld
mov
aam
add
cmc
cmpsb
pushf
repz
or
lods
or
xchg
cwtl
mov
mov
add
add
jbe
in
sbb
adc
mov
in
mov
jp
xor
ret
lahf
push
mov
push
aas
and
cmp
mov
pop
out
mov
aad
pop
lcall
pop
add
mov
inc
loope
sub
lcall
pop
pop
jg
push
leave
sbb
cmp
mov
mov
gs
mov
sbb
ss
add
rcr
sbb
adc
imul
adc
pushf
outsl
add
sub
jle
int3
or
add
fildll
cs
mov
mov
add
push
jae
imul
mov
loopne
mov
jle
ret
lcall
addb
mov
shr
enter
mov
stos
out
push
js
xchg
test
push
mov
imul
inc
add
mov
sbb
hlt
fucomi
cmp
add
and
mov
add
xchg
or
jl,pn
mov
scas
nop
add
cmc
dec
inc
loopne
mov
xchg
out
mov
add
cmpsl
push
xor
lods
xchg
stos
roll
dec
scas
pop
xchg
xor
aam
icebp
dec
xor
mov
xabort
sub
ljmp
mov
mov
mov
lahf
add
mov
xlat
pop
mov
push
cmp
add
push
cmc
fs
mov
add
add
cmc
std
loopne
mov
cltd
ljmp
clc
pop
lret
mov
insb
lods
dec
mov
jae
outsb
call
and
mov
setne
jl
push
push
aaa
add
xchg
add
es
push
lahf
in
pushf
cmp
xchg
rolb
addb
repz
xchg
ljmp
add
add
mov
sub
or
mov
xor
mov
mov
mov
fs
addb
adc
mov
mov
xor
fidivs
mov
call
imul
fimull
test
lock
add
mov
clc
jecxz
and
mov
pop
pusha
add
repnz
jno
add
mov
add
mov
out
fwait
dec
ficoml
add
mov
or
cmc
test
push
sub
aam
jno
and
mov
jno
add
mov
mov
push
ss
and
mov
stc
out
xchg
scas
pushf
movsb
jbe
rolb
mov
jl
arpl
and
ret
xor
mov
mov
push
lds
rcll
test
lret
jbe
mov
clc
cs
lds
push
mov
mov
mov
add
ds
clc
jecxz
rcll
add
push
sbb
icebp
movsb
mov
xchg
cmpsl
int3
adc
das
lods
shll
sarl
pushf
push
cmp
lds
and
mov
ret
push
add
in
add
jo
mov
mov
bound
mov
push
jae,pn
cmpl
jns
add
pop
bound
mov
mov
sbbl
xor
fldl
mov
mov
add
aaa
mov
sub
add
add
pop
add
mov
arpl
add
cld
push
rolb
mov
sbb
mov
cmp
add
and
mov
lcall
or
sub
orl
mov
daa
mov
mov
std
or
add
js
sbb
add
mov
add
popa
or
call
je
ds
mov
fistps
mov
outsb
dec
xchg
jmp
mov
mov
xor
sarl
mov
mov
mov
ret
mov
insb
outsl
dec
jbe
add
sahf
jmp
xor
xchg
dec
mov
xor
xchg
std
or
lret
add
add
es
add
mov
rep
js
add
stc
cwtl
or
mov
enter
ds
stc
and
sbb
addb
pop
cmpl
jnp
pusha
add
out
sbb
fs
pop
add
ficoml
sbb
add
xchg
lret
cltd
mov
das
jp
fisubs
pop
imul
mov
mov
add
fiaddl
push
lret
rolb
mov
add
jnp
jle
add
into
or
das
inc
sahf
or
cmc
or
rolb
mov
and
loope
jmp
mov
xchg
aam
cld
push
sub
add
add
and
sub
push
add
xlat
push
outsb
sbb
out
add
int
add
div
add
out
mov
push
loope
or
sub
mov
inc
sub
stc
xlat
pop
mov
pushf
and
shrl
adc
mov
sbb
push
rolb
mov
mov
mov
mov
inc
mov
shll
stos
add
mov
add
mov
or
xor
int
mov
xor
loop
mov
mov
scas
rolb
mov
xchg
add
jno
mov
mov
xchg
add
add
add
add
fcomi
sub
push
xor
xchg
pushf
cli
inc
ljmp
add
pop
adc
add
xchg
add
pop
pop
mov
sub
add
add
sbb
xor
pusha
add
mov
icebp
lock
add
hlt
xchg
jle
pop
push
jns
pop
lods
addb
mov
scas
mov
stos
enter
add
lods
inc
mov
pop
inc
push
or
and
rolb
mov
dec
rolb
mov
lahf
ds
add
pop
mov
pop
inc
add
jne
mov
and
and
inc
xchg
add
or
mov
add
mov
int3
rolb
mov
add
xor
mov
add
mov
into
out
stos
sbb
add
mov
add
cmp
pop
sub
stos
lea
lods
sbb
add
fildll
push
addb
out
pop
lret
mov
clc
mov
mov
or
sbb
add
add
sbb
add
mov
hlt
adc
or
cmp
jg
add
mov
mov
push
rolb
mov
sbb
outsb
sbb
bound
mov
cld
pop
mov
mov
xchg
mov
out
mov
mov
out
out
lods
dec
mov
mov
addr16
cmp
and
ret
xor
mov
sub
mov
or
mov
xchg
cmp
jmp
add
call
add
add
mov
loope
inc
mov
push
mov
mov
sti
shll
addb
test
mov
mov
xchg
out
dec
addb
scas
fdivl
icebp
in
pop
outsb
xchg
idivb
adc
jns
add
sbb
mov
push
popa
scas
imul
jne
jge
lcall
push
sbb
nop
add
cmpsl
lret
fs
insl
mov
pop
add
lods
adc
and
add
mov
jle
sahf
mov
jo
mov
lods
xor
lods
cmp
mov
xchg
mov
dec
mov
mov
push
ds
mov
mov
mov
in
aad
add
mov
sahf
fsubr
push
add
fistps
aad
ja
push
imul
mov
dec
loop
mov
adc
call
add
adc
add
jbe
jno
repnz
addl
decb
mov
jl
clc
mov
add
mov
imul
adc
mov
fidivs
push
lods
fwait
jg
mov
mov
enter
pop
xchg
add
stos
mov
mov
add
aaa
test
sub
jno
adc
mov
inc
add
je
mov
add
add
mov
aas
addr16
das
int3
rdpmc
inc
sub
pop
nop
add
mov
insb
jno
add
addb
movsl
out
bound
mov
in
arpl
and
add
add
adc
mov
add
imulb
sub
popf
jp
outsb
mov
push
leave
stos
xchg
aas
pop
xlat
adc
mov
mov
dec
fldenv
mov
pop
addb
cld
sub
popf
xor
lods
leave
mov
mov
mov
mov
mov
jo
mov
pusha
add
xchg
dec
out
addb
sub
mov
sbb
xor
aam
sub
and
mov
mov
push
cmp
jae
arpl
mov
xchg
push
push
sbb
orl
add
test
add
inc
push
imul
pop
pop
js
je
adc
mov
or
add
insl
and
mov
adc
cmp
pop
aaa
cld
mov
mov
mov
ss
addr16
mov
mov
push
add
data16
pop
insl
ret
je
sbb
add
mov
adc
mov
add
sbb
fcmovb
or
pushf
mov
add
inc
aad
lcall
cmp
int
inc
mov
hlt
addr16
mov
push
mov
add
mov
aam
ds
or
pop
mov
insl
xchg
subl
int
sub
mov
jp
leave
stos
fmull
add
mov
ss
mov
cmp
daa
popa
cmp
pop
pop
mov
in
sbb
adc
add
inc
mov
sbb
aas
mov
xor
cmp
mov
pop
scas
inc
cld
push
dec
or
cmp
sbb
sub
xor
jb
mov
mov
stos
sub
mov
test
insl
or
xor
mov
pop
mov
sub
add
sbb
adc
mov
jg
xchg
movb
sub
addr16
rolb
mov
mulb
cwtl
lock
mov
movsl
jle
dec
iret
pushf
pop
ret
popa
stc
icebp
in
scas
pop
sbbl
mov
push
xlat
xchg
cwtl
scas
mov
mov
add
js
in
add
sbb
sahf
mov
dec
cmp
icebp
imul
inc
pop
xor
sbb
mov
mov
or
rolb
mov
addr16
jle
add
aaa
addr16
inc
push
push
mov
mov
insl
xor
mov
xchg
add
sbb
sbb
push
add
xchg
mov
add
mov
sub
test
test
add
andl
sahf
jb
mov
mov
ficomps
call
rolb
mov
mov
mov
or
rolb
mov
in
adc
mov
repnz
mov
inc
mov
loope
xchg
push
test
push
push
xchg
jge
cmp
gs
jecxz
sub
sub
jmp
ss
mov
pop
ja
and
mov
add
pop
hlt
jge
ja
mov
add
or
aad
add
jmp
shll
pop
sbb
mov
test
push
pop
jg
add
mov
popa
pop
in
add
add
daa
lret
add
mov
adc
mov
push
ds
std
testl
mov
mov
mov
inc
add
in
sbb
xchg
mov
ss
je
inc
add
jo
mov
ljmp
jl
adc
mov
cmp
mov
ret
and
pop
mov
je
sub
cli
ds
xchg
xor
dec
mov
push
out
scas
and
mov
add
dec
ja
add
dec
mov
xor
add
clc
mov
les
add
inc
gs
pop
and
or
jo
mov
push
mov
push
sti
rolb
mov
jns
xchg
aam
mov
leave
call
push
lret
sub
cs
pop
push
add
push
or
mov
cli
sbb
or
lods
mov
push
add
xor
addb
arpl
add
daa
lea
xor
aad
push
xchg
cmc
into
cmp
out
ljmp
mov
mov
dec
dec
addr16
or
push
sarl
adc
mov
rcll
mov
es
dec
jmp
push
xor
lret
je
insl
data16
inc
xchg
adc
add
test
adc
mov
rcrl
mov
jp
notl
or
xchg
add
mov
sbb
out
add
xchg
lret
mov
push
dec
or
test
divb
add
mov
ret
mov
mov
imul
scas
and
mov
jl
lcall
sub
add
push
lea
xchg
insl
pushf
mov
or
pop
repnz
arpl
dec
popf
mov
fldenv
mov
add
add
loop
mov
out
xchg
ret
xor
mov
and
add
add
mov
stos
mov
sbb
das
vmovntdq
sub
mov
stos
js
adc
mov
fs
icebp
add
add
mov
jne
aaa
add
mov
add
mov
add
test
or
insl
dec
addb
mov
mov
das
cltd
fstpt
add
aaa
shll
mov
sub
rorl
lret
daa
xor
mov
pop
negb
divl
add
add
add
jmp
lcall
and
fldl
aam
add
mov
jge
add
cmp
jmp
mov
lods
mov
dec
mov
ljmp
jl
loope
or
inc
cltd
popa
ljmp
dec
xchg
loope
ror
in
aaa
popf
xor
fsubrs
or
and
mov
int3
pop
fldcw
in
popf
pop
sbb
leave
shll
nop
add
or
jmp
jnp
inc
lods
mov
loope
add
add
mov
push
notl
outsb
or
mov
jl
mov
add
push
or
rolb
sti
cs
push
xorl
je
shll
and
xchg
inc
mov
bound
mov
add
cltd
fbstp
xchg
mov
movsl
std
mov
jg
js
nop
add
ret
xchg
cmpsb
sbb
dec
and
mov
xchg
add
clc
bound
mov
mov
cld
popa
sti
and
add
rcll
mov
add
xchg
scas
mov
mov
stos
pop
xchg
jmp
bound
mov
mov
scas
push
aaa
xchg
mov
movsl
lea
scas
push
cmp
dec
dec
ret
je
cmpsb
frstor
add
loope
rolb
mov
mov
jg
int3
imul
mov
pop
fsubr
or
and
mov
add
add
add
mov
mov
scas
test
pusha
add
or
fsts
add
clc
out
xchg
add
out
lret
cwtl
in
mov
jp
dec
push
ficoml
loop
mov
out
cmp
jg
mov
iret
add
test
mov
inc
mov
mov
jl
aaa
insb
pop
pop
add
mov
add
cld
mov
fidivrl
or
mov
shll
mov
pop
lds
xor
add
add
aad
cltd
push
fldcw
negb
shll
adc
mov
cvttps2pi
lea
adc
jle
mov
pop
pcmpgtw
or
mov
ss
inc
cs
iret
xor
add
pop
pop
fs
sub
lds
and
mov
test
aam
jle
pushf
mov
mov
mov
fstl
add
add
aam
push
icebp
les
mov
adc
mov
and
jle
mov
out
aam
cltd
or
mov
sti
mov
add
or
mov
sub
jns
jno
mov
cwtl
mov
add
cmpsl
cmp
fists
mov
mov
dec
adc
repz
aaa
mov
movsl
insb
jnp
push
leave
aaa
addl
mov
addl
mov
mov
mov
sarl
pop
inc
and
sarl
pop
stos
sbb
into
mov
xchg
add
loopne
mov
or
and
pushl
cmp
xchg
addb
pop
inc
lods
ret
and
cwtl
mov
mov
add
mov
adc
ljmp
ds
enter
add
inc
add
mov
dec
inc
in
mov
in
out
call
je
cmp
lods
push
add
adc
mov
jmp
stos
xchg
adc
imul
fs
pop
pop
xor
mov
nop
add
cwtl
and
mov
loope
cs
in
dec
rcl
add
dec
mov
mov
and
in
jnp
mov
jno
inc
jmp
aad
xor
xchg
outsl
nop
add
sahf
movsl
leave
xor
daa
add
add
mov
and
aaa
cmp
push
add
sbb
or
and
mov
pusha
add
xchg
sub
mov
std
and
or
bound
mov
leave
pop
push
fdivr
dec
aam
pop
dec
add
imul
cmc
fldenv
mov
add
ficomps
addb
xor
stos
hlt
stos
and
mov
lcall
add
rolb
mov
mov
push
xor
mov
add
pop
adc
inc
add
pop
inc
call
jle
repz
sub
test
add
cmpsl
adc
mov
je
add
lret
nop
add
inc
mov
mov
push
pop
pop
fwait
push
cmp
in
das
sub
lcall
mov
pop
dec
aas
mov
pop
cmp
das
aaa
mov
mov
mov
dec
ja
add
mov
sbb
sub
sbb
and
mov
js
sbb
rolb
jp
out
bound
mov
and
out
test
rcrl
add
dec
out
or
movsb
addb
psubq
hlt
push
popl
xchg
cmp
push
mov
mov
mov
pop
out
jl
fwait
mov
aam
rol
lods
inc
add
sub
dec
aaa
mov
add
add
mov
in
sbb
adc
mov
mov
jns
rolb
mov
mov
xchg
rcrl
and
sub
jo
mov
stc
inc
push
fisubl
dec
xor
rolb
xor
cmp
cmp
and
sbb
test
jnp
arpl
sub
push
sub
mov
fcmovbe
leave
lock
xchg
add
loope
xor
mov
lea
add
add
mov
cmp
jae
adc
xor
mov
aas
rolb
mov
add
mov
lret
mov
pop
mov
push
adc
mov
mov
add
mov
mov
ss
rolb
mov
lds
xlat
call
aaa
enter
cmc
pop
enter
pop
rolb
mov
or
mov
mov
movsl
and
mov
cmpsb
cmp
aaa
mov
loop
mov
mov
imul
adc
mov
lret
and
xchg
mov
add
movsl
push
add
jecxz
dec
cmp
daa
stc
stos
cmp
pop
jmp
xor
add
push
aam
inc
push
add
leave
mov
loopne
mov
inc
jmp
sbb
add
test
aas
fwait
lds
arpl
loope
dec
movsl
jns
mov
lret
mov
fbstp
dec
and
negb
cld
push
mov
leave
test
jne
idivb
add
and
sbb
in
add
mov
add
outsb
dec
pop
sbb
mov
inc
jmp
mov
stos
scas
add
mov
inc
add
mov
ja
push
add
fildl
stos
push
mov
mov
rol
add
mov
mov
test
add
jne
push
adc
jnp
sbb
test
in
mov
dec
dec
pushl
add
push
xlat
mov
movsb
call
add
mov
aam
imul
daa
les
push
xor
mov
xor
add
add
or
xor
mov
mov
rolb
lods
mov
sbb
cmc
xchg
sub
sub
div
das
data16
add
push
add
mov
xor
add
addb
push
push
insl
jne
pop
frstor
lods
scas
jb
mov
add
add
jo
mov
addb
and
xor
mov
pop
jp
cmp
mov
ljmp
push
test
rorl
in
dec
pop
push
scas
cld
push
jo
mov
push
in
add
add
dec
js
pop
push
mov
dec
loopne
mov
jns
jb
mov
addr16
jl
jl
sub
xchg
in
add
jbe
bound
mov
ret
inc
imul
in
jbe
add
addb
movb
stc
stc
pop
mov
mov
sub
cmpsl
cld
packssdw
cmc
lcall
cmpsb
mov
mov
add
popf
push
add
sub
jmp
pop
movsb
sbb
add
ja
mov
mov
repz
ficoms
add
iret
clc
jae
icebp
xor
pop
cli
notl
rcrl
sbb
popf
daa
out
add
imul
xor
xor
ret
adc
mov
mov
push
and
mov
mov
add
rolb
mov
repz
mov
data16
add
pop
add
sub
add
pop
addb
repnz
add
add
add
inc
imul
adc
lea
add
mov
push
pop
loopne
mov
aam
add
fs
or
rolb
mov
jno
sub
stos
xchg
movsb
inc
xor
push
int
es
jle
xchg
xchg
mov
das
jmp
dec
adc
std
les
rolb
mov
xchg
mov
push
add
shll
imul
loope
movsl
es
ret
sub
outsb
dec
mov
sbb
addb
clc
xor
mov
test
adc
xor
sub
add
mov
jmp
cld
jp
add
inc
add
mov
out
pop
pop
lret
xchg
add
jnp
lret
xchg
add
dec
repnz
or
sar
cwtl
popa
xor
mov
jl
xor
mov
cmpl
mov
add
jo
mov
mov
jo
mov
xchg
int
xchg
rolb
stc
aad
mov
shll
cld
rep
into
mov
add
dec
repz
leave
mul
pop
lock
ljmp
mov
fistpl
add
mov
xchg
jg
add
push
dec
dec
aad
lret
js
mov
lcall
mov
or
repz
push
je
inc
addb
aas
push
add
addr16
push
cmp
mov
fdivl
mov
jb
mov
lea
cwtl
mov
test
pushl
inc
inc
add
add
fcoml
adc
mov
add
dec
bt
xlat
sub
jle
dec
inc
sub
je
mov
add
jmp
or
cmpsb
std
xor
mov
cli
fldcw
xchg
add
jmp
jo
mov
movsl
inc
xor
jmp
outsb
aad
pop
or
push
xchg
daa
imul
add
or
movsl
and
add
add
sbb
jmp
loope
add
mov
mov
out
pop
and
mov
into
sbb
mov
jp
into
out
mov
jge
sub
push
loop
mov
mov
xchg
add
sub
pop
lock
mov
pop
arpl
sub
fldcw
cli
add
dec
jp
add
xchg
or
sbb
mov
dec
popa
pop
aaa
test
std
stc
out
sbb
add
mov
mov
push
rolb
mov
inc
je
add
mov
jns
add
cmp
ljmp
add
sub
bound
mov
xor
mov
addb
enter
mov
dec
in
sbb
insl
mov
pop
loop
mov
or
loopew
and
fucomp
repnz
fsubrl
lret
push
js
fdivl
int3
sub
test
repz
rolb
jge
xchg
mov
xchg
fucomip
mov
rolb
mov
push
pop
mov
add
stc
cli
lret
lea
add
popf
jb
mov
icebp
clc
mov
lods
pop
insl
jecxz
sbb
jmp
addr16
mov
add
gs
loopne
mov
inc
lods
xchg
rolb
mov
lock
clc
dec
sbb
stc
mov
fstpt
push
ss
test
scas
sbb
repnz
mov
jmp
stc
cmc
xchg
shll
add
inc
dec
inc
inc
xchg
sbb
xchg
out
pusha
add
add
pop
rolb
mov
pop
ss
cwtl
push
mov
fldt
add
sbb
add
pop
dec
in
xor
mov
movsb
lcall
cmp
jne
adc
mov
sbb
sbb
add
mov
loopne
mov
cwtl
sar
mov
add
jg
aad
pop
into
cmp
jge
jbe
cmpsb
js
xchg
cwtl
mov
add
sbb
push
and
mov
xor
add
or
inc
push
and
xor
lods
int3
aam
xor
dec
mov
jecxz
mov
ljmp
mov
sub
loopne
mov
mov
mov
xchg
jbe
push
jb
mov
add
mov
aas
daa
cld
sbb
fdivrl
xchg
dec
push
jnp
sub
in
adc
sub
stos
push
ret
fidivrs
adc
and
pusha
add
addr16
pusha
add
lds
out
pop
pop
jb
mov
sub
scas
and
aaa
add
stos
mov
ds
push
mov
scas
mov
push
dec
jnp
std
ja
mov
aam
mov
cld
push
xchg
add
mov
sub
hlt
out
rcrl
cwtl
addb
movsb
cmp
mov
cmc
cmpsb
ret
mov
insl
das
sbb
push
jno
add
mov
addb
mov
js
and
ds
add
add
loope
insl
addb
inc
add
mov
adc
mov
rolb
mov
jecxz
imul
dec
xchg
stc
ret
sub
stc
and
push
add
pop
push
pusha
add
rolb
sub
cli
scas
xlat
les
pop
call
repz
loopne
mov
add
add
dec
lods
popa
or
pop
cmp
mov
rolb
mov
lret
push
lret
mov
outsl
pop
shrl
mov
mov
push
fsubrs
ret
jmp
shl
mov
mov
push
sahf
in
imul
addr16
cmc
orl
jne
enter
jmp
mov
sbb
js
xor
test
ja
outsl
lcall
mov
add
add
sbb
ss
fmuls
test
jmp
sti
fs
adc
mov
sbb
out
iret
gs
add
repz
xchg
add
mov
jg
dec
rolb
sahf
movb
icebp
dec
cmp
sub
mov
and
pusha
add
addb
adc
mov
mov
mov
int
add
sub
and
bound
mov
add
dec
outsl
xor
add
lahf
sarl
mov
add
insl
mov
sbb
add
push
fbld
adc
inc
add
lock
mov
mov
ja
add
sub
cmp
add
loopne
mov
test
rolb
mov
mov
popa
out
mov
mov
test
pusha
add
movsb
in
mov
mov
ss
es
mov
adc
xchg
lea
fiaddl
cmc
ds
addb
xor
add
into
in
in
add
adc
add
mov
loope
popf
cmc
ja
loop
mov
sub
flds
lret
add
jl
dec
subl
xchg
add
push
xor
push
add
rolb
mov
add
push
pop
xchg
push
dec
inc
pop
test
insb
xchg
fidivl
lret
lret
add
mov
fsts
add
push
sub
and
fildl
mov
mov
push
jns
mov
push
inc
jge
dec
pop
roll
mov
cmp
mov
or
loope
out
mov
aas
loopne
mov
nop
add
stos
xchg
test
nop
add
arpl
inc
add
jae
mov
mov
xor
add
bound
mov
in
aaa
xchg
pop
or
lret
add
in
clc
dec
or
add
add
mov
out
cmp
sub
add
xor
rolb
mov
mov
mov
xchg
pusha
add
into
stos
rolb
mov
out
jns
inc
loopne
mov
out
outsb
mov
mov
pop
inc
fs
rcll
add
cmp
test
push
push
dec
iret
cltd
dec
andl
mov
jne
and
push
stos
inc
js
add
pop
xor
mov
add
mov
stc
andl
mov
in
or
add
shrl
adc
adc
mov
xor
loop
mov
dec
and
pop
leave
dec
jae
test
add
mov
popf
ret
mov
add
push
in
loop
mov
push
stos
xchg
stos
jle
inc
js
adc
add
pop
dec
gs
push
aad
push
xor
mov
insl
addb
and
scas
fld
imul
test
sub
lahf
cmc
rolb
mov
jge
mov
inc
gs
adc
add
jecxz
lret
cs
jl
add
cltd
add
mov
adc
add
mov
loope
adc
add
mov
push
jp
push
int
into
insl
out
test
sub
xor
add
mov
lds
es
and
mov
add
mov
add
sbb
add
lock
movsl
loopne
mov
add
sbb
add
inc
fcomps
mov
mov
add
push
js
add
mov
addb
mov
inc
mov
push
mov
loop
mov
cmp
dec
jge
ljmp
test
scas
test
xor
pop
cmc
inc
add
cmp
add
push
arpl
add
sub
scas
push
sub
inc
push
js
fucom
pop
cmp
xchg
mov
je
test
add
rolb
adc
mov
jmp
stos
xchg
in
cmpsb
popl
add
add
ja
add
lock
mov
mov
mov
rolb
mov
mov
loop
mov
lret
addr16
add
icebp
or
add
cmc
sub
push
cwtl
icebp
sbb
lret
sbb
addb
inc
lock
rcrl
adc
mov
mov
data16
or
or
dec
ljmp
mov
add
dec
insb
arpl
inc
je
nop
add
decb
out
fmuls
add
add
pop
lretw
mov
clc
mov
cmp
inc
xchg
pop
mov
sbb
add
mov
mov
in
push
xor
mov
xchg
cmpsb
mov
mov
in
jle
cltd
pop
mov
imul
mov
mov
push
aad
push
pop
jo
mov
add
pop
ja
ja
inc
pushw
sbb
and
mov
cs
mov
cmp
add
leave
stc
jg
test
xchg
add
mov
scas
rorl
add
cmp
leave
movsl
cmpsb
adc
mov
scas
popf
or
loope
add
jno
mov
pop
js
sub
inc
xchg
cmp
jmp
lods
jmp
test
loop
mov
cmpsb
jl
inc
ljmp
int
add
repnz
mov
or
mov
xchg
sbb
mov
xchg
rcrl
adc
mov
pusha
add
mov
aas
xor
lcall
loop
mov
add
nop
add
nop
add
jge
ljmp
add
push
aam
pop
xchg
cmpsl
mov
add
push
add
mov
mov
sbb
sbb
xor
mov
and
mov
cmp
sub
add
mov
adc
mov
and
mov
cmpl
lds
sub
call
sahf
adc
sub
movsl
mov
lea
ds
gs
test
jnp
pop
fyl2x
lds
xor
adc
mov
adc
mov
or
repz
out
add
push
add
mov
inc
push
loope
add
xor
mov
add
jmp
ficompl
mov
inc
mov
add
add
mov
add
add
out
hlt
cmp
fsubrl
sub
push
loope
rolb
ljmp
add
add
mov
dec
pushf
inc
inc
mov
add
mov
out
fcomps
dec
push
sub
pop
inc
jb
mov
dec
shll
add
add
loop
mov
mov
popa
jg
dec
movsl
out
in
xchg
lahf
or
add
fistps
xchg
jge,pn
add
mov
and
mov
jecxz
mov
mov
data16
jae
add
add
mov
sti
aam
jle
add
mov
cmpsl
fwait
mov
mov
add
dec
icebp
hlt
cs
push
add
push
add
push
je
push
mov
inc
add
add
clc
les
inc
pop
cmp
sti
lret
adc
out
test
mov
jg
test
add
mov
add
stc
xchg
inc
icebp
stc
xchg
in
mov
fisttpl
movsb
or
lret
mov
pop
and
int
inc
icebp
pop
mov
jbe
push
int
push
jns
add
in
add
dec
test
xchg
jno
or
loopne
mov
cltd
sub
mov
mov
and
mov
adc
mov
cs
adc
mov
mov
fwait
popa
pop
repz
push
inc
sub
into
pop
adc
xchg
cmc
xchg
add
mov
xchg
add
xlat
sbb
hlt
cmp
jo
mov
cmp
add
mov
sbb
data16
mov
add
mov
inc
add
outsl
dec
push
fldl
mov
fwait
adc
mov
xchg
mov
in
out
add
cli
pop
xor
pushf
jmp
mov
sbbl
mov
jle
test
mov
add
jns
inc
sbb
mov
movsl
cltd
xchg
jg
or
xchg
es
add
jno
mov
add
add
mov
ret
fnstcw
popf
cs
inc
xor
fisubs
add
mov
jo
mov
add
aaa
push
xor
fdivrl
imul
ljmp
sub
add
fndisi(8087
jge
fstpl
ret
jp
or
pushf
sub
mov
mov
jle
add
test
ret
inc
rcll
mov
mov
mov
add
mov
repnz
cmpsl
xor
add
popa
cmp
lret
in
mov
enter
xchg
loope
out
jo
mov
stos
out
mov
sbb
gs
notl
add
add
mov
insb
and
cwtl
mov
mov
aaa
adc
add
in
mov
push
add
stc
dec
add
mov
cmp
add
arpl
es
push
inc
adc
dec
cmp
subl
adc
inc
dec
ret
repnz
add
mov
mov
jmp
sbb
mov
add
mov
add
ljmp
aas
jb
mov
add
mov
sbb
xchg
jle
adc
int
fxam
xchg
adc
popf
test
ret
fldenv
testl
movsb
leave
es
in
pop
fdivrl
insl
sub
cmp
jp
adc
hlt
pop
push
add
add
lock
loopne
mov
ret
mov
mov
nop
add
rcll
mov
and
invd
or
add
push
add
mov
add
mov
ja
sbb
pcmpgtd
mov
insb
pop
fsubl
add
jnp
sub
insl
sub
jl
add
ffree
jne
cmp
in
sbb
pop
cmp
ja
in
cmp
addb
cwtl
dec
repnz
lds
sub
inc
add
pop
sahf
lods
ja
sub
rcll
mov
add
push
add
xchg
loopne
mov
sbb
lods
push
inc
and
filds
add
jns
sahf
push
add
les
addb
mov
mov
fmuls
inc
pop
push
addb
rolb
hlt
stos
gs
insb
roll
jp
popf
mov
inc
add
stc
outsb
ds
mov
xchg
rcll
aam
mov
add
add
std
adc
add
shrl
mov
xchg
push
push
inc
add
add
mov
push
add
fistps
lods
or
rep
fistpl
add
push
iret
cs
clc
mov
xchg
mov
leave
sbb
mov
mov
add
push
mov
or
adc
add
push
jnp
inc
ret
pop
sub
add
cmp
fidivl
popf
xor
add
rolb
mov
push
mov
pop
adc
jnp
mov
daa
enter
xchg
add
mov
and
fnstcw
xor
mov
inc
add
jne
add
jae
push
cmp
stos
xchg
jbe
add
bound
mov
movsl
add
or
mov
adc
mov
ljmp
sbb
jbe
push
inc
xor
or
ja
arpl
mov
add
aad
bound
mov
into
or
lds
pop
dec
and
mov
add
add
mov
mov
es
mov
mov
mov
cmpsb
lret
xor
hlt
mov
imul
cmc
jge
xor
mov
dec
int
pop
fwait
push
mov
mov
mov
fnop
add
add
or
add
xchg
inc
movsb
js
inc
lret
stos
lcall
leave
loop
mov
fstpl
insl
pusha
add
and
int
add
mov
stc
push
call
mov
mov
pop
call
mov
ljmp
sub
mov
or
cmpsb
sti
pop
stos
scas
ds
cmpsl
jbe
push
add
in
adc
mov
lods
inc
inc
push
gs
outsl
scas
jbe
or
mov
cmp
pop
mov
sub
loope
ret
dec
dec
push
add
mov
xchg
ret
cltd
lret
add
mov
cmpsl
arpl
in
movsl
stos
jl
jmp
adc
mov
scas
jb
mov
xchg
add
mov
rolb
mov
adc
add
out
test
xor
mov
add
jmp
cmpsl
popa
dec
inc
sbb
mov
xchg
sbb
mov
mov
jb
mov
movsl
iret
dec
jmp
dec
push
addr16
adc
mov
scas
lcall
ret
rolb
outsb
fildll
outsb
adc
dec
sub
xchg
add
mov
mov
data16
push
stos
pushf
rolb
mov
mov
mov
jno
mov
mov
rolb
mov
add
add
jp
jne
fldcw
sbb
add
xchg
cwtl
sbb
scas
pop
hlt
es
mov
and
mov
sub
std
daa
mov
test
add
pushf
ficompl
mov
xor
mov
pop
popf
sbb
adc
xor
mov
add
and
mov
add
mov
add
sub
add
lock
and
mov
popf
xor
inc
add
repz
out
jb
mov
push
pushf
inc
mov
push
cmp
sub
mov
repnz
mov
orl
mov
add
add
movsl
rcrl
cmp
shl
add
mov
decb
xor
mov
out
mov
mov
out
mov
or
aaa
pop
mov
mov
jne
mov
mov
push
aad
movsl
clc
imul
cmp
dec
dec
aam
inc
add
cmp
add
repz
push
mov
or
push
fcompl
scas
xor
add
add
popa
mov
inc
inc
test
lods
jno
pop
daa
cmp
add
dec
lock
jp
loop
mov
mov
iret
pop
mov
lea
jo
mov
pop
jl
or
hlt
push
xchg
roll
cmc
into
lods
add
iret
jg
mov
or
lret
mov
add
add
push
add
lcall
repz
push
lds
and
mov
out
push
inc
imul
addb
pop
or
lock
in
add
add
iret
mov
jo
mov
cmpsl
mov
add
xor
mov
mov
fisttpl
mov
mov
mov
sub
add
sub
lcall
fs
daa
push
clc
rol
add
loope,pt
pusha
add
rorl
mov
mov
insb
xchg
inc
es
mov
cmp
add
inc
cmp
add
add
out
pop
mov
imul
faddp
repnz
mov
adc
dec
mull
out
add
out
xchg
pop
sub
adc
mov
mov
das
push
stos
inc
add
push
fstpl
mov
or
mov
enter
addb
mov
in
mov
dec
push
mov
xor
or
mov
and
mov
jg
insb
xchg
add
cwtl
cmpsb
adc
test
inc
mov
add
outsl
pop
cmp
mov
add
xchg
dec
rolb
mov
sbb
sbbl
nop
add
das
mov
sbb
hlt
lea
add
repnz
sub
and
out
push
mov
mov
add
mov
aam
dec
inc
mov
dec
or
mov
add
mov
mov
daa
sbb
pop
adcl
mov
es
push
and
xchg
push
test
add
add
or
pusha
add
jecxz
add
mov
pop
bound
mov
add
mov
mov
sub
ret
orl
inc
mov
inc
xchg
imul
jle
xlat
leave
int3
mov
insl
lea
push
mov
mov
aas
je
nop
add
mov
call
sti
popl
mov
add
jne
outsl
add
adc
movsb
mov
je
sub
loope
sahf
lock
lock
and
xchg
cmpsl
js
mov
xor
pop
js
ljmp
or
sub
movsb
scas
mov
add
lea
push
dec
data16
inc
int
clc
inc
cmpsl
test
jg
push
movsb
out
aas
les
sti
add
add
push
xor
push
add
add
mov
pop
dec
mov
ss
mov
xor
mov
mov
icebp
xchg
cld
jmp
mov
mov
xchg
xchg
pushf
int
pusha
add
mov
cmc
push
out
rolb
mov
in
jmp
dec
pop
stc
ljmp
inc
aaa
add
mov
js
pop
push
lret
and
nop
add
push
ret
fcmovnb
add
sub
pop
xor
inc
add
lahf
fisubrs
in
into
adc
mov
mov
mov
out
daa
mov
stc
movsl
movsl
movb
adc
add
addr16
rolb
mov
lods
ds
aad
add
outsb
in
clc
pop
and
mov
popf
into
pop
dec
outsl
lahf
loopne
mov
sub
scas
dec
sbb
jl
add
jb
mov
jecxz
pop
popf
call
addr16
inc
mov
dec
inc
rolb
mov
les
add
addb
pop
je
sub
dec
cmp
mov
pop
mov
mov
add
lahf
pop
cmp
add
mov
mov
mov
push
mov
sahf
push
shll
inc
adc
mov
mov
loopne
mov
std
mov
scas
mull
mov
arpl
or
js
insb
dec
xchg
add
add
ret
xor
cmp
jmp
dec
insb
pop
mov
cmc
fstps
bound
mov
add
add
inc
sub
add
mov
xchg
ja
sub
xor
xlat
push
adc
pop
repz
dec
mov
out
jno
insl
pop
xchg
push
lds
ljmp
mov
mov
jnp
mov
mov
mov
inc
addb
test
mov
mov
mov
add
add
fwait
lods
mov
pop
gs
or
mov
add
leave
jns
pop
aam
jmp
cmc
rolb
mov
mov
push
fcoml
xor
jg
or
outsb
or
rcpps
inc
pop
inc
xchg
adc
mov
aad
cmp
add
popa
xchg
popf
cmp
imul
jg
add
add
add
mov
addb
in
int3
outsl
and
mov
add
shll
add
add
movsl
in
jg
pop
jmp
mov
inc
std
or
out
shrl
add
mov
test
jae
add
mov
les
gs
pop
push
add
inc
frstor
mov
xchg
addr16
sub
out
xchg
out
mov
stc
jge
or
outsb
add
add
mov
iret
imul
into
xchg
dec
imul
pusha
add
mov
jge
lock
mov
and
xchg
mov
mov
pop
hlt
jp
jl
add
push
xchg
scas
lret
das
mov
xchg
call
lcall
xchg
jbe
jecxz
lock
int
ljmp
icebp
jns
rolb
sub
out
jle
xchg
and
pop
push
jl
cltd
test
hlt
and
add
mov
stos
out
test
sbb
roll
dec
sbb
mov
ds
adc
movsb
loopne
mov
mov
mov
movsb
imul
mov
mov
cltd
xchg
add
mov
in
xor
mov
jns
dec
enter
add
xchg
push
mov
add
dec
stc
jno
add
mov
cmp
pop
and
add
add
icebp
pop
and
mov
dec
mov
push
in
jnp
xor
in
mov
hlt
jne
add
imul
cmc
sub
lcall
push
xor
nop
add
cmc
mov
mov
cli
jl
xor
add
add
test
xor
mov
sub
rolb
lret
mov
xchg
pop
hlt
mov
push
lea
ja
rolb
addb
push
xor
fs
les
adc
add
popf
or
and
jle
aaa
pop
lods
ja
mov
mov
add
add
mov
aad
and
movl
push
lds
jg
fildl
inc
add
inc
adc
and
mov
sbb
xor
mov
das
jl
movsb
xor
jle
mov
dec
push
jo
mov
fucomp
sub
dec
xor
mov
lret
addb
mov
xor
mov
mov
lcall
inc
add
pop
gs
call
mov
sbb
das
mov
rorl
movsb
adc
scas
shrl
mov
push
arpl
ficoms
cs
out
cmp
dec
push
jnp
rcrl
mov
xchg
repz
and
mov
mov
mov
leave
outsl
mov
cmp
out
call
add
pop
sub
mov
or
das
and
mov
lcall
add
lret
sub
ja
rolb
mov
adc
hlt
sub
fnsetpm(287
pop
fcmovnb
and
xor
mov
or
nop
add
mov
mov
mov
and
mov
fldenv
add
ret
icebp
into
incb
in
sub
popa
jae
pop
inc
sub
int3
aad
hlt
es
dec
frstor
cli
repz
add
add
mov
js
add
js
out
sub
cmpsb
inc
cmp
scas
call
or
and
mov
nop
add
rolb
mov
push
out
repnz
mov
int3
mov
pop
adc
mov
in
push
outsl
fidivs
int3
and
adc
add
mov
lcall
mov
or
add
icebp
iret
ljmp
mov
cmpsl
mov
lahf
dec
adc
dec
inc
leave
mov
mov
adc
mov
in
mov
xchg
add
mov
rolb
mov
and
lods
jns
add
clc
add
outsl
rolb
mov
mov
fs
and
mov
add
arpl
shl
or
subl
dec
lds
push
jns
daa
frstor
adc
mov
inc
aam
add
sub
add
jae
adc
mov
add
xor
mov
aas
pushf
test
mov
cld
lods
cs
mov
xchg
mov
add
dec
xchg
mov
and
imul
xlat
and
out
test
mov
data16
xor
mov
push
shl
inc
mov
mov
add
bound
mov
aad
jl
das
ljmp
loop
mov
add
mov
mov
mov
enter
data16
rcl
cmp
add
pop
loope
jb
mov
add
push
pop
fsubr
fdivs
jge
roll
mov
ljmp
cmp
fs
or
in
push
outsl
cmp
mov
cltd
mov
xchg
add
add
pop
mov
cmp
lods
ret
in
xor
mov
dec
jl
pop
repz
das
mov
or
pop
popl
lods
lock
add
sbb
sub
mov
in
std
icebp
sub
or
aas
call
shl
pop
cmp
add
ja
rolb
mov
in
add
hlt
cmp
inc
jp
sahf
test
add
mov
inc
shr
movsl
cmp
loope
mov
sbbl
frstor
testl
sahf
int3
sbb
pop
xchg
add
sub
aaa
xchg
sub
sbbl
mov
mov
xchg
mov
mov
ficoml
mov
add
mov
inc
iret
test
lea
push
lcall
dec
inc
stos
addb
inc
push
ret
jg
mov
mov
mov
inc
add
mov
inc
inc
add
pop
xorl
add
in
xchg
or
adc
xchg
add
push
add
negb
add
mov
mov
jns
ficomps
mov
mov
ja
or
inc
inc
mov
pop
fwait
hlt
adc
test
js
addb
cmp
push
dec
pop
sub
jp
adc
mov
out
andl
out
sahf
ja
call
push
call
dec
jecxz
add
fidivrl
jo
mov
mov
push
stos
into
scas
or
or
hlt
adc
divl
and
add
xor
inc
cmpsb
cmpsb
test
out
or
mov
add
pop
xchg
mov
mov
lret
bound
mov
out
movsb
jmp
add
add
pop
xchg
add
cmp
add
push
add
addb
aad
xchg
out
scas
rcrl
inc
mov
imul
mov
imul
add
mov
add
add
add
dec
mov
mov
pop
pop
xor
add
xchg
push
xlat
pop
fidivs
mov
sub
push
test
inc
and
push
sub
add
pusha
add
jbe
jne
popa
mov
add
xor
add
xchg
mov
ja
out
jl
fisubrl
lods
jle
add
aaa
pop
addb
dec
xchg
inc
jo
mov
mov
mov
jl
add
mov
std
add
lcall
add
daa
sbb
mov
addb
and
mov
and
jecxz
in
popf
adc
rdpmc
xchg
mov
movsb
das
mov
iret
loope
fbld
jns
enter
push
rolb
out
fldl
loopne
mov
inc
aaa
push
add
ds
leave
incl
mov
insl
fbld
mov
stc
jns
add
ret
inc
sub
xchg
pop
iret
mov
add
and
mov
xchg
shrl
std
scas
mov
fwait
insl
xchg
mov
mov
add
mov
mov
cmc
mov
lock
add
push
sbb
xor
inc
addr16
mov
outsl
push
mov
mov
add
popf
lret
into
cmp
add
mov
push
inc
add
add
sub
mov
fucom
add
add
add
jge
movsl
mov
sub
inc
jne
mov
mov
dec
jge
rcrl
ljmp
fnstsw
enter
sahf
cmpsl
cmp
aas
in
stos
mov
mov
sbb
mov
cli
or
mov
enter
sub
stc
bound
mov
sub
cltd
jnp
cli
push
mov
mov
ja
add
ljmp
insl
pop
scas
fcom
add
mov
jg
xchg
dec
arpl
cmpsl
mov
dec
mov
loope
imul
inc
add
repz
lahf
sub
mov
add
