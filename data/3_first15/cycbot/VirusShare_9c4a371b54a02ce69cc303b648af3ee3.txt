pop
pop
pop
pop
cmp
aaa
xchg
xchg
outsl
inc
inc
inc
and
iret
iret
iret
iret
iret
iret
xor
xor
xor
xor
rol
push
push
lcall
mov
or
mov
ret
sub
insl
insl
insl
insl
sahf
sahf
repnz
xor
dec
scas
scas
push
mov
data16
mov
mov
ret
sub
sub
sub
leave
leave
cmpsl
repnz
mov
adc
cmp
pop
mov
pop
pop
jecxz
fcmovnu
arpl
cmp
xchg
xchg
xchg
xchg
rcl
sub
adc
cmp
cmp
adc
adc
jmp
sub
ja
out
out
out
xchg
xchg
gs
out
outsb
outsb
outsb
outsb
jmp
icebp
movsb
add
pop
pop
pop
pop
pop
inc
fidivrl
ss
lahf
lahf
lahf
rcl
rcl
mov
mov
mov
mov
mov
dec
dec
stos
out
outsl
mov
sub
pop
pop
lret
addr16
and
dec
dec
dec
cmp
cmp
lock
cmp
sbb
add
dec
dec
fcmovu
out
out
out
mov
clc
push
push
addr16
jbe
jbe
jbe
mov
daa
push
cmp
cmp
cmp
inc
inc
inc
inc
inc
pop
or
popf
popf
imul
adc
push
scas
mov
xchg
inc
xor
mov
mov
mov
mov
scas
scas
push
push
push
push
pop
pop
inc
inc
inc
lcall
int3
int3
int3
push
push
push
push
add
mov
lods
xchg
xchg
xchg
lret
mov
roll
push
mov
cmp
mov
je
mov
popf
popf
pusha
mov
xor
ret
xchg
xchg
or
or
or
sarl
shlb
daa
jbe
lea
sub
and
and
cmp
cmp
push
out
out
mov
adc
jg
jg
jg
sbb
or
es
xchg
lock
jmp
and
fcmovu
fcmovu
fcmovu
sbb
out
pop
popa
popa
inc
inc
inc
inc
inc
inc
ljmp
ljmp
push
push
push
addl
bound
out
mov
and
addl
fcomp
mov
mov
stos
adc
mov
or
adc
pop
fiaddl
add
je
xchg
movsl
movsl
call
out
pop
pop
and
sub
cmc
cmc
cmc
sbb
pushf
mov
stos
mov
or
outsb
outsb
outsb
outsb
lahf
lahf
lahf
mov
setne
rol
rcl
shll
xchg
xchg
xchg
xchg
xchg
jmp
xor
leave
leave
leave
leave
pop
mov
lret
inc
std
std
add
add
test
cmc
cltd
cltd
stc
adc
aas
aas
aas
aas
aas
aas
dec
dec
inc
iret
mov
ss
cmp
cmpsl
sub
lds
lahf
adc
adc
sbb
sbb
xchg
xchg
xchg
xchg
xchg
out
out
pop
mov
mov
sbb
sbb
pusha
pusha
pusha
out
fsin
or
push
daa
daa
stc
inc
jmp
xor
xor
xor
pop
aad
xor
or
in
in
lock
inc
mov
imul
cmp
and
and
pop
ret
xor
rcl
xchg
cmc
xchg
mov
cltd
cltd
cltd
jne
rcrb
push
push
pop
and
add
add
out
out
cli
jb
jb
dec
add
sahf
sahf
ret
ret
ret
sub
or
push
fidivrs
shr
mov
jle
inc
cld
rorb
and
xlat
jmp
icebp
icebp
loope
dec
dec
sbb
enter
rcl
dec
test
cmp
cmp
arpl
arpl
fcmovu
adc
adc
data16
hlt
push
push
mov
mov
ds
jle
scas
scas
push
repz
outsl
push
mov
mov
mov
mov
jae
jae
mov
pushf
jle
stc
mov
aam
inc
inc
inc
inc
inc
inc
inc
inc
aam
aam
addr16
stos
jbe
lcall
pop
push
or
pop
rol
push
push
push
push
push
rol
fidivrl
lcall
inc
inc
inc
nop
nop
nop
nop
arpl
shlb
mov
dec
dec
test
out
sub
sub
add
add
out
xchg
test
lods
jecxz
jecxz
adcb
mov
mov
mov
out
add
cmp
call
ljmp
aad
aad
cmpsb
cmpsb
in
out
les
int
sub
jp
jp
repnz
loop
shlb
fcmovu
ficompl
sub
fstpt
adc
rcl
xor
push
push
mov
mov
or
outsl
fwait
push
push
mov
dec
dec
dec
dec
das
das
fwait
fwait
push
push
push
adc
out
mov
mov
mov
in
in
jno
js
js
js
inc
mov
cli
cli
cli
pop
pop
icebp
loop
addb
inc
inc
fcoms
pusha
pop
xor
xor
dec
xchg
movsb
sub
movsl
movsl
aam
aam
pop
clc
clc
clc
clc
add
sbb
sbb
loop
popf
nop
rcl
xor
mov
cmp
pushf
cmp
test
daa
out
ret
pop
mov
adc
sbb
sbb
sub
push
lea
dec
dec
dec
jne
ret
push
xchg
sbb
mov
into
add
repz
stc
dec
js
mov
xchg
rol
out
lahf
lahf
lahf
lahf
lahf
xchg
xchg
outsl
out
and
pusha
out
pushf
jg
add
nop
mov
pop
pop
sub
out
out
out
out
sti
xor
inc
adc
xchg
xchg
xchg
pop
pop
or
sub
addb
sbb
repnz
fwait
and
and
cs
and
mov
fsubl
xchg
push
push
jno
mov
push
push
mov
mov
out
insl
fiaddl
mov
xor
xor
xor
xor
xor
sahf
and
enter
add
xor
adc
add
pop
pop
pop
xchg
xchg
out
out
out
out
icebp
icebp
and
movsb
movsb
aad
jns
sub
sbb
lods
sbb
pop
pop
mov
add
adc
adc
icebp
icebp
inc
xor
out
out
mov
fcmovnu
fstpt
pusha
pusha
jge
adcl
jne
loopne
loopne
loopne
loopne
loopne
out
mov
jnp
jnp
les
aad
adc
adc
rol
shll
cmp
rclb
adc
stc
adcl
jle
jle
lds
push
lcall
or
cmp
mov
jmp
jns
pop
add
imul
adc
pop
pop
pop
pop
pop
pop
mov
mov
sub
sub
in
test
addl
jp
add
out
out
out
out
rcl
rcrb
dec
dec
dec
into
add
lret
mov
push
mov
sub
sub
sub
sub
sub
sub
ds
out
out
sub
pop
pop
ret
in
adc
or
imul
dec
dec
xor
and
and
scas
cmp
fwait
pop
lods
mov
mov
mov
mov
mov
sbb
sbb
xchg
xchg
xchg
xchg
xchg
xchg
xchg
insl
pop
pop
shlb
imul
sti
sti
jmp
jmp
mov
sbb
mov
daa
daa
daa
sbb
fcomp
fcoms
iret
iret
mov
mov
mov
adc
fmuls
por
fisubrs
push
push
pop
pop
pop
das
das
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
ret
rol
rol
rcll
cs
xor
xchg
xchg
mov
ss
sub
add
lret
lret
lret
xor
out
out
in
and
xchg
xchg
aam
mov
mov
mov
mov
mov
push
xchg
addr16
sub
cs
cmp
fwait
fwait
fwait
ds
imul
fs
popa
sbb
sbb
loope
jmp
div
div
div
into
jmp
jae
jae
push
push
out
out
adc
jecxz
inc
inc
dec
dec
and
sbb
push
push
push
mov
add
push
push
push
push
aas
lret
lret
lret
push
push
inc
push
push
push
push
test
test
pusha
pusha
adc
adc
adc
out
or
out
mov
or
fs
cmpsb
out
rcl
push
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
push
fwait
lret
jecxz
out
add
hlt
hlt
je
dec
dec
dec
dec
dec
pop
pop
pop
movsl
addb
insb
insb
xor
sbb
sbb
sbb
fimull
or
insl
insl
stos
stos
stos
ja
ja
iret
add
je
jae
mov
jne
loopne
ret
out
test
push
gs
cmp
cmp
cmp
cmp
cmp
ds
fcoml
pop
pop
repnz
mov
shlb
xchg
sbb
std
fs
loopne
loopne
adc
push
push
push
ret
cmc
cmc
cmc
cmc
adc
loopne
cmpb
jo
push
out
out
and
rcl
shll
mov
fwait
lock
dec
dec
dec
cmpsb
sub
inc
inc
xor
mov
enter
enter
movsb
aaa
xchg
jecxz
dec
dec
dec
push
sub
filds
repnz
adc
mov
test
repnz
ret
ret
ret
arpl
push
mov
mov
xor
clc
clc
ja
cmc
aam
movsl
push
push
push
cmc
cmc
cmc
fisttpl
or
or
popa
mov
jg
daa
repz
cmpsl
rcl
int3
int3
jae
add
loop
loop
mov
jl
jl
out
call
sub
mov
adc
jge
xchg
xchg
xchg
xchg
xchg
inc
inc
inc
inc
inc
inc
push
int3
pushf
pushf
adc
adc
adc
mov
mov
adc
xor
xor
xor
addl
dec
inc
es
dec
dec
dec
dec
dec
dec
jo
dec
insl
insl
insl
jmp
div
cmp
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
lea
push
push
push
jg
call
xchg
inc
inc
lods
add
fs
dec
mov
movsb
or
sbb
pop
lods
pop
stos
rcl
xor
cmp
bound
add
push
push
push
stos
mov
push
adc
adc
repnz
sbb
sbb
ljmp
or
inc
inc
inc
std
std
std
out
out
out
out
out
mov
and
nop
nop
nop
and
and
pushf
hlt
outsb
outsb
fnstsw
mov
pop
pop
lods
lods
stos
jmp
cs
cli
stos
orl
push
out
movsb
movsb
inc
cld
fdivl
sub
scas
scas
scas
scas
scas
scas
sub
pop
add
test
fs
dec
dec
dec
daa
push
push
push
enter
and
sub
fists
dec
dec
mov
mov
std
or
push
push
push
push
push
push
push
push
cmp
pop
loop
sbb
sbb
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
out
out
out
out
out
out
out
out
out
out
cmp
in
in
xor
out
out
ja
pop
pop
pop
inc
inc
inc
inc
inc
inc
cmp
lahf
rcrb
cmp
cmp
mov
adc
adc
adc
push
dec
dec
daa
dec
dec
dec
dec
dec
mov
scas
scas
scas
ficoms
xchg
xchg
ret
ret
ret
pop
pop
pop
xchg
rcl
rcl
rcl
rcl
inc
inc
and
sbb
sbb
aas
add
outsl
outsl
push
adc
adc
jl
cs
sbb
sub
in
int
stc
pop
pop
mov
pop
pop
xchg
sub
jl
xchg
xchg
shlb
sub
dec
dec
mov
mov
cld
cld
fimuls
pop
push
push
push
aad
sub
adc
xor
xor
pop
roll
scas
scas
or
adc
dec
dec
adc
push
push
stc
stc
iret
jbe
aas
cmp
in
cmp
cmp
pushf
loop
ret
mov
mov
pop
mov
call
daa
jb
jb
dec
xor
lret
lret
adc
mov
xchg
xchg
xchg
mov
jb
push
add
mov
mov
jnp
mov
xlat
xlat
cld
cld
sub
xchg
xchg
mov
out
jo
std
lds
fisttps
push
push
push
mov
mov
mov
mov
mov
sahf
sahf
push
addr16
nop
std
cltd
lock
xchg
loopne
xchg
out
push
fimull
cs
push
rcl
cmpsl
cmpsl
cmpsl
dec
dec
dec
icebp
icebp
icebp
icebp
iret
iret
mov
inc
inc
inc
repnz
scas
inc
mov
shrb
xor
cld
jo
mov
push
push
push
test
mov
mov
addb
sbb
sbb
mull
cld
jg
mov
daa
daa
addb
adc
add
add
rol
adc
or
push
push
push
mov
mov
or
or
lret
dec
cli
cli
lret
lret
lods
sbb
jecxz
movsl
xor
stos
stos
lret
rol
rcl
mov
rcl
jns
jns
sub
sub
jnp
push
push
push
push
xchg
pop
mov
jg
lahf
lahf
lahf
lahf
cld
cld
jo
stos
stos
stos
stos
icebp
icebp
icebp
icebp
fwait
and
out
out
pop
iret
mov
xchg
xchg
xchg
push
lret
or
adc
jl
and
xchg
push
push
mov
pushf
or
jmp
dec
push
inc
inc
jl
lea
insl
insl
insl
insl
shlb
and
rol
rol
sub
sub
repz
xchg
ds
push
stos
stos
stos
jno
jo
rcl
jmp
jmp
dec
dec
dec
mov
mov
lock
fcomps
mov
dec
shl
ss
xchg
xchg
cmpsb
push
push
push
push
lea
cmp
in
xor
jne
jne
pop
pop
pop
pop
pop
sub
addl
push
push
out
adc
adc
lahf
lahf
lahf
or
or
xchg
pushf
pushf
ret
ret
jmp
fnstcw
mov
mov
pushf
shrb
xchg
cmp
add
jbe
or
cmp
or
in
sbb
sbb
ret
lret
lret
dec
add
or
pop
lods
out
in
outsb
rol
pop
loopne
or
ret
adc
or
push
push
push
push
adc
dec
stos
stos
stos
daa
daa
or
dec
dec
dec
dec
psrlq
cmp
cmp
cmp
cmp
dec
dec
dec
dec
movsb
movsb
movsb
movsb
dec
dec
dec
mov
fcmovu
scas
scas
scas
nop
nop
jbe
jbe
jbe
jbe
or
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
fcomp
push
rcrb
int3
imul
dec
xor
scas
roll
cmc
cmc
cmc
cmc
cmpsb
pop
pop
pop
pop
pop
or
ljmp
insl
insl
push
push
push
push
pop
pop
pop
pop
pop
out
test
add
mov
and
es
xor
add
pop
pop
dec
dec
dec
mov
push
popf
popf
popf
xor
xor
inc
inc
inc
inc
data16
jge
jnp
clc
clc
fildl
jne
addb
fcoml
inc
dec
dec
dec
xlat
xlat
push
and
cmp
inc
push
into
notl
jmp
cmpsb
stos
sti
sti
mov
int
mov
mov
pop
pop
pop
xchg
loopne
sahf
test
sub
xchg
and
xlat
addl
std
mov
cmp
mov
add
and
and
mov
jbe
cmpb
jno
push
imul
ret
pop
xlat
sub
jmp
notb
outsl
fidivs
lods
movlps
fimull
jns
popa
mov
into
xchg
dec
incl
cmp
push
fnsave
xchg
xlat
mov
cmp
in
lods
shll
push
mov
sub
clc
lea
mov
cs
or
mov
repz
push
cltd
insb
mov
movsl
mov
sbb
adc
sbb
in
lret
or
fwait
dec
daa
and
cltd
adc
sub
dec
aaa
xor
and
jmp
insl
sbb
xchg
filds
mov
xor
mov
mov
out
popf
lods
inc
push
jnp
pop
std
scas
cmc
cmp
jnp
cmp
adc
sub
inc
pop
testb
je
jbe
into
cli
cmp
mov
lods
aad
movsl
sbb
mov
cmpsl
in
jecxz
inc
aam
int3
or
add
mov
dec
xchg
scas
gs
pop
cmpl
insb
std
sub
add
dec
add
dec
adc
mov
mov
lret
add
mov
jge
dec
add
sub
ss
add
inc
nop
fs
pop
adc
adc
lret
aam
jns
test
icebp
bound
cmc
movsl
aas
notb
jecxz
ja
rorl
loope,pn
popa
jne
fdivs
push
arpl
stos
mov
js
mov
add
sub
sub
add
out
mov
and
sti
pop
data16
mov
ss
out
mov
or
add
pop
push
add
movsb
pushf
sti
jecxz
mov
insb
and
lahf
pop
gs
mov
pusha
add
or
xor
out
lret
rol
xor
mov
pop
imul
add
in
push
xor
pop
iret
mov
js
mov
add
outsl
rorb
inc
aaa
in
movsb
mov
xchg
nop
incl
aas
xchg
enter
enter
int
outsl
imul
xchg
mov
sbb
and
add
inc
mov
data16
add
xchg
cli
xor
lcall
inc
icebp
bound
lds
add
sbb
loopne
stos
icebp
insb
test
orl
or
xor
jmp
cmc
mov
add
dec
fadds
jbe
xchg
nop
out
jb
imul
push
lock
sbb
je
add
add
stos
popa
inc
sub
mov
adc
jns
cmpsl
cmp
jl
call
xchg
vxorps
mov
insl
shrb
and
sbb
adc
loop
mov
loopne
sbb
pop
lea
xor
call
aas
jle
adc
arpl
mov
mov
push
pop
jnp
and
push
rorl
xchg
out
dec
add
ja
movsb
mov
pop
sbb
not
cmp
fistpll
jne
fcomi
lods
icebp
jmp
push
es
shl
test
or
add
add
shlb
negl
aaa
dec
out
hlt
nop
pop
xchg
mov
inc
ljmp
mov
xchg
stos
sub
inc
sahf
and
push
jb
mov
xorl
and
push
ss
movsb
dec
adc
out
adcb
cmp
adc
or
and
rclb
xchg
insb
in
or
fs
cmpsl
sub
pop
adc
jmp
pop
ljmp
pushf
aas
mov
cltd
nop
inc
jno
push
or
fldt
sbb
mov
mov
int
fucomp
addr16
add
out
rcrl
cwtl
lods
add
add
or
sbb
cmp
gs
add
sub
adc
test
loopne
je
sub
pop
and
arpl
cmp
xchg
repz
inc
add
push
outsl
pop
pop
loopne
into
loopne
pop
daa
sbb
pop
add
jns
scas
mov
push
jae
inc
repz
filds
jge
movsb
mov
outsl
pop
and
lahf
mov
dec
sub
je
test
and
jo
add
mov
scas
pop
repz
xchg
mov
lock
jns
push
arpl
mov
jecxz
les
std
nop
int3
pop
sahf
sub
cmp
ret
xor
orb
arpl
rorl
mov
fnstenv
pop
or
xor
push
fcompl
movsb
rol
push
aas
dec
add
sbb
push
xlat
cmc
mov
mov
and
dec
mov
sbb
xchg
cmovne
xor
add
mov
decl
ds
enter
add
mov
or
pop
dec
sbb
out
mov
jle
setnp
popa
bound
out
and
imul
lret
pop
push
pop
inc
pop
xor
cltd
mov
aaa
int
mov
std
cmp
sbb
sbb
insb
and
imulb
pop
add
pop
mov
inc
xor
mov
popa
out
ljmp
push
repz
aam
add
add
and
add
dec
mov
rcl
push
gs
sbb
ret
dec
scas
cwtl
mov
addr16
jmp
pop
add
pop
jmp
arpl
jg
fstpt
jg
lahf
sbb
push
and
and
jno
movsl
insl
cwtl
loopne
push
lods
int3
mov
jnp
mov
lcall
stos
pop
cmp
adc
xlat
es
sub
mov
and
add
xchg
cmp
add
or
xchg
into
fbld
add
pop
pop
add
dec
jmp
jecxz
pop
add
sub
lods
pusha
add
xchg
inc
test
or
sub
mov
sahf
add
lahf
cmpsb
lods
outsb
loope
add
mov
pop
mov
std
cwtl
cmpsb
cmp
xchg
mov
pop
lcall
push
into
push
pop
ljmp
inc
and
adc
add
push
popf
mov
addr16
ljmp
push
int3
sbb
xor
jge
call
cmp
hlt
ja
inc
mov
leave
cmp
jno
popf
sub
mov
nop
adc
or
jmp
inc
pushf
adc
inc
xchg
dec
xchg
mov
es
adc
orb
cmp
js
sahf
inc
pusha
add
or
jle
mov
push
push
lock
test
add
lahf
or
jg
rcrb
inc
movsb
mov
add
push
or
andl
movsl
decl
xchg
popa
lahf
inc
xlat
pop
rorl
outsl
pop
jge
cmp
mov
sbb
es
daa
jae
and
dec
xchg
arpl
roll
push
ret
loopne
arpl
stos
dec
xchg
out
xlat
mov
and
or
xchg
jne
add
inc
arpl
fdivr
sub
jno
ret
cmp
push
aad
mov
test
das
sbb
add
jbe,pt
out
add
cmp
xor
lahf
arpl
xchg
cmp
cwtl
pusha
add
mov
add
push
fmull
mov
or
loop
adc
ljmp
dec
push
pop
testb
and
add
push
and
imul
or
mov
popa
sahf
setg
cmc
xchg
pop
das
push
rorl
daa
out
dec
in
jmp
ljmp
dec
gs
add
sbb
enter
and
fdivrs
arpl
dec
pop
mov
add
xor
mov
mov
cltd
enter
jle
push
pop
mov
jns
cmc
loope
movsl
hlt
mov
dec
subb
stos
imul
popa
imul
mov
sbb
add
aad
bound
xlat
push
adc
add
mov
lcall
ror
into
out
mov
push
add
in
shrb
add
test
cmc
jmp
push
add
scas
mov
ss
stos
cmp
mov
jge
mov
out
dec
add
pop
pop
roll
movsb
jg
mov
clc
mov
and
add
push
in
cltd
xlat
push
cmp
ffree
ja
ror
je
add
xchg
sub
inc
mov
je
add
push
inc
add
or
xchg
inc
sub
std
sahf
cmc
jae
jns
stos
aaa
mov
add
and
adc
scas
inc
mov
testl
xchg
imul
mov
or
jns
hlt
in
inc
sub
pop
orl
mov
aad
push
aas
pop
sti
out
fistpll
loop
cltd
mov
xor
das
xchg
aam
add
jo
mov
xor
ds
sbb
fmuls
mov
pusha
add
stos
mov
fnstenv
pop
mov
cmp
push
and
add
cs
mov
movsb
in
imul
pop
add
push
and
test
lcall
aam
inc
jo
data16
sbb
mov
aad
or
mov
in
xlat
mov
fdivs
popf
aas
cmp
push
shrl
imulb
and
adcb
and
or
or
sub
xor
mov
out
dec
pop
fdivp
and
popf
popl
add
js
sub
fs
int3
enter
xor
and
xchg
testb
and
mov
sub
aad
cmp
icebp
aad
cmp
test
or
mov
testb
and
jae
pop
in
in
jecxz
adc
popa
pop
adc
push
mov
fwait
jno
mov
add
movsl
jmp
fiaddl
sub
cmpl
outsb
lock
dec
out
and
inc
jae
cmp
xor
pop
add
sub
jno
fs
xchg
xor
mov
loope
gs
add
sbb
clc
xchg
xlat
jecxz
pop
insl
xchg
push
scas
add
enter
cmp
mov
test
loop
fidivrl
add
divl
add
or
push
jb
int
mov
enter
lret
pop
clc
adcl
aam
dec
add
cmp
add
add
mov
bound
cwtl
shl
jae
mov
loope
insl
cmp
addr16
mov
push
subl
mov
repz
in
std
loop
imul
int
into
add
mov
sbb
bound
int3
rolb
punpckldq
pop
push
sbb
iret
mov
int
xchg
mov
add
mov
js
pusha
add
ret
or
inc
xchg
lods
mov
cmp
jbe
popa
scas
dec
mov
mov
lock
nop
lds
out
outsl
xchg
mov
and
repz
addl
add
adc
and
lds
pop
fistl
mov
push
addr16
xchg
inc
popa
lcall
add
adc
fstps
pop
rolb
mov
add
sub
test
push
or
or
xlat
or
add
mov
stos
into
daa
sub
inc
push
std
loope
je
repnz
js
mov
jmp
cli
nop
dec
ffreep
mov
jmp
add
movsb
jmp
add
lock
cmp
xor
xchg
lods
adc
leave
jp
incb
jno
dec
mov
rclb
xchg
cmp
xchg
and
cmpsb
iret
mov
add
out
cwtl
push
sub
and
mov
cltd
push
and
imul
sbb
adc
call
pop
cmp
mov
es
dec
mov
adc
ret
jne
mov
add
test
and
pop
inc
ret
sub
mov
std
jecxz
inc
fwait
test
aas
inc
or
xlat
clc
dec
inc
and
adc
iret
testl
mov
outsl
push
or
dec
add
inc
je
push
mov
cltd
mov
insb
inc
mull
jmp
adc
popa
sub
ja
pusha
add
cli
popa
int3
lcall
or
rcrl
add
inc
push
rol
sub
cwtl
or
sub
test
add
mov
into
jae
cli
mov
sbb
bound
dec
inc
sbb
xchg
fstps
imulb
add
push
dec
xorl
add
mov
loop
loopne
lods
std
sub
repz
push
lcall
push
dec
xchg
loope
push
sti
adc
pop
aaa
das
xchg
mov
fidivrl
cmp
push
jl
imul
into
das
jecxz
lods
lods
mov
mov
rcl
mov
add
jp
inc
sub
mov
lds
push
aas
xchg
out
mov
add
add
nop
dec
xchg
push
js
adc
xchg
mov
xchg
mov
xchg
adc
outsl
xadd
sbb
add
pop
inc
sbb
push
fstl
rolb
sbb
loopne
push
adc
ja
pop
add
mov
cmp
and
ror
sbb
push
adc
popf
das
adc
mov
lret
les
data16
and
int3
xchg
das
mov
sbb
adc
add
jb
repz
cmpsl
mov
ds
dec
add
add
loope
fmul
and
pop
ficompl
jle
stc
and
cmp
test
xchg
loopne
or
lods
sbb
and
and
cld
clc
popa
ljmp
popa
dec
pop
sub
dec
add
fidivrl
jmp
add
xor
jo
insl
xor
int
insl
lods
fmull
test
push
add
imul
mov
xor
repz
xchg
xor
lds
push
add
mov
jl
lds
mov
rclb
adc
testb
mov
push
xchg
cmp
shll
popa
subb
mov
cli
dec
scas
les
cmp
sbb
add
adc
cmp
push
or
jecxz
push
dec
add
cmp
sub
addr16
repz
mov
xchg
mov
inc
cmp
lret
add
mov
adc
push
out
push
sti
or
jb
mov
sub
jle
sti
jp
test
sub
sbb
jbe
push
stos
cmc
test
xchg
and
sbb
in
das
pop
add
mul
lret
sub
mov
xlat
jmp
xor
xor
lods
mov
sbb
or
out
push
lods
push
cmp
ret
insl
jle
ljmp
cmp
in
mov
inc
cmpl
mov
cmpsl
fs
sbb
scas
xchg
mov
repnz
sub
add
add
mov
pop
jo
call
mov
scas
lea
les
lods
push
and
loop
mov
inc
mov
ficoml
dec
add
xcrypt-ecb
cmpsl
iret
rorb
je
pop
xlat
push
sbb
add
aad
inc
add
push
hlt
push
mov
push
call
mov
push
imul
arpl
lahf
push
add
inc
add
repz
sub
jns
add
pop
movsl
icebp
out
mov
add
inc
mov
xlat
xchg
inc
jp
or
or
sti
out
roll
lea
adc
in
mov
xor
lea
sbb
xor
cmpsl
push
and
rcr
and
adc
push
bound
cld
or
jns
add
jno
cli
mov
sub
test
inc
in
sarb
sub
jbe
pop
sub
out
xor
loop
push
subb
mov
cli
call
xor
mov
pop
fcoms
pop
popa
insb
sahf
cmp
mov
in
psllq
dec
xor
add
pushf
pop
je
pop
mov
outsl
pop
hlt
mov
aad
or
jecxz
hlt
jle
repnz
mov
mov
sub
ss
push
sub
stc
adc
dec
jne
and
add
ret
xor
adc
stc
cld
sub
cmp
sbb
jg
jae
test
ljmp
jno
fdiv
cmpb
in
mov
sbb
pop
push
rcrb
push
ficoms
add
jle
add
sub
shrb
add
out
add
push
out
ja
jnp
roll
mov
add
inc
aaa
xorl
jge
enter
sbb
cmp
jge
ljmp
add
xchg
cmp
mov
sbb
sub
push
ja
jb
inc
addb
push
arpl
inc
sti
cmp
iret
in
cwtl
addr16
xchg
cmp
xchg
dec
lods
pop
jbe
fwait
imul
sbb
add
arpl
lods
push
pop
add
inc
mov
pop
add
popf
push
pop
sub
add
pop
inc
fldt
cmp
xor
daa
sub
pop
sub
and
jp
cltd
jg
lods
xor
xor
sbb
andl
cpuid
mov
cwtl
test
into
ret
sahf
jecxz
pop
xor
scas
add
in
mov
add
inc
push
dec
jne
and
add
inc
nop
in
dec
bound
adc
xor
cmp
sub
or
add
iret
cmp
jbe
stos
cmpsl
inc
mov
xchg
enter
xchg
push
in
xchg
pop
out
lea
fwait
pop
lret
repz
jne
repz
push
sti
mov
in
pop
sub
add
jecxz
add
or
cmpsb
pop
add
jo
inc
jns
adc
lahf
fs
jmp
dec
cltd
clc
pop
mov
sbb
int3
int3
out
dec
mov
lock
pop
je
pop
lahf
add
mov
outsl
fnsave
ljmp
sub
xchg
scas
ljmp
jecxz
ja
add
icebp
popf
repz
insb
fimull
sub
lea
movl
clc
push
call
sub
add
and
mov
mov
and
test
je
mov
push
push
cld
call
test
stc
jne
inc
add
mov
add
push
push
push
push
call
test
jne
xor
cld
push
es
lea
movl
push
push
call
push
cmp
lea
jne
movzbl
or
add
mov
add
not
cld
xor
test
jne
call
xor
mov
add
ret
xor
mov
mov
stc
mov
bnd
cmp
mov
mov
mov
inc
or
lea
lea
add
xchg
shr
xchg
lock
sub
and
cld
jmp
push
mov
jne
xor
pop
cmp
inc
add
fists
add
outsl
adc
mov
mov
sbbb
cmpsb
setl
or
or
inc
cmp
in
add
enter
out
loopne
cmp
fsubrs
xchg
mov
mov
mov
ret
scas
xor
jecxz
and
ud1
icebp
out
xor
mov
insl
jae
mov
mov
sub
cltd
add
jo
outsl
ret
xchg
xlat
mov
mov
sub
lahf
jle
sub
cs
jno
nop
js
add
mov
jno
mov
add
mov
sub
add
inc
cwtl
mov
xchg
fwait
xor
es
popa
lods
mov
mov
xor
clc
das
sbb
dec
push
mov
aad
cmp
or
push
dec
mov
jmp
xchg
ja
repz
sbb
mov
add
aam
fnstsw
pop
out
mov
ret
ret
aas
es
cmpsb
out
xor
add
test
movsl
fwait
pop
daa
shl
cwtl
pusha
add
add
and
add
adc
or
cmp
ficoml
jbe
sbb
imul
aas
xchg
lea
or
mov
in
fcmovbe
call
inc
ret
fistl
cmp
aas
stc
jae
add
mov
fdivs
sub
add
ficomps
je
push
pop
dec
jbe
jno
das
dec
iret
in
sub
filds
daa
xchg
pop
cmp
cmp
ror
inc
xchg
icebp
je
xor
adcb
mov
jnp
bound
fmuls
or
xlat
pop
dec
sbb
and
scas
ja
add
pop
aaa
rcrb
arpl
popa
ja
pop
inc
fcompl
sti
dec
cli
out
jmp
add
jl
cmp
sbb
aam
pop
rcrb
rcll
adc
mov
jg
add
cmpsb
mov
cmp
js
out
lea
mov
hlt
lret
add
pusha
add
test
inc
dec
add
addl
jno
sar
push
mov
fmuls
push
js
lods
dec
add
inc
add
fsubr
jl
and
push
mov
xchg
jno
jns
insb
fcoms
mov
sub
popf
sbb
nop
aad
mov
in
pop
lods
adc
xchg
mov
or
cli
mov
sbb
push
stc
add
cmp
adc
lahf
call
push
fldcw
roll
xchg
mov
sub
jmp
imul
add
clc
jle
sbb
aas
aam
add
mov
insb
mov
jecxz
andb
lds
cmp
add
sbb
mov
mov
dec
enter
arpl
cmp
push
shll
mov
stos
cltd
mov
into
or
shll
and
lds
and
xchg
xor
push
stos
sub
daa
xchg
jecxz
mov
iret
jge
stos
cli
jnp
scas
sub
xchg
scas
mov
and
pop
and
jl
xchg
jg
mov
movsl
cmpsb
xlat
aaa
loop
les
add
fdivr
popa
add
pop
fs
sbb
add
or
fisubl
fsubrs
jbe
mov
inc
in
mov
sbb
into
and
add
pop
jmp
iret
lret
sbb
fwait
xor
daa
sahf
push
repnz
iret
mov
adc
nop
jnp
mov
pusha
add
fcomps
sub
push
adc
push
imul
jge
std
es
shrl
out
push
sub
movsl
and
ret
or
out
fistps
add
std
addr16
push
push
rorl
test
dec
cmp
dec
cmp
adc
das
sbb
jo
addr16
movsl
loope
cmc
pop
pop
out
in
dec
lds
popf
adc
mov
or
jnp
xor
add
push
adc
fstps
or
add
xor
and
sahf
daa
in
dec
fisubrs
test
pop
sbb
mov
add
xchg
pop
cli
iret
jg
mov
mov
insb
jne
pop
sbb
lcall
es
push
or
cmp
jbe
dec
das
fnsave
sar
int3
mov
fisubs
sub
xchg
pushf
jl
pop
add
sti
movsb
mov
insl
test
les
mov
mov
int
push
inc
lcall
adc
call
ljmp
pusha
add
out
nop
jae
push
js
out
mov
mov
sahf
test
sbb
sbb
sti
xor
rcrl
mov
fidivrl
xor
int
sbb
inc
sysret
mov
jle
inc
scas
dec
add
out
aad
test
cltd
cmpsl
mov
cld
jbe
das
mov
xorl
pop
pop
lcall
push
jae
sbb
sahf
into
test
fucomip
jmp
push
fisubs
pop
into
mov
mov
pop
mov
mov
add
arpl
push
jnp
cmp
out
div
push
inc
cltd
addr16
add
lods
dec
dec
lret
sahf
fs
lods
dec
stos
jge
mov
mov
fildll
mov
sub
and
cltd
mov
or
xchg
lcall
add
mov
out
outsl
cs
insl
mov
add
jge
ret
pop
in
gs
mov
test
negl
jl
ds
mov
dec
daa
mov
div
ret
mov
sbb
stos
or
cmc
fsts
leave
enter
nop
mov
sti
mov
dec
and
subl
int
les
add
nop
add
pop
mov
jge
xchg
mov
and
add
xlat
sahf
and
xchg
icebp
dec
aas
daa
data16
add
mov
mov
add
and
loopne
into
lret
adc
xchg
pop
sub
adc
or
out
loopne
insl
fisttps
xchg
xor
add
sahf
cs
and
fcmovu
popf
pop
ret
mov
sub
dec
mov
add
add
mov
gs
xor
std
mov
test
popf
add
pop
adc
add
dec
xor
lcall
sub
mov
hlt
cmp
jmp
imul
mov
sti
dec
add
imull
nop
dec
hlt
mov
dec
add
mov
mov
cmp
jbe
mov
loope
ljmp
in
lds
xchg
out
or
push
pop
into
cmpl
aam
dec
push
dec
das
jmp
push
mov
xchg
inc
ret
inc
pop
mov
adc
dec
aam
xchg
jbe
add
incb
cli
jl
enter
lahf
or
and
test
push
jle
push
lods
fimull
in
es
fcoml
inc
dec
lods
imul
test
cmpsb
xor
repz
add
sub
insb
repnz
insb
and
imul
inc
cmp
mov
mov
push
aam
jmpw
pop
hlt
enter
loope
push
and
ss
int
or
test
add
jmp
push
lcall
insl
cmp
movsl
sbb
mov
mov
xor
push
mov
dec
jno
loope
add
out
js
out
inc
fnstenv
popa
je
pushf
minps
xor
test
dec
repz
cmpb
es
outsb
xor
xor
cmpl
bound
add
cmpsb
cld
inc
fs
pop
mov
add
add
repz
loopne
cmp
cmpsb
jmp
cmp
fisttpll
arpl
aaa
pop
jns
add
cmp
adc
dec
add
rcrl
les
inc
or
add
clc
fsub
jno
rol
add
jmp
std
pop
pop
shlb
push
cmp
xchg
mov
mov
sub
push
add
mov
mov
popf
mov
xlat
push
add
sbb
notb
dec
add
pusha
add
hlt
fidivrs
push
mov
addr16
aaa
adc
push
or
mov
pop
sub
fwait
push
ret
push
daa
add
aaa
jle
aas
jp
icebp
pop
nop
xchg
mov
dec
cmp
xor
xchg
inc
cmp
icebp
icebp
sub
popf
test
add
incb
add
inc
or
mov
push
lret
add
inc
sbb
rclb
fwait
imulb
xorl
jne
xor
in
stos
fstpt
cmpsb
clc
loop
repnz
fwait
xchg
popf
push
shrb
repz
mov
testl
mov
add
sub
inc
stc
das
clc
mull
cmp
test
xchg
fidivrs
xor
int
adc
ret
xchg
hlt
shlb
sbb
add
cld
call
in
inc
out
lahf
shlb
gs
push
daa
mov
ja
out
cmpsl
dec
lret
out
cmp
jmp
aad
mov
fnstsw
insl
xor
jnp
push
adc
ret
push
hlt
clc
xor
jmp
imul
nop
push
loopne
and
mov
test
or
sub
fisttpll
rol
outsl
fcmovnu
cmp
out
jge
idivl
sbb
nop
xlat
cmp
pop
test
add
outsl
mov
fcoml
mov
mul
ficoms
test
loopne
push
test
enter
mov
cltd
add
out
pop
call
gs
mov
xchg
pop
add
xor
lahf
xchg
sub
imul
mov
dec
fisubrl
xor
stos
aas
or
push
mov
push
repz
arpl
pop
shrl
dec
sub
adc
sbb
negb
fs
pop
jl
mov
orl
jle
push
dec
jae
mov
outsl
push
out
and
loope
pop
lods
or
sbb
and
shll
jmp
ret
pop
and
add
or
pop
mov
add
call
ljmp
mov
add
std
mov
pop
loop
mov
xchg
add
add
mov
pop
jne
add
aaa
jns
icebp
int
ret
mov
and
add
leave
ret
rolb
mov
add
inc
sbb
lods
aad
inc
add
cld
jl
add
adc
adc
and
mov
sbb
or
js
and
test
dec
add
mov
pop
dec
add
jae
mov
mov
push
cld
add
jmp
popf
in
sar
repz
shl
aam
xorb
push
mov
add
mov
push
out
test
add
mov
or
sub
adc
mov
fsub
pop
fwait
pop
and
fiaddl
inc
xor
test
loop
inc
pop
mov
push
jno
sub
lock
mov
xchg
test
xor
add
movsl
mov
push
iret
sub
int3
loope
inc
push
lcall
push
pavgb
add
call
adc
add
bound
fisttpl
loopne
in
xchg
iret
aam
call
rolb
clc
pop
xchg
jl
mov
std
aaa
jle
pop
add
pop
scas
arpl
shld
fwait
cli
orb
in
pop
cld
jge
add
dec
fstl
in
stos
inc
add
lret
inc
int3
jb
push
xor
popa
sub
addr16
xor
add
push
fmul
xor
sub
adc
mov
aas
leave
sbb
shlb
in
or
into
out
mov
clc
pop
cmc
mov
arpl
jnp
and
daa
inc
jno
enter
movsl
adc
inc
sbb
test
aaa
xor
cmpsl
or
mov
push
out
xor
jnp
xchg
aam
xchg
subb
xchg
pusha
add
mov
nop
sub
pop
xchg
pop
inc
sbb
std
jns
mov
subb
inc
mov
xlat
jle
push
jmp
sbb
sub
addr16
ss
jbe
test
jbe
xor
mov
lahf
adc
icebp
xor
addb
dec
subl
jp
out
xor
mov
add
add
enter
xor
mov
push
or
mov
xchg
jp
cmpsb
sbb
xchg
call
std
xchg
int3
xchg
lahf
pusha
add
inc
or
rclb
pop
and
je
cmp
sub
dec
sbb
sarl
mov
mov
xchg
sub
in
test
sbb
and
imull
lods
mov
xchg
pusha
add
jmp
fldenv
movsl
cli
xchg
and
sub
aaa
ret
jbe
and
ficomps
negb
add
das
jns
jle
enter
mov
orl
sahf
daa
mov
sub
fcomps
xchg
push
and
adc
movl
sub
lcall
add
pusha
add
dec
add
fdivr
leave
jmp
push
pop
and
push
and
jb
fcomps
mov
or
addb
repz
pop
adc
xor
dec
aas
cmp
or
adc
das
stc
xlat
jnp
or
mov
cwtl
rcl
add
popf
jb
push
mov
xchg
push
cmp
add
jecxz
pusha
add
inc
push
jo
dec
aas
xchg
xchg
jo
xor
sub
pusha
add
cltd
clc
sti
aas
xchg
stos
imul
incl
ja
js
add
mov
add
sbb
xchg
add
notl
jg
mov
scas
push
sahf
fcomi
std
jp
or
xchg
bound
inc
dec
adc
shrl
cmp
xor
push
add
and
mov
inc
ret
add
cltd
xor
jecxz
mov
pop
sub
add
call
xchg
jle
and
std
fstpl
mov
push
inc
pop
cld
sub
test
adc
add
out
scas
pop
xchg
movsl
mov
jmp
aad
push
ds
fcoms
push
nop
push
mov
leave
nop
jmp
xor
add
cmp
inc
or
repnz
nop
nop
jae
sub
add
out
pop
mov
pop
push
add
clc
repnz
nop
nop
jae
add
cmp
add
cmp
push
mov
leave
nop
jmp
add
cmp
hlt
add
add
push
mov
xchg
ret
mov
int
add
add
sarl
clc
repnz
nop
nop
jae
mov
add
pushf
push
add
push
clc
repnz
nop
nop
jae
lods
incb
int
add
xor
pop
nop
push
mov
leave
nop
jmp
add
cmp
add
out
dec
cmp
inc
add
mov
clc
repnz
nop
nop
jae
enter
lds
sbb
xchg
repz
clc
repnz
nop
nop
jae
cmp
add
add
lock
add
inc
jne
nop
push
mov
leave
nop
jmp
movb
out
dec
add
cltd
push
clc
repnz
nop
nop
jae
int
add
arpl
add
inc
xor
pop
daa
add
clc
repnz
nop
nop
jae
mov
lods
lods
sbb
mov
clc
repnz
nop
nop
jae
add
add
pop
add
rorl
mov
leave
nop
jmp
nop
out
sub
into
add
add
add
inc
push
push
mov
xchg
ret
jecxz
add
add
fld1
clc
repnz
nop
nop
jae
add
fiaddl
add
pop
add
adc
test
add
clc
repnz
nop
nop
jae
mov
rcrl
add
je
imul
movsl
sub
add
repnz
nop
nop
jae
or
mov
mov
inc
xor
pop
clc
repnz
nop
nop
jae
incb
lock
mov
cmp
mov
nop
nop
jae
mov
pop
add
jl
add
add
fwait
push
mov
xchg
ret
add
jecxz
add
popf
icebp
and
cli
mov
mov
clc
repnz
nop
nop
jae
add
hlt
mov
shlb
mov
leave
nop
jmp
sub
add
add
stc
add
nop
or
push
clc
repnz
nop
nop
jae
add
adc
add
jl
sbb
repnz
nop
nop
jae
pop
into
add
add
add
nop
push
mov
leave
nop
jmp
repz
add
add
mov
shr
nop
push
mov
leave
nop
jmp
add
add
nop
add
pop
pop
add
add
add
clc
repnz
nop
nop
jae
mov
add
pop
and
add
call
clc
repnz
nop
nop
jae
add
add
rclb
adc
and
add
add
pop
mov
enter
add
xor
clc
repnz
nop
nop
jae
insl
stc
pop
add
add
popa
shr
nop
push
mov
leave
nop
jmp
pop
sub
pop
add
add
shll
mov
xchg
ret
mov
mov
hlt
inc
movb
insb
fwait
and
clc
repnz
nop
nop
jae
out
adc
adc
mov
add
nop
push
mov
leave
nop
jmp
sbb
mov
xor
call
clc
repnz
nop
nop
jae
dec
add
add
pop
mov
data16
clc
repnz
nop
nop
jae
add
add
cmp
jne
push
mov
xchg
ret
add
add
add
dec
push
mov
xchg
ret
enter
sbb
mov
mov
xorl
ret
add
int
cmp
popf
arpl
push
mov
leave
nop
jmp
insl
incb
and
lds
repz
mov
push
mov
xchg
ret
insl
push
lds
out
add
orb
repnz
nop
nop
jae
add
add
add
xor
pop
pushl
nop
push
mov
leave
nop
jmp
add
add
lock
xor
jecxz
add
clc
repnz
nop
nop
jae
add
add
add
add
cmp
repnz
nop
nop
jae
and
add
ficompl
add
mov
clc
repnz
nop
nop
jae
add
cmp
roll
into
je
mov
clc
repnz
nop
nop
jae
cmp
add
push
addb
push
push
mov
xchg
ret
cmp
add
add
cmp
add
add
lods
push
mov
xchg
ret
add
popf
lock
fld1
push
mov
xchg
ret
lock
add
add
add
add
add
addb
repnz
nop
nop
jae
add
add
popf
lods
add
nop
push
mov
leave
nop
jmp
fiaddl
lds
mov
lds
pusha
add
push
clc
repnz
nop
nop
jae
add
add
stc
cmp
inc
in
push
mov
xchg
ret
cmp
add
out
insl
xor
xchg
sbb
add
cmp
arpl
and
or
dec
and
clc
repnz
nop
nop
jae
add
lods
add
pop
add
pop
push
mov
cld
nop
nop
jae
jl
mov
hlt
add
add
and
popa
ret
clc
repnz
nop
nop
jae
add
cmp
add
cmp
fistpl
clc
repnz
nop
nop
jae
lods
add
cmp
shrl
clc
repnz
nop
nop
jae
int
pop
sbb
arpl
add
pop
clc
repnz
nop
nop
jae
out
add
incb
pop
mov
pop
stos
clc
repnz
nop
nop
jae
mov
cmp
mov
lss
clc
repnz
nop
nop
jae
lods
add
inc
pop
clc
repnz
nop
nop
jae
add
mov
add
or
sub
add
add
add
or
add
add
cmp
icebp
mov
jne
push
mov
xchg
ret
mov
add
mov
add
add
or
clc
repnz
nop
nop
jae
into
cmp
add
add
mov
test
add
add
repnz
nop
nop
jae
mov
add
lods
jp
jne
nop
push
mov
leave
nop
jmp
add
add
add
inc
and
pop
inc
add
into
add
lods
lds
hlt
fidivl
add
repnz
nop
nop
jae
hlt
add
add
mov
lods
and
add
nop
push
mov
leave
nop
jmp
pop
add
add
push
mov
xchg
ret
movb
movb
add
movb
mov
pop
add
add
repnz
nop
nop
jae
out
out
add
jge
sbb
ja
inc
add
hlt
add
popf
add
push
add
loope
incl
add
repnz
nop
nop
jae
xor
pop
add
mov
push
mov
xchg
ret
add
pop
add
and
fiaddl
jle
add
push
mov
xchg
ret
pop
hlt
add
add
hlt
adc
mov
xchg
ret
xor
mov
add
std
pop
push
mov
xchg
ret
pop
add
add
add
and
dec
inc
nop
push
mov
leave
nop
jmp
add
add
hlt
out
icebp
lock
push
push
mov
xchg
ret
add
cmp
add
adc
add
clc
repnz
nop
nop
jae
popf
sbb
sbb
leave
rep
clc
repnz
nop
nop
jae
mov
add
out
add
adc
iret
or
inc
add
mov
add
add
rcll
cmp
clc
repnz
nop
nop
jae
add
add
add
arpl
loopne
mov
clc
repnz
nop
nop
jae
mov
cmp
shr
xor
add
add
add
add
mov
lods
lods
xchg
sbb
mov
clc
repnz
nop
nop
jae
icebp
nop
add
add
repz
mov
push
mov
xchg
ret
insl
cmp
add
mov
add
add
clc
repnz
nop
nop
jae
cmp
add
sbb
add
stc
xchg
cli
or
push
clc
repnz
nop
nop
jae
add
add
add
add
mov
scas
mov
add
clc
repnz
nop
nop
jae
stc
cmp
dec
add
dec
out
cmp
push
mov
xchg
ret
xchg
add
mov
add
sbb
mov
xchg
ret
xor
add
add
add
mov
mov
xchg
ret
insl
add
add
leave
mov
nop
push
mov
leave
nop
jmp
add
mov
jl
and
outsl
mov
push
mov
xchg
ret
mov
popf
add
cmp
je
clc
repnz
nop
nop
jae
add
bound
add
add
add
lds
add
add
int
add
lcall
nop
push
mov
leave
nop
jmp
add
add
add
call
inc
add
dec
jecxz
pop
lods
add
add
add
mov
pop
add
push
mov
xchg
ret
out
bound
mov
xor
and
in
jecxz
rcr
aad
les
add
hlt
jecxz
add
add
add
imul
gs
nop
push
mov
leave
nop
jmp
fimull
jl
jae
mov
push
and
dec
add
dec
jl
add
add
cs
add
in
sbb
push
clc
repnz
nop
nop
jae
out
add
add
popl
add
out
adc
mov
push
mov
xchg
ret
icebp
shll
hlt
mov
mov
ja
clc
repnz
nop
nop
jae
add
enter
out
mov
rorb
xchg
ret
add
cmp
add
call
clc
repnz
nop
nop
jae
add
add
and
add
fistpl
push
mov
xchg
ret
add
mov
add
adc
ss
cmp
repnz
nop
nop
jae
enter
jl
add
adc
cmp
mov
xchg
ret
mov
and
add
hlt
cmp
mov
add
clc
repnz
nop
nop
jae
add
icebp
enter
mov
add
nop
push
mov
leave
nop
jmp
incb
mov
iret
add
clc
repnz
nop
nop
jae
add
cmp
nop
nop
mov
jmp
hlt
mov
add
add
add
iret
fistpl
push
mov
xchg
ret
add
add
add
add
add
clc
repnz
nop
nop
jae
add
cmp
dec
push
clc
repnz
nop
nop
jae
bound
bound
nop
push
and
xor
push
mov
xchg
ret
add
add
pop
incb
mov
lea
clc
repnz
nop
nop
jae
add
mov
add
mov
xchg
ret
nop
stc
mov
add
hlt
and
xor
push
mov
leave
nop
jmp
and
mov
mov
adc
dec
add
inc
adc
repnz
nop
nop
jae
dec
pop
add
popl
or
sbb
xor
nop
push
mov
leave
nop
jmp
hlt
lds
mov
and
icebp
add
add
mov
xor
nop
nop
jae
dec
nop
dec
add
into
repz
add
mov
xchg
ret
enter
add
xor
adc
fists
add
repz
arpl
add
leave
mov
clc
repnz
nop
nop
jae
mov
cmp
add
mov
nop
pop
sub
repnz
nop
nop
jae
add
xor
add
in
leave
nop
jmp
add
add
int
push
sahf
loop
add
add
pusha
nop
push
mov
leave
nop
jmp
add
icebp
add
mov
pop
ljmp
jg
add
add
push
add
mov
call
nop
push
mov
leave
nop
jmp
add
lods
hlt
nop
mov
lea
clc
repnz
nop
nop
jae
add
sbb
nop
mov
and
inc
clc
repnz
nop
nop
jae
cmp
add
dec
hlt
add
clc
repnz
nop
nop
jae
add
add
enter
add
decl
mov
leave
nop
jmp
add
add
add
add
adc
nop
jmp
cmp
add
nop
add
xlat
add
nop
push
mov
leave
nop
jmp
pop
xchg
add
push
cmp
test
cld
nop
nop
jae
mov
dec
icebp
pop
add
push
and
push
mov
leave
nop
jmp
add
xor
pop
int
aaa
jmp
adc
mov
lock
add
popf
add
popf
add
add
cmp
test
push
mov
xchg
ret
mov
pop
add
sbb
add
clc
repnz
nop
nop
jae
add
lods
arpl
popl
cld
nop
nop
jae
sbb
add
pop
mov
mov
leave
nop
jmp
stc
mov
add
add
bound
addr16
mov
dec
xchg
push
out
fcmovnu
outsl
lods
add
add
inc
rolb
pop
and
or
repnz
nop
nop
jae
add
push
and
dec
add
push
mov
xchg
ret
sub
add
add
out
add
sbb
add
clc
repnz
nop
nop
jae
add
or
inc
add
and
sub
jb,pt
nop
push
mov
leave
nop
jmp
add
add
push
jmp
jg
add
insb
nop
push
mov
leave
nop
jmp
add
add
add
mov
repnz
nop
nop
jae
add
and
add
fistpl
clc
repnz
nop
nop
jae
add
sbb
add
mov
clc
repnz
nop
nop
jae
add
and
cmp
mov
nop
push
mov
leave
nop
jmp
lods
and
popf
mov
call
nop
nop
jae
add
cmp
add
add
add
aas
clc
repnz
nop
nop
jae
add
mov
cmp
add
lods
sub
fistpl
push
mov
xchg
ret
add
dec
mov
add
pop
hlt
pop
mov
cld
nop
nop
jae
bound
add
add
je
clc
repnz
nop
nop
jae
pop
popf
add
add
and
es
mov
push
push
mov
xchg
ret
cmp
add
bound
nop
mov
mov
xlat
fwait
clc
repnz
nop
nop
jae
add
cmp
cmp
lods
add
test
nop
nop
jae
add
add
out
pop
add
add
lret
push
mov
xchg
ret
add
dec
decb
add
pop
add
add
rclb
cld
bound
xchg
ret
ficoml
add
add
insl
add
mov
bound
clc
repnz
nop
nop
jae
pop
int
xchg
mov
add
push
nop
push
mov
leave
nop
jmp
add
sbb
hlt
rorl
cmp
mov
leave
nop
jmp
jecxz
xor
pop
mov
add
clc
repnz
nop
nop
jae
add
add
inc
pop
lods
mov
clc
repnz
nop
nop
jae
nop
cmp
cmp
add
ljmp
repnz
nop
nop
jae
add
into
add
insl
add
add
cmp
ret
clc
nop
push
mov
leave
nop
jmp
add
jl
mov
jecxz
hlt
in
test
push
mov
xchg
ret
add
mov
ficompl
add
clc
repnz
nop
nop
jae
and
sub
enter
push
push
mov
xchg
ret
add
push
fiaddl
add
out
mov
test
and
add
repnz
nop
nop
jae
and
sub
fiaddl
add
div
nop
push
mov
leave
nop
jmp
add
add
pop
add
sbb
aaa
push
push
mov
xchg
ret
cmp
add
add
add
dec
sub
jo
inc
add
arpl
add
add
dec
and
fisubs
push
mov
xchg
ret
dec
pop
sbb
add
add
mov
adc
xor
jp
pop
clc
repnz
nop
nop
jae
add
add
jbe
pop
clc
repnz
nop
nop
jae
add
add
out
add
add
add
lods
and
push
mov
leave
nop
jmp
int
into
add
add
mov
dec
icebp
fld1
clc
repnz
nop
nop
jae
cmp
bound
icebp
pop
add
movb
xchg
mov
clc
repnz
nop
nop
jae
lods
stc
mov
shrl
jge
clc
repnz
nop
nop
jae
add
incb
add
dec
gs
clc
repnz
nop
nop
jae
fiaddl
or
sbb
inc
es
add
push
mov
xchg
ret
mov
incb
add
out
inc
add
lds
mov
leave
nop
jmp
add
add
popf
mov
cmpsl
popl
nop
push
mov
leave
nop
jmp
add
pop
pop
stc
adc
incl
push
sbb
enter
icebp
add
inc
dec
pop
cs
xchg
and
push
mov
xchg
ret
hlt
add
dec
jecxz
arpl
in
cld
clc
repnz
nop
nop
jae
add
sarl
add
xchg
pop
add
nop
push
mov
leave
nop
jmp
add
stc
cmp
add
icebp
rcll
add
daa
pop
push
mov
xchg
ret
add
add
mov
punpcklbw
repnz
nop
nop
jae
add
xchg
arpl
int
sbb
add
add
not
clc
repnz
nop
nop
jae
pop
add
push
add
aas
add
clc
repnz
nop
nop
jae
repz
mov
add
subl
push
mov
xchg
ret
add
add
pop
icebp
and
pop
cmp
nop
push
mov
leave
nop
jmp
add
enter
pop
incb
outsl
sbb
add
nop
jmp
int
int
sub
mov
clc
repnz
nop
nop
jae
icebp
bound
add
add
sub
test
add
clc
repnz
nop
nop
jae
add
add
add
dec
ret
nop
push
mov
leave
nop
jmp
enter
add
out
icebp
add
jge
ret
clc
repnz
nop
nop
jae
add
mov
push
clc
push
push
and
xchg
mov
rclb
sbb
add
icebp
cmp
pop
lods
add
mov
xchg
ret
add
add
cmp
popl
mov
push
mov
xchg
ret
cmp
add
popf
add
mov
mov
leave
nop
jmp
add
and
cmp
add
add
hlt
mov
push
mov
leave
nop
jmp
repz
add
add
add
add
nop
jmp
add
repz
add
add
push
clc
repnz
nop
nop
jae
cmp
mov
cmpl
jae
incb
add
add
add
pop
pusha
add
mov
clc
repnz
nop
nop
jae
add
mov
jmp
xor
cmp
cmp
add
add
mov
repnz
add
repnz
nop
nop
jae
xchg
add
add
pop
mov
clc
repnz
nop
nop
jae
add
add
add
fimull
pop
inc
add
repz
add
add
popa
clc
repnz
nop
nop
jae
icebp
icebp
add
mov
add
nop
nop
ds
flds
jbe
nop
push
mov
leave
nop
jmp
add
add
cmp
add
into
add
push
mov
xchg
ret
add
mov
mov
and
add
in
clc
clc
repnz
nop
nop
jae
cmp
xchg
add
add
push
fimuls
push
add
add
adc
add
jl
mov
pop
or
repnz
nop
nop
jae
cmp
add
popl
bound
clc
repnz
nop
nop
jae
and
add
add
sbb
add
dec
inc
pushf
scas
rep
nop
push
mov
leave
nop
jmp
add
and
pop
or
dec
hlt
xchg
fidivrl
xor
nop
push
mov
leave
nop
jmp
mov
mov
add
lret
clc
repnz
nop
nop
jae
add
add
incb
add
enter
nop
nop
jae
incb
xchg
int
mov
xlat
fwait
push
mov
xchg
ret
mov
add
and
nop
and
loop
sub
test
nop
push
mov
leave
nop
jmp
bound
and
xor
aam
push
clc
repnz
nop
nop
jae
hlt
and
add
add
dec
add
incb
push
clc
repnz
nop
nop
jae
add
add
sbb
arpl
lret
mov
push
mov
xchg
ret
enter
lds
mov
adc
push
das
shl
nop
push
mov
leave
nop
jmp
add
repz
mov
into
add
and
or
add
lcall
data16
sbb
daa
add
nop
push
mov
leave
nop
jmp
sbb
cmp
add
add
dec
outsl
push
nop
push
mov
leave
nop
jmp
add
mov
jge
jg
clc
repnz
nop
nop
jae
add
pop
xchg
add
xchg
add
jo
add
repnz
nop
nop
jae
lods
arpl
shrl
sahf
add
add
repnz
nop
nop
jae
icebp
int
inc
xor
pop
push
push
mov
xchg
ret
lds
add
icebp
icebp
add
add
add
arpl
xchg
ret
popf
lock
add
add
lods
lods
incb
lods
sar
mov
gs
clc
repnz
nop
nop
jae
inc
add
insl
hlt
mov
add
add
addr16
clc
repnz
nop
nop
jae
mov
mov
push
mov
xchg
ret
add
hlt
add
add
in
je
clc
repnz
nop
nop
jae
xchg
jl
pop
mov
lret
mov
leave
nop
jmp
mov
add
mov
stos
clc
repnz
nop
nop
jae
into
repz
dec
roll
add
mov
clc
repnz
nop
nop
jae
mov
fiaddl
add
pop
mov
clc
repnz
nop
nop
jae
add
add
add
and
repnz
nop
nop
jae
add
xor
mov
push
mov
xchg
ret
nop
add
sbb
add
rcrl
repnz
nop
nop
jae
add
add
sbb
add
outsl
pop
clc
repnz
nop
nop
jae
add
insl
int
fisubrl
add
lds
fdivl
add
add
clc
repnz
nop
nop
jae
out
popl
dec
and
dec
add
cmpsb
xor
push
mov
leave
nop
jmp
add
add
cmp
mov
xchg
ret
enter
cmp
jecxz
cmp
add
pop
nop
inc
shr
push
mov
xchg
ret
into
add
add
repz
add
push
mov
xchg
ret
enter
and
add
jno
rclb
dec
jno
add
pause
inc
cmp
sub
jecxz
add
push
mov
xchg
ret
enter
add
cmp
repnz
nop
nop
jae
add
adc
icebp
and
jl
add
call
nop
nop
jae
or
add
out
into
sbb
cmp
repnz
nop
nop
jae
dec
add
out
shrl
lods
lods
add
imul
clc
repnz
nop
nop
jae
jecxz
and
sub
inc
rol
nop
push
mov
leave
nop
jmp
repz
add
cmp
incb
dec
jnp
test
clc
repnz
nop
nop
jae
add
add
test
iret
lods
nop
push
mov
leave
nop
jmp
sbb
icebp
pop
repz
add
add
outsl
arpl
add
repnz
nop
nop
jae
out
add
mov
mov
nop
push
mov
leave
nop
jmp
mov
roll
add
mov
nop
push
mov
leave
nop
jmp
add
pop
enter
add
aas
cld
clc
repnz
nop
nop
jae
jecxz
add
inc
xchg
int
mov
dec
call
clc
repnz
nop
nop
jae
mov
mov
add
outsl
pop
clc
repnz
nop
nop
jae
add
add
pop
add
and
cmp
push
mov
xchg
ret
movb
pop
inc
pop
pop
add
mov
add
inc
clc
repnz
nop
nop
jae
out
add
add
push
add
push
mov
xchg
ret
and
icebp
insl
and
push
clc
jp
jmp
add
pop
add
sbb
add
hlt
inc
add
mov
add
pop
clc
repnz
nop
nop
jae
mov
popf
icebp
add
add
or
nop
push
mov
leave
nop
jmp
xchg
cmp
add
add
pop
pop
and
dec
inc
add
add
mov
add
add
sahf
incl
mov
leave
nop
jmp
sub
and
cmp
add
insl
pop
adc
push
mov
leave
nop
jmp
pop
incb
mov
icebp
add
nop
nop
jae
icebp
add
add
cmp
stc
mov
mov
xchg
ret
pop
and
pop
lods
pop
add
mov
sbb
sar
cld
nop
nop
jae
lods
pop
add
mov
out
stc
dec
je
clc
repnz
nop
nop
jae
incb
fiaddl
add
push
nop
push
mov
leave
nop
jmp
mov
add
or
call
clc
repnz
nop
nop
jae
bound
add
fiaddl
pop
add
rorl
mov
xchg
ret
lods
arpl
mov
lock
mov
mov
mov
xchg
ret
mov
add
and
jl
les
clc
repnz
nop
nop
jae
add
add
movsl
pop
push
mov
xchg
ret
insl
add
mov
sub
add
clc
repnz
nop
nop
jae
lods
add
enter
popl
add
nop
push
mov
leave
nop
jmp
hlt
add
hlt
adc
adc
push
mov
leave
nop
jmp
insl
add
mov
and
add
nop
push
mov
leave
nop
jmp
out
out
add
cmp
add
fwait
clc
repnz
nop
nop
jae
incb
add
mov
stc
add
mov
nop
push
mov
leave
nop
jmp
lock
hlt
into
hlt
cmp
dec
cmp
nop
push
mov
leave
nop
jmp
or
mov
or
inc
sbb
cld
nop
nop
jae
add
into
add
add
pop
cmp
repnz
nop
nop
jae
add
lds
add
add
add
push
add
in
add
repnz
nop
nop
jae
out
add
add
add
add
add
add
repnz
nop
nop
jae
hlt
add
out
and
add
cmpsl
push
clc
repnz
nop
nop
jae
xchg
sbb
add
add
add
test
repnz
nop
nop
jae
incb
or
add
add
enter
add
add
clc
repnz
nop
nop
jae
inc
and
add
add
dec
xor
sbb
clc
repnz
nop
nop
jae
add
add
mov
mov
nop
push
mov
leave
nop
jmp
add
arpl
add
add
scas
dec
rol
jmp
jp
nop
push
mov
leave
nop
jmp
add
add
lods
sbb
add
push
clc
repnz
nop
nop
jae
push
nop
add
sbb
push
clc
repnz
nop
nop
jae
add
cmp
add
clc
repnz
nop
nop
jae
add
mov
sub
add
add
add
addr16
clc
repnz
nop
nop
jae
add
add
repz
add
mov
mov
xchg
ret
incb
int
pop
add
cmp
clc
repnz
nop
nop
jae
into
and
add
and
mov
clc
repnz
nop
nop
jae
add
out
add
add
std
shr
clc
repnz
nop
nop
jae
inc
into
add
adc
add
insl
shrl
push
mov
xchg
ret
hlt
lock
add
add
mov
push
idivb
repnz
nop
nop
jae
add
cmp
sbb
add
roll
jl
sub
clc
repnz
nop
nop
jae
or
add
sbb
roll
hlt
xor
mov
nop
nop
jae
cmp
add
xchg
inc
add
add
add
or
sti
nop
push
mov
leave
nop
jmp
add
cmp
add
inc
add
cmp
nop
jae
add
pop
add
mov
out
add
loope
jbe
clc
repnz
nop
nop
jae
inc
add
enter
add
add
nop
nop
jae
and
insl
repz
xor
test
repnz
nop
nop
jae
add
icebp
add
cmp
add
clc
repnz
nop
nop
jae
mov
and
pop
add
add
mov
clc
repnz
nop
nop
jae
mov
add
mov
add
push
jo
in
div
clc
repnz
nop
nop
jae
mov
and
pop
xchg
adc
sbb
pop
push
mov
xchg
ret
add
bound
jl
out
add
add
ret
nop
push
mov
leave
nop
jmp
and
add
add
mov
in
clc
repnz
nop
nop
jae
mov
add
lret
add
push
mov
xchg
ret
arpl
add
add
lods
cmp
sbb
ds
push
nop
push
mov
leave
nop
jmp
add
add
pop
stc
cmp
jo
add
add
pop
add
pop
add
sbb
mov
test
leave
clc
repnz
nop
nop
jae
fcmovb
add
add
sbb
xor
mov
xchg
ret
add
mov
hlt
out
repz
nop
orl
mov
leave
nop
jmp
add
add
dec
jecxz
add
out
push
sbb
xor
add
add
add
pop
icebp
sbb
add
and
sbb
add
push
mov
xchg
ret
add
add
sub
add
push
mov
xchg
ret
add
add
add
icebp
add
cld
nop
nop
jae
add
add
nop
add
into
in
jo
orb
push
mov
leave
nop
jmp
arpl
add
and
add
jl
xor
clc
repnz
nop
nop
jae
cmp
out
add
add
dec
pop
inc
clc
repnz
nop
nop
jae
xchg
mov
pop
add
mov
pop
daa
mov
push
mov
xchg
ret
int
into
add
pop
or
cmp
add
cld
nop
nop
jae
into
add
sbb
stos
clc
repnz
nop
nop
jae
insl
add
adc
icebp
add
clc
repnz
nop
nop
jae
mov
out
add
sub
out
and
jae
inc
add
add
add
jecxz
nop
add
add
insl
mov
clc
repnz
nop
nop
jae
into
add
add
mov
mov
clc
int
movsb
push
mov
xchg
ret
lock
cmp
add
add
add
cmp
adc
jbe
inc
add
add
add
add
push
mov
xchg
ret
cmp
add
add
push
push
lea
add
repnz
nop
nop
jae
icebp
add
arpl
cld
nop
nop
jae
icebp
add
add
add
and
icebp
mov
push
mov
xchg
ret
add
add
sbb
pop
cmp
push
push
mov
xchg
ret
mov
arpl
mov
fidivrl
lods
cmp
ret
mov
clc
repnz
nop
nop
jae
pop
mov
add
mov
cmp
jl
call
clc
repnz
nop
nop
jae
mov
add
add
call
clc
repnz
nop
nop
jae
repz
or
add
dec
push
ret
call
clc
repnz
nop
nop
jae
add
cmp
add
sbb
clc
repnz
nop
nop
jae
stc
stc
add
add
or
push
mov
leave
nop
jmp
cmp
pop
pop
jecxz
add
mov
leave
nop
jmp
add
add
add
add
into
add
add
movswl
clc
repnz
nop
nop
jae
pop
add
mov
icebp
add
rcpps
or
cmp
ret
sbb
nop
add
inc
add
call
nop
jae
add
add
lods
dec
add
call
nop
jae
add
and
mov
add
cmpl
jae
mov
add
rcll
in
add
lret
add
add
sbb
je
mov
jl
mov
clc
repnz
nop
nop
jae
incb
insl
rorl
add
sbb
sahf
inc
add
mov
push
mov
xchg
ret
add
add
mov
cmp
mov
xchg
ret
jecxz
decb
nop
cmp
mov
mov
xchg
ret
add
incb
int
hlt
jecxz
add
and
push
add
and
sbb
add
add
into
add
add
mov
xchg
ret
dec
sub
add
sbb
cmp
mov
clc
repnz
nop
nop
jae
add
roll
add
sbb
add
push
mov
xchg
ret
mov
out
add
add
call
clc
repnz
nop
nop
jae
incb
sbb
add
mov
repnz
nop
nop
jae
lods
lds
repz
add
add
cli
push
inc
jb
and
clc
repnz
nop
nop
jae
lods
add
hlt
and
add
cmp
mov
add
inc
inc
inc
add
dec
xor
lods
add
jecxz
xor
jnp
add
dec
mov
add
out
add
mov
xor
clc
repnz
nop
nop
jae
pop
add
stc
dec
pop
icebp
pop
repz
add
mov
nop
push
mov
leave
nop
jmp
add
add
and
pop
clc
repnz
nop
nop
jae
mov
add
and
pop
clc
repnz
nop
nop
jae
dec
add
add
xchg
sub
or
add
mov
repnz
nop
nop
jae
mov
add
out
add
and
add
repnz
nop
nop
jae
add
dec
add
cmp
add
cmp
add
nop
jae
mov
pop
add
loopne
rorl
mov
sub
repnz
nop
nop
jae
mov
add
lock
cmpsb
mov
xchg
jns
add
mov
popf
lds
jl
add
imul
add
add
add
add
add
and
jg
add
add
test
fwait
clc
repnz
nop
nop
jae
add
add
mov
mov
clc
repnz
nop
nop
jae
add
dec
add
bound
add
push
push
mov
xchg
ret
add
xor
icebp
bound
add
xchg
nop
push
mov
leave
nop
jmp
add
mov
adc
movzwl
clc
repnz
nop
nop
jae
mov
cmp
popf
add
clc
repnz
nop
nop
jae
add
pop
pop
add
add
cld
nop
nop
jae
mov
add
cmp
pop
add
inc
sub
cld
nop
nop
jae
add
mov
add
jl
add
clc
repnz
nop
nop
jae
or
add
xchg
nop
add
fisubl
jae
push
mov
leave
nop
jmp
nop
add
lods
mov
nop
push
mov
leave
nop
jmp
mov
add
add
and
add
pop
push
mov
xchg
ret
icebp
fiaddl
pop
add
add
add
repnz
nop
nop
jae
mov
add
lods
mov
push
cld
push
mov
xchg
ret
add
add
add
add
cmp
pop
sub
sbb
inc
and
repnz
nop
nop
jae
pop
add
add
mov
dec
add
int3
imul
cld
nop
nop
jae
fiaddl
inc
add
cmp
sub
add
ret
clc
repnz
nop
nop
jae
add
add
or
add
push
addr16
clc
repnz
nop
nop
jae
mov
int
add
or
lock
test
inc
add
inc
out
add
nop
insl
and
add
sbb
add
repnz
nop
nop
jae
cmp
add
sbb
clc
repnz
nop
nop
jae
add
add
add
les
push
mov
leave
nop
jmp
add
cmp
and
add
add
add
notl
repnz
nop
nop
jae
shl
out
add
add
add
push
rclb
jmp
push
pop
add
gs
clc
repnz
nop
nop
jae
jecxz
add
lock
xchg
push
mov
xchg
ret
or
hlt
arpl
add
dec
inc
add
add
add
and
add
nop
test
call
nop
jmp
int
arpl
dec
add
add
jae
nop
push
mov
leave
nop
jmp
cmp
int
add
into
lret
ret
clc
repnz
nop
nop
jae
sbb
pop
add
xchg
sub
icebp
pop
pop
push
mov
xchg
ret
arpl
cmp
add
add
add
pop
mov
xchg
repnz
nop
nop
jae
dec
add
and
sbb
adc
sbb
push
mov
xchg
ret
mov
icebp
add
add
lods
shrl
inc
add
push
and
add
add
repnz
nop
nop
jae
popl
mov
bound
add
stc
nop
push
mov
leave
nop
jmp
icebp
add
repz
add
xor
repnz
nop
nop
jae
int
adc
cmp
repz
add
sub
push
push
mov
xchg
ret
bound
add
lds
movsl
mov
push
mov
xchg
ret
add
fiaddl
add
pop
add
sub
mov
clc
repnz
nop
nop
jae
push
inc
jecxz
testl
nop
push
mov
leave
nop
jmp
add
mov
cld
nop
nop
jae
pop
incb
add
add
add
add
nop
nop
jae
popf
mov
shl
sub
mov
test
cld
nop
nop
jae
add
add
add
cmp
roll
cmc
cld
clc
repnz
nop
nop
jae
add
add
pop
push
push
mov
xchg
ret
cmp
push
add
add
popf
push
push
add
testl
ret
hlt
pop
add
and
out
add
add
in
leave
nop
jmp
add
cmp
add
repz
add
inc
cmp
push
mov
xchg
ret
add
mov
lock
jb
push
clc
repnz
nop
nop
jae
pop
hlt
xchg
and
add
add
add
and
mov
clc
repnz
nop
nop
jae
add
and
add
pop
add
loop
clc
repnz
nop
nop
jae
add
add
mov
clc
repnz
nop
nop
jae
mov
add
js
test
push
nop
push
mov
leave
nop
jmp
pop
lock
mov
jp
call
clc
repnz
nop
nop
jae
xor
ficoml
pop
jmp
addl
cmp
ret
mov
add
push
add
cld
clc
repnz
nop
nop
jae
icebp
sub
pop
arpl
mov
add
sub
push
clc
repnz
nop
nop
jae
add
sbb
adc
imul
mov
cmp
ret
sbb
add
add
push
mov
xchg
ret
mov
mov
add
and
add
mov
je
sub
aad
inc
add
add
and
int
add
clc
repnz
nop
nop
jae
xchg
pop
add
hlt
add
clc
or
mov
leave
nop
jmp
mov
add
add
lea
push
mov
xchg
ret
cmp
add
xor
clc
repnz
nop
nop
jae
add
add
add
lds
nop
push
mov
leave
nop
jmp
insl
add
add
add
test
clc
repnz
nop
nop
jae
add
repz
and
lods
pop
add
pop
clc
repnz
nop
nop
jae
add
out
add
lods
add
mov
xchg
ret
cmp
add
into
add
nop
adc
add
clc
repnz
nop
nop
jae
or
add
arpl
repnz
nop
nop
jae
add
add
add
nop
arpl
cld
nop
nop
jae
mov
into
or
inc
add
int
inc
nop
push
mov
leave
nop
jmp
add
hlt
hlt
icebp
add
mov
add
add
subl
push
mov
xchg
ret
icebp
add
pop
out
add
push
rcrl
add
pop
add
add
out
add
dec
pop
cmp
nop
push
mov
leave
nop
jmp
into
popl
add
add
mov
mov
xchg
ret
pop
inc
add
icebp
pop
add
add
add
clc
repnz
nop
nop
jae
add
add
lock
cmp
add
push
pushf
or
nop
push
mov
leave
nop
jmp
inc
icebp
mov
cmp
add
cmp
jne
add
add
add
add
lock
cmpl
nop
push
mov
leave
nop
jmp
add
sbb
inc
xchg
push
mov
xchg
ret
add
and
into
mov
or
jl
nop
or
cmp
cld
nop
nop
jae
add
add
lds
push
mov
xchg
ret
add
add
add
and
add
sub
mov
cld
nop
nop
jae
enter
add
add
icebp
add
testl
add
out
add
cmp
fiaddl
adc
in
leave
nop
jmp
add
add
stc
add
hlt
and
out
clc
repnz
nop
nop
jae
nop
add
add
mov
xor
repnz
nop
nop
jae
add
or
cmp
jl
mov
call
push
mov
xchg
ret
cmp
lock
add
xorps
xchg
ret
add
add
lods
add
arpl
xor
xchg
clc
repnz
nop
nop
jae
arpl
mov
add
add
push
push
mov
xchg
ret
dec
lods
lods
add
enter
add
adc
repnz
nop
nop
jae
add
add
mov
popf
cmp
in
clc
repnz
nop
nop
jae
hlt
cmp
add
add
lret
push
mov
xchg
ret
out
add
mov
add
add
xchg
fistpl
nop
push
mov
leave
nop
jmp
cmp
xor
or
add
fisttpl
add
add
add
and
into
cmp
mov
and
repnz
nop
nop
jae
icebp
add
push
push
pop
push
mov
xchg
ret
add
add
sarl
out
add
movzwl
clc
repnz
nop
nop
jae
stc
pop
add
add
mov
leave
nop
jmp
inc
cmp
add
lahf
push
clc
repnz
nop
nop
jae
add
repz
add
or
adc
clc
repnz
nop
nop
jae
mov
int
add
hlt
hlt
test
mov
xchg
ret
add
cmp
pop
enter
call
repnz
nop
nop
jae
jl
add
add
add
clc
repnz
nop
nop
jae
cmp
add
and
add
repnz
nop
nop
jae
add
hlt
hlt
jecxz
add
outsl
fistpl
push
mov
xchg
ret
add
add
add
add
cmp
rol
je
clc
repnz
nop
nop
jae
push
pop
add
add
nop
push
mov
leave
nop
jmp
push
or
pop
pop
lock
cld
nop
nop
jae
enter
pop
int
add
jl
jecxz
xorl
clc
repnz
nop
nop
jae
and
hlt
movb
sbb
jne
push
mov
xchg
ret
cmp
sbb
add
push
js
sarb
xchg
ljmp
pop
out
add
add
mov
out
add
push
add
clc
repnz
nop
nop
jae
add
add
add
fistpl
clc
repnz
nop
nop
jae
add
dec
dec
sub
add
sub
or
push
mov
xchg
ret
popf
cmp
roll
cmp
pop
add
in
leave
nop
jmp
hlt
pop
sbb
add
add
push
add
push
push
mov
xchg
ret
sbb
add
add
add
roll
or
cld
nop
nop
jae
add
mov
out
jno
mov
out
sbb
stc
jno
fmul
cmp
repnz
add
gs
push
clc
repnz
nop
nop
jae
add
add
pop
repz
sub
repnz
nop
nop
jae
nop
cmp
add
sar
mov
test
mov
leave
nop
jmp
nop
add
add
push
nop
push
mov
leave
nop
jmp
cmp
add
nop
add
cmp
shll
fld1
clc
repnz
nop
nop
jae
add
icebp
pop
add
add
and
add
repnz
nop
nop
jae
add
xchg
lock
add
add
into
lods
pop
add
push
push
mov
xchg
ret
add
add
add
cmp
or
mov
cmp
push
mov
leave
nop
jmp
pop
insl
into
hlt
add
icebp
add
mov
xchg
ret
and
lods
cmp
jnp
repnz
nop
nop
jae
add
add
mov
add
push
mov
leave
nop
jmp
add
add
add
add
call
nop
jmp
add
sbb
pop
push
mov
xchg
ret
add
add
mov
add
jecxz
pushf
pop
mov
clc
repnz
nop
nop
jae
movb
add
hlt
add
adc
jnp
clc
repnz
nop
nop
jae
icebp
cmp
add
add
in
les
add
pop
xlat
add
add
add
jne
clc
repnz
nop
nop
jae
add
adc
arpl
xlat
call
clc
repnz
nop
nop
jae
add
cmp
sbb
add
clc
repnz
nop
nop
jae
add
add
add
jb
push
mov
fs
add
add
inc
push
xchg
inc
pop
add
xor
pop
stc
cmpl
nop
push
mov
leave
nop
jmp
incb
add
add
add
jne
add
lods
and
xchg
add
cmp
add
mov
xchg
ret
cmp
add
add
or
pop
fldl
mov
leave
nop
jmp
add
cmp
jecxz
mov
mov
clc
repnz
nop
nop
jae
mov
cmp
add
add
dec
imul
cld
nop
nop
jae
cmp
into
add
add
inc
sbb
add
clc
repnz
nop
nop
jae
enter
add
add
pop
add
and
xor
mov
leave
nop
jmp
pop
pop
and
dec
lds
and
add
shll
mov
leave
nop
jmp
add
and
inc
mov
lods
cmp
add
sahf
cwtl
fs
add
test
repnz
nop
nop
jae
pop
sbb
add
push
js
dec
notl
push
mov
xchg
ret
cmp
add
mov
add
or
push
repnz
nop
nop
jae
add
xchg
add
add
push
mov
test
add
roll
loop
add
shlb
push
mov
xchg
ret
into
repz
add
mov
add
mov
movsl
clc
repnz
nop
nop
jae
pop
add
pop
add
add
and
das
add
clc
repnz
nop
nop
jae
add
add
dec
add
or
push
clc
repnz
nop
nop
jae
add
add
inc
add
add
int
pop
jae
repnz
nop
nop
jae
add
pop
mov
repnz
nop
nop
jae
pop
and
lods
add
jl
hlt
into
mov
cs
clc
repnz
nop
nop
jae
sub
add
add
add
pop
into
psubusw
clc
repnz
nop
nop
jae
add
adc
add
lods
lret
scas
clc
repnz
nop
nop
jae
add
add
add
add
fwait
push
mov
xchg
ret
out
add
pop
add
lods
add
stc
mov
clc
repnz
nop
nop
jae
add
mov
mov
sub
repnz
nop
nop
jae
mov
add
and
add
movb
cld
nop
nop
jae
add
and
pop
add
xchg
adc
repnz
nop
nop
jae
add
add
sub
sbb
repnz
nop
nop
jae
add
add
and
cmp
pop
hlt
repz
sbb
nop
push
mov
leave
nop
jmp
or
pop
add
inc
movswl
clc
repnz
nop
nop
jae
mov
popf
add
add
clc
repnz
nop
nop
jae
inc
dec
add
mov
add
add
mov
cld
nop
nop
jae
mov
add
add
add
lock
jp
xor
push
mov
xchg
ret
enter
add
add
cmp
je
mov
push
mov
xchg
ret
cmp
add
mov
icebp
lods
out
mov
push
mov
xchg
ret
push
add
lock
icebp
add
xor
lahf
gs
add
add
add
into
jecxz
mov
loopne
add
repnz
nop
nop
jae
xor
mov
subl
jae
enter
add
add
lret
clc
repnz
nop
nop
jae
add
xor
add
add
sar
repnz
nop
nop
jae
arpl
mov
dec
add
or
cmc
dec
inc
add
add
add
add
add
into
mov
shl
clc
repnz
nop
nop
jae
enter
add
or
pop
outsb
ffreep
loopne
push
mov
xchg
ret
add
mov
sbb
push
clc
repnz
nop
nop
jae
jecxz
pop
adc
out
and
add
decb
aas
xor
clc
repnz
nop
nop
jae
into
add
adc
lock
nop
nop
jae
add
pop
add
lods
add
shr
clc
repnz
nop
nop
jae
dec
add
pop
pop
add
cmpw
clc
repnz
nop
nop
jae
add
shll
dec
add
movsl
push
nop
push
mov
leave
nop
jmp
cmp
add
stc
add
ret
nop
push
mov
leave
nop
jmp
lods
pop
icebp
add
add
add
lds
or
repnz
nop
nop
jae
jl
out
add
dec
out
add
enter
push
mov
xchg
ret
lock
add
mov
and
xor
pop
push
mov
xchg
ret
mov
roll
pop
add
lods
add
push
pusha
add
add
clc
repnz
nop
nop
jae
add
adcl
jae
add
icebp
sbb
add
jl
sub
sbb
push
iret
push
push
mov
xchg
ret
add
add
add
sbb
mov
xlat
clc
repnz
nop
nop
jae
add
add
add
mov
sahf
pusha
add
cld
nop
nop
jae
cmp
icebp
add
repz
and
inc
mov
clc
repnz
nop
nop
jae
push
popl
add
add
add
xchg
call
inc
add
add
mov
add
test
nop
push
mov
leave
nop
jmp
xchg
add
pop
add
xchg
xchg
call
clc
repnz
nop
nop
jae
pop
and
mov
sar
push
mov
leave
nop
jmp
lods
enter
add
mov
sub
clc
repnz
nop
nop
jae
add
hlt
mov
push
push
mov
xchg
ret
hlt
add
cmp
mov
jne
push
mov
xchg
ret
add
add
mov
cmp
sub
cmp
pop
addl
cmp
ret
add
lods
mov
stos
cmp
cld
nop
nop
jae
enter
stc
icebp
dec
add
push
sub
nop
jmp
pop
and
cmp
mov
mov
leave
nop
jmp
add
add
or
push
clc
repnz
nop
nop
jae
add
lock
out
add
or
mov
call
clc
repnz
nop
nop
jae
jl
repz
add
dec
lds
nop
inc
inc
nop
push
mov
leave
nop
jmp
pop
xchg
jecxz
add
lock
push
mov
xchg
ret
mov
dec
add
add
add
repnz
nop
nop
jae
jecxz
add
add
lods
sbb
and
stc
lea
clc
repnz
nop
nop
jae
and
and
push
test
push
mov
leave
nop
jmp
cmp
icebp
popf
cmp
xor
mov
sub
push
mov
xchg
ret
enter
lock
add
dec
and
fcoml
adc
clc
repnz
nop
nop
jae
add
hlt
icebp
add
add
out
and
pop
add
add
cmp
bound
cmp
jl
add
out
stc
mov
mov
ljmp
nop
jae
add
add
add
add
incl
nop
push
mov
leave
nop
jmp
add
push
repnz
nop
nop
jae
movb
lock
add
leave
sub
push
mov
xchg
ret
cmp
pop
add
add
or
add
push
xor
fld1
clc
repnz
nop
nop
jae
add
mov
mov
mov
or
clc
repnz
nop
nop
jae
xchg
cmp
add
fstl
mov
xchg
ret
add
pop
sub
int
add
add
add
scas
cmc
push
mov
hlt
sbb
add
pushf
jge
add
mov
test
pop
jge
test
clc
repnz
nop
nop
jae
stc
adc
add
jle
dec
mov
clc
repnz
nop
nop
jae
add
or
dec
add
cmpl
nop
push
mov
leave
nop
jmp
mov
inc
mov
add
and
mov
clc
repnz
nop
nop
jae
add
sbb
enter
sbb
movb
xor
lret
les
add
add
repnz
nop
nop
jae
add
add
icebp
add
outsl
fistpl
clc
repnz
nop
nop
jae
into
pop
jecxz
add
repz
add
push
mov
xchg
ret
movb
xor
lods
add
sub
mov
clc
repnz
nop
nop
jae
add
popf
add
push
mov
xchg
ret
mov
add
and
sbb
add
add
xchg
nop
push
mov
leave
nop
jmp
mov
add
into
inc
cmp
pusha
clc
repnz
nop
nop
jae
rorl
lods
add
add
add
mov
clc
repnz
nop
nop
jae
add
add
pop
add
pop
clc
repnz
nop
nop
jae
mov
jl
cmp
add
bound
push
mov
leave
nop
jmp
mov
popf
adc
popf
mov
pop
push
mov
xchg
ret
add
add
add
add
bound
push
push
mov
xchg
ret
hlt
add
mov
pop
add
dec
mov
add
cld
nop
nop
jae
add
add
sbb
clc
repnz
nop
nop
jae
sub
sbb
pop
jl
repz
adc
cld
nop
nop
jae
nop
add
insl
out
mov
add
dec
aam
jmp
clc
repnz
nop
nop
jae
add
add
jecxz
add
mov
clc
repnz
nop
nop
jae
or
mov
mov
push
clc
repnz
nop
nop
jae
cmp
pop
add
stos
jne
clc
repnz
nop
nop
jae
sbb
add
add
fistpl
nop
push
mov
leave
nop
jmp
add
lock
lods
xor
mov
nop
push
mov
leave
nop
jmp
add
pop
sbb
int
lret
cli
filds
addr16
add
cmp
jecxz
mov
cmpsb
push
cmc
add
clc
repnz
nop
nop
jae
and
bound
add
call
clc
repnz
nop
nop
jae
sub
add
hlt
enter
scas
test
nop
push
mov
leave
nop
jmp
arpl
mov
sbb
add
clc
repnz
nop
nop
jae
lock
arpl
mov
nop
jae
add
bound
inc
add
popf
ror
mov
rcrb
repnz
nop
nop
jae
pop
add
add
imul
nop
nop
jae
cmp
add
and
add
add
add
movsb
pop
inc
add
add
stc
add
add
add
mov
clc
repnz
nop
nop
jae
mov
add
add
sub
repnz
nop
nop
jae
add
incb
enter
sbb
add
repnz
nop
nop
jae
movb
stc
or
cmp
push
mov
mov
add
push
add
ljmp
add
jb
call
xchg
mov
mov
push
inc
test
xchg
push
sub
mov
lahf
adc
cmp
jle
push
adc
dec
cmpsb
pushw
insl
cmp
scas
cli
push
sbb
mov
fiaddl
mov
lret
ljmp
push
aam
add
adc
push
andb
add
inc
pop
das
movb
andb
inc
dec
xor
hlt
test
test
pop
cld
dec
push
shl
out
xor
xchg
add
xchg
dec
fstl
jnp
and
clc
clc
test
ds
mov
xor
out
push
add
add
test
lods
arpl
cmp
mov
mov
test
pop
or
ja
scas
lock
fidivs
dec
dec
stos
xchg
inc
xchg
mov
fs
daa
xor
ret
outsl
lret
lea
add
pushf
pop
mov
subb
inc
dec
mov
jnp
cmp
cmpb
pop
fldcw
jl
mov
rorl
jmp
fstps
dec
push
push
xor
mov
sbb
and
jge
or
int3
sub
insb
cld
enter
add
iret
add
xchg
xlat
scas
movsb
mov
sub
jbe
and
dec
movsb
adc
jae
aaa
ret
sbb
pop
jp
in
mov
movsb
rdmsr
mov
ds
lahf
adcb
cmp
lds
dec
add
cs
clc
std
pop
add
fcompl
jecxz
dec
sub
xchg
adc
inc
rorl
dec
cli
sbb
xchg
stc
arpl
decb
sbb
in
and
sub
adc
sbb
mov
sub
mov
pop
cmp
ret
stos
push
xlat
xor
mov
cltd
dec
mov
subl
or
inc
js
jae
das
lret
stos
js
adc
or
in
int3
ljmp
pop
mov
mov
xchg
jae
data16
call
mov
xor
add
mov
add
dec
or
and
xor
cmp
mov
or
sub
shlb
repnz
add
xchg
shll
test
or
mov
cmpsb
mov
shrl
push
or
xor
add
add
outsl
scas
call
pop
cwtl
adc
repnz
inc
ret
inc
pop
enter
mov
in
push
shrb
xchg
push
outsl
and
fisubrl
lods
pop
cld
inc
cmc
call
cmp
popf
mov
push
es
add
xchg
and
or
xor
xchg
or
aad
int3
adc
mov
sub
in
pop
mov
insl
mov
nop
punpckldq
lret
fnstenv
aam
es
dec
add
pop
xor
test
int
pop
popa
cmp
ret
ja
dec
rcrb
leave
aas
fidivs
das
xor
push
loopne
adc
pushf
subl
xor
mov
fsubs
idiv
std
and
movl
add
mov
adc
add
xchg
fiadds
cltd
outsl
sub
ja
sti
fwait
cmp
mov
ljmp
clc
icebp
jp
jecxz
cmp
add
xchg
push
andl
cmpsl
movsl
mov
xor
cmp
push
or
incb
jg
adc
or
das
or
dec
es
inc
add
push
std
es
add
xchg
and
adc
adc
mov
pop
pop
add
mov
in
mov
mov
fiaddl
inc
push
ret
dec
inc
out
outsl
sbb
sbbl
xchg
add
sbb
sbb
loopne
adc
adc
push
arpl
mov
in
xor
test
pop
ss
mov
mov
jo
lret
sub
scas
xchg
mov
adc
icebp
addb
pop
outsl
adc
fcomp
pop
imul
mov
cwtl
xlat
cs
push
out
pop
daa
cmc
addr16
push
add
clc
mov
mov
dec
sub
lods
sbb
push
add
out
int3
mov
push
jle
cmp
mov
pcmpgtw
test
rorl
pusha
add
sbb
add
xchg
daa
or
into
es
rcr
lahf
mov
and
in
rorb
dec
loopne
shll
int3
push
dec
pop
mov
dec
adc
pushf
enterw
inc
push
imul
add
xor
fs
data16
sbb
loope
daa
cmpsb
inc
add
outsl
add
int
add
jne
xchg
or
imul
ljmp
xchg
pop
scas
dec
popf
es
xor
test
insb
inc
sub
aaa
or
dec
sbb
and
jno
ja
inc
cmp
out
insl
mov
mov
pop
mov
add
push
push
ss
jmp
incb
or
loop
mov
pop
add
cmp
rolb
add
add
jne
fsubr
sub
mov
lret
add
mov
shrl
call
int3
sahf
in
or
les
mov
sub
sti
lret
hlt
sub
fnstcw
lret
lods
imul
add
add
push
cmp
add
sar
dec
add
test
mov
dec
popa
insb
jmp
add
daa
cli
or
lcall
mov
push
lods
sbb
enter
push
fistl
int3
pushf
mov
shll
add
fmull
gs
flds
lds
inc
or
sahf
push
iret
xor
pop
shll
ds
roll
cmp
out
fs
lds
and
xchg
mov
iret
push
adc
out
or
or
push
outsb
mov
and
jnp
arpl
add
sarb
pop
das
jno
fidivs
ret
ss
sti
pop
add
mov
and
mov
outsl
mov
inc
mov
stos
ss
add
shlb
enter
adc
in
daa
push
mov
addl
test
je
jl
cmp
mov
mov
popa
inc
cs
dec
mov
lods
rorl
test
cmp
dec
add
push
lcall
lcall
inc
out
dec
cmc
and
dec
cmp
push
jmp
arpl
scas
cmpsb
pop
add
xchg
xlat
pop
repnz
jae,pn
and
cld
dec
stc
xor
sbb
insl
and
loop
sbb
mov
lcall
imul
imul
fisttpll
leave
enter
push
cmpsl
jae
sbbl
or
xor
mov
pop
push
add
lods
enter
shl
pop
sub
ds
xchg
imul
adc
shll
or
push
add
outsl
bound
in
pop
add
adc
push
push
ljmp
nop
movsl
je
mov
scas
push
inc
out
add
out
fsubrs
or
popf
xor
and
and
mov
push
cmp
mov
xor
push
adc
push
jg
sub
repz
shrb
inc
add
pop
add
add
xor
add
iret
jb
mov
xchg
lahf
aaa
push
push
pop
cmp
jb
nop
adc
and
pusha
add
xchg
adc
pop
pop
lret
fadds
xchg
shl
jmp
fdivr
cmp
sub
xchg
das
xchg
pop
les
lret
inc
ficoml
xchg
loopne
lret
sbb
das
test
mov
lret
in
adc
pop
mov
or
and
cwtl
xchg
mov
dec
daa
repnz
inc
adc
jp
mov
stc
cmp
mov
mov
mov
xor
push
push
and
mov
mov
push
hlt
xor
inc
sub
push
jae
cmpb
call
add
in
add
pop
adc
dec
add
adc
movsl
xor
push
in
add
inc
and
inc
or
pushf
and
ja
pop
xchg
jmp
lret
popf
inc
out
sub
ret
mov
sbb
sbb
pop
xchg
mov
pop
lods
mov
add
mov
jp
cld
and
mov
sub
ljmp
shl
test
pusha
add
xor
mov
adc
push
add
loop
xchg
into
adcb
cmp
aam
insl
mov
fsts
jae
dec
repz
push
pop
test
lods
push
mov
xchg
xchg
je
adc
sbb
repz
pop
mov
inc
push
rolb
sub
push
testl
shrl
sub
out
mov
xor
or
leave
cmp
mov
rcrl
lret
add
aam
push
mov
add
add
shll
imul
and
rorb
insl
ja
lods
and
or
aad
xor
out
inc
and
push
xchg
je
sti
addr16
loop
mov
add
repz
ljmp
add
mov
pop
mov
and
std
cmp
scas
cmp
jo
adc
rol
mov
mov
xchg
cmp
les
xor
inc
aam
push
scas
dec
mov
dec
ljmp
sbb
mov
sub
jmp
dec
jns
xchg
pop
push
ljmp
icebp
cld
fistpll
jp
add
mov
fisubrl
loope
cmpsl
mov
pop
dec
pop
rcll
inc
xchg
addr16
inc
or
jg
std
sub
les
mov
dec
lret
pop
das
insb
sbb
filds
add
hlt
mov
mov
mov
xchg
and
mov
sub
es
daa
in
or
test
imul
repnz
stos
pop
add
sub
lret
push
cld
imul
cmpb
out
ja
movsb
fwait
cltd
cmpsl
and
mov
or
inc
lret
jg
add
repnz
popf
mov
sahf
mov
es
loope
fldt
mov
xor
rorb
sub
jle
pop
enter
pushf
adc
cmp
stos
aad
mov
insl
xchg
movsb
or
xchg
fistpl
add
stos
add
xlat
pop
add
add
movsb
arpl
dec
movsb
push
sbb
add
scas
and
sbb
mov
inc
push
sbb
subb
fsub
ja
push
pop
loope
repz
lods
mov
mov
arpl
out
push
imul
fadds
loopne
inc
sub
inc
aam
add
pop
movsb
mov
push
cmpsl
int3
xor
mov
jno
sarl
or
xor
push
bnd
dec
add
sbbl
or
and
fildll
data16
or
jnp
dec
stos
inc
cmp
xchg
inc
add
imul
xor
fmul
insb
stc
xor
mov
push
enter
sbb
lock
sti
das
enter
jns
push
or
test
xchg
push
sarb
mov
xor
fisubs
mov
add
dec
out
inc
cmp
gs
add
sbb
fs
fdivrs
add
inc
add
pop
or
mov
push
sbb
inc
inc
add
mov
adc
scas
jecxz
lock
mov
add
outsl
cwtl
dec
mov
lods
inc
inc
js
or
mov
dec
xchg
sub
dec
sub
add
xlat
sub
add
and
mov
mov
addb
inc
inc
xchg
jne
mov
cmpsl
sahf
shl
out
loop
pop
xor
cmp
shrb
fisubl
xor
gs
dec
mov
roll
lahf
pop
adc
test
mov
add
jno
lods
clc
dec
add
mov
add
mov
sbb
jge
insl
imul
inc
sbb
cltd
cmp
pop
mov
cli
leave
js
mov
or
cmpsl
loopne
sub
shll
mov
iret
cli
add
aas
outsb
test
das
dec
push
fisttpll
aaa
mov
xor
mov
add
outsb
push
sarb
sbb
mov
mov
xchg
into
jo
xorl
nop
fcmovnb
push
mov
rep
jnp
and
hlt
xchg
repnz
mov
repz
inc
je
sbb
in
out
xor
and
pop
add
jge
jmp
adc
and
xor
xchg
push
jg
inc
mov
push
sbb
fdivs
jge
xchg
addr16
jp
icebp
inc
jne
jl
push
or
jae
vpunpckhwd
push
movsb
add
sub
inc
push
adc
pop
addr16
mov
xor
or
or
dec
mov
and
mov
and
pop
or
fwait
pop
push
jl
pop
rcrb
or
mov
and
mov
xchg
dec
mov
inc
add
cmpsl
mov
test
mov
mov
movsb
movsl
int
jl
lds
and
lea
adc
cmp
lcall
std
pusha
add
dec
sub
mov
adc
xor
inc
or
jbe
popa
mov
rcrl
sbb
int3
fisttpl
loopne
test
enter
inc
pop
mov
sahf
xlat
nop
call
jg
das
stc
cmp
xchg
pop
rcrl
pushf
stos
subl
arpl
inc
add
inc
cmp
daa
sbb
ret
outsl
jo
lret
mov
clc
pushf
shll
or
mov
cmp
add
lods
in
movsb
in
lea
loop
push
decl
ja
int3
and
fs
stos
pushf
pop
dec
add
cmp
testl
sti
popa
aas
mov
or
aad
inc
loope
mov
test
fsubrl
sub
icebp
gs
pop
testl
daa
or
mov
fst
movsl
pop
push
jg
or
mov
pop
in
xchg
xor
jmp
jg
mov
xchg
and
mov
test
add
dec
add
ds
repnz
andl
add
push
jp
jl
pop
lods
lds
mov
repnz
out
lcall
xor
sbb
pop
adc
inc
add
cmp
jbe
sub
mov
jno
pushf
mov
loop
std
sub
mov
ss
cmp
js
outsb
adcb
sbb
add
pushf
xchg
ret
push
xorl
push
add
dec
add
xor
insl
nop
scas
xchg
inc
mov
fildll
les
or
in
cmc
out
or
sbb
add
push
mov
sarl
or
mov
sbb
rcll
sbb
xor
dec
add
xchg
xor
add
sbb
xchg
leave
pushf
psubsw
xchg
dec
add
in
or
ja
fisttpll
jnp
mov
in
sbbb
cmp
or
sbb
aam
mov
sarb
inc
fs
push
cmp
mov
pusha
add
daa
xor
sahf
pop
and
jnp
je
cltd
dec
push
mov
mov
movsb
or
xchg
xchg
pushfw
jle
pop
mov
sub
xchg
dec
or
push
imul
bnd
sub
subb
add
fst
out
inc
jp
std
cmp
add
push
dec
inc
jg
push
xor
mov
hlt
mov
ror
xorb
stc
testb
pop
fistpll
sbb
add
cmp
pusha
add
add
ja
adc
test
push
xor
xor
lds
pop
push
gs
xor
push
or
jle
cmp
jl
cmp
sub
lds
push
dec
adc
lahf
inc
loop
stos
fs
sahf
outsb
in
cmp
int
adc
repz
push
mov
fstl
int
loope
popa
jp
inc
mov
cli
out
jp
jecxz
ljmp
pop
incl
xchg
lods
push
mov
out
pop
and
jecxz
fwait
and
repnz
popl
mov
push
ret
pop
dec
sbb
leave
jno
lcall
and
mov
add
mov
adc
insl
cmp
out
das
add
insb
mov
in
sbb
mov
and
mov
cmpsl
imul
add
cmpsb
pop
add
movsb
and
inc
mov
sbb
jbe
jno
add
lds
imul
and
inc
clc
movsb
out
mov
adc
and
push
cwtl
pushf
test
mov
or
call
xchg
stc
jl
mov
sub
popf
stos
dec
cwtl
repnz
pusha
add
pusha
add
roll
mov
and
lcall
adc
das
dec
decl
mov
fistpll
pop
push
scas
push
push
adc
and
add
push
jb
cmp
clc
xchg
iret
pop
stos
int3
mov
mov
xchg
and
sub
cmpsb
andl
mulb
jge
aas
xchg
out
cmp
test
shll
mov
les
add
add
or
add
lock
add
movsb
shrl
xchg
bound
dec
push
push
or
in
push
inc
cwtl
push
add
js
divl
jg
cmp
xchg
mov
sub
sub
rclb
jecxz
add
lods
mov
aas
cmp
sahf
mov
pop
sub
pop
push
mov
scas
pop
push
das
and
call
xchg
cmpsl
mov
rcl
scas
outsb
sub
enter
mov
sbb
fmull
flds
add
test
es
push
imul
rorb
inc
outsb
in
js
dec
adc
call
cs
xchg
mov
mov
xchg
dec
push
les
sub
sahf
jb
enter
dec
add
subb
add
inc
das
lea
cwtl
popa
movsl
pop
std
sbb
mov
lods
icebp
mov
inc
inc
add
js
lock
int
mov
inc
add
push
adc
mov
insl
cmpsb
aaa
fmuls
jmp
sbbl
in
push
repz
mov
add
and
cmc
mov
scas
dec
add
jp
pop
shrl
inc
or
add
fwait
gs
mov
mov
jge
xchg
mov
mov
hlt
mov
cli
fs
and
mov
sbb
push
pop
mov
aam
fucomp
lods
clc
loopne
xchg
mov
jmp
mov
add
jno
pop
or
xchg
sbb
and
or
repnz
mov
lock
inc
mov
pop
and
pop
add
push
push
xchg
movsb
jp
arpl
pop
out
insl
addr16
push
dec
cli
addr16
out
nop
and
or
movsl
mov
xchg
lea
pop
fdivl
push
mov
loope
lock
add
sbb
repnz
pop
lret
cmp
mov
mov
aas
loop
add
imul
stos
mov
sub
hlt
addr16
dec
pop
add
js
js
mov
sbb
loopne
jne
mov
jp
jns
faddl
add
fincstp
fs
xor
sti
add
int
sub
sbb
inc
sub
out
bound
popf
pop
adc
or
cmc
mov
inc
mov
inc
pop
inc
jb
pop
push
cltd
fcomip
dec
shrl
les
mov
lods
mov
in
jle
adc
ljmp
dec
adc
mov
adc
sub
push
faddp
cmpsl
insl
sti
sub
xor
inc
add
mov
push
add
cli
add
out
into
loop
rolb
push
aad
jp
and
scas
loopne
adc
stos
push
add
pop
push
jle
jb
cmp
inc
hlt
ljmp
outsb
cld
xor
add
xchg
repnz
mov
ss
add
cmp
or
fsubrs
in
sub
cmp
sub
or
or
sbb
nop
xor
inc
pop
test
fnstsw
aaa
sub
shll
arpl
mov
imul
dec
ror
add
cmpsl
jmp
add
sub
mov
mov
push
out
loop
cltd
pop
ret
and
aad
popa
push
mov
mov
xchg
jp
sar
insb
adc
adc
cmc
fisubrl
and
in
pop
js
test
add
int3
ds
out
fbstp
mov
add
mov
cmp
xor
arpl
mov
pushf
subl
cwtl
lret
add
inc
mov
stc
lods
daa
jmp
adc
aad
clc
adcb
loope
and
add
fidivs
sti
rcrb
adcb
cmpsb
inc
mov
leave
ret
add
mov
pop
inc
cmp
test
jl
mov
push
fisttps
inc
jnp
or
add
xchg
orb
mov
jns
adc
in
dec
xchg
dec
add
xchg
pop
in
sarl
faddl
add
es
fists
adc
fwait
lret
push
out
scas
add
add
fsubr
adc
pop
push
jl
add
lahf
sub
hlt
pop
ds
dec
add
add
mov
sti
aam
lahf
test
lods
ja
and
je
add
rcpps
sbb
dec
mov
fs
add
into
xor
nop
mov
add
mov
loopnew
xor
stos
push
cmp
add
fstl
pusha
add
inc
mov
jle
call
inc
loope
rsqrtps
adcl
rol
in
add
addr16
jb
sbb
es
sub
loopne
mov
imul
add
popa
bound
scas
mov
inc
icebp
incl
in
insb
pop
add
daa
pop
jmp
pop
xor
stos
cwtl
adc
mov
add
mov
dec
xchg
lret
aaa
testb
cmpl
ljmp
mov
mov
add
rorb
testl
mov
xchg
loop
mov
jle
scas
jl
icebp
xor
push
inc
or
add
movsl
rcr
jl
sub
adc
cmpsb
std
lret
mov
jns
xchg
int3
in
add
push
push
pop
add
sti
add
add
cld
push
pop
outsl
daa
sub
add
clc
push
movsb
xchg
adc
mov
stc
cwtl
pop
cmp
xchg
fsubr
push
push
sbb
popf
or
xor
sbb
sbb
lret
push
pop
add
mov
add
add
out
sub
add
adc
jnp
fnstcw
data16
sar
mov
dec
jo
mov
jo
adc
rclb
ror
push
cld
fsubrs
cmc
lock
xchg
repnz
subb
add
and
and
lods
xchg
cmpsb
jp
dec
add
cmpsb
xor
push
stc
cmp
mov
or
lds
xchg
dec
int3
jg
and
sbb
add
add
pop
dec
rcll
and
mov
add
repnz
cmpsb
cmpsl
out
xchg
popf
and
nop
dec
fidivrl
mulb
push
repz
push
cmp
loopne
movsl
pop
shrd
xchg
add
movsl
push
out
jp
lahf
notb
or
xchg
sti
and
push
cld
cmp
cmp
mov
pop
lahf
cmp
int
or
or
idivl
sub
push
ret
int
jne
pop
dec
xor
into
orb
shrl
mov
cmp
and
arpl
inc
repz
cmp
scas
sub
ja
xor
or
or
enter
stc
pop
jmp
data16
subl
xchg
psrld
jnp
jns
jbe
jb
lods
push
imul
stos
dec
add
fbld
in
or
nop
xor
inc
push
adc
std
lock
dec
nop
enter
or
jne
das
or
inc
push
stos
mov
pop
push
aam
inc
pop
test
test
inc
sub
xorb
mov
mov
and
ds
push
enter
ja
adc
cmp
jp
xchg
or
add
xchg
in
lahf
je
ds
jle
push
mov
loop
mov
sub
mov
dec
inc
or
std
jns
pop
sub
add
mov
je
jno,pn
shl
jp
add
dec
dec
push
sub
push
jp
push
clc
jmp
into
test
pop
es
ret
add
jle
add
movsl
cld
sahf
lret
pop
and
dec
mov
mov
cmc
and
jmp
pop
dec
pop
hlt
mov
cmp
and
add
mov
jne
sub
pop
rcl
stos
call
or
xlat
jne
sub
cmpb
push
inc
pop
add
jmp
xchg
into
pusha
add
rclb
xor
inc
add
add
mov
scas
aaa
icebp
sbb
mov
inc
cwtl
gs
aam
xchg
stos
ss
add
ja
dec
mov
add
push
or
outsb
cmp
mov
stos
jno
inc
ja
shl
sti
lret
hlt
in
add
cmp
mov
ficoml
push
xor
lcall
sti
xorl
fildl
xor
mov
and
daa
push
or
ror
and
add
bound
out
add
scas
lea
xchg
mov
fists
pop
jecxz
jno
imul
lahf
sub
js
xor
pop
subb
data16
fistps
mov
adc
fsubrl
add
pop
lods
and
aas
jmp
jno
push
fidivrl
add
add
mov
mov
loop
fsubrp
das
or
cmc
fsubs
add
sbb
std
inc
fcomi
sbb
jecxz
outsb
cmp
ja
lods
jle
imul
push
mov
inc
push
fwait
xlat
add
and
add
lea
dec
popa
sub
ret
cli
incl
iret
push
jp
clc
or
jge
das
jno
dec
jo
outsl
mov
xchg
cmp
jle
orb
cmp
lods
or
add
and
mov
jp
fwait
sbb
mov
aas
push
aad
mov
lea
jb
jbe
jbe
add
in
mov
sarb
sub
dec
addl
push
pop
in
jbe
sahf
cmp
inc
jle
dec
fsubl
xchg
add
or
cld
incl
std
add
ljmp
xchg
insb
pop
add
mov
movsb
stos
imul
inc
add
cmpsb
hlt
push
or
pop
mov
add
adc
adc
outsl
imul
adc
cwtl
inc
int
dec
aas
push
ret
mov
or
and
inc
dec
add
push
add
shll
lods
dec
push
push
pop
inc
xchg
push
scas
jb
jmp
lods
iret
adc
pop
push
in
cmp
out
push
mov
fnsave
cmp
out
pop
xchg
out
faddp
sbb
and
cmpsl
pop
cmp
mov
cmpb
fwait
xchg
repz
jae
ret
sub
pop
add
cmp
das
push
icebp
test
lods
sbb
mov
repz
xor
das
pop
add
push
cmp
addr16
dec
flds
out
cwtl
stos
mov
mov
sbb
jl
mov
ja
xchg
std
fcomi
cld
pop
sub
shrb
arpl
scas
clc
xor
outsb
inc
xchg
mov
add
add
mov
jmp
push
inc
std
mov
cli
movsb
push
jecxz
add
xchg
dec
add
push
sub
jg
mov
clc
stc
mov
pop
outsl
jecxz
outsb
pop
sub
sbb
jns
das
jae
ja
add
fs
add
jmp
mov
sti
mov
inc
jo
push
add
loopne
pop
outsb
pop
notb
mov
pop
loopne
sub
dec
jne
dec
jp
xor
or
js
popa
fistl
nop
fmull
add
lcall
adc
dec
mov
lcall
sti
popf
mov
subl
xchg
lcall
cmp
insb
shll
add
mov
add
and
cmp
mov
push
jecxz
pop
dec
test
mov
mov
sub
mov
cmp
lahf
gs
sub
callw
dec
xchg
sub
dec
jp
adc
loopne
pop
aam
push
pop
mov
lds
movsb
test
cmpb
arpl
sahf
ljmp
xorb
add
push
sar
stos
fdivr
sub
add
push
pop
arpl
das
mov
adc
out
mov
xlat
in
insb
adc
fists
fnstcw
iret
jg
int
inc
dec
jge
mov
push
add
mov
bnd
inc
loope
mov
add
cmp
loopne
dec
es
push
push
pop
lds
repz
add
push
shrl
jno
sbb
lods
enter
fists
add
fildl
jl
gs
jo
gs
into
arpl
cmpsl
lock
jno
mov
sbb
daa
mov
and
ds
insl
addl
cli
adc
frstor
sub
pop
xchg
dec
sbb
jle
add
clc
xchg
loopne
pop
cmpsl
mov
roll
in
icebp
movsl
push
iret
imul
insb
rcrb
push
lret
outsl
jns
jmp
pop
bnd
movsl
and
ds
lock
sbb
lods
shlb
adc
add
add
std
std
mov
sub
sar
jmp
adc
loopne
rcrl
pop
mov
stc
jns
enter
outsl
push
push
loope
adc
sbb
mov
jbe
enter
repnz
pushf
out
xchg
aam
adc
fldl
ret
add
out
mov
add
dec
es
inc
mov
cmp
xchg
test
in
lods
les
inc
es
sub
xchg
cmp
xorl
add
add
inc
sbb
into
rclb
sub
pop
or
mov
sub
push
xchg
cmc
and
fisubrl
cmpsb
fs
push
add
pop
xchg
fs
mov
mov
mov
test
push
add
lods
mov
xor
dec
add
add
add
xchg
fdiv
jne
mov
ret
imul
jecxz
hlt
mov
sbb
repnz
subps
lcall
aas
fs
xlat
insb
subb
std
outsb
cmpl
xor
gs
stc
cld
test
or
cmp
xchg
jae
pushf
loopne
cmpsl
mov
inc
adc
dec
add
adc
xor
push
dec
add
add
mov
adc
in
aam
adc
mov
and
xor
rcrb
test
mov
fsub
je
add
cld
ret
mov
ret
shrb
inc
fcoms
lods
push
or
cmpsb
jb
popf
dec
insl
jge
rcrl
add
retw
das
dec
jl
imul
dec
mov
dec
inc
aas
or
and
pop
jecxz
pop
cmp
test
pop
jp
jnp
sahf
xchg
movsb
cmp
mov
adc
fdivs
mov
leave
cld
mov
jb
movl
mov
imul
daa
jle
outsl
cmp
cmpsb
mov
mov
cmpsl
lcall
pop
or
xchg
push
dec
add
mov
pop
ds
inc
adc
shr
dec
dec
aam
fldl
jg
call
add
jnp
inc
add
pop
mov
mov
loop
or
movsb
adc
imul
or
dec
in
arpl
out
arpl
repz
lret
xchg
jmp
pop
incl
repz
add
pop
adc
xchg
push
test
aaa
jmp
call
inc
repz
add
xor
add
in
inc
push
xor
lds
add
sub
add
std
lcall
stc
outsb
aad
sbb
add
clc
loope
out
mov
or
addr16
cltd
pop
mov
add
jecxz
and
repnz
fwait
cmpsl
loope
add
loop
or
and
lret
jmp
loop
adc
rcll
add
loop
fdivs
pusha
add
add
mov
adc
repz
loope
adc
add
push
shrb
and
mov
push
out
ja
and
jne
cwtl
orb
and
inc
dec
add
xchg
sbb
jns
xchg
mov
xchg
enter
or
mov
rorb
lcall
jle
mov
dec
test
inc
xor
mov
jge
or
lods
push
cltd
cmpsl
sbb
and
repnz
fcomi
pop
jg
add
jns
dec
add
fmul
je
mov
shlb
pop
add
nop
push
aam
mov
lcall
jno
pusha
add
dec
daa
repz
mov
lret
lret
ret
dec
into
cmp
fsub
mov
xchg
mov
mov
idivl
sbb
ss
add
add
add
mov
sbbb
imul
pop
jbe
pop
mov
mov
jecxz
fstl
stos
mov
inc
dec
push
dec
xchg
add
call
lret
notb
call
mov
lods
mov
add
add
insb
jns
cwtl
mov
mov
mov
outsb
out
cmc
inc
movsb
xchg
popa
mov
add
fs
flds
sbb
out
adc
add
sbb
rol
jnp
mov
into
imul
mov
jp
or
pop
ljmp
cmpsb
nop
mov
lods
adc
sbb
dec
leave
push
inc
pop
faddl
dec
add
fdivrl
push
icebp
out
es
pop
pop
aas
jge
and
rcr
pop
ljmp
add
or
int
std
mov
pop
inc
test
pop
lcall
popf
mov
outsb
stc
imul
and
inc
xor
outsb
mov
or
mov
popf
ja
ret
push
inc
add
test
enter
aas
popf
xlat
cmp
stos
adc
insl
dec
or
fstpl
mov
push
xchg
cltd
pop
mov
mov
inc
rcl
push
pop
jmp
cwtl
adc
test
stc
lds
and
out
pop
lret
jle
add
das
push
mov
imulb
cmp
arpl
jnp
xchg
sub
add
cmpsl
xchg
nop
xchg
out
ret
ja
aam
mov
repnz
add
and
jmp
cmp
or
adc
mov
out
inc
push
push
aaa
fildl
popa
and
push
add
lea
xchg
rorl
xchg
aam
fdivrl
add
add
add
outsl
test
addr16
jo
mov
sbb
add
jns
test
adcl
ret
xchg
es
shrb
dec
inc
add
bswap
aam
lods
outsb
add
mov
mov
inc
mov
fprem1
and
out
inc
rol
dec
addr16
and
jl
fst
loope
popa
xchg
add
and
adc
and
sub
mov
aas
xchg
add
int
mov
add
aaa
xchg
js
sbb
dec
add
call
dec
inc
ret
lods
stos
fldl
sahf
popf
mov
lcall
push
mov
std
fwait
popf
or
out
push
mov
lock
inc
addr16
mov
cmpsb
movsl
pop
adc
sbb
mov
scas
pushl
movsb
aam
leave
jbe
cmp
aam
mov
call
in
or
aaa
adc
sbb
xor
outsb
mov
mov
fs
pop
xor
addr16
jno
add
and
jl
pop
js
jp
pop
cli
es
add
mov
in
hlt
into
cwtl
jbe
sbb
mov
in
rcrb
jmp
out
aam
and
mov
cli
in
xchg
adc
test
rcr
lea
dec
repz
aaa
pop
add
in
fs
or
jne
dec
jb
jns
pop
xor
dec
lret
inc
rol
add
movsl
leave
sub
xor
mov
cmp
push
test
adc
out
icebp
dec
mov
pop
inc
add
add
stc
mov
in
mov
loop
ss
push
daa
ds
xlat
sti
pop
push
pop
add
insb
cs
mov
inc
rol
repz
mov
add
add
mov
add
or
dec
test
mov
jecxz
hlt
adc
pop
mov
or
adc
mov
and
xchg
add
pop
test
mov
xor
neg
and
into
sub
cmpb
shlb
in
xchg
cld
pop
lret
inc
aas
push
imul
or
fs
inc
add
jle
testl
mov
inc
in
jge
push
jne
rcl
xor
stc
lret
jo
inc
jae
and
sbbl
mov
je
loop
mov
out
xor
dec
std
add
dec
xchg
and
andb
sbb
adc
out
jbe
or
sahf
dec
add
xchg
aaa
or
mov
mov
xchg
mov
add
sbb
dec
loop
mov
mov
cmp
imul
push
adc
icebp
cltd
sub
dec
cwtl
lods
jae
adc
sti
cmp
nop
jae
ret
mov
ds
iret
mov
sbbb
xchg
cmpsb
and
shrb
mov
cs
cmp
shl
nop
out
mov
cmc
insl
cmp
mov
mov
in
test
mov
aam
les
ret
jp
sbb
add
jg
add
pop
loopne
push
enter
jns
insl
xorb
outsl
pop
loope
and
scas
push
add
xchg
mov
cmp
pusha
add
add
ja
jbe
andl
pop
es
cs
jecxz
add
nop
lret
inc
jecxz
loopne
add
mov
dec
cmp
fisubs
mov
std
mov
daa
iret
mov
fs
add
add
lock
mov
movsl
test
bound
rorl
cmp
pusha
add
fisubrl
xor
ficomps
mov
cmp
inc
xchg
popf
mov
jle
les
sub
xor
push
xlat
out
inc
xchg
add
scas
xchg
mov
push
mov
sbb
ds
push
cmp
ret
and
pushf
xor
jge
bound
iret
ljmp
and
dec
pop
outsb
ret
loopne
aam
sbb
xor
dec
roll
test
inc
lret
int3
fnstenv
and
pop
mov
pop
pop
and
movsb
lret
cli
mov
fimull
mov
rcrb
stc
cmp
push
jne
or
mov
not
shlb
push
add
fists
pmaxsw
mov
jp
dec
popf
jge
xor
scas
jle
dec
mov
mov
add
xchg
jbe
iret
test
add
pop
cmpb
jno
xchg
adc
inc
xchg
les
pop
or
inc
or
fsubl
mov
dec
lea
dec
sbb
push
inc
jae
test
shrl
sbb
xchg
repz
into
jno
xchg
imul
pop
mov
lock
push
pop
lock
xor
aam
mov
lods
jnp
mov
adc
mov
add
lods
lret
ds
adc
icebp
testl
lahf
mov
add
push
test
in
popf
mov
popa
jne
xchg
or
mov
and
ret
inc
mov
add
inc
mov
ljmp
inc
dec
add
push
popf
stos
push
add
push
pushf
add
popa
or
int
mov
test
in
call
cltd
push
lods
in
xor
ret
mov
cmp
inc
lahf
mov
jne
stc
iret
mov
mov
es
lds
aas
lret
mov
cmp
xchg
mov
aas
add
xchg
jmp
loopne
xchg
push
mov
lea
fnstcw
add
pushf
xor
call
sbb
pop
stos
mov
popl
pminub
mov
push
aam
hlt
sbb
sub
das
inc
xchg
xchg
movsl
das
aad
mov
lds
bound
dec
enter
or
sti
xor
repz
pop
add
imul
jo
jns
imul
test
xor
out
add
lds
jg
ljmp
dec
or
dec
or
xchg
xchg
add
cmp
pop
cltd
insl
mov
rclb
ljmp
mov
mov
add
sub
je
in
mov
mov
incb
lods
not
int
xchg
add
jnp
sbb
cwtl
xor
add
imul
xor
imul
aas
aad
xor
in
inc
rcll
aaa
mov
mov
mov
xchg
jg
add
add
mov
es
sbb
ror
push
shl
xchg
sbb
inc
push
xor
test
pop
mov
repnz
cli
cli
fxch
jecxz
and
outsb
adc
out
cmp
add
cmpb
pop
leave
dec
pop
add
jl
rcl
stos
movsl
repz
sub
mov
imul
add
dec
add
mov
add
outsl
and
test
shlb
pop
daa
loop
fisubrl
lods
push
xchg
adc
fmuls
mov
pop
push
sbb
mov
add
rolb
jbe
push
add
pop
or
xor
mov
xor
add
js
loopne
dec
mov
push
aam
mov
jbe
jns
cwtl
std
cli
push
lods
inc
sub
call
jo
outsb
andl
or
pop
cld
mov
in
cwtl
pop
xchg
sbb
popf
in
lods
into
and
outsl
cmp
or
push
jge
mov
imulb
insb
test
add
pop
outsl
in
push
aaa
xlat
push
sti
lds
xor
add
imul
pusha
add
sub
nop
aas
pop
jae
and
sbb
inc
mov
cmp
cmp
push
pop
xchg
jg
int
push
aam
lea
sub
adc
jmp
jbe
dec
and
movsb
out
jns
xchg
push
pop
mov
jo
fsubrl
imul
and
dec
ficoml
or
jno
pop
inc
in
pop
add
cs
dec
add
stc
cmpsl
mov
andb
mov
cmp
mov
cmp
movsl
les
fistl
fmull
leave
jns
add
sbb
push
aas
adc
ljmp
aad
decl
mov
aaa
out
fs
out
incl
add
push
cld
imul
push
add
stos
cmc
jne
mov
mov
xor
movsb
mov
mov
pop
and
jmp
scas
sub
insl
xor
fmull
jns
imull
pop
or
mov
insb
cmc
mov
aad
xor
movsl
xchg
inc
dec
and
loopne
in
pushf
lods
dec
shl
lret
xchg
mov
xor
add
or
sub
pop
ret
mov
gs
test
popf
loope
sbb
lahf
dec
fs
bound
push
add
cmp
sbb
push
pop
out
xchg
sbb
sbb
pop
das
or
inc
xchg
lea
scas
jg
mov
addr16
xor
dec
dec
hlt
jp
lods
jae
rcrb
sbb
add
add
jae
movsl
adc
imul
jne
lods
mov
mov
push
lcall
orl
movb
ljmp
xorb
adc
gs
and
mov
and
jnp
push
xchg
icebp
push
dec
ss
add
xchg
and
shl
dec
inc
push
sub
jecxz
cmp
xor
add
enter
mov
jmp
out
pusha
add
cmp
fisttpll
sub
sarb
push
loope
int3
fimull
lcall
inc
cmpsl
sub
mov
push
xor
out
adc
sub
call
jo
mov
or
bound
scas
adc
mov
data16
mov
stos
lods
push
jno
sbb
mov
cmp
xor
pop
les
inc
add
faddp
mov
and
popa
movsl
mov
and
mov
jmp
stc
aam
stc
inc
push
xor
push
das
dec
add
imul
test
and
jge
and
cld
outsb
js
ret
imul
cwtl
je
bound
lea
out
lret
adc
mov
fcomps
shlb
mov
add
sub
dec
inc
std
rorb
insl
arpl
scas
pop
jns
dec
in
popf
add
inc
lahf
pusha
add
xchg
inc
movsl
push
aad
pop
int3
arpl
add
add
ja
add
sbb
stos
js
aam
sti
lcall
fisttpll
jne
inc
test
pop
sbb
inc
sbbb
mov
pusha
add
jnp
lcall
pop
mov
dec
add
lcall
add
lret
mov
add
mov
and
xor
jl
aaa
mov
movsl
jl
jle
jmp
xorl
xor
mov
mov
jecxz
pop
lds
aad
test
xchg
mov
bound
xchg
xor
stc
cmpsl
gs
movsb
testb
ja
mov
lock
lods
sarb
call
add
sbb
insb
call
inc
add
push
scas
scas
imull
in
inc
xchg
mov
aaa
js
or
and
test
movsb
je
pop
das
add
je
and
daa
adc
mov
add
imul
cmp
mov
sbb
dec
loop
add
xchg
jae
mov
adc
leave
xor
sbb
ret
movsl
inc
shrb
fidivrs
add
push
mov
in
jns
sub
movsd
xor
subl
test
or
mov
mov
add
add
xchg
in
mov
xor
cmpsl
hlt
jg
mov
dec
mov
and
js
and
push
test
jb
mov
dec
lock
adc
add
test
movsl
inc
aam
jg
inc
jg
int
daa
movsb
cmpsb
pushf
mov
xor
into
loopew
ja
add
mov
cmp
insb
cld
daa
dec
fcompl
jae
cwtl
xchg
insb
xchg
cs
and
xlat
xchg
xchg
sbb
hlt
inc
test
or
lea
and
add
sbb
ljmp
iret
push
add
pop
add
test
int
pop
sub
push
add
mov
leave
addr16
push
add
lods
daa
and
lcall
fisubrl
cmp
jl
aam
movsl
jg
or
or
add
push
mov
leave
repz
arpl
fstps
cmp
push
sbbb
xchg
add
or
loopne
jmp
cli
loopne
jp
adc
fs
xor
mov
inc
movsl
in
push
xchg
push
mov
frstor
roll
push
push
dec
aad
jp
js
lods
push
xchg
pop
xlat
cmp
imul
push
jns
or
daa
imul
push
rcr
hlt
dec
inc
movsl
call
aam
arpl
jae
cmpsb
andl
add
repz
in
jne
push
out
repz
out
pusha
add
sbb
fdivp
das
xchg
pop
popa
jb
mov
add
ss
or
clc
cld
mov
les
movsb
cmpb
xchg
sub
add
adc
add
repz
sub
cmp
ret
into
push
pop
or
add
mov
fnstsw
inc
add
sbb
int3
mov
test
sbb
cmp
dec
jge
pushf
jl
lods
dec
cltd
cli
popf
push
sbb
sbb
and
xor
jns
cmp
xor
or
or
fnsave
inc
subb
or
add
mov
dec
sbb
orb
into
sbb
mov
jo
adc
fmulp
xchg
xchg
push
rorb
test
enter
pop
xchg
pusha
add
push
loopne
cltd
xlat
out
jnp
jg
stos
out
xor
imul
push
push
in
add
fcomps
jecxz
scas
inc
iret
adc
testb
add
dec
add
mov
das
mov
roll
xchg
dec
sub
sub
testl
push
nop
cmp
repnz
nop
das
lret
aam
add
sahf
sbb
add
addl
inc
test
lock
add
cmp
out
add
out
movsl
in
in
rcl
inc
jae
mov
lcall
add
out
rcr
rcl
mov
xor
test
pop
cmp
xchg
insl
pop
dec
outsl
xor
out
sbb
jmp
add
setge
xor
lret
subb
sub
enter
cmc
arpl
arpl
jge
cmpl
and
add
mov
add
or
iret
mov
xor
ljmp
mov
add
mov
imul
add
popf
mov
subl
cmp
push
push
sti
imul
add
add
jge
sbb
movsl
js
iret
std
mov
nop
test
push
ss
not
adc
aas
shll
test
cmp
adc
mov
enter
aas
fsubrl
jge
jmp
arpl
pop
das
clc
test
cmc
sub
aas
fdivl
enter
in
sub
cmp
sbb
xchg
add
scas
pop
cmp
adcb
inc
out
cld
sub
add
push
xor
hlt
adc
fmul
ret
mov
repz
add
inc
pop
test
inc
sub
inc
add
pop
add
es
cmp
ret
shrb
lea
call
into
cmp
mov
push
scas
mov
sub
idiv
int3
pushf
loop
in
lds
aaa
xchg
lock
add
mov
jecxz
in
push
pop
cmp
push
inc
aad
add
jge
push
scas
jns
test
add
or
loopne
arpl
push
ljmp
repnz
shll
xchg
into
fdivrs
enter
call
mov
or
js
push
xchg
sbb
jae
xlat
inc
xor
jb
cmp
sahf
cmp
pop
xor
mov
cmc
psraw
arpl
xlat
aaa
lods
xchg
aaa
dec
jb
add
add
js
sub
inc
add
xchg
sub
jb
fcomp
push
add
inc
add
into
mov
fsts
mov
pusha
add
add
sti
movsl
pushf
fwait
push
xchg
push
jle
mov
test
xor
cmpl
and
and
dec
cmpsl
popf
cwtl
xor
pop
add
xchg
add
or
mov
push
shlb
rcll
mov
jne
in
cmp
push
xor
adc
or
ja
test
in
loopne
jo
jge
lock
das
pop
and
test
jmp
push
f2xm1
push
imul
or
and
in
add
jmp
xchg
and
dec
mov
fwait
mov
push
inc
filds
add
fs
push
repnz
dec
stos
cltd
icebp
hlt
icebp
jle
out
popa
in
sarb
dec
lret
ds
jns
fdivr
adcl
mov
loopne
lahf
pop
shrl
and
movlps
hlt
scas
dec
mov
icebp
xchg
add
add
jg
sub
movsb
sub
jae
notl
mov
call
std
sbb
mov
push
push
orb
add
sbb
shrl
jmp
loop
call
mov
jo
movsb
loopne
add
push
and
mov
push
je
pusha
add
sub
sbb
movsb
pop
sub
or
loopne
ror
ret
jp
inc
jns
sbb
fdivrp
fbld
daa
sub
cld
in
xchg
adc
shll
pop
push
aas
mov
adc
add
pop
shr
cmp
imul
adc
mov
cltd
fucom
mov
pusha
add
inc
push
and
inc
cmpsl
cmpsb
cmp
jne
add
addb
pop
push
add
mov
popa
sub
xchg
jno
mov
add
movsl
mov
sarl
xor
add
lods
mov
and
stos
mov
dec
ja
add
daa
xor
add
nop
rcrb
std
lock
add
jg
mov
inc
mov
pushf
loop
scas
lret
cmp
xchg
idivl
sub
sub
cmp
cmp
jge
incl
pusha
add
mov
pop
jne
popa
jge
add
pop
mov
add
push
int
leave
shrl
scas
mov
add
outsl
stos
fisttps
int
dec
and
push
cmp
das
gs
aam
jns
lcall
add
adc
mov
push
aam
mov
add
xchg
xchg
or
xchg
and
jmp
pop
push
push
jl
orb
add
pop
sub
pop
add
xchg
stc
ficoms
fdivrs
pop
mov
inc
cmp
jne
cli
jge
dec
out
adc
inc
and
cmp
ficompl
out
jns
out
sbb
lret
imul
adc
jbe
ds
inc
cmp
jae
arpl
call
dec
or
sahf
adc
sub
or
or
filds
pop
xchg
xchg
xchg
cmp
add
je
add
mov
ds
push
nop
daa
or
jae
nop
fmull
mov
js
es
mov
cli
pop
lcall
push
mov
not
loopne
xor
mov
mov
stos
arpl
mov
add
test
sbb
add
mov
je
sbb
negl
add
add
inc
inc
mov
out
aas
insb
ret
jmp
and
cmc
sbb
gs
sub
lds
jp
sbb
cmp
fwait
in
jae
add
xor
pop
push
andl
xchg
fnstenv
xchg
shll
pop
inc
mov
jp
push
mov
cmpsl
andl
push
inc
add
xor
fsubrs
lret
cwtl
cld
add
xchg
add
dec
mov
xchg
leave
cmc
ret
pop
push
mov
in
dec
mov
xor
add
add
dec
jo
push
mov
int
out
cmpsl
popa
push
adc
aaa
pop
jo
stc
hlt
cli
push
push
add
or
jnp
shr
mov
sbb
stc
aad
xchg
jle
sbb
orl
out
rcll
rcrl
or
cmc
and
stos
and
mov
add
xlat
icebp
xor
add
xchg
jb
stos
pop
push
int
pop
test
lods
add
nop
dec
sarl
add
pop
pop
push
mov
lahf
mov
leave
xchg
dec
add
and
push
movsb
mov
outsl
insl
ss
imull
in
fs
xor
gs
rcll
test
cmp
jo
aam
int
fadds
push
add
jb
jno
and
cmp
add
add
aas
cmp
mov
orb
xor
fidivrl
stos
lea
cmpb
dec
inc
push
push
sbb
cs
fisttpl
jae
pop
mov
mov
add
aam
adc
jge
je
mov
scas
pop
pop
in
add
and
aad
outsl
rcll
inc
sub
jne
shlb
cmc
mov
add
scas
cmp
mov
push
add
iret
push
in
popf
je
add
dec
in
dec
or
out
sbb
arpl
or
lds
xchg
or
or
cmp
pop
sbb
cmpsb
daa
icebp
cmp
jle
pop
and
xchg
push
jmp
scas
xchg
sbb
push
insl
movsl
mov
stos
loop
lcall
push
jae
into
out
jno
movsb
jo
xchg
stos
jge
int
sub
cs
push
add
jne
loop
nop
lret
jns
lods
inc
add
mov
cmc
inc
in
in
add
jg
add
add
outsb
outsb
adc
add
enter
pop
test
sub
adc
in
aas
jge
lock
popf
dec
jo
mov
xor
lods
gs
push
jg
xchg
fistpll
cmp
sub
push
fcmovb
adc
sbb
sub
arpl
shlb
mulb
das
mov
add
fidivl
popf
into
repnz
pusha
add
cli
cltd
dec
and
mov
js
pop
fsub
and
xchg
outsl
test
pop
cmp
and
addr16
add
jae
xchg
xor
dec
jnp
stos
pop
ja
mov
push
pop
lock
lea
fistpll
sbb
xor
mov
mov
mov
push
or
mov
adc
xchg
dec
jno
cmc
lock
push
pop
mov
pushf
lahf
jecxz
dec
add
jl
sbb
add
mov
idivl
dec
mov
adc
jmp
mov
in
inc
int3
fsubr
loop
add
xchg
ret
mov
cmpsb
popf
movsl
mov
fistl
divb
dec
loopne
repnz
aam
push
xchg
lods
lods
mov
jecxz
loop
ss
cld
cmc
push
ds
xor
imul
les
add
xchg
pop
loopne
ja
jecxz
add
add
add
jne
mov
mov
xor
fwait
sub
mov
es
test
outsb
shlb
andl
mov
jns
loope
icebp
add
int3
push
mov
lock
fisttpl
outsb
das
mov
inc
mov
xchg
js
imul
mov
pop
add
xchg
lcall
cmp
add
dec
adc
add
call
or
out
in
ja
or
jno
cmp
inc
insl
lahf
pop
rcl
inc
cli
ljmp
and
push
push
adc
cmp
scas
push
pop
add
mov
sub
subl
inc
subb
in
repnz
sbbb
sar
stos
outsl
movsl
xor
pusha
add
shrl
add
addl
sbb
mov
xchg
jle
sub
leave
fildll
aaa
stos
mov
imul
mov
int
cmp
das
repnz
jge
sti
inc
pop
dec
mov
in
iret
push
gs
ljmp
fildll
popa
jbe,pn
fsubrs
add
push
xor
cmc
les
clc
int3
push
mov
cwtl
xor
scas
jl
lahf
push
mov
insl
scas
movsb
icebp
push
test
jne
aas
pop
jo
mov
aas
push
push
lcall
xor
cmp
sbb
jno
lret
mov
aaa
sub
mov
add
adc
mov
inc
and
jne
inc
cltd
xchg
insl
mov
stc
inc
add
jne
mov
mov
xchg
sar
sub
out
insb
xchg
xor
sarb
popa
inc
testb
hlt
jne
xchg
sbb
mov
push
lcall
jg
dec
movsl
lods
dec
daa
mov
iret
xor
sub
jg
sbb
mov
jmp
int
inc
and
loop
mov
pop
mov
push
add
xchg
cmp
insl
fcompl
scas
adc
in
cmp
shr
mov
adc
xchg
mov
sbb
jmp
scas
fcmovb
dec
xlat
jmp
es
insl
dec
sub
sub
add
xchg
fdivs
xor
arpl
xchg
mov
mov
xchg
call
pop
mov
jl
sbb
cmc
cld
inc
sub
add
lret
add
jge
pop
sbb
pop
sub
loope
sub
dec
xor
mov
call
lods
iret
test
add
adc
push
add
jno
sbb
bound
adc
aad
dec
xchg
add
addr16
or
cld
adc
or
dec
std
ds
mov
xchg
aad
or
insb
jnp
testl
mov
pop
xchg
jns
sub
xor
push
mov
xchg
push
fistl
add
call
fistpl
mov
jns
xor
popf
pop
loopne
mov
insl
pop
lds
xchg
in
mov
nop
inc
in
xchg
xchg
sbb
sub
cmp
loopne
mov
js
inc
mov
aaa
inc
lods
int3
shrl
add
xchg
mov
xchg
inc
nop
rcrb
sbb
adc
aad
lret
pop
xchg
adc
pop
sbb
fstpt
sbb
popf
mov
xchg
ljmp
pop
jle
in
add
pop
mov
dec
loopne
push
ss
adc
ljmp
insl
dec
ficompl
loope
jle
fwait
jb
jmp
out
mov
loop
cmp
imul
jp
subl
mov
add
mov
ret
stos
hlt
fidivrl
cmpsl
or
jnp
stc
stos
jecxz
or
loopne
pop
add
in
add
xchg
scas
leave
lret
and
loope
lret
dec
add
mov
jmp
rorb
mov
insl
xor
adc
stos
mov
or
into
mov
sub
jo
push
add
add
ficoms
pop
inc
mov
add
cmc
sub
dec
add
or
inc
add
add
mov
in
push
cmp
and
push
mov
push
call
cmovne
fistl
mov
lods
mov
push
xchg
inc
out
xchg
daa
movl
adc
push
add
std
repnz
mov
jno
push
mov
push
iret
pop
adc
pop
push
icebp
xchg
test
pop
add
sub
jne
dec
mov
jge
jl
jge
sarl
hlt
insl
loop
jmp
push
or
jns
mov
sbb
subb
adc
adc
sub
mov
sti
mov
adc
xor
add
lock
nop
rclb
pop
xchg
sti
adc
dec
es
ret
rcl
mov
lods
ret
roll
mov
fsub
xchg
push
les
xor
xchg
int
aam
xchg
fwait
dec
inc
dec
test
shlb
popf
pusha
add
adc
mov
cltd
testb
or
out
add
les
add
mov
daa
rolb
push
aam
push
rol
mov
jmp
jb
das
call
mov
or
sub
sbb
sbb
mov
add
paddq
add
adc
movsb
xor
adc
jnp
pushf
push
and
lret
mov
pop
or
and
add
lret
cmp
mov
fsubr
lock
jno
add
out
cmp
sbb
nop
pop
or
jae
sbbb
add
dec
int
mov
jmp
push
push
xchg
add
add
js
lods
insb
cmc
stos
inc
addb
push
lret
jb
imul
inc
xorl
div
xchg
jle
pop
add
sub
outsl
mov
popf
loopne
icebp
jl
lock
xchg
mov
popa
inc
dec
in
sahf
cmp
loop
fcoms
push
adc
mov
out
jnp
inc
add
jge
mov
add
mov
push
add
adc
test
dec
imul
push
mov
add
mov
pusha
add
lahf
push
loopne
je
cmpsl
or
dec
stos
in
pop
movsb
mov
cmpsb
inc
pop
setg
xor
test
std
fimuls
jecxz
mov
mov
xor
imul
repnz
adc
xorl
and
imulb
outsb
aam
inc
outsl
pop
xchg
xchg
addr16
mov
mov
or
mov
xor
pop
sbb
add
pop
mov
in
jbe
lods
sbb
and
xor
fdivrl
stc
jb
push
scas
test
push
cwtl
popl
dec
jge
insl
das
and
scas
push
push
or
jle
leave
sbb
movsb
mov
mov
adc
jno
lea
cld
sarb
add
insl
cmpsl
xor
mov
stos
add
jno
ds
mov
pusha
add
das
lret
jnp
addl
orl
jnp
push
push
scas
and
jle
pop
jnp
lcall
js
pushf
adc
ja
push
push
inc
add
pop
xlat
rcrl
jmp
cmp
imul
lcall
gs
out
leave
in
adc
mov
push
cmpsb
mov
outsb
fldln2
sti
ror
test
addb
xor
adc
out
repnz
push
cld
cmp
sbb
cwtl
enter
out
add
push
jg
pop
rcrb
lahf
shr
ljmp
test
call
push
pop
add
lods
repz
testl
cvttps2pi
aaa
inc
sub
out
add
lea
add
dec
mov
mov
xor
or
mov
into
and
cli
fiadds
or
sub
das
sarl
xchg
daa
bound
cmc
arpl
jbe
pop
daa
ja
pop
fists
inc
add
add
add
mov
data16
jbe
shr
pop
ljmp
inc
push
add
lods
cltd
mov
fildll
pop
inc
or
ljmp
lret
into
stos
mov
mov
aad
test
out
ss
hlt
sbb
sarb
arpl
cld
out
rcll
ljmp
nop
dec
add
sbb
xor
pop
fldt
push
mov
push
in
jg
jecxz
ds
fstp
push
movsb
fucomi
sbb
dec
std
sbb
rorl
cwtl
out
jecxz
add
into
push
cltd
mov
mov
pop
lock
mov
adc
pusha
add
leave
dec
lock
xchg
je
jnp
pop
icebp
xor
jge
and
push
aas
mov
add
or
mov
pop
xchg
rcl
jp
lea
fiaddl
add
pop
push
in
mov
ljmp
sbb
mov
add
mov
leave
dec
add
pop
aaa
sub
push
das
aas
shll
rorb
bound
push
dec
out
xchg
scas
dec
inc
aad
insl
xchg
inc
sub
sti
jno
mov
mov
je
out
xlat
mov
in
add
jecxz
icebp
cmp
or
or
add
icebp
out
xor
sub
in
fwait
mov
xchg
adc
fwait
mov
fucomp
pop
pop
add
dec
pop
mov
push
loopne
inc
fldl
in
pop
repnz
int
in
push
mov
lahf
imul
jge
push
adc
xchg
jnp
into
jbe
add
pop
xlat
pop
test
pusha
add
ds
lahf
sbb
repnz
loopne
jmp
in
ret
add
bound
push
xor
fwait
pop
sub
mov
or
outsb
aas
mov
lcall
mov
push
jb
xlat
push
mov
ss
xor
cs
jge
add
cmp
test
cmp
xor
xor
inc
idiv
test
add
lock
pop
push
cli
cmp
not
sbb
jmp
dec
push
iret
dec
mov
add
fisubl
add
jp
and
into
sbb
ds
xchg
mov
jnp
or
or
mov
out
cmp
add
xchg
xchg
mov
rcrl
stc
xlat
inc
add
mov
add
and
dec
cltd
jnp
das
adc
xor
repz
aam
mov
jmp
mov
push
negb
test
cmp
fidivl
push
rclb
and
add
rep
out
pop
fsubrs
movsl
aaa
and
out
sub
xor
dec
inc
inc
jns
pop
leave
ficomps
mov
cmpsb
jle
out
inc
add
jne
outsb
mov
lock
add
and
mov
inc
cmp
jns
xor
mov
outsl
fsubrl
pop
scas
sub
int
xor
jb
sbb
or
aam
pop
ss
pop
mov
fwait
shl
and
xor
andl
nop
aam
jmp
lret
test
inc
xchg
add
pop
sub
out
cli
popf
jle
data16
das
xor
insl
jle
jns
push
mov
adc
loop
add
adc
inc
scas
adc
dec
out
xor
inc
mov
je
mov
fsubl
ret
fstl
bound
dec
add
inc
add
rcrl
pop
andl
addr16
mov
add
adc
sti
movsl
lock
jno
push
add
fdivr
sbb
pop
addb
pop
icebp
ds
cmp
mov
add
jge
sbb
jl
inc
xorl
ja
scas
call
arpl
mov
sarl
cmp
lcall
es
xchg
xchg
aad
mov
sbb
pop
push
in
xor
jo
xchg
pusha
add
pop
bound
cltd
add
jbe
push
aad
inc
rcr
xor
test
test
mov
mov
mov
pop
sub
add
mov
sbb
xchg
sbb
fldenv
add
mov
sub
repz
xor
fistpll
test
fistpl
shlb
jne
in
out
test
or
test
scas
ret
mov
add
mov
mov
mov
mov
lahf
pusha
add
pushw
fs
add
add
xchg
or
imull
sbb
mov
ret
insb
ljmp
xchg
jo
add
dec
cmp
data16
lea
dec
sub
adc
xchg
daa
insl
dec
add
mov
ret
cmp
cltd
inc
lods
sti
sub
movsl
inc
add
jno
push
add
mov
ss
sbb
cmp
jmp
add
addb
mov
push
or
jno
xor
fst
sbb
cltd
out
testl
sbb
daa
pop
add
rcrb
xchg
daa
insb
aaa
or
xchg
lret
lock
loopne
adc
mov
pop
or
mov
inc
lcall
lods
adc
jge
sub
rcrb
test
pop
mov
xchg
lods
inc
cmpsl
fisttpl
xor
sahf
icebp
pop
add
repz
mov
loope
pusha
add
add
xor
jne
out
cmp
mov
repz
jmp
jo
xor
xchg
xchg
in
lods
or
js
filds
cmp
xor
movsl
push
andb
jge
int
jmp
test
cli
jecxz
aad
sub
inc
or
outsl
adc
scas
iret
test
add
add
loopne
das
cmp
sti
adc
aaa
in
jno
out
push
cs
sbb
fdivp
test
xchg
les
xchg
pop
cmc
sub
xchg
aas
mov
mov
jae
cld
xchg
mov
add
xlat
test
in
sub
in
lahf
int
mov
cld
testl
dec
stos
out
icebp
jle
cltd
xor
xor
mov
int3
add
stc
insb
push
jb
jno
sbb
xor
dec
int
push
mov
loope
out
add
sub
inc
mov
shrl
add
icebp
mov
mov
and
cmp
lds
mov
pop
clc
lock
jbe
rcll
lahf
das
out
add
imul
orb
cmpsb
xchg
fst
xor
add
xchg
fs
in
and
inc
adc
pop
add
in
or
rcl
add
mov
push
jmp
inc
mov
scas
call
cmp
ds
pushl
adc
mov
add
cmpsb
dec
orb
and
or
add
mov
cli
faddl
jb
fadd
inc
not
ss
fnop
mull
repz
xor
fcomp
scas
jns
jne
pushf
icebp
shl
jge
out
imul
cmc
or
push
arpl
and
push
add
jmp
mov
nop
xor
add
dec
sbb
mov
jno
add
aas
sub
pushf
adc
mov
push
pop
jle,pt
in
push
fs
xchg
jg
xchg
jecxz
mov
or
mov
sub
mov
inc
xlat
xchg
inc
es
leave
xchg
xor
xor
enter
sub
shlb
fiadds
add
mov
jmp
iret
jb
in
ja
sub
stc
mov
add
stos
inc
push
xor
and
or
jne
insb
repz
jnp
rcrl
push
daa
stos
mov
and
dec
mov
mov
daa
and
jo
ret
sub
add
jmp
jmp
iret
xchg
js
lods
pop
fsubrl
enter
cltd
add
xor
in
std
sbb
ja
jnp
gs
fwait
inc
call
xchg
jge
fs
sbb
filds
add
popf
lcall
stos
mov
scas
jno
icebp
jnp
add
add
fists
insl
mov
push
dec
add
hlt
js
mov
popa
cmp
sbb
ljmp
pop
imul
push
add
scas
scas
push
fwait
push
shll
sub
or
mov
or
add
sub
pushf
sti
aad
pop
cli
inc
nop
ret
push
cli
out
ss
sub
addr16
sbb
divl
lods
mov
leave
xor
fldl
xor
dec
jecxz
cmp
outsl
mov
push
in
adc
xor
xchg
or
in
jg
add
cmp
or
xor
inc
add
lods
sub
xor
mov
fcoml
xchg
cmp
int3
scas
cmp
je
jnp
xor
ud0
loopne
cmp
fistl
fs
dec
push
fcomi
repz
dec
add
mov
addr16
icebp
sar
xchg
call
ficomps
or
jb
adc
jge
xchg
and
std
cmpsb
xchg
pop
cmpl
loopne
shr
shl
sub
pushf
cmp
adc
add
cmp
pop
sub
or
mov
aad
add
int3
jae
add
xchg
pop
pop
sbb
repz
and
add
push
or
ffree
imul
add
push
mov
and
out
inc
in
int
cmp
push
or
or
outsl
ret
stos
in
stos
aad
add
add
add
lcall
pop
xlat
filds
push
ja
pop
or
mov
sbb
dec
outsb
scas
xchg
loop
cmp
test
or
or
adc
mov
push
or
decb
add
add
add
jp
int3
shll
adc
push
pushl
add
inc
addr16
dec
fiadds
pop
push
test
mov
pop
dec
xchg
iret
into
test
insb
cmp
and
jno
xchg
jmp
in
xor
mov
inc
push
xlat
push
cmp
jno
pop
add
in
and
pusha
add
loope
add
add
cmpsb
hlt
clc
push
push
dec
sbb
dec
adc
test
cmp
xchg
test
adc
imul
loope
cwtl
stos
mov
loop
or
pop
pop
std
aaa
adc
sub
imul
ret
dec
cmpb
cmpsb
xchg
enter
cmpsb
cmp
cmpsl
lret
fcom
mov
in
adc
inc
add
mov
jp
jle
add
xchg
int
adc
popf
pop
add
lods
ja
cltd
add
or
add
sti
scas
movsb
mov
in
fcoms
inc
push
loopne
xor
iret
out
sbbb
aad
mov
in
adc
je
cmp
popa
fsubrs
add
ret
jle
pop
insl
repnz
test
inc
in
inc
add
cmp
sbb
movb
int
pop
pop
in
jae
mov
mov
fadds
xorl
jbe
jmp
add
cld
pop
jno
add
jns
adc
in
sub
out
sbb
jp
add
ficompl
sahf
fisubl
sbb
mov
repnz
nop
les
cld
inc
insb
dec
pop
addr16
sbb
es
mov
int
ret
and
dec
arpl
push
jo
pop
add
mov
mov
loop
adc
fstl
pop
sbb
add
sti
mov
jp
in
sbb
rcrb
arpl
sub
cltd
pop
shll
pop
andl
add
jmp
lea
mov
stos
fidivl
mov
mov
nop
pop
adc
movsl
jp
subl
test
enter
mov
repz
mov
mul
jne
clc
lds
popf
push
lea
ret
mov
add
lret
js
nop
jmp
add
and
xor
cmpl
adc
std
fiaddl
add
fimull
sarb
ss
and
jno
push
xchg
jno
add
inc
dec
arpl
lods
jns
ret
cmpsb
test
pusha
add
shlb
pushl
pop
int
sbb
jg
xchg
and
or
into
mov
add
aas
fistl
push
xor
mov
fiadds
fisubrs
ljmp
dec
add
cmp
fdivrs
add
negb
add
out
and
jo
mov
push
inc
arpl
in
adc
xor
mov
inc
jl
jb
and
xor
push
push
cmc
mov
ja
test
xchg
jbe
jmp
les
mov
cmpsb
sbb
mov
cld
mov
sub
imul
add
mov
xor
adc
stc
xlat
lea
rcrb
push
mov
mov
add
inc
xchg
imul
mov
pop
movsb
dec
add
setne
sbb
cmpsl
push
nop
stos
mov
roll
int3
cmp
aaa
adc
and
inc
lods
inc
inc
mov
dec
aaa
aam
int
dec
mov
scas
xor
cs
fs
std
dec
loope
lahf
push
inc
fcompl
mov
outsb
aad
pop
cmp
sbb
in
sub
daa
xchg
add
fiadds
repnz
fldt
add
mov
bound
fists
mov
inc
dec
mov
mov
mov
loop
inc
inc
cmp
mov
cmp
jge
pop
xor
xor
repnz
sub
add
cmp
not
and
js
mov
add
mov
push
lcall
xchg
adc
adc
mov
mov
cmpsb
adc
cli
jb
xchg
mov
add
ja
jg
call
push
sbb
sub
mov
pusha
add
jbe
xchg
mov
mov
dec
inc
mov
sahf
dec
sahf
adc
imul
xchg
xor
ds
cmp
xchg
fisttpll
je
negl
push
jle
out
movsl
scas
movsb
cmp
dec
fnstsw
or
xor
lea
jg
and
push
aaa
mov
icebp
mov
add
out
xchg
subb
fisttpll
imul
in
cmpsb
rcl
call
rol
shrl
rcl
rorl
adc
mov
enter
push
pop
push
rcrb
sahf
dec
pop
and
add
jnp
pop
dec
add
inc
adc
xor
xchg
lea
loope
or
xor
pushf
sbb
fwait
lock
int3
clc
mov
fidivs
adc
xchg
add
add
or
cmp
add
jmp
inc
inc
fwait
or
push
add
js
pop
pop
xor
fmul
or
mov
mov
xchg
inc
jae
add
ret
shr
into
inc
aas
or
ret
test
or
fidivrs
sbb
xor
test
pop
fs
add
mov
xor
push
push
or
aaa
pop
test
int3
nop
jae
add
jae
or
dec
negl
mov
es
out
divl
xchg
test
and
mov
fstl
push
outsl
mov
loope
ljmp
flds
outsl
jns
addr16
sub
nop
sbb
jg
test
mov
sub
push
add
repnz
jge
ss
notl
out
push
pop
ljmp
cmp
loop
ja
xor
mov
out
dec
push
add
mov
pop
jnp
sbbb
movsb
push
add
inc
add
ds
pop
scas
pop
test
out
inc
sbb
scas
mov
dec
xchg
inc
enter
outsl
sbb
add
xchg
arpl
filds
test
fstl
xchg
add
jb
jg
add
or
jl
inc
mov
add
cld
ficompl
add
or
dec
push
stos
push
inc
sub
cmc
lds
or
test
pop
cmpsl
or
test
jecxz
pop
push
pop
movsb
loopne
repz
add
mov
stos
sub
into
scas
cmp
cs
lcall
mov
cmp
mov
cmp
inc
mov
add
pushf
pop
enter
mov
sub
xchg
roll
add
dec
sarl
jecxz
dec
cwtl
cmpsb
pop
inc
mov
stos
into
or
jge
std
adc
add
outsl
aam
adc
inc
stos
dec
stos
ret
inc
lcall
lods
cltd
jmp
jle
ljmp
add
pusha
add
std
or
clc
cmp
test
cmp
mov
and
repz
das
inc
add
inc
mov
in
outsl
mov
add
lcall
stos
lods
pop
xor
in
shll
adc
mov
cwtl
xlat
into
data16
cmpl
and
cmpsb
ret
adc
cmp
enter
cmpsl
test
fildll
out
rorb
cld
out
lret
stos
popa
in
mov
fwait
xor
gs
mov
mov
adc
add
jne
insb
outsb
mov
xor
repz
stos
hlt
test
ja
sub
mov
fildll
das
insb
fstpt
inc
loopne
fldenv
cmp
fimull
inc
ret
mov
out
test
xchg
mov
andl
jl
add
add
xchg
sub
pushf
cmp
mov
clc
cli
scas
aaa
cmpsb
jmp
add
mov
adcl
push
inc
mov
add
arpl
loope
pop
add
push
shll
mov
out
mov
dec
sub
lea
insl
or
lret
mov
fidivrl
add
mov
xchg
adc
xchg
jno
cmp
testl
mov
sub
ljmp
std
pop
das
and
scas
loope
sbb
cmp
stos
sti
bound
mov
imul
je
jb
add
out
mov
sub
notb
jmp
mov
jb
sub
out
nop
stc
or
inc
sub
adc
pop
push
add
hlt
sti
inc
lods
nop
out
sbb
and
lret
in
cld
dec
mov
repnz
leave
sbb
inc
aas
imul
push
jmp
add
push
les
xor
sbb
lock
out
mov
sub
cld
pop
lods
and
pop
push
pop
out
pop
mov
lea
pop
add
mov
lret
ljmp
push
add
add
leave
cmpsb
xchg
ja
ficompl
push
sub
mov
and
loop
lea
in
cmc
push
scas
fnop
or
dec
mov
xchg
pushw
jae
xchg
repnz
shll
dec
add
popf
mov
mov
shlb
daa
adc
push
add
fs
inc
mov
clc
into
jo
sub
add
push
add
cmp
mov
cli
add
add
mov
addl
jp
test
inc
scas
in
inc
xchg
cs
testb
mov
jmp
fildll
test
jge
push
cmc
jno
add
ret
je
pop
imull
cli
mov
lcall
add
out
pop
xchg
jecxz
jmp
and
pop
push
jnp
cmp
pop
int
mov
cld
lcall
es
shr
lock
inc
pop
cmpsb
xchg
mov
ret
fcmovnbe
fiaddl
popf
or
xor
imul
xlat
push
and
ficoml
cmc
cwtl
push
adc
mov
ljmp
pop
mov
push
push
or
add
add
jl
stc
mov
mov
xor
xor
imul
inc
inc
in
pop
mov
mov
add
test
mov
pop
or
or
mov
cmp
cmp
int
aaa
or
adc
das
pop
inc
jb
jle
dec
add
and
pop
jge
add
jne
popa
data16
ja
mov
cltd
cmp
add
dec
add
out
mov
xchg
push
loopne
add
std
stc
or
mov
lods
icebp
in
cmp
xor
lret
push
add
movl
aad
mov
sti
mov
sbb
lock
add
loope
push
fisttpll
movsb
mov
adc
in
cltd
inc
add
aaa
jae
sbb
neg
cmp
loope
aam
cwtl
imul
cmp
add
add
ja
cmc
xor
orps
sbb
pop
sbb
outsb
and
add
lcall
cs
lock
adc
cmp
sub
push
pushf
xchg
xchg
ficomps
add
test
adc
or
push
mov
and
cmp
add
sbbb
mov
addr16
loope
sub
sti
pop
ror
push
cld
and
and
jle
mov
stos
cmp
imul
rorl
ret
add
inc
add
jg
add
popa
fsts
or
mov
mov
test
jge
mov
dec
test
xlat
mov
stc
and
js
pop
mov
mov
add
add
jecxz
popf
aad
fdivrl
js
iret
xchg
add
les
movsl
jne
cmc
cmpsb
jecxz
mov
mov
inc
or
aas
pop
dec
or
sub
lret
out
pop
sub
xor
dec
add
xchg
popa
jns
add
lea
and
xor
rolb
add
repz
or
adc
sub
sbb
jle
inc
mov
cld
into
mov
pop
cmpsl
sub
es
idivl
enter
lods
lea
add
pop
das
jne
stc
sbb
aad
or
dec
mov
cs
aaa
cmp
xor
cmp
and
jge
cmp
out
xchg
pop
ss
cmp
sbb
imul
mov
mov
test
push
pop
push
push
movsb
adc
inc
xchg
push
adc
test
mov
pop
lods
mov
outsl
leave
inc
add
lods
pop
lea
inc
add
arpl
fldl
pop
mov
cmpsl
shll
add
push
sar
cld
out
dec
mov
arpl
scas
ljmp
jnp
lcall
add
or
dec
lea
add
aaa
lea
lea
rcrb
cmp
mov
movsl
frstor
xchg
sahf
inc
or
test
frstor
jnp
imul
pop
out
or
ds
hlt
cmp
lret
into
jns
push
mov
das
xchg
push
jle
das
in
add
dec
scas
mov
pusha
add
jnp
bound
sahf
daa
repz
mov
jno
add
sub
dec
mov
xchg
pop
shrb
add
sbb
paddsb
je
das
sub
jecxz
jl
scas
cmp
pop
jg
xor
add
repnz
add
pop
imul
lret
jge
mov
mov
stos
cs
pushl
add
popa
in
cs
mov
adc
xor
push
fsubr
mov
stos
or
or
and
add
in
pop
add
mov
or
popa
jns
or
mov
xor
ds
inc
out
cmp
inc
dec
add
dec
sbb
data16
xchg
sub
adc
int
jbe
jmp
push
cs
cmp
das
cltd
cmp
pop
or
push
sbb
out
test
shrl
adc
enter
test
mov
ss
testb
sahf
add
cmpsb
clc
and
lahf
fs
add
ret
adc
cmp
cmp
cmpsb
or
in
push
or
sbb
dec
adc
pop
and
inc
punpckhwd
dec
add
add
inc
add
push
add
xlat
inc
dec
daa
and
scas
loope
add
mov
subb
jp
pop
loopne
push
data16
pop
mov
icebp
mov
jns
fdivs
add
push
ret
rcrl
mov
loopne
xchg
cltd
mov
or
xchg
mov
mov
inc
sbb
cmp
and
incb
sub
rcr
mov
and
mov
rcr
cwtl
iret
and
sbb
xchg
cmp
mov
adc
in
push
pop
stos
in
out
imul
cmp
push
xchg
push
push
wrmsr
add
fwait
and
push
dec
add
mov
push
in
pop
out
scas
jo
cmpsl
test
notb
add
call
inc
imul
xor
daa
loope
mov
ret
xchg
adc
imul
push
add
outsb
fdivl
push
xor
add
add
add
xor
sub
cmp
dec
dec
decl
jnp
mov
mov
cmp
loopne,pt
notb
push
cmp
push
xor
mov
inc
and
push
into
test
xchg
mov
enter
jo
or
adc
cmp
push
out
sub
arpl
xor
dec
xlat
roll
aam
add
inc
dec
xchg
mov
inc
in
mov
mov
push
pop
imul
mov
xor
cmc
pop
sub
add
in
dec
adc
fisttps
push
push
inc
dec
adc
aam
or
fdivs
std
test
sub
pop
lcall
mov
add
add
inc
bsr
xchg
arpl
push
call
sub
fcmovnb
and
add
aad
stos
cltd
add
shll
add
mov
dec
ds
mov
out
dec
lods
insl
pushf
dec
leave
pushf
and
je
add
popl
out
push
mov
jmp
inc
pop
lret
fsubs
repnz
mov
mov
fcomi
stos
les
int3
pop
insb
xchg
mov
in
cmc
xor
add
or
mov
push
inc
push
push
push
int3
jge
ret
jns
cltd
or
jno
pop
stos
sbb
add
repz
jle
jmp
ret
inc
xor
jmp
xchg
mov
xor
aad
add
jmp
mov
mov
subl
aam
gs
sbb
clc
fwait
xor
roll
in
repz
mov
pop
sub
cli
fcomps
jecxz
div
jmp
xchg
and
inc
mov
xor
dec
fidivs
lcall
rclb
mov
cltd
push
ror
hlt
jge
jge
xchg
insb
sbbb
stos
pop
push
xchg
pop
test
loop
mov
scas
xchg
icebp
daa
imul
iret
jno
subb
add
push
in
add
jae
ret
mov
jne
icebp
std
pop
add
add
addps
mov
insl
mov
mov
pop
push
jmp
cmp
or
xor
or
xorb
mov
lret
in
dec
les
xchg
loope
je
jl
sbb
and
dec
add
mov
repz
daa
push
loopne
add
aad
pop
add
and
outsl
je
push
lods
insb
shll
add
push
lret
add
ret
xor
sbb
int
mov
loopne
jl
dec
mov
xchg
inc
add
sub
sub
xchg
xor
ljmp
cli
test
and
add
mov
leave
pop
fwait
rorb
jmp
add
mov
cli
cmpsl
push
inc
mov
es
test
jo
stos
rcrl
xchg
xchg
add
inc
mov
sahf
rcrl
adc
int3
pop
mov
jne
dec
test
out
daa
xor
mov
add
cmp
adc
add
push
add
xchg
dec
in
push
mov
pop
outsl
test
jmp
test
add
mov
loop
or
stos
fnsave
mov
push
sarb
push
sub
cmp
xchg
fimuls
dec
pop
add
cmp
mov
orb
add
adc
ror
iret
add
pop
add
leave
or
fs
hlt
ss
mov
dec
pop
adc
add
loop
add
je
arpl
test
pop
pushf
or
dec
jp
outsl
lcall
xor
xlat
inc
add
fidivs
popf
xlat
and
ret
xor
or
lret
mov
add
lret
cmpl
jg
pushf
xor
imul
jp
jo
or
or
cmp
jle
shll
add
or
xor
mov
xor
xor
mov
iret
lock
mov
mov
xchg
push
icebp
jbe
jo
mov
in
pop
inc
fists
jne
xor
test
xor
add
mov
push
je
xorl
out
jp
mov
inc
add
sub
xchg
test
inc
and
xchg
jbe
add
clc
test
ljmp
out
sub
lcall
out
xor
dec
inc
cld
sbb
sub
add
lret
push
lret
test
sub
pop
repnz
and
jbe
xchg
sbb
xchg
addr16
scas
out
frstor
add
jb
and
inc
push
inc
push
sbb
jmp
iret
aam
lea
add
rcrb
add
cltd
ret
and
popa
sar
fbld
test
call
add
andl
and
xchg
scas
sub
dec
push
mov
sahf
push
add
cmc
addb
cmpsl
jecxz
mov
xor
out
out
dec
mov
pusha
add
jmp
sub
fs
adcb
mov
dec
and
and
fmul
sbb
mulb
cmp
nop
sub
roll
lods
dec
mov
adcb
movsl
mov
add
push
and
andb
sub
jb
mov
leave
mov
or
add
pop
repnz
mov
int
filds
or
jg
lock
and
jo
push
xor
add
popl
xor
add
inc
mov
push
in
mov
test
pop
add
imul
pop
in
testb
adc
mov
out
lcall
add
add
je
std
repnz
icebp
or
and
or
push
push
push
push
add
aad
add
mov
jge
aas
cli
xchg
xchg
lds
es
ljmp
sub
cmp
outsl
sti
cmp
mov
mov
mov
les
out
dec
mov
cwtl
xchg
cmpsl
inc
add
jns
cmpsl
sarl
inc
arpl
movsl
or
negb
sub
push
jg
mov
or
scas
inc
fmulp
cmpsl
rcll
jns
inc
add
ret
push
aaa
cmp
jae
stc
aas
icebp
std
lods
ss
lea
push
push
ror
xchg
pushf
pusha
add
dec
lods
outsl
and
xor
pop
push
push
or
movsl
pop
adc
mov
repnz
push
push
add
xor
pop
mov
movsb
jae
mov
inc
or
sub
les
fcomps
sbb
mov
lahf
add
add
test
mov
jb
popa
xchg
push
inc
fdivr
shrd
dec
aam
pop
add
data16
mov
xchg
sbb
aaa
sub
test
repz
cli
pop
add
sub
and
pop
mov
popf
sbb
xor
xor
stos
fdivrl
sub
data16
xor
ljmp
ret
push
xor
xchg
faddl
cwtl
cli
repz
shl
pop
lods
aam
add
jnp
fisttps
dec
xor
sarl
add
nop
cwtl
adc
sbbb
push
add
mov
hlt
outsb
inc
add
or
pop
pop
lock
inc
add
and
xchg
adc
push
jae
add
mov
dec
adc
inc
loop
sbb
in
cmp
add
cld
mov
mov
inc
add
les
and
jg
cmp
push
or
mov
push
or
popa
jl
push
mov
lods
outsb
fidivl
push
pop
push
je
mov
cmp
pop
iret
test
or
sub
xchg
mov
add
rorb
add
mov
mov
out
int3
stc
cmpsl
cwtl
adc
jno
add
test
push
outsb
add
shlb
mov
out
stos
aad
subb
lret
scas
mov
lahf
sbb
test
ds
leave
pushf
mov
add
das
mov
mov
popf
sahf
push
pop
xchg
dec
dec
cmp
cmpsl
ret
sub
sub
add
stos
test
enter
xor
call
scas
scas
and
inc
pusha
add
rorl
jp
and
adc
mov
mull
int
in
clc
call
mov
or
sub
push
aas
ja
and
cmp
mov
enter
test
add
out
xchg
out
pop
xchg
fsts
ljmp
jns
xor
inc
jp
sbb
pushf
test
jmp
outsb
aas
loopne
popf
jns
xor
rorb
mov
pop
stos
and
and
sti
popf
das
mov
iret
cld
js
xchg
push
sbb
orb
dec
pop
fwait
fwait
adc
je
scas
dec
rolb
add
cmp
stos
add
dec
movsb
bsr
push
clc
lods
jmp
adc
add
filds
xor
add
mov
pop
les
scas
and
xchg
mov
es
scas
pop
cmp
cmpsb
lcall
ja
in
into
or
into
xor
add
ss
sbb
mov
movsb
pop
mov
mov
int3
dec
test
jno
lret
xchg
roll
nop
inc
cmpsl
inc
iret
push
js
jmp
mov
test
xor
inc
into
push
add
cmp
lods
out
lds
lods
enter
mov
int
adc
add
or
cld
xor
jo
jl
jbe
and
jne
fstl
rcll
lahf
mov
push
jno
das
imul
ljmp
mov
and
cmpsb
fldenv
add
fisubrl
call
inc
mov
push
adcl
xchg
arpl
lods
popa
pop
in
adc
or
inc
pop
imul
imul
std
adc
das
xchg
or
cli
cld
cmp
ds
xor
xor
cmp
cmp
or
cmp
addr16
inc
mov
daa
add
mov
rcl
dec
add
aad
fnsave
add
xchg
cmp
add
sub
mov
adc
xlat
jmp
popa
in
add
leave
leave
add
xor
sbb
jb
xchg
shr
adc
sbb
and
ret
fnstenv
filds
xchg
sbb
add
aas
mov
lea
fists
adc
add
add
mov
add
or
pop
daa
inc
add
mov
jb
or
xor
lods
adc
gs
sub
fs
and
imul
inc
into
das
or
nop
mov
or
aaa
xchg
sbb
pop
pop
add
jae
xchg
inc
lods
xor
dec
lret
inc
adc
sbb
xor
sub
dec
add
add
jo
jge
or
mov
push
test
into
cli
xor
movsl
jp
cmp
mov
add
shl
cmpsl
sub
hlt
sbb
pop
adc
xchg
cmp
cmp
xchg
mov
xor
mov
add
push
hlt
fnstsw
mov
fisubrs
mov
lea
xor
inc
cmp
dec
popf
add
fcoml
add
orb
mov
add
pop
xchg
sbb
sub
loope
mov
insb
repnz
add
adc
pop
mov
jecxz
xchg
mov
out
xor
lret
ja
and
gs
xchg
fildll
roll
jo
xor
mov
fwait
push
or
add
xchg
aam
jg
xor
adc
inc
dec
jg
es
dec
inc
std
mov
cs
xor
lahf
icebp
je
jge
dec
addr16
imul
mov
push
push
or
mov
push
push
push
aaa
fwait
cmp
jge
cwtl
jno
pop
cmpb
add
outsl
and
push
fmul
mov
xchg
and
daa
lret
mov
jp
int3
lret
push
pop
jne
das
push
adc
xor
add
dec
xor
inc
mov
jp
scas
xchg
dec
add
shll
add
sbb
sbb
cmp
xchg
sub
inc
pop
and
jge
ljmp
jg
aad
rorl
pop
outsl
xorb
aam
sbb
aas
and
addl
sbb
add
mov
mov
add
inc
sbbb
add
cmp
mov
mov
jmp
add
add
mov
push
int3
cmc
cmpsl
push
loop
rclb
in
out
add
xchg
or
icebp
popf
push
push
xchg
int
nop
adcb
cmp
lods
test
insb
cmp
push
sub
fidivrl
movsl
loop
adc
sbb
add
lods
mov
dec
stos
inc
mov
mov
add
jns
rorb
stos
scas
mov
test
cli
add
sbb
add
mov
sbb
ss
and
outsl
popf
outsb
call
pop
cli
dec
add
inc
add
out
stos
cltd
lret
or
int3
pop
imul
push
arpl
loope
or
inc
int3
aas
or
and
push
pushf
mov
inc
cmpsb
mov
outsl
fcoml
and
aam
cmpb
sahf
push
mov
lock
xchg
cmp
stos
inc
mov
idiv
pop
pop
or
jp
imul
lret
jle
and
cmp
loopne
add
mov
jmp
add
cmp
clc
or
jae
pop
rcrl
ljmp
cmp
add
mov
fldt
dec
mov
mov
add
add
popf
cltd
leave
push
add
mov
add
pop
fidivs
cmp
insl
dec
cmp
or
add
ljmp
mov
loopne
or
or
sub
adc
push
outsb
push
and
pushf
stos
jo
ret
bound
fs
dec
outsb
mov
cli
outsb
sub
mov
add
mov
adc
cmp
inc
int
add
cli
inc
popa
bound
ret
fsts
adc
negl
mull
test
push
xchg
cmp
add
sbb
mov
xchg
rorb
fisubrl
sbbb
sar
in
pusha
add
cmp
inc
popa
call
scas
test
mov
xchg
nop
rclb
fsubrl
loope
or
iret
xor
push
mov
pushf
int
mov
or
insb
in
aaa
push
or
mov
inc
loopne
push
adc
lahf
daa
mov
ret
stos
fisubs
test
jno
and
push
rep
mov
push
and
xor
lret
aam
adc
jle
cmp
add
and
int3
imul
xor
and
and
xor
mov
jmp
or
add
or
ja
cmp
dec
jne
andb
rclb
and
mov
jmp
add
int
add
jb
pop
mov
enter
in
mov
sub
jge
dec
ror
mov
add
add
adc
xchg
dec
popa
mov
nop
lds
shrb
outsb
jnp
rol
mov
sbb
jbe
lcall
mov
movsl
xorl
add
push
inc
sub
xchg
mov
or
das
dec
push
into
push
jp
ret
jge
sub
stos
repnz
in
jge
pop
stos
add
add
das
adc
es
mov
fisttpl
movsb
mov
sub
pop
add
sbb
fucomi
rcr
jno
xlat
inc
dec
int
negl
adcb
push
loop
cmp
sub
jnp
xlat
inc
push
dec
xor
enter
sbb
push
and
enter
popf
es
cmp
cmp
mulb
mov
pop
ss
adc
jb
or
lret
rcpps
cmc
mov
addr16
addr16
dec
add
xchg
pop
sarb
lods
mov
and
divl
loope
jnp
xor
sahf
aas
addr16
incb
inc
adc
pop
scas
or
repnz
xchg
xchg
xchg
adc
js
jo
pusha
add
sbb
add
xchg
js
or
add
pop
repz
adc
jge
inc
cmp
add
movsl
or
jge
add
stos
pop
pop
stos
add
pop
ret
insl
inc
add
dec
sub
dec
add
cmp
mov
or
add
push
dec
iret
int3
cwtl
pop
out
pop
add
sbb
lret
daa
loope
subb
pop
out
sub
stc
cmp
jo
pop
in
jno
adc
stc
pushf
mov
test
aaa
push
cld
xchg
repnz
add
push
rcrb
jns
ret
fsts
add
movsl
stos
mov
enter
pop
add
in
inc
in
xchg
mov
js
sub
xchg
mov
pop
gs
sbb
add
je
test
inc
add
mov
in
cmpsb
sub
dec
add
xor
pop
add
cwtl
add
test
add
ret
cmp
rclb
inc
pop
cltd
dec
dec
sbb
aad
insl
scas
test
inc
add
gs
fdivrs
int3
in
add
lods
negb
and
into
sbb
mov
or
cmp
add
outsb
and
mov
sub
cmp
mov
add
fdivl
push
outsb
cmp
ret
add
lret
rcrl
das
mov
xor
fmull
push
dec
push
cmp
les
xchg
and
and
add
daa
stc
xchg
inc
mov
arpl
xchg
jge
and
addb
pop
mov
push
mov
popa
es
lahf
xchg
out
rol
lcall
mov
push
arpl
jns
add
mov
mov
cmc
loope
sub
or
das
and
dec
add
cmp
push
xor
decb
in
mov
push
add
inc
add
outsb
inc
or
nop
inc
pop
outsl
inc
add
test
shrb
mov
and
add
repz
or
mov
mov
cmpsb
out
sbb
iret
xor
sarl
push
out
test
in
mov
dec
outsl
in
dec
add
xchg
push
popa
add
shl
dec
mov
imulb
jno
xchg
push
jns
jmp
mov
cli
pop
add
ds
ret
xchg
pop
shrb
add
test
cli
mov
cmc
sub
mov
jp
pop
pop
xor
and
xchg
ficoml
fidivrl
jnp
add
repnz
stos
fwait
add
push
mov
insl
stos
icebp
mov
mov
pushf
insb
sti
pop
in
adc
pop
scas
lahf
ja
data16
push
mov
push
cmp
pop
mov
mov
inc
add
jl
push
mov
les
mov
xlat
into
aad
movsl
push
sbb
fndisi(8087
cmpsl
enter
sub
mov
jnp
sbb
ja
or
es
inc
mov
dec
xchg
dec
cltd
and
xchg
mov
in
fbld
ss
dec
loope
jl
jae
flds
jo
imul
jge
stos
fwait
arpl
aad
stos
xchg
aad
xchg
sahf
mov
clc
cmpsb
ds
xchg
outsl
push
cmc
push
filds
in
adc
sub
xor
adc
fidivs
mov
shlb
mov
mov
xor
mov
push
ljmp
sbb
aaa
mov
add
sahf
testl
xchg
sub
lock
add
fildll
add
add
imul
mov
xor
pop
jne
jbe,pn
pop
sbb
jge
add
mov
ret
ret
call
loopne
and
int
loope
mov
imul
add
sbbl
pop
mov
dec
push
cli
inc
sbb
jmp
je
shl
sbb
adc
pop
adc
out
cmp
bound
push
xor
dec
inc
out
sub
mov
pop
adc
pop
inc
jg
sarl
add
pop
into
lds
sbb
dec
xor
pop
xor
sbb
sbb
outsb
lock
add
xchg
cmc
outsb
add
ret
jmp
imul
push
sub
xor
inc
int
cltd
xchg
loope
mov
rcll
jbe
lods
incb
sbb
nop
fisubl
pop
add
aam
push
add
pop
mov
mov
push
adc
or
adc
sti
stc
daa
dec
loop
notl
xchg
dec
leave
jae
shll
push
jo
test
mov
pop
addr16
mov
enter
scas
push
insl
inc
mov
jge
pop
loope
int3
cmp
add
stos
ret
fdivs
aam
stos
popl
cmp
test
add
sbb
or
cmpsl
into
lds
popf
movsl
or
cs
xor
push
sub
add
jb
push
enter
and
mov
cmp
dec
fsubrs
roll
insb
add
call
cmp
and
pop
fstpt
sbb
sbb
dec
gs
xchg
jae
sub
jecxz
mov
xchg
incb
add
adc
adc
push
jnp
sbb
les
loop
call
mov
push
outsb
dec
add
ficompl
mov
and
je
sbbl
insl
in
les
repz
cmp
mov
mov
adc
mov
loope
mov
fucom
jmp
in
inc
push
test
test
hlt
cwtl
lea
sub
je
add
sub
dec
xrelease
adc
add
mov
add
sbb
cmp
ja
dec
filds
mov
jmp
ss
fsubs
scas
push
and
sbb
xchg
rcr
out
jo
lock
cli
xor
adc
loopne
cmp
add
pusha
add
add
jl
pop
test
imull
jne
divb
xchg
sbb
sti
nop
shl
mov
rclb
add
ss
jp
lcall
xor
jle
and
sbb
int
out
mov
bound
dec
add
pop
into
pop
and
dec
add
in
aad
xchg
nop
xchg
xor
nop
repnz
mov
leave
mov
sub
imul
inc
jno
sbb
and
sub
mov
cld
push
mov
lret
inc
or
jnp
add
adc
cmp
adc
out
push
sbb
or
js
mov
enter
jns
loopne
ljmp
mov
adc
or
or
push
cmp
mov
jbe
jecxz
outsl
call
cmp
cli
pushl
dec
sbb
dec
jmp
cmp
pop
aam
push
mov
jecxz
add
mov
xlat
ret
xchg
fdivrs
sbb
ficomps
aam
mov
je
jne
and
int3
push
je
ror
mov
aaa
mov
add
inc
pop
mov
adc
xor
jl
lds
mov
cmpsb
push
add
dec
nop
addr16
loope
xlat
mov
out
in
mov
pop
inc
popf
jg
nop
pop
cmp
sarb
orb
or
fistpl
or
push
mov
mov
dec
repnz
mov
push
cmpl
push
pushf
inc
sub
push
je
jmp
push
rcr
push
push
push
inc
sarb
dec
arpl
jo
mov
push
sar
fcmovnu
shrl
dec
inc
pop
pusha
add
ret
cmp
ret
shl
mov
cmp
cmpsb
and
mov
cmp
mov
sub
mov
ljmp
jns
daa
iret
inc
push
add
pop
or
fwait
js
cltd
jno
or
mov
outsl
shl
xchg
fdivl
mov
sti
stos
aas
call
ret
sub
dec
lret
lea
push
lret
mov
testl
add
pop
cld
mov
pop
aas
ljmp
xchg
testb
loop
mov
mov
fbstp
shl
and
rcr
add
ds
imul
add
sahf
test
jne
leave
mov
pushf
mov
push
or
and
and
inc
ret
mov
xor
add
push
dec
pop
mov
sub
ret
xor
push
je
pop
xchg
clc
sti
sbb
lds
mov
xchg
pop
mov
xor
inc
pop
or
cmp
add
mov
in
test
pop
das
pop
imul
xchg
rcrb
add
inc
cmp
push
add
out
lods
out
mov
or
call
mov
test
mov
in
cmp
cmp
jl,pt
add
je
int
scas
ret
fisubrl
xchg
mov
cltd
pop
and
push
mov
orb
sahf
pusha
add
sti
dec
add
sub
mov
sub
test
add
mov
add
into
sub
stos
mov
dec
or
pop
jb
std
pop
loope
leave
sbb
inc
mov
lahf
lds
aaa
sbb
jle
cmp
shll
ja
jmp
movsb
repz
jbe
dec
gs
or
jns
ja
repz
jge
test
out
sub
je
ffreep
fcmovnu
imul
int
and
adc
clc
ja
xchg
int
jecxz
fldl
jl
stos
lret
movsl
int3
sub
and
mov
and
insl
inc
scas
popl
and
andl
adc
add
dec
testb
sbb
cli
mov
add
xlat
mov
sbbl
sti
idiv
in
sbb
push
add
ljmp
adc
ljmp
pop
cmp
test
or
sub
rcr
daa
insl
push
aas
jp
lock
sbb
mov
pusha
add
test
sub
arpl
sbb
mov
movsb
out
in
mov
sbb
pop
in
push
xchg
daa
mov
add
hlt
lcall
ficompl
add
loope
mov
jmp
fldcw
into
sbb
mov
sbb
rep
lcall
fiaddl
xchg
popf
lods
hlt
lcall
xorl
out
fcmovb
rclb
test
sub
pop
jb
in
loopne
xor
imul
test
lret
jl
xor
xor
and
mov
and
mov
dec
add
test
push
jmp
cmpl
add
mov
mov
fwait
scas
call
mov
out
inc
mov
jl
push
xor
sub
cmp
imul
fldl
fisttpll
shlb
cmp
scas
sbb
mov
rolb
imul
push
dec
mov
sub
enter
add
ljmp
mov
loopne
mov
xor
mov
pop
in
and
pushl
sub
or
inc
xchg
test
lret
ds
mov
mov
mov
std
lret
add
lods
mov
js
icebp
aaa
lcall
cld
cmp
cmp
pop
add
pop
cld
test
xorb
xchg
das
mov
in
add
lds
push
add
add
mov
mov
pop
push
ffree
inc
lea
cmc
rorl
push
fmull
xlat
xchg
out
cmc
jle
push
jae
ljmp
add
fdivl
repz
loopne
inc
pusha
add
mov
les
hlt
rclb
sbb
mov
icebp
mov
mov
cmp
fildl
add
pop
add
loop
add
movsb
xor
xchg
adc
fsts
out
sbb
mov
xchg
mov
mov
out
js
jae
add
outsb
cwtl
rcr
push
sub
fidivs
xchg
cmp
jl
aam
test
out
lds
pop
dec
xchg
mov
jmp
out
dec
add
inc
jmp
test
mov
dec
in
add
push
or
fwait
push
mov
push
loope
cmp
stos
movsl
mov
sub
add
negl
push
inc
into
mov
inc
pop
pop
int3
les
loop
mov
push
fistpl
adc
loope
stos
stos
sbbb
jne
xchg
jmp
stos
jg
andb
ret
arpl
dec
sbb
sahf
adc
sub
jb
xor
stc
mov
cmovge
jmp
insl
dec
loope
scas
in
add
add
roll
push
out
pushf
test
aas
repz
cltd
pushl
xlat
sbb
inc
add
int
add
mov
in
mov
push
in
ret
cmpsl
in
cltd
stc
shrb
xorl
mov
into
cmp
xor
mov
xchg
xor
lods
or
xchg
clc
jmp
mov
shr
fsubr
dec
ja
push
adc
pop
arpl
fcoms
jp
add
xorl
lds
xchg
int3
jge
scas
adc
add
aad
gs
js
popf
fsub
ljmp
gs
lahf
jecxz
dec
adc
xchg
adc
adc
mov
sub
add
add
mov
mov
cmp
adc
dec
add
mov
cwtl
ss
xlat
mov
loop
inc
aam
add
push
lods
arpl
add
add
pop
mov
cmc
or
cmpsl
dec
dec
aaa
rclb
es
imul
hlt
mov
fmuls
stc
mov
dec
repz
lods
xbegin
add
jae
and
or
push
jmp
aas
lahf
push
push
frstor
in
fs
pop
sti
mov
push
lods
lock
inc
lds
nop
cmp
ss
mov
cmpsl
pop
test
xchg
mov
mov
bound
add
add
leave
cs
mov
dec
pop
mov
lret
ror
je
fs
adc
adc
pop
pop
in
push
dec
repnz
bound
int3
sub
repz
jle
add
push
mov
mov
jmp
xor
push
xchg
aas
lods
dec
xorb
add
jbe
stos
inc
jae
in
dec
sbb
stos
imul
into
aam
sahf
je
sub
xchg
ds
add
stos
idivb
je
call
aad
mov
stos
sbb
sub
mov
sbb
cmpb
aad
jmp
or
fwait
push
fistps
mov
add
or
dec
xchg
cld
xchg
call
add
das
lcall
add
cmpsb
inc
xchg
inc
sbb
mov
inc
dec
add
cmp
movsl
sub
sbb
pop
inc
cmc
pop
jp
movsb
xchg
icebp
ffree
lock
cs
mov
mov
ljmp
add
loope
lret
add
dec
pop
or
sbb
notl
jnp
out
lcall
divl
in
add
pop
into
ja
add
ret
add
shlb
popf
loopne
rol
fcom
dec
mov
sbb
lock
orb
adc
stos
aad
notl
dec
add
xchg
cmp
mov
fwait
or
ss
stos
imul
push
inc
xorl
xchg
sti
or
push
movsl
mov
adc
pop
inc
mov
rcll
arpl
sbb
mov
push
dec
and
xor
add
mov
jle
mov
mov
add
dec
jecxz
or
int3
dec
inc
mov
out
inc
ja
dec
mov
iret
mov
or
jecxz
adc
aad
int3
mov
adc
push
adc
mov
add
out
or
repz
inc
inc
cmp
lods
and
sbb
xchg
add
jbe
movsl
add
idiv
mov
int3
int3
out
pop
sbb
mov
xor
mov
shll
jbe
insb
das
mov
push
add
cwtl
je
fs
or
mov
stos
adc
add
js
pop
in
jmp
addr16
in
pop
repz
sub
lock
test
loope
jnp
add
dec
push
xchg
rclb
loopne
icebp
lock
add
ret
shl
test
fs
shl
add
orl
push
icebp
or
mov
lcall
shl
push
rcrb
xchg
xchg
insl
pushw
adc
adc
into
and
or
cmc
movsb
sbb
jmp
sub
cmp
xchg
jecxz
pop
das
lahf
outsb
out
or
in
gs
or
mov
xor
pop
mov
jae
mov
shlb
mov
add
add
push
xchg
fwait
and
call
add
mov
inc
in
in
sbb
fldenv
xchg
in
outsb
pop
dec
jg,pt
pop
pop
in
or
jb
xchg
mov
cld
inc
xor
adc
add
add
cmp
addl
scas
stos
push
in
call
add
cmp
shll
aad
scas
adc
jb
dec
sbb
or
dec
add
stc
adc
jns
pop
mov
popf
push
movsl
mov
xchg
xchg
sti
mov
lods
jmp
mov
cmp
cmc
leave
dec
fstl
or
cwtl
lock
add
mov
xchg
jge
loope
mov
mov
mov
sti
cld
test
ret
pop
add
repz
mov
or
dec
pop
fmuls
aad
mov
pushf
imul
shrl
add
fistpll
int
xchg
es
xchg
sti
mov
pusha
add
inc
scas
inc
dec
test
aaa
xchg
jmp
or
fmul
jecxz
sarb
mov
add
xor
push
add
push
rcrb
scas
inc
out
pop
jl
pop
dec
add
add
sbb
mov
push
movsb
cmpsb
divb
andb
mov
mov
push
xor
xor
repnz
clc
xor
arpl
shr
sbb
stos
jl
loop
cmpsb
sub
xchg
fwait
xor
add
and
mov
jno
add
ret
pop
xor
int
test
dec
jg
out
mov
ja
xchg
fsts
mov
test
mov
hlt
outsb
sub
add
into
or
cmp
push
std
les
stc
inc
and
sarb
addr16
push
or
adc
pop
cwtl
mov
or
mov
add
xlat
mov
mov
mov
loope
mov
push
into
mov
int3
arpl
pusha
add
sahf
push
cmp
mov
push
add
xchg
sub
mov
in
cld
and
call
test
pop
js
nop
lret
mov
nop
sbb
fld
mov
push
adc
mov
popa
ds
ror
xchg
push
pop
inc
xchg
dec
fisttpl
xchg
gs
add
dec
inc
jmp
cmp
andl
or
cmp
or
xchg
dec
or
mov
scas
mov
repnz
inc
add
sub
push
jnp
bound
adc
sub
roll
scas
jge
sub
cli
std
shll
add
mov
pmulhw
movsb
mov
mov
push
jb
pop
daa
mov
mov
pop
mov
scas
xchg
push
add
ret
sub
jge
int3
ja
fidivl
add
dec
sbb
add
psubd
xchg
fs
xor
call
cmp
jmp
pop
fldenv
outsb
cmp
fwait
inc
repz
push
push
aaa
sbb
lcall
shrb
je
pop
pop
pop
cmp
leave
mov
shlb
jmp
andl
add
fdivl
imull
test
add
xor
fdivr
push
sub
push
aam
add
or
xlat
cmp
push
pusha
add
js
ljmp
arpl
add
xor
mov
and
es
or
sub
mov
pop
xchg
mov
pop
mov
faddp
mov
imul
cmp
gs
shll
mov
mov
push
xor
lcall
sub
inc
call
lea
jg
xchg
fstpl
push
call
test
jl
adc
inc
scas
mov
and
lods
pusha
add
lcall
xor
addb
test
mov
jae
shr
mov
fcmovbe
or
bound
mov
loopne
in
push
aam
xor
xor
mov
fsubrs
mov
jmp
movb
test
int3
sub
jmp
xchg
sahf
or
sti
or
nop
shll
fstl
movsb
out
xchg
sbb
lcall
add
cmp
push
sub
or
mov
jmp
stc
ljmp
sub
jno
or
mov
inc
mov
cmp
sub
mov
test
add
enter
add
mov
fbld
out
pop
data16
xchg
and
mov
mov
negb
icebp
or
aad
ds
scas
xchg
scas
fcoms
test
cwtl
adc
ja
jle
add
xchg
fcmovnb
jb
adc
jae
sub
dec
cld
mov
xchg
xchg
push
fcompp
add
mov
in
out
imul
mov
mov
jae
dec
aaa
dec
add
cmp
jbe
mov
add
inc
push
dec
addr16
xchg
adc
fdiv
mov
mov
and
insb
mov
jns
sub
sub
mov
mov
add
mov
shl
stos
outsb
pop
lcall
loop
mov
jae
fimuls
hlt
test
lods
out
adc
jbe
shlb
leave
aas
jp
mov
add
lret
rclb
subb
int
popa
jbe
add
insl
xor
pop
push
or
xchg
in
push
lea
lret
lea
adc
shl
dec
les
loopne
ret
outsb
stos
xor
adc
xchg
mov
jno
inc
addr16
pop
push
mov
mov
bnd
pushl
adc
mov
movsb
xor
mov
ficompl
cld
fisttps
test
adc
xchg
pop
jmp
jecxz
sub
push
aas
inc
cli
mov
cmp
andb
xchg
jg
dec
xor
add
popf
cli
or
and
cwtl
pushl
xor
bound
pusha
add
add
rol
pop
jnp
inc
dec
xchg
inc
fwait
mov
jae
pop
test
mov
imul
add
out
dec
pop
add
dec
les
aad
stc
mov
push
in
pop
das
push
mov
pop
xchg
addb
add
and
cltd
adc
leave
pop
push
icebp
ret
shlb
test
fs
mov
mov
cmp
add
xchg
test
movsb
daa
inc
add
cmp
push
decl
cmp
idivb
js
push
jp
mov
in
xchg
pusha
add
add
xchg
cmp
mov
mov
lock
lret
mov
xor
push
pusha
add
sub
leave
mov
into
adc
addb
mov
clc
in
jge
stos
pop
cmc
mov
jge
and
cwtl
fs
ret
fwait
or
out
in
insb
js
xor
test
pop
int3
fdivp
adc
mov
stos
fildll
mov
adc
push
repz
xor
and
daa
es
mov
stos
sub
push
add
test
sbb
sbb
hlt
cmp
imul
add
xchg
xchg
xor
mov
push
ret
ret
sub
daa
xchg
xor
insb
mov
stos
ss
and
push
xor
push
icebp
xor
lahf
lods
movsb
stos
jmp
xchg
insl
mov
repz
sbb
pop
test
test
cmp
movhps
cmpb
mov
outsl
mov
je
inc
fwait
dec
or
sbb
lods
call
daa
dec
fistpll
add
inc
dec
pop
add
and
pop
push
mov
cmp
gs
pop
adc
test
fdivrl
gs
or
cmpsl
movlps
add
pusha
add
gs
jae
cltd
dec
cs
mov
adc
stc
out
and
nop
call
adc
inc
ljmp
pusha
add
outsl
mov
adc
add
lea
out
pop
mov
test
into
inc
rcll
shlb
add
fstl
sbb
loope
loope
insl
inc
out
insl
mov
mov
jle
and
sbb
push
dec
outsl
insb
popl
nop
mov
bound
icebp
inc
dec
add
add
pop
fidivrs
sbb
jbe
pop
int
dec
dec
xor
jecxz
and
cwtl
lea
aam
jo
push
push
mov
add
xlat
aaa
repz
xlat
and
fdivrs
push
test
popf
and
sarb
push
lret
popa
fisttpl
scas
shll
add
pop
push
mov
add
or
xlat
in
cli
hlt
rorl
gs
xchg
mov
pop
notb
dec
mov
int
inc
dec
test
ret
js
adc
out
or
mov
popa
inc
add
pop
add
loope
add
lock
mov
aam
out
pop
sahf
mov
mov
cmpsl
pop
jne
xchg
gs
mov
call
sahf
xchg
loop
add
in
lea
inc
xor
xor
out
pop
add
inc
test
inc
xlat
dec
add
insl
cmc
cmpsl
out
outsb
inc
add
inc
ret
gs
rcll
jmp
in
iret
out
pop
add
cmc
rcrl
sub
dec
sbb
hlt
add
and
rcrl
rcl
fisubl
popf
dec
lret
popf
lds
add
lahf
sub
outsb
insb
lods
outsb
or
dec
adc
dec
adc
icebp
pushw
pusha
add
hlt
loop
and
push
ret
jmp
clc
mov
sarl
mov
ret
sub
xchg
shlb
divl
or
lods
movsl
fwait
xor
and
pusha
add
add
dec
pop
jb
fs
into
mul
roll
pop
dec
add
in
sub
pushf
sub
mov
dec
sub
and
lea
repnz
pop
add
idivb
test
dec
mov
int3
lcall
in
push
bound
loop
mov
cld
xchg
and
dec
test
aas
pop
roll
dec
subl
cwtl
lods
mov
insl
mov
mov
mov
outsb
inc
sbb
std
adc
push
call
inc
xlat
pop
pop
pop
popa
int
cmp
xchg
fldt
bound
arpl
mov
mov
jmp
xor
mov
or
and
ds
jno
pushl
xor
decb
mov
testl
idivb
sub
je
mov
dec
das
ja
jb
add
adc
and
sbb
fld
data16
add
add
and
adc
cwtl
adc
sub
push
mov
imul
add
sub
leave
push
add
pop
pushw
dec
faddl
push
in
rclb
or
das
stc
stos
xor
test
cmpsl
int3
mov
out
std
cmp
dec
test
push
sarb
push
fstp
in
jno
jecxz
and
clc
mov
std
out
fwait
inc
mov
jno
inc
cld
cmp
or
mov
test
out
ficompl
add
mov
add
pop
mov
andl
inc
loopne
or
or
push
sub
ret
sub
mov
xchg
mov
aas
in
sub
ss
test
cmp
mov
lahf
cmp
push
add
add
inc
and
push
dec
sub
insl
push
add
jp
mov
and
and
xor
add
cmpsb
sbb
inc
test
add
scas
pop
ljmp
sbb
gs
dec
ds
cmp
aas
mov
sbb
vcmpsd
xchg
lcall
test
pop
pop
ret
ret
and
xor
loope
adc
lahf
xchg
int3
pop
mov
andb
or
xor
lcall
lock
cmp
std
sbb
dec
add
sub
dec
insb
and
cmp
jp
cs
push
add
dec
daa
leave
jbe
cmp
fldcw
cmp
xchg
pop
insl
lret
sub
adc
add
scas
jnp
adcb
xchg
sarb
sub
into
pop
dec
sub
enter
and
cmpsb
das
xor
jb
fists
hlt
sbb
add
test
rcrb
sbb
sub
andb
push
std
aas
jo
push
notb
orb
cli
pop
xchg
clc
outsl
jmp
ljmp
or
mov
pop
jnp
sti
std
sbb
xor
add
ja
stos
xchg
into
mov
xchg
fists
std
mov
mov
mov
mov
inc
add
fs
add
cs
jge
pop
out
sub
loop
pushf
adc
loope
andb
cli
adc
mov
sti
add
test
add
mov
hlt
mov
sub
jnp
scas
xor
xor
addb
rcll
add
mov
or
sbb
add
add
dec
add
jnp
xchg
cltd
int3
aam
jb
hlt
fisubs
outsb
sub
add
cmpsl
jnp
add
mov
jnp
cli
sbb
std
xchg
jecxz
add
sbb
aad
sbb
mov
mov
cmp
mov
outsl
inc
cmp
add
test
ja
outsb
fldcw
add
enter
fcoml
out
push
out
mov
aaa
sub
fs
or
iret
and
dec
jmp
cmp
popf
pop
xchg
add
jg
sbb
stos
ret
add
dec
add
fimuls
fdiv
cmp
fwait
dec
sti
jo
imul
cmc
ljmp
push
or
shlb
pop
add
mov
std
test
add
jae
int
sub
dec
mov
ljmp
cld
insb
mov
push
int3
and
std
or
adc
outsb
inc
add
dec
stos
xchg
mov
mov
lock
adc
add
add
fwait
mov
cltd
fimuls
repnz
cmp
shrl
out
pop
cmp
mov
sub
xor
iret
std
adc
xchg
repnz
imul
mov
cld
push
clc
sub
outsb
adcb
sbb
mov
ss
pop
add
jnp
outsb
inc
add
movsl
cli
loopne
jo
xor
fstpt
add
repz
mov
push
lods
jno
scas
fmull
pushf
jecxz
dec
stos
cli
dec
mov
jo
testl
cmp
loopne
cli
sti
sub
mov
test
into
subb
fdivrl
ret
iret
fdivrs
stos
sub
push
push
test
sbb
fldenv
pop
sbb
add
add
push
pop
jns
in
orl
popf
ret
and
ds
add
jns
int3
daa
aas
and
mov
ds
daa
stc
lahf
mov
stos
xchg
inc
ret
adc
dec
sub
pop
orb
adc
mov
jecxz
out
cmp
push
inc
pop
mov
loope
or
je
mov
rolb
dec
xor
adc
push
pop
fwait
movsb
ficoml
xor
jle
movsb
push
cs
jmp
inc
bsr
xchg
je
sar
pop
out
jecxz
imul
aaa
push
xchg
mulb
and
rolb
jl
test
lock
jbe
test
fiadds
shlb
cmpsb
jecxz
fsubrs
subl
aaa
xor
sbb
xchg
inc
daa
hlt
rclb
mov
insb
or
insl
add
mov
mov
jne
js
inc
jmp
and
repnz
jge
outsl
and
sbb
rcrl
sbb
push
xor
push
mov
mov
pusha
add
add
mov
rorl
add
mov
add
icebp
xlat
notb
add
add
pop
xor
xor
sbb
popf
imul
inc
sub
push
js
push
add
xor
push
sub
insl
push
add
addr16
xor
out
cmp
pop
mov
cmp
dec
jo
stos
fcompl
mov
js
cs
mov
push
inc
mov
cmp
int3
out
mov
fcomp
pop
add
jnp
rorb
je
add
lods
adc
addr16
test
divl
add
add
xlat
inc
orl
lods
and
adc
rorb
push
or
icebp
ljmp
add
adc
inc
push
mov
hlt
ja
aaa
pop
popl
add
jb
pop
in
sub
push
or
inc
jo
dec
mov
outsb
cmp
mov
add
sbb
jl,pn
enter
add
neg
sbb
es
jo
cwtl
xor
push
mov
add
sub
lret
mov
adc
test
and
rcrl
in
dec
and
aaa
sahf
jp
add
dec
out
imul
add
xlat
je
arpl
repnz
sub
mov
jns
push
add
int
push
xchg
cmp
fs
ja
jmp
adc
nop
cwtl
into
inc
ljmp
adc
xchg
xchg
mov
add
cwtl
jle
aas
stos
inc
inc
enter
imul
mov
add
subl
or
out
popf
aad
mov
xor
cmc
movsb
or
add
ja
xlat
popf
xchg
in
sub
daa
lret
pushf
adc
mov
roll
push
loope
dec
add
out
xchg
sub
xchg
or
int3
push
pushf
inc
cmp
jbe
popf
mov
xorl
jp
sbb
loopne
sub
jb
int
adc
add
out
imul
movsb
xchg
arpl
and
pop
dec
cs
lret
popf
popa
sbb
jp
ret
adc
add
mov
add
adc
push
or
push
mov
test
mov
ret
xlat
add
jge
mov
add
aas
mov
cli
mov
sub
int
fdivrl
xor
fcoms
or
in
adc
jbe
cld
mov
xchg
and
mov
add
jb
xchg
mov
add
jecxz
adc
ret
cmp
mov
test
inc
pop
cmpsl
rolb
add
or
push
or
push
sbb
mov
sub
push
add
dec
in
or
fstpt
mov
pushf
outsb
xchg
enter
sbb
bnd
inc
cltd
mov
xor
cmc
sbb
leave
stc
jmp
int3
outsw
je
push
hlt
mov
mov
push
cmp
jae
fbld
mov
mov
les
inc
push
add
aad
fnstcw
mov
out
xchg
adc
jbe,pt
add
aam
mov
mov
pop
aas
mov
scas
stc
cld
lcall
das
imul
enter
test
adcb
roll
xchg
fnstcw
repz
imul
test
inc
mov
push
daa
xchg
fsubl
scas
inc
xor
xchg
jl
insl
fistpl
cwtl
test
jne
adc
frstor
stos
push
faddl
cmp
mov
fucomp
popa
aam
adc
imul
lods
sti
jbe
jbe
shrb
push
add
lock
jnp
xchg
push
daa
push
sbb
or
lcall
push
xchg
or
cmp
push
or
add
and
jecxz
outsb
out
test
pusha
add
add
add
mov
mov
push
fdivrl
clc
cmpsl
cli
std
cltd
or
sub
and
shr
xchg
or
add
test
ds
or
mov
pop
add
sarl
adc
adc
jo
push
push
cmpsb
fnstcw
or
stos
mov
inc
insb
cs
je
add
loop
xlat
stos
mov
aas
movsl
adc
push
repz
mov
add
sub
sub
adc
sbb
or
aam
sub
mov
xor
inc
mov
add
lods
cmp
dec
lahf
dec
mov
mov
repnz
xor
add
cmc
rorb
add
mov
daa
mov
add
das
inc
out
mov
or
push
out
in
cmp
mov
pop
mov
mov
add
outsl
cltd
push
push
and
in
mov
xor
add
out
inc
cli
loop
sub
mov
inc
mov
mov
push
testl
mov
aad
stos
test
push
mov
daa
push
add
xor
lock
outsb
jne
mov
sbb
ds
xor
scas
popf
xor
jne
int
mov
xor
popa
dec
xlat
pop
cmp
push
add
rolb
add
scas
dec
stos
stc
pop
nop
imul
call
lods
insb
lret
push
rcrb
rcrl
add
add
rcrl
and
xchg
mov
outsl
mov
push
add
mov
push
xor
sbb
add
push
cmp
ror
int
dec
push
fs
fnsave
or
and
es
loop
sbb
hlt
mov
and
mov
into
sti
cmc
xlat
mov
cmp
mov
testb
adc
jle
in
popa
sbb
lds
idivb
add
decb
fs
movsl
setg
cmpsl
xchg
je
in
adc
repz
cmp
comiss
pop
add
fisttps
testl
fcoms
inc
jmp
clc
sub
add
push
mov
sbb
mov
in
sbb
test
add
xor
mov
icebp
pop
cmc
xlat
mov
popf
aaa
cwtl
and
xor
mov
imul
out
push
xlat
add
cmp
and
dec
and
out
insl
clc
mov
add
push
push
mov
shlb
into
fbld
lds
insl
mov
push
sub
adc
sub
or
jb
adc
movsl
adcl
sub
loop
add
sub
adc
test
subb
sub
cli
add
in
sahf
sbb
xchg
fmuls
fnstsw
add
pop
andb
sbb
push
dec
cmp
ffree
sti
repnz
stos
stc
fsubrl
mov
test
daa
faddl
push
dec
lret
daa
icebp
dec
mov
add
ja
test
add
xor
in
push
xchg
or
arpl
fcompl
mov
mov
lahf
sbb
adc
cwtl
inc
add
add
call
mov
xchg
push
add
push
jne
add
js
push
shl
les
add
or
inc
int3
out
lock
xchg
orl
js
pop
fnstsw
lea
clc
cmp
jmp
inc
add
and
push
jns
jne
icebp
roll
mov
push
add
rcr
mov
add
cmc
std
shll
xchg
out
jge
push
loope
popa
into
out
sub
push
bound
nop
jg
outsl
repnz
fsubrp
sub
loope
andl
add
daa
popf
sbb
mov
jp
hlt
cmpsb
inc
outsl
pop
mov
into
cmp
popl
jno
cmp
cltd
iret
lret
cmp
add
enter
push
mov
sbb
arpl
cld
push
or
add
mov
push
or
adc
rcll
sub
mov
cs
shll
mov
sub
mov
mov
scas
jae
xor
call
mov
inc
inc
add
dec
int
loope
adcl
ljmp
or
ljmp
xor
add
dec
in
inc
cli
pop
pop
dec
mov
add
das
add
leave
daa
in
add
ss
mov
xor
icebp
das
pop
xchg
jmp
mov
sub
pop
es
sarb
or
scas
jo
adc
fcomip
into
or
ljmp
shlb
xchg
les
rorl
pop
in
out
push
sub
push
andl
les
xor
sub
pop
push
adc
add
arpl
test
in
xchg
mov
mov
add
popa
mov
mov
leave
addr16
jmp
inc
mov
nop
sbb
in
out
filds
je
mov
bound
out
pop
iret
sub
xor
jge
add
mov
add
adc
mov
or
inc
add
mov
ret
jmp
jno
mov
and
fimull
rcrl
sub
sub
pop
negl
jbe
std
cmp
and
add
rcrl
xchg
les
xchg
ret
and
mov
mov
outsb
stos
jnp
lret
lret
in
int3
pop
inc
xchg
inc
sbbb
xchg
xchg
dec
adc
aad
add
dec
fldl
add
ret
pop
ss
mov
orb
xchg
mov
fld1
and
cmp
sub
lods
push
jle
push
dec
cmpsl
loopne
or
aad
test
xor
stc
call
je
pop
mov
xor
pop
ror
or
and
and
jl
push
into
mov
inc
add
je
or
daa
or
inc
popa
mov
aaa
sbb
mov
mov
add
fstps
out
aas
push
jb
add
adc
xchg
in
mov
into
insl
pop
mov
imul
push
xchg
cmp
data16
rcrl
xor
lods
cmp
xor
fwait
mov
shrl
pop
test
repz
cwtl
dec
sarl
add
pop
inc
inc
add
inc
add
jmp
das
das
mov
es
add
out
ret
pop
mov
loopne
jbe
add
mov
push
andl
push
add
add
ret
popf
addb
add
add
fldl
loope
xor
cmpsb
jno
in
es
outsb
ljmp
cmp
in
and
inc
add
pop
sbb
mov
add
or
jbe
loopne
mov
js
imul
mov
xor
repnz
xor
add
mov
out
and
and
inc
add
add
lahf
cmp
repz
lock
dec
mov
jmp
and
xchg
sub
mov
add
and
inc
movsl
mov
sti
or
out
push
sbb
imul
mov
inc
arpl
mov
sbb
cmc
ss
sbb
clc
mov
or
lea
pop
addb
pop
add
push
jbe
mov
xchg
fstl
jns
inc
aas
nop
cmpsb
fcmovne
dec
clc
push
adc
std
in
jno
dec
sbb
xchg
sub
push
les
insl
xchg
adc
out
iret
xor
insb
sbb
and
mov
shlb
xchg
mov
mov
mov
ficoml
mov
push
xor
xchg
out
das
adc
and
fwait
push
adc
loopne
scas
faddl
push
inc
in
shlb
xchg
pushf
pop
sbb
jo
inc
sar
mov
mov
out
mov
insl
sub
mov
add
add
add
pop
arpl
shl
in
jp
psubusb
cltd
inc
sbb
add
add
clc
pop
gs
add
inc
sub
sub
sarb
mov
hlt
adc
adc
mov
add
and
add
and
cmp
sub
or
into
out
inc
dec
inc
push
loope
cli
movsb
push
out
add
fimull
cmc
sbb
hlt
cmp
add
mov
dec
mov
nop
out
xor
test
dec
xorb
aam
and
hlt
jg
nop
xor
xchg
dec
add
mov
sbb
cli
cli
jmp
xchg
xor
andb
lret
xor
iret
mov
lret
sbb
stc
les
sub
push
add
pushf
pop
add
in
add
cld
cmp
movsl
sub
pushf
subb
lahf
mov
add
add
push
add
pop
out
imul
pop
outsb
push
inc
adc
xor
int3
adc
xor
repz
and
aad
in
dec
sahf
push
popa
and
sbb
jbe
adc
push
outsb
imul
dec
adc
test
and
cmp
add
add
fldenv
cltd
aaa
jge
mov
and
pop
add
sbb
shl
or
stc
mov
subl
aas
lods
jecxz
xchg
and
or
sahf
inc
push
and
pop
xchg
out
fistl
imul
xor
mov
dec
adc
push
mov
jbe
movsl
push
int3
push
and
sub
cmpsb
jl
mov
sahf
pop
fisttps
mov
cmp
mov
mov
mov
push
jno
frstor
jae
sbb
xor
mov
cltd
cltd
add
mov
or
jbe
cmp
add
outsb
jno
into
fwait
xchg
lret
and
test
fadds
mov
lcall
pop
jne
add
push
cli
xchg
aad
fcoml
or
pop
int3
cmpsb
fisttpll
sahf
popa
cmp
dec
notl
mov
sub
xchg
cmc
mov
icebp
aad
das
mov
sbb
mov
ret
es
fwait
leave
sbb
les
sub
lds
add
stc
mov
xor
pop
fbld
pop
push
jg
or
cmp
add
jb
cmp
push
and
stos
leave
mov
add
cmc
sub
push
ss
xchg
insl
inc
mov
mov
or
or
dec
mov
aaa
jl
inc
jmp
pop
add
push
add
fimull
test
xchg
pop
fidivrl
ret
cwtl
fcoms
sbb
pop
out
mov
xor
or
cli
aaa
jg
sub
movsb
sub
mov
test
xchg
dec
add
jle
mov
adc
repnz
mov
shrb
xchg
mov
not
mov
push
add
mov
xchg
shlb
mov
movsb
inc
add
inc
xchg
or
sbb
jmp
pop
addl
mov
sbb
fs
stc
xchg
cmp
stc
std
jne
int3
mov
iret
push
and
adc
add
sbb
xor
add
aas
inc
xchg
dec
in
mov
fstpt
xchg
jno
sub
hlt
or
in
xchg
stos
jae
pop
adc
push
nop
sub
xor
jp
sbb
add
je
mulb
test
stc
add
lcall
clc
push
fiadds
repnz
xchg
mov
adc
std
and
fsubrl
sbbb
imulb
dec
dec
and
jp
hlt
gs
and
xor
inc
cli
pop
jge
loopne
sub
pop
scas
jg
into
sub
in
adc
cmp
lods
inc
mov
inc
call
mov
add
pop
cmc
xchg
in
add
pop
lahf
arpl
aam
xchg
dec
dec
xchg
subl
add
push
sarl
adc
mov
cli
mov
add
mov
jl
push
lods
sub
mov
add
sbb
or
pop
pop
rcll
add
add
push
xchg
inc
xor
adc
ud0
in
cli
cmpsb
fcmovnbe
test
or
or
cmp
mov
sbb
xchg
fstl
adc
pop
inc
stc
sti
push
nop
test
insl
pusha
add
arpl
mov
inc
add
adc
or
sbb
test
mov
xchg
jbe
pop
xor
das
es
data16
and
int
iret
add
add
lock
sub
idivl
inc
add
pop
mov
dec
inc
gs
ss
dec
sub
dec
sub
mov
icebp
sti
add
cmp
mov
sbb
and
xlat
insb
int
xor
lahf
mov
aaa
xchg
adc
add
in
sub
arpl
test
aam
imul
int3
push
jmp
jmp
dec
and
add
push
add
push
sub
fwait
or
lea
out
ds
fs
pop
out
adc
pop
or
push
inc
xor
bound
jle
push
arpl
adc
add
xchg
mov
shll
fwait
sahf
lahf
xor
inc
xor
movsb
push
int
or
mov
and
loop
loopne
int
cwtl
insl
xchg
cwtl
ds
add
mov
and
lock
or
xchg
jno
outsl
es
in
mov
int
mov
rcll
add
fistps
fadd
aam
add
or
cmpl
out
adc
adc
and
mov
scas
pop
iretw
lods
fidivs
push
es
sbb
or
ljmp
iret
out
pop
sbb
hlt
mov
mov
inc
cmpsl
mov
jbe
daa
mov
pop
test
or
loop
xchg
add
jns
repz
incl
add
inc
fidivs
mov
adc
call
mov
sbb
mov
out
dec
ss
stc
fs
mov
pop
add
add
jp
insb
and
orb
dec
cmc
fsubrs
sbb
add
pop
push
jp
adc
js
cmpsb
mov
shlb
test
or
test
lahf
pop
jae
mov
dec
pop
xor
sti
dec
mov
divb
pop
push
cmp
imul
add
xchg
push
add
cmc
loop
aam
add
out
add
scas
cmp
mov
test
sbb
mov
cmp
fdivr
add
add
xor
xor
icebp
subl
and
stc
out
fisttpll
loopne
or
xor
pop
lret
xchg
nop
gs
pop
bound
mov
inc
gs
data16
cmpsl
nop
repz
repnz
jns
cmp
add
lds
sbb
movsb
mov
movsl
mov
xor
xchg
add
jno
negl
in
mov
sti
frstor
and
inc
pop
sub
repnz
cli
cmp
imul
lahf
cmp
add
jne
aad
xchg
lods
adcl
or
add
mov
add
ret
pop
cld
cld
jp
sahf
or
fsts
data16
jge
scas
or
fidivrl
repnz
shll
xchg
inc
add
jl
in
add
add
and
add
jmp
ror
pop
xor
rcrl
jne
mov
and
add
add
xor
and
adc
and
pop
adc
or
sbb
in
aas
xor
lock
lret
mulb
scas
ret
out
mov
mov
add
xor
les
mov
insl
cld
mov
pop
push
inc
call
in
pop
pop
jle
dec
pop
jge
js
adc
sbb
in
jp
iret
and
rol
xor
sbb
cmp
xchg
mov
cmp
bound
mov
cwtl
jmp
push
into
sbb
adc
fnstcw
mov
and
add
mov
loope
call
adc
mov
jb
xor
mov
dec
add
lods
cmp
sub
mov
inc
nop
mov
out
lods
dec
stos
rcrl
push
icebp
and
data16
cmpsl
sbb
sbbl
adc
and
mov
stc
imul
movsb
dec
mov
mov
add
lret
sbb
xor
push
and
pop
add
imul
mov
out
mov
cmpsl
rolb
sub
popa
jle
hlt
sub
xor
sbb
and
inc
mov
xchg
ja
mov
pop
sbbb
push
pop
cltd
cltd
ss
mov
es
imul
pusha
add
add
ss
pop
pop
add
outsb
or
xchg
mov
repnz
mov
daa
pop
xchg
das
add
imul
test
int
popa
jnp
pop
add
shl
jns
mov
push
jo
cmp
lock
aaa
or
outsb
xlat
stos
roll
push
cmp
pushf
jle
mov
in
das
sub
sub
add
add
ljmp
fdiv
inc
and
jnp
add
xor
addr16
loope
adc
cli
push
add
pop
xchg
xor
in
stos
or
pushf
adc
stos
fucom
lods
lcall
sub
push
lods
int3
push
ret
inc
add
cmpb
jge
fs
jmp
or
push
mov
lret
lret
mov
xlat
loopne
add
push
add
dec
add
add
mov
mov
sub
in
repz
lods
add
aas
pop
push
mov
mov
lock
out
and
call
add
les
popf
fdivrs
pop
adc
pop
add
leave
dec
add
jmp
outsb
pop
mov
xor
imul
mov
push
jns
inc
insl
sti
das
sbb
outsb
sub
adc
sub
lahf
sahf
mov
mov
insb
pop
shrl
or
xchg
mov
scas
pop
add
mov
cs
lods
sbb
pop
mov
leave
pop
inc
popa
outsb
mov
aaa
insb
jecxz
mov
mov
icebp
mov
add
pusha
add
mov
mov
ss
add
pop
cmp
sbb
push
mov
add
hlt
outsb
into
push
xor
inc
add
aaa
jecxz
jg
xor
mov
in
insb
xchg
pop
es
cwtl
sub
in
int3
shrb
ljmp
sbb
lock
mov
ret
fnsave
jg
jl
xor
push
dec
mov
lods
enter
xorl
dec
int3
push
insl
and
add
iret
jmp
add
inc
dec
adc
subl
mov
test
fwait
dec
decb
andl
mov
aad
sub
mov
das
xchg
sbb
stc
and
pop
aad
or
xor
in
or
loop
insl
popf
clc
mov
in
loope
mov
out
jecxz
popa
mov
mov
fstps
xchg
loopne
call
push
dec
hlt
subb
mov
add
pop
testl
pop
fucomp
mov
shrl
jg
pop
cmc
and
jbe
jp
clc
sar
mov
mov
xor
inc
pushf
xchg
in
sbb
lods
push
fsubp
into
mov
or
sarl
fistl
dec
ret
lods
test
hlt
repnz
into
and
insl
add
mov
inc
roll
mov
lea
subb
je
and
imul
add
subl
adc
pop
sub
add
jno
dec
dec
sub
scas
push
jb
sbbb
mov
insb
xchg
pop
xor
dec
and
pop
cli
mov
xchg
sbb
repnz
movsb
pop
pushf
ja
imul
add
movsl
add
loopne
add
and
pop
fcmovne
pushf
in
scas
int3
sbb
inc
mov
js
jb
xor
cmp
push
inc
addr16
int
out
js
ljmp
pop
fisubl
in
mov
push
ret
cmp
lret
dec
xchg
stos
mov
in
cs
stos
ficompl
mov
pushf
lea
repnz
arpl
in
mulb
filds
jnp
xor
sub
out
sub
sbb
stos
jle
cmp
lret
insl
jb
adc
insl
cmpsl
callw
jecxz
xchg
and
push
mov
mov
jle
mov
sub
mov
jo
pop
sbb
pop
nop
jns
int
xor
add
jno
js
pop
inc
outsb
call
add
jp
icebp
in
pop
in
dec
outsb
test
mov
jge
cmp
cmp
ret
adc
test
add
jecxz
add
clc
lock
les
mov
cmpl
add
add
imul
cmp
or
add
clc
sbb
mov
jmp
or
or
xchg
push
mov
jnp
je
xchg
and
pusha
add
push
jg
pop
cmp
iret
adc
movsb
andb
mov
sbb
mov
arpl
xchg
and
add
cmpsl
stos
je
lret
xor
ffreep
pop
cwtl
inc
in
lret
pop
fmuls
mov
in
pop
sahf
xchg
jle
test
jle
push
sub
lods
in
push
pop
fwait
inc
or
mov
pop
fbld
in
outsl
mov
xor
adc
gs
cmp
mov
repz
fistpll
dec
mov
pop
movsl
repz
push
fwait
mov
ljmp
into
mov
add
mov
cli
mov
inc
sub
add
mov
inc
das
fstps
xchg
mov
cmp
pop
out
push
add
into
dec
cmp
cmp
ret
or
add
mov
and
std
mov
pop
lcall
jge
lea
enter
push
sub
das
adcb
sub
adc
cmp
jecxz
jge
bound
sbb
mov
out
push
xchg
in
add
pop
clc
into
and
mov
ljmp
xor
cmp
and
add
bound
jb
lds
pop
mov
fs
int3
inc
je
dec
js
or
shrb
mov
sub
dec
test
fwait
dec
or
add
mov
add
sbb
shlb
clgi
mov
jp
jae
mov
popf
and
call
xbegin
adc
sbb
sbb
cmpsl
dec
insb
outsl
sbb
and
lcall
stc
cmc
sub
add
loopne
stos
sbb
leave
lods
mov
scas
mov
add
sbb
lahf
and
cmpsb
xor
mov
aaa
rorb
fnstenv
sub
int
xchg
insl
mov
jp
pop
lret
mov
mov
pop
or
xlat
mov
out
rolb
cld
push
xchg
leave
inc
aas
mov
call
ret
jae
bound
add
adcl
sub
test
jle
cmp
mov
cmp
daa
cmp
add
pop
and
sbb
test
or
push
outsb
enter
pop
mov
add
mov
xchg
jmp
cmp
bound
enter
insl
or
push
pop
push
xchg
mov
mov
inc
mov
push
jmp
inc
add
in
inc
imul
sbb
movsb
and
mov
jmpw
dec
add
dec
mov
jb
xor
jmp
rorl
int3
xchg
xchg
xor
xor
add
daa
xchg
lea
jecxz
pop
pop
push
pop
add
mov
xchg
push
jecxz,pt
add
daa
js
scas
cmpsl
cmpsb
inc
cwtl
imul
out
in
lods
push
iret
scas
int3
movsb
cmp
sbb
push
add
ficoms
add
jl
sub
push
push
mov
sbb
inc
popf
in
adc
add
mov
add
out
add
imul
addr16
dec
mov
arpl
pop
aas
sti
pushf
jno
nop
scas
int3
push
psadbw
dec
and
mov
mov
jb
sub
repnz
daa
mov
lret
fdivrs
and
cmc
daa
movsb
lods
dec
in
xor
fimull
jmp
bound
or
add
cld
imul
sub
add
popa
pop
ret
loop
cmpsl
cmp
push
pop
ja
mov
jl
mov
ss
call
pop
pop
pop
mov
xchg
cltd
outsl
fiadds
arpl
out
std
jg
sub
jbe
push
ja
jns
mov
lret
iret
test
mov
std
mov
and
pop
or
lret
pop
scas
xor
and
cli
lods
out
aaa
insl
clc
scas
and
loopne
jbe
imul
fsts
add
pop
sub
pop
and
es
add
pop
add
cmp
jl
xchg
sahf
shrl
mov
add
push
inc
mov
ret
enter
and
mov
xor
fsubrl
aas
mov
sub
mov
outsl
lock
sahf
pop
std
xchg
lods
mov
dec
fwait
xchg
push
add
mov
test
outsl
inc
cmp
add
mov
int3
inc
or
sub
inc
aas
test
outsb
imul
cmc
sub
sti
stos
cmc
add
aas
cmpsl
enter
int
mov
shll
lods
sub
add
test
pop
jmp
xlat
push
xor
push
subl
sahf
and
xchg
mov
xor
or
cmp
dec
dec
mov
pushl
fidivrs
xor
fisttpll
inc
xor
cltd
push
pusha
add
jg
push
clc
testl
popf
pop
jae
mov
sub
scas
mov
pop
pop
dec
pusha
add
mov
pushf
dec
les
gs
pop
sbb
add
adc
lds
push
dec
jb
aam
xor
out
stc
pop
sbb
shrb
add
jns
push
popf
mov
fbld
inc
sbb
dec
xor
mov
mov
lock
shll
rcrb
aaa
lea
push
add
xorl
pop
and
mov
dec
insl
hlt
inc
leave
add
ljmp
iret
int
dec
push
sbb
dec
clc
in
js
inc
add
jno
inc
inc
addr16
insl
xchg
insb
cmp
in
adc
xlat
sub
leave
fldt
xchg
add
int
sahf
cmp
sbb
xlat
jle
xchg
loop
cmp
in
adc
shll
jecxz
sbb
dec
pop
loop
movsb
sub
pop
ljmp
add
or
rcl
repz
mov
lahf
xchg
sarl
lcall
stos
fistpl
mov
daa
js
dec
lods
pushf
mov
push
pop
scas
or
add
popf
outsb
cmp
mov
dec
lods
or
int3
jae
sbb
cmpsb
sub
mov
dec
adc
mov
movsl
aad
js
pop
ror
adc
out
mov
shl
mov
xchg
test
das
mov
cmp
add
mov
cld
insl
adc
and
or
lock
add
jge
mov
mov
hlt
in
ret
jno
mov
push
cmp
lods
jmp
loopne
out
jecxz
push
dec
add
sbb
stos
fidivrl
sti
out
push
lods
test
cmp
cld
loopne
sti
ljmp
mov
push
test
xor
or
xlat
dec
fdivl
in
add
div
and
inc
sbb
dec
and
sti
nop
lds
jno
push
rorb
cmp
push
add
jns
inc
jb
cwtl
mov
inc
in
lcall
filds
mov
push
pop
and
lock
xchg
xchg
test
pop
mov
shl
out
enter
fstps
out
in
jo
dec
pop
mov
mov
hlt
push
push
add
dec
popf
cmpsl
popa
add
mov
mov
pop
mov
push
inc
or
cli
aaa
lea
or
push
inc
and
push
mov
cmp
incb
pop
jae
loop
xor
in
pop
mov
shlb
lea
rolb
pop
sbb
ds
cwtl
cmp
out
and
sbb
int3
and
xor
repnz
mov
leave
and
mov
out
lahf
mov
movsb
js
sbb
pop
inc
and
pop
cmp
insb
mov
aam
out
scas
pop
add
hlt
pop
add
xor
lret
sub
loop
fwait
jle,pt
cltd
push
enter
dec
cltd
sub
and
icebp
pop
pop
adc
jmp
add
add
out
pop
out
stc
out
xchg
pop
xor
stos
insb
jp
repz
repz
es
sub
es
lret
in
jg
lods
jno
popa
mov
mov
xchg
cmp
test
outsb
sub
push
ljmp
sub
add
mov
cmp
and
jb
add
repz
add
sub
and
push
xor
incl
outsl
push
cwtl
dec
popa
insb
rorl
aas
in
jae
ljmp
ret
cmc
std
mov
pushf
mov
loope
mov
cmpsb
jge
fisubrl
imul
push
inc
add
std
int
push
insl
jmp
and
loopne
add
aaa
leave
rorl
jne
lds
inc
sahf
ret
ja
dec
add
sbb
sub
sbb
adc
dec
cwtl
sbbb
pop
rcrb
mov
mov
std
cltd
enter
pusha
add
jne
andl
ja
repnz
cmp
inc
cmp
add
mov
data16
call
jmp
inc
in
stc
ss
ljmp
inc
and
stos
movsl
lea
mov
loope
mov
add
push
and
push
pop
mov
les
or
or
stc
xor
in
insb
adc
mov
data16
mov
jge
and
inc
cmc
add
cltd
push
mov
push
push
cmp
das
cmp
jecxz
mov
and
pop
or
mov
rclb
mov
fdivp
ret
cwtl
or
fsubr
or
loope
push
std
push
bound
add
mov
mov
in
or
ret
enter
loope
notl
mov
xchg
lods
push
movsl
hlt
jae
sbb
sar
in
mov
filds
scas
inc
xor
cld
stos
dec
add
jb
push
inc
fstps
lahf
sbb
pop
xchg
out
mov
or
sbb
imul
rcr
fs
loop
rcr
ss
mov
dec
sarb
imull
sbb
and
mov
add
movsl
jge
jns
xchg
mov
add
and
xor
jae
sbb
stc
enter
in
outsl
sub
inc
lea
hlt
sbb
lock
xor
dec
add
mov
das
mov
cmp
scas
fimuls
int3
std
das
jl
xchg
jb
mov
mov
push
jb
sbb
test
xchg
aad
cmp
mov
out
stos
sbb
fcoml
lock
or
sar
insb
or
sub
push
fwait
mov
add
dec
movsb
jmp
mov
aas
es
popa
cwtl
jl
add
add
push
xchg
notl
push
lret
test
add
dec
cmp
adc
dec
lret
mov
loopne
movb
lret
mov
jmp
sub
sub
mov
inc
and
push
call
test
jmp
push
dec
inc
lea
das
dec
lret
and
repz
ss
and
repnz
jp
stos
sub
add
inc
xchg
jne
push
pop
jnp
and
into
push
add
pop
or
push
sub
add
sub
pop
js
lods
shrl
mov
and
lret
add
xchg
out
jp
daa
and
std
xor
mov
rcl
xchg
fildll
mov
sub
and
jbe
ficompl
data16
add
lret
sar
dec
mov
jnp
pusha
add
sub
xor
pop
adc
push
pop
int
nop
inc
add
mov
nopl
jmp
or
sub
xlat
pop
shrl
ja
xor
lcall
es
rcr
or
cli
std
add
add
loop
std
cmp
cmpsl
sub
gs
aaa
jo
cmp
push
shrb
test
pop
gs
pop
and
std
jnp
cmp
enter
and
mov
bound
roll
pop
xchg
jbe
test
add
inc
jl
test
sbb
aas
sub
sbb
imul
flds
dec
pop
mov
aaa
cwtl
aad
add
cmp
cmpsb
inc
inc
in
pop
mov
fs
fstpt
rorb
and
add
push
push
mov
jmp
jle
mov
orb
mov
and
lock
add
int
loop
jmp
add
pop
lahf
jmp
push
mov
sub
add
es
jns
fisubl
inc
loopne
mov
cmp
popf
repnz
jne
xchg
and
enter
or
inc
add
inc
and
sbbl
add
mov
leave
int3
xchg
inc
outsb
aad
sub
add
xor
add
pop
mov
pop
push
sub
add
cmp
out
mov
repnz
arpl
aam
or
les
add
add
stos
clc
cmpsb
xchg
adc
sti
decb
xor
pushf
or
pop
into
mov
leave
mov
and
xor
jecxz
or
jl
jecxz
aad
mov
push
sub
clc
sub
add
or
adc
lret
xchg
cmp
sub
add
lret
in
xchg
and
jne
into
lret
mov
add
push
mov
movsl
or
jns
in
mov
jno,pn
addl
fmul
xchg
push
add
xchg
lods
dec
fsubrs
add
jb
data16
mov
or
add
xor
xchg
rcrb
sarl
or
cmp
mov
stos
adcb
add
mov
shl
mov
pop
inc
fwait
pop
ret
aad
test
pop
cmp
jne
jo
dec
add
ret
mov
imul
leave
xlat
push
mov
push
fwait
adc
or
mov
and
jg
stos
in
sbb
arpl
mov
sub
mov
sub
push
ret
mov
jnp
fcomp
add
jae
mov
mov
rcll
dec
out
shrl
push
das
into
pop
jl
mov
adc
push
push
xor
and
int
test
fs
pop
sahf
mov
push
into
shl
xor
fnsave
and
daa
ret
xchg
bswap
stos
adc
mov
movsb
or
insb
mov
cli
stos
fdivr
mov
mov
movsl
and
add
jle
xor
and
andb
or
mov
add
loop
add
mov
call
divb
jbe
jns
test
xor
je
push
jl
test
lds
sbb
jne
add
push
jmp
cwtl
pop
hlt
das
js
inc
popf
or
outsb
push
popa
aas
dec
dec
sarb
add
mov
imul
xchg
roll
and
push
imul
or
bound
cmc
popf
into
test
inc
test
cld
cmp
xlat
push
jae
je
add
fbstp
test
dec
mov
mov
add
std
imul
sub
rcll
pop
lahf
dec
scas
lahf
pusha
add
and
idivl
inc
enter
xor
mov
fsubr
test
pop
add
cwtl
xchg
fwait
inc
or
das
inc
fisubrs
int
or
pop
or
cs
or
pop
mov
add
lret
mov
mov
mov
mov
fs
pop
mov
cmp
mov
cmpl
imul
sbb
cli
adcb
ror
sub
mov
push
xor
in
int3
mov
ret
or
inc
jg
ret
or
shrb
loopne
mov
push
inc
jne
sbb
push
lds
clc
push
arpl
push
push
cmp
xor
mov
loope
push
out
sti
aas
mov
enter
and
add
cmp
call
sbb
icebp
loop
mov
mov
sbb
xor
jp
ja
fistl
fs
fstpt
mov
mov
shrl
add
adc
loopne
xchg
pop
inc
scas
iret
iret
jmp
pusha
add
rclb
add
pop
pop
add
dec
and
ljmp
repnz
and
cmp
dec
fmuls
dec
mov
jmp
cmc
or
jae
outsb
pushfw
cmp
add
add
fcomps
and
arpl
dec
mov
popfw
das
add
adc
pusha
add
lahf
adc
sub
mull
in
cmp
stc
das
push
notb
nop
icebp
pop
mov
sbb
cmp
fxch
dec
loope
shlb
mov
add
inc
add
jg
popf
aam
add
xchg
dec
cmp
lock
loopne
movsl
add
stc
mov
inc
stos
push
mov
add
clc
pop
add
xchg
jp
cli
inc
movsb
pushf
fcmovnb
ss
ret
add
cs
mov
test
shr
add
or
aas
sete
mov
cmp
sub
mov
mov
pop
mov
add
xor
add
cltd
les
sar
fsincos
stos
lea
sbb
lock
rcl
dec
loop
int
xchg
clc
push
or
dec
add
lcall
fsubs
dec
xor
and
cmp
arpl
stc
in
adc
add
mov
xchg
rcrb
cmp
rcrl
xchg
adc
mov
push
inc
push
fiaddl
sub
mov
mov
pusha
add
out
add
enter
test
cmp
add
or
mov
and
lock
cmc
sub
mov
sub
je
stc
inc
dec
add
jae
pop
in
mov
add
mov
call
cli
out
fldl
mov
popa
es
lret
lods
jne
test
stos
cmp
mov
cwtl
scas
pop
gs
and
cmp
xchg
shll
pop
fsubr
xor
ljmp
icebp
out
lods
leave
clc
mov
and
testl
mov
xchg
xchg
popf
cs
filds
sbb
pusha
add
dec
dec
dec
fcmovnbe
pop
repz
push
pop
xor
imul
add
ficomps
popf
cmp
push
jae
add
and
cmpsl
in
adc
sub
fstps
shr
xchg
fwait
out
call
dec
add
loope
in
pop
sbb
repz
out
leave
out
sbb
stos
xchg
add
fcoms
pusha
add
pop
add
add
call
loop
imul
xor
inc
xchg
pslld
lds
div
cld
inc
add
cmp
call
add
mov
pop
lret
add
fidivs
mov
dec
adc
les
xchg
aas
pop
xorl
mov
add
es
inc
push
int
into
jno
push
rep
lret
data16
fstpl
add
xorl
and
and
push
inc
cmp
mov
pop
mov
mov
sub
dec
add
mov
mov
repnz
mov
inc
frstor
lret
shrd
pop
jg
pop
cmc
stc
pop
adc
add
push
add
lds
andb
cli
sbb
mov
xlat
roll
cli
shll
inc
sub
in
sti
dec
push
sti
jb
adc
lret
arpl
cmpsl
ljmp
xor
mov
sti
sti
mov
xchg
sub
fiaddl
push
jg
add
cmp
xchg
pop
jge
out
dec
out
push
dec
add
xchg
dec
xor
repz
dec
scas
push
movsb
jno
jmp
xor
bound
add
shll
addr16
jecxz
mov
out
loope
add
sub
repnz
stos
cmp
cmpsl
popa
movsl
jno
adc
pop
jmp
fcomps
je
popa
cmp
xor
adc
clc
push
push
orl
or
pop
fisubrs
scas
cmpsl
lret
cmpsb
push
adc
cmp
add
popf
mov
inc
data16
and
scas
repnz
add
xchg
testb
mov
lods
pop
add
or
sub
in
test
add
pushl
idivb
push
fsubr
movsb
mov
pop
ss
shlb
cmc
cmpsb
lea
lcall
dec
mov
shrl
xchg
mov
xlat
popa
or
dec
mov
mov
mov
insb
test
or
call
sub
lret
mov
orb
mov
jo
cmp
fistpl
add
inc
ja
cmp
cmc
mov
and
sti
inc
add
push
push
and
lock
mulb
mov
or
notb
mov
movsb
add
adc
lock
push
cmp
jbe
sub
inc
notl
xor
imul
cmp
xlat
add
jge
scas
daa
sbb
insb
repz
xchg
js
or
call
test
jnp
ss
js,pn
pop
xor
add
mov
popa
fcmovu
xchg
and
add
jnp
sahf
cltd
mov
mov
dec
adc
inc
xor
sbbl
mov
and
jle
ss
sbb
movsl
mov
add
movsb
movsb
lods
in
push
jl
fidivrl
mov
js
push
mov
shlb
vpmaxub
add
sub
sbb
hlt
sti
dec
cmp
mov
xchg
xchg
divl
add
add
sbb
mov
push
add
clc
and
jle
xchg
and
lcall
push
mov
fstps
fcomps
jmp
jnp
add
lcall
adc
add
ljmp
push
and
lahf
test
std
jg
mov
arpl
dec
push
fiaddl
add
fwait
gs
xchg
aad
add
xchg
mov
mov
jmp
inc
add
mov
dec
pop
inc
jns
pop
mov
cmp
ljmp
out
add
sub
jne
orb
inc
aaa
inc
ljmp
inc
mov
push
add
test
sbb
leave
and
pop
mov
xchg
pop
add
mov
add
jns
aas
push
hlt
in
rorb
mov
gs
mov
and
fiaddl
jmp
cwtl
and
in
test
loope,pt
xor
push
aaa
sbb
adc
mov
xor
push
stos
pop
xchg
daa
cmc
ja
je
clc
pop
mov
add
into
mov
mull
xchg
fisubrs
push
add
addr16
mov
rol
mov
popa
xor
pop
mov
pop
dec
xchg
std
pop
mov
outsl
rcrl
add
sahf
and
stos
stos
jb
fisubrl
lahf
xchg
insb
mov
add
or
fsubrl
stc
xchg
pop
xchg
xchg
cld
push
add
inc
loop
lds
outsl
sbb
adc
jecxz
std
movsb
fdivp
fisubs
ret
dec
test
repnz
mov
mov
dec
xchg
mov
push
pop
push
out
add
clc
mov
adcb
add
add
add
mov
scas
cmp
sub
mov
add
lea
and
pop
out
sbb
jl
mov
pop
lds
mov
push
pop
shlb
out
dec
dec
add
shll
add
rcrl
mov
inc
outsb
lcall
add
mov
add
xor
inc
xchg
lcall
dec
push
adc
xchg
mov
idivb
xor
xor
lret
or
add
push
test
push
mov
es
mov
adc
cmc
adc
ljmp
test
inc
add
mov
movsl
mov
insl
add
mov
or
add
mov
adc
add
fs
mov
and
push
aas
mov
inc
jbe
push
cmc
icebp
dec
cmp
in
aaa
fidivl
add
mov
push
push
jg
add
mov
cmp
xchg
and
imul
add
add
jae
stos
jmp
pop
sub
lret
rcrl
mov
add
dec
psllw
sbb
add
pop
clc
mov
xchg
ss
roll
insb
adc
pop
add
call
idiv
cmp
imul
andl
and
js
push
out
add
cmc
sbb
pusha
add
scas
aas
jnp
cmp
mov
imul
push
dec
pop
add
fst
ljmp
add
xchg
jnp
xchg
cmpsb
mov
or
inc
stos
cmpsb
fiaddl
add
insl
xor
mov
movsl
and
imul
into
test
sub
jb
add
or
sahf
push
fdivrl
testb
lret
sbbl
movl
pop
adc
and
mov
pop
and
cmp
ljmp
xor
mov
data16
std
push
or
les
add
inc
and
vcmpsd
xchg
pushf
cmp
adc
sbb
sub
test
icebp
in
repz
mov
aad
adc
adcl
fnstsw
ret
test
push
jecxz
fldt
icebp
inc
adc
idivl
xor
in
and
adc
dec
gs
ret
jae
xchg
mov
not
jmp
ss
in
cmp
jns
add
push
mov
sbb
out
test
test
jne
sbb
es
xchg
gs
add
ret
add
lahf
lret
hlt
imul
outsl
or
cmpsb
adc
insb
sbb
nop
add
jne
sub
sub
in
jnp
movsb
mov
inc
jno
jnp
push
add
mov
pop
adc
mov
pop
push
and
test
inc
pop
stos
aad
or
mov
mov
xor
dec
scas
sub
out
or
call
fs
dec
int3
testl
mov
sub
daa
cmp
shll
inc
xor
add
inc
loope
popf
or
movsb
adc
shl
jae
ss
stos
repnz
andb
add
daa
jle
push
sahf
ficoml
or
mov
scas
scas
xor
sub
insl
mov
add
or
add
mov
jl
dec
fadds
add
mov
and
sub
and
lea
mov
add
add
fnstenv
lret
jecxz
and
jmp
push
outsb
add
nop
jnp
stos
pop
cmp
mov
add
mov
pusha
add
in
cs
enter
or
adc
ja
push
dec
inc
mov
lds
jp
test
leave
pop
mov
call
fldenv
lret
pop
bound
repnz
jns
add
fcoml
aam
jle
jb
xorl
jb
movl
sbb
add
mov
jp
fbld
insl
mov
cmp
jp
ss
movsb
jmp
ffreep
adc
movl
inc
rcrl
sbb
jp
gs
movsl
xor
cmpsl
cmp
xor
sbbl
jecxz
mov
popa
fildl
adc
inc
movsb
hlt
stos
dec
mov
push
fsubrs
xchg
ret
sbb
add
push
push
test
hlt
adcl
rorl
sbbl
mov
sbb
and
xor
mov
add
test
sub
ret
sbb
cmp
out
imulb
movsl
pop
mov
pushf
sti
jnp
inc
subb
xchg
and
mov
cs
in
and
jno
call
adc
mov
sbb
test
stos
inc
gs
mov
std
mov
xlat
pop
fistl
add
orps
fnstcw
bound
sbb
xchg
shll
repnz
dec
add
mov
out
sti
dec
inc
jmp
notl
jnp
inc
add
testb
push
add
adc
loope
add
into
shlb
jle
pop
rep
call
push
xchg
adc
lret
mov
jg
bound
lock
ret
push
add
cmc
shll
pop
mov
xchg
loope
popa
int3
sbb
les
jo
dec
or
xor
pop
loop
rcll
jo
push
add
xchg
cmpsb
out
mov
sbb
sub
pushf
ljmp
stos
dec
sub
add
add
mov
add
icebp
add
cwtl
sbb
inc
jb
ret
mov
stos
je
or
add
clc
mov
int
cmp
xchg
dec
add
mov
push
cmp
imul
mov
inc
push
cmp
push
fimuls
clc
cltd
push
call
repz
sbb
add
pop
inc
shrb
psrlw
ljmp
in
lcall
push
js
dec
add
dec
in
inc
lret
push
imul
jb
add
add
ret
jns
mov
sbb
lcall
pop
out
fistpll
sub
test
xlat
into
lahf
xchg
imul
in
andl
iret
cli
int3
pop
outsb
or
scas
clc
test
xlat
shl
push
add
cwtl
data16
out
pop
add
jle
sbb
jl
rorl
add
jecxz
popa
mov
push
lea
mov
hlt
ds
pop
jbe
add
xchg
out
xor
xchg
movsb
push
inc
idivb
jl
insb
sti
ret
stos
mov
xor
roll
push
pop
add
push
ret
hlt
loopne
sbb
test
dec
in
cmpsl
jmp
add
sub
cmpb
insl
mov
xchg
lods
cwtl
aam
and
shrb
inc
jg
scas
sbb
subb
jmp
add
sub
cmc
add
mov
roll
xlat
outsl
xor
outsb
xor
aas
adc
sbb
je
les
inc
xchg
pop
pop
ret
mov
aaa
mov
and
push
mov
inc
jb
aas
dec
jae
add
imul
pop
mov
inc
lock
int3
imul
mov
ja
mov
int
mov
sub
mov
adc
add
imul
lea
popa
cltd
mov
shll
add
lea
hlt
js
xchg
pop
arpl
cs
into
popa
xor
xchg
and
out
ret
add
lods
xor
std
fwait
enter
out
lret
mov
outsl
cs
adc
mov
insl
pop
movsb
cmp
jecxz
add
xchg
loop
or
jge
pop
mov
jg
stos
cmpl
mov
mov
ja
and
mov
xchg
xor
add
repz
scas
mov
mov
mov
daa
and
jb
mov
push
cmc
push
std
sbb
fsubp
sbbl
js
lahf
test
cmpsl
out
pop
cli
cmp
push
cmp
xchg
adc
sti
mull
push
cmp
repz
lret
jbe
add
add
pusha
add
add
pop
pushf
fldenv
mov
or
ret
xor
xchg
arpl
test
sbbl
iret
mov
sti
popa
pop
add
xchg
inc
pop
arpl
mov
or
add
xchg
cmpsl
ret
clc
icebp
xchg
push
arpl
push
test
out
push
lock
push
xor
movsl
xchg
add
push
jns
rcl
int3
xor
lret
sub
int3
out
push
cmpsl
stos
lret
xor
in
add
mov
mov
popa
jae
jge
xor
cmp
filds
sbb
clc
call
push
sbb
sbb
in
cs
sahf
sahf
lds
cmp
cmp
lea
stos
nop
add
in
pop
jae
outsl
pop
xor
cmpsl
jns
cmp
inc
adc
mov
add
movsb
aaa
mov
repz
movsl
dec
pusha
add
add
xchg
push
pop
std
test
fdivs
inc
jns
das
and
jmp
cmp
add
add
insb
pop
or
outsb
call
push
or
mov
rclb
add
add
cli
mov
repnz
out
popa
push
jg
pop
push
int3
push
mov
les
sti
inc
push
mov
fs
inc
mov
pop
pop
lods
movsb
jl
je
xchg
mov
xor
pop
adc
inc
lods
subl
and
in
rcrb
sahf
gs
jl
movsb
aad
and
dec
iret
incb
outsb
add
lret
clc
lret
inc
xchg
mov
in
aaa
mov
and
pushf
fcompl
add
dec
dec
lock
xor
loop
dec
jo
lods
lcall
lahf
xchg
add
subl
daa
jno
dec
shrl
add
icebp
mov
sbb
outsl
jle
test
cmc
gs
cs
into
add
subb
aam
push
mov
mov
or
dec
cmp
lea
add
stos
cmp
mov
and
sbb
inc
add
cmc
xor
idivb
fcmovnu
jmp
mov
cmpsb
shll
icebp
and
jns
cmpsl
rcrl
mov
adc
jne
sub
gs
fsub
enter
jge
dec
mov
adc
adc
ja
add
xor
add
jle
scas
cltd
add
inc
sahf
sarb
jecxz
adc
sub
fsubr
sub
cmp
fnstsw
push
sbb
mov
mov
and
lds
clc
dec
cmc
pop
push
call
nop
mov
sub
insb
xchg
dec
inc
cmp
fwait
xchg
cmpb
outsl
scas
insl
divb
scas
xor
add
add
cltd
mov
mov
push
filds
loope
xor
push
jmp
pop
rorb
mov
sub
cmp
scas
sub
mov
and
jo
cmp
mov
pop
lds
mov
out
cmp
push
and
inc
fs
add
hlt
pop
sbb
xchg
cmpsl
inc
adc
sub
sub
pop
xor
mov
mov
jge
test
mov
and
jge
ja
inc
in
cld
sti
pop
xchg
mov
addr16
mov
mov
and
adc
jmp
add
idivb
and
loop
jmp
mov
push
push
mov
sub
add
mov
cli
mov
cmpsb
cwtl
jge
push
adc
test
lret
add
sbb
fists
add
add
add
pop
test
sbb
icebp
push
dec
aaa
mov
add
out
dec
add
cmp
cmpsb
push
mov
ja
andl
fwait
pop
cmpsl
sbbb
inc
adc
pushf
xor
push
aaa
pop
mov
cmpsl
leave
repnz
inc
jecxz
add
loope
lods
xchg
sub
jb
add
mov
mulb
xor
out
cli
loope
mov
and
push
add
and
dec
cmc
jl
jnp
scas
adc
add
cmpsl
pop
popf
pop
and
add
jno
pusha
add
ja
xchg
lret
xchg
cmc
cmp
cmp
pop
add
fwait
testb
pop
fwait
shll
incb
jbe
push
mov
das
pop
cmp
shlb
push
xchg
or
ret
adcl
or
and
fldenv
xchg
mov
xchg
mov
xchg
add
and
outsl
and
xor
inc
mov
push
push
mov
testl
dec
push
jno
je
cmp
cmc
mov
pop
xor
mov
bound
push
out
push
jg
cmp
lret
mov
outsl
clc
hlt
xchg
lcall
lahf
popa
sub
insl
loopne
mov
sub
jmp
add
daa
nop
int
push
fwait
push
xor
jne
movsl
imul
pop
into
xchg
jne
jo
add
add
mov
loopne
jmp
ss
ret
add
stc
push
clc
mov
add
dec
loope
add
xchg
xchg
pop
add
in
jl
jne
pop
and
xor
inc
inc
enter
lahf
mov
aam
adc
jmp
popl
cmp
test
sub
icebp
cltd
negl
cmpsl
rcr
cmc
fists
and
adcb
cmc
cli
testb
imul
xchg
pop
xor
push
xorb
sub
mov
inc
push
sub
sahf
add
scas
push
add
shll
clc
pop
jg
dec
call
in
xchg
insl
cmp
jle,pn
cmp
inc
add
movsl
jg
test
lea
push
dec
dec
jo
insl
pop
pop
fnsave
mov
and
mov
cld
fs
in
enter
sbb
out
pop
add
lret
iret
cli
pop
sbb
mov
rcrl
ds
lret
or
add
xor
loope
cmp
lret
stos
cltd
data16
jl
adc
add
aam
sub
orl
add
push
loopne
mov
lock
dec
pop
mov
or
sahf
or
roll
int3
sar
out
xchg
xor
push
inc
dec
add
xlat
andb
dec
decb
sbb
xlat
outsb
bswap
out
xorl
cld
rcll
mov
int3
loope
les
xor
xchg
or
ja
pop
sbb
pop
sahf
fadds
xlat
pop
test
cmp
mov
dec
add
int
aas
or
and
xchg
mov
lea
ja
in
cmp
and
loop
xchg
jno
mov
inc
cmc
ljmp
push
ficompl
call
xor
mov
and
and
sub
testb
pop
add
fistps
pop
mov
sti
addr16
stos
ffreep
stos
mov
push
jp
hlt
add
int3
mov
call
fldt
mov
call
and
lea
jo
lea
inc
add
xchg
sbb
xor
and
push
movsl
mov
xor
loope
fsts
pop
pop
pop
mov
pop
mov
fsincos
push
dec
loop
sub
mov
cmp
and
mov
int
add
jb
addl
cld
xchg
xrelease
dec
stc
fsubl
std
mov
add
lock
lret
sub
mov
fisubs
push
jo
fsubs
inc
jge
sarl
dec
add
sti
pop
int
pop
fisubs
jl
out
les
add
jo
lods
scas
lret
inc
fs
add
or
mov
fs
in
sbb
mov
mov
aas
fs
mov
fstpl
nop
xchg
lahf
mov
in
push
xchg
testb
sub
push
mov
sbb
add
jns
add
jns
add
pop
pop
lahf
jmp
fisubrs
mov
add
jecxz
and
cwtl
les
cmp
jo
add
stos
insb
pop
jne
inc
dec
out
jae
pop
imul
hlt
pop
cmp
cld
pop
add
sub
orl
aam
aam
loop
mov
pop
shll
out
add
and
or
sbb
das
dec
adc
cmp
into
sbb
sub
js
or
or
add
add
adc
cmc
mov
fcoml
cmp
jne
cli
dec
movsb
push
jge
enter
jns
mov
mov
das
aam
sti
dec
pop
dec
mov
jo
cld
sbb
add
sbb
mov
cmp
rclb
mov
out
and
aam
rcrl
push
mov
inc
mov
stos
out
push
add
stc
sbb
sub
mov
sbb
movsl
mov
inc
in
test
hlt
test
jecxz
or
push
inc
add
rorb
add
cmc
adc
movd
testb
subl
xchg
pusha
add
fidivs
cltd
fcomp
ret
adc
test
scas
ds
add
das
sbb
add
fldt
dec
mov
pop
daa
lods
xchg
jae
push
cld
jns
cli
xor
pop
sbb
adc
leave
aam
or
push
arpl
xchg
daa
sub
xchg
cwtl
push
das
ljmp
sub
int
adc
xchg
cmp
mov
push
sub
dec
add
xor
pop
push
adc
adc
add
arpl
sbb
and
dec
xor
fidivrl
add
xchg
or
imul
repnz
jns
sub
push
mov
iret
incb
sbb
mov
inc
cmp
dec
add
push
xor
notl
sbb
cmp
xlat
add
cmpsb
adc
out
xorl
filds
loop
push
addr16
mov
jns
mov
add
rcrb
jno
pop
and
add
jne
lea
stc
jmp
repz
adc
pop
int
add
pop
and
pop
sub
or
aas
lock
mov
add
sub
dec
shlb
es
pushf
fstpt
cltd
push
std
ds
outsl
sub
out
jle
dec
popf
cltd
test
ja,pn
xor
aaa
or
mov
sub
jae
loop
sbb
cld
hlt
outsl
mov
bound
jb
xchg
stos
xchg
out
es
pop
jns
cmp
test
mov
jp
jmp
mov
sbb
imul
sahf
pop
ret
inc
add
shrl
imul
popa
cmc
fisttps
mov
xlat
pop
outsl
push
pop
jge
push
popa
add
andl
loop
adc
or
jmp
pop
lcall
int3
shll
ret
mov
mov
ret
icebp
push
leave
mov
mov
mov
jo
dec
add
pop
sti
mov
jl
add
popf
or
or
mov
cld
sti
sub
mov
es
jg
out
imul
mov
pusha
add
enter
loopne
jns
or
and
dec
sbb
gs
dec
sarb
call
pop
sub
push
int
cmpb
scas
ja
and
fwait
lcall
call
rorl
push
cmpsl
adc
lods
out
addl
or
ret
fwait
adc
add
inc
shll
sub
add
cs
inc
add
xchg
cmp
add
leave
into
andl
jl
test
jae
ss
sub
aam
cmp
loop
enter
test
mov
das
mov
add
out
dec
out
sub
fldt
out
xchg
icebp
scas
pop
push
jge
jae
pop
add
fildll
pop
clc
jl
shrb
jle
dec
jo
movsb
stc
sbb
test
jo
imul
add
arpl
addb
mov
adc
out
fadds
dec
cmpsb
and
jb
sbb
cld
and
pop
mov
or
das
pop
cs
scas
arpl
sbb
add
je
into
icebp
lock
add
mov
aaa
out
or
xor
cmpsb
or
jne
xlat
lods
cmp
mov
and
mov
cmpsb
lcall
jge
fisubrs
or
hlt
inc
mov
cmp
cmp
add
fwait
add
mov
mull
ret
jno
roll
xchg
cmp
imul
lea
push
gs
fstps
jl
jns
xchg
add
xlat
pop
mov
jb
adc
add
movsb
movsl
dec
and
mov
inc
add
outsl
or
fnstcw
mov
pop
or
cmc
or
add
lods
xor
pop
push
enter
mov
mov
push
push
scas
lods
push
aas
test
hlt
sti
mov
aaa
mov
nop
xchg
add
clc
sub
ljmp
add
