inc
inc
inc
out
xchg
push
out
adc
out
out
out
out
data16
dec
jb
jb
out
out
out
pop
or
mov
prefetchnta
pop
pop
ss
lahf
addb
sub
cwtl
cwtl
jae
jae
cmp
out
imul
out
popa
mov
rolb
test
repz
out
aad
out
jnp
cmp
cmp
xchg
mov
mov
mov
out
out
out
out
out
out
out
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
loop
loop
loop
fldenv
in
adc
add
add
popa
popa
daa
popf
es
pop
pop
pop
pop
jle
xchg
popa
popa
int3
push
imul
out
add
add
pop
pop
pop
notl
decb
in
mov
lret
dec
xor
out
out
sub
addr16
push
push
push
sbb
repz
ja
ja
xor
xor
leave
outsb
pushf
pushf
pushf
div
add
push
out
out
out
out
inc
inc
inc
cli
jge
out
out
out
out
out
out
adc
push
std
es
pop
pop
push
push
mov
adc
mov
rol
dec
mov
cmp
cmp
scas
inc
inc
push
fstp
fldl
mov
out
out
out
out
out
cmp
cmp
adc
lods
mov
mov
hlt
push
push
push
popf
out
call
aas
mov
mov
enter
sti
ss
stos
adc
hlt
hlt
inc
lods
pmaxsw
icebp
icebp
out
mov
mov
mov
jbe
mov
ficoms
push
bound
pop
dec
push
push
out
out
fmull
addl
inc
sbb
sbb
lds
cld
cld
cld
outsb
xor
loope
loope
loope
aam
stos
shrl
and
and
and
imul
dec
dec
pop
pop
sbb
mov
mov
fcmovnu
fcmovnu
leave
leave
out
inc
inc
inc
sub
xchg
jnp
push
sbb
push
push
mov
adc
mov
sti
sbbl
adc
push
xor
push
push
push
test
jae
popf
popf
popf
sub
in
in
adc
xchg
mov
out
out
jns
dec
addb
add
inc
inc
or
or
or
pop
pop
pop
pop
ud1
out
out
push
xchg
xchg
xchg
xchg
xchg
xchg
xchg
inc
mov
cs
roll
inc
inc
dec
dec
pushf
pushf
pushf
pushf
pushf
pushf
pushf
mov
aaa
ret
ret
ret
ret
ret
ret
ret
popf
popf
popf
stos
push
push
mov
sbb
xadd
loope
loope
mov
nop
arpl
mov
lods
lods
lods
and
bound
dec
add
test
mov
adcb
jp
xlat
inc
sbb
xor
inc
add
add
incb
aas
aas
les
adc
out
cmp
cmp
cmp
imul
sbb
mov
int
int
pop
addb
out
out
out
out
imul
ret
ret
aaa
insl
insl
insl
insl
dec
mov
aad
fcompl
out
out
mov
rcl
ret
xchg
xchg
xchg
loop
dec
dec
dec
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
sahf
sahf
sahf
sahf
inc
adc
popf
popf
or
sub
sbb
ret
ret
ret
ret
ret
ret
pop
out
out
nop
out
mov
aam
data16
xchg
xchg
jmp
iret
addb
or
into
std
std
jg
icebp
icebp
icebp
out
out
jp
fistpll
jge
jge
push
out
out
in
in
stos
add
bound
jno
jno
jno
gs
pop
pop
mov
repz
add
adc
adc
icebp
movsb
adc
sti
sti
sti
out
ljmp
mov
inc
movsb
movsb
arpl
rcl
lret
lret
jg
jg
jg
js
and
and
in
add
jbe
jbe
jbe
lds
inc
inc
pop
fldl2t
jmp
add
jno
inc
sti
es
mov
push
push
fs
jmp
mov
fsts
or
or
adc
and
rcl
or
and
and
int
fisttps
or
or
or
or
ss
xchg
adc
push
je
je
repnz
mov
fisubrs
arpl
sub
sub
into
lods
lods
lods
xor
mov
into
inc
cmc
cmc
xlat
jl
jl
xor
pop
xchg
xchg
or
cmp
mov
push
sarl
out
jg
icebp
rol
scas
scas
scas
scas
pop
pop
pop
push
mov
xchg
leave
leave
in
in
in
in
fsubl
sub
stc
stc
int3
int3
int3
ljmp
push
and
nop
nop
inc
sbb
insl
cmp
mov
mov
push
push
push
sbb
test
test
test
test
arpl
icebp
outsb
mov
out
out
out
ss
stos
stos
stos
stos
push
insl
insl
insl
insl
leave
leave
leave
leave
and
loopne
mov
mov
addr16
sub
sub
sbb
inc
inc
mov
shll
sub
sub
sub
jmp
dec
mov
and
mov
out
out
addr16
loopne
loopne
mov
adcl
mov
mov
aas
push
inc
inc
push
and
and
or
or
nop
loop
loop
sub
xchg
xchg
xchg
xchg
mov
pop
xchg
xchg
ss
daa
daa
dec
dec
dec
cmp
sbb
mov
in
sub
ret
out
fwait
stc
xchg
xchg
jmp
je
dec
dec
dec
dec
insb
insb
popa
popa
popa
icebp
dec
scas
scas
rclb
mov
cmpsl
cmpsl
je
mov
out
out
out
out
out
out
out
in
cmp
mov
mov
dec
dec
or
pop
pop
pop
pop
mov
mov
sub
enter
fcmovnb
cmp
push
push
push
repz
and
mov
cmp
ja
ja
out
out
adc
adc
adc
xchg
mov
inc
pop
pop
pop
mov
hlt
call
int3
sub
lret
int3
dec
dec
dec
out
nop
and
dec
dec
dec
xchg
xchg
xchg
inc
inc
inc
inc
inc
inc
iret
iret
iret
iret
mov
clc
stos
mov
out
out
add
movsl
jp
xor
xor
pop
pop
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
jmp
rcl
xchg
xchg
out
out
out
out
out
cmp
addl
push
push
mov
loope
push
push
push
push
push
push
jmp
xchg
xchg
xchg
xchg
xchg
xchg
xchg
scas
scas
scas
daa
mov
mov
stos
xorb
cmp
mov
pusha
pusha
pusha
inc
inc
inc
xor
test
push
push
fs
xchg
push
sub
mov
mov
xor
cs
lret
repnz
xchg
in
mov
aas
jns
xchg
xchg
cld
cmp
sbb
lods
lods
lods
lods
sub
or
sbb
mov
mov
out
out
out
mov
xor
xor
xchg
xchg
xchg
xchg
addl
orl
ficomps
div
div
fistpll
dec
dec
dec
dec
dec
dec
dec
dec
mov
or
inc
mov
out
loope
sbb
push
mov
loope
insl
insl
push
push
mov
pop
jmp
dec
jmp
jmp
jnp
jnp
mov
lret
test
xchg
fldcw
fwait
fwait
fwait
pusha
addl
jne
jne
mov
sbb
dec
loope
sahf
sahf
stc
in
paddusb
faddl
pushl
jno
test
mov
les
pop
pop
sub
hlt
hlt
hlt
out
pop
pop
pop
or
pusha
pusha
pusha
pusha
pusha
adc
adc
adc
daa
daa
daa
daa
adc
adc
adc
cmp
adc
outsb
mov
inc
mov
sahf
sahf
stc
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
add
inc
lea
cmpsb
adc
mov
cmp
pop
or
push
leave
leave
leave
leave
leave
leave
leave
leave
mov
xor
adc
insl
insl
insl
insl
insl
addl
dec
dec
int
jg
out
out
test
inc
shll
in
in
push
xchg
iret
pop
cmpsb
cmpsb
out
out
out
out
addr16
push
push
mov
rcl
rcl
gs
push
push
push
push
push
sti
sti
sti
pushf
pushf
pushf
cmpsb
cmc
mov
imul
sub
sub
push
rcl
xor
jo
sub
aaa
cld
cld
inc
fs
push
push
xchg
pop
pop
inc
aad
aad
aad
jnp
push
in
jne
fwait
fwait
pusha
pusha
cmpsb
jo
adc
cs
popa
cmp
push
push
pop
addr16
push
push
push
jg
jg
sti
mov
or
xchg
push
and
mov
push
push
push
push
push
push
push
jbe
jbe
loop
in
test
push
pusha
pusha
pusha
push
aam
aam
movhps
pop
pop
pop
aaa
aaa
aaa
push
push
jg
aaa
aaa
mov
mov
and
add
add
or
lock
insl
insl
insl
test
jb
mov
mov
adc
iret
iret
mov
push
push
push
test
inc
inc
push
adc
jnp
jnp
inc
xor
jns
cmpb
and
and
mov
arpl
arpl
rol
rol
lods
lods
lods
test
dec
dec
mov
push
test
cmp
ret
inc
es
jg
cmp
cltd
jo
sub
sub
icebp
sbb
sbb
repz
xchg
xchg
xchg
jns
and
and
shrl
inc
inc
inc
insb
insb
insb
insb
nop
nop
nop
nop
cli
popa
popa
push
das
das
lcall
lcall
std
std
inc
pop
out
fmulp
and
add
mov
les
mov
out
dec
dec
sub
sti
sti
xor
xor
fcomp
mov
cltd
loop
es
push
push
xchg
xchg
mov
aas
aas
aas
aas
aas
aas
cmp
cmp
dec
inc
inc
inc
inc
in
in
xlat
cltd
cltd
adc
out
mov
pop
mov
jbe
leave
repnz
jge
lock
sbb
vphaddbw
push
push
xor
mov
mov
xchg
xor
das
int3
int3
int3
adc
test
stc
stc
xor
xchg
rol
sbb
sbb
adc
fnstcw
dec
dec
mov
mov
add
xchg
ret
jle
jle
adc
or
dec
dec
jl
pop
mov
cmpb
push
dec
dec
cli
scas
cmp
cmp
cmp
in
nop
nop
nop
int3
int3
int3
lods
lods
arpl
xor
lods
addb
out
out
out
mov
push
push
push
push
push
pop
pop
scas
mov
jg
cmpsb
cmpsb
ss
sub
lahf
lahf
lahf
lahf
lahf
div
pop
lea
xchg
mov
pop
out
out
out
fcmovu
cmc
cmc
lea
sub
iret
iret
nop
nop
inc
mov
xor
filds
mov
dec
repnz
or
add
es
xchg
jecxz
and
frstor
inc
push
push
push
push
mov
mov
push
push
push
rcrl
lods
daa
scas
add
scas
scas
fldt
lods
lods
lods
ret
mov
pop
inc
inc
inc
in
in
mov
mov
adc
stc
stc
sahf
sahf
cltd
sbb
cmpsb
mov
pusha
mov
inc
inc
lods
push
in
in
in
addb
cs
pop
pop
inc
sub
cmpsl
cmpsl
pop
pop
pop
dec
pusha
loope
push
push
fcomp
xchg
push
push
push
push
push
push
lret
lret
push
push
sbb
fwait
rcl
cmp
cmp
push
test
cmpsl
xchg
stc
stc
out
out
out
sub
sub
sbb
pop
lahf
lods
lods
lods
mov
in
sbb
sbb
ja
cmpsb
cmpsb
cmpsb
cmpsb
es
pop
pop
xchg
fwait
fwait
fwait
cmp
iret
or
dec
dec
dec
dec
dec
les
push
push
repz
sarb
push
push
push
add
push
sub
ss
test
mov
push
push
ret
push
shlb
mov
mov
popf
test
bound
fisttps
mov
fildll
pusha
sahf
sahf
movsb
jnp
aas
aas
xlat
inc
add
jecxz
jp
mov
mov
push
sub
adc
adc
dec
test
cmpsl
cmpsl
or
enter
aam
dec
int
mov
sub
mov
repz
cmp
inc
insl
cmp
aaa
call
jno
mov
xchg
pop
repz
push
push
cmp
leave
leave
jo
jo
jo
jo
dec
dec
inc
inc
inc
arpl
cmpsl
aam
lods
lods
aad
dec
dec
jmp
jmp
in
sti
in
in
fwait
fwait
fwait
out
out
push
sbb
les
mov
cmpsl
lods
fcom
rcl
js
inc
xor
leave
dec
insb
mov
ss
pushf
test
sub
add
jmp
scas
push
push
sahf
sahf
sub
hlt
hlt
hlt
hlt
hlt
hlt
cmp
xchg
mov
mov
xor
cmp
inc
dec
dec
dec
stc
stc
mov
mov
scas
cs
sti
xchg
sub
int
test
push
push
push
push
push
push
mov
inc
inc
inc
fwait
lds
daa
pop
add
pop
pop
fprem
clc
clc
push
sbb
inc
jno
jno
jno
jno
xlat
jnp
mov
out
pop
pusha
pusha
pusha
popf
in
in
ss
xchg
xchg
xchg
sti
sti
sahf
sahf
sahf
xor
mov
lcall
push
push
or
or
inc
push
xchg
xchg
jns
dec
dec
dec
or
outsb
outsb
xor
loope
imul
je
je
ljmp
cmp
cmp
push
pusha
pusha
adc
push
ds
sub
faddl
ss
fstpt
jp
and
and
pop
or
adc
ja
ja
mov
xor
and
ss
fwait
loopne
loopne
gs
cmp
cmp
sub
sub
es
add
mov
sbb
add
pop
pop
xlat
xlat
xlat
xlat
mov
cmp
mov
ja
mov
pop
pop
daa
adc
and
cmp
in
in
insb
enter
push
xor
xor
cmp
sub
sub
xchg
xchg
imull
cwtl
cwtl
loope
je
popa
popf
mov
pushf
pushf
pop
scas
scas
scas
scas
mov
mov
pop
test
aam
mov
gs
mov
and
xor
pushf
pushf
divl
imul
pop
fldcw
adc
sbb
sbb
out
out
out
jmp
push
push
addb
xchg
in
int
int
mov
inc
adc
out
pushl
int
movsb
in
in
in
in
jle
into
sbb
cld
cld
push
aaa
dec
dec
dec
dec
test
xor
or
test
rclb
add
loop
loop
loop
loop
loop
stos
dec
cmpsb
cmpsb
cmpsb
cmpsb
cld
cld
cld
cld
cld
out
pop
pop
jbe
fdivrs
mov
xlat
xlat
and
add
hlt
hlt
or
cmp
cmp
shrl
and
mov
push
nop
add
add
out
das
das
das
das
das
das
lret
lret
xchg
xchg
xchg
xchg
xchg
xchg
or
int
scas
scas
sti
sti
pop
in
inc
cmc
insl
aaa
aaa
rcl
ror
clc
sbb
into
pop
fs
aad
mov
sti
sti
sbb
cld
xor
sahf
sahf
sahf
loope
mov
popf
daa
daa
pop
pop
pop
out
out
out
out
out
jmp
cltd
cltd
cltd
cltd
cltd
cltd
aam
xchg
cli
xchg
xchg
xchg
dec
dec
dec
dec
pop
pop
nop
nop
nop
fstp
fstp
fstp
sbb
cmp
cmp
cmp
cmp
cmp
mov
data16
cmpb
aas
pop
push
xor
mov
pop
sub
mov
jnp
dec
dec
dec
pop
pop
or
jl
mov
or
dec
mov
loopne
clc
clc
clc
sti
sti
jecxz
cld
bound
bound
wrmsr
add
cmp
adc
adc
add
push
notb
jbe
rcr
sbb
call
xchg
xchg
repnz
push
adc
lea
push
push
push
dec
xchg
pop
jmp
jmp
test
pop
dec
dec
dec
dec
arpl
out
pop
cld
out
out
mov
lret
rcl
push
sbb
sbb
pop
pop
pop
pop
mov
mov
mov
adc
push
push
push
push
out
imul
dec
dec
dec
xchg
fnstcw
mov
lods
lods
lods
lahf
lods
lods
lods
lods
popf
popf
icebp
repnz
ljmp
das
inc
inc
inc
pusha
pusha
pusha
insb
insb
out
sbb
scas
scas
scas
scas
in
push
imul
jp
imul
mov
imul
sub
mov
pop
pop
pop
pop
push
mov
out
in
in
in
jne
pop
pop
or
inc
inc
cmp
mov
sarb
mov
xor
xor
sbb
stos
stos
or
out
out
out
in
in
in
in
in
in
in
mov
shr
inc
jecxz
mov
or
push
push
push
ljmp
or
or
pop
js
in
in
lock
ljmp
addb
sbb
lret
xor
xor
push
push
sub
jl
jl
lcall
fsubs
repz
leave
leave
leave
leave
leave
xchg
push
push
push
in
data16
mov
addr16
xchg
dec
dec
dec
dec
sbb
out
out
out
out
out
out
out
lods
lods
lods
or
or
or
rcl
rcl
rcl
jns
adc
sbb
sbb
cli
in
das
das
loopne
mov
push
cmp
stos
and
sub
sti
sti
sti
dec
pushf
push
push
jae
jae
jne
dec
imul
jecxz
jecxz
jecxz
jecxz
enter
fwait
fwait
fwait
out
pop
pop
pop
or
or
jns
pushf
pushf
adc
or
lods
lods
stos
and
and
test
xchg
xchg
xchg
int
int
pop
pop
pop
pop
xor
orb
lret
addr16
pop
pop
sub
sub
repnz
push
push
push
push
push
pop
pop
pop
pop
pop
pop
out
out
mov
pop
pop
mov
xor
and
and
shr
movsb
es
mov
pop
test
cli
and
jge
jge
fcomp
fcomp
fadds
push
xor
xor
dec
dec
lcall
xor
xor
add
add
rol
rol
out
push
jge
jge
push
push
fwait
out
out
out
pop
pop
divb
xor
mov
mov
xchg
xchg
xchg
or
lea
sub
sub
sub
sub
ja
jecxz
and
test
popa
popa
popa
popa
popa
sbb
ss
mov
jmp
add
mov
ss
inc
jmp
out
repz
xchg
mov
cmp
cltd
pop
pop
pop
pop
pop
jp
out
push
push
add
add
lret
stc
stc
ss
jns
pop
pop
sub
into
mov
xlat
xlat
xlat
inc
inc
xor
xor
xor
mov
xchg
xchg
xchg
xchg
inc
mov
das
das
push
dec
dec
dec
dec
dec
dec
icebp
icebp
daa
daa
xor
aad
arpl
dec
dec
xor
int
cmpl
mov
div
imull
and
push
push
and
fisttpll
int3
mov
jb
add
rol
shr
jecxz,pn
adc
js
addl
cmp
outsl
sbb
sbb
maxps
aad
test
mov
arpl
arpl
adc
test
xchg
les
dec
pusha
pusha
pusha
inc
pop
mov
lock
repnz
adc
fs
in
in
shr
jmp
fcomp
fcomp
push
push
and
rcl
lret
out
repz
xor
or
pop
mov
or
jle
dec
xchg
addl
rcl
rcl
shrl
aaa
scas
mov
je
sub
sub
aaa
adc
adc
push
push
push
xchg
push
push
push
sub
adc
mov
mov
push
or
push
push
mov
sbb
cmpsl
cmpsl
cmpsl
cmpsl
out
stos
stos
stos
stos
stos
stos
stos
iret
mov
mov
mov
mov
rcr
pusha
pusha
dec
mov
lcall
imul
cmpsb
inc
inc
pop
cmc
and
pop
loope
icebp
cs
and
and
outsb
outsb
push
nop
lock
pop
pop
pop
pop
aad
mov
mov
adc
push
aas
aas
cltd
push
push
cli
push
or
repnz
xlat
sub
sub
stos
mov
jle
sarb
ds
out
out
out
out
out
pop
shll
das
das
inc
inc
ja
add
call
in
in
mov
nop
sbb
mov
jns
add
repz
adc
test
sbb
test
push
push
push
cmp
lret
lret
sbb
test
pop
pop
pop
fidivs
ds
push
hlt
ret
ret
ret
test
stos
stos
mov
sub
fcomp
push
cltd
pop
int
push
push
inc
movups
into
into
into
out
jbe
jo
stos
test
pusha
pusha
pusha
pusha
pusha
cmc
cmc
cmp
jnp
jnp
jnp
xor
inc
inc
inc
xor
xor
inc
bound
and
fisttpll
iret
iret
ljmp
cmp
adc
adc
rcrl
aas
aas
aas
aas
aas
aas
pop
pop
pop
pop
pop
pop
dec
ret
sti
sbb
jmp
lcall
rcl
rcll
push
push
push
push
push
push
push
test
mov
sub
sub
cmp
cmp
sbb
adc
push
push
push
push
or
or
or
mov
xchg
xchg
xchg
xchg
xchg
xor
out
nop
loop
out
out
xchg
out
push
mov
icebp
icebp
and
pop
pop
pop
pop
pop
cmp
push
push
push
leave
cmp
pop
shll
ja
cmpsl
cmpsl
movsb
movsb
je
je
pop
pop
pop
mov
fildl
lcall
add
add
adc
addl
loopne
mov
out
ds
nop
nop
pop
cmovne
adc
cmp
div
jg
jg
loopne
ja
movsb
add
push
xchg
cwtl
cwtl
cwtl
mov
push
push
test
test
in
sub
jbe
daa
daa
daa
cmpb
cmp
outsb
mov
xor
pop
rol
xor
xor
je
es
lret
jle
and
xlat
xlat
sti
sti
sti
sti
sti
sti
test
adc
jecxz
in
daa
paddw
imul
and
vpor
loope
mov
aas
aas
aad
dec
and
xchg
dec
dec
int3
cs
out
push
or
das
div
lea
pop
sbb
mov
dec
dec
cmpsb
cmpsb
adc
or
inc
mov
ret
fsubl
and
jnp
jnp
jnp
mov
pushf
pushf
movsb
movsb
or
xor
wbinvd
or
inc
jge
aaa
std
cmp
cmp
push
push
mov
mov
test
add
ret
in
ret
mov
dec
dec
jg
sbb
shrb
dec
cvtps2pd
inc
cli
cli
mov
adc
adc
adc
xchg
icebp
cwtl
cwtl
cwtl
cwtl
cwtl
fsts
rolb
jp
xchg
pop
pop
pop
pop
ret
jb
out
pusha
pusha
sti
sti
sti
sti
sti
sti
inc
inc
inc
inc
inc
in
in
int
int
in
push
push
push
xor
xlat
cmc
cmc
cmc
cmc
xchg
push
push
es
pop
pop
xchg
and
cli
bound
pop
pop
pop
jp
dec
dec
repz
lret
mov
mov
mov
pop
add
fdivl
xchg
outsl
add
ret
lds
shlb
in
scas
cmpsl
arpl
dec
sbb
mov
cmpl
std
in
data16
decl
inc
add
add
mov
loop
int3
loopne
add
mov
xchg
lods
xchg
add
mov
clc
idivl
cmpsl
sub
and
fldt
mov
xchg
sti
enter
mov
mov
ret
ljmp
pop
sub
jl
jle
pop
jmp
test
insb
add
add
add
mov
in
hlt
inc
cld
pushf
enter
inc
add
repz
jns
mov
aad
jnp
loop
bound
jo
xchg
pop
xor
jns
idivl
fwait
in
test
inc
jmp
cltd
mov
imul
sbbl
add
loope
pop
or
orb
bound
out
pop
data16
mov
jno
mov
and
pop
lret
cli
je
and
add
int
jge
add
dec
adc
sub
jg
and
cmp
pushf
push
add
pop
ficompl
dec
add
out
std
cmpsb
pop
cmp
in
mull
ds
lret
add
cld
mov
icebp
sbb
sbb
test
xlat
push
xlat
clc
movb
xchg
dec
add
movsb
mov
add
sarb
sub
nop
pop
clc
dec
add
cmp
and
aam
shrl
fadds
add
mov
inc
and
push
fbstp
and
lcall
xchg
add
jnp
ljmp
xchg
sub
sbb
mov
add
icebp
addl
movsl
and
bound
pop
xchg
lock
mov
sahf
test
or
xor
add
mov
add
addr16
mov
sub
add
mov
push
mov
stc
rclb
dec
push
rcrl
or
push
pop
scas
sbb
xor
push
add
add
or
xchg
and
add
sub
xor
add
and
xchg
and
pop
or
negl
or
mov
lahf
jge
cmp
jle
lds
add
pop
fwait
inc
add
rcll
pop
scas
adc
mov
rorl
inc
testl
fldt
add
mov
pushf
sbb
jecxz
add
add
scas
mov
sbb
mov
mov
cld
push
xor
push
cmc
shrl
jb
stos
cmp
sti
aas
pop
xor
add
repnz
adc
andl
in
sbbl
add
call
push
add
mov
cmpsl
stc
push
fs
jne
add
mov
jns
loopne
jle
fadds
mov
mov
fsubs
mov
push
aas
in
pop
sub
std
daa
dec
add
add
add
test
enter
cmp
je
mov
mov
dec
add
adc
cmc
pop
js
fsubr
pop
ret
sub
mov
jp
add
jecxz
fldt
dec
and
mov
sub
dec
add
pop
les
add
fcmovnbe
and
mov
xchg
lods
in
cmp
add
sbb
mov
jle
add
xchg
fsub
ret
and
jg
lret
add
mov
fucomi
imulb
cmpl
pop
mov
add
les
add
je
add
aaa
ret
movsl
int3
scas
test
dec
add
cmp
bound
repnz
jno
das
dec
add
mov
or
imul
sbb
adc
xchg
or
mov
mov
pop
loope
loop
add
inc
dec
add
aam
add
sbb
cmpsb
mov
test
add
mov
fldl
clc
aas
push
and
push
add
add
lock
sarb
jl
lret
hlt
repnz
aas
in
add
mov
add
add
incl
add
cmpsl
dec
add
arpl
sti
or
xor
out
shrl
add
xchg
hlt
sub
inc
outsl
sub
icebp
sub
movsb
push
pop
mov
test
orb
add
icebp
ss
push
es
lea
sub
stc
add
aad
leave
shrb
pop
xchg
sbb
sbb
lcall
add
add
stc
cmpsl
aam
hlt
push
insl
int
rolb
ds
push
xchg
xor
insl
and
hlt
fcomi
xchg
leave
in
iret
push
adc
cs
mov
mov
stc
ss
cmp
mov
pop
pop
mov
add
push
adc
insb
add
mov
fwait
adc
cmc
mov
jns
xchg
adc
leave
into
gs
xchg
imul
adc
mov
bound
or
add
xchg
or
decb
add
add
or
lods
jns
add
mov
shr
out
sarl
adc
sub
add
mov
sub
add
outsl
loop
and
test
xlat
je
pop
loop
sahf
dec
add
mov
add
lahf
add
xor
inc
ret
jmp
mov
fldenv
test
xchg
aaa
sahf
imul
mov
push
leave
jl
ljmp
iret
add
insb
add
mov
cmp
add
stc
push
dec
sub
mov
subl
fimuls
add
add
push
add
mov
and
mov
call
subl
loopne
jae
or
mov
mov
push
pop
inc
cmp
jae
cmpsb
sbb
add
int3
sbb
data16
mov
sbb
repz
stos
cwtl
into
out
pop
in
test
jo
dec
add
hlt
cld
jge
add
add
fwait
int
sarl
push
dec
add
mov
fsubrp
imulb
ja
fcmovnbe
push
jmp
pop
outsb
add
add
dec
add
insb
add
add
add
sti
inc
add
fsubrs
add
or
add
lcall
cmp
sub
fwait
or
add
loopne
je
subl
add
movsb
neg
mov
lds
cmpsl
and
ds
add
enter
add
xor
xor
dec
add
cwtl
ret
adc
repz
leave
sahf
ss
adc
and
mov
ja
enter
xchg
pop
or
repnz
daa
xchg
lahf
adc
dec
add
stos
daa
or
das
imul
call
mov
jae
out
pop
cmpsb
pop
xchg
loop
inc
mov
sbb
cmp
pop
cmovns
popf
mov
mov
inc
mov
add
adc
adc
dec
pop
lock
in
ficoml
sub
mov
push
adc
into
ret
sbbl
mov
add
push
lcall
in
shlb
add
sub
xor
add
rcr
jge
add
jns
add
bound
sbb
pop
jg
mov
cmc
in
jnp
movsb
stos
pop
mov
add
or
cmp
rcl
iret
stos
imul
movsb
sub
mov
ror
inc
add
add
nop
dec
add
add
dec
add
xchg
stos
and
cmp
add
mov
add
mov
mov
cmp
mov
fdivrs
movsl
addr16
add
imul
xor
mov
sbb
mov
add
xchg
fadds
sub
inc
push
data16
add
add
imul
mov
in
cli
leave
cld
jbe
inc
aaa
neg
lds
mov
jge
aas
dec
jle
mov
imul
mov
add
insl
or
in
or
mov
jo
int3
icebp
imul
push
test
popf
imulb
add
jge
add
test
ljmp
add
int
adc
out
movsl
add
pop
adc
les
pop
pop
aas
mov
lock
add
jle
jmp
xchg
lahf
dec
add
loopne
and
dec
bound
cli
mov
in
mov
cmpsl
outsb
add
sbb
fcmove
sub
dec
add
sub
dec
add
pop
cld
lret
sbb
cwtl
js
rol
add
mov
xor
aas
ds
add
xchg
xchg
pop
std
mov
add
dec
sahf
inc
add
mov
pop
cmp
aad
and
fcoml
lcall
insl
mov
cwtl
cmpsb
inc
lret
js
cmpsb
rorb
dec
push
hlt
inc
mov
add
jae
inc
ss
ja
aas
mov
mov
inc
cmp
out
add
add
xchg
or
jle
mov
mov
std
cmp
add
and
lock
outsl
adc
out
in
push
or
fldt
dec
add
mov
adc
nop
xchg
sbb
sbb
push
add
adc
xlat
inc
sub
or
shlb
lcall
and
inc
ljmp
mov
stos
push
std
jb
ret
mov
add
add
mov
cmpb
inc
add
std
lods
paddw
fwait
or
push
call
xchg
mov
dec
nop
pushf
cmp
sbb
lahf
bound
dec
adc
jle
jecxz
ja
int3
add
add
mov
add
repnz
dec
aam
xor
add
icebp
pushl
mov
and
mov
repz
add
add
out
xor
xchg
imulb
adcl
bound
mov
mov
pop
push
mov
cltd
test
cmp
lcall
inc
add
inc
add
fdivrl
xchg
sub
cltd
hlt
mov
push
lret
xor
nop
push
jge
aas
movsl
dec
add
add
add
imulb
cmpsb
cmc
sbb
add
lret
fdivl
int
push
add
sub
add
mov
jb
add
addl
push
add
jno
lahf
mov
inc
add
sub
ljmp
push
inc
add
push
add
lods
cmp
adcl
jecxz
call
loopne
and
push
add
aam
lods
pop
add
pusha
add
jns
fsubr
data16
add
repnz
add
les
je
adc
xor
mov
add
cmp
add
test
sub
pop
push
sub
cld
pop
sti
iret
pop
aas
lods
ficoms
repnz
imul
cmc
imul
test
add
add
stc
sahf
add
jmp
outsb
add
or
inc
add
and
xchg
out
add
sub
sub
fsubl
lret
inc
add
insb
add
xor
cld
add
ss
add
mov
cltd
lods
jbe
stos
lods
ret
mov
into
xchg
add
push
mov
add
mov
lret
roll
sbb
mov
sbb
js
xorl
jns
add
add
mov
adc
xchg
loope
xor
dec
add
cltd
sub
add
daa
mov
in
sti
test
daa
inc
mov
add
in
and
lods
cmp
xchg
xchg
sbb
add
imul
mov
add
add
pop
xor
and
cwtl
pop
pop
sub
jg
xor
pop
lahf
or
cmp
shlb
or
push
test
mov
test
call
popa
pop
adc
or
inc
add
jno
mov
xor
push
lret
add
mov
dec
add
add
and
push
in
and
add
xchg
adc
call
int
movsl
push
insb
add
dec
add
lock
loopne
lods
mov
pop
outsl
inc
add
cmp
adc
jns
fsubrs
mov
adc
rolb
scas
xchg
push
jecxz
xchg
mov
add
mov
scas
outsb
add
test
cmp
add
dec
add
sbb
pusha
add
fdivl
test
mov
and
add
jb
jne
or
sub
fcompl
add
movsb
popf
fcomps
xchg
add
jmp
repnz
int3
pop
in
sub
xchg
sub
mov
outsl
or
test
ror
add
das
or
fs
divb
popf
adc
jo
add
add
mov
mov
fnstenv
idivl
aas
jmp
add
imul
inc
fbld
pop
xor
ljmp
push
ljmp
jnp
mov
add
add
xchg
sti
jmp
add
and
or
inc
add
mov
jne
inc
fwait
repnz
das
add
add
add
shll
push
or
out
xchg
jl
mov
sub
mov
icebp
push
add
fwait
mov
test
orl
mov
cmp
add
in
addl
inc
add
add
jmp
cmc
into
jg
aam
mov
push
mov
dec
add
mov
add
mov
or
je
add
jne
cs
jp
gs
fistpll
mov
cwtl
add
dec
push
jns
outsl
xchg
adcl
and
ds
cmpsl
mov
inc
add
push
shl
mov
add
insl
mov
push
out
add
aam
cwtl
dec
fisttps
fcoml
call
and
popa
or
pop
sbb
aas
push
ljmp
outsl
push
icebp
mov
cmpsl
or
mov
xchg
pop
mov
sub
adc
mov
mov
sbbl
movsb
sbb
mov
cmp
dec
add
cmp
pop
jmp
test
sbb
popf
jno
into
and
insl
cmpsb
push
scas
xor
add
jo
rolb
ret
fsubrs
dec
add
sub
cmpsb
lods
rcrb
rcr
xor
ret
jmp
lret
fldt
lock
ret
jp
lret
mov
and
popa
loop
cmp
iret
jmp
mov
test
ret
push
data16
rcll
bound
mov
cmp
push
adc
add
add
dec
add
mov
jge
push
dec
sub
cmpsl
cmpsb
leave
and
mov
cmc
mov
add
fisubs
add
add
add
jnp
ljmp
mov
mov
pop
xchg
mov
inc
stos
pusha
add
std
push
mov
xchg
sbb
lahf
add
mov
pop
mov
add
cld
in
add
xchg
mov
xor
mov
dec
mov
stos
inc
popf
ja
xorl
inc
push
push
sbb
or
mull
addr16
mov
inc
mov
xchg
jo
xchg
sub
subl
and
pop
mov
push
push
jo
out
lret
sbb
add
add
xchg
or
test
pop
pop
mov
lock
add
imul
lret
jno
stc
inc
add
insb
add
mov
sub
rep
push
in
jbe
add
int
dec
add
jp
pop
leave
addr16
rcll
inc
add
jbe
push
dec
add
mov
sbbl
rol
xchg
xor
or
sub
out
popa
scas
testb
scas
pop
imull
loope
add
add
lock
or
pop
ret
into
pop
jne
insb
add
cmp
popf
pop
xchg
mov
gs
scas
mov
cli
js
xor
add
mov
sub
movl
clc
push
lea
call
sub
add
add
and
mov
cmp
je
mov
push
push
push
cld
call
test
jne
dec
add
mov
add
push
push
push
push
push
call
test
jne
xor
cld
push
es
lea
movl
push
push
push
push
push
call
push
cmp
lea
jne
movzbl
or
add
mov
add
not
cld
xor
test
cld
jne
call
xor
mov
add
ret
xor
mov
mov
stc
mov
bnd
cmp
mov
mov
mov
inc
or
lea
lea
add
xchg
shr
xchg
lock
and
sub
cld
jne
push
mov
jne
icebp
movsl
nop
add
sub
dec
icebp
subl
and
icebp
jl
adc
fisttpl
dec
add
add
jbe
outsl
dec
add
das
mov
bound
and
adc
mov
jae
add
ret
aas
inc
fnsave
in
sub
pop
mov
icebp
and
add
xchg
adc
mov
mov
cmpsb
gs
mov
rcrl
add
jp
add
add
hlt
pop
mov
and
dec
aas
ja
movsl
push
add
jno
adc
adc
mov
daa
or
mov
je
pushf
lods
clc
add
mov
add
mov
sub
popa
jecxz
jnp
and
push
lret
pop
mov
pop
and
cmp
inc
testl
sub
xor
xchg
out
fimull
xchg
je
xchg
xchg
leave
mov
arpl
mov
and
adc
push
jb
outsb
add
rorl
add
add
test
mov
rcr
ja
add
xchg
shlb
push
xchg
loopne
shlb
mov
and
push
xor
add
and
cld
lea
div
fldl
test
add
sti
jnp
sbb
popf
xor
mov
mov
sbb
out
stos
pop
add
add
add
test
add
add
and
insb
add
adc
dec
add
pop
xchg
pop
leave
dec
add
add
push
testb
dec
add
add
mov
cmpsl
sbb
jp
dec
dec
add
sbb
sti
mov
jp
movsl
mov
add
pop
inc
out
add
mov
xor
add
lea
lret
mov
sub
pop
add
sub
loop
push
in
roll
in
mov
add
add
movsl
dec
add
mull
add
popa
pop
fwait
dec
add
xchg
arpl
loope
jno
fiadds
mov
add
cmp
cmp
push
dec
add
cwtl
popf
and
cltd
xlat
cmpsb
outsl
jb
mov
add
cmp
and
sub
gs
add
add
xchg
xchg
inc
add
add
add
add
cmc
inc
adc
push
add
inc
add
add
add
jp
out
ja
adc
xor
push
sbb
rorl
jo
and
add
imul
add
push
shr
mov
jns
add
ljmp
sub
loop
mov
loopne
add
call
xchg
popa
and
cmp
add
add
fwait
cmp
inc
lods
mov
add
mov
xchg
cmp
push
add
and
stc
add
mov
movsl
sbb
or
daa
clc
pop
push
ljmp
pop
in
add
mov
movsb
out
add
cmpsl
in
inc
add
fidivrs
mov
add
add
mov
inc
add
mov
clc
nop
movsb
in
dec
add
int3
sbb
mov
add
test
add
push
sub
lcall
sti
cmpsb
in
sbb
or
or
lods
gs
mov
dec
xor
out
es
xchg
add
movsb
push
jno
adcl
mov
xchg
test
inc
add
dec
add
mov
gs
call
lcall
and
mov
cmp
add
mov
add
add
sahf
imul
imul
xor
sti
pop
dec
add
jmp
fwait
imul
add
add
jnp
aad
imul
add
sbb
add
lds
sbb
leave
loop
popa
xor
test
adc
loop
inc
add
adc
mov
out
cmp
dec
add
pop
scas
jns
gs
fldcw
out
into
jle
insb
add
bound
mov
js
ret
pusha
add
mov
push
add
mov
add
ror
inc
add
xor
add
outsl
jne
and
shll
push
and
fldl
add
in
sahf
pusha
add
in
addl
ret
rcrb
loope
pop
pop
sub
add
mov
push
sbb
add
push
hlt
jbe
mov
mov
mov
cmp
jno
cmpsl
sub
das
in
daa
mov
dec
add
pop
push
addb
mov
insl
sahf
xlat
cltd
std
pop
push
push
cmpb
adc
pop
jbe
pop
push
add
xor
popa
mov
jge
jg
jg
add
ss
push
xlat
mov
outsl
mov
add
inc
lods
icebp
and
pushf
popf
or
and
xchg
pop
jbe
pop
mov
inc
add
sbb
add
rolb
jno
pop
push
mov
sbb
jg
pop
push
and
sbb
lock
cmp
andb
add
rcrl
movsb
or
cmp
xor
mov
cwtl
subl
add
pop
mov
jecxz
add
pushf
pop
loopne
loopne
enter
inc
add
cs
loope
xor
add
stos
and
aas
dec
mov
push
filds
rolb
inc
add
cwtl
fstpt
cld
add
movsl
jmp
lods
mov
pop
lods
xor
enter
inc
loopne
push
adc
add
cmc
xchg
je
int3
adc
clc
int3
dec
mov
lods
cmp
test
cmp
movsb
add
add
out
or
or
add
stos
adc
mov
loop
dec
or
add
sarb
nopl
mov
add
add
fnstcw
lcall
dec
sub
push
jae
mov
imul
jae
adc
push
out
add
add
mov
int
ror
or
xchg
insl
incl
add
add
sti
push
xor
push
dec
test
jae
mov
enter
pop
out
xchg
mov
mov
stos
sbb
xor
into
ds
outsb
add
pop
mov
jmp
inc
add
sbb
invd
add
imul
and
out
sahf
es
iret
stc
xorl
movsb
addr16
and
pop
les
dec
pop
outsb
add
push
xchg
jnp
or
out
adcl
xor
insl
push
add
ja
pop
adc
add
fmull
push
pop
and
movl
fcmovb
cmp
jmp
cmp
inc
dec
scas
dec
add
dec
add
push
add
adc
inc
jmp
xchg
jno
fst
rolb
mov
jl
jle
or
and
imul
push
cmp
push
pushf
test
fldl
fsubrs
adc
xchg
arpl
dec
push
popa
cmp
lods
in
ss
cmp
add
icebp
mov
xor
js
jno
push
aaa
adc
repnz
iret
add
cmp
mov
or
lds
mov
cmc
mov
sbb
les
sti
jo
push
xor
movsb
dec
test
movsl
shll
dec
add
fcmove
mov
icebp
push
mov
rorl
pop
iret
addr16
push
push
add
jo
pop
sbb
rorl
mov
psllw
sbb
addr16
lcall
add
call
arpl
mov
ret
push
mov
mov
pop
popa
scas
movsl
adc
push
add
lock
inc
test
daa
xorl
addr16
add
inc
shlb
fcmovne
mov
fisubl
adc
bound
mov
inc
jnp
or
popa
pop
cmp
and
pop
mov
add
in
add
lahf
insb
add
imul
inc
add
or
addl
cwtl
fs
cwtl
adc
int3
cmp
mov
push
in
adc
add
add
pop
or
and
lea
loope
lret
lds
xchg
imul
add
xor
inc
add
pop
push
mov
dec
jbe
adcl
add
sbb
cmp
xchg
pop
les
stos
aam
pop
scas
mov
cltd
xlat
and
push
add
fnstenv
rclb
sbb
pop
pop
cmp
and
outsl
pop
arpl
xchg
mov
or
int3
dec
addr16
mov
test
loop
pop
lcall
fmull
add
add
cmp
jo
dec
add
pop
dec
push
or
sub
mov
hlt
aad
xchg
dec
add
adc
jp
add
push
lcall
jg
mov
add
mov
add
push
and
dec
add
fistl
xchg
pop
in
iret
ds
imul
xchg
jge
rorb
ss
add
mov
xchg
push
add
add
lock
cmp
add
pop
sbb
rcrl
cmp
add
je
fimuls
shl
lcall
pushf
pop
mulb
shrl
pop
sbb
adc
add
add
push
push
add
sbb
add
pop
mov
das
add
test
add
add
lds
xor
dec
or
fimuls
push
or
inc
add
das
and
jmp
les
push
imul
adc
mov
fwait
repnz
pop
outsl
add
addb
xor
jl
daa
insl
insl
lock
popa
jbe
fsubs
subb
push
outsl
adc
add
je
and
test
shl
and
imulb
das
mov
jmp
xchg
push
loope
mov
insl
pop
push
pop
pop
push
shrl
add
mov
add
sub
add
mov
push
add
and
dec
add
enter
sub
aam
lds
cmp
add
aaa
adc
arpl
mov
jne
pop
cltd
xchg
mov
add
mov
add
filds
mov
mov
ljmp
adc
cmp
rcrb
xlat
mov
xchg
movsb
shll
sbb
adc
insb
add
dec
imul
inc
imul
or
popf
outsl
mov
js
daa
push
lret
stos
neg
jnp
mov
fdivl
mov
add
push
add
gs
jbe
add
stos
ja
out
xchg
adc
pop
aaa
add
sub
cmc
dec
add
roll
sub
mov
jne
insb
add
fisubs
push
add
cmp
add
lods
add
je
inc
add
ret
xor
loop
xchg
adc
pop
xchg
mov
dec
add
je
cli
addr16
arpl
add
cmovbe
cmp
dec
add
aam
stos
pop
in
mov
fwait
repnz
jl
add
ret
imul
pusha
add
aad
sub
scas
in
lahf
aam
add
out
mov
fidivs
mov
inc
add
rclb
shl
jl
add
add
out
inc
jg
push
into
sub
xor
pop
mov
add
in
and
cmp
andl
add
jae
adc
test
add
adc
adc
add
outsl
xchg
aas
daa
and
jnp
xor
mov
repz
lret
jno
and
mov
cli
rclb
addr16
test
add
test
add
jb
cmp
movsl
pop
cltd
cmovno
fwait
xchg
add
mov
lds
scas
dec
push
add
mov
stos
loop
add
add
std
adc
dec
add
add
sub
add
add
push
xor
jo
ret
push
test
mov
dec
add
add
or
ret
xor
icebp
and
inc
add
mov
in
add
lods
insb
add
push
scas
push
jno
add
dec
add
test
and
nop
mov
mov
push
fnstenv
in
lea
inc
add
movsb
cmp
mov
in
mul
xor
push
jge
ret
mov
filds
add
mov
imul
mov
fdivrs
in
inc
dec
xor
in
mov
ljmp
inc
add
leave
or
addl
add
in
sti
daa
nop
lret
sbb
dec
add
je
add
fistpll
add
ret
mov
add
add
push
icebp
mov
add
push
rcrl
sahf
cmp
ljmp
jbe
mov
lret
mov
and
jle
sub
jne
bound
cmp
arpl
leave
pop
mov
add
xchg
adc
add
adc
inc
or
sub
pop
fldcw
cmp
cmp
jecxz
push
inc
shr
call
xlat
dec
sarb
loope
cs
add
sub
inc
ja
xor
mov
add
int
push
scas
and
xchg
mov
stos
jae
add
or
pop
and
test
push
loope
xor
addr16
das
andb
or
mov
xchg
into
mov
sub
mov
shrb
and
sub
jns
add
cmc
loope
in
mov
sbb
flds
add
sub
pop
in
bound
cli
cmpsb
xor
lret
or
add
dec
push
outsl
dec
mov
add
add
ss
call
push
lock
inc
movsl
inc
add
add
jnp
mov
mov
add
je
test
repz
mov
lret
mov
xchg
cmp
fisubs
add
push
add
arpl
add
xor
pop
jne
sbb
movsb
repnz
cmc
adc
add
push
es
sti
ror
out
push
sti
pop
push
mov
loop
dec
fcoml
out
call
nop
jmp
add
and
push
adc
mov
add
clc
repnz
nop
nop
jae
add
add
ret
clc
repnz
nop
nop
jae
dec
add
xor
cmp
add
dec
add
test
xchg
ret
add
pop
add
add
add
add
lahf
add
inc
add
add
in
mov
adc
add
repnz
nop
nop
jae
add
push
push
add
add
mov
clc
repnz
nop
nop
jae
add
sbb
add
push
jb
sbb
nop
nop
jae
mov
pop
add
add
cmc
data16
inc
add
clc
repnz
nop
nop
jae
add
add
call
inc
push
mov
xchg
ret
add
mov
add
add
sbb
inc
pop
push
mov
xchg
ret
cmp
mov
add
add
mov
clc
repnz
nop
nop
jae
add
mov
add
call
nop
push
mov
leave
nop
jmp
xor
push
add
xor
pop
aas
je
clc
repnz
nop
nop
jae
push
add
add
add
fwait
push
mov
xchg
ret
push
jb
bound
cmc
mov
push
add
add
repnz
nop
nop
jae
in
add
mov
out
or
movsb
cmpsl
add
push
mov
xchg
ret
lahf
add
add
add
add
cmc
push
jmp
popa
add
add
dec
push
add
insb
movsl
adc
add
xlat
nop
push
fistpl
clc
repnz
nop
nop
jae
mov
bound
xlat
add
nop
nop
jae
add
cmp
or
pop
clc
repnz
nop
nop
jae
xor
push
hlt
xor
add
add
nop
push
mov
leave
nop
jmp
add
cmp
push
dec
add
clc
repnz
nop
nop
jae
mov
cmp
popa
xlat
xor
push
mov
xchg
ret
add
or
cmp
inc
add
pop
xchg
fwait
nop
push
mov
leave
nop
jmp
add
inc
add
push
add
xor
sbb
sub
sub
push
outsb
add
sub
lods
mov
xchg
ret
push
jle
add
movsl
popa
mov
inc
add
mov
clc
repnz
nop
nop
jae
add
jle
mov
add
aam
jp
add
test
nop
push
mov
leave
nop
jmp
push
add
pop
call
test
repnz
nop
nop
jae
add
add
add
mov
stos
test
xchg
ret
add
add
jle
cmp
mov
xchg
ret
loope
hlt
inc
dec
add
add
inc
add
mov
sldt
nop
push
mov
leave
nop
jmp
add
mov
inc
fld1
clc
repnz
nop
nop
jae
add
add
insl
add
mov
in
leave
nop
jmp
add
add
insl
dec
add
add
clc
repnz
nop
nop
jae
mov
add
cmpb
mov
clc
repnz
nop
nop
jae
add
add
add
add
push
shrl
nop
push
mov
leave
nop
jmp
jle
add
adc
aam
dec
add
mov
clc
repnz
nop
nop
jae
dec
xor
iret
mov
add
add
cmp
arpl
mov
xchg
ret
add
add
popa
inc
add
add
jne
clc
repnz
nop
nop
jae
add
push
add
add
mov
push
mov
repnz
nop
nop
jae
pop
add
sti
add
call
push
mov
leave
nop
jmp
hlt
push
add
add
add
testl
cld
nop
nop
jae
jle
iret
add
and
xor
add
mov
test
nop
push
mov
leave
nop
jmp
addb
add
insl
and
add
bound
jl
adc
cli
mov
add
clc
repnz
nop
nop
jae
add
add
push
dec
mov
repnz
nop
nop
jae
add
add
add
popa
clc
repnz
nop
nop
jae
aam
adc
cmp
add
loope
inc
add
mov
xchg
ret
cmp
movsl
add
add
add
add
clc
repnz
nop
nop
jae
mov
dec
add
xor
pop
jmp
add
add
add
gs
cmp
mov
clc
repnz
nop
nop
jae
jle
jle
aam
add
adc
and
incl
add
add
insb
mov
inc
cmp
push
insb
add
dec
mov
imul
cmp
ret
add
push
add
add
add
cmp
je
js
mov
xchg
ret
popa
loope
add
jle
add
add
cmp
mov
leave
nop
jmp
jle
add
add
idiv
xor
clc
repnz
nop
nop
jae
add
inc
mov
add
add
fs
call
sbb
repnz
nop
nop
jae
add
or
pop
add
mov
xchg
ret
add
or
add
dec
movsl
add
mov
leave
nop
jmp
add
add
iret
jg
cmp
lahf
mov
fcoms
nop
jmp
add
add
dec
add
nop
add
cmpl
nop
push
mov
leave
nop
jmp
xor
in
sbb
xlat
andps
repnz
nop
nop
jae
and
add
out
add
add
mov
push
mov
xchg
ret
aam
add
adc
xor
cld
nop
nop
jae
add
add
add
add
add
add
ret
push
mov
xchg
ret
mov
mov
add
add
mov
push
mov
xchg
ret
add
push
add
add
sbb
push
mov
xchg
ret
add
popa
xor
add
add
scas
sub
push
mov
xchg
ret
hlt
adc
bound
mov
imul
jmp
or
add
add
add
iret
add
clc
repnz
nop
nop
jae
xor
mov
add
nop
push
mov
leave
nop
jmp
add
adc
iret
add
add
add
dec
adc
out
insl
inc
add
hlt
hlt
mov
add
call
dec
add
cmp
nop
push
mov
leave
nop
jmp
add
add
lahf
add
add
repnz
nop
nop
jae
adc
jb
add
call
inc
add
pop
push
push
mov
xchg
ret
hlt
add
dec
add
dec
add
and
jle
add
xor
add
add
add
rcrb
dec
cmp
repnz
nop
nop
jae
add
add
add
into
clc
das
add
nop
push
mov
leave
nop
jmp
add
add
add
mov
orl
nop
nop
jae
add
jle
jle
mov
jb
push
clc
repnz
nop
nop
jae
insl
mov
sbb
add
add
repz
push
mov
xchg
ret
add
add
or
out
add
add
add
cld
nop
nop
jae
loope
bound
add
mov
xchg
jne
nop
push
mov
leave
nop
jmp
addb
out
add
rcrb
and
sub
repnz
nop
nop
jae
add
add
loope
pop
xchg
clc
repnz
nop
nop
jae
add
add
mov
mov
jmp
add
nop
jmp
add
or
cmp
nop
push
mov
leave
nop
jmp
pop
cmp
cmp
push
mov
leave
nop
jmp
or
xor
sbb
gs
inc
jecxz
repnz
nop
nop
jae
insb
add
in
add
add
clc
repnz
nop
nop
jae
iret
push
cmp
add
add
jle
add
mov
add
nop
jae
gs
add
adc
add
sub
outsb
jl
add
push
imul
sbb
add
push
in
repnz
clc
repnz
nop
nop
jae
adc
add
dec
add
push
mov
mov
xchg
ret
pop
adc
add
add
stos
int
push
mov
xchg
ret
inc
mov
push
addb
xlat
add
add
rolb
xchg
inc
push
push
mov
xchg
ret
add
add
add
add
call
adc
and
in
bound
add
jb
mov
xlat
adc
add
xor
clc
repnz
nop
nop
jae
add
push
add
test
or
add
repnz
nop
nop
jae
jle
xor
loopne
jae
clc
repnz
nop
nop
jae
in
add
add
mov
mov
mov
leave
nop
jmp
add
add
add
scas
movzwl
clc
repnz
nop
nop
jae
mov
add
add
call
mov
push
mov
xchg
ret
add
call
add
in
sahf
mov
movb
fs
add
pop
add
add
add
push
clc
repnz
nop
nop
jae
add
push
out
sbb
add
sarb
add
pop
fistpl
push
mov
xchg
ret
out
push
in
pop
pop
cmp
add
inc
sti
lock
je
clc
repnz
nop
nop
jae
add
nop
jle
mov
clc
repnz
nop
nop
jae
add
cmp
add
fistpl
push
mov
xchg
ret
pop
or
iret
xor
add
push
clc
repnz
nop
nop
jae
mov
add
mov
xorl
nop
nop
jae
add
add
mov
xor
repnz
nop
nop
jae
jle
add
jg
cmp
nop
push
mov
leave
nop
jmp
add
add
add
pop
add
dec
push
mov
xchg
ret
in
add
add
jle
add
push
in
test
nop
push
mov
leave
nop
jmp
or
cmp
mov
adc
jbe
pop
clc
repnz
nop
nop
jae
add
inc
mov
add
xlat
add
add
repnz
nop
nop
jae
adc
add
in
add
add
clc
repnz
nop
nop
jae
pop
add
add
add
add
add
mov
clc
repnz
nop
nop
jae
mov
cmp
xor
clc
nop
push
mov
leave
nop
jmp
cmp
gs
cmc
add
nop
add
roll
repnz
nop
nop
jae
add
mov
loope
pop
dec
add
pushl
clc
repnz
nop
nop
jae
add
mov
cmp
or
add
mov
add
cmp
add
out
mov
mov
clc
repnz
nop
nop
jae
mov
pop
xor
dec
xlat
mov
jg
clc
repnz
nop
nop
jae
add
popa
adc
in
mov
push
mov
xchg
ret
add
cmp
add
add
add
repnz
nop
nop
jae
mov
and
lahf
dec
out
jb
dec
xchg
clc
repnz
nop
nop
jae
xor
add
inc
in
out
add
sub
je
mov
pop
push
add
inc
cmp
adc
mov
lock
xorl
clc
repnz
nop
nop
jae
add
push
mov
sti
push
push
mov
xchg
ret
nop
inc
cmc
push
add
add
add
hlt
add
clc
repnz
nop
nop
jae
xor
bound
add
push
imul
push
inc
add
adc
mov
jle
add
aaa
jne
clc
repnz
nop
nop
jae
add
sti
adc
add
pop
push
mov
xchg
ret
add
add
cmp
add
sub
nop
push
mov
leave
nop
jmp
add
lahf
out
add
adc
add
fistpl
nop
push
mov
leave
nop
jmp
add
jle
add
add
add
add
clc
repnz
nop
nop
jae
mov
mov
cmc
jmp
add
add
add
insl
inc
add
jle
mov
popa
fwait
clc
repnz
nop
nop
jae
cmp
mov
add
push
xor
gs
clc
repnz
nop
nop
jae
and
sbb
insl
add
jle
add
aaa
pushl
clc
repnz
nop
nop
jae
mov
insb
jle
and
call
clc
repnz
nop
nop
jae
add
add
mov
dec
push
lds
xchg
repnz
nop
nop
jae
add
popa
jle
or
add
clc
repnz
nop
nop
jae
mov
adc
add
add
push
mov
xchg
ret
pop
insb
add
pop
add
add
mov
lods
call
nop
push
mov
leave
nop
jmp
dec
mov
cmc
lahf
push
mov
clc
repnz
nop
nop
jae
add
loope
mov
mov
and
nop
jae
cmp
adc
adc
add
dec
in
cmp
xor
push
mov
xchg
ret
add
and
pop
addb
sti
add
and
inc
add
mov
nop
nop
jae
iret
add
add
add
add
call
clc
repnz
nop
nop
jae
xor
add
aam
add
push
mov
leave
nop
jmp
push
add
push
bound
bound
jecxz
sbb
cmp
repnz
nop
nop
jae
add
adc
mov
xchg
ret
jg
dec
xor
sti
sti
add
add
add
add
nop
push
mov
leave
nop
jmp
add
mov
iret
hlt
insl
iret
fdivs
fstps
repnz
nop
nop
jae
add
add
add
xor
add
adc
mov
clc
repnz
nop
nop
jae
jg
dec
add
add
add
mov
mov
push
mov
leave
nop
jmp
add
push
cmc
push
adc
in
bound
mov
push
mov
xchg
ret
adc
cmc
add
add
xor
add
outsl
call
clc
repnz
nop
nop
jae
add
push
mov
cld
nop
nop
jae
nop
pop
add
add
add
add
add
lock
push
mov
pop
add
add
stc
add
adcl
cmp
jecxz
int
jp
jbe
nop
push
mov
leave
nop
jmp
insb
mov
inc
add
push
clc
repnz
nop
nop
jae
add
popa
xor
adc
mov
or
hlt
loopne
add
jns
add
repnz
nop
nop
jae
in
jle
add
in
add
stos
clc
repnz
nop
nop
jae
jg
insb
mov
add
add
fistl
nop
jmp
add
add
cmp
push
lahf
cmp
repnz
nop
nop
jae
add
mov
pop
inc
gs
or
loope
clc
repnz
nop
nop
jae
hlt
xlat
cmp
inc
add
add
lss
clc
repnz
nop
nop
jae
add
add
cld
nop
nop
jae
inc
xor
add
add
add
bound
xor
clc
repnz
nop
nop
jae
adc
mov
dec
notl
clc
repnz
nop
nop
jae
mov
xor
add
xchg
fnsave
add
push
mov
xchg
ret
call
add
add
jle
add
nop
jmp
add
add
add
clc
repnz
nop
nop
jae
bound
insb
pop
add
dec
push
push
mov
xchg
ret
add
jle
push
add
aam
add
in
add
dec
push
cmp
mov
add
add
je
sub
mov
clc
repnz
nop
nop
jae
add
push
add
sbb
jecxz
inc
add
cmp
jb
jle
add
push
push
mov
xchg
ret
add
add
iret
inc
add
add
push
add
clc
repnz
nop
nop
jae
add
jb
add
add
dec
nop
push
mov
leave
nop
jmp
in
add
add
inc
or
hlt
add
add
jne
clc
repnz
nop
nop
jae
dec
or
add
mov
repnz
nop
nop
jae
add
push
add
add
cs
nop
push
mov
leave
nop
jmp
dec
add
mov
bound
scas
push
push
mov
xchg
ret
cmc
push
out
add
inc
pop
add
cmp
nop
nop
jae
add
out
hlt
add
push
adc
push
nop
push
mov
leave
nop
jmp
jg
add
adc
cmp
add
les
outsl
inc
add
dec
add
add
jb
or
nop
nop
jae
add
add
mov
mov
clc
repnz
nop
nop
jae
cmp
add
inc
pop
iret
hlt
add
mov
clc
repnz
nop
nop
jae
cmp
add
mov
inc
gs
clc
repnz
nop
nop
jae
inc
nop
add
add
jb
add
mov
sbb
add
repnz
nop
nop
jae
xlat
add
add
cmp
add
push
imul
cmp
ret
push
add
jle
add
jle
add
add
ret
clc
repnz
nop
nop
jae
add
mov
cmp
add
add
dec
jecxz
dec
clc
dec
inc
clc
repnz
nop
nop
jae
cmp
add
aam
xchg
nop
push
mov
leave
nop
jmp
push
mov
mov
add
mov
and
push
mov
xchg
ret
add
add
mov
add
nop
nop
jae
insb
add
or
add
call
adc
add
dec
add
cmp
inc
xor
enter
fistl
mov
nop
push
mov
leave
nop
jmp
add
mov
jne
shrb
repnz
nop
nop
jae
cmp
add
push
add
cld
nop
nop
jae
add
out
add
add
add
add
in
lea
push
mov
xchg
ret
adc
adc
out
add
add
add
add
cmpb
jecxz
nop
push
mov
leave
nop
jmp
inc
push
jb
cmp
jb
jle
mov
clc
repnz
nop
nop
jae
add
or
add
sub
mov
repnz
nop
nop
jae
popa
add
cmp
dec
pop
rorl
ret
sbb
add
repnz
nop
nop
jae
add
out
add
sbb
mov
push
mov
xchg
ret
xor
add
inc
add
fld1
clc
repnz
nop
nop
jae
cmp
add
add
popa
push
cmp
push
mov
xchg
ret
inc
add
add
add
add
loope
movsl
add
nop
push
mov
leave
nop
jmp
add
add
cmp
push
add
clc
repnz
nop
nop
jae
movsl
add
xor
push
add
pop
push
add
add
clc
repnz
nop
nop
jae
pop
xor
add
ret
mov
add
add
add
add
jg
cmpsb
js
xlat
movzwl
clc
repnz
nop
nop
jae
movsl
add
call
mov
clc
repnz
nop
nop
jae
add
add
add
xor
movswl
clc
repnz
nop
nop
jae
jle
sti
xlat
pop
add
cwtl
scas
push
nop
push
mov
leave
nop
jmp
adc
loope
cmp
add
movsl
add
test
pop
call
nop
jmp
xlat
add
add
adc
fld1
push
mov
xchg
ret
add
add
nop
cmc
add
dec
add
jle
pop
push
mov
xchg
ret
in
add
and
gs
inc
add
sub
inc
push
mov
xchg
ret
add
add
xor
in
add
rolb
loop
clc
repnz
nop
nop
jae
add
add
mov
inc
inc
add
repnz
nop
nop
jae
sbb
add
xor
push
adc
fld1
clc
repnz
nop
nop
jae
cmp
insb
jle
add
jg
add
lea
cli
clc
repnz
nop
nop
jae
add
xlat
jg
mov
add
xlat
push
push
mov
xchg
ret
adc
popa
mov
add
mov
add
add
inc
push
mov
xchg
ret
add
mov
add
jle
inc
add
add
not
add
clc
repnz
nop
nop
jae
dec
add
dec
add
sbb
push
repnz
nop
nop
jae
pop
add
out
xor
adc
test
add
repnz
nop
nop
jae
add
add
jb
pop
clc
repnz
nop
nop
jae
push
mov
add
add
adc
add
out
in
add
add
clc
repnz
nop
nop
jae
add
mov
clc
repnz
nop
nop
jae
add
or
iret
and
add
pop
sbb
push
push
mov
xchg
ret
xor
aam
jle
adc
mov
sub
clc
repnz
nop
nop
jae
adc
pop
pop
add
insl
xor
fimull
add
jne
clc
repnz
nop
nop
jae
adc
add
adc
add
or
clc
repnz
nop
nop
jae
add
jle
mov
in
rep
push
mov
xchg
ret
add
add
cmp
jg
hlt
pop
mov
clc
repnz
nop
nop
jae
mov
xor
mov
mov
xchg
ret
xor
add
add
jge
dec
sub
repnz
nop
nop
jae
add
add
add
in
movsl
adc
lds
inc
add
add
dec
add
add
push
mov
jmp
add
add
cmp
xor
inc
add
add
clc
repnz
nop
nop
jae
add
insb
jle
add
adc
nop
push
mov
leave
nop
jmp
cmp
inc
adc
out
add
push
push
mov
xchg
ret
add
jle
mov
add
sti
add
cmp
adc
repnz
nop
nop
jae
cmp
add
push
add
xor
clc
repnz
nop
nop
jae
add
add
add
add
push
xor
in
leave
nop
jmp
insb
add
cmc
add
cmp
add
and
or
xchg
mov
clc
repnz
nop
nop
jae
add
inc
mov
mov
push
mov
xchg
ret
add
add
lahf
add
add
nop
push
mov
leave
nop
jmp
add
mov
add
aam
push
add
lret
mov
ss
clc
repnz
nop
nop
jae
add
mov
sti
mov
repnz
nop
nop
jae
in
popa
add
add
or
lret
mov
clc
repnz
nop
nop
jae
pop
add
add
dec
mov
call
inc
add
adc
add
add
push
xor
adc
cld
nop
nop
jae
mov
mov
movsl
add
mov
sbb
clc
repnz
nop
nop
jae
add
cmp
add
mov
push
cmp
repnz
nop
nop
jae
mov
add
pop
add
add
add
fisttps
mov
adc
repnz
nop
nop
jae
and
inc
mov
sub
push
mov
leave
nop
jmp
sbb
mov
add
pop
clc
repnz
nop
nop
jae
add
add
add
add
push
clc
repnz
nop
nop
jae
add
hlt
add
add
fld1
clc
repnz
nop
nop
jae
add
add
add
hlt
add
pop
inc
push
add
enter
nop
nop
jae
add
add
add
xor
clc
repnz
nop
nop
jae
adc
add
hlt
add
fisttpl
mov
and
add
repnz
nop
nop
jae
add
add
add
add
gs
repnz
nop
nop
jae
movsl
mov
add
addb
push
mov
xchg
ret
add
xlat
bound
add
push
add
mov
xchg
jns
ret
push
mov
xchg
ret
add
inc
add
mov
add
add
mov
cld
nop
nop
jae
add
call
lret
shr
clc
repnz
nop
nop
jae
xor
add
add
mov
xchg
ret
add
add
push
push
dec
mov
call
repnz
nop
nop
jae
lahf
orb
add
push
add
clc
repnz
nop
nop
jae
hlt
dec
sbb
iret
add
add
ss
push
mov
xchg
ret
movsl
add
add
adc
push
aam
lea
mov
xchg
ret
insb
add
add
jg
add
call
call
nop
push
mov
leave
nop
jmp
cmc
xor
cmp
inc
mov
push
inc
add
add
and
xor
add
mov
clc
repnz
nop
nop
jae
cmc
add
insl
add
pop
xlat
push
mov
mov
xchg
ret
add
add
add
adc
in
bound
or
repnz
dec
add
push
clc
repnz
nop
nop
jae
out
nop
add
popa
add
adc
push
xor
clc
repnz
nop
nop
jae
cmp
call
or
dec
xchg
clc
repnz
nop
nop
jae
push
mov
xlat
add
pop
in
add
add
fisttpll
cld
nop
nop
jae
push
add
add
cmc
and
mov
mov
xchg
ret
add
add
add
push
mov
clc
repnz
nop
nop
jae
inc
xor
add
add
or
outsb
add
repnz
nop
nop
jae
hlt
add
xor
cmpb
das
lea
nop
push
mov
leave
nop
jmp
add
add
lahf
add
jg
xorb
or
add
push
loope
push
mov
xchg
ret
add
cmp
add
insl
cmp
add
push
mov
xchg
ret
add
xor
push
inc
add
sub
repnz
nop
nop
jae
or
jb
add
hlt
mov
and
jp
iret
div
nop
push
mov
leave
nop
jmp
jle
adc
add
add
sbb
xchg
add
clc
repnz
nop
nop
jae
sbb
iret
add
add
in
add
inc
clc
repnz
nop
nop
jae
cmc
gs
add
xlat
add
clc
pop
jne
clc
repnz
nop
nop
jae
movsl
add
jle
push
popa
pusha
add
mov
push
mov
xchg
ret
add
add
add
dec
jb
inc
add
popa
sub
nop
push
mov
leave
nop
jmp
movsl
xor
add
add
loope
add
ds
aam
clc
repnz
nop
nop
jae
adc
loope
push
add
push
clc
repnz
nop
nop
jae
add
add
jle
aam
add
inc
add
clc
repnz
nop
nop
jae
add
xor
or
or
add
mov
leave
push
push
mov
xchg
ret
in
add
or
dec
add
gs
or
jns
mov
push
mov
xchg
ret
add
mov
add
add
dec
mov
mov
jle
pushf
js
add
clc
repnz
nop
nop
jae
add
add
add
sbb
ljmp
cld
nop
nop
jae
mov
add
add
aam
xchg
mov
clc
repnz
nop
nop
jae
hlt
add
add
sti
add
xchg
je
stos
clc
repnz
nop
nop
jae
add
sbb
mov
push
mov
add
adc
dec
add
add
or
call
nop
nop
jae
add
cmp
mov
xor
add
push
clc
repnz
nop
nop
jae
insb
add
dec
cmp
push
add
xchg
sbb
clc
repnz
nop
nop
jae
hlt
add
push
add
cmc
add
mov
inc
clc
repnz
nop
nop
jae
jle
jg
cmp
cmp
push
mov
add
cmp
nop
push
mov
leave
nop
jmp
xor
adc
add
inc
enter
mov
xchg
ret
add
add
jg
add
add
add
mov
cld
nop
nop
jae
xor
add
dec
call
inc
clc
repnz
nop
nop
jae
sbbb
adc
pop
rcrb
nop
nop
jae
add
cmp
inc
mov
mov
inc
adc
repnz
nop
nop
jae
add
cmpb
add
cld
nop
nop
jae
add
nop
mov
add
add
and
clc
repnz
nop
nop
jae
add
cmp
add
mov
nop
push
mov
leave
nop
jmp
jle
insb
add
mov
add
push
pushf
add
mov
xchg
ret
mov
add
in
add
or
in
leave
nop
jmp
movsl
push
add
add
add
push
hlt
cmc
shr
clc
repnz
nop
nop
jae
or
add
or
pop
mov
lock
mov
xchg
ret
cmp
xor
jle
add
insl
push
adc
jnp
jle
clc
repnz
nop
nop
jae
dec
cmp
inc
push
add
bound
pop
xchg
clc
repnz
nop
nop
jae
inc
sbb
mov
mov
and
push
mov
xchg
ret
xor
or
add
and
clc
repnz
nop
nop
jae
add
addb
add
add
test
add
add
add
add
add
inc
inc
add
adc
je
clc
repnz
nop
nop
jae
add
in
add
pop
adc
repnz
nop
nop
jae
add
add
xchg
push
push
mov
xchg
ret
add
push
lahf
add
in
jg
add
repnz
ret
call
nop
push
mov
leave
nop
jmp
add
call
dec
push
mov
clc
mov
nop
nop
jae
adc
add
xchg
stos
or
test
add
clc
repnz
nop
nop
jae
add
add
push
jle
pop
clc
repnz
nop
nop
jae
push
cmp
add
jle
sub
mov
xchg
ret
add
add
add
pop
addb
lahf
add
clc
repnz
nop
nop
jae
add
add
arpl
repnz
nop
nop
jae
add
push
add
mov
inc
rep
clc
repnz
nop
nop
jae
add
add
add
add
fld1
clc
repnz
nop
nop
jae
xor
add
adc
add
add
mov
shlb
add
add
ret
add
add
clc
repnz
nop
nop
jae
add
add
add
insb
add
xor
push
mov
xchg
ret
add
xlat
add
and
pop
add
insl
lret
sub
add
repnz
nop
nop
jae
cmc
inc
mov
iret
xlat
gs
nop
push
mov
leave
nop
jmp
add
add
add
dec
into
clc
sbb
sbb
nop
jae
add
dec
add
pop
lcall
in
leave
nop
jmp
dec
add
xor
lahf
add
mov
clc
repnz
nop
nop
jae
add
aam
add
add
add
sbb
xor
clc
repnz
nop
nop
jae
movsl
call
cmp
test
cli
adc
clc
repnz
nop
nop
jae
xor
add
add
mov
add
nop
push
mov
leave
nop
jmp
add
add
add
clc
repnz
nop
nop
jae
sub
add
clc
repnz
nop
nop
jae
jle
push
add
add
add
dec
add
push
clc
repnz
nop
nop
jae
add
jle
sti
push
hlt
dec
add
add
pop
clc
repnz
nop
nop
jae
add
dec
add
add
add
add
jnp
jo
mov
xchg
ret
sti
mov
xor
add
mov
clc
repnz
nop
nop
jae
insb
add
inc
add
mov
inc
add
dec
cmpw
nop
push
mov
leave
nop
jmp
out
jle
add
inc
jle
movswl
clc
repnz
nop
nop
jae
xlat
jb
dec
add
add
add
imul
gs
repnz
nop
nop
jae
adc
mov
jle
and
clc
repnz
nop
nop
jae
add
pop
add
add
inc
add
add
ret
clc
repnz
nop
nop
jae
dec
add
add
cmp
and
bound
add
nop
jmp
add
aam
or
adc
add
jg
fwait
push
mov
xchg
ret
add
push
add
adc
xor
sub
clc
repnz
nop
nop
jae
mov
add
dec
mov
or
mov
xchg
ret
add
add
add
les
clc
repnz
nop
nop
jae
xor
add
dec
adc
jmp
cld
nop
nop
jae
add
add
cmp
add
nop
push
mov
leave
nop
jmp
add
adc
add
in
add
add
cli
es
adcb
inc
add
arpl
sub
add
add
iret
push
aas
add
add
jl
inc
add
mov
jle
add
pushf
mov
idiv
repnz
nop
nop
jae
mov
add
movsl
sub
jle
push
clc
repnz
nop
nop
jae
movsl
jle
push
popa
cmc
add
adc
add
popa
nop
push
mov
leave
nop
jmp
cmp
add
add
enter
add
mov
nop
push
mov
leave
nop
jmp
mov
add
add
cmc
add
push
clc
repnz
nop
nop
jae
hlt
add
mov
adc
add
add
pop
push
mov
xchg
ret
pop
add
mov
xor
xor
push
clc
repnz
nop
nop
jae
add
adc
adc
add
add
insl
add
dec
add
mov
xchg
ret
iret
dec
push
xor
hlt
add
add
clc
repnz
nop
nop
jae
xlat
pop
mov
xor
xor
add
push
pop
push
mov
xchg
ret
add
add
add
mov
add
xchg
add
clc
repnz
nop
nop
jae
add
add
add
add
sti
add
push
mov
leave
nop
jmp
bound
xlat
jle
adc
add
test
nop
push
mov
leave
nop
jmp
out
insb
add
sbb
add
inc
clc
repnz
nop
nop
jae
mov
add
add
add
aam
mov
clc
repnz
nop
nop
jae
mov
addb
push
cmp
clc
repnz
nop
nop
jae
addb
adc
pop
out
add
add
add
clc
repnz
nop
nop
jae
inc
mov
add
mov
and
scas
cmpb
repnz
nop
nop
jae
mov
add
daa
mov
push
mov
xchg
ret
add
sbb
add
gs
add
jg
roll
repnz
nop
nop
jae
mov
out
in
adc
sub
add
clc
repnz
nop
nop
jae
in
out
mov
inc
add
add
mov
xchg
ret
add
cmp
add
add
clc
repnz
nop
nop
jae
add
insl
insb
adcb
clc
repnz
nop
nop
jae
add
in
add
adc
push
push
mov
xchg
ret
add
add
insb
xor
add
add
in
adc
jae
repnz
nop
nop
jae
jb
andb
insl
add
clc
repnz
nop
nop
jae
add
pop
dec
mov
jle
adc
mov
clc
repnz
nop
nop
jae
insl
in
add
add
mov
xchg
ret
add
add
out
inc
mov
mov
nop
push
mov
leave
nop
jmp
add
inc
add
lret
push
push
mov
xchg
ret
dec
adc
jle
mov
add
push
cld
push
add
add
clc
repnz
nop
nop
jae
cmp
xor
pop
and
repnz
nop
nop
jae
add
push
or
dec
dec
add
xor
push
mov
xchg
ret
hlt
bound
add
add
bound
pop
jmp
add
adc
add
jle
add
add
add
mov
add
mov
leave
nop
jmp
popa
xlat
add
add
dec
mov
nop
push
mov
leave
nop
jmp
mov
mov
in
add
xchg
orb
ja
push
mov
xchg
ret
add
nop
push
add
cmp
cmp
add
add
mov
clc
repnz
nop
nop
jae
add
push
cmp
add
scas
sub
popa
clc
repnz
nop
nop
jae
push
add
add
push
mov
leave
nop
jmp
add
jle
add
mov
mov
inc
add
lahf
add
aam
aam
add
inc
xlat
push
ret
clc
repnz
nop
nop
jae
add
mov
mov
mov
lret
out
clc
repnz
nop
nop
jae
add
add
hlt
add
movsb
neg
call
leave
nop
jmp
add
hlt
push
dec
mov
add
jg
clc
repnz
nop
nop
jae
out
mov
push
jle
add
add
lods
mov
clc
repnz
nop
nop
jae
add
add
adc
clc
repnz
nop
nop
jae
jle
inc
movsl
add
sti
or
add
lods
cmp
nop
push
mov
leave
nop
jmp
add
add
add
pop
push
int
movb
mov
xchg
ret
add
add
add
add
ja
add
inc
or
insb
jle
add
adc
add
add
nop
jmp
push
add
movsl
in
in
dec
inc
inc
add
fistpl
push
mov
xchg
ret
mov
out
add
add
in
fld1
nop
push
mov
leave
nop
jmp
add
add
or
hlt
add
add
aam
add
clc
repnz
nop
nop
jae
jle
nop
add
dec
add
add
pushf
sahf
mov
add
dec
nop
push
mov
leave
nop
jmp
jle
pop
push
add
add
add
add
pop
push
mov
xchg
ret
out
add
add
jle
add
add
add
ficoml
movsb
nop
push
mov
leave
nop
jmp
xor
add
gs
mov
insb
add
movsl
rep
clc
repnz
nop
nop
jae
add
add
add
mov
addl
nop
nop
jae
add
inc
pop
lahf
add
pop
xor
clc
repnz
nop
nop
jae
add
add
add
nop
nop
jae
add
insb
add
add
add
aam
mov
sub
loope
in
push
mov
xchg
ret
add
add
push
cmp
add
push
sti
mov
clc
repnz
nop
nop
jae
add
pop
add
add
pusha
nop
push
mov
leave
nop
jmp
mov
cmp
add
add
mov
add
add
repnz
nop
nop
jae
pop
mov
add
out
add
lahf
push
mov
imul
clc
repnz
nop
nop
jae
jb
push
or
add
jnp
push
mov
xchg
ret
push
call
jg
add
add
mov
clc
repnz
nop
nop
jae
add
add
add
pop
sbb
mov
leave
nop
jmp
add
add
add
jle
cmp
add
nop
push
mov
leave
nop
jmp
add
add
adc
cld
int
push
mov
xchg
ret
add
inc
push
add
add
clc
repnz
nop
nop
jae
xlat
add
aam
add
push
clc
repnz
nop
nop
jae
add
jb
add
nop
in
dec
call
clc
repnz
nop
nop
jae
push
dec
lahf
add
jle
pop
mov
shl
clc
repnz
nop
nop
jae
add
mov
movsl
loope
add
or
repnz
nop
nop
jae
add
insl
loope
sbb
clc
repnz
nop
nop
jae
add
add
push
gs
dec
nop
push
mov
leave
nop
jmp
add
add
add
add
add
jb
mov
xor
mov
xchg
ret
xlat
in
pop
out
xlat
in
dec
add
sbb
loope
push
mov
xchg
ret
dec
add
mov
add
xor
add
inc
add
mov
clc
repnz
nop
nop
jae
add
add
add
push
push
mov
xchg
ret
add
add
add
mov
push
mov
xchg
ret
mov
inc
add
call
sbb
add
push
clc
repnz
nop
nop
jae
add
cmc
insb
add
jg
add
add
in
clc
repnz
nop
nop
jae
add
inc
add
add
add
in
mov
clc
repnz
nop
nop
jae
add
add
xor
dec
ret
push
push
mov
xchg
ret
inc
mov
insl
add
dec
add
fidivl
nop
push
mov
leave
nop
jmp
add
add
call
dec
mov
push
mov
xchg
ret
add
add
add
add
mov
pop
mov
jo
add
clc
repnz
nop
nop
jae
dec
mov
add
jle
mov
mov
clc
repnz
nop
nop
jae
dec
pop
add
push
add
push
stos
clc
repnz
nop
nop
jae
inc
nop
xor
push
insl
add
add
clc
repnz
nop
nop
jae
movsl
mov
hlt
in
add
stos
pop
clc
repnz
nop
nop
jae
add
add
and
mov
pusha
add
clc
repnz
nop
nop
jae
xlat
dec
add
add
adc
jp
add
repnz
nop
nop
jae
jg
add
xlat
xor
xor
add
mov
xchg
ret
add
add
add
add
mov
cmp
add
clc
repnz
nop
nop
jae
inc
add
add
add
dec
cmp
repnz
nop
nop
jae
add
and
add
add
add
cmp
nop
nop
jae
or
or
add
xor
push
pop
sbb
add
push
mov
xchg
ret
add
movsl
push
inc
add
add
add
jecxz
mov
inc
les
pop
hlt
dec
jle
push
add
add
out
add
add
add
call
clc
repnz
nop
nop
jae
add
dec
xor
lods
add
and
push
mov
leave
nop
jmp
iret
bound
xor
lret
push
push
mov
xchg
ret
jb
add
cmp
add
adc
out
add
clc
repnz
nop
nop
jae
add
add
mov
adc
cmp
add
sti
xor
push
add
xchg
push
push
mov
xchg
ret
movsl
bound
add
add
lds
cld
nop
nop
jae
sti
mov
or
mov
mov
stos
nop
push
mov
leave
nop
jmp
addb
loope
pop
dec
add
jle
insl
add
clc
repnz
nop
nop
jae
mov
dec
add
add
push
clc
repnz
nop
nop
jae
inc
cmp
add
add
pop
call
nop
push
mov
leave
nop
jmp
xor
xor
add
fdivr
repnz
nop
nop
jae
add
add
gs
push
sti
add
push
push
mov
xchg
ret
add
pop
add
add
add
mov
adc
clc
repnz
nop
nop
jae
iret
add
add
add
add
pop
mov
nop
push
mov
leave
nop
jmp
xor
cmp
aam
cmp
aad
sbb
push
mov
xchg
ret
jg
add
push
add
add
add
xchg
pop
fldt
nop
jae
add
xor
push
add
call
inc
nop
push
mov
leave
nop
jmp
jg
hlt
pop
jle
mov
add
mov
xchg
ret
cmp
add
lahf
xor
xor
add
adc
lret
clc
repnz
nop
nop
jae
mov
add
fists
repnz
nop
nop
jae
adc
add
jle
add
mov
repnz
nop
nop
jae
add
dec
aam
add
add
push
mov
xchg
ret
add
jle
mov
add
add
inc
roll
cld
nop
nop
jae
dec
in
add
pop
add
fistpl
push
mov
xchg
ret
jb
add
add
add
pop
clc
repnz
nop
nop
jae
push
add
add
push
add
add
add
pusha
clc
repnz
nop
nop
jae
add
add
dec
or
adc
fcmovb
orb
test
cld
nop
nop
jae
add
add
addb
mov
nop
push
mov
leave
nop
jmp
add
mov
add
dec
add
cmp
push
push
mov
xchg
ret
jg
xor
cmp
add
add
mov
jne
nop
push
mov
leave
nop
jmp
add
add
add
add
add
pop
push
fwait
not
push
mov
xchg
ret
mov
inc
add
add
add
clc
repnz
nop
nop
jae
add
hlt
jle
mov
pop
xlat
add
test
and
repnz
nop
nop
jae
mov
add
add
ljmp
add
repnz
nop
nop
jae
add
add
add
adc
sbb
clc
repnz
nop
nop
jae
lahf
and
out
add
add
punpckhdq
repnz
nop
nop
jae
out
add
mov
add
add
add
add
add
add
mov
add
mov
jl
mov
push
mov
xchg
ret
add
add
add
push
mov
xchg
ret
mov
insl
add
add
mov
cld
nop
nop
jae
add
add
add
add
movsl
insb
add
in
fwait
add
push
mov
xchg
ret
add
add
add
lahf
iret
add
movsl
call
mov
leave
nop
jmp
in
add
push
xor
mov
nop
push
mov
leave
nop
jmp
xlat
mov
mov
jb
jle
jne
clc
repnz
nop
nop
jae
add
add
in
leave
nop
jmp
add
movsl
mov
push
add
mov
cld
nop
nop
jae
add
cmp
push
popa
hlt
inc
mov
mov
cld
nop
nop
jae
jb
xor
or
nop
outsl
push
clc
repnz
nop
nop
jae
cmc
inc
add
cmc
lahf
adc
adc
repnz
nop
nop
jae
add
mov
add
xlat
add
mov
xchg
ret
add
add
movsl
gs
pop
out
add
clc
repnz
nop
nop
jae
add
adc
mov
sahf
add
add
repnz
nop
nop
jae
and
dec
xor
jns
gs
jo
clc
repnz
nop
nop
jae
add
add
insl
add
cld
nop
nop
jae
dec
add
cmc
or
add
jnp
mov
leave
nop
jmp
add
add
add
repnz
nop
nop
jae
xor
add
add
add
mov
clc
repnz
nop
nop
jae
loope
sbb
adc
push
cmp
nop
push
mov
leave
nop
jmp
jg
add
call
push
mov
xchg
ret
out
add
addb
add
cmc
jb
add
push
push
mov
xchg
ret
hlt
call
inc
xor
jle
inc
adc
cld
nop
nop
jae
add
sti
jle
add
mov
add
shr
clc
repnz
nop
nop
jae
jle
iret
add
add
jb
sbb
mov
repnz
nop
nop
jae
add
add
jle
and
add
aaa
jmp
add
add
inc
add
add
xor
adc
add
out
iret
add
cld
nop
nop
jae
add
add
call
test
in
call
nop
jmp
add
add
add
shl
push
nop
push
mov
leave
nop
jmp
pop
add
add
jle
pop
sbb
or
jl
add
cmc
inc
xlat
add
addb
jg
je
jne
nop
push
mov
leave
nop
jmp
xor
lahf
xor
add
push
mov
xchg
ret
add
xor
add
add
add
jle
movsb
xchg
bound
cmp
push
mov
xchg
ret
mov
jb
push
add
lods
nop
push
mov
leave
nop
jmp
inc
sbb
insb
jb
add
add
add
sub
push
mov
sar
repnz
nop
nop
jae
sbb
add
call
jmp
repnz
nop
nop
jae
mov
add
pop
in
movsl
add
add
hlt
cmpsl
add
nop
push
mov
leave
nop
jmp
add
insl
add
pop
add
add
fwait
push
clc
repnz
nop
nop
jae
dec
add
add
push
cmc
pop
orb
add
clc
repnz
nop
nop
jae
mov
inc
push
add
cmp
or
nop
nop
jae
nop
loope
dec
add
movsl
lahf
add
add
sti
jmp
cmc
add
jle
dec
add
mov
mov
nop
dec
add
nop
push
mov
leave
nop
jmp
mov
pop
inc
add
add
inc
push
mov
xchg
ret
insl
mov
dec
in
add
mov
add
push
fld1
push
mov
xchg
ret
sti
movsl
jle
add
popa
cmp
add
add
nop
push
mov
leave
nop
jmp
loope
push
movsl
push
inc
jg
adc
lahf
push
xchg
add
nop
push
mov
leave
nop
jmp
mov
jle
add
add
lds
xbegin
jae
cmp
sbb
inc
add
insl
fld1
push
mov
xchg
ret
dec
in
add
push
add
push
add
pop
mov
push
mov
xchg
ret
pop
inc
xor
add
mov
dec
or
add
repnz
nop
nop
jae
and
add
insl
mov
add
nop
push
mov
leave
nop
jmp
hlt
jle
xlat
or
or
push
add
pop
sub
repnz
nop
nop
jae
xor
add
mov
push
mov
xchg
ret
push
jb
add
add
sti
xor
add
push
mov
xchg
ret
mov
or
xor
mov
add
lods
push
mov
xchg
ret
add
out
add
mov
add
clc
repnz
nop
nop
jae
add
jle
mov
cmp
mov
clc
repnz
nop
nop
jae
add
add
add
call
inc
add
call
popa
insl
add
inc
pushl
clc
repnz
nop
nop
jae
gs
jle
mov
hlt
add
push
clc
repnz
nop
nop
jae
mov
cmp
add
cmc
add
cmp
jne
push
mov
xchg
ret
add
add
out
and
jle
add
imul
clc
repnz
nop
nop
jae
add
jb
jle
add
clc
repnz
nop
nop
jae
jle
push
push
inc
add
push
add
and
cld
nop
nop
jae
lahf
addb
add
push
mov
clc
repnz
call
nop
jmp
or
cmc
add
jle
clc
repnz
nop
nop
jae
add
add
mov
push
mov
xchg
ret
bound
add
inc
add
fucomp
clc
repnz
nop
nop
jae
push
jg
in
mov
or
in
clc
repnz
nop
nop
jae
iret
lahf
dec
add
add
add
mov
xchg
clc
repnz
nop
nop
jae
add
add
sbb
add
jle
subl
push
mov
xchg
ret
loope
add
add
add
add
add
inc
add
xor
jne
add
pop
add
mov
mov
incl
in
leave
nop
jmp
add
loope
add
in
add
call
inc
add
add
add
add
xor
add
fld1
push
mov
xchg
ret
add
add
add
push
aam
mov
push
mov
xchg
ret
adc
xlat
add
in
add
call
clc
repnz
nop
nop
jae
and
loope
add
popa
add
add
clc
repnz
nop
nop
jae
dec
cmc
add
add
push
addb
inc
add
xor
clc
repnz
nop
nop
jae
add
inc
sti
stc
shr
clc
repnz
nop
nop
jae
add
add
and
movzwl
push
mov
xchg
ret
jg
add
or
mov
nop
lea
pop
cmp
mov
xchg
ret
add
add
push
aam
nop
add
nop
push
mov
leave
nop
jmp
add
add
add
or
clc
repnz
nop
nop
jae
mov
inc
add
inc
add
cmpb
cld
nop
nop
jae
add
add
add
push
hlt
sbb
test
fwait
push
mov
xchg
ret
popa
add
push
sti
jle
hlt
add
jb
add
lahf
add
push
mov
xchg
ret
add
xor
add
hlt
aam
call
clc
repnz
nop
nop
jae
in
add
loope
dec
add
inc
add
jae
mov
leave
nop
jmp
add
mov
add
shr
nop
push
mov
leave
nop
jmp
add
add
push
xor
mov
repnz
nop
nop
jae
add
insl
add
add
add
bound
add
cld
cmp
mov
xchg
ret
xor
add
add
mov
add
clc
repnz
nop
nop
jae
mov
popa
add
insb
cmp
mov
clc
repnz
nop
nop
jae
add
push
dec
add
add
add
add
ljmp
add
repnz
nop
nop
jae
add
in
add
dec
adc
add
add
js
call
clc
repnz
nop
nop
jae
jle
add
adc
add
adc
repnz
nop
nop
jae
cmp
add
xor
pushf
in
roll
mov
xchg
ret
add
xor
add
pop
add
mov
out
jns
loop
push
mov
leave
nop
jmp
iret
or
add
push
add
push
mov
xchg
ret
jb
add
iret
cmp
push
push
cmp
push
add
fadds
nop
nop
jae
add
add
push
add
mov
mov
inc
add
push
rcll
in
pop
ljmp
stc
xchg
add
out
test
mov
dec
push
clc
repnz
nop
nop
jae
mov
xlat
dec
cmc
add
call
clc
repnz
nop
nop
jae
loope
add
sti
mov
clc
repnz
nop
nop
jae
add
adc
add
add
insb
add
iret
mov
clc
repnz
nop
nop
jae
mov
add
mov
clc
repnz
nop
nop
jae
jg
loope
adc
or
push
test
push
mov
xchg
ret
push
dec
add
add
add
movsl
push
clc
repnz
nop
nop
jae
inc
popa
add
call
add
stc
fwait
push
mov
xchg
ret
jg
add
add
sti
add
add
mov
push
mov
xchg
ret
add
add
popa
adc
pop
add
push
mov
xchg
ret
jb
add
loope
aam
iret
dec
add
cmp
nop
push
mov
leave
nop
jmp
add
mov
mov
and
mov
xchg
ret
orb
add
add
cmc
fld1
push
mov
xchg
ret
push
mov
mov
adc
push
lea
clc
repnz
nop
nop
jae
push
add
or
push
add
rcr
mov
clc
repnz
nop
nop
jae
cmc
adc
cmp
insb
sbb
mov
inc
add
repnz
nop
nop
jae
add
or
add
mov
fistpl
push
mov
xchg
ret
in
add
add
add
add
push
andb
jmp
clc
repnz
nop
nop
jae
add
pop
mov
jb
add
cmpl
nop
push
mov
leave
nop
jmp
sbb
popa
cmc
add
mov
push
clc
repnz
nop
nop
jae
push
or
add
add
jle
adc
cmpl
nop
push
mov
leave
nop
jmp
add
add
add
xor
mov
push
mov
xchg
ret
and
popa
in
add
iret
add
scas
mov
clc
repnz
nop
nop
jae
jle
pop
add
inc
xor
add
mov
clc
repnz
nop
nop
jae
add
movsl
add
or
cmpsb
out
rcll
repnz
nop
nop
jae
adc
add
dec
add
sti
mov
nop
push
mov
leave
nop
jmp
hlt
add
aam
in
pop
add
add
insl
xor
push
mov
xchg
ret
add
add
jle
mov
jmp
mov
add
add
dec
add
add
clc
repnz
nop
nop
jae
cmp
mov
add
add
add
add
clc
repnz
nop
nop
jae
inc
mov
xlat
add
iret
mov
clc
repnz
nop
nop
jae
push
adc
iret
add
add
roll
repnz
nop
nop
jae
add
cmc
add
add
add
adc
push
clc
repnz
nop
nop
jae
add
add
add
dec
dec
add
cld
nop
nop
jae
jg
hlt
add
mov
add
and
push
mov
xchg
ret
xor
add
cmc
add
cmpsb
repz
clc
repnz
nop
nop
jae
cmp
add
add
add
aaa
mov
clc
repnz
nop
nop
jae
add
add
loop
add
cld
nop
nop
jae
add
cmp
add
push
fistpl
clc
repnz
nop
nop
jae
or
jle
add
jle
popa
add
mov
clc
repnz
nop
nop
jae
jle
add
aam
in
out
cmp
je
clc
repnz
nop
nop
jae
add
add
clc
repnz
nop
nop
jae
lahf
jle
add
mov
clc
repnz
nop
nop
jae
add
add
add
add
add
lret
mov
clc
repnz
nop
nop
jae
add
add
pop
inc
enter
sub
sub
add
insl
add
add
adc
inc
add
jb
repnz
nop
nop
jae
add
in
add
push
jae
clc
repnz
nop
nop
jae
sti
add
out
add
call
repnz
nop
nop
jae
movsl
add
adc
add
or
inc
add
pop
add
inc
add
popa
shll
dec
shlb
je
arpl
pop
cmp
adc
xlat
xchg
add
sahf
push
cmp
std
jg
mov
sub
jge
add
push
mov
add
sbbl
cmp
jl
dec
add
mov
add
cmp
sarl
add
rolb
outsl
mov
inc
fdivs
in
shr
rorl
or
fisttpll
outsl
mov
pop
and
xchg
orl
pop
push
add
ds
repnz
lds
stos
cs
pop
dec
add
fimull
sub
sub
sahf
dec
push
fstl
or
sub
in
add
inc
add
sbb
sub
dec
or
sbb
sbb
lods
or
mov
ja
std
ss
mov
lcall
add
cmp
xor
sbb
push
gs
lret
xchg
xchg
jg
out
mov
add
fdivp
pop
lods
jae
sahf
cmp
enter
ja
add
mov
std
fs
jns
mov
and
fdivp
fwait
ret
cmp
push
mov
add
sbb
push
inc
mov
add
mov
cmp
add
sti
mov
dec
add
add
aam
add
int
mov
jnp
add
or
mov
mov
add
mov
loope
lahf
inc
add
add
mov
outsl
popf
mov
add
rcrb
mov
xchg
rclb
repz
or
push
or
mov
add
add
add
and
add
fidivl
and
add
add
es
add
mov
cmp
add
mov
adc
or
or
push
add
add
mov
popa
mov
pop
add
rcrl
lods
push
add
scas
popa
orb
sbb
loope
add
sarl
add
in
xchg
sbb
add
stos
inc
pusha
add
test
and
cmpsl
std
arpl
aas
push
add
iret
ss
in
mov
out
and
add
repnz
lahf
adc
add
imul
add
and
add
data16
inc
add
out
push
mov
mov
push
ja
sub
pop
into
mov
mov
mov
cmpsb
ljmp
lret
jg
loope
xchg
xchg
xor
sub
push
add
les
dec
jno
cmp
mov
mov
mov
dec
mov
add
dec
sub
mulb
out
add
and
loope
add
add
rolb
cmp
mov
add
or
jge
mov
cmp
fnstsw
pop
popa
and
xlat
add
fidivrl
mov
push
insb
add
or
int
jne
mov
add
mov
cwtl
shll
mov
jno
dec
pop
fst
arpl
stos
dec
mov
in
mov
add
popf
push
add
sub
inc
add
incl
mov
add
and
push
sbb
mov
cmc
inc
sbb
stos
mov
rcr
and
outsb
add
in
outsb
add
fscale
fmulp
inc
inc
pop
mov
sbb
scas
inc
add
xchg
cmp
dec
add
out
pop
cltd
mov
mov
fmull
cmp
test
add
aad
stos
add
test
push
add
xchg
shl
roll
add
sub
outsl
ret
xchg
sub
sbb
loopne
mov
and
cwtl
xchg
loop
aaa
je
stos
iret
jge
add
fmul
ret
jb
add
lds
popf
dec
mull
add
cmp
setb
std
in
jge
add
cltd
adc
and
sbb
clc
jnp
test
add
pushf
inc
add
jge
or
xlat
push
mov
sbb
and
xchg
pop
pop
jmp
add
pushf
jns
or
imul
add
mov
pop
dec
or
mov
pop
jns
sbb
jns
jae
inc
idivb
mov
nop
xor
xor
add
jecxz
out
adc
jb
xor
or
in
pop
mov
mov
jg
or
mov
rorb
adc
adc
jmp
lock
fyl2xp1
js
jo
jbe
hlt
icebp
les
or
mov
cwtl
sahf
test
and
add
jae
xchg
xlat
sub
mov
sti
jno
ja
je
xchg
add
lcall
sbb
int3
cli
std
push
sbb
iret
leave
add
lcall
in
push
mov
std
mov
mov
push
cld
fimull
add
add
in
push
jmp
add
mov
push
cmpsb
jne
imul
jp
fbstp
data16
pop
pop
jp
aas
and
add
sbb
jl
scas
cwtl
cmc
test
stos
nop
xor
insl
cmc
mov
xchg
shlb
push
mov
mov
jge
push
inc
add
popf
sbb
add
leave
jae
iret
mov
xor
ja
xchg
fistpll
adc
mov
jmp
push
pop
adcl
inc
add
push
sbb
daa
in
dec
add
or
sti
les
ljmp
inc
in
pop
dec
add
div
push
lods
mov
dec
mov
inc
add
xor
add
inc
add
pushf
mov
mov
mov
cmc
fcmovb
je
add
inc
add
add
ret
subl
aaa
xor
or
stos
pop
repz
cmp
aad
in
add
call
sub
add
dec
push
add
cmpsl
jg
add
push
mull
mov
add
jne
lods
cltd
jae
push
out
pop
dec
add
incb
add
add
add
jmp
sbb
adc
in
dec
add
adc
adc
orb
lods
cmp
or
ret
mov
imul
lods
adcb
cmp
dec
add
xchg
lock
xor
inc
add
add
add
mov
repnz
mov
add
xchg
add
fsub
xor
adc
xor
cmpsb
rclb
add
add
adc
add
lret
insb
add
loop
pop
cmc
xor
sbb
lea
add
add
add
xchg
xchg
into
inc
add
arpl
mov
push
icebp
jns
add
cli
outsl
push
add
test
add
ds
mov
add
inc
add
insl
add
repnz
imul
add
pop
push
sbb
mov
vandnps
pop
cmp
cli
inc
add
scas
inc
add
add
adc
add
push
push
push
jno
pop
nop
das
test
adc
in
add
movsl
sub
dec
add
dec
fs
and
and
add
repz
fisttpll
add
dec
add
nop
xchg
add
mov
mov
ljmp
add
add
addb
inc
test
add
in
adc
dec
push
jmp
sahf
mov
jo
ljmp
imul
dec
add
xchg
addr16
mov
add
insb
add
lock
movsb
scas
cltd
pusha
add
add
lods
movsb
mov
cld
lcall
cmp
mov
aaa
and
jnp
and
std
adc
lock
hlt
cmp
push
clc
sahf
mov
lods
outsb
add
push
test
xor
jecxz
clc
and
outsb
add
xchg
les
adc
inc
add
pusha
add
add
fbld
fwait
sub
jo
loop
cwtl
push
add
sbb
or
sbbb
adc
ret
xor
add
icebp
push
pop
ds
inc
and
sbb
add
dec
jg
xorb
xchg
sbb
int
mov
scas
mov
add
mov
lock
out
lea
clc
pop
jne
pop
xchg
push
add
jnp
sbb
ds
shll
or
aaa
add
out
add
adc
rcll
hlt
add
shr
jg
push
add
push
add
dec
dec
add
inc
add
in
insb
add
inc
xor
test
aas
std
outsb
add
mov
xchg
aad
dec
add
mov
add
add
nop
add
jge
mov
lock
mov
shrb
out
sbb
addr16
mov
cmpsb
aad
jo
xchg
hlt
adc
ret
in
and
scas
cmp
les
inc
or
add
add
sbb
ja
sbb
fldln2
pop
mov
adc
dec
notl
lcall
add
int3
dec
movsl
mov
stos
add
pop
jae
mov
movsl
rcrb
sub
add
sahf
add
dec
adc
xchg
mov
jbe
ljmp
aad
imull
icebp
adc
inc
add
dec
lds
test
or
push
add
add
divb
inc
rcr
xchg
sbb
jno
sbb
xor
dec
add
jmp
and
add
enter
popa
fidivrl
ret
das
mov
jae
loope
add
mov
mov
mov
pop
jge
cltd
repz
movsb
ficomps
arpl
cmpsl
inc
add
cwtl
dec
add
push
loopne
pop
outsl
dec
add
add
outsl
mov
loopne
leave
xor
pop
fidivl
dec
ljmp
xchg
xchg
sbb
mov
add
pop
popa
loope
jne
dec
mov
mov
mov
mov
mov
or
xor
out
in
cld
out
jge
jae
mov
mov
cmp
in
dec
sbb
in
mov
add
test
pop
push
imul
popa
arpl
lock
test
add
jle
outsl
mov
shrb
push
outsb
add
cmp
dec
pop
sub
out
mov
add
push
rorl
add
adc
xlat
movsb
jg
js
lds
sbb
xchg
adc
add
cmp
mov
mov
inc
jo
ds
add
out
pop
out
add
mov
add
mov
bswap
loop
fdiv
fcomi
sub
jge
pop
inc
sbb
test
mov
jnp
pop
mulb
cmp
add
push
cmp
cmp
jg
push
add
outsl
sub
jbe
pushf
ja
mov
imul
adc
stc
mov
xor
out
sti
adcb
or
sub
orb
cli
xor
push
add
adc
add
add
cwtl
push
inc
fidivl
add
add
lret
pushf
ret
add
popa
sbbb
xchg
sbb
jnp
adc
pop
mov
enter
int
fwait
xchg
mov
arpl
mov
rcll
add
lea
cmp
add
lret
pop
or
inc
add
xchg
fdivrl
rolb
push
ja
add
mov
add
mov
ljmp
push
repz
dec
add
xor
add
filds
xor
add
pop
push
pop
fsubrp
push
jl
xchg
stc
enter
pop
les
xor
les
icebp
pop
lock
mov
add
les
fmuls
xchg
in
add
rcrb
outsb
add
push
or
ret
push
add
in
out
pop
lds
rorl
sbb
cmpsl
in
add
push
std
lahf
xchg
inc
add
repnz
les
xor
sbb
stos
mov
add
call
popf
xchg
add
lret
sti
enter
pop
jle
jg
sbb
enter
addr16
push
test
pop
sub
sub
and
mov
add
cmc
push
std
sub
inc
add
or
adc
dec
sub
add
test
sub
add
mov
jnp
lret
cmp
repnz
lret
add
mov
nop
xchg
imull
add
fsub
jp
xor
bound
repz
lss
jg
xor
add
outsb
add
mov
arpl
add
test
shrl
add
in
adc
scas
inc
pop
nop
fcomps
ds
mov
stc
fsubrs
in
shll
mov
sti
xor
mov
dec
iret
push
push
fstl
sbb
mov
mov
add
jle
push
add
outsl
in
inc
test
cmp
adc
out
mov
add
inc
add
loopne
addl
jne
mov
insb
add
pop
mov
ja
sti
gs
mov
add
gs
mov
adc
test
jg
aam
js
movsl
int3
cmp
or
add
sbb
cmp
pushf
cmc
movsb
pop
mov
mov
mov
movsb
repz
cmovb
testl
adcl
push
mov
mov
imul
hlt
enter
cli
adc
mov
sub
aad
add
push
inc
outsl
jl
add
pop
popa
or
ljmp
sti
adc
sbb
add
sub
push
dec
xchg
outsb
add
mov
into
jge
sub
adc
fwait
xchg
jg
nop
mov
fcmove
jmp
add
mulb
lock
inc
fisubs
add
fsubs
or
jb
cld
cmp
pop
adc
sahf
test
jae
add
add
repnz
add
movsl
mov
add
push
jb
add
xor
jmp
adc
and
out
ja
add
add
add
addr16
cmp
aaa
push
add
xchg
dec
aam
aas
test
lds
fwait
jecxz
mov
test
mov
push
je
mov
add
gs
into
sbb
lret
ljmp
mov
cmp
sti
xor
mov
add
mov
aas
inc
add
dec
sub
cmp
pop
inc
push
sbb
add
mov
call
fists
clc
cmp
add
add
lcall
mov
outsl
les
mov
ljmp
out
push
mov
push
adc
cmp
divl
fwait
fwait
pop
cmp
lods
mov
jl
add
enter
cltd
inc
mov
popa
outsl
pusha
add
add
add
cltd
jns
dec
add
mov
rorb
and
sbb
clc
push
jecxz
in
add
cmp
lcall
mov
in
jne
adc
inc
add
add
popa
iret
repz
orb
sbb
sbb
mov
sub
out
test
jmp
lods
push
pusha
add
mov
test
pop
stos
mov
negl
add
nop
insl
int
or
adc
push
add
mov
cmp
call
add
lea
jns
adc
jnp
mov
mov
lret
das
cmc
popa
xchg
loopne
testb
add
mov
sbb
cmp
negb
mov
push
loope
add
sbb
add
xlat
jno
cmp
adc
mov
sbb
ljmp
dec
jle
add
jne
jmp
cmp
mov
fnsave
and
imul
push
inc
add
add
dec
push
cmp
add
pushf
mov
imul
add
or
imul
pop
fidivs
out
movsb
in
mov
xor
sti
imul
add
add
fsubl
mov
fadd
sub
rolb
aaa
testb
cmp
fstp
inc
sahf
pop
mov
int
mov
cmp
ret
mov
pop
or
in
mov
mov
add
stos
xor
and
jb
mov
test
add
fdivl
scas
test
add
add
sub
xchg
or
or
adc
loope
add
mov
xor
pop
adc
sbb
icebp
cmp
cmpsb
enter
add
sub
inc
add
aam
mov
fldcw
add
shr
add
nop
add
push
push
xor
pop
push
push
lahf
scas
clc
loop
cltd
add
xor
repnz
add
xor
xchg
add
cmpsb
xlat
pop
je
movsb
nop
sbb
out
lret
and
cmp
pop
aaa
add
sbb
loop
cmp
add
les
shlb
sahf
movsb
adc
leave
cltd
lcall
outsb
add
ud1
je
or
xchg
imul
xchg
cmpsb
adc
daa
xchg
sbb
dec
loop
pusha
add
loope
idivb
xchg
and
das
and
rclb
insl
dec
add
fdivrp
cmp
dec
add
jl
and
inc
enter
lods
movsl
push
cmp
sbb
inc
repz
add
stos
loop
in
xor
add
xchg
push
mov
hlt
push
notb
mov
xor
add
adc
add
adc
add
out
popa
inc
add
add
shll
xor
jo
aad
adc
daa
pop
imul
popf
xor
fdivrs
push
cli
inc
add
jbe
jge
stos
cmp
add
mov
jp
es
push
add
add
jne
and
and
mov
mov
fmul
inc
fstps
cld
pop
lods
and
add
pop
or
into
test
mov
test
add
repnz
pop
mov
pop
dec
add
add
and
adc
shll
lret
mov
ss
add
pop
mov
mov
pop
mov
and
rolb
popa
daa
pop
sub
iret
xor
addl
push
pop
add
push
push
and
cmp
lret
and
push
or
pop
mov
js
add
mov
or
xor
jmp
hlt
loop
sub
xchg
fisttpl
cmp
add
add
mov
jl
out
and
popa
ja
add
pop
inc
add
add
into
or
inc
add
push
add
shlb
push
mov
jp
cmp
int3
shll
mov
xor
mov
jb
das
jp
add
repnz
xchg
or
jl
sbb
mov
add
dec
add
mov
jo
pop
mov
repnz
f2xm1
jl
sub
xor
mov
lret
pop
mov
rorb
mov
das
lret
in
insl
xchg
sbb
xchg
push
add
lcall
cld
aas
lret
ret
push
push
std
push
out
incl
add
push
add
add
add
scas
testb
mov
xchg
adc
leave
xor
mov
push
ror
pop
lret
pop
cmpsl
insl
xlat
cltd
xchg
push
mov
push
mov
add
lret
clc
pop
fstps
lds
loop
and
das
add
xchg
inc
add
loop
xor
add
int
test
add
xor
add
push
add
in
or
pop
js
mov
add
sbb
mov
or
repz
add
test
jns
xchg
or
jb
cmpsb
inc
stos
add
ja
mov
in
mov
js
sahf
xchg
pusha
add
mov
adc
add
in
sahf
add
add
cli
mov
aad
mov
orb
add
add
inc
mov
add
fistl
cs
add
jne
push
add
add
adc
sbb
inc
pusha
add
add
jbe
test
cmpsl
xor
mov
inc
add
mov
mov
clc
mov
rorl
or
fisttpl
fldenv
int3
xchg
inc
add
repnz
sbb
dec
xor
adc
push
add
add
repnz
pop
in
pop
jo
add
daa
stos
xchg
and
clc
add
jge
jl
xchg
add
hlt
dec
ret
xor
dec
sub
push
stc
inc
xchg
icebp
jge
int3
frstor
sbb
pop
mov
in
shlb
add
mov
aaa
scas
and
xlat
pop
inc
add
ds
pop
dec
lcall
inc
add
testb
add
into
push
pop
cmp
fcmovnu
repnz
add
mov
imul
clc
in
jb
mov
fldl
gs
hlt
mov
jno
sbb
mov
mov
add
pop
cltd
lret
pop
outsb
add
lea
mov
lds
clc
sbb
pop
or
sbb
push
add
jecxz
icebp
cmc
int
mov
popa
mov
pop
cwtl
mov
int3
notb
test
sahf
cmp
push
inc
outsl
jno
mov
rcrb
or
xor
mov
add
fiaddl
push
jmp
pop
sbb
iret
mov
cmpsl
dec
add
xor
mov
cmpsl
shll
rcrb
ret
add
lahf
push
repnz
lcall
add
jmp
test
mov
repz
push
add
ret
dec
inc
fcmovnbe
scas
lcall
push
pop
inc
lret
mov
out
insb
add
add
aas
push
pop
sub
adc
outsl
cli
adc
arpl
add
int3
fmulp
cmpsb
or
cmpb
and
mov
test
or
inc
add
add
mov
add
xor
mov
dec
add
nopl
cmpb
xchg
adc
push
ud2
mov
hlt
lods
lock
and
mov
out
in
daa
pop
xchg
les
cmp
es
je
mov
push
lds
add
dec
add
add
push
out
inc
add
in
and
cld
movsl
and
and
push
push
jo
add
mov
add
mov
sbb
cmc
pusha
add
pusha
add
jg
push
sub
mov
mov
cltd
lret
inc
add
mov
cmp
fsubr
clc
mov
xor
push
cli
lahf
dec
add
jne
fwait
jge
not
dec
add
xlat
aad
aaa
lds
repz
js
sahf
shrl
mov
add
scas
orb
pop
adc
or
mov
leave
in
jp
lret
std
fwait
ret
xchg
sbb
add
fimull
rol
and
ret
or
sub
test
test
push
test
fisubl
fsts
and
pop
push
arpl
xor
push
mov
aaa
push
sub
test
mov
pop
push
add
ret
movsb
sti
data16
dec
add
loop
popa
movsl
test
xchg
inc
int
movsl
mov
add
out
sbb
or
lods
int
pusha
add
and
mov
cmovae
add
loope
ret
mov
cmc
fdivl
aam
cltd
xchg
mov
add
aad
push
out
inc
add
mov
jnp
test
inc
jae
or
add
ljmp
mov
int
and
sub
and
pop
mov
adc
add
loop
mov
icebp
pop
loopne
test
mov
xor
movsb
jmp
add
add
scas
nop
imul
and
sti
jp
mov
pop
imul
cmpsb
cmpl
xor
mov
jne
std
xchg
add
mov
lret
jg
xchg
add
popa
jno
sarb
aad
mov
mov
add
cmc
clc
pop
pop
sbb
fcoms
fisubrs
outsb
add
add
jne
mov
in
rorl
add
inc
add
icebp
jge
ljmp
add
add
add
add
aam
pop
aas
and
js
in
lds
jno
test
add
and
mov
mov
rclb
mov
test
leave
sbb
or
xchg
xchg
leave
incl
movsl
nop
testb
xchg
cmpsl
lods
xchg
out
int
xor
sbb
jnp
popa
mov
inc
add
add
inc
sub
mov
sbb
aas
clc
dec
fsubp
push
mov
add
add
sbb
jp
sbb
out
add
jbe
adc
add
hlt
cmpsl
adc
adc
mov
loope
lcall
loopne
pop
push
jno
mov
aas
mov
jp
fisubs
adc
fistps
scas
ret
mov
add
xchg
sbb
popf
mov
push
aam
sbb
sbb
or
aad
sbb
gs
sub
add
int3
xor
jge
dec
clc
lahf
push
or
mov
jae
addr16
push
rcll
out
leave
jbe
xor
xor
in
into
xchg
xor
pop
dec
add
lods
jb
mov
mov
jb
dec
add
cwtl
outsb
add
mov
add
pop
das
fsub
inc
add
or
scas
mov
mov
scas
dec
xchg
imul
mov
add
mov
add
outsb
add
int3
cmpsl
dec
add
stc
mov
repnz
xor
sahf
xchg
push
push
popa
adc
push
add
mov
outsb
add
push
sub
int3
inc
fnstcw
pop
dec
ljmp
mov
rcll
ret
add
add
mov
push
pusha
add
mov
fistps
sbb
aaa
sbb
fstpt
mov
and
stos
int
adc
mov
xchg
roll
xor
int
scas
fsubrs
jl
aaa
int3
inc
aam
in
jae
movsl
mov
pop
inc
add
rolb
loopne
xchg
xor
hlt
mov
dec
loop
add
push
pop
mov
jns
sbb
push
pop
mov
nop
fisttps
and
jl
add
mov
add
cwtl
and
pop
ja
push
mov
daa
jge
add
lock
aad
add
clc
test
mov
cli
add
push
sbb
mov
aaa
sbb
jmp
pop
in
or
xor
lock
cmp
add
mov
loope
add
test
gs
test
sarb
sbb
jb
ja
or
mov
out
jb
mov
add
out
xchg
dec
add
sub
and
inc
pushf
call
je
add
add
fcoml
shll
loope
mov
cld
rdmsr
jb
dec
add
adc
lcall
mov
mov
sarl
pusha
add
mov
in
push
in
cld
sub
xchg
call
add
scas
cli
loopne
mov
and
sar
test
clc
psubsw
jb
add
add
jbe
out
xchg
clc
test
add
add
inc
add
popa
shll
shrb
imul
add
sti
lock
fldenv
fwait
shll
mov
mov
cmp
sub
pop
pop
mov
mov
add
mov
adc
and
mov
or
sub
in
push
lcall
iret
jno
add
fsub
stos
in
jnp
pop
sbb
popa
or
push
test
jl
or
push
pop
gs
inc
addb
movsl
pushf
mov
cmpsl
sub
out
adc
rolb
add
add
bound
add
dec
add
sbb
or
add
dec
add
mov
xchg
mov
add
add
mov
xchg
sub
cmp
popf
cmp
lcall
ret
rolb
pop
and
sbb
movsl
xor
test
mov
leave
pop
int
add
bound
dec
push
push
or
leave
xchg
cmc
fisubs
mov
add
dec
jae
inc
add
aad
lods
push
subb
jbe
push
mov
cld
or
jle
xchg
xchg
loope
les
or
out
incb
add
jl
test
and
cli
or
add
mov
pop
cmp
add
cmp
add
add
lds
add
int3
cmp
sub
in
out
test
push
add
mov
lods
popf
stos
mov
and
sbb
inc
add
jge
pop
and
out
data16
stc
inc
inc
mov
jae
lds
push
and
icebp
ficoml
jne
cli
cmp
add
test
gs
fmuls
sub
xor
iret
je
cmp
add
or
lcall
pushf
pop
rorb
xchg
cltd
or
adcb
jne
test
jg
jmp
mov
add
imul
add
data16
push
mov
inc
add
mov
sub
mov
xlat
lea
mov
xchg
jg
enter
pop
push
mov
mov
or
roll
push
mov
add
rolb
add
clc
test
cmpsl
mov
pushf
hlt
add
sbb
jge
scas
sbb
mov
inc
aad
push
ljmp
and
rolb
pop
jo
ss
push
add
add
scas
xor
rolb
or
add
add
jno
mov
push
loop
gs
xchg
mov
inc
add
mov
rcr
out
add
xor
push
shrl
add
clc
mov
out
add
ret
leave
test
pop
pop
repnz
sub
dec
xor
lods
addr16
loopne
inc
add
repnz
dec
aad
and
jae
andl
adcb
and
out
add
hlt
jecxz
popf
les
jmp
mov
cmc
inc
add
add
mov
jno
aaa
fmuls
js
add
jl
sub
test
in
add
cmp
aam
pusha
add
lcall
add
pusha
add
cmc
js
adc
js
add
mov
imul
and
imul
outsb
add
fists
sbb
mov
sbb
adc
push
pop
add
dec
add
xchg
bound
fisttpll
mov
add
sbb
movsl
sub
push
bound
add
and
imul
pop
lret
rorl
add
cltd
jns
jo
data16
sbb
aam
add
push
add
loop
sub
add
outsb
add
jle
inc
add
add
outsb
add
add
pop
ljmp
xchg
gs
push
sub
les
pushl
xor
aad
xchg
fsubl
add
inc
pop
dec
enter
mov
pusha
add
test
add
es
pop
stos
mov
ret
jg
fistl
iret
pop
lock
inc
stc
sbb
push
and
je
outsl
pop
dec
shrb
push
add
mov
add
add
jge
xor
in
sti
sub
push
dec
add
pop
xchg
inc
add
lea
add
jp
adc
add
mov
inc
add
pop
jb
andb
arpl
addl
movsl
add
push
pop
mov
aas
nop
cmp
mov
insb
add
jp
jae
add
hlt
xchg
and
hlt
pop
into
das
dec
add
add
das
stos
dec
add
popf
and
sti
and
and
fsubs
bound
shrl
mov
add
les
add
pop
pop
sub
xor
out
xchg
push
pop
int3
inc
add
push
add
test
in
fisubl
sbb
scas
bound
out
push
jb
leave
fdivr
add
add
testl
mov
cmp
jp
call
out
cmp
in
gs
or
sti
fldenv
aaa
sub
mov
and
cltd
xchg
nop
cmp
push
add
add
inc
add
adc
pop
inc
add
js
add
sbb
sub
mov
imul
mov
add
pop
xor
sbb
jae
mov
and
insl
sub
or
mov
jo
aad
add
negb
and
jl
and
popf
mov
sub
add
xor
add
mov
leave
nop
roll
ret
sub
icebp
lahf
xchg
mov
fists
pop
push
int3
dec
pop
push
xorl
sub
push
mov
mov
jae
je
adc
mov
add
add
aas
gs
popf
lea
cmpsl
or
fldenv
pop
push
push
mov
xchg
insl
leave
ss
test
ljmp
insl
repz
imul
loop
aaa
mov
lret
pusha
add
insl
js
push
xchg
repz
shll
xlat
lea
mov
sbb
xchg
dec
pusha
add
pop
push
sub
add
add
add
int3
stc
adc
push
shrb
add
or
scas
fst
jmp
rolb
fwait
lret
push
pop
push
or
xchg
not
mov
add
cmc
pop
sub
aad
pop
pop
mov
sub
fs
nop
and
xor
inc
push
loopne
xor
jmp
xchg
xor
mov
dec
add
push
cmp
push
rclb
jmp
adc
sahf
ficoms
mov
cmpsb
xor
sub
push
js
adc
lods
lods
cwtl
mov
cmp
add
mov
fwait
lahf
mov
jmp
andl
std
pushf
inc
xchg
test
js
lds
roll
lods
enter
repnz
ja
cmp
popf
fistl
sub
call
cmc
test
ja
add
icebp
jnp
inc
sbb
xchg
xor
add
push
imul
sbb
addl
add
and
sahf
popa
and
xlat
hlt
aaa
clc
scas
sbb
cmpsb
xor
add
sub
add
dec
add
add
mov
cmp
mov
dec
mov
sbb
loopw
push
add
in
out
mov
lds
loope
push
fidivrl
add
hlt
pop
ds
fbld
push
sbb
roll
jg
mov
je
hlt
add
add
call
dec
cmpsl
inc
add
sbb
pushf
aam
push
dec
adc
in
inc
add
lret
stos
lret
or
push
mov
fbld
add
daa
into
dec
add
inc
mov
xchg
mov
int3
push
fldl
adc
das
lock
out
sarl
xor
mov
add
sub
cli
les
inc
inc
add
xor
loope
push
and
push
or
cli
aad
pop
jge
or
xor
add
aad
cli
adc
jae
ret
add
cltd
adc
add
mov
add
mov
stos
lea
add
pop
mov
fnsave
pop
aad
cli
aam
mov
push
or
arpl
dec
ds
test
add
aad
inc
cmp
cmp
jnp
sbb
add
dec
add
inc
test
xchg
call
xchg
jge
add
pop
mov
sub
imul
add
add
jae
add
inc
add
adc
add
mov
insb
add
mov
outsb
add
in
sbb
jge
repnz
push
add
repnz
lock
pusha
add
add
idiv
mov
ret
fidivl
lea
mov
xchg
cmc
add
mov
mov
imul
movl
add
andl
add
sbb
popf
mov
mov
push
mov
pop
fnstcw
pop
leave
movsl
es
inc
add
movsl
ss
inc
add
cmp
mov
sbb
jp
dec
movsb
outsb
add
dec
add
add
faddl
inc
mov
call
add
insb
add
subb
lock
insl
mov
xchg
hlt
add
mov
nop
cmc
xchg
sbb
cmp
ret
sbb
inc
add
jnp
out
add
mov
or
sbb
daa
lds
fisttpll
mov
add
add
insl
mov
add
mov
sub
xor
mov
orb
xor
lcall
movsb
dec
bound
mov
add
pop
enter
lock
sti
add
add
mov
unpckhps
add
rol
cmp
xor
or
mov
xchg
mov
out
xchg
lahf
cmp
add
insl
es
roll
aam
mov
fucomp
mov
add
mov
mov
jmp
ret
shlb
loope
push
nop
xchg
fcomps
add
mov
push
add
ja
mov
mov
sub
mov
fwait
stos
fidivrs
mov
loope
mov
call
ds
test
add
inc
mov
mov
add
pop
xor
repz
xor
adc
movsl
xor
mov
add
add
call
jmp
jmp
add
cmp
xor
rcrl
adc
mov
add
or
in
pop
inc
add
out
popa
add
scas
push
in
mov
mov
imul
add
mov
aas
add
jo
mov
jb
mov
mov
clc
inc
test
test
mov
adc
sbb
sub
dec
cwtl
xor
xchg
adc
add
cmpl
cmpsb
inc
add
xchg
jmp
int
add
add
mov
sub
add
addr16
stc
inc
add
cwtl
pop
out
rorl
clc
pushf
cmc
pop
inc
add
dec
or
adc
sbb
dec
add
jne
out
inc
adc
add
shll
add
popa
fwait
jbe
mov
repz
add
inc
pop
adc
cmp
dec
jge
jge
arpl
test
mov
inc
aam
inc
add
loop
push
dec
add
dec
add
add
dec
add
push
push
mov
inc
lret
mov
xchg
nop
das
enter
dec
add
out
fnstsw
test
add
cmp
and
jbe
jns
cmp
add
mov
jp
add
push
loopne
add
loopne
enter
repz
ficomps
add
or
inc
add
or
jb
shr
push
dec
add
jb
lcall
insb
add
add
repz
adc
add
push
add
test
or
dec
add
add
ljmp
sub
idivb
jno
add
add
add
mov
jo
addl
add
dec
add
shr
sub
cltd
add
adc
movsl
dec
add
add
ljmp
mov
adc
sti
cmpsb
imul
pop
sbb
js
pop
mov
push
test
xchg
hlt
add
in
jecxz
mov
push
rcll
sbb
leave
mov
add
loopne
add
sbb
ret
or
in
xchg
lods
sahf
call
cmc
bound
mov
add
rclb
sub
fldl
add
add
sbb
mov
cli
pop
jg
mov
int
jle
cmpsb
push
add
ja
and
jmp
daa
enter
ss
shl
sbb
push
je,pt
pop
push
jle
pop
add
outsb
add
shrb
add
movsl
jl
repnz
mov
mov
adc
testb
add
dec
call
push
lcall
mov
pop
xchg
and
adcb
mov
add
pushf
imulb
jns
pop
adc
add
add
xchg
sar
fdivl
popa
cmp
cmp
pop
mov
jge
sbb
test
dec
dec
push
and
push
adc
cmp
fdivp
xchg
ficomps
xchg
ret
nop
fisubl
xchg
dec
dec
dec
add
mull
fsubrs
add
sbb
add
xchg
xchg
and
addr16
pop
test
rcll
mov
test
rcrb
cwtl
xor
add
repz
stos
push
repnz
cmp
xchg
pop
add
inc
cmp
cmp
int3
pusha
add
lahf
sti
jnp
add
mov
mov
add
sbb
clc
adc
mov
ficoms
pop
xor
jp
lds
test
push
pop
ljmp
add
cmp
mov
or
and
add
sub
xor
sub
add
mov
push
mov
dec
push
loop
add
inc
jp
push
mov
imul
enter
stos
jbe
add
imul
sbb
jb
push
test
add
push
xor
mov
mov
loope
add
add
add
xchg
push
sub
adc
dec
add
scas
mov
add
xor
mov
add
es
xor
push
add
ret
xor
inc
add
xor
lds
pop
mov
ljmp
push
gs
sub
mov
pop
mov
data16
add
sbb
sub
jmp
add
adc
jl
push
add
stos
icebp
dec
mov
ret
add
push
mov
mov
lea
mov
cmp
lock
xor
adc
or
mov
je
insb
add
rorb
push
add
dec
add
sti
in
push
mov
sbb
add
adc
add
aas
jl
ficompl
mov
imul
pop
xor
aad
popf
orl
cmp
daa
clc
adc
mov
fcoml
stos
mov
data16
pop
sbbl
pop
xlat
fsubl
adc
inc
add
aaa
rcll
add
adc
int
addl
add
add
mov
mov
loop
sub
jb
jg
push
mov
fnstcw
xchg
jae
aad
jle
imul
dec
add
cmp
sti
ficomps
insl
shrb
mov
add
fwait
push
add
mov
dec
cmp
in
sbb
imul
add
lcall
into
pop
push
xchg
enter
or
add
add
sub
add
xchg
dec
add
mov
pop
dec
add
addl
push
xchg
push
mov
popf
mov
adc
fwait
ja
adc
add
pop
xchg
lcall
lods
movsb
xor
mov
repnz
cmpsb
pushf
nop
nop
lret
popf
clc
xchg
jnp
add
cmp
xchg
sub
std
icebp
pop
sub
mov
movsb
xchg
call
adc
out
movsl
out
lods
int3
adc
hlt
jne
test
mov
lcall
and
sahf
mov
aad
pushf
stc
pop
lods
jge
leave
icebp
je
pop
xor
jge
push
int3
fldl2t
shll
fbld
add
add
xchg
pop
xor
xor
adc
and
je
pop
imul
adc
test
adc
mov
test
mov
add
lock
popf
adc
pop
xlat
shl
imul
test
mov
add
insb
add
mov
sbb
sbb
mov
jno
jbe
add
mov
in
gs
add
repz
addr16
scas
add
daa
mov
mov
test
addb
iret
mov
clc
xchg
pop
jp
add
dec
add
lcall
cmovbe
dec
add
in
sbb
bound
or
cmc
jnp
aas
shrl
int3
add
add
lret
or
sub
push
or
xchg
adc
xchg
das
cmpsb
mov
cmp
jg
shld
jae
xor
lea
jge
jg
mov
in
cmp
bound
rcrl
dec
movl
pop
adcl
mov
adc
lret
add
push
addr16
add
add
push
add
sub
add
mov
insl
xlat
inc
add
push
push
mov
and
mov
mov
fisubrl
add
sysenter
movsl
push
and
pop
shrl
inc
add
or
mov
inc
mov
jno
add
dec
lret
xchg
inc
and
jno
cmpb
add
mov
add
sbb
dec
lret
add
mov
xchg
subb
outsb
add
pminsw
adc
ret
adc
les
add
add
mov
daa
xchg
clc
jae
cmpsb
jg
or
arpl
add
stc
jne
mov
push
push
inc
xchg
add
nop
ja
sub
pop
xor
add
sbb
sbb
mov
cmp
and
dec
fsubrs
xchg
cmp
mov
add
lea
add
push
add
sarb
cltd
mov
xchg
mov
add
add
int
and
cwtl
jo
in
add
call
push
inc
add
add
mulb
add
loopne
fsubr
mov
mov
pop
mov
fildll
fadd
aas
sub
ss
add
sub
int
sbb
or
mov
out
pop
loopne
add
add
movsl
cmpsb
mov
loop
adc
jg
lea
add
jne
and
pop
cmp
jno
test
adc
add
jno
and
add
lea
adc
int3
in
cmc
add
lcall
mov
js
add
decl
or
sbb
cmpsb
testl
mov
jno
xor
addb
inc
add
sbb
scas
xor
adc
add
fcmovu
data16
aas
stos
fsubl
add
add
or
movsl
std
or
popa
jb
fldl
iret
or
fsubrs
xor
add
add
mov
jnp
hlt
mov
add
pushf
sbb
mov
hlt
jecxz
insl
int
jnp
jp
lcall
lods
sti
jae
in
mov
add
add
mov
cmpb
pop
xchg
add
ss
add
in
fadds
push
lahf
push
data16
add
add
or
or
adc
push
adc
int3
js
mov
fsubl
xchg
cmp
pushf
orl
or
add
mov
clc
jmp
pushf
fdivr
loope
adc
testl
mov
in
js
cwtl
shll
int
jle
pop
mov
out
test
add
add
cli
dec
push
xor
popa
out
mov
xor
jbe
sub
loopew
testl
adc
scas
bound
int3
and
in
movsb
inc
add
fwait
movsb
pushf
xor
movsl
xchg
push
shlb
sbb
ds
mov
filds
imul
dec
decb
ja
inc
xlat
movsl
cmc
xchg
xor
add
addl
inc
add
mov
add
repz
in
test
lea
add
add
adc
add
pop
jno
lahf
xor
pushf
xchg
or
mov
mov
sub
cmp
mov
ja
mov
xchg
movsb
cwtl
outsl
repz
mov
jecxz
add
bound
sbb
stos
xorb
dec
add
lods
mov
pop
adc
das
rolb
push
scas
jecxz
je
xchg
cmp
stos
add
outsl
jg
je
xor
xor
mov
xor
cwtl
lock
mov
push
outsl
stos
pop
jecxz
pop
cmpb
cmpsl
mov
stos
test
insb
add
hlt
sub
scas
shll
js
pusha
add
push
push
push
push
out
cli
xchg
imull
xchg
cmpsl
pop
or
sbb
lcall
les
repnz
loop
cld
pop
xor
jge
mov
lahf
nop
movsb
ret
push
push
bound
mov
and
repz
cld
push
ljmp
lds
dec
add
ljmp
mov
xor
xor
inc
mov
mov
inc
aam
push
lcall
mov
pop
add
hlt
jne
mov
lock
sarl
orl
jbe
add
rcrb
jmp
xchg
and
cmpsb
orl
aad
or
add
fsubrl
cli
mov
add
add
aas
or
jl
add
push
push
add
popa
push
adc
add
orl
jmp
clc
inc
add
sub
addr16
xor
hlt
loope
sbb
and
stos
dec
add
das
dec
add
add
fidivrl
mov
jnp
push
movsl
or
int
jns
ret
mov
mov
add
push
addl
add
into
sbb
mov
push
pause
adc
adc
add
scas
addl
inc
add
add
stos
mov
pop
mov
push
sub
add
sbb
loopne
dec
add
or
ss
xchg
mov
xor
sahf
add
enter
or
fcmovnu
les
xor
stos
jo
mov
sub
fiadds
jns
ljmp
sbb
lret
loopne
stos
push
pop
cmp
add
jle
jmp
jne
int3
xlat
xor
add
sarl
dec
sub
pop
mov
add
add
inc
add
xchg
jns
add
xchg
fcmovnbe
fdivrs
add
add
ss
mov
clc
jle
shrb
mov
dec
add
adc
dec
add
pop
xchg
outsb
add
xchg
out
jge
push
add
mov
mov
lods
pop
mov
push
or
loopne
adc
out
mov
shll
call
or
mov
sub
aad
popa
and
mov
stos
sub
mov
cmp
fidivl
cwtl
test
dec
add
rcrl
dec
pushf
iret
xorl
pop
add
lret
xor
sub
lods
and
outsl
push
leave
jns
sub
daa
sbb
adc
dec
add
imul
cmp
jbe
jmp
cmp
aad
add
mov
push
push
xchg
jge
hlt
into
dec
dec
add
xor
push
pop
dec
push
ror
cmp
nop
and
push
sub
dec
add
stos
popa
push
in
fstps
inc
add
add
shl
stos
aam
adc
shlb
and
rolb
add
hlt
mov
sub
mov
add
int
dec
or
les
or
pop
int3
mov
imul
add
xchg
jmp
xor
data16
lds
mov
stos
inc
jge
add
xchg
jnp
out
dec
sti
out
scas
fdiv
aas
adc
add
add
out
add
cwtl
jmp
sbb
or
test
popf
outsl
cmpsb
and
sbb
stos
popa
jo
into
cwtl
shll
sub
add
push
and
jg
add
add
adc
loop
add
ja
jl
inc
enter
or
dec
add
pop
lahf
pop
fcompl
add
add
movsb
lods
sti
movsbl
lret
add
mov
add
push
js
add
cmpsb
dec
jmp
inc
je
push
push
insl
repnz
xor
jae
add
arpl
call
or
fmuls
xor
adc
dec
in
add
jge
insb
add
xchg
divb
int3
cs
push
test
pop
or
mov
mov
add
mov
loop
fstpl
add
xlat
pop
cld
lret
pop
inc
push
aad
loop
ljmp
in
std
mov
movsl
mov
aad
add
ret
adc
js
imul
dec
add
sub
cli
cmp
fcomps
test
ja
cld
push
ds
push
mov
mov
add
ret
add
aas
addr16
mov
add
sub
je
pusha
add
sbb
sub
add
sar
add
mov
outsb
add
jl
cmpsb
out
jg
sub
jp
push
sbb
inc
lock
aam
mov
jns
jno
scas
xchg
loopne
xchg
hlt
mov
sarl
mov
dec
add
xor
popa
ja
ja
sbb
mov
jno
add
cld
lock
scas
mov
bound
cld
mov
add
sahf
int3
jl
add
push
pop
adc
imul
cmp
shrl
rorb
popa
sbb
jecxz
inc
add
cmpb
and
or
xor
lock
adc
inc
fmulp
xor
sbb
push
mov
xor
add
adc
add
mov
das
imul
mov
dec
add
pushf
rcll
mov
daa
sahf
or
out
ret
out
jo
lods
sti
repz
ljmp
pop
fsubs
sti
sar
jl
add
in
stc
and
xchg
adc
mov
and
fdivrl
push
or
fdivl
xchg
and
lea
and
push
pop
inc
add
xor
je
cmp
mov
mov
shrl
pop
daa
in
or
js
and
inc
stos
fistpll
sub
or
add
stos
xor
mov
mov
add
cmp
in
stos
lret
sub
push
cmpsl
mov
xor
cmpsl
add
and
lods
and
jp
shlb
mov
sub
jns
push
sbb
lahf
fistl
clc
loop
cld
ss
add
dec
add
push
in
inc
add
je
pop
addr16
ds
jbe
push
fnstcw
adc
or
cld
mov
mov
mov
add
std
push
add
fcmovne
mov
scas
lcall
iret
mov
shlb
add
mov
add
xor
out
cmp
icebp
adc
pop
mov
add
leave
or
mov
add
sub
push
and
push
aas
jmp
bound
aad
push
ja
add
dec
sub
xor
add
repnz
sub
insl
jg
add
pusha
add
jae
andb
outsb
add
add
loop
roll
jg
push
push
mov
je
push
xor
push
add
add
pop
cmc
js
scas
call
jo
cmp
add
cmpsl
enter
fldenv
cltd
inc
add
sbb
push
sub
pop
mov
add
inc
jge
sub
fs
int3
fcomi
inc
stc
xor
xchg
into
pop
aas
orl
repnz
sbb
iret
adc
jmp
xchg
out
and
cmp
add
inc
in
div
cmp
popa
imul
lcall
add
cmpsl
lret
inc
push
xor
dec
sbb
sbb
call
or
hlt
xlat
push
and
orb
add
pop
in
mov
sbb
adc
test
daa
xor
pop
jno
ret
cld
std
add
lret
mov
push
jmp
mov
out
sti
xor
roll
stos
xchg
push
hlt
jo
ret
gs
lahf
sti
or
js
ret
add
pop
fbld
jle
push
add
lahf
add
fisttps
insb
add
scas
and
add
fnsave
add
ret
pop
call
repnz
add
in
shlb
jmp
sbb
mulb
lahf
mov
inc
add
dec
add
xchg
adcb
mov
sbb
lods
add
incl
add
pop
inc
sti
cmp
stos
inc
add
dec
popa
lods
ret
push
adc
movsb
ror
push
dec
aas
aam
imul
add
push
vpunpckhwd
mov
jne
fcompl
loope
add
add
leave
aad
jns
and
pop
cs
nop
fiaddl
outsl
xlat
add
mov
mov
xchg
mov
std
outsb
add
xor
push
cmpsl
ljmp
add
dec
add
fdiv
and
mov
xchg
shll
add
add
out
in
pop
inc
aas
in
or
ds
fidivl
inc
add
dec
add
mov
in
sbb
adc
add
icebp
jmp
cmp
stos
fiaddl
pop
jp
leave
lret
fwait
adc
fsubl
repz
sarb
shr
rcll
ret
and
pusha
add
test
sub
imul
mov
ret
add
add
xchg
sub
sbb
sarl
loopne
mov
add
and
add
cmp
and
sub
sbb
subl
testb
sub
dec
add
imul
lds
add
mov
add
mov
ret
nop
push
hlt
dec
jl
jl
xchg
xchg
aad
add
add
push
jnp
add
jo
push
add
sbb
in
dec
add
sar
mov
or
cmp
pusha
add
jne
adc
add
jae
pop
inc
push
pop
pop
cmp
jmp
ret
cli
gs
add
cltd
sti
lods
in
jne
sbb
cmc
addr16
out
push
jge
cltd
sub
lds
addr16
mov
add
and
add
icebp
repnz
adc
inc
adc
add
rol
xchg
insl
xchg
in
xchg
in
sbb
dec
add
pop
pop
lock
mov
daa
jbe
jg
add
add
xor
or
stos
inc
add
test
pop
add
inc
add
xor
mov
out
add
sub
dec
add
jmp
add
nop
popa
test
lods
pop
or
lahf
in
fwait
jnp
sarl
or
out
cmp
ret
negb
mov
sbb
into
push
lods
aas
cmc
daa
xlat
ror
sbb
cwtl
push
sbb
out
cmc
xchg
test
mov
outsb
add
add
lcall
popa
mov
add
mov
dec
mov
or
aam
pusha
add
lds
or
sub
pushf
pop
scas
jg
or
or
arpl
fildl
add
dec
dec
add
insl
iret
sub
inc
add
add
xchg
insb
add
mov
cmpsl
dec
add
cld
mov
jle
inc
add
inc
add
popf
sti
pop
repz
fcoml
or
add
cmpb
mov
mov
mov
iret
dec
add
stc
call
aam
jnp
xchg
lcall
add
add
add
les
or
movsb
xor
in
cmc
jmp
mov
out
loope
add
jo
adc
lret
sbb
inc
mov
ljmp
add
call
ret
sbbb
jge
addr16
loopne
add
or
inc
add
add
pop
mov
mov
add
add
nop
jnp
arpl
sub
ja
inc
add
lods
push
jnp
inc
add
sbb
cltd
shrb
lea
or
fisubrs
dec
add
add
js
xchg
ja
inc
aam
or
sbb
add
xchg
out
jno
and
push
fnstcw
xchg
add
dec
add
push
ss
arpl
fstp
scas
movsb
mov
cmpsl
push
mov
scas
inc
add
mov
mov
xor
mov
add
std
outsb
add
xor
push
shl
pop
dec
or
pusha
add
add
mov
nop
push
arpl
add
dec
in
push
or
jmp
xor
add
xor
repnz
dec
add
adc
sbb
or
xchg
out
add
xor
jb
dec
add
push
add
pop
mov
scas
lret
sub
add
mov
aas
mov
mov
ljmp
mov
adc
mov
add
jo
mov
and
clc
sub
pop
dec
cmp
pop
mov
jb
push
add
test
mov
push
mov
or
or
dec
leave
je
sub
xchg
nop
sbb
jle
add
inc
add
xor
mov
add
ss
in
pushf
shll
insb
add
push
push
add
js
sti
xchg
aam
mov
stos
repnz
or
sti
push
add
jne
jae
test
xchg
in
add
mov
ja
shll
sbb
pop
jecxz
aam
inc
out
enter
lahf
lock
sbb
lea
inc
add
jb
push
imul
sub
repz
add
in
packssdw
mov
and
iret
int3
xor
add
push
mov
fimull
imul
mov
bound
xor
cmp
jmp
fidivs
jmp
add
lret
mov
and
inc
add
bound
fnsave
xor
add
jb
sub
les
adc
in
outsl
sbb
mov
or
cmpsb
sahf
sub
loopne
adcb
repnz
xchg
icebp
aad
sub
cmp
add
add
add
dec
daa
shll
add
scas
hlt
add
fwait
mov
and
in
dec
add
es
insl
dec
add
scas
ret
je
fcoml
ret
mov
mov
enter
mov
les
cltd
mov
add
jge
adc
jp
xchg
xor
lods
adc
in
add
jecxz
mov
or
std
add
or
imul
mov
iret
mov
inc
add
and
inc
add
pop
rclb
xchg
int
mov
cmp
sbb
add
push
add
cmp
jnp
add
movsl
sub
push
mov
jns
add
adc
mov
mov
stc
mov
or
add
push
xor
jns
adc
xchg
loope
lret
cmp
aaa
lds
cli
ds
xchg
frstor
xchg
in
mov
add
add
xor
popf
jns
mov
mov
add
add
pop
add
pushf
push
inc
ud1
popa
aas
out
lods
cmp
jg
xchg
jnp
mov
mov
jecxz
add
repnz
int3
decl
add
ss
rol
or
ret
sbb
imul
pop
mov
or
in
or
std
dec
test
pop
add
adc
fdivrs
cmp
lock
adc
jp
add
inc
aam
leave
repz
xchg
std
aaa
push
mov
fwait
iret
das
mov
pop
sub
in
loopne
cmp
fld
test
test
or
test
dec
mov
dec
add
xlat
movsb
push
cmc
sbb
fdivl
add
add
popf
cld
mov
lret
mov
inc
add
pop
lds
lods
out
and
enter
out
jg
aam
loop
adc
mulb
add
xchg
xchg
sbb
cmp
aas
in
pusha
add
push
pop
add
add
add
hlt
and
add
mov
sub
mov
jno
xchg
mov
mov
fwait
or
out
movl
nop
sub
data16
cld
pavgb
push
add
push
fwait
jo
loope
or
ljmp
pop
ficomps
dec
add
andb
pop
xchg
mov
pop
mov
jae
incb
add
add
add
lret
imul
jnp,pt
ficomps
dec
add
jne
cli
mov
and
mov
data16
jbe
dec
add
ret
ret
test
pop
xor
add
popf
pushf
adc
sahf
loopne
popa
jnp
adcl
lock
adc
std
mov
xor
jg
sbbl
jge
pop
cmp
add
cmp
pop
in
leave
adc
cmp
popa
mov
cmp
test
add
pop
in
and
add
sub
push
add
add
sti
push
daa
sbb
ja
lahf
push
leave
shl
and
xchg
aas
sahf
or
test
xor
jecxz
aaa
jmp
imul
cmp
xorb
bound
mov
int
pop
mov
cmp
out
push
and
mov
cmpb
mov
or
fisubrs
jno
incb
je
pop
rorl
inc
xchg
movsb
cmpsb
jns
add
xchg
sub
add
mov
add
popf
xor
sub
jbe
add
enter
and
and
arpl
cmc
outsb
add
add
add
push
dec
insl
push
add
enter
adc
movsl
dec
rclb
imul
add
push
enter
insl
pop
aaa
cld
or
jae
dec
add
orl
add
ret
mov
stos
xor
dec
add
sub
insl
in
push
push
xchg
imul
push
xchg
fsubrl
add
arpl
mov
das
mov
lahf
shlb
xchg
nop
js
add
repz
lds
add
mov
push
dec
add
pop
cld
cmp
xlat
je
outsb
add
push
add
mov
add
enter
repz
test
adc
mov
adc
xchg
das
aad
pop
inc
add
xchg
out
bound
lret
sbb
add
inc
add
int3
lret
jb
fbld
jmp
add
shr
in
add
jbe
cmpsl
adc
xor
xchg
addr16
xchg
xor
lcall
jns
subl
aas
imul
add
arpl
add
clc
dec
add
lods
aad
nop
enter
push
addps
mov
sub
xor
fst
pop
cmpsl
mov
xchg
mov
ret
pushf
shll
adc
jle
add
jmp
mov
add
addb
add
addr16
cmp
pop
jecxz
addl
add
add
cmp
repnz
jl
lock
xlat
xchg
dec
add
inc
xchg
mov
add
xlat
aad
and
lret
add
dec
cmp
je
mov
adc
ja
cmc
pop
sbb
lret
adc
outsl
pop
cli
enter
add
jge
mov
push
sub
outsb
add
cmp
add
add
aam
pop
lods
pop
aas
dec
and
js
fimull
out
test
add
bound
out
jp
xchg
daa
mov
lret
add
ss
sbbb
cmp
enter
add
ret
adc
les
mov
call
add
and
repz
repz
sub
frstor
add
imull
cwtl
push
rorb
jne
ljmp
addr16
loope
sub
pop
sub
sub
or
and
mov
fwait
dec
sub
in
lods
sbb
rcrl
xor
sub
clc
std
add
outsb
add
dec
add
cld
inc
rcr
mov
add
or
cwtl
and
mov
mov
push
add
inc
add
mov
pop
lcall
xchg
add
cltd
cmpsb
scas
jle
sub
inc
add
in
repnz
sahf
cld
sarb
lods
or
push
mov
test
and
in
dec
std
inc
add
mov
outsl
mov
test
std
cli
dec
add
lahf
fs
jae
add
mov
or
or
std
jge
insb
add
add
sbb
xchg
mov
stc
cmpb
outsl
sub
push
dec
add
mov
pop
into
and
cmp
jecxz
cmp
add
stos
mov
and
inc
aam
orb
push
add
dec
into
cmp
mov
xchg
ret
push
sarb
push
add
out
and
jle
or
les
loopne
xchg
push
sbb
roll
sahf
mov
clc
jge
sbb
sbb
add
xchg
insl
pushf
xor
mov
std
xchg
mov
mov
popa
bound
and
xchg
lahf
inc
add
repz
add
sti
outsl
bound
movsb
fldt
inc
add
push
jmp
mov
xchg
out
add
mov
add
arpl
stos
inc
push
jnp
add
mov
aaa
negb
or
inc
decb
add
add
cli
inc
add
rcrl
adc
lock
xor
test
add
xlat
bound
mov
mov
popf
fdivr
push
dec
cmp
mov
scas
adc
jo
add
add
add
xchg
popf
xor
mov
inc
add
and
add
pop
mov
mov
mov
add
cmp
ficomps
lahf
jae
add
cmpsl
aaa
or
scas
mov
mov
jge
and
bound
jb
repz
inc
add
pop
inc
mov
cwtl
movsl
imul
add
test
jmp
pushf
ja
lret
data16
call
movups
xchg
out
lahf
push
push
sub
inc
add
xchg
insl
xor
stos
add
popa
xchg
fwait
push
sbb
scas
movsb
sbb
add
repnz
add
lea
pusha
add
mov
add
push
adc
test
push
add
mov
pop
cmp
add
push
ficomps
add
pusha
add
push
sub
mov
imul
ljmp
pop
clc
sub
mov
js
add
mov
push
mov
add
xchg
or
sub
sbb
sti
push
xor
add
cmp
inc
and
clc
aad
mov
cmp
and
mov
sub
add
ja
add
sub
adc
or
insb
add
fldl
cmpsb
out
faddl
ljmp
int
leave
pop
sahf
and
lds
add
xchg
fiadds
fcoms
inc
pushf
push
xor
shl
in
or
je
iret
lock
add
lock
bound
loop
pop
dec
cltd
or
add
sti
fwait
jl
cmp
mov
shll
add
shlb
stos
push
fdiv
lea
sbb
jg
call
jae
lahf
das
sbb
pushf
int
xchg
pop
cli
push
inc
add
sub
push
add
faddp
test
and
lods
ds
push
or
pop
clc
in
push
add
dec
add
or
out
mov
sbb
dec
add
fsubs
add
and
in
scas
jns
dec
hlt
jo
mov
cwtl
add
inc
add
pusha
add
outsl
int3
dec
mov
inc
fisubrs
mov
cld
lret
hlt
fwait
movsl
cmpsb
sbb
mov
and
das
gs
xor
in
mov
push
ror
cmpl
add
imul
inc
add
xor
int
gs
jae
rorl
loope
add
add
mov
mov
add
lcall
dec
add
inc
out
gs
mov
ret
or
bound
stos
push
fldenv
add
adc
push
inc
mov
add
sub
jecxz
dec
sub
or
and
icebp
mov
data16
out
movsl
mov
mov
outsl
dec
mov
add
add
sbb
push
or
pop
mov
orb
vpsubb
popf
fnstcw
inc
popa
and
into
push
lock
add
test
sub
rcrl
idivl
add
add
inc
add
cmp
add
stc
shl
orb
in
pop
mov
pop
sub
jno
shrb
loop
add
or
mov
push
ja
and
jne
mov
sbb
pop
outsb
add
test
dec
lret
add
pop
add
dec
add
xchg
pop
loop
mov
xor
mov
js
dec
add
adc
sbbl
mov
mul
in
pop
ror
lock
pop
inc
sbb
adc
sbb
popf
mov
bound
hlt
push
add
rorl
add
sarl
adc
stos
push
in
and
js
shll
enter
and
into
push
xor
lea
add
lret
test
or
cltd
jno
add
stos
pop
pop
movsl
mov
add
sbb
xchg
out
jns
cmpsb
fcoml
add
fdivrs
sub
rcr
and
imul
sahf
movsl
dec
lock
cli
jge
add
mov
pop
cmp
testb
leave
push
mov
daa
xor
inc
add
add
add
icebp
add
sahf
push
ret
movsl
rorb
scas
mov
ds
lods
cmc
sub
aam
cmp
add
dec
in
into
rcll
or
vmwrite
in
inc
add
repnz
add
int
addr16
cmp
jns
repnz
inc
inc
enter
push
out
add
push
leave
push
aam
rolb
cwtl
mov
and
cli
popf
and
arpl
mov
dec
add
mov
pop
enter
lea
loope
in
test
inc
jg
xor
sbb
push
cmp
pop
das
mov
icebp
inc
andl
xchg
jno
add
cmpsb
int3
jg
ljmp
adc
gs
mov
repnz
je
and
and
dec
add
lea
dec
sub
add
dec
add
dec
inc
add
aas
jb
dec
add
mov
cvtdq2ps
mov
neg
mov
fcmovnbe
sbb
add
and
in
mov
adc
int3
addb
add
adc
lret
loope
addb
mov
cwtl
xchg
cmc
lahf
subl
xor
mov
jg
jl
inc
add
add
es
scas
cltd
mov
rcr
enter
add
aad
gs
add
iret
les
add
push
shll
lock
jl
add
js
inc
mov
mov
popa
jne
add
jbe
sub
popf
fsub
push
mov
and
adc
add
shll
es
idiv
or
popf
pop
sub
inc
add
adc
pop
push
stos
sub
xorb
repnz
subb
imul
xor
add
insl
cmp
stc
aad
jge
inc
add
mov
out
push
add
cltd
jns
les
push
mov
mov
jle
mov
sub
adc
clc
and
add
and
add
mov
cli
jb
mov
lock
sub
mov
xchg
sbb
sub
pusha
add
jno
add
sbb
inc
add
hlt
dec
std
jo
push
add
push
int3
negb
lcall
in
jl
add
adc
outsl
inc
add
adc
add
pop
sbb
add
xor
enter
arpl
and
loope
mov
add
test
aam
rcll
fidivl
outsl
jge
pop
xchg
pop
adc
sbb
jb
cmc
cmp
cmpsl
sbb
std
clc
add
out
fisttps
and
add
inc
xchg
xor
mov
cmp
xchg
inc
in
shrl
outsl
fs
jecxz
add
inc
mov
cmp
shr
jg
add
jmp
loope
nop
call
leave
vpmullw
push
repnz
fmuls
cmc
inc
add
add
shrb
lret
push
add
adc
xchg
inc
mov
outsl
mov
mov
add
xchg
pop
mov
out
in
add
lds
rolb
add
mov
orb
ss
inc
add
add
rcrl
xchg
subb
es
add
cmp
add
xor
inc
add
hlt
aas
xchg
xor
cmpl
rclb
sbb
add
or
cli
push
popf
jge
popf
fldcw
add
add
ds
mov
fwait
pop
or
out
rolb
decb
add
and
jge
xchg
or
popl
push
add
cmpl
out
or
cmovl
cmpsl
scas
xor
pop
in
xor
sbb
xlat
jmp
mov
decl
das
into
or
push
addr16
insb
add
push
push
add
mov
sbb
add
shll
arpl
and
loope
movsl
mov
add
inc
add
ljmp
popf
out
jbe
push
inc
adc
inc
mov
sbb
add
rcll
les
outsl
mov
cmp
push
add
mov
rep
mov
adc
test
stc
add
mov
push
loop
pop
out
or
xlat
jnp
pop
pop
xchg
inc
add
shrl
sti
popa
sub
xchg
pop
lea
xlat
or
xchg
mov
addb
sbb
pop
pop
iret
dec
add
sub
push
outsl
dec
add
lret
popa
call
add
dec
int3
jne
jo
mov
xor
pop
jns
and
sbb
pop
shrl
icebp
mov
ja
add
mov
imulb
sarb
xor
xchg
sahf
inc
add
les
out
out
dec
inc
or
in
xchg
cmp
leave
xchg
xchg
adc
sti
fdivrs
cld
les
xchg
std
dec
push
lods
addr16
mov
and
mov
stc
out
inc
std
lods
push
push
pop
idivb
and
push
pop
push
dec
add
pop
jp
loope
add
arpl
cmp
pop
fwait
jno
scas
mov
sub
fwait
test
jns
ret
add
sbb
mov
sub
add
lock
fucomip
sub
mov
ds
out
mov
jge
loop
bound
dec
lods
xor
adc
fdivs
add
xchg
adc
jbe
lret
add
xlat
lds
xor
xchg
mov
cmp
jge
pop
mov
and
sti
push
add
add
push
mov
sub
add
mov
mov
jmp
int
test
ds
imul
add
xchg
cld
fsubs
adc
ljmp
sub
xor
aam
shrb
fdivr
mov
pop
outsb
add
fwait
and
in
sbb
idivl
mov
cmp
jmp
fwait
mov
shlb
idiv
js
inc
add
outsb
add
jno
xchg
or
test
inc
adc
dec
out
inc
add
sbb
push
xchg
inc
xchg
jle
loop
inc
add
mov
push
stc
mov
aad
ss
cmp
push
popf
rcrl
pop
cmc
xchg
les
lcall
xchg
jbe
mov
imul
add
jmp
cli
js
lea
and
insb
add
add
shlb
xor
insb
add
cmp
outsl
enter
pop
xchg
cli
popf
jo
addr16
daa
jmp
js
add
push
lods
fdivr
xor
mov
push
hlt
pop
sub
hlt
mov
aam
add
add
xor
add
lods
imul
push
add
pop
aas
into
outsb
add
mov
popa
mov
cmp
nop
enter
add
aas
fidivrl
pushf
push
lds
adc
mov
mov
push
xor
add
sysenter
xlat
lcall
scas
pop
mov
adc
mov
xchg
outsb
add
adc
inc
add
add
add
pop
test
or
mov
add
test
rorl
dec
add
add
push
adc
cmp
or
or
jmp
mov
stc
cmp
sub
xor
pop
mov
out
xchg
and
shl
test
add
push
pop
xchg
ljmp
or
dec
jle
pop
ud2
mov
dec
add
shl
adc
add
sub
push
nop
mov
fdivrs
add
xlat
mov
sub
inc
add
add
mov
ret
test
inc
sarb
bound
mov
xchg
leave
mov
push
xor
pop
clc
and
bound
lahf
lahf
dec
mov
mov
stos
stos
scas
movsl
mov
shrl
sub
testl
clc
adc
mov
push
inc
cmpsl
imul
adc
mov
mov
cmp
jns
cmc
mov
push
loop
pop
jecxz
jae
fmul
or
mov
aaa
lock
add
cltd
gs
inc
loopne
mov
int3
in
inc
sbb
add
add
in
xor
loop
loopne
and
or
and
inc
mov
jmp
pop
imul
mov
ds
pop
mov
jmp
mov
jg
ja
or
mov
mov
test
inc
add
add
in
data16
std
xor
add
add
mov
xchg
clc
lcall
push
add
cmp
cmp
sbb
stos
enter
xor
cmp
lcall
xor
ljmp
scas
mov
jl
mov
movsl
cmp
test
mov
mov
push
das
call
lods
mov
adc
loop
cmpsl
pop
rcl
shrl
loop
or
push
and
mov
sets
daa
pop
xchg
sub
fstpl
pop
mov
add
add
arpl
mov
dec
add
and
scas
int3
or
or
add
mov
popa
mov
push
xor
stos
in
add
add
pushf
add
mov
cmpsl
jnp
add
add
inc
add
sub
movsb
adc
mov
mov
mov
xchg
dec
sar
adc
xchg
mov
pushf
mov
jb
and
cltd
xchg
cmp
rorl
aas
loop
push
push
add
add
repnz
add
sub
ds
push
call
jb
add
add
std
add
mov
sti
sti
popa
loop
dec
out
xor
mov
jno
mov
jno
popa
loop
movsl
cmp
mov
rcll
add
stos
clc
dec
loop
leave
pop
mov
and
clc
pop
xchg
repnz
stc
jmp
clc
xchg
pop
mov
sarb
daa
or
jnp
cmp
es
incl
loope
adc
xor
xchg
inc
add
int3
dec
mov
into
pushf
lods
pop
rcl
out
mov
cmp
jns
rolb
mov
call
mov
add
add
xor
enter
inc
rcll
int3
repnz
mov
neg
and
cltd
ds
fcmovb
sbb
mov
lea
pop
les
xchg
adc
add
std
stos
add
setbe
add
cmp
adc
inc
add
adc
mov
js
dec
aaa
inc
loope
nop
mov
cmpsb
les
mov
sub
add
add
mov
dec
mov
pop
aaa
into
imul
jo
aam
fiadds
add
hlt
call
cmp
loopne
nop
sarb
cli
enter
rcrl
cltd
inc
add
loop
adc
lock
pop
sarl
repnz
icebp
inc
add
fs
loope
lods
cwtl
les
pop
out
jno
out
mov
push
and
cld
pop
out
cmp
xorl
out
and
cmp
xor
jp
daa
das
inc
add
add
add
jmp
ss
pop
lds
mov
stos
sti
sub
pop
hlt
ret
repnz
pushf
test
aam
into
lahf
in
repz
add
cwtl
xor
or
lea
enter
mov
gs
loop
cli
rclb
mov
icebp
ja
add
add
push
gs
popa
jl
aaa
lcall
pshufw
iret
fnstcw
lea
cmp
add
bound
jne
mov
ja
sub
ret
or
dec
add
sub
add
mov
shrb
ret
dec
aad
and
jecxz
add
mov
fistl
jae
and
nop
test
test
mov
or
out
mov
inc
fmulp
and
add
aam
mov
out
mov
pushf
pushf
and
fstpt
mov
add
xor
jl
inc
add
cmp
cmc
jnp
ljmp
xchg
sbb
xor
add
test
push
jnp
repz
jp
psubw
or
test
add
enter
pop
mov
add
scas
aad
add
in
lds
scas
cld
aas
std
mov
add
movsl
and
and
jle
add
adc
xlat
or
cmp
enter
sbb
pop
push
out
insl
in
xchg
cmc
cmpsl
push
aaa
add
mov
and
adc
xlat
mov
pop
data16
fsts
loope
add
push
aam
add
add
add
add
sahf
sbb
add
push
cmpsl
imul
lea
outsb
add
inc
add
sarl
sub
mov
mov
iret
out
mov
nop
dec
add
std
or
cltd
xor
add
ret
ror
lods
mov
stos
jmp
and
push
add
add
mov
push
add
push
scas
movsl
adc
shl
cmp
add
fnstcw
sahf
sub
ret
in
add
mov
add
pop
mov
sub
cltd
outsl
repnz
adc
add
fmuls
mov
adc
add
mov
mov
push
gs
lcall
xlat
cmp
sub
in
pop
or
nop
pop
nop
xor
add
jno
mov
push
fwait
mov
add
jp
sbb
pop
adc
mov
add
movsl
push
imul
jg
jge
lea
cld
xor
xchg
js
push
mulb
add
cwtl
test
sub
xchg
jbe
arpl
mov
and
dec
add
imul
add
jge
jne
outsl
in
lock
bound
dec
add
or
add
jle
jns
std
adc
mov
sub
lods
cld
add
xchg
mov
imul
mov
sbb
add
add
out
push
cs
cli
imul
cmp
movsb
mov
mov
push
lds
push
pop
inc
icebp
or
pop
leave
in
test
add
lea
add
mov
adc
and
test
pop
or
xadd
cltd
pushf
inc
in
pop
mov
mov
or
out
push
sahf
jns
lret
ljmp
add
cltd
mov
mov
dec
add
jne
and
stos
push
mov
add
loop
sub
jo
dec
add
scas
xor
add
jg
adcl
out
add
cltd
int3
xchg
sbb
pop
mov
mov
aas
mov
add
add
xchg
mov
jle
push
mov
add
add
mov
dec
push
lods
ljmp
push
fbstp
loopne
xchg
jl
push
add
add
xor
stc
jbe
add
fldenv
outsb
add
add
fwait
mov
and
mov
mov
ret
orb
stos
or
sub
push
add
pushf
pop
clc
cmp
adc
add
sub
xor
subl
mov
in
add
push
adc
push
xor
sbb
aas
jno
add
enter
lds
add
loope
pusha
add
pop
mov
add
add
insb
add
cli
push
push
js
add
shl
arpl
add
ds
jl
fisubrs
and
or
out
xor
int3
mov
rorl
add
insb
add
fisubrl
sub
lea
sub
push
loope
sbb
mov
mov
xchg
and
in
mov
fmul
and
dec
add
and
cmp
imul
mov
push
dec
and
stos
ret
add
rcll
pop
and
cmp
clc
clc
lcall
cmc
xchg
push
sbb
sbb
mov
pushf
inc
add
pop
sbbb
cmp
mov
push
pop
cmp
int
lods
icebp
aaa
inc
add
cwtl
xchg
cmp
mov
push
push
add
aas
jae
jl
add
lock
inc
xchg
test
aaa
in
add
mov
xlat
mov
repz
and
fstl
dec
add
divb
push
decb
xor
in
testb
fcmovnb
xor
jmp
cs
and
mov
shll
stc
xor
daa
mov
mov
add
int
stos
sub
jge
imul
xor
sbb
add
mov
pop
repnz
push
dec
lods
mov
test
pop
ss
add
not
dec
add
jo
adc
add
clc
ss
ds
xlat
jne
pushf
stc
xor
lods
or
sbb
test
aaa
jns
and
add
and
insb
add
add
sbb
add
push
add
and
jecxz
mov
add
test
in
add
mov
fwait
bound
int3
sub
lcall
add
add
xchg
mov
xor
sbb
cltd
sbb
add
add
jno
mov
ja
sbb
int3
jnp
adc
pusha
add
and
mov
add
dec
mov
xor
or
outsl
push
pop
cli
filds
jge
add
add
mov
xchg
jb
push
lods
push
xor
add
daa
outsb
add
popa
cmp
mov
outsb
add
push
add
mov
or
mov
mov
das
cld
in
cmc
aam
add
push
fsubp
jl
loope
push
jl
ucomiss
test
loopne
add
add
adc
and
mov
push
mov
ljmp
repz
adc
and
cmp
add
xor
leave
popf
cltd
mov
loope
xchg
push
add
pusha
add
dec
rcrb
cmp
decb
outsl
cmc
xchg
stc
inc
add
sbb
outsb
add
test
loopne
inc
xchg
adc
lret
daa
sub
lret
cmpsb
xor
repz
adc
movsb
cmp
push
add
mov
in
push
sub
lods
jns
add
lods
mov
xor
pop
ss
adc
xor
sub
cltd
mov
add
mov
add
and
or
or
add
xchg
das
in
mov
and
je
push
add
outsl
hlt
push
xchg
or
adc
ret
pusha
add
loopne
hlt
sub
mov
push
lcall
add
jge
cmpsl
loope,pt
cld
movsl
sbb
xchg
cmc
sub
lret
lock
lds
mov
add
pusha
add
jmp
xor
shl
js
movsb
jb
adc
adc
out
lcall
out
and
shrl
add
sbb
push
daa
add
in
mov
xor
outsl
jbe
hlt
pop
std
subl
out
shrb
add
pop
popf
int3
fldl
sub
inc
orl
and
push
and
add
daa
dec
sbb
mov
loop
sub
xchg
flds
mov
add
rolb
add
bound
add
add
push
lret
sti
inc
int
and
inc
mov
mov
shll
add
int3
cmc
xchg
insb
add
ret
and
outsb
add
roll
mov
and
jl
add
das
xchg
and
in
and
or
cli
xchg
mov
popf
dec
xchg
sub
dec
add
pop
xchg
cmp
add
xchg
jmp
adc
jb
jnp
dec
add
xlat
sbbb
add
cmp
cli
push
andl
jbe
or
mov
push
lret
test
xchg
movsb
sub
cmp
fwait
pop
leave
mov
insl
jnp
js
rolb
pusha
add
adc
add
inc
add
sbb
mov
jnp
loop
stc
jnp
cmp
add
xor
add
scas
pop
mov
out
outsb
add
loope
push
cs
mov
mov
jmp
loope
cmp
lods
jge
mov
lea
jo
in
xor
pushf
xchg
lahf
scas
lret
dec
mov
rolb
sub
icebp
bound
sahf
mov
cld
jl
xor
add
call
pusha
add
pop
dec
mov
lret
fsubl
add
sbb
push
add
add
jle
test
xlat
mov
call
jae
jns
stc
mov
loopw
fbstp
jo
add
inc
add
lods
jae
add
into
pop
lock
mov
and
fcomi
mov
sub
enter
add
jmp
test
add
sbb
xor
xor
add
sbb
into
es
lret
inc
add
mov
subb
sahf
jmp
dec
jge
push
cmpsb
push
test
mov
fucomip
sub
orb
shll
rcll
jp
xchg
fidivs
sbb
add
lea
nop
push
out
btl
sbb
sahf
add
ja
dec
and
cmp
cmp
add
fdivl
jno
add
sub
punpckhdq
loope
add
lret
add
xchg
mov
and
and
cmpsl
add
pop
das
aad
cmc
xlat
mov
jle
add
and
jp
lcall
lahf
int3
std
jns
sub
test
cmp
xchg
insb
add
inc
mov
push
aam
sbb
pop
inc
add
cltd
jns
ret
sti
mov
jne
add
aaa
and
mov
adc
stos
push
stc
bound
cmp
fildl
add
fistpll
mov
dec
add
out
dec
add
lret
add
pop
imul
add
add
shl
leave
cltd
sub
inc
mov
or
sahf
lods
jbe
test
and
loop
add
xchg
dec
add
gs
das
jp
sub
push
shll
mov
lods
and
inc
add
add
inc
sbb
add
rorl
xlat
daa
call
call
mov
cld
xor
lcall
pop
dec
popf
or
and
dec
outsl
sbb
cmp
aaa
and
std
daa
dec
add
pop
xchg
stos
out
adc
addb
pop
insl
in
mov
add
add
push
repnz
cld
add
pusha
add
mov
movsb
add
inc
add
push
inc
push
mov
add
or
out
lods
mov
xor
inc
add
rorb
mov
add
mov
jo
jge
sub
clc
cvtps2pd
xchg
ret
loopne
add
aad
add
sub
mov
or
mov
mov
add
sbb
xchg
mov
xchg
dec
add
add
and
push
add
mov
ficomps
cmp
mov
xchg
fstps
pop
negl
inc
add
or
cltd
or
xor
pop
mov
test
add
orb
pop
inc
add
movsl
hlt
testb
xchg
pop
pop
inc
add
cmp
add
in
add
fld
xchg
dec
clc
jno
jno
scas
xchg
in
pop
dec
add
test
pop
pop
cmpsl
xchg
inc
add
bound
test
jbe
push
int3
sbb
mov
popf
add
xchg
mov
mov
lea
add
fsub
outsb
add
rorl
stc
test
sub
sti
mov
pop
mov
xor
cmp
add
mov
repz
mov
and
scas
adc
inc
add
bnd
cmpsb
adc
rorl
jnp
dec
add
hlt
lahf
and
sub
xchg
bound
mov
add
add
test
mov
add
and
arpl
inc
add
add
icebp
std
sahf
pop
test
mov
add
cld
push
hlt
adc
loope
hlt
data16
shrb
jg
inc
add
and
and
jle
inc
sbb
lea
bound
xchg
pop
daa
inc
fsubl
jbe
add
sahf
fcoml
shll
lods
repz
cwtl
js
sub
pop
fwait
cmp
dec
jne
cmp
jne
fdivl
dec
add
stos
or
or
cmc
push
lret
and
mov
lcall
subb
jp
add
xchg
divb
test
test
fistpll
les
mov
add
jle
dec
xchg
xchg
mov
mov
inc
add
fsts
les
sbb
testb
loopne
add
das
xlat
popf
fwait
pop
lret
neg
int
xor
cmp
cmp
dec
out
cmp
outsb
add
add
pop
ja
jnp
cld
mov
or
adc
push
xchg
mov
neg
cmpsl
lds
jbe
bound
jno
mov
add
xchg
imul
sahf
xor
add
negl
jns
add
insb
add
fidivs
ret
add
xchg
pushf
sti
pop
sbb
mov
scas
lds
sub
sarb
add
pop
and
add
sarb
push
enter
sti
icebp
nop
out
dec
add
test
add
xor
jle
inc
add
dec
add
out
xor
cli
and
aas
rclb
sbb
xchg
out
pop
xor
sahf
jae
xor
mov
fcoml
adc
inc
add
scas
jbe
mov
mov
push
inc
add
add
pop
mov
jno
inc
add
lods
adc
add
dec
add
add
sahf
std
mov
xchg
adc
aam
jl
add
and
mov
mov
addr16
out
xor
lea
gs
loope
add
xchg
xchg
lods
stos
hlt
or
mov
and
mov
jno
add
test
add
mov
hlt
or
cmp
pop
je
fldenv
jae
dec
in
pushf
lods
in
xor
movsb
movsb
xchg
push
insb
add
loope
add
jb
add
sahf
push
xchg
pop
dec
add
and
insl
stos
push
pop
pop
mov
xchg
movl
add
push
scas
pushf
xor
cmp
loopne
aad
leave
inc
add
xor
ficomps
inc
add
and
push
and
ret
mov
arpl
pop
movsb
inc
out
in
jb
test
hlt
out
sub
rcll
in
inc
add
sbb
sbb
gs
mov
ret
aaa
add
jno
inc
add
mov
and
push
fcomps
inc
add
int
add
cmp
push
add
or
loopne
add
sarl
xchg
and
dec
pop
xorl
adc
inc
add
and
fisubs
bound
mov
push
add
add
je
xlat
sarb
fstl
pushf
jbe
cld
mov
xor
sbbl
pop
movsb
mov
shlb
dec
add
je
pop
lods
lret
xchg
ds
cmp
repnz
fiaddl
add
pusha
add
inc
add
cmp
mov
add
add
add
pusha
add
mov
icebp
shlb
dec
add
add
mov
add
js
adc
or
dec
push
adcb
popa
inc
cmpb
test
add
push
xchg
mov
movsb
fiadds
add
xor
jl
xchg
cmp
popf
xor
inc
add
adc
fiaddl
stos
xorl
or
mov
jge
clc
fcmovnb
imul
dec
test
je
lret
pushf
xor
cmp
mov
jns
add
das
jb
inc
stos
inc
inc
lret
add
subl
cmp
leave
sub
out
add
popf
imul
clc
test
push
aad
sbb
add
fiaddl
lds
pavgw
push
cltd
push
scas
jle
xchg
cmp
push
inc
add
adc
aad
add
shlb
mov
sub
fdivl
xchg
sbb
jge
out
pop
outsb
add
scas
mov
call
add
jbe
aad
mov
xor
jp
test
jns
xor
scas
fldt
daa
push
out
cltd
sub
fiaddl
add
insl
or
and
pop
lods
mov
stos
repnz
dec
scas
cli
ljmp
sub
mov
nop
idivb
nop
jae
jns
int
inc
dec
jnp
dec
movsl
xchg
mov
int
add
loop
mov
xor
inc
inc
add
sbb
push
add
stos
aad
sbb
inc
stos
lcall
mov
jnp
mov
dec
mov
mov
repnz
ret
sub
add
adc
add
cmp
mov
stos
scas
pop
mov
jbe
jbe
add
int3
dec
les
ds
in
js
add
call
dec
add
sbb
mov
xor
inc
add
ret
push
xor
fcomps
jns
test
push
add
enter
jnp
ffree
cmp
cli
shlb
outsl
dec
add
add
call
ds
mov
in
or
inc
xchg
mov
cmp
sub
je
ret
in
test
and
pusha
add
mov
test
cmp
mov
or
mov
arpl
mov
add
call
add
or
mov
sbb
add
mov
mov
add
hlt
xor
ja
sub
cmpsl
xchg
xchg
fists
enter
into
or
jl
and
movsl
ss
add
bound
mov
shl
cmp
scas
test
popa
aas
outsb
add
add
mov
scas
jbe
add
iret
mov
lret
scas
in
dec
add
adc
jle
fidivrl
mov
sarl
inc
push
or
mov
and
test
jne
cwtl
mov
dec
add
sbb
inc
stc
sub
mov
cld
loop
cltd
mov
sbb
sbb
or
adc
rcrl
add
mov
adc
add
add
pop
mov
imull
jo
add
or
shlb
jge
pop
sbb
add
cmpl
mov
sti
cld
test
dec
push
add
push
lret
and
add
int3
inc
add
es
mov
lret
add
inc
stc
fst
jecxz
mov
and
lahf
xor
ret
imul
arpl
clc
lret
stc
jp
add
dec
add
add
hlt
push
data16
outsb
add
shr
lahf
aas
sbb
push
add
add
jne
sub
pop
add
dec
daa
nop
push
xor
gs
dec
fucomp
mov
pop
mov
adcl
lret
ss
fistpl
js
mov
test
scas
lods
xor
mov
push
or
aam
mov
inc
or
and
xor
mov
int
add
sti
push
shrl
xlat
cmp
scas
mov
add
add
pop
sbb
or
fnsave
push
jle
mov
inc
aad
out
aaa
test
adc
enter
add
add
add
inc
jno
add
add
mov
outsb
add
add
int3
or
mov
jle
add
sti
negb
int3
mov
add
xor
ret
loop
add
cmp
add
jl
sub
sbb
push
add
int
add
jo
addb
jmp
jle
xchg
add
test
add
jg
call
dec
add
xchg
cltd
sub
sub
cmp
cmp
adc
js
dec
add
jmp
movsl
lods
lret
sbb
mov
and
in
push
dec
lods
lods
repz
cmp
add
inc
add
push
out
popf
inc
rcll
sbbb
xchg
std
mov
sub
jns
sahf
mov
add
jo
imul
jns
add
mov
scas
xor
cltd
lcall
aaa
ljmp
sub
fimull
jecxz
xor
aaa
lods
lock
fcompl
call
and
add
inc
mov
sbb
cmp
add
add
fnstenv
xor
mov
adc
xchg
jmp
mov
ret
push
dec
add
int
out
lods
adc
mov
mov
fcompl
add
pop
and
jle
push
or
or
ja
nop
fidivs
mov
adc
dec
add
jl
dec
add
push
fwait
loope
icebp
movsb
or
dec
add
hlt
push
inc
repz
add
mov
outsb
add
add
flds
add
jnp
hlt
and
icebp
mov
xor
add
lahf
add
add
mov
jbe
inc
push
lds
sub
ss
popf
mov
repz
ret
add
jbe
js
pop
lods
and
add
bound
xchg
add
enter
cwtl
pop
push
add
jo
out
movsb
push
clc
test
add
les
add
mov
lret
jno
ss
push
add
sarl
icebp
cmp
cwtl
fsts
push
ljmp
lods
aam
in
xlat
dec
add
or
push
dec
add
daa
and
xchg
in
add
inc
dec
fcoml
jp
fcomip
or
mov
push
int
mov
jl
adc
and
xchg
jecxz
and
mov
cmp
mov
fmuls
lret
add
jne
jmp
push
out
inc
mov
out
ljmp
jne
add
das
sti
sti
mov
xchg
inc
lods
sbb
fcompl
icebp
dec
add
std
mov
orb
mov
xlat
pop
repnz
scas
enter
xor
sub
xchg
inc
sub
pop
lods
stc
ret
dec
add
add
xor
add
stos
aaa
pop
loop
inc
add
pop
jecxz
scas
adc
lock
sbbb
sub
add
push
movsl
popf
sbb
xor
inc
sbb
jmp
cmc
push
adc
push
jge
mov
jb
jmp
jae
add
jecxz
add
xor
mov
adc
or
sbb
add
add
test
cmc
sbb
add
jb
xchg
test
add
mov
adc
jp
add
cmp
popf
cmp
add
add
pop
daa
in
jno
imul
movsl
push
xchg
cmp
add
add
shrl
or
adc
push
jbe
lock
roll
jne
sub
mov
xor
mov
sbb
push
mov
and
cmp
xor
push
push
pop
mov
cmpb
add
cmp
add
notb
add
jmp
jmp
notb
xchg
and
leave
xor
mov
sub
cltd
ret
icebp
cmpsl
dec
add
xchg
jb
mov
add
add
add
lret
rcll
add
cwtl
xor
enter
mov
add
loope
dec
mov
ljmp
sub
adc
ljmp
jns
push
add
mov
ficompl
xor
adc
add
popa
and
mov
lret
sub
add
xlat
add
mov
dec
add
add
js
andl
in
int
add
pusha
add
mov
cmp
add
add
sahf
setne
add
xchg
xor
dec
push
push
cwtl
aad
push
scas
sahf
popa
pop
jae
jnp
lret
mov
add
dec
insl
inc
lret
add
sub
pushf
add
dec
gs
xlat
jp
xor
scas
cld
mov
mov
cmp
daa
xchg
mov
pop
pushf
sbb
add
mov
loop
loopne
push
xor
test
ja
mov
add
enter
add
out
push
xchg
addb
bound
jmp
and
nop
push
call
aam
add
rcrb
inc
add
stc
pop
mov
mov
xchg
cmpsl
jl
cmpsl
sbb
int3
lods
ds
jns
sarb
add
sbb
push
lahf
lods
jle
mov
das
cmp
icebp
out
pop
xchg
lret
stc
cmp
adc
add
mov
js
ret
jo
cwtl
scas
ret
inc
repnz
add
loopne
gs
mov
jne
add
lret
sub
cmpsb
adc
stc
fisubl
add
filds
test
cwtl
jno
add
jb
ja
incl
jno
push
hlt
push
mov
out
outsl
pop
daa
pop
jl
sub
rcrl
fimull
add
lds
pusha
add
jp
cwtl
sbb
sbb
xchg
jg
in
cmp
adc
or
jb
lods
in
add
int3
dec
add
ret
lock
insl
push
mov
fwait
out
push
aad
aaa
test
xor
add
dec
out
stc
lock
sbb
out
add
stc
pushl
jns
divb
mov
aas
xor
cltd
aaa
xchg
adc
out
test
das
mov
test
fisttpll
mov
in
nop
or
add
jo
add
lds
pop
push
add
gs
sub
or
xor
add
add
add
mov
adc
mov
enter
push
inc
and
push
repnz
sbb
or
out
dec
push
sbbb
imul
dec
add
or
inc
add
lds
push
add
xchg
aaa
aad
imul
lret
cmp
pop
sbb
push
outsb
add
cmp
stos
mov
add
xlat
inc
add
outsl
push
pop
inc
jg
xchg
inc
add
or
dec
add
push
sbb
ret
sbb
pop
test
dec
add
and
cwtl
addr16
inc
clc
add
pop
cmpsl
adc
cmp
pop
push
add
add
mov
jg
xchg
and
in
sahf
sar
in
stos
repz
add
sbb
imul
mov
pop
push
inc
add
lock
aas
fistps
mov
rorb
xorb
lods
test
jmp
add
add
mov
add
push
in
loop
and
data16
pop
loop
add
cwtl
mov
repz
pop
rcl
shl
add
push
divl
in
adc
dec
add
jp
fs
sbb
pusha
add
mov
and
push
add
push
fldt
ja
add
in
inc
add
add
ret
iret
sub
pop
scas
pop
sti
add
inc
add
mov
xchg
adc
fcmovne
or
les
xchg
push
les
mov
data16
mov
add
or
add
sbb
xor
push
mov
add
arpl
push
add
mov
lods
adc
xor
jb
jo
jp
mov
idivb
movsl
inc
jo
jmp
imul
xchg
into
mov
add
inc
add
mov
jne
arpl
cwtl
fsubrs
gs
pop
ds
sub
xor
inc
scas
add
jo
mov
add
repnz
insl
and
imul
inc
mov
add
repnz
mov
in
sub
xchg
mov
lods
aad
inc
add
popf
sarb
lods
cmpb
mov
dec
out
mov
add
imul
xlat
sub
dec
add
dec
adc
push
or
add
push
xor
aaa
cs
cmp
push
push
out
add
or
push
add
enter
lahf
jns
or
movl
dec
add
xorb
stc
popf
mov
jae
addr16
add
pusha
add
lods
cmp
xlat
push
mov
xchg
das
push
mov
dec
add
mov
xchg
lods
lcall
lret
enter
jmp
add
push
add
cmp
add
jne
add
lods
mov
into
stc
mov
sub
in
push
add
fldcw
mov
jmp
push
call
add
pop
adc
mov
push
in
add
insb
add
adc
aaa
or
pushf
cld
push
sti
fcomip
test
mov
add
push
inc
add
or
rcll
xor
or
pop
cli
pop
inc
add
jnp
cwtl
cmp
add
adc
pop
std
cmc
push
add
xchg
aad
mov
add
add
push
inc
add
or
mov
add
jns
sbb
add
fisubrs
rol
aas
fdivl
lahf
out
jecxz
mov
fisttps
cli
outsb
add
dec
dec
add
or
xchg
mov
lcall
jecxz
inc
add
cltd
cltd
and
out
movsl
in
jmp
test
xor
and
imul
mov
mov
cli
ds
push
xchg
inc
jo
pop
fisubrs
addl
cmc
repnz
xchg
jbe
add
sahf
dec
adc
jecxz
pop
jp
mov
cmp
pop
add
loopne
xor
and
xlat
xchg
xchg
fidivrl
add
mov
push
shll
subl
add
pusha
add
movl
cmpsb
push
es
fucomi
dec
sbb
add
fcompl
inc
add
sub
lahf
in
repz
xchg
shrb
xchg
adc
add
addr16
add
dec
cmp
push
inc
mov
mov
add
popl
sbb
push
jo
jl
divb
add
cmp
imul
mov
add
mov
mov
fwait
in
imul
xlat
movsl
lods
pop
inc
pop
xchg
and
aam
mov
and
addr16
dec
xor
cmp
fcomps
xchg
adc
sub
lret
sub
jecxz
jmp
cmc
out
or
xchg
out
xchg
pop
jecxz
imul
cmp
mov
or
jns
out
mov
and
or
andb
or
subb
lock
inc
lock
cwtl
pop
mov
lcall
add
adc
movsb
lahf
dec
add
cs
lods
mov
cmc
pop
cwtl
lock
rcrl
lds
and
push
mov
and
fsubr
js
addr16
dec
paddsw
pop
cmp
dec
add
mov
xor
cmp
fadds
mov
int3
or
ja
adc
push
pop
mov
add
pop
cmp
inc
add
jbe
pop
pushf
scas
loopne
add
das
xor
shll
jle
push
out
mov
and
and
movsb
inc
add
add
add
addb
inc
add
add
icebp
lds
xor
mov
out
sub
add
popf
sahf
icebp
test
jae
cwtl
mov
inc
push
fsubs
add
scas
cmpb
in
pop
cmp
bound
mov
lods
xchg
jmp
add
sahf
dec
cmpsb
dec
add
test
add
pop
xchg
nop
jg
mov
lods
mov
add
add
cmpsl
rcr
adcb
scas
sahf
dec
add
out
movsl
lret
add
and
pushl
fidivs
scas
test
add
mov
call
xor
cmp
add
lret
inc
pop
xor
adcb
add
xor
sub
sarb
iret
mov
add
loope
ss
adc
add
mov
add
or
jo
imul
lock
xchg
lret
xor
adc
ds
add
inc
add
test
imul
scas
cmpsl
rcrl
pop
test
dec
add
das
pop
mov
lea
rorb
jno
dec
pushf
fcom
xchg
sahf
push
mov
aad
add
add
push
add
push
or
mov
add
mov
add
loop
mov
lea
dec
mov
in
push
pusha
add
pop
fsubs
loopne
add
mov
rcll
fnstenv
adc
sbb
mov
dec
add
scas
push
add
pop
inc
outsb
add
push
push
sahf
rcrb
add
xor
add
push
add
xor
loopne
inc
daa
mov
aaa
xchg
inc
add
sub
add
sbb
add
loopne
mov
cmp
jecxz
xor
add
ret
das
and
cwtl
xchg
push
std
xchg
inc
add
add
mov
xor
add
popf
and
inc
add
add
add
fdiv
and
roll
add
add
or
add
negb
add
daa
cmp
add
xor
js
bound
andb
jecxz
dec
ja
cmpsl
ret
and
xchg
xchg
add
xor
xchg
in
add
stos
andl
xchg
lods
cmpsl
mov
pop
pop
xor
xor
sbb
pop
jp
jecxz
call
sub
jp
xor
and
rcrl
jae
or
inc
adc
add
fldenv
sarb
xchg
adc
add
dec
int3
and
push
out
test
jg
add
add
mov
jl
mov
js
lret
and
test
cmp
outsl
jl
add
cmp
xor
ret
mov
xlat
pop
in
testl
add
pusha
add
fnstsw
shlb
mov
daa
and
mov
or
jnp
pop
ds
test
lahf
jno
dec
add
dec
add
scas
inc
add
test
sbb
cmc
push
or
mov
gs
mov
ds
pop
add
add
mov
rcrb
addr16
mov
jns
jecxz
ret
sahf
cmp
add
sub
adc
push
fsubp
jecxz
add
cmc
push
add
lahf
arpl
jb
cmp
xor
dec
inc
sahf
fdivl
add
add
jbe
icebp
jno
pop
adc
dec
add
in
dec
add
arpl
addr16
xchg
fisubrl
add
push
fwait
push
or
jno
das
pop
jns
xorl
sbb
pop
add
call
dec
add
sbb
fs
bound
xchg
mov
lret
shll
jae
movsl
das
daa
dec
add
lahf
add
xchg
xchg
je
mov
jae
add
pop
jge
cmc
mov
mov
js
add
popf
dec
add
mov
in
insl
pusha
add
pop
out
lock
test
mov
jecxz
dec
add
mov
pop
int3
cmc
xor
add
add
adc
add
pop
loopne
arpl
jne
sbb
xchg
push
add
jg
xor
jns
pop
jb
jg
jg
decb
add
aam
add
adc
add
test
sbb
xchg
cmpsb
mov
mov
mov
adc
add
fdivrp
xchg
adc
adc
add
add
xchg
pop
addr16
inc
add
shr
andb
mov
aas
mov
jl
xchg
sbb
fadds
mov
hlt
cmp
js
add
shrl
jge
xor
add
cs
orb
mov
pop
mov
jne
add
call
cmpsb
mov
in
ja
inc
mov
add
sub
mov
fimuls
add
mov
add
and
testl
ljmp
jbe
sbb
push
add
add
aaa
mov
mov
add
mov
add
ljmp
cmp
add
adc
add
dec
fcoms
in
inc
add
add
aas
ja
popa
ljmp
mov
insb
add
push
insb
add
in
mov
pop
xor
jo
inc
jmp
arpl
mov
jg
mov
add
inc
add
out
hlt
sub
push
adc
lods
test
jae
add
push
movsb
fwait
insl
dec
inc
call
idivb
outsb
add
rorb
xchg
into
pusha
add
rorl
das
popa
fists
push
dec
and
xor
dec
shll
add
fmul
ds
lods
adc
aam
sub
mov
negl
xchg
js
adc
daa
cwtl
scas
sub
test
notb
adcl
xchg
sub
inc
add
mov
cmpsb
jbe
add
adc
push
inc
add
sub
jecxz
add
add
and
add
addr16
aas
dec
icebp
push
jle
add
mov
mov
sbb
add
mov
push
pop
or
mov
add
xor
call
xor
and
jne
jae
mov
sbb
pop
sbb
adc
push
outsb
add
push
push
pop
pop
inc
cli
adc
push
cmp
addr16
add
add
xor
pushf
lock
push
iret
pop
fdivr
comiss
shlb
in
mov
jl
push
pushf
ljmp
xor
add
pop
xchg
sub
into
lcall
push
add
sarb
fdivl
add
mov
data16
add
jecxz
mov
loop
mov
scas
push
add
xchg
out
cs
mov
and
cmp
out
ficoml
cmp
shlb
cmp
or
mov
xchg
lret
xchg
shlb
cmp
mov
hlt
jp
inc
add
adc
jp
mov
add
jnp
mov
jmp
mov
gs
adc
xor
add
xchg
insb
add
sbb
push
enter
xchg
mov
jle
jl
inc
mov
mov
inc
xchg
pop
insl
int3
gs
fdivrs
mov
add
or
js
in
rcrl
pop
repz
cli
leave
push
jle
out
lods
sub
pop
les
add
ds
mov
test
int
fadd
cli
insb
add
pop
ds
add
add
std
popa
pop
cmpsb
or
icebp
and
hlt
lock
nop
shrb
testl
mov
xchg
cmp
outsl
push
add
mov
or
sub
push
jp
add
cli
dec
add
in
sub
daa
pop
lock
ljmp
and
std
mov
jle
stos
mov
or
in
lret
sub
loop
jns
add
add
bnd
pop
lret
nop
mov
notb
adc
add
icebp
add
push
add
sub
inc
add
ss
mov
jne
jns
lds
push
rolb
imul
arpl
and
or
inc
add
aaa
fcoms
int3
xor
mov
ss
mov
loopne
add
or
repz
gs
add
mov
add
add
cmp
dec
popf
add
aaa
pop
sarl
lods
out
adc
dec
add
test
add
sub
ja
mov
sub
add
lea
mov
mov
cmp
add
xchg
cld
add
testb
sti
rcrb
sbbl
mov
pop
mov
hlt
xor
hlt
or
shl
inc
fsub
fcomi
sub
cmp
xchg
outsl
mov
sub
push
mov
jae
lea
pop
sub
add
cmp
dec
add
imul
inc
add
loope
jno
inc
add
pop
in
sub
xor
add
add
cmc
mov
add
test
adc
icebp
jnp
mov
mov
mov
sysret
adc
add
push
in
xchg
es
dec
add
adcb
push
xchg
dec
add
lret
or
dec
add
cld
addr16
mov
aas
xchg
push
dec
es
lds
pop
int
mov
fsubrs
or
pusha
add
daa
mov
add
and
ja
sbb
ret
xor
inc
add
jmp
movsb
xchg
repnz
data16
dec
add
push
add
notb
cltd
jno
ss
xor
push
iret
sbb
ficoms
push
iret
sub
gs
hlt
mov
cmp
icebp
or
xor
loopne
scas
jp
jmp
ret
push
jmp
leave
jecxz
in
stos
js
dec
add
pandn
jnp
add
pusha
add
ret
pop
ljmp
jo
jmp
aad
shld
or
daa
fdivrl
add
lds
add
inc
ds
lods
mov
xchg
arpl
add
jge
adc
or
das
cmp
in
mov
in
xchg
sahf
lods
inc
add
jge
mov
mov
pop
pop
push
mov
xchg
and
push
aas
mov
outsl
andl
imul
pop
fptan
mov
mov
pop
movsl
imul
lret
ficomps
sbb
add
or
inc
adc
addb
add
mov
pop
subb
testb
test
xor
mov
xchg
dec
loop
pop
sbb
cmpsl
inc
add
adc
repz
jb
arpl
pop
xor
pop
sub
in
movsl
lret
dec
add
xchg
pop
sti
xchg
mov
add
movb
add
cmpl
mov
cmpsb
xor
std
mov
out
xor
xchg
cmp
je
add
xchg
test
movsl
sbb
sub
push
add
iret
cld
dec
repnz
andl
add
loope
add
pusha
add
or
lock
repnz
inc
sbb
push
add
adc
sbb
shlb
add
add
or
and
insl
lcall
add
icebp
lret
out
xchg
sub
pop
dec
les
dec
sahf
out
push
add
sub
adc
cmp
xorb
push
inc
adc
add
lret
fiadds
test
repnz
add
jl
push
add
dec
xor
mov
std
lret
add
dec
in
mov
mov
add
in
xor
lret
or
fistl
addr16
out
popa
jmp
mov
push
push
out
and
and
add
mov
sbb
and
repz
xchg
adc
jae
jg
jb
add
movsb
shl
pop
sub
aas
mov
add
mull
and
add
xlat
sbb
testb
dec
iret
clc
ror
repz
add
into
adc
je
jae
sub
add
inc
add
add
add
adc
or
sbb
add
mov
mov
in
int3
jge
mov
orl
adc
xchg
scas
jge
test
decb
mov
mov
push
push
addr16
ficompl
mov
pop
movsb
out
arpl
pop
add
mov
mov
notl
add
pop
lea
aam
test
add
pushf
mov
jb
ret
push
and
sub
out
sub
inc
add
in
push
sahf
shr
pop
ljmp
cmp
jl
mov
push
add
test
add
pop
cmc
add
dec
rorl
xchg
pop
sub
add
add
cld
xorb
add
adc
dec
add
and
test
in
call
dec
push
flds
add
sbb
cmp
icebp
mov
push
jno
loope
add
xchg
sub
or
imul
xor
rcl
add
pop
push
add
mov
add
or
mov
fisubrl
add
stc
push
dec
stos
out
repnz
fidivrs
and
stos
sub
cld
mov
adc
add
lret
gs
adc
pop
dec
xor
pop
cmc
aas
subb
inc
add
dec
add
insb
add
and
mov
add
aas
xor
je
push
fistl
push
add
sub
add
int3
jle
cmp
or
xchg
jp
sbb
adc
mov
iret
pop
and
movsl
push
repz
mov
stos
mov
cmp
jmp
push
loopne
add
add
rcrb
dec
add
add
out
and
add
sub
xchg
rcrl
test
das
js
lcall
pop
popf
jae
jns
inc
add
adc
pop
test
xchg
sbb
add
fwait
nop
outsl
mov
add
lea
add
inc
add
inc
add
add
fdivrs
xchg
mov
dec
add
mov
push
out
or
clc
dec
add
je
mov
jns
cmp
adc
cmpsl
rcrl
adc
addr16
mov
add
xor
movsb
cmp
shr
out
add
out
or
jmp
add
ljmp
ja
add
jecxz
jp
insb
add
jecxz
dec
add
xchg
mov
push
add
loop,pt
push
addb
add
xchg
dec
inc
push
jmp
cmpsl
ret
jl
outsl
sarb
movsb
xchg
add
dec
add
pop
mov
data16
out
jo
push
jecxz
adc
test
pop
mov
push
xchg
nop
mov
testb
icebp
sub
dec
mov
cmpl
cmp
daa
bnd
leave
cmp
hlt
daa
movsb
hlt
orb
jl
add
insb
add
push
adc
add
mov
icebp
pop
xchg
adcb
and
push
sbbb
fwait
data16
inc
add
xor
cld
orl
stos
or
out
lods
add
sub
fcompl
in
xchg
jb
loopne
mov
add
insl
jb
cmp
lret
aaa
add
pop
pop
cli
sbb
push
addr16
add
mov
adcl
add
ret
push
sti
lret
subl
pop
xchg
std
mov
xchg
jp
fadds
movq
sub
pop
cmpsb
fiaddl
add
sbb
imul
incl
mov
dec
mov
dec
flds
add
sub
jmp
cmpsb
gs
push
pop
sahf
sti
and
shll
xchg
mov
mov
or
pop
cld
or
mov
lock
sti
dec
ja
add
in
mov
jb
js
mov
jge
or
jmp
xchg
std
fisubs
fsqrt
inc
add
add
cmp
add
sahf
mov
pop
dec
add
out
sbb
fdivrs
adc
xorl
cld
sti
xor
mov
mov
test
nop
ja
sti
xchg
dec
into
enter
pusha
add
add
add
or
fwait
mov
dec
add
les
push
cmp
add
inc
add
in
cwtl
adc
lcall
add
stos
rolb
add
incl
fs
adc
push
jg
or
mull
lds
jo
enter
ja
cmp
add
push
add
xor
mov
dec
add
mov
push
add
adc
imul
cmp
and
cmp
ret
mov
mov
fwait
jle
sarb
das
int3
data16
insl
ret
out
outsl
in
xchg
xchg
pop
cmc
sub
in
xor
push
add
div
adc
ret
int3
aaa
pop
pop
dec
add
pusha
add
inc
add
pop
dec
add
cs
pop
push
enter
mov
sbb
das
adc
xor
add
jns
pop
test
add
scas
inc
push
test
pushf
jb
in
mov
scas
push
je
clc
xor
popa
adc
movsb
cwtl
fadd
jp
repz
rorl
jmp
pop
xor
push
sbb
shl
dec
mov
add
shll
inc
jns
mov
stc
push
mov
mov
pop
lcall
leave
fdivl
mov
rcrb
rclb
xchg
scas
icebp
test
sbb
sbb
ret
bound
int
cmp
mov
lds
cld
xor
mov
rorb
xor
add
neg
or
push
lret
mov
or
lea
out
cmpsl
push
xor
pusha
add
add
out
xchg
adc
shlb
sub
data16
add
out
push
inc
add
outsb
add
fsubr
jp
push
mov
dec
and
pop
ret
fildl
push
add
add
add
scas
addl
jg
xor
mov
add
in
add
add
in
or
add
dec
jnp
sub
and
push
call
mov
mov
xlat
xchg
dec
xor
adc
pop
sahf
inc
push
mov
add
xor
dec
fldcw
jge
sub
lret
jns
dec
add
and
icebp
or
loope
jg
nop
adcb
adc
cwtl
fsub
dec
add
lahf
mov
stos
out
ljmp
jne
ds
add
shll
and
jbe
outsl
mov
xchg
add
dec
jnp
add
xchg
mov
xor
xor
dec
add
arpl
fwait
cmpsl
jl
ljmp
dec
les
aas
jnp
adc
add
xchg
push
ret
lret
pop
test
ficoml
lock
leave
mov
mov
pop
push
push
add
add
inc
add
xor
jmp
jmp
nop
sbb
and
hlt
dec
add
add
mov
into
mov
in
or
sbb
and
dec
in
add
mov
dec
add
mov
bound
mov
clc
add
pop
dec
add
jge
and
xor
add
add
enter
add
xor
or
fmuls
push
pop
jne
sub
mov
mov
add
cmc
mov
into
lcall
add
outsl
das
mov
insl
std
cmp
outsl
lods
xor
repnz
add
fstpl
lret
xchg
and
out
dec
xchg
jne
lret
or
je
dec
mov
arpl
dec
add
jb
mov
add
mov
push
xor
xchg
jge
mov
add
cmp
lods
and
pop
cld
iret
xchg
push
pushf
pusha
add
inc
scas
jg
fstpt
push
lret
pop
int
hlt
stos
jnp
shll
sbb
and
sahf
xchg
xor
adc
lret
icebp
push
add
ret
add
push
mov
sbb
add
xchg
sbb
cmc
lret
jl
add
shll
fld
mov
mov
in
in
adc
jbe
fnsave
mov
stos
ret
fisubrl
add
fiaddl
pop
push
add
sbbb
lock
cmp
lds
add
add
mov
dec
lods
fcompl
add
adc
stos
and
push
mov
flds
add
add
jnp
cmpsb
dec
cmpsb
jno
std
push
push
sahf
lock
push
inc
test
jno
push
ror
mov
add
adc
adc
add
gs
repz
fstl
insb
add
fdivrp
or
outsl
jge,pt
aas
xlat
sub
lcall
add
sti
push
mov
sbb
xchg
sub
xchg
push
divb
add
sbb
fs
push
shll
add
jle
stos
popf
out
pop
add
cld
and
fnstcw
nop
inc
add
add
movsb
xor
pop
push
add
mov
and
ds
rcll
sahf
inc
add
pop
push
push
add
call
in
push
aaa
push
or
mov
cld
dec
sbb
lcall
scas
add
in
stos
loope
dec
xchg
add
add
lret
pushf
jle
shl
out
subl
and
cmp
loope
xor
xor
or
repnz
stos
add
mov
fxch
gs
das
fnstsw
mov
dec
add
shl
repnz
jnp
inc
mov
and
into
in
flds
xchg
jle
jns
push
mov
call
sahf
std
rorb
movsl
dec
dec
add
add
sahf
push
addr16
addr16
shrb
add
imul
les
cmp
lods
jno
xor
push
add
rclb
pop
add
mov
jbe
in
cmp
jg
mov
adc
mov
jmp
add
sbb
dec
mov
add
inc
add
push
or
push
push
add
insl
shll
add
xchg
or
add
add
xchg
data16
mov
ficompl
push
jp
sbb
int3
lahf
or
jnp
pop
jg
mov
push
xchg
fiaddl
scas
repz
add
lret
cltd
inc
add
mov
cmc
mov
sbb
mov
add
jb
into
in
leave
lahf
sub
mov
pop
xchg
adc
add
test
xor
fldl
jb
add
fiadds
leave
out
andl
pop
pushf
inc
jp
gs
mov
movsb
jne
sbb
repnz
add
stos
pop
pop
push
add
out
pop
cmp
add
pop
dec
add
add
nop
cmpsl
pop
add
pop
mov
add
es
in
ljmp
adc
adc
stos
mov
sahf
and
testl
add
mov
add
pop
lcall
jg
lods
add
add
pushf
and
sub
mov
in
test
pop
imul
in
clc
jb
mov
xor
add
add
cld
imul
mov
imul
add
add
icebp
pushf
cld
and
adc
stos
add
int3
call
bound
mov
stos
ljmp
pushf
push
mov
mov
add
iret
jbe
add
cli
cmp
or
test
test
lds
sbb
xor
outsl
xor
in
mov
test
fisubrs
or
jne
mov
sti
and
iret
pushf
lret
lret
rep
mov
cmp
add
addr16
repz
pop
xchg
sbb
inc
add
sahf
cmp
xor
add
xor
mov
add
mov
add
push
add
push
pop
dec
add
pop
push
sub
xchg
cmp
push
add
xlat
mov
das
add
lods
cli
push
mov
rcr
ret
mov
std
ret
rolb
ja
or
aad
add
sub
idivl
push
orb
xor
aam
sbb
xchg
or
aad
adc
ljmp
ljmp
jecxz
inc
ficomps
add
sahf
push
push
loopne
cmp
cltd
das
rclb
add
out
lea
mov
rcrl
xchg
aam
add
insb
add
dec
inc
jne
adc
fsub
dec
add
xor
push
add
mov
insb
add
lahf
out
add
stc
pushf
inc
jecxz
repnz
adc
inc
adc
mov
pusha
add
int
add
fdiv
test
pop
mov
push
fisttpl
add
pop
push
jmp
std
jmp
cmp
or
sbb
jmp
add
or
ja
cmp
int3
lods
mov
jb
int3
rol
mov
stos
aas
push
jae
add
push
mov
pop
inc
cltd
fdivs
mov
add
je
andl
push
xchg
xor
jnp
mov
sbb
add
bnd
cltd
push
add
fs
das
cmpsl
fucom
popa
out
fimull
sub
pop
shrl
sub
aam
loopne
xor
inc
add
ljmp
stos
test
pop
xor
jp
idivl
fwait
mov
jo
add
jp
dec
add
jne
imul
xchg
add
add
add
sbb
orl
adc
movlps
adcl
jg
mov
xlat
xor
push
jo
movsb
xchg
es
xchg
lea
jle
aas
mov
dec
gs
stos
cmp
jns
std
push
push
shr
test
mov
mov
repz
testl
dec
mov
cmp
stc
ret
adcl
test
adc
add
lahf
xchg
es
mov
mov
mov
inc
sub
push
in
rorb
ret
xor
mov
or
xor
or
hlt
mov
lahf
pop
or
rdpmc
dec
or
adc
jo
add
call
fsts
mov
push
call
or
jp
push
shrl
hlt
pop
dec
add
out
xor
add
add
mov
inc
aam
add
daa
testl
jg
mov
sbb
adc
adc
inc
iret
loopne
cli
out
jg
fisubrl
out
stos
bound
lock
add
sub
nop
leave
mov
sbb
mov
out
imul
scas
jp
roll
popa
icebp
pop
push
outsl
call
add
add
popa
mov
mov
push
ss
add
fwait
add
add
sbb
mov
inc
add
pop
and
mov
jns
dec
subb
add
mov
push
sub
std
cwtl
xchg
inc
add
scas
mov
lsl
cmp
add
hlt
jp
add
dec
dec
push
add
xchg
jnp
add
adc
xlat
incb
xchg
pop
dec
add
mull
xchg
in
xchg
lret
push
push
das
arpl
in
mov
test
add
sbb
add
xchg
test
aam
pop
imul
lods
loope
jmp
add
inc
add
lea
out
imul
addr16
cmpsl
mov
add
ja
sbb
push
jns
xchg
fsubr
xor
push
xchg
push
pop
xchg
sbb
add
out
cmp
push
add
inc
movsl
lcall
iret
fcmovb
add
push
pop
mov
add
or
cld
mov
add
sub
dec
popa
loopne
cmpsl
xor
hlt
cld
pop
lods
ds
sarb
dec
add
cmp
jo
xor
push
mov
dec
add
jne
in
icebp
mov
add
cmp
sbb
adc
test
jp
dec
pop
jns
push
xorl
add
repnz
les
sbb
scas
adc
ss
cmp
dec
add
dec
dec
inc
add
test
bound
mov
and
stos
jb
adc
fbld
cmpsb
xchg
pop
xlat
mov
add
cmp
add
stc
sub
enter
and
lods
mov
cld
in
cmp
jae
scas
setl
and
and
lock
add
dec
adc
adc
aas
out
mov
scas
xchg
push
cltd
inc
clc
lret
and
gs
add
jno
dec
add
sahf
push
push
ljmp
add
xchg
mov
stos
cmp
aas
push
cmp
add
pop
mov
in
popa
lock
or
push
add
dec
or
mov
adc
jle
mov
adc
pop
push
outsb
add
mov
cli
push
xsavec
lods
jae
js
adc
jb
fnsave
pop
add
cs
mov
loop
cmc
rcll
inc
push
out
popa
insb
add
add
daa
pushf
inc
cwtl
fnstcw
repz
inc
call
mov
mov
jns
xor
pop
fucomp
inc
push
add
in
lods
fimuls
sbb
pop
mov
adc
add
lcall
lret
repnz
add
jae
jecxz
into
jnp
addr16
inc
add
scas
lret
or
xchg
addl
pop
xchg
out
add
add
jl
add
sub
rorb
add
in
xchg
arpl
mov
inc
fnstenv
pop
inc
stos
xor
inc
add
hlt
mov
mov
sub
adc
jnp
adc
xor
add
leave
repz
std
hlt
arpl
or
ds
mov
add
std
or
mov
add
jbe
shlb
movsl
aaa
jnp
les
mov
add
cmpsb
cmp
inc
dec
dec
add
push
xchg
in
dec
mov
cmc
movsb
mov
add
daa
jge
xchg
sarb
test
fsubrp
mov
add
enter
lea
xchg
mov
arpl
add
test
scas
add
das
lods
dec
add
inc
add
inc
add
mov
mov
popf
cwtl
repz
inc
add
sete
push
mov
sarb
add
ret
add
add
aaa
sub
aas
sbb
aaa
aaa
fcoms
mov
imul
scas
xchg
repnz
lds
cmp
add
lods
js
add
hlt
lahf
pushf
iret
or
xchg
aam
sbb
out
dec
popa
xchg
xchg
pop
addr16
sbb
gs
add
add
arpl
lret
xchg
mov
adc
and
xor
or
loope
add
jg
aad
mov
repnz
cltd
inc
outsb
add
pop
stos
lds
xchg
idiv
add
sub
adc
movsb
cmp
insl
cwtl
dec
addl
aam
aas
and
mov
imul
pop
decl
outsb
add
adcl
xchg
push
sbb
fisttpll
inc
sub
xchg
pushf
adc
adc
mov
sti
jg
lahf
rol
sahf
test
lret
shll
test
pop
lods
in
cltd
jnp
jmp
scas
xchg
int3
pop
adc
movsb
sub
je
mov
xchg
leave
scas
sbb
or
stos
arpl
adc
leave
std
shll
add
xlat
popf
or
cmpsl
and
xlat
dec
add
lea
add
aas
js
dec
pop
xchg
mov
mov
cmp
or
lods
add
jbe
cmp
mov
lea
mov
sbb
cmp
add
add
test
mov
mov
in
sahf
mov
mov
xchg
rorl
jb
jno
icebp
and
frstor
adc
popf
pop
mov
sub
add
mov
cmpsb
sbb
add
stc
shl
pop
lret
clc
fsubrl
pop
ljmp
add
add
hlt
push
and
mov
or
and
outsb
add
add
scas
cltd
scas
ja
jg
or
imulb
rol
add
mov
test
cmp
add
lock
push
add
mov
add
scas
sub
mov
add
inc
add
dec
adc
dec
ja
out
jne
popf
fmul
add
and
inc
sub
lahf
push
adc
add
sahf
mov
stc
andb
mov
lods
add
ss
xchg
repz
add
add
add
xor
push
or
jns
add
adc
push
mov
xor
rcr
outsl
push
addr16
dec
add
ret
cmpsb
mov
jnp
push
hlt
xchg
out
stc
adc
bound
pop
push
add
sub
jge
add
lahf
mov
xchg
xchg
jne
leave
out
data16
xor
cld
jno
add
add
enter
sbb
jg
ja
scas
sbb
or
xchg
adcl
js
insl
dec
add
cwtl
rcl
mov
add
roll
in
add
pop
cmp
arpl
sbb
adc
out
aad
pusha
add
test
cld
mov
cmp
push
stc
adc
lock
add
add
mov
inc
je
xchg
add
inc
imul
cltd
testb
cmp
iret
out
aaa
cmpsb
loopne
push
sbb
adc
fmul
aaa
cmp
xor
daa
push
stos
xchg
jbe
add
fistpll
inc
add
mov
sub
imulb
stos
arpl
cmc
dec
cmp
lret
sbb
xlat
insb
add
mov
in
sub
jns
pop
cmp
add
dec
add
rcll
xor
data16
sbb
and
test
mov
add
inc
push
call
dec
add
or
arpl
enter
gs
and
jae
xchg
leave
popa
push
lcall
adc
rclb
xchg
les
leave
adc
push
div
call
dec
add
add
lahf
loopne
push
rcrl
mov
inc
inc
out
xor
mov
and
cmpsb
js
movsl
ss
push
dec
add
dec
add
faddl
push
add
imul
add
test
shlb
pop
cmpsl
mov
mov
push
js
add
lret
mov
sub
pop
out
add
push
test
fidivrs
sbb
mov
xor
scas
imulb
out
and
push
cmpsl
jle
movsl
lods
or
mov
imul
pop
lods
leave
fwait
jl
inc
ja
inc
sbb
push
mov
inc
add
push
add
cmp
mov
pop
pushf
adc
in
pop
inc
lret
dec
jg
cmpsl
add
add
push
lcall
dec
popa
fwait
imul
rorl
cmc
mov
ja
in
dec
push
pop
mov
add
jp
push
add
and
outsb
add
or
aam
in
add
add
sub
sub
push
add
lret
imul
repnz
add
addr16
scas
push
negb
fdivs
sub
fdivrs
scas
test
xchg
dec
punpckhbw
mov
rcll
mov
out
sbb
add
add
psubsb
enter
pop
push
xorl
mov
add
mov
pop
mov
clc
jecxz
pop
mov
andl
out
push
cmp
jle
xor
cli
hlt
cmp
push
cli
cmp
loope
inc
cvtps2pi
add
ficomps
ljmp
add
repnz
mov
xlat
adcl
imul
adc
mov
movsb
repz
push
loopne
jne
outsb
add
add
xchg
dec
push
call
pop
test
jecxz
add
add
add
insb
add
fisubrs
add
jnp
jnp
pop
ds
arpl
in
push
imul
jbe
add
jnp
mov
and
adc
notl
xor
clc
jns
push
mov
jo
pop
in
xor
add
add
add
or
mov
addr16
out
outsl
stos
pop
cmp
ficoml
icebp
out
push
inc
add
push
add
jno
xor
cs
push
sub
test
add
in
add
mov
cmp
xchg
mov
add
lea
cmp
sahf
int3
pop
iret
fcmovbe
pop
lcall
js
adc
pop
iret
out
add
adcl
add
fnstsw
mov
lods
mov
incl
inc
push
test
clc
test
sub
dec
jg
sbb
mov
add
and
ficomps
mov
add
stos
add
rcl
push
and
dec
add
ror
test
push
ss
out
or
add
insl
mov
std
je
cld
push
lock
cmpsb
nop
aaa
outsl
repnz
jne
int
pop
jnp
xchg
add
lock
pop
add
in
jns
adc
inc
add
dec
pop
mov
ret
cmp
mov
test
jecxz
adc
add
lods
mov
filds
mov
out
xor
in
cmp
pop
push
dec
add
add
adc
rol
enter
jne
jbe
fadds
pop
bound
sbb
mov
jnp
push
fldcw
insb
add
and
sub
mov
test
jb
add
add
rorl
clc
adc
add
mov
neg
addb
loopne
rcll
dec
cltd
pop
adc
popf
xor
mov
adc
or
test
mov
and
mov
pusha
add
pop
cwtl
cmp
inc
js
or
leave
mov
cld
inc
mov
pop
mov
andl
rorb
insl
xchg
push
add
and
cmpl
add
enter
pop
lahf
or
sarb
js
sbb
add
sbb
xchg
stos
scas
dec
add
or
xchg
rol
inc
add
movsl
xchg
xor
pop
pop
setl
and
cmp
inc
aaa
cwtl
call
popf
or
inc
add
sahf
lea
add
sub
xchg
test
push
popf
sub
inc
ss
and
xor
or
add
jl
cwtl
pop
filds
sub
xchg
shl
add
pop
subl
or
outsb
add
add
pop
jnp
pop
jno
sub
add
xor
in
add
dec
add
mov
xor
sub
les
fildl
add
xor
mov
and
mov
inc
adc
xchg
adc
dec
push
sti
add
inc
sbb
inc
add
dec
add
leave
and
into
pop
dec
add
loop
sub
imul
sub
jl
add
add
cmp
call
add
movl
or
in
neg
add
and
sti
sbb
test
jmp
adc
mov
mov
out
jno
cmp
inc
inc
xor
jmp
mov
nop
mov
out
je
and
adc
cli
mov
add
aas
push
mov
bound
test
add
dec
add
mov
add
and
add
add
fwait
xor
mov
mov
add
pop
cmc
push
add
call
daa
notl
pushf
sub
mov
jne
rorb
sub
sub
or
add
pop
gs
leave
adc
xor
mov
jle
outsl
lret
add
add
aas
rorb
add
shl
inc
add
std
out
js
mov
shl
repnz
imul
inc
in
outsb
add
in
bound
inc
icebp
cmp
jb
jo
add
add
push
stc
repz
xchg
xchg
js
add
mov
fiaddl
jle
add
addb
add
in
aas
adc
xchg
jne
cmc
push
shrl
add
mov
sbbb
add
adc
dec
repnz
loopne
push
add
and
mov
jne
dec
add
fdivrl
std
ds
add
sbb
fisubrs
add
sbb
sub
add
push
pusha
add
inc
movsb
das
lahf
cmpsl
add
stc
fsubs
push
stos
push
movsb
cli
adc
add
xchg
or
inc
add
jae
adc
mov
subl
sub
ja
xor
jp
loope
loop
mov
int3
add
aad
push
mov
push
mov
add
pop
popf
lea
out
scas
lea
mov
out
enter
sub
stc
jle
sub
mov
mov
out
addr16
daa
jl
cmc
test
add
and
jb
roll
mov
rclb
rclb
into
jge
pop
dec
decb
sbb
and
lret
cld
and
xchg
lock
add
into
pop
call
cmpsb
pop
inc
dec
fistps
and
or
lods
es
push
or
add
dec
add
js
faddl
dec
add
aam
fmull
add
adc
mov
decl
add
sub
jno
dec
add
push
mov
in
mov
adcb
hlt
sahf
push
add
jae
out
push
xor
pop
pop
mov
inc
add
andl
add
pusha
add
inc
mov
insb
add
sahf
mov
add
dec
and
add
add
adc
adc
aam
mov
aam
add
push
add
stc
inc
add
enter
mov
add
add
sbb
jnp
sbb
dec
out
add
test
xor
jge
addr16
gs
bound
or
and
fimull
push
int3
aaa
mov
pusha
add
jno
push
add
imul
push
int3
jge
dec
cmc
xchg
out
out
mov
push
sub
xor
cmp
dec
add
cld
ss
fwait
add
mov
in
mov
xchg
cltd
xor
add
cmc
std
call
ss
aad
sub
sub
cli
mov
popf
loop
ds
pop
into
push
iret
and
hlt
int
pop
or
inc
es
and
mov
dec
addr16
inc
das
add
add
add
daa
and
adc
lods
add
jne
mov
add
lock
push
mov
xchg
lods
loope
adc
push
inc
add
in
pop
fsub
or
push
testl
into
leave
push
add
jle
mov
and
enter
sti
cli
sbb
mov
lret
push
add
xor
faddl
xchg
add
sub
push
mov
das
adc
stos
lret
movsb
mov
cmp
lcall
mov
dec
add
dec
jl
nop
or
and
xor
rol
sub
mov
inc
lret
adcb
cmp
mov
push
loopne
dec
lcall
xor
fmull
mov
icebp
jo
add
pusha
add
push
add
xchg
arpl
add
int3
dec
jg
and
mov
int3
ljmp
lret
inc
add
adcb
repnz
mov
xor
push
xchg
scas
test
stos
popf
cmp
and
add
xchg
xor
hlt
jmp
dec
add
inc
add
jno
sub
js
pop
cli
adc
jmp
push
add
add
or
xchg
dec
add
xor
loope
leave
inc
add
lret
dec
add
movsb
bound
mov
jl
in
icebp
push
push
popa
test
push
sub
sub
int3
xchg
cli
pop
jb
cmp
and
cld
out
mov
add
lds
lret
pop
mov
mov
and
rorb
add
ds
daa
inc
add
dec
mov
mov
jecxz
in
cmp
je
sahf
sbb
cld
mov
mov
jg
data16
stos
gs
push
shlb
add
push
add
cmp
shl
add
push
out
cld
dec
lcall
add
cwtl
popa
xchg
shrb
rcrl
outsl
outsl
cmp
mov
or
lret
gs
sarb
push
aas
lea
push
push
test
arpl
ficoml
mov
add
xchg
cmp
add
pop
push
scas
out
fsubl
sbb
aam
dec
add
ret
jp
add
movsb
fdivl
kmovw
add
shrl
cwtl
subl
cmp
jo
cmp
pop
stc
movsl
pop
stos
sti
jecxz
add
push
adc
xor
add
stos
ret
popa
sub
mov
movsl
mov
jge
cwtl
adc
or
push
add
jns
add
add
push
jno
pop
pop
repz
lds
push
jmp
testl
adc
mov
mov
sub
dec
or
ret
add
inc
add
sbb
fwait
loopne
mov
inc
add
pop
loope
fadds
cmpsl
loop
iret
add
adc
sbb
sti
das
mov
jbe
mov
sbb
into
fwait
aaa
xchg
sbb
add
mov
sub
jo
mov
lods
sbb
js
daa
dec
add
packsswb
sbb
sahf
addb
andl
cltd
mov
dec
add
scas
call
push
pushf
fisubrs
add
sub
dec
jno
out
or
loope
in
add
sbb
inc
and
pop
outsb
add
jecxz
sahf
mov
and
repz
pushf
pop
bound
dec
add
add
inc
sub
add
test
cmpb
inc
test
stos
sub
das
aam
in
mov
mov
xchg
push
sbb
arpl
fisubrs
and
aaa
mov
mov
insb
add
sub
test
sti
ret
inc
int
pop
iret
fldenv
movb
or
sub
xor
xor
cmpsl
cmp
ja
ret
sub
adc
add
pop
push
lret
iret
adc
inc
add
add
xchg
inc
add
cmp
and
mov
xchg
imul
mov
shlb
dec
add
inc
mov
add
ja
adc
scas
aad
loope
adc
and
jecxz
xchg
out
or
insb
add
scas
xor
push
lahf
pop
imul
scas
mov
aas
xchg
mov
add
add
push
mov
xchg
adc
inc
add
adc
xor
and
or
ja
popa
push
std
in
dec
or
sbb
add
clc
aad
add
pop
paddq
jne
fsubrs
in
fwait
mov
lahf
xchg
fwait
push
add
pop
loop
movl
in
add
sub
push
mov
pop
xor
push
mov
rolb
movzwl
loop
cli
pushf
mov
adc
imul
add
rol
jmp
add
jp
stos
lret
dec
adc
nop
mov
in
fadds
testb
adc
int
xor
lods
arpl
lcall
mov
add
push
xchg
jg
jo
add
add
cmpsb
mov
and
add
add
xchg
stc
add
popf
incl
imull
or
cltd
mov
dec
add
fstp
bound
adc
cmp
nop
lods
xchg
inc
pushl
dec
add
dec
xchg
lret
mov
lahf
mov
add
addr16
and
add
lcall
jae
xor
dec
loope
out
not
mov
add
testb
popa
in
ss
sti
scas
mov
stos
add
mov
push
push
cmp
inc
add
or
jmp
cmp
jp
push
fidivrs
repnz
cmpsl
cmp
mov
add
ds
test
mov
insl
aad
imul
ss
inc
push
lahf
pop
pop
pusha
add
add
mov
mov
fadds
dec
add
cld
scas
xor
ja
add
cld
outsl
push
add
daa
push
add
mov
or
or
aas
lret
daa
fstl
add
ja
xchg
scas
jo
adc
push
xchg
push
pop
add
push
loope
lods
aam
out
push
cmp
or
xor
sbb
fstpt
daa
xchg
dec
add
push
sar
mov
fdivrp
push
pop
and
loop
lahf
movsb
enter
inc
mov
aas
push
pusha
add
jne
mulb
add
call
fistps
test
out
push
not
sub
int
addr16
cmp
inc
push
iret
mov
sarb
test
push
add
movsl
cmp
lods
sbb
scas
out
call
cmp
cmp
add
mov
add
pop
adc
ljmp
loop
fstl
and
sub
shll
add
mov
leave
xor
dec
decl
add
push
ret
xchg
gs
lock
and
jbe
loopne
jmp
outsl
add
lods
push
out
mov
add
rorl
dec
add
stos
pop
adc
pop
ret
add
ja
add
pop
cltd
addr16
test
push
movsb
int3
cld
xchg
mov
add
je
pop
adc
add
adc
push
adc
loop
cltd
sub
mov
mov
dec
jno
add
add
pop
daa
and
mov
add
mov
add
jge
and
add
lcall
dec
add
dec
mov
insb
add
push
mov
in
psubq
add
dec
pop
cmpsb
scas
test
dec
add
inc
mov
sbb
lods
sub
dec
add
dec
add
lea
jge
add
jo
and
or
add
sbbb
add
out
push
pop
jmp
sahf
mov
jns
cmp
xchg
dec
add
jns
pop
je
fadds
fwait
cmpb
testb
mov
and
xor
sahf
push
xchg
ja
xchg
cmp
jg
mov
bound
fldl
test
push
add
pop
cli
inc
add
incl
cmpsb
dec
add
loopne
or
or
push
inc
mov
shll
pop
nop
sub
jb
add
lahf
lret
fdivl
pusha
add
aaa
aas
xor
push
test
stc
mov
arpl
add
cmp
mov
mov
adc
jb
fdivr
push
addr16
sub
test
cld
mov
shlb
or
movsl
cltd
dec
movsb
add
out
sub
pop
fisttpl
and
and
cmp
scas
scas
neg
loopne
add
add
inc
sbb
adc
add
testl
lock
xchg
out
or
scas
adc
mov
add
lret
lret
add
xor
jb
ds
sbb
push
pop
xchg
xor
pushf
stos
add
aas
adc
sbb
fadds
pop
push
out
jae
pop
scas
xchg
add
inc
mov
add
lcall
push
sbb
pop
or
lahf
jp
cmp
adc
xchg
push
pop
test
lock
icebp
add
inc
add
push
add
add
sbb
popa
shll
add
or
enter
orl
int3
loopne
add
movl
cmp
pop
leave
test
out
out
or
popa
test
leave
cmpsb
jge
lea
movsl
or
inc
sub
pop
daa
sub
cmp
std
andb
iret
pop
addb
add
repnz
add
cmc
add
pushf
mov
fists
add
imul
add
dec
enter
dec
add
test
push
lds
xchg
sahf
out
adc
xchg
add
inc
add
sub
push
cmp
add
pop
mov
dec
push
mov
aad
lret
add
add
dec
add
push
push
sub
sbb
mov
xchg
fidivl
and
sbb
sbb
push
movsb
icebp
sbb
iret
jg
add
ja
inc
rorl
pop
or
scas
push
add
xchg
call
test
add
push
add
mov
add
in
lahf
cmove
cmp
push
lods
xchg
add
outsb
add
add
lahf
and
and
into
mov
add
add
cs
popf
ret
loop
inc
fdivp
in
inc
sub
cmp
mov
mov
cwtl
xor
inc
add
jae
mull
cmp
stos
scas
xlat
daa
mov
pushf
decb
cld
out
fbld
stc
push
clc
bound
push
insl
pop
xchg
inc
add
add
xor
inc
add
popa
inc
mov
add
in
mov
push
mov
test
add
cmp
add
cmpsl
fisttpll
mov
add
add
mov
iret
inc
rcr
stos
and
dec
add
int3
adc
bound
add
xchg
sub
add
in
push
test
push
insl
xor
mov
fadds
mov
add
adc
cmc
add
xor
icebp
mov
rcrb
xchg
adcl
add
mov
cmp
inc
add
mov
add
or
and
push
popa
testb
lods
nop
andl
jg
mov
hlt
inc
add
shr
pop
daa
fistpl
jo
add
andl
xchg
pop
fisttps
add
mov
sub
xchg
add
sbb
sarb
mov
xor
into
xchg
insl
cmp
adc
ja
insl
and
mov
movsl
shr
stos
jecxz
jge
dec
push
or
pop
or
dec
add
nop
sub
lock
cmpsl
test
test
add
sub
mov
test
jo
in
and
addl
sahf
jo
clc
leave
negb
test
mov
fstl
lret
xlat
lahf
imul
or
xor
lea
jg
dec
insl
out
lcall
push
add
cmc
mov
movsb
push
cmp
jmp
cld
sub
push
sub
sub
push
add
and
sbb
leave
shlb
hlt
cmc
mov
dec
push
cmp
cli
aam
nop
mov
inc
and
add
add
adc
fcmovbe
pusha
add
pop
adc
fcomps
add
pushf
in
cld
cld
into
ja
clc
dec
dec
outsl
push
jne
push
and
mov
outsl
pop
ret
dec
add
shrb
int3
push
repnz
in
loop,pt
cs
push
inc
add
leave
or
and
push
add
push
cmp
add
jb
inc
add
jmp
rolb
lea
aam
lods
add
loope
sub
negl
insl
or
push
fcompl
aam
out
jb
xchg
std
sub
and
ds
cmp
cld
adc
mov
pop
fmull
jae
push
jo
sub
mov
xchg
stos
das
mov
add
fidivl
cld
jb
add
dec
add
mov
clc
das
scas
inc
add
dec
adc
or
shlb
xor
aad
xor
and
or
cmp
inc
bound
jns
push
add
in
jnp
adc
add
imul
dec
sbbb
mov
push
fsubrl
nop
sub
ds
shlb
out
xchg
xor
jg
add
cmp
repnz
into
inc
add
push
test
adc
popl
leave
xchg
lcall
or
add
add
add
imul
mov
xlat
fcomip
sub
add
imul
pop
call
cmc
pop
dec
subl
mov
jns
lods
push
in
xchg
mov
add
cmpb
sbbb
nop
inc
add
pushf
pop
add
pushf
call
subb
daa
movsl
filds
add
xor
add
data16
add
push
sub
aad
add
push
pop
stos
popf
outsb
add
mov
shr
lret
push
sub
test
mov
fstpl
je
inc
add
in
ljmp
jno
dec
xor
rolb
add
rol
sbb
cmp
in
push
lret
sbb
aaa
or
hlt
sub
fwait
sbb
cmp
push
jg
test
add
sbb
jae
mov
sbb
stc
outsl
add
jp
or
push
lret
adc
rolb
addr16
lcall
fistl
aas
adc
sbb
fwait
dec
mov
mov
add
push
outsb
add
aad
adc
cmpsb
leave
jne
add
dec
idivl
orl
scas
cmpsl
fisttps
fsubrl
outsb
add
add
fistpl
mov
call
mov
pop
clc
jnp
lret
lahf
rcl
mov
and
int3
iret
loopne
add
lcall
mov
cmpl
adc
addb
mov
push
add
aaa
and
hlt
sbb
add
mov
push
mov
mov
dec
add
jns
push
xor
stos
jecxz
shrl
out
ficomps
add
into
mov
lods
jmp
lret
lcall
sbb
dec
add
mov
fcomps
mov
pop
stos
in
jge
add
mov
jbe
mov
addb
mov
outsl
pop
add
add
ja
inc
add
mov
add
pushf
in
pop
std
cmpb
ljmp
add
lock
xor
movsl
mov
int
cld
sbb
xchg
sub
out
lahf
orb
mov
loopne
add
dec
cmpsb
add
negb
mov
repnz
cmovle
loopne
and
jne
pop
aas
pop
or
test
andl
jb
sub
add
pop
and
push
cmpl
or
cwtl
jns
add
cmpsl
mov
mov
or
nop
shrl
ss
imul
mov
inc
add
rol
dec
aaa
mov
push
ret
add
stos
dec
jbe
jl
movsb
dec
add
push
test
jb
adc
add
xor
or
and
dec
or
sbb
in
ss
add
add
aam
sub
dec
aam
cwtl
enter
into
ret
add
xchg
popa
add
imull
pop
enter
pop
sbb
daa
or
cmp
jae
test
jg
add
add
lret
xchg
ret
mov
shll
or
push
and
dec
add
xchg
cld
adc
pmaxub
jg
aam
dec
mov
ljmp
cmp
and
sbb
add
mov
push
movsb
sbb
dec
ja
arpl
push
dec
add
add
and
ja
mov
sbb
xor
bound
inc
add
rorb
add
mov
add
out
sahf
fdivrs
jmp
inc
add
lea
fsubl
and
js
ficompl
mov
xchg
shrl
aam
andb
jo
xor
and
mov
iret
aas
inc
add
movsl
clc
sbb
add
inc
test
push
out
add
pop
cmp
cmc
pop
mov
add
push
fnstcw
call
stc
or
iret
dec
add
add
xchg
outsl
test
pusha
add
jno
jo
cld
sub
cmp
add
mov
pop
add
lret
sbbl
sub
outsl
je
mov
pop
add
inc
dec
adc
stc
adc
sarl
adc
mov
insl
fmuls
cmpsb
add
pop
js
out
add
dec
add
cltd
and
lds
ljmp
xor
xchg
insb
add
inc
add
adc
add
adc
add
add
sbb
add
mov
hlt
xlat
pop
push
add
lahf
rorl
or
adc
mov
mov
sub
psubb
ja
adc
cmp
xchg
testb
out
and
loopne
popf
add
jno
mov
cmp
cmc
add
mov
lcall
adc
lods
cs
and
cld
add
push
add
adc
dec
add
sbb
aas
adc
fisubl
add
not
add
push
mov
fwait
cld
repnz
sbb
or
outsl
pop
mov
repnz
lock
sar
xchg
jg
add
and
sub
fwait
test
mov
add
cmc
add
inc
add
aam
xchg
push
mov
sub
xchg
push
or
mov
jp
insl
in
push
push
xchg
ret
dec
std
lds
dec
add
icebp
mov
add
pushf
inc
add
sub
and
pop
js
add
out
in
cmp
addl
clc
add
xchg
dec
out
push
sub
sysret
into
push
add
xor
mov
or
pop
dec
test
sbb
add
pop
xchg
pop
inc
add
bound
ja
pop
mov
outsb
add
lds
add
xchg
sbbl
add
movsl
add
add
int
repnz
pop
cmp
cmp
mov
imul
cmp
pop
lahf
jae
add
outsl
mov
iret
les
sti
adc
adc
add
add
dec
loopne
fdivs
jae
xchg
sbb
repnz
mov
int
out
out
dec
add
add
mov
test
int
mov
mov
dec
push
mov
dec
or
add
add
cld
js
adc
div
fstl
in
in
pop
xchg
cli
xchg
add
push
xor
add
add
in
in
add
xchg
xor
aad
add
inc
pop
pop
loopne
add
test
imul
fstps
dec
add
push
mov
add
add
inc
add
iret
aad
mov
add
xlat
daa
mov
mov
adc
icebp
cltd
and
dec
add
or
mov
mov
aas
es
and
add
add
in
mov
dec
add
cmc
imul
mov
add
push
adc
loopne
test
stc
loop
gs
inc
add
addr16
mov
cmc
mov
test
scas
and
or
dec
add
leave
lods
add
sub
arpl
out
xchg
push
add
inc
add
adc
int3
lods
and
jmp
xchg
cli
js
cltd
dec
add
leave
pop
and
loop
mov
shl
and
add
add
jecxz
push
inc
mov
add
mov
fldl
call
add
or
jns
outsl
jmp
add
into
push
sti
fildl
mov
dec
add
mov
and
mov
addr16
lods
divl
add
xchg
lahf
pop
ja
mov
fisttps
add
or
aam
jo
mov
add
jmp
cmp
lea
fisubrs
in
dec
sbb
loope
adc
jmp
push
add
outsb
add
sbb
jmp
and
outsl
mov
mov
mov
add
and
dec
add
mov
jne
add
imul
push
mov
cmp
lahf
ret
dec
add
fsubrl
add
add
clc
sti
mov
movsb
nop
and
lret
mov
fidivrl
loop
and
xchg
fs
push
jns
pop
inc
jecxz
jne
xchg
fsubrl
xchg
inc
negb
sbb
add
fildll
negl
add
push
add
rorl
mov
push
sbb
push
sub
sub
nop
or
std
xorb
add
sub
push
test
andl
test
ds
mov
mov
xchg
les
dec
mov
mov
lods
or
xchg
lods
int
add
je
or
adc
or
jno
pop
mov
adc
and
stos
mov
pop
aas
dec
add
inc
add
xchg
fsubl
add
adc
inc
add
loopne
add
inc
add
jno
cmp
outsb
add
or
movsb
inc
jno
ds
and
lock
add
xchg
rclb
testl
out
lret
ss
shlb
xchg
hlt
fwait
sahf
jne
push
add
in
jbe
push
mov
xlat
jg
sub
inc
add
movsl
or
lcall
sbb
stos
inc
add
sub
push
inc
insb
add
lods
das
add
mov
fdiv
enter
arpl
sub
jp
arpl
imul
dec
mov
dec
add
fadd
jl
xchg
add
jns
sub
add
mov
push
in
jecxz
adc
add
adc
mov
lcall
lods
mov
bound
mov
and
repz
or
test
cmc
pop
sbb
mov
mov
lock
add
dec
in
cmp
add
jns
adc
add
xchg
scas
lret
fwait
dec
mov
fnclex
pop
push
add
test
scas
not
sbb
xor
iret
mov
dec
add
subl
mov
mov
jg
sbb
lock
xchg
xor
std
in
add
mov
dec
add
mov
add
push
in
sbb
sahf
mov
ds
push
pusha
add
adc
subl
and
xchg
pop
add
imul
mov
lret
bound
fisubrl
into
lea
push
ficoml
lret
pop
pop
das
sub
ret
mov
push
pusha
add
or
sub
lods
adc
loope
mov
ret
lock
or
add
mov
add
je
add
add
add
xchg
inc
add
and
popf
out
add
cwtl
add
mov
mov
add
in
add
mov
cmpsb
rcrb
mov
add
nop
imul
add
add
xor
test
mov
mov
adc
fstpt
outsl
sarb
mov
pop
push
add
inc
add
dec
addr16
pop
dec
add
fsubrs
add
fsubl
xor
mov
add
lahf
test
add
in
sub
jbe
sub
sbb
add
add
inc
add
add
je
push
and
xchg
mov
out
jge
repnz
test
les
sbb
mov
jl
clc
outsb
add
sub
iret
mov
addr16
and
xchg
dec
lock
daa
in
xchg
or
pop
mov
add
pusha
add
add
fstp
add
cmp
push
ja
and
or
in
sahf
test
dec
jg
mov
das
and
lods
lret
aad
add
cwtl
sub
add
pop
sub
into
pop
or
ss
pop
inc
jge
add
xchg
fstps
stos
xor
sarl
adc
xor
sbb
clc
mov
enter
js
rol
jmp
aad
out
push
scas
cmp
arpl
lds
clc
or
push
lret
test
adc
push
int
add
mov
loop
shlb
decl
xor
daa
lret
mov
movsb
in
push
inc
out
dec
add
pop
pop
int
push
out
ss
aaa
out
jg
in
add
dec
add
data16
lock
call
or
dec
add
add
pop
test
cmpsb
push
fdivs
sti
or
add
and
popf
mov
out
dec
add
jbe
fimull
add
test
jp
sbb
fiadds
arpl
les
lods
test
stc
mov
add
and
or
push
lret
xchg
out
xchg
ds
add
cmpsl
pop
bound
sbb
add
jle
dec
add
in
insb
add
xchg
ds
inc
sbb
pop
fistl
dec
add
xchg
outsb
add
add
jmp
or
and
mov
or
inc
add
fucomp
xchg
sub
cmp
xchg
mov
dec
add
sub
add
mov
add
fnsave
sub
iret
pop
dec
add
in
std
decb
dec
add
add
in
out
and
shlb
add
add
cmp
ss
push
aas
repz
or
jne
cmpsl
add
jecxz
add
sub
test
shrl
mov
adc
es
test
add
jmp
mov
loop
cld
sbb
sar
mov
inc
cmpsl
icebp
push
repz
mov
add
cltd
rcrb
xchg
xchg
add
jmp
cmp
pusha
add
add
lret
jp
adc
and
pop
iret
sub
adc
xchg
jnp
and
es
and
out
fs
sub
lahf
xchg
pop
jle
jb
jno
mov
pop
iret
sbb
hlt
sub
mov
mov
test
lods
mov
or
ret
idiv
insl
into
lds
push
daa
dec
add
push
je
add
dec
add
shll
mov
imul
imull
repnz
dec
pop
shl
out
js
cmp
ljmp
jns
nop
inc
test
add
daa
stos
in
cli
roll
xchg
fwait
dec
inc
add
jmp
add
mov
add
push
bound
push
jo
cmp
push
jmp
add
add
lock
in
mov
add
fwait
test
add
add
mov
or
mov
xchg
test
dec
add
mov
add
mov
rcll
bound
pop
mov
test
jle
mov
pushf
das
sub
and
imul
add
pusha
add
add
mov
jae
push
mov
out
cmp
pop
add
loope
aaa
cmp
or
cwtl
shlb
pop
mov
lret
cmp
or
outsb
add
mov
push
aas
jno
cmpb
mov
scas
pop
push
inc
mov
jae
out
mov
add
inc
add
pop
mov
mov
add
add
add
lds
add
xor
jmp
add
sbb
out
aam
add
jecxz
or
mov
pusha
add
divb
jbe
insb
add
add
push
imul
mov
add
gs
push
outsl
fisubl
shll
pop
xchg
ja
int3
loope
add
add
scas
sahf
mov
add
add
aaa
enter
push
add
out
pusha
add
mov
add
mull
je
pop
push
outsb
add
data16
add
andl
xlat
add
fsubs
pusha
add
add
lods
inc
add
dec
imul
add
std
lret
stos
in
inc
add
mov
add
xorb
add
mov
das
lds
mov
xchg
push
adc
pop
pop
cwtl
xor
adc
lret
cmp
fnstcw
mov
mov
inc
add
lds
out
imul
lea
xchg
mov
mov
xor
xchg
fldcw
leave
imul
aas
dec
add
adc
xchg
add
pop
xchg
sub
jae
xor
dec
out
or
ja
xchg
sub
stos
int
cltd
js
inc
add
cmp
in
fcmovnu
ljmp
mov
test
outsl
add
neg
xor
dec
je
test
and
pop
into
loope
push
mov
arpl
jge
rolb
add
cmp
stc
movsl
jnp
je
fistl
scas
shl
scas
lret
mov
loop
xlat
pushf
ret
add
push
adc
push
adc
in
xchg
mov
mov
add
loopne
add
jno
js
add
mov
out
or
push
stc
lret
jl
fstpl
insl
sub
loop
or
enter
test
bound
sub
and
pop
xor
add
movsb
sub
lret
nop
add
shlb
inc
add
xchg
sbb
mov
jecxz
fidivl
adc
push
outsl
repz
inc
add
ud1
pop
call
shrl
and
data16
jbe
fidivl
add
popa
jns
imul
pop
outsb
add
inc
pop
mov
jge
ficomps
jl
leave
cmp
cmp
sbb
add
imul
xchg
pop
orb
fimull
iret
jne
push
mov
and
stc
in
add
out
cmp
es
sbb
insb
add
movb
xor
add
sub
out
inc
popf
js
xchg
sub
or
cmp
push
dec
add
add
pop
je
add
pop
or
add
mov
pushf
lret
add
das
push
mov
ss
into
test
xchg
dec
add
push
mov
add
insl
pusha
add
sub
cmpsb
out
iret
pop
add
imul
lret
adc
add
lods
cmp
inc
add
sbb
or
dec
add
aad
push
push
add
and
mov
mov
dec
add
add
aam
gs
movsl
ret
ja
arpl
mov
add
sarb
fildll
add
or
testl
mov
sub
out
or
scas
stos
lods
dec
adc
add
cmp
fucom
push
mov
add
mov
sub
in
dec
cmpsl
sbb
mov
pop
sub
sbb
mov
loope
ljmp
pop
ss
sbb
mov
or
fwait
rcll
push
adc
insb
add
add
mov
ret
add
cmp
hlt
in
pop
and
iret
inc
enter
xor
inc
add
icebp
ja
add
cld
mov
gs
call
xor
add
add
testb
test
idivl
pop
jecxz
add
outsb
add
nop
cli
pop
lods
cmp
sti
std
add
push
mov
popf
insb
add
xchg
outsl
add
add
shld
sub
mov
nop
ljmp
aad
mov
xchg
aaa
test
pop
shll
leave
push
add
dec
add
jp
add
jae
sti
in
lods
jecxz
add
and
mov
cwtl
or
push
add
int
pop
xor
fwait
movsb
add
not
out
mov
ds
repz
aaa
mov
or
add
or
scas
test
sarl
mov
xor
std
mov
iret
das
lea
inc
xor
lret
movsb
pop
or
icebp
imul
dec
cmpsb
gs
add
xlat
or
mov
mov
fwait
outsl
push
orl
sub
stc
clc
popa
jmp
xor
outsl
sbb
add
mov
xchg
inc
orl
cld
pop
outsb
add
aad
jns
mov
int
xor
pop
sbb
jle
push
add
mov
test
out
std
add
not
and
sbb
mov
je
lret
sbb
push
pop
mov
mov
add
sub
sarl
jmp
cld
mov
or
out
push
popf
dec
pcmpeqw
bound
insb
add
lods
fwait
add
loopne
paddd
add
mov
jne
stos
les
push
add
lods
pop
sub
sbb
out
pop
pop
add
ret
xchg
idivl
mov
inc
cmp
and
add
add
out
jnp
sbb
clc
xchg
imul
movsl
rcr
cmp
gs
lahf
sti
pop
daa
ljmp
or
adc
outsl
adc
push
fisttpll
push
mov
add
fwait
jle
cmpl
fdivrp
inc
xchg
pop
out
pop
fs
and
xor
loopne
jp,pt
jmp
dec
add
in
xchg
xchg
ljmp
push
mov
shl
push
outsb
add
sbb
xor
jnp
mov
test
rclb
ja
leave
jle
dec
xchg
dec
add
das
inc
mov
pop
adc
adc
push
arpl
js
add
mov
xchg
mov
test
pop
pop
xchg
xlat
ljmp
shlb
mov
mov
jbe
or
sub
dec
pop
ja
add
dec
add
mov
fwait
dec
add
outsl
xor
push
add
adc
popf
aas
add
sub
cld
lods
mov
loope
xchg
sub
push
xor
pop
nop
jl
xor
jo
cmp
addl
push
add
add
add
inc
add
out
cld
mov
enter
mov
sbb
adc
mov
xchg
sbb
test
add
shl
dec
add
or
test
dec
add
cmpsb
enter
sub
out
add
in
and
stos
cmp
dec
mov
inc
add
fnstenv
xchg
lods
scas
mov
adc
push
add
jmp
jg
add
and
xchg
mov
mov
add
inc
add
sbb
fimuls
dec
add
fwait
mulb
add
add
call
data16
sbb
add
jbe
mov
add
xor
cmp
ret
iret
lret
adc
push
test
jns
add
jnp
jnp
daa
xor
data16
call
rorl
add
nop
jno
scas
hlt
mov
mov
add
ds
stc
ret
and
adc
jp
add
inc
cmc
in
hlt
xor
or
mov
jmp
andb
shlb
pop
fs
xchg
fisubrs
cvtpi2ps
stos
out
push
daa
sub
push
xlat
sub
aam
pop
adc
xor
dec
add
dec
add
cmp
fwait
lea
pushf
pop
mov
sbb
imul
mov
test
mov
add
outsl
mov
add
add
call
pop
jbe
xor
stc
notb
repnz
gs
add
sbbl
cmp
cmpsl
cli
mov
sbb
add
push
cld
mov
dec
gs
or
push
add
mov
fldcw
add
or
repz
repnz
mov
nop
mov
lret
jnp
in
xlat
mov
add
mov
lahf
add
dec
test
push
xchg
mov
inc
pushf
mov
add
lcall
xor
cltd
aad
add
lret
add
cltd
roll
ljmp
dec
sbb
ficomps
std
jnp
adc
fidivl
mov
aaa
push
xchg
fdivrp
push
jge
push
xchg
pusha
add
adc
or
fdivrl
or
mov
mov
fnstcw
and
aas
shrb
jmp
pop
add
xchg
test
adc
push
mov
fadds
and
push
xchg
mov
adc
add
leave
pop
and
mov
sub
sub
cld
minps
push
bnd
cwtl
push
add
bt
pop
sbb
aaa
fdivl
je
test
jge
add
cltd
or
xor
add
mov
xor
subl
aam
mov
out
ds
or
in
mov
fisubs
xlat
cmpsl
imul
xor
loop
xchg
ficoml
inc
lret
inc
add
lods
fldl
add
and
pop
xchg
xchg
in
push
add
ret
and
fst
pushf
bound
jecxz
mov
inc
add
or
dec
adc
imul
data16
or
test
je
add
or
mov
dec
add
push
bound
jge
mov
shl
loop
jnp
mov
push
and
jbe
cmp
add
sub
inc
add
or
dec
add
pusha
add
mov
fldcw
add
sbb
mov
test
add
add
add
pop
popf
push
add
jno
add
inc
add
shlb
inc
add
jnp
xchg
add
xchg
mov
cwtl
mov
data16
cmp
imul
xor
xchg
mov
dec
add
ror
jle
add
or
pop
mov
or
nop
inc
aad
add
push
push
dec
lahf
clc
repz
xchg
addr16
aaa
mov
bound
dec
cli
repnz
es
adc
and
mov
fidivrl
movsl
lds
add
mov
pusha
add
daa
sbb
enter
outsb
add
or
mov
jne
insb
add
push
mov
cli
mov
and
sti
xor
xchg
pusha
add
push
push
enter
sub
xchg
mov
addr16
adc
rolb
sarl
adc
or
inc
outsl
sahf
fisubs
pop
lret
repz
pop
mov
add
int
push
test
clc
lret
lahf
popf
fbstp
insl
xchg
mov
dec
cltd
gs
and
push
in
fistpl
pop
push
jmp
add
sbb
xor
lock
mov
pop
cmp
lret
xchg
cmp
jbe
out
pusha
add
add
jle
in
dec
lahf
loop
sbb
jmp
cltd
into
push
jecxz
mov
add
add
rorl
scas
ss
leave
movsb
mov
add
outsb
add
cmp
fnstenv
add
fnstsw
loop
add
mov
mov
mov
or
int3
icebp
and
adc
pop
sub
popf
test
add
mov
adc
xchg
lahf
movsl
sbb
cmp
jmp
inc
add
pop
lods
gs
mov
push
mov
sbb
jmp
ret
cmpl
and
add
add
dec
sub
and
and
fwait
jmp
int3
bound
cli
mov
dec
mov
das
pop
sbb
or
call
xor
dec
xor
outsb
add
inc
sbb
mov
pop
cmp
jbe
add
xchg
fcoms
push
cmp
nop
mov
add
cltd
dec
xchg
jb
add
add
outsl
lea
aam
cmp
jle
arpl
stos
and
in
arpl
cli
pop
dec
sti
lock
dec
pop
mov
idiv
lcall
cmp
inc
add
outsb
add
das
cmp
push
jo
test
ret
push
add
cmp
push
add
push
imul
adc
jle
leave
mov
cmp
mov
sbb
mov
repnz
and
jecxz
inc
add
mov
push
add
out
mov
mov
inc
add
add
aam
inc
lcall
imul
cltd
adcb
jg
adc
jo
lea
mov
add
and
lds
pop
add
cwtl
mov
xchg
dec
scas
je
sbb
mov
add
inc
scas
xchg
xor
cld
addb
movsb
jae
in
cmp
cmp
push
call
or
mov
mov
inc
add
ss
sub
jmp
or
xor
movsb
push
das
mov
dec
add
sahf
test
add
mov
testb
pop
add
sub
outsb
add
fcom
mov
pop
dec
cmp
cmp
int3
cld
popl
and
mov
xchg
xor
inc
add
iret
cmp
push
pop
cltd
enter
push
js
shrd
xchg
stc
push
shr
xchg
fsubrs
jo
add
add
lds
push
add
jbe
or
scas
nop
shrb
xor
out
cmc
or
leave
shrb
add
js
add
lods
dec
add
ljmp
mov
lds
add
mov
aas
aad
adc
dec
add
sbb
cmc
sub
xchg
int
sahf
xlat
adc
add
jno
add
push
btc
pop
insl
inc
stos
add
and
les
repz
xchg
aaa
mov
mov
pop
insb
add
popa
mov
clc
ret
mov
cmp
add
je
mov
push
cmp
add
xchg
and
xchg
add
adc
mov
fildl
call
clc
xchg
cmp
call
fwait
xchg
push
dec
add
cltd
pop
adc
stos
nop
inc
add
les
ja
xor
add
mov
fs
ret
pop
lds
mov
minps
sarl
add
clc
in
xchg
mov
and
xchg
jecxz
pusha
add
int
popf
sahf
push
clc
cmpb
pusha
add
add
or
push
sarb
cmp
add
test
movsl
cwtl
call
ret
push
inc
add
add
into
dec
add
fcom
in
xor
mov
stc
jo
imul
mov
mov
mov
sbb
pusha
add
lock
add
pop
outsb
add
das
add
add
data16
add
pop
dec
add
pushf
jnp
push
lret
xor
add
add
mov
scas
jl
das
dec
push
add
pop
mov
or
es
dec
add
ror
cli
addr16
into
mov
jbe
leave
pop
cmp
nop
je
or
pop
xchg
jb
ret
xor
notl
jb
popa
add
or
ret
cwtl
cltd
push
pusha
add
and
mov
into
dec
add
add
add
jle
add
adcb
push
clc
mov
adc
add
in
add
adc
add
pusha
add
fs
or
insb
add
add
cmp
shll
sbbl
push
stos
lock
mov
dec
xor
mov
dec
jecxz
leave
pop
pop
mov
jg
inc
add
push
out
lods
outsl
pop
shl
add
fiaddl
add
push
inc
sbb
add
cmp
mov
and
pop
mov
mov
adc
and
push
clc
pushf
dec
add
xchg
dec
add
andl
loop
int
cmp
mov
inc
add
stos
cwtl
imul
movsl
or
add
outsb
add
lods
rcrb
movsl
nop
mov
out
ja,pt
bound
push
js
cli
jb
add
add
or
out
sub
nop
scas
insb
add
dec
mov
or
hlt
xchg
push
jb
cmpsb
pop
aam
and
in
xor
clc
pop
cmp
mov
mov
add
es
stc
pop
repnz
jmp
lods
iret
bnd
imul
push
cli
jno
int
mov
and
xchg
mov
add
sub
dec
add
daa
pop
mov
inc
add
iret
sbb
iret
scas
xorb
cmp
rcll
inc
add
adc
add
fdivrl
test
data16
jg
add
sub
lods
dec
add
enter
insb
add
add
pop
inc
xor
mov
add
pop
addr16
add
lods
mov
dec
add
cltd
cmpsl
jp
add
cld
mov
pushf
mov
subb
cmp
push
inc
adc
imulb
add
add
jbe
subl
jbe
add
add
inc
inc
add
pushf
add
js
mov
add
add
add
insl
xor
sbb
mov
add
push
add
mov
cmp
push
pusha
add
or
cwtl
pop
xor
xchg
icebp
rorl
cmp
aaa
xlat
negl
mov
int3
mov
dec
into
shll
add
mov
add
push
add
mov
mov
add
adc
xchg
js
fstp
mov
add
outsb
add
add
sub
cli
and
jno
add
jmp
icebp
sub
mov
in
mov
fistpll
add
sar
aaa
imul
jno
mov
pushf
fsubrs
mov
or
mov
lea
add
xchg
pusha
add
sbb
add
in
out
sbb
aam
cmp
xchg
mov
sbb
pop
test
mov
mov
pop
cmpsb
scas
cwtl
push
or
push
jb
cwtl
and
andb
sbb
sub
mov
push
add
add
insb
add
add
adc
xor
mov
ljmp
not
mov
jbe
dec
mov
pop
cmpsb
xchg
jno
rclb
aam
pusha
add
xor
mov
xlat
mov
int3
xchg
testb
outsb
add
add
dec
add
out
mov
int3
nop
adc
xor
add
dec
add
fstpl
arpl
cmp
add
in
or
jne
add
add
xor
in
outsl
mov
repnz
add
sub
push
movsl
mov
nop
outsl
sub
stos
add
adc
mov
addr16
mov
add
xorl
jb
cmp
popf
clc
loop
cli
cwtl
lock
add
add
ds
cli
ljmp
jg
add
loop
or
sbb
shlb
mov
fwait
jmp
jge
pop
sbb
mov
dec
add
inc
cmp
and
push
xor
mov
mov
loope
popa
xchg
inc
add
add
dec
add
and
add
cmp
arpl
add
push
push
mov
loop
lea
add
dec
mulb
mov
std
jns
out
imul
call
addr16
fistps
out
outsl
xlat
and
ret
out
add
test
inc
add
dec
mov
add
cld
xchg
mov
in
adc
jecxz
jp
add
cmp
insb
add
dec
fildll
pushf
mov
or
loope
xor
mov
mov
mov
xor
push
aam
cmpsl
popl
add
xor
add
jae
add
cltd
mov
notb
and
cmp
neg
cli
inc
add
in
jne
sbb
and
add
dec
add
ljmp
inc
xchg
sub
or
and
add
loope
inc
fcmovnbe
ds
enter
add
inc
xor
push
and
jb
loopne
dec
add
mov
rcll
daa
insb
add
bound
and
xor
mov
rclb
inc
sbb
pop
lcall
int3
lock
nop
sbb
ljmp
dec
add
clc
popa
out
mov
add
xlat
pushf
or
push
popa
out
adc
lock
xchg
testl
add
mov
dec
add
repnz
clc
xor
jbe
dec
add
jp
cmpsl
iret
push
arpl
js
iret
push
cmp
xchg
or
test
add
lds
sub
hlt
insl
add
icebp
in
adc
addr16
insl
cli
sbb
cli
repz
int3
popf
jne
xchg
loope
icebp
dec
push
in
loope
xchg
push
jmp
mov
sub
dec
add
gs
sbb
xchg
mov
mov
cmp
mov
xor
fsub
jp
jne
add
pop
stos
sub
loopne
add
jnp
test
push
add
add
add
in
push
xchg
add
add
add
xor
push
int3
sarl
fdivl
test
jb
popa
divb
ret
neg
or
rcrb
in
mov
jp
aam
push
lea
jns
push
repnz
push
fisubrl
clc
push
inc
push
mov
iret
dec
pop
shr
inc
fadd
mov
inc
cmpsb
inc
add
and
sub
lcall
inc
sahf
fimull
add
add
xchg
lods
xchg
dec
xchg
mov
add
inc
add
dec
xchg
push
or
or
inc
incl
mov
add
outsb
add
push
adc
add
add
add
pushf
pop
clc
pop
dec
add
xchg
or
adc
in
add
sub
push
les
stos
mov
stos
in
mov
mov
xor
mov
repnz
je
aad
inc
add
sbb
je
out
mov
in
sub
pop
mov
pop
push
or
jge
and
loop
mov
xorb
cmpsb
cmp
add
add
xchg
sbb
stc
ficoms
mov
jl
pop
jle
mov
dec
lods
mov
and
lret
push
add
cmpsb
in
shlb
cmpsb
jno
add
jg
inc
addr16
imul
icebp
push
add
scas
jmp
add
aas
add
sub
add
or
mov
push
fisttps
add
int
imul
in
cmp
adc
add
ljmp
bound
xlat
fildl
shrl
add
xchg
dec
add
mov
add
cli
xor
xor
cmpsl
mov
adc
xchg
cld
inc
add
dec
add
jno
and
or
xchg
mov
sbb
data16
jg
xchg
xlat
test
jmp
loope
int
inc
sbb
push
push
add
add
mov
cli
dec
add
jnp
sub
aam
pop
shll
punpcklbw
mov
cmp
lret
ljmp
nop
cmp
add
add
pop
pop
fdivrp
shlb
mov
jle
add
and
fbstp
in
mov
add
jl
add
sub
xchg
adc
clc
mov
lods
mov
out
cmc
jnp
jbe
adc
add
icebp
adcb
sbb
dec
add
and
ljmp
cmp
cmp
lea
jo
iret
jae
fbstp
in
and
inc
in
daa
push
jle
mov
jmp
add
in
xchg
rorl
cmp
aas
mov
add
mov
mov
or
mov
nop
adc
inc
and
mov
sub
xor
call
dec
or
pusha
add
iret
mov
push
or
cmp
mov
arpl
add
fwait
decl
cld
mov
outsb
add
imull
loopne
jmp
add
xchg
gs
xchg
movsl
push
mov
add
fbstp
push
xor
cmp
xchg
push
cmpsb
cli
daa
es
enter
add
aam
lret
inc
ds
or
and
sub
ljmp
add
fxch
cmc
xchg
inc
add
push
mov
add
cli
lahf
mov
cmpsl
cwtl
adc
mov
jae
cli
or
mov
mov
sub
add
das
jo
dec
add
andl
into
xchg
das
lahf
dec
add
push
add
jbe
repz
push
cmpsl
out
hlt
lds
mov
cmovp
bound
lahf
push
add
adc
stc
xchg
les
loope
add
add
and
inc
loope
rcrb
cmp
add
les
push
xor
dec
add
mov
je
xchg
ljmp
cmp
movsl
xor
insb
add
inc
add
js
stc
clc
test
pop
xchg
adc
add
push
loop
fwait
jmp
add
xchg
add
addr16
pushf
xchg
je
loopne
notl
sub
jle
out
cmp
pop
or
or
or
nop
inc
add
out
mov
sub
dec
and
pop
xor
leave
arpl
add
add
mov
bound
nop
in
clc
ljmp
jmp
and
mov
test
add
notb
push
icebp
xchg
lret
shlb
test
insb
add
inc
add
incb
add
or
pop
xchg
or
fdivrs
inc
mov
mov
push
lahf
adc
pop
xchg
lret
das
mov
inc
jae
add
xchg
xchg
insl
mov
outsl
mov
insl
cmp
add
pop
aam
in
sbb
mov
out
xor
jl
cmp
push
add
xchg
ja
clc
aas
mov
and
mov
repnz
roll
sub
divb
pop
in
push
les
sbb
add
addr16
pop
into
lea
in
sub
test
pop
inc
add
sbb
int
add
add
rcrl
xchg
rcll
loope
mov
add
sbb
das
stos
subl
xlat
jbe
jae
add
xor
dec
add
js
or
mov
pop
add
add
jle
pop
jbe
add
jecxz
js
inc
inc
movsb
fbstp
dec
add
decb
repz
cli
call
lock
or
xchg
mov
fldcw
add
push
add
push
pop
fnsave
sbb
add
das
and
sbb
push
pop
divl
dec
rep
and
fdiv
inc
lds
mov
cmp
test
test
fwait
sub
sub
scas
imulb
jns
cmpsb
xchg
sub
mov
mov
add
or
add
icebp
lret
arpl
imul
add
push
add
and
int3
lcall
add
push
add
ja
arpl
pop
add
faddl
or
insl
lahf
data16
je
ljmp
push
add
clc
or
add
mov
test
pusha
add
popa
and
sbb
bound
xor
add
push
sbb
es
sub
nop
add
mov
inc
add
mov
jnp
mov
imul
mov
push
addr16
push
add
jb
aaa
mov
add
add
lods
fstl
cmp
test
push
insl
push
popa
sub
movsb
push
je
cmp
add
test
push
adc
jns
les
enter
jp
mov
shlb
add
inc
sarl
add
push
in
add
outsb
add
lret
into
cld
call
shll
sahf
rcll
or
xchg
pop
xor
arpl
cmp
mov
sbb
inc
fwait
movsb
sbb
bound
lret
push
xchg
xchg
mov
out
loope
add
cmp
enter
fdivl
outsb
add
aad
inc
loope
lret
add
sbb
cwtl
pop
int
pop
mov
add
xchg
addl
add
cmc
xchg
shll
add
outsl
mov
test
add
mov
shl
enter
xchg
add
test
aam
subl
add
jge
addr16
xchg
imul
add
in
shrb
imul
negb
std
sbb
push
push
sub
fsubrs
add
sbb
push
add
and
add
hlt
lods
xorl
mov
or
in
fsubrl
add
cmp
xchg
mov
fidivl
stos
scas
xchg
inc
add
ss
movsb
nop
fdivrs
ret
inc
add
add
mov
add
test
lcall
dec
push
add
xor
pop
sbb
pusha
add
push
cld
or
imul
xchg
lods
adc
dec
add
pop
cmp
xchg
sub
xor
movsl
out
outsl
test
pop
aam
jbe
add
and
lds
or
fstps
xor
mov
cmpsl
xlat
pop
inc
out
xchg
sub
ret
pop
lahf
leave
std
jg
xchg
pop
lret
adc
jns
sub
adc
stc
mov
aad
insl
into
in
int
mov
shlb
shl
mov
loope
xor
jecxz
or
hlt
mov
cmp
lods
jecxz
loope
int3
cmp
xor
jl
add
add
popa
iret
stc
cmp
inc
xor
jp
aas
inc
add
in
add
insb
add
jp
add
jne
push
insb
add
fcoms
andl
imul
ljmp
mov
xor
push
pop
lods
push
add
xchg
iret
cmpsb
pop
iret
mov
mov
int
ror
add
push
fs
cmp
jns
out
pop
add
mov
push
stos
nop
jns
sahf
cmc
push
dec
add
xor
add
mov
add
xor
out
push
cmp
cwtl
sub
inc
add
lcall
bound
lea
loope
gs
cld
push
or
xor
add
jno
lret
int3
stos
mov
add
or
test
mov
cmp
pop
adc
adc
add
insb
add
jno
outsl
adc
mov
pop
push
add
lcall
xchg
add
inc
add
push
sub
mov
jecxz
push
xor
or
cltd
jnp,pt
iret
ja
dec
xchg
pop
and
add
dec
pusha
add
clc
push
add
adc
inc
int
add
cmp
cwtl
dec
test
dec
inc
add
in
outsb
add
sbb
outsl
stos
mov
mov
push
cmp
inc
add
pop
cwtl
mov
mov
add
or
testl
lcall
mov
sbb
pop
ja
inc
adc
add
add
ret
add
add
stos
adc
add
and
push
mov
frstor
add
mov
in
movsl
add
add
pop
ret
or
mov
mov
add
adc
data16
in
lods
outsl
cmp
dec
add
sbb
pop
fldl
add
push
mov
clc
push
push
aad
dec
pop
jo
mov
loop
sbb
lods
lret
sbb
add
cmp
movsl
cmc
mov
nop
or
pushf
lea
repnz
push
adc
adc
pushf
pop
jp
icebp
je
mov
fcmovnb
inc
add
jnp
jbe
inc
rclb
fildl
mov
xchg
aad
cli
jecxz
sbb
pusha
add
stos
aaa
lret
fcmovne
shll
ss
jb
or
add
hlt
clc
push
cwtl
push
add
sahf
mov
add
pop
xchg
push
or
cwtl
addr16
iret
or
nop
cwtl
cmp
and
stos
das
inc
add
les
andb
xor
mov
nop
cli
and
in
lods
std
std
repz
enter
add
add
xchg
nop
mov
mov
jae
inc
add
inc
add
xchg
mov
jne
sbb
mov
jle
bound
mov
shll
mov
int3
fstpl
jle
loope
mov
mov
push
lods
push
sbb
into
pop
fwait
lea
sbb
popa
jp
or
lods
fisubs
cmp
push
daa
movsb
cmc
sbb
aad
pop
adc
or
or
leave
add
mov
stos
out
fcmovnu
and
lea
dec
into
mov
xorb
lods
inc
add
adc
add
mov
or
stc
and
mull
sub
jns
add
xchg
int
pop
shl
xchg
sub
push
and
mov
testb
lods
mov
sti
cwtl
adc
call
push
aad
mov
mull
xchg
sar
mov
in
xor
add
inc
fidivrl
clc
leave
stos
je
xor
xlat
pop
fs
lods
shrb
mov
jge
lahf
dec
cmp
add
into
jb
mov
and
sar
insl
je
sub
and
xchg
inc
add
mov
gs
and
pushf
push
cmp
repnz
pop
mov
test
leave
icebp
scas
or
in
pop
mov
loope
and
out
int
dec
inc
cmpsl
push
psraw
or
add
ss
test
fisubl
add
movsl
subb
andl
add
shrl
rorl
add
jae
adc
add
mov
into
shll
pop
push
add
mov
xchg
push
sub
ret
and
mov
out
or
push
hlt
push
jns
adc
sub
add
push
xor
add
add
aad
sub
rorl
dec
aad
sti
inc
add
add
push
jne
icebp
hlt
sbb
add
ja
add
and
out
dec
cmp
fsubs
add
xor
pop
xlat
mov
jb
cmp
sarb
fisubrs
jmp
jecxz
mov
jae
push
or
xor
cmc
jmp
dec
add
outsl
ret
incb
mov
add
add
add
jae
stos
dec
dec
std
out
adc
xor
mov
into
push
out
int
cwtl
stos
dec
sarl
into
stos
cmp
mov
frstor
adc
les
fsubr
add
fisubl
ss
jno
mov
adc
shl
and
into
inc
mov
sbb
mov
sub
in
sub
xorb
lcall
pusha
add
xchg
xchg
push
fwait
icebp
sub
mull
mov
lahf
addr16
mov
jle
mov
int
mov
adc
movsb
jno
jge
ret
dec
pop
inc
add
push
add
jge
pop
cmp
int3
fidivrs
push
add
ret
ret
repz
sub
test
cmp
scas
jecxz
mov
repz
xchg
add
dec
push
add
add
mov
sub
add
decl
add
popa
mov
push
add
outsl
gs
add
iret
daa
in
ss
divl
mov
sahf
stos
les
add
pop
jo
negb
movsl
pusha
add
sbb
icebp
xor
mov
dec
add
dec
push
add
pop
sub
test
jnp
add
sub
insb
add
loopne
sahf
movsl
jo
jne
lods
outsl
cmpsb
xchg
fimuls
psubd
nop
iret
out
push
push
and
cmpsb
pop
arpl
bound
cmp
add
push
movsb
adc
in
sar
dec
add
and
mov
gs
ret
stc
add
mov
cwtl
pushf
inc
add
pop
add
shrl
xlat
pop
xor
add
and
insb
add
xchg
bound
inc
add
and
movsl
push
add
sub
call
sub
sbb
add
fcoms
ja
daa
icebp
mov
jp
add
stos
lret
cmp
pop
out
jle
mov
pop
hlt
push
push
scas
outsb
add
inc
add
pop
cltd
sub
fisubs
inc
add
mov
adc
xchg
imul
mov
and
jmp
adc
cmpsl
mov
add
xchg
daa
ljmp
add
add
ss
mov
aas
push
push
fwait
push
mov
jnp
xlat
in
push
add
mov
add
fdivrl
add
imul
out
sub
shll
daa
aam
arpl
dec
add
inc
add
xor
add
add
call
add
rcrb
add
adc
fistpl
ret
and
mov
or
adc
lods
jecxz
test
in
mov
inc
add
repz
adc
adc
add
imul
or
sbb
je
pop
xor
xchg
cmp
lds
ja
jmp
xor
dec
imul
xor
add
xchg
hlt
push
notl
pop
mov
bound
and
mov
inc
add
adc
pop
sbb
stos
mov
push
repnz
ret
cltd
sub
insb
add
add
pusha
add
aam
mov
std
mov
test
xlat
loope
jno
add
sbb
mov
mov
sahf
fbstp
mov
pusha
add
add
mov
popa
lds
inc
add
enter
loope
add
xor
ret
pop
jp
fistps
jns
xchg
mov
loopne
push
jns
pop
inc
mov
test
mov
outsb
add
xor
inc
add
aad
mov
sbb
add
pop
mov
mov
xlat
or
hlt
mov
xchg
out
or
mov
pop
ja
pop
mov
sbb
or
andl
aad
xchg
xlat
dec
adc
lods
mov
daa
sbbl
add
mov
push
add
mov
aaa
xchg
xchg
sub
sub
xchg
push
add
lahf
leave
sbb
repnz
xchg
test
add
dec
add
roll
aad
or
jp
push
idivl
lret
mov
pop
lods
mov
das
imul
add
int3
and
std
fs
lret
loope
call
adc
lret
sbb
lock
add
add
pop
fsubrl
pop
or
movsb
in
dec
add
addr16
cmp
ljmp
add
pop
in
jecxz
add
mov
add
frstor
pop
and
mov
add
ret
addl
lahf
mov
pop
sub
cmp
pop
test
jl
add
and
xor
sbb
cmc
push
cmp
aas
clc
aaa
adc
ret
rclb
out
jp
test
into
in
jmp
out
popf
lahf
jg
mov
loope
fimuls
push
adc
mov
jne
dec
add
lret
and
add
mov
dec
shll
sbb
xchg
pop
int3
mov
lods
and
push
ds
lahf
in
std
fwait
cmc
imul
out
stc
mov
mov
pop
pop
jb
add
dec
add
jae
stc
pushf
int3
lahf
incl
push
inc
add
push
xor
add
imul
mov
cmpl
jl
adc
cmp
jp
pop
adc
inc
add
pop
sbb
mov
add
xchg
aad
aas
aas
fisttpll
add
xchg
mov
cli
lret
push
push
add
sbb
test
into
jo
cmp
mov
xor
icebp
and
mov
lock
mov
jmp
add
add
call
into
icebp
in
push
jp
test
ret
jno
inc
add
repz
fisubrs
push
add
jecxz
jae
jp
and
movsb
mov
xor
lea
insl
push
rcr
das
xor
xchg
sbb
cli
mov
add
outsb
add
cmpb
inc
sbb
dec
es
out
insb
add
hlt
aas
ret
and
lret
cmpsl
out
push
fnsave
stc
cltd
idivl
xor
add
jb
fndisi(8087
cmp
in
mov
or
ss
add
jb
cwtl
xchg
shlb
pop
std
imul
cmp
add
or
in
cli
push
daa
sbb
cltd
std
mov
and
mov
mov
dec
arpl
add
add
push
or
and
mov
xor
call
inc
add
movsb
xchg
bound
fwait
mov
loop
inc
iret
sub
push
mov
add
imul
mov
imulb
cmp
lret
push
add
loop
xchg
mov
test
mov
add
xchg
pop
fcmovnb
xchg
or
lock
pushf
sbb
and
push
pop
fbstp
sub
fmull
dec
add
mov
aam
add
mov
ss
inc
add
mov
pop
lock
cli
push
fidivs
movsb
loope
inc
add
out
adc
loop
shrd
fcoml
cmp
add
inc
test
div
shll
lods
bound
lahf
frstor
sub
dec
inc
add
test
inc
stos
or
test
aam
add
icebp
icebp
mov
pop
stc
movsb
ret
push
out
sbb
jecxz
xor
cmp
je
aas
mov
xchg
xor
inc
add
inc
mov
mov
mov
lea
push
lcall
add
fsubrl
lret
stc
xor
add
add
add
push
add
shl
jge
clc
jo
cmp
adc
mov
test
outsb
add
fistpl
stos
push
cmp
xor
add
mov
add
or
popa
cmpsl
test
rcr
jnp
pop
int3
sub
cmpsl
sub
add
dec
lcall
repz
push
fsubs
jg
test
notb
roll
add
or
mov
jge
call
aad
or
jae
jo
mov
mov
out
pop
jmp
add
fldcw
xor
jg
jecxz
adc
cwtl
popa
jg
pop
jnp
nop
mov
arpl
lcall
mov
pushf
test
push
mov
fistps
sbb
dec
add
adc
push
or
pop
jecxz
xchg
cmp
push
mov
cmc
ja
dec
lds
xchg
adc
add
add
repz
xor
dec
add
add
and
mov
cmp
push
add
rorl
mov
jb
ret
sti
fimuls
xchg
pop
mov
push
jp
inc
add
push
clc
daa
dec
roll
imul
dec
sbb
xor
xchg
lea
add
mov
xchg
ret
orl
add
pop
sbb
ret
ret
or
mov
dec
jecxz
rorb
jne
in
jo
jb
xlat
inc
or
addr16
pop
movsb
cwtl
stos
call
scas
out
cmpsb
push
mov
add
jmp
iret
jg
add
mov
add
cmc
push
jnp
jne
xchg
mov
add
push
pop
and
jle
les
add
cld
pop
dec
add
mov
insl
inc
add
jns
add
sbb
aam
push
add
mov
push
cmp
add
mov
pop
xor
add
add
test
fsubl
ja
adc
add
inc
insb
add
iret
out
hlt
nop
lods
int3
inc
add
dec
mov
mov
jae
push
ret
adc
sti
inc
jbe
adc
and
jno
test
push
pop
aam
cmp
push
jne
add
fbld
int3
in
lods
inc
add
dec
add
or
int3
add
push
int3
xchg
pop
mov
sub
add
hlt
je
daa
fldcw
enter
inc
add
add
xchg
lret
cmp
jo
and
or
and
sahf
xor
add
jbe
sbbl
leave
aam
test
add
jns
add
jnp
daa
scas
jnp
jnp
adc
out
je
and
bound
into
cmpsb
sub
mov
add
add
cli
divl
mov
cmp
leave
call
sub
mov
and
sbb
sub
adc
cld
mov
addb
xchg
cmpb
adc
mov
add
bound
in
xchg
jns
hlt
cmpsl
lret
jo
rorl
add
dec
fmul
popa
imul
sahf
xchg
mov
jge
jl
orl
cmp
add
test
mov
fbstp
add
sti
ds
adc
lea
push
xchg
dec
xchg
cmp
mov
fcoml
lock
insl
icebp
mov
ljmp
jge
add
adc
add
xor
jmp
std
pop
jo
mov
imul
cmp
mov
adc
xchg
mov
add
test
stc
pop
sub
sti
inc
fldl
mov
add
and
fnstcw
pop
cmp
mov
adc
sti
pop
xor
add
jb
das
dec
add
rorb
insb
add
dec
out
mov
mov
int3
call
xchg
sbb
sub
jp
pop
add
push
lret
push
daa
sub
and
push
or
mov
mov
inc
add
jge
mov
jl
fsubr
jbe
xor
fdivs
cmpsl
into
mov
adc
or
dec
gs
and
mov
cltd
adc
add
div
lcall
add
jne
repz
daa
push
pop
icebp
xchg
inc
inc
sahf
cmp
sbb
adc
sub
cld
and
ds
and
add
or
aam
xchg
ret
lret
mov
adc
adc
jae
hlt
ret
lock
jnp
rcrl
ret
adc
add
loopne
rcrb
insl
jge
mov
addr16
into
int3
lahf
movb
clc
cmpsl
idivb
sub
add
mov
aas
pop
repz
and
aad
add
out
pop
or
dec
or
dec
xlat
mov
scas
cmpl
and
dec
or
in
push
int
xchg
inc
fisubrl
cmp
adc
scas
inc
add
push
jmp
xchg
xor
lds
ss
popa
fcomp
test
dec
add
cmp
fcompl
dec
add
in
les
add
add
lods
out
adc
mov
cltd
add
stos
cmp
xchg
rolb
pop
imul
cmpsl
iret
push
add
push
add
mov
ficoms
pop
mov
adc
aas
fisttpll
sbb
push
pop
lea
jp
rorl
adc
push
mov
add
add
adc
xor
inc
add
xor
imul
push
inc
dec
jecxz
add
fisttpl
enter
icebp
bound
aam
fmull
pusha
add
mov
scas
mov
jae
test
mov
test
pushf
push
mov
leave
aad
arpl
add
add
jo
add
sbb
jnp
add
leave
push
insl
adc
add
jbe
add
pop
cmp
shrl
add
and
lds
pop
enter
sahf
adc
add
jne
mov
int
andl
dec
iret
aas
lahf
imul
dec
xchg
cmp
mov
add
xor
pop
xchg
sub
imul
push
push
sbb
inc
aaa
mov
pop
imul
pop
pushl
fbld
add
repnz
inc
add
add
std
hlt
ja
and
imul
and
and
jg
add
sub
gs
mov
cs
jns
fcmovbe
sub
jge
je
repnz
mov
insl
popf
call
sub
mov
jns
clc
fsubs
add
xlat
add
sbb
jg
mov
loop
sub
daa
jbe
add
out
inc
test
loope
sub
jns
jb
sbb
add
or
adc
jno
push
out
rolb
sahf
pop
adc
adc
push
and
call
iret
loopne
add
mov
xchg
pop
ljmp
mov
and
inc
cwtl
clc
cld
jno
js
sub
andb
sbb
into
lcall
add
jge
inc
or
jne
add
mov
imul
popa
pop
cli
jb
arpl
push
adc
je
add
popa
imul
adc
add
mov
rorb
cmp
or
add
cmp
fs
mov
add
pop
dec
add
iret
ss
xchg
adc
add
add
cltd
andb
jl
add
mov
jp
add
and
popa
inc
and
add
xchg
add
inc
add
add
mov
testb
cmp
paddb
in
inc
add
mov
dec
test
insb
add
movb
arpl
add
mov
lods
rolb
push
leave
sbb
add
idivb
jo
xor
pusha
add
cltd
xor
dec
add
mov
jp
add
push
ds
inc
add
jl
iret
mov
sarb
add
add
and
push
fwait
pop
and
cwtl
faddl
andl
pusha
add
sub
add
lcall
push
add
inc
inc
add
mov
dec
xchg
adc
push
push
iret
inc
add
bound
xchg
imul
xchg
movsl
dec
add
add
xlat
jae
add
ja
imul
push
inc
gs
icebp
mov
add
mov
lcall
adcb
and
fsubs
sarl
ja
frstor
jecxz
jge
inc
nop
sub
inc
add
je
jne
mov
jle
xchg
fwait
pusha
add
add
mov
jmp
cmc
test
and
sahf
dec
add
cmpsb
push
and
mov
pop
leave
dec
add
jne
les
in
iret
push
add
mov
push
popa
or
mov
mov
dec
add
mov
mov
add
ret
add
std
pop
insl
test
ret
push
mov
outsb
add
loopne
add
fldl
sbb
movsb
ret
andb
and
add
xor
cmp
out
loop
movsb
test
pop
pop
mov
cltd
outsl
or
fldcw
jno
std
adc
add
sbb
pusha
add
jp
dec
fisubrs
enter
add
lea
add
pop
xor
adc
and
mov
xchg
fsubs
add
lcall
add
add
or
adc
cmpsb
sarl
fld
adc
test
pop
push
push
lret
sbb
cmp
xor
test
mov
cltd
jmp
popf
push
lret
in
aaa
add
add
dec
add
fcomp
mov
flds
add
aad
cmp
pop
xchg
fstl
or
jp
pop
lods
fincstp
cwtl
fwait
pusha
add
enter
orl
das
mov
xchg
loopne
and
mov
arpl
mov
dec
add
call
sub
cmpsb
shlb
jg
cwtl
mov
mov
add
cmc
jp
jmp
mov
mov
mov
add
xchg
es
out
data16
scas
rcl
clc
in
push
stos
and
repz
sub
sub
dec
add
popf
leave
in
fucomip
mov
les
push
sbb
jae
ja
add
jle
cmpsl
cmp
dec
test
jae
ss
cwtl
aaa
or
add
leave
and
pop
int
jle
stos
imul
add
add
ss
add
cwtl
pop
fxch
inc
add
sbb
idivl
insb
add
adc
inc
add
pop
popa
into
fsubr
lret
mov
ret
out
inc
stc
mov
cmp
jl
fidivs
mov
aas
jo
add
sti
lcall
xor
mov
negl
inc
fcomp
les
pop
imul
cmp
stc
stos
add
add
loopne
jmp
les
gs
push
jl
sarl
lret
out
sbb
imul
mov
iret
popa
push
lods
gs
lea
mov
pop
lods
outsb
add
xchg
or
sbb
imul
pop
cmp
mov
lods
jecxz
mov
xlat
pop
mov
mov
sbb
xor
mov
dec
mov
add
jp
mov
cmp
aaa
and
jnp
and
or
aaa
xor
pop
ret
pop
mov
xor
in
cmp
inc
mov
add
or
mov
shrl
add
add
cmp
cmp
jns
add
sahf
negb
insl
mov
adc
sti
cmp
add
add
fistl
mov
push
in
sub
mov
and
jl
pop
sub
pop
xchg
add
xor
ret
jae
daa
test
test
dec
add
mov
xchg
add
or
and
dec
push
lcall
mov
inc
sub
and
jne,pt
cli
pop
fsts
add
add
push
sub
out
add
dec
add
mov
add
xchg
loop
loope
or
add
xchg
mov
imul
cmpxchg
pushf
sub
lds
xchg
push
dec
add
and
push
jb
add
popf
mov
xchg
test
mov
lahf
mov
add
mov
add
cmp
xor
add
cmpl
pop
lret
test
mov
push
fnstenv
cmpsb
pop
xchg
iret
fcoml
push
add
adc
mov
clc
repnz
andb
imul
cmp
and
push
mov
xchg
xor
add
add
mov
rcl
aad
adc
mov
aam
pop
mov
add
add
jno
cld
mov
pmuludq
jmp
mov
and
out
ret
mov
sub
push
fisubs
lahf
mov
aaa
push
push
pop
fnstsw
test
andb
xchg
enter
sbb
mov
pop
mov
pop
test
ljmp
test
sub
enter
dec
add
mov
cmp
scas
push
lret
jg
and
dec
test
add
jae
jnp
mov
movsl
into
sahf
aad
jle
add
mov
ljmp
inc
add
mov
shr
sbb
jmp
fildll
push
dec
dec
scas
mov
push
fwait
loopne
add
lret
fbstp
add
add
shrl
mov
add
inc
add
xor
add
adc
lds
jp
xchg
popf
loope
sahf
sbb
mov
jmp
add
adc
mov
cmp
shll
mov
ret
add
stc
cmp
add
xchg
pop
test
test
les
add
in
mov
shlb
jecxz
fistpl
jge
std
rcr
cmpsb
fsubl
add
iret
dec
inc
add
inc
add
jle
jl
stc
dec
jmp
cs
lock
adc
test
push
add
add
cmp
pop
or
scas
or
lea
push
cwtl
cmp
test
fstp
push
popf
xchg
lret
rorb
push
add
xor
pop
pusha
add
xchg
mov
add
xor
lret
jecxz
dec
add
add
stc
add
fstps
repnz
pop
push
add
dec
add
pop
and
sti
inc
jne
scas
icebp
mov
xchg
cmp
mov
cmc
push
mov
mov
fwait
xchg
xlat
lock
dec
cli
mov
out
lahf
jmp
out
add
sbb
add
nop
mov
mov
lds
mov
lock
popf
inc
aam
cmp
mov
push
sub
testb
das
mov
dec
jge
mov
in
jno
insl
into
movsl
push
sbb
mov
sub
pop
mov
pop
mov
arpl
add
imul
mov
bound
mov
stos
ret
inc
add
iret
clc
dec
add
imul
push
leave
push
add
jecxz
xor
repnz
gs
cmp
aad
iret
sahf
inc
add
scas
xchg
cmpb
test
and
dec
mov
add
add
lds
add
dec
add
pop
mov
clc
aas
jb
gs
cmpsl
push
imul
cmp
lds
adc
or
stos
out
dec
add
add
sbb
push
ret
push
mov
add
bound
rorb
or
insb
add
adcb
lea
xor
add
add
cmp
or
xor
cmp
mov
inc
add
mov
mov
xchg
outsl
shlb
mov
pop
xchg
mov
stos
add
mov
sub
fldcw
adc
call
int
jmp
mov
insb
add
dec
pop
mov
push
test
stos
clc
add
js
add
jns
loopne
sub
mov
add
out
cmpl
cmp
lahf
stc
sub
jo
into
in
push
cmpb
js
cld
and
pusha
add
outsb
add
add
negl
mov
adc
or
je
repnz
or
repz
sti
pop
rcrb
sbb
add
pop
mov
mov
jmp
pmulhuw
inc
add
lret
cld
or
push
adc
or
icebp
std
ljmp
sbb
aas
repnz
add
inc
sbb
test
xchg
std
mov
inc
add
fwait
mov
fdivs
dec
add
sub
push
add
mov
add
add
add
movsb
int3
and
test
mov
dec
cmpsl
lods
fildll
xchg
dec
add
add
ret
add
cmp
popa
xor
mov
pop
fwait
jle
add
push
stos
add
lahf
sbb
jns
xor
dec
add
add
jge
or
aaa
mov
xchg
sar
mov
lock
adc
xor
sbb
xor
dec
inc
mov
jl
pop
pop
cwtl
xchg
pop
mov
incb
add
and
fwait
bswap
pusha
add
push
jns
iret
pop
pop
andl
mov
sbb
std
sbb
xor
or
dec
add
xlat
nop
jnp
and
mov
insb
add
gs
andl
mov
orb
cmpsl
cmp
rcl
cld
mov
xchg
sbb
mov
add
xchg
cld
fucomp
loop
pushf
jno
add
push
jmp
add
add
add
mov
sbb
testl
add
jl
out
mov
mov
push
sbb
aam
mov
enter
add
pop
in
adc
lret
cs
pop
test
dec
insb
add
add
jg
inc
add
arpl
and
mov
add
push
cmp
int3
inc
add
mov
test
add
sub
into
lods
test
mov
dec
add
arpl
pop
cmpsb
xor
sbb
outsb
add
fsts
jbe
frstor
ffreep
add
nop
ljmp
jne
sbb
mov
and
popa
add
scas
call
mov
dec
add
pop
jle
xor
xchg
cmp
mov
mov
mov
cltd
js
add
mov
add
stos
or
inc
add
xchg
jp
mov
test
add
mov
jl
stc
inc
adc
fxch
movsl
and
adc
pop
das
lock
fwait
mov
inc
test
cli
popa
mov
sbb
add
xchg
ja
push
clc
push
add
cmp
sub
mov
push
mov
mov
add
and
jp
das
clc
and
inc
add
add
add
pop
and
arpl
pop
out
aas
mov
mov
cld
out
fcoml
add
mov
out
mov
add
add
mov
add
in
cmp
add
add
mov
xchg
inc
add
pop
mov
add
lcall
inc
add
add
xor
mov
push
sub
jo
dec
add
jp
push
mov
lret
dec
jne
or
jle
xchg
jb
add
outsb
add
jnp
add
lods
sti
cld
inc
add
xchg
fwait
adc
mov
enter
into
mov
jne
add
push
movsb
js
pusha
add
add
cli
inc
pop
xlat
and
ficoms
mov
add
lds
add
lahf
imul
dec
add
dec
mov
add
sbb
ja
out
jecxz
mov
and
aam
scas
sahf
mov
shl
or
cmc
repz
outsb
add
add
inc
das
imull
or
adcl
xor
gs
rclb
xlat
sbb
fildll
nop
int3
sbb
xchg
outsl
ljmp
gs
sti
jmp
roll
jecxz
cmp
push
push
mov
dec
hlt
pop
repnz
mov
jbe
jle
and
add
fidivs
iret
scas
jmp
jne
mov
xchg
sbbl
sarl
test
pop
cmp
pushf
jne
push
loopne
imul
push
inc
add
cld
stos
aas
addr16
jl
or
rclb
push
dec
add
dec
add
loope
cmpsb
fwait
iret
xorb
dec
dec
cmp
xor
sbb
fstps
orl
js
mov
test
sbb
add
add
pop
add
jae
xchg
mov
cs
dec
lods
pop
loope
push
add
and
add
add
popa
and
mov
or
mov
xchg
push
sbbb
jno
imul
gs
out
outsl
cmp
ja
add
cltd
outsl
xchg
jnp
add
xchg
push
add
and
cld
cld
imul
inc
scas
cmc
pop
sbb
add
mov
cwtl
fcoml
xchg
jne
popf
loop
scas
addb
lcall
mov
cltd
sar
mov
mov
sbb
add
sub
mov
sbb
int3
sub
inc
add
push
xor
xor
push
loop
mov
add
adc
dec
sbb
push
popa
mov
sbb
aaa
lods
pop
pusha
add
pop
add
cmpsl
mov
and
pushf
and
aam
xchg
inc
mov
adc
outsb
add
lahf
pushf
enter
add
pop
push
leave
xchg
loopne
add
and
fdivr
sbb
fadd
insl
hlt
int3
rcrb
mull
rcrl
loope
das
adc
add
outsl
mov
add
pop
leave
xchg
bound
jl
add
mov
jmp
scas
out
add
or
shrl
and
inc
add
imul
in
icebp
icebp
sahf
xchg
add
lcall
sbb
add
js,pt
add
shlb
lahf
xchg
mov
stos
push
add
testl
je
lcall
outsl
dec
add
je
invd
add
add
sbb
push
movsb
mov
fadds
add
xlat
jae
mov
data16
fdivs
mov
mov
xchg
adc
xchg
pop
scas
mov
add
test
xchg
lret
outsl
cmc
test
stos
test
add
xlat
pop
push
nop
movsb
jbe
cmc
sbb
jb
add
sub
aas
and
add
sub
loope
mov
add
ss
add
ret
add
pushf
out
cmc
jge
mov
mov
loopne
scas
mov
fwait
or
fcoml
add
enter
or
fs
in
loope
cmp
pop
jp
jo
add
out
add
add
add
mov
cmp
leave
or
test
out
orb
sahf
jp
push
push
add
adc
imul
std
fwait
test
and
add
push
mov
add
sbb
addr16
pushf
adc
or
dec
adc
je
inc
sbb
rorl
jmp
add
daa
sub
push
pop
adc
stc
jne
push
add
movsl
sahf
int
loope
adc
rcr
xor
push
in
or
cmp
nop
pusha
add
push
iret
pop
mov
out
test
mov
push
or
into
test
adc
mov
adc
int3
inc
add
popa
test
push
add
add
add
stos
push
dec
add
push
xchg
les
mov
sub
cmpsl
lds
add
bound
inc
add
pop
mov
add
stos
clc
nop
or
sub
xchg
cmp
mov
sub
mov
scas
xor
sub
jo
not
aas
sbb
shll
add
lret
add
arpl
sub
iret
or
rcl
lcall
leave
imul
pusha
add
add
adc
add
in
ljmp
icebp
or
push
lods
sbb
lret
repz
add
and
in
jno
add
or
xor
add
mov
out
ficoml
cmc
pop
jg
lret
dec
insb
add
jmp
mov
mov
fwait
push
imul
jne
cmp
shl
nop
mov
movsl
push
add
add
cmp
sub
push
sub
hlt
push
loope
sbb
xchg
cmc
xchg
pop
stos
sahf
sbb
loope
jl
popf
push
sbb
bound
repz
mov
xor
pop
pop
and
adc
int
and
xlat
xchg
sub
enter
std
sub
add
das
sbb
add
sbb
add
jae
xchg
dec
add
dec
jae
fnsave
add
in
in
mov
cmp
ljmp
aam
pop
lods
xchg
dec
add
fcomip
cmc
push
das
adc
popf
std
pop
lods
loope
mov
add
sti
sbb
fwait
or
and
call
or
and
xor
jle
xchg
shl
std
xchg
jl
imul
add
movsl
jnp
shlb
jmp
add
push
add
add
mov
pop
fyl2x
dec
add
add
scas
fdivrs
cmp
mov
pop
rcrl
les
mov
inc
add
pop
cmpsl
les
es
jnp
push
or
inc
add
les
mov
mov
mov
add
fstpt
jae
jb
js
sahf
sar
xor
dec
shl
dec
or
xor
push
fmuls
push
loop
sti
xchg
jne
bound
out
test
or
in
jmp
clc
or
ret
mov
stc
insl
adc
add
rolb
push
fwait
pop
pop
mov
add
xor
mov
iret
inc
add
int
int
cmpsl
inc
add
add
sarb
ret
gs
add
and
adc
add
adc
repnz
in
aam
ret
daa
daa
or
inc
pop
add
push
rolb
std
pop
cmp
scas
push
add
icebp
int
add
dec
add
daa
sbb
add
push
pop
fsts
ret
sub
addb
push
aam
fwait
rcrb
movsb
lret
mov
add
sub
add
mov
xor
or
test
insl
adc
xchg
aas
mov
add
cmc
push
aas
sti
bound
ja
adc
setne
cmp
inc
jo
test
pop
mov
das
rolb
cs
out
add
xlat
sbb
push
xchg
and
adc
ds
push
sub
mov
int
jb
sbb
stc
jg
dec
aaa
jecxz
add
lret
add
in
pop
lret
in
rcrl
mov
outsb
add
jle
add
xchg
xchg
imul
int3
pop
pop
out
rorb
inc
imul
push
loope
adc
mov
pop
insb
add
inc
push
add
cmp
mov
iret
xlat
sub
in
add
mov
xor
nop
cmp
mov
mov
add
cmpsl
aas
xchg
sub
jmp
push
adc
mov
mov
add
pop
sahf
adc
and
push
enter
xchg
into
pop
xchg
mov
cmp
push
in
jge
push
mov
in
adc
push
pop
scas
and
and
xor
int3
add
push
adc
scas
and
scas
cmp
stc
or
popf
pop
inc
add
add
outsb
add
jns
ret
cmp
sti
aas
mov
mov
mov
sbb
repz
push
sarb
add
add
sarl
stos
inc
add
test
in
aad
scas
lahf
xor
or
imul
nop
nop
inc
add
das
pop
push
pop
in
cmp
cmp
pop
pop
and
mov
inc
add
add
je
xor
cmp
lret
xchg
sbb
pop
cmp
xor
adcb
dec
out
push
lcall
add
or
jbe
dec
les
loope
push
cltd
cmp
pop
jbe
pop
in
sub
shlb
jne
orl
neg
add
add
lahf
xchg
cmp
outsl
jb
add
add
add
leave
jne
int3
push
in
xor
xor
pop
push
add
es
inc
add
xchg
jne
add
xor
movsb
inc
test
push
and
jmp
inc
add
loopne
cs
cmp
dec
add
dec
out
getsec
stos
push
fistps
xchg
shlb
add
inc
in
and
addr16
mov
sbb
lcall
xchg
aad
outsb
add
add
jns
add
cmp
jmp
adc
add
mulb
out
frstor
iret
pusha
add
pop
imul
fistl
cmp
rcl
adc
add
leave
inc
das
xor
bound
loop
lock
test
xorb
and
je
cmpsl
jnp
std
xlat
stos
dec
push
and
xchg
call
ljmp
jb
inc
fisttps
xchg
lahf
or
dec
add
int3
jle
cmp
jns
scas
test
test
add
jne
pop
movsl
fsubr
jb
aad
xchg
icebp
cli
lret
xchg
in
jns
mov
add
cmp
pop
xchg
stos
xor
sbb
jecxz
add
ss
inc
add
add
sub
loopne
or
lods
cmp
sar
ljmp
add
in
aam
push
es
jecxz
mov
scas
push
cmc
imul
add
aaa
xchg
sbb
mov
cmp
insb
add
lret
jecxz
fstpl
ret
or
pop
mov
lods
sub
jle
sbb
and
xchg
ja
pop
ljmp
xchg
leave
cmp
inc
push
in
leave
je
pop
js
jno
add
add
add
add
xor
xchg
pop
xor
insb
add
add
inc
es
movsb
jmp
sub
ror
pop
push
mov
adc
nop
adc
js
movsb
push
sub
add
out
imul
popa
inc
add
cmp
sub
imul
fcoms
cmpsb
push
lods
jg
cmpl
and
subb
add
in
mov
mov
in
mov
adc
cli
loop
pop
insl
inc
adc
shll
decl
add
in
inc
cld
movsl
lds
test
sub
cmpsl
sbb
and
test
push
ffreep
add
push
cwtl
ljmp
add
fnstenv
add
dec
add
push
aas
int3
test
mov
cld
cmp
pop
jecxz
fcmovnb
push
call
jo
cmp
out
inc
add
out
cwtl
fstp
insb
add
jecxz
enter
mov
in
loopne
rcrb
add
lahf
xchg
test
dec
imul
ljmp
mov
out
cmpb
repz
pop
insb
add
ret
inc
add
bound
pusha
add
add
js
add
out
or
fsts
stos
dec
add
cmp
mov
dec
add
into
lret
mov
ret
inc
add
hlt
xor
add
sbb
dec
xchg
bound
cmc
xchg
mov
pop
aas
flds
xlat
mov
mov
inc
add
sbb
pop
inc
jle
ffreep
ficomps
jnp
mov
insl
loop
in
push
shrl
add
jo
scas
mov
repnz
or
or
aad
inc
push
add
pop
jne
mov
adc
mov
add
xchg
mov
push
add
push
push
mov
out
cltd
dec
add
add
pushf
outsl
mov
add
xor
cmc
imul
add
popf
inc
add
xchg
decl
add
xor
shlb
add
or
lcall
stc
and
call
and
and
push
movsb
add
movsb
arpl
add
add
mov
enter
lods
scas
push
mov
jb
test
mov
sbb
call
outsb
add
add
add
xor
mov
mov
test
push
mov
add
loop
push
add
jne
and
jo
jp
bound
daa
mov
mov
add
popa
dec
insl
fbstp
loopne
mov
add
xchg
aad
insl
jno
push
out
ljmp
fisubrs
cmpsb
mov
dec
add
add
add
stc
loopne
pop
push
sbb
add
in
or
imul
pop
clc
sub
jle
jp
and
popa
inc
insb
add
add
mov
mov
xchg
hlt
hlt
ret
cmc
addr16
clc
or
ret
in
pop
test
cmpsb
ret
and
ja
decl
test
mov
cmp
ljmp
add
cmp
lods
dec
add
out
add
out
mov
mov
fst
push
sbb
rcl
popa
int3
sbb
sti
insb
add
adc
mov
decb
sub
add
xlat
pop
pop
push
jl
pop
mov
add
in
mov
sbb
and
add
aaa
enter
das
mov
add
add
add
leave
add
jae
dec
imulb
add
outsb
add
outsl
jbe
add
ds
data16
cmp
mov
mov
xor
add
xlat
ret
jno
aas
insb
add
add
mov
sub
lret
pop
mov
add
add
insl
mov
cli
loopne
add
fimull
add
add
clc
mov
jns
popa
ss
dec
add
cmp
xor
sbb
add
in
mov
add
push
adc
repz
jo
push
dec
add
mov
lea
adc
add
add
hlt
fwait
cltd
orb
stc
int3
scas
movsl
outsb
add
imul
dec
rcll
pslld
in
inc
push
cltd
test
call
shlb
add
sbb
into
add
rcll
add
add
add
icebp
inc
add
sub
add
add
cmp
repz
es
hlt
push
push
sub
and
push
and
dec
push
mov
sub
or
sbb
mov
insb
add
xor
add
pop
aam
inc
add
lret
rcr
push
or
inc
xor
mov
icebp
jns
sub
shlb
cmp
add
add
jl
imul
add
les
mov
out
fld
xor
inc
add
add
adc
mov
push
addb
mov
xchg
inc
add
lret
ja
add
sbb
test
lcall
dec
add
out
xor
lret
popf
pusha
add
xchg
mov
mov
jmp
add
mov
das
cs
inc
push
mov
mov
sbb
das
sub
arpl
sub
ret
lahf
jmp
sbb
and
dec
decb
add
sub
aaa
call
add
xchg
push
pushf
ljmp
adc
add
popl
test
add
mov
out
add
xchg
mov
arpl
jno
cmp
stc
mov
dec
add
ret
cmpsb
add
mov
add
add
or
popf
push
cmp
ret
add
dec
add
stos
sbb
mov
into
dec
cmpsl
int3
add
add
jb
or
push
inc
xchg
adc
daa
pop
adc
rcrb
dec
add
sub
pop
scas
call
or
add
leave
dec
or
and
xchg
je
mov
pop
xchg
and
fdiv
dec
add
scas
jb
add
push
xor
inc
pop
jne
and
aam
daa
sar
popa
scas
inc
iret
mov
add
mov
cltd
or
adc
cld
pop
ret
cmp
test
test
pop
cmpsb
aaa
sahf
mov
fisubs
add
xlat
and
mov
fisttpl
leave
push
or
inc
add
add
jge
add
mov
loop
fimull
insl
lock
add
movb
push
nop
orb
push
and
lock
sub
push
xor
inc
add
dec
add
cmc
outsl
outsl
je
jno
add
cmpsb
in
fwait
sub
add
mov
adc
mov
add
insb
add
addr16
sbb
cmp
dec
add
add
pop
out
cmpsb
ss
sbb
sbb
fsts
movsb
and
sub
push
clc
lahf
movsb
js
enter
or
and
jns
adc
or
add
and
jg
jns
and
xor
test
dec
neg
mov
push
jae
cmp
mov
scas
iret
aas
push
xchg
cmp
add
fisubl
outsb
add
sti
inc
add
xchg
addr16
xor
and
sub
sbb
add
xlat
add
imul
scas
repnz
xor
jnp
in
in
jmp
dec
xor
mov
js
sti
inc
xor
add
xchg
hlt
jns
test
aam
movsl
dec
add
test
scas
push
gs
add
push
xchg
jge
out
nop
cmp
jo
pop
mov
add
mov
fdivrl
je
cmp
orl
clc
int3
scas
gs
jbe
das
sbb
jb
incl
mov
shr
loop
dec
add
sub
andl
in
clc
out
loope
das
cmp
add
mov
add
das
jmp
stc
add
test
add
pop
insb
add
sub
or
push
jno
fldl
adc
leave
or
push
add
add
scas
pushf
or
xor
jmp
cmp
push
fwait
xchg
mov
xor
test
add
cmp
hlt
aaa
mov
add
jne
aad
popa
mov
and
add
xlat
push
test
jnp
add
pop
rclb
jl
and
sub
leave
into
dec
int3
ret
adc
xor
mov
dec
add
and
enter
test
or
and
cld
test
inc
add
push
fstpt
jecxz
lea
jne
and
mov
icebp
repnz
xlat
or
pop
ret
add
jnp
outsb
add
mov
out
rolb
lret
ja
shrb
imul
pusha
add
fstps
je
mov
cltd
pop
sub
mov
shll
add
add
iret
test
int3
cmpsb
ret
repz
repnz
fbld
add
rcrl
xor
xchg
loopne
add
mov
rcrb
clts
add
insl
std
xor
add
pop
popa
or
add
enter
iret
sub
xchg
aad
mov
or
repnz
sarb
push
jg
push
mov
or
aad
addr16
add
inc
das
push
repz
add
push
add
xor
push
add
cmp
add
and
sti
je
and
pop
dec
add
data16
sub
adc
add
add
rcrb
jbe
mov
push
dec
add
mov
negl
aad
lock
sar
xchg
sub
mov
leave
sarb
push
jb
inc
imul
mov
jg
mov
shll
cltd
push
push
add
test
xchg
xchg
fwait
or
jmp
lock
call
mov
xlat
push
pop
push
js
dec
out
inc
add
xchg
sbb
xchg
lcall
ss
sub
adc
out
out
add
mov
pusha
add
push
dec
add
add
add
inc
and
lds
in
dec
daa
jo
add
fdiv
lcall
jne
or
fnstcw
cmpsl
adc
add
add
out
sub
jle
in
xor
push
addr16
cmp
xchg
inc
adc
rorl
add
roll
lds
add
enter
pusha
add
aam
add
add
fcomps
add
add
testb
and
cmc
xchg
mov
mov
add
sbbb
hlt
push
add
add
fistpll
cwtl
shr
rcr
stos
das
xor
stos
and
cmc
pop
lret
and
cmp
add
shl
push
and
or
mov
mov
add
pop
out
pop
hlt
adc
add
mov
dec
add
adc
es
sti
push
ds
mov
test
pop
fadds
dec
adc
xchg
jecxz
loopne
jns
lods
add
dec
sbb
fdivrs
cwtl
xor
add
dec
add
add
mov
pop
gs
std
inc
add
lods
insb
add
cmp
outsb
add
mov
scas
sbb
or
inc
inc
add
add
pop
pusha
add
call
clc
mov
jge
insb
add
aam
mov
jo
adc
call
mov
mov
aaa
mov
xchg
jg
loope
adc
xchg
je
lret
je
cmp
mov
xor
pop
mov
xor
dec
mov
add
cmpsl
mov
xchg
or
es
jmp
jl
pop
and
mov
inc
dec
add
mov
push
divb
cmp
and
add
add
ljmp
sub
add
add
or
mov
mov
data16
cmp
adc
add
dec
add
fsubrp
inc
add
add
js
add
test
add
movsb
xchg
adc
gs
insl
cld
mov
sbbb
and
fwait
mov
push
lock
lods
mov
xor
xlat
push
adc
add
in
aaa
dec
add
aas
sbb
fiadds
ja
mov
mov
clc
xchg
jp
cmp
add
mov
mov
testb
leave
mov
add
les
bound
fisttpll
push
add
push
test
pusha
add
mov
push
add
add
cmp
add
push
and
insl
push
lahf
sub
loop
int
data16
das
ja
pop
jmp
adc
cld
fisubrs
fnstcw
mov
inc
add
insb
add
jne
stc
call
scas
insl
jge
in
mov
mov
repz
xor
dec
add
add
popf
in
cmp
add
pop
or
push
add
stos
xor
add
fnsave
cmp
xor
sbb
push
cmpsb
pop
push
loope
stc
or
xor
pop
dec
mov
add
add
xchg
hlt
xor
xlat
nop
jl
pop
icebp
pop
cmp
add
add
or
loope
inc
add
repz
mov
fidivl
push
add
pop
sub
pop
shrl
sbb
or
dec
add
fmul
jne
xchg
std
xchg
mov
and
enter
sub
mov
lods
jge
loopne
std
gs
fxch
fiadds
cmpsl
jge
mov
add
mov
test
pop
sub
push
inc
fsub
outsb
add
loop
js
out
mov
fwait
outsl
mov
add
das
mov
sub
push
sub
pop
pop
and
add
ljmp
dec
es
test
lds
pop
push
add
add
jae
mov
inc
aas
sbb
add
add
mov
test
outsb
add
jb
outsb
add
add
add
adc
mov
addr16
imul
cmp
inc
insb
add
inc
sti
cmp
sub
insb
add
inc
add
fisubs
add
lahf
scas
je
loope
pop
and
orb
stc
add
xorb
jns
notl
daa
repz
dec
inc
lods
pop
addb
cmp
add
outsl
dec
adc
xchg
add
pusha
add
add
add
in
jge
xchg
aaa
mov
inc
add
mov
jp
add
lahf
insb
add
xlat
ficompl
lds
inc
cmp
add
add
bound
cmpsl
movsb
add
sub
xchg
push
mov
xchg
push
add
loope
add
cmc
mov
ja
add
mov
add
inc
add
adc
push
add
mov
dec
add
push
xor
out
add
jbe
iret
push
dec
test
xchg
popa
movsb
mov
jg
cmp
pop
jl
sub
ret
cvtdq2ps
push
cld
jne
mov
add
icebp
mov
dec
push
add
sub
adc
mov
push
in
aad
add
add
push
adc
insb
add
pop
push
mull
add
pop
loop
add
add
lock
mov
jmp
add
cmc
sar
dec
add
inc
or
sub
sbb
push
imul
inc
outsb
add
movsb
icebp
pop
jle
xorl
add
push
iret
push
pop
xchg
rcr
in
mov
mov
call
lahf
sbb
add
inc
lcall
bound
int
and
in
xchg
shll
add
and
fistpl
js
add
push
add
aam
inc
add
add
sbbb
or
pop
rol
push
decl
lock
dec
mov
dec
dec
mov
pop
frstor
out
fs
add
outsb
add
shll
test
dec
add
pop
xchg
fadds
sbb
data16
daa
sbb
ja
call
fists
inc
scas
imulb
mov
xchg
xchg
imulb
scas
mov
insl
fcoml
outsb
add
add
repz
ds
pop
icebp
sbb
jno
jno
add
push
add
inc
daa
repnz
aas
test
sbb
dec
data16
jle
leave
xchg
test
sti
scas
ds
add
ds
and
rorb
add
hlt
sahf
cmp
mov
mov
add
out
add
push
shrl
or
jle
adc
test
in
inc
clc
push
jle
mov
add
jp
clc
push
push
divb
imul
mov
and
push
imul
mov
add
pop
adc
dec
add
mov
fwait
cmp
or
push
fsubl
sti
daa
cmpsb
and
pop
scas
mov
sbb
ss
add
mov
lea
sub
add
and
fwait
and
jbe
in
loopne
lods
mov
or
or
inc
mov
cwtl
and
push
jp
add
mov
add
cmpsb
lea
sbb
mov
cmc
int3
pop
jne
fdivrl
xchg
push
daa
clc
outsl
fists
jns
pop
pop
push
add
push
pop
imulb
add
and
loope
outsl
jmp
sbb
fcmovnbe
inc
add
xor
fisubl
pop
out
je
jg
data16
add
lods
jecxz
lahf
les
bound
inc
cmp
xchg
outsb
add
add
add
dec
add
js
pusha
add
mov
xchg
loop
cld
or
rcll
add
or
mov
jg
inc
dec
add
dec
add
add
jno
lods
mov
mov
xchg
jmp
shll
add
xchg
je
add
mov
cld
xchg
xor
fstpt
stos
pushf
je
mov
and
or
xchg
jnp
cmpsl
outsl
mov
sub
push
out
fiaddl
add
push
jbe
gs
jmp
in
mov
dec
lods
cmp
push
add
out
jb
lods
and
cmpsb
mov
mov
je
add
scas
adcl
mov
cmc
inc
add
out
add
popf
adc
add
add
jae
stos
hlt
mov
add
add
mov
mov
loopne
add
add
push
cmpsb
or
add
fistpll
jb
sti
out
pop
iret
mov
add
adc
push
inc
add
shrl
or
and
add
arpl
sub
out
dec
adc
add
add
lahf
mov
add
cmc
mov
xchg
pop
mov
add
dec
xlat
repnz
add
rorl
dec
add
insl
push
mov
push
cld
and
cwtl
addr16
lods
cmp
sbb
das
xor
add
stos
sbb
lock
adc
mov
lods
lods
jnp
add
lods
movsb
inc
add
ret
sub
add
inc
or
test
jbe
mov
and
xchg
or
add
add
in
adc
dec
push
jge
fwait
dec
int
pusha
add
pop
aad
aam
inc
add
sahf
push
add
fwait
int3
or
add
sti
add
pop
insb
add
bound
push
add
cmp
scas
jno
add
cmp
leave
sub
cmpsl
jg
add
clc
push
add
dec
add
add
inc
add
add
fistpl
or
add
in
add
sbb
stc
movsb
sub
inc
add
insb
add
rol
push
mov
add
xchg
out
add
or
test
dec
dec
test
in
mov
fldl
add
mov
add
shl
push
adc
mov
inc
add
mov
push
mov
push
dec
add
cwtl
out
xchg
mov
js
pop
adcb
add
add
outsb
add
ja
insl
and
les
int3
mov
and
inc
dec
add
jns
mov
and
loopne
add
push
mov
add
pop
lcall
out
popf
in
pushf
scas
sub
lret
inc
add
les
xchg
push
sarl
sub
mov
xchg
add
add
call
xor
cmpsb
push
mov
into
mov
popa
bound
mov
dec
add
out
sub
movsb
cmc
adc
sbb
cmpsl
fs
imul
cmp
es
stos
aaa
dec
add
xchg
sub
add
cltd
stos
lret
mov
cmp
cltd
and
add
and
in
mov
push
inc
add
add
add
fs
sub
and
mull
dec
xchg
in
das
lahf
mov
popf
out
pop
mov
inc
insl
in
and
jns
test
ds
xor
fdivl
fcom
dec
sbb
add
jge
out
mov
add
and
movsl
jl
and
inc
add
add
mov
cmp
movsb
mov
out
dec
sbb
lret
or
inc
xor
jecxz
jbe
mov
xchg
or
jae
add
dec
and
xchg
decl
add
repz
or
mov
and
add
add
mov
mov
pusha
add
ja
push
out
mov
mov
cld
pop
dec
add
in
pop
enter
fisttpl
add
dec
add
cmp
inc
sub
add
or
dec
cmp
pop
and
jg
add
adc
ss
push
add
adc
stos
adc
lods
mov
xor
pushf
int
pop
inc
ret
jns
mov
add
insb
add
int
pop
xor
add
inc
xor
adc
in
hlt
pop
js
xchg
add
popf
mov
add
pop
mov
ljmp
and
xchg
inc
add
jmp
pusha
add
inc
cmpl
int3
mov
lock
add
leave
sti
cwtl
mov
imul
and
pop
mov
fistps
dec
bound
add
lahf
cld
dec
inc
add
call
inc
add
dec
add
and
icebp
in
adc
push
andl
add
cmp
and
bound
fs
push
scas
and
cld
scas
test
ljmp
mov
jl
dec
sub
cmpsl
arpl
inc
add
ja
add
int3
xchg
sbb
aaa
pop
lahf
ss
add
jmp
pop
rcrb
mov
cmp
shr
sub
popf
mov
in
jb
adc
push
sbb
std
shlb
ficoml
xchg
negl
enter
insb
add
movsb
dec
add
push
mov
and
mov
sub
arpl
add
adc
fcoms
into
shll
inc
aas
pop
inc
add
xor
daa
outsb
add
test
dec
add
sub
ljmp
add
dec
cwtl
test
mov
cwtl
stos
loop
fbld
add
shrb
add
mov
repnz
nop
idivb
adc
pop
movsl
xor
xlat
fstps
jo
add
add
jne
push
dec
add
sti
mov
cld
add
loope
repz
cmp
sbb
add
adc
ficomps
je
cmpsl
and
push
fistl
leave
outsb
add
sbb
add
jle
add
loop
js
fst
cmp
xor
cwtl
add
andb
fsubr
and
inc
add
sub
shl
inc
add
call
push
repz
add
xchg
out
jl
mov
out
scas
cmp
cmpsb
sbb
movsb
mov
add
ljmp
push
sub
scas
push
mov
adc
jecxz
or
jo
dec
add
ss
fistps
jg
lcall
add
mov
add
fcompl
jmp
or
fcoms
sbb
jne
add
arpl
pusha
add
push
sbb
adc
mov
mov
mov
inc
add
jne
adc
movl
xchg
jp
sbb
add
sarl
popf
pop
jg
shlb
add
mov
dec
xchg
mov
test
cmc
loopne
ljmp
jge
sub
pushf
aas
pop
or
ficoms
adc
jne
or
add
mov
or
or
add
jge
add
fnstsw
add
add
repnz
movsb
dec
jge
xor
jl
push
push
add
add
jl
gs
jmp
mov
adc
addr16
add
jmp
cmp
pop
in
mov
call
xor
cmp
mov
add
xchg
sbb
jecxz
adc
xchg
ret
in
inc
add
imul
movsl
xor
popf
mov
mov
or
inc
add
or
cld
mov
jmp
icebp
test
imul
push
pop
fisubs
add
imul
cli
out
jge
in
jp
or
add
jno
pop
fsubr
fwait
mov
in
lods
mov
sub
push
daa
loop
push
lret
inc
add
push
mov
int
outsl
mov
mov
cmc
add
cld
jg
mov
and
ss
lcall
icebp
and
cmpsl
add
mov
clc
in
mov
jo
push
inc
add
add
rorb
add
insb
add
std
mov
lods
rcrl
pop
filds
sub
xchg
lea
orl
add
push
std
rcrb
add
add
lcall
std
sub
dec
add
add
add
mov
lock
movsb
mov
cld
inc
add
jp
xchg
leave
pop
mov
pop
and
fisubs
arpl
cmp
add
sub
jo
add
das
mull
add
jae
out
movsb
xlat
scas
jo
lods
inc
fadds
and
xor
pop
mov
and
pop
neg
pop
fsubs
cmc
xor
cmpsl
imul
fcmovnb
data16
lahf
mov
adc
shr
das
into
dec
add
jmp
dec
pusha
add
sbb
clc
sub
mov
xchg
inc
pop
inc
mov
mov
adc
shl
sub
or
lahf
dec
add
add
sbb
mov
jo
push
xor
rcr
inc
add
xor
pop
add
push
mov
dec
add
mov
ss
lcall
mov
xor
test
ja
ret
ds
leave
shl
clc
mov
add
add
or
in
dec
add
pop
cmpsb
push
add
jo
add
and
in
and
push
add
imul
add
add
or
nop
movsb
int3
jg
pop
leave
insb
add
or
pop
dec
add
enter
lods
or
push
mov
dec
psubw
loopne
mov
xchg
cmp
stos
popf
mov
lods
pop
adcb
pop
sbb
lret
jae
mov
mov
add
add
stos
sahf
mov
cltd
clc
stos
cmp
addl
add
add
lods
popa
inc
jmp
andl
dec
inc
push
mov
ret
out
stos
dec
dec
inc
xor
pop
imul
cmp
add
jle
jge,pt
xor
inc
add
add
in
fadds
sti
jbe
add
inc
movsl
popf
add
repz
sub
sub
push
ds
mov
mov
testl
xor
sub
decb
in
test
stc
push
fcmovnbe
dec
add
inc
sar
add
aad
stos
push
lds
mov
lods
ret
hlt
pop
pop
imul
add
or
or
push
add
sbb
subb
arpl
sub
insb
add
mov
and
inc
add
lret
pop
dec
sub
out
push
dec
add
mov
cmc
adc
aas
push
add
add
add
pop
push
fdivrl
mov
add
std
lods
cmp
xlat
outsb
add
sub
jns
pop
push
or
scas
ja
bound
pop
and
ljmp
mov
cmc
and
insb
add
add
mov
add
push
adc
jns
push
jl
nop
outsb
add
fbld
gs
rcll
shll
ucomiss
adc
ds
jo
test
sbb
bound
pop
and
les
add
lds
loope
lock
mov
sbbl
loop
lods
cmc
out
add
aaa
cltd
roll
dec
add
add
je
jge
loopne
add
fisubl
add
dec
add
push
adc
out
sbb
xchg
pop
fimuls
std
push
adcl
imul
inc
ja
and
jge
push
test
stos
cltd
std
sub
cmc
xor
dec
push
and
hlt
adc
xchg
push
inc
addr16
das
loopne
sahf
and
adc
inc
inc
sti
mov
imul
add
add
sub
sarb
outsb
add
and
mov
or
dec
out
jo
lock
lret
test
jl
jl
not
push
or
add
pop
inc
mov
add
loopne
insb
add
xor
push
xchg
mov
sbb
movsl
mov
adc
mov
scas
jbe
dec
add
sub
loope
lahf
push
adc
add
insb
add
sbb
lahf
pop
xchg
cli
push
in
dec
add
test
mov
cmp
loopne
pop
subl
cld
lcall
sbb
inc
lea
xchg
add
nop
iret
das
lret
insl
cmp
mov
fdivl
jns
add
orb
pop
pop
filds
add
andb
mov
les
out
sub
test
add
add
mov
fidivrl
pop
mov
inc
add
jecxz
mov
popf
xchg
mov
stc
es
enter
sub
jbe
xor
lret
repnz
pop
das
mov
add
test
add
js
mov
loope
insb
add
xchg
push
stc
lock
repnz
push
ret
add
push
bound
loope
mov
fwait
int3
xor
jnp
mov
add
jecxz
js
movsl
mov
aad
cli
jl
test
add
push
inc
add
xor
fidivs
push
add
add
cmp
pop
subl
jbe
in
shr
and
idivl
lret
pop
test
add
jbe
cmpl
test
pop
fdivrp
cmp
cltd
sahf
aam
add
jbe
pushf
cli
pop
mov
out
adc
sbb
sub
cwtl
inc
add
xor
mov
stos
sub
mov
arpl
ds
inc
je
fldt
jg
clc
add
rolb
xchg
or
ljmp
shrl
add
mov
xchg
pop
mov
add
push
xchg
lret
jo
xchg
clc
cmpsb
dec
add
aam
lods
leave
mov
bound
imul
jge
ds
mov
lcall
add
pop
std
jg
test
fwait
ret
cmp
jns
and
add
xor
sbb
xchg
nop
imul
mov
add
cltd
setle
mov
adc
pusha
add
and
push
lods
and
inc
add
or
je
add
add
and
pop
and
xor
push
inc
add
cmp
jns
pop
adc
in
push
shll
xchg
cmc
xor
lahf
lds
and
fstpl
je
push
add
aam
in
aaa
clc
pop
xorl
out
lcall
lea
rorb
fcmovnbe
ss
je
inc
add
add
add
aad
sub
add
pop
xlat
sarl
repnz
aaa
out
or
push
dec
cmpsl
jne
rorb
fcmovu
xorl
mov
add
add
and
jbe
fistpll
add
mov
add
sahf
aaa
aad
pop
jne
shl
in
pop
lahf
jmp
xchg
shrl
inc
add
lods
stos
int
lea
add
add
adc
add
mov
stos
lret
mov
mov
xchg
dec
xor
add
push
jb
add
jbe
test
cmp
dec
mov
jmp
mov
ret
mov
mul
mov
jbe
sub
add
sub
sbb
mov
fildll
pop
mov
pop
clc
adc
add
stos
pop
jae
outsl
jp
jnp
lahf
sub
xor
pusha
add
loop
inc
add
or
xor
imul
push
rcll
jl
and
in
xchg
pop
push
add
test
movsl
stc
adc
pop
inc
add
pop
mov
mov
add
out
dec
add
add
bound
fsubl
mov
jg
mov
mov
loop
add
mov
adc
xor
ljmp
stos
inc
add
xchg
pop
or
clc
fwait
add
or
arpl
mov
pop
mov
stos
in
jmp
push
push
add
pop
xor
pop
sub
xchg
mov
popa
cli
insl
mov
add
je
out
mov
add
mov
inc
add
mov
add
data16
pop
jne
lods
loopne
or
fists
add
lahf
jns
push
xchg
movsl
or
xchg
dec
loopne
adc
add
std
xchg
test
cmp
add
push
add
sub
mov
push
ret
add
inc
add
lds
add
movb
int
shll
add
cmp
popa
fstpt
cmpsl
jns
movb
cld
xlat
add
fs
lea
sub
adc
jne
add
mov
das
andl
daa
cmp
inc
pop
and
into
add
and
test
fbstp
ds
fiadds
add
push
lret
ret
sarb
add
pop
fdivrs
jns
jbe
popa
sub
mov
add
dec
sbb
push
daa
js
jle
add
shll
sti
in
xchg
or
in
pushf
cmpsb
imulb
arpl
add
in
mov
ljmp
mov
movsl
lock
test
add
mov
add
and
push
pop
add
outsb
add
add
ficoml
and
rcrl
je
pop
stos
mov
xchg
add
xor
or
je
mov
lret
aad
mov
pop
dec
add
jle
ljmp
icebp
incb
or
xor
es
mov
mov
imul
out
mov
inc
add
or
int
jnp
xchg
mov
sbb
xorl
clc
fstpl
mov
popf
pusha
add
add
xor
add
das
jb
dec
lock
xor
dec
jbe
imul
add
cwtl
outsb
add
jecxz
jae
add
inc
pop
sbb
add
ficoml
adc
int3
cmpsl
jp
outsl
aad
sub
lret
icebp
cld
ret
xchg
adc
jmp
xchg
cmp
add
repz
adc
add
loope
pop
negl
dec
add
cmp
cltd
shll
mov
in
add
dec
inc
adc
add
cmp
jne
outsl
or
rol
cltd
sbb
lods
sub
into
jns
mov
push
mov
add
hlt
lds
xchg
jmp
add
inc
flds
mov
pop
sbb
inc
aad
inc
lds
add
mov
outsl
or
push
add
add
clc
lahf
cmp
mov
aaa
pop
stos
sub
push
ds
push
mov
mov
lret
sub
add
in
out
add
sti
mov
sub
dec
aas
cmp
mov
inc
push
add
mov
mov
add
sub
xor
mov
aam
add
les
rcr
push
out
mov
pusha
add
mov
xor
sbb
add
cmpsb
inc
xlat
or
dec
mov
mov
xor
imul
std
pop
inc
in
repz
jge
pusha
add
lret
cli
cmp
rcr
add
sahf
sub
rorb
pop
lea
or
lea
add
jae
outsb
add
push
mov
sub
cld
arpl
rcrb
inc
add
dec
mov
mov
cmp
hlt
push
xor
add
add
push
inc
add
aam
sti
add
clc
cli
jb
sub
inc
add
jb
enter
pushl
es
int
dec
add
leave
movsl
jae
add
mov
inc
push
rorb
jge
or
addr16
inc
pop
and
imul
mov
pop
outsb
add
xchg
scas
cmp
xor
arpl
mov
popa
xchg
jmp
and
xor
add
jns
arpl
int3
lcall
shrb
fmull
pop
hlt
xchg
add
lea
in
cmp
shll
mov
mov
shll
mov
ja
stos
lock
imul
loop
add
and
xchg
out
movsb
stos
mov
mov
add
les
loopne
hlt
rorl
add
int
punpckhbw
jbe
adc
mov
xchg
cltd
lds
add
add
insl
add
enter
sbb
dec
fildl
fimull
or
and
in
mov
std
xchg
mov
add
shlb
jb
cmpsb
clc
loop
jae
cmpsb
bound
mov
inc
inc
add
jp
lcall
outsb
add
fisttps
push
cltd
int3
dec
add
push
pop
jecxz
mov
cmp
sti
ss
push
xchg
add
pop
sub
sub
cmp
sbb
mov
stos
fcomps
pop
xor
dec
add
decl
popf
xchg
testb
inc
sbb
add
add
cmp
add
lret
test
dec
add
mov
mov
std
sbb
adc
outsb
add
add
arpl
test
cmp
add
loop
push
and
push
xchg
xor
xor
mov
push
xchg
add
add
pusha
add
int
or
jns
add
sti
lahf
mov
inc
add
and
sub
xlat
sub
pop
adcb
push
add
lea
popa
scas
bound
ret
repz
rol
sbb
cli
daa
scas
test
out
bound
rorl
push
mov
out
inc
add
push
addb
je
jne
test
aad
add
sub
jp
add
add
in
add
jg
push
add
lret
xchg
sbb
or
pusha
add
out
addr16
add
movsl
jb
lahf
xchg
ljmp
outsl
sbbl
cmc
test
test
rol
sbb
movsb
sbb
cmpsb
clc
js
rcrl
add
mov
jle
popf
pop
push
cmp
js
add
jmp
add
inc
add
ja
jae
iret
out
inc
add
jno
std
add
jb
loopne
add
xlat
sbb
add
aas
fistps
adc
out
mov
add
add
out
push
sbb
add
add
xchg
or
sbb
jmp
or
mov
dec
add
stos
arpl
add
push
push
cmpsl
inc
iret
inc
loop
pusha
add
scas
movsb
popf
das
negb
in
mov
push
add
xor
mov
add
mov
cmp
dec
and
fstps
sub
xor
fs
jecxz
mov
xchg
iret
add
lcall
add
cmp
jne
dec
add
sahf
ret
pop
dec
add
dec
add
test
add
stc
xchg
add
add
sbb
dec
add
lahf
fsubp
dec
insl
ja
fdivrp
in
arpl
cmpsb
lcall
mov
fmul
fildl
xchg
and
sub
push
dec
push
push
add
sbb
add
mov
test
and
jb
dec
ffree
stos
xor
outsl
in
xchg
jg
fwait
lods
xchg
addb
call
add
scas
jg
aam
add
nop
scas
fwait
ss
adc
xor
lahf
aam
ja
insb
add
pop
rol
sarb
jle
jp
ljmp
cmpsb
loopne
rolb
add
lret
test
fldenv
mov
lds
add
lahf
das
inc
fwait
addr16
dec
mov
add
icebp
mov
add
andb
mov
loop
incl
fldenv
or
test
dec
add
test
cmpsb
jl
les
pop
xlat
movsb
out
leave
lahf
push
rcll
cmpsl
inc
dec
add
insl
psllw
int3
xchg
push
add
pop
pop
pop
sbb
rcrb
mov
lods
and
arpl
pop
or
loop
jle
or
add
in
sbb
stc
loopne
add
add
lret
push
add
adc
repnz
mov
mov
addr16
cmp
cmpl
int3
push
in
clc
dec
jbe
iret
inc
add
ljmp
into
dec
add
pushf
sub
adc
jbe
js
loope
shll
repz
hlt
xor
jg
fstl
mov
add
cmpsl
xor
int
mov
adc
pop
mov
xor
enter
mov
xor
xchg
rorb
add
inc
add
add
adc
outsb
add
pop
ret
mov
fld
dec
sbb
div
pop
lahf
into
sub
test
mov
cmp
pop
inc
add
loop
out
cmp
adc
mov
enter
mov
and
push
sbb
jg
test
arpl
imul
lea
ds
add
sbb
xor
test
push
or
cmp
in
cmc
pop
xchg
repnz
mov
test
mov
enter
sub
and
mov
sbb
xchg
sub
lret
addr16
scas
rcrb
scas
leave
cmp
bound
mov
lret
and
lods
push
pop
gs
lods
repnz
inc
sti
addb
dec
adc
xor
add
bound
imul
add
mov
jae
dec
aaa
stc
out
add
jbe
add
bound
in
push
cld
std
cmp
adc
sub
mov
loopne
dec
add
pop
lds
push
xchg
into
bound
aad
imul
dec
movsl
mov
adc
sbb
add
dec
add
sbb
mov
xchg
hlt
test
add
add
jnp
mov
sub
cwtl
cmp
loopne
loop
in
test
add
pop
add
sbbl
add
jle
cltd
sub
mov
add
iret
icebp
push
mov
sti
jb
pop
or
pop
xchg
imul
add
sbb
push
or
add
outsb
add
stc
mov
pop
cmp
sbb
sbb
stos
int3
dec
add
sbb
add
pop
adc
lods
jge
push
adc
add
and
pop
repnz
fadd
dec
xor
popf
jnp
sbb
sub
addb
dec
inc
add
je
aas
into
sub
cwtl
pop
push
push
jbe
push
push
test
pushf
adc
stos
cmp
lret
fildl
jp
xchg
adc
fidivl
push
shlb
inc
add
mov
int
mov
sbb
mov
jge
push
movsb
and
add
push
add
add
rorl
adc
inc
hlt
mov
lea
dec
pop
add
adc
mov
fsts
mov
ds
mov
repz
push
cli
jae
add
nop
leave
jmp
sti
cmp
push
mulb
push
add
lods
data16
add
addl
adcb
xor
dec
hlt
inc
add
add
dec
add
icebp
lods
xchg
jne
dec
push
daa
lret
int
lret
mov
cli
ss
shrl
fidivl
test
pushf
lahf
ds
xor
xor
jnp
ss
ljmp
add
pusha
add
fcom
xchg
mov
pop
daa
cmp
cmp
pusha
add
add
data16
std
pushf
movsb
mov
add
cmp
jmp
and
xor
pop
mov
shll
adc
je
push
std
inc
lcall
xchg
js
xchg
loope
add
test
mov
jbe
lods
pop
fmul
push
sub
int
imul
xchg
popf
sbb
lahf
inc
add
fincstp
inc
fucom
jle
gs
mov
fnstenv
int3
xlat
add
dec
add
xchg
lods
push
aad
jmp
and
imul
pushf
stos
pop
fwait
xchg
xchg
out
add
or
lcall
test
movsl
fsubl
mov
jno
mov
add
in
jl
xlat
adc
dec
add
out
xchg
test
sub
imul
mov
in
jbe
push
add
movsl
aad
hlt
inc
push
jo
sbb
dec
add
in
xchg
cmp
pop
loop
dec
add
mov
push
loopne
mov
cmp
mov
sbb
test
lcall
mov
cmpsb
dec
add
hlt
aad
cwtl
push
add
into
std
in
call
mov
sbb
jecxz
mov
jbe
sub
dec
pop
push
mov
push
xor
pop
adc
icebp
adc
sbb
cmp
sahf
xchg
test
cs
xchg
pusha
add
popa
leave
in
in
sbb
mov
jge
or
sub
jl
push
add
or
and
ja
add
jo
add
shrl
jo
outsl
push
mov
add
out
add
mov
add
add
mov
loopne
in
mov
cmp
call
sbb
testl
mov
lret
adcb
mov
rorb
push
clc
pop
add
in
pop
into
in
lcall
jbe
aaa
lods
mov
fwait
mov
cli
jo
inc
add
enter
aad
roll
jae
add
add
enter
and
sbb
xor
ja
add
stos
dec
add
cltd
cwtl
or
mov
nop
and
push
xchg
test
inc
pop
fmull
jo
mov
loope
xchg
jmp
add
push
cwtl
lock
sub
insl
inc
add
aaa
sbb
out
in
xchg
imul
movsl
pop
mov
popf
fcoml
add
xorb
in
add
cmp
or
rorb
add
cmp
test
testb
pop
jae
add
in
add
mov
or
or
lods
mov
add
mov
xlat
jbe
rclb
mov
aas
mov
add
add
mov
fdivr
mov
xchg
or
into
hlt
pop
divl
sbb
inc
sbb
xor
clc
jmp
mov
in
mov
sete
mov
add
cmp
adc
jmp
xchg
xchg
popl
pop
loope
add
arpl
fwait
icebp
bound
mov
aad
add
lock
and
adc
cmp
add
lcall
fistpl
push
repnz
loopne
sbb
movsl
xor
sbb
mov
adcl
push
jae
jno
adc
xor
add
xor
jge
cmc
pop
add
lods
or
call
popf
ds
xlat
push
push
add
pop
movsb
jmp
and
add
pop
dec
mov
pop
inc
mov
push
test
add
sub
leave
inc
fistps
cmpsl
mov
jl
add
outsb
add
cmpsl
or
push
and
mov
xor
lods
add
add
mov
sbb
sub
lock
adc
add
or
popf
add
out
xchg
outsb
add
mov
ljmp
nop
push
jae
adc
dec
add
sti
add
dec
add
pop
cld
adc
lret
inc
lds
loopne
add
in
aad
xchg
fs
sti
gs
mov
xchg
cmp
repz
repnz
jmp
dec
lcall
dec
add
jns
outsl
ror
jg
mov
loopne
out
mov
add
aad
sub
add
sub
mov
add
jl
neg
jg
popf
test
pop
mov
xor
add
inc
add
cmp
jae
push
pop
dec
das
add
and
sbb
lods
test
push
cmp
mov
aam
sub
add
andb
movsb
xchg
dec
add
pop
push
adc
pop
inc
add
cmp
pop
into
data16
add
inc
add
fnstsw
lods
inc
pop
ucomiss
sbb
and
jl
add
push
fcom
call
inc
add
sti
dec
add
xor
test
lods
mov
xchg
push
cmp
push
sahf
push
push
pop
movsl
dec
add
adc
sti
cli
push
into
jg
add
xlat
sbb
mov
add
insl
mov
sbb
das
xor
pop
and
jo
hlt
daa
ss
dec
enter
flds
cmpsl
dec
add
in
andl
icebp
add
cwtl
enter
icebp
ret
cmp
aaa
je
push
add
fdivl
negb
insb
add
dec
inc
add
mov
xorb
shrl
lahf
clc
ljmp
test
dec
xorb
call
dec
add
push
sub
hlt
sahf
jne
mov
ds
mov
jb
divl
arpl
push
cmp
gs
or
xchg
rclb
hlt
stos
mov
das
add
nop
nop
lock
ljmp
mov
xchg
mov
int
jbe
clc
fnsave
dec
loopne
mov
inc
add
es
add
mov
push
push
sahf
into
int3
je
add
cmp
jno
pop
mov
int
lods
test
sar
mov
cmp
sub
call
add
mov
inc
addb
mov
sub
jmp
xor
add
or
sbb
pop
cmp
push
inc
add
lcall
jbe
int
add
outsl
cmp
pop
mov
outsl
pop
mov
inc
in
xchg
nop
sub
xchg
add
xor
std
or
mov
fldt
sbbb
stos
xchg
bound
mov
add
add
inc
popa
fldl
pushf
andb
mov
pop
push
movsb
sub
cmp
std
sarl
pop
shr
call
and
xchg
nop
dec
add
add
cmpsl
mov
cmp
add
push
hlt
sarl
xchg
add
shll
insl
xchg
sub
lds
jl
mov
push
add
push
daa
push
cpuid
sub
pop
xor
or
stc
xchg
and
inc
and
pop
sub
push
popf
mov
mov
ret
arpl
mov
adcl
mov
add
dec
mov
shrb
jmp
xor
aam
xchg
dec
add
xchg
in
popf
jp
pusha
add
cwtl
imull
adc
out
popf
add
rclb
add
mov
pop
xchg
cmc
jle
dec
shr
nop
jmp
clc
shll
leave
cmpsb
xchg
in
rcr
inc
add
fnsave
mov
mov
adc
stc
stos
mov
adc
add
add
add
and
add
repnz
add
pop
inc
and
xchg
dec
pop
loopne
mov
into
push
xchg
push
fldcw
loopne
cld
mov
pop
or
movsb
in
mov
add
lea
test
sbb
push
push
ficompl
pusha
add
adc
fdivs
xor
pop
fmull
add
or
fdivr
in
push
push
mov
ficomps
cmp
inc
xor
push
mov
test
dec
daa
test
or
inc
jecxz
add
jmp
inc
add
xor
pop
pop
sti
ret
fsubrl
in
js
add
xor
pop
out
stos
cmpsb
or
int3
sbb
clc
and
dec
add
ja
movsl
pop
adc
mov
push
pop
inc
add
push
adc
int
sub
jg
ret
xchg
ja
push
jne
xchg
sbb
lds
add
mov
neg
lret
ljmp
hlt
xlat
xor
inc
add
repnz
xor
lret
cmp
inc
fisubs
inc
add
add
ja
cmp
xor
lods
add
inc
aad
mov
jns
add
iret
dec
or
mov
push
add
lcall
movsb
negb
add
or
dec
add
add
pop
stos
mov
sub
pop
fwait
movsb
jno
int
sub
out
push
add
aaa
shlb
leave
push
into
dec
add
pop
gs
add
sub
movsl
inc
loope
add
or
mov
push
jl
add
add
mov
dec
add
xlat
or
pop
nop
pusha
add
push
push
loope
or
jne
jnp
adc
xchg
sbb
push
sub
arpl
sub
rcl
loope
clc
adc
stc
notl
push
mov
shr
fwait
add
mov
call
orb
add
aad
pop
in
cld
dec
stc
pushf
push
mov
dec
add
inc
add
jb
push
popf
cmp
push
shrb
add
jg
sub
test
ja
into
stos
je
test
fdivl
subb
cmpsl
data16
add
sub
cmpb
cltd
add
mov
cmp
adc
add
xchg
cmp
mov
out
jns
add
jo
jge
testl
scas
popa
test
insl
mov
mov
mov
add
add
pop
test
mov
xchg
ret
in
ljmp
add
shll
int
les
jmp
mov
loop
push
mov
mov
xchg
dec
add
jle
and
xor
mov
fnstenv
test
sbbl
jecxz
pop
or
add
xchg
sbb
sbb
test
icebp
add
jne
xchg
pusha
add
fiadds
add
dec
sub
out
lret
push
fnsave
add
lods
stos
sub
add
aas
mov
pop
leave
je
mov
mov
sbb
add
mov
aaa
lods
add
movsl
outsb
add
add
add
pushf
data16
add
inc
pop
push
arpl
xor
inc
add
mov
call
xchg
rolb
xor
fdivrs
xlat
mov
mov
mov
rorb
push
out
sahf
lea
mov
add
add
imul
add
mov
movsb
or
sub
cltd
cmp
adc
leave
inc
push
lods
stc
mov
clc
inc
jp
pop
andl
sub
xchg
scas
ret
add
pop
inc
xor
mov
sub
add
add
ja
repz
push
pusha
add
add
fcompl
sti
aad
pop
adc
push
popf
inc
xor
mov
orl
add
adc
mov
add
mov
cld
ret
sbb
sub
notl
add
outsl
mov
or
sub
fsubrl
js
add
outsb
add
mov
and
pop
fwait
aam
lods
mov
xor
pop
scas
sub
push
jo
add
pop
push
add
jne
mov
cmp
pop
mov
imul
iret
inc
add
add
ss
add
icebp
stos
lds
mov
add
and
sub
and
icebp
push
cld
cltd
inc
add
lds
jl
popa
pop
in
int3
jle
xchg
dec
xlat
out
add
jle
add
or
and
mov
negl
inc
add
inc
add
mov
cmp
jae
add
inc
add
inc
add
out
cltd
dec
scas
pop
outsb
add
sbb
mov
jbe
xchg
push
cli
daa
push
sbb
data16
jo
int3
inc
fst
sbbb
mov
fsubrs
pop
dec
hlt
cwtl
mov
xchg
mov
push
add
out
les
scas
cmp
add
andb
ds
and
add
in
insl
jnp
or
adc
pop
test
add
out
pop
or
add
cmp
fisubrl
pop
jno
push
inc
pushf
cmp
rclb
test
aam
cmp
shrl
and
add
outsl
pop
and
pop
jp
jae
cli
or
add
mov
mov
out
add
insb
add
pop
xlat
mov
into
das
xchg
inc
dec
add
push
mov
jnp
outsl
fistps
in
sub
adc
sub
aas
test
clc
inc
add
push
push
inc
add
xchg
add
mov
add
imul
imul
sbb
fadds
ljmp
add
sarl
push
inc
aas
cmc
dec
push
pop
loop
add
daa
cmp
mov
ljmp
add
dec
sahf
push
int
jp
lds
jp
addr16
jp
gs
pusha
add
fimull
popa
mulb
nop
aaa
push
pop
mov
mov
mov
pop
push
jp
mov
add
xor
popa
scas
push
inc
add
jb
movsl
loope
push
cmpsb
xchg
push
inc
add
enter
pop
leave
clc
imul
sti
mov
push
aas
fstl
xchg
insb
add
ljmp
xlat
add
setb
jb
push
shlb
push
repz
add
mov
mov
xorb
jns
xor
add
cltd
dec
add
mov
loope
clc
scas
push
add
pop
jge
sbb
and
jns
mov
inc
add
jns
sahf
dec
and
pop
adc
and
add
inc
sub
in
push
lea
test
cli
call
jo
cmp
je
dec
mov
movsl
das
xlat
inc
add
add
nop
loope
scas
and
add
or
out
xchg
mov
add
daa
sahf
xchg
outsl
push
xchg
jae
pushf
cmp
dec
sbb
out
insl
mov
cmc
sbb
pop
jge
mov
clc
inc
inc
add
rcll
notb
add
mov
add
andb
inc
cmp
dec
add
cmp
data16
xor
add
and
cmc
push
or
sub
adc
add
mov
clc
xchg
fisttpll
ficompl
xchg
xor
add
mov
mov
push
xchg
mov
cmp
cmpb
mov
xchg
mov
push
lahf
adc
sbb
lds
test
xchg
fdivrs
faddp
sbb
repnz
and
or
add
fldl
add
and
dec
add
mov
add
mov
inc
push
test
enter
add
pop
inc
add
sbb
mov
adc
jno
lahf
cmp
daa
mov
adc
sbb
icebp
push
out
xchg
loop
mov
add
clc
push
xchg
or
and
mov
and
nop
jno
js
push
add
clc
jbe
add
jbe
loope
daa
dec
add
adc
fdivrl
add
fisttpll
std
pop
mov
add
fidivrs
add
mov
push
add
shlb
pop
outsl
js
jg
pop
cli
or
stos
xchg
pop
cmpsl
ret
js
shrl
add
push
xor
sub
lahf
jns
mov
repnz
adc
divl
and
mov
add
jl
mov
add
push
mov
lcall
cli
js
test
or
nop
gs
add
mov
cmc
jmp
adc
push
add
rep
add
jl
add
cmc
insb
add
lret
pop
xor
imul
xor
out
push
into
nop
lods
xchg
fcoms
dec
rcrl
lds
xchg
out
push
mov
xchg
in
jmp
stc
scas
cmp
mov
mov
aad
add
loop
leave
loop
mov
add
andb
adc
ds
stos
movsl
pushf
pushf
pop
in
push
and
shrb
and
mov
add
test
mov
fcompl
mov
xor
add
les
aaa
xorl
mov
add
mov
inc
add
das
pop
or
in
flds
js
add
add
inc
add
pop
nop
add
enter
xchg
add
cmpsl
mov
xchg
push
add
push
stc
adc
add
push
add
in
mov
aaa
cmp
fwait
and
call
loope
pop
cmp
mov
sahf
nop
mov
or
notl
cmc
mov
add
pop
dec
mov
orb
sbb
stos
xchg
xchg
aaa
adc
fisubrs
or
sti
xor
push
faddl
rorl
cltd
sub
xchg
dec
add
pop
rorl
add
loope
cmp
cmc
jae
push
add
sub
subl
sti
insl
leave
add
cwtl
jo
and
mov
add
adc
test
lods
xlat
popf
lods
or
sub
je
jnp
jns
into
sbb
push
imul
push
dec
add
sub
add
mov
stos
add
inc
pop
add
adc
rcr
jb
enter
add
mov
in
js
xchg
add
sarb
imul
mov
dec
add
cmp
insb
add
icebp
insl
and
test
sub
add
mov
add
lds
add
ficoms
hlt
pop
ljmp
jle
fmull
sub
mov
std
arpl
les
out
js
sbb
jno
ret
mov
and
dec
add
add
push
sub
lahf
or
jle
gs
sub
cli
jns
pop
pop
or
call
add
mov
push
jle
pop
sub
mov
push
add
lret
daa
cmp
lcall
lods
xor
mov
jmp
comiss
ss
outsl
mov
iret
lods
and
cmpsl
mov
add
fildll
rcll
add
iret
in
mov
hlt
rcr
push
mov
xchg
jle
add
fsts
inc
mov
stos
sub
add
jp
push
cld
sarl
pop
lea
xchg
cli
and
shrb
das
xor
add
xchg
lea
dec
adc
and
into
xor
loope
push
add
pop
adc
sbb
mov
test
xor
sahf
mov
jmp
icebp
sahf
mov
insb
add
std
in
mov
ficoml
xchg
int3
hlt
cmp
cmp
xor
inc
add
clc
push
mov
das
js
shll
movsb
lcall
add
dec
add
sbb
ret
int
cmpsb
mov
ret
fstpt
int3
test
mov
add
or
imul
mov
mov
add
int3
push
mov
and
or
cmc
aaa
test
push
aam
add
add
int3
pop
inc
pop
aad
sbb
aas
cmp
add
adc
stc
pop
jp
push
add
xor
xchg
loop
cmc
inc
cld
cld
mov
scas
imul
inc
add
insl
dec
add
test
outsl
notb
add
dec
add
push
fwait
adc
idiv
push
outsl
xorl
xlat
add
loop
push
add
cmp
cmpsl
sub
xor
xor
pop
daa
inc
fmul
stc
js
and
int
xlat
js
mov
add
cwtl
bound
popf
push
adc
pushf
lods
cmp
insl
add
sbb
mov
ljmp
int
sub
ret
out
pop
jl
aad
ds
rcll
loopne
push
push
add
ljmp
pusha
add
das
sbbl
xlat
add
out
xchg
loopne
es
pop
mov
add
add
mov
sbb
js
mov
roll
add
aam
jmp
arpl
xor
arpl
sahf
subb
add
dec
mull
add
xchg
fwait
popa
mov
sbb
test
cwtl
lret
cltd
mov
jo
enter
je
add
lahf
add
cmp
push
lahf
aam
inc
add
in
enter
repz
out
ja
dec
or
das
dec
xor
fisttpl
daa
pop
jae
popf
lock
cltd
lds
mov
lret
lret
cmp
mov
xchg
jns
mov
add
add
cld
sbb
lcall
inc
xor
add
add
add
insl
add
push
cmpl
add
pop
scas
pcmpeqw
or
test
repz
push
mov
jg
out
in
lret
jg
add
lret
repnz
jae
lret
lret
pop
rcr
pop
dec
add
std
xchg
out
push
adc
mov
out
and
add
xor
inc
sahf
adc
add
xor
mov
fbstp
add
repnz
int
adcl
in
push
mov
ret
add
ds
xor
dec
or
sub
rolb
sahf
test
int
pushf
adc
fistps
adc
push
mov
cmp
mov
les
mov
data16
mov
add
fcmovnbe
sbb
cmp
mull
ret
jbe
or
aam
leave
inc
dec
jnp
add
das
dec
and
mov
and
sbbb
sub
in
jg
lea
aam
add
xor
xor
push
dec
push
inc
jge
imul
or
pop
sub
or
jnp
xchg
push
add
mov
stc
mov
pop
sub
das
in
les
add
add
add
mov
aad
mov
cli
pop
adc
xchg
xchg
and
daa
repz
sbb
jo
mov
add
repz
std
scas
adc
lock
and
mov
stc
ds
inc
add
fisttpll
add
sahf
push
push
add
add
push
pop
jo
push
add
test
jae
into
xor
sbb
push
add
lret
les
pop
in
mov
fstpt
xor
ljmp
push
int
push
mov
inc
out
pop
xchg
mov
push
movsl
aaa
push
dec
popa
repz
fistpll
add
xchg
or
insl
pop
movb
pop
mov
xchg
sbb
mov
loope
inc
add
sub
and
dec
add
lea
jle
inc
add
and
loop
xchg
mov
lcall
enter
add
push
inc
pop
inc
inc
add
out
jae
testl
popa
popl
in
push
std
shll
push
shl
bound
mov
and
into
inc
add
xor
ss
add
push
xor
mov
iret
and
push
push
fwait
xor
flds
scas
bound
jecxz
std
sbb
add
xchg
loopne
fucomp
enter
cltd
cld
insb
add
add
out
dec
out
xchg
adc
or
xor
maskmovq
fdivp
mov
dec
add
mov
xor
xchg
xor
add
aaa
inc
add
dec
add
mov
stos
and
hlt
adc
push
addl
out
xor
aas
shlb
fnstenv
add
sbb
lret
daa
bound
adc
mov
cmp
inc
std
out
jo
jecxz
fmull
rcrl
pop
sbb
add
fisttps
add
jnp
int
add
es
rcrl
repnz
mov
add
cld
adc
sbb
loop
xchg
lahf
outsl
inc
sbb
lods
push
xor
sbb
jle
add
cmc
jecxz
add
jno
add
das
xchg
and
shrb
sarl
mov
add
sub
or
adc
mov
mov
add
rcrb
loopne
xchg
xor
cwtl
aad
add
add
add
xchg
mov
and
sub
das
call
out
add
js
or
jmp
inc
test
inc
xor
add
inc
add
std
adc
add
pop
call
pop
mov
xchg
mov
jno
inc
add
mov
ret
fisubl
ds
pop
shl
ds
les
add
sub
and
jl
xchg
aad
aaa
adc
lahf
test
push
aam
mov
test
jae
add
subl
aas
loopne
icebp
mov
clc
cmpsb
movsb
js
push
push
add
add
data16
jae
xchg
iret
mov
mov
adc
mov
sub
add
movsl
push
sarb
push
cmc
lret
xor
add
mov
pop
sub
add
sub
pop
shlb
lcall
pop
in
and
sbb
incb
js
sbbb
es
ret
sub
std
xchg
dec
mov
mov
bound
aaa
jle
pop
je
mov
pop
pop
mov
jl
inc
add
jl
push
add
mov
pop
push
add
mov
enter
addr16
add
sub
xchg
add
ds
inc
add
ret
lahf
cmpsl
rclb
adcl
hlt
cmp
sbb
dec
add
out
add
ljmp
repnz
adc
push
lods
push
rcrb
mov
mov
pop
into
popf
in
sti
popa
and
mov
fimuls
add
add
jge
fstpt
mov
shrb
imul
pop
mov
into
popa
jb
pop
dec
outsl
bound
in
loope
add
outsl
test
iret
push
in
outsl
clc
ja
ja
add
aad
aaa
lods
xor
dec
add
popa
cltd
outsl
jmp
addr16
pop
call
fsts
sub
add
and
aam
popa
in
mov
ja
lea
rcrl
inc
add
add
add
orb
scas
inc
add
mov
cmpsb
loope
cmc
mov
mov
mov
push
xchg
xor
std
dec
mov
inc
inc
pop
insb
add
test
xor
push
jbe
js
pop
xchg
xchg
mov
add
push
int
loop
push
xchg
sbb
lock
mov
sub
mov
adc
sbb
sub
popf
stos
imul
stc
adc
out
into
dec
call
pop
aas
push
cmpsb
pop
add
fsubp
pop
dec
cmc
sub
sub
shll
add
pushf
and
cmpsb
and
add
cmp
sti
cwtl
sbb
gs
movsl
add
push
sbb
add
push
in
cmp
sub
cmpsl
mov
push
outsb
add
xchg
jg
fnsave
dec
pop
dec
sti
hlt
scas
bound
aam
popf
iret
and
push
in
mov
jg
ja
xlat
cmpsb
adc
push
loopne
cmp
add
adc
incb
push
add
xor
outsb
add
add
loope
xchg
lret
push
mull
add
shr
jmp
inc
add
xchg
insb
add
cmpsl
out
inc
add
mulb
add
lock
add
mov
push
add
rcrb
fcoms
dec
add
rcrl
push
push
sbb
ret
rcll
das
lods
pop
loopne
cli
push
sahf
inc
add
fwait
daa
fnstenv
dec
add
jmp
outsl
sbb
sub
xchg
add
inc
in
adc
pusha
add
mov
push
outsb
add
testb
cmp
adc
imul
adc
add
fsubr
dec
pop
and
cmp
pop
push
add
xorl
iret
pop
adc
sub
imul
loope
shrl
bound
scas
sahf
inc
add
inc
add
ret
call
fwait
push
cltd
sub
shl
cwtl
sbb
add
add
mov
mov
jg
fldt
add
add
repnz
mov
insl
addb
add
dec
add
dec
mov
and
popa
popa
add
dec
int3
insb
add
sub
neg
cmp
inc
push
add
and
roll
fiaddl
iret
cld
mov
sub
or
add
sbbl
xchg
pop
in
mov
gs
leave
jo
mov
add
imul
lods
mov
mov
stc
xchg
test
sub
mov
mov
dec
add
add
das
sbb
add
popa
loopne
out
sbb
mov
adc
xor
inc
add
jp
push
pop
imul
rolb
lods
mov
add
iret
clc
pop
sbb
cmc
les
add
pop
inc
add
add
mulb
sub
stc
bound
add
in
loop
jecxz
add
xchg
inc
add
mov
inc
add
adc
add
pop
inc
add
add
mov
into
jb
jns
daa
sbb
repz
mov
xchg
stc
das
inc
add
add
nop
repnz
add
cmpsb
ret
mov
aam
inc
add
leave
mov
add
inc
inc
add
mov
popa
cmp
add
jno
mov
imul
lods
jmp
mov
iret
push
xchg
xchg
add
js
add
adc
push
xchg
test
or
shlb
mov
fs
mov
adc
ret
add
jae
sub
jl
jp
fistps
push
xchg
scas
adcb
lret
jae
add
ja
cltd
jne
add
push
fistps
xor
hlt
fdivs
ljmp
add
aam
pop
lods
icebp
mov
xor
pop
push
insl
mov
leave
lds
dec
add
lds
xlat
leave
xor
sub
repz
aad
lods
jns
out
push
lock
mov
jp
inc
add
adc
and
das
or
add
fstpl
add
pop
bound
andl
inc
add
add
out
daa
movsl
pop
sbbb
add
add
xchg
out
pop
lods
rclb
and
adc
xlat
push
add
sub
add
mov
pop
xchg
in
mov
test
or
push
iret
jge
ja
cmp
or
lret
add
dec
add
int3
xchg
shlb
icebp
sub
dec
add
push
xchg
xchg
add
push
push
lret
jmp
adc
outsl
xchg
jle
sbb
fistpl
or
insb
add
insb
add
add
mov
add
loopne
addr16
add
jbe
sbb
inc
sbb
sub
rorl
xor
dec
jge
std
and
adc
and
stc
mov
lods
push
or
jbe
add
mov
cli
mov
add
dec
add
push
in
xor
xchg
add
push
xor
mov
cld
sarb
push
data16
std
scas
and
lods
push
fcoms
in
cmp
pop
xchg
push
in
push
add
push
xchg
test
mov
imul
in
pop
add
setge
shrl
sbb
lcall
dec
add
mov
in
test
sub
dec
add
adc
add
sbb
in
mov
push
push
loope
jge
xchg
fwait
or
fwait
inc
mov
jle
mov
and
sub
mov
out
faddp
mov
faddl
cmp
dec
add
bound
mov
mov
hlt
shl
ja
div
dec
fisttpll
lcall
add
sarl
pop
jns
mov
insb
add
add
sbb
incl
add
cmpsl
mov
push
fisubl
mov
add
scas
jl
push
xor
cmpsl
sbb
mov
push
loop
jmp
fnstsw
test
add
int
cmc
cltd
adc
roll
cmpsb
add
movsb
sub
in
insl
lods
shl
sbb
inc
add
mov
aam
sbb
pushf
xor
jp
mov
out
insb
add
or
cli
repnz
stos
mov
jbe
add
sbb
add
xlat
mov
clc
push
xor
or
and
add
inc
add
mov
adc
cmpsb
pop
lret
out
mov
sub
call
inc
xchg
call
jmp
movbe
scas
mov
add
aam
add
push
lret
jp
mov
add
pop
enter
jno
mov
pop
mov
addr16
add
sub
lea
xchg
pop
gs
add
repz
or
inc
add
sbb
iret
pop
icebp
fidivrs
lock
fmul
sub
mov
cwtl
stc
xchg
sarl
rcrl
sbb
jne
pop
push
sub
jmp
out
adc
add
stos
loopne
dec
add
sub
fbld
push
push
lahf
mov
adc
test
add
std
pushf
fdivrl
sub
add
add
jle
enter
add
pop
insl
in
push
scas
lcall
push
dec
pusha
add
inc
add
dec
sub
out
add
lock
stos
ja
xor
mov
add
lahf
iret
jmp
cmpsl
inc
adc
rcr
push
leave
dec
add
mov
add
add
push
test
xchg
out
loope
into
mov
sub
outsl
mov
mov
xlat
neg
je
rol
or
mov
xchg
incb
add
mov
pusha
add
push
add
loope
lret
in
jae
sbb
pop
jge
and
lock
inc
ljmp
outsb
add
cld
pop
testl
add
sbb
dec
add
push
cmp
out
jge
lahf
call
jmp
inc
add
negb
add
cmp
jns
mov
jns
rol
enter
aam
shll
repnz
test
xor
out
xor
push
outsl
mov
add
bound
sbb
push
xor
stos
jns
push
sbb
sub
cltd
sarb
sbb
mov
jno
add
jp
push
inc
jge
out
lods
outsl
cmp
push
add
ljmp
sub
add
fs
daa
insl
mov
cmp
add
jp
add
repnz
in
call
and
enter
insl
push
add
jb
add
popf
push
xchg
cld
jno
loope
jl
stc
cltd
push
sub
in
xchg
cmp
gs
add
xor
push
add
sti
je
jnp
lds
and
xor
add
sbb
add
pusha
add
call
iret
cmp
ds
outsb
add
sbb
add
out
pop
add
cmpsl
jbe
ret
adc
mov
sbb
scas
inc
add
imul
add
adc
call
ret
pop
mov
fwait
sbb
add
jp
add
mov
add
cld
stos
and
push
add
xor
fnstenv
push
cmp
lea
add
fimull
out
cmp
mov
mov
pop
jb
movsb
sbb
add
shrb
inc
add
stos
jle
shrl
test
in
fldcw
movsl
mov
mov
in
add
bound
sarb
mov
mov
enter
mov
add
mov
mov
add
fnsave
dec
in
push
mov
in
cmp
outsb
add
add
push
add
fwait
inc
push
sub
testb
iret
xor
cmp
mov
sbb
cld
push
xchg
sub
add
and
sbb
jecxz
jecxz
addl
add
add
daa
mov
mov
hlt
mov
outsb
add
inc
add
dec
push
push
add
dec
pop
xchg
mov
sbb
xchg
adc
or
sbb
cmp
orl
push
adc
or
popf
test
lcall
in
mov
hlt
mov
leave
cwtl
sub
rclb
and
inc
xchg
mov
dec
fldl
add
sub
add
cmp
lods
lcall
data16
lcall
inc
add
call
xchg
inc
add
je
dec
fmull
leave
out
dec
add
add
leave
mov
pop
stos
xchg
shl
scas
add
sbb
jbe
test
add
popf
pop
lahf
xabort
cmc
out
sub
sti
xchg
lret
ss
sarl
rcrl
bound
stos
xchg
xor
mov
lret
cs
sbb
mov
in
daa
imul
add
inc
sahf
cli
mov
xor
add
pop
pop
mov
add
adc
loop
stos
jl
push
add
mov
pop
push
jl
pop
aas
sub
fwait
pop
add
push
ret
fldl
mov
cmpsb
mov
xor
add
add
add
insb
add
pop
push
sbb
xchg
adc
shrl
mov
leave
fcomip
jae
enter
int3
add
xchg
div
arpl
jl
test
add
mov
add
clc
movsb
push
and
popa
add
addr16
jns
adc
aaa
enter
add
add
aas
push
lahf
dec
add
cmp
aaa
imul
mov
add
cmp
loopne
in
xchg
xor
cmp
adcl
dec
add
mov
mov
pop
mov
dec
scas
mov
add
xchg
cmpsl
push
pop
cmp
leave
add
add
int3
notb
inc
add
cmc
cltd
lods
add
cli
xchg
add
hlt
and
add
xor
stos
cmp
xchg
gs
out
rol
mov
cmp
xchg
stc
dec
push
xor
addb
mov
aas
add
fwait
addr16
or
push
lahf
push
add
add
mov
outsl
ss
cmp
cs
mov
fstpt
sti
dec
add
int
insl
and
cmp
je
add
mov
add
lret
and
in
adc
adc
ret
stos
xchg
xor
sub
das
inc
jns
ss
pop
pop
pop
shlb
xor
movsb
cmp
lcall
pop
imul
inc
adc
inc
add
inc
add
xor
movsb
dec
insb
add
ja
je
add
xchg
das
and
sbb
mov
mov
loopne
sbb
out
and
mov
adc
ret
xor
sbb
jno
add
dec
add
out
fildl
pusha
add
test
cmpsb
ret
xchg
add
ds
lret
pushf
adcl
icebp
or
xchg
mov
lcall
andl
aaa
aaa
jle
pop
push
and
mov
inc
add
lret
mul
out
cltd
xchg
or
ljmp
les
repz
pop
xor
jae
jl
push
adc
inc
add
hlt
dec
mov
xlat
out
sbb
adc
mov
add
rol
lock
mov
sbb
mov
ret
test
mov
add
inc
lret
mov
xlat
lret
add
aaa
cltd
dec
add
test
movsl
dec
add
mov
or
cmp
clc
xchg
mov
gs
sub
dec
jge
add
dec
add
lret
repnz
xchg
and
jo
add
adc
xchg
test
cwtl
jmp
fisubrl
inc
dec
pop
push
inc
add
push
jle
jbe
add
ret
data16
add
movsl
pop
push
inc
pusha
add
xchg
and
int3
pop
cmp
inc
cwtl
sbbl
in
cmpsl
mov
adc
fistl
daa
lods
adc
add
jle
enter
add
cmp
xor
xchg
arpl
aas
mov
scas
or
jmp
jl
sbb
loop
push
enter
xor
add
lret
lcall
dec
xor
adc
gs
push
jo
add
jmp
xor
push
add
adc
rolb
pop
fstpl
sbb
and
lods
xlat
cmc
pusha
add
or
cmpl
add
scas
and
jge
pop
sti
stos
or
dec
les
mov
and
aaa
sbb
and
test
in
imul
or
pushf
add
cwtl
test
out
test
stos
add
jle
add
cld
test
orps
or
call
in
ret
xor
popa
lea
jbe
add
mov
mov
push
add
inc
add
add
icebp
jge
push
mov
cmp
and
mov
movsb
mov
fistpll
test
scas
sbb
aas
loopne
loopne
push
loope
sub
xchg
sti
mov
add
test
xchg
popf
add
jne
add
add
decb
scas
and
xchg
xlat
roll
xchg
lret
add
push
xlat
pop
popa
aad
jns
int3
adc
cmp
and
nop
out
xor
pop
lret
jnp
pop
scas
dec
add
and
ljmp
inc
add
std
push
mov
pop
ja
mov
inc
add
out
sahf
push
jmp
imul
dec
cmc
inc
pop
jp
push
mov
mov
std
lock
jo
dec
add
sti
dec
lcall
add
or
stos
stos
jmp
pop
and
aam
ja
add
or
jnp
add
pop
bound
and
jne
inc
mov
movsl
test
or
mov
insb
add
adc
sbb
pop
je
add
xchg
sbb
adc
sbb
fcomi
push
sahf
int3
lock
adc
cli
aaa
inc
outsb
add
add
sbb
mov
and
push
add
js
mov
mov
sarl
jp
btr
add
or
imul
and
inc
xor
repnz
or
xor
push
push
add
mov
mov
or
cmp
test
pop
stos
imulb
iret
push
add
bound
and
fwait
add
inc
add
fstps
stc
xchg
dec
add
jl
imul
push
mov
xor
sbb
jbe
rclb
mull
loop
add
mov
movsl
push
sti
cmp
dec
add
je
shlb
popa
dec
add
outsb
add
lcall
cmpsb
hlt
sub
lahf
lret
pop
loopne
ss
rol
out
mov
add
pop
push
loope
scas
jl
out
sbb
inc
add
xchg
cmpsl
mov
loopne
mov
ret
test
int3
pushf
into
mov
ljmp
add
ret
scas
mov
testl
mov
mov
add
add
add
nop
push
push
in
shr
or
sbbb
and
pop
cmpb
cmpsb
sub
xchg
jbe
stos
insb
add
sbb
mov
jae
ficoml
inc
add
sub
mov
add
pop
cmpb
movlps
mov
add
jns
cmpb
pop
cmp
das
inc
adc
sbb
jecxz
xchg
enter
jbe
add
add
ljmp
loopne
jmp
mov
fimull
add
add
xor
add
jle
jno
fdivp
pop
inc
add
dec
mov
mov
repz
pusha
add
sub
pop
dec
add
dec
ja
add
popa
jp
jmp
mov
call
cmp
add
xchg
push
add
pop
fstp
fld
dec
add
bound
cli
dec
mov
mov
repz
and
cmp
icebp
push
push
rcrl
xchg
loope
mov
xchg
dec
xor
adc
mov
data16
xchg
fbstp
and
cli
jno
sub
sbb
xor
rorl
or
fdivrp
mov
in
inc
add
add
push
pop
aaa
inc
fmull
cmp
repz
add
pushf
and
push
add
cmp
jb
add
mov
jmp
shrl
fistps
arpl
push
add
pop
mov
test
add
add
mov
ds
sub
iret
push
call
rcl
adc
rcrl
and
adc
xchg
inc
sub
xchg
mov
insb
add
or
inc
add
inc
cli
jo
leave
faddl
xor
adc
add
jno
lret
mov
subb
ljmp
cltd
shl
xchg
popa
popa
scas
cmp
pop
push
aad
ja
xchg
mov
out
shrb
out
pusha
add
loope
jo
push
add
add
cmp
or
outsl
adc
loop
aaa
test
into
aam
add
test
jg
mov
ret
imul
mov
scas
jg
imul
add
jg
push
adc
imul
add
dec
jb
scas
mov
into
pushf
pop
cmp
dec
add
add
pop
inc
add
repnz
int
jecxz
das
xlat
lret
lcall
ret
lods
aas
push
sahf
sti
mov
stos
fdivs
sub
scas
loopne
rcll
xorb
add
cmp
js
arpl
inc
sar
scas
push
iret
xchg
mov
cld
scas
jb
add
shr
cmp
mov
divl
dec
add
push
add
jb
mov
int3
movsb
sub
jge
push
mov
enter
jns
lret
add
jl
orb
and
in
and
dec
aad
add
add
dec
add
xlat
sub
rorb
push
dec
add
fisttpll
fsub
mov
xlat
lahf
cld
mov
std
sbb
int3
sti
jle
inc
ror
aam
clc
test
int
stc
mov
fiadds
sbb
cmp
lock
add
sub
nop
out
loopne
add
mov
pop
cmp
iret
popa
jge
xor
add
add
cmpsb
orl
sbb
adc
add
sub
ss
push
rcrl
ss
add
lea
test
xor
call
call
cmovno
jle
dec
add
add
jae
insl
xor
xchg
push
sbb
adc
call
or
add
add
or
cmp
push
jmp
sub
arpl
in
xor
add
add
loope
and
pop
fidivrl
adc
xchg
xchg
and
fadds
add
sarl
ret
xor
push
out
or
xchg
mov
xor
add
insb
add
loope
inc
add
dec
add
push
imul
icebp
adc
ret
cld
jge
insl
sbb
aam
xchg
xlat
mov
out
mov
adc
xor
movsl
pushf
out
out
jns
sbb
jae
jnp
xchg
scas
rorl
insb
add
jne
mov
inc
add
in
ret
gs
testb
lds
mov
popf
out
ds
jg
or
and
ljmp
push
lret
lods
inc
fstps
add
fsts
loope
and
ljmp
jge
jae
pop
rcrl
push
push
adc
out
dec
add
in
or
ss
pushf
push
jbe
mov
cmp
clc
movsb
test
cltd
daa
jp
or
mov
jns
ds
mov
rcr
xorl
in
cmp
negl
leave
nopl
mov
adcb
add
lds
in
push
push
mov
sub
add
pusha
add
ficomps
add
movsb
push
sbb
add
enter
push
dec
mov
adc
add
mov
add
mov
test
jp
xor
sub
add
mov
test
imul
aas
pop
add
ret
pop
int
rcr
cli
cmp
xchg
sbb
fidivrl
in
pop
push
imul
push
sar
jle
loopne
push
in
adc
dec
movsb
jbe
or
adc
dec
add
out
sti
xor
aad
add
stos
cli
jae
out
mov
out
push
mov
xchg
es
mov
mov
ja
add
and
ror
aam
mov
xchg
xchg
xor
push
jbe
xor
mov
add
mov
add
mov
outsl
or
cmp
sbb
fwait
mov
mov
sti
or
push
add
dec
aaa
cmp
sbb
sahf
lea
mov
mov
outsb
add
out
fidivl
and
sbb
out
or
js
and
fisubrs
fcomip
sbb
add
pop
test
mov
mov
add
faddl
add
add
pop
rorb
add
xchg
cmp
mov
les
sub
ret
jl
add
jg
lret
testb
fdivs
fwait
mov
push
mov
add
stc
mov
ss
mov
add
push
dec
add
aaa
mov
add
out
bound
add
push
into
fidivs
add
cmp
add
pop
andl
jo
fisubl
sub
add
add
and
sahf
add
hlt
ret
inc
add
add
add
sub
mov
push
call
mov
outsl
jmp
add
jb
lret
xor
lods
cmp
cmp
mov
dec
mov
out
in
lahf
mov
jmp
andl
leave
sub
movsl
jae
push
arpl
test
cmp
sub
pusha
add
icebp
addb
jbe
add
add
add
repz
sahf
xchg
xchg
nop
pop
jle
and
sbb
add
dec
cmpsl
pop
ret
mov
sbb
inc
add
xor
push
stos
pop
mov
pop
jne
aas
mov
fwait
or
sbb
loop
call
icebp
pushf
dec
mov
lds
lds
jnp
lahf
out
xor
fldl
add
jge
cmc
xor
mov
add
scas
or
jmp
mov
add
or
jno
mov
inc
cli
in
mov
add
test
repz
add
hlt
cmp
mov
push
mov
add
and
cmp
pusha
add
jae
shlb
add
xor
sbb
inc
sub
ret
and
adcl
repz
add
jg
sub
jne
rep
cmp
mov
mov
jle
jge
add
pop
xchg
stos
or
cmp
rcrl
sub
pop
fnstsw
or
sahf
shr
clc
sbb
mov
inc
test
sti
xor
or
mov
add
pop
ljmp
loope
xchg
repnz
add
mov
jo
jnp
jb
add
add
dec
cld
cmpsl
jne
vorpd
sahf
cmp
pop
addr16
dec
sbb
add
outsb
add
add
sbb
push
add
add
test
mov
movsl
adc
pop
mov
shrb
into
pushf
push
sarb
mov
xlat
pop
sub
add
addr16
bound
decl
lret
in
cld
pop
andl
notb
pop
push
inc
add
sbb
dec
add
cmp
loop
jecxz
jecxz
jb
dec
icebp
jg
add
add
add
out
insl
pop
adc
mov
xchg
adc
add
and
add
or
imul
jbe
push
add
ret
rclb
add
popf
aad
sub
pop
leave
jb
pop
shlb
xor
and
jmp
cltd
add
jg
mov
fsub
fcompp
lret
and
cmc
pop
cmp
sysret
push
loopne
outsl
mov
mov
or
mov
add
rol
popf
or
add
jg
ljmp
add
add
ljmp
dec
add
add
test
notl
jmp
mov
mov
sahf
out
push
push
add
add
mov
mov
jge
push
jge
in
jbe
fdivrl
cmp
bound
jae
mov
movsb
mov
icebp
push
lcall
into
orl
sub
aad
or
jns
adc
pusha
add
mov
sbb
inc
outsl
sub
xchg
and
jecxz
sub
andb
ret
fmul
cmpsl
es
adc
inc
rolb
clc
insb
add
sub
add
sub
add
push
mov
std
cmpsb
cmpsl
xorb
add
scas
add
int3
jge
mov
add
dec
add
add
xchg
adc
jo
shr
xlat
xor
aaa
add
fildll
pushf
and
test
lret
nopl
add
ficomps
xchg
test
repz
loopne
pop
adc
out
add
mov
add
jle
pop
xor
and
inc
test
adc
lcall
inc
test
aad
add
pop
lea
in
pop
or
cwtl
insb
add
jb
add
in
xor
push
cmpsl
dec
xor
bound
outsb
add
int3
clc
in
or
das
sbb
xor
jae
sbb
cltd
and
jle
fildll
cltd
cmpsb
sub
add
cltd
stos
mov
add
jae
pusha
add
aas
jo
and
comiss
outsb
add
leave
sbb
cmpsb
ss
mov
fidivs
ljmp
idivl
lret
cwtl
push
inc
pop
cmp
lods
mov
pop
ljmp
mov
sarl
and
mov
jbe
jns
stc
mov
jno
and
jbe
cmpsb
mov
mov
add
xchg
pop
