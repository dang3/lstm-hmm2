and
aam
lahf
les
sbb
dec
adc
movb
jmp
add
xchg
add
test
lret
add
add
out
rep
and
push
add
sub
in
add
add
js
add
add
mov
jbe
movsb
add
popf
aaa
enter
js
cli
movb
add
add
xchg
add
mov
test
fwait
xchg
add
pushf
cmovp
add
mov
popl
scas
mov
add
add
add
mov
add
mov
pop
in
sub
and
add
leave
stos
inc
xchg
mov
pop
dec
sbb
mov
add
xchg
dec
mov
lret
test
sbb
cli
mov
add
add
lods
mov
cmpsl
fidivl
fistpl
xor
cld
cmp
pop
and
add
mov
add
add
mov
hlt
add
xor
mov
dec
and
into
int
pop
cmp
jo
mov
lret
imull
add
xor
inc
add
cli
push
add
sub
mov
mov
mov
and
add
mov
arpl
mov
sbb
add
cmp
add
adc
adc
or
lret
jge
pop
data16
fcmovnu
xlat
dec
add
add
jo
pop
cmp
inc
add
rorl
mov
int
lock
add
xchg
lea
sbb
add
add
test
sub
add
vpsllw
cwtl
jns
mov
or
add
push
mov
mov
mov
adc
xor
mov
xchg
add
movsl
lods
call
pusha
add
add
add
push
sti
inc
add
test
and
and
cmp
jb
pop
sahf
mov
pusha
add
test
jno
pop
hlt
add
pop
rolb
or
add
mov
pop
outsl
push
add
out
mov
push
dec
dec
pushf
sahf
ror
inc
fisubrs
add
aas
sbb
test
test
add
testb
xchg
adc
jmp
and
mov
imul
add
jne
stos
xor
xchg
stos
jns
jp
fistl
add
mov
scas
adc
out
adc
add
data16
mov
add
mov
jb
nop
add
xor
add
adc
fucomi
push
lcall
pop
mov
sbb
mov
ljmp
leave
push
sub
iret
icebp
mov
add
das
xchg
rolb
lret
xor
enter
push
js
rolb
cmpsb
add
cli
inc
add
mov
dec
mov
add
jnp
add
push
xchg
add
add
xor
mov
outsb
and
mov
mov
fucom
add
imull
pop
cmc
cmp
bound
mov
xchg
add
or
add
mov
cmpl
fisubrs
cli
outsl
and
aas
cmpsl
lret
leave
sbb
adc
ds
lahf
sub
add
add
add
and
movsb
add
add
push
add
add
add
xchg
add
jp
mov
adc
push
mov
cmp
add
mov
stos
aaa
movsl
xor
inc
addr16
pop
lret
xchg
xchg
push
add
cli
push
add
jnp
sbb
add
fstl
sbb
pop
outsl
js
call
mov
std
jecxz
pushf
or
cmpsl
mov
add
int
inc
add
add
add
add
xchg
or
pop
or
add
add
popa
cmc
subl
bound
mov
mov
mov
add
add
add
add
repnz
add
sub
aad
lock
fildll
xchg
aam
sub
jns
aas
inc
adc
sbb
add
mov
arpl
add
add
xchg
add
add
jp
push
mov
insb
loopne
or
add
push
jp
add
or
inc
add
add
add
sbb
pusha
add
dec
ja
add
jae
punpcklbw
mov
mov
fdivs
loopne
fxch
jecxz
inc
add
add
add
add
xlat
dec
cs
and
andl
add
repnz
add
xor
sahf
int3
les
mov
popf
jno
jns
mov
push
add
lods
xor
mov
in
add
add
sbb
add
mov
mov
cmovs
jecxz
in
xchg
add
mov
add
pop
and
push
mov
pop
xchg
divl
adc
pop
shll
es
pop
sub
loopne
pop
lock
add
rolb
jl
sub
add
add
das
hlt
add
xor
call
mov
and
ficomps
js
addb
jns
int
sub
push
cmp
dec
ljmp
pop
add
insb
repz
cs
and
xor
mov
jb
xor
addb
addr16
lods
movb
sbb
les
test
mov
pop
rorl
sub
xor
out
pop
fstp
push
add
add
sti
sahf
dec
jo
mov
xor
sub
add
add
scas
push
add
jle
outsb
int3
dec
fwait
push
add
jae
movsb
add
mov
icebp
rolb
xchg
add
add
inc
test
push
add
aam
mov
sarl
jne
dec
add
mov
add
sti
out
xchg
stos
les
inc
add
add
rorl
inc
sbb
sbbl
pop
xchg
jecxz
mov
or
jo
inc
add
mov
add
lds
cmp
cs
sub
cmp
xchg
add
add
in
xor
ja
add
add
loope
xchg
int
add
xchg
add
movb
testb
addb
andl
mov
push
add
mov
pushf
pushf
cmp
xchg
add
jle
push
add
fidivl
inc
add
inc
add
add
add
mov
xchg
rolb
sarl
iret
sub
sbb
mov
shrl
out
pop
xor
and
pop
das
xor
and
mov
lcall
pop
mov
testb
aam
adc
and
sarl
mov
mov
add
mull
push
pop
movb
fmull
enter
ret
sbb
rolb
bound
mov
addb
add
and
mov
add
mov
add
add
in
add
jne
add
ja
subl
mov
xor
dec
mov
addr16
add
cwtl
xorl
or
add
add
test
fmul
mov
dec
dec
pusha
add
dec
sub
add
call
ljmp
add
pop
xor
scas
xor
push
inc
add
out
das
aaa
int
and
add
mov
add
inc
add
add
popf
das
jge
add
add
test
xchg
dec
jmp
mov
mov
adc
push
add
in
enter
adc
jmp
ljmp
jnp
mov
mov
add
iret
pop
sub
add
into
jmp
rolb
or
sbb
les
adc
add
add
test
mov
stc
pop
adc
lds
sub
fidivrs
shrl
mov
repz
incl
add
mov
lods
popf
dec
stc
push
add
xchg
adc
mov
xor
mov
push
add
add
loop
and
and
and
mov
test
or
xchg
add
pop
nop
add
repz
lods
out
add
mov
add
xchg
add
add
add
pushf
xchg
add
add
pop
inc
stos
pop
repz
bound
mov
aaa
mov
pop
lods
sbb
push
add
iret
cmpsl
cmp
cmp
cmp
add
xlat
in
cmpsl
out
and
mov
pop
fstps
add
in
cwtl
and
add
mov
add
or
mov
push
add
sbb
sub
push
xor
pusha
add
outsl
dec
mov
inc
add
outsl
xchg
inc
add
sbb
cltd
outsb
dec
dec
add
dec
sti
pop
xchg
aaa
add
repz
sbb
cmp
push
ja
add
out
mov
les
shll
add
movsb
add
repnz
push
add
add
rolb
xlat
dec
inc
nop
add
add
add
stos
add
cmpsl
in
cmpsb
add
add
push
add
std
add
xor
mov
or
add
jne
test
fiaddl
add
inc
stos
push
cmp
add
mov
push
int
add
xchg
add
add
add
and
mov
adc
lock
push
add
in
call
pop
enter
and
mov
adcl
add
mov
lock
mov
add
adc
add
pop
lret
push
add
add
ds
xlat
adc
add
mov
add
jmp
add
bound
mov
add
add
pop
rolb
out
add
or
and
nop
add
add
xor
push
add
mov
cmpsb
add
add
add
stos
push
add
mov
pushl
in
sbb
test
dec
mov
or
mov
and
add
add
xchg
fsubp
push
mov
sbb
add
ret
mov
or
push
jno
add
imul
adc
add
addb
lea
mov
lods
rolb
jecxz
iret
xor
pushf
addb
mov
push
add
xchg
add
jle,pt
dec
mov
aas
mov
pushf
outsl
popa
jne
add
sbb
leave
lods
rcrl
inc
lds
popa
adc
add
rcll
inc
fucomip
inc
in
cmp
lods
xor
loopne
jo
cmpsb
add
mov
js
add
jmp
add
add
mov
add
ret
add
add
add
pop
dec
mov
sbb
sub
mov
xchg
add
mov
push
test
add
movsl
add
dec
addb
add
ljmp
jmp
or
mov
push
add
rorl
add
sbb
add
add
sti
clc
mov
orl
lods
ljmp
enter
cli
lods
stos
int3
pop
rolb
add
out
mov
add
lret
or
dec
push
lock
out
add
add
cli
xchg
ja
pop
push
ret
in
and
add
rolb
push
jns
cmp
mov
add
or
sub
loope
rolb
loope
add
jl
xchg
sub
cltd
mov
or
jnp
fwait
test
shrl
mov
xor
add
dec
rolb
jne
or
xchg
add
sub
add
add
sbb
jnp
stos
icebp
sub
insb
pop
adc
aad
int3
sub
mov
mov
dec
cmp
sbb
fld
push
add
sbb
and
scas
pusha
add
in
lock
fcompl
les
imul
mov
add
outsb
in
pop
inc
jecxz
cs
add
inc
add
sub
inc
add
dec
in
add
xor
ja
loop
pop
xchg
xchg
bound
mov
leave
dec
mov
lret
fsubrl
xchg
xchg
add
add
test
jmp
sub
add
inc
add
add
inc
pop
imul
fs
fwait
add
mov
lsl
sti
in
jbe
testl
push
test
sbb
push
add
cld
push
add
fisttpl
aam
mov
mov
into
cmpsl
push
add
aam
adc
pop
and
add
push
mov
jne
add
in
mov
jo
popa
inc
sbb
push
add
xlat
mov
fstl
cld
mov
fcmovnbe
lret
xor
mov
push
leave
int3
sahf
jmp
push
inc
mov
pop
add
mov
add
dec
push
add
cmp
add
out
jmp
add
mov
outsb
jae
or
inc
add
adcl
mov
pop
sti
loope
mov
or
add
stos
bound
mov
leave
repnz
mov
test
in
or
in
sub
push
push
push
cld
call
sub
mov
cs
es
ss
lea
push
push
call
cmp
je
es
lea
push
cs
es
call
test
jne
jmp
lret
icebp
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
lea
add
repnz
mov
sub
sub
push
pop
push
push
jmp
jmp
add
add
mov
xor
xchg
and
mov
add
pop
insb
lahf
aad
push
mov
scas
cmovle
cmp
cltd
imul
add
add
add
test
or
add
leave
int
xchg
leave
nop
add
lock
add
js
add
pop
jge
sbb
jae
dec
insl
or
jl
push
add
add
pop
insb
fmuls
cmpsb
add
cmp
and
lods
push
sbb
mov
insb
adc
add
in
fcoml
sub
or
fwait
sub
out
cwtl
loop
fidivrl
mov
add
add
mov
cmc
add
add
gs
push
add
shll
outsb
inc
in
lret
or
mov
test
and
das
add
test
mov
outsb
push
xchg
xor
add
cmp
roll
add
movsl
dec
aam
and
jecxz
mov
xorl
add
movsl
mov
and
jp
data16
cmp
dec
test
dec
ret
inc
sahf
loopne
out
push
add
dec
fldl
xchg
addr16
add
add
add
data16
cmp
out
mov
bound
mov
add
inc
mov
lock
sbb
add
jp
add
mov
and
mov
ds
mov
pop
cmp
popf
mov
aad
add
lods
dec
and
mov
add
out
mov
cwtl
cmpl
add
add
inc
lods
test
pop
inc
add
shrl
fcompl
ret
insl
icebp
sub
lcall
js
add
fnstsw
jo
push
inc
mov
nop
add
add
popa
imul
mov
testb
stos
fidivs
jne
lock
add
int3
mov
push
cmp
int3
lods
scas
popf
lods
xor
outsl
push
mov
xor
add
xchg
pop
jecxz
add
add
js
push
cli
mov
add
in
xchg
lcall
push
sub
addb
add
dec
inc
add
rcll
and
mov
cmc
sahf
push
add
cmp
push
xor
cmp
addb
loop
mov
rolb
mov
cld
push
stc
jbe
add
pop
and
add
jle
push
add
or
jle
jae
je
push
add
cli
jmp
inc
add
dec
loopne
lcall
loop
movsb
add
push
fbld
inc
add
mov
xchg
add
add
fidivrl
stc
jp
jp
add
call
adc
ljmp
mov
jne
jmp
ljmp
lods
mov
inc
insl
js
jl
add
addb
add
add
add
add
add
ds
jg
fwait
adc
lcall
add
shrl
adc
and
mov
push
add
std
mov
xor
sub
mov
dec
ret
sbb
shll
cmp
pop
testb
inc
add
mov
add
add
add
aam
cld
loopne
xor
movsl
popa
cmp
inc
addb
xlat
add
aaa
mov
sbb
or
mov
addb
xor
add
addl
inc
add
call
push
add
mov
xrelease
add
add
stc
pop
gs
cmp
jecxz
lea
push
add
add
add
jae
addb
add
cmp
dec
outsl
fildl
or
out
arpl
fwait
jmp
add
in
add
cmp
add
in
mov
jae
arpl
add
mov
mov
jmp
add
xchg
cmpsb
add
cmp
jl
and
imul
jecxz
add
add
mov
cltd
add
lock
les
in
in
xor
add
into
push
add
add
pop
addb
ja
das
inc
jo
pushf
pushf
or
add
inc
push
fldl
enter
incl
mov
add
mov
inc
sub
add
jl
add
rorl
push
add
mov
out
sbb
repz
add
in
mov
filds
mov
inc
add
add
add
mov
sbb
sbb
loope
add
or
push
add
add
xor
or
xor
dec
mov
loope
push
add
add
add
push
add
add
add
sub
mov
lods
in
notl
add
pop
adc
scas
cmp
and
mov
and
fcom
add
inc
lret
gs
xor
mov
add
ret
push
xchg
add
test
jnp
xor
repnz
ss
adc
jns
xor
mov
add
call
hlt
add
scas
int3
push
add
mov
rolb
ljmp
jb
xor
mov
aaa
data16
xor
mov
sbb
add
dec
fcomps
mov
add
push
xchg
or
mov
mov
mov
cmp
add
and
mov
or
jmp
add
dec
stos
push
add
sbb
add
scas
fwait
pop
inc
add
mov
mov
add
lods
add
std
loope
mov
data16
add
loopne
fnstenv
add
dec
xchg
add
push
addr16
sub
add
add
push
sahf
cmp
rcrl
repnz
gs
mov
cmp
lcall
add
sbb
bound
mov
add
lcall
xchg
arpl
jmp
insb
pop
dec
rcll
aad
enter
dec
int3
imul
cltd
inc
add
mov
adc
mov
inc
add
pop
push
test
add
mov
inc
dec
push
gs
adc
mov
add
add
adc
bound
mov
add
mov
hlt
add
aaa
repz
shrl
mov
add
sub
mov
rolb
dec
push
addb
aaa
pusha
add
leave
stos
rolb
mov
js
shr
pop
je
sub
inc
add
xor
push
add
add
imul
dec
imul
jae
add
andl
out
mov
add
daa
inc
add
mov
add
add
lcall
or
andl
inc
jne
scas
faddp
fwait
add
mov
inc
out
out
push
add
test
loop
cmc
inc
gs
add
push
add
add
adc
int
lea
add
push
clc
jo
lea
aam
js
add
adc
push
add
inc
add
push
pop
pop
jne
jae
inc
add
push
mov
jne
inc
add
add
add
ret
aas
push
add
add
cmp
in
movsb
add
add
add
mov
push
add
inc
add
add
lret
xor
pop
nop
add
jle
lcall
femms
rorl
mov
add
in
nop
add
loopne
leave
fldcw
or
hlt
add
addb
add
add
lods
sbb
add
push
mov
pop
ds
test
rol
add
arpl
pusha
add
and
sub
fstpt
mov
sub
add
fcoms
jle
mov
fcoml
mov
lods
test
dec
fwait
rolb
pusha
add
and
xchg
into
mov
adc
cmp
jae
add
shll
fidivrl
add
mov
add
push
adc
cli
cmp
xchg
pop
push
add
add
cmp
mov
mov
pop
lahf
std
jbe
xchg
add
mov
mov
mov
add
sub
jmp
in
add
lods
aaa
push
add
test
sahf
mov
mov
lock
push
add
add
add
pop
push
add
imul
add
jnp
cmp
mov
in
fldcw
je
repz
loop
aaa
sub
xchg
add
ret
and
cmpsb
add
add
ds
popa
mov
add
negl
dec
push
add
add
add
and
loope
lahf
testl
inc
sub
mov
mov
add
add
add
add
test
push
add
jp
xor
pusha
add
stc
les
addb
add
sbb
add
pop
jb
add
sub
aaa
jno
in
add
dec
xlat
mov
icebp
adc
add
mov
mov
add
add
out
lret
mov
sub
jo
out
mov
add
jne
sub
push
add
jb
or
add
mov
sbb
cmp
add
add
cmp
jmp
adc
mov
or
push
add
jle
cmpsb
add
int
nop
add
add
jmp
fcomps
add
aam
inc
cs
add
add
add
mov
mov
add
mov
outsb
stos
shll
mov
add
dec
xchg
add
add
push
add
stc
cmp
inc
xchg
adc
adc
mov
mov
shll
add
add
dec
stos
addb
add
pop
or
aas
cmp
xor
add
add
iret
stos
or
cmp
cmpsb
add
add
loopne
gs
jecxz
bound
mov
dec
inc
lds
inc
add
xlat
cmp
add
call
push
add
movsl
mov
add
add
arpl
stos
decl
add
inc
add
pop
xchg
pop
addb
ret
adc
xchg
int3
inc
add
rorl
xchg
add
fdivrs
into
sti
xchg
ja
and
mov
mov
lret
fcompp
adc
add
mov
or
add
mov
fisttpl
push
add
jne
add
add
into
inc
add
add
sbb
add
scas
or
add
notl
movsb
add
mov
lret
insb
sub
sub
add
out
out
cmp
inc
mov
dec
and
movb
or
mov
dec
imul
push
cmp
mov
mov
mov
pop
mov
inc
add
xor
add
repnz
add
ret
out
mov
jbe
jl
add
data16
mov
fimuls
movsl
xor
sbb
dec
mov
aam
and
scas
ds
add
add
cmpsb
add
jp
addb
mov
in
cmp
data16
lods
push
test
or
hlt
add
pop
out
out
mov
insb
int3
aam
mov
mov
and
jns
add
mov
sahf
push
add
cwtl
je
push
arpl
hlt
add
orl
mov
insl
mov
add
add
mulps
add
add
mov
jo
sarl
mov
add
insb
or
repz
or
add
and
orl
xor
jbe
or
in
mov
je
jg
jnp
push
dec
xchg
push
or
enter
rolb
adc
cmc
push
pop
mov
add
mov
ficoml
adc
out
shll
add
test
sub
and
push
jge
cmp
jg
jecxz
adc
mov
in
aam
outsl
mov
xor
stos
mov
jle
mov
add
in
pop
orl
xor
mov
cmp
add
mov
pop
add
and
repnz
in
mov
dec
pop
in
pop
out
fdivrp
sub
add
cmp
in
add
sub
add
push
or
and
add
push
add
pop
mov
out
mov
add
mov
sti
push
cmpl
ret
outsl
xor
adc
mov
xchg
gs
pop
leave
inc
add
add
add
shll
stos
enter
xchg
movsl
sbb
pop
sahf
int3
cmp
add
stos
mov
pop
stos
sub
sbb
push
add
cwtl
jg
add
add
xor
inc
popa
cmp
daa
mov
jo
add
mov
dec
mov
add
lret
pop
cmp
mov
lea
lret
dec
add
push
push
jb
dec
sub
xchg
adc
add
push
popf
rolb
pop
fsubl
mov
ja
add
dec
add
inc
ja
cld
movb
add
xor
clc
dec
mov
mov
lods
dec
or
fdivrs
add
xchg
adc
fwait
inc
cmp
cmpsb
add
inc
push
cmp
mov
add
add
add
mov
lock
add
insb
add
add
add
add
mov
fisubrl
add
add
dec
adc
mov
iret
cmc
add
adc
pop
adc
mov
sub
inc
add
add
jo
mov
out
je
jno
add
add
and
mov
dec
push
inc
xchg
aaa
mov
fsubrs
hlt
add
add
push
bound
mov
call
and
mov
jae
add
cwtl
data16
add
inc
add
add
daa
xlat
test
sbb
fmuls
into
pop
orl
cmp
mov
xchg
add
sbb
popf
outsb
outsl
out
out
add
pop
adc
les
scas
lcall
add
add
add
xchg
mov
out
rolb
add
stos
jne
mov
out
and
add
add
pop
inc
add
add
adc
fdivr
adc
xor
dec
sbb
adc
sub
cmp
mov
iret
jp
pop
mov
or
dec
and
testl
add
add
sbb
lods
pop
and
and
cmc
sbb
mov
mov
pop
dec
adc
call
add
test
addb
testb
add
arpl
add
mov
ret
xor
mov
addb
fists
jae
add
add
iret
add
jne
add
lcall
insl
mov
dec
paddb
ficoml
pop
adc
leave
add
mov
cltd
mov
push
add
add
test
jp
adc
and
mov
add
xchg
or
add
inc
push
add
or
xchg
addb
fisttpll
add
movsl
mov
pop
loope
rolb
inc
ja
sbb
add
add
xchg
and
mov
jne
sub
add
dec
js
bound
mov
add
add
add
stc
cmpsl
xchg
add
out
mov
xchg
sub
add
add
mov
pop
inc
add
test
ja
lock
cmp
loope
add
add
add
add
mov
xchg
add
add
fwait
push
dec
pop
aas
ljmp
cld
push
add
stos
mov
jge
in
sub
dec
pop
xchg
add
add
ret
fucomi
jmp
add
rolb
lret
mov
sbb
jp
mov
movsl
adc
push
cli
add
mov
add
jmp
jno
add
int
into
nop
add
hlt
add
add
scas
cmp
call
dec
xchg
out
clc
jmp
add
data16
add
mov
add
add
add
jmp
sbb
movsl
pop
xchg
push
add
repnz
add
fisubrs
fistpll
ret
pop
orl
pusha
add
lahf
cmp
aaa
lods
imul
push
add
movb
gs
add
add
add
add
rcll
mov
test
test
add
sahf
rorl
add
add
add
and
stos
mov
adc
aas
mov
dec
hlt
add
add
add
mov
jp
mov
jns
push
add
rolb
int3
out
idivl
add
add
push
add
adc
hlt
add
jle
adc
cld
xchg
fstp
inc
add
add
add
add
or
add
add
pop
add
mov
push
shrl
add
add
mov
add
pop
aaa
add
mov
test
mov
lcall
add
or
pop
lret
push
out
mov
add
gs
out
jbe
test
insl
push
out
insb
icebp
loope
sub
xchg
add
lea
stos
xor
lea
mov
fcmovb
push
add
pop
aas
and
mov
jmp
push
jnp
jne
leave
adc
enter
mov
mov
testb
xchg
nop
add
cld
add
pop
sti
hlt
add
out
outsb
push
add
add
sbb
jl
rolb
aaa
lcall
imul
add
je
push
loopne
shr
adc
hlt
add
add
jg
adc
aam
loope
add
pop
and
mov
push
lret
orl
add
mov
mov
pop
push
insl
movsl
arpl
jmp
mov
push
outsb
xchg
in
sub
inc
add
dec
ficompl
add
xor
push
add
add
testb
aad
add
add
fiadds
fists
enter
xchg
mov
add
push
adc
add
into
mov
bound
mov
mov
lock
nop
add
stos
push
ficoms
addb
add
gs
add
inc
fisttpl
dec
xchg
add
push
add
add
jge
add
test
test
add
and
mov
iret
or
add
mov
in
lret
add
add
add
xchg
clc
pop
mov
add
push
add
add
repnz
add
shrl
rolb
mov
aaa
fstpl
and
mov
add
mov
adc
outsl
and
and
mov
inc
add
popa
nop
add
aas
xchg
popa
add
add
pop
inc
add
add
or
add
add
add
sbb
lahf
dec
icebp
stc
mov
in
fstpl
popl
sbb
sti
rcll
in
dec
pop
jae
add
mov
jne
mov
add
pop
inc
add
mov
les
movb
pop
or
stc
lods
inc
ret
insl
and
mov
add
add
add
mov
sub
or
add
sahf
repz
js
mov
jg
dec
pop
mov
mov
sbb
out
sbb
mov
push
ret
and
testb
in
movsl
popa
js
add
add
lret
cmp
pop
loope
mov
lret
push
pop
add
arpl
add
sbb
fstl
add
gs
cld
or
add
movsb
add
add
adc
add
xor
ret
mov
out
cmc
dec
rolb
aad
mov
test
sbb
mov
add
add
dec
fcoml
lods
cmc
mov
ds
and
sti
in
add
cmp
mov
jae
mov
add
insb
lcall
mov
hlt
add
add
sbb
stos
rcr
add
add
hlt
add
aas
lods
cmp
jecxz
push
inc
jmp
add
add
sub
pushf
pop
sbb
mov
add
popf
fbstp
ja
loopne
jae
pop
in
cmc
pushf
xchg
jns
add
add
rdtsc
push
add
jbe
jb
dec
sahf
adc
push
pop
mov
lcall
mov
fstp
pop
ficoml
lahf
adc
loopne
push
add
add
iret
mov
inc
add
mov
rolb
movsl
sub
xchg
add
int3
clc
xor
and
mov
add
add
mov
out
xlat
jo
cmp
xlat
mov
dec
sub
js,pt
sbb
add
jb
push
add
xor
mov
jmp
add
adc
xor
push
add
jg
add
leave
adc
dec
pop
mov
cmp
xchg
add
adc
into
jecxz
das
pop
sbb
add
add
push
icebp
mov
lds
add
lcall
mov
rolb
stos
push
add
int3
push
sub
stos
popa
fdivrs
mov
add
mov
cltd
inc
xchg
ficoml
shrl
aad
sti
out
andl
add
inc
lock
test
call
xor
sub
xchg
stos
out
or
inc
jg
test
add
testb
and
add
add
dec
mov
add
bound
mov
sbb
fwait
and
mov
xor
jmp
cli
dec
mov
jp
mov
cmp
nop
add
add
sub
cmpsl
add
sbb
pop
sahf
nop
add
add
push
sbb
fbld
jmp
cmp
mov
stc
bound
mov
mov
cli
int3
mov
nop
add
add
add
es
add
cmp
bound
mov
hlt
add
sti
sub
add
mov
mov
cmp
insb
mov
inc
vunpcklps
jmp
jmp
sub
test
and
das
cmp
rolb
ja
pop
data16
adc
movsl
test
jmp
loop,pn
lods
add
push
add
add
test
rorl
adc
ds
cmpsb
add
push
add
add
movsl
les
sbb
push
xchg
imul
jbe
mov
add
addb
adc
add
lahf
push
add
add
mov
add
push
xchg
add
dec
push
pop
imul
aas
cmp
imul
aam
mov
cld
rolb
add
daa
push
add
stos
pop
push
add
xor
cmp
cltd
adc
enter
add
stos
ss
add
scas
sbb
add
cmpsb
add
xor
adc
push
add
out
inc
add
mov
xor
add
sti
mov
dec
ja
add
push
cwtl
rolb
add
jg
mov
add
jo
das
enter
out
aaa
jo,pt
sbb
add
fsub
ret
add
mov
push
and
mov
dec
dec
or
xor
mov
fmuls
mov
sub
add
test
inc
add
cmp
mov
int
jno
data16
dec
adc
add
cmc
dec
sub
jmp
and
lcall
mov
add
mov
mov
mov
enter
add
jnp
mov
fsubl
push
push
movsl
fcmove
addb
push
add
mov
add
fsubrl
fistl
mov
or
add
mov
or
add
dec
adc
jl
pop
add
add
mov
mov
imul
cmpsl
dec
mov
les
shll
jmp
add
add
fwait
push
add
cld
dec
push
add
add
mov
negl
add
add
sub
add
aad
jnp
add
bound
mov
sbb
adc
mov
add
adc
cmp
testb
arpl
add
mov
add
sbb
fucomip
pop
orl
add
out
add
add
lods
mov
adc
movsb
add
icebp
movsb
add
cs
add
xchg
lock
testl
add
xchg
or
rcl
jnp
and
out
add
mov
xor
lock
dec
int
adc
cmp
xchg
movsb
add
mov
push
fcomip
cmp
mov
clc
ds
inc
push
add
add
pop
aas
rcrl
ds
add
add
mov
xchg
lcall
icebp
push
add
add
lock
out
xor
shr
aaa
or
in
js
mov
add
add
fnstsw
daa
sub
dec
cmp
add
push
mov
dec
mov
repnz
cs
mov
add
push
add
add
sbb
aaa
scas
mov
lods
lods
shrl
add
lock
add
add
xchg
add
lock
and
into
xor
cltd
aaa
hlt
add
xor
cltd
push
add
xor
mov
bound
mov
cmp
push
add
xor
add
addb
add
add
push
add
lret
jge
int
sbb
rolb
int3
hlt
add
scas
ret
mov
push
aaa
cs
inc
add
xlat
cmc
stos
push
add
push
add
add
fstl
lahf
add
test
mov
xchg
fnstenv
add
insb
jns
sub
adc
fiaddl
add
icebp
lock
cmpsl
mov
pop
dec
nop
add
or
cmp
xor
pop
adc
xchg
sbb
and
add
add
pusha
add
aas
in
mov
add
jmp
cmp
add
sarl
xchg
mov
add
add
push
arpl
inc
faddp
outsl
sbb
cmp
jecxz
rolb
cmp
aam
stos
push
add
mov
xchg
add
cwtl
lock
add
addb
push
add
or
lahf
fstl
icebp
lret
mov
bound
mov
add
jbe
lods
jnp
inc
sbb
outsb
incb
add
imul
sbbl
add
cs
xchg
xchg
lods
dec
stos
repz
sub
iret
aad
jno
hlt
add
xor
sub
pop
or
push
addb
cwtl
inc
and
mov
add
adc
xlat
add
rolb
xchg
add
ja
add
add
mov
push
mov
add
inc
add
fnstenv
mov
subl
sub
add
mov
insl
lahf
and
insb
addb
add
inc
in
scas
arpl
push
add
pop
out
pop
cmp
dec
rolb
adc
dec
addl
clc
dec
mov
out
or
inc
pop
test
in
mov
fs
add
cmp
repnz
add
jp
xchg
sti
add
jl
push
add
add
jb
push
add
and
repz
psrld
xchg
std
push
sbb
xor
sbb
pop
movsl
push
add
add
add
rorl
xor
mov
push
add
mov
xchg
jle
add
add
sub
jne
add
add
jg
jp
and
mov
add
add
jmp
iret
mov
imul
add
add
push
add
ljmp
add
add
mov
lock
jmp
fwait
pop
in
dec
repnz
dec
lods
imul
add
mov
push
stos
imul
adc
fistpll
pop
push
fisubrs
testb
pop
and
mov
rolb
jl
dec
das
cmp
add
mov
mov
mov
std
mov
add
adc
add
call
jge
adc
dec
fsincos
out
hlt
add
add
mov
pop
push
add
adc
adc
push
add
add
xor
pop
test
dec
stos
scas
in
sub
mov
add
sbb
or
add
xchg
sbb
add
mov
stos
pop
jo
les
jmp
mov
rolb
fnstsw
push
ret
xor
pop
jg
shll
add
in
lds
mov
add
inc
cmp
pop
in
sti
push
add
daa
test
rcll
insl
jmp
or
sub
add
cmc
or
add
add
test
add
push
sbb
or
mov
jns
inc
mov
inc
sahf
out
add
sbb
jae
dec
mov
lods
xor
cwtl
leave
jae
cltd
hlt
add
sbb
jne
scas
pusha
add
mov
lea
into
pushf
push
and
popf
dec
lret
je
imul
add
sti
cwtl
inc
int
mov
test
xchg
lds
mov
or
add
dec
xor
stos
loope
mov
or
add
mov
daa
movb
jno
jbe
lret
in
xor
mov
fdivrs
push
bound
mov
ficoml
add
movsl
adc
add
push
push
add
xchg
add
bound
mov
cmp
mov
imul
xchg
test
or
jbe
ficomps
lahf
icebp
mov
xor
sbb
and
jns
mov
popf
or
xor
imul
into
das
mov
mov
add
lcall
cmp
add
xor
sub
fmull
hlt
add
pop
in
leave
xlat
jmp
mov
in
xchg
mov
xchg
mov
inc
mov
push
insb
push
push
gs
dec
push
test
ret
xor
push
movsb
add
or
mov
outsb
sub
jecxz
loop,pt
jl
rcl
add
xchg
add
sub
loope
mov
push
addb
add
int3
pop
pushf
cmp
add
dec
add
inc
add
sbb
xchg
add
xor
add
les
enter
in
push
add
js
add
cs
and
mov
add
in
lock
pusha
add
and
push
add
add
js
lods
js
add
add
pusha
add
rolb
cld
push
sub
cwtl
xor
sub
popa
fwait
nop
add
add
sub
add
mov
cmpsb
add
mov
xchg
add
rolb
sub
add
mov
add
data16
add
cmpsb
add
or
sbb
fldt
mov
dec
mov
sbb
add
bound
mov
lret
add
add
cs
cmp
add
fdivr
cmpsb
add
jbe
mov
mov
push
add
add
das
icebp
test
add
add
add
rsm
and
cmc
je
in
cmp
sub
int3
movb
dec
cs
adc
xor
inc
add
cmp
pop
rolb
test
pop
mov
add
hlt
add
int
add
add
push
stc
jmp
movsl
jle
pop
cmp
inc
add
mov
std
inc
arpl
les
lahf
pop
mov
add
cmp
add
push
push
add
jecxz,pt
mov
aad
add
add
lahf
pop
fdivrl
out
add
add
xchg
jge
sbb
add
xchg
sub
add
push
mov
add
add
add
mov
mov
dec
xchg
push
add
movsb
add
icebp
jg
add
int3
pop
dec
repnz
and
sbb
add
add
add
or
int3
pop
cmpsl
sbb
inc
push
add
int
popa
std
jg
test
sbbl
mull
rolb
int3
or
cli
ds
mov
add
jbe
popf
mov
add
mov
xor
push
add
sub
add
fcomps
inc
sub
cmp
pop
movb
adc
jl
ds
mov
add
add
cmp
ret
insl
enter
mov
scas
out
outsb
push
add
lret
add
pop
inc
add
mov
add
lcall
add
pop
pop
ja
add
rorl
add
push
add
add
fisubs
add
rolb
sahf
repnz
pop
add
xchg
cmp
mov
ret
cmp
pop
inc
leave
push
add
mov
or
mov
addr16
jo
and
js
add
ja
add
add
fwait
and
add
daa
xchg
sti
dec
cltd
jp
xor
xchg
popf
rolb
sub
pop
popa
mov
pop
inc
sub
stc
das
xlat
movsl
xor
add
push
sar
add
xor
inc
add
repz
in
pop
sbb
leave
dec
sub
add
push
rolb
pop
stc
cltd
sub
push
mov
jp
mov
test
push
mov
hlt
add
mov
nop
add
out
push
add
dec
dec
inc
add
mov
das
add
add
sub
xor
pop
int
mov
out
jmp
jmp
mov
add
add
sub
add
add
add
in
pop
cmp
leave
inc
ret
out
movb
sbb
pop
fcomi
add
add
loope
fidivrl
mov
add
fcoml
ljmp
aam
shll
cmp
roll
push
add
mov
push
jecxz
cmp
sub
add
add
add
hlt
add
mov
jmp
add
int3
imul
add
mov
mov
xchg
add
mov
add
and
repnz
adc
cli
add
dec
mov
add
jecxz
out
mov
and
add
out
cmp
sbb
gs
fidivrl
add
jmp
jecxz
add
xchg
std
mov
hlt
add
cmp
lahf
repz
dec
scas
fsubrp
sbb
mov
rolb
adc
mov
xchg
lock
rcl
jl
add
fbstp
fcmovbe
add
jnp
pop
rolb
inc
add
and
mov
outsb
jmp
stos
mov
add
inc
cmpsb
add
int3
mov
add
testb
pop
fildll
mov
add
cs
add
inc
sbb
out
xchg
add
add
js
pop
cld
ja
add
scas
mov
mov
mov
out
xor
jae
out
xchg
add
xor
int
cmp
push
cmp
clc
jl
das
xlat
je
jne
lret
outsl
repz
scas
cmpsb
add
add
out
jnp
add
add
jecxz
add
add
sti
xchg
lds
add
sbb
cmp
jp
cmp
add
add
mov
add
mov
mov
add
jcxz
add
xchg
jl
add
cmp
add
stos
xor
add
mov
shl
dec
lock
lds
lock
dec
dec
js
dec
inc
push
add
add
mov
add
ljmp
xor
adc
inc
add
jnp
add
push
inc
add
imul
mov
add
or
add
cld
cmp
add
jo
loope
sbb
mov
add
rolb
das
int
xor
add
repnz
addr16
adc
mov
mov
push
add
cmp
xchg
outsl
in
int
add
sbb
jmp
mov
add
push
add
add
jmp
test
addb
add
mov
testb
add
add
add
ljmp
jns
dec
inc
add
or
test
push
push
add
add
out
xor
gs
lds
add
cmpsl
jns
add
imul
stos
inc
add
add
add
or
mov
out
arpl
lahf
lock
lcall
sub
add
sub
add
int
imul
mov
testb
add
fcmove
dec
and
mov
es
pusha
add
add
xchg
add
add
lods
rcll
out
rolb
mov
mov
rolb
sahf
int
add
out
jmp
and
cmp
cmpsl
in
dec
cltd
les
fwait
cmp
das
insb
jbe
cmpsb
add
xor
fs
rolb
sbb
push
add
and
adc
movb
pop
inc
enter
sbb
int
jnp
sti
adc
sbb
hlt
add
sub
addb
cmp
add
mov
add
adc
dec
popf
fdivrs
mov
mov
push
add
xlat
mov
xchg
add
sbb
pop
fisttpll
inc
add
add
add
fsts
cwtl
or
push
out
mov
add
lcall
outsb
cmp
lcall
xchg
pusha
add
dec
cmp
add
mov
flds
pop
mov
xor
dec
aaa
arpl
sbb
js
movb
in
lock
int3
add
stos
jg
jecxz
dec
pop
pop
loop
mov
aaa
and
data16
imul
test
test
dec
jl
add
cmp
add
aad
xchg
ljmp
dec
imul
repnz
add
xchg
pop
leave
push
popf
stos
adc
mov
repnz
mov
mov
add
or
add
ficompl
insb
lock
xchg
add
add
sub
add
jl
add
mov
add
in
add
es
test
pop
loop
out
and
mov
pop
jmp
mov
add
ljmp
rolb
data16
imul
xor
testb
leave
sbb
add
xchg
add
add
scas
push
add
pop
data16
add
add
add
aas
mov
popf
or
orl
sti
outsb
ja
dec
outsb
lock
sbb
mov
aas
outsl
int
jmp
cmp
sub
mov
stos
xor
cmp
jp
lea
andl
addr16
add
mov
jge
into
pusha
add
xorl
sbb
add
in
mov
cmp
add
aas
dec
sbb
jb
mov
adc
fs
adc
add
sub
add
add
push
lahf
jno
add
pop
mov
out
sbb
mov
add
inc
bound
mov
mov
pop
sar
sbb
in
movsl
movb
rcll
cs
add
add
ja
xchg
push
dec
sub
lods
sbb
hlt
add
popa
int
dec
and
lcall
enter
add
nop
add
fildl
add
ret
mov
mov
fstps
add
ret
imul
je
xchg
add
repz
cmp
imul
pushf
insl
mov
pop
xor
and
mov
jmp
inc
add
xchg
mov
add
mov
arpl
add
mov
sbb
add
mov
nop
add
lods
lods
mov
and
xchg
add
add
add
or
cmp
xchg
add
mov
repz
pop
and
mov
add
int
add
imul
add
add
sbb
lock
mov
add
add
aaa
fstl
mov
inc
add
pop
jmp
add
test
jle
insb
xor
in
jle
ret
mov
loop
nop
add
add
or
mov
outsb
cld
fisubs
stos
xor
loope
pusha
add
push
dec
ds
jmp
scas
push
aaa
pop
leave
clc
xchg
add
push
jle
add
add
pop
std
call
add
ret
rolb
xchg
mov
or
mov
icebp
adc
sbb
add
fwait
adc
out
dec
jnp
mov
push
or
cli
sub
add
cmpsl
pop
or
sub
iret
insb
cmp
push
add
add
add
add
mov
popa
dec
les
xchg
push
or
repz
rolb
pop
sub
aas
xchg
lods
insl
fwait
sti
mov
dec
xchg
das
push
ret
jo
mov
mov
add
add
int3
pop
dec
add
add
aam
addr16
add
add
add
scas
popf
adc
invd
ret
add
add
loop
std
adc
add
mov
add
cmp
add
int
imul
pushf
dec
sub
pop
pop
pop
sbb
mov
xor
mov
push
mov
jo
add
pop
mov
add
add
inc
mov
test
mov
popf
or
add
add
xlat
int
push
add
jno
add
addb
mov
pop
dec
inc
add
lds
add
pop
sahf
mov
rolb
add
add
jg
add
mov
pop
int3
pop
xchg
add
out
dec
mov
xchg
add
push
add
fs
cmp
add
push
outsl
rolb
into
add
push
aad
jb
test
cmp
push
add
arpl
add
outsb
out
mov
lock
xchg
cs
mov
add
repz
mov
add
add
add
fisubs
add
jnp
sbb
add
pop
dec
xchg
sub
mov
jp
add
enter
add
add
adc
add
add
or
push
add
test
ja
dec
cmp
lret
xchg
pop
cmp
inc
sbb
mov
push
add
stos
fwait
xor
xor
sub
add
add
xchg
fisubrl
add
stc
stc
call
inc
add
js
int3
arpl
popa
scas
xchg
add
add
add
aad
inc
popf
bound
mov
mov
movsl
jbe
lret
imul
add
add
popf
xchg
lock
add
pop
xor
fnstcw
popa
pop
stos
xchg
pop
push
cli
insl
fsubs
or
dec
pop
popl
push
out
add
mov
addb
dec
or
mov
pusha
add
pop
outsl
dec
cmp
jo
movb
jg
xchg
jnp
dec
cmpsb
add
hlt
add
in
mov
in
mov
or
imul
icebp
outsb
aam
mov
icebp
jns
lcall
popf
test
add
jns
xor
pop
orl
adc
mov
ret
inc
add
jae
and
mov
xchg
adc
std
clc
ds
jno
add
xchg
je
test
mov
jmp
cs
fcomps
mov
add
rolb
fcmovnb
add
rolb
les
fldcw
add
xor
and
and
mov
daa
push
add
in
arpl
add
pop
sbb
in
xor
cli
push
movb
add
pop
inc
add
ret
mov
stc
sti
inc
add
lcall
dec
mov
inc
add
ljmp
add
sub
inc
add
ret
das
pusha
add
add
enter
pushf
cvttps2pi
scas
aaa
xor
adc
cs
stc
popa
or
add
pop
int
push
add
mov
loop
xor
gs
lods
lods
decl
jne
xchg
add
mov
rolb
adc
into
daa
jne
add
pop
jmp
inc
add
mov
stc
push
jae
push
add
or
lret
addr16
fsubrp
aas
push
repz
inc
add
addr16
sub
add
fisttpl
iret
ja
imul
ds
add
rolb
test
iret
push
add
add
adc
sbb
sbb
or
imul
arpl
pushl
pop
sub
cmp
mov
inc
add
addb
add
inc
adc
repz
sahf
jbe
jp
add
mov
mov
aad
inc
add
movsl
popf
sub
mov
ficoms
add
aad
add
fsubl
add
mov
xchg
add
in
mov
xor
pop
xchg
sub
add
xor
scas
test
add
sbb
cmp
outsb
xor
out
add
mov
jecxz
add
add
mov
adc
push
add
add
fcmovnb
mov
add
cmc
or
out
push
out
hlt
add
add
inc
subl
push
dec
sbb
int
sbb
cltd
mov
inc
add
mov
add
add
xchg
push
push
add
lock
add
add
add
mov
hlt
add
cltd
push
std
rolb
xlat
jne
inc
add
add
push
fbstp
add
add
mov
add
loopne
lea
imul
out
ficompl
push
push
mov
inc
add
cs
add
mov
loopne
or
fnstsw
sahf
jmp
jmp
add
xchg
sbb
xor
jne
add
pop
int3
xor
mov
add
push
fstl
cwtl
mov
out
into
aam
fcoms
add
pushf
inc
mov
add
addr16
add
dec
adc
add
and
xchg
fisubrl
pop
dec
jmp
sub
inc
lods
rolb
mov
add
sbb
lods
cmpsl
lods
push
xchg
inc
lock
add
xor
sbb
js
sub
fwait
outsb
add
push
add
int3
pop
lahf
mov
daa
sub
data16
test
add
mov
rolb
cli
test
sub
add
sub
add
out
jp
pop
fists
push
repz
push
pop
adc
add
add
hlt
add
pop
dec
addb
test
jl
add
dec
mov
cmp
int
add
sbb
xchg
cmp
cld
cwtl
inc
or
push
mov
mov
inc
add
add
fwait
loopne
sub
sub
loop
lahf
inc
add
inc
jmp
into
dec
dec
push
push
add
add
xor
addb
jl
pop
ret
lods
aas
dec
stos
lret
stos
stc
mov
add
mov
push
add
cwtl
cmp
mov
cmp
ljmp
add
cmp
test
ficomps
leave
test
add
push
push
and
mov
adc
out
add
mov
out
and
fwait
dec
push
add
add
add
inc
fldenv
add
add
rcll
mov
fldt
addb
cmp
add
dec
testb
add
mov
jne
fs
and
mov
sbb
gs
cmp
add
push
out
ret
pop
add
mov
add
xchg
das
xor
pop
hlt
add
push
lods
js
add
fcompl
add
add
add
add
ljmp
popa
sub
dec
out
stos
movsb
add
lahf
leave
sub
out
outsb
sub
add
add
add
popa
push
addb
sbb
add
lea
add
add
and
add
and
loope
mov
inc
add
les
jno
push
add
mov
xchg
sub
add
and
addb
addb
mov
addl
add
jne
add
std
das
loopne
sbb
add
or
mov
add
sbb
lret
aam
mov
insb
lcall
leave
mov
rcr
insl
lea
xor
or
and
push
jecxz
dec
xchg
mov
lea
in
add
pop
xor
out
or
cs
or
add
add
add
mov
mov
cmp
add
mov
mov
add
cmp
add
add
adc
add
lcall
adc
imul
push
add
mov
add
xor
add
sbb
or
pusha
add
fstpt
add
sub
movb
stos
fsubrs
test
jge
imul
mov
sahf
out
addr16
jno
add
mov
jae
loope
push
push
fstl
add
push
or
xchg
xchg
add
cmp
sub
icebp
repnz
sbbl
lcall
jecxz
lret
aam
push
add
mov
out
rolb
and
add
add
lds
add
mov
add
mov
inc
sub
stc
dec
xor
cmp
pop
fisubl
mov
enter
add
jmp
add
pop
lcall
or
rolb
adc
add
push
add
or
aad
enter
add
or
dec
push
add
add
add
pop
sub
add
clc
pop
mov
fisubs
add
mov
rolb
add
into
adc
mov
add
fnstcw
sbb
mov
xchg
add
int3
test
add
inc
inc
fdivr
push
add
lods
ja
add
leave
out
cwtl
xchg
pop
adc
les
dec
std
mov
ja
aam
pop
aas
incl
add
add
jg
stos
jp
xchg
mov
mov
lods
dec
std
stos
mov
add
add
push
add
sub
push
add
adc
sahf
pop
out
add
das
sub
mov
add
jp
lret
repz
jg
mov
adcl
or
xchg
jae
testb
inc
add
and
setnp
xor
cmc
or
mov
rolb
lret
xchg
add
add
mov
jo
push
into
popa
aaa
and
ds
out
add
xor
dec
jbe
jb
outsl
rorl
push
add
sbb
cmp
stos
in
rolb
aam
jg
loopne
out
loope
push
pop
enter
add
sub
push
add
cmpsl
ret
aaa
xlat
inc
and
mov
cwtl
icebp
mov
jle
ss
add
xchg
add
mov
jb
andl
mov
jecxz
sar
lods
call
add
ret
in
subl
lods
dec
sbb
mov
and
addr16
rolb
sbb
sub
xor
addb
lahf
mov
push
out
mov
add
mov
mov
and
mov
add
loop
hlt
add
and
mov
hlt
add
add
add
inc
jnp
int
xchg
fisubrs
cmp
mov
js
les
xlat
dec
enter
cli
enter
add
add
add
sub
add
dec
nop
add
jge
jp
mov
stc
dec
frstor
inc
add
loope
add
mov
inc
mov
lea
cmc
add
rolb
out
mov
or
js
mov
std
xchg
call
out
data16
ret
cmp
mov
mov
add
scas
addb
mov
add
sub
mov
jne
arpl
add
sahf
mov
jb
cmp
pop
lods
pop
adc
sahf
sbb
pop
add
jae
aam
jmp
filds
pop
inc
adc
xchg
fsts
mov
xor
add
add
mov
fildll
insl
iret
push
add
mov
pop
xlat
out
add
add
ja
add
jb
int
add
mov
inc
xchg
add
fs
stos
pushf
xchg
xchg
loope
ret
xor
adc
mov
stos
adc
add
add
mov
add
add
adc
xchg
add
out
scas
xor
add
add
in
arpl
mov
addb
mov
add
add
arpl
add
add
add
mov
loop
jge
and
lahf
push
add
cli
lds
pop
mov
sub
xor
sbb
add
jp
xlat
mov
add
add
sbbl
sbb
das
sbb
mov
add
add
add
jp
call
mov
mov
pop
adc
xor
inc
add
iret
jnp
les
push
add
cmc
cmp
call
add
std
xchg
xchg
arpl
add
je
jp
add
adc
inc
add
add
add
lock
add
in
movl
ja
mov
add
mov
lret
hlt
add
dec
lea
add
jns
faddl
mov
pop
add
pop
cltd
out
jp
xchg
xchg
jbe
das
jbe
push
add
add
add
add
pusha
add
push
add
jne
add
push
jle
cmp
lock
add
or
std
repnz
add
add
add
enter
xchg
add
dec
dec
loope
fildll
push
add
out
inc
add
das
sahf
sub
xchg
mov
fdiv
add
or
add
mov
push
arpl
out
xchg
add
cmp
or
xor
inc
addr16
jl
add
jg
add
mov
dec
mov
fwait
push
bswap
pusha
add
fucomp
sbb
jnp
fwait
outsb
or
add
add
cmp
add
ljmp
loop
fidivs
add
add
cltd
xor
xchg
call
mov
dec
movsl
mull
std
dec
in
sbb
test
add
sub
add
test
loope
insl
adc
addb
mov
dec
jnp
add
arpl
mov
lea
push
mov
xchg
add
repz
mov
rolb
scas
jmp
and
mov
loopne
and
add
mov
add
repnz
mov
icebp
js
jae
add
add
stos
js
mov
add
add
push
dec
rolb
sbb
add
xchg
add
add
lods
and
push
rolb
xor
int3
test
in
in
loopne
gs
movsl
stos
jle
jne
adc
push
xor
mov
lds
jge
add
imul
daa
dec
inc
lea
insl
addb
adc
ret
test
iret
cld
movsl
mov
mov
sti
mov
mov
push
add
xchg
inc
shll
aad
cmpsl
jmp
add
add
add
add
add
cmp
push
add
add
outsl
testl
mov
jl
add
mov
inc
pop
mov
or
push
lds
add
add
add
add
cmpl
and
mov
and
mov
out
cwtl
xchg
adc
lods
inc
add
test
push
and
cmp
insl
xchg
roll
test
add
push
fdivrs
ficoms
add
mov
add
and
xchg
je
cmpsb
add
xchg
add
rolb
dec
dec
or
jns
inc
jo
testb
sbb
mov
clc
jns
xchg
inc
dec
fistps
add
inc
rolb
jp
lcall
push
cli
fdivl
ret
inc
add
sbb
jnp
add
add
ss
add
add
mov
add
sbb
pop
std
shll
jb
and
mov
in
lds
outsb
add
aam
movsl
insl
cmp
add
sbb
adc
lcall
addb
and
mov
xchg
mov
sub
scas
add
mov
scas
inc
cmp
push
js
leave
pop
sbb
add
pushf
rolb
mov
jg
add
aad
mov
lods
pop
mov
lret
jno
adc
xor
mov
daa
movb
add
fdivrs
pop
std
add
mov
addb
outsb
add
pop
adc
cmp
add
dec
mov
add
jo
rolb
sbb
add
dec
test
add
mov
add
add
mov
jmp
add
nop
add
test
popa
insl
loope
adc
cltd
test
clc
jg
xchg
rolb
addb
fdivrl
push
add
jo
mov
lock
cmp
ds
add
add
push
lods
test
dec
push
add
add
add
cs
add
inc
add
or
clc
pushl
testb
add
out
movl
into
leave
push
add
add
mov
movsl
jge
out
adc
adc
in
add
out
jmp
add
mov
add
add
popf
inc
or
mov
jmp
loop
addb
jg
adc
add
adc
cmp
add
insl
adc
add
mov
testb
add
ja
das
scas
icebp
cmc
sub
data16
add
aas
stos
mov
dec
sub
cmp
jmp
mov
add
inc
mov
jns
mov
sub
add
insl
insl
rolb
xor
jns
cltd
mov
mov
das
incl
addb
and
mov
icebp
cli
aaa
testb
outsl
pop
sbb
mov
xor
add
dec
xchg
add
mov
xor
lods
inc
inc
cs
insl
movsb
add
sti
or
popf
add
mov
add
ret
ret
cli
mov
add
mov
add
or
add
cmp
mov
ds
mov
jp
add
add
in
addb
or
add
lahf
jmp
mov
insb
mov
add
fnsave
mov
out
fisubrs
mov
or
mov
fmul
mov
add
inc
add
mov
add
gs
ret
sti
inc
add
add
add
add
dec
and
in
jmp
loopne
jnp
add
add
std
and
incl
mov
jns
push
in
mov
push
add
rcll
addb
add
xor
mov
add
push
jnp
or
xchg
sub
ret
mov
sti
cmp
add
inc
add
pop
xchg
add
pop
call
add
nop
add
loope
add
cmp
add
gs
add
jne
pop
test
cmp
add
pop
push
ja
rolb
js
add
push
mov
and
add
xchg
add
xchg
lds
movsl
inc
stc
ja
add
shll
inc
lods
push
add
add
jecxz
add
push
add
sub
inc
add
mov
sbb
mov
addr16
xlat
jp
aas
hlt
add
insb
jecxz
jb
mov
mov
add
fsin
and
out
mov
daa
add
xchg
testb
inc
sbb
add
sbb
movsb
add
add
xchg
gs
out
mov
pushf
outsb
je
mov
mov
in
cmp
adc
ret
sub
out
shll
sbb
or
lcall
add
mov
decl
add
xor
loopne
call
jnp
mov
jp,pn
jle
loop
in
mov
sub
leave
dec
adc
xchg
add
mov
mov
dec
testb
outsl
xchg
out
cmp
add
fwait
lahf
hlt
add
add
mov
add
call
add
pop
pop
and
stos
mov
jge
add
jb
insb
icebp
pop
inc
add
loop
in
sbb
int
cmpl
out
rolb
fdivs
push
add
loop
mov
add
mov
popa
xlat
dec
mov
dec
add
mov
pop
iret
sbbl
cmp
xchg
pop
jne
mov
add
sahf
jmp
int
dec
leave
repz
cmc
xlat
add
add
loopne
mov
add
dec
jns
jmp
xchg
add
add
jmp
inc
add
shrl
out
jg
std
jecxz
jecxz
add
test
insb
insl
js
sbb
add
dec
or
ljmp
cmp
pop
insl
mov
lods
add
xchg
add
xor
cmc
aas
adc
and
arpl
jnp
push
add
push
add
mov
add
dec
or
add
hlt
add
mov
jl
add
mov
scas
sbb
push
add
adc
add
testb
mov
out
test
add
scas
xchg
hlt
add
jecxz
xchg
inc
jge
add
push
rolb
fldl
pop
clc
daa
pushf
add
cmp
add
mov
add
cmp
enter
add
imul
add
add
test
stos
inc
mov
add
imul
add
push
add
add
add
rcll
or
add
pop
fisubrs
jae
aad
mov
scas
sbb
mov
add
add
adc
inc
push
add
ret
jno
fdivs
repnz
test
xchg
loopne
adc
mov
mov
test
lods
sbb
add
mov
add
add
add
add
repz
add
sbb
rolb
fcomps
das
lahf
icebp
int
add
or
cmp
aas
push
add
mov
add
js
add
movb
stc
cmc
fimull
pop
insl
mov
data16
add
enter
jae
and
xor
mov
je
inc
add
in
xor
sub
add
xchg
dec
push
add
fmull
clc
stc
inc
dec
cmpl
flds
testl
cmp
dec
or
stos
aaa
xchg
push
daa
jb
movsl
lods
jmp
data16
mov
add
add
jmp
fsubrs
add
mov
add
add
dec
sub
sbb
pop
iret
ds
mov
and
loopne
dec
push
or
add
sub
or
aad
mov
sbb
add
sub
mov
and
imul
xchg
ret
test
sub
mov
sbb
jb
push
add
les
dec
sub
pop
fistps
movsl
aas
popf
mov
popa
insb
mov
pop
rorl
jmp
add
sbb
mov
add
push
add
push
cmp
add
mov
and
mov
mov
dec
mov
mov
add
test
xchg
add
add
add
dec
lods
imul
cmp
add
add
leave
push
out
sahf
rolb
rep
mov
dec
sbb
add
add
add
cltd
clc
lret
sbb
add
add
add
pop
push
dec
mov
int3
xchg
add
out
push
add
add
adc
loopne
adc
lret
cmc
mov
add
add
mov
pop
in
test
lcall
imul
insl
cmp
add
add
add
add
inc
add
xchg
insb
repz
pop
cmp
push
add
dec
jle
mov
add
cmp
xchg
or
and
mov
add
mov
mov
cmp
add
mov
cmp
dec
add
mov
cli
ret
sti
lcall
cmp
aam
mov
pop
ljmp
fldcw
dec
mov
add
add
add
sbb
pop
cmp
or
add
or
push
enter
rolb
and
push
add
mov
enter
add
mov
adc
dec
flds
mov
xchg
add
push
add
add
push
out
mov
les
inc
inc
add
imul
pop
sbb
imul
jmp
mov
scas
jge
lcall
adc
add
mov
mov
jp
sets
push
add
mov
insb
ffreep
add
mov
mov
sbb
popa
add
mov
mov
decb
sbb
stc
test
gs
inc
lods
push
add
or
add
add
inc
add
aam
iret
stc
add
mov
mov
adc
pop
xchg
add
dec
mov
hlt
add
or
jo
add
jbe
lea
xor
loope
xchg
cmpsb
add
xor
insb
test
and
and
xchg
icebp
loope
ret
inc
fucomp
mov
mov
lret
loope
stos
push
insl
adc
add
jg
dec
pop
add
mov
incb
add
out
mov
aam
adc
pop
dec
fs
mov
in
add
add
add
add
xchg
in
stc
lret
cmp
dec
aaa
out
and
add
add
add
lods
sub
sub
add
add
stos
lods
movsb
add
xor
dec
sahf
test
push
inc
mov
xor
push
add
push
lds
lock
mov
add
add
add
aad
add
fisttpl
leave
pop
cld
jbe
rorl
cmc
loope
add
xchg
add
scas
lcall
cld
ds
add
lcall
add
mov
xlat
mov
or
sarl
cltd
clc
in
sub
push
adc
into
dec
fwait
pop
push
mov
pop
or
push
sub
add
push
add
add
ret
fbld
add
mov
cmpsb
add
fidivl
and
out
clc
imul
jnp
cmp
mov
sbb
jnp
add
add
inc
add
ret
or
mov
sbb
sub
add
or
fcom
add
add
mov
test
add
sbb
jecxz
std
les
outsb
inc
add
mov
repnz
add
test
outsb
lret
adc
xchg
test
cltd
and
push
add
lods
xor
mov
add
xor
outsl
push
add
stc
xlat
pop
push
gs
sbb
mov
xchg
add
mov
push
and
cmp
lret
sti
pop
out
fimuls
add
push
add
and
mov
xor
sbb
fnstsw
frstor
add
mov
sbb
add
jl
push
add
popa
mov
stos
bound
mov
adc
cmp
add
add
add
add
add
or
add
sbb
add
mov
cs
xlat
testb
jg
add
ja
add
jae
mov
cmpsl
dec
add
stos
loope
jg
add
add
test
rolb
int3
xor
fstpt
cli
inc
add
and
mov
fdivs
xor
pop
divl
mov
xor
aad
jo
mov
add
movb
adc
addb
cmpsl
lret
rolb
jo
cmp
addb
add
jae
pop
addb
pusha
add
movsl
mov
cmp
pop
mov
outsb
pop
lgs
add
add
add
addb
adc
jp
and
mov
mov
add
xchg
mov
add
and
mov
add
push
add
add
add
xchg
pop
add
std
push
jne
add
mov
cld
loope
int
push
movsb
add
std
loopne
inc
jle
add
add
push
jnp,pn
mov
outsl
sub
add
sub
out
popa
push
scas
rolb
repz
sub
ljmp
mov
pop
lods
xchg
add
or
jmp
inc
cli
imul
sub
pop
xchg
sbb
add
insb
jg
lret
jp
add
sub
imul
inc
aad
fstps
ret
sbb
sbbl
repnz
add
jne
add
jb
jb
or
mov
mov
mov
pop
sbb
add
add
xchg
mov
add
loopne
int3
inc
mov
add
push
add
scas
push
jae
lods
lea
inc
ja
add
movsb
add
hlt
add
add
add
inc
and
repz
inc
add
fmuls
pusha
add
add
add
ret
mov
sub
jg
add
sbb
shll
add
mov
rcl
jbe
ficompl
shll
in
dec
test
testb
add
fisubrl
lods
or
push
add
mov
dec
cmpsb
add
add
mov
jb
jns
pop
xor
fadds
jbe
mov
cli
inc
add
add
test
add
test
mov
add
lret
adc
sbb
pop
rolb
loop,pn
mov
jbe
cmp
cwtl
stos
andl
adc
jmp
and
mov
cli
pop
pop
aaa
repnz
mov
mov
push
add
add
xor
jg
mov
lcall
jmp
xor
mov
add
add
fldl
pop
pop
in
jecxz
jae
add
add
dec
leave
jecxz
stc
and
mov
jnp
push
mov
sbb
add
add
lea
rcrl
les
jno
testb
mov
jns
add
xor
repnz
lods
or
mov
sbb
mov
mov
cmp
dec
stos
jne
mov
and
arpl
fcoms
adc
pop
or
dec
inc
rcr
imul
mov
pop
sub
jmp
add
cltd
sti
data16
push
mov
jp
scas
and
add
jecxz
cltd
jnp
addr16
movsb
add
gs
call
mov
stos
movsl
call
add
clc
fisttpll
das
dec
inc
cmpsb
add
push
aaa
stos
jns
mov
add
jno
add
mov
fcmovb
repz
je
movb
aad
popf
or
out
adc
out
mov
cltd
or
xor
add
add
add
or
dec
lods
xlat
fiaddl
sbb
add
ret
push
lret
push
add
jae
dec
dec
add
in
inc
lahf
movsb
add
fdivp
enter
aad
mov
add
push
add
add
sahf
inc
sti
mov
cld
cld
add
mov
addb
add
add
daa
or
inc
and
or
cmp
movsb
add
pop
and
mov
addr16
out
insb
das
ja
add
mov
popf
jg
sub
mov
bound
mov
ret
stos
dec
mov
ret
push
add
shll
add
jmp
or
scas
mov
xchg
add
aam
jo
in
pop
xchg
test
into
mov
add
add
add
push
add
or
rcrl
add
stos
add
or
push
dec
dec
test
or
data16
and
out
in
cmp
lds
add
add
mov
cmp
and
mov
test
add
add
mov
popa
jle
das
mov
fsub
rolb
add
add
cmp
add
add
or
pop
add
pushf
sarl
jnp
mov
movb
clc
jnp
add
add
mov
add
add
add
add
sbb
add
and
mov
loop
sub
cmp
loope
repz
sub
jp
mov
add
jp
jnp
test
addb
inc
int
pop
fistpl
pop
add
push
add
pop
into
jle
std
push
add
add
pusha
add
pop
sbb
fincstp
mov
loope
or
cmp
mov
mov
rcrl
add
int
add
mov
mov
or
mov
sbb
add
adc
add
sarl
imul
pop
les
repnz
cmp
cmc
mov
push
add
xlat
sbb
cmpsl
pop
sub
add
add
add
mov
mov
fstp
loop
cmc
test
mov
sar
out
xchg
insl
xchg
add
aaa
jmp
add
add
add
adc
push
bound
mov
push
addb
pop
cwtl
adc
inc
movsl
mov
sbb
addb
ret
jmp
roll
add
push
add
aaa
sub
add
mov
into
sub
add
fldl2t
rolb
in
add
lds
add
fldt
mov
clc
shll
add
sub
add
pop
int3
cmc
ja
mov
sbb
add
add
dec
adc
xchg
add
add
add
add
jge
jb
pop
popa
lahf
fldl
add
add
mov
mov
mov
test
and
faddl
mov
sub
loop
lret
sub
jo
mov
or
add
sti
ret
xor
shrl
and
mov
mov
aam
int3
xchg
add
mov
movsl
nop
add
adc
add
or
inc
add
add
mov
add
add
pop
out
cwtl
nop
add
push
sarl
add
add
add
add
add
into
repz
addb
cmp
repz
mov
mov
mov
inc
adc
sub
add
lock
outsl
inc
pushf
inc
add
cmpsb
add
lcall
add
pop
sub
sbb
mov
stos
adc
rol
push
mov
in
add
ret
sbbl
dec
or
add
adc
add
mov
add
add
sbb
xchg
mov
mov
sub
add
mov
add
cli
movsb
add
add
lea
jne
mov
jns
iret
lock
push
add
sbbl
jmp
mov
mov
add
dec
addr16
add
add
pushf
mov
addl
leave
mov
xor
out
popl
in
mov
add
sahf
sub
nop
add
into
dec
fwait
sbb
adc
inc
add
add
add
lret
adc
insb
pop
into
les
mov
ja
and
mov
add
add
add
mov
dec
sub
jg
ret
repnz
add
xchg
add
jns
stos
xchg
or
cmpsb
add
xchg
add
testb
pop
jno
lret
pop
inc
mov
add
icebp
ss
and
mov
add
xchg
cs
add
insb
mov
mov
roll
out
mov
add
xor
add
mov
mov
movb
jbe
int3
dec
in
cmpsl
and
inc
add
insb
cltd
lods
ljmp
add
fsubs
jne
cmpsl
push
std
std
sbb
incb
addl
mov
add
repz
push
add
fwait
cli
testb
lods
icebp
inc
add
mov
stos
fistps
push
add
out
xchg
add
or
add
mov
mov
cmpsl
push
pushf
push
stc
mov
mov
pop
cmp
mov
add
rorl
jecxz
cmp
pop
pop
movsb
add
add
imul
add
mov
cmp
add
add
add
bound
mov
push
jo
cmp
add
arpl
jge
add
aaa
sbb
fcomip
add
mov
add
add
or
inc
cmc
into
into
jmp
outsb
jno
xchg
add
aam
sahf
arpl
add
add
push
ja
add
add
push
add
add
rolb
add
mov
fcoms
jbe
add
add
movb
add
testb
lret
add
add
mov
lods
loope
mov
add
cmp
faddl
loope
and
addr16
or
add
insb
movsl
add
xchg
sub
aas
adc
mov
sti
mov
mov
fidivrs
mov
add
add
imul
fbld
mov
rolb
xchg
add
pop
and
mov
hlt
add
add
out
or
push
add
nop
add
imul
andl
fstps
add
mov
mov
jne
add
add
pop
rcrl
mov
mov
subl
sub
xchg
pop
imul
dec
cwtl
cli
add
and
add
adc
add
and
mov
pop
or
add
add
add
inc
add
mov
or
dec
pop
pusha
add
mov
rcll
adc
pop
pop
jae
addb
adc
nop
add
ret
pop
jecxz
les
rolb
add
popa
cli
jge
push
mov
movsb
add
add
add
fwait
test
ljmp
imul
dec
mov
fmulp
cs
mov
out
insb
mov
jns
mov
stc
aaa
mov
sbb
scas
jno
mov
addb
sub
repz
jl
add
into
dec
or
scas
mov
popf
movb
shl
or
add
mov
cmp
cs
add
mov
and
mov
ljmp
stos
and
mov
push
pusha
add
aaa
jp
out
push
hlt
add
inc
add
scas
dec
mov
jne
int
add
push
negl
add
fidivs
fnstsw
push
adc
int3
push
add
andl
or
add
add
add
jge
jae
add
inc
add
cld
mov
jle
add
add
sarl
inc
dec
rolb
add
dec
xor
mov
loop
nop
add
sbb
test
jb
mov
cmp
testb
jge
or
dec
add
adc
lods
cmpsl
sub
xchg
add
das
lods
inc
jbe
mov
dec
nop
add
inc
sbb
or
sti
mov
cwtl
mov
jl
dec
lds
das
leave
andl
add
sub
add
daa
stos
pop
stc
popf
int
xchg
push
fsubrs
std
scas
call
std
pop
loop
jbe
adc
xor
adc
jo
xor
sahf
ds
in
and
imul
sub
mov
or
enter
cwtl
dec
mov
repz
mov
and
mov
add
add
mov
mov
add
sbb
sarl
dec
ljmp
int3
and
inc
add
mov
testb
add
and
mov
add
movsb
add
outsb
inc
sbb
adc
lock
movb
add
mov
lahf
stos
xor
jns
xchg
mov
add
add
mov
add
lret
sbb
mov
cmpsl
ret
test
mov
add
add
lcall
add
in
fwait
add
add
mov
push
or
iret
stos
add
add
sahf
je
jp
cmp
addb
call
and
scas
xor
xchg
and
mov
sub
cmp
dec
fmuls
data16
or
pop
xor
into
push
lret
jo
in
inc
pop
or
aad
mov
add
add
pop
push
xchg
xor
mov
push
adc
add
lret
repnz
add
jle
cmp
mov
stc
push
shl
jg
fists
push
add
lock
add
iret
pop
adc
testb
ljmp
arpl
sub
aad
jb
ss
add
add
loope
in
loopne
xor
test
lret
add
xor
xchg
push
dec
fisubrs
add
loope
loop
or
es
push
lock
add
leave
ret
fnstcw
adc
cmp
add
mov
out
fidivrs
or
icebp
sub
pop
jmp
mov
add
add
add
add
aas
cmp
pop
add
add
out
push
add
mov
popf
mov
push
in
out
xlat
add
add
out
add
add
push
add
add
rolb
sti
cmp
jo
xchg
xchg
js
add
jmp
add
scas
out
call
int3
mov
addr16
jecxz
dec
in
push
add
sbb
rcr
lahf
jecxz
add
jne
repnz
lods
pop
pop
mov
add
mov
stos
jle
fcompl
add
push
das
xchg
push
add
xchg
add
add
stc
inc
add
add
jno
add
int3
push
add
imul
add
sbb
add
add
cmp
fidivrs
add
dec
sarl
mov
add
pusha
add
insl
inc
jle
mov
dec
jns
jbe
cmp
add
add
push
add
add
mov
push
add
cld
negl
jl
xor
xchg
push
in
mov
clc
repnz
jae
lret
es
jecxz
add
add
sub
repz
push
lret
repnz
jae
add
add
out
incb
enter
jmp
lcall
add
and
repnz
jae
add
ds
repnz
jae
add
dec
or
adc
add
nop
cld
nop
jmp
mov
repnz
mov
push
mov
xchg
ret
add
loopne
int
pop
add
clc
repnz
jae
sbbb
pop
in
xor
clc
repnz
jae
insl
into
pop
add
mov
clc
repnz
jae
push
mulps
lret
add
push
clc
repnz
jae
add
jg
push
test
nop
cld
nop
jmp
lcall
add
clc
repnz
jae
xor
add
add
pusha
add
mov
add
clc
repnz
jae
add
add
loope
pop
clc
repnz
jae
into
test
cmp
sldt
add
xor
nop
jae
add
sub
push
lret
xor
clc
repnz
jae
movsl
cmp
fldl2t
stos
or
add
sub
add
add
add
add
xchg
pop
bound
cmp
add
xchg
imul
arpl
add
in
int
dec
add
movsl
lcall
add
repnz
jae
add
lret
add
jno
inc
add
jno
or
add
add
lock
sub
nop
cld
nop
jmp
add
roll
nop
cld
nop
jmp
bound
wrmsr
out
add
add
push
mov
clc
repnz
jae
add
ror
clc
repnz
jae
add
add
clc
repnz
jae
pop
add
insl
xor
add
cs
push
mov
xchg
ret
pop
addb
add
stc
push
clc
repnz
jae
jmp
add
lcall
sbb
add
jmp
add
lahf
add
ficoms
call
clc
repnz
jae
add
mov
clc
repnz
jae
add
add
inc
sub
mov
xchg
ret
xor
add
push
mov
xchg
ret
add
iret
movsl
cmp
jp
jbe
clc
repnz
jae
loopne
add
repnz
jae
add
add
hlt
hlt
add
mov
push
clc
repnz
jae
jg
add
iret
popf
xor
clc
repnz
jae
add
mov
sbb
mov
adc
repnz
jae
xor
add
mov
nop
cld
nop
jmp
add
push
repnz
jae
mov
push
mov
xchg
ret
add
add
add
xor
fs
cld
nop
jmp
jno
add
jmp
or
rclb
xor
cmp
ret
add
add
clc
repnz
jae
movsl
jmp
aam
in
out
call
clc
repnz
jae
cmp
ss
lea
clc
repnz
jae
add
or
pop
loop
nop
add
add
mov
test
mov
add
clc
repnz
jae
add
pop
jne
nop
cld
nop
jmp
jmp
xor
js
inc
or
repnz
jae
xor
dec
add
adc
nop
cld
nop
jmp
adc
xor
testl
adc
repnz
jae
mov
add
jecxz,pt
ja
clc
repnz
jae
add
add
add
repnz
jae
repnz
add
hlt
testl
repnz
jae
add
add
add
pop
leave
push
clc
repnz
jae
stc
je
iret
add
xbegin
rorb
lret
out
loopne
push
add
dec
nop
cld
nop
jmp
add
xor
in
out
add
je
sbb
nop
jae
dec
add
add
pop
xchg
xchg
das
mov
push
mov
xchg
ret
add
add
add
lret
add
add
repnz
jae
add
test
mov
add
stc
mov
add
addr16
cmp
add
inc
add
repnz
jae
add
add
std
je
xchg
mov
jne
clc
repnz
jae
add
jo
jne
add
fiaddl
xchg
ret
add
adc
add
rolb
call
clc
repnz
jae
aam
out
adc
loopne
repnz
jae
add
jmp
add
add
repnz
jae
es
in
int3
rep
clc
repnz
jae
add
add
push
add
mov
mov
xchg
ret
popl
cmp
add
xchg
clc
repnz
jae
add
sahf
add
adc
repnz
jae
add
jmp
add
mov
nop
cld
nop
jmp
sub
add
movsl
xor
in
add
sbb
add
mov
push
mov
xchg
ret
lcall
jge
popa
add
repnz
jae
jg
iret
add
add
orl
and
cld
nop
jmp
hlt
bound
add
lret
add
mov
xchg
ret
lret
add
jg
addr16
push
mov
test
add
jmp
add
aam
lods
and
push
mov
xchg
ret
loopne
iret
add
add
add
nop
cld
nop
jmp
push
into
add
xor
outsb
xlat
inc
add
xor
roll
xchg
add
add
push
nop
cld
nop
jmp
ds
add
xchg
por
mov
nop
jae
add
stc
add
idiv
add
clc
repnz
jae
add
add
cmp
and
jge
push
mov
xchg
ret
hlt
add
add
add
adc
clc
repnz
jae
adc
add
pop
test
inc
adc
mov
xchg
ret
stc
add
add
add
jne
clc
repnz
jae
pop
mov
xor
lea
clc
repnz
jae
add
lret
or
add
stos
and
clc
repnz
jae
xchg
cmp
repnz
inc
add
add
add
jmp
mov
xchg
ret
push
pop
jg
or
mov
clc
repnz
jae
repz
orb
mov
clc
repnz
jae
add
cld
clc
repnz
jae
add
add
cmpsl
push
add
add
pop
clc
repnz
jae
add
bound
cmp
add
and
clc
repnz
jae
xor
andb
clc
add
sahf
roll
xchg
ret
jmp
iret
je
clc
repnz
jae
add
add
add
mov
mov
xchg
ret
add
test
xchg
add
adc
xchg
clc
repnz
jae
add
adc
sub
inc
cmp
repnz
jae
add
lcall
clc
repnz
jae
dec
add
addb
orb
mov
add
clc
repnz
jae
add
out
fcom
loop
cld
nop
jmp
add
iret
out
jmp
jg
add
nop
cld
nop
jmp
lret
add
add
add
push
mov
xchg
ret
testl
add
mov
nop
cld
nop
jmp
pop
add
into
pop
clc
repnz
jae
add
fadds
xchg
int3
jne
nop
cld
nop
jmp
lret
hlt
add
inc
pop
sub
clc
repnz
jae
into
add
add
adc
mov
nop
cld
nop
jmp
jno
adc
nop
jae
loopne
int
add
hlt
cmp
dec
push
clc
repnz
jae
in
iret
aam
mov
add
clc
repnz
jae
add
add
xchg
pop
nop
cld
nop
jmp
add
add
add
add
add
mov
push
mov
xchg
ret
int
add
in
push
jmp
add
into
pop
cmp
xor
arpl
mov
nop
jmp
add
add
pop
push
repnz
jae
add
insl
push
add
dec
push
clc
repnz
jae
jmp
addb
int
xor
add
repnz
jae
add
add
add
pop
jmp
clc
repnz
jae
add
add
mov
repnz
jae
loopne
sahf
pop
aas
push
push
mov
xchg
ret
add
test
dec
cmp
push
loopne
repnz
jae
cmp
add
pop
add
mov
clc
repnz
jae
add
add
add
pusha
clc
repnz
jae
add
or
add
out
pop
xchg
loop
fimull
test
cli
call
sbb
add
in
aam
add
gs
repnz
jae
int
roll
cld
nop
jmp
jg
stc
hlt
add
in
and
mov
mov
clc
repnz
jae
sub
test
add
popf
popl
clc
repnz
jae
hlt
lcall
mov
clc
repnz
jae
pop
test
pop
add
nop
cld
nop
jmp
stc
mov
cmp
test
repnz
jae
aam
hlt
mov
movb
jne
clc
repnz
jae
add
iret
push
add
push
mov
xchg
ret
sahf
xor
into
in
cmp
nop
cld
nop
jmp
pop
add
add
pop
loopne
pop
clc
repnz
jae
lret
addb
movsl
pop
cmp
arpl
aaa
pop
call
clc
repnz
jae
str
cmp
repnz
jae
add
sub
sti
add
nop
cld
nop
jmp
lcall
rolb
gs
add
add
clc
repnz
jae
add
fadds
jno
cmp
aad
add
nop
cld
nop
jmp
roll
out
inc
add
clc
repnz
jae
pop
add
add
repnz
jae
add
add
add
orb
clc
repnz
jae
cmp
add
insl
or
or
add
jae
add
loopne
and
push
push
mov
xchg
ret
add
add
jg
add
add
add
nop
cld
nop
jmp
pop
mov
add
test
and
nop
cld
nop
jmp
cmp
pop
or
clc
repnz
jae
add
add
add
loopne
and
mov
clc
repnz
jae
into
add
mov
clc
repnz
jae
xor
sahf
pop
sub
cmp
nop
cld
nop
jmp
std
add
jmp
cltd
jmp
nop
cld
nop
jmp
stc
add
lret
add
nop
cld
nop
jmp
std
loopne
add
jmp
push
add
nop
cld
nop
jmp
add
add
pop
add
add
nop
cld
nop
jmp
or
add
and
xchg
idiv
clc
repnz
jae
add
add
pop
push
mov
xchg
ret
sldt
iret
add
add
mov
cs
clc
repnz
jae
add
add
add
xor
add
call
clc
repnz
jae
add
test
adc
mov
nop
cld
nop
jmp
add
add
add
push
mov
xchg
ret
sti
add
add
mov
pop
push
mov
xchg
ret
iret
jmp
add
nop
jae
add
pop
sti
stc
mul
loop
iret
mov
clc
repnz
jae
add
xchg
jmp
clc
repnz
jae
add
add
add
clc
repnz
jae
xor
add
add
movsb
add
add
repnz
jae
add
xchg
ret
add
inc
add
add
es
mov
xchg
ret
into
jmp
add
mov
sbb
loop
add
into
jg
mov
insl
jmp
clc
repnz
jae
ds
cmp
clc
repnz
jae
add
hlt
add
ds
clc
repnz
jae
add
add
loope
pusha
clc
repnz
jae
add
jb
les
loopne
xchg
mov
repnz
jae
add
in
in
pop
add
cmpsb
add
int
pop
jae
repnz
jae
add
testl
ljmp
add
movsl
adc
xor
clc
repnz
jae
je
dec
add
add
out
mov
clc
repnz
jae
add
xchg
jbe
loope
add
call
and
add
add
in
mov
clc
repnz
jae
ds
add
add
repnz
jae
push
add
push
add
popl
ljmp
aad
add
add
add
mov
nop
cld
nop
jmp
pop
or
lcall
pusha
clc
repnz
jae
hlt
add
hlt
mov
jmp
jb
in
gs
mov
xchg
ret
std
add
je
in
pop
clc
repnz
jae
push
std
add
add
add
sbb
cld
nop
jmp
pop
xor
add
add
add
loop
xchg
test
mov
nop
jmp
stc
hlt
loopne
stc
test
add
clc
repnz
jae
testl
add
mov
nop
cld
nop
jmp
add
test
nop
jae
test
stc
add
popa
push
mov
xchg
ret
add
pop
hlt
add
sahf
push
clc
repnz
jae
loopne
add
xor
ds
add
dec
adc
and
and
cmp
pop
pop
add
aas
add
clc
repnz
jae
or
lcall
jmp
jno
add
add
add
add
nop
jmp
add
sti
into
or
sub
add
add
repnz
jae
add
adc
cmp
repnz
jae
iret
add
pop
add
push
push
clc
repnz
jae
or
add
rolb
push
push
add
push
push
mov
xchg
ret
add
std
lcall
repnz
jae
popl
lcall
add
repnz
jae
in
xchg
add
add
clc
repnz
jae
cmp
mov
repnz
jae
dec
pop
add
dec
or
add
add
cmc
jmp
test
cmp
add
nop
cld
nop
jmp
insl
int
lcall
add
repnz
jae
lcall
mov
xchg
ret
add
je
cmp
push
add
cli
inc
add
sahf
add
add
add
add
clc
repnz
jae
addb
bound
xchg
std
lsl
nop
cld
nop
jmp
addb
add
roll
add
mov
xchg
ret
loopne
je
hlt
bound
mov
mov
push
mov
xchg
ret
hlt
add
lret
add
cli
add
clc
repnz
jae
push
push
out
hlt
lcall
addl
incl
div
bound
repnz
xor
push
mov
xchg
ret
add
stc
hlt
or
test
out
clc
repnz
jae
add
mull
push
mov
xchg
ret
xor
lcall
lret
mov
clc
repnz
jae
aam
pop
jg
add
pop
mov
clc
repnz
jae
pop
add
pop
es
add
nop
cld
nop
jmp
add
movsl
add
repz
aad
xlat
stos
jne
clc
repnz
jae
add
lret
adc
mov
mov
nop
jae
add
addb
push
push
mov
xchg
ret
add
out
jmp
ss
clc
repnz
jae
add
subb
nop
cld
nop
jmp
add
add
add
je
pushf
lods
push
mov
xchg
ret
lret
aam
xor
dec
dec
xchg
push
add
in
fiaddl
xchg
ret
jg
mov
add
lea
nop
cld
nop
jmp
add
add
pop
add
mov
nop
jae
jno
insl
add
add
popa
add
repnz
jae
add
or
pop
movups
pop
mov
clc
repnz
jae
add
add
jne
adc
add
repnz
jae
in
roll
xor
clc
repnz
jae
aam
push
add
add
nop
jae
cmp
aam
add
hlt
add
pop
push
mov
xchg
ret
push
add
jno
jg
sahf
add
nop
cld
nop
jmp
add
add
xchg
mov
add
mov
clc
repnz
jae
jg
add
add
and
add
shr
nop
cld
nop
jmp
pop
cmp
add
test
repnz
jae
movsl
test
add
add
nop
jae
cmp
add
add
add
add
or
add
fmull
test
or
nop
jae
iret
add
lea
nop
jmp
pop
push
add
adc
mov
mov
clc
repnz
jae
lret
dec
add
adc
ret
clc
repnz
jae
pop
add
add
sub
add
add
sbb
clc
repnz
jae
add
je
add
add
add
mov
add
repnz
jae
add
hlt
aam
into
inc
push
add
repnz
add
add
dec
je
sahf
push
push
mov
xchg
ret
add
mov
pop
push
lcall
sbb
decl
jmp
add
jmp
mov
xchg
ret
add
std
pop
test
mov
clc
repnz
jae
hlt
idiv
cmp
mov
repnz
jae
add
or
add
dec
loopne
out
call
clc
repnz
jae
adc
add
nop
cld
nop
jmp
hlt
jmp
add
testb
mov
push
mov
xchg
ret
add
add
push
add
movzwl
clc
repnz
jae
cmp
pop
pop
test
nop
jae
aam
add
add
jg
pop
pusha
clc
repnz
jae
add
add
pop
add
in
push
push
mov
xchg
ret
add
add
std
add
pop
push
clc
repnz
jae
add
add
jecxz
mov
clc
repnz
jae
orb
fadds
pop
add
clc
repnz
jae
add
dec
aam
add
lea
push
mov
xchg
ret
lcall
repnz
jae
xor
std
or
out
add
rclb
repnz
lcall
cmp
lcall
push
mov
xchg
ret
hlt
add
add
sahf
mov
push
mov
xchg
ret
add
hlt
adc
data16
nop
jae
in
loopne
or
loopne
pop
and
nop
cld
nop
jmp
repnz
xchg
add
mov
xchg
ret
add
and
ss
add
push
add
pop
add
clc
repnz
jae
pop
add
push
add
inc
xor
clc
repnz
jae
loopne
test
add
mov
xchg
ret
add
add
add
lea
push
mov
xchg
ret
out
add
hlt
or
nop
jae
add
lea
repnz
jae
xor
int
pop
pop
clc
repnz
jae
add
bound
or
stos
push
nop
cld
nop
jmp
dec
adc
je
add
add
nop
jae
in
iret
out
add
fdivr
mov
clc
repnz
jae
pop
repz
push
clc
repnz
jae
pop
jmp
dec
add
cmp
data16
add
cmp
movsb
clc
repnz
jae
add
dec
jno
add
push
pop
push
clc
repnz
jae
add
aam
fsubrs
add
xorl
mov
clc
repnz
jae
add
xorb
jne
clc
repnz
jae
add
add
adc
inc
add
nop
cld
nop
jmp
add
sti
add
roll
mov
push
mov
xchg
ret
add
add
loope
add
clc
repnz
jae
lret
iret
add
jmp
nop
jae
hlt
add
adc
int3
pop
clc
repnz
jae
mov
add
add
icebp
clc
repnz
jae
pop
div
add
add
cmp
sar
nop
jae
adc
repnz
push
add
dec
mov
clc
repnz
jae
mull
iret
add
cmp
mov
repnz
jae
add
hlt
ds
clc
repnz
jae
jno
repnz
add
push
out
cmp
nop
cld
nop
jmp
add
add
ds
clc
repnz
jae
add
shl
loope
add
push
mov
xchg
ret
adc
add
jne
jne
clc
repnz
jae
add
loopne
and
clc
repnz
jae
cmp
add
nop
cld
nop
jmp
add
push
add
add
negl
and
clc
repnz
jae
add
lcall
clc
repnz
jae
out
push
add
add
add
hlt
add
nop
jmp
aam
movsl
add
es
je
add
mov
push
mov
xchg
ret
jg
add
add
imul
clc
repnz
jae
cmp
add
dec
add
nop
cld
nop
jmp
in
in
add
into
sarl
add
cld
nop
jmp
add
into
adc
or
add
repnz
jae
pop
jmp
lahf
push
mov
xor
add
lcall
fildll
sbbl
add
add
repz
clc
repnz
jae
pop
popl
dec
hlt
add
mov
nop
cld
nop
jmp
sub
movsl
loopne
add
push
push
mov
xchg
ret
add
int
add
add
push
mov
xchg
ret
add
pop
addb
add
popa
clc
repnz
jae
insl
push
or
sub
jno
and
mov
add
push
mov
xchg
ret
add
add
xchg
dec
mov
clc
repnz
jae
iret
pop
pop
stc
add
add
clc
repnz
jae
add
add
add
sahf
mov
add
clc
repnz
jae
add
xor
or
mul
aam
dec
ret
push
mov
xchg
ret
dec
add
pop
add
add
add
add
clc
repnz
jae
cmp
add
push
bound
testl
nop
cld
nop
jmp
out
insl
add
adc
sbb
clc
repnz
jae
add
add
rolb
dec
add
clc
repnz
jae
jg
pop
iret
jg
push
add
jle
jbe
clc
repnz
jae
add
jno
repnz
pusha
push
mov
xchg
ret
add
lret
add
add
bound
mov
test
dec
push
add
clc
repnz
jae
mov
cmp
cmp
nop
cld
nop
jmp
in
repz
mov
roll
xor
clc
repnz
jae
xor
mov
mov
clc
repnz
jae
add
add
adc
xor
lcall
ret
jg
jmp
push
add
rolb
xchg
ret
int
add
add
lock
add
call
nop
jmp
add
loopne
test
call
clc
repnz
jae
add
add
push
nop
cld
nop
jmp
add
pop
jmp
add
out
add
add
int
inc
add
in
or
pop
push
push
mov
xchg
ret
adc
str
iret
dec
push
mov
xchg
ret
push
add
jmp
bound
push
mov
xchg
ret
add
xorb
mov
sub
cmc
inc
add
add
dec
add
addr16
cld
nop
jmp
add
add
testl
clc
repnz
jae
repz
iret
add
repnz
jae
in
add
mov
push
mov
xor
add
add
movsl
out
lret
add
lock
push
mov
add
jecxz
add
add
adc
cmc
add
xchg
add
add
push
mov
xchg
ret
add
insl
sahf
add
add
mov
nop
cld
nop
jmp
jg
loopne
aam
aas
xor
clc
repnz
jae
hlt
jg
jmp
add
mov
clc
repnz
jae
add
add
into
cmp
mov
cmc
inc
add
add
add
add
rclb
clc
inc
add
sahf
bound
sti
add
mov
repnz
jae
lcall
add
pop
je
nop
cld
nop
jmp
xchg
fadd
int
nop
cld
nop
jmp
dec
pop
es
call
nop
cld
nop
jmp
add
xor
repz
mov
xchg
ret
cmp
jmp
add
fldl
nop
jae
add
add
add
dec
nop
cld
nop
jmp
add
jmp
jno
aam
xor
push
mov
xchg
ret
hlt
insl
in
insl
testl
adc
add
repnz
jae
bound
cmp
imul
add
cmp
add
pop
notb
adc
xor
add
clc
repnz
jae
add
in
clc
repnz
jae
add
and
ljmp
nop
cld
nop
jmp
add
repz
push
mov
xchg
ret
xor
aam
in
add
xchg
fisttpll
nop
jae
je
test
dec
mov
clc
repnz
jae
into
packuswb
lret
subl
push
mov
xchg
ret
pop
add
add
or
repnz
jae
pop
add
add
adc
jne
clc
repnz
jae
add
mov
aad
add
push
popa
movswl
nop
cld
nop
jmp
add
jmp
add
cmpl
nop
cld
nop
jmp
add
add
push
nop
cld
nop
jmp
or
add
add
in
mov
lret
sbb
mov
xchg
ret
repnz
pop
pop
xchg
add
and
mov
add
push
push
mov
xchg
ret
pop
repz
add
imul
clc
repnz
jae
hlt
cmp
insl
repnz
or
stos
clc
repnz
jae
sahf
aam
push
add
divl
idivl
clc
push
mov
xchg
ret
add
add
lret
lcall
repnz
jae
add
add
sub
add
mov
inc
add
add
jno
add
add
nop
cld
nop
jmp
add
jmp
aam
add
fwait
and
push
mov
xchg
ret
iret
lcall
or
repnz
jae
add
arpl
repnz
jae
in
lcall
mov
push
mov
xchg
ret
add
add
lret
add
nop
cld
nop
jmp
add
add
add
arpl
nop
cld
nop
jmp
add
add
lret
pop
clc
repnz
jae
add
add
test
add
cld
nop
jmp
mov
mov
pop
orb
jge
clc
repnz
jae
add
bswap
push
mull
jns
jne
clc
repnz
jae
add
add
iret
bound
and
clc
repnz
jae
repz
iret
in
mov
clc
repnz
jae
test
into
shll
cmp
repnz
jae
loopne
adc
add
or
add
repnz
jae
add
add
cmp
incl
add
add
add
add
sub
repnz
jae
rcr
pop
std
add
add
clc
repnz
jae
into
add
add
mov
xor
ljmp
out
add
shrl
push
adc
clc
repnz
jae
std
add
pop
dec
mov
nop
cld
nop
jmp
add
add
mov
inc
add
add
cmpsb
add
add
add
add
add
inc
push
mov
xchg
ret
loopne
add
and
clc
repnz
jae
add
je
mov
push
add
pop
clc
repnz
jae
add
loopne
or
xchg
clc
call
add
add
push
test
mov
nop
jae
aam
test
add
add
clc
repnz
jae
pop
add
add
add
add
mov
add
repnz
jae
cmp
lcall
jmp
xor
add
add
in
pop
repz
dec
cmp
repnz
jae
or
fcmove
nop
cld
nop
jmp
sti
add
add
add
testl
sbbl
add
mov
add
clc
repnz
jae
push
add
add
pop
and
clc
repnz
jae
xor
add
inc
add
ret
pop
aam
add
dec
insl
add
add
pop
add
mov
clc
repnz
jae
repz
add
in
mov
lret
hlt
inc
add
hlt
add
add
push
addb
add
not
push
mov
xchg
ret
cmp
jmp
shll
repnz
jae
hlt
adc
pop
jno
xchg
mov
clc
repnz
jae
loopne
ds
iret
jno
punpckhdq
cld
nop
jmp
out
hlt
adc
add
mov
add
adc
out
jmp
add
add
repnz
jae
test
push
call
fiaddl
xchg
ret
into
in
adc
repz
dec
mov
nop
cld
nop
jmp
jno
add
decl
nop
cld
nop
jmp
mov
dec
out
push
add
push
clc
repnz
jae
bound
add
stos
add
nop
cld
nop
jmp
add
add
add
repz
pop
mov
clc
repnz
jae
out
add
aam
add
loopne
inc
add
xchg
add
in
inc
clc
repnz
jae
pop
add
sti
jg
aam
push
pushl
clc
repnz
jae
hlt
add
add
add
add
clc
repnz
jae
add
leave
cmp
nop
cld
nop
jmp
add
je
clc
repnz
jae
jmp
iret
jne
fimull
nop
jae
sbbb
pop
pop
push
mov
xchg
ret
sahf
adc
add
add
lea
clc
repnz
jae
add
add
add
sbb
mov
xchg
ret
adc
std
mov
lret
clc
repnz
jae
add
add
xor
nop
cld
nop
jmp
bound
add
iret
add
sub
nop
jmp
lcall
repnz
mov
clc
repnz
jae
add
adc
mov
clc
repnz
jae
add
test
jae
out
std
adcb
add
inc
clc
repnz
jae
add
jg
adc
div
nop
cld
nop
jmp
add
add
add
add
inc
add
xor
add
clc
repnz
jae
add
jns
test
repnz
jae
add
out
cmp
nop
jae
pop
add
test
clc
repnz
jae
dec
sldt
add
lods
ret
clc
repnz
jae
repnz
test
movzwl
nop
cld
nop
jmp
and
out
mov
or
clc
repnz
jae
xor
clc
repnz
jae
in
push
pop
test
add
addb
stos
mov
clc
repnz
jae
lcall
mull
add
arpl
repnz
jae
add
add
xor
test
andl
jmp
add
sub
pop
nop
add
dec
add
repnz
jae
add
hlt
xorb
xchg
inc
add
loopne
aam
addb
shl
clc
repnz
jae
hlt
add
sahf
add
cltd
pop
clc
repnz
jae
add
iret
xor
out
repnz
mov
nop
jmp
add
or
add
add
nop
cld
nop
jmp
add
out
mov
loopne
cli
mov
clc
repnz
jae
lcall
shrl
mov
xchg
ret
hlt
add
sti
xor
lcall
xor
add
clc
repnz
jae
cmp
jge
dec
or
cld
nop
jmp
in
bound
repnz
enter
nop
jae
jmp
dec
add
or
or
popa
add
repnz
jae
add
popl
insl
add
mov
clc
repnz
jae
add
dec
lret
test
dec
adc
cld
nop
jmp
add
es
add
xor
add
clc
repnz
jae
sahf
repz
mov
add
push
mov
xchg
ret
dec
hlt
add
ret
push
push
mov
xchg
ret
add
xor
jno
add
clc
repnz
jae
ds
add
add
pop
push
push
mov
xchg
ret
adc
es
mov
nop
cld
nop
jmp
add
add
adc
add
test
nop
cld
nop
jmp
mov
pop
out
dec
push
clc
repnz
jae
lcall
idivl
inc
sbb
repnz
jae
add
add
cmp
mov
ja
fs
repnz
jae
add
add
mov
dec
sub
loopne
incl
jg
add
pushl
push
mov
xchg
ret
add
iret
add
repnz
jae
cmp
xchg
in
add
rolb
mov
nop
cld
nop
jmp
add
add
repnz
jae
or
add
aam
push
sti
lret
nop
cld
nop
jmp
add
add
lret
push
clc
repnz
jae
add
sahf
add
add
xchg
lds
clc
repnz
jae
insl
mov
add
addb
pusha
add
sti
nop
cld
nop
jmp
adc
es
rorl
loop
push
mov
xchg
ret
iret
jmp
bound
andl
int3
jmp
clc
repnz
jae
push
add
dec
loopne
lcall
clc
repnz
jae
xor
add
iret
mov
testb
add
clc
repnz
jae
repz
add
add
add
clc
repnz
jae
add
add
test
push
clc
repnz
jae
add
add
dec
add
int
add
or
cmp
ret
out
cmp
add
arpl
clc
push
clc
repnz
jae
add
xor
ds
iret
add
repnz
jae
sti
mov
call
repnz
jae
loopne
test
pop
bound
mov
clc
repnz
jae
str
mov
cld
nop
jmp
pop
add
add
in
add
movb
add
out
lods
push
mov
xchg
ret
negl
je
mov
sbb
out
jmp
clc
repnz
jae
aam
add
pop
test
add
add
nop
jae
add
add
jmp
add
movsb
clc
repnz
jae
sarl
add
or
das
push
clc
repnz
jae
hlt
mull
add
add
fildl
clc
repnz
jae
add
mov
ss
nop
cld
nop
jmp
pop
add
clc
repnz
jae
cmp
add
mov
push
mov
xchg
ret
hlt
add
clc
repnz
jae
add
add
mov
jmp
add
or
repnz
jae
hlt
add
add
clc
repnz
jae
add
hlt
add
sbb
jae
clc
repnz
jae
add
jmp
add
push
mov
add
xor
mov
jmp
clc
add
and
push
add
mov
je
clc
repnz
jae
test
push
mov
xchg
ret
xor
insl
add
sti
stc
mov
adc
pop
out
inc
add
negl
push
mov
xchg
ret
into
lret
es
add
push
sub
jmp
jae
push
iret
ds
jmp
xlat
adc
jl
movb
push
out
inc
add
add
std
test
sbb
mov
add
test
daa
add
adc
cmpsl
std
mov
push
mov
xchg
ret
add
fadds
pop
stc
int
add
add
clc
repnz
jae
dec
pop
add
sbb
repnz
jae
iret
testl
inc
or
mov
xchg
ret
add
pop
add
fisubl
repnz
jae
jno
xor
add
add
add
xor
nop
cld
nop
jmp
cmp
add
add
add
sti
clc
repnz
jae
lcall
add
call
nop
cld
nop
jmp
es
hlt
push
jmp
xor
add
clc
repnz
jae
add
push
add
push
clc
repnz
jae
add
add
add
add
leave
mov
clc
repnz
jae
lcall
shrl
repnz
jae
xor
add
add
fdivr
call
incl
iret
add
xchg
in
and
push
mov
xchg
ret
aam
add
add
add
cmp
nop
jae
add
add
pop
mov
clc
repnz
jae
add
leave
xor
push
mov
xchg
ret
sti
into
add
add
dec
dec
clc
repnz
jae
add
add
hlt
add
push
push
mov
xchg
ret
shll
mulps
movsb
add
test
add
repnz
jae
sahf
xchg
add
es
mov
sbb
clc
repnz
jae
add
int
add
in
add
add
clc
repnz
jae
add
add
in
inc
xchg
sub
jae
add
add
add
add
add
clc
repnz
jae
add
add
iret
add
nop
cld
nop
jmp
add
add
add
hlt
sub
jae
add
add
add
add
clc
repnz
jae
add
lret
pop
mov
mov
xchg
ret
add
es
repnz
jae
sub
movsl
add
add
ret
nop
cld
nop
jmp
add
add
add
add
jne
add
add
push
mov
xchg
ret
push
int
or
inc
jp
inc
and
nop
cld
nop
jmp
push
aam
cmp
add
mov
clc
repnz
jae
repnz
aam
add
mov
clc
repnz
jae
out
add
or
cmp
nop
jae
out
bound
adc
hlt
push
add
add
clc
repnz
jae
hlt
pop
add
stc
insl
sub
repnz
jae
adc
pop
add
add
aam
mov
clc
repnz
jae
hlt
add
add
add
lods
xor
clc
repnz
jae
dec
hlt
dec
lret
rep
nop
cld
nop
jmp
add
add
add
into
push
clc
repnz
jae
add
add
add
add
repnz
jae
std
sahf
push
add
add
sub
clc
repnz
jae
add
pushf
push
clc
repnz
jae
add
add
pop
add
mov
clc
repnz
jae
xchg
sahf
dec
add
sub
int
clc
repnz
jae
cmp
add
hlt
add
rep
clc
repnz
jae
add
add
xor
jbe
add
add
repnz
jae
hlt
movsl
mov
and
repnz
jae
jno
add
add
jno
test
nop
cld
nop
jmp
orb
add
add
fnsave
rclb
push
inc
add
aam
jmp
add
add
clc
repnz
jae
add
popl
iret
or
popa
add
mov
xchg
ret
out
add
add
xchg
clc
repnz
jae
lcall
add
add
mov
add
cld
nop
jmp
add
push
loopne
add
push
jae
repz
add
or
hlt
setne
push
mov
xchg
ret
jmp
fcomps
add
mov
lret
push
clc
repnz
jae
pop
add
add
mov
clc
repnz
jae
sub
add
nop
jae
add
add
push
clc
repnz
jae
lret
cmp
into
add
add
insl
imul
clc
repnz
jae
test
add
jno
add
test
add
add
cmp
out
and
add
jbe
and
paddb
inc
lods
leave
pop
pop
test
hlt
add
lods
add
pop
cmp
add
adc
cmp
add
dec
dec
rolb
xchg
add
add
outsl
mov
comiss
out
fstps
loope
add
jne
ret
test
imul
scas
iret
xor
and
inc
add
bound
mov
jmp
sub
add
add
add
dec
dec
mov
xor
add
arpl
fcmovu
cmp
cmp
jp
lock
dec
or
movsl
or
jecxz
add
movsl
push
add
cmp
mov
or
int
add
out
inc
mov
repnz
or
lcall
mov
je
pop
xchg
add
add
pop
lahf
inc
call
add
add
mov
mov
jno
dec
aam
scas
and
mov
push
or
mov
add
ret
jl
inc
dec
sbb
std
lcall
jo
push
mov
jle
cmpsl
test
in
sub
clc
mov
testb
mov
imul
add
add
push
add
xchg
jb
aad
test
in
cmp
mov
add
nop
add
out
jae
push
add
lahf
jge
rcll
add
jl
jne
add
scas
je
sbb
hlt
add
pop
cmp
fisttps
jo
call
add
lahf
mov
lret
nop
add
movsl
cltd
push
add
add
mov
pusha
add
add
xchg
and
imul
add
aaa
dec
repz
inc
add
je
lods
mov
or
fbstp
jecxz
rolb
test
mov
sbb
xchg
imul
add
repnz
jno
out
push
add
fmul
mov
add
mov
jb
push
cmp
in
dec
inc
in
lock
push
sahf
pop
loopne
lea
add
lods
fcomip
add
add
jg
jecxz
and
add
add
mov
xchg
xchg
jne
test
mov
rolb
mov
stos
jnp
rolb
add
adc
testl
out
dec
pop
sub
cmp
sub
outsb
sarl
inc
add
gs
push
add
push
add
add
add
inc
add
pop
rcl
add
add
add
lcall
add
add
sub
cmp
adc
dec
adc
add
jne
add
xchg
add
mov
cmpsl
push
add
cwtl
mov
loop
add
movsb
add
cwtl
mov
inc
and
add
mov
out
repnz
adc
mov
ljmp
sub
add
mov
push
das
sbb
clc
add
xor
dec
cmp
stos
jle
add
addb
and
inc
fcoml
and
xor
mov
lret
mov
jp
push
cwtl
dec
jl
add
pop
mov
add
rolb
or
push
add
stos
sub
das
ja
enter
add
into
imul
shll
add
cmp
sub
jmp
imul
mov
xor
add
mov
add
and
add
jp
mov
add
dec
jo
les
and
mov
stos
mov
imul
adc
add
jl
add
xor
pop
stc
push
add
mov
push
cmp
testb
lds
fstps
aas
and
add
testb
aaa
mov
or
lahf
mov
std
and
pop
sub
popa
pop
inc
int
add
test
iret
aaa
leave
mov
std
cmc
sbb
scas
pop
popa
stc
jno
lock
ret
push
add
inc
add
mov
adc
movsb
add
xor
shll
jbe
xchg
stos
adc
call
pop
add
mov
cmp
les
jno
mov
mov
pop
lods
mov
add
std
loopne
mov
addr16
sarl
mov
add
dec
mov
mov
add
pop
pop
sub
pop
aam
pop
filds
or
lock
xchg
add
lods
aas
fsubrs
inc
out
jae
add
add
mov
add
add
pusha
add
and
xor
add
imul
pushf
call
call
testb
mov
cmp
call
adc
lcall
add
test
xor
jne
xchg
sbb
add
outsb
jae
mov
add
add
mov
loopne
insl
pop
int3
or
out
and
popf
mov
jbe
jae
xchg
sub
add
hlt
add
sbb
mov
push
add
or
sub
cmp
xor
mov
xor
dec
fucomip
push
xchg
push
sbb
add
cmpsl
jae
stc
dec
pop
fiadds
add
and
mov
add
pop
add
add
sbb
xor
xchg
add
clc
inc
add
repnz
add
add
or
pop
inc
add
cld
test
xchg
rolb
popa
pop
aaa
lea
arpl
mov
out
cltd
mov
jb
clc
inc
add
xor
cmp
add
push
add
sbbl
scas
aad
jp
std
lea
pop
popa
cwtl
mov
cli
fadds
ja
add
rorl
add
add
dec
repz
inc
add
outsb
loope
cmp
dec
mov
adc
and
cmc
add
mov
mov
inc
aas
in
push
inc
push
mov
jnp
scas
push
add
mov
sub
adc
jge
in
jne
add
das
xchg
jae
roll
xchg
add
add
jle
add
add
inc
jo
sub
or
in
jmp
test
dec
xor
pop
mov
adc
pop
xor
outsb
add
loope
and
pop
dec
sahf
mov
cmp
mov
lret
add
push
stos
and
add
xchg
ja
jge
add
add
add
jecxz
add
xlat
push
xchg
add
xorl
add
testb
testb
add
shll
sbb
mov
add
add
add
sti
sbb
lahf
lods
mov
dec
cmc
add
pop
sub
cs
xchg
ss
and
mov
add
fisubl
mov
pop
cmp
add
nop
add
add
pop
lods
lret
add
add
mov
movsb
add
jne
test
add
or
add
add
cmp
add
lods
xor
repnz
add
sub
out
dec
outsb
es
jnp
jno
aas
xchg
xchg
mov
ja
add
icebp
cmp
add
pop
lret
mov
inc
add
add
ret
stos
sbb
add
xor
or
out
into
repz
xor
xchg
add
das
push
inc
add
rolb
push
add
add
mov
test
repnz
add
pusha
add
dec
repnz
mov
add
mov
outsb
sub
add
dec
push
and
ret
sub
stos
push
mov
and
inc
sub
lcall
add
add
add
lret
nop
add
sub
imul
cmp
mov
add
test
fldcw
into
jo
stos
scas
out
add
in
in
inc
add
pop
push
add
cmp
adc
and
or
xchg
xor
ds
bound
mov
mov
jp
xor
add
cmp
out
sbb
inc
pop
inc
filds
jb
jle
pop
cmp
sub
out
sbb
add
loop
lock
xor
inc
add
pop
mov
mov
push
add
aas
das
push
add
xchg
daa
and
loopne
jmp
into
je
mov
add
fcomps
add
mov
xchg
add
dec
pop
lea
inc
shl
xchg
jl
cmp
adc
sub
xor
xor
add
insb
push
cmpsb
add
add
in
mov
fcmovnb
add
add
add
add
ja
adc
xchg
sbb
in
int
imul
aaa
gs
iret
xchg
mov
scas
add
mov
add
dec
hlt
add
sub
rolb
das
das
out
sbb
add
movsb
add
pop
out
fiadds
fs
add
xadd
adc
rcrl
cmpsl
mov
inc
add
add
mov
and
mov
xor
cmp
add
daa
ja
iret
xchg
add
add
xor
adc
mov
mov
int
xor
fstps
jbe
pushf
mov
data16
add
add
push
add
fadd
push
or
testb
in
pop
pop
mov
imul
pop
add
mov
dec
add
imul
xchg
add
dec
int3
pop
mov
mov
and
add
daa
sub
add
testb
jnp
js
add
cmp
add
xchg
incb
push
cmpsb
add
icebp
test
cmpsb
add
insl
scas
add
sti
lcall
jle
icebp
mov
xor
insl
sub
gs
shll
xchg
sbb
mov
ljmp
push
add
jp
movsl
lahf
inc
inc
add
popa
xchg
mov
mov
rolb
mov
push
clc
mov
xor
jl
cmp
push
add
add
inc
add
imul
into
dec
ficomps
mov
dec
push
add
add
add
add
xchg
add
inc
add
insb
jne
mov
xor
out
rcrl
add
xor
fcompl
add
dec
addb
add
pop
popf
cmp
mov
add
ds
add
adc
stc
jl
sahf
imul
enter
out
jmp
or
xor
sub
sub
dec
sbb
sub
jae
inc
push
add
mov
dec
loopw
add
sub
add
and
mov
xchg
sub
push
add
jno
xchg
shll
mov
repnz
push
push
inc
aaa
out
jbe
mov
xchg
add
movsb
add
mov
das
rcrl
les
mov
sub
add
adc
mov
rolb
add
lods
insl
mov
add
push
add
lds
cmp
add
mov
sbb
add
sbb
inc
add
stos
jmp
cmp
add
mov
xor
mov
and
mov
mov
mov
lods
dec
and
insb
or
lock
fldl
push
push
add
or
or
mov
add
add
mov
sbb
add
jo
cmp
and
mov
movsl
mov
in
dec
mov
popa
insl
mov
flds
nop
add
xlat
adc
test
mov
jle
push
add
jl
shrl
popf
inc
add
add
mov
mov
adc
cmp
cs
inc
pcmpgtb
xor
addb
testb
or
gs
aam
mov
inc
add
flds
add
add
mov
rolb
dec
xchg
fdivrl
cmc
or
add
add
lock
jge
adc
add
mov
rolb
sbb
cli
xchg
adc
mov
add
mov
add
in
in
cmp
xor
mov
sbb
mov
add
xchg
stos
fsubl
add
leave
cmp
pop
ss
jno
jae
add
pop
and
add
mov
and
dec
dec
pop
sbb
xor
sbb
add
add
sub
add
icebp
sarl
adc
cs
pop
dec
sti
ret
mov
scas
inc
add
jle
jp
pushf
jb
jnp
jo
mov
int3
das
pop
sub
les
imul
add
mov
fadd
add
rcrl
pop
or
cmp
das
sub
add
add
das
in
add
stos
push
add
pusha
add
test
jl
add
pop
jp
js
add
test
repz
add
add
popa
ror
adc
lock
add
ret
or
int
cmp
sub
add
cmc
call
daa
push
stos
mov
jle
aam
in
mov
gs
xor
mov
sub
inc
adc
dec
int
jns
repz
enter
add
add
adc
rolb
cli
cld
pushf
cs
movsl
jnp
add
mov
and
mov
add
test
stc
push
cmpsb
add
add
jo
adc
in
lahf
fwait
push
fs
iret
addr16
mov
add
mov
cld
xor
clc
xchg
loop
cmp
mov
push
add
arpl
add
mov
pop
scas
push
push
add
mov
lcall
ret
into
pop
jo
addb
push
rolb
add
daa
xor
add
imul
mov
inc
add
lock
add
add
jg
mov
add
add
add
addb
adc
mov
ret
lea
xchg
add
lods
popa
pop
add
cmp
add
pop
cmc
scas
add
lret
mov
stos
test
add
std
sub
pop
data16
int3
mov
cmp
add
cmp
sub
sub
add
inc
sahf
jmp
sub
and
add
stc
or
bswap
and
les
mov
add
add
dec
mov
add
inc
add
testb
mov
jne
clc
mov
or
pop
dec
jp
inc
stc
icebp
xlat
mov
mov
mov
xor
push
add
add
pop
xchg
add
mov
clc
push
sbb
sbb
push
add
xor
and
add
daa
int3
std
stos
test
add
mov
mov
out
les
std
sbb
xor
jmp
adc
add
gs
add
cmp
add
push
out
add
xchg
cmp
add
or
or
add
adc
es
add
add
add
cltd
fildl
add
xor
enter
insl
addb
push
add
jge
mov
and
mov
loopne
mov
xchg
add
dec
les
mov
cmp
mov
jo
rcrl
jo
pusha
add
jecxz
add
addb
add
add
mov
dec
jno
add
out
add
pop
cs
pop
or
sbb
add
popf
scas
xchg
jne
movsl
push
cmp
add
roll
add
testb
push
add
test
mov
jmp
or
add
xlat
or
out
mov
rolb
in
cmp
lea
push
sbbl
mov
jae
outsb
jp
out
mov
push
inc
add
xchg
add
mov
leave
movb
in
fld
sbb
add
sub
sbb
add
push
mov
pop
addb
add
and
mov
imul
cmp
adc
test
pusha
add
add
test
cltd
xchg
add
data16
pop
xor
sub
cmp
add
incl
mov
mov
xchg
mov
cltd
cltd
ret
dec
lret
ljmp
mov
lahf
add
add
add
dec
push
add
add
add
push
jg
jl
call
in
sahf
cwtl
xor
lret
mov
xchg
mov
add
add
add
add
adcl
add
bound
mov
xchg
add
test
add
stc
out
inc
cld
and
mov
dec
je
jb
jae
add
pop
testb
test
sub
cld
mov
test
push
daa
mov
sbb
add
data16
add
add
cmp
mov
add
add
movsl
int3
xor
addl
add
aad
add
add
ljmp
stos
inc
cmp
add
hlt
add
add
in
aaa
cltd
sti
sbb
js
add
jle
aaa
mov
pop
jbe
mov
push
add
aad
lcall
ja
sub
lret
inc
jns
std
or
add
stos
sbb
pop
addb
add
add
cld
inc
add
test
mov
fmuls
add
loop
das
mov
add
lcall
stos
scas
cmp
insb
xchg
rolb
dec
ret
sbb
fsubr
add
cmp
out
cmpsl
pop
sbb
inc
add
push
add
add
jo
movsl
int
cmp
add
add
dec
pusha
add
repz
leave
pop
push
add
arpl
shrl
out
dec
push
sbb
mov
adc
pop
inc
add
xchg
mov
mov
data16
add
and
mov
clc
cmp
outsl
test
fbld
je
sub
out
add
add
jmp
add
orl
mov
push
add
add
hlt
add
adc
test
stos
mov
add
or
jae
add
clc
xor
pop
loop
aad
jle
mov
add
xchg
add
add
outsl
sub
or
fsubrs
push
add
mov
stos
fcoml
test
pop
fbstp
mov
inc
mov
les
sbb
pop
cwtl
out
in
pop
pop
pop
adc
sbb
sub
bound
mov
mov
testb
add
sbb
lret
add
outsl
imul
mov
stos
pusha
add
mov
add
and
mov
call
aam
icebp
jl
add
and
cmp
out
test
sub
repz
add
or
or
and
add
test
pop
xchg
add
mov
mov
mov
fwait
mov
popa
sub
add
push
add
imul
pusha
add
mov
pop
sub
lods
out
lahf
push
add
and
add
mov
ljmp
jo
addb
xchg
in
aad
lret
add
xor
aam
xchg
stos
inc
add
lcall
in
out
sbb
sbb
stc
cmp
mov
outsb
xlat
cmp
clc
shll
add
add
push
inc
xchg
add
add
add
push
add
add
cmp
stos
xor
mov
push
add
mov
pop
into
loop
rcl
mov
movb
sbb
bound
mov
push
lock
movsb
add
insb
and
test
add
add
test
xchg
or
add
testl
add
add
xchg
andl
push
decb
push
mov
mov
add
add
mov
jmp
push
add
inc
dec
cmp
in
sub
sub
icebp
mov
xor
cld
repnz
add
and
add
mov
loopne
xor
lods
jno
add
clc
or
add
bound
mov
xchg
inc
insb
je
out
add
push
push
xchg
idivl
or
lret
test
test
add
mov
push
inc
rolb
sahf
std
enter
outsl
mov
fwait
dec
arpl
adc
icebp
dec
out
add
xchg
adc
scas
movsl
push
add
cmp
add
fdecstp
add
imul
lods
mov
leave
fisttpll
lock
mov
push
add
mov
cmp
ja
aad
in
push
movd
and
cli
push
add
and
rep
inc
arpl
mov
lock
pusha
add
sub
add
movb
hlt
add
add
push
sub
hlt
add
in
xchg
fwait
inc
test
adc
push
add
icebp
in
mov
in
inc
add
mov
jno
add
sbb
add
pop
xlat
add
mov
adc
in
fisubl
pop
sub
dec
pop
fbld
dec
test
dec
pop
ficoml
add
add
mov
add
jns
nop
add
mov
scas
jl
imul
pop
mov
imul
shll
scas
xchg
fsubl
ret
pop
jns
add
push
add
jns
add
lods
testb
add
fsubrl
pusha
add
xchg
cmp
xchg
mov
add
or
mov
ret
dec
aas
and
mov
add
push
ret
mov
add
in
inc
jae
add
inc
add
push
add
xchg
jle
mov
add
leave
fmuls
mov
or
jns
dec
movb
sub
mov
xchg
add
mov
and
add
jbe
testb
add
mov
cmc
rolb
xchg
fidivrs
xchg
stc
leave
mov
mov
enter
adc
dec
in
fiadds
pop
hlt
add
mov
cmp
dec
lret
sti
imul
lret
inc
adc
movsb
add
jne
pop
pop
jae
push
or
add
adc
mov
cmp
add
pop
mov
add
add
daa
cmp
jne
jecxz
add
mov
push
add
cmpsl
fstpt
les
sub
add
add
push
sub
cmp
adc
or
dec
mov
jmp
cmp
add
mov
add
mov
testb
inc
lods
cwtl
je
push
xor
mov
jbe
idivl
mov
loopne
add
mov
cmp
sbb
jp
dec
dec
cmc
jp
stos
pusha
add
add
mov
add
inc
pushf
cwtl
loopne
inc
mov
outsb
in
cmp
loopne
pop
test
add
sbb
add
nop
add
stos
fstpt
testl
or
rcll
pop
lcall
inc
movsl
xor
sub
pop
insl
mov
stos
test
add
cmpsb
add
add
add
movsb
add
pop
xor
jl
add
add
es
in
sbb
lcall
fildll
testb
mov
add
lods
out
pop
divl
in
sub
add
xchg
add
add
pushf
inc
cmp
jmp
lret
scas
aas
dec
mov
mov
and
stc
ja
aam
pop
add
adc
mov
mov
pushf
aam
xor
cwtl
hlt
add
test
or
add
in
jno
adc
xor
and
pop
cvtps2pi
and
or
cmp
fsubs
aaa
mov
add
mov
add
cmp
loop
cmovbe
pusha
add
add
cwtl
pop
jbe
and
mov
add
jl
add
add
cwtl
std
xchg
js
aam
mov
out
insl
outsb
sarl
pusha
add
pop
xchg
xchg
add
cmpsb
add
add
ja
cmp
add
add
push
stos
cld
flds
scas
das
dec
scas
cwtl
cmpsl
test
testb
in
push
cli
mov
sbb
add
cmp
add
pop
mov
add
add
pop
mov
add
sub
je
fdivs
dec
add
push
lret
daa
jo
add
and
add
clc
cli
xchg
add
sub
jmp
mov
push
add
add
add
add
add
mov
push
jg
out
mov
movsb
add
aad
add
pop
dec
push
add
adc
test
or
mov
rolb
cmp
xor
aam
pop
jno
or
lret
sub
inc
movsb
add
mov
add
add
mov
add
mov
testb
add
sub
lock
mov
pop
int
movsl
mov
push
pop
fcoms
popa
and
mov
add
add
push
add
sbb
dec
fldcw
add
pop
adc
stos
cmp
pushf
sbb
and
mov
dec
push
add
xor
inc
add
and
or
lods
or
inc
add
pop
jno
fdivrs
or
movsb
add
lea
cmpsb
add
mov
pop
fnstsw
mov
movsl
imul
les
hlt
add
dec
pop
loopne
int3
sti
aad
push
add
imul
add
mov
mov
mov
in
jne
add
add
movsl
jmp
push
add
add
add
sub
and
push
mov
jo
jo
out
add
sbb
add
leave
je
test
mov
pop
imul
mov
lahf
rolb
imul
push
add
andl
pop
sbb
fcmovb
add
inc
adc
movsb
add
fcompl
fadd
add
add
in
lret
jo
xor
ljmp
cmp
dec
mov
add
mov
mov
leave
addr16
cmp
mov
add
push
jle
pop
punpcklwd
ret
and
inc
xchg
add
and
mov
scas
mov
or
add
and
lret
daa
add
add
sbb
mov
add
or
add
mov
add
pop
jge
add
int3
xchg
inc
add
inc
clc
nop
add
adc
jbe
loopne
and
add
daa
inc
add
nop
add
outsl
push
mov
jmp
pop
add
cmp
and
add
add
add
add
add
add
cmpsb
add
and
arpl
mov
add
imul
pop
aam
lret
add
xor
add
mov
pop
add
repnz
add
pop
sbb
mov
cmp
add
add
xor
adc
xchg
xlat
cmp
dec
adc
sbb
add
mov
add
push
add
test
cli
xchg
add
add
adc
mov
sbb
test
je
stos
nop
add
add
aas
xor
ret
push
popf
push
add
mov
and
mov
iret
lods
jmp
xor
add
add
jp
fimuls
fdivrp
fsubs
jle
xchg
add
adc
add
jp
add
leave
lret
push
add
inc
add
add
add
add
mov
ret
call
out
mov
lock
inc
add
mov
xchg
add
pusha
add
sbb
fwait
ret
std
mov
in
adc
add
jne
jg
add
adc
add
add
add
add
mov
pop
jae
test
add
les
shrl
add
add
cmc
mov
popf
jecxz
xchg
add
inc
xor
ds
jbe
sbb
stc
xorl
xchg
add
add
add
add
sub
add
lret
in
sbb
leave
cmp
out
inc
add
add
sub
add
sbb
add
add
xlat
inc
outsl
jb
cmp
add
testb
out
outsl
sti
or
mov
jno
jae
mov
rcrl
xchg
mov
in
add
dec
cmpsl
inc
add
in
aad
lods
lea
les
cltd
rolb
cwtl
or
push
xor
fmull
add
inc
add
jns
adc
xor
leave
jae
daa
je
out
jle
or
hlt
add
pop
xchg
les
jmp
add
add
add
add
outsl
std
push
add
ret
xlat
sub
pop
lock
xchg
daa
repnz
outsb
pop
fwait
addb
pop
ret
sbb
add
add
add
mov
or
add
jae
aas
lret
inc
add
mov
add
add
pop
mov
mov
push
add
dec
lahf
and
mov
jmp
push
add
clc
testb
jnp
jp
inc
xchg
add
testb
cwtl
add
ds
cltd
jmp
movsb
add
and
arpl
mov
xchg
nop
add
mov
rolb
sbb
popf
and
rolb
fldt
inc
add
add
mov
pop
mov
cmc
push
add
fists
xchg
fs
fimull
sbb
out
add
outsl
jmp
add
icebp
sbb
bound
mov
xchg
add
mov
jmp
sub
sbb
add
xchg
and
add
testb
lea
add
lds
add
xchg
add
add
cmpsl
mov
inc
gs
mov
jnp
lea
add
testb
sbb
sub
cmc
jno
add
lahf
rolb
mov
push
add
rolb
push
add
xor
cmpsl
rolb
adc
sbb
add
subl
add
mov
mov
add
sub
add
add
lret
mov
add
mov
pop
mov
push
add
add
add
sbb
add
add
imul
fs
sub
movsb
add
mov
xor
jge
add
xchg
lods
cmp
add
mov
sti
jmp
pop
outsl
in
add
mov
addb
sahf
fbstp
add
add
xchg
add
add
mov
lahf
fucom
add
add
sahf
xor
lds
mov
sti
mov
into
adc
popa
sub
add
stc
adc
cli
pminub
add
jb
lahf
rolb
nop
add
add
negl
cmpsb
add
pop
in
or
into
add
mov
add
add
push
add
gs
add
jle
add
mov
jg
fnstcw
add
mov
int
add
dec
lock
add
inc
add
cli
mov
add
outsl
xor
xchg
add
add
add
push
mov
add
ficoml
add
add
add
repz
cld
sbb
add
add
fstpl
in
sub
inc
jo
ret
call
xchg
add
mov
add
add
idivl
add
xor
add
add
mov
add
clc
push
sbb
mov
add
mov
push
add
add
add
repz
stc
push
add
mov
mov
add
mov
lcall
inc
add
lret
add
push
add
add
clc
and
mov
cmc
push
rolb
lea
scas
push
add
xchg
add
repz
in
pop
sub
rolb
inc
cs
xchg
xor
mov
ret
insl
xchg
add
data16
add
sar
lods
inc
add
test
jnp
add
add
aam
mov
push
mov
clc
stos
mov
test
cwtl
pop
add
xchg
testb
add
mov
or
mov
ljmp
lcall
xchg
data16
sbb
lahf
ss
adc
or
add
ficomps
rolb
jecxz
add
das
data16
mov
loopne
out
pop
add
punpckhdq
decl
sbb
sahf
jl
pop
adc
pop
pop
out
push
add
or
add
aas
cmp
dec
mov
enter
adc
pop
adc
add
mov
add
mov
jae
bound
mov
pop
sbb
ret
adc
and
add
add
repnz
xor
int3
inc
imul
sbb
fwait
scas
or
push
aaa
imul
add
adc
adc
add
rolb
adc
call
fidivrs
loopne
mov
icebp
hlt
add
rol
add
repnz
dec
shll
add
mov
cmp
add
rol
sub
ljmp
aad
add
xchg
mov
add
mov
add
xchg
jne
add
xchg
loop
stc
mov
loope
add
mov
orl
js
add
add
daa
in
add
inc
add
mov
mov
lock
add
sub
movb
fnstcw
xor
scas
loop
out
mov
add
mov
lock
xlat
fimull
repnz
xchg
add
add
add
adc
mov
mov
add
mov
add
addr16
add
outsb
cld
xchg
sbb
add
aam
mov
mov
jo
pop
mov
xor
push
add
add
add
push
add
lods
or
jnp
add
lods
add
in
roll
xor
push
add
sub
add
push
add
cs
test
movsl
push
add
cli
push
push
add
jp
or
fcoml
cli
in
sbb
cli
pop
push
dec
xor
mov
inc
push
cmp
and
mov
ljmp
pop
divl
scas
lock
jle
add
rolb
mov
repz
cltd
out
sub
scas
hlt
add
popf
adc
addb
push
add
add
add
jno
in
icebp
mov
xorl
mov
jmp
add
aas
lods
push
je
push
sbb
add
mov
lret
js
fwait
daa
nop
add
inc
add
add
dec
rolb
lret
mov
sub
fstps
xchg
jl
add
adc
stos
push
mov
cmp
pop
mov
push
add
or
add
mov
leave
mov
loope
lock
add
sbb
popa
addb
xchg
add
mov
decl
rolb
add
shl
pop
mov
das
sbb
pop
push
dec
push
add
loope
cmp
dec
mov
cs
enter
xlat
cltd
or
cli
push
dec
into
or
dec
leave
out
jg
mul
or
mov
mov
sub
ret
inc
add
mov
repnz
inc
add
sbb
xchg
inc
add
and
adc
inc
int
add
xor
add
repnz
bound
mov
mov
add
xchg
add
add
add
shrl
repnz
in
in
push
sbb
fidivrl
movb
addb
cmp
cmp
xor
test
xor
mov
add
add
jl
add
mov
outsl
arpl
add
sub
add
inc
add
push
add
cli
dec
sahf
gs
add
movb
add
testb
add
rolb
mov
pop
pop
lahf
sub
add
jbe
or
das
arpl
jg
sbb
add
jns
add
pop
rolb
mov
push
fisubrl
jo
testb
mov
test
add
pop
test
jl
pop
mov
int3
fldenv
add
xchg
add
fldenv
loope
xor
cmp
fnstenv
add
cli
cmpsl
adc
mov
add
xchg
add
mov
mov
xchg
add
xor
mov
mov
sub
xchg
add
add
mov
dec
jo
fiadds
push
mov
aaa
testb
pop
in
stos
ss
add
add
xor
jae
adc
jbe
sub
add
cmpsl
in
ja
add
pop
fildl
mov
test
sbb
lret
movb
sti
je
inc
aad
leave
dec
out
mov
inc
add
imul
in
push
add
je
sub
xor
jno
add
jo
addb
add
rolb
lret
push
add
mov
add
add
fcmove
pop
pop
jmp
add
scas
and
mov
add
push
rolb
out
popf
mov
ja
mov
stc
xor
pop
mov
std
test
js
mov
add
mov
ss
mov
aad
movb
pusha
add
xor
fwait
scas
cli
in
std
jg
add
testb
mov
push
add
call
jbe
test
adc
xor
mov
push
adc
add
pusha
add
add
pushf
push
and
test
add
add
add
add
mov
add
inc
pushf
insb
ljmp
sbb
and
jae
add
enter
lea
dec
pmaddwd
mov
lahf
test
inc
stos
shll
jl
inc
add
xor
add
mov
add
rolb
fwait
cmc
dec
add
and
insl
lods
mov
popa
lahf
movb
int3
mov
mov
out
add
dec
xor
fcomps
add
add
add
lret
cmc
jnp
xor
cld
cmpsl
sbb
lahf
jnp
mov
or
mov
mov
cld
lock
jo
loop
jp
xchg
add
lds
js
mov
cmp
add
add
int
or
add
aas
mov
sti
xor
insb
int3
mov
add
cs
clc
pop
nop
add
and
sahf
mov
stos
xchg
dec
pop
in
push
ret
add
pusha
add
fs
mov
stos
pop
hlt
add
sbb
aas
mov
test
mov
xchg
add
add
mov
add
outsb
mov
inc
pop
jno
xor
dec
loope
cmp
je
mov
lcall
je
inc
rolb
jge
das
dec
leave
dec
loopne
cmc
fisttpl
pop
sbb
add
mov
cmp
out
push
daa
outsb
ljmp
push
add
add
bound
mov
jb
movsl
cmp
add
mov
add
pushf
sub
insb
pop
out
std
inc
add
loope
enter
dec
scas
inc
add
add
cmp
lods
xchg
adc
cwtl
je
xchg
pusha
add
add
add
lret
rolb
pop
dec
adc
dec
dec
pop
mov
cmpsb
add
out
add
cmpsb
add
mov
daa
ljmp
pop
rolb
enter
gs
js
add
dec
fsubr
pusha
add
cmp
into
rolb
adc
dec
out
xlat
mov
add
add
mov
jle
xchg
movsb
add
cs
std
adc
adc
push
or
xchg
mov
add
xchg
add
mov
into
loop
in
mov
dec
dec
test
jae
insl
ds
icebp
ja
xchg
xchg
adc
xchg
pop
sub
add
popa
testb
inc
add
and
das
addb
fcmovbe
pop
add
outsb
add
cmpsl
fwait
es
add
addb
ds
movsb
add
add
push
add
and
add
inc
add
mov
lods
add
mov
jae
addb
add
add
xchg
add
xchg
add
addb
lea
and
mov
mov
and
mov
outsl
mov
mov
loopne
pop
cli
call
sahf
pusha
add
pushl
sti
mov
add
cmpsb
add
add
add
add
in
clc
cmp
push
dec
xchg
stc
push
icebp
fwait
adc
lahf
iret
outsl
jle
mov
xor
add
xlat
or
add
dec
lcall
sub
add
add
pop
pop
and
mov
adc
pop
adc
pop
dec
inc
jno
add
push
jb,pn
dec
and
mov
movl
xor
fisubrl
das
arpl
add
lock
mov
pop
and
add
mov
add
add
les
jb
pop
arpl
add
mov
xor
add
xchg
add
das
xor
add
adc
sti
mov
or
or
mov
mov
scas
cld
lret
cmp
add
les
shll
add
push
add
add
cmpsl
push
add
icebp
cli
ja
jmp
scas
fs
movsb
add
add
add
sbb
leave
loop
cmp
fidivrs
mov
scas
int
into
fistps
cmp
add
xchg
mov
inc
add
cmp
push
add
lcall
pop
stc
push
add
add
cmpsb
add
in
mov
lcall
loope
add
add
add
xchg
add
jno
add
cmp
add
dec
jg
add
test
or
pop
sub
jl
cld
xchg
dec
push
test
addb
add
fildl
addl
shll
mov
sbb
call
xor
inc
jae
sbb
or
movsl
sbb
out
daa
and
mov
rolb
aad
add
add
jl
add
mov
mov
mov
scas
lods
xchg
add
mov
mov
dec
repnz
fsubrs
adc
gs
add
add
mov
repz
mov
mov
pop
addb
dec
cmp
push
add
add
mov
pushf
and
mov
or
adc
or
cmp
mov
ljmp
mov
dec
adc
lret
aad
out
dec
std
nop
add
mov
add
testb
add
add
add
loopne
stc
mov
mov
inc
lods
insb
out
popa
and
mov
xchg
add
add
push
add
xchg
inc
repz
filds
in
icebp
mov
stc
scas
call
hlt
add
add
pusha
add
mov
dec
into
aad
hlt
add
pop
js
mov
sti
stc
imul
add
sub
out
mov
add
inc
add
xchg
cld
aad
add
mov
std
push
idivl
mov
mov
xor
jbe
pop
pop
lahf
sbb
jp
add
mov
pop
mov
xchg
add
scas
push
add
dec
fcompl
rolb
pop
sbb
les
xchg
add
test
add
jl
add
fstps
pop
mov
push
sub
out
aaa
mov
or
add
xchg
ja
add
jb
sbb
fdivrp
push
add
adc
mov
mov
insb
enter
outsb
mov
cmpsl
xor
add
mov
adc
pop
imul
mov
ffreep
popa
scas
scas
faddl
jmp
add
movsb
add
cwtl
jl
add
add
in
mov
and
add
add
add
push
add
add
jb
pop
loop
iret
add
mov
push
add
add
hlt
add
add
test
out
loopne
jmp
cwtl
adc
aad
jecxz
not
add
add
sub
adcl
add
test
daa
pop
fistpll
xor
add
lea
add
add
std
add
add
sbb
movb
add
lods
mov
xor
in
es
mov
repz
push
add
clc
cmp
add
mov
add
pop
outsb
push
add
je
inc
add
les
loope
xor
adc
inc
and
mov
stos
pop
cmp
test
addb
add
stos
mov
add
adc
jbe
jno
and
iret
popf
pop
notl
add
ret
aad
fistpll
add
ret
add
xor
xor
enter
addb
into
movsb
add
pop
push
xchg
icebp
shl
add
fwait
sbb
mov
add
rolb
lcall
rolb
add
adc
popa
xlat
or
mov
push
cli
mov
mov
dec
or
add
pop
add
xlat
int
les
into
mov
adcl
loop
push
add
sbb
mov
xor
inc
add
dec
mov
and
add
cmp
mov
xor
xor
mov
cld
inc
add
enter
xor
shrl
cmp
add
rcrl
add
js
add
fwait
xchg
add
push
add
add
jb
iret
adc
adcl
test
add
xor
add
add
jg
les
insb
mov
data16
ds
sub
add
xchg
pushf
mov
mov
mov
test
sub
xor
xor
jmp
addb
repnz
push
rolb
add
and
push
add
testb
add
push
mov
or
clc
sbb
add
pop
add
rcll
mov
xlat
xchg
add
call
mov
in
dec
cwtl
rcll
pushf
xchg
add
add
sub
jbe
lcall
cmp
add
push
add
add
leave
addb
add
rol
add
add
or
mov
js
inc
add
aaa
mov
lret
mov
lahf
sub
cltd
mov
push
add
xchg
inc
sub
out
pusha
add
add
add
andl
pop
ret
add
addl
and
fisubs
add
mov
into
in
xor
mov
and
rolb
add
cli
sub
sti
cwtl
nop
add
lods
lret
and
inc
add
mov
popf
rolb
add
add
mov
add
insl
cli
mov
mov
add
or
test
add
add
scas
add
add
cmp
rolb
testb
pop
inc
add
shl
add
imul
outsb
xchg
nop
add
loope
add
add
mov
movb
xchg
add
add
and
sub
mov
pop
dec
addb
push
add
movl
pop
add
push
mov
fbld
pop
jecxz
add
mov
sub
add
add
test
and
mov
pop
sub
stc
pop
movsb
add
dec
push
add
add
add
jne
xchg
jecxz
mov
jecxz
int
add
sbb
inc
mov
enter
add
add
jbe
and
push
add
insb
mov
add
pop
mov
add
or
add
xor
pop
and
mov
imul
enter
add
sub
in
push
add
add
jb
xlat
lret
mov
adc
mov
add
lods
add
xor
jno
jmp
pop
out
ja
mov
add
mov
test
cmpsl
fiaddl
addr16
fsubrs
rolb
pop
mov
outsb
out
sub
les
add
add
mov
mov
js
ret
add
mov
hlt
add
add
mov
dec
dec
iret
jl
add
push
add
add
jno
pop
jae
pop
lods
dec
mov
cmc
xor
je
incl
mov
loope
xor
stc
jnp
lea
and
mov
add
add
add
add
push
add
aam
testl
leave
push
add
cli
pop
xor
cmp
jns
add
pop
in
jge
mov
jne
fwait
ljmp
add
sub
cmc
cli
roll
push
add
push
add
add
rol
lods
dec
xchg
ret
sbb
mov
push
fsubl
mov
lods
shll
add
add
int
lods
cmp
add
add
rolb
lea
add
jo
addb
lods
jo
mov
lcall
adc
and
mov
add
mov
mov
add
push
add
sbb
adc
xor
sub
jg
add
addb
sub
add
lock
cwtl
fwait
dec
xchg
add
and
scas
jno
int3
pop
sbb
clc
inc
add
icebp
mov
push
ret
add
inc
jnp
xor
movsb
add
add
fistpl
mov
xchg
mov
mov
cli
xchg
xchg
inc
mov
add
js
adc
mov
mov
lods
repz
add
mov
lret
stos
xor
cwtl
mov
xchg
add
pop
pop
pop
add
popf
iret
pop
mov
test
icebp
fimuls
add
into
xor
into
ret
cmp
add
lods
addb
xchg
add
add
add
xchg
dec
cmp
add
ljmp
ret
loop
cli
add
movsb
add
add
sahf
mov
cltd
xlat
ret
add
cs
cmpsl
mov
jbe
call
scas
cmc
sbbl
add
out
repz
add
xchg
rcll
sahf
sbb
add
wbinvd
push
add
stc
mov
add
cmp
call
add
dec
adc
inc
mov
inc
add
add
xchg
add
add
add
add
scas
or
add
lods
sbb
xor
stos
mov
mov
add
inc
pusha
add
and
mov
out
inc
fwait
ds
push
add
add
add
add
mov
xor
mov
add
shrd
add
in
jnp,pn
pop
and
mov
add
add
pusha
add
inc
pop
mov
aad
dec
andl
jnp
push
add
adc
sahf
xor
add
std
out
les
push
cmp
add
cltd
rolb
cmp
add
add
cli
sub
jle
jns
add
sahf
imul
or
add
add
lods
aad
les
test
mov
sbb
inc
add
jbe
cld
jno
sub
cmp
and
add
mov
add
add
js
add
je
pop
cmp
xor
adc
in
in
std
lods
xchg
add
xchg
stos
add
mov
addb
test
loop
jle
pop
fsub
add
icebp
negl
sbb
add
sub
adc
jnp
adc
mov
jl
add
mov
add
add
mov
jns
sub
add
xlat
mov
filds
dec
mov
and
lock
add
lcall
cltd
jp
mov
cmp
jno
je
mov
jne
add
sbb
mov
inc
repnz
daa
xor
cmp
xlat
add
mov
push
push
psubusb
and
mov
pop
mov
daa
sub
dec
xor
ret
pop
xchg
add
out
cmpsb
add
dec
pop
out
or
add
es
add
mov
popf
pop
movb
xor
stc
xor
jnp
add
inc
add
loopne
lods
inc
add
sub
add
add
add
add
add
int
dec
sbb
push
cmp
add
add
lcall
adc
mov
add
add
add
mov
mov
push
add
add
adc
fmuls
test
sub
mov
add
fstl
jmp
pusha
add
cmp
lret
xor
add
add
add
cmpsl
mov
add
dec
testb
lcall
mov
in
jne
add
add
add
sub
loopne
cmp
add
push
add
mov
add
add
add
pop
jo
das
xor
test
adc
mov
add
xlat
cmp
sub
add
add
add
test
pop
dec
push
mov
addb
add
add
mov
jle
add
jmp
cmp
data16
lahf
and
cld
add
fucomi
add
mov
into
leave
sub
call
ret
lods
mov
add
jo
lahf
loop
clc
jo
into
mov
inc
add
call
add
add
aad
add
jb
cmp
std
test
lcall
cmpl
popa
addb
add
and
test
rolb
pusha
add
mov
dec
popa
lds
pop
lcall
mov
fdivl
mov
jb
pop
lea
add
jne
loop
out
add
outsb
inc
add
add
mov
adc
mov
cmp
xchg
inc
insl
lock
je
add
xor
xchg
adcl
sbb
mov
jbe
push
loopne
inc
ljmp
add
jb
addb
add
add
rcl
js
sub
add
add
movsb
add
scas
jae
add
out
leave
pop
pop
mov
mov
jns
mov
out
add
xchg
add
addb
add
addb
inc
inc
add
mov
rolb
sbb
lcall
cltd
insb
sub
add
icebp
sbb
rorl
in
push
add
add
mov
cltd
pop
xchg
add
jns,pt
and
inc
cld
sub
enter
add
aad
addl
pop
cld
add
push
xchg
add
add
mov
ror
mov
fnstcw
cs
mov
jno
and
mov
jl
xchg
lret
lea
cmc
xor
add
mov
add
sti
aaa
xor
pop
fwait
mov
stos
sub
mov
add
push
inc
in
mov
add
add
popf
outsl
add
loope
add
imul
add
cmp
add
imul
add
mov
jnp
stos
mov
fwait
pop
out
pop
cmp
add
scas
jo
test
sub
in
jnp
add
add
dec
daa
and
mov
sbb
adc
xchg
bound
mov
mov
mov
add
add
add
mov
into
xor
fxch
inc
outsl
outsb
cmp
add
call
push
inc
add
push
add
and
scas
mov
imul
movsb
add
imul
add
add
add
icebp
fldenv
movsl
les
adc
aam
dec
or
xor
leave
mov
inc
add
add
add
add
pusha
add
xchg
push
add
push
dec
clc
adc
mov
inc
add
add
or
add
add
divl
sub
add
add
rolb
imul
sbb
add
add
xor
add
xchg
add
add
mov
call
push
add
into
xor
cld
sub
add
add
loope
cmp
mov
jp
push
add
add
pushf
test
xchg
push
add
addb
add
inc
pop
and
mov
iret
dec
or
add
inc
add
add
in
lds
push
adc
add
add
mov
mov
js
inc
add
lret
add
add
ja
sub
mov
imul
pop
or
jmp
insb
mov
cmp
or
pop
sbb
add
add
add
lret
add
add
add
add
add
jno
imul
add
ret
pop
bound
mov
sbb
std
adc
in
inc
repz
imul
insb
les
aaa
jo
dec
mov
add
xchg
aam
or
push
add
xor
imull
xor
fisubrl
sub
inc
xchg
add
loop
inc
add
add
add
pop
rolb
add
add
add
scas
les
rcr
add
mov
add
add
mov
sti
movb
mov
in
dec
aad
cld
in
push
add
nop
add
inc
xchg
lret
jb
aam
add
mov
iret
addb
addb
add
lret
add
add
push
lock
nop
add
cmpsb
add
outsl
pop
mov
add
add
sti
out
inc
add
jnp
rdtsc
and
addl
add
repnz
mov
add
push
rolb
pop
outsl
movsb
add
jb
pop
adc
fwait
sub
loop
xchg
gs
insb
jo
xchg
jbe
lcall
add
dec
pusha
add
imul
nop
add
jle
add
inc
and
adc
pop
dec
into
jmp
add
add
add
adc
xorl
stos
popf
or
mov
fdiv
add
cli
pop
xchg
jne
mov
mov
dec
xor
sbb
xor
mov
cs
test
cs
int
add
fdivl
add
sbb
fisttps
add
mov
bound
mov
add
repz
xchg
add
in
rcrl
add
mov
add
push
or
add
dec
lock
add
in
adc
scas
aas
loop
bound
mov
leave
push
add
rolb
cs
sbb
add
add
xchg
mov
sub
jl
xor
ret
cmp
int
add
push
add
push
dec
xchg
add
lds
dec
push
add
add
mov
and
rolb
push
ret
push
add
ds
push
add
lods
aam
mov
dec
stos
scas
pop
pushf
push
fsubrl
mov
insb
insl
cmp
cmpsl
pop
cwtl
xchg
xchg
add
adc
aad
addr16
test
or
pop
push
add
addr16
int3
pop
fcmovnb
add
add
ljmp
mov
imul
sub
or
mov
inc
add
inc
and
cmp
add
aad
mov
pop
loop
movsl
mov
add
mov
ljmp
add
pop
xor
je
add
pop
lahf
rolb
rol
and
add
xchg
push
adc
ret
mov
pusha
add
add
xchg
dec
jl
pop
mov
mov
add
xchg
add
xor
pushf
pop
stos
push
cmpsl
xchg
cmp
mov
adc
imul
js
imul
je
idivl
rolb
inc
shr
inc
cwtl
lcall
add
add
stos
jae
cmp
cltd
mov
mov
adc
xchg
loope
outsb
cld
scas
or
push
addb
rolb
movsl
inc
pusha
add
jmp
and
out
mov
push
add
adc
sahf
insb
mov
add
add
lods
aaa
xchg
add
movsb
add
add
mov
icebp
mov
test
mov
mov
pop
call
test
outsb
mov
add
pop
shrl
add
dec
sub
add
add
mov
movb
add
mov
cmc
cltd
aam
dec
mov
mov
dec
pop
add
ljmp
and
mov
add
add
push
ret
add
add
add
push
add
xchg
out
add
lods
inc
add
jmp
add
imul
xchg
add
jns
sub
fbstp
add
mov
sub
jae
mov
bound
mov
loop
call
and
push
add
add
ffreep
cmp
lahf
and
add
mov
sti
test
jo
jmp
ret
pushf
push
inc
add
imul
jae
add
mov
cmpsl
xor
adc
adc
mov
inc
and
imul
add
roll
test
push
mov
and
add
mov
sahf
jne
es
add
add
in
mov
test
test
jno
add
adc
push
sbb
call
or
lahf
imul
cmp
mov
pushf
sbb
sbb
stc
sbb
add
or
sub
mov
add
loop
pop
aas
sbb
test
add
out
xlat
dec
cmp
jle
cmpsb
add
lret
xlat
hlt
add
sarl
xlat
enter
jb
cli
jns
mov
sahf
outsb
arpl
sbb
add
add
les
xor
fadds
mov
sbb
push
add
dec
std
sub
adc
add
add
test
fiadds
cld
imul
sbb
leave
testb
add
add
mov
push
cmp
cmp
lahf
mov
test
push
add
mov
add
and
data16
adc
cmp
mov
outsl
push
sti
push
lahf
addb
jbe
and
xchg
xlat
test
add
sub
pop
mov
inc
add
cli
inc
add
cmp
loopne
inc
int
push
or
add
add
jae
push
add
add
add
add
out
mov
add
fmull
fsubr
mov
nop
add
scas
out
test
add
cmp
sub
add
add
data16
add
mov
fbstp
test
movsb
add
shll
lcall
outsb
js
add
add
xor
inc
repnz
xor
inc
mov
jbe
and
data16
sub
add
mov
push
add
add
cmpsb
add
add
les
dec
pop
or
loope
cmpsb
add
pop
lock
aas
jge
and
mov
add
mov
add
jp
add
jno
pop
les
insb
andl
add
pop
add
std
mov
mov
push
add
add
lret
andnps
add
dec
lods
movsl
aad
mov
mov
pop
and
lcall
pop
cmc
jg
add
bsf
fsub
outsb
or
and
call
xchg
add
jnp
jp
xchg
add
rolb
loop
test
sbb
rolb
xor
sbb
xchg
cmp
mov
out
repz
add
daa
mov
sub
pop
in
add
add
out
xor
add
add
shll
sub
xchg
add
xor
mov
clc
ficomps
add
sbb
or
jmp
cmp
lods
jne
jl
or
push
lods
mov
dec
data16
add
add
add
mov
stc
cltd
mov
jne
jns
cmpsb
add
lret
add
inc
add
mov
pop
xchg
dec
pushf
xor
daa
jge
out
add
ret
sbb
movb
in
mov
add
mov
adc
xchg
div
dec
ret
icebp
jmp
movsl
mov
cmp
pop
xor
mov
add
push
add
add
mov
add
and
sub
cmc
cmp
add
dec
pop
pop
lods
or
std
std
or
rcrl
add
pop
jb
xor
mov
jns
lret
or
sbb
adc
add
xchg
add
and
mov
add
outsl
pop
mov
ljmp
add
lcall
outsb
jbe
adc
mov
add
add
adc
loop
stos
or
dec
dec
fimuls
sub
popf
dec
cmp
js
add
mov
inc
xchg
adc
mov
sbb
inc
add
repnz
cld
mov
xchg
andl
add
push
das
add
mov
mov
dec
push
stc
pushf
xor
pop
or
mov
mov
pop
push
loop
inc
add
loope
add
add
lahf
aas
jo
sti
pop
jmp
sahf
cmp
add
add
pusha
add
mov
add
cmpsb
add
add
movsl
test
mov
enter
les
or
pop
jae
add
add
out
or
add
add
add
in
mov
shll
xchg
push
add
mov
fstpl
add
add
out
lret
mov
push
push
iret
enter
fsubrs
add
add
test
push
xchg
xor
ljmp
xchg
add
add
jge
add
push
add
add
ret
jge
inc
flds
mov
xchg
int
mov
push
movsl
inc
add
add
xchg
add
add
or
add
inc
jl
les
jl
mov
and
mov
ja
add
add
fistl
add
mov
jne
sbb
push
cwtl
les
cli
cmc
in
or
add
add
test
xchg
add
add
nop
add
sbb
mov
add
xor
insl
or
push
add
jle
or
test
es
fistpll
loopne
inc
add
and
mov
dec
dec
ret
in
add
pop
mov
sub
adc
lock
sub
pop
repz
aad
inc
cmp
xor
jmp
fdivrs
test
xchg
inc
mov
add
add
mov
lea
add
lds
push
add
lods
xchg
inc
jge
mov
add
add
add
add
addb
cwtl
inc
add
jecxz
add
cs
mov
jnp
add
xor
repnz
fidivl
add
das
add
and
add
add
add
push
add
add
xchg
mov
add
mov
rolb
adc
mov
lods
sub
add
lock
add
incl
xchg
add
add
mov
add
insb
hlt
add
add
push
ljmp
outsb
lret
cltd
pop
lret
addb
sbb
add
dec
mov
add
add
add
aaa
cmp
add
pop
sbb
jge
adc
mov
xlat
test
fcompl
fwait
adc
lahf
and
mov
sti
mov
add
pushf
cmp
pop
hlt
add
add
addb
test
xchg
add
nop
add
dec
add
add
add
outsb
adc
data16
sub
add
lods
adc
inc
rolb
in
add
outsl
mov
push
add
xor
or
add
add
push
sub
add
add
add
mov
imul
add
shll
add
add
push
add
int3
cmpsb
add
sti
fdivs
add
add
jge
add
add
or
mov
or
hlt
add
add
jecxz
add
dec
jb
pop
lods
or
add
pop
jmp
add
ss
push
ja
xchg
sbb
add
and
add
dec
popf
ljmp
mov
add
movb
add
adc
push
add
mov
cmp
inc
mov
adc
push
pop
cmp
add
lods
cmp
adc
test
add
add
repnz
adc
xchg
popa
mov
and
mov
dec
xorl
jmp
and
push
add
add
int3
jae
push
xchg
add
add
jb
push
push
or
lods
movb
add
aad
jge
add
addb
mov
xchg
jmp
in
xor
inc
add
add
sbb
fdivrl
arpl
add
jno
add
adc
test
push
add
cmp
xchg
xchg
add
jno
mov
xchg
cmpsl
rol
outsl
and
mov
aaa
cmpsb
add
insb
test
add
mov
adc
fbld
aaa
mov
dec
xchg
sahf
cs
iret
add
mov
mov
mov
popl
mov
je
dec
lret
add
jb
popa
sbb
ret
int
insl
add
dec
sbb
ss
xor
mov
mov
add
pop
pop
mov
cmc
pop
enter
fbld
add
scas
in
or
out
xchg
push
dec
adc
out
fsts
add
mov
add
leave
jno
jae
add
pop
movsl
push
xchg
add
sbb
add
dec
inc
sbb
aas
mov
sub
jne
inc
jg
mov
rolb
add
ret
add
scas
call
adc
push
rolb
inc
add
add
mov
add
insb
dec
cld
ds
pop
pop
ja
insl
dec
movsl
rolb
and
scas
or
mov
push
stos
add
mov
xchg
add
pop
dec
mov
dec
xor
aaa
push
mov
mov
push
mov
dec
jb
push
add
aam
mov
idivl
add
loopne
jbe
les
mov
mov
push
mov
sbb
or
inc
cli
push
add
add
add
jae
add
inc
and
mov
add
add
push
addl
or
sti
fcmovne
in
int
add
rolb
test
xchg
add
lcall
add
add
push
mov
jns
int3
and
xor
add
sbb
xor
pop
repnz
add
add
lcall
sub
add
in
xor
add
jbe
cmp
clc
or
leave
xchg
add
cld
lahf
pop
loop
jae
mov
jae
gs
add
lods
js
les
sub
adc
fs
add
insl
mov
mov
mov
push
add
sbb
scas
rolb
sbb
int
add
add
push
add
add
add
jecxz
add
loopne
arpl
mov
cmpsl
or
or
add
dec
mov
inc
fidivs
lret
inc
sti
mov
jns
dec
test
push
push
mov
jmp
inc
bound
mov
hlt
add
xchg
and
loop
adc
insb
repnz
add
add
jnp
mov
add
add
inc
add
pop
arpl
mov
mov
leave
outsl
cs
add
add
mov
add
or
lds
and
sub
add
jge
add
sbb
xchg
cwtl
mov
add
rolb
bound
mov
add
inc
loopne
adc
inc
sbb
add
sti
arpl
add
cmp
pop
andl
push
jle
add
outsl
pop
sub
add
divl
mov
outsb
lods
jbe
and
mov
in
icebp
add
add
out
adc
mov
in
mov
lods
mov
xchg
add
dec
les
xchg
das
addb
imul
mov
adc
dec
cmpsl
and
mov
cwtl
push
imul
cmp
jbe
negl
mov
sbb
lret
add
add
clc
sbb
add
mov
mov
pop
pop
mov
add
add
add
add
mov
jb
int3
mov
mov
and
or
push
jb
pushf
leave
das
insl
test
mov
add
add
or
push
push
sahf
dec
loopne
fmul
and
mov
add
addr16
push
test
cld
cld
adc
adc
nop
add
ds
add
add
push
stc
aaa
adc
outsb
add
aas
sub
js
sahf
mov
add
mov
mov
pop
push
enter
add
popl
mov
icebp
mov
add
mov
sahf
call
aaa
pop
push
icebp
fwait
testb
add
mov
inc
add
imul
arpl
shrl
mov
jnp
pop
fsincos
fwait
test
ficoms
mov
bound
mov
adc
cmp
mov
add
pop
cmpl
scas
fisttpl
mov
popf
call
sbb
push
add
add
mov
dec
xor
int3
cwtl
fstps
mov
add
add
add
inc
add
std
sub
int3
mov
add
test
push
mov
add
adc
in
icebp
sbb
bound
mov
add
inc
push
adc
cmp
xor
jg
add
add
mov
jge
jbe
test
jl
sub
out
mov
jle
aas
cltd
add
add
repnz
cmpsb
add
ja
mov
add
mov
nop
add
push
add
push
push
add
push
add
push
mov
push
shll
add
add
xchg
add
sahf
lcall
mov
add
add
add
cld
jecxz
lret
mov
add
arpl
icebp
pop
int
imul
add
mov
push
add
loopew
add
fmulp
add
add
add
gs
pop
mov
popf
mov
add
mov
add
popa
mov
cwtl
fidivrl
mov
mov
out
sub
push
add
nop
add
jnp
movsb
add
sbb
add
add
cmp
and
mov
add
aaa
shll
xchg
add
jmp
jmp
xchg
push
sbb
add
add
dec
testb
add
add
add
sbb
pushf
inc
movsl
xor
sub
cvtpi2ps
ds
pop
mov
mov
out
inc
mov
xchg
add
add
mov
fwait
xchg
add
repz
add
add
mov
sub
mov
outsl
sbb
sbb
add
mov
scas
jg
sti
push
mov
or
xor
jge
add
add
mov
inc
add
pop
loopne
int
pop
call
lret
repz
or
lock
and
add
add
movsb
add
cmp
jno
jl
jnp
add
push
add
pop
inc
outsb
cmp
add
add
mov
push
xor
pop
inc
add
sub
push
mov
add
add
jle
xor
aaa
inc
jmp
adc
mov
cmpsl
pop
mov
dec
push
add
data16
add
fwait
dec
orl
add
pop
jb
add
add
ljmp
inc
add
pop
out
or
imul
data16
inc
add
xor
add
add
xor
add
mov
dec
adc
cmp
dec
mov
sbb
addb
sbb
add
mov
and
mov
jns
fwait
push
add
hlt
add
add
enter
push
jle
ljmp
add
sbb
stc
sub
jecxz
daa
nop
add
add
mov
add
les
cmc
sbb
sub
sub
sbb
push
add
mov
repnz
fistpl
inc
add
xchg
add
add
mov
fwait
repnz
add
mov
in
cli
adc
add
fwait
dec
pop
ret
add
cmp
add
outsb
mov
add
mov
mov
xchg
psraw
repnz
mov
popa
push
push
add
mov
add
jmp
lods
jp
add
cli
xchg
dec
inc
mov
add
jb
pop
add
addb
pushf
push
or
lahf
out
popa
push
inc
push
out
pop
js
nop
add
ret
push
cld
in
inc
add
add
add
jb
add
data16
in
stc
pop
std
fistps
add
add
mov
test
sahf
mov
mov
mov
popf
sbb
add
mov
pop
push
add
call
out
hlt
add
add
movb
add
loope
jne
adc
jb
pop
and
mov
mov
pop
pushf
std
mov
mov
idiv
push
and
leave
lret
and
mov
dec
push
je
sbb
icebp
cmpsb
add
add
xor
add
mov
add
jae
add
fidivrl
fimuls
scas
ret
pushl
add
movl
shll
mov
sbb
add
add
sbb
add
mov
add
add
addb
add
add
sub
or
and
xor
cmp
jp
dec
cld
loopne
cmp
jbe
push
in
pop
addb
pop
pusha
add
add
add
popl
dec
into
dec
sbb
add
data16
or
or
jge
insl
jle
add
mov
add
inc
add
out
movsl
ljmp
rolb
add
inc
xchg
repz
mov
das
out
js
aad
jmp
mov
stos
and
lock
iret
mov
add
add
add
insb
repnz
les
xchg
add
je
xchg
add
push
add
add
xor
add
xorl
mov
push
add
adc
loopne
sbb
jecxz
pop
outsb
test
mov
movsbl
mov
jno
hlt
add
sbb
mov
pop
push
inc
push
enter
in
inc
add
std
cmpsl
into
stc
pushf
add
repz
cli
mov
cmp
sub
data16
add
inc
add
adc
add
pop
push
add
jg
dec
mov
jne
and
mov
mov
push
add
loope
pop
mov
add
adc
daa
fdiv
add
jae
mov
sti
mov
push
add
push
add
add
sti
mov
fistps
add
add
inc
sub
mov
adc
cltd
not
jne
scas
repz
xor
add
add
dec
inc
add
jno
cmp
add
addr16
mov
daa
ret
add
daa
mov
ret
out
mov
sbb
inc
add
icebp
inc
or
dec
sbb
add
loopnew
mov
cld
movb
push
je
les
cli
and
jo
cld
push
xchg
push
lret
and
add
adc
lea
addr16
add
dec
lcall
mov
sti
or
or
repnz
test
addb
cs
add
jno
add
cmp
add
cld
jl
test
add
mov
mov
sub
or
add
pop
ficoml
mov
je
sbb
add
sbb
add
mov
pop
xchg
movsl
adc
and
xor
xor
add
fs
aad
add
jae
add
clc
xor
push
out
xchg
add
adc
and
sbb
and
add
test
cwtl
adc
add
cwtl
xchg
cli
push
add
add
mov
xor
outsb
xchg
add
add
add
loopne
sbb
sti
popa
imul
add
dec
hlt
add
and
mov
mov
ret
cmp
xor
push
fld
add
std
xchg
aam
mov
and
movsl
popf
jo
cli
dec
sbb
jae
cmp
pop
testb
inc
dec
mov
je
push
dec
mov
ss
movb
xlat
lock
movsb
add
sub
loopne
add
add
popa
das
mov
inc
add
lock
mov
mul
sub
push
add
add
mov
adc
pop
repnz
add
mov
cmc
in
shrl
pop
lcall
add
mov
popf
testb
or
xor
test
fwait
push
jnp
add
add
dec
stos
mov
clc
rolb
dec
mov
outsl
pushf
enter
push
add
movsb
add
push
add
add
jl
add
pop
push
sbb
mov
mov
pop
and
rcll
sub
add
sbb
ljmp
add
pop
lea
rolb
aas
cli
fistps
dec
add
add
jmp
add
int3
outsb
arpl
add
mov
add
sahf
cmp
add
es
cltd
pushf
xchg
sti
xchg
add
jle
add
cmpsl
mov
push
add
insb
or
cmpsb
add
add
loope
mov
adc
loope
add
incl
add
mov
mov
sahf
pop
inc
add
adc
std
imul
lret
nop
add
sbb
scas
mov
mov
add
push
rolb
mov
add
pop
call
add
add
add
aam
aam
ret
sahf
shll
shll
outsl
xor
add
out
and
and
pop
jno
dec
inc
dec
jecxz
sub
add
jl
add
add
dec
pop
dec
push
add
enter
into
lods
push
add
fsub
add
add
mov
mov
jns
mov
add
and
mov
sub
mov
or
daa
ldmxcsr
add
testb
test
add
add
add
add
cltd
cmp
imul
pop
mov
rolb
rolb
push
add
add
add
add
pop
jecxz
add
mov
scas
into
pop
outsb
add
in
xor
mov
mov
insb
ret
xlat
cmp
and
push
add
pop
sub
arpl
pop
int3
nop
add
and
loope
add
push
add
bound
mov
push
add
enter
xor
addb
add
xor
sbb
add
sbb
inc
add
add
dec
bound
mov
add
add
dec
insb
adc
lahf
out
cli
ja
dec
test
fiadds
push
jbe
sub
mov
jnp
xor
mov
sub
loopne
clc
filds
jne
add
jl
add
inc
add
sti
jne
add
mov
lods
test
ret
add
les
movsl
mov
aaa
outsb
jl
es
dec
sbb
mov
jg
adc
push
addb
test
mov
mov
cmp
out
pop
jb
xor
dec
lods
adc
mov
cmp
add
lods
stc
addr16
in
xchg
dec
pop
adc
mov
cs
add
add
movsl
cmp
push
adc
sbb
lds
fimull
or
add
push
jnp
movsb
add
add
add
add
jle
mov
add
and
imul
fistl
cmp
inc
xor
adc
fldcw
cmpsb
add
add
fwait
mov
push
out
pop
cli
lret
or
add
popa
lea
add
mov
test
in
fldl
add
outsl
sti
fs
insl
jecxz
leave
out
leave
xor
mov
rolb
faddl
cmp
xchg
rolb
jmp
das
jle
add
add
es
xchg
add
add
adc
sub
jns
add
outsb
adc
mov
jge
rolb
jp
add
xchg
shrl
xchg
mov
mov
add
xor
sub
fisubrl
iret
data16
dec
inc
add
and
mov
jae
add
iret
out
jbe
lret
popa
dec
insb
iret
mov
and
xchg
add
add
mov
add
ret
test
xchg
aam
or
add
xor
xor
movsl
in
xchg
arpl
add
and
movsb
add
rolb
inc
add
mov
popf
test
xchg
add
mov
xchg
repnz
cmpsb
add
jl
aam
je
pop
xor
jns
or
hlt
add
clc
lods
mov
arpl
add
jbe
sbb
mov
inc
add
add
cli
xchg
add
add
lds
jns
mov
inc
clc
push
add
add
mov
gs
sahf
jge
and
repz
inc
add
mov
mov
add
add
stos
add
sbb
enter
lods
into
adc
ja
and
out
add
or
xor
and
mov
xor
add
fcmove
mov
cmp
into
add
lods
mov
adc
inc
subl
cmp
mov
add
add
mov
add
xchg
push
aas
stos
dec
pop
les
inc
add
ljmp
iret
sahf
fistps
int3
push
add
inc
jns
rolb
and
sbb
enter
add
or
adc
dec
pop
movl
push
add
add
add
jb
push
iret
fisubl
fstpt
add
rolb
jnp
push
add
sub
mov
in
push
and
add
pushf
scas
xor
mov
lret
aam
add
mov
pop
lods
lcall
lods
fmulp
xor
int3
sbb
add
pop
adc
pop
mov
mov
jo
pop
fisttpl
inc
add
mov
pop
sbb
test
push
add
inc
mov
ja
stos
mov
mov
mov
dec
xor
inc
add
or
add
jle
daa
xor
cmc
sbb
ljmp
leave
inc
adc
test
jl
outsb
add
outsl
sub
add
fldenv
add
xchg
fisubs
in
and
add
add
movsb
add
and
xchg
inc
add
cs
int3
in
int3
fbstp
add
into
stos
xchg
jmp
mov
shl
pop
test
dec
fdivl
xor
jne
loope
bound
mov
adc
jbe
das
mov
fdivl
addb
std
mov
rolb
push
mov
pop
sbb
mov
add
add
pop
lea
and
mov
add
cs
mov
push
lret
add
mov
iret
dec
mov
mov
adc
scas
mov
mov
imul
add
pop
addb
add
jle
test
cld
stos
jge
add
sti
pop
dec
pop
and
mov
hlt
add
add
mov
jnp
or
clc
sbb
movb
stc
mov
testb
test
add
rolb
rcrl
popf
jne
cli
or
add
add
add
enter
xchg
add
xor
rcr
stos
dec
mov
mov
mov
dec
xlat
fisttpll
stc
and
cmp
cmp
push
add
add
add
jmp
hlt
add
cmp
adc
out
add
fwait
lret
add
rolb
and
mov
dec
jae
into
aad
int3
movsl
add
movb
fsubrl
std
repnz
pop
adc
and
daa
addb
fildl
add
mov
sub
loope
and
cli
mov
jl
out
dec
or
jno
bound
mov
mov
inc
add
insl
testl
sahf
add
add
jnp
cmpsb
add
cmpsb
add
jmp
add
test
adc
mov
lret
add
rolb
jl
jb
nop
add
xchg
add
add
mov
mov
cld
mov
add
or
clc
pop
test
daa
aad
add
add
rolb
out
mov
add
add
mov
add
testb
fsts
pop
push
add
and
mov
out
sbb
add
dec
out
pop
pop
inc
add
adc
push
mov
js
imul
add
add
add
add
les
mov
inc
fadds
mov
cld
outsl
ds
add
add
xchg
add
roll
mov
stc
ds
add
dec
cli
fiadds
fcomip
mov
inc
adc
add
icebp
sbb
cmpsl
pop
sbb
cmp
cmp
das
push
sub
ret
jno
add
push
add
add
bound
mov
icebp
mov
loopne
jmp
out
jae
rolb
xchg
and
mov
nop
add
mov
scas
jnp
in
push
add
xlat
or
sti
xor
sub
mov
add
or
add
aas
mov
add
add
add
add
lods
les
daa
mov
cmp
xorl
pop
dec
push
inc
mov
fdivl
scas
test
out
pop
inc
add
mov
add
jecxz
pop
imul
add
loopne
or
mov
ret
lret
hlt
add
fmul
add
lds
fbstp
psubb
lds
push
add
pop
sti
xchg
pop
imul
push
add
add
in
data16
push
add
mov
mov
add
bound
mov
sbb
mov
adc
aam
xor
roll
mov
xor
rolb
add
fiaddl
mov
xchg
adc
mov
stc
jbe
cmp
add
pop
test
sbb
es
mov
lret
cmpsl
mov
mov
add
mov
jecxz
aas
imul
add
add
add
add
pop
jg
add
jmp
add
mov
pop
dec
popf
addb
add
add
jo
fisttps
rcrl
movsb
add
sub
cmp
fsubr
cmp
add
jb
add
add
push
pop
rolb
divl
add
push
inc
add
mov
mov
stos
or
fucomip
mov
mov
mov
xorl
sbb
add
imul
repz
mov
add
fstps
mov
cli
loop
adcl
add
add
addr16
insb
sub
xlat
sub
lcall
bound
mov
push
rolb
aad
or
xlat
enter
mov
jbe
and
mov
pop
push
add
sbb
push
aas
shll
add
addb
xchg
xchg
add
add
mov
push
add
mov
mov
add
xor
fst
add
loopne
jp
add
add
or
popa
movb
dec
js
leave
lock
xchg
fidivrl
jecxz
add
and
out
jne
fnstenv
add
sub
xor
out
dec
mov
and
xchg
add
int
xor
pop
push
add
aad
cmpsl
dec
mov
adc
out
dec
mov
cmp
jmp
testb
mov
movsb
add
add
ja
aad
add
dec
icebp
shrl
lret
pop
mov
scas
sub
sub
sbb
test
add
xchg
dec
into
jnp
aam
into
add
mov
and
or
add
dec
jecxz
mov
add
or
add
push
add
imul
lcall
add
xlat
push
add
xor
xchg
mov
mov
add
lds
aas
or
add
pop
inc
dec
data16
loopne
adc
push
add
add
incb
inc
add
add
out
ja
add
mov
add
hlt
add
add
and
stos
mov
pop
movb
sub
test
loope
dec
pop
outsl
sbb
add
imul
addb
into
aad
add
daa
add
mov
inc
add
adc
inc
outsb
or
xor
repz
sub
add
add
xchg
jns
add
cmp
add
pop
push
mov
out
icebp
or
xchg
add
dec
jg
add
add
loope
mov
push
add
add
push
popa
addr16
nopl
hlt
add
stos
stos
clc
sti
cltd
into
sub
add
enter
inc
add
and
call
mov
dec
inc
int
test
notl
call
mov
mov
add
jae
xchg
add
add
add
dec
dec
sub
add
push
add
jle
ret
fistps
add
jg
xchg
mov
add
les
push
mov
lods
jp
or
in
in
add
dec
lret
mov
movntq
add
add
jecxz
add
into
adc
mov
jnp
nop
add
cwtl
adc
xchg
inc
mov
adc
add
cmp
mov
jl
add
add
push
jp
and
in
jnp
push
add
lea
mov
push
fisttps
adc
enter
testb
add
add
cmp
add
add
lds
add
and
mov
add
test
popa
aaa
jmp
inc
add
pop
out
mov
cmp
jns
add
and
movb
sbb
fisubs
add
add
push
add
add
bound
mov
add
xchg
add
add
mov
mov
mov
jnp
ret
pop
call
add
xchg
add
jne
pop
in
jo
sub
lret
dec
out
pop
xchg
sub
aam
sbb
mov
enter
add
jecxz
add
add
cmp
add
add
add
div
add
mov
addr16
mov
and
inc
arpl
wrmsr
add
push
les
out
pop
aaa
pop
jns
or
and
dec
arpl
adc
xchg
add
lock
add
push
divl
add
xchg
add
or
out
fidivs
xchg
add
jb
xchg
add
push
cmc
shll
data16
xchg
add
mov
loop
shrl
pop
js
ficomps
lahf
stc
push
add
add
sub
mov
add
movl
add
push
jl
add
outsl
xchg
pop
cmc
ret
dec
jmp
sbb
mov
add
inc
add
add
ss
dec
mov
rorl
mov
add
das
mov
sub
add
iret
cmc
rolb
repz
gs
enter
sbbl
je
and
cltd
inc
adc
dec
jns
outsb
std
mov
in
xor
pop
dec
test
xchg
daa
addb
add
mov
add
dec
nop
add
lods
pop
test
push
add
mov
add
imul
mov
mov
cmp
or
icebp
call
rcll
jl
add
add
dec
pop
mov
cltd
add
add
jp
add
mov
add
popf
fnstsw
add
jo
test
pop
idivl
mov
loope
xor
pop
jb
daa
in
pop
inc
push
add
je
rolb
add
nop
add
add
dec
ljmp
sbb
loopne
push
mov
cmp
mov
push
push
add
add
daa
cmp
cmp
pushf
popf
loop
lods
fneni(8087
add
movb
add
rolb
push
add
push
add
das
jp
pop
xchg
jmp
inc
add
sbb
pop
mov
add
outsb
jl
add
hlt
add
sbb
testl
xchg
add
add
stos
test
xchg
pop
or
mov
add
outsl
dec
stos
icebp
sub
adc
loope
scas
add
sbb
add
dec
pop
xchg
jne
add
imul
mov
add
ret
cmp
repnz
mov
add
jbe
add
pop
lcall
pop
adc
loope
add
push
add
mov
and
dec
push
add
pop
fwait
inc
xor
pop
and
add
enter
add
rolb
dec
xchg
and
mov
sub
je
mov
add
cmp
push
add
addb
out
rolb
jg
imul
adc
xchg
mov
jl
add
push
add
cmp
xor
inc
add
add
stc
imul
scas
movsl
and
mov
and
add
stos
jbe
mov
sub
push
add
push
test
loopne
js
inc
add
add
cs
aam
cltd
inc
add
add
rolb
add
add
lret
fwait
lea
add
cli
enter
ja
add
pop
pop
push
add
lcall
mov
jb
or
add
ljmp
dec
mov
dec
icebp
pop
rolb
pushf
inc
and
mov
add
call
or
in
sub
add
mov
add
jge
jl
xchg
add
icebp
fmuls
add
mov
add
bound
mov
clc
xor
fdivr
xor
aas
js
test
add
xchg
mov
jns
sbb
add
sub
add
and
add
loope
add
cwtl
fbstp
add
fbld
add
xchg
daa
addb
add
lahf
test
jecxz
hlt
add
add
jno
add
or
mov
lock
add
aaa
sub
add
iret
xchg
ret
dec
jns
push
cli
jl
add
movsl
or
add
int3
pop
pop
jb
add
pop
mov
add
add
mov
add
mov
lea
inc
add
add
sti
in
out
adc
xor
xor
pop
push
loopne
mov
dec
pusha
add
leave
or
jge
dec
mov
add
adc
mov
repz
adc
mov
push
add
fists
xor
xchg
xchg
add
add
outsb
sub
add
pop
adc
inc
add
jns
xor
inc
dec
ja
fists
add
int
aam
or
int
mov
mov
mov
addb
add
movsl
pop
mov
add
add
movsl
add
pop
int
arpl
pop
sub
ja
mov
add
push
in
scas
cltd
and
add
cmp
add
mov
mov
add
pop
inc
icebp
aad
data16
add
add
clc
jmp
add
movb
out
cli
out
add
dec
repnz
xor
add
add
dec
ret
lds
mov
out
aaa
adc
in
les
xor
mov
test
add
mov
mov
add
add
xor
add
mov
add
jne
mov
test
adc
repz
gs
xlat
pushf
fisubl
mov
movsb
add
jge
jno
xchg
lods
rcrl
inc
add
push
add
clc
inc
add
test
add
add
add
clc
int3
cmp
insb
incl
mov
sub
sbb
aam
and
mov
push
lret
loopne
add
mov
add
lcall
pusha
add
xor
cmp
add
xor
mov
xchg
jb
adcl
movsl
leave
out
and
stos
push
add
fildl
add
int3
repz
mov
jg
xchg
in
gs
add
mov
or
fsubr
sbb
mov
shrl
xor
adc
fildll
or
add
xlat
xrelease
xor
negl
cmp
add
ss
scas
xchg
out
sub
add
ja
add
push
add
sub
test
mov
out
add
aam
cmp
add
add
mov
ja
pop
cs
push
decb
mov
add
cwtl
push
add
jae
add
push
pop
dec
or
mov
sub
mov
add
mov
add
add
out
pop
jnp
add
addb
daa
leave
push
add
stos
lds
xlat
outsl
mov
jbe
imul
inc
add
scas
xchg
add
bound
mov
adc
lods
fistps
mov
lcall
dec
xlat
mov
or
mov
add
in
pushf
fucomp
jmp
dec
loopne
dec
in
xchg
pusha
add
add
mov
mov
xchg
movsl
sub
fcomp
jle
movsl
xchg
jp
in
ljmp
add
xlat
iret
cs
add
ds
lahf
dec
rolb
cs
add
loop
aas
or
or
add
fstps
adc
mov
add
add
pop
push
add
mov
add
xchg
add
incb
pushf
push
add
rcrl
add
cwtl
cmc
out
jns
aaa
cmp
pop
dec
cmp
imul
inc
add
sub
xor
add
add
mov
pop
wrmsr
add
fistpll
cwtl
adc
mov
add
add
add
add
add
sahf
sub
push
push
add
jp
out
jae
arpl
mov
push
add
push
aas
aaa
lret
cmp
add
sbb
add
call
lcall
add
push
xchg
add
push
add
leave
lcall
xor
xchg
add
add
add
in
call
ss
xor
int
in
outsb
bound
mov
add
inc
add
mov
mov
cmp
add
mov
js
add
es
push
jb
arpl
lret
mov
add
add
add
in
out
testb
add
test
push
add
add
add
cwtl
rcll
aam
sahf
mov
sbb
add
push
aam
mov
jl
jb
xchg
dec
js
ffree
add
add
jge
sahf
rolb
push
add
add
stc
cmp
mov
push
add
movsb
add
mov
add
adc
or
jle
xchg
add
xchg
add
bound
mov
jbe
out
in
loopne
aaa
les
sbb
add
jl
std
jmp
inc
add
jae
sub
cmp
add
add
xchg
add
ret
scas
lods
cmpl
mov
fwait
xlat
xlat
jne
xlat
xor
leave
xlat
mov
lahf
lock
add
sbb
add
testb
outsb
add
add
in
subl
jcxz
lahf
cmpsb
add
mov
add
lret
pop
lods
inc
add
pop
jle
add
sub
xchg
mov
mov
test
add
jmp
test
add
enter
mov
add
mov
je
stos
sbb
xlat
add
loope
cmpsb
add
in
andl
sbb
sbb
add
inc
add
add
rcrl
push
jg
add
clc
inc
mov
js
fwait
dec
dec
sub
fisubl
sarl
add
or
jb
mov
sub
pop
jae
fisubrs
inc
int
xchg
and
mov
xor
gs
addb
add
xchg
add
mov
add
leave
mov
and
mov
xor
stos
fs
add
aas
inc
add
daa
inc
add
inc
add
add
add
cs
mov
rolb
push
add
xchg
add
add
add
add
mov
add
mov
jp
add
pop
imul
mov
add
add
pop
adc
adc
add
push
int
lret
sarl
xchg
jbe
in
lahf
mov
movb
add
pop
incb
test
loopne
cmp
pop
jns
mov
mov
add
add
or
dec
sti
in
cltd
dec
ret
sub
add
mov
jle
bound
mov
add
popa
jge
out
outsl
jle
cmp
push
add
add
mov
mov
movntq
add
push
add
ljmp
add
pushf
jae
mov
addb
mov
mov
imul
jno
sub
add
mov
add
xor
cmc
or
add
mov
inc
add
push
in
mov
fcmovnbe
xor
or
imul
add
add
add
mov
push
add
pop
push
and
mov
out
cwtl
out
adc
fisttpl
shrl
push
or
push
mov
addr16
loope
add
out
pop
test
push
add
add
fsubrs
dec
shrl
add
jns
test
test
outsb
jb
adc
clc
pushf
stc
loop
popf
pop
sub
add
mov
lods
jbe
inc
xor
xchg
add
ja
add
mov
adc
mov
jmp
test
adc
movsb
add
icebp
je
cs
add
rolb
loopne
lods
pusha
add
fcomps
add
repnz
ljmp
mov
mov
add
add
neg
in
insb
mov
loopne
push
pop
jmp
add
sbb
arpl
mov
fcomps
add
lea
movb
mov
add
cs
test
xchg
push
add
enter
dec
out
pop
nop
add
add
mov
movsb
add
call
add
or
and
pop
sbb
in
imul
mov
insb
pop
mov
and
movsb
add
sub
add
pop
xchg
jmp
add
add
shll
or
sarl
mov
pop
ja
adc
push
add
adc
xchg
data16
add
mov
loop
adc
add
jne
data16
mov
lcall
add
xchg
add
sub
add
add
jb
xor
and
add
mov
ljmp
add
mov
mov
jecxz
int
add
add
hlt
add
sbb
lods
rolb
popa
push
mov
mov
fisubrs
push
add
insb
inc
fsub
daa
movsl
adc
outsl
addb
add
add
add
pushf
mov
outsb
scas
sbb
bound
mov
add
add
and
pushf
sahf
dec
fdivrs
test
push
add
xlat
lea
lahf
adc
jns
add
xchg
add
repnz
or
pop
out
gs
in
movsl
sub
add
pop
add
sbb
das
push
add
and
mov
add
cmp
inc
add
mov
or
push
pop
outsl
jp
sahf
call
add
mov
add
fistps
or
dec
rcl
stos
rcl
sbb
out
outsl
mov
add
add
add
ja
add
jae
add
add
xor
mov
jg
and
add
scas
out
push
out
fbld
xor
mov
xchg
add
mov
add
and
movsl
call
cmp
add
lret
push
add
mov
add
add
mov
jge
push
add
cld
add
aad
dec
jne
add
add
out
test
cmp
mov
add
add
jmp
aaa
jge
outsl
inc
add
jp
add
xor
add
pusha
add
jp
mov
inc
add
add
jmp
sbb
fnstenv
insb
bound
mov
add
daa
sti
std
sbbl
add
add
std
dec
cmp
mov
mov
stos
xor
add
mov
add
out
add
add
add
xchg
jo
bound
mov
add
and
mov
add
add
sbb
sub
add
mov
add
call
ret
lcall
xor
xchg
add
xchg
loop
xchg
xchg
mull
fdivrl
in
cwtl
pushf
lret
mov
movsb
add
jno
jnp
add
mov
gs
cmp
xor
add
mov
add
dec
js
leave
stos
sbb
jo
push
or
sbb
imul
add
addr16
or
add
loopne
push
xchg
adc
rcr
add
pushf
push
or
femms
mov
in
sti
bound
mov
add
mov
add
out
cmp
mov
test
gs
ja
shr
repz
sbb
add
rolb
add
push
adc
outsl
dec
in
es
repz
pusha
add
add
and
mov
addb
rcr
fstps
sbb
imul
outsl
sbb
adc
std
xchg
movsl
mov
in
jbe
mov
cmp
js
cmp
dec
add
add
mov
mov
add
add
sahf
rolb
roll
mov
lods
hlt
add
add
and
jl
add
adc
std
push
add
faddl
add
mov
add
pop
into
sbb
mov
add
and
mov
add
adc
mov
mov
push
xchg
je
push
add
add
testl
add
ficomps
fidivl
shll
add
dec
jb
jp
add
out
jno
fldt
ljmp
imul
push
add
add
scas
addr16
inc
aas
fimull
add
mov
aas
and
mov
pop
pop
repnz
rolb
sarl
add
int3
cmp
outsb
xchg
add
mov
sub
sbb
movsl
jl
cmp
aam
xchg
inc
inc
inc
add
add
push
mov
movsl
mov
aaa
or
mov
push
add
inc
in
stos
hlt
add
mov
pusha
add
xchg
addr16
xor
in
xor
fsubr
push
add
js
add
test
aam
add
mov
rolb
jg
pop
add
mov
jmp
mov
outsb
clc
xchg
add
add
in
int3
sub
rolb
add
dec
cmp
jmp
orl
scas
mov
or
cmpsl
nopl
add
add
xor
addr16
xchg
add
testl
mov
pop
cmp
add
sub
push
add
rcrl
dec
mov
mov
xor
test
adc
shrl
ljmp
push
add
add
pop
mov
nop
add
sub
outsl
hlt
add
movsb
add
and
pop
stc
xchg
add
jne
inc
les
inc
dec
data16
lds
movsb
add
add
in
mov
push
add
cli
or
add
insl
outsb
sbb
scas
imul
add
dec
xchg
add
jecxz
xor
xchg
add
cmp
adc
xchg
add
mov
add
movb
mov
imul
loop
push
movsb
add
cwtl
xchg
add
inc
add
mov
mov
int
gs
pop
mov
add
mov
add
loop
push
add
inc
add
cwtl
and
mov
cmp
orl
add
add
or
add
add
add
push
add
add
pop
fcompl
xor
xchg
add
mov
mov
sbb
shll
fadds
add
jge
add
or
shll
add
add
push
fldl
mov
data16
in
clc
les
imul
add
jg
pop
ljmp
hlt
add
daa
rcll
cli
push
add
mov
iret
cmp
add
roll
scas
pop
bound
mov
mov
mov
out
dec
push
add
push
jp
add
fisttpl
add
iret
fcomps
repnz
inc
addb
add
test
nop
add
xchg
jmp
mov
arpl
add
add
mov
mov
sbb
mov
mov
mov
add
mov
andl
out
add
mov
enter
repz
add
push
add
cltd
test
push
add
add
je
cli
mov
add
imul
movsl
fistpl
mov
movsl
int
aas
push
add
in
imul
mov
add
add
jge
mov
mov
or
add
pushf
add
mov
clc
popf
push
add
das
push
add
in
dec
xchg
jnp
mov
pop
adc
enter
gs
ficompl
rolb
xchg
push
add
scas
xchg
outsl
arpl
add
inc
ret
lods
dec
lods
mov
add
ret
lods
jbe
and
inc
repnz
xchg
lcall
insl
jge
add
insl
scas
daa
jle
add
stos
mov
pop
mov
xchg
add
add
add
add
mov
mov
xor
add
and
call
fistpll
pop
xor
fisubs
fsubl
pop
inc
stos
mov
dec
pop
bound
mov
jne
jae
pushf
fistpll
stc
les
dec
outsb
ret
add
and
mov
mov
mov
add
pop
popf
jle
dec
jle
int
pop
or
mov
or
mov
scas
testb
add
push
xchg
push
add
add
add
add
lods
fistpll
adc
push
addb
mov
push
add
movl
inc
add
loope
and
mov
xchg
add
dec
in
adc
inc
insl
or
les
mov
scas
mov
or
orl
and
pop
push
mov
sbb
icebp
dec
mov
fimull
push
add
dec
dec
cltd
add
adc
jg
mov
add
gs
inc
add
push
add
ret
div
add
jp
je
lock
sub
jp
out
dec
cmp
into
ret
fldl
test
add
aaa
fstpt
scas
repnz
or
in
ficompl
mov
push
mov
add
add
sub
add
add
add
mov
out
movsl
pushf
push
add
add
ret
call
or
jns
add
ror
add
fildll
sub
movsl
xchg
pop
aam
xchg
add
add
jne
cltd
xor
mov
pop
test
lret
mov
popa
imul
xchg
mov
jno
mov
cld
hlt
add
push
add
xor
push
jno
out
add
jo
fs
add
testb
add
sti
int
and
cld
jnp
add
sbb
enter
jecxz
push
adc
xor
loopne
sahf
mov
data16
in
jp
jb
hlt
add
cmp
test
cmp
add
dec
or
jmp
sub
mov
mov
add
mov
add
adc
sbb
out
adc
mov
add
or
lods
push
add
jmp
leave
or
add
bound
mov
jecxz
dec
imul
pusha
add
add
add
xchg
add
xor
test
data16
pop
xor
movsb
add
mov
adc
add
rolb
js
add
cmpsl
inc
add
loopne
cmc
add
add
inc
add
pop
filds
dec
js
addr16
sub
add
add
fwait
push
jb
fsts
cld
xchg
fdivs
add
add
addb
rolb
mov
and
mov
notl
scas
sbb
inc
add
xchg
add
or
enter
dec
xlat
mov
or
add
dec
push
add
idiv
pushf
add
add
ret
xor
fistpl
das
adc
dec
mov
movsl
lahf
dec
mov
in
lret
add
dec
aaa
fsubl
mov
ljmp
dec
fiadds
add
xlat
in
pop
cmp
add
add
mov
push
les
xchg
add
mov
adcl
insl
mov
call
add
ffree
ficoms
xchg
add
or
add
pop
or
xchg
add
testb
sbb
rolb
cld
cwtl
push
add
add
xchg
xchg
int
jnp
cs
into
addb
inc
adc
adc
out
fstps
add
add
xor
daa
xor
rcll
add
in
popa
rolb
dec
mov
in
xlat
dec
iret
lock
add
add
repz
mov
leave
pop
xchg
les
mov
xor
loopne
fwait
ret
push
add
lcall
push
add
mov
out
mov
push
xchg
negl
fidivrs
les
mov
mov
mov
fildl
ja
bound
mov
add
cld
sbb
aad
add
mov
jo
lods
jp
aas
aam
mov
mov
int
inc
add
mov
fildl
adc
mov
adc
fsubs
lret
dec
test
lods
mov
gs
pop
js
sub
js
and
mov
add
out
mov
add
add
add
mov
push
stos
mov
rolb
add
aas
cs
bound
mov
rolb
lds
icebp
add
sub
fsub
add
loop
imul
mov
dec
xchg
add
add
or
add
mov
jmp
adc
xor
adcl
mov
xor
rcl
add
dec
cmp
aaa
xchg
pop
and
cmpsl
scas
lret
nop
add
arpl
add
mov
dec
pop
movsl
or
movd
aas
movb
test
add
mov
fsubrl
add
aad
mov
add
addr16
addb
add
add
mov
iret
cmp
inc
add
hlt
add
add
or
add
add
add
je
test
ret
test
mov
add
mov
aas
sub
add
pop
push
or
addb
dec
cmp
cmp
andl
mov
mov
add
mov
add
icebp
inc
add
repz
mov
jp
add
mov
dec
add
mov
jb
jb
pop
rolb
sub
add
mov
xchg
add
je
sub
add
les
jb
stc
inc
addr16
or
mov
add
sbb
and
mov
add
fdivl
cmp
stos
jle
out
mov
add
imul
pop
push
mov
dec
sbb
out
add
jp
cwtl
les
mov
imul
mov
mov
pop
ret
lahf
data16
and
mov
add
iret
adc
aad
add
pop
mov
add
rolb
rcll
push
mov
adc
pop
sti
addb
mov
adc
inc
add
cltd
xor
pop
jle
add
push
dec
rolb
pop
mov
add
cwtl
mov
push
add
pusha
add
add
pop
or
add
pop
mov
jecxz
ret
mov
add
mov
pop
out
sub
cmp
addr16
mov
mov
inc
sub
outsl
add
mov
add
add
add
aaa
sub
add
add
mov
pop
addb
inc
popf
xor
addb
out
xlat
mov
and
mov
cs
in
jb
das
dec
add
adc
mov
cs
add
add
mov
xor
cmpsl
pop
mov
sbb
movsl
out
sub
lds
xor
call
mov
mov
nop
add
add
movsl
mov
leave
ffree
inc
inc
int3
int
lods
cwtl
jmp
fwait
lods
je
jl
stos
aad
add
insl
inc
add
fcoml
add
and
imul
jae
add
adc
add
xchg
bound
mov
cmp
nop
add
jmp
mov
add
pop
jecxz
nop
add
add
cmp
ljmp
sub
scas
ljmp
out
mov
dec
data16
inc
add
jecxz
sbbl
add
add
mov
add
aam
mov
mov
mov
movb
jmp
xor
dec
mov
testl
add
in
add
insb
xor
push
add
andl
add
mov
in
insl
scas
pop
loop
mov
mov
rolb
iret
test
sub
dec
cli
pop
rolb
faddl
xor
pop
mov
add
add
call
xor
add
or
cs
push
rcrl
mov
jne
push
add
push
jo
adc
cmp
xchg
and
sbb
fcmovne
loope
sub
mov
rolb
je
pop
stos
rol
cwtl
xchg
and
mov
pop
cmp
cli
mov
popf
or
add
add
mov
cmc
pop
outsl
shll
enter
add
mov
mov
jns
add
xchg
cmp
add
imul
add
and
push
add
addb
add
outsl
sub
aaa
sbb
and
je
sub
cmp
add
cmp
cltd
stos
jne
loope
add
inc
add
addb
add
mov
or
sub
add
push
add
in
in
pop
push
cmpsb
add
pop
mov
cli
inc
add
add
sub
adc
dec
adcl
rolb
decb
lods
cmp
sub
jl
add
mov
data16
aam
or
add
add
add
sti
iret
and
sub
mov
into
xor
addb
lds
aaa
jge
test
fildl
xchg
add
pushf
pop
dec
call
pop
pop
push
inc
add
cmc
fidivrl
pusha
add
mov
adc
add
mov
add
push
add
scas
push
add
add
movsl
xchg
ret
push
outsl
movsb
add
xor
add
sub
xor
inc
add
push
add
movsb
add
data16
mov
das
inc
iret
pusha
add
mov
jnp
mov
jg
mov
cwtl
xchg
add
push
push
ljmp
cli
mov
bound
mov
stos
loope
lcall
leave
dec
mov
nop
add
add
mov
push
add
add
add
rcr
sub
pushl
call
lds
rolb
push
add
popf
addb
add
add
sbb
add
cltd
mov
pop
sbb
xchg
add
mov
mov
popf
jno
jg
mov
add
xchg
add
aaa
mov
mov
leave
mov
gs
mov
jno
add
lods
cmp
inc
add
fmul
add
inc
add
mov
mov
lea
add
fisttpl
insb
inc
push
test
jl
jns
rcll
add
sbb
fldcw
cmp
decb
cld
dec
inc
add
call
push
add
lcall
aam
cwtl
push
mov
add
mov
mov
in
cs
add
add
xchg
xchg
add
pusha
add
cld
xor
das
mov
popa
xor
sahf
lret
out
clc
inc
add
mov
movb
add
je
mov
pop
cltd
lcall
out
mov
add
add
mov
sti
ljmp
pop
loopne
leave
shll
ret
lahf
ss
stc
mov
int
add
add
aam
lock
dec
jmp
rolb
data16
jmp
xor
add
dec
test
push
into
add
xor
lret
hlt
add
inc
jae
add
adc
jns
lods
out
ret
repz
add
adc
mov
cmp
std
enter
out
mov
ljmp
popf
dec
mov
aam
and
icebp
dec
and
mov
sbb
push
or
add
dec
repnz
sbb
add
scas
rolb
sub
repnz
sahf
cli
jle
add
mov
insl
xor
rolb
sbb
adc
add
and
paddb
imul
mov
imul
pop
addb
xor
xchg
push
add
stos
testb
add
dec
mov
add
loope
xchg
adc
add
xor
push
add
add
jb
imul
mov
mov
adc
xor
xchg
hlt
add
add
cmpsb
add
jae
add
pop
adc
mov
xchg
add
sub
pop
sbb
rol
incb
add
repnz
jle
aaa
push
add
mov
add
cltd
dec
xchg
ds
add
and
and
add
add
aaa
cli
psubq
push
add
jl
cwtl
lcall
add
test
fsubrl
mov
xchg
arpl
clc
xor
popa
fsubr
and
cmp
pop
repnz
fsubr
jmp
loopne
mov
adc
test
aad
add
jmp
and
mov
inc
add
mov
add
pop
negl
lock
insb
cltd
movb
imul
jp
sub
mov
inc
add
add
adc
jl
add
in
in
mov
add
add
push
add
add
pop
cltd
data16
add
mov
addb
mov
hlt
add
popa
rolb
addb
add
and
jge
jp
pop
sarl
add
adc
les
ljmp
add
divl
add
inc
addr16
pop
int
add
inc
mov
add
pop
mov
push
add
aas
testb
pop
adc
add
in
sub
mov
add
and
mov
mov
movb
imul
fists
sbb
lret
enter
add
inc
pop
enter
mov
mov
cmpsb
add
mov
pop
popf
lds
jg
fsubs
xchg
add
call
pop
mov
inc
add
movsl
daa
icebp
cmp
add
add
in
pop
pop
mov
addr16
dec
movsb
add
xchg
add
das
push
add
xchg
sbb
outsb
or
int
add
pop
push
add
add
add
cmc
push
add
rolb
repnz
add
sahf
out
out
imul
test
cmp
inc
add
jo
int3
arpl
xor
sub
add
cltd
cwtl
dec
int
add
jb
test
arpl
in
nop
add
inc
xor
dec
iret
shrd
mov
add
add
sbb
sbb
sbb
jb
movntq
out
test
rcll
add
push
mov
and
and
inc
and
cmp
cld
mov
add
in
addb
adc
cmp
xor
jl
add
add
scas
repnz
pop
cmp
xor
push
and
adc
loop
movb
scas
jnp
add
gs
xor
sub
into
sub
je
mov
xchg
add
or
add
xlat
xor
and
mov
push
add
sahf
add
mov
add
mov
aas
popa
cmp
gs
lret
jle
in
stc
mov
add
xor
mov
push
fs
out
and
mov
add
add
add
sbb
add
add
add
add
add
popf
cmp
in
cmp
jl
mov
add
add
add
aas
mov
xchg
add
add
add
cmp
cmp
repz
mov
and
mov
shrl
add
xor
add
pop
rcll
je
xor
enter
lods
xlat
lcall
mov
add
add
test
mov
lock
pusha
add
pop
mov
test
jne
fistl
add
daa
jge
add
loope
push
add
add
jp
shrl
lea
add
add
add
les
sbb
cltd
in
in
in
mov
add
add
cmp
repnz
dec
jnp
add
push
xchg
adc
add
or
xlat
sahf
push
mov
in
push
add
mov
sub
rolb
arpl
inc
lahf
call
xor
loopne
in
rolb
repz
add
pusha
add
cmpl
jl
add
mov
loopne
outsb
or
pop
test
add
add
fildll
add
dec
lods
xchg
add
add
inc
add
add
sbb
mov
add
add
dec
add
ja
into
into
rcl
sti
mov
push
add
pop
adc
rolb
cmp
add
add
cltd
add
mov
call
jbe
pop
lea
xor
inc
add
mov
push
add
add
add
mov
jg
add
mov
jns
push
add
clc
pop
push
inc
pop
pop
xchg
inc
add
lds
das
xorl
pop
addb
add
mov
add
mov
add
mov
pop
fs
lods
ret
pushf
inc
movsl
out
das
imul
enter
sub
pop
dec
int3
mov
les
or
sti
cmp
addb
sub
mov
ljmp
xchg
add
into
jmp
out
lods
fidivrs
lds
popf
mov
testb
loope
jle
add
mov
add
and
mov
add
aas
test
movsb
add
sub
stos
ljmp
add
add
or
mov
sti
gs
in
cmc
imul
xor
sub
adc
push
adc
adc
add
cmc
fcomip
cmp
add
jecxz
jl
add
add
mov
push
cmp
xor
or
cltd
gs
add
test
add
pop
push
add
mov
mov
sbb
add
sbb
add
xchg
add
add
mov
add
fisubrs
mov
mov
addr16
add
push
pushf
sarl
loope
cmp
aas
sub
cmp
adc
adc
add
bound
mov
add
dec
push
add
add
sbb
add
mov
jbe
lcall
cwtl
test
xchg
xor
add
stc
sbb
lock
jp
pop
xchg
inc
sahf
pop
jae
add
ret
cmp
jbe
mov
cmp
sahf
ds
adc
mov
in
cmp
mov
out
out
xchg
add
push
dec
add
add
mov
sub
pop
std
add
mov
add
jmp
mov
add
cmp
push
inc
movsb
add
cli
dec
imul
add
jne
xor
aaa
addb
sub
pop
aam
ret
insb
dec
adc
and
enter
lods
add
sub
dec
outsl
mov
mov
jb
cmp
add
add
jae,pn
lds
dec
ljmp
fcomps
add
add
and
mov
pop
mov
push
add
fstpt
add
xchg
push
inc
add
xorl
in
loope
adc
inc
add
aaa
int3
outsb
test
out
arpl
js,pn
add
out
out
popf
push
add
add
add
das
jp
adc
jecxz
add
es
add
add
jae
in
sub
ret
fnstsw
add
testb
test
mull
pmullw
ret
push
fwait
push
add
jns
jecxz
lcall
xor
decb
lahf
jp
add
dec
rolb
add
ret
add
add
aas
sahf
adc
aas
or
lods
jmp
enter
add
add
mov
push
add
inc
add
mov
add
dec
fnstsw
jno
sub
or
cwtl
cmc
inc
add
rolb
in
inc
add
or
push
add
inc
add
scas
lds
dec
adc
aam
mov
add
push
add
andl
add
add
jae
add
cmpsl
pop
inc
adc
and
mov
test
add
arpl
or
add
add
ret
add
xlat
sub
mov
inc
enter
jns
add
in
loope
daa
xor
data16
add
xchg
mov
add
add
xor
data16
add
rolb
outsb
stos
sub
push
add
mov
cltd
rolb
cwtl
pushf
jbe
repnz
sbb
arpl
cltd
cld
cmp
outsl
jno
add
inc
add
addb
js
add
add
add
iret
rcrl
add
mov
call
movsb
add
xchg
loop
mov
xor
sahf
mov
add
add
mov
testl
insl
push
add
cmpsl
push
jo
movsl
xchg
add
mov
leave
andl
add
adc
in
cmpsb
add
repz
ret
add
cmpsb
add
inc
add
in
pop
std
push
or
add
or
and
and
mov
cmc
sub
inc
loopne
cmp
icebp
mov
add
mov
xchg
cmp
add
pusha
add
pop
fwait
pop
test
mov
cmp
pop
mov
data16
testb
int
and
xchg
testb
or
insb
fisttps
add
call
movsl
movsb
add
test
xor
leave
out
jmp
and
ret
pop
lock
add
add
movb
jns
jp
cli
lahf
jno
add
sub
and
mov
inc
sbb
adc
sub
add
sbb
pop
ret
add
add
add
mov
add
and
movb
add
es
jnp
in
and
mov
sub
in
rolb
mov
lods
jge
add
pop
enter
sbb
fadds
add
add
cmpps
cld
test
add
add
mov
mov
adc
jo
ficompl
sub
add
pop
outsb
aad
add
daa
pop
push
push
adc
push
add
dec
mov
xor
add
add
add
cmp
mov
les
jno
scas
stc
dec
sbb
mov
add
mov
xor
iret
test
xchg
jmp
clc
pop
stos
pop
mov
xlat
dec
xchg
add
mov
add
out
je
dec
adc
adc
cld
adc
loope
aas
aad
xchg
add
mov
cld
cwtl
xchg
add
cwtl
stos
out
dec
clc
push
add
or
mov
adc
push
add
add
loope
pop
iret
jne
je
orl
sbb
out
addb
add
bound
mov
jo
mov
xchg
adc
inc
add
add
push
add
add
leave
jecxz
pop
cltd
fimull
push
add
xor
inc
add
add
data16
lds
xor
mov
mov
add
inc
add
movsb
add
fdivr
cwtl
xor
and
fwait
out
xchg
mov
fsubrs
add
or
ret
jne
mov
fcompl
gs
add
add
mov
push
add
mov
fwait
inc
inc
sbb
cmpsl
test
push
add
rorl
mov
push
add
out
push
add
ret
mov
jo
sbb
add
mov
add
lret
mov
inc
push
add
movsb
add
or
add
les
loop
fld
xor
xor
testb
stos
mov
aam
or
add
dec
movl
and
pop
dec
int3
xchg
add
shll
push
push
mov
push
add
add
mov
aam
scas
jb
inc
in
adc
and
mov
mov
cmc
push
ret
pop
push
add
popf
inc
xchg
cs
add
xchg
add
add
add
mov
push
mov
or
mov
rolb
in
or
add
sub
mov
cmpsl
repnz
add
mov
jle
mov
shll
cmp
add
jecxz
mov
xor
insb
pop
dec
push
add
ljmp
and
mov
pop
das
lcall
fwait
xchg
add
add
aam
xchg
push
push
outsl
pop
repz
add
add
cltd
int
xor
push
add
add
stos
mov
xor
les
xor
ds
push
add
cmp
and
mov
sub
mov
xor
int3
ds
fcoms
mov
and
fwait
popf
int3
and
mov
lock
fcomps
mov
pop
sub
in
add
es
rolb
ljmp
add
fwait
lods
adc
call
mov
in
mov
cli
lahf
lds
out
mov
add
jno
pop
inc
add
add
jmp
pop
movsl
mov
xor
push
add
add
lock
fstl
add
jnp
mov
fidivrl
mov
add
add
add
cmp
add
mov
add
mov
add
add
lret
rolb
and
add
add
add
cli
stc
cmp
add
xchg
movb
cwtl
inc
sub
cli
daa
xor
sarl
pop
jge
xchg
add
mov
outsb
dec
in
push
outsb
addr16
add
push
add
and
mov
xchg
mov
add
push
nop
add
pusha
add
jae
push
add
add
add
push
jno
icebp
arpl
lret
dec
push
add
ror
mov
pop
adc
dec
popa
jns
cmp
add
add
add
add
scas
sbb
xchg
add
add
pop
sub
push
daa
mov
add
mov
jne
add
mov
jecxz
rolb
pop
mov
add
add
xchg
jmp
mov
lahf
mov
fidivl
dec
xor
ret
mov
pop
push
add
pop
mov
stc
icebp
jns
nop
add
daa
and
mov
jecxz
jp
cld
popa
testb
add
das
xchg
into
pop
or
aam
xor
arpl
mov
test
fadds
xor
sbb
lods
or
mov
mov
mov
adc
loope
adc
adc
movsb
add
cs
test
push
add
int
add
add
add
add
add
sub
mov
daa
fcmovne
test
push
data16
out
push
add
loope
sub
jae
xorl
add
in
jb
mov
add
mov
add
xor
aas
sub
jmp
push
cltd
es
xchg
sub
imul
pop
test
adc
sbb
rolb
popf
ja
enter
add
lds
add
cmc
push
cmp
add
testb
and
je
sub
add
ret
sbb
add
addb
lea
add
add
push
inc
add
pop
dec
mov
jl
movsb
add
add
add
sub
lds
sbb
add
mov
jb
cld
arpl
push
add
roll
add
popf
xchg
in
xor
dec
mov
xchg
loope
add
xor
adc
add
add
push
add
xchg
add
pop
arpl
rol
add
xor
test
sub
xlat
jmp
cmp
dec
mov
pusha
add
inc
les
incb
add
mov
adc
js
add
push
add
add
add
mov
fisttps
pushf
add
in
push
mov
mov
loope
add
add
lds
orl
inc
add
mov
sub
rol
in
insl
data16
mov
popa
adcl
call
add
loop
jl
add
or
add
movsb
add
add
rolb
adc
das
movsl
nop
add
addl
gs
jb
mov
pop
push
xchg
inc
add
insl
adc
mov
jmp
inc
add
add
add
cmp
add
addr16
push
add
mov
add
sub
dec
repz
xchg
push
sbb
lock
add
add
out
adc
test
jmp
and
add
clc
jmp
lds
ja
push
fsts
add
add
inc
add
mov
xchg
mov
adc
cmp
push
add
push
out
fwait
das
push
push
add
add
mov
and
adc
cmp
mov
xor
xchg
outsb
mov
cli
xor
mov
mov
mov
add
fistl
mov
aam
in
xchg
mov
pop
outsl
pop
cmp
jns
in
icebp
xorl
sub
add
adc
cld
cld
push
add
mov
adc
repnz
call
push
add
or
add
test
cmp
xlat
rolb
or
or
js
add
add
add
pop
addb
jmp
les
fcmovnu
add
movsb
add
and
mov
sub
xchg
sbb
add
mov
pop
cmc
adc
jnp
sbb
add
movb
dec
ds
es
add
repnz
scas
adc
jecxz
rolb
xor
and
mov
jne
fildl
iret
in
add
add
lcall
add
inc
add
in
lods
sub
lea
add
sub
lret
or
add
adc
test
leave
and
movsb
add
jb
outsb
popa
loope
cmp
add
add
mov
push
add
add
add
mov
push
add
aas
fsubp
add
cmp
arpl
test
add
xchg
add
add
add
int3
push
add
mov
add
mov
add
pushf
jmp
sbb
lods
hlt
add
ret
add
add
flds
cmp
cwtl
jns
out
out
and
mov
repz
