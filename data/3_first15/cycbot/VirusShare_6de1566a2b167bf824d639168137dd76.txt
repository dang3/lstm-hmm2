push
repnz
dec
leave
push
add
add
sbb
mov
lahf
aas
pop
out
sbb
in
xor
stos
or
xchg
or
cwtl
add
fisttps
movsl
stc
mov
add
mov
fs
add
cmp
add
dec
add
fimull
add
inc
or
add
add
mov
cmp
xor
push
add
dec
mov
pop
dec
add
xor
js
movsb
add
add
out
mov
daa
addb
adc
add
ljmp
fistpl
inc
add
rolb
dec
mov
add
adc
jnp
add
cmp
addb
jl
cmp
cld
mov
or
sub
add
movsb
add
adc
and
xor
or
mov
cltd
jne
jge
rcll
add
repz
add
adc
jo
push
jbe
and
mov
dec
mov
mov
add
mov
add
das
fcompl
add
cli
testb
dec
and
jnp
pop
or
mov
cld
jb
into
ficompl
xchg
add
nop
add
add
rolb
jnp
add
mov
insl
jg
add
cmp
fidivrl
addr16
fnstsw
fidivrl
push
mov
push
jo
pop
ljmp
test
sbb
jge
add
roll
rolb
add
fnstsw
rolb
fdivs
leave
imul
std
xor
add
psrld
ja
add
push
add
jnp
ss
add
pusha
add
sbb
mov
and
mov
add
pop
repnz
test
jmp
adc
mov
mov
push
add
xlat
repz
iret
xchg
add
inc
adc
sbb
addb
mov
mov
add
aam
icebp
sbb
push
jb
mov
test
cmp
xlat
ret
mov
push
add
ret
roll
or
add
xorl
xchg
add
inc
add
cmp
pop
xchg
xchg
frstor
mov
bound
mov
gs
cmc
lcall
xchg
add
xor
sbb
add
stos
dec
movb
lea
mov
out
ljmp
sub
bound
mov
add
or
out
sub
and
mov
dec
xor
mov
int3
xchg
add
pop
mov
xchg
add
test
icebp
and
loopne
xorl
insl
push
add
mov
pushf
sti
add
mov
sbb
mov
fisubl
mov
inc
add
jle
or
add
ljmp
testb
add
lahf
movsb
add
xchg
lods
testl
gs
imul
jnp
repnz
and
aad
push
push
add
sti
testb
or
add
std
mov
push
add
push
push
add
int
add
mov
sub
int
add
test
stc
insl
aas
mov
addr16
ds
mov
aad
add
cmc
rolb
jg
inc
add
add
add
add
pushf
xor
pushf
pop
stos
stc
mov
nop
add
aaa
mov
add
xor
add
lods
sub
mov
sub
mov
push
add
cld
addb
add
mov
in
jp
xorl
mov
add
mov
fisubrs
icebp
fisubrl
mov
mov
outsb
jmp
xor
std
jo
add
add
jl
lret
sbb
add
and
pop
sub
gs
mov
add
and
ds
out
or
mov
scas
or
jmp
mov
jle
int
enter
inc
mov
add
mov
bndldx
add
add
or
mov
jbe
sti
iret
mov
popa
cmpsb
add
test
mov
xor
mov
sub
inc
sub
movsl
lret
arpl
into
push
stc
mov
faddl
addb
cwtl
mov
add
fxch
mov
mov
sbb
push
add
inc
popa
jb
inc
out
lret
dec
sbb
dec
pop
test
pop
loope
add
out
imul
add
loope
pusha
add
iret
outsl
lret
loop
sub
out
add
mov
mov
insb
adc
and
stc
push
add
adc
add
add
sbb
pop
pop
data16
xchg
jne
dec
mov
push
arpl
lock
xchg
push
lahf
sbb
pop
daa
xchg
add
add
mov
pop
aad
cmpsl
ja
push
add
mov
add
scas
add
pop
ss
mov
popa
insb
xor
jl
in
jge
add
mov
scas
sub
scas
sub
dec
addl
jbe
arpl
add
shrl
out
lds
add
mov
sbb
add
or
movl
mov
cmp
sub
in
popf
mov
insl
or
xchg
das
int3
incl
add
add
movsb
add
nop
add
cwtl
pop
push
add
xchg
scas
pop
or
add
xchg
add
add
add
add
loop
rolb
imul
pop
cmp
data16
cmc
sbb
sub
add
add
dec
bound
mov
outsl
xor
pop
popf
mov
scas
pop
mov
rorl
mov
xchg
add
cs
scas
popa
shrl
movsb
add
add
and
mov
test
pop
mov
add
test
or
test
insl
pop
cmpsl
popf
dec
xor
pusha
add
mov
int3
jns
fdivrs
in
sbb
add
push
mov
xchg
in
into
test
jb
testb
add
pop
pop
hlt
add
out
sti
jecxz
add
call
xchg
aaa
sub
sub
jl
sub
add
fsubrl
movsb
add
inc
add
shrl
jl
add
add
sub
add
add
and
mov
lods
cmpsl
mov
add
or
cmp
sub
add
dec
lock
loop
sarl
dec
pop
iret
cmpsl
icebp
sub
add
sub
test
push
add
aad
jp
test
cmp
jo
xchg
add
push
cli
fbld
add
add
mov
fldl
mov
jns
or
add
je
dec
cmp
cli
xor
pop
addl
and
mov
dec
dec
and
adc
dec
ret
add
mov
add
and
mov
outsb
movsl
test
in
movsb
add
add
adc
stc
or
add
enter
push
call
popa
aaa
lcall
outsb
push
or
mov
sub
add
mov
dec
mov
add
add
hlt
add
dec
outsl
out
inc
adc
movb
vmread
add
dec
das
jb
testb
add
mov
les
cmpl
insl
jmp
call
call
mov
and
mov
pop
addb
add
mov
add
pop
aad
jge
lods
pop
sub
addb
addb
pop
jno
es
sub
fiadds
outsl
sbb
test
add
and
xchg
sar
mov
ss
inc
add
lret
mov
ljmp
add
mov
add
mov
add
push
add
scas
data16
xor
fistpl
movsl
outsl
inc
add
dec
sahf
and
mov
xor
xchg
mov
test
pop
add
mov
add
dec
out
cmp
in
mov
xor
and
fstps
add
add
fsubrl
or
pop
mov
aaa
dec
and
mov
popf
pop
insl
inc
add
add
add
jnp
fdivs
mov
pop
jb
rolb
xchg
add
xor
mov
adc
ret
push
mov
add
push
repnz
cmpl
std
rolb
js
pop
xchg
add
aas
pop
add
mov
mov
xchg
add
mov
and
fistpl
jb
adc
adc
mov
in
add
scas
and
int
andl
testb
arpl
in
mov
orl
add
add
sbb
or
insl
add
std
clc
add
add
iret
inc
inc
add
cltd
mov
xchg
jmp
cmpsb
add
add
mov
dec
aam
lds
pushf
jmp
repnz
repz
scas
pusha
add
sbb
mov
fcmovb
add
inc
add
add
xlat
cli
nop
add
push
outsl
xchg
add
cmp
rolb
inc
add
mov
add
xor
sbb
test
jmp
xchg
in
outsb
jne
nop
add
les
inc
add
stc
add
mov
add
add
iret
mov
mov
add
pop
lret
cmp
xchg
add
stc
adc
add
add
mov
jne
add
add
inc
icebp
push
add
add
xor
test
dec
mov
mov
std
cmp
std
jnp
ret
pop
test
and
mov
push
add
pop
dec
loopne
bound
mov
imul
out
cmpsb
add
movsl
clc
jmp
mov
les
xchg
add
cmc
scas
lds
jmp
cmp
and
mov
jp
add
rolb
outsb
clc
int3
rolb
or
ljmp
push
add
push
add
pop
mov
mov
add
sub
loopne
inc
rolb
cmp
mov
mov
add
add
xor
ror
jl
add
repnz
cltd
cmpsb
add
jbe
lcall
mov
test
pop
std
mov
aad
pop
fldcw
ds
addb
in
ret
mov
add
push
add
sbb
arpl
cmp
pop
imul
icebp
aas
sti
aaa
jnp
add
out
add
jb
fwait
sub
fildll
add
pop
outsb
push
or
stc
sti
rolb
sub
add
mov
add
std
jp
mov
mov
add
sbb
add
cmp
adc
std
sahf
shll
xchg
xor
popf
inc
add
out
sti
dec
fistpll
add
mov
add
loope
jge
ja
pop
fsubrl
scas
or
add
add
movsl
lret
cmp
add
add
push
daa
fisttpll
mov
imul
or
sub
add
std
dec
xor
stos
daa
sub
push
add
mov
icebp
loope
inc
add
ljmp
add
into
les
clc
pop
push
add
lods
push
add
idivl
das
jb
push
add
sub
flds
add
add
cmc
cmc
hlt
add
add
mov
aad
aas
outsb
pop
sub
or
and
das
int3
sahf
leave
mov
jnp
add
int
int3
push
add
add
sub
xchg
add
add
xchg
or
iret
lods
jae
push
add
add
imul
xchg
jp
mov
add
and
addr16
into
mov
adc
jmp
lret
bound
mov
in
add
pop
xchg
enter
icebp
dec
cmp
jg
xorl
push
inc
inc
int3
lds
scas
fcmovnu
mov
mov
add
add
fidivs
add
aas
sbb
xchg
add
insl
sub
insb
aas
fdivs
add
insl
rolb
push
add
add
aam
xchg
add
pop
adc
insl
sarl
mov
or
mov
add
add
addb
inc
add
add
jge
fcmovnu
xchg
sub
mov
stc
test
mov
push
inc
jmp
scas
rorl
in
sbb
xchg
push
sub
cmp
xchg
add
cmc
push
sub
add
mov
mov
repz
add
add
push
add
mov
pusha
add
jg
je
dec
xchg
add
add
dec
xchg
rolb
pusha
add
add
fiaddl
mov
add
in
inc
add
lahf
test
imull
ja
add
inc
add
add
ror
popa
dec
mov
int3
sbbl
xchg
divl
int
sahf
mov
testb
idiv
in
movsb
add
jge
cmpsl
scas
test
dec
dec
dec
js
inc
push
cmp
cltd
pop
xor
es
pop
lods
imul
add
and
mov
add
push
mov
push
add
add
add
or
add
push
mov
add
add
ljmp
add
inc
add
ficoms
ret
add
ficoml
add
add
ljmp
add
adc
mov
jge
rorl
add
add
test
add
mov
out
push
lock
inc
lock
inc
add
cmpsl
cltd
mov
ja
add
add
xchg
stc
ret
add
ficoml
sbb
andl
add
add
add
xchg
push
add
ljmp
add
ret
testb
add
ficoml
adc
pop
adc
pop
adc
sbb
mov
lods
aad
jo
pop
icebp
shr
add
mov
jne
push
add
orl
push
mov
cli
xor
add
adc
cld
xorl
cli
out
adc
add
lahf
push
pop
dec
xor
push
mov
sub
push
push
push
cld
call
sub
mov
cs
movzbl
cmp
ss
lea
push
push
call
cmp
je
es
lea
es
cs
es
call
test
jne
jmp
push
lret
icebp
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
lea
lea
repnz
mov
sub
sub
push
pop
push
je
jmp
add
add
add
mov
add
outsb
bound
mov
add
add
or
sub
push
imul
add
add
pushf
dec
insb
outsb
ret
loop
enter
scas
jge
add
cltd
jle
gs
test
std
add
add
mov
jnp
fadd
add
push
rcrl
decl
fwait
pushl
add
sub
push
add
xchg
add
add
cmp
rolb
fcomps
pop
inc
loope
add
push
add
daa
movlps
xor
jmp
lods
addb
cmpsb
add
add
mov
lock
pop
xor
pop
bound
mov
mov
mov
lds
add
je
cltd
xlat
lret
add
hlt
add
cmp
repnz
xor
fildl
add
lods
xchg
add
rolb
rolb
pop
ljmp
add
pop
mov
jp
inc
mov
jae
xor
int3
mov
sti
add
xor
das
jo
or
sub
add
mov
inc
add
mov
xor
add
mov
sub
addr16
repz
mov
fistpll
pop
sbb
add
xchg
in
add
ljmp
mov
fistpl
inc
add
sub
add
pop
out
cmp
ficoml
roll
imul
shrl
dec
clc
mov
ret
lock
xchg
add
jae
add
mov
jb
or
sbb
add
add
add
inc
add
dec
dec
adc
jbe
cmp
subl
add
loop
rcr
adc
pusha
add
rolb
in
add
mov
test
loopne
mov
mov
add
into
lcall
add
jmp
mov
cld
inc
add
xor
scas
das
pop
mov
testb
mov
mov
fcoms
add
add
add
add
insl
sbb
push
loop
hlt
add
in
add
fcomps
jae
add
xchg
xchg
add
pushl
hlt
add
lahf
or
add
mov
xor
test
add
sub
xchg
sub
add
add
sub
mov
push
add
decb
pop
fpatan
and
add
push
mov
add
fsubrl
das
test
mov
add
dec
aaa
mov
mov
loop
dec
aaa
adc
pop
xor
ljmp
imul
add
add
add
add
ret
push
add
mov
add
add
mov
mov
lock
cmpsb
add
lahf
lods
ficompl
stos
sub
addb
mov
jge,pt
insb
mov
add
or
mov
mov
add
mov
cmpsb
add
sbb
add
mov
ds
xchg
mov
loope
cmc
imul
add
mov
add
insb
pop
enter
inc
add
add
jl
in
int3
iret
mov
add
mov
add
inc
jg
leave
dec
or
add
addb
and
add
add
xlat
lahf
sbb
add
sti
arpl
enter
addb
sub
add
cli
or
push
add
mov
push
add
add
scas
in
mov
xchg
add
add
js
js
pop
push
inc
add
sbb
add
lea
mov
xor
mov
add
add
jp
mov
sbb
stos
daa
adc
sti
aas
ret
push
in
mov
rolb
push
add
mov
dec
add
mov
inc
xchg
jne
pop
pop
fwait
dec
aas
push
add
add
add
int
push
add
gs
inc
push
add
add
add
xchg
aam
push
add
daa
inc
add
addr16
insb
sub
jle
push
add
cwtl
adc
js
and
insb
movsl
inc
add
add
add
addb
in
add
ror
and
jmp
add
add
add
pop
cmp
pop
pop
xchg
add
and
mov
add
push
jmp
add
xchg
and
daa
adc
pop
mov
xor
jmp
sub
add
add
adc
adc
or
xchg
add
aad
in
ljmp
ds
push
and
lret
adc
mov
dec
stos
inc
add
add
adc
fstl
push
rolb
jnp
add
daa
lret
or
add
inc
or
ds
xchg
xchg
popf
enter
mov
pop
sbb
push
imul
lea
or
sbb
sub
jb
dec
mov
add
push
add
data16
addb
add
mov
out
out
add
popl
cwtl
mov
outsl
jno
cltd
push
add
rcll
dec
mov
pop
xchg
add
loop
data16
mov
add
dec
subl
xchg
dec
cmp
add
add
mov
and
mov
fucomi
pop
fucomip
inc
ss
jle
mov
and
push
mov
sub
add
lret
imul
add
pop
jo
xlat
or
sbb
cmpsl
sbb
add
add
pusha
add
cmp
jp
push
cltd
aaa
jno
add
les
sbb
aad
add
adc
xlat
cmpl
push
add
andl
mov
out
push
inc
adc
shll
add
add
pop
adc
stc
add
mov
add
xor
adc
add
pop
sub
int3
mov
repnz
or
jae
gs
mov
pop
mov
push
add
imul
sti
xchg
jle
add
pop
add
mov
inc
mov
addb
inc
outsb
mov
xchg
xchg
jp
fcoml
xlat
and
add
jge
data16
and
mov
iret
cli
cli
fwait
pop
incb
inc
addb
jae
lret
in
mov
xchg
insl
adc
aas
adc
add
test
add
orl
loope
addb
mov
lea
mov
add
add
out
popa
cmp
movsb
add
add
add
addb
pop
loop
aam
fstps
sub
or
scas
inc
add
scas
inc
add
add
add
add
cmp
pushf
mov
rolb
adc
adc
jns
add
mov
add
mov
outsb
dec
xlat
lods
jb
std
fidivrs
jecxz
sbb
add
pop
push
add
jns
and
cmp
ds
pop
push
add
ds
std
popa
addb
je
jno
mov
add
enter
bound
mov
add
add
jnp
add
add
inc
add
dec
ret
inc
add
testl
testb
sbb
pushl
aad
jge
and
sub
das
pop
add
mov
sub
pop
lods
fwait
insb
out
cmp
mov
adc
and
jo
sub
dec
push
repnz
add
add
jno
push
cmp
rolb
cmp
add
add
add
add
add
add
pusha
add
cmp
scas
pop
cld
aas
jmp
cwtl
aam
gs
outsl
cmp
add
jnp
add
xor
and
mov
add
add
in
jne
add
clc
ja
sti
mov
add
add
push
add
mov
push
movl
lret
dec
insb
mov
aam
imul
add
cmc
icebp
outsb
jp
jno
add
pop
jp
sbb
jl
inc
mov
add
in
and
sbb
add
out
inc
xchg
test
add
je
cli
fcmovu
rolb
stos
xor
inc
add
pop
mov
jmp
aam
cs
leave
mov
xor
daa
sbb
push
jle
imul
and
mov
pop
push
mul
add
nop
add
pop
fs
add
add
pusha
add
cld
push
or
enter
or
fsubrs
lods
mov
iret
xor
call
outsl
cwtl
mov
mov
out
aad
hlt
add
hlt
add
inc
add
add
jb
jl
enter
add
fisttpl
mov
dec
repz
add
cwtl
loope
add
mov
lret
fiadds
cli
pop
pop
lods
inc
add
aam
movb
movsl
or
pop
addb
add
add
add
out
mov
mov
sub
iret
xchg
add
add
fisubrl
sbb
inc
add
in
add
test
fisttpl
lods
jbe
test
mov
add
sub
test
add
popa
sbb
dec
sbb
in
add
add
add
add
popf
les
mov
and
add
add
cwtl
bound
mov
decb
sti
sub
xchg
add
movsl
dec
adc
add
movsb
add
pop
lods
aaa
inc
repnz
add
add
test
icebp
xor
push
add
add
leave
inc
add
movb
add
addr16
loopne
ret
addb
sbb
add
inc
test
insb
jge
out
add
rcl
add
sbb
pop
xchg
add
or
add
cmp
add
ljmp
sub
add
addr16
add
sbb
mov
cmp
add
and
in
js
int3
in
loope
lret
jno
loopne
push
add
int
add
add
cmp
enter
add
cli
movsl
and
mov
movb
push
std
mov
add
clc
lret
xchg
add
push
testb
cmp
rcrl
sub
stos
lcall
add
and
mov
dec
dec
fcmovb
notl
pop
ljmp
fistpll
aas
aam
loopne
mov
add
inc
add
xor
jg
xchg
add
add
fdivl
cmp
jno
movsb
add
lret
sub
jbe
pop
mov
jecxz
movb
pop
xchg
add
add
cmp
lret
pop
xor
add
test
scas
jp
sbb
int
movsb
add
mov
fisttpl
movsl
addr16
rolb
mov
movb
add
add
add
sahf
daa
adc
sub
int3
add
push
add
push
mov
test
add
add
sbb
add
mov
add
in
push
add
add
add
and
rolb
cmp
mov
add
add
add
xor
and
sahf
inc
loop,pn
jl
inc
jle
loop
or
mov
add
into
mov
push
mov
sbb
sub
mov
mov
stc
push
jmp
in
outsl
lods
add
pop
repz
test
and
mov
test
into
push
add
xchg
inc
add
mov
add
push
iret
out
outsb
out
and
das
in
add
mov
mov
pushf
sub
cmp
push
or
mov
add
mov
mov
add
add
add
add
mov
dec
adc
imul
add
cltd
imul
aaa
and
mov
lcall
and
mov
mov
xor
fiadds
mov
data16
dec
and
mov
jb
mov
jp
repnz
add
in
or
cmpsl
in
addb
add
add
sub
add
mov
aam
cmpsb
add
push
out
rolb
push
sub
mov
jae
lahf
popf
xor
iret
shll
add
mov
add
inc
imul
mov
add
adc
loope
adc
pop
enter
add
aad
mov
add
push
or
jbe
sti
and
mov
addb
ljmp
pop
sbbl
cmp
add
mov
lahf
out
das
cmpsb
add
addb
add
xor
xchg
out
or
dec
fisttpll
movb
add
cltd
mov
into
nop
add
mov
dec
nop
add
int
hlt
add
and
mov
dec
ret
rolb
xchg
add
add
mov
adc
pop
addb
or
xlat
mov
enter
lods
lods
sbb
add
add
inc
mov
sbb
int
sbb
push
jo
test
xor
f2xm1
add
push
add
add
cli
sbb
xchg
mov
mov
cmp
mov
dec
les
nop
add
cmp
add
ja
xor
in
rorl
add
fisubrs
xchg
add
data16
xlat
mov
aaa
mov
add
add
inc
add
ljmp
jne
push
or
push
add
sbb
and
mov
add
mov
sar
inc
add
aas
xor
lcall
xchg
add
jnp
addb
sbb
data16
jmp
add
add
add
test
jg
mov
lods
mov
pop
test
lret
mov
rcrl
or
sub
jae
fs
mov
lahf
xor
aas
fisubrl
inc
mov
pop
cmpl
and
cmp
mov
aas
xchg
add
jnp
mov
cli
test
repnz
repz
sub
add
int3
xchg
add
pop
ffree
push
add
xchg
mov
and
mov
das
imul
icebp
call
sahf
pop
or
lcall
add
jle
add
and
dec
scas
popf
xor
lea
add
add
mov
add
add
add
mov
jbe
popa
cli
jle
pop
pop
jp
aas
jb
ja
push
add
sub
jle
add
cmp
pop
das
push
pop
movsb
add
jae
stc
addb
push
adc
imul
add
xor
jmp
xchg
bound
mov
cld
xor
pop
movsl
das
add
cmc
mov
ds
mov
pop
push
das
call
add
mov
xchg
movsb
add
add
sbb
xchg
inc
mov
add
add
inc
add
jns
pop
sub
ja
add
xchg
cmc
aas
andl
mov
movsb
add
push
inc
add
jl
add
pop
ja
add
dec
call
lret
adc
mov
insl
pushf
roll
push
add
movsb
add
inc
add
cmp
jecxz
es
xchg
xchg
add
add
add
insb
cltd
popf
test
sbb
outsb
jbe
push
test
adc
aad
add
lcall
add
xchg
add
mov
dec
add
mov
jecxz
mov
jl
test
mov
adc
imul
into
push
add
mov
and
mov
push
add
repnz
imul
scas
mov
out
push
add
mov
popf
sub
and
mov
inc
add
fwait
call
mov
add
pop
shrl
add
outsl
xchg
add
aas
dec
mov
mov
xchg
lea
adc
repnz
je
pop
loop
jecxz
xor
mov
and
mov
loope
add
les
pushf
cld
mov
addb
fildl
xor
cmp
in
test
test
lea
pop
jl
pop
negl
pushf
adc
lock
xor
adc
inc
rol
add
mov
pop
mov
les
testb
adc
xor
or
add
push
add
lea
push
xchg
or
dec
ds
in
insb
mov
xor
add
add
push
add
addb
and
xchg
cmpsb
add
add
add
mov
xchg
repz
mov
movsl
iret
in
es
add
pop
or
add
leave
ss
mov
nop
add
jp
xchg
push
add
aas
mov
mov
adc
test
fidivs
test
ds
jae
mov
in
pushf
testb
add
shll
mov
dec
mov
cmp
add
mov
into
stos
push
lods
jne
add
dec
imul
maskmovq
testl
cmp
add
mov
sbb
add
add
cmp
mov
xor
inc
nop
add
fisttps
cmp
cmpsl
pop
push
add
add
add
xor
add
imul
insb
sub
mov
add
or
fisubl
xchg
mov
nop
add
aam
adcl
sar
pop
adc
and
mov
stos
dec
out
out
leave
mov
int
mov
add
xor
testl
jne
sbb
movl
cmp
add
ret
xchg
add
mov
cmp
subl
repnz
mov
push
add
add
xor
cmp
add
in
ljmp
and
outsl
cltd
xor
add
sahf
jg
or
add
add
jge
push
arpl
int3
xlat
jns
lcall
cmp
add
ret
mov
fisttpl
lret
add
push
add
sbb
add
sub
imul
js
pop
mov
inc
add
jmp
int3
inc
add
cli
insl
pusha
add
add
sub
jl
lret
xchg
movb
pop
lock
jp
jo
fcoml
push
add
cmpsl
lret
jne
mov
push
add
movb
ret
ret
jo
out
add
scas
and
mov
mov
les
jnp
add
mov
push
add
add
popa
xor
sbb
call
and
mov
add
cmp
add
add
cmp
into
mov
lret
xor
add
addr16
addr16
sub
pop
addr16
push
jmp
scas
stos
popf
xor
xor
bound
mov
pop
xor
xlat
cmp
test
inc
add
pop
push
add
mov
inc
and
mov
cmp
inc
push
xlat
test
sbb
xchg
add
ljmp
mov
add
adc
and
jne
mov
and
call
cli
mov
add
sbb
pop
push
add
iret
and
dec
add
add
jge
add
add
add
sti
push
lods
sti
shl
hlt
add
adc
icebp
int
dec
sub
add
das
pop
jge
nop
add
jbe
add
sbb
icebp
add
mov
add
les
or
xchg
movb
add
mov
add
out
sbb
int3
pop
jns
sub
addb
add
add
cmpsl
dec
scas
ljmp
add
cltd
mov
clc
fnsave
add
jge
or
mov
testb
add
leave
sub
or
mov
mov
adc
adc
push
ss
add
add
das
mov
lock
add
jg
repnz
add
mov
out
cmp
addl
mov
mov
pop
xor
xor
sarl
faddl
add
add
out
shll
aaa
jp
add
aam
hlt
add
xchg
adc
cmc
sbb
inc
dec
pop
jecxz
aad
aam
cwtl
sub
add
mov
cmpsl
leave
or
arpl
insl
insb
jmp
mov
mov
call
pop
rolb
imul
xor
addb
add
call
or
sub
add
mov
push
jno
shll
rolb
add
add
xor
and
add
add
mov
loopne
addb
cmp
dec
sbb
dec
push
call
mov
mov
push
add
jg
add
add
mov
lret
divps
mov
add
add
mov
sub
orl
into
jne
jo
and
mov
rorl
jnp
fstpt
mov
add
mov
add
and
add
test
push
add
stos
jnp
xchg
add
add
stos
repz
scas
mov
dec
jmp
inc
add
int3
enter
pushf
push
add
ret
aam
xchg
add
add
add
ret
dec
cmp
xorl
add
insb
cld
dec
cmp
add
add
jno
jge
inc
push
add
push
add
mov
push
popa
lock
popa
adc
adc
addb
dec
xchg
dec
xchg
add
xor
stos
les
sbb
cwtl
sbb
cmp
add
mov
loope
sti
jo
and
add
pusha
add
addl
outsl
lret
mov
cli
sbb
add
add
jb
shrl
xor
cmpsb
add
mov
add
add
stos
je
pop
loopne
inc
add
xchg
sbb
add
pop
dec
pusha
add
lret
mov
cli
dec
test
mov
adc
insb
and
mov
movsb
add
add
lea
push
add
add
add
iret
sahf
and
and
out
dec
xor
mov
mov
mov
insb
out
ljmp
cltd
xchg
jp
add
popa
add
ds
fidivrs
fstp
push
add
add
add
jae
or
mov
test
sub
or
push
jnp
loope
add
push
int3
inc
push
add
or
or
loopne
popa
xchg
add
cmpsl
test
ret
adc
rolb
aas
dec
xchg
add
add
repz
push
push
add
lds
cs
jne
add
mov
push
adc
mov
mov
fbstp
add
shrl
loopne
nop
add
xchg
add
jmp
add
imul
add
add
mov
mov
push
add
cli
fdiv
add
mov
add
add
je
pusha
add
xchg
fldt
addb
or
push
add
add
push
add
jns
jo
in
xor
iret
jp
add
testl
xchg
repnz
sti
mov
xchg
fmulp
mov
add
imul
sub
add
pop
inc
add
xor
cmp
sub
jmp
stos
mov
add
add
sub
mov
add
jne
add
mov
test
mov
sbb
push
hlt
add
mov
add
mov
mov
dec
cltd
jbe
inc
cmp
adc
push
lret
into
lcall
and
out
rolb
xchg
add
add
out
xchg
inc
fdivrs
mov
cmp
pop
push
rolb
rolb
jp
dec
jp
incl
mov
cwtl
scas
cmpsl
pop
sahf
pop
in
mov
mov
jp
and
imul
sub
mov
add
mov
mov
data16
push
arpl
jl
add
add
xchg
add
add
add
add
cmp
ljmp
add
push
add
outsb
mov
mov
add
add
add
add
movsl
daa
or
call
lahf
in
push
cli
scas
add
fsubl
mov
dec
scas
sbb
add
test
add
lahf
pop
sbb
add
test
add
insb
mov
in
xorl
or
mov
mov
adc
stos
mov
xchg
add
sbb
mov
or
add
mov
pop
pop
cmp
cli
mov
cmp
add
add
add
add
out
fwait
out
inc
add
mov
popa
pop
faddp
add
add
adc
adc
repz
and
jns
popa
dec
inc
nop
add
in
outsl
bound
mov
add
mov
and
mov
sub
add
lds
test
jmp
daa
xor
test
sbb
add
push
add
inc
rolb
rolb
mov
add
pop
push
aaa
popf
sbb
add
mov
sub
push
add
sub
add
data16
dec
or
adc
add
xchg
cmp
xchg
add
add
mov
cmp
xchg
arpl
xchg
push
or
repz
jbe
pop
arpl
push
out
mov
add
pushf
fistpl
add
xchg
fldt
int3
xchg
inc
stos
in
in
xchg
add
int3
push
add
outsb
jnp
add
add
add
fiadds
add
pop
sub
dec
sub
add
xlat
mov
insl
inc
cmp
adc
lret
lcall
nop
add
add
mov
xchg
rolb
or
mov
add
es
pop
inc
std
xchg
add
lret
add
xchg
js
sub
mov
add
add
push
gs
sub
mov
add
mov
add
movsb
add
pop
dec
pop
mov
add
add
mov
inc
add
add
add
into
pop
or
into
sub
pop
flds
mov
mov
test
add
push
test
jns
mov
fst
mov
pop
inc
push
fdivrs
dec
dec
jno
lret
ja
subl
enter
push
add
mov
sub
sbb
movb
addb
xchg
add
cmp
mov
fadd
cmc
fadd
add
movsb
add
ret
aaa
xchg
sti
jno
add
mov
mov
jmp
adc
aam
test
mov
mov
popl
mov
mov
mov
jge
lds
inc
js
mov
jl
popa
daa
std
paddsw
sahf
les
fiadds
addb
les
enter
scas
add
stos
pop
sbb
add
sti
imul
add
jno
outsb
dec
vcvtps2dq
jmp
add
cs
jo
data16
push
xorl
add
mov
mov
leave
in
fnsave
or
add
mov
das
pop
push
add
mov
popa
outsl
xor
popf
lods
das
cli
loop
push
sbb
lcall
cmp
pop
test
decb
mov
imul
add
add
loopne
mov
mov
xchg
lock
add
fwait
test
out
inc
xchg
dec
push
add
lock
add
sti
enter
aaa
int3
jl
xor
pop
adc
stos
pop
popf
inc
hlt
add
xor
adc
lods
data16
cmp
mov
pop
inc
jnp
jmp
js
cmpsb
add
cltd
push
sub
add
lock
add
sbb
mov
addb
in
test
adc
stc
pop
or
push
cmp
sub
mov
sub
in
enter
xor
outsl
sub
outsl
dec
push
add
pop
ljmp
add
add
xchg
add
and
mov
mov
sbb
add
and
mov
dec
fsubs
jp
jae
lahf
mov
inc
add
adc
cs
aam
xchg
add
jge
add
adc
fs
das
clc
sub
add
and
hlt
add
outsl
ljmp
add
inc
mov
dec
bound
mov
sbb
jp
dec
outsb
pop
stos
xchg
jp
xchg
mov
jmp
add
add
mov
and
mov
data16
add
sub
mov
std
sbb
jle
sub
mov
jmp
mov
adc
mov
rolb
loopew
mov
dec
xlat
insl
mov
add
mov
das
cmp
add
add
or
inc
in
cmp
add
sub
and
mov
xchg
add
sbb
jl
add
add
add
jp
add
xchg
fwait
into
push
addb
add
jbe
dec
outsb
mov
sub
sub
dec
cmp
fnstcw
mov
cmp
pop
adc
sbb
cwtl
push
add
xor
pop
ja
add
cmpsl
bound
mov
add
insl
adc
mov
add
scas
and
jge
add
sti
push
add
fdivr
sbb
jmp
add
jg
nop
add
push
add
add
cmp
add
lea
add
xchg
push
add
mov
add
add
add
jnp
add
stos
addr16
test
pusha
add
add
popa
lock
add
aad
add
add
iret
lahf
enter
stc
fdivs
or
add
pop
insl
orl
xchg
xor
pop
inc
add
sarl
ds
xchg
xor
dec
jns
add
call
xchg
add
fucomip
sbb
add
xor
xchg
data16
fistpll
int3
push
add
add
rolb
add
mov
stc
pop
push
add
icebp
repnz
add
mov
iret
add
mov
scas
out
jbe
push
add
mov
mov
xor
insl
fmull
add
pop
push
add
aam
adc
mov
popa
inc
xor
add
mov
cmp
pop
mov
jno
pop
or
push
add
add
push
add
dec
rorl
add
sbb
dec
xor
adc
add
mov
mov
xchg
add
js
add
mov
push
xlat
je
in
mov
xor
pop
call
add
add
aam
ret
add
mov
mov
cmpsb
add
jne
add
lahf
adc
and
mov
inc
icebp
pop
js
fsub
sti
push
pop
pop
push
add
in
xchg
pusha
add
inc
popa
rolb
repz
ljmp
mov
cli
and
push
mov
movb
add
stos
dec
test
or
sbb
aad
js
aam
pusha
add
xlat
std
ljmp
mov
les
hlt
add
push
add
pusha
add
addr16
stc
lret
cmpsb
add
add
out
mov
mov
push
mov
cmp
into
lea
xor
cmp
iret
int3
push
add
add
les
les
pop
fnstcw
mov
sahf
adc
jg
push
xor
sbb
movaps
cltd
jp
cmp
cli
push
movsl
jp
xlat
xchg
push
add
add
addb
dec
stos
imul
dec
and
mov
inc
add
movsb
add
inc
add
cmp
dec
mov
add
add
add
add
mov
add
imul
jl
add
mov
dec
addb
add
mov
rolb
js
sbb
jnp
mov
mov
add
add
xor
les
rolb
add
mov
add
mov
int
loope
stc
add
push
add
push
push
add
fnstcw
inc
add
push
push
shl
stos
jo
pop
stc
ret
stc
addb
or
repnz
js
add
mov
pop
sbb
rolb
lret
add
add
leave
pop
cmp
sti
pop
pop
pop
add
add
add
add
ljmp
add
mov
ret
outsb
bound
mov
inc
add
dec
jns
add
add
add
out
loope
cmp
jns
add
imul
cmp
in
int3
iret
inc
add
mov
or
out
xchg
push
add
jns
addb
add
pop
inc
addb
pop
add
rolb
stc
int3
cmovs
add
mov
add
dec
push
gs
sub
aaa
dec
mov
add
push
add
add
jbe
inc
xor
rol
add
add
fdivl
mov
add
pop
jecxz
lods
lods
es
adc
out
aaa
inc
add
insl
je
xor
lahf
fwait
daa
xor
add
add
lahf
push
sub
add
lds
xor
cwtl
addr16
add
add
in
mov
cmp
pop
inc
mov
sbb
xchg
lret
jmp
lods
xchg
cmpsb
add
cmp
sbb
and
rolb
addb
xchg
add
sub
adc
sub
mov
aas
cmp
add
clc
mov
push
aas
xchg
xor
int3
test
clc
sarl
rcll
add
add
inc
cmpsl
scas
out
sub
add
mov
repnz
xchg
jl
ret
mov
stc
scas
lock
add
adc
inc
inc
xchg
rorl
inc
sbb
dec
repnz
or
push
add
push
dec
test
sbb
add
and
call
je
dec
xlat
sbb
mov
add
mov
pop
mov
cmp
pop
sbb
iret
sahf
dec
add
mov
add
add
mov
add
mov
mov
loop
loop
imul
shll
add
insl
scas
out
movb
js
lods
jle
add
aam
add
add
test
out
pop
xor
or
add
add
mov
add
add
add
in
inc
add
xchg
inc
add
aad
sbb
add
addl
fsubrp
fmuls
add
mov
add
inc
xor
ja
dec
nop
add
cmpsb
add
inc
add
pop
in
xor
arpl
popf
popa
mov
sub
mov
add
dec
punpckhwd
movsl
dec
leave
xlat
cmp
jno
pusha
add
mov
call
add
sub
loop
addl
sub
loope
bound
mov
incl
xchg
in
add
cli
pop
and
add
scas
or
mov
frstor
mov
xchg
cmp
and
mov
add
insb
dec
lds
out
cmpsl
cmp
add
lret
rolb
xor
mov
fld
add
out
push
add
mov
leave
or
mov
das
pushf
xchg
add
out
pop
scas
mov
cmp
inc
add
add
sbb
push
add
xchg
add
add
cs
push
add
into
jbe
inc
adc
inc
add
push
add
push
or
mov
jnp
xchg
test
and
mov
or
add
mov
add
add
xchg
add
mov
adc
dec
pop
mov
add
jecxz
out
sub
cltd
pop
add
or
insb
pusha
add
and
lods
adc
jae
add
lea
aad
call
add
jno
pop
sahf
call
insl
lds
lds
cmp
add
add
mov
or
test
fcompp
into
mov
and
add
cld
fbstp
mov
add
stos
dec
addl
add
je
or
add
mov
aad
inc
add
mov
sub
adc
xchg
or
cmpsl
aam
inc
push
ljmp
int
fadds
push
add
add
testb
add
and
mov
add
popl
cld
xor
imul
call
adc
add
scas
aam
js
stc
std
fbstp
add
mov
add
add
in
add
cwtl
test
imul
mov
hlt
add
popf
mov
jecxz
imull
mov
fbld
add
rolb
rolb
imul
enter
add
add
add
mov
or
mov
mov
test
mov
add
mov
je
and
mov
mov
xchg
and
mov
lods
sub
xor
mov
mov
fistpl
lcall
cltd
aaa
sub
out
mov
nop
add
cmp
add
mov
stos
mov
imul
dec
sbb
stos
loope
pop
cmp
pop
add
jb
jo
daa
fidivrs
jge
add
movsl
adc
and
mov
add
sub
add
sbb
jl
add
mov
popa
call
add
add
xor
repz
test
js
add
arpl
xchg
xchg
mov
imul
add
add
add
jns
mov
add
ds
pop
inc
pop
test
mov
push
add
add
rolb
inc
mov
aaa
sbb
add
xchg
dec
in
rcrl
sbb
and
rolb
inc
add
test
add
cmpsl
les
jb
hlt
add
xor
lcall
add
add
add
add
mov
test
add
dec
push
xor
adc
scas
cld
rolb
loope
add
xor
sbb
sbb
repnz
add
mov
popf
adc
sbbl
add
stc
int3
movsb
add
cmp
loopne
in
jmp
mov
add
add
roll
cmp
add
pop
jp
add
mov
in
fdiv
add
add
add
outsb
adc
incl
nop
add
inc
out
push
stc
orl
jl
dec
mov
add
mov
add
mov
dec
jmp
add
aas
jle
add
dec
add
sub
xorl
add
add
mov
or
daa
add
mov
add
push
adc
add
mov
add
test
sub
or
loope
int3
sbb
add
js
subl
addb
add
enter
push
xchg
ds
addr16
add
add
pop
push
popf
jb
sub
fucomi
fmul
ds
add
imul
loop
cmp
add
add
add
add
lods
xor
loop
adc
add
or
mov
hlt
add
add
add
mov
jb
mov
inc
add
jge
add
iret
xchg
adc
in
fdivs
insl
ja
mov
arpl
cmpsb
add
adc
adc
lods
and
mov
add
fistpl
mov
push
add
lods
lds
add
pop
int
xchg
mov
push
imul
add
add
add
dec
adc
add
inc
add
pop
jecxz
sub
and
mov
test
lret
lock
add
pop
jmp
scas
pop
addb
cwtl
rolb
pusha
add
cmp
mov
sbb
je
jo
cmp
jmp
add
add
in
mov
ret
nopl
dec
pop
icebp
xlat
fnstenv
dec
sub
fmul
cs
add
dec
add
add
xor
in
jno
xchg
add
add
testb
loope
jnp
es
add
loop
cld
inc
je
dec
repz
mov
mov
fldt
fidivs
pop
xchg
rorl
or
data16
arpl
push
add
push
inc
add
je
addb
add
mov
add
cmp
add
xchg
add
std
mov
add
add
pop
xchg
adc
pop
mov
add
cmpsl
add
mov
mov
rolb
dec
add
iret
cmp
add
add
xchg
push
add
add
add
inc
scas
mov
sbb
sub
inc
mov
cmp
jecxz
add
jcxz
add
add
pop
pop
movsb
add
sti
insl
test
pushf
or
add
insb
or
lea
lret
add
add
inc
adc
lahf
std
mov
add
cld
lods
inc
add
or
popf
inc
pop
std
and
xor
mov
and
jo
dec
xor
insb
jp
mov
insb
addr16
mov
add
int
add
add
cmp
add
out
xor
test
push
bound
mov
lock
add
adc
add
jns
mov
add
lods
push
sbb
pop
jns
cltd
cmpsb
add
cmp
aas
aas
pop
cmp
ficompl
sub
data16
push
add
jnp
pop
out
lods
sub
add
and
mov
ret
mov
test
lret
cmp
add
fnclex
add
xchg
in
add
sub
add
sbb
andl
mov
mov
mov
mov
pop
mov
nop
add
jle
adc
mov
dec
xchg
add
mov
jmp
ror
mov
jo
or
xor
mov
out
cmp
lea
jnp
scas
adc
int
push
bound
mov
add
xchg
add
push
sahf
lock
in
mov
test
add
les
lahf
fnsave
int3
ds
dec
inc
sub
dec
sub
lods
out
push
test
cmp
add
sbb
cmc
dec
movb
sbb
mov
mov
aad
add
aaa
jle
mov
xchg
sbb
addb
add
add
mov
dec
cmpl
repnz
add
popa
mov
add
mov
add
inc
int3
push
add
cs
inc
in
push
cmp
add
add
adc
mov
add
xor
jle
sbb
add
add
push
add
push
add
js
dec
fldenv
xchg
pop
movb
sti
stos
loopne
and
add
add
push
add
cmc
in
add
mov
ja
add
add
ja
aaa
mov
xchg
sbb
mov
adc
add
sahf
sbb
nop
add
add
rolb
sbb
arpl
xor
frstor
add
add
inc
jne
orl
mov
jb
rcr
mov
dec
hlt
add
popf
jb
jae
int
jge
outsb
jle
add
add
jp
xlat
add
out
sub
add
cmp
push
add
jp
jp
sub
add
xchg
rolb
add
add
mov
out
popa
test
loopne
cli
push
add
cmp
test
xor
pop
ret
or
add
add
repz
clc
dec
lods
add
faddp
aaa
fmull
movsb
add
pop
bound
mov
mov
aaa
stos
mov
xor
pop
data16
pop
push
xchg
sbb
dec
mov
imul
fcmovu
xor
add
jmp
add
jmp
add
dec
inc
jmp
pop
dec
add
rorl
into
xor
mov
add
mov
add
add
gs
jno
add
jb
in
add
movsl
fimull
std
inc
pop
jmp
push
cltd
rcll
add
add
add
add
jmp
push
add
mov
lods
movb
inc
add
out
jl
add
inc
xor
add
sti
inc
push
mov
add
add
push
lret
outsb
jns
test
add
add
mov
fwait
cmp
add
lahf
jecxz
js
fs
imul
add
push
add
popf
in
adc
sub
add
mov
aad
cmc
pop
dec
das
mov
stos
pushf
sub
mov
adc
fistpll
add
adc
or
add
insl
shll
add
sbb
pop
inc
push
add
jl
in
push
test
add
add
inc
add
add
add
out
movsl
das
je
movsl
add
mov
sub
add
ror
shl
or
add
mov
add
mov
mov
jp
in
add
mov
add
imul
jne
add
add
rolb
jno
sub
out
sbb
scas
into
imul
mov
add
divl
or
addr16
add
scas
loope
dec
fcomps
fbstp
mov
add
aas
mov
adc
add
add
xchg
add
sub
add
add
adc
sbb
outsl
jnp
add
add
add
add
jmp
add
add
xchg
cmp
in
nop
add
add
fldt
dec
mov
add
lock
mov
xchg
aam
fsts
sub
std
push
hlt
add
aam
lahf
test
les
push
hlt
add
fiaddl
pop
pop
insl
add
ja
add
sbb
add
hlt
add
or
mov
adc
addr16
movb
dec
jge
add
loopne
push
jo
mov
fnstsw
cs
fwait
push
lret
stos
test
push
xrelease
jo
jecxz
stc
into
incb
xchg
add
add
add
add
push
add
xchg
mov
popa
stc
das
dec
outsb
subl
add
add
add
mov
add
ret
call
add
add
add
das
jno
rolb
test
std
xor
cld
mov
add
cwtl
ja
add
add
fdivs
pop
and
mov
or
outsb
xor
flds
add
fcmovbe
ja
add
add
add
xlat
or
adc
pop
in
jae
fsubrp
addb
test
jle
add
push
add
push
add
movb
add
adc
scas
sub
fimuls
cmpsb
add
jne
add
iret
pusha
add
mov
add
ror
outsl
add
add
add
lock
iret
adc
pusha
add
or
repnz
add
adc
add
and
bound
mov
add
pop
dec
rolb
add
push
add
rolb
add
add
mov
rcrl
sbb
add
in
int
add
mov
lcall
sbb
lret
lret
mov
add
jnp
adc
lds
or
lcall
sti
mov
dec
pusha
add
fidivrs
mov
mov
mov
fwait
and
mov
data16
dec
int3
test
inc
add
add
sbb
adc
or
jo
js
sub
jbe
stc
inc
add
stc
jnp
xor
adc
arpl
repnz
int3
ficomps
add
xchg
add
pop
or
add
mov
add
mov
add
fmul
mov
push
add
ljmp
add
add
add
sbb
xchg
stc
mov
jne
jns
add
fs
add
xor
add
dec
call
add
js
add
sub
mov
add
add
lods
imul
add
jecxz
adc
xchg
add
fstpl
add
add
add
and
mov
adc
jae
add
rep
in
jns
add
add
mov
add
add
xchg
repz
jb
sarl
dec
aaa
fs
repnz
imul
xor
jg
or
add
add
pop
insb
cmpxchg8b
rolb
lock
jo
push
xor
test
fldt
mov
xchg
jmp
sub
jle
add
add
mov
jns
lret
sub
jns
sub
add
dec
testb
add
add
add
add
mov
in
mov
xchg
add
stos
cmp
adc
stos
pop
xchg
add
push
les
sbb
daa
roll
mov
rcrl
add
rolb
lds
fucomi
xchg
add
ret
movsb
add
add
mov
sbb
stc
popa
xor
clc
xchg
sbb
cs
cmp
or
test
jl
fmull
ds
ljmp
lea
mov
add
jmp
mov
mov
mov
add
mov
add
add
leave
cmp
add
mov
adc
sbb
dec
sbb
sub
push
lods
adc
add
add
pop
test
mov
data16
jmp
and
outsl
xor
inc
add
sbb
jbe
mov
add
add
inc
add
inc
jno
xor
add
cmpsb
add
add
ffreep
mov
jp
mov
jl
jbe
inc
add
add
xor
pop
in
jae
push
or
add
data16
add
bound
mov
movsl
stos
mov
lahf
jne
cwtl
push
or
mov
add
dec
sub
insl
jl
xor
xor
daa
iret
add
int3
inc
dec
bound
mov
mov
add
xchg
add
add
add
or
jl
call
push
push
xor
in
jnp
add
dec
xor
or
xchg
add
add
xchg
dec
add
lfs
jne
push
rolb
cmc
pop
mov
in
and
in
pop
dec
leave
test
add
fldln2
mov
adc
jne
jecxz
test
mov
and
cmp
jae
add
sbb
jne
movsl
sbb
add
mov
add
pushf
clc
aas
mov
lods
add
pop
add
outsl
dec
mov
add
add
add
movl
lret
int3
mov
inc
mov
xchg
add
or
repnz
jno
in
xor
xor
mov
pop
cmovg
add
add
mov
jmp
pop
stos
pop
add
adc
add
add
add
scas
jbe
int
aas
and
add
add
rorl
test
jno
cmp
add
dec
cmpsl
in
mov
or
pop
movsl
outsb
pop
stc
mov
mov
mov
enter
testb
mov
je
jle
out
lods
nop
add
add
push
sub
xor
cmp
sub
add
pop
inc
add
xchg
add
je
push
add
dec
outsl
cmp
js
xor
mov
adc
outsl
xor
ljmp
mov
js
add
xchg
xchg
addr16
add
sti
ret
das
xchg
dec
lea
add
push
add
fiaddl
in
ds
inc
mov
lcall
fdivs
add
jae
ja
cmp
dec
push
cli
jo
sahf
xor
popf
pop
add
lret
jmp
mov
adc
repnz
add
dec
lcall
fisubs
add
mov
aad
cwtl
shll
mov
in
add
push
add
cli
imul
arpl
add
lret
stos
mov
or
int3
pop
out
leave
leave
in
add
add
mov
inc
add
popa
jg
add
jbe
dec
mov
and
jns
xor
lds
pop
sbb
out
inc
sbb
jno
jbe
loope
loopne
into
sbb
pop
pusha
add
aad
test
jle
fisubrl
rcr
mov
add
mov
dec
push
add
mov
into
test
cmp
add
cli
jae
add
push
cmp
repz
sub
add
gs
lret
add
nop
add
dec
xchg
scas
in
push
add
sub
dec
cltd
mov
add
inc
add
add
dec
fadds
addr16
mov
pop
or
add
pop
push
add
fs
xlat
lds
call
add
add
fidivs
and
add
mov
inc
add
add
add
add
jmp
cmp
add
test
add
dec
adc
test
sub
sub
sbb
shll
popa
inc
add
sub
outsl
add
mov
cwtl
fistpll
icebp
ljmp
add
jecxz
leave
mov
add
jle
dec
mov
movsl
cltd
popa
mov
jae
add
cltd
inc
mov
add
ret
add
mov
mov
push
pop
test
dec
insb
bound
mov
mov
push
jp
add
repnz
add
mov
rolb
outsl
fcmovu
mov
and
add
lds
add
cmpl
mov
jmp
test
add
push
inc
stc
adc
pop
hlt
add
dec
inc
add
loopne
aaa
in
sbb
sub
push
xchg
imul
inc
add
add
into
out
mov
addb
fists
add
mov
add
outsl
adc
push
aad
loope
add
and
sbb
add
das
imul
sub
xor
add
addb
sbb
sbb
add
and
mov
aam
cmp
add
add
rolb
or
add
xchg
data16
mov
add
movsl
jecxz
add
add
add
mov
add
mov
int
add
mov
sub
addr16
ret
add
dec
push
lcall
das
xor
lea
add
mov
push
add
push
in
pop
rolb
les
push
lock
pop
addr16
je
xor
xchg
add
push
add
add
fstps
add
jecxz
add
cmp
jl
inc
dec
aad
add
lcall
cmpsb
add
sbb
in
ja
movsl
xchg
dec
xchg
and
movb
sub
je
sbb
dec
mov
mov
add
add
sub
push
add
add
add
in
mov
popa
in
xor
mov
js
jbe
cmp
mov
dec
rolb
add
add
dec
nop
add
push
shll
add
add
pusha
add
jno
out
add
mov
add
lret
xlat
movsb
add
add
lret
cmp
add
add
pop
cmp
jo
movsb
add
stos
fucomp
xor
add
xor
in
js
cmpsl
inc
add
mov
add
cli
inc
stos
jns
inc
mov
add
out
xchg
pop
fldenv
sahf
mov
add
jl,pt
testb
jmp
pop
lea
jmp
xor
ret
loop
into
mov
fisubrs
cltd
jmp
ret
jbe
stc
mov
mov
lds
push
cmc
xchg
add
imul
mov
jno
rolb
cmpsl
pop
adc
jp
add
add
mov
add
mov
mov
test
imul
add
mov
in
xchg
add
add
enter
mov
add
add
js
pop
insl
and
mov
loop
nop
add
sbb
xchg
add
push
push
add
mov
add
sub
add
pop
mov
or
std
sub
lcall
je
sbb
add
pop
mov
jo
nop
add
loope
add
dec
stc
xchg
add
add
jmp
xor
rcll
add
add
hlt
add
cltd
add
mov
mov
add
lock
pop
jle
imull
add
mov
xor
out
lods
add
pop
ret
push
call
sti
popf
jp
push
add
add
add
lods
ficomps
aam
imul
add
jb
adc
add
pop
ljmp
push
and
mov
mov
add
mov
push
xor
outsl
lcall
outsb
inc
xchg
mov
adc
pop
testb
push
or
inc
add
add
jecxz
add
cmp
add
dec
xchg
cs
sub
jle
or
sahf
mov
xlat
dec
js
shrl
hlt
add
add
loopne
into
cltd
mov
leave
push
add
fwait
cmp
pop
mov
add
add
mov
jno
add
bound
mov
adcl
jmp
sbb
add
mov
push
mov
in
sahf
outsl
in
bswap
cmp
add
mov
lret
jne
add
add
jns
test
jae
out
sarl
cmp
stos
repz
mov
neg
rolb
xchg
xchg
add
add
dec
xchg
add
xchg
aaa
rolb
test
add
mov
and
cli
inc
add
mov
cmp
or
movb
add
inc
add
add
xchg
add
dec
test
daa
sbb
pop
movsb
add
mov
mov
int3
scas
push
aas
pop
add
xchg
add
out
inc
add
lret
addb
pop
adc
out
ja
add
push
adc
mov
movsb
add
add
add
jmp
adc
inc
add
frstor
add
in
add
add
mov
add
add
xor
sar
inc
je
arpl
inc
add
add
mov
add
scas
xchg
add
xor
xchg
add
add
out
mov
fisttpl
incl
add
inc
mov
sub
jno
add
loope
jp
dec
push
lds
addb
inc
add
add
test
fistpl
xchg
add
adc
push
jns
in
mov
jne
loop
mov
arpl
addr16
lcall
fisubl
mov
add
pop
subl
adc
jo
insl
adc
mov
dec
pop
jb
push
add
add
repnz
xchg
dec
movb
fldt
mov
leave
push
add
push
add
lret
mov
lea
add
cmp
fists
outsl
cltd
add
push
add
mov
add
push
add
add
mov
add
mov
xchg
mov
clc
data16
add
les
jo
mov
or
add
add
cmp
add
push
jns
add
add
mov
rolb
pop
mov
stos
add
add
lcall
or
add
jmp
jecxz
push
dec
scas
mov
pop
or
inc
add
pop
mov
add
jo
sti
negl
xor
add
pop
adc
xchg
add
add
dec
mov
add
add
add
or
xlat
add
mov
cmpsl
cltd
mov
mov
adc
mov
rolb
sbb
push
iret
out
mov
add
mov
add
inc
add
dec
fmul
lahf
push
xchg
movsl
jne
fcom
add
add
sbb
add
call
je
xchg
cmp
add
sub
das
or
enter
int
sahf
jo
nop
add
int
mov
add
inc
add
mov
mov
push
jmp
add
fisubl
add
sbb
add
loop
or
cmp
add
aad
xor
mov
add
add
or
add
pushf
imul
add
push
addr16
aam
push
add
cld
lock
add
pop
clc
push
inc
add
add
sbb
xor
push
add
dec
loop
in
jns
add
add
add
add
sub
loop
mov
addb
add
mov
imul
inc
daa
pop
rolb
mov
add
add
sbb
xor
xchg
add
icebp
jecxz
add
outsb
repnz
sbb
mov
push
add
add
stc
xor
push
add
cmp
lds
xchg
mov
mov
inc
add
movsl
sub
add
mov
mov
rolb
mov
mov
add
or
cmp
fwait
mov
shll
add
outsb
pop
repnz
jl
add
cltd
test
cmp
leave
adc
mov
pop
push
add
add
nop
add
add
inc
push
add
add
cmp
aaa
enter
add
cmp
es
test
mov
cmc
inc
add
rolb
cli
jo
sub
add
add
add
jo
into
fadds
add
lret
cmp
mov
addl
mov
xchg
and
inc
add
add
cmpsl
or
rolb
or
add
push
imul
mov
inc
gs
sti
sahf
iret
mov
add
dec
pop
adc
inc
add
in
sbb
add
add
pop
add
adc
pop
leave
iret
ja
dec
flds
mov
fdivs
add
cmp
insl
cld
je
push
add
adc
aas
fisubl
jne
add
push
rolb
fsubrl
add
int3
xchg
add
add
add
and
mov
add
mov
mov
xchg
xchg
add
mov
je
leave
sub
nop
add
xchg
faddl
add
inc
xor
cmc
lea
les
fmuls
loopne
mov
pop
jg
js
fwait
shll
fnstcw
push
add
add
out
mov
xchg
add
push
mov
incl
add
lods
xchg
add
jmp
out
sbb
add
loope
pop
adc
push
imul
mov
adc
add
flds
cwtl
or
mov
testb
xor
hlt
add
add
ja
dec
xchg
rcr
and
cli
sub
add
pop
push
add
xor
mov
mov
fbld
cmp
addl
xchg
je
cmc
je
xchg
mov
add
cmp
and
and
rolb
xor
or
mov
xchg
add
jmp
cld
adc
call
sub
lods
inc
add
je
mov
stos
hlt
add
rolb
outsb
lahf
fwait
jl
add
add
xchg
xchg
fidivrl
sub
inc
add
mov
mov
repz
add
sub
dec
lock
std
dec
outsb
popl
jbe
pushf
mov
sbb
or
add
cmp
pop
xor
rcll
pushf
pushf
arpl
aad
data16
mov
pop
icebp
mov
push
fnstenv
outsb
sbb
aas
popf
adc
add
add
addb
ljmp
dec
in
rolb
add
push
add
add
imul
xchg
or
in
mov
add
add
jg
adcl
push
add
add
add
xchg
push
divl
add
xchg
add
and
mov
adc
iret
addb
add
mov
add
daa
xchg
daa
loopne
mov
add
jbe
and
mov
mov
add
loope
adc
pop
pop
pop
loope
add
cs
add
mov
ficompl
mov
dec
movzbl
mov
push
add
xor
jnp
add
int3
jo
adc
into
aas
pop
inc
add
add
lods
jge
lahf
das
or
adc
fadd
test
add
out
ror
mov
jne
loope
add
inc
add
nop
add
arpl
lock
add
sub
ljmp
insl
inc
add
push
add
fdivr
add
add
xor
bound
mov
add
xor
xorl
roll
in
push
jb
dec
cmp
sub
jge
mov
dec
dec
clc
jmp
xor
push
add
jno
enter
add
add
out
icebp
mov
mov
sub
rcrl
mov
sub
and
mov
addb
add
jp
out
adc
mov
adc
add
loop
lds
add
dec
sub
jle
bound
mov
je
dec
scas
push
add
cmpsb
add
movsl
enter
insb
add
add
add
and
mov
aad
adc
mov
mov
add
sub
add
mov
add
add
out
daa
xchg
add
xor
sbb
aad
add
xor
inc
lea
add
movsl
dec
add
add
fidivl
add
add
into
outsb
shll
aas
addb
add
jnp
push
add
cld
shll
add
xor
jle
pop
sbb
inc
sub
gs
sahf
pushf
sub
sbb
mov
sar
inc
add
rolb
outsb
rolb
dec
xchg
nop
add
fstl
mov
mov
add
aad
add
inc
pusha
add
aam
inc
stos
jo
inc
add
add
dec
fwait
cmp
or
jae
mov
add
lea
repnz
mov
out
sbb
add
fistps
lds
and
mov
movsl
mov
sbb
push
add
clc
jae
sbb
add
lds
push
mov
addb
add
stc
lock
mov
add
mov
insl
adc
cmp
pop
jecxz
xor
add
add
add
inc
cmp
sbb
add
ret
push
add
sbb
fstps
scas
bound
mov
adc
rolb
subl
add
sub
add
ret
add
cld
in
cmp
add
add
add
jbe
shll
add
jo
lds
cli
aas
mov
mov
add
and
mov
add
or
or
mov
dec
jo
dec
fcompl
xor
mov
mov
mov
inc
insl
lcall
cmpsl
xchg
add
push
add
xlat
jns
add
add
add
testb
xor
fistps
cmpsl
push
pop
mov
add
pop
fwait
out
dec
sbb
xor
or
jns
jge
add
xchg
push
pop
addb
push
scas
in
sti
mov
rcr
xor
test
push
add
add
test
mov
inc
adc
pop
pop
inc
fmuls
pop
xlat
adc
add
add
add
lret
push
add
movb
or
push
add
and
pusha
add
fcoms
mov
pushf
test
mov
mov
add
dec
cmp
add
shrl
wrmsr
add
into
data16
mov
cmc
xlat
mov
mov
add
mov
addr16
insl
scas
pusha
add
sub
lods
xor
add
movb
mov
mov
mov
in
pop
fnsave
mov
scas
ss
xchg
mov
dec
jecxz
add
imul
jno
mov
loope
xchg
out
lods
testb
out
sbb
shll
aas
insb
add
mov
mov
push
add
mov
call
adc
fbstp
jnp
icebp
jmp
repnz
or
push
pusha
add
or
addr16
add
daa
test
mov
or
pushf
pusha
add
sar
add
imul
cld
adc
addb
cld
xchg
push
add
pushf
lea
xor
jge
clc
test
aam
aad
push
jne
in
paddb
hlt
add
cmp
movl
add
dec
push
add
mov
movb
add
jo
push
lods
lcall
add
add
outsb
ret
mov
roll
add
jmp
mov
sbb
test
add
push
lret
add
add
pop
arpl
icebp
loope
addb
add
mov
or
or
lods
xchg
xor
scas
das
add
mov
sti
add
push
add
xchg
mov
fsub
push
scas
and
mov
fdivrl
cs
outsl
fdivrl
lods
dec
cmp
lahf
sbb
add
add
xlat
or
popa
cltd
push
add
mov
jge
leave
call
xchg
loope
cmp
ret
sbb
mov
dec
pop
int
test
mov
sub
scas
adcl
lcall
mov
add
sbb
add
out
mov
fmull
dec
add
mov
jg
loopne
mov
sbb
pop
inc
add
add
gs
xchg
mov
pop
popa
addb
imul
xchg
add
mov
insl
and
lahf
adc
ds
inc
popf
sahf
cmp
js
and
mov
arpl
pop
jne
add
leave
push
pop
std
js
das
pop
cld
mov
fwait
stos
adc
cmp
lock
add
add
add
sbb
add
mov
mov
mov
movsb
add
popf
xchg
dec
loopne
mov
dec
dec
push
rolb
int3
rolb
pop
lret
adc
pop
xchg
dec
sti
outsl
testb
ds
jb
inc
outsb
dec
rcrl
insl
push
sub
xchg
mov
add
add
into
jmp
mov
jmp
pop
dec
push
rolb
xor
inc
out
int3
inc
push
add
or
dec
out
add
or
mov
inc
add
add
fildl
sbb
xchg
add
data16
sti
pop
aam
mov
or
xchg
sub
pop
out
sahf
mov
cmp
jb
insb
xor
add
leave
jl
dec
in
cmp
adc
addb
add
add
addb
add
test
in
xchg
ret
lret
mov
add
cmp
dec
and
mov
enter
xlat
into
dec
movb
add
inc
add
adc
scas
dec
pop
fld
add
cmpsl
push
jo
hlt
add
sbb
cmpl
pop
dec
inc
add
jg
mov
mov
add
push
add
add
dec
in
mov
add
aaa
jecxz
dec
loop
pop
pushf
lahf
int3
mov
fnstenv
cli
cld
xchg
rep
loop
xchg
add
add
push
ja
cmp
mov
in
ffree
add
add
push
add
js
movl
les
jns
add
add
std
int3
rolb
dec
sub
lods
add
mov
add
clc
call
clc
repnz
add
lods
inc
add
aad
sbb
add
add
insl
push
fdivrs
add
xchg
xorl
insb
cmp
add
test
add
mov
sbb
repz
cli
xchg
jecxz
lcall
adc
sub
pop
xlat
sbb
add
jo
lret
add
add
mov
xor
pop
dec
pop
xchg
add
sarl
add
insb
icebp
sbb
add
mov
add
mov
jge
add
int3
enter
add
add
add
cmp
mov
add
jmp
add
cmp
movsl
bound
mov
xor
mov
scas
jge
scas
xor
hlt
add
rolb
stos
sar
mov
add
and
mov
cmp
mov
repz
push
add
mov
cmp
cltd
or
dec
sub
pushf
jge
in
out
cmp
add
mov
les
sub
add
add
add
out
cltd
jbe
push
add
push
fsubs
popa
or
ret
add
mov
add
sub
add
stc
add
add
pop
jg
add
nop
add
aam
testb
adc
test
andl
fdivrs
jp
mov
rolb
stc
aas
jp
mov
ret
mov
fsubl
fisubrl
xlat
and
mov
loopne
leave
lea
addb
pop
imul
add
xor
loopne
push
das
je
cmp
out
rolb
pop
push
add
add
rolb
pusha
add
add
test
sbb
push
xchg
shrl
add
inc
stos
or
add
add
in
pop
xchg
xchg
sub
or
add
ret
mov
add
enter
push
add
jns
movsl
lret
ljmp
add
jp
dec
push
xor
add
and
mov
cmp
add
pop
inc
cmpsb
add
push
add
movb
add
bound
mov
add
add
xchg
lds
jecxz
hlt
add
cmpl
inc
mov
xchg
pop
mov
xor
das
xchg
add
add
fmuls
scas
pop
stos
repz
add
mov
jp
movsl
lret
lods
aad
mov
insb
add
add
sub
lods
push
add
out
int3
or
jecxz
in
clc
sub
int
out
adc
shl
add
mov
cmp
subl
enter
push
xchg
stos
xor
and
ljmp
jecxz
or
rolb
out
dec
clc
movsb
add
jp
sti
mov
or
in
jnp
icebp
arpl
inc
add
add
add
add
adc
mov
mov
scas
popf
loope
enter
cli
pop
gs
pop
jmp
mov
add
lcall
mov
cs
lds
test
loope
icebp
and
add
inc
add
stc
adc
dec
or
stos
add
add
lods
loop
push
add
mov
loopne
and
mov
cmp
jne
add
fs
das
mov
fadd
and
mov
add
sarl
push
mov
push
cmp
add
and
mov
add
add
add
or
inc
lcall
pop
aad
add
adc
imul
loop
push
add
push
adc
inc
jo
jl
aad
lret
add
add
mov
mov
and
sbb
push
add
fbstp
add
add
cmp
dec
scas
and
mov
xor
aam
loopne
js
test
dec
ljmp
add
mov
pop
cltd
sub
add
add
repz
out
push
aad
add
stos
or
xchg
add
ljmp
jl
adc
mov
repnz
ja
mov
cld
popa
jo
add
add
outsl
stos
mov
and
mov
sub
jb
js
insb
loop
add
mov
mov
push
fwait
mov
loope
out
outsb
jle
imul
lahf
add
ficoms
add
cmp
xchg
add
test
push
add
add
nop
add
inc
add
add
add
arpl
add
push
sub
stc
xchg
mov
pshufw
hlt
add
push
add
test
addr16
dec
xchg
add
add
xchg
dec
adc
dec
aam
or
xchg
add
jo
fstpl
sub
in
and
push
sub
add
or
add
ret
popa
aaa
test
movsl
adc
test
xor
in
lds
fisttpl
cli
addr16
add
inc
add
cmpl
dec
add
mov
sbb
add
pushf
xchg
add
arpl
inc
add
mov
add
add
add
add
cmp
pop
les
push
add
mov
and
dec
xor
aam
xchg
add
ficoms
add
lahf
sti
sti
ja
and
mov
add
rolb
add
js
add
addr16
add
add
and
pop
jge
add
in
outsl
dec
sub
sub
push
add
add
add
loope
repnz
stos
movsl
gs
test
mov
push
add
xor
or
insl
cmp
add
add
cmp
cld
aam
jp
test
ljmp
mov
and
scas
cld
inc
sarl
imul
mov
stc
imul
iret
xchg
pop
arpl
dec
add
mov
pop
push
add
add
mov
add
add
add
fnsave
add
xchg
add
mov
mov
xor
loop
mov
adc
sysexit
mov
and
push
cmp
cmc
cmc
lods
adcl
add
ret
push
add
bound
mov
push
sti
jge
fisttps
mov
inc
addb
fldt
sbb
aam
push
mov
mov
inc
sub
leave
insl
lods
aas
cmpsl
stos
int3
and
cld
mov
mov
and
push
and
mov
xchg
add
std
out
add
fstpl
imul
inc
dec
cltd
ss
fdivs
cs
sub
lods
cltd
cmp
mov
in
addb
pusha
add
pop
and
icebp
stos
mov
add
lods
call
popf
or
add
test
mov
sbb
add
popa
push
add
fdivr
pop
jne
jnp
std
cli
xchg
add
rol
jnp
hlt
add
rolb
mov
add
rorl
sbb
add
mov
iret
inc
add
bound
mov
pop
fimull
add
xlat
repz
push
jae
enter
jl
add
ds
cvtps2pd
cmp
or
add
add
mov
add
into
jecxz
add
add
lret
add
out
repz
add
loop
movsl
jp
ss
cmc
lret
cmp
and
adc
or
inc
add
add
cmp
out
insb
xchg
add
and
mov
fucomp
nop
add
and
lock
push
add
and
xchg
add
add
test
inc
out
into
lret
data16
arpl
popf
int
jg
mov
add
add
pushf
aaa
shr
ret
mov
add
pop
jmp
ret
xor
dec
popf
loopne
mov
shrl
scas
sbb
inc
push
dec
adc
testb
sti
cmp
arpl
pop
into
inc
jno
jl
subl
out
xor
cld
xchg
jae
jb
loop
and
mov
xchg
add
adc
inc
add
sub
add
ja
sbb
bound
mov
mov
loop
mov
outsl
cmp
or
inc
add
fidivs
add
push
add
add
sbb
add
mov
jo
cltd
jb
in
xchg
jns
arpl
add
sbb
jbe
mov
pop
push
cs
shll
in
sbb
lret
hlt
add
stos
xchg
add
decb
cmp
dec
jae
test
add
add
add
mov
jecxz
add
std
int3
cmp
pop
sbb
sbb
add
mov
pop
and
and
add
pushf
xor
add
jg
add
clc
dec
mov
cmp
mov
cmp
add
add
lods
inc
xor
imul
cld
fsub
add
jne
in
add
into
cmp
mov
push
movsb
add
add
push
into
test
sbb
pushf
and
fildl
add
sbb
adc
pop
mov
and
mov
mov
jns
les
into
shr
mov
add
or
and
mov
or
lahf
cmp
add
sub
lock
imul
add
aam
sub
add
data16
rcrl
roll
add
add
pop
xchg
add
lods
lahf
insl
xchg
add
add
scas
sub
arpl
out
out
out
andl
and
add
mov
add
add
add
adc
iret
xchg
add
fistps
add
add
ret
in
cs
fcoms
cmp
cmp
sbb
popa
daa
or
or
push
cltd
or
in
jbe
leave
adc
add
mov
fistpll
push
sub
iret
push
inc
adc
imul
mov
add
mov
add
sbb
add
aas
pop
pop
mov
bound
mov
lds
fldl
mov
mov
out
and
mov
cmp
mov
push
out
mov
aas
push
loopne
rolb
push
xor
jae
fcmovb
mov
add
leave
fidivrs
outsl
lea
mov
add
or
push
add
push
add
sahf
pop
lcall
int
add
push
add
addb
mov
mov
mov
imul
jp
xchg
xchg
cmpsl
ss
sub
stos
decb
add
ret
adc
jae
or
sub
jo
mov
add
add
mov
pop
pop
push
loop
pop
inc
into
add
mov
ja
clc
pop
pop
xchg
or
popa
aaa
push
add
add
fs
daa
adc
test
js
add
add
add
lds
add
dec
push
cwtl
and
mov
dec
lret
dec
xor
pop
fsubrl
inc
in
or
add
add
push
add
add
test
add
mov
add
repz
add
mov
pop
xchg
add
roll
add
mov
jl
gs
xchg
add
js
ljmp
add
mov
clc
repnz
jae
dec
add
and
mov
outsl
loopne
repnz
jae
add
mov
pop
push
mov
xchg
ret
add
add
add
mov
clc
repnz
jae
adc
fadds
sub
pop
pushf
mov
clc
repnz
jae
add
or
jae
add
or
jmp
push
mov
add
add
mov
scas
add
mov
add
clc
repnz
jae
or
mov
adc
repnz
jae
add
add
mov
mov
xchg
ret
add
add
addb
add
movsb
add
flds
dec
cmp
repnz
jae
aad
out
cltd
add
nop
jae
add
fsubs
add
add
clc
repnz
jae
mov
je
push
push
mov
add
add
rcrb
adc
add
adc
jno
add
lods
cmc
inc
add
and
xor
pop
push
clc
repnz
jae
add
add
xchg
add
mov
clc
repnz
jae
pop
add
add
mov
xchg
ret
xor
and
add
push
clc
repnz
jae
hlt
shlb
in
jl
clc
repnz
jae
add
mov
clc
repnz
jae
aad
push
xchg
add
push
clc
repnz
jae
iret
add
fcoml
cld
nop
jmp
fldt
fs
jne
clc
repnz
jae
pop
test
push
inc
add
fwait
cld
nop
jmp
jmp
out
insb
movzwl
clc
repnz
jae
fwait
add
jl
add
repnz
jae
cwtl
sub
dec
add
add
insb
inc
jb
clc
repnz
jae
push
iret
add
imul
nop
jae
add
mov
push
mov
xchg
ret
add
add
mov
clc
repnz
jae
add
add
add
sbb
add
test
add
jnp
mov
push
mov
xchg
ret
add
add
xor
xchg
add
nop
jae
mov
xorb
add
xchg
clc
repnz
jae
add
add
add
push
clc
repnz
jae
aas
aas
cltd
inc
lods
add
add
add
xor
repnz
jae
add
add
add
sub
add
fwait
cld
nop
jmp
dec
jge
lods
add
xor
fwait
cld
nop
jmp
add
add
mov
push
push
mov
xchg
ret
add
es
add
add
mov
test
inc
add
xorl
add
or
repnz
jae
add
jbe
and
dec
je
clc
repnz
jae
add
sub
popa
add
mov
xchg
ret
roll
add
add
add
jae
jge
add
dec
dec
push
roll
test
fwait
cld
nop
jmp
add
mov
dec
xor
clc
repnz
jae
jle
add
jle
cltd
or
mov
xchg
ret
cmpl
addb
pop
jmp
add
dec
add
jbe
fadds
out
mov
push
add
jns
clc
repnz
jae
add
add
push
add
sbb
clc
repnz
jae
add
addb
add
cwtl
mov
clc
repnz
jae
add
add
xor
add
clc
repnz
jae
pop
add
add
cmp
repnz
jae
jns
add
or
mov
push
mov
xchg
ret
jbe
sbb
jnp
add
add
add
repnz
jae
and
adc
mov
dec
push
clc
repnz
jae
dec
add
inc
add
add
pop
clc
repnz
jae
add
add
fadds
add
pop
pop
fwait
cld
nop
jmp
cmp
fs
add
add
insb
lods
push
mov
xchg
ret
add
add
and
clc
repnz
jae
shlb
add
push
fwait
cld
nop
jmp
add
jnp
add
pop
jg
inc
sbb
add
jbe
pop
sub
mov
in
push
push
mov
xchg
ret
add
add
loope
pop
fwait
cld
nop
jmp
add
add
add
fldl
xchg
ret
hlt
sbb
xor
add
add
fwait
cld
nop
jmp
add
add
add
add
repnz
jae
jge
add
mov
push
mov
xchg
ret
add
dec
lods
hlt
xor
or
push
mov
xchg
ret
add
rolb
jnp
mov
nop
jmp
test
add
pop
clc
repnz
jae
add
add
add
clc
repnz
jae
cmp
out
fildl
fwait
dec
xor
idiv
repnz
jae
add
add
out
out
dec
das
dec
fwait
cld
nop
jmp
add
iret
cmp
add
add
mov
jae
ror
add
jge
add
mov
sub
nop
jmp
movsl
add
add
add
add
add
add
jmp
test
repnz
jae
out
cmp
pusha
add
fwait
cld
nop
jmp
add
movsl
push
repnz
jae
test
add
add
loope
push
mov
add
cwtl
das
jge
add
xchg
jle
rcrb
cld
nop
jmp
cmp
movsl
addb
add
jae
add
inc
add
add
adc
cld
clc
repnz
jae
add
add
push
dec
add
add
mov
nop
jae
add
add
add
adc
push
pop
movsb
add
add
push
mov
xchg
ret
add
or
fdiv
iret
add
clc
repnz
jae
sbb
add
je
fwait
cld
nop
jmp
push
test
push
cmp
test
add
clc
repnz
jae
add
add
mov
clc
repnz
jae
jle
add
loop
jl
jne
clc
repnz
jae
push
sub
push
clc
repnz
jae
add
add
add
cld
add
clc
repnz
jae
inc
fisttpl
sub
or
clc
repnz
jae
add
add
nop
jae
lods
add
add
add
add
fwait
cld
nop
jmp
iret
add
add
add
add
mov
push
mov
xchg
ret
push
add
inc
in
push
mov
xchg
ret
cwtl
out
fdivrs
in
popa
jmp
dec
adc
repnz
jae
add
add
jbe
in
and
clc
repnz
jae
shll
add
cmpl
fwait
cld
nop
jmp
xor
add
mov
clc
repnz
jae
dec
mov
xchg
test
sldt
clc
repnz
jae
out
orl
clc
repnz
jae
aas
push
mov
and
mov
add
clc
repnz
jae
cmp
out
jle
int
repz
cld
nop
jmp
add
add
movsl
add
add
mov
clc
repnz
jae
add
mov
imul
xchg
ret
fisttpl
rorl
repnz
jae
hlt
roll
add
add
add
sub
clc
repnz
jae
adc
add
sub
clc
repnz
jae
rorb
adc
rolb
add
clc
repnz
jae
out
add
aas
add
xor
leave
icebp
inc
add
fwait
add
mov
ja
fs
repnz
jae
add
mov
add
repnz
jae
rol
subl
fisttps
repnz
jae
add
push
add
movsb
add
push
mov
xchg
ret
mov
out
ret
mov
clc
repnz
jae
add
fwait
add
sbbb
icebp
roll
xchg
ret
add
add
add
add
mov
clc
repnz
jae
add
add
adc
add
mov
mov
xchg
ret
xor
mov
sbb
repnz
jae
out
inc
jle
add
add
push
mov
clc
repnz
jae
inc
sbb
sti
fwait
cld
nop
jmp
ja
es
add
out
add
loope
add
dec
mov
push
mov
xchg
ret
xor
les
push
clc
repnz
jae
jnp
add
stos
shl
fwait
cld
nop
jmp
add
aad
add
cmp
repnz
jae
out
add
add
cltd
mov
mov
push
mov
xchg
ret
pop
push
sbb
mov
mov
nop
jae
les
jne
clc
repnz
jae
add
add
jge
clc
repnz
jae
add
out
fildl
imul
clc
repnz
jae
cmp
stc
mov
push
mov
xchg
ret
sbbb
arpl
add
add
add
clc
repnz
jae
xor
add
clc
repnz
jae
dec
add
add
add
pop
push
mov
xchg
ret
and
aas
add
add
add
fwait
cld
nop
jmp
jnp
sub
fwait
cld
nop
jmp
add
add
inc
xlat
xchg
add
push
clc
repnz
jae
addl
orl
add
jae
fildl
les
rorl
sub
add
leave
pop
clc
repnz
jae
aaa
add
pop
xchg
les
dec
mov
push
mov
xchg
ret
add
add
ficoml
cld
nop
jmp
add
add
add
push
clc
repnz
jae
add
sbb
add
push
clc
repnz
jae
ja
dec
mov
in
popa
sbb
nop
jae
jge
cltd
add
in
xor
push
mov
xchg
ret
add
fwait
cwtl
cmp
mov
add
repnz
jae
out
fs
popa
aad
add
push
mov
xchg
ret
fildl
add
add
jns
mov
fwait
cld
nop
jmp
cmp
andl
cwtl
push
clc
repnz
jae
mov
or
lahf
mov
fwait
cld
nop
jmp
adc
mov
add
mov
nop
jae
add
push
ja
xor
add
jae
add
cmp
xchg
sbb
jmp
add
mov
bound
mov
ret
push
mov
xchg
ret
cmp
add
add
cld
nop
jmp
sbb
and
add
fs
add
sub
fstpt
mov
pop
add
testb
add
clc
repnz
jae
add
add
sahf
add
push
mov
xchg
ret
add
add
fisttpl
cld
nop
jmp
add
and
adc
jnp
fwait
xor
push
mov
xchg
ret
dec
add
add
or
fwait
cld
nop
jmp
out
add
pop
cmp
jae
add
add
mov
clc
repnz
jae
add
jge
jge
fstpt
mov
xchg
ret
hlt
test
xor
test
loopne
clc
repnz
jae
pop
sbb
dec
add
fwait
cld
nop
jmp
rolb
add
add
add
fwait
cld
nop
jmp
adc
add
cltd
addb
jnp
add
rolb
call
clc
repnz
jae
add
dec
hlt
pop
incl
rcl
add
add
clc
push
mov
xchg
ret
add
add
jge
mov
push
mov
xchg
ret
mov
mov
mov
xchg
ret
add
add
add
out
mov
clc
repnz
jae
add
mov
clc
repnz
jae
add
movsl
add
test
inc
add
cmp
add
add
mov
pop
pusha
push
mov
xchg
ret
add
fstpt
add
inc
testb
add
add
jae
add
add
add
test
push
add
add
add
dec
cld
incl
add
lods
adc
out
lea
fwait
cld
nop
jmp
out
add
xor
add
add
repnz
jae
fdivrs
adc
add
fwait
cld
nop
jmp
add
cmp
cltd
jmp
add
add
add
popl
clc
repnz
jae
sub
inc
jbe
add
repnz
jae
add
add
push
movsl
addr16
and
clc
repnz
jae
add
xchg
subl
clc
repnz
jae
mov
add
inc
orl
clc
repnz
jae
dec
cmp
into
test
fwait
cld
nop
jmp
mov
hlt
add
add
stc
inc
add
pop
mov
roll
push
clc
xorl
clc
repnz
jae
add
lret
add
les
movsb
add
mov
fwait
cld
nop
jmp
fcoms
dec
dec
cmp
add
add
add
nop
jae
dec
jle
add
add
repnz
jae
add
add
hlt
add
add
mov
clc
repnz
jae
add
add
cmp
or
clc
repnz
jae
add
aaa
dec
add
mov
add
mov
add
clc
repnz
jae
add
inc
fdiv
add
add
sub
repnz
jae
jmp
les
mov
add
fwait
cld
nop
jmp
sub
add
add
call
clc
repnz
jae
add
add
pop
inc
call
repnz
jae
add
ja
adc
add
pop
clc
repnz
jae
jmp
add
add
pop
clc
repnz
jae
add
xor
add
aaa
call
repnz
jae
out
add
aas
add
cmp
insl
filds
xchg
ret
add
mov
push
mov
xchg
ret
jbe
dec
movsl
fsubs
add
push
mov
xchg
ret
mov
adc
sbb
jae
add
out
dec
fadds
inc
lsl
fwait
cld
nop
jmp
ja
sub
les
add
sub
testb
cmp
ret
dec
pop
mov
or
mov
clc
repnz
jae
add
add
add
mov
clc
repnz
jae
fcoms
pop
mov
clc
repnz
jae
add
pop
cli
push
clc
repnz
jae
add
add
mov
nop
jae
add
fadds
add
push
clc
repnz
jae
add
add
pushf
je
clc
repnz
jae
aad
mov
pop
add
add
repnz
jae
jle
mov
push
sub
clc
repnz
jae
dec
iret
xor
mov
sub
clc
repnz
jae
add
add
add
les
cli
cmp
push
mov
xchg
ret
mov
lods
mov
clc
repnz
jae
cmpl
add
jne
clc
repnz
jae
iret
add
add
inc
outsb
add
clc
repnz
jae
sbb
jmp
add
repnz
jae
shr
dec
push
add
iret
orl
clc
repnz
jae
roll
add
add
add
lods
mov
fwait
cld
nop
jmp
add
dec
aaa
addb
les
add
cmp
repnz
jae
add
addb
add
add
inc
push
mov
xchg
ret
add
add
add
add
mov
fsubl
add
add
lods
push
push
mov
xchg
ret
fmuls
rcll
add
gs
add
push
mov
xchg
ret
aaa
add
sub
in
add
add
clc
repnz
jae
add
xor
repnz
jae
add
fdivrs
add
jns
loop
fwait
cld
nop
jmp
add
add
jmp
xor
push
mov
xchg
ret
aad
add
and
sbb
add
clc
repnz
jae
add
or
add
cmp
and
repnz
jae
pop
inc
add
loop
lret
fimuls
nop
jae
add
add
les
xor
add
fwait
cld
nop
jmp
inc
jnp
add
jae
add
add
sbb
add
add
add
push
fistpl
nop
jmp
addl
sub
add
loope
into
mov
fwait
cld
nop
jmp
adc
add
test
add
clc
repnz
jae
ja
push
dec
rep
clc
repnz
jae
add
add
cld
nop
jmp
add
jmp
and
jl
and
add
iret
add
imul
fwait
cld
nop
jmp
add
cmp
sub
push
fwait
cld
nop
jmp
add
add
add
and
mov
cwtl
mov
fwait
cld
nop
jmp
add
fcoms
cmp
add
add
push
mov
xchg
ret
add
cmp
fwait
jns
mov
clc
repnz
jae
inc
mov
je
clc
repnz
jae
sub
mov
clc
repnz
jae
lods
add
pop
clc
repnz
jae
test
addb
add
jo
ror
clc
repnz
jae
cwtl
add
cmp
add
add
adc
repnz
jae
push
aas
mov
dec
push
mov
xchg
ret
add
mov
les
pop
push
push
mov
xchg
ret
pop
cmp
mov
arpl
clc
repnz
jae
add
les
clc
jmp
clc
repnz
jae
dec
add
inc
mov
cmp
nop
jae
add
add
movb
mov
repz
add
add
mov
sbb
jne
jmp
aas
cmp
add
add
add
add
add
push
mov
xchg
ret
add
test
add
mov
push
push
mov
xchg
ret
add
movsl
jge
inc
fadd
add
jmp
add
push
jle
push
sbb
push
add
xor
subl
clc
repnz
jae
add
add
sti
mov
clc
repnz
jae
add
fsubr
xor
rcrl
clc
repnz
jae
jmp
in
jge
add
clc
repnz
jae
rcrb
pop
push
mov
xchg
ret
add
test
pop
add
add
clc
repnz
jae
sbbb
test
push
mov
xchg
ret
add
add
scas
mov
clc
repnz
jae
add
add
pushl
push
mov
xchg
ret
inc
jle
and
in
mov
add
clc
repnz
jae
jbe
add
clc
repnz
jae
out
add
aad
add
push
add
pop
fwait
cld
nop
jmp
cmp
pop
or
fwait
cmp
add
add
sub
arpl
repnz
jae
add
out
dec
add
add
adc
repnz
jae
add
add
add
imul
xchg
cld
inc
add
add
add
repnz
jae
sbb
hlt
iret
add
iret
popl
repz
repnz
jae
dec
xor
add
clc
repnz
jae
fldt
add
pop
testl
fwait
cld
nop
jmp
add
jbe
out
movzwl
clc
repnz
jae
add
push
add
dec
add
clc
repnz
jae
add
sub
dec
push
mov
add
add
or
scas
dec
in
cmp
add
add
jge
clc
repnz
jae
cmp
or
add
add
hlt
add
ja
xorl
sbb
inc
jp
fwait
cld
nop
jmp
add
add
mov
clc
repnz
jae
aaa
push
adc
rolb
xor
les
add
add
repnz
jae
add
insb
add
clc
repnz
jae
cwtl
fildl
mulps
repnz
jae
cmpl
add
or
inc
add
mov
clc
repnz
jae
cmp
cmpl
fwait
cld
nop
jmp
cwtl
xor
out
jmp
adc
xchg
mov
nop
jmp
out
add
fwait
cmp
add
out
xchg
add
xor
clc
repnz
jae
add
add
mov
fwait
cld
nop
jmp
xor
inc
pop
fisttps
pop
roll
xchg
ret
adc
add
add
repnz
jae
add
mov
clc
repnz
jae
add
mov
push
push
mov
xchg
ret
sbb
test
add
sahf
ret
clc
repnz
jae
add
mov
aad
add
clc
repnz
jae
jns
add
add
mov
div
fwait
cld
nop
jmp
mov
hlt
or
or
jo
fwait
cld
nop
jmp
add
add
add
enter
nop
jmp
add
cmp
iret
out
add
add
test
repz
clc
repnz
jae
inc
cwtl
and
add
mov
push
mov
addr16
push
sub
stc
out
dec
stos
mov
add
add
nop
jmp
rolb
add
es
dec
dec
aad
add
mov
clc
repnz
jae
add
add
mov
clc
repnz
jae
test
add
sti
clc
repnz
jae
ja
out
sub
sbb
and
repnz
jae
dec
jmp
arpl
inc
out
add
cltd
mov
add
push
clc
repnz
jae
add
out
add
add
add
jg
clc
repnz
jae
add
subb
push
mov
xchg
ret
es
and
xor
mov
clc
repnz
jae
mov
roll
push
mov
xchg
ret
add
add
fwait
cld
nop
jmp
add
jns
lods
add
push
adc
and
fwait
cld
nop
jmp
add
ja
dec
jnp
xor
dec
call
clc
repnz
jae
orl
rcll
rolb
clc
repnz
jae
add
dec
sbb
cld
nop
jmp
mov
cwtl
add
dec
icebp
jno
je
clc
repnz
jae
inc
inc
add
pop
cmp
mov
xchg
ret
out
lods
dec
cwtl
jp
push
mov
xchg
ret
or
add
shll
xor
push
push
mov
xchg
ret
add
sbb
push
add
and
clc
repnz
jae
sarl
add
sbbl
repz
mov
xchg
ret
add
dec
add
add
out
clc
repnz
jae
add
out
or
jmp
push
add
or
cmp
xor
lcall
xorl
add
movsl
add
add
add
cmpsl
test
jno
dec
clc
repnz
jae
test
sbb
add
push
push
mov
xchg
ret
add
add
inc
mov
jg
les
mov
xchg
ret
add
sub
add
add
clc
repnz
jae
add
add
add
loop
je
push
dec
fwait
cld
nop
jmp
xor
add
add
mov
xchg
ret
fcmovnb
fadds
add
clc
repnz
jae
add
mov
clc
repnz
jae
add
sub
iret
or
ljmp
add
lea
push
mov
xchg
ret
add
mov
jae
add
repnz
jae
add
add
add
mov
clc
repnz
jae
fcomps
mov
repnz
jae
mov
dec
dec
call
fwait
cld
nop
jmp
add
xor
sub
nop
jae
push
hlt
add
xor
add
test
clc
repnz
jae
out
fcomp
call
clc
repnz
jae
dec
dec
add
pop
xor
clc
repnz
jae
push
add
add
aas
imul
or
add
or
inc
out
add
add
add
mov
adc
clc
repnz
jae
sbb
push
clc
repnz
jae
sbb
xor
es
repnz
jae
jbe
add
mov
xor
call
cld
nop
jmp
add
mov
cmp
bound
mov
push
mov
xchg
ret
add
addb
add
push
add
add
clc
repnz
jae
add
add
sbbl
jae
and
add
cwtl
add
mov
jmp
add
roll
pop
sub
add
repnz
jae
add
out
push
iret
add
cld
nop
jmp
mov
add
cmp
add
jae
add
aas
add
out
or
mov
clc
repnz
jae
movsl
add
mov
add
and
fwait
cld
nop
jmp
add
cwtl
xorl
iret
out
push
fwait
cld
nop
jmp
push
add
mov
pusha
add
mov
clc
repnz
jae
add
int
dec
add
repnz
jae
add
xchg
xchg
clc
repnz
jae
add
add
add
push
fwait
jns
fdivrp
repnz
jae
add
add
or
rclb
mov
inc
add
add
add
popf
fwait
cld
nop
jmp
sbb
add
mov
clc
repnz
jae
fisttpl
add
shll
mov
mov
xchg
ret
fs
push
xor
cmpsl
pop
push
push
mov
xchg
ret
add
add
mov
clc
repnz
jae
inc
add
add
iret
pop
ret
clc
repnz
jae
mov
fildl
jns
jne
clc
repnz
jae
add
jle
add
mov
fwait
cld
nop
jmp
lods
aas
mov
add
clc
repnz
jae
add
cwtl
add
jmp
clc
repnz
jae
add
inc
cmp
add
and
clc
repnz
jae
movsl
es
add
out
mov
fwait
cld
nop
jmp
dec
sub
add
add
dec
cmp
repnz
jae
add
fldt
mov
push
mov
xchg
ret
add
fsub
add
les
fwait
cld
nop
jmp
sbb
test
mov
jno
add
adc
fwait
cld
nop
jmp
mov
mov
loopne
mov
xchg
ret
aas
out
add
add
add
clc
repnz
jae
add
ja
stc
mov
clc
repnz
jae
add
rolb
add
add
pop
cmpw
fwait
cld
nop
jmp
add
out
out
testb
lea
clc
repnz
jae
add
mov
popf
pop
clc
repnz
jae
lods
add
or
add
jns
mov
fwait
cld
nop
jmp
add
add
add
imul
gs
fiaddl
xchg
in
add
nop
jae
add
subb
mov
nop
jae
add
dec
add
add
mov
add
je
add
mov
add
add
inc
sub
push
push
mov
xchg
ret
add
add
xor
mov
add
repz
cld
nop
jmp
add
add
add
jb
pop
pop
push
mov
add
pop
incl
jecxz
add
add
cltd
push
push
mov
xchg
ret
add
out
xor
dec
xor
add
movzwl
clc
repnz
jae
dec
add
aas
pop
clc
repnz
jae
add
add
cwtl
add
jle
add
mov
insb
loopne
add
mov
or
sub
jae
aaa
cmp
jge
add
repnz
jae
out
add
add
sahf
call
clc
repnz
jae
jnp
add
repnz
jae
or
sbb
add
dec
xchg
clc
repnz
jae
add
add
add
adc
popa
add
cld
nop
jmp
jns
add
mov
div
clc
repnz
jae
add
adc
xchg
add
mov
xchg
ret
out
add
add
cmp
decl
clc
repnz
jae
aaa
and
mov
sbb
push
add
clc
repnz
jae
mov
xor
push
mov
xchg
ret
jbe
add
dec
jne
fwait
cld
nop
jmp
lods
add
add
add
incl
fwait
cld
nop
jmp
fcomps
add
adc
addb
mov
clc
repnz
jae
mov
test
cmp
dec
sbb
clc
repnz
jae
addb
add
xor
or
in
pusha
sbb
add
mov
fildl
mov
test
iret
loope
add
fcomp
add
test
movzwl
push
mov
xchg
ret
fadds
addb
add
add
repnz
jae
add
mov
clc
repnz
jae
mov
add
add
add
push
clc
repnz
jae
lods
dec
add
or
les
adc
mov
jmp
mov
xchg
ret
cmp
pop
push
out
cmp
adc
repnz
jae
out
xor
stc
add
clc
repnz
jae
push
add
mov
pop
cmpl
fwait
cld
nop
jmp
add
xor
jmp
out
add
add
add
xor
test
jb
clc
repnz
jae
es
addl
fistpl
mov
xchg
ret
add
add
add
fldt
cld
nop
jmp
add
test
add
jle
pop
clc
repnz
jae
out
add
cmp
dec
movsl
out
mov
clc
repnz
jae
cmp
add
clc
repnz
jae
add
add
aas
movsl
loop
adcl
inc
clc
repnz
jae
fwait
mov
add
roll
addb
shl
clc
repnz
jae
rcrb
add
clc
repnz
jae
mov
add
and
repnz
jae
add
add
ja
mov
cmp
popa
add
cld
nop
jmp
adc
add
jmp
aaa
add
add
add
dec
or
andl
jae
jnp
add
sub
xor
add
clc
repnz
jae
les
jmp
mov
hlt
sub
lods
add
push
clc
repnz
jae
out
jge
adc
add
jbe
add
add
cmp
clc
repnz
jae
add
pop
push
clc
repnz
jae
inc
add
add
out
add
add
add
add
aad
cltd
push
push
mov
xchg
ret
adc
add
add
add
add
clc
repnz
jae
inc
hlt
sbb
or
sti
mov
clc
repnz
jae
add
lea
cld
nop
jmp
dec
add
add
inc
add
sub
clc
repnz
jae
test
cmp
and
push
mov
xchg
ret
mov
add
sbb
test
add
add
repnz
jae
cmp
xorb
shr
clc
repnz
jae
add
aaa
add
ja
and
clc
repnz
jae
add
add
aaa
add
lahf
push
push
mov
xchg
ret
push
add
xor
add
jae
ja
add
sbb
add
rolb
nop
add
dec
subl
push
mov
xchg
ret
add
add
push
add
nop
jmp
jge
sub
add
lea
cld
nop
jmp
jge
add
add
inc
mov
push
push
mov
xchg
ret
cwtl
int3
mov
clc
repnz
jae
mov
aad
mov
push
mov
xchg
ret
add
add
dec
enter
push
mov
xchg
ret
dec
cmp
add
sar
nop
jae
cmp
add
add
jbe
add
add
clc
repnz
jae
add
add
add
pop
push
clc
repnz
jae
add
add
add
js
dec
cmp
repnz
jae
add
movsl
add
mov
clc
repnz
jae
add
cmp
lea
fwait
cld
nop
jmp
add
or
roll
clc
repnz
jae
out
shr
jbe
add
cmpsl
xor
pop
mov
clc
repnz
jae
dec
add
push
clc
repnz
jae
add
dec
add
add
clc
repnz
jae
and
add
rolb
daa
lret
push
clc
repnz
jae
fdivrs
pop
sbb
push
mov
xchg
ret
add
adc
rorl
mov
fwait
cld
nop
jmp
jle
fistl
mov
xchg
ret
mov
and
mov
jae
add
sarl
sub
cld
nop
jmp
jge
jmp
add
pusha
clc
repnz
jae
mov
add
add
rcr
fwait
cld
nop
jmp
sub
mov
inc
outsl
shr
clc
repnz
jae
test
inc
test
pop
loopne
pop
call
fwait
cld
nop
jmp
dec
add
aas
movsl
mov
sti
sub
clc
repnz
jae
add
sub
add
xor
clc
repnz
jae
iret
add
movsl
pop
cmp
cld
nop
jmp
adc
add
add
add
ljmp
sbb
jmp
mov
inc
and
clc
repnz
jae
add
out
sub
add
jmp
jmp
lods
ja
pop
push
mov
xchg
ret
pop
mov
test
repnz
clc
repnz
jae
add
adc
or
pop
stc
inc
add
inc
xor
add
jbe
jns
fwait
cld
nop
jmp
ja
add
fadds
mov
jmp
dec
les
iret
add
add
add
fadds
clc
lea
fwait
cld
nop
jmp
jge
pop
fadds
aad
arpl
loopne
add
add
les
and
repnz
jae
add
xor
push
mov
mov
clc
repnz
jae
pop
dec
mov
or
nop
jae
add
fdivrs
add
fidivrs
clc
repnz
jae
add
jns
mov
clc
repnz
jae
add
add
mov
daa
outsb
mov
clc
repnz
jae
or
push
es
icebp
push
clc
repnz
jae
add
mov
cmp
add
clc
repnz
jae
sbb
mov
shl
add
cld
nop
jmp
jnp
out
add
push
movsl
addr16
dec
push
mov
xchg
ret
inc
pop
test
cwtl
add
sbb
nop
jae
jns
les
fcomps
nop
jae
add
cwtl
adc
jg
clc
repnz
jae
les
out
iret
add
fidivrl
fwait
cld
nop
jmp
add
add
enter
nop
jmp
add
rcrb
add
add
hlt
incl
add
pop
sub
pusha
out
incl
add
sub
add
add
cld
nop
jmp
jns
and
add
add
clc
repnz
jae
cltd
push
or
dec
add
mov
adc
jge
shrl
repnz
jae
out
shrb
mov
xchg
ret
hlt
out
add
mov
push
clc
repnz
jae
cwtl
add
lret
mov
clc
repnz
jae
out
add
add
push
daa
xchg
aad
add
clc
repnz
jae
mov
movsl
push
enter
jae
addl
fcmovnb
push
rcll
mov
clc
repnz
jae
push
hlt
mov
repnz
jae
add
add
fadds
mov
xlat
addb
movzwl
clc
repnz
jae
and
and
jmp
out
add
push
mov
xchg
ret
xor
add
rcrl
je
sub
repnz
jae
sub
mov
jae
add
fsubrs
push
push
mov
xchg
ret
mov
dec
hlt
push
inc
add
lcall
ret
jnp
test
fildl
add
cmp
fwait
cld
nop
jmp
aad
cltd
add
push
mov
xchg
ret
add
add
movsl
movsl
push
call
repnz
jae
sub
add
add
cmp
test
clc
repnz
jae
sbb
add
mov
mov
xchg
ret
sbb
jns
inc
and
mov
mov
pop
clc
repnz
jae
fwait
push
add
add
lcall
mov
incl
add
add
les
lcall
icebp
incl
sub
out
add
push
mov
xchg
ret
add
add
sub
jg
fwait
cld
nop
jmp
hlt
add
xor
add
add
add
dec
xor
clc
repnz
jae
add
mov
clc
repnz
jae
add
jb
in
mov
clc
repnz
jae
shrb
add
pushl
add
add
push
add
mov
push
mov
xchg
ret
hlt
les
out
add
mov
xchg
ret
add
fcmovnbe
fwait
mov
mov
xchg
ret
push
xor
inc
addb
in
jle
jne
clc
repnz
jae
add
push
add
mov
repnz
jae
add
add
add
out
add
clc
repnz
jae
mov
add
in
movsb
add
add
add
add
jne
clc
repnz
jae
add
dec
dec
push
mov
xchg
ret
mov
add
lret
jbe
clc
repnz
jae
add
push
or
clc
repnz
jae
iret
add
add
lea
clc
repnz
jae
add
add
push
clc
repnz
jae
mov
add
out
cltd
mov
clc
repnz
jae
add
mov
out
pushl
clc
repnz
jae
add
xor
mov
add
shr
clc
repnz
jae
dec
add
test
mov
rclb
test
cmp
ret
fsubs
mov
push
add
nop
jae
add
cmp
clc
repnz
jae
add
add
add
clc
repnz
jae
cmp
iret
add
add
add
add
add
add
add
clc
repnz
jae
out
dec
out
add
jae
add
clc
repnz
jae
add
add
add
jnp
cmpsb
add
mov
fwait
cld
nop
jmp
add
shlb
outsb
jne
fwait
cld
nop
jmp
add
add
call
fwait
cld
nop
jmp
add
add
add
clc
repnz
jae
jmp
cmp
fwait
cld
nop
jmp
adc
les
inc
dec
cmp
clc
repnz
jae
jnp
add
add
fistpll
clc
repnz
jae
sbb
add
lcall
repz
inc
add
add
fwait
dec
test
fwait
cld
nop
jmp
add
mov
jge
pop
pop
pop
cltd
stos
clc
repnz
jae
fadds
xor
jne
xlat
cli
push
push
mov
xchg
ret
add
add
add
or
imul
clc
repnz
jae
push
adc
add
sub
clc
repnz
jae
xor
fcmovnb
testb
add
nop
jae
cwtl
push
add
pop
mov
fwait
cld
nop
jmp
add
hlt
add
ja
outsl
add
clc
repnz
jae
add
fcomp
roll
orl
nop
jmp
add
ja
add
lahf
pop
clc
repnz
jae
add
add
inc
inc
add
cmp
nop
jmp
sbb
add
popa
adcl
fwait
cld
nop
jmp
dec
fdivrs
adc
add
lea
jae
add
add
ja
add
cltd
add
clc
repnz
jae
add
iret
add
clc
repnz
jae
add
out
les
out
add
mov
push
mov
xchg
ret
dec
pop
mov
xor
xor
xor
jmp
rolb
add
aad
add
inc
add
stos
aad
out
pop
xchg
add
add
mov
add
mov
pop
cltd
dec
add
mov
add
dec
gs
in
push
shrl
push
insl
xlat
xor
outsb
or
pop
push
outsb
jg
repnz
pusha
add
add
jg
aam
lock
add
pop
cmp
add
xor
jg
jl,pn
pop
int
imul
leave
dec
out
cmpsl
dec
nop
add
lcall
add
adc
add
pop
push
add
daa
or
lret
fsubp
add
leave
xor
xor
lcall
repnz
test
add
bound
mov
les
mov
push
mov
add
and
add
dec
in
or
add
add
add
and
mov
cmp
pop
mov
dec
pop
xor
pop
rolb
out
loope
ret
out
fisubs
add
leave
jnp
filds
mov
jge
or
push
movsl
pop
jbe
outsl
outsb
sub
xchg
dec
or
cmpsl
adc
ds
sbb
into
xchg
divl
add
push
add
add
add
jge
xchg
mov
add
add
jmp
xchg
mov
rolb
jp
mov
sbb
inc
addr16
adc
dec
or
cmp
data16
jae
mov
cmp
add
add
int3
aas
or
out
cmp
pop
add
mov
add
jae
mov
pop
popa
mov
dec
sbb
lret
or
lods
stc
loopne
inc
add
xchg
add
add
pop
adc
test
add
sti
lret
mov
add
add
add
and
inc
sub
add
jp
inc
add
add
out
outsb
ja
or
dec
arpl
sti
cli
and
add
add
arpl
jbe
test
lea
out
std
adc
into
pushf
pop
pop
pop
js
add
push
add
lods
pop
add
popf
mov
testb
push
add
xchg
test
test
jo
les
imul
imul
pop
loop
lret
xor
scas
ljmp
add
inc
data16
dec
push
sub
movlps
insl
lods
les
jne
repnz
cmc
outsl
jp
add
add
les
cmp
add
add
mov
or
cwtl
jmp
add
das
sbb
mov
aaa
fwait
xor
or
popa
movsb
add
jmp
inc
add
aam
popf
je
pop
and
jmp
sbb
cmp
add
arpl
cmpsb
add
or
add
fwait
pop
mov
xor
add
add
loopne
js
add
mov
xor
out
add
hlt
add
xor
add
mov
or
mov
xor
rcll
fdivl
add
or
popa
mov
in
addb
inc
add
lds
add
fs
sbb
cs
mov
xchg
sub
insl
movb
lcall
inc
add
xchg
add
add
or
icebp
popf
scas
push
jle
add
add
cmp
mov
inc
add
mov
bound
mov
pop
jb
mov
addb
mov
mov
test
add
notl
add
push
pop
xchg
or
add
mov
push
lret
add
scas
std
xchg
ja
add
inc
mov
pop
cwtl
pop
adc
add
mov
movsb
add
jp
add
iret
mov
or
adc
cli
inc
lahf
into
mov
add
mov
out
enter
add
mov
add
adc
lea
mov
push
push
adc
or
cli
flds
dec
addb
mov
cmp
add
add
lea
jge
stos
pop
inc
add
add
add
add
jb
cld
or
xor
pop
cli
add
lock
call
frstor
mov
aaa
or
xchg
add
mov
data16
inc
add
cmpl
sub
xchg
add
test
add
clc
mov
and
cmp
fmuls
repz
xchg
add
add
xchg
add
push
xor
cmp
jbe
or
add
jbe
mov
fimuls
repz
sbb
in
dec
sub
loopne
rolb
jnp
in
lods
cmp
add
sub
cmp
add
add
mov
lds
pop
orl
sub
fimuls
pusha
add
add
ds
pop
imul
add
jl
xchg
add
into
mov
lea
add
cmc
daa
and
out
fsubrs
add
sub
xchg
add
jmp
add
out
and
mov
mov
pop
ret
popa
cmpsb
add
add
and
mov
mov
icebp
mov
add
das
mov
leave
fildll
jle
lock
aad
movsl
cmpsb
add
fmul
push
addb
add
mov
add
add
sti
dec
xchg
and
and
jmp
cmpsl
inc
add
add
leave
xchg
in
inc
ret
movb
stc
sub
add
mov
mov
mov
aad
pop
out
lret
add
adc
add
xor
int3
int3
pop
cli
mov
push
add
mov
add
cmc
mov
lret
in
mov
xor
add
mov
jno
mov
rolb
push
add
add
add
mov
xlat
adc
and
add
push
add
add
add
add
add
repz
push
or
add
jle
imul
mov
jae
dec
mov
movq
add
repz
sbb
add
add
rolb
xchg
add
add
and
mov
or
adc
aaa
lock
push
add
xchg
add
decb
add
push
add
add
dec
or
add
orl
jne
add
adc
add
sbb
sahf
lret
fidivs
movb
add
mov
bound
mov
add
add
xchg
add
add
mov
inc
add
insl
cmpsl
inc
add
push
mov
add
jecxz
inc
add
add
jne
push
jns
int3
mov
cmp
push
add
mov
mov
push
xor
push
cmp
add
cmp
add
add
inc
add
mov
stos
aad
sbb
add
add
cs
nop
add
loop
nop
add
movb
xchg
insl
scas
imul
lret
cmp
sub
sbb
add
jg
add
and
mov
adc
add
jge
add
gs
and
mov
dec
add
cmp
hlt
add
sbb
push
out
fiadds
incb
add
add
add
std
mov
mov
and
rolb
ljmp
mov
add
push
std
fists
add
xor
int3
xor
push
add
add
jmp
outsb
in
lcall
add
pop
xor
lock
add
push
pop
push
pushf
stos
push
or
mov
add
jns
stos
ljmp
add
or
ja
pop
popf
xor
add
add
dec
or
push
out
add
mov
add
fwait
out
decb
je
push
fstpl
mul
jno
push
add
rcll
cmc
add
sub
lods
dec
nop
add
add
xor
in
pop
mov
xchg
in
mov
xchg
cmpsb
add
pop
jg
test
add
gs
lock
jbe
mov
fistpll
add
arpl
or
mov
mov
inc
push
add
pop
addb
jb
jbe
out
push
add
movb
add
mov
cmp
add
in
sbb
add
cmp
mov
mov
mov
cltd
add
sub
add
inc
add
push
mov
outsb
sub
icebp
dec
push
add
push
mov
repnz
pop
fwait
jns
aaa
dec
cltd
fistpl
add
xor
pusha
add
and
ds
add
mov
mov
add
add
stos
cmp
mov
fdivrl
add
jo
push
add
or
add
add
pop
inc
add
mov
xchg
lods
push
add
pop
dec
test
add
add
dec
push
xchg
enter
inc
add
add
add
mov
mov
add
mov
add
out
cmp
mov
add
mov
add
mov
mov
fucomip
push
mov
dec
daa
call
and
and
mov
add
add
add
rolb
xchg
add
and
or
aam
dec
imul
or
cmp
decb
add
iret
jnp
pop
mov
add
sub
add
mov
xor
add
pop
xor
cltd
addl
gs
bound
mov
sarl
cmp
add
xor
inc
add
jne
lea
add
aas
ds
mov
xlat
dec
mov
fbstp
inc
pop
pop
adc
imul
add
aas
ljmp
sbb
xor
cmp
loop
sub
add
lods
mov
jmp
pop
push
add
jecxz
add
mov
or
int3
or
push
add
add
shll
push
add
add
add
inc
add
push
dec
and
mov
fmull
or
leave
mov
scas
mov
fmul
mov
add
inc
add
ljmp
test
pop
fidivl
mov
xchg
in
add
add
test
lea
jmp
pop
arpl
fidivl
fcompl
gs
pop
out
in
les
adc
sbb
mov
pop
and
mov
pop
mov
mov
roll
jl
scas
insb
sahf
xor
ljmp
xchg
ja
or
out
jmp
add
mov
aad
add
add
or
gs
enter
jnp
add
add
add
add
daa
dec
sti
inc
add
add
xchg
sbb
mov
sub
add
loop
roll
mov
and
mov
dec
jnp
rolb
into
nop
add
lock
les
dec
lea
mov
mov
pop
hlt
add
mov
or
fnstcw
pop
and
add
pop
in
aas
in
jl
add
jb
mov
add
add
mov
outsl
les
adc
mov
and
sbb
sbb
mov
ficoms
or
jo
repz
scas
movsl
add
sbbl
adc
xchg
dec
orl
add
mov
push
pop
mov
lods
add
cmp
mov
push
add
leave
adc
add
add
scas
ljmp
xor
lods
dec
lret
sbb
mov
jp
add
andl
add
mov
and
push
leave
addr16
cmpsb
add
mov
ficoml
add
add
add
stos
addr16
jne
add
pop
cmp
or
mov
push
add
add
xchg
add
iret
ljmp
mov
add
push
add
or
push
jle
lahf
push
pop
loope
in
ja
add
sub
add
add
mov
add
mov
testb
mov
adc
add
mov
in
cmc
sahf
jg
mov
or
or
lret
add
mov
add
pop
dec
add
mov
cmp
inc
add
add
inc
filds
mov
pop
stos
cld
pop
mov
sub
loope
add
add
xchg
add
adc
out
lods
loope
lods
ret
mov
xchg
push
add
addr16
mov
dec
dec
movsb
add
jbe
adc
mov
ds
mov
add
add
pop
fisubrs
xchg
add
je
and
mov
add
jns
lcall
jnp
add
mov
inc
xor
nop
add
mov
scas
inc
incb
bound
mov
jne
and
add
push
add
add
jae
add
inc
add
or
xor
add
repz
les
out
lock
jns
pop
loopne
jnp
cmpsb
add
nop
add
lods
cmpsb
add
xlat
aas
add
mov
pop
movb
add
fnstsw
add
xor
in
add
mov
ret
pop
jle
push
add
xchg
add
inc
scas
jb
pop
mov
movb
out
and
xchg
add
cltd
hlt
add
bound
mov
add
cmpsl
js
add
lret
and
mov
sbb
add
push
hlt
add
add
pop
adc
inc
add
subl
mov
dec
data16
hlt
add
add
push
add
mov
add
fidivrl
les
pop
scas
dec
and
imul
add
push
add
movsl
loopne
mov
mov
test
add
mov
imul
jecxz
xor
popf
jno
add
testb
jb
adc
in
sbb
repnz
sbb
add
push
add
push
in
leave
dec
sbb
add
js
aad
sbb
out
sbb
add
testb
cmc
cltd
lea
pop
dec
iret
jbe
mov
add
add
fldt
cmc
or
add
in
rolb
mov
sbbl
add
icebp
mov
add
movb
imul
insl
iret
mov
adc
sub
in
addb
add
mov
jl
add
sbb
jb
loop
rorl
pushf
int
jno
add
subl
stc
loopne
arpl
inc
add
jbe
enter
add
scas
mov
xor
xlat
pop
adc
leave
into
jb
sbb
nop
add
add
mov
mov
test
clc
mov
adc
cs
dec
fsub
add
pop
cltd
xor
push
add
push
add
mov
add
add
xor
inc
add
mov
or
pop
and
add
mov
add
push
dec
dec
lcall
dec
into
jo
inc
sbb
je
adcl
test
in
mov
cmpsb
add
scas
fstps
rcr
cmp
push
cs
add
pop
jno
sub
mov
ret
add
mov
add
push
inc
add
fwait
cmc
mov
insb
int3
or
xchg
notl
add
push
mov
mov
push
add
or
or
mov
xchg
add
and
add
push
add
out
mov
add
pop
das
mov
and
mov
mov
add
stc
lods
mov
in
outsb
aad
jnp
rorl
mov
jmp
jnp
imul
mov
add
mov
mov
loope
add
cltd
cmp
ljmp
xchg
xor
jge
inc
add
add
add
and
mov
sub
mov
leave
std
mov
sub
add
add
add
cmp
xlat
jp
cmp
xchg
in
pop
pop
mov
ret
push
add
rolb
and
dec
iret
les
and
xlat
jns
mov
add
mov
sbb
inc
add
nop
add
jno
fnsave
mov
mov
push
movl
xchg
jne
ljmp
pop
inc
add
jecxz
lret
ret
dec
add
xor
in
mov
out
or
lcall
addr16
mov
add
aad
aam
add
daa
or
add
mov
sti
and
dec
lret
add
shr
add
push
out
add
push
add
sbb
add
add
add
push
add
sbb
in
mov
out
daa
adc
inc
add
mov
pop
lock
adc
aad
mov
push
add
hlt
add
fs
pop
fwait
mov
sub
pop
popa
jno
lret
xchg
add
add
lock
or
add
mov
cmp
mov
fistpll
cmp
add
mov
iret
cld
xor
fsubrl
out
ret
add
mov
mov
leave
sahf
add
xchg
add
movb
sti
mov
ss
das
dec
sub
add
inc
add
push
sub
mov
add
push
add
fwait
outsl
roll
add
cmp
mov
cmpsl
fdivrl
in
rep
lock
out
imul
add
cmp
adc
icebp
adc
lret
xor
xor
add
loope
inc
add
mov
jnp
add
push
inc
mov
add
add
ja
add
les
repz
lock
icebp
and
dec
mov
pop
or
pop
add
add
add
fisubrl
subl
cmpsb
add
adc
inc
mov
mov
test
into
cmp
add
flds
add
push
add
fidivs
dec
lret
paddsb
out
fsubs
stc
add
lods
in
mov
sbb
add
xchg
jns
mov
and
fst
add
adc
outsb
ss
ret
mov
fidivl
icebp
movl
test
add
pop
jmp
add
stos
shrl
mov
jg
fbld
pop
pop
and
mov
mov
add
add
add
fsubs
jno
mov
aam
dec
mov
rol
add
add
push
ret
roll
sub
aaa
lods
stc
lahf
mov
insb
pusha
add
xchg
lret
jp
xor
xchg
add
fucom
add
data16
xchg
add
mov
inc
sub
add
mov
jle
jae
mov
push
add
add
add
add
add
add
add
imul
add
add
adc
sbb
sub
xorl
adc
xlat
mov
push
inc
add
adc
dec
pop
inc
add
les
dec
adc
dec
sti
adc
rolb
mov
out
xor
xchg
stc
movsb
add
add
xchg
push
loop
push
out
xor
rep
adc
gs
loop
mov
xor
push
add
ret
mov
mov
push
int
add
in
mov
imul
sahf
mov
test
sub
add
xor
add
push
sbb
movb
push
in
fchs
add
in
pop
fcoms
inc
add
mov
mov
add
mov
cmp
das
into
inc
mov
add
fcmovnb
cmp
pushf
sahf
pop
mov
sbb
cmp
push
outsl
aaa
push
add
rcll
add
je
inc
add
outsl
xor
sub
fwait
in
jl
fisubrl
popa
in
push
add
add
iret
lea
mov
movsl
sbb
fnsave
outsl
test
mov
pusha
add
add
cwtl
xor
mov
out
mov
out
movsl
add
test
xor
or
int3
lock
push
add
add
xchg
lcall
loope
cmp
in
mov
xchg
xlat
pop
mov
sbb
add
pop
or
add
cmp
loop
xor
mov
add
mov
rorl
or
inc
pop
xor
jp
add
mov
and
pop
in
mov
add
cmpsl
in
mov
fisttpl
mov
or
xchg
add
mov
add
shll
add
and
aad
imul
add
fsubs
add
push
jno
sub
out
dec
rcrl
mov
mov
push
add
ficoms
aas
xor
xor
add
add
cmp
add
inc
add
mov
lock
mov
sbb
insb
leave
xchg
xor
dec
or
add
into
cli
add
testb
dec
sub
xchg
add
imul
add
mov
mov
jne
add
xchg
add
fadds
std
add
add
lea
xor
jge
push
add
out
pop
fcompl
fdivrs
inc
add
inc
add
sub
rolb
xlat
lock
xchg
mov
cmpsb
add
lock
add
data16
add
sub
addb
rolb
sbb
add
push
xchg
add
cmp
test
and
add
add
adc
jge
add
mov
xchg
mov
mov
jae
jle
add
mov
dec
mov
jecxz
and
mov
jo
addr16
movl
inc
mov
call
add
imul
pop
cmpsb
add
add
into
pusha
add
fucomp
and
mov
mov
jne
adc
cli
add
mov
add
fdivr
sbb
xlat
in
push
add
jne
xor
add
add
in
add
sub
and
push
add
outsl
fsts
push
add
add
add
or
or
cs
hlt
add
lret
in
sahf
sub
out
ds
rolb
add
in
xor
pushf
sub
dec
mov
add
add
sub
popa
mov
inc
add
std
mov
pop
mov
add
mov
loop
cmpsb
add
xchg
pop
into
or
add
xor
add
loopne
sbb
lds
clc
jno
adc
pop
cmp
xor
sub
xchg
fldcw
push
add
jmp
dec
mov
mov
jge
imul
roll
add
push
dec
pushf
mov
rolb
arpl
add
add
add
mov
push
add
xchg
fidivrs
cmp
add
xor
add
leave
and
mov
add
mov
aas
sbb
cli
jmp
nop
add
je
cmc
xchg
add
scas
pusha
add
imul
fucomip
btc
stc
pusha
add
mov
add
mov
out
addr16
dec
xor
add
pop
sub
out
add
loope
fstps
test
cwtl
dec
or
lret
mov
add
inc
add
add
add
in
adc
mov
or
arpl
jp
adc
add
mov
add
add
add
add
push
fisubs
add
lahf
xor
icebp
and
mov
xor
addb
add
out
nop
add
xchg
rolb
test
mov
push
add
add
add
add
jp
add
leave
mov
adc
add
mov
mov
add
push
aas
xchg
add
xchg
sub
dec
fincstp
add
add
add
push
add
add
addb
pop
jbe
push
clc
dec
imul
fldcw
inc
rorl
add
lcall
add
repz
sbb
mov
popf
jge
imull
xchg
xchg
add
add
mov
add
mov
sti
inc
repz
mov
cmp
lods
adc
rolb
add
push
add
add
add
dec
testb
mov
std
jae
je
xor
add
xchg
add
cmp
inc
add
mov
jp
pop
and
sub
iret
mov
addb
add
and
mov
xor
add
lcall
mov
add
xchg
or
add
xchg
mov
add
cli
cmp
out
jbe
es
add
pop
out
cli
dec
jns
cmpsl
ljmp
int
stos
fnstenv
jg
add
push
pop
ja
ljmp
mov
mov
mov
xlat
or
pop
je
adc
std
dec
xchg
add
add
jge
bound
mov
push
xor
xchg
flds
mov
fisubrs
fstps
jns
add
enter
dec
nop
add
aaa
sub
add
out
jge
pop
icebp
rolb
xchg
cmp
inc
add
hlt
add
xchg
add
xlat
xchg
add
aam
sub
jnp
dec
add
mov
ljmp
add
add
out
mov
sbb
mov
add
push
add
add
inc
add
add
sub
inc
add
add
call
setl
mov
repz
jp
int
test
arpl
rolb
mov
rolb
lret
sbb
xchg
push
movsl
loope
add
add
fwait
dec
call
xchg
cmp
scas
mov
adc
dec
cmpsb
add
xchg
add
add
sub
aad
mov
xchg
inc
out
mov
pushf
mov
lock
outsl
rolb
push
add
inc
xchg
insl
xchg
add
push
cmp
add
add
add
bound
mov
ss
mov
push
sahf
data16
add
out
dec
mov
fadds
and
and
mov
dec
lret
pop
add
dec
fsub
dec
cmpsb
add
movsl
decb
cmpsl
cmp
enter
into
jnp
add
sub
popf
cmpsl
clc
push
jns
aas
mov
add
add
push
add
cltd
imul
sbb
add
add
xchg
shr
in
or
stc
movsl
leave
js
cmp
push
add
movsb
add
sub
dec
dec
scas
mov
push
add
in
add
push
mov
add
in
add
mov
jnp
or
pop
mov
add
push
add
push
add
stos
lock
stos
and
cmp
adc
add
popa
leave
sbb
add
loop
test
test
dec
lcall
cmp
mov
fwait
and
mov
mov
mov
add
add
nop
add
arpl
hlt
add
test
add
out
aaa
scas
daa
push
add
sub
sahf
jg
jo
data16
dec
movsb
add
sbb
enter
add
repnz
mov
add
in
scas
sub
loope
in
or
aaa
add
mov
test
mov
lds
push
fwait
cmp
icebp
inc
add
or
js
call
add
pop
mov
pop
sbb
rolb
dec
cmpsl
mov
mov
fyl2xp1
aaa
mov
add
std
inc
lds
add
add
push
add
mov
fisubs
xor
xor
xchg
push
add
push
add
rcr
xchg
add
pop
jb
aaa
dec
testb
add
jle
test
pop
push
inc
inc
add
mov
shll
pushf
test
addb
mov
jno,pt
mov
cli
dec
cmpl
xchg
js
add
add
out
add
adc
pop
sbb
mov
add
add
and
add
inc
addb
stos
inc
les
cmp
fcomps
mov
fidivrl
fwait
scas
mov
pop
jb
pop
mov
add
cmp
push
add
add
add
les
addb
mov
push
add
cmp
stos
push
add
pusha
add
mov
inc
pop
pop
xor
outsb
movsb
add
add
js
bound
mov
add
add
mov
in
ficoml
mov
mov
add
adc
mov
lahf
dec
icebp
sub
add
out
lods
lock
sbb
mov
add
stos
dec
movsb
add
mov
imul
je
and
pushl
add
add
add
xchg
bound
mov
cld
shll
add
xor
xorl
push
add
mov
mov
ljmp
push
add
pop
fistl
mov
sub
dec
data16
sbb
inc
cmp
add
xchg
add
inc
jecxz
add
cmpsb
add
add
imul
inc
cmpsb
add
movb
dec
nop
add
add
jne
add
ret
hlt
add
mov
add
jns
push
cmpl
jle
jno
xor
sbb
movsl
sti
fsts
test
pop
jns
jnp
add
leave
es
add
mov
push
add
push
test
xchg
add
add
addb
js
fsubs
add
addb
cmc
andl
mov
mov
sbb
add
lret
mov
sub
add
cmp
xchg
jnp
das
pop
mov
and
mov
push
add
ja
dec
dec
lahf
mov
cwtl
dec
inc
add
test
or
lcall
sub
arpl
add
add
add
add
add
inc
sub
pushf
sub
out
adc
out
add
mov
adc
xor
add
push
add
loop
jl
jle
push
imul
mov
inc
add
push
add
push
cmc
popa
mov
ret
add
mov
add
add
jnp
add
lret
add
jns
or
cmpsb
add
fdivl
add
add
aaa
aaa
loopne
call
push
add
lods
dec
xchg
add
sbb
pop
dec
call
mov
dec
mov
add
mov
mov
or
xor
jl
push
arpl
loopne
popf
sbb
mov
mov
in
aad
int
sbb
dec
mov
add
jb
push
xchg
inc
outsl
insl
sub
add
add
or
push
cld
ljmp
push
xchg
add
repnz
mov
fdivr
std
iret
push
add
xchg
lds
add
add
movsl
push
outsl
arpl
mov
movd
inc
add
add
mov
sub
add
add
ret
xor
add
add
std
push
repnz
sub
pop
mov
sahf
sbb
sbb
loopne
movsb
add
add
push
add
mov
dec
add
add
repnz
leave
jbe
xor
test
fsubr
cmp
xchg
add
insb
fisttps
add
jmp
inc
sbb
mov
jmp
mov
or
mov
mov
add
jle
add
push
ret
add
and
mov
mov
cmpsb
add
popf
iret
push
aam
popa
push
add
addb
inc
pushf
test
add
out
xor
add
add
test
loope
cmpsb
add
add
lret
dec
xchg
add
add
mov
into
ds
fnstsw
lcall
inc
add
add
mov
mov
add
add
rolb
push
add
add
jno
iret
jb
sub
int
jecxz
lds
aas
push
add
sbb
cmp
pop
jno
icebp
xchg
int3
lahf
jae
or
add
iret
sbb
add
scas
push
add
add
ljmp
rolb
cld
mov
add
dec
aaa
sub
pop
lret
mov
repnz
sbb
mov
inc
jb
fwait
insb
mov
pop
shll
stos
call
clc
inc
or
mov
mov
sub
add
add
pop
mov
dec
sub
hlt
add
mov
negl
std
lea
bound
mov
dec
push
pop
rolb
mov
jne
pop
divps
add
add
outsb
inc
add
add
add
sbb
inc
hlt
add
add
add
add
movsl
push
add
test
sbb
add
gs
add
and
mov
add
sub
add
inc
mov
xor
loopne
and
inc
ret
aad
cmc
mov
aad
add
pop
stc
mov
add
push
add
loope
add
jmp
fisubrs
fstpl
sbb
add
pop
or
push
pop
sbb
add
add
pushf
inc
add
add
fistpl
rolb
sbb
imul
mov
aas
shll
sub
add
cltd
test
scas
push
mov
add
sbb
das
push
add
inc
push
add
add
push
outsl
xor
add
add
and
mov
mov
fxch
mov
repnz
add
imul
enter
add
xchg
add
add
int3
lods
mov
iret
mov
stos
xchg
and
mov
dec
jge
aas
mov
dec
add
mov
push
add
pop
and
dec
or
push
sub
mov
add
sbb
add
jecxz
subl
or
nop
add
and
mov
call
addb
mov
outsb
int
outsl
rolb
scas
inc
fs
add
sbb
add
pop
popa
dec
mov
mov
xchg
pop
aad
addb
out
push
add
push
add
mov
add
add
out
lcall
dec
add
add
leave
lds
add
in
rcrl
repnz
add
shrl
inc
inc
add
loope
in
fs
push
stos
ret
add
add
add
add
aad
into
repz
jl
pop
sahf
pusha
add
xchg
loop
pusha
add
push
add
or
movsl
pop
pop
dec
jmp
push
add
movsb
add
aam
test
add
xor
add
add
add
mov
xor
xor
add
add
mov
push
add
add
add
mov
cli
xchg
sbb
aaa
cmp
ds
addb
add
cmp
add
sbb
loopne
std
mov
pop
pop
insb
push
test
pop
into
push
imul
add
or
add
push
pop
jl
add
fisttpll
in
je
loopne
fisubs
add
adc
push
add
mov
or
cmp
cs
and
push
add
add
mov
adc
xchg
insl
stc
movsb
add
jne
cmpsb
add
sub
mov
add
jnp
add
add
jnp
cltd
sbb
addr16
add
int3
cwtl
mov
lcall
xor
or
lea
lds
mov
mov
push
out
hlt
add
add
ret
jno
std
sbb
add
and
orl
aam
jle
and
add
sbb
add
pop
enter
push
jl
add
scas
les
mov
add
add
jl
xor
pop
dec
pop
sbb
loopne
jg
add
mov
add
outsl
sbb
add
add
repz
lcall
jmp
add
add
inc
adc
adc
sahf
and
xchg
add
add
add
add
add
mov
inc
add
mov
pop
push
jb
push
add
scas
or
xchg
lret
in
jp
testl
jecxz
jge
or
lahf
and
jle
dec
mov
lret
pop
sbb
or
cmpl
push
add
sub
add
scas
xchg
add
jle
add
push
ja
push
jnp
push
add
rolb
pop
xchg
mov
cmp
dec
test
mov
rolb
fwait
outsb
rolb
add
add
add
call
loopne
das
out
popa
xchg
add
cltd
jl
inc
xor
cld
movsb
add
mov
mov
sahf
mov
ja
add
fcoml
ret
cmpsl
shll
mov
int3
les
xor
or
mov
add
add
add
mov
add
mov
xor
xor
cmpsl
mov
insl
adc
add
add
arpl
add
push
mov
xor
sti
test
ret
xchg
aam
push
repnz
push
sub
push
add
inc
mov
jle
push
add
loop
push
sti
leave
out
imul
or
push
lds
out
je
jno
inc
cmp
insb
mov
lds
add
dec
ljmp
add
add
add
mov
cmp
inc
add
mov
add
mov
rolb
bound
mov
add
add
rorl
lea
add
je
add
mov
xor
add
fimuls
adc
iret
mov
mov
add
add
loop
ret
cmpsb
add
fstpt
scas
clc
mov
movl
add
mov
add
sub
fists
movsb
add
add
add
add
add
xor
add
or
je
lret
push
xchg
lds
loope
dec
movsl
std
aaa
cmp
mov
mov
add
mov
add
push
add
mov
lods
inc
add
bound
mov
add
pushf
add
add
stc
lahf
jecxz
out
iret
ficompl
add
push
lret
add
pushf
psraw
decb
inc
add
or
fstpl
gs
xchg
add
add
add
inc
add
add
xor
cmp
dec
ljmp
lods
cmp
popf
out
pop
int3
mov
add
add
add
jo
adc
imull
leave
lods
mov
inc
add
add
mov
add
add
lret
add
push
xchg
sub
add
add
stos
inc
add
add
test
fsubp
add
add
mov
and
mov
xor
pop
add
test
adc
int3
pop
add
inc
add
add
adc
add
mov
mov
add
jge
add
xor
mov
imul
add
das
icebp
test
fnsetpm(287
add
adc
mov
xor
jecxz
insb
jnp
add
or
dec
add
jge
push
insb
dec
jnp
pushl
mov
add
jg
in
insl
addb
add
ljmp
mov
add
add
xlat
nop
add
dec
out
lahf
push
add
push
add
add
mov
out
loopne
out
push
fsubrs
out
fnstenv
add
bound
mov
or
int3
dec
pusha
add
imul
dec
xchg
lret
sub
sub
mov
add
add
in
sub
or
cmp
jb
mov
imul
add
je
jne
add
or
dec
mov
push
push
inc
jl
add
sarl
cmpsb
add
jmp
ds
fmulp
xlat
pop
outsl
int
xor
into
jnp
add
mov
pop
lahf
sub
icebp
push
add
push
pusha
add
pop
mov
mov
add
sbb
add
adc
add
and
jns
lds
push
add
add
adc
dec
xchg
sbb
lret
jl
sub
add
jae
jb
aam
mov
cmpsb
add
or
push
xor
ds
add
addb
repnz
add
out
lret
mov
int
mov
std
mov
pop
mov
add
adc
add
add
and
xor
pop
adc
lock
js
pusha
add
outsl
sbb
push
testb
mov
in
jmp
jle
js
add
add
stc
int3
rolb
call
add
jmp
add
jle
mov
rolb
jns
add
pop
into
call
add
dec
jle
int
add
std
lahf
xor
in
movb
jb
add
mov
push
xchg
ds
add
sub
cmp
jb
addb
out
cmp
mov
fdivr
mov
add
stc
and
sahf
mov
add
add
add
inc
les
cmp
pop
cld
xlat
stc
inc
out
mov
sbb
mov
scas
arpl
mov
aam
xor
pop
and
add
dec
bound
mov
jne
dec
push
dec
cmp
add
xchg
push
out
imull
lock
mov
addb
loope
lods
in
or
add
ret
bound
mov
add
add
movsl
and
mov
or
sbb
adc
add
fstpl
add
adc
add
mov
ljmp
or
dec
dec
dec
jmp
push
movsl
dec
pop
loop
lods
imul
in
add
icebp
data16
mov
mov
xchg
jge
mov
rcrl
add
add
jnp
inc
add
mov
aaa
int
or
or
in
movsl
and
inc
adc
sbb
or
add
js
popf
dec
xchg
add
jmp
mov
in
mov
add
add
cmp
add
test
cmp
push
add
test
data16
cwtl
daa
imul
adc
dec
mov
mov
xor
daa
sahf
scas
fs
inc
add
inc
add
xchg
add
add
scas
arpl
add
xor
adc
out
add
aam
dec
test
inc
fmuls
jmp
mov
lea
add
add
add
add
fdivrl
pop
and
leave
insl
jnp
add
pop
xchg
add
call
adc
add
rolb
mov
inc
add
movl
ror
sbb
es
std
clc
mov
imul
movsl
jmp
outsl
cmp
jb
pop
test
add
and
lcall
add
pop
xchg
add
mov
or
sbb
add
mov
test
push
add
or
add
fildl
scas
into
test
mov
xchg
add
add
mov
add
rolb
arpl
mov
jae
add
arpl
xchg
and
mov
inc
add
pop
push
add
add
add
test
mov
dec
jge
stos
loopne
jae
rolb
jo
cmp
cmp
ret
shrl
add
xchg
add
mov
dec
xchg
add
add
jl
es
add
add
xlat
das
call
add
mov
cmp
jmp
pop
inc
aam
das
insb
xor
lods
mov
add
jecxz
inc
loopne
inc
jmp
out
fcompl
jmp
add
add
xchg
dec
add
or
mov
mov
mov
sub
inc
add
xchg
add
ds
mov
xchg
jl
dec
fistpll
jns
cmp
in
jbe
xlat
xlat
push
add
cltd
lret
dec
or
fsubrl
add
mov
jo
aad
add
aam
repz
add
daa
cmc
inc
pusha
add
movsb
add
add
push
add
push
inc
add
dec
cmp
add
scas
rolb
lret
add
sti
push
outsb
in
test
das
iret
ss
int
ja
add
adc
stc
adc
add
xchg
add
add
add
addb
int3
dec
and
add
sti
pop
pop
or
add
or
mov
add
ljmp
jmp
call
dec
mov
je
outsl
inc
add
add
add
mov
data16
dec
fdivrs
cld
xchg
xchg
add
inc
mov
xor
dec
pop
and
mov
add
push
jecxz
jmp
mov
jl
ret
jle
les
jle
addr16
add
fwait
sahf
out
sub
jecxz,pn
pusha
add
pop
notl
sbb
add
adc
sbb
push
push
test
mov
add
adc
xlat
xchg
andl
sub
mov
scas
mov
aad
add
add
add
push
add
inc
pop
repz
mov
mov
test
xchg
add
aas
repnz
xor
mov
add
pusha
add
mov
add
inc
sbb
cmp
mov
arpl
add
gs
cs
push
add
add
mov
xor
stc
inc
add
add
imul
pop
cmp
das
or
or
testb
out
pusha
add
clc
mov
add
test
lret
sub
outsl
xor
add
clc
clc
cmpsb
add
push
push
add
or
sbb
add
mov
pop
push
aaa
mov
inc
mov
xchg
jmp
add
pop
test
and
dec
mov
movb
mov
push
add
lds
pop
dec
mov
adc
not
add
test
add
add
sti
push
adc
fwait
popa
pop
fwait
xchg
gs
cmc
pop
sbb
add
into
test
inc
add
in
stc
jnp
xchg
add
loopne
js
add
imul
add
mov
mov
add
add
add
mov
mov
add
push
and
mov
jno
lcall
add
mov
repnz
outsl
out
scas
inc
rolb
pusha
add
push
xchg
out
mov
add
int
dec
aad
xor
fwait
xchg
rolb
mov
jae
out
lds
add
xchg
add
cmp
and
mov
clc
xchg
add
xor
test
add
cmc
dec
rcll
jae
xor
int
push
add
fwait
ret
mov
mov
add
out
add
addb
cli
rol
ret
cmp
negl
add
rolb
sub
out
mov
cmp
sbb
add
add
add
mov
cmp
dec
rolb
nop
add
mov
jg
mov
sbb
add
or
push
js
rolb
fwait
xor
in
std
je
xchg
ret
mov
and
mov
mov
dec
pop
movsl
and
mov
and
add
mov
insl
mov
pusha
add
data16
add
jnp
inc
cmpsb
add
enter
jg
clc
in
adc
addb
add
add
mov
add
add
cmp
mov
mov
ror
jbe
cmp
add
ja
add
mov
js
testl
push
add
mov
jg
sub
jne
add
sahf
cmp
out
and
mov
add
mov
inc
add
int
add
adc
lret
data16
add
xchg
cmpsb
add
dec
test
xor
fcomip
add
outsl
mov
js
add
xchg
add
add
push
mov
jg
add
inc
add
add
ds
add
add
add
add
add
popf
dec
push
add
add
jge
pop
add
add
push
add
adc
outsb
sub
mov
fistpll
test
sahf
inc
mov
add
mov
fld
add
add
ljmp
add
sbb
mov
xor
mov
cmp
popa
sub
add
add
inc
add
enter
cltd
lahf
pop
hlt
add
cmpsb
add
add
popf
addb
aaa
sahf
jmp
test
lea
add
ds
test
add
add
inc
add
cmp
fnstenv
jge
pop
movl
pop
aas
aam
rcrl
add
hlt
add
sbb
add
add
add
add
push
test
rolb
cmpsb
add
rolb
cmp
push
add
insl
sub
add
and
mov
setg
dec
cmp
lds
xchg
push
leave
out
enter
sub
add
xor
add
fimull
add
add
jae
add
shll
lods
inc
outsl
or
cmp
push
add
sbb
call
jae
loope
add
mov
add
in
aad
push
inc
add
cmp
mov
rolb
push
add
rorl
add
pop
rorl
cltd
sbb
pop
movb
add
dec
repz
ds
push
jns
fsin
adc
iret
sti
daa
jns
cld
xor
stos
adc
mov
add
mov
add
aad
add
ds
loop
sub
add
mov
daa
ja
add
and
add
jbe
mov
add
mov
pop
insl
or
sbb
add
clc
jl
adc
aaa
aaa
orl
add
add
add
and
mov
pop
in
test
add
add
dec
inc
add
add
out
jge
dec
push
aaa
lds
jo
add
mov
popf
pop
xchg
out
mov
test
add
pop
dec
shll
loope
testb
test
add
cmp
add
pop
adc
sub
sbb
sub
addb
xchg
xchg
xchg
rolb
push
or
add
add
or
add
cmp
add
and
mov
push
mov
cmc
cmpsl
pop
test
jp
jns
lea
add
andl
cltd
inc
add
adc
pop
jmp
aad
je
xchg
pop
in
mov
pop
push
sbb
data16
add
add
push
es
out
fnclex
add
add
add
aam
or
add
add
add
mov
aaa
dec
aaa
inc
pop
repz
sub
adc
push
add
adc
add
add
mov
test
cmp
add
dec
roll
out
sub
pop
ja
ljmp
dec
xchg
push
add
adc
pusha
add
pop
stos
dec
pushf
xor
int3
mov
addb
into
cmp
bsf
or
mov
inc
mov
subl
mov
cmp
cli
xchg
lds
add
jbe
test
rolb
mov
jnp
test
cmp
mov
shl
push
scas
cmpsb
add
or
loop
in
push
add
pop
xchg
add
negl
sub
mov
or
inc
pop
mov
shll
addb
push
test
ficoms
ja
fiaddl
push
add
test
add
out
adc
imul
add
xchg
in
addb
add
hlt
add
ljmp
flds
scas
or
sub
adc
mov
dec
scas
repnz
dec
add
mov
rolb
pop
and
mov
cwtl
xlat
aaa
dec
ja
add
loop
xchg
dec
xor
iret
jmp
lret
sub
mov
or
add
pop
xor
mov
filds
add
sahf
js
xchg
add
fsts
jl
or
sbb
push
ret
ret
es
mov
add
shl
add
inc
adc
pop
jl
rolb
ljmp
push
add
xchg
mov
push
cmpsl
jmp
pop
rolb
pusha
add
lods
sahf
jne
add
aaa
adc
pop
lret
popa
aas
dec
test
mov
dec
fwait
les
movsb
add
mov
cmc
mov
add
push
add
pmuludq
in
pop
lcall
add
cmpl
ja
pop
inc
jg
mov
add
movsl
test
popa
xchg
rolb
add
add
xchg
add
add
or
add
pop
add
lods
gs
add
xchg
add
or
add
push
mov
enter
add
cmp
add
sbb
xchg
add
pusha
add
mov
js
mov
dec
cmp
in
pop
movsl
jecxz
add
add
aas
arpl
sub
add
mov
add
loop
lahf
push
fistpll
into
gs
in
and
mov
mov
dec
cltd
mov
add
fistpll
mov
push
add
add
cmp
add
push
lea
inc
mov
push
andl
pop
xor
fsubs
sub
jnp
ss
mov
loop
into
mov
inc
add
and
mov
cltd
into
out
xor
xor
and
push
shl
and
add
push
jmp
jecxz
insl
mov
mov
push
js
fdivp
data16
es
ja
imull
rolb
dec
pextrw
cmp
aaa
mov
movl
in
or
push
add
out
rolb
xor
fs
inc
and
mov
add
and
mov
fiaddl
add
mov
add
add
cltd
push
out
cmp
adc
add
add
dec
mov
sub
add
in
fldenv
scas
ds
add
jl
dec
loop
test
add
xor
dec
jmp
scas
shrl
push
add
add
cmp
mov
add
mov
pop
cmc
adc
and
mov
jne
into
push
push
add
sbb
pushf
or
mov
out
jmp
stos
sbb
add
sub
andl
add
adc
ret
add
pusha
add
add
sahf
arpl
add
dec
lods
mov
xchg
add
jb
ret
add
or
lahf
enter
mov
stos
lods
addb
int3
jbe
jns
mov
inc
add
sar
adc
loope
f2xm1
add
dec
mov
cmp
xchg
or
mov
daa
xor
in
mov
mov
push
add
mov
jl
jno
xchg
jge
xor
inc
out
push
pop
and
mov
or
fnsave
sbb
fsubrl
rcrl
in
fmull
add
add
or
aas
addb
jecxz
or
add
xor
les
xlat
mov
ja
add
mov
andl
add
jbe
mov
dec
sti
cmc
jp
loope
fisttpl
repnz
mov
add
out
fwait
aam
rcr
movb
stos
test
add
mov
out
jns
testb
outsb
addb
push
loopne
xchg
add
add
jle
add
add
data16
sbb
mov
repnz
add
incb
add
cli
imul
jns
and
sub
arpl
pop
push
ljmp
dec
dec
movsl
movb
jns
add
xchg
add
mov
xchg
add
add
cmp
cmc
out
sub
push
popf
lods
in
dec
mov
imul
add
add
add
add
sti
ja
mov
add
mov
sub
das
fnstenv
xchg
lret
mov
push
add
add
add
out
mov
in
addr16
xor
xchg
test
into
mov
xchg
sub
add
repz
cli
test
add
adc
incb
pop
ja
js
in
loop
push
inc
test
iret
test
outsl
add
lret
xor
aaa
out
ja
outsl
push
add
jbe
add
lea
lret
iret
push
addr16
dec
sti
jle
stos
inc
add
incb
bound
mov
lret
jge
call
and
add
add
lret
or
add
add
pop
or
add
inc
inc
add
and
mov
sbb
xchg
add
inc
cmp
dec
mov
inc
xchg
rcrl
int3
pop
outsl
mov
cltd
mov
or
mov
pop
pop
repnz
cli
roll
add
add
leave
xor
xchg
xlat
mov
dec
xchg
add
xchg
sbb
fldcw
fistl
pop
movsb
add
xbegin
testb
add
add
icebp
xor
jno
cwtl
lods
push
xchg
add
sbb
adc
lret
in
cmp
push
push
stos
mov
outsb
push
xchg
xchg
add
test
add
jne
push
add
dec
add
mov
mov
mov
mov
adc
scas
sbb
cmp
push
add
jbe
stc
insb
roll
in
sbb
sbb
fld
add
add
add
or
pop
aam
dec
mov
mov
daa
cltd
pusha
add
add
imul
add
mov
pop
cmc
inc
insb
test
add
push
cmp
pop
stos
mov
incb
jp
shrl
scas
call
fwait
mov
xchg
lea
or
mov
add
dec
pusha
add
stc
sub
push
ret
sbb
mov
and
movsb
add
stc
mov
aad
sub
addb
add
mov
imul
cmp
add
popf
mov
pusha
add
cmp
add
ficomps
rep
test
add
jecxz
sub
mov
sahf
or
ret
cmp
inc
push
adc
lea
add
int
xchg
outsl
ja
xchg
decl
sbb
stos
xor
cmp
add
add
cmc
cmp
and
mov
add
jo
lea
lods
ja
xlat
fcoms
mov
mov
add
mov
jmp
add
ficompl
pop
dec
jo
std
pop
push
add
push
add
add
cmpsb
add
add
mov
icebp
out
addb
clc
sub
add
mov
add
xor
mov
add
mov
inc
imul
mov
dec
xchg
add
inc
add
add
in
out
cs
mov
sbb
add
out
adc
mov
dec
and
mov
mov
sahf
push
add
inc
add
add
pop
ficoms
mov
test
in
andl
add
jae
add
add
imul
xor
add
add
ljmp
xchg
add
bound
mov
add
add
aas
jl
testb
jmp
add
jg
clc
into
ror
sub
jge
and
mov
add
out
outsb
push
subl
in
add
add
test
call
jle
test
lret
and
mov
aad
dec
add
sub
add
add
paddusw
jl
cmpsl
inc
add
popf
xor
jns
cmp
sub
lahf
push
ficoml
add
add
data16
lahf
mov
test
mov
jae,pn
add
mov
les
push
fadd
insb
jecxz
add
data16
and
mov
sti
cmpsl
popa
aad
add
mov
add
and
and
jmp
xchg
or
jne
stos
xor
xor
faddl
xchg
add
add
lods
cmpsl
mov
add
mov
leave
or
add
test
iret
imul
mov
push
js
push
add
push
outsb
dec
mov
add
icebp
push
add
test
lahf
sbb
insb
inc
mov
popf
adc
push
pusha
add
or
add
int3
in
rolb
insb
lret
add
imul
mov
int
out
jmp
stos
pop
cmc
sbb
in
jecxz
adc
rcll
mov
repz
add
insl
imul
in
inc
add
add
pop
sbb
jbe
inc
add
roll
in
xchg
add
sub
cwtl
push
add
mov
push
cmc
call
ret
in
xlat
cld
push
scas
xor
sub
out
adc
test
call
jge
and
add
xchg
sub
add
add
add
sbb
push
add
inc
adc
scas
outsl
lret
cmp
stos
test
aaa
inc
pusha
add
and
add
push
add
lods
dec
sub
dec
pop
popa
repnz
movsl
inc
pop
scas
pop
cld
adc
stos
in
fsubs
sbb
mov
mov
dec
call
scas
into
cwtl
sub
outsb
jmp
insl
mov
add
or
adc
add
in
add
mov
or
add
adc
in
jae
cld
movsb
add
sub
iret
add
push
sub
cmp
xor
cli
add
les
xchg
push
or
add
add
and
mov
stos
mov
int3
mov
mov
fistpll
dec
xchg
sarl
add
add
repnz
add
pop
or
sbb
push
add
or
add
dec
jle
add
enter
xor
repz
or
cltd
xor
jnp
or
sbb
xor
lock
add
mov
add
lcall
add
insl
push
mov
lock
pop
cmp
cs
inc
movlps
and
lock
xchg
add
aam
jmp
add
int3
inc
add
jge
mov
mov
lods
push
mov
mov
add
add
pusha
add
mov
xchg
add
add
test
add
movsb
add
add
rolb
jmp
addb
adc
stos
jg
add
push
sahf
out
sbb
lahf
or
sub
fidivs
cmp
rolb
mov
push
cs
pusha
add
out
and
or
inc
add
jbe
xor
inc
add
add
mov
dec
xlat
push
mov
mov
aad
add
insl
test
test
add
fdivs
mov
push
add
and
add
add
cmp
adc
fidivs
sbb
mov
inc
add
mov
sub
fdivrl
or
aas
loope
add
add
mov
lock
add
mov
sub
rolb
cltd
out
leave
fnstenv
dec
mov
add
lock
adc
mov
push
add
jno
add
add
pop
inc
ds
push
dec
aas
sarl
jge
ja
xchg
mov
dec
pop
push
add
mov
ljmp
cltd
movsb
add
jmp
and
pop
mov
xchg
testb
dec
addr16
inc
inc
add
add
jns
add
sub
das
cmpsl
and
mov
mov
lock
sbb
adc
fstpt
add
stc
cld
and
mov
jmp
bswap
inc
mov
aas
scas
cmp
xchg
cs
add
loope
loopne
mov
dec
jl
lahf
jp
ljmp
add
mov
add
add
add
pop
js
in
add
add
add
add
xor
mov
add
mov
scas
les
mov
in
stos
push
test
xor
sbb
jns
testb
push
add
add
adc
ljmp
dec
lret
aas
shll
push
sbb
or
outsb
jae
cwtl
repnz
mov
sub
sub
les
jne
xchg
add
and
mov
int3
pop
aaa
pusha
add
add
sub
mov
cltd
push
or
outsl
xor
aas
sbb
pop
ljmp
cli
pop
or
add
sbb
add
or
mov
inc
mov
inc
add
inc
into
xor
push
jbe
mov
mov
add
movsl
into
push
inc
mov
push
cmp
movb
adc
je
push
out
and
aad
sub
inc
add
clc
pop
dec
aad
aad
fcmovnb
in
clc
cmp
jae
outsb
sub
mov
sahf
cmpsl
add
mov
rep
jmp
add
add
lahf
cmp
add
loop
pop
push
xor
push
addr16
repnz
xor
or
add
add
add
std
aaa
jbe
cmpsb
add
movb
add
push
rolb
lock
push
add
inc
add
mov
jmp
jl
mov
cmp
loope
inc
aad
gs
js
lret
imul
subl
aad
les
xchg
add
cmpsb
add
ljmp
add
add
sub
add
add
mov
add
xchg
cmp
inc
add
lea
adc
jg
add
xlat
sub
mov
popf
les
stos
mov
mov
pop
xchg
mov
mov
lods
lret
fnstenv
stos
sub
repz
lcall
jae
pop
dec
and
jbe
aam
loop
xlat
add
mov
sub
xchg
test
xlat
and
xor
dec
sub
add
add
scas
imul
out
cmpsb
add
lcall
cmp
cmp
push
add
xchg
add
add
subl
add
es
add
je
xchg
sub
sahf
xor
data16
daa
jge
xor
add
pcmpeqw
add
lcall
add
add
int
popf
sbb
inc
stos
loopne
and
mov
mov
xor
outsb
movq
aas
adc
push
add
add
and
jno
add
add
scas
sub
sarl
fnstcw
inc
add
add
or
fcoml
add
leave
add
mov
push
add
add
jecxz
xchg
add
enter
add
addb
add
mov
into
sbb
add
mov
fimuls
aas
daa
ficoms
iret
jmp
mov
les
or
xchg
add
arpl
add
add
aad
fdivl
cltd
and
mov
bound
mov
pusha
add
fsubrl
mov
mov
sbb
cmpl
xor
into
int3
cwtl
mov
adc
fdivl
jge
add
dec
xchg
add
xchg
add
add
add
add
lret
xchg
cld
sub
lcall
in
pop
mov
add
mov
mov
mov
cmpsl
jg
add
fimuls
pop
xor
inc
cmp
aaa
jl
add
mov
mov
xlat
hlt
add
jno
add
pop
lret
ljmp
add
add
add
psubq
out
push
dec
add
add
scas
mov
outsb
xchg
mov
jne
cmpsb
add
pop
es
add
add
les
add
add
testb
shll
add
pushf
daa
mov
rolb
mov
mov
jl
scas
dec
je
mov
sahf
ljmp
ffreep
jns
cmp
sub
add
add
adc
pop
popf
dec
lcall
add
dec
rolb
or
cmp
add
sti
lds
mov
add
lahf
mov
add
push
add
fwait
movb
lret
xor
mov
nop
add
lock
push
add
fwait
push
add
enter
add
mov
xchg
fucom
add
cld
out
add
movb
pop
cld
insb
arpl
pop
lret
loop
xor
cltd
loopne
cmp
add
pop
rolb
cltd
jmp
mov
mov
addr16
test
add
add
in
jl
shl
test
or
add
js
xchg
xchg
add
add
add
add
jo
push
add
mov
adc
dec
xchg
add
sbb
add
orps
mov
add
mov
or
pop
imul
jb
sbb
in
sbb
xor
imul
jbe
aas
inc
add
mov
imul
push
and
mov
jp
xchg
mov
sbb
pusha
add
cmpsb
add
les
adc
xor
sti
mov
rolb
dec
xor
das
adc
add
and
hlt
add
addb
mov
test
add
add
mov
add
dec
fwait
mov
add
add
inc
or
and
add
mov
pop
std
pop
mov
test
lcall
fldt
add
add
mov
add
add
cli
inc
add
dec
movb
fcompl
add
sub
xchg
lret
mov
and
sarl
jle
add
mov
mov
bound
mov
bound
mov
and
js
mov
daa
stos
mov
mov
pushf
mov
xchg
add
outsb
mov
sub
js
add
push
sbb
iret
stc
jo
dec
push
or
int3
leave
inc
add
aaa
push
add
ljmp
xor
inc
loop
dec
inc
add
sub
lahf
add
and
mov
add
mov
outsl
std
xchg
in
test
nop
add
mov
sahf
sbb
mov
pop
inc
sub
mov
add
add
lcall
addb
mov
fidivl
addb
mov
dec
lds
les
mov
add
fsubl
sub
andl
popa
stc
lcall
fiadds
xchg
add
cmpl
add
lahf
mov
add
sbb
dec
outsb
jecxz
add
add
aaa
stos
sti
inc
add
jne
or
rcrl
xchg
pop
dec
push
add
push
bound
mov
lea
sub
mov
jle
idiv
adc
mov
add
in
fistps
outsb
fwait
sbb
xchg
add
icebp
repnz
orl
mov
add
stos
xlat
fsub
movsl
lret
xchg
add
mov
add
mov
jae
add
mov
fmulp
and
add
adc
add
cmc
mov
xchg
add
add
ljmp
dec
add
cwtl
dec
addb
push
mov
test
adc
xlat
sub
add
jle
cmp
pop
and
add
pop
add
push
lcall
dec
or
add
imul
add
mov
add
lods
push
cwtl
jg
lods
mov
push
add
mov
add
testb
add
scas
rolb
and
mov
lret
test
pop
loope
iret
inc
add
test
inc
add
lods
jle
add
add
xor
sbb
pop
fidivs
add
add
inc
add
add
lea
jmp
cld
ja
bound
mov
mov
mov
insl
jns
fnstcw
fldl
loopne
jne
jl
popa
mov
add
jns
out
movhps
loop
inc
add
mov
pop
xor
mov
ss
mov
add
cs
call
inc
out
cwtl
adc
sbb
jp
push
add
jae
fs
mov
mov
loop
shl
add
add
inc
add
nop
add
sarl
push
add
add
mov
popa
lock
icebp
ror
mov
add
mov
add
decl
mov
and
mov
or
adc
addb
add
push
dec
cmpsb
add
jmp
xor
aad
jmp
xchg
add
add
xchg
fidivrl
fadd
add
jmp
scas
pop
mov
mov
pop
cmc
dec
jl
test
adc
rolb
add
pop
xchg
add
insl
rolb
lret
fcmove
or
or
or
sub
pop
cmp
jne
movsb
add
add
add
jnp
cmp
add
imul
shll
sbb
out
loope
xor
xchg
sti
jp
add
out
jg
mov
fnstcw
mov
add
scas
test
test
repnz
addr16
jge
add
shll
mov
inc
add
add
push
cld
movsl
sbb
movsb
add
add
add
sbb
jnp
jnp
lds
mov
xchg
jae
cli
jge
push
add
scas
loop
cli
mov
add
add
fld1
enter
add
inc
add
ljmp
add
ret
cmp
add
add
add
add
push
add
mov
mov
mov
mov
xchg
fcoml
ret
arpl
std
pop
xchg
xor
xchg
add
inc
push
add
add
add
add
add
addb
add
mov
roll
push
add
add
mov
stc
dec
jo
addb
add
add
push
add
add
test
add
stos
in
fildl
mov
inc
add
dec
sbb
aam
dec
push
add
add
add
dec
inc
add
lds
add
push
add
add
xchg
push
add
add
inc
adc
jl
add
stos
mov
mov
sbb
sbb
xor
add
mov
xor
push
inc
add
add
xchg
dec
adc
add
pop
sub
stos
jnp
movsl
cmp
add
add
add
cmpsl
in
add
xchg
add
int3
mov
incb
sbb
add
add
add
sbb
in
inc
mov
pop
push
add
add
sub
add
addb
shll
add
push
and
mov
xor
inc
push
xchg
dec
mov
imul
lds
movsl
rorl
sub
dec
add
mov
add
dec
xchg
lea
lods
xor
add
and
mov
inc
add
mov
add
add
jbe
adc
mov
aad
add
pop
pop
jmp
sbb
sbb
cmp
inc
pusha
add
or
cmp
mov
sbb
leave
push
popf
xor
dec
jecxz
pop
xorl
insl
inc
add
add
fstpl
decb
xchg
jbe
or
pop
inc
and
add
jb
cmpsl
cmp
js
lods
mov
out
insl
mov
xchg
hlt
add
in
xor
dec
jne
cmp
bound
mov
add
jp
add
add
jecxz
mov
iret
loop
pop
scas
iret
sub
movb
add
add
add
sub
add
loope
push
sub
add
add
lds
and
scas
dec
xor
mov
nop
add
fisubrl
cwtl
mov
movsl
push
call
add
mov
fmuls
or
add
add
add
xor
sarl
xchg
add
push
add
add
add
add
add
add
mov
sbb
icebp
lea
sub
add
xchg
add
push
mov
out
and
test
cs
add
cmp
add
mov
cwtl
sahf
addb
test
out
sahf
addb
sub
fldl
add
add
sbb
icebp
shr
adc
loop
mov
mov
adc
jno
inc
xchg
push
cmc
cmp
add
mov
cmp
add
add
add
add
jl
mov
pushf
xchg
add
and
mov
cmp
add
add
cmpsl
or
into
adc
data16
add
js
inc
add
and
add
addb
or
add
clc
push
push
add
jno
mov
adc
xor
add
bound
mov
push
pop
mov
or
xchg
daa
add
mov
int
add
mov
cmp
fdivl
push
jnp
sbb
add
mov
inc
add
add
add
pop
mov
mov
mov
dec
sti
gs
add
dec
bound
mov
add
adc
xchg
add
enter
dec
jns
xor
mov
out
iret
popf
or
and
add
aad
data16
add
lahf
inc
add
add
dec
insb
push
xor
mov
mov
add
add
xchg
test
add
add
mov
add
add
scas
mov
aas
xchg
add
mov
sub
add
add
xlat
test
movsb
add
mov
ret
mov
cld
add
das
out
add
add
push
arpl
fmull
add
in
les
sbb
ret
jmp
jbe
ja
fisttpl
xchg
add
bound
mov
ret
mov
mov
add
cmp
inc
add
scas
jmp
fstl
add
cmp
add
push
std
mov
add
sub
add
add
sub
testb
cmp
scas
sbb
push
jp
cmpsb
add
call
add
add
add
xor
enter
add
jmp
push
or
in
lcall
and
mov
jp
add
loop
sub
mov
jae
dec
arpl
add
add
mov
in
cli
je
lret
mov
psubusw
aaa
repz
aam
pop
iret
mov
add
add
mov
out
fs
xor
add
addb
nop
add
pop
cmp
add
pop
ret
sub
mov
mov
add
mov
mov
add
test
daa
pop
add
mov
ljmp
daa
jle
add
and
mov
in
pop
iret
sbb
xchg
das
mov
adc
pop
data16
bound
mov
or
cwtl
add
add
mov
inc
add
dec
or
add
xchg
add
sahf
xor
and
mov
add
loop
nop
add
add
add
movsl
lods
sub
daa
hlt
add
cmpsl
fmull
adc
xchg
add
add
inc
add
lock
add
pop
cmp
stos
icebp
cli
dec
push
add
mov
xor
add
dec
call
inc
rolb
cld
in
xchg
add
cmp
jb
mov
push
add
xor
insb
pop
lahf
cmp
add
hlt
add
add
push
sbb
das
mov
and
sub
mov
or
add
pop
push
mov
mov
hlt
add
sbb
inc
add
add
add
sti
int3
jne
pop
dec
lea
rolb
sbb
and
loopne
jbe
dec
in
pop
cmc
jmp
cmc
inc
jo
jmp
rolb
dec
mov
mov
sub
jp
sbb
jle
mov
insl
or
add
push
add
test
repnz
sub
add
add
pop
popf
xchg
ja
inc
fmul
or
jae
mov
xor
popf
sub
add
add
mov
in
testb
mov
mov
sub
mov
add
push
add
mov
add
cwtl
jg
and
loop
jne
imul
bound
mov
sub
add
hlt
add
push
xchg
add
rcll
add
movb
imul
add
add
mov
pusha
add
jmp
lock
pop
or
fmull
lods
subl
cs
repnz
push
add
rolb
pop
mov
sahf
test
cmc
dec
adc
inc
add
out
inc
add
stc
xor
add
pusha
add
jge
cmp
add
add
mov
add
push
inc
mov
push
add
mov
add
jnp
adc
add
mov
lret
sub
sub
mov
mov
pop
add
lahf
mov
cmp
xor
movsl
jle
sahf
sti
xor
addb
push
add
dec
into
in
pop
xor
mov
add
jb
jne
xor
mov
mov
scas
mov
add
mov
push
movb
add
mov
int3
mov
movb
add
in
inc
add
mov
add
aad
mul
ret
aam
pushf
out
clc
cmp
ficoms
insl
ds
add
jnp
outsb
testb
ljmp
jns
test
cmp
aaa
xchg
add
int3
sti
testb
push
pop
bound
mov
mov
mov
add
add
or
add
loopne
or
add
add
mull
add
xchg
test
adc
add
mov
adc
mov
popf
adc
std
xchg
add
mov
decl
mov
add
mov
sti
aaa
mov
add
out
adc
or
pop
fdivrl
jae
or
add
sbb
jle
add
ret
repz
sub
add
js
mov
outsl
pusha
add
add
add
or
cwtl
ljmp
fidivs
jb
lds
jge
adc
xchg
imul
jb
inc
add
and
in
inc
add
push
jo
out
cmp
sub
adc
jl
lcall
sbb
enter
push
add
mov
mov
popf
call
push
push
add
mov
add
outsl
mov
faddp
daa
xor
jns
addb
add
add
add
add
leave
push
adc
cmp
add
add
les
xchg
add
push
xchg
push
lods
pop
add
outsb
and
mov
loopne
test
ja
test
outsl
jge
xchg
sub
add
fdivr
cmp
ret
adc
add
inc
cwtl
jge
sbb
xor
and
add
int
xchg
jno
stos
addb
xor
cmpsb
add
push
add
add
pop
pusha
add
add
mov
lds
xor
adc
add
add
add
add
addb
or
cwtl
jg,pn
in
sbb
sbb
stos
dec
ljmp
add
scas
ja
cmpl
fldenv
mov
add
jecxz
add
xchg
pop
or
push
add
push
add
cwtl
xor
bound
mov
popf
mov
pop
fimuls
add
sub
out
nop
add
fnstcw
inc
add
inc
add
add
add
loope
out
sub
lods
lcall
mov
add
add
jp
sahf
addb
fdivl
add
lods
insb
xlat
and
dec
outsl
lds
icebp
xor
movsl
into
cmp
icebp
jmp
stc
ret
cmp
mov
add
std
pop
nop
add
add
leave
testb
std
rolb
xor
out
jp
jae
jne
test
sti
out
mov
lret
jbe
ja
add
daa
lock
lret
aaa
jb
xor
and
inc
add
lods
cmpsl
xor
add
lods
cltd
jo
testb
and
mov
test
add
add
jmp
inc
add
cmp
mov
ljmp
imul
sub
test
lahf
jnp
mov
or
mov
into
cmp
imul
inc
add
pop
cltd
inc
xor
mov
addb
add
clc
lods
pop
fldl
lret
or
rcll
dec
int3
popl
test
add
mov
mov
scas
xor
loopne
ljmp
add
popa
dec
add
add
mov
add
mov
add
stos
mov
bound
mov
stos
inc
push
jg
add
shll
add
add
sub
push
int3
outsl
lret
test
ja
test
lods
fwait
push
adc
add
pop
mov
into
inc
pop
jg
clc
xchg
mov
xchg
lods
dec
pop
push
add
lahf
sub
add
add
mov
pop
cmp
pop
rorl
add
push
add
pop
and
sbb
sbb
xchg
inc
add
lds
add
xor
pop
nop
add
lds
add
aam
lods
add
mov
add
call
jp
ss
int
aam
gs
push
fistps
add
add
mov
aad
lcall
add
xchg
mov
mov
and
xor
or
mov
pop
ret
addl
insb
push
mov
or
xor
pop
mov
push
add
stos
lock
cmp
cmp
imul
jns
add
repz
mov
xchg
add
addb
add
jb
push
add
xorl
test
push
add
mov
inc
add
add
add
dec
cmpsb
add
add
add
xchg
cmp
and
adc
mov
sbb
mov
cltd
mov
dec
jge
add
mov
cli
or
add
dec
mov
xor
add
nop
add
add
jno
cld
fstp
dec
imul
int
insb
pop
repz
jge
loopne
dec
push
cmpsb
add
adc
test
lret
int
xchg
clc
mov
add
add
mov
add
push
cmp
hlt
add
or
bound
mov
add
ficompl
and
mov
inc
mov
minps
mov
jne
add
mov
fcomps
dec
cmp
add
mov
aas
jno
add
or
add
movsl
cli
daa
mov
sub
lods
inc
add
lret
outsb
jae
pop
sbb
cmp
shll
jg
and
inc
repnz
pop
xor
test
movsb
add
mov
dec
inc
rolb
dec
testl
enter
push
inc
outsl
adc
mov
insl
push
add
fisttps
scas
push
or
push
pop
push
add
call
cmpsb
add
adc
mov
ljmp
mov
ficompl
mov
lock
add
sbb
cmp
add
cli
out
addr16
push
jno
jbe
sbb
dec
les
rolb
imul
xchg
add
add
add
ret
jg
inc
js
stc
and
mov
fcoml
mov
mov
add
sub
and
mov
add
add
add
add
mov
add
mov
jns
lcall
xchg
aam
and
mov
add
cld
fucomip
mov
pop
std
xchg
add
add
jae
add
je
jle
add
outsl
arpl
add
shll
add
and
cwtl
mov
leave
sbb
cltd
scas
and
add
jl
mov
and
and
mov
es
push
je
fwait
pmullw
sub
sbb
add
stos
iret
dec
dec
adc
das
mov
push
add
mov
add
mov
add
xor
sahf
xor
add
add
pop
mov
lret
popl
mov
stc
addb
add
add
jg
rolb
add
jge
out
je
fwait
or
add
mov
fbld
add
add
add
iret
xor
push
mov
sub
cmp
mov
enter
ret
add
fwait
out
addb
fucomp
in
bound
mov
mov
lods
xchg
movsbl
mov
or
test
je
repnz
add
aam
js
sti
inc
add
add
inc
shr
pop
aad
fcomi
mov
and
add
add
ret
cmp
pop
inc
pop
jbe
adc
iret
ds
add
adc
mov
jbe
and
push
add
cmpl
testb
je
ret
lods
into
out
push
add
in
cmp
inc
add
add
fwait
addr16
adc
push
add
sti
sub
mov
add
add
mov
and
jle
add
mov
insl
mov
add
mov
add
pushf
inc
add
aaa
cmpsb
add
loope
sahf
push
add
addb
add
addb
add
cmp
jbe
push
sub
xchg
pop
jns
jmp
add
jo
mov
add
lret
mov
push
jge
cs
mov
pop
pusha
add
shll
mov
jne
ljmp
add
arpl
add
movsl
mov
xchg
lods
add
pop
enter
call
lret
repnz
add
mul
ljmp
repz
js
addb
or
add
mov
jo
xchg
pop
lcall
pop
call
inc
add
mov
pop
adc
lock
sbb
add
xor
test
mov
add
pop
lret
and
add
mov
xor
add
rorl
sub
dec
mov
add
xchg
mov
std
xor
xchg
push
add
add
push
mov
fcomi
or
sbb
ret
cmp
fisubrs
add
mov
add
cmpsb
add
insb
rolb
pop
add
add
popf
jecxz
addb
adc
daa
push
add
mov
jl
cwtl
mov
test
mov
add
add
add
and
mov
subl
xor
iret
adc
rolb
xor
inc
int
test
add
add
loope
add
mov
add
mov
fisttpll
not
add
stos
lods
andps
lcall
push
sub
std
dec
sbb
inc
add
adc
mov
xor
addb
scas
jl
rorl
sub
push
add
and
mov
pop
les
sub
add
lret
mov
add
mov
movl
fstps
push
pushf
inc
movsl
sbb
add
jb
cmp
add
jb
addl
add
add
shll
add
add
sub
aam
nop
add
cmp
add
mov
add
testb
out
jo
lcall
flds
lock
xchg
push
add
aas
xor
stos
sub
add
and
mov
add
movntps
jp
fcompl
or
xor
add
mov
jle
in
insb
or
popf
xchg
cmp
out
hlt
add
pop
cmp
push
add
add
and
mov
add
push
add
les
mov
cmp
add
and
mov
mov
test
lock
xchg
add
mov
ret
jge
lds
fucom
gs
icebp
adc
inc
fdivrl
rolb
scas
mov
jb
sbb
add
add
mov
add
jno
int3
xor
aam
sbb
stc
stos
decb
add
add
add
add
fisubrl
ja
xchg
sbb
sbb
add
sub
add
add
xchg
xchg
add
rolb
inc
add
pop
ja
sub
add
dec
mov
sub
ljmp
sarl
add
shll
add
mov
xchg
add
mov
add
ja
mov
add
add
cwtl
pop
mov
add
add
mov
in
stc
aad
sbb
jb
jo
xor
add
inc
add
add
scas
sub
sbb
add
arpl
jecxz
push
xor
xor
inc
movl
imul
dec
mov
stc
xor
leave
push
loop
fldcw
add
push
add
mov
hlt
add
mov
sub
add
aaa
call
jmp
dec
bound
mov
mov
in
sbb
test
add
mov
les
add
mov
insb
repnz
sub
jne
or
out
jle,pt
mov
add
pop
mov
adc
mov
testb
arpl
mov
mov
test
add
mov
add
mov
mov
xchg
pop
add
add
ret
ret
add
cmp
scas
data16
lea
arpl
add
sub
push
popf
add
add
mov
xchg
add
xrelease
add
add
loope
test
mov
push
in
pop
repz
xchg
push
add
jecxz
ja
lds
movb
addb
adc
daa
scas
jb
mov
add
rolb
add
add
inc
add
add
pop
arpl
inc
add
add
add
inc
add
mov
repnz
test
les
add
mov
or
add
add
sub
jbe
out
repnz
jns
xchg
int3
xchg
leave
mov
dec
lods
sar
push
add
imul
dec
jg,pn
in
add
add
add
add
push
add
push
sbb
add
add
and
mov
lcall
clc
jae
xor
add
loop
arpl
lcall
push
jno
shl
repnz
and
mov
std
mov
add
mov
movsb
add
add
cltd
xchg
pop
in
aam
inc
add
add
in
adc
add
fwait
jb
and
fimull
adc
push
sub
xor
ret
hlt
add
add
sbb
add
arpl
add
add
push
add
add
les
inc
add
scas
add
subl
and
or
add
jmp
jmp
add
aas
inc
in
add
add
add
mov
add
add
mov
add
sub
add
push
add
xlat
icebp
xor
xor
sbb
add
sbb
add
add
add
ds
rcll
ljmp
xor
cmc
inc
add
movb
enter
xrelease
je
push
fiaddl
add
cmp
sahf
mov
and
add
mov
gs
jnp
add
je
pop
test
dec
cld
mov
xor
cmpsl
clc
inc
add
lds
les
mov
inc
xor
fadds
das
insb
mov
adc
push
inc
add
add
add
cmp
add
push
bound
mov
out
std
dec
insl
call
int
add
xchg
cmc
rolb
mov
jne
lcall
fcomp
rolb
and
mov
es
sub
add
stos
adc
movsb
add
ret
add
addb
inc
lods
rolb
addb
add
add
dec
dec
sbb
sbb
add
add
in
inc
push
pop
test
push
inc
add
xor
add
or
and
mov
add
add
mov
inc
add
add
js
add
add
das
sbb
xor
cmp
adc
mov
ret
xchg
dec
pop
hlt
add
add
add
add
dec
cs
ja
sti
jne
add
sub
mov
ss
adc
fcomps
les
outsl
jg
add
add
add
test
inc
add
add
bound
mov
add
repnz
stc
mov
cmp
add
add
les
xor
adcl
add
add
cwtl
mov
fndisi(8087
loopne
test
ret
data16
xor
inc
add
lret
lods
sub
add
data16
add
inc
xlat
or
jo
push
add
add
add
les
dec
stos
push
mov
add
add
add
pop
ds
dec
popf
or
add
loope
jne
repz
add
add
mov
xorl
pop
cmp
leave
pop
insl
in
mov
ror
push
add
xor
add
rcrl
mov
ret
std
cs
in
add
xchg
jmp
mov
add
rolb
jae
add
fsubs
sbb
int3
repz
stos
fisubrl
insb
sbb
xchg
mov
mov
add
add
push
add
sbb
add
push
jns
out
repnz
add
mov
pushf
mov
and
dec
jo
push
icebp
mov
add
inc
sub
aas
shrl
fwait
add
mov
mov
lods
stc
and
adc
rolb
popf
and
mov
add
pop
or
cmc
dec
jge
in
jecxz
add
inc
add
push
add
push
mov
push
das
ret
push
pop
inc
add
fistpll
xchg
add
add
aas
push
xor
xchg
add
push
xchg
push
stc
bound
mov
rolb
mov
test
mov
rolb
jecxz
xchg
cmp
inc
dec
add
xchg
add
mov
hlt
add
add
iret
lret
inc
jno
add
lock
sbb
testb
add
insl
repnz
add
mov
cmp
imul
mov
shll
pop
popa
push
add
and
and
fdivs
xchg
add
sbb
daa
je
insb
loopne
pop
sub
arpl
inc
ja
add
rolb
daa
add
add
add
imull
push
add
fdivrs
pusha
add
mov
cld
jge
dec
lea
mov
xor
xchg
adc
jb
inc
mov
icebp
add
lret
mov
rolb
sbb
lret
loopne
xchg
add
add
movb
daa
push
add
add
add
enter
push
add
mov
add
push
add
add
add
xorl
add
mov
je
push
add
cwtl
bound
mov
xor
push
add
pop
jns
orl
add
sbb
dec
gs
scas
aaa
push
add
add
insb
adc
add
insl
adc
mov
pop
dec
repnz
adc
jmp
push
add
add
add
mov
sub
iret
aaa
gs
add
jns
and
ss
xchg
or
leave
sbb
mov
fdivr
into
ja
add
add
call
or
adc
fidivrl
add
sbbl
loope
add
out
inc
add
mov
into
push
add
sub
sub
daa
push
dec
fstpl
imul
mov
insl
sbb
sbbl
add
repz
clc
inc
add
cmp
add
and
add
mov
sub
add
dec
cwtl
push
ljmp
ds
cmp
mov
jg
aaa
movsl
or
and
mov
shll
add
sbb
jmp
mov
jp
add
pusha
add
repnz
arpl
mov
adc
out
mov
pop
adc
mov
stc
mov
mov
fists
rcrl
mov
stos
and
inc
iret
inc
and
rcll
leave
add
jo
xchg
jae
pusha
add
in
sbb
mov
push
add
aaa
push
jecxz
add
jge
push
pop
mov
rorl
pop
and
inc
jp
and
add
sbb
outsb
test
adc
lret
pushf
cli
loopne
icebp
or
xchg
add
pop
dec
cs
sub
divl
add
adcl
mov
inc
add
sbb
add
adc
mov
mov
add
in
ret
mov
sbb
add
cwtl
xor
jle
add
sub
popa
and
jg
xchg
adc
pop
fists
push
add
add
mov
dec
jb
add
scas
adc
scas
xor
inc
add
add
pop
imul
loop
add
inc
add
pop
inc
add
xchg
add
pop
pop
data16
mov
lcall
pop
scas
cmp
loope
mov
or
cmp
das
pop
addb
fcmovu
sbb
add
add
add
outsb
sub
int3
jge
add
enter
push
gs
inc
jns
add
cmc
cmp
dec
stos
dec
or
ud2
pop
mov
movsl
imul
imul
push
add
mov
int3
mov
add
icebp
push
add
adc
test
gs
sbb
add
add
add
jp
cmp
loop
lret
nop
add
popf
fwait
mov
mov
xor
call
sbb
ficomps
in
jl
sub
add
enter
jp
mov
add
add
push
push
add
lcall
add
sub
add
enter
sbb
sbb
mov
push
add
mov
sub
ja
mov
fidivrs
aas
movb
jle
je
cmp
push
lea
add
mov
add
add
enter
mov
cmc
shl
add
aaa
xor
add
out
stc
arpl
dec
ror
inc
jae
nop
add
push
shrl
add
in
rolb
sub
add
and
sub
aaa
das
or
add
pop
cmp
cmp
add
mov
movsl
stos
std
or
add
aad
mov
add
cmpsl
jno
movsl
adc
lods
mov
imul
sbbl
mov
add
add
lahf
mov
cltd
and
rorl
sarl
inc
add
inc
push
mov
add
add
xchg
add
lock
add
add
push
add
add
add
test
add
add
xchg
mov
mov
pop
xor
fwait
push
add
add
paddw
addb
or
out
in
push
add
stc
sbb
daa
lcall
pop
lret
add
inc
add
test
push
add
mov
lret
lret
add
aas
pop
lcall
rolb
inc
add
xor
addr16
pop
outsl
rol
popf
je
cmp
aas
lret
xor
jecxz
aaa
cmp
and
xlat
fisubl
cmp
add
push
xchg
sub
pop
rolb
stos
push
add
add
mov
mov
popa
gs
mov
inc
loope
cmp
rolb
xchg
add
imul
push
add
bound
mov
sbb
outsb
mov
add
mov
add
fcmovnu
cltd
js
xchg
insl
sub
sub
pop
xor
mov
adc
addb
popf
jno
arpl
out
orl
inc
ret
add
stos
inc
add
add
add
add
sub
aaa
addb
add
xchg
xor
pushf
add
mov
add
imul
sub
jno
add
add
sub
fcmovnu
mov
adc
push
mov
out
cltd
test
or
mov
add
in
inc
or
add
fildl
cmc
insb
xorl
cmp
or
arpl
add
dec
dec
sti
das
mov
xchg
add
inc
add
mov
xor
add
imul
rol
sbb
dec
jae
sbb
pop
iret
out
int
or
add
adc
sahf
and
scas
push
or
rolb
pop
js
movsl
out
sbb
add
add
add
mov
cld
push
mov
add
out
push
add
push
pop
xor
add
jmp
popa
rolb
push
add
aad
out
jg
mov
icebp
stos
mov
sbb
jb
aas
pop
cli
mov
inc
test
out
fnstenv
addb
dec
pop
mov
ja
daa
aaa
js
sub
add
add
mov
add
add
add
adc
jp
add
mov
stos
pop
jmp
add
add
in
pop
cli
cli
mov
add
and
mov
sub
sub
rolb
push
add
jne
jbe
or
add
negl
hlt
add
and
xor
xchg
mov
jge
mov
sbb
sbb
sbb
sarl
sbb
pop
insb
or
push
add
das
pushf
mov
push
jecxz
test
mov
inc
add
adc
fists
shrl
add
add
add
xchg
gs
mov
lret
pop
ja
rolb
add
inc
icebp
adc
cmpl
add
sbb
imul
jp
pop
jno
pushf
add
push
daa
std
sbb
add
daa
sbb
push
js
dec
fwait
cmp
loope
add
add
add
add
popa
add
mov
add
js
fwait
dec
ja
pop
pop
mov
fwait
add
mov
lds
sbb
add
xlat
in
or
push
add
add
movsb
add
dec
mov
popa
outsb
sahf
es
pop
xor
pop
into
loope
mov
add
adc
mov
stos
lods
nop
add
add
cwtl
ds
add
add
out
out
push
add
pushf
add
pcmpgtb
mov
push
cs
add
cltd
jae
jge
pop
in
xor
cltd
cmpsl
popf
dec
sub
testb
loop
mov
fstl
mov
xor
fwait
xchg
lds
sbb
lock
jp
dec
lahf
inc
add
add
pop
ja
stos
or
add
cmp
add
add
mov
fcoml
and
mov
pop
and
mov
add
add
sub
add
int3
jne
out
fists
pop
test
dec
aad
mov
jge
sbb
add
cli
jbe
cmp
mov
xor
adc
add
outsb
iret
loope
mov
inc
add
add
cmp
cmpsl
mov
add
je
test
jbe
shll
cltd
pop
adc
cwtl
pxor
add
push
add
ret
es
xlat
jg
cmp
add
loope
addb
add
imul
loopne
mov
push
add
sub
add
add
add
add
add
sbb
add
add
inc
add
lods
testb
add
xlat
xchg
sti
iret
cmp
or
notl
add
add
add
repnz
add
xor
mov
add
pop
or
add
add
jl
add
add
xlat
cltd
xchg
add
xor
inc
add
add
adc
or
mov
sbb
add
mov
mov
fnstenv
add
ljmp
or
add
add
add
mov
movsb
add
call
sub
ljmp
aad
add
add
mov
mov
mov
pop
mov
add
xchg
add
mov
aam
in
and
add
cmp
lcall
fcompl
das
das
pop
mov
sti
lea
loopne
adc
sbb
fisttpll
sub
add
xchg
testb
or
add
cmp
add
xchg
sub
dec
sti
sbb
add
mov
inc
fimuls
scas
mov
ret
out
rolb
adc
inc
add
add
inc
add
imul
add
repnz
add
addr16
into
mov
sbb
sbb
xor
jg
imul
cmp
add
bound
mov
mov
lcall
add
pop
dec
push
add
cmp
sahf
cmp
add
cmp
xchg
mov
inc
add
mov
cld
fsubrl
movaps
sbb
lea
insl
out
ljmp
pop
lret
add
icebp
push
add
push
add
add
inc
mov
ret
inc
add
aaa
test
add
add
inc
add
add
add
sbb
add
add
or
icebp
popa
mov
cltd
ret
and
mov
loopne
pop
out
sbb
add
bound
mov
adc
add
addl
cmc
addb
test
pushf
ud0
adc
cmp
add
cmpsb
add
adc
loope
add
mov
sub
jl
add
fnsave
add
rolb
movsl
sbb
add
add
add
sti
add
add
lock
add
sub
loopne
xchg
adc
add
call
ud1
lcall
and
mov
add
add
add
jbe
rcrl
and
mov
add
inc
add
mov
jae
pop
add
mov
add
xchg
repz
into
sub
dec
arpl
iret
inc
add
add
cmp
mov
pop
mov
or
add
add
add
les
loop
jmp
out
pop
and
movb
add
add
leave
cmp
and
push
add
add
addb
ret
jne
xchg
pop
or
ficompl
leave
mov
popa
mov
mov
gs
je
addb
cmc
pop
aad
jno
add
pop
icebp
adc
mov
mov
add
add
add
push
add
lret
mov
sbb
fwait
push
pop
dec
adc
rolb
mov
add
inc
pop
stc
sbb
inc
add
add
jne
and
add
testb
add
pop
adc
stos
adc
jmp
xor
add
mov
in
cmp
addb
add
gs
add
add
aad
mov
add
out
pop
out
cltd
lods
cwtl
mov
sti
pop
inc
add
std
pusha
add
and
mov
add
inc
pusha
add
jp
adc
testb
pushf
push
jmp
jl
aaa
jmp
add
push
jo
leave
push
sub
ja
xchg
add
sbbl
rolb
lds
int3
lcall
mov
push
add
and
mov
jmp
pop
aad
adc
imul
add
movsb
add
mov
fisubrs
or
fistpl
or
dec
lret
add
dec
lea
or
cld
and
mov
add
add
add
jecxz
dec
in
outsl
add
mov
pusha
add
add
shll
js
add
movb
add
xchg
add
inc
ds
dec
push
add
jno
pushf
shrl
rolb
cld
lret
mov
add
addb
js
add
mov
add
lods
mov
sbb
push
fwait
mov
sbb
xlat
or
add
fists
jb
mov
mov
xor
or
rorl
iret
imull
add
pushf
je
addl
fdivl
add
pushf
fwait
adc
add
lcall
mov
outsb
stos
cmp
dec
std
jg
into
js
add
add
add
mov
push
mov
test
sub
inc
add
outsl
icebp
xor
or
outsl
or
xchg
daa
inc
adc
lock
adc
xor
push
addb
or
ret
mov
lret
xchg
bswap
dec
ret
sub
add
add
popa
xchg
add
sar
mov
mov
inc
rolb
stos
ret
cli
stos
push
add
or
movb
out
pop
je
data16
data16
add
pop
sbb
adc
repz
pop
push
add
rolb
das
imul
mov
add
add
dec
pusha
add
add
add
xor
aam
outsl
push
add
xchg
add
testb
add
dec
mov
repz
mov
jg
cmpsl
mov
jmp
xchg
add
pushf
ret
jbe
xlat
imul
add
cmp
add
pop
cmpsl
or
lods
cmpsb
add
add
add
mov
add
add
add
in
mov
push
daa
dec
push
inc
xor
mov
add
cmc
add
add
rorl
daa
in
dec
push
adc
cmp
add
add
xchg
inc
add
add
push
add
add
jecxz
sbb
inc
add
sub
push
pop
or
jbe
enter
add
add
sti
inc
add
add
add
add
add
jae
add
jnp
ds
and
lcall
xchg
push
add
sbb
outsl
test
add
pusha
add
add
int
test
add
mov
out
and
push
movb
add
add
ret
add
and
mov
lcall
cs
addb
test
pop
xchg
add
loope
es
lods
out
or
rolb
inc
add
add
clc
pop
adc
mov
add
movsl
mov
xor
add
rolb
sbb
jecxz
add
dec
jmp
add
bound
mov
imul
pop
je
xor
test
unpcklps
fdiv
pop
adc
call
add
icebp
repz
push
xor
pop
rolb
and
jmp
mov
mov
mov
push
sbb
or
lock
add
add
mov
lret
mov
cwtl
add
add
jl
ret
rolb
movb
add
repnz
jg
test
or
rolb
add
mov
lods
repnz
and
mov
push
cmpl
loope
nop
add
out
jge
add
inc
decl
and
add
sbb
mov
call
add
dec
in
insl
adc
rolb
scas
lods
lods
push
add
loope
sbb
rolb
add
xor
add
add
popa
das
test
repnz
popl
and
adc
je
xchg
bound
mov
dec
add
add
pop
and
add
dec
adc
bound
mov
movsl
pop
dec
push
jmp
mov
cs
adc
add
fadds
mov
add
push
cltd
in
addr16
fwait
dec
ja
add
jecxz
push
add
or
mov
push
add
jmp
fdivl
js
jle
add
cmp
and
mov
xchg
popa
sti
mov
cld
les
es
ds
ret
lods
icebp
cwtl
or
add
jmp
mov
adc
cmp
sub
jge
ret
mov
add
lods
ds
lods
and
aad
cwtl
lret
xchg
addb
push
add
add
idivl
inc
add
fdivs
ret
add
push
add
mov
pop
addr16
dec
jns
in
xchg
add
dec
scas
pop
stc
inc
xchg
add
add
add
and
push
ds
mov
push
add
mov
mov
add
rolb
sub
add
push
add
cwtl
mov
dec
and
mov
add
ret
mov
add
add
sbb
ljmp
xlat
push
push
inc
add
add
aad
in
out
movsl
data16
add
iret
or
les
shll
jmp
repz
mov
inc
xchg
daa
fdivp
test
add
add
add
mov
xchg
adc
rorl
lods
js
scas
bound
mov
inc
add
xlat
mov
stc
fwait
xchg
add
add
js
push
mov
add
add
add
enter
sbb
add
add
jp
xchg
add
int
movsl
dec
pop
out
pop
mov
ficoms
add
xor
push
add
fcmovnb
add
add
add
push
add
and
cwtl
movsl
xchg
add
jecxz
add
jb
adc
sub
add
jns
sbb
sub
add
rolb
inc
add
sub
xchg
sub
add
add
mov
in
add
xor
stos
push
add
mov
mov
xor
xlat
fxch
fidivrs
jb
aam
cmpsb
add
add
mov
ret
mov
dec
inc
add
addb
pusha
add
icebp
daa
rcll
add
add
add
add
fcoml
add
jo
leave
jecxz
add
add
add
cs
add
jb
fldl
and
in
and
mov
jno
jnp
add
mov
dec
mov
pop
and
ret
add
call
test
mov
add
cmpsl
adcl
xchg
add
mov
int
rolb
push
or
and
inc
jbe
ss
add
rolb
aas
mov
xor
xor
pop
dec
call
push
add
pop
dec
ljmp
rolb
add
mov
xor
test
push
push
add
add
pop
imul
adc
addb
add
cmp
repz
popf
jno
sub
scas
cld
rolb
pop
rolb
lret
add
pcmpeqd
mov
sbb
add
sub
add
add
mov
jp
adc
xor
pop
movb
push
sub
mov
in
push
es
or
add
add
mov
dec
into
pop
add
nop
add
and
sti
das
add
xor
add
rdpmc
xor
adc
add
sbb
in
and
mov
repz
adc
cwtl
lret
repz
addb
push
add
add
addb
add
add
xor
ror
xor
mov
mov
add
call
mov
adc
addb
add
add
and
pop
addb
sbb
sub
dec
jl
add
mov
insb
pop
cmp
bound
mov
les
rolb
addb
test
mov
jp
aas
or
jl
cmp
mov
aas
stos
js
add
lds
dec
jl
cmp
lret
adc
mov
les
mov
adc
sarl
add
add
add
cs
mov
add
add
add
rolb
and
mov
add
add
scas
dec
jp
add
movsl
orl
add
xchg
adc
cwtl
mov
inc
adc
sbb
push
jle
sbb
jo
sub
add
stos
push
inc
add
nop
add
jecxz
add
add
add
add
inc
add
pop
jge
jae
add
mov
setle
into
mov
mov
jge
mov
jle
xor
sti
jbe
adc
movsl
jae
ret
add
ret
sbb
or
mov
test
jns
add
pop
mov
mov
pop
ds
add
mov
mov
rorl
test
add
add
add
imul
mov
mov
in
test
add
or
mov
fsts
out
pop
pop
cmp
jo
pop
out
repz
bound
mov
add
aaa
pusha
add
push
add
outsl
xchg
add
dec
daa
inc
xor
ss
add
mov
add
dec
test
mov
fstp
pop
or
mov
push
and
mov
jne
mov
jle
xorl
inc
leave
cmp
add
xor
or
add
mov
dec
pop
mov
cld
or
or
lret
pusha
add
xor
cld
pop
ret
push
add
jmp
inc
arpl
add
push
add
jle
add
out
or
lcall
les
cltd
jbe
stc
xor
mov
mov
jns
fcmovu
scas
popa
mov
cmc
gs
jae
add
mov
jnp
jge
mov
add
sbb
ja
movsl
adcl
pop
testb
add
je
add
jg
mov
out
shl
jecxz
mov
add
pop
push
mov
sub
rorl
add
fildl
add
cmpsb
add
push
add
mov
add
pop
testl
and
test
mov
shr
ljmp
jno
fdivr
stos
leave
sbbl
inc
add
add
push
addb
add
add
xor
mov
or
scas
movsl
push
fsubrl
pop
cmp
dec
cltd
push
add
sub
or
shll
add
out
add
mov
add
or
scas
std
ja
push
add
jne
jno
daa
cld
pop
jno
add
rolb
outsb
nop
add
inc
add
aad
add
jg
and
mov
xor
xor
add
out
xchg
into
mov
mov
je
xor
adc
cmp
add
cs
pusha
add
fmul
pop
xchg
add
add
push
cli
daa
sbb
add
aas
dec
push
jb
push
lcall
add
jno
add
shrd
add
add
add
pushf
outsl
les
int
add
popf
inc
xchg
repz
sbb
and
push
add
jge
pop
test
mov
or
add
insl
push
add
repz
add
addb
jle
mov
mov
add
pop
adc
ljmp
dec
inc
add
cwtl
add
pop
xor
cmpsb
add
mov
pop
stos
add
mov
add
xor
add
adc
jle
leave
repnz
mov
fbld
add
add
in
mov
inc
add
add
add
xor
fisubrs
loope
ret
xchg
add
test
and
xor
lds
imul
lods
out
pop
mov
adc
jle
mov
mov
test
pop
in
jge
into
nop
add
mov
xchg
add
roll
sub
sbb
dec
les
jl
into
jl
aaa
pop
lahf
adc
data16
es
add
push
jb
data16
push
loop
in
pop
testl
xchg
mov
fcmovb
add
mov
iret
in
int
add
add
mov
add
jmp
testb
in
fld
add
cmpl
add
jl
das
stos
adc
inc
add
and
xchg
add
scas
cvtps2pi
mov
push
inc
mov
icebp
gs
dec
mov
xchg
cmpsb
add
push
xor
xchg
add
jecxz
xor
add
push
add
lahf
jecxz
inc
rorl
testb
sar
mov
aas
sarl
pop
repnz
add
add
mov
add
mov
sahf
int
xor
add
push
std
test
pop
pop
dec
jo
or
int3
pop
iret
arpl
mov
pop
addb
mov
adc
jg
add
stos
scas
mov
lcall
push
add
add
inc
add
add
add
add
add
aam
aas
cmp
mov
les
push
add
or
mov
lcall
add
add
cmp
cli
sahf
xor
add
mov
adc
pop
adc
test
add
bound
mov
pop
movsb
add
mov
bound
mov
add
and
jp
jecxz
popa
out
test
add
add
sub
add
cld
std
xchg
mov
add
push
add
xchg
add
into
or
loopne
aaa
xchg
cmc
sub
add
add
cltd
mov
popf
out
popf
push
add
mov
cs
cs
pop
xlat
mov
pusha
add
add
fimuls
addr16
add
dec
push
shrl
add
insb
jno
cltd
xor
jns
add
and
xor
add
add
dec
push
jno
setp
fstps
imul
roll
ret
inc
add
icebp
out
faddl
add
mov
pop
mov
cmp
loope
addr16
add
jae
into
jmp
add
fsubl
add
std
mov
dec
sub
cs
add
mov
rol
add
ss
subl
out
mov
and
inc
add
jge
mov
mov
rcrl
add
xchg
sbb
addr16
push
add
lea
lods
movsb
add
push
xor
push
add
add
ja
and
data16
loopne
leave
dec
push
add
adc
add
add
add
add
add
rolb
in
bound
mov
pusha
add
jo
jmp
jmp
adc
mov
daa
jmp
hlt
add
xchg
add
mov
xor
or
add
in
in
rolb
divl
add
xchg
add
xor
add
rolb
lods
push
add
ds
sbb
and
dec
leave
in
add
add
or
mov
dec
sub
and
jns
jle
add
adc
leave
jp
jle
or
add
pusha
add
mov
pop
and
clc
int
or
jp
hlt
add
sub
jno
sti
cmp
dec
outsb
stc
stc
push
movsl
ja
rolb
hlt
add
aas
cs
inc
bound
mov
imul
mov
mov
das
xor
xchg
xor
pop
sub
out
leave
aad
dec
lds
inc
add
add
aam
mov
mov
add
test
add
add
cmp
pushf
call
add
add
sub
add
cmpl
xchg
add
or
add
add
xchg
das
or
and
mov
mov
add
add
add
adc
pusha
add
jne
xchg
ds
repnz
inc
add
mov
add
add
jmp
lcall
mov
add
js
pop
xor
mov
jecxz
lods
int
movsl
fdivrs
mov
ret
mov
mov
adc
out
jmp
add
xchg
add
aas
dec
mov
sti
pop
cmc
loop
test
mov
dec
jno
inc
cmp
outsl
or
xorl
xchg
loope
in
or
ret
fmul
icebp
out
and
pop
dec
mov
aad
pop
imul
add
xor
mov
add
add
repz
sbb
outsl
mov
and
add
popf
inc
fwait
xchg
cwtl
ja
rolb
jbe
sbbl
sub
mov
push
ss
add
add
mov
mov
sub
repz
out
scas
les
jo
movb
lcall
mov
add
pop
dec
mov
xchg
add
mov
sub
aaa
mul
pusha
add
xchg
sub
add
cmpsl
jmp
add
push
add
add
add
add
add
push
add
loopne
add
mov
pop
test
sub
dec
push
add
add
mov
pusha
add
out
cltd
stos
pusha
add
sbb
add
mov
add
add
dec
ret
dec
das
ret
sub
add
mov
add
test
test
rol
imul
shl
mov
adc
add
mov
pop
lret
leave
lahf
jl
add
xor
mov
subl
add
add
add
add
fsubl
dec
xlat
jb
int
add
lods
pop
jmp
inc
out
sub
add
inc
add
add
mov
pushf
cmpsl
adc
add
gs
sti
test
add
xorl
add
mov
add
or
jl
add
add
cmp
add
or
add
add
stos
pop
pushf
pop
jb
cmp
add
add
xchg
add
jle
mov
add
inc
add
movsl
xor
add
mov
mov
movb
cmc
aad
movsl
test
loop
popa
xchg
push
add
outsb
and
or
aam
dec
addb
add
lcall
add
fwait
test
add
inc
pop
pusha
add
pop
aas
xchg
add
add
imul
ret
mov
sub
add
mov
cld
call
dec
pop
lret
mov
sahf
sub
xchg
add
cmpsb
add
pop
xor
adc
push
add
add
stos
inc
or
or
push
mov
push
add
add
mov
mov
movsb
add
dec
imul
fs
movb
sbb
add
add
popa
cmp
xor
aaa
push
add
out
rolb
cmc
cltd
add
mov
testl
adc
aaa
and
mov
mov
mov
addb
or
pop
or
mov
xor
jl
fbstp
add
add
add
jmp
int
push
add
mov
mov
dec
pop
jbe
je
xchg
add
add
hlt
add
add
add
jle
push
add
add
cmc
daa
insl
out
in
lret
add
adc
xor
cmp
cmc
test
and
or
pop
repz
jne
add
cmp
adc
xor
jle
add
add
add
push
add
fstps
js
add
imull
pop
mov
adc
data16
mov
push
insb
jns
add
pushl
out
push
lods
fimull
sarl
add
add
hlt
add
add
add
add
cmp
fisubl
push
fdivl
add
or
add
xchg
testb
movsl
test
sbb
mov
lahf
into
call
add
mov
push
test
add
ret
mov
push
mov
adc
pop
cmp
add
cmp
bound
mov
sub
mov
pop
stos
inc
movb
add
and
sub
or
add
cli
shll
mov
outsl
cmp
mov
dec
pushf
mov
mov
cmpsl
push
fsave
mov
mov
mov
je
ds
daa
inc
add
jnp
add
das
mov
aaa
xchg
mov
rorl
aaa
lret
cld
mov
out
movsb
add
test
add
inc
add
add
lock
sbb
add
pop
sbb
add
repz
repnz
add
add
mov
add
adc
lret
mov
xor
cmp
in
fwait
cmc
jns
jmp
add
clc
add
dec
pop
sbb
mov
mov
sahf
lods
mov
add
xchg
add
dec
ljmp
fstp
or
adc
scas
xchg
inc
icebp
jp
add
add
repz
scas
repz
call
add
sub
scas
inc
add
ss
add
add
mov
call
inc
xor
cltd
mov
mov
dec
fistpll
and
jecxz
mov
add
dec
mov
add
push
add
in
mov
stos
push
add
or
mov
scas
jecxz
ret
cmp
and
mov
out
das
ret
jecxz
fsubl
add
jg
xchg
add
in
add
out
stc
sbbl
aam
lcall
lret
jbe
mov
adc
outsl
xchg
fwait
xchg
add
add
add
inc
inc
add
add
add
add
aam
cli
lahf
cltd
inc
jbe
rolb
inc
inc
mov
lahf
addl
mov
push
add
sbb
add
ds
les
fidivs
add
add
or
insb
push
addr16
scas
testb
adc
decb
test
fucomp
jne
jbe
ret
add
mov
test
mov
add
sbb
test
mov
add
jo
cs
jg
add
lret
xor
xchg
add
add
sub
add
xchg
sbb
push
pop
xchg
clc
mov
inc
or
les
fscale
stos
insl
nop
add
xorl
add
push
iret
mov
add
add
shll
dec
mov
fidivl
push
cmp
jbe,pn
mov
add
mov
jno
fdivs
or
rolb
pusha
add
outsb
mov
add
add
add
xchg
sbb
push
iret
inc
add
mov
add
loop
cmc
inc
add
push
adc
aad
add
add
inc
add
aaa
lret
inc
mov
add
outsb
jmp
sahf
mov
add
ror
test
outsb
xor
cld
arpl
add
pop
mov
adc
push
add
xchg
lcall
pushf
lods
testb
add
cmp
add
stc
and
mov
xor
mov
fsubrs
jns
add
addb
mov
add
movsl
xor
hlt
add
mov
push
add
add
xlat
ljmp
mov
jnp
test
fcoms
inc
add
add
mov
movb
fistpl
inc
add
add
test
push
stos
dec
addb
repnz
or
mov
mov
sub
inc
rcll
mov
in
push
add
mov
out
cmp
mov
xchg
out
dec
pop
ss
jle
outsl
jb
in
mov
test
icebp
cmp
add
in
pop
push
add
add
push
add
aas
pop
lock
add
in
pop
xor
arpl
mov
xlat
pop
add
fstpl
fmull
add
add
sti
push
add
push
add
add
add
sbb
loop
call
push
mov
in
add
out
add
xchg
add
loope
imul
lcall
add
mov
add
add
mov
jecxz
mov
lea
add
popf
out
test
insb
add
inc
add
adc
add
stos
dec
jp
pop
xlat
rolb
loopne
xchg
add
mov
inc
add
add
fmull
sbb
add
frstor
pusha
add
out
jbe
insl
xlat
ret
add
call
push
add
aad
dec
add
mov
sbb
mov
inc
jp
out
add
add
mov
add
dec
mov
add
add
add
dec
jae
pop
mov
push
add
add
test
add
pop
jnp
ja
mov
leave
or
add
out
and
rorl
xchg
xor
xor
inc
or
add
fwait
clc
fcmovne
in
faddl
into
std
pop
inc
and
dec
sbb
test
mov
nop
add
add
imul
loope
add
push
adc
or
pop
push
add
mov
cmpsl
dec
add
add
popf
repnz
test
pop
pop
push
add
rolb
outsl
inc
add
add
or
jmp
pop
cmp
ja
add
jl
in
add
test
adc
xlat
les
cmp
or
adc
movsl
push
sub
add
cld
push
add
addb
out
xchg
and
push
addb
sub
scas
jo
lods
fwait
lret
push
jmp
add
xchg
pop
jp
nop
add
enter
add
das
mov
lahf
shrl
mov
jo
ja
add
pop
pop
pop
test
push
mov
aad
mov
fisttpll
cli
push
add
xor
in
add
push
add
repz
push
add
mov
repz
ss
jmp
add
decb
push
add
jmp
add
or
add
or
out
dec
mov
push
add
cmc
movb
std
leave
push
addb
fistl
imul
dec
cli
aam
xchg
xchg
or
add
mov
mov
hlt
add
lea
rcrl
jae
xlat
add
and
add
mov
and
push
or
xchg
mov
cmc
pusha
add
add
add
add
lret
push
ss
jne
mov
test
popf
aas
mov
xor
pusha
add
arpl
sbb
out
cmp
fiadds
outsl
addb
addb
loopne
sub
loop
xchg
pop
daa
xor
add
mov
add
adc
mov
decb
jne
fisubs
add
xlat
fistl
rolb
or
rolb
clc
repnz
lcall
mov
addb
fidivs
je
mov
loop
pop
lret
and
mov
clc
and
mov
add
push
add
inc
xchg
pop
push
mov
ret
add
add
push
add
into
mov
adc
xor
cmp
inc
add
in
addb
pushf
xor
subl
push
add
mov
inc
add
stc
loopne
add
add
add
mov
jbe
jg
inc
add
add
rolb
jno
in
out
add
add
add
sub
repnz
add
mov
cmp
add
add
nop
add
add
xchg
jne
pop
add
fstpl
or
rolb
push
lahf
fistl
fimull
inc
add
push
add
add
das
sbb
xor
add
adc
mov
fwait
into
mov
inc
add
add
add
add
lret
push
push
add
in
call
push
add
js
xchg
and
add
or
add
add
mov
add
out
xchg
das
pop
push
add
mov
dec
cmp
sbb
add
add
jbe
and
repz
rolb
mov
add
xchg
jbe
push
add
add
xchg
imul
stc
adc
flds
add
and
pop
add
data16
repnz
add
fstpl
addb
add
add
add
mov
in
aam
add
jns
add
lea
inc
add
mov
add
mov
daa
push
add
and
mov
push
add
add
cmpsl
jmp
jne
aam
mov
mov
add
addb
and
dec
sub
lret
push
add
sub
xchg
push
dec
fsubp
movsb
add
jg
pop
sti
add
mov
mov
mov
add
mov
pop
mov
and
pop
jmp
sahf
lret
pop
stos
push
scas
ret
add
add
mov
addb
add
inc
add
mov
adc
mov
xchg
add
add
test
popa
rolb
mov
lea
std
cmp
add
das
nop
add
pusha
add
fildll
addb
in
loopne
mov
push
add
add
add
les
pop
push
add
push
daa
jbe
mov
fs
add
addl
bound
mov
push
imul
mov
add
add
add
add
and
es
scas
sub
xchg
add
or
add
xlat
pop
pusha
add
add
jl
stos
cmp
add
insl
fistpl
add
mov
fidivrs
sarl
mov
lret
push
insl
pop
add
mov
addb
add
repz
add
add
cltd
lods
add
in
xchg
add
aad
in
in
out
add
add
fidivrs
negl
inc
add
mov
and
add
add
mov
cli
xchg
out
jno
dec
mov
jg
add
add
jg
mov
in
lds
cmp
add
add
or
add
add
xchg
jb
sub
adc
add
mov
jg
inc
add
icebp
mov
and
adc
add
aad
and
mov
mov
lea
pop
data16
add
add
add
add
add
add
movsb
add
mov
add
iret
fsts
add
sbb
loope
add
add
jo
sahf
add
mov
cmp
icebp
mov
cmp
aam
mov
xor
js
xchg
repnz
add
int3
call
dec
ja
pop
lods
pop
or
add
rolb
sahf
repnz
testl
mov
scas
cmp
ja
push
add
mov
lods
and
cmpsl
lds
adc
cltd
int
fidivrl
mov
lds
roll
daa
fstpt
dec
pusha
add
xor
addb
mov
lods
inc
loope
ja
add
cmp
add
add
leave
lds
add
loop
jae
xchg
dec
in
xor
int
adc
push
xlat
xchg
add
push
add
std
mov
cmp
add
mov
cmc
popf
ret
and
cli
lods
cmp
add
cs
fdiv
jae
movsb
add
lret
loopne
psrad
sbb
mov
fstp
repnz
add
add
lock
mov
fsubr
lock
add
aaa
fnstcw
xchg
add
cli
add
addr16
push
popa
enter
add
das
cld
mov
add
rolb
stos
push
add
rolb
das
mov
into
push
add
add
