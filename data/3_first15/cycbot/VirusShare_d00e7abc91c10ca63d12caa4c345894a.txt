xchg
neg
dec
scas
sbb
sti
int
inc
cmpsl
jge
mov
scas
mov
adc
fwait
inc
add
fucomip
pop
mov
sbb
scas
xchg
xchg
add
imul
add
add
add
add
sbb
or
add
jb
pop
sbb
ljmp
testb
inc
add
add
cmp
add
jne
ss
push
add
mov
std
xor
popf
loop
and
add
sub
add
mov
stc
jns
cmc
sub
aas
lcall
les
lock
cltd
xchg
add
addb
outsl
add
std
lahf
add
inc
add
fsubrs
je
lcall
add
add
lock
lret
xor
sbb
pop
add
xchg
push
push
add
xor
and
push
and
mov
movsl
leave
inc
add
add
add
shl
add
rolb
xchg
insl
fwait
add
mov
mov
add
pop
cmpsl
mov
pusha
add
dec
dec
xor
cmpsl
inc
add
add
test
stos
aaa
dec
xor
std
js
add
add
mov
mov
popa
or
sub
pop
into
insb
cmp
mov
xchg
pop
adc
add
jbe
sbb
into
xor
scas
data16
jno
sarl
jecxz
push
sub
fadds
add
push
stos
fmuls
mov
add
cld
in
mov
xchg
fucom
int3
mov
ffreep
add
push
add
loopne
dec
xchg
imul
loop
ja
or
iret
lcall
xchg
jo
jp
add
sub
add
aad
inc
add
mov
cwtl
inc
add
cwtl
jmp
push
add
push
add
cwtl
xchg
sub
add
add
add
aas
sbb
add
xor
add
repz
insl
dec
nop
add
mov
testl
int
add
lret
sub
rolb
mov
xchg
add
dec
ret
jno
xor
mov
add
push
and
add
ja
add
add
mov
mov
pop
push
add
add
dec
sahf
fidivl
scas
pop
iret
mov
ret
add
xchg
sbb
mov
xchg
add
or
cmp
add
add
xchg
rolb
jl
insl
les
addb
cmp
sti
jg
repnz
add
sbb
mov
sub
sbb
dec
pop
in
add
stc
cmc
mov
and
pop
jmp
add
jb
rolb
roll
rorl
cmp
add
add
in
pop
out
test
test
ffree
cs
dec
push
add
mov
add
inc
loopne
sti
cmp
lock
lahf
adcl
mov
dec
cwtl
mov
stos
movb
jbe
insl
scas
in
sbb
add
js
mov
mov
das
inc
aam
sti
inc
cmpsl
push
mov
mov
outsl
sahf
sub
dec
and
negl
dec
test
add
aam
lods
repz
add
lret
in
loop
push
add
mov
rolb
shrl
insl
cmp
addb
popf
dec
lret
add
add
popa
test
xchg
jmp
jo
jl
add
xchg
ljmp
in
mov
mov
inc
add
add
repnz
add
ficoml
rolb
movsb
add
add
add
adc
or
jne
add
add
mov
outsl
pusha
add
cmp
aaa
sbb
outsb
imul
sbb
mov
jo
out
or
imul
mov
push
add
add
movsl
rolb
sbb
add
pop
pop
shll
add
add
add
xor
push
add
add
rcpps
and
lcall
xor
inc
add
dec
push
add
leave
xchg
xor
or
call
add
mov
dec
cld
add
push
add
mov
add
mov
jecxz
add
push
add
mov
push
add
add
mov
mov
aam
into
adc
pop
push
sti
ja
jns
arpl
in
sub
push
push
push
cld
call
sub
mov
cs
movzbl
cmp
ss
lea
push
lea
push
lea
push
lea
push
push
call
cmp
je
es
lea
es
cs
es
call
test
jne
jmp
push
lret
icebp
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
lea
lea
sub
add
mov
sub
sub
push
pop
push
je
jmp
add
add
mov
xorl
call
sub
push
add
pop
aad
cwtl
mov
adc
enter
aam
pop
sbb
loopne
mov
sub
xchg
fisubl
add
jno
add
add
add
dec
mov
adc
mov
repnz
add
mov
add
add
add
ja
add
adc
rcr
mov
mov
lcall
add
add
and
mov
insb
lret
mov
int
xor
insb
inc
add
add
mov
ficoml
mov
jg
sub
add
movb
mov
push
ja
add
mov
fsubrp
and
add
loope
xor
cmp
add
add
xchg
mov
ss
add
dec
fsubrs
adc
sub
es
xor
add
xchg
add
movb
xchg
xchg
add
dec
cli
mov
add
stc
jbe
sub
add
mov
nop
add
sbb
inc
idiv
jle
icebp
out
dec
negl
test
xchg
cmp
add
sub
rolb
jecxz
arpl
add
out
cmc
xchg
fstps
mov
add
jbe
add
xchg
inc
or
add
cltd
scas
dec
outsb
jbe
ljmp
sbb
xchg
adc
in
in
add
xchg
add
mov
lret
push
jno
and
popf
mov
cmp
add
and
mov
add
add
scas
cs
arpl
loopne
subl
or
lcall
push
add
xorl
mov
add
add
mov
add
sbb
divl
push
jmp
add
add
jae
aam
mov
add
xchg
add
or
inc
rol
add
int
xchg
add
nop
add
lea
add
movsl
sub
and
cmpsl
inc
add
mov
add
in
xchg
add
andl
movsl
sub
add
pushf
xchg
jns
and
mov
add
jp
inc
cmp
xchg
pop
add
aam
mov
dec
xchg
lds
lcall
add
aaa
clc
add
into
aad
xchg
pop
cmp
add
iret
pop
mov
add
add
adc
mov
inc
add
mov
add
add
add
add
add
dec
cmpsb
add
pop
lods
jo
into
test
bound
mov
mov
sbb
add
enter
lahf
push
mov
inc
and
mov
mov
pop
cwtl
jno
dec
adc
add
mov
add
add
addb
xor
popf
jae
add
add
add
mov
imul
insb
psrld
js
or
jecxz
xchg
cmp
mov
add
jl
xor
mov
fnstenv
and
icebp
loopne
orl
lods
mov
jmp
out
mov
push
add
inc
pushf
mov
cmp
jl
dec
and
push
add
add
cmc
icebp
insl
lahf
jle
add
add
into
mov
insb
stc
lcall
fisubs
sbb
add
add
push
add
sti
out
cmp
fldcw
add
add
addr16
fists
add
jmp
outsl
fmulp
lds
adc
idivl
add
fnsave
jne
add
add
or
add
je
data16
add
out
dec
lea
in
add
add
dec
aad
jo
cs
push
rorl
add
jmp
add
adc
sbb
add
push
mov
add
sbb
add
push
mov
dec
into
in
pushf
add
add
add
add
mov
repz
ret
and
mov
dec
xchg
add
xchg
add
add
cltd
aaa
sub
dec
ds
push
add
mov
add
movsb
add
add
add
push
sbb
clc
add
mov
adc
mov
pushf
add
mov
add
pop
jae
or
and
mov
xchg
add
jmp
mov
dec
loope
or
mov
add
into
adc
adc
inc
std
xchg
xchg
add
add
in
loope
add
sub
ret
push
add
push
add
add
jo
ret
testb
bound
mov
add
mov
cwtl
xor
repz
mov
jmp
and
leave
insb
jp
ret
addb
xor
mov
add
add
mov
add
add
add
jp
add
add
inc
fwait
icebp
xchg
dec
aam
sub
movb
xor
bound
mov
testb
inc
add
call
pop
call
in
add
jl
add
out
add
add
add
call
xchg
mov
lods
mov
xor
sub
push
add
inc
jae
mov
add
int
and
jmp
clc
mov
js
data16
add
jecxz
add
fwait
jecxz
sahf
daa
pop
mov
into
fadds
sti
outsb
add
mov
mov
pop
aaa
mov
add
and
push
dec
add
push
add
xor
xor
and
mov
dec
ja
cmp
push
push
push
add
add
add
cltd
dec
mov
pop
std
aas
mov
push
add
jns
add
push
cmp
add
add
mov
rolb
inc
add
adc
xchg
add
daa
push
add
xchg
fsubl
add
testb
fnstenv
dec
or
cwtl
mov
fsubrs
add
mov
mov
fwait
ret
lds
add
testb
dec
data16
add
adc
orl
inc
ds
push
xorl
loop
leave
rcr
push
add
add
imul
jle
mov
call
add
fwait
dec
cld
xor
add
shll
not
add
cmpsb
add
test
ljmp
and
mov
add
mov
xor
repnz
mov
mov
xchg
lock
xchg
add
movsb
add
popf
lret
mov
add
scas
lret
push
and
jb
sbbl
dec
int
mov
or
add
sub
in
shl
repnz
mov
inc
jns
add
popa
jnp
add
out
loope
cli
cmpsl
add
cmp
add
das
fsubrl
adc
cmp
or
add
add
mov
mov
and
dec
fisttpll
add
fldcw
add
ja
sub
add
xchg
adc
add
ret
push
pop
test
xchg
scas
mov
add
mov
lret
add
add
add
lock
push
add
aam
aad
mov
push
push
add
add
cmp
jnp
cltd
lock
add
test
out
lret
add
jae
mov
cltd
jo
push
add
add
and
mov
pop
outsb
add
mov
add
imul
adc
add
push
ds
outsl
xor
dec
mov
push
add
sub
iret
xchg
push
and
cs
imul
mov
test
push
add
data16
mov
add
mov
inc
mov
call
imul
push
xchg
pop
and
enter
sahf
inc
icebp
fnstsw
loope
mov
add
cmovbe
test
shll
div
outsb
inc
add
pop
sbb
mov
inc
or
add
out
imul
mov
jno
add
add
mov
lcall
sbb
rolb
pop
sub
add
stos
stos
mov
push
push
popf
mov
jno
mov
rolb
repnz
add
dec
fldcw
into
bound
mov
cmp
sbb
mov
mov
movsb
add
xchg
jne
cmp
sahf
mov
add
xor
jle
xlat
jns
add
arpl
mov
add
mov
add
lock
sbb
add
add
add
rol
imul
or
cmc
or
push
fmuls
pop
outsl
sub
cli
or
stos
mov
jmp
fcoml
add
mov
or
jp
add
in
push
add
mov
insl
jns
cmp
fucom
add
push
add
mov
cmp
ja
add
add
add
xchg
add
sbb
arpl
cmp
cmp
cmpsl
pop
jmp
add
cmc
sbb
xchg
add
cmp
mov
add
std
pop
jb
loopne
xchg
notl
ret
imul
mov
jmp
jecxz
mov
sub
add
mov
sub
xchg
pushf
xchg
add
push
add
push
mov
insl
ljmp
das
in
or
mov
add
arpl
add
mov
xchg
add
or
ljmp
mov
add
cmp
add
test
and
mov
cmc
pop
mov
add
push
xchg
stc
lds
into
cmp
and
jo
add
xchg
or
add
hlt
add
add
push
inc
hlt
add
lcall
add
or
stc
adc
add
xchg
cwtl
lock
xor
mov
add
jne
jp
fadds
std
or
fimuls
iret
xchg
aas
xchg
add
cli
fcoms
sub
add
push
push
add
test
lds
add
in
sub
cwtl
data16
test
pop
addl
mov
arpl
add
push
add
outsl
dec
addb
loopne
push
add
int3
mov
xchg
rcrl
sti
pusha
add
rorl
fildll
xlat
insl
jp
push
jl
fmuls
into
in
sub
mov
mov
mov
xchg
testb
push
lcall
add
add
push
jecxz
add
cmp
addb
mov
imul
add
add
mov
jbe
mov
push
aad
loope
ret
in
cmp
push
add
addb
inc
add
dec
rorl
sbb
add
jp
cmp
int3
jbe
sub
add
inc
aas
and
in
pop
mov
add
xor
inc
add
xchg
cmp
ret
rolb
sarl
add
add
push
add
jnp
aas
mov
pop
inc
add
pop
pop
push
add
cmp
pop
inc
add
mov
add
add
sub
add
jo
add
adc
push
mov
add
add
addb
add
sub
or
pop
mov
add
in
ja
add
out
mov
sbb
sub
sahf
pop
test
das
or
add
out
pop
mov
addb
add
mov
dec
popf
inc
add
push
rolb
xchg
loope
repnz
add
mov
mov
mov
test
pop
mov
add
adc
xor
mov
js
add
add
jge
sub
add
pop
adc
stos
and
mov
and
stc
dec
push
mov
jl
add
add
add
cmp
jbe
int
lret
in
mov
add
dec
sti
lcall
add
cli
cmp
add
inc
add
push
add
add
xor
mov
fdivl
jne
add
sub
cmp
test
shrl
sti
and
mov
lea
add
sub
jecxz
jne
push
shll
lahf
nop
add
xor
and
mov
inc
inc
xor
jno
push
add
cs
add
or
mov
push
add
add
inc
xchg
icebp
insl
push
outsl
sbb
add
add
stc
rolb
rolb
add
neg
mov
jbe
loop
jge
add
xchg
adc
std
sarl
mov
rep
cmp
das
cmpsb
add
or
cmp
xchg
add
xchg
adc
mov
or
addb
addr16
dec
jecxz
add
fidivrl
hlt
add
fisttpl
iret
enter
ds
fwait
insb
rolb
pop
aam
dec
or
add
loope
scas
rolb
push
sbb
add
sub
sbbl
add
mov
mov
add
add
push
add
into
inc
int
dec
rolb
sbb
add
int
insl
addb
add
add
mov
js
fldenv
push
add
add
cmp
fsubr
lods
mov
cld
lret
add
add
test
add
xor
stos
pop
cwtl
pop
jle
add
sub
jne
pop
lods
xchg
cmpl
pop
movsl
push
or
sbb
imul
push
lods
sarl
add
dec
push
popa
and
add
add
std
outsl
testb
add
cmp
or
scas
cwtl
shll
arpl
add
jle
lahf
xor
xchg
add
add
pop
sub
dec
rolb
inc
movsl
aas
out
test
adc
add
jnp
in
cmpsl
nop
add
pusha
add
add
add
add
cltd
movsl
lea
add
xchg
adc
pop
faddl
add
and
xchg
add
movb
mov
add
xchg
add
add
pushf
cmp
xor
sub
add
imul
add
add
or
cli
jg
arpl
fmuls
test
xchg
add
dec
movb
in
outsb
or
add
mov
add
add
xor
mov
lock
test
mov
xor
inc
add
insl
and
cmp
jg
lret
jns
sbb
testb
jae
scas
mov
and
mov
add
sub
mov
leave
inc
add
add
add
push
xor
jl
add
into
inc
mov
imul
xchg
dec
aaa
rorl
popa
ja
xor
rcr
les
lds
sar
and
mov
sub
rolb
cmp
bound
mov
das
stos
xchg
fisubrs
push
les
sti
push
push
add
mov
adc
cmp
clc
pushf
sbb
add
jge
add
testb
fwait
ret
sbb
movsl
int
mov
mov
xor
mov
icebp
les
pop
mov
add
cmp
add
sub
hlt
add
add
mov
cli
pop
cmc
xor
insb
ja
outsl
mov
lods
out
jg
add
jne
jmp
mov
add
add
sti
sub
xchg
rolb
dec
nop
add
popf
pop
xchg
add
or
push
add
add
mov
mov
add
mov
add
loop
adc
add
cld
cli
aas
mov
inc
add
add
add
push
add
out
dec
sbb
add
pop
sub
push
cmp
dec
icebp
cmp
add
dec
out
enter
mov
add
dec
mov
aam
imul
mov
and
scas
data16
insl
jmp
fwait
movb
js
fists
dec
pusha
add
stos
dec
js
add
add
aam
jp
insl
sbb
lock
add
pop
mov
mov
jb
lea
ja
lods
gs
lea
clc
xchg
mov
cli
dec
or
add
lcall
xor
push
push
sbb
rolb
addb
int
cmp
add
and
xor
negl
add
add
scas
cmp
cld
lds
inc
add
mov
add
adc
add
dec
pop
xchg
cmp
add
add
aam
pop
dec
push
add
xchg
xchg
mov
test
mov
imul
outsl
inc
add
or
movb
out
int3
icebp
mov
outsb
xor
add
out
add
imul
add
popa
push
cmp
inc
add
add
out
lcall
in
mov
arpl
add
sub
mov
dec
xchg
add
push
jns
add
stc
add
js
add
add
repnz
addb
add
mov
mov
scas
test
dec
int
adc
sub
inc
add
adc
das
mov
push
sbb
jae
xchg
add
xchg
add
inc
in
jae
add
vpextrw
lds
add
add
sarl
loop
and
cmpl
jb
aad
push
add
adc
mov
stos
cltd
dec
stos
pop
ja
mov
arpl
int3
sbb
push
add
or
or
inc
add
movb
add
sub
out
sub
int3
movsl
fldenv
add
adc
xor
xchg
lcall
push
add
stc
and
mov
add
scas
pop
fiadds
add
and
mov
or
in
or
add
pop
jle
pop
xchg
add
xor
and
mov
add
shl
add
outsl
jp
aas
pop
je
pushf
das
pop
aam
sti
int
cmpsb
add
cmp
add
mov
add
mov
lods
jp
add
out
dec
xor
stc
inc
add
add
add
cmp
test
jo
push
jae
mov
add
adc
mov
add
push
add
and
mov
add
push
add
cwtl
test
jmp
or
jne
mov
mov
nop
add
add
sbb
ljmp
mov
sub
and
lods
call
in
jecxz
jecxz
lods
movsb
add
push
add
add
enter
xlat
dec
pop
adc
sbb
add
add
add
push
add
mov
lcall
xor
call
adc
add
add
pop
adc
cmp
ret
pop
cmp
jae
add
inc
add
xor
jl
fdivr
fdivl
xor
loop
dec
imul
andl
dec
ret
call
jae
add
add
cs
and
add
lods
mov
sub
cmp
testb
ljmp
lock
add
ss
test
add
xor
xchg
add
sbb
pop
mov
ja
test
mov
add
add
add
push
add
and
mov
pusha
add
mov
inc
add
pop
add
inc
pop
push
add
add
idivl
add
mov
mov
inc
jmp
inc
add
jne
add
xor
movl
lds
jne
add
lds
icebp
out
cmpsb
add
mov
add
push
rcl
add
out
sub
mov
add
add
addb
add
daa
mov
and
dec
daa
xchg
add
arpl
rcll
lods
arpl
lds
pop
inc
xor
inc
add
and
adc
call
jae
inc
add
xor
cmp
mov
mov
mov
mov
add
out
and
cld
loop
and
mov
popf
js
jae
jecxz
mov
repnz
adc
lods
dec
push
and
mov
les
repz
das
repnz
cmp
movsb
add
mov
inc
fidivrl
add
cmp
dec
hlt
add
xor
jge
addb
inc
inc
add
pop
stos
xor
mov
add
cmpsb
add
mov
rolb
popf
loopne
mov
add
inc
push
add
mov
lock
outsb
or
mov
add
add
push
add
rolb
cmp
mov
add
xchg
add
cmp
add
icebp
mov
les
lahf
mov
addr16
xchg
std
jle
add
mov
dec
cmpsb
add
add
ljmp
movsl
sub
add
adc
fucomi
lea
add
add
add
add
in
add
cmp
add
cwtl
cmpsl
fwait
mov
cmp
mov
sub
aaa
cld
jg
and
in
xor
cmpsb
add
add
xor
xchg
adc
cli
fisubrl
daa
adc
fwait
xor
shrl
ja
and
xor
test
mov
cmpsl
jo
iret
cmpsl
jge
data16
add
add
mov
test
loopne
inc
add
jle
ss
xchg
dec
mov
add
add
hlt
add
add
jle
adc
xchg
ficomps
push
popa
pusha
add
and
add
dec
xchg
out
movb
add
sbb
dec
mov
add
push
sbb
test
ljmp
cmp
scas
xor
cmp
xchg
add
jge
jnp
xchg
xor
xor
add
add
dec
les
sub
add
pop
into
xchg
addl
mov
ud0
add
cmp
aad
inc
icebp
sbb
add
ja
sahf
psllq
add
in
in
pop
mov
rolb
cwtl
xchg
add
ret
add
ret
jne
sbb
repz
lcall
mov
inc
jp
jle
cmc
jl
push
jnp
subl
mov
pop
faddl
mov
ret
movsb
add
dec
pop
mov
inc
add
add
add
cmpl
pusha
add
imul
je
inc
add
add
cmp
cmp
xor
jl
ret
cmc
cmp
addr16
add
lcall
xlat
push
add
push
add
addb
pop
das
shll
lds
in
jp
sbb
rolb
push
divl
cmp
add
xor
clc
xchg
outsl
mov
add
adc
scas
or
cld
mov
push
add
add
xchg
out
scas
xorl
add
add
fdivrs
add
cli
sbb
add
cltd
jae
mov
add
mov
xor
push
mov
or
shrl
add
mov
push
out
cmc
aad
jns
fidivs
test
xlat
cwtl
ja
mov
add
imul
int
add
scas
sub
sub
icebp
mov
push
add
add
lcall
add
lahf
and
add
bound
mov
out
data16
pop
std
lea
push
add
push
xor
add
add
jb
dec
sahf
int3
sbb
add
jle
add
out
push
pushf
ja
add
popa
push
add
xchg
jg
aam
inc
mov
push
sbb
dec
int3
int
cmp
ljmp
and
add
cmp
scas
fistps
add
mov
add
mov
xor
sub
lahf
int
lret
jl
add
call
add
add
subl
adc
jb
lds
sbb
add
aam
or
sub
add
pop
imul
add
add
test
mov
push
fwait
add
mov
add
cmpsl
loopne
inc
and
mov
int
aam
xor
xor
out
adc
dec
daa
add
mov
js
add
add
mov
std
push
imul
nop
add
les
xchg
push
sbb
mov
or
lods
inc
xchg
xchg
cmp
int3
sbb
mov
add
adc
mov
adc
add
out
inc
add
pop
call
jl
lea
lret
pushf
mov
add
fdivs
or
fisubs
cmpsb
add
pushf
inc
add
mov
cmpsb
add
add
add
cmp
rolb
fildl
dec
push
add
push
add
fmuls
pop
arpl
mov
jecxz
add
add
mov
add
rolb
mov
adc
out
add
frstor
aaa
in
and
mov
bound
mov
jg
inc
iret
popa
and
into
sbb
movsb
add
insl
xor
hlt
add
add
and
or
and
dec
pop
fstps
in
jg
xchg
adc
sbb
adc
inc
addb
stos
aam
ret
add
mov
add
sub
sub
add
pusha
add
push
add
repnz
out
mov
addl
jae
pop
fimuls
mov
add
push
add
dec
mov
and
add
icebp
cmc
repz
jnp
add
loopne
ljmp
jnp
inc
add
inc
add
js
cld
add
mov
add
pop
stos
aaa
stos
mov
lods
or
xor
jno
push
or
lahf
imull
cmp
pop
adc
fistpl
sbb
sti
call
ret
cmpsb
add
add
sbb
adc
jb
cmp
pop
inc
push
add
cmp
lea
add
bound
mov
pop
mov
cld
stos
xchg
xor
sbb
test
pop
movsb
add
jl
add
push
add
mov
add
jnp
mov
add
add
pop
xchg
add
adc
jge
xchg
iret
pop
mov
cmp
jg
cmp
add
mov
add
mov
and
xchg
loopne
sbb
mov
arpl
lahf
scas
mov
mov
add
mov
add
mov
outsb
xchg
addb
shll
pop
push
lods
xchg
les
clc
pop
add
add
xor
les
test
gs
leave
or
and
ja
mov
sub
loopne
cwtl
adc
in
fistpl
jne
mov
imul
popf
es
add
dec
xchg
add
add
movsl
cmp
test
add
jne
mov
add
dec
inc
add
movsb
add
mov
add
xchg
add
loopne
adcl
add
mov
imul
jmp
fsin
cmp
in
lods
sub
sahf
adc
lret
aaa
cmpsl
fcmove
dec
aas
add
mov
addb
icebp
xchg
add
dec
pop
daa
push
add
rolb
mov
xor
dec
lret
in
pop
les
insl
bound
mov
scas
fisttpl
pop
add
pusha
add
out
adc
and
add
or
add
pop
inc
add
cltd
xor
testb
aaa
test
add
add
add
add
hlt
add
push
sub
insl
sub
adc
pop
aam
test
mov
sbb
das
sbb
in
sbbl
in
mov
add
add
rolb
ret
cmp
pop
iret
fdivrs
add
rolb
add
add
add
jns
add
mov
arpl
jle
hlt
add
pop
xlat
aas
sub
icebp
cmp
mov
mov
adc
add
inc
lahf
scas
pop
in
add
dec
outsb
mov
add
and
mov
stos
int
add
cwtl
in
sti
fstl
add
and
icebp
sub
mov
xor
sub
addr16
and
add
testl
test
scas
lods
leave
imul
push
add
inc
scas
inc
add
test
lahf
pop
lods
test
add
add
mov
add
push
add
add
fld
add
xor
add
testb
mov
add
test
push
ja
add
xchg
nop
add
out
mov
ret
adc
mov
push
xchg
lcall
out
sub
out
sbb
add
fucomip
cmp
mov
add
cmp
mov
push
add
std
insb
xchg
adc
mov
xchg
add
push
sub
loopne
loope
ljmp
add
add
push
xor
iret
adc
pushf
mov
xchg
mov
stos
xorl
test
jge
mov
pop
sahf
mov
and
addl
dec
cmp
xchg
add
add
add
add
add
add
mov
data16
add
add
sti
test
adc
fisubrs
jne
add
pop
cmpsb
add
add
dec
xchg
mov
mov
push
xchg
add
addb
add
pop
sub
lock
mov
add
sub
add
add
sbb
xor
and
mov
in
mov
daa
or
cwtl
jne
add
adc
inc
add
cmp
std
xchg
add
cwtl
add
mov
cwtl
or
iret
push
jae
inc
sarl
inc
cmp
addb
xor
pusha
add
xchg
in
mov
add
bound
mov
cmp
sbb
jo
sub
mov
push
movsb
add
roll
add
sub
stos
dec
orl
ret
xchg
add
add
les
add
insb
imul
adc
fdiv
add
adc
roll
scas
lcall
test
and
mov
cmp
add
cmpsl
lds
add
repnz
mov
test
mov
jns
or
dec
jecxz
pop
jb
cld
movb
or
add
sub
jns
xor
add
iret
sub
dec
xchg
addb
lods
cltd
rolb
cmc
fldt
loop
stc
pop
addr16
ret
pop
wbinvd
in
inc
sbb
jae
jno
add
inc
add
movb
int3
dec
stc
add
xchg
jecxz
mov
movsb
add
pop
les
addb
mov
ret
pavgw
dec
stos
or
add
test
add
imul
sti
test
sbb
adc
arpl
add
mov
push
sub
add
repz
sbb
mov
leave
add
add
push
add
nop
add
add
add
add
jbe
pop
push
add
add
pop
pshufw
mov
cwtl
lods
push
add
lods
in
dec
addr16
add
fwait
cmp
pop
movb
dec
cmp
std
and
dec
jmp
out
adc
add
push
add
add
jl
pop
jae
test
cmp
rolb
adc
push
add
cmp
pop
jle
mov
add
pusha
add
and
mov
pop
int3
sbb
add
fwait
mov
jbe
rolb
jne
xor
add
out
lret
aam
jnp
testb
add
jp
loope
jns
in
stos
outsl
pop
xchg
outsb
mov
add
ja
vmovdqa
xor
ficomps
mov
les
push
pop
sahf
scas
aas
repz
jns
outsl
mov
mov
push
add
ja
add
add
scas
sbb
add
mov
xchg
mov
mov
xchg
sbb
push
dec
and
mov
mov
xor
and
mov
add
jge
mov
insb
daa
sbb
add
push
add
add
mov
add
add
and
mov
maskmovq
imull
icebp
outsl
dec
jl
push
add
mov
daa
inc
arpl
add
sahf
iret
fidivrs
sub
mov
jo
push
add
add
add
sub
add
add
mov
inc
or
dec
arpl
add
jp
std
cmp
xor
xchg
loope
add
add
fcompl
add
add
sub
add
fsubl
dec
mov
add
push
add
mov
int
call
cmp
xchg
pop
mov
mov
ja
add
gs
ret
mov
cmpsl
mov
mov
lods
push
roll
stos
fsubrl
mov
mov
add
testb
xchg
add
mov
add
add
add
cmpsb
add
mul
dec
jne
add
push
mov
add
faddp
add
aaa
adc
cmp
mov
add
add
mov
jne
add
add
lea
loopne
xchg
add
pusha
add
push
add
out
cmp
add
movq
xchg
add
fdivl
cld
lret
and
mov
mov
mov
and
arpl
adc
insl
sub
xchg
add
xor
ljmp
sti
arpl
imul
bound
mov
out
push
jno
cmp
add
fsubs
jmp
add
add
adc
fnstenv
xor
push
adc
xlat
and
mov
push
add
add
aad
ror
xchg
mov
jne
add
add
cmp
add
xor
call
test
inc
test
inc
push
add
add
pop
add
mov
jbe
and
mov
dec
icebp
add
stc
and
mov
jbe
sub
es
nop
add
add
bound
mov
jp
pop
out
pushl
mov
and
mov
adc
aam
addr16
mov
movsb
add
push
add
add
fistl
xchg
fstpl
jmp
imull
sub
add
pop
testl
add
lret
push
addb
add
add
cmp
call
add
pushf
fucomip
jp
repnz
jge
sbb
sbb
mov
dec
popf
scas
out
sbb
xchg
mov
push
add
xor
or
add
adc
and
test
nop
add
mov
add
pop
ljmp
mov
jb
jb
fdivl
pop
into
pop
jnp
sub
pop
and
mov
lcall
push
loop
mov
jmp
jae
add
arpl
mov
jbe
gs
pop
pop
mov
enter
in
adc
gs
dec
sbb
add
pop
inc
and
mov
aaa
test
add
add
aad
fdiv
push
stos
pop
enter
arpl
jae
icebp
ljmp
adcl
sbb
add
rep
test
in
xchg
add
cmpsl
mov
dec
adc
add
add
add
adc
add
add
js
cmpsb
add
popa
bound
mov
push
add
mov
mov
jnp
add
call
ljmp
ficoms
adc
call
lahf
fdivrs
add
add
insb
xlat
pop
cmp
addb
mov
sbb
add
repnz
add
fimuls
inc
add
mov
mov
cltd
jecxz
add
push
int
sbb
lods
xchg
jbe
int
test
add
or
dec
scas
mov
jbe
nop
add
dec
testl
push
mov
cwtl
fwait
je
fwait
mov
pop
fstpl
add
add
mov
add
hlt
add
cmp
pop
xchg
cmp
mov
dec
jne
mov
cmp
and
and
add
or
and
lock
add
je
or
xor
push
jl
xor
and
xchg
add
adcl
add
and
mov
pop
jnp
and
jnp
repz
sbb
pop
mov
add
add
mov
aaa
push
enter
mov
rolb
push
ds
mov
jle
cmpsb
add
loop
lahf
and
push
xbegin
movsb
add
add
call
add
les
sub
mov
in
hlt
add
rolb
jnp
out
xchg
pop
js
outsb
xchg
fimuls
mov
add
dec
push
mov
adc
xlat
adc
ret
add
add
fimull
bound
mov
mov
dec
sub
daa
sub
and
add
pusha
add
add
add
mov
mov
data16
jae
add
std
jmp
xor
pop
pop
add
inc
outsl
addb
add
dec
stos
cmp
mov
rcll
orl
cmp
imul
add
sub
add
ret
fmuls
add
add
shrl
lods
and
mov
add
cmc
mov
mov
jb
sbb
push
rcrl
sbb
mov
call
aam
xchg
add
and
movsl
add
xor
imul
add
push
sbb
add
scas
insl
xchg
ja
data16
roll
arpl
add
in
dec
decb
or
scas
movb
add
mov
lds
jmp
add
pop
or
mov
inc
add
mov
bound
mov
int
inc
add
push
push
add
incb
les
imul
cmc
into
pushf
pop
pop
inc
add
add
add
mov
dec
mov
mov
add
pop
js
loope
push
outsl
cmp
add
fstpl
fisubrs
add
mov
sbb
jmp
sub
add
jbe
ret
je
addb
imul
dec
mov
push
add
sub
add
push
mov
add
sbbl
add
test
fstpt
lahf
jae
xchg
add
add
mov
mov
dec
sbb
add
dec
mov
popf
add
sahf
pushf
mov
dec
call
sbb
add
add
push
jge
test
movsb
add
loope
add
mov
lods
daa
cli
jae
jmp
add
lods
out
push
add
add
add
pop
imul
mov
add
lds
fwait
adc
int3
push
pop
mov
outsl
push
lods
cmp
lahf
push
add
mov
xor
or
add
add
add
add
xchg
into
outsl
add
mov
add
mov
adc
in
cmp
add
icebp
out
mov
lock
inc
pop
and
mull
pop
cmp
sbb
add
add
lods
clc
lret
sbb
cs
add
add
pop
inc
mov
in
mov
lods
mov
push
add
testb
sti
mov
xchg
xor
xchg
add
jge
cmp
mov
sub
sar
outsl
adc
add
add
push
add
add
add
add
xchg
add
gs
add
add
and
mov
test
out
sub
mov
sub
add
addb
daa
sbb
push
ds
popl
add
inc
jbe
ror
jnp
cli
jg
xor
add
test
jo
adc
dec
xchg
fsubrs
in
popa
mov
add
cmp
outsb
pop
mov
jle
movb
sub
cmpsl
roll
lock
add
mov
cmc
in
sbb
jnp
add
inc
add
cli
cmp
rorl
std
cmp
xor
inc
fcomps
add
add
leave
mov
int
xor
loope
cmpsb
add
sub
cltd
repz
nop
add
add
pop
test
add
testb
aas
lret
data16
fdivl
movb
add
stos
and
fcoml
add
mov
add
add
add
add
bound
mov
xor
pop
sbb
mov
adc
fcoms
xchg
mov
add
xchg
add
and
aam
and
add
jp
popf
or
add
cmp
sbb
pop
icebp
pop
cmc
mov
mov
repz
shll
add
or
jmp
stc
push
add
inc
jno
cli
mov
jb
sub
sahf
mov
add
and
mov
pop
loope
push
add
pop
ja
inc
mov
sub
scas
lret
push
add
rolb
dec
jo
xor
addr16
jecxz
into
jg
rolb
imul
add
into
data16
add
add
add
mov
outsb
loop
std
rol
mov
clc
mov
jns
add
aas
inc
add
xchg
fnstcw
cli
mov
cmp
adc
ds
imul
mov
and
mov
or
add
adc
and
mov
icebp
jecxz
xchg
movb
add
xor
or
adc
push
mov
cmpsb
add
outsb
int3
push
add
add
add
add
xor
lcall
rcll
and
mov
add
add
test
aam
rdpmc
cs
insl
out
xchg
add
popf
push
add
sbb
daa
xor
push
add
mov
mov
ljmp
das
or
addb
push
daa
mov
add
rcrl
js
inc
or
add
add
add
add
and
mov
add
add
mov
adc
xchg
bound
mov
add
in
add
add
inc
enter
rolb
shll
sbb
add
jae
add
add
push
add
cmp
add
add
cld
cmp
out
loop
sbb
mov
sbb
add
repz
iret
movsl
rolb
in
add
add
mov
adc
or
ljmp
outsl
jmp
xor
testl
enter
add
std
movsb
add
filds
nop
add
add
add
sbb
dec
push
jmp
add
add
into
and
dec
sub
dec
mov
pop
ds
addb
addb
push
add
aad
mov
mov
faddp
add
adc
xor
mov
adc
dec
in
in
add
add
dec
js
or
push
add
add
loop
dec
and
inc
pusha
add
scas
andl
add
enter
dec
pop
ja
push
add
add
add
add
add
adc
push
add
das
jbe
aaa
in
jecxz
imul
lds
bound
mov
add
add
stos
dec
mov
ret
pop
jg
inc
add
jbe
add
inc
add
add
mov
push
aas
stos
aaa
add
add
test
faddl
mov
pop
dec
mov
sbb
inc
movsb
add
leave
jno
push
add
add
add
and
hlt
add
ret
mov
add
and
xor
add
push
mov
les
bound
mov
add
push
push
cmpsb
add
add
mov
dec
pop
dec
add
add
add
adc
add
adc
stos
mov
jmp
aad
repz
mov
ret
mov
mov
mov
push
inc
addb
or
cmp
and
mov
leave
aam
sub
mov
jl
rcl
add
nop
add
pop
sarl
add
rolb
aas
mov
jmp
xor
aas
add
mov
add
jnp
jg
xchg
fstl
add
mov
sbb
shll
popf
or
cmp
add
add
jmp
add
movsb
add
add
add
add
jns
add
inc
add
jne
cmp
mov
add
aam
adcl
xor
in
jecxz
daa
jl
aas
pusha
add
testb
mov
xchg
arpl
add
loope
jle
add
insl
inc
fbstp
jl
add
mov
pop
cltd
or
lcall
add
or
add
inc
test
sub
add
pop
ret
movsb
add
cmc
push
inc
add
add
rcll
mov
xchg
sahf
lea
add
xchg
cmpsl
addb
cwtl
xchg
add
cwtl
push
add
in
in
lods
add
insb
nop
add
mov
sub
cmp
cmp
push
mov
inc
add
in
repz
mov
add
and
fdivs
mov
jns
stos
ds
cmp
xlat
adc
aam
sbb
in
or
ljmp
add
aam
push
add
mov
add
test
and
mov
test
mov
pop
push
in
add
mov
inc
add
rolb
pop
mov
cmc
lret
adc
or
sbb
adc
add
sbb
loop,pt
in
cmp
pop
jl
add
xor
push
ds
repz
sub
movb
pusha
add
cli
dec
dec
insl
adc
movb
test
out
mov
add
and
sbb
in
aas
vpand
add
add
add
add
pop
jo
aas
out
or
add
add
add
add
mov
andl
in
mov
cld
xchg
add
cmp
and
mov
add
add
add
je
data16
inc
add
data16
add
add
mov
mov
ja
insb
pop
jno
add
mov
aad
jl
sub
add
aam
jnp
add
add
add
mov
frstor
xlat
dec
push
add
int3
shl
add
add
jmp
inc
add
add
sbb
add
fwait
jge
lret
lea
add
mov
inc
stc
sub
aam
mov
rolb
sbb
add
add
ret
fadds
inc
movsl
out
fstl
iret
insl
sub
push
add
mov
mov
jo
inc
add
add
mov
add
add
jo
dec
cs
add
push
inc
lock
xchg
fwait
dec
or
dec
mov
pusha
add
aad
jl
and
mov
xor
add
and
cmp
mov
cli
adc
add
inc
add
add
inc
mov
push
add
xor
movb
add
add
jo
cmp
add
add
and
mov
rcl
xchg
cmpsb
add
ret
jle
mov
push
mov
and
mov
fdivl
loope
popa
mov
data16
add
ret
xlat
mov
add
cwtl
scas
fisubrs
sahf
addb
jle
insl
or
add
data16
mov
lahf
push
cli
inc
into
push
adc
dec
aam
jne
add
mov
push
cmp
push
add
clc
sqrtps
sti
pop
inc
add
mov
add
stos
addb
xor
xor
or
sbb
add
add
dec
nop
add
sbb
leave
iret
mov
lret
jb
sub
push
add
sbb
lods
ret
push
add
or
js
add
rolb
and
mov
aad
lods
fildl
mov
ret
add
aaa
add
xchg
pop
xchg
mov
or
das
pop
push
adc
add
popa
mov
and
mov
add
cmp
xchg
mov
adc
mov
xchg
add
push
add
and
add
mov
add
add
aaa
push
inc
add
or
sbbl
pop
enter
pop
xor
flds
jnp
push
add
cmpsl
mov
xorl
add
add
inc
add
add
jecxz
std
or
call
sub
js
xchg
add
add
inc
mov
pop
adcl
lcall
mov
mov
in
add
repnz
daa
pop
mov
lods
addb
addb
in
dec
cmpsl
fistl
adc
pop
mov
mov
inc
add
or
mov
rolb
sti
pushf
std
dec
imul
adc
add
iret
mov
rolb
pop
aam
addb
popf
pushf
aad
mov
mov
sub
iret
dec
dec
std
mov
jnp
xorl
add
ret
jbe
inc
add
test
stos
pop
jp
js
and
popf
cltd
pop
addr16
mov
dec
mov
mov
jecxz
call
add
add
add
mov
add
fstl
clc
push
ret
dec
fidivl
add
mov
adc
cmpsl
test
push
mov
xchg
fldl
pusha
add
rolb
jmp
add
das
sub
mov
sub
xor
mov
outsl
adc
fisttpll
sbb
adc
add
add
add
lods
mov
xlat
pop
mov
lret
mov
cs
addb
imul
pop
dec
xlat
xchg
pop
loopne
dec
scas
mov
popa
mov
cmpsb
add
cmp
add
ja
mov
shrl
add
add
push
mov
add
push
mov
mov
push
lea
sbb
fdivs
inc
add
pop
mov
xchg
add
add
or
sub
pop
enter
inc
add
addb
add
add
ds
out
and
mov
gs
inc
add
push
add
add
ss
xor
ds
dec
aam
mov
add
cmp
mov
xchg
adcl
dec
xor
dec
fimuls
add
sub
jb
js
enter
add
add
mov
and
mov
add
add
push
add
testl
cltd
mov
out
pop
mov
jb
add
push
add
mov
jl
sub
or
jno
add
addb
push
jge
dec
add
mov
add
pop
aad
dec
popa
dec
push
or
mov
jmp
jle
jo
cmp
add
mov
add
add
add
add
xchg
inc
add
add
dec
xlat
mov
aad
add
jne
mov
dec
repnz
mov
cs
xchg
jmp
test
add
imul
mov
mov
mov
outsl
mov
add
sahf
imul
add
dec
addb
xchg
add
add
pop
pop
xchg
mov
add
testl
cmp
push
stc
clc
or
xor
ljmp
pop
sub
lods
aad
add
testb
add
adc
dec
sub
repnz
movsl
push
add
add
mov
add
add
cli
inc
aas
or
addb
add
mov
sbb
call
int3
sahf
clc
loop
push
jp
rolb
dec
rcl
add
outsl
jle
je
out
fistpll
and
pop
pusha
add
inc
cmp
add
add
dec
arpl
js
pop
in
inc
add
fstpl
inc
add
add
aam
jl
dec
sbb
add
mov
lock
jp
decl
scas
lds
add
andl
add
lods
mov
fbstp
sub
add
lcall
lret
mov
movsb
add
les
or
adc
ficoms
add
add
cs
add
lods
gs
add
icebp
mov
loop
mov
mov
mov
movb
add
inc
add
mov
out
jge
and
das
lock
leave
clc
push
add
cmp
add
cwtl
hlt
add
push
dec
cmc
aas
push
add
mov
add
pusha
add
in
dec
jns
mov
imull
jbe
xor
cmp
mov
add
add
add
cld
rolb
add
or
push
add
add
mov
addr16
out
add
push
data16
add
add
adcl
jmp
mov
testb
add
cltd
inc
add
data16
mov
scas
cld
pop
inc
add
add
inc
add
add
push
repz
aaa
aad
pop
cmp
add
aad
xchg
add
add
add
sbb
jecxz
jbe
add
inc
add
cmpsl
rolb
adc
add
jp
mov
sub
and
mov
jle
add
cld
mov
add
faddl
movsb
add
mov
scas
xlat
adc
lock
cmp
fisttpl
push
add
fisttps
stc
iret
lds
rcll
pop
in
int
add
add
inc
add
into
pop
loop
dec
mov
xor
add
add
mov
stc
push
add
outsb
aaa
cli
mov
add
cs
or
iret
pushf
test
fwait
mov
lds
add
sbb
cmp
ds
aaa
in
mov
js
cltd
cld
sbb
push
lahf
jae
dec
mov
clc
into
dec
push
lods
inc
clc
int
xchg
or
test
sub
sub
movsl
sahf
pop
adc
or
add
insb
data16
add
adc
aad
mul
add
jb
sub
add
cltd
dec
fisubrl
mov
adc
sti
push
sbb
pop
xchg
sbb
jne
add
add
data16
cltd
jne
add
mov
add
or
fwait
mov
add
jge
je
sahf
sahf
out
mov
add
in
add
xchg
add
pop
vsubpd
in
mov
mov
les
pop
inc
add
mov
imul
dec
insl
fwait
push
ja
stos
rolb
jge
push
add
xor
xlat
push
inc
add
add
fcmovb
add
dec
sbb
cltd
pop
out
testb
test
add
add
fcompl
push
mov
add
lcall
cs
lret
pushf
mov
push
add
movsl
rolb
xor
iret
xchg
add
imul
push
add
add
jge
add
add
imul
jge
int
pop
jne
add
push
add
inc
daa
ret
sbb
jns
lea
daa
cmp
stos
pop
call
xor
add
add
testb
testb
add
dec
jmp
insl
sub
movsl
xor
outsb
cmp
sbb
add
add
add
add
add
testb
add
add
add
cmp
jl
xchg
adc
cmpsl
xor
icebp
mov
repz
sti
mov
jg
jmp
jg
add
cld
repz
pushf
sbb
movb
adc
loope
movb
jb
xor
mov
jmp
add
add
cmpsb
add
and
mov
in
cmpsl
sti
push
add
add
int
arpl
inc
lods
adc
add
add
add
jecxz
add
add
mov
pop
int
add
add
dec
mov
add
add
frstor
daa
test
lods
mov
insl
jmp
ljmp
add
sbb
dec
ljmp
rolb
fptan
add
ret
pop
add
sub
je
xchg
and
jbe
out
add
gs
ficoml
ja
add
add
lret
rolb
add
add
add
add
mov
je
push
data16
test
jmp
mov
dec
rolb
add
ffree
jbe
sub
add
adc
in
fildll
mov
add
add
sbb
cmp
lahf
mov
mov
jb
jae
xchg
add
push
add
adc
push
add
scas
add
mov
push
add
jne
jae
add
xchg
or
add
add
fisubl
add
aad
adc
xchg
das
push
sbb
mov
in
xchg
xor
push
add
add
pop
gs
popa
add
cmp
add
sub
mov
in
sub
fnop
add
iret
mov
lcall
add
xor
pop
movb
cld
and
mov
int
aaa
sbb
add
add
stos
cmpsl
aas
and
add
add
loopne
into
lods
fcos
and
int3
out
and
and
add
dec
fimuls
ja
int
dec
sbb
xchg
rolb
or
add
bound
mov
out
out
xchg
and
popa
adc
mov
fildll
daa
adc
or
sahf
imul
cs
in
incl
xchg
xchg
add
mov
add
xchg
int
add
out
push
add
add
inc
test
push
inc
add
mov
add
xchg
add
add
xor
add
add
sub
rorl
mov
rolb
sub
add
push
inc
add
xor
mov
lret
add
jo
les
mov
add
adc
ret
mov
daa
cmp
test
inc
add
cmp
movb
add
orl
stc
cmp
cltd
or
out
out
icebp
sbb
addb
add
add
loope
fildll
lahf
mov
add
sahf
shrl
add
jns
jae
adc
mov
push
sub
pop
aaa
imul
and
out
icebp
xor
cmp
add
xor
add
rep
fnsave
push
add
ret
xchg
jns
loopne
cld
sti
fstpt
sub
add
repz
xchg
das
dec
sub
in
adc
mov
loope
add
add
or
inc
add
push
add
pop
fistpll
imul
cmpsb
add
cwtl
mov
mov
pop
dec
xor
add
push
add
add
cmovbe
aam
jp
add
flds
stc
fimull
in
jnp
add
add
mov
pop
mov
push
sbbl
adc
test
cmpsl
fwait
inc
dec
or
pop
out
pop
xorps
sub
dec
sbb
push
mov
lods
pop
lea
add
in
add
add
aas
bound
mov
cmpsl
mov
cmp
mov
pop
pop
std
imul
mov
sub
jecxz
add
adc
fisttps
adc
jp
xchg
jmp
add
loop
push
add
cmpsl
xchg
ljmp
add
rol
lcall
add
pop
jl
and
mov
add
rolb
pop
sbb
daa
test
add
add
dec
add
mov
add
outsb
xor
add
cmp
or
pop
xchg
pop
mov
sub
add
mov
mov
dec
xor
testb
movsl
jne
mov
outsl
xor
push
add
and
das
or
mov
int3
int
iret
sbb
enter
add
add
mov
add
mov
ret
jle
xor
push
add
shrl
dec
fnstcw
add
mov
add
add
mov
dec
push
add
add
add
mov
add
dec
inc
add
cmp
add
cli
stc
pop
pop
sbb
aaa
ja
mov
out
jne
cmp
xchg
imul
and
mov
mov
add
add
add
and
testb
jo
jg
in
add
jl
add
adc
push
and
add
jb
cld
testb
dec
mov
pop
jp
add
add
mov
mov
add
sbb
add
mov
jbe
addb
xor
loop
repz
enter
mov
sub
out
xor
jle
or
jle
fiadds
push
add
push
jns
inc
pop
sbb
mov
add
mov
add
mov
jne
or
add
sub
popa
xor
push
repnz
in
mov
imul
adcl
addb
scas
mov
xchg
add
sbb
mov
add
mov
out
cmp
pop
sub
clc
sbb
ret
scas
push
scas
sub
xchg
cli
or
mov
or
cmpsl
fisubl
and
xchg
add
add
push
add
add
mov
fbstp
add
add
jnp
xor
sti
sbb
je
and
lcall
mov
add
hlt
add
cli
mov
mov
cmp
lods
stos
hlt
add
mov
xchg
out
cmp
add
mov
sbb
cmpsb
add
xor
xor
out
add
arpl
jb
and
xrelease
int3
out
fdivrs
add
add
xchg
add
sbb
push
add
add
stos
test
sarl
push
add
sub
pop
stc
or
add
aas
aad
sahf
mov
inc
add
cwtl
test
add
ja
rolb
lds
andl
jg
pop
fnstcw
lcall
movb
add
add
out
cmp
add
ss
add
adc
add
cs
xchg
add
jbe
movsl
and
mov
add
add
movsl
or
rolb
loopne
inc
add
in
add
mov
add
fwait
cli
popa
aad
mov
push
add
pop
pop
mov
add
rolb
xor
fisttpll
lret
hlt
add
add
jmp
jnp
lods
cmpsl
or
add
fsts
out
cld
hlt
add
iret
sbb
ret
loope
add
outsl
push
add
mov
or
add
xor
push
cld
sbb
xchg
lods
pop
sti
leave
out
aaa
and
mov
add
dec
cld
movb
jo
popf
mov
dec
loop
push
add
mov
add
mov
or
xchg
add
add
stc
imull
aad
add
lret
aad
enter
pop
sbbl
push
addb
jle
push
add
add
xchg
sub
loope
out
push
add
pop
pop
jae
outsl
in
nop
add
icebp
or
lock
mov
cmpsl
out
pop
and
mov
add
xlat
enter
rolb
shll
sub
add
add
mov
add
add
cmp
outsb
add
testb
pushf
icebp
add
ret
push
add
fdivs
add
xchg
add
add
jo
daa
inc
add
push
add
xchg
mov
jno
sbb
fidivrs
add
aas
cmc
pop
jmp
aas
js
ja
push
add
out
add
dec
insb
dec
dec
pop
jmp
mov
je
adc
xchg
lods
lahf
gs
jbe
mov
xchg
rolb
pop
cli
aaa
inc
add
dec
add
xchg
cmp
lods
adc
add
mov
aad
add
aad
dec
xor
insl
sub
push
add
sub
xor
cltd
jl
loopne
cmc
mov
push
add
add
test
test
mov
fidivl
add
xor
das
fmull
icebp
lods
in
xor
lret
add
rolb
cld
mov
mov
add
mov
push
sub
dec
adc
push
outsl
cmpsb
add
mov
add
in
jg
add
xor
fldt
loop
inc
sbb
addr16
hlt
add
dec
scas
pushf
ret
xchg
add
inc
sub
add
cs
sub
pusha
add
push
mov
add
and
insb
pop
mov
out
sti
cmp
add
sbb
push
add
ficoml
add
add
movb
mov
add
push
lret
rorl
add
cwtl
cmp
cmc
and
loopne
mov
daa
cli
mov
jg
pop
mov
add
adc
xor
enter
sbb
add
pop
mov
and
pop
adc
push
sti
push
sub
repnz
mov
outsb
out
mov
add
movsb
add
xlat
lret
sbb
add
mov
outsb
pop
add
aad
mov
xchg
xor
add
orl
push
add
pushf
or
add
lahf
fidivrl
inc
add
xchg
add
fcmovnbe
add
lods
pop
out
ds
jns
mov
jecxz
add
mov
xchg
add
add
fidivrs
popf
aam
push
cmp
hlt
add
add
xchg
cs
add
ja
fidivs
dec
sub
adc
jae
pop
pop
add
out
xchg
jge
add
xchg
mov
push
add
add
testb
xchg
add
jns
add
add
add
mov
add
add
cmp
mov
add
imul
mov
sub
add
jmp
out
and
jne
push
add
inc
add
mov
inc
xchg
add
sbb
xchg
lret
ja
xchg
push
add
lods
sbb
add
fiadds
add
mov
add
pop
fcmovb
add
adc
mov
jmp
add
repnz
std
jb
push
imul
jp
add
dec
outsl
add
jae
add
lods
in
fdivrs
jbe
sbb
pop
dec
mov
add
add
add
aam
lret
xor
inc
pop
les
jecxz
cs
int3
mov
add
in
mov
or
add
and
mov
pop
es
add
mov
push
lds
xchg
add
add
add
popa
push
sbb
loop
xor
xor
rolb
into
adc
add
jbe
rcrl
add
cmp
add
mov
pop
sub
add
rcrl
mov
cmp
into
aam
test
mov
add
add
addr16
xchg
sub
add
and
mov
fcoms
cmp
movb
add
and
inc
add
add
cmc
mov
lods
pop
pop
arpl
add
xor
add
aaa
xchg
xor
lock
inc
cmpsl
sbb
add
out
loop
cmp
add
jecxz
and
lods
inc
aam
or
add
add
dec
dec
lds
add
xchg
iret
or
repz
jnp
stc
mov
fbstp
call
cmove
fdivr
sti
mov
add
push
sbb
jp
sbb
cld
sub
add
add
add
fisubs
popa
xchg
jno
add
enter
add
sarl
movsl
jnp
rolb
pop
cli
iret
cmp
int3
test
in
mov
add
xchg
dec
cltd
out
fwait
or
lea
movb
add
fdiv
or
nop
add
sub
add
mov
rcll
fstl
cmp
pop
add
mov
push
and
add
scas
mov
add
cmp
push
add
or
add
mov
sub
mov
mov
push
xchg
mov
imul
add
popf
out
dec
xchg
xchg
add
jo
cmpsb
add
add
cmp
mov
pop
test
mov
addb
mov
fisttps
cwtl
mov
int
aas
jl
sbb
jecxz
sbb
xchg
add
add
add
sub
add
cltd
stos
mov
add
inc
notl
fisubl
lcall
rolb
add
add
mov
xchg
add
add
and
add
movsl
rcll
add
add
jecxz
imul
notl
sbb
add
add
aad
call
je
xor
xor
xchg
out
xlat
mov
and
xor
stos
and
pusha
add
xchg
mov
add
xchg
add
movsl
and
add
add
mov
rolb
mov
mov
add
add
cmp
add
mov
test
add
addr16
add
data16
or
mov
add
addb
add
adc
imul
add
or
add
addb
add
add
insb
loope
insl
gs
xor
xor
add
add
shll
adc
jmp
aam
push
add
rolb
push
jg
data16
arpl
and
mov
jl
fimull
adc
cmpsl
mov
in
fistpll
add
pop
mov
add
incl
and
mov
movb
add
and
xchg
addb
add
add
mov
mov
jo
cmc
lds
add
xor
cmp
xor
mov
add
add
xchg
add
add
add
push
cltd
or
xchg
add
pushf
stos
rolb
add
add
test
lret
pop
or
add
dec
jmp
sbb
jg
xchg
test
jno
add
add
leave
pop
test
or
cmp
outsb
pop
jecxz
or
add
add
cmpsl
clc
scas
mov
add
cmp
add
xchg
insl
add
sahf
add
mov
and
decl
test
add
jne
add
xor
sbb
add
movsl
dec
jae
xchg
jecxz
add
pop
jns
add
data16
scas
xor
loopne
or
mov
rcr
int3
in
daa
push
add
xor
mov
arpl
fwait
or
jne
add
jbe
mov
and
cmp
add
add
ret
enter
add
jo
and
mov
mov
mov
and
lods
dec
pop
jns
add
bound
mov
jno
loopne
and
jbe
push
add
add
sbb
inc
add
lods
xchg
add
into
cs
mov
lahf
dec
inc
add
add
dec
xor
mov
cmp
dec
scas
lcall
jo
rolb
imul
rolb
push
and
mov
add
mov
mov
shrl
movb
mov
cmp
mov
add
sub
add
outsb
adc
xchg
sub
add
aaa
fiadds
repz
xchg
add
add
push
imul
int3
hlt
add
gs
sub
aas
dec
cmpsb
add
mov
add
mov
inc
add
test
mov
les
je
xor
sub
movb
add
xlat
loop
popa
sub
mov
xchg
rcrl
add
ljmp
mov
clc
jnp
add
xchg
add
popa
add
fildll
dec
add
dec
xor
lahf
mov
add
add
add
mov
inc
add
add
lea
js
int3
or
and
mov
cmp
scas
cmp
mov
clc
addb
push
adc
push
rolb
scas
dec
mov
add
mov
iret
push
xchg
add
sub
add
int3
mov
add
cltd
dec
or
and
mov
int3
inc
add
sahf
adc
add
nop
add
add
mov
fwait
xchg
js
sbb
sub
dec
or
xchg
add
pop
xchg
mov
aam
in
cmpsl
mov
dec
jne
loopne
jnp
mov
cmpsl
dec
dec
int3
pushf
iret
in
push
add
add
or
mov
cmpsl
lret
pop
repz
jge
sub
add
sti
imul
rolb
or
and
mov
aam
rolb
dec
aam
dec
add
cmp
add
add
mov
xor
popl
sbb
add
incl
jb
add
add
mov
scas
rolb
add
ret
daa
cmp
rol
xchg
cmp
push
addb
nop
add
add
lea
add
into
dec
jbe
mov
fwait
cmp
fwait
lods
and
mov
adc
mov
fwait
pop
addr16
orl
add
add
push
pop
or
add
add
mov
jne
enter
add
xlat
addb
mov
inc
add
enter
or
push
sub
and
mov
imul
clc
ret
xchg
out
cli
mov
enter
testb
add
add
adc
xor
movb
adc
add
mov
cmpsl
add
mov
add
add
xlat
sbb
jge
add
add
mov
ja
add
mov
cmp
mov
cli
mov
sub
jnp
xor
js
add
pop
fidivs
add
inc
add
add
mov
add
mov
add
cmpsb
add
add
add
and
insl
sub
sbb
add
pusha
add
addr16
mov
popa
push
nop
add
ret
add
jp
add
dec
mov
mov
xchg
lahf
jae
push
add
arpl
repz
fwait
or
xor
and
insl
btc
dec
scas
fistpll
test
mov
add
enter
cmp
pusha
add
repz
fsubrl
add
dec
mov
mov
fildl
and
sbb
pop
sbb
add
fwait
push
add
inc
add
adc
or
jle
and
add
xchg
add
add
add
sbb
add
add
ret
add
xchg
inc
add
insb
push
daa
pop
dec
cld
mov
inc
adc
out
mov
in
add
pushf
sti
outsl
mov
add
add
add
push
add
add
add
lret
and
pop
pop
cmp
pop
in
nop
add
and
add
add
add
mov
adc
mov
outsb
pop
stos
mov
xor
aaa
push
rolb
popa
cmc
aas
or
iret
leave
mov
dec
mov
cmp
movsb
add
rolb
cmpsl
pop
int3
lahf
daa
mov
mov
dec
pop
xchg
xchg
mov
cmp
add
mov
mov
push
fldcw
xor
stos
xchg
add
add
ret
xor
andl
mov
push
lock
adc
add
rolb
mov
add
sub
add
out
xchg
add
mov
js
rolb
lock
add
add
movb
jle
jl
add
in
sbb
aad
scas
aam
icebp
repz
push
std
pop
push
add
iret
sub
and
stos
cmpsl
jle
movsl
sbb
push
add
add
add
jo
in
arpl
dec
add
ds
add
xchg
out
shll
push
sub
cmpl
movsl
subl
add
add
test
mov
addb
and
push
add
test
push
add
jge
sbb
mov
cmp
movb
mov
pushf
or
jae
jle,pn
add
mov
add
add
bound
mov
in
in
push
add
add
adc
aam
out
inc
push
add
sti
ret
cli
add
stc
push
jecxz
dec
add
mov
mov
xor
push
sub
xchg
add
lods
jp
in
fists
mov
cld
aad
lret
pusha
add
mov
mov
bound
mov
xchg
add
into
and
mov
dec
sbb
xchg
add
jmp
hlt
add
loope
loopne
aaa
sub
xchg
push
xor
loop
ja
jo
jle
ljmp
or
add
xor
enter
int
or
hlt
add
mov
idivl
addb
aad
pop
add
mov
xor
test
dec
and
repnz
add
movsb
add
push
add
xchg
add
nop
add
xchg
add
cmp
mov
add
aad
call
add
je
add
pop
xchg
add
add
sbb
add
push
movsl
push
add
popa
test
int3
jno
jl
out
jge
sbb
add
or
add
cmpsl
test
mov
jge
push
add
and
add
mov
pushf
addb
dec
mov
add
mov
mov
cmpsb
add
mov
adc
dec
stc
pop
fcmove
mov
stos
ret
movsb
add
cmp
repz
pop
aad
xchg
adc
adc
xor
pop
xor
test
mov
pop
xor
add
add
add
je
push
leave
shll
jne
xchg
mov
pop
shrl
outsl
push
lahf
dec
xchg
mov
add
in
outsl
mov
push
add
repz
add
les
je
scas
push
add
and
add
fisubrl
push
add
mov
add
push
inc
add
jne
add
add
xchg
add
arpl
pusha
add
ret
jg
jae
adc
sub
add
add
xchg
add
inc
mov
dec
xchg
lcall
ja
ss
push
add
push
add
mov
fwait
dec
xor
pop
test
add
daa
lods
pop
sbb
jae
fisubrl
sbbl
add
aad
pop
cli
jo
ret
stos
out
out
pop
sub
mov
test
mov
incb
mov
sbb
pop
mov
xchg
inc
adc
add
mov
ret
call
out
gs
add
mov
mov
mov
jo
jo
push
mov
mov
cmp
add
addl
int3
dec
cmovg
mov
add
cli
sub
int
add
mov
mov
add
cwtl
or
scas
and
adc
mov
add
loopne
popa
cmp
popf
int
push
add
add
mov
gs
shrl
mov
add
mov
add
fbstp
leave
les
cwtl
mov
mov
fmuls
out
aaa
gs
inc
pop
add
mov
andl
or
mov
adc
add
ja
call
mov
je
and
loop
or
pop
push
add
cmpsl
push
add
add
add
cmp
push
into
pop
and
mov
add
int
add
mov
sbb
fldt
cld
insl
xchg
add
add
scas
into
ret
mov
mov
aad
dec
mov
add
add
aad
push
pop
pop
loopne
mov
push
insb
xchg
jge
adc
int
inc
add
add
jb
rolb
mov
lea
dec
cwtl
pop
xchg
mov
adc
add
cmp
add
pop
test
mov
xor
jo
xchg
push
add
repz
cmpsb
add
push
dec
inc
add
push
repz
xor
sub
jns
adc
aad
xor
into
loopne
cli
adc
add
or
pop
jbe
sbb
lret
jne
ret
add
stos
mov
aam
xchg
jo
fcoms
inc
add
sbb
pop
adc
pop
mov
jo
loop
xlat
push
rolb
push
add
mov
mov
xchg
add
add
add
std
loop
jne
gs
add
cltd
data16
or
mov
int
mov
jne
add
adc
xchg
sub
add
adc
cmp
add
cmpsl
lcall
test
xlat
add
insb
shrl
push
add
pop
dec
lods
in
mov
ja
mov
out
test
push
loop
add
mov
mov
sub
in
hlt
add
lret
add
add
mov
xchg
add
jne
rolb
into
inc
lret
sbb
cmc
out
pop
mov
add
add
cmp
add
push
add
add
testb
jno
add
or
xor
sub
sarl
dec
jecxz
or
push
xchg
mov
add
add
add
test
insl
fcompl
push
add
sbb
out
sub
test
add
pop
test
mov
jns
lds
test
mov
add
ficompl
cmp
jmp
push
push
add
lret
out
dec
int
add
test
sub
inc
adc
scas
mov
int
and
mov
sub
pop
cmpsb
add
jmp
enter
mov
mov
add
rolb
pop
mov
icebp
imul
out
adc
pop
push
outsl
sbb
add
in
shr
jne
jbe
test
mov
lods
xchg
add
add
mov
aam
add
lea
sbb
dec
imul
in
outsl
outsb
or
insl
xor
inc
adc
fisttpl
push
fwait
sbb
adc
push
stos
fwait
pop
sti
xchg
add
dec
mov
call
inc
mov
rolb
add
add
stos
scas
loop
dec
or
lret
dec
push
loopne
xor
add
hlt
add
ds
scas
lods
jbe
inc
add
xchg
cltd
pop
iret
pop
shll
push
add
lods
mov
les
cwtl
lcall
cs
jnp
jmp
jo
xlat
jmp
add
inc
idiv
mov
jecxz
sbb
ror
xor
out
fsub
mov
cltd
adc
mov
add
dec
or
jmp
lahf
mov
push
xor
icebp
inc
lret
cli
push
add
mov
or
cmp
aas
cmp
xor
lea
push
add
sti
imul
add
mov
add
add
mov
xchg
jae
mov
bound
mov
hlt
add
push
add
mov
cmp
jb
sahf
xor
std
or
in
mov
clc
repnz
jae
add
lock
nop
jae
add
add
add
push
mov
xchg
ret
addl
dec
push
add
clc
repnz
jae
add
into
add
add
mov
jbe
push
mov
xchg
ret
add
lock
pop
mov
clc
repnz
jae
add
add
add
std
mov
push
mov
xchg
ret
add
cmp
popa
push
mov
xchg
ret
add
jle
cmp
dec
clc
push
clc
repnz
jae
cmp
add
add
add
add
pop
clc
repnz
jae
add
add
out
add
jne
clc
repnz
jae
xor
add
stos
fwait
cld
nop
jmp
add
loope
add
loope
push
xchg
add
ror
push
mov
xchg
ret
add
add
fwait
jne
clc
repnz
jae
add
add
add
clc
repnz
jae
into
add
push
movsb
dec
rolb
inc
cmp
inc
in
mov
xchg
ret
add
add
push
adc
push
add
jmp
jmp
outsb
and
add
add
xchg
add
nop
jae
add
add
add
sub
mov
xchg
ret
add
add
pushl
push
mov
xchg
ret
jle
incb
jbe
add
fwait
cld
nop
jmp
call
rolb
xor
add
clc
repnz
jae
lret
pop
mov
adcl
add
add
and
add
add
push
fcomp
add
clc
repnz
jae
mov
add
or
sbb
add
outsb
lret
pop
add
add
mov
clc
repnz
jae
add
int3
add
cmp
in
add
add
push
add
pop
add
or
and
clc
repnz
jae
push
add
add
push
mov
xchg
ret
add
xor
and
int
mov
jno
xor
or
add
lods
add
add
subl
add
jmp
pop
xor
out
add
sub
adc
adc
add
repnz
jae
add
add
inc
adc
repnz
jae
adcl
sbb
mov
xchg
ret
add
add
add
jno
mov
clc
repnz
jae
add
add
mov
xchg
ret
add
add
out
xchg
mov
mov
xchg
ret
cmp
dec
mov
xor
add
add
repnz
jae
push
sbb
add
add
movsl
sbb
sub
add
repnz
jae
push
add
stos
test
clc
repnz
jae
xchg
mov
movb
mov
xchg
ret
add
inc
add
les
push
nop
jae
add
add
add
loope
outsb
add
fwait
cld
nop
jmp
add
xor
push
push
clc
repnz
jae
add
loope
sub
xor
push
lcall
loope
add
incb
push
nop
jo
rolb
and
popf
shr
clc
repnz
jae
add
lds
add
clc
repnz
jae
fcomps
add
sub
add
jb
sbb
jg
clc
repnz
jae
add
add
add
add
clc
repnz
jae
out
push
add
xchg
add
add
add
dec
imul
orl
sbb
mov
clc
repnz
jae
mov
add
pop
push
mov
xchg
ret
int
into
nop
add
xor
and
fwait
cld
nop
jmp
add
add
add
lds
jns
sar
repnz
jae
add
xchg
jbe
add
cmc
mov
lods
mov
push
mov
xchg
ret
addl
jbe
push
jle
clc
repnz
jae
out
add
add
xchg
add
mov
clc
repnz
jae
add
jo
adc
popf
add
fwait
cld
nop
jmp
add
loope
lret
mov
dec
or
mov
xchg
ret
add
mov
push
mov
xchg
ret
xorl
xchg
out
adc
addr16
mov
clc
repnz
jae
mov
add
test
push
mov
xchg
ret
add
cmp
add
pop
add
add
repnz
jae
add
jbe
inc
add
nop
jae
int3
test
add
add
add
mov
push
fwait
cld
nop
jmp
xor
add
call
cld
nop
jmp
xchg
and
xor
add
add
add
add
push
mov
loop
clc
repnz
jae
add
test
add
jns
push
mov
xchg
ret
add
lret
add
popa
movsl
aas
decl
push
mov
xchg
ret
add
add
jno
mov
clc
repnz
jae
add
icebp
sub
test
repnz
jae
jno
add
stos
push
clc
repnz
jae
add
add
add
add
mov
jb
aad
mov
clc
repnz
jae
dec
add
add
nop
jmp
lock
pop
lret
mov
fwait
cld
nop
jmp
movsb
add
mov
add
fwait
cld
nop
jmp
xor
add
add
int
dec
adc
out
inc
add
xor
sub
rolb
jno
mov
push
mov
xchg
ret
dec
add
xor
add
mov
add
add
pop
xor
add
xor
add
pop
outsb
pop
push
lods
add
fwait
cld
nop
jmp
add
dec
xchg
xor
add
inc
bound
mov
cwtl
push
mov
aam
add
push
add
dec
jno
jbe
imul
inc
loopne
add
je
xor
mov
clc
repnz
jae
add
cmp
repnz
jae
mov
add
pop
dec
dec
jne
clc
repnz
jae
pop
int3
nop
addr16
pop
adc
add
fsub
add
add
pop
push
cmp
jb
pop
mov
clc
repnz
jae
push
xor
add
data16
sub
mov
xchg
ret
add
add
mov
push
mov
xchg
ret
int3
add
add
dec
add
lret
clc
repnz
jae
je
add
add
add
movsb
add
add
inc
fwait
cld
nop
jmp
mov
sub
sbb
add
cld
nop
jmp
dec
add
lret
add
add
nop
jae
test
lret
test
jmp
add
add
out
add
nop
jmp
mov
add
add
ret
sub
nop
jae
mov
add
add
hlt
add
add
nop
jae
int
add
movl
call
clc
repnz
jae
and
loope
inc
add
mov
xor
push
mov
xchg
ret
test
xor
outsb
mov
mov
clc
repnz
jae
add
int3
add
mov
inc
mov
mov
xchg
ret
add
add
in
jmp
add
dec
stos
push
mov
add
dec
add
add
add
mov
fwait
cld
nop
jmp
out
add
add
add
add
mov
push
mov
xchg
ret
test
mov
xor
clc
repnz
jae
outsb
and
dec
add
cmp
loop
mov
xchg
ret
add
add
push
lds
mov
lret
repnz
jae
add
cmp
testb
jmp
stos
incb
push
cmp
xchg
jbe
stos
jne
fwait
cld
nop
jmp
push
sbb
fmuls
ljmp
add
add
dec
add
jb
clc
repnz
jae
add
sbb
mov
xor
add
clc
repnz
jae
add
scas
xchg
clc
repnz
jae
out
lret
sub
xchg
add
sbb
mov
xchg
ret
add
je
add
add
loopne
clc
repnz
jae
jle
mov
and
mov
repnz
jae
add
push
out
mov
add
mov
clc
clc
repnz
jae
add
jle
mov
dec
in
inc
push
mov
xchg
ret
add
mov
fdivrs
clc
repnz
jae
jle
add
cmp
clc
repnz
jae
stos
dec
add
loope
cmp
jmp
xor
add
out
add
lret
add
pop
pop
out
add
clc
repnz
jae
movl
sbb
sar
nop
jae
xor
dec
movsb
jno
jbe
lret
clc
repnz
jae
add
cmp
dec
dec
add
mov
clc
repnz
jae
add
add
xor
add
nop
jae
add
xor
inc
add
stc
push
clc
repnz
jae
xchg
lds
push
add
add
push
push
mov
xchg
ret
add
add
add
sub
stos
rolb
xchg
ret
add
mov
or
clc
repnz
jae
xor
add
cmp
jg
clc
repnz
jae
sub
push
xor
int
call
clc
repnz
jae
add
dec
push
inc
add
add
clc
repnz
jae
jbe
mov
add
xor
mov
inc
add
dec
xor
int
add
add
push
mov
xchg
ret
xchg
dec
decb
lea
fwait
cld
nop
jmp
xchg
leave
sbb
lock
pop
clc
repnz
jae
xor
test
add
add
nop
jmp
and
add
add
mov
add
add
mov
fwait
cld
nop
jmp
test
add
je
add
clc
repnz
jae
into
mov
adc
mov
xchg
ret
jbe
dec
mov
pop
movsb
add
movzwl
clc
repnz
jae
add
add
mov
nop
jae
out
add
jle
leave
cmp
fwait
cld
nop
jmp
nop
test
add
repnz
jae
mov
movsb
sbb
add
mov
fwait
cld
nop
jmp
add
lock
mov
clc
repnz
jae
xor
add
cmp
call
clc
repnz
jae
add
add
mov
repnz
jae
add
incb
mov
clc
repnz
jae
add
add
loope
outsb
repz
jmp
lds
add
add
sub
add
add
add
clc
repnz
jae
add
push
scas
dec
fwait
cld
nop
jmp
nop
add
je
decb
mov
nop
jae
add
call
sbb
add
mov
xchg
ret
add
add
add
jae
int3
test
add
fmuls
jmp
lret
fwait
cld
nop
jmp
add
add
push
movsb
pop
into
movsb
add
out
fiaddl
xchg
ret
mov
jno
shr
fwait
cld
nop
jmp
add
xor
je
inc
push
mov
fildll
fs
insb
clc
repnz
jae
add
add
add
push
mov
xchg
ret
add
add
int3
dec
xor
mov
xchg
ret
add
add
cmpw
fwait
cld
nop
jmp
cmp
add
dec
push
lcall
add
into
out
add
add
sbb
inc
add
test
add
add
lsl
clc
repnz
jae
add
dec
je
fwait
cld
nop
jmp
push
add
nop
test
test
add
clc
repnz
jae
add
cmp
inc
add
add
add
arpl
inc
add
add
add
into
add
mov
fwait
cld
nop
jmp
jle
add
out
add
mov
clc
repnz
jae
add
xor
fnstcw
push
sub
pop
add
add
jbe
add
adc
mov
andl
nop
jae
jno
xor
add
add
push
roll
xchg
ret
call
and
or
clc
repnz
jae
sbb
sub
mov
in
and
ret
pusha
xchg
add
add
pop
insb
add
push
clc
repnz
jae
add
add
add
add
and
inc
add
add
or
pop
cmp
repnz
jae
xchg
jle
add
int3
xchg
add
movzwl
clc
repnz
jae
lret
lds
movsl
clc
repnz
jae
add
add
inc
stos
pop
addl
in
stos
jne
clc
repnz
jae
add
mov
add
inc
push
mov
xchg
ret
add
push
pop
xchg
popf
add
fwait
cld
nop
jmp
add
pop
add
rolb
ja
out
aas
test
fwait
cld
nop
jmp
add
add
mov
push
clc
repnz
jae
out
out
lock
sub
outsl
sub
clc
repnz
jae
add
add
add
push
push
mov
xchg
ret
cmp
pop
add
add
inc
add
mov
clc
repnz
jae
nop
dec
testb
lea
clc
repnz
jae
add
add
les
aad
xor
clc
repnz
jae
sub
push
nop
add
andl
push
mov
xchg
ret
add
xchg
xchg
add
add
mov
xchg
ret
lds
add
pop
rol
clc
repnz
jae
leave
add
je
xchg
rolb
je
clc
repnz
jae
add
add
jl
clc
repnz
jae
add
push
ljmp
cld
nop
jmp
pop
add
pop
add
clc
repnz
jae
mov
mov
add
cmp
sbb
add
clc
repnz
jae
xchg
add
nop
jae
out
xor
add
movsb
mov
repnz
jae
push
and
xor
dec
or
repnz
jae
jbe
add
mov
int
jl
sbb
repnz
jae
pop
addl
pop
jbe
lea
nop
jae
test
out
add
add
mov
repnz
jae
add
add
xchg
in
out
xchg
clc
repnz
jae
xchg
add
addl
pop
xchg
mov
repnz
jae
add
add
add
add
in
mov
clc
repnz
jae
loope
add
out
sbb
nop
jae
add
out
jbe
xor
pop
push
mov
xchg
ret
push
jbe
mov
xor
insl
add
clc
repnz
jae
add
int3
mov
mov
sub
ja
fs
repnz
jae
dec
xor
add
xchg
add
clc
repnz
jae
push
mov
add
push
push
mov
xchg
ret
push
xor
add
add
cmp
cld
nop
jmp
mov
add
add
add
jne
clc
repnz
jae
add
inc
dec
add
aam
inc
stos
pusha
clc
repnz
jae
xchg
dec
out
add
pop
jae
mov
push
mov
xchg
ret
xor
add
mov
push
add
imul
fwait
cld
nop
jmp
add
add
add
call
push
fwait
cld
nop
jmp
test
xchg
add
mov
add
clc
repnz
jae
add
jbe
add
clc
repnz
jae
mov
jns
mov
clc
repnz
jae
add
mov
jmp
xor
sbb
xor
add
rcrl
popa
clc
repnz
jae
add
add
shr
clc
repnz
jae
and
push
add
bound
mov
mov
clc
repnz
jae
add
add
push
mov
xchg
ret
add
out
jne
clc
repnz
jae
lret
add
cmp
fwait
cld
nop
jmp
out
inc
add
add
cmp
clc
repnz
jae
add
mov
clc
repnz
jae
add
mov
inc
add
jg
dec
add
cld
nop
jmp
add
xor
sbb
mov
add
into
push
clc
repnz
jae
add
add
dec
add
mov
inc
add
add
je
mov
repnz
jae
out
xor
lds
fwait
cld
nop
jmp
add
add
add
nop
jmp
add
add
add
add
jmp
add
add
pop
push
add
mov
clc
repnz
jae
add
inc
add
inc
add
dec
adc
repnz
jae
add
into
add
stc
call
clc
repnz
jae
add
int3
or
clc
repnz
jae
add
clc
repnz
jae
loope
add
jno
add
cmp
jae
xor
outsb
stos
push
add
mov
push
into
dec
push
mov
xchg
ret
mov
add
dec
add
outsb
push
clc
repnz
jae
xor
int
dec
into
cmp
iret
inc
add
add
mov
add
push
push
mov
xchg
ret
mov
mov
add
push
add
or
jne
je
repnz
jae
mov
test
clc
repnz
jae
xchg
call
cmp
nop
jmp
add
adc
mov
mov
xchg
ret
fadds
xor
xchg
add
nop
jmp
pop
add
add
cmp
nop
jmp
add
xor
add
xor
pop
je
clc
repnz
jae
mov
rcrb
stc
incl
int3
push
add
add
pop
lods
clc
repnz
jae
add
add
out
nop
mov
mov
xchg
ret
add
lret
add
add
test
repnz
jae
add
repz
repnz
jae
add
add
add
xor
cld
nop
jmp
xor
mov
add
test
or
add
repz
mov
mov
clc
repnz
jae
test
sub
jno
add
addb
sub
fwait
cld
nop
jmp
add
fsubs
push
add
push
mov
xchg
ret
add
js
repnz
jae
dec
into
nop
mov
and
fwait
cld
nop
jmp
add
add
addb
pop
clc
repnz
jae
add
int3
add
rep
clc
repnz
jae
push
lret
lret
add
and
shll
add
je
repnz
jae
add
cld
nop
jmp
xchg
out
add
add
add
mov
fwait
cld
nop
jmp
dec
add
mov
movb
mov
xchg
ret
sbb
add
add
nop
jae
add
add
call
clc
repnz
jae
add
xchg
movb
jne
clc
repnz
jae
call
scas
and
fwait
cld
nop
jmp
xor
xchg
lret
and
add
lret
repz
add
and
cld
nop
jmp
xchg
push
add
pop
add
pop
push
mov
xchg
ret
add
add
sbb
jo
sub
ljmp
add
push
add
adc
outsl
add
fwait
cld
nop
jmp
add
lret
add
mov
pop
movzwl
fwait
cld
nop
jmp
mov
add
add
mov
add
nop
jmp
add
outsb
nop
add
out
xor
rolb
mov
repnz
jae
xor
out
add
mov
rorb
pop
add
add
add
fwait
cld
nop
jmp
add
push
add
add
add
stc
test
fwait
cld
nop
jmp
add
jno
pop
add
scas
pop
fwait
cld
nop
jmp
add
pop
add
or
add
repnz
jae
dec
add
add
pop
add
fwait
cld
nop
jmp
add
lock
into
and
clc
repnz
jae
add
cmp
pop
into
mov
mov
into
push
clc
repnz
jae
test
pop
add
add
mov
repnz
jae
add
sub
push
push
mov
xchg
ret
je
mov
ja
clc
repnz
jae
add
mov
add
sarl
cld
nop
jmp
mov
mov
fstl
mov
xchg
ret
add
outsb
movsb
sbb
rcrl
or
add
into
out
add
enter
jmp
movsb
xchg
push
dec
add
jbe
dec
clc
repnz
jae
add
add
lret
sbb
add
add
clc
repnz
jae
xor
xor
fcomps
test
jmp
add
add
add
add
cmp
push
mov
xchg
ret
add
add
push
clc
repnz
jae
add
add
add
add
ljmp
subl
decl
nop
add
add
mov
push
fwait
cld
nop
jmp
pop
sbb
addl
pop
add
sti
add
push
mov
xchg
ret
add
dec
nop
jmp
xor
add
clc
repnz
jae
int3
add
add
clc
repnz
jae
sbb
repz
imul
nop
jae
fadd
add
mov
clc
repnz
jae
dec
add
pop
je
adc
sbb
xor
add
clc
repnz
jae
je
das
push
clc
repnz
jae
dec
xor
and
test
add
mov
mov
xchg
ret
xor
out
add
rolb
add
mov
push
mov
xchg
ret
movsb
dec
test
adc
push
call
clc
repnz
jae
add
movsb
dec
push
push
mov
xchg
ret
add
xchg
push
add
add
repnz
jae
xchg
lret
add
lock
inc
clc
repnz
jae
sbb
push
add
stos
add
mov
repnz
jae
test
lret
mov
movsb
clc
repnz
jae
fadd
xchg
add
mov
das
push
clc
repnz
jae
stos
out
xor
xchg
xor
jbe
cmp
dec
adc
shl
inc
add
out
add
cmp
test
add
add
repnz
jae
add
dec
lret
jne
clc
repnz
jae
add
stos
cwtl
call
clc
repnz
jae
add
jno
sub
nop
jae
loope
jle
test
lds
popf
add
clc
repnz
jae
add
mov
sub
add
gs
add
lock
add
mov
push
mov
xchg
ret
xor
dec
dec
ficoms
repnz
jae
add
out
sbb
add
pop
xor
push
mov
xchg
ret
add
jle
xchg
movsl
mov
mov
clc
repnz
jae
outsb
out
mov
add
jmp
mov
pop
loope
add
add
mov
mov
xchg
ret
add
add
call
fwait
cld
nop
jmp
push
xor
pop
cmp
popa
add
mov
xchg
ret
xor
add
and
cld
nop
jmp
mov
add
rolb
sub
repnz
jae
cmp
inc
pop
cwtl
xor
fwait
cld
nop
jmp
test
push
add
add
xor
add
clc
repnz
jae
jbe
add
adc
add
push
mov
xchg
ret
mov
gs
add
add
repnz
jae
pop
add
add
add
clc
repnz
jae
dec
leave
add
pop
xchg
sbb
or
inc
add
add
jle
pop
cmpl
fwait
cld
nop
jmp
add
dec
xchg
add
jp
incl
dec
add
push
pop
lret
mov
clc
repnz
jae
outsb
and
add
xor
xor
mov
repnz
jae
mov
sbb
outsl
je
clc
repnz
jae
add
add
clc
repnz
jae
dec
int3
dec
and
dec
cltd
lea
fwait
cld
nop
jmp
add
test
incb
int3
daa
inc
add
add
nop
jmp
add
add
add
jae
dec
add
mov
add
nop
jb
sub
mov
clc
repnz
jae
add
push
ret
clc
repnz
jae
lds
pop
add
add
and
jae
mov
xor
push
xor
pop
clc
repnz
jae
dec
movl
addb
push
xor
jne
pop
push
push
mov
xchg
ret
add
test
add
add
hlt
add
pop
pop
push
mov
xchg
ret
mov
dec
sbb
popa
add
repnz
jae
add
sbb
add
mov
add
mov
cmpsb
or
add
jecxz
call
mov
xchg
dec
fwait
cld
nop
jmp
add
add
cmp
sbb
repnz
jae
add
add
in
jp
les
repnz
jae
xor
add
add
decl
clc
repnz
jae
stos
sbb
je
jp
clc
repnz
jae
push
add
add
add
push
clc
repnz
jae
xor
test
xchg
add
add
jmp
add
jle
lret
add
sub
add
add
add
add
add
clc
repnz
jae
lds
xchg
add
inc
and
repnz
jae
add
test
add
je
mov
dec
add
push
mov
xchg
ret
add
lret
add
add
jae
add
add
loope
push
fistpl
repnz
jae
add
outsb
add
cmpl
fwait
cld
nop
jmp
add
lds
add
out
mov
fwait
cld
nop
jmp
and
add
add
add
add
clc
repnz
jae
add
add
mov
clc
repnz
jae
add
mov
xor
fwait
cld
nop
jmp
add
add
sub
jge
push
mov
xchg
ret
push
test
add
dec
add
clc
repnz
jae
add
pop
add
add
jae
dec
fwait
cld
nop
jmp
dec
add
add
mov
clc
repnz
jae
add
sbb
fwait
cld
nop
jmp
xor
add
call
repnz
jae
pop
add
je
leave
jbe
inc
add
add
clc
repnz
jae
add
lret
fadds
addb
jnp
stos
clc
repnz
jae
dec
push
cmp
add
je
push
push
mov
xchg
ret
add
add
je
pop
clc
repnz
jae
and
mov
add
push
mov
xchg
ret
loope
add
add
lds
add
nop
jae
push
xchg
add
add
jmp
sbb
add
dec
stos
pop
add
outsb
lret
add
xchg
add
add
cltd
xorl
clc
repnz
jae
pop
call
clc
repnz
jae
pop
push
xor
je
add
add
movsl
divl
add
pop
add
clc
repnz
jae
add
addb
add
xchg
cmpl
xorl
add
pop
add
add
mov
fwait
cld
nop
jmp
je
add
push
add
nop
jmp
add
add
cmp
xor
add
clc
repnz
jae
or
add
jbe
adc
xchg
xor
xor
add
clc
repnz
jae
int
adc
rep
clc
repnz
jae
push
mov
dec
jns
clc
repnz
jae
mov
mov
add
fwait
cld
nop
jmp
cmp
add
add
mov
clc
repnz
jae
xor
add
leave
sub
repnz
jae
outsb
test
add
mov
repnz
jae
xor
xor
adc
mov
cmp
cmp
test
je
xor
jnp
jno
clc
repnz
jae
add
add
test
cld
nop
jmp
add
add
leave
int
gs
into
lea
push
mov
xchg
ret
add
add
mov
sti
push
mov
xchg
ret
lret
xor
int
add
and
in
call
clc
repnz
jae
pop
add
repnz
jae
movsb
add
mov
cmp
pop
push
mov
xchg
ret
add
xor
test
int
mov
clc
repnz
jae
add
stos
and
push
mov
xchg
ret
add
dec
add
add
add
repnz
jae
add
jbe
lret
leave
pop
iret
mov
clc
repnz
jae
add
inc
add
add
add
repnz
jae
fmul
test
shll
add
add
clc
repnz
jae
mov
add
dec
add
mov
mov
inc
add
add
dec
fimuls
mov
nop
jae
cmp
leave
add
push
insb
push
push
mov
xchg
ret
add
add
add
add
ja
call
clc
repnz
jae
add
mov
fstl
mov
xchg
ret
xchg
add
dec
add
popf
and
push
mov
xchg
ret
dec
mov
add
mov
or
clc
repnz
jae
xor
add
mov
or
repnz
jae
out
sub
cmp
or
clc
repnz
jae
add
add
int3
mov
sub
add
repnz
jae
add
add
nop
jae
cmp
add
add
add
dec
filds
xchg
ret
test
add
lret
nop
jmp
cmp
dec
pop
sub
mov
mov
clc
repnz
jae
dec
mov
popf
mov
clc
repnz
jae
mov
xchg
jno
add
flds
sti
clc
repnz
jae
add
pop
add
fmul
jns
push
mov
xchg
ret
dec
incb
add
add
rcl
inc
add
add
add
add
clc
repnz
jae
lds
push
add
adc
mov
mov
xchg
ret
add
pop
add
aad
add
fdivrp
repnz
jae
add
add
lock
nop
jae
add
int3
addl
add
push
clc
repnz
jae
add
dec
and
add
loope
pushl
push
mov
xchg
ret
mov
lock
fwait
cld
nop
jmp
out
out
xor
data16
push
mov
add
std
pop
add
add
add
fbld
repnz
jae
cmp
mov
int
add
push
mov
xchg
ret
dec
add
add
pushf
xor
fwait
cld
nop
jmp
mov
mov
fwait
cld
nop
jmp
add
sub
cmp
add
repnz
jae
outsb
add
fadds
out
jmp
fwait
cld
nop
jmp
dec
add
add
test
jb
mov
pushf
pushl
clc
repnz
jae
add
jb
in
dec
mov
clc
repnz
jae
add
jle
add
jmp
jae
xorl
into
mov
push
push
mov
xchg
ret
add
jle
mov
repz
repnz
jae
mov
out
add
add
lds
add
xor
dec
dec
add
mov
clc
repnz
jae
pop
and
test
nop
jae
add
add
pop
xchg
jno
repz
nop
jae
mov
call
nop
jmp
xor
loope
add
add
push
mov
xchg
ret
out
push
add
xchg
add
jae
push
mov
xchg
ret
push
xchg
out
xor
inc
add
cmp
fwait
cld
nop
jmp
jno
xchg
fadds
add
mov
add
jne
fwait
cld
nop
jmp
mov
call
clc
repnz
jae
nop
add
loopne
fistl
cld
nop
jmp
cmp
incb
add
add
test
add
fiadds
xchg
ret
add
xor
add
jns
scas
enter
jae
subl
pushf
xor
fwait
cld
nop
jmp
into
add
leave
out
movsb
xor
add
inc
stos
mov
clc
repnz
jae
xor
cmp
sub
clc
repnz
jae
add
sbb
add
nop
jae
jbe
pop
outsb
add
add
int3
je
clc
repnz
jae
lret
mov
cmpsb
add
mov
push
mov
xchg
ret
pop
inc
add
add
loop
fwait
cld
nop
jmp
add
mov
push
adc
popf
lea
fwait
cld
nop
jmp
add
test
out
add
clc
repnz
jae
xor
xchg
pop
into
inc
punpcklbw
repnz
jae
sbb
into
pop
add
lcall
out
ljmp
xor
adc
push
mov
xchg
ret
add
lock
jno
inc
add
dec
lock
add
out
dec
add
inc
mov
add
clc
repnz
jae
cmp
out
xchg
add
mov
add
repnz
jae
add
sbb
add
clc
repnz
jae
add
mov
push
push
mov
xchg
ret
add
test
add
mov
mov
mov
push
mov
xchg
ret
add
add
icebp
fldl
clc
repnz
jae
lds
add
jb
clc
repnz
jae
out
mov
inc
add
repnz
jae
add
mov
mull
add
add
fwait
cld
nop
jmp
dec
pop
outsb
xchg
sbb
cld
nop
jmp
int
add
add
add
shl
clc
repnz
jae
add
lds
xor
mov
clc
repnz
jae
add
add
dec
and
push
mov
xchg
ret
out
add
add
xor
clc
repnz
jae
add
add
add
add
lcall
repnz
incl
sbb
in
scas
ret
fwait
cld
nop
jmp
mov
dec
pop
jno
stc
div
fwait
cld
nop
jmp
add
add
movsb
add
add
repnz
jae
mov
stos
add
repnz
jae
add
leave
add
add
mov
mov
xchg
ret
lret
pop
add
add
mov
push
mov
xchg
ret
push
out
cmp
xor
cld
nop
jmp
dec
mov
add
push
add
repnz
jae
add
add
scas
push
mov
hlt
pop
add
add
add
mov
add
add
clc
repnz
jae
dec
add
addl
push
sub
jae
add
movsb
jle
add
jmp
jae
mov
dec
into
add
add
mov
aaa
add
cwtl
jmp
lds
add
movsb
add
add
dec
add
push
push
mov
xchg
ret
add
add
add
clc
repnz
jae
xor
je
add
movzwl
clc
repnz
jae
add
add
jbe
mov
loope
push
push
mov
xchg
ret
add
mov
mov
fwait
cld
nop
jmp
test
into
and
add
cmp
repnz
jae
int
add
leave
add
mov
popf
clc
repnz
jae
add
popf
mov
push
mov
xchg
ret
add
mov
push
mov
xchg
ret
mov
add
push
sbb
mov
xchg
ret
dec
add
dec
mov
mov
cmp
push
mov
xchg
ret
add
xor
add
sub
repnz
jae
test
and
mov
repnz
jae
add
pop
add
mov
jne
fwait
cld
nop
jmp
jno
add
push
push
mov
xchg
ret
int
pop
add
add
jno
pop
clc
repnz
jae
add
add
push
add
xor
add
fwait
cld
nop
jmp
add
incb
add
cwtl
lea
clc
repnz
jae
and
add
add
add
je
add
clc
repnz
jae
sbb
push
add
repnz
jae
outsb
add
call
add
clc
repnz
jae
add
jle
add
push
add
jne
clc
repnz
jae
nop
mov
aad
mov
fwait
cld
nop
jmp
add
add
and
mov
clc
repnz
jae
add
into
mov
pop
sbb
nop
jae
lock
mov
mov
and
fwait
cld
nop
jmp
add
xchg
cmp
and
mov
ret
aas
mov
clc
repnz
jae
outsb
out
add
out
add
daa
sti
push
mov
add
add
pop
sbb
push
add
add
mov
sub
clc
repnz
jae
add
xor
je
clc
repnz
jae
xor
dec
int3
add
clc
repnz
jae
call
xchg
leave
mov
clc
repnz
jae
movsb
add
add
add
push
mov
xchg
ret
loope
add
push
mov
xchg
ret
mov
mov
inc
jae
nop
jae
add
add
int3
stos
add
nop
jmp
mov
add
xor
jno
sbb
push
mov
xchg
ret
add
into
int
add
add
mov
jbe
fwait
cld
nop
jmp
cmp
cmp
push
sbb
movzwl
clc
repnz
jae
add
pop
call
fwait
cld
nop
jmp
add
add
add
mov
jne
testb
push
push
mov
xchg
ret
add
pop
xchg
xchg
add
push
test
clc
repnz
jae
add
add
push
clc
repnz
jae
test
dec
outsb
add
cwtl
lods
push
mov
xchg
ret
xor
add
pop
xor
hlt
add
add
add
fwait
cld
nop
jmp
outsb
incb
sub
dec
add
mov
xchg
ret
sub
add
mov
nop
jmp
add
and
call
in
push
push
mov
xchg
ret
add
add
lret
add
movsb
add
add
test
add
fwait
cld
nop
jmp
add
add
mov
clc
repnz
jae
add
add
nop
jmp
incb
mov
dec
inc
add
data16
repnz
jae
push
loope
add
je
clc
repnz
jae
int3
add
mov
add
mov
clc
repnz
jae
jle
add
dec
add
add
mov
push
mov
xchg
ret
lret
test
pop
push
add
add
daa
inc
jge
dec
cmp
repnz
jae
add
add
and
lds
and
push
mov
xchg
ret
jle
int
add
nop
jmp
into
add
and
pop
add
or
nop
jmp
add
pop
add
xchg
lods
push
mov
in
add
lret
adc
lds
insl
add
lods
mov
fwait
cld
nop
jmp
add
add
add
rolb
adc
sub
fwait
cld
nop
jmp
fmul
add
add
add
add
add
add
out
clc
clc
repnz
jae
add
add
mov
test
inc
fwait
cld
nop
jmp
int
sbb
push
inc
add
sahf
jmp
add
movl
dec
add
add
aaa
sub
clc
repnz
jae
into
add
add
js
fwait
cld
nop
jmp
add
cmp
add
and
repnz
jae
add
push
push
mov
xchg
ret
pop
call
adc
push
push
add
inc
add
add
mov
add
repnz
jae
dec
into
jbe
push
mov
clc
repnz
jae
xor
movsb
xchg
dec
inc
add
add
popl
clc
repnz
jae
lret
add
and
dec
movsl
test
jbe
fwait
cld
nop
jmp
add
call
xlat
or
jae
mov
push
add
clc
repnz
jae
add
sbb
out
mov
repnz
add
fwait
cld
nop
jmp
incb
add
add
clc
repnz
jae
sbb
push
add
icebp
dec
pushl
clc
repnz
jae
mov
pop
add
lods
mov
clc
repnz
jae
add
pop
add
add
repz
mov
xchg
ret
xor
add
add
push
flds
xchg
ret
dec
sub
ret
insl
sub
push
mov
xchg
ret
into
push
xchg
lret
loope
add
push
mov
in
add
jne
in
add
das
inc
inc
pop
add
mov
push
adc
pop
mov
cmpsl
jmp
fbld
adc
xor
and
lds
mov
add
add
data16
inc
and
mov
push
cmp
add
xchg
add
add
push
add
and
mov
cs
sub
mov
or
stc
sbb
out
dec
add
les
pop
or
addb
cld
pause
add
mov
add
fidivs
ljmp
add
xor
add
jecxz
add
cmp
add
shll
push
add
xchg
add
add
je,pn
or
add
xor
pop
dec
cmpsb
add
add
dec
jp
pop
mov
adc
int3
dec
add
add
stos
enter
dec
fsubr
sub
les
jo
call
or
insl
out
xor
testl
add
ss
ficoms
add
add
add
jns
xchg
mov
add
add
add
push
lods
inc
movb
addb
aas
adc
cmpsl
jae
addr16
stos
mov
add
mov
fdivs
add
movntq
add
add
add
mov
add
ja
add
insl
add
fisubl
cmc
jo
mov
jp
jne
mov
mov
add
add
mov
jp
dec
dec
adc
sarl
add
test
mov
or
jns
xor
xor
add
cmc
ljmp
or
mov
movb
jo
pop
dec
aam
xor
dec
mov
daa
pop
pop
movsl
push
lahf
jecxz
leave
aam
sbb
pop
filds
out
in
cmc
adc
insb
es
jae
insl
ljmp
gs
jno
add
mov
add
add
repnz
add
pusha
add
ret
fidivs
add
lds
mov
add
sbb
mov
cwtl
add
add
cmp
inc
add
pop
push
call
add
pop
js
jbe
add
loope
cmp
fdivr
xlat
lds
mov
add
ret
xchg
add
sahf
pushf
and
jg
push
test
xchg
add
mov
mov
jne
pop
stc
cwtl
fwait
cli
movsb
add
xchg
xchg
add
add
add
sti
push
out
lret
repnz
push
add
mov
lcall
push
movsb
add
mov
push
add
cmp
fmuls
xorl
xor
cmc
dec
pop
inc
add
test
add
add
lea
pop
into
push
add
add
add
rolb
mov
adc
mov
push
fsubl
xchg
jo
and
mov
push
aam
dec
mov
adc
aaa
add
fwait
push
mov
cmpsl
mov
add
sbb
rolb
enter
add
add
out
mov
sahf
mov
jnp
add
loope
mov
xchg
dec
and
mov
cld
das
arpl
adc
out
frstor
and
mov
add
mov
or
pop
sbb
movsl
lret
push
cmp
mov
mov
cmc
loope
mov
shll
nop
add
add
add
pushf
stc
inc
add
and
mov
add
add
aaa
mov
mov
cmp
pop
xor
lret
fucom
add
add
push
add
je
out
add
pushf
jb
movsl
popf
cwtl
daa
and
lcall
push
test
rolb
lret
push
mov
pop
in
xchg
xchg
add
add
mov
cltd
inc
add
sub
add
add
mov
cmpsb
add
add
daa
xchg
add
jl
push
pop
dec
nop
add
addb
push
rolb
cmc
jp
test
push
add
mov
addb
aad
add
pushf
mov
push
add
add
mov
add
xchg
out
ffreep
add
data16
sti
clc
out
sub
push
rolb
lea
testb
sbb
mov
hlt
add
add
and
ret
add
lret
adc
mov
add
repz
into
shrl
aaa
int3
or
add
xor
cs
add
hlt
add
fxch
or
test
add
fstpt
inc
add
add
inc
movsb
add
push
add
add
mov
fistps
add
mov
add
dec
push
inc
add
addb
add
rcll
push
add
loop
push
movsl
xlat
mov
dec
mov
add
jge
imul
rolb
fs
add
mov
popf
in
pusha
add
add
adc
jmp
mov
lock
out
mov
ret
add
mov
and
mov
mov
add
les
push
jb
pop
fwait
rorl
je
inc
add
add
add
add
or
or
testb
addb
fistl
mov
fidivl
or
ficoml
mov
testl
add
into
cmpl
cmp
mov
out
imul
out
add
sub
sub
inc
mov
add
mov
mov
fs
aaa
cmp
add
cmc
pop
imul
aam
enter
add
jno
or
add
jmp
mov
add
add
mov
test
std
cmp
dec
sbb
jb
pop
les
cmp
pop
ljmp
add
add
lock
jnp
lds
pop
movb
cmc
mov
xchg
mov
in
into
or
add
stos
mov
xchg
mov
loope
movsb
add
ret
lods
inc
jmp
dec
mov
cmp
test
inc
add
fnstcw
jg
movsb
add
add
mov
jbe
pop
push
add
add
mov
call
sarl
pop
aaa
rolb
push
push
fwait
in
pop
mov
pushf
and
mov
add
mov
aas
push
push
clc
mov
jns
xchg
subl
add
or
mov
dec
sub
add
add
add
mov
les
dec
stos
mov
and
dec
xor
aam
xor
add
mov
mov
icebp
dec
test
mov
add
push
or
add
mov
add
xchg
add
lods
jns
mov
adc
xchg
mov
inc
add
push
add
leave
icebp
ds
mov
cmc
add
mov
push
add
mov
jp
mov
addb
call
fnsave
pop
and
in
push
sbb
fidivl
test
in
push
add
add
fwait
pop
xchg
push
jne
decl
sbb
aam
and
mov
int3
or
jge
add
or
in
xlat
ljmp
ret
or
ljmp
add
add
jl
rol
addb
mov
ljmp
or
pop
mov
inc
add
rolb
leave
dec
xor
loope
push
outsl
mov
sbb
inc
add
add
mov
add
push
sbb
loopne
movsl
lret
ret
add
add
mov
int
inc
enter
and
mov
add
test
iret
inc
pusha
add
dec
les
adc
mov
mov
adc
mov
dec
rcr
jg
add
fisttpll
add
insb
inc
ljmp
prefetch
enter
mov
add
hlt
add
mov
mov
dec
imul
test
mov
lea
mov
fwait
pop
fdivs
jno
pop
lods
mov
mov
mov
call
mov
mov
push
add
ret
mov
dec
fidivl
add
xor
mov
mov
xor
mov
mov
cmc
or
mov
jecxz
jne
jns
xlat
enter
add
adc
add
jb
addb
add
dec
cli
fsubs
mov
rolb
scas
fimuls
addr16
js
add
push
add
and
push
pop
out
add
mov
sbb
inc
add
out
pop
addb
xlat
jnp
add
or
out
add
sbb
mov
add
add
outsl
or
xchg
loopne
fnstcw
fiadds
mov
push
aad
out
faddl
mov
pop
push
adc
cmp
jb
cmp
mov
pop
aad
add
scas
or
push
add
rcll
add
pop
mov
add
add
cmp
add
imul
sbb
sub
jno
cltd
es
cmpsb
add
add
ljmp
add
inc
shll
inc
xor
adc
lea
xchg
filds
popf
add
mov
add
mov
mov
cmpsl
decb
add
add
add
sub
push
add
cld
lods
jg
add
jl
out
mov
sbb
add
mov
sub
fists
push
push
add
out
rolb
xchg
add
jl
add
xchg
cmp
aaa
xchg
add
sub
add
add
sub
adc
aaa
xchg
add
dec
mov
stc
dec
sbb
add
add
add
jae
mov
xchg
and
add
lods
mov
add
add
pushf
and
mov
int
and
add
push
sub
cmp
lods
aaa
jmp
cltd
pop
les
mov
add
loop
xor
adc
popa
stc
jmp
add
mov
mov
sub
jo
orl
stos
int
and
jecxz
add
xor
add
mov
add
add
mov
test
mov
add
mov
sbb
add
add
add
push
add
jb
ret
outsb
xchg
add
repnz
add
fisttpll
aaa
sahf
pop
in
and
inc
xchg
mov
dec
xchg
push
cli
inc
add
add
imul
rolb
inc
xchg
icebp
fldl
addb
lods
mov
pop
sub
sahf
jnp
add
xor
hlt
add
add
add
add
and
mov
out
fwait
or
mov
or
in
xchg
jl
stos
scas
bound
mov
insb
xor
and
mov
xchg
lret
rolb
push
add
mov
sub
add
lret
mov
mov
cmp
outsl
mov
pop
aam
clc
pop
dec
pop
daa
leave
xrelease
jnp
add
push
add
or
lret
pushf
adc
and
mov
sub
add
add
mov
pop
jbe
inc
add
mov
add
mov
loop
mov
jmp
pop
insb
cld
in
sub
add
pushf
dec
xor
fcmovnb
addr16
lods
andl
add
adc
inc
add
fldenv
add
push
add
cld
adc
xor
movsb
add
lds
jbe
mov
mov
jnp
xor
lods
mov
pop
cmp
aad
and
scas
dec
gs
hlt
add
cmc
jmp
dec
add
insl
clc
pop
add
add
in
add
dec
lret
jo
roll
movsl
fldenv
enter
test
lea
add
pusha
add
push
add
in
add
fdecstp
add
xchg
or
mov
dec
out
adc
cs
cwtl
lds
add
cmpsb
add
leave
lds
mov
cmpsb
add
add
mov
fists
push
add
add
add
iret
out
cmpsl
push
add
xor
or
cld
lcall
add
and
mov
mov
add
lds
imul
gs
mov
inc
add
add
add
xchg
test
xchg
pop
add
sub
xchg
mov
jb
test
sahf
sub
add
repnz
pop
sarl
pop
iret
adc
xor
hlt
add
xchg
add
xchg
add
add
jle
emms
push
mov
pushf
dec
push
movb
scas
sub
add
mov
cli
adc
xor
add
sbb
in
in
xorl
ds
mov
add
rolb
aad
in
adc
jnp
xchg
mov
mov
fwait
jecxz
jl
add
pushf
imul
mov
leave
out
movups
mov
mov
rolb
add
add
push
add
add
add
add
call
add
in
mov
cmp
add
push
pop
fsubs
test
ds
cmpsl
xchg
add
and
orl
enter
in
popa
add
jnp
jns
add
movb
xor
ljmp
cwtl
pop
ds
and
push
stos
dec
mov
andl
pusha
add
rolb
adc
pushf
jg
add
pop
push
rolb
add
add
cwtl
or
add
add
and
mov
stc
push
add
mov
mov
add
aas
or
mov
mov
call
adc
jmp
add
add
sahf
jmp
aaa
inc
mov
mov
adc
jns
dec
add
or
into
inc
add
mov
add
add
sarl
pusha
add
dec
pop
or
mov
jb
arpl
ror
rorl
das
ljmp
mov
jle
cli
push
add
test
out
inc
push
add
jp
add
add
loop
inc
add
fldenv
add
xor
pop
pop
addb
pop
push
sahf
mov
popa
sti
xor
in
ds
add
xchg
add
and
add
add
xchg
pusha
add
mov
add
sub
fbstp
rolb
jp
jge
lahf
pop
add
lret
in
add
pop
pop
loope
add
jo
add
mov
push
add
adc
xchg
addb
in
sbb
cmp
or
inc
addb
ja
add
add
add
insl
mov
add
add
add
push
add
add
mov
inc
add
pop
cmp
rolb
aas
cmp
add
xchg
add
pop
popf
dec
mov
pushf
cmpsl
cmp
add
xchg
add
cmc
out
decl
ljmp
movsl
add
fisubl
xor
loopne
mov
add
fldl
mov
mov
mov
add
loopne
jae
push
add
mov
and
xchg
daa
sub
mov
pusha
add
pop
sbb
add
add
jmp
cs
bound
mov
push
add
add
pop
jno
xchg
add
cmp
mov
rolb
adc
add
jge
add
xchg
add
mov
loop
sbb
add
add
add
sub
test
popf
push
xor
mov
sub
jle
dec
jle
fildl
data16
adc
ret
in
push
add
insb
cmp
add
dec
mov
outsb
imul
push
jb
rorl
cmpsb
add
add
je
push
add
add
add
sbb
fisubrl
push
add
mov
mov
xchg
loop
cli
inc
addb
add
add
out
xchg
movsb
add
add
pushf
xor
cmc
dec
in
arpl
add
push
add
add
xchg
add
scas
inc
mov
leave
xchg
add
movsl
sub
push
lods
mov
add
xor
in
iret
test
mov
cmp
stos
add
cltd
push
arpl
adc
jmp
add
mov
add
dec
lock
dec
psubsw
add
add
cmp
xor
rolb
sbb
fwait
mov
pop
repnz
loope
dec
mov
in
mov
rolb
dec
sti
dec
popf
out
sbb
call
hlt
add
add
add
cmpsl
ret
push
popf
enter
add
sbb
mov
pop
scas
lods
dec
ss
mov
int
adc
xor
in
push
pusha
add
inc
mov
out
mov
imul
outsl
mov
jmp
xor
das
les
test
inc
add
rcl
add
add
add
push
loop
movsl
aam
cmp
outsb
bound
mov
and
mov
scas
mov
inc
mov
cmc
addb
mov
dec
insb
rolb
mov
loop
xchg
add
mov
mov
inc
and
add
mov
add
add
movb
pusha
add
fcomps
or
pop
sbb
add
adc
je
mov
or
ficomps
lea
sbb
mov
add
addb
or
out
in
das
pop
ret
add
in
dec
call
filds
mov
fsubrs
jmp
add
mov
out
daa
lret
mov
mov
add
push
add
in
aad
or
jmp
add
pushf
jmp
leave
add
pusha
add
out
push
sbb
xchg
add
push
test
pop
fistps
movsl
xchg
or
or
scas
xor
loope
jecxz
add
mov
fildll
push
add
enter
cmp
add
inc
jmp
imul
add
imul
inc
xor
pop
xchg
mov
cltd
lcall
flds
add
sub
flds
stc
push
add
mov
push
add
mov
popf
pop
lcall
add
fwait
jmp
mov
fcmovnbe
add
sbb
add
push
add
xchg
les
testb
popa
cltd
inc
add
pop
lcall
xor
outsl
hlt
add
add
pop
pop
movsb
add
faddp
loopne
push
xchg
enter
add
mov
or
add
adc
iret
stc
popf
ja
rolb
pop
xor
out
add
fxch
imul
add
mov
popf
or
add
sub
mov
xchg
add
dec
or
les
dec
inc
adc
mov
clc
incb
or
mov
inc
and
mov
add
add
inc
push
add
nop
add
fbstp
into
and
mov
add
push
mov
jae
lret
cmp
rcrl
mov
data16
mov
out
cmc
lcall
in
addb
or
add
push
add
add
jns
cmp
add
mov
jno
into
jne
jnp
outsb
mov
inc
mov
push
repnz
out
add
mov
pusha
add
pop
lock
xchg
add
arpl
jp
mov
sbbl
add
or
mov
add
add
or
sti
inc
add
lret
test
ror
xchg
dec
push
add
cmp
add
arpl
or
add
mov
jl
test
xchg
and
mov
add
add
add
mov
iret
cmp
mov
pop
push
add
add
mov
xor
add
add
add
int3
xorl
add
xchg
push
in
xchg
add
add
mov
add
rcll
and
inc
mov
xor
push
out
fwait
lret
add
push
add
pop
aad
add
rolb
xor
jmp
push
add
rcll
add
pop
out
mov
jp
and
pop
popa
loop
mov
xchg
vhsubpd
jmp
mov
ljmp
or
adc
rcrl
sbb
cmpsl
gs
add
dec
sub
aas
mov
pusha
add
daa
inc
pop
jno
add
outsl
mov
add
out
hlt
add
testl
add
add
add
xchg
add
pop
lock
or
lods
sbb
add
fcomi
add
add
add
repz
xor
xor
mov
add
push
add
rolb
jo
fs
xor
add
jp
out
jl
xchg
mov
push
les
and
bound
mov
xchg
addr16
mov
add
ss
fdiv
or
adc
jbe
lock
aaa
inc
dec
add
loope
add
addb
in
iret
add
mov
test
add
outsl
out
add
add
add
add
sub
add
add
xchg
roll
add
int
add
push
add
push
add
mov
outsb
hlt
add
inc
add
push
cmpsb
add
sub
imul
add
mov
add
mov
add
dec
dec
pop
push
add
mov
sahf
jg
xchg
inc
add
cmpsl
fildll
cltd
jge
mov
rolb
arpl
addb
pop
xor
add
arpl
xchg
pop
in
push
add
hlt
add
sub
add
xor
xchg
pusha
add
jp
aaa
add
mov
les
push
pop
push
mov
jl
and
mov
bound
mov
jmp
add
dec
jle
adc
jns
sbb
add
xchg
add
xchg
nop
add
add
mov
add
cmp
lods
loopne
sti
add
sti
dec
lods
xor
mov
mov
push
add
mov
lret
dec
stos
sub
push
xchg
add
lods
mov
add
cmp
and
mov
mov
pop
rcll
and
out
mov
dec
stos
mov
shrl
push
add
pop
or
jno
mov
gs
test
andnps
push
in
out
dec
dec
xchg
clc
fldl
data16
jbe
adc
imul
add
sub
lret
push
and
mov
leave
add
mov
lret
and
mov
cmc
movsl
mov
out
cli
lods
pushf
insl
mov
and
add
lods
inc
add
movsb
add
mov
shll
sbb
add
adc
add
add
scas
sub
jge
push
xchg
add
add
pop
aas
sbb
data16
ljmp
push
push
movsl
sub
loope
add
add
cs
add
add
outsb
xchg
add
sbb
inc
in
push
hlt
add
add
lret
cltd
mov
stos
xor
cmpsl
fcmovu
sbb
loopne
xchg
mov
adc
xor
pop
lods
cli
lret
push
add
imul
mov
rolb
and
mov
loopne
dec
lods
jnp
or
mov
add
add
mov
addr16
sti
scas
mov
pop
out
or
lret
in
pop
cmp
push
add
jmp
xchg
lock
insb
jo
arpl
testb
add
adc
pop
push
pop
into
sbb
xchg
add
add
or
mov
into
mov
inc
add
xchg
add
ljmp
or
mov
mov
xchg
add
pop
rolb
lret
fisubl
add
add
and
jnp
pushf
xor
add
add
push
add
loopne
je
mov
push
or
mov
mov
adc
jnp
push
sub
fmuls
push
jp
add
dec
sub
in
outsl
sub
jne
cmp
mov
enter
add
scas
jl
or
mov
push
inc
sub
cmp
movb
add
dec
arpl
adc
xchg
inc
add
ds
xchg
add
add
add
mov
in
or
pushf
in
dec
adc
cmpsl
push
add
dec
push
add
add
aaa
icebp
es
jae
add
add
in
fists
add
add
add
xchg
add
jbe
iret
test
js
push
add
mov
add
faddp
add
jge
add
ljmp
in
add
add
mov
and
mov
mov
in
push
stc
dec
aad
add
fidivl
jle
ret
xchg
ret
inc
add
inc
add
add
push
add
das
mov
add
add
add
pop
dec
dec
cmp
notl
les
imul
testb
jecxz
pop
fldt
xor
xor
add
addb
add
subl
in
pop
lds
pop
lret
add
inc
test
add
add
aad
add
push
jno
add
add
loopne
mov
ret
jmp
dec
and
add
dec
test
add
enter
add
push
lret
push
lods
call
push
mov
xor
jmp
mov
xlat
xchg
jle
adc
inc
add
add
jb
push
push
add
add
lea
add
jmp
xor
add
mov
mov
add
add
mov
mov
fwait
push
mov
fwait
or
sbb
repz
out
or
add
je
xchg
cli
xchg
rolb
popa
and
mov
add
in
mov
lock
fbld
add
addb
add
testl
pop
enter
add
xchg
or
lods
add
mov
add
inc
add
bound
mov
add
add
xchg
xor
jmp
adc
add
add
xor
mov
add
add
mov
dec
xchg
je
jl
daa
mov
add
cmp
xchg
pop
cltd
pop
mov
mov
xor
mov
lcall
and
and
xchg
mov
mov
mov
or
add
inc
add
cltd
clc
xor
mov
cmp
xchg
add
cs
call
in
cwtl
outsb
cltd
add
call
pop
xchg
add
sub
adc
add
ret
aaa
inc
rolb
adc
add
sarl
mov
add
js
add
push
add
sbb
add
cmp
xchg
add
jg
fcmovnb
add
cmp
mov
push
cld
repnz
outsl
fldl
mov
movb
add
stos
fcoml
mov
aaa
jns
dec
and
mov
jbe
mov
cmp
les
pop
mov
add
shll
add
test
mov
add
xchg
jge
jae
into
inc
add
mov
dec
jmp
xchg
fscale
jmp
cmc
pushf
fsubs
out
pusha
add
jp
push
jmp
inc
add
movsl
insl
and
add
xchg
into
mov
cmpsb
add
sbb
test
rol
into
insb
jle
jle
jno
ljmp
xchg
in
fdiv
divl
add
add
mov
add
lods
shll
test
popf
mov
popf
pop
sub
mov
mov
pop
pop
das
imul
dec
sub
xchg
lock
add
mov
dec
cmpsl
test
popf
push
sbb
mov
into
dec
dec
dec
subl
bound
mov
inc
add
add
mov
rolb
mov
add
add
push
add
add
fdivrl
pop
cmp
add
add
add
jns
sub
aam
pop
out
popa
iret
movb
jmp
jecxz
sti
push
add
jns
xlat
mov
scas
sbb
lds
shrl
sbb
add
fists
add
add
cmpsb
add
add
add
add
cmpsb
add
add
mov
add
mov
push
add
add
stc
jl
add
add
das
sti
mov
mov
xor
jbe
dec
nop
add
subps
mov
xor
xchg
add
insl
lahf
mov
push
add
lods
movb
add
add
or
add
sahf
or
in
mov
or
test
jecxz
dec
inc
sahf
adc
jecxz
inc
add
jmp
xchg
mov
add
hlt
add
add
add
add
add
push
add
popf
pop
ljmp
jmp
mov
lcall
add
fisubs
dec
cmp
jno
jo
cmp
pop
add
and
sub
pop
jmp
inc
pop
js
ljmp
fdiv
leave
dec
or
pop
fisubl
add
out
add
jo
leave
aaa
in
mov
lcall
add
rolb
lea
ds
incl
add
movsb
add
add
rcrl
repz
ja
mov
mov
add
sub
cmpl
cmp
rorl
push
add
test
add
inc
sub
cmp
add
and
mov
xor
fcompl
inc
sahf
and
scas
test
dec
mov
les
rolb
jle
ja
pop
push
add
popf
and
mov
add
jl
addr16
je
jae
lds
add
add
xlat
fsts
adc
dec
push
add
add
xor
movb
add
add
add
mov
rolb
xor
jbe
ss
mov
xchg
jb
add
or
sub
ret
ja
repnz
fnstsw
add
jecxz
add
dec
xchg
jle
and
dec
xchg
add
mov
hlt
add
mov
test
loopne
mov
les
cld
mov
add
in
jge
cs
sbb
sub
in
aaa
fimull
sbb
add
cld
push
mov
hlt
add
add
stc
lods
fldt
add
std
das
push
add
cmp
cmp
inc
add
js
sbb
rolb
mov
insl
inc
shll
adc
out
into
filds
sbb
out
add
push
add
add
add
into
fwait
push
daa
push
add
stos
ret
inc
add
add
hlt
add
sub
add
in
add
mov
imull
jp
add
push
in
sub
xchg
add
add
rcll
add
into
ja
dec
mov
test
fmulp
pop
repnz
sbb
addl
add
push
add
add
mov
int
add
jl
test
mov
mov
into
in
subl
cmp
add
scas
fwait
iret
xor
js
in
mov
add
xor
pop
push
add
add
in
xor
cmp
add
pop
xchg
pop
pop
lds
push
add
add
in
cmpsb
add
cltd
test
add
add
xor
mov
xor
add
pop
cltd
mov
cs
mov
lock
add
lcall
xchg
add
daa
sbb
hlt
add
kmovb
mov
stc
xchg
filds
andl
push
lods
pop
mov
loope
dec
sbb
or
mov
lret
xchg
add
mov
add
into
mov
sub
add
repnz
movsl
and
mov
icebp
repnz
add
pop
xchg
movsl
lcall
inc
insl
dec
aad
dec
in
xchg
and
dec
adc
jge
imul
repz
cltd
popf
in
inc
jne
ja
rolb
in
cld
into
call
aas
mov
add
push
xchg
les
dec
rolb
lods
int3
scas
insb
push
add
mov
add
and
mov
adc
pop
out
repnz
xor
mov
add
xor
sbb
mov
sub
rorl
int
and
and
mov
add
stos
sbb
rolb
or
add
jmp
cmp
clc
add
pop
sbb
mov
out
sbb
lods
pop
sub
nop
add
out
cmp
add
pop
sub
test
sbb
stos
push
add
push
jmp
mov
push
fidivrs
add
scas
std
rolb
and
mov
add
jbe
rolb
jmp
stos
dec
aam
enter
out
pop
in
add
pop
adc
loopne
idiv
stos
daa
mov
add
clc
rolb
add
sti
lods
sbb
add
add
add
jbe
fwait
pop
in
addb
mov
push
add
add
imul
add
jge
add
cmp
test
out
dec
lret
pop
sbb
cli
cmpsl
cmp
jmp
and
mov
add
jecxz
add
rolb
ret
repz
add
add
insl
jp
test
nop
add
add
mov
gs
mov
rcrl
add
add
mov
push
add
lods
and
add
aam
loope
stos
test
add
add
addb
daa
aaa
fwait
sub
push
add
into
ljmp
rolb
rolb
or
rolb
mov
pop
xchg
imul
or
lea
cvtpi2ps
jo
sarl
add
ja
call
or
add
cmp
add
add
mov
fisubrs
repnz
push
mov
enter
fmuls
add
add
hlt
add
int3
xchg
xchg
xchg
and
test
ss
mov
xchg
add
cmpsb
add
add
add
add
push
lods
dec
std
gs
shll
je
std
push
add
add
add
sub
sub
jo
inc
add
lods
pop
adc
popf
cmp
add
push
sbb
addb
add
add
les
mov
fdivs
lea
add
jno
sbb
ja
pop
sub
add
mov
add
dec
mov
rorl
loope
add
mov
aaa
fisttps
sbb
add
je
xor
mov
pop
xor
sbb
popa
add
add
dec
push
xchg
rolb
add
add
in
push
add
dec
sub
sub
jmp
add
add
pop
inc
add
fcomps
inc
add
ret
add
add
int
pop
jp
add
xlat
std
push
and
add
xchg
mov
scas
cs
jl
or
add
adc
mov
jno
add
add
dec
add
rolb
or
add
push
enter
jmp
add
push
add
sub
add
push
lcall
sub
or
push
jne
or
stos
test
mov
push
iret
sbb
add
stos
xor
mov
lret
cmp
add
mov
int3
and
mov
add
cwtl
ret
add
test
outsl
lret
push
cmc
das
icebp
adc
pop
xchg
data16
icebp
jl
cld
int3
leave
cli
add
cmpsl
mov
or
jmp
mov
mov
add
out
inc
add
stos
pushf
pop
dec
fcomp
les
mov
sub
xchg
add
js
add
faddl
sub
add
cwtl
gs
jae
imul
out
cmp
insl
pop
mov
and
push
mov
add
inc
add
jmp
push
add
mov
xlat
ljmp
bound
mov
add
add
add
cmpsl
sarl
xor
mov
mov
notl
add
lret
add
movsl
pop
inc
cmpsl
ret
xor
xchg
add
bound
mov
dec
inc
add
adc
cmp
nop
add
add
add
add
out
add
xchg
test
add
add
push
add
jb
fbld
add
add
in
imul
push
add
rolb
rolb
movsl
cmpsl
test
add
dec
jnp
jne
mov
rcll
add
jge
cmp
loopne
xor
les
pmaddwd
add
and
pop
rolb
xchg
leave
mov
xlat
mov
and
pop
push
xchg
push
add
mov
pop
cmp
sub
xchg
pop
jmp
dec
dec
xchg
jg
sahf
inc
daa
sub
scas
jl
das
pop
and
sub
mov
add
add
std
push
xor
in
mov
and
lret
jbe
loop
stos
jno
pushf
fnstenv
mov
add
sub
test
clc
sbb
xchg
dec
sub
fpatan
loope
add
ja
pop
cmpsl
sub
add
add
dec
mov
fsubs
lcall
or
or
add
push
add
iret
xchg
movb
sbb
mov
mov
jge
mov
cmp
aad
ljmp
xchg
shrd
rolb
ret
lods
mov
add
pop
frstor
add
and
pop
lret
aam
fsubl
add
add
mov
sbb
fstl
popf
rolb
out
aaa
mov
in
add
sub
jbe
fidivrs
dec
adc
shll
mov
add
roll
cld
and
mov
cmp
add
pop
push
add
test
addb
add
popa
in
imul
arpl
xor
add
into
rolb
dec
int3
xchg
sbb
cwtl
mov
add
sub
and
mov
lcall
jmp
add
add
add
add
jae
inc
sti
loopne
test
add
cmp
int
add
add
add
jbe
add
dec
loopne
in
jl
add
ljmp
jecxz,pt
pop
mov
add
mov
lcall
add
mov
xor
push
mov
or
mov
jns
push
sub
adc
pop
dec
cmp
dec
inc
add
and
mov
test
add
mov
icebp
test
add
cmpsl
push
push
add
fcompl
pop
push
imul
adc
rolb
add
push
rolb
dec
roll
sbb
sbb
and
mov
push
mov
add
adc
add
jnp
add
add
pusha
add
add
push
je
jmp
inc
loope
cmp
mov
add
add
mov
in
jl
mov
pop
cmp
xor
in
aad
pop
and
sub
sub
add
add
add
add
cmpsl
cmp
std
inc
pusha
add
repnz
add
or
mov
jg
add
lods
icebp
stos
add
pop
jno
jmp
add
mov
xchg
add
add
adc
add
push
add
aam
xchg
dec
dec
stos
jp
add
mov
add
sub
or
cmp
lret
sub
out
sbb
adc
adc
hlt
add
add
aad
add
mov
mov
add
dec
pop
mov
mov
dec
xchg
adc
sub
rolb
xor
push
xchg
icebp
mov
rolb
xor
add
cmp
add
movsb
add
xchg
pop
xchg
int3
jmp
movb
add
mov
aas
addr16
add
jmp
add
mov
dec
inc
add
rcrl
add
insl
mov
pusha
add
clc
or
mov
add
mov
mov
add
inc
mov
outsl
mov
add
push
ds
jnp
add
push
mov
xchg
pusha
add
shrl
cwtl
testb
sub
add
mov
add
add
ja
call
dec
fstl
jb
mov
imul
add
dec
pop
add
sbb
add
pop
xchg
add
add
mov
add
mov
and
add
dec
mov
dec
dec
scas
dec
rolb
sti
fistps
push
cmp
aaa
xchg
pop
les
js
ret
scas
push
cwtl
mov
addb
mov
cmp
testb
add
adc
arpl
das
imul
adc
add
mov
jns
dec
movsb
add
add
push
add
mov
lret
mov
add
or
add
add
xchg
jmp
pop
int3
add
inc
mov
inc
add
fadd
add
je
inc
add
add
add
mov
jb
or
movb
scas
cmc
sbb
sub
inc
add
movsb
add
dec
incb
mov
xor
pop
or
push
add
add
jl
add
mov
push
add
add
stos
dec
addb
lea
lahf
jecxz
jae
mov
add
lret
dec
ss
jp
adc
nop
add
add
add
inc
test
inc
mov
add
sbb
add
add
add
rolb
dec
fidivrl
ret
pop
mov
push
add
push
add
nop
add
jae
cltd
push
mov
pop
lret
ficomps
add
fs
sahf
push
add
test
and
cmpsl
jp
sbb
scas
push
add
add
bound
mov
rolb
jle
aaa
add
add
rolb
clc
fs
sub
hlt
add
or
mov
add
scas
mov
add
add
add
sub
js
add
movb
iret
ret
cmpl
add
add
rolb
push
push
add
mov
jmp
outsl
pushf
or
adc
xchg
add
pop
aad
xlat
inc
test
mov
add
or
fsubs
add
sahf
push
cld
mov
test
add
vmovdqa
mov
add
loop
adc
mov
lods
popa
mov
add
out
repz
cmp
addb
sub
repnz
dec
cmc
push
add
cs
flds
addr16
rolb
test
and
mov
jns
into
jecxz
addr16
sub
dec
enter
jge
add
push
or
je
inc
inc
add
sbb
or
jno
jno
aad
add
mov
add
aaa
adc
addb
mov
push
add
pop
int
popf
addb
movsl
js
inc
add
add
testb
sub
mov
addb
mov
adcl
jbe
mov
jge
pusha
add
add
addb
mov
jnp
cmp
lds
loop
push
or
mov
adc
int
pop
outsl
dec
pop
sbb
lods
mov
fstps
fwait
icebp
push
add
sbb
add
fldt
hlt
add
movsb
add
shll
nop
add
mov
test
jb
loope
mov
push
add
int3
pushl
xor
jl
adc
and
add
add
insb
fwait
ja
lahf
xlat
jb
sti
enter
add
jno
add
add
cmp
mov
add
push
add
subl
mov
divl
test
add
mov
mov
add
or
cmpsb
add
push
jnp
add
popf
adc
push
loop
cmp
add
insb
jns
add
push
add
insb
popa
push
add
add
aaa
into
in
add
mov
mov
add
and
add
cmp
jg
bound
mov
inc
add
inc
pop
bound
mov
jl
jne
lods
stos
repnz
iret
ficompl
add
data16
add
inc
add
in
inc
add
sub
add
add
je
imul
sbb
fsubs
lahf
cmp
rolb
cmc
arpl
add
pop
out
add
sub
push
rolb
or
and
mov
test
inc
in
inc
andl
mov
cld
rolb
outsb
lcall
add
xlat
mov
cmpsb
add
addr16
xor
addr16
pop
jmp
add
mov
ror
sub
fwait
jne
xor
scas
testl
add
push
cmp
add
das
cmpsl
arpl
arpl
adc
ficoms
movsl
scas
loopne
js
xlat
inc
add
inc
xchg
dec
addb
add
mov
sbb
decb
cmp
jmp
or
add
mov
cwtl
xchg
add
sub
inc
mov
or
mov
scas
pop
lds
jo
movb
jle
xchg
add
aad
add
add
add
lret
nop
add
add
add
xchg
fsts
jle
xchg
add
mov
mov
xchg
or
xchg
pop
mov
adc
add
pop
loopne
lods
jecxz
or
add
mov
add
sbb
add
in
dec
mov
add
test
lret
adc
movsb
add
add
inc
mov
jnp
add
out
rolb
pop
fdivrs
stos
push
add
fisubrl
push
add
mov
add
jecxz
insl
xchg
mov
add
insb
add
mov
mov
movsl
mov
das
mov
imull
inc
add
jo
dec
push
add
mov
loop
notl
xchg
or
movb
mov
add
imul
sbb
rolb
aas
lds
cmc
xor
add
stos
mov
popf
out
and
mov
add
out
mov
lock
test
sbb
add
pop
test
addr16
jge
ds
add
add
pusha
add
jmp
add
push
add
bound
mov
lods
pop
add
cmpl
mov
add
add
dec
dec
popf
xchg
pop
add
add
js
add
sbb
add
cwtl
sarl
out
test
mov
fidivrs
mov
cmp
gs
call
je
fs
add
add
in
add
add
sub
sub
cwtl
cmp
out
and
mov
add
jl
scas
xor
adc
gs
mov
addb
sub
sub
lcall
cli
jae
popf
lock
cmp
add
or
mov
jmp
inc
gs
add
ret
jmp
add
rolb
pop
adc
adc
fstcw
lock
sub
dec
das
mov
js
ds
cli
in
ret
test
mov
jl
das
int
mov
add
add
add
add
test
clc
addr16
addb
xor
add
pop
icebp
sub
adc
iret
arpl
je
jmp
jge
lods
add
xchg
insb
scas
or
lea
mov
cwtl
fsubl
out
add
xorl
aad
sbb
roll
lahf
jne
icebp
add
adc
pushf
shll
fadd
add
push
daa
sbb
loope
jl
mov
aas
push
adc
inc
jns
je
cld
sbb
push
xchg
pop
cltd
mov
pop
cmpps
xor
jnp
repz
dec
addl
mov
xchg
add
icebp
sti
int3
cmp
imul
outsl
jle
jb
cs
mov
dec
cs
fdivs
ds
sub
add
mov
push
mov
or
add
mov
add
pop
add
mov
in
xchg
or
data16
add
cmpsl
mov
jmp
mov
push
shrl
int
sbb
add
or
faddl
aad
mov
jg
scas
faddl
mov
mov
movsl
repnz
loop
pop
adc
xor
mov
pop
fiaddl
add
or
push
push
inc
rolb
mov
sbb
enter
add
or
mov
lock
add
add
adc
or
add
rolb
testb
in
mov
or
fisubl
lock
push
rcll
test
add
add
add
mov
add
cmc
xchg
add
ret
xchg
jp
test
insb
out
xchg
add
out
or
xor
add
jno
push
das
iret
fstpt
cld
pop
or
cmp
movb
add
rcrl
jecxz
and
mov
pop
testb
out
xchg
add
hlt
add
pop
mov
pusha
add
call
mov
cmpsl
xchg
add
scas
add
add
add
xchg
add
stos
jnp
clc
rcrl
add
or
add
xchg
add
jmp
add
add
add
pushf
sub
mov
add
xor
add
adcl
icebp
mov
push
add
lret
xchg
mov
in
fiaddl
mov
dec
xor
add
rolb
xchg
xchg
add
pop
adc
add
mov
imull
mov
add
lahf
rorl
iret
mov
loope
rorl
ficoml
add
mov
xchg
add
aad
mul
add
adc
mov
jno
ja
mov
popa
push
add
add
psubb
push
add
ret
add
add
mov
icebp
cmpsl
stc
xor
dec
call
jge
repz
inc
testb
cltd
dec
lret
int
jno
add
bound
mov
push
add
xorl
test
jmp
xchg
and
xor
add
add
xchg
call
add
mov
shrl
jnp
inc
cmp
jmp
add
inc
mov
mov
add
mov
add
add
loopne
in
in
push
add
add
inc
add
dec
orl
jecxz
add
add
add
in
sti
daa
dec
mov
mov
add
lods
mov
add
add
dec
jle
push
mov
call
push
dec
sbb
add
add
inc
add
sahf
inc
dec
hlt
add
add
popf
adc
mov
add
xchg
xchg
gs
xor
mov
and
push
scas
fwait
add
inc
add
mov
add
add
mov
mov
add
pop
outsl
push
add
jnp
adc
xor
inc
xchg
xchg
add
popa
mov
mov
add
add
lcall
sub
pushf
ljmp
pop
in
ret
into
add
mov
cmc
mov
add
stc
jg
add
xlat
hlt
add
jno
int3
push
adc
std
add
icebp
outsb
xchg
add
cld
les
cmp
aas
push
and
sahf
pop
xchg
mov
push
add
test
xchg
add
testl
add
jmp
add
mov
mov
mov
mov
in
jg
add
aam
or
cmp
xchg
fbstp
arpl
add
movsb
add
inc
es
mov
mov
jns
roll
inc
add
test
pop
pop
add
mov
push
loopne
and
jns
or
and
call
jo
int3
mov
out
adc
jp
add
sbb
add
sti
addb
add
fdivs
out
int
lahf
xor
and
add
out
cmpsl
add
ds
sub
add
out
scas
push
add
add
mov
push
jmp
or
pop
fsubr
push
add
hlt
add
sub
iret
cmpsl
mov
cmp
test
or
add
mov
loop
inc
add
mov
or
shrl
shll
or
outsb
pop
dec
lret
add
push
aam
xor
xor
push
fbstp
test
ljmp
sbb
lods
inc
and
or
inc
add
les
push
cmp
and
jns
push
add
mov
psllq
dec
mov
and
sub
daa
xchg
daa
fidivrs
lea
add
or
add
je
pop
xorl
xor
loope
imul
cmp
ret
fcomps
mov
mov
fsubrl
lock
or
addl
sti
sub
mov
and
popa
mov
popf
bound
mov
mov
add
mov
push
add
scas
aad
fwait
cld
add
insl
xor
sbb
outsl
jle
add
pop
sbb
divl
or
inc
add
sub
adc
sahf
int
add
mov
divl
lods
rolb
add
rolb
mov
in
xor
add
adc
adc
sbb
pushf
mov
pop
and
mov
mov
add
xor
into
imul
pop
in
push
mov
cmp
push
add
aad
mov
lret
cltd
inc
add
ret
std
ret
sub
add
rolb
sub
fcoms
push
push
add
add
das
lret
fdivrl
add
sub
nop
add
pusha
add
add
or
pop
pop
sub
dec
cmc
lcall
add
ds
mov
cltd
push
int
dec
movsl
inc
add
pop
rolb
rolb
mov
mov
add
mov
add
xchg
xchg
add
sbb
push
pushf
mov
stos
hlt
add
adc
sbb
add
adc
jb
pop
pushf
cmp
mov
mov
fstpt
mov
mov
jl
or
sub
add
out
jmp
add
ss
mov
imul
sub
test
add
add
add
add
sbb
add
push
dec
sahf
xchg
lods
pop
and
jmp
sbb
add
mov
test
add
adc
iret
inc
add
add
add
add
add
mov
movb
xchg
add
add
mov
in
push
test
cmpsb
add
iret
sbb
lret
pop
or
cmp
cmp
push
push
sbb
add
add
cmp
lds
jbe
ja
sub
aas
add
jne
loop
leave
jecxz
jp
add
stos
xchg
push
add
pop
pushf
insl
in
in
jnp
pop
icebp
sub
lret
mov
sub
push
lea
fbld
inc
add
adc
adc
jbe
mov
xlat
push
adc
lods
daa
mov
icebp
push
jb
fldcw
add
add
add
mov
push
ud2
sub
cmp
add
add
repnz
xor
dec
jmp
inc
add
xchg
lret
mull
fisubrs
jmp
mov
shrl
and
jecxz
in
mov
inc
lds
xchg
mov
cld
bound
mov
cmp
add
jno
das
xchg
add
daa
pop
das
test
add
xchg
fildll
int3
lods
movsb
add
lret
bound
mov
add
lds
mov
out
jo
jne
testb
add
cmp
mov
sbb
xchg
mov
add
lret
les
mov
inc
dec
lods
or
sbb
fisubl
dec
lea
add
add
enter
push
das
mov
nop
add
cmpsb
add
fnsave
add
adc
xchg
add
mov
sbbl
mov
push
add
push
xor
fadds
add
add
mov
add
stos
sbb
add
pop
cmp
xchg
add
aam
rcrl
mov
cltd
xchg
add
dec
insb
mov
gs
sub
mov
add
mov
mov
xor
icebp
xchg
xor
or
fisubs
and
mov
and
adc
out
das
xchg
add
add
push
stc
sub
cmp
out
mov
add
mov
popa
fstps
add
mov
sub
cmp
add
add
inc
add
int3
or
add
sbb
imul
mov
lds
add
std
into
mov
sub
outsb
push
cmpsl
leave
in
mov
add
loopne
stos
data16
in
sub
outsl
fcoml
add
lods
repz
or
add
pop
add
mov
dec
mov
movsl
adc
add
push
add
sti
sbb
out
pop
xor
or
add
mov
cmc
sbb
add
jnp
add
add
add
mov
inc
add
add
mov
push
add
iret
insb
faddl
mov
lods
add
stc
xor
nop
add
pop
repnz
mov
jmp
mov
and
insb
fistpl
testb
or
push
add
notl
ficomps
int3
cmp
dec
stc
inc
xor
fidivrl
or
and
lock
rolb
addb
lods
ret
std
addb
out
mov
sbb
inc
scas
mov
add
pop
push
add
lea
js
add
test
sub
xchg
add
sub
orl
add
add
add
movb
jge
out
xchg
cmp
in
popa
or
cmp
jge
add
cmp
dec
aam
leave
mov
add
es
add
mov
inc
add
or
ret
sbb
fiadds
fisttps
sub
in
mov
outsb
sub
addb
pushf
lahf
scas
and
or
push
sub
dec
and
test
add
popa
outsl
mov
cld
push
add
xchg
mov
mov
inc
dec
testl
outsl
lret
test
add
add
add
mov
push
add
imul
add
dec
jle
cmpsb
add
xor
push
leave
and
mov
fwait
mov
add
pushf
test
xchg
or
or
stc
mov
pop
jbe
adc
or
or
dec
xchg
mov
add
jmp
add
addr16
dec
std
cwtl
or
in
js
xor
mov
inc
add
sub
mov
jmp
add
nop
add
cmp
push
stos
jnp
jno
adc
add
add
mov
add
add
data16
add
loope
std
adc
mov
lahf
cld
repz
cmp
addb
jno
mov
add
xor
popa
pushf
cmpsl
test
addr16
inc
rolb
test
adc
mov
pop
addr16
sbb
in
mov
add
sub
adc
pop
xchg
add
mov
mov
add
add
testb
add
push
into
sub
and
mov
and
mov
add
mov
adc
ja
or
add
xchg
pushf
pop
pop
in
jne
das
movb
jae
cmp
dec
add
repz
mov
loopne
stos
bound
mov
ret
sub
movb
add
inc
mov
cmp
add
inc
inc
add
shrl
jne
scas
inc
add
inc
inc
add
push
add
enter
add
movsb
add
out
xor
outsl
stc
cmp
hlt
add
mov
add
inc
lahf
jne
jb
push
add
insl
jb
jmp
les
inc
sub
push
add
jns
stos
and
dec
push
add
add
scas
gs
xor
mov
scas
iret
dec
insb
sbb
or
addb
pop
popa
ffreep
mov
mov
add
imul
loopne
cmp
mov
int
sbb
add
cltd
clc
jl
xor
enter
inc
or
adc
pop
test
mov
lock
setno
aad
add
push
add
lea
pop
inc
add
push
add
add
add
les
mov
add
add
aad
lods
outsl
adcl
fsts
jl
aad
cmp
add
insb
iret
push
cmp
add
jnp
pop
mov
aas
testb
call
fsubr
mov
add
add
fsts
icebp
or
dec
or
inc
add
adc
cmpsb
add
cmpsl
dec
add
inc
push
add
pop
repnz
add
sub
add
jp
jo
push
add
add
jae
daa
fmuls
add
arpl
lea
int
scas
ljmp
sbb
jl
push
add
add
dec
mov
int3
and
push
dec
movsb
add
sbb
scas
lock
mov
addb
in
mov
inc
mov
pop
stc
mov
cmp
loopne
stos
sbb
add
add
mov
add
add
js
ffreep
mov
cmp
pop
shll
addb
xchg
add
lret
cmc
xchg
aas
xchg
add
sub
and
pop
push
adc
add
mov
repnz
add
mov
lahf
push
add
cli
stc
pop
mov
shll
movsl
and
add
lods
push
popa
push
cwtl
enter
out
pop
movsl
and
mov
add
inc
add
inc
add
add
mov
and
mov
mov
arpl
fsts
sub
jl
adc
adc
jge
add
mov
and
pop
dec
aam
mov
pop
jp
add
mov
and
fcomps
and
mov
std
ss
int3
jl
add
jg
adc
mov
stos
sbb
lods
das
add
add
mov
lret
cmp
add
add
test
addr16
add
sub
xchg
add
adc
add
test
add
add
sub
enter
add
xor
lahf
aas
popf
ljmp
push
mov
addb
add
push
imul
cltd
scas
cmpsl
xchg
stos
das
jo
sbb
fbstp
push
out
mov
add
in
inc
fistpl
stos
fwait
or
je
incb
add
dec
jnp
scas
or
or
pop
jge
cs
stc
pop
enter
add
add
add
add
xor
push
xor
add
cli
adc
out
int
popa
iret
mov
add
out
hlt
add
mov
push
leave
jle
jae
add
loop
dec
mov
std
inc
add
pop
lods
in
iret
mov
mov
sub
mov
loop
ja
jbe
out
data16
mov
int3
pop
sbb
adc
test
outsb
loopne
mov
mov
add
jno
dec
frstor
add
sub
fstpt
add
lock
xor
repz
pop
sub
add
mov
jnp
bound
mov
testb
in
or
pushf
aas
addb
mov
mov
sbb
xor
inc
add
add
add
mov
fidivrl
out
int
xchg
add
cmp
cmp
sub
xchg
mov
je
xor
add
mov
sbb
push
add
add
stc
scas
fst
add
mov
scas
push
repz
or
add
push
scas
mov
add
popl
out
stc
adc
int3
stc
jmp
inc
sub
add
add
fldcw
mov
mov
imul
inc
add
mov
mov
jne
pop
outsb
in
xchg
add
add
add
sbb
je
cmpsl
add
out
arpl
xchg
add
add
icebp
lds
fistpll
mov
push
add
add
repz
jns
stos
ret
add
add
add
push
add
loop
outsl
insl
or
loopne
xor
bound
mov
in
imul
or
add
nop
add
mov
leave
or
add
mov
les
pop
es
push
mov
add
jp
and
nop
add
ja
cwtl
movsl
dec
test
popa
sub
iret
mov
iret
push
add
jbe
cmp
mov
repz
adcl
mov
adc
sbb
push
add
add
add
pusha
add
bound
mov
pop
and
mov
test
inc
add
add
inc
add
mov
and
cmp
les
or
add
mov
add
mov
xor
mov
int
xchg
add
add
js
add
test
into
hlt
add
add
mov
push
test
int
dec
mov
or
xor
bound
mov
add
add
mov
add
dec
pop
sti
xchg
add
pop
push
adc
fists
outsb
pop
pop
daa
shll
mov
or
push
add
inc
adc
dec
jns
add
add
mov
sbb
pushf
dec
push
add
movb
add
lods
pop
mov
xchg
push
add
dec
dec
sahf
data16
push
add
add
ds
ficompl
pusha
add
dec
sbbl
xlat
inc
add
pop
sbb
add
add
loope
rcll
ds
xor
mov
and
pop
aas
mov
add
or
add
add
inc
add
pop
iret
jne
sbb
add
rolb
cwtl
pop
sbb
scas
jne
push
jne
add
mov
pop
std
add
lahf
addb
das
lods
jb
sbb
add
stos
out
leave
dec
mov
fldt
xchg
icebp
ret
inc
add
inc
jne
enter
in
xlat
std
push
cmc
dec
and
mov
mov
inc
popa
mov
test
sbb
fwait
ja
jl
cs
fisubrs
jmp
add
jnp
add
inc
ret
jae
dec
push
add
shll
xchg
neg
popf
ret
add
push
add
add
daa
pop
test
xchg
push
add
xor
push
add
movb
add
xor
dec
hlt
add
mov
add
push
imul
dec
mov
lret
mov
int3
arpl
fnstsw
jo
mov
ret
xchg
add
add
pop
pop
fldt
add
insb
cmp
add
cmp
mov
add
add
lock
add
add
inc
and
mov
add
enter
iret
gs
add
inc
add
add
scas
ljmp
add
lods
push
add
add
push
add
insl
fimull
in
les
push
lds
jae
mov
out
movsb
add
stos
stos
sbb
daa
jbe
pop
data16
add
add
add
and
mov
arpl
ret
ret
mov
sbb
rolb
push
add
scas
xchg
inc
add
cmp
mov
leave
aad
jmp
add
std
xor
jp
rolb
mov
add
xor
sub
scas
out
lret
inc
cmp
repnz
mov
add
jnp
add
cmpsb
add
sbb
inc
add
mov
pop
xor
lods
dec
push
inc
add
add
add
and
xchg
or
add
cmc
testb
push
fistpl
js
sar
repnz
mov
rolb
xor
in
insl
mov
push
add
lea
mov
push
and
add
add
ret
ljmp
cmp
add
stos
and
add
movsb
add
mov
cmpsb
add
xchg
add
add
sub
mov
addl
add
add
mov
sbb
jl
pop
roll
add
das
rolb
decb
lock
adc
fsts
add
add
add
push
je
loope
rcr
jmp
cmc
ret
lahf
ret
cmpsb
add
cli
js
cs
stc
scas
push
add
das
inc
addb
aas
jns
or
mov
rolb
add
sbb
add
lods
lcall
pop
jno
add
mov
sahf
cmp
movsl
ror
add
lock
adc
add
add
add
add
add
ja
hlt
add
add
cwtl
in
jo
mov
dec
pop
mov
add
cmpsl
fistpl
out
aaa
popf
in
aaa
push
add
roll
mov
imul
js
ret
cmpsb
add
in
mov
xor
nop
add
xchg
add
xchg
add
mov
and
repnz
add
out
divl
add
inc
stc
pop
sub
incl
add
arpl
add
dec
adc
scas
inc
sub
mov
add
add
jo
push
mov
ds
in
inc
jo
pop
outsl
adc
addb
ret
mov
add
add
mov
fdivl
fisttps
add
sahf
push
add
or
add
repnz
lcall
xor
add
movsl
xchg
add
inc
ss
js
add
rolb
jle
add
add
add
ret
scas
cmp
out
and
inc
add
lods
cmp
add
and
add
adc
mov
add
inc
add
cwtl
pop
xchg
add
ja
cli
or
add
cmc
dec
add
mov
mov
add
add
add
xor
mov
fmuls
incl
into
dec
mov
out
mov
stos
in
popf
pop
out
add
sbb
je
faddl
loopne
pop
push
add
mov
cmp
out
add
mov
imul
push
cmpsb
add
add
ret
inc
add
repz
mov
and
adc
orl
and
lock
jbe
cmp
xchg
add
mov
add
add
lods
loope
pop
xchg
add
or
jne
adc
xor
mov
add
add
addb
and
add
add
add
sahf
out
sbb
jp
dec
xchg
add
arpl
cs
int
dec
xchg
loope
mov
push
mov
cs
pop
xor
push
add
xor
jns
push
div
mov
fimuls
xor
in
mov
out
dec
pusha
add
push
add
sbbl
add
mov
add
add
ss
clc
arpl
mov
add
decl
sbb
jbe
ds
add
adc
add
mov
mov
imul
add
jecxz
les
imul
inc
add
sub
dec
mov
mov
pop
mov
and
push
add
jge
add
mov
jbe
pop
outsb
add
push
add
mov
outsb
dec
or
push
and
xchg
ljmp
add
jmp
add
pop
cmc
sub
add
mov
sub
shrl
pop
stos
dec
icebp
jmp
add
mov
ret
mov
sub
push
add
add
push
cwtl
je
sbb
call
add
repnz
mov
mov
xor
mov
push
sahf
addb
dec
outsb
in
sub
add
ficoms
add
jbe
movsl
jb
jl
pop
sbb
add
mov
push
add
add
xor
adc
stos
loopne
mov
push
imul
cmpsl
mov
add
add
ret
xchg
dec
rolb
push
add
jbe
add
add
add
push
popa
fildl
mov
sbb
push
add
mov
test
mov
ljmp
push
add
add
xchg
jl
popa
popa
cmp
add
and
add
inc
add
add
add
and
xor
fidivrl
add
movb
inc
xchg
inc
add
in
jecxz
clc
add
in
ret
outsb
adc
xchg
add
popl
adc
add
test
dec
inc
cld
cmp
add
add
xchg
xorl
inc
add
cmp
out
add
pushf
mov
push
mov
addb
testb
mov
rcr
testl
test
inc
rolb
divl
add
add
add
lods
aad
xchg
js
add
aaa
hlt
add
push
add
sub
add
jg
add
mov
sub
add
xchg
add
mov
dec
pop
xchg
push
rol
sub
bound
mov
add
pop
and
add
adc
aaa
and
mov
add
insl
test
xchg
push
add
jge
rolb
xor
and
mov
clc
iret
out
lret
or
add
hlt
add
mov
push
add
sbb
jmp
mov
fistps
loop
fstps
mov
arpl
hlt
add
add
add
add
mov
aaa
jle
add
or
dec
jbe,pn
pop
or
mov
loop
dec
inc
or
mov
mov
movsl
bound
mov
je
and
mov
add
sbb
js
add
mov
pop
mov
add
push
cmp
jl
outsl
jl
push
rolb
sbb
sub
add
add
add
add
sub
clc
xor
mov
add
add
iret
es
aam
cmp
xchg
xchg
add
mov
subl
or
add
scas
mov
add
pop
push
stos
mov
insb
mov
add
out
mov
mov
add
and
inc
mov
mov
xchg
pop
xor
or
add
cmpsb
add
adc
mov
adc
mov
push
out
add
mov
aam
cmc
fldcw
add
add
add
jge
mov
mov
xor
hlt
add
xor
dec
push
push
add
add
into
fmulp
or
add
add
push
aas
and
add
jno
inc
nop
add
iret
movsl
dec
push
add
add
mov
outsl
sub
pop
gs
mov
nop
add
sub
or
std
sti
addb
mov
sub
jns
adc
lahf
fnstcw
dec
and
mov
loopne
mov
add
mov
pop
arpl
in
loope
add
daa
lods
outsl
addb
mov
add
jb
movb
add
add
fnsave
imul
cmp
jmp
cmp
popf
mov
add
stos
in
dec
add
mov
add
cmp
xlat
and
add
or
addb
add
sbb
sti
test
mov
inc
add
add
pop
loope
xor
cwtl
icebp
and
sub
sbb
in
push
add
mov
cmp
stc
adc
aas
add
mov
add
out
sub
testb
mov
or
icebp
outsl
jbe
or
xchg
add
cwtl
cli
imul
loope
mov
or
dec
cmpsl
or
outsl
aas
push
add
loopne
xor
inc
xor
xchg
add
aas
aaa
arpl
add
adc
mov
ret
sbb
add
mov
push
and
cmc
cli
fwait
push
out
cmpsl
not
cmpsl
mov
mov
dec
fnstenv
pop
jns
add
xchg
adc
out
rolb
sub
push
or
add
xchg
mov
sbb
add
xor
cmp
or
add
movb
mov
mov
movb
test
push
add
bound
mov
cld
test
xchg
sbb
xchg
add
cld
rolb
ljmp
fs
inc
sub
add
lock
ss
sub
cld
repz
add
dec
fwait
cmp
add
mov
insl
outsl
add
add
jecxz
and
fistpll
into
arpl
mov
add
frstor
add
pushf
repnz
push
add
add
addb
test
xor
jae
lock
mov
std
xor
test
clc
xchg
in
adc
sub
add
add
add
add
xlat
lret
lods
cmp
add
insl
xor
ja
or
and
loopne
add
add
xor
xchg
push
add
addb
lds
movsl
push
cmp
popa
dec
inc
inc
add
add
add
mov
xor
lret
push
add
add
push
dec
rolb
pop
mov
pop
cltd
frstor
add
jns
and
adc
std
or
add
dec
testb
sbb
sub
mov
mov
rolb
jne
test
dec
xchg
add
push
add
add
fisubrl
cmp
add
add
add
xchg
add
mov
mov
les
adc
mov
addb
add
jne
add
scas
pusha
add
enter
dec
cmpsl
push
cmc
lea
int3
sbb
add
adcl
nop
add
push
add
push
pop
and
stos
adc
aaa
int3
aaa
hlt
add
add
add
arpl
xchg
sbb
adc
mov
add
push
cmp
roll
jle
cmp
add
addl
add
cmp
xor
into
outsl
xor
addb
and
mov
sub
insb
test
and
mov
inc
add
loopne
add
fdivrl
pop
or
xchg
add
push
add
add
shrl
add
add
pop
add
dec
mov
rolb
aam
loop
add
mov
and
lahf
nop
add
sahf
out
cli
adc
data16
insl
in
nop
add
data16
push
or
mov
push
add
cmp
mov
mov
add
cli
int3
and
fsubs
in
jmp
add
inc
add
inc
stc
mov
cli
rolb
add
sub
and
mov
jne
stos
test
icebp
mov
add
nop
add
dec
cli
add
movsl
movsb
add
add
fsubs
add
add
mov
cmp
add
or
and
test
add
fmuls
adc
sahf
in
lret
mov
stos
cmp
add
mov
movsb
add
cmp
pop
xor
cmpsb
add
leave
sbb
add
xchg
aam
xor
arpl
jb
jne
loop
pop
pop
adc
mov
add
cmp
add
add
mov
xchg
or
das
lods
adc
add
stos
stc
xchg
aaa
pop
addr16
push
add
adc
addb
dec
push
add
add
sbb
js
outsb
push
add
add
ret
stos
mov
jbe
push
add
out
mov
loope
ret
leave
xchg
addr16
movsb
add
inc
add
jecxz
das
enter
push
add
mov
add
repz
add
cmp
packsswb
add
leave
add
add
cld
movsb
add
rolb
out
mov
add
add
add
add
add
and
add
cmp
add
mov
sbb
mov
add
and
add
add
data16
daa
aas
test
add
andl
jmp
mov
add
cmp
add
add
add
mov
jbe
fmul
adcl
xchg
bound
mov
ror
add
pop
and
mov
fidivl
add
lahf
scas
in
mov
add
mov
adc
add
cwtl
and
mov
add
rolb
inc
sbb
test
je
mov
xlat
xchg
push
mov
add
jbe
add
lock
aaa
test
add
pop
add
stos
adc
mov
xchg
add
fidivrs
data16
add
add
add
add
daa
mov
scas
mov
add
add
cmp
scas
subps
fsubl
mov
add
dec
push
add
mov
cs
insl
xor
add
jae
add
mov
sub
xor
rcll
add
mov
add
ja
add
adc
add
add
cmp
aaa
mov
jae
and
or
sbb
add
and
add
add
add
fstl
mov
push
add
add
add
add
dec
cmc
ret
add
ja
jae
in
jae
out
sbb
outsb
inc
jmp
add
add
add
orl
push
mov
or
add
jge
xor
sub
add
sub
sub
into
addr16
into
xor
adc
dec
push
add
add
add
icebp
cltd
dec
cmpsb
add
add
xor
loopne
pushf
stos
hlt
add
add
push
repnz
jmp
inc
sub
mov
jge,pn
add
xchg
sti
push
inc
cmp
add
sbb
add
add
add
add
loop
jae
pop
jp
push
add
cld
insb
xchg
add
jns
add
lcall
push
jb
push
push
jecxz
cmp
add
mov
sub
add
push
xor
rolb
pusha
add
mov
add
xchg
cmp
add
out
popf
in
cmp
add
xor
cwtl
test
call
mov
jle
rolb
in
xor
nop
add
mov
add
mov
imul
push
add
shrl
sub
add
jmp
add
add
sub
xchg
iret
std
pusha
add
xor
sahf
icebp
push
xor
and
mov
add
add
je
and
int
adc
or
inc
add
ffreep
push
add
ret
outsl
mov
add
pop
pushf
dec
sti
mov
add
mov
out
aad
pop
insl
mov
push
fidivrl
cmp
pop
movsb
add
mov
and
mov
add
mul
out
push
push
fidivl
add
mov
mov
add
mull
addl
xor
push
pusha
add
dec
and
mov
test
add
add
push
add
mov
stos
shll
out
mov
bndstx
push
negl
xchg
add
push
movsl
mov
lock
cmp
ret
sub
mov
jns
pusha
add
pop
mov
adc
js
add
jmp
add
xor
dec
std
push
add
mov
and
jne
inc
loopne
cmp
mov
add
jne
lret
nop
add
xchg
add
inc
xor
or
add
push
and
push
add
add
add
adc
xor
popa
into
pushf
test
imul
into
iret
inc
add
fs
add
add
add
add
mov
out
adc
addr16
xchg
fcomps
add
add
add
xor
sahf
data16
dec
dec
fdivp
fwait
xor
fldcw
fsubrl
add
out
arpl
jecxz
stos
int
cmpsb
add
jecxz
and
mov
adc
scas
inc
movb
add
mov
add
jecxz
popa
sbb
pusha
add
add
add
and
add
inc
add
loopne
inc
add
scas
jg
mov
repz
add
add
add
add
add
sub
jecxz
push
jl
in
and
jno
or
out
cmp
addb
mov
add
mov
adc
sahf
or
add
push
inc
add
add
mov
aas
dec
jb
xchg
loop
add
mov
add
mov
pop
pop
cmp
cmpsb
add
add
pop
and
movsb
add
test
add
pop
add
out
jne
inc
add
mov
daa
lret
sub
sahf
movsl
ret
das
test
add
xchg
stos
mov
mov
xlat
mov
add
add
jns
and
ljmp
push
mov
and
dec
mov
ret
call
push
add
pop
xor
dec
loop
addb
xor
aas
lret
nop
add
aas
sub
add
add
popf
repz
lret
mov
lods
mov
sbb
fisttpll
arpl
add
pusha
add
add
push
add
xchg
add
jnp
add
mov
icebp
jmp
fxam
add
mov
add
add
outsl
fistl
mov
or
adc
push
cmp
sbb
add
add
sahf
jne
mov
mov
xchg
push
rcrl
adc
int3
fisubrs
add
add
mov
das
je
mov
arpl
add
add
inc
out
pop
data16
mov
inc
add
ret
mov
shr
out
addb
mov
mov
add
and
mov
adc
sub
xor
imul
mov
add
leave
inc
add
jle
add
pop
add
in
sbb
add
sbb
test
test
and
mov
scas
and
hlt
add
sub
jbe
incl
push
lods
sbb
push
add
fwait
push
cmc
mov
clc
sbb
add
push
add
sub
add
adc
int3
out
or
add
or
rolb
shrl
cltd
stos
push
add
add
scas
enter
pop
and
int3
and
es
add
add
stc
fistl
aaa
push
jnp
xor
repnz
test
inc
outsb
jecxz
add
add
arpl
inc
dec
cmp
push
or
mov
add
push
fiadds
add
add
jmp
push
addr16
add
movl
test
imul
std
lods
xor
xchg
add
sbb
testl
add
int3
in
push
add
and
add
add
mov
rolb
in
cwtl
push
cli
ss
ljmp
mov
mov
dec
add
push
ret
xor
lahf
cvttps2pi
fidivs
add
xchg
movaps
dec
aas
cmp
pop
push
mov
popa
inc
add
push
mov
lock
mov
add
add
add
int3
cmp
shll
ds
add
add
add
sub
das
pop
cmovne
pop
lds
inc
add
add
jecxz
add
add
inc
xor
inc
cli
or
daa
xchg
movsl
lret
movb
push
cmp
loop
xor
add
add
lea
add
xor
mov
add
add
and
mov
jp
add
cmp
jp
adc
pop
shll
adc
lock
lret
xchg
in
push
add
addb
jae
add
xchg
out
ja
scas
add
sub
out
movsb
add
mov
or
cmpsl
sbb
push
fstpt
das
inc
push
insb
enter
add
test
mov
xor
add
iret
mov
or
cmp
jle
dec
dec
xchg
add
xlat
setp
push
add
add
sbb
cmp
push
mov
add
test
or
jle
add
mov
pushf
mov
dec
leave
inc
addr16
xchg
push
pushf
xor
mov
iret
andl
dec
cmpsl
lock
add
push
add
xor
xchg
jmp
add
out
mov
aam
add
mov
xchg
sbb
xor
in
mov
xchg
push
rolb
push
mov
aas
mov
dec
cld
mov
sbb
je
fcoml
js
add
sbb
out
jle
cmp
add
and
addb
push
mov
inc
lods
stos
inc
int
testb
and
out
jmp
popf
add
loopw
pop
add
xor
adc
cs
das
sahf
hlt
add
dec
fisttps
or
add
push
mov
add
xchg
lea
add
jns
add
add
add
mov
cmp
add
add
test
leave
lcall
mov
add
dec
dec
mov
add
xchg
jmp
rcrl
lcall
fdivr
push
fimuls
push
cli
test
cmp
add
add
add
nop
add
add
add
add
add
push
mov
jns
adc
rolb
add
hlt
add
xchg
pop
lcall
add
sbb
ret
xor
bound
mov
stos
jbe
or
xchg
add
add
add
mov
inc
add
test
aaa
insb
jmp
add
loope
xchg
add
add
add
mov
fdivp
add
or
pop
orl
testb
inc
add
add
inc
add
loopne
movsl
int
cltd
and
xor
hlt
add
stos
fstpl
xchg
push
mov
out
test
xchg
add
xchg
add
loope
sti
sbb
adc
sub
test
xor
add
rcll
mov
add
dec
movsb
add
addb
add
add
add
xor
jp
add
add
mov
or
adc
sub
ja
inc
mov
or
add
fsubr
das
jo
or
xchg
add
das
or
add
in
adc
add
add
in
int3
xlat
in
add
add
and
adc
jae
jns
pop
add
mov
dec
add
mov
xchg
add
pop
cmp
popa
add
imul
dec
pop
enter
iret
call
stc
lods
mov
std
ffree
int3
negl
out
mov
notl
mov
add
sbb
dec
and
mov
mov
lds
mov
xchg
ror
cmp
cmp
sub
add
add
jg
xchg
add
shrl
inc
add
es
add
lcall
mov
lock
movb
fisttpll
fistl
add
push
outsb
add
add
push
jmp
xor
add
fstpl
add
add
jnp
pop
mov
add
sbb
mov
add
mov
dec
lods
mov
lods
or
cmpsl
sbb
add
in
negl
inc
adc
add
and
mov
dec
testb
adc
data16
jae
add
cld
jle
inc
cmpsl
lret
and
stos
jle
in
test
stos
pop
inc
adc
lahf
jae
add
addb
add
stc
xchg
cmp
add
and
add
jle
add
bound
mov
xchg
inc
or
push
add
repz
xchg
cs
add
fcom
mov
les
stos
pop
and
mov
repz
xor
test
add
mov
data16
add
inc
mov
dec
pop
sti
and
cmc
aad
fistpll
cltd
pmuludq
push
sub
hlt
add
jg
add
stc
xchg
add
add
movsl
push
add
sub
add
add
addb
lds
add
aas
or
add
push
out
sub
mov
cmp
add
and
add
add
cmpsb
add
sbb
jecxz
xchg
add
rcrl
add
addl
and
and
mov
pop
jmp
sub
pop
xchg
or
scas
cltd
or
adc
out
cmpsb
add
add
into
xchg
xor
xchg
lods
rcll
mov
testl
sub
add
int3
loope
pop
adc
add
in
add
add
and
add
jae
dec
stos
icebp
shll
ret
addb
dec
xchg
mov
mov
iret
mov
cltd
xchg
cs
add
add
inc
add
mov
inc
push
or
add
add
ret
aad
xor
sub
cmp
add
push
and
fisubrs
add
fidivl
loope
pop
push
add
lock
add
cmpl
inc
add
mov
add
add
pop
pop
dec
xor
xor
adc
inc
insb
lods
scas
add
push
add
fidivrl
or
mov
add
mov
rolb
xor
loopne
jecxz
add
fldl
add
scas
xchg
sbb
xchg
add
mov
mov
test
sub
push
pop
je
xchg
repnz
jl
sbb
sbb
pop
dec
cli
xchg
add
add
dec
sbb
dec
cmp
dec
jo
dec
int
xor
mov
icebp
addr16
imul
add
add
outsl
cld
aad
xchg
push
add
sub
lret
call
add
aaa
bound
mov
std
sbb
add
cmp
fcomp
dec
fucomi
outsl
sub
jmp
mov
test
sub
cld
push
insb
cmp
add
add
mov
sbb
sub
xor
lret
mov
xor
jne
cmp
cli
and
loopne
sahf
sub
add
lods
lods
int3
mov
add
sarl
testb
or
add
cli
add
fdivrs
clc
and
rolb
cld
mov
movb
add
out
xchg
mov
jns
lods
inc
add
lret
push
add
mov
mov
and
test
jle
sub
pushf
test
add
bound
mov
cmpl
rolb
add
imul
nop
add
add
add
add
pop
stc
repnz
int
xor
add
fsub
testl
sbb
pop
adc
inc
ja
sbb
in
jns
or
test
pop
and
add
rolb
mov
mov
shll
cmp
add
add
add
add
dec
jp
insb
or
clc
lret
pop
jno
add
ret
nop
add
add
sbb
add
add
add
push
insb
pop
and
add
inc
add
add
add
push
lock
mov
mov
ljmp
add
adc
xchg
loope
xchg
dec
push
add
enter
xchg
pusha
add
add
jmp
xor
fistl
mov
adc
arpl
sub
shll
xchg
std
dec
add
adc
lea
lods
rolb
xchg
add
into
movb
adc
fdiv
add
add
in
jbe
pop
clc
loope
inc
xor
pop
jge
push
add
icebp
call
xor
pusha
add
and
mov
movb
loopne
adc
scas
cs
cltd
das
pop
sbb
int
add
add
jne
add
leave
lret
pusha
add
lret
daa
pop
testb
jp
and
mov
arpl
ret
lret
stos
int3
test
loope
add
ja
je
fldcw
addb
add
add
testb
add
lea
add
fldenv
bound
mov
ds
test
lret
add
add
jl
dec
les
aas
mov
mov
mov
jns
add
push
cmp
cmp
add
mov
jp
add
cltd
mov
xor
stos
mov
mov
add
add
add
pop
hlt
add
shll
jbe
out
sbb
inc
add
push
add
cld
pushf
xchg
flds
add
popf
inc
add
in
push
add
arpl
add
or
movb
clc
fdivrp
push
and
mov
cmp
inc
add
add
scas
mov
pop
push
add
mov
push
add
add
push
addb
or
jp
outsb
rolb
jb
pop
jp
add
mov
add
fcomp
sbb
mov
out
jae
dec
cmc
mov
cld
and
add
mov
xor
pop
cmp
lods
push
add
cmp
add
add
out
xchg
add
movb
add
sub
enter
add
dec
push
add
add
sbbl
inc
outsl
push
add
add
add
push
add
mov
aaa
nop
add
add
jg
xchg
std
in
add
push
lea
mov
mov
aad
pop
fildl
sbb
sbb
sbb
pxor
dec
js
add
dec
popf
xor
cli
add
lock
imul
xchg
add
ljmp
cmc
jle
add
add
add
mov
push
adc
xchg
cld
or
sub
push
cmc
jl
add
jge
in
or
add
dec
mov
dec
mov
add
seta
jp
punpckldq
mov
and
add
add
sub
nop
add
mov
fadds
add
sub
scas
dec
aam
pop
icebp
loope
inc
add
add
dec
inc
pop
std
aad
jbe
ds
cmp
add
jb
outsb
arpl
jo
in
cmp
add
cmpsl
push
jmp
add
pop
movsb
add
cmp
popf
outsl
fidivrs
stc
movb
mov
movb
add
sbb
add
out
sbb
inc
out
inc
add
add
push
add
add
stos
add
je
dec
xor
pushf
out
jle
mov
xchg
jp
adc
mov
mov
xchg
add
pop
cmp
pop
inc
add
fs
bound
mov
push
adc
leave
adc
mov
xor
add
mov
add
add
in
fimull
scas
xchg
dec
cli
lcall
xchg
add
mov
mov
add
add
add
inc
jle
push
test
stc
xor
add
lret
sub
add
cmp
cmp
add
cmp
inc
iret
jp
fadds
sub
rcrl
add
stos
bndstx
add
ret
sbb
insl
add
or
addl
out
push
xor
push
add
fldl
cltd
sti
mov
in
mov
and
mov
add
insb
adc
mov
leave
xlat
pop
xchg
bound
mov
add
rolb
sub
lods
adc
iret
sahf
adc
mov
xchg
add
test
jecxz
mov
mov
mov
shll
jle
add
add
js
adc
add
pop
and
pop
outsl
xchg
add
subl
add
mov
sbbl
add
add
xchg
icebp
xchg
add
test
jmp
js
testb
je
jg
inc
add
lea
add
roll
add
mov
ja
cmp
and
mov
cmp
add
and
icebp
movb
xchg
int3
jae
pop
sub
add
add
leave
adc
std
shll
add
leave
pop
cmp
inc
add
out
push
stos
in
xchg
dec
sub
push
add
iret
xor
add
add
ret
mov
loop
dec
mov
add
add
pusha
add
add
xchg
add
lods
fdivrs
jno
outsl
xchg
inc
add
cmp
pushf
repz
mov
jge
push
add
inc
insb
lret
xor
push
push
fsubl
cmp
xchg
sbb
cmp
cmp
pop
add
cmp
add
add
add
std
jns
movsl
loope
push
xchg
sub
lahf
out
cli
call
add
add
fisubs
ja
add
add
xor
add
jnp
stos
sub
sub
adc
mov
sahf
push
pop
clc
bound
mov
add
push
add
add
sub
rorl
add
add
add
addb
mov
sub
sub
arpl
rcll
add
lahf
int
shll
sub
push
add
adc
sbb
add
stc
push
push
add
jae
add
mov
inc
add
pusha
add
add
hlt
add
add
add
mov
jns
jne
push
pop
push
add
adc
mov
add
inc
add
imul
addr16
fmuls
mov
mov
jl
push
add
add
add
or
inc
jns
outsb
mov
hlt
add
push
add
xor
testb
add
and
mov
add
cli
pop
mov
imul
popa
dec
fsubrp
jno
pop
fs
mov
in
sahf
inc
test
mov
mov
push
add
add
mov
fwait
jg
add
test
pop
xor
add
fpatan
mov
mov
pop
pop
sbb
sbb
adc
jne
or
add
mov
mov
inc
gs
sub
mov
in
sbb
cmp
stos
leave
jmp
ja
mov
inc
insb
push
push
add
fs
mov
push
sbb
mov
add
mov
push
scas
xchg
mov
jns
and
les
mov
cwtl
and
or
iret
loope
mov
xor
mov
popa
fdivl
add
add
or
insl
repz
mov
or
push
add
incl
leave
mov
dec
jmp
add
ljmp
add
clc
rolb
gs
imul
jg
add
adc
push
add
add
add
sub
repnz
xchg
sbb
adc
pop
sarl
mov
out
arpl
add
sbb
add
test
jns
lods
lret
xor
addr16
mov
in
rolb
jle
add
add
shll
push
jne
cmp
out
sub
add
mov
inc
push
fdiv
add
add
mov
lcall
add
add
add
adc
les
add
add
inc
add
xchg
add
aaa
out
lock
add
add
movsl
and
mov
push
add
mov
mov
addb
cs
mov
faddl
testb
hlt
add
jecxz
add
jno
jle
stos
push
add
pop
inc
mov
mov
mov
push
add
iret
push
das
pop
loopne
insl
int
sbb
add
ror
xor
push
add
mov
jle
stos
inc
jecxz
mov
jmp
add
mov
jo
or
sub
insb
mov
loop
outsb
mov
out
sub
jne
inc
add
loop
xchg
mov
add
lea
sbb
add
xchg
pop
loope
add
pop
clc
out
out
ljmp
jle
leave
or
add
push
add
add
rorl
repnz
push
add
add
and
mov
add
push
add
add
clc
in
inc
add
sbb
jo
iret
test
xor
imul
mov
rol
outsl
in
repz
lcall
add
pop
xchg
xchg
jmp
add
mov
dec
ja
add
mov
add
mov
adc
cmp
pop
jns
hlt
add
pop
fbld
movsl
jb
je
jecxz
test
pop
and
mov
or
mov
lds
jge
cmp
or
ljmp
mov
add
add
cmp
cmp
clc
scas
dec
mov
out
mov
push
out
inc
push
sbb
add
or
out
add
xor
add
adc
xor
adc
xor
mov
dec
sub
fldt
add
add
xor
jmp
sbb
bound
mov
pop
pop
jnp
ret
or
cli
insb
aaa
popa
xchg
add
int
test
mov
mov
rcr
cs
add
mov
popa
ret
dec
es
pop
es
mov
cltd
pop
pop
sbb
out
adc
xchg
popa
cmpsl
in
loope
ret
xchg
cmp
lret
pop
mov
mov
repz
rolb
xor
or
add
xor
jge
add
sub
mov
popf
jg
add
inc
add
jne
cmp
hlt
add
mov
sbb
dec
into
lcall
fmul
add
mov
test
add
inc
sub
stc
pop
cmp
add
jg
pop
cmp
xor
sub
ret
icebp
aaa
in
sbb
add
pop
jg
cmp
pop
mov
add
add
out
add
add
add
push
add
add
add
add
out
mov
inc
add
icebp
sbb
add
rolb
mov
adc
xchg
or
adc
mov
mov
add
test
dec
in
and
mov
add
push
lods
lods
sbb
add
add
cltd
inc
add
add
js
add
xor
mov
mov
jecxz
mov
mov
or
outsb
push
cmp
add
xchg
icebp
push
cmpsl
movb
jne
jmp
add
dec
inc
add
hlt
add
add
mov
jge
add
push
xchg
add
inc
add
add
stos
aaa
cmp
lods
or
add
mov
dec
inc
add
push
lahf
mov
daa
rolb
insl
es
repz
adc
sti
or
add
pusha
add
push
notl
cmovge
subl
jae
add
insb
gs
ret
xlat
add
add
add
mov
fiadds
add
mov
xchg
dec
jecxz
dec
inc
bound
mov
add
add
std
jne
or
xchg
add
std
sbb
add
cmpsl
rcrl
add
push
push
rcrl
out
mov
rcrl
dec
mov
fistpl
dec
mov
sahf
mov
add
mov
shll
add
add
add
and
cmp
cmp
jns
jae
imul
pusha
add
dec
xchg
cmp
xor
leave
mov
pop
into
or
lret
jnp
add
xor
test
sbb
add
or
add
inc
jnp
stos
jecxz
enter
dec
insb
push
dec
stos
sub
add
mov
arpl
add
pop
dec
and
mov
add
add
lock
push
or
add
add
push
pop
aad
icebp
in
xor
and
sbb
js
lcall
sahf
stos
xchg
add
add
mov
jecxz
testb
je
inc
add
int
gs
add
testb
jmp
add
jmp
pushf
test
mov
add
fnstsw
cmpsb
add
adc
mov
push
mov
add
pop
leave
push
add
cmp
add
add
xchg
or
inc
add
gs
add
add
sbb
test
lcall
add
in
push
cltd
mov
jecxz
add
mov
add
shll
add
add
jo
testb
push
pop
cmp
add
add
inc
add
ja
lea
push
and
mov
and
or
mov
inc
add
add
addb
mov
inc
add
add
inc
stos
inc
sub
out
addb
clc
fisttps
adcl
ret
add
mov
insb
std
xor
cmp
and
leave
rolb
jb
jb
shrl
in
add
lahf
addr16
add
xchg
fnstcw
xor
movb
mov
add
mov
das
mov
int3
ret
mov
or
stos
arpl
mov
test
repnz
and
dec
jg
add
sahf
adc
xchg
add
or
imul
or
mov
add
add
add
add
sub
add
jle
jg
jo
mov
add
or
adc
add
mov
jo
sbb
dec
sub
cmp
pop
mov
add
add
add
xchg
add
cmp
nop
add
ret
test
nop
add
add
jo
pop
popf
mov
cmpsl
pushf
mov
jbe
insl
mov
or
add
imul
add
dec
mov
add
fscale
pop
mov
add
mov
mov
dec
push
add
inc
add
xchg
mov
mov
push
dec
data16
add
add
xchg
or
add
call
cmp
xchg
add
add
xchg
pop
pop
add
aaa
mov
cmp
ret
inc
fists
repz
add
add
or
xchg
sbb
mov
cmp
out
xchg
add
add
mov
fcoms
inc
xchg
add
imul
adcl
add
out
mov
fucomi
xor
add
pop
es
add
repnz
ss
lret
call
add
add
and
add
ja
xor
insb
popa
fldt
decb
movsl
fcoml
add
in
xchg
sbb
add
add
add
add
dec
scas
sub
lods
sbb
mov
test
inc
or
mov
jns
add
int
std
int3
pop
mov
ret
xchg
cwtl
aas
inc
imul
sahf
cmp
add
add
daa
sub
aam
cltd
sub
dec
mov
mov
jno
lock
test
and
lret
and
push
add
cmpsl
scas
mov
std
mov
add
dec
xchg
das
inc
add
addb
fimuls
popa
push
add
out
inc
or
or
add
and
loope
gs
outsl
mov
add
in
mov
mov
add
add
daa
mov
pop
xlat
dec
cmp
rolb
ljmp
outsb
aaa
movsl
call
sub
add
cli
cmp
lock
movsl
pop
lret
add
mov
in
push
add
xlat
repnz
movsl
lods
pop
jmp
add
in
icebp
xorl
xor
rcr
mov
dec
sub
addb
aaa
mov
jg
add
dec
mov
add
adc
sahf
les
or
add
add
add
add
push
add
sahf
xor
mov
rolb
bound
mov
add
or
aad
add
push
cmp
sbb
add
mov
add
add
push
aam
mov
add
iret
mov
in
push
ret
push
xor
jo
pop
add
sub
rolb
xor
nop
add
mov
xchg
sub
xchg
inc
outsb
mov
xchg
cmc
aad
sahf
push
jmp
push
add
movsl
xchg
sbb
aad
xchg
fwait
cltd
xlat
arpl
add
rcl
xor
jge
dec
mov
pop
add
lods
jge
add
mov
xlat
mov
add
scas
jbe
pop
inc
int
mov
sub
pop
mov
add
ljmp
jle
or
add
add
push
clc
mov
push
add
fcomp
pop
ret
xor
jle
fidivrl
cwtl
cmp
add
adc
lret
add
add
mov
pop
enter
add
add
add
add
jecxz
loop
clc
or
add
add
fcom
fwait
scas
mov
call
lods
dec
adc
test
mov
addb
mov
dec
les
push
add
push
ss
add
popl
sbb
decl
cltd
ja
jle
add
movd
scas
jb
ret
add
mov
fildl
jge
inc
jmp
add
add
pop
push
add
in
addr16
add
insb
iret
ror
add
xor
lcall
mov
lahf
pop
dec
add
sub
jle
popf
mov
lcall
test
xlat
ja
stos
addb
push
test
icebp
addb
testb
js
add
add
push
xchg
add
decl
xor
lock
sub
subl
testb
add
mov
add
into
dec
jns
movsl
je
hlt
add
and
sbb
or
ja
lods
mov
xor
mov
sarl
add
jl
cmp
push
add
mov
jp
icebp
sub
cmp
nop
add
add
xor
add
push
add
pop
inc
jno
add
cli
pop
mov
and
mov
xor
shll
add
add
add
roll
mov
scas
mov
mov
add
xchg
gs
cmc
ljmp
add
aad
mov
add
in
and
mov
dec
mov
in
dec
sub
sbb
mov
popa
outsl
les
icebp
jae
cmpsb
add
cld
adc
cli
jmp
aaa
add
outsl
loopnew
testb
xor
lahf
movsl
push
add
add
push
push
cld
jmp
pop
inc
add
movb
add
addb
add
mov
test
mov
xchg
fidivrl
pusha
add
rolb
shrl
fbstp
mov
adc
fistl
add
je
out
xor
in
into
mov
add
ja
push
jl
mov
add
rorl
test
insl
addr16
add
push
add
add
lahf
or
add
dec
aad
jl
out
adc
cmc
jae
flds
add
cmp
int
xor
fstpl
iret
add
and
mov
and
jno
add
adc
or
mov
pop
ret
push
add
dec
pop
cs
inc
add
push
aam
and
ror
bound
mov
imul
inc
add
and
mov
add
add
stc
push
add
cmpsb
add
pop
ret
jb
shll
add
push
add
imul
add
add
add
add
jmp
sbb
add
mov
push
pop
rol
inc
add
add
mov
add
jno
loope
mov
inc
add
inc
add
ljmp
add
cmp
push
add
add
lock
int
cmp
xor
cmp
add
jbe
icebp
adc
mov
sbb
pop
movsl
rolb
dec
xor
ret
xchg
clc
dec
inc
out
mov
pop
mov
nop
add
rolb
fldl
insb
push
fisubrl
add
cli
mov
cmp
or
dec
pusha
add
pop
fdivs
lods
sbb
add
add
mov
add
mov
add
mov
mov
jb
ss
add
jg
mov
add
out
or
add
add
sbb
mov
or
add
inc
add
dec
mov
cli
adcl
adc
push
mov
xlat
aaa
lret
lods
mov
cmpsl
pop
mov
add
add
and
mov
add
scas
dec
cltd
push
pop
sbb
addb
inc
add
add
sbb
out
lret
dec
stc
addr16
negl
pop
xor
mov
pop
enter
add
leave
xor
xchg
add
lds
insb
dec
add
mov
and
mov
test
push
xchg
scas
ret
lcall
int3
sub
xor
add
mov
add
pop
cmpsb
add
add
add
push
add
add
add
cmp
and
mov
pop
or
sub
add
adc
add
xor
add
fidivrl
je
cmp
jne
xchg
cltd
inc
dec
mov
add
xlat
add
mov
add
jb
and
and
sub
mov
scas
mov
mov
lock
push
jnp
arpl
cmpsb
add
add
cmp
mov
push
add
sub
add
dec
jge
add
jnp
lock
add
jp
cmp
mov
xor
iret
inc
lret
mov
sub
daa
arpl
inc
mov
mov
add
mov
lret
sub
add
sub
add
sbb
add
pop
and
mov
dec
movsb
add
test
add
pop
sub
cld
or
add
sbb
in
and
push
add
lret
ret
add
add
out
daa
mov
int
mov
insl
push
ret
mov
incb
inc
add
adc
or
adc
in
mov
mov
add
add
mov
inc
add
add
and
add
add
adc
adc
jmp
dec
lds
add
repnz
add
sub
add
add
mov
loopne
add
sbb
sbb
lods
bound
mov
xor
push
add
sub
add
add
aaa
scas
mov
or
fldcw
add
push
add
or
aam
cmp
jno
xchg
add
sarl
add
jne
add
add
add
movb
add
add
inc
sbb
insl
incl
jl
ror
addb
add
add
add
in
mov
add
add
gs
out
inc
add
sub
stc
mov
add
jo
test
dec
in
push
adc
testb
mov
jae
add
xor
dec
test
mov
push
add
data16
push
aam
std
jo
in
push
add
xor
add
push
add
push
add
adc
mov
add
notl
adc
inc
scas
lahf
idivl
push
add
add
mov
cld
pop
mov
movsl
sub
icebp
scas
xor
rcrl
add
dec
shrl
xchg
mov
sbb
mov
add
mov
add
daa
fcomi
add
cld
cmp
imul
push
cmpsl
push
add
dec
add
add
fcompp
mov
xchg
mov
xor
xchg
xchg
add
add
push
add
mov
fdivr
push
pop
add
stc
fsub
test
add
lret
call
das
dec
mov
add
add
loope
add
add
nop
add
aaa
fstl
pop
jae
ret
nop
add
inc
add
fnstenv
mov
cmp
add
xchg
add
jno
push
stos
dec
scas
push
test
stos
jecxz
shrl
adc
in
or
dec
rolb
pop
xchg
sub
fsubr
aaa
cwtl
lcall
push
pushf
jne
inc
jae
xchg
add
xchg
push
add
mov
fdivs
mov
inc
add
jmp
pop
sbb
jge
mov
or
sub
sti
rcll
mov
addb
and
add
adc
xlat
push
add
in
mov
cmp
dec
add
mov
inc
fnsave
std
xor
and
ss
mov
sub
adc
testb
rorl
jle
add
stos
mov
sub
fcoms
mov
add
cmpsl
sub
add
or
add
jge
addb
jno
or
or
add
fwait
dec
fmull
add
insl
push
add
or
nop
add
sub
das
lret
dec
loop
pushl
scas
stos
xor
adc
jl
add
fnstsw
mov
add
push
iret
xor
cmpsb
add
xchg
lods
scas
sbb
add
stos
inc
jp
movsl
sbb
ljmp
or
add
jne
mov
add
iret
pushf
jmp
add
ficoms
call
push
add
repnz
sub
xor
testb
mov
add
add
cli
sbb
jb
mov
push
ja
sbb
sbbl
lods
scas
add
pop
movl
add
xchg
outsl
jmp
add
roll
inc
add
mov
pop
xchg
add
movsl
and
cmp
add
stc
sub
std
inc
movsb
add
jno
add
sub
ja
adc
jmp
add
push
scas
in
xor
add
leave
insb
xchg
add
pop
pop
sbb
xor
mov
mov
push
add
pop
add
insl
dec
sbb
mov
mov
add
lret
outsb
jae
xlat
jmp
nop
add
sub
dec
pop
add
mov
nop
add
xchg
cmpsb
add
add
add
add
idiv
cmp
sub
add
inc
fsts
fcoml
cltd
jge
xchg
mov
aad
addr16
add
sub
int
inc
add
shll
stos
lods
mov
mov
add
add
xchg
sub
testb
sbb
scas
mov
mov
dec
mov
add
lahf
cltd
pop
jbe
xchg
push
outsb
dec
jge
inc
add
mov
inc
add
jl
add
push
scas
andl
pop
ret
push
in
jb
jge
mov
or
ret
mov
add
sub
ret
test
mov
and
mov
imul
add
pop
bound
mov
rcll
and
int
rolb
shll
xchg
add
rolb
lds
mov
movsb
add
clc
in
add
add
add
faddl
add
add
or
dec
adc
mov
add
jnp
in
clc
pop
mov
add
aam
in
ja
mov
add
adc
fwait
lea
add
dec
inc
das
mov
mov
pop
aad
add
jb
sbb
mov
add
sub
xchg
cltd
es
inc
lods
sub
imul
add
pop
jp
add
xchg
hlt
add
popa
xchg
add
add
jp
adc
xchg
mov
repz
movsb
add
sbbl
dec
sbb
and
gs
add
cmpsl
loopne
hlt
add
mov
cmp
add
mov
sub
repz
test
stos
lret
sub
lods
test
insl
mov
add
outsl
add
xor
add
add
jnp
add
pop
push
add
add
pop
das
les
insl
push
cmpl
cmc
xchg
fwait
push
ss
and
mov
add
sbb
xor
js
scas
or
add
add
dec
jne
add
jle
push
add
jmp
xchg
add
jmp
add
jno
sbb
cmp
add
mov
stos
ret
inc
sub
add
add
fisttpll
mov
add
mov
sbb
add
arpl
std
scas
jge
sbb
mov
add
add
add
cmp
mov
add
addb
call
add
mov
add
stos
dec
jne
stos
hlt
add
sahf
cmp
sub
adc
adc
xchg
call
add
mov
das
xor
or
mov
ja
xor
push
addb
mov
mov
xlat
pushf
enter
add
lea
mov
jne
aad
pop
inc
add
jle
xchg
jb
dec
add
mov
add
ds
add
dec
insl
add
rolb
pop
adc
add
add
jecxz
push
mov
ja
and
mov
in
inc
add
add
add
sub
aas
sbb
adc
dec
repnz
or
xchg
or
push
and
das
mov
add
jno
jg
add
add
out
fmulp
jno
insb
pop
pop
push
dec
decb
inc
add
and
mov
and
gs
dec
roll
add
add
lret
add
add
pcmpeqw
lods
bound
mov
rolb
arpl
pop
cmpsb
add
sbb
jns
and
mov
add
dec
icebp
inc
sub
pop
or
shl
out
addb
test
dec
in
iret
enter
add
fwait
or
lcall
rolb
add
loop
loop
cwtl
xchg
xlat
xor
mov
lea
add
out
arpl
movl
sbb
push
or
cmp
add
sbb
popf
call
outsl
scas
sub
test
loop
push
add
pop
add
dec
mov
lea
ja
js
add
add
add
add
mov
add
add
add
rolb
movsl
push
loope
mov
xchg
xor
dec
xchg
imul
or
popa
push
add
add
push
add
repnz
rcl
add
cmp
bound
mov
jg
repnz
imull
ret
pop
loop
sub
add
add
jle
push
add
inc
add
mov
pop
inc
jae
add
push
add
cmp
fnstcw
add
push
add
lods
xor
add
add
mov
add
add
cs
add
jae
incb
add
cmp
add
nop
add
and
fs
add
add
push
add
xor
xor
add
xchg
add
sbb
add
push
add
lds
fisubrs
cmc
push
add
das
rolb
push
inc
add
push
aas
and
mov
int3
pop
mov
mov
mov
add
add
mov
pop
pop
xchg
add
or
jp
add
test
xchg
mov
lret
add
add
sbb
add
fbld
pushf
or
mov
mov
js
add
pusha
add
pop
out
mov
mov
testl
push
add
sbb
lahf
fsts
outsb
rolb
rolb
sub
add
idivl
bound
mov
add
xlat
lahf
repnz
cmp
add
push
ljmp
add
popa
testb
mov
pop
xchg
add
jae
enter
dec
cmp
insb
jns
add
xchg
add
xor
inc
add
add
fwait
icebp
mov
jns
add
loopne
cmp
add
add
mov
movsb
add
add
adc
int3
jg
mov
or
add
xor
cmp
xchg
add
mov
inc
add
adc
add
sbb
add
mov
scas
ffreep
mov
lock
and
adc
test
imul
mov
cmp
testb
add
testb
mov
movsb
add
cmpsb
add
dec
add
add
mov
or
ret
sbb
pop
xor
addr16
pop
cli
sbb
mov
push
add
jno
jp
add
adc
add
mov
mov
sbb
mov
sub
xchg
in
jbe
stos
repnz
inc
out
dec
xor
cs
sbb
or
add
add
lret
scas
ffreep
add
add
add
add
mov
inc
add
rcll
mov
leave
adc
adc
jmp
fistpl
imul
or
mov
fcomps
add
imul
in
xchg
or
pop
ds
xchg
add
loopne
insb
dec
mov
adc
mov
add
adc
aad
add
out
mov
shrl
inc
add
push
sub
jmp
add
out
jo
add
mov
pusha
add
add
popa
adc
mov
add
addr16
xchg
add
cltd
fidivrs
cmp
testb
movsl
xor
imul
jmp
scas
scas
fmull
addb
inc
lahf
xor
push
add
xor
sbb
add
jmp
test
outsb
pop
mov
push
xchg
cmp
mov
push
xor
dec
imul
dec
adc
bound
mov
aad
add
fnop
add
mov
add
xor
xor
cmp
into
sbb
add
jb
sub
imul
cmc
out
stos
xchg
jb
add
add
daa
cmp
add
mov
add
add
insl
movsb
add
das
stos
aam
into
xor
jp
ret
add
add
add
movb
add
or
pop
into
adc
xchg
xor
sub
fisubs
addb
add
and
mov
lods
cwtl
push
shrl
mov
mov
or
add
jg
cld
mov
lock
xchg
enter
add
data16
xor
cmpsl
aas
movsb
add
and
mov
jno
or
ljmp
outsb
jg
cmc
jp
popf
mov
cmp
add
outsb
pop
xchg
add
add
sbb
add
dec
mov
aam
jge
pushf
or
jne
adc
add
out
addl
mov
add
cmp
jnp
jg
add
and
add
adc
test
cltd
ficoml
add
into
mov
in
xchg
add
in
add
popf
jmp
dec
dec
out
addb
pushf
xchg
add
jns
lret
jl
testl
mov
add
scas
js
xlat
sub
mov
and
cmp
jns
mov
cmpsl
insl
cmp
mov
add
mov
jns
add
rdtscp
or
sbb
add
fwait
jo
movsb
add
mov
add
and
movb
data16
gs
mov
inc
add
mov
add
add
mov
rolb
and
mov
cltd
inc
add
mov
inc
les
addr16
pop
mov
xchg
add
add
push
add
add
add
pop
xchg
add
add
pop
add
mov
push
add
fsub
sti
jns
pop
lock
add
iret
sbb
imul
mov
mov
pop
add
pop
mov
push
add
mov
mov
lcall
clc
jb
in
test
xchg
add
add
mov
mov
jbe
jne
inc
icebp
push
or
clc
add
mov
xchg
ret
enter
add
out
ficoms
mov
sahf
dec
xor
jb
leave
push
fxch
mov
lret
add
add
cmp
add
int
push
add
add
add
mov
add
inc
add
add
add
xchg
popa
movsb
add
scas
and
mov
add
add
out
push
add
arpl
xor
adc
cmpsb
add
add
mov
fdivrp
data16
sbb
mov
sub
add
sbb
mov
push
add
mov
adc
pop
outsl
pop
mov
aas
sub
mov
sub
cmp
add
sahf
in
dec
xor
mov
mov
cmpsb
add
lods
and
mov
loop
and
add
mov
loop
jae
xchg
add
add
repz
xchg
data16
push
add
add
xor
popa
fcompl
add
push
and
mov
and
imul
lret
add
pop
cwtl
shll
lds
cmp
add
mov
test
mov
dec
lcall
loopne
inc
and
and
xchg
nop
add
xor
stos
xchg
add
rolb
dec
mov
sub
add
add
xchg
add
add
xchg
add
cwtl
fsubr
pop
fisubl
jbe
mov
data16
dec
fsubrl
lahf
jl
sub
mov
pusha
add
add
imul
add
lcall
jecxz
add
nop
add
inc
add
pop
adc
push
add
popa
mov
jne
or
pop
xchg
add
mov
pop
sbb
je
pop
ret
mov
mov
add
and
sbb
in
fwait
int
enter
or
clc
stos
or
add
mov
cmp
add
or
add
fisttpll
add
inc
lods
arpl
xchg
add
fimull
jmp
cmpsb
add
add
sbb
add
add
sbb
add
jp
inc
add
add
inc
mov
in
pop
icebp
repnz
ror
adc
push
add
pop
xor
popa
mov
xchg
add
push
add
cmp
add
jb
jno
pop
push
add
pop
push
add
add
std
lss
cli
ret
push
add
sbb
mov
out
sub
add
add
addb
fisubs
add
mov
add
test
and
add
mov
jl
add
adc
push
add
mov
add
add
add
