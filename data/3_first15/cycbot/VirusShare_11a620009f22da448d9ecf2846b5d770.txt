or
enter
repz
adc
in
or
mov
pushf
sbb
add
push
fnstsw
jne
sub
sub
test
scas
jle
enter
in
out
mov
imul
xor
daa
fldenv
add
push
shlb
enter
push
jbe
sub
mov
xchg
mov
int3
and
jne
addb
gs
add
push
cmp
mov
add
add
push
xchg
sbb
add
es
dec
add
movsl
mov
mov
outsl
divl
movsl
mov
pusha
add
addb
fldt
test
mov
mov
pusha
add
push
rcl
sbb
dec
jno
add
and
sbb
clc
das
add
adc
popa
aas
sub
xor
xlat
shlb
cmpsl
and
pop
cwtl
mov
sub
or
push
or
xor
pop
jg
xchg
enter
jb
and
clc
pusha
add
inc
add
cmpsb
sbb
xchg
enter
xlat
je
xor
and
fmuls
push
pop
lock
inc
add
xchg
xlat
mov
mov
fisubrl
or
xlat
inc
mov
add
rolb
sub
xlat
aam
loopne
movb
outsb
in
push
add
fs
repz
mov
in
dec
push
mov
mov
pusha
add
and
add
dec
sbb
clc
and
dec
cli
push
adc
hlt
adc
repz
add
xchg
fdiv
iret
inc
lods
mov
inc
add
into
in
jge
mov
dec
enter
sbb
faddl
cli
rolb
push
stos
mov
add
dec
jmp
lret
xchg
mov
mov
add
cld
mov
sbb
sbb
aad
call
jle
das
es
xchg
mov
add
cltd
jle
add
push
cmc
ds
mov
cs
xchg
aad
jecxz
cs
jnp
xlat
add
jno
mov
in
mov
xlat
aaa
lahf
aad
mov
inc
add
and
mov
mov
mov
mov
insb
mov
insb
fwait
adc
xor
popf
mov
xchg
jle
adc
fmull
adc
iret
mov
test
iret
jne
inc
dec
ret
mov
cmp
outsl
loopne
push
or
jb
ja
fimull
test
gs
fs
lods
pop
pusha
add
fsubrs
sub
cmp
mov
pop
mov
int3
jg
insl
xchg
lret
jno
jp
ja
ljmp
ret
sbb
leave
int
sti
adc
rol
nop
outsl
loop
cmp
dec
pop
fsubs
inc
add
out
jae
in
xor
mov
adc
sbb
add
shll
or
inc
add
std
stos
rcll
push
push
inc
fxam
jmp
leave
outsb
repnz
repnz
xchg
push
sub
mov
das
outsl
adc
pop
sbb
and
mov
add
add
dec
pop
fsubs
add
cmpsb
sub
out
divb
push
loop
add
add
xchg
ret
fsubrl
imul
add
ljmp
inc
add
jne
enter
rcr
dec
cmpsl
into
jp
arpl
mov
adc
mov
ljmp
ficoml
dec
sub
hlt
or
lcall
pop
mov
add
adcl
add
in
out
lds
adc
lods
cs
into
sahf
jg
add
push
pop
out
add
and
clc
aaa
xor
roll
mov
add
in
dec
jae
test
lds
movsb
mov
pop
inc
test
or
sub
int3
adc
stc
mov
es
inc
push
mov
cld
push
ja
in
lds
in
mov
inc
add
jbe
xor
scas
xchg
cld
mov
add
jnp
dec
jnp
imul
rol
add
pop
xor
jp
or
adc
mov
inc
add
add
ss
push
mov
and
jmp
xchg
jge
cmc
xor
leave
fidivs
add
mov
and
enter
inc
add
jl
xchg
cmp
repz
push
sub
in
add
insl
mov
sub
popa
pop
sub
mov
repnz
push
dec
xchg
scas
mov
add
lea
push
loope
testl
aam
xchg
add
sbb
jp
push
mul
jno
cmp
faddp
add
pop
gs
mov
push
sub
bound
pop
addb
jno
mov
push
cmp
fwait
pop
jno
xor
jo
lret
fldcw
add
add
ljmp
pop
into
add
mov
add
mov
jae
add
or
xchg
sbb
rolb
add
add
es
popa
or
cmp
stos
or
shlb
std
mov
insb
insl
sbb
mov
ds
add
in
xchg
sub
in
xchg
mov
fsubrs
rcrb
dec
aam
int
push
leave
sub
test
ljmp
leave
testb
and
add
pop
dec
scas
mov
sbbb
push
mov
sub
push
push
push
cld
call
sub
mov
imul
es
ss
lea
push
push
push
call
cmp
je
mov
lea
push
push
es
call
push
jmp
icebp
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
lea
sub
xacquire
pop
add
mov
cs
push
push
lret
jmp
add
add
fdivrp
popa
icebp
xor
pop
sbb
mov
arpl
lock
mov
iret
pop
iret
movsl
sub
int3
adc
add
mov
dec
fistl
sbb
addl
sbb
add
cmp
test
mov
movsl
pop
nop
and
add
ss
outsl
rcll
jl
push
cwtl
jmp
lea
dec
adc
xchg
xchg
mov
and
inc
add
pop
into
imul
xchg
lods
mov
jno
add
clc
xlat
inc
xchg
outsb
sub
xchg
shll
and
xchg
stos
pop
xor
sbb
mov
sarb
ds
test
push
sub
addb
add
xchg
fsubl
loopne
inc
add
add
arpl
mov
in
push
addb
adc
stos
push
mov
call
xchg
shr
jnp
pop
push
push
jmp
imul
fsubr
xor
lock
and
jbe
pop
shlb
add
sub
mov
scas
ret
mov
lcall
jge
addb
lock
pop
pop
popf
push
jo
add
mov
add
daa
sub
push
test
je
cmc
aas
cwtl
outsb
cld
sbb
xchg
jae
faddl
xchg
mov
add
fwait
dec
lcall
ret
pop
insl
and
push
add
dec
mov
jmp
pop
inc
add
loope
scas
pop
movsb
movsl
jmp
aad
pop
cli
push
pushl
push
add
sub
mov
or
mov
jmp
out
test
iret
lock
pop
adc
xor
rcrl
mov
mov
cmp
popf
lods
frstor
jge
jo
add
sbb
add
aas
popf
and
jg
iret
cmp
xchg
lret
lds
fcmovbe
cmc
mov
xor
xor
jne
jb
add
cmc
lahf
imul
addr16
pushf
rorl
xor
addb
lcall
add
movsl
ss
loope
sub
add
mov
push
add
testl
stos
cli
push
jp
test
mov
mov
aam
insb
lahf
mov
jns
cmp
push
add
add
adc
inc
sbb
pop
ds
dec
sub
in
movb
adc
mov
jl
rorb
outsb
mov
push
jl
add
hlt
cwtl
bound
repz
in
sbb
xchg
sub
addb
int3
cmpsb
in
lods
lea
cmp
sub
add
push
adc
popa
mov
movsl
jne
enter
lret
xor
push
jno
add
push
pop
out
sub
imul
repz
imulb
hlt
jnp
into
xchg
xchg
ret
dec
xchg
mov
push
jmp
jmp
add
and
lods
shrl
punpckldq
inc
add
jmp
shlb
or
mov
sub
lods
test
push
mov
cmpsb
popa
push
fimull
push
fimuls
clc
adc
fnstenv
test
inc
pop
push
lods
insb
test
aas
mov
add
pop
sbb
xor
xor
outsl
shrb
dec
jnp
call
cmp
nop
xchg
gs
xor
jle
fstpt
insb
movb
fbld
or
adc
sarl
insl
lret
call
dec
push
push
sbb
mov
sub
mov
gs
aaa
xor
stos
mov
dec
in
sub
add
pushf
inc
add
add
pop
bnd
repz
test
test
add
inc
add
ret
cmc
add
outsb
aad
iret
push
inc
xchg
int
xor
dec
or
aad
aaa
insl
sbb
mov
cwtl
pop
xor
add
jp
pop
cld
push
mov
nop
test
xchg
das
dec
mov
call
add
pop
sarl
xor
subl
je
stos
sub
int3
inc
add
je
sbb
jl
cmc
jmp
idiv
repnz
add
add
mov
je
xchg
lret
mov
jo
ficoml
mov
add
in
scas
add
cmpl
cmc
pop
test
popf
popa
js
lock
mov
fwait
sub
lret
add
xchg
adc
push
add
push
les
bound
add
sub
add
push
xor
add
popa
ret
arpl
xchg
into
mov
movsl
outsb
scas
lock
test
popa
add
jmp
addb
lea
popa
loopne
inc
add
loop
jmp
add
pop
inc
add
ljmp
cmp
add
add
add
test
mov
mov
jecxz
adc
in
test
pop
lcall
cli
cs
mov
mov
addb
push
pop
push
cld
mov
test
xor
push
xor
stos
imull
fbstp
add
inc
insl
lahf
out
in
pop
cmp
pop
jg
sub
cwtl
jl
dec
xor
fsubl
or
xchg
cmp
in
and
add
pusha
add
and
mov
mov
pop
out
mov
outsb
cwtl
stos
dec
xchg
jno
mov
push
popa
adc
or
add
sub
pop
fs
add
jl
or
add
stc
fucomi
push
lret
into
push
aam
mov
jo
jmp
mov
mov
add
sbb
mov
ret
test
mov
xlat
lret
shll
add
sbb
pop
jle
dec
stos
in
les
loope
pusha
add
or
add
lret
out
mov
repnz
cmp
mov
sub
lret
jae
jmp
add
mov
cmp
inc
jmp
in
mov
rcrb
aaa
cmpsl
cmp
cmp
cmp
jnp
pop
pop
jo
fadd
add
mov
xchg
adc
mov
add
arpl
in
cmp
dec
rol
add
inc
lret
adc
addb
pop
cmpsl
shll
cmp
add
repnz
pop
jge
push
add
mov
clc
jmpw
addb
mov
jns
in
cmp
add
sti
aam
cmp
xchg
fisubs
stc
push
fstpt
mov
push
jl
push
jae
ds
movb
jg
push
enter
mov
ja
pop
lds
imul
cmp
adc
in
ret
idivl
cmc
pop
enter
test
imul
mov
xchg
leave
mov
and
in
rcrb
push
add
push
ja
cmpsl
into
sahf
mov
mov
mov
sarb
xacquire
aad
push
jmp
fistpll
add
out
jb
mov
cmpsb
push
jnp
icebp
pop
cmp
inc
add
or
pusha
add
push
add
adc
js
lods
add
lds
repnz
aas
mov
jmp
inc
xor
dec
pusha
add
push
ficompl
inc
add
lahf
and
add
gs
ret
add
pop
mov
xor
add
adc
addl
aam
sub
insl
arpl
cltd
xor
addb
mov
dec
xchg
pop
sbb
stos
inc
add
cmp
ja
mov
int
jae
jmp
rolb
leave
xchg
out
add
cmp
push
in
cli
adc
gs
test
mov
mov
cltd
or
dec
add
adc
add
jae
sub
and
pop
cmp
adc
rolb
mov
push
bound
incb
arpl
loope
add
add
mov
lcall
enter
jmp
adcl
stos
xor
and
addb
mov
aad
or
lods
test
add
rolb
js
cmc
or
int
jno
mov
jg
addb
inc
add
stos
js
push
testb
mov
push
enter
jne
lcall
push
and
push
jns
inc
add
inc
dec
sbb
stc
hlt
pop
cmp
or
sub
lods
mov
add
test
and
dec
adc
jo
andl
lds
sbb
add
jae
ficompl
out
or
sbb
jg
push
mov
rorb
outsb
add
jp
xchg
cwtl
cmpl
popa
data16
and
mov
mov
mov
cmp
push
mov
outsb
mov
ljmp
jae
pop
lods
inc
push
sbb
mov
gs
jmp
je
dec
pusha
add
xor
pop
xchg
daa
and
movb
or
out
and
loopne
xlat
call
add
jo
pop
fcomip
mov
das
lds
out
fidivl
add
sub
shl
sbb
push
sub
push
add
lds
and
and
add
pusha
add
inc
add
pop
fdivl
sub
mov
mov
adc
es
push
inc
add
outsl
in
dec
and
add
mov
add
push
jb
test
sub
leave
xor
xor
sbb
rolb
rolb
loop
sub
clc
add
sub
pop
popf
fsubl
scas
sti
test
ja
cli
loope
sbb
lds
xor
sbb
add
shrd
insl
lods
fmuls
das
jecxz
inc
add
popf
pop
sub
pusha
add
mov
adc
cmp
mov
fwait
movsl
bound
pop
lahf
jo
outsl
dec
lock
adc
int3
aaa
add
sub
popa
fwait
lock
sub
imul
xchg
sahf
pop
push
das
jle
jne
test
out
or
push
pop
subl
adc
popa
outsl
mov
mov
notb
fstp
adc
movsl
ds
or
and
mov
rolb
mov
dec
mov
pushf
mov
faddl
fdiv
filds
addb
outsb
adc
mov
and
and
lcall
dec
adc
add
push
lods
push
jbe
pop
gs
shr
sbb
add
ret
xchg
sub
cli
sti
lods
and
mov
add
push
adc
or
test
add
sbbl
mov
in
cld
sbb
dec
pop
scas
loopne
pop
in
scas
jecxz
dec
dec
jbe
mov
dec
rcrb
add
std
push
mov
out
hlt
cmp
dec
nop
mov
movb
dec
cmp
add
mov
xchg
test
and
pop
mov
pop
mov
in
adc
or
call
pop
jp
testl
mov
popa
movsb
mov
pop
arpl
loopne
add
xor
sahf
js
addb
add
push
fs
mov
sarl
mov
mov
add
cld
outsb
mov
xchg
iret
mov
das
adc
js
push
sub
inc
add
jns
out
inc
mov
adc
call
mov
mov
mov
mov
mov
outsl
pop
mov
inc
add
leave
not
mov
dec
pushf
push
inc
jb
mov
into
mov
add
aaa
addl
add
int3
or
mov
pop
gs
fwait
add
pushf
xchg
in
and
mov
pop
xlat
scas
bound
dec
sub
jmp
ret
mov
insb
push
adcl
fwait
cmp
test
inc
add
movsl
int
das
mov
sub
stos
pop
je
add
add
add
jp
lods
jl
xor
mov
int3
movsl
aaa
outsl
or
hlt
inc
add
aam
add
xchg
inc
xchg
push
inc
shlb
ds
rolb
pop
addl
and
lods
ss
mov
mov
pop
mov
pop
insb
xor
inc
out
sahf
sbb
stos
scas
cmp
scas
ds
sbbl
add
xor
mov
stos
ret
pop
mov
pushf
xchg
inc
lret
add
faddl
or
dec
shrl
add
pop
in
xchg
mov
lcall
add
adc
adc
dec
cmp
repz
jg
or
adc
xor
adc
xchg
addb
mov
xchg
dec
inc
add
call
mov
lods
out
arpl
insb
xor
add
pop
xor
mov
aam
add
test
adc
add
add
xchg
sub
movb
in
mov
cwtl
xchg
inc
popf
in
add
out
cltd
cmp
stos
pusha
add
jae
cwtl
xchg
push
movb
xchg
or
fs
stos
pop
xchg
mov
in
js
or
inc
movb
jmp
insb
movsl
cmp
push
push
sub
pop
and
ja
cli
jns
and
and
outsl
pop
push
fmull
dec
sub
adc
sub
lret
xor
cmp
mov
test
lret
ds
and
jnp
int3
int
fnsave
imul
and
xor
in
popl
mov
lahf
bound
out
add
aam
push
push
mov
and
pop
fisttpll
jno
sbb
xchg
or
movsl
out
movsb
sti
dec
idivl
cmp
jbe
push
mov
hlt
sbb
xchg
xor
dec
cli
push
push
outsl
cmp
inc
add
mov
push
pushf
jl
mov
add
mov
mov
lahf
lods
ljmpw
adc
add
pop
stos
ja
mov
push
dec
inc
add
cli
cld
cmp
mov
pop
loop
gs
aas
sub
add
ss
add
jp
fiadds
inc
add
mov
push
dec
and
mov
cmp
sbb
pop
and
pop
mov
mov
push
icebp
pop
shrl
add
xchg
hlt
int
mov
ljmp
ret
lcall
fstl
mov
add
add
in
stos
fnsave
jae
sbb
inc
add
cmp
scas
mov
cmpsb
insl
mov
fs
pop
mov
imul
mov
mov
push
sbb
jb
cmp
adc
es
cmpsb
cmp
sub
xchg
push
add
pop
inc
pushf
add
das
fcmovnu
sbb
push
xchg
incb
xchg
rolb
loope
fwait
lea
es
mov
lret
es
add
sub
stos
push
push
inc
add
loope
cli
jb
mov
jmp
xor
out
add
cld
shll
test
xchg
push
movsl
out
add
push
add
fmulp
mov
ret
icebp
out
push
pop
test
pop
les
xchg
scas
adc
adc
xchg
or
xchg
in
cmp
or
rcll
je
mov
xchg
sbb
cmp
mov
aas
cmp
lds
das
sbb
stos
lret
inc
hlt
inc
add
das
call
out
clc
xor
fcmovnb
jo
testl
adc
movsl
mov
popa
testb
jno
jmp
lea
jg
in
popa
adcl
in
movsb
xchg
addr16
sub
push
shlb
jecxz
or
ljmp
sti
inc
mov
mov
iret
cmp
mov
xchg
out
lds
addr16
pop
pop
jne
insl
in
pop
or
hlt
in
lret
cltd
jnp
into
adc
aam
add
push
push
inc
add
xchg
unpckhps
xchg
dec
fdivl
add
shrb
sub
add
jmp
or
push
cmp
add
xchg
sbb
jg
add
jae
xor
push
repnz
and
mov
mov
sub
add
hlt
nop
cmpl
xchg
arpl
push
sbb
leave
gs
inc
add
adc
loop
leave
cli
sbb
push
pop
movb
jae
dec
lea
daa
pop
and
and
mov
scas
cmp
add
pusha
add
cmp
mov
push
out
dec
dec
mov
add
add
xchg
mov
adc
testb
mov
add
addb
test
cwtl
dec
or
loop
mov
imul
and
ss
fwait
xor
stc
cmp
std
push
mov
add
into
loop
mov
inc
fucomi
xlat
pop
push
or
xchg
mov
cld
sarb
ffree
add
add
cmp
sahf
fdivrp
pop
fs
hlt
jnp
cmp
imul
gs
mov
pusha
add
stos
dec
cmp
cltd
sarb
lret
inc
mov
outsb
push
xor
jb
stos
loope
or
cmp
xor
shrl
enter
in
add
daa
imul
inc
loope
jne
add
add
addr16
sub
je
loop
sarb
std
push
mov
mov
and
arpl
add
les
loopne
outsb
movb
xor
repz
adc
repnz
ja
test
push
in
cld
or
pop
cmpsb
push
pop
sti
dec
inc
add
add
movb
pushl
mov
sar
sbb
fwait
mov
add
xor
pop
pop
or
dec
sub
iret
or
enter
and
inc
mov
pop
iret
aas
jno
aaa
xchg
outsb
lret
dec
pushf
pop
das
and
loopne
mov
dec
mov
mov
lock
fisubs
mov
push
pop
xchg
je
jecxz
cmp
mov
add
clc
push
add
adc
and
lods
and
cmp
add
add
je
pop
mov
adc
mov
or
js
sub
roll
ret
cmp
addb
jno
fistps
fcoms
rorl
or
jae
addb
add
sub
sbb
dec
lret
int3
rolb
xchg
movsb
pop
gs
mov
jae
fs
fcmovnu
clc
stos
adc
push
mov
sbb
jmp
sbb
inc
repnz
xor
or
adc
ret
pop
fwait
pop
icebp
sub
fwait
lahf
sub
and
popa
mov
les
test
cmp
xlat
rolb
adc
arpl
push
in
cmc
das
das
sahf
sbb
pop
insb
xlat
mov
test
nop
dec
scas
and
mov
js
dec
xchg
jmp
dec
outsl
outsl
sub
lahf
test
mov
mov
mov
daa
cmp
mov
xchg
mov
xor
mov
clc
inc
add
arpl
add
fwait
dec
mov
inc
insl
push
add
inc
gs
es
fildl
push
inc
add
orl
aaa
addr16
es
xor
ljmp
into
dec
or
imul
incl
jg
shr
aas
xor
add
mov
lods
ds
in
in
adc
xlat
adcl
mov
hlt
pop
push
shr
mov
fsubp
enter
jp
stos
push
pop
ret
movsl
into
es
xchg
int3
push
jne
popf
jne
jg
pop
jmp
dec
dec
push
add
cmp
aaa
fwait
sub
push
leave
and
sbb
or
xchg
inc
cmp
mov
repnz
mov
out
aam
test
dec
xchg
into
push
inc
jmp
jl
xor
in
add
das
sbb
mov
inc
in
arpl
sbb
mov
add
sahf
sbb
add
lock
jo
pop
movsl
jg
and
lcall
cmc
mov
ljmp
inc
add
pop
in
and
cs
out
cwtl
aad
mov
jl
mov
mov
add
dec
xor
das
xchg
or
inc
sahf
scas
inc
dec
gs
int3
sbb
mov
add
add
push
cmp
pop
mov
ss
loop
xorps
push
bound
jne
jle
iret
lcall
imul
das
xlat
addl
mov
lods
mov
sub
inc
add
xor
pop
jl
jg
aad
jns
int
popa
stos
loope
data16
jg
and
fs
push
ffree
add
es
pop
mov
cmpsl
inc
add
insl
pop
adc
cmp
pop
sbb
pop
lcall
ja
adc
scas
addb
fsubrp
negl
dec
fcoml
add
sub
sahf
add
movsl
dec
cwtl
nop
inc
add
inc
add
rcr
dec
out
mov
pop
leave
cwtl
pushf
inc
add
in
rolb
in
in
mov
int
dec
rcrl
ja
adc
dec
movsl
test
insl
fidivrl
ds
lcall
lcall
pusha
add
or
loop
test
int
adc
add
xlat
int3
mov
add
mov
lahf
mov
into
inc
add
in
int3
or
out
test
pop
or
push
dec
lods
outsb
imul
stos
icebp
pop
mov
data16
mov
sbb
shl
mov
or
xor
pushf
and
and
cwtl
push
xor
xor
filds
and
mov
sub
jbe
and
adc
enter
clc
lock
or
addr16
out
adc
add
add
repnz
mov
jl
or
sbb
push
lret
sub
pop
xchg
stos
dec
js
sub
sbb
lock
lods
pop
outsl
jbe
or
repz
and
xchg
dec
in
cmp
or
xlat
movsb
fsubrs
add
add
movsl
test
fs
xchg
insl
mov
fsubs
mov
mov
sbb
int
xor
ret
and
hlt
aam
sbbl
stos
or
int3
fs
sarl
jecxz
mov
push
dec
jns
lods
xchg
loopne
mov
sub
xchg
add
dec
mov
push
dec
jne
add
sahf
pop
jl
inc
push
add
mov
repnz
push
push
and
mov
mov
or
or
mov
inc
cmp
in
movb
mov
mov
leave
cwtl
add
add
mulb
add
addb
test
rolb
mov
add
push
nop
jne
mov
clc
test
push
fadds
add
fnstenv
pop
mov
xor
or
inc
ja
mov
pop
mov
add
pushf
cmp
add
sbb
pusha
add
aaa
repz
mov
jle
xchg
mov
mov
pop
add
rorb
push
mov
int3
xorl
jb
add
in
insl
cmp
jns
or
or
xchg
xchg
lahf
inc
adc
lds
add
data16
decl
push
adc
or
repnz
in
ljmp
mov
cmp
cmp
dec
jae
outsb
mov
push
aad
in
out
add
movb
or
adc
pop
pusha
add
xlat
addb
movsl
push
jecxz
pop
mov
and
adc
ret
test
adc
or
loopne
inc
add
jl
dec
int
mov
push
adc
xchg
lret
mov
enter
adc
mov
add
mov
jae
pushf
adc
add
clc
sub
fdivl
add
rclb
daa
scas
adc
adc
push
movsb
enter
out
pop
add
jl
mov
stc
fmull
sbb
and
jo
mov
sub
js
aaa
xchg
cltd
xlat
cltd
xchg
pop
js
mov
adc
fstpt
add
popf
out
adc
or
add
inc
xlat
pusha
add
add
dec
mov
cld
xor
aad
hlt
dec
mov
stos
iret
testl
and
push
addb
jmp
or
rcrb
cmp
pop
insl
jnp
pop
dec
mov
movsl
jecxz
loop
cltd
pop
pop
call
jl
in
or
add
icebp
jle
add
call
ljmp
or
addb
movsb
mov
arpl
cmp
pop
sub
addb
xchg
out
scas
cmpsb
cmp
push
fcoml
jmp
jb
add
mov
xchg
sub
test
nop
nop
scas
and
es
sarb
xchg
add
pop
test
test
sbb
test
xchg
std
push
dec
out
fsubr
adc
loopne
add
jno
xchg
call
mov
mov
or
pop
mov
repz
and
pop
or
insl
pop
pop
mov
jmp
ja
je
and
push
in
mov
cltd
addb
add
sbb
cwtl
lret
push
add
jnp
iret
add
lods
mov
or
add
stc
sub
ret
das
add
mov
lea
dec
jl
cltd
inc
or
mov
mov
movb
ret
pop
mov
add
cltd
cmp
aad
dec
fsubrs
cmp
in
popa
push
paddusw
dec
in
leave
movsb
sub
cmp
ret
add
push
test
sub
adc
jae
push
movb
movb
ret
js
lret
outsb
dec
iret
cs
xchg
mov
mov
add
sti
add
and
sahf
fcmovbe
ja
mov
push
jle
in
xor
test
call
out
cmp
add
xchg
ljmp
test
xchg
fisttps
cwtl
push
divl
jnp
lret
or
add
lret
fisttpl
ss
dec
inc
add
aas
adc
push
pushf
es
lds
popf
and
pop
inc
add
lods
push
out
mov
lods
mov
add
xor
lret
adc
insb
rep
inc
add
cli
mov
jecxz
or
fs
aad
rorb
add
mov
outsb
ds
addb
loope
in
xor
jge
add
xchg
cmp
insb
cmc
stos
mov
cwtl
daa
inc
pop
inc
jge
add
test
outsl
js
sahf
mov
push
add
add
das
jno
xlat
in
xchg
sbb
cs
lahf
cwtl
and
movl
add
gs
add
leave
movsb
popa
xor
add
mov
pop
mov
jmp
imul
or
ret
push
add
inc
add
add
nop
jnp
add
repz
in
clc
xchg
cli
es
mov
xor
inc
mov
in
mov
add
mov
cmp
pop
xor
stc
dec
sarl
out
pop
push
cltd
dec
out
mov
jno
nop
lahf
dec
mov
add
aam
push
add
lock
stos
xchg
cmp
add
js
cmp
push
and
stos
adc
cmp
imul
add
movsb
shrl
sahf
jp
mov
add
ss
ret
wrmsr
jp
add
push
js
mov
dec
dec
xor
add
cwtl
mov
pop
bound
add
pop
mov
std
or
es
mov
jp
xor
pop
push
mov
jl
and
sub
xchg
aaa
xor
das
cs
sub
sbb
ret
ficomps
xor
cbtw
rcll
mov
xchg
popf
jmp
push
sbb
jp
cmpsl
ss
mov
pop
fmull
add
xchg
push
call
or
mov
dec
test
pop
or
xlat
jo
push
add
movl
or
fsub
fcmovnbe
out
jp
aas
es
mov
jae
jo
inc
add
fdivrl
in
mov
cwtl
ret
int
xchg
jle
stos
mov
shlb
xor
in
mov
stos
sub
fcompl
and
mov
out
jle
ss
subl
xchg
lcall
pushl
lds
pop
xor
lods
adc
cmp
and
add
jge
add
add
stc
icebp
fiadds
shll
push
cwtl
fsubrp
les
mov
push
sub
inc
add
sub
add
daa
adc
add
into
mov
xchg
cmc
fcoml
push
add
test
mov
jbe
pushf
add
gs
add
xchg
pushl
pushf
mov
in
xor
cmpsl
push
jge
push
fisubrs
popf
fnstsw
mov
cmp
dec
jl
push
add
lea
leave
inc
add
rsm
stc
sahf
push
add
sbb
arpl
scas
jae
int3
pop
cmp
pop
out
add
cmp
call
nop
or
push
ljmp
lahf
pop
arpl
rcr
push
xchg
mov
sbb
dec
pusha
add
iret
dec
mov
scas
icebp
xchg
push
add
aam
add
jno
into
mov
test
in
test
scas
mov
add
dec
pop
leave
push
in
fs
adc
xlat
sarb
pop
popf
lods
sub
cmp
ret
in
push
or
ja
movsl
xlat
iret
inc
call
outsl
loopne
dec
dec
sub
xchg
xchg
insl
add
fimull
or
jno
add
fwait
jecxz
xor
outsl
and
pushf
sub
add
sbb
or
jne
add
jnp
addb
das
mov
nop
sarl
shlb
into
add
push
cmp
aam
mov
sbb
jecxz
jl
daa
movsl
adc
outsl
jl
jl
loop
ret
fsts
or
and
dec
mov
mov
xlat
push
cmpsb
outsl
call
inc
add
add
cld
adc
stos
dec
in
mov
outsb
dec
setns
out
mov
xchg
push
rcr
push
push
hlt
sub
fsubs
mov
ficoms
push
ret
int
test
or
in
cmp
add
dec
pop
mov
adcl
add
jns
fsubl
lods
int3
xlat
imul
es
mov
dec
jo
pop
aaa
cwtl
ret
sbb
std
dec
mov
push
sbb
int3
push
fldenv
pop
adc
or
add
add
mov
dec
out
xor
add
sub
inc
daa
xor
add
out
mov
xchg
aad
inc
sti
xchg
push
xchg
lret
inc
add
mov
pop
ja
xchg
jmp
add
mov
ljmp
sbb
dec
mov
add
outsl
cmpsl
mov
sub
jl
ret
add
add
fstl
jbe
dec
push
shl
rcrl
jecxz
mov
je
loop
push
cmpsb
scas
lods
notb
mov
push
adc
jae
leave
mov
scas
and
gs
mov
jo
jg
rolb
test
mov
adc
ljmp
shlb
addr16
add
pop
mov
ljmp
ds
les
data16
ret
sub
pop
test
lret
cltd
mov
test
lods
hlt
or
fwait
jl
pop
jl
add
sub
pop
jp
add
push
xor
inc
add
add
sahf
sbb
and
push
sbb
pop
xlat
rolb
push
add
jae
xchg
ficoms
add
add
incl
bound
mov
arpl
movb
ret
pop
push
popa
lods
inc
xor
es
fnsave
lock
push
push
pop
in
fsubs
add
dec
jmp
add
cld
push
pushf
mov
add
lods
andl
sub
push
add
daa
in
leave
xor
add
cwtl
mov
add
xchg
bound
lea
hlt
fiadds
mov
sbb
push
xor
scas
jne
outsl
jmp
movb
adc
stc
aas
ds
or
and
mov
out
fildl
movb
mov
add
roll
mov
adc
shlb
mov
aaa
repz
bound
subl
sahf
xchg
sub
pop
arpl
dec
fs
lahf
addb
daa
les
cmp
inc
add
jnp
or
sbb
add
adc
ss
mov
lahf
cmpsl
inc
add
mov
or
fcoml
mov
addr16
imul
and
ret
add
xor
fld
add
jge
in
or
sbb
adc
jg
xor
lods
sub
in
lods
jge
add
aam
add
add
shll
mov
outsl
mov
inc
add
ficoml
jnp
mov
movsb
int3
jns
inc
add
add
mov
dec
or
dec
sub
nop
shl
sub
xchg
movsl
cltd
and
add
cmp
js
das
stos
lods
cmp
das
mov
ret
jb
cltd
pop
inc
add
mov
mov
add
xchg
inc
add
lret
add
data16
incb
mov
pop
push
sarl
xor
or
stos
mov
in
dec
ret
mov
xor
data16
out
imul
jno
rolb
pusha
add
jbe
sub
movsl
imul
sbb
cmp
push
mov
pop
int3
movsl
enter
add
inc
add
cld
jns
add
push
cmp
cmpsl
fists
add
push
jl
fs
push
out
test
mov
xlat
addr16
movsl
outsb
out
std
lcall
fisttpll
aaa
lods
aas
pop
sub
push
call
mov
filds
and
and
lea
nop
jecxz
adc
or
sbb
dec
sahf
and
mov
je
sub
inc
add
lock
gs
hlt
test
test
push
inc
add
jo
add
dec
adcl
add
sub
jl
rolb
insl
aaa
push
iret
test
and
js
jbe
add
fnstsw
pushf
imul
dec
inc
mov
stc
stc
mov
int
push
add
xor
jo
mov
add
notl
pop
add
pop
fbld
into
mov
loop
add
inc
sub
jmp
add
hlt
sbb
inc
add
mov
mov
sub
inc
add
sub
movsb
sahf
es
push
mov
pop
mov
jecxz
lret
mov
push
add
add
xchg
outsb
mov
add
fwait
cmc
push
scas
jae
stc
xchg
pop
add
mov
mov
dec
in
repnz
pop
dec
pop
sti
push
add
addb
add
jmp
lret
dec
int
fldl
mov
out
sbb
xor
or
push
xor
addr16
sub
jbe
js
mov
les
jg
adc
dec
inc
add
cmp
or
rol
add
add
aas
insl
mov
mov
xchg
outsl
fnsave
push
sub
in
xor
arpl
std
sub
hlt
cmp
mov
je
xor
push
add
imul
add
sub
push
popa
stc
sahf
sbb
out
les
pop
insb
mov
mov
lods
test
cmpsl
jecxz
scas
imul
pop
push
sbb
sti
cmpsb
ja
push
fsubs
add
fbstp
daa
jnp
dec
roll
gs
aad
push
subl
cmp
pushf
divl
in
sarl
adc
sbb
push
fsubr
addb
sahf
inc
add
fdivrp
bound
pop
inc
and
in
cmpl
fidivrs
lods
in
sti
pop
lds
add
shr
add
mov
loop
scas
pop
sub
jns
or
leave
mov
inc
add
mov
in
inc
add
sbb
in
sub
add
sub
jo
into
lahf
pop
jle
jmp
pushf
inc
add
add
ficompl
jae
add
dec
je
inc
add
jge
xor
xchg
jl
enter
adc
add
cmpsl
iret
lret
test
dec
jmp
icebp
setnp
mov
inc
je
mov
push
dec
jb
daa
cld
xor
jno
mov
ret
into
lret
pop
mov
decb
xchg
in
lea
out
or
scas
popa
and
int3
sub
movsl
jp
aaa
repz
leave
pop
mov
cmp
push
sub
mov
loope
iret
mov
ljmp
hlt
add
frstor
add
stos
adc
fstl
dec
stos
or
mov
jnp
mov
repz
jecxz
divl
sub
clc
mov
add
sub
sub
enter
int
jecxz
add
jae
mov
sub
sub
pop
pop
mov
lret
jmp
cmp
das
and
mov
and
add
pop
int
or
nop
sbb
sbb
inc
or
lret
pop
sti
add
mov
inc
add
add
pop
add
repnz
fdivs
cli
jo
fistpl
cli
pop
dec
xchg
xchg
sbb
bound
push
pop
std
sti
repnz
lret
add
xchg
mov
jmp
cvttps2pi
dec
push
push
rcr
mov
addr16
dec
push
mov
dec
movsb
mov
inc
mov
addb
add
popa
cli
in
into
mov
inc
or
lds
clc
gs
sub
mov
jg
xchg
xchg
dec
jo
add
sub
ret
or
cmpsb
cld
out
pushf
cmp
rclw
jge
aaa
mov
add
jae
loope
mov
jge
add
in
test
pop
lret
mov
pop
mov
call
or
push
into
xchg
mov
dec
stos
pop
sub
pop
fs
das
push
jge
xchg
into
loope
cltd
push
inc
rolb
outsl
cmp
add
loopne
outsb
xor
inc
add
pusha
add
sbb
add
pop
inc
add
dec
js
out
mov
add
or
inc
add
jecxz
loop
adc
ret
ja
add
mov
add
xchg
mov
add
sub
mov
dec
pop
clc
jl
addr16
push
shrl
jl
add
xor
pop
leave
adc
inc
add
out
or
pushf
je
imul
imul
pop
sbb
add
les
and
arpl
jl
xor
das
sbb
and
sub
add
mov
inc
xchg
pop
incl
pop
scas
loopne
cltd
inc
add
add
mov
push
aaa
cmp
add
fsub
arpl
cmc
mov
orl
sub
cmpsl
adc
dec
movsb
sub
push
mov
js
leave
cmpsb
nop
iret
leave
popf
aaa
pushf
pop
cmp
jp
add
xchg
addb
add
sbb
add
lcall
cli
and
xor
or
sub
repz
ret
js
mov
fldl
add
jg
pusha
add
stos
pop
addb
mov
clc
sbb
fs
mov
adc
sti
pop
mov
fstpt
inc
add
lahf
jge
pop
shl
fdivr
sbb
cwtl
cs
mov
inc
add
rolb
add
insb
sbb
sub
nop
jns
popa
mov
adc
xor
add
mov
loop
stos
pop
clc
xor
add
fwait
lods
jae
inc
add
add
popf
add
cmc
pop
test
or
in
scas
pop
jg
cmp
and
fsubrs
push
inc
add
mov
mov
mov
mov
pop
jl
out
test
mov
fs
out
mov
gs
fsubl
add
das
inc
add
mov
imul
mov
dec
inc
cmp
aas
jmp
push
add
add
push
mov
pop
imulb
dec
icebp
popf
cmp
shlb
out
mov
sbb
imull
out
mov
xor
xchg
cmp
jo
add
jp
or
add
mov
addb
loop
repnz
rcll
lahf
cmpsb
mov
sub
int
shlb
repnz
mov
and
and
cmp
sub
dec
cmpsl
pop
inc
add
mov
jnp
int
or
add
mov
ljmp
lcall
insl
dec
out
std
adc
pop
bound
cwtl
cmp
jecxz
call
insb
inc
pop
pop
mov
push
addb
mov
mov
rorl
and
addb
mov
addb
and
add
aaa
mov
xor
fwait
daa
movsl
mov
mov
clc
cmc
ljmp
jae
mov
std
call
jb
test
lock
lods
xor
andl
loopne
xchg
pop
xchg
mov
push
jo
adc
jl
mov
mov
mov
sbb
xchg
test
bound
jbe
xchg
adc
lock
popa
call
in
fisubrl
sbb
pusha
add
mov
loope
xchg
jge
add
jg
push
das
lods
jecxz
inc
xchg
repz
mov
add
pop
shrl
jb
shrb
xor
xorl
add
inc
add
insb
cmp
rcr
popa
adc
icebp
adc
pop
cs
cli
loopne
dec
dec
jb
out
push
xchg
ret
xor
rolb
push
pop
add
call
incl
outsl
mov
jmp
mov
fadds
jmp
pop
jo
cmp
push
push
pushf
xchg
int
in
pop
test
les
cmovo
sub
fwait
scas
adc
iret
push
add
add
mov
add
cld
lahf
and
and
aas
nop
mov
jne
lea
add
loope
push
inc
add
or
add
lret
add
popf
dec
pop
gs
pop
stos
pushf
jae,pn
repnz
push
add
mov
decl
mov
xchg
add
cmc
clc
movsb
xchg
lcall
cmpsl
in
insl
xor
adc
imul
or
and
push
sub
mov
aaa
jb
call
add
jb
pushf
in
movsl
leave
xorl
cmpsb
sub
push
jb
mov
inc
add
add
es
xor
sub
push
sbb
mov
add
icebp
xor
fistpl
add
push
clc
divb
add
dec
push
add
jp
mov
popa
sub
xlat
fisttps
adc
pop
inc
add
movb
push
leave
sbb
pop
outsl
cmc
jo
sbb
xchg
add
outsb
hlt
das
leave
lods
repnz
push
gs
fdivs
add
pop
aaa
rcr
mov
cmc
sub
dec
inc
add
or
and
lds
out
repz
jecxz
cwtl
mov
lcall
insl
cltd
movsl
addr16
add
outsl
push
shrl
mov
jbe
out
imul
jg
clc
xchg
jmp
dec
movsb
testl
cs
adc
mov
fisubs
lock
and
mov
sub
add
xor
and
add
imul
cs
aad
jbe
sub
ret
repnz
fildl
sbb
jmp
push
pop
hlt
fsubrs
jp
or
jnp
cmpsb
mov
in
pop
and
dec
stc
dec
add
test
sub
hlt
push
xchg
lahf
imul
pop
loope
add
push
int
xor
lret
push
add
xor
jns
adc
popa
loop
cli
test
sbb
push
dec
push
jo
dec
in
ljmp
int3
popa
pop
les
js
loop
movsl
loop
or
sub
rclb
jb
cmp
cmp
js
fisubs
int
outsl
or
push
cmp
test
jb
rolb
orw
test
xor
sti
loopne
add
rcrb
mov
dec
jns
xlat
loop
add
and
repnz
jmp
mov
add
jle
lods
addb
jmp
lahf
or
sub
mov
add
lock
xchg
mov
inc
add
push
xchg
ret
in
jecxz
and
out
fcompl
jg
lahf
fistps
and
cmp
in
test
push
stos
xchg
mov
pop
dec
sbbl
adc
ljmp
dec
imul
leave
sub
push
mov
cmp
fdivrp
inc
fimull
pop
rcll
dec
ja
stc
rcrl
dec
cld
stos
push
div
adc
xlat
out
outsb
pop
lahf
push
dec
sub
add
int
jmp
shrl
add
lea
pop
sbb
addb
ret
jno
mov
xchg
les
pop
addr16
xlat
pop
push
hlt
pop
inc
pop
xor
dec
or
xchg
add
jne
mov
out
or
sub
ja
mov
stc
fcmove
testl
out
push
rcrb
sti
mov
out
ss
add
dec
mov
push
movl
push
jg
data16
out
fdivl
adc
je
sub
push
daa
lret
adc
mov
sub
push
cmp
sbb
gs
add
add
pushl
gs
aam
mov
mov
cmp
add
dec
xchg
jnp
je
inc
add
add
icebp
pop
imul
and
inc
add
outsl
push
add
call
test
add
inc
add
insb
pop
add
in
and
and
sbb
fdivs
gs
sub
dec
addr16
mov
dec
jle
or
xor
cmpsb
cmp
sub
test
nop
idivb
call
or
bound
je
in
bts
mov
in
aam
add
imul
pop
push
xor
pop
xor
push
xchg
adcl
jmp
stos
jl
push
add
xchg
movsb
aas
aas
dec
mov
scas
xchg
into
cmp
push
repnz
mov
sub
mov
or
fcomip
xchg
mov
iret
std
xor
int3
inc
add
bound
push
add
int
add
repz
xor
cli
add
mov
out
sbb
push
jb
mov
fdivr
adc
outsl
and
out
cltd
add
push
rolb
mov
orl
jle
mov
sub
and
fistps
call
push
dec
mov
jecxz
mov
add
cltd
scas
lret
dec
mov
jne
push
add
std
push
xchg
lret
lods
popf
bound
mov
pop
repz
xchg
addb
aaa
jl
and
jge
sahf
jg
fs
dec
push
lods
jg
jae
and
mov
imul
adc
push
xor
add
push
in
mov
mov
pushf
adc
stc
push
adc
adc
pop
xor
xor
or
inc
add
loop
pop
push
mov
fiaddl
movsb
ds
add
mov
mov
add
mov
sti
mulb
mov
push
shlb
addb
cmpl
push
repnz
mov
outsl
xacquire
mov
pop
mov
pop
xchg
inc
add
xchg
add
cs
add
and
sbb
add
cmp
and
lret
xor
loop
sarl
add
lods
test
lret
shrb
lret
xchg
cmp
sets
outsl
cltd
xor
xchg
adc
arpl
or
fs
mov
popa
das
mov
in
in
jnp
loop
mov
scas
mov
fucomp
pop
jns
ljmp
jg
inc
add
add
fwait
pop
fcos
mov
int
gs
jl
and
jbe
test
cmp
scas
jo
std
mov
ret
les
inc
int
inc
and
leave
lret
pop
lods
sub
repz
rolb
add
arpl
sbb
stc
and
fidivs
test
ja
push
mov
ja
pop
cmp
stos
imul
stos
pushf
bound
jae
xor
loope
jno
insb
xor
adc
in
cmp
das
inc
add
adc
std
or
mov
idivl
dec
mov
pop
push
in
cltd
loope
fstp
jl
mov
cld
ret
sbb
sub
movsb
ficoms
loopne
fnstenv
out
mov
loop
mov
ss
mov
les
and
addr16
dec
scas
dec
mov
mov
cltd
in
or
dec
mov
and
mov
mov
push
and
jbe
mov
punpckhwd
xchg
scas
call
mov
cli
jmp
add
sahf
cmp
jp
lods
push
inc
jmp
popf
jg
adcl
lahf
inc
iret
xlat
lods
mov
add
into
dec
mov
mov
mov
mov
adc
dec
mov
push
mov
std
dec
aaa
cmp
mov
xor
mov
test
iret
repnz
add
lods
leave
ret
sbb
inc
test
cmc
lahf
test
add
and
in
mov
int3
les
aam
fwait
ret
loop
pop
adc
enter
mov
pop
int
fwait
addb
nop
es
rcll
cs
cmpsl
popa
lret
sbb
lcall
add
ficompl
out
and
jmp
lea
int3
push
jo
add
fsubl
inc
sbb
sbb
push
idivb
daa
push
ficoms
cmp
add
repz
pop
xlat
mov
push
mov
lret
jmp
enter
push
sahf
scas
jno
add
loopne
outsl
hlt
push
mov
js
lret
add
data16
or
add
sub
lods
lods
movb
xor
adc
pop
dec
out
add
negl
outsl
fs
aam
xor
or
test
dec
ret
into
fs
jmp
movb
enter
lods
inc
lods
repz
pop
push
decl
add
add
arpl
movntq
xchg
lret
jnp
dec
inc
add
lock
loope
lret
insb
inc
add
pop
push
cmp
jp
add
pushl
add
out
cs
jne
mov
imul
inc
sub
add
mov
popf
jbe
xchg
mov
xor
sbb
add
cmpsb
ljmp
iret
inc
add
cs
cmpsb
mov
stos
das
add
add
mov
inc
add
lret
orl
add
daa
sbb
dec
mov
add
add
pop
movsl
icebp
sbb
pop
lcall
add
aas
cmp
add
mov
call
cmpsl
test
in
sub
test
mov
mov
test
in
adc
popa
movsb
mov
sbb
xchg
loope
out
mull
daa
push
hlt
cltd
ljmp
loope
pop
dec
add
jle
inc
add
cld
pop
imul
cmpsl
push
pop
adc
repnz
popf
jae
std
jno
lods
arpl
push
pop
iret
repz
push
loop
in
lods
or
jp
mov
add
mov
incl
mov
mov
fildl
jge
sub
inc
xacquire
or
add
test
cld
xchg
lods
imul
sahf
je
cmp
loope
add
add
das
mov
jp
fildll
pop
arpl
insl
inc
mov
inc
add
clc
in
out
inc
add
insb
pop
adc
les
popa
mov
lcall
lock
lock
or
mov
cmpsb
data16
cmp
mov
xchg
mov
nop
fists
mov
lods
in
mov
mov
sbb
jnp
shld
cltd
pop
jo
lds
add
cmp
fstps
cmp
lret
push
inc
mov
jbe
mov
xchg
int3
stc
and
pop
mov
lret
mov
dec
xor
push
jmp
inc
add
jl
pop
sahf
leave
das
inc
les
xchg
xor
inc
dec
mov
ss
push
add
nop
add
xchg
sahf
filds
je
fidivs
push
jb
cmp
ljmp
out
movb
push
mov
and
mov
add
sub
cmp
jl
cs
movsl
insb
jo
mov
push
sub
cld
mov
stos
xchg
cltd
negb
std
jo
add
or
ljmp
mov
add
inc
add
repz
sbb
push
jno
sahf
fisubrl
sub
sub
sub
imull
cmp
leave
out
add
mov
in
add
xlat
addb
push
jle
sub
arpl
sub
dec
and
add
jo
xor
out
lahf
mov
icebp
adc
or
add
dec
mov
test
ret
cmp
inc
add
fstl
mov
jae
sar
inc
add
jb
jne
push
inc
pop
pop
shrl
add
call
lcall
add
je
dec
pushaw
add
cmpsb
lret
xor
xchg
mov
push
pop
gs
mov
pop
in
cmp
lds
jge
stc
mov
insb
sbb
sub
add
out
ss
aad
enter
push
mov
add
pop
cwtl
or
mov
cld
push
jnp
dec
fs
jns
popf
xchg
xor
push
sti
ror
mov
jb
aad
jecxz
rolb
cmpsb
lcall
test
mov
xchg
sbb
add
jle
es
test
fsts
mov
out
je
mov
movb
sarl
addb
jbe
testb
loop
add
sub
add
sub
stos
loopne
adc
repz
pop
jb
bound
addb
lods
and
add
and
and
es
imul
sub
dec
pop
mov
in
inc
add
mov
dec
add
jnp
pusha
add
les
cmpsl
sbb
movsl
shrb
aad
cmp
out
jge
dec
jno
fcomi
cltd
dec
cli
sub
sarb
xor
add
inc
add
push
adc
rorb
fildl
jmp
adc
insb
les
pop
sbb
mov
lcall
loopne
xchg
fistl
jbe
sbb
imul
mov
pop
maxpd
or
cmp
push
pop
sbb
jbe
pop
loopne
or
inc
push
add
insb
mov
into
mov
test
rcrl
cmc
stos
arpl
dec
sub
in
xchg
inc
aaa
aas
in
xchg
mov
inc
add
push
cmp
and
add
loope
mov
add
aad
add
scas
rolb
cmpsl
stc
lds
lcall
mov
call
loopne
addr16
in
repnz
add
dec
or
lea
push
sbb
pop
js
pop
lcall
stos
mov
hlt
shll
sub
add
popa
into
jl
das
push
add
notb
push
leave
jge
es
add
es
xchg
pop
mov
mov
bound
mov
arpl
sub
imul
add
xchg
pop
sub
sbb
mov
les
and
jae
jge
add
sub
mov
insb
push
sbb
outsb
ret
pushf
ja
cli
in
pop
arpl
stos
xor
xlat
int3
add
xchg
xor
and
inc
add
sahf
out
sub
xor
mov
add
mov
fstps
icebp
shr
mov
std
push
ja
call
ret
pop
addb
pop
mov
xlat
fsts
mov
lea
arpl
popa
cli
push
je
push
loope
jmp
add
fs
add
add
int
aaa
outsl
clc
enter
movb
or
icebp
testl
shlb
xchg
ret
cmp
cmp
dec
pusha
add
jo
dec
mov
fdivrp
xchg
outsb
insl
in
pop
pop
bound
push
jno
jb
jl
add
adc
xchg
cwtl
add
repz
aad
mov
inc
xor
outsb
ss
gs
cmp
adc
push
inc
add
cmp
adc
test
pop
mov
lds
test
jle
stc
pop
and
inc
add
or
dec
jno
mov
ljmp
outsb
stos
jb
stos
mov
out
mov
fisubs
cmp
fnstsw
mov
test
cmp
or
add
cli
test
push
lret
inc
add
dec
scas
aaa
push
aam
out
mov
xor
push
jo
int
call
add
add
mov
cmc
int3
jecxz
lea
test
sbb
stos
jne
lcall
add
push
add
inc
fcom
fdiv
les
test
add
inc
inc
add
mov
ret
lahf
popf
insb
sbb
add
test
fcmovne
fdivp
pop
mov
jnp
fisttpll
add
mov
into
std
push
les
pop
adc
pushf
scas
mov
adc
jae
test
lds
add
neg
cmp
add
fdivs
movsb
mov
mov
add
dec
adc
pop
push
add
lods
ja
es
fwait
xchg
pop
test
pop
inc
loop
mov
mov
xchg
pop
lods
jno
pusha
add
pop
aas
arpl
addb
sub
inc
add
xor
pushf
mov
lds
jne
xor
scas
insb
dec
and
inc
add
scas
mov
scas
aad
lock
sbb
pushf
repz
inc
push
inc
add
xor
cmp
stos
mov
jbe
and
cltd
dec
push
mov
add
ficoml
cmc
mov
mov
scas
jp
sbb
mov
mov
or
xchg
sbb
add
xchg
test
movb
or
add
ljmp
stos
test
add
nop
int
daa
mov
insl
in
mov
jne
mov
cmp
xor
sub
jbe
addr16
ljmp
les
mov
mov
cmp
scas
mov
ja
push
cli
sub
lock
addb
insb
iret
daa
les
mov
ss
xchg
jmp
cmpsb
pop
addb
addb
adcl
add
loop
fnstsw
mov
jmp
lock
mov
mov
mov
cmp
push
jle
sbb
jmp
mov
jnp
mov
and
add
int
sub
add
cmpsl
out
add
push
orl
and
pop
cmpl
sub
mov
mov
push
js
addb
pop
add
dec
out
push
sti
mov
jbe
mov
mov
clc
addl
sahf
mov
in
dec
int
ljmp
pop
dec
jno
xor
push
xor
add
lds
add
aas
movsl
stc
pop
dec
inc
add
xchg
jmp
inc
add
xor
les
addb
or
add
or
dec
mov
sarl
xor
fcomps
pop
add
jb
mov
cmp
mov
popf
bound
push
pop
cmp
or
or
cmp
stos
addb
push
rol
cmc
pop
mov
jmp
xor
inc
add
adc
add
jne
cmc
xchg
sbb
stos
add
cmp
movsl
jge
adc
pop
daa
std
test
xchg
mov
sbb
adc
addr16
jo
cli
out
arpl
imul
rolb
cmp
jne
jns
dec
fisttpl
je
std
adc
mov
bound
mov
test
pop
dec
inc
add
cmp
pop
xchg
dec
pop
testl
pop
jo
xor
add
jno
mov
or
jecxz
add
mov
push
int
nopl
jle
add
sti
or
cmp
xor
mov
xchg
lods
int
ljmp
rorl
xchg
or
mov
mov
test
add
pusha
add
inc
push
ljmp
test
cmp
add
xor
test
sbb
mov
shll
add
inc
add
out
inc
add
mov
add
cmp
add
ret
jne
cmp
mov
cmc
mov
sbb
faddl
lock
in
test
dec
sub
iret
inc
push
inc
fxch
loopne
push
bound
pusha
add
jnp
xchg
push
out
shrb
in
shl
or
fcompl
add
mov
rolb
cmp
movb
into
cmp
rolb
pop
bnd
dec
push
jns
mov
sub
mov
xor
pop
cld
bound
sub
add
clc
sub
or
movsb
lahf
dec
into
jnp
sub
cwtl
mov
sub
add
jecxz
in
jne
dec
cmovge
fistl
add
cmp
neg
sub
testl
ja
fistpll
sbb
aad
pop
movsl
jae
mov
add
and
int
xor
gs
test
ret
mov
mov
in
xchg
push
mov
mov
inc
add
mov
mov
rcll
add
je
in
xchg
ss
mov
xchg
pop
sbb
xchg
ficoml
stos
dec
inc
loope
pop
fidivrs
xchg
addb
push
movb
adc
add
into
rorb
repz
adc
add
sub
mov
or
imul
popf
xchg
and
mov
cs
data16
mov
sbb
pop
add
cltd
push
sub
repnz
cmp
test
pop
mov
je
fdivs
push
cli
pop
popa
cmp
add
test
cmp
repz
ret
nop
scas
pop
out
and
testl
inc
add
xor
pop
lret
in
cmp
and
mov
add
cli
aad
mov
addr16
sbb
xchg
rolb
ret
cmp
mov
sub
lret
sub
mov
xchg
mov
push
cld
ljmp
test
xorl
in
xor
in
and
test
add
push
add
adc
mov
inc
insb
imul
add
addb
mov
ficoml
int
or
lret
data16
jge
add
bound
jmp
jbe
rcrl
in
mov
fwait
dec
adc
sub
icebp
xor
xchg
cmp
test
push
dec
lods
pop
test
and
dec
in
lods
sahf
cmp
pop
stos
jge
add
sbb
xor
icebp
movsl
mov
insb
adcl
fdivrl
push
les
bound
sti
fucomp
dec
mov
fmuls
inc
in
add
add
sbb
enter
jmp
jle
notl
call
ljmp
ret
out
outsl
mov
add
sbb
mov
lock
xor
les
or
jo
in
cli
and
lock
xor
xchg
ds
imul
enter
push
add
mov
test
ja
pop
mov
dec
clc
adc
cmpsl
mov
add
repnz
outsl
add
addb
mov
cmp
mov
fdivrp
in
xchg
cmp
mov
testb
mov
std
pop
xlat
sub
mov
imul
out
jo
les
aad
aas
dec
int3
les
add
std
jmp
pusha
add
movb
jge
in
sbb
xor
add
mov
loop
js
inc
sbb
cmp
and
rcl
sub
lods
insl
mov
cmp
into
jecxz
mov
pusha
add
xor
xor
loope
mov
into
push
icebp
push
les
cmp
dec
pop
je
xor
add
sub
mov
sbb
push
addb
ss
repz
adc
ret
push
cmp
add
pop
fiaddl
or
popf
adc
repz
lods
insb
jo
jmp
icebp
dec
fcoms
fiadds
loope
or
cmpsb
sbb
adc
lret
adc
adc
enter
int3
dec
mov
dec
add
pop
mov
lcall
shlb
push
or
add
pcmpgtd
add
sti
mov
dec
fxch
sbb
in
test
frstor
mov
js
cmpsl
or
out
add
add
add
add
subps
leave
sbbl
add
aas
mov
push
add
mov
add
inc
stc
and
daa
dec
subl
in
enter
lods
mov
movsb
fdivl
cmp
cmpsl
fdivrs
shlb
imul
cmp
or
jmp
add
ret
arpl
and
inc
cmp
inc
add
or
jge
or
jno
add
in
ret
add
jae
mov
aad
mov
and
iret
jecxz
sbb
test
or
rolb
notb
push
lods
jns
dec
push
mov
xor
mov
jnp
stos
jle
add
popf
adc
push
mov
add
push
data16
cltd
test
loop
push
push
rolb
pop
push
dec
push
push
iret
pop
andl
cmc
insl
pop
mov
cmp
addb
rcl
out
add
mov
mov
xor
add
or
mov
bnd
lret
sub
aam
jns
popf
cwtl
pop
xchg
ret
aas
testl
add
push
out
inc
add
cmp
pop
shl
add
es
cmp
xchg
add
sbb
aaa
mov
mov
sbb
daa
in
push
jp
sub
leave
nop
pop
push
neg
test
add
pop
lahf
jnp
aas
inc
xlat
ja
xor
xor
pop
mov
mov
shrl
int
pop
cmp
sub
add
cs
divb
xchg
in
and
jb
push
imul
fnsave
roll
dec
jb
das
shlb
mov
mov
pop
jmp
outsl
add
xchg
jmp
mov
push
mov
sti
outsb
cmp
add
adcl
xchg
mov
mov
and
cltd
mov
cwtl
jmp
addb
ss
sub
in
out
mov
adc
lahf
jns
add
sti
loopne
lret
rolb
jl
in
mov
push
lods
lea
mov
addb
add
add
dec
dec
adc
pushf
into
inc
add
fidivrl
cmp
mov
adc
into
adc
bound
test
loope
mov
add
clc
jmp
adc
push
inc
and
lods
lcall
sbb
add
add
dec
data16
fsub
pop
and
int3
out
adc
xchg
nop
push
add
dec
xlat
dec
mov
and
mov
sbb
insb
cmp
mov
pop
aas
and
or
mov
add
jl
add
jns
add
jns
out
std
aad
dec
lcall
je
pushf
lret
dec
mov
xor
outsb
xchg
sbb
add
out
dec
aaa
and
repz
call
out
mov
jno
jle
xorl
in
add
repnz
add
cwtl
out
shl
jge
add
or
push
pusha
add
bnd
scas
movsl
nop
adc
and
mov
mov
loope
sarl
inc
addb
xlat
mov
out
xchg
inc
add
loop
fucompp
addb
xor
movb
popa
fwait
add
sbb
rolb
sahf
xor
aaa
pop
xchg
adc
xrelease
inc
jne
aaa
inc
add
push
insb
leave
test
push
sti
pop
sub
pop
dec
jo
fisubl
in
ds
loope
push
sub
xor
mov
mov
cmp
nop
cmpl
enter
dec
sub
mov
fwait
and
popf
cltd
xor
add
das
shlb
inc
repnz
sub
inc
add
add
cmpsb
adc
xor
aas
push
add
pop
jbe
xor
xchg
insb
lods
test
leave
or
repnz
outsb
icebp
mov
mov
jmp
mov
mov
lcall
mov
mov
mov
mov
cmp
icebp
jp
or
addb
xor
addb
xchg
aas
test
add
clc
ss
xchg
int3
add
mov
add
ret
inc
and
add
addb
movsl
dec
rclb
sub
out
add
in
lahf
fwait
repz
mov
mov
push
add
inc
add
add
and
lret
pop
mov
cld
sub
clc
push
in
call
add
mov
dec
sbb
push
sub
mov
das
adc
and
push
pop
mov
psubd
fsubs
add
cmp
xchg
inc
add
add
xchg
and
int3
add
in
out
jne
cwtl
mov
sub
add
lea
add
jl
add
das
mov
cwtl
pushf
loop
fwait
es
add
es
inc
pop
mov
add
cmp
jne
outsb
js
or
jg
inc
add
add
int3
and
inc
add
enter
or
add
les
je
std
xor
cmpsl
jle
loope
in
xlat
addb
popf
fstl
fidivs
xlat
jae
sahf
cmc
negb
rcrl
xlat
push
pusha
add
adc
or
push
call
and
iret
or
je
push
xchg
jb
xor
mov
rolb
mov
lret
push
inc
push
loopne
mov
out
sbb
mov
or
jp
popa
inc
add
psubsb
jg
jmp
inc
add
xchg
movb
fiaddl
addr16
inc
add
xlat
lcall
popf
imul
sarl
cwtl
xchg
out
jno
cmp
xor
out
stos
pop
sbb
xor
add
pop
ljmp
jge
xchg
cmp
xchg
pushl
jge
add
je
jl
add
enter
add
out
dec
loopne
dec
in
int3
popa
xor
test
or
xchg
sub
data16
inc
add
push
lock
add
and
mov
std
push
cmp
and
and
mulps
pop
mov
pop
add
roll
add
mov
mov
icebp
in
push
cmpsl
popa
repz
int
lock
jne
loope
jl
jo
daa
add
cmc
call
mov
sub
adc
xor
and
pop
xchg
cmp
add
cli
mov
xor
pop
in
xchg
rcrl
ljmp
mov
pop
lods
hlt
mov
mov
push
sahf
aam
in
xlat
insl
cmp
call
inc
sti
xchg
sbb
sbb
aam
cwtl
mov
inc
iret
xor
aas
add
aaa
cli
mov
jle
fucom
xor
jmp
jns
lret
enter
jne
add
out
mov
imul
and
lods
repz
ret
pop
add
inc
add
cmp
push
fiadds
sub
icebp
xor
push
push
jmp
call
aam
cwtl
dec
xchg
movsb
shrb
xorl
and
add
lds
inc
add
jmp
adc
inc
inc
add
gs
inc
add
or
pop
lods
mov
add
add
rcrl
cmp
pop
or
outsb
xchg
fcompl
ret
add
mov
adc
insb
lahf
ret
sbb
xor
loope
jmp
mov
add
arpl
stos
aad
mov
cmpsl
popf
movsb
fsubrp
scas
iret
mov
mov
jne
lods
or
jecxz
add
addb
out
sub
sbb
sub
sub
jae
mov
mov
jno
out
scas
jb
std
add
adc
mov
repz
lcall
adc
xor
sbb
mov
mov
inc
add
push
push
enter
rorl
add
or
pop
aaa
lock
loope
cmp
rolb
cltd
shl
mov
flds
fidivrs
add
rcll
add
jae
bnd
inc
xlat
mov
test
cmp
sbb
sbb
fisubrl
cmpsb
xor
jp
push
imul
mov
adc
xor
add
subl
xchg
fcoml
movsb
pushf
mov
dec
cmpsb
mov
xor
jne
push
jnp
push
mov
mov
sub
int3
dec
mov
jg
lods
inc
xchg
arpl
xchg
push
xor
ja
mov
add
mov
mov
dec
inc
pushf
push
add
or
push
fnsave
mov
movsb
cmp
pushf
scas
lods
cmpsl
cwtl
mov
nop
testl
jmp
jmp
mov
popa
and
shll
adc
cmpsb
aaa
flds
jge
and
xchg
test
popa
test
lcall
repnz
xchg
hlt
movsb
sub
lahf
adc
enter
fs
sub
sbb
leave
movsb
inc
jg
pushf
insl
mov
mov
arpl
inc
sub
imul
fmul
rcrl
or
add
call
add
stos
outsl
mov
and
and
pusha
add
sbb
xor
jnp
inc
add
aam
push
cli
repnz
jle
pusha
add
mov
loope
push
jg
outsb
fnsetpm(287
addb
mov
out
sbb
or
andl
or
add
mov
mov
push
add
rolb
adc
shr
enter
push
jns
push
addr16
adc
and
add
pop
cmp
add
xlat
stos
sbb
fadd
sahf
int3
adc
or
jp
inc
jbe
enter
cmp
sub
jo
rclb
add
hlt
add
and
cld
incl
add
add
and
and
inc
add
add
mov
test
push
outsb
cli
mov
lods
cmp
mov
add
cs
add
les
adc
test
jg
mov
cmp
push
out
jecxz
mov
push
xchg
repz
jns
lahf
mov
cltd
dec
stos
inc
mov
add
xchg
xor
inc
add
mov
mov
mov
add
lret
in
imul
mov
jp
mov
jl
or
or
mov
imul
neg
pop
dec
mov
or
add
jge
cmp
cmp
mov
lcall
inc
add
addr16
sbb
mov
loope
js
test
cwtl
aas
std
dec
xchg
mov
add
fdivrp
outsl
dec
jg
pop
push
add
push
call
rcrb
adc
scas
pop
cltd
lret
xor
aas
mov
dec
insl
inc
add
std
cmp
sbb
es
or
test
add
addb
sbb
adc
outsl
xor
mov
mov
iret
lods
mov
dec
xchg
and
dec
sub
mov
push
inc
xor
pop
xchg
xchg
jne
xchg
xchg
pop
jmp
and
jg
jo
shlb
or
adc
inc
pop
int3
sbb
scas
rcll
dec
rcr
rclb
mov
adc
imul
or
adc
cmpsl
shll
add
imul
sbb
add
in
nop
add
icebp
jne
adc
cmc
or
aam
int
xor
mov
dec
pop
test
out
ss
ret
xchg
adc
add
add
dec
addr16
mov
pop
adc
aad
add
out
stos
rolb
aad
imul
outsl
cld
loop
or
add
call
sub
out
mov
push
out
lock
jle
stc
lods
jne
adc
out
int3
bound
rolb
mov
popf
and
add
nop
stc
push
ret
hlt
fsts
cmp
cltd
add
rolb
sub
mov
adc
dec
push
and
fildll
pop
push
test
mov
dec
inc
mov
ret
sub
outsb
pop
scas
lea
xchg
push
mov
push
jl
mov
mov
push
cmp
inc
add
add
xchg
out
pop
xchg
push
pop
out
pushf
mov
push
dec
dec
or
stos
fs
lds
repnz
mov
je
iret
mov
mov
xor
add
and
jae
add
nop
ds
jge
inc
mov
add
mov
sub
loope
push
or
fs
push
pop
stos
mov
cmp
push
or
mov
fcomps
dec
arpl
je
mov
pop
mov
pop
push
adc
jnp
cmpsb
pop
clc
adc
push
jp
clc
not
fiaddl
or
sub
mov
add
xor
icebp
int3
outsl
xchg
aam
push
lea
mov
push
insl
adc
outsb
subl
stc
bound
outsl
fisttpl
in
push
fcoml
rolb
inc
xor
les
xchg
in
flds
jg
dec
mov
push
sbb
add
xor
push
insl
ja
popf
fadds
loope
das
xchg
jno
and
add
mov
lds
data16
jge
add
gs
aaa
lea
cmp
test
test
int
add
add
cld
jge
add
mov
out
inc
shll
fildll
jg
mov
lods
popf
shll
add
addb
adc
cwtl
fidivrs
aam
hlt
fmuls
movsl
cltd
lods
pusha
add
in
mov
cli
adc
add
add
leave
sub
mov
movsb
gs
xchg
jmp
fs
add
lock
loopne
add
nop
mov
jg
push
loop
add
das
call
outsl
adc
daa
jmp
out
outsb
push
js
fnstcw
mov
jcxz
mov
ficompl
icebp
stos
je
or
add
aad
aam
lods
out
cmp
inc
or
stos
bound
icebp
addr16
or
add
xchg
test
addr16
xor
cmpsl
pop
mov
lahf
and
std
sahf
scas
mov
mov
mov
fnsave
imul
xor
pop
pop
or
int
fldenv
add
adc
xchg
and
addb
mov
push
ret
mov
xchg
js
mov
adc
mov
fidivl
mov
mov
xchg
sub
ret
lods
adc
xchg
movb
sbb
adc
cs
dec
pop
in
push
out
lock
lret
push
repnz
rolb
xchg
pop
shll
mov
sbb
xlat
mov
fcmovb
sub
mov
aas
dec
pushf
jg
sti
xchg
inc
add
lret
push
and
mov
enter
xor
pop
outsl
xor
sahf
test
add
pop
sbb
js
adc
xor
pop
sbb
mov
and
repnz
or
jl
rolb
jb
jp
out
mov
stos
movsb
int3
das
xor
pop
lcall
adc
mov
scas
insb
lret
add
aas
mov
sbb
add
or
sbb
rcl
xchg
pushf
sbb
test
and
cli
jne
add
add
add
xlat
sbb
iret
mov
and
mov
jl
sub
inc
add
and
dec
add
add
out
and
ret
push
add
mov
pop
test
bound
daa
fistpll
add
mov
push
lods
inc
add
aaa
xchg
mov
mov
sahf
xchg
jmp
add
add
lods
aas
fnstenv
add
je
test
mov
shll
pusha
add
xchg
add
push
and
mov
loope
mov
jne
bound
lret
in
outsl
mull
add
fwait
adc
shrw
fs
and
in
test
push
adc
adc
xlat
inc
add
adc
push
fisubs
jb
push
add
jo
and
fsubl
xor
push
add
loopne
adc
inc
add
inc
add
jnp
adc
inc
push
and
inc
int3
jnp
push
gs
mov
add
mov
jle
lods
bound
and
aaa
cmp
jbe
sub
sbb
mov
add
push
ljmp
dec
outsb
cmpsl
pop
jle
ljmp
push
test
dec
inc
sub
jmp
pusha
add
hlt
and
push
push
add
sbb
inc
add
add
inc
add
clc
jge
mov
add
outsl
repnz
mov
outsb
sbb
sub
inc
or
or
or
mov
add
push
add
jg
mul
imul
push
ss
in
sarl
jl
mov
add
ljmp
loop
and
jbe
testb
mulb
add
mov
push
push
repnz
stos
jmp
lock
inc
sub
mov
add
jae
jmp
jmp
add
mov
stos
ljmp
and
ror
scas
cmp
sub
mov
sub
mov
or
add
jmp
lock
push
inc
mov
pop
std
cmp
add
dec
ret
add
shll
mov
jl
cltd
data16
insb
cmpsl
dec
xor
dec
rolb
xchg
prefetch
or
js
push
and
mov
or
dec
notl
sahf
movsb
addb
nop
xor
jbe
popa
addb
inc
add
add
dec
imul
lds
jne
jecxz
mov
mov
cmc
pop
adc
mull
or
adc
daa
inc
add
adc
into
cmp
sub
out
loop
jae
stos
test
dec
fildl
xchg
aaa
cmpsb
mov
jmp
addl
jns
movsl
ljmp
pop
rorb
push
cmp
stc
cmp
mov
push
fdiv
pushf
mov
xor
jmp
lea
xchg
decb
push
gs
xor
jne
add
adc
add
sub
cs
sti
sti
xchg
loope
fbstp
sbb
cli
sbb
cmc
mov
movsb
lahf
sbb
in
movsl
mov
mov
cwtl
xor
mov
xor
pop
inc
add
test
cmp
dec
dec
mov
aam
mov
daa
adc
add
add
jge
hlt
dec
and
in
or
rcll
push
std
xchg
jbe
push
imul
lahf
or
popa
jle
cpuid
inc
add
mov
or
add
xchg
scas
mov
jae
push
sub
insb
xlat
outsb
cmc
mov
adc
mov
mov
scas
ja
jbe
mov
inc
add
hlt
fistpl
daa
data16
dec
xchg
xor
cld
ror
pop
xchg
dec
mov
addr16
add
jge
or
test
movsb
icebp
mov
dec
dec
cmpsl
fwait
xchg
sbb
add
inc
outsb
std
outsb
bnd
sub
push
cmpsl
in
daa
xor
mov
in
mov
stos
xlat
inc
add
sub
out
add
pop
lods
xchg
mov
mov
mov
add
mov
add
cmp
mov
scas
test
jl
cld
mov
ss
sbb
mov
xchg
mov
jmp
add
je
push
imul
add
imul
movsb
call
mov
add
add
jo
xchg
mov
loopne
fimuls
cmp
sbb
popa
push
and
push
add
test
popa
jnp
sti
pusha
add
push
add
test
ret
into
cld
sub
add
push
bound
push
dec
mov
xchg
aas
lods
cmp
adc
lock
add
leave
lret
daa
push
xlat
shll
js
ja
cmp
stos
ljmp
or
add
or
fisttpll
repnz
cpuid
fsubrp
pop
jae
outsb
fldt
or
and
sahf
mov
or
aaa
divb
bound
and
mov
pop
ds
fists
lret
mov
movb
mov
cmc
std
dec
imulb
fdivl
inc
adc
push
or
sti
insl
fnstenv
add
mov
imul
mov
xchg
popa
push
mov
stos
and
mov
jmp
and
addb
or
cmc
clc
adc
jle
loope
arpl
push
imul
cld
test
cmp
mov
std
ret
dec
xchg
inc
add
xchg
push
inc
and
and
pushf
insl
sub
fistps
shlb
dec
shr
inc
pop
enter
mov
iret
loop
outsb
cmpsl
xchg
sub
lds
pop
push
push
add
das
push
push
divb
pusha
add
inc
leave
je
bound
js
jae
xchg
lods
sbb
inc
sub
fwait
inc
add
dec
mov
in
mov
dec
inc
bound
mov
mov
add
add
fstp
mov
xchg
in
sbb
jbe
lods
mov
loopne
in
mov
sub
cs
lock
out
push
xchg
xchg
lret
cltd
gs
jns
xchg
lods
call
sub
in
push
leave
dec
aad
mov
xchg
or
lret
pop
nop
xchg
xchg
rcrl
xchg
pop
je
mov
mov
xor
add
into
hlt
xchg
leave
add
idivl
xor
sub
aad
push
add
or
std
pop
addb
stc
lret
mov
pop
dec
shr
outsw
push
mov
xchg
jle
popf
js
push
inc
sub
xor
mov
add
stos
aaa
mov
and
arpl
cmc
cs
push
cld
mov
pop
aas
outsl
dec
out
lcall
add
stc
jb
add
add
dec
mov
stc
jb
popl
jle
adc
mov
stc
jb
jge
add
inc
adc
test
add
jb
aas
in
fildl
subb
add
add
jle
ljmp
add
scas
mov
add
mov
sti
dec
push
mov
xchg
ret
mov
add
and
add
stc
jb
add
mov
nop
jmp
shlb
sbb
xor
cwtl
add
add
add
and
js
jb
add
in
rcrb
mov
xchg
ret
add
cld
push
push
mov
xchg
ret
shl
mov
je
stc
jb
add
or
push
mov
xchg
ret
add
push
stos
mov
stc
jb
add
add
sbb
and
nop
jmp
jo
add
add
add
add
adc
div
nop
jmp
xchg
add
cli
add
aas
push
sar
jb
add
push
add
pop
shrl
jb
test
add
mov
hlt
inc
add
add
add
add
xor
mov
call
mov
add
add
mov
add
mov
jb
push
add
jo
add
mov
dec
push
mov
xchg
ret
add
mov
pop
fldl
add
jb
add
add
ret
push
mov
xchg
ret
add
cwtl
add
sbb
flds
xchg
ret
add
mov
and
aas
add
add
add
xchg
add
add
sub
push
mov
xchg
ret
pop
push
cmp
sub
add
inc
incl
xchg
ret
pop
xor
jb
xchg
sbb
cmp
roll
add
push
add
add
mov
pusha
stc
jb
scas
add
popa
cmp
push
loope
add
popa
sti
push
push
mov
xchg
ret
add
leave
push
push
mov
xchg
ret
add
add
add
pushl
stc
jb
loopne
rorb
add
mov
testb
cmp
ret
add
add
inc
imul
movsl
adc
add
push
js
add
mov
push
mov
xchg
ret
add
xor
pop
jmp
nop
jmp
add
push
push
mov
xchg
ret
pop
mov
add
stc
jb
cli
add
push
sbb
lcall
gs
add
gs
dec
mov
stc
jb
add
out
mov
stc
jb
add
sbb
mov
stc
jb
pop
pop
add
mov
stc
jb
add
rcll
mov
inc
testb
sar
jb
add
add
mov
stc
jb
aad
jmp
sti
mov
stc
jb
add
add
setb
sbb
add
add
add
lea
stc
jb
add
add
xchg
dec
jne
nop
jmp
pop
js
js
jne
stc
jb
jmp
add
xchg
out
add
mov
jge
push
push
mov
xchg
ret
and
add
jb
add
add
test
mov
add
jb
mov
push
push
mov
xchg
ret
add
add
add
lea
stc
jb
loopne
jo
test
jb
popa
fldl
add
int3
and
push
mov
xchg
ret
add
push
mov
rcll
cmp
add
add
xlat
inc
add
xor
add
stc
jb
adc
add
add
xchg
pusha
add
add
add
call
add
push
mov
mov
test
push
add
stc
jb
mov
add
repnz
jb
roll
and
push
add
stc
jb
add
jmp
xor
add
stc
jb
add
or
sar
jb
add
add
add
add
nop
jmp
jge
add
jl
jne
imul
adc
add
pop
sbb
mov
stc
jb
mov
add
cli
mov
stc
jb
add
add
adc
add
mov
add
scas
add
stc
jb
mov
add
xchg
mov
nop
jmp
sbb
test
jb
add
add
rcl
inc
jno
mov
stc
jb
js
loop
out
sub
nop
jmp
add
popa
add
pop
push
imul
pop
push
mov
xchg
ret
scas
add
mov
hlt
loop
add
je
stc
jb
add
push
je
stc
jb
inc
add
xchg
lock
push
mov
lea
add
add
xchg
jb
loopne
add
push
movzwl
nop
jmp
cwtl
add
mov
push
mov
xchg
ret
in
add
and
nop
jmp
push
add
add
jmp
popa
stc
jb
add
fstpl
mov
stc
jb
add
pop
add
cmp
int3
adc
add
sarb
push
sbb
mov
xchg
ret
add
add
jb
js
mov
add
stc
jb
and
add
push
jmp
fiaddl
xchg
ret
add
xchg
jae
dec
stc
jb
push
add
add
int
mov
adc
jb
pop
add
enter
ss
add
popa
jmp
clc
push
push
mov
xchg
ret
push
add
adc
in
mov
stc
jb
add
add
add
jmp
mov
add
in
jmp
stc
jb
xchg
push
pop
add
add
add
add
add
xor
mov
stc
jb
arpl
add
add
popa
cwtl
add
stc
jb
cmc
add
add
sub
in
inc
add
jmp
push
add
jmp
add
imul
mov
sub
stc
jb
gs
mov
mov
stc
jb
test
mov
fcoms
inc
add
add
sbb
nop
jmp
push
jo
add
imul
add
stc
jb
mov
push
add
add
add
add
stc
jb
xchg
add
mov
stc
jb
add
add
xor
add
add
add
add
nop
jmp
add
pop
inc
and
push
inc
add
popf
pop
stc
jb
add
add
add
jb
add
and
add
arpl
andl
imul
add
add
pop
inc
add
pop
decl
stc
jb
add
aas
jmp
lret
nop
jmp
add
mov
popa
push
mov
xchg
ret
jmp
mov
pop
add
add
push
add
test
jmp
add
lahf
add
stc
jb
add
add
mov
add
or
add
jb
add
add
aaa
fadd
stc
jb
loopne
add
cld
add
push
stc
jb
add
add
sub
loop
nop
jmp
mov
pop
in
add
out
imul
stc
jb
xchg
add
add
imul
popa
add
mov
xchg
ret
add
add
add
stc
jb
mov
add
outsb
jne
stc
jb
xchg
add
jb
in
add
outsl
mov
push
mov
xchg
ret
pop
add
push
nop
jmp
add
and
aas
add
add
add
stc
jb
add
stos
cmpw
nop
jmp
cmc
add
sbb
add
jb
pop
fnstsw
push
inc
movsb
inc
loope
pushf
stos
push
mov
xchg
ret
pop
add
add
lret
pop
stc
jb
xchg
add
pop
mov
add
xchg
cmp
jne
stc
jb
cld
pop
imul
adc
jb
and
add
roll
jmp
jp
xor
add
push
mov
xchg
ret
mov
clc
jne
stc
jb
mov
mov
stc
jb
add
jae
ss
cmp
stc
jb
sbb
add
mov
add
shl
jbe
xor
push
mov
xchg
ret
jl
add
add
nop
jmp
rorb
add
add
jb
xchg
in
add
lea
push
mov
xchg
ret
pop
rolb
lods
push
stc
jb
add
stc
jb
mov
add
pop
add
pop
je
stc
jb
add
popa
addb
push
stc
jb
cmc
push
add
add
ljmp
xor
add
jge
xchg
xchg
jge
add
push
push
mov
xchg
ret
aad
pop
add
push
add
stc
jb
push
loopne
mov
stc
jb
xchg
add
push
inc
add
mov
xchg
ret
add
pop
add
insl
push
add
stc
jb
add
xchg
add
stos
stc
jb
in
imul
mov
inc
or
mov
xchg
ret
pop
mov
rcrb
xor
incl
add
scas
or
stc
jb
add
mov
rolb
mov
jb
popa
cwtl
pop
pop
add
imul
stc
jb
mov
add
shrb
stc
jb
mov
fldl
push
add
cmpsb
dec
xchg
stc
jb
mov
mov
and
cmp
jb
cli
mov
push
sbb
stc
jb
add
mov
push
mov
xchg
ret
xor
add
test
ss
add
add
add
add
mov
mov
stc
jb
add
add
xor
test
lea
stc
jb
push
mov
bound
jg
stc
jb
add
adc
add
adc
add
add
add
shlb
sbb
inc
stc
jb
pop
add
add
dec
adc
jmp
jl
add
inc
dec
mov
nop
jmp
add
add
add
sub
jb
add
add
mov
stc
jb
jo
mov
cld
pushl
stc
jb
mov
pop
fstl
cmp
nop
jmp
cli
add
imul
add
stc
jb
add
pop
add
xor
nop
jmp
add
add
sub
arpl
jb
push
aas
jl
mov
push
mov
xchg
ret
add
add
imul
fnstsw
jle
add
dec
adc
shl
add
mov
dec
stc
jb
cld
aad
mov
mov
xchg
ret
aas
push
push
rorb
dec
outsl
popa
fs
jb
pop
cmc
mov
stc
jb
cwtl
push
gs
pop
add
add
mov
xchg
ret
pop
loopne
cld
sti
rcll
pop
adc
pop
push
add
adc
jmp
inc
lods
pushl
nop
jmp
pop
add
add
push
add
add
jb
js
pop
add
lret
stc
jb
in
popa
push
push
add
stc
jb
inc
and
add
push
mov
xchg
ret
aas
arpl
add
and
jmp
jbe
stc
jb
add
add
or
nop
jmp
popl
pop
add
nop
inc
push
movb
jb
xor
xchg
jmp
test
jb
cli
xchg
cwtl
int
dec
adc
jb
push
mov
daa
cltd
jmp
nop
jmp
add
ret
stc
jb
test
add
push
out
test
nop
jmp
add
add
add
pop
add
rep
stc
jb
add
pop
push
add
mov
xchg
ret
inc
aas
add
gs
pop
adc
mov
cmp
ret
add
imul
jb
mov
add
add
add
mov
xchg
ret
push
xchg
cli
addb
sub
mov
add
jb
add
jle
add
xorb
add
add
in
jmp
nop
jmp
add
jo
insl
mov
push
mov
xchg
ret
rolb
cmc
outsl
jne
nop
jmp
aas
push
aas
add
insb
xor
stc
jb
add
arpl
in
cmc
cmc
or
enter
push
push
add
add
sbb
add
stc
jb
jge
jge
add
push
adc
test
jb
add
and
bound
dec
test
nop
jmp
jle
add
push
nop
jmp
push
pop
add
movsl
jg
loop
push
mov
xchg
ret
mov
mov
pop
push
mov
xchg
ret
imul
mov
jb
add
sti
pop
jle
jle
mov
nop
jmp
loopne
add
out
or
mov
xchg
ret
add
lsl
add
mov
andb
jo
mov
mov
cld
or
repz
incl
add
pop
outsl
push
push
mov
xchg
ret
add
cld
jnp
stc
jb
shr
add
push
sti
add
mov
push
mov
xchg
ret
jge
add
jmp
stc
jb
inc
sbb
stc
jb
pop
add
imul
in
pop
popf
lds
add
cmp
add
add
stc
jb
mov
mov
add
insl
movzwl
nop
jmp
scas
mov
add
lods
push
mov
xchg
ret
push
add
push
shl
out
mov
stc
jb
rolb
mov
les
je
pusha
stc
jb
push
add
mov
add
jl
js
add
nop
jmp
add
popa
mov
test
loopne
mov
xchg
ret
pop
pop
add
stc
jb
add
add
xchg
mov
cmp
stc
jb
jmp
jecxz
mov
nop
jmp
add
add
add
or
std
inc
add
in
add
add
push
mov
xchg
ret
jo
loopne
add
repnz
add
stc
jb
adc
xor
jle
add
incl
jle
incb
add
push
mov
jb
add
popa
add
sbb
add
xor
add
inc
pop
pop
xchg
rolb
scas
pop
cwtl
sbb
sti
adc
add
jb
add
cvtps2pd
sbb
jb
add
add
pop
jl
call
add
add
test
nop
jmp
pop
pop
add
cmc
incb
push
push
mov
or
add
arpl
js
add
mov
nop
jmp
add
add
in
add
rclb
fadds
xchg
ret
xchg
mov
stc
jb
add
add
loopne
add
jne
stc
jb
add
jl
rcl
xchg
outsl
push
push
mov
xchg
ret
pop
add
add
mov
stc
jb
pmaddwd
shrb
add
jb
inc
push
add
nop
jmp
xor
add
in
mov
stc
jb
rolb
pop
add
add
filds
repz
mov
xchg
ret
add
add
mov
nop
jmp
add
pop
cmc
gs
pop
push
stc
jb
add
add
mov
push
mov
xchg
ret
loopne
add
popa
jp
stc
jb
add
xchg
in
add
pop
lret
cmp
add
mov
rep
stc
jb
add
aas
shll
loopne
lcall
add
scas
inc
imul
loope
add
stc
jb
add
add
add
sar
jb
add
add
mov
or
push
add
arpl
pop
aad
mov
cld
aas
push
inc
add
dec
call
stc
jb
mov
mov
stc
jb
xor
jmp
mov
xchg
lret
add
push
mov
xchg
ret
js
aas
add
inc
add
add
add
jb
pop
test
push
mov
xchg
ret
sbb
sbb
mov
xchg
ret
add
aas
sbb
or
xor
sti
add
add
push
push
stc
jb
add
add
add
jge
jbe
div
stc
jb
add
add
mov
inc
add
stc
jb
xchg
push
test
mov
rcl
mov
xchg
add
add
add
arpl
add
cmpsl
jmp
mov
xchg
ret
sbb
mov
stc
push
push
mov
xchg
ret
add
add
add
push
push
mov
xchg
ret
aas
mov
mov
inc
je
dec
mov
nop
jmp
imul
mov
mov
stc
jb
add
add
pop
mov
popa
stc
jb
jo
roll
and
add
test
jp
inc
add
sbb
rep
add
push
mov
xchg
ret
add
add
idiv
pop
nop
jmp
js
add
roll
pop
add
cmpsb
test
pop
and
stc
jb
test
pop
inc
outsb
jne
nop
jmp
push
add
add
stos
stc
jb
fnstsw
xchg
add
mov
popa
add
jb
inc
xchg
add
mov
xor
jb
mov
push
fstpl
add
add
jb
jge
cmp
stc
jb
add
shr
mov
nop
jmp
jmp
push
loopne
push
cmp
mov
xchg
ret
add
push
mov
xchg
ret
add
adc
flds
jmp
add
add
adc
mov
stc
jb
add
cmp
dec
idiv
jmp
mov
mov
add
ljmp
out
jl
add
jl
add
jge
stc
jb
xor
add
pop
aas
test
mov
xchg
ret
add
add
sbb
mov
xchg
ret
add
imul
stc
jb
add
jmp
je
stc
jb
add
mov
add
stc
jb
mov
add
call
nop
jmp
cwtl
sbb
les
cld
xor
stc
jb
mov
mov
nop
jmp
aas
add
gs
xor
xor
stc
jb
add
add
add
add
movb
push
cmp
ret
add
cmp
or
add
jb
in
cld
rcrb
ja
cs
stc
jb
add
add
and
stc
jb
add
add
push
adc
inc
add
and
call
mov
enter
add
mov
add
add
ljmp
add
add
mov
pop
or
incl
add
test
fisubl
popa
add
mov
xchg
ret
add
adc
push
clc
inc
add
add
add
add
stc
jb
inc
add
jmp
stc
jb
add
jl
sti
push
stc
jb
loopne
mov
inc
and
add
cmp
nop
jmp
mov
sldt
dec
push
push
mov
xchg
ret
js
add
int3
xchg
stc
jb
add
add
add
stc
jb
add
and
add
call
imul
orb
verw
add
push
mov
xchg
ret
in
add
xchg
call
stc
jb
add
mov
jb
push
jge
add
add
mov
stc
jb
add
mov
push
stc
jb
jo
js
inc
add
add
jb
aas
mov
add
stc
jb
fldl
add
xchg
push
mov
xchg
ret
mov
stc
jb
mov
pop
roll
add
add
pop
add
stc
jb
jle
inc
push
add
aaa
inc
or
stc
jb
add
mov
call
stc
jb
push
mov
stc
jb
mov
mov
add
stc
jb
add
add
jmp
adc
jb
add
add
adc
or
add
inc
xchg
add
add
rep
stc
jb
add
in
fcmovnb
jmp
add
add
cld
pop
mov
dec
add
jb
xchg
add
popl
add
jb
add
xor
pop
out
xor
stc
jb
inc
mov
add
mov
aaa
cli
incl
aad
add
nop
scas
mov
stc
jb
sti
sbb
push
stc
jb
pop
add
pop
add
add
in
es
stc
jb
add
stc
jb
add
push
rolb
in
pusha
stc
jb
add
add
add
stc
jb
pop
add
pop
push
jns
push
mov
xchg
ret
mov
add
add
xor
ret
stc
jb
push
pop
in
loopne
mov
nop
jmp
sbb
imul
rclb
movsb
mov
jmp
stc
jb
mov
add
cld
lahf
imul
stc
jb
add
xor
add
mov
mov
stc
jb
add
sbb
add
nop
jmp
pop
cwtl
jle
add
cld
shrb
call
mov
xchg
pop
scas
call
push
mov
xchg
ret
add
add
mov
add
add
test
or
jb
jo
push
push
stc
jb
adc
arpl
call
stc
jb
add
mov
add
in
jecxz
add
add
push
subb
push
and
jb
jmp
push
arpl
add
add
add
stc
jb
add
arpl
add
fmull
out
add
add
arpl
push
je
stc
jb
mov
popa
std
mov
stc
jb
add
add
aas
adc
add
add
mov
mov
xchg
ret
jo
add
push
stc
jb
add
aas
pop
popa
add
add
pop
call
add
loopne
add
push
mov
xchg
ret
add
add
inc
cmp
jb
add
push
add
add
cmpsl
jp
stc
jb
mov
add
add
add
xchg
push
out
add
add
mov
and
stc
jb
pop
add
call
stc
jb
test
add
nop
jmp
add
add
add
xor
test
cmp
add
pop
aad
cwtl
pop
shlb
fdivr
jne
push
mov
xchg
ret
add
add
mov
stc
jb
inc
add
mov
or
sar
orb
jmp
inc
add
add
cmpb
add
add
add
add
add
stc
jb
pop
add
imul
add
push
mov
xchg
ret
inc
push
shll
addb
mov
add
mov
stc
jb
add
jnp
clc
stc
jb
add
in
cwtl
popl
xor
stc
jb
add
mov
mov
js
mov
push
mov
xchg
ret
popa
cli
shl
xorl
stc
jb
js
add
mov
mov
xchg
ret
add
mov
cmp
jb
sbb
add
mov
stc
jb
mov
rcll
fsubrl
push
mov
xchg
ret
add
xchg
adc
mov
stc
jb
add
add
push
nop
jmp
pop
add
sbb
and
add
add
pop
push
mov
xchg
ret
add
add
add
add
mov
push
mov
xchg
ret
add
test
xchg
cmpl
out
incb
mov
and
stc
jb
jge
add
add
xor
stc
jb
jle
add
popa
inc
js
mov
push
mov
xchg
ret
adc
and
jp
dec
push
stc
jb
add
sbb
mov
jb
add
add
test
adcb
incl
rolb
pop
fstl
add
lods
mov
stc
jb
add
add
pop
stc
jb
add
cld
push
test
incb
xchg
ret
pop
add
jb
sbb
push
mov
jb
add
add
pop
stc
jb
sti
mov
push
xor
xchg
mov
in
add
lock
add
imull
xchg
add
add
xchg
outsl
and
stc
jb
add
mov
rep
stc
jb
add
xor
mov
and
and
lds
inc
and
jb
jle
in
xchg
add
add
sbb
push
mov
xchg
ret
add
push
add
mov
xchg
ret
add
add
jmp
mov
imul
inc
stc
jb
push
add
pop
fisttps
mov
add
jge
popl
nop
jmp
add
add
push
push
mov
xchg
ret
add
add
jb
add
scas
add
pop
into
pop
nop
jmp
jmp
jmp
add
nop
jmp
pcmpgtw
add
xchg
mov
ret
repz
pushl
arpl
stos
je
stc
jb
rclb
pop
mov
int3
in
pushl
mov
jge
nop
mov
dec
add
mov
xchg
ret
sldt
mov
stc
jb
jo
and
jne
nop
jmp
cli
add
add
push
nop
jmp
add
add
add
stc
jb
add
pop
push
add
inc
call
inc
add
aas
cld
mov
add
jl
add
and
enter
jb
add
jge
add
push
dec
push
mov
xchg
ret
add
add
push
sub
stc
jb
add
add
mov
and
add
push
push
add
mov
xchg
ret
add
xchg
sbb
mov
push
mov
xchg
ret
mov
mov
mov
nop
jmp
sbb
call
stc
jb
add
push
xchg
sub
stc
jb
fisttpll
add
out
sbb
xor
add
stc
jb
add
pop
add
push
mov
xchg
ret
add
push
add
add
nop
jmp
pop
add
add
jo
pop
nop
push
mov
xchg
ret
add
jle
mov
pmulhuw
stc
jb
add
mov
mov
xchg
ret
js
add
sbb
sbbb
incl
add
add
stc
jb
add
sbb
add
cmpl
nop
jmp
push
add
clc
call
nop
jmp
cmc
jl
add
mov
stc
jb
add
add
sti
add
and
pop
push
mov
xchg
ret
aas
add
mov
enter
stc
jb
popa
pop
mov
add
xor
push
mov
xchg
ret
pop
gs
mov
sbb
mov
xchg
ret
inc
mov
push
push
ljmp
incl
add
mov
cld
aas
pop
add
push
mov
xchg
ret
jo
add
push
mov
xchg
ret
aas
cld
add
add
mov
stc
jb
add
jl
add
mov
sti
stc
jb
add
test
clc
stc
jb
inc
js
js
mov
stc
jb
add
cli
add
gs
mov
jno
mov
add
jo
int3
and
nop
jmp
push
jmp
add
xor
add
stc
jb
add
cmpsl
sub
popa
add
jb
mov
push
jecxz
mov
stc
jb
cld
pop
jle
mov
out
subl
stc
jb
add
add
loopne
pop
mov
nop
jmp
mov
mov
call
ljmp
in
mov
push
push
mov
xchg
ret
add
add
push
mov
push
mov
xchg
ret
cli
push
loop
jmp
add
aas
sbb
pop
add
sub
stc
jb
inc
add
push
in
push
push
mov
xchg
ret
xor
add
add
in
add
cld
scas
add
and
add
stc
jb
add
add
adc
jb
add
add
mov
xor
cmp
jb
mov
imul
mov
js
stc
jb
mov
add
push
lock
mov
jmp
add
add
push
rol
ja
mov
stc
jb
add
add
add
mov
sbb
mov
jb
and
lcall
arpl
jge
pop
add
sub
mov
sub
incl
adc
push
in
add
nop
jmp
add
shl
sar
mov
sbb
jl
rolb
add
mov
add
cmp
nop
jmp
add
add
pop
je
stc
jb
add
pop
pop
cs
nop
jmp
sbb
cli
sti
mov
stc
jb
add
push
rcrl
andl
mull
jmp
add
mov
scas
cmp
nop
jmp
pop
add
popl
lods
push
stc
jb
add
mov
js
and
stc
jb
add
mov
stc
jb
add
mov
jge
pop
pop
mov
jmp
add
add
add
js
cld
xchg
lods
call
stc
jb
push
mov
pop
mov
push
mov
xchg
ret
popa
push
cmp
mov
xchg
ret
add
cs
stc
jb
add
aad
add
add
jge
stc
jb
fnsave
mov
push
push
mov
xchg
ret
jle
imul
es
not
push
mov
xchg
ret
aad
add
add
stc
jb
sti
add
add
pop
xor
push
mov
xchg
ret
test
and
andb
incl
jle
add
in
add
mov
adc
mov
add
add
add
push
inc
mov
stc
jb
add
mov
adc
jb
add
dec
push
push
mov
xchg
ret
add
add
add
lea
stc
jb
pop
fldl
add
mov
stc
jb
imul
add
add
movsb
nop
jmp
popa
in
add
add
add
mov
push
mov
xchg
ret
inc
pop
aas
add
dec
add
nop
jmp
arpl
add
add
mov
jb
inc
movzwl
aad
sbb
and
push
mov
xchg
ret
cld
add
lock
xlat
dec
push
push
mov
xchg
ret
cli
add
xor
stc
jb
sbb
push
push
jo
push
jae
xor
push
mov
xchg
ret
fisttpll
idivl
stc
jb
jle
sti
add
jno
call
stc
jb
add
mov
sub
jb
add
jl
sarl
test
nop
jmp
arpl
add
add
in
dec
call
stc
jb
add
jmp
nop
jmp
xor
outsl
mov
nop
jmp
push
adc
pop
add
adc
hlt
jae
mov
andb
jmp
add
jo
add
stc
jb
add
add
xchg
loope
leave
stc
jb
add
sti
pop
add
js
test
cmp
jmp
ret
incl
mov
add
popa
add
jb
add
loopne
add
mov
stc
jb
cwtl
add
mov
stc
jb
mov
sti
inc
sub
jb
add
jge
jo
push
add
jb
add
mov
add
in
mov
stc
jb
pop
add
addr16
inc
add
pop
mov
stc
jb
jl
add
idivb
stc
jb
add
add
add
adc
xor
add
stc
jb
add
mov
mov
xchg
ret
push
add
mov
stc
jb
cli
cld
add
sbb
jb
add
add
add
mov
sar
adcb
add
add
add
fucomip
dec
hlt
stc
jb
mov
lret
stc
jb
sbb
mov
push
mov
xchg
ret
pop
add
add
pop
inc
push
mov
xchg
ret
add
pop
aas
jge
jne
stc
jb
add
add
mov
push
mov
xchg
ret
add
add
int
pop
jae
jb
add
add
in
mov
fwait
add
xor
rolw
jb
popl
add
add
or
mov
xchg
ret
mov
pushf
mov
nop
jmp
jle
add
add
ret
stc
jb
mov
rcl
add
ret
mov
xchg
ret
add
xchg
stc
jb
add
add
add
incb
lea
jo
incl
add
jl
add
mov
jb
popa
js
in
add
add
mov
add
add
jb
sbb
mov
xorb
add
mov
jl
add
stc
jb
mov
inc
loopne
jbe
lea
adcb
incl
gs
add
jge
push
mov
xchg
ret
pop
add
add
nop
jnp
clc
nop
jmp
add
mov
mov
stc
jb
add
ficoml
in
add
xor
mov
add
add
pop
repz
dec
stc
fs
ja
aas
fistps
push
pop
repnz
sbb
add
out
cmc
sarl
sti
out
xchg
int
rcll
cmpsb
testl
xor
add
jle
addb
and
xchg
adc
movsb
out
stos
and
jg
addb
add
add
add
mov
aaa
ss
stos
ds
mov
mov
add
data16
cs
insl
mov
adc
mov
roll
add
pusha
add
xchg
jge
sti
fcoms
mov
inc
ffreep
jmp
in
mov
aad
lret
xchg
enter
mov
xlat
and
add
subl
and
push
jb
push
mov
cmp
popa
cmp
loope
hlt
xor
pusha
add
mov
add
popf
inc
add
add
pop
fincstp
ret
faddp
in
xor
fnstsw
cmpsl
jns
mov
sub
mov
inc
add
or
add
fwait
shll
cld
aam
push
add
lods
cmp
out
adc
jmp
xchg
sub
add
pop
mov
xor
imul
icebp
or
adc
xor
ret
cltd
scas
mov
inc
fstpl
jns
and
into
adc
es
lods
mov
add
outsb
xor
mov
enter
flds
test
inc
add
add
mov
mov
fisubs
sbb
syscall
jbe
pop
cmpsl
cmp
cmp
inc
add
cmc
repz
inc
add
lea
xchg
or
mov
pushf
xor
js
testb
sbb
loopne
dec
jbe
ret
sub
pop
or
xor
jl
shrl
mov
add
lahf
push
loope,pt
ss
lds
sub
dec
inc
add
adc
mov
in
or
xor
adc
fmul
push
sub
cmpsb
cmp
jae
clc
addb
adc
sub
add
pop
ja
leave
je
ret
pop
mov
pusha
add
inc
icebp
adc
out
shrl
cmp
dec
mov
sub
sti
sbb
mov
and
push
xchg
dec
addb
dec
xchg
push
cmc
aam
inc
add
hlt
mov
add
cmpsb
push
add
add
and
test
add
enter
mov
mov
or
es
les
icebp
je
ss
xchg
pop
lahf
mov
push
leave
cmp
mov
cmp
lcall
pop
or
outsl
hlt
cld
test
mov
test
and
xlat
rorl
dec
ja
sahf
jecxz
dec
jne
push
call
ret
push
xchg
xchg
fidivrl
push
push
lret
xor
insl
das
fadd
add
add
push
test
jne
jns
or
xor
or
insb
xchg
dec
add
xchg
insb
jle
aaa
mov
pop
adc
inc
and
add
stos
das
add
push
addb
arpl
out
dec
inc
rcrb
xchg
out
pop
add
sub
jns
jge
adc
popl
add
fmul
movb
mov
mov
inc
add
int3
mov
addb
inc
add
add
add
add
pop
dec
cmpsb
sub
pop
and
scas
in
jge
dec
addr16
xor
sbb
xor
sub
add
fwait
in
add
and
fwait
mov
roll
shl
xor
sti
call
add
jmp
lret
rolb
mov
adc
pop
icebp
inc
add
pop
and
fistl
int
std
mov
mov
mov
jne
add
push
out
mov
ja
mov
stos
es
addb
leave
jno
add
lods
mov
and
mov
movsl
xchg
rcrb
out
loop
push
sub
add
pop
cmp
sub
push
test
ljmp
xor
pop
lret
mov
push
adc
add
jg
dec
dec
jmp
add
mov
inc
popf
fwait
push
add
cmc
jle
fucompp
sub
ljmp
xchg
push
enter
aaa
jno
les
xor
pop
lods
scas
movsl
pop
fisubrs
dec
and
fs
clc
fwait
das
es
outsl
loope
lds
jmp
test
cs
push
icebp
fimull
jo
int
lahf
lods
cmp
movb
iret
int
mov
add
add
das
lods
xor
push
and
sub
aad
ss
cmp
inc
add
pop
cmp
mov
sub
jb
push
cs
push
pop
shll
pop
les
mov
imulb
adc
fiadds
add
stos
dec
dec
enter
mov
pusha
add
pop
adc
mov
out
mov
cltd
jo
loopne
xchg
fimuls
jge
pop
inc
add
cmpsb
test
scas
test
add
addl
jmp
pop
mov
jge
jno
rcll
pushf
jle
dec
pop
repnz
sub
add
and
lods
aam
cmpsb
aas
aas
std
enter
adc
ret
mov
inc
add
xor
add
lret
or
mov
outsb
dec
aam
negb
dec
push
or
jae
mov
cmp
push
roll
movsl
and
or
loopne
add
cld
rcrb
inc
jl
inc
add
sbbl
rolb
push
mov
inc
add
js
dec
xchg
cltd
loopne
loope
inc
add
jo
adc
add
add
mov
pop
mov
sub
inc
nop
rcl
fimull
push
arpl
mov
xor
mov
inc
add
or
int
cmp
sbb
outsl
inc
add
notb
xchg
and
pop
rclb
addb
stc
push
mov
cmp
mov
pop
xor
add
add
mov
add
fcomip
pop
daa
push
sub
in
xchg
or
das
bound
jo
mov
adc
jno
sbb
js
test
daa
mull
test
inc
add
stos
cmc
out
into
adc
mov
mov
hlt
enter
rolb
adc
and
jbe
test
test
sub
dec
mov
ret
xchg
scas
and
pop
push
or
or
push
cld
ret
mov
sahf
loopne
push
loopne
mov
mov
add
push
inc
lds
xor
mov
jle
push
mov
and
jb
dec
setge
inc
sahf
jp
icebp
xor
add
xchg
xor
mov
dec
push
ss
sub
std
and
loop
or
cmpsb
repnz
and
data16
ja
test
test
cmp
cmp
mov
out
sub
pop
gs
das
or
push
jne
xchg
mov
sub
mov
mov
sbb
xor
xchg
call
mov
jno
test
or
inc
add
xor
add
push
mov
add
jne
add
les
jle
aaa
jmp
jmp
adc
lods
jg
inc
test
orl
ss
add
ljmp
test
mov
test
clc
sbb
xor
out
add
in
adc
ficompl
xchg
dec
pop
mov
lcall
movb
add
sub
sbb
and
mov
fs
fimull
popa
adc
jmp
cmc
das
mov
sahf
jns
pushf
fmul
cli
push
mov
in
ret
test
aaa
push
dec
adc
stc
sti
stos
std
lahf
jp
leave
jecxz
and
xor
mov
rolb
and
rolb
cmpsl
shlb
sub
aas
inc
jbe
mov
xchg
add
outsl
mov
iret
jb
lcall
or
jl
into
mov
xchg
adc
jno
push
push
pushf
adc
xor
je
push
push
lahf
lcall
jbe
imul
sbb
ljmp
jno
push
sbb
ja
jge
movsl
mov
test
jl
mov
loop
push
std
roll
out
sarb
lods
adc
dec
movsb
push
std
jge
mov
cli
xchg
push
mov
sbb
xlat
mov
jle
push
cltd
sbb
and
aam
adc
add
mov
add
aam
dec
add
mov
ds
inc
out
sbb
scas
and
push
push
sarl
movl
inc
add
cmp
je
aas
push
cmp
xchg
jnp
mov
inc
add
cli
aaa
leave
mov
and
adc
mov
push
add
xor
addl
dec
int3
dec
int
popf
negb
adc
imul
orl
mov
and
adc
xchg
xchg
adc
lret
pop
inc
clc
sarl
add
push
cld
xchg
add
add
and
inc
jge
sub
bound
dec
popa
stc
inc
popf
jne
xor
int
rcll
push
mov
mov
add
roll
add
jbe
pop
sub
sti
xchg
sub
cld
out
pop
popa
sub
in
push
xchg
xchg
jno
icebp
xor
bswap
fbstp
jp
sub
rolb
cs
daa
leave
xor
test
add
inc
iret
loop
mov
and
add
ret
scas
cmp
dec
lret
shl
jb
xor
adc
mov
clc
cmp
stos
jg
add
and
sub
mov
dec
push
rcr
movsl
in
movb
inc
lahf
rorl
xchg
inc
add
cltd
mov
lds
lret
out
cmp
call
dec
sti
mov
jge
add
dec
lgs
mov
mov
incb
test
and
inc
in
and
enter
pop
push
xchg
fucomip
scas
gs
lods
ficoms
adc
sub
movsb
jmp
dec
cmpsb
std
xlat
jnp
sbb
lods
pop
cli
movb
outsl
push
pop
push
je
mov
lahf
inc
add
push
and
pop
add
mov
cltd
cld
mov
mov
pop
mov
mov
imul
addl
fadds
add
sub
mov
cmp
add
xchg
lods
xchg
enter
imul
cld
cwtl
lcall
jbe
rclb
js
jne
inc
add
add
push
shll
push
lods
mov
dec
mov
inc
push
xlat
jmp
stos
fildl
stc
js
mul
push
les
fnstenv
sbb
mov
insl
imul
add
mov
data16
add
xor
add
push
or
sub
add
je
cwtl
xor
add
mov
movb
pop
push
inc
add
xor
mov
fadds
les
orl
cmp
popf
nop
cltd
movsl
aaa
bound
scas
jae
test
and
jl
pop
or
dec
jmp
pop
jnp
add
add
xor
aam
cmpsb
pushf
mov
add
hlt
in
jne
in
enter
sbb
add
dec
push
mov
lods
or
adc
mov
rcll
inc
add
pop
adc
int3
or
jmp
repnz
dec
jns
jp
decl
fnstsw
movb
inc
add
negb
pop
inc
add
cld
scas
push
sbb
mov
dec
mov
aam
add
loopne
fcoml
jmp
add
add
push
fmuls
push
add
cmp
scas
xchg
dec
lahf
or
stos
std
push
jp
add
fwait
inc
cmp
add
add
sbb
in
cmc
leave
wrmsr
sbb
pusha
add
cmp
rclb
xchg
fucomp
cmp
dec
ret
inc
add
divl
mov
jmp
add
je
or
pop
movsb
xor
add
add
add
loope
or
mov
jmp
xchg
or
clc
lcall
jecxz
inc
jnp
pushf
das
pop
les
aaa
lods
lret
aam
add
add
sti
mov
push
popf
mov
ret
xchg
mov
arpl
ds
pop
inc
add
imul
mov
xchg
jne
movsl
int3
push
add
test
aaa
mov
sub
jg
push
pop
and
addb
sub
add
mov
cld
and
add
xlat
mov
pop
inc
add
dec
inc
mov
test
test
add
dec
ret
jno
pop
or
dec
stos
jmp
addb
popf
xchg
push
ret
push
mov
not
jb
cmc
imul
or
testl
movsb
mov
mov
mov
pop
and
push
das
shlb
fidivl
pushf
dec
in
sub
add
xor
xor
out
addr16
insb
push
jp
add
mov
jo
pusha
add
add
push
ret
ret
cmp
aam
mov
push
xchg
cmpl
addb
fs
int3
jg
loop
int
cli
push
xor
loope
xchg
push
enter
inc
add
mov
adc
pop
mov
add
cld
xchg
and
pop
cmpsl
int
pop
sub
adc
add
movsl
sti
mov
pop
aas
shll
inc
add
add
test
jns
jg
inc
popa
mov
xchg
jmp
push
cmp
in
xor
leave
sahf
stc
jle
or
xchg
jbe
mov
bound
jb
dec
xchg
jge
add
dec
inc
add
adc
push
psrad
mov
push
cld
add
pop
imul
repnz
sub
pop
mov
insb
mov
lcall
add
fsincos
xlat
mov
jbe
inc
add
in
cld
mov
or
inc
sbb
add
add
adc
jmp
cld
cmp
add
js
sarb
pop
jg
pushf
int
cmp
es
pop
adc
aam
mov
inc
add
test
loop
jg
mov
les
mov
dec
mov
push
mov
add
sbb
outsl
push
imull
or
add
sbb
lret
xchg
pop
add
fstpt
or
xor
lret
rorb
or
prefetcht2
jo
ret
jmp
cmpsb
lcall
ret
or
mov
push
xchg
adc
dec
jne
js
mov
pushf
nop
scas
dec
shll
les
push
mov
dec
ret
movsl
cmp
stc
inc
pusha
add
add
lock
cmpsl
int
out
lds
lea
lods
push
mov
and
dec
mov
sbb
xor
and
push
or
cmp
xor
mov
xlat
adc
pop
sahf
xor
add
pop
xor
cmp
push
loope
sti
lods
insl
call
lds
repz
outsb
shll
pop
cli
popa
std
shll
outsb
adc
push
loop
add
dec
jecxz
dec
ret
daa
mov
or
ja
movlps
add
stos
adc
add
outsb
inc
add
fists
fs
sub
push
dec
mov
int
jnp
xor
call
test
cmpsb
ja
rcr
xchg
add
lods
movsb
ret
push
add
dec
sbb
push
jl
rclb
push
and
shrl
jnp
rclb
out
aam
jmp
add
xchg
scas
pop
iret
lods
jbe
push
mov
add
arpl
addb
dec
les
mov
or
cmpsb
sti
mov
jae
int3
xchg
or
insl
jle
in
fidivl
test
add
lret
je
sub
pop
jbe
jno
xorl
pusha
add
aam
scas
sub
xchg
dec
pushf
inc
add
pushl
stc
mov
push
popf
xor
sbb
lcall
mov
mov
or
pop
add
leave
leave
in
pop
dec
mov
mov
ljmpw
add
jecxz
cmpsl
jbe
sbb
das
not
mov
hlt
idivb
jno
xor
fs
test
addb
mov
xadd
movb
xchg
enter
pop
add
mov
pop
dec
dec
js
add
scas
imul
into
stos
js
mov
lock
inc
jge
mov
inc
je
or
push
sbb
repnz
jg
xlat
in
mov
dec
shrb
or
or
out
cwtl
pusha
add
or
loop
mov
sbb
jmp
push
aam
clc
lds
fs
push
jns
arpl
jp
stos
into
lods
xchg
je
mov
addb
inc
rcll
insb
push
jg
cmpsl
imul
mov
ja
mov
aam
jge
pop
daa
push
xor
into
mov
add
sti
out
movsl
addb
mov
outsl
push
scas
fwait
sub
add
inc
pop
adc
and
push
popa
xor
lret
fabs
adc
mov
jl
repz
add
push
insl
movsb
or
shlb
ret
pop
adc
cmp
or
or
sub
sub
mov
lods
loope
mov
rcll
add
or
mov
mov
pop
push
xchg
push
xchg
dec
lret
icebp
xchg
out
inc
or
jno
dec
sti
fs
adc
movsb
xchg
das
icebp
aaa
ss
jnp
aaa
jbe
xor
pop
mov
adc
lods
mov
rclb
ljmp
mov
adc
add
pop
push
bound
popf
push
jmp
xchg
fdivs
in
sub
popf
sub
add
mov
dec
sub
in
cltd
jns
add
cmp
inc
pop
mov
addb
sahf
pop
js
mov
push
mov
add
stos
arpl
pop
push
out
outsb
mov
mov
mov
jp
jecxz
stc
push
mov
xchg
adc
movb
daa
pop
cmpsb
out
les
or
rcll
adc
jae
subl
mov
fnsave
mov
leave
xor
and
add
inc
add
fsubrs
mov
fs
jmp
add
sbb
inc
lds
movb
push
shl
aam
jo
push
xor
add
xor
rorl
mov
add
sbb
and
mov
push
mov
pop
mov
lret
pop
pusha
add
sub
stos
ror
push
arpl
sbb
dec
leave
nop
inc
add
add
add
shr
sarl
sbb
scas
inc
push
repnz
adc
jle
or
fwait
and
test
cmp
cmpsb
rolb
mov
dec
jg
popf
hlt
jp
inc
jg
mov
mov
cltd
dec
cmc
adc
shll
std
inc
add
xor
mov
mov
mov
adc
add
add
movl
or
fs
and
out
sub
pop
sarb
pop
jg
sub
lods
mov
ss
inc
add
jp
xor
outsl
sbb
fs
in
jnp
sbb
adc
pop
add
stc
jl
sbb
pop
addl
cmp
out
sub
pushf
movsl
push
in
sti
ret
ret
lahf
xchg
xchg
stc
fdivl
add
ficompl
scas
cmp
lahf
sti
lock
arpl
mov
movsl
cltd
push
iret
jo
pop
jne
and
xchg
xor
scas
outsb
out
ss
out
aad
adc
jge
dec
daa
cmp
xlat
cs
aaa
cmc
stc
inc
add
addb
push
leave
shl
fdivs
xchg
jmp
mov
adc
add
mov
xor
leave
xchg
adc
rcpps
fistps
mov
xchg
ss
xor
jo
je
pop
outsl
in
xor
fsubrp
xchg
mov
add
fdivrp
cmp
hlt
sbb
push
sbb
bound
outsb
call
mov
int
in
jge
imul
jl
add
mov
aas
dec
pop
ret
inc
add
dec
sbb
sub
andl
cltd
mov
pop
lds
xor
mov
xchg
pop
adc
into
mov
push
add
shll
inc
add
or
xchg
je
and
lods
testl
loopne
nop
sbb
jno
push
lret
xor
imul
xchg
mov
xor
cmc
arpl
inc
add
push
sub
inc
add
mov
push
push
in
add
rolb
fldt
add
add
add
jp
sbb
sti
int3
dec
sti
mov
add
add
and
adc
push
shrb
inc
gs
dec
arpl
das
mov
fisttpl
stc
adc
pop
jge
fwait
xor
out
aas
push
add
jbe
inc
movsb
aas
xchg
push
or
sub
inc
repz
sbb
xlat
in
test
fiadds
xor
inc
add
icebp
fisttpl
push
add
add
in
iret
cmp
adc
inc
add
sub
mov
pop
scas
daa
lock
ret
sarl
add
xchg
movb
test
mov
mov
orl
mov
xchg
sub
clc
cmpsb
xchg
push
inc
add
lahf
aas
insl
push
add
mov
add
movb
sub
add
jl
pop
pop
stc
mov
adcl
xchg
dec
jle
add
mov
add
repz
jmp
xor
shl
or
xor
repnz
insl
pushf
addb
pop
loopne
les
push
mov
add
pop
mov
cmp
or
scas
mov
or
or
cmp
ja,pn
dec
inc
jns
add
dec
and
or
aam
mov
icebp
mov
ja
and
push
sbb
in
sub
push
push
pop
fimuls
and
lds
out
adc
data16
sub
mov
push
ljmp
imul
xchg
mov
pop
adc
addb
add
xchg
stos
loope
jbe
sub
loope
repnz
mov
sbb
jns
mov
xchg
dec
hlt
rorl
std
inc
mov
and
or
cld
ror
mov
or
jae,pn
add
cmc
dec
fisubs
cli
inc
notl
jle
bound
jae
jp
sbb
sub
sbb
dec
cmp
jmp
subl
call
xor
sub
mov
test
inc
add
scas
xor
negb
push
pop
fnstsw
fwait
and
int3
dec
lea
jbe
or
add
in
les
fmul
sar
adc
mov
xchg
sbb
enter
daa
pushf
shrb
lcall
shl
cmp
jae
cmp
mov
jno
ss
call
cmp
ljmp
aad
sarl
test
push
adc
mov
add
xchg
xchg
les
inc
adc
fs
mov
xor
pop
lea
add
and
cmp
pushf
stos
jmp
ffreep
add
nop
testb
add
add
ret
repnz
add
imul
pop
push
or
test
mov
shrl
push
stos
pop
sbb
xor
out
xor
mov
jnp
lds
sbb
movsb
stos
stc
mov
xor
mov
jbe
jne
push
lds
mov
dec
cwtl
xchg
dec
ds
dec
into
ja
pop
call
xor
dec
fdivrs
xor
iret
outsb
push
test
sti
pushf
xchg
lods
loopne
ja
movsb
or
and
lcall
dec
loopne
stc
sub
sahf
subl
aam
lea
jns
fadds
stos
imul
xchg
xchg
pop
insl
jae
js
add
sbb
pop
adc
inc
add
add
sahf
call
xor
pop
mov
mov
aad
inc
cli
loop
out
and
out
je
pop
insl
xchg
loop
lea
fs
int
add
add
cltd
adc
dec
mov
fisubrs
cmpsl
mov
out
jp
xchg
push
mov
fisubrs
cld
inc
add
jl
mov
mov
arpl
ficomps
lods
adc
mov
test
or
inc
test
inc
inc
and
jbe
sbb
std
push
and
incl
cs
mov
sub
bound
sidtl
in
popf
lahf
sbb
addb
push
xchg
into
jb
jp
out
jl
movb
mov
add
das
jl
xchg
aam
adc
mov
adc
adc
mov
dec
add
inc
add
in
mov
jb
lock
dec
imul
xchg
fs
addb
loop
xchg
scas
shrb
dec
fs
push
jo
xlat
sub
cmp
xor
or
daa
lea
in
jmp
add
pushf
fistps
mov
pushf
lock
lret
test
jbe
xchg
pop
cli
ret
lea
xor
inc
add
mov
jae,pn
out
popf
add
cmpsb
loopne
jmp
pop
adc
ljmp
xor
mov
seta
and
add
int3
sub
addb
insl
sub
adc
in
and
adc
pop
add
jnp
push
xchg
stc
out
stc
popa
inc
add
pop
jbe
add
add
push
enter
add
aad
outsb
enter
mov
test
scas
lret
jp
and
aas
bound
xor
rcrl
jp
jnp
sbb
sbb
jnp
pusha
add
std
push
fnstenv
jge
mov
pop
jae
loop
inc
add
push
or
add
sub
inc
add
es
cmp
mov
cwtl
xor
mov
dec
push
mov
or
add
mov
stos
mov
scas
ret
cs
mov
shl
sub
sub
in
ret
or
js
rorl
movsb
ds
mov
popf
fsubs
add
jp
adc
push
sbb
sti
cltd
sti
mov
sub
in
fistpll
and
test
xchg
hlt
mov
mov
adcl
lods
lret
sbb
popa
cmp
negb
stc
iret
xorl
xchg
addr16
xchg
lret
mov
repnz
push
dec
js
popf
ja
adc
add
popa
and
mov
xor
add
jg
sbb
dec
clc
sub
add
dec
fucom
ret
add
jo
cmp
sbb
insl
shrl
sbb
jecxz
push
dec
and
adc
mov
into
out
pop
bound
dec
lret
je
scas
add
jb
ret
aas
ss
test
and
mov
xchg
call
xchg
jno
out
sbb
xor
inc
add
and
sbb
int3
out
incl
push
sub
add
nop
push
mov
sub
pop
jbe
outsl
popf
xchg
lret
xor
sub
sbb
sbb
or
scas
push
inc
aam
xchg
insb
addb
sbb
shl
cmp
inc
add
mov
out
clc
lahf
inc
add
push
mov
xor
cmp
sub
lea
lods
inc
add
in
popf
enter
or
pop
movb
push
cmpsl
push
cmp
stc
shrb
add
or
sub
fistps
push
into
add
ret
adc
pop
icebp
jnp
add
outsl
xchg
and
rolw
adc
rolb
mov
dec
dec
and
and
push
mov
mov
fdivr
cwtl
out
adc
xchg
sbb
mov
mov
sub
xchg
ja
jmp
cltd
push
add
fs
xor
mov
push
add
sub
add
mov
jno
aaa
lods
ss
std
mov
cmp
rolb
mov
adc
in
cmp
add
or
mov
std
je
stos
and
push
sti
mov
mov
addr16
mov
fisttpl
and
test
add
loopne
xor
mulb
ljmp
mov
jae
xchg
jl
cmp
outsb
ljmp
sbb
pop
xor
repnz
jne
pop
jno
jecxz
arpl
lds
fimull
call
add
gs
adc
xor
mov
cmp
add
sub
movsb
fidivrs
insb
push
int3
pop
lods
shll
add
inc
mov
not
movsb
sbb
jg
add
fs
add
inc
adc
and
int
mov
into
push
add
in
sbb
mov
fistpll
in
fisubrl
add
divl
lea
add
imulb
mov
dec
or
lahf
lods
mov
ret
movb
jle
pop
insb
mov
adc
insl
sbb
pop
mov
test
aam
mov
lds
push
cld
and
imul
jle
ret
out
iret
xchg
and
call
xor
xor
ljmp
into
sub
ret
mov
lahf
stc
push
loope
jl
repnz
gs
mov
pusha
add
jle
jne
fs
mov
lret
pop
adc
dec
push
add
and
rcl
jmp
push
mov
in
shll
cs
sub
xor
mov
enter
add
push
test
xor
sbb
add
mov
inc
mov
nop
les
jbe
jae
inc
iret
mov
rorl
test
scas
push
idiv
je
xchg
cmp
mov
xchg
push
inc
iret
repnz
shlb
or
stos
mov
pop
mov
shrb
add
es
arpl
dec
in
mov
sar
fmuls
add
cmp
sbb
mov
dec
sub
push
fidivrl
and
sbb
popa
loope
je
movb
jmp
adc
inc
sbb
lcall
rolb
mov
sub
stos
inc
add
or
mov
mov
loope
sbb
adc
xchg
push
inc
add
pop
and
sub
or
sbb
sub
add
and
jge
movsb
or
cmp
movsl
dec
mov
and
movsl
cli
push
xchg
cmp
out
jle
mov
lods
ret
mov
stos
fildl
cmpsl
in
jne
loopew
adc
pop
cmp
inc
add
jo
cmpsl
push
test
ret
loop
js
sub
add
or
or
clc
lahf
lods
jle
add
stos
addb
hlt
std
xchg
and
or
pop
cmc
lcall
add
ja
and
inc
add
xchg
addb
xchg
fstpt
ja
jg
add
xlat
js
push
add
and
xchg
stc
and
movsl
add
add
mov
movsl
jb
cmpsl
stc
jge
and
cmp
sub
sbb
pop
loopne
lret
repz
inc
add
int3
rolb
add
add
aas
test
mov
cmp
scas
addb
cmp
dec
push
xor
cmp
push
dec
push
add
std
sub
addr16
pop
repnz
das
mov
repnz
xlat
dec
inc
push
lds
fists
cwtl
imul
and
ret
in
push
outsb
les
dec
pop
dec
or
pop
inc
jae
out
xlat
xchg
mov
pop
incb
mov
outsl
ljmp
add
int
test
test
cmp
popa
xor
push
sahf
mov
pop
out
xor
lahf
nop
inc
add
mov
movsb
xor
xchg
icebp
jne
add
push
in
fildll
leave
insb
pop
mov
xor
into
mov
in
jb
lahf
outsl
scas
push
pop
add
pop
cmpsl
xor
or
ljmp
dec
xor
pop
push
mov
jge
sbb
and
add
movb
leave
xchg
popl
add
xor
mov
jb
dec
hlt
aaa
pushf
hlt
xchg
scas
lret
adc
push
jns
ret
in
mov
xchg
adc
mov
in
mov
and
fwait
cli
fcoml
popf
outsl
add
adc
in
add
jge
out
pop
xlat
jmp
mov
add
mov
addb
cs
add
push
add
mov
jecxz
lea
mov
mov
add
push
cmpsb
or
outsb
sbb
pop
and
cld
inc
xchg
xchg
mov
fwait
int3
fwait
lods
ja
mov
pop
xor
movsl
and
mov
xor
dec
mov
add
aas
jge
mov
lds
jecxz
mov
daa
ja
std
mov
roll
fiadds
sbb
je
sbb
dec
xor
adc
dec
ss
int3
ljmp
arpl
add
sbb
mov
cld
fs
pop
or
xor
orl
mov
add
push
mov
mov
ss
add
xchg
and
xchg
push
stos
mov
dec
insl
rolb
jno
cmp
sub
jle
lea
xor
inc
adc
adc
mov
mov
pop
aas
mov
arpl
aad
pop
and
sbb
push
sahf
adc
or
imulb
je
test
mov
add
push
xchg
mov
sarb
fisubrs
lret
les
inc
add
mov
add
inc
jg
addl
add
jge
test
adc
cli
pop
or
sbb
push
fwait
adc
fsts
mov
lock
cwtl
inc
mov
bound
in
cld
cmp
mov
imul
pop
sarl
dec
pop
ds
inc
xor
test
mov
jns
and
daa
loopne
out
pop
insl
dec
rcrl
push
std
xlat
dec
pop
outsb
push
scas
aaa
xchg
add
popf
cltd
cltd
mov
int
add
dec
stos
mov
xchg
int
sub
push
cmp
add
inc
fs
lcall
je
scas
and
sub
xchg
jns
jmp
dec
ret
insb
jmp
filds
add
shl
pop
icebp
mov
loop
adc
sub
cmp
imul
cmp
inc
rorl
add
add
sbb
mov
sar
es
outsb
ss
add
in
test
add
mov
shrl
add
clc
cmp
scas
or
inc
pop
mov
push
cmp
mov
cmp
add
shrl
jbe
les
ljmp
iret
rorl
add
ret
jbe
xlat
dec
add
push
stc
pop
jns
add
ljmp
dec
enter
bound
lea
or
dec
aad
test
lahf
lock
je
enter
dec
sbb
jb
fstpl
inc
add
data16
xchg
pop
leave
or
and
shll
pop
cmp
aaa
mov
add
xchg
aas
sub
ret
cmp
sub
int
add
push
out
add
sbb
mov
lods
movb
inc
pop
or
xchg
fisubl
add
cmp
pop
adc
adc
in
movsl
fwait
addb
push
pop
push
or
push
sarl
xchg
sub
dec
adc
add
adc
xor
or
jmp
push
insb
out
inc
and
dec
addr16
mov
jae
pop
sub
dec
hlt
loopne
dec
aas
pusha
add
dec
pop
cmp
mov
jo
test
cmp
hlt
lret
pop
jg
add
test
shlb
adc
aam
mov
inc
add
add
lea
cmpsb
or
jns
int
mov
addb
mov
adc
mov
jl
js
jmp
int
inc
insl
mov
push
cmp
inc
add
jo
push
in
sarb
push
fldl
add
ljmp
push
dec
push
add
dec
mov
rorb
mov
addb
ret
out
add
xor
mov
in
cmp
lds
mov
xor
out
es
arpl
outsb
dec
ret
testb
aad
pop
mov
cli
xchg
lcall
push
idivl
xchg
xchg
pop
ja
xchg
xchg
mov
push
xor
jne,pt
pop
xchg
or
mov
mov
inc
pop
and
add
idivb
in
scas
xchg
sub
sub
ret
out
pop
arpl
inc
lahf
sub
add
add
inc
add
push
rcrl
sbb
and
mov
mov
sub
add
xor
mov
mov
repnz
mov
add
je
push
and
in
mov
dec
fs
or
inc
add
test
mov
and
fdiv
jecxz
dec
jno
jmp
int
mov
clc
mov
inc
add
push
rorl
jge
loop,pt
inc
add
pop
mov
or
lds
pop
ljmp
decl
cs
lock
sbb
icebp
pop
xchg
sti
jo
inc
imul
mov
outsl
pop
push
add
scas
shrb
jl
in
andl
pusha
add
xor
mov
mov
bound
outsl
push
lods
lock
mov
mov
push
push
addr16
insl
sbb
mov
mov
enter
clc
insl
xchg
dec
adc
push
or
mov
and
dec
add
insl
aad
decb
push
add
or
push
mov
push
mov
xchg
add
adc
jmp
add
cmp
stc
push
mov
cmp
bound
mov
into
add
loopne
es
jne
pop
fnstcw
insl
pop
out
jecxz
imul
loopne
int3
and
je
sbb
mov
pop
sbb
cmp
push
cmpsl
outsl
outsb
aam
cltd
lds
adc
dec
xor
pop
inc
mov
mov
in
addb
cwtl
mov
xchg
repz
xchg
push
je
pop
addr16
inc
pop
and
or
je
daa
lret
nop
xchg
outsb
pop
fisubrs
leave
stc
cmp
mov
dec
jo
cmp
pop
fisttpl
push
lret
cmp
imulb
or
mov
imul
inc
out
mov
adc
add
shl
shr
cwtl
lea
sub
and
repz
add
mov
in
sbb
add
shll
ret
sbb
insl
lea
lea
dec
arpl
into
jecxz
in
adc
or
or
leave
mov
addl
or
icebp
lcall
mov
test
add
inc
add
test
add
mov
push
dec
xchg
in
test
xor
add
push
add
fnstcw
in
mov
add
popa
sahf
mov
cmp
pop
cs
int
cmp
sub
rorb
divl
popa
sti
mov
mov
fsubrl
jmp
scas
sbb
rclb
mov
aad
stc
xor
lea
out
add
sbb
add
add
mov
mulb
inc
add
lods
sub
add
test
mov
or
test
divl
jno
and
jbe
adc
add
mov
lahf
mov
jne
sub
addb
rorl
cld
push
add
xlat
pop
and
or
hlt
mov
sub
mov
push
add
xor
lock
inc
xchg
fisubs
dec
lods
aad
sbb
dec
push
sbb
fidivrs
add
cmpsb
ret
scas
jo
stc
pop
pop
imul
dec
mov
add
stos
shrl
call
test
fldenv
shlb
cmpsb
popa
and
test
xor
imul
fisubrl
and
sbb
aad
add
jecxz
dec
repz
lds
loopne
and
stc
push
mov
sbb
test
fstl
cmpsb
fadd
add
add
shl
dec
or
mov
adc
dec
fwait
jecxz
out
jb
add
sbb
xchg
lods
call
rolb
push
add
cmp
std
xchg
das
jecxz
ja
lods
les
stos
and
aas
jno
lods
insb
cs
mov
sub
sbb
adc
sbb
or
iret
jmp
sub
popw
mov
add
fnclex
dec
pop
push
inc
es
jno
andl
mov
push
insl
sbb
rorl
xchg
xor
xchg
xor
ljmp
aaa
or
xor
mov
pop
arpl
push
lahf
sbb
pop
pop
mov
adc
add
js
outsl
loop
sti
test
ret
add
fsubr
jmp
add
xchg
lea
arpl
cltd
daa
sub
or
mov
je
ret
jp
cmp
mov
ja
movsl
ljmp
jnp
xchg
mov
sub
mov
add
dec
or
lret
add
push
xor
mov
in
cmp
sbb
aam
xchg
push
scas
adc
add
fwait
repz
adc
or
jnp
lock
sahf
mov
or
stos
mov
mov
push
in
pusha
add
add
jb
mov
add
jle
add
xor
roll
adc
ljmp
pop
ljmp
int3
push
dec
in
mov
clc
mov
add
std
loop
pop
mov
scas
mov
add
jg
add
stos
dec
lock
emms
cs
cmpsb
lret
dec
pop
mov
mov
or
mov
push
gs
or
push
shll
add
cmp
fs
cltd
sub
cmp
repz
fistpll
movb
testb
insl
idivl
jae
and
fwait
or
cmp
pop
mov
add
jne
outsb
adc
jecxz
std
hlt
pop
popl
mov
and
jge
orl
jmp
dec
push
inc
add
jb
inc
mov
lods
jno
mov
sbb
add
add
div
cmp
xchg
out
rolb
pushl
add
fwait
jl
xor
mov
sub
lds
test
rol
fcmovu
pop
push
add
lret
mov
add
pushl
ljmp
jns
sbb
fwait
inc
pop
mov
inc
add
js
in
sahf
repnz
out
inc
filds
jb
arpl
out
and
ljmp
cmp
test
btr
nop
jge
dec
es
int3
imul
and
pop
cmp
lea
in
lret
hlt
pop
and
cmpsb
cmp
add
dec
imul
in
jmp
or
dec
mov
jg
push
and
jecxz
cmp
fwait
or
sbb
xchg
rol
std
gs
jne
lods
cltd
jae
rolb
lods
add
mov
add
push
es
inc
push
js
int
xor
in
adc
mov
movb
jns
iret
jno
add
xchg
in
enter
fdivp
test
or
sbb
jge
ret
add
cmpsb
in
adc
and
popf
imul
add
test
lods
mov
dec
pusha
add
cmp
sub
lcall
jp
into
enter
les
in
push
fldenv
add
push
insb
jp
pushf
xlat
and
add
adc
add
shlb
add
add
addb
imul
mov
rcrl
addb
xchg
aaa
dec
jne
fidivs
shrb
and
hlt
xlat
inc
add
cmp
lea
add
inc
add
mov
mov
outsl
imul
xor
inc
mov
add
mov
xlat
sub
inc
add
call
in
testl
inc
push
push
xchg
sub
dec
pop
loop
cld
mov
mov
mov
add
push
add
sbb
mov
cmp
clc
negb
movsb
loop
inc
in
mov
dec
sbb
or
cltd
inc
lcall
scas
mov
call
mov
xor
xchg
jno
hlt
sub
mov
xchg
pop
pop
mov
loope
sbb
add
dec
jb
arpl
mov
out
mov
shlb
push
ror
mov
jno
loopne
sbb
jae
loope
add
loope
inc
outsb
aad
mov
push
sbb
jmp
enter
test
rol
sub
sbb
stos
jno
add
fsubs
div
loopne
sub
pop
add
and
arpl
lods
xor
leave
jge
adc
push
icebp
into
xor
test
add
in
rol
push
lret
push
out
sbb
inc
loope
jmp
jmp
ret
sbb
addb
bound
cmp
cs
notb
jl
das
sti
cmpsl
pushf
pop
stos
sahf
mov
mov
test
and
sub
xor
cmpsl
xchg
ds
jp
and
in
scas
scas
inc
add
mov
negl
jb
into
sbb
lret
cmpsb
ret
jmp
mov
sti
aaa
fistpll
ss
mov
repz
out
cs
insl
jne
lret
pop
inc
scas
mov
lock
add
or
arpl
or
lahf
mov
xor
loopne
je
pop
pop
sbb
add
lods
xor
movb
clc
push
js
out
repz
mov
cmpsl
test
aad
add
pop
out
pop
lods
jg
mov
add
dec
sbb
xchg
aad
stc
ffree
add
idivb
outsb
push
cmp
inc
add
and
rcll
adc
cmp
jo
movb
pop
loop
jnp
jp
out
mov
ret
mov
adc
pusha
add
xorl
adc
aaa
cmp
jnp
pop
nop
jns
ficompl
js
mov
jg
shl
push
aaa
add
adc
add
add
sub
sub
jne
or
out
fistl
sahf
inc
add
and
mov
add
xlat
adc
dec
mov
xchg
addb
outsl
push
sbb
xor
sbb
sub
xchg
mov
adc
aam
mov
das
mov
and
dec
imul
cmc
adc
lods
xor
pop
cmp
out
or
or
mov
jo
test
xor
repnz
pop
lods
fbld
add
cwtl
xor
lahf
lahf
imul
pop
fcoml
push
shlb
xor
jmp
cwtl
push
add
or
in
sti
lods
stos
push
mov
add
in
insb
pusha
add
test
arpl
mov
push
fnstcw
mov
cwtl
lahf
add
xrelease
cmp
pop
mov
icebp
pop
enter
aaa
jns
dec
inc
adc
dec
leave
jmp
push
or
icebp
jnp
repnz
shlb
xchg
lahf
fucomp
cmp
scas
movsl
pop
and
hlt
ds
dec
stos
jo
add
lods
jmp
icebp
cmpsb
mulb
aam
fs
inc
add
xchg
int3
xchg
xchg
in
dec
loopne
push
add
sub
arpl
xlat
test
in
dec
insb
test
icebp
frstor
pop
cmp
add
push
pop
push
xor
sti
pop
andl
push
std
and
scas
daa
aam
sbb
stos
stos
sub
jmp
mov
movsb
test
nop
mov
jo
add
sbb
enter
aad
jg,pt
imull
hlt
in
add
mov
inc
les
adc
daa
xchg
push
mov
pop
cltd
push
test
addb
loopne
in
cmp
enter
push
add
out
addb
xor
popf
scas
inc
inc
add
xlat
and
mov
fnstsw
cmp
dec
push
jge
cmpsb
roll
mov
cmpsb
and
ja
ja
jl
add
push
out
out
sub
test
add
test
sub
lret
mov
add
addb
dec
fadds
insb
frstor
shrl
mov
out
imul
dec
test
aas
adc
scas
stos
push
insb
inc
imul
add
lret
inc
add
jno,pn
sahf
and
pop
inc
add
enter
lret
and
add
jbe
push
jae
ja
rcrl
xchg
add
mov
inc
add
cld
jecxz
sbb
sub
loope
aam
nop
sbb
inc
mov
loop
and
add
push
ret
mov
rcrb
and
mov
jne
push
jns
add
mov
and
xchg
push
inc
add
aad
pop
xchg
mov
testl
jns
xchg
mov
mov
xchg
or
into
jbe
mov
adc
lahf
and
add
out
adc
cmc
mov
scas
sub
mov
pop
test
add
add
mov
mov
addr16
out
and
test
or
sbb
mov
xor
and
jne
add
add
push
add
xchg
adc
cmpsl
jle
add
insl
imul
and
adc
add
lods
add
mov
shl
jg
dec
pop
popa
jbe
loopne
xchg
lret
push
cmc
pop
jns
add
add
jnp
inc
in
imul
sub
push
test
das
xchg
or
lock
sbb
imul
or
inc
lret
out
and
push
pusha
add
fmulp
das
xor
and
in
xor
mov
add
add
xchg
push
mov
lahf
cmpsl
push
sti
ds
mov
dec
xchg
int3
loopne
js
dec
xchg
hlt
and
push
mov
idiv
xlat
pop
pusha
add
jmp
or
int
push
push
sbb
nop
out
push
mov
add
insb
mov
hlt
pop
sub
shll
xor
test
sub
cmp
dec
pop
add
adc
add
ljmp
and
iret
js
gs
mov
and
gs
in
pop
loop
outsl
imul
popa
mov
mov
pop
sub
pop
dec
and
jge
sub
movl
adc
pop
decb
push
cltd
pop
fwait
xor
ret
mull
mov
sub
inc
popw
dec
imul
rolb
cwtl
pop
xchg
in
stos
or
insl
jne
dec
inc
je
adc
fstl
data16
mov
xchg
inc
add
xchg
mov
bound
insl
test
stos
mov
bound
mov
mov
pusha
add
imul
mov
dec
fidivs
sbb
push
out
inc
lods
lods
sbb
fsubrs
fs
add
aas
xor
pop
fs
stc
movb
sbb
adc
dec
pop
adc
pop
lock
add
cld
mov
clc
adc
xor
xchg
sub
inc
add
add
pop
outsl
sbb
push
add
in
outsl
ret
dec
lods
lcall
sbb
pusha
add
loope
pop
neg
cltd
inc
add
ret
test
jne
jmp
sbb
mov
nop
lahf
ret
inc
insl
mov
add
mov
xor
jmp
xor
add
sbb
call
shll
sbb
cmp
les
or
std
sbb
add
add
sub
sub
push
push
insl
adc
ljmp
fnstsw
adc
int
inc
add
test
movb
call
push
add
cli
inc
mov
lods
and
or
xchg
scas
xchg
daa
pop
push
sub
xchg
push
cmp
addb
jl
mov
jns
add
xchg
scas
aam
push
adc
or
das
adc
jae
add
mov
push
addb
mov
imul
ljmp
lret
mov
push
and
js
add
push
jecxz
in
mov
jle
ljmp
sbb
fstpt
mov
jbe
xor
add
loop
mov
aaa
adc
sbb
es
adc
or
add
gs
nop
mov
pop
mov
adc
adc
push
es
push
pop
add
repnz
dec
push
sbb
adc
add
ja
fdivl
imul
pop
sub
lcall
cmp
fistps
iret
push
test
fidivrs
mov
add
jbe
mov
pop
jge
sahf
pop
push
mov
add
mov
mov
sub
lcall
sbb
or
out
sbb
push
inc
add
add
sbb
add
shlb
or
aad
popw
icebp
xor
push
xchg
jb
ffree
jae
pop
cmpsl
div
add
movsb
repnz
cmp
popa
push
daa
movsl
mov
sbb
cltd
mov
add
push
xor
cmp
test
test
mov
mov
add
sub
add
stos
mov
and
test
fwait
bound
int3
mov
adc
nop
sbb
lods
or
sbb
add
insl
stos
aaa
inc
add
mov
and
pop
and
aas
add
jb
sti
std
inc
add
pop
stos
sub
ret
enter
sbb
mov
add
push
xor
pop
adc
mov
cli
imul
jne
leave
aam
sbb
orl
les
scas
fidivrs
rcrl
bswap
scas
les
push
inc
add
cmp
sbb
add
fldcw
xchg
mov
lcall
and
pop
sub
xchg
mov
and
into
pop
lret
push
push
pop
add
and
sbb
inc
add
mov
sarl
movsb
iret
mov
idivl
dec
scas
xchg
xchg
ss
add
xchg
fs
push
mov
mov
inc
add
mov
faddl
pop
push
pusha
add
iret
sub
shlb
scas
fld
add
add
cs
jns
leave
cltd
into
aas
push
ss
out
jle
inc
add
xchg
add
scas
jmp
stos
lret
pusha
add
lcall
add
dec
xchg
repnz
ret
xchg
ljmp
mov
lods
lahf
mov
add
mov
and
imul
shlb
mov
int3
add
sbb
lret
add
cltd
add
pop
ss
and
sub
push
das
xor
add
cmc
pop
leave
cmp
bound
push
jb
sub
lret
insl
xchg
stos
out
sub
je
push
adc
into
movb
mov
add
add
sbb
jnp
or
add
fsub
adc
xchg
repnz
ret
lea
push
mov
and
call
sbb
cs
rolb
or
test
mov
insb
mov
lock
dec
jl
mov
ret
mov
das
repz
or
daa
cmp
or
push
movsl
push
outsb
lds
add
out
movsl
fdivrs
mov
mov
add
pop
lods
and
insb
popa
pop
call
out
repz
pop
rolb
xchg
js
daa
pop
sbb
scas
xor
dec
pop
test
dec
jp
mov
setnp
xor
add
test
push
add
add
jno
cwtl
xchg
ds
loope
push
add
lds
add
sbb
in
aam
jl
add
cmpsl
pushf
insb
or
popa
and
mov
and
sub
pop
xchg
xchg
es
ds
sbb
lods
and
lret
rcll
jl
daa
jns
mov
cltd
insl
pusha
add
inc
add
pop
ss
cmpsb
sub
mov
add
mov
jno
js
pop
xchg
les
pop
adc
call
or
pop
ret
js
sub
call
pop
addb
xchg
fistl
sbb
jg
lds
pop
notl
inc
flds
pop
popf
cmp
mulb
es
push
jmp
ljmp
loopne
pusha
add
repnz
inc
sub
inc
add
or
loopne
sbb
cmpsb
shlb
add
inc
mov
out
jb
xor
sbb
mov
xchg
or
inc
mov
lret
inc
mov
push
jns
push
dec
add
lret
dec
orl
mov
xchg
or
data16
divb
sbb
xchg
dec
loope
xlat
sbb
or
daa
aas
sub
imul
testl
cmp
xchg
cmp
inc
add
xchg
ret
in
jbe
add
dec
mov
imul
push
add
add
out
js
repz
cmp
in
and
xchg
aam
jnp
mov
xor
lret
xchg
add
dec
cltd
xchg
lret
push
mov
fisttps
je
arpl
or
call
test
ja
stos
inc
add
dec
addb
lcall
and
dec
jmp
push
pop
pusha
add
add
repnz
dec
and
stc
int
js
repz
cmpsb
mov
int
push
ret
incl
pop
dec
sbb
mov
in
pop
insb
push
repz
sbb
lret
bound
insl
iret
pop
adc
addr16
and
cmp
test
out
incl
pop
or
push
xlat
jmp
cltd
test
aam
mov
pushf
push
dec
mov
lret
dec
xchg
adc
aam
cmp
jno
xchg
nop
fadds
xchg
dec
adcl
pop
aaa
sub
outsb
and
ret
xchg
lea
dec
fistpll
rolb
int3
cmc
adc
into
enter
imul
frstor
mov
adc
fcompl
xchg
inc
add
imul
and
jle
lret
push
jmp
rolb
xchg
ret
adc
add
scas
dec
movsb
ja
push
in
push
mov
cltd
pop
sub
add
jne
dec
or
mov
inc
and
shll
repz
in
and
divl
enter
add
adc
outsb
ss
adc
in
cld
cltd
adc
push
fcos
jg
bound
jge
addb
mov
das
clc
fwait
rclb
cmp
pusha
add
add
adc
jb
sbb
mov
addb
mov
push
inc
add
bound
xlat
out
fsubl
call
mov
push
add
je
push
inc
ret
mov
movsb
inc
cmp
arpl
mov
push
fmuls
aad
nop
leave
add
insl
mov
add
dec
ret
pop
push
hlt
lret
or
rcr
inc
add
scas
jbe
pop
and
jge
add
xchg
jl
adc
or
fwait
sub
or
add
cmpl
loopne
sub
mov
out
lock
lods
mov
xor
ret
add
jns
push
xor
inc
sbb
arpl
add
dec
pop
mov
xchg
cmp
cmp
xor
mov
push
addb
mov
lods
and
in
aas
ljmp
add
popfw
mov
mov
aas
call
dec
mov
inc
inc
xor
xchg
push
test
scas
jmp
inc
add
nop
lret
test
out
jge
sbb
stos
cmp
lcall
ljmp
push
add
add
cmp
out
je
and
xchg
mov
hlt
mov
cmp
lea
int
push
lahf
cmp
or
add
jo
fdivr
repnz
ret
cmc
imul
iret
lahf
or
or
cmc
dec
xor
lods
sub
mov
outsb
test
rol
add
add
fnstsw
adc
fcoms
std
ss
mov
test
addb
add
pusha
add
or
out
nop
xchg
jnp
jl
clc
add
push
shlb
add
mov
out
or
les
mov
push
xchg
mov
sti
sub
ja
int
pop
and
imul
pop
ffree
cli
cmp
xchg
pop
sub
xchg
sub
out
push
ret
push
stos
sub
ret
pop
or
bound
in
icebp
insb
push
clc
mov
mov
popa
xor
jg
adc
je
pop
dec
clc
popa
xor
pxor
mov
repz
out
lea
sahf
lds
repz
mov
add
aas
push
imul
es
test
xchg
sti
ja
fwait
or
sti
mov
lret
add
push
sbb
movsb
mov
inc
add
lock
loope
and
mull
push
addb
add
or
mov
ds
adc
icebp
icebp
je
add
insb
mov
add
ud1
loop
lock
mov
add
loope
cltd
les
mov
mov
imul
fdivs
adc
cmpsl
cmp
xchg
scas
hlt
or
stos
outsb
loopne
pop
fwait
adc
xor
popf
inc
add
mov
lahf
sbb
into
push
mov
mov
jge
sub
test
mov
push
repz
and
add
int3
adc
dec
and
sqrtps
mov
xchg
fwait
xchg
mov
mov
sbb
and
push
mov
movb
imul
outsb
sbb
cld
shlb
mov
jmp
movsb
out
cmp
ficoml
and
xor
pop
pop
fildll
dec
dec
xlat
addr16
loopne
into
pop
add
cltd
mov
mov
nop
mov
in
cmp
hlt
xchg
adc
xor
loopne
mov
fsubrl
add
mov
js
cld
push
sahf
leave
xchg
imul
iret
fcmove
mov
push
mov
add
mov
arpl
sub
jle
push
pop
bound
out
mov
pop
cmp
push
repnz
inc
push
add
arpl
jo
add
mov
ret
cmpsb
cmp
movb
mov
sbb
bound
iret
loop
icebp
adc
add
jecxz
bound
and
sbb
data16
fdivrl
loope
xorl
jbe
xchg
testb
sub
push
fs
jge
inc
add
pop
stc
jmp
pusha
add
adc
adc
mov
imul
inc
add
das
pusha
add
jmp
inc
cmp
sub
stos
fistl
hlt
or
int3
sub
sarl
movsl
sub
sbb
push
mov
sub
loop
mov
lahf
out
push
pop
shr
dec
ljmp
mov
stos
fmuls
mov
and
jns
xlat
sbb
mov
cmpsb
pop
repnz
lods
outsl
std
lahf
mov
les
outsb
jnp
push
mov
dec
mov
sbb
mov
fs
movsl
cmp
pop
pop
es
mov
pop
out
xor
addb
bound
dec
cwtl
scas
and
cmpsb
aaa
ljmp
adc
jecxz
push
or
lret
ficompl
dec
cmp
outsl
cmp
jns
add
popa
popf
push
test
mov
mov
xor
or
and
scas
xchg
mov
adcl
jns
add
add
push
or
addb
mov
add
mov
fs
sub
and
test
sub
adc
xchg
call
pop
jp
ficoms
inc
add
jae
and
mov
add
addb
adc
jp
ret
into
test
mov
repnz
sahf
mov
add
cld
outsl
mov
dec
jg
xchg
add
add
add
fs
or
add
lret
cmpsb
mov
les
insl
mov
les
or
add
jl
add
jnp
pop
dec
fmuls
add
jbe
aam
or
add
or
shlb
mov
pop
inc
add
sbb
mov
add
movb
movsl
pop
gs
lea
shlb
cmp
push
mov
dec
cli
sub
lcall
mov
xchg
fs
sbb
jb
pop
mov
fs
rolb
push
movsb
hlt
popa
jno
mov
fs
cmp
cmc
ja
add
loop
pop
ljmp
in
xchg
lahf
jnp
sub
add
and
cmp
roll
push
test
pop
push
sti
scas
roll
movsl
xchg
mov
daa
sbb
mov
add
je
stos
mov
lods
jmp
sbb
dec
fstpl
xchg
inc
xorl
add
add
mov
lahf
sub
ljmp
jecxz
xlat
sub
negb
cli
adc
add
jb
sbb
std
loope
mov
jg
jmp
xchg
sbb
call
outsl
and
mov
add
lds
pop
testb
imul
dec
into
movsl
xor
cmpsl
xor
daa
pop
dec
in
sub
daa
mov
mov
cli
movsb
add
stc
pusha
add
lods
xor
ret
lcall
xor
cld
adc
cltd
addb
fildll
rdtsc
addb
flds
add
fs
jp
lock
inc
mov
ret
lahf
push
jle
test
scas
bound
jno
xchg
add
mov
mov
in
das
dec
mov
jge
ja
xchg
adc
stos
fidivs
ror
das
push
lret
cmp
push
xchg
push
jmp
lods
xchg
aam
cwtl
insb
mov
add
push
test
out
addr16
jnp
jae
addr16
sti
cmp
add
push
jg
lcall
xchg
repnz
add
add
addb
add
sbb
insl
sub
call
mov
push
add
fcoml
sbb
inc
add
sub
js
add
add
call
das
or
sbb
rorb
std
test
rclb
and
sub
in
push
xor
xchg
lock
add
xor
rolb
cmp
adc
xchg
test
push
dec
lret
dec
sarb
inc
add
jno
inc
add
clc
lea
adc
or
repz
addr16
push
ffree
push
sub
ds
mov
add
movb
add
dec
test
sbb
mov
pop
insl
cli
stos
or
inc
add
int3
pop
push
jg
add
lods
jmp
cwtl
dec
adc
test
insl
mov
outsb
fidivs
jl
fistpl
add
add
jbe
mov
in
ficompl
aam
cmp
inc
into
fildl
data16
ds
popa
sub
sub
call
push
test
loope
out
rorl
loop
int3
mov
das
push
jo
mov
sahf
aaa
add
pop
push
jns
fdiv
stc
or
mov
push
pop
mov
lahf
call
jg
shll
mov
push
inc
fcmovnbe
addb
add
xor
out
call
in
sahf
xchg
rorb
dec
out
and
cmp
jbe
xlat
xchg
dec
or
arpl
jle
or
xchg
jno
mov
adcl
cld
sub
lahf
xchg
aaa
xchg
mov
dec
cmpsl
dec
scas
mov
js
lods
pmovmskb
xchg
add
scas
mov
ficoml
repnz
inc
aaa
dec
adc
jns
popf
sub
dec
jle
mov
mov
cld
xor
cltd
jge
test
add
in
sub
in
daa
sahf
dec
filds
adc
call
add
add
das
imulb
mov
and
jecxz
add
or
pop
lret
push
icebp
mov
jmp
adc
xchg
mov
jno
and
cmpsl
in
push
xlat
sqrtps
xchg
loopne
jb
cmp
jle
or
lods
cmp
pop
push
int3
inc
dec
out
loopne
adc
push
add
test
loop
pop
leave
popa
or
jg
roll
pusha
add
add
cld
jbe
roll
popa
fldcw
add
dec
jb
add
jecxz
test
imul
add
xor
push
xlat
aam
mov
push
adc
inc
add
loop
sub
repz
sub
push
mov
lea
inc
mov
pop
popf
in
xor
dec
int3
out
pop
loop
lcall
or
pop
loope
sub
dec
jbe
xchg
push
inc
add
adc
or
sbb
jg
mov
add
jno
loope
loopne
xor
xchg
or
push
add
loope
std
adc
movsl
mov
xacquire
mov
das
mov
pusha
add
jb
and
cmc
and
pop
and
adc
mov
push
lods
push
lods
xchg
inc
add
sbb
sub
mov
xchg
addb
pop
adcl
repz
in
imul
mov
sub
loopne
in
xor
cmpsl
and
pushf
and
add
add
and
cmp
xlat
xchg
shrl
int3
mov
sarb
or
dec
add
flds
push
pop
sub
dec
test
pusha
add
cs
rolb
popf
and
int
stos
andl
loopne
popa
jb
mov
pop
sub
aad
test
mov
sub
mov
add
jnp
xor
push
xchg
fs
and
add
stos
mov
push
stc
cmpsl
xchg
jmp
cmp
dec
mov
inc
add
sbb
cmpsb
jno
add
push
insb
movsb
pop
mov
and
jg
sbb
addr16
test
mov
sub
add
je
dec
add
xchg
sub
mov
shll
lret
pushf
les
sub
mov
andl
adc
dec
sbb
add
scas
jo
fcomp
hlt
ss
xor
and
jmp
call
pop
fmull
not
and
fs
and
popf
mov
mov
push
ret
jae
nop
mov
inc
add
xchg
aas
stc
ror
inc
add
bound
cs
das
push
in
or
cwtl
rolb
lods
xor
mov
and
jl
cmpsl
mov
cld
add
inc
xor
add
addb
sbb
push
or
jns
outsb
sbb
xchg
pop
mov
iret
outsl
push
lds
mov
test
ds
mov
mov
nop
movb
pop
fiadds
cmpl
fisubrs
imul
bound
test
fdivrl
cmp
lret
add
adc
dec
push
pop
mov
jge
push
and
shr
adc
mov
jb
mov
in
mov
cmc
jle
xchg
mov
push
xor
jecxz
and
pop
xchg
or
addb
loopne
mov
pop
xlat
lahf
adc
jl
dec
popa
aam
jne
movsb
xor
pop
adc
push
pushl
mov
cmp
lahf
stos
pop
mov
add
rclb
lea
add
insb
jle
les
add
adc
pop
mov
xchg
jle
or
jmp
ljmp
lret
and
cld
cld
pop
push
push
add
sub
cld
dec
adcl
in
mov
adc
xor
inc
add
pop
loope
sub
dec
ret
xchg
mov
and
lahf
push
clc
aad
mov
add
and
mov
adc
sub
dec
pop
in
stos
jecxz
xchg
divb
repz
loope
adc
lock
pop
mov
popa
mov
sbb
mov
daa
xchg
mov
dec
stos
mov
fcoms
sti
loop
lcall
les
lcall
mov
xchg
es
add
add
fcompl
mov
mov
or
mul
push
popa
sub
add
jns
add
mov
add
pop
sub
xor
cmp
inc
lods
push
outsb
jbe
jo
inc
add
stc
jecxz
xlat
mov
add
sub
add
faddl
pushf
pop
xor
adc
pop
and
scas
shll
ficompl
ss
cli
push
adc
orl
flds
jno
or
cli
jo,pn
rcrl
cmc
jmp
movb
rcrl
add
fidivrs
enter
mov
or
jb
popf
icebp
mov
int3
sub
ss
imul
inc
add
jae
movsl
repnz
mov
or
pop
mov
mov
add
jp
insl
sbb
sbb
idiv
mov
jne
repnz
movsl
xor
popf
cld
add
mov
pusha
add
xchg
dec
and
sarb
lock
aas
addb
add
cmp
mov
sbb
xor
mov
or
jmp
or
xchg
pop
pop
adc
faddl
add
or
out
xchg
lods
sub
jle
imul
fwait
std
inc
add
xor
add
xchg
mov
add
add
adc
movb
adc
leave
add
lds
mov
jp
mov
mov
fxch
xchg
mov
inc
inc
add
imul
repz
jl
inc
add
xor
push
mov
fwait
jnp
out
outsl
add
jp
xchg
jg
add
push
jbe
ret
dec
mov
nop
test
mov
xlat
mov
cmp
stc
jge
cmp
mov
pop
cmp
mov
push
xor
add
add
push
and
xchg
push
faddl
pop
loopne
fadds
test
lahf
movsb
bound
pop
lods
mov
sbb
cmp
xchg
outsb
ja
jp
push
out
mov
push
jl
pop
push
sub
mov
jo
dec
add
repnz
inc
add
insb
loope
imul
sbb
sub
jl
or
cmp
jne
cltd
ljmp
fists
adc
aad
lret
js
aas
ljmp
mov
or
or
or
add
sbb
repz
nop
sti
cltd
imul
notl
sub
jae
add
mov
sub
gs
jbe
int
mov
pop
add
or
das
dec
sub
cld
pop
jbe
xor
xor
stos
mov
ficomps
fs
sbb
insl
das
imull
add
pop
add
add
mov
mov
ss
mov
mov
lods
enter
in
rclb
mov
xor
sbb
jmp
add
aaa
mov
dec
pop
mov
loopne
fldenv
mov
xlat
movb
test
push
movsl
leave
add
lods
mov
ljmp
addb
fsubs
lock
into
aas
push
push
mov
add
and
aad
pop
xchg
mov
out
cli
and
ds
adc
sub
divb
rcll
sbb
outsb
push
add
pop
loope
leave
mov
jns
cmc
mov
bound
mov
sub
movsl
pop
xor
addr16
dec
outsb
mov
loopne
or
shrl
addr16
pop
push
repnz
repnz
lds
push
jge
cs
inc
add
scas
xchg
cli
sbb
out
aas
adc
add
inc
add
xor
xor
xchg
xchg
jnp
fwait
cltd
dec
inc
add
cli
adc
or
addr16
adc
stos
in
scas
repnz
xchg
add
jb
jb
test
pop
jp
ret
jo
mov
sti
inc
add
adc
lret
test
jo
adc
xor
sbb
inc
add
inc
sbb
xor
ror
inc
add
add
push
outsl
ret
fisubrl
jmp
leave
sbb
scas
cvtps2pi
sbb
rorl
movb
push
dec
and
xchg
leave
scas
and
inc
push
mov
int
in
and
and
sbb
inc
js
mov
lcall
ret
ror
xchg
or
push
or
push
out
insl
stos
out
outsb
xor
sub
sbb
lds
out
js
sahf
xor
mov
xchg
sub
mov
ret
icebp
clc
jp
movsl
add
mov
insb
push
aad
pop
hlt
pop
sar
jno
pop
mov
cld
out
movb
pop
in
test
pop
je
add
pop
cmp
scas
icebp
or
sbb
sbb
jle
daa
xchg
aas
filds
sub
lods
out
addb
add
nop
push
cs
add
add
dec
mov
movsb
xchg
inc
add
pop
outsb
sbb
scas
lds
xchg
jle
es
loopne
add
sti
mov
out
cmc
adc
out
add
cmp
js
stos
into
fucomi
pop
sub
inc
add
sbbl
gs
enter
push
pop
fsubp
adc
and
inc
add
mov
lea
xor
clc
jbe
push
ret
xchg
mov
xchg
iret
cwtl
mov
imul
jp
lock
imul
add
jge
mov
adc
jo
sub
imul
sbb
repz
icebp
xchg
loope
rcll
into
add
mov
lret
xor
add
pop
sbb
jo
fnstcw
add
add
aad
jecxz
add
mov
push
test
aas
aad
and
add
add
cli
jmp
sub
add
pop
or
std
mov
sub
or
ret
adc
jbe
mov
lahf
ficomps
xor
sbb
push
loopne
shlb
cmp
cmovbe
push
je
test
je
test
addr16
mov
cmp
sahf
stos
and
daa
dec
xor
xor
mov
sbb
and
jl
cmp
add
aaa
sbb
enter
or
add
sub
add
ret
lea
xchg
out
outsl
pop
or
or
data16
pop
ljmp
adcl
lods
fwait
jo
out
and
imul
pop
iret
es
add
fucomp
adc
cwtl
jg
pop
cwtl
stos
ja
popf
fstl
sahf
push
enter
mov
xchg
push
add
popa
jmp
inc
add
iret
in
cltd
xchg
in
hlt
test
add
fildll
xchg
mov
aad
and
hlt
sahf
ljmp
jb
fbstp
add
adc
je
push
push
add
adc
jge
add
sbb
push
add
inc
add
ja
inc
fdivs
addb
and
add
jecxz
pop
sub
inc
xchg
ja
inc
add
sti
das
jae
imul
mov
adc
mov
cmp
aaa
mov
inc
jmp
pop
jne
jbe
sbbl
in
or
gs
lcall
cltd
push
adc
xchg
aaa
adc
sbb
add
dec
mov
sub
mov
or
cmp
daa
inc
add
add
sbb
cmc
lock
pop
lods
adc
inc
add
dec
ja
fnsave
jne
stos
pusha
add
mov
shlb
push
popa
jnp
push
daa
pop
dec
movsb
sbb
push
add
popa
cld
cmc
xor
gs
or
int
mov
mov
or
add
ja
sub
rolb
jno
popf
test
push
loope
add
iret
push
push
sarl
pop
mov
mov
mov
into
movb
mov
inc
lcall
into
inc
add
and
cmp
mov
aas
pusha
add
icebp
mov
sub
and
or
pop
fs
push
push
inc
push
mov
not
enter
loop
imul
xor
add
xchg
sbb
lret
xlat
sbb
jp
jmp
mov
loopne
lods
pushf
repz
push
stos
or
sub
das
movb
es
aam
ret
les
mov
cwtl
sub
pop
and
js
test
insb
stc
rclb
in
cmp
addb
das
inc
out
mov
pop
aad
leave
push
pop
fcomps
xor
fists
add
cmp
test
pop
sbb
add
mov
add
es
ds
push
xchg
mov
xor
and
mov
fcoml
mov
push
cmp
lods
jp
add
add
iret
push
jns
sti
pop
movsl
xor
icebp
enter
pusha
add
push
pop
inc
sbb
bound
loopne
mov
jo
in
les
repz
sbb
push
add
add
sahf
out
aad
mov
andl
sarl
adc
test
add
dec
mov
add
cmpsl
sbb
lods
in
icebp
addb
fimuls
fildll
scas
stos
das
jle
add
jmp
xor
xor
dec
mov
jb
pop
mov
mov
mov
add
test
adc
xor
mov
add
sbb
stos
add
xor
mov
std
or
and
pop
repz
insl
or
cmc
xchg
push
bnd
dec
and
ret
mov
add
int3
adc
stos
loopw
inc
sbb
push
adc
aad
add
pop
addb
mov
shrb
push
xchg
ljmp
push
adc
cmp
sbb
dec
inc
add
xchg
dec
push
add
mov
ds
bound
aaa
sahf
addb
aaa
addb
xchg
jg
arpl
add
jecxz
pop
in
sbb
xor
dec
dec
fs
adc
xchg
jl
cmp
sbb
ret
jne
popa
jmp
pop
cs
movsl
flds
in
adc
rolb
dec
test
int
lods
push
shll
add
in
ja
jae
pop
push
aas
es
in
inc
ret
scas
sbb
mov
icebp
arpl
push
and
push
mov
mov
push
dec
pop
sbb
shrl
fdivrl
inc
add
mov
mov
flds
xor
fldl
push
repnz
stc
mov
dec
sub
mov
cmpsb
ja
add
stc
cmp
xor
add
insb
xchg
mov
loopne
repz
jae
in
mov
leave
aas
mov
mov
push
jl
shrl
mov
stos
call
mov
push
sub
sahf
or
add
add
or
mov
arpl
push
jl
dec
pop
xlat
add
lret
ljmp
gs
addr16
roll
add
loop
popa
cli
and
jae
add
xchg
mov
sbb
pusha
add
add
popf
jmp
cmp
jge
sbb
dec
insb
sbb
pop
inc
sbb
aas
ds
into
repnz
cli
pop
imul
sbb
adcl
add
jmp
imul
int3
jne
scas
cld
data16
adc
cmp
add
cld
mov
rolb
ds
fwait
enter
cmc
pop
sub
xchg
mov
ret
frstor
cli
pop
stos
xor
dec
mov
sbb
add
push
xchg
dec
push
jno
inc
add
dec
mov
inc
add
pop
rcrl
cld
outsl
popl
fdivr
lock
cmp
rcrb
clc
rolb
lcall
clc
std
jnp
ret
mov
sbb
data16
add
inc
mov
int3
pop
test
lret
das
jmp
add
inc
dec
jo
inc
jl
mov
pop
pop
xchg
sbb
add
call
jae
lods
sbbl
adc
jmp
xchg
lcall
cmp
ss
stc
jne
lret
repz
mov
add
jp
daa
push
jnp
add
bound
mov
xor
rclb
bound
test
or
pop
outsb
gs
xor
imul
cmp
hlt
js
pop
and
mov
inc
test
sub
jl
mov
pop
mov
adc
adc
cmp
or
add
pop
sti
dec
push
je
add
daa
jns
jge
add
lcall
xlat
insb
xchg
push
and
out
xorl
pop
jecxz
mov
cli
incl
add
pop
jle
lret
and
xchg
mov
pop
dec
sbb
dec
push
jno
mov
sbb
sub
test
loop
cltd
xchg
clc
jno
sub
cmp
mov
shl
inc
jbe
mov
imul
sti
jmp
out
cmp
data16
lds
lret
add
movb
stos
adc
cmpl
xchg
fdivrl
addb
mov
cmp
push
sbb
sbb
iret
gs
push
push
jne
add
dec
push
mov
pop
cs
xor
add
add
or
jl
mov
push
lcall
fimuls
add
pop
das
sbb
int3
outsb
movb
push
vpcmpeqd
pop
sub
jecxz
push
cmp
mov
push
aad
add
ret
inc
idiv
lock
mov
adc
xchg
insb
dec
negb
fcoms
mov
and
cwtl
jne
add
insl
rolb
bound
jecxz
add
sbb
add
call
adc
clc
adc
stc
loop
or
sarl
stos
das
fldt
es
or
outsl
mov
fldl2e
adc
add
cmc
sahf
xchg
mov
cld
jns
decl
adc
jbe
fwait
iret
mov
push
push
add
xor
daa
pop
adc
and
mov
jp
roll
add
out
pop
into
sbb
cmp
mov
and
push
ds
inc
adc
jl
add
inc
add
divl
into
aam
sahf
fistl
out
addb
dec
adc
adc
fdivrp
and
or
cmp
arpl
flds
out
or
dec
nop
jge
icebp
or
jp
sub
dec
jl
mov
dec
insl
clc
mov
adc
sub
clc
adc
cld
push
mov
repnz
mov
jecxz
cmc
daa
pushf
call
je
inc
add
push
pusha
add
xchg
push
jno
cmc
popa
sqrtps
mov
testl
stc
dec
jg
xchg
mov
adc
and
stos
jae
pop
outsb
pop
sbb
shrl
mov
pop
daa
mov
jge,pt
dec
fsubr
arpl
lret
xchg
sub
out
addb
lcall
jbe
fisttps
mov
pop
add
into
dec
and
dec
mov
adc
pushf
out
add
or
shll
add
insl
adc
int
je
stos
sar
and
push
sbb
push
dec
or
cld
cld
mov
pop
or
loope
call
add
add
sub
cmpsb
push
fstpl
outsl
sahf
movsb
cmpsl
mov
notl
jmp
and
add
loopne
cmc
ss
out
cld
xchg
mov
cs
add
stc
adc
mov
movsb
dec
mov
rcll
loope
sahf
jge
lds
popf
hlt
sub
add
or
mov
out
jns
jl
or
rolb
movsl
push
mov
inc
adc
xor
and
ja
addr16
mov
fmul
sub
mov
xor
shrl
lret
push
out
mov
add
insl
movsb
mov
sbb
mov
push
loop
lods
jp
cmc
mov
xor
xchg
cld
cmp
aam
mov
xor
or
add
mov
fistl
xor
jnp
outsb
xchg
loopne
lcall
fstps
leave
pop
insl
repz
ljmp
sbb
mov
mov
pushf
push
sti
dec
std
fldl
or
sbb
outsl
push
cmpsb
add
mov
or
call
fisttpll
add
inc
rclb
stos
xchg
and
les
cmpsb
xlat
in
stc
jo
sub
and
cmc
ficompl
xor
add
cmp
out
lcall
test
arpl
mov
jmp
outsl
mov
dec
test
jg
out
push
sbb
adc
pushf
mov
sub
mov
xlat
cwtl
and
andl
out
add
mov
inc
add
mov
movsl
popa
clc
in
mov
jmp
jmp
lret
iret
lods
cmp
ret
cltd
fbstp
dec
out
adc
push
adc
outsb
aad
mov
add
pop
sub
cli
xor
jno
add
sbb
or
ljmp
test
pusha
add
mov
mov
rcr
push
or
mov
add
jmp
add
ret
ret
push
pop
test
adc
pop
mov
pop
loope
add
aam
pop
mov
dec
gs
mov
outsb
ret
add
in
push
mov
das
mov
icebp
adc
cs
fldcw
pop
repz
test
int
js
add
mov
or
mov
mov
fildll
and
insl
into
out
cld
rcrl
push
inc
outsb
stc
lods
adc
rep
daa
ret
imul
out
push
cmp
mov
adc
mov
movsl
rcl
test
inc
add
nop
aaa
push
scas
push
cmpsl
or
fbstp
les
lret
dec
jl
repz
loopne
bound
gs
fmul
cwtl
jnp
mov
insb
jb
sub
pop
adc
xor
push
mov
pop
enter
mov
dec
mov
pop
mov
dec
stos
sub
mov
sub
xchg
push
xchg
cmp
les
aaa
push
adc
dec
stos
xor
ret
mov
mov
push
push
mov
ret
mov
adc
mov
pop
outsb
bound
cmp
roll
std
sbb
in
leave
lret
xchg
and
push
mov
notl
dec
and
mov
mov
cltd
push
mov
lds
or
movsb
sbb
lret
dec
inc
add
mov
int
out
jno
in
rcr
jmp
js
add
fdivrl
add
jns
jnp
jle
mov
dec
and
sahf
pop
leave
push
fwait
xor
fcomps
es
xor
les
iret
mov
sub
add
add
cltd
sbb
stos
xor
push
sub
jmp
inc
add
jno
pop
mov
ljmp
push
add
pop
sub
cmp
inc
pop
sub
jmp
out
mov
add
add
aam
cmp
les
movb
repz
arpl
adc
mov
addb
cmp
mov
add
mov
lods
push
mov
imul
pop
cs
cmp
cmpsl
dec
sbb
jnp
mov
movsb
xor
imul
sub
add
inc
add
xor
jne
cld
lock
jle
dec
fbld
fistpl
or
mull
nop
inc
add
addr16
jge
std
cmp
mov
cmp
test
mov
add
mov
fisttps
rcrb
xchg
mov
mov
add
add
std
pop
and
push
xchg
andl
adc
lds
inc
add
push
hlt
fstpt
mov
aas
lods
aas
inc
add
push
xchg
lret
cmc
out
sbb
sub
xor
out
dec
mov
int
fisttps
adc
jp
fcmovbe
push
inc
add
jg
outsb
and
stos
push
fnstsw
cmpsl
lods
mov
dec
adc
lret
cld
pop
ret
fwait
xor
add
pop
xchg
mov
int
hlt
mov
xchg
imul
mov
lcall
xchg
adc
xchg
fwait
pusha
add
pop
sub
addb
leave
inc
add
adc
add
pop
xchg
fst
loop
adc
mov
xchg
xor
jge
faddl
add
jno
sahf
int3
inc
add
push
pop
out
push
dec
adc
adc
gs
mov
test
bound
in
xchg
data16
cmp
and
repz
dec
pop
inc
add
aas
mov
lret
daa
and
shll
int3
mov
xchg
add
push
xchg
punpckhwd
push
pop
mov
sbb
add
sub
pop
sti
lds
sub
cld
outsb
inc
fwait
mov
lahf
addr16
add
arpl
cs
outsb
add
push
cmpsb
ja
mov
push
leave
mov
jl
xorl
pushf
sbb
mov
add
stos
mov
add
add
push
outsl
mov
imul
lahf
adc
cmp
shlb
add
dec
lock
mov
jo
add
hlt
stc
add
cwtl
std
jo
push
xor
jne
or
inc
mov
cmp
add
fcmovnbe
fidivl
sbb
dec
mov
ljmp
cmp
jb
fwait
mov
dec
mov
add
add
daa
sub
pop
xor
cltd
push
add
mov
fistl
cmpsb
mov
popa
sbb
add
mov
fnstsw
jl
aaa
sbb
lods
sbb
in
mov
add
push
lcall
ljmp
dec
popa
sbb
jno
add
jne
std
lret
cmp
mov
sbb
sahf
cmp
xchg
xor
les
pop
push
mov
xor
cmp
stos
inc
add
inc
stos
xchg
les
push
pusha
add
inc
add
mov
cwtl
lahf
mov
add
push
mov
pop
arpl
xor
enter
add
adc
push
xchg
hlt
fstpl
jnp
fstps
fimull
mov
cmp
hlt
xchg
addr16
jmp
add
cwtl
add
mov
dec
cmp
loopne
jecxz
cmp
pop
fbld
jge
sbb
and
ljmp
add
dec
or
xchg
out
addr16
iret
pop
jmp
pop
sti
leave
cld
fwait
das
into
test
jg
sbb
fcos
pop
dec
mov
lea
into
je
mov
mov
lods
imul
add
data16
xor
lods
dec
int
ss
sub
xor
jae
fisttpl
test
xor
rclb
cmpsl
roll
mov
lods
inc
in
mov
xor
push
add
fisubs
jb
sti
sbb
repz
int3
inc
add
jmp
jg
popa
sti
push
pusha
add
cmp
jecxz
pop
xchg
popa
adc
or
popa
mov
lcall
gs
sub
ss
jge
add
pop
repnz
mov
movsb
mov
dec
cmp
sbb
xchg
pop
imul
movsl
jnp
xlat
out
sub
xor
and
mov
sub
jns
fisttpl
mov
and
movsb
dec
or
jns
cmp
lods
inc
add
fwait
add
cmp
xchg
cld
imul
js
dec
fwait
mov
xchg
les
testb
insl
je
or
ret
test
mov
and
outsl
movb
hlt
and
inc
lcall
xchg
mov
jge
call
repnz
pop
ficoml
gs
add
dec
mov
xchg
lret
and
js
addb
jmp
std
adc
ja
jb
aad
daa
mov
imul
adc
mov
push
add
dec
push
adc
mov
cmp
fs
sub
inc
add
pop
loop
lcall
mov
int
add
icebp
xor
add
insb
fiadds
jle
add
test
icebp
loope
lods
dec
ret
sbb
add
scas
gs
add
add
sub
stos
lcall
stos
xor
add
and
add
shrl
add
sbb
and
js
sbb
mov
rorl
jno
mov
out
gs
hlt
jle
pop
cmpsb
out
sbb
notb
stos
push
movb
cmp
cwtl
pusha
add
push
push
movb
cmp
clc
fwait
clc
fadds
mov
inc
divb
sarl
xchg
or
ret
push
pop
and
ret
xchg
test
int
in
out
pop
or
adc
lock
add
fnstcw
mov
or
aaa
mov
loopne
cmp
flds
adc
sbb
jl
dec
mov
add
leave
outsb
test
mov
popf
lods
push
adc
pop
leave
sarl
int
jmp
sub
lods
jnp
lea
mov
pop
lods
into
sub
aas
insl
pop
fs
rcll
jbe
lds
adc
pop
mov
gs
imul
lret
cmp
insl
fmull
adc
fimuls
fisttpll
popa
xor
cmp
mov
add
pop
push
push
popa
sub
fists
dec
adc
pop
rcll
hlt
mov
das
pop
or
add
adc
xor
sub
push
xor
xor
cmpl
es
inc
lods
mov
clc
pop
add
xchg
fisubrs
jmp
push
test
mov
xchg
in
push
ret
call
inc
add
sbb
xor
pop
loope
in
std
sub
mov
mov
repnz
cs
dec
and
and
add
and
jmp
sbb
inc
das
int3
pop
test
cmp
ja
repz
xlat
push
mov
jl
adc
jbe
cli
js
jo
inc
add
sbb
in
inc
add
jecxz
mov
popa
push
add
mov
jmp
les
push
add
and
negl
xorps
pop
cli
add
jecxz
int3
cmp
mov
fidivrs
add
inc
add
xlat
iret
leave
mov
or
inc
je
jp
or
mov
or
mov
jge
lods
mov
rolb
inc
add
adc
jne
add
out
xchg
pop
mov
mov
add
sub
adc
sbbl
jns
bound
fs
popl
inc
push
xchg
inc
add
sub
int
test
mov
inc
test
fwait
push
out
movsb
mov
gs
and
fsubs
add
scas
insb
test
cmp
mov
mov
mov
cmp
stos
lds
shll
iret
jo
repz
push
sub
add
cmpl
push
inc
add
jmp
add
iret
out
fiadds
push
sbb
insl
cmp
xchg
insl
js
add
fcoml
pop
adc
sub
in
push
xor
cmpsl
push
sahf
mov
mov
rolb
inc
add
bound
subl
fistpll
cmc
outsb
sbb
and
stos
push
in
inc
add
fcoml
enter
and
mov
rcrl
lahf
decb
push
fcomip
jnp
sbb
mov
out
fisubrl
mov
add
mov
mov
cmc
leave
cmp
jp
sbb
jnp
mov
and
add
stc
pop
inc
add
add
aam
mov
arpl
add
sbb
mov
jb
ja
pushf
je
scas
mov
mov
mov
mov
popf
sbb
push
cmp
add
adc
add
mov
pop
xchg
push
std
dec
mov
add
test
add
push
cli
mov
inc
add
cld
mov
lock
sbb
mov
mov
inc
add
add
pop
cmpsl
xchg
jbe
dec
xor
add
add
imul
xor
in
dec
mov
js
or
aam
ljmp
mov
xchg
mov
or
jo
aaa
mov
lahf
sub
mov
ja
sarb
jns
sbb
add
xlat
xor
notl
lcall
or
cmpsb
pop
and
aaa
inc
cmp
mov
add
in
out
and
pop
repnz
gs
and
sub
in
add
fwait
repnz
add
inc
outsl
cmp
mov
lock
pop
movl
pop
int
xchg
ret
mov
dec
pop
test
aam
out
sbb
pop
push
ret
or
jbe
mov
xchg
fadds
add
pop
mov
sarl
inc
lds
xchg
je
dec
mov
fisubl
and
ja
scas
in
inc
add
fs
idiv
sub
gs
pop
adc
call
adc
add
cmp
rolb
shll
ret
scas
lods
jg
xor
in
jge
decb
jge
pop
xchg
xor
pop
pushl
insb
push
mov
and
add
aad
add
push
add
sbb
sbb
xor
add
add
jns
jmp
gs
insb
int
inc
push
jnp
cmp
push
ret
cmc
ja
adc
cmp
mov
push
orl
add
dec
sar
inc
movb
addb
sbb
outsb
in
es
cmp
mov
loopne
add
and
addb
sbb
add
mov
cmp
add
popf
xchg
xchg
mov
frstor
xchg
stc
rolb
cltd
or
in
stc
sub
call
add
jne
fiadds
mov
scas
push
fcmove
dec
test
push
into
out
jo
rcrl
jl
inc
add
cmpsl
shl
or
loopne
mov
scas
xchg
jns
mov
imulb
jecxz
add
test
inc
add
out
cmp
les
iret
dec
fsubrl
mov
cmpsb
ret
shrl
dec
pop
clc
repnz
dec
adc
add
fstps
ror
addr16
or
ficoms
loopne
jp
ljmp
lahf
or
movsl
pop
mov
divb
xchg
push
xchg
into
push
arpl
clc
out
je
lahf
test
test
jp
xlat
pusha
add
aas
xor
cli
aaa
pop
lret
cmp
nop
jbe
cmpsl
flds
mov
int
test
jle
ret
dec
sub
push
sete
push
rcll
pop
push
jae
mov
ss
mov
movb
les
sub
clc
xor
jge
nop
jnp
jo
pop
out
cwtl
inc
pop
mov
sbb
sub
adc
sbb
cmc
push
addr16
dec
adc
push
and
je
push
fcoms
fs
pushf
inc
cld
movsb
adc
cwtl
inc
add
add
mov
jge
add
lret
mov
aaa
adc
mov
jmp
shlb
cmp
xor
xor
addb
fxch
std
inc
add
ffreep
xchg
and
sbb
sub
shrb
fsub
sub
xor
push
shl
stos
adc
mov
call
xlat
lods
das
pushf
xchg
mov
gs
movl
test
cld
imul
std
fwait
add
xor
movb
scas
inc
add
lds
enter
iret
or
insl
repnz
in
inc
ljmp
lea
ja
aad
stc
sbb
inc
add
test
popl
or
pop
inc
in
mov
add
inc
bound
mov
pop
addb
rolb
mov
inc
add
ret
iret
aam
xor
data16
cmp
fldcw
cltd
mov
jmp
mov
and
arpl
divl
add
fstpl
and
lahf
ss
jae
jl
push
add
cmp
jg
lock
out
xchg
add
lds
daa
sti
cmp
les
cmc
int
les
adc
fimull
cmpsb
push
lods
jns
push
mov
movb
loop
movsb
fldcw
fsts
les
sub
inc
sub
inc
add
add
mov
or
out
jne
cmc
lods
flds
popf
mov
movsl
pop
ror
daa
xchg
popf
mov
pop
shrb
mov
add
mov
ljmp
and
lahf
push
addb
add
sbb
sbb
movb
xor
ja
ljmp
dec
cltd
adc
pop
mov
rolb
stos
sarw
sub
xor
add
sti
adc
nop
cmp
jg
jp
dec
sub
add
imul
xchg
lods
into
cld
icebp
dec
or
inc
enter
sub
fldt
inc
add
push
pop
lahf
push
dec
sbb
xchg
scas
push
arpl
and
jp
ret
test
push
add
push
negl
test
test
bound
push
fistpll
add
in
jno
out
cli
lahf
mov
mov
loopne
xlat
movsb
pop
int
sbb
jg
add
xor
mov
adc
aad
xor
pop
dec
mov
add
inc
add
out
leave
jne
xchg
clc
mov
cmp
out
cltd
sti
or
inc
add
add
xor
mov
outsl
cli
add
ss
ficompl
mov
add
add
repz
cmp
cmp
or
es
cwtl
leave
xor
push
jle
sub
addb
sbb
ret
adc
add
xchg
and
jne
negl
leave
xor
cmp
push
incl
or
cmp
mov
scas
out
cli
push
dec
sbb
and
sbb
or
popf
pop
rorl
push
xchg
fists
and
popa
jmp
inc
fwait
pop
rolb
inc
clc
ja
push
mov
pop
imul
pop
imul
pusha
add
cld
in
jbe
add
or
es
mov
ss
lahf
test
jae
ja
mov
rcl
shl
addb
cmpsl
xlat
dec
popa
scas
popa
pushf
cmp
repnz
add
xchg
fisubrl
pop
add
imul
addb
jae
ficompl
xchg
sbb
shll
xor
out
inc
xchg
mov
push
add
pushf
shll
add
in
fs
inc
add
les
push
dec
hlt
mov
shrb
lods
int3
inc
add
cmp
xchg
out
cmpl
jmp
test
add
sahf
test
dec
mov
add
mov
cmp
add
in
push
add
or
inc
add
push
add
lea
aaa
cmc
bound
xchg
inc
add
fbstp
pop
aad
cs
loop
and
das
pop
dec
std
idivb
sub
dec
push
cmp
add
dec
xchg
test
or
out
and
mov
add
push
pusha
add
fcompl
or
add
daa
std
inc
add
sub
add
sahf
inc
add
punpckhwd
cmpsl
cwtl
movsb
lea
clc
lds
int
xchg
xor
in
sub
ret
add
fstp
sub
jmp
fchs
lods
adc
pop
repz
adc
dec
or
or
jecxz
decb
add
sarl
add
and
movb
mov
and
sti
int
add
pop
sub
lock
dec
ljmp
sub
leave
jns
inc
push
rolb
scas
and
fdivp
add
ret
jl
or
inc
add
dec
mov
xchg
add
das
stos
dec
psubb
scas
inc
add
pop
mov
ret
xor
loope
fwait
xchg
pop
insl
sub
pushf
mov
mov
push
fs
lcall
stos
lahf
and
sub
addb
cmp
outsb
fbld
ds
mov
mov
add
hlt
sub
push
clc
cmc
adc
shrl
cltd
dec
dec
pusha
add
fldenv
push
pop
dec
pop
jb
jl
or
xor
add
add
arpl
jl
cwtl
hlt
out
mov
add
out
pop
jecxz
fmulp
adc
add
fdivrp
sub
mov
add
loopne
cmp
mov
add
pop
rolb
mov
mov
mov
test
add
add
or
test
add
fisubrs
jo
scas
lock
cmp
xchg
and
and
jg
add
ss
pop
sbb
xchg
jno
mov
pop
enter
inc
add
stos
push
adc
xchg
mov
push
jns
push
xchg
aam
int3
mov
addb
scas
jl
jns
adc
insb
je
push
pop
fdivrs
sub
mov
pop
xchg
cmp
cmp
inc
pop
jns
in
sub
pop
lds
push
sti
ds
mov
mov
cmc
adc
add
add
arpl
lret
shrb
in
test
icebp
leave
inc
add
insl
mov
je
lea
outsl
out
in
jl
movsb
je
out
loop
xor
jmp
xchg
xchg
lods
push
pop
or
lea
rcrb
movsb
sub
out
mov
mov
xor
inc
mov
cmp
lcall
add
xor
imul
mov
call
ljmp
sub
add
or
sahf
fwait
test
mov
in
inc
add
lret
nop
jb
adc
push
mov
fmulp
stos
cs
xchg
test
arpl
or
inc
loop
pop
adc
out
add
and
jno
inc
mov
in
sbb
scas
into
adc
add
pop
pop
ljmp
out
mov
mov
inc
rcrl
add
fistl
jne
int3
and
push
add
stos
addb
push
jno
out
push
mov
push
add
fcomi
sbb
in
push
sbb
xor
lcall
lcall
aad
mov
fsubs
jge
scas
test
insb
js
mov
push
sti
xlat
les
add
sub
jg
fldt
push
mov
xchg
insl
loopne
inc
add
sbb
rolb
mov
in
mov
sbb
push
stc
sarl
loope
or
inc
add
push
inc
dec
inc
sbb
dec
addb
test
fwait
js
or
mov
fst
mov
in
push
adc
lods
dec
hlt
es
sti
outsl
dec
les
nop
mov
dec
inc
lock
jnp
addb
shll
dec
pop
sbb
add
add
jb
add
mov
scas
ja
or
pop
addr16
loopne
in
es
fcoms
clc
mov
adc
lcall
add
jae
inc
add
pushf
xor
xchg
test
icebp
das
je
xor
xor
loope
fsub
ljmp
imul
sbb
push
stos
scas
xor
mov
or
shll
shll
mov
loop
mov
add
jbe
test
fdivp
mov
jae
mov
out
add
add
in
jno
incl
add
fldcw
and
packuswb
dec
and
addb
leave
into
mov
add
mov
cmp
popa
push
lods
push
adc
adc
mov
fldl
dec
adc
mov
sarl
sub
incl
cli
cmp
push
cltd
inc
inc
sub
jp
jmp
mov
fdivrp
cmp
sub
mov
mov
push
and
ret
adc
out
xchg
icebp
in
push
mulb
fmul
rcrl
mov
cmp
inc
loopne
fisttpll
and
lock
inc
add
je
cmc
lret
mov
jno
mov
jno
stc
filds
and
jno
out
mov
pop
jecxz
sbb
addb
and
jmp
fs
aad
rcl
adc
jne
loopne
dec
in
divb
jb
insb
mov
lods
mov
mov
or
lahf
lret
scas
mov
imul
in
fcom
mov
mov
and
add
repz
in
and
and
add
push
jne
inc
add
push
int
lahf
jne
mov
pushf
sub
rcrl
add
ret
addb
jae
push
in
xchg
pop
scas
jecxz
and
loope
dec
adc
or
cmp
push
rcrl
add
inc
push
pop
mov
mov
xorl
ret
shrl
scas
adcl
add
cltd
das
or
cmp
arpl
mov
ljmp
out
sarb
pop
insb
int
jle
pop
or
out
loopne
sbb
push
scas
mov
add
jp
xchg
in
push
sbb
and
xor
ret
add
jo
sbb
hlt
dec
scas
test
mov
jns
notb
pop
push
jp
cwtl
addb
loopne
pusha
add
or
sbb
adc
imulb
cld
xor
push
shr
cmp
sbb
jle
cmp
lret
push
out
pop
cmp
xchg
pop
pop
lock
in
inc
add
sbb
sbb
add
aad
pushf
xchg
mov
sbb
xor
stos
xchg
test
divb
loopne
and
jp
mov
test
sahf
mov
push
pop
mov
add
dec
addr16
lahf
add
iret
xchg
or
add
pop
add
fsubp
mulb
clc
push
adc
add
xchg
adc
dec
cmp
mov
nop
add
bound
imul
push
outsl
movsb
push
add
sub
or
cmovle
mov
and
or
lock
or
xchg
xchg
loopne
cli
out
add
jae
inc
lcall
in
out
mov
addb
aas
rcl
movsb
dec
clc
arpl
add
jl
push
imulb
adc
add
adcl
pop
mov
sub
mov
jp
jbe
std
cmc
mov
les
nop
inc
add
lds
add
sbb
lret
mov
fsubs
test
inc
aad
xlat
jmp
mov
lcall
xchg
stos
push
iret
inc
cmp
inc
add
lods
shrl
add
pop
push
mov
dec
rcrl
pop
arpl
pop
and
aad
jmp
jle
cmpsb
jno
movsb
or
push
dec
cwtl
or
jle
lahf
xchg
jae
nop
sub
inc
push
pop
lret
xchg
pop
jns
int
add
movsb
mov
inc
add
fcomps
jle
add
shlb
aaa
inc
add
and
mov
out
fidivrs
scas
cmc
enter
add
lret
adc
data16
pop
mov
add
test
movsb
jp
jg
sub
xor
rolb
and
test
addb
jae
nop
lock
dec
in
mov
inc
add
add
arpl
xor
shlb
add
daa
out
in
inc
xchg
inc
add
push
add
add
mov
jmp
xchg
mov
mov
mov
add
mov
int3
mov
shlb
pop
xor
fbstp
hlt
mov
out
dec
mov
loope
mov
das
push
sbb
pop
in
stc
or
pushl
add
adc
out
lahf
adc
gs
jb
hlt
mov
add
ficoms
inc
add
xchg
scas
or
negl
xor
gs
lods
hlt
jne
fildll
sbb
shlb
test
sbb
push
xchg
scas
xchg
cs
jg
inc
mov
mov
sub
push
subps
cmpsb
ja
pop
andps
fidivrl
inc
out
push
add
sbb
stc
add
loopne
movsb
push
pop
push
out
lds
ret
cmp
pop
aad
jnp
add
ss
in
divl
lds
sbbl
ret
mov
fcomp
js
add
push
sbb
jp
lret
add
mov
mulb
rolb
or
add
cmp
into
inc
adc
and
fldl
xor
sub
adc
xchg
sbb
fdivrs
rolb
push
bound
movsb
imul
add
and
je
int
dec
ljmp
push
pop
cmp
pop
push
mov
cmc
lahf
jno
movb
pop
and
popf
ja
int
in
mov
dec
bound
adc
add
xchg
or
sahf
or
add
outsb
mov
pop
jb
movsb
addb
push
lret
in
out
popf
popf
sbb
add
in
lods
adc
cmp
inc
add
xchg
lea
add
pop
pop
add
pop
in
mov
sti
mov
negb
and
lock
addr16
sub
hlt
jb
add
nop
push
cltd
das
divl
mov
mov
inc
int
fsubp
adcl
subl
dec
sub
in
ret
mov
add
push
add
shrb
movsl
daa
aam
mov
jne
xchg
frstor
and
insb
out
lcall
mov
add
pop
rolb
xchg
jg
inc
jae
inc
add
add
sbb
inc
std
jle
cmpsb
lock
mov
mov
test
subl
and
jae
mov
push
mov
lods
dec
pushf
pop
fcmovbe
test
test
jnp
sub
mov
jecxz
push
push
add
pop
adc
aam
adc
sub
in
and
jno
inc
add
push
addb
jne
lods
mov
movb
xchg
cmc
scas
ftst
inc
jbe
pop
mov
xchg
pop
inc
xchg
test
addb
or
inc
add
fdivrs
sbb
add
fiadds
call
adc
adc
out
insl
inc
add
inc
add
mov
popa
jg
fcoms
push
mov
sbb
movsl
icebp
mov
push
pusha
add
xchg
add
sbb
inc
add
dec
mov
sub
and
das
push
mov
xor
sti
mov
add
add
sub
inc
add
iret
into
mov
mov
in
cwtl
inc
add
cmp
dec
out
inc
add
mov
sub
stos
loopne
mov
dec
stos
push
addb
add
mov
mov
adc
mov
jbe
test
inc
add
inc
push
push
cmpsb
pop
inc
stc
add
xchg
lods
dec
aam
cli
insl
push
lret
push
cmpsb
cwtl
cmp
pop
jle
mov
out
pop
movl
pop
jb
pop
pop
les
aas
test
add
add
pop
mov
lret
inc
add
adc
mov
scas
mov
adc
pop
nop
iret
mov
movsl
stos
fisttpl
and
mov
out
mov
xchg
sahf
in
add
cs
adcl
inc
cs
cs
icebp
lret
mov
jmp
insl
into
add
shll
mov
imul
mov
sbb
sahf
adc
mov
inc
repz
dec
test
or
les
add
add
enter
and
aaa
mov
xchg
dec
adc
add
cli
add
mov
add
lcall
cmp
out
xchg
cmp
pop
clc
or
stos
jbe
jmp
dec
adc
aaa
iret
mov
int3
xchg
stos
inc
add
ret
fcomi
or
cld
push
cbtw
jl
inc
add
out
dec
adc
add
shll
xchg
lahf
mov
cltd
jg
arpl
add
cmpsb
xchg
movsb
fsubrp
js
jp
jb
or
xor
mov
add
es
imul
pop
fisubl
mov
test
ret
fldl
pop
rolb
mov
loope
mov
inc
add
pop
mov
repz
inc
jo
pop
or
mov
pop
add
inc
shr
cmp
pop
pop
repz
mov
inc
add
dec
pop
data16
test
cwtl
mov
ss
sub
mov
enter
push
xor
adc
fbstp
mov
pop
les
fsubl
pop
sub
mov
mov
shlb
daa
lcall
out
lds
shr
push
aad
xchg
push
pop
jge
out
test
lea
jb
aaa
leave
call
add
shll
inc
add
cmpsl
sub
jb
add
stc
data16
push
outsl
inc
lods
les
movsl
xor
inc
add
and
adc
fistpll
mov
push
add
outsl
mov
rep
jne
test
stos
mov
sbb
jmp
add
repnz
cmpxchg
out
gs
and
xor
rolb
add
sldt
xor
cmp
imul
add
addb
add
add
or
sbb
movsb
repz
push
sbb
fs
sti
inc
test
xchg
pop
xchg
ja
sbb
pop
xchg
int
add
add
