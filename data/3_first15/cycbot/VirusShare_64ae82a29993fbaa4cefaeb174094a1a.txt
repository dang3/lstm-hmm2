add
add
add
add
add
or
add
add
add
add
add
add
add
or
add
or
or
add
or
add
or
add
add
add
add
add
or
add
or
or
add
or
or
or
add
or
or
add
add
add
or
or
or
add
add
add
add
add
add
or
add
add
or
add
or
add
or
add
add
or
add
add
add
add
add
or
add
add
or
add
add
add
add
add
or
or
add
or
add
add
add
add
add
add
add
add
or
add
or
add
add
add
add
add
add
add
add
add
or
add
or
add
or
or
add
add
add
or
add
add
add
or
add
add
or
add
or
add
or
add
or
or
add
or
add
add
or
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
or
or
or
or
or
add
or
add
add
add
add
add
or
add
add
add
add
add
or
add
or
add
add
add
add
add
add
add
add
or
add
or
or
or
or
or
add
add
or
or
add
or
add
add
or
add
or
add
or
add
or
add
add
or
add
add
or
add
add
add
add
add
or
add
add
add
or
or
add
or
add
or
add
or
or
add
or
or
or
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
or
add
or
add
or
add
or
add
add
add
or
add
or
add
add
add
or
add
or
or
or
add
add
add
add
add
add
or
add
add
add
or
or
or
or
or
or
add
add
add
or
add
or
or
add
or
add
add
add
or
or
add
add
add
add
or
add
or
add
or
add
add
add
or
or
add
add
add
add
add
add
or
add
add
add
or
or
add
or
add
or
add
or
add
or
add
or
add
add
or
or
add
add
add
or
add
add
add
or
add
or
add
or
add
or
add
add
add
or
add
add
add
add
add
or
add
add
add
or
add
or
add
add
add
add
or
or
add
add
add
add
or
add
or
or
add
add
add
add
or
add
add
add
add
add
add
add
or
add
add
add
or
add
or
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
or
add
add
add
add
add
or
add
add
add
or
add
or
add
add
or
add
or
add
add
add
or
or
or
add
or
or
add
or
add
or
add
add
or
or
add
or
add
or
add
or
add
add
add
add
or
or
add
or
add
add
add
or
add
add
add
or
add
add
add
add
or
or
add
add
add
or
add
add
or
add
add
add
or
add
add
add
or
add
or
add
or
or
add
or
add
add
or
or
or
or
or
add
or
add
add
or
add
add
or
add
or
or
add
or
add
or
add
add
add
add
add
add
or
add
add
or
add
or
add
or
add
add
add
or
add
add
or
add
or
add
add
add
add
add
or
add
or
add
or
or
add
add
add
add
add
add
add
add
or
add
or
add
add
add
or
add
add
add
add
add
add
add
or
or
add
add
add
or
or
add
add
or
add
or
add
or
add
or
or
add
or
add
add
or
add
add
add
add
or
add
add
add
or
add
add
or
or
add
or
add
or
add
or
or
add
add
add
add
or
add
or
add
or
add
or
add
or
add
add
or
or
or
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
or
add
or
add
or
add
add
or
add
or
or
add
add
add
add
add
or
add
or
add
add
add
add
add
or
add
or
or
add
add
or
add
or
add
or
add
add
add
add
add
add
or
add
or
add
or
add
add
add
or
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
or
add
add
add
or
add
or
add
or
add
add
or
or
add
add
add
add
add
add
or
add
add
add
add
or
add
or
add
or
add
add
add
or
add
or
add
add
or
or
add
or
or
or
add
or
add
add
add
or
add
add
add
add
add
or
add
add
or
add
or
add
add
or
add
add
add
add
add
or
add
add
add
add
add
or
or
or
add
or
add
add
add
or
add
or
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
add
add
add
add
add
add
or
add
or
or
or
add
add
add
add
add
add
or
add
or
add
or
add
or
add
or
add
add
add
add
add
add
add
add
or
or
or
or
or
or
add
or
add
add
add
or
add
add
add
or
add
add
add
or
or
add
add
add
add
or
add
or
or
add
add
add
or
add
add
or
add
or
add
or
add
add
add
or
add
or
add
or
add
add
add
or
or
or
add
add
add
add
add
add
or
add
add
or
add
or
add
add
add
or
add
add
or
add
or
add
add
or
add
add
add
or
add
add
add
add
add
or
add
or
or
or
add
add
add
add
add
or
add
add
or
or
or
or
add
add
or
add
or
add
or
add
add
add
or
add
add
add
add
add
or
add
add
add
or
add
add
add
add
add
or
add
or
add
add
add
or
or
add
add
or
add
or
add
add
add
add
or
add
add
add
add
add
add
add
or
add
add
add
add
add
or
add
or
add
or
add
add
add
add
add
add
or
add
add
or
or
add
add
or
add
or
add
or
add
or
add
or
add
or
or
add
add
add
add
add
or
add
or
add
or
add
or
add
or
add
add
add
add
or
add
add
add
or
add
add
add
or
add
add
add
add
or
add
add
add
add
add
or
add
or
add
add
add
or
add
add
or
add
add
add
add
or
or
add
add
add
add
add
add
add
add
add
add
add
add
or
or
or
add
add
add
add
or
add
add
add
add
add
add
add
or
add
or
add
or
add
add
add
or
add
or
add
or
add
or
add
add
add
add
add
add
add
or
add
add
add
or
add
add
or
add
add
add
or
or
or
add
add
add
add
add
add
add
add
or
add
add
add
or
add
add
add
add
add
add
or
add
add
add
or
add
or
add
or
or
or
add
or
or
add
add
or
add
add
add
add
add
or
add
add
or
add
add
add
or
or
add
add
add
add
add
or
add
add
add
add
or
add
add
add
add
or
add
or
or
add
add
add
or
or
add
add
add
add
or
or
add
add
add
add
or
add
add
add
add
or
or
add
add
add
or
add
or
add
or
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
or
add
or
add
or
add
or
add
or
add
or
add
add
add
add
add
add
add
or
or
or
or
or
or
add
or
add
or
add
add
or
add
add
add
add
add
or
add
or
add
or
add
add
add
or
add
or
add
add
add
add
add
add
or
or
add
or
add
add
or
or
or
add
add
add
add
or
add
add
add
or
add
add
or
or
add
add
or
add
or
add
add
add
add
add
or
add
add
or
add
add
add
or
add
or
add
add
add
add
or
add
add
or
add
add
add
or
add
add
or
add
or
add
add
or
add
add
add
add
add
or
add
add
add
add
add
or
or
add
add
add
or
add
or
add
or
add
or
or
add
or
add
or
add
or
add
add
add
add
add
add
add
add
or
add
add
or
add
or
add
or
add
or
add
or
add
or
add
add
or
add
add
add
or
or
or
or
add
add
add
add
add
add
add
add
add
add
add
add
or
or
or
add
or
add
add
add
add
or
add
add
or
add
or
add
or
add
add
add
or
add
or
add
add
add
add
or
or
add
or
add
add
or
add
or
add
or
or
or
or
add
or
or
add
add
add
add
add
or
add
or
add
add
or
add
or
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
or
add
add
or
add
or
add
or
add
add
add
or
add
add
or
add
or
add
add
add
add
or
add
add
add
or
add
add
add
add
or
or
or
or
add
or
add
or
add
add
add
or
add
or
add
or
add
add
add
add
add
add
add
add
or
add
add
add
or
add
add
add
add
add
add
or
add
or
or
add
or
or
or
add
or
add
or
add
or
add
or
or
add
add
or
add
or
add
add
add
or
or
add
add
add
or
add
add
or
add
or
add
add
add
or
add
or
add
or
add
or
add
or
add
add
add
or
or
add
or
or
or
add
or
add
or
add
add
add
or
add
or
add
or
add
add
add
or
add
add
add
add
add
add
or
add
or
or
add
or
add
add
add
or
add
or
add
or
or
add
add
or
add
or
add
or
add
add
add
add
add
add
add
or
add
or
add
or
add
or
add
or
add
or
add
or
add
add
add
or
add
add
add
or
or
add
add
add
or
add
or
or
add
add
add
or
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
or
or
add
or
add
add
add
or
add
add
add
add
or
or
add
add
or
or
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
or
add
add
add
or
add
or
add
add
add
or
add
add
or
add
add
add
or
add
add
add
add
add
or
add
or
add
add
add
or
add
add
add
add
or
or
add
add
add
or
add
or
add
or
add
add
add
add
add
or
add
or
add
add
or
or
add
or
add
add
add
or
add
add
or
or
or
add
add
or
or
add
add
add
add
add
or
add
add
add
add
or
add
add
add
add
add
or
add
add
add
or
add
or
add
add
or
or
add
add
or
add
add
add
or
add
add
add
or
add
add
or
add
or
add
add
or
add
add
add
add
add
or
add
add
add
add
or
add
or
add
add
add
add
add
or
add
add
add
add
add
or
or
add
or
or
add
or
add
add
add
add
or
or
add
or
add
or
add
add
or
add
add
add
or
or
add
or
add
or
add
add
or
add
or
add
or
add
add
add
or
add
add
add
add
add
add
add
add
add
add
or
add
add
or
add
or
add
add
add
or
add
add
add
add
add
add
or
add
or
add
add
or
add
or
or
add
add
or
add
add
add
add
add
or
add
or
add
add
add
add
add
add
add
add
or
or
or
add
or
add
add
or
add
add
add
add
add
add
or
add
add
add
or
add
or
or
add
add
add
add
add
add
or
or
add
or
add
or
add
add
add
lcall
sbb
jne
pop
adc
cmpsl
xchg
stos
addl
or
int
and
add
add
mov
xor
adc
cli
and
sbb
orl
lret
in
mov
add
add
or
mov
adc
mov
je
cmpsl
mov
jnp
nop
xchg
add
ret
cli
xchg
fistl
mov
cmp
push
in
xchg
sub
add
add
push
add
add
add
xchg
xchg
and
push
insb
add
mov
mov
imulb
dec
fcom
jp
xor
push
outsb
subb
jge
jge
push
daa
xchg
or
add
add
imul
lds
xchg
fnsave
add
add
cmp
aam
adc
push
shlb
adc
inc
mov
pop
js
lahf
fs
scas
aad
add
add
mov
scas
xchg
mov
je
add
add
add
xor
test
popw
inc
jmp
arpl
add
add
lea
daa
pop
mov
xchg
pushf
mov
mov
push
cltd
xor
je
dec
jns
out
jp
into
mov
mov
out
adc
add
add
add
or
nop
pusha
add
add
push
jae
dec
leave
daa
or
mov
mull
mov
push
xchg
mov
push
shrl
addr16
add
add
add
inc
sbb
pop
outsb
mov
insb
add
add
pop
mov
fdivrl
mov
pop
inc
aad
xor
data16
add
add
lahf
cli
mov
or
jge
mov
xchg
gs
in
and
xor
mov
cmpsb
pusha
add
add
ret
enter
jl
mov
add
add
add
add
pop
lods
pusha
add
add
das
cmpsb
or
subl
add
sub
add
add
lea
cld
int3
fidivrl
insl
daa
mov
add
add
add
add
add
push
mov
add
adc
lret
mov
push
loop
pop
in
pop
movsl
sub
add
mov
mov
mov
adc
mov
add
mov
aaa
stc
mov
mov
rcr
shll
add
gs
pop
and
xchg
in
fdivrl
mov
cmp
add
aam
xchg
rcl
ja
push
add
add
out
pop
imul
mov
out
adc
repz
aam
mov
add
adc
inc
xor
ljmp
ror
push
push
push
cmc
cmc
pop
xchg
jae
cli
lret
add
add
mov
mov
aaa
xchg
cmc
test
cmp
mov
jnp
and
add
mov
adc
or
repnz
mov
leave
sub
jns
mov
sahf
sub
fnsave
lahf
or
or
mov
dec
fucomp
and
add
add
lret
inc
xchg
or
cmc
pop
ret
dec
mov
icebp
arpl
js
movb
hlt
add
add
mov
scas
scas
push
sahf
jo
add
add
jne
mov
int3
jle
lock
dec
lods
pop
iret
sbb
jmp
push
cmpsl
repz
movsb
xchg
ret
mov
repz
pusha
add
add
xchg
adc
sbb
ret
push
pop
pop
pop
test
in
in
pop
fs
imul
lods
ret
push
daa
sbb
mov
loopne
dec
jge
push
and
insl
jecxz
mov
add
add
or
icebp
bound
xor
pushf
icebp
lock
aam
pop
jg
sahf
push
insl
or
into
jmp
add
add
sahf
and
enter
jl
push
jg
adc
rcll
mov
sbb
jbe
stc
andl
sbb
sbbb
aaa
outsb
xchg
push
xor
repnz
add
add
mov
mov
lods
jp
xchg
mov
add
negb
add
add
test
or
or
add
add
add
sub
vcvtsd2si
mov
mov
rcl
fcomip
lock
or
add
add
xor
ds
out
cmpb
pop
repz
add
add
or
pop
pop
and
add
add
mov
mov
mov
scas
fwait
xchg
jmp
sub
jle
int3
add
sti
fbstp
mov
adc
fwait
mov
lock
add
add
cli
mov
cld
fldt
adc
add
bound
popf
inc
add
sahf
jo
mov
sbb
aaa
cmpsb
sbb
mov
jl
mov
std
in
push
leave
sub
add
add
mov
sarl
and
in
add
movl
daa
jmp
data16
xchg
aam
mov
int3
or
add
add
add
sub
add
add
dec
jne
dec
cmp
addr16
ret
and
lds
movsb
mov
add
push
lahf
ss
xchg
dec
or
add
add
dec
push
popf
inc
movups
and
lcall
sub
add
add
add
add
loopne
clc
clc
out
fdivrs
pop
or
mov
mov
mov
cmp
add
pop
sub
add
add
lods
mov
ds
and
outsl
inc
repnz
mov
frstor
mov
mov
mov
push
sti
pop
cmpsb
ret
into
lods
mov
xchg
scas
push
ljmp
sbb
int3
jl
add
add
inc
into
pop
jmp
add
mov
icebp
cmp
test
add
add
fidivrs
addr16
add
add
mov
neg
adc
lods
sub
xchg
jecxz
imul
inc
cmc
add
add
add
inc
add
add
daa
stos
inc
add
add
sub
add
add
cltd
mov
dec
jge
pop
daa
in
xlat
mov
add
or
mov
mov
push
jmp
add
add
cltd
mov
mov
add
arpl
jne
notb
add
imul
mov
dec
xor
mov
mov
add
add
loope
push
or
sbb
mov
dec
sarb
das
mov
push
aam
xchg
rorl
push
pop
adc
sub
add
add
cmp
or
add
add
mov
add
stos
pusha
mov
xchg
lahf
xchg
xchg
sbb
sbb
adc
sub
std
inc
shll
lahf
cmpsl
movsb
mov
loope
jg
push
fistpl
insl
push
cmp
push
jno
jp
dec
mov
test
pop
adc
aam
fisubrl
movsl
pushl
dec
fists
into
negb
in
cmp
repnz
push
adc
arpl
add
sbb
push
es
dec
add
add
adc
stos
adc
pop
lcall
cmp
mov
fwait
mov
jmp
sbb
jae
jg
notb
or
sbb
pop
shr
push
or
push
aas
ja
nop
xchg
adc
xor
inc
jne
xor
add
mov
add
mov
add
out
loopne
jle
mov
add
subl
xchg
lret
mov
add
mov
leave
stos
popf
bound
jb
jmp
cmp
add
add
pop
popa
pop
jne
out
ret
pop
subb
add
and
or
add
add
movsb
adc
dec
or
xor
lcall
push
pop
xchg
subl
mov
into
int
aas
popa
add
jl
add
xchg
fiadds
push
mov
sar
mov
jmp
inc
out
cmp
pop
rclb
leave
fstps
xchg
dec
out
int
pushf
in
ret
addl
add
push
inc
sub
inc
inc
add
add
jae
insl
push
lds
push
ret
add
cmpsl
scas
add
add
add
or
add
add
addr16
add
add
add
jae
mov
adc
loope
inc
filds
lahf
repz
push
sbb
add
pop
in
mov
arpl
mov
xchg
movsl
int3
cmpsb
mov
sbb
mov
movsl
xor
jo
es
movsl
repnz
ret
sub
jbe
add
add
dec
dec
lods
daa
mov
movsb
stos
cwtl
outsl
dec
ret
inc
or
xlat
mov
xor
ror
pop
out
mov
movsl
fdivrl
sub
add
add
dec
mov
mov
xor
icebp
rolb
pop
mov
cwtl
ret
ds
in
arpl
push
mov
xor
xchg
fcmovb
push
sub
add
add
scas
push
dec
shl
addr16
mov
push
push
xchg
negl
inc
sbb
add
add
and
add
add
pop
push
dec
sbb
repnz
push
or
add
add
cs
jbe
pop
sbb
inc
inc
js
mov
or
lahf
roll
pop
sbb
inc
or
dec
addr16
mov
xor
and
add
add
add
or
add
add
dec
mov
and
add
add
add
jmp
push
mov
jecxz
mov
test
inc
mov
push
je
push
arpl
xchg
push
out
pushf
daa
cmp
cmp
inc
fcoms
inc
mov
push
fsubs
decl
pop
pop
incl
test
test
incb
push
das
pop
rcll
aad
xor
fidivrl
dec
adc
ds
xchg
leave
adc
shlb
add
add
xor
vlddqu
mov
outsb
stos
pushf
mov
xchg
jnp
and
jae
sub
stos
mov
add
add
fsubrs
enter
aaa
mov
stos
xchg
jae
jns
jp
jge
jp
pop
test
cld
xor
jae
fcoml
dec
mov
jne
mov
or
xor
push
jo
fnstenv
add
add
pop
icebp
and
pop
data16
enter
dec
add
add
pop
cmpsb
imul
data16
cwtl
test
test
add
add
lret
add
add
add
push
hlt
sub
add
add
push
or
fstps
mov
shl
sbb
adc
and
sbb
scas
xchg
dec
clc
push
xor
add
sbb
xor
dec
push
fdivrl
xor
add
adcl
add
xchg
mov
add
mov
and
dec
mov
lock
add
sub
mov
clc
out
pop
cmp
xor
lcall
fcoms
sub
insb
add
add
popf
xchg
pop
cmp
outsb
adc
push
push
mov
ljmp
fdivs
gs
mov
add
add
test
pop
mov
mov
cmp
jp
xchg
or
scas
or
bnd
scas
inc
cli
dec
cs
out
dec
push
add
sbb
mov
insl
sub
imul
mov
jmp
test
add
add
inc
clc
jno
repz
add
sbb
jnp
cli
add
dec
xchg
imul
dec
mov
cltd
or
aad
std
imul
and
xchg
cmpsb
inc
mov
add
add
fcomps
lret
and
fucomip
pusha
add
add
push
pushf
and
movsl
mov
shr
and
out
in
mov
cmp
mov
pop
mov
fldt
add
add
mov
add
push
push
mov
out
test
fdivrp
xchg
mov
mov
lret
push
pop
test
add
and
into
sbb
or
decl
inc
jns
and
xor
mov
mov
aam
xor
add
add
out
test
dec
rol
ds
mov
cmp
imul
aas
and
add
add
push
and
add
loop
addr16
and
int3
icebp
daa
dec
push
sbb
sbb
add
add
mov
add
add
addl
sub
dec
mov
jno
mov
sti
xchg
addr16
call
popa
hlt
test
add
add
gs
add
add
add
add
add
add
add
xor
inc
dec
or
mov
insb
mov
and
add
add
pop
ret
pop
pop
inc
mov
add
cmp
repz
scas
jmp
xchg
es
mov
push
stos
ret
stos
jo
pusha
add
add
mov
dec
lea
sbb
xor
push
ret
sub
add
lcall
dec
data16
pop
je
pushf
jne
scas
in
inc
mov
andl
add
add
or
cli
cwtl
shrb
dec
popf
repz
in
xor
aaa
ljmp
pop
popa
pushf
lcall
mov
mov
aam
jnp
pop
mov
add
add
aad
sbb
fwait
cmp
add
add
test
test
cld
pop
int
cltd
rorl
add
add
add
repz
pop
push
pop
add
pop
xor
test
jne
ljmp
mov
push
testb
sbb
xchg
in
mov
xchg
cmc
andb
mov
lds
int3
loop
popa
scas
inc
es
and
add
std
or
add
add
std
out
pop
cmp
lea
fiadds
mov
push
rcr
pop
test
dec
rolb
mov
jae
loop
test
cmpsl
pop
jge
add
push
mov
cmp
mov
and
add
add
dec
pop
or
out
xor
pusha
mov
sub
add
add
xor
in
cld
adc
pushf
inc
mov
popf
mul
adcl
xchg
or
dec
hlt
push
and
je
lods
in
js
std
pop
mov
jno
mov
in
fstp
xor
inc
pop
gs
pushf
mov
or
add
lahf
cmp
jl
fwait
sbb
ret
fistps
loopne
imul
test
pop
sub
add
add
in
fstl
mov
fisubs
xor
stos
decb
add
add
inc
sub
add
pushf
mov
pop
aas
lock
fwait
xchg
jo
jnp
mov
sub
sbb
xchg
pop
aas
mov
mov
fsubr
cmpsb
test
add
add
shl
leave
mov
xor
mov
jg
dec
shll
push
fistpll
imul
dec
jnp
push
sbb
and
xchg
insb
add
add
mov
pop
sbb
add
add
lcall
xchg
add
add
insb
mov
test
shl
arpl
imul
push
mov
int
scas
sub
add
pop
insl
aas
dec
mov
in
clc
mov
mov
add
add
pusha
mov
add
add
addr16
aam
fdivrl
jne
mov
mov
add
jb
xchg
arpl
fnstenv
add
cmp
add
add
clc
jo
in
sbb
push
pop
nop
mov
add
mov
add
xchg
mov
popf
shrl
jae
xchg
fimuls
repz
push
cmpsl
test
cmpsl
and
pop
xor
jnp
xchg
daa
stos
testb
mov
je
mov
das
mov
add
add
addb
pushf
cmp
pushf
loop
cmpsb
mov
dec
cmpsb
int3
dec
mov
mov
add
add
ja
mov
and
add
add
stos
ss
add
pop
push
mov
add
iret
add
pop
loop
mov
xlat
add
add
add
pop
cmp
cmp
inc
or
mov
cmpsl
sub
add
add
adc
clc
pop
jge
mov
jle
out
loopne
and
add
add
add
mov
add
add
lock
xchg
adc
mov
test
mov
out
test
mov
js
pop
pop
jae
mov
add
push
pushf
mov
stc
sbb
in
xchg
jnp
dec
cmp
inc
mov
sbb
pop
icebp
cmpb
add
mov
movsb
cmpsb
repnz
xchg
add
add
add
or
add
add
enter
mov
test
pop
xchg
mov
xchg
cwtl
mov
fsubs
outsl
mov
adc
in
cmpsl
cmpsb
pop
mov
add
mov
fidivs
add
mov
pop
enter
test
xor
lcall
icebp
xchg
ds
dec
repnz
and
add
add
add
aas
notl
fprem1
and
pop
jb
xchg
mov
sub
lods
es
mov
lret
pop
jns
flds
pop
mull
cmp
sub
cmpsl
and
add
add
inc
call
xor
sti
xchg
outsl
dec
mov
mov
add
adc
add
or
add
add
jle
and
mov
sti
mov
mov
pop
daa
sbb
pop
outsl
xor
or
add
add
ljmp
mov
pop
jle
loopne
imul
fsubs
add
add
mov
in
out
or
iret
push
push
enter
push
rcr
int3
dec
or
add
add
mov
dec
add
add
shld
jns
fwait
test
inc
scas
xchg
mov
jg
adc
add
add
jbe
sub
add
add
push
out
movsl
and
mov
rorb
sbb
rcll
or
push
cmp
adc
inc
js
push
xlat
in
fbstp
add
mov
lea
add
add
add
dec
push
mov
stos
test
int
jmp
jle
xchg
jae
imul
and
mov
add
add
nop
bound
mov
add
add
in
aaa
push
adc
adc
lock
cmc
lea
and
mov
pop
test
pop
xchg
lea
add
add
es
aaa
call
into
inc
ficomps
mov
dec
pop
sbb
cmc
push
or
and
cmp
add
std
fyl2x
lret
test
ja
xchg
or
scas
add
add
add
mov
shll
dec
mov
mov
sbb
cmp
add
add
fdiv
dec
inc
or
add
cmp
test
cmp
xlat
pop
insb
add
add
xchg
xor
mov
lcall
xlat
std
xchg
or
ja
mov
xor
xor
fisttps
mov
add
add
add
dec
mov
push
and
add
add
je
adc
mov
in
pop
cmp
add
add
int
mov
push
mov
push
mov
sub
call
cmp
jne
lea
push
push
andl
call
or
mov
shr
mov
add
push
push
push
push
push
call
leave
ret
ret
mov
mov
mov
or
cld
lea
lea
sub
shr
not
inc
sub
mov
je
mov
add
lea
clc
jmp
ret
push
mov
sub
lea
movl
movl
push
push
push
push
push
cld
call
test
jne
push
bnd
jmp
pusha
add
add
lcall
cmp
dec
subl
aad
mov
and
dec
mov
iret
jno
pop
rolb
sbb
dec
push
nop
hlt
test
mov
add
add
insl
int
rcrl
add
cmp
add
add
mov
sti
out
fidivl
xchg
push
push
mov
test
jo
xchg
xor
add
imul
adc
mov
adc
pushf
push
aaa
push
in
test
add
add
jmp
mov
fnstsw
imul
mov
ret
mov
pop
lret
test
cmp
hlt
push
lea
les
add
aaa
popf
inc
mov
je
cwtl
rcr
aam
adc
ficompl
nop
jne
xor
xchg
mov
add
add
mov
xor
sahf
mov
mov
loopne
jns
cmc
dec
out
dec
add
and
add
mov
repz
pop
orb
add
add
leave
bound
mov
test
add
add
add
int
sarl
sub
mov
add
out
or
jnp
jae
dec
call
div
addr16
insb
add
add
cwtl
shl
outsl
ret
arpl
cmp
add
add
jmp
inc
adc
add
add
xchg
adcb
mov
mov
popa
and
add
add
je
stos
insb
mov
sub
add
add
pop
add
xchg
arpl
adc
fisubs
add
ficompl
lds
pusha
add
add
aaa
je
bound
popa
pop
xchg
sbb
int3
popf
cmc
push
mov
mov
cmpsb
sbb
jae
sub
stos
dec
cmc
sub
sarb
outsl
mov
lcall
int3
in
lret
push
xchg
dec
add
add
push
adc
or
inc
aas
xlat
add
outsl
out
and
pop
sub
add
popf
adc
jecxz
fistps
cwtl
imul
adcb
jle
xor
mov
sbb
jl
test
bound
lock
push
arpl
sub
add
add
cmp
add
add
add
add
fsubrl
or
sbb
pop
sbb
dec
cs
add
add
sbb
imul
xorb
pop
repz
add
add
add
add
add
pop
xchg
movsb
dec
mov
fistpl
add
xor
add
add
pop
add
add
loopne
jmp
add
nop
mov
jmp
into
sbb
inc
push
fmuls
ret
add
add
aaa
inc
or
add
add
dec
nop
adcl
add
add
addl
and
shll
test
adc
mov
jmp
es
mov
add
add
cld
or
repz
inc
or
add
push
cmp
xor
push
pop
sub
scas
mov
mov
add
bound
popa
pop
pop
or
add
add
jno
mov
and
sub
sub
addr16
je
pop
stos
xor
add
add
inc
pushf
push
sbb
add
add
sbb
repnz
call
add
add
push
push
cmp
push
xor
or
pop
lock
xchg
out
or
or
dec
cwtl
test
sub
dec
jnp
aad
inc
xor
pop
inc
or
add
add
les
push
mov
push
push
mov
adc
cmpsb
push
mulb
add
fadds
add
add
add
xor
jno
mov
pop
jle
and
add
add
pop
sarl
or
sar
nop
test
pop
adc
push
fs
cmp
add
mov
mov
lret
cmp
icebp
popf
call
mov
sub
das
xor
imulb
jbe
pop
dec
add
rcr
pmaxsw
add
add
xlat
push
jbe
test
rclb
jb
xlat
sti
dec
mov
out
sub
xchg
divl
dec
push
inc
es
lcall
cs
call
add
mov
and
aaa
jge
out
mov
add
dec
ljmp
js
cwtl
dec
mov
xlat
or
add
add
jb
popf
dec
ret
shrb
mov
or
add
add
add
add
add
in
mov
mov
bound
add
add
cmc
jp
std
push
pop
inc
mov
add
add
add
mov
mov
inc
shll
movsb
shlb
in
leave
lret
cmp
inc
jmp
xchg
pop
inc
inc
add
add
jle
popa
and
stc
inc
mov
inc
inc
mov
faddl
add
add
mov
arpl
aam
dec
pop
stc
hlt
clc
dec
mov
cmp
cmc
mov
xor
add
add
mov
gs
loopne
lcall
add
add
mov
pop
lea
mov
adc
stos
fmuls
dec
fimuls
add
add
xchg
jae
xchg
or
add
add
fbstp
std
mov
add
add
hlt
testl
aad
mov
xchg
jae
cmpsb
inc
popf
dec
add
add
dec
ljmp
add
push
in
xchg
mov
ds
jge
ret
or
sub
ret
nop
in
or
add
add
test
pop
imul
pop
in
pop
shlb
mov
add
add
sbb
xor
pop
imul
add
add
mov
mov
add
add
pop
aad
movsl
or
add
pusha
mov
mov
push
popf
mov
rcll
add
popf
sbb
xchg
xor
jbe
jbe
add
pop
inc
stos
add
mov
enter
ss
adc
mov
mov
and
add
add
cmp
ja
mov
mov
fwait
jne
in
mov
sbb
movsb
inc
add
add
sbb
push
dec
cmp
and
push
test
aaa
mov
stos
or
push
mov
in
xchg
xchg
push
js
jg
ds
lahf
pop
push
repz
lock
stos
pusha
mov
cld
jle
adc
lahf
lock
jnp
outsl
outsb
push
xor
inc
pop
fsubr
test
sbb
add
add
mov
cmp
or
add
add
add
add
insb
mov
xchg
cmp
popa
rorb
sub
mov
xchg
cltd
add
add
add
aad
mov
jo
push
push
pop
into
mov
cs
mov
mov
je
push
f2xm1
pop
xlat
lock
push
push
popf
je
daa
jg
hlt
test
aam
mov
movsl
or
add
add
mov
rorl
add
add
ficoml
adc
mov
sbb
loopne
scas
sub
add
pushf
test
xor
loopne
xchg
and
sub
shlb
je
out
fisubrs
jbe
rcrb
and
cmp
add
add
xchg
dec
add
add
stos
loopne
sahf
and
mov
cmp
push
adc
xor
fld
jb
add
add
or
add
mov
add
add
mov
notl
sbb
into
xorb
addl
add
loop
enter
arpl
and
mov
insl
aam
es
fdivrs
add
mov
push
jg
ja
ja
imul
aaa
lret
pop
jo
push
or
iret
int3
or
jle
push
cli
dec
fcoms
lahf
xor
sbb
call
dec
jecxz
fcompl
cmpsl
mov
test
mov
pop
les
add
add
out
testl
aas
xor
mov
adc
and
inc
add
add
dec
sbb
pop
lahf
ljmp
sbb
add
sti
jl
gs
in
test
push
sub
add
add
enter
pop
das
sbb
or
xchg
mov
ds
lret
arpl
outsb
sbb
mov
cmpl
xor
push
cmc
push
cmpsl
jae
repz
xchg
push
es
or
add
add
jbe
mov
add
lret
pop
mov
lds
xchg
pop
push
test
lret
clc
jbe
mov
fsubr
iret
scas
xor
subl
mov
cmp
subl
iret
pop
les
bound
repz
stos
mov
sbb
or
add
add
jne
leave
sbb
or
add
add
xor
repnz
testb
in
pop
lea
testl
addl
rcrb
jbe
rcrl
mov
in
adc
sbb
lcall
add
outsl
outsb
add
mov
jmp
and
pop
in
je
inc
iret
push
lcall
icebp
rolb
add
add
sbb
inc
push
add
mov
repz
inc
cs
cmp
out
or
add
add
sahf
mov
popa
and
aam
mov
lock
lods
jecxz
stc
adc
cmp
cld
pop
jmp
mov
loopne
adc
ret
movsb
idiv
push
sbb
popf
and
add
add
mov
pop
popf
imulb
adc
push
pushf
scas
data16
das
addr16
sub
mov
xor
inc
push
mov
das
mov
add
scas
mov
cld
mov
cmc
js
popa
fdivl
push
fstpl
shll
test
xchg
in
dec
mov
or
add
add
add
add
addr16
pop
dec
add
add
lahf
sarl
cmpsb
ja
outsl
mov
sahf
in
push
test
add
mov
add
add
pop
pushf
mov
shlb
adc
adc
mov
mov
adc
imul
or
add
add
xor
push
dec
mov
sub
add
add
add
test
and
ret
mov
hlt
ljmp
sub
dec
xchg
hlt
cmpsb
mov
sbbb
test
sbb
and
add
add
ja
sti
mov
add
roll
mov
mov
sbb
sti
xchg
xor
loopne
leave
jno
rorl
mov
inc
cmpsb
adc
mov
fs
jae
inc
add
add
sub
mov
sbb
and
or
push
jecxz
outsl
std
scas
les
outsb
test
mov
inc
pop
scas
pop
jecxz
inc
stos
aas
fnstcw
pop
pop
and
mov
xchg
cli
cmp
xchg
test
add
add
loope
fidivrs
push
add
rcrb
fldt
lods
out
mov
mov
outsl
out
adc
xor
ja
dec
int
ficompl
push
cli
xlat
jo
shrl
and
add
add
mov
mov
mov
add
add
aam
sbb
and
add
add
add
lcall
cmpsb
jno
cli
inc
lods
and
add
add
and
adc
decl
cmp
sub
or
arpl
inc
add
add
cli
ljmp
dec
xchg
pop
sub
inc
mov
cld
pop
jle
subl
add
push
imul
js
jge
adcb
scas
cmp
ret
ret
jae
fadd
addb
lea
mov
cmp
test
sub
aam
push
xchg
or
fiaddl
ret
in
icebp
movsl
sbb
mov
dec
xchg
sub
add
add
jmp
mov
fistps
xor
call
add
aas
push
pop
in
idivb
lret
fdivrs
mov
cwtl
add
add
sub
add
add
mov
jp
lret
loop
andl
add
add
arpl
in
cs
mov
mov
hlt
test
out
frstor
mov
roll
sub
push
xor
fdiv
jae
jmp
add
add
xchg
mov
in
idiv
dec
xchg
adc
mov
mov
add
add
lds
add
add
cs
mov
sbb
ja
xor
cmp
fnstenv
mov
movsl
stos
inc
sub
sbb
add
andl
push
pushf
mov
es
cmpsl
ret
push
imul
mov
xchg
pop
add
gs
jl
dec
dec
dec
call
in
sub
push
push
call
or
jg
xchg
adc
xchg
sahf
sbb
clc
mov
leave
cmp
xor
mov
nop
packuswb
shr
sbb
loopne
rcr
pop
jno
ficompl
xor
gs
cmp
stos
inc
testl
gs
add
add
cmpsl
pop
adc
call
sbb
pop
add
add
add
movsb
mov
xor
mov
fisubrs
and
add
ret
xchg
xchg
daa
lods
test
stos
lahf
int
jg
dec
mov
lock
add
jns
mov
xchg
gs
es
loopne
adc
add
dec
add
add
add
add
add
stos
cmp
add
xor
hlt
adc
and
roll
xchg
js
mov
lock
shr
jnp
dec
mov
mov
cs
dec
popf
mov
mov
cmp
test
jecxz
fildl
dec
les
add
add
pushl
fs
adc
aas
int
repnz
pop
sbb
jle
dec
cmpsb
mov
scas
pop
xchg
push
clc
repnz
nop
nop
jae
add
pop
add
add
add
mov
cmp
ret
cld
sahf
add
push
add
add
mov
mov
push
mov
xchg
ret
add
adc
mov
add
add
add
push
mov
xchg
ret
add
add
pop
add
add
mov
nop
push
mov
leave
nop
jmp
add
add
jl
mov
clc
repnz
nop
nop
jae
add
test
bound
sub
jp
inc
add
add
insb
std
add
add
add
dec
test
nop
push
mov
leave
nop
jmp
and
mov
add
fmul
push
clc
repnz
nop
nop
jae
add
repz
sbb
mov
arpl
and
fidivl
cld
nop
nop
jae
mov
add
pushf
subl
jae
lds
add
ret
mov
add
add
jge
clc
repnz
nop
nop
jae
repz
xor
add
test
rolb
in
sub
add
add
nop
push
mov
leave
nop
jmp
add
out
mov
add
xchg
xchg
pop
push
mov
xchg
ret
xchg
add
add
pop
add
cmpsb
xchg
mov
leave
nop
jmp
cld
add
add
add
pop
add
into
pop
ret
clc
repnz
nop
nop
jae
lds
mov
pop
leave
pop
clc
repnz
nop
nop
jae
pop
add
add
jecxz
fucomip
or
add
add
cld
nop
nop
jae
add
push
add
dec
jmp
test
add
or
repnz
nop
nop
jae
insb
adc
add
mov
dec
add
repnz
nop
nop
jae
add
sub
add
push
nop
push
mov
leave
nop
jmp
or
in
pop
add
add
test
clc
repnz
nop
nop
jae
in
insl
add
mov
push
push
sbb
cld
nop
nop
jae
add
repz
add
add
pop
mov
leave
nop
jmp
add
mov
test
add
js
faddp
sub
mov
xchg
ret
mov
std
add
push
add
add
nop
push
mov
leave
nop
jmp
add
sahf
arpl
add
add
cld
nop
nop
jae
arpl
mov
add
bound
add
out
add
push
mov
xchg
ret
repz
insb
add
add
add
nop
push
mov
leave
nop
jmp
add
std
jns
sbb
mov
mov
clc
repnz
nop
nop
jae
repz
into
pop
xor
rclb
nop
jmp
add
add
add
js
add
pop
movsl
inc
push
mov
xchg
ret
adc
dec
mov
jns
add
mov
sahf
add
pop
push
mov
xchg
ret
add
add
adc
mov
orl
in
leave
nop
jmp
popf
sahf
add
repz
add
add
jmp
add
fistps
in
add
push
mov
rol
clc
repnz
nop
nop
jae
push
ret
add
aad
test
cld
nop
nop
jae
add
add
add
call
dec
es
repnz
nop
nop
jae
add
ret
test
mov
add
clc
repnz
nop
nop
jae
mov
cmp
aad
clc
repnz
nop
nop
jae
add
xor
mov
mov
mov
xchg
ret
test
add
add
add
clc
repnz
nop
nop
jae
add
bound
in
out
mov
clc
repnz
nop
nop
jae
bound
add
repz
subl
clc
repnz
nop
nop
jae
fwait
xchg
add
push
add
add
or
loop
inc
add
in
add
pop
aad
pop
mov
push
mov
xchg
ret
jns
mov
test
call
clc
repnz
nop
nop
jae
and
add
pop
add
xor
and
jo
xor
ret
clc
repnz
nop
nop
jae
add
dec
add
ffreep
add
add
add
nop
jmp
std
pop
add
add
pause
push
mov
leave
nop
jmp
std
add
or
push
mov
xchg
ret
add
pop
add
add
cwtl
fwait
mov
into
add
aad
pop
and
repnz
nop
nop
jae
jmp
add
add
fwait
aad
sahf
mov
nop
nop
jae
xchg
sahf
add
mov
addl
adc
sub
clc
repnz
nop
nop
jae
cwtl
test
test
call
add
jne
clc
repnz
nop
nop
jae
in
adc
mov
add
clc
repnz
nop
nop
jae
add
add
test
lds
push
push
mov
xchg
ret
add
add
and
dec
insb
add
mov
in
inc
repz
add
lret
sbb
add
fcompl
or
test
or
add
repnz
nop
nop
jae
or
add
add
dec
les
clc
repnz
nop
nop
jae
test
dec
mov
js
in
ret
add
add
add
add
mov
clc
repnz
nop
nop
jae
aad
add
add
add
mov
mov
add
repnz
nop
nop
jae
fistps
ret
iret
mov
clc
repnz
nop
nop
jae
call
test
add
nop
push
mov
leave
nop
jmp
fwait
add
pop
jg
xchg
arpl
loop
clc
repnz
nop
nop
jae
in
test
xor
mov
add
incl
nop
push
mov
leave
nop
jmp
mov
dec
add
add
add
nop
nop
jae
fmuls
jg
jns
ror
add
lahf
push
push
mov
xchg
ret
fdivs
add
add
js
add
insl
mov
push
mov
xchg
ret
jecxz
filds
add
sahf
push
insb
std
add
add
movsb
movsb
jle
fisubs
nop
nop
jae
adc
pop
call
fwait
bound
mov
pushf
mov
inc
add
fwait
add
js
ret
add
pop
icebp
push
clc
repnz
nop
nop
jae
or
add
mov
mov
inc
call
cld
nop
nop
jae
jecxz
lds
add
add
xor
nop
nop
jae
add
test
jecxz
adc
add
clc
repnz
nop
nop
jae
add
addl
test
add
mov
push
mov
xchg
ret
pop
and
add
call
mov
clc
repnz
nop
nop
jae
add
jmp
xor
data16
push
push
mov
xchg
ret
test
cld
adc
add
add
add
mov
nop
nop
jae
mov
add
add
add
les
xorps
xchg
ret
add
add
lds
mov
mov
xchg
ret
xchg
test
add
repz
dec
add
xchg
decl
cld
nop
nop
jae
adc
add
insb
add
add
and
inc
add
add
dec
sub
addl
mov
outsl
push
clc
repnz
nop
nop
jae
add
add
add
cmp
pop
fld1
push
mov
xchg
ret
test
test
add
test
add
mov
sbb
push
clc
repnz
nop
nop
jae
bound
jmp
fwait
aad
add
mov
add
add
cltd
add
clc
repnz
nop
nop
jae
pop
dec
mov
add
add
sub
clc
repnz
nop
nop
jae
mov
add
adc
sub
clc
repnz
nop
nop
jae
add
add
call
mov
push
mov
leave
nop
jmp
add
add
add
push
mov
xchg
ret
pop
add
add
iret
add
clc
repnz
nop
nop
jae
jg
add
add
data16
add
out
cmp
sbb
repnz
nop
nop
jae
test
and
add
cwtl
add
mov
push
mov
xchg
ret
xchg
mov
add
xor
popf
add
sahf
sub
mov
nop
push
mov
leave
nop
jmp
ret
ret
lds
push
mov
xchg
ret
add
add
mov
nop
nop
jae
push
add
fcoms
movsb
add
add
add
add
add
mov
clc
repnz
nop
nop
jae
mov
push
pop
or
insl
fwait
or
clc
repnz
nop
nop
jae
test
jmp
add
out
add
add
clc
repnz
nop
nop
jae
push
dec
lds
into
adc
add
in
repnz
nop
nop
jae
adc
add
fimull
addb
shr
clc
repnz
nop
nop
jae
adc
popf
add
add
add
add
fldcw
sub
repnz
nop
nop
jae
add
mov
rolb
push
test
xchg
push
mov
xchg
ret
xor
mov
add
add
jns
cmpl
nop
push
mov
leave
nop
jmp
add
std
add
popf
add
add
bound
insb
inc
jb
clc
repnz
nop
nop
jae
add
add
repnz
nop
nop
jae
add
add
mov
loop
icebp
pop
clc
repnz
nop
nop
jae
test
add
adc
add
jns
inc
add
add
fs
pop
clc
repnz
nop
nop
jae
add
mov
leave
mov
clc
repnz
nop
nop
jae
jmp
add
sub
add
mov
add
xchg
and
sbb
push
mov
xchg
ret
add
mov
mov
add
rclb
jmp
in
repz
pop
mov
or
fwait
add
lods
testl
cmp
ret
add
sahf
test
dec
add
add
jecxz
fwait
push
mov
xchg
ret
add
add
out
arpl
aad
adc
dec
mov
push
mov
xchg
ret
jmp
add
add
add
add
mov
push
clc
repnz
nop
nop
jae
cld
add
rclb
add
add
in
leave
nop
jmp
add
xor
mov
add
or
repnz
nop
nop
jae
add
add
sarb
add
push
mov
xchg
ret
add
rep
add
add
ffreep
sub
inc
and
repnz
nop
nop
jae
test
add
test
add
jg
clc
repnz
nop
nop
jae
mov
mov
dec
add
add
ja
mov
adc
repnz
nop
nop
jae
add
add
add
fistpl
nop
push
mov
leave
nop
jmp
add
bound
add
push
clc
repnz
nop
nop
jae
test
push
fwait
insb
add
test
add
and
not
clc
repnz
nop
nop
jae
arpl
add
jmp
insl
js
call
repnz
nop
nop
jae
data16
add
aad
dec
add
cwtl
subl
inc
add
fwait
xor
add
mov
outsb
and
mov
xchg
ret
js
add
in
add
add
repnz
nop
nop
jae
lds
into
add
add
add
data16
shl
stos
clc
repnz
nop
nop
jae
test
xchg
pop
jns
add
add
add
addr16
add
add
add
aad
add
add
add
cmc
xorl
clc
repnz
nop
nop
jae
add
add
fs
xor
clc
repnz
nop
nop
jae
add
sbb
sub
add
clc
repnz
nop
nop
jae
rolb
lds
out
jg
adc
mov
repnz
nop
nop
jae
add
add
add
cwtl
push
add
or
jne
clc
repnz
nop
nop
jae
add
mov
lcall
in
leave
nop
jmp
add
add
jmp
pop
add
add
nop
nop
jae
mov
add
dec
data16
jns
popf
add
clc
repnz
nop
nop
jae
xor
add
add
sub
xchg
mov
clc
repnz
nop
nop
jae
test
xor
pop
add
add
pop
xorl
nop
push
mov
leave
nop
jmp
add
add
add
neg
fistpl
push
mov
xchg
ret
xor
add
add
push
pop
or
clc
repnz
nop
nop
jae
adc
add
add
dec
push
clc
repnz
nop
nop
jae
jg
add
js
add
add
lds
inc
loopne
mov
xchg
ret
js
add
bound
test
adc
jge
movsl
clc
repnz
nop
nop
jae
in
push
add
sub
cli
xchg
call
nop
push
mov
leave
nop
jmp
jmp
add
out
out
add
stos
clc
repnz
nop
nop
jae
mov
dec
add
add
adc
lds
clc
repnz
nop
nop
jae
out
add
jmp
dec
add
adc
clc
repnz
nop
nop
jae
fadds
add
arpl
test
push
bound
push
sub
repnz
nop
nop
jae
insb
mov
add
adc
call
mov
push
mov
xchg
ret
add
ret
movsb
add
inc
push
mov
add
testl
out
fxch
sub
sbb
sar
test
add
clc
repnz
nop
nop
jae
fbstp
add
popf
adc
in
test
repnz
nop
nop
jae
fmuls
mov
pop
sbb
push
mov
xchg
ret
sahf
fistpll
adc
push
clc
repnz
nop
nop
jae
mov
add
lds
push
dec
test
mov
dec
push
mov
xchg
ret
add
sub
jne
clc
repnz
nop
nop
jae
add
mov
add
add
nop
jmp
jecxz
push
add
jle
inc
mov
inc
add
add
mov
xchg
pusha
clc
repnz
nop
nop
jae
arpl
arpl
jg
add
sahf
mov
jmp
nop
nop
jae
insb
call
add
add
push
inc
add
add
add
mov
add
popf
add
add
mov
clc
repnz
nop
nop
jae
fadds
add
ret
jns
inc
fistpl
push
mov
xchg
ret
test
add
add
std
sub
add
add
clc
repnz
nop
nop
jae
dec
fistps
add
test
add
add
add
push
mov
xchg
ret
fwait
adc
add
add
data16
pop
insb
add
loopne
clc
repnz
nop
nop
jae
pushw
add
js
insl
cld
mov
pop
test
push
mov
xchg
ret
out
cwtl
call
movsb
popf
adc
add
add
add
rclb
call
in
leave
nop
jmp
in
sbbl
pop
insl
pop
push
mov
xchg
ret
add
aad
add
add
add
jmp
inc
clc
repnz
nop
nop
jae
add
movsb
adc
dec
ret
add
xchg
fwait
push
mov
xchg
ret
fwait
add
add
cmp
cwtl
jg
add
jbe
mov
repnz
nop
nop
jae
add
add
jecxz
push
clc
repnz
nop
nop
jae
test
add
add
add
pop
data16
push
mov
xchg
ret
test
jmp
pop
mov
insb
push
sub
pop
nop
push
mov
leave
nop
jmp
data16
mov
add
pop
mov
add
nop
push
mov
leave
nop
jmp
filds
insl
add
jecxz
roll
nop
nop
jae
mov
js
data16
in
add
add
clc
repnz
nop
nop
jae
add
add
mov
sbb
mov
clc
repnz
nop
nop
jae
pop
rolb
add
test
nop
nop
jae
add
xor
and
data16
push
mov
leave
nop
jmp
add
addl
call
add
add
add
ret
and
clc
repnz
nop
nop
jae
add
add
add
add
add
mov
in
leave
nop
jmp
sbb
mov
add
adc
cwtl
ret
cmp
js
add
clc
repnz
nop
nop
jae
add
add
mov
clc
repnz
nop
nop
jae
add
pop
add
xor
test
nop
nop
jae
adc
add
js
add
cmpsb
adc
call
clc
repnz
nop
nop
jae
add
dec
add
arpl
rolb
pusha
add
add
rcrl
push
mov
leave
nop
jmp
in
insb
call
add
fbstp
pause
push
mov
leave
nop
jmp
add
add
add
add
mov
leave
pop
clc
repnz
nop
nop
jae
add
push
sbb
call
add
loopne
clc
repnz
nop
nop
jae
push
adc
jmp
jne
add
or
add
fwait
std
add
xchg
add
push
add
clc
repnz
nop
nop
jae
add
add
add
add
sub
repz
adc
jmp
in
add
add
or
add
add
add
enter
add
imul
add
mov
add
mov
pop
hlt
inc
add
add
std
shr
clc
repnz
nop
nop
jae
add
test
add
movsb
add
test
inc
add
test
xor
xor
add
mov
or
add
add
add
adc
add
test
mov
mov
clc
repnz
nop
nop
jae
add
add
in
add
pop
add
jb
add
clc
repnz
nop
nop
jae
repz
add
test
adc
mov
jae
pop
clc
repnz
nop
nop
jae
add
mov
mov
and
add
nop
jmp
push
movsb
rolb
add
add
and
push
mov
xchg
ret
add
add
adc
add
insb
les
add
add
xchg
fistpl
push
mov
xchg
ret
dec
cld
arpl
cwtl
add
adc
fwait
add
mov
cld
nop
nop
jae
mov
insl
mov
data16
in
add
nop
push
mov
leave
nop
jmp
cld
into
add
add
dec
insl
xor
repz
clc
repnz
nop
nop
jae
add
add
add
add
add
add
mov
xchg
ret
pop
add
mov
xor
add
add
push
sbb
repnz
nop
nop
jae
add
fdivs
popf
lds
add
add
pop
add
push
mov
xchg
ret
add
pop
mov
add
add
add
mov
add
addl
fwait
add
add
rolb
add
xchg
add
add
jmp
cld
nop
nop
jae
add
add
add
aad
ret
gs
push
mov
xchg
ret
sbb
push
mov
popf
add
stos
push
push
mov
xchg
ret
add
add
pop
add
into
add
ja
nop
push
mov
leave
nop
jmp
jecxz
add
add
mov
lcall
push
mov
leave
nop
jmp
repz
mov
add
clc
repnz
nop
nop
jae
fwait
dec
jns
sub
add
add
mov
bound
xchg
ret
popf
add
mov
add
insl
adc
push
push
mov
xchg
ret
jecxz
fdivrs
add
fmuls
adc
push
mov
leave
nop
jmp
and
into
add
insb
fadds
out
add
sub
loope
inc
add
add
add
add
movsb
pop
add
mov
cld
push
mov
xchg
ret
test
add
add
add
push
clc
repnz
nop
nop
jae
add
push
adc
add
add
push
clc
repnz
nop
nop
jae
filds
in
test
rolb
dec
cmpsb
mov
push
mov
xchg
ret
add
add
push
add
fwait
aad
sar
jne
clc
repnz
nop
nop
jae
add
add
add
ds
in
add
add
clc
repnz
nop
nop
jae
repz
add
into
inc
repnz
jb
nop
push
mov
leave
nop
jmp
add
add
push
mov
xchg
ret
ret
add
add
add
testl
add
repnz
nop
nop
jae
add
add
add
inc
add
add
add
call
inc
add
add
cmp
ret
and
add
cmp
push
mov
xchg
ret
add
cwtl
sahf
add
add
add
mov
xchg
ret
add
in
add
add
mov
out
repz
fistpl
push
mov
xchg
ret
aad
xor
fwait
popf
add
mov
xchg
mov
nop
push
mov
leave
nop
jmp
mov
call
je
std
shr
clc
repnz
nop
nop
jae
or
std
add
repz
fwait
add
mov
xchg
ret
xor
add
add
add
bound
add
add
add
clc
repnz
nop
nop
jae
repz
adc
movsb
add
je
js
repnz
nop
nop
jae
add
pop
add
jne
clc
repnz
nop
nop
jae
fwait
add
test
add
cld
nop
nop
jae
adc
std
data16
into
fadds
add
mov
jne
inc
add
ret
out
add
mov
add
out
scas
enter
in
leave
nop
jmp
xor
out
test
add
mov
add
push
mov
xchg
ret
out
mov
jns
add
mov
add
push
push
mov
xchg
ret
add
add
add
add
clc
repnz
nop
nop
jae
in
out
cwtl
test
add
punpcklbw
and
cmp
ret
add
add
add
add
add
jb
testl
nop
push
mov
leave
nop
jmp
dec
test
add
and
fistpl
nop
push
mov
leave
nop
jmp
mov
aad
mov
popf
cld
sub
repnz
nop
nop
jae
add
arpl
add
adc
add
clc
repnz
nop
nop
jae
xchg
add
xchg
xchg
add
lea
cld
nop
nop
jae
cmp
add
add
sbb
cld
nop
nop
jae
add
add
add
cmpsl
fwait
nop
push
mov
leave
nop
jmp
into
adc
pop
add
add
cmp
fnstcw
add
add
add
add
push
push
mov
xchg
ret
add
insl
dec
add
mov
mov
repnz
nop
nop
jae
add
add
clc
add
nop
jmp
mov
repz
mov
clc
repnz
nop
nop
jae
std
add
arpl
or
mov
clc
repnz
nop
nop
jae
add
add
add
mov
dec
sub
repnz
nop
nop
jae
mov
push
mov
add
add
shlb
in
leave
nop
jmp
test
into
add
and
add
add
jns
clc
repnz
nop
nop
jae
fwait
add
fwait
add
push
push
mov
clc
repnz
nop
nop
jae
test
jmp
add
add
shrb
repnz
nop
nop
jae
adc
popf
add
mov
push
mov
xchg
ret
jg
lds
add
fwait
and
pop
add
filds
nop
nop
jae
add
add
call
add
add
clc
repnz
nop
nop
jae
sbb
fadds
test
cld
nop
nop
jae
add
add
add
add
sbb
jne
nop
push
mov
leave
nop
jmp
xor
mov
pop
fistpl
clc
repnz
nop
nop
jae
popf
add
fwait
add
add
push
mov
xchg
ret
jns
xor
adc
add
sub
cmpsl
mov
push
mov
xchg
ret
add
mov
add
push
mov
xchg
ret
test
jns
into
and
popf
adc
and
mov
clc
repnz
nop
nop
jae
push
sahf
push
add
call
add
jne
clc
repnz
nop
nop
jae
add
insl
add
clc
repnz
nop
nop
jae
add
mov
test
add
and
or
repnz
nop
nop
jae
test
add
add
roll
clc
clc
repnz
nop
nop
jae
add
add
add
dec
test
out
inc
mov
clc
repnz
nop
nop
jae
add
add
add
add
sbbl
nop
jmp
add
repz
cmp
and
mov
mov
push
mov
xchg
ret
test
add
adc
popf
popf
fiadds
test
cld
nop
nop
jae
popf
add
arpl
cmpl
nop
jae
add
add
dec
add
add
repnz
nop
nop
jae
data16
insl
add
test
std
push
test
push
clc
repnz
nop
nop
jae
add
mov
add
clc
repnz
nop
nop
jae
mov
add
test
into
add
add
adc
repnz
nop
nop
jae
dec
mov
rep
add
fwait
add
nop
push
mov
leave
nop
jmp
rol
add
add
and
add
in
leave
nop
jmp
add
sub
add
add
clc
repnz
nop
nop
jae
add
mov
notl
mov
xchg
ret
add
test
popf
filds
add
vpandn
in
leave
nop
jmp
test
add
add
insl
add
cld
nop
nop
jae
call
add
jns
in
js
mov
push
mov
xchg
ret
add
fsubrs
cwtl
mov
ret
clc
repnz
nop
nop
jae
add
test
add
add
jp
subl
clc
repnz
nop
nop
jae
add
mov
add
arpl
clc
repnz
nop
nop
jae
add
dec
add
insl
add
std
incl
mov
add
add
dec
dec
add
add
add
add
clc
repnz
nop
nop
jae
cld
add
jmp
add
cmp
add
nop
nop
jae
add
add
mov
add
pop
xor
nop
push
mov
leave
nop
jmp
movsb
add
dec
js
sbb
add
int3
add
add
add
add
movsb
stos
add
xchg
sub
std
insl
pop
push
cmp
cmc
sbb
andl
in
leave
nop
jmp
add
add
adc
xor
repnz
nop
nop
jae
adc
fadds
add
addl
add
cmp
cld
nop
nop
jae
add
add
cmp
cmpsb
dec
add
add
jmp
add
repnz
nop
nop
jae
filds
push
in
into
cmp
int3
add
clc
repnz
nop
nop
jae
mov
add
push
mov
dec
xor
add
inc
add
add
fstpl
adc
add
repnz
nop
nop
jae
cld
add
into
xor
push
sub
add
add
nop
nop
jae
add
add
addl
test
xor
sub
add
add
push
clc
repnz
nop
nop
jae
jg
add
add
xor
in
sub
inc
adc
add
nop
jmp
dec
std
adc
and
mov
arpl
repnz
nop
nop
jae
adc
and
mov
push
push
mov
xchg
ret
data16
popf
jecxz
add
clc
repnz
nop
nop
jae
aad
cwtl
xor
insb
rolb
pop
lret
pop
push
mov
xchg
ret
jecxz
add
in
add
popf
add
xchg
nop
push
mov
leave
nop
jmp
add
add
test
imul
clc
repnz
nop
nop
jae
insl
add
add
jecxz
in
popf
into
add
add
repnz
nop
nop
jae
add
fwait
add
cld
call
push
mov
leave
nop
jmp
add
add
pop
push
mov
push
xlat
call
clc
repnz
nop
nop
jae
xor
add
sub
add
leave
pusha
clc
repnz
nop
nop
jae
mov
fists
fwait
in
add
cld
js
push
nop
push
mov
leave
nop
jmp
add
fwait
push
arpl
ljmp
pop
inc
add
bound
add
jecxz
add
add
mov
add
cli
jns
out
and
inc
jmp
push
out
outsb
mov
add
clc
repnz
nop
nop
jae
xor
add
mov
add
add
jl
call
test
clc
repnz
nop
nop
jae
add
add
test
test
mov
nop
push
mov
leave
nop
jmp
test
add
add
cwtl
xor
add
xchg
fdivs
dec
bound
add
jns
add
cmp
outsb
add
add
or
mov
clc
repnz
nop
nop
jae
data16
add
jg
cld
test
add
clc
repnz
nop
nop
jae
add
popf
add
test
add
imul
cld
nop
nop
jae
add
add
add
add
push
mov
xchg
ret
add
mov
add
add
pop
call
nop
push
mov
leave
nop
jmp
add
mov
xchg
mov
pusha
clc
repnz
nop
nop
jae
add
mov
add
add
add
push
loopne
mov
xchg
ret
push
mov
sbb
in
fmuls
mov
call
nop
jae
mov
add
xor
jns
add
nop
push
mov
leave
nop
jmp
add
add
mov
add
add
mov
clc
repnz
nop
nop
jae
dec
fcoms
add
add
add
pop
add
clc
repnz
nop
nop
jae
or
or
add
add
xor
nop
push
mov
leave
nop
jmp
cmp
add
fistpl
clc
repnz
nop
nop
jae
pop
in
add
pop
mov
call
clc
repnz
nop
nop
jae
fistps
fistps
xor
add
add
aaa
add
clc
repnz
nop
nop
jae
add
add
mov
add
adc
mov
xchg
ret
add
std
movsb
movsb
repz
insb
popf
dec
mov
add
mov
clc
repnz
nop
nop
jae
add
pop
in
add
add
lds
xor
pop
dec
nop
push
mov
leave
nop
jmp
add
add
test
cwtl
adc
add
adc
nop
nop
jae
fadds
add
cwtl
or
fwait
mov
fistpl
push
mov
xchg
ret
dec
filds
add
fists
test
aad
push
clc
repnz
nop
nop
jae
js
repz
bound
aam
mov
clc
repnz
nop
nop
jae
add
cwtl
add
add
add
test
nop
push
mov
leave
nop
jmp
call
xchg
cwtl
add
xor
pop
mov
push
mov
xchg
ret
add
rolb
js
popa
mov
clc
repnz
nop
nop
jae
add
or
add
add
mov
repnz
nop
nop
jae
add
add
pop
add
data16
ss
add
add
fld1
push
mov
xchg
ret
subl
dec
test
xor
and
clc
repnz
nop
nop
jae
add
push
mov
add
cmp
sub
push
mov
xchg
ret
dec
add
add
add
add
cmp
in
add
sbb
add
mov
add
add
mov
lret
push
je
clc
repnz
nop
nop
jae
add
sbb
fcomps
jne
nop
push
mov
leave
nop
jmp
add
mov
jg
test
xchg
popa
mov
clc
repnz
nop
nop
jae
add
jmp
adc
mov
add
add
push
nop
push
mov
leave
nop
jmp
insl
adc
cwtl
jmp
add
fadds
add
clc
repnz
nop
nop
jae
fcomps
add
add
fwait
add
push
mov
xchg
ret
add
or
add
add
add
add
push
mov
leave
nop
jmp
add
add
into
add
sbb
repnz
nop
nop
jae
into
add
add
stos
clc
push
mov
xchg
ret
add
add
add
dec
dec
add
sbb
push
mov
xchg
ret
add
addl
add
repz
push
mov
xchg
ret
out
mov
add
or
add
push
push
mov
xchg
ret
call
mov
mov
add
add
mov
clc
repnz
nop
nop
jae
mov
add
out
clc
repnz
nop
nop
jae
jmp
add
add
andl
in
leave
nop
jmp
pop
adc
add
add
add
mov
sbb
add
push
mov
xchg
ret
add
xor
xchg
push
mov
xchg
ret
adc
add
add
test
add
push
push
mov
xchg
ret
mov
popf
add
popf
adc
mov
push
push
clc
repnz
nop
nop
jae
into
addl
std
cmp
in
add
stos
jne
clc
repnz
nop
nop
jae
add
repz
add
sub
push
mov
add
incl
mov
rolb
bound
add
sbb
inc
call
nop
jae
add
add
add
xor
repnz
nop
nop
jae
add
dec
push
adc
ret
mov
cld
nop
nop
jae
add
fwait
mov
adc
repz
add
std
pop
nop
push
mov
leave
nop
jmp
cld
std
add
insb
data16
add
push
sub
lahf
call
clc
repnz
nop
nop
jae
add
add
std
add
loop
push
sub
in
leave
nop
jmp
std
out
xor
mov
ret
cmpsl
test
nop
push
mov
leave
nop
jmp
fwait
js
adc
add
cld
nop
nop
jae
adc
test
call
stos
lods
push
mov
xchg
ret
add
pop
mov
test
add
mov
or
out
jmp
out
clc
repnz
nop
nop
jae
jmp
test
dec
add
push
nop
push
mov
leave
nop
jmp
add
arpl
mov
repnz
nop
nop
jae
std
adc
add
pop
fwait
repz
fmuls
mov
clc
repnz
nop
nop
jae
test
add
dec
pop
push
push
mov
xchg
ret
add
add
insl
add
test
xor
dec
clc
dec
inc
clc
repnz
nop
nop
jae
data16
mov
insb
add
mov
xchg
ret
add
insl
add
add
add
fbstp
cld
nop
nop
jae
add
out
add
add
fwait
scas
pop
dec
nop
push
mov
leave
nop
jmp
mov
add
add
add
add
nop
jmp
add
adc
call
test
repnz
nop
nop
jae
add
lds
add
add
xchg
xor
clc
repnz
nop
nop
jae
add
push
add
add
add
add
nop
push
mov
leave
nop
jmp
xchg
fwait
add
xor
clc
repnz
nop
nop
jae
jns
add
add
adc
mov
push
mov
xchg
ret
add
add
add
xor
out
fisubrl
call
clc
repnz
nop
nop
jae
filds
movsb
mov
fwait
jecxz
test
mov
clc
repnz
nop
nop
jae
dec
add
add
les
push
mov
xchg
ret
fwait
mov
js
mov
add
jne
nop
push
mov
leave
nop
jmp
add
std
jmp
xchg
popf
lea
clc
repnz
nop
nop
jae
js
mov
mov
add
xchg
and
mov
leave
nop
jmp
add
call
mov
add
inc
add
fcoms
add
test
or
lcall
nop
nop
jae
test
test
add
test
bound
fadd
add
clc
repnz
nop
nop
jae
xor
adc
in
add
mov
shrb
mov
leave
nop
jmp
add
mov
fcomp
mov
sbb
ljmp
cld
nop
nop
jae
mov
mov
xchg
add
fld1
nop
push
mov
leave
nop
jmp
cmp
mov
add
add
lcall
nop
nop
jae
add
call
mov
adc
mov
sub
repnz
nop
nop
jae
mov
add
add
mov
clc
repnz
nop
nop
jae
add
dec
add
test
jbe
dec
push
clc
repnz
nop
nop
jae
sub
movsb
add
data16
xchg
clc
repnz
nop
nop
jae
add
fwait
add
add
or
mov
xchg
ret
dec
test
mov
add
add
mov
clc
repnz
nop
nop
jae
cld
add
add
jmp
cmp
pop
push
mov
xchg
ret
xor
jns
insb
add
add
out
add
rclb
jge
inc
add
mov
mov
add
nop
push
mov
leave
nop
jmp
add
dec
call
add
add
add
add
add
add
clc
repnz
nop
nop
jae
insb
add
add
adc
add
repnz
or
cld
nop
nop
jae
xchg
out
js
in
insl
js
insl
jecxz
dec
mov
clc
repnz
nop
nop
jae
popf
or
add
add
call
nop
nop
jae
sub
add
jg
mov
xchg
jnp
add
add
repnz
nop
nop
jae
bound
jecxz
dec
std
add
jmp
ret
fildll
add
add
insb
add
mov
loop
push
mov
xchg
ret
add
add
pushw
or
pusha
mov
les
mov
repnz
nop
nop
jae
test
add
test
add
mov
xchg
ret
xor
add
pop
ret
add
pop
test
mov
clc
repnz
nop
nop
jae
add
add
add
filds
ret
pop
nop
push
mov
leave
nop
jmp
sbb
add
add
add
dec
movzwl
clc
repnz
nop
nop
jae
add
sahf
add
jne
push
mov
xchg
ret
mov
cld
push
test
ret
test
push
mov
xchg
ret
jg
sbb
add
adcl
aad
jnp
test
or
add
nop
jmp
or
cwtl
pusha
clc
repnz
nop
nop
jae
add
popf
add
dec
add
js
and
add
add
cmp
push
mov
xchg
ret
add
cwtl
add
adc
fld1
nop
push
mov
leave
nop
jmp
test
add
add
or
repz
nop
push
mov
leave
nop
jmp
add
adc
insl
sbb
movzwl
clc
repnz
nop
nop
jae
add
add
mov
clc
repnz
nop
nop
jae
add
fadds
push
sbb
orl
and
incl
add
add
push
mov
xchg
ret
add
add
popf
or
sub
add
loopne
inc
add
cmp
mov
add
add
movsl
cld
nop
push
mov
leave
nop
jmp
adc
aad
add
jecxz
add
insl
fistps
cld
nop
nop
jae
add
add
in
fadds
adc
sub
clc
repnz
nop
nop
jae
jmp
js
pop
sahf
add
add
lret
add
nop
push
mov
leave
nop
jmp
jg
fwait
jg
xor
add
stos
mov
dec
cmp
push
mov
leave
nop
jmp
push
add
in
add
repnz
nop
nop
jae
insl
push
mov
pop
fwait
adc
push
and
stc
mov
xchg
ret
pop
cwtl
cld
test
add
add
add
add
iret
add
nop
push
mov
leave
nop
jmp
mov
mov
out
movb
cld
nop
nop
jae
call
add
add
add
mov
mov
clc
repnz
nop
nop
jae
add
add
addl
subl
mov
add
outsl
nop
push
mov
leave
nop
jmp
pop
add
adc
add
pop
push
mov
nop
push
mov
leave
nop
jmp
in
out
test
test
adc
arpl
add
cld
nop
nop
jae
cld
insb
add
dec
mov
adc
je
nop
push
mov
leave
nop
jmp
add
test
add
clc
repnz
nop
nop
jae
add
add
add
mov
xchg
ret
add
cld
add
test
add
add
add
pop
push
mov
xchg
ret
bound
add
add
add
add
movsl
mov
clc
repnz
nop
nop
jae
add
push
out
add
mov
clc
repnz
nop
nop
jae
cwtl
add
cmp
jmp
add
add
push
push
mov
xchg
ret
add
fwait
or
add
mov
repnz
nop
nop
jae
fwait
add
bound
add
js
mov
add
clc
repnz
nop
nop
jae
add
cmp
add
mov
clc
repnz
nop
nop
jae
add
add
test
lock
xor
clc
repnz
nop
nop
jae
cld
add
dec
aad
movsb
cld
popf
pushl
nop
push
mov
leave
nop
jmp
insl
add
add
add
push
nop
push
mov
leave
nop
jmp
add
jecxz
add
mov
pop
push
mov
add
xchg
mov
pop
add
add
imul
add
push
clc
add
das
jmp
adc
sbb
jmp
test
cwtl
add
add
adc
add
cwtl
fmull
cld
nop
nop
jae
adc
add
ret
test
add
and
test
add
repnz
nop
nop
jae
cwtl
mov
fwait
ret
pop
push
mov
xchg
ret
add
call
add
sub
test
cmpsb
mov
clc
repnz
nop
nop
jae
mov
mov
add
call
or
repnz
nop
nop
jae
add
add
repz
and
push
nop
push
mov
leave
nop
jmp
repz
add
add
rorb
add
mov
cld
nop
nop
jae
add
rorb
mov
fld1
clc
repnz
nop
nop
jae
push
mov
add
test
std
test
xor
nop
push
mov
leave
nop
jmp
sarb
add
gs
clc
repnz
nop
nop
jae
add
add
dec
add
popf
xor
mov
clc
repnz
nop
nop
jae
add
arpl
add
clc
repnz
nop
nop
jae
add
add
add
dec
push
sub
test
idiv
clc
repnz
nop
nop
jae
cld
cmp
add
nop
push
mov
leave
nop
jmp
std
jg
test
adc
add
test
mov
nop
push
mov
leave
nop
jmp
add
add
adc
fwait
jmp
add
lea
mov
leave
nop
jmp
add
add
dec
rorl
dec
pop
inc
add
add
add
add
mov
clc
repnz
nop
nop
jae
add
out
mov
jg
call
clc
repnz
nop
nop
jae
add
add
add
cld
nop
nop
jae
add
add
add
in
fiadds
add
add
lods
clc
repnz
nop
nop
jae
add
jns
mov
add
xchg
mov
clc
repnz
nop
nop
jae
mov
add
push
mov
xchg
ret
add
movsb
add
repz
push
add
add
add
push
jne
clc
repnz
nop
nop
jae
add
add
jne
jo
mov
xchg
ret
adc
mov
add
add
fwait
add
add
dec
nop
push
mov
leave
nop
jmp
js
add
in
add
add
into
movsb
xchg
xor
rcrb
lea
clc
repnz
nop
nop
jae
test
pop
add
add
add
add
fisttpll
cld
nop
nop
jae
movsb
aad
add
jns
test
add
fistpl
push
mov
xchg
ret
and
js
add
repz
call
inc
add
lds
cld
in
repz
in
mov
notl
clc
repnz
nop
nop
jae
into
popf
add
add
jmp
sub
test
add
clc
repnz
nop
nop
jae
mov
aad
out
add
add
popf
add
outsb
or
add
or
add
add
mov
call
clc
repnz
nop
nop
jae
mov
add
rcll
repnz
nop
nop
jae
add
arpl
add
add
fcoml
add
add
add
aad
add
add
inc
or
repnz
nop
nop
jae
add
add
add
in
data16
lret
icebp
clc
repnz
nop
nop
jae
push
add
sub
arpl
mov
sub
clc
repnz
nop
nop
jae
adc
popf
aad
pop
xor
xor
into
call
incl
add
repnz
nop
nop
jae
or
ffreep
or
add
push
push
mov
xchg
ret
mov
mov
add
dec
add
pop
add
clc
repnz
nop
nop
jae
add
mov
push
jg
xchg
popf
add
mov
cld
nop
nop
jae
test
add
add
test
add
pop
clc
repnz
nop
nop
jae
add
add
jmp
pop
arpl
pop
add
and
data16
pop
clc
repnz
nop
nop
jae
test
push
jns
sub
test
repnz
nop
nop
jae
cmp
mov
add
add
mov
xchg
ret
insl
add
add
add
mov
notb
add
xor
test
sbb
add
mov
mov
add
add
cltd
pop
push
mov
xchg
ret
std
dec
sbb
add
mov
in
daa
push
call
repz
sbb
pop
cmp
dec
sub
nop
jmp
mov
dec
cmp
repz
orl
mov
lcall
add
pop
sbb
or
and
mov
mov
push
clc
repnz
nop
nop
jae
add
jmp
mov
or
mov
and
and
xor
xor
rolb
add
les
push
mov
xchg
ret
fwait
add
add
xor
pushf
rclb
push
mov
leave
nop
jmp
orl
dec
cmp
add
and
nop
sub
add
repnz
nop
nop
jae
add
mov
mov
clc
repnz
nop
nop
jae
xor
add
add
call
jl
add
jae
notb
mov
test
rcll
mov
xchg
ret
mov
add
add
add
jg
mov
clc
repnz
nop
nop
jae
add
pop
xchg
adc
test
je
clc
repnz
nop
nop
jae
sahf
test
and
add
test
nop
nop
jae
call
fwait
test
mov
mov
call
clc
repnz
nop
nop
jae
add
into
add
add
add
push
mov
xchg
ret
xor
add
test
inc
clc
repnz
nop
nop
jae
cwtl
add
pop
mov
adc
add
add
add
dec
mov
nop
push
mov
leave
nop
jmp
mov
add
add
pop
pop
call
nop
jmp
add
add
add
nop
push
mov
leave
nop
jmp
add
in
mov
add
mov
nop
nop
jae
cld
add
add
ror
mov
nop
push
mov
leave
nop
jmp
mov
add
jne
nop
push
mov
leave
nop
jmp
mov
test
add
aad
add
add
nop
nop
jae
push
out
add
mov
mov
sbb
in
inc
clc
repnz
nop
nop
jae
add
add
rolb
js
add
add
push
push
mov
xchg
ret
push
mov
add
popf
add
push
clc
repnz
nop
nop
jae
push
fwait
add
addl
mov
xchg
add
mov
leave
nop
jmp
add
mov
adc
sbbb
adc
ja
add
add
jecxz
and
sub
pushf
and
nop
nop
jae
arpl
test
mov
mov
add
clc
repnz
nop
nop
jae
pop
add
add
adc
mov
aaa
nop
push
mov
leave
nop
jmp
mov
fadds
add
add
xchg
xchg
fwait
clc
repnz
nop
nop
jae
adc
mov
add
add
rcll
in
ss
add
mov
add
jo
jl
lret
je
popf
push
clc
repnz
nop
nop
jae
lds
jmp
adc
add
fcompl
mov
xchg
ret
add
add
add
adc
add
add
add
push
clc
repnz
nop
nop
jae
insl
add
push
add
add
adc
add
repnz
nop
nop
jae
add
mov
push
fwait
add
clc
repnz
nop
nop
jae
add
out
add
jecxz
filds
add
mov
leave
nop
jmp
movsb
mov
xchg
push
clc
repnz
nop
nop
jae
mov
lds
add
dec
add
call
nop
jmp
xor
test
std
ffree
clc
repnz
nop
nop
jae
xor
test
jmp
add
xor
hlt
sbb
clc
repnz
nop
nop
jae
test
add
mov
ret
push
mov
pusha
xchg
add
add
xorl
daa
add
add
sub
push
jecxz
add
add
add
mov
xchg
ret
add
add
add
arpl
dec
push
clc
repnz
nop
nop
jae
adc
push
mov
lret
clc
repnz
nop
nop
jae
mov
fadds
add
test
nop
or
mov
xchg
ret
std
mov
add
into
ret
popf
sbb
nop
nop
jae
shlb
mov
pop
dec
mov
push
mov
xchg
ret
in
add
movsb
add
fwait
add
jmp
insb
lahf
fld1
clc
repnz
nop
nop
jae
aad
fdivrs
mov
add
into
insl
fildl
jne
clc
repnz
nop
nop
jae
insb
sub
out
add
add
in
dec
or
test
repnz
nop
nop
jae
or
add
add
leave
call
nop
jmp
add
add
add
pop
call
cld
nop
nop
jae
add
or
xor
xor
clc
repnz
nop
nop
jae
add
push
dec
fadds
mov
mulb
push
sub
nop
jmp
into
pop
add
js
mov
mov
cld
nop
nop
jae
dec
mov
into
pop
mov
mov
insl
add
adc
add
clc
repnz
nop
nop
jae
repz
fwait
in
add
std
ror
push
mov
xchg
ret
mov
adc
add
sub
jae
push
mov
leave
nop
jmp
add
add
fwait
orl
clc
repnz
nop
nop
jae
add
lds
mov
cltd
add
clc
repnz
nop
nop
jae
add
add
mov
mov
clc
repnz
nop
nop
jae
cld
insb
sub
shl
add
push
mov
xchg
ret
insb
insb
sbb
arpl
insb
mov
loop
jmp
mov
jns
add
dec
cld
add
add
lea
nop
nop
jae
add
into
cld
cld
jecxz
add
add
jnp
jb
add
popf
dec
add
add
add
fists
data16
dec
xor
push
mov
xchg
ret
mov
lds
add
add
les
aaa
mov
add
lock
ret
add
bound
cwtl
cmp
jne
clc
repnz
nop
nop
jae
mov
add
test
clc
repnz
nop
nop
jae
jns
add
add
push
das
rep
clc
repnz
nop
nop
jae
cwtl
cmp
test
add
fwait
sbb
pop
mov
cld
nop
nop
jae
cwtl
cwtl
add
add
add
cld
ret
xor
clc
repnz
nop
nop
jae
and
add
add
add
add
clc
repnz
nop
nop
jae
add
adc
add
mov
inc
movsb
xchg
xor
push
mov
xchg
ret
add
in
test
mov
jmp
cld
nop
nop
jae
add
jg
add
add
sahf
std
adc
incl
adc
ret
add
add
js
mov
mov
jle
push
mov
xchg
ret
mov
out
out
add
adc
mov
xchg
ret
add
cld
add
add
aad
push
push
mov
xchg
ret
cwtl
add
std
add
add
sbb
adc
jecxz
iret
add
clc
repnz
nop
nop
jae
call
fadds
push
clc
repnz
nop
nop
jae
add
mov
add
sbb
add
pop
std
fwait
push
mov
xchg
ret
add
movsb
push
mov
add
xlat
add
clc
repnz
nop
nop
jae
popf
sub
add
pop
add
clc
repnz
nop
nop
jae
adc
add
add
popf
add
cmp
addb
cmp
ret
mov
dec
add
aad
mov
cmpsb
pop
loopne
stos
clc
repnz
nop
nop
jae
xchg
mov
rolb
fadds
dec
dec
add
aam
call
clc
repnz
nop
nop
jae
std
add
adc
add
jnp
push
sar
incl
add
adc
mov
fwait
jecxz
add
test
pop
fwait
clc
repnz
nop
nop
jae
sbb
add
add
mov
test
roll
repnz
nop
nop
jae
add
add
add
add
add
icebp
clc
repnz
nop
nop
jae
add
pop
test
out
fimull
rolb
add
add
mov
cld
nop
nop
jae
js
add
add
add
fwait
mov
lsl
push
mov
xchg
ret
fwait
add
call
xor
add
push
clc
repnz
nop
nop
jae
add
add
sbb
stc
clc
repnz
nop
nop
jae
addl
dec
add
sbb
mov
push
mov
xchg
ret
mov
fisttps
test
mov
add
fwait
clc
repnz
nop
nop
jae
add
xor
jo
fwait
add
clc
repnz
nop
nop
jae
insb
test
add
add
push
nop
push
mov
leave
nop
jmp
sbb
insl
pop
cwtl
in
mov
mov
leave
nop
jmp
add
popf
xchg
add
sub
cmp
nop
push
mov
leave
nop
jmp
and
sub
add
js
orb
inc
and
clc
repnz
nop
nop
jae
jns
ret
add
insl
pushl
clc
repnz
nop
nop
jae
and
add
add
add
arpl
jnp
test
jecxz
clc
repnz
nop
nop
jae
add
mov
add
std
cld
inc
cmp
repnz
nop
nop
jae
add
add
dec
push
add
fimuls
add
add
mov
nop
nop
jae
mov
add
add
call
clc
repnz
nop
nop
jae
add
or
push
aas
leave
clc
repnz
nop
nop
jae
mov
sbb
push
add
clc
repnz
nop
nop
jae
adc
lds
jae
xbegin
jae
add
mov
js
pop
insl
mov
add
add
push
mov
push
add
ret
adc
add
add
jg
add
call
cmp
nop
push
mov
leave
nop
jmp
sahf
add
into
add
sahf
clc
repnz
nop
nop
jae
add
cwtl
add
lds
add
aad
jecxz
rorl
repnz
nop
nop
jae
or
mov
arpl
sar
cld
nop
nop
jae
sahf
data16
cld
pop
xchg
add
jmp
hlt
push
push
mov
add
dec
add
cmpsl
add
mov
idivl
loopne
lret
sar
repnz
nop
nop
jae
push
aad
insb
add
add
xchg
fbstp
dec
jbe
add
xor
add
test
rolb
pop
clc
repnz
nop
nop
jae
adc
into
add
arpl
sahf
mov
jo
cld
nop
nop
jae
in
pop
cmp
bound
add
add
bnd
daa
idiv
clc
repnz
nop
nop
jae
mov
xor
adc
cld
fs
add
add
out
add
dec
filds
add
add
test
xchg
ret
bound
add
add
nop
push
mov
leave
nop
jmp
add
adc
adc
jns
pop
popf
popf
add
call
clc
repnz
nop
nop
jae
test
add
add
push
mov
leave
nop
jmp
sbb
xchg
add
add
mov
test
clc
repnz
nop
nop
jae
add
jecxz
in
add
mov
repnz
nop
nop
jae
and
pop
jns
add
mov
je
es
clc
repnz
nop
nop
jae
add
add
and
cld
add
and
push
inc
sbb
nop
jmp
cld
jns
fildll
fistpl
clc
repnz
nop
nop
jae
movsb
add
cmp
add
jg
xchg
dec
mov
clc
repnz
nop
nop
jae
rolb
cld
adc
adc
fwait
jmp
jl
and
or
and
or
add
orb
add
orps
push
pop
inc
add
add
jns
add
std
arpl
push
mov
xchg
ret
movsb
in
dec
add
add
add
add
add
pusha
add
add
dec
filds
rcr
add
add
xor
mov
sti
push
ss
fisubrs
stc
mov
aaa
pushf
clc
push
cmp
inc
mov
add
push
test
mov
jb
mov
cltd
push
or
add
add
subl
cmp
mov
mov
xchg
jne
leave
push
dec
mov
popf
loopw
sub
stos
pushf
dec
add
add
cmp
aam
sub
fndisi(8087
push
lahf
pop
popa
xchg
jae
mov
jb
pop
and
add
add
sub
xor
shll
mov
pop
and
add
add
mov
movsl
cmp
mov
inc
xorb
and
out
sarl
push
mov
bnd
xor
jno
int
mov
inc
adc
rol
mov
sub
add
add
adc
sub
aam
xor
add
bound
orl
insb
mov
daa
mov
inc
clc
mov
xor
jle
in
adc
jp
mov
inc
pop
sub
mov
sahf
scas
pushl
dec
lods
sub
add
add
popf
sub
add
add
pop
push
bsf
add
das
cltd
nop
jo
sub
sub
sbb
out
sbb
fwait
stos
psadbw
add
fcompl
inc
test
in
daa
ss
add
cmpsb
sbb
popf
ret
int3
cli
mov
xor
fistl
in
inc
shl
xchg
cwtl
je
add
lods
icebp
pop
push
pop
inc
mov
add
inc
add
add
add
add
add
add
fldl
sbb
jb
mov
rcl
push
inc
xor
decb
insb
mov
adc
xchg
and
add
add
add
insl
cwtl
loope
mov
add
pusha
mov
ss
outsb
cmp
sahf
sbb
jge
or
add
add
decl
mov
push
pop
jmp
push
in
gs
mov
fstl
add
pop
addr16
loop
mov
mov
push
lods
mov
ret
outsl
in
jb
jmp
mov
loope
pop
aam
gs
add
add
cmp
dec
mov
dec
add
add
ficompl
mov
xchg
jo
cmp
pop
cmc
imul
mov
mov
add
mov
pop
std
xchg
push
pop
mov
daa
mov
pop
arpl
or
add
add
shlb
mov
dec
add
add
arpl
mov
das
sub
popa
cli
or
add
mov
mov
scas
incl
andb
fwait
cmpsl
iret
xlat
aad
leave
inc
mov
add
mov
add
ror
cld
mov
mov
inc
sbb
iret
cmc
or
add
add
inc
add
add
jle
xchg
xor
aad
lret
ja
pop
repz
scas
xor
mov
fstl
mov
add
cmp
adc
add
add
cmpsb
pushf
pop
punpckhdq
sti
fdiv
xor
into
inc
mov
daa
mov
xchg
mov
pop
add
add
add
dec
add
add
inc
mov
out
in
push
pop
mov
add
add
mov
sub
and
into
ja
mov
cld
pop
orl
add
add
data16
or
idivb
pop
inc
into
fstps
cmp
addr16
or
lret
fnstsw
inc
mov
rorl
jno
xor
xor
negb
stc
ds
mov
cmp
scas
cld
jbe
xor
sbb
add
rcll
std
shl
add
add
hlt
pop
push
mov
add
add
jb
mov
arpl
push
test
data16
fucomip
cmp
in
jnp
fcmovnu
test
add
add
inc
add
add
and
mov
cli
xorl
and
and
mov
aad
imul
mov
lods
push
mov
mov
mov
stos
ret
movsl
or
iret
lret
hlt
push
xchg
mov
sub
cwtl
repz
subb
xchg
pop
xor
add
jmp
add
adc
inc
mov
movsl
idivl
je
lea
jno
push
stc
outsb
sarb
call
lret
dec
xorb
cmp
cld
sbb
xchg
ja
add
add
push
jg
mov
add
std
jl
cmpsl
aaa
sti
adc
cwtl
and
scas
mov
add
add
ja
pusha
add
add
test
adc
inc
rorb
add
outsl
sub
add
add
sbb
flds
lret
daa
aad
add
fmul
stos
mov
xor
shrl
add
addr16
jbe
push
adc
fidivrs
cmp
sti
add
sub
mov
mov
testl
jle
in
jmp
add
add
add
xlat
stc
pop
sbb
mov
mov
pop
enter
ss
xchg
or
lahf
arpl
arpl
add
add
pop
ret
jns
ljmp
cmp
repz
aam
ret
and
lock
mov
push
aas
sbb
test
sub
loop
add
add
aam
push
pop
add
loop
add
add
nop
inc
out
enter
fwait
rorl
in
mov
xchg
inc
push
mov
mov
repnz
inc
out
xchg
add
add
add
sub
mov
mov
cs
jecxz
negb
sub
add
add
add
je
test
sbb
mov
add
ret
popa
or
stos
mov
add
add
pop
ss
mov
mov
lret
sbb
ja
adc
test
das
add
add
add
call
mov
add
add
cs
leave
rorb
add
sbb
cmp
lahf
add
scas
push
mov
xchg
mov
xor
mov
jns
outsl
jge
test
mov
shll
pop
mov
add
push
jmp
mov
push
push
push
loop
sub
add
add
add
xchg
fistpl
mov
loopne
jmp
je
add
sub
mov
test
add
add
fiaddl
sbb
pop
mov
add
lds
shl
dec
iret
pop
inc
mov
add
add
mov
xor
mov
js
jmp
fbld
mov
xor
bound
inc
mov
subb
add
fistpl
rcll
aam
push
jo
jp
sub
add
add
scas
fldcw
in
mov
add
fimull
jns
in
xor
popa
adc
mov
addr16
call
sub
add
add
sub
mov
scas
arpl
repnz
jg
cmp
into
pop
fcompl
pop
pop
pop
sbb
add
add
add
out
lea
add
add
mov
push
out
lods
push
sub
push
push
fcompl
pop
sub
add
add
mov
add
mov
add
inc
mov
arpl
sarb
push
flds
add
add
popf
pop
add
les
cmp
neg
xchg
sbb
inc
mov
jg
add
add
push
sub
add
add
dec
arpl
jo
mov
sub
cmpl
adc
shr
push
stc
scas
mov
sub
add
add
xorb
and
add
in
fsubr
and
add
add
sub
jnp
dec
mov
orb
inc
into
dec
add
orb
add
cltd
push
mov
sbb
enter
sahf
mov
std
or
add
add
jae
gs
mov
mov
in
lock
stos
pop
push
roll
add
add
mov
dec
scas
cmp
mov
xchg
popa
and
cmp
aam
movsb
insb
mov
leave
pop
pop
subl
mov
nop
pushf
stos
das
sarl
out
repnz
add
add
subb
add
add
cmpsb
in
sub
xchg
jbe
inc
xchg
scas
xchg
push
imul
lods
out
dec
fimuls
mov
icebp
aam
out
jl
jno
sbb
push
stos
cwtl
sbb
add
add
mov
hlt
sub
arpl
negb
nop
pop
push
cmp
das
shrl
fs
cltd
int3
inc
dec
outsb
sub
add
add
pop
cmpsb
xchg
mov
imul
sti
xor
sbb
sti
testl
mov
mov
add
dec
add
add
push
and
aam
je
mov
jnp
test
mov
pop
scas
fiaddl
add
stc
leave
sbb
or
test
iret
int3
out
mov
sub
add
add
sub
add
add
xchg
imul
add
xor
imul
inc
mov
sub
stos
lcall
pop
cmp
out
cli
mov
push
xor
mov
into
movsl
cltd
pop
xchg
movsb
stc
fdivrl
jno
lock
jle
sub
add
add
in
mov
dec
add
add
jae
lret
xor
cli
push
pop
call
cwtl
cmp
cld
dec
add
add
ficoml
inc
mov
sahf
jns
xor
cmp
and
add
add
pop
add
sub
add
mov
ss
std
mov
push
pop
scas
into
mov
cmp
pop
data16
push
and
push
mov
in
mov
repnz
sbb
xor
fmull
pop
sub
in
ret
xor
add
add
outsb
in
cmp
outsb
jmp
mov
inc
imul
xchg
lcall
std
inc
pop
ja
sub
push
mov
and
or
testb
mov
pop
leave
xor
sub
add
add
push
shrb
add
add
sub
add
add
xor
jle
sbb
out
dec
mov
lret
stos
pop
adc
add
in
enter
mov
cld
pop
mov
fdivl
iret
or
add
add
fstpl
cmovbe
loopne
lret
xor
mov
enter
in
xchg
mov
cwtl
push
popf
shlb
add
mov
cli
cmc
clc
dec
lea
xchg
jl
jg
mov
je
mov
or
add
add
ret
xchg
lock
pop
jns
icebp
and
push
pop
push
push
daa
popa
aas
rcl
mov
cmpl
adc
in
decb
aas
xchg
jo
push
or
data16
leave
xchg
or
jae
test
lock
or
outsb
sarl
inc
cli
or
popf
cli
aad
fdiv
sub
mov
lea
faddl
sbb
mov
aaa
aam
xchg
xchg
jmp
mov
push
add
add
add
fcoml
ficoms
fldz
jae
cmp
std
stos
push
nop
and
icebp
cld
cltd
pop
pop
andl
mov
add
add
cmp
inc
push
fwait
push
sub
les
xchg
mov
add
add
aas
sub
xor
xchg
and
pop
mov
cmovbe
and
add
add
add
in
shll
xor
push
gs
arpl
and
xchg
outsb
imul
cltd
ljmp
add
add
sti
mov
stos
les
add
mov
jo
lock
add
and
pop
inc
mov
cmp
ret
test
pop
test
add
es
sub
pop
dec
add
add
mov
adc
add
iret
mov
pop
and
dec
mov
js
repnz
add
pop
mov
xor
cmp
push
push
mov
inc
aam
push
push
test
shll
es
mov
add
add
scas
ja
adc
add
pop
mov
in
cld
jg
dec
call
enter
popf
mov
lods
push
add
add
add
sbb
add
add
addr16
xor
popa
push
jne
xor
lods
dec
and
in
pop
lds
mov
add
inc
inc
and
xor
hlt
loopne
push
or
inc
repz
ret
cmp
add
or
inc
rcll
je
sub
test
push
hlt
dec
inc
mov
dec
add
add
jae
add
add
das
adc
inc
xchg
dec
adc
stc
fsubp
cmpsb
inc
dec
add
add
orb
imul
clc
xchg
pushf
decl
add
add
xchg
sub
add
add
popf
loop
shlb
mov
xchg
cmpsl
sti
push
mov
mov
int3
adc
lret
pusha
mov
push
mov
dec
fcomip
cli
loope
jle
and
jmp
addb
or
pop
mov
lods
jl
mov
cli
inc
add
add
cmp
scas
inc
mov
fnstcw
out
and
mov
push
lock
test
jnp
pop
out
inc
mov
inc
jge
adc
add
mov
add
or
add
add
xor
inc
ss
arpl
add
fnstcw
in
scas
cwtl
enter
imul
repnz
loop
jmp
gs
sahf
mov
dec
mov
mov
dec
int
jmp
ss
xor
rolb
leave
cmpsb
das
lret
loop
inc
add
add
xchg
mov
insl
lahf
mov
cltd
sbb
sti
xchg
lahf
movsb
lret
adc
enter
pop
mov
mov
out
mov
add
add
outsl
aas
push
xor
notb
adc
sub
mov
loopne
pusha
mov
mov
addr16
add
loope
and
and
add
push
imull
pop
add
out
into
jns
adc
add
add
jns
rcrb
inc
inc
mov
sub
incl
jg
lahf
das
xchg
pop
lock
add
push
pop
dec
jge
jg
pop
clc
lds
in
loope
inc
and
sub
add
add
mov
xchg
and
add
add
cmp
movsl
lods
imul
push
lds
push
adc
add
cmc
aad
mov
jno
das
aad
mov
inc
mov
xchg
jb
notb
push
daa
mov
inc
add
add
xchg
inc
dec
and
add
add
std
sub
fidivrl
xchg
arpl
jae
jb
outsl
hlt
mov
mov
arpl
inc
dec
pushf
bound
jmp
movsl
jns
or
add
push
out
or
xor
call
leave
xlat
add
mov
lock
andl
xchg
fcoml
fimull
iret
out
cmp
pop
fdivs
add
adc
mov
cwtl
scas
repz
cli
push
in
pop
push
push
inc
addr16
mov
rolb
jno
push
adc
into
cmp
xchg
lods
jno
push
pop
or
inc
mov
bound
add
push
xchg
pop
adc
xchg
sbb
mov
mov
aaa
inc
fs
sbb
add
add
jp
push
add
jne
call
sbb
dec
push
pop
imul
divb
add
add
pop
outsl
add
push
ja
or
incb
sub
sbb
in
jno
mov
mov
notl
xorl
in
stos
dec
test
mov
dec
add
add
mov
dec
int3
bnd
or
add
add
add
out
push
push
mov
and
add
add
fwait
inc
or
add
lret
mov
cltd
pop
jp
inc
mov
mov
xchg
mov
lods
xchg
or
data16
mov
aaa
ret
sub
pop
insl
loope
das
or
push
mov
add
add
les
xchg
inc
stc
xor
add
add
pop
cmp
push
or
add
add
add
add
add
ja
repz
and
add
add
mov
mov
daa
jecxz
mov
xchg
mov
mov
inc
inc
inc
scas
ds
sbb
jae
mov
imul
in
enter
xor
out
mov
fdivrs
ret
xlat
stos
fcomip
je
mov
lds
loopne
andl
add
add
dec
push
cmpsb
fistpll
mov
mov
jo
dec
add
scas
jbe
dec
fiaddl
add
add
add
push
arpl
mov
je
mov
repz
repz
xchg
int
lock
xchg
scas
push
lret
adc
add
add
add
add
das
sub
clc
push
inc
pop
enter
sbb
pusha
mov
fnstsw
add
add
or
in
add
add
mov
xor
popf
popf
jb
add
adc
mov
mov
pop
lock
lds
push
add
addr16
adc
add
sbb
add
add
add
jecxz
sub
pop
xchg
lds
mov
je
mov
les
dec
ret
mov
xor
mull
pop
jbe
sbb
sti
nop
cmp
xchg
mov
jle
cmp
sti
aas
or
pop
fsub
out
sbb
stc
lock
add
add
mov
mov
push
cmp
jbe
in
stc
jns
sbb
mov
add
add
es
mov
xor
cs
jge
sbb
pop
dec
mov
cmpsl
or
icebp
outsl
daa
xor
mov
or
add
add
xor
adc
aad
add
test
out
rorl
js
repz
outsb
hlt
jecxz
es
pop
jge
jmp
test
pusha
mov
or
sbb
add
add
add
add
pop
xlat
lock
add
add
leave
fiadds
push
insl
popa
cmp
mov
lret
mov
fadd
sahf
add
int3
mov
dec
test
int
mov
dec
push
jno
xlat
pop
adc
dec
add
add
fldenv
mov
and
cmpsb
xor
imul
mov
mov
mov
clc
cmp
push
and
add
add
mov
aas
mov
pushf
dec
mov
test
out
adc
cli
call
sbb
or
add
add
pop
scas
imul
ljmp
push
pop
int
mov
fstps
jb
cmpsl
into
movsl
xchg
das
pop
shlb
push
ja
ret
mov
lods
popf
filds
xchg
fwait
and
sub
dec
popf
lds
or
cmp
sub
lret
mov
xor
pop
mov
sub
jno
lcall
mov
insb
add
add
jno
fsubl
jmp
pop
mov
add
add
mov
lret
insb
mov
xlat
das
or
mov
xor
add
add
cmp
add
out
out
fisubl
add
add
mov
ret
call
inc
insb
mov
rcll
add
add
addr16
out
repz
lahf
mov
mov
add
mov
jne
fstl
sub
add
add
mov
cltd
out
lock
hlt
ret
pop
outsb
popa
cmpsl
and
cmpsl
mov
push
fnstcw
cwtl
push
fnsave
dec
stc
sub
in
lahf
cli
shrl
push
inc
mov
shlb
push
sbb
push
les
jno
pop
xlat
xor
dec
daa
cmp
sahf
icebp
and
add
add
lods
popf
lcall
add
add
lock
nop
mov
mov
scas
sbb
insl
test
fldl
call
cs
test
add
add
push
xchg
mov
hlt
xor
outsb
mov
mov
jle
push
jnp
std
cld
cs
es
pop
hlt
pop
scas
cmpl
cmc
adc
add
add
fisttpll
pop
mov
mov
inc
mov
in
out
xor
xlat
cmp
les
add
add
mov
out
cltd
adcb
aad
lea
inc
pop
imul
sbb
mov
jno
cld
lea
add
jb
jp
sahf
jmp
add
add
add
add
add
add
add
add
add
cmp
mov
into
jbe
jne
out
mov
add
xor
lea
xor
add
adc
mov
dec
stos
jnp
in
jle
test
mov
mov
shlb
pop
push
int
push
add
mov
xchg
gs
mov
andl
inc
jne
das
inc
mov
sub
xchg
ss
shll
mov
pop
mov
add
add
out
push
sbb
xlat
inc
mov
bnd
jge
sbb
jge
or
sti
test
add
add
add
add
cmp
loopne
xlat
sbb
into
pushf
js
fldcw
xor
ret
xchg
loopne
data16
jmp
scas
mov
orb
adc
cmp
lret
jae
popa
rolb
add
add
pop
mov
adc
mov
fsubs
add
add
arpl
out
push
pop
call
stos
add
sub
add
add
mov
mov
xor
dec
add
add
jno
and
sub
mov
add
add
add
add
xchg
sbb
sub
clc
pop
ret
xlat
xchg
jmp
jg
add
add
loopne
mov
jecxz
dec
and
jno
xor
pop
addr16
adc
ret
clc
cmpsb
pop
add
mov
add
inc
mov
cwtl
and
out
jg
aaa
out
stc
lahf
daa
bswap
fstps
add
add
adc
dec
pop
mov
or
adc
cmp
mov
lret
add
add
add
jne
mov
sub
add
add
sbb
sub
add
add
add
mov
xchg
xchg
mov
int3
and
mov
add
test
add
add
add
adc
adc
lds
mov
lret
das
leave
mov
in
or
mov
aam
pop
scas
ljmp
stc
dec
xchg
sub
lcall
add
negl
add
push
xchg
outsl
push
and
add
add
and
add
add
add
add
and
jo
movsb
inc
cmp
mov
sub
hlt
outsb
testl
in
dec
enter
add
add
xor
mov
sarl
lea
adc
mov
outsb
push
push
xchg
xabort
roll
push
lea
je
dec
fistl
or
add
add
sbb
sbb
lret
out
xchg
mov
popa
std
insb
add
add
mov
cltd
pop
xor
jnp
cmp
jo
in
cld
add
add
adc
mov
add
add
cmpl
pop
mov
add
add
popf
sbbb
dec
adc
mov
sub
add
add
xchg
movsl
adc
dec
add
add
lea
subb
dec
mov
addb
add
add
jae
sub
in
and
add
add
add
repz
fiaddl
pop
outsb
pusha
add
add
jg
and
fdivr
cs
add
in
mov
add
add
add
test
hlt
out
shlb
mov
push
xor
add
add
into
and
add
add
movsb
jb
les
insb
add
add
je
mov
sbb
nop
inc
insb
add
add
inc
filds
xor
xchg
nop
loope
lods
push
adc
mov
hlt
adc
cli
pop
cwtl
stos
mov
add
loope
fsubs
add
add
push
lds
stos
xchg
scas
pop
sbb
mov
mov
loope
jge
lods
adc
fwait
inc
mov
orl
add
add
add
mov
xor
jp
mov
inc
add
add
popf
mov
pop
xor
jae
aaa
cwtl
xlat
mov
mov
jo
pop
pop
jmp
jno
lea
fcomi
fildl
daa
les
clc
push
push
dec
mov
and
add
add
and
outsb
jmp
test
mov
add
add
pop
enter
inc
mov
jmp
xchg
popa
cmc
jno
into
push
lea
sub
add
add
pop
movsb
jno
mov
mov
in
fistpll
or
add
add
je
notl
sub
mov
add
stos
push
stos
insb
add
add
leave
iret
nop
mov
xor
sub
inc
cmpsl
adc
inc
add
js
aaa
inc
jnp
or
call
mov
repnz
add
add
imul
lret
sbb
imul
fldcw
ds
mov
add
add
or
adc
push
sub
imul
jmp
add
add
in
adc
cmc
insl
enter
cmc
inc
sbb
idivl
add
loopne
test
dec
and
mov
in
daa
mov
cmp
pop
fs
aam
and
add
add
das
pop
inc
mov
sub
adc
jge
mov
add
add
add
add
add
add
cwtl
push
push
mov
add
jno
push
test
jmp
mov
jnp
scas
fidivl
jle
ret
addr16
add
add
mov
jmp
pushf
pop
dec
add
scas
pusha
mov
adc
in
rorb
loop
cld
shrb
pop
loopne
flds
jmp
add
add
clc
ss
push
pop
add
mov
inc
mov
mov
daa
loop
cmp
mov
add
cmpsl
xchg
mov
add
and
inc
cmp
mov
push
loope
stos
mov
fs
orb
add
fwait
and
add
add
outsb
push
push
fidivrs
cmp
push
fadds
or
push
jb
lock
sahf
div
pop
cmp
cmc
lock
pop
push
popf
inc
cmp
add
in
mov
pop
xlat
push
or
add
xor
aaa
pop
push
or
daa
out
cmp
add
add
and
loop
test
arpl
jae
xchg
add
fidivl
add
std
nop
inc
xor
movsb
mov
cli
in
mov
cmp
jle
dec
or
daa
sub
loope
mov
int
mov
scas
call
sbb
mov
add
dec
pop
dec
push
enter
mov
xchg
ss
add
shlb
inc
jg
adc
lea
mov
xlat
jb
add
nop
iret
or
jecxz
ljmp
inc
add
add
iret
ss
cmp
add
add
adc
add
add
add
int3
jl
arpl
adc
adc
jp
sbb
and
mov
mov
sti
andl
jl
sti
mov
addr16
cwtl
iret
sbb
pop
jae
xor
pop
daa
xchg
and
mov
inc
fs
cmpsb
dec
mov
dec
jecxz
pop
in
test
add
add
and
push
or
add
add
mov
cmp
fwait
out
scas
pushf
xchg
imul
add
xchg
enter
adc
mov
mov
add
lods
rorb
inc
movsb
in
mov
ja
xchg
adc
loop
sbb
mov
xchg
mov
lock
mov
add
add
add
pop
lret
rclb
pop
dec
ret
sub
je
mul
push
rcrb
add
mov
bound
add
add
ja
mov
inc
mov
jo
mov
mov
cmpsb
fists
icebp
gs
lods
push
lea
loopne
sub
jb
add
add
clc
icebp
inc
add
add
sti
xchg
rcrl
mov
andl
rdpmc
mov
sub
jnp
inc
mov
popf
lods
cmpsl
mov
mov
int3
shlb
leave
into
pop
lods
dec
stos
pop
rcll
xor
stc
notb
fcmovb
mov
push
cmp
add
add
adc
add
adc
call
add
add
insl
and
in
xor
add
add
dec
cmp
pop
or
fbstp
cmp
mov
add
add
mov
add
xor
pusha
mov
scas
repz
xor
xor
lds
xor
cltd
add
push
sbb
mov
xchg
lret
loopne
call
mov
lods
movsb
fcomps
not
sbb
pop
packsswb
addr16
dec
mov
lods
inc
push
int3
cmp
ret
add
add
mov
repz
push
imul
stos
inc
add
add
pop
inc
push
mov
in
mov
push
movsl
enter
dec
test
add
cmp
lcall
daa
cmp
jg
into
push
lods
dec
mov
in
mov
fxch
pop
pusha
mov
xchg
loop
push
and
jle
sbb
out
into
mov
je
lea
outsb
pop
mov
mov
push
sbb
mov
out
sbb
mov
lea
inc
lret
arpl
add
add
xchg
arpl
push
pop
stos
fisttpl
fdivl
jle
std
or
pop
mov
and
jmp
pop
scas
add
cmp
push
mov
mov
mov
cltd
push
out
ficoms
cld
mov
inc
scas
addl
add
mov
jb
in
mov
fistpl
in
jp
xchg
mov
test
pop
aas
les
rclb
or
add
fistps
cmp
andnps
clc
pop
movsl
dec
mov
mov
pusha
add
add
push
mov
add
or
pop
and
jmp
stc
push
mov
lahf
add
and
and
js
mov
mov
mov
mov
xchg
test
jp
stc
jg
adc
daa
jne
mov
shlb
test
jle
mov
sub
add
add
mov
mov
pop
mov
add
add
adc
dec
addr16
dec
add
add
subb
add
add
js
dec
rcrl
xchg
fs
mov
adc
add
dec
add
add
aaa
adc
nop
sbb
inc
mov
sub
xchg
jecxz
push
jno
int
roll
orb
sar
out
aam
cmp
in
cmp
cmc
jecxz
mov
pop
cmc
lds
push
test
pop
jo
bound
stos
xchg
outsb
xor
push
xchg
fxch
stos
inc
cmpsl
mov
push
enter
add
add
in
repz
add
sti
mov
call
dec
mov
push
inc
data16
mov
xchg
fimuls
mov
fisubrl
push
push
adcb
mov
add
and
and
add
add
add
lcall
xchg
dec
fcmovu
sbb
cmpsb
fistpl
lahf
push
push
daa
stc
mov
add
add
mov
or
add
and
dec
and
daa
mov
into
xor
mov
dec
add
add
sbb
lahf
add
jae
xlat
out
fadds
cltd
fs
mov
fs
lret
dec
sub
fwait
xchg
ret
mov
pop
pop
je
movsl
jecxz
sub
add
add
push
mov
push
repz
scas
cmp
out
daa
inc
imul
mov
xor
add
inc
les
xchg
push
inc
sub
push
sub
sbb
pcmpeqb
cmp
lcall
gs
cwtl
mov
add
add
sbb
pushf
fadds
fisubrs
add
add
imul
add
add
add
jne
adcl
cwtl
into
shrl
ljmp
fwait
push
out
adc
mov
push
std
adc
lret
adc
cmp
fistl
popa
les
filds
or
add
add
add
add
add
pusha
add
add
pop
or
add
add
andl
dec
mov
movb
sub
lea
adc
xchg
repnz
and
mov
add
mov
ret
jne
test
add
in
call
push
scas
cmp
cli
out
fstl
and
insl
jns
jb
ss
sbb
mov
mov
mov
mov
jnp
cmp
or
add
add
lahf
or
add
add
out
sub
add
add
loop
jae
bnd
ds
mov
jl
mov
sarl
scas
aad
adc
mov
jmp
sbb
add
fsubrs
inc
cmp
push
jne
stc
cwtl
push
push
scas
imul
sar
loop
aam
add
add
inc
pop
pushf
cmp
insb
mov
mov
cmp
ds
xchg
xor
adc
mov
inc
in
push
mull
add
add
das
setno
insl
xchg
stos
dec
fs
push
icebp
cli
aaa
cmpsb
das
dec
bound
add
jnp
mov
fistpl
adc
xchg
add
cli
mov
mov
mov
in
je
sbb
lods
and
call
lcall
dec
add
add
dec
test
xchg
ss
sbb
or
icebp
sbb
int3
jg,pn
adc
jae
jmp
pop
inc
add
add
cmp
in
mov
add
add
adc
lds
test
dec
cmp
rcrb
and
xor
pop
xchg
jno
js
in
daa
out
and
push
pop
xor
mov
lea
insb
add
add
push
xchg
mov
xor
ret
dec
mov
hlt
push
test
add
scas
jno
pop
xor
das
sbb
aam
or
add
add
jo
add
add
push
xchg
sub
fwait
int3
mov
cmpsl
mov
cmpsl
cmp
mov
or
or
add
add
mov
gs
scas
mov
testl
xchg
mov
add
popf
mov
xor
jmp
mov
imul
xchg
lock
jle
dec
adc
stc
dec
add
add
or
add
add
add
xor
pop
add
add
add
or
add
add
add
add
dec
mov
add
jp
stos
stc
mov
fsubs
add
add
dec
mov
xor
push
scas
push
ljmp
pop
mov
push
enter
jge
jecxz
imul
mov
add
add
add
es
cmpsl
and
in
ljmp
test
sar
cmp
dec
xor
pop
and
sub
adc
add
pop
pop
out
lods
add
fldenv
out
decl
pop
cs
add
add
jmp
adc
mov
inc
inc
mov
adc
popl
add
xchg
cmp
sub
add
add
popf
mov
orl
adc
mov
add
add
add
rcrl
or
push
mov
add
add
mov
jle
test
push
xor
fidivrs
ds
xchg
jne
push
lods
stos
es
push
fidivl
fdivs
adc
in
xor
mov
adc
xchg
xor
dec
dec
in
stc
fs
dec
xor
lods
jne
mov
add
into
mov
pop
lock
sub
scas
sub
add
add
divb
das
mov
out
mov
xchg
daa
iret
jb
or
faddl
add
add
jne
shlb
add
add
inc
mov
imul
mov
rcr
lods
add
add
or
shl
mov
add
jae
iret
imul
cmpsb
dec
scas
hlt
jmp
jge
mov
xchg
lea
sub
mov
adc
call
repz
inc
arpl
mov
imul
leavew
popa
push
test
neg
cld
mov
add
add
add
push
and
addl
cmp
add
clc
imul
call
add
int3
aaa
push
pop
bnd
jmp
mov
mov
jb
lds
add
add
add
add
pusha
add
add
xor
ss
add
push
xlat
dec
sbb
loopne
mov
adc
mov
sub
add
add
inc
mov
leave
jb
popf
jno
into
test
cmp
mov
xor
lods
mov
mov
ss
pusha
add
add
push
xlat
add
sbb
decb
arpl
mov
mov
in
dec
addr16
add
adc
pop
sbb
add
add
add
add
jno
push
inc
add
add
popa
das
mov
pop
inc
lock
xor
pop
jns
push
test
add
add
testl
add
push
pop
adc
cmp
test
mov
cwtl
lods
jne
xlat
fwait
xchg
test
add
xor
and
add
add
adc
mov
dec
dec
add
add
fistl
jae
mov
or
pop
jecxz
xlat
xchg
mov
add
addb
add
add
ret
mov
add
rclb
jl
sub
pop
jo
add
add
add
mov
add
pop
and
test
sub
je
movsb
mov
addr16
punpckhbw
add
add
and
add
push
stc
test
mov
inc
xchg
fcom
jae
or
mov
mov
push
cmp
ret
add
add
mov
loop
add
add
and
pop
mov
out
andb
add
add
add
add
push
inc
pop
jp
sub
add
add
jae
aaa
dec
imul
add
stc
hlt
test
ljmp
or
loope
je
inc
cmp
ss
add
add
xchg
add
add
add
int
fmull
js
mov
add
add
mov
mov
add
and
xlat
and
sub
cmpsl
sbbb
fs
imul
out
mov
outsl
mov
sbb
iret
pop
jne
mov
pusha
add
add
add
xchg
and
add
add
leave
in
xchg
cmpsl
push
pop
in
push
pushf
push
jmp
pop
mov
jp
outsl
psubsb
add
test
mov
cmp
enter
add
add
add
loope
out
sahf
inc
test
add
add
pop
cmpsb
mov
mov
push
in
ret
loopne
cmp
pop
fdivr
mov
aam
aad
dec
rcrl
adc
psllq
add
insl
pop
add
ds
jno
les
roll
add
jb
mov
ret
test
add
inc
mov
mov
jo
jmp
push
pop
repnz
sbb
inc
loopne
mov
test
scas
js
gs
xchg
les
leave
aam
cwtl
adc
rcll
orl
xchg
jnp
cmp
add
add
and
faddp
xchg
mov
mov
add
add
or
add
in
xor
add
add
lret
adc
cmc
xchg
mov
xor
pop
xchg
cltd
fldl
add
add
lret
adc
push
inc
mov
jge
mov
dec
loop
mov
stos
idivb
pop
shlb
add
add
push
adc
test
mov
or
mov
mov
add
add
xor
mov
movsb
or
xchg
test
add
pop
lcall
add
ret
dec
es
es
daa
sub
add
add
push
outsl
jl
repz
pop
lods
aam
push
insb
mov
pop
cmpsb
aad
ficomps
out
pushf
inc
xchg
xchg
mov
sub
mov
jl
enter
add
add
daa
push
xchg
mov
xchg
icebp
xor
mov
push
out
jbe
aam
popf
pushw
sub
mov
dec
and
add
add
add
nop
aam
add
add
add
jno
and
add
add
es
sub
mov
add
add
loope
sbb
scas
add
xchg
mov
mov
cmp
xor
sbb
mov
and
add
add
sub
in
dec
lahf
pop
lahf
stos
popa
xor
ficompl
fcompl
andl
testl
popa
adc
or
push
sub
shlb
pop
test
popf
jmp
adc
xchg
sub
mov
insl
pop
adc
mov
add
xchg
daa
test
lahf
dec
jp
inc
add
add
jmp
fucomi
addr16
jns
push
push
mov
add
add
mov
sub
cli
pop
mov
gs
mov
and
add
add
test
xchg
aas
ret
pop
les
xchg
stos
xor
gs
add
add
mov
add
add
daa
bound
cmp
ja
xor
pop
or
enter
pop
stc
xchg
mov
dec
mov
xchg
sbb
testl
sbb
aaa
xor
and
dec
xor
insl
push
add
add
aaa
mov
mov
rcrl
fsubrl
add
add
cmp
cli
test
popf
bound
test
sbb
pop
adc
negl
mov
bound
test
sub
cmp
pop
mov
push
data16
jg
idivb
je
shlb
mov
pop
jnp
sub
or
add
add
lahf
in
lret
test
loope
add
dec
jae
pop
mov
add
into
out
sbb
push
pop
outsb
sub
sub
es
mov
sbb
add
clc
popa
jge
push
adc
ljmp
inc
mov
sub
add
add
jo
mov
cmpsb
pop
pushf
in
stc
mov
mov
aad
inc
fwait
loope
sbb
das
pop
lods
lret
leave
sbb
inc
mov
je
cmpsb
fcmovb
data16
ja
xor
jg
inc
add
add
or
add
add
add
add
mov
sbb
dec
add
add
shl
add
pop
and
scas
stc
scas
dec
add
add
jmp
fstl
dec
add
add
pop
push
mov
addr16
jl
sub
jp
mov
ret
imul
sub
add
add
scas
pop
mov
dec
mov
add
ret
test
sub
call
add
add
add
and
add
add
add
stc
sbb
sbb
jb
nop
lock
fistl
xor
decb
loop
popf
mov
aam
mov
xchg
add
jo
mov
dec
mov
add
add
push
xor
daa
popf
cld
pop
negb
pop
mov
hlt
sbb
rclb
push
pop
fisttps
stc
sub
push
or
fistps
mov
jae
pop
lea
inc
lcall
loopne
insb
mov
dec
push
jmp
repz
test
mov
xchg
mov
stos
loopne
popf
mov
add
add
jno
mov
add
add
jge
adc
mov
and
inc
mov
mov
pop
aam
add
cmp
pusha
add
add
pop
call
add
add
mov
pop
dec
mov
add
add
lahf
sub
inc
mov
jne
stos
andl
loop
sub
shll
cwtl
sbb
rcll
adc
sti
lret
stos
aas
pop
out
mov
xor
xchg
xlat
iret
xchg
popa
dec
mov
push
inc
mov
test
pslld
xchg
in
scas
jg
mov
rorb
add
add
fbld
add
add
mov
xor
mov
add
add
add
pop
in
cmp
pushf
add
loop
loop
add
add
add
push
push
pop
adc
add
add
mov
pop
movsl
or
add
add
add
mov
int
jno
sub
out
in
int
and
add
insl
mov
nop
sarl
pop
ljmp
push
inc
and
call
pop
mov
pusha
add
add
repnz
sti
int3
dec
ret
sbb
jb
mov
mov
imul
add
xlat
sub
pop
add
add
add
int
lea
pop
inc
in
jmp
ds
sbb
mov
cs
data16
jmp
mov
test
or
xchg
dec
jb
jmp
ljmp
add
add
add
add
pop
pusha
mov
iret
jmp
test
aad
pop
jle
dec
dec
push
xchg
ss
add
cmp
add
imul
add
add
clc
dec
test
mov
sub
mov
mov
and
lret
std
pop
in
cmp
jg
mov
mov
add
add
sbb
es
dec
xchg
xchg
les
or
add
add
imul
sbb
cld
jbe
adc
sub
imul
pop
mul
pop
lret
scas
cmp
dec
icebp
lea
add
add
xchg
add
das
sbb
adc
out
pushf
pusha
mov
sahf
test
pop
addb
and
xchg
mov
scas
popa
ja
inc
icebp
insl
movsl
inc
xchg
test
loop
pushf
mov
jl
lret
vmovupd
sub
mov
add
sub
add
add
add
inc
aam
lret
push
scas
pop
clc
pop
mov
mov
mov
add
add
mov
add
fwait
mov
int
cmc
mov
jo
cmpsl
and
add
add
mov
bound
jmp
in
hlt
cltd
imul
out
adc
sub
scas
dec
jp
leave
addb
cmp
pushf
bound
mov
adc
cwtl
lods
roll
add
or
sarb
jns
jecxz
shll
pusha
mov
sub
add
mov
xor
or
ror
adc
add
add
push
adc
mov
push
pop
cwtl
push
push
inc
mov
mov
popa
mov
add
sbb
mov
inc
lcall
add
or
add
shl
jle
or
sbb
adc
and
mov
cmp
lret
xchg
incb
add
add
xlat
iret
dec
xchg
lret
mov
adc
hlt
push
fidivs
push
mov
mov
xor
pop
xor
add
add
ljmp
addr16
xchg
jb
mov
mulb
adcl
add
xlat
stc
mov
icebp
inc
mov
push
fsubl
lock
push
mov
sub
add
add
add
dec
mov
call
sbbb
mov
pop
leave
add
or
add
add
adc
inc
mov
dec
mov
xchg
lock
daa
dec
push
or
add
add
mov
frstor
add
add
push
pop
push
loope
lahf
pop
cmpsl
adc
nop
dec
ljmp
xlat
stc
inc
add
add
add
cmp
push
lds
dec
jmp
cmp
lods
enter
les
sub
pop
cmp
xchg
adc
cmp
fdivrl
mov
pop
adc
mov
sbb
cs
add
popa
xor
inc
sahf
xor
add
add
je
add
add
movsb
push
popf
sbb
add
add
sbb
sub
add
add
in
lock
xorl
es
or
lock
xchg
hlt
sbb
push
mov
idivl
pop
push
roll
imul
daa
outsb
dec
mov
std
insl
lahf
imul
aaa
addr16
out
mov
std
and
xlat
out
dec
cmp
loopne
pusha
mov
jnp
add
add
cld
dec
mov
sub
leave
hlt
push
and
pop
sbb
xor
add
in
ja
adc
fiaddl
add
pop
cltd
adc
adc
cmp
jecxz
std
push
and
add
add
inc
add
add
ljmp
fcom
aas
lods
outsl
jg
cmp
dec
add
add
and
and
jl
dec
aas
jmp
add
je
and
pop
xchg
cmp
sub
add
add
mov
vmwrite
mov
add
scas
jmp
jmp
ficoms
xchg
cld
negl
lds
std
mov
nop
push
xor
insb
add
add
lods
fucomip
push
xchg
jo
inc
mov
aaa
xchg
pop
inc
xor
mov
adc
push
sbb
add
inc
jns
jle
pop
xchg
js
loop
sarl
or
sub
sub
add
add
insl
mov
addr16
cmp
rcrl
lods
test
adcl
cmpsl
xchg
mov
gs
mov
fistps
sbb
jge
stc
inc
xor
dec
mov
jbe
movsl
in
movsb
imul
xor
add
add
je
cmp
jne
in
les
mov
and
add
add
lret
sarb
xorl
out
add
add
ret
add
add
shll
add
inc
add
mov
lret
add
add
ds
notl
enter
mov
test
jmp
add
add
ficoms
enter
mov
cmp
imul
btr
sbb
pop
xor
cli
xchg
aad
push
addr16
add
enter
enter
mov
mov
mov
jnp
loope
add
push
jl
adc
movsb
das
add
add
add
mov
lods
scas
push
addl
movsl
push
xchg
add
add
add
dec
sub
add
add
stos
add
les
lahf
test
out
xor
loop
mov
sbb
outsb
xlat
bnd
add
add
das
out
jno
mov
and
pop
fwait
or
inc
add
add
xchg
insb
mov
add
add
cmp
sti
inc
jg
push
stos
sub
add
add
push
repz
push
in
or
add
add
inc
xchg
sub
add
add
mov
or
stc
cld
mov
sub
xchg
and
add
add
push
into
rorl
test
add
mov
sar
mov
test
add
add
push
xor
inc
cmp
add
mov
add
enter
mov
mov
push
ret
std
in
mov
and
add
add
mov
ret
xor
push
mov
ffreep
dec
ror
adcl
cmp
inc
push
addr16
jp
stos
push
rorb
mov
or
outsb
cmp
mov
scas
sub
and
add
add
arpl
es
lods
push
repz
jo
lock
add
and
ja
fistpl
jno
mov
add
jno
std
add
sub
add
add
repnz
cmp
mov
cmp
cmp
loope
inc
inc
add
add
dec
mov
mov
or
jle
stos
aas
aas
mov
mov
mov
push
dec
add
add
lods
cmpl
add
add
inc
push
push
mov
or
add
add
push
rcrb
and
add
add
sbb
mov
cld
stc
xor
or
add
add
dec
sbb
pop
inc
mov
mov
add
add
add
add
cmc
test
xchg
incb
cmp
inc
add
add
loop
push
push
fs
jmp
xor
add
add
fstpl
inc
shr
inc
repz
push
and
add
add
add
jmp
and
add
add
rolb
and
add
add
sbb
call
add
add
inc
data16
loope
add
add
ret
dec
fwait
outsl
adc
inc
inc
mov
orb
jl
fnstsw
add
add
inc
add
add
pop
arpl
mov
fldenv
addr16
leave
out
dec
inc
popf
psrlw
cmpsb
aam
xor
popf
and
add
add
shrb
xlat
movsl
inc
insl
push
pop
pop
adc
loop
mov
dec
push
aad
loope
mov
add
push
mov
mov
add
add
add
add
ret
dec
stc
movsl
leave
mov
cs
cwtl
ud2
sarb
test
jne
or
add
add
pushf
in
xchg
add
pop
popf
adcl
in
insb
mov
cmc
das
inc
push
add
ljmp
popa
fsubrs
icebp
jne
push
sub
add
add
and
les
das
sti
or
aam
xor
in
das
mov
out
mov
cmpsb
xchg
lcall
iret
jl
fstpl
pop
je
cmpsl
aaa
cmpsl
subl
arpl
jbe
mov
mov
pop
push
enter
je
add
add
lahf
xlat
cmp
enter
adc
cwtl
mov
and
mov
mov
std
fsts
pushf
jmp
shld
pushf
clc
mov
jno
jg
mov
push
call
popf
or
add
add
in
mov
fidivrs
test
add
ficompl
sub
push
stos
xor
add
add
jae
das
pop
lds
or
dec
and
add
add
rorl
loop
jmp
popa
mov
lret
jbe
fsts
ds
repnz
icebp
pop
rclb
xchg
inc
movl
add
push
push
cmp
sub
add
add
inc
add
inc
add
add
sti
push
pop
enter
add
add
push
and
add
add
xor
add
jmp
dec
fistps
jb
xor
sti
es
add
xor
cmpsl
in
cmp
add
or
insl
pop
andb
add
add
add
mov
and
add
add
xchg
mov
iret
dec
mov
add
add
dec
add
add
push
mov
addb
add
add
pushf
push
cmpl
add
dec
add
add
add
add
add
lcall
out
push
push
mov
pop
repz
icebp
rclb
loope
mov
lret
loop
jae
mov
jg
out
or
pop
outsl
or
jg
sbb
ljmp
jecxz
mov
jg
jae
addl
aaa
fstpt
or
pop
mov
mov
adc
xor
adc
push
push
outsl
or
mov
mov
pushf
outsb
ja
mov
shrb
fwait
icebp
push
in
adc
imul
and
dec
movsb
jg
push
mov
inc
jmp
add
dec
ja
insb
mov
rcrb
sub
xchg
mov
add
cwtl
enter
push
lahf
xor
sub
outsl
xchg
cwtl
mov
mov
add
or
add
add
cmp
popl
push
inc
mov
icebp
rorb
add
add
add
cltd
in
ja
aaa
shr
repz
pop
sbb
aad
sub
sub
add
add
fcmovnbe
mov
mov
add
add
mov
sbb
and
shll
push
ret
icebp
popf
mov
inc
loop
push
movsl
pop
pop
mov
xorb
mov
cltd
arpl
cmpsb
push
cld
sbbl
sbb
jnp
ja
sbb
out
movsl
das
fwait
mov
cmpsb
jbe
mov
pop
jbe
mov
lock
sbb
bound
add
add
cltd
aad
sbb
mov
add
adc
push
insb
add
add
out
pop
icebp
adc
sub
rolb
add
add
adc
cld
adc
cmpsl
cmc
jg
outsl
lahf
jae
mov
add
add
mov
aam
inc
xlat
inc
xchg
push
cmp
adc
roll
xor
sub
pop
ljmp
es
pminsw
out
and
in
movsl
popf
stos
xchg
add
add
or
add
add
sub
add
add
xor
or
int3
popf
jmp
lret
jg
jae
jnp
sub
insb
add
add
js
leave
test
add
rcl
push
mov
mov
pop
inc
cld
xor
pop
lret
out
cs
call
in
and
add
add
mov
and
pop
pop
push
ret
dec
push
sahf
nop
loop
out
pop
or
in
repnz
aas
cmp
push
mov
lcall
ja
popa
loopne
lods
xchg
in
xchg
add
pop
adc
out
lret
xchg
insb
mov
dec
insb
mov
push
or
mov
insl
xchg
lods
pop
push
cmp
inc
xor
add
add
add
sahf
adc
movsb
add
in
cld
xchg
mov
in
add
pop
adc
fsubs
sbb
adc
ja
mov
int3
and
cmp
js
ret
dec
mov
aam
fildl
add
inc
cmp
add
add
add
or
xor
add
add
sub
enter
cmp
clc
add
add
xchg
lret
pop
push
push
loop
sarb
add
add
pop
jmp
adc
add
xchg
add
add
add
mov
cli
imul
arpl
ret
jle
cld
inc
mov
jle
pop
adc
aaa
mov
cmp
dec
bound
scas
jno
dec
pop
jb
rorl
add
add
xor
xlat
push
bound
cmc
jns
es
mov
mov
sbb
mov
mov
hlt
insb
add
add
mov
jp
std
inc
mov
sbb
test
mov
xchg
stos
test
mov
cmpsb
jge
mov
push
adc
pop
andb
add
xchg
cmp
add
xchg
sbb
ss
fsubrs
imul
add
add
xchg
or
add
add
mov
fmuls
and
add
add
ret
sub
inc
insl
pusha
add
add
lret
xchg
mov
dec
hlt
cmp
shl
fs
je
xlat
push
andl
js
into
hlt
push
subb
xchg
mov
add
add
outsb
lret
scas
into
lret
adc
mov
mov
inc
cvtpi2ps
jbe
push
pop
popf
dec
mov
mov
in
pusha
mov
and
and
push
inc
or
xchg
pop
and
repz
negl
je
mov
adc
mov
ss
test
daa
sub
and
bound
and
add
add
gs
int
mov
xchg
fdivl
ss
add
in
add
add
xor
popa
mov
and
add
add
stos
dec
movsb
fcmovbe
fistpll
js
call
add
jecxz
inc
pop
jnp
outsb
pop
dec
idivl
jno
dec
sarb
insb
mov
dec
imul
lahf
mov
fldenv
add
lcall
enter
add
add
add
add
adc
rcrl
repnz
adc
cli
fiadds
rorl
mov
mov
jnp
or
jne
leave
adc
sbb
xlat
cmc
shlb
add
push
fbld
lods
xor
outsl
out
push
push
stc
or
gs
into
sbb
jb
enter
dec
insl
ss
popa
loopne
sbb
in
sbb
jle
out
add
dec
mov
mov
hlt
sub
inc
xor
cmpsl
ja
push
cltd
mov
dec
mov
inc
push
mov
push
scas
int
inc
pusha
mov
mov
mov
mov
fst
aas
lret
inc
scas
dec
add
add
pushf
test
cmp
sub
add
add
je
jns
xor
lods
daa
xchg
push
push
mov
not
lods
dec
jmp
add
add
pop
imul
hlt
lods
dec
and
add
add
inc
and
add
add
movsb
scas
dec
add
add
push
lods
jnp
push
aas
mov
mov
mov
pushf
sub
jle
pop
sub
mov
add
add
add
push
cmp
into
add
add
add
add
add
add
adc
test
loopne
subl
cli
in
inc
add
add
mov
add
sub
add
add
dec
pop
sbb
add
mov
flds
jg
scas
xor
add
add
or
add
add
inc
scas
loopne
push
xchg
int3
jle
mov
push
mov
mov
add
add
das
stos
push
inc
pop
enter
cmp
xchg
push
mov
loopne
add
mov
adc
xchg
sub
shll
add
ljmp
and
add
rol
test
loope
enter
push
bound
push
adc
fisubrs
jl,pt
mov
cmp
add
xchg
push
aaa
sbb
add
add
pop
loope
jmp
pop
jle
add
add
jo
cmpsb
leave
pop
xor
ljmp
jno
push
sbb
push
imul
out
aas
pop
add
inc
aas
in
mov
out
and
add
add
mov
outsb
fwait
xchg
mov
daa
xchg
lds
sbb
add
add
pop
pop
idivb
dec
fdivr
xor
mov
ss
push
orb
pop
movsb
push
addr16
push
sub
add
add
daa
sub
add
add
lds
loopew
push
jp
lret
mov
call
mulb
add
push
sti
xchg
push
cltd
xlat
divb
lcall
inc
pop
out
mov
add
push
sub
add
add
sub
add
cmp
mov
into
push
push
movsb
add
add
dec
shl
rolb
push
out
lds
push
xchg
xchg
mov
add
add
dec
mov
popf
sub
add
add
pop
popa
in
mov
iret
ret
mov
or
dec
cli
imul
xor
pop
dec
pop
mov
pop
xor
sti
sbb
push
or
add
add
dec
inc
cmpsl
mov
add
mov
mov
out
adc
sub
cmp
mov
xlat
lret
add
add
dec
mov
fnstsw
xchg
jmp
in
stos
inc
adc
rcr
sbb
mov
test
xchg
iret
mov
jbe
ret
add
movsb
fcomps
add
mov
cmp
xchg
or
repz
dec
add
add
sub
jbe
cmp
sbb
nop
fstps
stos
and
mov
and
loop
inc
or
sub
jno
and
dec
add
add
lea
sbb
add
add
add
add
xchg
or
add
add
mov
cmp
add
aam
sub
add
add
add
add
xor
mov
insb
add
add
idivb
xlat
or
imul
jnp
pop
dec
daa
loop
addl
in
add
push
push
int
push
inc
out
arpl
add
xchg
jno
jl
push
dec
testb
movsb
repz
shlb
add
add
outsl
xchg
in
mov
pop
adc
xchg
cwtl
in
mov
andl
cmp
cmpsb
pushf
jmp
add
dec
jbe
sbb
fisttps
stc
pop
mov
aas
mov
ffree
mov
or
loop,pt
mov
arpl
out
cmp
pop
cmp
mov
and
lret
mov
mov
or
inc
mov
arpl
cmp
out
mov
insl
jle
int
lret
jo
pop
xchg
and
add
add
sub
add
add
cmp
mov
shlb
add
lret
cld
inc
leave
jle
shl
jo
out
push
jbe
sub
mov
dec
aaa
xchg
aaa
jecxz
sub
sbb
arpl
inc
mov
mov
add
add
inc
int
pop
lods
inc
fninit
scas
sub
add
add
add
add
mov
cs
add
add
test
fsubrl
bound
lock
inc
push
cwtl
mov
ss
xor
sub
add
add
mov
loopne
mov
sbb
xor
push
in
les
loopne
sub
lret
inc
int3
or
add
add
and
loopne
cmp
movsb
sarl
mov
mov
pop
repz
add
add
hlt
mov
test
rorl
add
add
mov
add
mov
outsl
xchg
rclb
dec
lods
mov
jo
ret
add
add
lret
mov
mov
mov
mov
mov
data16
aad
les
aaa
pop
cltd
fadds
add
add
cmp
sub
sbb
mov
sbb
lcall
out
mov
add
popa
cmp
cli
lods
sbbl
lds
pop
mov
jb
and
fdivrs
cmp
pop
sarl
int3
fimull
ss
adc
stc
push
fidivl
sub
pop
pop
jb
push
stos
int3
aam
cmp
push
xchg
in
shll
pop
enter
push
xchg
addr16
add
add
fcoms
or
xor
mov
cmp
repz
sbb
lods
pop
imul
xchg
mov
inc
std
mov
mov
mov
mov
bound
stos
aam
mov
mov
add
add
pushw
inc
lock
arpl
icebp
sar
inc
pop
jmp
daa
cs
jmp
cmpsb
cmp
ret
mov
leave
fwait
orb
add
jo
sub
add
add
test
fdivl
mov
or
jecxz
push
xor
jno
add
add
movsl
insb
add
add
adc
fs
lds
add
add
mov
add
cmp
roll
add
cli
std
movsb
fwait
mov
insl
fsubl
fldl
add
add
sub
pop
shlb
gs
push
pop
inc
in
mov
add
stc
fsubr
sub
movsl
shl
mov
dec
packsswb
out
out
movsb
cwtl
out
sbb
add
aas
jmp
mov
add
out
mov
stc
test
mov
outsl
jge
xor
scas
mov
mov
push
inc
or
add
add
add
mov
cmpl
aam
cmp
add
add
cmpsl
xchg
mov
inc
cmp
xor
xchg
imul
dec
insl
sahf
sbb
or
add
add
xlat
xor
sbb
inc
add
add
push
push
pop
ret
nop
inc
out
mov
add
add
nop
int3
xor
mov
add
repz
loope
adc
fwait
cmp
int
mov
inc
imul
in
ret
fs
dec
mov
notb
or
add
add
or
faddp
xchg
scas
int3
dec
jbe
aam
adcb
loop
test
or
dec
mov
jmp
sbb
int
pop
in
xchg
test
cli
cltd
add
xor
add
add
pop
mov
nopl
add
clc
popf
sub
pop
mov
pop
call
add
add
lds
jns
jbe
push
mov
js
push
scas
ret
pop
arpl
push
jne
daa
lea
inc
mov
out
xchg
mov
ds
ja
test
push
mov
or
sub
cmp
xorl
pop
jbe
test
pop
lret
sbb
add
add
add
add
dec
jno
rcll
test
inc
add
add
mov
ljmp
sbb
aad
adc
sub
mov
xor
add
add
push
push
and
dec
pop
xchg
inc
mov
pop
push
add
add
add
mov
in
inc
push
xor
jg
push
js
dec
arpl
add
add
xor
add
add
je
adc
adc
aad
iret
cltd
aaa
test
arpl
aam
mov
sub
imul
test
pop
push
cli
cli
add
pushf
in
mov
mov
mov
add
add
xchg
inc
mov
xchg
or
cli
add
fisttps
jge
loope
hlt
cmpsl
adc
sbb
adc
sbb
pop
mov
sbb
add
add
cld
and
cmp
mov
mov
or
add
add
add
add
jmp
cmp
add
add
sub
mov
inc
and
out
cmp
push
sti
pop
or
add
add
pop
xor
mov
movsl
pop
arpl
fstl
mov
movaps
mov
lss
imul
mov
mov
jno,pt
fsubrs
xchg
repz
gs
sbbb
mov
outsl
mov
add
add
push
mov
addl
jge
sbb
scas
mov
add
add
and
jmp
add
imul
add
add
unpcklps
cmp
jno
sbb
mov
push
scas
xorl
cmp
add
jns
leave
mov
add
fnstcw
and
xor
mov
add
rolb
mov
call
pop
in
frstor
push
mov
dec
mov
addl
add
add
dec
pop
ds
add
add
scas
push
cmp
push
in
ljmp
jno
mov
ds
dec
bound
int3
popf
mov
lahf
adc
jae
sbb
mov
pop
int3
jne
and
or
or
lock
out
push
negl
push
xor
mov
rorl
icebp
dec
ret
push
jno
popa
sub
add
add
fimuls
jg
sbb
sti
js
xchg
fists
test
push
add
add
mov
addr16
sbb
dec
mov
adc
xor
dec
or
lcall
add
shl
add
add
js
xor
jo
add
cmpsl
daa
test
xor
dec
scas
out
jno
mov
addb
out
push
les
je
jae
or
add
xchg
mov
call
mov
add
inc
mov
or
push
notb
xor
bound
add
add
dec
loop
mov
inc
adc
add
inc
add
add
movsl
mov
fisubrl
je
loop
mov
stos
push
stos
pop
inc
test
inc
ja
lock
icebp
ljmp
mov
adc
lods
cmp
jo
sub
ja
nop
add
add
add
mov
pop
and
scas
shrb
orb
add
out
dec
adc
push
mov
push
xlat
cmp
dec
sti
int3
and
add
add
pop
sub
add
add
decl
fimull
mov
in
insl
out
es
das
test
aas
push
dec
add
add
sub
pop
xor
fidivrs
add
pop
out
ds
mov
scas
nop
gs
mov
orl
or
or
aas
or
add
add
xchg
adc
leave
mov
add
add
rorb
mov
fstl
add
dec
inc
dec
mov
xchg
outsb
jmp
out
pop
mov
mov
add
add
pop
insl
mov
add
add
or
mov
push
add
repz
adc
enter
add
add
dec
sbb
bound
shlb
xor
ja
mov
mov
mov
mov
loope
push
push
push
nop
fimuls
stos
adc
stos
movsb
push
and
push
mov
inc
add
add
pop
insb
add
add
pop
or
push
mov
hlt
shl
xchg
in
xchg
push
sbb
mov
jmp
add
add
cmp
sbb
add
add
inc
loopne
xchg
ror
repz
out
xor
xchg
out
xchg
or
add
test
jg
in
mov
rcll
add
add
add
add
bound
mov
mov
dec
add
add
push
shll
mov
mov
adc
push
xchg
pushf
das
enter
add
add
or
jno
ret
jno
add
add
repnz
imul
jmp
mov
and
sub
mov
test
add
add
shll
pop
lods
test
add
dec
pop
clc
in
mov
jae
mov
sbb
add
add
pop
outsb
mov
test
mov
rcll
xchg
push
out
sub
add
add
add
dec
mov
sbb
add
add
add
add
leave
or
ds
mov
mov
inc
mov
lcall
mov
int
add
add
stos
pop
roll
int
adc
cli
dec
in
sbb
rorb
mov
mov
cli
lret
push
jle
or
pop
ja
inc
mov
ds
push
pop
jecxz
sbb
adcb
int
daa
pop
mov
test
inc
in
jno
cmp
sar
xor
lret
addr16
add
add
add
add
xchg
or
push
aad
sbb
ja
adcl
mov
add
jge
addr16
add
add
fisttpll
rcl
mov
mov
push
out
or
adc
ret
test
xchg
scas
push
push
dec
adc
popf
or
add
add
pop
test
int
xor
loope
add
leave
aaa
leave
lock
mov
xchg
leave
mov
inc
lret
pop
sbb
inc
mov
add
xchg
inc
imul
adc
imul
pop
mov
cmc
nop
outsl
xor
xor
xor
lcall
adc
jo
or
mov
cmp
cmp
mov
stos
test
cld
mov
es
out
pop
in
push
loop
fsubr
pop
xchg
call
pop
push
imul
add
fwait
inc
popa
testb
xchg
sahf
jae
rorb
add
add
xchg
add
add
outsb
sarl
aas
subb
ret
mov
xchg
mov
imul
sbb
fcmovu
iret
push
cmp
inc
scas
ja
je
addr16
stos
loopne
add
add
add
add
mov
lock
loop
roll
push
dec
mov
hlt
and
and
or
add
les
add
rcrb
test
dec
add
add
xor
mov
push
sbb
and
xorb
sbb
pop
divl
inc
pop
fdivl
nop
je
loop
repnz
je
add
add
hlt
jno
xchg
inc
mov
stos
repz
dec
xor
cmp
popf
ret
mov
pop
mov
xchg
lahf
pop
repz
mov
dec
add
add
xor
mov
mov
mov
add
nop
jmp
sbb
out
adc
xor
js
mov
mov
or
fcmovnbe
mov
add
cltd
push
add
add
add
mov
fdivs
mov
push
jle
mov
xchg
push
fimuls
outsl
xlat
sbb
sub
mov
test
mov
push
stos
dec
lods
sub
insl
adc
pop
or
add
add
add
xor
jl
or
add
add
cwtl
sbb
push
mov
mov
inc
mov
mov
add
add
add
pop
push
mov
add
add
xlat
jnp
idiv
and
add
jl
fistps
pop
xor
add
add
std
mov
sub
int
push
xor
mov
cmp
jne
es
test
push
sbb
jg
xchg
jno
mov
mulb
add
add
sbb
and
sbb
jne
pop
inc
loope
push
xor
les
add
pop
sub
cwtl
jecxz
ret
cmp
jae
fisubrs
pop
out
test
xor
imul
nop
inc
mov
add
add
add
pop
push
inc
shl
addr16
pop
pop
pop
cmp
sbb
cld
mov
cmpsb
sbb
or
mov
cmp
pusha
mov
fwait
adc
add
add
dec
inc
ds
mov
adc
xchg
mov
in
js
sbb
dec
orl
inc
add
add
xchg
pop
rcrl
sarb
cmp
add
stc
xchg
aad
fdivs
lods
jnp
mov
rcr
ss
pop
nop
push
stc
test
dec
cmpsb
or
add
add
add
sbb
sti
push
in
push
sbb
out
insl
les
imull
add
add
orb
pop
push
stos
lock
dec
imul
xchg
xor
in
push
push
push
cwtl
mov
add
dec
mov
and
add
add
xchg
add
add
test
mov
push
filds
dec
outsl
gs
mov
sbb
add
mov
push
in
andl
pop
sbb
add
add
popf
arpl
add
add
jge
mov
fstpt
push
imul
add
add
sub
es
incl
icebp
inc
jnp
mov
xchg
or
add
lds
movsb
jg
inc
pop
repz
shrl
loopne
or
pop
cs
mov
es
xchg
fidivrs
adc
es
or
adc
jno
mov
add
leave
sub
pushf
sub
add
add
add
add
cs
sub
pop
test
add
jbe
mov
mov
add
add
xchg
jne
ffree
pusha
add
add
mov
push
sub
or
call
cltd
or
fimuls
mov
in
sub
add
jg
cmp
adc
je
fstl
jge
xlat
popf
ret
mov
testb
jno
daa
pop
test
int3
fcoms
inc
popf
dec
add
add
in
mov
add
add
out
loop
xlat
mov
subb
sbb
outsl
jnp
add
add
subl
pop
pop
mov
clc
or
lret
cmc
mov
xchg
bound
xchg
out
or
leave
mov
inc
sub
add
or
inc
adc
dec
je
dec
mov
dec
dec
xor
dec
inc
push
scas
adc
add
add
inc
ret
mov
repz
mov
fwait
pop
mov
add
lods
test
sub
add
fldenv
xchg
ret
mov
stos
ror
repnz
and
add
add
add
inc
mov
adc
into
aam
mov
push
xchg
xchg
out
add
add
stc
fwait
data16
xlat
mov
popf
outsl
jg
add
push
sub
xor
jmp
add
add
mov
cmp
sbb
fisubl
xor
mov
out
into
ja
add
add
or
add
add
or
add
sub
and
jle
ljmp
imul
gs
sbb
sti
cmp
scas
divl
pop
dec
xchg
cmp
add
or
add
add
mov
aaa
add
add
add
inc
test
cld
adc
xchg
mov
adc
adc
xchg
jecxz
mov
pop
stos
or
stos
sbb
push
int
xchg
sti
push
test
adc
aam
fisubs
cmp
movsb
outsl
jp
mov
xchg
xchg
pop
fcoms
sub
mov
jnp
push
sub
or
lcall
js
jns
test
ja
sti
fsubrl
add
add
mov
mov
loopne
sub
add
add
or
loope
push
ljmp
out
mov
mov
repz
inc
mov
loopne
loope
inc
add
add
ljmp
dec
mov
add
andb
test
push
xchg
mov
add
add
test
add
add
mov
jp
pop
cmp
repnz
adc
ss
test
lds
mov
or
in
in
push
and
fwait
adcb
shlb
xor
or
test
jne
fidivrs
jp
mov
mov
add
add
aam
sbb
mov
jno
mov
jo
test
sbb
movsb
push
in
jo
pop
cmp
push
pop
adc
mov
mov
lcall
and
mov
sub
jmp
add
add
outsb
inc
adc
xlat
xchg
jne
fdivrs
add
int3
fisubrs
cmpsl
loop
mov
cmp
mov
cmp
lods
pop
fwait
dec
mov
mov
mov
andb
add
adc
mov
cmp
imul
add
mov
adc
jge
xorl
ret
add
add
xchg
jmp
jge
adc
mov
pop
mov
vmread
setnp
add
add
mov
test
icebp
mov
inc
add
add
pop
loop
add
or
add
add
aaa
mov
mov
out
xlat
into
mov
add
stos
pusha
add
add
mulps
sub
adc
fldenv
pop
dec
add
add
leave
add
repnz
cld
clc
scas
xlat
inc
add
add
dec
scas
loopne
jg
or
call
dec
mov
rcr
push
mov
mov
add
add
scas
mov
adc
adc
stc
xchg
jl
add
add
nop
dec
and
add
add
insl
adcb
aas
pop
inc
mov
pop
mov
aad
jp
mov
mov
mov
adc
ds
xor
add
add
jns
push
scas
test
inc
aas
lods
push
mov
hlt
cld
mov
add
add
inc
mov
jae
push
stos
sub
add
add
push
add
add
addl
add
mov
or
jnp
loop
imul
push
xchg
fistl
cmp
xchg
xor
cld
cmp
dec
mov
fs
aam
mov
add
cli
mov
mov
push
shl
hlt
jae
stc
adc
lret
fwait
add
jmp
push
gs
lock
sbb
add
add
add
push
mov
lret
cmpsl
sbb
or
roll
daa
mov
sub
roll
xchg
push
ss
xchg
fstpl
pop
adc
aaa
lret
adc
jg
cmpsb
adc
movsb
or
mov
in
and
js
scas
jbe
jg
cmpsl
mov
xchg
pop
mov
sbbl
add
add
cli
lcall
inc
mov
add
call
outsb
lret
arpl
or
add
add
jp
scas
jmp
add
xchg
pop
push
jne
xchg
adc
pmulhw
ror
movsl
hlt
cmp
jnp
leave
std
xchg
iret
aaa
in
inc
add
add
sub
add
add
testb
add
add
sub
add
add
dec
lods
int
enter
pop
jb
addb
ss
outsb
data16
or
jle
sub
add
add
add
add
add
sub
push
les
jne
or
mov
les
pusha
mov
cmpsl
xchg
clc
loopne
test
xor
adc
in
mov
jbe
scas
fadd
sub
jp
or
add
add
adc
cmp
push
or
imul
add
sub
add
add
int3
repz
sti
sub
jb
push
mov
lahf
mov
bnd
mov
add
add
push
fdivr
repz
push
movsb
xor
add
add
out
nop
cmp
sbbb
jae
xor
scas
in
mov
leave
inc
ror
test
lret
add
add
pop
loope
mov
dec
jp
ss
dec
adc
add
add
lods
xchg
mov
add
sbb
add
add
cmpsb
fs
int3
pop
aad
xor
loope
add
add
jge
mov
mov
fisubrl
jl
mov
push
push
dec
fwait
or
mov
aas
das
or
movsl
jnp
sub
insb
add
add
or
add
add
lahf
ret
xchg
mov
push
ss
and
fdivrs
ss
addr16
inc
push
les
insl
jae
adc
into
pop
xchg
filds
bnd
add
add
pop
popa
or
add
add
xchg
inc
inc
lahf
imul
adcl
sbb
mov
add
add
mov
jbe
loopne
or
sahf
call
out
xor
outsl
cwtl
jb
xchg
jne
inc
mov
cltd
les
cmp
mov
add
cmp
andb
test
xor
imul
mov
dec
adc
mov
add
add
fsubs
dec
out
sahf
nop
ds
xor
sub
sbb
jp
xchg
insl
sub
add
outsb
cltd
adc
and
add
add
and
add
add
pusha
mov
xor
cltd
push
ss
mov
mov
push
push
lcall
add
add
push
clc
push
jge
pop
lret
ffree
fidivs
int
lods
xchg
sbb
and
ljmp
sbb
lock
xchg
pop
add
sbb
push
push
inc
adc
aam
and
add
add
push
xor
fwait
fwait
insl
daa
dec
mov
rcrl
sbb
mov
repnz
int
xchg
fnstsw
shll
fwait
enter
movsb
test
ja
pop
jnp
jecxz
data16
ds
clc
and
gs
mov
inc
add
add
cwtl
repnz
outsl
ja
outsl
inc
xchg
inc
lahf
and
sub
cmp
lods
ret
xchg
mov
xchg
loope
loop
jb
shlb
mov
add
add
fsts
sbb
ja
filds
add
add
das
rclb
dec
dec
mov
or
mov
idivl
mov
add
xchg
out
pop
lds
xchg
enter
push
add
xchg
and
add
mov
and
inc
pop
movsb
stos
into
mov
aaa
mov
out
ds
adc
mov
andl
out
int3
mov
aas
inc
in
cld
or
mov
dec
mov
sbbb
jge
mov
outsb
fildl
xchg
sbbb
or
ljmp
add
add
stos
and
xchg
xor
adc
jae
mov
add
add
js
xchg
jge
mov
dec
notl
add
add
adc
xchg
aad
xchg
popl
out
iret
lcall
xchg
push
out
sbbb
mov
jmp
push
adcl
rcr
dec
add
add
sti
movsb
dec
add
add
and
add
add
add
add
jl
mov
stos
testb
loope
out
cmp
push
pusha
mov
fildll
adc
pop
mov
add
add
and
pop
es
incb
fidivrs
cld
xchg
sub
add
add
imul
mov
lcall
pop
xchg
test
push
push
adc
add
mov
dec
lret
dec
test
sbb
scas
add
add
add
push
bt
adc
das
int3
pop
lcall
mov
fimull
cmpsl
jmp
cmpsb
or
xorl
cmc
es
mov
loop
shl
adcb
dec
rolb
imul
cmpsb
cli
push
lret
ret
fnstcw
add
nop
call
and
add
add
add
int3
test
fprem
imul
or
add
add
push
pop
xchg
add
add
adc
lods
cmc
sbb
jmp
test
dec
into
jns
add
aad
push
mov
fwait
xchg
stos
push
pop
es
fists
outsl
aaa
mov
lcall
push
subb
xor
adc
jo
push
aaa
cmp
in
mov
pop
jo
in
mov
pusha
mov
out
xchg
cld
cmp
sbb
mov
sarb
mov
push
add
add
inc
pop
lods
dec
add
add
mov
fistpl
pop
js
dec
adc
mov
out
or
jp
mov
add
add
aam
jp
lcall
add
add
mov
ret
inc
stos
and
push
hlt
pop
ret
push
xchg
test
adc
add
add
sti
test
out
mov
dec
mov
fidivs
mov
lret
js
push
cwtl
xchg
scas
mov
pop
divl
add
sub
int
pop
dec
cltd
inc
loopne
ret
rcr
and
out
cmp
add
pop
or
stc
push
push
xchg
mov
mov
cmc
jnp
repz
dec
int3
or
loope
mov
push
cmp
add
out
mov
ss
filds
add
add
clc
dec
mov
jnp
pop
aas
or
cmp
or
add
add
repnz
sbb
jmp
shrb
add
add
add
add
add
iret
add
cmc
push
push
fsubrs
cmp
mov
mov
popa
fyl2xp1
xchg
andl
mov
mov
loope
aaa
xor
ret
testl
mov
add
add
mov
loop
icebp
xchg
cmp
ret
outsl
inc
mov
aam
add
add
jecxz
mov
fstl
jb
add
add
add
lods
push
sub
dec
add
add
pop
sbb
add
inc
pop
insb
add
add
sub
xchg
das
or
add
arpl
stc
add
adc
add
jl
push
sub
scas
push
je
jnp
push
jg
test
lock
outsl
gs
jp
cltd
push
jmp
in
lock
aam
pop
jge
or
add
add
rep
rcl
test
popf
daa
lret
add
add
adc
jb
mov
cs
out
xor
pop
clc
insl
add
loop,pn
mov
add
add
add
std
push
lahf
jmp
shr
repz
adc
ficoml
mov
sarb
pop
dec
scas
mov
mov
stos
mov
push
cmp
add
add
mov
jne
iret
ret
out
jae
movsb
sahf
fmull
shll
mov
icebp
mov
and
push
sarb
add
add
add
dec
movsb
sbb
ja
jmp
jl
cmp
sub
leave
pop
lcall
add
add
sub
add
add
lret
sti
lds
ds
js
mov
cld
addr16
push
xchg
lea
pop
rcl
cmp
pop
call
dec
jle
jbe
jecxz
bound
fstl
in
mov
cmc
cwtl
pop
xchg
mov
mov
inc
mov
inc
add
add
dec
sbb
ljmp
xlat
fcompl
jmp
pop
sar
or
daa
jmp
push
cwtl
lret
out
test
je
push
mov
xchg
pop
inc
add
add
enter
lret
push
inc
cs
push
mov
add
add
add
inc
add
add
scas
incb
cmp
push
in
roll
add
add
mov
mov
enter
mov
cwtl
jge
pop
xor
lea
add
add
into
and
or
add
add
push
mov
movsb
loop
mov
lods
adc
mov
es
xor
or
jg
sbb
test
mov
mov
dec
mov
mov
or
test
fisttpl
add
add
mov
and
push
dec
push
ret
xor
mov
movsb
bound
mov
mov
adc
icebp
lcall
add
add
xor
int3
lret
notl
add
add
mov
aad
lods
lods
out
xchg
mov
add
or
add
cmc
dec
cmpsb
mov
dec
fmuls
add
add
test
test
sub
mov
pusha
add
add
rcrb
sub
pop
cwtl
fiaddl
adc
ret
out
dec
xchg
jg
mov
rclb
add
add
add
xchg
clc
inc
movsb
stos
inc
add
add
inc
add
add
in
not
inc
ds
addr16
pop
mov
adcl
add
mov
pushl
ljmp
add
add
add
add
sbb
leave
mov
add
lcall
add
add
add
add
inc
je
adc
push
mov
out
repz
movl
nop
push
adc
sarb
into
inc
test
sahf
push
push
sbb
mov
jge
cmp
push
add
add
movb
das
mov
add
jl
je
ret
stos
cmpsl
les
xchg
jmp
mov
ficomps
and
ja
mov
jb
mov
xchg
mov
into
cmp
pop
inc
pop
es
sti
hlt
pushf
dec
outsl
nop
lahf
das
imul
insl
pop
imul
and
add
add
mov
sub
jl
movsb
cltd
xor
orb
dec
lret
insl
stc
push
ds
imul
add
shll
daa
out
add
add
dec
jle
xor
cmp
orb
shrl
add
add
pop
sbb
inc
adc
cld
adc
add
add
fists
mov
js
jno
mov
inc
mov
sbb
movsl
ljmp
and
pop
repz
cmpsb
cmp
loop
mov
pop
aad
cmpsl
or
mov
movsl
scas
cmp
pop
insb
add
add
fwait
xchg
daa
je
jo
int3
pusha
mov
add
add
add
sahf
dec
cmp
call
mov
mov
inc
mov
adcl
push
push
lock
fwait
pushf
cmp
iret
lret
insl
in
push
mov
leave
jb
cvtdq2ps
cwtl
push
in
insb
add
add
icebp
lahf
fdivs
inc
in
and
sti
pushf
in
dec
mov
xchg
dec
je
jge
insb
add
add
dec
cwtl
add
mov
mull
adc
push
lahf
mov
or
add
add
inc
pop
sub
mov
mov
xchg
xor
dec
hlt
add
add
add
and
add
xor
clc
movsb
sub
add
add
mov
lret
add
add
or
add
and
add
add
mov
cmp
xchg
cmp
push
lcall
add
add
setns
mov
sub
loope
fbld
sub
sti
push
mov
adc
and
sbb
add
sbb
pusha
mov
lcall
sub
pop
pop
arpl
mov
nop
aaa
xor
add
add
add
xchg
lods
test
fwait
sbb
adc
sahf
roll
add
add
mov
pop
icebp
xor
stc
clc
mov
mov
jmp
shlb
add
add
add
add
add
add
dec
stos
les
add
je
mov
push
xchg
jl
xor
xchg
xor
mov
sbb
adc
fimull
insl
inc
inc
cltd
dec
add
add
loopne
push
sub
add
add
fcomp
pushf
out
jb
inc
adc
clc
imul
lea
add
add
inc
je
sti
int3
push
ljmp
push
outsl
push
sahf
adc
pop
inc
push
add
add
pop
outsb
push
and
mov
arpl
add
cld
xchg
xchg
push
ret
pop
into
mov
pop
outsl
cmpl
add
add
add
add
ja
push
mov
sub
add
add
xchg
add
add
push
aam
test
add
add
dec
cmp
pop
enter
add
add
iret
idiv
pop
sbbb
adc
lods
inc
lods
testb
xchg
loope
pop
divl
scas
or
add
add
inc
mov
xchg
popa
mov
add
cli
pop
inc
add
add
mov
jg
xchg
mov
nop
pop
and
add
add
mov
sbb
les
std
shll
adc
add
jnp
add
add
xchg
es
push
sub
cmp
rol
dec
and
xchg
adc
add
add
cwtl
std
pop
push
dec
loope
mov
sbb
sub
mov
repz
mov
xchg
sub
add
add
fstpt
xor
xor
pop
cmp
shlb
mov
js
mov
punpckldq
arpl
add
mov
mov
add
push
pusha
add
add
in
pop
int
dec
or
add
ret
or
add
add
add
dec
popa
je
fmuls
shll
add
add
sub
inc
mov
in
cs
or
add
add
jle
adc
or
mov
rcrl
fwait
lods
jno
cmp
jge
mov
pop
xchg
dec
popa
xlat
fs
pop
xor
jle
test
jbe
int
jne
rclb
add
add
loop
jmp
ja
or
mov
int3
xchg
shrl
repz
xor
sbb
adc
and
push
jno
adc
add
add
mov
xor
mov
daa
loopne
addr16
mov
mov
xchg
cmp
scas
out
insb
mov
mov
je
push
sbb
rorb
dec
popa
and
mov
and
int
and
add
add
xchg
fldenv
or
add
add
mov
push
inc
push
sub
out
lahf
lret
dec
add
add
sar
xor
sbb
dec
pop
jns
mov
in
add
adcb
push
sub
add
add
add
pushf
sbb
repnz
push
or
leave
ljmp
call
jmp
loope
mov
add
add
mov
add
add
pop
and
cmp
cld
add
add
add
mov
add
add
add
add
mov
add
test
stc
pusha
mov
or
add
add
sbb
add
add
or
add
add
add
jmp
push
adc
icebp
push
push
pop
rolb
add
add
ret
push
ds
sub
add
add
mov
xchg
add
jg
cmp
or
fiadds
add
movsb
push
mov
js
rcll
add
add
add
cld
dec
push
dec
sbb
fidivrs
add
fsts
addr16
lods
inc
jno
clc
imul
sbb
xor
movsb
add
jmp
xchg
push
arpl
mov
mov
loopne
pop
dec
je
pop
aam
mov
xchg
inc
movsl
sub
push
rol
movsb
insb
mov
jg
sbb
xor
mov
adc
dec
mov
add
cmp
pusha
add
add
jne
xchg
cmp
inc
mov
fdivr
jecxz
xchg
data16
mov
add
lret
jecxz
imul
mov
loopne
xchg
xchg
dec
rcll
mov
mov
js
shll
add
push
addl
add
add
ror
lock
nop
dec
mov
and
cld
sbb
jns
pop
adc
imul
add
add
cld
int
jbe
add
add
xchg
dec
clc
jp
push
jecxz
sbb
iret
cmp
inc
jl
inc
cwtl
in
out
stos
jl
imul
inc
cli
and
add
add
xor
test
das
pop
dec
hlt
pop
dec
add
add
and
add
add
in
jl
sbb
mov
inc
adc
das
addb
mov
mov
pop
add
adc
inc
mov
mov
inc
repnz
xor
xor
scas
or
add
add
hlt
mov
push
lds
das
aad
xchg
jne
mov
fdivrl
and
ja
js
add
into
jne
push
inc
mov
add
push
xor
xor
and
cltd
mov
add
add
add
stc
and
sub
push
push
fidivrl
mov
pop
popa
outsb
pop
rorb
cmp
lds
add
pop
push
sbb
add
add
lcall
and
in
enter
xchg
pop
aam
test
out
sub
cli
divb
add
add
add
std
dec
lahf
in
sub
sbb
mov
js
cmp
imul
inc
add
add
leave
jmp
push
sahf
js
pusha
mov
mov
in
popa
lods
adc
sbb
insb
mov
test
dec
mov
add
add
add
add
add
scas
dec
or
rcrb
dec
cs
fdivrs
adc
add
add
add
cmp
fidivl
lret
add
add
sbb
pop
shll
stos
cltd
outsl
mov
jg
stc
push
xchg
jbe
add
add
add
std
imul
add
dec
add
shlb
add
add
mov
loope
mov
loope
fadds
clc
lahf
cmp
sbb
or
pusha
mov
push
addr16
add
add
add
add
out
dec
pop
xchg
mov
cmp
sahf
repnz
jl
pop
loopne
mov
ficoml
fisttps
add
add
ljmp
subb
lcall
insl
dec
ja
addr16
negl
jecxz
scas
fsub
cmp
or
add
add
bound
adcl
loopne
sbb
lds
mov
hlt
mov
bound
mov
mov
and
insl
cmpsl
mov
mov
stos
sub
cmp
negb
inc
add
add
and
push
cltd
push
lock
mov
push
stc
cmp
loopne
sub
mov
cmpl
add
adc
push
aam
mov
mov
mov
pop
jg
mov
cli
and
xchg
fwait
adc
sub
add
add
add
nop
mov
test
add
or
add
add
inc
mov
cmp
add
add
xor
icebp
sub
stos
and
fwait
loope
mov
or
movsl
mov
ja
fildl
xchg
cmp
mov
push
inc
ja
xchg
jbe
push
mov
pop
pop
or
add
add
jo
xor
movsb
jne
out
pushf
pop
pop
adc
jmp
and
jb,pt
mov
pop
iret
sub
stc
mov
lea
lahf
sub
insl
lahf
inc
dec
in
dec
mov
push
repnz
mov
mov
sub
jae
add
add
or
outsl
or
mov
stos
fmull
cld
es
add
add
jnp
lahf
push
sub
je
dec
pop
and
cli
test
mov
fidivs
imull
xchg
add
add
lahf
ja
adc
add
add
clc
push
mov
and
mov
iret
clc
lds
mov
insl
mov
add
repz
mov
ret
inc
sub
rcrl
mov
inc
ret
jo
in
into
cld
jecxz
inc
add
add
cmp
mov
push
lea
shr
mov
mov
add
add
out
notb
add
add
mov
aas
bound
push
jl
ficoms
add
add
jb
jge
push
int3
jp
cld
mov
xchg
jmp
sbb
adc
pop
or
add
add
int
pop
dec
mov
add
sbb
in
adc
mov
inc
repnz
or
sub
pop
cmp
add
lods
sbb
scas
inc
xor
and
adc
pop
xchg
xchg
js
push
pop
ret
fwait
lret
xor
in
cwtl
sub
add
ss
in
imul
mov
negb
aam
jp
ficompl
add
sbb
cmp
out
mov
add
add
cmp
push
mov
xchg
jmp
nop
jnp
adc
jmp
xchg
sbb
neg
fwait
movsl
sbb
out
movsl
adc
mov
repnz
shl
jge
inc
jb
lock
scas
mov
push
test
inc
add
add
lods
inc
mov
mov
add
into
xchg
aad
subl
add
add
jno
arpl
add
add
add
mov
loopne
lock
inc
adc
sahf
les
or
js
gs
mov
iret
push
outsb
and
add
add
mov
add
enter
in
dec
sbb
out
or
loop
es
xor
xchg
adc
mov
add
subb
fnstsw
addl
add
add
inc
jno
xor
add
add
hlt
inc
inc
push
cmp
pop
roll
pop
and
add
add
add
mov
inc
mov
jo
jmp
leave
out
sbb
lods
and
mov
xchg
sbb
add
add
or
ret
inc
mov
add
add
add
add
lret
sbb
fwait
sahf
test
mov
add
pushf
push
mov
add
add
mov
or
aas
cmp
push
jb
xchg
pusha
add
add
and
test
ror
pop
in
call
xchg
aam
dec
fmulp
cld
jl
push
pop
and
mov
out
adc
fmul
mov
add
add
les
jge
loope
test
loope
stos
movsb
shll
data16
dec
sub
push
aad
mov
pop
mov
xor
cli
push
divl
add
add
push
mov
xor
leave
lret
push
inc
add
add
popf
cmpsb
aad
fstl
jle
inc
data16
add
add
icebp
ss
subb
dec
cmp
pop
push
sub
add
add
push
sahf
mov
add
add
add
mov
add
inc
imul
cmp
mov
fs
push
aam
and
add
add
mov
add
add
adc
xor
add
mov
push
mov
stos
fucomip
sbb
add
add
add
add
dec
jno
fmull
add
mov
add
add
pop
or
insl
lock
adc
rcll
and
add
add
andl
repz
push
cmp
mov
sub
outsl
out
add
bound
mov
leave
jno
int3
xchg
add
add
xchg
test
loopne
hlt
roll
mov
shll
add
add
sti
push
jle
jmp
push
sbb
and
fnstsw
stc
cld
pop
jge
loop
aaa
ja
dec
inc
mov
cmp
shlb
push
adc
mov
adc
jmp
fildl
insb
add
add
cmpsb
jbe
pop
inc
adc
adc
mov
jecxz
inc
enter
in
or
adc
xor
pop
adc
lds
lret
xchg
and
fcompl
add
add
push
sbb
pop
xor
add
mov
add
add
xor
pop
sbb
add
notl
add
add
add
add
loopne
lahf
add
add
ds
add
add
cmp
jb
mov
add
add
clc
lds
mov
hlt
imul
add
add
pop
jnp
jg
shll
add
inc
lods
stos
inc
scas
fsts
aad
movsb
sahf
or
push
in
aam
shrb
add
sub
mov
mov
adc
add
jge
sti
or
mov
fldl
imul
push
and
outsl
pop
leave
or
add
add
outsb
or
sbb
nop
xor
mov
stc
lahf
cmp
out
cwtl
jmp
xor
sub
push
fiadds
out
iret
maskmovq
sbb
mov
add
add
jle
iret
adc
xchg
cmp
inc
add
add
add
inc
push
mov
lahf
xchg
pusha
add
add
xor
mov
xchg
test
cmc
mov
add
jmp
jno
mulb
je
dec
mov
push
sbb
sbb
lahf
sub
mov
mov
mov
or
add
add
xchg
xchg
repz
les
das
dec
mov
clc
dec
ljmp
lahf
add
add
add
mov
add
fimuls
leave
mov
add
dec
add
add
dec
jnp
lret
mov
mov
add
add
jae
lods
jo
cld
mov
jmp
mov
cltd
sbb
and
add
push
mov
test
sbb
add
pop
pop
ret
in
ret
lret
sub
pop
pop
int3
test
cld
xchg
xchg
loope
sub
add
add
add
xor
daa
arpl
add
cmp
add
add
inc
and
add
add
test
add
add
mov
adc
pop
inc
imul
sub
add
add
add
add
add
jno
or
jns
cltd
cmc
jge
xor
jge
add
add
push
dec
aam
mov
mov
addr16
cmp
jbe
mov
ds
out
jg
push
scas
push
xchg
mov
ss
xchg
inc
mov
mov
lcall
mov
xchg
call
jl
adcb
xor
mov
push
popa
sarb
insb
mov
sub
add
add
inc
lods
inc
push
enter
add
dec
pop
push
cli
dec
jmp
int3
addb
in
aad
xor
sub
add
add
adc
mov
aam
inc
mov
fisubl
xchg
inc
pop
insl
adc
push
in
lea
or
add
add
es
sbb
mov
add
add
and
loop
adc
sub
shl
aam
cmp
or
pop
ds
jne
xlat
std
imul
pop
scas
adc
and
pop
es
outsb
pop
jns
std
ja
push
ljmp
inc
cmp
cmpsl
movb
add
xlat
dec
aaa
or
je
loopne
rcr
icebp
out
pop
xor
shlb
dec
mov
mov
push
push
and
lds
adc
xor
or
popf
fstps
outsb
dec
cmpsl
jo
icebp
or
jge
sbb
call
arpl
jne
add
cmp
fidivrs
setne
cmpsb
adc
hlt
loopne
testb
jg
xchg
mov
mov
xor
jge
or
aaa
mov
nop
push
divb
push
add
add
jae
jns
mov
dec
mov
sbb
add
mov
in
add
adc
or
add
add
cmp
cs
sub
sub
test
sub
sbb
xlat
popa
cmpl
add
add
addr16
dec
sahf
insl
and
aad
pop
mov
popf
enter
adc
fcoms
loop
pop
mov
pop
int
popf
and
mov
dec
inc
xchg
sti
loopne
xorl
jle
adc
subw
add
sti
fstpl
push
push
jno
sub
dec
add
add
and
add
add
adc
add
add
dec
mov
inc
mov
ret
cmpsl
add
add
rorl
add
add
mov
pop
cmpsb
loopne
sbb
pop
cmp
subb
ja
add
add
and
xor
pop
ret
mov
loopne
cmp
insl
fimull
xchg
xor
test
int3
inc
je
adc
sbb
sahf
jo
jae
outsb
adc
mov
movsl
push
enter
add
lcall
inc
int
mov
inc
fpatan
sub
add
add
fdivr
push
pop
ljmp
mov
mov
pop
push
imul
xchg
leave
pop
and
aas
push
es
push
jp
add
add
mov
pop
inc
add
add
shlb
add
add
iret
xor
inc
add
add
adc
jge
mov
xchg
jno
push
mov
add
shll
pusha
mov
ss
add
add
add
add
push
pushf
mov
push
dec
adc
and
movsl
js
cmovo
ds
add
inc
sub
add
add
popf
gs
mov
test
lods
add
fs
xchg
or
inc
test
ret
mov
add
add
jno
gs
fcom
in
insl
inc
stos
into
and
mov
inc
imul
xor
jno
add
add
dec
add
add
or
add
add
enter
in
lret
and
sbb
adc
ss
jmp
stos
mov
aam
repz
xor
dec
cmp
and
lds
sbb
loopne
inc
and
add
add
cld
addl
dec
dec
mov
pop
test
add
add
add
add
add
push
sub
testb
jl
movsl
fcoml
aas
inc
sub
adc
add
add
add
add
add
call
into
or
lods
mov
add
mov
xorb
addr16
movsb
adc
add
mov
fptan
test
pushf
xchg
nop
and
push
or
andb
inc
sub
add
add
xor
lds
mov
jno
jb
add
add
repnz
lret
dec
mul
adc
sbb
xchg
cltd
aad
fcoms
and
inc
add
add
add
or
add
add
add
pop
or
das
dec
out
cli
je
stos
js
add
pushf
mov
faddp
cmp
adc
cmpb
mov
fisttpl
mov
cmc
inc
mov
repnz
jge
movsb
or
adc
test
faddl
mov
xchg
adc
add
add
daa
xlat
stos
dec
lea
add
xchg
jg
aas
shl
call
out
test
movsl
pop
pusha
mov
out
push
out
mov
add
add
mov
test
push
xchg
and
test
inc
xchg
mov
stos
loope
inc
push
push
cmp
add
add
add
inc
shll
xlat
fsubl
aas
or
add
add
mov
lods
pushf
leave
xor
lea
add
add
ja
push
mov
test
xchg
add
inc
sub
add
add
mov
mov
fisubrs
test
cmp
inc
out
pop
sub
pop
das
in
add
add
repz
add
add
lahf
pop
push
xchg
std
pop
or
movsl
and
sub
out
jmp
cmc
cltd
negb
pop
xchg
pop
xchg
rorl
add
ja
cld
mull
jp
daa
lods
mov
pusha
add
add
xchg
sbb
rcr
in
jle
mov
xorb
xchg
pop
outsb
jg
or
add
add
pop
push
pop
hlt
dec
insb
add
add
dec
push
in
add
lock
add
cmp
jno
nop
sub
xor
inc
push
cld
sub
aad
imul
push
jne
mov
shrl
pop
jg
stos
inc
fnstsw
push
loopne
mov
leave
movsl
aas
mov
ficoml
push
xchg
pop
aaa
pop
leave
inc
jmp
sbb
add
repz
pop
mov
mov
xchg
xchg
mov
add
add
add
add
add
add
cli
mov
push
repz
add
add
mov
fiaddl
cmp
add
or
cwtl
arpl
rclb
pop
cmpsb
sbb
das
aas
movb
lds
or
loop
add
add
aam
cld
imul
mov
pop
incl
add
mov
pop
add
movsb
bound
add
add
bound
xchg
jbe
inc
pushf
sbb
clc
mov
test
popa
sbb
add
add
call
inc
xor
mov
stos
jns
mov
mov
push
mov
add
add
pop
insl
gs
pop
cmp
in
push
cmp
xchg
jb
dec
adc
mov
add
pop
add
fisubrl
add
pop
pop
mov
add
scas
loope
insb
mov
sub
add
add
add
fisubs
inc
ret
dec
add
add
mov
push
icebp
inc
mov
pop
in
mov
and
mov
popa
in
loop
es
pop
mov
sbb
out
pop
lcall
dec
fcoms
andb
mov
add
add
hlt
pushl
mov
add
div
xor
ret
mov
add
add
xchg
adc
jno
push
inc
shl
inc
add
add
add
nop
ss
mov
loopne
test
loopne
pop
mov
add
or
sbb
shlb
popa
iret
ficompl
jnp
mov
int
ja
and
sub
mov
mov
cmp
loop
sbb
das
cmp
mov
fiaddl
add
add
test
ret
ss
sub
add
add
popf
adc
inc
xor
add
enter
mov
pop
jae
cs
ss
dec
movsb
movsl
insl
or
add
add
add
add
add
xchg
out
add
add
inc
pop
in
test
add
inc
das
shrb
push
mov
adcb
xorl
inc
arpl
mov
add
in
pushf
xor
nop
add
add
mov
mov
sbb
outsb
fmull
add
add
add
add
add
aas
cs
fimuls
mov
imul
sbb
sub
add
add
enter
jle
lods
or
jns
inc
mov
sahf
rcr
nop
add
add
stc
or
xchg
add
fmulp
or
add
add
push
dec
nop
ja
add
add
rol
push
mov
mov
cs
inc
mov
add
shll
mov
push
push
scas
jno
sbb
add
mov
pop
mov
decl
jge
mov
incb
cs
add
add
push
dec
int
cmp
push
inc
add
xchg
arpl
iret
push
add
add
movsb
subl
xor
add
stc
and
cs
push
out
xchg
sub
pop
or
add
add
hlt
ror
and
xchg
fnsave
lret
mov
pop
add
add
add
ljmp
add
jecxz
cltd
xor
cltd
push
imul
mov
negb
mov
je
fidivrl
push
les
push
test
add
add
mov
jmp
add
add
mov
add
js
add
add
add
stos
mov
sub
test
cmc
jmp
jne
fldcw
mov
jno
push
dec
repz
dec
add
add
roll
adc
pop
addr16
add
add
in
push
popf
add
add
add
mov
add
add
push
xchg
fisubrl
cmp
adc
mov
xchg
jb
add
das
sub
add
js
mov
repz
mov
es
pop
popf
jge
sub
add
add
xchg
cmc
push
imul
scas
nop
jb
add
add
stc
dec
addr16
movsb
clc
test
sub
add
add
repz
sbbb
xor
add
fcompl
jecxz
mov
or
sarl
fcomps
popa
xchg
sbb
pop
or
std
sarb
mov
add
jge
jns
pop
dec
loope
add
add
mov
js
arpl
mov
sbb
xor
mov
and
mov
push
packuswb
aam
jno
fwait
cmp
test
mov
add
add
sub
inc
scas
sar
movl
sbb
in
xchg
add
or
add
add
add
add
mov
in
xchg
xor
jno
out
adc
ret
dec
gs
fucomi
xor
inc
sahf
stos
or
cld
xchg
ret
add
add
es
xor
pop
mov
xchg
inc
add
add
mov
add
test
mov
repz
add
int3
dec
mov
add
add
or
add
add
sbb
jmp
jle
mov
rclb
xor
cwtl
lret
pushf
mov
cmc
subb
add
es
adc
cmpb
loopne
push
pop
ficompl
and
add
add
test
jne
cmp
insl
fisubrs
sub
xor
ss
mov
sbb
push
xor
ds
incb
mov
mov
test
mov
mov
hlt
aaa
jecxz
fbstp
rcrb
xor
fadds
and
push
mulb
cmc
or
adc
gs
fisubrl
add
add
sub
sub
add
add
add
xchg
adc
and
aas
adc
adc
popa
out
sub
sti
sbb
mov
test
pusha
mov
add
add
scas
pop
movsl
in
mov
hlt
loop
loopne
mov
fwait
adc
lea
ljmp
push
and
cmp
int
lods
push
sbb
add
add
push
mov
into
add
add
add
add
add
mov
sbbl
scas
sub
pop
das
jno
lret
sbb
repnz
out
ret
mov
inc
xor
mov
adc
and
pop
pop
cmc
loope
xor
add
pop
and
add
add
lds
int3
scas
or
add
add
add
add
xchg
or
mov
or
xchg
adc
cli
jbe
jne
or
and
add
add
int
or
xchg
enter
cmp
pop
adc
add
je
add
pop
jecxz
rcrl
cmp
jmp
aas
add
push
jle
test
add
psubusb
xchg
mov
fnsave
jae
sub
add
add
add
add
jmp
adc
pop
sub
and
dec
add
add
and
pop
sarb
mov
dec
mov
mov
and
lret
mov
cld
push
mov
sbb
stc
or
add
add
out
rclb
push
ja
sbb
inc
in
inc
add
add
pop
lds
add
add
add
ret
dec
cmp
or
mov
in
fcoms
cmp
jle
lret
adc
push
shlb
popa
jne
mov
mov
lods
imul
mov
insb
add
add
xor
xor
aaa
mov
out
mov
mov
push
fildl
mov
dec
push
push
mov
ret
or
cld
mull
add
xchg
lcall
outsl
roll
sbb
bound
sub
into
pop
cld
aad
mov
pop
loop
cmpsb
std
data16
ljmp
mov
add
add
cmp
fbstp
cmovs
add
add
lods
outsl
xchg
lock
mov
add
sub
sub
push
xchg
mov
lcall
pop
popa
sbb
and
insl
hlt
mov
add
add
lret
add
add
shlb
sar
adc
add
add
add
es
sbb
mov
push
mov
inc
in
icebp
repnz
jmp
mov
push
call
insl
pusha
mov
adc
push
mov
mov
mov
cli
push
jnp
and
mov
mov
movsl
or
test
iret
in
int
outsl
and
pusha
add
add
mov
adc
dec
add
add
jge
ror
cmp
add
pop
sbb
ficomps
and
add
add
rcr
dec
push
and
add
add
pop
fcmovnb
cmp
mov
jne
mov
jmp
mov
add
jg
mov
sub
xor
mov
mov
mov
out
shr
scas
jb
xor
cmp
pop
push
stos
popa
dec
add
add
mov
jno
add
add
mov
push
and
add
add
sbb
xor
mov
dec
xchg
add
fnstsw
dec
lds
mov
sub
bound
mov
inc
in
jge
popa
fiadds
add
add
daa
inc
dec
mov
mov
repnz
add
add
push
in
mov
inc
sbb
xor
add
add
sub
add
add
or
push
mov
mov
add
inc
and
add
add
mov
movsb
fwait
shlb
add
aam
dec
loop
add
mov
les
lds
push
or
adc
bnd
or
or
pusha
add
add
mov
mov
call
add
add
add
push
call
pop
or
in
xor
mov
add
shll
in
push
movsl
xchg
mov
xchg
push
push
xchg
sbb
cmp
xchg
fwait
test
jns
lea
outsl
xchg
stos
ja
mov
imul
add
add
mov
mov
xchg
mov
add
add
jmp
add
and
add
add
cmp
adc
stos
and
lds
fcomps
mov
sub
add
sub
sbb
add
mov
add
add
aas
outsl
fsubl
xor
repnz
mov
cmpsl
fistpl
rorl
push
cmp
sbb
ss
clc
cmc
insl
or
add
add
aam
lock
mov
mov
lods
mov
mull
out
movsb
in
xchg
cmpsb
sbb
xchg
je
outsl
mov
jmp
icebp
test
xchg
sbbl
push
push
push
mov
push
inc
add
add
push
aam
sbb
jecxz
or
bound
cltd
push
testl
xchg
cmpsl
test
xchg
ja
popa
es
outsb
sbb
js
ret
add
add
shlb
add
add
add
add
in
push
inc
adc
ret
mov
adc
dec
hlt
mov
or
sub
add
add
mov
xchg
fldt
icebp
push
stc
ffree
jmp
lods
xor
nop
insb
add
add
pop
in
dec
icebp
sbb
imul
jnp
pusha
add
add
push
or
add
add
roll
test
add
or
aam
cmc
mov
mov
mov
jb
bound
out
mov
sub
mov
subb
add
mov
add
mov
jno
push
dec
cmp
popf
popa
push
imul
sarl
cmp
add
add
inc
mov
mov
add
inc
icebp
sbb
shll
add
add
lds
mov
je,pn
scas
in
add
pop
stos
adc
outsb
cmp
mov
das
enter
or
adc
push
jnp
adc
ss
add
add
dec
sbbb
jmp
jmp
add
rcrb
inc
std
mov
call
push
lahf
cmp
mov
mov
xchg
js
cmpsl
lock
lods
ficoms
push
lock
repnz
icebp
notl
adc
dec
enter
jp
mov
xchg
int3
pop
lds
outsb
lock
out
and
xor
idivb
addr16
scas
lods
aaa
call
xchg
and
in
cmp
loope
xor
fldt
add
lret
scas
es
xlat
je
sbb
pop
xorb
ret
mov
data16
mov
sub
push
outsb
push
sbb
or
shlb
aam
pop
gs
or
push
mov
test
fistl
aaa
popf
and
add
add
add
add
pop
pop
mov
add
add
pop
idivb
out
leave
adc
add
aam
jp
leave
cli
insl
mov
dec
lods
jo
mov
add
add
jge
sub
gs
movsl
push
mov
lret
mov
add
adc
dec
pop
jge
mov
add
add
sub
shrb
loope
sbb
in
xchg
mov
add
add
lcall
fneni(8087
shl
push
shlb
add
add
shl
cmc
mov
and
add
add
mul
js
xchg
andl
add
sbb
cmp
dec
add
add
jnp
lds
and
movsl
mov
add
or
add
add
mov
push
or
ss
jecxz
xchg
cwtl
ljmp
jbe
xchg
mov
xor
mov
sbb
cmp
sub
add
add
jns
inc
mov
or
sbb
addr16
sbb
adc
mov
loop
in
push
lds
das
lcall
outsl
lea
arpl
xor
jnp
mov
fsubs
add
xor
and
shrb
mov
cmp
shr
cmc
xchg
insl
xchg
jbe
mov
imul
add
add
out
push
cmp
test
test
mov
mov
outsl
leave
shr
aam
mov
mov
add
testb
add
repz
xchg
sub
cmpsb
lret
or
movsl
xchg
into
jne
insl
aas
and
sub
add
add
add
aas
dec
mov
adc
mov
inc
mov
or
mov
mov
lods
sub
jl
sub
add
add
push
out
push
jb
inc
xchg
and
add
in
jge
xor
call
orl
add
adc
sbb
pop
and
add
add
jge
insl
or
inc
cmpsb
stos
sbb
xor
flds
xor
add
add
or
into
xor
sbbl
add
add
divl
add
das
lock
adc
mov
test
mov
sub
lds
mov
cmpsb
sub
add
add
inc
sbb
loopne
mov
cmpb
mov
add
add
mov
mov
shrb
mov
sbb
sbb
add
push
push
loopne
pop
pop
push
imul
imul
jl
dec
adc
lds
jle
cs
dec
ss
jmp
mov
in
pop
in
shll
rolb
mov
add
rcl
inc
or
push
sbb
std
test
aas
mov
jecxz
outsl
stos
and
jno
insl
cs
add
add
mov
mov
jo
insl
shl
add
cmp
xor
add
add
mov
adc
add
add
cltd
dec
leave
cmpsb
mov
popa
sub
clc
and
dec
js
call
jp
dec
push
test
add
dec
or
add
add
cmp
sub
add
add
rcrb
aas
fyl2xp1
es
inc
lret
sub
add
add
lcall
add
mov
xlat
push
dec
dec
mov
inc
jg
inc
sbb
mov
mov
jnp
mov
dec
insl
daa
or
dec
mov
cmp
rcll
mov
outsl
out
push
sbb
add
add
add
add
mov
addr16
add
add
add
jge
mov
idiv
loopne
ljmp
iret
xor
jmp
out
jnp
lods
xor
cmc
icebp
push
ss
jmp
iret
cmovle
ret
jae
pop
mov
ret
or
inc
add
add
push
div
push
sahf
fdivrp
in
add
jne
ljmp
add
pushl
fdivs
loopne
fcmovnbe
adc
imul
jg
mov
jge
mov
into
jb
push
mov
int3
sub
add
add
add
add
pop
loope
mov
addr16
arpl
inc
cwtl
push
int
fiaddl
add
fisubrs
les
iret
js
mov
aam
out
mov
int3
sbb
lcall
pop
aam
pop
jmp
add
jbe
arpl
inc
mov
add
add
aad
xor
clc
xor
adc
repnz
add
add
jge
mov
adc
aad
cmc
cmpsb
dec
loop
xchg
sti
ror
and
cld
bound
mov
insl
mov
jo
loop
add
add
xchg
mov
cmc
jg
ret
xchg
mov
mov
add
add
push
sbb
mov
repz
dec
jle
ljmp
ret
enter
inc
xor
mov
add
add
inc
mov
aam
cli
clc
push
adc
pop
lret
add
add
add
aas
fdivr
jns,pt
mov
cs
notl
xchg
adc
sbb
int3
inc
sbb
pop
jbe
dec
dec
jo
outsl
mov
cmpsb
jo
inc
add
add
push
mov
add
pop
mov
shr
and
add
arpl
or
test
addr16
add
add
idiv
out
lods
xchg
push
mov
jge
mov
cmpsb
mov
lds
add
push
mov
and
or
add
add
add
adc
add
add
fisttpll
ljmp
fimull
adc
leave
idivb
push
mov
cmpsb
mov
push
sub
push
mov
xchg
fbld
jecxz
or
inc
gs
xchg
mov
pop
std
in
jb
movsb
imul
pop
shrb
hlt
jle
fnstenv
gs
test
lahf
or
add
add
mov
add
or
arpl
call
inc
dec
mov
push
mov
inc
add
add
cs
sbb
jp
lahf
sub
add
add
jne
mov
or
pop
notb
ljmp
outsb
leave
pop
push
popf
fsubl
nop
cmpsl
pop
pushl
mov
int3
push
pop
subb
fildl
add
add
push
pop
lret
mov
pop
pushf
imul
imull
cmp
adc
push
stos
xchg
adc
sti
xchg
mov
add
add
inc
aas
push
sbb
jne
das
nop
lret
test
push
lea
xchg
shl
cmc
pop
fwait
sub
inc
push
or
mov
repz
adc
imul
fadd
push
bsr
stc
pop
push
sbb
add
add
jns
sub
fisttps
add
add
lcall
cmpsb
setle
sbb
add
mov
xorb
add
dec
add
add
mov
mov
add
data16
sub
add
add
popa
mov
cwtl
negb
xor
stos
aad
iret
mov
add
add
lret
mov
add
add
sahf
xchg
inc
add
add
sbb
repz
pop
mov
mov
or
cwtl
sbb
push
int3
jmp
in
lds
pop
xchg
cmp
push
es
scas
xchg
stos
push
or
inc
mov
jp
loopne
mov
add
add
pusha
add
add
lcall
sbb
addr16
inc
add
add
clc
add
add
add
movsb
or
in
push
lcall
sarl
push
es
mov
std
cld
pop
bound
sarb
cmp
adc
xchg
idivb
nop
xchg
push
jge
iret
lret
pop
rcll
add
loope
add
and
add
add
mov
hlt
mov
int3
xchg
cmp
sub
out
out
sti
cli
xor
fninit
inc
dec
mov
mov
add
movsl
xchg
ss
fsubrs
add
add
out
lret
or
add
add
jl
repnz
fwait
mov
cwtl
mov
pop
xor
xchg
lret
iret
stos
cmp
sbb
or
dec
mov
mov
jnp
lods
or
arpl
xchg
aaa
dec
mov
push
lahf
and
addr16
and
add
add
lret
sbb
add
pushf
jns
or
add
add
sub
add
add
ds
rcll
pushf
test
add
add
shr
xchg
loopne
jge
jecxz
adc
loope
leave
or
mov
cmpl
pushf
jne
jle
aaa
fsubr
outsb
fs
ficomps
jmp
xchg
aas
test
add
xorb
into
insb
mov
icebp
hlt
scas
mov
mov
add
push
cli
pushf
mov
push
sahf
test
int
scas
adc
in
imul
mov
adc
sub
add
add
cs
ljmp
sti
xchg
push
fs
mov
insb
add
add
scas
lods
add
jge
push
test
lret
fnsave
add
cmpsl
or
lods
add
addl
add
add
insb
mov
int
adc
push
insb
mov
mov
fdiv
push
fistps
add
add
sub
add
add
push
and
mov
dec
and
add
decl
adc
das
mov
mov
movsb
add
mov
ja
test
or
aaa
xchg
add
add
add
idivl
dec
dec
xchg
lahf
addr16
arpl
mov
cmp
test
loop
data16
test
pop
and
addb
outsb
jmp
add
add
adc
add
add
aad
das
mov
jae
and
fwait
rcrl
jne
dec
xor
repnz
stos
lahf
xchg
scas
inc
fmulp
pop
sbb
test
enter
add
add
add
add
daa
std
push
sbb
pop
mov
add
add
add
or
add
add
sarl
mov
test
in
jbe
iret
and
add
add
stc
clc
dec
ljmp
ljmp
add
add
inc
or
mov
lcall
mov
or
pop
xor
imul
mov
or
add
add
add
pop
pop
inc
add
add
popf
adc
or
std
aad
mov
dec
add
lcall
ja
pop
sub
mov
add
add
stos
pop
mov
hlt
aaa
pop
jle
movsb
add
mov
icebp
out
jmp
iret
pop
mov
into
sub
add
add
or
add
add
hlt
fcmovnu
pop
int
pop
xchg
mov
stc
pop
insb
mov
ja
cmc
or
jno
dec
bound
lods
jmp
add
add
add
add
mov
jns
mov
lock
scas
pusha
mov
pop
leave
pusha
add
add
mov
fs
add
repnz
mov
scas
and
test
ja
push
mov
sub
sbb
ja
xor
dec
out
imul
push
sub
pop
cmp
mov
outsl
sbb
xor
mov
test
add
xchg
popa
leave
mov
add
adc
ficomps
mov
inc
loopne
jecxz
fnsave
aad
mov
dec
push
cld
push
push
jecxz
loopne
and
xor
out
mov
add
imul
incb
xchg
xor
leave
call
mov
test
push
aam
or
jg
xor
shr
mov
out
mov
fdivrl
cmp
add
add
mov
jbe,pt
lock
mov
push
dec
mov
pushf
and
sbb
sahf
mov
mov
push
push
pop
xlat
xchg
in
cmp
sbb
jns
sbb
arpl
add
fninit
out
sbb
clc
dec
sbb
outsb
ret
mov
pop
push
mov
fistl
mov
hlt
ljmp
scas
mov
inc
add
add
shll
add
add
or
orl
aad
outsl
sbb
daa
fcomps
pop
mov
add
mov
jno
hlt
xchg
negb
jne
shll
mov
mov
jecxz
leave
xchg
push
rcl
or
adc
mov
inc
cmpsl
pcmpeqw
cmp
pop
ss
nop
cld
cmp
pop
push
aam
repnz
jge
mov
cwtl
adc
mov
dec
xor
xorl
test
add
add
mov
in
add
or
add
add
add
sub
pop
imul
hlt
iret
and
add
add
je
lret
nop
out
inc
jg
dec
adc
js
mov
mov
inc
and
add
add
adcb
or
mov
cmpsl
xchg
pop
icebp
xchg
or
add
add
xchg
inc
add
add
or
add
add
gs
aam
popa
mov
mov
aaa
xchg
adc
cmc
jg
add
loopne
pop
test
add
dec
inc
add
add
fiaddl
xor
movsl
push
inc
hlt
sbb
sub
je
or
leave
aam
adc
mov
cltd
rol
pushl
add
add
add
adc
add
add
fsubs
add
sbb
add
add
mov
add
add
add
add
cmp
jl
ret
shlb
leave
push
pop
inc
mov
incl
cli
dec
pop
mov
mov
pushf
jns
lret
repnz
xchg
daa
push
incl
ror
dec
in
scas
shlb
mov
lcall
sub
add
add
mov
add
add
lret
pop
push
mov
test
fs
mov
add
aad
inc
mov
add
add
sbb
outsb
push
je
ds
es
aad
add
dec
mov
in
and
mov
inc
add
add
dec
push
push
daa
inc
aad
xchg
add
add
pop
stos
or
add
add
and
dec
or
rcr
pop
repnz
add
add
add
pop
fisubrl
add
or
fisubrs
lcall
push
and
jl
adc
mov
mov
pop
hlt
int
dec
mov
pop
fisttpll
and
add
add
xor
scas
xlat
push
leave
dec
cld
xlat
sbb
add
dec
int3
out
data16
ret
ficomps
ficoms
xor
mov
mov
xlat
jmp
mov
stc
push
xchg
mov
pop
fdivr
sbb
shl
pop
mov
mov
iret
out
sahf
sub
add
add
outsb
movsb
aad
call
add
add
sbbb
mov
add
add
imul
or
insl
fildll
enter
push
popf
cli
fnstenv
add
dec
imul
mov
int3
cltd
outsb
lret
iret
test
aad
add
push
pop
out
sbb
add
add
add
add
add
mov
mov
leave
dec
jno
sbb
mov
xor
in
in
in
fwait
outsb
nop
icebp
orb
add
add
sbb
cmpsl
add
add
add
ffreep
leave
sbb
add
add
stc
push
pop
xor
data16
jle
mul
movsb
std
push
sbb
add
add
xor
or
lret
fsubrl
or
add
lahf
adc
add
add
add
add
scas
pop
lock
add
add
add
add
add
bound
and
repnz
cltd
push
push
push
push
cld
cwtl
repz
rolb
cltd
xor
add
add
or
imul
and
lret
rol
je
movsl
lock
add
add
pop
add
pop
lahf
lret
int3
out
ds
adc
and
mov
push
push
jg
test
jns
adc
mov
add
pop
ss
ficompl
inc
fbstp
pop
xchg
adc
popa
loopne
add
add
ljmp
mov
ljmp
aad
add
add
clc
aaa
add
add
add
sbb
popf
insb
mov
jae
add
add
or
add
add
rcl
fcomps
adc
cmp
adc
add
add
enter
out
std
cmp
je
mov
push
sbb
add
add
add
pop
out
pop
ljmp
jp
mov
mov
popf
das
into
repz
add
add
lcall
ds
push
repnz
out
push
inc
pop
xchg
insl
add
into
inc
xorl
mov
inc
lahf
add
sti
add
add
add
inc
fimuls
or
add
add
push
fwait
xchg
rcll
jge
lods
fstl
hlt
cmc
fistps
nop
int3
inc
ss
add
add
jecxz
int3
iret
and
add
std
push
push
xchg
push
adc
sub
mov
add
add
xor
add
scas
push
sub
add
add
bound
mov
push
dec
mov
jae
popa
mov
cmpb
add
add
push
stc
add
add
add
add
add
jne
out
sbb
stos
sbb
loope
lahf
push
shll
pop
cmp
iret
xor
rclb
adc
fsubs
add
add
std
cli
xchg
subb
inc
sbb
xor
aaa
repnz
jl
orb
jmp
out
pop
adc
mov
add
add
insl
int
push
sbb
add
or
add
add
jge
sub
mov
repnz
rolb
xchg
out
sub
leave
add
xchg
call
jecxz
inc
and
add
add
and
mov
and
jno
test
push
cld
lea
xchg
mov
xchg
inc
bound
add
xchg
mov
data16
add
add
add
pop
icebp
sub
add
add
pop
lods
sti
xchg
jno
xchg
mov
xchg
jnp
lods
fidivrs
add
add
mov
add
mov
sahf
das
lret
xor
jnp
pop
dec
jno
xchg
pop
mov
add
add
add
movsl
sub
xchg
mov
add
xor
mov
and
in
hlt
xchg
ds
xchg
scas
testb
and
push
jg
push
xchg
add
add
and
add
add
sub
call
xchg
mov
mov
mov
xor
sbb
inc
pop
cwtl
mov
gs
add
add
sub
add
add
inc
add
add
loope
pop
ror
pop
sti
enter
popf
and
movsl
nop
xchg
mov
add
add
add
jp
in
pushw
adcl
mov
add
add
push
or
shlb
or
mov
inc
mov
or
jb
loop
mov
push
negb
add
add
aas
mov
imul
pushl
hlt
jge
sub
loopne
pop
nop
cmp
aas
ret
rcl
lock
into
stos
out
sbb
movsb
icebp
adc
adcb
cmp
push
adc
dec
cmp
jae
cmp
arpl
test
add
dec
xorl
enter
add
add
xchg
scas
out
jp
popf
into
add
add
add
mov
push
dec
add
add
mov
sub
pop
clc
dec
sbb
aam
cmp
pop
iret
or
add
add
adc
add
add
les
pop
jmp
repnz
push
add
add
daa
test
enter
add
dec
jbe
lret
repz
jo
inc
mov
adc
jl
xchg
sub
add
add
mov
mov
dec
fidivrs
and
push
incl
mov
js
aas
and
add
add
sahf
outsb
mov
mov
bound
add
add
imul
pop
jbe
jne
xchg
push
fmul
mov
add
add
subl
add
add
pop
pop
ret
iret
adc
rorl
clc
mov
ret
add
add
adc
popa
adc
add
add
cmp
jle
jo
lcall
pusha
add
add
pop
push
mov
adcl
cwtl
mov
shrl
xor
sub
cs
fld
inc
sbb
out
jle
insl
insb
mov
int
or
add
add
mov
add
cld
jl
mov
int3
mov
pushf
jns
mov
sti
aam
test
nop
ja
add
add
ret
hlt
out
add
out
pop
int3
mov
or
fldcw
imul
filds
add
fidivrl
xchg
mov
ret
cmp
xchg
loope
xchg
add
xchg
cmp
mov
mov
ljmp
jle
sbb
mov
add
add
cld
mov
mov
cmpsb
jno
mov
mov
aad
jae
int3
mov
mov
push
mov
xlat
xor
aam
pop
rol
cmp
add
add
inc
mov
cwtl
and
fstpl
fcompl
add
negl
xchg
jae
aad
add
add
add
loop
dec
mov
loope
or
add
fsubr
das
xor
add
add
inc
add
mov
imul
xchg
inc
add
add
sbb
xchg
lret
add
jo
hlt
sub
add
mov
adc
aaa
xchg
loopne
adc
lds
scas
jg
icebp
sarl
mov
cmp
enter
add
cld
jecxz
mov
push
int3
mov
loope
jg
mov
pop
cwtl
or
add
add
pop
xor
cmp
add
mov
adc
adc
out
lods
cwtl
adc
add
add
dec
mov
pop
adc
or
add
add
add
and
add
add
sbb
pop
loope
iret
add
add
mov
dec
daa
push
mov
pop
sbb
jecxz
xchg
add
or
add
add
mov
add
jo
fadds
add
shl
cli
xchg
rorl
jge
jmp
jle
or
add
add
insl
xlat
out
sahf
push
stc
pop
xor
push
lods
pop
cwtl
les
dec
mov
mov
push
fidivs
cs
adc
add
cmpsb
and
in
sbb
add
add
push
mov
iret
js
dec
adc
add
add
push
shl
sub
add
xor
and
add
add
in
lds
sbb
cmpsl
test
addb
add
fcoml
mov
add
add
ljmp
add
sarl
cltd
push
repz
add
add
cmp
xchg
xor
jne
mov
add
add
pop
aaa
int
and
or
xchg
lock
and
imul
pusha
mov
jmp
imul
inc
mov
inc
adc
in
push
inc
add
add
fmuls
lock
add
add
or
push
mov
xchg
lods
adc
add
mov
push
or
sahf
frstor
mov
xchg
sub
add
add
push
sbb
xor
and
cli
pop
mov
movntq
push
add
add
xchg
mov
mov
mov
leave
jp
and
add
sbb
add
add
leave
mov
mov
xchg
sbb
ret
mov
testl
mov
and
add
dec
pushf
fdivp
cltd
mov
sub
mov
push
mov
jge
mov
shl
sbb
push
dec
test
inc
cmp
add
fiadds
inc
add
add
cs
push
push
mov
mov
add
adc
nop
out
out
popf
and
add
add
pop
aaa
cmp
das
jge
push
inc
and
add
add
xor
fisttpll
cmpsl
dec
jo
mov
push
sbb
push
push
xchg
push
mov
test
jle
aam
les
sub
pop
mov
int3
adc
scas
lods
rol
xchg
daa
je
lods
testl
add
add
cwtl
test
lahf
and
data16
test
sub
push
xor
or
test
mov
fs
lock
dec
mov
dec
mov
and
add
add
test
add
add
jns
mov
mov
inc
sti
lods
jmp
cmp
dec
shlb
xchg
add
popa
xchg
inc
cwtl
xor
add
mov
xchg
sti
int
inc
mov
xchg
mov
clc
inc
push
int3
in
incb
xchg
mov
dec
adc
mov
add
add
add
add
jg
inc
push
xor
or
gs
lret
cmpsl
sub
add
add
jnp
sti
pop
pusha
add
add
cmpsb
in
pop
mov
insl
mov
mov
push
andl
pop
dec
femms
pop
mov
mov
mov
addb
fcmovbe
jbe
push
sbb
push
cmpsl
mov
push
loope
mov
xchg
fs
mov
mov
sub
xchg
shll
xchg
mov
and
fsub
mov
jge
lret
jl
inc
iret
xchg
ret
fistl
mov
mov
adc
into
pop
and
add
add
je
cmpsb
imul
adc
aad
push
cwtl
lahf
xor
fadds
add
add
xlat
pop
inc
lret
mov
sub
pusha
add
add
popa
in
xor
xor
push
mov
mov
in
lock
sarb
ror
mulb
loop
out
repz
add
add
adc
movsl
jmp
sub
mov
cmp
jbe
mov
pop
in
xchg
iret
dec
or
xor
and
add
add
inc
add
add
daa
jne
fimull
test
cs
xchg
mov
sti
loop
or
add
add
xor
lods
orb
cmp
sbbl
insl
jnp
add
stos
xchg
inc
es
mov
jmp
jb
xor
es
stos
ja
xchg
or
adc
icebp
outsl
adc
cmp
add
add
add
add
push
pusha
add
add
dec
sub
mov
testb
adc
mov
and
xor
adc
push
orb
add
add
das
cmpsl
cmp
mov
pop
mov
add
cmp
add
stc
lock
mov
pop
cmpps
push
mov
sub
aas
ficomps
orl
add
mov
movsb
pop
ret
icebp
divb
add
add
mov
xchg
iret
jo
lock
add
add
loop
ljmp
or
add
add
ds
pop
dec
popf
mov
in
test
push
popa
jmp
rorl
rolb
inc
addr16
adc
add
add
add
repnz
jge
jb
mov
cmp
cwtl
shl
ss
movsb
xlat
bound
les
add
clc
nop
xchg
xor
std
mov
add
dec
push
mov
or
std
cmc
add
push
ja
sub
test
mov
scas
cmpsb
inc
add
popa
cltd
rclb
rorb
lea
mov
mov
insb
add
add
pop
testl
stos
pop
loop
mov
mov
xor
add
insb
add
add
cmpsb
push
mov
add
add
jg
add
add
outsb
lcall
add
add
loopne
out
jb
xchg
pop
iret
xchg
jecxz
orb
loop
push
dec
sbb
aad
and
rclb
mov
scas
jle
test
mov
add
jmp
data16
jge
or
xchg
jae
repnz
cmp
mov
dec
add
add
jns
push
pop
fnstenv
lret
cmp
sbb
fstpt
cltd
jmp
dec
inc
add
add
insl
pop
lods
out
outsl
and
push
loopne
xor
add
pop
inc
push
inc
add
add
xchg
dec
and
dec
jnp
xor
pop
into
jge
mov
add
jne
jl
call
fcoml
add
fldl
xor
pusha
add
add
cs
movsl
test
sti
push
sub
adc
sbb
pushf
aam
pushf
pushf
inc
mov
jb
adc
inc
inc
popa
movl
test
add
mov
into
pop
sub
popa
pop
repnz
cli
in
stos
pop
inc
add
add
cmc
mov
pushf
sub
sbb
pop
and
pop
scas
mov
test
add
add
in
filds
mov
add
inc
scas
or
add
add
add
add
mov
hlt
push
insl
add
add
add
add
aam
aas
sub
shll
add
add
enter
imul
movsb
jbe
jg
lcall
sbb
pop
addr16
add
add
movsb
sti
sbb
xchg
cltd
dec
push
mov
rcl
xchg
rcrb
sbb
jnp
fwait
adc
jb
or
add
add
mov
or
add
add
mov
mov
sub
or
jne
jl
pop
adc
or
add
add
jo
addr16
mov
add
push
ret
or
add
add
dec
or
add
add
sub
mov
test
rcrb
pop
or
lods
out
add
jne
pop
adc
jmp
xchg
mov
out
test
fcomip
push
sbb
insl
mov
or
add
add
jae
fmuls
push
dec
inc
pusha
add
add
mov
rcll
pop
add
add
add
add
in
push
int
sub
and
lret
aas
fs
mov
add
or
add
add
add
add
mov
mov
dec
sub
mov
shlb
cmp
jns
fiadds
push
mov
add
cmovl
jo
push
and
add
add
in
mov
push
pop
jle
sub
add
add
mov
jns
mov
add
mov
cmp
add
mov
out
lods
inc
and
and
add
add
nop
add
push
aad
push
xorb
pop
into
dec
out
mov
cmpsb
cmp
adc
cltd
cltd
test
cltd
scas
test
cmp
xor
add
add
xchg
icebp
icebp
sub
notb
jle
xor
add
add
mov
sahf
mov
inc
adc
int
aas
add
jno
ss
ja
jle
push
insl
addr16
mov
dec
mov
add
bound
imul
aam
add
jno
aad
cmc
and
and
add
mov
out
test
sub
add
add
ret
mov
addr16
add
add
push
out
jle
xlat
xor
int3
cmp
adc
fidivl
les
jmp
mov
cmpsb
lahf
push
jo
add
add
add
cmp
xchg
mov
push
and
jl
rolb
cmp
fisubrl
xchg
mov
add
add
adc
push
push
adc
dec
add
add
ss
enter
add
add
mov
xchg
into
js
les
add
rorl
test
cs
sbb
adc
inc
mov
mov
mov
lcall
pop
push
mov
add
test
rcrl
adc
in
push
jnp
pop
pop
cmpl
into
rol
ljmp
mov
loopne
xchg
push
inc
push
jne
xor
aam
dec
add
add
cld
lret
xchg
jbe
mov
jle
xor
cmp
sub
add
add
andl
xor
sbb
dec
jg
jnp
stc
xchg
sub
add
add
adc
hlt
and
add
sbbb
fcmovb
push
xchg
movsb
mov
add
es
cmp
popf
movsl
movl
xlat
rolb
lock
dec
sbb
or
add
mov
jb
popa
mov
icebp
dec
add
add
xor
cmp
fmul
shl
push
imul
dec
sub
sbb
movsl
mov
adc
nop
shlb
inc
inc
fiadds
clc
push
mov
cltd
sbb
test
enter
add
add
dec
add
add
cltd
and
add
add
int
mov
ror
inc
sar
fnsave
ljmp
js
jbe
shll
out
insl
jle
mov
and
cmp
add
add
add
or
lock
push
mov
mov
mov
into
lods
out
out
pop
jbe
and
inc
mov
out
outsb
scas
push
jmp
add
add
out
mov
add
add
aad
leave
cmc
add
add
add
or
add
add
push
xor
add
add
in
mov
repz
daa
pmulhuw
pop
or
ss
mov
int3
lahf
push
sub
add
add
add
cmp
add
add
pop
test
inc
aas
cmp
adc
push
ss
xchg
push
test
dec
cmpsb
push
add
mov
jp
add
in
sbb
add
add
add
adc
jno
push
mulb
mov
mov
push
je
push
pusha
mov
cmpl
add
xor
js
push
pop
cld
sub
loopne
iret
xor
cltd
add
cmp
add
dec
add
add
mov
ja
aad
push
aaa
inc
dec
test
pop
cld
arpl
push
test
add
add
or
mov
imulb
inc
movsl
jbe
or
pop
cmp
add
dec
add
add
insl
pusha
mov
daa
addr16
aas
nop
in
es
add
add
mov
mov
loopne
inc
aaa
mov
loope
xchg
aad
push
sbb
mov
xor
jmp
add
xor
and
add
add
mov
add
pop
pop
arpl
add
js
shrl
addr16
mov
aad
mov
jb
addr16
leave
out
stos
or
sub
add
add
hlt
mov
pop
adc
add
add
add
insb
mov
add
add
add
add
add
jb
rcrb
push
lock
pop
sahf
iret
shlb
ds
add
add
add
and
add
add
leave
cltd
jle
adc
mov
cld
inc
cmp
inc
rcll
pusha
add
add
leave
xchg
and
adc
mov
xchg
ljmp
hlt
jo
sti
pop
jns
stos
cwtl
add
xchg
inc
mov
add
add
add
scas
push
xor
dec
shll
pop
mov
sbb
push
xchg
xchg
gs
rcll
sub
sub
add
add
mov
add
cli
leave
mov
mov
add
shlb
jae
fimuls
or
inc
fs
arpl
sub
iret
pop
dec
mov
jae
imul
mov
or
jne
cmp
xchg
ljmp
inc
addr16
mov
insl
xchg
cmp
mov
iret
jns
fistpll
fs
adcb
sbb
xor
adc
mov
sbb
pop
addr16
inc
add
add
add
cmpsb
in
mov
pushf
mov
mov
add
add
mov
pop
adc
loope
dec
add
add
bound
add
add
mov
sbb
cld
add
add
add
push
xlat
mov
dec
mov
xchg
leave
leave
jno
arpl
in
out
cmp
lret
aad
inc
xor
push
add
js
cli
mov
test
xchg
insb
mov
add
add
add
fisubl
pop
ljmp
cmp
xor
sub
shl
negb
add
add
lret
aas
adc
fisubl
insb
mov
pop
jns
mov
xor
mov
into
outsb
inc
daa
or
add
add
mov
add
add
mov
mov
mov
jne
fnsave
jnp
inc
jmp
roll
add
sub
add
add
nop
jmp
adc
mov
xchg
inc
add
add
test
add
add
gs
add
add
push
sub
aaa
xchg
or
cmpsl
arpl
fmull
pop
arpl
add
and
aaa
jmp
enter
add
mov
sarl
aad
cmp
add
fsts
mov
lea
xor
int
pushf
jo
aam
icebp
icebp
mov
add
mov
mov
in
mov
mov
iret
dec
add
add
dec
xlat
daa
sbb
mov
mov
pop
stc
push
inc
jecxz
dec
ljmp
scas
pop
and
add
add
pop
fcompl
add
jmp
jmp
call
mov
inc
adc
stc
pusha
mov
inc
mov
popf
stos
fstpt
lods
cmp
add
add
rcrl
inc
add
add
lret
into
movsb
clc
mov
jmp
rolb
inc
imul
jle
mov
push
aaa
pop
push
pop
stos
lahf
inc
cld
xchg
mov
sahf
jle
dec
mov
jno
dec
mov
test
push
std
mov
xor
aaa
bound
add
add
ss
mov
jo
pop
fsub
pop
adc
jb
push
jo
test
push
mov
add
sahf
sub
add
sub
jp
inc
and
mov
insl
imull
lret
and
add
daa
lods
les
or
syscall
sub
add
mov
rcrb
das
jecxz
and
sbb
lret
hlt
add
add
add
xchg
sub
xor
cmpsb
aam
push
mov
out
jl
out
mov
popa
jbe
mov
fwait
jbe
sub
mov
add
add
mov
pop
rolb
fcomps
psrld
sub
in
jg
adc
mov
sub
xlat
or
cmp
xor
test
push
gs
vmread
mov
mov
int3
inc
mov
into
shll
add
add
shl
in
aaa
jo
mov
mov
ud1
dec
lret
add
add
jle
and
arpl
xchg
adc
push
adc
in
dec
insb
mov
sbb
test
mov
mov
sbb
mov
fimuls
jmpw
inc
jge
adc
mov
inc
and
sub
cmpsl
push
shl
push
ficoml
aas
dec
ss
data16
imul
cmc
push
lds
add
add
js
mov
ss
aaa
sarb
js
add
fstpt
insb
mov
add
add
es
add
mov
add
or
fiaddl
push
sahf
stc
or
add
add
add
mov
mov
daa
inc
mov
repz
jle
ds
lds
into
sub
or
sub
add
add
mov
movsb
popa
inc
fdivs
bound
mov
xchg
mov
movsl
mov
cmp
outsl
lret
es
fcmovbe
aad
sahf
bound
push
lret
jg
mov
inc
jmp
add
sarl
xchg
mov
xor
sub
push
add
cltd
shlb
lock
add
add
add
rorl
or
ds
mov
loope
outsb
rcll
and
adc
inc
mov
mov
cltd
rorb
mov
outsb
and
mov
in
mov
outsb
jbe
pop
pop
or
test
in
jl
add
add
xor
add
jmp
popf
rcrb
cmp
mov
or
xor
xor
mov
shll
pop
dec
add
add
add
and
push
fisubs
je
les
sahf
inc
scas
sbb
add
rcrl
inc
xchg
stc
adc
icebp
push
sbb
adc
sbb
xchg
mov
xchg
jae
in
js
add
add
add
iret
jmp
pop
add
push
xor
out
xchg
or
lock
shlb
push
mov
mov
addl
movsl
std
cwtl
sti
das
incl
mov
dec
mov
fsubr
or
test
xchg
pop
adc
loop
jp
popf
xchg
push
pushf
or
lods
dec
mov
xchg
add
add
jae
add
add
cmp
sub
pop
rcrl
sub
add
add
add
sbb
daa
xchg
mov
add
es
push
pop
data16
rolb
jge
push
pop
sbb
clc
fisttps
mov
ret
mov
or
xchg
and
add
add
sub
pusha
mov
bound
mov
add
sub
ljmpw
fisttpll
dec
repz
daa
sbbl
add
add
or
mov
in
mov
test
add
jae
sbb
push
cmpsb
sarl
lcall
enter
lods
gs
xchg
or
dec
outsb
sbb
es
lcall
and
add
add
xorb
add
add
orb
add
fcoml
addr16
enter
in
sbb
icebp
dec
adc
add
fiadds
add
or
push
repz
push
mov
add
gs
push
mov
mov
jl
jno
pop
inc
aad
outsl
cltd
into
les
add
add
loopne
insl
sub
add
add
fimuls
scas
lock
lcall
pop
in
jmp
fdiv
std
and
or
mov
enter
mov
pop
jl
mov
std
xor
sub
call
mov
imul
and
or
add
iret
jne
outsb
fstpt
mov
cld
or
add
add
jb
push
bound
aam
mov
jl
mov
adc
mov
add
add
enter
insl
sbb
mov
xor
xchg
lea
jno
clc
push
cmc
jo
mov
xchg
fsubr
push
repnz
addb
cwtl
jp
dec
push
clc
icebp
pushf
sbb
sub
rolb
add
add
pop
aam
loopne
insb
add
add
je
fstpt
pop
xor
jmp
mov
jns
mov
cwtl
js
cmp
mov
add
mov
dec
push
ss
add
jns
sub
imul
fldenv
shll
xor
xor
cmc
adc
adc
iret
pop
cwtl
inc
stos
sahf
clc
and
mov
fstps
adc
sub
add
add
xchg
dec
add
or
outsb
push
enter
aaa
insl
test
add
add
stos
aaa
or
xor
add
or
and
lds
movsb
pop
shr
cmp
xor
fucomp
inc
pop
push
mov
cwtl
pop
add
fsubrs
sub
add
add
mov
dec
subb
add
xor
push
mov
jnp
sbb
mov
pop
subb
mov
cmpl
add
mov
pop
ja
adc
xor
ficomps
or
xchg
ret
aas
xchg
inc
sub
cld
arpl
jle
insl
lea
push
lea
rcrb
test
and
inc
jno
repnz
and
add
add
jb,pn
sbb
mov
fbstp
and
add
add
movsb
xchg
or
add
add
pop
mov
add
push
aaa
mov
movsb
es
cli
adc
and
add
add
jnp
cmpsl
xchg
add
add
add
mov
sti
ficoml
mov
cmp
mov
shll
mov
push
cltd
pop
lock
mov
mov
pop
dec
add
adc
test
negb
roll
add
test
mov
in
jno
mov
add
add
add
pop
je
xchg
iret
mov
mov
aam
push
bound
cli
mov
sub
inc
outsl
addr16
xor
testl
jle
or
mov
add
add
jae
int3
and
add
add
cmp
test
mov
add
add
sub
popa
lret
and
add
add
sub
mov
sahf
iret
adc
xor
mov
movsb
and
cli
mov
add
mov
lahf
out
fmull
outsl
enter
mov
mov
nop
pop
sbb
xor
mov
xchg
dec
push
xor
stc
cmp
cmp
fadds
add
add
inc
cmp
add
adc
or
add
add
mov
lea
rcr
sub
cwtl
int3
inc
fs
jne
xorb
stc
lahf
nop
imul
sub
add
add
push
pop
insl
inc
sbb
fidivs
or
ja
in
sbb
int
nop
pop
mov
add
add
pop
mov
xchg
outsb
and
in
push
popa
adc
shr
loop
xchg
fwait
outsb
jmp
mov
jo
jecxz
test
pop
mov
mov
jl
sub
subl
add
add
push
rcll
je
out
loopne
add
add
movsb
xchg
ja
xchg
sub
xchg
out
sub
add
add
jno
cmp
add
add
add
aad
push
jmp
fsubl
cmc
add
lret
dec
pop
repz
mov
int
out
movsb
sbb
mov
jne
push
int
rorb
mov
repz
popa
nop
mov
mov
aas
push
mov
push
sub
cmpb
lock
add
add
cmpl
cld
and
add
add
fucomi
inc
in
dec
mov
out
add
add
add
add
add
add
add
ficompl
xorb
data16
dec
mov
push
xchg
ss
mul
sar
sub
inc
push
pop
cld
add
dec
push
xchg
in
adc
loop,pt
scas
clc
std
jb
arpl
add
add
add
mov
mov
dec
pop
jbe
xchg
mov
cwtl
mov
mov
jbe
add
add
stos
seto
add
add
add
sbb
inc
add
add
out
sbbb
jno
fbstp
sub
add
add
mov
xor
push
jne
mov
shrb
add
add
fldcw
add
add
mov
pop
mov
add
sub
add
add
mov
pop
testl
sub
and
add
add
cld
repz
pop
mov
adc
or
add
add
xchg
aad
mov
add
add
in
scas
sahf
divl
add
ret
cwtl
dec
push
cmpsl
sbb
add
mov
add
add
pop
push
popl
xchg
lods
or
outsb
mov
push
stos
out
or
and
add
add
cltd
xor
jmp
leave
notb
mov
add
lcall
add
sub
andb
add
add
lods
cmp
xchg
cmpsb
arpl
xlat
jbe
xor
jns
push
lcall
lea
movsl
lds
inc
mov
or
add
add
popf
ficomps
add
add
imull
adc
pop
sbb
jle
pop
cmp
jle
shll
xchg
js
stc
fdivrl
push
adc
or
shlb
or
ss
add
add
shlb
addr16
and
add
add
lock
adc
add
mov
call
mov
sub
dec
mov
push
movsb
or
add
add
inc
div
ja
fisttps
and
add
add
fsubrs
sub
add
in
loopne
sub
add
add
add
jl
xchg
pushf
pushf
mov
push
ss
call
incb
xchg
dec
mov
pop
xlat
jmp
mov
das
fwait
gs
icebp
push
mov
data16
add
add
bnd
mov
push
fsubrs
movsl
xor
in
in
flds
xor
mov
push
popa
xchg
mov
pushf
int3
in
je
loop
test
dec
add
add
inc
orl
inc
in
in
addl
into
mov
push
mov
pusha
mov
data16
xchg
pop
add
add
add
xchg
sub
add
add
jnp
ja
sbb
sub
stos
repnz
xchg
mov
jno
mov
add
add
jge
addr16
push
or
lret
cmp
arpl
cld
insl
add
add
add
mov
roll
repz
inc
add
add
lock
or
rclb
fwait
shrl
int3
jmp
sub
add
add
movsl
sbb
or
mov
lret
mov
pop
jno
mov
sub
jbe
mov
add
cltd
dec
xchg
lret
test
into
les
mov
inc
sub
dec
scas
mov
adc
stos
add
cmp
stos
jmp
xchg
sbb
pop
clc
jecxz
divb
pop
sub
in
cmp
jno
mov
outsl
cltd
ljmp
sbb
sub
jge
xchg
imul
add
xor
mov
fstl
outsb
pop
pop
iret
lcall
add
mov
xchg
or
cmpsl
mov
mov
inc
add
add
jmp
test
stos
sar
lahf
inc
cmc
out
lahf
insl
jno
loop
cltd
aam
and
test
daa
mov
aaa
xor
out
push
rcrl
ja
mov
inc
cmp
jns
pop
fistpl
xchg
xor
addr16
pop
inc
lods
ret
nop
and
loope
stc
mov
jne
mov
mov
push
cltd
andl
inc
add
add
cmp
das
cli
mov
js
sub
mov
sbb
sub
add
add
xchg
call
adc
loop
negb
fcoml
loope
mov
sub
add
add
imul
add
sbbl
mov
jecxz
mov
rorb
push
out
gs
cmpsb
mov
push
lret
stos
loope
pop
cmp
scas
and
add
add
bound
cmp
es
add
add
mov
mov
scas
adc
jno
aad
and
mov
cli
inc
mov
in
xchg
pop
sbb
mov
push
jnp
ja
sahf
xchg
sub
add
add
xor
jg
xchg
adc
je
insl
popf
cltd
jl
xor
add
add
xor
aas
lahf
pop
ss
pop
aaa
enter
mov
mov
loope
loop
bound
cwtl
ret
rcrb
out
dec
aas
cmpsl
divl
scas
mov
fnstcw
inc
test
jle
inc
inc
insb
add
add
in
add
add
mov
nop
xor
add
add
sub
add
add
ret
pop
mov
mov
cltd
test
hlt
psubd
fwait
jbe
js
xor
pop
ljmp
xchg
daa
test
int
pop
gs
pop
xor
cmp
add
test
xchg
mov
mov
xor
les
add
es
push
test
xlat
in
in
add
add
add
add
mov
insb
mov
inc
fldenv
or
add
add
pop
mov
xor
movsl
int
scas
in
orl
add
add
popa
xor
orl
dec
std
out
xor
mov
icebp
sub
cmp
xor
movntq
out
pop
jle
movsb
dec
pushw
add
out
addr16
div
shr
fildll
or
push
inc
xchg
xchg
ljmp
mov
pop
shlb
cmp
mov
mov
mull
mov
mov
add
sbb
and
in
fnstcw
andb
popa
mov
add
dec
daa
mov
scas
xrelease
jae
push
pop
inc
adc
scas
jmp
inc
push
or
shll
mov
pop
lods
lock
add
add
imull
ror
loopne
and
pop
mov
std
cmp
sbb
out
push
inc
add
add
sub
cli
push
test
leave
fnsetpm(287
fldl
cli
sub
add
add
cmpsl
xor
add
movsl
rcll
mov
jl
das
mov
flds
add
add
in
sub
dec
jb
and
add
add
stos
push
xor
mov
icebp
or
or
add
add
mov
aad
dec
and
xchg
pop
daa
out
cmpsl
adc
lods
dec
jmp
fnstsw
add
adc
push
pop
std
sbb
mov
outsb
movsl
arpl
push
pop
add
add
jns
pushf
in
mov
jns
les
cmp
add
hlt
push
lahf
and
mov
xchg
add
add
add
cli
lret
lock
dec
jmp
pop
int
stos
in
cmp
in
popa
dec
mov
mov
dec
mov
popa
ljmp
ja
popl
mov
adc
inc
add
add
scas
lcall
jns
add
add
lods
jns
into
mov
add
add
cmp
push
bound
inc
mov
jmp
add
add
add
and
nop
jns
jecxz
int
out
arpl
add
add
add
pop
sub
add
add
shll
mov
dec
call
js
cltd
insl
pop
cwtl
inc
shlb
insb
mov
jb
add
ja
add
outsb
rol
xchg
or
add
add
nop
sbb
xor
fidivs
test
flds
das
cmp
fxtract
pop
jno
fiadds
outsb
mov
and
add
add
add
cmp
ja
inc
mov
ficomps
mov
mov
mov
or
xchg
daa
and
scas
outsl
mov
add
repnz
je
add
rorb
push
movsb
daa
xor
mov
cmp
mov
dec
inc
enter
add
add
pop
or
mov
loopne
adcb
test
cmp
cs
add
add
or
mov
dec
inc
mov
iret
pop
sbb
add
add
movsb
mov
mov
int
sbb
pop
ljmp
inc
test
shrl
aas
shll
add
add
add
shrl
xor
aas
fistpll
nop
aaa
adc
dec
sbb
jae
mov
add
add
rcll
add
dec
cwtl
jp
or
and
add
add
xor
add
mov
xor
cmp
lods
mov
gs
inc
outsl
test
popf
insb
add
add
inc
sbb
push
jle
xchg
std
jne
das
sub
add
inc
push
add
add
add
sahf
dec
ret
sarb
add
dec
add
add
sbb
push
cmp
add
movsl
push
addr16
inc
jae
add
add
bound
nop
fcomps
int
jae
sbb
push
ja
adc
add
lret
loopne
in
fcomi
pushf
cwtl
das
jecxz
sbb
jp
hlt
xchg
sub
add
add
add
popf
adc
add
add
les
cmp
outsb
loope
push
ret
xor
insl
test
add
andb
add
add
hlt
xchg
sbb
js
mov
das
rclb
cmc
imul
lock
das
hlt
lock
push
es
and
lcall
mov
pop
xchg
loopne
push
in
jecxz
mov
push
hlt
push
mov
cmp
mov
in
lcall
lret
fsubs
lret
inc
mov
mov
xlat
jns
loop
test
cmpsl
pop
dec
jbe
enter
xor
pop
outsl
lcall
jle
and
and
cmp
lret
xor
xchg
sahf
std
push
or
add
add
inc
add
add
adc
pop
adc
xchg
jo
rcr
or
les
ljmp
or
xor
ss
dec
pop
xlat
aam
into
mov
dec
or
sub
add
add
sub
and
add
mov
add
pop
dec
out
and
fwait
push
inc
jg
jae
add
add
add
shll
shlb
aad
mov
ret
and
add
add
dec
and
test
inc
mov
sub
push
lcall
add
jbe
repnz
add
add
xchg
decl
clc
mov
and
xor
out
pop
add
add
or
add
add
int3
xor
out
ss
xor
lods
xor
add
add
cmpsb
fiaddl
mov
sahf
xorb
add
add
add
iret
pop
pop
aad
push
nop
mulb
cwtl
mov
or
enter
mov
add
add
xor
ds
sti
shrl
add
add
lock
xchg
add
xor
and
dec
int
push
cli
xchg
decl
add
add
lret
fsubr
addb
sti
push
push
dec
mov
add
add
int
js
mov
lret
push
je
and
addr16
out
insl
mov
add
lods
or
mov
enter
pop
mov
jno
xchg
and
jle
xorb
push
enter
inc
mov
jb
sub
shrl
jno
adc
sahf
clc
pop
inc
add
add
push
xchg
repz
ja
sub
add
add
dec
pusha
mov
mov
and
pusha
mov
popf
mov
adc
ss
popf
push
gs
lahf
fs
adc
pop
mov
cltd
fcmovbe
or
and
mov
add
add
push
inc
ud1
jmp
add
add
mov
jmp
clc
sbb
or
int
mov
or
jge
cmp
out
inc
mov
pop
test
icebp
lds
filds
popf
jl
add
ss
pop
lds
inc
and
hlt
lock
push
add
add
add
xchg
ret
lcall
add
adc
mov
add
add
add
ljmp
xchg
ljmp
stos
add
stc
cld
call
cmp
jmp
cs
xor
inc
outsl
pop
push
ss
adc
in
jl
add
add
leave
int3
dec
lods
inc
adc
add
or
mov
add
sbb
cmp
sbb
sarl
mov
roll
mov
ss
cmpsl
es
in
cmp
ret
bound
jle
mov
mov
std
jae
sub
mov
or
mov
xchg
xchg
and
add
add
fldl
add
pushf
lods
pushf
add
add
add
jl
pop
ss
popf
adc
stos
cltd
lret
add
add
jno
or
push
je
decb
mov
in
rolb
aas
mov
inc
xlat
stos
cld
enter
add
add
js
mov
inc
testl
sub
and
add
add
bound
add
int3
insb
mov
mov
jbe
add
sub
or
dec
jo
mov
imul
pushf
fwait
dec
add
add
les
rdpmc
dec
xlat
ja
lds
add
add
inc
aas
popf
popf
rolb
add
adc
add
mull
into
cmp
addr16
jns
js
and
test
add
add
add
dec
lret
cmp
add
lret
add
add
cld
dec
jbe
lods
adc
pop
add
repnz
mov
add
add
adc
aam
ds
jge
outsb
idiv
xchg
adc
cmp
nop
jle
push
rorb
mov
mov
out
push
jle
push
push
mov
arpl
xor
cmc
add
loopew
cmp
rcr
sbb
jecxz
xor
pop
fcmovu
je
sahf
sbb
mov
push
shrl
add
add
xor
dec
inc
or
pop
loopne
jns
in
push
dec
add
add
into
sahf
inc
xlat
fsubr
orb
add
jle
lcall
pop
lods
xor
inc
enter
sub
jge
pop
in
int3
dec
add
add
ljmp
frstor
notl
aaa
sub
mov
call
movsl
adc
add
add
scas
push
mov
push
into
pusha
add
add
sub
push
xchg
pop
jnp
out
repnz
scas
or
ret
pop
in
pop
jle
cmp
mov
or
add
add
movsb
mov
adc
adc
push
sub
and
add
add
add
inc
in
dec
adc
repz
outsb
push
mov
add
add
add
inc
nop
fisubs
add
add
sbb
push
in
out
jb
xrelease
mov
add
add
mov
cmovne
lret
ja
push
mov
add
cmp
add
add
in
dec
mov
add
add
sbb
lock
ja
ja
dec
scas
cwtl
out
clc
nop
push
adc
cmp
imul
in
cmp
ljmp
dec
mov
lret
out
jmp
sbb
add
call
sub
push
jecxz
inc
add
sbb
mov
add
adc
cs
pop
pop
or
mov
add
add
cmp
adc
iret
and
add
add
inc
jmp
ret
and
inc
inc
lcall
js
add
add
ret
scas
pushf
adc
pusha
add
add
daa
cmp
push
divl
mov
jnp
fcomps
into
in
out
iret
clc
out
or
push
je
xchg
movsb
mov
add
push
movsl
cmp
sarb
cmc
lock
and
sbb
dec
stos
xchg
addl
std
fstp
inc
add
add
push
adc
aam
pop
call
add
add
orb
stos
add
das
movsb
mov
inc
aas
push
jb
mov
sti
sbb
mov
xchg
int
dec
dec
jecxz
mov
add
add
add
mov
das
push
popa
test
mov
or
jae
mov
jb
push
call
dec
inc
lahf
pop
xchg
sub
mov
xorb
add
add
xor
add
add
mov
in
in
fiaddl
and
xor
outsl
xchg
shrb
dec
std
in
roll
lods
lods
jecxz
xchg
fistpll
jp
xor
pop
adc
add
add
imul
loope
lcall
repz
jg
cmp
ret
inc
cmpl
shlb
xor
inc
lods
insl
cmpsb
sub
mov
mov
orps
mov
dec
mov
mov
fwait
or
outsb
std
in
jmp
jg
pushf
neg
icebp
cmp
adc
scas
dec
pop
lahf
cmp
shll
jns
rcrb
mov
out
testb
push
outsb
popa
jge
mov
aad
imul
or
mov
and
dec
repz
insl
inc
jp
jge
pop
mov
and
pushf
and
loope
pop
jg
mov
mov
ss
out
pop
xor
sub
add
add
or
adc
mov
adc
adc
push
push
xchg
mov
pop
xor
xor
add
add
pop
mov
push
sub
in
dec
add
pop
repz
pop
mov
pusha
add
add
xorl
add
cmp
xlat
add
add
add
sbb
fistl
adc
popa
ss
fstps
out
jp
das
xor
lock
inc
xchg
fildl
add
add
mov
and
add
add
stc
mov
std
scas
add
out
pop
les
pop
xchg
cmp
mov
das
jg
stos
pop
ds
test
and
add
add
mulb
fbstp
pushf
adc
movsb
fwait
sub
add
add
loope
into
movsl
push
std
mov
iret
ret
scas
lds
add
add
mov
inc
mov
dec
push
sbb
mov
mov
cmp
lock
nop
dec
cmpsb
pop
lods
add
add
pusha
mov
push
lcall
out
mov
nop
pop
pop
jge
clc
pop
and
inc
mov
ds
clc
mov
jb
lock
mov
add
pop
mov
pop
mov
mov
pop
dec
stc
rorb
lods
inc
jmp
loope
jnp
shr
fstl
mov
mov
arpl
cld
mov
mov
subl
ljmp
add
add
adc
lea
arpl
push
icebp
xor
add
push
sbb
add
mov
sbb
out
and
push
and
add
add
incb
or
or
pushf
sbb
test
shlb
jl
pop
mov
sbb
push
stos
jl
je
mov
in
mov
bound
add
shll
mov
popa
lret
insb
add
add
das
jns
jecxz
dec
mov
rolb
sub
add
add
adc
mov
inc
xor
or
add
add
jmp
dec
fdiv
cmp
mov
lahf
sub
insl
pop
xchg
pop
dec
mov
out
or
inc
and
add
add
imul
mov
aad
push
shlb
addr16
add
add
pop
inc
jae
mov
loope
jl
pop
ret
shr
loopne
mov
lcall
jns
mov
mov
mov
add
adc
xlat
sti
icebp
push
xorl
jnp
mov
fstps
xchg
loop
mov
jle
mov
cmp
add
sub
jmp
in
inc
test
addr16
sbb
fdivr
scas
jle
cmp
mov
mov
xor
adc
jbe
popf
lods
xchg
cld
imul
inc
add
repnz
add
add
orl
adc
xor
mov
mulb
add
add
sbb
add
sub
add
add
addr16
mov
inc
adc
lcall
cmpsl
cld
or
or
sub
fsts
add
cmp
data16
mov
jecxz
sbb
and
mov
mov
xchg
inc
push
or
add
add
inc
test
add
scas
movsb
and
addl
sbb
xchg
jbe
xchg
je
int
jns
add
add
cwtl
lahf
xchg
mov
int3
filds
add
out
xor
mull
mov
mov
xlat
stc
mov
cmp
fmuls
or
add
lahf
jae
rcrl
or
add
add
add
xor
xchg
sbb
int3
lcall
push
movsl
or
push
xor
js
jp
popa
lods
and
sbb
xchg
pop
mov
xchg
mov
lods
shlb
mov
cmp
pop
add
add
add
nop
adc
pop
cmc
cmpsl
fldt
mov
in
adc
aad
in
adc
cwtl
cmp
idivb
adc
out
sbb
outsl
pop
mov
add
cmp
nop
sbb
push
dec
xlat
je
inc
mov
jg
shrb
add
mov
mov
jmp
cmp
sbb
pop
mov
add
add
mov
xchg
dec
add
add
into
out
mov
je
fildl
shrb
add
dec
sbb
xchg
stos
shrl
pop
clc
push
mov
shr
test
mov
fsts
testl
adc
xchg
jne
pop
aaa
add
enter
loopne
xchg
jmp
cld
lock
mov
addr16
push
mov
mov
inc
mov
and
add
add
in
mov
mov
mov
orl
add
adc
add
mov
dec
push
xor
mov
add
inc
mov
add
jge
ja
push
push
xchg
and
pop
sub
add
add
inc
dec
push
stos
xor
sub
add
inc
sub
add
add
or
lret
mov
cmpsb
mov
add
add
or
add
add
loopne
jo
pushf
cli
icebp
nop
icebp
inc
adc
stos
inc
mov
daa
and
add
add
icebp
mov
add
fistps
mov
and
imul
add
jle
mov
bound
das
dec
push
mov
add
add
or
sti
or
add
mov
sub
lods
imul
push
xchg
jno
loope
out
push
pop
outsl
movsb
xor
loopne
push
xchg
pusha
add
add
repz
jg
mov
enter
xchg
xor
mov
jne
leave
lret
cmc
outsl
aam
dec
mov
les
push
arpl
push
dec
mov
push
xchg
sbb
or
adc
sub
outsl
push
or
add
add
int
cmp
and
mov
add
add
push
push
jo
mov
jno
ss
ljmp
jecxz
arpl
aam
xchg
dec
add
add
add
or
adc
add
add
push
rolb
mov
aam
gs
dec
or
inc
rcrl
dec
add
add
pop
shrb
pop
insb
mov
int3
fcomps
mov
ret
pushf
and
add
add
mov
sub
push
xchg
xchg
add
add
jb
xchg
scas
clc
sti
aam
jp
lret
sub
push
jge
pop
aam
push
test
mov
and
shll
and
add
add
fcomi
movsl
cmpsl
sub
cltd
daa
jns
push
and
pop
stos
fistps
int3
xchg
inc
leave
rolb
pop
inc
add
add
adc
fs
mov
mov
sbb
push
cmpb
or
xlat
jae
mov
mov
mov
mov
cmp
in
or
in
mov
adc
mov
add
add
sbb
add
add
jnp
sub
xchg
lock
in
sub
add
add
add
dec
jno
rcrb
in
outsl
xchg
data16
imulb
pop
adc
pop
fildl
inc
add
add
cmpsl
and
mov
pop
shr
cmp
std
ficoml
push
mov
cli
pop
cs
xchg
add
add
add
pop
pop
sub
sbb
and
push
ret
pop
mov
xchg
cld
mov
testl
inc
sub
add
add
test
mov
xor
pop
lods
in
testb
or
out
dec
mov
mov
mov
movsb
cmp
jbe
hlt
pop
mov
xchg
imull
shl
dec
xor
xlat
aas
shrb
scas
int
aaa
imul
add
add
push
xlat
sub
add
jmp
aad
test
aas
pop
fcoml
mov
pop
popa
sub
xchg
clc
or
adc
fs
pop
aaa
push
addr16
sbb
pop
imul
aaa
cld
dec
mov
aas
pushf
mov
mov
ret
inc
jns
aam
fsubs
add
add
cmpsl
mov
or
add
add
ja
dec
cwtl
add
ret
mov
hlt
sti
loop
cmp
mov
xchg
pop
adc
add
jno
mov
shl
xchg
out
pop
push
pop
add
data16
add
add
xor
aas
cmp
push
imul
sahf
pop
mov
lret
cld
leave
pop
lea
enter
add
add
lret
dec
clc
xlat
movsb
lds
cmpb
sub
add
add
mov
inc
ret
push
mov
mov
mov
insb
mov
add
add
add
inc
cmp
dec
sbb
mov
xchg
fcomip
mov
mov
sub
add
rcrb
ret
jl
sub
add
add
lods
shlb
cmpsb
adc
popa
sub
dec
rcll
pop
lods
jmp
cmpsb
cs
sbb
fisubl
in
jns
xchg
insb
add
add
adc
xchg
jl
pop
dec
inc
cmp
jno
mov
add
sbbl
lods
pop
rep
mov
cmpsb
jp
jae
mov
pop
cld
pop
pop
pop
sahf
int
xor
push
das
xor
ret
pushf
pop
test
xchg
xlat
xchg
mov
mov
mov
push
hlt
jns
dec
pop
cmp
dec
insl
inc
mov
dec
dec
add
add
pop
cld
outsb
ljmp
jnp
inc
cwtl
sbb
sub
mov
outsl
sub
add
add
mov
xchg
hlt
mov
add
movsl
inc
xor
adc
rorl
mov
jge
dec
les
add
sbb
movsb
std
nop
xchg
comiss
adc
cmp
cmp
cmp
sub
xchg
popf
push
roll
add
add
fcmovnbe
imul
pop
sbb
xlat
fisttpl
sahf
js
arpl
int3
jne
fwait
xchg
ret
jp
loope
lods
loope
mov
cwtl
fidivrs
jmp
push
and
test
add
xlat
mov
imul
scas
cli
sbb
push
mov
push
dec
leave
inc
mov
mov
test
scas
inc
add
add
orb
jbe
jmp
orl
pop
mov
mov
mov
test
and
add
add
inc
iret
aas
fisubrl
add
loop
jmp
inc
add
add
popa
aaa
fsubs
cli
movsb
ljmp
pop
fldenv
xorb
fwait
jl
or
popl
aas
xchg
loope
cmp
leave
mov
add
add
sub
pop
inc
pop
mov
cld
les
int
out
insb
mov
adc
in
mov
test
adc
mov
add
add
insb
mov
popf
add
inc
add
add
rorl
fstl
mov
sarl
and
add
add
bound
into
inc
push
test
mov
mov
jae
stos
cltd
icebp
std
adc
xor
mov
sub
or
outsb
sbb
dec
or
pop
pusha
mov
cmc
cmc
stc
inc
mov
stc
out
repnz
add
mov
ss
popa
cli
fcomps
push
lret
add
add
and
std
aam
rcrb
aas
inc
add
add
cwtl
scas
push
mov
mov
pop
cmpsl
out
gs
add
add
test
test
push
sbb
je
jl
and
cmp
daa
xchg
adc
or
scas
cmpsb
je
mov
add
sub
scas
mov
or
mov
in
ret
jb
adc
add
add
add
add
add
jo
add
add
arpl
mov
rclb
dec
cli
mov
adc
mov
and
add
add
mov
add
cmp
xchg
mov
or
cltd
arpl
pusha
mov
mov
mov
iret
mov
adc
lds
xorb
shrb
pop
push
in
test
adc
sub
loopne
push
call
jl
dec
cmp
xchg
mov
inc
popa
jae
fnstenv
adc
aaa
rcrb
aaa
sbb
test
sub
add
add
add
sbb
call
add
sbb
sub
repz
repz
add
add
int
imul
or
out
jb
mov
rcrl
and
xchg
arpl
pop
dec
test
daa
jle
scas
mov
loope
hlt
jb
mov
mov
or
mov
ja
push
clc
cltd
cwtl
sub
add
add
sbb
mov
push
sbb
add
add
pop
or
add
add
xor
and
aad
mov
in
push
adc
mov
add
mov
es
dec
add
add
jl
mov
loop
in
inc
mov
inc
call
js
mov
adc
sub
xchg
xor
mov
add
pushf
jg
xchg
divl
mov
mov
add
pop
cltd
sub
add
pop
xchg
mov
mov
sub
add
add
mov
sarb
jbe
add
add
add
xlat
in
xlat
repz
mov
cmp
ljmp
add
ss
gs
xorl
jno
outsl
pusha
add
add
push
dec
mov
js
stos
stos
xor
pusha
mov
jne
mov
pop
out
aaa
cmpsb
push
fwait
xchg
std
inc
add
add
add
fists
loopne
lret
sbb
add
add
and
arpl
pop
mov
loopne
push
repz
stc
mov
into
mov
mov
and
mov
faddl
add
add
add
add
rol
push
dec
inc
jmp
push
shll
add
add
push
into
shlb
add
add
mov
sbb
pop
das
cmp
ds
add
inc
orb
mov
mov
imul
vmovaps
xchg
mov
inc
out
dec
jmp
ja
gs
adc
leave
shlb
add
xor
and
add
add
ret
mov
add
add
iret
ret
mov
xor
outsl
mov
add
add
aaa
push
fldcw
add
add
lret
insl
cli
std
sahf
sbb
fistpl
lahf
in
inc
add
add
adc
cmc
add
pop
pop
roll
or
sub
sub
add
add
lods
jp
incl
xor
gs
add
add
add
add
imul
add
pushl
add
sbb
add
mov
sub
add
add
jl
xor
push
cmp
add
xchg
or
add
add
lods
jns
ss
mov
add
repnz
lds
xchg
leave
xchg
lock
aas
pop
lock
jbe
mov
jmp
add
add
add
push
xchg
push
es
push
mov
or
and
add
add
fs
std
pop
mov
lahf
push
stos
lock
cmp
ficoml
dec
add
add
and
push
mov
ljmp
add
mov
or
sbb
pop
jecxz
pop
push
mov
add
jnp
jp
push
inc
mov
dec
insb
mov
enter
jno
jbe
addr16
pop
mov
mov
dec
cmpsl
dec
sarl
mov
mov
leave
cmp
mov
ret
mov
shrb
inc
repz
bt
dec
iret
js
xchg
sbb
add
add
adc
mov
and
and
adc
mov
inc
outsl
mov
scas
jae
sub
add
add
icebp
xchg
jle
sarl
arpl
mov
add
add
dec
jbe
insl
fists
lods
rorb
icebp
add
cmpl
add
add
fadds
imul
imul
pushf
dec
push
fisubrl
add
add
mov
push
fucomp
inc
sbb
lods
cltd
jp
fadd
fwait
mov
pop
hlt
push
and
dec
aam
xchg
adc
add
add
mov
loope
sub
cld
sbbl
loopne
pop
mov
add
add
in
or
and
add
add
add
add
bound
mov
add
add
sahf
inc
add
add
pop
mov
popa
xchg
fldt
or
xor
dec
and
add
add
mov
fcoml
mov
icebp
out
xchg
mov
cwtl
ds
push
xor
jb
push
mov
and
xor
add
inc
push
js
ret
sar
xchg
frstor
sub
add
add
js
cmp
push
mov
mov
mov
xor
add
mov
mov
mov
dec
xchg
outsl
movsl
cld
jge
test
mov
add
mov
lea
test
lcall
mov
pop
jbe
xchg
in
and
jmp
add
add
into
or
add
add
dec
lahf
xor
data16
bsr
stc
jb
add
add
dec
dec
mov
push
pop
or
add
add
les
lcall
add
orl
cmc
inc
es
add
jnp
js
sarl
jb
xchg
mov
fwait
cli
lea
stos
jg
add
add
and
xchg
sub
add
add
test
movsb
pop
ret
pushf
rcll
adc
mov
sub
gs
shl
loopne
mov
test
xchg
stos
outsb
mov
add
add
sbb
pop
or
add
enter
add
fiadds
and
add
add
push
mov
push
into
adc
jns
cli
sti
in
mov
es
jp
jmp
jge
sbb
add
add
jmp
inc
add
add
fcomps
pop
lods
mov
jp
sub
add
add
mov
add
add
lret
add
add
fwait
sarb
or
ja
xchg
jmp
in
mov
mov
add
out
or
mov
sbb
and
and
xor
fdivrs
add
stos
movsb
xlat
sbb
pop
aad
fs
pop
enter
dec
and
add
add
fidivrl
enter
ljmp
dec
rorl
in
insl
xor
fdivrl
ss
mov
xchg
push
jle
mov
stos
filds
movsl
out
add
add
test
mov
mov
mov
push
xor
out
dec
adc
or
or
xor
repz
bound
lock
rcrb
pop
or
add
add
imul
cmp
ljmp
mov
add
add
add
add
fcmovne
add
sub
add
add
sbb
jo
pop
adc
mov
mov
mov
xchg
test
imul
mov
ficomps
ret
cmove
add
add
add
add
adc
dec
inc
insl
bound
pop
mulb
stc
jge
mov
in
push
fidivs
add
pop
jae
or
ror
popa
inc
add
add
push
xor
pusha
mov
ja
out
scas
sbb
sub
add
add
leave
xor
mov
mov
cmp
add
push
inc
sbbl
std
es
ret
mul
adc
push
sub
stc
add
xlat
sbb
push
fs
insl
cld
dec
shlb
mov
xor
cltd
push
in
xorl
push
inc
pop
repnz
add
hlt
in
pop
dec
push
push
ret
addr16
iret
sbb
mov
ljmp
sub
pop
rcr
cmp
test
jg
dec
in
loopne
push
push
popf
movsl
xor
push
pop
bound
add
add
and
add
add
add
shl
sahf
fisttpl
add
add
call
pop
andl
mov
sub
mov
cmc
test
imull
add
inc
lret
out
and
fwait
lds
jns
mov
pop
mov
popa
pop
and
add
lods
push
lea
shrb
adcl
aaa
push
pop
mov
sub
add
add
xlat
sbb
add
add
inc
add
add
stc
push
and
mov
adc
in
mov
gs
loopne
leave
pushf
test
or
jge
push
addr16
inc
mov
inc
add
pop
sub
mov
mov
add
add
add
stos
arpl
add
add
sahf
imul
scas
jge
aam
aad
adc
jbe
dec
das
ret
jg
cmp
mov
push
icebp
jno
jne
inc
push
mov
loope
test
mov
add
add
add
add
test
sbb
add
lock
std
imul
add
ss
jo
and
add
add
sbb
xlat
sar
ret
mov
and
add
add
test
mov
pop
xor
mov
cmp
add
add
test
push
sub
add
add
imul
xchg
push
adc
xor
jae
lds
lret
xor
loop
jo
ja
mov
add
add
stc
push
insl
loope
stos
out
and
xor
dec
cs
andb
add
mov
xchg
mov
jmp
mov
aaa
mov
es
or
scas
in
or
ss
das
and
pop
pop
fidivl
daa
push
mov
add
add
mov
sti
cmp
add
outsl
xchg
add
add
add
or
mov
mov
outsb
lods
xchg
add
ss
dec
sahf
cld
outsb
aaa
cmp
lock
rorb
out
xchg
mov
pop
ds
push
lods
adc
in
lock
fmul
sti
push
loop
scas
imul
push
jp
das
leave
mov
lcall
lds
mov
jbe
add
add
sbb
mov
xor
loopne
movsb
jl
and
add
add
dec
add
add
xchg
roll
add
jecxz
mov
xchg
add
add
pop
mov
pop
xchg
xchg
divl
movsl
ret
adc
lcall
add
mov
xchg
add
loopne
popf
mov
add
xlat
inc
mov
jo
lock
add
outsb
pop
adcb
xor
dec
mov
add
add
cmp
inc
mov
mov
cmp
jmp
fptan
sub
mov
xchg
mov
mov
cmpsb
sbb
adc
idivb
cmp
shlb
add
add
jns
setae
test
outsb
stc
in
xorb
jle
adc
psllq
push
jno
mov
ret
in
insb
add
add
dec
mov
mov
cld
jbe
jns
jmp
popa
add
adc
mov
add
add
mov
jne
repz
add
movsl
xlat
fnstenv
add
mov
or
add
imul
xchg
dec
leave
xchg
add
add
jns
mov
pop
xor
mov
loope
inc
add
add
jmp
stos
push
ja
loop
std
sbb
xchg
jbe
lock
xchg
push
aam
mov
pop
test
out
mov
in
adc
cltd
push
dec
add
add
jnp
fisubl
add
mov
cwtl
push
in
xchg
mov
xchg
and
fdivs
jle
outsw
lahf
dec
pop
mov
add
or
push
mov
xchg
or
add
add
or
inc
and
shl
and
mov
push
mov
sub
fucomp
add
add
repnz
add
add
aaa
mov
aaa
adcb
sbbb
jl
rolb
and
repnz
jmp
clc
sub
add
add
sub
sti
fsubrl
leave
fwait
inc
add
add
ja
imul
bound
or
cmc
adc
mov
add
das
push
mov
dec
adc
test
add
add
add
mov
rorb
aas
out
loop
mov
and
add
add
ja
aam
dec
add
add
imul
shll
add
lock
push
scas
adc
test
test
scas
xor
rep
sti
fs
jmp
negl
and
jo
shr
xchg
jno
subb
and
mov
or
inc
jb
adc
sub
add
add
js
push
adc
push
mov
and
add
add
lock
pushf
out
aam
cmp
cs
iret
cwtl
cmp
mov
sbb
pusha
add
add
jo
aaa
negb
add
dec
js
mov
nop
aaa
xlat
jo
je
aas
scas
loope
icebp
rcrl
jns
jl
aaa
jge
scas
cmpsb
sub
sahf
lea
repz
aad
push
jbe
mov
ret
add
mov
xor
jl
adc
add
xor
dec
int3
push
jmp
outsb
pusha
mov
addb
stos
loop
mov
icebp
dec
lock
inc
add
add
add
pop
mov
jge
cmp
add
add
mov
push
mov
mov
lahf
rcl
push
jle
or
dec
xchg
fmull
enter
inc
mov
push
pop
adc
pusha
add
add
xchg
cmp
add
add
add
lods
push
mov
jae
aad
loope
dec
add
add
cmp
add
add
icebp
test
ret
nop
out
mov
mov
shrl
jnp
ljmp
add
mov
dec
dec
jmp
add
sub
add
add
pop
daa
call
ljmp
or
xor
inc
mov
in
ret
cmc
rcrl
mov
inc
add
cmpsb
add
add
adc
mov
inc
insl
test
fisttpll
jne
outsl
add
sahf
cmp
mov
xlat
mov
add
add
es
inc
xor
jp
incb
loope
pop
push
or
dec
inc
outsl
mov
cmp
add
add
jae
stc
je
ret
add
add
mov
push
pop
jo
jno
xchg
sub
sub
icebp
mov
nop
xor
pop
lds
jo
inc
jno
xchg
je
stos
vdivss
xchg
arpl
dec
jnp
cmpsb
ljmp
cmp
aad
lcall
roll
rcrb
test
hlt
xchg
dec
ljmp
or
imul
add
or
add
add
jo
mov
add
push
mov
or
add
add
js
jl
outsl
pop
int
xchg
adcl
out
mov
xchg
pop
cmpsl
arpl
in
mov
xlat
mov
cmp
adc
stos
hlt
sbb
mov
out
lahf
cmpsb
mov
pushl
push
mov
push
sbb
cli
lahf
cs
or
add
add
test
and
add
and
add
test
movsl
mov
insb
mov
dec
mov
insb
mov
cmp
mov
push
sub
push
or
mov
lock
mov
mov
dec
sbb
lcall
inc
sarb
xchg
mov
mov
sub
arpl
inc
int3
mull
xor
insl
mov
and
add
add
sbb
loopne
add
add
add
add
add
mov
mov
xchg
and
js
and
cmpsb
mov
push
adc
xchg
insl
mov
rorl
add
add
mov
add
pop
iret
xchg
int
mov
rcrl
mov
in
mov
xor
push
loopne
stos
aam
sbb
cmp
xchg
adc
xor
xchg
sub
add
add
pop
adc
mov
mov
movsb
mov
jg
or
jnp
jge
xchg
push
dec
add
add
sub
add
add
add
add
sbbb
aad
jg
in
mov
mov
mov
test
cmpb
mov
cmpsl
fdivp
mov
lds
add
push
loopne
mov
sub
add
add
dec
or
loopne
movsl
jno
mov
and
add
mov
sbb
dec
push
jns
xor
aaa
sub
ja
repnz
push
pop
pushf
sti
xchg
xchg
push
lods
and
add
add
add
dec
mov
add
add
mov
or
add
add
mov
inc
mov
in
mov
fildl
inc
testl
mov
push
idiv
scas
adc
in
aaa
lret
xor
dec
ss
push
leave
aam
lret
inc
sbbb
jecxz
aaa
sbb
pop
add
mov
orl
ret
add
cmc
push
jecxz
loopne
add
add
xor
cmp
sub
or
add
add
cmc
loope
lods
sub
lods
leave
pop
aam
pop
mov
shll
subl
inc
fnstenv
movsb
pushw
ds
stos
xchg
and
jl
aaa
int3
mov
mov
add
add
aas
shl
push
and
add
add
loopne
pop
fsubl
add
add
mov
sbb
jmp
add
push
mov
add
add
sti
sub
outsb
pushf
fisttpl
inc
dec
fwait
push
cwtl
into
mov
jp
add
add
stc
fmul
test
dec
data16
add
add
dec
add
add
jge
xchg
test
es
sahf
ljmp
scas
rcl
pop
jnp
insb
mov
pop
rolb
addr16
in
loopne
mov
adc
clc
mov
pusha
add
add
shll
mov
push
loopne
mov
filds
out
insl
sbb
inc
sarl
mov
mov
aas
dec
sbb
xor
repnz
add
mov
sahf
mov
jmp
std
mov
addr16
inc
mov
add
lea
add
or
add
add
add
xor
call
inc
cmp
mov
jne
jnp
sbb
dec
xchg
hlt
pop
out
mov
inc
sub
and
add
add
icebp
das
cmp
mov
mov
cltd
out
jbe
stc
sahf
pop
mov
pop
addr16
add
cmp
or
data16
push
push
xor
inc
mov
add
add
in
data16
mov
push
jns
dec
aaa
sbb
cmp
hlt
mov
cmpsb
mov
cmp
pop
mov
jge
in
jns
shll
popa
rclb
scas
lock
dec
cmpsl
jmp
push
inc
mov
and
mov
fldl
imul
add
add
add
add
out
shl
xchg
jb
rcrb
mov
add
sar
and
mov
add
add
cld
inc
aaa
push
add
push
mov
popf
mov
jle
popa
es
jmp
imul
insb
add
add
test
into
adc
or
xor
bound
nop
imul
jle
push
xor
cmp
sbb
enter
aad
cmpsb
cmp
aas
leave
nop
out
imul
popf
shlb
or
mov
enter
add
cmp
push
leave
test
clc
insl
and
fsubrl
mov
leave
push
jnp
rorb
add
pop
inc
stos
hlt
loope
xchg
mov
or
add
add
cmp
add
add
jecxz
or
bound
add
add
dec
mov
mov
movsb
and
add
jl
lret
adc
cmp
cmc
xor
jns
add
add
pop
int3
xchg
das
adc
dec
dec
mov
mov
inc
add
add
out
adc
divb
pop
push
sbb
mov
add
add
loope
ficompl
call
test
jno
out
cwtl
sub
repz
add
add
or
scas
outsb
mov
add
add
or
mov
pop
popa
sub
mov
push
cs
es
jecxz
mov
ljmp
add
stos
cltd
push
and
add
add
mov
cmp
nopl
xchg
arpl
in
out
repz
add
insb
add
add
fcompl
or
insl
negl
scas
in
testl
jne
sub
xchg
jns
into
cmp
add
add
add
mov
add
add
pop
xchg
xchg
and
and
and
fldenv
mov
mov
cmpsl
int3
pusha
mov
mov
addl
add
and
mov
pushf
xor
add
lods
inc
mov
aas
lcall
ljmp
icebp
add
mov
cli
sub
mov
mov
insb
mov
jae
add
add
repz
mov
mov
inc
sub
or
add
add
dec
mov
sti
lock
pop
adc
dec
cmpl
jnp
mov
lods
inc
lods
loope
pop
mov
inc
into
insb
add
add
pop
out
push
sbb
cmpsb
cmpsb
push
mov
cmp
fucomi
xor
pusha
add
add
mov
mov
into
push
ret
sarb
popa
popf
dec
jl
mov
mov
inc
sbb
add
push
test
add
jmp
cld
cs
add
add
add
int
enter
lret
xchg
xor
mov
jg
push
out
xor
test
xor
dec
call
ret
out
and
add
imul
add
add
xchg
push
or
cld
lea
aad
mov
aaa
dec
test
inc
mov
ficomps
les
in
sub
bound
add
xlat
sub
mov
add
add
in
pop
cmp
out
add
add
into
inc
xchg
inc
cmp
ljmp
loopne
loop
sahf
xchg
ds
test
push
popf
mov
lods
ret
jecxz
xchg
xchg
insb
mov
mov
add
mov
bnd
xchg
enter
int3
int3
and
add
add
or
pop
jl
fmuls
add
add
dec
sbb
sbb
push
inc
cmp
jmp
mov
imul
add
inc
sbb
push
out
incl
lods
nop
push
and
add
jns
lds
fisubrs
ljmp
add
add
add
lock
cmc
xor
adc
xchg
lcall
and
add
add
lea
mov
mov
and
add
add
or
jmp
fcoml
adcb
mov
mov
add
mov
add
outsb
fisttpll
in
rcrb
adc
add
add
xlat
xor
dec
stos
sub
inc
cld
xacquire
and
add
add
mov
mov
xor
out
jp
mov
push
push
pop
rolb
fisubl
popa
aaa
dec
add
add
cmp
dec
daa
xor
dec
arpl
rcl
sbb
xor
cmpsl
roll
cmpsl
add
or
gs
fwait
pop
pusha
add
add
lahf
mov
add
les
insl
xor
add
add
fmuls
fistps
add
add
cli
mov
xchg
mov
adc
mov
daa
in
lahf
or
adcb
or
add
add
fisttpl
dec
push
jne
inc
cmp
mov
add
add
je
add
add
push
xchg
inc
sub
int3
ljmp
aam
jbe
add
add
stos
nop
and
fcmove
ss
push
jmp
stc
mov
jb
or
add
add
lods
jecxz
pop
xor
test
add
add
mov
cli
jbe
sub
add
add
add
add
xchg
in
leave
adc
dec
jne
psubd
adc
push
pusha
mov
sub
mov
adc
aas
je
xchg
dec
pop
ss
mov
adc
mov
pop
lods
test
or
sbb
fsubl
add
add
mov
jp
xlat
repnz
push
mov
add
xchg
ret
mov
adc
sub
sub
add
add
add
xchg
add
add
cmp
jo
mov
add
add
fnstsw
xor
lahf
pushf
repnz
pop
ja
data16
add
add
push
mov
pop
mov
mov
aad
cmc
adc
jg
push
mov
shl
std
pop
or
test
push
inc
les
sbb
add
push
jnp
popa
iret
in
add
add
add
ds
jl
cmp
in
ret
add
add
clc
mov
pop
mov
sub
cmp
nop
dec
cmpl
mov
nop
push
popf
cld
jg
and
xor
lods
cmc
push
fisttpl
add
add
push
and
add
add
pop
inc
mov
xchg
or
add
add
mov
push
push
test
push
jnp
fsubs
cwtl
mov
test
jp
cmpl
neg
mov
fldcw
mov
incb
jp
cmp
hlt
xchg
xor
adc
shlb
out
das
sub
cli
das
cli
loope
adc
mov
jmp
push
inc
into
lds
lds
add
add
mov
aad
test
add
add
add
xchg
les
dec
pusha
add
add
lock
inc
push
cs
push
mov
lods
faddl
addr16
lds
into
addr16
cli
inc
ret
fistpll
or
push
into
lcall
mov
std
jae
les
inc
ficompl
cmpsb
mov
cli
insb
add
add
mov
mov
add
add
pop
mov
inc
add
sub
jno
sbb
and
jl
roll
add
add
xor
pop
ds
sub
out
jne
lcall
mov
js
insb
add
add
mov
mov
iret
test
icebp
xor
push
fisttpll
add
inc
xor
gs
sub
lret
sub
dec
loopne
mov
ss
push
mov
and
adc
dec
inc
add
add
mov
adc
jo
and
jp
lock
sbb
popf
fnstenv
jae
gs
fists
dec
mov
addr16
add
add
cmp
arpl
int
adc
jecxz
push
rorl
dec
int3
lea
int
jle
lods
xchg
add
icebp
add
scas
clc
leave
cld
push
adc
lock
sub
lock
cmp
sbb
cltd
addr16
jbe
inc
xchg
pop
sub
add
add
jbe
andl
add
add
add
add
add
add
mov
add
add
loopne
lods
mov
adc
xlat
inc
mov
fimull
punpckhbw
add
add
xchg
stos
sub
dec
icebp
aad
sbb
xor
loope
jb
jmp
or
mov
add
add
add
hlt
add
adc
repz
imul
testl
in
call
xchg
lret
inc
mov
in
pushf
cld
divl
push
or
jns
bound
sbb
movsb
sbb
rcll
add
mov
scas
int3
aam
xchg
push
adc
sbb
inc
mov
adc
pop
inc
dec
stc
mov
fistpl
addr16
movsl
xchg
shlb
add
add
add
sbb
hlt
sbb
xor
push
mov
pop
mov
add
xchg
mov
notb
sub
add
add
dec
mov
lods
add
das
lds
adc
fidivrl
mov
inc
add
add
repnz
cmpsb
cmp
push
xor
hlt
cmpsl
scas
cmp
fsts
orb
cmp
das
jge
inc
lods
in
aam
push
dec
push
in
lcall
mov
add
add
hlt
jmp
jp
mov
xchg
fwait
notl
push
xchg
pushf
dec
pop
or
mov
add
add
add
pusha
mov
lods
mov
xor
xor
popf
loope
and
sti
mov
pusha
add
add
inc
add
add
add
xchg
xlat
popa
xor
add
add
add
call
sahf
jo
lahf
movsb
add
add
add
or
in
outsl
test
lods
pushf
loopne
mov
add
bswap
rclb
mov
sahf
lock
outsb
sbb
mov
pop
hlt
mov
std
loopne
cwtl
adc
cwtl
cmpsb
cs
sbb
mov
out
cld
es
ss
es
in
aad
loop
insb
add
add
sub
lods
or
add
add
aam
test
sbb
repz
cmp
movsl
pop
mov
add
add
add
add
movsl
fucomip
out
ljmp
fbstp
fwait
mov
imul
int3
bound
daa
roll
scas
insl
pop
jbe
imull
push
mov
ljmp
mov
add
add
push
in
adc
xor
fistpl
or
push
sub
add
add
aas
mov
add
add
add
add
add
in
or
add
add
add
add
add
add
add
xchg
fnstenv
pop
imul
add
sub
out
xchg
fwait
out
ret
insw
add
add
add
out
xchg
cmp
xor
pop
sti
jge
add
add
add
dec
add
add
add
sbb
lcall
xchg
fsts
scas
in
fprem1
inc
mov
loopne
push
cwtl
cmpsb
shlb
mov
mov
fistpl
inc
add
add
pop
adc
push
mov
mov
cmpsb
das
push
cmp
or
scas
orb
sbb
mov
in
push
mov
rclb
push
sahf
pop
push
fsubrl
add
xchg
pop
mov
je
shrl
lods
rolb
adc
push
jg
mov
xor
add
rolb
mov
or
fadd
xchg
inc
mov
pop
lock
adc
sub
add
add
or
mov
jp
cwtl
add
mov
scas
testl
add
add
aad
fisttpll
add
sbbl
push
xchg
jns
jnp
mov
mov
dec
mov
sbb
aad
pop
add
add
mov
mov
cmpsb
jp
mov
pop
xor
icebp
xchg
mov
xchg
je
paddw
lods
aas
jns
cltd
test
ljmp
add
add
sub
mov
jbe
jmp
shlb
out
loopne
lods
imul
inc
int
pop
mov
add
inc
jmp
cs
jp
push
mov
loopne
inc
xchg
aaa
and
dec
mov
mov
movsb
sar
mov
adc
mov
mov
cmp
sub
add
add
cmc
bound
mov
aam
in
test
jle
sub
sub
add
jae
dec
mov
mov
aam
mov
add
add
insl
mov
lret
inc
scas
pop
dec
mov
xchg
idivb
push
jbe
ja
test
test
call
call
add
rcrb
addr16
push
neg
pop
pop
fcom
lahf
adc
mov
loop
cmp
icebp
xor
add
add
les
sub
add
add
ljmp
add
cmpsb
orb
insl
adc
notb
mov
fmul
rorl
add
add
ja
add
add
add
push
mov
sbb
adc
cmp
shrb
scas
jbe
ss
add
add
sub
add
add
push
mov
add
rcrl
inc
enter
cwtl
data16
mov
ror
lods
lods
mov
dec
repz
inc
pop
xchg
in
add
add
sbb
stos
inc
fwait
adc
or
add
add
dec
jbe
jo
pusha
add
add
nop
es
ljmp
add
out
jl
addl
add
stc
sbb
dec
push
mov
ja
in
inc
mov
daa
test
push
cmpsl
adc
pop
sub
stos
jmp
push
xor
adc
push
lret
xor
sbb
scas
movsb
hlt
jg
aaa
lahf
daa
lods
xchg
adc
push
xchg
xchg
lret
lret
cmp
push
movsb
adc
sub
leave
sub
insb
mov
xchg
int3
mov
xchg
cmp
jp
cli
dec
add
add
push
arpl
mov
in
rcrb
or
or
or
sub
js
mov
out
mov
jg
cli
mov
add
add
xchg
cmp
sub
addl
mov
add
mov
push
xor
dec
pop
cld
mov
test
jb
fwait
mov
insl
sub
fs
jo
test
jg
xchg
fcoml
sub
xchg
add
rcrl
in
fnstenv
jns
jecxz
xor
es
or
repz
pop
jb
lea
dec
jecxz
add
add
cmpsl
or
add
add
add
add
mov
loope
ja
sbb
movsl
call
push
dec
add
add
add
stc
in
inc
inc
loope
or
push
lods
adc
lret
adc
push
sub
add
add
add
mov
sbb
shll
inc
add
add
or
sbbl
mov
sbb
sub
mov
shr
push
in
lahf
stos
stos
pop
cmp
add
add
jns
or
add
add
add
mov
mov
cmp
test
push
pop
sub
jns
cmpsl
enter
sbb
nop
dec
mov
xor
sti
mov
mov
fstl
enter
insl
bound
mov
mov
xchg
add
add
in
popa
sub
mov
ret
add
inc
fdivr
test
mov
orb
insl
cmp
test
jns
orb
inc
loope
sahf
in
stc
dec
sbb
aad
pop
mov
test
js
sbb
pop
lods
imul
add
add
sti
inc
mov
and
add
add
jl
inc
pop
inc
jae
inc
lds
addr16
dec
add
add
add
inc
mov
mov
std
add
add
pop
jnp
loope
mov
stc
hlt
xchg
inc
idivl
jmp
mov
ret
jge
cmp
add
repnz
jns
je
xchg
inc
add
add
fisttpll
add
add
arpl
mov
lahf
mov
sbbl
mov
pop
fs
push
das
push
repnz
push
xor
jl
leave
sbb
push
stc
mov
and
aam
or
add
add
add
add
pushf
in
xor
sbb
js
sub
sbb
and
add
add
popa
fldcw
add
add
fsts
mov
sub
add
add
repnz
leave
mov
gs
outsb
mov
nop
sub
stos
mov
add
and
jl
xchg
pop
sbb
cmp
or
lret
add
add
sbb
adc
add
add
add
add
add
sub
add
add
xchg
and
add
pop
adc
arpl
add
add
add
add
pop
aaa
xor
mov
ror
adcb
cmp
sub
add
add
jb
movlps
mov
push
sbb
add
mov
add
add
stc
lds
mov
cmp
sti
mov
add
ss
imul
dec
inc
add
add
add
lcall
mov
aaa
icebp
ss
pushf
inc
push
test
hlt
sbb
bound
pop
adc
fwait
mov
pusha
mov
jo
xchg
out
pusha
mov
jmp
xchg
int
shll
lock
fwait
mov
dec
rorb
mov
daa
or
rorl
add
cwtl
adc
out
shr
or
gs
push
cs
sbb
sub
arpl
add
cmp
add
ss
es
hlt
mov
iret
les
loop
ret
add
aas
mov
inc
mov
fistpll
xchg
cltd
out
lods
mov
jns
mov
imul
fwait
and
add
add
add
test
and
add
add
cmc
jbe
sti
out
sbb
push
sbb
jbe
mov
test
add
add
mov
std
xor
sbb
stos
js
adc
jo
mov
aaa
fld
sub
add
add
mov
lret
dec
fnstcw
out
jmp
add
add
mov
scas
jmp
cld
inc
inc
mov
ret
add
add
mov
dec
push
ja
mov
lcall
fdivrl
sub
in
lea
loope
sahf
pop
cmpsl
xchg
add
add
sub
test
rorl
lea
mov
inc
push
das
pop
jecxz
ss
push
out
push
aaa
lahf
dec
test
mov
sub
mov
inc
lock
cmp
sub
add
add
mov
push
mov
fdivrs
or
xchg
stos
push
popf
lcall
xor
ss
cmpb
xchg
or
daa
lods
sub
add
adc
cmp
pop
loope
jmp
push
xchg
and
iret
pushf
cmp
scas
je
mov
popf
sbb
and
dec
lret
insl
cmp
call
add
sbb
add
add
xor
fstl
add
dec
push
jl
mov
and
insb
add
add
out
rclb
pop
pop
adcb
inc
dec
bound
xchg
stc
add
add
add
sbb
add
add
add
sar
xchg
mov
add
sbb
jecxz
pop
adc
arpl
cmp
test
lock
pop
shll
decl
sahf
movb
gs
aaa
addr16
mov
sbb
add
add
jp
mov
mov
js
adc
lods
xor
ds
xchg
mov
lds
sbb
enter
fdivrs
cltd
in
fcom
in
rcl
pop
ret
mov
jle
pop
fnstcw
out
dec
add
add
add
jae
mov
lcall
cmpsl
and
add
add
add
add
pop
sarl
imul
ja
or
push
cmp
cmp
adcl
inc
mov
shrb
cmp
pop
mov
add
test
mov
add
add
int
xchg
inc
xor
add
xchg
jo
aad
or
jnp
bswap
cmp
add
add
cwtl
push
jmp
arpl
jo
add
add
push
xor
sub
xchg
popf
fsubs
popa
push
sub
add
add
aas
data16
outsb
int3
inc
rorl
add
add
sub
pop
addr16
stos
lcall
icebp
rcll
add
ficompl
push
push
fidivl
add
add
dec
mov
xchg
adc
dec
mov
lcall
jle
les
mov
dec
mov
cmpsb
and
test
xor
bound
cmc
dec
push
lret
mov
jno
xlat
jmp
add
add
jae
mov
icebp
mov
xchg
pop
fnstcw
add
mov
add
add
push
hlt
dec
mov
lock
add
dec
mov
mov
add
add
dec
ds
movsb
mov
outsl
in
pop
pop
aas
imul
iret
sub
in
aaa
imul
xlat
push
loope
addr16
shll
sub
gs
add
add
jb
mov
movb
add
add
dec
and
sbb
ret
pop
mov
dec
add
add
fbld
xor
mov
add
test
jbe
mov
out
jge
out
pop
inc
add
add
mov
add
add
scas
and
mov
add
adc
std
out
and
jmp
push
adc
cli
nopl
out
or
add
add
outsb
fnstcw
add
add
mov
loopne
xchg
mov
push
jb
test
mov
dec
mov
lods
pop
ss
jp
inc
push
mov
cmp
or
mov
add
add
add
mov
lds
mov
jle
sub
add
add
push
mov
std
add
mov
cmp
ret
or
add
add
or
xchg
xlat
out
or
add
add
add
gs
pop
out
stos
dec
pop
scas
movsl
xchg
test
cmp
mov
push
test
xchg
sub
add
add
push
xchg
mov
ret
fcmovbe
pushf
xchg
xchg
addr16
aad
xor
cs
cmp
and
add
add
lea
push
std
lods
and
add
add
imul
add
add
push
sbb
daa
xchg
cmp
xchg
stos
pop
movsl
push
push
add
add
add
mov
add
sahf
cmp
es
push
push
test
nop
or
add
add
add
add
test
jns
js
jnp
cmpsl
cmpl
add
mov
pop
in
xor
mov
sub
add
add
mov
inc
sahf
push
sbb
xorl
aas
or
sbb
aaa
adc
lcall
or
popa
ror
lahf
leave
lea
mov
in
loop
inc
mov
cli
add
cmp
mov
or
andb
add
ret
stos
int
mov
or
add
add
inc
ljmp
ret
fwait
xchg
add
add
xchg
sub
add
add
jo
jg
outsb
fdiv
cltd
pop
cmp
mov
cltd
xchg
mov
enter
add
add
pop
xor
imul
add
add
add
or
and
std
fsubl
ret
fldl
std
sub
add
add
ss
test
imul
add
pop
lock
jnp
mov
xor
into
outsb
lods
popa
cmp
loopne
mov
pusha
mov
or
iret
cmp
cmpb
inc
and
add
sub
add
add
add
add
add
pop
movsl
jne
cmpsb
sarl
cmp
push
ljmp
add
add
add
sub
add
add
push
or
int3
fwait
in
mov
movb
add
push
sbb
scas
scas
push
push
into
fldl
push
sbb
fsubrl
call
mov
add
add
add
add
add
in
frstor
or
jge
dec
add
add
xor
and
or
add
add
or
jno
mov
dec
mov
push
and
add
add
mov
dec
jecxz
imulb
sarb
add
add
mov
js
gs
lods
repnz
sbb
cs
mov
ljmp
push
hlt
or
mov
mov
into
or
lret
xchg
inc
orl
mov
es
pop
jge
mov
add
outsb
xchg
ja
jns
cmp
ja
sbb
sbb
add
add
mov
push
scas
and
add
add
out
stc
inc
lods
icebp
mov
sbb
jb
and
add
add
add
adc
dec
xor
mov
xchg
leave
pop
inc
mov
pop
rolb
pop
pop
testl
out
xchg
or
cld
xorl
mov
add
add
jnp
jns
stos
scas
and
inc
sbb
cmp
xor
mov
add
add
dec
scas
dec
mov
iret
movsl
and
dec
imul
cmp
mov
aas
and
add
add
and
cmp
sbb
add
mov
or
sbb
loope
mov
mov
es
repz
jle
mov
pop
or
rcrl
sub
cwtl
roll
push
mov
add
add
adc
sbb
add
insb
add
add
dec
pusha
mov
loop
jmp
imul
mov
fbld
adc
mov
push
sub
jb
lret
sub
add
add
mov
xlat
push
pop
mov
pushf
cs
mov
push
shlb
shrl
cld
jns
mov
or
add
add
xchg
mov
xor
into
dec
shr
popf
adc
ficoml
pop
and
or
add
add
divl
push
mov
call
add
add
add
add
sbb
mov
mov
add
add
ljmp
std
int
stc
push
cmp
sub
add
test
push
xor
out
mov
add
jg
add
cli
xchg
sub
movsl
add
add
add
scas
mov
out
jb
or
add
add
icebp
add
sahf
pushf
sbb
add
add
pop
fwait
xchg
in
mov
js
add
mov
mov
out
in
iret
mov
mov
mov
call
movsl
mov
cmpsb
je
inc
or
add
add
insl
sahf
cld
lods
outsl
or
add
add
movsl
je
xor
popa
pop
inc
sbb
push
pop
push
mov
hlt
mov
fidivs
es
lret
add
add
lahf
pop
cmpsb
add
add
add
leave
andb
push
jmp
mov
jcxz
ds
js
pop
dec
mov
lret
jb
push
addb
in
jge
mov
insl
lahf
mov
inc
stos
cmpsl
lods
jnp
icebp
aas
inc
andb
out
je
mov
je
jno
pop
shlb
add
add
outsl
jb
imull
insb
add
add
dec
mov
pop
xchg
insb
add
add
inc
push
es
push
or
clc
addb
add
insb
add
add
xchg
fcmovnbe
cs
and
xchg
jmp
mov
add
iret
stc
sti
cs
inc
sbb
pop
mov
mov
dec
mov
hlt
aad
jb
aam
or
in
sbb
add
add
sbb
xor
xchg
and
add
add
int3
xchg
xchg
mov
inc
or
dec
and
jl
and
lods
jno
xchg
xor
incb
nop
loop
xchg
repnz
or
call
xchg
pop
jecxz
rcll
pop
and
add
add
aas
inc
mov
xchg
addr16
adc
lea
dec
insl
sub
add
add
rorb
arpl
cmp
arpl
sti
shlb
dec
sahf
fsubp
into
insb
mov
sbb
out
mov
imul
add
add
hlt
jl
dec
shr
xchg
aam
jns
sbb
and
add
add
rcrl
stos
int
add
add
mov
stc
aam
test
add
add
lcall
mov
mov
add
dec
jle
js
jo
pop
sbb
push
shl
loope
les
add
add
and
fs
arpl
cmp
sub
andl
adc
inc
add
add
call
pop
scas
add
mov
mov
icebp
cli
xor
add
add
add
mov
test
setl
xchg
lock
nop
jo
mov
push
push
enter
cmpsl
add
add
add
cmp
mov
sbb
dec
sbb
fdivl
lret
orl
add
add
pop
faddl
popa
adc
adc
or
imul
push
add
add
add
out
aaa
jp
stc
nop
mov
and
add
add
mov
cmp
lret
inc
mov
push
call
sbb
js
and
mov
sbb
mov
adc
add
add
pmaxub
mov
xor
mov
add
sub
add
add
sub
repnz
ja
loop
sbb
add
add
movnti
std
repnz
adc
daa
dec
lock
add
add
mov
add
cmp
mov
jl
mov
push
mov
or
mov
loope
or
jmp
add
add
ficomps
imul
add
add
lret
cmpsl
and
cwtl
gs
shrl
arpl
adc
cwtl
adcl
add
out
inc
jp
in
insb
mov
jnp
cli
cmp
repnz
cli
or
xchg
rep
mov
xor
inc
mov
adc
dec
add
add
push
out
mov
add
mov
idivl
xchg
push
pop
arpl
pop
dec
mov
adc
mov
add
add
jp
bnd
inc
daa
fldcw
mov
rclb
dec
sbbl
cmpsb
cmpsl
movsb
popf
mov
pop
push
xor
cmp
nop
lods
dec
cld
imul
push
ja
push
pop
jo
dec
add
add
lsl
add
add
hlt
stos
fcomip
sub
bsr
icebp
jle
cli
addb
add
add
lds
mov
add
in
pop
out
daa
loope
adc
dec
mov
push
mov
hlt
or
jbe
jmp
les
or
push
xor
add
addr16
int3
sub
xor
add
add
leave
mov
inc
shll
push
xchg
add
lcall
das
pop
shlb
lds
mov
cmp
decl
test
add
add
cmpsb
lods
push
xor
lret
and
sbb
lahf
xor
mov
test
test
jno
testb
fidivrs
mov
idivl
jg
push
mov
sbbl
fisttpll
add
add
inc
aaa
hlt
jl
cmp
lret
mov
sub
outsb
push
imul
add
push
jg
push
lods
jns
ja
add
and
add
add
loopne
mov
scas
mov
xchg
outsl
and
xor
and
pop
les
add
sub
fst
lcall
add
pop
jo
push
jge
cmpsb
scas
adc
pop
xlat
mov
shrd
add
sub
mov
dec
mov
xlat
cmp
setae
sarl
jb
dec
les
or
cltd
or
add
add
sub
or
add
pop
inc
add
add
jge
in
and
add
adc
mov
ljmp
xor
out
mov
or
add
add
add
and
sub
and
sbb
imul
jb
xor
push
in
jecxz
mov
aas
jb
pop
adc
fsubrs
out
cwtl
or
add
pop
cld
jnp
ror
cli
sbbl
push
push
or
add
add
mov
add
xlat
jle
cmp
sbb
add
add
xchg
cltd
jbe
cltd
lret
subb
mov
xchg
jge
ljmp
push
std
aaa
jecxz
repnz
sbb
sbb
loope
jmp
daa
jb
mov
add
add
add
add
pop
inc
cmp
mov
mov
or
jl
push
jbe
lea
add
add
das
sub
add
add
mov
shrl
jp
jns
mov
out
outsl
sub
add
add
pop
push
mov
iret
push
mov
js
arpl
hlt
mov
rorb
add
add
arpl
push
xchg
pushf
xchg
loopne
js
inc
mov
add
jnp
into
rcr
cmovo
add
add
xchg
add
out
jp
dec
jecxz
mov
add
add
cmp
mov
sbb
cmc
push
cmp
add
mov
pop
stos
xor
dec
push
jg
mov
xchg
jnp
jb
sub
imul
inc
xor
adc
add
add
mov
stos
add
xchg
push
mov
add
add
add
and
pop
inc
int3
mov
or
add
add
fs
sbb
stc
push
call
inc
sahf
jo
mov
mov
push
in
imul
scas
les
imull
add
add
cmp
popa
pop
outsl
aaa
scas
pop
sub
add
add
lock
add
in
cmp
movsl
and
push
xchg
lea
jmp
mov
xchg
fwait
call
add
add
rcl
mov
hlt
jbe
sbb
sbb
cmpsb
cli
idiv
out
sbb
add
add
outsb
or
add
add
add
mov
lock
sub
mov
push
ret
jne
mov
mov
mov
add
add
or
aaa
mov
in
js
outsl
cltd
pop
xlat
add
add
add
int
xchg
clc
jecxz
ljmp
pop
mov
mov
dec
iret
pop
ss
inc
add
add
mov
mov
clc
inc
push
in
pop
stc
ficomps
xor
add
add
mov
sbb
mov
mov
inc
pop
adc
jle
pop
mov
lahf
dec
add
add
sbb
iret
inc
xchg
ficoms
rcrl
cmp
mov
add
add
icebp
ret
les
stc
push
scas
xchg
outsl
add
push
jmp
mov
jecxz
test
push
push
loop
jle
stc
mov
mov
in
into
int
cltd
xchg
cld
cmc
mov
jge
es
add
add
xchg
repnz
in
cld
mov
and
mov
jg
xor
fwait
inc
out
push
pop
adc
sbb
rclb
xchg
fdivr
je
push
ss
arpl
or
inc
mov
xchg
sub
shlb
xchg
ljmp
xor
add
fs
test
arpl
push
sub
add
add
add
add
adc
mov
cld
fisttpll
iret
mov
cmpsb
inc
aam
int
test
xchg
je
add
push
inc
dec
mov
add
int
cmp
add
xor
sbb
inc
and
adc
dec
or
fnstcw
adcl
add
add
mov
mov
out
or
mov
cmp
add
mov
add
push
or
push
jecxz
or
mov
aaa
mov
mov
and
add
add
jo
pop
mov
and
cmpsb
adc
add
add
cmpsl
dec
xor
add
cld
cmp
ss
lods
cmp
lock
add
sahf
nop
mov
jbe
dec
add
add
test
notb
jae
pop
jbe
add
add
pop
dec
adc
xor
add
add
add
add
add
clc
repnz
and
add
add
in
add
add
add
pop
test
inc
mov
sbb
imul
test
mov
xor
push
jmp
or
inc
shrb
inc
mov
xor
pop
loopne
scas
out
lahf
sbb
add
cmc
pop
repz
add
aam
cli
adc
push
mov
insl
sbb
out
xor
sbb
mov
pop
fists
mov
pushf
push
sbb
add
cli
fiadds
inc
mov
lcall
xchg
dec
test
stos
aaa
fidivrl
add
add
fimuls
pop
sbbb
icebp
cmp
cmp
call
add
add
add
add
add
cmp
cmp
add
add
add
or
or
fsubrl
cwtl
adc
pusha
add
add
dec
sahf
rcll
adc
out
nop
inc
int3
outsl
outsb
out
mov
outsl
cmp
loopne
mov
pop
mov
fwait
sub
mov
test
jge
xchg
lret
add
xchg
add
add
add
ret
xor
add
add
add
add
int3
jnp
movups
jnp
in
out
jle
cmp
add
add
mov
mov
add
repnz
inc
pop
mov
add
mov
sub
aas
inc
dec
test
test
rcrb
jb
addb
add
add
mov
cmp
push
mov
add
add
out
clc
sbb
add
add
clc
mov
mov
aam
cmp
ljmp
movsb
jp
push
add
add
add
add
add
aam
dec
mov
xchg
push
and
add
adc
xor
push
cmpsb
incb
fimull
lahf
mov
jg
sbbb
add
scas
pop
arpl
call
dec
jl
lret
pushf
mov
cmp
mov
add
loope
mov
fsubl
add
xchg
lret
test
mov
sbb
sbb
jge
cli
cmp
popa
cmp
pop
fdivl
data16
push
sub
add
add
xlat
je
mov
sbb
or
mov
hlt
sub
add
add
arpl
call
xchg
dec
mov
outsl
lods
test
mov
fidivrs
bound
inc
xchg
pop
sti
arpl
add
mov
add
sbb
or
cwtl
sub
add
add
pushf
jmp
popa
pop
xchg
call
addb
inc
add
add
das
pop
out
sub
add
add
lock
add
add
out
shl
sub
add
xchg
dec
fsubs
jmp
mov
shll
mov
add
add
mov
negl
inc
pushf
add
add
add
add
cmp
mov
cmc
mov
pusha
mov
ds
mov
dec
add
add
loope
sbb
pop
orb
ret
loope
and
repz
fnstcw
enter
add
pop
roll
inc
mulb
popf
or
add
add
scas
mov
mov
dec
loop
mov
xor
sbb
shrb
sub
add
add
pop
ljmp
fsubrs
push
add
pop
jle
xor
stos
lock
js
mov
pushf
jecxz
shrl
xor
fsubs
aaa
mov
cmp
jo
mov
push
fildl
push
fcomps
xor
pop
inc
pop
push
mov
or
add
sbb
fdivp
inc
mov
add
stos
pop
xor
add
add
pop
outsb
push
sub
iret
fwait
mov
push
fimull
jnp
xorl
add
add
add
pop
inc
fsubs
adc
xchg
ja
test
add
xor
pop
jnp
jecxz
ljmp
mov
repz
mov
mov
add
add
lahf
sbb
dec
popa
aam
rclb
in
cmp
ret
pusha
mov
ljmp
xchg
fists
add
add
aaa
xchg
push
icebp
jo
jae
sbb
mov
pop
inc
xlat
adc
inc
scas
add
jmp
cmp
fwait
sub
add
mov
mov
mov
pop
dec
mov
add
add
or
popa
xchg
pushf
outsb
fcmovne
cmp
xchg
and
mov
adc
adc
jbe
inc
cmp
add
fbstp
pusha
mov
jne
or
mov
sbb
pushf
xchg
pop
mov
add
add
add
jne
xor
mov
aad
subl
fistpll
lret
lds
lods
mov
inc
mov
and
rcll
sub
mov
jl
pop
out
xor
xchg
inc
mov
mov
pop
mov
add
add
add
iret
pop
push
add
mov
dec
arpl
ja
dec
add
add
cmp
cmpsb
dec
icebp
clc
mov
mov
xor
sbb
lods
mov
add
add
cmp
xchg
pop
out
into
jg
mov
cs
cmp
cmp
int3
cli
shrb
sbb
adc
arpl
sahf
inc
addb
repz
sub
add
add
cmp
add
or
add
adc
test
dec
adc
inc
xor
mov
dec
xchg
fstl
fwait
push
adc
mov
mov
fstps
mov
enter
dec
add
add
cmpsb
jge
push
push
mov
gs
lret
lret
add
add
in
adc
insl
or
jge
mov
cwtl
scas
pop
js
jp
fistps
sbb
mov
inc
mov
mov
pop
dec
aam
scas
pushf
test
inc
xor
add
add
add
lret
add
add
dec
sub
cmp
mov
test
push
int3
std
popa
les
lock
test
loop
movsb
adcl
lcall
cmp
pop
xchg
imul
cwtl
out
fcomip
jecxz
xchg
add
ret
clc
das
jb
imul
daa
fmulp
xchg
xchg
enter
fldt
jne
or
pop
int
and
jnp
sbb
out
sbb
and
popf
cli
push
cmc
pop
mov
add
mov
add
add
mov
dec
scas
insl
xchg
enter
cmpsl
sbb
das
aaa
call
add
xor
in
leave
stos
add
or
lret
add
add
pushf
gs
push
pop
xchg
mov
push
test
shl
popa
out
fldl
inc
jns
push
lret
jbe
dec
pop
decl
insb
add
add
ss
loop
mov
jecxz
pop
xchg
fwait
mov
pop
dec
xchg
jl
hlt
pop
add
int
mov
or
xchg
mov
test
iret
push
jne
add
sbb
mov
dec
dec
mov
cwtl
out
cmp
fbstp
sub
pop
xlat
or
jecxz
add
fwait
mov
outsl
fistps
mov
test
add
call
aam
mov
add
add
add
add
cld
lods
cmp
sbb
mov
insb
mov
leave
jp
cmp
mov
add
sahf
fwait
mov
add
add
mov
cmp
imul
pop
cmp
das
sbb
add
add
add
sbb
je
mov
repz
jg
mov
mov
int3
inc
mov
sub
mov
sub
aad
cmp
arpl
push
test
push
ja
lahf
cmp
mov
mov
loop
scas
inc
xchg
or
pusha
mov
add
add
jo
cmp
jecxz
xchg
mov
dec
sub
add
cmc
sub
dec
xchg
icebp
xor
jo
inc
fisubs
or
jo
sbb
bound
pushf
mov
mov
cmp
sahf
sbb
idivb
pop
pop
imul
add
add
bound
add
add
xor
add
add
sub
add
add
mov
mov
push
xchg
mov
dec
or
add
add
into
sbb
scas
add
mov
dec
mov
push
pusha
mov
bound
mov
test
add
sub
add
add
movsb
dec
test
hlt
push
test
insb
add
add
add
add
into
lock
push
stos
cs
cmp
iret
jge
hlt
movsb
mov
jecxz
push
lods
inc
dec
add
add
into
sub
adc
add
mov
enter
dec
pop
popa
repz
mov
add
add
dec
sti
and
jp
lret
lahf
imul
xchg
fadds
pop
rolb
mov
add
add
mov
push
add
add
add
into
and
add
add
inc
add
add
mov
add
arpl
pop
dec
lret
aaa
adc
lret
fcmovb
out
dec
add
add
push
pop
sbb
sub
pop
mov
mov
jl
mov
gs
fildl
add
add
scas
sbbb
stos
cmp
mov
in
ret
pop
jne
inc
clc
adc
inc
orl
sub
cmp
add
add
add
lcall
sub
loopne
mov
cwtl
cld
shl
jne
mov
and
add
add
sbb
popa
add
add
add
cmpsl
mov
loopne
imul
adc
imul
add
add
or
inc
mov
loopne
add
add
add
cli
fs
lret
mov
dec
sbb
cmc
jbe
cmp
sub
push
lret
sub
add
add
cli
add
add
add
add
add
scas
das
mov
cmp
and
add
cwtl
and
in
add
add
add
jmp
out
add
add
add
out
dec
mov
stos
aam
sub
add
add
sbb
add
and
pop
sahf
mov
sub
mov
jl
jl
adc
dec
add
add
inc
jge
add
add
fsin
cmpsb
ficomps
imul
sub
fwait
or
add
add
mov
jp
sbb
das
js
inc
add
add
add
and
dec
mov
popf
rcrb
fdivl
gs
test
add
nopl
xchg
mov
dec
rcl
push
in
insl
jmp
xor
jne
scas
mov
mov
movsb
jl
or
rcll
add
add
pusha
mov
mov
cmp
sbb
sub
add
add
add
add
jl
sbb
leave
in
cmp
fimuls
rcll
inc
out
xor
mov
xchg
pop
jb
inc
testl
dec
inc
and
gs
add
popl
push
rcll
arpl
push
test
movsb
rorb
stos
or
add
add
mov
or
add
add
mov
mov
add
mov
gs
add
add
cmp
add
mov
fiadds
add
add
ljmp
add
pusha
add
add
sub
add
add
jg
loope
out
jb
mov
into
push
cmovno
stos
fnstcw
int
inc
and
fildl
cs
add
dec
mov
bound
rolb
add
fucom
or
xor
mov
add
inc
xchg
aad
jno
xor
bound
lods
mov
add
add
stc
sub
ss
pusha
mov
cmp
xor
jecxz
add
ret
sub
add
add
pushf
sbb
clc
xor
add
fstpl
outsl
pop
ret
or
add
add
sbbb
test
add
add
add
adc
lods
repnz
dec
dec
push
fdivrs
or
add
add
and
inc
and
or
inc
mov
jnp
add
add
add
inc
mov
add
add
insl
add
and
add
add
add
add
mov
int3
jp
sub
add
add
fstpt
rolb
sub
add
add
loopne
daa
mov
test
xchg
rolb
add
add
mov
out
lods
popf
jmp
add
add
lahf
jg
ss
imul
jle
adc
add
test
adc
in
fdivl
into
mov
mov
cmpl
dec
cli
mov
add
add
aas
popa
jne
push
adc
add
add
mov
in
das
dec
mov
mov
mov
gs
adc
repz
sti
cld
test
fwait
cs
daa
sub
loopne
out
cmpsl
push
jl
pop
or
add
add
cmp
add
add
mov
add
add
gs
cmp
add
add
imul
cmpb
add
aas
cmp
xor
cmpb
add
stc
je
push
stos
add
add
add
cmp
aas
lods
fdivl
xchg
jmp
add
add
jne
fsubrs
adc
idivb
fisubrl
jg
sbb
repz
dec
push
lahf
or
sti
cmpsb
mov
inc
mov
mov
xchg
push
outsb
jbe
mov
and
clc
or
call
test
lahf
push
sub
push
sbb
scas
pop
shrb
in
or
add
add
aas
add
add
add
xchg
or
add
add
and
das
jp
rcl
pop
xor
xor
loope
add
add
fists
je
jnp
out
sbb
divb
add
and
push
hlt
test
mov
add
ljmp
add
lahf
cmpsb
or
aam
hlt
xchg
sbb
inc
xor
add
fldpi
data16
adc
jp
jns
js
fdivr
les
add
add
pop
xchg
adc
hlt
dec
mov
scas
mov
cmc
lock
hlt
stos
pop
enter
sti
mov
jg
push
pop
mov
add
add
and
and
or
divb
xchg
repz
das
adc
je
push
mov
jle
jg
pop
clc
dec
sub
mov
add
add
sbb
and
aas
push
out
addr16
jge
imul
cmp
push
stc
push
mov
in
ja
mov
into
clc
add
mov
lea
daa
js
xlat
inc
scas
adc
add
ja
aam
dec
adc
loope
add
add
add
inc
mov
mov
loop
pop
cmp
and
inc
and
add
add
add
add
sarl
movsb
out
ja
les
add
add
jno
add
add
add
add
add
mov
mov
ljmp
jbe
jecxz
aaa
cmc
scas
hlt
or
add
add
or
jg
dec
scas
ds
jle
dec
subl
and
notl
gs
les
add
add
faddl
bound
pop
test
out
in
and
add
pop
dec
mov
and
push
or
into
inc
add
add
push
idivb
mov
aam
ja
or
add
add
pop
xchg
sbb
push
inc
sub
add
add
loop
adc
and
add
add
test
test
mov
add
inc
mov
push
lcall
add
sbb
pop
pop
jne
aad
daa
jns
adc
add
bound
adc
movsb
push
adc
xchg
adc
add
sti
jne
lock
add
add
stos
dec
mov
adc
mov
adc
pop
sub
mov
xor
jg
xor
ljmp
push
dec
loop
push
inc
out
js
push
cmc
popl
mov
les
pop
pop
movsl
push
mov
dec
push
or
add
add
sub
pop
out
pop
jo
add
add
add
mov
add
flds
add
add
popa
and
imul
add
add
add
outsb
xlat
add
into
and
mov
movsb
rcll
add
add
pop
dec
dec
imull
in
mov
enter
enter
mov
test
jb
mov
xchg
xchg
cltd
mov
and
repnz
pop
fnstcw
jge
leave
fcoml
add
add
mov
iretw
inc
mov
loop
jae
add
add
jo
pop
mov
pop
mov
loop
sub
imul
add
arpl
mov
add
add
mov
aad
sub
add
add
test
mov
dec
mov
xor
add
add
nop
and
cmp
sbb
imul
aad
mov
lret
emms
negb
cmpsb
mov
pop
and
test
mov
fisubl
xchg
fidivs
jmp
mov
mov
enter
inc
out
mov
mov
push
mov
test
add
add
jnp
sbb
mov
arpl
or
insb
add
add
es
add
jg
mov
dec
add
pop
jp
add
add
add
add
add
add
inc
push
cmp
add
add
push
mov
popf
ds
fdivr
cld
cs
jb
fimuls
add
mov
xchg
xchg
mov
add
add
movsl
call
add
cs
insl
mov
jb
int
out
push
or
stos
pushf
pusha
add
add
sub
xchg
mov
mov
and
rclb
dec
add
add
pusha
mov
pop
inc
or
add
add
add
aas
mov
daa
pop
or
add
add
mov
jae
fstp
fwait
ret
movsb
test
ja
std
fisttpl
test
sarb
cmpsb
add
add
add
ss
mov
add
add
add
add
mov
mov
movups
icebp
sbb
mov
or
call
jnp
fsubs
in
jno
add
add
jns
daa
dec
mov
fs
popa
push
mov
cltd
jl
jge
jne
xchg
and
adc
xchg
inc
or
add
add
xchg
lds
jnp
mov
push
pushf
mov
sub
add
add
add
add
sti
aad
mov
cmpsb
push
addb
test
out
push
cs
mov
mov
stos
loop
ljmp
bound
add
add
add
add
push
mov
add
inc
mov
and
add
and
xchg
push
jmp
mov
jp
push
es
add
add
push
lods
pop
inc
ds
mov
dec
roll
add
add
jnp
out
outsb
inc
pop
add
add
add
mov
adc
mov
fwait
xchg
rep
add
xor
mov
cmp
scas
jecxz
add
mov
ds
add
add
mov
stos
mov
sahf
mov
cs
pop
add
push
aas
xchg
push
jp
or
sahf
xor
xchg
filds
add
add
imul
pop
into
repnz
dec
inc
pop
mov
lock
sbb
dec
mov
sbb
pop
or
pop
je
xor
mov
lods
sub
jo
sbbb
aad
mov
or
aam
xchg
fisubrs
jae
dec
mov
jmp
scas
into
push
and
inc
scas
sbb
scas
loop
mov
jnp
or
add
add
stc
and
add
add
hlt
out
fimull
push
loopne
add
add
dec
inc
dec
add
add
out
call
sbb
add
adc
and
adc
in
pushf
ret
mov
js
mov
inc
rcll
insb
mov
rcrl
jns
add
add
loopne
dec
mov
mov
pop
outsl
shl
test
jns
jnp
lods
daa
pop
out
jo
shl
clc
and
or
add
add
adc
addr16
dec
add
add
movsl
in
mov
shrl
gs
div
and
add
add
lret
rclb
jle
cmp
add
add
mov
xchg
mov
add
aad
mov
mov
xor
addb
in
jl
sbb
clc
insb
mov
lahf
sub
add
add
cmc
sbbl
daa
mov
add
add
cmc
push
or
pop
mov
fwait
xchg
xor
dec
js
mov
pop
enter
xorl
add
add
add
jnp
add
add
add
dec
mov
add
mov
daa
loop
pop
dec
and
add
add
inc
cld
cli
iret
jmp
mov
mov
add
out
inc
mov
add
shrb
add
add
movsb
pop
adc
adcl
add
std
cmp
adc
xchg
nop
push
dec
xlat
mov
loope
push
cmp
jnp
pop
mov
add
xchg
pop
ja
and
inc
adc
add
push
pusha
mov
xchg
daa
jnp
fwait
pop
adc
shl
ds
jo
lods
jne
stos
xchg
jle,pn
aad
shrb
add
mov
dec
push
loop
mov
xor
stos
lret
aam
push
dec
cmpsl
outsl
jae
icebp
mov
jecxz
mov
addb
add
or
mov
add
add
mov
mov
dec
fisubrs
add
add
and
add
add
jnp
call
add
add
mov
and
lret
fdivl
popa
xchg
icebp
imul
mov
xchg
into
in
mov
in
out
mov
hlt
sti
inc
leave
and
add
add
shr
adc
jge
test
pusha
add
add
ret
fistpll
and
insb
add
add
mov
add
subb
mov
pushw
mov
add
add
sub
lds
add
add
scas
in
aaa
mov
bound
add
add
add
mov
add
cld
pop
or
pop
leave
xor
push
mov
inc
in
mov
jmp
roll
addr16
movsb
out
pop
jbe
mov
dec
fldt
push
in
out
jo
cmpsl
ret
sbb
in
xchg
adc
xchg
mov
repz
clc
dec
sub
pop
shl
pop
ljmp
jmp
jb
sbb
and
add
add
push
mov
movsb
shll
lods
and
dec
or
jae
or
lahf
in
push
repnz
add
add
add
mov
push
in
xchg
insl
shrl
imul
stc
ja
and
add
add
insl
and
mov
cwtl
fwait
mov
xorb
lret
inc
cli
lahf
and
add
ss
jno
dec
mov
fcoml
add
add
cs
and
pop
fistpll
add
add
xor
jnp
mov
xchg
icebp
in
mov
and
dec
xchg
mov
repnz
aas
dec
inc
jno
sahf
aam
movsl
mov
sahf
ja
out
cmpsl
add
add
ljmp
add
push
int
sbb
outsb
or
push
test
add
mov
dec
mov
dec
cmp
mov
and
fndisi(8087
xor
mov
dec
les
mov
add
push
repz
jmp
jne
out
imul
add
add
sub
mov
stc
add
add
add
bound
jns
loope
dec
test
pop
mov
add
add
out
repnz
das
out
lcall
cld
hlt
bswap
jle
aam
imul
imul
add
add
mov
lret
in
scas
jecxz
enter
test
lcall
fwait
mov
add
int
xchg
pop
dec
fadds
int
mov
shlb
add
add
cmp
pop
lods
ds
cmc
fdivl
testb
add
mov
jno
mov
push
mov
out
pop
clc
daa
push
ret
lcall
sbb
fstl
nop
mov
mov
mov
jmp
imul
add
dec
pop
test
fisubrs
pop
mov
add
cs
or
lret
enter
cmpsb
adc
shl
test
and
add
add
lret
sub
add
add
sbb
add
add
mov
add
add
mov
add
add
out
push
subl
add
add
mov
xchg
mov
inc
pop
subl
dec
push
sub
add
add
jb
test
sub
jne
jl
in
adc
add
call
add
add
bound
hlt
mov
add
add
les
xor
es
out
mov
test
movsb
scas
dec
je
mov
sbb
mov
mov
sbb
xchg
pop
and
add
add
xchg
scas
mov
dec
loop
outsb
add
add
mov
push
cmp
clc
mov
and
arpl
sbb
cmp
aam
mov
cmp
lcall
push
cmpsb
inc
pop
aas
xchg
adc
add
add
popa
pop
mov
sub
mov
inc
inc
mov
add
xchg
dec
stos
xchg
cs
shrl
cltd
sub
add
mov
outsb
test
jne
adc
ret
inc
icebp
aam
cmp
bound
jl
add
add
add
or
outsb
xor
cltd
cmp
push
repz
roll
add
pop
adc
mov
pop
imul
inc
jb
adc
add
add
push
mov
add
mov
clc
arpl
into
lea
movsb
inc
mov
ror
push
rclb
cmp
or
mov
add
pop
mov
jb
push
inc
iret
or
add
add
sbb
xchg
lock
jo
cltd
mov
out
shlb
inc
inc
pop
and
into
sub
add
add
xchg
or
add
add
add
add
mov
pop
out
ljmp
pop
lods
xchg
push
insl
push
or
sahf
andl
xor
fmuls
rcll
push
out
adc
inc
mov
or
inc
mov
scas
xor
mov
mov
ja
push
nop
decb
stos
cld
imul
add
dec
cltd
movsl
xor
cpuid
dec
jbe
pop
xor
stos
cmp
push
outsb
lods
in
repnz
add
and
lds
mov
or
sub
add
cmp
pop
enter
in
pop
ret
xchg
shrl
pushf
imulb
imul
jbe
out
inc
push
orl
add
add
xor
mov
icebp
fildll
add
pop
push
dec
mov
or
cmc
fisubl
es
cmpsl
call
jl
mov
hlt
push
cmp
lods
adc
sbb
add
xor
std
ljmp
gs
push
add
add
add
popa
popa
jns
mov
push
cmp
mov
aaa
add
push
test
sub
adc
pop
mov
add
pop
mov
shl
ret
mov
adcl
loopne
xor
leave
jecxz
or
add
add
popf
jne
aas
shll
sarl
jge
rolb
ret
add
add
repnz
add
in
cmp
daa
negl
mov
xorl
xor
pop
popf
pop
sbbb
push
lods
add
je
jne
lea
lret
xchg
stos
pop
stos
insb
mov
add
add
jnp
das
inc
xor
cmp
add
jno
sub
shl
fs
es
outsl
sbb
les
mov
mov
mov
mov
add
add
aad
cmp
frstor
adc
add
es
add
add
cmp
ficoml
jae
mov
add
iret
cmp
mov
add
imul
movsl
loopne
mov
sbb
add
add
jnp
iret
mov
adc
arpl
ljmp
adc
xchg
arpl
sbb
add
xor
add
add
xchg
flds
sbb
inc
sbb
mov
add
leave
push
daa
and
shl
pop
aam
inc
mov
mov
adc
data16
cltd
mov
pop
xchg
xchg
inc
pop
cmp
fsts
add
add
add
add
lds
add
add
adc
or
mov
leave
mov
shll
add
jecxz
movsb
cmp
push
push
pop
pop
std
inc
stos
addr16
scas
ja
push
ficompl
inc
cmp
cmc
adc
mov
popaw
outsb
cmpsl
adc
xor
out
jno
lahf
movsl
dec
mov
pop
dec
pop
nop
mov
add
add
aam
sbb
test
ljmp
mov
add
pop
lret
and
adc
out
pop
imul
loopne
cltd
xchg
jl
insb
add
add
adc
mov
push
mov
add
inc
add
add
flds
pop
test
xchg
fst
negl
mov
leave
in
clc
or
loope
lahf
aaa
orb
outsb
adc
add
add
mov
not
add
jnp
sar
push
andb
and
jge
or
dec
cltd
mov
inc
add
add
fsubs
arpl
insl
aas
pop
in
and
icebp
add
adc
adc
mov
adc
jnp
test
inc
mov
scas
jl
rclb
xchg
inc
popf
pop
popf
inc
testl
js
movsl
mov
push
das
cmp
cmp
fimull
add
and
pop
sbb
add
testl
pop
shll
cmp
and
add
add
cmpl
mov
lods
mov
pusha
mov
mov
out
sbb
std
jle
push
jbe
mov
mov
xchg
insl
inc
cmc
scas
xchg
out
lods
arpl
add
add
rolb
dec
push
test
inc
mov
mov
popf
sub
pop
sbb
or
add
add
ror
aam
rcrb
in
push
lods
cmc
daa
aad
pop
out
jbe
adc
out
inc
add
add
adc
xor
clc
lods
filds
mov
push
and
add
add
mov
lcall
iret
lock
mov
inc
add
add
and
add
add
mov
sbb
test
sub
mov
push
fistl
mov
sub
add
jg
inc
add
add
dec
add
add
repz
test
in
test
notb
leave
mov
mov
mov
mov
fsubs
jl
and
add
add
push
cmp
jae
aam
fsubp
lea
arpl
add
or
xchg
cli
stos
pop
sarl
jle
lea
inc
orl
add
lahf
icebp
and
add
cmp
jle
ret
mov
sub
cmp
test
add
in
fwait
mov
cmp
pushf
fcmovbe
into
je
scas
mov
pop
sub
loope
neg
mov
test
push
into
aad
sbb
mov
scas
mov
cmc
jo
xor
into
sti
or
add
add
add
and
and
add
add
insl
dec
pushf
loope
cld
adcb
mov
lods
sbb
xorl
push
jl
loopne
add
add
test
in
inc
add
add
int3
subl
add
add
sub
jnp
outsb
pop
lds
sbb
pop
pop
repnz
xor
adc
pushf
lock
jns
rcll
outsb
mov
jne
add
add
call
xchg
dec
xor
lahf
nop
not
sbb
outsb
inc
cmp
loopne
sbb
add
add
test
pop
lret
cmp
add
add
add
push
inc
mov
test
sahf
mov
std
mov
mov
xchg
mov
lds
add
in
inc
jno
movsb
outsl
sub
in
mov
add
add
mov
daa
icebp
or
add
add
add
sub
stos
fistpl
lods
rcl
mov
push
aaa
fs
pusha
add
add
mov
sarb
mov
jmp
out
xchg
and
add
outsb
data16
shrb
lcall
push
sub
inc
mov
std
in
xchg
sti
mov
add
shll
dec
mov
push
jmp
cmp
sub
add
add
xchg
hlt
flds
add
add
mov
lcall
jp
adcb
dec
aaa
or
add
add
mov
mov
hlt
push
mov
adc
cld
in
movb
popa
xlat
jle
sahf
jns
adc
mov
lcall
cwtl
pusha
add
add
dec
stos
jg
aaa
call
test
or
add
add
mov
daa
xchg
scas
sub
cltd
or
add
add
lods
inc
or
add
add
into
inc
addr16
dec
and
add
dec
inc
fst
test
loope
mov
jle
mov
in
and
lahf
add
outsb
in
ds
adc
fstpl
add
jg
sub
adc
cmpsb
sbbb
fnsave
aas
clc
loop
daa
pmuludq
dec
sub
gs
lods
inc
mov
mov
cmc
push
xchg
mov
add
add
jbe
cltd
test
call
cmp
xor
fcomps
mov
gs
shrd
add
xor
call
add
inc
pop
iret
mov
add
jae
cmc
sub
add
in
arpl
mov
add
xchg
sub
mov
mov
xor
ret
jb
push
push
cld
add
hlt
fsubrs
push
out
mov
sub
add
add
nop
sub
add
add
fwait
dec
mov
push
fimull
add
add
rolb
adc
add
add
cltd
adc
pop
stos
test
lods
push
cmp
jl
push
mov
les
in
pop
repz
xchg
pop
adc
cmpsb
loop
insb
mov
cmp
cs
mov
jecxz
inc
fldz
enter
ret
inc
push
scas
dec
adc
xchg
int3
popf
add
xor
lret
cmp
loope
cmpsb
push
int
mov
xchg
cwtl
jns
and
mov
fwait
js
fdivs
push
add
add
add
pop
or
pop
push
lods
test
cmp
rolb
or
add
add
add
inc
test
out
int
mov
scas
loope
cltd
iret
mov
loope
xor
lahf
pop
add
add
mov
ss
cmp
add
add
xor
push
xchg
lgs
jne
pop
and
arpl
int3
push
add
add
mov
mov
stc
sbb
push
popa
mov
sbb
push
adc
mov
mov
xor
xor
add
add
and
add
fucomip
aas
sub
cmp
add
lock
out
mov
in
adc
imul
fildl
jo
into
lcall
add
add
add
lods
mov
add
int
shll
sarb
add
imul
or
cltd
dec
mov
fldt
add
add
insl
int3
idivl
mov
out
push
mov
add
add
mov
pusha
add
add
dec
mov
add
jo
mov
add
ret
or
mov
aaa
cmp
push
mov
add
add
add
filds
push
ja
mov
std
jmp
repnz
add
add
cmp
scas
bnd
iret
cmp
lock
repnz
mov
mov
pop
out
sub
add
add
std
loop
daa
xchg
add
add
add
sbb
mov
inc
add
add
shl
xor
and
icebp
cmp
inc
mov
mov
mov
or
add
add
and
add
add
das
arpl
out
jbe
jl
jle
inc
jg
outsl
fdivrs
adc
mov
outsl
je
xlat
iret
mov
add
hlt
mov
add
add
mov
shlb
pop
out
push
imul
add
test
movsl
jns
cli
pop
in
mov
add
pop
shrb
add
add
mov
dec
dec
mov
push
inc
pop
or
and
add
add
in
mov
xchg
aaa
subl
clc
shrb
sub
adc
adc
mov
or
mov
pop
ficomps
loopne
sbb
cmp
and
add
add
add
push
sub
or
add
add
scas
adc
and
lret
mov
insb
mov
loop
outsl
out
xchg
int3
shr
testb
push
js
cmpsl
pop
dec
jns
cmp
mov
lcall
or
add
add
add
add
add
add
push
fadd
inc
mov
das
push
sub
pop
push
and
out
xor
pushf
mov
xor
add
repz
mov
addr16
popa
ss
ss
cmpb
ret
jbe
sub
jg
add
das
xor
mov
xor
xlat
shll
add
add
in
shlb
movsb
data16
pushf
push
pop
sub
rcl
adc
sbb
lret
in
ss
add
add
bound
mov
sub
int
jle
divl
pop
mov
xchg
inc
imull
aaa
lods
cmp
add
pop
cli
xor
add
add
stos
test
push
mov
add
add
enter
inc
add
add
js
movsl
fisttpll
push
mov
mov
aam
jo
rcr
cltd
add
pop
mov
add
fnstsw
xchg
test
fmulp
xchg
and
jp
clc
and
add
add
jmp
pop
pop
adc
cmpsb
orl
mov
mov
clc
sbb
test
ljmp
shlb
fisttps
daa
dec
dec
sarb
add
adc
jae
jb
inc
mov
dec
pop
mov
leave
mov
dec
add
add
jge
push
xchg
jg
sarb
jp
fincstp
mov
xchg
mov
jo
pop
pusha
add
add
jae
pop
jo
iret
jp
leave
mov
add
inc
mov
mov
add
add
cli
sub
out
insb
mov
icebp
icebp
sar
js
lods
jae
cmpsb
lds
inc
mov
popa
movsb
lret
add
add
mov
inc
cld
and
add
das
aas
shlb
add
add
call
push
adc
lock
daa
and
push
jbe
in
out
xchg
loop
loop
fs
mov
repz
bound
mov
out
andb
add
sbb
dec
inc
rcr
ror
dec
add
add
repnz
aam
and
adc
dec
add
add
mov
add
outsl
sarb
push
subl
fwait
dec
jp
push
movsb
loop
xor
add
add
or
dec
jecxz
popa
or
add
add
cmc
stc
cmp
test
pop
lods
sbb
adc
add
mov
add
push
add
test
in
mov
jnp
mov
subl
xchg
loope
pop
fsubs
push
sbb
es
pop
sub
call
std
enter
in
leave
pop
sub
add
add
mov
mov
add
add
repz
out
cmp
mov
shll
sub
or
popf
jge
pop
into
sbb
dec
or
xor
xor
lds
cmp
fs
ret
push
jg
mov
mov
or
mov
add
add
pop
mov
ljmp
das
jns
mov
jle
pushf
pop
fnsave
sahf
inc
lret
fimuls
and
mov
insb
mov
jnp
add
add
add
add
js
aas
test
sbb
pop
push
add
add
add
bound
push
cmp
fwait
jp
mov
pushf
data16
cmpsb
lock
xchg
adc
push
in
sti
add
add
shrb
xchg
push
cmp
add
dec
and
daa
inc
mov
push
je
divl
inc
mov
xchg
lret
inc
shrb
jb
test
add
add
push
call
imulb
or
nop
fwait
mov
xor
test
add
jge
jl
mov
xor
xor
add
out
mov
aas
rcrb
out
pop
jb
cmp
cmpsb
xchg
mov
sarl
add
add
sahf
jle
cwtl
jg
mov
mov
add
and
or
add
add
mov
dec
inc
cmpsb
inc
xchg
or
dec
popf
lcall
and
add
add
inc
mov
mov
pop
pop
scas
in
out
jae
or
add
add
dec
add
add
xchg
mov
cmc
lock
dec
gs
repz
outsl
cmc
pop
arpl
loopne
add
add
mov
add
add
sub
mov
mov
add
or
xlat
out
dec
ss
les
inc
push
imul
data16
mov
in
ja
add
add
pop
xor
xor
les
cmp
mov
lahf
scas
sar
xchg
jno
test
sbbl
cmp
flds
das
orl
icebp
call
addl
mov
jb
pushf
mov
add
add
xchg
mov
dec
in
add
add
pop
addb
mov
adc
add
aad
push
push
imulb
scas
ss
cwtl
loop
ret
bound
pop
test
add
rorl
add
add
idivb
push
mov
outsb
pop
xchg
or
add
add
loope
sbb
stos
cmp
ljmp
pop
mov
ljmp
mov
movsb
sti
les
aam
xchg
call
pop
test
jbe
insb
add
add
xchg
mov
lock
mov
mov
xchg
and
stos
insl
mov
cmc
inc
xor
fdivrs
mov
add
mov
xor
into
mov
in
mov
jl
push
in
stos
push
lcall
add
pop
cltd
dec
mov
pminsw
push
push
adc
push
or
dec
js
mov
jno
cli
cmpsb
dec
sub
or
hlt
mov
push
sbb
dec
test
pop
and
add
sti
cld
rdpmc
cmp
inc
inc
mov
lret
jge
sahf
inc
add
add
aam
xchg
add
add
xorl
fwait
cli
mov
andb
add
add
mov
add
add
xor
mov
sub
add
add
cld
lahf
sub
lret
add
add
stos
pop
inc
bound
lds
xor
xor
add
add
leave
jns
insl
fmuls
aam
sbb
aas
jge
pop
dec
into
dec
add
add
movsb
ret
cmc
in
cmp
push
jne
sbb
or
add
add
mov
mov
mov
mov
add
add
add
cmc
pop
jb
mov
repnz
add
mov
pop
loope
imul
scas
cwtl
sbbw
add
add
fwait
sbb
sbb
add
add
jecxz
add
add
jg
push
pop
xchg
lock
fldenv
mov
in
push
out
adc
and
dec
mov
pusha
mov
jae
or
add
add
lret
jl
leave
push
fwait
mov
inc
or
add
add
stos
shl
pop
cmp
dec
loope
xchg
dec
add
add
addr16
loop
out
iret
data16
js
mov
sbb
cmpsb
pop
pop
sub
mov
inc
rcr
popf
push
orb
inc
call
cmpsb
insl
or
fisttpl
jns
fidivrs
cmp
lahf
sahf
repnz
push
js
nop
scas
and
ds
cli
or
adc
jge
mov
and
add
add
jmp
imul
add
xor
mov
mov
cmp
jecxz
test
mov
xchg
fwait
pop
sub
lock
cwtl
mov
popa
xor
add
test
cmp
sub
add
add
push
stos
push
das
test
test
add
sbb
add
fcompl
jg
push
outsb
mov
cmpsl
mov
push
stos
and
popa
add
add
adc
mov
add
add
js
add
add
push
hlt
daa
out
xor
cmc
xor
dec
mov
add
cwtl
dec
and
add
movsl
stos
mov
or
pop
dec
lods
pop
add
add
add
sub
clc
cmp
fucomp
outsl
pop
das
jmp
add
add
icebp
clc
seto
push
stc
pop
loop
shrl
add
xchg
js
lods
fs
sub
add
add
dec
push
std
cmpsb
pop
aad
frstor
xchg
aaa
test
sub
int3
xcrypt-ctr
cmpsl
pushf
loope
xchg
rcr
lods
xchg
xchg
push
aaa
out
ret
nop
add
add
add
mov
rorb
add
add
add
jno
imull
das
push
sub
add
adc
jnp
bound
add
inc
mov
inc
push
fdivrs
add
add
add
loopne
push
adc
add
add
add
add
push
shl
or
lea
loop
sub
jmp
repnz
lret
in
add
add
add
ds
sbb
add
adc
jo
cwtl
add
add
add
add
add
popf
jmp
jp
and
jg
wrmsr
lock
daa
popa
orb
cmc
sbbb
lret
jae
dec
push
testb
orl
inc
push
sbb
add
add
loope
sbb
pop
xchg
aas
aas
cltd
fsts
jns
push
outsl
xchg
js
flds
dec
xor
dec
add
add
inc
mov
scas
daa
jo
popa
inc
mov
xchg
jmp
sub
add
add
xchg
aas
xor
jo
adc
adc
pop
jns
mov
add
add
not
movsl
addl
pop
jp
fdivr
cltd
sbb
xchg
inc
add
add
ja
mov
dec
add
add
add
push
xor
xor
xchg
idiv
fimull
add
add
sbb
jb
mov
or
sub
test
loope
mov
pop
dec
pop
ficompl
das
jl
add
add
inc
xchg
dec
mov
add
add
add
push
sbb
cld
pop
xchg
add
add
pusha
add
add
push
mov
idivb
cmpsb
mov
and
sbb
mov
mov
add
ficomps
flds
mov
jecxz
cmp
mov
mov
pop
sub
add
add
and
loop
xor
cld
mov
ret
popa
mov
cli
sbb
add
ss
ret
mov
push
cmp
cmp
add
add
jmp
shll
push
lock
test
add
popa
cmp
ret
sub
add
add
dec
call
rcrb
adc
add
add
test
mov
pop
data16
gs
sbb
xchg
push
repz
xchg
out
test
fldt
movsl
test
sub
add
add
mov
pop
fwait
lcall
xchg
pop
push
pusha
mov
les
mov
bound
popl
add
add
call
add
in
jne
add
add
out
test
sub
sti
out
xchg
or
add
add
add
add
mov
jo
cmp
lahf
or
add
add
add
cs
xor
mov
xor
add
pop
cmpsb
jecxz
iret
xorb
xchg
mov
mov
repnz
cmp
or
add
add
add
inc
xor
jo
out
add
add
adc
cmp
or
add
add
add
add
cmove
lea
or
add
add
push
stc
jne
add
into
in
iret
sub
add
add
jnp
pop
xor
pusha
mov
add
lods
fdivs
fildll
popf
lods
mov
nop
xor
ljmp
pop
jl
nop
or
dec
mov
jmp
sti
enter
mov
push
cmpb
das
xlat
out
cmp
add
ret
inc
add
add
mov
jge,pt
sbb
jecxz
fs
call
nop
pop
cmp
inc
lea
sbb
movsl
mov
subl
add
add
call
adc
ss
cmp
xchg
loop
add
loope
push
in
bound
add
add
out
dec
je
and
jp
sub
jmp
je
xor
in
cltd
jo
mov
cltd
push
push
push
scas
icebp
push
js
add
add
push
data16
xchg
imull
add
adc
sbb
in
pushf
xor
icebp
scas
lock
mov
add
bound
add
add
scas
data16
add
add
adc
add
add
test
mov
jo
mov
loopne
adc
add
in
cmpsb
inc
aas
mov
dec
add
add
add
js
xchg
xor
jp
sbb
xlat
mov
or
cmp
jnp
mov
lahf
ss
or
add
add
mov
mov
add
mov
ret
jae
mov
jnp
orl
lret
lds
add
dec
cmp
jo
les
cwtl
loopne
clc
jne
sbb
pushf
jbe
mov
aam
inc
data16
xor
jae
mov
sbb
push
mov
and
mov
dec
add
add
and
add
add
out
jb
ficoml
stos
cmpb
andb
jb
insb
add
add
mov
faddl
pop
loope
das
xchg
mov
add
cmc
push
ss
cs
or
ret
repz
movsb
xlat
fnstenv
inc
arpl
xlat
rolb
test
jle
xchg
arpl
cmp
add
fidivs
arpl
popa
jns
shll
push
cmp
add
loop
sti
xchg
or
fimull
mov
add
add
mov
gs
decb
add
add
cmp
loop
ficoms
add
sub
add
add
pop
inc
imul
int
aad
cmp
xchg
add
add
inc
pop
jge
loope
lods
jle
shll
stc
imul
add
repnz
pusha
add
add
decl
push
jbe
cmp
js
fwait
popf
xlat
das
arpl
in
es
jl
mov
xchg
pop
lds
xchg
jmp
jns
test
gs
cmp
sub
add
add
dec
xor
push
cmp
ret
mov
jb
aaa
cmp
std
dec
jp
pop
xchg
loope
pusha
add
add
addr16
xchg
add
and
pop
jg
das
movsl
fdivs
ljmp
in
fbstp
or
add
add
data16
shll
lds
add
add
and
jnp
lcall
arpl
test
add
add
inc
lds
jns
dec
adc
leave
pop
mov
movsb
inc
sahf
je
adc
push
lods
cmp
jbe
push
mov
loope
mov
mov
jne
xor
push
or
mov
ret
pop
je
mov
enter
push
nop
cmp
sbb
dec
popa
ds
pop
cmp
inc
lods
out
notb
sub
add
pop
in
mov
or
jnp
xchg
int3
pushf
xor
nop
arpl
ja
test
out
cmc
mov
xchg
mov
fxch
es
setb
add
test
es
and
lcall
jae
icebp
add
add
add
pop
lods
bound
or
add
cmp
aad
ss
push
xchg
cmp
add
add
or
add
add
add
and
cld
push
jb
inc
push
in
xor
outsb
xchg
ljmp
mov
push
sub
xchg
adc
data16
xor
adc
inc
mov
jecxz
jecxz
lcall
jno
cltd
add
aad
cmp
shl
xor
add
jecxz
cmp
stos
clc
jae
inc
sub
add
add
mov
movsb
aas
push
add
add
ret
jb
loop
mov
in
jnp
pop
sub
dec
mov
lret
daa
cld
cmp
arpl
push
pop
out
in
xchg
adc
and
add
mov
cmpsb
lds
sbb
cmp
dec
int3
or
add
add
dec
mov
pop
test
stos
fimull
jnp
out
sub
addb
mov
loop
xchg
adcb
add
add
clc
dec
fdivrs
sti
or
add
mov
fstpl
add
add
loopne
ror
mov
rorl
add
add
push
adc
push
push
fstp
ja
adc
cli
mov
insb
mov
push
inc
push
pop
notb
push
mov
or
cltd
int3
add
pusha
add
add
sub
dec
pop
add
es
scas
outsb
xchg
push
test
hlt
les
jl
mov
xor
add
mov
dec
or
ss
out
mov
pop
ror
movsl
jns
shl
nop
and
add
add
add
jne
fs
jb
jae
mov
jmp
mov
push
or
pop
or
add
add
loope
adc
or
add
fs
dec
mov
jl
int
sbb
stos
sub
cmp
add
add
jnp
pop
out
mov
mov
dec
fwait
test
sti
aaa
aam
pop
push
nop
sub
setns
shll
mov
jae
out
inc
add
add
arpl
mov
lret
fmuls
test
jmp
rol
into
cwtl
pop
xor
xchg
xchg
jne
add
add
jb
add
add
setns
mov
cld
or
add
add
ret
aad
mov
ret
imul
insl
sbb
stos
mov
mov
inc
push
inc
daa
es
stos
mov
lahf
add
add
add
add
mov
jge
dec
push
call
cmp
lcall
jmp
stos
xchg
aas
pop
pop
mov
inc
test
cmp
inc
sbb
mov
dec
ds
ljmp
add
les
add
and
dec
lds
add
lds
iret
es
inc
nop
mov
pop
push
or
stos
inc
cmp
sarb
xor
mov
inc
jl
stc
cmp
mov
mov
lea
mov
cmp
jecxz
nop
inc
add
add
jmp
bound
add
fbld
pusha
add
add
fsub
stos
ret
sbb
jg
je
stos
mov
pushf
loop
pushf
adc
clc
popf
andb
into
mov
insl
stc
adc
cmpl
xor
pop
into
in
mov
add
add
insl
sbb
add
add
adc
pop
add
and
inc
sbb
in
addr16
fisubs
out
jns
lods
push
mov
push
add
and
inc
or
arpl
mov
jmp
enter
cmp
mov
aaa
push
pop
es
movsl
adc
int
pop
rclb
pop
sbb
cs
add
add
imul
lret
ret
add
add
mov
dec
rcrl
repz
xor
fwait
jge
ss
push
sub
hlt
dec
sbb
add
add
dec
push
pop
mov
xchg
mov
add
xor
pop
jb
hlt
mov
jae
cld
fdivrs
jmp
lret
dec
stc
pop
mov
clc
fldcw
add
add
mov
cmp
dec
xchg
loope
daa
mov
sub
lahf
lret
cmp
cmp
xor
sub
repnz
fisttpll
daa
xchg
test
sbb
push
test
hlt
mov
push
lret
xlat
jns
pop
into
pusha
add
add
sbb
inc
push
push
outsl
push
fucomip
iret
or
add
mov
lods
rcl
fisubrl
in
dec
adc
lahf
roll
mov
add
add
cmc
int3
or
outsl
out
cwtl
lahf
sbb
mov
lcall
sahf
imul
add
xchg
repz
pop
add
add
add
rclb
loop
pop
inc
cmpsb
push
sbb
outsb
xchg
jp
popa
and
add
add
idivb
in
and
add
add
stos
mov
push
sbb
out
dec
lods
xchg
sub
add
add
cmc
enter
ljmp
dec
lea
xor
push
cmp
mov
add
add
mov
js
pop
and
add
add
and
addr16
push
or
movsl
cmp
out
test
int
idivb
lahf
scas
inc
add
add
out
jge
in
mov
or
add
add
fnstenv
xor
imul
fisubs
pop
mov
sub
leave
addr16
cmp
push
cld
sahf
xchg
mov
js
add
add
sbb
aaa
xchg
out
fisttpl
fwait
rcrb
je
jl
jmp
jge
jl
push
mov
sub
idivb
jmp
add
add
mov
lahf
and
mov
add
enter
add
popa
int
mov
and
adc
add
stos
or
das
jl
or
mov
inc
push
lcall
dec
cmc
xchg
lahf
adc
add
add
xchg
push
sar
loope
sub
push
and
add
add
popa
xchg
sti
mov
call
test
repz
mov
outsb
cmp
push
mov
popf
push
pushf
dec
add
add
cmp
add
add
sahf
adc
jns
mov
add
loop
xlat
mov
add
mov
stos
les
jmp
add
add
out
pop
fisubs
add
add
inc
addr16
jg
xor
mov
shll
add
insb
add
add
jge
lahf
out
xchg
repz
mov
leave
cld
lahf
lea
shl
mov
gs
mov
pop
xchg
and
add
add
xor
test
lahf
sub
jns
xchg
rorl
add
add
sarl
add
xchg
inc
mov
mov
out
adc
add
add
orl
cltd
test
fstpl
sbb
mov
sti
pop
jnp
rorb
inc
ljmp
mov
mov
or
hlt
xor
jge
sub
xor
mov
mov
mov
add
loope
clc
out
stos
pop
adc
shrb
add
add
inc
xlat
icebp
mov
call
data16
add
add
lods
xorl
nop
js
js
mov
test
dec
mov
shrl
mov
mov
movsl
xor
add
add
adc
int
mov
js
add
add
cltd
mov
jl
sahf
insl
jae
pop
iret
inc
mov
dec
add
add
sub
or
mov
cmp
or
jge
sub
add
add
mov
xchg
in
push
add
add
add
aas
sub
add
add
idivl
sub
add
and
aad
xchg
test
outsl
pop
xlat
in
call
enter
jge
mov
pop
mov
ja
fbld
mov
iret
scas
stos
pop
jecxz
jne
and
or
cmp
scas
cmp
repz
int3
and
add
add
inc
mov
add
int
clc
xorb
sbb
pop
cwtl
adc
mov
cmpsb
cmc
xor
inc
in
repnz
cld
jle
add
jo
add
add
std
mov
add
add
inc
loopne
inc
fmulp
ljmp
add
add
add
sub
add
add
push
xchg
add
xchg
repnz
icebp
inc
icebp
imul
add
add
fsubs
in
xor
add
outsl
and
add
add
mov
std
mov
add
lret
sub
test
movsl
mov
adc
dec
cmp
and
add
add
ficompl
aam
or
add
add
cmp
add
add
add
dec
repz
es
sub
pop
inc
inc
mov
ja
lock
mov
mov
mov
mov
mov
leave
pop
mov
test
aam
push
or
mov
imul
test
or
push
jle
mov
and
add
add
cmp
daa
inc
and
add
add
sub
les
add
inc
fnstcw
cmpsl
jg
out
mov
mov
xor
adc
pusha
add
add
cmp
dec
outsl
inc
push
sub
popa
dec
add
add
lock
and
push
mov
lret
pop
inc
jle
inc
add
add
iret
sub
add
add
sub
xor
and
outsl
dec
inc
ror
dec
and
mov
mov
add
add
ljmp
dec
dec
dec
in
into
rorb
and
lods
or
test
xchg
and
add
add
add
add
outsb
inc
dec
cld
mov
mov
mov
daa
fsubrs
jo
add
add
fildll
test
jae
jnp
je
pop
iret
xchg
add
add
sub
mov
insb
mov
dec
add
add
dec
mov
inc
enter
jo
add
add
dec
cli
mov
lcall
sub
bound
mov
rcr
push
mov
xchg
in
popa
outsb
in
test
add
add
loope
xchg
adc
ret
or
add
add
addb
add
shufps
mov
scas
es
ret
lods
test
push
add
add
add
sbb
mov
cmc
dec
mov
jmp
pop
cs
mov
repnz
and
add
add
cmpsb
xchg
dec
mov
addl
mov
sub
add
add
or
add
add
xchg
adc
and
rclb
int
push
sbb
movsl
icebp
sarl
push
push
mov
outsl
js
push
mov
dec
dec
mov
rolb
xorl
fsubp
xchg
jnp
xor
push
inc
push
mov
xchg
cmpsl
out
add
add
add
push
ret
jno
leave
xor
jmp
cmpsb
cmpl
mov
fsubrl
add
add
repz
mov
repz
js
or
jo
mov
idivb
or
add
add
push
sbb
adcb
ds
sbb
sbb
cmpsl
andl
daa
enter
add
add
add
xchg
mov
jne
or
add
add
lock
ljmp
add
add
bound
add
rorb
xchg
xor
lods
fmuls
ja
lods
aad
jg
jae
add
add
xchg
xchg
mov
std
or
add
add
cmpsl
jb
add
add
add
jl
loop
mov
sbbb
dec
mov
add
add
repz
add
daa
sbb
inc
pusha
mov
cld
fistpl
hlt
stos
lods
cmp
fchs
fdivrs
pop
xchg
jbe
addr16
fninit
jle
daa
sub
pcmpgtb
add
add
in
lret
mov
dec
pop
ljmp
add
add
int3
or
add
pushf
push
iret
and
add
aam
cmp
add
add
enter
add
add
sbb
add
or
lea
dec
fnstenv
cmp
lods
pop
push
pop
sbb
xchg
cwtl
lods
push
loop
pusha
mov
arpl
dec
movsl
scas
jle
add
add
jle
pop
cmp
add
mov
push
push
test
adc
in
jmp
adc
jg
mov
add
add
sub
add
add
xor
icebp
cli
mov
adc
popf
nop
and
add
add
pop
lock
or
fcompl
aad
mov
test
cmpsb
mov
mov
mov
lds
dec
add
add
cwtl
aas
out
xor
loopne
pop
adc
or
add
add
push
outsl
repnz
add
dec
add
aad
repz
adc
add
sbb
inc
iret
fmul
mov
add
jl
ljmp
xor
ja
jle
jnp
push
sbb
push
add
inc
add
add
out
dec
stc
fmulp
jne
inc
adc
xor
ds
mov
inc
int3
sub
cmpsb
push
aaa
jo
in
das
inc
std
add
push
push
in
in
das
ds
add
add
lahf
mov
sbb
jb
cmp
dec
xchg
rcl
push
sahf
outsl
fildll
add
cmp
fwait
mov
and
adc
mov
add
pusha
add
add
cmpsl
outsb
fistps
sub
or
add
adc
outsl
adc
mov
add
sbb
mov
cmp
stc
xchg
test
in
push
test
ljmp
add
repnz
out
js
mov
stos
mov
add
sub
add
add
xchg
add
pop
mov
ds
push
mov
fwait
or
add
add
lret
or
add
out
fidivrs
add
mov
cs
adc
pop
mov
pop
jns
xor
mov
sbb
sahf
fwait
in
ss
pop
lea
rcrl
imul
add
and
in
popa
xor
mov
lods
adc
inc
in
movsb
in
ds
hlt
xchg
les
add
add
mov
test
repnz
clc
stc
jns
int3
ret
loopne
loop
mov
adc
mov
add
add
fsubr
xchg
pop
push
mov
add
and
enter
sub
add
add
add
add
ret
mov
sbb
add
add
lret
jp
loope
and
dec
int
fyl2x
mov
arpl
xor
loopne
nop
push
mov
shrb
add
add
adc
arpl
popa
test
loopne
fs
into
lea
and
add
add
in
sbb
adc
dec
jne
rcll
push
fdiv
push
xchg
push
cli
mov
movsb
stos
aas
jg
fadds
add
in
loope
stos
pusha
mov
mov
push
int
jbe
add
add
add
mov
inc
loop
adc
inc
clc
xchg
push
sar
cwtl
data16
lock
pop
divb
push
or
add
add
add
add
jge
jae
les
mov
add
xor
pop
ret
push
addb
dec
add
add
push
mov
dec
xlat
lods
outsl
sub
add
inc
jge
push
fildl
jmp
movsl
xchg
pop
subl
push
inc
pushl
gs
fs
nop
xchg
sbb
rorl
mov
add
add
shlb
stos
push
pop
or
jae
cmp
movsl
addr16
out
push
subb
mov
rcrb
insb
mov
scas
out
dec
repnz
or
sahf
cmp
lods
mov
cmpsb
popf
mov
cmp
adc
add
xor
ret
dec
add
add
pop
scas
aaa
pop
add
dec
fcomps
mov
add
stos
aad
dec
ret
mov
jecxz
adc
es
cmc
jne
push
sti
xor
or
add
add
inc
add
add
mov
imul
test
divl
repnz
popa
mov
mov
dec
cmpsb
nop
enter
xor
adc
push
inc
repz
add
add
dec
add
add
adc
mov
subl
call
pop
lds
jl
test
dec
negb
das
xchg
shll
push
push
stos
cmpsl
add
add
add
leave
cmp
out
mov
lods
mov
sti
push
or
add
add
dec
and
mov
mov
jp
movsl
mov
adc
mov
mov
pop
xchg
sub
add
add
mov
push
mov
sbb
push
and
xor
pop
mov
fdivrp
push
jmp
out
pop
pushf
pop
insl
std
stos
lods
rolb
jmp
sub
sar
cmp
lods
lret
bound
out
stc
mov
sbbb
pop
sbb
xor
mov
xor
mov
add
add
xchg
add
xor
hlt
ret
dec
add
add
pushf
jg
hlt
outsb
jne
sahf
cmp
leave
dec
mov
jecxz
icebp
ret
jg
imull
sub
pop
mov
ds
fadds
push
jmp
jmp
orl
iret
and
push
pop
shrl
imul
xorb
pop
sbb
fistpl
pop
testb
add
addb
cmp
scas
jle
mov
jp
mov
jnp
jno
add
add
add
icebp
loopne
fcmovu
dec
mov
pop
hlt
jb
scas
out
pusha
mov
mov
add
add
add
add
sub
add
jae
dec
pop
mov
add
add
into
xchg
mov
loopne
and
add
add
mov
lock
in
bound
xchg
hlt
add
add
add
xchg
mov
insl
dec
mov
std
push
cmp
mov
dec
xchg
sub
add
add
jecxz
cwtl
mov
popf
add
add
add
add
add
push
mov
hlt
jbe
push
mov
scas
cmp
push
add
xor
add
add
scas
test
pushf
dec
push
xchg
fldt
add
add
lea
add
or
mov
or
aad
push
xchg
cs
add
add
mov
add
mov
mov
jb
xchg
push
cmpsb
jp
ret
add
add
add
jne
in
scas
push
cmc
ret
jo
insl
inc
cmpsl
scas
jb
mov
adc
xor
and
mov
jle
orb
add
jbe
xorb
mov
lcall
jg
xchg
mov
sbb
mov
int3
sbb
add
push
sbb
add
inc
int3
cmp
je
jp
inc
mov
sbb
shlb
inc
mov
inc
sbb
out
mov
movsb
xchg
es
lods
enter
sbb
pop
push
sbb
leave
adc
and
add
pop
repnz
addr16
test
dec
ret
je
add
add
add
mov
lods
mov
cmp
andb
add
push
mov
add
add
out
je
mov
or
add
add
add
add
cmp
jp
pop
mov
or
add
add
es
jnp
push
pop
aad
cmpsb
jp
lahf
outsl
sbb
imul
add
add
add
sahf
sbb
mov
int
dec
scas
push
inc
and
add
add
outsl
jl
sbb
add
add
xor
dec
and
add
add
fcmovb
aaa
dec
inc
rcrb
mov
mov
leave
aaa
pushf
in
and
mov
cld
scas
push
insb
add
add
dec
xlat
fwait
dec
scas
nop
jnp
inc
shrb
add
add
xor
adc
add
add
push
stos
faddp
fsubrl
or
in
shrb
sub
mov
add
stos
xor
add
add
aaa
pop
lcall
pop
mov
add
pop
sbb
sbb
add
add
add
dec
mov
mov
pop
push
jnp
repz
mov
dec
mov
cmp
movsb
dec
xchg
jle
outsl
sub
je
cmpsb
and
and
jae
daa
pop
sub
mov
or
adc
lds
into
fiaddl
add
add
dec
outsb
fldt
call
add
sbb
mov
add
fcomi
loope
or
mov
jmp
faddl
lods
xor
fldcw
and
or
jns
ljmp
test
or
inc
insl
imul
mov
and
mov
or
add
add
lods
testb
sub
add
add
or
jnp,pt
mov
or
int
lcall
add
add
movsb
aas
mov
push
pushf
aad
xchg
and
add
add
add
add
int3
inc
out
or
add
add
inc
lods
or
fbstp
mov
sub
add
add
sbbl
push
jmp
aam
or
xor
loope
insb
mov
add
sub
insl
bound
jo
arpl
fldcw
push
cmpl
std
or
addr16
stos
jle
insb
mov
ja
xor
dec
repnz
push
sbb
inc
and
add
add
adc
add
add
push
push
xchg
inc
mov
sahf
sub
add
add
les
mov
clc
add
out
loope
push
mov
dec
jmp
xchg
repz
jae,pn
outsl
int
loop
into
pop
dec
or
add
add
jo
jne
push
mov
sub
add
add
stos
jl
mov
inc
stos
jg
jnp
scas
movsb
and
push
sbb
add
add
rorb
push
add
add
shrl
add
add
clc
test
and
out
and
sarb
push
mov
nop
adc
mov
mov
inc
push
les
out
adc
mov
dec
test
fistl
and
stos
ret
push
mov
shrb
mov
lds
add
add
push
xchg
scas
pop
js
js
and
js
test
add
add
add
mov
or
pop
adc
mov
jnp
aaa
xor
popa
cmc
cmc
jnp
push
mov
lds
add
add
sbb
mov
or
cmp
add
add
add
bound
movaps
aam
lods
mov
pop
movsl
pushf
fisubl
mov
jae
or
add
add
mov
mov
push
mov
cmp
lods
adc
in
mov
mov
pusha
add
add
cmc
popa
out
test
add
add
sbb
inc
add
add
mov
dec
cmp
int3
mov
add
test
xor
mov
jne
push
movsb
fsubrl
push
dec
mov
mov
cli
sub
mov
jo
mov
add
hlt
jo
rorb
add
mov
shrb
mov
daa
xchg
int
jnp
pusha
mov
jbe
inc
mov
pop
add
inc
fdivl
xor
std
mov
jge
dec
add
add
cmpsl
jns
stos
xchg
imull
add
add
jecxz
stos
cmp
sub
mov
nop
hlt
jge
je
pop
sub
add
cs
popa
add
xchg
scas
loope
imul
in
dec
add
add
repz
jl
xchg
enter
and
add
push
dec
mov
push
jle
test
stc
dec
mov
dec
stos
xchg
stos
out
xor
add
add
add
popf
pop
movsb
pop
dec
outsb
test
fdivr
ficompl
add
add
add
pop
mov
mov
sti
mov
test
neg
xor
push
push
cmp
ret
add
add
idivb
mov
add
mov
xchg
add
or
add
add
ret
xchg
mov
xor
pop
xor
add
add
add
mov
pusha
add
add
mov
jnp
aam
aas
call
pop
mov
imul
leave
pop
test
or
add
shr
iret
add
add
imul
adc
cmp
add
add
add
out
incb
jmp
inc
jecxz
push
mov
add
repz
insb
add
add
pop
adc
xlat
fadds
aam
sbb
inc
aas
mov
mov
bound
add
mov
sbb
cld
cld
jmp
nop
sub
scas
jge
shrb
je
mov
add
cmp
sbb
adc
jo
jge
lock
inc
mov
add
add
jmp
add
inc
rcll
insl
pop
cmpsl
in
jno,pt
push
adc
jbe
sub
call
cmpsb
adc
add
add
cmp
gs
mov
push
xor
aas
cmp
jmp
les
mov
and
int
and
xor
popf
jnp
mov
add
add
movsl
or
jp
mov
push
mov
mov
jno
cmc
jmp
lcall
mov
add
mov
inc
mov
iret
pop
je
fwait
sbb
add
nop
cmpsl
xor
ss
sbb
lods
test
cbtw
mov
sub
push
js
loopne
mov
add
add
int
push
add
popf
lret
test
mov
fwait
fisttpl
add
add
imul
mov
xor
shrb
pusha
mov
fcompl
jge
sti
inc
outsb
or
nop
adc
and
add
add
repz
add
add
mov
es
jg
pmulhuw
mov
lret
mov
sub
icebp
sub
add
add
jmp
inc
xchg
cmp
dec
adc
lock
adc
push
jg
popa
stos
into
push
hlt
cmpb
and
add
add
jae
add
add
fbstp
jl
les
mov
in
std
lds
lret
pop
call
popa
add
add
add
add
adc
push
enter
add
add
lcall
mov
mov
rep
mov
je
aad
mov
cmp
ds
or
mov
inc
sbb
xchg
jno
xor
aam
hlt
xor
add
ss
jg
fs
pop
loopne
jg
cmpsb
sti
xchg
xchg
jp
add
add
pop
xchg
mov
je
mov
add
jne
inc
inc
movsb
sub
push
jne
adc
lret
inc
add
add
pop
sbb
lods
ss
add
add
add
and
add
add
adc
xchg
xchg
mov
cmp
add
add
daa
jg
cld
jmp
cmp
int3
ret
sub
add
mov
or
jo
shlb
sbb
mov
xchg
ss
jp
adc
test
push
mov
inc
or
add
push
divb
cli
pusha
add
add
lods
ret
mov
mov
sbb
dec
inc
mov
mov
xlat
rcr
jnp
mov
pop
arpl
mov
andl
imul
mov
rorb
xchg
imul
mov
pop
stos
mov
jmp
add
ret
jnp
mov
cmp
add
add
stos
lods
jb
lock
pop
inc
or
ds
jnp
add
add
jbe
dec
fdivrs
xchg
pop
adc
hlt
dec
mov
mov
pusha
mov
fistpl
and
xchg
pop
stc
xor
xlat
insl
jbe
sub
pop
in
loopne
jmp
outsb
cld
inc
cltd
xor
add
ljmp
int3
pop
popf
mov
popf
add
lds
lods
outsb
pusha
add
add
enter
mov
addl
mov
sahf
jb
pop
xor
nop
fsubr
shlb
add
add
insb
mov
xor
inc
add
add
sbb
dec
mov
sub
add
add
add
pop
pop
cwtl
outsb
add
leavew
shlb
scas
shll
add
add
add
add
dec
add
add
or
add
add
add
add
add
adc
pop
add
add
rcrb
add
add
dec
jbe
frstor
xor
add
std
jge
mov
mov
mov
insl
insl
cld
hlt
insb
add
add
adc
test
stos
jbe
loopne
iret
stc
cmc
mov
add
add
jae
cmp
lea
push
pop
add
cmp
insb
add
add
xor
sub
add
add
cmc
fidivl
pop
sbb
cli
pushaw
add
add
addr16
popf
aas
out
xchg
push
jnp
cli
shr
ss
icebp
or
fistps
cmpsl
push
mov
lock
sbb
jnp
mov
arpl
jae
mov
add
push
shrb
sub
xor
pop
lods
xchg
fstl
cmp
push
insl
jno
or
xchg
bswap
shrb
push
addr16
sub
add
jge
mov
add
xchg
add
jle
xchg
xchg
out
outsb
lock
movsb
pop
aaa
add
stc
lcall
add
add
mov
inc
xlat
clc
sbb
repz
jne
cmp
sub
mov
inc
mov
movsl
jle
cmp
jne
pop
xlat
leave
out
mov
add
shlb
add
sbb
rcll
cld
push
jmp
mov
divl
inc
movsl
add
jl
js
out
or
out
adc
std
in
sub
outsl
push
push
pop
in
sbb
dec
sbb
or
xchg
inc
dec
popa
or
add
add
inc
cwtl
mov
add
add
mov
jnp
mov
test
add
adc
lea
cltd
mov
mov
or
add
add
push
adcl
xlat
roll
pop
pop
cmpsl
lret
aam
inc
imul
add
fidivs
sub
mov
add
add
adcb
rcl
stos
outsl
push
popf
adc
in
insl
aam
cmp
dec
jp
lcall
iret
pop
push
in
loopne
in
fwait
jl
icebp
fmull
and
in
stos
push
in
into
fistpl
mov
and
add
add
ret
mov
sbb
incb
frstor
ret
testb
xor
xchg
xchg
sub
sbb
dec
ljmp
add
add
jp
pop
dec
sti
loop
sub
enter
cmpb
cmp
ja
shll
ljmp
add
sbb
repz
add
popf
mov
lret
test
sbb
int3
test
pop
fld
nop
xor
mov
stos
sbb
mov
add
add
sbb
and
test
repnz
dec
add
add
push
lods
push
leave
cmp
mov
xor
lret
push
sub
or
stos
xchg
jmp
or
push
stos
clc
lea
pusha
add
add
cmpsl
ss
fwait
jae
js
fsubl
cld
push
fcmovbe
mov
lock
sub
add
add
adc
mov
jns
pop
mov
icebp
jmp
xchg
roll
rorl
add
add
js
arpl
arpl
add
sub
add
mov
mov
or
lods
out
xor
aam
and
add
adc
sbb
xlat
xor
push
jns
pop
mov
push
lret
mov
adc
out
shlb
dec
test
and
cmp
sub
xor
loope
cli
mov
add
add
add
add
mov
and
add
add
not
pop
inc
lret
jmp
pop
mov
and
xchg
clc
fwait
add
test
jecxz
add
add
pop
in
mov
add
inc
pop
mov
fs
nop
shll
in
adc
dec
shll
mov
add
icebp
mov
push
mov
ljmp
inc
aam
mov
out
enter
pop
mov
pop
adc
add
add
sub
cmpl
test
stos
jae
movsb
outsl
adc
vpinsrw
cmp
fbstp
stos
jg
cmp
push
mov
add
add
outsl
out
out
js
sbb
add
add
add
leave
ljmp
pop
scas
push
lea
mov
or
jae
enter
cltd
sahf
adc
popf
and
ret
push
orb
mov
add
int
movsb
in
xorps
outsb
and
add
adc
mov
and
add
adc
mov
loop
lahf
ljmp
scas
xchg
arpl
sahf
mov
dec
mov
fs
push
jmp
mov
add
add
inc
mov
adc
xor
add
inc
mov
lds
jecxz
or
jecxz
jle
imul
add
add
jg
and
xchg
pop
insl
jp
fiaddl
dec
aam
call
and
add
out
stos
fwait
xchg
mov
movsb
popa
sarb
movsb
cmc
popf
testl
dec
add
hlt
mov
pop
mov
mov
inc
push
jns
mov
fcoml
add
add
xchg
ja
or
imul
add
add
jmp
leave
jecxz
mov
and
add
insl
int
js
jl
dec
pop
dec
outsl
fcmovu
int3
sbb
cmp
push
inc
pop
std
test
add
add
jne
mov
sar
pop
inc
inc
add
add
add
dec
outsl
scas
fcom
in
addb
daa
testl
add
daa
and
and
add
add
ds
cmpb
jno
jns
in
add
lods
jnp
mov
fucomp
inc
inc
mov
loope
add
test
repnz
xchg
mov
scas
sarb
mov
pop
mov
dec
mov
jno
adc
add
adc
mov
inc
pop
repz
push
sbb
rorb
dec
add
add
sbbb
into
pop
add
and
cmp
ds
xchg
movsb
std
cmp
add
add
add
jmp
scas
jl
jmp
aam
dec
pop
pop
roll
rcrl
mov
stc
add
add
sbb
pop
scas
loop
push
out
ljmp
mov
cmp
add
add
and
add
xchg
dec
cld
sbb
fcoms
or
add
xchg
test
aas
mov
movsb
jns
xorb
jb
add
add
aas
mov
repnz
add
inc
je
les
lret
pushf
pop
or
mov
mov
mov
inc
pop
ds
jno
and
or
mov
sbb
mov
mov
mov
movsl
cmc
adc
andl
jp
mov
leave
jnp
xlat
cmp
ret
mov
push
pop
sub
ret
pop
jno
inc
add
add
add
xchg
insb
add
add
out
push
xor
add
add
add
add
xchg
pusha
mov
test
into
insb
mov
xor
add
add
stos
push
roll
add
add
sahf
test
sub
add
cmp
sbb
lcall
add
cwtl
jle
and
nop
loopne
je
lahf
mov
ret
push
mov
out
clc
mov
add
ja
out
shll
mov
nop
xchg
pop
xchg
mov
test
loope
mov
mov
mov
inc
mov
rclb
dec
mov
lret
scas
sbb
int3
pop
neg
xor
bound
fstpl
xchg
mov
imul
cld
shrb
ljmp
add
mov
mov
jbe
dec
add
add
jnp
popa
loopne
mov
orl
mov
mov
add
into
mov
insb
mov
and
add
add
mov
sub
scas
icebp
shr
mov
add
add
xor
add
faddp
stos
scas
pop
mov
add
es
push
out
inc
sub
add
add
repnz
scas
cmpsl
jecxz
imul
addl
incb
add
dec
mov
xor
cmpsb
add
rolb
add
testb
mov
sub
add
in
out
mov
sub
add
call
divb
sbbl
pop
xchg
cmp
and
add
add
rcrl
and
mov
mov
jns
adcl
addl
xchg
gs
jno
mov
pusha
mov
in
mov
push
adc
add
add
cmpsb
pop
cmpb
sub
push
adc
xor
sub
pop
aad
inc
pop
popf
std
mov
or
dec
lods
push
fcmovbe
hlt
pop
je
push
mov
dec
jmp
mov
out
cmpsl
sub
add
add
dec
or
fsubs
xor
push
js
add
jmp
pusha
add
add
in
push
sub
add
add
clc
sbb
and
add
add
mov
cs
or
in
adc
int3
mov
cwtl
sbb
nop
mov
sub
add
add
or
lret
adc
cmc
stc
sbb
pmullw
dec
aam
leave
adc
jg
jb
add
add
cs
movsb
bound
cmc
shll
add
or
cmpsb
xchg
rcr
inc
cld
lret
jne
add
into
lock
pop
sbb
dec
mov
push
fisttps
fstl
aas
cmp
dec
sbb
adc
push
shl
push
mov
sub
ficompl
add
scas
fdivrl
add
in
sbb
fwait
lahf
xchg
sbb
mov
mov
ljmp
jp
insb
add
add
cmp
jmp
and
add
add
rcll
test
aas
repz
daa
std
xchg
ss
dec
sbb
imul
inc
sbb
xchg
xchg
lds
xor
aam
das
jp
sub
or
daa
push
add
push
fists
rorl
lret
cltd
out
push
add
scas
in
rorb
in
inc
mov
mov
int3
loope
and
mov
jbe
mov
mov
add
repnz
clc
lds
jns
sarl
xlat
dec
rolb
jne
and
inc
add
add
repz
rcrl
aaa
popf
addr16
mov
xor
movsb
bound
cmp
cmp
mov
mov
nop
popa
xchg
fwait
scas
dec
mov
ds
push
push
xor
gs
mov
sti
inc
xchg
xor
fisttpl
xchg
mov
cmp
xchg
xor
mov
jl
jl
les
and
pop
xchg
ret
int3
cmc
dec
add
add
cmp
add
add
test
stc
pop
push
roll
popf
ds
jnp
jo
mov
sub
add
add
add
add
lods
int
ret
jno
add
orl
mov
dec
add
add
fsubrs
mov
mov
movsl
gs
mov
shrw
ficoml
add
or
xchg
mov
filds
mov
enter
dec
add
add
add
mov
lret
sbb
lcall
add
mov
mov
add
add
add
mov
aam
adc
adc
jecxz
add
add
ror
iret
ds
inc
insb
mov
push
xchg
out
add
add
add
mov
shl
lods
fsubl
hlt
mov
cmpl
mov
pushf
std
push
xchg
add
add
pop
push
dec
jg
xchg
push
adc
add
mov
add
push
dec
outsl
mov
mov
inc
mov
push
test
faddl
cmp
pop
cs
mov
add
jmp
add
add
and
adc
add
mov
add
xchg
popf
pop
dec
mov
lret
xor
arpl
pop
adc
mulb
ret
sbb
cmc
loope
pop
pop
int
pop
outsl
imul
mov
popf
out
or
insl
mov
sub
mov
lods
inc
push
pshufw
add
mov
add
add
call
std
sbb
loop
lds
add
add
jecxz
lods
imul
test
jnp
cli
cld
xchg
cmp
aad
add
add
inc
and
pop
add
mov
fs
fadds
push
jp
popf
fcomps
mov
fwait
inc
cmp
jl
push
sub
add
add
dec
int
push
rorb
leave
mov
rcrb
add
add
push
bound
inc
mov
pushl
jecxz
dec
aaa
gs
pop
push
or
add
dec
add
add
and
add
add
pop
aad
je
sub
add
add
outsb
push
xor
add
add
add
int3
dec
testb
sbb
xchg
sub
mov
adc
leave
test
xchg
dec
xchg
sbb
dec
mov
jecxz
cmp
and
add
dec
test
adc
xor
inc
push
stos
mov
add
mov
add
add
mov
add
ljmp
dec
daa
and
lcall
dec
mov
sahf
lahf
lods
addr16
test
mov
or
dec
add
add
sub
mov
enter
xchg
dec
aaa
addr16
inc
xchg
cli
stos
inc
add
pop
mov
fcomps
stos
bound
push
out
addr16
mov
adc
out
mov
xchg
test
add
add
lret
xchg
inc
cmp
mov
fadd
rclb
test
js
lods
dec
mov
outsl
lret
data16
movsb
arpl
cltd
addr16
popa
in
mov
lret
gs
out
push
outsl
adc
popf
push
lods
jg
cmp
push
mov
dec
sahf
adc
mov
outsb
or
jbe
push
cmp
inc
repz
add
add
sub
xchg
pop
dec
mov
cwtl
xor
sti
mov
mov
add
add
xor
flds
leave
dec
adc
xchg
xchg
adc
clc
fcomi
push
push
mov
loope
outsl
int3
int3
addr16
lods
jge
push
call
pop
and
push
xchg
inc
mov
cmpsl
add
shlb
cmp
repz
dec
mov
jno
std
das
rcrl
jo
xchg
lret
cmp
cwtl
sbb
add
jnp
or
add
add
in
stos
out
push
sub
xchg
jp
mov
jno
loop
pop
imul
add
ret
popa
pusha
mov
push
test
dec
mov
push
sub
imul
repnz
in
shll
repnz
add
add
jl
cmp
cmc
shll
mov
dec
mov
push
pop
dec
sub
leave
sbb
dec
lds
das
cmpl
sti
and
push
mov
pop
mov
test
add
add
in
mov
lods
xchg
outsb
sahf
out
int3
dec
pop
testb
fstl
mov
pushf
sub
add
add
add
xor
add
push
mov
loope
pop
mov
cs
icebp
add
add
add
xchg
lcall
add
ret
cmp
stos
rorb
add
add
insb
add
add
sbb
add
add
jge
inc
pop
jnp
push
fadds
inc
push
sub
cmpsl
popf
int3
in
lock
das
das
cmc
in
xor
dec
pushf
fadds
add
add
insl
data16
fwait
xchg
sub
push
inc
in
jle
sahf
xchg
xor
push
sub
pusha
add
add
sub
popa
adc
push
lahf
sub
sub
add
jmp
xlat
out
repnz
aam
ljmp
add
add
cmp
mov
add
bound
dec
sar
test
les
jnp
sarb
jge
adc
lahf
aam
xchg
aad
repnz
push
add
add
add
arpl
add
add
sbb
sub
add
add
xchg
mov
add
add
int3
mov
cmp
add
add
cmovne
add
add
adc
push
inc
outsl
xchg
loop
push
ja
mov
mov
std
inc
lods
ja
add
add
jae
jne
xchg
adc
push
out
push
pushf
out
data16
add
add
shlb
dec
adc
out
outsl
xorb
xchg
adcb
mov
mov
mov
inc
call
lahf
jl
mov
insb
add
add
aam
test
repz
insb
add
add
inc
add
add
adc
sbb
add
add
jecxz
scas
mov
test
hlt
pop
aas
and
add
add
push
fidivl
add
xorb
inc
push
push
ret
xchg
push
sbb
inc
cmp
fwait
mov
push
mov
stc
sub
add
add
icebp
cmp
sahf
in
repnz
aad
dec
cs
add
add
add
adc
aad
stos
jl
stos
mov
mov
add
add
add
pop
fincstp
pop
add
in
inc
fisttps
fsubl
add
add
add
add
jmp
outsb
fcomps
push
xchg
cld
push
scas
fstps
in
je
test
sti
cmp
jmp
in
pop
pop
addr16
and
xchg
enter
daa
outsb
mov
mov
jae
mov
lods
xlat
mov
add
add
jle
adc
mov
dec
add
add
fbstp
and
add
add
daa
insb
mov
negb
xor
aam
test
jl
out
push
push
fcomp
cmp
pop
cmp
repnz
xor
daa
lcall
fwait
not
xlat
stc
xor
cli
cmc
sarl
cwtl
filds
out
jecxz
in
xor
push
sbb
notb
loop
shlb
in
adcb
push
repz
jno
add
add
popf
andl
add
and
mov
jbe
test
pop
adc
sub
fs
ljmp
add
add
sarb
or
add
add
pop
sub
cli
jg
jmp
adc
call
adc
sbb
adc
add
add
inc
sbb
dec
and
add
add
add
add
and
add
add
pop
jge
ficoms
shrb
call
mov
pushf
mov
inc
lods
push
fldl
pusha
mov
mov
fsubl
pop
jge
or
out
xor
sub
add
add
push
push
mov
rorl
add
add
adc
add
imul
pop
mov
add
add
loope
add
mov
mov
ret
filds
rorb
addr16
scas
lcall
push
outsb
fwait
mull
mov
xchg
clc
imul
add
movsb
push
jp
xor
mov
hlt
in
fadd
leave
push
mov
les
add
imul
mov
mov
insb
add
add
fcomp
mov
push
mov
sti
fmuls
add
add
test
mov
adc
into
test
pop
iret
adc
jae
cli
enter
add
sbb
clc
cvtps2pd
das
insb
mov
lret
cwtl
mov
bnd
xor
int3
cmc
cmpsl
divb
push
and
add
add
movsb
in
mov
cmc
test
add
add
mov
push
xchg
inc
icebp
adc
push
mov
out
mov
test
inc
mov
xchg
hlt
lret
xor
add
mov
fwait
ds
pusha
add
add
xor
sahf
jb
mov
or
mov
aaa
cmp
test
stc
dec
push
pop
mov
dec
push
xor
jne
mov
imul
popa
rorb
arpl
je
mov
add
add
pop
fs
outsl
not
shrl
add
inc
or
cmp
roll
jecxz
inc
rcrl
aaa
js
loop
arpl
mulb
and
add
add
scas
imul
jmp
divb
lret
add
add
mov
adc
add
add
faddl
mov
fisubrs
add
xchg
int
add
rolb
add
add
scas
adc
rorb
mov
jle
dec
popf
dec
sbb
aam
mov
test
inc
push
or
sbb
inc
enter
popl
jg
add
add
lods
repz
loop
inc
ret
and
shrb
add
pop
and
push
jns
shrb
mov
mov
test
or
add
add
pushf
inc
mov
push
ret
ret
jl
pushf
dec
adc
pop
cmp
dec
fildl
adc
add
pop
clc
daa
adc
fcoml
lods
sub
cmp
in
push
dec
xchg
arpl
dec
cmp
add
add
ss
in
xchg
add
mov
mov
and
add
xor
mov
push
jecxz
shll
mov
push
loop
mov
jg
iret
sub
or
push
xor
sub
add
add
sub
mov
pusha
mov
mov
mov
mov
cmpsl
push
arpl
dec
and
mov
sbb
mov
mov
add
add
add
lds
mov
pushf
cmp
cmp
gs
jmp
push
xor
cld
ret
inc
orl
adc
add
test
cmpsl
lcall
mov
xor
fs
ja
out
out
xadd
mov
ficompl
adc
or
xor
add
add
dec
push
mov
jnp
xor
mov
lock
mov
add
add
sbb
paddsb
add
add
stos
pop
out
std
loopne
data16
xor
loope
insb
add
add
lahf
adc
or
add
add
pop
sbb
adc
popf
loop
cwtl
pop
push
popa
ds
fptan
scas
and
add
add
add
sub
add
add
adc
inc
add
add
xchg
loopne
rcrl
push
mov
sbb
and
mov
popf
outsl
pop
add
inc
test
or
les
in
mov
cs
xlat
push
sar
loop
xor
push
ret
dec
mov
out
testb
fldcw
add
add
add
mov
cmp
mov
xor
adc
fcoms
stos
ds
add
add
int3
dec
mov
cmp
sub
add
add
add
add
xor
int3
cmp
cs
adc
pop
orb
add
repnz
pop
or
aam
jo
or
mov
adc
cld
ljmp
jns
cmp
dec
sbb
jmp
call
push
cmp
mov
bound
jo
comiss
cmp
lock
dec
add
add
js
add
add
enter
rcrb
dec
jp
sub
xchg
hlt
mov
mov
mov
xor
jae
movsl
dec
lcall
or
fdivrp
inc
push
mov
loopne
fadds
jle
inc
dec
push
stos
mov
in
mov
add
add
outsb
sub
cli
mov
push
mov
in
das
rcrb
or
add
add
jae
scas
scas
xorl
shrb
mov
lret
insl
or
and
int
mov
js
cmp
pop
js
addb
add
add
push
fsubrl
mov
add
add
mov
add
pusha
mov
add
movsl
adc
pushf
stos
jae
pop
jno
hlt
cmp
push
push
repnz
jae
add
add
fwait
add
xchg
insb
mov
in
outsb
dec
mov
mov
or
mov
and
push
loopne
bound
nop
insb
add
add
in
mov
add
add
fdivs
dec
loopne
push
out
int
arpl
repnz
jmp
jl
arpl
mov
add
add
sub
dec
sub
push
lock
shlb
xlat
cltd
mov
cmp
les
testl
mov
mov
movsl
pop
mov
add
add
sti
xchg
add
aad
mov
add
shrl
int
adc
jmp
int
jbe
hlt
fidivl
rorl
ss
add
add
hlt
sbb
test
dec
mov
sub
in
or
push
and
inc
jg
mov
cmpsb
dec
and
popa
jmp
or
xchg
lods
sbb
xor
add
add
xchg
shll
add
add
loopne
hlt
in
mov
mov
cli
add
add
add
pop
test
popa
insl
sub
inc
scas
lods
sbb
push
add
add
add
inc
jge
dec
add
fwait
pusha
add
add
les
test
jle
jmp
xor
pushf
and
dec
nop
sti
dec
add
add
dec
hlt
shll
cmpsl
js
or
mov
jl
das
rol
rorl
sarb
push
and
add
arpl
test
sub
xchg
cwtl
sbb
sbb
cs
cmp
pop
sbb
mov
inc
dec
movsl
or
add
add
cmp
sarl
mov
add
add
pcmpeqw
in
adc
jbe
out
gs
pop
jb
aas
lret
loope
xor
aas
sub
loope
pop
lds
idivb
rorb
add
add
shlb
sub
insl
mov
fdivs
add
add
nop
mov
adcb
mov
add
add
add
add
mov
cltd
push
sbb
push
xchg
fldl
adc
cltd
xchg
push
out
sbb
mov
add
in
push
jb
adc
pop
xor
add
add
mov
loop
pop
add
add
xchg
in
idivl
mov
cs
add
add
xchg
pop
push
sub
add
xchg
xorl
and
adc
aam
ret
push
cmp
icebp
lret
inc
sub
insl
mov
aam
mov
leave
lea
mov
cmp
aaa
aad
iret
mov
cmp
and
add
aad
xchg
dec
outsl
sbbb
clc
ja
popa
es
sbb
xor
mov
mov
ds
in
mov
add
add
add
and
add
add
push
dec
xorb
xor
mov
iret
xorl
std
or
add
add
push
popf
add
xor
sbb
add
add
dec
pminub
mov
dec
test
jg
aaa
or
les
or
add
add
dec
pop
cltd
mov
sbb
loop
lcall
mov
push
fnop
dec
jae
sbb
mov
orl
add
scas
aas
mov
movl
movsl
ljmp
add
out
jae
mov
or
aas
adc
imul
hlt
dec
pop
mov
insb
mov
aas
cli
pop
ret
add
add
push
in
test
cmp
lret
and
add
add
in
mov
les
out
dec
mov
push
sbb
jnp
repnz
mov
loope
call
pop
js
rcl
inc
stc
xor
add
add
jmp
and
add
add
pushf
icebp
push
shll
or
insb
add
add
fistpl
icebp
pop
aad
xor
add
outsb
cmp
jmp
add
ret
push
int3
ffree
sarl
and
add
add
test
mov
pusha
mov
mov
test
push
into
push
pcmpgtw
fimuls
iret
insl
out
mov
jecxz
push
push
or
add
add
inc
mov
xor
jnp
mov
adc
lret
or
icebp
ret
cmp
mov
lea
add
stos
jl
push
ret
add
add
bound
repz
mov
jo
cmp
adc
imul
pop
int
jle
mov
push
cltd
in
movsb
push
add
add
or
mov
popa
add
mov
jno
inc
enter
scas
test
sbbb
inc
clc
jb
add
add
sti
movsl
int3
xor
or
cmpb
in
mov
and
jae
push
test
and
pop
push
adc
repz
es
and
add
add
jecxz
mov
push
mov
cmp
mov
xor
jne
and
add
pop
mov
cltd
mov
mov
outsl
cli
aam
jb
loopne
jmp
arpl
dec
cli
mov
cmpsb
adc
dec
mov
insl
stos
sub
add
add
push
push
cmc
inc
mov
mov
ljmp
dec
repz
fwait
repnz
xor
or
scas
mov
add
push
out
loop
and
add
add
add
jp
je
sub
mov
xlat
xchg
mov
fldcw
xchg
andb
call
shlb
add
cs
mov
mov
fldcw
sbb
add
add
add
mov
inc
roll
mov
mov
rcl
mov
cli
mov
mov
loop
dec
mov
sbb
dec
dec
mov
adc
mov
sub
mov
add
data16
mov
and
gs
or
shl
mov
mov
jle
ret
int3
dec
daa
pop
sub
add
mov
xchg
pop
pushf
dec
inc
add
add
call
add
add
dec
sbb
pop
jg
xchg
mov
xchg
lea
shrb
dec
mov
lret
xor
add
cmpb
cmpsl
sti
sbb
adc
sub
add
add
jle
add
add
add
mov
mov
ds
mov
mov
dec
in
dec
shlb
sub
add
into
mov
add
decb
add
add
add
ficomps
sub
add
add
mov
inc
mov
mov
xchg
add
add
pop
sbb
xchg
add
nop
dec
out
cmp
jno
repz
xchg
jno
mov
add
clc
push
cmp
mov
mov
and
ss
les
gs
inc
adc
add
add
arpl
sbb
lock
xor
push
es
pop
cli
add
add
les
sti
sub
add
add
scas
in
outsb
adc
fisttpll
add
loop
add
add
push
pushf
xchg
popf
inc
fwait
stos
and
add
add
push
or
add
add
mov
lcall
mov
movsb
mov
xorb
xor
add
add
insb
mov
lea
add
add
je
push
dec
mov
pop
jnp
repz
pop
jp,pn
fcom
xchg
cmp
dec
pop
imul
and
ret
in
and
aam
sbb
add
add
xlat
push
mov
mov
negb
ret
mov
pop
das
rorl
fildll
xor
outsl
iret
iret
movsb
mov
loopne
lcall
popa
in
movsl
in
inc
mov
cmp
mov
mov
sub
pop
aaa
xchg
roll
cmp
xchg
cmp
out
jns
sbb
add
sub
je
add
add
add
dec
aad
sub
sbb
push
and
xchg
scas
mov
fnstsw
test
mov
pusha
mov
push
sti
xchg
pop
into
es
push
mov
loop
xor
mov
sub
add
add
cld
fdivr
cmp
and
add
add
fdivl
lds
add
adc
push
ret
out
lock
add
lahf
shl
adc
movsb
enter
cwtl
das
xor
lea
pop
xchg
mov
add
sub
or
sub
idivb
pop
mov
add
push
xchg
je
pop
push
lret
mov
rcrl
decl
push
mov
dec
scas
test
cmpsl
pop
repnz
cltd
push
test
mov
xor
dec
add
add
insl
jbe
jns
sub
int3
sbb
xchg
ja
shl
in
push
addl
pop
xchg
and
jp
out
dec
stc
ljmp
xor
mov
pop
cmpsb
mov
add
cli
sbb
mov
dec
add
add
or
mov
adcb
insb
add
add
jecxz
inc
decb
popf
in
addr16
test
and
add
add
add
add
jmp
stos
daa
test
sub
add
add
scas
imul
das
test
xchg
mov
jnp
add
jno
int
dec
icebp
xor
sbb
push
jb
fabs
orb
push
fildl
mov
lcall
jle
add
add
fistps
in
cld
insl
mov
cmp
jns
arpl
dec
mov
aam
push
sub
stc
in
inc
pop
xchg
jo
jp
add
pop
mov
mov
jo
mov
dec
mov
lcall
and
adc
add
cwtl
cmp
cld
sub
mov
test
xchg
loope
lods
xchg
mov
cmpsl
dec
push
ss
sbb
mov
lods
push
std
fidivrs
dec
clc
or
add
xchg
inc
sub
pushf
push
add
add
add
mov
mov
idivb
add
pop
imul
add
add
jmp
nop
push
adc
rcll
sub
add
add
mov
adc
xor
add
push
clc
mov
jnp
enter
jmp
add
add
mov
fcmovnu
sub
add
add
sahf
push
mov
es
jmp
int3
insb
add
add
pusha
mov
mov
jb
stc
adc
cmp
sbb
pop
cmp
sub
add
add
dec
xchg
cwtl
mov
jmp
leave
ret
das
or
xchg
or
adc
inc
add
cmp
sahf
xchg
cmp
je
ret
cmp
push
mov
mov
aaa
incb
out
mov
add
repz
in
nop
daa
pop
or
rcll
test
pop
inc
in
mov
mov
ja
add
add
ss
adc
lods
insl
mov
inc
mov
cmp
and
stos
out
add
add
fs
adc
addr16
mulb
mov
int
xchg
pop
int3
sbb
add
cld
sahf
repnz
add
add
add
add
adcl
or
cwtl
ret
push
pop
rcrl
xor
aad
gs
rorl
add
add
lods
and
add
add
ret
mov
lock
sbb
pop
lods
sub
add
add
lcall
add
add
les
jbe
xchg
add
add
add
pop
sbbb
add
sti
shlb
mov
push
call
add
cltd
clc
dec
mov
mov
imul
push
dec
sbb
jbe
pop
jle
aam
cmc
cmp
pusha
mov
clc
push
rorb
mov
stos
shll
push
dec
jg
and
addr16
movsl
jns
dec
imul
add
add
add
add
push
inc
mov
sbb
dec
pop
mov
jmp
sub
and
add
add
xor
xor
out
das
cmp
mov
lahf
clc
mov
mov
sub
xor
popf
int
add
add
repnz
pop
test
clc
imull
sbb
sbb
fwait
inc
fldl
scas
sbb
sub
add
add
mov
jne
rcrb
cmp
mov
add
add
jmp
imul
inc
addb
stos
inc
adc
add
xor
mov
add
add
xchg
stos
mov
out
mov
lea
lret
xchg
lret
icebp
das
imul
sbbb
cmp
add
mov
rorl
aam
add
add
xor
inc
mov
out
jmp
cmp
outsl
insl
loope
mov
orl
mov
cmp
adc
in
shrb
add
rolb
dec
cmp
add
add
adc
in
push
clc
add
add
add
add
add
adc
aas
dec
mov
xchg
lods
xchg
imulb
xchg
xlat
xchg
sub
add
add
cs
add
add
add
in
inc
fidivrs
pop
pmaxub
sub
out
in
jge
jbe
negb
mov
pop
jbe
and
movsl
sub
mov
mov
outsb
repnz
loopne
jp
sahf
mov
push
out
testb
add
sub
test
jg
inc
xchg
dec
push
xor
pop
mov
mov
mov
cli
test
xor
clc
into
fmul
xor
mov
std
xor
pusha
add
add
sti
in
call
cmp
add
add
mov
ja
fimuls
and
add
add
xchg
into
repnz
add
add
daa
xchg
stc
xlat
std
mov
cli
or
jmp
pop
mov
add
lahf
jns
add
add
add
sub
add
add
sub
xor
es
and
fldl
mov
jp
jge
shrl
or
add
add
es
add
adc
add
push
out
cmp
add
add
gs
rorl
adc
or
movsb
xor
mov
mov
test
hlt
cmp
movnti
add
add
pop
cli
adc
mov
scas
call
hlt
int3
sarb
mov
sub
add
add
popa
cmp
mov
mov
sbb
add
add
pop
iret
dec
test
pop
cmc
nop
std
cmp
flds
outsl
mov
clc
xchg
mov
sbb
mov
sbb
mov
rcll
jae
fistpl
add
add
mov
daa
mov
add
xchg
aam
or
inc
scas
pop
xor
imul
inc
mov
sub
add
add
dec
scas
fisubrl
testb
add
aad
push
sub
std
xor
rcrl
pusha
add
add
jno
addr16
mov
add
add
loope
into
mov
in
mov
xchg
mov
sbb
add
add
add
mov
add
xor
call
loope
in
icebp
dec
jmp
add
add
add
push
pushf
add
cmp
push
cmp
gs
aad
stos
mov
loope
ljmp
sbb
sub
dec
les
add
add
fwait
arpl
push
arpl
aaa
push
cld
fsubrl
inc
push
data16
adc
es
lock
add
rcrb
scas
insl
push
nop
push
stc
and
push
pop
add
cmp
popa
fucomp
mov
sbb
xor
pusha
mov
pop
mov
fdivs
mov
cmp
gs
xchg
add
add
jle
pop
pusha
add
add
out
insb
add
add
outsb
xchg
xlat
hlt
add
add
andl
mov
outsl
aam
mov
add
add
imul
mov
mov
add
add
dec
stos
inc
add
add
cmc
lds
jbe
add
add
push
mov
cmpsb
sbb
js
add
add
rol
cwtl
fstl
mov
mov
add
add
inc
push
mov
pop
in
rorb
in
or
xchg
mov
dec
cmpsb
in
ficomps
outsl
fsub
inc
enter
movl
sbb
cltd
jne
jle
add
adc
cs
popa
lods
pop
xchg
icebp
je
cmp
lods
imulb
add
mov
in
mov
dec
shl
fcoms
mov
sbb
or
stc
push
pop
lock
mov
add
mov
adc
cmp
pop
imul
mov
dec
ret
mov
pushf
outsb
pop
mov
xor
add
and
fwait
iret
dec
xor
mov
adc
negb
fwait
or
lods
call
add
jae
sbb
testb
pusha
add
add
sbb
loop
test
repnz
mov
into
pop
fcom
mov
and
out
fsubrp
aaa
pop
cmpsl
out
rorw
je
add
add
xor
lods
push
lods
data16
xor
sub
xor
dec
mov
add
add
in
lds
sbb
out
xchg
add
push
pop
ficompl
push
dec
mov
mov
mov
lret
xchg
aad
mov
jmp
lret
dec
sub
in
imul
sub
xrelease
rcrb
out
mov
push
int3
ds
sbb
je
mov
adc
mov
jge
shr
cltd
cld
lea
flds
add
test
mov
adc
imull
push
adc
fimuls
cmpsb
xor
mov
js
ffreep
xchg
adc
lods
adc
sbb
int3
cmc
std
mull
sbb
fcmovnb
repz
mov
add
shrb
add
mov
das
and
stos
jno
in
bound
push
or
mov
jne
cmc
push
stc
int3
and
jne
inc
mov
ret
jl
mov
ja
les
movsb
mov
cld
subb
and
add
add
in
xchg
es
mov
pop
call
add
add
mov
adc
mov
add
push
out
push
xchg
sub
scas
aad
pop
inc
mov
mov
mov
sub
mov
subl
sbb
add
xchg
sbb
gs
lahf
aam
xchg
add
add
push
add
add
add
mov
add
add
dec
lret
inc
mov
xor
sbb
lret
mov
lret
and
mov
push
or
add
add
xchg
xchg
jnp
imul
jbe
push
xchg
iret
push
daa
xchg
popa
jbe
insb
add
add
mov
add
decb
addr16
ja
push
cmc
loopne
and
mov
cli
xchg
mov
das
stos
dec
add
add
cmp
stos
movsl
push
xchg
testl
dec
cmp
int3
jne
add
add
lods
pop
sub
add
aas
dec
inc
inc
lock
int3
enter
add
push
scas
sbb
xor
cmpsl
sub
add
add
lock
or
add
add
or
imul
cld
icebp
sub
add
add
repz
imul
jl
loopne
repnz
mov
andb
add
std
scas
fdivrs
loope
xor
sti
cmp
add
add
shrl
mov
sbb
or
icebp
or
add
add
jl
imul
pop
aas
pop
out
mov
add
add
ja
xchg
push
xchg
xor
push
mov
or
lahf
adcl
add
cmpb
xchg
nop
in
jl
pushf
test
repnz
add
add
ret
add
add
dec
testl
jne
cmpsl
nop
stos
jmp
pop
cwtl
mov
or
mov
frstor
inc
clc
inc
movsl
out
ljmp
inc
mov
mov
mov
rep
sbb
add
add
add
inc
cwtl
in
xor
ret
popa
mov
pop
push
sub
adc
repnz
mov
cltd
fwait
jp
pop
add
add
add
inc
mov
aam
mov
arpl
mov
pop
and
add
add
arpl
xchg
inc
pop
xor
inc
cmp
add
add
das
or
pop
ja
mov
pop
icebp
lahf
jge
mov
scas
inc
aad
dec
mov
push
push
dec
iret
stos
push
idiv
cmc
cmp
mov
lods
testb
xchg
xchg
add
add
jnp
test
add
test
and
sbb
xchg
insl
push
add
mov
or
lahf
jne
repnz
cltd
xor
ret
rcl
stc
jno
loop
push
fs
fs
lret
and
or
add
add
mov
xchg
add
add
and
lret
xchg
cld
test
cmp
aam
out
mov
sub
add
add
add
fisttpll
pushf
ja
jb
add
add
cmp
pusha
add
add
shl
in
leave
rorl
add
add
add
mov
add
add
loopne
jb
outsl
xlat
adc
rcrb
shll
add
add
cmpsb
lods
dec
cmpsl
xchg
lret
push
incb
daa
aam
dec
xor
ror
lods
push
push
lock
in
and
xor
mov
add
ret
cltd
icebp
rcrb
ret
aas
sub
mov
lds
aam
stos
js
add
add
push
push
and
dec
inc
mov
lret
add
add
cmc
test
pop
push
lods
lret
jnp
aas
outsb
cmpsl
jnp
lea
outsl
jp
jp
push
stc
filds
test
add
sahf
mov
mov
mov
sub
push
ljmp
and
clc
imul
add
adc
stos
vpcmpgtd
sub
add
add
push
push
ret
inc
or
dec
rcrb
aam
or
cmpsl
jle
push
ds
loope
mov
pop
gs
mov
push
mov
push
jo
mov
mov
es
data16
sbb
xlat
fists
loopne
adc
push
push
jno
or
repnz
jb
mov
add
add
xchg
sub
add
add
out
pop
sbb
xor
xchg
jo
test
loope
scas
push
fwait
push
push
fadds
lods
pop
idiv
adc
mov
aaa
or
add
add
rorb
aaa
test
repz
xchg
sbb
add
aam
xchg
movsl
dec
add
add
mov
or
loopne
stos
xchg
dec
push
jae
pop
mov
xor
add
add
add
loopne
add
add
add
mov
pop
or
clts
out
lds
lods
sti
cltd
roll
add
dec
andl
cltd
push
iret
je
dec
fistps
add
test
add
add
adc
