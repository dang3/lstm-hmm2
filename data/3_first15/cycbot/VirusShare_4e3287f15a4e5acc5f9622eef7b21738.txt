pop
outsb
rorl
push
push
jnp
add
lods
inc
rolb
add
sbb
add
pop
iret
out
pop
xchg
add
add
lods
pop
pusha
add
add
dec
dec
std
push
add
add
add
sbb
out
pop
and
mov
test
aad
addb
add
out
or
mov
push
mov
sub
push
push
push
cld
call
sub
mov
cs
es
ss
push
call
cmp
je
es
lea
push
cs
es
call
test
jne
jmp
lret
icebp
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
lea
add
repnz
mov
sub
mov
push
pop
push
push
jmp
jmp
add
add
or
add
pop
sub
jnp
add
add
mov
adc
xchg
mov
add
lea
add
outsb
or
cltd
daa
pop
xor
push
aaa
add
data16
add
cmpsl
adc
sbb
add
add
pop
popf
outsb
repnz
cmc
data16
rcl
add
add
aas
push
add
add
sub
and
addr16
mov
pusha
add
add
mov
into
test
addb
add
scas
es
add
jle
add
jnp
cld
and
mov
pop
pop
pushf
mov
loopne
stc
mov
add
pop
push
insb
ljmp
add
pop
fdivs
add
xor
sub
lds
pusha
add
lret
jo
dec
sti
je
aas
je
scas
movsl
ljmp
dec
jo
ret
lds
mov
das
xchg
add
mov
fs
xchg
add
ds
jnp
lret
mov
or
popa
inc
inc
sub
add
add
cmp
mov
add
add
repnz
out
adc
pop
add
add
lea
add
add
push
add
aam
xchg
rolb
and
cmc
pop
sbb
mov
mov
mov
add
pop
std
jne
mov
fisttpl
xchg
pop
insb
push
add
inc
pusha
add
xchg
iret
movsl
sbb
add
adc
popf
addr16
fdivrp
mov
lds
push
add
pop
sbb
icebp
cmc
ljmp
add
cli
inc
xchg
cmp
add
aaa
dec
jl
add
add
add
fwait
mov
add
mov
movb
add
add
inc
fcmovnb
add
aas
dec
repnz
sbb
push
add
mov
adc
and
or
jp,pn
stos
mov
sbb
jmp
add
sub
add
add
out
dec
add
mov
fstps
lds
add
cmp
add
lock
add
enter
add
cltd
outsb
xor
fwait
jmp
cmp
fildll
xchg
add
aad
xchg
xchg
add
add
fbld
mov
mov
test
movsb
add
fldcw
repnz
add
add
inc
add
mov
cmp
add
aas
jb
jnp
xlat
loope
lcall
lods
lea
cwtl
sub
adc
adc
rolb
sub
xchg
add
cmp
into
cmpsl
and
test
scas
stos
xchg
push
xchg
push
jp
jmp
int
jne
or
mov
cs
mov
add
and
add
add
add
jae
xor
adc
jl
add
add
add
push
add
cmp
adc
imul
pushf
add
pop
cmp
lods
rolb
inc
add
adc
jle
add
cmpsl
loop
cmp
sbb
add
adc
push
add
add
mov
stc
cli
xchg
add
push
add
add
and
add
jl
add
sbb
add
out
addb
adc
in
pop
movsl
in
daa
mov
inc
add
add
add
mov
pop
sbb
add
pop
repnz
pushf
lret
xchg
in
outsb
push
and
mov
cmp
fisubl
add
out
sarl
sub
call
data16
mov
mov
mov
repnz
dec
xlat
popa
mov
testb
inc
imul
jbe
decl
push
add
mov
addb
aad
add
cltd
pop
push
cmp
add
fmul
orl
pusha
add
inc
add
mov
add
stos
xchg
push
add
pop
test
in
rolb
cmp
lods
mov
push
inc
fnstenv
insb
inc
add
jno
add
add
lods
cmpl
fadds
add
call
push
add
outsb
dec
sub
mov
loope
and
add
fimuls
call
xchg
add
cmpsb
add
add
push
sub
jne
mov
add
add
jb
pusha
add
lahf
in
xchg
add
insl
mov
popa
jne
testb
ljmp
xor
push
add
movsb
add
ds
jl
jno
lret
repz
add
push
outsb
jb
fistl
mov
xchg
outsl
xchg
fdivr
aam
jo
pop
cli
jnp
dec
jno
adc
mov
add
mov
out
ret
pop
mov
push
add
insl
mov
testb
loopne
movsb
add
add
mov
loopne
mov
aaa
roll
ret
push
add
das
in
or
lods
and
sbb
add
pop
aaa
rcl
add
pop
pop
pop
push
add
adc
jmp
push
add
aas
das
jns
adc
xchg
mov
lds
clc
xor
push
push
mov
add
jge
xchg
add
test
cmpsl
mov
das
fbstp
xchg
sbb
add
pop
repz
add
xor
cmc
or
pop
in
mov
sahf
ss
xor
rolb
cmp
es
daa
inc
add
loopne
mov
dec
mov
insl
xchg
add
jno
call
repnz
add
mov
inc
out
fnsave
jle
add
addr16
add
add
cmp
add
mov
add
mov
add
adc
sbb
or
fmulp
cmp
iret
pop
scas
lods
cmp
test
add
in
fisttpll
out
mov
add
movsb
add
nop
add
sub
add
idivl
je
rolb
jg
inc
add
mov
adc
and
mov
dec
adc
sub
add
movsb
add
add
push
inc
arpl
mov
bound
mov
add
movsb
add
stos
mov
add
add
add
and
mov
jp,pn
inc
add
add
or
imul
scas
push
pushl
cmp
and
mov
sub
add
mov
xor
xor
cltd
negl
stos
xchg
add
add
sub
add
fcompl
es
xchg
add
add
mov
add
fdivp
clc
xchg
add
pop
arpl
add
mov
test
mov
add
add
mov
mov
sbb
mov
add
inc
pop
or
add
fmull
inc
gs
mov
imul
add
mov
cmp
adc
imul
add
je
push
add
hlt
add
mov
sub
and
add
data16
ficomps
dec
inc
add
add
fucomp
pop
bound
mov
add
mov
pop
or
imul
add
add
add
add
pop
data16
rolb
mov
add
addb
add
and
mov
cli
jl
add
dec
stos
bound
mov
and
add
add
je
xor
call
jae
xchg
in
adc
pop
mov
push
test
lods
aad
lods
or
mov
sbb
mov
lods
shrl
add
jle
and
mov
sahf
cltd
push
mov
mov
add
cmp
or
int
add
add
ja
out
add
sbb
in
jmp
add
xchg
add
push
add
mov
add
xchg
add
add
mov
hlt
add
add
add
mov
lock
iret
imul
xor
inc
add
addb
sbb
push
aaa
rolb
add
lahf
test
push
jns
dec
xor
sti
jmp
lock
add
xchg
in
icebp
ds
jo
movsb
add
aas
xchg
rolb
inc
add
or
mov
fcmovb
add
add
add
add
movsl
in
mov
add
pushf
inc
add
aad
daa
call
int
mov
jge
push
add
rolb
jo
xor
push
mov
imul
addr16
xorl
shll
add
xchg
and
mov
mov
push
in
les
bound
mov
adc
inc
popf
xor
push
add
pushf
mov
icebp
pop
testb
pop
xor
clc
mov
push
hlt
add
add
fld
mov
dec
test
pop
cmp
add
movsb
add
int3
jecxz
add
push
add
andl
or
out
nop
add
add
push
add
fsubr
mov
add
sub
fisubrs
mov
in
sub
testb
sbb
xor
adcl
cmc
xor
add
mov
les
ficoml
add
push
add
pop
jne
mov
mov
outsl
loop,pn
mov
jnp
push
add
cld
mov
fwait
out
jns
and
mov
add
enter
add
add
mov
int
or
add
lods
fwait
sub
jmp
push
add
adc
fucom
sub
test
mov
push
test
add
sbb
push
add
dec
sub
add
lahf
lcall
pusha
add
jg
mov
cmp
dec
add
push
add
jbe
in
addb
stos
popf
or
sbb
add
jmp
add
push
cmpsb
add
mov
xor
cmp
add
imul
sahf
repz
add
pushf
sarl
jl
jae
sub
add
clc
push
xor
fsubrl
in
int
cmc
movb
dec
xor
addb
or
add
cmp
mov
pop
xchg
lods
push
inc
add
mov
add
les
test
scas
dec
testb
inc
push
add
aam
adc
imul
sahf
sub
mov
sbb
pushf
inc
scas
xchg
xchg
add
jb
and
mov
add
add
push
add
call
inc
ffree
add
sub
jg
push
add
fmul
test
clc
loopne
hlt
add
add
repnz
mov
xor
inc
movsl
rolb
xor
or
aad
rolb
add
mov
mov
inc
add
xchg
xlat
pop
lods
je
addl
test
add
xor
push
rolb
ja
and
inc
mov
push
add
xor
add
push
add
xchg
rcr
mov
mov
pop
dec
fdiv
test
addb
stc
out
and
mov
push
add
sahf
bound
mov
cwtl
inc
mov
cld
sub
orl
add
mov
or
add
imul
xor
add
add
ja
ret
adc
and
and
fnstcw
in
popa
jb
pop
xor
pop
in
jno
add
xchg
add
fucom
add
add
add
sbb
mov
mov
lahf
ds
ret
clc
pop
dec
mov
xchg
add
or
add
cs
data16
add
test
rolb
negl
int3
mov
data16
add
insl
add
or
add
lcall
add
mov
fidivl
outsl
dec
push
add
push
push
scas
lock
add
adc
pop
addb
pop
or
add
nop
add
xor
inc
add
sahf
fldcw
pusha
add
mov
mov
add
cmp
push
int
xor
in
repz
add
jl
loop
xor
fists
push
pop
mov
scas
pop
in
jp
add
add
pusha
add
js
add
jmp
add
bound
mov
jb
into
popa
pusha
add
stos
jns
in
pop
sbb
add
repz
and
mov
addb
cmp
add
decb
add
cli
aam
cmp
add
pop
sbb
inc
add
rol
add
outsb
xlat
pop
mov
xor
in
lea
pop
and
mov
ds
pop
and
mov
jmp
pop
cmp
aaa
rolb
gs
mov
add
or
hlt
add
mov
sub
mov
loope
push
test
inc
scas
adc
add
add
cmpsl
dec
addr16
sub
cmpsl
insb
sbb
push
cmp
and
add
ljmp
pop
shrl
in
cltd
testl
add
add
add
jecxz
filds
xor
jl
aad
add
or
loopne
inc
add
jg
add
add
jl
mov
jl
push
add
rolb
ret
loope
add
mov
add
scas
push
mov
in
dec
inc
mov
add
int3
ds
imul
add
add
fisubl
rolb
add
dec
fnstcw
adcl
xor
pop
cmpsb
add
add
add
mov
aaa
iret
add
mov
icebp
xrelease
add
add
and
xor
fnstenv
cwtl
fiadds
add
out
cmpsb
add
xor
xchg
negl
xchg
add
add
jns
push
add
add
je
xchg
cmp
xor
add
push
add
ficoms
lret
loop
or
in
xchg
cmpsb
add
xchg
insl
mov
add
movsb
add
jnp
push
pop
xlat
cmp
sbb
iret
mov
add
test
jae
scas
xor
and
inc
add
cmc
pop
test
imul
movsb
add
add
add
js
dec
dec
fmuls
jl
cs
ret
cld
movsl
xor
xor
push
cmp
add
lret
cwtl
add
mov
ja
add
xlat
call
mov
jge
add
add
add
pop
imul
mov
inc
repz
adc
jne
cmpsl
inc
add
fucomip
push
in
mov
testb
mov
mov
out
and
in
lds
mov
aam
call
movsl
add
inc
neg
movsb
add
xchg
mov
adc
in
loope
pop
test
add
test
popa
fdivs
dec
js
adc
aad
and
mov
hlt
add
add
add
sub
push
jae
add
pop
bound
mov
add
imull
rcrl
jo
clc
add
fdivrs
sbb
add
add
mov
jmp
cmpsl
outsb
xor
jnp
add
sub
pushf
dec
mov
fadds
mov
sbb
add
add
mov
cli
mov
mov
repz
mov
add
mov
pop
push
xor
add
add
fmuls
mov
xor
das
sbb
xor
sbb
fsubrp
sub
in
add
mov
pushf
lcall
mov
arpl
add
sub
push
es
cli
jle
add
out
mov
pop
or
pop
jae
mov
cltd
add
add
addb
add
xchg
add
add
push
add
js
in
add
mov
sahf
cmp
add
add
addb
int3
jle
enter
dec
pop
pusha
add
hlt
add
movb
dec
hlt
add
add
cmpsb
add
jbe
gs
and
add
add
fs
and
add
add
add
daa
lods
push
add
jb
test
add
scas
sbb
adc
rolb
mov
aas
mov
add
in
cmp
mov
ss
cmpl
sti
and
mov
xchg
scas
pop
daa
xor
add
add
jae
adc
test
loope
lea
scas
aam
sbb
in
pop
add
mov
pop
dec
clc
xchg
or
adc
adc
loopne
push
add
add
add
dec
aad
sbb
fisubrl
add
add
repz
stos
or
rolb
mov
mov
repz
cwtl
jl
call
cmc
cmpsb
add
push
add
inc
testb
test
or
add
ret
adc
outsl
in
imul
mov
mov
add
or
push
add
xchg
add
lcall
add
insl
gs
or
and
lods
pop
inc
add
cwtl
add
mov
seta
mov
jb
out
add
xchg
fstpt
add
mov
add
add
push
xchg
add
and
mov
mov
add
add
mov
add
sbb
pop
pop
xchg
jge
int3
movsb
add
rolb
cmp
add
jo
inc
add
add
mov
push
xchg
test
and
add
mov
add
xchg
xor
xor
test
gs
and
mov
lahf
decl
and
add
fildl
push
add
mov
pop
in
add
inc
add
test
add
add
add
es
mov
leave
add
add
sbb
add
add
mov
jp
mov
add
add
outsl
and
std
mov
mov
add
lods
lahf
push
add
push
add
push
adc
add
sbb
test
stos
lods
or
mov
mov
arpl
add
pop
lret
add
dec
fistps
icebp
jb
mov
mov
das
dec
add
insl
js
dec
in
pop
outsl
movsb
add
outsb
inc
and
cmp
mov
lahf
xlat
sbb
iret
mov
add
add
mov
imul
xchg
push
add
mov
test
jg
push
lods
test
adc
in
int
test
add
je
adc
stos
fstpt
add
add
in
pop
jae
add
mov
dec
rolb
in
shll
add
add
xor
inc
add
cli
into
inc
inc
add
test
mov
je
cmpl
dec
decb
in
enter
mov
push
add
int
mov
les
sub
insl
add
aaa
xor
add
or
fisubs
sub
pop
inc
add
add
imul
iret
pop
jmp
dec
fisubrl
pop
cltd
push
add
push
add
jae
add
out
add
dec
adc
loope
data16
andl
mov
xor
out
cmp
dec
push
push
add
mov
add
cmp
add
add
add
cmpsb
add
mov
ret
pop
aaa
out
or
jne
add
inc
add
xor
in
mov
cmp
daa
push
mov
add
add
jne
add
sbb
mov
add
insl
es
arpl
add
mov
imul
ret
sbb
dec
inc
mov
add
pop
scas
xchg
sub
adc
aad
add
or
loop
and
mov
mov
add
mov
add
jle
add
stos
stos
mov
xchg
imul
add
add
je
cmpsl
dec
jne
cmp
jno
pop
pop
mov
mov
or
add
scas
pop
jbe
xchg
mov
add
add
and
mov
or
sub
lahf
jle
mov
sbb
add
cmp
xor
push
add
sbb
aad
jb
xor
add
jl
hlt
add
rolb
inc
lea
lcall
cmpsb
add
ss
or
popf
cmpl
jae
lock
popf
mov
add
test
int3
aad
inc
jb
or
push
cld
addr16
mov
add
mov
ja
mov
rorl
loopne
ja
add
sbb
testb
push
add
cld
es
add
das
rolb
mov
cli
xchg
inc
mov
and
add
push
push
adc
push
add
cmpsb
add
add
add
mov
sbbl
aas
int
into
and
dec
xor
aas
cmovg
call
insb
add
hlt
add
ret
filds
das
insb
pop
jne
add
loope
addb
daa
gs
shll
addb
add
xor
pop
pop
adc
mov
add
ljmp
add
mov
cmp
incb
pop
mov
sub
inc
add
push
add
add
imul
mov
sbb
add
pop
ljmp
movb
inc
cltd
cltd
fisubs
mov
add
or
mov
sbb
push
add
mov
lahf
rolb
or
add
int3
and
mov
cs
int3
sbb
add
addb
imul
shrl
rol
add
add
add
add
push
xchg
add
add
lret
add
add
jbe
xor
xchg
cli
addb
xor
enter
scas
ljmp
rolb
inc
xchg
hlt
add
push
add
add
xchg
in
mov
enter
aas
rolb
fnstcw
mov
jno
add
decb
add
je
jae
out
incb
mov
xchg
add
cmp
leave
scas
int
add
and
mov
stos
xchg
data16
je
shrl
pop
cltd
cld
xlat
mov
jno
add
pop
lret
add
add
rdtsc
mov
ret
mov
add
daa
fcoml
inc
mov
or
ret
lret
dec
push
shll
xchg
add
add
mov
daa
xor
testb
add
mov
jno
add
xor
ror
inc
add
movsb
add
xor
push
add
add
adc
cmp
lret
addb
test
outsb
inc
add
imul
add
add
mov
ret
testb
add
pop
aas
lret
add
addr16
add
add
incb
cli
mov
pop
mov
or
repnz
push
jo
add
jmp
mov
shld
add
xchg
add
pop
jnp
push
pop
push
add
iret
ds
mov
mov
iret
cli
xchg
jmp
mov
jnp
sahf
mov
add
add
jp
jg
or
cmp
pop
cmp
add
and
add
add
leave
fildl
add
lds
mov
bound
mov
add
mov
xchg
add
add
pop
cltd
imul
rcl
add
mov
movb
pusha
add
and
pop
cmpsb
add
or
add
add
add
xor
cmpsl
xlat
push
add
add
and
sbb
sbb
mov
add
add
xchg
pop
test
roll
add
test
mov
repnz
pop
leave
movsl
xor
addb
pop
cwtl
cmp
in
jb
mov
add
rolb
push
adc
jns
add
add
dec
mov
je
cs
out
mov
fstpl
push
add
scas
fmull
inc
jmp
add
mov
mov
mov
mov
inc
add
ja
add
mov
add
jmp
inc
add
mov
add
mov
in
mov
ja
add
mov
jecxz
lret
mov
add
mov
std
out
rcrl
and
mov
int3
adc
idiv
inc
mov
and
mov
add
push
add
lret
mov
and
mov
mov
fsubl
add
add
sbb
inc
jmp
mov
add
mov
js
add
addl
push
xchg
stos
mov
ljmp
add
jbe
mov
push
lret
scas
and
mov
testb
rolb
jle
dec
dec
mov
leave
les
cmpsl
ljmp
addb
outsl
mov
aam
add
add
dec
push
add
lods
mov
xor
mov
xor
mov
xchg
add
push
mov
add
loop
jl
add
or
mov
mov
addb
idivl
mov
add
add
pop
xchg
daa
arpl
and
mov
jle
mov
aaa
int
jp
add
insl
cmp
and
mov
and
cltd
push
add
add
insl
dec
incl
mov
rolb
sub
mov
mov
bound
mov
push
add
aam
add
ja
nop
add
mov
lods
int
add
inc
sbb
sti
inc
add
xor
jge
add
les
insb
gs
std
xchg
add
add
add
and
out
pushf
sub
pop
lcall
add
movb
add
add
fildll
int
adc
push
add
xchg
xlat
imul
add
add
mov
add
dec
add
add
mov
ret
xchg
out
mov
sub
imul
cld
pushf
jmp
add
int
sub
add
add
or
xchg
add
adc
add
add
add
jns
aas
testb
adc
inc
add
icebp
mov
popf
adc
mov
pushf
mov
repnz
xchg
add
fstp
sub
loope
jmp
add
pop
push
add
fiadds
lcall
sbb
lock
cmp
iret
fldcw
add
stos
push
or
out
std
subl
add
das
add
add
dec
rolb
jmp
pop
pop
cwtl
mov
ret
adc
cmc
incb
dec
sbb
xchg
push
xchg
inc
add
cmc
jg
adc
push
add
mov
mov
je
xor
xor
outsb
je
mov
add
mov
adc
cmp
add
les
lods
push
shrl
mov
and
cmpsb
add
xor
add
xor
dec
in
add
add
add
pop
sahf
sbb
push
pop
add
jnp
add
lcall
mov
mov
push
add
mov
add
mov
add
mov
call
pop
jns
sub
testb
or
movb
add
push
adc
sub
push
pop
add
mov
mov
xchg
add
call
mov
out
insl
xchg
add
push
jne
in
mov
add
rcrl
add
addb
mov
push
clc
popa
mov
aam
mov
add
mov
sub
pop
pop
push
add
loopne
push
add
lcall
add
lahf
jge
add
push
cmpsb
add
mov
sti
in
mov
jp
addb
inc
add
add
mov
pop
dec
roll
add
in
mov
les
icebp
pusha
add
add
stc
ret
jbe
loopne
sbb
add
mov
in
xor
and
mov
push
xchg
lods
loop
nop
add
add
in
mov
fistl
add
int
ficompl
popa
fxtract
add
in
push
add
adc
out
clc
lds
bswap
mov
aad
add
xchg
mov
add
add
aam
inc
add
mov
dec
ljmp
sub
pop
sbb
add
jo
dec
fisubl
sahf
icebp
in
adc
add
rolb
rol
jo
jmp
cltd
in
sub
add
movsb
add
rolb
cmpsb
add
add
mov
cmpsb
add
add
loopne
hlt
add
add
cwtl
scas
aad
add
inc
add
add
lods
pusha
add
push
xchg
cs
aaa
mov
ffree
movsl
xchg
inc
mov
pusha
add
pop
and
addb
add
cmpsl
mov
pop
inc
cwtl
add
in
mov
mov
add
push
add
xchg
add
add
arpl
add
pop
test
iret
test
scas
lods
sub
add
add
add
into
imul
cmpsb
add
loope
cmpl
vmptrld
mov
jge
addr16
fisttpl
push
je
mov
outsb
decl
push
add
xchg
add
mov
inc
add
add
jmp
roll
add
add
adc
and
mov
rcrl
mov
pop
sub
mov
add
ds
mov
add
inc
add
lock
add
push
add
xchg
add
mov
cmp
add
sahf
testl
add
add
adc
inc
add
jae
or
add
mov
outsb
xor
add
push
sbb
xor
sub
loop
and
mov
mov
iret
sub
lea
les
call
mov
movb
cwtl
push
push
pusha
add
pop
and
push
add
and
mov
mov
xlat
and
mov
dec
adc
movsl
add
add
data16
lahf
out
sbb
fsubs
add
mov
pavgb
stc
jns
add
pop
hlt
add
mov
push
add
sub
add
xchg
cmpsl
push
repnz
in
hlt
add
adcl
cli
out
or
jne
cmc
mov
cmp
add
testb
add
inc
fdivrp
cmpsb
add
add
inc
mov
cli
push
push
add
inc
push
iret
push
add
in
add
enter
add
data16
addb
stc
or
add
dec
test
xrelease
mov
inc
add
divl
lret
add
add
add
add
mov
add
cmp
mov
jne
add
add
in
int
addb
add
dec
dec
aaa
leave
popa
add
loope
push
add
add
ss
notl
mov
cmpsb
add
std
mov
out
mov
pop
imul
add
add
and
inc
add
insl
fwait
mov
or
addb
or
xor
sti
test
gs
stos
xor
pop
or
leave
mov
repnz
add
gs
sbbl
stc
test
add
add
in
icebp
mov
sahf
lock
pusha
add
push
jl
add
js
pop
adc
add
and
mov
mov
das
rolb
push
mov
push
add
mov
arpl
add
add
mov
mov
mov
mov
mov
xchg
add
add
add
mov
fsubr
ds
loope
sbb
iret
rolb
shll
cs
les
cmp
add
pop
mov
add
add
mov
add
inc
and
mov
test
enter
mov
gs
hlt
add
add
add
dec
pop
stos
int
add
push
fsubrl
dec
jl
jp
push
test
jecxz
sub
or
pop
enter
mov
pop
push
add
add
add
sbb
or
jl
inc
add
test
scas
sub
mov
aaa
mov
loopne
cmp
xchg
testl
sbb
add
add
scas
out
nop
add
pop
or
push
sbb
inc
add
in
in
cmpsl
movsl
adc
repz
sahf
xchg
mov
idivl
add
call
aaa
lods
aam
popf
les
data16
push
loopne
fisubl
jmp
adc
lds
int
iret
ss
add
add
inc
jo
loop
mov
add
popf
mov
clc
fcmovu
jnp
faddl
push
vminpd
loop
aam
adc
xchg
add
jne
sbb
ficompl
jnp
add
lea
jne
scas
add
mov
call
mov
jnp
add
lea
cmpsb
add
add
cwtl
sub
mov
add
add
pushf
scas
movb
xlat
ja
add
add
bound
mov
testb
icebp
jo
out
xchg
add
add
add
into
daa
inc
add
add
rolb
add
addb
repnz
in
add
mov
std
jo
cld
mov
popa
mov
add
dec
ss
rolb
addb
leave
fwait
outsb
pushf
pusha
add
mov
das
cwtl
pop
mov
xor
sub
add
add
add
mov
fucomp
add
into
adc
hlt
add
add
sbb
pop
mov
inc
add
add
test
inc
test
jbe
push
add
lock
or
sbb
add
fcoms
ja
add
or
push
xchg
add
lahf
xchg
mov
add
lcall
loop
dec
xchg
add
pop
mov
or
add
mov
xchg
mov
addb
add
outsl
lret
xchg
lret
hlt
add
add
std
mov
add
mov
xchg
add
rolb
add
pop
xchg
cmp
stos
fwait
bound
mov
add
mov
bound
mov
add
cmp
add
mov
add
inc
add
testb
sti
sete
lcall
push
test
add
push
add
add
or
out
fisttpll
push
stc
inc
add
add
jge
xor
loope
xchg
addb
add
xchg
add
or
andl
add
popa
adc
inc
add
inc
add
xor
shll
add
rolb
pushf
sub
add
add
and
mov
test
mov
add
add
cmp
cmp
dec
sti
push
dec
push
xchg
pop
ds
add
add
pop
daa
adc
cmc
aaa
and
mov
jl
test
add
ja
dec
cwtl
mov
add
cli
sbb
add
xor
pop
or
lock
inc
lea
mov
imul
adc
int
gs
add
add
jbe
jg
add
out
xchg
add
in
sbb
in
fucomip
add
cwtl
imul
mov
adc
inc
add
add
mov
add
push
add
pop
popa
sbb
jp
add
adc
clc
push
lods
push
insl
pop
movsl
je
cwtl
aad
add
insl
ja
push
adc
mov
add
push
add
movb
orl
add
dec
jno
add
pop
lret
push
rcll
cmc
in
addb
add
pop
rcl
push
pop
sbb
cmc
lds
xchg
adc
xchg
popa
je
aad
add
in
nop
add
mov
add
pushf
jmp
or
push
call
cmp
inc
jl
push
push
add
loopne
arpl
add
jnp
xchg
fstpl
lret
loope
sti
jns
add
add
jmp
pop
sub
inc
add
dec
icebp
sahf
sub
jbe
add
mov
adc
push
bound
mov
dec
cltd
pop
dec
pop
xchg
ljmp
mov
test
add
pop
mov
idivl
sarl
push
sbb
jae
rolb
mov
andl
xchg
push
add
addb
add
js
add
fistpll
stos
nop
add
pushf
fprem1
lret
mov
jmp
mov
jns
data16
push
add
xchg
es
sub
xor
lret
icebp
aaa
jne
add
mov
ljmp
iret
push
add
dec
adc
sbb
lods
dec
filds
movsb
add
push
sbb
xor
push
bound
mov
bound
mov
xchg
std
and
mov
add
pop
lods
in
cwtl
sbb
sbb
jl
fistpl
test
dec
pushf
jbe
in
add
ja
lods
jecxz
inc
add
add
add
lods
cmp
xor
pop
xor
add
mov
das
sbb
rcl
aad
or
scas
cltd
xchg
mov
push
or
push
add
add
push
cmc
add
mov
adc
add
cmp
add
mov
cwtl
sub
repz
enter
mov
test
fldl
out
xchg
add
inc
add
add
jne
add
mov
add
add
mov
movb
data16
add
adc
xchg
add
pop
adc
adc
add
mov
mov
xchg
xchg
add
cmp
mov
or
outsb
sbb
sbb
in
jge
add
xchg
dec
fdivr
push
sub
insl
ja
in
add
add
add
add
and
dec
pusha
add
add
add
fwait
les
outsb
jns
push
movl
pop
mov
scas
loopne
mov
jmp
add
add
subl
add
add
movb
and
mov
or
daa
push
add
push
mov
mov
dec
ret
int
pop
test
sub
das
fnsave
dec
xor
xchg
add
add
rolb
push
sbb
xor
sbb
add
xor
enter
jg
int3
cmp
adc
and
mov
add
or
inc
add
add
rolb
into
dec
jle
add
add
xorl
add
shll
inc
hlt
add
add
addr16
mov
jl
xor
inc
add
mov
add
sub
cmp
add
add
xor
sti
pushf
loopne
jg
sbb
add
addb
rolb
mov
frstor
add
icebp
aaa
lods
loope
and
mov
mov
mov
nop
add
inc
mov
mov
add
inc
add
add
adc
xchg
push
add
mov
or
push
add
add
add
divl
add
and
add
xchg
insl
popf
mov
add
out
ljmp
loope
pop
or
mov
daa
popa
test
call
lret
xchg
or
jnp
add
dec
ret
test
pop
loop
ret
pop
ret
mov
stc
xchg
dec
dec
adc
test
lods
stc
cmp
push
sub
stos
jb
cmpsl
das
pop
call
jg
dec
pop
das
aam
bound
mov
mov
sub
mov
inc
add
lcall
cld
and
mov
insb
and
mov
jg
sub
dec
fcomps
sarl
outsb
fidivrl
loope
and
pop
or
subl
adc
pop
hlt
add
dec
xor
movb
fisubs
mov
scas
xor
sarl
jno
jg
xchg
add
mov
movsl
aaa
pop
add
pop
ljmp
je
sbbl
add
add
add
add
pop
lds
imul
rolb
movsl
sahf
clc
out
ret
test
ret
mov
popa
scas
xchg
add
xchg
jecxz
pop
xchg
jge
dec
sbb
add
iret
lock
mov
jns
add
mov
add
jp
add
add
loopne
clc
adc
jle
xchg
add
or
fnsave
push
insl
or
jmp
push
add
push
aaa
fwait
mov
add
add
adc
aaa
movb
add
add
mov
dec
adc
out
sub
fnsave
add
add
adc
ret
test
push
mov
mov
cmpsb
add
es
aas
mov
pop
faddl
sbb
rolb
sbb
cmp
and
dec
xor
lock
popa
pop
jmp
loope
dec
jbe
jb
test
cmp
test
icebp
adc
push
cli
in
sub
je
adc
lahf
mov
test
add
add
mov
add
gs
movb
xor
jnp
add
cmp
sbb
int
cltd
cmpsl
fbstp
pushf
adc
jge
pusha
add
clc
push
iret
hlt
add
xchg
add
push
add
add
add
adc
pop
inc
aam
push
add
mov
cmp
data16
mov
frstor
cmp
cld
pop
sbb
hlt
add
rolb
fdivs
mov
cmp
loopne
fnstenv
mov
cmp
pop
xchg
push
and
mov
data16
mov
add
xchg
add
add
adc
sbb
jnp
mov
dec
sbb
inc
add
add
dec
aas
and
test
mov
rolb
sbb
pop
test
add
mov
adc
dec
aad
movsl
pushf
cmp
pop
and
jecxz
add
sti
enter
decl
rolb
lea
mov
out
add
dec
jmp
add
add
call
jae
lods
testb
dec
add
mov
add
out
lea
add
lret
jg
call
enter
insb
test
and
xchg
add
add
add
inc
add
pop
int3
xchg
sarl
inc
push
add
add
jae
testb
loop
mov
mov
sbbl
add
fld1
rolb
out
add
pop
das
je
adc
add
add
add
rcrl
orl
scas
adc
pop
and
mov
adc
test
popf
adc
add
mov
fdivs
sub
lea
testb
add
ljmp
add
ds
pop
lock
in
mov
add
add
xchg
fldcw
into
repnz
rcll
add
mov
cmc
push
sbb
push
add
sbb
add
mov
mov
add
add
mov
add
add
inc
add
add
add
mov
push
add
push
add
jp
add
lods
aas
add
xor
push
add
and
lcall
andl
sbb
add
jecxz
push
mov
ljmp
ds
outsl
ja
lds
dec
hlt
add
out
add
or
std
inc
add
icebp
sti
mov
cwtl
push
movsl
icebp
push
add
imul
add
in
add
add
push
add
add
mov
add
add
add
add
rsqrtps
fwait
xor
loop
and
and
jle
mov
inc
add
repz
dec
or
bswap
add
jae
xor
mov
add
add
rolb
xor
pop
lret
push
sub
fidivl
cs
fistps
shr
ja
jb
clc
jne
push
addb
aam
and
bound
mov
mov
insb
ja
rolb
add
ret
aas
inc
add
mov
push
add
jle
push
add
test
mov
add
mov
lock
in
movaps
add
cmp
add
sbb
add
add
sahf
dec
ljmp
or
jbe
out
and
mov
mov
testb
hlt
add
lock
add
cmp
cmp
jbe
sub
add
pop
mov
cmp
dec
fwait
pop
test
jbe
jns
add
dec
ret
add
add
hlt
add
or
or
add
dec
rolb
sub
aad
aaa
mov
mov
ljmp
leave
daa
cmpsb
add
add
xorl
imul
xlat
or
nop
add
add
mov
add
jo
sbb
add
fisubl
add
add
lds
add
cltd
rol
mov
jno
xchg
or
xchg
add
jecxz
jbe
mul
dec
ret
and
push
add
std
mov
xchg
mov
xchg
or
scas
xor
jne
test
insb
cwtl
cmp
add
add
arpl
jg
add
push
add
sub
add
int
jnp
add
mov
add
add
sbb
inc
mov
add
push
pop
fwait
cmp
add
mov
movsb
add
ljmp
push
add
loopne
mov
xor
add
adc
dec
jo
push
add
add
lahf
fistl
cli
mov
add
hlt
add
push
add
dec
fisttpll
sbb
add
pushf
fldt
jno
cltd
es
pop
and
mov
sbb
insl
cltd
fsts
pop
stc
jns
mov
add
lret
push
add
popa
xchg
clc
daa
enter
add
add
mov
add
add
enter
add
add
dec
pop
cmpsl
sbb
sub
std
cmp
in
mov
add
mov
imul
dec
shrl
add
mov
std
push
inc
push
imul
jns
add
lea
les
or
push
mov
add
incb
dec
and
mov
sub
or
addb
add
ret
mov
push
add
testb
push
add
mov
add
add
jnp
add
je
xlat
fstpt
loop
movsl
xor
cmp
mov
add
icebp
addr16
sub
jb
mov
jne
movb
sub
jbe
lcall
cmpsb
add
roll
add
mov
movb
rorl
add
aaa
roll
mov
in
stos
sub
add
mov
aas
inc
ret
hlt
add
add
cmp
add
mov
js
nop
add
add
in
in
sub
scas
dec
add
adc
mov
inc
dec
out
mov
add
add
add
int
cmpsl
testl
lds
pop
insl
or
add
out
imul
xor
out
int3
xor
lahf
xchg
push
add
movsl
iret
dec
call
stos
and
lods
xchg
add
push
add
stc
aad
xor
fldt
arpl
xor
rolb
jo
mov
lea
shrl
mov
dec
push
add
lahf
into
pop
sti
ljmp
add
xor
sub
dec
in
mov
mov
cs
jmp
or
add
sub
jnp
dec
cmpsl
add
add
jecxz
jno
add
and
add
pop
add
jbe
adc
sahf
flds
add
sarl
add
mov
lcall
xor
pop
push
repnz
add
fcomps
xor
jg
add
jo
repnz
mov
or
mov
add
cltd
jp
lret
mov
xor
mov
add
add
inc
out
pop
and
add
add
add
inc
add
lods
addb
outsl
xchg
jg
ret
in
pop
add
add
mov
or
mov
movsb
add
and
jns
add
sub
push
add
add
xchg
in
ret
sbbl
mov
jmp
ret
rolb
mov
test
in
cwtl
rolb
jbe
stos
rolb
je
rolb
add
sbb
movsb
add
pop
mov
pop
sub
xor
rorl
or
add
subl
insl
inc
add
imul
mov
les
in
push
push
add
or
rolb
prefetch
add
stos
orl
adc
add
cmpsl
lock
add
aad
test
push
scas
addb
add
xchg
add
add
sbb
sub
imul
mov
add
add
mov
in
sub
push
add
hlt
add
xor
shl
add
movb
add
mov
inc
outsb
aad
xchg
subl
bound
mov
mov
jae
push
add
cmp
jmp
add
inc
add
push
add
add
add
mov
pop
rolb
cmp
xor
add
into
mov
add
add
add
add
mov
add
outsb
add
out
pop
daa
pop
and
mov
inc
fsub
or
add
pop
rcl
add
addb
fisubl
pop
dec
addb
add
cltd
mov
add
add
mov
xchg
add
clc
cmp
or
add
int
in
jo
ficoms
popa
or
add
add
add
or
jo
jle
pop
leave
inc
add
out
gs
xchg
jl
add
std
pop
mov
sbb
std
test
jae
cwtl
aaa
or
add
scas
mov
add
add
mov
cmp
icebp
adc
adc
add
outsb
popf
dec
xor
je
aam
scas
jbe
pop
xor
or
add
sahf
push
mov
loop
xchg
lret
test
inc
add
xor
sbb
addr16
add
sub
xchg
add
mov
push
add
jge
jecxz
mov
pop
pop
or
mov
cmc
ljmp
add
add
or
or
gs
enter
fnsave
int
add
scas
ja
inc
add
testl
or
or
push
push
test
iret
pop
mov
add
add
add
mov
stos
jl
add
cmc
les
cmp
add
add
xchg
add
add
bound
mov
push
add
jmp
and
mov
in
add
sbb
imul
jae
mov
and
insb
lahf
and
loopne
sbb
jle
cmp
mov
jl
gs
add
mov
iret
push
fistl
add
jnp
stos
mov
dec
addb
adc
enter
rolb
cmc
imul
pop
mov
lret
pop
nop
add
sti
mov
jle
aaa
and
mov
add
add
sbb
inc
iret
add
addb
push
add
add
adc
cmpsb
add
je
lahf
fwait
decb
mov
js
sbb
add
ffree
add
xor
jg
add
aaa
mov
and
add
inc
add
add
mov
add
mov
lock
addb
jae
or
add
mov
scas
les
fstl
loop
xor
movb
push
push
in
adc
aad
data16
popl
add
fildl
mov
jno
cld
sub
das
adc
sbb
add
inc
inc
add
or
add
mov
mov
addb
add
add
add
fistps
xchg
add
add
inc
out
mov
jb
imul
mov
push
add
or
add
add
jge
push
add
cltd
out
or
mov
add
fcomi
add
add
or
push
add
inc
add
xor
jl
dec
lcall
and
adc
je
sbb
scas
icebp
das
adc
sub
sub
push
add
push
add
mov
mov
xchg
add
xor
mov
hlt
add
mov
mov
push
loopne
call
loopne
subl
ljmp
add
imul
push
testb
and
mov
aad
add
or
dec
push
rorl
inc
fadds
mov
cmp
or
xchg
add
pmulhuw
mov
add
std
mov
scas
push
ja
add
mov
scas
lea
cmpsb
add
mov
xor
lret
mov
push
add
mov
jp
add
mov
add
addb
mov
push
js
and
mov
mov
add
pop
lcall
into
les
mov
cmp
gs
repnz
adc
rolb
jmp
adc
xchg
add
add
and
mov
ds
call
or
fnstcw
scas
shl
add
loopne
xchg
add
adc
dec
cli
shll
fdivrs
add
xor
sub
add
jl
add
adc
add
sub
jp
push
add
ljmp
push
add
add
adcl
mov
jp
adc
add
cs
lret
push
add
mov
sub
add
xor
push
cmpsb
add
xor
imul
stc
xchg
add
push
add
test
xchg
push
mov
subl
cld
negl
popa
xchg
and
mov
jl
add
imul
shll
add
std
pop
in
add
popf
jo
jbe
ficompl
cmp
std
xchg
and
mov
clc
and
mov
add
jae
in
push
std
divl
es
aaa
adc
inc
add
rcrl
iret
mov
mov
jns
add
add
adc
js
std
enter
xor
ljmp
std
mov
xor
adc
add
push
imul
mov
out
fsubs
mov
cmpsl
cmp
jne
add
popa
repnz
sub
add
mov
mov
add
dec
mov
sahf
dec
dec
fnstcw
xchg
testb
add
add
jb
jl
add
pushf
jne
add
repnz
jno
into
push
cwtl
sub
add
shl
fcomp
roll
add
out
xchg
adc
xor
add
mov
cwtl
inc
add
pcmpgtb
lahf
cmp
outsb
jb
add
add
add
leave
xchg
dec
dec
mov
push
add
add
dec
xchg
inc
pushf
xchg
and
mov
cmp
add
pop
dec
sub
add
mov
idiv
xchg
xchg
add
add
fcomps
add
leave
cmp
je
inc
lahf
dec
mov
lea
icebp
mov
add
pop
push
add
add
adc
or
or
add
add
repnz
inc
fdiv
add
add
add
add
dec
push
and
mov
in
dec
popf
out
lods
adc
cmpsb
add
add
push
sbb
add
dec
in
lock
add
xor
movsl
ja
rolb
add
neg
das
clc
or
mov
neg
insb
adc
xchg
add
add
sbb
imul
pusha
add
add
lahf
leave
mov
add
push
add
or
mov
sti
inc
add
add
mov
pushf
pushf
mov
aas
aad
cmp
push
add
scas
xor
add
add
xchg
lock
lds
lock
add
pop
dec
mov
sbb
and
add
and
push
aas
aam
add
sbb
lahf
mov
in
adc
getsec
push
scas
xchg
jae
into
js
add
sbb
sbb
add
add
add
xchg
ja
mov
mov
mov
cmp
mov
add
int
dec
addr16
rolb
out
rorl
scas
fsub
add
adc
add
xor
add
sbb
push
add
mov
aam
xchg
inc
outsl
out
mov
cmpsl
lea
and
addb
sbb
add
mov
add
add
pop
or
or
mov
jns
ja
add
addb
rolb
loope
jne
add
add
add
add
add
push
scas
xor
add
xorl
add
mov
sbb
push
add
add
add
les
out
push
add
sbb
add
test
sbb
decb
jns
add
mov
mov
mov
fbstp
add
add
fwait
rolb
cmp
add
add
dec
cltd
loope
add
add
mov
mov
mov
daa
push
add
rcl
add
add
rolb
fsubs
out
add
xchg
add
inc
add
mov
add
and
mov
sub
and
lret
icebp
lds
add
add
stos
in
insb
fs
add
add
repz
test
fcomip
add
cltd
push
add
in
pop
sbb
push
ret
add
rorl
push
and
inc
add
int
add
dec
or
insl
cld
jle
dec
enter
add
outsb
sub
pop
lea
add
add
pop
bound
mov
cmpsb
add
add
dec
or
movsl
movb
add
jle
add
xor
inc
add
push
add
add
add
inc
add
push
add
xor
int
jo
outsb
loope
add
mov
mov
add
mov
addr16
mov
xchg
popa
push
push
xlat
sub
add
xchg
add
add
add
add
add
add
add
and
int3
add
imul
add
add
add
mov
cmpsb
add
jge
xchg
add
repz
push
add
add
add
int
push
add
add
je
fists
add
mov
or
dec
pop
mov
loopne
mov
fidivrl
pop
mov
add
xchg
inc
add
push
add
mov
aam
stc
js
aas
aam
push
add
test
rolb
sbb
adcl
jge
add
add
lret
cmp
fsubrs
add
les
fcoml
sub
add
mov
addr16
mov
sbb
add
add
jecxz
xchg
add
pop
cmpsb
add
shrl
add
int3
into
and
js
add
add
jecxz
inc
mov
lret
lcall
jl
lds
mov
push
hlt
add
add
jae
add
insb
jo
call
dec
mov
movsb
add
out
mov
push
add
add
aad
add
cltd
inc
popa
pop
jge
push
cmp
mov
into
inc
xchg
push
clc
les
cmp
fdivr
out
lods
add
inc
adc
jo
xor
add
mov
arpl
out
sbb
rolb
or
loop
cwtl
or
jecxz
add
popa
push
mov
add
inc
mov
or
pop
ret
les
pop
xchg
pop
push
movb
jl
push
add
sbb
and
xchg
stc
fildl
add
jb
push
jecxz
xchg
xor
xlat
add
js
pusha
add
outsb
push
add
mov
insb
mov
add
stos
mov
rolb
je
jnp
add
lock
add
push
lret
sbb
sbb
repnz
xchg
add
inc
jge
popa
enter
add
jge
xor
sahf
sbb
mov
out
ja
add
iret
jne
rolb
dec
stos
mov
adc
push
cmp
add
pushf
sbb
jmp
add
mov
xchg
fadd
add
xor
xlat
leave
push
add
dec
aas
imul
ja
pop
loope
cmp
add
add
add
dec
push
add
xchg
gs
sete
and
mov
jle
call
mov
je
inc
add
pop
mov
addb
pop
adc
mov
jle
push
jge
add
inc
dec
mov
dec
repnz
dec
mov
add
jmp
add
jge
add
lcall
add
mov
push
add
xor
add
sbb
mov
mov
xchg
add
cmpsb
add
push
add
push
pop
add
add
popa
push
call
out
pusha
add
lods
lods
fmull
push
bound
mov
mov
mov
add
hlt
add
cmp
notl
add
push
mov
pop
sbb
jne
addb
add
mov
out
mov
fistpll
add
decl
loop
addb
mov
xor
loop
int3
cmp
fbld
mov
add
xchg
imull
adc
je
scas
fdivs
test
jl
add
mov
jmp
add
add
je
dec
popf
insl
inc
les
cltd
xor
pop
stos
inc
adc
repnz
dec
scas
sub
test
iret
cmp
movb
add
sahf
or
pop
les
mov
int
stc
mov
jmp
add
add
adc
add
push
add
xchg
mov
add
xchg
add
sub
mov
add
mov
jmp
sbb
add
ret
inc
add
pop
cmpsl
xor
cmpsl
or
or
popa
insl
lock
addb
add
mov
jns
add
jp
mov
and
mov
xor
ja
mov
repz
fsts
push
test
add
lcall
push
add
add
hlt
add
jno
test
mov
and
mov
outsl
sub
arpl
rorl
add
add
adc
sbb
addb
mov
push
add
sub
in
pop
cs
daa
lret
push
sbb
inc
add
arpl
mov
lock
inc
add
jmp
add
adc
icebp
pusha
add
mov
add
stos
pop
dec
push
add
jmp
add
xor
add
add
or
add
mov
imul
lcall
sub
repz
in
inc
jno
add
movb
or
scas
stos
cmp
jecxz
push
add
jg
sbb
cld
adc
or
enter
pop
jnp
add
jne
add
add
add
popf
mov
sub
or
push
xchg
add
mov
pop
mov
add
jnp
jne
inc
add
add
add
add
enter
arpl
add
add
mov
add
add
sub
dec
adc
popa
sub
jno
add
sbb
arpl
or
dec
and
mov
ret
mov
or
cld
nop
add
add
jne
add
scas
je
jns
cmp
add
add
and
mov
push
add
inc
add
add
and
mov
add
push
add
seta
inc
add
mov
cmp
scas
mov
stos
clc
jg
addb
mov
xchg
sub
aaa
mov
pop
pusha
add
mov
add
repnz
decl
clc
mov
xchg
add
lret
add
std
pop
ret
push
add
jnp
xchg
add
add
add
add
jmp
ret
pushf
je
aaa
lods
sbb
pop
mov
add
lods
lcall
pushf
cmp
mov
fs
add
js
add
sbb
add
add
add
or
movsb
add
and
mov
mov
add
inc
add
jnp
add
mov
dec
dec
sub
movb
rolb
and
xchg
xchg
movb
nop
add
add
push
add
push
add
pop
lds
add
dec
add
insb
mov
inc
add
insb
insl
pushf
rolb
adc
es
mov
fnstenv
add
xchg
add
pop
sbb
cmpsl
sub
cmc
or
mov
imul
xchg
ljmp
sbb
xchg
pop
cmp
dec
sahf
fisubrl
jp
add
mov
pop
int3
dec
pop
and
pushf
jmp
xor
fwait
aad
add
movsb
add
add
mov
cs
int
fsubs
add
jp
aam
mov
xlat
in
leave
gs
add
inc
lds
jne
mov
push
add
add
decl
mov
jmp
enter
dec
xchg
add
andnps
and
sub
out
pop
jg
add
add
add
add
add
cmp
add
add
and
mov
cli
ret
mov
or
iret
adc
std
add
push
adc
inc
add
add
mov
xlat
mov
mov
pop
mov
subl
adc
out
sbb
std
sbb
add
add
dec
ljmp
adc
aaa
lret
add
add
rolb
popa
aad
lods
mov
sbb
stc
hlt
add
std
mov
pop
xchg
push
add
lods
rolb
and
scas
push
movb
add
jns
movsb
add
add
add
call
and
add
add
or
lcall
mov
add
mov
inc
add
add
add
repz
cld
fcompl
add
push
add
cltd
insb
push
add
inc
add
call
rolb
dec
push
add
adc
mov
dec
inc
add
add
push
pop
cmpsb
add
xchg
add
sbb
inc
jg
int
in
lret
sub
and
mov
xor
gs
add
jge
add
add
data16
in
sub
fildl
add
add
arpl
add
fldt
add
add
int
add
mov
add
push
add
out
loop
sub
add
add
add
cmp
iret
in
mov
movb
les
add
mov
dec
mov
mov
dec
not
aam
and
and
mov
add
mov
push
inc
add
cmp
push
xor
sbb
xchg
add
mov
insb
fisttpl
xchg
addb
testb
insb
int3
test
in
push
xor
and
mov
add
jns
add
fsubrl
je
jecxz
add
mov
add
add
add
add
nop
add
jle
fsubrp
aas
jb
insb
xchg
add
add
jg
push
add
add
insb
repz
lock
add
cmp
xor
aaa
adc
imul
gs
add
inc
add
in
add
mov
jle
dec
cmp
jbe
pop
mov
loope
pop
in
or
add
arpl
dec
sbb
add
xorl
adc
cmc
cmp
sub
add
adc
sbb
addr16
pop
bound
mov
add
ret
cmp
add
xchg
add
out
xchg
push
adc
push
cmp
add
add
addb
pop
pop
mov
mov
add
add
loop,pt
jae
mov
mov
repnz
add
xchg
push
out
in
cmpsl
cli
mov
jg,pn
add
add
push
in
add
xchg
add
dec
adc
pop
cmp
ja
int
jo
push
ret
stos
lcall
add
mov
fmulp
add
push
add
fisubl
add
int3
and
fidivrl
add
pushf
lcall
jl
push
add
jp
add
add
inc
add
pop
push
add
xor
roll
jecxz
add
shll
dec
adc
add
add
out
or
ret
popa
push
lret
push
add
jnp
ret
add
out
xchg
add
addb
rolb
dec
outsb
xchg
bound
mov
add
in
fdivp
pop
lods
fsubs
pop
pop
adc
mov
xchg
add
sahf
mov
jp
mov
xor
rolb
inc
dec
mov
dec
test
and
cmp
pop
cmp
add
add
xor
push
lock
push
mov
add
add
mov
push
add
and
mov
add
add
test
add
pop
sbb
mov
jnp
jp
mov
loopne
push
add
inc
add
add
mov
and
add
rcll
inc
add
outsl
xchg
add
push
das
cmp
add
je
sbb
fmull
mov
add
enter
enter
test
movsb
add
imul
out
add
add
cwtl
or
test
add
fcomp
jb
cmp
add
add
pop
pop
add
dec
inc
add
inc
add
sub
lea
mov
add
add
sti
lret
fwait
cmp
jo
add
jno
inc
add
adc
loop
pop
mov
aaa
xchg
add
scas
stos
lret
pop
and
sbb
add
add
pusha
add
add
and
add
jne
add
add
popf
cld
repz
mov
sbb
adc
outsl
shll
lods
mov
sbb
fisubs
mov
or
iret
mov
add
enter
lret
and
jae
lea
sti
xchg
xchg
sbb
add
add
mov
int3
mov
xlat
test
and
mov
add
mov
lahf
cmpsl
lods
xor
cmp
push
std
pushf
subl
decl
add
in
addb
ljmp
int3
xlat
inc
fstpt
mov
add
dec
mov
adc
mov
rolb
and
mov
decb
cmp
cltd
addr16
mov
das
pop
daa
fmuls
add
add
cmpsb
add
dec
dec
ljmp
add
ret
add
add
addb
rolb
ret
loopne
loop
je
std
and
mov
int3
adc
pop
lret
adc
mov
aam
lock
lcall
add
add
add
add
adc
add
add
add
push
add
mov
pop
insb
or
add
das
sbb
in
inc
and
add
test
sub
add
pop
inc
add
add
mov
sub
add
add
xchg
add
add
jnp
rolb
and
jnp
xor
sti
daa
pop
fmuls
xlat
dec
jns
xchg
js
mov
cld
shl
add
stos
imul
inc
enter
add
add
rolb
lock
in
lret
inc
mov
add
xor
incl
xor
jl
sub
out
mov
subl
ficomps
xor
mov
test
jae
stos
je
data16
inc
add
div
add
or
jb
sahf
icebp
movb
cmp
mov
push
add
add
add
movsb
add
rcll
out
movsl
jle
sar
and
testb
add
add
add
addb
flds
xor
and
xchg
mov
mov
mov
add
mov
clc
ja
add
je
fisubs
and
mov
sbb
rorl
mov
rolb
push
add
imul
xchg
cmp
cs
rcrl
bound
mov
push
add
sbb
push
push
add
add
stos
add
addb
add
adc
in
push
inc
xchg
std
lahf
pop
jmp
test
pop
mov
jle
add
rolb
test
add
in
insb
rolb
pop
push
repnz
add
pop
lds
add
lds
jns
adc
int3
or
add
xlat
pop
jl
add
adc
sbb
ljmp
or
mov
xchg
add
mov
rolb
rcrl
add
aam
leave
and
sub
add
dec
pop
adc
lods
dec
lods
add
testb
aas
int3
jb
push
add
cli
lods
or
add
add
in
xchg
add
aaa
mov
outsb
and
ret
add
add
push
repnz
aam
jo
ret
cmc
or
cmpsb
add
xor
lcall
xor
dec
pushf
add
add
add
add
mov
add
add
dec
sbb
add
add
add
pop
sahf
inc
mov
inc
or
add
scas
cmc
rorl
repz
add
leave
sbb
ss
add
or
push
xchg
xchg
add
add
mov
ljmp
jns
pop
icebp
pop
jno
test
repnz
push
add
mov
xor
jp
mov
push
add
add
aam
icebp
pop
sbb
out
popa
repz
mov
xor
mov
addb
add
rolb
add
xchg
out
sub
and
jp
xor
add
adc
add
add
add
hlt
add
add
stos
arpl
add
fldenv
pop
das
fisubs
shrl
pop
loope
add
add
dec
inc
add
into
mov
cmp
sub
add
sahf
and
outsl
scas
pop
push
xor
inc
add
testb
xchg
movsb
add
mov
movb
pop
into
nop
add
add
and
out
test
in
scas
pop
inc
dec
push
add
add
lds
daa
adc
add
add
jge
aas
mov
std
outsl
mov
mov
push
outsb
rolb
push
add
aas
jl
dec
aad
xchg
insb
add
cmpsb
add
jg
in
push
xchg
add
add
dec
push
add
add
test
rcll
sbb
add
mov
mov
add
jg
mov
fistps
add
addl
rcrl
lods
data16
mov
inc
add
sbb
int
or
mov
mov
mov
test
lea
xor
add
cltd
lret
ljmp
adc
add
mov
inc
add
add
add
mov
pop
in
movb
add
icebp
mov
xchg
addr16
push
add
stc
iret
sbb
add
pushl
inc
rolb
cs
and
in
mov
mov
scas
jne
mov
add
cmp
add
mov
push
testb
add
mov
insb
stos
mov
inc
add
add
xchg
stos
adc
cltd
aas
push
add
add
push
add
add
add
add
add
mov
sbb
movsl
idivl
push
std
jmp
out
pop
xlat
mov
pop
lea
sbb
mov
ret
jecxz
add
add
mov
mov
add
jp
pusha
add
inc
shl
xchg
jb
xorps
add
and
inc
lods
out
out
insl
les
in
xor
xchg
add
mov
add
mov
adc
add
rolb
add
lahf
imul
cmp
pop
dec
add
jmp
enter
std
add
mov
repnz
add
adc
aam
pushf
mov
or
mov
cmp
popa
insb
jecxz
daa
pop
sub
mov
add
xchg
mov
addb
addb
add
mov
movsl
cmpsb
add
add
insb
mov
ds
ja
mov
test
call
and
cmp
gs
dec
push
sti
cmp
jge
shl
push
xchg
add
jge
push
add
add
add
movb
nop
add
xchg
add
mov
or
sbb
add
add
lods
jnp
jo
mov
clc
stos
and
mov
add
add
jnp
xchg
add
test
xor
cli
add
xlat
cld
imul
xor
cmpsl
add
ljmp
loopne
cwtl
mov
jle
or
add
add
cltd
adc
out
mov
add
jmp
jnp
sbb
add
add
roll
jb
repz
dec
and
out
inc
or
push
add
or
add
cltd
addb
hlt
add
xor
loopne
rcll
add
add
pop
cmc
sbb
fcoml
add
add
in
in
daa
iret
addb
add
mov
pusha
add
add
add
dec
pop
xchg
mov
mov
test
fsubl
lock
add
add
and
mov
add
add
pop
mov
lret
adc
insl
mov
cmpl
mov
add
sbb
aaa
negl
push
loop
inc
out
add
add
add
add
orl
add
out
or
lret
add
icebp
stos
rcll
popa
cld
ljmp
add
xchg
add
fdivs
add
add
mov
add
add
add
add
jno
ljmp
sub
cmp
popa
jne
add
sub
dec
pminsw
and
mov
cmp
mov
add
push
inc
add
popa
in
das
mov
insb
fnstsw
fnstsw
add
sbb
and
test
add
sub
sarl
jbe
popa
scas
sub
add
mov
addr16
push
add
shll
inc
add
add
js
mov
add
add
and
push
into
scas
add
mov
mov
jp
add
and
add
mov
sub
and
mov
pop
sub
add
mov
jo
sbb
jmp
cmp
je
clc
add
sub
sbb
shll
insb
and
inc
aad
add
jo
lret
clc
mov
add
scas
sub
add
mov
lea
movb
cmp
mov
push
dec
call
add
pop
or
mov
inc
sub
add
popf
aam
adc
inc
in
or
sub
mov
push
add
mov
subl
pop
dec
mov
xchg
jecxz
add
cmp
fcomip
add
aam
cmp
mov
mov
add
mov
dec
add
mov
add
add
and
movsb
add
sub
cli
pop
add
mov
add
aad
sbb
add
add
or
push
add
inc
add
loopne
jmp
add
add
mov
sbb
sub
add
or
mov
add
cltd
gs
int
xchg
add
icebp
push
in
mov
in
js
add
add
sub
add
add
lods
and
mov
add
ja
ljmp
sahf
jbe
sbb
add
jbe
inc
add
add
fimull
mov
fnsave
lahf
inc
add
add
js
xchg
add
add
pop
popa
dec
adc
aad
mov
dec
das
cli
fxch
imul
int3
jge
inc
jg
add
testb
aad
jno
fwait
leave
les
mov
mov
push
jo
mov
sarl
push
add
adc
or
bound
mov
movsl
xor
sti
cli
dec
rcll
std
pop
and
mov
jge
jle
das
scas
in
push
or
xchg
add
mov
push
add
add
icebp
and
mov
mov
repz
or
mov
jne
and
mov
inc
sub
mov
lret
sbb
mov
in
xchg
add
bound
mov
add
mov
add
fwait
mov
sbb
jp
add
or
add
xchg
cmpsb
add
pop
cld
repz
insb
xor
int3
jbe
call
imul
add
add
dec
jmp
nop
add
add
push
pusha
add
jb
cmpsl
and
mov
mov
inc
add
int3
and
mov
add
pop
xor
ljmp
mov
int3
fildll
cltd
sbb
add
insb
clc
movsb
add
xchg
sub
mov
add
adc
push
add
add
mov
xchg
andl
push
add
and
xchg
cmc
mov
add
mov
daa
popl
lret
jle
sub
btc
sbb
testb
andl
add
insb
fimuls
add
movb
mov
fstpl
add
popf
mov
fcomps
int3
jge
sbb
mov
aam
mov
push
cmp
add
lcall
repnz
jnp
add
add
add
ret
mov
ds
rolb
cwtl
or
cld
xor
mov
and
aad
add
bound
mov
mov
jno
sub
imul
lock
adc
jb
loop
sub
xor
int
jl
outsb
lret
lods
hlt
add
and
dec
push
jae
add
cltd
jge
sbb
jns
movsb
add
repnz
add
inc
add
fistpl
out
das
insb
popf
mov
pop
sbb
and
clc
out
pop
xor
add
and
sub
add
push
add
fcmovnb
repnz
sahf
ja
jns
cmp
add
scas
xchg
daa
mov
lds
loop
popa
sub
sbb
lock
mov
mov
or
mov
lret
in
cmpsb
add
mov
add
add
pop
mov
add
imull
inc
add
xor
dec
push
pop
fisubl
sub
add
dec
jb
sbb
xchg
xchg
js
add
add
imul
rcrl
stos
movsl
orl
add
addr16
data16
mov
imul
mov
mov
add
aad
add
les
rolb
rolb
sub
mov
sub
xlat
movb
testb
repnz
cmp
add
push
add
in
stos
push
add
rol
add
pop
out
add
push
jnp
add
lds
das
add
add
inc
add
ret
jl
data16
add
fwait
addb
jb
adc
cmpsb
add
push
iret
add
mov
nop
cld
nop
jmp
add
inc
add
add
mov
nop
jmp
popf
faddl
test
dec
cmp
nop
cld
nop
jmp
add
mov
pop
add
add
nop
es
sub
cmp
nop
es
sbb
mov
add
stc
nop
es
outsl
add
jnp
push
mov
xchg
ret
sub
add
jecxz
add
push
mov
xchg
ret
add
adc
push
cmp
es
inc
js
add
add
cmc
xor
xor
loop
into
and
stc
nop
es
add
and
add
add
fwait
call
nop
cld
nop
jmp
faddl
mov
loop
nop
cld
nop
jmp
in
add
js
add
scas
push
stc
nop
es
add
add
push
add
sub
push
mov
xchg
ret
add
js
adc
nop
es
add
jecxz
cmp
pop
sub
push
mov
xchg
ret
sub
daa
fiadds
add
xchg
cltd
mov
inc
add
xchg
imul
cmp
cld
nop
jmp
add
or
in
add
arpl
add
addr16
cld
add
stc
nop
es
add
add
cmpsl
add
aaa
jg
jmp
in
inc
add
sbb
add
inc
add
add
jno
xor
push
add
loop
push
mov
xchg
ret
sti
incb
lret
nop
cld
nop
jmp
add
popf
add
popf
inc
or
lea
push
mov
xchg
ret
add
add
sub
jb
adc
cmp
xor
add
jae
nop
es
push
add
or
nop
cld
nop
jmp
jbe
ja
pop
stc
nop
es
int3
add
insb
psllq
mov
inc
add
add
jo
dec
add
stc
nop
es
enter
jle
pop
add
nop
cld
nop
jmp
add
pop
adc
mov
stc
nop
es
cmp
inc
js
push
pushf
push
mov
add
in
add
scas
out
out
add
mov
filds
add
nop
cld
nop
jmp
add
out
push
push
mov
xchg
ret
movswl
or
jle
les
in
pop
nop
cld
nop
jmp
fiadds
pop
push
add
push
mov
stc
nop
es
jle
pop
add
lods
loop
xchg
fisttps
es
daa
push
push
cmpw
nop
cld
nop
jmp
pop
pop
add
ljmp
jb
add
jnp
inc
sub
nop
es
add
sub
faddl
sub
int3
inc
add
add
add
stc
nop
es
add
cmp
push
mov
xchg
ret
and
and
add
mov
stc
nop
es
add
fmull
popf
push
leave
mov
stc
nop
es
addl
adc
sbb
xchg
add
stc
nop
es
enter
in
popf
jge
jg
stc
nop
es
add
add
loopne
stc
nop
es
add
sbb
lods
mov
mov
push
mov
xchg
ret
add
pop
add
movsb
add
mov
imul
adcb
add
xor
add
testl
nop
cld
nop
jmp
sbb
add
and
nop
es
inc
pop
add
mov
sub
add
nop
cld
nop
jmp
sbb
add
or
lcall
nop
cld
nop
jmp
mov
arpl
stc
nop
es
add
add
mov
inc
popf
pop
push
stc
nop
es
sbb
add
add
jne
stc
nop
es
or
add
lods
and
imul
es
and
jge
stc
nop
es
cmpsl
pop
add
inc
sbb
movsb
push
mov
xchg
ret
add
adc
add
imul
stc
nop
es
add
and
pusha
stc
nop
es
test
daa
add
add
icebp
push
jno
push
push
mov
xchg
ret
add
pop
addl
and
push
add
pushl
push
mov
xchg
ret
faddl
subb
add
sar
nop
es
sbb
adc
pop
push
stc
nop
es
add
js
add
pushl
jmp
add
stc
nop
es
add
xor
add
decl
test
add
add
nop
es
pop
add
lcall
sbb
add
test
mov
xor
stc
nop
es
inc
sbb
jbe
add
adc
mov
nop
cld
nop
jmp
add
cmpsl
into
jmp
stc
nop
es
add
cmpsl
adc
nop
es
fsubr
outsl
adc
fidivrl
nop
cld
nop
jmp
add
mov
add
mov
outsl
popa
fs
nop
es
icebp
add
sub
cmp
add
mov
adc
add
cld
nop
jmp
je
enter
int3
pop
and
mov
stc
nop
es
add
sbbb
dec
push
stc
nop
es
popa
add
add
arpl
xchg
stc
nop
es
aaa
in
add
add
or
jmp
mov
stc
nop
es
jecxz
int
stc
nop
es
and
inc
add
inc
and
push
mov
xchg
ret
add
adc
add
add
stc
nop
es
add
add
icebp
nop
add
mov
xchg
ret
add
add
ja
cmp
add
stc
nop
es
adc
incl
and
push
add
call
stc
nop
es
aaa
adc
lret
lea
stc
nop
es
mov
add
sub
jb
add
mov
mov
sub
dec
add
nop
es
lahf
add
add
or
es
add
and
data16
push
mov
xchg
ret
add
mov
inc
or
add
nop
es
cmpsl
or
movsl
stc
nop
es
lods
insb
adc
mov
or
es
sbb
add
bound
mov
jg
sar
es
lahf
popa
or
mov
ret
add
add
add
ja
add
add
mov
xchg
ret
add
outsl
add
stc
nop
es
xor
mov
cltd
xor
stc
nop
es
add
mov
nop
jmp
add
add
pop
add
add
nop
es
add
ja
xor
jne
stc
nop
es
sub
cltd
enter
xchg
lret
inc
add
add
aaa
je
decb
add
nop
es
xor
dec
or
cld
nop
jmp
add
cmp
mov
dec
stos
push
mov
xchg
ret
mov
lahf
add
movswl
stc
nop
es
push
mov
es
insb
or
add
popa
ja
pop
nop
cld
nop
jmp
popf
mov
adc
mov
stc
nop
es
add
add
mov
xchg
ret
add
cltd
jbe
lahf
add
jne
stc
nop
es
pop
add
mov
push
mov
xchg
ret
daa
mov
jmp
pop
cmp
mov
xchg
ret
cltd
add
add
and
mov
mov
add
stc
nop
es
in
add
adc
and
stc
nop
es
add
add
add
cmp
nop
cld
nop
jmp
add
add
orb
mov
push
mov
xchg
ret
incb
and
mov
add
add
nop
es
pop
adc
push
iret
inc
add
add
je
mov
jbe
and
or
add
nop
es
enter
fwait
add
stc
nop
es
xor
and
pop
push
push
mov
xchg
ret
icebp
add
ja
add
outsl
arpl
add
nop
es
add
add
add
stc
nop
es
jecxz
add
mov
nop
es
xor
add
push
js
subl
lea
add
in
popa
add
push
stc
nop
es
inc
je
jbe
add
add
add
cld
push
mov
xchg
ret
add
xor
xor
sbb
add
nop
es
xor
mov
stc
nop
es
js
pop
add
cltd
sbbb
stc
nop
es
add
int3
lods
add
adc
loop
jg
scas
enter
jb
cltd
in
add
addb
nop
es
daa
add
ljmp
pop
mov
es
add
ja
add
jmp
mov
xchg
ret
js
fimuls
add
jmp
add
sbb
add
jle
add
add
push
mov
xchg
ret
mov
xchg
movsl
aaa
adc
je
nop
cld
nop
jmp
mov
add
clc
mov
stc
nop
es
push
add
add
jb
incl
mov
cmp
add
pop
stc
nop
es
add
pop
add
add
cmp
jae
cld
nop
jmp
xor
nop
add
movb
nop
es
add
add
stc
nop
es
popf
test
dec
push
stc
nop
es
andb
add
lea
nop
cld
nop
jmp
sbbb
pop
add
stc
nop
es
add
inc
lods
add
xchg
cmp
nop
jmp
add
add
xor
stc
nop
es
add
jne
stc
nop
es
add
cmp
pop
jae
nop
es
daa
add
std
movzwl
nop
cld
nop
jmp
add
inc
or
xor
push
stc
nop
es
or
add
icebp
add
add
in
mov
dec
add
add
add
add
rolb
movzwl
stc
nop
es
add
add
mov
push
mov
xchg
ret
test
pop
incl
imul
xchg
ret
mov
add
jg
pushl
stc
nop
es
and
and
add
add
stc
nop
es
add
or
or
nop
cld
nop
jmp
icebp
add
pop
int3
add
rorl
stc
nop
es
enter
add
or
test
add
add
and
add
add
xor
add
bound
mov
popa
push
mov
xchg
ret
lods
add
movzwl
stc
nop
es
xor
xchg
add
add
add
nop
es
popf
pop
mov
nop
es
add
add
sahf
jne
stc
nop
es
mov
push
mov
xchg
ret
add
add
or
mov
push
mov
add
ret
imul
add
pusha
add
add
call
stc
nop
es
sti
add
fisubrs
sub
add
add
inc
add
jbe
setae
es
add
add
cltd
icebp
icebp
in
add
stc
nop
es
jbe
fisubrs
les
dec
call
stc
nop
es
add
adc
add
jmp
add
add
int3
add
mov
mov
stc
nop
es
add
add
insb
add
dec
cmp
nop
es
lret
xor
sbb
roll
xchg
ret
add
popf
mov
test
stc
nop
es
add
js
add
jbe
lahf
mov
stc
nop
es
add
add
pop
stc
nop
es
or
popf
add
inc
cmpsl
outsl
add
nop
cld
nop
jmp
add
popa
jne
add
pop
stc
nop
es
popf
add
add
cmp
add
stc
nop
es
add
or
mov
stc
nop
es
outsl
enter
add
in
sbb
es
icebp
cmp
xorb
dec
ss
stc
nop
es
add
jle
mov
adc
nop
es
inc
or
faddl
or
das
roll
xchg
ret
jbe
jbe
je
add
shr
stc
nop
es
ja
ja
mov
xchg
mov
mov
jmp
add
add
add
adc
xor
stc
nop
es
sldt
pop
dec
nop
cld
nop
jmp
or
incb
xor
push
stc
nop
es
xor
add
stc
nop
es
add
add
add
incl
nop
cld
nop
jmp
mov
add
out
jno
add
jo
ret
ljmp
es
add
add
call
stc
nop
es
ja
mov
stc
nop
es
cltd
mov
sub
xor
stc
nop
es
inc
lods
xor
pop
stc
nop
es
incl
sub
add
mov
rcrl
stc
nop
es
add
add
adc
and
imul
cld
nop
jmp
xor
and
decl
push
mov
xchg
ret
add
add
add
stc
nop
es
subl
xor
push
add
test
std
call
cli
call
mov
nop
cld
nop
jmp
add
inc
fcompl
jecxz
add
add
nop
es
js
insb
add
sbb
stc
nop
es
add
int3
add
push
mov
xchg
ret
add
add
scas
cmp
nop
cld
nop
jmp
add
add
add
jb
add
popa
add
js
nop
cld
nop
jmp
add
cltd
outsl
daa
add
xor
add
stc
nop
es
xor
nop
cld
nop
jmp
je
js
add
add
nop
es
outsl
add
xor
nop
cld
nop
jmp
cltd
add
sub
add
lods
stos
sub
stc
nop
es
xor
mov
pop
mov
nop
cld
nop
jmp
lods
cmp
movsb
push
mov
xchg
ret
incb
add
adc
sbb
jb
add
add
add
xor
sub
stc
nop
es
mov
add
rolb
cmpsl
and
mov
add
jne
stc
nop
es
ja
sbb
mov
stc
nop
es
push
add
jns
jge
stc
nop
es
add
add
xor
add
stc
nop
es
pop
mov
enter
push
mov
xchg
ret
add
pop
js
and
in
and
push
mov
xchg
ret
jbe
jle
add
add
roll
xchg
ret
add
add
xorb
incl
and
sti
in
add
push
mov
xchg
ret
add
popa
add
movb
jno
mov
nop
cld
nop
jmp
push
add
xor
shr
mov
push
mov
xchg
ret
xor
add
in
out
movb
add
mov
stc
nop
es
add
inc
add
lret
nop
cld
nop
jmp
add
daa
add
add
or
jne
stc
nop
es
daa
xor
add
xor
nop
es
mov
lahf
add
add
stc
nop
es
add
sbb
mov
popa
pop
cwtl
mov
stc
nop
es
xor
push
mov
xchg
ret
xor
add
mov
stc
nop
es
add
add
add
sub
test
nop
es
add
enter
jmp
mov
xchg
ret
adc
add
mov
stc
nop
es
add
sbb
add
popa
add
mov
xchg
ret
cmp
add
mov
jne
stc
nop
es
add
mov
add
xor
stc
nop
es
mov
add
pop
jne
stc
nop
es
add
add
xor
push
mov
xchg
ret
adc
lahf
add
outsb
imul
nop
cld
nop
jmp
add
sbbb
add
arpl
mov
xchg
ret
add
sbb
aad
add
nop
es
js
in
lods
add
cmpsl
aam
cltd
jmp
stc
nop
es
adc
add
mov
jno
call
stc
nop
es
sbb
pop
mov
mov
xchg
ret
je
cmpsl
addl
jmp
es
sti
incl
pushf
add
stc
nop
es
add
ja
adc
inc
movb
cmp
ret
cmp
sbbb
es
add
daa
mov
aaa
sbb
es
add
xor
mov
stc
nop
es
add
add
es
add
inc
popa
lret
and
mov
jb
add
add
mov
inc
flds
xchg
ret
add
add
pop
test
nop
cld
nop
jmp
mov
mov
add
mov
stc
nop
es
adc
mov
add
out
call
nop
cld
nop
jmp
fiadds
add
sub
mov
mov
nop
es
add
add
push
stc
nop
es
fiadds
and
sahf
test
nop
cld
nop
jmp
add
jbe
inc
mov
xlat
bound
mov
mov
push
mov
xchg
ret
icebp
lahf
sti
mov
add
adc
sti
jecxz
add
add
div
stc
nop
es
add
add
fimull
aaa
dec
and
push
mov
xchg
ret
push
fiadds
cltd
add
or
mov
xchg
ret
add
add
add
mov
inc
add
pop
add
xor
mov
in
jnp
mov
nop
cld
nop
jmp
lahf
push
jae
push
mov
pop
add
movsl
scas
bound
xor
add
movsb
push
mov
xchg
ret
pop
popa
add
add
in
add
das
mul
iret
add
add
leave
add
repnz
scas
xor
push
mov
xchg
ret
add
add
or
add
add
mov
stc
nop
es
push
add
icebp
stc
nop
es
add
int3
add
add
stc
nop
es
pop
addb
fiadds
add
mov
xchg
ret
add
add
mov
stc
nop
es
add
add
add
push
inc
add
nop
jmp
pop
and
add
mov
and
nop
es
adc
add
add
inc
push
mov
xchg
ret
addb
inc
incl
add
stc
nop
es
add
adc
popf
add
nop
add
add
es
jle
inc
in
xor
and
mov
add
stc
nop
es
add
aaa
add
add
popa
sub
js
nop
es
mov
push
stc
nop
es
add
add
and
mov
jne
stc
nop
es
adc
popa
add
add
add
nop
es
add
add
or
lcall
jmp
ja
xor
test
push
add
movzwl
stc
nop
es
addb
add
xor
add
stc
nop
es
push
stc
push
stc
nop
es
cmpsl
fiaddl
sbb
add
pop
mov
push
mov
xchg
ret
lods
popf
adc
popf
sub
nop
cld
nop
jmp
or
add
fidivl
adc
dec
decl
stc
nop
es
add
add
mov
mov
nop
jmp
add
jae
cltd
xor
aaa
jns
stc
nop
es
xor
add
add
mov
xchg
ret
and
sbb
nop
es
inc
in
inc
add
add
add
jmp
nop
cld
nop
jmp
add
jae
add
xor
add
nop
cld
nop
jmp
add
pop
adc
fmuls
es
and
add
popa
jle
add
nop
cld
nop
jmp
sbb
add
insb
sbb
bound
mov
push
mov
testl
int
lods
cltd
in
add
mov
nop
jmp
add
add
add
add
stc
nop
es
add
stc
nop
es
icebp
add
or
inc
push
mov
xchg
ret
sbb
pop
add
in
mov
nop
cld
nop
jmp
mov
add
xchg
in
pop
push
mov
xchg
ret
add
add
stc
nop
es
add
add
insb
pop
cmp
jb
add
outsl
add
mov
in
push
mov
xchg
ret
add
add
pop
lods
mov
stc
nop
es
add
mov
push
mov
xchg
ret
int3
ja
pop
jle
push
stc
nop
es
and
add
add
aaa
popf
js
stc
nop
es
lods
and
js
mov
stc
nop
es
mov
sysexit
adc
cmpsl
out
push
stc
nop
es
or
in
xor
imul
es
adc
mov
pusha
stc
nop
es
mov
add
mov
es
add
add
data16
rclb
iret
inc
add
and
mov
add
inc
loopne
nop
es
add
add
outsl
test
inc
add
es
add
add
out
mov
stc
nop
es
add
pop
mov
stc
nop
es
mov
inc
mov
nop
es
add
add
add
mov
push
stc
nop
es
cltd
add
xor
nop
cld
nop
jmp
or
sbb
xor
add
es
cmp
lahf
add
pop
and
mov
push
mov
xchg
ret
incl
add
push
imul
jb
push
icebp
fwait
push
mov
add
add
adc
cli
add
dec
cmp
add
sbb
xor
add
stc
nop
es
add
mov
jb
popa
popf
cltd
add
insb
mov
add
nop
es
inc
add
ja
or
es
add
or
cli
add
stc
nop
es
sbb
mov
add
stc
nop
es
sbb
sub
mov
push
stc
nop
es
outsl
add
jbe
add
push
mov
xchg
ret
add
adc
add
icebp
nop
cld
nop
jmp
add
add
add
inc
cmpsl
insl
pusha
push
mov
xchg
ret
add
push
movsl
or
inc
nop
cld
nop
jmp
pop
xor
add
push
mov
push
mov
xchg
ret
xor
icebp
call
add
adc
add
mov
add
dec
add
mov
xchg
ret
sub
icebp
aaa
jo
push
add
add
stc
nop
es
add
adc
mov
xchg
ret
add
sub
add
xchg
stc
nop
es
jbe
add
add
std
add
stc
nop
es
cltd
fsubl
add
dec
test
nop
cld
nop
jmp
sbb
pop
add
stc
nop
es
push
add
stc
nop
es
add
sbb
sub
dec
nop
cld
nop
jmp
add
add
sbb
push
nop
cld
nop
jmp
jae
adc
cmpsl
sub
or
add
pop
stc
nop
es
inc
cmp
add
add
add
pusha
add
add
nop
cld
nop
jmp
mov
add
lds
add
nop
cld
nop
jmp
add
or
fcompl
nop
es
popf
pop
pushl
sub
stc
nop
es
add
popf
fmull
sub
jb
add
add
int3
add
cmp
notl
out
decl
mov
mov
add
stc
nop
es
add
fisubs
mov
stc
nop
es
add
add
pop
add
test
call
or
add
sti
adc
mov
xchg
in
add
mov
in
stos
pop
nop
cld
nop
jmp
mov
incb
test
repnz
stc
nop
es
pop
pop
add
pop
sub
push
mov
xchg
ret
add
lods
add
add
mov
rolb
mov
push
fs
cld
nop
jmp
fiadds
int3
add
add
add
mov
xchg
ret
add
cltd
popf
movb
add
add
jg
stc
nop
es
add
add
cmp
push
add
add
stc
nop
es
lods
add
push
mov
stc
nop
es
and
add
lret
js
mov
stc
nop
es
and
add
inc
add
adc
cld
nop
jmp
xor
lahf
lahf
dec
shl
stc
nop
es
faddl
lret
jle
add
cld
nop
jmp
add
add
push
add
cmp
mov
xchg
ret
add
add
mov
cmp
inc
add
incl
add
xor
push
mov
xchg
ret
enter
add
lods
movsl
movb
mov
push
mov
xchg
ret
add
insb
popf
add
add
call
lods
xlat
inc
add
add
cltd
cmpsl
andl
add
nop
cld
nop
jmp
add
sti
fiaddl
js
add
pop
push
stc
nop
es
cltd
popa
sbb
fisubs
cld
nop
jmp
enter
mov
movb
fisttps
nop
jmp
incb
add
test
sbb
add
cmpl
es
add
mov
nop
es
fiaddl
push
add
add
sti
jb
lock
leave
nop
cld
nop
jmp
mov
enter
rorl
es
jecxz
xor
xlat
inc
scas
push
push
mov
xchg
ret
add
adc
add
cmp
stc
nop
es
insb
fiadds
or
nop
es
add
add
orb
or
mov
jmp
stc
nop
es
push
mov
inc
add
stc
nop
es
add
adc
xor
sbb
nop
es
add
add
sti
daa
addb
add
stc
nop
es
js
mov
add
stos
xchg
push
mov
xchg
ret
addb
add
stc
nop
es
or
add
aaa
enter
es
inc
add
daa
mov
aam
inc
out
mov
stc
nop
es
add
mov
and
mov
push
mov
lret
movb
add
pop
add
aaa
add
xor
stc
nop
es
add
and
stc
nop
es
pop
add
add
xchg
cmpl
xorb
decl
sbbl
jmp
cmp
ret
mov
xor
xchg
add
cld
nop
jmp
add
enter
mov
movsb
nop
cld
nop
jmp
pop
push
xor
sub
cld
nop
jmp
lret
js
and
cltd
add
lods
sbb
jb
add
add
int3
popa
and
in
inc
add
fdivr
aaa
outsl
add
push
mov
xchg
ret
mov
orb
cld
nop
jmp
ficompl
lret
add
add
cld
nop
jmp
fiaddl
sbb
lods
add
mov
stc
nop
es
add
lods
call
nop
cld
nop
jmp
pop
add
js
dec
add
stc
nop
es
inc
add
sbb
nop
es
add
and
icebp
pop
add
sub
add
lahf
sti
mov
add
ljmp
cld
nop
jmp
add
add
sbb
mov
nop
es
int3
add
rep
stc
nop
es
pop
popa
and
push
jae
push
push
mov
xchg
ret
inc
adc
and
jle
stc
nop
es
add
add
mov
cmpsl
decl
mov
inc
add
add
add
mov
cld
nop
jmp
add
add
stos
popl
stc
nop
es
add
add
add
and
add
out
add
nop
es
add
add
cmp
stc
nop
es
and
add
sub
sub
inc
add
add
inc
outsl
mov
stc
nop
es
daa
and
test
nop
es
add
outsl
mov
stc
nop
es
jle
add
decl
mov
stc
nop
es
add
lea
stc
nop
es
mov
add
jne
nop
cld
nop
jmp
mov
add
nop
es
mov
add
pop
scas
dec
stc
nop
es
in
cmp
js
je
int3
or
mov
xchg
ret
add
mov
mov
es
add
jle
add
rep
nop
cld
nop
jmp
add
xor
pop
pop
nop
cld
nop
jmp
ja
sub
nop
cld
nop
jmp
add
inc
jbe
add
cmpsl
jg
push
mov
xchg
ret
and
add
sbb
add
dec
add
nop
es
add
add
add
push
cmp
nop
es
inc
add
and
and
nop
es
insb
fidivs
add
add
jmp
nop
cld
nop
jmp
int3
je
add
add
add
add
nop
jmp
add
mov
je
add
add
adc
nop
es
add
inc
sti
and
std
push
push
mov
xchg
ret
add
popf
add
gs
lods
cli
stc
nop
es
in
sbb
add
jb
fcoml
mov
jp
jne
stc
nop
es
je
cltd
popf
add
pushf
movzwl
stc
nop
es
ja
add
nop
jmp
mov
pop
inc
sub
and
stc
nop
es
add
lods
xor
movb
mov
xchg
ret
add
addb
add
add
stc
nop
es
pop
adc
jne
stc
nop
es
add
add
nop
es
add
je
adc
loope
add
mov
xchg
ret
add
add
inc
add
add
stc
nop
es
add
add
xor
nop
es
add
js
add
jp
stc
nop
es
int3
add
adcl
add
jno
push
stc
nop
es
add
add
sbb
add
test
nop
es
add
add
add
nop
cld
nop
jmp
add
add
fiadds
pop
adc
add
aam
cltd
push
stc
nop
es
test
mov
add
stc
nop
es
jecxz
inc
lahf
je
data16
cmpb
nop
cld
nop
jmp
icebp
add
nop
es
adc
pop
jae
add
dec
push
stc
nop
es
add
pop
fsubrp
in
stc
nop
es
icebp
add
xchg
data16
insb
inc
jb
stc
nop
es
inc
add
lahf
inc
add
mov
ljmp
andb
add
mov
xchg
ret
add
add
sub
stc
nop
es
add
add
cmpsb
add
push
mov
xchg
ret
add
adc
cmpsb
add
dec
and
push
mov
xchg
ret
sti
or
pop
test
jbe
lcall
jb
add
mov
add
add
stc
nop
es
or
add
mov
or
stc
nop
es
lahf
add
add
stc
nop
es
mov
and
fsts
mov
xchg
ret
enter
incl
in
fisttps
mov
adc
nop
es
add
add
out
pop
nop
cld
nop
jmp
add
test
add
add
adc
push
push
mov
xchg
ret
adc
add
jbe
daa
gs
clc
stc
nop
es
faddl
cmp
add
add
cld
nop
jmp
js
pop
add
in
pop
add
call
clc
incl
xor
movb
nop
es
mov
cmp
cmp
add
nop
cld
nop
jmp
popf
add
cltd
sti
jae
movb
add
mov
clc
jmp
add
ja
add
push
inc
push
mov
xchg
ret
add
adc
enter
stc
nop
es
cltd
add
add
outsl
add
addb
push
push
mov
xchg
ret
and
add
int3
mov
nop
cld
nop
jmp
lods
add
xor
nop
cld
nop
jmp
add
or
add
je
stc
nop
es
add
add
mov
nop
cld
nop
jmp
add
add
xorl
pop
pop
stc
nop
es
sub
inc
mov
cmp
nop
es
mov
add
xor
mov
xchg
ret
add
add
mov
add
push
mov
xchg
ret
insb
insb
add
faddl
addr16
and
pop
push
mov
xchg
ret
sub
add
add
mov
sar
nop
es
js
pop
add
add
aam
or
cld
nop
jmp
mov
add
adc
ljmp
addb
nop
cld
nop
jmp
sbb
cltd
add
aaa
cltd
mov
stc
nop
es
add
outsb
push
nop
cld
nop
jmp
add
mov
popf
icebp
jae
mov
push
mov
xchg
ret
cmp
cltd
add
push
mov
xchg
ret
add
sbb
pop
mov
stc
nop
es
add
add
mov
ror
nop
cld
nop
jmp
add
add
add
and
stc
nop
es
add
pop
addl
flds
es
mov
popf
add
add
mov
je
stc
nop
es
push
mov
add
adc
add
stc
nop
es
in
insb
and
cmpsl
pop
subl
stc
nop
es
mov
add
add
out
stc
nop
es
daa
sbb
and
addb
jne
stc
nop
es
add
fdivrs
stc
nop
es
and
jle
test
mov
repz
or
xchg
movsb
add
jge
push
addb
add
mov
nop
cld
nop
jmp
incl
add
push
stc
nop
es
add
sbb
insb
add
inc
add
stc
nop
es
lahf
add
or
faddl
es
add
pop
mov
je
jne
stc
nop
es
adc
xor
mov
stc
nop
es
add
ja
fdivl
jbe
mov
loopne
add
je
js
nop
es
lahf
add
add
nop
cld
nop
jmp
test
xor
adc
es
insb
add
andb
and
mov
xchg
ret
add
add
add
stos
mov
stc
nop
es
mov
sub
call
stc
nop
es
add
add
pop
push
push
mov
xchg
ret
sbb
adc
mov
stc
nop
es
add
xchg
stos
test
nop
cld
nop
jmp
add
add
push
es
cmpsl
cmp
add
adc
dec
mov
stc
nop
es
add
ja
pop
adc
mov
xchg
ret
sub
add
add
push
mov
xchg
ret
sbb
add
mov
xor
fs
nop
es
add
fdivrp
ljmp
inc
add
add
enter
rclb
roll
xchg
ret
add
add
stos
stc
nop
es
aaa
jecxz
adc
lods
mov
and
stc
nop
es
add
jecxz
mov
stc
nop
es
outsl
outsl
add
stc
nop
es
mov
add
add
push
mov
add
add
cmc
push
inc
add
add
mov
push
mov
xchg
ret
and
ja
add
sbb
nop
cld
nop
jmp
add
add
add
add
cmp
stc
nop
es
lahf
int3
mov
jmp
stc
nop
es
add
add
sub
jmp
add
adc
add
loop
push
mov
xchg
ret
add
add
add
cld
nop
jmp
add
cltd
cltd
add
add
mov
jg
nop
cld
nop
jmp
add
add
cmpsl
mov
add
nop
cld
nop
jmp
jae
subl
add
stc
nop
es
add
mov
test
out
stc
nop
es
outsl
add
mov
stc
nop
es
or
pop
cmpsl
add
jns
call
jmp
outsl
add
push
stc
nop
es
push
add
add
fucomp
fldpi
call
loopne
incl
incl
sbb
xor
nop
cld
nop
jmp
push
add
mov
rolb
add
nop
cld
nop
jmp
add
add
adc
jbe
push
push
mov
xchg
ret
jae
add
outsl
js
sub
nop
es
add
add
js
add
mov
cld
nop
jmp
int3
add
add
add
scas
popa
push
mov
xchg
ret
add
popf
ltr
mov
nop
es
insb
mov
cmp
inc
mov
nop
cld
nop
jmp
jbe
icebp
push
mov
add
xor
test
es
mov
adc
es
stc
nop
es
icebp
xchg
cs
nop
cld
nop
jmp
add
pop
add
add
xor
push
mov
xchg
ret
jle
jbe
add
stc
nop
es
add
add
ret
imul
ljmp
add
add
insb
push
push
mov
xchg
ret
add
add
insb
adc
nop
cld
nop
jmp
pop
xor
mov
mov
lods
stc
nop
es
enter
add
add
or
push
mov
xchg
ret
add
jecxz
add
push
stc
nop
es
add
xor
pop
addb
shll
jbe
adc
jno
push
mov
or
verr
in
dec
sub
in
idivl
repnz
cmp
add
data16
arpl
enter
addr16
add
stos
jge
add
add
jg
in
inc
add
imul
dec
stos
pop
and
mov
add
mov
into
adc
push
sub
add
or
jo
daa
xchg
xor
add
add
mov
dec
aad
mov
bound
mov
push
add
in
or
inc
add
dec
sbb
jmp
sbb
pop
sub
mul
add
add
adc
jbe
incb
add
push
add
insl
add
and
mov
add
lea
cmp
add
mov
jno
sbb
push
daa
or
lods
movsl
mov
movsb
add
add
or
movsl
jbe
pop
pop
sub
add
dec
dec
mov
adc
jle
dec
push
addb
int
add
add
sbb
fidivl
mov
hlt
add
xchg
or
push
xlat
aas
or
fmull
dec
pop
lret
aaa
pop
mov
add
jo
ja
inc
add
js
aaa
or
add
add
rolb
nopl
arpl
add
sbb
jl
add
in
dec
cmp
out
jl
jl
and
mov
or
shrl
rcl
add
fistpl
sub
shrl
fcoms
mov
cltd
fbstp
add
mov
add
lcall
stos
sbb
pop
in
lods
test
mov
dec
testb
add
or
dec
xor
push
add
test
add
push
jno
xchg
fisubrs
xchg
add
add
das
cmp
add
add
sbb
daa
inc
sbb
add
fiaddl
sbb
jb
xchg
jmp
movsb
add
inc
test
outsb
sub
xor
sbb
leave
in
int
and
add
outsl
sbb
xchg
mov
xor
aam
dec
sbb
mov
mov
jmp
inc
dec
stos
insl
add
push
outsl
nop
add
hlt
add
dec
push
add
adc
addb
js
add
popa
addr16
sub
addr16
adc
inc
add
jle
mov
xchg
add
aam
inc
add
pushf
pop
sub
jbe
xor
mov
add
pop
into
bound
mov
add
xrelease
add
cld
into
scas
loope
xchg
add
movsb
add
add
fists
jne
jae
add
stos
inc
push
movd
add
leave
lret
mov
out
repnz
mov
jae
jl
fsubl
pop
add
add
inc
jae
xor
mov
fnstcw
leave
add
ja
add
repnz
xchg
jle
iret
aam
daa
push
repz
mov
add
mov
add
add
sahf
aad
push
sub
mov
and
mov
add
out
mov
add
in
mov
int
pop
pop
xor
aad
add
add
add
lods
out
xor
sbb
mov
out
addl
pop
lods
addb
cltd
fisubrl
int3
sti
rolb
arpl
addb
sbb
pop
xchg
cmpsl
outsl
ret
add
mov
mov
imul
js
dec
push
lret
movsb
add
add
xor
add
add
pop
leave
push
add
out
jmp
dec
sbb
in
xchg
add
add
xchg
add
inc
add
add
fildl
dec
push
dec
hlt
add
xorl
add
add
imul
cmp
add
add
jmp
into
lret
adc
imul
push
cmp
add
add
push
add
inc
add
or
and
shrl
mov
dec
mov
add
add
cmp
add
addb
add
jmp
add
mov
js
push
sub
fwait
sbb
test
push
in
shrl
leave
sti
aaa
lods
dec
testb
icebp
gs
xor
adc
dec
inc
pop
dec
addb
add
loopne
ret
mov
add
movl
adc
add
iret
jmp
cmp
in
mov
add
mov
add
push
push
add
lods
cmp
add
lea
and
mov
dec
push
add
mov
adc
mov
add
test
mov
jp
fsubl
mov
shll
js
hlt
add
jo
fstl
inc
add
les
bound
mov
add
add
push
add
pop
cmp
iret
sub
add
push
add
jge
cmpsl
mov
add
push
add
dec
pushf
push
pop
movb
add
inc
add
add
push
add
add
int3
cmc
and
mov
leave
cmpsb
add
push
sub
outsl
pusha
add
iret
dec
mov
lret
fidivs
popa
repz
int
add
stos
jne
cmp
arpl
dec
pop
sub
insb
add
call
je
shr
xor
inc
add
mov
add
jmp
push
add
xor
sub
add
rorl
jg
add
add
push
add
add
in
stos
jae
xlat
mov
lock
adc
add
add
addb
add
inc
add
call
data16
int3
pop
loopne
xor
notl
in
std
mov
add
add
sub
add
adc
jl
aas
xor
jnp
addr16
fidivrl
pushf
fnstcw
mov
test
call
add
imul
jae
add
mov
xor
mov
scas
addr16
test
sub
addb
rolb
fsub
add
popa
mov
adc
or
xor
fwait
pop
cli
iret
maxps
add
and
mov
loopne
mov
push
push
xor
dec
lea
mov
add
mov
add
test
jb
sub
add
mov
jmp
mov
xchg
dec
scas
rol
sub
xchg
add
nop
add
adc
inc
insl
pusha
add
xor
mov
add
jb
add
mov
add
xchg
test
xchg
add
idivl
add
jnp
add
into
pop
mov
cmp
xor
rolb
ds
out
lds
scas
xchg
add
add
sub
dec
sbbl
pop
fnsave
cmp
repz
pop
jg
add
testb
add
push
add
mov
lods
ret
add
dec
sbb
ja
pop
out
std
adc
mov
or
repz
or
daa
sbb
leave
mov
mov
push
add
scas
jp
in
push
add
dec
loopne
jns
mov
stos
test
pop
addb
add
xchg
add
add
or
repnz
jb
xlat
lret
xor
lcall
pop
inc
add
add
xor
call
mov
sub
addb
inc
add
and
daa
adc
jle
rolb
jno
ret
js
add
push
insl
xor
cmp
add
mov
add
pop
decb
mov
mov
add
and
testl
loopne
cmp
mov
add
add
mov
sub
add
add
mov
aam
rolb
jl
jne
jge
mov
setns
and
data16
jo
cltd
in
xchg
lahf
pop
testb
add
cmc
bswap
outsl
mov
cmp
mov
mov
stc
xchg
add
or
add
xor
add
inc
add
add
fdivrl
add
add
mov
and
add
bt
add
add
add
add
mov
std
ret
add
push
cmp
jecxz
xchg
inc
add
add
mov
add
add
add
push
add
pop
rolb
push
sarl
pop
sar
add
add
pop
xchg
add
mov
popa
call
add
je
test
or
mov
xor
mov
sahf
rorl
add
xor
add
add
add
in
repnz
add
mov
add
jl
add
add
sti
sub
jbe
pop
clc
pop
aas
mov
cmp
mov
push
add
push
jmp
add
repnz
pop
out
lock
add
add
cmpsl
stc
sbb
movups
add
mov
add
push
cli
push
add
movntps
clc
testb
cld
dec
mov
sbb
xchg
movsl
jno
xchg
push
add
fnstenv
add
repnz
ret
in
adc
sub
jle
add
and
mov
pushl
and
fucomip
push
out
xor
imul
sbb
xchg
xor
and
add
add
or
add
mov
add
xor
add
dec
scas
inc
add
add
mov
add
add
push
add
mov
add
xor
cmp
loope
xor
mov
fwait
or
icebp
inc
lods
add
sbb
int3
pop
mov
jnp
rolb
ret
out
mov
add
add
fidivrs
add
push
xchg
add
add
ja
sub
aam
sahf
push
shll
add
add
add
add
mov
inc
pop
int
add
add
adc
adc
in
shll
cmp
shl
stos
sub
stos
sbb
addb
add
mov
fbstp
cmc
add
mov
add
push
cld
shl
in
bound
mov
add
in
pop
dec
xchg
test
lods
fdivs
jg
add
dec
mov
add
mov
jnp
push
add
add
add
into
lret
add
rolb
lds
inc
loop
out
add
popf
jnp
add
pop
ret
and
push
je
push
add
insb
pop
mov
ja
add
mov
das
mov
ja
out
sahf
int3
jl
mov
mov
add
cld
push
mov
mov
lds
shll
jle
shll
pop
xchg
add
add
lea
add
add
mov
xchg
jge
jae
add
push
neg
mov
xchg
xchg
pop
in
sub
add
sarl
mov
add
ficoms
add
sbb
add
jno
add
cli
into
mov
mov
sub
mov
daa
scas
cmp
fiaddl
inc
fdiv
and
mov
lret
mov
pop
and
out
add
je
hlt
add
add
mov
add
mov
int
add
aas
dec
call
add
push
add
jbe
mov
imul
and
mov
mov
mov
fnstenv
add
add
add
mov
clc
push
sub
and
mov
add
add
xor
pop
jge
cmp
mov
sub
gs
sbb
sub
add
inc
add
dec
cmp
mov
adc
mov
out
push
add
data16
cmpsl
int3
mov
adc
sahf
dec
and
ja
add
loopne
pop
stos
lea
mov
pop
mov
stos
mov
inc
add
lcall
add
dec
aas
push
and
mov
sub
and
stos
in
icebp
stos
icebp
mov
xchg
xor
rolb
add
jno
xor
outsl
repnz
jg
adc
fimull
clc
jo
inc
add
dec
in
cmp
inc
add
pusha
add
dec
jmp
ljmp
or
add
add
jge
dec
add
cwtl
adcl
and
iret
push
add
movb
add
add
xchg
hlt
add
xchg
add
into
cwtl
pop
rolb
and
add
adc
iret
rep
add
sub
mov
test
xchg
out
xchg
sub
add
test
test
cmp
sbb
push
sbb
add
add
mov
outsl
dec
xchg
add
std
and
xor
mov
cmp
rolb
adc
add
add
int3
inc
adc
sub
sub
or
push
pop
xchg
adc
and
mov
xor
dec
mov
mov
push
jne
add
and
mov
sbb
cmp
add
imul
jnp
pop
out
in
ficoms
add
pop
pop
jno
pusha
add
jmp
scas
fcoms
add
add
fadd
arpl
pop
cld
test
fbld
add
add
sbb
push
add
insb
and
mov
and
mov
test
cmp
add
add
inc
pop
pushf
invd
adc
fucom
add
add
add
add
push
add
add
sahf
inc
add
push
add
add
mov
aaa
sub
push
shll
mov
lret
mov
imul
pop
mov
out
add
mov
hlt
add
mov
xor
popf
xchg
cwtl
mov
add
add
ret
out
adc
push
add
call
mov
add
add
rolb
push
test
pop
push
add
add
fdivrl
aaa
mov
xor
sub
add
add
mull
leave
mov
adcl
or
cmp
pop
test
mov
push
add
jb
bound
mov
stc
movb
and
mov
mov
movsl
out
jecxz
push
fiaddl
add
add
push
sahf
xchg
add
addb
push
add
add
cmp
sbb
push
add
into
sub
pop
enter
or
add
mov
pop
xchg
mov
mov
repnz
add
mov
ret
movb
and
mov
and
mov
add
add
add
test
add
add
arpl
int
fwait
mov
mov
out
adc
adc
mov
scas
push
xchg
movsb
add
sub
cli
sub
sbb
cmc
sbb
add
add
daa
push
add
fldenv
js
add
mov
or
add
cmp
mov
movsb
add
xor
addl
sub
test
lret
adc
mov
mov
mov
add
mov
cmp
adc
add
add
or
add
cmp
push
mov
add
les
xlat
sbb
adc
sbb
add
mov
jb
xchg
sbb
fstps
cld
jle
sbb
pop
cmp
lock
push
add
or
add
push
cmp
add
add
pop
addb
add
xor
add
cli
add
decb
insl
inc
pop
std
jmp
add
scas
fcompl
and
jb
mov
add
mov
add
pop
dec
jle
push
or
loope
xchg
lods
scas
popa
loopne
and
mov
mov
pop
inc
mov
ljmp
frstor
sbb
xchg
add
add
add
pop
mov
pop
imul
add
shrl
das
out
cli
mov
mov
adc
cwtl
ret
fadd
call
push
sahf
nop
add
imul
push
add
xor
xor
push
rorl
adc
rolb
push
add
mov
cwtl
fiadds
pushf
addb
dec
aaa
dec
cmp
pusha
add
inc
add
add
fsubr
pusha
add
js
pop
add
add
out
mov
add
or
jno
ljmp
add
mov
push
mov
add
lods
in
dec
and
mov
into
inc
add
ficoml
add
add
inc
mov
mov
and
or
pop
jmp
add
mov
pop
mov
dec
pop
fstpl
movsb
add
ret
and
out
add
add
stos
mov
addb
test
jns
popa
je
cmc
pop
or
mov
aad
out
add
mov
xor
cld
jbe
test
and
jb
mov
adc
push
mov
in
jmp
add
sbb
aaa
pop
pop
jle
into
sub
cmpsb
add
aaa
and
mov
out
icebp
jno
add
mov
cmp
pop
int3
mov
popf
lcall
cmc
cwtl
add
adc
in
dec
mov
insb
lds
in
add
pop
sbb
or
add
rolb
sub
call
adc
inc
hlt
add
mov
arpl
add
add
in
mov
add
add
int
std
inc
pop
xchg
mov
stos
sub
add
mov
add
add
add
add
mov
mov
rolb
icebp
mov
push
add
scas
rolb
mov
cmpsl
mov
add
add
clc
mov
xor
add
out
cmp
cmp
cli
fcoml
add
add
flds
sbb
add
addb
jb
stc
pop
add
mov
sub
add
add
xchg
add
add
inc
add
out
lds
add
push
jb,pn
inc
push
add
xor
lahf
inc
add
cmc
fldcw
mov
lods
or
repnz
mov
enter
add
mov
ds
imul
jge
add
cmpsb
add
movsl
jo
inc
add
repz
pushf
repz
jne
add
popl
inc
add
add
add
mov
push
cmovp
iret
outsb
mov
cli
pop
cmp
in
fstpt
push
mov
dec
inc
mov
mov
add
jge
test
loope
jns
sbb
pushf
ret
js
add
aaa
jg
outsl
aas
popl
std
pop
pop
je
ds
add
daa
dec
pop
pop
inc
push
xlat
clc
jecxz
repnz
lock
adc
sti
inc
add
sub
std
imul
movsb
add
outsl
add
mov
add
add
mov
and
mov
sub
sti
testb
add
mov
and
pop
jge
sbb
xchg
mov
pop
and
mov
sahf
insb
int
out
aaa
mov
cltd
and
mov
mov
mov
mov
insb
sbb
pop
test
adc
bound
mov
and
mov
cmpsb
add
rolb
pop
xor
xor
jl
add
xchg
loop
iret
xor
add
mov
test
add
bswap
data16
or
mov
add
push
push
dec
outsb
jno
add
add
add
add
outsl
adc
das
cwtl
sub
mov
cmpsl
insl
int
or
xchg
dec
rorl
add
inc
int3
mov
lods
ret
add
test
pop
push
add
add
cwtl
add
mov
je
push
stos
xchg
in
or
roll
push
add
sbb
fldenv
mov
push
in
into
insl
xchg
add
cld
std
test
cld
dec
jecxz
leave
mov
pop
mov
add
add
add
add
adc
sahf
loop
inc
add
sbb
add
jl
mov
add
sbb
mov
or
mov
enter
std
pushf
jns
dec
xchg
add
add
popa
mov
xchg
cmpsl
mov
sub
fistl
sbb
add
and
mov
pop
push
add
rolb
jg
sub
xchg
jl
mov
jg
xor
jg
out
shrl
lea
lahf
push
add
aaa
sub
push
add
aam
push
add
xor
push
dec
popf
dec
adc
sbb
add
inc
add
add
loop
loopne
fcmovbe
mov
and
pushf
test
push
pusha
add
jae
adc
pop
setne
cmpsb
add
lods
repnz
mov
sti
addl
jp
test
mov
jns
iret
sub
add
stc
jae
add
or
stos
rolb
fnsave
ret
add
add
add
fmull
inc
fs
jle
js
iret
adcl
dec
movsl
or
xor
sti
mov
scas
aas
jae
mov
punpcklwd
add
add
xchg
add
add
add
mov
sub
jne
push
pop
dec
sbb
les
test
mov
pop
add
xor
call
ja
add
cmp
add
aam
je
add
mov
add
pop
xlat
dec
cmp
jae
add
mov
jmp
add
stos
sub
leave
in
add
cmp
ret
sub
add
ds
sti
inc
stc
and
jnp
clc
aas
lret
sbb
add
mov
dec
adc
or
add
add
mov
pop
push
lret
cmp
mov
lds
or
add
dec
aaa
sbb
mov
data16
not
add
out
and
mov
rolb
faddl
in
outsb
and
mov
jne
movsb
add
add
add
or
lret
repnz
xchg
add
add
add
xlat
or
sgdtl
jbe
sbb
xchg
jns
pop
xor
dec
loope
jne
lea
mov
add
popf
push
push
add
add
scas
adc
add
xchg
add
add
in
shll
inc
push
add
dec
sti
ficoml
add
pop
mov
add
dec
mov
add
xor
add
outsb
xchg
imul
push
mov
hlt
add
and
add
in
mov
fdivp
loope
mov
jl
imul
punpckldq
mov
mov
test
sub
dec
push
sub
add
add
xor
nop
add
loope
cmpsb
add
in
add
add
add
add
iret
xchg
imul
sbb
add
pushf
xchg
add
mov
mov
jg
xor
rorl
cs
mov
mov
rolb
lock
lea
add
fcmovnbe
add
add
pop
and
jg
push
add
bound
mov
sub
fiadds
add
test
xor
stos
or
jnp
cld
sbb
add
rolb
ljmp
cmpsl
int
add
lock
add
nop
add
out
xchg
iret
test
add
je
xchg
and
dec
mov
cmp
add
cmp
test
jl
adc
fbld
mov
add
dec
sbb
push
add
add
add
adc
lcall
clc
mov
popf
mov
inc
rolb
sbb
sub
cmp
cwtl
les
push
add
add
add
movb
loopne
dec
push
mov
push
lock
jno
adc
add
in
adc
add
ljmp
je
xor
movsl
popa
or
test
mov
add
pop
pop
je
xchg
adc
in
cs
add
add
mov
cmpsl
test
loopne
sbb
add
cmpsl
aaa
loop
lods
pop
cvtdq2ps
fisttpl
add
add
add
add
imul
add
push
add
hlt
add
inc
add
mov
fwait
pushf
fwait
lcall
test
add
inc
add
bound
mov
push
lahf
mov
add
mov
push
add
icebp
jl
add
aaa
or
pop
pushf
shll
sub
call
mov
xchg
pop
hlt
add
lods
add
mov
sbb
add
sub
jb
testl
loope
cli
dec
rolb
fisubrl
add
ja
cltd
xchg
jo
add
test
lret
xor
add
inc
add
cmp
add
nop
add
jge
add
add
insl
addb
sub
pop
ljmp
fistps
in
rcll
add
test
sti
leave
ficomps
mov
sarl
add
popa
movsb
add
filds
mov
in
nop
add
movq
pop
scas
cmp
add
pop
pop
loope
pop
rolb
push
dec
inc
add
add
mov
and
mov
das
add
mov
int
stos
lock
mov
and
fnstcw
add
pop
mov
jns
push
add
push
add
pop
fisttps
out
jl
lea
shll
and
mov
test
dec
addl
add
imul
aad
pop
mov
jns
xor
in
mov
dec
std
cmp
cmp
add
add
dec
ror
ss
fldl
inc
add
icebp
out
pop
add
add
push
jno
jp
leave
cmove
add
sub
jmp
inc
add
add
push
sarl
inc
add
dec
mov
push
add
xor
mov
add
adc
loope
ljmp
mov
add
hlt
add
push
add
add
fstps
mov
mov
add
mov
sbb
or
add
call
and
mov
jo
push
push
stc
push
add
cld
leave
adc
dec
push
add
add
mov
add
mov
cmp
add
mov
mov
out
xchg
or
dec
sub
mov
dec
in
dec
mov
or
data16
add
mov
sbb
add
mov
add
add
or
dec
xor
jp
jle
add
jae
add
mov
cmc
pop
adc
inc
jbe
in
inc
test
mov
pop
loop
stos
and
mov
ret
jp
add
mov
xchg
sub
add
inc
add
dec
pop
lret
fisttpll
add
addb
aad
add
aam
int
pop
pop
sub
movsb
add
add
add
sub
lret
add
cmpsb
add
adc
out
lods
or
dec
insl
mov
or
mov
loopne
mov
add
xchg
out
outsb
sarl
pop
cs
jae
int
fdivl
add
sbb
add
fsubr
or
outsb
in
dec
mov
add
aad
aam
mov
jge
push
add
xchg
mov
add
data16
clc
mov
cli
movsb
add
add
jmp
movsl
rolb
sub
out
repnz
cld
jg
push
daa
add
sti
decb
add
push
pop
and
mov
xor
mov
mov
fidivs
scas
pop
xlat
iret
jb
call
test
repnz
out
enter
and
inc
add
mov
pusha
add
ja
add
add
add
sub
sbb
testb
add
add
add
testb
popf
xor
cli
inc
add
jl
mov
popa
sbb
add
pop
or
mov
pushf
mov
adc
loopne
xor
in
push
add
mov
add
cmp
pop
scas
in
add
or
add
jecxz
jae
or
add
loope
stos
or
add
loopne
outsl
data16
rolb
popf
pop
or
add
xlat
mov
add
xor
idivl
add
add
lds
dec
push
adc
xor
sub
inc
cmp
aaa
outsl
mov
ret
lock
add
add
add
sahf
jecxz
data16
cvtps2pi
shll
leave
push
jge
lcall
cwtl
push
in
icebp
and
add
or
add
jle
lea
add
and
mov
xchg
add
fsubp
cmp
add
mov
add
aad
xchg
xchg
add
jmp
inc
and
mov
sysenter
add
add
push
add
add
mov
xlat
inc
add
push
add
test
inc
add
enter
std
pop
in
push
dec
or
cmp
add
adc
data16
mov
outsb
mov
add
xor
jmp
sti
out
sbb
mov
lods
data16
ds
fcompl
xchg
add
dec
enter
pop
jae
or
add
jb
cmp
add
add
push
in
daa
pop
scas
push
ret
push
movsl
fstps
push
sub
add
add
add
add
aam
add
in
lock
mov
mov
aaa
inc
cmp
push
stos
repz
jo
repnz
imul
jo
xor
inc
push
mov
or
out
pop
inc
pop
dec
mov
out
testl
add
cld
adc
sahf
push
add
addb
mov
add
pushf
sbb
adc
test
addb
push
add
add
or
repz
dec
in
testb
mov
icebp
jns
js
mov
mov
dec
popa
or
or
fists
add
inc
add
movb
and
pop
mov
outsb
add
and
mov
dec
and
stc
dec
aas
mov
aam
mov
add
mov
cld
cmp
add
mov
mov
stos
aad
rolb
fistl
enter
jnp
mov
inc
add
mov
push
add
add
mov
jp
jbe
cmp
inc
iret
xor
or
mov
mov
xor
stos
mov
and
mov
mov
addb
jno
xor
leave
pop
imul
add
xchg
xchg
cs
orl
adc
xchg
stos
repz
std
mov
add
dec
xchg
icebp
mov
daa
inc
add
pushf
dec
pop
filds
add
push
or
jmp
mov
aad
mov
fnstsw
add
leave
xlat
shll
sbb
add
add
out
add
mov
push
or
mov
jnp
mov
rolb
rolb
cli
int
sbb
loope
lret
xchg
add
add
gs
lcall
add
sub
rolb
ljmp
inc
push
popf
iret
inc
add
add
add
int3
mov
jno
sub
mov
dec
fstl
inc
add
pop
xlat
pop
jmp
jno
incb
add
push
xor
stos
mov
xchg
add
movsb
add
add
add
add
dec
enter
cmpsl
in
push
mov
add
add
add
lods
dec
mov
sbb
mov
loopne
scas
mov
xchg
sbb
sub
pop
adc
mov
scas
push
add
testb
pop
inc
add
lds
add
adc
rorl
xor
and
mov
add
icebp
push
imul
cwtl
repnz
add
push
mov
mov
sahf
pusha
add
add
mov
add
pop
mov
push
xchg
jnp
fdivs
add
add
push
mov
add
cli
mov
icebp
aaa
xor
lods
hlt
add
mov
cmpsl
add
add
sahf
movsl
xor
mov
add
add
add
mov
add
pop
mov
cltd
loopne
lods
scas
loope
scas
je
jge
pop
pop
xchg
add
cmp
xchg
lock
cmp
xor
in
xor
cmp
add
mov
mov
cld
xor
testl
fsub
fwait
mov
add
add
pop
in
cmp
ljmp
push
xchg
mov
aad
add
ret
adc
shr
or
dec
add
xchg
add
add
inc
mov
add
movsb
add
cmc
sarl
in
movsb
add
sub
mov
fldl
add
add
and
mov
pop
out
add
mov
sbb
add
push
sarl
aas
cmp
add
cmpl
mov
shll
pop
dec
add
mov
add
add
sahf
adc
loope
add
lds
add
add
mov
add
inc
jbe
cwtl
loope
add
pop
xchg
add
sub
ljmp
rolb
mov
inc
add
sub
lret
pop
scas
and
inc
popf
out
or
bound
mov
xor
add
in
jb
xchg
insl
dec
in
addb
mov
popf
mov
add
add
add
add
add
or
pop
cmp
inc
add
add
mov
stos
cmp
adc
mov
xchg
lea
arpl
mov
add
ja
add
lret
push
cltd
jnp
negl
roll
mov
xchg
shll
out
sbb
add
add
testl
or
add
mov
jno
add
adc
or
clc
add
xor
xor
mov
das
xchg
add
mov
ds
mov
cmp
add
popf
pop
inc
or
mov
repnz
add
dec
mull
push
insb
pop
pop
dec
movsl
jae
std
cmp
sub
lods
push
sbb
add
mov
enter
mov
add
sub
sahf
data16
gs
add
bound
mov
loope
inc
les
movswl
rorl
add
xor
cmpsb
add
add
lcall
jo
in
shrl
sbb
pusha
add
dec
mov
ja
add
pushf
lahf
mov
ljmp
add
js
add
mov
add
fimull
cli
mov
add
loope
arpl
mov
leave
cmp
sub
add
movsb
add
fisubl
push
push
add
xor
add
add
adc
mov
mov
int3
data16
dec
test
mov
out
ljmp
add
add
outsb
adc
mov
sbb
enter
mov
add
add
push
xchg
inc
or
sub
push
bound
mov
add
mov
pop
out
add
mov
rol
jp
add
add
cwtl
jb
test
push
mov
add
add
pop
std
fildl
add
add
movb
sbb
add
cmp
add
add
add
add
push
add
jmp
xchg
dec
jle
and
mov
add
add
sbb
add
movsb
add
add
lret
sub
mov
pop
xor
sub
add
add
lret
pop
inc
pusha
add
insb
push
add
add
and
jne
sub
add
sbb
mov
fdivs
add
push
icebp
mov
add
cmp
add
add
add
daa
sbb
xchg
jne
add
rep
jl
jbe
jne
cmp
add
xor
or
lea
stc
cmpsl
arpl
add
cltd
push
lds
cld
fadds
xchg
pop
or
sti
push
add
cmp
bound
mov
add
add
push
cmp
sub
add
add
movb
repz
loopw
pop
bound
mov
or
stos
in
cwtl
mov
fstp
repnz
add
add
xchg
sub
lret
add
add
gs
and
inc
and
add
mov
add
pop
into
enter
push
add
jl
add
outsl
data16
push
out
mov
add
fcmovnbe
ficomps
mov
push
add
add
rep
jmp
sarl
push
add
add
xchg
jg
mov
jl
add
insb
in
loope
sahf
dec
inc
sbb
add
add
add
pop
jae
push
add
dec
in
inc
add
in
iret
icebp
dec
scas
xchg
add
add
mov
pop
rcll
mov
pop
out
jmp
add
cwtl
inc
sbb
cmp
cmc
mov
add
pop
dec
rolb
addb
mov
je
sub
add
add
add
add
inc
add
pop
inc
add
lods
pop
outsb
mov
add
movsl
jp
dec
mov
sti
leave
push
add
add
mov
mov
cld
out
xchg
add
shrl
or
add
add
shll
dec
leave
iret
pop
dec
add
cmp
xchg
mov
test
icebp
and
add
hlt
add
push
add
push
jns
dec
pop
insl
push
push
pushf
lock
dec
pop
fsubl
addb
add
pop
pop
repz
in
add
and
mov
rolb
icebp
add
mov
mov
pop
loope
pushf
xor
jle
int3
fcoml
add
sahf
adc
lds
jno
add
popa
mov
add
add
mov
rcll
sti
push
in
add
repz
mov
push
stc
mov
add
mov
sub
pop
and
mov
pusha
add
sbb
inc
movsl
in
cmp
mov
daa
gs
test
lods
mov
mov
push
jmp
add
add
cmp
pop
cs
add
pop
repnz
add
sti
pusha
add
jne
add
pop
movb
pusha
add
mov
shll
addb
sub
adc
push
add
add
popa
xchg
add
mov
cmp
add
push
popa
dec
mov
fs
je
xor
add
inc
add
test
mov
in
rorl
xchg
add
mov
sbb
add
mov
adc
pop
pop
lcall
mov
add
bound
mov
jmp
add
dec
inc
add
add
adc
fdivs
xchg
add
add
xchg
mov
jo
push
out
mov
shrl
mov
insb
clc
xchg
push
add
xor
jno
lods
xchg
adc
sbb
addl
outsl
and
leave
in
das
sbb
add
repz
add
add
cwtl
mov
aam
fs
or
cmp
add
sub
add
call
negl
sahf
adc
add
test
in
or
mov
aaa
fidivrs
cmc
loop
mov
nop
add
dec
fcompl
addb
jne
jmp
xchg
cmp
add
mov
inc
add
sub
mov
add
add
jne
mov
and
dec
pusha
add
mov
jnp
add
add
imul
fidivrs
jne
add
int3
out
add
add
mov
add
push
cmp
sbb
add
xor
dec
in
addl
push
rolb
cmpsb
add
add
test
add
pop
les
adc
fsts
fldt
sbb
call
add
add
add
iret
push
ds
je
pushf
pop
inc
out
into
lret
mov
addb
pushf
addb
add
aad
popa
cs
add
add
jle
int
addb
add
sub
add
add
add
mov
add
mov
add
xor
adc
add
inc
add
or
into
nop
add
add
pop
rolb
shrl
mov
inc
lret
in
and
sub
ljmp
add
add
dec
jne
add
ror
add
jmp
push
add
stc
mov
add
inc
adc
pusha
add
les
adc
and
mov
xchg
add
add
dec
stos
ret
add
mov
add
pop
das
sarl
ljmp
add
out
test
add
push
lods
adc
std
cmp
adc
iret
fistpll
add
ficoms
out
dec
int
add
rolb
cltd
dec
loop
addb
cwtl
ljmp
fistpl
mov
filds
add
pushf
inc
pusha
add
mov
lret
xchg
movsb
add
out
aaa
int
lret
lds
add
xor
jb
in
cmp
add
add
push
les
cmpsl
dec
incl
adc
or
pop
adc
push
add
add
xchg
and
fisubrl
stos
or
pop
addb
and
dec
push
stc
or
rorl
fxtract
add
pop
push
add
adc
sbb
add
sub
daa
jg
lods
dec
jnp
add
sbb
add
xchg
jmp
xor
mov
add
dec
mov
dec
sbb
test
xchg
add
jl
testb
ret
add
add
inc
add
repz
add
jb
add
add
add
je
inc
fwait
and
mov
add
add
mov
test
ds
inc
add
add
mov
mov
xchg
ljmp
mov
add
add
sbb
test
mov
add
push
add
mov
add
add
cs
sub
mov
movsb
add
out
aas
in
les
push
add
dec
jp
dec
popa
jp
inc
add
mov
push
xchg
add
in
pop
imul
mov
add
adc
add
jns
cli
adc
aam
push
add
add
add
mov
in
shll
outsb
mov
push
add
sub
clc
jecxz
shl
inc
addb
and
mov
dec
outsb
xchg
add
mov
rorl
jae
add
sbb
inc
sbb
cmp
xor
add
sti
add
and
mov
add
ds
jnp
outsl
xchg
jge
add
stos
pop
cld
mov
add
jbe
roll
dec
add
pop
and
add
dec
sbb
xor
pop
mov
mov
hlt
add
sub
popa
aam
fbld
add
adc
add
jl
loop
out
pusha
add
pop
test
dec
cwtl
jmp
call
add
outsl
add
inc
rolb
addr16
fldt
aam
icebp
jp
jno
add
mov
push
add
add
dec
xor
dec
stos
test
out
rolb
add
and
mov
xor
mov
mov
aaa
cs
loop
inc
add
dec
mov
out
add
add
stos
cld
cmp
imul
in
add
enter
loope
push
sub
lock
fistps
add
add
pop
mov
dec
mov
std
out
movb
test
mull
inc
add
push
add
add
add
iret
fnstsw
add
and
mov
xchg
dec
xchg
add
rolb
out
mov
xchg
pop
push
add
andl
jno
jg
add
lock
sub
leave
dec
mov
movsb
add
push
inc
add
popa
data16
pop
rolb
sub
xchg
jnp
cmp
jno
testb
add
add
add
add
add
xor
cwtl
jo
pop
rol
cmp
pop
jecxz
sub
add
jnp
add
leave
ret
push
aas
out
sub
add
xor
push
add
mov
adc
dec
adc
add
cmc
add
iret
sub
sbb
std
pop
push
add
mov
mov
mov
gs
xchg
ja
stos
or
mov
add
add
test
call
jno
add
dec
push
mov
add
lcall
ffree
mov
sbb
pop
mov
movsb
add
add
aad
repz
daa
jne
adc
or
adcl
pop
jns
stos
dec
out
out
dec
mov
fstl
add
mov
pop
mov
adc
inc
in
std
outsl
mov
std
mov
out
lods
jecxz
xor
jl
jg
add
inc
data16
jb
xlat
loope
jle
xchg
in
sbb
add
xor
jge
cli
imul
lahf
testb
xchg
std
xchg
add
push
pushf
pop
hlt
add
movsb
add
xor
pop
cmp
add
add
pop
and
mov
add
fldt
or
and
add
jne
loopne
out
push
add
stc
dec
fistps
mov
or
add
adc
dec
or
add
dec
jg
pop
jp
jo
ds
and
loope
ljmp
mov
xlat
pop
in
jmp
mov
add
mov
jmp
out
add
add
mov
loope
outsl
fnstcw
xlat
sub
scas
xor
push
add
add
dec
in
mov
int
lea
ljmp
ljmp
cmp
rolb
shll
pop
out
addb
pop
push
add
dec
imul
add
add
add
imul
add
bound
mov
cwtl
and
popa
rorl
rorl
add
sbb
add
add
add
add
lods
outsb
les
rolb
xchg
arpl
add
dec
arpl
addb
add
add
in
mov
inc
mov
adc
add
xchg
jbe
loopne
stc
ds
shrl
add
add
mov
sti
sbb
idiv
push
add
sub
loop
mov
cmpsl
lods
scas
aam
loop
dec
nop
add
and
mov
mov
add
dec
in
add
mov
add
sahf
decl
dec
and
adc
mov
fsub
test
pop
bound
mov
dec
jecxz
add
mov
ds
add
adc
mull
or
jne
push
add
mov
insb
jle
push
fwait
cwtl
mov
or
xlat
pop
rolb
popf
cwtl
fbstp
and
sub
xchg
movsb
add
add
and
mov
xor
cmp
cmpsl
adc
pop
rolb
push
xchg
add
add
cltd
xchg
add
add
add
jae
dec
cld
mov
add
cmp
mov
out
rolb
enter
pop
and
add
add
cmp
cli
push
inc
add
mov
xlat
mov
inc
mov
mov
lcall
xchg
add
add
addr16
data16
shl
or
add
rolb
rolb
dec
hlt
add
push
xor
inc
sbb
lods
dec
dec
or
stos
jp
in
jmp
add
test
pcmpeqw
push
add
mov
cmc
jmp
pop
add
mov
lret
test
and
sub
add
loop
add
add
mov
shrl
add
pushf
ljmp
xchg
add
adc
popf
pop
addb
add
add
rolb
inc
or
add
mov
lcall
stos
inc
add
dec
rolb
pop
gs
pop
pop
sbb
add
fistpll
sbb
aad
lret
movsb
add
test
aaa
das
push
out
repnz
add
dec
in
push
mov
xchg
add
cmp
and
jne
add
jno
or
fbstp
add
or
imul
arpl
fisttpl
push
add
mov
push
add
sbb
push
add
add
popf
sar
or
hlt
add
fildll
dec
pop
add
jl
out
addb
sbb
jbe
sub
add
lods
xchg
cmp
push
in
int
lods
pop
lahf
or
call
add
xchg
addb
cmp
cmp
scas
or
ja
and
add
mov
xchg
out
push
add
adc
push
xchg
jg
fmulp
rcl
call
push
cwtl
dec
inc
aaa
movb
mov
sbb
pop
mov
jmp
data16
add
add
add
fisttpll
sbb
add
add
imul
je
addr16
add
aam
imul
cwtl
jl
push
push
add
das
sahf
ret
inc
add
add
jmp
mov
push
jo
dec
out
mov
lds
stc
sbb
js
add
add
mov
xor
sub
fildll
adc
jb
and
mov
dec
adc
je
rolb
test
push
add
fstpl
fisttpl
mov
push
dec
add
lcall
add
mov
add
add
cmp
and
mov
cmc
rolb
jmp
cmp
pop
jo
xchg
add
mov
jg
sbb
movb
add
add
add
add
add
push
hlt
add
inc
add
inc
int
add
fcompl
inc
data16
add
inc
add
mov
mov
movb
testb
cmpsl
jbe
int
int3
cs
add
addb
mov
mov
xor
es
lret
mov
add
int3
add
xchg
add
mov
out
add
add
and
mov
mov
xchg
sub
repz
mov
into
jge
test
push
push
add
arpl
and
mov
add
sbb
add
inc
rolb
cli
xchg
and
mov
aaa
mov
or
push
add
mov
dec
mov
out
inc
addb
jns
and
add
nop
add
pop
cs
add
push
add
mov
add
mov
mov
push
add
ds
xchg
dec
mov
add
mov
jns
cmp
mov
popa
into
mov
jno
jo
mov
sbb
adc
das
or
add
add
mov
repz
or
scas
xchg
add
add
arpl
inc
add
iret
add
xchg
add
mov
xchg
add
add
scas
ds
add
pop
rcr
or
add
add
imul
sti
addb
inc
mov
xlat
dec
xor
push
add
sub
sub
popf
mov
mov
add
mov
push
add
add
fidivrs
cs
and
addb
ret
lods
mov
das
pop
aas
je
sbb
mov
std
icebp
jp
mov
mov
xchg
data16
arpl
out
push
add
fbstp
test
mov
cmpsl
sub
add
or
add
int3
aad
add
scas
inc
jne
add
add
add
and
outsb
leave
loopne
cmp
add
add
out
fsubs
mov
add
mov
pusha
add
frstor
sub
int3
jne
inc
add
sbb
add
add
out
rcrl
sub
insb
mov
jl
add
add
add
cmpsl
add
fwait
jae
mov
add
sub
add
xor
pop
mov
mov
fstl
in
mov
add
scas
hlt
add
leave
jnp
add
jl
push
jecxz
add
add
add
les
add
add
outsb
fbld
sub
mov
jno
sub
test
add
mov
xchg
insb
push
add
mov
inc
add
add
mov
add
cmp
mov
repnz
xchg
lret
xchg
pop
push
add
imul
and
mov
mov
dec
cmp
mov
leave
add
mov
push
add
push
shll
xchg
lds
add
mov
repnz
popa
sub
cmp
loopne
data16
add
negl
xchg
test
add
stc
push
add
push
aas
lds
add
data16
or
scas
ljmp
gs
fdivl
add
push
dec
hlt
add
je
test
addb
add
add
add
dec
movsl
adc
add
push
add
rolb
dec
lods
shll
add
add
add
add
mov
mov
clc
clc
cld
jo
cmp
jo
stos
emms
mov
lea
add
int3
mov
pop
leave
fisttps
sub
push
jecxz
add
psrld
xchg
sbb
adc
subl
subl
mov
mov
xchg
add
add
in
movsb
add
xchg
add
jo
test
jle
aam
mov
fsts
pop
xor
add
mov
add
add
fidivl
pop
mov
add
js
vmovhpd
jae
cmp
sti
icebp
mov
add
repnz
add
jecxz
add
pop
lds
cmp
inc
add
mov
pop
sub
add
adc
movsl
data16
add
lret
aam
incb
cmp
inc
add
xchg
aad
pop
xchg
pop
add
add
or
lods
sbb
add
add
add
xchg
mov
js
and
jg
and
or
mov
ss
add
xor
or
out
testb
add
scas
out
xor
add
lds
add
cmp
sahf
add
xchg
sub
push
cmp
out
das
pusha
add
lock
mov
mov
add
and
add
hlt
add
sbb
add
add
pop
jnp
ror
gs
je
sub
pop
sub
into
repnz
ja
mov
aas
jne
rolb
mov
jbe
xchg
xchg
or
xchg
mov
lret
arpl
add
mov
add
cmp
les
lret
dec
scas
dec
xchg
add
mov
ret
movsb
add
cwtl
iret
mov
stc
push
add
sbb
mov
sbb
add
xchg
xchg
push
add
leave
fwait
jmp
clc
xor
outsb
call
add
add
push
mov
add
add
fdiv
add
pop
adc
ffree
rolb
into
mov
adc
add
mov
ja
add
jmp
mov
add
jecxz
popf
popa
or
add
add
cmp
aas
mov
add
add
mov
cmp
add
inc
repz
or
add
inc
cmp
aad
add
mov
add
add
adc
icebp
data16
add
mov
mov
leave
push
lods
mov
cmp
and
mov
mov
pop
out
loope,pn
inc
rolb
cmpsb
add
mov
fcomps
icebp
popf
loop
in
repnz
add
add
icebp
stos
lcall
push
mov
insl
xlat
call
add
push
add
jae
add
int3
push
insl
push
enter
ds
cwtl
in
xchg
decl
and
mov
jle
cltd
mov
cmc
and
mov
add
cmp
outsl
sbb
add
movb
int
add
hlt
add
roll
add
add
cmp
inc
add
dec
je
sahf
pop
and
mov
and
pop
mov
add
xor
insl
sub
add
js
xor
movsb
add
xchg
add
add
aaa
icebp
scas
test
lret
rolb
ret
push
add
movsl
push
ret
push
cltd
insl
iret
pusha
add
call
mov
loop
sub
adc
rolb
push
add
add
adc
xorl
imul
xor
add
add
add
pop
cltd
or
add
lock
mov
je
fnstsw
add
aaa
cli
fcmovne
sbb
and
mov
add
xor
push
dec
sbb
add
xchg
mov
lret
cmp
add
add
add
add
add
add
mov
cltd
stos
movl
dec
pop
icebp
and
movb
add
xor
fdivr
lods
rcl
add
push
add
push
add
mov
xor
push
adc
call
lcall
xchg
add
pop
insl
das
pop
push
mov
add
add
add
cmpsl
or
add
add
stos
bound
mov
insb
push
add
stc
or
adc
mov
inc
ret
mov
inc
add
mov
lret
rolb
add
pop
dec
cmpsl
int3
or
add
xor
into
pushf
cs
stc
sidtl
das
bound
mov
loop
mov
or
std
ret
adc
lds
or
and
mov
push
mov
add
or
mov
add
mov
add
lods
ljmp
lret
sub
push
add
inc
mov
pop
sub
add
js
push
or
into
call
aad
or
inc
add
or
add
jecxz
add
add
outsl
je
movsb
add
jp
add
adc
jle
cmpsl
jg
stos
push
add
and
add
xor
inc
outsl
jns
dec
std
pushf
pop
lock
push
sbb
sub
mov
mov
xchg
add
scas
insb
lds
inc
int
add
jmp
mov
adc
and
xor
cmpsl
xlat
xor
bound
mov
stos
into
xor
sub
ds
movsb
add
add
lods
out
repnz
add
add
add
sub
add
stos
enter
jle
mov
add
add
add
jmp
jno
add
mov
mov
add
adc
push
add
stc
in
jo
addb
add
repz
push
add
add
sahf
aam
xor
pop
aas
dec
es
cwtl
add
jns
add
add
ja
pop
pop
dec
push
in
sti
pop
les
repz
cs
add
add
xchg
dec
mov
add
xor
cwtl
outsl
aaa
inc
add
add
xchg
mov
add
inc
add
addr16
push
add
or
add
add
loope
movsl
inc
fbstp
cmpsl
dec
pop
or
pushf
fimuls
mov
jge
xchg
out
ret
bound
mov
ret
xchg
jns
add
add
or
cmc
add
add
je
mov
jle
mov
add
xchg
add
jmp
add
xchg
add
adc
xchg
cli
cmp
pusha
add
out
das
lret
add
dec
push
xor
jg
add
add
add
add
popf
sub
cmp
in
xchg
leave
icebp
fadds
sub
mov
fucomip
pop
cmp
pop
aaa
daa
jb
bound
mov
mov
mov
mov
push
add
lea
xchg
add
dec
rolb
cld
jns
dec
inc
add
add
ficompl
cmp
jns
ret
sub
sahf
addb
andl
call
add
add
add
jecxz
and
lret
xor
pusha
add
inc
sti
mov
outsb
iret
mov
mov
add
inc
dec
xor
and
mov
cwtl
lahf
push
dec
aam
rorl
add
sub
sbb
add
sub
sub
mov
lret
pusha
add
or
subl
add
add
xchg
mov
and
mov
stos
mov
bound
mov
push
ja
ja
cmp
jnp
add
mov
add
add
add
xlat
mov
add
add
aam
addb
or
cld
xchg
add
add
inc
jno
mov
mov
addb
into
add
add
add
add
mov
add
and
mov
clc
jae
add
add
add
sub
add
stos
push
add
add
pushf
push
add
add
add
sbb
add
xor
add
clc
fidivs
xchg
sub
add
mov
daa
dec
adc
movsl
add
inc
add
jnp
aaa
cli
mov
add
mov
loope
jnp
add
fdivs
data16
nop
add
jne
or
add
mov
add
sbb
rolb
mov
cmpsl
pushf
ret
aas
push
add
shrl
lods
push
push
add
add
in
dec
out
nop
add
add
add
add
test
scas
js
add
add
add
ljmp
push
add
and
rolb
add
add
add
sbb
rolb
push
add
loop
mov
in
add
add
pop
gs
add
cmp
mov
mov
cli
cwtl
clc
lds
add
inc
add
add
mov
mov
pop
or
add
rorl
add
mov
pushf
lds
mov
add
rcll
mov
inc
outsb
arpl
mov
rcl
cmp
add
frstor
add
and
mov
nop
add
call
add
push
add
inc
lock
jb
push
add
mov
add
sti
sub
stos
into
nop
add
mov
aad
sub
jnp
add
add
add
aam
or
add
pusha
add
addb
mov
jecxz
pandn
js
int3
das
rcll
aas
ret
inc
add
mov
push
roll
add
dec
pop
outsb
push
roll
mov
je
xchg
add
pop
pop
dec
sbb
pop
xchg
add
mov
jb
xchg
ss
add
mov
popa
aaa
jg
ja
cs
push
insl
xor
add
xchg
lahf
mov
sbb
cmp
dec
das
xchg
int3
pop
inc
bound
mov
add
lock
fsubrs
divl
add
lcall
lahf
cmp
stos
inc
add
jae
mov
add
add
in
rolb
add
mov
add
std
cmc
jbe
out
inc
add
mov
dec
nop
add
mov
movb
jp
ja
into
shll
adc
imul
add
add
cmp
add
pop
out
scas
mov
xchg
jge
aam
pop
cli
in
hlt
add
leave
inc
add
add
aam
fmuls
idiv
push
jmp
jo
push
add
inc
sub
add
add
and
int3
sti
push
mov
arpl
add
rorl
enter
add
add
adc
mov
sbb
lret
cs
repnz
add
add
mov
mov
push
add
and
mov
add
add
popa
addb
into
cmp
insb
add
mov
gs
into
dec
and
add
push
add
imul
jg,pt
add
push
mov
add
popa
movsb
add
add
cmp
stos
sarl
add
sahf
jmp
lock
inc
add
sub
sbb
rolb
push
add
add
add
or
add
arpl
imul
add
add
pop
pop
push
sub
mov
add
sub
cmpsl
fsubs
mov
loop
lods
lcall
or
ja
subl
gs
add
or
add
pusha
add
mov
aad
add
loop
testl
pop
ret
int
sbb
add
stos
packsswb
pop
xchg
call
cld
mov
add
add
mov
dec
movsb
add
cmpsl
or
lret
lret
and
mov
lock
iret
dec
jl
add
movb
shll
loopne
js
add
add
in
test
add
mov
in
push
inc
scas
dec
pop
stc
loop
out
test
pop
test
pop
pop
cmp
lods
dec
xchg
pop
insb
dec
push
fdivl
bound
mov
add
daa
pop
inc
add
out
adc
lock
stos
test
lea
aam
cmpsl
fsubs
shll
and
xor
jae
lds
mov
add
mov
icebp
nop
add
in
outsb
in
mov
xchg
add
push
add
jecxz
ljmp
arpl
and
testb
fisttpl
add
in
test
icebp
test
mov
addr16
inc
and
or
lea
jae
jge
add
add
add
add
or
and
mov
add
in
loop
dec
jne
sub
add
stos
cmp
add
loope
into
add
or
sbb
adc
mov
add
push
add
pop
js
ret
ficoms
mov
mov
jbe
cmp
xchg
add
cmp
popa
outsl
sbb
dec
mov
inc
xlat
mov
loop
fisubs
cmp
cmp
add
icebp
insb
push
jns
jnp
push
lret
rolb
cwtl
xchg
movsb
add
add
xlat
rolb
xchg
dec
test
add
push
lahf
in
dec
dec
stos
js
fstpt
aam
jb
mov
data16
mov
mov
add
mov
fnstsw
imul
clc
shll
mov
push
add
mov
add
int
jb
mov
add
xchg
jp
rolb
add
lea
fiadds
lcall
arpl
xchg
mov
dec
cmpsb
add
sbb
inc
xor
addb
add
add
roll
adc
mov
add
nop
add
mov
add
add
ret
sbb
testb
dec
pop
jmp
add
push
add
inc
add
rolb
dec
sar
test
mov
mov
mov
std
rolb
gs
repnz
ss
add
in
rolb
nop
add
cmc
stos
mov
test
out
in
push
add
addb
fbld
pop
pop
cmp
inc
sub
cmp
and
inc
inc
or
fucomi
push
lods
add
add
iret
adc
fsubs
sbb
add
aas
adc
adcl
sub
sbb
add
cmp
add
push
jne,pt
add
mov
push
add
mov
imul
mov
add
add
cmpsb
add
out
mov
add
add
cmp
sbb
add
add
mov
or
sbb
add
pop
hlt
add
or
pop
pop
bound
mov
add
mov
inc
iret
andl
jp
mov
je,pn
mov
nop
add
ja
add
add
add
in
ret
jmp
or
scas
insb
sbb
or
test
add
add
add
sub
bound
mov
pushf
insl
cmpsl
daa
inc
pusha
add
lahf
les
aad
add
add
bound
mov
js
scas
add
lahf
dec
mov
cmp
push
add
add
add
jnp
bound
mov
add
aaa
jns
xrelease
pushf
push
xchg
add
add
test
ret
xchg
add
clc
cmpsl
add
mov
sbb
jle
adc
mov
data16
xchg
ret
fwait
mov
add
adc
mov
add
dec
repz
adc
add
lock
scas
pop
mov
add
add
sub
add
cmc
rolb
sahf
adc
dec
xchg
add
add
out
repz
mov
scas
movsl
outsl
clc
sub
add
mov
inc
add
pop
repnz
rolb
pop
adc
push
add
mov
cmpsl
loopne
xor
rolb
add
mov
inc
adc
fdivs
jmp
testb
add
sbb
mov
xor
add
addb
movsl
sub
movl
mov
mov
adc
dec
add
inc
inc
add
mov
add
inc
add
fcmovnb
nop
add
mov
xchg
inc
add
mov
test
sahf
xchg
add
add
or
jecxz
dec
push
and
mov
aas
jg
or
mov
push
xor
dec
mov
add
add
inc
add
push
aad
rolb
lods
push
div
loopne
add
test
add
add
imull
jecxz
jmp
add
mov
add
mov
test
pop
rolb
or
add
rolb
add
pop
sub
mov
imul
add
add
add
inc
add
add
and
cmp
or
xchg
and
push
add
lahf
les
push
add
test
pop
mov
pop
xor
jae
leave
jmp
dec
adc
add
stos
push
cld
icebp
sbb
add
adc
fwait
add
mov
mov
loope
xor
test
add
out
pop
addb
add
jae
xorl
add
dec
fistps
call
cli
arpl
add
and
mov
or
jecxz
in
and
shll
add
add
add
add
mov
jbe
fcmovne
subl
sub
aaa
ret
add
out
push
mov
lods
inc
inc
adc
xor
add
add
push
aas
cld
xor
cmp
xor
mov
push
add
add
add
imul
aaa
adcl
mov
test
adc
add
add
add
pop
mov
or
in
mov
cwtl
mov
insb
xchg
xchg
add
and
add
add
mov
mov
jae
and
mov
add
sbb
gs
push
add
jno
call
add
in
pop
fsubs
add
add
jbe
imul
mov
addb
sub
addb
dec
imul
fidivs
xor
into
rolb
jb
mov
add
movsl
inc
add
cld
push
add
jns
test
aad
iret
jbe
sbb
out
add
mov
mov
mov
lcall
add
jb
dec
jbe
enter
dec
xor
jo
sub
add
mov
jle
popl
add
fcmovnb
add
enter
outsl
loopne
push
inc
add
pop
rorl
cmpsb
add
add
lds
dec
test
add
test
add
add
pop
mov
xchg
movb
add
mov
adc
enter
jp
jnp
lcall
add
mov
or
ds
insl
scas
push
sbb
cmpsl
cld
cmc
mov
in
adc
xchg
sbb
add
push
add
repnz
add
jno
pop
or
fimuls
ds
outsb
xchg
add
add
dec
mov
repz
add
mov
sub
mov
out
pop
pop
stc
xchg
jge
mov
jp
in
add
mov
rolb
sub
mov
dec
int
pop
mov
dec
lea
add
add
add
add
add
sbb
outsb
xchg
add
xchg
arpl
rcrl
leave
popf
add
add
add
mov
add
adc
xor
inc
add
arpl
xchg
in
dec
mov
leave
ret
out
add
scas
leave
push
pushf
pop
insl
inc
add
push
xchg
aam
xchg
add
dec
and
mov
push
mov
push
add
lahf
in
addb
cmpsl
adc
pushf
outsb
fisubl
movsl
xchg
add
push
das
pop
mov
xor
mov
mov
stos
and
jl
pop
in
adc
add
aam
loope
std
leave
mov
sbb
add
leave
xchg
int3
cmp
add
add
xlat
pop
mov
call
push
add
xor
dec
test
sbbl
mov
add
stos
out
fisubl
in
inc
add
shrl
in
jb
xchg
cmpsl
loopne
addb
pop
fisttpl
hlt
add
mov
jp
hlt
add
add
lahf
cmovnp
xor
sbb
loop
mov
hlt
add
mov
add
push
int
repz
add
dec
js
mov
add
lea
das
and
or
movb
add
jmp
aaa
or
add
add
aam
je
sub
add
rcll
xchg
add
cld
or
fisttps
mov
pusha
add
add
jo
jae
stos
inc
and
mov
or
add
mov
xchg
add
mov
jmp
adc
fdivrp
loope
add
add
mov
mov
mov
push
add
add
mov
jmp
add
rolb
add
hlt
add
fdiv
add
add
mov
adc
lds
mov
lods
pop
sbb
jnp
inc
ret
push
add
add
sbb
add
pusha
add
add
sub
aam
std
jmp
repnz
add
dec
fisttps
outsl
jle
jnp
inc
add
mov
fists
mov
hlt
add
add
dec
xor
and
cli
sub
push
add
lret
adc
popa
cld
mov
push
lea
add
mov
in
rolb
push
add
cmp
or
pop
bound
mov
mov
add
pushf
xor
pop
adc
push
push
add
cli
testb
push
add
loopne
inc
cltd
int3
push
add
push
xor
inc
add
add
in
add
sbb
mov
add
and
pushf
das
inc
dec
inc
inc
imul
lret
sbb
or
jae
jg
rcr
imul
lcall
aam
inc
add
add
xlat
ljmp
push
prefetcht1
bound
mov
add
int
xor
sbb
into
test
add
mov
adc
add
inc
jge
add
add
ja
stos
adc
mov
and
bound
mov
lds
lods
mov
sbb
inc
add
pop
ret
mov
mov
rcll
push
dec
mov
pop
out
jl
add
jns
repz
lock
in
and
mov
add
cmpsb
add
bound
mov
mov
dec
xchg
hlt
add
add
add
mov
sti
fisttpll
std
popa
add
mov
addb
jbe
sbb
inc
add
pop
pop
in
ret
add
mov
lahf
jmp
sub
add
pop
xor
cmp
insb
dec
pop
inc
add
cmp
add
movsl
sti
aas
jge
pop
test
adc
and
fistpl
lea
and
dec
shll
mov
rcll
scas
cmp
xchg
cmp
movb
popf
mov
imul
add
dec
les
cld
jl
mov
add
xor
popf
mov
ficomps
xor
and
mov
leave
rolb
addl
cld
inc
add
add
add
add
add
inc
add
jmp
icebp
cltd
mov
cld
test
xchg
add
add
or
sti
testb
enter
fwait
ds
add
and
xchg
test
add
add
pop
js
pop
pop
or
add
add
rolb
ret
sbb
add
scas
testb
add
add
add
or
add
mov
mov
add
push
add
add
xor
cmp
daa
xlat
push
je
jl
push
jmp
cld
xchg
add
arpl
fcomip
or
sub
add
sbb
rolb
add
push
add
test
roll
mov
cmp
add
mov
and
add
add
add
add
mov
xor
movb
adc
ret
sbb
add
mov
dec
cmp
or
xchg
add
gs
add
mov
mov
mov
testb
add
jle
add
add
add
adcl
test
inc
add
in
clc
lods
mov
xchg
sahf
rolb
sahf
or
jae
add
cmp
add
add
mov
mov
ja
and
mov
mov
xor
or
dec
jo
and
adc
vpcomltw
mov
lcall
sti
dec
mov
add
pop
pusha
add
sbb
xchg
add
jl
add
add
add
jbe
lret
fidivrl
add
add
sub
add
inc
add
add
add
sbb
pop
pop
or
jp
add
xor
xchg
aaa
add
fsubrl
cmp
add
add
pop
jne
lods
pusha
add
inc
add
adc
sbb
add
cmc
add
and
je
mov
xchg
rolb
add
pop
mov
fists
add
sahf
testb
add
add
add
lret
mov
add
test
pop
inc
add
icebp
jnp
cmp
add
cltd
aas
mov
out
jmp
add
add
sub
int3
repnz
mov
loope
jns
cmp
out
or
pop
rorl
inc
add
pop
mov
popa
jbe
lods
sbb
add
add
mov
outsl
sahf
or
div
add
out
add
add
lods
pushf
jmp
dec
xchg
add
icebp
mov
add
in
jb
sbb
jbe
and
mov
les
fsubs
add
add
mov
push
xchg
add
xor
add
movsb
add
push
add
add
dec
push
add
mov
add
movsl
ja
xor
pop
push
add
add
inc
add
mov
addb
mov
cmp
add
pop
add
push
push
mov
add
jb
or
or
add
xor
or
push
add
add
add
dec
sbb
das
inc
add
js
pop
addb
add
push
pop
rcrl
add
mov
add
pushf
arpl
add
add
stos
dec
insl
insl
push
add
mov
push
add
add
pushl
aad
add
fisubs
sahf
xchg
mov
jmp
xor
in
cltd
jbe
jmp
add
sub
inc
add
addb
add
jbe
loop
sub
lahf
xchg
add
jns
fistl
movsb
add
test
xchg
cmc
pop
in
out
rolb
ret
mov
les
xor
push
lahf
mov
ljmp
icebp
imul
jae
add
and
sbb
loop
rolb
popa
movsl
sbb
inc
mov
mov
lods
push
add
dec
int
mov
mov
ja
jno
add
add
add
adc
jnp
jnp
dec
cmp
or
xor
lret
add
mov
add
les
in
sub
add
mov
add
sti
ljmp
add
bound
mov
xlat
lods
es
addb
scas
popa
or
cld
loope
sub
push
add
xchg
add
out
pop
pop
mov
mov
add
jmp
in
fdivl
mov
xor
sbb
ds
mov
mov
xor
lret
pop
cs
push
add
add
fcoml
dec
mov
scas
test
mov
outsb
inc
lock
mov
aad
fdivs
add
dec
jns
add
stc
inc
add
mov
push
add
lahf
mov
fildll
cwtl
jnp
add
sahf
out
mov
inc
jbe
in
mov
add
mov
cmpsb
add
adc
repz
cli
sub
in
pusha
add
mov
mov
mov
xor
add
daa
pop
int
push
add
add
add
pop
stc
pop
sub
add
cli
push
add
add
out
mov
lcall
or
add
inc
jp
push
xlat
orl
mov
ja
push
pop
test
mov
iret
test
scas
roll
pop
insb
sub
add
xor
nop
add
int3
ret
dec
rolb
xchg
xlat
mov
add
addb
add
mov
add
daa
loope
cltd
pop
push
add
and
stos
stos
rolb
fisubrs
jae
jecxz
mov
es
idivl
jnp
cmpsb
add
push
rolb
cmp
add
push
hlt
add
push
nop
add
dec
into
mov
lea
dec
jns
lret
mov
xor
scas
pavgw
fmul
lds
jl
fnstcw
dec
data16
jb
push
add
dec
lods
lret
add
cs
daa
adc
stos
clc
movsb
add
fldenv
cs
sub
add
addl
add
push
add
dec
dec
sahf
push
add
aas
inc
inc
add
inc
xorl
dec
xor
addl
and
mov
clc
mov
paddq
add
dec
nop
add
adc
dec
dec
xchg
addb
inc
repnz
in
mov
add
addl
gs
mov
iret
pop
or
add
add
sub
adc
jp
fiaddl
call
addb
jp
mov
sbb
addb
jl
mov
dec
dec
and
xchg
xchg
clc
inc
aas
testb
add
pusha
add
add
ljmp
add
mov
fwait
xchg
push
out
je
mov
push
adc
aas
das
stos
loope
add
mov
pop
bound
mov
mov
xchg
add
sbb
dec
mov
dec
aas
loope
clc
out
aas
js
add
cli
addb
push
jns
add
cmp
add
jmp
dec
sbb
sahf
dec
out
mov
mov
add
or
mov
and
inc
add
notl
add
add
mov
add
sub
xchg
add
rolb
push
xor
ret
mov
xchg
hlt
add
data16
push
add
loop
insl
stos
js
lcall
rolb
push
add
test
add
mov
lret
out
repnz
add
add
fmuls
js
sub
push
cli
xchg
add
cmp
add
add
add
stc
xor
das
sbb
add
fwait
mov
enter
jb
outsl
mov
cmp
inc
add
lcall
ja
add
dec
out
sub
sub
out
jmp
outsl
les
xor
and
jns
ret
repz
inc
add
or
and
fcomps
adc
add
mov
pop
sub
mov
jae
repz
add
test
loop
in
jge
cmp
hlt
add
mov
sbb
cmp
add
and
dec
jbe
mov
iret
xor
mov
jp
frstor
std
loopne
sbb
js
add
and
add
mov
jmp
shll
add
push
add
add
add
push
pop
addb
testb
cmp
xor
push
add
fisubl
loop
std
loop
ds
inc
mov
mov
inc
movsb
add
test
test
nop
add
fsubrs
add
mov
mov
add
jnp
add
inc
add
add
push
add
adc
les
jno
lods
mov
movsb
add
test
push
and
dec
addr16
hlt
add
add
insl
sbb
mov
rolb
adc
lods
xchg
add
sbb
lahf
sbb
cmp
add
mov
xchg
lock
pushf
add
inc
push
or
stos
testb
mov
mov
call
add
stos
nop
add
push
add
pop
cmp
lods
sahf
data16
mov
cltd
aad
jno
and
mov
jmp
add
imul
js
jl
inc
jno
add
pop
jle
mov
and
mov
mov
adc
dec
hlt
add
fcmovnu
and
cmp
mov
add
aam
arpl
push
add
dec
sub
add
add
mov
dec
jb
push
add
mov
push
add
add
loopne
fwait
sbb
test
inc
add
addb
inc
mov
push
add
adc
in
xchg
add
pusha
add
pop
jl
mov
add
test
aam
lds
popf
dec
fdivrp
cld
in
cltd
dec
sbb
add
imul
test
fdivr
push
add
loopne
rolb
mov
imul
and
push
add
adc
add
jmp
js
add
rorl
sub
iret
sbb
mov
dec
test
mov
mov
loop
fdivr
packuswb
push
add
jae
add
insl
sbb
xchg
add
mov
mov
sbb
add
clc
aad
in
pop
sbb
aad
add
add
add
lahf
push
add
add
mov
daa
adc
mov
push
outsl
adc
cmc
repnz
sahf
cmpsl
add
jns
int
cmp
add
add
xchg
pop
xor
push
lods
and
pop
fmuls
lds
add
je
fiaddl
inc
add
jo
xchg
inc
add
add
aam
mov
movntps
or
cmp
inc
int
cld
xchg
lock
stc
in
dec
xchg
dec
in
add
inc
add
repz
mov
rolb
dec
popf
pop
sbb
movb
stos
orl
push
add
mov
ret
add
out
movsb
add
add
jg
push
out
push
xorl
pop
cmp
outsl
pop
and
sahf
hlt
add
or
push
add
cmp
add
mov
sub
sti
popf
sbb
cmp
lds
je
sub
add
out
xor
mov
out
das
mov
incl
dec
dec
loopne
mov
and
mov
pop
das
and
stos
inc
pop
jbe
inc
add
jg
sub
add
addr16
mov
dec
jo
aaa
jg
adc
call
add
jo
cmp
add
jl
call
mov
int
xorl
and
ret
outsl
lods
lods
xlat
cld
mov
lret
sti
testb
imul
sahf
xchg
add
stc
rolb
testb
xor
sbb
ja
ljmp
sbb
testb
les
insl
fildll
xchg
rolb
sub
loop
test
cld
inc
add
lea
xor
rolb
add
shrl
mov
add
add
fnstcw
push
add
push
jo
sbb
mov
xchg
lea
adc
sub
sahf
dec
or
pop
mov
xchg
add
mov
mov
add
pop
addb
mov
mov
add
xor
pop
pop
ljmp
mov
add
xor
jns
xchg
cmp
add
jae
stc
add
repnz
repnz
xchg
dec
mov
add
add
inc
ret
stos
jg
ret
mov
mov
aaa
add
outsl
aam
hlt
add
add
rolb
fdivrl
mov
add
add
add
nop
add
add
add
add
cmp
mov
icebp
shl
fbld
stos
testb
les
mov
inc
add
pop
data16
mov
mov
pop
into
outsb
push
add
add
insb
cmp
je
dec
sbb
testb
xchg
add
push
add
scas
daa
push
add
add
std
sbb
add
addb
pop
pop
sub
push
add
scas
mov
add
add
add
mov
mov
add
stos
cwtl
mov
inc
add
rcrl
jo
out
movb
je
out
lds
mov
mov
and
sub
fwait
aaa
mov
add
faddl
add
adc
add
adc
gs
icebp
mov
cmp
insb
popf
push
sub
jb
pop
add
loope
mov
movb
je
paddq
push
rolb
fisubl
cmc
push
add
push
add
in
test
cmc
sub
add
addb
jl
push
fdivr
pop
jo
in
mov
pop
sub
lea
add
ret
clc
push
mov
hlt
add
add
fisubs
and
mov
add
add
popf
fbstp
add
mov
xor
sbb
mov
int
fidivs
mov
sbb
ds
imul
mov
hlt
add
cmp
push
add
add
leave
pop
sahf
mov
xchg
add
jno
addb
leave
rorl
les
inc
sarl
mov
add
xchg
mov
sbb
add
add
add
imul
jle
sub
clc
xchg
add
add
les
jno
push
add
dec
sub
push
xor
popf
sbb
add
cmp
add
add
push
inc
pop
push
faddl
or
mov
add
add
and
mov
nop
add
push
add
xor
adc
add
jmp
cmp
je
xchg
nop
add
out
out
add
jbe
outsb
bound
mov
in
dec
cmp
add
add
das
stos
outsl
sbb
add
cmp
fstps
add
cmc
icebp
fwait
sbb
add
add
add
cwtl
mov
scas
pop
and
mov
cmp
into
ret
push
add
add
add
lods
data16
dec
mov
push
mov
add
enter
add
cld
popf
pop
jae
pop
jmp
iret
push
pop
test
and
bound
mov
push
add
adc
ljmp
add
cltd
inc
inc
add
add
cltd
mov
jmp
lahf
ja
addb
into
ret
gs
add
push
test
aas
dec
scas
rolb
aaa
or
movsl
enter
xchg
adc
jl
add
and
in
jg
add
mov
repz
or
add
mov
add
sti
jo
loopne
pop
inc
aaa
xor
sbb
mov
aam
icebp
mov
cmp
fcmove
mov
movsb
add
jbe
mov
mov
icebp
cmp
movb
nop
add
les
imul
in
cmp
jo
push
inc
add
xchg
jo
adc
add
in
mov
add
dec
fld
add
orl
add
test
scas
in
and
cwtl
movsb
add
into
testb
inc
addb
jno
pop
jb
or
add
jecxz
mov
dec
add
add
add
test
xchg
add
loopne
mov
add
sbb
add
add
lahf
sbb
mov
mov
jb
addb
test
push
add
inc
testb
jmp
add
lea
jne
inc
add
sbb
addb
std
inc
cmpl
in
adc
rolb
add
into
iret
sub
mov
lea
add
mov
inc
sub
add
fdivs
jns
pop
popf
sbb
jne
out
into
mov
test
cwtl
in
pop
dec
add
scas
or
adc
mov
or
loop
jae
imul
bound
mov
mov
iret
mov
scas
cld
adc
push
add
fdivrs
rcl
add
jl
mov
imul
xlat
test
xor
add
out
add
dec
mov
xor
pop
xchg
add
push
mov
adc
add
mov
icebp
mov
jns
add
movb
out
nop
add
add
cs
fwait
cvtps2pi
add
jo
dec
into
inc
add
add
lcall
or
insb
rolb
xor
pusha
add
xchg
add
outsb
inc
addb
sti
dec
mov
add
out
mov
leave
inc
mov
testb
add
scas
shll
repnz
add
in
add
aas
ds
add
add
pop
jne
mov
add
mov
mov
dec
dec
test
lret
add
aad
mov
movsb
add
jl
pop
xor
aam
ds
cmp
add
cmp
cld
addb
jae
dec
adc
lahf
pushf
sub
lds
pop
je
push
add
mov
mov
sub
pop
and
adc
testb
sub
lods
adc
aaa
shrl
add
push
js
ret
out
outsb
jb
lret
stc
and
push
or
daa
sub
add
das
or
mov
inc
add
icebp
pushf
fcmovu
loope
add
add
data16
add
rolb
or
and
cmp
push
int
add
out
fst
add
aam
ret
rolb
and
add
icebp
sbb
add
add
into
mov
or
imul
add
cwtl
je
push
add
shrl
mov
mull
or
addb
pusha
add
pusha
add
add
cmp
pushf
je
imul
pop
inc
add
jl
in
jmp
aas
adc
daa
rolb
add
add
and
ds
sbb
or
add
mov
jb
mov
mov
cs
fsubl
cmp
add
add
movq
dec
mov
cwtl
xchg
testb
mov
lcall
rolb
daa
adc
lods
imul
sub
add
out
dec
imull
mov
nop
add
jecxz
add
mov
das
push
add
lods
decb
mov
xor
add
loop
sub
mov
add
leave
movsb
add
dec
mov
dec
ret
add
and
pop
aas
add
cmp
push
mov
xor
jmp
push
pop
movb
pop
ret
lods
dec
sbb
enter
call
add
int3
mov
sbb
into
pop
adc
sub
add
push
aas
hlt
add
lahf
mov
mov
js
cmp
nop
add
add
mov
in
sub
repnz
test
add
add
inc
add
jg
add
push
push
shll
add
add
testl
dec
cmpsb
add
add
mov
in
push
add
add
loop
fsub
jge
adc
fwait
dec
sub
sbb
pop
movsb
add
outsb
cmpsb
add
aam
jno
addb
add
mov
test
or
add
sbb
inc
fsubp
xchg
sbb
add
scas
out
add
add
sub
add
mov
add
jge
sub
imul
ret
mov
adc
xchg
daa
dec
mov
xor
aam
frstor
mov
mov
test
jge
fistps
add
push
cltd
cmpsb
add
add
cli
mov
push
add
add
cltd
or
iret
adc
cwtl
fdivrl
add
loopne
xor
addb
add
add
cli
sbb
jne
add
mov
jns
add
adc
movb
and
inc
add
mov
add
js
mov
pop
test
add
mov
sbb
fdivrl
clc
cwtl
xchg
imull
inc
add
cmp
jge
add
scas
jb
nop
add
add
dec
xchg
scas
in
loop
add
mov
cmc
jb
fcomp
insl
sub
or
add
add
push
add
add
add
add
dec
mov
mov
sbb
ret
sbb
stos
movb
add
push
add
cmp
push
cltd
add
add
mov
mov
add
add
fwait
inc
add
lret
dec
faddl
sub
add
cld
push
add
mov
hlt
add
or
or
push
mov
mov
rolb
or
rcrl
add
mov
add
jb
xchg
scas
loop
sub
add
mov
lret
ret
sbb
dec
imul
add
jne
add
cwtl
jne
mov
out
setb
and
jb
sub
push
add
jmp
add
mov
sbb
jecxz
add
add
mov
pop
cmpsb
add
jecxz
movd
cmp
add
add
inc
add
repz
jg
dec
aas
cmp
pusha
add
mov
and
mov
repz
inc
leave
and
aad
jle
jp
add
movsl
mov
jmp
loop
test
out
aam
and
mov
mov
jo
jg
add
xchg
addb
add
int3
fs
mov
xchg
adc
add
inc
rolb
jno
js
inc
ja
lea
movsb
add
out
pop
add
in
mov
add
add
add
pop
testl
and
jo
scas
fisttps
je
mov
sbb
sub
jno
inc
add
pop
push
cs
fstpt
jb
inc
add
je
divl
dec
mov
or
add
add
mov
pusha
add
in
or
add
jl
pop
add
push
inc
add
add
fdivs
mov
mov
xchg
inc
cli
cmp
dec
dec
jge
add
add
loopne
add
mov
nop
add
add
add
dec
gs
inc
add
and
daa
jecxz
dec
test
xchg
loope
fcom
icebp
js
cltd
mov
loopne
fbstp
inc
cmp
pop
inc
add
add
movsl
repz
mov
adc
add
add
add
les
sti
lret
adc
ret
lods
xlat
aad
add
jge
add
push
adc
mov
add
push
xchg
add
cs
addb
pop
xor
dec
fcoml
ljmp
add
mov
push
add
mov
mov
add
inc
xor
subl
or
xor
icebp
in
jb
rolb
mov
add
test
add
fnstenv
cmp
fidivl
sbb
xchg
leave
cs
add
jno
pop
adc
les
cmp
add
push
add
add
out
shl
add
lds
mov
and
ljmp
xchg
btc
xlat
jae
add
pop
jmp
jbe
xchg
add
and
jl
xchg
sbb
push
xor
mov
dec
inc
add
adc
lret
dec
mov
sbb
xor
xor
sarl
mov
add
test
push
add
ficoml
add
pop
push
add
jne
cmp
add
adc
aad
or
int
or
add
add
fldenv
mov
mov
mov
add
mov
add
add
mov
add
clc
fldt
push
mov
pop
adc
lret
and
mov
add
fbld
repnz
arpl
out
mov
jb
mull
dec
or
xchg
add
xor
adc
imul
cmpsb
add
ds
out
and
mov
pop
in
addb
add
lea
push
lea
movsb
add
add
int3
jns
add
sbb
sub
jg
testb
pusha
add
inc
popa
push
add
sbb
jo
lods
jg
jl
add
scas
imul
movsl
bound
mov
das
leave
dec
dec
mov
mov
addb
cmc
imul
add
jb
and
dec
lods
pop
aam
mov
ffreep
add
mov
jb
rolb
rolb
add
add
xchg
fnstenv
cwtl
lea
addl
jno
add
push
adc
add
mov
mov
and
mov
icebp
loope
clc
insl
cmp
arpl
add
es
loopne
addr16
mov
lods
mov
jmp
xor
add
mov
jnp
cmp
outsb
rolb
iret
dec
fisubl
add
mov
add
dec
icebp
mov
cmp
add
gs
clc
xorl
add
xor
add
jbe
inc
add
pop
test
add
lret
jle
add
or
add
hlt
add
add
cmp
rolb
add
sbb
push
cmp
add
popa
clc
orl
push
add
fldcw
add
mov
insl
sub
jle
add
mov
add
jne
push
cmp
push
loopne
inc
add
dec
scas
dec
cmc
and
mov
push
pop
clc
sub
pop
pop
jae
in
lock
cmp
jmp
mov
pushf
jns
xchg
and
mov
adc
add
and
sahf
outsl
jo
mov
jl
sbb
add
jmp
jne
add
add
insb
rorl
fdiv
sbb
testb
je
les
lret
jnp
mov
adc
lahf
aam
add
mov
stc
mov
or
dec
jecxz
pop
push
sbb
int
add
add
and
jnp
add
sbb
data16
mov
mov
and
mov
pop
icebp
repnz
pop
pop
inc
add
in
in
add
test
pushf
dec
mov
stos
push
add
lcall
add
mov
add
pop
cltd
xchg
dec
jb
call
fadds
cmp
lahf
fnsave
lret
push
mov
add
add
dec
add
mov
lds
push
add
add
add
sbb
or
aaa
icebp
in
fst
add
fisubrl
and
mov
add
sbb
add
add
inc
in
pop
sub
flds
add
add
lahf
sub
mov
je
pop
shll
add
add
push
add
add
add
mov
and
pushf
sbb
dec
cmpsb
add
test
jp
add
imul
dec
or
jbe
push
xor
sub
or
mov
pop
aam
pop
test
mov
push
add
jne
xor
repz
inc
loopne
push
add
jge
fcmovbe
add
dec
dec
dec
mull
or
btc
xchg
cmp
cmp
rolb
push
add
add
add
lret
add
add
in
addb
into
mov
dec
bound
mov
jmp
add
add
add
dec
mov
or
or
add
jns
das
mov
fbld
add
jp
cld
or
dec
add
pop
into
xchg
sbb
leave
jp
std
out
fstl
cmp
or
js
pop
jae
and
std
fwait
xlat
dec
add
mov
xchg
add
add
in
xchg
mov
adc
fimull
add
mov
fcompl
sub
fwait
movsl
sti
lock
lock
pop
jnp
test
dec
das
cmp
hlt
add
aas
loop
imul
xchg
jmp
push
add
mov
or
add
add
dec
int
hlt
add
movb
pop
fidivrs
add
mov
add
push
add
into
mov
pop
push
add
outsb
mov
and
jmp
insl
mov
xchg
adc
enter
int
mov
dec
outsl
loopne
mov
repnz
add
add
ficoms
outsb
int3
and
and
mov
add
add
or
add
les
adc
add
add
mov
mov
add
add
repnz
mov
dec
imul
sbb
add
cwtl
dec
je
pop
and
add
jge
xchg
aaa
push
lret
mov
icebp
ds
mov
dec
dec
xchg
add
or
pop
mov
mov
mov
mov
lcall
add
sub
add
mov
cmc
pop
aam
dec
jne
add
test
inc
jmp
push
add
notl
adc
dec
xor
test
lahf
lahf
loope
pop
mov
or
lds
les
lcall
sbb
add
add
cld
ja
add
add
lahf
sbbl
adc
adc
daa
mov
repz
dec
insb
mov
add
adc
xchg
add
adc
add
loope
adc
cmpsb
add
aas
rolb
jno
cmpsl
sub
xchg
jp
add
add
pusha
add
add
cmp
jae
add
add
dec
nop
add
add
add
lcall
add
cmp
cmpsl
jo
dec
pop
jb
dec
jbe
out
cmp
lret
out
cmp
xor
add
inc
fsubs
das
jns
add
les
xchg
testb
xchg
add
sbb
add
clc
sti
filds
inc
popa
pop
inc
inc
in
push
pop
sbb
add
xor
loop
mov
add
add
mov
add
add
stc
rolb
daa
fnstenv
test
sub
add
add
dec
and
push
dec
scas
stc
add
cmp
add
xchg
cmp
xor
rolb
pusha
add
mov
aaa
daa
adc
xor
mov
add
mov
mov
scas
lds
add
mov
testb
cwtl
clc
push
mov
add
lods
push
add
jmp
ret
ficomps
stos
mov
jns
imul
fdivr
dec
popa
push
adc
mov
daa
imul
add
std
xchg
add
dec
mov
add
mov
add
mov
cli
xchg
iret
mov
add
js
jl
scas
jnp
pop
and
mov
insl
and
mov
sbb
das
dec
inc
add
sub
add
xchg
add
dec
sub
add
sub
pushf
mov
xchg
add
mov
call
dec
fiaddl
add
pop
sahf
stc
lret
fists
add
mov
pop
and
mov
mov
jle
outsb
mov
fwait
jo
adc
cmp
add
mov
add
roll
movsb
add
imul
les
pusha
add
fsubrl
cmp
jne
mov
call
hlt
add
inc
add
test
outsl
or
mov
inc
add
js
add
push
add
jns
je
adcl
das
add
lret
add
pop
push
pop
lahf
sub
pop
push
add
mov
lea
testb
aam
sub
les
inc
add
cli
pcmpgtb
adc
mov
inc
mov
push
sti
addb
add
lahf
jo
inc
les
push
add
xchg
mov
add
xchg
jbe
push
mov
sub
cmc
cmpsb
add
mov
ret
mov
fnstenv
sub
je
mov
add
ja
enter
pop
test
pop
movb
mov
add
add
lahf
dec
sub
mov
int3
mov
add
dec
cld
lcall
add
xchg
testb
push
add
mov
jp
add
add
add
icebp
and
mov
outsl
int
add
add
jbe
add
add
orl
add
popf
adcl
add
add
mov
adc
jbe
mov
nop
add
aas
roll
sub
add
rolb
mov
mov
popa
cmp
push
dec
sub
mov
add
lcall
lret
mov
jp
xchg
aaa
mov
dec
arpl
add
add
int
add
mov
cs
add
pop
or
fstps
add
add
lods
and
stos
mov
aas
pop
int3
mov
add
testb
sbb
out
in
out
xlat
pop
js
pop
or
add
loopne
mov
or
cmp
lret
sub
rolb
ja
leave
and
jae
test
add
add
push
lods
cmpsb
add
in
xor
repnz
add
test
add
add
gs
clc
incl
add
daa
inc
dec
out
inc
add
add
push
in
test
inc
add
add
mov
shll
or
sub
add
mov
add
cmp
add
add
adc
es
and
stos
jecxz
add
icebp
jns
pop
fucom
add
mov
push
push
add
test
sbb
jg
jb
xor
std
dec
lods
jae
test
add
add
push
add
mov
stos
cmp
or
add
stos
arpl
xchg
mov
push
cmp
xchg
push
rorl
pop
out
mov
or
add
test
add
and
cld
or
cld
mov
add
int3
inc
add
mov
and
gs
or
sub
adc
xor
xor
mov
in
xchg
cmc
inc
add
add
adc
add
inc
add
fstpt
and
add
jbe
cli
adc
stc
sbb
or
outsl
aas
pop
std
mov
add
mov
fildll
xor
mov
jns
pop
lret
push
add
add
add
je
adcl
and
pop
test
int3
mov
jmp
add
add
fnstsw
add
and
pushl
cmpsl
sbb
add
rolb
or
data16
mov
int3
jl
pop
xor
adc
test
stos
mov
int3
mov
clc
mov
jmp
pop
add
cwtl
add
mov
jnp
mov
add
call
mov
pop
mov
pop
mov
sti
movb
sbb
sti
mov
mov
loopne
stos
addb
add
add
daa
lods
mov
add
lret
pop
scas
dec
xor
cmpxchg
dec
sub
outsb
inc
out
mov
repnz
loope
dec
int
mov
mov
add
pushf
movb
imul
aas
xor
addb
icebp
lods
jb
lea
sub
add
sub
sub
push
cmp
xor
xor
add
add
inc
add
mov
add
cli
cmp
mov
outsl
das
mov
aas
sub
scas
push
add
add
cli
mov
leave
std
xor
adc
xchg
add
mov
add
mov
add
sub
jl
arpl
add
dec
rolb
aam
into
pop
push
jg
les
cwtl
xchg
add
fnstenv
add
xchg
add
or
outsb
loope
and
mov
xchg
jno
and
mov
aaa
in
add
out
jp
inc
add
pop
movb
mov
add
mov
je,pn
push
addb
rcrl
outsb
inc
nop
add
push
ljmp
insb
pushf
cmp
call
or
pop
out
jne
xchg
mov
iret
ja
addr16
out
insb
addb
fisttps
int3
dec
mov
setae
xor
test
pop
bound
mov
mov
or
mov
inc
sbb
lcall
fistl
fwait
test
push
xchg
add
aaa
std
inc
add
xchg
stos
ret
add
add
mov
add
inc
add
add
testb
add
stos
pop
xchg
ljmp
sbb
lds
dec
and
sahf
std
in
xor
add
add
sub
arpl
or
add
mov
repnz
xor
popf
repnz
xchg
add
mov
in
loopne
mov
inc
adc
cli
data16
and
in
std
daa
adc
push
je
pop
jo
adc
pushf
fisubrl
cli
cmp
jae
add
mov
je
out
out
inc
add
add
movsb
add
mov
add
xlat
push
paddw
leave
jl
add
mov
add
adc
movsb
add
incb
and
int
add
push
jmp
push
push
add
xlat
xchg
add
mov
adc
xchg
int
mov
add
shll
daa
mov
push
add
mov
inc
enter
xchg
mov
push
mov
push
add
push
add
cmc
add
mov
mov
arpl
test
xor
jnp
addr16
add
and
add
add
cld
sub
add
add
adc
rolb
add
add
mov
add
push
jb
in
addb
add
push
add
mov
lahf
in
ljmp
in
popf
ret
add
add
insb
adc
jle
lret
cmp
data16
aam
in
les
xlat
fdivr
shr
xchg
sbb
inc
add
and
jecxz
xlat
fadd
add
sbb
add
jbe
into
dec
test
jmp
aam
movsb
add
dec
or
popa
loop
xor
mov
pop
cmc
and
mov
add
inc
mov
mov
add
adc
push
add
shll
adc
std
xchg
sbb
faddl
add
mov
lods
daa
sbb
add
add
jl
jo
test
add
iret
sub
dec
pop
movsb
add
xchg
add
scas
push
push
inc
add
mov
xchg
cld
cmp
mov
jb
pop
inc
add
ljmp
add
jbe
inc
add
mov
ret
mull
xor
xchg
add
add
add
add
in
dec
bound
mov
jbe
aas
mov
fnstcw
pop
leave
insb
cmc
adc
add
jb
sub
add
cmpsl
lret
inc
xchg
mov
imul
rolb
scas
mov
rolb
push
jp
mov
sbb
mov
shr
shrl
and
aas
add
mov
loopne
test
mov
punpckhbw
pushf
pop
xchg
add
pop
xor
or
rolb
sti
cmp
pushf
push
or
ds
or
sub
pop
movb
mov
popf
push
push
cmpsb
add
add
mov
insl
sub
add
adc
scas
das
es
lret
adc
mov
mov
add
shl
stos
scas
pop
jmp
add
mov
insl
roll
add
add
add
insl
jno
push
add
fdivrs
sti
push
addb
adc
add
arpl
adc
and
cmp
lods
lret
push
add
jns
mov
add
loopne
into
mov
sti
test
fsub
pop
test
mov
add
test
add
cwtl
js
add
add
aas
addb
fdivs
mov
repnz
add
inc
add
add
sbb
icebp
shll
add
xchg
push
add
inc
add
outsb
cmp
add
mov
xor
add
sub
add
push
ljmp
dec
pop
jp
add
rolb
rcrl
add
inc
jnp
inc
mov
or
add
int
mov
scas
push
add
pop
sahf
mov
mov
adc
mov
jp
fidivrs
pcmpeqb
and
add
loope
lcall
iret
dec
data16
pop
je
or
mov
add
and
mov
out
cmp
inc
add
push
jno
mov
xchg
jge
pop
fcoms
add
sub
mov
or
add
imul
cli
cld
repnz
jno
add
jbe
mov
add
add
add
add
add
aad
push
add
xchg
mov
add
or
scas
xor
add
stos
xchg
xchg
cmp
add
lcall
add
movsl
and
mov
xchg
xchg
add
je
lock
mov
mov
mov
aad
and
mov
sub
int3
xchg
add
movb
jb
rolb
inc
lret
mov
dec
out
jmp
filds
inc
add
aas
lcall
jp
xchg
add
jge
lock
inc
add
mov
or
add
ret
pushf
mov
add
mov
add
mov
add
mov
add
add
dec
jo
out
xchg
add
or
inc
add
add
adc
mov
lock
add
cmp
rolb
out
or
mov
or
add
pop
aad
in
mov
or
mov
test
dec
repnz
enter
cltd
sti
sbb
mov
dec
movb
or
add
add
add
push
sub
dec
rolb
cmp
or
mov
and
add
pop
cmpsl
push
add
mov
in
lock
add
add
cld
repz
add
add
sub
addb
aad
xchg
add
hlt
add
add
rcl
fcoms
add
add
mov
mov
mov
jb
insb
test
jg
gs
shr
hlt
add
mov
js
add
adc
add
and
cmp
xchg
mov
test
pop
fimuls
xchg
lret
lods
add
inc
add
add
or
rep
mov
add
into
inc
add
movb
call
outsl
pop
ret
and
in
in
mov
add
push
mov
or
pop
ljmp
mov
adc
andl
add
ret
mov
add
scas
sbb
mov
add
stos
cwtl
das
or
pop
ret
addb
mov
push
fmuls
dec
aad
inc
add
push
add
ret
fstpl
mov
push
mov
adc
das
sub
mov
xlat
rolb
cmpsl
lods
repz
adc
test
mov
fcoms
popa
xchg
int
lods
xchg
xchg
add
or
inc
mov
mov
ljmp
lods
cltd
pop
dec
or
cmp
sub
mov
repz
addr16
add
jns
add
mov
js
push
add
call
jo
or
push
add
daa
daa
push
add
xchg
add
lcall
test
stc
sbb
in
rorl
repz
mov
dec
int
pop
out
in
addl
fcmovne
loope
add
das
mov
add
mov
or
add
cmp
lds
add
loop
faddl
fcmovu
pop
addr16
inc
push
add
add
lods
add
xor
add
fucomp
cmp
add
add
push
add
add
sub
lcall
sti
dec
stos
test
mov
fildl
add
mov
adc
popf
lret
jmp
mov
addb
inc
add
movsl
xor
sti
stos
and
dec
nop
add
cmp
adc
xchg
push
add
add
add
inc
jg
add
and
and
sbb
imul
dec
or
pop
and
jns
xchg
cltd
inc
dec
pop
xchg
add
mov
lret
add
inc
inc
add
add
cmp
add
add
mov
xor
cmp
add
mov
stos
or
add
fnstenv
sarl
inc
add
add
mov
add
add
loope
stos
pop
adc
mov
xor
xor
rolb
xchg
cwtl
jnp
cmp
add
mov
int
add
add
mov
dec
stc
ljmp
inc
jge
add
lahf
outsb
push
arpl
sbb
mov
add
sub
add
rolb
mov
add
mov
add
dec
pop
sub
pop
out
push
mov
ds
mov
cltd
mov
add
add
ja
mov
add
repnz
add
add
jb
test
test
clc
daa
imul
incb
mov
mov
cli
rolb
imul
cmp
add
or
lcall
cltd
pop
lret
and
add
xchg
jecxz
add
testl
cs
in
push
add
dec
or
inc
add
cmc
sub
add
xor
mov
mov
jecxz
mov
insb
roll
mov
add
cli
adc
inc
jbe
scas
inc
xchg
or
dec
push
add
aam
push
add
add
jle
test
xor
add
sub
add
add
mov
js
arpl
add
xchg
adc
ret
xor
sbb
xor
add
pop
addr16
push
sbb
mov
lods
add
add
push
add
jge
enter
fsts
js
push
pop
add
mov
mov
pushf
cmpsl
stos
sub
out
and
mov
fisttpll
adc
mov
mov
mov
inc
add
imul
mov
add
loopne
ljmp
mov
adc
aad
xor
cmc
daa
jmp
mov
test
sbb
std
mov
mov
mov
insb
sub
addr16
data16
sahf
movb
mov
add
add
push
out
cmp
add
cltd
test
xchg
pushf
mov
fwait
or
xchg
dec
hlt
add
mov
add
sub
jl
add
jae
or
outsl
push
add
add
xor
add
loopne
hlt
add
add
mov
sub
add
add
xchg
rolb
shrl
add
jne
insl
stc
mov
add
or
add
mov
insl
sbb
add
xchg
push
add
outsb
jg
add
add
add
mov
add
sbb
or
pop
jb
mov
cmp
int3
pop
int
scas
imul
in
jae
lahf
dec
jbe
sbb
ret
or
mov
pop
pop
mov
lret
push
jecxz
cmp
xor
lea
add
cmc
mov
add
add
lds
int3
cmp
mov
jle
cmp
cld
pop
push
fisubrl
mov
add
add
cmp
add
hlt
add
inc
add
add
adc
ret
add
add
jle
jbe
xor
andl
outsl
mov
jmp
push
addb
mov
or
out
js
xchg
add
mov
dec
xor
decl
cld
sub
xchg
add
add
stc
call
aaa
data16
rolb
sub
xor
mov
add
test
lods
mov
push
int
adc
xchg
sti
jno
sbb
movsl
fldenv
mov
jb
bound
mov
and
mov
mov
inc
push
add
add
xor
dec
pop
ljmp
add
add
mov
mov
fldt
cld
push
push
int3
dec
sub
pop
jg
add
sub
mov
add
out
jo
pusha
add
xchg
push
add
add
add
fidivrl
ljmp
xor
clc
fs
add
sbb
inc
cmp
and
mov
jo
ja
pop
inc
add
pop
cmpsb
add
movb
adc
cmpsl
fiaddl
add
fdivl
add
inc
lea
add
dec
ret
push
jne
mov
xlat
pop
fdiv
add
addb
addb
sbb
and
mov
aas
add
add
add
psubw
cmp
sub
mov
mov
add
push
lods
les
mov
jbe
mov
addr16
add
sub
daa
fwait
popa
cmp
addr16
add
add
pop
imul
hlt
add
mov
repnz
add
inc
jno
or
int
into
push
dec
inc
mov
adc
jno
add
add
call
jne
sub
push
iret
int
pslld
sti
mov
add
pop
adc
test
push
add
sub
sbb
or
mov
push
sub
ljmp
adc
mov
push
or
test
or
sbb
mov
dec
stc
jns
add
arpl
add
rolb
jle
mov
dec
push
add
cmpsl
fsts
push
add
add
add
hlt
add
mov
add
add
add
mov
add
out
xchg
xchg
add
add
mov
mov
jecxz
je
jbe
push
fbstp
movb
add
or
fs
add
xor
rolb
pop
jmp
ret
arpl
add
cmp
mov
inc
add
cli
addb
mov
mov
add
hlt
add
sbb
ret
sbb
test
je
sbb
xchg
xchg
add
or
add
add
rorl
xor
add
bound
mov
pop
data16
add
add
xor
add
mov
sbb
mov
lret
icebp
push
xchg
push
add
lods
inc
add
enter
fists
ss
jmp
cltd
fwait
jmp
mov
add
add
sbb
add
into
add
mov
add
add
add
movb
xlat
addb
mov
jge
movb
add
aaa
mov
add
inc
add
dec
loop
jg
add
and
adc
rolb
add
and
sub
movsb
add
jbe
xor
idivl
jae
mov
add
bound
mov
inc
addb
or
into
insl
push
mov
xchg
and
mov
fisttps
js
add
scas
pop
pop
test
roll
fmuls
fsub
add
add
stc
lahf
ficoms
add
lods
and
mov
jg
add
add
add
push
add
xor
fldt
add
add
aam
nop
add
add
add
and
jge
add
sub
add
aad
push
add
xlat
adc
mov
lret
dec
rolb
add
ret
add
or
test
add
add
ret
inc
mov
push
movsl
push
add
add
and
add
test
sbb
adc
imul
scas
jmp
add
pop
pcmpeqb
sub
sbb
xor
add
add
mov
pop
les
xchg
push
add
pop
mov
jmp
or
sbb
xor
mov
out
xor
or
mov
push
add
add
test
cmp
imul
outsb
or
cli
ret
cmp
add
jp
gs
add
lret
push
add
adcl
add
add
xor
aam
outsl
inc
insb
addb
sub
add
xor
fbld
aam
ja
add
add
movaps
lret
adc
decb
xor
add
popa
mov
add
adc
out
add
cmp
cltd
pop
inc
add
add
pop
jns
test
cmp
push
add
add
xor
add
add
mov
test
add
dec
jbe
push
clc
data16
sbb
add
cmp
and
xchg
add
movsb
add
outsl
dec
xorl
fdivs
pop
sbb
cmp
in
mov
mov
leave
mov
or
or
add
mov
pop
sbb
out
adc
pop
fisubrs
and
or
out
add
cli
cmpsb
add
cmpsl
in
mov
add
cli
roll
add
mov
mov
dec
jbe
mov
testb
leave
movlps
or
sub
ds
push
add
or
sub
jmp
loop
sub
push
mov
fldl
mov
fdiv
add
les
mov
std
push
add
add
mov
push
bound
mov
pop
movsl
push
add
mov
add
rolb
jge
ret
jae
push
sbb
pop
dec
mov
pop
in
fisubl
mov
shl
adc
test
inc
add
stos
lcall
add
push
cmpl
and
std
icebp
ret
js
mov
cmp
add
add
test
out
lock
in
or
add
add
test
jle
add
mov
jbe
das
pop
sahf
mov
xchg
movsb
add
push
add
loop
cmp
add
add
mov
sub
jno
repz
add
mov
addr16
out
addb
xor
add
mov
hlt
add
addr16
movb
aas
or
mov
cmc
pop
mov
pushf
loope
add
mov
inc
add
add
hlt
add
xchg
add
nop
add
xchg
or
jbe
int3
xchg
fisttpl
adc
in
inc
cmpsl
inc
add
jne
fidivl
add
test
cmovne
imul
leave
add
aam
inc
add
sub
lock
or
dec
roll
dec
mov
pushf
jo
ret
pop
add
add
add
das
cwtl
jp
sahf
lods
in
mov
add
and
mov
mov
and
call
add
outsb
incb
add
out
in
push
mov
push
add
add
rolb
popa
push
mov
pushf
decb
add
jne
add
pop
dec
add
insb
jecxz
add
add
mov
add
cli
scas
add
dec
ja
dec
push
xor
filds
cmc
movsb
add
je
pop
and
fdivrp
adc
lret
mov
pop
addb
add
mov
js
add
mov
add
mov
fldl
mov
adc
ret
gs
jg
add
add
outsl
int3
cmp
in
lret
or
fsubl
add
addb
lcall
jmp
or
adc
int
mov
lods
out
adc
adc
jp
pop
outsl
mov
add
mov
push
add
fwait
inc
xchg
pop
cld
mov
and
icebp
xchg
add
xchg
repz
add
rcrl
add
mov
xchg
xor
pop
jo
xchg
frstor
rolb
repz
test
fstl
xchg
push
add
arpl
repnz
mov
cmc
int3
xor
hlt
add
mov
add
mov
inc
add
add
aas
pop
fcoms
add
mov
mov
daa
push
add
add
add
mov
iret
sub
xchg
xchg
mov
add
xchg
aam
and
mov
xchg
add
out
push
mov
pop
cmp
addr16
add
add
mov
rolb
mov
les
inc
fldcw
cmpsl
popf
push
push
adc
xor
jmp
mov
add
faddl
push
add
lods
or
add
push
add
add
push
add
mov
add
inc
sub
mov
in
daa
xchg
sbb
mov
add
mov
fisubrl
pop
fadd
cwtl
pop
shl
addb
inc
add
or
ret
stc
mov
push
adc
lock
lcall
mov
add
or
sbb
add
cmpsb
add
in
mov
rolb
pop
dec
mov
add
aaa
adc
sub
add
add
mov
xchg
add
push
cli
rolb
or
int
dec
in
jnp
add
repz
push
mov
pop
sbb
mov
jae
movsb
add
icebp
cwtl
mov
mov
xchg
ret
mov
addr16
jnp
xchg
lret
out
and
sub
adc
add
or
add
loopne
inc
add
add
add
jb
je
int
inc
add
clc
jecxz
jle
ret
mov
fmuls
repz
imul
stos
popa
add
xchg
mov
sbb
add
inc
add
add
sub
je
pushf
add
in
das
mov
movb
mov
sar
inc
add
xor
push
add
clc
inc
add
movsb
add
add
mov
or
arpl
leave
imul
psubb
add
ficoml
add
push
adc
add
cmc
fidivl
add
add
add
add
add
cmp
cli
sbb
add
iret
movsb
add
sbb
mov
fbstp
xchg
add
push
add
xor
lods
push
jne
jbe
outsb
sbb
adc
add
mov
mov
inc
add
jle
add
add
ret
loopne
dec
out
les
dec
add
dec
or
js
add
add
in
and
add
jg
push
sub
add
sbb
add
repnz
addb
push
add
mov
iret
push
sub
jno
add
sbb
arpl
cmp
mov
add
and
dec
fisubrs
mov
push
out
sub
add
mov
imul
je
imul
mov
movsb
add
xchg
cmp
add
data16
leave
daa
xor
cltd
test
mov
push
jmp
and
cli
xlat
pop
or
bound
mov
lcall
mov
insl
sbb
rolb
sbb
add
or
add
add
push
xor
sti
mov
fld
popf
insl
das
out
lcall
add
sbb
add
repnz
sub
out
aad
add
add
repz
dec
fwait
stos
les
lcall
lods
inc
xor
fnstenv
pop
imul
movups
cmp
jl
push
add
adc
jge
add
insl
cmc
int
dec
and
mov
add
add
