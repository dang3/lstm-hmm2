xlat
call
loop
jbe
loop
inc
in
in
out
in
in
in
jmp
loop
add
loope
in
in
in
out
in
out
in
out
in
call
loop
iret
call
loop
push
loop
in
loope
in
jecxz
in
loope
in
in
in
loop
in
in
in
in
in
call
loop
nop
call
loop
addr16
in
loope
in
in
in
out
in
call
loop
popf
call
loop
add
loop
push
call
loop
inc
out
in
out
in
in
in
loope
in
in
in
loop
in
loop
in
in
in
out
in
loope
in
loope
in
out
in
loope
in
in
in
in
in
jecxz
in
in
in
in
in
out
in
jecxz
in
out
in
loope
in
loope
in
out
in
in
in
out
in
loop
in
in
in
in
in
call
loop
sub
loop
mov
loop
sub
loop
inc
in
in
call
loop
jl
loop
xor
loop
sub
loop
sub
loop
out
loop
push
jecxz
in
jecxz
in
call
loop
sub
call
loop
js
loop
jae
loop
loop
in
in
in
loope
in
out
in
out
in
jmp
loop
and
loop
sti
loope
in
call
loop
sbb
loop
fwait
call
loop
sbb
loop
repnz
in
out
in
jmp
loop
dec
loop
in
loop
in
out
in
loop
in
jecxz
in
out
in
loope
in
out
in
out
in
in
in
in
in
out
in
in
in
loop
in
out
in
in
in
loope
in
loope
in
loop
in
loop
in
loop
in
jecxz
in
loope
in
jecxz
in
jecxz
in
jecxz
in
in
in
jecxz
in
in
in
in
in
out
in
jmp
loop
and
loop
sbb
loop
jge
loop
xor
loop
push
call
loop
mov
loop
inc
out
in
loop
in
in
in
in
in
in
in
out
in
loop
in
out
in
loop
in
jmp
loop
xor
loop
push
loop
in
call
loop
inc
jecxz
in
in
in
loop
in
out
in
jmp
loop
mov
loop
lcall
in
loope
in
call
loop
and
loop
xchg
out
in
call
loop
xchg
jecxz
in
jmp
loop
icebp
out
in
out
in
out
in
in
in
loop
in
call
loop
loope
in
out
in
out
in
in
in
in
in
in
in
in
in
jecxz
in
in
in
out
in
loop
in
loop
in
call
loop
shr
loop
arpl
loop
add
loop
pop
in
in
out
in
loope
in
in
in
in
in
jecxz
in
out
in
out
in
out
in
call
loop
sbb
loop
aas
call
loop
mov
jecxz
in
jmp
loop
icebp
call
loop
add
loop
or
in
in
in
in
out
in
jecxz
in
in
in
loope
in
jecxz
in
out
in
in
in
in
in
loop
in
in
in
in
in
in
in
loop
in
out
in
in
in
loope
in
out
in
in
in
jmp
loop
stc
call
loop
arpl
loop
repnz
in
out
in
in
in
loop
in
loop
in
out
in
loop
in
out
in
out
in
out
in
loop
in
loop
in
in
in
loop
in
in
in
loop
in
jmp
loop
loop
loop
loop
out
call
loop
ret
in
in
out
in
in
in
loop
in
loop
in
call
loop
call
jmp
loop
jecxz
in
call
loop
fsub
loop
pusha
out
in
call
loop
sub
in
in
call
loop
mov
loop
jge
loop
push
in
in
out
in
out
in
loope
in
call
loop
sub
loop
sbb
loop
inc
out
in
loope
in
loop
in
jecxz
in
jecxz
in
in
in
in
in
call
loop
sub
loop
mov
jecxz
in
out
in
out
in
jmp
loop
push
jmp
loop
lret
loop
in
jecxz
in
in
in
loop
in
out
in
in
in
loop
in
call
loop
das
in
in
in
in
jmp
loop
sbb
jmp
loop
outsl
jecxz
in
jecxz
in
jecxz
in
loope
in
in
in
out
in
in
in
out
in
call
loop
and
loop
sbb
loop
push
jecxz
in
jecxz
in
in
in
out
in
jmp
loop
loopne
loop
push
out
in
in
in
loop
in
in
in
jecxz
in
in
in
jecxz
in
in
in
jecxz
in
call
loop
enter
push
out
in
call
loop
stos
call
loop
and
loop
xchg
loop
jae
loop
jle
loop
push
in
in
in
in
in
in
in
in
out
in
in
in
in
in
in
in
out
in
out
in
in
in
loop
in
jmp
loop
je
loop
stos
in
in
jecxz
in
call
loop
stos
in
in
jmp
loop
enter
mov
loop
mov
loop
lock
in
out
in
out
in
out
in
in
in
in
in
out
in
jecxz
in
call
loop
add
loop
adc
loop
ret
out
in
out
in
out
in
out
in
loop
in
out
in
in
in
out
in
loop
in
in
in
in
in
in
in
loope
in
loop
in
out
in
out
in
call
loop
xor
in
in
out
in
out
in
out
in
in
in
jecxz
in
jmp
loop
push
out
in
jmp
loop
xchg
in
in
out
in
in
in
jecxz
in
in
in
loope
in
jecxz
in
out
in
in
in
out
in
call
loop
enter
inc
call
loop
stc
in
in
call
loop
fucom
loop
mov
loop
jl
loop
mov
loop
repz
in
call
loop
loopne
loop
imul
in
in
in
jmp
loop
scas
out
in
out
in
loop
in
jecxz
in
out
in
loope
in
call
loop
aaa
call
loop
insl
out
in
jecxz
in
jecxz
in
in
in
loop
in
out
in
out
in
out
in
out
in
out
in
in
in
in
in
in
in
jmp
loop
lock
in
out
in
loop
in
out
in
in
in
jecxz
in
in
in
jecxz
in
jecxz
in
call
loop
jecxz
loop
daa
jecxz
in
call
loop
xchg
out
in
jecxz
in
loope
in
in
in
in
in
out
in
in
in
jecxz
in
call
loop
xchg
loop
in
loope
in
in
in
jmp
loop
cmpsb
in
in
loop
in
loop
in
out
in
call
loop
movsl
loope
in
in
in
out
in
call
loop
inc
call
loop
or
loop
pop
in
in
in
in
in
in
in
in
jecxz
in
out
in
jmp
loop
sbb
loop
push
jecxz
in
loope
in
loope
in
loope
in
out
in
call
loop
or
loop
loop
in
in
in
loope
in
in
in
loop
in
in
in
jecxz
in
jmp
loop
fs
in
in
in
loope
in
jmp
loop
push
loop
es
in
loop
in
out
in
loop
in
loop
in
out
in
in
in
in
in
out
in
call
loop
sub
loop
pop
jmp
loop
shl
loop
stc
jecxz
in
in
in
in
in
in
in
in
in
out
in
call
loop
fsub
loop
jmp
loop
lods
in
in
out
in
loop
in
in
in
in
in
in
in
call
loop
out
in
in
out
in
loope
in
out
in
in
in
jecxz
in
jecxz
in
in
in
jecxz
in
out
in
loope
in
in
in
out
in
loope
in
jecxz
in
in
in
in
in
jmp
loop
jae
loop
imul
loop
jg
loop
pop
out
in
in
in
in
in
loope
in
loop
in
call
loop
jle
loop
and
in
loope
in
call
loop
int
loop
mov
loop
fwait
loop
in
out
in
in
in
call
loop
xchg
out
in
in
in
out
in
call
loop
lock
in
loop
in
in
in
in
in
call
loop
aas
jmp
loop
fs
in
loop
in
in
in
in
in
out
in
out
in
out
in
loop
in
in
in
in
in
in
in
in
in
loope
in
in
in
out
in
call
loop
fsubp
loop
cmpsl
call
loop
push
out
in
loope
in
out
in
loop
in
in
in
jecxz
in
in
in
out
in
out
in
loop
in
in
in
call
loop
test
loop
data16
in
jecxz
in
out
in
call
loop
pop
out
in
out
in
jecxz
in
in
in
loop
in
in
in
out
in
in
in
in
in
loop
in
in
in
in
in
loop
in
call
loop
jb
loop
xchg
loop
pop
in
in
in
in
in
in
out
in
out
in
in
in
in
in
out
in
call
loop
pavgw
in
out
in
loope
in
in
in
loop
in
loop
in
out
in
loop
in
in
in
jecxz
in
in
in
jecxz
in
out
in
loop
in
jmp
loop
mov
out
in
in
in
out
in
in
in
in
in
out
in
jmp
loop
adc
loop
xor
loop
lret
loop
in
loop
in
call
loop
push
out
in
loop
in
call
loop
ds
loop
dec
out
in
call
loop
loop
mov
in
in
loop
in
in
in
loope
in
in
in
jmp
loop
mov
out
in
in
in
out
in
jecxz
in
out
in
jecxz
in
out
in
jecxz
in
call
loop
mov
loop
and
out
in
jecxz
in
out
in
loope
in
call
loop
or
loop
test
loop
aad
loop
jg
loop
out
in
out
in
in
in
in
in
loope
in
out
in
out
in
in
in
in
in
loope
in
loop
in
out
in
call
loop
add
in
in
call
loop
or
loop
xchg
loope
in
in
in
out
in
in
in
in
in
out
in
call
loop
fwait
in
in
loope
in
call
loop
test
loop
daa
in
in
out
in
call
loop
insb
loope
in
call
loop
test
loop
cmp
loop
std
in
in
jecxz
in
jecxz
in
call
loop
mov
loop
js
loop
scas
loope
in
loop
in
jecxz
in
out
in
out
in
in
in
jecxz
in
loope
in
in
in
loope
in
in
in
jecxz
in
in
in
call
loop
dec
out
in
jecxz
in
out
in
loop
in
jecxz
in
loope
in
in
in
loope
in
out
in
out
in
out
in
jecxz
in
out
in
jecxz
in
in
in
jecxz
in
loop
in
out
in
in
in
out
in
call
loop
mov
call
loop
pop
in
in
loop
in
in
in
jecxz
in
loope
in
in
in
loop
in
jmp
loop
adc
loop
loope
loop
mov
in
in
in
in
jecxz
in
call
loop
push
in
in
call
loop
fsubrp
loop
outsl
in
in
out
in
in
in
in
in
loop
in
in
in
in
in
out
in
in
in
in
in
call
loop
inc
out
in
loope
in
call
loop
add
loop
repz
loop
data16
in
loop
in
call
loop
cmpsb
jecxz
in
jecxz
in
call
loop
es
in
in
in
loope
in
jecxz
in
jecxz
in
jmp
loop
imul
loop
adc
loop
in
loop
cmpsl
call
loop
and
jecxz
in
loope
in
call
loop
and
in
out
in
jecxz
in
call
loop
lods
out
in
loop
in
call
loop
mov
loop
and
loop
movsl
loope
in
out
in
out
in
out
in
jmp
loop
dec
loop
in
in
in
loope
in
loop
in
loop
in
loop
in
loop
in
in
in
out
in
in
in
in
in
out
in
in
in
in
in
loope
in
call
loop
sub
in
loop
in
jecxz
in
in
in
call
loop
into
out
in
call
loop
loop
inc
jmp
loop
das
jmp
loop
sahf
out
in
call
loop
xchg
in
in
jecxz
in
jecxz
in
loop
in
in
in
loope
in
jecxz
in
loop
in
call
loop
scas
jecxz
in
out
in
loope
in
out
in
loop
in
jecxz
in
out
in
out
in
loop
in
out
in
out
in
out
in
in
in
out
in
loop
in
out
in
loop
in
in
in
loope
in
call
loop
or
loop
pop
in
in
call
loop
repnz
in
jecxz
in
call
loop
adc
out
in
jecxz
in
in
in
jmp
loop
popa
in
in
in
in
out
in
jmp
loop
pop
call
loop
iret
in
in
jecxz
in
call
loop
ljmp
in
in
in
call
loop
shl
in
out
in
in
in
out
in
loope
in
call
loop
dec
jmp
loop
jmp
loop
xor
loop
cmpsb
in
in
jmp
loop
lods
jecxz
in
in
in
in
in
jecxz
in
out
in
loope
in
out
in
out
in
out
in
call
loop
mov
loop
cmp
loop
mov
loop
outsb
loop
in
call
loop
push
in
in
jmp
loop
jne
loop
loop
in
loop
in
loop
in
jecxz
in
loop
in
out
in
loop
in
call
loop
dec
out
in
jecxz
in
out
in
loop
in
out
in
out
in
in
in
loop
in
in
in
out
in
in
in
in
in
out
in
loop
in
out
in
call
loop
cmp
loop
cltd
in
in
loop
in
out
in
out
in
in
in
out
in
loope
in
in
in
in
in
jecxz
in
out
in
in
in
jecxz
in
loop
in
out
in
loop
in
in
in
out
in
out
in
out
in
call
loop
es
loop
push
jecxz
in
loop
in
loope
in
loop
in
loop
in
in
in
out
in
out
in
loop
in
jecxz
in
loop
in
jecxz
in
jecxz
in
in
in
in
in
out
in
out
in
out
in
in
in
in
in
out
in
call
loop
js
loop
xor
loop
stos
out
in
jecxz
in
loop
in
call
loop
mul
loop
mov
in
in
in
in
loop
in
out
in
jecxz
in
jecxz
in
out
in
in
in
in
in
out
in
in
in
jecxz
in
in
in
jecxz
in
loope
in
out
in
in
in
jecxz
in
in
in
out
in
loop
in
loope
in
out
in
call
loop
cmpsl
out
in
out
in
loop
in
in
in
in
in
in
in
loop
in
jecxz
in
jecxz
in
jmp
loop
mov
loop
inc
in
in
in
in
loop
in
loop
in
in
in
out
in
call
loop
sub
loop
int
loop
xor
in
in
loop
in
jecxz
in
in
in
in
in
out
in
loope
in
call
loop
add
loop
mov
call
loop
daa
in
in
out
in
call
loop
fnclex
loop
mov
loop
lret
in
in
out
in
out
in
in
in
out
in
jecxz
in
loope
in
in
in
in
in
in
in
in
in
call
loop
loopne
loop
add
loop
xchg
in
in
jmp
loop
push
out
in
in
in
call
loop
mov
call
loop
pop
jmp
loop
mov
in
in
loope
in
jecxz
in
in
in
loop
in
loop
in
out
in
out
in
call
loop
lods
out
in
out
in
loop
in
call
loop
test
loop
and
loop
adc
loope
in
in
in
out
in
out
in
in
in
out
in
out
in
jecxz
in
in
in
out
in
loop
in
call
loop
fsub
loop
jae
loop
jo
loop
loopne
loop
dec
out
in
call
loop
loop
loop
inc
out
in
in
in
out
in
call
loop
test
loop
in
in
call
loop
xchg
loop
or
loop
xchg
loop
out
loop
mov
loop
shl
in
out
in
out
in
out
in
in
in
call
loop
mov
loop
cmpsl
call
loop
data16
in
in
in
jecxz
in
jmp
loop
shl
loop
fwait
in
in
jecxz
in
out
in
out
in
out
in
jmp
loop
jb
loop
gs
loop
das
out
in
out
in
call
loop
dec
loop
in
out
in
jmp
loop
dec
in
in
in
in
in
in
in
in
in
in
loope
in
in
in
call
loop
mov
loop
jno
loop
movsl
loop
in
loop
in
jmp
loop
xchg
in
in
out
in
out
in
out
in
in
in
in
in
jecxz
in
out
in
call
loop
imul
in
call
loop
xchg
loop
cld
out
in
out
in
loop
in
in
in
call
loop
add
loop
imul
in
call
loop
and
out
in
out
in
jecxz
in
in
in
loope
in
out
in
call
loop
mov
loope
in
in
in
jecxz
in
loop
in
in
in
call
loop
mov
jmp
loop
ret
jecxz
in
out
in
out
in
call
loop
stos
out
in
jecxz
in
call
loop
mov
loop
popf
out
in
out
in
jmp
loop
jle
loop
enter
push
loop
hlt
call
loop
inc
out
in
jmp
loop
in
in
out
in
jecxz
in
loop
in
loop
in
call
loop
xchg
loop
sub
in
in
out
in
jecxz
in
out
in
call
loop
and
loop
and
loop
push
in
in
call
loop
and
in
jecxz
in
call
loop
in
in
call
loop
adc
loop
inc
out
in
loop
in
call
loop
pop
out
in
jecxz
in
in
in
jmp
loop
and
loop
push
out
in
call
loop
inc
loop
in
in
in
out
in
in
in
loope
in
in
in
out
in
loope
in
out
in
loope
in
call
loop
xor
call
loop
sbb
loop
mov
loop
outsl
out
in
jecxz
in
loope
in
loop
in
loope
in
out
in
in
in
jecxz
in
in
in
call
loop
sbb
in
in
in
in
jmp
loop
jl
loop
mov
loop
adc
loop
dec
in
in
in
in
add
pop
sub
cwtl
dec
jp
ljmp
iret
jle
add
mull
inc
add
movsb
add
xlat
orps
add
cmp
jbe
add
jmp
add
movsl
add
in
ja
add
les
insb
int3
cs
push
add
cmc
push
add
leave
jbe
nop
dec
data16
in
mov
outsl
and
or
xchg
iret
pop
add
sbb
and
incl
add
mov
add
add
bound
jmp
and
jge
inc
add
mov
icebp
jg
push
loopne
xchg
push
add
mov
jecxz
in
pop
add
cmpsl
add
add
repz
pop
add
add
inc
add
pop
ds
add
fisubs
add
and
incl
inc
add
cltd
lock
out
imul
add
xor
call
dec
ljmp
jo
ljmp
add
daa
add
sti
mov
inc
add
popa
add
pop
mov
cmp
add
cld
mov
add
inc
add
ds
lcall
inc
add
stos
push
outsb
ret
add
loope
lahf
sarb
add
xor
call
xchg
or
adc
lds
dec
hlt
sub
cmpsb
add
loopne
pop
ljmp
add
sub
add
sub
inc
add
outsb
pop
int3
outsb
pushf
mov
pop
lds
rolb
add
mov
add
jo
ljmp
mov
pop
jg
lret
inc
add
pop
insb
push
add
mov
or
inc
add
out
add
inc
add
lods
je
rolb
dec
push
bound
jns
push
add
insb
inc
add
pop
add
out
leave
ljmp
ja
addl
jmp
add
add
loopne
jecxz,pt
psllw
push
mov
jmp
ficoms
mov
xchg
push
push
inc
add
jp
addl
loopne
popa
add
test
sbb
dec
push
jnp
add
cs
addl
add
adc
ljmp
rolb
pop
add
rorl
add
call
and
incl
inc
add
xchg
jmp
add
mov
add
adc
incl
jmp
scas
xchg
inc
add
mov
push
jo
decl
add
fisubl
add
adc
jmp
add
femms
stos
stc
cmp
add
scas
xchg
scas
sub
out
adc
enter
or
pop
cltd
xchg
jo
pushl
add
fwait
lds
sub
fsubrs
add
in
lds
in
push
js
sbb
fidivl
or
jmp
add
add
push
add
cld
sub
add
add
addl
push
add
std
xchg
pop
pop
outsl
mov
mov
add
push
pusha
add
cmp
add
add
ja
add
jmp
movsl
add
jmp
xor
ljmp
xor
pushl
add
bound
jmp
add
imul
icebp
test
add
jae
call
adc
decl
add
adc
incl
decl
mov
add
add
mov
add
arpl
decl
dec
jbe
insl
xor
incl
add
js
add
lds
pushf
cmpsb
add
cmc
xchg
push
add
scas
bound
jmp
mov
out
mov
cmp
mov
cmpsl
add
inc
add
adc
lcall
xchg
and
jmp
add
and
xchg
inc
add
cmp
out
mov
addb
insl
xor
imul
loope
addb
add
inc
add
out
cmc
mov
add
incl
inc
add
push
add
cmp
add
add
or
add
scas
add
add
movb
add
and
call
add
cmp
mov
addb
iret
call
call
fs
daa
add
sbb
ss
dec
inc
add
cmp
test
addl
dec
add
mov
lea
insb
push
pop
dec
shrb
leave
mov
in
jl
sahf
push
movsl
add
ss
das
cs
adc
add
add
ficompl
cmp
add
push
pop
sbb
add
in
inc
add
fdivl
add
adc
call
add
imul
adc
pop
add
pusha
add
sub
add
cwtl
pop
jmp
or
add
cmp
into
inc
add
inc
add
xchg
mov
inc
add
sub
mov
pop
jne
outsl
test
out
testl
add
pop
fiadds
call
push
mov
xor
call
jmp
jp
push
add
add
xchg
leave
loop
add
out
mov
add
adc
decl
mov
mov
ljmp
inc
add
call
add
jmp
lods
jmp
dec
adc
decl
sub
add
dec
aaa
pmuludq
sti
xchg
in
mov
scas
mov
inc
add
ret
sub
add
lret
fsubrl
push
mov
les
mov
loop
stos
add
add
repz
add
mov
add
test
adc
ljmp
add
cld
mov
add
daa
add
jmp
call
jae
decl
test
xchg
mov
add
sub
in
xchg
adc
std
mov
punpckhdq
insl
xchg
sahf
fnstenv
xchg
pop
and
push
jge
sub
dec
jmp
sbb
add
mov
add
iret
decl
add
call
cmp
add
add
add
insl
enter
shl
cs
ret
add
mov
adc
decl
pop
add
xchg
adc
jmp
ljmp
les
mov
popa
add
dec
data16
jmp
add
mov
fmul
sahf
fldt
idivb
lds
aas
test
iret
mov
test
add
pop
sbb
in
add
lods
sbb
push
add
ljmp
xor
ljmp
adc
decl
jno
ljmp
add
jge
add
push
sub
adc
decl
cli
xlat
push
cmc
mov
add
pusha
add
sub
cld
pushf
jae
cli
xchg
push
pop
inc
add
out
push
pop
jbe
add
jmp
clc
ss
mov
pushl
add
sahf
inc
add
push
loop
hlt
lea
mov
mov
jbe
xchg
mov
bound
decl
cli
leave
icebp
jg
add
sbb
rolb
es
test
add
mov
and
call
jmp
arpl
call
call
add
roll
fistpl
and
pushl
add
aaa
sti
add
call
cmp
sarl
sbb
add
lcall
enter
or
repz
add
add
ret
add
call
ljmp
add
pushl
data16
pop
mov
xor
jmp
add
adc
daa
add
arpl
cli
stos
nop
roll
bound
incl
call
lods
pop
ss
les
mov
iret
cmp
add
call
js
add
add
out
int
pop
fistpl
je
pop
adc
cld
lret
sarl
outsb
fcoms
add
push
add
add
xchg
pop
fildll
stos
mov
cmp
cmp
scas
add
dec
jno
lcall
lcall
fldenv
inc
add
push
jecxz
or
icebp
addl
add
cmp
add
fidivl
pushl
add
dec
push
scas
inc
add
addb
pop
out
icebp
jmp
add
add
jge
xchg
push
or
ds
clc
mov
mov
add
add
mov
dec
loopne
pop
cmp
add
cmp
push
add
ljmp
rolb
in
shlb
add
movb
adc
jmp
insb
jns
lds
bound
decl
mov
sub
sub
push
decl
pop
add
inc
add
mov
hlt
inc
add
popa
add
roll
rcrl
addl
cs
add
push
decl
add
scas
cmc
jmp
aad
push
std
push
and
incl
add
incl
jmp
inc
add
popl
add
pop
push
pop
add
pop
mov
pop
sbb
add
xor
call
loop
pop
xchg
jb
decl
shrl
add
add
repnz
mov
cmc
je
push
xor
add
lea
jg
mov
add
cli
int
pop
adc
je
add
xor
lcall
adc
sub
xor
pushf
pop
sub
test
aam
cli
mov
insl
pop
mov
pop
sub
insb
imul
call
inc
add
sbb
in
mov
add
add
mov
add
call
dec
mov
add
addb
add
sbb
cli
mov
shrl
out
addl
xchg
push
add
in
push
std
mov
add
clc
pushf
in
or
add
daa
add
pop
loopne
sub
and
call
add
add
add
push
movsl
add
mov
movl
insb
sub
add
mov
jbe
rolb
into
addb
jmp
add
data16
add
and
call
sti
les
dec
push
sub
inc
add
aad
add
decl
add
jnp
rol
add
loopne
mov
out
js
add
popf
inc
add
mov
add
or
roll
mov
gs
scas
imul
hlt
in
sub
add
pushl
push
lods
pop
ret
mov
add
pop
repnz
add
inc
add
loope
aaa
jns
imul
fidivl
add
jle
add
ds
sbb
lcall
cld
xchg
sar
sbb
out
in
sub
pushl
ljmp
idiv
and
lcall
movsb
add
les
das
cmpsb
add
add
daa
add
movsl
add
add
test
clc
addl
jmp
add
sbb
add
pushf
mov
repnz
sbb
stc
xchg
arpl
call
jb
incl
jne
inc
add
pushl
call
pusha
add
push
outsb
jbe
jmp
add
bound
call
pop
test
mov
add
scas
les
or
jl
and
pop
aam
movb
loopne
or
add
sub
jb
pushl
outsl
pop
adc
in
je
add
xchg
mov
adc
lcall
add
mov
xchg
mov
popa
iret
xor
mov
push
mov
sub
push
push
push
push
push
call
push
push
call
test
jne
mov
lea
push
push
push
push
call
push
call
xchg
cld
lea
sub
mov
lock
lea
lock
je
ret
cmp
add
cmp
jnp
xor
jmp
add
arpl
call
pushl
fnclex
add
mov
mov
xchg
fistpl
add
add
jns
rorl
clc
add
aaa
adc
call
add
js
adc
add
add
call
add
cmp
fidivs
stc
ja
add
add
pushl
xchg
jecxz
mov
nop
insl
or
add
mov
fcoms
add
fiadds
call
mov
mov
aas
or
pushl
push
jbe
add
fs
sub
add
addl
add
dec
jmp
add
mov
rorl
in
icebp
lds
addr16
movl
jle
cmp
or
addb
mov
adc
lcall
xor
add
pusha
add
pop
add
add
addl
jecxz
xor
decl
sub
lret
mov
add
into
mov
adc
ljmp
push
add
or
pop
jmp
fcoms
mov
add
push
add
add
fadds
add
or
add
mov
sub
ss
add
add
push
cltd
push
pop
sub
add
push
pop
mov
lods
into
fiaddl
call
dec
mov
dec
lock
jl
add
movl
pop
mov
add
add
fsubr
cmp
or
sub
or
add
rolb
mov
sbb
int3
ds
in
pop
rclb
add
sub
lcall
push
add
xchg
je
addl
add
add
test
cmp
push
mov
or
das
dec
jge
addl
xor
add
mov
mov
add
jae
mov
push
addl
add
icebp
fwait
mov
data16
add
mov
push
sbb
add
mov
add
pop
mov
jno
call
add
je
jbe
out
xchg
addb
mov
pop
sti
out
lods
dec
addb
into
hlt
sbb
je
in
pop
mov
add
add
inc
add
cmp
test
aas
imul
sbb
add
shl
add
push
add
jmp
add
mov
mov
push
idiv
sub
mov
outsl
data16
add
add
mov
sti
cmp
mov
mov
mov
pop
ss
pushf
push
add
mov
push
loop
data16
mov
inc
add
jno
lcall
lods
mov
add
outsb
jnp
dec
outsb
inc
add
cmc
addl
add
cli
inc
add
lods
push
movb
fdivrp
in
out
daa
add
jb
decl
mov
loopne
jns
loope
push
lahf
xchg
and
call
push
pop
push
cmp
incl
imul
add
aas
mov
add
and
adc
decl
xchg
test
add
xchg
sar
addl
cmp
mov
mov
rcrl
je
dec
fisubrs
mov
add
and
call
movb
add
sub
add
xlat
les
inc
add
and
ljmp
add
inc
add
and
inc
add
cli
sbb
add
and
incl
sub
cmp
cli
cmp
push
add
adc
push
roll
popf
push
add
mov
lcall
lods
xor
in
mov
add
in
jecxz
adc
xchg
lods
xor
add
push
add
testl
int3
call
bound
inc
add
out
pusha
add
ds
pop
cmp
lods
movsl
add
add
add
shlb
push
adc
incl
and
lcall
add
cmp
add
loop
lret
bound
incl
cmp
xor
call
add
xor
pushl
add
add
int
add
popa
add
mov
cwtl
rol
add
add
xchg
out
mov
movsb
add
adc
cs
cmp
add
ret
shl
in
adc
decl
add
add
rclb
add
inc
add
add
lcall
mov
cmp
add
add
std
addb
pop
add
jns
push
pop
push
add
mov
add
fsubrs
add
ljmp
adc
add
adc
add
inc
add
push
add
ds
add
sbb
jl
add
push
xchg
aad
dec
jle
repnz
aam
add
pop
push
pop
call
push
add
psubsb
adc
int3
jo
ljmp
pop
sbb
in
mov
mov
mov
xchg
mov
add
add
add
js
add
out
push
inc
add
mov
add
sbb
jmp
push
add
pop
js
add
xchg
mov
test
add
mov
add
mov
add
jne
add
add
add
test
jg
add
add
movb
or
add
push
mov
addb
pop
xor
ljmp
lds
pushf
xchg
pop
xchg
test
xchg
lret
movl
add
test
mov
add
add
pushl
sub
and
incl
add
add
dec
push
add
aaa
xor
cmp
add
add
aad
add
and
jmp
sub
fwait
push
mov
add
jle
aaa
mov
and
xchg
sarl
add
lahf
movsb
add
xor
dec
jb
decl
add
mov
pop
sbb
jb
call
add
addl
dec
arpl
ljmp
cmp
add
sub
add
in
jp
jge
add
add
call
bound
lcall
ja
fnstsw
mov
xchg
pop
cs
fidivrs
je
add
mov
cltd
sub
add
inc
add
in
push
xor
call
xor
call
ret
add
xchg
inc
add
jae
incl
decl
cmp
add
sub
add
sahf
pushl
add
ja
push
add
adc
jmp
add
mov
xchg
les
jl
pop
jg
popa
add
in
clc
sub
fstpt
add
loop
xor
lcall
clc
cmp
and
incl
lret
add
add
add
adc
adc
ljmp
imul
jle
adc
jns
mov
push
add
mov
add
jmp
lcall
popa
add
fs
loope
xor
pushl
call
add
lea
mov
add
ljmp
dec
jle
mov
add
xchg
movsl
add
movb
add
clc
insl
decl
outsb
inc
add
decl
add
loope
sbb
mov
nop
sbb
ficompl
test
pop
ja
add
mov
pop
cmp
insb
mov
mov
ja
and
pushl
mov
or
add
sub
fstl
push
cmp
add
add
add
add
cltd
pop
int
sub
cli
scas
aad
add
add
add
add
jl
enter
dec
inc
add
mov
sbb
push
cmp
lret
jmp
xchg
cmpsb
add
jp
lods
push
add
add
divb
jmp
jnp
gs
jne
cli
fidivl
push
std
mov
pop
add
loop
test
mov
cld
xchg
mov
or
test
mul
add
xchg
mov
add
jmp
dec
movsb
add
movsb
add
test
fistps
add
jge
loop
dec
idivb
add
addl
pushf
pop
add
scas
mov
jp
add
loope
int
leave
daa
add
add
clc
or
add
icebp
pop
iret
dec
icebp
fwait
test
call
pop
dec
xchg
cmp
add
inc
add
inc
add
or
and
inc
add
add
ljmp
add
add
and
lcall
add
call
adc
je
rol
add
or
shl
pop
xchg
movb
add
incl
add
stc
add
fsts
movl
ljmp
and
cmp
or
add
jno
call
sti
in
imul
add
mov
cwtl
test
add
add
cmp
fistpl
lods
in
push
add
ljmp
add
sarl
in
push
add
cwtl
dec
jno
adc
stos
ss
cmp
repnz
add
add
mov
popa
add
cmp
sbb
xchg
into
ljmp
call
call
hlt
and
fsubrs
pop
sub
add
and
aad
scas
inc
add
icebp
cwtl
ss
movsb
add
shll
add
cli
sub
scas
push
pop
dec
jne
add
xor
call
adc
jmp
add
call
add
js
add
push
add
add
add
mov
xchg
out
test
incl
call
add
in
adc
ljmp
pop
push
aas
test
xchg
nop
lds
in
dec
out
das
push
sahf
lret
pop
jp
out
jl
add
add
insl
xchg
addl
shlb
add
addl
add
fidivl
add
ljmp
movsl
add
mov
add
add
pop
pop
jmp
fsin
inc
add
add
or
lds
or
std
mulb
lea
ljmp
repnz
addl
add
and
ljmp
not
sub
roll
mov
add
or
lret
cmc
pop
clc
cltd
mov
idiv
xor
jmp
xor
add
add
cmp
stc
and
pushl
add
and
mov
add
rcl
outsl
dec
push
inc
add
dec
cmpsl
add
cmc
inc
add
cmp
jp
add
add
add
insb
fsts
push
add
mov
cwtl
mov
pop
outsl
mov
add
out
or
push
add
lds
insl
outsl
icebp
notl
loopne
and
jo
call
call
lret
mov
xchg
or
add
add
push
testl
add
movsb
add
add
add
call
insb
push
dec
daa
add
mov
mov
sbb
add
mov
pushl
add
inc
add
add
push
idivb
clc
aas
push
cwtl
cli
push
add
lock
incl
call
add
movsb
add
xor
pushl
pushf
xor
pushl
jo
lcall
pop
sub
add
add
adc
xor
jmp
lcall
mov
push
sbb
add
xor
out
and
into
inc
add
or
cmovbe
repz
xor
pop
push
xchg
in
mov
add
je
xor
xchg
cmpsb
add
add
jmp
push
je
push
pop
cmp
add
pop
insb
pop
clc
mov
popa
add
incb
add
pop
mov
rorb
enter
or
jp
shr
test
and
call
dec
adc
mov
add
scas
frstor
call
xor
lcall
mov
loop
in
movsl
add
add
movl
lahf
out
fcompp
jp
cltd
xlat
test
pop
add
add
jmp
lcall
in
sub
add
lret
sub
add
pop
addl
clc
inc
add
cmp
add
test
jge
mov
push
add
adc
mov
mov
pop
shlb
add
addb
in
scas
xchg
les
cli
lods
dec
mov
mov
add
or
jae
mov
and
incl
add
mov
add
jp
and
pushl
ret
add
pusha
add
leave
mov
mov
mov
pop
mov
add
lahf
add
incl
add
sbb
fistl
add
lret
pop
sbb
push
insl
out
in
dec
fisubrs
jae
incl
add
add
jge
lret
cmc
pop
fdivs
pushl
mov
jge
add
jae
ljmp
cmp
frstor
add
jp
inc
add
cltd
dec
icebp
mov
add
fwait
xlat
mov
add
imul
add
add
movl
add
ss
loopne
inc
add
or
add
mov
rclb
and
negb
add
outsl
jnp
fcomps
sbb
call
jl
add
mov
mov
test
fimuls
loop
out
ja
insb
dec
pop
jp
xchg
and
movl
iret
xrelease
divb
mov
jmp
popf
xchg
jecxz
int
add
cs
jp
loop
roll
mov
mov
mov
add
scas
roll
add
test
cmpsl
add
fldl
xor
jmp
add
out
mov
pop
push
add
sub
add
sub
xor
decl
repz
pop
mov
add
aad
iret
jl
add
add
lcall
lcall
addb
imul
xor
add
add
outsl
push
add
icebp
or
test
cltd
fdivrl
add
dec
pop
sub
add
add
js
add
add
aad
add
stos
stos
cmp
bound
incl
sbb
out
mov
loopne
xchg
add
jne
add
add
scas
iret
icebp
lret
jmp
add
add
add
fsubr
pop
lret
insb
addl
add
stos
test
decb
or
add
add
mov
add
rorl
decl
add
imul
mov
add
add
rolb
adc
call
sbb
push
xor
decl
add
stc
cmovle
mov
cmc
dec
mov
push
repnz
pop
xlat
or
jg
xchg
cmc
mov
inc
add
add
in
xchg
cld
ljmp
call
cs
test
add
push
add
call
xchg
fabs
add
pop
lret
inc
add
mov
cmpsl
add
add
test
mov
addl
icebp
push
in
sbb
decl
or
adc
add
addl
add
push
add
jle
inc
add
mov
dec
or
pop
dec
mov
les
out
dec
pusha
add
xor
ljmp
addb
aad
xor
lock
call
pushl
ret
add
pop
lods
pop
repnz
inc
add
js
add
jbe
add
dec
sub
adc
pushl
add
and
scas
sub
add
insl
scas
mov
sti
scas
sub
cmp
arpl
pushl
pop
sbb
jae
pushl
xorps
xchg
in
cmp
add
out
jne
add
push
add
and
ljmp
in
loopne
leave
add
les
js
or
cmp
in
shrl
lea
movsl
add
fists
ljmp
add
call
movsl
add
sub
add
mov
std
xor
call
lahf
or
add
fbld
ljmp
add
test
add
add
pop
add
pushl
push
jle
test
add
pushl
pushl
test
add
xor
add
mov
add
aam
sub
mov
add
xlat
mov
jmp
call
add
ret
in
xchg
movl
lcall
dec
cmpsb
add
test
xchg
jmp
call
sub
in
jne
pusha
add
jmp
xchg
push
push
mov
out
cmp
adc
out
inc
add
push
clc
lea
test
cmp
add
add
pop
movb
add
sub
cmp
dec
aad
lods
pop
push
lods
adc
jmp
jmp
adc
repz
push
add
in
stos
movsl
add
ja
mov
xchg
outsb
lret
add
and
lcall
and
add
push
inc
add
add
addb
mov
add
add
xchg
jnp
cli
mov
add
add
aaa
and
call
jg
add
add
mov
jmp
xor
lcall
xchg
movsl
add
add
imul
rorb
dec
outsb
jbe
int
cli
lock
ret
dec
pop
jnp
add
add
adc
mov
jns
mov
add
xchg
call
jae
mov
push
or
test
scas
movsb
add
out
dec
mov
add
xchg
rolb
rclb
sahf
js
add
decl
adc
call
cmp
inc
add
add
loope
movb
scas
stos
inc
add
xchg
xchg
rcrl
add
add
lcall
xlat
pop
adc
icebp
addl
add
dec
jg
addl
test
test
jmp
lea
add
or
push
fdivr
fstp
add
dec
int3
sbb
jecxz
pop
je
mov
add
xchg
sbb
ljmp
dec
inc
add
add
pop
ss
cmp
add
cli
fsubrl
mov
aas
imul
adc
decl
cwtl
dec
xchg
cmpsb
add
outsl
rolb
cmpsl
add
add
and
jmp
pop
or
mov
pop
adc
dec
jb
push
and
push
add
decl
add
call
int
mov
scas
mov
add
or
pop
sub
into
leave
mov
fsubr
mov
add
mov
add
add
int
inc
add
ss
pop
dec
push
test
fwait
lods
xchg
xor
jmp
add
aad
or
jmp
mov
push
add
add
outsb
xor
call
call
bound
jmp
mov
loope
das
out
jnp
add
add
popa
add
stos
pop
jmp
add
xchg
fsubl
add
adc
jmp
mov
add
add
mov
add
push
xor
mov
sub
lock
roll
aas
dec
clc
xchg
pop
jecxz
sub
mov
mov
add
aas
lock
or
jmp
add
fucomip
shrl
loop
mov
dec
cmpsl
add
xchg
dec
addl
ja
fistl
rolb
divl
or
xor
jo,pt
ljmp
push
je
test
mov
cli
nop
lea
rolb
add
add
add
cmpsb
add
add
add
add
hlt
ret
add
xchg
dec
lock
xchg
add
pushl
add
ljmp
add
jge
inc
add
xor
lcall
test
pop
sarl
jmp
and
lcall
rcrl
adc
cmp
test
mov
xor
inc
add
pushl
add
pop
popa
add
fst
mov
add
jp
sbb
add
fucomip
ljmp
add
mov
sbb
insb
cmp
jo
jmp
add
add
add
repz
or
mov
lcall
push
std
sbb
push
jecxz
mov
dec
sub
lahf
lock
dec
std
xchg
addl
jmp
add
add
fnstenv
cmp
xor
incl
jnp
add
repz
out
adc
ljmp
or
fiaddl
sti
mov
push
lahf
jecxz
mov
add
jmp
lea
je
add
jmp
add
pop
mov
repnz
popl
add
test
pop
sub
add
incl
add
adc
lcall
xchg
dec
lock
add
mov
add
addb
adc
incl
test
adc
pushl
pop
adc
push
ss
iret
or
insb
xchg
xchg
aas
ror
jp
add
into
in
jno
jmp
and
loopne
sbb
pop
in
jmp
or
pop
cmc
scas
mov
data16
jmp
dec
test
add
jno
decl
add
and
call
cmp
and
call
jge
mov
xchg
jae
mov
nop
mov
test
je
xchg
dec
insl
test
js
sub
insl
scas
and
ljmp
lcall
mov
out
add
jg
sbb
add
pop
popa
add
cmp
push
mov
cld
push
movsb
add
add
lcall
adc
push
aas
fisttpl
mull
incl
xor
decl
pop
pusha
add
out
fistps
dec
mov
dec
pushf
gs
add
cmp
jle
lret
pop
add
addl
lea
pushl
jmp
loopne
lds
popa
add
addl
jecxz
addl
cltd
movsl
add
incl
rclb
add
pop
dec
mov
push
add
incl
incl
ljmp
ljmp
mov
add
popf
fistps
mov
in
addl
test
repnz
ljmp
addb
push
aam
add
jns
add
inc
add
mov
cli
push
add
cmp
or
out
aas
xchg
jo
incl
pop
out
mov
add
pop
and
decl
add
add
sbb
js
std
dec
cltd
pop
push
and
jmp
fsubr
xchg
in
lds
data16
incl
xchg
pop
mov
and
add
add
mov
pop
leave
pop
lahf
or
jle
rcl
jecxz
pop
xchg
inc
add
or
push
or
add
call
sti
pop
add
popa
add
out
push
add
pusha
add
imul
add
mov
clc
in
mov
add
pushl
add
lcall
in
lods
fcomip
and
inc
add
aad
mov
cs
mov
mov
and
call
add
enter
push
add
cmp
insb
mov
jmp
and
incl
incl
add
push
add
xchg
iret
test
and
out
jae
ljmp
pop
jno
lcall
xchg
outsl
mov
pop
out
inc
add
add
je
adc
jg
lock
int3
mov
and
call
addl
add
xchg
fbld
punpckhbw
add
aas
and
pop
test
sbb
add
ljmp
add
add
jmp
mov
jae
lcall
dec
repz
lret
insl
pusha
add
lcall
add
add
pushf
aaa
punpckhdq
roll
ljmp
stc
sbb
mov
add
dec
xchg
sbb
add
push
pop
leave
mov
test
jno
cmp
cmp
add
movsb
add
js
add
adc
jge
sbb
add
add
jnp
add
pop
std
cmp
push
movsb
add
inc
add
jne
dec
repz
add
enter
add
mov
imul
mov
add
insb
xor
dec
jb
ljmp
adc
call
imul
add
pusha
add
and
lcall
ds
add
jl
out
push
cli
insb
xchg
mov
pop
pop
sub
add
addl
add
xchg
fs
add
inc
add
sbb
add
fmuls
aaa
lds
ret
jle
lahf
inc
add
stc
mov
add
xchg
repnz
imull
cmc
jmp
add
jnp
ljmp
add
add
inc
add
add
jo
call
push
out
clc
inc
add
jp
add
jmp
inc
add
mov
adc
mov
mov
bound
jmp
add
mov
pushl
inc
add
add
call
xor
incl
mov
jle
stos
jp
add
inc
add
add
imul
jl
add
mov
mov
mov
mov
or
add
test
int3
sbb
xchg
lds
xchg
xor
decl
add
cli
push
jecxz
fistpl
xor
add
pop
mov
mov
add
test
cmp
add
dec
rorb
add
cmp
xchg
aam
add
jmp
mov
sbb
xor
decl
ret
add
call
ljmp
add
bound
jmp
add
add
inc
add
add
call
lcall
jmp
adc
call
xchg
mulb
add
aad
mov
movl
xor
incl
fidivs
jmp
ljmp
lods
test
xchg
xor
js
addb
imul
add
loopne
add
jmp
add
bswap
dec
jbe
sub
xchg
cmp
addb
stc
test
lea
mov
add
shlb
movsl
add
jae
jl
cmp
int
jecxz
pop
and
push
xchg
pusha
add
lret
xor
incl
xor
pushl
mov
add
call
push
push
adc
call
incl
sahf
roll
add
in
nop
and
call
dec
jb
jmp
add
add
and
lcall
jo
pushl
clc
adc
insl
rol
add
pop
adc
call
cmp
sti
mov
add
scas
dec
cmp
iret
cwtl
addb
add
dec
push
add
push
std
add
push
add
mov
fwait
aaa
cmovle
leave
push
add
lcall
and
decl
sub
adc
jmp
jmp
cs
inc
add
dec
idivl
add
jns
add
decl
add
adc
ljmp
movsl
add
mov
jno
decl
add
add
loope
add
push
jno
jg
imul
add
mov
lock
push
xor
ficomps
test
inc
add
addb
insb
lret
add
mov
add
fiadds
incl
add
push
mov
adc
fnstenv
and
push
mov
jl
ficoml
xchg
dec
enter
mov
loope
aaa
popa
add
popa
add
out
stos
mov
add
xchg
adc
mov
or
pop
add
fiadds
add
sub
adc
jmp
decl
lock
sbb
fcmovb
add
add
addl
add
add
pop
pop
icebp
ror
test
add
add
dec
add
pushl
decl
add
addb
adc
push
mov
jecxz
test
and
hlt
inc
add
add
pushl
add
add
add
sub
add
call
aad
and
jmp
jnp
add
add
sbb
sub
add
dec
push
add
inc
add
ja
xchg
sub
mov
iret
aas
lock
cmp
add
sbb
add
cli
sub
add
addl
outsl
outsl
inc
add
not
test
cmp
sub
add
incl
add
mov
out
jle
add
dec
bound
jmp
add
inc
add
add
add
or
push
test
sbb
std
gs
popf
cmp
cld
ret
add
nop
mov
add
xchg
pop
add
add
daa
add
call
imul
mov
jno
call
mov
inc
add
insb
push
add
push
add
fildll
dec
pop
push
and
mov
add
std
pop
mov
push
add
cmp
add
add
shr
inc
add
cs
cmpsb
add
mov
push
enter
cmp
fistpll
add
add
adc
mov
movb
add
dec
into
mov
add
fldt
roll
push
add
shl
add
pop
imul
jl
addb
add
xor
push
mov
daa
add
cmp
sbb
dec
dec
push
and
sbb
cmp
cmpsb
add
jmp
daa
add
loope
or
enter
add
lods
outsb
push
and
imul
outsl
xchg
out
jb
mov
inc
add
jmp
pop
addr16
add
dec
adc
ljmp
mov
ljmp
push
out
cs
add
pop
jl
add
je
repnz
add
cwtl
mov
loope
int
add
mov
add
jno
ljmp
add
lcall
dec
iret
out
daa
add
add
sar
fwait
jmp
lcall
add
xchg
sarl
mov
rolb
add
cwtl
popf
mov
jmp
add
mov
out
mov
decl
add
mov
mov
add
scas
inc
add
add
lahf
push
add
inc
add
pop
aas
fisttpl
addb
add
jns
xchg
xchg
xor
ljmp
stos
inc
add
dec
std
mov
call
add
jle
arpl
ljmp
dec
and
inc
add
add
lock
mov
jecxz
xor
sahf
add
fdivr
jl
add
add
sub
add
push
inc
add
test
cmp
add
addb
insb
loop
sbb
add
xor
incl
add
inc
add
out
pop
push
add
dec
arpl
lcall
into
in
jecxz
mov
pop
pop
add
fidivs
add
cmp
add
sub
add
sti
xlat
push
add
mov
add
sbb
jmp
add
dec
adc
add
cwtl
pop
mov
cmp
xlat
rorb
dec
mov
add
arpl
jmp
sub
pop
addb
pop
cltd
push
stos
add
call
inc
add
cld
in
xchg
mov
add
testb
add
add
in
push
xchg
pop
movl
dec
out
mov
xchg
mov
sti
push
add
roll
cld
bound
call
pushl
add
xor
ljmp
add
push
mov
or
decl
inc
add
rcr
push
fnstsw
add
incl
call
add
pop
inc
add
add
pop
adc
fldpi
inc
add
xchg
addl
add
lea
cmpsl
add
add
and
ficomps
add
ljmp
out
call
mov
add
add
cmp
add
pop
mov
add
stc
sub
cmp
add
bound
ljmp
add
lcall
add
dec
cs
add
sub
push
add
sub
add
decl
push
add
jmp
add
movl
loopne
pop
inc
add
add
ja
test
scas
aam
add
jbe
add
stos
push
test
popf
push
add
jp
js
add
push
or
add
repz
insl
push
push
add
sub
clc
lods
jo
call
mov
jmp
add
pop
pop
imul
les
pop
rcrb
add
push
add
test
cwtl
fwait
out
pushf
outsb
sahf
pop
add
in
fwait
jns
js
add
outsb
push
add
sub
mov
and
ljmp
int
roll
cmp
cld
rolb
pop
or
or
add
dec
into
imul
ja
shrl
add
jmp
sbb
sarb
inc
add
incl
in
clc
cmpsl
add
xor
decl
mov
push
add
lcall
rolb
add
inc
add
nop
mov
icebp
fdivl
popf
nopl
jbe
ja
mov
incl
inc
add
fsub
add
arpl
decl
int3
push
mov
pusha
add
lcall
add
dec
adc
ljmp
sub
addl
xchg
js
jecxz
test
lock
adc
fidivs
add
adc
incl
add
jmp
add
xor
decl
or
sub
and
decl
push
add
out
dec
mov
gs
sbb
add
loope
sbb
nop
cli
cmpsb
add
add
jae
jmp
dec
addl
sbb
imulb
add
xor
decl
pop
addl
add
fldenv
lods
movl
mov
add
dec
pop
jg
add
mov
add
xchg
nop
sbb
lcall
incl
add
out
out
daa
add
add
sbb
ds
enter
add
add
mov
pop
or
add
pop
pop
lcall
inc
add
pop
add
lahf
mov
or
add
ret
cmp
add
adc
incl
xchg
adc
aad
add
addl
add
add
aam
icebp
addb
int
xchg
fpatan
imul
in
outsl
pop
ljmp
stos
pop
sbb
mov
add
ljmp
cmpsl
add
add
xchg
addl
lock
add
stos
or
addl
add
and
dec
jl
mov
add
bound
call
add
add
or
xor
dec
pop
aaa
dec
xchg
arpl
call
add
fxch
adc
jns
or
in
push
push
sbb
add
add
jno
push
rcrl
aam
sub
pushl
and
call
add
in
jo
cli
xchg
filds
jmp
add
mov
add
dec
in
mov
inc
add
add
mov
addl
add
add
jg
add
push
jo
dec
adc
pushl
jo
jmp
ljmp
dec
jp
aaa
mov
push
xor
push
jmp
in
mov
add
or
mov
lahf
dec
sbb
ret
mov
add
xchg
fnstcw
mov
sbb
adc
call
push
add
fwait
outsl
sub
jmp
add
pop
arpl
inc
add
add
fidivs
test
aad
add
cmp
pushf
sti
insb
mov
pop
filds
add
stos
ret
add
push
cwtl
data16
hlt
pop
lock
add
jecxz
in
movb
les
das
mov
add
cwtl
ret
add
add
xchg
mov
adc
push
or
cmp
aas
ljmp
leave
cld
shl
add
decl
add
aas
cmpsl
add
jb
call
inc
add
jmp
xor
mov
add
add
call
sub
ljmp
cwtl
mov
cmp
cmpsb
add
add
add
xchg
lret
add
add
push
je
lea
mov
std
cmp
aas
ja
xchg
inc
add
add
dec
addb
add
data16
pop
pop
movb
dec
or
add
mov
add
add
inc
add
add
mov
mov
add
mov
add
mov
add
aas
jl
add
jmp
dec
and
nop
aas
lock
add
aad
loop
xchg
sar
sbb
xchg
dec
dec
das
mov
mov
add
incl
mov
pop
int
add
cmp
add
lcall
mov
xchg
aam
push
pushf
dec
jae
jmp
add
cmp
cld
iret
sub
pop
addl
add
je
add
xor
call
rorl
aad
and
inc
add
push
dec
lret
add
out
ja
jo
inc
add
scas
sahf
jnp
add
add
out
xor
mov
add
add
pop
mov
push
add
jmp
mov
jo
jmp
std
cmc
loop
jp
inc
add
test
je
add
mov
clc
mov
push
movsl
add
jae
decl
cmc
das
mov
mov
inc
add
add
pop
jo
dec
dec
pop
imul
mov
mov
jo
jmp
pushl
cmp
add
jl
add
insb
bound
cli
mov
lcall
and
call
pop
adc
inc
add
add
pop
bound
push
fwait
icebp
outsb
imul
and
lcall
arpl
incl
filds
add
aas
cvttps2pi
push
add
sahf
jbe
mov
in
aad
add
bound
pushl
or
push
add
nop
fwait
rclb
ja
add
add
xchg
sub
cli
push
add
pop
and
insb
cmp
pop
fisubl
add
leave
and
ljmp
push
add
add
xchg
dec
mov
add
add
out
test
test
loopne
imul
jmp
fidivrs
add
pop
add
imul
out
or
popa
add
adc
jmp
add
push
dec
mov
add
addl
add
lcall
iret
lods
mov
mov
add
stos
adc
and
fsts
xor
add
jge
pop
pop
enter
faddl
add
pop
push
add
cmp
outsb
sbb
mov
add
outsl
stos
pop
loop
mov
test
sub
test
cmc
jmp
mov
add
push
add
inc
add
movb
xor
call
add
jmp
add
add
scas
imul
les
cmp
cs
xchg
sbb
and
roll
add
lcall
and
add
cmp
fldcw
divl
pop
add
add
add
add
ljmp
ss
lahf
js
add
add
in
lea
push
add
icebp
stos
pop
daa
add
or
ljmp
pushl
ljmp
test
or
add
addb
fmull
mov
mull
rcrl
gs
cwtl
insb
mov
sub
lds
jl
dec
das
test
std
jecxz
pop
faddp
add
add
les
jne
sub
aad
std
mov
add
lea
inc
add
repz
add
and
adc
loopne
mov
enter
call
addl
add
xchg
push
mov
cmpsb
add
add
addl
sti
pop
mov
add
add
push
xchg
insb
sub
push
add
and
mov
test
or
add
lcall
add
jae
decl
jl
ret
add
and
dec
lcall
add
aas
and
fnstcw
frstor
cmp
xor
pushl
add
add
mov
add
pop
leave
fstp
test
call
xchg
das
data16
movsl
add
sub
add
add
push
fwait
or
add
jl
xchg
dec
dec
shll
add
imul
sbb
ljmp
movb
add
decl
cltd
and
inc
add
xlat
pop
inc
add
add
ss
addb
add
push
imul
dec
hlt
jecxz
adc
ljmp
pop
call
dec
bound
call
ljmp
and
add
out
push
add
jne
mov
lret
mov
sub
pop
aas
inc
add
nop
lods
lods
xor
incl
sub
cmc
xor
push
scas
insl
call
outsb
hlt
inc
add
or
push
rolb
ss
add
lods
popa
add
inc
add
add
add
dec
rolb
add
add
cld
dec
ljmp
xchg
pop
cltd
daa
add
sarl
lret
je
loopne
cmc
inc
add
test
cmp
enter
fstl
decl
xor
dec
inc
add
and
lcall
add
xor
add
pop
push
add
rorb
pop
aad
xchg
cmp
xchg
es
es
pop
push
jo
inc
add
jg
std
sub
ds
xor
pushl
add
loope
mov
sti
push
add
ficomps
dec
sbb
add
inc
add
movb
cmp
sbb
lret
xchg
insl
xchg
jg
ds
cli
pusha
add
jbe
add
flds
add
add
iret
xor
jmp
out
adc
lcall
add
add
call
mov
movsb
add
add
add
stos
in
loope
inc
add
icebp
push
addb
and
add
clc
jmp
add
pushf
sbb
dec
jns
add
pop
add
add
add
cmpsb
add
add
and
jmp
add
add
jmp
jmp
rolb
ljmp
ss
rorb
push
xor
jb
ljmp
mov
add
fwait
int3
lds
leave
bound
ljmp
add
data16
add
pop
add
ljmp
dec
lds
loopne
fwait
scas
mov
add
stc
lcall
add
jecxz
addb
std
fs
lock
add
lahf
push
mov
stc
ds
testb
cmp
xchg
and
mov
add
hlt
mov
push
add
jle
add
pushf
lods
inc
add
xchg
cmpsb
add
add
add
loope
stos
mov
int
push
in
mov
sti
jl
or
xor
pushl
inc
add
add
inc
add
and
incl
add
add
fwait
in
jecxz
mov
xor
pushl
pop
jg
out
imul
add
loopne
cmp
push
outsb
xor
add
add
incb
dec
add
add
test
aad
push
add
push
out
dec
cs
push
add
mov
push
dec
aas
dec
cmc
icebp
sbb
add
push
bound
decl
jo
jmp
decl
lea
pop
push
jmp
add
roll
sbb
pop
adc
ljmp
cltd
push
sub
cmpsb
add
and
push
jmp
add
mov
mov
add
jecxz
or
add
add
push
pop
xor
pushl
adc
call
incl
add
int
pop
mov
add
add
sub
imul
mov
cmp
jmp
add
mov
test
add
add
pushl
jo
mov
incl
incl
or
lds
xchg
and
or
add
pop
inc
add
aam
xchg
sbb
mov
sbb
add
test
push
add
mov
addl
jecxz
fcmovnu
xchg
lock
pop
push
lea
movsb
add
dec
mov
pushf
mov
add
jns
add
stos
ss
roll
decl
ja
inc
add
add
rolb
add
fxch
jbe
pop
mov
cmp
sahf
aad
add
inc
add
call
stos
nop
mov
inc
add
cmp
jb
lcall
add
incl
add
jp
add
jne
push
adc
add
dec
sbb
add
jno
decl
lcall
add
mov
hlt
roll
add
xchg
insb
mov
add
jb
incl
decl
xlat
movb
add
jp
pop
add
pushl
add
cmpsb
add
add
aaa
push
into
arpl
call
or
adc
inc
add
add
loopne
sbb
adc
add
rcl
and
jns
divl
addb
ljmp
movl
push
add
cs
add
rolb
add
adc
std
les
cmp
stc
jae
fstpl
inc
add
sbb
pushf
sbb
add
mov
call
add
insl
pop
add
pop
iret
movl
inc
add
cli
xlat
push
rolb
add
add
cmp
add
cs
add
fstl
fdivrs
pushl
adc
add
lcall
call
add
ja
add
inc
add
mov
mov
inc
add
ljmp
stos
add
dec
xor
cld
je
add
scas
or
or
mov
mov
int3
fcompl
not
inc
add
add
add
lods
or
add
and
lcall
aas
call
incl
add
add
add
mov
pop
insb
dec
pop
out
or
inc
add
test
xor
add
stc
in
repz
imul
repz
mov
fldcw
add
add
inc
add
adc
call
mov
pop
cmpsl
add
ds
add
leave
mov
loope
or
lcall
add
xor
call
xchg
sub
repnz
fmull
addb
sub
out
inc
add
jne
addl
add
scas
dec
adc
jmp
imul
jns
sbb
mov
dec
out
dec
in
cmp
add
dec
insb
xchg
aam
xchg
add
call
add
add
adc
jmp
mov
hlt
pop
xlat
stos
mov
push
xor
call
add
addr16
add
mov
aam
mov
xor
divps
push
push
add
in
clc
mov
push
pop
xchg
popf
xor
pushl
imul
loopne
lret
cmp
popa
add
into
into
lcall
add
jmp
add
add
fstl
jle
fwait
repnz
jb
jmp
stc
push
adc
add
std
lods
or
movsl
add
mov
add
sbb
rcll
addr16
arpl
dec
mov
push
sahf
mov
scas
addl
add
fisubs
fisubl
jmp
pop
sub
mov
add
xchg
sbb
xor
dec
pushf
sbb
add
add
jp
add
into
addl
add
mov
mov
ljmp
mov
push
add
mov
in
mov
push
add
dec
pop
in
enter
sbb
xchg
cmp
arpl
jmp
add
cmp
js
lcall
ljmp
dec
jmp
sbb
inc
add
ljmp
test
and
jmp
add
push
insb
pusha
add
xchg
mov
add
in
adc
lcall
dec
out
sbb
add
movsb
add
ret
clc
adc
mov
push
jp
xor
adc
mov
jg
sub
add
push
add
pop
pop
stos
addl
add
data16
aad
add
mov
lcall
lahf
out
pop
inc
add
dec
frstor
or
add
push
sbb
out
lods
cmpsb
add
cmp
add
sub
insb
sub
add
adc
fldl
add
adc
push
jge
push
add
imul
in
das
add
xchg
sbb
ret
add
jb
mov
lret
lret
push
dec
or
lds
xor
fiaddl
jge
lods
sub
addb
adc
incl
add
aad
dec
mov
aad
xor
and
pushl
pushl
mov
add
cmp
add
or
cltd
repz
add
push
add
fists
in
push
xchg
push
fldt
add
add
add
add
arpl
clc
inc
add
adc
cmp
add
add
sbb
mov
push
jnp
pop
lods
cli
fbld
pushl
add
call
js
movb
inc
add
cmc
jb
call
aas
push
sub
jmp
or
jg
int3
loop
je
add
lods
sbb
add
pop
add
add
fldz
fstps
ds
pop
add
hlt
jl
sub
xchg
shll
lds
stc
enter
sbb
lods
js
data16
cmpsl
add
ficoml
ficompl
mov
lret
mov
push
add
jge
inc
add
add
pop
mov
add
push
dec
rcrb
xlat
push
call
add
test
in
testb
dec
mov
pop
int3
pusha
add
cmp
push
cld
xchg
mov
fsubp
add
stc
rclb
add
push
pusha
add
and
dec
mov
sub
test
movsl
add
push
and
dec
rolb
add
cmp
int3
rolb
add
sti
mov
inc
add
pushf
sbb
add
aaa
lods
or
add
add
mov
add
ljmp
pushf
insl
aam
dec
jl
mov
in
cmpsb
add
xchg
adc
decl
pop
pop
mov
lods
add
movl
ja
push
mov
ja
add
sub
popa
add
add
add
mov
jp
add
mov
add
inc
add
jnp
inc
add
fcomps
dec
xor
decl
loopne
dec
addl
daa
add
and
pop
ud0
add
dec
mov
add
add
sti
js
xor
scas
xchg
cs
pop
cmp
pusha
add
test
xor
incl
add
mov
sbb
adc
in
sbb
mov
add
cltd
add
add
or
add
fdivrp
add
cmp
add
add
add
pushl
add
icebp
xor
jle
add
test
nop
adc
ljmp
add
pop
imul
roll
sbb
int3
out
and
ljmp
lret
add
cwtl
daa
add
add
lahf
pop
insb
jl
test
push
add
fst
push
push
add
int3
pop
mov
lods
xchg
sbb
dec
addb
in
in
ss
add
or
add
xchg
inc
add
insb
mov
movl
mov
mov
jae
call
pushl
mov
add
movl
xchg
inc
add
decl
inc
add
fiaddl
hlt
xor
pushl
add
imul
xor
incl
add
jmp
cmp
decl
lea
add
fidivrs
cmp
stc
repnz
icebp
mov
test
jecxz
std
mov
mov
add
mov
jb
jmp
jnp
or
add
repz
decl
sarb
inc
add
cs
cmp
inc
add
mov
pop
cs
fwait
outsb
nop
imul
pusha
add
enter
add
decl
lods
mov
push
ret
add
add
loope
cmpsb
add
add
pop
fs
add
push
and
jge
add
scas
add
out
out
dec
lds
test
pop
fsub
add
add
scas
or
xor
jmp
add
pop
jnp
push
add
sub
add
fildll
lods
movl
bound
decl
pop
xchg
sahf
movsl
add
fucomp
xor
pushl
decl
out
ret
add
add
in
pop
lret
add
add
mov
ja
shll
add
in
jb
pushl
shrb
dec
shlb
add
cmp
add
mulb
pushl
das
xchg
xchg
pop
dec
mov
dec
sbb
mov
add
add
or
add
add
incl
push
fwait
lods
lods
in
inc
add
or
add
cmpsl
add
pushl
stos
ret
add
fwait
ja
add
push
add
and
add
adc
call
add
into
and
int3
xchg
movsb
add
add
fdivrl
xor
add
jb
jmp
cli
or
xlat
xchg
cmp
add
decl
and
call
add
out
arpl
decl
mov
jns
add
out
fadd
add
dec
rolb
jb
jmp
add
mov
add
add
sub
in
loopne
xor
jmp
aas
in
pop
push
push
add
push
ljmp
xor
imul
ljmp
scas
sub
xchg
jno
ljmp
add
pop
fiadds
call
xchg
nop
mov
add
das
sub
add
mov
add
add
fsubrs
adc
jmp
neg
addb
add
sub
jle
sahf
cld
fsub
add
pushl
add
mov
add
xor
add
add
jmp
add
leave
cld
and
call
sahf
jno
inc
add
or
popf
cmp
jns
test
add
push
mov
stc
push
lds
idivb
lcall
add
imul
push
mov
mov
add
mov
add
icebp
movsl
add
xchg
adc
jmp
jmp
add
pop
xor
incl
add
xchg
cmp
sbb
dec
lods
les
fcompl
add
mov
add
loop
xchg
rolb
mov
add
into
sub
sarl
pop
mov
jl
test
jle
add
or
add
dec
jle
add
pushf
iret
dec
xchg
dec
loope
inc
add
and
call
addl
inc
add
add
pusha
add
out
addl
add
jge
cmpsb
add
add
pop
shlb
call
jmp
cmp
add
inc
add
notb
pushl
or
add
dec
pop
xchg
rolb
add
sub
xchg
dec
ss
add
cmpsl
add
xor
decl
add
movsb
add
add
cmp
hlt
inc
add
clc
mov
out
fists
data16
call
addl
mov
add
jne
push
leave
pusha
add
inc
add
add
add
add
lods
iret
fstpl
xchg
ja
add
add
xchg
xchg
mov
xchg
pop
adc
negb
movsl
add
pushl
add
sub
add
enter
or
add
add
stos
mov
jge
jge
xchg
sbb
xor
add
dec
shrb
into
pop
add
inc
add
sbb
sbb
inc
add
addb
add
cmp
pop
add
cltd
roll
add
roll
test
add
add
inc
add
jns
aad
add
movsl
add
inc
add
jp
add
add
jg
fwait
jmp
add
jb
cmp
data16
mov
add
movb
add
shll
or
add
aam
out
mov
ret
add
cmp
jle
dec
mov
pop
adc
jle
add
jmp
in
jp
jbe
add
call
or
out
std
jno
fdivrp
push
add
mov
add
add
add
add
xor
jmp
in
pop
pop
addb
pop
add
mov
add
add
clts
add
add
outsl
push
je
and
jno
inc
add
adc
fs
outsb
addl
pop
das
adc
jmp
add
call
mov
std
ret
add
add
adc
incl
mov
adc
fmuls
push
add
bound
lcall
roll
fcomps
add
mov
xchg
cmovs
add
lods
or
add
enter
ljmp
add
jmp
decl
add
add
xchg
outsb
out
adc
aaa
ljmp
add
and
lret
push
add
inc
add
mov
ja
add
out
adc
fildll
jg
adc
jmp
xchg
mov
mov
out
jg
add
aas
clc
pop
mov
add
mov
add
jb
jmp
add
int
jae
pushl
push
sbb
in
mov
mov
lds
mov
xchg
pusha
add
aam
add
cmp
sbb
lahf
les
shrb
enter
add
add
ljmp
lret
add
pop
lods
push
out
outsl
sub
add
pop
add
add
pop
jno
decl
xor
add
push
add
mov
add
sbb
or
out
stos
add
mov
mov
push
add
cmpsl
add
outsb
out
ret
add
add
sti
mov
sti
imul
call
add
iret
das
addl
ja
outsl
cli
adc
dec
or
add
repz
sbb
add
xor
mov
xchg
jmp
frstor
call
add
in
jne
aad
add
addl
cmp
add
sbb
add
fimull
aam
add
xchg
cld
js
jl
add
cmp
in
and
mov
loop
leave
or
pop
and
xchg
mov
lds
lret
dec
leave
mov
add
out
out
js
xor
jbe
repz
add
nop
cmpsl
add
push
add
insl
adc
lcall
lret
add
add
cltd
sbb
add
push
add
ljmp
sbb
add
ss
das
test
add
bnd
dec
mov
add
push
idivb
repz
roll
add
incl
jne
and
incl
mov
std
shlb
je
inc
add
ja
fistps
add
mov
in
imul
mov
js
add
cmp
mov
jmp
loop
cmp
mov
add
mov
cmp
data16
adc
pushl
lcall
int3
mov
cmp
and
lcall
cmpsb
add
xchg
addb
cmpsl
add
push
add
pop
xor
testb
fstl
mov
add
push
push
or
mov
cmp
add
cltd
lret
cmp
add
out
aas
cmp
add
mov
decl
add
icebp
add
out
pop
add
ljmp
test
stos
mov
test
add
notb
xor
add
inc
add
fsubs
addb
mov
aaa
int3
push
add
ret
mov
add
pop
jns
mov
mov
add
js
bound
pushl
pushl
add
out
shlb
jae
ljmp
rolb
add
add
les
fisubrl
mov
xchg
push
add
add
movsb
add
dec
mov
ljmp
test
add
push
add
enter
mov
es
ret
add
mov
mov
cs
dec
pop
mov
add
push
in
pop
adc
jmp
rolb
outsl
pop
jb
inc
add
add
or
inc
add
mov
jp
add
xor
decl
add
lcall
dec
adc
jl
add
jmp
cmp
lcall
arpl
incl
and
call
cs
je
cmp
push
add
pusha
add
mov
add
fiadds
mov
mov
dec
adc
pushl
ja
push
mulb
push
xchg
xchg
clc
icebp
push
xor
jmp
dec
pop
dec
cmpsl
add
mov
inc
add
pop
into
in
mov
inc
add
pop
push
add
movsb
add
cltd
and
and
lcall
add
popa
add
mov
add
jne
lods
mov
cmp
fstps
ljmp
add
in
ljmp
xchg
jmp
mov
repnz
jmp
ljmp
jl
in
pop
pop
call
mov
mov
add
add
add
incl
rolb
add
add
decl
ljmp
add
fucomi
adc
pushl
add
test
push
flds
cli
movsl
add
add
nop
fldcw
add
sub
fsubp
add
add
dec
push
hlt
mov
push
add
stc
xchg
je
add
pop
pop
mov
jle
cltd
test
lea
and
incl
add
ljmp
add
movsb
add
add
push
add
add
in
mov
add
int3
mov
decl
push
add
mov
insb
adc
call
stos
lods
inc
add
das
adc
sub
mov
outsb
push
jmp
shll
add
cmp
ret
add
add
add
in
jge
add
add
push
add
xor
xchg
push
push
add
fcmovne
loop
add
jmp
xor
out
xor
insb
sbb
add
mov
add
mov
add
cmc
les
mov
push
add
pop
scas
arpl
lcall
movb
push
add
stos
fisubrl
xor
mov
addb
call
lcall
add
add
insl
out
mov
add
mov
clc
or
add
in
cmc
ret
mov
fwait
ja
aad
xor
pushl
sahf
lcall
out
ret
add
jne
nop
xchg
je
mov
jb
pushl
add
dec
add
js
ss
cwtl
movsb
add
add
mov
add
cmp
xchg
pop
add
add
dec
or
add
add
mov
arpl
decl
and
decl
rolb
xor
add
stos
jecxz
in
jnp
js
add
jno
decl
add
mov
xchg
xor
dec
mov
jmp
add
push
add
addl
xor
incl
add
jb
decl
cmp
stos
mov
jge
aad
scas
push
repz
incb
cld
dec
icebp
dec
pop
arpl
incl
incl
ss
pop
lods
adc
or
mov
add
xchg
mov
add
jmp
cmp
in
flds
add
add
movl
add
negb
sbb
or
add
dec
add
lcall
aas
cmp
sub
bound
dec
xor
ljmp
push
int
add
les
pusha
add
xchg
sub
add
jecxz
setae
test
or
decl
adc
pushl
add
mov
add
lcall
insb
add
call
leave
lret
icebp
lds
xchg
dec
aam
add
xor
add
and
enter
sub
add
stos
cmp
add
cld
icebp
sbb
add
out
add
add
popf
pop
lret
stos
mov
imull
or
in
sub
repz
add
inc
add
mov
inc
add
add
rep
add
add
mov
add
fists
or
mov
pushf
lcall
shll
jmp
or
push
add
lret
add
add
or
pop
add
jmp
mov
add
lcall
jmp
ljmp
fst
jmp
add
xor
ljmp
add
rcl
jno
ljmp
add
mov
addl
mov
sub
mull
add
add
jo
pushl
ljmp
push
add
add
cmp
sti
aad
and
and
add
cmp
add
add
inc
add
addl
add
mov
stc
roll
jae
ljmp
dec
xor
jmp
and
jmp
add
xor
ljmp
into
pop
test
jns
push
add
call
cltd
imul
jae
call
ja
lods
xchg
lret
add
decl
add
jmp
add
inc
add
sbb
dec
ret
out
mov
sbb
ljmp
jae
ljmp
add
call
pcmpeqw
add
mov
add
jmp
add
inc
add
scas
addb
mov
repnz
add
ja
and
mov
add
pushf
pusha
add
shrl
adc
call
pushl
aad
add
and
ljmp
add
fimuls
incl
add
push
dec
or
fidivrs
add
in
lahf
cld
popa
add
stos
mov
dec
push
add
scas
arpl
jmp
add
add
sbb
addb
jecxz
insl
xchg
and
call
or
add
add
xlat
lahf
mov
add
sub
mov
stc
pop
mov
add
fs
push
add
int
mov
test
roll
pop
inc
add
push
add
lcall
dec
pop
xor
push
sub
stos
lods
enter
mov
add
add
cmp
decl
lods
ret
xor
adc
jmp
add
jp
jg
addl
les
mov
jg
repz
fcompl
dec
xor
jnp
add
out
repnz
arpl
call
ficompl
sbb
test
and
mov
imul
add
arpl
decl
add
jmp
fwait
ret
add
stos
cmp
jle
add
dec
ret
negl
add
addb
cmpsb
add
movb
cld
xchg
fsubs
adc
fadds
push
push
add
daa
add
fstpt
lea
fwait
push
add
push
add
pop
add
adc
call
add
add
xchg
test
inc
add
out
out
push
jl
add
mov
push
add
cmpsb
add
in
jo
pushl
add
int3
test
fnstcw
cmp
inc
add
add
movl
push
mov
ja
add
mov
add
call
add
mov
add
add
jmp
add
imulb
add
add
mov
sbb
cwtl
cmp
add
shl
add
es
mov
sbb
add
es
add
mov
mov
push
lods
out
push
outsl
sti
insl
loopne
add
inc
add
add
scas
mov
lcall
add
push
repnz
add
stos
icebp
imul
mov
jo
stc
repz
loop
sbb
add
lods
les
cmp
add
pushl
decl
push
fcomp
fistps
jmp
push
jl
jbe
add
aam
xchg
loop
imul
add
dec
pushf
dec
mov
add
push
and
pushl
add
lahf
jle
addl
add
dec
xor
pushl
imul
ljmp
jno
aas
mov
es
lock
mov
pop
add
add
add
add
inc
add
xlat
jno
call
add
sbb
jg
add
push
add
jg
add
stc
in
and
jmp
add
or
testb
loop
dec
mov
add
mov
jno
jmp
mov
out
loope
pop
lea
add
test
pushf
cmp
sarl
aam
nop
ds
add
push
sub
sbb
add
add
pop
test
add
jmp
add
stos
dec
add
dec
sub
decl
adc
mov
ljmp
xor
decl
sub
add
add
pushl
mov
add
mov
add
and
stc
push
mov
insl
mov
dec
aaa
mov
xchg
movsb
add
add
add
lcall
add
popf
sarb
cs
add
mov
inc
add
out
cmp
add
adc
jmp
add
push
add
xchg
inc
add
mov
ljmp
roll
and
lcall
add
mov
lsl
lcall
dec
test
add
pop
popf
push
fdivl
ljmp
xor
dec
mov
test
mov
clc
test
jmp
add
push
mov
jmp
xor
stc
cmpsl
add
sub
add
pop
lock
ljmp
mov
sti
sub
jb
lcall
push
add
add
jmp
outsb
imul
push
add
insl
pop
fcompl
decl
addl
add
mov
xor
cmp
add
outsl
das
adc
pop
push
rcrb
mov
mov
divl
add
mov
xchg
and
lcall
cmp
add
shlb
add
inc
add
mov
data16
add
jb
pushl
scas
xchg
insl
pusha
add
cmpsb
add
fisttpll
add
pop
dec
inc
add
out
addl
add
add
and
add
add
push
or
jg
add
pop
stos
mov
cli
inc
add
mov
in
lods
jl
and
inc
add
insb
ds
imul
ss
add
add
add
scas
cmp
lods
mov
add
dec
sahf
or
add
add
addb
mov
lcall
or
aad
push
lea
add
clc
or
add
mov
add
xchg
adc
bound
pushl
call
daa
add
aas
xor
cmp
add
jbe
add
mov
enter
add
ljmp
add
add
jmp
add
stc
mov
rolb
add
pop
cmp
mov
add
test
add
js
jnp
add
pop
dec
hlt
cld
int
in
xchg
add
inc
add
add
add
cmp
add
stos
aam
add
add
nop
je
add
mov
jg
add
mov
inc
add
leave
addb
cmp
add
ljmp
outsb
out
sub
add
insl
push
data16
add
mov
push
add
loop
ret
add
in
repz
add
push
imul
add
dec
enter
cmpsb
add
adc
lods
aad
inc
add
jmp
addl
incl
jecxz
sub
add
mov
add
das
sub
xchg
sbb
ljmp
adc
incl
dec
sub
xor
dec
addl
rcrl
add
xor
lcall
add
incl
lahf
fadd
add
xor
call
dec
add
rcrl
add
js
mov
scas
ret
add
inc
add
bound
decl
mul
add
sbb
add
jns
add
add
xor
aam
adc
inc
add
add
pop
mov
loop
sub
add
or
add
lcall
loop
push
add
loopne
cmp
xlat
das
mov
mov
mov
add
push
add
loope
mov
add
cmp
add
add
clc
jge
add
out
roll
not
or
in
hlt
movsl
add
lcall
add
movsl
add
divl
jno
decl
push
cmp
and
call
clc
or
xor
jmp
sub
incl
inc
add
add
add
or
pop
push
add
jae
jmp
add
mov
out
rcll
dec
add
mov
add
add
fwait
gs
add
roll
add
mov
popa
add
mov
stos
mov
add
sub
add
jo
call
xchg
add
dec
jl
add
push
cmpsl
add
aas
jbe
add
loope
pop
jne
add
add
scas
das
pop
pop
jo
decl
addl
lcall
mov
add
inc
add
cld
mov
sbb
pusha
add
stos
push
add
roll
add
add
add
sbb
cld
jle
adc
mov
call
mov
add
std
sub
cltd
ja
add
movsl
add
hlt
cmc
jge
mov
daa
add
add
hlt
add
pushl
fiaddl
add
cmp
jl
addb
mov
jmp
push
push
popa
add
hlt
addl
pop
test
int
add
mov
in
stos
dec
cmpsl
add
xchg
loopne
inc
add
add
or
fistps
rolb
add
call
lock
push
aam
loopne
addl
mov
sbb
lods
jge
or
in
mov
add
add
add
add
stos
add
add
imul
ljmp
push
add
divb
xor
xchg
dec
ss
inc
add
or
add
inc
add
add
daa
add
add
loope
test
cmp
ss
outsl
and
pushl
add
aaa
sbb
and
add
call
add
in
dec
push
add
pop
add
add
cmp
cmp
mov
stos
jno
incl
mov
add
ljmp
add
add
or
xchg
dec
mov
popa
add
fwait
or
ljmp
mov
addl
movd
add
and
incl
add
sbb
add
add
aam
add
inc
add
clc
mov
lahf
inc
add
imul
ljmp
mov
pop
adc
fsubs
cmp
dec
jne
add
sub
cmp
ljmp
mov
add
ljmp
or
xchg
out
fldt
dec
insb
outsb
adc
jmp
push
add
cmp
add
jns
mov
xchg
push
rolb
add
mov
add
add
bound
call
jle
and
call
sub
sarb
jmp
stc
pop
and
data16
add
add
add
xchg
mov
add
add
sbb
testb
icebp
adc
ljmp
inc
add
lahf
aam
push
mov
add
adc
cmp
jp
add
sbb
lods
add
out
roll
pop
in
jg
add
add
daa
add
pop
lock
add
movb
leave
cmp
add
ja
insb
pop
pop
add
popl
fimull
mov
addl
cmpsb
add
and
mov
add
xchg
imul
pop
add
incl
add
mov
add
jmp
push
add
nop
sbb
add
inc
add
addl
mov
add
das
roll
add
add
cmc
loopne
outsl
addl
and
rcl
rolb
pop
sub
add
add
add
rcr
into
addb
add
out
push
add
dec
enter
adc
lcall
add
outsl
cli
sbb
dec
bound
lcall
cmp
sub
add
pushf
ret
frstor
push
lea
cmp
int3
lds
aaa
or
fistpl
mov
mov
and
jmp
shlb
pushl
add
add
mov
add
out
add
pop
das
lea
add
cmp
add
test
pop
in
sti
xor
incl
add
add
add
add
mov
sti
sbb
sub
clc
sahf
jg
add
mov
rorb
incl
call
or
pop
xchg
xor
adc
jmp
add
mov
inc
add
inc
add
sub
push
cmp
add
add
add
ret
add
adc
inc
add
inc
add
xor
jmp
add
divl
jmp
add
inc
add
jo
call
in
rolb
outsb
jle
add
push
add
inc
add
add
add
fstpt
add
data16
mov
dec
mov
pop
out
mov
test
incl
pushl
add
pushl
lcall
mov
or
mov
fmulp
add
cmc
xchg
shl
fnstcw
cmp
popa
add
cmp
mov
add
push
add
jae
jmp
jecxz
lock
decl
jnp
add
cmc
cmp
mov
add
insl
fistpl
dec
mov
add
sbb
fisttpll
loop
sbb
add
add
imul
xor
jmp
int
sarb
pop
lahf
mov
cmc
lahf
mov
jecxz
lret
add
add
adc
jmp
add
add
sti
add
add
ljmp
xchg
in
sub
add
add
arpl
incl
push
pop
add
pushl
add
das
mov
adc
jmp
add
add
call
push
clc
pop
sti
das
jbe
push
pop
mov
add
jp
cmp
aaa
mov
shll
add
int3
jl
mov
or
mov
add
pushf
sub
cmp
movsb
add
mov
pushf
cwtl
mov
jo
call
add
sub
pop
push
adc
add
out
imul
shrb
fstpl
add
and
jmp
add
add
mov
call
jl
xor
call
or
add
gs
out
jb
pushl
and
ljmp
lret
loop
and
jmp
mov
fcoms
cli
mov
mov
or
cltd
pop
sub
add
add
xlat
test
cmc
dec
jnp
add
xchg
push
idivb
lock
shlb
adc
pushl
add
mov
aaa
inc
add
jp
add
fisubl
add
cmpsb
add
add
add
js
add
js
add
jns
insb
call
cmp
cmpsl
add
cmp
dec
mov
add
jbe
add
pop
mov
add
jno
pushl
add
jl
ficoms
and
inc
add
add
fldenv
cs
push
mov
loope
test
adc
lcall
push
lods
aaa
add
add
jle
add
clc
and
js
push
add
jno
ljmp
sub
jecxz
out
test
add
add
add
add
mov
sti
sahf
cmp
add
call
jnp
add
add
xchg
sub
pushl
sub
add
add
cmc
das
aaa
stos
jecxz
icebp
mov
pushf
or
out
hlt
dec
push
popf
jp
add
rcr
cmp
add
call
sbb
push
mov
adc
stos
enter
sub
lcall
jg
mov
fbstp
incl
jmp
mov
shll
xor
out
pop
loopne
push
add
add
jb
inc
add
pusha
add
repz
ljmp
je
movsb
add
add
xchg
outsl
xchg
xchg
and
lcall
sbb
pop
add
add
add
mov
jo
lcall
add
popl
push
add
mov
mull
inc
add
cmc
dec
cld
rolb
sbb
jne
cld
cmp
pop
or
add
add
add
add
add
lcall
ds
add
dec
aam
cli
xchg
inc
add
xchg
push
add
cltd
jmp
lcall
cmc
pop
lds
sub
adc
lcall
rcrb
add
scas
pop
popa
add
imul
icebp
clc
loopne
xchg
mov
aad
add
je
xchg
add
fsubs
push
inc
add
push
add
push
add
nop
in
data16
cmp
and
jp
add
loopne
popa
add
ret
cmp
push
popf
push
roll
addl
add
or
add
stos
push
add
or
dec
add
jmp
or
add
jmp
sub
push
push
add
mov
pusha
add
outsl
pop
icebp
mov
xor
ljmp
mov
and
mov
add
add
push
pusha
add
xlat
adc
jmp
add
xchg
fistpll
aaa
mov
adc
call
data16
rcr
mov
out
repz
sbb
jne
stc
push
pop
test
pavgb
adc
push
mov
add
cwtl
ret
add
add
add
add
mov
pushl
add
inc
add
js
data16
movb
add
add
ljmp
add
sahf
test
and
mov
add
call
add
mov
add
outsl
or
push
xchg
fildl
movl
popa
add
test
push
cli
outsl
pop
fmull
mov
xchg
push
add
daa
add
mov
inc
add
xchg
repz
mov
sbb
incl
sub
lret
add
lea
xchg
push
faddl
decl
ret
add
mov
jns
add
in
dec
dec
mov
add
or
jl
loope
ds
in
mov
add
mov
inc
add
add
xlat
aaa
xor
lcall
pop
jg
adc
call
xchg
push
mov
and
ljmp
xlat
addl
xor
incl
outsb
shll
fwait
js
mov
add
add
sub
mov
testl
or
movl
je
out
push
add
add
add
push
xchg
ljmp
mov
fildl
addb
mov
sbb
xchg
lcall
pop
aas
mov
push
add
leave
xchg
lcall
add
mov
loop
mov
or
jnp
add
sub
cmp
daa
add
mov
out
das
adc
decl
mov
add
add
jmp
pushl
add
addb
sar
dec
je
add
add
jg
out
cmp
fstp
in
push
std
xor
ljmp
push
not
mov
sbb
cmp
xchg
xchg
add
dec
fidivs
jmp
add
add
push
add
aas
adc
icebp
lret
ret
add
xor
push
loopne
hlt
jle
xchg
inc
add
add
movsb
add
js
or
adc
incl
incl
xlat
aam
sbb
or
decl
sub
jns
add
push
add
jo
call
lods
dec
jbe
add
sub
add
nop
xchg
push
dec
mov
inc
add
mov
cs
loope
dec
adc
fstpt
test
xchg
xchg
inc
add
mov
add
and
lcall
sti
jmp
lret
mov
mov
inc
add
ret
add
imul
int
movsb
add
add
jge
pushf
addb
add
pop
icebp
dec
and
sub
sub
push
dec
mov
std
inc
add
call
pop
xor
ljmp
adc
call
mov
or
add
add
scas
add
fsubs
insl
add
and
lcall
pusha
add
inc
add
add
add
jb
jmp
call
xor
add
loop
addb
add
xchg
hlt
outsb
add
ljmp
push
jp
add
xor
cmp
addb
add
dec
dec
insl
movsl
add
add
mov
cld
sti
cmp
cmpsl
add
daa
add
cs
mov
mov
hlt
sub
movb
add
minps
add
pop
movb
add
incl
clc
out
push
ss
into
mov
add
xor
dec
push
add
dec
sub
cmc
aas
inc
add
adc
lcall
add
add
adc
pushl
lcall
xchg
in
dec
loop
xchg
adc
ljmp
jecxz
roll
hlt
std
fistpl
xor
std
push
addb
add
sbb
add
or
xchg
jbe
push
fimuls
lret
shrl
in
add
call
add
push
cmp
dec
fdivrl
add
decl
mov
add
mov
lret
insl
leave
push
add
fistl
lret
or
and
decl
sahf
lret
mov
add
bound
decl
add
ret
add
mov
add
ja
add
mov
movsl
add
cmpsb
add
pop
test
inc
add
add
inc
add
icebp
ss
inc
add
mov
inc
add
sbb
rorb
addb
add
movsb
add
jae
jmp
jnp
add
lcall
fstp
ja
add
fnstcw
lret
decl
fbstp
and
jmp
add
imul
addb
add
add
shll
pushl
add
jbe
add
adc
add
add
jmp
add
addb
add
addr16
xor
push
mov
inc
add
sbb
mov
pushl
add
in
mov
add
iret
in
xor
jp
movb
mov
add
ja
and
pushl
in
movsb
add
sub
loopne
xchg
pop
add
xchg
arpl
incl
shll
scas
bound
ljmp
jae
jmp
add
cmp
and
inc
add
cmc
ret
add
add
cli
sub
add
pushl
mov
ja
push
add
movl
add
add
aam
add
call
ret
add
add
mov
xchg
scas
addb
mov
mov
or
test
push
add
call
mov
jns
add
add
arpl
lcall
and
decl
mov
addb
dec
popa
add
and
xchg
enter
mov
add
sub
arpl
ljmp
in
test
mov
imul
decl
addl
pop
fadds
fisttps
inc
add
add
add
aas
jmp
add
jmp
daa
add
pushl
sub
add
xlat
cmp
mov
fildll
cld
mov
sti
or
add
incl
add
or
outsl
inc
add
mov
add
fdiv
sbb
lcall
sbb
cld
loope
xor
xchg
cs
add
sbb
jne
lods
data16
jb
call
in
movsb
add
mov
mov
adc
add
aas
pusha
add
mulb
add
test
insl
dec
call
repnz
inc
add
mov
or
fldcw
lock
ds
inc
add
sub
rcrb
add
faddl
pushl
test
add
sub
add
sahf
cmp
nop
jmp
pop
stos
and
jne
cli
xor
nop
jmp
std
jns
pop
add
and
jmp
add
push
mov
nop
jmp
add
pop
add
mov
and
rcrb
and
nop
jmp
fistps
cld
mov
nop
jmp
scas
sub
add
add
into
inc
push
mov
xchg
ret
add
add
dec
add
nop
jmp
add
add
sub
dec
sbb
add
add
push
or
add
jmp
add
inc
add
jmp
and
add
add
lret
jmp
and
add
push
add
xor
sahf
sbb
mov
mov
nop
jmp
mov
add
nop
jmp
add
add
addr16
mov
nop
jmp
add
push
add
add
adc
add
mov
add
sbb
jmp
add
insl
pusha
push
mov
xchg
ret
xor
add
rorb
jne
nop
jmp
jns
add
test
ffree
nop
jmp
add
add
lret
mov
xchg
ret
add
add
pop
xor
nop
jmp
add
fiadds
add
jmp
nop
jmp
add
nop
jmp
xor
add
push
nop
jmp
sbb
sahf
stos
add
cmp
or
add
nop
jmp
sbb
add
push
add
jle
jae
add
nop
jmp
add
aad
push
push
mov
xchg
ret
push
std
and
pop
movzwl
nop
jmp
add
add
mov
add
add
filds
add
lea
nop
jmp
add
add
cli
add
nop
jmp
add
jns
adc
int3
mov
nop
jmp
add
adc
adc
fildl
dec
cmp
jmp
je
add
add
jl
nop
jmp
and
clc
lods
push
mov
cmpsl
jnp
sbb
cli
jmp
add
add
mov
jmp
adc
jae
call
push
mov
xchg
ret
sbb
push
sbb
jmp
jb
add
jae
add
loopne
dec
push
push
mov
xchg
ret
add
add
in
jno
jmp
add
add
bound
lcall
jae
jmp
add
movzwl
push
mov
xchg
ret
je
cmpl
nop
jmp
scas
lods
scas
push
add
nop
jmp
adc
clc
scas
add
add
add
mov
xchg
ret
and
jne
nop
jmp
clc
add
mov
or
jmp
add
push
jge
sbb
add
nop
jmp
add
nop
jmp
add
add
je
add
movzwl
nop
jmp
sub
xor
jns
add
xor
push
mov
xchg
ret
add
add
xor
push
mov
xchg
ret
add
out
pop
nop
jmp
add
mov
addb
add
add
jg
push
mov
xchg
ret
adc
ret
nop
jmp
add
add
add
les
addb
lcall
adc
add
sbb
adc
and
add
mov
nop
jmp
add
jno
add
mov
pop
and
nop
jmp
add
mov
stos
mov
adc
add
jmp
add
call
nop
jmp
or
add
shll
jmp
jne
je
nop
jmp
add
and
lea
nop
jmp
nop
add
call
add
push
mov
xchg
ret
add
nop
jmp
add
adc
sbb
add
js
nop
jmp
add
and
inc
add
nop
jmp
rorb
add
lret
nop
jmp
sbb
add
sahf
push
nop
jmp
add
add
fcomip
add
jmp
add
add
add
cmp
mov
xchg
ret
add
push
add
add
nop
jmp
add
add
add
mov
nop
jmp
xor
cwtl
fiadds
clc
decl
test
cld
call
add
pause
jmp
add
lcall
adc
cli
decl
nop
jmp
sbb
add
les
aam
push
mov
add
add
mov
mov
outsl
popa
fs
jmp
add
cmc
add
adc
add
rorb
jp
jbe
nop
jmp
push
sbb
nop
push
decl
test
sbb
add
add
sub
sbb
and
add
jno
ret
add
fwait
push
add
sub
add
mov
nop
jmp
stos
add
add
je
nop
jmp
jb
sahf
repnz
push
add
lahf
mov
push
mov
xchg
ret
mov
inc
push
mov
xchg
ret
add
jno
call
nop
jmp
add
pop
addr16
pop
add
add
jno
pop
xlat
lods
mov
decl
nop
jmp
sub
sub
jno
js
nop
jmp
xor
push
add
jmp
add
decl
jne
nop
jmp
xlat
add
add
popf
push
nop
jmp
stos
jmp
add
push
push
mov
xchg
ret
lods
adc
sub
add
nop
jmp
pop
je
xor
cwtl
in
push
push
mov
xchg
ret
add
jno
add
nop
jmp
or
adc
nop
pop
fsubrp
push
nop
jmp
add
sbb
add
jns
cwtl
pushl
push
mov
xchg
ret
fiadds
dec
lea
push
mov
xchg
ret
jae
imul
add
push
xor
sbb
call
jmp
inc
nop
jmp
adc
add
jmp
push
add
xchg
add
call
sbb
jmp
push
add
add
add
nop
jmp
add
jmp
sbb
push
nop
jmp
scas
adc
add
add
sbb
jmp
nop
jmp
add
add
js
in
add
add
nop
jmp
clc
add
or
pause
jmp
or
add
sub
nop
jmp
and
cwtl
add
add
data16
add
add
cwtl
add
mov
push
nop
jmp
sub
jb
popf
mov
nop
jmp
add
add
mov
xchg
ret
jmp
add
cmpl
mov
add
sub
add
leave
nop
jmp
add
add
adc
add
mov
nop
jmp
sbb
cmc
popf
lcall
sbb
add
add
incl
add
add
push
mov
xchg
ret
add
test
add
nop
jmp
mov
stos
sbb
stos
nop
jmp
and
nop
addr16
sub
push
nop
jmp
xlat
add
mov
add
add
pop
add
decl
call
nop
jmp
add
add
jmp
nop
jmp
add
mov
in
pop
add
mov
aam
inc
pop
leave
push
nop
jmp
add
add
jmp
sbb
sahf
or
add
das
push
push
mov
xchg
ret
mov
sub
jmp
add
je
add
add
call
add
add
jmp
addr16
add
push
dec
nop
jmp
add
add
pop
push
nop
jmp
jns
or
jmp
incl
add
add
add
and
lock
mov
xchg
add
add
sub
call
inc
add
push
sbb
add
add
inc
add
push
or
jmp
add
adc
add
movl
dec
adc
add
add
add
add
jmp
jbe
nop
jmp
add
filds
add
pop
push
mov
xchg
ret
add
cwtl
fists
nop
jmp
add
add
add
pop
call
nop
jmp
mov
stos
pusha
nop
jmp
mov
add
jmp
sub
nop
jmp
addr16
jbe
push
mov
xchg
ret
xor
inc
add
mov
add
mov
mov
xchg
ret
jae
cwtl
sbb
add
pop
call
add
push
add
and
decl
or
add
add
jmp
add
add
jp
push
mov
xchg
ret
add
jno
add
decl
push
mov
xchg
ret
sahf
clc
addr16
mov
nop
jmp
push
add
addr16
xor
leave
sub
add
and
add
xchg
fwait
movswl
nop
jmp
adc
add
out
mov
nop
jmp
add
adc
mov
add
adc
add
add
add
cld
sub
nop
jmp
jno
pop
add
jno
dec
jne
nop
jmp
add
push
mov
xchg
ret
add
mov
subl
nop
jmp
mov
add
nop
jmp
add
jmp
inc
add
mov
nop
jmp
add
test
inc
add
jnp
cld
or
add
add
stos
and
pop
push
mov
xchg
ret
add
add
mov
add
nop
jmp
clc
sub
mov
mov
or
add
add
add
add
cwtl
leave
call
nop
jmp
xlat
jb
add
rclb
add
adc
jno
add
add
mov
nop
jmp
add
sub
add
stos
push
mov
xchg
ret
decl
adc
fisubs
jmp
jns
add
add
rorl
test
call
add
add
out
rolb
add
std
sub
nop
jmp
add
nop
add
mov
nop
jmp
add
add
add
xlat
pop
pop
nop
jmp
ljmp
pop
repnz
cmc
loope
add
incl
add
add
pop
nop
jmp
cwtl
add
pop
imul
add
add
add
dec
rorb
mov
add
leave
push
nop
jmp
mov
nop
addr16
add
add
nop
jmp
repnz
add
add
iret
push
push
mov
xchg
ret
pop
test
add
add
add
call
adc
out
mov
test
call
add
fcomip
sbb
rclb
add
add
cmc
pusha
add
movb
add
pushl
push
mov
xchg
ret
add
cltd
mov
nop
jmp
add
jmp
mov
nop
jmp
add
sahf
nop
mov
sti
nop
jmp
jmp
add
sbb
add
call
nop
jmp
add
add
add
jb
add
fildl
cs
pushl
push
mov
xchg
ret
jb
arpl
decl
mov
nop
jmp
inc
add
add
fiadds
cltd
pop
nop
jmp
add
push
movsl
add
mov
add
call
mov
nop
jmp
add
jae
out
fs
add
xor
nop
jmp
add
mov
add
add
add
sbb
lods
push
mov
xchg
ret
add
popf
jno
lcall
nop
jmp
add
add
inc
adc
jmp
push
add
ljmp
dec
clc
dec
inc
nop
jmp
add
clc
add
push
nop
jmp
push
sub
jmp
pop
call
nop
jmp
lods
add
scas
add
nop
jmp
std
push
add
nop
stos
jne
nop
jmp
repnz
adc
add
mov
inc
add
adc
jb
dec
nop
jmp
add
jmp
popf
adc
add
add
nop
jmp
addr16
add
add
add
mov
add
or
repnz
ljmp
add
aad
jne
nop
jmp
and
ljmp
incl
jns
sahf
mov
adc
nop
jmp
sbb
xlat
sub
icebp
int
push
push
mov
xchg
ret
add
call
in
add
pusha
add
push
je
lcall
add
mov
xchg
ret
add
aam
add
mov
nop
jmp
jns
repnz
add
push
add
call
add
out
mov
nop
jmp
popf
push
add
add
add
add
hlt
mov
jae
pushl
add
mov
push
mov
xchg
ret
and
mov
mov
mov
xchg
ret
add
rcrb
icebp
nop
jmp
nop
adc
mov
test
nop
jmp
mov
outsl
loopne
mov
xchg
ret
add
push
add
add
add
add
test
push
mov
xchg
ret
fiadds
popf
adc
incl
cmpsl
mov
popf
nop
jmp
add
popf
push
adc
dec
ror
push
mov
xchg
ret
mov
jmp
nop
jmp
jmp
add
addb
sbb
nop
jmp
adc
inc
add
aad
add
es
call
nop
jmp
xlat
and
add
rclb
incl
popf
lods
sbb
xchg
nop
jmp
add
jmp
add
add
mov
push
mov
xchg
ret
push
adc
add
dec
pop
nop
jmp
add
add
adc
jmp
add
jmp
add
add
sbb
pushl
addr16
fcoms
add
add
xor
add
mov
decl
push
mov
xchg
ret
add
pop
add
test
add
add
add
add
add
pop
je
nop
jmp
add
and
add
add
lods
sti
mov
jecxz
pop
add
les
jmp
and
bnd
push
outsl
add
nop
jmp
sbb
jno
add
test
add
add
add
dec
jne
nop
jmp
shrb
mov
in
add
out
xchg
verr
loope
lahf
add
nop
jmp
popf
add
add
add
jmp
push
mov
xchg
ret
sub
and
add
fwait
push
push
mov
xchg
ret
add
call
cmc
fisttpl
mov
incl
add
add
xchg
repnz
lahf
inc
add
jns
add
mov
nop
jmp
push
add
add
add
push
nop
jmp
add
clc
mov
jnp
push
mov
xchg
ret
push
add
add
add
mov
nop
jmp
push
add
lods
jmp
nop
jmp
sbb
add
cld
add
nop
jmp
add
rol
add
mov
xchg
ret
nop
add
add
cmp
add
add
add
sub
jmp
add
imul
inc
adc
jmp
add
nop
clc
add
pop
cmp
mov
xchg
ret
add
mov
mov
nop
jmp
add
xor
jae
add
lcall
and
jmp
or
add
mov
dec
cmp
nop
jmp
nop
add
out
add
nop
jmp
adc
filds
call
push
sub
add
test
push
mov
pop
xor
movsb
jo
int
add
int
pop
jae
jmp
add
sarb
iret
mov
nop
jmp
fisttps
mov
nop
jmp
add
add
repnz
jmp
jmp
xlat
or
inc
mov
mov
nop
jmp
sub
add
scas
lea
nop
jmp
add
call
push
nop
jmp
adc
call
nop
jmp
and
add
sahf
add
nop
jmp
add
inc
add
mov
xor
call
sub
adc
add
add
call
nop
jmp
sbb
movzwl
nop
jmp
scas
shrb
sbb
inc
and
nop
jmp
add
add
jmp
adc
add
je
add
cmpw
nop
jmp
add
fidivs
add
addl
out
adc
lcall
aas
nop
jmp
add
add
add
mov
add
incl
add
nop
jo
out
push
mov
rcrl
add
xchg
add
arpl
mov
jmp
and
add
std
add
pushl
jp
stos
nop
jmp
add
mov
push
mov
xchg
ret
add
jmp
push
add
addr16
addr16
xor
call
in
pusha
push
mov
xchg
ret
add
adc
mov
nop
jmp
mov
add
mov
lods
sub
add
testl
nop
jmp
pop
add
clc
add
add
jmp
add
ret
push
nop
jmp
add
adc
add
add
add
ret
mov
xchg
ret
call
push
mov
xchg
ret
stos
adc
add
nop
jmp
add
push
mov
nop
jmp
add
jae
pop
add
nop
jmp
pop
scas
adc
push
xor
call
push
mov
jne
mov
nop
jmp
add
add
add
incl
out
rep
nop
jmp
call
adc
ljmp
add
add
add
add
xor
clc
jb
addr16
aad
add
add
jb
nop
jmp
add
aas
mov
nop
jmp
sbb
ror
push
mov
xchg
ret
scas
nop
dec
mov
nop
jmp
clc
add
popf
jno
sub
movsb
nop
jmp
nop
clc
pop
xor
add
pop
push
nop
jmp
add
push
push
nop
jmp
add
nop
jmp
add
jns
adc
jae
je
nop
jmp
ljmp
push
add
nop
jmp
add
std
adc
add
leave
push
push
mov
xchg
ret
add
push
pop
loope
mov
mov
xchg
ret
popf
clc
clc
add
jmp
adc
nop
test
js
mov
inc
cmp
fstps
add
mov
add
pushl
sahf
std
je
les
out
rorl
jb
nop
jmp
nop
and
and
filds
jmp
jmp
jmp
adc
add
ss
add
mov
jmp
push
sar
stos
jno
jno
add
mov
nop
jmp
add
jb
add
fmull
test
call
add
jmp
jmp
add
mov
add
nop
jmp
add
sbb
mov
jno
pushl
lcall
pause
jmp
adc
adc
adc
push
push
mov
xchg
ret
sbb
jne
nop
jmp
add
add
jne
nop
jmp
stos
push
add
mov
push
mov
xchg
ret
add
ret
rep
nop
jmp
sbb
add
add
pop
flds
stc
nop
jmp
sahf
add
add
cmpsb
add
add
jecxz
mov
add
fmull
lcall
ret
addr16
mov
add
jbe
add
std
pop
nop
jmp
pop
adc
adc
jmp
add
test
or
add
add
add
add
icebp
nop
jmp
scas
rolb
sub
mov
mov
push
mov
xchg
ret
incl
jmp
sti
call
add
add
sub
add
call
add
add
jmp
adc
call
jmp
add
add
add
lods
and
imul
add
add
push
scas
ret
push
mov
xchg
ret
push
add
popf
in
imul
nop
jmp
incl
add
pop
sbb
xor
nop
jmp
std
add
add
mov
nop
jmp
and
sbb
mov
or
add
push
add
in
pop
nop
jmp
add
add
add
jmp
add
decl
add
inc
je
cmp
nop
jmp
add
xlat
add
call
nop
jmp
xlat
cmc
jb
rcrb
mov
nop
jmp
add
add
add
add
adc
incl
call
add
call
jmp
add
pop
sbb
add
test
nop
jmp
and
test
pop
add
pop
jle
adc
nop
jmp
mov
adc
mov
nop
jmp
sbb
add
add
pusha
add
inc
add
mov
pusha
nop
jmp
nop
add
xlat
fbld
add
mov
nop
jmp
sub
add
sub
add
jl
sbb
jmp
add
add
scas
mov
nop
jmp
sub
mov
jae
push
add
ss
add
test
mov
in
inc
add
add
jne
pop
nop
jmp
sbb
and
add
stos
nop
jmp
jmp
xlat
scas
adc
jmp
nop
jmp
add
adc
std
scas
pop
add
add
call
nop
jmp
add
fistps
push
mov
xchg
ret
jns
add
adc
push
in
pushl
adc
add
fdivl
call
jmp
sub
mov
nop
jmp
scas
pushl
add
inc
nop
jmp
stos
add
add
add
push
add
nop
jmp
add
pop
xor
nop
jmp
inc
add
sub
add
rcrb
jno
mov
push
mov
xchg
ret
clc
ljmp
push
negb
jmp
add
xor
add
add
nop
jmp
xor
sbb
aam
mov
nop
jmp
stos
add
add
add
daa
add
call
nop
jmp
add
jmp
jp
nop
jmp
nop
add
push
or
movb
mov
xchg
ret
stos
add
fadd
jmp
icebp
mov
lods
add
loopne
jmp
add
lods
addr16
or
add
push
mov
xchg
ret
add
adc
dec
push
mov
mov
add
xorl
ret
add
call
add
incl
add
add
movsb
inc
add
incl
and
mov
nop
jmp
add
mov
int3
mov
nop
jmp
je
jmp
mov
inc
add
lcall
jmp
add
lods
add
sub
add
jl
nop
jmp
mov
add
cmp
insl
or
add
incl
adc
push
sbb
pause
jmp
call
add
cli
cmpl
nop
jmp
add
sbb
outsl
xor
nop
jmp
add
add
add
cmp
leave
sub
add
push
cmp
jmp
push
sarb
cmp
mov
xchg
ret
jb
scas
sbb
nop
jmp
je
nop
add
nop
jmp
add
add
add
add
rclb
xchg
xchg
inc
add
add
dec
cmp
jmp
push
add
pop
and
jb
inc
add
add
add
outsl
arpl
add
add
inc
lods
push
push
mov
xchg
ret
repnz
mov
push
mov
xchg
ret
add
add
nop
jmp
add
adc
std
and
mov
nop
jmp
jno
add
call
shl
loop
lahf
pop
nop
jmp
add
jns
add
stos
lret
nop
jmp
mov
add
add
push
mov
xchg
ret
sbb
pop
nop
jmp
sub
push
adc
call
push
mov
xchg
ret
clc
xlat
in
out
push
push
mov
xchg
ret
pop
adc
and
je,pt
nop
jmp
and
clc
jge
add
add
nop
jmp
adc
jmp
push
add
add
push
nop
jmp
jmp
add
roll
add
in
std
add
cmc
jb
push
fimuls
jmp
mov
mov
pushl
nop
jmp
addr16
add
movsb
add
add
push
push
mov
xchg
ret
add
sbb
nop
jmp
sbb
add
lea
nop
jmp
sub
add
add
jno
incl
add
nop
jmp
and
add
add
add
mov
adc
and
addr16
popa
add
in
jo
lcall
push
mov
xchg
ret
clc
adc
sub
pushf
or
add
add
ret
add
nop
jmp
jno
push
add
popa
add
push
add
sub
jmp
add
std
adc
xor
loopne
xor
push
nop
jmp
jmp
add
push
arpl
nop
jmp
push
add
add
mov
nop
jmp
add
jmp
mov
nop
jmp
adc
add
add
push
mov
xchg
ret
pop
xor
add
cmc
jb
call
jmp
add
scas
add
add
xchg
bound
decl
push
mov
xchg
ret
add
test
das
call
nop
jmp
add
add
add
add
lcall
popa
nop
jmp
add
add
add
add
cmp
sti
nop
jmp
add
jae
add
add
call
nop
jmp
jno
sub
addb
pop
nop
jmp
mov
add
add
add
nop
jmp
mov
add
sahf
je
shr
rclb
push
mov
and
add
jmp
add
add
clc
and
add
mov
nop
jmp
add
repnz
add
nop
jmp
add
add
add
add
ret
push
mov
add
or
cmc
nop
fdiv
rclb
incl
clc
or
mov
and
add
nop
jmp
jb
addr16
add
mov
nop
jmp
push
push
add
inc
add
call
nop
jmp
clc
and
addr16
lcall
inc
add
add
cwtl
adc
mov
and
add
add
lahf
imul
nop
jmp
add
cmc
add
adc
lcall
or
nop
jmp
add
adc
pop
imul
clc
add
stos
add
push
mov
xchg
ret
add
iret
popa
nop
jmp
add
clc
add
cmc
mov
jmp
xor
add
pop
nop
jmp
or
add
add
add
scas
add
nop
jmp
add
xlat
add
add
decl
nop
jmp
sub
add
incl
sarb
mov
add
fadds
add
sbb
add
add
jmp
push
nop
jmp
add
add
add
dec
push
mov
sub
and
movsl
test
add
inc
sub
lcall
add
cmp
call
mov
ret
nop
jmp
adc
adc
pop
add
inc
xchg
jbe
pusha
push
mov
xchg
ret
add
add
mov
add
call
or
test
jmp
or
sti
mov
nop
jmp
add
add
add
mov
xchg
ret
add
jns
test
nop
jmp
scas
add
jno
add
repz
push
pop
push
add
sahf
push
nop
jmp
add
add
cltd
mov
push
mov
xchg
ret
add
and
add
xchg
nop
jmp
scas
add
stos
xlat
jmp
mov
nop
jmp
add
incl
mov
dec
mov
nop
jmp
incl
add
and
or
call
incl
add
sub
add
add
nop
jmp
add
add
adc
incl
add
scas
add
repz
shl
nop
jmp
add
add
xlat
sti
test
nop
jmp
add
add
sti
mov
push
mov
xchg
ret
add
mov
int3
add
add
add
mov
push
mov
xchg
ret
add
add
scas
mov
nop
jmp
and
sbb
add
pop
mov
nop
jmp
adc
je
add
and
jmp
push
adc
nop
jmp
jno
mov
call
add
scas
add
nop
jmp
add
add
jmp
add
sbb
add
mov
nop
jmp
cmc
add
add
add
call
incl
add
addl
push
mov
repz
jl
jl
add
add
addr16
push
nop
jmp
add
sbb
std
add
sbb
push
mov
fiaddl
add
add
add
sub
out
push
push
mov
xchg
ret
xlat
nop
pop
add
lcall
call
incl
adc
add
jmp
nop
jmp
add
add
ret
add
xlat
std
add
add
xlat
add
add
add
in
nop
jmp
add
adc
jno
lods
push
nop
jmp
rolb
pop
add
je
scas
mov
nop
jmp
fidivs
call
nop
jmp
add
cmc
add
lahf
lea
nop
jmp
add
add
add
cmp
movsb
nop
jmp
je
sbb
add
jmp
push
nop
jmp
sbb
add
add
in
stos
add
nop
jmp
add
add
add
add
bound
decl
dec
imul
incl
add
add
mov
nop
jmp
add
add
xchg
mov
sbb
test
call
incl
jmp
xchg
imul
lcall
je
add
mov
popf
inc
add
sub
nop
jmp
adc
add
jmp
mov
nop
jmp
jae
nop
popf
xlat
cmc
pop
push
push
mov
xchg
ret
inc
add
sarb
push
mov
xchg
ret
mov
cmp
repz
mov
xchg
ret
add
jmp
add
add
or
enter
add
lea
push
mov
xchg
ret
add
lea
push
mov
xchg
ret
add
dec
lea
nop
jmp
xor
add
addr16
les
nop
jmp
filds
push
mov
jmp
sub
add
xchg
cltd
test
nop
jmp
jb
mov
sbb
pause
jmp
jno
add
add
add
addr16
ljmp
sbb
sbb
push
mov
ret
add
test
mov
cmp
nop
jmp
and
xor
popf
sbb
loopne
dec
mov
nop
jmp
add
dec
add
nop
jmp
test
add
nop
jmp
shrb
jmp
shrl
jmp
add
add
sbb
push
nop
jmp
sub
add
mov
repz
lcall
add
push
mov
xchg
ret
add
jns
cmc
fiaddl
dec
cmp
jmp
add
add
jno
mov
mov
nop
jmp
add
out
inc
add
mov
nop
jmp
jmp
add
push
sub
xor
or
in
jne
nop
jmp
call
sub
nop
jmp
stos
add
add
add
mov
nop
jmp
jmp
shlb
lea
push
jmp
add
add
cltd
push
mov
pop
aad
sub
into
aad
clc
push
jmp
test
add
push
mov
xchg
ret
jae
add
push
jb
ljmp
nop
jmp
sbb
add
push
add
and
jmp
jno
adc
jmp
nop
jmp
add
sub
add
stos
jmp
nop
jmp
and
add
dec
xchg
nop
jmp
add
and
fstl
jmp
sbb
add
pop
and
jns
movzwl
nop
jmp
jmp
pop
push
nop
jmp
add
add
add
js
test
call
incl
adc
add
add
incl
add
xlat
ret
movzwl
nop
jmp
cmc
add
add
jmp
add
clc
add
fwait
pushl
nop
jmp
je
jae
jno
jl
add
incl
nop
jmp
add
mov
jnp
mov
mov
nop
jmp
mov
add
add
shll
add
add
fidivs
roll
enter
jmp
jae
and
add
add
dec
nop
jmp
repnz
add
and
ljmp
add
nop
jmp
je
jmp
add
lcall
les
jmp
add
sbb
adc
mov
test
repz
lcall
add
nop
jmp
jmp
popa
nop
jmp
add
mov
xchg
sti
pop
nop
jmp
add
jmp
add
nop
jmp
inc
add
xor
decl
push
mov
clc
mov
adc
add
jno
imul
jb
fxch
jl
cmp
and
push
sahf
shr
std
inc
add
lahf
cld
lahf
bound
lcall
sub
por
int
sar
mov
roll
add
add
cmpsl
add
add
test
adc
decl
add
cmp
add
sub
inc
add
cltd
daa
add
ja
cwtl
lcall
fadds
add
addl
cld
inc
add
adc
call
imul
dec
pop
add
push
push
xor
data16
add
leave
cmpsb
add
xchg
lahf
xor
insb
inc
add
cmpsb
add
add
add
or
add
sub
add
cltd
data16
ljmp
and
incl
add
add
cmp
incl
add
mov
arpl
incl
lods
dec
into
dec
std
sbb
dec
adc
lcall
add
add
mov
or
add
into
scas
and
jmp
push
jecxz
pop
and
mov
and
jle
add
sub
add
jle
add
add
push
xchg
cmp
lfs
incl
mov
pop
add
xchg
push
add
jmp
add
jbe
add
add
pop
mov
bound
fstps
jl
jle
add
ret
inc
add
mov
inc
add
pushl
cmp
imul
add
add
in
push
bound
xor
adc
push
rclb
int3
xchg
pop
cmp
mull
jmp
add
or
mov
jle
inc
add
testb
add
std
pop
cmc
fsubs
addb
mov
add
add
add
xchg
aaa
sub
push
xchg
mov
pop
popf
cmp
addb
add
add
ljmp
xchg
pop
mov
add
cmp
xchg
push
jmp
add
add
fcoms
call
add
lea
fidivrl
fistps
int
mov
add
inc
add
hlt
pop
jns
add
cltd
in
xor
sti
add
popa
add
rcl
push
ja
add
add
imul
add
sub
add
mov
jmp
mov
jae
call
add
mov
in
hlt
mov
mov
decl
rcll
add
imul
xchg
outsb
or
lcall
addl
mov
sbb
icebp
cmp
jno
call
idivl
add
dec
add
pushl
jmp
int
add
pusha
add
loop
xor
add
pushl
add
sti
push
ljmp
or
add
mov
loope
sbb
or
inc
add
pop
shlb
pushf
add
lcall
add
fldenv
fsubrl
inc
add
xchg
adc
jmp
add
test
sbb
add
loopne
ss
sub
iret
add
lcall
scas
scas
xchg
inc
add
add
movsb
add
jae
cmp
add
clc
xchg
xchg
or
aas
fptan
jge
add
push
das
pusha
add
fcmove
add
lcall
cmpsl
add
sbb
add
xchg
mov
add
mov
add
decl
repnz
xchg
add
in
lret
call
add
mov
pop
imul
pop
stos
cmp
add
pop
dec
push
add
cmp
sub
ljmp
leave
jne
add
xchg
cmp
xor
lcall
pop
add
add
add
add
and
call
adc
aaa
rorl
int
mov
add
idivb
add
fwait
scas
in
bound
dec
das
push
push
add
sub
or
add
push
add
cmp
add
xchg
test
add
cmp
jmp
popf
lock
lea
add
add
insb
mov
sbb
add
in
rorl
jl
add
ljmp
mov
les
movl
inc
add
add
aaa
addb
mov
push
icebp
ret
cmc
inc
add
xchg
cwtl
sbb
add
ret
dec
loop
mov
add
and
fimuls
ret
add
dec
jne
add
loop
mov
xchg
les
adc
pop
add
ljmp
add
adc
inc
add
add
adc
add
cmp
mov
add
or
inc
add
sbb
add
cltd
lods
lahf
popa
add
test
scas
fwait
push
add
out
mov
add
in
mov
daa
add
jg
in
dec
jo
push
jecxz
mov
data16
add
add
in
sbb
insb
divps
add
adc
add
pop
repnz
ljmp
lret
dec
push
jle
scas
sbb
add
ja
mov
add
add
sub
lea
fildll
bound
jle
pop
jmp
je
addl
addl
out
mov
jbe
add
outsl
frstor
inc
add
stc
ljmp
fadd
add
add
add
mov
lods
or
sbb
jge
mov
jp
fbld
add
test
adc
call
scas
inc
add
sub
add
add
adc
lcall
add
jno
jnp
addb
xchg
roll
pop
mov
sub
add
add
call
jge
jmp
mov
add
ss
adc
out
sbb
lock
outsl
sbb
ljmp
inc
add
stos
xchg
fisttpl
add
in
rorb
fnstenv
add
mov
add
inc
add
add
jge
add
jl
add
pop
mov
jp
rolb
into
pop
inc
add
jae
call
scas
in
lret
dec
les
imul
insb
rolb
add
or
add
inc
add
jge
add
or
mov
ljmp
mov
cmp
xor
jg
add
enter
add
lret
lds
shl
popf
push
pushf
add
std
jae
lcall
add
dec
add
fmull
lret
or
add
add
mov
add
popf
add
in
cld
push
mov
mov
mov
add
out
sub
out
int3
sti
stc
push
add
aad
add
out
ljmp
add
jno
jmp
add
jmp
add
sub
add
add
call
shlb
add
lret
jg
scas
ret
sub
adc
jle
jge
lahf
test
add
fdivl
add
clc
inc
add
mov
add
sysret
add
push
aas
repnz
add
or
test
mov
std
xchg
push
lds
repnz
add
jmp
add
cmp
add
rorl
mov
nop
dec
or
add
sub
add
add
and
add
call
leave
inc
add
call
cmp
pushf
jae
lcall
jmp
push
sub
call
add
cli
loopne
dec
addb
xor
decl
mov
add
jl
cmp
add
mov
mov
lods
fwait
push
add
cmp
inc
add
dec
sub
push
pop
add
aaa
xchg
mov
add
fnsave
and
rclb
sbb
xor
mov
mov
sub
xchg
and
jl
addl
cmp
add
sub
in
mov
add
push
sti
mov
cmpsb
add
nop
mov
add
mov
bound
lcall
add
sahf
pop
test
roll
dec
bound
call
mov
sbb
int3
mov
add
add
int
mov
mov
sub
jl
jl
jmp
divb
jg
add
stos
push
add
rcrl
dec
out
fildl
jge
inc
add
lds
xchg
test
and
pushl
ljmp
jp
or
out
test
das
in
lds
idivb
arpl
jmp
lea
stos
dec
iret
aam
jns
mov
into
call
dec
call
pushl
add
add
mov
jl
add
add
adc
decl
add
ljmp
add
addb
insl
insb
add
decl
pop
add
add
lds
push
add
cmp
lods
addl
add
add
add
xor
jmp
add
jg
sbb
mov
arpl
lcall
int3
and
inc
add
int
add
ljmp
and
inc
add
push
xchg
lock
dec
outsl
cli
or
push
add
xor
lock
pop
in
or
add
add
call
cmp
shrl
add
jne
mov
add
add
lcall
call
fcoml
add
ja
imul
pushl
test
repz
mov
cmpsb
add
push
stc
loopne
adc
ljmp
ljmp
test
pop
sub
add
rolb
add
movsl
add
add
xchg
mul
add
sub
cmp
add
jge
insb
jmp
incl
ljmp
add
cs
lret
sub
add
jo
decl
in
out
add
jmp
incl
movb
mov
add
add
mov
fstps
call
movl
pop
sarb
sbb
pop
xor
mov
jno
decl
ss
add
xchg
out
and
call
ljmp
cmpsb
add
mov
sbb
aad
add
add
incl
add
stos
lret
in
out
mov
movsb
add
add
stc
rcrb
add
cmp
mov
pop
rolb
mov
pop
xchg
fildl
push
adc
call
ret
add
decl
inc
add
ficoml
add
push
cmp
leave
scas
lods
and
lcall
add
add
add
std
mov
pushf
xor
add
punpckhwd
add
push
add
mov
cmp
mov
cmp
xchg
dec
push
cmp
movb
sub
add
sub
xchg
bound
pushl
jmp
add
push
popf
addl
jle
in
movsl
add
aad
inc
add
cmp
inc
add
pop
leave
dec
push
add
testl
xor
sti
call
test
add
pop
mov
add
xor
pushl
add
add
stos
push
cmp
jmp
mov
jle
jns
mov
aad
pop
add
xor
push
jne
inc
add
cmpsl
add
mov
add
ljmp
ja
add
inc
add
mov
inc
add
adc
ljmp
shll
add
and
jmp
add
add
add
lods
and
push
pop
jmp
sbb
push
add
sahf
mov
hlt
ds
pop
stos
shll
add
ret
add
add
jno
cmp
jbe
cmp
add
lods
scas
push
push
add
fdivrs
or
imul
mov
daa
add
add
bound
incl
in
and
inc
add
add
outsl
fcmovbe
pop
bound
pushl
add
int
fstps
sub
rolb
mov
add
insb
inc
add
mov
xchg
push
mov
and
cmp
adc
add
mov
or
add
call
adc
jo
incl
sub
mov
push
add
imull
fstl
pushl
incl
enter
jne
add
add
xchg
mov
add
out
or
ja
and
fisttpl
jmp
add
pushl
add
dec
push
pop
arpl
jmp
add
add
loop
ss
test
adc
call
popa
add
xchg
negb
add
pop
adc
lcall
add
push
add
or
aas
jge
add
mov
scas
pop
lds
fstpl
jp
mov
inc
add
lds
imul
test
pop
xchg
cmp
decl
add
inc
add
jmp
add
xchg
ficoms
incl
add
inc
add
sub
jmp
mov
std
jae
inc
add
push
add
add
movl
add
dec
jnp
fmull
mov
add
sbb
daa
add
mov
call
and
leave
push
add
add
jb
lcall
add
jbe
add
push
add
repnz
dec
jo,pn
jmp
add
lcall
in
and
mov
mov
fdivrl
sti
js
out
sti
pop
add
mov
shrl
call
add
mov
pushl
and
mov
add
js
mov
mov
pop
mov
add
les
jbe
sbb
cld
push
push
outsb
sub
jmp
add
je
mov
sbb
outsl
fistl
decl
addb
insl
cmpsb
add
mov
jmp
mov
je
add
mov
mov
push
add
add
sub
sbb
cwtl
lock
add
dec
adc
cwtl
dec
sub
dec
inc
add
pushl
add
sarb
sbb
push
or
clc
popl
lea
xchg
movl
sub
jmp
add
lcall
sti
fiadds
jns
add
jbe
mov
cmp
data16
add
add
cmp
leave
das
xor
call
pushl
repnz
call
test
xor
jmp
pushl
add
loopne
dec
repz
push
add
jno
ljmp
lods
bound
incl
and
call
xchg
jae
decl
sub
pop
lods
lock
fucom
add
ljmp
sub
insl
mov
mov
add
das
mov
cmp
add
add
sub
ret
add
test
jns
add
roll
mov
decl
cmc
jb
mov
dec
jp
fimuls
add
add
and
pushl
mov
pop
sub
inc
add
fs
push
mov
push
fmuls
roll
add
add
aad
insl
inc
add
je
add
xor
jmp
jp
pop
gs
cmp
lret
sub
test
jmp
stc
or
or
add
add
mov
cmp
jmp
in
fcomi
cmp
mov
add
push
cmpsl
add
fisttpll
adc
ljmp
add
hlt
jbe
js
mov
das
and
jmp
add
ret
add
mov
add
cmp
test
and
lcall
addl
cmp
fisttps
add
scas
jb
lcall
add
dec
mov
add
adc
dec
ficoml
and
pushl
ja
in
pop
add
incl
push
add
pop
clc
add
decl
add
and
jmp
add
fistpll
add
xchg
add
test
arpl
decl
cmp
push
xchg
ds
adc
lcall
inc
add
pop
add
pop
mov
dec
sub
add
out
imul
inc
add
repnz
sub
add
sahf
out
sub
inc
add
ds
mov
rolb
mov
jns
nop
xchg
bound
pushl
cmp
mov
add
add
fidivl
add
and
xor
mov
decl
cmp
mul
add
sbb
add
and
incl
add
pop
add
movl
lcall
adc
incl
ret
sub
add
call
add
mov
jp,pn
jns
add
jp
push
icebp
pop
pop
xchg
xchg
mov
adc
add
mov
jg
push
stos
lods
jmp
data16
leave
add
decl
jmp
add
add
mov
je
or
xor
decl
cmp
cli
iret
xchg
xor
jmp
jmp
add
jo
dec
test
mov
out
notb
add
ds
mov
add
add
push
testb
jle
mov
shrl
mov
decl
add
rolb
add
inc
add
jg
jp
push
add
sub
add
test
add
dec
xchg
sbb
imul
add
add
add
icebp
add
les
jp
add
daa
add
push
mov
and
incl
or
or
jge
adc
in
mov
mov
lahf
pusha
add
inc
add
add
lods
pop
cmp
jge
jae
lcall
add
mov
add
int3
or
add
sub
push
xchg
sbb
or
add
ret
jmp
xchg
xchg
cld
ret
add
mov
in
pusha
add
std
dec
dec
sbb
lcall
je
add
cmp
cli
imul
pushl
and
incl
ds
mov
test
int
popa
add
and
sti
mov
aam
in
xchg
test
add
in
out
movsb
add
loopne
dec
add
xchg
jae
ljmp
adc
call
fnstenv
add
xor
pushl
add
leave
mov
inc
add
repz
mov
ljmp
inc
add
cmp
into
jge
fbld
add
inc
add
mov
push
add
mov
add
add
loope
ja
dec
loopne
lcall
add
mov
loop
push
inc
add
test
mov
sbb
mov
add
add
fadd
add
add
ds
xchg
add
in
sub
inc
add
cmp
shl
sbb
add
lea
jl
add
pop
push
add
clc
push
sub
add
scas
adc
pop
shrb
cmp
incl
push
push
add
inc
add
add
add
jae
in
and
lcall
add
cs
add
or
add
call
jmp
push
mov
pop
mov
incl
add
test
roll
dec
outsl
popa
add
jae
inc
add
lcall
cmp
sbb
loope
xchg
pop
lahf
add
xchg
xor
incl
dec
cmpsl
add
add
sub
cmp
add
scas
lods
sub
xchg
push
add
push
and
fcomi
aam
dec
lcall
cmp
xor
cmp
add
add
mov
ss
sbb
jl
add
add
add
pop
addb
sbb
fildl
add
add
imull
outsl
sub
add
outsl
lea
stos
mov
ljmp
gs
pop
nop
sbb
cld
fstl
add
mov
out
jmp
pusha
add
or
add
in
std
lcall
add
add
add
mulb
call
inc
add
add
in
jb
stc
mov
add
movsl
add
add
add
sub
jo
jmp
je
addb
add
push
scas
popf
lcall
add
xchg
and
decl
iret
pop
add
aas
sarb
add
nop
push
add
out
pop
flds
push
hlt
pop
inc
add
push
popa
add
push
mov
ja
add
inc
add
pop
cmp
add
mov
outsb
xchg
and
inc
add
xchg
sub
push
add
mov
add
add
lock
cltd
in
jmp
data16
push
rolb
movb
jmp
add
out
sbb
call
add
incb
inc
add
add
test
xor
xor
decl
out
clc
ret
add
stos
inc
add
addb
aaa
xchg
adc
push
add
gs
inc
add
cmpsl
add
mov
adc
pushl
clc
popa
add
pop
pop
add
push
inc
add
adc
decl
or
std
xchg
push
or
and
call
repnz
into
jnp
mov
add
pop
jbe
mov
in
aaa
xor
cmp
adc
inc
add
lods
or
sub
add
out
mov
daa
add
add
mov
add
xchg
mov
loope
mov
pop
dec
jno
jp
cmp
dec
sub
test
and
clc
jnp
loope
push
add
sub
int
add
adc
decl
xchg
dec
pusha
add
in
fmul
cmpsb
add
add
movb
add
stos
ret
add
add
push
lods
je
push
add
xchg
jecxz
movsb
add
add
mov
add
dec
out
xchg
or
inc
add
cmpsl
add
idivb
aam
cmp
rcll
scas
aad
dec
push
pop
add
cmp
pop
icebp
jns
add
fisubs
lcall
pusha
add
fisttpll
add
decl
or
mov
sub
add
jb
lcall
lcall
push
add
pop
movsb
add
jp
mov
add
push
aaa
outsb
mov
ljmp
addl
mov
test
inc
add
and
adc
out
sbb
jbe
add
xchg
pop
add
test
push
jl
add
mov
mov
cmc
in
pop
pop
push
add
push
addb
scas
rclb
scas
push
push
aaa
loop
xor
jg
add
loop
fisubrl
lcall
int3
dec
mov
adc
daa
add
add
jnp
inc
add
movsl
add
adc
sbb
add
jne
inc
add
movl
add
or
cmc
push
cld
les
movl
push
add
sbb
add
cwtl
inc
add
mov
add
mov
xlat
sbb
lea
call
adc
add
out
test
gs
add
mov
dec
movsl
add
aam
add
call
cmp
arpl
lcall
clc
cmp
addl
add
cmpsl
add
add
js
add
call
mov
movb
insl
jo
in
pop
bound
decl
rcrl
pusha
add
paddd
das
push
incl
add
call
loope
sar
add
pushl
fsubs
fimull
push
pop
mov
add
push
dec
xchg
dec
add
sub
add
mov
fsubl
add
add
xor
add
call
add
idivl
inc
add
adc
pushl
add
jmp
dec
repz
mov
push
mov
mov
mov
ljmp
add
or
mov
dec
mov
add
cli
sbb
pop
add
ljmp
outsl
inc
add
roll
add
mov
add
jmp
pusha
add
outsb
cmpsl
add
nop
dec
data16
push
add
cmp
mov
cli
idivb
push
stc
xor
push
addl
ficompl
add
js
inc
add
jnp
add
movsb
add
aas
jne
sub
add
jmp
add
adc
call
jmp
add
sti
mov
addb
add
mov
or
add
sbb
movsb
add
push
add
add
ljmp
add
add
pop
mov
mov
add
jnp
daa
add
in
fldt
add
std
sahf
or
mov
add
dec
mov
lock
add
mov
add
addl
add
scas
je
add
add
fimuls
push
add
in
sbb
aas
add
add
ljmp
mov
add
add
rolb
add
pop
cmp
sti
movl
or
add
incl
add
int3
xor
test
add
gs
int3
adc
decl
mov
ljmp
xor
add
mov
add
inc
add
mov
lcall
incl
add
sbb
dec
add
pushl
movl
xor
call
call
lret
and
jmp
xchg
lods
mov
add
cmpsl
add
add
ss
or
add
ds
and
cmpsb
add
add
cltd
addb
add
and
jmp
add
add
add
or
sbb
add
dec
mov
add
in
test
mov
incl
addl
add
mov
movl
aam
add
dec
test
add
imul
inc
add
cli
pop
sub
add
out
xchg
xor
mov
cld
adc
cld
test
adc
decl
pushl
add
jle
dec
mov
sbb
lock
pushl
pushl
add
xor
call
sbb
call
add
add
lods
xor
decl
add
loopne
iret
movsl
add
mov
add
ret
add
repz
mov
and
bound
ljmp
data16
add
pusha
add
ret
add
add
cmp
cs
mov
sub
enter
add
jmp
aaa
cmpsl
add
adc
inc
add
movb
mov
clc
addb
insl
les
pop
mov
loopne
jne
sahf
loopne
les
inc
add
xor
pushl
add
inc
add
cmc
mov
add
std
int3
or
add
popa
add
xlat
arpl
cmp
add
addl
add
add
push
loop
inc
add
push
sbb
sub
and
ljmp
add
mov
add
mov
push
or
ret
add
hlt
bnd
add
mov
loope
je
outsb
ficoms
daa
add
add
push
mov
mov
xlat
dec
adc
jmp
add
loope
repz
inc
add
dec
jmp
ret
add
jmp
ljmp
xor
decl
jp
add
aam
je
roll
or
call
iret
ljmp
inc
add
dec
test
enter
add
out
xor
lcall
cmp
add
inc
add
add
stc
push
add
dec
mov
addb
inc
add
adc
xor
push
cmp
sub
add
dec
les
lret
jge
add
push
hlt
pop
cwtl
inc
add
push
add
mov
lds
jnp
xchg
inc
add
scas
or
xchg
xchg
mov
push
mov
inc
add
ljmp
cltd
mov
ljmp
add
stos
in
lret
addl
insb
inc
add
add
pop
sbb
add
stos
mov
add
cltd
mov
imul
add
movl
lods
insb
adc
lcall
arpl
call
leave
dec
cs
and
mov
pop
jno
jmp
sbb
or
add
test
add
add
cld
adc
ljmp
and
fadds
stos
mov
or
add
loopne
pop
test
sub
adc
out
int
add
pop
jae
call
lods
roll
add
aaa
mov
mov
add
fstl
jns
add
rolb
insl
mov
mov
add
pushl
add
sub
pop
add
movb
scas
stos
dec
pop
inc
add
test
add
jmp
mov
add
mov
add
and
out
mov
aas
test
sub
inc
add
mov
sbb
add
push
lret
push
add
not
data16
pop
and
jno
call
cltd
test
in
nop
add
call
call
add
rorb
add
pushl
add
leave
mov
ret
jl
add
add
ja
add
adc
nop
in
fdiv
jbe
add
cmp
bound
ljmp
rolb
out
jo
fldenv
add
dec
scas
stc
add
inc
add
add
add
mov
lahf
xchg
xor
lcall
mov
lock
pop
inc
add
out
add
call
lock
mov
mov
add
cmc
mov
fs
cld
out
push
add
xchg
mov
incb
xchg
jge
push
xchg
add
add
sbb
add
jmp
mov
inc
add
stos
movb
rolb
and
ljmp
add
add
sqrtps
jmp
jbe
lahf
clc
aaa
addb
sub
ja
enter
jmp
add
add
call
test
aad
imul
ret
add
repz
aam
xchg
mov
push
jp
loop
aad
sbb
sub
inc
add
shl
add
pushl
pop
add
decl
mov
add
aam
inc
add
idivl
rcl
ljmp
add
iret
mov
mov
jge
add
pushl
outsb
jns
das
add
dec
inc
add
fsts
dec
test
addl
addl
mov
add
xor
jmp
add
in
jg
push
add
jmp
push
notb
lcall
cmp
lret
sub
add
fmull
jg
mov
icebp
inc
add
jns
dec
adc
mov
push
add
mov
add
add
lea
mov
add
popa
add
push
xchg
sub
add
pop
dec
insl
pop
outsl
fmull
pop
iret
fisttps
movsb
add
and
mov
cltd
jbe
clc
mov
mov
pop
lods
push
dec
sbb
add
add
add
pushl
enter
or
dec
test
add
jmp
add
decl
outsb
into
lahf
and
call
ficoml
ljmp
add
lock
jmp
add
xchg
stc
xor
ljmp
add
inc
add
pop
fwait
inc
add
push
add
insl
mov
jecxz
add
popf
repz
push
mov
imul
popa
add
push
add
movl
adc
mov
lcall
cmp
push
add
jae
pushl
add
ss
lcall
xchg
cmp
add
addl
icebp
das
push
push
cmpsl
add
add
mov
add
add
jno
call
inc
add
mov
xchg
mov
hlt
clc
inc
add
mov
movsl
add
pushf
ds
sub
push
arpl
decl
add
dec
dec
inc
add
loope
push
sbb
add
outsb
mov
sbb
jmp
add
mov
adc
roll
add
pop
decl
bound
call
jmp
add
in
push
lods
or
test
stos
pushf
pop
lret
repz
xchg
push
call
negl
pop
push
add
and
call
daa
add
lret
leave
in
shl
arpl
lcall
lock
pushl
decl
ds
mov
lahf
enter
sbb
dec
push
xchg
mov
jmp
add
pop
scas
ljmp
add
push
add
xor
jle
add
lods
cld
lods
dec
test
add
xchg
mov
pop
cmp
xchg
xchg
cld
push
add
lds
jp
jl
add
add
pop
sti
rolb
cmpsl
add
sub
repnz
cmp
mul
add
xor
pushl
sub
outsb
sub
add
push
lods
addl
and
dec
aas
insl
xor
lcall
loop
ret
add
int
mov
sbb
lea
and
mov
outsb
pop
add
addb
add
jmp
add
out
sahf
cltd
dec
lock
fcoml
ret
ja
cmpsl
add
daa
add
push
add
bound
call
lcall
sub
add
ror
aaa
inc
add
mov
in
sarb
or
add
loope
xchg
sub
add
add
call
add
add
and
lcall
add
int3
mov
rolb
sub
incl
fmul
arpl
fcomps
cmp
jle
add
pop
sbb
mov
mov
sub
call
inc
add
icebp
sub
add
cld
dec
test
inc
add
sub
ljmp
ja
add
dec
mov
inc
add
in
inc
add
adc
push
pop
imul
add
mov
addb
pop
push
add
lds
in
addb
add
mov
iret
clc
mov
negb
inc
add
xchg
inc
add
mov
movb
notb
add
loope
arpl
incl
scas
insl
adc
lcall
jle
in
sbb
add
mov
inc
add
push
sub
add
jg
sbb
sbb
add
loop
jb
pushl
incl
js
add
mov
add
push
add
inc
add
add
ljmp
adc
scas
push
sub
repnz
add
dec
xchg
ret
push
or
xlat
cmp
cmpsl
add
or
push
fcoms
jecxz
rorl
mov
add
xor
call
cmp
sahf
mov
inc
add
push
pop
adc
decl
dec
aaa
xchg
aam
add
jmp
add
add
xchg
stos
inc
add
pushf
xchg
popf
daa
add
add
push
shlb
add
xchg
cmp
aad
movb
add
add
add
or
shll
add
sub
add
addb
xor
call
aam
add
sahf
push
inc
add
add
mov
popf
sbb
pop
cmp
and
dec
inc
add
mov
xchg
mov
mov
adc
lcall
pop
fsubs
mov
pushl
add
sbb
add
jne
add
inc
add
mov
add
xchg
jo
incl
aas
testl
mov
scas
aas
pop
mov
fcmovbe
push
outsl
fists
add
out
cmp
rcrl
add
pop
mov
or
add
lcall
xchg
in
adc
incl
repnz
jmp
jmp
jmp
fs
repnz
ljmp
call
add
add
jmp
sub
push
add
outsl
arpl
js
movsl
add
pop
mov
add
aas
jne
or
aas
push
add
add
inc
add
push
add
push
add
mov
lcall
sub
pop
jle
cli
movb
out
mov
add
insb
fidivs
xchg
mov
mov
adc
mov
in
jnp
in
lret
popf
shl
add
sub
lea
add
add
lcall
dec
mov
jmp
scas
fdivrl
or
movl
dec
insl
pop
add
sbb
add
jmp
push
add
pop
inc
add
pop
inc
add
xchg
addl
clc
lea
add
loop
pop
cmc
pop
loop
sbb
mov
mov
dec
cmpsl
add
pushl
mov
add
add
xchg
jb
push
in
push
aas
push
cmp
xor
mov
sti
add
pushl
add
add
into
jmp
add
mov
nop
mov
xor
jns
add
imul
mov
add
jg
addl
add
incl
mov
cmpsl
add
and
call
fwait
sbb
add
and
sbb
xchg
into
repnz
adc
decl
sti
mov
mov
add
roll
addb
mov
add
xor
decl
push
fcom
and
jle
dec
mov
add
nopl
cmpsl
add
dec
shrb
decl
stos
aas
jo
cli
sub
pushf
imul
push
or
jne
add
out
pusha
add
and
fstpl
add
lods
sbb
mov
add
xchg
inc
add
add
call
jnp
add
movb
add
mov
sub
add
push
dec
sbb
nop
clc
mov
addl
es
pop
les
sub
call
cmp
add
loop
nop
int
add
std
test
push
add
sub
add
negb
aas
es
aam
data16
int3
xchg
add
decl
in
cwtl
add
inc
add
dec
and
ljmp
add
add
jp
push
aaa
and
in
pop
in
xchg
lods
jge
add
incb
add
jge
icebp
cmp
add
mov
jl
add
add
inc
add
cs
mov
leave
fwait
add
xor
mov
insb
pop
mov
push
mov
stos
notb
cltd
lea
sbb
clc
popa
add
cs
push
add
out
dec
pop
lods
pop
ret
add
add
in
loope
rclb
fisttpll
sbb
add
xchg
mov
ror
repnz
lods
push
add
rolb
dec
jno
jmp
add
inc
add
xchg
adc
incl
push
add
cmc
or
inc
add
xchg
jecxz
test
stc
push
jmp
fisttpll
pop
or
add
in
pop
xor
jmp
icebp
insb
dec
arpl
lcall
idivb
add
filds
lds
dec
add
cmp
inc
add
sub
shrl
into
data16
push
enter
add
add
add
push
or
add
add
loopne
outsb
pop
sbb
enter
pushl
mov
add
incl
popf
cmp
mov
and
jbe
mov
lock
add
lcall
add
add
inc
add
insb
push
das
sti
pop
push
add
sbb
movsl
add
cmp
jecxz
and
incl
jb
decl
and
out
mov
jne
roll
mov
and
ljmp
push
push
mov
add
xchg
xchg
mov
stos
mov
sub
add
in
sbb
addr16
adc
incl
add
call
pop
sbb
mov
jmp
add
jg
cld
push
test
addb
add
cwtl
mov
mov
xor
jmp
add
fsub
add
inc
add
inc
add
add
add
mov
sahf
icebp
push
sub
add
aaa
push
jae
std
into
sub
add
addl
cmp
testb
mov
cmp
in
push
add
sub
or
xchg
sub
add
pxor
cmp
cvtps2pd
jb
call
js
xchg
mov
popa
add
aaa
mov
data16
sub
dec
mov
add
mov
fwait
mov
in
push
add
sub
mov
jb
call
mov
sbb
popa
add
mov
ret
add
cmpsb
add
add
sbb
add
in
rol
add
add
jge
add
or
add
leave
bound
cmp
sub
add
xor
decl
and
call
sahf
xchg
sub
sbb
test
cmp
sahf
inc
add
test
decl
loopne
xchg
inc
add
insl
xor
jnp
dec
sarl
mov
add
add
add
add
jns
add
add
add
movl
add
add
out
or
mov
xchg
lcall
add
lret
je
testb
add
popf
rolb
daa
add
pop
mov
fistpl
rcrb
add
mov
test
mov
leave
ss
pop
stos
sahf
pand
lds
pop
pop
addl
addl
bound
dec
mov
mov
sahf
std
sub
add
jnp
add
add
stc
mov
push
jns
add
and
jmp
lcall
lods
mov
add
mov
decl
lods
mov
add
add
in
imul
add
ljmp
add
in
ss
inc
add
stos
inc
add
lods
fstl
add
sub
jmp
add
add
add
das
adc
mov
aaa
outsl
cld
in
dec
add
add
push
jl
sbb
clc
or
addl
call
add
incl
adc
mov
add
out
add
call
add
pop
mov
inc
add
lret
int
loopne
movsb
add
and
out
sub
add
or
adc
ljmp
fwait
ret
add
lcall
stc
in
ret
add
lret
lds
imulb
add
add
add
sti
loope
sbb
jle
add
add
jmp
decl
adc
jmp
lock
add
push
add
jmp
add
add
in
mov
cli
mov
or
mov
push
lret
and
lcall
add
add
imul
pop
add
add
es
mov
add
jg
fisubs
add
cmc
test
dec
or
add
cld
add
lcall
imul
dec
testl
add
sub
adc
jmp
add
jl
add
arpl
inc
add
add
jle
jl
ljmp
imul
pop
notb
add
add
adc
les
mov
mov
scas
inc
add
and
leave
xlat
add
adc
mov
add
pop
cltd
cli
jg
add
push
inc
add
outsl
popf
out
in
popf
push
add
stos
xchg
jg
fisttpll
lock
mov
sbb
add
data16
add
pop
adc
incl
aas
dec
mov
add
cs
jo
jle
add
or
in
pop
mov
add
call
cld
cmc
jg
mov
add
xchg
mov
push
add
leave
mov
jmp
add
stos
jbe
jge
dec
mov
call
cli
fsqrt
lcall
and
pushl
add
jmp
mov
iret
enter
add
rolb
add
xchg
push
pop
mov
mov
add
lahf
out
mov
add
add
lods
shlb
or
scas
cli
xchg
test
or
leave
insl
xor
incl
shlb
add
dec
jbe
add
mov
cmp
int
add
scas
cwtl
lcall
add
mov
add
add
mov
mov
xor
incl
add
aad
in
cs
scas
movl
add
or
mov
nop
rol
add
fwait
and
decl
mov
add
lods
and
lcall
divb
cli
pop
add
add
add
add
aam
lcall
inc
add
push
dec
dec
icebp
adc
or
loopne
les
sbb
add
out
cmpsb
add
sbb
add
addl
xchg
mov
mov
add
add
jmp
add
inc
add
or
and
lock
add
add
call
xchg
inc
add
movsb
add
xchg
xor
add
rolb
and
add
add
lret
adc
add
xchg
repnz
add
adc
dec
fdivl
movsl
add
call
add
push
add
imul
pop
add
in
test
pop
cmpsl
add
adc
ljmp
add
mov
test
add
fxch
in
cmp
bound
push
shl
pop
psllq
pop
dec
scas
ds
jne
xchg
jnp
mov
in
stc
adc
pushl
mov
push
js
out
in
iret
mov
or
outsl
mov
outsl
mov
sbb
inc
add
mov
add
mov
dec
mov
in
add
sti
inc
add
ret
add
mov
add
data16
cmp
roll
dec
mov
cmp
sub
mov
add
inc
add
pop
inc
add
push
xor
dec
sbb
add
in
mov
dec
push
sub
lds
and
call
loope
sub
cmp
push
sub
add
and
mov
stos
in
fidivrl
pop
divl
add
ljmp
popf
mulb
add
mov
add
add
mov
mov
pop
sbb
das
pop
pop
jp
add
xor
jmp
xchg
mov
dec
dec
push
into
push
add
dec
or
ljmp
lcall
sti
xchg
movb
add
fstl
add
and
inc
add
mov
add
je
add
add
push
clc
xchg
add
incl
add
and
decl
pop
xchg
and
cs
or
mov
ja
int3
pop
frstor
lcall
in
jns
add
fucomip
adc
inc
add
nop
push
cmp
ret
add
pop
clc
xchg
mov
pop
mov
aad
add
aas
xchg
cs
sub
add
add
add
xor
push
icebp
xor
ljmp
stc
inc
add
sub
insb
inc
add
cmc
fsts
test
add
push
xor
lcall
sahf
adc
lcall
push
repz
mov
and
push
inc
add
lods
hlt
jg
fdivrl
jp
mov
cld
xchg
lcall
inc
add
cs
add
cmpsb
add
in
pop
stc
xor
call
daa
add
mov
decl
xchg
and
push
jmp
dec
cwtl
fdivrs
add
scas
movsb
add
add
or
mov
and
ljmp
sbb
add
div
and
ljmp
insb
push
lods
lahf
jmp
push
push
add
roll
or
add
add
push
add
es
test
mov
add
data16
fcmovu
sbb
pop
hlt
cmp
fs
or
add
call
pop
inc
add
jge
add
pusha
add
in
movb
add
sbb
jmp
insb
jno
push
push
add
je
mov
jge
add
adc
incl
les
arpl
lcall
out
pop
mov
add
push
add
ja
add
in
in
in
stos
arpl
call
dec
cmc
inc
add
lods
lea
imul
add
fs
push
add
inc
add
insb
mov
ljmp
cmp
push
pop
xor
jne
dec
lret
aaa
or
into
movsb
add
add
add
push
add
add
hlt
cmc
lds
mov
add
add
lahf
nop
aad
repnz
jg
add
sub
fdivl
jae
pushl
and
call
sbb
sub
add
mov
dec
xchg
and
mov
cmp
cmp
sbb
add
xchg
push
addl
add
ficomps
add
jne
in
pop
data16
sbb
mov
jmp
incl
jo
call
add
add
rolb
add
fdivl
add
and
pushl
add
and
pushl
lcall
add
mov
out
push
rcrb
adc
pushl
call
sub
add
add
and
fsubp
add
add
add
rcll
pushl
nop
cmp
jns
sub
cld
movl
call
xchg
cmp
add
out
push
add
aam
mov
scas
pop
mov
rclb
sti
mov
add
and
call
add
pop
and
lcall
lods
cmpsl
add
dec
jg
out
push
cmp
mov
cmp
and
fidivrs
add
lahf
jmp
pop
sbb
add
jecxz
cmp
add
lods
mov
add
add
add
mov
add
pop
inc
add
sbb
scas
pusha
add
mov
add
add
lret
add
aaa
test
push
add
xor
pushl
add
rcll
jae
call
add
aad
test
movsl
add
dec
xchg
xchg
jl
sbb
out
das
leave
or
sti
and
pushl
jmp
push
lock
add
ljmp
add
dec
lret
das
mov
imul
add
push
insl
dec
roll
mov
mov
add
add
incl
add
inc
add
jbe
pop
iret
push
add
add
and
mov
jmp
stos
inc
add
xchg
mov
stc
aad
add
add
dec
push
add
inc
add
dec
xor
pop
adc
incl
add
in
frstor
mov
add
add
incl
mov
add
jb
decl
add
imul
pop
jmp
add
add
add
add
inc
add
and
mov
int
cmpsl
add
sub
add
lcall
arpl
call
add
scas
fimull
popf
test
jbe
mov
cwtl
sub
popa
add
roll
in
cmp
or
lcall
je
add
rorb
int
add
add
add
add
add
loop
aam
mov
add
add
repz
incl
add
sub
xchg
push
add
and
add
add
jmp
inc
add
out
pop
jecxz
mov
ss
data16
mov
test
add
add
aad
add
loop
test
xchg
fwait
adc
cmp
add
adc
lcall
add
and
pushl
push
add
add
lcall
insl
dec
addb
add
mov
jbe
push
add
add
add
flds
roll
add
das
add
ljmp
mov
and
cmp
jecxz
ss
mov
lahf
loope
and
call
movsb
add
les
inc
add
pop
and
decl
adc
decl
add
jmp
addb
add
pushf
jg
add
jmp
add
adc
aas
jnp
sub
int
add
or
push
and
push
sbb
addb
mov
add
jns
xor
call
add
adc
jmp
add
shl
add
call
pop
les
cli
jl
dec
int3
jb
lcall
xor
xor
decl
push
add
mov
sbb
in
pop
imul
test
loopne
sbb
sahf
stos
add
incl
cltd
cmp
in
ljmp
js
addl
add
jbe
sbb
pop
add
decl
adc
pushl
push
ja
or
or
add
add
ror
jp
add
cmp
xchg
cmc
les
out
lcall
sub
jns
dec
mov
add
pop
add
xchg
jbe
rcl
insb
push
addr16
mov
and
out
stc
lret
push
add
ljmp
jmp
jns
movsl
add
push
or
and
incl
add
in
in
addb
mov
mov
aad
push
add
insb
xchg
dec
xor
sbb
add
inc
add
mov
add
in
and
ljmp
daa
add
cld
mov
lcall
inc
add
or
fistpll
jnp
jns
push
mov
hlt
dec
pop
sti
sub
int3
jne
add
add
xchg
dec
sbb
cmp
push
add
mov
jae
decl
movb
es
add
add
addb
adc
lcall
add
ljmp
daa
add
add
push
add
dec
adc
pushl
add
cli
or
mov
xchg
movl
inc
add
pop
jbe
clc
sbb
mov
arpl
pushl
dec
fwait
in
fistpl
popf
jle
arpl
lcall
mov
jge
push
fists
jmp
sti
outsb
addb
push
add
dec
popa
add
add
incl
add
cmp
movb
cmp
jb
push
out
pop
add
aas
stc
ss
add
loop
inc
add
pop
mov
push
or
leave
jecxz,pn
inc
add
movb
add
roll
arpl
jmp
mov
popa
add
add
add
popf
push
outsb
popf
pop
sbb
add
outsb
and
add
mov
add
loop
pop
push
add
rcrl
cmpsl
add
sub
jmp
sbb
rcrl
add
and
ljmp
mov
lret
out
push
add
adc
pushl
lods
push
add
dec
xchg
cmp
addb
add
add
push
add
cmc
popa
add
or
cwtl
mov
aad
add
push
mov
and
ljmp
jg
add
mov
add
xchg
xchg
lret
filds
mov
sbb
mov
and
and
ljmp
add
in
movb
rcll
outsl
pop
imul
incl
fistps
dec
or
mov
data16
jmp
add
push
add
ljmp
nop
ds
mov
add
jmp
mov
jnp
add
cmp
repz
ss
adc
incl
pop
les
imul
fwait
push
add
pushf
lock
das
movsb
add
pop
div
out
xchg
addl
lock
add
or
mov
sahf
addl
fcomps
les
bound
pushl
add
adc
mov
add
or
dec
popf
repz
push
ja
sahf
std
mov
sbb
add
and
insb
mov
add
call
decl
cmpsb
add
add
lcall
add
jno
decl
mov
sub
leave
outsl
pusha
add
push
ret
add
mov
mov
dec
addb
add
lcall
mov
fldenv
xchg
jl
add
jmp
xchg
adc
incl
lcall
dec
insl
sbb
push
add
push
mov
leave
dec
roll
add
jns
jp
add
add
xor
inc
add
mov
xor
stc
xchg
sub
xchg
fisttpl
inc
add
xlat
fs
popf
sti
jmp
and
ljmp
jge
punpcklwd
incl
add
je
add
or
mov
xchg
push
add
mov
pop
jmp
add
or
inc
add
add
adc
lahf
or
add
decl
sub
add
mov
xchg
or
add
cmc
testb
mov
add
cmp
add
push
fmul
fistpll
lret
cmp
pushl
add
dec
push
xchg
daa
add
repnz
movsb
add
add
and
jmp
add
test
movl
push
add
outsl
cmp
mov
add
adc
lcall
inc
add
iret
stc
imul
jnp
pop
jge
popf
lret
pop
mov
in
fwait
jnp
add
jmp
inc
add
add
ljmp
add
pop
add
xchg
ljmp
add
jp
mov
out
lahf
cmp
add
ljmp
test
test
ja
add
rcl
inc
add
push
sbb
jle
add
push
dec
mov
add
adc
sbb
pop
cmc
inc
add
sub
cs
inc
add
add
ffree
add
push
ret
ds
stc
xor
xchg
mov
mov
add
add
add
cmp
call
adc
push
lcall
sbb
add
fld
add
fwait
mov
out
mov
jbe
ss
dec
push
add
push
add
and
bswap
clc
jbe
and
push
push
push
ljmp
push
add
dec
insb
out
mov
loope
or
push
fmul
fistpl
dec
add
lret
add
or
add
push
pushf
scas
arpl
pushl
add
xchg
add
push
push
add
pushl
int
add
add
and
decl
mov
incl
pop
add
rcrl
add
mov
scas
add
cmp
ljmp
add
add
cltd
push
sbb
decl
out
loope
or
add
sbb
sbb
pop
mov
dec
xor
lcall
add
stc
std
jge
add
or
incl
cmp
add
leave
lea
adc
ljmp
xchg
jb
push
frstor
add
mov
add
gs
add
sahf
insb
mov
inc
add
add
incl
mov
cltd
jp
and
decl
jl
jp
fcmove
and
pushl
add
pop
and
cmp
jnp
ja
pop
mov
inc
add
movl
popa
add
cmpsl
add
cwtl
addb
xor
decl
add
xor
incl
cltd
sahf
cld
jb
add
add
mov
js
add
fsubrp
mov
repz
lcall
add
add
cmpsl
add
pop
fsub
add
add
in
jno
dec
repnz
lret
flds
add
jb
decl
add
pop
iret
mov
add
add
sub
mov
add
cmp
out
mov
sub
add
xor
lcall
push
add
shr
mov
xchg
or
adc
aad
add
add
adc
inc
add
call
add
stc
inc
add
add
pop
repnz
add
dec
jle
add
jb
incl
decl
add
enter
push
mov
incl
addb
add
push
add
inc
add
add
add
movb
addr16
add
jnp
lock
movsb
add
add
ret
add
xchg
fimull
cmovle
insb
inc
add
xchg
lock
movb
mov
add
mov
push
mov
push
movsl
add
add
in
lods
jmp
movsb
add
jp
add
xchg
jns
enter
xchg
adc
sbb
mov
add
pusha
add
jmp
sub
xchg
inc
add
call
inc
add
and
decl
mov
add
call
jg
add
or
add
sub
push
xchg
dec
jae
dec
xor
pushl
push
addb
add
fwait
jo
incl
pop
jecxz
inc
add
mov
jmp
add
push
mov
xor
jmp
add
bound
decl
cmp
cmp
add
add
ficoml
mov
les
popf
aas
jbe
jbe
clc
and
push
pop
push
pop
pop
add
add
and
pop
jne
and
ljmp
xchg
jb
inc
add
mov
add
add
scas
bound
pushl
add
movsl
add
add
add
repz
pushl
add
push
addb
add
shlb
add
mov
add
and
ds
js
es
xchg
shll
div
popa
add
jle
aad
add
popa
add
xor
jmp
fmuls
inc
add
icebp
movsb
add
add
jp
push
xor
call
add
test
jp
or
inc
add
clc
cld
data16
add
and
pop
fistps
cmp
hlt
cmpsb
add
inc
add
call
add
aam
int3
sar
arpl
pushl
test
loopne
js
add
bound
incl
add
dec
mov
add
loope
dec
inc
add
shrl
jns
shl
add
add
jmp
sub
imul
outsl
pop
bound
decl
test
add
pop
push
add
or
mov
hlt
or
add
inc
add
lret
xchg
iret
adc
call
jo
cmp
jns
cmp
ficompl
lods
xor
mov
add
jmp
dec
fidivl
roll
add
inc
add
xlat
pop
dec
bswap
xor
shlb
or
add
mov
pushl
add
jge
add
add
push
gs
add
lea
jmp
test
int3
dec
jo
fisttpll
add
mov
and
call
ljmp
and
call
mov
pop
or
jmp
sub
jnp
dec
mov
leave
dec
fucom
add
dec
push
mov
add
xchg
mov
dec
adc
ljmp
adc
in
cmp
stos
jb
decl
add
sbb
mov
add
add
push
sub
mov
scas
les
repnz
sub
jmp
cmp
add
mov
pop
shll
add
sbb
mov
xchg
mov
add
popa
add
jnp
out
movsb
add
stos
sar
and
ljmp
daa
add
add
aas
lds
int
pusha
add
push
push
add
mov
lret
mov
test
add
add
in
lcall
data16
in
imul
decl
push
add
mov
fisttpll
add
mov
decb
pop
mov
push
and
and
jle
add
add
add
aad
add
ljmp
fmuls
pop
loop
mov
add
inc
add
ss
add
je
push
mov
das
xchg
sbb
js
dec
lret
xlat
popa
add
inc
add
ret
add
shrl
mov
bound
decl
and
push
loop
out
push
gs
add
inc
add
cs
jle
cwtl
adc
jmp
roll
ljmp
xor
adc
dec
jl
add
add
ret
add
and
dec
xchg
fsubs
xor
incl
int
pop
xchg
js
add
sahf
xchg
call
jne
add
loope
or
push
or
mov
or
add
mov
addb
inc
add
pop
push
add
pop
push
add
add
ljmp
les
out
mov
lea
add
incl
push
cmp
add
add
pusha
add
jnp
add
add
ljmp
popf
cmp
idivb
ss
jmp
add
mov
xor
decl
pop
xchg
or
mov
add
dec
mov
add
shr
mov
add
dec
mov
add
add
fsubl
and
inc
add
call
in
cmp
add
sbb
cmp
fucomp
int
add
jmp
add
jo
fsubrl
cli
sbb
faddl
sub
mulb
add
in
mov
cmp
clc
jne
add
gs
xchg
nop
xchg
sbb
iret
rcl
inc
add
mov
add
hlt
out
jmp
add
mov
push
add
add
add
jmp
xchg
bound
incl
add
addl
add
jb
aas
and
incl
je
mov
add
add
push
movl
test
add
call
bnd
add
arpl
inc
add
in
mov
add
xchg
out
pop
mov
sub
clc
mov
adc
fidivs
and
add
lea
ljmp
rcrb
cmp
add
aad
add
pop
pop
pop
out
out
xchg
lds
inc
add
add
adc
mulb
add
xlat
inc
add
lcall
dec
push
and
push
mov
repnz
scas
push
add
cmovge
out
mov
add
jae
jmp
add
jmp
adc
dec
mov
fiadds
mov
lods
inc
add
mov
mov
inc
add
add
stos
out
jae
jmp
add
xor
fcompp
rcl
push
inc
add
jg
mov
jno
ljmp
aas
pop
std
mov
or
sub
add
icebp
add
leave
jp,pn
add
and
lcall
add
mov
mov
das
or
shlb
push
add
lea
xchg
sub
push
add
or
ficoms
ljmp
popa
add
or
add
pop
add
incl
jmp
add
add
scas
pop
adc
jmp
add
addb
cmpsb
add
xchg
xchg
lds
adc
inc
add
add
add
add
pushl
roll
iret
or
cmp
mov
repz
jo
jmp
add
gs
daa
add
clc
push
hlt
and
jmp
add
adc
aaa
cmp
lcall
cltd
push
cltd
lds
es
and
cmp
pop
cmp
dec
gs
mov
xchg
shll
add
xchg
sub
pushl
add
xor
jmp
add
push
pop
push
add
nop
mov
mov
aas
xchg
call
xchg
xchg
sti
xchg
into
pop
mov
popa
add
dec
loopne
push
add
pop
push
add
js
xchg
cmp
add
add
add
jmp
fnstcw
pop
sub
add
shrl
add
add
call
outsb
inc
add
add
sbb
add
adc
mov
adc
jmp
call
push
jmp
cmc
push
rolb
ss
mov
inc
add
push
add
push
lds
es
add
cmp
mov
int
sbb
cmc
repz
add
repz
cmp
addl
add
add
aad
add
in
jecxz
stc
xor
decl
cmp
negb
mov
add
add
xchg
fnstsw
neg
popa
add
and
xchg
loope
cmpsb
add
jmp
add
inc
add
push
add
pushl
push
or
pop
mov
xchg
sbb
rclb
dec
xchg
aam
xlat
jecxz
movb
lret
add
sti
cs
add
clc
and
incl
cmp
add
mov
add
lret
dec
ds
add
dec
add
jmp
mov
add
xor
incl
jp
add
mov
test
aam
add
and
dec
xchg
mov
testl
inc
add
lret
xor
insb
call
sbb
add
push
add
add
imul
add
cmp
add
jge
xor
pushl
call
mov
xchg
js
add
roll
push
lods
mov
lahf
sub
nop
mov
shl
add
add
cmc
add
fsubrs
jmp
add
icebp
mov
add
ss
or
leave
into
dec
aad
add
add
add
mov
arpl
ljmp
sub
lcall
movsb
add
mov
movl
test
stos
imul
cmc
xchg
jo
push
sub
or
cmp
mov
cli
lds
fsts
imul
add
out
stc
testb
mov
jmp
add
dec
xchg
outsl
add
add
add
decl
add
int
sahf
test
add
push
push
add
add
xchg
add
jge
clc
out
push
add
cmp
cwtl
cwtl
ja
iret
loop
out
dec
xchg
nop
pop
fcmovu
inc
add
mov
push
insl
add
call
add
add
incl
dec
addl
ss
jge
xor
call
inc
add
add
ljmp
adc
cmp
mov
add
add
incl
inc
add
pop
call
test
sbb
in
jbe
bound
push
lret
mov
movaps
xor
jmp
add
mov
cmp
iret
jle
mov
inc
add
add
xor
mov
popl
inc
add
add
add
inc
add
lods
add
call
add
scas
xchg
mov
hlt
lds
add
lock
push
aam
les
outsl
into
les
xor
ljmp
add
call
jbe
test
adc
fdivl
loop
ret
add
jecxz
mov
jns
xlat
add
call
aas
pop
popa
add
test
push
add
add
jb
incl
jnp
add
push
add
or
adc
mov
cld
ss
sub
loopne
jb
decl
call
mov
fcmovb
add
call
pop
xchg
sbb
jl
add
adc
jmp
add
call
ljmp
call
mov
add
add
inc
add
daa
add
jmp
add
add
lds
mov
add
jp
pop
jmp
add
ljmp
es
cwtl
std
adc
lcall
lea
add
mov
push
xor
mov
xor
or
jp
add
inc
add
add
fsubs
push
add
jmp
add
pop
jg
into
cwtl
pmulhw
add
das
bound
incl
add
decl
es
jmp
call
add
cltd
dec
or
out
push
add
test
xchg
out
cmp
add
add
dec
pop
enter
test
inc
add
lods
xchg
lret
aaa
mov
add
push
add
loope
or
daa
add
jne
add
mov
add
xchg
addb
outsb
lock
add
cltd
sahf
add
inc
add
je
aad
or
imul
add
into
scas
std
lret
mov
dec
jp
mov
push
cli
mov
pop
pop
loopne
mov
xor
cmp
inc
add
add
filds
push
add
add
fsubr
pop
add
incl
pop
add
call
repz
sahf
and
lcall
fmull
jae
jmp
xor
add
or
decl
add
addl
hlt
lcall
pop
adc
jmp
add
jne
push
out
sahf
incl
jns
outsl
cmp
add
sbb
add
loopne
loop
inc
add
inc
add
xor
pushl
mov
and
pop
sub
sarb
add
jmp
jl
cs
add
fcmovnu
aad
add
add
push
add
popf
icebp
or
cmpsb
add
add
addl
sbb
add
pushl
push
inc
add
xor
decl
aaa
test
or
add
add
lret
sahf
xchg
jg
add
mov
add
xor
incl
mov
mov
adc
ljmp
add
pop
adc
test
dec
cli
lret
dec
jo
decl
xor
sub
push
add
enter
add
addb
or
clc
inc
add
add
cld
jb
incl
pushl
add
loop
loope
cmp
cs
pop
cs
scas
jecxz
jecxz
push
in
cmp
out
xor
pushl
add
mov
add
lea
iret
xchg
mov
notb
add
adc
lcall
rolb
leave
jo
lcall
add
dec
int3
xchg
push
add
pop
dec
pop
in
mov
add
nop
repnz
out
xchg
mov
lcall
rolb
jnp
rolb
add
ret
add
jl
lods
mov
mov
jmp
sbb
pop
test
nop
fadd
add
add
dec
stos
add
movsl
add
addb
mov
sub
add
std
sahf
test
pop
loope
div
jae
lcall
add
sete
sbb
jae
incl
add
popf
addr16
ret
jmp
add
in
dec
hlt
jp
add
sub
leave
add
fstps
pop
int3
dec
loope
mov
add
bnd
incl
call
and
sbb
pop
mov
into
dec
sub
adc
call
in
fcoms
add
add
add
push
mov
iret
into
sahf
mov
fnstcw
fwait
xchg
or
xor
incl
add
test
add
ljmp
jle
movb
push
xchg
lds
fwait
pop
pop
add
outsl
sbb
pop
add
ljmp
stos
push
stc
out
dec
sub
add
movl
add
dec
sub
addb
leave
jne
add
aam
push
inc
add
and
ljmp
mov
inc
add
xor
ljmp
inc
add
jbe
mov
cltd
dec
flds
add
incb
jmp
add
or
add
add
mov
or
add
add
ds
add
test
out
jno
decl
into
push
mov
or
decl
lock
xchg
dec
in
cwtl
sub
add
jae
out
jle
add
or
add
idiv
or
xor
incl
add
adc
lcall
add
lods
pop
adc
ljmp
ss
lcall
lock
and
dec
cmp
jecxz
push
add
out
int3
xchg
adc
fisubs
outsl
ljmp
popf
sbb
lcall
out
mov
cmp
jmp
lahf
clc
xor
inc
add
loopne
cmp
insb
pushf
and
int
add
je
add
cltd
push
add
leave
movsl
add
jno
decl
out
sub
jmp
xor
sti
mov
push
out
push
push
mull
add
pop
negb
add
jnp
add
jmp
add
incl
call
add
jmp
out
jg
add
add
push
cs
sti
mov
mov
dec
les
addl
xchg
ret
int3
dec
stos
and
decl
mov
ljmp
xlat
fdivrs
sahf
or
cs
mov
add
pop
xchg
daa
add
inc
add
inc
add
in
add
lcall
outsl
sub
inc
add
ja
insb
ret
jbe
dec
shrb
data16
pushl
add
add
pop
jle
add
out
loope
xor
jmp
add
add
mov
dec
cltd
sti
mov
mov
cmpsl
add
inc
add
mov
inc
add
pop
adc
jmp
add
add
add
dec
dec
jl
add
and
or
movb
ror
ljmp
add
and
call
add
roll
and
lcall
mov
adc
cmp
add
add
testl
scas
pushf
adc
incl
push
add
fwait
aad
inc
add
les
addl
in
mov
popf
lahf
imul
add
aaa
dec
mull
lcall
xor
incl
add
push
add
add
leave
xchg
roll
idivb
add
push
push
mov
mov
fsubr
mov
sub
add
add
out
data16
or
loope
roll
add
ljmp
add
sbb
pushl
sbb
movsb
add
fsubrp
repz
add
roll
lahf
cmp
dec
xchg
xchg
cmpsl
add
jb
decl
add
inc
add
mov
mov
xchg
and
mov
adc
call
add
jle
add
inc
add
mov
xchg
movsl
add
call
add
mov
dec
dec
cmc
jns
inc
add
fbld
mov
mov
add
mov
stc
imul
pop
aad
jbe
stos
xor
lcall
fidivrs
jnp
add
adc
jmp
xchg
scas
mov
add
aad
add
inc
add
mov
add
lea
std
xor
incl
add
mov
addl
jle
add
xchg
das
fldenv
add
or
pop
sbb
popf
mull
add
and
push
xor
ljmp
pusha
add
push
daa
add
xor
lods
cmp
add
xchg
or
push
addb
cmc
or
daa
add
cltd
inc
add
rol
add
add
sbb
inc
add
outsb
add
hlt
repz
add
pop
jb
lcall
mov
out
cmp
add
fistl
add
iret
jno
pushl
aaa
cltd
imul
push
adc
cmp
add
mulb
add
stos
mov
jle
les
adc
jns
add
addl
data16
aad
popa
add
inc
add
add
lcall
pusha
add
or
or
ja
xor
push
inc
add
add
aad
sub
mov
mov
mov
ljmp
add
in
pusha
add
sahf
xchg
push
add
mov
add
js
add
int
les
movsb
add
inc
add
stos
aad
ja
mov
add
xchg
or
add
add
xor
add
in
movsb
add
setne
jnp
dec
fsubs
mov
sbb
call
pop
inc
add
addl
dec
adc
add
xlat
gs
mov
mov
xchg
dec
xchg
lahf
addb
add
rorl
or
push
call
xchg
fstp
ret
xchg
lods
subps
add
bound
incl
aas
repnz
ds
add
push
add
data16
add
push
shrb
mov
or
add
test
push
dec
adc
loopne
aad
sarl
add
in
push
xchg
popa
add
inc
add
movl
add
add
inc
add
sbb
add
repnz
mov
jle
and
jmp
adc
push
in
cmpsl
add
and
call
clc
jmp
adc
incl
repnz
push
add
add
jmp
push
add
into
dec
mov
add
in
or
imul
push
insb
lahf
movsl
add
fldenv
cmp
roll
jmp
lcall
add
scas
xchg
sub
dec
dec
jo
jmp
add
dec
addl
ljmp
cmpsl
add
add
mov
add
add
cmp
add
or
stc
or
stc
roll
add
pop
fistpll
aas
adc
add
mov
mov
repz
ja
push
test
dec
and
incl
add
je
add
lock
movb
add
add
adc
jbe
ret
add
add
ja
add
enter
mov
cmpsl
add
add
mulb
add
add
add
lret
push
push
add
add
call
inc
add
jno
ljmp
inc
add
add
inc
add
into
pop
pop
shr
shlb
fldl
sarb
pop
mov
add
jns
add
push
add
roll
xor
push
test
cmp
lahf
add
cwtl
mov
add
cmp
add
add
out
and
decl
roll
jmp
add
push
add
repnz
and
decl
movb
mov
mov
ljmp
push
lock
adc
ljmp
popf
std
arpl
push
inc
add
arpl
incl
add
rol
add
ret
add
add
jo
ljmp
decl
sbb
icebp
lds
xor
fsubp
add
daa
add
dec
cmp
add
add
add
add
mov
jmp
ret
add
lods
xchg
add
add
enter
fst
jge
inc
add
cli
std
cld
add
call
add
cmp
mov
lcall
sub
out
pop
add
adc
or
jmp
fstl
jnp
loope
mov
mov
cmp
addb
sbb
add
push
add
outsl
outsb
addb
dec
cmp
inc
add
loope
push
add
leave
inc
add
mov
mov
mov
jmp
lds
xchg
mov
or
add
decl
dec
jne
add
ja
xlat
lods
jb
jmp
add
sbb
pop
lret
pop
xor
dec
roll
dec
xor
lcall
add
and
addb
add
lret
mov
add
lcall
add
ljmp
mov
jne
push
mov
xor
add
call
dec
out
rcrb
lcall
out
sub
pushl
pushl
call
insb
sub
add
pop
cmp
bound
decl
clc
add
ljmp
rolb
add
cwtl
sub
add
push
add
sbb
ds
add
jnp
imul
add
jmp
add
cmc
rolb
xchg
hlt
mov
fmul
and
push
clc
movb
mov
dec
xchg
inc
add
mov
add
add
test
add
test
lcall
out
sbb
push
add
mov
rolb
add
sbb
cwtl
xor
jmp
add
outsl
mov
repnz
push
decl
sbb
sub
add
mov
adc
decl
repz
push
pop
add
cmp
test
or
sbb
stos
popa
add
mov
addb
icebp
add
jmp
add
call
jb
pushl
add
cmp
add
dec
cli
lds
movb
push
add
add
jp
dec
test
mov
add
hlt
cmp
inc
add
sahf
fwait
js
mov
add
jns
push
addb
adc
pop
test
int3
push
xchg
or
adc
fucomp
stos
xchg
add
decl
sub
add
das
sbb
call
xlat
lods
push
add
in
lahf
int
add
aam
lods
sub
movl
movb
jbe
add
jmp
cmp
jns
testb
insl
test
mov
pop
add
jmp
sub
dec
iret
addl
add
les
fcoml
add
mov
cmpsb
add
add
xchg
aam
mov
add
pop
xchg
xor
inc
add
push
add
mov
mov
mov
pop
int
add
pushl
add
in
adc
incl
mov
in
jmp
add
or
call
add
add
decl
add
mov
incl
out
in
pop
sbb
and
fcmovnbe
push
add
jae
jmp
sub
sbb
cltd
add
incl
call
loope
addb
inc
add
mov
add
add
jmp
add
push
push
add
jp
add
add
add
mov
ret
add
add
inc
add
mov
add
add
add
mov
jae
ljmp
add
dec
shl
mov
add
xchg
lcall
jmp
add
dec
xchg
add
lcall
add
xor
pushl
xchg
fdivrs
add
add
mov
sti
cmp
pushl
jecxz
adc
lcall
iret
flds
push
add
xor
call
jno
ljmp
leave
add
ljmp
add
mov
mov
data16
add
js
cltd
pop
fwait
push
cmp
jbe
xchg
sti
mov
add
addb
add
mov
in
cmp
add
bound
ljmp
or
cmc
jns
jg
sbb
add
xor
jmp
add
fwait
mov
add
add
sub
clc
sub
fwait
or
arpl
incl
add
stc
sbb
add
mov
adc
pushl
add
inc
add
add
add
inc
add
aaa
lcall
cmp
test
cmp
add
nop
adc
pushl
xchg
mov
fisttpl
adc
call
lcall
lcall
hlt
scas
lcall
xor
insl
push
data16
arpl
call
or
add
aad
xor
lcall
add
sahf
movb
add
add
or
or
or
jmp
add
mov
je
sbb
add
add
push
jp
add
out
pop
lahf
scas
addl
add
xchg
and
call
add
mov
sbb
jmp
loopne
push
decl
std
dec
pop
xchg
xchg
jno
jmp
add
and
pushl
movsb
add
xor
call
xchg
or
add
push
cmc
test
mov
push
scas
cs
add
insl
fdivl
scas
test
inc
add
sbb
lcall
mov
out
loopne
add
lcall
fwait
or
add
jl
add
xor
jp
stos
nop
push
pushl
ljmp
add
adc
fimull
insb
daa
add
mov
bound
jmp
add
cs
add
add
jnp
iret
hlt
dec
sub
incl
lret
jp
es
add
add
movl
in
gs
xchg
or
add
arpl
jmp
add
add
rolb
add
jp
jp
add
jl
lea
gs
add
add
adc
shlb
pop
add
add
rolb
out
dec
add
jmp
add
adc
mov
or
cmp
test
add
adc
decl
sub
pop
sub
and
lods
push
add
sbb
sub
mov
int
add
call
data16
or
add
fstps
adc
decl
popl
add
out
mov
sub
into
aas
adc
incl
sbb
inc
add
add
mov
sbb
add
cmp
add
add
add
cmp
clc
pop
testb
mov
xchg
pop
addb
adc
ljmp
add
or
add
jle
adc
jl
add
push
test
cmp
adc
pop
pop
jecxz
vmwrite
add
and
incl
push
mov
add
add
test
aam
sub
push
add
add
movsb
add
xchg
pop
movb
add
daa
add
add
aaa
jne
cmp
aam
mov
std
ret
add
add
call
jne
fldt
filds
add
add
out
push
add
cmp
push
lods
push
out
inc
add
mov
cmpsl
add
add
stos
mov
lar
jmp
aas
push
add
fwait
negb
add
aaa
je
std
fidivrl
fadds
lret
mov
add
dec
push
fisubs
or
add
sbb
add
pop
pop
pop
xchg
dec
out
das
out
inc
add
jbe
mov
test
cmp
jecxz
push
sti
fdiv
lds
loopne
sub
xchg
and
inc
add
aam
into
cmpsl
add
incl
lock
add
fstps
add
add
lcall
lds
jmp
mov
bound
cmp
add
dec
lahf
punpcklwd
call
lcall
cli
fwait
pop
and
jmp
add
pusha
add
push
add
mov
add
dec
addb
repz
add
add
jmp
add
add
or
add
incl
ljmp
addl
add
js
push
adc
incl
scas
mov
add
mov
or
add
cmp
add
sub
mov
add
xchg
mov
add
mov
fldt
ljmp
lcall
mov
jecxz
xor
decl
xchg
push
scas
sbb
mov
add
inc
add
sub
imul
add
add
add
dec
sub
dec
shrl
inc
add
adc
call
sub
sub
adc
dec
ficomps
jns
mov
xchg
inc
add
or
cld
outsb
lret
scas
push
movb
sub
mov
or
add
or
test
add
out
outsl
idivb
add
add
loop
divb
add
lret
in
pop
xlat
lea
add
mov
jmp
fsin
push
daa
add
mov
add
add
add
add
loope
imul
add
add
sti
aaa
out
or
add
in
faddl
add
and
ljmp
add
pop
fmull
xor
add
adc
lcall
pop
int
add
or
repnz
add
add
mov
mov
add
imul
or
movb
insb
adc
mov
push
pop
call
arpl
jle
jle
pop
pop
jns
lods
fwait
push
add
and
call
add
mov
mov
test
add
jmp
add
outsl
xchg
pusha
add
xor
ljmp
dec
pop
in
push
fadds
ljmp
cwtl
pop
into
out
in
mov
add
loopne
cmp
jmp
add
cmp
sahf
adc
addl
imul
add
call
call
add
and
jmp
aam
mov
add
cmp
add
add
lcall
add
add
call
jl
add
sub
mov
lret
lea
sahf
out
aam
cmp
pushl
incl
jmp
add
add
jl
xor
sarl
add
adc
lcall
add
call
add
push
add
or
cmpsb
add
rorl
jb
lcall
call
add
je
add
or
add
pop
test
popf
ja
add
mov
mov
call
add
add
hlt
cmp
incl
pushl
incl
add
rcr
imul
call
call
pop
add
push
add
adc
pop
or
call
add
cltd
fwait
push
add
scas
mov
add
aaa
enter
dec
repnz
inc
add
lods
jae
jmp
and
xchg
sbb
aaa
dec
addl
add
dec
popf
lret
sub
incl
cmp
add
push
cld
dec
scas
pushf
push
add
mov
inc
add
pop
lahf
jnp
dec
and
jg
cmpsl
add
call
lcall
inc
add
insb
mov
cmp
add
push
movsb
add
add
cmc
movsl
add
add
dec
xor
cld
mov
push
ficompl
cmpsl
add
decl
sbb
imul
inc
add
cmp
lcall
sub
outsb
jmp
addb
and
incl
mov
add
pop
testb
loop
pop
sub
lret
mov
jle
xor
pop
insb
dec
add
lcall
inc
add
push
and
incl
push
xchg
fcoml
jmp
push
add
jle
jmp
test
jge
jge
test
rcll
mov
add
push
shl
add
lods
daa
add
xor
dec
jb
call
cli
das
repnz
add
mov
add
lcall
lock
and
decl
pop
pop
jae
decl
mov
mov
mov
je
add
out
or
sub
cs
movsl
add
adc
inc
add
mov
mov
mov
mov
add
ss
xor
decl
sahf
xchg
jno
jmp
push
add
adc
dec
lock
pop
notb
add
push
add
std
das
jp
and
fsubs
pop
mov
add
inc
add
add
sub
pushf
push
add
sbb
test
fildll
sub
decl
add
mov
gs
add
push
add
cmp
add
rolb
add
sub
add
decl
scas
movsb
add
loop
imul
test
xor
decl
ss
mov
repz
addl
pop
cmpsb
add
scas
stos
push
loope
ffree
add
lcall
add
adc
call
rolb
call
mov
movl
daa
add
decl
adc
pushl
add
sbb
call
add
mov
add
push
add
repz
ljmp
cmpsb
add
dec
pop
fistpl
aam
test
add
add
add
stos
popa
add
push
cmp
add
add
les
les
or
call
ret
add
mov
add
add
push
add
adc
pop
mov
mov
add
scas
inc
add
xor
pushl
call
add
sbb
cli
jmp
in
push
jecxz
addb
add
dec
outsb
jg
bswap
mov
xor
jmp
mov
mov
mov
pop
fwait
add
inc
add
movb
add
add
add
cmp
sub
std
or
rcr
inc
add
insl
add
add
jne
add
movb
xchg
inc
add
outsb
mov
adc
clc
inc
add
adc
ds
add
lods
pop
mov
dec
adc
dec
pop
addl
loope
push
add
pop
sbb
add
push
call
mov
dec
xchg
dec
push
sbb
add
add
add
in
xor
pushl
jmp
add
ljmp
and
add
add
fcmovb
add
mov
loop
fucom
add
test
in
sbb
pop
mov
sub
add
ret
add
add
cli
ss
add
dec
loopne
nop
xlat
sti
cltd
mov
push
add
cs
add
ljmp
add
jo
decl
or
xor
stc
cmp
jle
add
add
call
dec
inc
add
xor
dec
repnz
ljmp
inc
add
sbb
aam
add
pop
scas
in
sbb
or
jo
call
out
outsl
lds
add
lcall
add
push
or
add
xor
decl
push
add
fidivs
fsincos
xchg
pop
addb
add
add
mov
add
or
push
in
pop
jbe
add
inc
add
ljmp
push
scas
add
lcall
add
adc
call
add
xchg
fwait
sub
add
rorl
iret
push
add
lret
addl
add
roll
inc
add
cmp
or
div
mov
push
add
add
cmp
mov
decl
add
lock
adc
js
add
sbb
scas
and
jmp
das
les
popa
add
push
add
sub
and
pushl
add
ljmp
call
iret
dec
xchg
cmp
push
aam
or
xor
decl
add
mov
std
jecxz
xchg
jmp
das
dec
pop
add
add
and
decl
mov
test
pushf
xchg
mov
in
lods
pushl
or
jecxz
insl
aaa
ds
adc
add
jmp
das
int
or
add
ja
and
incl
add
cmovp
add
add
mov
movsb
add
push
xchg
lea
jb
lcall
in
sub
xor
add
loop
mov
cltd
xor
ljmp
add
pop
add
out
sbb
imul
push
out
shlb
add
loop
clc
or
adc
lcall
add
add
dec
and
call
add
push
add
movsb
add
movl
fisubs
xor
ljmp
pop
xor
call
adc
call
add
lret
and
ljmp
ret
add
lock
test
dec
and
jmp
insb
outsb
popa
add
hlt
imul
pop
sub
mov
add
pop
enter
mov
or
mov
movsb
add
add
xchg
mov
add
add
aaa
pop
fcos
mov
pusha
add
inc
add
adc
pushl
add
mov
add
pop
addb
lret
loopne
add
jmp
movsl
add
add
inc
add
mov
stos
sbb
jp
add
xchg
mov
testb
add
out
pop
lcall
sub
mov
fwait
sub
adc
jmp
cmp
add
add
pop
add
cwtl
and
inc
add
clc
xchg
addl
addl
nop
adc
pushl
lcall
inc
add
ds
add
xchg
stc
xchg
adc
lcall
aas
imul
mov
add
xor
cmp
int
mov
call
lock
add
dec
jnp
add
addr16
gs
in
or
jle
push
sbb
add
jmp
add
mov
rcrb
std
mov
dec
mov
jle
sbb
mov
mov
sub
cmp
add
xchg
sbb
cmpsb
add
incl
add
stos
or
cmp
add
sbb
push
rorl
lds
popa
add
mov
add
add
push
in
and
lcall
add
lds
pop
roll
jne
mov
mov
add
or
add
add
loop
cli
push
mov
jg
cs
add
fildl
add
fisttps
int3
nop
add
add
popf
repz
add
mov
add
add
call
add
incl
les
push
cmpsl
add
or
pop
add
mov
movsb
add
fimuls
add
loope
test
lcall
rcr
mov
into
inc
add
pusha
add
movsl
add
add
dec
fdiv
xchg
stos
jne
push
jmp
bound
incl
fsubr
ss
bound
inc
add
add
dec
add
or
add
outsl
add
mov
jmp
leave
loop
xor
push
fbstp
call
mov
add
add
add
inc
add
and
jmp
leave
addl
add
add
cwtl
roll
outsl
jecxz
push
add
daa
add
fidivrs
or
add
aam
xor
cmp
add
nop
int3
out
mov
pop
jmp
xchg
cwtl
inc
add
and
lcall
inc
add
add
into
outsb
mov
add
leave
add
out
push
mov
pusha
add
mov
out
stc
xchg
pop
jmp
enter
jecxz
stos
pop
and
add
hlt
adc
decl
pushl
xchg
lea
mov
jno
push
inc
add
add
add
mov
add
pop
push
mov
mov
cwtl
mov
roll
inc
add
adc
jmp
adc
decl
pop
iret
add
decl
or
adc
call
movsl
add
ljmp
add
add
cmpsb
add
mov
movb
add
and
xchg
data16
inc
add
xor
test
lds
inc
add
and
decl
addb
add
cmp
outsl
jne
pop
or
jb
jmp
dec
inc
add
xor
lcall
out
shll
decl
mov
daa
add
out
js
into
fsubrl
inc
add
imul
inc
add
jg
mov
push
add
sub
pusha
add
xlat
pop
jge
lret
or
sub
jne
or
add
sbb
pop
icebp
cmp
add
dec
adc
and
call
xor
add
inc
add
insl
adc
call
add
hlt
flds
add
add
add
bound
pushl
incl
sub
stc
add
jmp
mov
or
stos
inc
add
mov
dec
addl
add
cs
add
out
insb
leave
inc
add
ret
add
dec
pop
cmp
add
repnz
add
and
shrl
nop
rolb
sub
add
addb
imul
lahf
cltd
movsb
add
xor
call
lods
push
rorl
stc
cmp
push
xchg
mov
pop
loope
sbb
add
in
cmpsl
add
add
xchg
sbb
add
push
scas
lds
mov
ret
add
addr16
inc
add
mov
mov
mov
xchg
daa
add
sahf
movb
add
in
lcall
add
mov
lcall
popf
jnp
add
test
jecxz
std
and
pushl
repnz
add
sti
mov
add
add
and
lret
jp
jo
ljmp
add
add
add
cli
pop
aad
movl
add
and
ret
add
add
add
jns,pt
add
jmp
rclb
add
sbb
dec
cmp
dec
mov
add
cmp
call
adc
xor
lcall
add
cmpsl
add
lds
out
daa
add
add
movb
add
dec
add
call
dec
adc
decl
fnstcw
pop
cmp
add
jnp
inc
add
add
add
sbb
jbe
movb
cmc
test
inc
add
push
aas
sbb
add
pop
lret
xchg
rorl
mov
add
xchg
mov
cmpsl
add
pusha
add
xor
jp
add
add
add
enter
ljmp
decl
or
add
xchg
lcall
mov
sub
add
mov
mov
bound
jmp
add
add
fldcw
adc
jmp
inc
add
pop
lret
rorb
loop
cmpsb
add
test
cmp
add
jg
add
addb
fld
add
jns
adc
add
mov
pushl
add
add
addb
add
jmp
inc
add
and
lcall
lods
mov
adc
faddp
add
xchg
out
popf
xchg
and
js
mov
add
add
push
cmp
incl
add
xchg
xchg
stos
lahf
pushf
push
mov
mov
pop
and
decl
scas
xor
sbb
add
xchg
out
int3
ss
add
sbb
dec
or
jle
add
in
aam
add
jbe
movl
jmp
sti
test
lods
in
jecxz
div
adc
lcall
add
fsts
add
mov
incl
cs
insb
not
in
xlat
pop
lahf
sbb
js
addr16
add
add
enter
add
test
push
adc
iret
iret
jne
sbb
call
add
push
push
add
ds
add
push
and
inc
add
inc
add
add
test
xor
pushl
add
ret
add
add
mov
xor
incl
xchg
inc
add
add
test
add
pop
pop
pop
adc
pushl
pushl
jo
call
lcall
xor
call
and
call
scas
xchg
xor
call
call
mov
call
ljmp
xchg
lret
dec
shrb
mov
add
add
leave
ja
mov
add
add
or
add
inc
add
push
add
ror
or
add
inc
add
mov
movsb
add
jg
ss
cmp
in
or
mov
jecxz
xchg
sbb
sti
add
jb
call
imulb
out
enter
push
add
repz
imul
xor
lcall
add
pop
add
add
push
add
sub
push
add
push
add
cli
fldl
decl
xor
add
add
outsl
dec
xor
add
cmp
loope
mov
add
cmp
mov
add
add
jg
adc
call
stc
int3
pop
add
xchg
jae
decl
adc
push
adc
decl
add
jge
mov
in
jle
mov
add
icebp
rolb
add
inc
add
adc
add
ja
push
add
ljmp
push
or
mov
cmp
xchg
imul
dec
push
outsb
xchg
std
inc
add
call
nop
movsb
add
sti
int
js
dec
or
aaa
adc
decl
add
cmpsl
add
rcll
ret
add
movsl
add
or
addr16
add
pushl
add
dec
or
add
das
insl
lods
add
ljmp
mov
dec
dec
jae
ljmp
add
popa
add
jmp
pushf
ds
add
imul
or
dec
lret
and
call
addb
add
adc
pushl
add
xchg
divb
shll
lcall
jmp
add
add
std
dec
inc
add
pop
add
sahf
ds
add
xor
call
add
ss
dec
mov
add
jb
call
fnstcw
add
dec
push
repnz
fsts
sub
add
add
fstpt
jl
negl
negb
push
mov
inc
add
addl
add
mov
add
pop
cmpsl
add
push
push
inc
add
pop
push
mov
add
addb
add
add
add
pop
xchg
mov
add
pushl
pusha
add
ja
out
clc
pop
ret
add
sbb
xor
add
push
xlat
fsubl
inc
add
adc
jnp
or
fiaddl
test
pop
roll
jge
add
jmp
add
and
call
jbe
push
add
pop
or
cs
arpl
ljmp
add
jl
add
out
adc
pushl
int3
loope
mov
xchg
ret
add
ja,pt
add
mov
pusha
add
mov
sub
add
aaa
mov
shl
add
imulb
aas
xchg
xor
call
ljmp
add
push
add
inc
add
fsubs
cli
mov
test
add
xchg
ljmp
inc
add
add
ljmp
cmp
add
jp
lods
lret
call
test
into
jbe
addb
jge
adc
jmp
add
add
jnp
dec
dec
fimull
add
add
jg
add
mov
jmp
sub
in
cs
add
loop
mov
add
dec
xlat
cmp
mov
add
add
add
adc
pushl
lret
movsb
add
add
mov
adc
push
add
ljmp
decl
daa
add
add
mov
add
movb
sbb
add
xor
add
int
testl
add
and
or
mov
add
add
dec
mov
mov
incb
add
add
cmp
xor
stc
xor
cld
out
cmp
inc
add
test
jmp
ljmp
add
pop
out
pop
mov
addl
xchg
add
add
add
addb
int3
push
add
mov
jbe
pop
push
and
jmp
aaa
cmp
cmpsb
add
add
cs
add
and
in
xor
decl
add
mov
push
into
jo
jmp
enter
repnz
in
cwtl
or
sbb
or
imul
or
add
fisttpll
inc
add
in
mov
inc
add
call
dec
mov
mov
cmp
pushl
incl
add
ljmp
sbb
add
or
addr16
add
ljmp
test
and
fcomip
inc
add
aad
add
pop
mov
add
sub
inc
add
add
jl
xlat
imul
outsl
dec
mov
bound
mov
decl
jl
jge
bound
ljmp
cmp
jmp
call
xor
fucomp
cmpsl
add
xor
stc
or
mov
mov
aad
add
mov
jp
add
ds
out
js
scas
xchg
pop
aas
xchg
sbb
pushl
call
out
clc
jnp
shl
add
add
or
jl
adc
add
cmp
xor
jmp
add
add
fwait
iret
cltd
jns
adc
mov
mov
add
adc
jmp
stc
xor
test
add
jmp
dec
ja
test
pop
push
cmp
add
sbb
add
das
inc
add
test
outsb
loope
xchg
jg
add
add
ljmp
roll
sti
fidivs
lcall
mov
add
jg
and
in
lret
adc
clc
jb
dec
lahf
popf
cmp
add
mov
add
jg
add
enter
mov
test
cvtps2pd
add
add
add
sub
sub
inc
add
enter
or
add
mov
nop
sti
xchg
inc
add
pusha
add
das
mov
sbb
add
lock
add
out
add
dec
add
pushl
decl
into
outsl
push
add
pop
mov
xor
pushl
ljmp
pop
mov
push
inc
add
incb
dec
mov
sub
sub
mov
dec
lcall
mov
add
movl
mov
push
mov
imul
stc
fstpl
insb
insb
pop
xchg
xchg
sbb
pop
mov
and
pop
cmp
jecxz
xchg
adc
pushl
mov
inc
add
ljmp
je
call
addb
add
inc
add
pusha
add
push
dec
xchg
mov
add
inc
add
fnstenv
xor
cltd
dec
jecxz
lods
icebp
iret
movb
add
add
jne
popa
add
xchg
and
lcall
xchg
rolb
add
inc
add
dec
mov
roll
and
inc
add
or
rolb
dec
mov
xor
incl
add
incl
fnstenv
jmp
leave
sar
scas
int
iret
daa
add
mov
mov
fsubr
mov
rcll
add
add
and
xchg
mov
sub
add
daa
add
adc
add
movb
filds
sbb
pushl
add
add
mov
out
test
cs
add
jg
rolb
mov
add
pop
cmp
dec
xchg
jecxz
mov
add
jno
jmp
add
jmp
push
jecxz
shr
add
xchg
push
add
jle
loop
sub
xor
add
flds
lcall
scas
loope
mov
dec
and
push
add
mov
add
push
add
mov
aam
add
in
jp
inc
add
cmp
jno
incl
or
insl
add
lcall
xor
lcall
call
stos
adc
add
mov
add
inc
add
add
pushl
dec
jnp
ljmp
add
mov
pop
loopne
add
sbb
add
iret
mov
lea
repnz
sbb
add
popf
fisubrs
pop
push
push
inc
add
jmp
mov
or
add
call
push
add
stos
clc
xchg
jmp
add
lret
data16
pop
pop
inc
add
jg
add
test
in
jl
add
call
test
cmpsl
add
add
dec
mov
add
push
add
data16
adc
add
jp
add
incl
cmc
add
incl
add
add
ljmp
rcl
push
sahf
push
add
fwait
mov
addb
addb
pop
inc
add
popa
add
and
cmpsb
add
aad
add
pop
roll
ret
add
mov
stc
push
loopne
ljmp
pop
or
add
mov
add
cmp
fimuls
add
xchg
jecxz
lea
mov
add
pushl
ljmp
ret
xor
lcall
add
xchg
mov
add
cmp
leave
jle
add
cwtl
test
lahf
int3
mov
jge
mov
xchg
and
ljmp
int
test
add
add
arpl
lcall
insb
xchg
leave
sub
add
add
dec
addl
mov
mov
call
push
cmc
mov
push
add
adc
call
or
adc
incl
incl
pop
mov
add
add
incl
out
add
incl
icebp
xchg
lahf
adc
incl
movsb
add
add
hlt
test
jmp
add
push
add
fmulp
imul
jmp
add
dec
aaa
cmp
ret
add
add
push
jg
add
call
lcall
aaa
add
add
push
add
icebp
inc
add
pop
jecxz
cmp
add
in
cwtl
pushf
lods
cmp
cmpsb
add
repnz
add
outsb
fmull
mov
add
nop
out
rcrl
pop
add
add
lcall
cld
addb
lret
sbb
incl
add
rolb
enter
xchg
pop
adc
lcall
inc
add
fstpl
or
shlb
add
rorl
lcall
daa
add
xor
decl
xchg
ja
add
push
outsl
aad
add
add
dec
pop
add
addl
mov
sarb
hlt
xchg
or
add
data16
dec
clc
mov
push
push
mov
mov
scas
adc
jmp
add
xchg
aas
cmp
fistpl
push
mov
lahf
cltd
jns
mov
dec
in
add
lcall
xchg
out
roll
add
mov
add
sbb
inc
add
lds
dec
mov
fistpl
cmp
les
movsb
add
jl
add
or
add
leave
mov
sub
add
add
in
or
sbb
or
sbb
add
add
mov
and
dec
dec
mov
mov
add
jge
xor
jmp
pop
add
push
add
fwait
push
pusha
add
jg
sub
cmc
mov
push
in
das
lods
mov
and
jmp
int
push
in
jbe
in
push
ja
add
shlb
jmp
add
mov
mov
add
add
movb
clc
mov
pushl
mov
cwtl
addb
add
jae
incl
mov
push
dec
and
clc
jge
test
xchg
in
addb
repnz
xchg
addb
or
xor
decl
loop
xchg
xchg
mov
sti
push
xlat
movsl
add
lret
repz
add
push
stos
loope
cmp
add
pushl
aas
arpl
pushl
add
sbb
inc
add
aad
jae
jmp
jno
cmp
and
inc
add
xchg
rcl
in
scas
xchg
pop
mov
add
add
jne
lea
and
ljmp
or
int
stos
add
sahf
dec
cmpsl
add
add
hlt
mov
pop
push
stos
repnz
movb
add
repnz
jmp
add
ret
add
push
mov
arpl
pushl
dec
inc
add
ud1
dec
ret
add
or
rolb
add
cltd
cs
pop
jl
push
add
adc
pop
add
add
mov
test
sub
mov
nop
scas
mov
call
add
in
ss
jmp
decl
add
push
add
add
add
clc
mov
add
jo
call
add
in
jmp
cmpsb
add
add
lds
sub
add
mov
add
leave
imul
add
jae
in
pop
jle
dec
pop
inc
add
fucomp
add
decl
jecxz
xor
fcmovne
pop
notb
jmp
pushl
mov
fs
pop
roll
ljmp
add
int3
push
dec
add
lcall
jge
push
add
inc
add
cs
imul
xchg
lods
mov
or
dec
mov
fstpt
add
or
sti
scas
adc
dec
sbb
add
push
sbb
jnp
aam
push
sti
push
sti
data16
lret
xchg
addl
add
add
jmp
mov
add
pop
call
jno
jge
add
sbb
fidivrs
lahf
lods
mov
int
mov
sub
lahf
lahf
or
add
ficoms
mov
push
outsb
pop
in
lds
movl
sub
dec
push
dec
hlt
or
jmp
add
in
inc
add
aaa
adc
lcall
add
add
add
fistl
xor
cmp
jae
jmp
fsubrl
pop
or
and
call
call
jae
pushl
add
add
push
lods
inc
add
jmp
pushl
lcall
sub
stc
inc
add
aam
mul
add
add
call
dec
call
or
sti
jp
ffreep
add
push
repz
add
fildl
add
cmp
add
push
xchg
stos
add
pushl
repz
fnstenv
ss
push
add
sti
incb
insb
push
add
mov
and
jmp
add
iret
sbb
sti
cmpsl
add
add
and
incl
push
add
add
addb
adc
cmp
insb
addl
in
les
or
add
dec
cmpsl
add
add
repz
xchg
and
mov
jns
mov
mov
repz
mov
jns
add
add
add
in
sub
add
inc
add
mov
jnp
push
add
jmp
mov
add
int
or
fsubrs
add
ljmp
aad
adc
in
fisttps
movl
jle
add
xor
pushl
add
xor
ds
divl
jmp
shrb
popa
add
mov
add
add
das
mov
pop
add
mov
push
scas
xchg
repnz
and
xor
ljmp
add
enter
add
enter
add
add
int
inc
add
add
sub
add
add
arpl
cli
in
iret
scas
inc
add
mov
jne
add
sbb
iret
addb
xchg
xor
xor
cs
add
sub
push
add
cli
in
push
xor
js
pop
imul
sub
cli
adc
add
fsubr
lcall
add
pmaddwd
mov
mov
iret
sub
ljmp
or
mov
and
fidivrs
cwtl
mov
mov
scas
cmp
addb
sbb
mov
aaa
lcall
cmc
xor
lret
stc
dec
aam
pop
dec
cmp
mov
in
lret
aam
add
xor
dec
lods
stc
inc
add
pushf
pop
jg
ja
add
sbb
addb
rolb
add
lods
test
adc
jmp
popa
add
das
or
add
ret
add
fwait
inc
add
or
sub
scas
fmul
in
in
movsb
add
cmp
add
sar
inc
add
inc
add
mov
pusha
add
mov
mov
ljmp
inc
add
xchg
out
out
pop
adc
jmp
std
xchg
aam
cltd
sbb
fidivl
add
outsl
arpl
call
ds
add
lret
jmp
add
repnz
dec
fnsave
add
mov
jo
jmp
add
outsb
addb
mov
aaa
outsb
xor
call
add
movb
enter
push
test
inc
add
xchg
mov
jge
jnp
cmpsb
add
add
add
push
mov
std
mov
add
mov
cmpsl
add
jle
add
cmpsb
add
jle
insl
inc
add
ja
mov
and
lcall
sub
add
cmc
add
pushl
add
mov
inc
add
test
inc
add
ss
add
inc
add
add
movsb
add
add
add
lcall
fsubrp
sub
incl
add
das
out
sub
push
sub
sub
add
add
and
lahf
imull
sub
add
fisubl
add
mov
addl
pushl
popa
add
mov
das
xor
decl
add
call
add
out
rcrb
cmp
add
add
mov
add
sbb
add
jg
add
pusha
add
mov
xchg
cltd
jp
add
xchg
das
xchg
out
mov
add
dec
testb
add
add
mov
mov
inc
add
arpl
call
ljmp
add
rorb
add
sub
cltd
or
sub
jmp
pop
add
dec
inc
add
addb
insb
mov
add
push
add
mov
ljmp
add
xchg
push
add
add
leave
lret
out
and
cli
int3
cmpsb
add
push
data16
and
push
scas
cmp
add
pop
mov
add
dec
jbe
adc
push
addl
repz
nop
hlt
bound
ljmp
icebp
cwtl
test
push
add
movl
mov
imul
lcall
jbe
push
jb
ljmp
test
add
pop
xchg
in
xlat
jae
call
test
push
ja
add
std
add
punpcklbw
ljmp
add
cmp
add
inc
add
add
incl
clc
or
add
add
jno
call
pushl
scas
jb
fists
std
jge
cmpsl
add
pop
jl
add
icebp
jo
jmp
incl
push
inc
add
cltd
ror
xchg
into
ret
add
mov
cs
push
add
add
cmpsb
add
add
call
pushl
adc
dec
pop
sti
push
enter
add
push
cs
add
popa
add
fbstp
out
test
sub
add
cmpsl
add
add
mov
incl
add
add
add
adc
jl
push
movb
imul
add
lret
data16
popa
add
jne
lret
stos
pop
adc
test
add
gs
and
aas
fbstp
dec
xor
incl
cmc
jge
add
add
jb
jmp
add
fsubrp
negb
jnp
add
xor
addl
add
cmp
addl
add
rcrb
add
add
add
mov
test
jbe
push
add
clc
and
cmp
xchg
pushf
xchg
xor
add
and
call
outsl
stc
ret
pusha
add
cmpsb
add
and
ljmp
cmp
out
jecxz
daa
add
add
mov
jmp
add
add
mov
mov
dec
lcall
add
add
inc
add
inc
add
mov
add
add
add
ljmp
push
lods
das
stos
inc
add
add
or
dec
movb
hlt
incl
xchg
into
movl
mov
pop
add
fildl
test
pop
ljmp
sub
jecxz
sbb
aaa
jo
jmp
push
inc
add
inc
add
or
add
add
dec
jo
lcall
cmp
pop
xchg
xchg
jle
add
add
pop
cmpsb
add
add
add
inc
add
push
jp
lcall
inc
add
fsts
add
movl
add
and
call
movl
add
sub
xchg
aaa
mov
add
add
add
out
fwait
loope
cmp
add
addb
mov
clc
and
jmp
add
sub
add
add
lock
push
xor
add
sbb
shl
add
adc
call
arpl
call
fcom
add
lds
das
popf
js
add
fdivrs
lret
ljmp
add
ljmp
roll
mov
sbb
sub
and
jmp
add
push
shlb
add
cmp
pop
fidivs
xor
add
js
push
add
std
dec
loop
add
inc
add
popa
add
xor
ljmp
push
cld
ds
roll
clc
movl
rcl
dec
mov
xchg
outsl
add
ljmp
stos
jne
gs
call
xor
inc
add
xor
add
insb
movsl
add
add
add
add
xchg
jno
incl
add
in
sub
lock
les
test
aad
add
pop
jns
push
in
aas
mov
sbb
add
movl
call
add
adc
std
jmp
mov
sar
inc
add
mov
add
add
movsl
add
movl
add
das
or
add
int3
or
addl
negb
push
add
mov
fstpt
add
lock
cs
adc
add
add
xor
add
add
dec
fsin
add
mov
std
mov
mov
lock
jge
pop
cmc
cwtl
fwait
pop
jo
pushl
call
lods
dec
movl
pop
movl
add
dec
mov
add
jg
add
add
imul
inc
add
test
jae
ljmp
mov
xor
decl
and
cmp
mov
xor
call
mov
ljmp
stos
bound
lcall
negl
add
push
sub
out
dec
das
pop
mov
test
dec
rolb
aaa
cld
leave
push
pushf
xchg
or
add
cli
adc
push
add
addb
add
das
adc
cmp
addb
add
loope
sbb
jbe
add
and
ret
aas
fsubs
dec
push
add
aas
cmp
push
add
incl
add
sub
fldenv
add
int
or
add
ss
add
out
fs
cmp
push
add
pop
sub
xchg
je
jne
repz
jmp
je
add
push
dec
add
mov
xchg
sub
jl
xchg
inc
add
pop
out
mov
aaa
sub
sar
mov
int
insb
add
inc
add
add
cmp
add
mov
and
call
call
add
pop
cld
sbb
maxps
push
add
and
call
pop
scas
jo
decl
int
xor
call
push
add
movsl
add
add
fsubl
cmpsb
add
add
add
ror
fistpl
add
loope
and
js
xor
call
test
nop
clc
adc
lcall
incl
incl
jp
mov
mov
movl
add
add
dec
xchg
pop
mov
jmp
rcrl
add
iret
jns
add
add
inc
add
jo
decl
add
mov
call
das
adc
pushl
imul
out
xor
push
ret
push
mov
jbe
insl
notrack
add
add
adc
decl
cltd
mov
mov
add
mov
mov
cmp
jmp
add
jns
add
push
test
push
add
mov
mov
sbb
pop
mov
adc
incl
jmp
cli
push
cmp
fldl2e
in
jo
incl
ret
add
sbb
add
and
lcall
add
addr16
inc
add
stos
or
lds
in
jmp
loop
out
addb
jle
add
das
pop
add
add
add
add
xor
ljmp
lds
cwtl
pop
insl
movb
adc
dec
or
mov
add
adc
decl
xchg
mov
add
jle
mov
add
and
cmp
das
add
mov
sti
test
add
in
pop
scas
mov
lods
cmpsl
add
push
add
shl
add
cmp
jl
add
jmp
xor
into
pop
test
push
sbb
mov
xchg
sbb
dec
or
decl
or
insl
outsl
stos
mov
inc
add
add
incl
add
inc
add
sbb
add
or
test
inc
add
pop
sbb
mov
add
add
lea
cli
or
test
sbb
rolb
add
incl
push
add
pop
sub
add
xchg
or
les
inc
add
mov
add
push
add
or
lods
pop
add
enter
jecxz
mov
sbb
push
mov
add
add
movb
xor
xchg
addb
test
lods
mov
enter
xchg
rclb
movsl
add
adc
inc
add
movl
inc
add
sahf
movb
sub
add
lcall
ja
cmpsl
add
mov
adc
mov
mov
add
pop
mov
incl
add
adc
ljmp
add
mov
ret
add
stc
ret
add
in
xchg
sub
cltd
push
mov
mov
dec
sub
movb
add
fdiv
addl
add
add
dec
lods
lret
rolb
xchg
push
lods
xchg
rolb
icebp
jo
jmp
add
fsubrl
outsl
out
or
add
scas
cmp
call
imul
pushf
mov
cmp
cmp
jmp
add
scas
sbb
add
ja
dec
call
adc
push
sbb
jmp
add
je
lahf
enter
addb
cmp
std
sub
push
or
add
in
mov
ss
jge
add
add
aas
jmp
add
aad
xchg
addb
add
sahf
movl
add
pop
sub
xchg
cmpsl
add
and
lcall
cmpsl
add
add
pop
jmp
cld
fwait
int
inc
add
add
mov
cwtl
mov
call
dec
dec
jge
and
pushl
loope
xchg
lea
or
cwtl
lcall
push
mov
test
dec
xor
dec
int
sahf
cmp
mov
and
decl
push
outsl
fbstp
add
roll
and
jmp
add
or
jne
or
or
lahf
repz
nop
or
cmp
lock
movb
add
add
mov
ret
add
lcall
pop
out
push
lds
mov
bound
ljmp
imul
jo
decl
addr16
add
sbb
lock
nop
mov
mov
xor
push
jno
fisubrl
mov
movzbl
add
add
lea
mov
addb
mov
mov
add
adc
add
lds
movsl
add
data16
movl
add
pushl
add
incl
jp
imul
call
mov
sarl
add
repz
lods
jg
xor
mov
xor
lcall
fwait
cltd
data16
add
lret
pop
jb
jmp
lock
inc
add
in
dec
xlat
loope
dec
jnp
xor
jnp
push
add
push
int
addb
addb
add
out
aas
mov
std
movb
cmp
xor
call
rclb
sti
jae
lcall
mov
pushf
push
add
xor
decl
adc
add
ja
mov
pop
inc
add
fmul
or
cltd
fisubrl
cld
je
xchg
addb
add
rolb
sbb
adc
incl
add
dec
pop
test
ljmp
or
add
pop
lea
add
and
decl
shlb
add
sbb
jno
incl
inc
add
rcrb
and
lcall
dec
js
movb
add
and
incl
add
jb
jmp
add
aam
addl
ret
add
mov
jmp
cmp
or
add
out
push
in
jge
lods
lock
add
fs
xor
push
movsb
add
jmp
add
jmp
ljmp
xor
in
lds
adc
decl
xor
add
test
fadd
add
mov
call
mov
lcall
loop
dec
adc
cmp
cld
push
mov
and
call
push
ljmp
mov
out
mov
push
add
stos
pop
and
jmp
test
outsl
divl
add
cmp
hlt
lea
insl
add
incl
les
jnp
lret
call
mov
test
cs
jno
ds
add
scas
movsl
add
add
imul
mov
add
pop
jno
jmp
ret
add
inc
add
push
add
pop
jo
in
push
add
pushf
ds
add
and
jmp
add
jb
pushl
ljmp
fnsave
lcall
lock
pop
xor
add
adc
mov
xor
ljmp
add
insb
gs
or
stos
dec
inc
add
into
aad
add
jecxz
nop
aaa
pushf
mov
stos
mov
adc
call
enter
roll
cmp
add
mov
mov
mov
mov
addb
add
sahf
loopne
test
clc
clc
mov
add
ljmp
jns
mov
in
cmp
outsb
aaa
sbb
add
cld
mov
rolb
and
aam
sub
fsubr
inc
add
pop
add
call
outsb
and
call
sub
arpl
call
loop
sbb
or
leave
jns
add
cld
cmp
add
add
pushl
push
jg
mov
fsubs
rcrl
iret
xchg
mov
add
ds
add
ljmp
insb
add
pushl
ljmp
add
fcmovne
test
push
fsubrl
out
and
call
int3
sub
ficoms
add
push
cs
push
dec
fsubr
addl
xor
inc
add
add
ljmp
cmp
add
pop
mov
add
test
add
add
adc
pushl
add
lock
add
test
add
fstps
push
add
frstor
inc
add
add
add
psubsw
inc
add
popf
outsl
mov
mov
outsl
sub
pusha
add
scas
push
add
pop
fidivrl
xor
call
dec
sahf
cs
add
mov
push
inc
add
in
xchg
icebp
test
imul
add
incl
add
add
sub
jmp
call
mov
aad
int3
nop
jge
push
pop
inc
add
int
movsb
add
dec
mov
daa
add
pop
add
add
jns
add
cli
xor
decl
push
add
roll
xlat
out
imul
add
or
pushf
jle
add
pop
test
ds
push
jecxz
into
dec
cltd
xchg
jbe
pop
sub
pop
mov
fsubs
lcall
test
add
add
dec
int
push
add
push
popl
add
add
das
inc
add
dec
aas
push
add
fwait
ret
and
lods
add
mov
sub
push
fsubp
add
cld
xor
inc
add
add
add
imul
test
lcall
jb
jmp
add
lea
add
dec
dec
jle
jnp
jg
aad
jle
addl
or
pop
push
and
mov
lock
add
and
ljmp
insl
mov
mov
add
sbb
int3
adc
lret
mov
add
add
add
call
hlt
rolb
add
inc
add
sub
add
popf
addb
add
mov
jb
mov
add
ljmp
ds
pop
jno
call
add
add
sahf
movl
stc
xlat
mov
fwait
nop
push
lock
add
and
add
add
lods
call
xor
call
std
enter
fnop
jmp
push
add
or
add
adc
dec
or
lods
xchg
sub
add
in
adc
test
push
adc
clc
sbb
test
push
add
gs
xchg
add
cli
or
repnz
add
xchg
push
rolb
je
add
add
rolb
stos
cmpsl
add
test
cmc
mov
ror
inc
add
pop
sub
out
mov
add
dec
mov
jp
dec
dec
ret
add
lcall
add
add
pushl
push
add
cmc
mov
add
push
add
add
pushl
pop
aam
out
and
mov
pop
rolb
add
fwait
mov
sti
inc
add
test
mov
rclb
add
jmp
lcall
aad
lret
movsb
add
and
incl
adc
ljmp
add
add
repz
leave
cli
pop
rcll
jmp
out
dec
fcmovnu
mov
jmp
add
out
in
jbe
outsl
ja
jb
incl
add
dec
jle
cmp
add
int
add
inc
add
je
add
aam
daa
add
inc
add
xor
ljmp
fnstsw
ljmp
stc
mov
add
popf
out
bound
decl
imul
mov
jge
xchg
push
add
jbe
stc
push
add
add
add
xchg
xchg
inc
add
mov
test
imul
add
test
mov
sbb
add
add
inc
add
or
add
lcall
out
push
pusha
add
mov
rolb
add
add
sub
mov
leave
xor
jmp
lds
cmp
inc
add
add
imul
sbb
adc
push
pop
pop
mul
add
add
pushf
ficoml
jnp
xchg
xchg
and
decl
sbb
mov
addl
sub
add
shl
fisttpl
add
cmp
add
inc
add
pop
sbb
out
fistpll
xchg
in
jl
add
push
add
push
inc
add
jle
mov
mov
incl
add
push
std
aas
push
add
stc
xchg
push
outsb
or
add
pop
ret
add
lcall
lcall
clc
sub
jge
movb
add
sub
mov
imul
sbb
add
sbb
outsb
and
dec
fwait
add
adc
jmp
push
jbe
mov
add
pop
add
cmp
xchg
out
fadds
mov
add
inc
add
mov
pop
repnz
aam
lcall
fldcw
add
or
dec
add
dec
repz
add
repz
insl
lret
push
add
add
lcall
dec
cmp
add
mov
add
repnz
lock
mov
inc
add
xor
push
add
out
ficomps
add
xchg
data16
jnp
add
cmpsb
add
ljmp
ljmp
pop
jp
fsin
ret
add
aad
jo
mov
sbb
test
add
movsb
add
add
add
call
inc
add
lret
pop
dec
cmp
clc
jge
xor
mov
repnz
add
cmp
and
ljmp
paddusw
decl
add
test
hlt
adc
pushl
dec
daa
add
jmp
ret
add
add
xor
jmp
pop
add
fmuls
add
sti
pop
test
fnstenv
dec
pusha
add
out
jmp
mov
add
or
clc
push
add
mov
and
ljmp
mov
mull
data16
add
loope
sub
out
jle
mov
adc
add
insl
data16
push
aad
push
add
pushf
xor
add
dec
arpl
lcall
aaa
xor
adc
push
loop
test
lods
xchg
pusha
add
sub
add
data16
add
call
pop
mov
push
add
and
ljmp
add
mov
lret
add
pushf
outsl
fucomip
mov
mov
mov
add
pop
add
dec
pop
xchg
pop
mov
add
add
pushf
negl
and
mov
inc
add
ret
add
roll
sbb
loope
inc
add
pop
cltd
push
scas
sti
sub
popl
dec
cmc
jns
add
xor
inc
add
cli
or
mov
push
add
mov
add
out
cli
cwtl
in
mov
xchg
xchg
movsb
add
add
jns
call
roll
add
sub
test
outsl
ljmp
das
xchg
add
imul
mov
mov
add
add
dec
insb
stos
mov
jo
incl
add
arpl
jmp
mov
push
add
in
repnz
inc
add
push
add
out
push
addl
add
add
lret
add
lcall
add
inc
add
add
pushl
add
ficoms
add
movsb
add
or
cld
inc
add
adc
dec
lcall
std
xchg
xor
add
add
sbb
jge
outsl
js
inc
add
add
insb
push
add
jno
incl
fisubrl
push
es
sbb
lcall
out
call
dec
xor
jmp
decl
add
and
push
popf
insb
dec
sbb
cmp
push
je
inc
add
jns
sub
add
inc
add
mov
mov
sub
add
and
ljmp
sbb
push
addb
sub
add
inc
add
int
add
add
pop
out
fsubl
lock
jecxz
adc
ljmp
icebp
das
gs
enter
imul
sbb
xchg
daa
add
add
in
mov
jg
pop
sbb
add
and
jmp
add
sbb
add
or
xor
pushl
pop
mov
jno
incl
jmp
jmp
add
mov
add
into
or
movl
std
cmp
mov
add
jge
inc
add
popf
std
addl
add
xchg
or
pushl
fdivrl
and
call
push
add
call
fisubl
add
pop
add
call
jge
enter
pop
sbb
scas
mov
sub
popa
add
outsl
out
jp
add
out
lods
leave
or
add
cltd
mov
mov
aas
push
add
xrelease
ja
aas
cmpsl
add
mov
pop
mov
imul
int3
leave
push
inc
add
pushf
or
inc
add
add
inc
add
dec
inc
add
repz
add
out
lcall
cmp
jne
xchg
imul
adc
call
pop
xchg
xchg
jmp
inc
add
xchg
arpl
cmp
or
into
add
mov
add
sahf
jg
add
xchg
mov
test
xor
decl
dec
ret
add
jl
add
call
add
mov
add
or
dec
add
stc
or
add
sbb
in
int3
call
add
jbe
add
xchg
fbld
add
jne
mov
add
or
add
xor
pushl
mov
roll
mov
inc
add
add
dec
in
repz
add
add
jae
call
decl
addl
cli
mov
jmp
add
cld
jle
add
mov
xor
add
add
in
dec
mov
pusha
add
addb
repnz
mov
fmuls
add
xchg
call
add
pushf
adc
lcall
insl
adc
pushl
insl
insb
mov
fldenv
xor
push
cmp
add
sub
inc
add
pop
sbb
lods
fldenv
call
add
dec
ret
ja
scas
out
les
jg
add
in
sub
add
ljmp
lods
fwait
mov
xchg
imul
outsb
inc
add
adc
lcall
jnp
xchg
stc
jge
rolb
test
inc
add
lea
pusha
add
xchg
xchg
fwait
mov
xor
push
jne
mov
fiaddl
add
imul
call
mov
inc
add
add
add
rol
add
mov
add
pop
cmp
test
sarb
test
mov
add
xor
int3
dec
out
rorl
add
push
bound
pushl
add
in
dec
shl
pusha
add
mov
inc
add
inc
add
gs
cmp
pop
rolb
outsl
xor
ljmp
add
xor
jmp
decl
int3
adc
call
cmp
movb
cmpsb
add
add
ss
add
mov
add
add
sub
lret
pusha
add
negl
test
lods
out
insb
test
ret
add
add
push
and
ret
dec
scas
and
jle
add
add
add
jl
add
les
mov
loope
loop
hlt
into
les
sbb
add
mov
add
add
add
ljmp
add
or
mov
add
jmp
add
lods
aad
add
movsb
add
icebp
and
lcall
pusha
add
out
cmpsl
add
adc
cmp
jge
stc
ja
dec
add
jo
ljmp
cltd
cmp
add
xor
lcall
sti
sbb
add
add
xchg
add
inc
add
lock
ljmp
js
sub
mov
xchg
in
mov
in
pop
clc
icebp
cwtl
std
sub
add
add
push
xchg
rolb
add
mov
mov
add
decl
ljmp
xor
ljmp
add
dec
push
sbb
sahf
js
jl
add
mov
pop
add
add
add
enter
dec
xchg
mov
add
add
das
cs
inc
add
and
pushl
ljmp
movsl
add
add
inc
add
lret
and
decl
loop
xor
fstpl
pop
addr16
inc
add
cwtl
mov
add
call
inc
add
add
add
sub
outsb
mov
add
das
test
add
push
add
or
add
add
add
pusha
add
fisttpl
lcall
addb
into
aaa
push
add
inc
add
add
hlt
cmp
add
add
or
jle
pop
dec
mov
pop
add
in
pop
loopne
adc
ljmp
and
cmp
add
add
out
std
cmc
std
pop
inc
add
push
add
xchg
fwait
test
sbb
notb
test
adc
jmp
lods
dec
mov
repnz
add
mov
add
xlat
dec
je
add
add
add
in
inc
add
in
mov
roll
add
ja
dec
push
push
mov
add
jle
rorl
fistl
fst
push
add
fidivs
adc
std
in
stc
cwtl
pop
mov
add
movsbl
add
add
add
sbb
sbb
movsl
add
dec
jl
fdivrs
lret
repz
data16
in
jnp
xlat
hlt
cmp
push
clc
outsb
xchg
filds
incl
xchg
lahf
aad
sahf
mov
fsts
add
mov
add
mov
add
out
lret
pushl
add
add
pop
shll
xchg
push
add
add
out
add
rcr
and
ljmp
jae
lcall
adc
inc
add
xchg
lds
mov
incl
pop
xor
ljmp
addb
cmp
add
add
ljmp
ret
add
cs
add
and
push
xlat
mov
add
mov
popa
add
cmp
test
ljmp
std
iret
xchg
and
add
add
lds
les
addb
xchg
sbb
add
add
in
outsb
cmc
stc
loope
add
jmp
add
xor
cmp
stos
fidivrs
jge
add
lahf
adc
ljmp
add
add
add
sbb
pushl
push
add
sbb
scas
ss
cmp
add
add
roll
add
repz
addb
add
add
test
add
ljmp
inc
add
jge
pop
cmpsl
add
lret
ljmp
sbb
add
pop
add
add
fmul
pusha
add
dec
add
jmp
add
mov
push
add
loope
stc
testb
push
add
decl
add
jno
decl
add
je
scas
add
decl
aaa
mov
mov
add
imul
cmpsb
add
add
inc
add
int
add
addb
xchg
mov
cmp
jns
mov
popf
and
jnp
add
addl
add
cmpsb
add
inc
add
dec
xchg
pop
jnp
add
add
pop
out
adc
add
sub
jmp
jmp
pushl
ljmp
movsl
add
sbb
in
or
lcall
rolb
xor
test
jns
add
xchg
adc
jmp
add
mov
add
mov
inc
add
jecxz
sbb
add
add
dec
inc
add
loope
pusha
add
addr16
add
add
ljmp
add
add
ret
add
inc
add
faddl
add
fwait
jp
and
cli
jmp
inc
add
popf
mov
mov
add
ficompl
jmp
add
push
add
test
inc
add
xlat
push
add
movsb
add
fstps
add
stc
jnp
push
cwtl
xor
call
add
xor
jmp
add
mov
and
add
xchg
lods
xchg
push
fsubs
pushl
add
mov
stc
xchg
out
cmp
add
sarl
and
pushl
pop
mov
dec
mov
add
data16
sbb
mov
xchg
popa
add
cld
jecxz
push
add
pop
leave
roll
mov
decb
jp
scas
xor
out
jbe
outsb
sbb
sbb
push
add
pushl
pusha
add
cmp
lahf
and
dec
or
call
xor
pushl
repz
pop
and
add
movsb
add
add
xlat
or
xor
push
shl
lahf
push
rolb
add
or
adc
ljmp
nop
adc
mov
push
js
add
insb
sub
repnz
negl
add
lcall
add
and
decl
add
xchg
das
xchg
cmp
and
jge
repnz
movl
ljmp
test
test
fisttps
jae
in
cmpsb
add
xchg
jo
ljmp
pop
arpl
ljmp
std
jnp
outsl
scas
jmp
add
xor
cmp
aas
fmul
mov
add
bswap
lahf
movsb
add
mov
add
add
das
adc
decl
loop
out
test
sub
add
cmp
in
lods
int3
mov
add
insb
inc
add
push
add
jns
scas
pop
daa
add
mov
in
cld
mov
loop
inc
add
sub
add
adc
decl
add
out
mov
test
cmp
xor
inc
add
push
xor
pushl
jmp
add
add
lea
add
ljmp
adc
jno
ljmp
clc
call
cmpsl
add
sti
test
out
mov
and
int3
addb
and
mov
inc
add
xlat
or
scas
add
jmp
add
stos
iret
add
sti
adc
pushl
repz
mov
movl
add
imul
out
into
cli
aaa
js
add
jmp
add
je
repz
and
sub
jbe
add
add
or
xchg
pusha
add
roll
mov
call
add
mov
add
mov
xchg
jl
add
incl
push
in
cltd
add
xchg
jnp
aaa
pop
add
pushl
lcall
xchg
push
dec
mov
cmp
mov
add
test
mov
dec
add
add
mov
jnp
and
ljmp
test
adc
pushl
add
ret
add
cltd
cmpsl
add
cmc
pop
inc
add
jge
dec
repz
add
add
adc
push
cld
fiaddl
xchg
sbb
pop
or
nop
sub
or
inc
add
sbb
insl
xor
mov
jmp
pop
push
pop
and
aas
mov
add
mov
les
adc
jmp
add
in
repz
mov
xor
jmp
adc
add
lods
test
movsl
add
data16
add
imul
adc
jmp
add
add
incl
add
sub
mov
repnz
stos
dec
mov
add
stos
xor
jmp
add
es
lods
scas
movb
enter
lcall
add
mov
add
add
jne
test
cmpsl
add
addr16
mov
xchg
pop
add
jl
add
ljmp
add
jmp
add
mov
add
jmp
add
adc
pushl
ljmp
add
outsb
sub
and
decl
bound
incl
add
icebp
shll
add
push
fistpll
pop
mov
repnz
add
or
add
jb
jmp
add
inc
add
lea
add
xor
sbb
jmp
lds
add
jg
addl
stos
fisttps
decl
add
or
adc
call
mov
fwait
roll
add
mov
imul
add
rcrl
outsl
mov
jecxz
mov
cmp
cld
dec
and
fistl
inc
add
pop
mov
push
inc
add
jo
ljmp
or
lcall
js
add
sub
decl
fsubs
jmp
xlat
ja
cmp
or
add
sbb
sbb
mov
out
add
mov
push
add
adc
dec
test
add
adc
imul
stos
add
xlat
pop
insl
adc
add
lods
movl
cmp
add
xchg
das
in
push
add
jmp
add
incl
add
fstl
add
adc
lcall
add
add
dec
mov
shlb
sub
add
pushf
or
add
fistpl
pop
ljmp
pusha
add
mov
icebp
xlat
mov
inc
add
pop
add
push
xchg
addb
leave
call
add
add
mov
mov
push
lock
inc
add
add
cld
fdivl
roll
add
adc
lcall
and
incl
addb
add
push
or
fistps
jbe
add
add
les
mov
add
sub
fldcw
hlt
sbb
pushl
pushl
inc
add
fs
add
call
ljmp
ljmp
add
pop
pop
roll
add
xor
add
movsl
add
lcall
add
and
call
pop
ds
std
xor
jmp
add
mov
push
add
lcall
adc
call
call
ljmp
and
inc
add
js
adc
ljmp
hlt
xchg
popa
add
add
jl
push
mov
outsb
pop
inc
add
mov
xchg
or
inc
add
add
jmp
add
add
test
cltd
adc
popf
add
jmp
add
cmp
xor
cmpsl
add
imul
sub
adc
inc
add
mov
sub
sbb
lds
cld
std
push
sub
inc
add
dec
in
fists
jmp
sub
mov
xor
lcall
push
idiv
daa
add
scas
mov
sbb
mov
mov
daa
add
stc
xor
jmp
push
imul
sbb
movsl
add
add
popa
add
inc
add
add
aaa
jmp
add
mov
mov
mov
movsl
add
mov
add
or
add
add
push
adc
call
add
push
loop
bnd
les
inc
add
call
decl
repnz
xor
ljmp
pop
repnz
inc
add
adc
lcall
add
lods
sub
js
add
shl
push
xor
jmp
add
add
xor
add
fisubrl
pushl
add
add
lahf
jb,pn
dec
sti
loope
sub
les
mov
add
cli
cmp
jle
rcll
lcall
add
jmp
add
in
sub
jp
add
xchg
int
cmp
xlat
mov
cmp
icebp
mov
scas
movsl
add
lock
add
sub
jg
clc
push
fcmovb
add
scas
jmp
pop
in
sahf
mov
in
xchg
xchg
xchg
jg
add
mov
add
fbstp
add
rolb
outsl
cmpsb
add
int3
fwait
pop
add
mov
or
leave
xchg
lret
add
add
notl
incl
test
cmp
or
xor
add
pop
test
imul
shll
mov
add
lcall
dec
je
dec
push
add
mov
sub
jge
add
sti
cld
and
ficompl
data16
ret
add
add
rolb
add
pusha
add
incb
add
dec
data16
cltd
addb
rolb
sar
bound
incl
add
addl
add
jns
and
call
test
push
addl
add
mov
adc
jmp
push
cld
addl
in
cmp
jl
dec
jmp
jb
cmp
add
decl
fsubl
outsb
cwtl
scas
push
repnz
sbb
add
and
xchg
mov
pop
xor
add
add
push
mov
out
sbb
das
punpcklwd
decl
cmp
add
mov
xlat
or
pushl
add
xor
data16
add
add
add
add
jns
add
inc
add
add
sub
dec
push
insl
les
mov
add
in
jp
inc
add
add
pop
shl
add
add
add
addb
add
jmp
mov
ja
pop
sub
push
insl
out
sbb
adc
jmp
add
cmp
add
add
lret
ljmp
add
pushl
scas
adc
js
mov
pushf
mov
ljmp
add
out
scas
or
and
incl
add
int3
sub
add
pop
lock
ljmp
add
bound
decl
js
pop
add
mov
mov
pop
dec
mov
or
add
add
imul
daa
add
add
inc
add
imul
add
test
xchg
les
ret
add
cmp
add
add
xchg
pop
mov
jo
sti
and
incl
js
pop
cltd
lcall
decl
into
dec
movsl
add
add
sbb
jmp
mov
popa
add
hlt
sbb
lds
into
mov
and
add
xor
add
daa
add
lret
aam
scas
cs
test
jge
imul
add
inc
add
cmpsb
add
imul
fwait
jge
add
cmp
popa
add
out
test
fwait
scas
out
add
jmp
shlb
xchg
adc
lcall
mov
sbb
ds
add
add
movb
jl
icebp
adc
fdivs
jmp
sub
jmp
add
addb
jecxz
dec
xor
add
cmpsb
add
sahf
push
rcll
fwait
push
add
jae
mov
add
adc
ljmp
xchg
pop
add
and
lcall
sarl
add
mov
add
repnz
call
mull
add
cmp
les
push
cmpsb
add
pop
mov
call
dec
jmp
mov
jne
add
mov
out
push
push
lret
lcall
in
sbb
faddl
daa
add
je
cmpsb
add
imul
mov
add
arpl
decl
add
inc
add
addb
add
pop
push
cmp
call
add
push
add
clc
in
push
insl
pop
cld
cmp
inc
add
pop
mov
jmp
add
incl
pusha
add
enter
mov
add
sbb
inc
add
push
or
xchg
pop
inc
add
mov
stc
pop
mov
add
adc
fdivrl
loop
or
add
bound
incl
call
and
lcall
leave
cld
cs
add
cmp
xor
add
push
cmp
add
push
add
cs
enter
in
aad
add
test
mov
add
sub
add
add
fisubrl
movl
push
lahf
dec
push
add
mov
add
push
xchg
std
add
jge
add
std
int
add
add
pop
repz
add
xchg
and
push
mov
rcll
add
pop
addr16
cmpsb
add
add
cmc
and
incl
nop
sub
imul
int3
loope
repz
mov
add
outsl
or
push
add
rolb
add
ja
add
dec
loope
sbb
add
aad
add
pop
or
and
rolb
pop
je
add
add
add
add
les
mov
mov
add
call
add
lods
test
inc
add
cmpsl
add
sti
mov
cmpsb
add
add
aad
shll
add
xor
in
shlb
jo
jmp
add
mov
nop
and
add
inc
add
ja
add
sub
add
add
fdivl
punpckhbw
dec
out
bound
inc
add
add
mov
adc
call
add
sub
sbb
jnp
icebp
jmp
dec
roll
add
lcall
outsb
and
lcall
pop
cwtl
imulb
add
gs
push
add
or
add
loopne
cmpsb
add
lcall
int
add
incl
add
add
out
push
add
test
repnz
pop
cmpsb
add
outsl
aaa
push
cmp
lcall
add
arpl
cmp
jbe
je
add
add
add
out
pushf
xchg
jb
call
add
and
jmp
inc
add
or
ret
add
xchg
aas
add
movb
stos
xchg
add
cmp
add
cmp
aam
aas
data16
or
xchg
dec
push
add
push
add
int3
movl
cld
push
add
ret
add
idiv
xor
cmp
ljmp
jg
jne
add
repz
push
movl
les
ret
pop
mov
pushl
cmp
sub
and
decl
jne
add
jae
dec
push
repnz
push
outsl
xlat
add
add
sub
sti
inc
add
decl
test
and
mov
add
cmc
pop
ret
add
add
jbe
xor
pushl
add
clc
mov
add
or
insl
dec
aad
mov
test
xor
lcall
inc
add
jecxz
out
fisttpll
test
add
add
add
lcall
jno
ljmp
test
add
push
roll
lods
sahf
cmp
add
pop
sti
dec
jp
add
fucomi
mov
add
cmp
add
and
incl
mov
stc
insl
add
add
addl
add
sbb
adc
cmp
add
sbb
jno
out
xor
ljmp
movl
pushl
adc
pop
mov
add
pop
xor
stc
clc
addl
sbb
or
add
or
xor
add
scas
mov
sub
and
cmp
sarb
add
xor
call
adc
mov
loope
enter
in
stos
iret
dec
and
call
mov
stc
mov
call
lcall
sldt
ljmp
je
inc
add
bound
call
jmp
pushf
pushf
add
add
mov
jb
push
rcrl
add
pop
add
ljmp
fistpll
lds
mov
sub
movl
jp
push
dec
or
lcall
movsb
add
inc
add
movsb
add
call
jmp
call
push
dec
dec
ficomps
jne
push
add
icebp
cmp
add
add
add
pop
xchg
xchg
nop
mov
icebp
sarb
cli
cmp
add
adc
add
mov
cmpsl
add
add
ljmp
add
pushf
bnd
jo
ljmp
mov
add
fcmovnb
add
cld
mov
jne
jns
ret
add
and
in
sbb
cmp
dec
inc
add
lods
outsl
addl
das
and
mov
push
add
xchg
and
ljmp
add
mov
pop
popf
addl
add
inc
add
push
cmc
int3
xor
jmp
jmp
repz
jmp
pop
xor
add
imul
ss
jbe
pop
roll
in
pop
cltd
hlt
push
add
inc
add
inc
add
add
add
enter
add
adc
cmp
jg
push
add
popa
add
dec
mov
lcall
add
insb
jns
sub
add
lret
pop
fldl
mov
xchg
scas
dec
inc
add
fimuls
rcll
call
jmp
or
movsb
add
add
xor
jmp
add
ds
add
push
add
movl
add
loop
xchg
lahf
mov
push
add
pop
adc
add
add
dec
add
adc
call
sub
add
mov
ljmp
push
xor
cld
inc
add
pop
push
cmp
sbb
add
jl
add
shl
push
dec
add
pushl
add
xchg
inc
add
es
mov
add
jno
dec
xchg
mov
pop
add
push
bound
call
jo
jmp
add
jo
mov
add
lcall
add
testb
mov
and
cld
jmp
add
mov
push
add
cmpsb
add
xchg
xor
insl
and
decl
bound
lcall
stos
shrb
add
xchg
ds
dec
outsl
xchg
sbb
xchg
dec
adc
pushl
pop
inc
add
mov
add
js
adc
jge
adc
push
pop
xor
add
add
add
sbb
sbb
push
jl
add
incl
xor
cmp
jge
loope
and
popf
pop
out
cmp
add
add
in
jl
add
arpl
call
fisttpll
add
mov
insb
add
scas
loopne
xor
fmuls
lods
aaa
int
mov
test
mov
fldl
cmp
add
add
mov
lcall
lahf
ret
add
xchg
decl
add
les
movl
divb
enter
inc
add
incl
pop
pusha
add
or
jg
add
popf
add
ljmp
shlb
ljmp
stos
sub
add
roll
push
push
add
insl
loop
xchg
pusha
add
mov
add
add
repz
add
data16
decl
sahf
mov
mov
mov
add
add
aam
adc
mov
add
or
mov
add
mov
aad
sub
add
mov
sarb
lods
or
add
cmp
add
nop
and
incl
js
addl
addl
xor
inc
add
sub
add
add
jns
xor
cmp
cmp
cld
lcall
rolb
add
popf
lds
int3
jmp
jl
sbb
add
inc
add
int3
stc
inc
add
pop
fldl
add
cmp
xchg
adc
pushl
add
add
or
out
stos
jge
add
inc
add
push
add
test
mov
sti
and
call
add
push
mov
add
scas
mov
add
dec
add
add
jbe
xchg
sub
add
cmp
decl
add
cmp
pop
add
js
mov
push
add
popf
mov
add
dec
and
call
ljmp
pop
mov
call
mov
jp
add
mov
adc
sbb
lret
dec
stos
sub
in
inc
add
pushf
and
decl
fisubrl
jecxz
cmpsb
add
add
pop
pop
or
and
test
movl
pushl
fs
mov
test
pop
fcomps
outsl
and
mov
add
add
push
add
popa
add
mov
ljmp
or
sub
cmpsb
add
jnp
add
inc
add
push
jne
add
adc
add
jmp
add
ss
jo
jmp
add
add
outsb
mov
jno
call
cltd
icebp
ss
add
addb
jnp
and
and
inc
add
ud1
add
push
xlat
cmpsb
add
add
aad
add
insb
pop
dec
xor
jmp
add
cmpsb
add
add
add
jl
ds
and
cld
cmp
add
jge
pop
pop
xor
decl
sbb
mov
xchg
jno
ljmp
xor
incl
ljmp
and
incl
add
rolb
add
pop
cmp
mov
into
pusha
add
or
push
push
add
ret
add
sbb
jbe
add
js
stc
pop
cwtl
pop
lds
roll
add
outsb
mov
add
mov
adc
sbb
and
pushl
scas
xchg
pop
push
pop
testl
out
pop
sbb
daa
add
sub
pop
inc
add
addb
add
push
stos
lret
push
add
nop
imul
jl
add
lods
xchg
mov
add
addl
sub
scas
addl
call
add
adc
decl
dec
mov
add
outsl
scas
fsubs
cmp
out
sbb
lods
rcr
sub
add
pop
add
call
mov
add
mul
add
inc
add
mov
add
fs
stos
pop
mov
paddb
add
jge
add
stc
movl
adc
arpl
jnp
incl
add
stos
and
incl
add
add
insl
jl
repnz
pushl
addl
xor
call
add
lcall
addl
add
dec
cmp
das
jg
add
adc
mov
push
std
add
je
fnsave
mov
add
ljmp
push
add
or
mov
ss
inc
add
outsb
inc
add
xor
lcall
push
je
popa
add
mov
adc
add
cmp
mov
xchg
outsb
movl
les
int
mov
add
add
cmpsl
add
cmp
push
add
clc
in
out
ds
jae
call
lret
aaa
jecxz
test
add
call
or
add
xor
ljmp
leave
inc
add
add
jge
scas
mov
add
push
add
dec
stos
add
add
cmc
add
pop
movsb
add
add
xor
add
and
pushl
add
inc
add
xchg
and
fstpt
lods
cmpsb
add
das
add
ljmp
lcall
div
inc
add
fwait
call
jecxz
ss
fbstp
sarb
add
mov
add
add
dec
arpl
incl
add
sub
add
mov
add
incl
add
es
add
sti
mov
add
mov
data16
cmp
mov
clc
add
add
jmp
add
jne
cld
mov
lods
xor
add
sub
add
jp
mov
loop
mov
and
jmp
jmp
add
scas
inc
add
decl
cmp
add
fwait
xchg
xlat
jae
fcompl
lods
sub
add
dec
fdivl
out
cmp
add
ret
fstpt
out
add
lcall
xlat
imul
mov
adc
fimull
or
add
mov
add
add
incl
add
cwtl
dec
cli
cwtl
cmp
add
mov
int
add
call
add
mov
add
jb
ljmp
adc
mov
enter
pop
imull
ljmp
jecxz
mov
lea
add
ret
jb
dec
stc
xlat
into
std
stos
dec
lahf
leave
sub
add
push
adc
dec
popl
sub
jle
add
jmp
jno
call
and
incl
add
outsb
in
dec
ret
sahf
push
lret
add
add
into
cmpsl
add
ljmp
add
decl
iret
and
call
std
loopne
nop
mov
mov
sbb
add
pushf
cmc
push
ret
imulb
in
inc
add
repnz
scas
sub
add
movb
jecxz
les
pushf
add
lcall
add
cmp
leave
pop
mov
mov
cli
mov
sbb
jecxz
test
dec
mov
leave
arpl
pushl
add
mov
add
mov
inc
add
sbb
imul
pushl
add
cmp
pushl
flds
scas
stos
sarb
aam
jecxz
inc
add
mov
sub
jp
adc
cmc
in
pusha
add
mov
add
incl
sub
lret
xor
call
jecxz
dec
test
add
ljmp
jnp
cltd
sbb
push
ds
add
mov
addl
test
loop
cs
xor
dec
xchg
push
pop
dec
movl
sbb
add
jp
cmpsl
add
insb
xlat
and
in
jo
jge
push
add
push
xchg
or
add
cmp
arpl
incl
ljmp
push
adc
pushl
add
add
mov
adc
ljmp
scas
shll
cmp
cld
scas
cmp
adc
incl
cmp
add
ljmp
sub
add
and
pushl
add
mov
add
xchg
sub
add
out
adc
ljmp
add
clc
clc
testb
dec
imul
mov
add
repz
outsl
mov
add
out
fwait
jmp
clc
loopne
xchg
or
decl
inc
add
add
add
ljmp
shl
add
add
cwtl
in
out
xor
decl
shll
xor
call
jl
addl
lcall
or
mov
and
lcall
iret
out
dec
ret
inc
add
add
and
push
mov
test
jp
inc
add
addl
add
add
add
lea
add
jno
ljmp
sbb
add
sbb
lods
mov
cld
pop
sub
or
out
addb
add
add
jmp
mov
add
and
and
jmp
lcall
fwait
cmp
pop
hlt
rolb
xor
adc
lcall
adc
mov
add
mov
mov
push
add
xchg
cwtl
nop
sbb
add
dec
push
add
ljmp
add
pop
test
dec
movl
xchg
dec
and
cmpsl
add
nop
addb
mov
pop
mov
add
adc
ljmp
jne
pusha
add
and
incl
mov
add
inc
add
sub
or
add
mov
add
ret
add
add
decl
clc
out
mov
stos
rolb
cli
and
incl
add
ds
mov
push
add
std
lea
add
jmp
add
in
inc
add
mov
adc
decl
or
add
add
arpl
dec
and
mov
cmp
mull
xor
ljmp
add
rolb
std
sbb
add
in
lret
mov
cmc
jl
xor
lcall
jae
dec
cmpsb
add
add
sbb
xchg
dec
inc
add
lea
add
cltd
and
cmp
mov
add
sbb
mov
cmp
imul
pusha
add
stos
xchg
pushf
scas
cmp
stos
pop
cmc
lahf
pushl
cmpsl
add
cmp
xor
decl
add
add
pop
inc
add
add
das
jo
lcall
add
repz
call
add
inc
add
add
push
test
imul
test
mov
xor
dec
cmpsl
add
lcall
xor
pushl
dec
xor
ljmp
fsubrl
sub
cmp
add
je
add
jecxz
lods
clc
inc
add
add
pop
push
leave
ret
add
add
insl
stc
dec
dec
xchg
dec
xchg
add
adc
xchg
mov
add
call
pop
enter
inc
add
pop
dec
push
xchg
jecxz
iret
dec
nop
pop
xchg
mov
clc
or
call
inc
add
repz
clc
xchg
cmpsl
add
add
add
jmp
add
ljmp
mov
lea
push
addl
out
jmp
das
cmpsb
add
add
jae
in
ficompl
add
loop
mov
cmp
call
decl
push
add
cmp
sub
add
or
add
xchg
cwtl
ds
push
add
mov
mov
stc
mov
add
add
add
sbb
jmp
push
add
lods
hlt
bound
jmp
in
jmp
dec
jno
pushl
test
jae
dec
test
dec
xchg
addl
mov
inc
add
add
push
sbb
xor
inc
add
sub
add
add
push
push
add
jae
pushl
xchg
idivb
jmp
add
xchg
mov
pushf
xor
ljmp
add
mov
mov
lret
int
add
add
pushl
mov
outsl
ret
add
add
mov
add
ljmp
mov
add
or
xlat
bound
fiaddl
add
fmuls
sub
push
add
mov
or
add
add
fmulp
mov
int3
sub
dec
in
rorl
mov
mov
add
add
decl
xor
push
ret
mov
lret
pop
add
add
bound
incl
jmp
add
mov
or
in
push
cmpsl
add
dec
mul
add
add
jbe
scas
data16
stos
push
add
xor
add
pop
xor
call
add
lcall
lahf
add
incl
add
fildll
sub
xlat
dec
cmp
add
sub
rolb
pop
testb
jmp
add
pop
xor
jmp
pop
jge
add
stos
notl
movl
add
dec
pop
pop
ja
xchg
arpl
out
imul
ficoms
lcall
mov
les
mov
lret
add
add
scas
lea
add
dec
fucomip
sbb
inc
add
push
add
insl
pushf
xchg
jne
jmp
xor
popa
add
popf
scas
cmp
pop
test
add
bound
jns
add
ljmp
and
lcall
xor
cmp
pop
addl
mov
add
jmp
add
pop
sar
fs
fstpl
pop
push
add
les
ret
add
add
add
sti
in
push
add
sbb
dec
mov
xchg
sahf
movl
add
lcall
add
inc
add
sbb
dec
out
fdivrs
popa
add
push
sbb
add
test
pop
imul
clc
xchg
lret
ss
mov
add
cmc
dec
lret
loopne
push
add
inc
add
scas
dec
pop
add
dec
std
enter
pop
loope
arpl
call
dec
arpl
jmp
int3
std
daa
add
add
add
push
mov
cs
jp
stos
call
mov
imul
add
sub
xchg
push
add
push
add
mov
push
mov
fdivp
xlat
jmp
jb
jmp
jecxz
add
add
fbld
add
jmp
add
add
roll
dec
mov
add
add
std
xor
add
test
outsl
add
fsubs
fs
add
out
in
icebp
add
dec
push
add
daa
add
add
sub
mov
clc
ficompl
fstl
mov
push
ljmp
jmp
add
adc
ljmp
dec
addl
cli
shrl
pushl
mov
call
lcall
jmp
add
jge
insb
jp
add
pop
xchg
test
push
add
adc
lcall
xchg
dec
cmovle
adc
ljmp
add
ja
lcall
mov
add
ljmp
fsub
add
out
push
cmovnp
and
jmp
add
stos
imul
call
movl
in
jmp
sub
add
or
movsb
add
mov
sar
sub
xchg
pop
cs
enter
addr16
or
add
int3
into
jle
cmp
add
mov
add
or
push
addb
test
fnop
sti
jnp
xchg
jno
dec
push
and
decl
inc
add
add
add
hlt
outsb
data16
add
add
jbe
bound
in
xor
mov
mov
outsb
inc
add
xchg
loope
lret
pop
cld
ret
push
jge
dec
mov
scas
out
gs
adc
ljmp
scas
shrl
pop
pusha
add
add
add
aaa
jne
dec
adc
add
pop
sbb
cmp
cmp
xchg
push
push
add
jle
and
ljmp
inc
add
decl
jmp
sahf
adc
cmp
add
and
jl
add
pop
sub
mov
dec
pusha
add
and
mov
or
enter
xor
decl
mov
dec
mov
pop
push
ljmp
jp
lret
cmp
dec
cwtl
popa
add
jecxz
ja
xchg
pop
add
sub
sarl
outsl
sti
jae
ljmp
add
lea
pop
fsubp
add
jae
pushl
cli
add
sti
xor
lcall
enter
dec
xchg
bound
incl
incl
jae
lcall
movb
add
pop
xchg
xchg
mov
add
xchg
dec
iret
ljmp
or
lret
ljmp
add
dec
stos
bound
jmp
add
lea
add
das
fcompl
add
mov
call
mov
add
add
mov
daa
add
push
mov
jbe
add
dec
fnstsw
incl
outsl
inc
add
mov
ljmp
mov
aas
inc
add
push
add
int3
imul
sahf
lods
out
or
or
jbe
add
xchg
pop
jnp
add
les
push
add
mov
add
pop
sub
ljmp
scas
mov
lods
adc
pushl
add
xchg
testl
cli
enter
add
aam
sub
bound
jmp
add
xor
jl
divb
jb
dec
cmp
call
jno
call
decl
add
movl
add
arpl
ljmp
icebp
test
movb
movsl
add
bound
pushl
aas
fnsave
add
out
lfs
test
xor
or
inc
add
sbb
add
add
mulb
jne
jecxz
mov
add
test
xor
jmp
pushl
add
add
movb
xor
add
push
movsb
add
roll
add
dec
dec
adc
add
inc
add
test
aas
jae
ljmp
or
test
sbb
or
addb
add
popf
mov
fdivl
add
inc
add
lret
data16
push
jle
pusha
add
mov
inc
add
ret
add
jg
push
xchg
movsb
add
add
out
mov
sbb
mov
test
push
inc
add
mov
mov
hlt
lock
add
jnp
add
stos
fimuls
xchg
insb
add
ljmp
movsl
add
pop
mov
adc
jmp
add
lods
xor
push
movsb
add
or
add
push
movl
pop
dec
jae
fidivrs
push
into
test
xchg
pop
adc
dec
or
stc
xor
pushl
add
mov
xor
pushl
add
test
mov
gs
mov
mov
cmp
push
add
xor
call
add
and
add
add
stc
cwtl
mov
stc
aad
add
add
outsl
xchg
clc
enter
add
add
lock
mov
lcall
add
add
add
add
sti
xchg
inc
add
cmp
add
dec
rcrl
lods
out
dec
xchg
mov
fnsave
cmp
add
rcrb
add
xchg
add
jo
jp
add
xor
decl
xchg
sub
pushl
adc
ljmp
xchg
dec
jmp
or
dec
hlt
mulb
xor
outsb
sub
xchg
jbe
add
nop
adc
decl
add
push
imul
das
popf
mov
pop
and
add
loop
adc
ljmp
and
jmp
mov
add
loopne
cmp
addb
add
and
and
ljmp
pop
add
dec
int3
jmp
add
pop
pop
mov
jo
pushl
out
sub
insb
xchg
push
add
inc
add
mov
data16
jbe
add
loopne
and
call
rolb
ljmp
add
xor
jmp
in
mov
cmpsb
add
xor
int3
lcall
add
inc
add
repz
xlat
std
xor
lcall
lret
aam
add
es
and
ljmp
data16
mov
inc
add
fildll
stos
or
add
call
or
fdivrl
push
add
movsb
add
hlt
rcrb
pop
add
add
fsub
add
add
or
aaa
mov
or
jle
test
cld
xor
lcall
add
and
js,pn
mov
stos
jecxz
lds
mov
movsb
add
decl
sbb
mov
ret
add
mov
pop
aas
lds
roll
mov
rep
adc
ffreep
add
add
outsl
xchg
pop
addl
add
lcall
add
pushf
out
xchg
mov
mov
call
add
push
add
repz
and
cmp
sub
add
add
mov
add
mov
add
scas
sbb
add
mov
dec
xchg
sbb
add
add
popa
add
ja
cmc
sarl
add
icebp
aam
add
fstpt
cmp
cmp
add
lods
call
loopne
mov
add
and
pushl
loope
xchg
push
add
sbb
and
repz
out
mov
add
xchg
dec
fldl
push
jo
call
sbb
ja
add
roll
add
lcall
fdecstp
add
xchg
insl
or
call
call
pop
addr16
add
das
aad
mov
sub
adc
ljmp
xchg
inc
add
xchg
xor
call
add
push
ret
add
add
clc
nop
sbb
mov
in
or
add
add
decl
pop
movb
cwtl
nop
jp
rolb
xor
incl
insb
outsl
insl
cmc
addb
push
fdivrl
je
and
pushl
push
inc
add
cmpsb
add
add
pushl
roll
add
mov
mov
add
jle
and
outsb
es
push
push
add
aad
mov
add
pop
je
lods
sbb
add
mov
fwait
and
test
add
addr16
aaa
fcomp
rolb
add
pop
mov
icebp
xchg
xchg
sub
inc
add
add
mov
add
je
addl
sbb
add
cwtl
push
pop
fwait
loopne
pusha
add
mov
add
add
add
lcall
scas
and
lods
xchg
inc
add
incl
les
test
out
push
and
mov
cs
jl
outsl
test
mov
push
add
sub
cwtl
pop
movb
bound
jmp
xchg
and
dec
mov
jmp
bound
lcall
add
cmp
and
aaa
in
mov
xor
jge
ja
js
push
add
sbb
add
movsl
add
add
inc
add
xchg
aam
add
jne
inc
add
add
or
les
aaa
push
add
push
xchg
fiadds
fsubl
ljmp
push
add
daa
add
mov
mov
leave
xlat
mov
addl
add
adc
decl
add
jmp
add
dec
test
xchg
mov
push
add
mov
add
mov
jo
fisttpll
hlt
sti
pop
cmp
add
and
enter
jp
lock
cmp
sbb
mov
mov
roll
mov
add
popa
add
push
loopne
loopne
push
lret
sub
call
jmp
add
adc
lcall
mov
add
add
adc
imul
fwait
pop
sbb
push
mov
add
jecxz
dec
icebp
jecxz
mov
or
std
addl
lods
mov
adc
add
mov
add
push
cltd
loop
cmpsl
add
decl
mov
mov
or
mov
jp
cltd
cmp
mov
lock
xor
fistpl
lds
sbb
add
add
push
fisttpl
sbb
call
add
jmp
lret
add
xchg
push
add
lret
mov
add
jb
incl
ljmp
pop
ret
add
into
cltd
or
repz
and
filds
lcall
jecxz
fcomip
jl
sub
xor
incl
add
fmuls
inc
add
sbb
mov
jmp
xor
pushl
add
add
add
ljmp
xchg
call
fcomps
loopne
and
insb
or
js
add
jnp
test
dec
mov
in
sub
fstpl
pop
lret
out
iret
test
ret
add
lcall
incl
add
inc
add
push
in
add
dec
dec
lods
divl
add
xor
jmp
decl
pop
rep
mov
mov
cmp
jnp
clc
jge
or
call
add
outsl
lds
mov
call
add
mov
add
add
xchg
jae
sti
ret
add
add
movl
add
xchg
jb
call
insb
fcoml
popf
scas
paddw
add
test
sub
cmp
std
add
sub
xchg
sub
addl
bound
ljmp
push
or
pop
mov
in
lahf
stc
aaa
or
add
hlt
sub
cmp
bound
inc
add
add
add
dec
iret
mov
push
add
aas
mov
add
jno
lcall
idivl
sub
add
xor
incl
mov
movsb
add
js
add
xchg
std
stos
or
push
jecxz
add
in
lret
out
mov
push
sub
add
push
daa
add
add
dec
xchg
fcmovnbe
inc
add
xor
out
mov
push
out
lret
cmp
mov
cmp
test
fs
xor
mov
adc
add
adc
pushl
add
sti
mov
dec
test
mov
add
add
jo
pushl
push
add
add
ficompl
mov
leave
pop
and
js
out
lods
test
inc
add
pop
dec
pop
repnz
add
cmp
mov
pop
push
mov
cmp
lea
incl
ficoml
add
push
in
outsl
push
pop
out
aas
lock
add
add
cld
xchg
pop
dec
icebp
clc
add
add
or
decl
in
mov
ja
add
mov
inc
add
or
xchg
pop
mov
iret
sbb
add
adc
add
insl
inc
add
sbb
jb
fdivrs
xor
jmp
add
add
xor
fists
inc
add
mov
imul
push
add
mov
mov
lds
ljmp
inc
add
imul
ljmp
movb
fs
adc
push
out
adc
add
lahf
add
push
dec
and
repnz
out
fldcw
fidivs
add
sbb
inc
add
movsb
add
add
push
icebp
test
mov
mov
addr16
xchg
pop
add
jmp
fisttpl
lahf
jne
add
loope
stos
push
add
sub
out
add
out
add
pop
add
les
ja
dec
pop
add
mov
xlat
addb
cmp
pusha
add
or
sub
fiadds
ret
add
nop
pusha
add
xor
fcoml
js
sbb
inc
add
mov
add
jb
decl
add
jp
add
push
add
add
lcall
add
testb
addb
imul
or
add
sbb
mov
add
add
xor
decl
cmp
add
add
out
or
ret
add
aas
loope
lcall
add
roll
xor
ljmp
aas
mov
add
inc
add
lret
jo
dec
or
dec
daa
add
add
and
decl
loopne
fistl
lods
cmp
fnstenv
or
mov
add
jno
push
xor
inc
add
jo
pushl
mov
les
imul
sbb
add
cmp
add
in
das
insb
int
mov
add
sbb
dec
adc
call
stos
add
adc
ljmp
xlat
dec
add
mov
push
enter
jmp
stos
lock
lods
push
mov
pop
enter
add
add
jns
add
cmp
add
push
add
or
adc
pushl
inc
add
into
daa
add
loop
jns
jle
mov
inc
add
add
jno
jmp
add
add
stos
sti
nop
push
add
dec
in
add
cs
inc
add
adc
incl
dec
mov
loop
and
decl
add
sbb
jmp
add
xchg
and
or
add
inc
add
add
mov
add
add
call
inc
add
dec
dec
out
out
add
mov
mov
cltd
cltd
cmp
sub
add
lcall
add
add
add
lret
std
jnp
and
jmp
add
mov
add
add
out
xor
ljmp
add
mov
dec
out
outsb
fdivrp
out
addb
add
into
or
mov
sti
xchg
pop
mov
inc
add
pop
add
je
inc
add
test
cmp
sub
push
add
insb
add
decl
push
movsb
add
add
mov
ljmp
add
add
scas
in
scas
aas
lret
add
push
add
jnp
lret
xor
call
lcall
add
adc
cmp
cmp
add
mov
add
movsb
add
dec
or
out
loop
in
rolb
or
aaa
outsl
in
sbb
add
mov
add
inc
add
add
jg
add
ljmp
stc
mov
mov
adc
lcall
add
mov
pop
adc
data16
call
add
nop
mov
add
jmp
add
add
mov
add
push
inc
add
ja
jp
sbb
addb
add
add
jns
add
mov
add
add
mov
pushf
push
push
add
movsl
add
add
cld
int
add
mov
add
or
mov
mov
add
mov
or
cld
mov
out
aaa
mov
mov
add
arpl
jmp
add
jmp
add
add
xchg
jg
add
sbb
add
addb
fisubrs
lods
push
lahf
mov
add
sbb
ja
pop
mov
hlt
cld
addl
add
and
lcall
addl
add
push
test
pop
inc
add
add
xchg
inc
add
xor
call
add
add
out
shr
push
mov
inc
add
ret
add
call
pop
jle
adc
call
mov
dec
incl
add
mov
push
jb
mov
add
mov
shl
add
add
adc
pushl
mov
add
aaa
scas
xor
mov
push
addb
mov
popl
fdiv
add
loope
inc
add
std
sarb
ljmp
dec
jns
xor
call
loopne
loope
sbb
outsl
cmp
mov
dec
ljmp
mov
pop
adc
jmp
add
add
add
stc
mov
or
mov
popf
int3
or
mov
pushl
shrb
add
pop
daa
add
std
inc
add
push
cmp
jmp
add
iret
mov
add
add
push
jg
add
sbb
mov
clc
ja
aas
ret
add
add
cwtl
notl
pop
leave
pusha
add
pop
data16
jl
push
add
mov
xchg
stos
and
mov
dec
or
push
data16
add
pop
add
add
inc
add
movl
jo
jmp
add
lock
add
incl
add
mov
add
out
push
add
jg
mov
ret
add
or
addb
aaa
jae
pushl
rcr
mov
xchg
jp
xor
inc
add
stos
movb
test
add
rcll
mov
movsb
add
add
movl
add
addb
jne
or
pop
aaa
pushf
pop
inc
add
out
addl
adc
mov
add
adc
out
ja
push
lods
mov
add
out
add
call
std
aas
test
mov
call
add
jns
dec
addb
add
add
push
or
clc
lds
pop
inc
add
add
sbb
cmp
add
add
sub
or
mov
xor
call
cmp
jns
jle
popa
add
popa
add
adc
add
pushl
ljmp
add
test
cs
add
mov
inc
add
shlb
add
mov
aas
pop
add
decl
pushf
mov
add
hlt
xor
decl
ja
cmp
add
add
bound
jmp
add
hlt
mov
mov
lock
add
jns
enter
push
sbb
adc
jmp
add
add
push
add
pop
addb
add
and
decl
mov
lods
in
jmp
inc
add
call
mov
add
pushl
jns
scas
ja
int3
pop
call
int
cltd
das
lret
mov
stos
mov
add
mov
sub
movsl
add
addl
inc
add
add
test
mov
sub
ret
add
dec
add
rolb
add
mov
incl
add
clc
out
out
xchg
std
setne
mov
add
icebp
xchg
sub
add
adc
lcall
pusha
add
mov
push
add
xor
jecxz
push
add
pop
add
ljmp
add
lcall
and
incl
add
iret
lea
add
add
jmp
mov
add
add
add
std
loopne
pop
je
add
sbb
add
push
js
leave
adc
incl
adc
call
lcall
ljmp
push
xchg
pop
add
add
xchg
add
cltd
dec
mov
add
enter
add
add
out
push
pop
mov
imul
ljmp
arpl
decl
stc
sbb
repz
add
add
sub
loopne
movl
out
mov
add
scas
loope
out
lahf
jbe
inc
add
jle
outsb
mov
pop
and
decl
xchg
aad
add
pop
lds
xchg
add
rcll
dec
pop
enter
add
xor
dec
les
negb
add
add
in
clc
lcall
add
fdivrs
or
add
sbb
movsl
add
mov
add
add
incl
lcall
repz
add
pusha
add
addl
add
jmp
inc
add
inc
add
pop
faddl
add
mov
add
add
fistpll
add
jmp
add
add
pop
ret
add
mov
add
mov
add
incl
add
std
or
add
outsl
lea
add
sbb
mov
inc
add
mov
cmp
lods
mov
in
pop
add
rolb
gs
add
adc
jl
add
imul
daa
add
add
mov
xor
call
add
call
incl
add
fst
mov
out
push
push
and
mov
add
push
add
cli
xchg
sbb
jmp
add
ljmp
jbe
add
sbb
jl
xchg
add
mov
out
and
decl
add
add
add
int3
cmp
sbb
add
pushl
xor
js
add
outsb
stos
call
add
jmp
xchg
mov
cltd
mov
fldt
outsb
adc
mov
add
cmpsl
add
call
add
dec
jb
pushl
add
adc
incl
aas
nop
pushf
ftst
add
dec
cmp
test
mov
inc
add
xchg
jns
roll
xchg
test
lea
repnz
lcall
bound
jmp
add
fstpl
add
sbb
mov
add
rcr
add
call
aaa
push
in
xchg
addb
fmuls
mov
mov
add
movl
xchg
pop
dec
cmp
add
jmp
addl
add
and
incl
push
push
shl
hlt
or
lret
add
mov
aam
dec
mov
or
dec
mov
inc
add
adc
pushl
lret
mov
pusha
add
inc
add
lret
stc
and
inc
add
addb
out
mov
add
mov
roll
add
add
push
add
mov
mov
ja
push
add
in
sahf
fadd
add
push
in
cmp
mov
add
add
scas
jmp
add
jmp
push
pop
xchg
call
or
sti
clc
sub
and
or
incl
ret
add
sahf
mov
stos
adc
adc
incl
jno
incl
add
lcall
add
cmp
mov
sbb
add
sub
notl
add
test
mov
add
lods
and
jmp
arpl
jmp
jl
add
cli
pop
les
stc
jmp
lea
add
loop
dec
dec
ret
add
add
add
roll
add
inc
add
mov
add
jno
incl
lcall
xchg
lods
mov
popa
add
pop
test
xchg
addl
inc
add
imul
add
dec
pop
mov
add
addb
push
add
jae
pushl
lcall
rcr
xchg
gs
and
mov
or
or
jecxz
dec
cmp
push
add
add
pop
mov
add
mov
add
mov
inc
add
pop
ja
jne
movb
pusha
add
jl
add
xchg
push
js
pop
push
add
and
ljmp
scas
jno
js
add
insb
push
add
bound
jmp
add
sarb
xor
jp
and
jmp
fstp
or
jp
lds
aas
push
add
add
call
in
out
in
cwtl
ja
xchg
loopne
push
add
cmp
sbb
add
fidivs
ljmp
sbb
lds
xchg
setno
add
ljmp
adc
ret
mov
mov
pop
sub
lea
add
jp
add
cmpsl
add
xchg
je
add
ljmp
lods
cltd
mov
or
add
fistps
ljmp
cmp
lcall
addb
pop
and
ljmp
out
test
out
jae
incl
push
bound
jmp
add
add
in
fimuls
ret
add
incl
sub
add
jmp
repz
ljmp
mov
mov
ljmp
pop
xchg
mov
add
pop
pop
add
cmc
lahf
out
psllq
jmp
add
rolb
mov
arpl
call
add
add
pushl
add
add
out
test
pop
mov
mov
sar
nop
repz
jo
pushl
add
pop
out
insl
adc
incl
jmp
mov
push
xor
add
add
dec
arpl
jle
pop
fisttps
add
jmp
push
mov
mov
scas
outsb
mov
push
sub
add
add
add
jle
add
movsb
add
inc
add
xor
pushl
add
lds
mov
cmc
mov
leave
lret
ja
mov
xlat
pop
cs
add
push
bound
decl
add
jp
add
add
je
out
pusha
add
mov
add
in
arpl
clc
xchg
dec
addl
add
cmp
add
jae
jmp
add
pop
xchg
inc
add
out
add
decl
add
mov
add
xor
decl
mov
ljmp
cmc
add
push
jno
call
sbb
ds
mov
call
dec
mov
jle
dec
add
fimuls
mov
test
jno
jmp
dec
addl
add
adc
add
jae
jmp
aas
test
adc
mov
and
pushl
ljmp
movsl
add
pop
xlat
and
lcall
rclb
add
test
mov
test
cs
pop
pusha
add
movb
jg
add
jmp
lcall
add
fisubl
lcall
dec
jb
mov
out
push
mov
mov
mov
add
add
movl
add
pop
xchg
fcoml
mov
adc
stc
aam
jb
out
mov
cmp
add
jno
jg
add
add
push
mov
dec
jecxz
addb
add
dec
call
into
xchg
dec
stos
cmp
add
lcall
add
stos
cmp
outsl
push
xchg
xor
incl
incl
pushl
jbe
add
xchg
movl
add
sub
inc
add
cmc
lea
mov
sub
add
loop
add
jmp
insl
jb
lcall
decl
in
inc
add
movb
cwtl
ljmp
lods
xor
ljmp
adc
sub
add
dec
xor
fidivrs
enter
leave
push
add
mov
push
in
xchg
aam
push
add
dec
and
xlat
les
mov
jb
ljmp
dec
mov
fucomip
pop
pop
xor
pushl
cmpsb
add
jae
cmp
push
imul
add
add
movl
test
ljmp
cmpsl
add
inc
add
mov
add
add
rolb
push
ret
add
sbb
cmp
and
pushl
dec
cmc
scas
push
add
test
mov
add
loop
mov
jmp
lcall
jp
icebp
insl
cmp
mov
mov
jmp
mov
add
mov
adc
pushl
dec
xchg
mov
add
mov
xor
push
fwait
mov
outsl
bound
jle
lret
xor
add
add
push
outsb
lahf
loopne
cmp
add
cli
mov
addb
add
mov
ret
add
sbb
in
jbe
aas
and
add
mov
jb
decl
fs
movsl
add
push
add
incl
cltd
mov
out
sbb
mov
out
sahf
loope
stc
or
nop
pop
outsl
mov
dec
ds
dec
fists
add
filds
add
add
movb
jmp
adc
dec
cmc
cld
jns
insl
cmp
and
decl
add
movb
into
movb
add
add
sbb
add
fidivrl
out
out
adc
inc
add
adc
ljmp
xchg
jmp
pusha
add
in
dec
dec
sbb
in
lods
bound
decl
dec
sub
push
pop
xchg
jbe
add
out
clc
push
add
loope
imul
add
mov
dec
sub
incl
decl
add
jmp
popf
data16
stc
outsb
mov
add
add
in
mov
add
add
mov
mov
dec
out
dec
push
adc
decl
add
inc
add
mov
add
add
arpl
lcall
add
addl
add
data16
cltd
out
xor
call
push
xchg
jb
pushl
add
add
add
leave
in
fs
cwtl
xchg
cmp
and
lcall
add
lret
addl
add
add
jo
fldl
add
ret
add
add
cmp
lods
inc
add
and
incl
call
addl
aas
stos
jecxz
mov
stos
popf
lcall
les
or
jno
call
mov
pop
cltd
std
xchg
scas
push
movsl
add
jmp
lret
scas
add
inc
add
roll
add
jl
mov
add
fmuls
add
jmp
inc
add
add
sub
int
cmp
xor
ljmp
add
xor
jmp
sbb
cmp
add
adc
jmp
lcall
cmp
dec
call
xlat
call
repz
into
and
lcall
or
inc
add
add
jecxz
mov
add
addb
rorb
add
add
jp
mov
add
and
fldt
jle
jno
lcall
cltd
push
add
lea
add
and
jmp
xchg
push
mov
out
addb
add
add
add
mov
xor
call
add
jns
cld
and
incl
js
xor
incl
scas
inc
add
push
add
ljmp
scas
xchg
push
iret
ljmp
test
and
outsb
push
add
xor
call
daa
add
xchg
xchg
mov
sub
add
and
ljmp
add
cmp
sahf
addl
mov
insb
add
decl
add
hlt
sub
stos
roll
add
adc
decl
add
mov
xlat
sbb
iret
incb
add
inc
add
lods
and
dec
pop
scas
das
push
add
pop
cmpsb
add
jp
add
addl
xor
cmp
add
push
add
and
ljmp
cltd
xor
call
cmp
mov
ret
add
add
js
loop
loopne
and
pushl
scas
out
or
pop
popa
add
or
add
call
cmpsb
add
mov
inc
add
xchg
sbb
out
jno
incb
add
dec
roll
xor
ljmp
add
sbb
jl
xor
pushl
dec
cmp
pop
inc
add
fldl
mov
push
add
add
cltd
sbb
add
push
pushl
add
cld
fsub
add
cmp
addl
js
mov
add
int
rorl
cmp
add
inc
add
jo
incl
add
ret
add
icebp
std
ret
add
negl
leave
lahf
cmp
les
jg
lods
in
outsb
pop
sbb
call
add
add
lcall
add
mov
decl
stos
icebp
movsl
add
add
xor
lcall
and
jl
test
outsl
data16
mov
add
call
add
push
add
sbb
mov
jl
scas
or
es
pop
in
outsl
lcall
add
shll
les
das
xchg
sti
es
add
jle
sub
add
dec
mov
ja
push
test
iret
scas
or
jb
lcall
lcall
js
stos
or
add
fmull
mov
cmc
jp
add
leave
jle
add
dec
mov
std
xlat
leave
push
add
ljmp
mov
decl
add
add
popl
add
addb
add
cmp
push
mov
fldenv
add
xchg
dec
adc
call
dec
repnz
lret
rep
mov
cmp
dec
or
addb
dec
add
mov
add
jge
jns
sub
dec
rolb
test
movsl
add
loopne
inc
add
in
inc
add
jb
call
addb
or
add
dec
push
inc
add
fnstsw
add
mov
and
out
pop
add
jmp
add
cld
mov
cmpsb
add
mov
add
xlat
push
add
pop
inc
add
fcomps
stc
lds
xor
incl
mov
je
add
xchg
push
add
lea
add
rclb
insl
out
das
lahf
xor
jle
add
stc
push
add
pop
out
dec
stos
insb
mov
inc
add
jp
add
add
loope
sbb
sub
add
cld
jne
add
and
cli
xchg
jg
or
add
xchg
mov
jmp
cmc
out
scas
push
pop
dec
sbb
fistpll
call
nop
sarl
jecxz
aad
fistpl
into
jb
decl
out
out
jne
jecxz
pop
mov
cmpsb
add
dec
getsec
xchg
mov
cmp
add
and
incl
call
test
in
push
add
add
addl
sub
add
add
in
push
add
les
mov
add
cltd
add
incl
add
into
ss
cld
xchg
popa
add
int
cmp
stos
sbb
add
jge
jmp
add
mov
ljmp
lahf
xor
adc
call
insl
xor
sbb
pop
add
mov
mov
add
inc
add
sub
sbb
mov
icebp
xchg
inc
add
mov
and
mov
xchg
or
mov
imul
add
mov
scas
test
leave
aas
inc
add
jmp
sbb
add
add
stc
add
decl
add
jns
cwtl
ja
test
and
aas
add
in
in
leave
xchg
pop
dec
movsl
add
push
lods
aad
add
lock
dec
mov
addb
add
test
add
ret
add
add
sub
scas
adc
dec
fwait
cmp
add
jno
fistpl
sbb
enter
add
cs
lret
mov
ljmp
xor
add
out
cmp
add
fimull
add
leave
je
add
das
sbb
stos
or
mov
roll
jg
rorb
incl
add
xchg
jmp
add
sbb
call
mov
or
or
add
lcall
arpl
decl
mov
rolb
add
mov
dec
fstps
mov
inc
add
add
arpl
decl
lcall
mov
pop
mov
fsts
fildl
out
dec
addb
pop
test
push
negb
add
mov
xlat
insb
pop
outsl
clc
rcr
cmp
cmp
mov
add
dec
fwait
add
lcall
jns
add
add
sbb
add
outsl
ja
into
mov
add
aaa
push
pop
movsb
add
add
push
int
or
les
lret
lret
and
jmp
jae
jmp
add
add
push
je
adc
add
jo
jmp
ljmp
xchg
xchg
xchg
ss
add
and
call
and
jns
ss
add
in
adc
pushl
sub
add
cmp
incl
add
insb
xor
decl
add
bound
ljmp
roll
add
shll
add
stc
loope
pop
cmp
aam
jge
jg
jg
inc
add
inc
add
fwait
cmpsb
add
outsb
fs
add
and
mov
add
leave
ds
cld
hlt
ficompl
sub
pop
mov
addb
popf
repz
xor
pushl
incl
test
pushl
cmp
jb
jmp
dec
push
add
je
add
incl
les
add
jne
es
add
jns
rolb
neg
fdivs
add
cmp
add
call
cltd
pusha
add
mov
call
lcall
and
push
cmc
out
jo
incl
decl
incl
shrb
data16
js
add
sub
add
mov
fldcw
add
nop
xor
decl
add
add
stos
roll
push
add
fsts
xor
dec
in
mov
sub
clc
or
jb
pushl
add
test
pop
pop
add
mov
sbb
xor
jmp
addl
movb
adc
inc
add
add
add
incl
add
lods
pop
mov
xor
push
sbb
in
icebp
sti
mov
add
add
inc
add
cmp
je
fmull
out
roll
and
call
pushl
add
outsb
add
mov
jmp
mov
test
push
out
mov
push
add
push
add
inc
add
ret
add
or
jle
int
xchg
dec
jge
add
add
jmp
xchg
jg
and
decl
roll
add
mov
add
add
inc
add
movb
in
sti
push
test
add
mov
pop
cmp
mov
das
cmp
add
pop
loope
pusha
add
in
jns
out
mov
add
mov
jl
out
mov
lds
pop
lds
cltd
mov
dec
pop
pop
lock
jno
lcall
xchg
xor
in
addl
add
or
dec
adc
inc
add
cmp
je
add
add
mov
add
cmpsl
add
mov
jp
ror
add
add
push
data16
fadd
add
stc
xor
ljmp
jbe
test
xchg
cltd
pop
add
xlat
xchg
push
loop
mov
ud1
pushl
lcall
shl
add
push
add
addl
add
daa
add
dec
dec
mov
jle
insl
mov
add
in
fdivr
arpl
ljmp
or
pop
inc
add
in
movsb
add
add
mov
cmp
or
fdivs
add
add
mov
mov
add
sti
xor
call
lret
add
insl
and
call
loop
adc
jmp
mov
sbb
fmulp
push
cmp
jmp
add
mov
jle
jns
add
jo
inc
add
add
dec
mov
push
jno
pushl
add
rolb
add
jnp
add
jne
add
push
loop
or
mov
cmp
out
cs
shufps
in
and
push
lods
jno
dec
out
outsb
loopne
cmp
mov
call
add
mov
jne
add
add
jne
js
rolb
sub
cmp
add
loope
dec
test
or
jmp
and
call
loop
sahf
ss
add
cmp
in
cltd
clc
xchg
dec
sub
in
cmpsb
add
stos
and
add
xchg
jle
add
inc
add
mov
repz
jmp
add
movsl
add
loope
das
adc
incl
call
add
movsl
add
movsb
add
inc
add
or
or
add
adc
jmp
add
pop
sub
lds
and
push
push
daa
add
stos
test
cmpsl
add
loope
sub
call
add
call
and
push
add
push
idivb
addl
mov
add
xchg
lret
xor
call
inc
add
xor
clc
lcall
add
inc
add
push
jp
add
aas
cwtl
xchg
ja
jle
test
add
mov
mov
add
ret
lahf
adc
jmp
pusha
add
imul
idivl
fistpll
fnstenv
cmpsb
add
dec
add
lcall
lds
jge
icebp
add
cmpsl
add
jmp
out
insl
in
movsl
add
inc
add
incl
add
and
push
mov
mov
cli
sub
add
mov
jmp
add
jp
les
mov
pop
jg
stos
lahf
mov
add
add
into
outsb
inc
add
mov
stos
sbb
leave
sbb
push
add
cmp
sub
cmp
addr16
add
addl
add
mov
outsl
push
cmp
repnz
add
push
int
add
sub
dec
bound
decl
add
cmp
add
mov
add
out
mov
leave
cltd
dec
sbb
add
jle
push
mov
bound
mov
dec
in
stc
cmp
jne
and
mov
add
add
mov
push
add
das
fildll
xchg
imul
add
or
add
add
addr16
mov
rorb
addb
mov
add
lods
mov
and
cld
pop
aad
pop
and
pop
imul
decl
sub
xor
call
jmp
add
jle
and
lcall
fstl
adc
roll
sub
add
ror
inc
add
mov
add
push
add
xchg
cld
add
dec
cmp
add
rcl
mov
addl
add
movsb
add
add
jmp
add
scas
push
sbb
ds
pop
jnp
add
add
movsb
add
idivb
inc
add
cmpsl
add
add
pop
add
jmp
add
mov
in
mov
and
lcall
and
fistl
lea
addb
jo
decl
je
xchg
dec
cmp
call
loopne
out
aaa
mov
movsl
add
add
loop
iret
or
decl
mov
test
enter
sub
jae
fcmovu
data16
add
addl
les
data16
xchg
lahf
fidivrl
add
clc
in
imulb
push
add
je
xchg
ljmp
lcall
mov
sub
sub
sbb
pusha
add
cli
xor
incl
add
inc
add
cmpsl
add
test
add
add
or
rolb
jnp
sub
pop
ret
add
cmp
lret
xchg
sbb
femms
fbstp
xchg
loope
sub
push
clc
stc
stos
ret
add
mov
add
mov
add
mov
inc
add
add
pusha
add
fwait
sbb
insl
jle
js
add
push
arpl
call
pusha
add
jmp
adc
call
inc
add
daa
add
add
mov
add
add
fimull
jo
ljmp
add
and
lcall
adc
pushl
add
sti
repnz
in
js
xchg
stos
fwait
pop
addr16
add
popf
insl
mov
mov
pop
int3
ret
add
add
pushl
inc
add
mov
jmp
add
sub
jns
add
xor
jp
dec
inc
add
dec
xchg
add
call
jle
add
popa
add
aaa
mov
add
add
addl
idivl
lods
mov
add
mov
push
add
decl
add
add
decl
mov
or
scas
mov
loopne
roll
cs
dec
sahf
insb
jnp
movb
add
add
neg
mov
add
push
rolb
add
push
test
fcompl
add
xchg
adc
pushl
test
in
mov
add
addb
aad
icebp
jb
lcall
fidivl
lcall
sub
add
pushf
mov
xor
lcall
mov
add
icebp
inc
add
add
mov
pop
add
incl
lret
sub
add
add
push
add
mov
add
add
dec
das
rcr
stos
mov
aad
dec
mov
add
mov
shr
cld
adc
pushl
add
lahf
jb
pushl
bound
call
ret
ja
add
stos
cmpsl
add
add
mov
add
pushl
jno
fistpl
ffreep
add
jge
cltd
and
out
mov
add
push
loopne
addl
jb
jmp
add
pcmpgtb
sbb
add
add
add
pop
inc
add
pcmpgtd
xor
mov
mov
add
jge
add
add
add
enter
add
cmp
ljmp
movb
nop
sbb
add
add
push
add
add
call
add
leave
and
decl
mov
cwtl
sub
fsubr
pop
mov
and
dec
aaa
roll
add
dec
sbb
and
ljmp
add
movsb
add
add
incl
decl
add
inc
add
pop
mov
and
call
add
das
pop
cwtl
lods
sub
add
inc
add
inc
add
mov
add
dec
add
sub
add
pop
call
add
iret
jmp
add
add
add
imul
ljmp
xlat
es
lahf
faddl
mov
ficoml
xchg
in
imul
out
inc
add
loop
rep
aaa
cwtl
xlat
pop
push
add
or
add
sti
rolb
add
add
add
add
push
add
push
mov
call
sub
mov
ljmp
insb
mov
scas
add
add
add
das
sbb
sub
add
add
jns
cmp
adc
call
add
inc
add
test
repz
dec
stos
out
in
xor
add
add
mov
lret
xor
jmp
xor
decl
in
in
add
call
lods
pop
cmp
adc
call
add
push
add
jmp
mov
and
cmp
pushl
incl
add
jp
pushf
add
add
lock
ljmp
roll
xor
cli
mov
or
add
mov
rolb
add
or
lods
dec
scas
cld
mov
sbb
add
mov
inc
add
call
add
stos
or
add
add
sbb
dec
sbb
inc
add
sbb
add
adc
ljmp
fs
mov
mov
and
push
xor
dec
xchg
dec
cmc
movl
mov
fnsave
add
pop
insl
into
bound
cmp
cmp
add
nop
ja
add
push
add
scas
out
outsl
sub
sarl
add
or
stos
idivl
add
pop
or
aas
cwtl
sbb
lock
add
pop
sbb
pop
insl
scas
add
ljmp
add
roll
data16
call
add
call
decl
popf
shlb
daa
add
add
movsb
add
sub
imul
add
and
push
or
xchg
fldcw
add
cmpsl
add
icebp
je
pop
lds
adc
jmp
add
outsl
dec
enter
mov
add
pop
loope
lret
dec
data16
jae
incl
push
add
inc
add
push
add
jecxz
addl
inc
add
roll
add
jno
push
cmc
mov
add
mov
add
call
xor
fmul
jmp
inc
add
push
add
sti
xor
decl
test
imull
mov
call
pop
pop
push
movsl
add
movsl
add
add
jge
das
jg
jl
pushf
lods
lret
jmp
shrb
inc
add
dec
iret
idivb
push
add
cld
add
add
insb
popl
add
sahf
stc
or
add
int
sub
jmp
add
call
or
mov
invd
xchg
jecxz
mov
sbb
ds
add
movsl
add
add
fcomps
add
sub
add
pusha
add
daa
add
add
add
icebp
cmpsb
add
movl
lcall
inc
add
rorl
frstor
add
pop
jmp
pop
adc
stc
xchg
out
js
scas
push
add
add
ljmp
incl
lods
out
sub
enter
cwtl
into
loop
cld
stos
inc
add
xchg
test
push
cmp
adc
and
sbb
mov
add
mov
popa
add
das
xrelease
addl
dec
mov
jo
jmp
add
add
test
insl
xor
jmp
add
call
fildl
mov
add
lcall
inc
add
jmp
mov
addb
cltd
movl
test
pop
inc
add
lret
out
xor
jnp
stos
or
movsb
add
xchg
jl
add
push
add
add
mov
add
jo
std
imul
and
sti
and
jmp
add
add
or
push
add
push
mov
push
fs
movl
jmp
add
add
jl
xor
jne
push
sbb
leave
inc
add
iret
jb
jmp
add
add
cmc
or
mov
pop
push
sti
outsl
rolb
add
mov
pop
jno
ljmp
add
jne
das
pushf
pop
adc
jmp
add
incl
push
pushf
test
test
add
ljmp
mov
pop
addb
add
add
lock
lcall
adc
fmul
roll
add
dec
hlt
dec
jecxz
scas
jg
add
fbstp
pushl
push
add
jnp
add
js
jae
pushl
lds
add
test
cs
mov
incl
jmp
add
call
add
out
lcall
decl
sub
push
dec
xchg
push
add
lcall
add
mov
jmp
fwait
inc
add
pop
mulb
add
das
mov
add
add
sub
fstl
incl
pushl
add
cmp
add
and
call
movb
gs
inc
add
popa
add
and
adc
call
decl
decl
fidivrl
dec
push
add
nop
mov
movl
hlt
cmp
add
mov
decl
jmp
add
add
jnp
lock
cs
std
icebp
mov
inc
add
lds
roll
add
add
add
add
ja
push
add
data16
cld
sub
adc
dec
add
jmp
add
add
and
pushl
xor
mov
pop
ficomps
add
dec
cmp
cwtl
rolb
add
sti
mov
add
call
add
fiaddl
add
lods
xchg
jne
add
xchg
es
add
push
add
bound
ljmp
pop
inc
add
pop
mov
cmp
aad
add
stc
or
add
inc
add
add
add
pushl
cmp
jae
cli
addl
adc
decl
jae
call
scas
cmp
xchg
jecxz
out
sub
fdivrl
xchg
pop
jae
incl
add
mov
pop
iret
stos
cmpsb
add
xor
incl
add
cmp
add
jmp
add
movsb
add
addr16
pop
mov
add
pushl
clc
sub
add
insb
mov
call
leave
sub
pop
add
lahf
mov
add
inc
add
push
add
lret
add
push
iret
out
fwait
adc
incl
pushf
xchg
cs
add
push
jge
pop
mov
add
xchg
xor
inc
add
add
ja
push
cwtl
test
dec
jmp
ret
xchg
lock
sti
hlt
lret
push
add
sub
call
jnp
lods
mov
add
add
and
call
add
dec
cs
add
scas
ljmp
int
push
add
data16
stos
push
add
jae
lcall
or
mov
sbb
add
lret
lcall
movb
inc
add
aas
cmp
add
cmpsb
add
lcall
out
push
push
out
adc
ljmp
incl
call
add
mov
incl
add
lret
push
mov
cmpsl
add
out
jp
lcall
out
idiv
popa
add
jbe
dec
fstl
mov
pushl
lea
movl
add
add
and
call
add
mov
add
aaa
or
push
sbb
stc
clc
cmp
add
test
mov
add
sub
mov
data16
add
add
jne
bnd
inc
add
decl
or
lcall
add
xchg
inc
add
enter
stc
arpl
lcall
jle
add
and
lcall
adc
cld
xchg
in
push
add
dec
push
add
sbb
add
adc
call
jmp
call
iret
jne
sbb
add
das
xchg
add
and
jle
add
add
incl
add
xchg
data16
aas
fcmove
push
add
rolb
add
outsl
rcll
enter
int
and
pop
inc
add
mov
test
outsb
mov
add
incl
add
mov
jl
add
add
fwait
cs
sahf
sub
or
outsl
cmovs
add
les
stos
sarb
jl
xor
dec
add
decl
add
and
dec
je
js
add
aam
add
fstpt
mov
mov
lret
pop
hlt
and
decl
jno
ljmp
icebp
xlat
xchg
xchg
out
addb
dec
pop
data16
pop
jo
jmp
add
push
add
imull
lret
add
add
add
mov
add
incl
dec
inc
add
add
addb
add
rol
add
cmc
das
cmp
das
mov
mov
fs
dec
inc
add
add
fistps
lock
add
add
pushl
lcall
add
push
mov
add
cs
add
es
imul
jp
into
push
add
sahf
inc
add
sub
push
cmpsb
add
push
or
call
add
add
addl
pusha
add
scas
sub
add
out
dec
add
jmp
addl
insl
pop
push
ffreep
add
incl
cld
shll
stc
xlat
nop
shll
inc
add
jg
add
rolb
hlt
and
incl
pushf
addb
add
xlat
cmp
cmp
lcall
add
fsubrl
add
add
jmp
jbe
add
mov
or
jns
add
jl
add
lds
add
cmp
add
ja
add
add
jge
add
and
dec
enter
pop
add
incl
add
add
in
xchg
mov
add
testl
add
mov
mov
enter
push
add
jg
fistpl
jle
xchg
push
cmp
mov
cmp
cltd
or
jmp
insb
lea
jmp
add
sti
add
call
pop
addl
push
ds
fsubs
add
int
add
ljmp
ss
xlat
js
add
add
add
xchg
bound
jg
aam
xchg
popa
add
sub
clc
inc
add
and
pushl
call
add
cmp
pop
adc
fsubrp
mov
insb
fsts
add
aaa
stos
testb
cld
pop
xor
cld
push
add
stos
and
incl
les
fstps
push
add
mov
lcall
add
push
add
push
lea
add
xchg
test
int
addb
add
add
mov
out
push
jl
add
aam
add
rolb
out
xchg
mov
add
inc
add
pushf
hlt
fldenv
add
inc
add
sbb
movb
cli
loop
mov
std
repnz
test
cs
popa
add
rolb
add
push
cmp
in
imul
incl
repnz
add
call
xchg
push
add
xchg
push
jge
sti
outsl
cmpsl
add
add
jb
jg
add
rclb
add
xchg
add
incl
or
or
add
jnp
jmp
xchg
push
xchg
jne
cmpsl
add
int
cmovnp
xor
jmp
add
add
ljmp
negb
stc
int3
jmp
incl
pop
cmp
cltd
insb
inc
add
push
add
or
sub
addb
add
shr
fucomp
jl
in
jb
jmp
test
mov
add
loopne
mov
lods
adc
call
jmp
add
add
repz
int3
enter
lea
add
mov
and
ret
add
xchg
cli
fsubr
scas
adc
jl
movb
cmp
add
call
decl
add
add
inc
add
jp
mov
add
lret
dec
dec
cmp
add
lcall
cmp
cmc
push
add
jb
pushl
push
jmp
jle
bound
pushl
idivb
push
inc
add
push
or
and
pushl
addb
sub
repz
add
mov
add
icebp
aad
add
ret
add
dec
jae
decl
add
test
out
push
lret
add
out
pop
push
add
je
sbb
add
ja
cld
sbb
decl
ljmp
jbe
ficoms
add
mov
ja
mov
add
jmp
pushl
out
in
addl
add
mov
add
or
add
push
pusha
add
inc
add
adc
inc
add
add
cmp
inc
add
out
add
call
xchg
pop
jl
mov
pushf
idivl
movb
add
xchg
addb
loope
mov
and
incl
add
icebp
pop
and
in
sti
popa
add
cli
pop
mov
add
add
pop
cmp
add
add
mov
add
aas
daa
add
add
js
add
add
sbb
add
inc
add
and
decl
movsl
add
call
les
push
dec
mov
add
jmp
add
xor
add
in
imul
xor
add
imul
or
dec
jmp
pop
ret
and
decl
in
rolb
add
mov
adc
mov
bnd
mov
loop
pushf
fiaddl
incl
incl
add
mov
inc
add
and
incl
ljmp
mov
cli
pop
xchg
add
les
ljmp
cs
add
sub
lahf
test
add
jmp
ljmp
add
pop
dec
sbb
add
stos
lods
into
lea
add
pop
loope
popf
sbb
mov
mov
add
add
xor
cld
lods
dec
cli
test
stos
pop
jne
add
decl
in
test
or
rcl
icebp
mov
xchg
fistps
add
mov
pop
add
movl
test
cmc
xchg
movsb
add
add
adc
add
add
xor
call
imul
add
mov
add
call
add
test
adc
ss
xchg
test
jb
mov
xor
incl
inc
add
add
cmp
add
les
pop
imul
push
and
popa
add
mov
xchg
outsb
jns
dec
lds
xor
incl
inc
add
pop
scas
cmc
stos
mov
pop
mov
add
shll
pop
test
mov
movsb
add
add
add
dec
mov
int
add
add
add
out
jne
lods
jle
add
fisubrs
add
add
add
cmpsl
add
fwait
adc
decl
out
shlb
dec
mov
in
cmpsb
add
incl
icebp
test
outsb
sub
fwait
cmc
das
pushf
jns
cltd
or
mov
add
sbb
rolb
add
pop
movl
sub
sub
add
pop
cmp
xor
sub
add
lods
jns
out
pop
dec
hlt
rcrb
dec
add
movsb
add
jo
jmp
out
sub
add
movsb
add
add
add
add
add
decl
fcmovne
loopne
int
lahf
xchg
outsb
lds
out
fstl
xor
decl
mov
cmp
xchg
mov
add
insl
mov
mov
cmpsb
add
dec
pop
mov
jle
add
imul
dec
jge
add
push
dec
fldcw
sub
dec
add
pushl
add
loopne
inc
add
pushf
lock
ljmp
fdivrs
jge
xchg
lea
dec
fcmovu
jmp
add
incl
mov
cmc
mov
add
cmc
pop
cmp
mov
add
add
mov
mov
jbe
fwait
aam
jmp
out
dec
movsb
add
add
add
add
add
movb
in
iret
lea
pop
adc
rcrl
xchg
int
mov
jecxz
imul
add
add
add
cs
pushl
outsb
dec
scas
aad
add
jp
repnz
addb
add
add
pop
insb
sbb
xor
ljmp
lret
and
jmp
add
add
xchg
stos
aas
xchg
push
movb
inc
add
shrl
or
add
and
jmp
add
jl
add
push
in
inc
add
and
ljmp
into
and
decl
sub
mov
lods
add
add
jg
test
mov
outsl
add
jge
cmp
add
rcr
push
add
inc
add
cmc
imul
sub
add
add
add
in
xchg
push
add
test
dec
pushf
movl
push
sbb
pushl
sub
cltd
sub
and
pushl
pushl
addl
add
nop
movb
lods
shl
add
add
inc
add
add
add
lret
ror
mov
add
adc
add
mov
add
pop
test
scas
cmp
jge
lea
add
shlb
pminsw
pop
push
add
and
sti
das
data16
jmp
add
rcl
xchg
pop
cmpsb
add
add
filds
add
add
push
add
test
xor
out
ljmp
add
fstl
add
jae
call
and
call
and
enter
lcall
add
daa
add
rolb
add
out
divb
push
push
add
out
mov
add
add
mov
movb
add
sub
add
pusha
add
adc
push
add
lcall
call
add
jg
dec
sbb
fimull
adc
incl
add
and
inc
add
pop
ud1
xchg
nop
cmp
je
fcomip
jns
push
add
push
adc
add
push
add
fnstenv
dec
sbb
lcall
add
dec
mov
add
add
ljmp
movb
pop
jle
movb
add
les
ret
add
xchg
sub
add
xchg
sub
imull
divl
pushl
add
add
add
ljmp
push
add
repnz
jno
lcall
ljmp
add
dec
add
mov
add
sub
add
ljmp
mov
out
pop
sbb
add
add
jp
add
in
push
mov
add
xor
dec
xchg
ret
push
sbb
divl
add
dec
test
add
sbb
incl
add
push
add
clc
dec
and
adc
decl
add
add
adc
incl
fidivrl
add
pop
lods
aam
add
stos
roll
add
jmp
imul
loopne
cmp
sub
scas
outsb
arpl
push
popf
mov
add
add
mov
jb
call
pop
std
add
pop
ret
sahf
cmp
push
mov
mov
sub
lds
xchg
adc
dec
sbb
add
jmp
add
pop
xor
rorb
pop
sbb
jno
incl
jo
jmp
add
hlt
or
pop
loop
in
push
add
add
jmp
pmaddwd
sbb
out
arpl
lcall
in
test
cmc
mov
outsb
or
hlt
cwtl
dec
imul
int3
test
test
add
ljmp
add
lcall
cltd
stos
mov
add
shll
add
add
xchg
roll
fmull
add
add
push
jmp
add
fdivrl
dec
and
sbb
fwait
sbb
add
dec
sarl
add
lret
add
data16
xchg
push
sub
inc
add
xor
cs
aad
incl
inc
add
mov
lcall
mov
or
dec
repz
add
sarb
add
call
rcl
add
lcall
iret
stos
and
incl
add
add
push
inc
add
fnstsw
sub
mov
mov
add
decl
loope
push
add
fwait
jl
lods
jle
clc
push
hlt
mov
add
push
add
mov
add
add
iret
rorl
ljmp
sahf
sbb
test
shr
or
mov
xchg
lods
test
pushl
inc
add
add
pop
add
pushl
pushl
idivl
add
add
icebp
push
add
xor
cmpsl
add
add
movq
xchg
fimuls
sub
lds
mov
pushl
or
add
inc
add
mov
jecxz
xchg
data16
movl
add
add
push
lret
add
add
shrl
add
mov
lea
mov
adc
jmp
and
ljmp
lods
inc
add
jg
add
sti
nop
cli
add
pop
add
fidivrs
aad
leave
leave
out
mov
mov
sbb
cmp
cmp
loope
xchg
in
or
out
xchg
stos
xchg
cmp
enter
xchg
out
movl
add
cmc
pushf
cmp
add
pushf
stc
dec
pop
repnz
add
jmp
add
push
add
scas
add
incl
add
mov
add
adc
js
fidivrl
add
push
imul
add
sub
insl
mov
add
mov
adc
xchg
cwtl
adc
jmp
outsl
addb
add
add
mov
add
jnp
test
add
cmp
iret
or
loope
add
aaa
pop
addl
dec
inc
add
mov
jecxz
mov
pop
lcall
movl
das
movsb
add
sub
roll
stos
iret
arpl
incb
jns
add
call
sub
add
mov
in
or
add
add
sub
int3
enter
loop
popa
add
jmp
lret
lahf
aaa
mov
xchg
bound
decl
incl
add
rolb
add
data16
add
sbb
sub
add
add
inc
add
or
add
add
add
add
mov
addb
inc
add
out
mov
jo
dec
push
pop
fidivrl
jne
add
inc
add
les
push
add
lret
in
jle
add
pop
add
add
sbb
stc
jne
mov
js
dec
dec
ljmp
int
dec
and
push
dec
sub
push
add
addb
sub
adc
jmp
add
jle
add
jmp
add
push
add
add
fiadds
add
mov
add
add
mov
xchg
push
icebp
ror
push
cmp
add
in
rclb
add
push
add
test
aas
je
roll
push
add
loop
and
push
mov
add
imul
ret
inc
add
adc
add
jbe,pt
mov
add
ljmp
pop
add
jmp
add
xor
call
cmp
out
and
ljmp
add
sbb
sbb
add
addb
push
cmp
loope
sbb
jns
add
add
addl
pop
outsb
mov
xor
jmp
call
mov
je
add
add
jo
ljmp
addb
int
bound
pushl
cld
jbe
mov
in
sti
sbb
inc
add
sti
cmp
add
testl
out
dec
out
adc
incl
bound
pushl
add
xchg
data16
add
xchg
loope
add
ljmp
lods
and
or
stc
gs
pop
cmpsb
add
mov
sarb
add
dec
xor
call
aad
add
sub
add
enter
sbb
add
add
mov
add
add
inc
add
add
in
dec
out
jp
jbe
add
or
icebp
push
and
decl
ljmp
rolb
push
add
cmp
add
xlat
mov
inc
add
sti
adc
lcall
add
cli
adc
cmp
cltd
sti
pop
ljmp
rcll
jne
cmp
rolb
add
add
iret
xchg
jmp
ljmp
mov
add
add
add
in
repz
outsl
enter
jne
or
add
fisubl
jmp
add
call
add
add
pushl
dec
enter
add
sti
pop
clc
or
mov
test
fsubrs
jge
repz
loope
idivl
std
movb
lahf
jb
jmp
add
add
xor
pusha
add
jns
lret
lret
loope
mov
add
loope
vphsubdq
in
add
and
mov
pop
xchg
mov
add
stos
mov
push
add
inc
add
jo
decl
sub
add
add
movsl
add
add
xor
ljmp
add
sub
add
lcall
out
ss
add
push
add
inc
add
bnd
call
add
or
shrl
jno
dec
negl
add
nop
std
test
addb
adc
incl
dec
xchg
cmpps
add
movb
push
adc
jmp
aad
add
add
push
cmp
sub
add
xor
jmp
mov
add
mov
xor
call
ljmp
dec
idivl
jbe
add
add
shr
ret
add
pop
clc
cwtl
add
pushl
add
mov
push
add
addb
pushf
mov
add
repnz
ljmp
xchg
aad
add
pushl
add
xchg
lcall
xchg
aas
ss
add
pop
or
cmp
add
jg
add
add
insl
mov
jg
sti
lds
les
xchg
pop
testb
add
fists
int
mov
ljmp
pop
inc
add
ror
jae
decl
pop
and
incl
mov
popa
add
lods
add
fldl
dec
mov
jmp
add
xor
add
xchg
fsubr
ret
add
pop
mov
mov
mov
jmp
add
fcoml
adc
iret
push
cmp
sub
add
inc
add
lcall
mov
add
or
out
adc
decl
add
add
adc
jmp
add
add
nop
rolb
add
add
sti
mov
xor
sbb
mov
add
test
icebp
daa
add
add
xlat
rolb
add
dec
sbb
das
aam
scas
ficompl
add
add
add
ja
mov
add
aam
jnp
repz
dec
insl
xor
pushl
add
inc
add
sbb
std
cmpsl
add
decl
mov
xlat
push
add
dec
or
std
pop
int
loopne
pop
loop
test
arpl
call
jge,pt
add
add
push
addl
add
xor
decl
into
mov
adc
ljmp
add
call
loopne
cmp
add
ljmp
xchg
pop
mov
call
stos
xor
jmp
adc
fnstcw
mov
add
call
in
push
pushl
push
add
inc
add
push
mov
add
inc
add
pop
push
add
inc
add
mov
add
add
and
lods
cmp
add
cmp
add
mov
lcall
inc
add
mov
dec
faddp
add
add
and
repz
pop
add
loope
outsl
push
add
jae
pushl
add
imul
dec
ret
add
add
add
clc
out
xchg
inc
add
lret
adc
add
jo
pushl
add
push
xchg
cs
mov
ss
add
stc
pop
dec
cld
pushf
mov
sub
jl
add
sub
cmpsl
add
cmpsb
add
pop
mov
jmp
add
jmp
ja
add
decl
enter
and
adc
call
les
pop
insl
pop
and
decl
fs
and
pushl
add
add
add
mov
inc
add
xchg
fisubs
add
das
xchg
movb
inc
add
call
add
lcall
movl
add
add
pop
cltd
mov
mov
xor
fnstenv
ljmp
in
jle,pn
loope
ds
or
int3
xchg
cmp
call
mov
add
cmpsl
add
push
add
cmp
mov
dec
mov
arpl
cmp
push
add
jecxz
sbb
jae
lcall
addb
and
jmp
add
push
add
outsb
mov
add
cmp
push
add
mov
shlb
pushl
imul
rcr
push
add
mov
rcr
mov
xor
ljmp
int
mov
cmp
decl
add
add
lret
fisubl
std
lds
dec
sub
addl
adc
add
data16
repnz
pop
rcrb
or
add
add
add
xchg
cmc
push
add
lcall
add
insb
aaa
mov
add
push
dec
ret
scas
mov
sub
dec
lods
into
addb
add
sbb
add
adc
pushl
aam
mov
push
mov
add
mov
inc
add
inc
add
mov
inc
add
mov
add
add
pop
mov
push
xlat
adc
incl
add
loope
mov
pop
sub
push
loope
aad
pop
rcrl
pop
mov
xchg
aas
xchg
popf
dec
in
mov
ljmp
clts
add
inc
add
in
xchg
repz
add
xchg
xor
call
fiadds
incl
add
in
adc
pushl
incl
add
jmp
add
sbb
add
mov
pushl
add
into
test
lea
lods
movb
pusha
add
fcoml
outsl
jae
dec
lret
inc
add
add
ds
add
incl
fidivs
out
push
in
movl
fstpt
addb
add
psrad
cli
out
cmp
add
push
pusha
add
xchg
mov
add
lcall
add
xor
dec
jle
add
xchg
pushf
in
das
call
in
rolb
jl
add
add
sahf
outsl
push
incl
add
aas
mov
lahf
shlb
sub
imull
add
imul
add
movb
and
add
mov
jae
inc
add
jmp
add
add
call
in
adc
decl
add
add
lcall
add
push
nop
add
jmp
je
test
push
add
xor
ljmp
add
mov
add
xor
ljmp
test
xchg
add
incl
pop
arpl
pushl
cmpsl
add
or
dec
sti
push
add
popa
add
mov
add
in
xor
inc
add
popa
add
repz
add
add
test
mov
ds
mov
shll
inc
add
mov
packssdw
popa
add
outsb
pusha
add
xor
mov
mov
add
sahf
roll
and
incl
add
add
jp
lret
out
pop
gs
sbb
lea
add
sbb
imul
and
call
call
add
add
jmp
push
pop
stos
addb
push
add
cmp
enter
jecxz
hlt
pop
in
lcall
mov
popf
adc
pushl
scas
out
jg
add
ds
pop
push
ss
ja
add
xchg
fld1
out
sub
fstl
into
adc
decl
xchg
push
data16
lods
mov
pop
or
jno
lcall
jno
call
add
scas
aad
nop
stos
pop
dec
push
bts
pop
adc
add
ret
add
add
push
pop
fcomi
pushf
out
into
sub
incl
jmp
jmp
add
add
xchg
dec
cwtl
jl
add
aad
add
add
and
lcall
and
nop
jge
sub
add
mov
and
incl
add
adc
mov
faddl
ficoms
iret
xor
dec
xchg
bound
call
decl
pop
add
sbb
sbb
jp
add
add
call
xchg
add
add
add
es
mov
inc
add
push
repnz
add
adc
add
adc
ljmp
pop
lods
rorl
add
jae
ljmp
aam
data16
inc
add
sahf
pop
bound
dec
xchg
roll
stos
xor
adc
call
add
dec
stc
adc
call
add
add
add
add
dec
call
pushl
jp
lret
loope
notl
add
dec
pop
pop
add
add
xchg
lahf
addl
pushf
daa
add
add
imul
xor
add
mov
add
das
popa
add
repz
add
scas
cmpsb
add
icebp
adc
add
test
out
push
add
mov
add
add
xchg
jbe
add
pop
jb
call
lcall
mov
add
sub
or
push
mov
add
mov
decl
movb
add
daa
add
mov
add
fnstcw
inc
add
out
xchg
adc
ljmp
add
add
inc
add
pop
mov
add
rorb
mov
pop
out
sub
data16
dec
cmp
and
mov
push
add
add
adc
add
add
aam
call
add
add
and
decl
movb
push
mov
out
add
jle
imul
add
daa
add
adc
dec
test
pop
int
jns
pop
in
lret
pop
add
mov
add
lret
add
and
inc
add
addr16
add
add
addl
sub
xchg
adc
lcall
xchg
imul
or
out
movsl
add
cld
enter
call
sub
add
aas
sbb
mov
dec
cmp
aad
les
addl
xor
fadds
add
add
lcall
stc
not
lods
pusha
add
sub
jnp
add
pop
loop
test
clc
fucomi
pop
jne
add
push
jmp
add
sub
and
leave
adc
push
adc
decl
incl
mov
jp
ja
popf
fmul
scas
lds
addb
mov
dec
enter
jae
ljmp
sahf
cltd
stc
test
pop
iret
push
mov
ret
add
lret
add
fisubl
add
mov
push
mov
add
in
sbb
jl
mov
shld
inc
add
cmp
arpl
cmp
imul
test
lcall
add
ret
add
test
xchg
cmp
cmpsb
add
adc
push
sahf
xchg
out
adc
in
cmp
add
cmp
js
mov
popa
add
punpckhdq
add
push
addl
loop
aas
xor
ljmp
sub
mov
lds
xchg
in
sub
dec
in
adc
incl
or
add
dec
insb
ficompl
jle
cmp
mov
push
cmp
mov
dec
jne
cmp
push
add
lock
lahf
loope
and
lcall
xor
out
inc
add
sub
in
mov
add
sbb
add
add
scas
mov
add
add
jle
add
dec
rolb
fwait
outsb
xor
cmp
ljmp
add
sti
xchg
jb
in
int
std
out
mov
add
and
inc
add
les
inc
add
xchg
pushf
add
ljmp
xchg
mov
add
add
add
fidivl
ja
add
add
push
dec
addl
add
flds
decl
xor
add
out
inc
add
xlat
in
sbb
in
xchg
mov
jno
jmp
add
pushf
aam
iret
mov
add
int3
out
mov
ret
add
int3
inc
add
inc
add
push
cli
or
das
pop
add
jmp
inc
add
sbb
jge
mov
add
clc
cmc
shll
jae
call
ljmp
out
rolb
jnp
push
add
sbb
adc
pushl
lcall
add
jnp
mov
mov
and
call
add
push
and
call
push
adc
inc
add
add
add
cmp
pop
mov
pushl
add
add
sub
inc
add
xor
cmp
xchg
lds
xor
incl
mov
add
add
cltd
and
pushl
add
dec
mov
add
arpl
lcall
sbb
xchg
divb
rcrl
add
add
and
pushl
ljmp
cmp
loope
lahf
popf
in
dec
jle
add
lock
and
mov
pop
adc
mov
imul
add
add
bound
pushl
loope
jle
mov
add
mov
enter
lea
mov
popa
add
pop
pop
or
jmp
adc
decl
lods
sub
insb
push
pop
push
push
cmc
mov
cld
sub
add
cs
inc
add
loop
inc
add
or
sub
sub
push
adc
lcall
rolb
add
outsl
fsubr
add
repz
gs
add
imul
mov
notb
add
add
xor
dec
hlt
xor
add
add
add
addl
inc
add
decl
mov
mov
nop
int
add
jmp
add
add
add
add
add
mov
arpl
call
xchg
pop
add
mov
add
loopne
push
xchg
cli
jl
add
mov
in
test
int
test
leave
dec
xchg
push
add
mov
add
incl
adc
repz
push
dec
and
stc
sbb
out
je
fimull
push
int3
lock
or
pusha
add
inc
add
xor
decl
add
adc
lcall
cmp
add
jmp
mov
xor
jmp
inc
add
in
loopne
lcall
add
push
roll
push
bound
jmp
add
jb
pushl
add
aas
out
popf
cmp
nop
mov
lcall
adc
add
mov
cld
xchg
sub
pop
test
add
add
mov
jmp
xchg
ja
add
mov
add
inc
add
adc
call
xchg
and
mov
add
add
repnz
decl
push
add
negl
push
out
mov
add
pop
stos
cld
popa
add
std
pop
dec
and
ljmp
rolb
daa
add
das
and
add
add
sub
rolb
add
sbb
add
mov
add
dec
sub
sub
or
add
cmp
fwait
cli
push
add
xor
lcall
sti
rolb
add
add
inc
add
pop
jo
call
add
jecxz
stos
call
add
add
stos
inc
add
xlat
sub
add
addl
add
xor
add
incl
call
jmp
decl
dec
rsm
addr16
cwtl
or
add
outsl
sub
inc
add
mov
mov
inc
add
add
pop
push
add
ja
or
xor
jmp
mov
add
pop
inc
add
add
incl
stc
les
mov
dec
mov
sub
add
sub
add
add
gs
shr
in
add
xor
cmp
add
or
mov
add
pop
mov
out
lods
out
aam
insl
mov
scas
push
pusha
add
test
ret
rolb
movsb
add
dec
mull
hlt
jge
add
stos
dec
dec
stos
jns
int3
iret
lock
jno
fdivl
pop
adc
call
add
and
mov
add
xor
aad
loop
sub
imul
jp
add
mov
stos
outsb
and
mov
stc
rorb
or
jmp
dec
pop
pop
lcall
addb
insl
mov
inc
add
pop
leave
mov
bound
fldcw
add
add
ljmp
add
les
inc
add
lret
mov
shrb
add
or
cmp
dec
push
add
fsub
add
add
add
stos
mov
add
cmp
add
cmp
dec
mov
lret
in
sub
jmp
mov
ret
add
fwait
add
sub
add
data16
dec
add
incl
call
and
dec
jns
leave
inc
add
mov
add
les
popa
add
enter
loop
data16
sub
add
pop
imulb
add
add
cmp
insl
fcompl
mov
decl
add
mov
inc
add
decl
xlat
iret
cmpsl
add
mov
add
jl
push
add
into
sbb
push
stos
or
jne
lods
jg
dec
pop
mov
add
sub
push
push
add
push
cmp
add
add
into
jmp
clc
inc
add
popl
call
cmp
lcall
addl
xchg
cmp
sub
or
data16
sub
roll
sbb
add
add
inc
add
add
out
xchg
cwtl
insl
sub
pop
jecxz
sub
lcall
jmp
push
adc
ljmp
fmuls
xchg
addb
add
hlt
int3
lcall
incl
cmp
add
add
jecxz
add
data16
js
and
in
test
ds
les
sahf
jl
add
mov
add
add
pop
sub
add
xlat
pusha
add
push
add
stos
xchg
mov
push
inc
add
lret
push
jns
mov
push
add
adc
xor
incl
hlt
dec
xchg
testb
gs
ljmp
inc
add
add
add
subps
pop
adc
mov
add
add
add
loop
roll
out
xor
add
mov
fistl
jmp
add
add
fsub
add
mov
movl
add
jmp
sub
add
dec
and
push
inc
add
push
addl
rclb
jne
add
movsb
add
xchg
pop
xchg
xor
jmp
lcall
sbb
cmp
pop
movb
js
loop
mov
inc
add
scas
int3
inc
add
add
das
std
dec
inc
add
fwait
jg
add
ljmp
push
rcll
add
lea
pop
test
shrl
cs
out
xchg
in
rclb
and
jmp
add
mov
add
jne
add
cmpsl
add
decl
add
and
call
call
jle
inc
add
xor
pushl
mov
push
add
adc
lcall
filds
outsl
cmp
xchg
pop
pop
or
or
add
fcoml
add
push
stos
adc
fcomp
bound
stc
mov
add
add
xchg
jge
fnstcw
out
in
or
int3
movb
add
call
nop
rcrl
mov
es
add
mov
movsb
add
or
mov
aam
pushf
lea
movb
add
fistps
add
outsb
jnp
sub
movsb
add
add
ljmp
cmp
add
add
in
ret
add
add
jg
dec
in
mov
mov
cmc
jae
jmp
add
repz
popa
add
mov
add
mov
add
mov
bound
incl
xchg
adc
decl
xchg
add
ljmp
mov
ja
mov
add
loopne
xchg
pop
lods
xor
incl
add
sbb
enter
xor
inc
add
daa
add
fidivrs
ss
add
cs
enter
pushl
cmpsl
add
loopne
or
add
mov
sbb
mov
adc
call
add
ja
sub
xor
push
loopne
mov
add
rolb
daa
add
add
add
movl
add
loop
in
mov
call
or
add
push
and
pop
sub
push
sub
cli
and
test
mov
add
add
fdivrs
cmpsb
add
jg
xchg
add
lcall
mov
mov
repz
cmc
bound
decl
push
cld
sbb
jns
add
add
add
test
push
add
mov
arpl
decl
push
shll
addl
sub
add
fcompl
push
push
ljmp
jo
jmp
add
pop
add
jle
add
add
into
out
mov
add
xor
jmp
test
outsl
push
jge
int
rorl
mov
decl
std
addb
add
xchg
or
dec
arpl
decl
pop
int
add
repz
add
jo
pushl
call
out
leave
or
add
roll
sub
add
mov
mov
add
jg
add
jmp
add
mov
inc
add
add
xor
incl
add
cwtl
pop
add
or
lcall
add
adc
pushl
jmp
add
add
incl
hlt
inc
add
lcall
cld
popa
add
mov
add
incl
addl
add
aas
mov
mov
jl
add
or
ret
mov
add
dec
movsb
add
mov
add
inc
add
fisttps
add
cwtl
push
or
mov
mov
add
lret
movsl
add
fimuls
add
add
and
ljmp
inc
add
cmpsl
add
add
mov
add
lcall
sbb
add
in
je
insb
sbb
push
loop
js
and
decl
xchg
loopne
xchg
dec
or
ds
adc
call
xlat
mov
xor
lcall
out
pop
arpl
mov
lods
and
cmpsl
add
xor
dec
lret
test
loop
add
sub
add
fstpl
js,pt
jae
ljmp
js
in
test
cmp
call
incl
mov
add
xor
jmp
add
loop
int
add
int3
cltd
ret
daa
add
inc
add
out
xchg
mov
incl
pushl
mov
xchg
add
incl
add
push
add
add
cmp
add
divb
add
repnz
rorb
cwtl
xlat
jns
add
xchg
xor
out
add
pushl
clc
pusha
add
jnp
or
add
jg
int3
fcom
movsb
add
jmp
add
mov
incl
aam
add
push
add
xor
clc
into
jge
aaa
cmp
jp
jb
ljmp
xchg
lods
movsl
add
clc
or
jmp
adc
js
imul
cmp
mov
and
xor
decl
loope
cltd
mov
add
jb
jmp
les
js
loop
push
add
mov
lahf
add
and
jbe
xor
rolb
add
jbe
ss
add
pop
arpl
lcall
clc
and
pushl
fmuls
ss
add
pop
fistpll
insl
cs
pop
rolb
pop
push
bound
pushl
xor
jmp
add
sbb
add
lret
js
cltd
push
add
ret
mov
pop
mov
mov
adc
pushl
add
jo
in
push
mov
mov
sbb
lods
pop
fucom
add
lret
test
inc
add
add
jmp
add
inc
add
hlt
dec
in
mov
aas
das
xor
incl
xchg
inc
add
popf
sub
mov
std
lods
repnz
add
add
lcall
and
decl
mov
or
add
les
ret
add
arpl
pushl
add
lea
hlt
and
fldcw
cmp
lahf
adc
imul
stos
mov
xchg
inc
add
into
cli
loop
or
add
mov
mov
clc
cmpsb
add
add
or
add
push
xchg
push
movl
decl
roll
aaa
mov
add
lret
pushl
ljmp
jecxz
jo
pushl
jmp
add
push
ja
cmp
ljmp
add
addb
inc
add
mov
push
add
hlt
pop
push
sahf
sbb
push
into
cmp
jmp
call
cld
js
insb
icebp
inc
add
fstl
inc
add
or
add
add
fdivl
rcrl
add
adc
jmp
add
add
push
xor
decl
adc
inc
add
add
scas
cmpsl
add
jmp
decl
xor
ljmp
mov
pop
mov
movb
inc
add
add
imul
ret
add
insl
add
jmp
add
aas
mov
pushl
pop
add
mov
add
test
mov
add
clc
cltd
inc
add
notl
push
lret
jp
add
and
push
xor
pushl
add
test
add
inc
add
sbb
add
incl
decl
or
add
sub
add
in
jle
jmp
jne
add
jge
sub
imul
push
add
and
call
xchg
leave
lcall
pop
js
js
add
std
push
add
aad
jnp
daa
add
iret
lahf
inc
add
mov
add
loop
mov
inc
add
jbe
push
push
mov
sbb
mov
add
int3
imul
jecxz
pop
xor
cmp
add
push
add
add
push
sub
add
add
xchg
xchg
cmp
in
xchg
std
sub
out
pop
jmp
xchg
test
add
mov
stos
and
ds
cmpsb
add
stos
bound
jmp
incl
xchg
cli
jg
add
sub
inc
add
pushl
ds
jb
out
daa
add
sub
add
add
add
dec
push
dec
leave
js
add
cvttps2pi
clc
xchg
pop
add
add
xchg
inc
add
dec
adc
ljmp
pop
shlb
idivl
add
incl
dec
push
fld
add
and
jmp
inc
add
ficoms
xchg
and
call
test
outsl
test
jnp
add
add
add
pop
fbstp
data16
cmp
dec
dec
imul
add
and
push
add
add
adc
incl
jnp
add
jmp
adc
ljmp
out
pop
test
xor
jmp
add
out
in
mov
outsl
jne
add
dec
cmp
test
add
fisubrs
add
call
add
notl
add
jne
in
sti
mov
mov
add
dec
test
mov
inc
add
fbld
add
mov
call
cmp
shl
cmp
add
inc
add
ficomps
mov
movsb
add
add
div
lret
fcomps
and
std
jbe
add
and
mov
mov
inc
add
add
incl
mov
xchg
add
fcmovb
add
add
add
out
mov
ja
arpl
ljmp
pusha
add
rol
add
decl
test
dec
mov
out
jnp
xor
jns
add
push
loope
test
int3
xchg
fwait
adc
inc
add
mov
pop
stos
add
push
gs
mov
cmp
jbe,pt
fisttps
sub
out
jnp
add
xchg
adc
ljmp
add
add
add
test
imul
fcompl
add
push
add
pop
xchg
clc
stos
enter
and
call
addl
shrb
add
pop
add
add
xchg
sarb
in
movsl
add
ret
les
loop
dec
jle
out
jb
lcall
jge
rcrl
ja
add
or
leave
push
add
add
in
or
inc
add
test
inc
add
movsb
add
push
add
push
add
rclb
add
scas
sub
inc
add
add
out
add
fstps
ret
add
push
add
fsubrp
jbe
sub
lret
aam
add
les
add
outsb
jg
pop
test
call
lahf
les
add
cld
jecxz
pop
int
add
sbb
loopne
cli
push
add
cmc
mov
adc
pop
mov
add
xchg
out
loop
jg
push
aaa
mov
add
addb
stos
int
add
imul
add
call
add
adc
jmp
add
or
push
adc
pushl
add
not
hlt
jns
sub
test
icebp
or
cld
shll
mov
and
jge
add
sti
mov
add
jmp
add
sbb
dec
mov
test
cmc
aas
stos
cld
mov
lcall
btc
sti
ficompl
add
inc
add
jmp
xor
ljmp
sub
sbb
lods
scas
jp
ret
insl
inc
add
mov
add
pop
aad
cmp
and
add
imull
lret
addb
scas
fwait
cld
push
sub
call
add
dec
jb
pushl
add
negl
fbstp
int3
pop
test
push
jo
pushl
sbb
add
push
jae
jmp
add
jg
aam
push
add
call
add
push
add
cmp
add
mov
out
mov
push
jae,pt
incl
call
dec
jno
ljmp
lcall
loopne
aam
add
incl
call
push
lahf
mov
add
mov
movsl
add
sbb
add
movsl
add
inc
add
xchg
jnp
addb
jp
inc
add
mov
cmp
stos
jmp
rcrl
add
test
call
cmp
add
jo
fldcw
test
adc
dec
test
clc
jl
jnp
mov
lret
add
add
add
and
jmp
add
outsb
mov
popl
cli
push
add
les
and
add
dec
fidivl
ljmp
lret
xchg
dec
ret
add
jmp
lcall
cmp
add
aad
xchg
gs
mov
mov
xchg
xchg
aam
jnp
add
movsl
add
add
test
add
add
inc
add
inc
add
fiadds
call
inc
add
lret
dec
sbb
test
and
lcall
jns
add
loopne
cmp
jle
addr16
pop
cmp
add
push
cmp
in
pop
pusha
add
inc
add
push
add
xor
sub
add
stos
pop
add
add
decl
jge
mov
add
cmp
rolb
add
or
add
add
inc
add
sahf
xchg
hlt
int3
dec
cltd
ljmp
pushf
pop
rcrl
add
in
ss
mov
shll
lock
out
xchg
fcmovb
add
pop
pop
add
add
ljmp
popa
add
int3
popa
add
repnz
push
mulb
add
mov
sub
js
aad
add
insl
sbb
loopne
call
inc
add
inc
add
pop
cmp
outsb
add
jmp
add
and
add
call
push
add
insb
dec
dec
push
mov
jp
add
mov
add
nop
mov
inc
add
mov
sub
add
push
cltd
dec
pusha
add
xor
ja
add
add
mov
mov
inc
add
dec
and
or
or
fs
pop
or
add
psubq
decl
or
add
pop
mov
sarl
add
repz
jb
dec
in
out
pusha
add
lock
add
push
add
push
jp
add
jge
leave
clc
xchg
sahf
lcall
jmp
jle
fsts
add
arpl
ljmp
adc
ljmp
cltd
or
or
in
xchg
shrb
add
add
test
add
push
into
arpl
jmp
pop
in
leave
dec
inc
add
ret
add
fcmovnbe
clc
lock
imul
jb
jmp
mov
lds
cli
or
mov
in
ret
push
add
les
jb
pushl
add
xchg
dec
mov
inc
add
push
xchg
xor
jmp
add
enter
sbb
ret
cmp
xor
mov
xchg
cmpsb
add
and
lods
rcl
loope
les
xchg
cmp
and
pushl
mov
jmp
lret
lock
inc
add
sub
or
out
add
jnp
pop
and
pushl
add
or
add
std
je
mov
inc
add
movl
add
add
mov
ffree
add
mov
loop
out
mov
push
xchg
and
ljmp
std
test
push
add
xchg
inc
add
or
cmp
pop
push
cltd
and
adc
add
outsl
jnp
mov
out
cld
test
sahf
add
iret
fisubrl
call
add
adc
add
xor
test
inc
add
xchg
test
roll
add
add
fiaddl
add
mov
ljmp
outsb
jo
incl
test
add
outsb
add
incl
jae
jmp
jo
pushl
mov
mov
add
ljmp
imul
aad
data16
add
mov
add
add
add
jb
call
lcall
loope
aaa
and
lcall
daa
add
decl
in
xchg
test
pop
js
stos
sahf
aas
leave
sbb
decl
add
ja
add
movb
add
jl
data16
add
add
pushl
add
das
pushf
mov
test
jl
cmp
movb
jg
xor
cwtl
out
mov
add
jns
add
and
sub
add
roll
in
sbb
cmpsl
add
push
ret
bound
pushl
cmc
pop
inc
add
add
add
jno
call
imul
and
lcall
add
scas
arpl
ljmp
push
add
mov
add
ficompl
push
addl
add
add
inc
add
fnsave
mov
add
fistpll
mov
add
or
add
shl
add
add
adc
sbb
add
xor
jmp
lcall
jp
adc
call
addl
add
add
les
xchg
mov
and
imul
cs
xchg
inc
add
xor
add
xor
scas
sbb
lods
lods
sbb
mov
cmp
xor
jmp
add
addb
add
mov
cmpsb
add
pop
loop
rclb
mov
fwait
dec
dec
xchg
push
xor
jg
add
pushl
ljmp
scas
ss
or
add
dec
and
xor
addb
push
adc
cld
out
sub
add
add
mov
jb
call
loop
imul
jnp
add
add
cmp
lcall
les
insl
iret
mov
out
adc
inc
add
add
sahf
das
addl
lret
iret
adc
lcall
add
mov
add
cmpsb
add
rclb
add
lods
jno
cmp
lods
push
incl
add
imul
cmp
pushl
add
sub
add
dec
inc
add
ret
ret
adc
in
repz
pop
xlat
adc
jmp
popf
xchg
lret
pusha
add
sbb
mov
das
test
adc
cld
sub
cld
dec
addl
add
jnp
test
sub
call
lcall
nop
out
mov
jnp
add
sbb
and
decl
push
test
mov
imul
or
in
mov
fdivrs
pop
sbb
add
sub
test
push
data16
pushl
xchg
sub
add
sbb
call
addb
add
roll
add
sbb
aas
addb
dec
push
add
ret
add
mov
add
push
mov
push
fdivrl
xchg
roll
add
add
mov
test
loope
call
and
ljmp
add
inc
add
cmp
and
fsubrl
loop
push
add
sbb
inc
add
test
sub
add
enter
cmpsl
add
push
rorb
jg
ret
add
cs
add
fnstsw
xchg
insb
mov
dec
sarl
jno
incl
ljmp
add
add
inc
add
add
jmp
sbb
sub
mov
imul
add
dec
jns
rolb
add
inc
add
adc
lcall
mov
and
xor
add
xchg
repz
add
sub
ljmp
push
add
add
lods
push
add
xor
jmp
add
add
cmp
add
add
and
stos
pop
int3
xchg
ret
add
add
and
aas
mov
and
decl
in
adc
add
add
bound
jmp
add
sbb
xlat
addl
add
mov
mov
add
repz
pop
and
call
addl
test
aas
int
mov
add
add
mov
lods
or
add
adc
incl
incl
test
in
add
incl
and
inc
add
xchg
pop
lret
jle
mov
roll
leave
cli
ja
dec
adc
decl
jno
ljmp
loop
jle
add
push
mov
rolb
xor
lcall
jge
add
add
ds
cwtl
mov
add
bound
lcall
aad
mov
or
add
xchg
sti
dec
cmp
push
push
lods
lcall
out
flds
cmp
add
push
addl
fnsave
add
mov
js
add
and
call
mov
mov
shll
add
in
dec
loop
push
add
dec
mov
addb
mov
movl
pop
xchg
call
jmp
fdivl
stos
jae
ljmp
and
add
ljmp
pop
or
ja
add
jge
inc
add
xchg
mov
scas
int3
pop
inc
add
push
add
push
test
mov
ret
nop
in
rcrl
in
int3
push
add
adc
push
repnz
aas
sbb
arpl
jmp
inc
add
add
cwtl
jne
add
lods
pop
bound
mov
inc
add
jle
fisubrs
aam
xor
into
sub
loope
xor
pushl
add
push
ret
add
inc
add
ljmp
test
inc
add
add
mov
jmp
pop
mov
scas
mov
add
in
mov
add
cld
or
push
add
push
add
mov
add
mov
adc
call
ljmp
add
testl
add
adc
mov
je
ljmp
stc
or
ljmp
mov
fstpl
mov
call
call
sbb
adc
rolb
add
mov
cmpsl
add
add
xor
jl
int
dec
sub
dec
or
add
add
add
push
add
loop
mov
out
mov
pop
jl
mov
cld
cmp
and
pushl
add
jl
and
call
das
popa
add
mov
lret
mov
add
loope
mov
mov
add
add
shlb
ljmp
push
add
or
jp
add
ss
in
mov
addl
add
or
add
mov
lods
mov
pop
xor
call
sub
call
adc
ljmp
add
add
mov
cmp
add
and
mov
ja
pushf
mov
jae,pn
incl
aad
jge
add
cmpsb
add
dec
loope
push
push
outsb
cs
pop
add
rclb
add
cld
fdivs
add
jmp
decl
add
add
pop
adc
gs
fsts
add
test
les
fldz
jae
decl
add
out
testl
sbb
and
outsb
pusha
add
pop
rolb
add
icebp
xchg
pop
dec
mov
push
mov
fisttpl
cmpsl
add
dec
daa
add
popa
add
dec
sarl
decl
pop
fbld
ret
add
sbb
int
dec
jp
and
call
clc
mov
xchg
incb
inc
add
or
add
add
lds
movl
scas
jge
pop
xchg
mov
aad
add
jae
dec
lret
add
aaa
adc
lcall
mov
add
add
pop
aad
pop
outsb
adc
std
xor
cmp
aam
sti
icebp
fcomps
lret
mov
add
inc
add
int3
or
cmpsb
add
add
test
jb
ljmp
testb
jo
lcall
add
mov
sub
add
push
std
test
movsl
add
add
add
int3
xlat
dec
jno
pushl
pusha
add
or
push
add
test
repnz
xlat
insb
dec
or
pushl
sbb
mov
fdivrl
addb
repnz
iret
testl
cmp
fcmovne
cld
rcrl
add
cmpsl
add
dec
popl
add
adc
inc
add
mov
jg
or
test
xchg
jg
sahf
mov
adc
dec
xor
call
add
xchg
mov
add
out
mov
add
scas
cmp
add
ljmp
sbb
sub
add
mov
lret
fsubs
add
jnp
mov
cwtl
repnz
add
xchg
mov
add
and
ljmp
and
dec
in
fsubs
add
out
jecxz
cmp
sbb
add
inc
add
out
adc
ljmp
add
out
push
lds
add
decl
add
mov
adc
call
xchg
add
add
mov
add
lock
dec
xchg
ret
pop
ficomps
add
add
or
add
dec
mov
pop
add
add
add
icebp
dec
push
rcl
outsb
out
sbb
test
arpl
call
xor
incl
add
lret
pop
imul
fildll
jg
add
mov
add
sahf
jbe
loopne
add
add
incl
pop
jb
lcall
add
mov
out
pop
pop
clc
roll
out
je
nop
enter
add
clc
int
aad
aad
xchg
jo
push
ss
fcom
daa
add
repnz
add
mov
icebp
cltd
test
aaa
cmp
add
loopne
mov
mov
stc
inc
add
add
nop
cmpsb
add
test
add
mov
roll
add
xchg
icebp
or
jge
aam
add
pushl
add
iret
add
cld
cmp
add
cli
pushf
and
incl
addb
in
shrb
cld
sbb
daa
add
add
mov
add
scas
push
addl
aas
repz
les
cmp
mov
inc
add
mov
add
dec
add
add
ds
add
call
insl
and
pushl
mov
in
or
insb
jne
add
ds
add
jg
in
or
add
mov
cmp
decl
and
ljmp
inc
add
sub
es
add
add
insb
add
add
sahf
mov
fdiv
push
mov
inc
add
imul
mov
mov
fdiv
addr16
add
add
xchg
inc
add
lods
or
add
inc
add
out
mov
add
nop
repz
sbb
or
not
ret
add
jo
jmp
jmp
movl
outsb
push
add
enter
add
movsb
add
adc
lret
add
jmp
add
add
add
popa
add
inc
add
push
add
ljmp
add
neg
nop
sti
jge
or
sarb
dec
mov
add
jbe
add
add
into
pusha
add
add
stc
jl
aaa
shl
add
add
stos
push
fs
call
dec
fwait
popf
int3
iret
mov
aas
jp
add
and
cld
jge
add
cmp
add
fmul
insb
mov
add
aaa
cltd
stc
outsl
outsl
gs
movsb
add
btr
lea
sbb
aaa
push
test
add
adc
add
cmpsl
add
or
pushl
add
adc
scas
push
sub
add
mov
xor
inc
add
dec
movsb
add
xchg
popf
jne
add
addl
dec
sbb
add
sbb
cmp
ljmp
in
fbld
inc
add
pushl
add
add
add
int
filds
jmp
add
push
cmp
xor
incl
add
sub
add
pop
push
repnz
xchg
or
add
sbb
lahf
push
add
add
imul
add
lods
xor
jmp
add
mov
add
incl
cmp
stc
dec
push
add
mov
add
push
jl
rcr
aas
hlt
adc
cld
add
add
ss
add
add
lcall
shrd
jbe
imul
mov
add
inc
add
dec
ss
add
pop
mov
clc
add
ljmp
mov
add
xor
call
ljmp
inc
add
sbb
add
push
add
mov
add
sti
ror
mov
in
push
add
out
lahf
jle
out
push
cli
mov
add
das
pop
outsb
xchg
add
jge
inc
add
dec
sub
add
add
mov
pushl
rolb
xchg
sub
into
test
insl
mov
in
and
inc
add
cmp
inc
add
pusha
add
add
fsub
add
add
sub
inc
add
add
add
scas
mov
add
push
add
pop
add
das
test
lcall
add
add
sbb
add
mov
icebp
sub
dec
aas
jg
adc
lcall
mov
bound
inc
add
xchg
adc
addl
ret
add
mov
add
ja
movlps
jmp
add
push
push
cmpsl
add
int3
adc
add
dec
and
sti
jecxz
out
adc
decl
xchg
rcrl
add
cmp
movsb
add
imul
ret
mov
add
cltd
lods
add
hlt
gs
inc
add
inc
add
dec
xor
mov
stos
das
xchg
mov
icebp
cmp
and
jb
jmp
add
fnstenv
decl
pop
add
add
das
sbb
mov
sbb
scas
xlat
inc
add
loopne
jo
dec
repz
add
inc
add
rclb
add
cmc
mov
cmp
daa
add
add
lcall
clc
daa
add
jbe
add
mov
stos
mov
sbb
mov
jmp
leave
mov
add
sbb
pop
xchg
jno
ljmp
pop
int3
add
popf
cltd
in
je
fildl
add
push
arpl
push
popf
sti
daa
add
add
add
jmp
cmp
add
sub
push
mov
and
cmpsl
add
push
mov
dec
insb
mov
cmp
jns
add
test
rorb
add
jne
add
and
call
mov
add
sub
aam
add
loop
adc
mov
fcompl
ja
popa
add
and
decl
repz
adc
decl
add
aad
jmp
add
add
cmp
mov
xchg
add
inc
add
add
add
pop
jbe
fcoml
out
mov
push
js
add
add
pop
ja
add
pushl
decl
add
shl
add
aas
sub
jmp
shll
inc
add
pushl
loop
icebp
mov
sarl
push
add
into
jb
lcall
add
or
cmp
or
ljmp
das
jno
incl
das
das
xchg
cmc
dec
and
incl
std
stos
pop
std
push
enter
push
fistpll
add
adc
decl
xor
call
call
mov
adc
push
push
add
add
add
jne
repz
and
arpl
decl
test
add
fs
ss
leave
cmp
jecxz
mov
std
shl
addl
mov
jne
sbb
cmp
ficoml
add
fistpl
repnz
add
lcall
repz
jnp
mov
cmp
add
pop
xor
call
dec
sub
push
add
dec
xchg
add
out
cmp
jl
add
push
add
jp
test
call
mov
incl
dec
mov
add
dec
cwtl
mov
incl
inc
add
or
out
lods
addb
add
add
sub
dec
and
lcall
jnp
fidivrs
movb
faddl
add
sbb
outsl
stos
push
add
stc
daa
add
addb
add
pop
cmp
add
fwait
dec
addb
sahf
sub
add
iret
push
cld
addb
roll
add
scas
sti
cmp
add
pop
push
mov
add
lods
aas
inc
add
xchg
les
pop
mov
add
jb
ljmp
push
add
test
adc
inc
add
and
sub
call
add
mov
ret
push
xor
fistpl
in
sbb
movsl
add
xor
ljmp
ficoml
jns
xchg
pop
jno
pushl
add
cmp
add
fcoml
roll
pop
scas
and
jnp
dec
jo
mov
add
and
pushl
mov
sub
cmpsb
add
jge
mov
add
pop
mov
gs
push
movb
mov
inc
add
test
or
pop
lahf
jnp
loop
stos
jb
decl
in
cwtl
jbe
add
movsl
add
call
add
lock
outsl
int
add
add
push
add
push
add
mov
dec
and
outsl
sub
add
add
sub
mov
les
das
mov
and
int3
dec
repnz
add
or
lcall
xor
pushl
add
or
add
js
xchg
jmp
cmp
add
jmp
pop
pop
mov
push
add
dec
xchg
push
add
pusha
add
aam
add
and
cmp
pop
mov
fdivl
add
add
adc
add
xor
lcall
add
cmp
add
or
add
ret
add
pop
mov
sti
pop
jp
or
add
call
and
jmp
sarl
in
data16
call
push
add
pop
scas
lret
sub
fdivrl
call
imul
add
xor
insl
addb
insl
data16
add
js
add
popf
cmp
cmp
add
in
ds
cmpsl
add
adc
call
cmp
push
inc
add
pop
mov
sub
mov
inc
add
pushl
fdivs
jmp
add
roll
add
cmpsl
add
cmp
data16
mov
cmp
push
add
stos
fwait
ja
cmc
push
jmp
add
cmc
or
dec
pusha
add
sub
imul
lods
movb
lds
mov
mov
jmp
add
cmp
add
cmp
add
call
addb
add
cmp
rolb
add
jb
sti
xchg
nop
jb
jmp
add
pushl
dec
ja
rorb
pushl
add
daa
add
mov
push
dec
mov
add
add
push
or
add
add
mov
in
lret
dec
scas
sbb
xchg
xor
decl
xor
jp
data16
incl
add
movl
ret
add
lcall
inc
add
stc
pop
test
add
inc
add
mov
addb
and
ljmp
lcall
add
cmp
jae
lcall
xor
ret
and
sti
loopne
or
fmull
add
ss
ds
add
adc
filds
call
jmp
add
cmp
movb
add
add
add
and
xchg
mov
add
das
ljmp
incl
ret
add
in
mov
add
add
fimuls
xlat
dec
mov
and
lcall
roll
add
inc
add
pop
call
and
pushl
add
addl
movb
fcoms
add
fidivrs
bound
decl
lcall
and
jmp
je
enter
add
add
push
clc
add
add
adc
xchg
pop
in
rclb
inc
add
addb
add
cmp
cmp
les
mov
dec
cmp
add
push
add
push
add
pushf
lcall
xchg
lds
insl
cmp
movl
dec
leave
push
pop
xchg
mov
movb
or
add
scas
or
stos
lds
iret
int
xchg
jne
ja,pn
jle
std
mov
xchg
out
mov
add
mov
pop
lods
mov
add
adc
call
call
sub
add
add
pushl
add
imul
lea
jmp
add
pmovmskb
cld
add
inc
add
lea
dec
clc
sbb
add
dec
sahf
aas
and
ljmp
pop
cwtl
push
xchg
in
mov
lcall
roll
pushl
jmp
add
out
inc
add
lea
inc
add
test
or
into
add
inc
add
add
add
out
inc
add
rcl
in
rolb
dec
dec
xor
decl
add
ficoml
add
hlt
cmp
add
push
or
mov
lahf
cmp
outsl
cmpsb
add
fmull
add
push
outsb
pop
or
add
jmp
add
jmp
add
sub
popl
addb
xor
lret
inc
add
xchg
in
push
pusha
add
mov
nop
rol
add
jl
mov
inc
add
mov
add
bound
out
sbb
rclb
add
sub
scas
lods
mov
fistps
cli
aaa
jl
xchg
mov
mov
jmp
cmp
sub
adc
jmp
or
push
cmc
mov
mul
add
cmc
sarb
add
add
jmp
add
incl
add
cmpsl
add
in
xor
ljmp
lock
test
pop
add
cltd
jb
call
pushl
add
add
jmp
idivl
decl
add
mov
jp
pop
std
inc
add
lods
cs
fidivrs
jnp
add
sti
add
jmp
add
mov
mov
inc
add
and
call
inc
add
mov
jle
add
mov
cmpsl
add
test
and
ljmp
add
daa
add
sbb
cmp
fwait
inc
add
fucomp
pop
add
add
and
ljmp
notb
or
pop
mov
push
iret
adc
push
add
data16
jmp
inc
add
movl
xchg
jle
xlat
cmp
add
pop
inc
add
cs
lret
xchg
add
add
and
pushl
mov
xchg
jns
insl
add
call
pushl
mov
add
test
jl
add
mov
mov
xlat
jg
xor
js
add
push
add
stos
xor
incl
pushl
jmp
cmp
leave
lds
sarb
jno
push
test
add
xchg
insl
scas
and
cmp
adc
faddl
jmp
add
int3
mov
add
push
add
pop
push
mov
add
push
add
xor
decl
stc
pop
or
into
jg
ljmp
daa
add
mov
add
jp
outsb
mov
repz
movsl
add
mov
dec
xchg
scas
mov
pusha
add
mov
mull
icebp
push
add
out
pop
jne
fidivs
pop
test
fistl
add
xchg
add
add
popa
add
adc
decl
cmp
jp
jno
ljmp
add
jmp
inc
add
add
or
jmp
imul
add
or
mov
hlt
pushf
cmp
decl
push
add
addb
jle
outsl
movsl
add
fdivrs
pushf
out
sub
idivl
or
ljmp
loopne
fcomps
lcall
idivl
mov
cltd
scas
push
shlb
add
mov
add
lcall
call
incl
add
scas
jns
pop
pop
add
shll
decl
dec
dec
xchg
outsb
mov
pusha
add
sub
lcall
xor
add
add
lock
add
add
fcomps
push
add
pop
je
loop
cmpsb
add
shll
dec
xchg
or
lods
clc
stos
push
add
in
insb
jb
decl
add
pop
mov
add
insb
and
incl
add
inc
add
inc
add
add
add
ljmp
lods
and
push
test
repz
outsl
jp
jne
add
pop
test
add
add
push
push
insb
ljmp
add
dec
and
mov
add
addl
je
jl
mov
test
mov
and
jle
fst
add
jmp
pop
jnp
sbb
repnz
dec
mov
call
lret
dec
movsb
add
add
pop
push
add
mov
aas
pop
and
jmp
push
adc
ljmp
sahf
movsb
add
pushl
add
dec
test
add
add
mov
icebp
jo
decl
inc
add
cmp
add
pop
add
add
or
mov
cmp
and
ljmp
adc
decl
inc
add
add
xor
call
add
jl
movntps
add
xchg
xor
decl
add
insb
xor
jmp
pusha
add
ret
add
xchg
popa
add
scas
mov
sarb
mov
jb
ljmp
das
addl
add
movsb
add
jle
sti
push
add
scas
imul
add
roll
add
movsl
add
adc
push
push
dec
inc
add
add
out
lret
pop
daa
add
add
lahf
ss
add
enter
mov
add
add
jmp
mov
add
enter
mov
sti
cmp
aas
mov
add
xchg
les
or
js
add
xchg
fcmovb
add
cmp
mov
adc
jge
test
jmp
cltd
cwtl
cmp
pushl
xor
decb
mov
add
call
lods
sub
sub
mov
add
add
faddl
out
xor
pushl
add
sahf
jmp
add
lods
je
add
xchg
sbb
add
out
jno
fiaddl
add
data16
push
add
jge
test
or
imul
jo
std
xchg
adc
fcompl
mov
int3
jg
xor
incl
pushl
add
jge
outsl
mov
xor
pushl
rolb
sti
out
jbe
or
or
jecxz
mov
addl
add
imul
or
add
pushl
add
add
add
ret
add
leave
dec
addb
add
adc
jmp
add
mov
add
call
add
sbb
push
insb
push
sbb
add
mov
and
call
add
adc
jmp
add
sub
dec
rclb
mov
sbb
add
add
out
sub
clc
in
xchg
sub
add
into
mov
roll
add
add
stc
adc
pushl
add
adc
decl
aad
add
addb
mov
sub
iret
mov
dec
rcr
inc
add
sti
xchg
dec
bound
pushl
dec
hlt
fidivl
add
nop
mov
add
ds
mov
iret
xor
test
jmp
add
add
add
repnz
in
mov
add
inc
add
sbb
daa
add
add
imul
roll
ret
add
adc
add
or
call
and
lcall
mov
out
sbb
aas
inc
add
movsl
add
pop
ljmp
pop
rcr
fdivrl
mov
jae
call
popl
add
cmp
shr
movsl
add
add
add
loop
sti
xor
jmp
clc
dec
jle
inc
add
cmp
add
ret
adc
ljmp
jne
add
ret
addb
movsl
add
dec
pushf
xlat
cmp
add
add
push
add
insb
int
dec
or
data16
imul
add
mov
add
js
add
call
add
out
nop
inc
add
stc
mov
sub
add
add
lahf
inc
add
add
test
inc
add
add
jne
idiv
cwtl
rolb
add
jmp
add
cmp
insb
outsb
adc
mov
add
pop
enter
loop
add
jmp
ljmp
add
pusha
add
fisubrl
movl
insl
mov
mov
mov
stos
popf
or
ljmp
ja
add
ljmp
mov
add
fwait
mov
add
call
and
data16
add
adc
jmp
mov
rorb
jae
stc
mov
push
add
mov
lahf
movb
jmp
test
add
add
sub
and
pushl
ds
dec
sbb
or
ja
mov
and
decl
inc
add
dec
and
call
cli
xchg
xor
lcall
mov
int3
and
lcall
and
lcall
decb
aad
or
enter
ret
add
add
xor
fldenv
pushl
insl
cmp
incl
sub
add
mov
pop
addl
xchg
inc
add
inc
add
add
push
mov
jb
cmp
addl
decl
jae
jmp
insb
dec
test
out
or
add
cmp
iret
das
addl
rolb
aam
mov
xor
mov
cld
mov
mov
aad
lea
add
decl
shlb
push
loopne
add
repz
add
dec
cld
mov
pop
roll
out
imul
lea
outsb
lret
add
in
ficomps
add
jo
decl
jl
mov
movl
divl
pushl
jmp
stos
inc
add
push
add
cmp
add
lcall
fwait
lea
aaa
test
movsl
add
add
jbe
xor
fistpl
add
into
addl
test
outsb
xor
lcall
mov
sbb
add
and
lcall
add
mov
add
jecxz
xor
call
jecxz
jg
add
add
push
sub
and
incl
lcall
ljmp
pop
imul
adc
push
sbb
inc
add
add
add
xor
into
sub
fstl
lds
push
out
sbb
js
cmove
jb
lcall
sbb
add
inc
add
pop
arpl
ljmp
add
outsb
pop
out
hlt
pop
addb
sub
add
movsb
add
add
js
push
add
decl
pop
mov
repz
push
ja
out
fwait
inc
add
push
roll
mov
add
aam
call
add
lods
sub
stos
repz
add
cli
test
mov
scas
arpl
fisttps
add
jecxz
mov
add
add
add
ljmp
add
movb
pop
dec
outsl
mov
add
cmp
sub
movsb
add
pop
xchg
jnp
add
ss
add
aam
jnp
add
repz
test
addl
mov
add
aaa
and
out
jp
mov
rolb
add
std
int3
cmp
add
add
mov
add
mov
sbb
add
inc
add
call
and
pushl
decl
jbe
mov
add
mov
mov
add
mov
mov
xchg
int
add
xor
call
add
out
pusha
add
mov
pop
fadds
xchg
cli
ja
add
inc
add
in
int
nop
jnp
sub
mov
sub
sub
pop
int3
pusha
add
test
pop
and
fmulp
add
mov
add
cmp
sub
xchg
movsl
add
mov
or
incl
hlt
jle
add
iret
in
push
add
stos
jle
cmpsb
add
out
adc
call
call
pushl
xor
jmp
incl
fwait
cmp
daa
add
je
sbb
add
fbstp
xchg
nop
mov
mov
lods
push
fwait
mov
add
jmp
add
jl
add
and
addl
add
in
stos
sub
add
add
sub
daa
add
add
inc
add
imull
mov
jmp
imull
add
jmp
fildll
pop
shll
cmp
clc
mov
movsl
add
pop
push
sub
lods
add
decl
ret
add
inc
add
or
call
int
sub
add
ljmp
dec
enter
sbb
add
je
dec
cli
aam
lret
insl
loopne
dec
mov
and
mov
jns
add
push
mov
int
pop
adc
jmp
add
adc
bound
jnp
push
add
sti
jecxz
or
or
int
ss
sahf
pop
and
push
cmp
mov
addl
lcall
fs
lret
push
add
mov
add
out
fisttpl
or
addb
add
add
decl
dec
je
add
loopne
add
ljmp
sbb
notl
add
jo
ljmp
xor
lcall
xchg
add
add
adc
aas
jo
incl
add
incl
jmp
add
pop
hlt
xchg
mov
push
add
inc
add
repnz
mov
add
cld
addl
lds
out
mov
or
popa
add
pop
dec
lahf
test
jnp
sbb
add
rcll
add
popa
add
clc
push
fisubs
mov
std
cltd
cmp
movsl
add
or
add
push
xchg
scas
cmpsb
add
outsl
inc
add
jp
movb
add
into
xchg
daa
add
imul
movb
add
ljmp
iret
fcoms
call
sbb
adc
ljmp
shlb
add
sub
add
imul
jo
jge
or
sub
mov
cmp
xchg
ds
xor
bound
call
add
incl
add
ret
add
or
out
add
ljmp
add
popf
mov
add
mov
add
push
addb
inc
add
hlt
add
adc
movl
outsl
dec
push
add
add
out
fsubs
add
loope
js
mov
add
jb
jmp
add
push
lock
mov
dec
xor
fdivr
ss
xor
cmp
inc
add
mov
std
push
movb
add
add
call
cltd
mov
xor
add
sub
sar
scas
sahf
mov
xchg
addl
sub
add
fdiv
movsb
add
cmp
inc
add
cmp
sub
shll
inc
add
xchg
in
pop
push
stos
shrl
add
mov
mov
add
bound
cmp
mov
ror
lds
in
test
idivb
inc
add
add
dec
ret
add
sub
add
sbb
xor
dec
add
call
pop
mov
add
lds
jge
add
add
add
call
out
adc
jnp
add
aam
sbb
call
mov
mov
std
pop
add
nop
mov
or
and
mov
sbb
pushl
push
add
ss
add
ret
push
ja
jge
ds
and
call
add
daa
add
mov
add
imul
cli
fistpl
push
pop
sbb
lret
je
add
push
add
dec
loope
or
or
setle
mov
add
add
enter
and
call
lods
pop
jmp
add
add
add
data16
add
add
add
add
xchg
xor
inc
add
cmpsb
add
pop
cltd
outsb
mov
xchg
and
pushl
jmp
sbb
lcall
bound
inc
add
cmpsb
add
jp
push
mov
dec
adc
jmp
jmp
cmp
loopne
mov
test
stc
movl
iret
xor
mov
addb
jmp
outsl
insl
cmp
mov
add
call
adc
decl
add
sbb
adc
jmp
adc
jmp
add
cli
bound
jmp
push
popf
in
movsb
add
inc
add
in
xor
add
pushf
mov
sub
or
add
aam
add
add
add
jle
lcall
in
daa
add
or
out
fwait
pop
fstps
jle
or
push
addl
add
incl
add
mov
mov
add
xor
test
add
incl
add
fidivs
add
decb
incl
jmp
add
ljmp
out
movl
imul
add
add
shrb
lds
mov
add
and
adc
decl
pushl
insl
push
xchg
adc
clc
sbb
add
loope
pop
data16
add
add
add
incl
dec
loope
lret
daa
add
mov
mov
add
cmp
mov
jmp
sub
add
aad
dec
mov
dec
push
cwtl
add
add
add
insb
jg
push
mov
add
add
cltd
insl
cltd
scas
sub
add
ss
cmp
incl
js
add
mov
fdivrl
out
mov
out
mov
xchg
dec
cmp
adc
jmp
add
ljmp
xchg
mov
int3
jecxz
imul
jg
bound
jmp
mov
add
xor
pushl
add
and
loope
cwtl
sub
cmp
adc
imul
decl
mov
outsl
jns
add
lcall
mov
imul
decl
add
outsl
add
jmp
pop
jge
xor
cmpsb
add
jo
decl
jns
add
xchg
push
adc
pushl
fcoms
add
add
dec
and
jmp
add
sub
dec
sti
cmp
je
add
jmp
add
and
pushl
fucomi
in
sbb
lcall
cmc
inc
add
lcall
lods
sahf
fcompl
push
fwait
cmpsl
add
les
or
fwait
inc
add
movb
movb
add
pop
movsb
add
add
mov
sub
add
add
addl
dec
std
add
add
fnstcw
aad
loope
mov
push
mov
dec
xor
mov
fcoms
cwtl
roll
adc
ljmp
push
sub
jp
mov
xchg
mov
sub
or
pop
inc
add
pop
push
add
or
add
fadds
add
loopne
icebp
js
insb
mov
or
add
mov
or
inc
add
jmp
mov
add
add
sub
test
aas
test
inc
add
dec
dec
addb
push
insb
mov
rolb
insb
push
add
call
shrb
shlb
lcall
js
add
aam
aad
add
call
add
xchg
and
sbb
mov
stos
outsb
pop
add
pop
sahf
cli
popf
xchg
pusha
add
hlt
jecxz
pop
cmp
fdivr
sub
pusha
add
dec
mov
add
and
adc
dec
mov
pop
pop
add
mov
in
xchg
mov
decb
add
or
fidivl
push
jb
cmp
add
pushf
pushl
add
xor
lcall
xchg
add
rolb
add
bound
decl
mov
je,pt
test
dec
fdiv
mov
push
add
cmp
js
add
xchg
aas
mov
add
pop
fstpt
out
inc
add
cmp
add
push
sub
insb
dec
mov
push
cmp
divb
add
addl
add
cmp
add
nop
lcall
aam
xchg
mov
test
add
repnz
sbb
push
adc
decl
add
outsb
jnp
cmp
mov
adc
ljmp
imul
push
mov
cltd
mov
fbstp
lcall
mov
jg
add
ljmp
test
pop
sti
je
add
insb
push
add
mov
inc
add
jae
pushl
js
std
lds
jge
imul
add
mov
add
jmp
movl
add
cmpsl
add
into
sbb
add
bound
jmp
add
push
add
imul
pop
fdivl
decl
xor
call
lcall
xor
int3
lret
add
add
int3
les
mov
sub
std
and
int
add
repnz
pop
cmp
mov
testl
lcall
or
add
add
cmc
gs
addr16
jae
decl
xlat
int3
loopne
push
pop
popf
in
lret
fadds
ja
pop
addl
dec
sub
add
jle
xchg
lods
mov
jge
cld
mov
add
xor
ret
add
arpl
cmp
jo
ljmp
cmp
add
jns
pushf
arpl
lcall
mov
add
mov
cmp
add
jmp
add
add
add
inc
add
inc
add
outsl
xchg
pop
mov
out
dec
ljmp
incl
int3
pop
pushf
sub
add
inc
add
add
pop
add
add
xchg
or
mov
in
mov
cmp
add
xchg
out
xchg
nop
jl
add
pop
rcr
sarl
jae
call
incl
xlat
aas
push
jp
or
and
mov
test
cmp
cmp
add
adc
ljmp
sbb
sahf
rorb
add
mov
add
mov
add
dec
jle
das
push
leave
movsb
add
xor
call
jg
sbb
push
add
pop
movsb
add
add
add
jmp
sub
add
push
push
test
add
aad
int
ficomps
cli
push
xor
lcall
mov
addb
pop
jae
jmp
add
add
sub
add
rcr
data16
addr16
sbb
mov
jmp
sahf
mov
js
add
push
sbb
in
fnsave
add
inc
add
add
add
ljmp
push
add
add
add
jmp
add
stc
addl
pop
add
incl
add
add
jne
add
push
add
lods
mov
movb
xchg
push
push
mov
add
add
ljmp
add
test
xor
decl
add
lds
pop
add
add
mov
add
add
outsl
bound
pushl
mov
enter
dec
mov
scas
or
add
adc
call
out
push
add
cld
das
sub
add
sti
sub
add
or
int
add
sahf
mov
incl
call
mov
add
adc
fcoms
jg
outsb
int
mov
test
add
daa
add
popf
mov
lods
das
mov
mov
and
lcall
add
add
cmp
pop
pusha
add
mov
sub
add
adc
decl
mov
and
dec
push
add
push
jnp
mov
add
cmp
sub
add
adc
add
add
lcall
les
out
cmp
add
filds
aas
add
add
mulb
test
js
cwtl
mov
add
pushl
incl
ss
loopne
jmp
jle
sbb
add
fistpl
in
outsl
xchg
mov
adc
out
in
pop
xor
lcall
fdivrp
out
std
lahf
aas
cld
arpl
pushl
add
addb
add
mov
add
mov
fcmovnbe
or
mov
push
add
jp
add
add
call
add
ljmp
adc
movsl
add
cli
pop
or
gs
lods
inc
add
movb
pop
xchg
sahf
mov
adc
pushl
mov
add
add
pop
fsubs
add
add
gs
mov
and
jmp
add
rcll
bound
jmp
push
add
adc
cmp
jge
jp
add
call
pop
xchg
xor
push
pop
cmp
incl
lcall
and
mov
inc
add
repnz
scas
mov
daa
add
jo
lcall
jne
add
mov
xor
pushl
xor
sbb
xchg
sbb
imul
sub
pop
add
add
rolb
lock
push
into
dec
push
add
fistps
aad
inc
add
movsb
add
and
pushl
add
fnsave
add
add
inc
add
add
jae
lcall
add
add
add
data16
or
xchg
mov
movsb
add
dec
inc
add
xchg
leave
or
add
call
add
decl
loop
cmp
add
add
repz
and
ljmp
icebp
outsl
sub
ss
cli
mov
add
adc
pushl
add
inc
add
add
clc
hlt
addl
add
pushf
outsb
add
shll
decl
add
fwait
aas
push
add
lods
jbe
and
decl
cmp
mov
nopl
outsb
mov
imul
lret
bound
jmp
add
out
cmp
jbe
cmc
jbe
stc
in
flds
pushl
decl
nop
int3
jl
pop
add
incl
add
push
cli
les
das
inc
add
xchg
and
outsb
movsl
add
xor
call
add
dec
addr16
add
movl
scas
pop
push
cwtl
int
push
add
dec
adc
call
sbb
add
push
test
ret
add
std
xlat
fnstsw
lret
addl
sub
xchg
cmp
std
pop
sub
cmp
cmp
add
push
add
xor
sbb
pushl
dec
movl
das
push
daa
add
js
pop
rcll
decl
sub
push
sub
call
jae
pushl
pushl
add
popa
add
addl
add
push
addl
add
addl
add
scas
sub
xchg
idiv
les
rol
add
add
jl
inc
add
dec
and
lcall
popf
jmp
dec
in
add
lods
fld
add
mov
fwait
cmpsl
add
mov
add
add
add
and
ljmp
add
loope
sgdtl
incl
add
cs
jae
inc
add
add
xchg
dec
add
add
decl
cmp
neg
dec
dec
dec
pop
lret
popf
push
mov
dec
jp
mov
leave
addb
add
lcall
cmp
sahf
sahf
lret
add
add
pop
dec
jge
dec
xor
mov
aam
jno
lcall
add
add
add
add
inc
add
jecxz
cwtl
pop
and
mov
jae
pushl
jge
inc
add
insl
pop
fdivrl
add
ljmp
loopne
push
rolb
add
ss
dec
and
jmp
mov
add
xor
lcall
cmpsb
add
outsb
loop
add
in
cltd
xlat
xchg
add
mov
pusha
add
add
jmp
add
fwait
or
cmpsb
add
add
sbb
xor
jmp
iret
idivl
movb
mov
mov
call
add
sbb
pop
hlt
xchg
add
jmp
add
cld
cltd
push
movb
sub
lods
insl
les
ret
add
sub
mov
les
cmpsl
add
jge
sbb
lcall
iret
das
adc
lcall
imul
lds
sub
fistl
add
fidivl
add
mov
enter
jae
ljmp
lock
add
imul
int
push
add
push
cwtl
jns
add
in
loope
jae
pushl
cmc
cmovs
add
add
ljmp
movb
lods
rorb
hlt
xor
push
add
add
cmp
add
push
ljmp
sbb
add
dec
pop
je
add
adc
pushl
loope
scas
or
or
inc
add
sbb
clc
and
call
add
inc
add
push
add
adc
mov
add
add
sub
add
add
add
int3
mov
add
lods
sub
pop
add
push
add
std
clc
cli
fiaddl
decl
xchg
xor
add
add
lcall
pushl
add
push
add
inc
add
push
add
repz
add
popf
mov
call
ljmp
decl
scas
jmp
mov
sub
and
lcall
mov
movsl
add
add
mov
addb
xchg
ds
jmp
add
jnp
add
pop
mov
xchg
insl
push
add
ret
add
xlat
testb
sti
pop
js
cmpsb
add
repz
add
scas
outsl
sub
add
add
fmul
out
push
sbb
add
mov
add
stos
dec
imul
scas
jne
out
lods
inc
add
add
pushf
mov
pushf
mov
sub
mov
add
adc
jmp
or
lret
cmp
add
fmull
std
rolb
rolb
pushl
add
popf
mov
add
mov
add
pop
push
hlt
movsb
add
jmp
jmp
jecxz
addl
mov
add
pop
cmp
fidivs
jg
add
push
add
decl
jbe
scas
mov
mov
add
call
cmp
imul
jnp
add
add
jge
inc
add
xchg
imul
push
or
lods
add
push
sub
jb
push
out
neg
xchg
lret
add
nop
mov
roll
push
dec
movsb
add
das
xchg
jno
decl
mov
add
sahf
pushf
mov
add
incl
fisttpl
and
lcall
out
add
cmp
xor
inc
add
mov
add
pop
add
decl
jns
or
add
add
je
into
sti
cmpsb
add
jl
jb
in
jl
test
adc
aad
mov
jae
mov
rorl
ss
into
sbb
add
iret
pop
mov
push
add
stos
aam
add
add
add
mov
add
xor
pushl
or
push
add
or
add
add
mov
sti
fisubrl
xchg
dec
ja
jne
add
das
lds
or
add
add
mov
add
xor
jmp
add
xchg
insb
lcall
call
push
mov
add
jge
inc
add
movsb
add
jge
lcall
arpl
ljmp
aad
ret
mov
imul
ret
add
push
out
dec
add
fs
nop
or
add
clc
pop
popf
cmp
add
sti
jne
sbb
imull
add
jns
add
roll
shlb
test
inc
add
call
lods
sub
loope
repnz
mov
adc
incl
ljmp
cmp
or
add
ljmp
scas
and
aaa
xchg
cmp
lret
push
add
pushl
js
add
and
ds
add
jmp
ja
sbb
mov
mov
ret
add
std
inc
add
mov
add
inc
add
arpl
call
add
pop
xlat
out
shll
add
repnz
push
sub
add
add
xchg
pop
mov
inc
add
add
cli
aad
mov
mov
clc
and
ljmp
adc
mov
xchg
jnp
cli
insl
aaa
imul
dec
mov
mov
adc
push
mov
cmpsl
add
lods
pop
sbb
stc
aas
addr16
imul
pop
add
call
pop
inc
add
in
fstpl
in
leave
adc
jmp
add
and
call
ja
aad
bound
lcall
cs
fnstenv
pushl
cmp
lock
add
fisttps
xor
out
scas
jb
inc
add
adc
add
add
cwtl
jae
fmul
and
decl
push
add
or
jecxz
bound
incl
lcall
xor
decl
test
add
repz
fnstsw
addb
stos
pop
les
popa
add
push
add
mov
add
add
loope
jecxz
xor
incl
pushl
in
loop
pop
xchg
pop
mov
add
nop
insl
xchg
inc
add
in
out
jg
add
add
xor
mov
inc
add
xchg
leave
mov
mov
rol
add
stos
das
inc
add
jae
push
mov
add
add
in
ret
add
add
daa
add
lcall
xchg
sub
call
mov
pop
cltd
add
call
add
jge
sub
add
sbb
lods
ljmp
or
mov
out
ds
repz
loope
dec
jbe
sbb
jo
call
lds
lcall
xor
add
lcall
cmpsb
add
les
ret
add
jns
add
push
add
ret
add
aaa
mov
bound
dec
inc
add
movl
ljmp
into
in
adc
jmp
incl
dec
repnz
call
pop
cltd
in
xor
fsubrl
push
add
aam
push
add
push
add
xchg
mov
push
dec
repnz
jmp
pop
les
inc
add
add
add
jns
add
test
dec
fbld
add
dec
imul
adc
push
jmp
sub
add
fisubl
pushl
add
or
mov
inc
add
jmp
add
push
add
cmpsl
add
and
or
add
pop
xor
pushl
add
add
loop
jecxz
pop
inc
add
mov
add
xchg
stos
cmp
sahf
test
mov
fisubs
mov
mov
add
add
add
fdivs
fisubrl
cmp
add
les
pop
jge
inc
add
rorl
cs
or
shll
add
ljmp
outsb
notb
pop
faddl
jmp
cmp
imul
ficoml
roll
lret
cwtl
out
adc
pushl
add
std
add
add
xchg
dec
movsl
add
sbb
adc
decl
add
add
std
push
mov
jmp
add
pop
dec
sub
dec
xlat
ja
nopl
and
ja
add
inc
add
jns
add
mov
add
jns
sbb
leave
or
jne
mov
xchg
cmc
fmull
outsl
inc
add
mov
cltd
push
pop
pop
pop
xchg
rolb
add
pop
add
push
int3
scas
in
hlt
inc
add
pushl
add
dec
std
inc
add
jp
add
stos
les
aam
das
pop
jno
pushl
push
ret
mov
ss
sbb
add
xchg
mov
add
fbld
frstor
mov
call
call
xlat
leave
jl
add
sbb
add
stos
xor
inc
add
add
push
add
punpcklwd
pushl
add
pusha
add
cmpsl
add
xchg
jmp
jb
ljmp
add
add
push
add
mov
out
inc
add
test
testl
add
jno
jmp
add
ret
add
fcomps
insb
lock
out
in
mov
aaa
pop
ret
add
incl
nop
notb
mov
bound
out
xchg
cmp
add
add
lods
mov
hlt
mov
sub
add
lahf
add
call
ret
pusha
add
sub
jbe
pop
out
popf
hlt
lahf
mov
dec
out
add
call
add
xlat
or
std
and
test
sub
add
and
sbb
add
push
add
pop
pop
inc
add
int
add
mov
lods
sub
adc
push
dec
xchg
out
mov
pushl
data16
lock
decb
jecxz
sbb
add
ret
add
or
dec
adc
incl
ret
sbb
add
test
add
bound
jmp
add
xchg
cmp
data16
add
bound
decl
jle
rolb
imul
call
add
mov
add
xor
outsl
int
mov
add
mov
add
hlt
cmc
fidivs
add
in
mov
add
lahf
icebp
adc
decl
add
and
pop
pop
loope
jne
add
lds
xor
incl
mov
shll
add
xchg
mov
push
add
or
add
add
in
fcmovnbe
and
call
push
add
inc
add
ljmp
cmpsl
add
imul
sbb
ljmp
mov
test
aad
fnsave
or
add
pop
add
ljmp
repnz
mov
add
lea
test
sub
ret
add
rolb
add
incl
add
sbb
pop
add
pushl
mov
add
mov
imul
push
movsl
add
mov
bound
inc
add
mov
cmp
inc
add
xchg
mov
adc
call
add
add
xor
call
xor
jmp
push
pop
mov
jmp
lcall
inc
add
in
xlat
xchg
bnd
insl
outsb
out
jg
add
out
mov
adc
flds
sub
cld
jb
ljmp
push
add
add
adc
sbb
add
sub
fadds
add
pop
adc
pushl
roll
pop
add
js
add
add
and
incl
decl
pop
mov
add
mov
lcall
test
into
imul
xchg
jg
add
add
or
sbb
add
inc
add
addl
add
add
fistl
sbb
repz
ljmp
lds
loopne
adc
lcall
icebp
outsb
loop
dec
xor
call
xchg
nop
jle
jle
ret
cli
mov
test
xchg
sbb
inc
add
std
add
mov
cltd
into
mov
sbb
pop
je
jno
jmp
add
add
pop
out
hlt
ja
add
and
lea
call
mov
add
shrb
pushl
jbe
add
pushl
jmp
add
sub
das
dec
sbb
push
cmc
jl
cmp
mov
sbb
call
fimuls
add
mov
push
jae
decl
add
dec
jns
add
iret
push
cld
jne
inc
add
mov
add
jb
out
addr16
push
add
pushl
call
dec
out
pop
enter
add
dec
stc
or
add
jmp
pushl
mov
xchg
mov
add
pop
inc
add
jl
insb
mov
add
add
add
pusha
add
mov
dec
sti
lret
jo
lcall
xchg
inc
add
nop
sbb
les
xchg
and
inc
add
jmp
dec
mov
add
lcall
xlat
pusha
add
div
fcoml
in
popf
and
add
add
mov
cmp
add
incl
pop
popf
cmp
dec
pop
xor
add
inc
add
stos
sub
add
arpl
jmp
movsl
add
add
add
inc
add
imul
call
add
add
psrlw
je
aad
xor
jmp
add
call
pop
xchg
lock
mov
jmp
add
out
pop
add
dec
negl
addl
je
cmpsb
add
add
inc
add
mov
push
in
mov
call
jb
call
mov
add
cmp
dec
adc
jmp
jnp
fcomps
out
insb
adc
iret
rorb
int3
mov
popf
push
add
jns
test
add
in
dec
lea
loop
lret
push
dec
mov
add
int
insl
jb
lcall
add
and
call
je
cltd
rolb
aas
sbb
add
pop
inc
add
dec
sbb
or
aad
add
add
add
dec
ljmp
add
xchg
fimuls
cs
addl
sub
add
add
loop
jle
push
std
fwait
call
pop
add
push
or
add
inc
add
and
call
cli
loope
loop
outsb
jb
jmp
add
cmp
add
in
aad
add
dec
int3
cli
in
pop
out
dec
or
push
add
sub
addb
add
data16
ret
add
xlat
mov
pop
adc
incl
add
lds
ss
test
mov
das
dec
or
loop
popf
insb
push
add
mov
add
mov
fwait
adc
push
addl
add
sbb
std
push
add
xchg
push
push
add
dec
and
test
adc
ljmp
pushl
add
test
int
aam
lahf
sbb
fdivr
bound
decl
dec
mov
dec
sahf
mov
ret
add
pushl
add
aas
shlb
jnp
add
push
add
mov
arpl
pushl
call
add
rcll
add
pop
leave
mov
add
push
add
jl
shrl
and
cmp
in
test
stos
sub
add
movsb
add
pop
pusha
add
loopne
cltd
pushf
cmpsl
add
jo
call
push
in
add
push
add
cltd
mov
cmp
hlt
repz
add
cmp
add
or
add
add
iret
mov
add
or
add
mov
add
fs
je
daa
add
add
test
stos
dec
addl
add
in
and
push
pop
and
in
outsb
and
call
add
cmpsl
add
lock
xchg
push
mov
pop
dec
mov
lcall
movl
rolb
add
add
lcall
mov
lods
in
loop
outsb
xor
call
add
nopl
dec
movsb
add
add
out
and
pushl
add
pop
hlt
movl
add
mov
bound
incl
add
and
call
into
and
cmp
push
mov
movsb
add
sub
fisttpl
dec
repz
add
add
or
inc
add
inc
add
movl
add
in
adc
incl
ljmp
dec
inc
add
add
and
mov
repz
add
sbb
cmc
dec
jg
pop
lret
roll
jle
add
lcall
stos
sub
mov
int
out
push
add
ljmp
cmp
outsb
iret
aam
sub
add
fdivs
hlt
addb
mov
push
add
stos
ds
add
add
add
add
fmull
xor
incl
out
add
ljmp
jno
pushl
jmp
pop
add
add
in
xor
incl
add
mov
pop
aad
sbb
mov
cltd
xor
mov
sbb
scas
stos
add
faddl
or
pop
xor
incl
lods
addb
sbb
pop
cmc
inc
add
mov
lret
sub
add
pop
and
lcall
sti
xor
lcall
arpl
incl
sub
aas
and
add
ds
jae
ljmp
add
jnp
fsub
add
ret
popf
pop
insb
xchg
stc
xchg
push
xchg
stos
rcrl
add
out
push
std
mov
add
xchg
outsb
incb
add
add
xor
add
add
nop
push
xor
lcall
aad
movl
add
outsl
call
jns
add
scas
jg
sti
add
jmp
add
push
dec
mov
or
out
dec
sub
lock
fldt
movsb
add
das
lret
inc
add
add
inc
add
leave
pop
mov
and
in
scas
sbb
xor
or
add
jmp
add
add
ljmp
movl
add
ficompl
cld
push
push
add
mov
ja
inc
add
sti
fadds
jmp
add
add
addl
add
add
cmpsb
add
add
adc
push
fldenv
jae
mov
lret
add
mov
xchg
enter
stos
data16
pop
add
xchg
sub
xchg
insb
test
jle
push
add
pop
les
dec
push
or
xchg
sub
lahf
inc
add
movl
push
pop
cmpsb
add
add
adc
dec
sbb
out
js
and
inc
add
cld
push
fbstp
loopne
testl
decl
hlt
or
add
addl
mov
call
cmp
sahf
dec
push
add
mov
add
les
mov
lods
loopne
push
add
js
xchg
nop
neg
call
pop
push
jne
aas
stc
mov
sub
in
clc
or
pop
sub
add
decl
roll
scas
testl
add
xor
dec
sub
add
das
cmc
inc
add
push
cmp
bound
jmp
ljmp
jg
daa
add
add
mov
jnp
add
jbe
push
jb
lcall
push
inc
add
not
lods
cli
xchg
ficoms
add
dec
inc
add
dec
lret
mov
mov
add
lcall
mov
scas
lods
into
lods
pop
add
add
add
push
add
repz
or
add
nop
lods
fwait
jecxz
pushl
call
push
xchg
pop
and
jmp
add
inc
add
adc
call
pop
or
add
in
scas
addl
or
sbb
addb
add
dec
arpl
decl
add
add
mov
add
out
add
push
loopne
pushf
dec
hlt
and
jmp
insl
sbb
cmp
add
outsb
test
mov
rolb
lods
pop
lret
dec
mov
add
jmp
add
les
xor
ljmp
pop
mov
daa
add
add
outsb
int
mov
dec
test
push
add
inc
add
fldcw
add
inc
add
or
in
ret
add
ret
enter
mov
dec
pop
and
stc
adc
ffreep
add
je
or
add
bound
fsubl
add
pop
aas
pop
add
decl
sbb
loopne
addl
cmp
test
addb
pusha
add
add
jmp
inc
add
in
xor
lcall
inc
add
push
add
adc
pushl
add
movb
add
movl
cmp
sbb
jle
mov
add
cmp
add
add
add
pop
xor
cli
xchg
inc
add
movl
jno
out
and
decl
push
add
cs
add
sbb
pop
int3
into
lods
or
outsl
ret
add
add
aad
push
cmp
inc
add
cmp
add
clc
xor
inc
add
adc
add
mov
lds
addb
aaa
int
add
mov
rorb
xor
incl
mov
gs
add
inc
add
inc
add
mov
add
movl
pop
popf
sti
sub
add
mov
add
add
add
add
mov
xor
mov
cmpsl
add
frstor
add
call
les
mov
bound
pushl
add
add
add
enter
add
push
push
add
lahf
adc
jmp
xlat
jbe
lahf
cmp
pop
add
jmp
stos
xchg
adc
incl
add
sahf
mov
add
lcall
das
jbe
imul
stos
jae
jmp
add
add
scas
aaa
xlat
mov
mov
mov
add
pop
pop
out
dec
sahf
mov
int
add
push
call
add
lahf
mov
jb
ljmp
add
jge
add
decl
lahf
ret
add
add
lods
jae
cld
arpl
lcall
jmp
push
and
inc
add
jb
ljmp
add
add
inc
add
out
add
cs
fbld
add
cwtl
pop
jo
lcall
aas
dec
mov
push
rcll
add
call
mov
adc
lcall
add
enter
sbb
push
popf
sbb
add
add
pop
inc
add
xor
jl
add
add
xchg
inc
add
adc
ljmp
or
add
sub
addb
scas
pop
dec
cmc
pop
cmp
add
inc
add
xchg
lret
in
cmpsb
add
add
jmp
mov
out
testl
dec
js
bound
mov
xlat
xchg
dec
mov
incl
add
push
add
pop
jg
add
add
ret
add
ss
mov
dec
cmp
add
leave
and
call
add
dec
cli
and
add
add
xlat
addb
test
dec
adc
xchg
dec
mov
sbb
adc
xchg
mov
mov
daa
add
jg
add
and
ljmp
mov
lock
jne
adc
push
clc
out
imul
adc
mov
call
decl
ret
add
cld
sub
adc
call
arpl
jmp
add
and
cltd
pop
outsb
pusha
add
icebp
xchg
pop
xchg
add
inc
add
add
lret
je
add
hlt
pop
add
in
mov
xlat
imul
in
push
add
mov
and
and
dec
roll
adc
jmp
lcall
add
out
adc
jmp
add
add
jl
and
decl
xor
incl
add
stos
int3
lahf
aas
lahf
sahf
sbb
pop
inc
add
mov
add
mov
cmpsl
add
xlat
pop
mov
push
add
cmp
add
push
sub
dec
aas
xor
dec
xor
dec
cmp
ret
add
dec
sub
add
sti
scas
movsl
add
out
and
add
out
add
add
add
call
ljmp
mov
and
call
decl
cld
movsb
add
mov
decl
add
inc
add
xor
jbe
mov
int
mov
lret
push
add
in
fcom
testb
sub
add
js
ret
aas
or
inc
add
lods
push
add
fwait
mov
mov
mov
push
cli
inc
add
mov
push
int3
cmpsl
add
jo
jg
add
into
fcomps
add
jae
call
add
ret
stos
mov
fists
cltd
dec
aas
js
mov
add
les
add
lcall
add
out
xor
jmp
add
xchg
and
mov
cld
test
sbb
add
inc
add
movsb
add
call
lcall
lods
sub
jae
call
imul
test
push
aam
fisubrs
jne
sub
pop
jns
add
and
jmp
add
push
add
mov
add
lahf
add
ljmp
mov
mov
add
xor
call
and
inc
add
add
push
out
mov
aad
shl
mov
add
add
push
add
pop
ss
add
push
sub
jl
add
jmp
jnp
push
sub
push
dec
sbb
sub
xchg
adc
pushl
add
add
lret
jbe
repnz
add
out
addl
incl
add
testl
add
push
inc
add
add
add
add
pop
call
or
add
dec
mov
add
cmpsl
add
add
call
int
add
cmp
outsl
addb
add
add
add
push
cmc
hlt
enter
bound
jmp
sub
inc
add
mov
ljmp
add
add
stos
dec
or
dec
outsl
cmc
xchg
lods
push
add
add
cmp
int
and
incl
add
add
pop
pmulhuw
xchg
push
add
leave
aas
iret
lahf
cmp
filds
fmull
add
inc
add
decl
roll
add
test
inc
add
xor
fstpt
add
mov
sbb
add
shlb
inc
add
dec
js
jmp
rorl
fsubrs
js
add
iret
jbe,pt
mov
sbb
mov
sub
sbb
push
test
jle
add
test
xor
call
lcall
jbe
cmp
add
add
add
decb
mov
mov
add
xchg
xchg
sbb
add
add
add
add
sahf
insb
addl
xchg
cltd
xor
xchg
fcmove
cmpsb
add
sbb
xchg
inc
add
in
divb
add
mov
add
push
and
lcall
stos
test
sub
mov
ss
add
adc
mov
loop
cmc
movl
mov
fstps
add
or
add
fiadds
lcall
cmp
add
sub
xor
add
mov
mov
push
sub
and
jle
add
push
add
xchg
push
add
faddp
add
pop
add
adc
sti
inc
add
add
xlat
test
roll
add
xlat
cld
mov
add
inc
add
sahf
fldenv
add
sub
mov
add
loope
pop
add
cmp
pushf
sar
out
movsl
add
add
mov
cmp
xlat
mov
mov
xor
dec
sbb
xchg
fdivs
add
sbb
add
rcrl
test
lds
inc
add
add
xchg
mov
add
xor
call
daa
add
cmp
lcall
add
sti
test
and
hlt
rolb
add
nop
out
adc
dec
jns
add
add
shlb
rorl
sub
add
dec
and
lcall
add
out
xchg
adc
lcall
jge
add
dec
cmpsl
add
jbe
add
cmpsl
add
lods
out
fstpt
add
sub
xchg
loope
lea
jo
fmulp
out
xor
sub
adc
notl
add
mov
cwtl
rolb
repnz
ljmp
pop
cmp
arpl
jmp
adc
dec
pop
adc
inc
add
lcall
pushl
mov
push
add
jl
lcall
addl
add
call
jmp
std
lods
aad
add
ret
add
add
pop
dec
sub
pushl
lcall
xor
incl
push
mov
add
aam
add
arpl
dec
leave
or
add
inc
add
add
test
inc
add
add
fbstp
or
roll
test
cltd
jg
add
add
call
mov
out
pop
rolb
push
testb
add
mov
jnp
push
jecxz
pushf
pop
sbb
sub
add
movl
add
add
aaa
sub
shr
cli
lods
daa
add
in
fstpl
div
arpl
incl
call
mov
sub
ljmp
cmp
add
lret
xchg
rcll
cmp
adc
mov
dec
lcall
sub
add
cmp
add
pop
lods
jns
xchg
push
add
imul
add
fildll
inc
add
add
repnz
pop
add
add
incl
repz
add
push
add
add
sub
cmc
dec
xchg
cmpsl
add
mov
movsb
add
xchg
adc
push
lds
icebp
cltd
jecxz
add
call
mov
add
and
in
xor
add
sub
mov
ret
add
push
or
add
add
pushl
push
cmp
nop
addl
jecxz
mov
mov
add
add
jmp
add
push
add
inc
add
inc
add
das
scas
add
icebp
sahf
adc
call
cmp
inc
add
repnz
addb
jno
incl
add
inc
add
icebp
jmp
push
lea
add
in
inc
add
movsb
add
ljmp
lret
lcall
add
jae,pn
lcall
ja
mov
cmpsb
add
popa
add
dec
lret
movsl
add
add
add
call
xor
cmp
decl
insb
leave
lret
sti
mov
add
add
addb
pop
add
add
xlat
and
out
push
add
sbb
fldcw
or
jnp
add
repz
jnp
add
ljmp
push
cmp
jmp
add
rolb
gs
cmp
jmp
add
loope
or
dec
ficompl
sub
ret
add
xor
outsl
jbe
sbb
mov
rep
and
mov
decl
int3
xchg
in
add
pushl
out
ret
mov
add
mov
inc
add
adc
add
push
add
sbb
xchg
movb
add
fwait
xchg
sbb
add
xchg
mov
into
out
icebp
jp
mov
repz
add
call
sti
fidivs
hlt
add
pushl
rolb
sub
dec
sub
dec
xchg
adc
call
add
loopne
lcall
ret
add
add
sub
add
mov
lret
add
mov
repnz
popf
xchg
out
add
ljmp
xchg
es
pop
sbb
dec
sarb
fwait
xchg
lcall
add
addb
arpl
decl
lahf
mov
outsb
jmp
rcll
jno
dec
ja
cli
fdivrs
sub
add
jge
enter
aaa
cld
jp
add
xchg
ljmp
incl
add
jmp
outsb
cwtl
mov
add
shr
pop
or
movsb
add
iret
inc
add
push
add
jne
lds
scas
lods
ds
add
inc
add
lds
add
xchg
out
xchg
dec
xchg
enter
dec
dec
pmaxsw
and
add
clc
push
notl
fmull
mov
cmp
add
in
icebp
aad
popa
add
ja
fiadds
pop
repz
call
jo
ljmp
sbb
adc
mov
add
and
jmp
aaa
mov
push
add
push
nop
cltd
lods
test
dec
and
jmp
add
rcr
inc
add
add
addb
add
in
or
add
aaa
out
std
gs
add
sub
test
pushl
call
ja
sbb
or
add
and
inc
add
add
dec
jg
add
test
stos
fsubr
arpl
pushl
int3
mov
add
jnp
stc
loope
jge
cwtl
cmp
and
nop
test
mov
insb
xchg
cmpsl
add
xchg
add
decl
sbb
xchg
fstpl
fdivrp
fildll
ljmp
pop
inc
add
pushl
xor
sub
lock
add
add
add
mov
cmpsl
add
add
mov
add
inc
add
jbe
add
call
fsts
call
add
mov
loop
daa
add
std
insl
mov
adc
add
add
jns
bound
call
sahf
mov
jp
mov
repz
cmp
sub
fcmovne
roll
test
push
add
les
inc
add
popa
add
testl
nop
and
call
and
cmp
fnsave
add
xor
pushl
repnz
inc
add
notl
add
es
add
fcom
insl
sub
jp
add
sub
xchg
mov
sub
add
sub
pop
inc
add
pop
mov
add
cmpsl
add
out
sbb
incl
add
faddl
cmp
add
shrb
add
decl
add
jmp
mov
inc
add
jmp
cli
cmp
test
jecxz
xrelease
add
push
mov
divb
decl
inc
add
add
mov
ret
dec
les
in
ds
lock
mov
out
testl
mov
adc
or
xchg
imul
loope
mov
add
mov
mov
add
jmp
add
outsb
les
push
add
add
xchg
cli
cmp
icebp
inc
add
in
push
data16
xchg
jb
cli
out
roll
call
lods
lret
testb
add
insb
shrd
mov
cmc
and
cwtl
and
fmull
clts
add
and
xor
dec
and
ljmp
jl
xchg
jno
jmp
add
es
add
fbstp
xchg
pop
pop
xor
jmp
add
add
jmp
cmc
cmp
and
adc
add
or
nop
fmuls
add
sbb
add
add
fldenv
ljmp
mov
xchg
jp
and
decl
add
add
jl
add
ljmp
sbb
dec
adc
add
loop
and
call
lcall
add
jle
inc
add
mov
add
mov
mov
inc
add
push
jo
fsubr
scas
movb
add
push
dec
mov
enter
push
fsubrl
add
fidivrl
clc
sbb
xchg
loop
xchg
aam
push
mov
add
cwtl
gs
adc
jmp
push
xor
ljmp
movsb
add
pushf
add
add
add
jmp
add
rdtsc
add
pop
adc
inc
add
out
int3
sub
add
mov
aas
insl
dec
mov
pop
xchg
sub
js
in
pop
cld
stc
pop
jp
movsl
add
jmp
mov
mov
fcomp
stos
cmpsl
add
jo
lcall
out
mov
imul
into
add
jo
jnp
fisubl
pushl
sub
pushl
add
sti
push
add
rolb
inc
add
add
add
sbb
add
lds
xor
push
cmp
add
stos
hlt
inc
add
test
lods
xchg
inc
add
add
rolb
add
add
sub
dec
xchg
cld
push
mov
add
add
jp
fiaddl
add
lock
add
daa
add
jg
in
jmp
iret
cmp
push
loopne
mov
pop
dec
xchg
lret
call
jmp
adc
sbb
and
aas
push
jmp
add
xlat
fstpt
insb
mov
add
xchg
mov
add
jb
call
add
stc
adc
lcall
push
cmp
xor
jmp
imul
jno
lcall
add
add
add
lcall
add
jns
add
call
add
decl
push
add
dec
shrl
aam
adc
pushl
add
enter
das
rcrb
add
jmp
data16
add
xchg
inc
add
push
inc
add
loopne
jmp
std
dec
adc
lcall
fnsave
add
dec
push
add
or
sbb
lea
add
push
neg
mov
aam
out
push
add
imul
and
jns
or
add
out
xchg
mov
jbe
add
loope
pop
push
data16
jns
dec
adc
decl
cli
ljmp
cli
jne
push
out
sub
add
fucomi
and
lcall
add
inc
add
mov
fiaddl
add
leave
or
jmp
adc
jmp
test
decl
movb
lods
xchg
cmc
test
add
push
add
loopne
mov
add
add
fisubrs
jl
ja
stc
ret
add
loope
repz
jle
addb
add
hlt
sub
mov
adc
incl
mov
add
rclb
pop
pop
clc
mov
xchg
and
incl
add
incl
add
cli
jne
add
add
data16
je
push
stos
mov
loopne
shlb
jmp
pushl
add
cmpsb
add
out
dec
mov
add
stos
pop
iret
hlt
xchg
xor
lcall
and
decl
add
add
loope
ljmp
sub
add
lcall
lret
inc
add
jnp
movl
add
decl
add
add
hlt
ds
dec
lds
imul
mov
mov
xchg
fldcw
sbb
push
shl
inc
add
push
add
push
add
mov
add
add
mov
jg
add
xchg
stos
fists
jmp
add
add
ret
add
add
add
cmp
add
dec
fildll
daa
add
add
fistps
addl
arpl
jmp
lcall
stc
push
and
lcall
xor
jmp
xchg
jbe
add
add
jns
xor
add
test
in
sub
insl
xchg
fcompl
rolb
sub
pop
add
dec
cmc
stc
jmp
add
mov
cmp
add
add
movl
inc
add
pushl
and
push
loopne
jmp
ficompl
dec
sbb
inc
add
push
add
or
pop
repnz
in
cmp
add
add
mov
sub
add
add
add
add
mov
xchg
jae
lcall
add
add
repz
add
add
jmp
dec
popa
add
cmpsl
add
lods
cwtl
fisttpll
fisttpll
test
ja
jg
jns
mov
mov
add
mov
inc
add
xchg
push
aaa
pushf
sub
bound
out
test
addb
stos
sbb
add
add
lcall
xchg
mov
stos
push
addl
adc
call
inc
add
push
add
xchg
and
jp
add
repnz
sbb
add
add
mov
push
add
nop
xchg
pop
es
mov
xchg
inc
add
push
adc
xor
incl
add
stc
ja
mov
aam
sub
add
lcall
add
addl
add
sub
test
xchg
mov
inc
add
jb
incl
add
xchg
cmpsb
add
xchg
mov
dec
out
loopne
push
add
mov
fwait
addl
in
xchg
xlat
cld
push
push
add
add
xor
dec
jp
ror
xchg
stc
cmp
mov
cmpsb
add
jmp
add
add
xchg
xchg
in
int
mov
mov
add
adc
incl
lcall
or
add
mov
cmpsb
add
rcl
cld
rol
add
test
pop
cli
iret
cs
and
incl
out
lcall
call
cmp
inc
add
xchg
push
jp
fdivrs
xlat
sbb
leave
cltd
adc
lcall
push
xchg
push
gs
lret
sbb
fcomps
add
in
add
xor
add
negb
inc
add
add
add
xchg
or
add
dec
sub
iret
sub
sub
add
mov
add
incl
dec
rolb
mov
add
dec
pop
testb
add
pop
test
mov
add
pop
dec
push
add
push
add
sti
stos
sbb
add
add
fldcw
unpckhps
mov
ret
add
add
cwtl
ret
add
call
add
stc
or
int3
add
fistps
lods
adc
call
add
shrb
rolb
mov
in
mov
add
add
shl
add
add
loop
lret
incl
push
add
add
insb
add
lret
xlat
nop
imul
cmpsb
add
add
pop
aas
xchg
or
pop
psllw
pushf
adc
ljmp
jmp
ljmp
push
add
and
incl
fildl
stos
insb
inc
add
dec
cmp
leave
iret
add
jnp
add
pop
lods
shrb
decl
add
addb
add
mov
pop
ficomps
sub
adc
mov
inc
add
sbb
and
mov
add
add
addb
std
sahf
in
ljmp
stc
cmp
std
mov
outsb
in
xor
call
repnz
pop
mov
adc
lcall
xchg
daa
add
mov
add
pop
add
fnstcw
adc
ljmp
insl
pop
loopne
ljmp
xor
lcall
add
call
push
add
mov
add
lcall
adc
out
sub
add
jne
add
pop
out
pop
xor
push
add
fisubl
incl
mov
xor
add
stc
and
jmp
movsb
add
xchg
xchg
xchg
aad
mov
out
in
push
add
push
add
dec
lahf
dec
push
sub
dec
js
add
add
roll
xlat
fsubs
dec
xchg
dec
imul
add
jnp
cld
icebp
aaa
lahf
jo
cmp
pop
jmp
add
add
arpl
jmp
mov
add
das
fdivl
mov
xchg
and
lcall
addb
add
enter
xrelease
add
xchg
mov
add
inc
add
sbb
pop
mov
adc
bound
fimuls
fists
pusha
add
pop
pop
ret
add
hlt
mov
jmp
add
add
out
push
add
mov
mov
push
and
fists
add
mov
jo
dec
gs
or
sub
xlat
addb
add
outsl
mov
stos
lock
xor
pushl
xchg
jne
lahf
lods
lea
add
repz
loop
es
outsl
mov
add
cwtl
aas
add
add
pop
mov
add
outsb
mov
add
mov
aaa
ret
add
inc
add
jge
pop
add
rol
add
dec
in
out
adc
call
rolb
add
add
ss
lea
add
add
add
movb
add
jne
add
sti
push
add
jbe
les
roll
inc
add
sbb
and
cmpsb
add
scas
push
add
inc
add
fcomps
inc
add
add
adc
sahf
cmpsb
add
sub
add
xchg
je
or
lret
xor
mov
cmp
add
movb
sbb
addb
add
sub
jmp
cs
mov
imul
dec
scas
add
outsb
lret
and
fadd
add
cmpsb
add
cmp
add
add
adc
call
add
movsl
add
push
repnz
adc
inc
add
add
mov
out
and
lcall
add
call
fdivr
in
jo
ljmp
cltd
mov
add
movb
pop
lret
das
push
int
mov
jp
stos
sub
cmp
and
mov
out
mov
add
xchg
mov
mov
movsl
add
clc
bound
jmp
add
add
and
mov
pushl
ja
adc
std
jg
add
call
pop
add
add
add
aaa
lods
loopne
xchg
mov
xchg
in
jl
add
add
aas
adc
ljmp
add
ljmp
mov
setne
mov
cmp
add
jle
outsb
add
lcall
in
cmp
add
decl
addb
popf
test
sub
scas
sub
sbb
decl
xlat
add
jl
xchg
lods
xchg
mov
js
mov
sbb
add
cmp
xor
lcall
add
cmpsl
add
test
and
xchg
adc
call
add
fimull
cs
push
push
add
add
add
lcall
add
inc
add
xor
call
add
jmp
add
jmp
add
ret
jecxz
mov
arpl
jle
rolb
sarb
unpckhps
repz
add
mov
out
imul
jnp
outsb
jae
jmp
in
addb
add
add
decl
int3
mov
add
aad
add
mov
add
pushl
add
jae
lcall
inc
add
jnp
sub
hlt
repz
shrl
aaa
xchg
sbb
test
add
and
jmp
add
pop
mov
add
int3
inc
add
mov
lea
lock
add
jmp
add
add
lahf
xchg
add
incl
in
arpl
ljmp
add
popa
add
repnz
xor
add
mov
lds
or
dec
pop
call
add
adc
pop
js
xchg
insb
cli
pop
push
mov
inc
add
xchg
sub
cmp
add
inc
add
add
xchg
mov
movl
add
add
xor
decl
add
outsb
push
addb
leave
mov
add
stc
jbe
mov
incl
and
jne
cmp
add
add
test
pushl
sti
mov
popf
repz
jne
jae
lcall
bound
cmp
add
clc
enter
adc
clc
inc
add
adc
pushl
add
mov
cmpsb
add
jecxz
mov
dec
mov
push
add
sahf
mov
add
mov
mov
inc
add
adc
lcall
add
repz
push
testl
add
lcall
ret
lods
jmp
xor
pop
push
aas
xor
xor
lcall
xchg
sbb
sub
add
add
pusha
add
pop
nop
inc
add
add
add
add
mov
dec
jnp
ja
pop
lock
jmp
add
stos
dec
icebp
mov
sti
addl
add
aaa
pop
sbb
int3
stos
cs
add
push
decl
add
fchs
add
adc
add
in
cmpsl
add
xor
pushl
add
call
pushl
push
xlat
cmp
sbb
or
pushf
xor
pushl
add
ja
add
or
add
stos
push
add
clc
mov
scas
or
call
test
in
adc
stos
incl
pop
ficoml
jmp
add
add
or
fwait
lret
add
ljmp
push
add
add
add
imul
leave
jae
jmp
add
inc
add
xor
lcall
aam
add
insb
jmp
pop
add
jl
jg
add
add
mov
out
xchg
lods
lcall
sahf
das
sbb
push
add
mov
add
repz
test
loop
lods
and
lcall
add
nop
imul
add
popa
add
mov
insb
add
xlat
or
pop
mov
lcall
dec
in
cmpsl
add
and
daa
add
outsl
movsb
add
pop
in
sahf
in
int
lret
cmpsb
add
sahf
bound
decl
add
xchg
inc
add
movl
insb
jmp
and
call
pop
add
add
test
mov
xchg
and
push
dec
sbb
movsb
add
out
cmp
jge
xor
jmp
add
add
lahf
or
fsubs
xchg
addl
loop
inc
add
decl
add
lock
add
addb
jns
add
decl
xor
jmp
add
add
push
add
inc
add
add
incl
incl
add
cwtl
add
jge
jne
cltd
addl
or
xlat
mov
mov
add
add
add
add
mov
dec
pop
add
add
adc
mov
add
lcall
add
push
out
rcrl
outsl
ds
add
add
inc
add
cs
movsl
add
adc
add
nop
push
rolb
ja
loopne
adc
push
loop
mov
add
pushl
add
xchg
add
into
sbb
add
pushl
lcall
mov
push
sub
decl
add
or
add
loop
inc
add
mov
je
add
call
adc
pushl
and
ljmp
sahf
test
and
testl
mov
test
add
pop
push
shll
call
out
sbb
aad
in
pop
push
add
lret
mov
pushl
inc
add
in
cmp
mov
jae
decl
dec
push
add
dec
daa
add
add
add
aam
add
push
add
repnz
cmp
inc
add
incl
push
std
in
inc
add
sbb
popa
add
jl
add
add
nop
pop
int3
jl
adc
in
leave
add
decl
mov
add
jmp
fimull
and
push
aam
addl
jle
cmp
jne
add
popa
add
xor
call
cmpsl
add
rcrb
mov
add
fistps
jb
call
dec
adc
lcall
jmp
add
inc
add
push
add
or
popa
add
sbb
cs
pop
out
xor
ljmp
sbb
jne
lods
hlt
scas
fstpl
lahf
cwtl
mov
hlt
repnz
adc
add
sub
add
les
inc
add
xchg
jo
lcall
push
add
inc
add
mov
adc
lcall
pop
push
clc
mov
les
xchg
movsl
add
lods
outsb
and
lret
icebp
or
or
xchg
cwtl
mov
cmp
decl
pop
pop
je
nop
mov
and
call
aam
sti
mov
jge
add
test
fiadds
add
out
add
ljmp
xor
call
sti
cmp
add
add
add
repnz
add
je
add
push
pop
sahf
and
in
add
repz
test
in
xor
jmp
pop
xor
pushl
push
add
inc
add
gs
add
add
add
fnsave
add
mov
add
rolb
cmp
pushl
add
add
lock
add
popa
add
daa
add
add
push
add
lods
lret
aam
add
mov
add
or
imul
mov
cwtl
push
add
notl
sti
pop
mov
add
pop
call
add
aas
inc
add
ljmp
psrad
xchg
test
pop
lea
test
jo
decl
stos
ret
add
push
sub
jmp
mov
dec
xchg
cld
lahf
mov
in
scas
ret
jg
xchg
xchg
jnp
out
dec
aas
xor
insb
sbb
jns
jbe
add
pop
aaa
js
ds
pop
popa
add
test
call
add
fdiv
cmp
add
js
add
jmp
pop
push
lea
ret
add
cmp
sub
add
and
addb
lret
push
add
add
lods
je
xchg
fwait
js
add
pop
cli
mov
test
mov
pop
sub
lahf
pop
lret
add
inc
add
dec
ljmp
dec
mov
bound
cli
xor
call
aaa
push
add
loopne
add
incl
lahf
call
stos
hlt
ljmp
imul
cmp
loopne
jp
add
dec
int3
jo
dec
mov
adc
das
dec
dec
cld
fcomps
add
lcall
add
ljmp
fiadds
add
shll
call
inc
add
add
push
fstps
mov
ret
sarl
jge
gs
adc
call
cmpsl
add
lret
dec
push
add
inc
add
ret
add
scas
sbb
add
push
push
add
pop
and
mov
je
roll
and
fiadds
xchg
adc
incl
mov
test
xchg
les
push
pusha
add
lods
fistpl
add
xchg
shrb
jmp
add
insl
int
mov
lret
push
cltd
jge
add
jle
push
call
push
sub
aam
add
cmovl
popa
add
push
sti
lahf
add
jmp
out
sub
push
daa
add
pop
mov
add
sub
jmp
sub
fs
add
add
xor
js
add
pushf
loopne
aad
dec
inc
add
push
add
imul
dec
loop
dec
aam
cmp
lret
data16
add
iret
mov
and
call
add
fcmovne
cmpsb
add
ja
xchg
popf
inc
add
ljmp
pushl
add
sub
insl
xchg
dec
pop
mov
add
sbb
dec
mov
cmc
mov
cmp
fidivl
cmc
enter
stc
sti
dec
pusha
add
inc
add
sbb
push
mov
adc
pushl
stc
fwait
mov
sub
add
sub
pop
pop
sub
jg
lock
cmp
mov
repnz
jae
lcall
aad
push
add
push
lods
inc
add
add
call
cmpsl
add
or
shl
add
pushl
xlat
xchg
adc
fdivs
sub
add
incl
movl
insl
es
pop
int3
mov
ljmp
and
mov
ja
in
arpl
decl
pop
lcall
lahf
pop
adc
inc
add
add
lea
jle
mov
add
jo
decl
das
or
add
adc
cld
pop
mov
jecxz
and
in
xor
jmp
mov
push
cmc
lret
add
stc
lahf
imul
adc
incl
add
movb
add
mov
loope
in
idivl
jp
add
or
xchg
mov
adc
push
and
push
add
stos
addb
sarl
add
adc
lcall
add
add
add
lcall
and
jo
fstps
or
iret
notl
sub
add
cmpsb
add
daa
add
decl
pop
cmp
xor
mov
int3
cmp
add
cmpsl
add
addl
insl
jp
xor
decl
cmp
sub
add
mov
call
dec
jp
ret
jne
add
leave
ret
mov
bound
jmp
lcall
loopne
mov
ljmp
mov
ljmp
sub
out
xor
jmp
add
fistpl
add
cmp
cmp
scas
inc
add
mov
daa
add
add
add
popa
add
rolb
add
roll
pop
lcall
pop
add
out
fcos
cld
add
inc
add
cmp
add
adc
pushl
scas
push
add
xchg
hlt
sub
sub
add
mov
in
addl
movl
add
out
mov
add
loope
pop
sahf
add
jmp
sti
cmp
cmp
call
add
pop
lret
dec
xchg
sub
mov
incl
sbb
jle
push
add
aas
push
or
xor
call
add
lret
inc
add
rcrb
lcall
add
mov
cmpps
push
rolb
jg
daa
add
cmp
add
add
sub
add
decl
cmp
add
addb
add
daa
add
cmp
pop
pop
ljmp
mov
fidivrs
add
push
pop
addl
add
add
inc
add
add
decl
movb
add
add
ljmp
mov
add
arpl
inc
add
decl
cltd
fdivs
call
popa
add
daa
add
add
jae
mov
das
and
ljmp
push
push
add
pop
sub
out
movsb
add
and
cmp
sti
jo
call
add
cmp
add
call
lcall
pop
inc
add
popf
xor
inc
add
pop
xchg
fistl
inc
add
adc
ljmp
out
push
mov
add
or
roll
push
xor
pushl
adc
mov
cmc
mov
push
js
add
inc
add
insl
dec
cwtl
inc
add
test
fwait
loope
fdivrl
fldenv
mov
fdivrs
add
mov
mov
xchg
test
pushf
sti
imul
fwait
xchg
push
or
add
add
sbb
test
imul
incl
add
add
push
xchg
in
lods
push
xlat
sbb
add
sbb
add
mov
fsubl
lcall
aam
les
inc
add
add
add
insl
movb
nop
mov
jmp
add
add
ljmp
iret
data16
mov
and
add
stos
xchg
cmp
add
add
add
cmc
rolb
add
sub
mov
aam
add
loop
push
add
fstl
add
xor
ljmp
push
add
cmp
add
adc
sub
movsb
add
jae
decl
adc
add
and
movb
inc
add
push
add
sbb
add
add
jg
fldl
lcall
xchg
sub
call
movb
pushf
mov
add
pop
in
cmpsl
add
add
pushf
stc
lods
pop
test
mov
add
push
add
pop
xchg
cli
mov
sbb
cwtl
xor
ljmp
ljmp
pop
sbb
add
xor
cmp
std
fstl
loope
and
call
add
inc
add
add
add
outsb
pop
test
cmpsb
add
add
add
ljmp
lock
out
mov
mov
add
lcall
movl
mov
push
xchg
jne
dec
inc
add
lods
rcrl
add
in
push
dec
or
add
inc
add
decl
in
mov
add
ret
push
lret
xchg
xor
call
fmull
add
outsl
dec
sbb
add
push
add
adc
lcall
cmp
push
add
loop
addl
xor
jge
int
test
sub
add
dec
push
add
icebp
mov
out
fcompl
add
stos
jb
call
incl
mov
add
ljmp
add
jnp
push
scas
or
add
rolb
stos
addl
add
pushl
add
stc
add
cld
aam
leave
std
jae
incl
call
insl
enter
add
incl
add
add
sbb
jbe
pop
sub
add
test
dec
loopne
add
in
enter
add
mov
push
das
outsb
mov
add
lock
mov
push
jle
inc
add
add
pop
add
icebp
mov
add
out
jmp
mov
jnp
stos
fwait
or
add
sub
das
loop
xor
call
inc
add
jnp
in
bnd
inc
add
xchg
aaa
sbb
fiaddl
leave
fbld
inc
add
add
and
dec
jecxz
stc
and
push
or
add
dec
mov
pop
iret
lds
lock
outsb
ret
add
add
call
pushl
add
cmp
mov
add
rolb
add
push
add
repnz
rolb
ss
xchg
inc
add
push
add
add
mov
outsb
add
incl
add
cmp
add
jmp
hlt
cwtl
jl
add
shll
jmp
mov
lret
sbb
in
scas
test
add
mov
add
pushl
jmp
cmpsl
add
roll
pop
inc
add
data16
das
jge
add
imul
inc
add
add
les
cli
stc
push
add
sti
bound
incl
push
es
and
add
add
sbb
push
fwait
sahf
leave
and
inc
add
repnz
add
cmp
nop
loope
addl
loopne
cmpsl
add
dec
xchg
xchg
pop
enter
add
add
cmp
pushl
ficomps
cmp
add
add
inc
add
cmp
out
xchg
fwait
jg
repz
add
push
add
insb
gs
jp
push
add
inc
add
popa
add
out
xchg
aas
mov
addb
outsb
lds
jbe
mov
lahf
stos
dec
mov
sbb
popf
push
jae
lcall
push
dec
mov
add
mov
mov
hlt
xor
ljmp
lcall
aam
lds
test
bound
incl
push
push
add
enter
sub
decl
scas
cwtl
dec
roll
add
push
add
and
ljmp
ffree
add
xor
lcall
out
lahf
jge
add
xchg
das
movsl
add
xor
decl
add
in
mov
pop
jnp
add
cli
stos
in
or
rorl
xor
out
xor
pushl
add
dec
jo
pushl
jae
mov
add
push
push
xor
test
js
jnp
add
push
add
test
lcall
add
add
std
mov
cmp
inc
add
pop
add
jmp
add
cld
aas
push
add
add
dec
outsl
cwtl
adc
ljmp
sahf
out
addb
add
pop
lahf
mov
add
mov
cmp
mov
dec
add
and
js
add
add
xchg
sbb
add
out
fs
mov
push
add
fmul
and
in
push
mov
xlat
sub
add
sub
pusha
add
mov
push
divl
cli
nop
lods
rcr
sub
idiv
js
scas
out
xor
jle
lods
dec
int
jne
or
mov
addb
pop
in
pop
inc
add
mov
jae
jns
add
inc
add
nop
addr16
add
nop
shrl
push
add
xlat
xchg
pop
or
sbb
add
adc
add
ljmp
mov
jl
add
std
ljmp
add
mov
fildl
add
imull
loop
movsb
add
push
xchg
xchg
push
add
mov
mov
mov
add
push
imul
cwtl
movups
dec
fwait
das
xchg
bound
data16
dec
addb
pop
das
rcll
in
or
xchg
movl
cld
xor
push
xchg
push
add
call
sbb
lods
sbb
das
addb
cmp
sub
ljmp
mov
cmpsl
add
sub
fadds
add
add
jb
lcall
add
sbb
movb
add
ljmp
add
stos
sbb
add
adc
out
lret
xor
add
push
dec
daa
add
add
add
xchg
mov
call
pushl
add
pop
adc
in
arpl
decl
sub
add
push
add
sbb
xor
lcall
push
dec
outsb
jae
lcall
sub
icebp
mov
add
add
add
or
add
add
pop
daa
add
sbb
add
mov
add
xchg
cmpsb
add
in
push
in
insl
inc
add
decb
dec
pop
jno
decl
add
jg
fsubl
incl
add
sub
inc
add
cmpsb
add
add
addr16
mov
pop
sbb
push
adc
mov
lcall
add
add
xchg
js
add
push
add
push
jnp
sbb
stos
push
add
dec
push
imul
jg
add
and
in
fisubs
call
shlb
and
jnp
mov
add
das
aas
mov
inc
add
cltd
call
dec
jne
xchg
lea
mov
add
sbb
add
adc
incl
sbb
add
add
lcall
jbe
jp
mov
add
scas
jae
push
ja
add
adc
inc
add
add
mov
mov
add
push
lret
lods
mov
jmp
call
cmp
pusha
add
add
add
jmp
add
sbb
inc
add
lret
movl
out
call
insb
or
js
pop
add
fdivs
add
xchg
lea
outsb
int3
push
inc
add
je
add
decl
addps
fmuls
out
push
add
inc
add
add
xchg
adc
stc
out
sub
movsl
add
addb
icebp
mov
add
addb
fdiv
mov
add
and
ljmp
ljmp
adc
jmp
ljmp
mov
add
and
call
jo
jmp
xor
ljmp
imul
inc
add
mov
mov
cmp
inc
add
scas
cmp
insl
cmp
add
push
arpl
pushl
cld
mov
ljmp
sub
or
jge
add
add
add
add
jne
add
inc
add
mov
test
movsb
add
cmp
add
bound
jmp
cli
adc
incl
add
add
lock
add
cmp
add
add
mov
sti
mov
test
mov
mov
cmpsb
add
add
mov
movsl
add
mov
add
push
lret
push
jb
call
decl
mov
imul
lahf
aam
add
or
je
dec
repz
insl
push
leave
jo
call
mov
hlt
cld
mov
repz
add
outsb
in
ljmp
cmp
decl
xchg
out
mov
lds
mov
push
or
lcall
pop
jle
jae
fmulp
xchg
add
pushl
jl
add
lods
mov
add
test
hlt
pop
leave
dec
xor
aam
add
lcall
add
xchg
int
add
jmp
rcl
jle
adc
pushl
fwait
mov
hlt
inc
add
cmpsl
add
ret
add
add
jmp
lods
ljmp
push
les
fs
jbe
add
in
xchg
lahf
mov
cmc
iret
idivl
xchg
mov
add
sahf
sub
add
and
jmp
lods
aaa
dec
pusha
add
pushf
xor
jg
add
mov
jp
cs
jbe
add
and
fldlg2
sbb
ds
mov
decl
icebp
cld
insl
outsl
xlat
aas
add
cmp
addl
add
jge
mov
scas
dec
or
add
add
loope
fst
lret
sahf
js
pminsw
jg
add
insl
mov
add
mov
arpl
decl
add
call
jnp
or
decl
dec
dec
repz
out
outsb
out
inc
add
shrb
mov
outsb
inc
add
pop
les
xor
cmp
lock
jmp
add
add
add
mov
lods
inc
add
divb
push
jne
add
ss
incl
add
dec
and
call
fistl
mov
loope
sub
pushl
jmp
add
add
push
inc
add
stos
mov
xchg
mov
call
jg
add
add
cmc
mov
add
xchg
mov
inc
add
jecxz
sub
fcmovb
add
inc
add
jno
call
jmp
adc
lcall
lods
roll
decl
push
add
ljmp
mov
aam
add
into
xor
call
cmp
or
sahf
scas
or
decl
iret
xchg
jnp
sbb
add
add
inc
add
cmp
add
movsl
add
sbb
cld
jl
add
add
ljmp
imull
mov
dec
adc
incl
add
in
loopne
xchg
push
mov
inc
add
insb
lock
xchg
pusha
add
fstps
test
adc
jmp
add
psllw
add
mov
lcall
lds
enter
push
ljmp
sbb
mov
ljmp
dec
out
in
push
popf
dec
aas
xor
lcall
add
mov
ret
les
cmp
in
jb
lcall
into
cmc
mov
ret
jo
pushl
add
es
out
jnp
lret
cli
loop
ljmp
roll
pop
pushf
enter
mov
add
ror
mov
xchg
add
decl
add
hlt
loop
jp
mov
add
or
cwtl
jg,pt
add
sub
incl
add
hlt
mov
pushl
add
fbstp
cwtl
dec
or
mov
xchg
xchg
or
xchg
aaa
pop
xor
jmp
insl
loopne
sub
leave
push
add
add
pusha
add
add
out
xchg
pop
xchg
xlat
enter
addb
push
jg
push
jl
fidivl
cli
jge
add
add
jmp
jle
mov
sub
out
mov
out
and
pushl
mov
or
add
jmp
ss
add
mov
mov
das
test
lret
mov
add
popa
add
add
call
add
jo
ljmp
sahf
pop
mov
jmp
add
adc
lcall
or
icebp
mov
add
movl
movl
shrb
ja
jmp
pushl
and
decl
aam
sbb
jb
mov
add
mov
lret
pop
push
repz
add
add
mov
outsl
clc
push
out
mov
mov
sbb
add
push
lds
addb
jl
add
fisttps
mov
arpl
decl
add
mov
sbb
jns
mov
add
and
jl
cmp
je
add
out
and
pushl
add
scas
pusha
add
pusha
add
out
cmpsl
add
rcrb
adc
inc
add
push
lcall
loop
cmp
out
ds
popa
add
popf
sbb
jmp
add
xor
popf
movl
ljmp
clc
les
daa
add
pop
ret
add
lret
jbe
test
or
imul
add
xor
adc
incl
imul
test
icebp
cltd
pop
aam
mov
gs
insb
loop
addb
add
adc
std
cmc
mov
jb
inc
add
addb
pop
pop
pop
xchg
inc
add
add
cwtl
mov
add
xor
lcall
add
cmpsb
add
popa
add
mov
sub
call
add
stc
adc
call
dec
lods
dec
pop
ret
add
loope
lock
ss
shll
add
idiv
test
rcrl
sub
clc
jnp
aad
add
ss
add
ljmp
add
out
rcr
clc
push
fcom
mov
pushl
fldcw
sub
pop
jne
push
xchg
imulb
add
or
mov
mov
imul
lret
insb
cmc
mov
add
or
mov
sub
sbb
cmpsb
add
neg
js
add
aad
pushf
or
adc
pushl
ja
add
sbb
call
add
dec
pop
aam
mov
in
loopne
mov
add
test
or
jo
decl
add
mov
and
out
loopne
test
add
lahf
mov
int3
and
call
lcall
adc
add
cmp
dec
inc
add
add
push
push
mov
cltd
mov
add
call
js
sub
pop
sub
add
jp
addb
roll
sarb
push
lahf
mov
les
fwait
and
lcall
cltd
in
test
lcall
xor
decl
xor
jmp
add
out
mov
mov
xlat
cmpsb
add
pushl
add
fucomi
xor
call
es
and
ljmp
fcomip
cmp
movsb
add
cmp
add
cmp
add
push
data16
add
jbe
add
int3
cmpsb
add
std
add
ja
add
jle
sbb
add
ficomps
mov
js
xor
pushl
lcall
add
add
mov
jne
add
mov
fsts
dec
aad
mov
das
sub
jmp
add
jecxz
enter
and
jmp
add
mov
xchg
mov
cmpsl
add
lea
dec
cmp
mov
cmp
add
test
loop
mov
ja
jbe
dec
movb
push
add
out
mov
iret
or
ljmp
outsl
call
call
add
add
lcall
or
addb
add
decl
in
popa
add
lea
dec
add
mov
add
mov
add
mov
mov
xchg
and
int3
fdivl
lcall
lods
cmp
push
roll
add
mov
std
aad
fwait
cmp
xor
sub
outsl
stos
inc
add
data16
or
xor
test
aam
add
add
add
jne
add
in
loopne
xchg
pop
mov
rorb
int3
mov
jnp
mov
xchg
mov
mov
push
xchg
adc
jmp
push
pop
add
addb
loop
roll
mov
add
add
incl
add
xor
call
out
mov
jmp
add
add
mov
add
sbb
push
add
cmpsb
add
mov
sahf
rclb
ljmp
push
cmp
movb
mov
in
ficoms
jl
jno
incl
add
in
add
cmpsb
add
sbb
fimull
mov
mov
adc
pushl
lcall
sbb
dec
aam
sbb
xchg
bound
incl
cmp
mov
dec
push
add
push
add
dec
push
mov
sbb
pop
in
jnp
movb
pusha
add
les
fdivl
push
ljmp
add
add
push
dec
add
push
add
or
pushl
ljmp
sub
add
cld
ds
bound
ljmp
xchg
xchg
notl
add
jbe
add
add
repz
sub
or
scas
pop
rclb
movl
add
lcall
add
out
mov
adc
fiadds
ljmp
mov
fwait
push
add
xchg
int3
out
cld
push
add
add
imul
add
aam
inc
add
add
addb
leave
mov
sbb
add
add
dec
call
arpl
incl
adc
jge
scas
adc
mov
push
add
popf
jne
rolb
inc
add
outsl
mov
mov
or
dec
and
decl
add
or
insl
jecxz
pop
loop
cmp
idiv
hlt
pop
mov
ljmp
adc
jmp
add
jb
dec
sbb
incl
pushl
ds
add
xor
add
popa
add
cwtl
mov
add
nop
rolb
sub
fsubs
add
pop
movsl
add
outsl
sbb
add
inc
add
pop
aaa
push
stos
push
aas
bound
jmp
add
lret
movl
out
outsl
jecxz
call
sbb
pop
mov
add
sti
or
daa
add
and
pushl
inc
add
push
and
aam
pop
bound
call
add
data16
aaa
and
decl
clc
stc
mov
cmp
mov
cltd
xor
jmp
add
daa
add
dec
dec
mov
add
sub
aas
mov
jmp
add
push
mov
addb
add
call
addl
add
pop
loope
sbb
add
pop
out
xchg
add
add
loop
lods
cs
nop
or
pushl
add
jns
js
mov
push
add
jmp
mov
push
add
jbe
add
mov
add
push
xor
jmp
jg
inc
add
or
lret
xor
ret
add
add
mov
cmpsb
add
mov
cmc
xor
incl
add
add
jg
addb
add
lcall
out
xchg
repnz
arpl
incl
shr
xor
jmp
inc
add
push
add
mov
jbe
jae
ljmp
add
pop
dec
push
in
sub
add
add
mov
leave
std
pop
mov
jge
add
aam
ljmp
mov
dec
adc
xchg
dec
mov
add
incl
repz
sbb
pop
popf
sti
and
inc
add
mov
or
or
lds
push
add
sbb
jno,pt
mov
xor
ds
daa
add
add
sbb
add
push
add
mov
aas
cmc
push
add
sub
iret
out
ja
je
test
sbb
jmp
add
add
push
add
and
xor
pushl
add
ret
add
cmp
push
mov
add
lods
mov
add
aad
pop
aas
cmp
add
incl
add
mov
cmp
add
mov
add
push
add
jmp
inc
add
mov
add
sub
sahf
test
fnstenv
call
cs
js
add
popa
add
movb
dec
icebp
inc
add
dec
cwtl
cwtl
cmp
add
dec
lods
idivl
test
jg
add
add
mov
shlb
les
xor
call
add
fnstenv
add
or
aas
sbb
add
cld
push
add
sbb
movl
movl
int3
test
roll
mov
mov
stos
inc
add
scas
xchg
scas
or
mov
movb
dec
xor
dec
les
movl
insb
add
sub
push
add
mov
xchg
jne
add
enter
les
pop
push
popf
cmpsl
add
add
cmc
sbb
add
add
incl
incl
lcall
ss
add
add
cld
clc
pop
mov
jno
ljmp
adc
out
movl
sarb
jge
pop
jle
add
decl
call
add
or
jl
dec
fwait
cwtl
dec
sub
pop
fdivrp
test
movb
jo
inc
add
mov
ljmp
in
gs
mov
sbb
xchg
inc
add
add
iret
lcall
add
add
int
leave
jg
add
inc
add
add
add
movl
in
pop
leave
idivl
add
add
add
cmp
sahf
in
xchg
and
push
sbb
add
addl
dec
push
jns
add
or
add
pop
je
add
and
mov
cli
pusha
add
outsb
sub
jmp
add
adc
addb
shlb
add
lea
add
inc
add
add
or
leave
push
pop
repnz
sub
add
movsb
add
lods
cli
xchg
insl
data16
fincstp
inc
add
mov
mov
dec
add
incl
mov
dec
rcrl
add
pushl
push
movl
add
and
cmpsl
add
add
imul
xchg
pusha
add
shrl
add
add
mov
sbb
add
clc
stos
mov
fsts
jmp
adc
pushl
add
add
and
lcall
out
lahf
dec
dec
lret
dec
enter
decl
movb
les
popf
and
pushl
mov
div
jp
add
xor
call
push
add
repz
loopne
xchg
jnp
mov
push
mov
icebp
sub
pop
testl
popf
cltd
iret
mov
js
add
add
sbb
sti
push
ja
mov
jmp
add
add
loop
insb
or
push
add
mov
sbb
push
push
jp
add
and
cld
pop
sub
or
add
push
sbb
add
decl
aas
addb
add
push
push
or
pop
sbb
inc
add
insl
out
in
or
add
inc
add
or
test
fstpt
aam
xchg
and
icebp
add
mov
ss
int
push
movl
xor
adc
push
or
imul
insb
add
jnp
test
and
mov
movsl
add
add
add
add
cmpsl
add
ja
push
add
in
or
sub
mov
push
push
sub
daa
add
mov
stos
cmp
sub
add
sub
add
incl
jp
and
adc
lcall
add
iret
push
add
lret
into
xchg
roll
test
insb
test
adc
add
xchg
rorl
cld
sbb
add
cwtl
xchg
rolb
inc
add
mov
add
push
sarb
ljmp
add
popf
mov
mov
addl
aad
lret
addl
adc
mov
add
add
dec
std
mov
test
push
in
call
push
push
fwait
jae
pushl
and
jmp
add
jae
inc
add
add
pop
add
jmp
xchg
or
aaa
push
ror
out
lock
jne
add
call
out
add
call
add
lret
add
fisttpl
jmp
lret
push
add
test
and
clc
push
loope
inc
add
ret
add
mov
add
push
add
mov
add
fimull
fstps
jae
ljmp
push
jg
out
shrl
mov
add
shlb
incl
add
mov
or
add
fldl
roll
add
add
addb
in
mov
test
push
add
cli
add
pop
dec
or
add
add
add
push
fisubrs
push
add
pop
ja
add
fstpt
jecxz
out
jle
add
adc
aas
mov
fmul
test
or
add
cmc
aaa
push
inc
add
add
jmp
xchg
pop
popa
add
daa
add
movl
push
add
add
jns
inc
add
popa
add
fs
insb
int3
mov
addl
sbb
add
mov
lret
add
sub
call
xor
incl
rolb
add
pushl
add
fdivs
add
adc
call
jae
ljmp
pop
rorl
add
inc
add
cmpsl
add
add
add
pop
cmp
aam
add
in
jmp
sub
add
mov
incl
pushl
add
push
add
xchg
fs
fistps
add
cs
sbb
push
add
arpl
ljmp
add
jmp
add
and
jmp
xor
mov
add
cmp
inc
add
add
cltd
rolb
add
ficoms
inc
add
test
ret
add
cmp
jp
add
xchg
add
fildll
add
mov
jp
add
push
pop
jnp
out
mov
in
jge
repnz
scas
iret
and
fwait
add
call
add
add
adc
rolb
les
mulb
add
ret
in
repz
lea
or
clc
movsb
add
mov
add
add
mov
add
add
jmp
add
mov
fisubs
add
lret
sahf
mov
jns
add
mov
roll
jmp
or
xor
call
add
dec
cmpsb
add
movl
jg
add
decl
les
addb
mov
sbb
add
rcl
dec
inc
add
sbb
fistpl
add
inc
add
call
rorl
daa
add
incl
je
mov
add
sbb
or
add
add
loop
stos
sbb
mov
daa
add
add
dec
and
mov
call
sub
mov
add
sub
add
call
inc
add
out
xchg
cmpsl
add
call
repnz
xchg
or
jg
out
fsubrs
push
or
add
push
fcmove
bound
call
add
sbb
addb
add
cmc
outsb
lret
adc
ljmp
sahf
dec
dec
iret
adc
add
add
lcall
incl
mov
add
dec
jecxz
arpl
fldcw
pop
inc
add
push
add
insb
dec
mov
xor
call
add
dec
loop
sub
push
add
shr
stos
jg
adc
pushl
add
hlt
and
decl
add
in
inc
add
and
in
mov
popf
add
add
incl
push
add
or
pop
rolb
idivl
push
adc
xchg
push
add
push
add
cmp
cltd
mov
fwait
rolb
dec
ljmp
push
add
sbb
cwtl
cmc
cltd
xor
call
add
adc
ljmp
dec
add
add
inc
add
cmp
decl
pop
sbb
add
inc
add
outsb
scas
jg
xchg
pop
mov
cmp
call
add
mov
add
mov
pushl
inc
add
ljmp
fsubr
les
inc
add
xchg
addb
add
in
dec
jmp
lock
add
xor
movb
add
adc
lcall
scas
xchg
pop
jns
jb
cmp
pop
pop
add
pop
inc
add
ret
add
add
mov
stos
add
jmp
add
cs
add
sahf
fnstsw
xor
jmp
out
addl
push
xchg
out
loop
lods
sbb
adc
incl
cmpsb
add
iret
xchg
cmp
add
add
add
cmp
fwait
mov
and
call
icebp
pop
aad
repnz
add
adc
jo
cmp
test
dec
icebp
dec
mov
mov
xchg
mov
add
inc
add
daa
add
add
in
mov
into
lods
mov
xor
incl
mov
cmp
insl
sbb
and
jmp
add
add
jne
ret
add
pusha
add
xor
in
xor
add
and
call
inc
add
push
add
inc
add
pop
mov
in
and
or
xchg
pop
scas
scas
ja
or
mov
in
sbb
add
cmp
decl
push
addb
or
add
lcall
pslld
lock
xchg
adc
mov
sbb
inc
add
lahf
movb
fsubrl
fldl
lcall
add
scas
mov
lret
insb
push
add
cli
stos
ror
mov
cmp
add
add
cmp
cmp
add
pop
cmpsb
add
mov
add
enter
add
popa
add
sahf
lret
jb
pushl
ljmp
fidivs
inc
add
add
jmp
add
add
jge
and
ljmp
mov
add
clc
add
pushl
inc
add
push
bound
addl
fcompl
ret
add
cs
jmp
xchg
out
dec
ja
add
pushf
nop
xchg
pusha
add
sub
addb
xchg
add
inc
add
mov
pop
lock
es
mov
add
inc
add
push
add
call
cmp
bound
fldl
fs
add
add
incl
jmp
movsl
add
jmp
mov
add
into
cltd
lock
or
add
into
or
movups
call
cmpsb
add
add
add
addb
add
add
dec
jo
fbstp
add
xchg
adc
call
loope
movb
add
int
push
add
pop
add
or
add
lcall
lods
stos
xchg
bound
lcall
lahf
xlat
cmpsl
add
roll
adc
incl
shll
sub
lcall
mov
add
pop
add
jmp
add
dec
pop
pop
fisttps
add
in
insb
cmp
lods
xor
ljmp
add
jg
add
add
xchg
mov
pop
jp
xor
decl
insl
mov
pop
loope
ja
add
xor
call
add
fdivrs
xchg
lea
add
out
mov
mov
add
call
add
jae
decl
add
dec
daa
add
addb
add
add
lret
lret
mov
cltd
xchg
jecxz
lods
adc
ljmp
mov
sti
jmp
in
sbb
jo
dec
mov
add
add
scas
and
lcall
add
lock
add
aad
lock
add
je
add
test
mov
add
test
add
pop
mov
bound
ljmp
add
add
push
xchg
int3
lcall
jp
mov
xor
incl
sub
dec
cltd
out
insl
sub
add
inc
add
decl
mov
dec
xchg
das
dec
addb
dec
adc
dec
lret
adc
add
pushl
add
or
xlat
and
inc
add
adc
call
lcall
add
imul
aaa
or
cld
jns
add
mov
int3
sub
fdivl
out
std
rcrl
jns
and
push
repnz
data16
jecxz
lods
mov
add
cmp
pop
lret
mov
inc
add
push
lcall
ljmp
add
push
add
or
xchg
mov
dec
int
add
jo
ljmp
rcrb
loopne
ds
add
add
inc
add
outsb
ss
push
ret
add
add
fwait
cmp
add
xor
clc
dec
imul
mov
or
add
in
ss
add
add
jae
decl
bound
jmp
lcall
cmpsl
add
fldt
loopne
imul
mov
sub
cs
add
clc
test
dec
xchg
add
push
add
xor
hlt
push
add
xchg
pushf
cmp
add
cli
xor
jmp
cmc
enter
sub
add
jbe
mov
jae
cmp
sbb
iret
leave
into
std
aaa
pop
ret
rolb
add
call
push
push
adc
incl
lcall
decl
addb
dec
sahf
cs
les
mov
sub
cmp
test
add
mov
add
jnp
add
loopne
mov
add
nopl
add
inc
add
nop
mov
addb
add
addl
stc
mov
add
add
mov
decl
lcall
add
mov
icebp
sub
pop
lret
add
adc
inc
add
add
shll
add
add
jmp
scas
insl
pop
outsl
push
push
mov
movhps
incl
leave
leave
mov
xor
mov
out
sbb
scas
in
adc
call
decl
nop
mov
decl
xchg
sti
imul
mov
scas
imul
int3
jecxz
cmc
push
add
popa
add
jle
data16
add
ds
fdiv
dec
jbe
add
pop
xchg
dec
movsl
add
add
stos
mov
mov
shr
mov
sarl
add
pusha
add
cmp
push
add
mov
cwtl
xchg
inc
add
jmp
pushl
add
dec
jg
loope
out
repz
add
es
add
add
add
add
and
call
add
jmp
mov
add
push
cmp
add
mov
add
dec
movsb
add
sub
das
xchg
hlt
jmp
lahf
addb
test
add
call
add
jl
movsl
add
xor
add
aaa
cld
mov
add
ret
push
mov
rolb
aam
dec
xlat
inc
add
push
add
add
std
inc
add
stc
lds
or
xor
inc
add
pusha
add
out
pop
and
cs
add
cltd
mov
add
jne
cmp
xchg
xchg
movb
sar
jmp
add
leave
xchg
dec
sahf
xor
mov
outsl
push
add
test
aas
sub
call
add
inc
add
pop
xor
mov
add
cmp
mov
xchg
xchg
add
mov
add
add
pop
addb
sbb
add
lret
call
dec
test
add
pop
hlt
mov
add
adc
call
fsubrs
inc
add
or
mov
add
call
cs
jo
lcall
add
out
sbb
and
lcall
je
js
lcall
fwait
adc
mov
add
inc
add
jb
mov
repz
xchg
call
add
addb
ds
add
ja
lret
clc
divb
aas
pop
jnp
add
lods
pop
cmp
add
int
mov
loop
icebp
outsl
push
mov
add
fcoms
add
stos
and
pushl
pop
out
dec
push
add
xchg
ja
add
mov
push
add
dec
lods
aam
add
cli
jnp
fistps
je
dec
and
pushl
push
imul
jl
add
outsb
and
mov
cli
inc
add
pop
addb
xchg
adc
add
xchg
cmp
add
mov
add
pop
out
pop
movsb
add
pop
fcom
cmp
jl
add
cmp
dec
in
jge
add
push
mov
sbb
add
add
decl
pop
popa
add
sbb
add
cs
add
outsl
pusha
add
aaa
xchg
fcomps
aad
xor
fldenv
add
cwtl
inc
add
test
repz
adc
call
fsubr
enter
addl
std
mov
add
add
call
add
mov
cmp
add
test
out
and
pushl
cmp
pushl
movsb
add
decl
add
and
jge
imul
mov
popf
cltd
mov
add
add
fildll
xor
decl
decl
sub
xor
ljmp
mov
xchg
addl
add
add
pop
je
aas
jl
mov
push
imul
push
ret
add
pushl
in
jnp
cmc
or
jmp
pushl
out
roll
addl
add
call
jle
add
add
jecxz
fsubs
ljmp
jle
pop
add
cmp
aas
ret
addl
lcall
add
fstl
cwtl
sub
cmc
push
xor
mov
arpl
incl
decl
lret
or
rcrl
xchg
sub
add
sbb
in
bound
jmp
call
out
mov
pop
add
ljmp
aas
or
add
add
mov
add
add
or
add
mov
lcall
inc
add
sub
push
add
jge
xor
dec
fs
add
add
arpl
cmp
cmc
popf
add
incl
add
stc
cs
scas
mov
aad
js
add
arpl
jmp
add
cmp
add
add
stos
arpl
incl
sub
add
sti
jecxz
xchg
insl
int
movb
adc
call
ljmp
pop
cltd
pusha
add
cmp
movl
mov
add
ljmp
add
add
movb
add
cmpsl
add
mov
sti
mov
stos
sbb
add
push
fwait
or
add
cmpsb
add
xor
call
add
sub
jne
add
add
addb
add
add
cmp
mov
add
add
lcall
pop
mov
add
push
js
incl
add
or
add
xor
decl
pushl
movl
std
xchg
fdivs
jo
jmp
add
sub
sbb
pop
movl
add
cmp
incl
add
repz
addl
add
sbb
lret
mov
inc
add
out
add
stos
cmp
lret
call
add
mov
add
pop
test
mov
lret
fwait
cltd
lds
sub
jecxz
and
decl
fwait
pusha
add
call
jmp
dec
lcall
cld
js
cmp
call
mov
sbb
add
fdivrs
addb
pop
shll
add
insl
xchg
pop
add
jle
adc
lcall
dec
adc
pushl
add
je
add
pop
cmp
and
insb
movb
cmc
insb
cmp
es
sub
xchg
sub
enter
xchg
jbe
add
in
rcr
and
pop
sbb
add
daa
add
pushl
add
jns
add
aam
add
lcall
sub
xor
dec
scas
push
add
dec
xor
lcall
add
add
jmp
add
testl
cmp
mov
add
aaa
pop
sbb
daa
add
movl
pop
add
dec
pushf
fdivrs
add
push
add
xchg
enter
add
pushl
shl
add
pushl
add
fldlg2
pushf
mov
add
or
add
add
add
int3
out
or
test
test
add
inc
add
test
std
cli
fwait
std
adc
jmp
cmp
add
mov
add
add
jo
inc
add
add
inc
add
out
sti
clc
inc
add
loopne
outsb
or
hlt
fcmovb
add
add
mov
cmp
add
loopne
bound
jle
scas
lcall
ss
cltd
push
add
jl
push
add
test
mov
add
or
out
ds
add
mov
xchg
in
jecxz
mov
lods
jecxz
push
loop
pop
add
addl
outsl
jmp
iret
or
add
stc
addl
lods
and
add
addl
lcall
cwtl
add
call
data16
add
pushl
aam
fisttpll
add
mov
push
add
cs
or
add
outsl
inc
add
lods
pop
xlat
push
add
scas
sub
pop
lea
add
and
ljmp
inc
add
out
push
cltd
dec
in
add
sub
or
sbb
xchg
xchg
leave
inc
add
fdivrs
add
xchg
jge
add
ficoms
lret
mov
rolb
add
jbe
add
or
add
adc
jmp
add
addl
movsb
add
pop
imul
decl
aas
cmpsb
add
add
push
jge
push
fcomip
fidivrl
add
add
aas
inc
add
cs
sbb
in
cs
add
testb
add
add
and
lcall
pop
repnz
imul
push
fisubs
rolb
cwtl
xlat
mov
fdivrl
cmp
add
int3
lods
mov
aam
scas
inc
add
addb
or
adc
decl
add
add
xchg
adc
call
lods
daa
add
std
mov
jg
sbb
add
enter
add
rolb
add
xlat
cmp
add
fstpl
xchg
out
add
lcall
add
call
jmp
ljmp
out
sub
aad
lcall
jl
lret
fdivrs
add
roll
loope
mov
out
inc
add
scas
in
into
pusha
add
clc
lods
inc
add
in
xchg
push
clc
sub
cmp
sbb
add
js
add
add
dec
add
ljmp
popa
add
sahf
cmp
xchg
xchg
lcall
mov
mov
add
add
aas
pop
adc
decl
add
mov
add
sbb
sbb
addb
add
add
jl
rolb
aam
dec
cs
add
add
movb
add
hlt
mov
in
roll
add
mov
add
add
addl
ficompl
fdivl
dec
mov
pop
daa
add
add
fwait
push
leave
ss
add
test
or
les
jne
add
sbb
repz
push
mov
jbe
add
dec
imul
sub
data16
add
aas
filds
jl
add
decl
jge
add
pushl
cmp
and
ljmp
jmp
add
outsb
clc
pop
aas
ret
add
adc
push
lret
popa
add
pusha
add
lds
jo
ljmp
movsb
add
lcall
inc
add
outsl
hlt
nop
outsb
int3
mov
push
imul
add
lcall
pop
shlb
add
add
arpl
cmp
mov
pushf
inc
add
fcmovnb
add
add
push
add
jbe
add
aaa
and
call
add
aas
xor
lcall
out
push
add
push
add
rorl
push
loope
lea
add
add
mov
xchg
or
rcrb
ljmp
pop
mov
out
ret
sbb
cmc
mov
aaa
mov
div
aaa
jg
add
add
jecxz
test
lds
add
ljmp
out
sub
mov
rclb
test
add
arpl
jmp
xchg
mov
inc
add
add
add
lcall
add
addl
in
inc
add
pop
out
inc
add
repz
sbb
push
jne
add
ret
add
sub
imul
add
xor
call
movsl
add
adc
incl
ljmp
pop
jo
jmp
add
mov
ds
add
dec
inc
add
sub
pop
hlt
xor
add
insl
inc
add
call
or
out
or
add
add
call
ljmp
movsl
add
push
add
mov
bound
decl
xor
call
dec
in
xor
jmp
add
dec
pop
imul
outsl
int3
dec
push
add
adc
mov
add
movsl
add
js
add
dec
jbe
push
loop
sti
movsl
add
stos
roll
cmp
scas
sarl
add
cmc
or
movsb
add
lcall
loop
call
into
add
pushl
add
addb
add
rclb
xchg
dec
incl
add
jbe
lcall
add
or
add
add
pushl
fs
jnp
add
push
cs
movsb
add
mov
add
call
decl
pop
pop
adc
call
aaa
lds
cltd
inc
add
mov
add
movl
mov
fadds
jl
add
aaa
movb
dec
sub
inc
add
movl
add
nop
push
lret
fists
lcall
fsubs
pop
lock
pushl
jmp
add
mov
xor
inc
add
out
in
aaa
xchg
add
add
pop
sub
mov
add
inc
add
xchg
es
add
pushl
adc
pushl
mov
add
call
sbb
push
in
inc
add
pop
fisubs
call
add
js
jnp
test
das
js
popf
addb
add
sbb
inc
add
jle
cmp
dec
scas
xchg
mov
add
add
add
out
std
cmpsb
add
repz
push
xor
and
aas
push
and
lods
pop
add
inc
add
cld
ret
add
rcr
add
mov
cmp
cmp
fstpt
jne
or
sub
mov
dec
mov
add
test
push
mov
jl
nop
mov
add
in
jp
shrl
in
push
add
je
nop
add
mov
dec
popa
add
sub
scas
mov
call
icebp
inc
add
add
push
mov
push
addl
mov
int
dec
mov
ret
add
lcall
int3
in
adc
ljmp
jns
add
out
je
jp
add
add
xchg
dec
daa
add
jmp
add
add
call
incb
add
add
mov
add
data16
std
xchg
mov
mov
push
add
fbstp
cmpsl
add
loop
lret
jp
add
pop
out
loopne
imul
cmp
dec
xor
ljmp
and
ljmp
add
out
pop
and
mov
cs
sti
pusha
add
sub
adc
mov
add
movsb
add
add
cmp
jl
addb
add
add
insb
daa
add
adc
add
cld
shll
out
cmp
repnz
vmread
ret
pop
lods
leave
jo
incl
add
iret
mov
inc
add
add
decl
xor
ljmp
inc
add
movl
add
pop
jg
and
repz
adc
pushl
add
and
lcall
adc
push
loop
cmpsl
add
add
loopne
fimull
filds
incl
shrb
sbb
add
add
dec
out
fwait
push
jecxz
jns
jmp
movb
add
roll
outsl
push
add
cmp
dec
popf
hlt
addb
mov
add
push
push
pop
insl
lods
int
add
rep
add
add
cmpsl
add
mov
jmp
jp
add
xor
jmp
add
adc
out
mov
inc
add
mov
pop
std
int3
inc
add
fistps
inc
add
add
add
inc
add
xor
call
lock
add
add
cmp
add
inc
add
dec
sbb
inc
add
cld
aas
jle
pop
xchg
sbb
push
jo
pushl
add
adc
mov
add
testb
add
movb
add
adc
lcall
sub
jmp
push
inc
add
add
add
lea
add
xchg
mov
cwtl
enter
add
dec
mov
push
add
in
jns
add
jbe
add
or
lcall
push
in
lea
pop
push
add
add
adc
add
mov
popa
add
add
lcall
loopne
mov
scas
mov
xchg
mov
add
cli
or
add
add
cmp
add
pop
push
dec
sub
loope
aaa
add
decl
icebp
addl
pop
pusha
add
repnz
insb
cli
jge
xchg
test
loop
fisttpl
pop
mull
lods
out
addl
inc
add
pop
mov
xchg
iret
mov
inc
add
bswap
push
adc
mov
inc
add
xchg
ret
add
add
inc
add
fildl
mov
stc
cmp
lds
addb
adc
ljmp
xchg
sub
add
pop
repz
fdivrl
dec
fwait
mov
cmp
gs
lock
xchg
fcompl
add
mov
jge
adc
add
pop
out
pop
add
ljmp
sub
add
or
add
cltd
jbe
out
and
push
add
roll
push
pop
add
add
addb
add
pushl
add
inc
add
push
add
add
mov
call
add
movsb
add
lea
call
repz
add
out
pop
movsb
add
addb
and
ljmp
add
add
push
mov
or
xor
jae
out
sbb
repnz
add
add
into
in
mov
adc
call
add
xchg
fsubrl
movsb
add
pop
jae
decl
imul
mov
mov
cmp
pop
pusha
add
loopne
sub
lcall
movsb
add
jno
decl
xchg
push
push
add
sub
roll
stc
data16
test
sub
jl
add
ffreep
add
sub
add
sub
call
add
ljmp
add
mov
add
pusha
add
fcmovbe
pop
out
xor
cli
pusha
add
and
mov
add
ljmp
add
xchg
out
jp
int
sti
mov
decb
inc
add
mov
loop
adc
dec
pop
cmpsl
add
add
mov
mov
add
add
push
add
xchg
in
icebp
enter
lret
pushl
ljmp
add
imul
add
rolb
add
addb
movsb
add
mov
push
jle
xchg
nop
aaa
mov
jge
add
mov
mov
adc
ljmp
add
jmp
add
add
add
call
xchg
xor
mov
les
es
add
cmp
rolb
call
inc
add
or
dec
addl
add
lcall
dec
scas
mov
cmp
mov
jle
mov
mov
add
add
into
aam
stos
jnp
ljmp
in
arpl
lcall
push
aas
dec
xlat
roll
add
add
add
js
inc
add
sbb
lods
ljmp
aaa
sub
cwtl
in
pop
add
add
into
jge
add
das
ljmp
mov
ret
add
aas
jecxz
pop
popf
fimull
and
pop
inc
add
lahf
add
pushl
ljmp
das
adc
call
lds
and
add
add
add
scas
lcall
inc
add
xchg
mov
add
mov
mov
xor
testb
push
lock
add
ss
fcmovnu
jno
push
stc
lock
add
add
decl
add
jno
incl
add
sbb
add
jecxz
pop
add
jmp
decb
sub
add
pushl
push
pop
and
decl
jmp
add
push
addl
aas
fcoms
mov
lcall
add
push
sbb
addl
add
incl
add
add
or
stos
inc
add
jae
pushl
mov
add
loop
aas
jle
jp,pn
and
lcall
repz
outsb
or
sub
jp
popf
xor
dec
and
dec
adc
jg
add
xchg
into
lea
cmc
aam
int
mov
push
add
jo
pushl
call
pushl
jmp
add
jecxz,pt
add
add
add
mov
jbe
mov
add
mov
outsb
lock
add
sbb
jnp
add
sbb
in
mov
add
add
fidivrs
pusha
add
pop
sub
addb
add
add
push
addl
add
pop
repz
sub
les
stos
nop
imul
sbb
mov
add
and
call
add
addb
xor
dec
add
mov
incl
jno
ljmp
loop
sbb
dec
in
int3
xor
incl
pop
aad
add
pop
loopne
or
add
aas
xor
mov
add
mov
je
add
pop
enter
add
ds
mov
test
mov
add
xor
lcall
pop
dec
push
jns
addl
add
sbb
push
jmp
add
call
pop
mov
push
add
outsl
addl
test
loopne
mov
data16
add
add
call
aam
add
add
das
dec
push
sti
insb
movb
add
ds
mov
mov
js
ret
fisttps
jecxz
movl
sub
push
add
add
or
mov
add
add
push
push
push
roll
ret
add
mov
lahf
push
fldl
xchg
pop
and
jns
ret
mov
add
into
xor
jmp
add
add
repz
push
add
call
push
roll
add
xchg
mov
jno
incl
add
mov
les
scas
faddp
add
sti
or
mov
add
roll
xchg
cmpsl
add
pop
sub
add
add
adc
jns
dec
xor
incl
fldt
add
add
add
mov
add
lcall
int
add
lods
addl
add
inc
add
jne
add
and
decl
sbb
sub
aas
aas
xor
add
or
pop
xchg
call
addl
add
add
repnz
xchg
or
add
inc
add
add
out
repz
xor
ret
add
sbb
push
mov
add
lcall
data16
and
call
ljmp
add
dec
cmpsb
add
add
add
call
in
xlat
iret
aad
dec
shl
fsubrs
mov
decl
decl
xchg
mov
stc
fcmovne
jmp
mov
aam
add
add
xchg
lods
pop
int
jmp
add
dec
aad
xlat
repz
repz
jmp
mov
adc
push
lods
or
ret
add
enter
add
cmp
dec
bnd
sub
repnz
decl
mov
push
add
push
add
ljmp
add
iret
stos
mov
mov
sarb
mov
add
popf
movl
xlat
shlb
cmp
add
roll
jne
jno
add
fildll
add
sub
or
out
lcall
add
pushl
add
xor
call
inc
add
aad
add
add
jmp
add
ds
lahf
lds
inc
add
add
decl
push
add
gs
add
or
add
mov
add
add
mov
sbb
daa
add
jo
call
aam
bound
lcall
jecxz,pt
mov
add
and
jmp
aaa
lods
pop
shlb
jmp
pushl
push
mov
pop
inc
add
xor
add
iret
unpcklps
mov
add
add
rolb
cli
cwtl
mov
cmp
xchg
inc
add
cmc
bound
pushl
add
adc
inc
add
add
add
add
and
incl
lret
add
jo
incl
add
sub
dec
mov
pushf
cmc
xchg
push
add
daa
add
add
incl
jmp
call
mov
add
jge
add
int
aaa
roll
add
jle
and
lcall
idivb
pop
dec
ficomps
out
cmp
xor
jmp
jo
mov
inc
add
jb
dec
push
sub
add
add
mov
push
das
xor
ljmp
add
lods
mov
adc
pop
add
aam
add
push
out
movl
sarl
add
cmc
cmpsl
add
cmp
add
ljmp
push
add
jmp
jle
cld
in
sub
mov
mov
add
and
in
leave
fisubrs
jnp
gs
and
incl
pop
shl
or
ljmp
movl
xchg
roll
add
mov
jb
call
add
sahf
mov
add
push
lahf
pop
xor
lcall
add
sbb
xor
xchg
insl
nop
sbb
test
outsb
out
push
cmc
popa
add
pop
mov
xlat
out
jae
mov
cmp
add
movsb
add
add
mov
add
add
push
add
cmp
push
jl
into
xchg
cmp
add
jl
outsb
pop
pop
cld
xchg
push
leave
pop
add
mov
push
shll
pushl
add
mov
push
arpl
cmp
add
or
add
incl
add
aam
add
add
add
lock
add
mov
push
add
xchg
pop
mov
lcall
mov
add
mov
incl
ds
adc
incl
add
adc
lcall
add
incl
add
add
imul
add
pop
mov
xchg
xor
jmp
jg
add
leave
push
add
jno
decl
add
addl
stc
and
pushl
lcall
scas
cwtl
cli
inc
add
pop
lret
add
add
xchg
ret
add
add
call
pop
sbb
jmp
add
xchg
add
add
in
imul
push
stos
movl
call
xor
jmp
add
jmp
iret
sub
mov
ds
movl
cltd
xlat
xor
pushl
add
inc
add
imul
mov
pop
adc
jmp
add
cmp
add
pushl
cld
fwait
push
inc
add
fsubs
mov
add
add
nop
popa
add
clc
movsb
add
add
imul
incl
adc
add
fwait
out
enter
jmp
fsts
pop
xor
incl
cmpsl
add
add
add
loop
pop
mov
add
fisttpl
dec
inc
add
call
jmp
add
add
sub
pop
gs
sbb
add
jmp
test
loopne
mov
jle
add
aam
add
mov
lahf
sub
add
cltd
pop
sub
cmp
add
pop
push
out
adc
fadds
inc
add
xchg
pop
out
xchg
pop
pusha
add
lret
sub
mov
add
add
movb
add
rcrb
add
loope
mov
xor
sub
add
dec
rcrb
sahf
aas
ss
inc
add
leave
xlat
xchg
add
fisttpl
and
inc
add
ja
add
add
mov
pop
out
loop
push
push
ret
add
out
adc
ffreep
add
add
aad
dec
or
sbb
xor
lcall
add
lds
into
mov
ljmp
add
cmp
arpl
in
jmp
inc
add
aaa
or
push
fsub
add
add
add
jae
decl
dec
pusha
add
insl
xor
call
add
push
xor
lcall
xchg
jnp
add
fisttps
insl
mov
or
fidivl
add
xchg
call
add
and
add
decl
cmp
iret
fcoml
add
jns
loop
loopne
dec
jns
mov
adc
add
sbb
inc
add
mov
cmp
mov
jmp
rolb
addb
ret
sbb
jnp
cmp
sti
adc
lcall
aaa
push
cmp
loopne
mov
add
add
add
lcall
add
addl
jge
sbb
xor
push
add
sbb
addb
add
loop
ja
daa
add
add
in
test
es
fdivrp
repz
adc
fucomi
out
mov
jae
call
jl
je
xchg
loopne
sarb
bound
incl
inc
add
outsl
sub
les
dec
aaa
dec
xchg
sub
add
mov
add
aad
adc
call
sti
aas
in
xchg
sbb
dec
mov
add
sti
addl
jmp
add
push
add
pop
adc
push
pop
out
xchg
push
add
add
inc
add
add
add
nop
scas
into
mov
add
pop
mov
jp
mov
mov
arpl
incl
or
add
add
add
fisubrl
xor
ds
add
cmpsl
add
mov
add
movsb
add
ficomps
aad
add
sbb
mov
jbe
insb
and
cmp
lock
call
out
and
push
lahf
sbb
imul
addb
fadds
cmp
call
popf
dec
repz
add
rolb
test
mov
lcall
repnz
cld
pop
mov
add
mov
mov
sbb
jle
jb
ljmp
dec
inc
add
add
pop
jb
incl
decl
aad
pop
dec
push
add
cmp
fucom
add
aad
stc
mov
add
sub
add
sbb
ja
add
mov
popa
add
or
xor
dec
sub
roll
push
mov
ret
add
fsubrs
add
cmp
scas
mov
cld
fdivrs
add
add
dec
neg
into
data16
mov
ljmp
pop
add
ljmp
add
add
lcall
pop
push
add
hlt
xchg
inc
add
mov
xchg
xchg
mov
dec
movsl
add
das
mov
popa
add
adc
fistpl
add
jmp
imul
out
cmc
mov
add
add
bound
incl
decl
pop
scas
cld
shlb
pop
add
sub
js
add
lods
sbb
outsl
icebp
loope
push
daa
add
shlb
add
iret
sbb
movsb
add
push
push
xor
xchg
cmpsb
add
push
add
jnp
add
imul
addl
add
add
clc
sbb
jmp
add
sub
add
addl
or
inc
add
incl
ja
add
decl
rolb
add
jno
jge
test
add
add
popa
add
mov
add
lods
dec
cmp
add
popf
jae
incl
ss
scas
xor
add
jo
cmp
dec
stos
xchg
addl
add
ljmp
je
mov
mov
xchg
mov
scas
mov
add
mov
add
push
mov
and
cmp
ljmp
pop
cmpsl
add
and
jl
add
dec
shll
jmp
add
add
add
mov
mov
stos
ljmp
jno
jmp
add
call
mov
mov
lret
jl
jns
je
add
lea
stos
enter
jecxz
stos
and
jmp
add
icebp
aas
pop
jne
test
stc
test
mov
push
addb
aad
mov
add
jge
add
push
push
add
xchg
adc
lcall
mov
pop
push
jnp
adc
lcall
add
push
mov
add
add
add
fimull
add
push
call
roll
add
call
add
pop
inc
add
pop
inc
add
jecxz
jle
dec
insb
outsl
cli
outsb
mov
popa
add
data16
jnp
add
movb
add
jmp
add
leave
jnp
dec
xlat
jae
lcall
add
in
push
push
mov
insb
ds
test
imul
add
pushl
add
pusha
add
adc
mov
add
add
mov
add
or
add
inc
add
insb
add
add
add
sahf
and
call
push
mov
add
jo
mov
sbb
add
addb
aad
addb
dec
fiadds
mov
add
mov
addl
mov
jmp
add
or
scas
cmp
mov
or
popf
or
sub
add
add
mov
ds
lret
test
add
mov
inc
add
movb
adc
call
add
cli
xchg
cmpsb
add
ret
add
icebp
cltd
aam
in
pop
int
das
jp
mov
sbb
sub
ljmp
mov
cs
aas
repz
call
inc
add
inc
add
mov
add
pushl
inc
add
daa
add
out
mov
jmp
lcall
decl
fstps
std
mov
push
sub
sbb
sahf
add
jmp
shlb
adc
ljmp
aad
cmp
daa
add
in
insb
push
and
lcall
fcoml
pushl
jno
ljmp
or
or
mov
xchg
inc
add
xor
mov
lret
add
add
sysenter
mov
push
addl
call
and
xchg
repz
insb
mov
insb
mov
add
cmpsb
add
mov
fcmovnbe
adc
jl
inc
add
mov
add
pop
addb
add
ret
add
add
enter
pop
cmpsl
add
add
les
lret
ljmp
or
flds
decl
rolb
daa
add
sbb
ljmp
sbb
add
test
stos
or
xor
jmp
call
add
pushl
movl
jg
add
add
push
addb
add
or
movsl
add
jnp
ljmp
add
pop
add
nop
pushf
ss
stos
pop
lcall
xchg
inc
add
xor
mov
jp
xor
jle
add
add
push
add
add
add
sub
mov
mov
mov
cli
cmp
call
add
mov
push
bound
mov
mov
leave
jb
lcall
mov
and
jmp
add
lods
mov
and
dec
testb
hlt
scas
mov
add
call
add
insl
addl
and
incl
ja
test
pushf
lcall
aas
push
add
dec
imul
add
cltd
rcrl
mov
add
xor
call
decl
in
push
movsb
add
mov
add
inc
add
std
in
addb
rol
add
dec
rorl
push
add
fisubrl
add
xchg
pop
pop
cld
arpl
call
push
add
mov
push
add
mov
xchg
test
test
icebp
movb
aad
pop
add
lock
adc
jmp
add
sub
jg
frstpm(287
add
push
add
mov
add
shll
in
icebp
js
ficoml
je
sbb
add
mov
cmp
loopne
std
xchg
cmc
xor
incl
movb
mov
add
mov
and
jnp
addb
add
add
fimuls
add
jae
call
sub
lea
xchg
or
add
xor
pushl
ficoms
jo
jmp
add
in
imul
or
sub
in
aas
push
sub
add
stc
negl
pop
cmpsb
add
das
push
add
insb
daa
add
push
add
sbb
cld
xor
call
cmpsl
add
push
add
fisubrl
jne
add
scas
add
dec
cltd
lret
test
call
mov
test
mov
mov
fildl
aad
push
add
mov
add
dec
mov
add
push
add
push
add
fsubs
add
cmp
inc
add
inc
add
outsl
mov
imul
mov
sbb
movsl
add
mov
add
dec
stos
div
jp
xchg
sub
xor
jge
into
dec
mull
jbe
imul
pushl
decl
inc
add
icebp
and
call
jp
add
add
and
pushl
lods
xchg
xchg
push
add
cltd
mov
inc
add
std
jne
add
cld
mov
add
into
mov
lcall
hlt
testl
add
call
add
loopne
stc
xchg
icebp
addl
pop
popl
dec
aaa
xchg
pop
out
lret
test
add
add
add
add
adc
ljmp
fnstenv
mov
cmp
pop
das
popa
add
mov
add
add
dec
mov
xlat
push
cmpsl
add
add
ljmp
add
fstl
pushl
add
sbb
or
pop
cwtl
inc
add
fmul
jge
add
in
cltd
sbb
jmp
xchg
popf
inc
add
out
sub
data16
les
cmp
jmp
add
add
aas
ljmp
pop
xchg
cmp
push
add
movl
hlt
dec
fucom
add
add
add
push
add
popf
ret
add
lcall
and
jmp
in
pcmpeqw
loopne
insb
dec
in
repnz
int3
fisubrs
lahf
cmp
add
add
sbb
inc
add
jnp
stc
test
mov
pop
xor
cli
imul
add
add
push
add
mov
add
sub
push
rorb
lods
sbb
call
lcall
add
add
and
incl
jmp
add
or
add
lds
icebp
enter
and
pushl
push
mov
add
inc
add
pushl
mov
pop
jo
call
mov
add
incl
rolb
aas
jnp
and
lcall
add
mov
cmp
or
add
add
imulb
mov
add
movl
add
or
add
fstpt
or
jb
jmp
lcall
or
add
add
addl
add
adc
decl
sbb
inc
add
aad
cmp
xchg
xchg
das
cwtl
xchg
sub
jb
call
test
inc
add
cmp
add
pushl
incl
decl
add
mov
addl
lcall
test
jb
call
pop
js,pt
add
cmp
adc
sti
rolb
add
or
and
imul
rol
add
add
incl
push
add
bound
pushl
jmp
add
mov
ljmp
jmp
add
add
cmp
loope
push
fmuls
mov
sub
push
add
sbb
or
sbb
repz
jns
faddp
add
stos
iret
cwtl
add
push
add
call
addb
clc
and
jmp
jmp
add
notl
add
dec
inc
add
popa
add
sub
pop
sbb
add
sti
jo
incl
add
add
push
add
fwait
out
cmp
add
sub
call
and
incl
add
add
jmp
add
add
pop
sbb
xchg
or
add
push
mov
sbb
mov
mov
add
mov
xchg
loop
xor
clc
outsl
out
jle
add
mov
add
cs
xor
jmp
add
add
adc
decl
stos
in
aas
mov
add
fiadds
add
ret
add
pop
ror
clc
dec
mov
hlt
movsl
add
mov
lahf
push
pop
add
dec
stos
cmovno
ljmp
add
int
addl
add
cmp
movsb
add
dec
adc
inc
add
repz
xchg
and
inc
add
in
add
incl
ljmp
sub
add
movl
push
add
mov
mov
jmp
ja
add
mov
ljmp
add
add
inc
add
add
jecxz
mov
add
add
decl
mov
add
mov
decl
and
mov
mov
pop
popf
arpl
jmp
add
push
add
call
add
aaa
inc
add
shll
sbb
add
add
add
aas
and
push
inc
add
roll
addb
addb
jl
add
add
ss
ss
shlb
lds
call
add
jmp
add
test
das
lods
lods
pop
and
add
decl
test
out
int3
pushf
and
incl
add
dec
js
add
sub
sahf
mov
xchg
addb
add
lea
xchg
cmp
lcall
add
add
add
mov
das
mov
add
adc
lcall
shll
pushl
inc
add
xor
incl
add
xor
decl
aas
mov
idivl
add
xchg
add
ljmp
push
jno
pushl
jmp
inc
add
add
dec
xchg
fistpll
jmp
add
add
sbb
add
dec
mov
cmp
addl
pop
stos
in
cmc
iret
iret
jge
jbe
mov
notl
sbb
add
add
fsts
mov
mov
mov
test
pop
dec
mov
add
out
mov
decl
jmp
daa
add
add
fistl
jne
cmpsb
add
add
fwait
sbb
pushf
addl
add
fidivs
add
add
add
sub
add
add
xchg
lds
cmpsb
add
mov
addl
fisttpll
xchg
cmp
fstps
or
mov
push
mov
push
in
out
pop
mov
add
add
das
jae
call
decl
in
jo
ljmp
add
push
in
mov
cli
dec
or
inc
add
push
dec
stos
inc
add
iret
jle
mov
das
jnp
add
pushl
jmp
jg
test
add
mov
add
arpl
pushl
decl
daa
add
inc
add
and
decl
lods
push
add
pop
in
or
out
mov
pushl
cmp
xor
aam
ja
pop
sahf
cmpsb
add
jl
add
sub
add
add
add
gs
jmp
enter
pop
in
dec
or
cwtl
iret
ret
add
push
loope
and
lods
mov
mov
cmp
out
lahf
sbb
fldl2e
lds
aas
pop
hlt
mov
jl
ret
popa
add
pop
inc
add
add
add
sbb
push
lcall
mov
mov
xchg
fdivp
sti
negb
dec
aad
sbb
cwtl
mov
pop
aas
jmp
dec
xchg
xchg
inc
add
stc
xlat
pop
add
repnz
add
add
ret
add
fcmovnu
loop
idivl
movsl
add
add
add
pop
mov
ljmp
mov
imul
pop
push
add
push
fnstsw
add
je
fcoml
enter
add
mov
roll
add
adc
fidivrl
xor
mov
add
pop
push
add
daa
add
inc
add
add
lahf
jmp
cmpsb
add
add
pushl
add
or
aad
stos
add
push
or
add
mov
inc
add
aad
jmp
add
roll
add
dec
clc
daa
add
add
xor
decl
jle
add
pop
mov
add
add
bnd
add
jns
mov
add
pop
or
jmp
add
scas
jo
sti
inc
add
xchg
pop
xchg
pusha
add
addr16
push
cmc
inc
add
pop
add
jmp
add
lea
aad
les
ja
cmp
jp
cwtl
fwait
and
jmp
add
sub
ljmp
lret
test
push
adc
jmp
add
aas
pop
mov
add
lcall
addb
add
add
mov
add
lds
call
test
ficomps
adc
pushl
push
add
add
dec
fdiv
int3
sahf
jmp
stc
pop
and
jmp
add
mov
pop
and
pushl
mov
jmp
loop
cwtl
cmc
cmp
lahf
lret
add
sbb
jmp
rolb
add
push
addb
imul
notl
call
cmp
add
fucomi
cmc
lcall
add
sbb
out
stc
stos
push
in
xor
jmp
hlt
adc
pushf
addb
sbb
add
add
or
add
mov
add
clc
dec
cwtl
xchg
pop
out
outsl
enter
js
fisubl
add
out
and
xor
jns
lcall
add
fwait
and
sti
inc
add
lret
sarb
push
dec
lods
cmpsl
add
popf
and
jle
cltd
pop
mov
and
lcall
sbb
pushl
jmp
or
test
xchg
popf
mov
sahf
imul
xor
ljmp
imul
add
das
sahf
cmp
add
add
decl
repz
add
xor
jmp
add
pop
fnsave
rolb
fwait
mov
add
roll
add
ljmp
push
mov
sbb
add
add
cmpsb
add
scas
in
out
and
pushl
add
fimull
stos
rolb
iret
jmp
sub
fldt
add
sub
cmc
jmp
leave
adc
mov
pop
xor
ljmp
dec
jge
add
cmp
out
or
mov
sbb
dec
repnz
lea
jl
cmc
adc
int3
mov
add
imul
jmp
add
mov
mov
std
push
add
inc
add
shll
ljmp
mov
filds
pushl
lcall
inc
add
inc
add
add
add
add
enter
add
stos
add
call
decl
popa
add
fidivrl
mov
add
dec
xchg
jecxz
push
and
int3
add
pushl
jae
dec
je,pt
add
xor
decl
adc
out
test
ret
add
out
dec
movsb
add
lea
add
imul
add
mov
sbb
mov
jl
mov
add
push
add
add
incl
jne
dec
xchg
iret
push
xchg
fadds
add
xor
jmp
add
int3
sub
mov
addb
add
ljmp
and
pushl
jb
incl
mov
add
push
add
add
pop
loope
jecxz
stc
je
insb
inc
add
add
cmp
add
dec
xchg
dec
cmp
jae
pushl
pushl
add
test
or
add
xchg
mov
add
push
jg
push
in
mov
adc
jle
xchg
mov
adc
dec
addl
inc
add
add
xchg
xor
call
add
inc
add
xor
jmp
add
ret
add
lcall
adc
lcall
out
out
dec
xchg
adc
add
aaa
mov
dec
cltd
cmp
inc
add
push
push
pop
add
push
add
mov
dec
rolb
add
cmc
bndstx
add
cwtl
adc
lcall
ljmp
pop
xor
fnop
dec
sbb
cmp
das
inc
add
xchg
mov
add
add
add
add
adc
call
notb
add
add
add
call
cmpsb
add
and
pushl
add
adc
call
mov
popf
aas
xchg
in
push
mov
arpl
jmp
add
lcall
add
add
test
push
jno
call
das
out
pop
add
cmp
mov
add
cmc
idiv
xor
incl
add
addb
add
aaa
fwait
add
cmc
fcom
addb
mov
add
into
mov
cli
add
lret
roll
and
cmp
cwtl
push
inc
add
popa
add
inc
add
ljmp
add
roll
out
test
mov
movl
dec
pop
repz
add
push
add
or
adc
jmp
add
add
incl
add
movl
pop
roll
add
add
add
ljmp
add
mul
add
test
add
sbb
add
aas
ss
add
dec
inc
add
das
cmpsl
add
daa
add
jnp
jnp
pop
and
xchg
xchg
lret
mov
add
cmp
add
jg
add
xor
clc
shll
sbb
pop
leave
cli
dec
mov
std
out
cmp
lods
push
in
xchg
xchg
fnsave
pmulhw
mov
sub
stos
mov
xor
jmp
arpl
js
inc
add
ret
sub
add
movsl
add
addl
sub
sub
cmp
add
jl
add
scas
shlb
add
dec
sbb
jmp
add
adc
mov
movl
call
jmp
add
sti
mov
mov
fistps
push
add
incl
inc
add
add
add
add
mov
inc
add
pop
add
xor
jmp
add
std
std
sbb
add
add
test
inc
add
incl
add
push
add
jmp
outsl
rolb
add
adc
push
cmpsl
add
lods
out
and
call
add
clc
in
inc
add
ror
xor
cmp
incl
dec
mov
cli
scas
dec
inc
add
scas
push
lcall
add
in
add
decl
adc
incl
add
add
mov
add
add
jmp
pop
xor
jmp
add
push
xor
aas
sahf
leave
addb
add
dec
sub
mov
xor
pushl
add
movsl
add
shll
add
sbb
cmpsb
add
add
fs
jno
jmp
add
movb
add
lods
shll
add
pop
in
inc
add
icebp
rcll
add
movb
fcoms
test
jb
incl
jne
mov
add
add
lret
push
loopne
int3
push
sti
addl
pushl
add
js
add
jnp
cmp
add
roll
jae
push
add
add
jb
cli
sbb
add
enter
add
sbb
add
inc
add
add
cmp
lea
decl
imul
add
add
in
sbb
dec
ljmp
aam
add
add
daa
add
data16
aas
lret
and
pushl
xor
push
add
insb
repz
ljmp
mov
pop
scas
mov
cmp
mov
xlat
mov
add
jnp
in
fistps
test
insb
pop
mov
fsubrl
cmp
jg
lret
sbb
movsl
add
add
add
dec
cmp
xchg
loope
mov
adc
jmp
add
mov
mov
xchg
jns
add
pop
mov
add
cmp
sbb
push
dec
sbb
push
sub
add
lock
data16
adc
decl
inc
add
stc
push
add
pop
fwait
add
fcoms
add
int3
jbe
or
loop
clc
jl
movsb
add
pusha
add
lcall
mov
aam
sbb
add
jmp
inc
add
cli
imulb
lahf
inc
add
and
ljmp
xlat
cltd
xchg
mov
mov
pop
loop
or
add
mov
add
dec
pusha
add
push
dec
mov
push
mov
add
add
test
dec
outsl
imul
dec
fdivrp
dec
cmp
jp
add
cs
add
adc
cmp
add
add
sqrtps
call
add
lock
test
add
add
sbb
aad
push
push
inc
add
loop
int
add
lds
jmp
fwait
leave
test
add
or
insl
lahf
repz
daa
add
dec
imul
add
fisttpll
add
cmp
test
add
and
add
das
stos
lock
out
pop
bound
decl
jno
call
mull
mov
ss
jle
xor
incl
add
dec
and
jmp
xchg
lea
aad
add
jmp
add
mov
mov
lcall
add
aas
out
iret
dec
add
pushl
add
adc
dec
xchg
pop
push
fcmovu
clc
fwait
insl
icebp
sub
fsubrl
or
int3
icebp
cmc
mov
inc
add
add
xchg
mov
pop
add
cmp
add
jmp
mov
add
ljmp
sub
add
cs
xchg
stc
pop
stos
and
add
out
lea
add
nop
cmp
in
push
into
mov
adc
inc
add
pushf
stos
out
das
cmpsl
add
add
jmp
push
add
inc
add
addl
idiv
dec
data16
add
fwait
sti
sbb
add
xchg
mov
jg
test
ja
ror
stc
and
jmp
pop
cmp
or
inc
add
rolb
add
lcall
pop
jns
pop
sub
add
data16
iret
push
add
addb
mov
aas
cmp
out
stc
cmp
adc
lcall
add
rorl
mov
sbb
sub
lcall
out
mov
enter
xchg
xor
call
inc
add
cld
das
jne
in
xlat
data16
loop
push
into
aaa
sub
divl
add
dec
cltd
popa
add
aad
add
adc
pushl
pop
fisttpl
add
pop
and
mov
jp
adc
jmp
add
imul
popf
pop
scas
cli
mov
das
cmp
hlt
mov
add
pop
mov
fdiv
xor
push
pop
inc
add
dec
das
and
add
jmp
movb
add
jmp
popf
add
xchg
inc
add
push
add
lcall
out
add
call
xchg
stc
inc
add
cld
jge
jle
cltd
adc
incl
add
aad
jecxz
mov
pop
xor
mull
add
mov
dec
and
push
imul
out
repz
shl
and
add
push
add
add
add
inc
add
sub
add
jecxz
lods
loopne
push
mov
mov
lret
add
nop
adc
decl
ret
add
add
add
or
divl
movsb
add
inc
add
mul
add
leave
push
sub
lock
xchg
and
ljmp
xor
decl
jne
sbb
loope
into
movl
pushl
add
mov
cs
mov
mov
inc
add
mov
adc
lcall
imul
lds
stos
rolb
pop
jo
ljmp
dec
popf
pop
fwait
cmpsb
add
add
sti
lcall
jo
call
in
loop
sti
mov
add
mov
mov
sbb
lods
mov
insb
fisubl
jmp
push
add
add
fmuls
cli
cmp
out
scas
or
test
bound
jmp
incl
add
rolb
das
jecxz
add
decl
rolb
addb
hlt
enter
mov
add
mov
mov
add
loope
mov
lods
inc
add
repz
ret
add
dec
arpl
fsubs
add
add
call
add
adc
call
jo
decl
add
jge
push
add
and
jmp
add
add
incl
pop
in
insl
mov
std
or
xor
jg
add
add
sub
pushl
add
stc
mov
addl
add
pop
mov
cmp
pop
and
out
mov
aad
leave
pop
cmp
inc
add
in
adc
push
xchg
lahf
movsb
add
add
in
add
scas
pop
and
pushl
bound
call
mov
cltd
push
test
sub
add
jae
call
call
movsb
add
add
adc
decl
add
add
jmp
add
and
call
add
xchg
cmp
cmpsl
add
loope
rcrl
mov
jae
jmp
or
fistpll
test
or
dec
sub
addb
add
icebp
hlt
addl
or
and
call
add
pop
mov
add
adc
inc
add
add
xchg
push
add
xchg
les
mov
xchg
ljmp
dec
imul
roll
pusha
add
pop
jb
push
movl
sbb
ljmp
jle
mov
dec
jo
incl
decl
cld
mov
xchg
cmc
xchg
dec
xchg
xchg
adc
add
add
fsubp
add
add
add
lahf
jl
add
lds
inc
add
call
adc
lcall
in
dec
repz
add
add
cmp
add
sahf
mov
ja
add
in
test
mov
push
add
call
cmp
mov
add
aad
pop
mov
lret
pusha
add
or
jg
xor
decl
add
add
roll
aaa
mov
addb
dec
mov
popl
add
pop
or
add
or
add
repz
dec
cmp
js
add
inc
add
jb
jmp
add
add
add
je
dec
in
add
dec
sbb
xlat
stos
lods
mov
jle
gs
sbb
add
xor
lcall
enter
dec
push
xor
lcall
add
mov
cld
jmp
jae
jmp
add
add
xchg
push
add
push
add
icebp
dec
test
adc
ljmp
in
std
ja
xor
ljmp
lds
jp
add
jp
out
punpckhbw
mov
cli
jno
decl
mov
add
mov
scas
push
add
int3
pop
int
pop
lds
cmp
or
add
add
stos
ja
jle
xor
pushl
add
add
lret
pop
add
rolb
ss
lret
cmc
test
xchg
arpl
jmp
add
call
test
shlb
ljmp
insl
xor
loope
and
les
jns
aad
push
cmovbe
imul
mov
decl
popf
stc
adc
call
stos
movsb
add
push
imul
push
add
jno
jle
adc
pushl
sub
xchg
cltd
push
push
cmp
push
in
pop
mov
add
dec
adc
call
add
sbb
pop
mov
lahf
test
mov
and
pushl
add
xchg
adc
push
jnp
adc
lcall
pop
add
sub
lock
jns
in
and
mov
out
into
cmp
add
movb
add
xor
pushl
add
into
in
addb
mov
or
popa
add
ds
test
popl
ljmp
lea
cwtl
pop
dec
nop
pop
pop
add
inc
add
and
call
add
add
ljmp
add
dec
out
xchg
das
lcall
mov
lahf
jp
add
scas
gs
add
inc
add
pop
mov
cmp
stos
daa
add
test
imul
clc
cs
dec
push
adc
jmp
add
add
push
repnz
add
jno
call
jns
push
dec
mov
jnp
loope
fwait
inc
add
mov
add
add
aam
push
mov
inc
add
enter
mov
addl
add
faddl
mov
sub
xchg
xchg
add
sub
lcall
and
pushl
addb
add
or
shll
add
mov
add
mov
iret
sbb
add
and
call
mov
ljmp
pop
lahf
mov
add
xchg
les
insl
mov
std
js
jae
inc
add
int3
adc
out
xor
add
dec
mov
add
inc
add
push
enter
roll
fadds
add
mov
ljmp
dec
fucomi
sbb
add
add
sub
add
sub
pop
lret
add
sbb
add
outsl
inc
add
rcll
add
call
ficoms
add
in
mov
sbb
sub
add
cmpsl
add
jo
cli
fildll
add
xchg
mov
addl
mov
in
and
ljmp
jl
add
test
adc
dec
inc
add
xchg
mov
add
and
lcall
dec
pop
aas
cmp
aaa
iret
sub
push
sbb
xchg
mov
add
decl
xchg
push
pusha
add
mov
fdivs
std
addb
add
push
stos
add
adc
incl
xchg
cmp
add
adc
add
or
fimuls
ds
rolb
pop
pusha
add
jp
add
fstpl
xchg
insl
icebp
into
addl
add
add
call
sbb
out
push
add
push
movsl
add
add
rolb
add
fmuls
xor
inc
add
lcall
dec
outsb
addb
ret
add
frstor
sahf
movsb
add
icebp
mov
call
add
in
daa
add
add
call
mov
add
mov
add
and
ficoms
xlat
jle
add
movsb
add
loopne
inc
add
bound
dec
jno
incl
ljmp
lcall
add
add
mov
adc
add
ljmp
dec
sbb
cs
in
insl
pop
adc
add
add
cmp
add
dec
dec
jno
incl
add
mov
add
rclb
add
or
pop
adc
or
pop
pushf
lods
gs
add
cmpsb
add
add
jmp
cmp
xchg
pop
call
add
jmp
mov
xor
decl
xchg
pop
fiadds
jns
test
add
stc
rcr
insb
push
pop
lds
in
jnp
add
dec
fidivrs
ret
add
xchg
cmpsb
add
jecxz
sub
add
add
pop
ljmp
aam
mov
add
xchg
fdivr
or
int
mov
push
add
scas
xor
lcall
adc
ljmp
add
shl
push
add
sub
and
mov
add
imul
xchg
ret
add
and
ljmp
xor
add
cmp
add
add
mov
add
mov
daa
add
aas
or
pop
adc
sbb
add
lahf
jp
add
leave
into
movl
mov
js
add
add
push
leave
mov
incl
jmp
push
rclb
add
inc
add
add
jmp
cmpsb
add
push
add
pusha
add
aaa
adc
pushl
add
loopne
add
incl
dec
mov
cmp
jl
add
data16
mov
sbb
jo
incl
incl
mov
or
stos
enter
cmpsb
add
lret
mov
add
imul
add
clc
jnp
push
or
call
add
scas
xlat
push
add
lret
xor
lcall
cmp
or
lcall
ljmp
mov
jge
add
add
aam
jae
decl
add
in
pop
add
add
mov
mov
add
les
push
add
add
add
outsb
cwtl
adc
dec
cli
les
out
add
inc
add
bound
decl
add
data16
addr16
movsl
add
repnz
sbb
in
mov
leave
fildl
add
jmp
push
add
mov
loope
inc
add
add
pushl
les
arpl
jmp
int
add
mov
mov
ret
add
add
mov
inc
add
loopne
mov
ljmp
add
xor
lcall
and
dec
sub
clc
xor
decl
dec
sub
add
or
add
add
inc
add
dec
add
ljmp
mov
add
mov
add
int
arpl
lcall
xchg
inc
add
imulb
cmpsb
add
adc
fsub
add
xchg
stc
mov
into
int
cwtl
cmp
lock
pop
lock
invd
das
pop
shll
call
mov
data16
add
mov
scas
push
mov
add
adc
incl
lcall
add
cmpsl
add
add
add
jg
add
or
add
and
jmp
add
pushf
ja
ret
add
inc
add
roll
add
xchg
movl
jg
add
cmpsb
add
add
inc
add
dec
push
repz
sub
jecxz
cmc
push
fwait
push
out
enter
jge
push
add
add
add
jmp
cltd
pop
pop
pop
lea
add
repnz
add
or
aaa
in
fimuls
jne
mov
int
mov
jne
add
mov
dec
xchg
jge
mov
add
add
jae
js
pop
jmp
add
xchg
dec
arpl
push
int3
and
call
add
fdivl
or
and
push
nop
or
jle
fidivs
call
insl
roll
addr16
add
add
pop
jecxz
cmp
lods
sbb
add
ss
repz
ds
add
add
add
addb
add
xrelease
dec
or
mov
or
mov
les
inc
add
rclb
add
jp
rcll
ljmp
addl
addb
and
pushl
or
clc
or
and
ljmp
mov
lret
mov
ljmp
sbb
rcrb
xchg
lret
push
mov
hlt
test
push
rcrb
dec
icebp
cmp
notl
je
pusha
add
pop
mov
aad
add
add
jnp
add
ds
add
cli
sub
mov
add
add
pop
aam
add
repz
mov
sbb
push
cmpsb
add
jmp
add
add
movb
addb
add
cwtl
test
leave
lahf
sti
aas
jle
hlt
repz
sub
cmpsb
add
shl
sbb
add
add
dec
mov
add
fiadds
add
ljmp
stos
outsl
lds
xor
mov
add
sti
fnstsw
pusha
add
popa
add
pop
rolb
fs
add
add
fsubl
iret
inc
add
dec
xchg
stos
add
push
and
ljmp
mov
add
in
lea
push
outsl
dec
jno
incl
add
incl
call
add
add
call
pop
xlat
test
arpl
cmp
add
sbb
add
xchg
jno
incl
add
data16
push
cmpsl
add
cwtl
negl
add
add
mov
sub
xor
dec
data16
add
fdivl
cmp
mov
sbb
outsl
test
add
fbstp
add
movl
xchg
xor
add
mov
add
jp
inc
add
lds
stos
into
pop
jmp
addb
add
pushl
mov
push
jecxz
adc
mov
adc
inc
add
sub
adc
cmp
jmp
add
and
ljmp
jb
cmp
clc
sar
imul
jne
sub
in
in
mov
into
imul
push
xor
pop
or
mov
out
push
jo
cli
les
and
out
inc
add
jae
cmp
xor
jmp
push
test
push
movsl
add
loopne
cwtl
jnp
cs
pop
adc
pushl
cltd
sbb
jp
jnp
mov
loopne
movb
test
fbld
iret
in
or
add
in
mov
jne
push
add
inc
add
pusha
add
bound
push
jne
dec
jmp
stos
rolb
add
add
mov
pop
mov
adc
add
pop
mov
add
mov
xchg
add
add
out
push
add
aas
lahf
jmp
add
ljmp
outsl
cmp
add
jp
mov
sbb
inc
add
std
pop
jp
add
cmc
sub
cwtl
cmpsb
add
incl
add
dec
cmp
and
rcll
mov
mov
push
mov
add
pop
mov
test
cli
push
jecxz
das
call
lcall
add
enter
add
mov
sbb
push
add
add
call
ljmp
add
add
iret
or
or
add
add
call
inc
add
add
pop
add
add
rolb
add
in
fucomp
fwait
xchg
adc
call
jge
add
and
in
sbb
push
addb
add
xchg
scas
stos
add
ds
lret
pop
aam
add
add
add
dec
mov
pushl
clc
int
push
inc
add
leave
data16
xor
decl
insl
pushf
jl
test
repnz
ret
push
add
int
add
jnp
pop
call
xchg
jbe
test
xor
add
ds
test
sub
add
mov
xchg
add
movsl
add
and
jmp
add
cmp
pop
push
pop
mov
xor
cli
mov
xchg
bound
call
addl
lock
add
movsb
add
in
test
iret
jb
lcall
sbb
xchg
jnp
add
movl
add
int
add
js
add
outsb
ljmp
decl
add
add
lahf
ret
iret
sahf
jecxz
inc
add
inc
add
pushf
movsl
add
push
pop
sti
movsl
add
popa
add
push
add
iret
std
mov
ficomps
fnsave
add
cmpsb
add
shr
sti
xor
incl
xor
ljmp
call
add
xlat
cmp
cmc
jne
cmp
add
cmpsl
add
or
fnstsw
add
lahf
mov
jle
add
aas
xor
push
inc
add
sbb
sbb
add
mov
adc
add
popa
add
jl
xor
cs
js
add
add
dec
or
cmpsl
add
add
aam
data16
dec
xchg
and
ljmp
loop
xor
decl
add
pop
test
inc
add
scas
or
or
inc
add
add
pushf
push
sar
add
cmp
sbb
testl
add
clc
cmp
add
lret
lahf
pop
adc
xor
call
shrb
scas
movsl
add
call
push
add
xchg
pop
sbb
push
push
add
mov
add
mov
popa
add
ss
arpl
lcall
and
mov
loopne
pop
lret
dec
repnz
lcall
add
mov
lods
iret
fistpll
and
call
pop
sub
out
fildll
fbstp
repnz
add
add
jmp
add
scas
mov
inc
add
add
add
add
add
add
or
jg
add
sbb
xchg
add
decl
shrl
add
js
das
pop
sbb
add
add
jns
push
mov
add
adc
pop
ljmp
jb
call
pushl
add
xchg
push
outsb
mov
add
lods
mov
enter
add
adc
nop
out
data16
add
scas
into
xchg
xchg
or
dec
adc
cmp
pop
int
arpl
inc
add
add
scas
mov
pushl
jmp
lret
out
inc
add
xchg
jmp
pop
and
pushl
mov
insl
xchg
xor
decl
mov
loope
rolb
repnz
mov
decl
xchg
lea
cmp
incl
pusha
add
je
add
mov
pop
mov
mov
rolb
addb
add
fdivl
add
add
add
inc
add
dec
cli
or
add
push
add
xchg
cmpsl
add
add
hlt
ret
add
xor
jmp
clc
xchg
arpl
call
std
xlat
sub
cmpsb
add
bound
jge
lea
and
ljmp
std
cld
inc
add
fwait
lods
mov
rolb
add
mov
add
sbb
mov
and
ret
add
dec
push
mov
fwait
and
fbld
add
pop
int
add
pop
add
add
jo
call
pop
adc
jmp
add
pusha
add
cmpsb
add
cmc
add
dec
mov
jns
repnz
add
bound
inc
add
cmp
addb
mov
add
push
xchg
cwtl
push
mov
mov
add
pusha
add
mov
popf
ror
aas
js
inc
add
jbe
add
scas
mov
sub
add
lcall
test
jno
lcall
add
mov
sub
add
xor
jmp
add
add
mov
add
sbb
add
mov
icebp
aam
mov
call
and
int3
mov
rorb
popa
add
cli
inc
add
mov
add
loopne
mov
sbb
or
add
out
and
cmp
flds
pushl
ljmp
mov
add
sub
add
or
loope
daa
add
and
imul
inc
add
fimuls
mov
incl
pushl
add
inc
add
stos
sbb
add
lcall
pop
out
and
add
xlat
repnz
add
add
loop
xlat
cltd
jecxz
jle
sti
cmp
add
pusha
add
movl
outsb
sub
call
mov
add
aaa
aad
iret
add
ljmp
repz
jmp
mov
push
in
testb
xor
icebp
cmpsl
add
push
cltd
dec
outsb
xchg
pusha
add
mov
push
add
cmc
les
pop
mov
inc
add
addl
add
add
decl
mov
add
mov
shlb
add
inc
add
add
add
mov
les
dec
arpl
inc
add
xchg
popf
pop
jno
lcall
or
add
cmp
add
add
sub
aaa
jo
call
cmc
test
movb
add
xchg
roll
inc
add
add
mov
incl
add
rol
add
lahf
adc
cmp
cltd
adc
ljmp
inc
add
test
jmp
scas
jnp
or
cltd
fiadds
add
pop
add
add
add
xchg
in
push
add
xchg
mov
add
incl
pushl
add
aad
and
jmp
jmp
sub
add
dec
jge
dec
xchg
or
cmpsl
add
add
dec
pop
jle
ret
add
dec
das
pop
pop
fisttpll
aam
push
add
adc
mov
add
mov
mov
add
add
gs
outsl
fdivp
push
faddp
add
inc
add
stos
data16
out
fsub
add
lret
call
add
aas
sti
pop
out
cmp
xor
je
jl
add
roll
mov
shrb
jbe
add
lods
mov
aam
scas
and
incl
add
push
add
xchg
scas
stos
das
cmp
add
add
lods
sub
cmp
bound
sti
mov
add
inc
add
add
jne
mov
decl
divb
movb
dec
add
decl
add
adc
dec
adc
ljmp
mov
in
dec
cmp
add
and
outsb
cmp
dec
jnp
mov
add
xor
jmp
ljmp
out
rcll
mov
cmp
lds
mov
xchg
mov
add
enter
add
lods
jae
decl
add
mov
pop
sbb
fisubs
mov
cmp
mulb
cmp
test
data16
or
cs
or
xchg
addb
add
decl
add
pop
jo
mov
push
xor
jmp
cmpsl
add
add
addb
sub
add
pop
push
jmp
psllq
sbb
mov
cld
test
outsl
cmpsb
add
movb
add
ljmp
add
jo
push
push
jb
ljmp
and
mov
add
mov
sbb
add
add
sub
call
call
add
add
push
lret
addl
in
lret
enter
cmp
icebp
xchg
popf
jae
fistpll
daa
add
ljmp
add
xor
jmp
add
add
sub
hlt
dec
lcall
mov
enter
add
xlat
push
mov
pop
dec
test
xor
pushl
int
add
mov
icebp
lea
incl
add
pop
add
mov
call
cmp
xchg
dec
mov
add
xchg
ret
add
jl
mov
cmp
mov
add
cld
fwait
push
xchg
mov
push
add
ds
adc
push
outsl
dec
push
into
xor
call
inc
add
xchg
mov
add
add
cmpsb
add
sub
inc
add
pushf
outsb
cmp
add
add
cmp
pop
xchg
sbb
add
loopne
add
add
call
pop
out
cltd
pop
inc
add
add
aaa
cmp
add
addb
push
add
add
xor
incl
push
nop
push
mov
loop
out
addb
push
pop
pop
dec
leave
dec
mov
add
bound
jmp
add
add
lcall
test
adc
decl
adc
ljmp
arpl
jl
xlat
add
push
loopne
pop
xlat
pusha
add
addb
add
lcall
movl
xlat
push
ja
pop
cwtl
sbb
shll
ljmp
inc
add
jle
add
cld
jae
ljmp
jmp
cmp
jg
jl
add
sti
cld
xor
addl
add
popa
add
and
incl
fwait
xchg
mov
jnp
pop
dec
gs
add
pushl
add
push
sbb
jns
jl
xchg
sub
add
mov
lahf
call
das
lods
push
add
loope
dec
repnz
add
cs
add
pop
cmp
idivl
push
add
or
int
add
lret
incl
inc
add
add
pop
fnstsw
inc
add
insl
cmp
in
push
dec
mov
int
mov
rolb
cmp
mov
xor
dec
dec
and
ljmp
mov
add
roll
add
fmuls
xchg
je,pt
aaa
add
dec
jae
dec
jae
jmp
add
pop
xchg
shlb
ficoml
add
call
stc
roll
add
add
lcall
jle
xchg
fiadds
xchg
bound
incl
inc
add
fs
add
and
add
inc
add
pushl
add
sti
addb
ficoms
add
jge
pop
nop
fdivrs
add
add
inc
add
jbe
inc
add
sub
mov
clc
data16
test
add
push
adc
push
scas
pusha
add
pusha
add
mov
add
add
push
add
mov
add
movsl
add
sahf
repnz
or
adc
out
sbb
mov
add
jns
cmp
add
test
outsl
cmc
data16
add
outsl
mov
scas
repnz
jge
and
out
push
mov
addb
add
add
inc
add
or
push
shr
mov
push
jo
cmp
add
add
inc
add
add
inc
add
inc
add
and
fidivl
add
lock
add
add
jmp
add
add
push
and
incl
xchg
ret
je
aaa
enter
insb
cmp
cmp
call
pop
fmull
sbb
imul
add
pop
add
fcmovb
add
call
addl
cmc
inc
add
mov
mov
pop
and
lcall
popf
add
jmp
add
mov
fdivr
inc
add
jae
call
movsb
add
add
bound
call
lcall
dec
mov
mov
xchg
fsubrp
jo
call
in
test
add
cmpsb
add
add
dec
mov
lret
int
xor
lcall
cli
and
jmp
fsubrl
add
inc
add
test
inc
add
push
fmull
add
add
add
js
addr16
add
add
inc
add
push
mov
push
fstl
dec
ret
add
repz
or
lcall
pop
and
out
pusha
add
repz
add
mov
mov
add
popa
add
mov
add
mov
enter
lret
mov
jmp
cmp
add
outsl
test
inc
add
add
sbb
into
fsts
push
addl
pop
push
loopne
add
add
add
roll
and
cmp
outsb
jns
sbb
adc
ret
sub
add
inc
add
add
ljmp
xchg
or
cs
clc
mov
ljmp
nop
lea
add
add
cmp
jae
jmp
add
lods
data16
jmp
add
roll
xchg
pop
cli
mov
cmpsl
add
add
and
lcall
add
pop
addb
add
pushf
fdivrs
add
cs
add
cmp
add
add
roll
lea
add
sub
add
mov
add
mov
bound
lcall
add
dec
arpl
jmp
add
fdivp
xor
ljmp
push
inc
add
add
jecxz
test
and
jle
xor
call
clc
popf
clc
out
and
jnp
sub
pop
mov
add
jnp
test
cld
call
add
pop
mov
add
packsswb
pushl
jbe
add
pushf
jg
jl
mov
add
mov
cmp
insb
sbb
pushl
add
pushf
aas
xchg
cmp
push
jmp
fisubrl
cmc
cmp
pop
dec
cmp
add
test
ja
sbb
scas
adc
add
sub
add
ret
add
add
add
insb
ljmp
add
jl
add
or
add
pop
add
hlt
push
add
xchg
mov
mov
add
sbb
inc
add
add
clc
dec
movsl
add
add
cmc
cs
inc
add
pop
stos
mov
mov
lock
movsb
add
pushf
push
add
pop
xor
call
adc
call
add
mov
and
cmp
outsb
adc
pushl
and
pushl
je
dec
ret
add
pusha
add
pop
dec
mov
add
add
add
mov
sarb
mov
push
xor
pop
faddl
xor
lcall
fimull
add
add
sbb
movsb
add
test
add
pusha
add
test
add
ljmp
sub
add
mov
pop
add
mov
les
mov
lds
mov
das
arpl
call
add
fdivr
push
enter
or
out
hlt
movsb
add
je
roll
add
rolb
mov
int3
pop
les
addl
add
addl
add
addl
pusha
add
insb
and
fsubr
mov
incl
add
xchg
jbe
roll
in
test
sarb
addr16
adc
sbb
test
sbb
loope
cmp
incl
add
push
add
movsl
add
add
add
pop
loope
fwait
inc
add
push
lret
add
call
add
ret
add
push
sub
lret
lea
ljmp
add
decl
cmp
movb
add
or
or
pop
jmp
add
xchg
push
loop
push
out
adc
je
out
fnstsw
add
lea
or
loop
lcall
cli
sbb
add
std
mov
or
add
add
push
add
xchg
aad
or
ss
lods
sbb
rol
add
std
adc
decl
popa
add
xchg
mov
jle
inc
add
mov
push
jno
call
add
add
int3
or
call
add
sub
inc
add
mov
add
inc
add
add
bound
jmp
movb
cmpsl
add
enter
add
repz
or
hlt
dec
sbb
add
call
add
fwait
adc
lcall
xor
jg
shlb
add
jb
incb
sub
jne
push
inc
add
add
int3
and
out
out
les
sub
mov
and
mov
int
add
lock
push
add
call
bound
incl
addl
and
fisttps
add
pop
lods
pusha
add
nop
add
call
add
mov
xchg
xchg
pop
add
add
and
ficompl
enter
jmp
pop
stos
call
call
call
add
pop
mov
ljmp
decl
sub
xor
call
pop
adc
add
mov
daa
add
or
pop
mov
mov
lds
insb
into
mov
add
ljmp
fadds
add
pop
xor
lcall
add
add
repnz
pop
hlt
xor
inc
add
stos
push
add
dec
xor
xchg
xor
incl
add
hlt
call
setge
add
add
lds
xor
incl
add
add
mov
add
add
stc
jecxz
fcomp
ja
jge
add
add
push
int
add
movsl
add
add
push
test
insl
movsb
add
shl
cmp
ljmp
addl
test
adc
jmp
add
dec
imulb
add
sti
js
inc
add
pusha
add
int
movl
sub
add
or
jecxz,pt
xchg
inc
add
addl
inc
add
add
add
addb
mov
add
add
jg
adc
dec
and
arpl
inc
add
push
push
add
xchg
sub
enter
decl
lcall
add
add
adc
add
jl
add
add
mov
ret
test
add
decl
add
notl
add
mov
ret
add
xchg
movl
int3
fcmovbe
out
std
loop
int
add
out
das
cmp
pusha
add
push
or
add
int
dec
fucomp
mov
mov
movsl
add
call
pushl
pushl
add
mov
jb
ljmp
add
sti
or
add
xchg
stos
stos
cwtl
stos
jnp
cmp
add
rolb
xor
lcall
add
addb
add
cmp
pop
and
cmp
fnsave
add
add
add
shl
dec
jne
and
call
add
scas
into
iret
add
ljmp
js
mov
pushl
add
out
nop
fdivl
jmp
incl
testl
mov
rorb
stos
cmpsb
add
adc
out
mov
sbb
sub
mov
lods
mov
add
daa
add
add
les
mov
add
jae
decl
inc
add
add
pop
popa
add
mov
add
in
sbb
add
add
fbld
add
hlt
lret
aad
jmp
add
add
dec
loope
add
add
sbb
and
call
add
lods
lods
ficomps
mov
dec
sub
inc
add
xchg
into
add
add
add
cmp
outsl
xor
incl
add
lret
or
scas
fisttpll
and
fiaddl
pushl
adc
add
pop
jns
ss
inc
add
shlb
add
adc
add
push
add
add
add
lcall
cld
sbb
movb
mov
pop
add
add
add
lcall
jb
lcall
cmp
jns
sub
sahf
sti
rcll
decl
xchg
fistl
call
add
movsl
add
add
outsl
sub
or
outsl
jg
add
call
pop
jmp
add
jnp
imul
mov
or
add
inc
add
add
add
shlb
ret
add
je
int
add
or
xor
ljmp
loop
daa
add
push
adc
cmp
add
pop
aas
xor
dec
jo
call
add
and
decl
mov
insl
mov
pushf
xor
push
das
add
decl
pop
push
adc
call
add
std
cwtl
movb
lods
jle
add
add
jmp
xchg
push
jge
add
add
adc
call
jmp
xchg
nop
inc
add
rcll
addl
popf
or
addb
cld
push
int3
rcrl
mov
in
or
adc
jmp
push
ljmp
add
repnz
add
add
mov
add
mov
or
jg
sbb
add
sbb
sub
rorl
jge
les
iret
addl
add
std
cwtl
adc
add
push
pop
cmpsl
add
add
push
add
jp
add
pushl
add
into
mov
and
jmp
fisttps
adc
lcall
pop
jne
add
comiss
add
lods
mov
add
mov
add
fmulp
cmc
mov
inc
add
mov
ljmp
outsb
xchg
xchg
addb
or
scas
push
add
arpl
dec
mov
xlat
pop
pop
mov
add
fsts
mov
add
add
mov
in
add
stos
leave
jl
dec
dec
inc
add
std
jp
in
mov
mov
divl
ds
sub
jmp
icebp
xor
fdiv
inc
add
popf
jns
add
addb
lea
add
out
push
jl
add
fcmove
aaa
ret
add
rcr
cltd
sbb
fwait
test
add
das
cwtl
add
or
aam
mov
dec
stos
mov
add
bound
pushl
dec
lods
int3
xor
mov
add
add
dec
in
addb
sub
enter
loope
cli
into
xor
dec
ss
add
push
add
push
mov
sti
add
add
sub
jne
shl
mov
add
push
add
add
mov
xchg
mov
push
jno
incl
add
test
js
pop
mov
add
mov
add
mov
cmp
push
add
pop
cmp
push
pop
add
add
mov
and
pushl
int3
sbb
in
mov
fdivr
xchg
push
add
sbb
movsb
add
and
jmp
add
add
and
push
push
mov
add
jo
incl
test
cli
mov
add
cmp
ljmp
repz
ss
pop
clc
inc
add
add
roll
adc
call
scas
adc
incl
push
frstor
in
stos
movsb
add
add
ljmp
hlt
sbb
dec
and
faddl
add
addl
xchg
movl
jl
add
hlt
mov
sbb
add
aad
xor
push
ja
cmp
add
add
outsl
mov
push
xor
jnp
add
cmp
xlat
roll
add
adc
inc
add
add
add
je
mov
dec
lea
mov
lcall
add
add
xor
jnp
sarl
dec
movl
jmp
sbb
inc
add
addl
add
jno
decl
roll
pop
data16
lods
and
lahf
push
sub
shr
movb
add
les
lret
sahf
movl
push
mov
push
mov
mov
add
enter
jg
add
sub
daa
add
and
add
lcall
push
add
xchg
jo
incl
add
lock
loope
adc
ljmp
insl
mov
add
jp
xchg
xor
incl
add
cmp
ss
cmpsb
add
sub
add
mov
cli
fisubrs
enter
or
add
add
in
and
jmp
addb
add
add
jmp
push
push
jge
or
inc
add
enter
inc
add
xchg
lods
sub
add
mov
iret
push
mov
add
call
xchg
and
add
add
push
dec
mov
jg
xchg
dec
xor
pushl
mov
add
incl
incl
fidivrs
pop
add
add
add
movl
xchg
pusha
add
xor
cmp
adc
lcall
addl
add
in
loopne
rcl
jbe
add
adc
lcall
mov
dec
in
cmp
addl
js
inc
add
sub
stos
out
jl
std
xchg
adc
pushl
push
dec
fidivrs
cmc
fimull
les
mov
cmp
pop
cmp
jb
jmp
cmpsb
add
ljmp
loop
fstpt
popf
inc
add
pop
jge
add
mov
js
aad
cli
jo
pushl
add
ret
add
push
add
add
in
mov
adc
add
push
add
sub
add
ret
hlt
pop
mov
ja
or
incl
add
add
or
mov
cwtl
ljmp
outsb
sbb
add
mov
mov
push
dec
adc
push
and
add
inc
add
add
jne
fisubl
add
push
nop
push
mov
push
add
cmp
cmc
cs
add
decb
inc
add
add
add
inc
add
aad
push
add
cmp
out
fbstp
push
xchg
mov
out
test
jge
mov
rorb
popa
add
inc
add
sub
mov
cmc
or
add
mov
into
mov
add
lahf
or
and
inc
add
lahf
pop
add
dec
dec
mov
add
dec
mov
test
cltd
mov
add
arpl
fldcw
push
add
lret
jae
ljmp
jecxz
int3
lahf
fisubrs
aam
and
decl
add
ja
fxch
mov
add
sbb
add
incl
pushl
add
loope
cli
out
roll
push
mov
add
in
int
call
add
in
adc
jmp
add
add
pop
add
fbld
add
sahf
mov
jb
mov
ljmp
jnp
dec
ficomps
fwait
sbb
incl
add
sub
adc
adc
jbe
mov
test
xchg
bound
inc
add
movhps
fwait
xchg
or
add
dec
xchg
or
add
mov
nop
mov
inc
add
mov
add
lahf
jnp
lahf
push
inc
add
call
add
call
das
inc
add
iret
push
movsb
add
fldenv
add
dec
testb
addb
add
cmp
add
cmpsb
add
inc
add
pop
add
add
jmp
add
add
dec
xchg
cmp
sbb
add
add
add
dec
adc
sbb
mov
ds
add
pushf
dec
loope
sub
add
das
add
call
add
movl
add
call
incl
add
pushl
add
pop
jle
sbb
cs
add
add
xor
roll
add
movsb
add
ljmp
fbstp
push
add
mulb
in
adc
add
xchg
addl
daa
add
mov
call
out
push
add
fisubrl
lock
ds
and
sbb
pop
xchg
adc
ljmp
add
call
cmovl
add
mov
lods
add
xor
jne
or
lods
js
sahf
add
call
cltd
loop
jl
add
cmpsb
add
jge
fwait
xor
jnp
push
xor
jmp
add
cmpsb
add
mov
xchg
jo
call
aad
inc
add
add
sub
in
mov
je
xor
in
lds
jno
jmp
add
add
push
jae
decl
add
ljmp
ret
add
push
add
jg
cmp
push
add
add
dec
sbb
push
add
mov
repnz
add
rcl
sbb
adc
ror
fwait
dec
add
lcall
cmp
sub
je
add
stc
xchg
mov
rolb
mov
pushf
xlat
int
add
cmp
add
add
sub
add
push
add
rcrl
add
call
add
mov
add
xor
pop
xchg
jecxz
les
jno
ljmp
add
push
add
xor
sbb
add
incl
pushl
add
movl
add
add
add
lcall
jge
add
push
add
rorl
insl
test
add
ror
addl
mov
in
cmp
add
dec
popf
iret
bound
cld
out
mov
pusha
add
cmc
and
incl
decl
bound
dec
mov
add
shlb
call
add
je
insb
inc
add
add
add
xor
call
add
dec
in
xchg
sbb
cwtl
and
push
pop
loopne
or
add
push
cs
pushl
xchg
or
add
xchg
sbb
movl
add
decl
sti
out
push
mov
xchg
out
push
and
push
mov
push
fwait
xor
ljmp
stos
and
jmp
cltd
nop
ss
xchg
sbb
push
pop
jne
test
dec
daa
add
jl
add
mull
fidivrs
pushf
cmp
rorl
inc
add
add
roll
fs
loopne
sbb
imul
add
imul
test
pusha
add
fldcw
xor
addl
add
add
call
add
mov
fbstp
dec
pusha
add
shl
mov
push
add
pop
pop
mov
cmp
jmp
add
jbe
xchg
sub
mov
add
add
das
pop
jae
call
add
nop
in
testb
mov
push
pop
jle
lods
xchg
ss
add
push
mov
adc
call
ret
add
les
sbb
arpl
jnp
add
pop
add
pushl
add
inc
add
sti
sbb
add
add
sub
dec
mov
adc
imul
push
fidivl
add
adc
incl
inc
add
arpl
decl
add
add
add
sbb
pop
mov
lahf
scas
xor
push
or
daa
add
jmp
in
rolb
stc
std
add
cld
pop
mov
add
dec
sbb
add
in
sahf
fdiv
lahf
lcall
add
add
add
pop
out
cmp
rolb
pop
int
add
push
add
jecxz
mov
push
add
xchg
jle
js
add
jmp
add
fistps
mov
add
out
je
lds
test
lock
xor
push
sub
or
add
addb
in
addl
add
add
add
push
cmpsl
add
js
add
sbb
add
int3
or
ljmp
push
add
jle
add
xchg
push
xchg
mov
jle
add
pushl
add
add
repnz
cmc
ret
mov
add
popf
cwtl
mov
pop
ljmp
hlt
test
jns
cmp
add
and
call
mov
add
add
lcall
add
decl
stc
push
rcrl
pop
fs
add
add
push
inc
add
mov
in
rorb
and
jmp
add
incl
cli
jl
add
enter
add
add
pop
sbb
pop
loopne
outsl
add
pop
adc
dec
lret
mov
outsb
lea
add
jmp
bound
ljmp
add
add
push
addl
add
add
mov
lock
add
popf
mov
int3
fwait
add
jb
fisttpl
add
add
or
add
or
add
addb
cs
add
pop
sahf
sbb
add
std
test
lahf
lea
add
sbb
add
add
and
call
dec
adc
push
pop
mov
sbb
cmp
popf
mov
fcmove
or
and
jns
nop
jbe
fisttps
ss
add
mov
aam
push
add
add
movl
aad
sub
xor
fidivrs
add
jle
inc
add
mov
outsl
insb
in
and
cmp
enter
add
mov
add
fsubs
pushl
dec
dec
jbe
aam
jnp
shr
scas
loopne
jne
pushf
lahf
clc
pop
sub
add
pop
or
add
das
adc
add
mov
call
lcall
and
repz
add
incl
inc
add
add
mov
add
jmp
add
add
stc
xchg
dec
and
push
add
xor
dec
loopne
adc
lret
dec
fwait
push
add
pop
sub
movsb
add
xchg
push
add
jg
add
add
dec
xor
sub
jbe
add
out
loop
addl
pop
fisttpll
inc
add
outsl
push
aaa
out
jae
call
dec
mov
dec
ds
les
adc
jmp
jns
push
cld
xlat
pop
mov
lcall
add
test
mov
push
add
inc
add
jmp
add
notb
and
push
pop
add
xor
dec
int
add
outsl
out
fcoms
add
call
movb
ss
mov
lcall
pop
mov
movsb
add
sub
sub
hlt
mov
cs
fmuls
roll
add
mov
add
add
or
add
mov
lea
add
cmp
pushl
add
ficomps
test
test
mov
inc
add
pop
xchg
dec
stos
push
add
jecxz
jb
jmp
incl
or
and
incl
adc
ljmp
adc
jne
add
jmp
add
out
mov
and
lcall
or
jp
add
add
movsl
add
cld
nop
sub
int3
fistps
add
mov
fbstp
add
xchg
daa
add
inc
add
cmp
add
pop
xchg
daa
add
add
ss
ss
mov
add
add
ljmp
pushl
add
lock
hlt
mov
pop
add
sub
add
mov
shl
add
jno
inc
add
add
mov
rolb
jmp
mov
add
sub
add
arpl
incl
add
nop
xor
call
push
add
xor
adc
cmpsb
add
add
clc
lea
sub
call
out
mov
sahf
int3
addb
dec
xlat
mov
jg
ljmp
or
jne
add
scas
push
xchg
popl
add
push
add
imul
pushl
add
in
loope
or
dec
dec
inc
add
xchg
test
roll
add
test
add
add
movsb
add
xchg
insb
pop
test
jo
call
call
fadds
add
sbb
xchg
adc
call
roll
pop
lock
inc
add
add
add
mov
add
add
dec
mov
call
out
test
rcll
les
pop
sti
mov
call
adc
lcall
xor
dec
dec
and
push
sbb
add
jbe
sbb
push
pop
in
mov
jge
xchg
sbb
pop
mov
rcrl
add
add
stc
imul
add
jmp
add
add
insb
cmpsl
add
add
jl
add
jmp
add
add
add
insl
movb
add
pop
decl
sub
ljmp
dec
jp
mov
repz
add
mov
push
jl
add
add
xor
incl
xor
jmp
add
dec
sti
mov
add
adc
lcall
jp
loop
lcall
add
push
mov
mov
xchg
jmp
add
push
scas
mov
adc
sub
lcall
int3
stos
cmc
rcrl
mov
push
mov
in
xchg
pcmpeqd
mov
cmp
add
add
add
dec
scas
test
jb
pushl
dec
addr16
add
add
int3
xlat
fadd
add
mov
cwtl
xchg
lahf
or
fwait
mov
mov
dec
mov
scas
xor
iret
mov
add
jnp
add
add
call
add
mov
psrlw
in
not
jmp
add
aad
shl
add
add
stos
cmp
xor
push
push
add
mov
add
add
add
push
xor
jmp
jmp
jno
lcall
rorb
roll
add
add
decb
cli
push
fstpl
and
incl
push
shlb
incl
decl
xchg
cwtl
adc
cld
lahf
sub
insb
jns
icebp
mov
add
add
out
jbe
xor
pushl
xchg
mov
fisttpl
adc
pushl
mov
incl
mov
lret
insb
xchg
dec
into
test
rcll
mov
bound
mov
add
mov
add
jnp
add
pushl
