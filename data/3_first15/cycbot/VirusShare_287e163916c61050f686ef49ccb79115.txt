fisubl
mov
rolb
mov
push
or
push
ja
add
mov
add
jb
insb
cli
repnz
adc
add
add
add
les
adc
add
ret
add
add
mov
sub
jmp
add
add
lret
and
mov
pop
dec
rcrl
mov
push
stos
out
sbb
in
test
arpl
ja
je
in
add
jecxz
pop
inc
add
sub
mov
clc
idivl
js
add
add
add
add
add
add
add
incl
stos
xchg
rol
add
push
add
add
xchg
add
cmpsb
add
add
out
add
add
dec
xchg
fdivl
cld
insb
mov
add
add
mov
push
add
cwtl
ds
push
add
sub
jp
xor
imul
hlt
add
cmp
add
add
in
addb
pop
fstpt
add
mov
fmuls
add
add
in
rolb
pop
es
inc
push
lret
mov
mov
loop
mov
ljmp
or
movb
pop
cmp
enter
aaa
cmp
cmp
mov
push
and
dec
mov
add
add
testb
add
lahf
add
mov
pop
or
jnp
pop
ljmp
lds
sbb
add
out
xor
fimull
pop
push
mov
mov
push
add
lea
test
sbb
add
into
arpl
dec
and
rcll
movsb
add
les
movsb
add
mov
xchg
and
add
sub
and
mov
push
add
add
add
mov
lods
jl
cli
scas
in
cmp
add
mov
add
adc
add
add
add
aad
add
jecxz
sub
add
cmp
arpl
cmp
add
add
mov
add
cmc
out
xchg
cmp
xor
add
cmpsb
add
movl
mov
push
add
addb
into
sbb
add
dec
sbb
pop
lock
cmpl
jns
add
mov
mov
es
jae
add
out
loope
add
popa
mov
add
xor
test
add
mov
sub
fcomip
add
dec
mov
enter
xor
and
pop
jnp
add
int3
push
add
add
add
jae
xor
or
sub
addb
and
mov
inc
adc
or
or
imul
mov
add
gs
xor
add
add
add
add
imul
add
jl
add
mov
fsubrl
push
add
add
push
add
add
add
cltd
pop
inc
add
in
hlt
add
pop
and
mov
dec
sahf
cld
mov
push
sbb
add
xlat
ljmp
add
testb
imul
add
mov
add
add
mov
les
xchg
testb
push
add
addr16
xlat
pusha
add
push
jne
addb
mov
sahf
xchg
insb
pop
leave
test
enter
add
push
add
mov
gs
mov
clc
je
adc
push
add
pop
int3
addb
and
data16
add
add
pop
loope
add
add
movb
add
aad
add
add
add
addl
add
add
sub
add
rolb
pop
pusha
add
mov
movsl
cli
xchg
add
add
mov
fwait
dec
js
cs
fisttps
add
mov
mov
sub
add
mov
xorl
mov
mov
or
pop
mov
aaa
adc
out
xchg
mov
inc
adc
and
add
or
add
pop
daa
nop
add
cld
cmp
jns
clc
rolb
in
add
mov
add
push
fstpt
popf
or
in
and
fpatan
fisubs
add
add
insb
out
nop
add
add
or
mov
add
leave
push
lret
xor
mov
mov
leave
mov
xchg
mov
push
add
xchg
outsl
push
pop
xchg
add
int3
fcomip
add
push
add
add
or
add
add
mov
test
add
add
add
mov
jb
mov
std
inc
add
fnstsw
popa
jb
mov
ds
add
lods
pop
pop
or
add
leave
push
add
in
adc
test
add
int
push
add
add
jnp
xor
stos
negl
rolb
jns
bound
mov
mov
sub
and
inc
add
testb
add
sti
inc
imul
sub
add
mov
add
or
mov
cmp
xchg
add
mov
add
add
gs
xchg
add
cmpsl
dec
ljmp
add
xor
pop
sub
add
movb
add
jb
pop
inc
add
jle
adc
in
add
mov
fistpll
adc
adc
nop
add
add
fnstcw
out
dec
sub
add
fsubs
add
add
add
rcll
dec
mov
inc
loop
lret
cmp
pop
jnp
jp
add
add
stc
jl
movsb
add
icebp
jnp
mov
jo
das
std
sarl
addb
xor
xor
dec
jbe
sub
dec
fxch
xchg
adc
add
add
dec
out
dec
inc
add
add
jne
movsb
add
stos
push
adc
add
imul
cwtl
call
and
or
add
add
loopne
jb
mov
and
mov
stc
xlat
pop
mov
add
jl
or
inc
add
add
iret
movb
jo
bound
mov
pop
daa
cmpsl
out
xchg
cmc
inc
shll
add
jns
mov
pop
testb
cmp
cmp
push
add
fs
sbb
add
mov
adc
loopne
cmp
add
jne
mov
jmp
pop
mov
adc
xchg
add
jb
add
sub
sub
rolb
sbb
add
sbb
aam
mov
adc
dec
add
fstpl
add
loope
add
fsubr
pop
shrl
mov
mov
add
cmp
add
jbe
dec
shrl
add
aad
mov
xchg
add
lods
filds
lods
loop
jecxz
add
push
add
add
xchg
add
add
add
push
movswl
mov
out
test
cwtl
pop
shr
lcall
outsl
ljmp
add
call
aad
adc
ret
xor
add
sub
sbb
cmpsl
hlt
add
cld
fsubrp
jae
js
add
cltd
jecxz
addb
add
mov
aaa
lock
call
les
mov
add
mov
adc
sbb
mov
mov
add
pop
lcall
outsl
popf
lea
add
popa
inc
jne
sbb
add
mov
jecxz
movsl
enter
sub
add
add
add
add
add
push
lret
pusha
add
inc
mov
xchg
mov
cmp
cmp
add
add
pop
lret
sub
mov
popl
inc
add
add
icebp
call
in
xchg
mov
dec
or
cmpsb
add
add
add
mov
subl
cs
push
inc
cmp
aaa
mov
mov
add
int
icebp
mov
mov
mov
pop
inc
insl
mov
sbb
mov
dec
sahf
stos
popf
pusha
add
add
test
dec
outsb
pop
or
add
leave
mov
pop
sbb
shl
das
mov
push
add
mov
xchg
in
mov
add
add
js
add
push
add
in
cmp
jbe
les
pop
push
add
test
mov
popf
inc
bound
mov
add
sub
cmp
pop
mov
add
add
pop
lods
mov
add
mov
add
add
pushf
fwait
cmp
mov
xchg
cld
inc
addb
xor
cli
mov
add
pop
pushf
mov
sbb
add
test
leave
or
mov
testb
mov
jnp
mov
xchg
mov
add
add
test
add
adc
jns
add
out
in
jnp
add
mov
add
mov
stc
add
pop
mov
iret
jmp
add
add
add
mov
pop
daa
cli
stc
mov
add
mov
add
add
add
and
and
mov
mov
mov
add
mov
mov
cmp
repnz
add
add
rolb
mov
jmp
add
dec
mov
int
xor
pop
testl
adc
add
fbstp
mov
bound
mov
inc
add
mov
loop
test
or
sbb
js
mov
jbe
nop
add
js
xchg
hlt
add
loopne
pop
inc
pusha
add
cmp
add
bound
mov
scas
je
inc
add
add
daa
xchg
lret
ds
roll
dec
out
ret
mov
xchg
add
lds
xor
sahf
and
js
faddl
ds
sbb
add
pop
mov
fidivl
mov
xchg
push
loop
ja
pop
add
in
sub
push
push
push
cld
call
sub
mov
cs
es
ss
push
call
cmp
je
es
lea
push
cs
es
call
test
jne
jmp
lret
icebp
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
lea
add
repnz
mov
sub
sub
push
pop
push
push
jmp
jmp
add
add
in
fidivrs
sbb
xor
cmp
jb
fstpl
xchg
scas
bound
mov
ljmp
nop
add
fninit
inc
add
sarl
cmp
mov
enter
pop
ljmp
adc
les
cltd
lahf
and
add
fsubrs
addr16
stc
push
in
enter
mov
xor
sti
add
outsb
mov
test
pop
jbe
fldt
inc
sbbl
mov
stc
das
push
add
jb
push
add
xor
in
popa
jo
imul
nop
add
das
fwait
call
int3
cmp
pop
jl
sub
push
add
fcompl
scas
shrl
stc
sub
add
pop
popf
mov
add
mov
cmpsb
add
pop
outsl
stos
cmp
pop
dec
mov
pop
stc
pop
leave
add
mov
testl
add
sbb
fistpll
xor
add
mov
shrl
or
sti
mov
adc
add
mov
pop
fcompl
insb
imul
ljmp
xor
icebp
loope
mov
rolb
mov
mov
mov
push
mov
nop
add
xchg
add
or
frstor
add
push
imul
insl
mov
sahf
pop
in
mov
add
adc
add
xor
add
add
popf
pop
push
les
addb
or
adc
push
add
cwtl
add
inc
add
fsubr
icebp
dec
das
loop
add
inc
add
or
gs
xchg
mov
pop
hlt
add
lahf
stos
and
mov
add
add
add
movsl
and
mov
stos
leave
jmp
add
sub
mov
jno
sahf
out
jae
pop
insb
mov
adc
std
gs
add
prefetch
push
repz
lret
mov
popa
movb
add
rcll
add
inc
add
adc
add
add
add
or
std
jne
pop
jge
enter
and
mov
adc
push
add
lods
outsb
ljmp
add
add
adcl
adc
adc
sahf
pop
lahf
pop
inc
add
ret
sbb
add
iret
cmp
add
std
stos
imul
add
add
inc
add
and
mov
sub
add
xor
add
mov
data16
divl
aaa
jmp
dec
pushf
adc
add
sub
add
int3
jg
xor
fsubs
mov
das
testl
xchg
mov
inc
add
cmpsl
loope
aaa
subl
into
dec
addb
add
jnp
add
fnstenv
add
and
bound
mov
movsb
add
fbstp
add
add
dec
cmp
aad
add
jmp
adc
mov
and
hlt
add
sub
jmp
testb
mov
aad
addb
clc
adc
xor
int3
lds
add
shll
loop
out
bound
mov
jae
jbe
cmpsl
add
and
mov
arpl
mov
push
cmp
add
mov
mov
add
mov
lret
fsubrl
push
add
imul
adc
mov
clc
andl
push
add
ret
mov
iret
add
mov
jno
add
push
add
iret
pop
cmp
jns
mov
daa
pop
jb
pusha
add
mov
dec
adc
icebp
insb
pop
jbe
icebp
gs
add
and
mov
add
xchg
iret
or
add
inc
test
or
add
movsl
daa
das
sbbl
fadd
add
sub
mov
out
mov
add
add
add
mov
aas
insl
and
ret
scas
popf
dec
ret
loopne
cmp
jae
inc
cmp
ret
sub
outsl
fsubrl
mov
mov
out
mov
ficomps
sub
rolb
dec
add
jp
aaa
and
add
sub
mov
dec
dec
xor
mov
add
add
add
push
add
lcall
add
scas
xchg
mov
stos
or
inc
add
mov
add
add
jae
adc
inc
jmp
in
fbstp
mov
mov
xor
mov
lods
fidivrs
inc
inc
movb
aad
loope
add
mov
add
add
add
mov
jns
add
int3
lcall
mov
testb
add
pushf
sbb
add
xchg
add
add
adc
mov
daa
or
pusha
add
sub
cmp
insb
jecxz
add
add
data16
pop
mov
and
or
mov
popa
xchg
add
sahf
mov
dec
ja
add
inc
add
xchg
imul
mov
add
mov
add
lret
bound
mov
rolb
stc
lcall
pushf
or
add
cmpsb
add
pop
jnp
pusha
add
mov
imul
xchg
add
xor
add
js
aad
inc
add
add
inc
add
xlat
les
jae
add
add
add
scas
xchg
cmpsl
add
add
mov
add
and
sarl
and
sub
cmp
lods
mov
xchg
add
add
pop
mov
cmp
in
or
push
out
pop
je
jno
daa
fidivl
cmc
addr16
sub
and
mov
loop
jl
enter
mov
lcall
adc
adc
dec
mov
add
sbb
loope
inc
add
xchg
mov
lret
inc
add
stc
and
mov
push
add
addb
out
inc
add
repnz
aad
int
add
mov
js
iret
xor
gs
add
daa
lods
lds
add
stos
and
mov
xor
dec
pop
ret
add
cmpsl
add
xchg
add
nop
add
cmp
mov
cmc
mov
data16
add
add
add
push
add
add
fistl
add
mov
xor
sub
add
add
add
test
xchg
add
jl
bound
mov
pop
xor
pop
add
mov
in
test
fs
add
mov
adc
add
stos
js
add
mov
cmpl
scas
inc
adc
mov
push
jge
outsb
jmp
stos
or
add
add
mov
add
and
mov
jg
das
fnstenv
std
test
mov
mov
call
push
test
add
loopne
fstpl
or
mov
jge
add
addb
mov
adc
jmp
push
add
sbb
mov
mov
bound
mov
add
add
jno
xchg
add
cwtl
xchg
pop
lds
xor
add
cmp
xor
jle
push
adcl
loop
jg
in
xor
loope
in
in
nop
add
cmp
mov
clc
pop
lcall
cmpsb
add
loop
push
add
jo
pop
or
jno
movsb
add
inc
add
add
cld
add
mov
add
scas
cmpsl
addb
push
add
add
add
jb
loopne
sti
gs
gs
fsubl
add
push
push
or
fldl
add
add
icebp
scas
add
mov
dec
les
fisttps
test
add
add
xchg
enter
shrl
add
mov
add
add
add
add
ljmp
add
add
mov
mov
mov
into
popf
and
xor
lods
and
xchg
add
add
add
ret
xor
add
add
subl
popa
adc
mov
pushf
push
and
mov
ja
popf
mov
jmp
add
add
add
aam
cmp
sahf
lcall
add
mov
aaa
xchg
jmp
arpl
adc
push
imul
inc
add
mov
push
add
insl
xor
sub
scas
fst
cld
xlat
mov
lds
add
jbe
call
pop
lea
pushf
mov
xchg
imul
out
imul
mov
cmp
rolb
jg
inc
lds
cmpl
add
in
outsl
je
cwtl
cld
push
cmp
outsl
mov
push
sub
add
add
sbb
mov
cmp
popa
data16
sub
mov
shll
mov
arpl
push
sbb
xor
leave
push
add
mov
dec
lcall
add
mov
pop
pop
jo
data16
mov
data16
add
inc
add
rolb
and
mov
repnz
push
popf
add
fmuls
fsubl
add
lret
add
mov
add
add
add
mov
jo
mov
add
add
inc
add
mov
xor
jae
mov
mov
push
add
lea
rorl
mov
add
insb
sbb
add
xchg
mov
js
je
push
add
xchg
add
add
movsb
add
add
mov
adc
ficomps
cmp
push
add
add
jb
aas
cmp
movb
jno
add
add
or
rorl
lods
xchg
int3
shll
insb
out
add
dec
jmp
sbb
dec
scas
addb
add
push
add
daa
mov
add
std
pop
xchg
add
add
sub
add
dec
ja
repz
test
adc
add
add
xor
jnp
and
rolb
aam
or
lahf
cld
sub
cmc
add
jge
add
adc
sbb
add
test
xchg
bound
mov
inc
push
add
mov
add
add
mov
rolb
arpl
dec
or
les
jecxz
lea
add
sub
mov
pop
aas
mov
pop
movsb
add
and
mov
test
sbb
call
aam
imul
add
test
sub
add
pop
data16
mov
or
sub
add
dec
xor
ds
add
or
add
aam
mov
xor
xchg
mov
push
popa
mov
fwait
ret
js
cmp
outsb
pop
pop
outsl
sub
add
add
push
add
add
mov
xchg
lret
and
mov
xchg
add
add
xchg
popa
cmp
add
jp
add
cmp
popa
pop
stos
push
jle
pop
push
add
repnz
jmp
outsl
out
jmp
mov
cmc
nop
add
rolb
nop
add
add
sub
add
adc
test
push
mov
mov
push
add
add
cmpsl
jl
add
add
rcrl
loope
cmp
pop
iret
or
sahf
or
out
test
add
add
add
mov
out
jbe
add
add
jle
add
jmp
mov
pushf
xchg
add
add
sti
mov
add
daa
mov
test
fcom
js
add
push
add
add
mov
add
nop
add
mov
loopne
test
dec
cltd
xor
mov
pop
jae,pn
lcall
sbb
xor
cwtl
jmp
loope
dec
cltd
cs
xchg
cltd
dec
mov
mov
add
add
shr
fsubl
add
js
add
add
add
mov
jne
shll
and
mov
add
sbb
cltd
push
mov
add
add
inc
add
dec
lret
push
loop
testb
mov
out
xchg
push
add
add
add
jg
nop
add
add
or
hlt
add
add
gs
add
add
sub
iret
addb
dec
out
mov
mov
add
daa
int3
popa
sub
jmp
in
and
xor
add
add
int
out
cmp
ss
add
sbb
mov
mov
add
sub
mov
cli
push
mov
sbb
mov
add
out
sub
mov
rolb
shll
int
add
mov
loopne
repnz
pop
stos
dec
cltd
sub
pop
sbb
enter
push
add
sbb
out
bound
mov
loope
popf
out
bound
mov
add
add
sub
jg
pop
rcll
stc
mov
add
xchg
adc
scas
sub
mov
mov
lock
mov
movb
sahf
and
mov
rolb
push
add
mov
add
lret
add
add
xchg
jg
add
push
add
pop
stos
pop
xchg
lcall
popa
dec
jmp
add
xor
push
add
sbb
testl
movb
into
mov
push
les
scas
inc
and
dec
lcall
sub
add
lcall
popa
nop
add
lret
jo
jbe
cld
mov
add
add
add
mov
and
mov
or
jno
adc
push
add
add
add
add
or
pop
inc
add
lahf
testb
lea
and
inc
push
add
rcr
dec
sbb
addr16
add
add
scas
push
add
cmp
add
enter
popl
add
pop
aaa
sub
add
xchg
inc
add
mov
outsl
rolb
jbe
dec
cmp
add
fiadds
pop
pop
xchg
ret
sbb
pop
rolb
xchg
cltd
xor
inc
mov
mov
jecxz
in
pop
ror
cmc
sub
addb
add
lea
mov
cli
cs
add
add
cli
inc
add
mov
add
test
jo
rolb
pusha
add
xchg
add
add
add
arpl
bound
mov
add
add
loop
inc
push
dec
and
mov
in
imul
add
add
add
sub
mov
sbb
sahf
jp
jecxz
xor
das
dec
pop
lods
push
add
add
add
or
add
add
add
pushl
lret
mov
add
je
push
add
add
xchg
fwait
mov
xchg
inc
repz
sbb
add
cmp
stos
lahf
rolb
negl
addb
push
push
add
add
sbb
xchg
add
adc
push
add
data16
dec
adc
add
add
push
aas
sub
mov
add
pop
add
dec
lcall
scas
pusha
add
add
add
and
mov
sbb
add
scas
pop
mov
add
insb
xchg
loop
jmp
mov
add
jl
push
dec
ja
pushf
iret
int3
lock
dec
pop
cmp
add
add
mov
lahf
pop
std
adc
das
mov
test
xchg
aad
jno
inc
xchg
pop
mov
or
ret
daa
add
jg
cmc
lret
add
adc
cltd
ret
mov
pop
bound
mov
in
aas
push
add
std
in
hlt
add
aas
xor
faddl
add
add
add
add
sbb
add
popa
pop
jg
rolb
cltd
loope
add
out
add
mov
ljmp
xor
sti
inc
add
mov
mov
jg
add
loopne
incb
or
repnz
push
js
add
mov
cmpsb
add
push
rolb
or
testb
mov
adc
mov
cmp
add
dec
cmp
jmp
dec
testl
mov
lods
pop
push
add
push
mov
add
add
mov
inc
add
outsl
mov
loop
mov
lock
lea
adc
dec
mov
push
xchg
add
jmp
pop
sbb
add
mov
movsb
add
add
fbld
add
add
adc
add
pop
rolb
addb
add
xchg
add
mov
add
add
add
mov
leave
iret
jae
xor
xchg
add
xorl
add
dec
sub
add
push
add
sbb
cmc
dec
jo
insl
add
fldl
lahf
cld
arpl
lret
push
fisttpl
add
mov
cmp
jge
add
xor
xor
mov
cwtl
loop
and
mov
daa
jno
mov
or
scas
dec
rolb
add
sahf
mov
mov
ss
mov
add
mov
add
out
leave
fisubrs
or
cmp
add
ret
adc
dec
lea
jecxz
add
pop
cmp
add
add
aaa
xlat
dec
add
enter
test
addb
push
add
cmp
add
xchg
cmp
pop
movb
pusha
add
mov
sbb
fisttps
add
add
in
mov
cltd
stos
dec
inc
sbb
mov
sbb
xor
aaa
aad
mov
or
les
cli
insl
test
test
or
test
movsl
add
iret
adc
and
mov
add
popa
sub
pop
xchg
mov
add
bound
mov
push
push
addb
inc
clc
in
addb
and
xorl
push
test
popa
test
test
jnp
dec
popf
push
add
add
mov
xchg
add
jno
inc
add
pop
popf
xlat
scas
sub
pop
movb
fistpll
test
mov
lret
in
jnp
add
lcall
addb
add
aaa
out
and
movsb
add
add
mov
add
cmp
mov
and
mov
arpl
aad
out
mov
pop
jmp
jecxz
xlat
push
add
and
mov
shrl
pop
sub
add
or
add
add
shll
xor
imul
loopne
mov
add
sub
push
test
or
lods
mov
mov
aas
sub
scas
xchg
add
jmp
pop
enter
shll
add
add
add
add
add
iret
enter
in
test
lea
dec
dec
adc
jae
add
add
lret
xchg
out
inc
add
fistpll
mov
push
add
sub
add
mov
sbb
addl
or
mov
add
add
out
and
push
xchg
aad
pop
and
mov
dec
arpl
mov
xchg
les
xor
push
add
movsb
add
mov
push
xchg
es
inc
add
jbe
pop
sbb
add
push
add
mov
add
jnp
sub
pop
mov
and
sub
jb
xor
lods
mov
add
and
mov
push
aad
inc
dec
idivl
mov
push
loopne
xchg
sbb
add
insb
sahf
and
dec
mov
mov
adc
addb
and
mov
add
pop
adc
popa
add
mov
push
ja
sbb
mov
pop
sub
jno
xchg
add
ficoms
cmp
sbb
add
cmp
data16
xchg
add
stos
add
mov
repnz
lcall
push
sbb
cwtl
jb
mov
add
pop
lret
xchg
add
gs
adc
fldl2e
or
pop
mov
xchg
inc
pop
jne
push
add
mov
mov
fistl
pushf
fisttpl
scas
inc
add
adc
add
scas
lods
pop
jl
mov
push
les
add
stc
loope
jno
in
addb
aam
add
clc
ds
lcall
dec
add
and
loop
cmpsb
add
pop
testb
cmpsb
add
push
add
add
add
insl
mov
adc
add
add
inc
in
nop
add
add
xchg
add
nop
add
add
add
inc
add
inc
add
add
dec
cltd
lahf
cmc
and
mov
jbe
fbstp
mov
xchg
rolb
loope
mov
cmpsb
add
mov
fistps
testb
add
lds
imul
add
imul
push
aas
and
mov
add
enter
xor
mov
add
dec
in
mov
add
add
adc
std
add
ret
arpl
add
sbb
xor
inc
add
imul
mov
add
add
out
lea
add
jl
jno
push
dec
bound
mov
add
pushf
insl
mov
lahf
movsl
xor
hlt
add
mov
mov
inc
add
xchg
add
sarl
add
ret
cltd
pop
icebp
adc
ret
add
add
mov
xchg
add
sub
or
mov
ljmp
test
adc
popa
push
mov
inc
aaa
dec
inc
add
pop
out
xchg
jg
jno
push
add
or
outsl
pop
mov
add
imul
push
sub
push
add
aam
and
mov
mov
cli
dec
sub
add
pushf
lret
xchg
mov
mov
add
sbb
and
and
mov
pop
pop
sbb
push
add
mov
mov
jg
add
out
jg
add
leave
dec
dec
jno
add
popf
mov
inc
add
inc
mov
negl
add
in
aam
rolb
data16
sbb
lret
mov
xchg
dec
out
cltd
sub
add
out
out
scas
cld
pop
push
cltd
ret
pop
loopne
jno
mov
rolb
or
add
pop
adc
fcompl
add
cmc
push
add
add
test
jl
add
add
add
fisttpll
roll
or
mov
dec
scas
sub
adc
pushf
stos
jbe
les
in
insb
inc
pop
push
add
jg
sub
lcall
mov
addb
js
pop
jp
inc
outsb
loope
in
xchg
add
add
cmpsl
or
add
push
iret
call
xor
iret
jnp
and
mov
fdivrl
data16
cmp
mov
fstpl
add
add
rolb
aad
lfs
xchg
add
add
test
add
push
orl
add
push
add
jge
add
and
sbb
push
lret
push
add
je
add
mov
mov
mov
add
mov
add
ja
add
sbb
add
add
aam
cmc
add
mov
sub
js
add
incb
cmpsl
sbb
data16
in
std
xor
ja
cmc
fadd
hlt
add
jo
xchg
add
loope
mov
leave
jno
add
in
stc
das
testb
aad
and
add
sahf
dec
sbb
cs
pop
out
leave
xor
xchg
add
or
pop
mov
add
in
out
inc
mov
imul
test
push
lods
xor
mov
movsb
add
push
mov
push
push
ss
add
add
add
cmp
add
cmp
add
adc
js
push
push
jb
inc
lret
add
fwait
jno
jae
pop
mov
add
mov
sbb
lds
add
sub
add
add
sub
jmp
lret
xchg
add
iret
popa
mov
adc
dec
cli
lret
adcl
xchg
mov
adc
xchg
lds
insb
xchg
add
add
fdecstp
add
add
dec
mov
add
xor
and
push
add
jno
add
jg
add
mov
sub
xlat
fbld
fcoml
push
or
inc
pusha
add
or
add
and
add
add
push
sbb
repnz
dec
mov
fcoml
add
outsl
push
je
loope
fwait
fs
mov
xchg
add
add
sub
sahf
sbb
add
dec
cmp
cmp
in
mov
lea
fwait
roll
sbb
pmulhw
in
stc
repz
sub
lahf
lods
mov
and
or
add
push
stos
add
pop
out
mov
mov
add
mov
xchg
add
add
adc
mov
mov
aam
adc
ja
and
mov
xchg
add
add
mov
or
dec
mov
pop
mov
ret
jns
inc
add
add
add
pop
dec
mov
xor
xchg
fistpl
aas
and
mov
dec
pop
ds
in
push
xor
jbe
add
call
add
sti
xor
clc
jo
sub
add
add
and
add
pop
test
push
add
inc
add
xchg
bound
mov
mov
inc
sbb
in
jbe
inc
xchg
mov
add
lahf
fwait
aad
add
and
add
movsl
in
jge
loopne
std
je
fidivrs
xchg
add
les
dec
inc
add
les
mov
mov
xor
bound
mov
rolb
pop
aad
sub
and
pusha
add
decb
loopne
pop
scas
mov
out
add
mov
push
rolb
xchg
incl
add
std
xchg
add
mov
aad
movb
push
fdivl
add
add
and
mov
pop
add
pop
stc
sub
xchg
add
add
add
pop
sub
add
add
add
outsl
push
dec
pop
sbb
pop
test
add
mov
mov
jge
dec
xchg
mov
sbb
movsb
add
test
push
or
inc
mov
popf
rolb
fstl
std
pop
mov
add
pop
int3
fistps
push
test
incb
popf
aaa
dec
xor
adc
push
add
mov
loop
or
add
mov
pop
sti
jo
mov
cmp
add
add
add
add
mov
xchg
add
add
cmp
adc
addr16
repnz
sbb
push
es
int3
mov
mov
mov
add
ret
pushf
loopne
sub
int
add
jp
add
bound
mov
mov
sbb
sahf
mov
add
testb
add
pop
push
add
iret
jge
add
add
xchg
insl
sub
dec
shll
lea
add
popf
add
in
insb
dec
fcmove
imul
jmp
cmp
pop
in
int
pop
fcoml
mov
add
outsl
sbb
add
mov
dec
sbb
mov
or
jne
in
stos
xor
push
add
mov
ret
add
jg
add
add
sub
jne
xlat
addb
jae
out
xchg
lock
les
hlt
add
imul
add
movsl
push
mov
add
rolb
add
mov
push
add
mov
cs
int
mov
aad
enter
sarl
xor
add
loopne
and
std
mov
adc
mov
add
add
jbe,pn
and
mov
add
mov
fwait
test
out
fimull
movsb
add
jmp
add
mov
add
add
push
test
add
pop
scas
loope
add
mov
add
xor
sub
lcall
mov
mov
sbbl
add
push
add
jne
scas
repnz
xor
addb
loopne
pop
fstl
sbb
movsl
mov
mov
inc
into
repnz
lds
pop
outsl
cli
push
cmpsl
loop
sbb
add
add
xchg
add
xchg
add
mov
adc
test
dec
ljmp
imul
add
add
subl
addb
add
mov
add
mov
testb
pop
push
add
add
data16
add
int3
inc
cmp
jae
mov
int
jecxz
lods
mov
insb
pushf
mov
mov
jne
add
add
jnp
xor
mov
mov
add
cmp
add
test
lods
sbb
outsl
addb
inc
and
mov
imul
add
std
imul
cli
fadds
pop
enter
fsubrl
add
cltd
jmp
sub
xor
cmc
aas
mov
mov
repz
push
in
add
mov
push
add
add
adc
testb
add
pop
in
shufps
xlat
and
mov
or
mov
mov
sub
sbb
add
rorl
inc
loop
test
jp
push
add
sub
in
sbb
dec
repz
lds
ds
lock
mov
xor
add
dec
lods
jno
add
add
or
add
push
add
testb
or
cmpl
add
std
sbb
cld
outsl
mov
mov
adc
add
icebp
cmpsl
dec
pop
cmc
add
push
add
add
cld
test
sarl
add
push
mov
repnz
xchg
push
add
jg
add
xchg
add
lods
sub
mov
add
add
mov
shrl
mull
mov
add
or
rolb
rolb
cmp
call
mov
fisubl
xor
add
imul
jno
mov
imul
add
add
das
adc
add
add
dec
mov
hlt
add
mov
add
mov
cltd
jae
shrl
fcomi
add
pop
movsb
add
add
std
in
pop
out
add
addb
sbb
add
stos
and
cmp
add
add
push
mov
cwtl
int
sub
cld
add
mov
cmp
in
mov
add
call
add
int
add
adc
sbb
add
sub
mov
jae
daa
dec
cwtl
cmp
adc
je
jle
into
or
cmp
fidivl
mov
clc
push
sbb
add
add
mov
add
and
adc
sbb
addr16
in
rolb
cmc
adc
add
int
add
sbb
add
push
add
movsb
add
mov
or
jecxz
inc
add
mull
mov
aam
mov
xorl
push
cmpsb
add
iret
sbb
test
imul
adc
lock
mov
in
dec
and
xor
mov
fldcw
dec
jno
add
dec
lcall
add
ds
mov
pop
js
sub
insb
inc
add
add
jbe
iret
adc
xlat
inc
cltd
add
xchg
add
dec
jecxz
pop
push
xchg
insb
cmp
add
leave
lock
sbb
or
pop
inc
jnp
aad
push
mov
push
jp
imul
rolb
xchg
add
scas
mov
add
icebp
outsl
xor
repnz
xor
mov
jns
jnp
add
add
pusha
add
xchg
add
mov
mov
add
jecxz
add
mov
out
aam
xchg
add
outsb
jmp
rolb
push
add
add
mov
int3
addb
stos
stos
les
push
add
add
inc
add
sbb
adc
out
push
rolb
cs
rolb
popf
add
pop
jno
sub
add
add
mov
or
add
jns
add
inc
add
ret
fcomps
fucomi
pop
and
add
lods
and
mov
ljmp
dec
aad
adc
pushf
pop
ds
add
mov
sbb
sub
lcall
inc
or
push
push
scas
test
add
add
rolb
clc
cmp
pop
out
sbb
sub
loope
into
ljmp
addb
mov
into
in
add
js
lods
inc
outsb
and
mov
mov
pop
cmp
add
add
cld
push
add
test
addl
adc
imul
sbb
dec
sbb
fisubs
or
add
inc
dec
mov
add
js
imul
cwtl
cli
inc
add
addb
stc
fimull
add
jl
int3
popf
mov
fwait
rolb
and
push
add
push
add
cld
bound
mov
dec
jle
add
add
add
add
mov
add
add
stos
sbb
add
dec
aad
pusha
add
add
push
add
add
jl
cmp
add
jle
xchg
sbb
aaa
xchg
dec
hlt
add
insb
orl
sub
or
pop
pop
jo
lahf
push
aas
fistpl
add
pop
cs
shll
inc
add
add
push
add
clc
pop
mov
add
dec
daa
loope
add
dec
sbb
dec
sbb
sbb
add
mov
das
mov
mov
inc
leave
pop
aad
add
outsl
ja
sahf
xchg
je
lods
addb
add
es
sub
pop
or
add
add
add
add
push
add
mov
add
fisubrs
push
or
add
add
stos
rolb
test
les
jle
cld
xchg
add
sbb
add
movsl
jae
ret
stos
xchg
cmp
add
add
add
iret
jp
int3
xchg
add
mov
call
scas
aam
lret
add
add
inc
sahf
and
xor
add
add
mov
test
add
mov
add
add
and
pop
iret
pop
add
test
mov
rolb
js
add
rcll
push
add
dec
jne
add
ret
out
push
add
add
add
jmp
out
aas
pop
xchg
popa
adc
xlat
xor
out
add
pop
je
pop
mov
push
cwtl
push
add
sub
and
mov
addl
add
loopne
push
rolb
fistpl
sub
cmp
and
mov
add
add
add
add
loope
movsl
and
cmp
push
add
jno
cmp
mov
stos
outsb
subl
popf
pop
sar
or
repnz
pop
stos
lock
addr16
loopne
cmp
xor
sbb
mov
mov
push
adc
icebp
sbb
jge
push
add
xchg
sub
mov
int
adc
scas
xlat
lods
sub
add
cmp
stc
insl
cmpsb
add
adc
mov
les
sbb
pop
cmp
scas
mov
cmp
scas
mov
jl
pushf
add
mov
add
add
add
add
mov
add
in
outsl
mov
push
add
adc
fwait
out
add
repz
adc
into
cmp
int3
pop
lret
inc
add
add
mov
lods
aas
cmp
lcall
add
mov
sub
or
mov
mov
mov
add
lock
add
xchg
add
adc
add
and
cli
sahf
xchg
sub
xlat
dec
cltd
sbb
sub
add
lret
aas
add
stos
rorl
in
jbe
xlat
cmc
or
lahf
arpl
mov
add
add
insb
mov
push
add
test
add
mov
sub
jl
xchg
dec
icebp
fnstenv
cltd
je
je
add
mov
les
insb
test
fld
add
sbb
paddusw
ljmp
add
lahf
sbb
sub
or
arpl
and
sarl
pop
iret
xor
mov
adc
popf
mov
pusha
add
repz
push
cld
pop
xchg
mov
repnz
pushf
sbb
je
inc
add
mov
sbb
xchg
xchg
add
icebp
fninit
cmp
cmp
stos
mov
add
push
add
adc
ret
stos
xor
imul
pop
and
mov
add
iret
cmp
sub
add
add
sub
add
inc
add
add
add
mov
cltd
or
fs
add
dec
pop
dec
stos
xchg
add
sub
add
jo
dec
jbe
leave
popf
pop
mov
add
test
cli
ja
movsb
add
mov
cltd
mov
in
fucomip
movb
add
add
mov
mov
lds
add
cwtl
shll
add
scas
inc
mov
add
sbb
push
add
adc
cs
or
adc
data16
cmp
lcall
add
aam
sub
add
xchg
xchg
mov
lahf
cs
mov
xchg
mov
jno
add
adc
push
and
mov
or
add
push
int3
cmp
add
add
add
sbb
out
or
sub
enter
mov
mov
xor
add
fbstp
xor
add
inc
add
cld
sbb
dec
pop
jmp
adc
sub
dec
add
mov
sahf
aam
rolb
jmp
mov
insb
sbb
in
movsb
add
adc
jl
in
out
sbb
add
xchg
movsl
xor
adc
nop
add
jae
movsb
add
pminub
add
xchg
ffreep
add
push
add
xor
inc
lods
dec
test
sub
add
lret
mov
inc
add
add
mov
dec
insb
mov
lods
or
add
inc
cmp
add
fdivrp
std
mov
add
mov
inc
add
add
insb
jle
dec
mov
into
xchg
cmp
add
add
stos
adcl
lret
add
add
adc
ds
or
mov
add
cmp
outsb
mov
out
dec
loope
fwait
cmp
and
mov
jno
add
popf
cmp
sub
jne
outsl
jle
add
add
ja
add
fwait
rolb
add
inc
outsb
repnz
mov
sbb
dec
sti
dec
adc
cltd
out
lahf
push
push
add
add
out
push
add
add
jae
add
add
pop
std
addb
mov
data16
add
jnp
cmpsl
jp
mov
xchg
add
xor
sahf
xchg
or
mov
pusha
add
iret
or
flds
add
add
fnstsw
inc
add
add
jnp
jbe
mov
imul
and
add
mov
xchg
mov
add
mov
add
jno
add
mov
mov
fildll
pop
dec
cmc
xor
add
and
mov
ds
call
mov
xlat
pop
or
pushf
hlt
add
popf
and
or
out
and
dec
mov
xchg
pop
pop
sahf
or
push
and
pop
out
in
dec
jae
and
pusha
add
in
adc
sbb
add
push
add
add
iret
int
mov
arpl
xchg
mov
add
inc
ret
add
xchg
add
pop
pop
xchg
xor
notl
add
or
jae
add
daa
mov
syscall
push
add
sub
add
in
push
cli
stc
in
and
add
shl
add
sub
test
orl
lahf
lahf
or
xor
out
add
jbe
and
cwtl
and
xor
in
mov
jnp
add
add
mov
add
cmp
mov
movsl
mov
xchg
push
scas
roll
pop
cmp
mov
hlt
add
bound
mov
xor
add
mov
add
adc
push
add
mov
sbb
mov
lcall
and
cmp
sbb
sub
mov
inc
mov
mov
mov
add
and
js
dec
sub
movb
scas
sub
mov
xor
add
cwtl
dec
negl
pop
mov
cltd
das
mov
scas
mov
adc
f2xm1
add
adc
xchg
add
xchg
fwait
data16
stos
jno
add
dec
jecxz
add
add
inc
add
add
push
sub
stos
testb
cwtl
int3
scas
pop
inc
icebp
add
mov
push
add
aam
outsb
fdivr
push
add
ja
push
add
mov
jmp
iret
mov
xor
imul
lods
int
mov
add
in
cld
xlat
mov
mov
add
sub
lods
shrl
cmp
test
cmp
xlat
repz
hlt
add
scas
add
mov
xchg
add
addl
push
add
cmp
sahf
jecxz
add
xchg
add
xchg
add
loope
cmp
jg
fisttpl
jl
lret
test
add
add
call
mov
les
xchg
xchg
add
in
fsubl
add
add
add
mov
repz
mov
cltd
nop
add
mov
pop
in
inc
pop
or
xor
imul
pop
in
lret
add
or
mov
push
scas
insl
xchg
add
fsub
add
dec
mov
das
daa
aas
into
sbbl
add
ljmp
js
xor
in
xchg
iret
mov
scas
adc
add
int3
sbb
add
add
rolb
add
push
data16
sub
das
mov
pop
pop
mov
movsb
add
add
mov
les
hlt
add
mov
add
add
add
push
add
cmp
mov
insb
inc
mov
iret
rolb
xchg
add
push
mov
xchg
in
xchg
sub
jbe
xchg
sbb
call
sar
loope
imul
jge
lcall
call
mov
add
movsl
out
add
sahf
fwait
mov
js
add
or
inc
insl
push
mov
add
add
ret
add
add
add
js
fsubl
data16
cwtl
inc
add
add
and
int
or
jle
iret
shrd
pop
sub
add
mov
adc
add
push
add
scas
push
pop
aad
hlt
add
add
xchg
imul
mov
inc
add
add
arpl
push
add
in
pop
adc
loop
in
push
pop
subl
lods
movsl
dec
pop
scas
adc
add
in
std
jl
int3
insl
outsl
jne
add
add
add
add
add
jp
pop
dec
lds
in
add
add
xor
add
and
addb
dec
or
movsl
inc
add
add
in
movsl
jg
xchg
add
sub
stos
stc
in
jecxz
sub
or
fnstenv
and
dec
imul
mov
cli
fldl
add
and
mov
mov
iret
jbe
dec
jge
add
add
jnp
test
xchg
addb
add
out
cmp
add
inc
add
test
insb
cld
loopne
add
movsb
add
mov
add
mov
js
add
add
fidivl
imul
jnp
sbb
jp
leave
mov
dec
scas
xchg
bound
mov
push
add
imul
inc
add
dec
jno
sarl
inc
add
xchg
mov
insb
ret
jns
cmpsl
scas
insb
push
add
add
fcmovnbe
add
add
cs
jns
add
push
btc
add
dec
mov
sub
testb
pop
add
ret
adc
cs
pop
movsl
aas
add
mov
repz
out
add
mov
mov
in
add
push
jecxz
add
loope
push
add
add
loop
jne
aaa
or
xchg
jae
add
ds
add
in
xchg
loopne
ds
mov
mov
mov
mov
mov
int3
lea
fistpl
push
jae
add
pop
mov
cltd
inc
add
add
add
xchg
sahf
sub
mov
adc
repnz
imul
and
mov
sub
adc
lret
sub
mov
pop
roll
je
push
add
mov
add
add
ds
rolb
fnstcw
ret
mov
add
add
sti
popa
pop
fimull
pop
aas
addr16
add
push
add
add
mov
jl
cmp
pop
mov
add
add
add
cmp
add
cmp
incb
add
mov
sbb
arpl
add
jle
add
into
pop
mov
mov
xor
sbb
dec
fistl
add
fdivs
call
or
and
dec
test
add
in
movl
int
into
jp
jp
mov
mov
add
sbb
cltd
dec
in
or
mov
inc
add
rolb
adc
sbb
movsl
notl
add
cmp
repz
pop
cli
inc
xor
jnp
pop
js
sbb
add
lds
add
rcl
loope
clc
mov
push
cmp
add
sarl
test
fildl
add
mov
add
nop
add
icebp
dec
lret
les
movb
lods
aaa
adc
inc
add
push
add
add
mov
movb
sbb
roll
mov
xchg
loope
add
pop
push
add
jns
popa
mov
rolb
pop
clc
lahf
les
sti
cld
add
les
jp
imul
jg
lds
pushf
mov
daa
xchg
mov
and
mov
outsl
push
add
std
and
mov
xor
dec
pop
adc
mov
test
movsl
out
sbb
out
sbb
lock
out
xchg
addb
push
add
add
out
xchg
jg
lahf
imul
insl
mov
enter
mov
fnstsw
dec
mov
push
lds
xor
jns
jecxz
add
jg
push
or
adc
or
add
and
mov
mov
add
add
movsb
add
pop
inc
add
sti
incb
nop
add
mov
mov
cltd
push
add
lods
pop
imul
add
add
adc
js
add
add
add
add
cmp
mov
adc
in
mov
xchg
sbb
enter
sarl
add
cmp
add
pop
fs
rolb
add
mov
sbb
add
js
pop
push
pop
add
pop
iret
out
sub
roll
xchg
add
dec
ja
jno
add
mov
pop
cmp
and
mov
cmc
leave
outsb
lcall
or
ret
negl
push
mov
cmp
dec
cmp
add
jecxz
add
icebp
out
test
pushf
testb
je
mov
cmp
add
add
inc
add
mov
push
mov
add
add
test
mov
jo
sub
cmp
cwtl
nop
add
lcall
add
cmp
xor
movsb
add
add
imul
xchg
add
out
iret
mov
je
movsl
iret
mov
sbb
add
clc
push
add
test
add
dec
fcomps
sbb
add
add
fsubrl
vpsubd
add
add
add
adc
pop
sbb
clc
lds
or
lods
enter
add
addb
pushf
mov
and
gs
add
mov
add
pop
sub
add
or
xor
mov
add
lret
add
mov
or
push
push
add
loop
mov
add
add
mov
xchg
and
mov
xchg
mov
or
insb
add
icebp
pop
mov
add
or
dec
dec
jnp
add
add
fistpll
fwait
add
xor
or
adc
add
and
mov
sarl
repz
xor
in
dec
push
add
adc
cmp
jg
rcll
fsubrs
mov
js
imul
add
bound
mov
ja
mov
add
into
aam
scas
lock
mov
rolb
dec
shll
into
stos
and
mov
int
push
push
adc
je
pusha
add
iret
js
ljmp
popf
mov
decb
cmp
cmp
bound
mov
inc
jle
or
add
jne
pop
mov
mov
mov
cmp
addr16
or
out
cli
push
add
and
mov
add
or
inc
addb
and
add
add
mov
or
mov
bound
mov
inc
add
cmp
in
enter
sarl
hlt
add
add
push
add
sub
in
cltd
iret
call
jmp
inc
add
and
into
push
add
mov
pushf
test
lods
jno
add
data16
push
add
mov
dec
popf
xchg
icebp
insl
mov
in
jne
add
add
mov
pop
popf
push
cli
xchg
add
cs
andl
inc
and
mov
xor
testl
mov
cmp
test
push
add
dec
aam
push
push
add
cmp
cmp
xchg
add
in
shll
push
rolb
addr16
add
pop
rolb
pusha
add
mov
adc
and
ja
add
ret
add
add
mov
out
std
outsb
jo
add
movsb
add
add
mov
arpl
je
aad
pop
jg
ffreep
add
add
inc
pop
sub
xor
inc
add
add
cmpsb
add
jb
sbb
adc
jg
lret
pusha
add
and
mov
mov
out
testl
cli
in
sbb
fwait
andl
in
sub
cmpsb
add
addl
repz
jg
pop
mov
jbe
jg
cmp
pop
fsubrp
or
cmp
and
fnstsw
add
add
add
stos
mov
rolb
and
mov
addb
addb
cli
mov
cmp
add
and
push
add
push
add
cmp
push
add
add
and
mov
add
add
cmp
rolb
loopne
scas
lahf
cmp
lock
insl
cs
pushf
jge
add
adc
pusha
add
sbb
add
lea
mov
add
add
mov
dec
add
imul
add
loop
and
mov
push
mov
mov
repnz
jnp
pop
adc
jb
out
insl
cli
cltd
mov
fwait
cld
shl
add
push
mov
cmp
dec
mov
add
xlat
pop
mov
add
add
inc
lahf
arpl
scas
cmp
test
add
mov
xor
testb
xor
bound
mov
add
lock
pop
les
addb
push
dec
xchg
add
test
add
cld
out
dec
ja
js
cmp
jb
push
jbe
add
mov
inc
xor
out
adc
sti
xchg
imul
push
add
add
mov
add
pop
mov
xor
das
xor
cmp
lock
or
addb
scas
ret
jae
and
mov
hlt
add
add
dec
mov
or
push
out
ffree
in
mov
mov
add
cmpsl
cltd
stos
repz
std
inc
test
je
pop
mov
add
pop
add
mov
add
add
cld
pop
into
mov
add
push
enter
push
pop
inc
add
lds
push
add
jmp
add
call
jmp
add
pushf
test
sbb
sbb
and
mov
cmp
les
xchg
jmp
jns
mov
insl
pop
jns
and
ret
add
mov
push
mov
adc
imul
gs
jl
add
dec
outsb
pop
lahf
mov
js
cmc
mov
adc
dec
cmp
sbb
sti
xchg
jno
add
mov
stc
fnstenv
add
adc
xchg
fiadds
mov
xchg
rolb
flds
add
mov
sub
aam
pop
inc
and
out
fsubrs
rolb
aaa
mov
outsb
fildll
rolb
addb
int
pop
jo
shl
sti
push
mov
out
sbb
add
push
add
adc
add
jne
sub
je
cmp
add
inc
inc
test
push
add
mov
push
fldl2t
adc
adc
xor
int
push
add
xchg
xchg
add
mov
mov
aam
cmpsb
add
lahf
stc
test
add
ret
jmp
push
cs
or
testb
outsl
mov
rcll
clc
jo
addb
int3
pop
cmp
xchg
inc
testb
cmpsb
add
cmp
add
jne
add
sbb
fldcw
pop
sarl
cmp
dec
mov
xor
insl
jnp
loopne
mov
cmp
daa
cmp
add
add
jle
lret
roll
xchg
sub
add
mov
pop
fimull
jg
add
pop
int
push
loope
in
jecxz
add
adc
stc
int3
leave
clc
mov
mov
ret
jns
mov
jnp
pusha
add
mov
rcrl
add
ficomps
push
add
mov
sbb
add
sbb
sbb
add
shll
jnp
xor
add
or
lds
mov
mov
mov
outsl
pop
ljmp
sbb
add
xchg
lock
add
add
popf
scas
pop
xor
aas
test
gs
add
xchg
add
imul
pop
or
and
or
add
cmp
push
rolb
push
sahf
jp
cltd
stos
push
mov
mov
stos
les
fimull
add
jmp
jmp
xchg
add
xchg
push
dec
ret
sbb
jno
sbb
add
add
xchg
add
insb
inc
add
insl
repz
pop
test
and
iret
push
pop
flds
mov
in
mov
or
add
fldenv
add
add
add
pop
aaa
movsl
imul
pop
gs
jmp
cmpsb
add
add
add
rorl
stos
and
or
jns
add
add
out
dec
data16
sbb
add
roll
mov
pop
mov
loopne
cmpsl
mov
xchg
lods
movsl
test
movb
or
push
add
mov
inc
add
xchg
add
add
add
add
ljmp
add
pop
addb
add
cmp
cld
adc
add
popa
cli
inc
and
add
add
add
addb
mov
mov
add
cmpl
adc
pusha
add
push
iret
add
push
mov
add
add
mov
arpl
sbb
mov
adc
cltd
fnstenv
add
movb
add
xchg
mov
xchg
sti
insl
pop
xchg
and
sbb
sarl
dec
adc
cmp
je
sub
xchg
sub
cld
or
addb
fcomps
adc
ljmp
popf
inc
xor
adc
stc
leave
stc
fcomi
add
push
mov
add
add
sub
inc
pop
push
add
mov
mov
mov
pop
jne
xor
mov
enter
and
mov
pop
mov
add
in
mov
xchg
xor
inc
add
add
movsl
pusha
add
outsl
movsl
out
jecxz
add
cs
sbb
mov
rep
mov
and
mov
add
adc
mov
outsl
pop
inc
jmp
repnz
mov
add
mov
cltd
jbe
scas
and
mov
testb
lahf
push
or
pop
or
cli
mov
add
mov
addb
add
add
xchg
push
add
add
jge
arpl
pop
xchg
add
add
add
ds
xlat
int
mov
xchg
push
add
int
xchg
das
loope
cmpsl
lret
lcall
add
and
mov
jge
add
jge
push
lahf
sbb
pusha
add
pop
and
add
stc
fsubrs
cmp
cmp
insl
test
aas
cmpsl
data16
ss
leave
or
gs
int
add
add
add
cmpsb
add
pushf
icebp
loop
pop
jno
iret
aaa
addb
add
call
add
add
add
shrl
scas
adc
rol
add
cmpsb
add
xchg
push
or
cmp
mov
add
mov
mov
push
and
add
add
xchg
or
mov
add
add
ja
add
cmp
inc
mov
add
loopne
mov
das
subl
add
and
mov
jae
cmovb
mov
outsl
pop
cmp
mov
add
cmp
cmp
add
icebp
imul
sbb
mov
adc
int3
dec
xchg
mov
fcomp
cmc
sbb
add
cmpsl
pushf
cmp
loop
dec
mov
in
xchg
add
jmp
add
pushf
gs
xchg
add
add
pop
lods
out
and
add
daa
fisubrs
add
add
dec
inc
or
pop
ret
jecxz
jns
imul
jae
nop
add
add
insl
insl
cwtl
and
add
xorl
mov
fdivl
sbb
scas
test
xchg
and
mov
aaa
add
ret
aas
scas
pop
mov
add
lcall
out
xor
mov
jmp
inc
lods
add
push
mov
and
cmp
mov
add
add
cwtl
insb
push
cmc
and
arpl
add
test
stos
pop
jp
fucomip
xor
cmpsb
add
add
cmpsb
add
push
cmp
sbb
adc
lea
ret
jg
add
pop
mov
add
add
testb
mov
add
add
pop
sbb
push
cmc
cmp
add
loopne
adc
sbb
jno
add
into
xchg
add
add
jg
add
push
add
mov
add
mov
mov
cmp
sahf
out
mov
js
repz
cwtl
sahf
insl
xlat
movsb
add
add
imul
pop
pusha
add
cli
xor
popa
jmp
cli
push
add
rolb
pop
pushf
or
insb
fsubrl
add
mov
and
mov
fldt
add
adc
lahf
test
call
cltd
mov
add
push
fnsave
inc
scas
shll
or
jns
cmp
add
add
insl
fwait
xchg
add
jg
inc
add
add
or
sub
push
add
pop
aas
addr16
xchg
adc
mov
pop
cmp
rolb
mov
addb
add
fisttpl
sbb
dec
add
mov
jbe
jecxz
add
addb
push
cmp
jmp
cmc
lods
ja
or
or
pop
mov
and
xor
fsubp
jae
add
mov
xlat
movb
notl
add
movsl
adc
bound
mov
add
cmp
cmp
cltd
in
adc
and
lods
testb
outsl
pushf
add
mov
and
icebp
inc
add
pop
cmpsb
add
add
pop
xchg
icebp
mov
dec
push
add
pop
push
cmp
xor
or
add
mov
aad
jbe
les
in
pusha
add
dec
and
cmp
add
ffreep
add
push
add
add
scas
out
test
jbe
jne
ja
add
gs
jg
push
add
mov
arpl
adc
testl
add
add
add
shll
jbe
or
outsl
into
sub
std
dec
out
dec
bound
mov
add
mov
test
and
add
addb
test
in
ret
pop
sub
add
mov
cld
cmp
or
cmp
loope
push
cltd
or
mov
je
adc
jl
cmpsl
adc
mov
add
mov
add
mov
mov
sub
out
sti
aas
test
pop
mov
lcall
stc
in
addb
add
aam
inc
or
ja
sbb
mov
add
jecxz
add
xor
insl
cld
mov
test
add
cli
add
or
in
add
insb
adc
add
into
adc
in
shrl
aam
cmpsb
add
imul
pusha
add
xchg
mov
mov
or
add
mov
mov
imul
aad
dec
adc
jno
add
mov
cld
jp
xor
and
div
add
jg
out
loope
add
xor
sub
mov
xchg
add
add
daa
das
pop
jp
mov
pop
add
xor
addb
add
add
je
lahf
fidivrl
addb
push
add
mov
xor
push
xchg
add
aam
mov
adc
xor
pop
cmp
out
int
inc
push
cmp
cltd
aam
lcall
xchg
movl
sbb
push
fiadds
push
add
add
testb
push
call
add
add
dec
inc
add
add
mov
add
mov
dec
add
sbb
sub
sub
fcompl
xor
push
sub
add
jle
iret
clc
mov
aaa
xor
mov
mov
jl
fstp
adc
jbe
xchg
add
add
add
add
xor
lahf
mov
add
push
fdivp
add
pop
pusha
add
mov
sti
push
add
out
aas
aam
jecxz
fcomps
add
add
adcl
stos
push
xor
dec
enter
pop
clc
mov
add
cwtl
mov
add
mov
aaa
pmaddwd
bound
mov
loop
test
repz
dec
or
mov
xchg
add
jp
add
cmp
mov
popa
sbb
add
fnstenv
xchg
add
add
push
add
mov
decb
add
add
jo
adc
popa
jp
and
out
sub
pop
out
pop
int3
daa
or
aad
lahf
cmpsb
add
add
jmp
xchg
lods
movsl
xor
dec
xchg
lea
add
sbb
jbe
add
loop
and
add
push
add
nop
add
lods
pop
mov
sub
mov
lcall
add
add
aas
data16
add
mov
icebp
mov
xchg
mov
push
add
xchg
or
sahf
pop
in
and
add
aaa
rolb
sub
mov
jno
fisubrl
add
arpl
add
jl
add
out
sub
cld
fidivrs
xor
hlt
add
pop
mov
xchg
fbld
mov
loop
cmp
dec
inc
jmp
data16
add
out
insb
dec
xor
aaa
mov
add
mov
add
pop
xchg
add
sbb
mov
in
imul
xor
mov
mov
sbb
add
jns
or
mov
inc
mov
mov
sbb
mov
nop
add
lcall
cwtl
mov
cmp
jmp
add
addr16
mov
hlt
add
add
out
aam
xor
mov
sbb
add
adc
push
add
push
mov
pop
int3
cltd
push
add
add
aaa
push
movsl
xor
lods
loope
add
add
data16
fistpl
add
pop
pop
out
fistps
add
mov
in
and
daa
and
mov
repnz
add
add
int
fsubrs
add
data16
add
add
add
add
add
data16
pop
addb
scas
outsl
add
stos
mov
scas
in
enter
bound
mov
add
add
movzwl
inc
push
sub
stc
negl
inc
add
add
in
gs
cmpsl
jae
add
js
jno
add
repnz
cmpsb
add
jo
push
sbb
push
add
bound
mov
loope
add
dec
loopne
movsl
xchg
add
add
add
cmpsb
add
jno
pop
cmp
flds
add
outsb
scas
cltd
push
add
push
add
mov
add
aad
fsubr
cmc
xchg
add
add
jg
add
scas
jnp
fisttpl
nop
add
add
mov
ret
xchg
jg
out
xchg
sub
inc
xchg
add
data16
pop
xchg
add
mov
dec
lea
dec
mov
aam
xchg
add
push
add
cmpsl
xchg
push
add
test
add
test
cltd
pop
ja
inc
add
sub
sbb
add
cmp
push
mov
das
jp
add
rcrl
addb
std
stos
cs
or
inc
add
mov
push
add
mov
add
add
sbb
loopne
xchg
add
and
cwtl
cmpsl
rolb
notl
add
mov
shll
or
mov
add
add
jl
inc
dec
out
loope
sbb
add
bound
mov
jne
push
fldl
add
sbb
mov
add
pop
cltd
dec
movsl
or
pusha
add
scas
sub
add
nop
add
mov
jg
mov
mov
pop
jmp
movb
cmp
leave
addl
add
jbe
adc
fmuls
test
mov
das
sbb
pop
daa
push
and
lods
out
pop
xchg
ret
mov
sbb
pop
jmp
aaa
shr
push
add
bound
mov
add
in
cmc
outsb
leave
aad
dec
inc
mov
pop
rolb
test
cwtl
adc
call
add
loope
add
add
icebp
cmpsl
sbb
mov
sbb
add
addr16
fcmovne
enter
push
add
cmp
mov
outsl
or
sarl
sti
mov
push
insb
negl
add
add
add
xchg
add
pop
adc
mov
sub
test
ret
xlat
jg
mov
cmp
int
jmp
dec
cmp
mov
enter
add
add
outsl
leave
inc
sarl
dec
and
push
add
jb
add
mov
lea
xor
add
aaa
mov
pop
sbb
add
add
add
les
ret
xor
popf
adc
sti
out
movb
clc
ljmp
movntq
pop
rolb
add
sti
dec
in
std
gs
mov
mov
mov
add
add
dec
sbb
cltd
add
add
add
mov
add
xchg
movb
sub
aad
pop
pop
sbb
add
inc
add
add
add
dec
cltd
mov
add
sub
sub
push
add
xchg
add
daa
lahf
data16
add
das
xchg
mov
cmp
add
add
add
enter
mov
sbb
aas
adc
jl
mov
cmp
cmp
jbe
cmp
addb
loopne
jge
mov
movsl
mov
push
in
movsb
add
in
adc
divl
and
or
adc
mov
sbb
add
mov
fxch
mov
add
adc
add
add
xor
outsl
xchg
pop
mov
frstor
stos
or
add
add
jbe
mov
add
add
push
add
inc
lds
add
hlt
add
xor
jo
mov
cmc
test
fists
add
push
xchg
add
dec
sub
jae
add
jmp
das
scas
lods
pop
mov
out
adc
or
jge
leave
add
mov
je
push
decb
lds
testl
sbb
popf
fstps
int
push
push
add
ja
pop
and
cli
push
add
mov
rolb
xchg
xchg
add
das
mov
pop
and
mov
add
sti
jg
push
add
add
mov
ja
out
lret
pusha
add
lret
sbb
das
rolb
movsb
add
in
push
xor
icebp
xor
add
fstps
add
dec
loopne
inc
xchg
lret
xchg
dec
mov
or
stc
add
jmp
inc
js
and
xchg
lcall
add
mov
lret
fwait
das
cmc
iret
cmp
pusha
add
ret
add
mov
xchg
add
mov
std
test
int3
mov
mov
mov
lahf
add
addl
fisubrs
mov
out
ds
mov
rcll
mov
add
inc
cmp
push
add
inc
rolb
mov
cmp
add
arpl
add
add
add
add
bts
add
or
or
add
mov
flds
add
hlt
add
mov
daa
mov
fs
push
adc
loop
xchg
call
add
add
into
outsb
sahf
xor
adc
sbb
cmp
roll
sbb
in
jp
test
add
inc
add
push
add
add
mov
mov
inc
sbb
add
popa
rolb
out
pop
into
imul
push
mov
in
in
dec
mov
mov
das
repnz
add
add
mov
sbb
pop
inc
add
std
add
mov
add
xor
in
push
call
add
add
mov
mov
je
ffree
jae
add
push
add
enter
adc
cmpsb
add
loopne
adc
mov
setae
or
add
xchg
add
mov
add
scas
aas
dec
pop
xlat
adc
add
add
push
xor
push
dec
xchg
add
out
cs
add
fidivs
outsb
negl
dec
lods
mov
push
add
shll
test
lret
adc
das
arpl
sahf
sbb
add
jb
xchg
mov
jl
add
add
les
or
outsb
stos
lock
add
dec
pop
sub
mov
leave
sub
add
add
stos
lods
jne
add
int
inc
add
int
xchg
add
xchg
push
add
sub
or
add
shll
js
add
inc
add
pop
mov
cmpsl
rolb
iret
jae
scas
repz
mov
push
add
pop
sbb
mov
sbb
sub
add
add
scas
xor
add
xor
add
pop
repnz
add
fstl
and
mov
push
rolb
xlat
mov
xchg
adc
adc
xor
adc
xchg
xchg
loopne
dec
in
or
jmp
jge
jmp
xor
mov
shl
in
sbb
add
mov
int
mov
popa
shr
add
push
pop
mov
out
mov
addr16
add
add
add
xchg
jae
mov
pop
mov
addb
fucomip
repz
cmpsb
add
int3
dec
fadds
dec
addb
movsl
ret
add
add
std
push
add
call
xor
mov
jmp
add
add
mov
leave
in
outsb
xchg
add
add
pop
mov
add
insl
aad
lods
sbb
add
mov
mov
push
jle
add
test
test
xchg
nop
add
add
outsb
push
add
add
outsb
push
movsb
add
jb
fidivrs
add
add
fsub
in
pop
mov
das
int3
push
push
add
pop
ret
das
sub
add
mov
add
pop
data16
xchg
movb
mov
add
stc
lods
in
or
inc
add
add
mov
aaa
adc
aas
lods
or
push
add
jl
insb
sbb
dec
cmp
mov
adc
mov
add
and
sub
sub
mov
mov
rolb
jns
add
lahf
test
fisttpl
xchg
aad
pop
add
fildl
add
dec
lcall
sub
cmp
jno
repz
std
loope
or
add
mov
in
push
movsb
add
mov
add
popf
mov
rcrl
bswap
rolb
mov
rolb
push
divl
aad
rolb
push
add
je
movsl
and
mov
add
sbb
add
stc
add
mov
cmp
int3
inc
add
mov
add
cmp
or
cmpsb
add
mov
add
push
adc
roll
add
iret
hlt
add
add
data16
nop
add
test
jae
add
dec
data16
lds
mov
or
add
adc
addl
pop
decb
and
push
mov
daa
dec
std
pushf
xchg
add
add
testb
adc
mov
jno
pop
nop
add
lcall
pusha
add
mov
cwtl
stos
cmp
jne
jbe
sbb
cmp
insl
fcompl
jp
inc
add
dec
fsub
add
addr16
inc
add
outsl
push
jo
lret
add
cmpsl
je
psraw
fistl
fucomip
cmp
std
cmp
add
add
add
add
ret
dec
das
xchg
and
inc
ret
xchg
add
add
outsl
mov
dec
xlat
ret
sbb
aas
testb
add
call
pop
xor
out
add
add
xor
sbb
pop
xor
das
rolb
inc
add
in
mov
test
cmp
inc
xchg
aad
imul
outsl
mov
add
cli
cld
test
add
add
mov
add
flds
hlt
add
push
or
cmp
int3
insl
gs
repz
add
adc
and
mov
addb
add
aam
lret
jb
and
add
add
inc
add
pop
repz
add
push
dec
adc
add
sub
cmp
add
test
and
add
mov
adc
add
mov
jcxz
jno
add
imul
cmp
shll
add
das
fisubs
sub
add
enter
dec
in
rorl
add
jge
test
xchg
cmpsb
add
fwait
and
add
ljmp
cmp
add
addb
es
add
add
push
mov
mov
add
dec
hlt
add
pop
inc
hlt
add
jl
inc
rolb
out
fisttpll
add
jno
add
loope
add
test
xor
push
add
push
or
add
add
call
add
xchg
add
lcall
nop
add
push
add
mov
imul
ja
nop
add
xor
inc
add
jns
in
loope
add
push
mov
into
clc
out
add
ret
ret
loope
outsl
daa
mov
jp
xor
add
outsl
les
adc
pop
push
pop
int
movsl
loope
insl
xchg
rep
data16
and
mov
in
add
mov
rolb
sub
dec
out
pop
add
mov
mov
gs
add
add
call
test
add
jne
dec
xor
rolb
or
test
mov
test
push
stos
scas
inc
mov
add
inc
cmp
loopne
xor
stos
mov
add
adcl
in
jo
nop
add
and
dec
stc
cwtl
movsb
add
mov
add
dec
inc
dec
sub
imul
fucomip
sub
and
add
push
add
scas
mov
push
xchg
add
add
add
add
mov
cmc
je
dec
xchg
add
mov
rolb
xchg
dec
iret
mov
sbb
in
jbe
jge
iret
xchg
add
add
add
fisubs
cmpsl
insl
inc
add
sahf
mov
loopne
mov
mov
dec
mov
xor
xor
in
add
shll
jae
add
jno
pop
xchg
or
pop
jnp
mov
add
mov
je
sbb
repnz
add
jge
je
insb
gs
clc
pop
data16
add
push
add
push
add
lea
push
adc
lods
jns
add
add
repnz
or
add
lret
jmp
andl
outsb
dec
add
mov
fistl
int
or
mov
add
jle
psubq
test
inc
add
xor
jne
cmp
pop
or
add
add
call
aaa
arpl
cmp
add
lret
jmp
icebp
fadds
add
ficompl
imul
add
pop
nop
add
and
push
add
pop
stc
mov
add
mov
inc
add
mov
lds
add
jbe
cwtl
adc
inc
add
pusha
add
add
cmpsb
add
add
xor
pop
inc
and
mov
push
add
jmp
mov
add
add
xor
out
cmp
add
mov
leave
loop
add
mov
mov
stos
test
sub
add
add
outsb
mov
iret
inc
add
xchg
in
addb
adc
add
clc
movsl
es
add
add
popf
and
mov
subl
les
add
jbe
leave
xchg
lds
cmp
dec
add
lret
mov
jnp
cli
lcall
insb
jmp
nop
add
out
test
popf
adc
mov
dec
rolb
pop
mov
mov
pop
aad
xchg
arpl
addr16
test
mov
add
ljmp
add
add
add
add
dec
inc
add
push
dec
xor
dec
push
push
add
fwait
test
lea
jl
mov
add
cmp
inc
data16
add
mov
sbb
or
add
ror
xchg
jp
add
clc
adc
add
add
xor
mov
repz
add
rol
lret
add
add
adc
ret
cli
aaa
add
das
sbb
push
pop
ljmp
push
add
add
jge
sbb
gs
push
add
add
add
add
test
pop
cmp
add
stos
dec
adc
jnp
add
addl
mov
loop
movsl
addr16
add
mov
sti
mov
add
add
add
add
and
popf
pop
add
clc
std
std
movsl
jbe
adc
pop
jns
in
testb
sbb
jmp
loopne
movsb
add
add
pop
xor
movsl
add
scas
imul
add
pminub
movsl
push
add
mov
add
mov
jne
adc
sbb
adc
test
or
push
xor
sub
push
arpl
sbb
pop
fstp
pop
jecxz
add
sub
add
mov
push
or
inc
lods
fisttps
int3
iret
push
push
popf
xor
ficoml
jbe
fstpt
je
pop
addb
add
add
mov
add
mov
add
add
rolb
and
mov
aas
dec
cli
push
rolb
clc
adc
or
arpl
add
push
inc
add
loopne
ljmp
cli
addb
mov
add
stc
cmp
in
mov
lahf
add
add
sub
lret
lahf
push
add
push
xchg
add
fnsave
adc
mov
and
mov
sub
add
cmc
pop
insl
mov
movb
mov
add
in
xchg
add
inc
add
add
mov
incb
pop
scas
pop
cli
addr16
outsl
in
cwtl
pushf
xor
add
jg
ret
jnp
add
inc
add
nop
es
les
add
sbb
ret
push
mov
xchg
ret
dec
add
popf
jge
jnp
jne
push
mov
xchg
ret
scas
add
stc
add
stc
nop
es
lret
sub
add
test
mov
jne
mov
stc
nop
es
xchg
add
nop
add
add
add
in
push
stc
nop
es
out
or
mov
mov
stc
nop
es
inc
add
rcll
decl
es
add
rcrb
stc
mov
stc
nop
es
mov
jecxz
add
out
mov
push
mov
xchg
ret
push
jb
add
nop
es
mov
or
add
lock
add
nop
es
add
aaa
lods
and
add
inc
add
mov
stc
nop
es
in
add
or
add
lret
stc
nop
es
dec
lret
add
les
add
add
nop
es
xchg
add
mov
jmp
mov
add
loopne
pop
nop
cld
nop
jmp
add
add
add
add
push
mov
xchg
ret
xchg
sub
or
mov
inc
loopne
nop
es
roll
add
test
add
stc
nop
es
add
add
addb
mov
stc
nop
es
pushf
popf
add
pop
add
mov
loop
sbb
jb
add
cld
cli
rol
add
mov
xchg
ret
add
push
add
inc
add
sbb
cld
nop
jmp
jb
add
outsb
lret
jb
test
sbb
inc
add
add
lods
push
mov
xchg
ret
add
popf
mov
add
add
stc
nop
es
das
pop
add
add
pop
stc
nop
es
add
xchg
aaa
sub
push
cld
nop
jmp
add
add
mov
lods
dec
lret
out
and
add
push
or
mov
mov
xchg
ret
add
add
add
stc
nop
es
fldl
sub
test
mov
jbe
stc
nop
es
subb
cs
jne
stc
nop
es
add
jns
call
stc
nop
es
pushf
add
and
mov
cmpl
movsl
sbb
add
jb
or
arpl
cld
nop
jmp
push
ss
mov
push
jb
out
sub
das
xchg
fadds
ds
stc
nop
es
add
scas
add
pushf
jge
add
stc
nop
es
outsb
add
add
mov
nop
cld
nop
jmp
jnp
jnp
add
xchg
leave
sub
nop
es
add
insl
mov
nop
cld
nop
jmp
mov
add
add
test
nop
cld
nop
jmp
mov
sub
es
scas
add
rorb
movzwl
nop
cld
nop
jmp
pushf
add
xchg
out
pusha
nop
cld
nop
jmp
aaa
mov
das
sbb
stos
stc
nop
es
popf
xchg
add
add
and
sar
es
sub
add
inc
jge
xchg
mov
nop
es
mov
add
cli
add
stc
nop
es
add
scas
add
mov
fildl
es
pop
or
add
mov
nop
jmp
jecxz
add
cmp
cmp
es
jb
add
mov
push
add
stc
nop
es
aaa
mov
nop
es
add
inc
sbbb
adcb
add
or
in
dec
nop
cld
nop
jmp
pop
das
push
sub
pop
dec
push
mov
xchg
ret
or
mov
leave
nop
cld
nop
jmp
add
inc
addb
jne
stc
nop
es
aaa
push
add
dec
push
stc
nop
es
and
jecxz
add
stc
nop
es
xchg
lods
mov
add
inc
stc
nop
es
popf
pop
jns
add
add
add
mov
stc
nop
es
add
loopne
mov
nop
es
mov
add
add
jmp
pusha
stc
nop
es
outsb
inc
out
in
add
cld
cmpb
nop
cld
nop
jmp
xchg
add
addr16
add
mov
jmp
stc
nop
es
or
mov
mov
stc
nop
es
imul
cmp
nop
cld
nop
jmp
add
scas
gs
cwtl
movswl
stc
nop
es
addb
add
add
stc
nop
es
or
fadds
add
inc
add
adc
nop
es
add
add
ss
mov
nop
cld
nop
jmp
xchg
fs
add
mov
sub
popa
add
cld
nop
jmp
add
jmp
inc
stc
mov
nop
cld
nop
jmp
add
add
push
mov
es
in
aaa
scas
fadds
jb
rolb
mov
jne
stc
nop
es
pop
add
fldl
inc
and
nop
es
add
xchg
jb
lock
jne
stc
nop
es
das
xchg
jns
jnp
scas
je
stc
nop
es
test
add
nop
cld
nop
jmp
add
test
add
sbb
add
nop
es
test
inc
push
adc
stc
nop
es
jge
push
add
add
and
add
pop
fs
leave
inc
stc
nop
es
outsb
and
add
add
push
mov
xchg
ret
scas
pushf
add
xchg
sub
stc
nop
es
mov
js
nop
cld
nop
jmp
xchg
add
lods
add
mov
rcrb
nop
es
push
add
subb
incl
sti
stc
nop
es
add
add
add
add
pop
stc
nop
es
add
and
ret
add
mov
xchg
ret
push
das
add
add
xchg
add
adc
adc
pop
add
add
add
out
sbb
addb
add
inc
mov
movsl
stc
nop
es
inc
fldl
cli
jns
add
mov
nop
cld
nop
jmp
add
add
in
add
stc
nop
es
add
ss
add
jl
stc
nop
es
add
jne
gs
nop
es
add
add
stc
nop
es
mov
add
cli
call
stc
nop
es
add
lret
xchg
add
add
nop
es
fldl
or
nop
es
or
mov
add
das
shrb
call
xchg
sbb
add
add
mov
cli
call
or
add
push
add
stc
nop
es
add
loope
or
rcll
stc
nop
es
add
and
mov
pusha
add
nop
cld
nop
jmp
aaa
xchg
stc
nop
es
xchg
pushf
add
fadds
jecxz
add
inc
adc
add
pop
add
xchg
mov
add
push
add
fwait
jne
stc
nop
es
pop
add
xor
mov
fmull
mov
sub
mov
cmp
ret
add
in
xchg
add
lods
clc
or
and
push
mov
push
loope
pop
add
add
mov
sbb
cmp
add
add
jge
scas
add
xor
stc
nop
es
lods
cli
add
add
aaa
rolb
into
movzwl
stc
nop
es
add
test
add
test
adc
add
nop
es
sbb
mov
nop
es
jb
pop
add
sub
add
add
es
sub
sub
xchg
add
stc
nop
es
xchg
add
add
add
push
stc
nop
es
add
add
mov
dec
mov
stc
nop
es
mov
add
add
xor
fimuls
test
es
add
add
mov
push
mov
xchg
ret
fsubrs
mov
stc
nop
es
add
add
inc
xor
add
add
cli
incl
jecxz
add
fwait
xor
push
mov
xchg
ret
popf
push
and
add
nop
es
inc
add
xchg
jmp
push
mov
xchg
ret
or
add
sub
push
add
add
nop
es
add
mov
repz
add
mov
jmp
add
add
nop
es
test
stc
nop
es
pushf
add
xchg
call
nop
cld
nop
jmp
in
add
adc
nop
es
and
add
movb
add
add
nop
cld
nop
jmp
mov
add
add
cmpl
nop
cld
nop
jmp
ss
add
popa
mov
add
stc
nop
es
addb
icebp
hlt
add
sbb
add
stc
nop
es
add
add
jl
stos
nop
cld
nop
jmp
in
add
add
add
ss
jge
test
add
stc
nop
es
add
add
pfcmpge
es
add
out
add
es
cld
jnp
add
mov
xchg
ret
mov
scas
add
and
stc
nop
es
pop
and
jb
add
sbb
stc
nop
es
and
add
mov
push
add
push
mov
xchg
ret
add
add
add
inc
push
mov
xchg
ret
add
aaa
imul
pop
inc
stc
nop
es
push
push
jne
stc
nop
es
rolb
add
push
add
inc
add
add
add
fadd
xchg
fsubrs
pop
add
nop
cld
nop
jmp
scas
push
push
add
mov
xchg
ret
jnp
sub
add
add
js
cld
nop
jmp
jb
add
in
or
stc
nop
es
add
add
jge
in
dec
jecxz
jbe
add
push
add
stc
nop
es
add
add
and
movsb
nop
cld
nop
jmp
add
add
fists
cld
nop
jmp
or
jb
jge
add
pop
mov
push
mov
xchg
ret
imul
add
nop
es
add
rcr
pop
in
xchg
add
nop
cld
nop
jmp
sub
dec
in
mov
pop
cmp
nop
cld
nop
jmp
cli
cld
add
lea
stc
nop
es
mov
add
stc
nop
es
add
mov
jnp
xor
push
mov
xchg
ret
add
add
fmuls
js
push
nop
cld
nop
jmp
add
add
xchg
mov
stc
nop
es
mov
lret
sub
mov
xchg
ret
add
mov
or
icebp
nop
cld
nop
jmp
mov
add
add
lret
ja
fs
nop
es
fldl
sub
mov
and
mov
add
mov
mov
stc
nop
es
add
popf
pushf
popf
scas
add
scas
jne
stc
nop
es
add
stc
nop
es
and
lock
add
cmp
jmp
jecxz
add
add
add
push
mov
xchg
ret
or
or
cmp
push
or
nop
es
ss
fldl
loope
enter
stc
nop
es
add
rcrl
mov
nop
es
add
or
in
lods
add
fiaddl
add
jns
push
mov
xchg
ret
add
cli
jb
out
adc
pop
mov
stc
nop
es
add
cmpsl
cmpsb
add
inc
add
add
sub
fistl
in
out
add
add
add
sbb
in
add
add
and
add
nop
es
push
add
add
loop
nop
cld
nop
jmp
add
inc
push
add
mov
push
mov
xchg
ret
add
les
and
stc
nop
es
les
add
inc
adc
jbe
loope
bound
mov
xor
nop
cld
nop
jmp
lret
jns
add
scas
add
movzwl
stc
nop
es
in
cli
or
xchg
add
inc
adc
nop
es
mov
add
jne
stc
nop
es
test
add
xchg
aad
add
add
add
sti
subl
push
mov
xchg
ret
repnz
push
nop
es
outsb
add
add
push
add
stc
nop
es
lret
add
add
add
cmp
jmp
push
inc
add
popf
add
inc
add
push
mov
xchg
ret
add
pop
jmp
lahf
add
add
nop
es
lock
movzwl
stc
nop
es
in
add
add
add
jb
stc
nop
es
lret
aaa
add
add
push
add
stc
nop
es
add
mov
push
add
pop
add
fcoms
jns
add
outsb
mov
stc
nop
es
add
jge
add
mov
xchg
ret
aaa
cld
in
jecxz
add
push
call
stc
nop
es
imul
pushf
mov
push
stc
nop
es
add
out
lea
stc
nop
es
or
add
inc
mov
nop
cld
nop
jmp
jb
xchg
add
and
add
cs
push
mov
xchg
ret
add
jb
add
add
jb
add
rorl
inc
push
mov
xchg
ret
add
mov
mov
add
movsl
dec
dec
nop
cld
nop
jmp
rcll
dec
fldl
add
add
push
add
mov
stc
nop
es
add
data16
add
nop
cld
nop
jmp
shlb
add
nop
es
loope
jnp
loope,pn
data16
mov
stc
nop
es
add
push
xchg
add
or
mov
xchg
ret
in
add
or
inc
jg
push
mov
xchg
ret
add
add
add
rolb
push
add
push
mov
xchg
ret
pop
jb
lods
add
add
nop
es
xchg
in
lods
cld
xchg
stc
nop
es
and
scas
aaa
imul
inc
xor
mov
stc
nop
es
jmp
or
cmp
jne
stc
nop
es
and
add
add
fisttpll
jb
add
push
pusha
add
sub
push
add
xchg
ss
lods
xchg
or
inc
sub
nop
es
and
inc
add
jecxz
pop
push
mov
xchg
ret
add
pushf
dec
mov
nop
cld
nop
jmp
test
push
les
push
das
mulps
nop
es
jge
xchg
mov
push
mov
jb
inc
jns
outsb
add
into
mov
nop
cld
nop
jmp
scas
jb
scas
add
jmp
and
stc
nop
es
add
add
repz
push
add
add
add
stc
nop
es
jns
fnstsw
and
and
add
add
nop
cld
nop
jmp
add
or
push
add
adc
insl
lea
stc
nop
es
xchg
fadds
sub
jne
daa
mov
es
add
jb
imul
nop
cld
nop
jmp
in
or
pop
rcll
mov
stc
nop
es
jge
push
add
mov
nop
cld
nop
jmp
les
add
and
mov
stc
nop
es
add
add
add
add
xor
xor
mov
nop
es
add
xchg
or
and
test
push
mov
xchg
ret
add
add
add
mov
cmpsb
add
push
pop
das
stos
pop
add
mov
imul
adcb
add
add
in
les
fnsave
arpl
stc
nop
es
mov
cmpb
push
stc
nop
es
mov
inc
inc
add
mov
stc
nop
es
fldl
add
enter
jmp
outsb
jnp
in
fsubs
add
add
add
add
add
fildl
loopne
mov
stc
nop
es
popf
sub
shl
push
mov
xchg
ret
add
add
add
stc
nop
es
rolb
xchg
push
stc
nop
es
add
add
stc
nop
es
push
popf
fadds
add
push
push
mov
xchg
ret
scas
cli
add
jnp
xchg
call
nop
jmp
pop
xchg
add
mov
stc
nop
es
in
add
add
into
mov
stc
nop
es
mov
add
push
dec
add
nop
cld
nop
jmp
add
add
sub
inc
dec
xor
stc
nop
es
add
inc
add
add
or
stc
nop
es
push
inc
xor
mov
xchg
ret
add
jns
mov
nop
cld
nop
jmp
add
jnp
add
add
push
mov
xchg
ret
jge
or
out
clc
stc
nop
es
mov
xor
stc
nop
es
fmuls
add
add
fcoms
mov
xchg
ret
add
mov
add
cld
nop
jmp
rolb
sub
dec
add
iret
add
stc
nop
es
add
sub
es
add
inc
add
add
mov
movzwl
stc
nop
es
sub
jb
add
add
mov
stc
nop
es
ss
ss
lock
add
add
nop
es
xchg
add
add
nop
cld
nop
jmp
add
outsb
cld
mov
push
mov
xchg
ret
fs
add
add
stc
nop
es
add
add
add
xor
stc
nop
es
push
add
add
mov
add
mov
cld
nop
jmp
add
out
add
imul
stc
nop
es
and
cs
jae
nop
jmp
pop
mov
data16
nop
es
jb
fs
roll
add
stc
nop
es
add
fdivrs
dec
mov
stc
nop
es
fs
fldl
add
add
add
or
add
nop
es
add
add
clc
mov
stc
nop
es
add
add
push
in
push
stc
nop
es
add
jmp
pop
into
xchg
add
add
ret
stc
nop
es
add
add
popf
mov
nop
es
xchg
xchg
add
add
or
lcall
dec
mov
add
push
out
push
add
movsb
add
pop
push
mov
xchg
ret
outsb
add
xchg
inc
in
nop
es
add
add
mov
xchg
ret
aaa
mov
cld
add
pop
sbb
nop
es
and
shrl
add
adc
push
push
add
add
nop
cld
nop
jmp
add
and
add
arpl
nop
es
imul
add
add
ja
stc
nop
es
add
mov
add
add
shl
stc
nop
es
add
add
int
popa
stc
nop
es
add
add
idiv
nop
es
in
add
add
add
push
mov
xchg
ret
out
add
mov
stc
nop
es
jns
std
push
stc
nop
es
add
add
add
pushf
add
add
div
stc
nop
es
scas
push
add
and
nop
cld
nop
jmp
and
out
add
mov
stc
nop
es
inc
add
pushl
nop
cld
nop
jmp
rolb
scas
pushf
out
add
or
add
push
xchg
inc
add
pop
pusha
stc
nop
es
pop
add
mov
fldl
popf
mov
stc
nop
es
add
add
nop
cld
nop
jmp
add
add
xchg
jo
mov
repnz
add
stc
nop
es
cli
add
jle
dec
clc
dec
inc
stc
nop
es
test
lock
nop
es
add
add
and
add
out
call
lock
jmp
add
fisttpll
or
stc
nop
es
add
rcr
dec
adc
nop
es
add
or
nop
cld
nop
jmp
fadds
das
and
lret
nop
cld
nop
jmp
aaa
add
add
dec
and
in
mov
push
mov
xchg
ret
test
add
les
adcl
stc
nop
es
or
xchg
add
add
stc
nop
es
add
out
add
out
add
mov
xchg
ret
mov
jge
popf
lock
mov
mov
xchg
ret
sar
add
in
add
mov
stc
nop
es
pop
add
stc
nop
es
add
das
nop
add
mov
stc
nop
es
mov
stc
nop
es
add
add
add
mov
xchg
ret
push
scas
add
jb
insl
mov
stc
nop
es
repnz
inc
stc
nop
es
add
dec
add
lock
cld
nop
jmp
add
frstor
add
xlat
jns
stc
nop
es
add
repnz
cmpl
nop
cld
nop
jmp
mov
add
xchg
add
call
nop
cld
nop
jmp
add
jmp
popa
add
mov
xchg
ret
add
sar
dec
call
stc
nop
es
add
add
lea
nop
cld
nop
jmp
fs
and
popf
add
cmc
fiadds
es
add
add
add
push
mov
xchg
ret
xchg
shrb
add
mov
push
mov
xchg
ret
out
jb
sub
add
stc
nop
es
les
dec
mov
nop
cld
nop
jmp
in
mov
add
add
sub
stc
nop
es
add
add
add
or
rclb
dec
fildl
xchg
ret
mov
mov
jmp
stc
nop
es
add
fnsave
and
stc
nop
es
sub
jmp
add
stc
nop
es
add
rorb
add
es
lock
out
xchg
fs
add
add
stc
nop
es
les
fs
loope
push
cli
dec
add
stc
nop
es
add
add
js
nop
cld
nop
jmp
xchg
xchg
add
mov
es
cs
add
stos
decl
nop
cld
nop
jmp
fs
add
shl
mov
nop
cld
nop
jmp
xchg
jb
mov
movsb
add
dec
adc
nop
es
scas
add
add
mov
xchg
ret
add
pop
push
mov
xchg
ret
add
mov
adcl
rol
add
push
stc
nop
es
addb
in
sbb
stc
nop
es
and
push
push
mov
xchg
ret
sub
dec
stc
nop
es
sarb
cli
rolb
cld
add
stc
nop
es
push
add
and
stc
nop
es
add
jnp
add
mov
pusha
push
mov
xchg
ret
add
add
add
and
jle
mov
add
sti
add
add
lea
push
mov
xchg
ret
add
pop
lock
add
pop
jne
stc
nop
es
jnp
fsubs
test
daa
je
mov
call
adc
add
and
nop
cld
nop
jmp
add
loope
sbb
xor
dec
ss
stc
nop
es
add
leave
mov
stc
nop
es
lret
add
add
aaa
into
push
push
mov
xchg
ret
in
in
xchg
subb
add
mov
xchg
ret
outsb
inc
add
add
add
test
nop
es
and
xchg
pop
repnz
xor
nop
cld
nop
jmp
in
add
add
in
mov
jae
add
stc
nop
es
and
in
or
in
add
mov
stc
nop
es
in
outsb
add
add
mov
nop
jmp
in
add
mov
mov
nop
cld
nop
jmp
cld
add
adcl
fstps
cld
nop
jmp
add
add
add
mov
push
push
mov
xchg
ret
add
outsb
jmp
add
stc
nop
es
add
shr
lcall
jmp
jecxz
add
loope
iret
push
stc
nop
es
fldl
add
and
add
mov
xchg
ret
and
popf
mov
xor
sldt
nop
cld
nop
jmp
pop
inc
sub
jno
pop
mov
stc
nop
es
lock
lods
dec
push
stc
nop
es
sub
sub
add
scas
mov
mov
xchg
ret
add
add
add
sbb
push
mov
xchg
ret
cli
scas
add
out
test
push
mov
xchg
ret
add
in
add
xchg
adc
add
add
sti
incl
aaa
lods
jecxz
mov
mov
xchg
ret
lock
lods
jnp
pop
push
nop
cld
nop
jmp
add
add
or
stc
nop
es
xchg
aaa
add
xorb
add
add
outsb
aaa
add
add
stc
nop
es
add
js
push
mov
xchg
ret
mov
add
add
fwait
add
stc
nop
es
fldl
das
in
add
add
push
loop
stc
nop
es
xchg
das
cwtl
call
stc
nop
es
add
jb
ret
mov
stc
nop
es
add
add
ljmp
jb
mov
add
add
push
iret
add
stc
nop
es
scas
push
push
mov
mov
stc
nop
es
add
stc
nop
es
aaa
add
in
call
push
mov
xchg
ret
lret
add
fsubs
and
es
popf
add
sub
add
add
es
push
or
add
pushf
in
inc
add
add
stc
nop
es
das
add
outsb
pop
push
stc
nop
es
inc
add
leave
add
stc
nop
es
aaa
add
add
aaa
inc
add
stc
nop
es
push
in
add
aaa
dec
mov
add
adc
nop
es
mov
pop
and
lret
stc
nop
es
sub
push
pusha
add
mov
xchg
ret
scas
add
jecxz
add
mov
stc
nop
es
xchg
scas
aad
test
nop
cld
nop
jmp
add
out
subl
push
mov
xchg
ret
mov
inc
add
mov
xchg
ret
test
add
push
mov
xchg
ret
rolb
jecxz
cmc
jnp
mov
inc
add
roll
stc
nop
es
les
add
jmp
nop
cld
nop
jmp
cli
add
add
add
pop
mov
nop
cld
nop
jmp
subb
add
movsl
in
je
stc
nop
es
mov
mov
mov
popf
stc
nop
es
add
or
inc
cmp
mov
xchg
ret
dec
add
add
out
movb
les
stc
nop
es
pop
add
or
xor
mov
xchg
ret
mov
add
stc
cmp
nop
cld
nop
jmp
jnp
sub
and
test
add
add
nop
es
lret
add
push
mov
xchg
ret
jns
shrl
add
stc
nop
es
jns
inc
add
add
push
stc
nop
es
add
jns
inc
and
and
mov
mov
push
mov
xchg
ret
add
add
out
add
add
cmp
push
mov
xchg
ret
or
add
push
mov
xchg
ret
add
cld
add
push
mov
stc
nop
es
shrb
sbb
es
add
in
and
mov
es
test
imul
loope
nop
es
loope
jmp
or
nop
es
add
add
push
mov
sahf
pop
dec
ds
add
shr
lret
push
mov
add
add
es
add
aaa
rcll
add
add
nop
es
lret
and
add
add
add
nop
cld
nop
jmp
xchg
fnstsw
loope
in
mov
stc
nop
es
add
add
cmp
data16
stc
nop
es
inc
pop
jb
pop
lea
push
mov
xchg
ret
add
add
jl
sbb
add
stc
nop
es
add
jmp
enter
jmp
add
lods
add
repz
mov
xchg
ret
popf
jecxz
add
jmp
mov
cmp
stc
nop
es
add
clc
nop
cld
nop
jmp
mov
jbe
int3
nop
nop
cld
nop
jmp
mov
add
push
jb
out
shl
nop
cld
nop
jmp
add
add
add
pop
push
in
and
nop
cld
nop
jmp
add
xchg
jns
xor
ret
add
add
stc
nop
es
shrb
add
cmpsb
add
mov
es
add
add
add
add
nop
jmp
lock
add
add
imul
jo
decl
push
in
in
push
stc
nop
es
jmp
push
in
test
popa
xor
jno
add
stc
nop
es
add
add
in
rep
stc
nop
es
add
add
xchg
cmp
add
nop
cld
nop
jmp
add
add
add
or
nop
es
in
in
add
fldl
fwait
jne
stc
nop
es
pop
add
and
es
add
imul
cld
nop
jmp
sar
jb
dec
push
stc
nop
es
add
cs
add
add
rolb
pop
es
stc
nop
es
add
stc
nop
es
add
out
inc
push
add
leave
jmp
add
fs
loope
add
add
add
mov
push
mov
xchg
ret
out
add
jb
decl
push
mov
xchg
ret
add
add
add
mov
add
lret
sbb
add
add
scas
imul
add
es
rcrl
jmp
add
popa
add
nop
es
jns
push
shr
stc
nop
es
add
add
add
inc
sbb
nop
jmp
add
lods
sbbb
push
mov
xchg
ret
sub
add
mov
add
nop
es
add
push
jb
push
mov
nop
es
jb
sub
add
xchg
add
mov
xchg
ret
add
push
add
in
test
stc
stc
nop
es
add
or
popa
add
mov
xchg
ret
imul
cld
nop
jmp
fldl
add
pop
fbld
nop
cld
nop
jmp
add
fcoms
add
cld
nop
jmp
outsb
add
push
nop
es
add
fs
dec
add
inc
adc
mov
stc
nop
es
add
in
add
std
mov
push
mov
xchg
ret
add
add
dec
inc
and
into
rep
stc
nop
es
add
add
cld
add
es
in
add
add
add
mov
xchg
ret
add
in
add
ja
push
push
mov
xchg
ret
xchg
add
lods
stc
nop
es
aam
mov
pop
sti
inc
add
jmp
push
push
mov
xchg
ret
shlb
push
add
push
mov
xchg
ret
imul
add
push
mov
xchg
ret
push
cli
xchg
push
mov
xchg
ret
in
aaa
jb
dec
jecxz
les
lcall
inc
add
add
sub
jmp
mov
adc
nop
es
add
push
jecxz
popa
sub
mov
adc
cld
nop
jmp
add
jb
jb
in
add
push
add
call
stc
nop
es
push
jne
stc
nop
es
push
push
mov
xchg
ret
mov
add
cmp
loope
inc
add
outsb
pop
xchg
sub
add
mov
stc
nop
es
fldl
nop
es
add
add
add
es
add
add
jns
add
cld
nop
jmp
add
xchg
add
inc
dec
add
stc
nop
es
add
add
mov
nop
cld
nop
jmp
add
add
xchg
stc
nop
es
fsubrs
jb
add
cld
in
xchg
jmp
add
nop
es
add
scas
int3
pop
push
mov
xchg
ret
push
sub
add
sub
mov
xchg
ret
add
xchg
jg
jl
xor
mov
inc
add
outsb
mov
stc
nop
es
jb
add
es
pop
stc
nop
es
xchg
or
push
dec
xchg
add
das
push
stc
nop
es
scas
add
shr
jecxz
pop
push
mov
xchg
ret
add
mov
inc
xor
clc
ror
stc
nop
es
add
fldl
aaa
pop
testl
nop
cld
nop
jmp
jb
add
mov
add
outsb
jb
nop
cld
nop
jmp
out
in
add
jb
mov
push
add
add
nop
es
inc
add
jnp
scas
add
add
repnz
cld
nop
jmp
add
pop
and
add
inc
add
stc
nop
es
add
pop
pop
les
add
cmp
stc
nop
es
add
add
add
nop
es
push
add
jmp
jp
nop
cld
nop
jmp
cld
mov
add
xchg
inc
and
add
add
stc
nop
es
xchg
fadds
and
stc
nop
es
add
aad
add
stc
nop
es
and
jb
add
xchg
adc
lcall
mov
push
add
add
mov
clc
test
push
mov
xchg
ret
sub
fcomp
add
fcoms
cld
nop
jmp
add
pop
pushf
xchg
add
push
mov
xchg
ret
add
gs
mov
stc
nop
es
add
add
stc
nop
es
jecxz
jnp
add
mov
jae
cld
nop
jmp
xchg
add
shrb
sar
nop
es
shll
push
add
or
inc
stc
nop
es
cli
imul
add
in
mov
nop
cld
nop
jmp
outsb
mov
add
cmp
cld
nop
jmp
add
mov
les
xchg
repnz
add
stc
nop
es
mov
inc
add
mov
es
add
add
pop
add
jg
lock
cld
nop
jmp
push
addb
add
add
loope
add
add
add
mov
mov
stc
nop
es
les
aas
stc
nop
es
out
add
mov
lock
call
ljmp
rolb
ljmp
add
nop
es
ss
add
call
repz
inc
add
dec
add
inc
add
mov
shll
stos
xor
push
mov
xchg
ret
add
add
lea
test
nop
es
mov
pushl
push
mov
xchg
ret
add
push
stc
nop
es
cld
push
pushf
add
add
and
add
push
mov
jmp
idivb
lret
test
add
addb
loop
add
nop
cld
nop
jmp
lods
sub
or
jns
sub
stc
nop
es
jns
add
add
xchg
mov
stc
nop
es
cld
imul
pop
push
mov
push
add
out
pop
sbb
add
add
add
repnz
jmp
sub
les
add
je
stc
nop
es
in
add
xor
push
mov
xchg
ret
cld
mov
sub
es
add
add
add
stc
nop
es
xchg
mov
xchg
add
add
inc
int
add
add
roll
pop
inc
add
dec
cmp
cld
nop
jmp
pushf
scas
out
add
jg
nop
cld
nop
jmp
add
add
or
nop
es
add
add
lock
cmpsb
add
mov
push
push
mov
xchg
ret
add
add
jge
cmpsb
add
shr
stc
nop
es
mov
push
push
gs
mov
stc
nop
es
xchg
in
rcr
mov
stc
nop
es
add
loope
faddp
jmp
rolb
xchg
ret
cmpb
inc
push
mov
xchg
ret
and
sub
add
inc
add
mov
push
mov
xchg
ret
outsb
lock
in
add
add
stc
nop
es
add
leave
hlt
stc
nop
es
add
jmp
nop
es
xchg
in
add
xor
push
mov
xchg
ret
inc
add
dec
add
nop
es
lock
and
jge
add
add
add
nop
jmp
add
or
cli
mov
jb
add
add
add
push
imul
jecxz
add
add
insl
mov
stc
nop
es
inc
push
jb
mov
stc
nop
es
push
add
fiadds
es
inc
outsb
popf
sub
mov
mov
xchg
ret
cld
add
add
in
mov
add
je
add
add
add
mov
push
sub
je
cmp
mov
ret
jecxz
mov
or
int3
nop
add
daa
fmul
adc
push
data16
mov
out
pusha
add
lods
cmp
mov
mov
les
iret
shr
xchg
add
add
add
mov
out
push
test
add
inc
add
mov
stos
xchg
mov
xchg
sbb
stc
in
jns
cli
fistl
cmc
inc
popf
sbbl
add
rolb
scas
pop
mov
iret
jge
fdivrs
mov
sarl
mov
fildl
add
pop
out
sbb
add
out
mov
add
out
imul
popf
rolb
jb
movsl
mov
push
add
add
jno
rolb
add
and
add
add
mov
add
sub
xchg
add
insl
or
xor
add
fsubrs
mov
testb
mov
dec
inc
jmp
add
inc
movb
add
mov
add
push
insb
fwait
sbb
push
add
testb
out
rorl
dec
cmp
and
les
insl
add
add
add
ja
xor
repnz
add
add
add
add
test
add
mov
adc
sar
sbb
add
push
add
ds
add
es
add
data16
and
and
fcomps
push
add
dec
mov
sbb
add
insb
cld
adc
scas
cmp
mov
stc
in
lock
add
cmp
adc
rcll
cmp
movsl
jle
inc
outsb
or
add
add
rolb
dec
clc
testb
push
std
add
arpl
gs
add
xchg
jbe
mov
push
jp
mov
rolb
fwait
sahf
mov
les
cmp
add
add
lahf
mov
add
add
mov
pop
clc
push
aas
xchg
lea
dec
fwait
xchg
or
add
or
add
add
int3
mov
dec
rolb
fcompl
add
out
aad
clc
iret
addb
pop
push
add
add
add
lahf
ja
sarl
add
xchg
add
mov
js
pushf
push
add
xor
add
push
add
enter
mov
xchg
hlt
add
add
mov
movsb
add
pop
xchg
sti
ret
pop
lahf
dec
inc
adc
add
add
or
push
add
or
add
add
inc
inc
pushf
les
mov
js
clc
inc
add
add
pop
pusha
add
jle
add
jl
cld
les
nop
add
push
mov
orl
add
js
mov
popa
iret
add
mov
xchg
add
or
dec
xor
and
cmc
mov
add
sbb
add
add
dec
push
fsts
jge
inc
add
mov
fwait
mov
fmull
ret
in
mov
popf
daa
bound
mov
or
lcall
jae
aad
mov
add
sti
xor
add
adc
add
add
in
cmp
or
mov
stos
dec
icebp
pop
out
add
xor
add
add
jae
mov
lds
dec
test
nop
add
add
add
sbb
movsb
add
add
jo
push
or
sub
push
cmp
add
je
call
ja
out
xor
mov
mov
add
add
add
mov
add
add
nop
add
add
cli
int3
popa
imul
cld
cmp
lea
push
rolb
pushf
fmull
shll
and
lods
adc
mov
clc
mov
in
add
mov
mov
pop
ret
test
mov
adc
nop
add
and
mov
inc
pusha
add
or
mov
mov
add
rolb
ret
add
in
sub
mov
add
add
push
add
push
je
test
add
les
xchg
cmp
or
mov
mov
cmp
int3
lcall
jle
xor
mov
add
bound
mov
loop
adc
pop
pop
test
clc
into
and
mov
add
xchg
test
inc
push
add
clc
iret
jbe
jnp
pop
xchg
add
add
adc
mov
push
fisttpll
data16
leave
jno
aaa
cmp
jno
add
sbb
add
add
add
xchg
adc
popf
add
or
sbb
xor
inc
popf
add
or
call
add
add
mov
addb
xchg
test
aam
or
adc
mov
sbb
add
mov
adc
fists
add
sbb
dec
inc
add
add
xchg
add
mov
add
add
xchg
add
clc
mov
add
mov
mov
imul
inc
add
inc
add
mov
repz
leave
adc
out
add
iret
in
rolb
addb
add
add
add
mov
sbb
add
add
leave
push
mov
pop
add
add
cmp
add
mov
push
add
add
jne
jae
outsb
or
cmp
rolb
xchg
dec
inc
jbe
xor
sbb
insb
mov
jge
je
icebp
push
std
or
push
add
insl
xchg
or
add
ret
jle
pop
or
mov
popf
xchg
push
dec
data16
cltd
arpl
jl
xor
fisubrs
add
add
hlt
add
push
inc
add
push
add
mov
mov
mov
xchg
insl
cmp
push
lcall
dec
dec
xor
xor
xchg
in
lock
shrl
sub
add
inc
add
pop
daa
movsb
add
xchg
add
add
incl
jl
mov
add
sbb
add
jg
outsl
mov
add
cmpsb
add
mov
xor
aam
fidivrl
ret
dec
js
jae
popf
mov
movb
fisttpl
add
jb
movsl
frstor
mov
add
repz
add
add
daa
push
add
sub
mov
xor
xchg
add
sahf
sub
and
loope
xor
add
mov
lea
out
cwtl
in
cmpsl
and
jbe
call
push
sbb
push
add
add
mov
add
mov
stc
bound
mov
add
push
imul
int3
pop
inc
add
out
add
add
push
mov
lods
mov
add
add
mov
lahf
xor
jb
and
add
cmp
add
mov
add
dec
xchg
adc
adc
icebp
icebp
xchg
sub
pop
add
mov
add
push
inc
repz
adc
add
mov
data16
out
adc
inc
push
into
xchg
cs
or
push
iret
mov
fstpt
mov
push
add
push
add
mov
sti
cld
jecxz
jmp
ret
jg
nop
add
add
mov
in
into
inc
add
add
cwtl
pop
push
add
and
push
and
mov
sbb
xor
cld
imul
sbb
adc
repz
movsl
mov
mov
add
mov
add
add
mov
orl
add
lods
xchg
xchg
add
mov
mov
xchg
addr16
pop
js
scas
in
ds
sbb
add
add
add
add
mov
mov
test
jb
or
dec
stos
add
mov
pop
lahf
repnz
pop
dec
mov
or
push
cmpsl
cmp
test
mov
repz
ret
add
ja
jnp
add
pop
mov
sbb
mov
sbb
push
add
adc
arpl
inc
add
add
aaa
sub
ret
icebp
cmp
add
mov
mov
arpl
lcall
jae
lods
adc
ljmp
mov
cltd
je
bound
mov
push
or
jne
xchg
pop
rorl
movsb
add
lret
or
lds
jno
add
movsb
add
outsl
ror
cmpsb
add
cld
mov
mov
stc
adc
and
mov
add
add
add
mov
mov
std
repz
daa
testb
sub
pop
jge
or
jne
fcoms
mov
xor
add
add
aam
repz
cmp
in
dec
scas
ljmp
daa
dec
mov
add
pop
and
mov
add
jb
adc
sub
add
mov
dec
pop
stos
dec
push
add
xlat
loope
out
stc
iret
rolb
pop
fnstcw
inc
arpl
add
cmp
add
cmpsl
push
add
add
add
dec
xor
pop
or
add
add
fwait
lret
fisttps
cld
popa
loop
daa
cld
pop
pop
cmp
sbb
int3
cmp
fcmove
sbb
xchg
ljmp
add
icebp
stos
js
add
imul
mov
cmp
addb
or
mov
add
mov
xor
loopne
scas
das
in
loopne
mov
and
mov
add
push
add
mov
xor
arpl
sbbl
mov
fsubp
adc
xchg
push
into
ret
stos
je
test
and
mov
movsl
rorl
fisttps
add
iret
xchg
jle
bound
mov
daa
js
rorl
add
inc
add
add
inc
and
xor
test
sbb
mov
fstpl
xchg
add
data16
mov
add
add
pop
and
dec
pop
mov
or
fidivrl
mov
lahf
and
mov
xor
add
mov
in
adc
test
inc
add
cmp
add
mov
add
xchg
add
ret
jecxz
add
inc
add
repnz
clc
imul
arpl
add
aaa
fcmovbe
add
out
sbb
aaa
mov
cmp
or
pop
cmp
add
and
jp
add
add
aad
add
add
popf
cld
sbb
movb
sub
add
mov
fwait
test
int3
inc
add
mov
pop
pop
int3
mov
add
or
jmp
and
mov
add
jmp
rsm
mov
mov
add
loopne
push
fnstcw
mov
or
mov
add
iret
push
add
add
pusha
add
add
movsl
frstor
scas
jns
aas
adc
pop
testb
dec
or
add
xor
in
mov
bound
mov
sbb
add
pop
inc
push
sti
subl
shr
sti
pop
jge
imul
jp
stos
jo
xchg
stc
nop
add
add
mov
stc
or
repz
mov
add
add
push
in
jmp
add
add
in
add
add
adc
and
add
in
pop
loopne
addb
adc
pop
addb
lods
sahf
pop
lret
shll
add
add
mov
pop
les
or
pop
aaa
rolb
int
daa
into
inc
add
mov
xchg
filds
mov
dec
sub
mov
out
xor
inc
add
add
add
test
add
ss
push
or
js
add
add
dec
je
mov
xchg
add
testb
add
add
mov
mov
sub
mov
fmul
rolb
adc
add
add
push
mov
sbb
add
add
adc
push
push
inc
add
mov
adc
fdiv
add
jns
add
rolb
inc
add
adc
movsb
add
adc
push
in
add
and
mov
ficoml
addr16
fistpl
adc
mov
sbb
stos
dec
cwtl
insl
lock
add
iret
pusha
add
dec
and
add
add
mov
add
mov
or
add
add
xchg
add
xor
lock
push
add
sub
std
bswap
les
mov
add
jle
std
jl
addb
sbb
add
add
cmp
push
repnz
adc
push
mov
mov
mov
sub
pop
cwtl
cmp
add
add
xlat
ret
cmpl
xor
cmp
push
add
add
add
ffreep
daa
daa
rcr
cwtl
sbb
add
loopne
fwait
sub
pop
pop
loopne
hlt
add
sub
cmp
add
mov
add
jl
sbb
pop
and
mov
pushf
in
dec
mov
int
xlat
cmp
outsl
add
pop
xor
popf
push
jb
outsb
dec
iret
arpl
fildll
iret
imull
add
jmp
dec
xchg
add
pop
mov
lea
xchg
push
xchg
jg
stc
stc
dec
mov
movb
fadds
cmp
lea
add
add
addr16
add
je
faddl
mov
add
inc
pop
loop
sbb
mov
imul
cltd
hlt
add
mov
mov
or
mov
icebp
mov
sub
out
pusha
add
aas
aaa
add
mov
add
add
lahf
sub
cmc
add
mov
arpl
ret
or
pop
or
int3
fisubs
inc
add
popa
jno
cmp
adc
adc
dec
add
add
jno
mov
lahf
xchg
inc
filds
sti
lods
les
addb
xor
ret
add
out
int
add
sbb
and
mov
cmpsb
add
je
fdivl
push
add
add
add
aas
lcall
add
add
inc
cmp
add
xchg
add
outsb
scas
cwtl
xchg
in
add
add
sbb
add
insl
fisttpll
mov
scas
rolb
jne
lahf
addb
cltd
xlat
inc
movb
pop
cmp
mov
mov
add
mov
add
add
ret
cmp
add
repnz
notl
add
and
in
lds
add
add
add
sti
dec
xor
or
push
cmp
cmp
and
add
dec
dec
pextrw
sbb
lahf
mov
pusha
add
dec
add
imul
inc
and
mov
add
jno
filds
test
xorl
leave
mov
les
les
and
out
sub
jp
shl
push
add
outsl
jne
add
mov
push
jae
inc
add
ljmp
add
add
add
rorl
sahf
cld
loopne
dec
arpl
testl
arpl
sbb
pushf
jb
push
pop
xor
stc
aaa
cmp
add
mov
cmpsb
add
pop
pop
jb
pop
adc
lock
add
dec
push
mov
test
xchg
call
add
rcll
insb
push
push
add
testl
cmp
mov
int
fisttpl
mov
push
or
add
sub
int
add
add
jg
add
add
cld
and
mov
ds
js
in
movsb
add
lock
insb
push
jp,pt
jl
add
add
ret
add
clc
sarl
je
pusha
add
pop
iret
in
cmp
pop
fwait
out
arpl
popf
adc
cmpsl
mov
add
add
push
push
in
fidivrl
inc
int
mov
pop
add
adc
mov
xor
ret
mov
add
or
mov
xlat
jmp
pop
loop
cmp
add
jecxz
lea
addb
cmpsl
dec
mov
xchg
imul
add
testb
add
sub
inc
int
sbb
push
fisubrs
add
mov
icebp
roll
cmp
mov
jb
inc
cmc
cltd
mov
xchg
add
add
fcomps
ja
filds
mov
xor
cmp
cld
fcompl
jae
cmpl
push
mov
fisttpl
add
enter
aas
add
mov
pop
addb
add
scas
popf
jg
inc
cmp
packuswb
mov
bound
mov
fidivrl
repz
push
in
test
inc
mov
test
cwtl
cmp
and
addb
jo
add
outsl
lods
int3
cli
add
add
testb
adc
ret
jg
rcll
add
sub
mov
cmp
sub
pushf
icebp
mov
ret
sbb
cmp
mov
arpl
sub
loopne
fisubrl
mov
int3
fdivrl
pop
lret
add
iret
pop
lcall
sub
add
xchg
maxps
ficoms
loopne
cld
dec
add
xor
into
mov
add
movsb
add
add
lods
mov
mov
xlat
iret
pusha
add
add
jp
int3
mov
add
icebp
add
add
int3
movb
fistpll
pop
jmp
mov
fnstsw
add
push
or
and
mov
pop
imull
stos
add
sbb
push
mov
test
dec
shll
add
add
add
push
out
ljmp
adc
leave
jmp
add
mov
add
push
add
cltd
mov
scas
xlat
mov
push
add
add
pop
lahf
movb
push
ja
dec
sub
add
movsb
add
mov
dec
jo
in
addl
and
mov
iret
xchg
or
movsl
add
fsubrp
xor
and
mov
add
xor
rolb
mov
add
icebp
aas
rcl
jo
popa
pop
mov
fiaddl
add
sti
hlt
add
add
aad
and
call
jge
adc
cli
jnp
insb
or
and
call
test
inc
add
or
repz
push
std
and
add
adc
aaa
testl
pusha
add
lea
or
sub
mov
icebp
rolb
mov
rorl
cmpsl
ficoml
add
add
lods
nop
add
sbb
nop
add
add
arpl
call
leave
mov
push
add
mov
add
xor
xchg
cmp
add
addb
dec
and
add
add
aam
out
jae
jb
fistpll
add
add
pop
mov
sbb
lret
call
mov
push
aaa
add
mov
add
add
sbb
add
dec
mov
add
dec
setae
xchg
cs
inc
add
add
mov
adc
push
xchg
sti
dec
into
mov
adc
rolb
jecxz
imul
cs
add
testb
add
jg
push
imul
clc
xor
fucomp
icebp
adc
in
es
in
clc
inc
iret
xchg
out
xchg
jno
test
add
inc
add
add
add
add
fistpl
dec
ret
push
push
add
bound
mov
add
pop
cli
fcmovb
add
add
push
add
das
mov
add
push
add
jbe
arpl
sbb
mov
inc
add
lock
ret
testb
lods
cs
pusha
add
enter
rorl
add
mov
sbb
add
outsb
push
pop
mov
add
ret
scas
outsb
sbb
inc
add
fildl
xchg
add
mov
add
inc
xor
js
add
mov
add
mov
add
add
add
add
lcall
pop
dec
mov
add
or
mov
add
mov
add
loope
xchg
movsl
mov
mov
pop
xchg
lret
mov
sbb
ljmp
xchg
add
push
add
mov
outsl
and
mov
push
icebp
mov
add
mov
jae
xchg
add
add
add
cld
movsb
add
add
pop
fnstenv
add
push
add
cmpsb
add
adc
and
lds
mov
inc
add
xor
data16
add
or
add
sub
outsb
repnz
mov
add
add
add
add
add
add
add
add
loop
xchg
add
sub
divl
in
add
mov
add
xor
sbb
fisttpll
add
insl
xchg
add
add
mov
or
dec
push
add
adc
dec
mov
cs
add
mov
jns
test
add
sbb
scas
cmp
push
add
lret
cmp
add
add
add
xor
ja
add
add
add
je
mov
repnz
jge
add
mov
les
scas
and
inc
add
in
in
jg
add
mov
lock
add
orl
sbb
ds
dec
pop
mov
outsl
lcall
addb
add
int
add
jmp
push
adc
dec
inc
add
outsb
mov
mov
cmpsb
add
loopne
mov
pop
aam
jl
add
imul
test
mov
imul
push
mov
pop
dec
fisubrl
and
add
pushf
roll
add
scas
dec
xor
and
sti
mov
movb
pop
pop
lea
mov
mov
sbb
push
add
xchg
inc
add
add
testb
cmc
les
out
push
add
test
or
mov
add
and
in
add
cli
push
cld
inc
add
add
push
rolb
jns
cmp
add
mov
ja
add
xchg
add
add
xchg
ret
adc
repnz
clc
mov
add
jo
out
push
fdivs
roll
cld
and
int3
inc
pop
rolb
add
add
mov
add
or
in
mov
add
add
scas
jmp
add
mov
xor
jnp
push
mov
jg
mov
sub
pop
dec
into
insl
jge
push
add
add
dec
leave
mov
add
add
rolb
jb
pop
jle
jmp
add
jle
sub
rorl
sbb
add
sbb
push
push
addb
cmp
clc
inc
add
cmp
mov
add
out
lds
outsb
mov
stos
stos
inc
xor
xchg
fisttps
jns
add
or
mov
sub
push
mov
nop
add
inc
or
push
add
xchg
inc
add
add
outsb
repnz
pop
xor
pop
mov
add
add
filds
mov
daa
pop
inc
andl
cmp
vpaddb
imul
mov
add
mov
add
mov
out
rolb
push
add
mov
fnstenv
je
jecxz
add
push
add
add
jns
out
cwtl
and
mov
add
mov
out
push
add
and
cmp
test
xchg
dec
in
jo
jbe
in
movsb
add
in
mov
out
add
lret
pop
notl
call
fwait
sbb
add
jno
add
shl
xlat
movb
xchg
add
xor
loopne
lods
sbb
add
add
sti
inc
add
add
negl
add
mov
addb
add
mov
mov
testb
jno
mov
fsts
mov
pop
mov
call
mov
or
cmp
add
repz
xchg
add
mov
jb
mov
mov
dec
jns
sbb
inc
add
inc
add
adc
push
les
pop
push
add
inc
jnp
lods
je
adc
rolb
or
aas
loop
iret
jl
imul
add
cs
lahf
cmp
out
mov
movsl
test
dec
testl
ja
pop
rolb
sub
adc
add
mov
add
addr16
push
add
cmp
mov
add
jmp
add
add
cltd
push
add
mov
add
jle
mov
lds
lods
int
lret
add
add
and
sbb
fnsave
add
leave
movsl
cmp
add
mov
leave
aad
add
mov
pop
shll
add
rolb
stos
testb
add
inc
jmp
rolb
push
movsl
loope
push
add
xor
ret
inc
add
inc
add
add
out
and
add
inc
adc
and
hlt
add
jne
ret
inc
add
add
out
or
cld
js
insl
test
dec
push
fs
mov
mov
movsb
add
insl
inc
add
cmp
cmp
inc
add
mov
mov
popa
js
xchg
pop
inc
testb
in
movsl
mov
xor
scas
addb
fstps
sub
enter
imul
mov
in
inc
add
add
jmp
add
aad
cld
bound
mov
add
add
test
jle
movb
add
pop
cmp
add
cs
mov
jp
or
mov
add
push
add
mov
fbstp
insb
pop
repz
mov
pop
pop
push
push
inc
add
sahf
leave
out
les
dec
sbb
enter
je
jns
je
loope
das
addl
repz
jo
inc
add
repnz
or
add
xlat
xchg
adc
xchg
mov
cmpsb
add
xchg
add
add
incl
xlat
rep
cmpsl
jge
testl
jne
test
inc
add
add
add
adc
mov
jb
roll
add
aad
outsl
fidivrs
popl
add
and
mov
pusha
add
mov
xor
stos
mov
or
mov
lahf
jo
loopne
lret
add
mov
add
add
jae
add
sub
push
add
repnz
aas
movsb
add
add
jmp
mov
mov
push
sti
addr16
dec
add
add
pop
push
xor
mov
cmp
cli
inc
icebp
push
outsb
shld
add
inc
add
xor
mov
mov
add
arpl
xchg
add
add
adc
add
lea
add
add
add
xor
incl
jbe
sub
les
aaa
mov
adc
add
hlt
add
jnp
add
sbb
jb,pt
data16
js
rolb
test
ffreep
add
addr16
xor
jne
push
jne
add
dec
xchg
popf
xchg
in
enter
pop
add
mov
mov
add
add
js
pop
push
inc
dec
jg
add
add
xchg
add
xor
or
stos
roll
xor
add
add
add
add
add
xor
insb
sub
jle
add
jne
pop
ljmp
pop
sbb
rolb
xor
cmpsb
add
jp
mov
popf
rolb
std
mov
outsb
xor
and
jle
add
xchg
inc
add
lret
add
sub
add
add
mov
add
mov
add
ljmp
adc
mov
stos
fiadds
add
cli
std
enter
add
or
add
xor
idiv
sub
cmpsl
sub
add
add
inc
rolb
mov
addb
push
cmp
add
pop
dec
add
mov
add
add
inc
add
add
test
test
nop
add
add
mov
add
add
int
sub
fisttpl
ret
clc
xor
lret
sti
mov
xlat
jp
add
into
push
add
add
mov
add
jne
dec
jl
outsb
inc
add
add
lea
add
add
and
loop
mov
sbb
ror
rolb
jge
jp
xchg
cmp
movsl
lea
insb
dec
outsl
push
in
sbb
xchg
insl
xor
pop
mov
inc
add
rorl
fxch
add
add
mov
sbb
add
movb
add
das
jge
icebp
add
add
push
ficompl
mov
adc
fwait
in
test
add
xchg
nop
add
rolb
in
scas
adc
push
jb
aaa
rolb
jb
mov
addb
add
enter
push
dec
popf
andl
bound
mov
fld1
icebp
loop
inc
add
ss
fisubl
add
fadds
dec
daa
rcll
loope
add
dec
xor
sub
mov
mull
add
jb
lcall
pop
mov
pop
cltd
aaa
ljmp
mov
shrl
lock
int3
mov
add
push
mov
std
xchg
int3
aad
or
jp
adc
je
add
add
jne
sti
jp
add
lds
add
add
add
add
inc
add
pop
jecxz
rolb
negl
mov
pop
add
mov
add
mov
fiaddl
xchg
push
add
push
add
push
icebp
mov
testl
jno
add
xor
xchg
add
xor
je
mov
push
das
xor
call
rorl
add
add
mov
hlt
add
sbb
mov
dec
push
inc
bound
mov
pop
or
sar
inc
and
scas
or
add
add
pop
popa
addb
ljmp
out
dec
cs
add
add
add
les
xchg
movaps
add
das
dec
or
add
add
xor
mov
mov
jns
jp
add
test
test
dec
clc
stc
ret
cmp
sub
add
test
ljmp
add
dec
sbb
divl
mov
adc
stos
lcall
add
xlat
push
hlt
add
push
add
add
into
daa
pop
mov
sub
sbb
add
add
movb
loopnew
pop
inc
mov
addb
add
scas
cld
inc
loope
lea
add
mov
int
add
rolb
dec
add
aaa
int3
lea
adc
xor
cmp
add
pop
insl
push
xchg
push
add
add
add
fs
dec
jmp
add
and
add
int3
ret
rolb
ret
xor
adc
xchg
add
jbe
adc
sub
popf
addb
push
add
add
mov
add
jmp
push
add
inc
add
add
xchg
adc
lea
or
das
ljmp
inc
jb
cli
movsb
add
cmpl
mov
add
fwait
in
inc
add
sti
shr
adc
push
add
add
cld
pop
incb
add
test
movb
lds
push
pop
cmp
stos
js
jno
add
mov
pop
fcomps
add
dec
mov
ljmp
xchg
adc
sbb
add
inc
add
rol
test
add
add
add
xrelease
pop
jp
data16
add
aad
push
add
jmp
ss
add
add
lods
int3
ret
add
add
mov
lods
xchg
in
bound
mov
cmp
adc
rolb
mov
add
add
add
inc
test
aaa
aad
add
push
add
sub
mov
add
add
pop
add
sub
daa
jb
adc
add
mov
add
out
icebp
sbb
dec
pop
mov
in
les
dec
aad
add
cmp
rolb
mov
adc
add
add
push
test
add
add
in
inc
add
add
add
cwtl
cmp
fidivrs
add
add
mov
add
mov
dec
dec
mov
pop
data16
mov
add
out
and
sbb
jne
out
jl
add
daa
adc
mov
lret
push
add
add
xchg
jae
and
mov
insl
lret
cwtl
int
fsubrs
les
movsl
lret
add
add
dec
cmp
add
mov
push
add
xchg
add
mov
add
mov
add
fnstsw
sub
sbb
add
mov
push
add
add
lea
sti
push
fistps
jns
mov
and
add
movb
mov
add
stos
push
shr
push
or
add
call
inc
add
add
add
mov
icebp
sub
adc
inc
add
js
add
add
lcall
add
hlt
add
push
add
xlat
sti
or
add
add
add
imul
mov
add
add
popa
sti
adc
scas
mov
add
rolb
repnz
add
mov
int
push
add
fsubl
mov
add
add
mov
pop
nop
add
push
rolb
add
sub
add
test
sub
mov
add
mov
jle
outsb
mov
sti
out
enter
add
xor
add
xchg
add
add
and
add
test
push
add
cs
cmp
dec
pushl
xor
loop
push
xor
mov
data16
add
jo
push
out
mov
xchg
loope
add
mov
std
jbe
rolb
and
loop
jno
and
test
add
push
add
mov
out
add
jno
sub
popf
scas
xchg
add
add
mov
sti
or
in
xor
add
cmpsb
add
inc
nop
add
sub
mov
stos
and
dec
mov
aad
push
sahf
add
cmc
sub
add
add
addb
lahf
mov
stc
sbb
xchg
mov
jp
xor
mov
add
xchg
inc
push
adc
xlat
push
add
xchg
add
adc
mov
jl
aam
xor
dec
lock
jge
sbb
pop
or
mov
add
sbb
add
into
shll
incl
add
add
data16
dec
jp
and
mov
add
add
add
and
push
lahf
push
xchg
rolb
stos
inc
add
insl
pop
ja
loop
jmp
rsqrtps
loope
add
add
pusha
add
add
add
adc
and
add
xor
jo
scas
xchg
jge
ror
div
divl
mov
inc
mov
jns
add
jge
add
in
add
xchg
mov
je
mov
das
push
hlt
add
add
dec
out
fs
add
jmp
mov
add
sbb
data16
jae
add
push
cmp
testb
sub
mov
iret
xor
je
rolb
jo
das
lods
daa
xchg
out
out
repnz
hlt
add
push
add
lds
rolb
mov
loopne
dec
add
jne
add
in
push
cwtl
cltd
mov
sub
das
xchg
idivl
push
mov
xchg
sbb
mov
movsb
add
mov
adc
mov
or
gs
add
pslld
movb
mov
mov
xorl
jl
add
add
ret
cltd
mov
push
push
add
int3
xor
add
rolb
dec
push
add
add
call
cmpsl
push
add
sahf
jae
cld
inc
add
jge
mov
js
dec
mov
dec
mov
adc
add
lods
insb
mov
or
cmp
cmp
aaa
lds
les
push
add
imul
add
pop
ret
les
lock
icebp
jae
lahf
or
inc
pop
stos
arpl
inc
add
sub
lds
stos
xchg
add
add
adc
add
adc
lcall
jnp
add
rolb
clc
xlat
shl
pop
inc
loop
pop
pushf
bound
mov
add
sub
dec
in
inc
add
add
pop
sbb
test
jbe
roll
add
aas
stos
and
mov
rolb
add
sarl
add
imul
add
add
pop
xchg
movsb
add
das
test
je
cmp
js
bound
mov
push
add
add
sahf
mov
add
jmp
add
add
fwait
mov
shr
push
in
je
fiadds
add
add
mov
std
xchg
add
add
add
add
rolb
or
and
add
in
insl
gs
xchg
mov
push
insl
and
add
add
sub
repnz
mov
push
add
cwtl
adc
inc
add
inc
pop
dec
insb
mov
add
addr16
scas
flds
and
mov
sub
add
mov
mov
lock
mov
push
sahf
inc
loopne
inc
mov
jne
sahf
inc
rolb
inc
pop
cli
pop
sbb
jno
shll
mov
add
pop
xor
or
push
add
pop
fimull
push
mov
cmp
add
xor
mov
push
add
and
mov
push
mov
sbb
sub
adc
aas
pop
fistpll
push
mov
cmc
mov
shl
add
comiss
sub
hlt
add
add
mov
inc
mov
xchg
outsb
xor
add
std
xchg
add
add
add
add
rolb
dec
mov
inc
gs
shrl
movb
sbb
pop
lret
test
push
add
push
lret
insl
push
xor
dec
fsubl
add
add
adc
mov
pop
jb
pop
sub
pop
mov
pop
mov
add
mov
add
into
push
inc
out
push
nop
add
mov
sbb
and
mov
add
cmpl
lret
sbb
pop
adc
sti
dec
xlat
add
xor
jp
add
addr16
add
adc
dec
xor
stos
xor
xor
jno
add
imul
enter
jmp
add
xchg
add
adcl
dec
and
addb
xchg
add
add
into
lea
push
add
add
fbld
add
fistpll
in
das
cmp
mov
inc
add
add
add
rcrl
add
in
xchg
mov
and
mov
rcrl
out
jne
push
aam
push
int
lahf
xor
inc
adc
jmp
icebp
sbb
pop
movsb
add
add
xor
std
pop
jp
or
add
push
or
add
add
sub
aad
rolb
and
mov
cs
pop
add
das
mov
add
add
out
inc
mov
sahf
notl
xchg
add
add
add
pop
cltd
and
inc
pop
cmp
lds
pop
lods
addb
add
jns
push
rolb
sub
add
jno
icebp
movsb
add
add
andl
xchg
add
mov
add
cltd
inc
add
cmp
addb
add
fsts
popf
lea
adc
out
jno
adc
inc
add
and
xlat
js
pushf
and
mov
sbb
addr16
add
or
jg
in
enter
add
aad
sbb
sarl
sub
add
int
jle
add
mov
fwait
mov
or
xor
add
add
lea
rcrl
inc
add
mov
lret
push
cltd
inc
add
sbb
mov
add
cli
out
mov
push
add
cmp
jb
and
pop
xor
push
in
dec
mov
test
ja
nop
add
xchg
sbb
add
leave
jno
add
mov
push
popf
inc
aad
xchg
fcomps
popf
in
add
je
jns
out
pop
dec
jmp
add
add
daa
aad
out
repz
pop
stos
mov
addb
rolb
add
add
popf
jnp
xor
std
xor
add
inc
add
cli
jae
add
stos
dec
mov
mov
inc
add
lea
pushf
test
xlat
sub
cmp
pop
jmp
sub
or
ss
popa
add
fidivrs
test
cwtl
cmp
mov
stos
int
add
jo
dec
sub
xchg
add
add
add
dec
popa
cwtl
popf
mov
mov
fisubl
jg
mov
dec
mov
mov
jb
sbb
lahf
sub
mov
jmp
sub
sbb
and
aaa
inc
loop
fbstp
mov
jg
add
addb
add
add
add
add
ljmp
in
mov
inc
add
aad
data16
add
mov
icebp
fistpl
jmp
xchg
mov
add
push
add
loopne
ljmp
test
rolb
sub
pop
push
enter
movsl
jge
add
mov
jmp
pop
arpl
dec
clc
xchg
mov
add
arpl
add
add
mov
cld
fnsave
clc
jecxz
shll
push
bound
mov
add
decl
add
mov
inc
add
add
cmp
jno
das
movb
add
inc
add
loopne
cli
adc
inc
add
mov
cld
push
jle
add
cmp
loop
pop
push
dec
lret
popa
lds
jb
adc
xor
outsb
into
jg
popa
xor
mov
lret
add
stos
ret
int3
lock
ret
add
add
sbb
mov
add
mov
add
add
mov
lret
pop
or
pop
pusha
add
mov
lock
add
mov
rolb
mov
add
push
cld
aaa
subl
jo
fisubs
sub
adc
enter
cmp
or
lock
xchg
and
sub
add
adc
pop
xchg
adc
leave
pop
sbb
add
add
leave
jo
dec
dec
pop
mov
pushf
das
add
sti
jp
xchg
push
cmpsl
xchg
jg
add
in
sub
push
add
cmp
inc
pusha
add
add
leave
int
jp
add
loope
mov
add
dec
push
xchg
push
add
inc
ss
cltd
add
mov
aaa
push
mov
flds
movsbl
add
mov
mov
sub
add
add
mov
sbb
repz
lret
push
add
xchg
add
push
add
push
into
add
and
xor
add
cmp
push
add
addr16
mov
mov
add
and
mov
lock
xchg
mov
push
int
sbb
mov
mov
jb
add
add
jo
insl
mov
add
add
or
sbb
add
add
les
sbb
imul
jbe
mov
sbb
xor
mov
push
out
addb
xor
fistl
push
add
outsl
push
add
push
add
lods
jg
xchg
add
add
add
xchg
pop
xor
fisubrs
les
loopne,pn
mov
add
in
testb
mov
xlat
adc
cmp
aaa
movb
add
popa
pop
iret
aad
or
add
and
add
or
or
pop
iret
fmulp
and
mov
add
sub
inc
add
add
out
popa
hlt
add
xchg
add
and
add
and
jmp
xchg
fsubr
int
aad
add
mov
xchg
add
add
inc
add
adc
inc
lods
cmp
shll
sbb
out
dec
cmp
sahf
pop
movsb
add
popf
fndisi(8087
pusha
add
add
add
add
add
add
add
cmp
fidivrs
popa
aad
add
xchg
sub
ret
test
aad
out
add
add
mov
mov
add
add
add
dec
xor
cs
jecxz
cli
dec
outsb
jl
xor
mov
sub
adc
stos
mov
inc
sbb
add
outsb
push
add
repz
add
cmp
add
into
mov
mov
push
stos
ret
leave
add
add
iret
fadd
das
gs
jl
cmp
movsb
add
or
add
and
add
mov
shll
add
dec
imul
add
int3
mov
and
push
xor
scas
dec
repz
xchg
add
or
add
inc
mov
addb
mov
vpshlb
mov
cmpsl
out
fmuls
sahf
call
add
pop
adc
jg
add
loope
sub
inc
jl
dec
jmp
add
push
jbe
adc
push
add
rolb
pushf
iret
mov
add
add
add
xor
aam
mov
push
and
pop
jg
ret
sbb
dec
test
mov
cmpsl
mov
mov
add
mov
ss
jbe
fdivrs
mov
lock
pop
scas
jge
add
add
das
xor
and
push
add
sbb
push
add
mov
cmpl
or
lds
jo
inc
cli
mov
lods
inc
lock
test
rolb
repnz
add
sub
dec
add
test
add
xlat
aas
es
add
jae
sbb
xchg
mov
pop
push
jecxz
push
xor
pop
inc
iret
push
add
add
ret
jg
inc
popf
dec
fldpi
cmp
xor
andl
or
cmp
dec
dec
repnz
sbb
add
arpl
inc
add
loopne
jb
je
inc
add
clc
aas
repnz
add
mov
add
mov
gs
sbb
push
jmp
in
mov
and
mov
aas
jp
sub
and
fimull
ja
js
out
xchg
add
dec
add
add
mov
repz
loope
jp
add
push
add
add
jge
add
cltd
in
add
add
add
out
arpl
add
add
mov
sbb
pusha
add
sbb
icebp
inc
add
cwtl
jecxz
push
add
push
int3
cmp
leave
repz
sub
scas
mov
mov
push
jbe
dec
cmp
stc
add
aaa
test
aas
xchg
add
add
pop
clc
loope
xchg
xchg
gs
arpl
scas
inc
rolb
push
inc
add
dec
in
pop
cmp
add
add
rcr
in
add
cmpsl
cmp
xchg
add
add
add
add
fcompl
test
clc
adc
ljmp
add
add
js
dec
popf
add
mov
add
out
in
aam
ret
add
mov
add
in
sub
add
mov
add
add
mov
inc
jo
xor
insl
xchg
add
prefetcht0
arpl
iret
sbb
sbb
add
mov
rorl
inc
add
out
xchg
add
insb
loope
jge
add
add
mov
add
add
popf
cwtl
mov
add
fwait
mov
or
cmp
add
aam
testl
add
addb
push
sub
xor
cmp
add
xchg
subl
bound
mov
lret
popa
push
add
add
and
mov
add
cmp
das
inc
rolb
and
mov
add
xor
mov
add
add
mov
add
mov
pop
inc
pushf
aaa
sbb
adc
sub
xchg
add
add
and
add
inc
add
leave
mov
add
hlt
add
add
add
jns
add
add
mov
insl
add
mov
sub
xchg
add
loop
xchg
lret
jns
add
nop
add
fs
sti
stos
sub
sub
into
adc
mov
add
sub
jmp
roll
repz
lods
and
add
inc
add
mov
mov
jecxz
testb
sbb
es
add
add
imul
rolb
insl
popa
stos
scas
mov
imul
pop
rolb
pop
fldt
dec
sahf
cmp
adc
in
fistpll
add
pop
test
clc
jo
inc
pop
push
add
pop
insl
or
jge
into
sahf
gs
xchg
mov
cli
xchg
cmp
stos
sbb
sub
add
rolb
scas
cmp
dec
fdivrs
testb
rolb
jne
fs
cmp
add
xchg
gs
inc
add
add
add
popf
xchg
outsl
test
add
add
mov
lds
or
inc
add
popa
adc
or
add
stos
js
xor
nop
add
inc
add
mov
scas
dec
lods
mov
add
push
mov
add
mov
pop
outsl
movsl
and
and
mov
add
mov
out
popa
in
xlat
sbb
mov
mov
in
call
mov
push
add
push
add
inc
add
dec
clc
aad
lea
pop
adc
mov
add
add
adc
jno
arpl
add
push
add
cltd
jbe
adc
imul
leave
pop
mov
aaa
repz
sbb
sub
into
nop
add
add
mov
loopne
ds
pop
cmp
add
add
inc
mov
push
add
add
xor
mov
fstps
push
lock
cmp
mov
push
and
mov
cmp
mov
icebp
xor
push
add
mov
inc
add
call
movb
add
and
pop
stos
call
add
movsl
mov
add
addb
cmpsb
add
add
add
das
rolb
incl
add
xor
add
jb
lahf
xor
out
jmp
add
push
add
rolb
inc
fidivl
shr
add
mov
inc
add
mov
add
add
add
add
add
add
mov
dec
or
xlat
inc
add
adc
mov
lods
sub
inc
dec
lods
sti
add
mov
mov
int3
push
loop
jmp
add
sub
cmp
or
add
mov
stc
inc
mov
sysenter
add
or
pop
pop
mov
pusha
add
stos
pop
in
jo
sub
or
mov
xlat
je
jmp
cmc
testl
xor
rolb
mov
test
lea
cmp
bound
mov
and
mov
mov
adc
js
in
add
or
iret
push
mov
inc
xchg
sbb
daa
xor
loope
add
mov
add
add
pop
and
mov
add
pop
jecxz
add
stc
dec
jnp
fstl
aad
rcrl
jnp
add
lock
cli
xor
out
mov
add
add
push
push
daa
adc
add
ret
inc
xchg
dec
push
add
fdivs
add
and
cwtl
jno
mov
movsb
add
add
mov
lret
movsl
add
jno
add
mov
push
add
add
test
add
add
cmc
mov
bound
mov
push
add
sub
sbb
add
lea
add
clc
sub
jge
js
jle
fwait
adc
add
adc
mov
add
in
add
add
mov
add
add
add
lock
add
push
repnz
andl
pop
pushl
call
bound
mov
add
out
xor
pminub
add
mov
add
add
subl
add
push
add
inc
add
jmp
mov
add
add
push
add
mov
cmc
push
add
add
in
iret
fs
ja
int3
mov
ja
rolb
and
and
mov
add
add
movsb
add
xchg
mov
cs
scas
add
adc
sub
out
std
insb
xor
add
xchg
adc
outsb
jno
cmp
and
sbb
cli
mov
mov
push
xor
xor
mov
add
add
add
cmp
fdiv
stos
push
add
adc
dec
adc
mov
pop
jne
add
add
push
add
dec
flds
sbb
andl
add
add
mov
aaa
fs
dec
jo
jne
add
rolb
cmp
addb
jp
out
addb
pop
cli
mov
test
add
cmp
xchg
or
mov
xchg
dec
shll
les
sub
add
jne
into
add
add
add
fwait
inc
mov
add
int
fdivrp
clc
mov
xlat
dec
push
add
add
loopne
sub
cmc
push
cmp
in
mov
xchg
adc
fmuls
dec
cmpsb
add
xor
fdivr
xor
sbb
cmpsl
sub
and
popf
mov
add
add
add
mov
add
mov
stos
and
mov
bound
mov
push
add
add
pop
addb
sbbl
inc
jno
mov
push
add
sti
dec
adc
jno
inc
add
and
mov
add
push
rolb
fwait
mov
mov
jae
es
cmp
add
inc
add
add
add
inc
add
lods
and
add
loopne
shl
add
and
mov
add
push
mov
pop
mov
out
insb
add
out
fidivs
push
out
xchg
pop
popa
or
and
mov
pop
adc
mov
mov
add
popa
pop
mov
aaa
or
fdiv
add
jo
data16
add
add
add
add
jb
pop
lods
icebp
repz
int
inc
add
mov
add
jecxz
xor
xchg
mov
mov
mov
dec
pop
call
sub
add
mov
mov
add
roll
add
pop
push
push
add
add
test
push
adc
ds
inc
add
daa
mov
hlt
add
add
add
pop
aad
stos
popa
insb
jmp
push
mov
sbb
sub
lods
and
or
int3
fdiv
xchg
add
inc
pop
les
add
mov
bound
mov
push
add
daa
sti
jo
jp
add
bound
mov
add
sub
fildl
jne
xchg
add
add
stos
xchg
shrl
xchg
add
les
ret
jecxz
mov
sar
cli
jmp
add
or
mov
cmp
xchg
fldl
push
add
add
mov
inc
add
sub
add
repz
data16
in
add
mov
xor
arpl
mov
add
add
add
test
add
add
xor
add
add
repz
rorl
rcl
add
mov
lret
scas
cmp
cmp
push
add
lret
xchg
sahf
cmp
sub
jnp
jmp
repz
add
xor
add
push
add
out
add
and
jle
lea
mov
dec
xchg
jns
xchg
mov
push
jno
add
sbb
mov
sub
and
add
inc
add
add
mov
mov
push
cmp
mov
add
mov
movsb
add
lcall
add
mov
insb
push
inc
mov
pop
cmp
outsl
fisubl
sahf
and
add
data16
add
addr16
inc
mov
mov
add
sub
push
add
cmp
rorl
mov
lcall
add
test
adc
int3
and
jmp
les
inc
add
sub
jo
mov
and
mov
popf
imul
add
mov
mov
add
lea
rcrl
mov
cwtl
jbe
xchg
and
and
lcall
roll
push
movsb
add
or
inc
scas
pop
pop
add
out
xor
jne
mov
sbb
add
mov
test
jle
aam
jl
pop
fcomps
add
mov
xor
loop
xor
add
ss
add
movsb
add
lea
add
fs
stos
roll
add
mov
pop
jg
sub
add
push
add
mov
add
add
rolb
fwait
fwait
mov
inc
add
add
sbb
mov
add
mov
jo
pushf
jb
addb
add
mov
adc
aam
mov
rolb
mov
add
mov
insl
jp
ret
pop
jl,pt
and
mov
mov
rolb
add
leave
xor
adc
out
aaa
mov
leave
push
pop
lret
leave
add
sub
add
sbb
daa
sub
add
or
add
add
add
into
add
enter
add
sub
add
add
sub
or
mov
sbb
xchg
mov
inc
add
movsl
dec
stos
mov
inc
jbe
and
mov
enter
xchg
sbb
rolb
mov
inc
add
add
clc
push
add
shrl
push
add
and
mov
add
mov
inc
add
jnp
add
mov
add
mov
inc
add
ja
jg
add
stc
jns
jae
add
data16
add
mov
lret
add
movsb
add
outsb
mov
test
lods
add
add
dec
xlat
loope
mov
lahf
jmp
movb
cmp
add
mov
jmp
adc
dec
test
sbb
or
loope
add
add
add
add
push
add
iret
mov
test
add
adc
mov
adc
add
add
add
jns
mov
jns
add
std
shll
cmp
adc
mov
jecxz
push
push
xchg
adc
bound
mov
add
test
enter
pop
addb
add
into
mov
js
cmp
add
adc
xchg
nop
add
std
jns
add
dec
ficoms
pop
std
jle
repnz
jns
cmpsl
mov
and
mov
into
arpl
int3
mov
and
bsr
add
sahf
mov
icebp
jne
loop
in
cmp
xchg
leave
loop
shl
push
dec
aam
out
inc
add
pop
dec
loope
adc
les
imul
rolb
mov
add
decb
sahf
xchg
mov
negl
sub
pop
js
scas
add
add
add
xrelease
add
rolb
clc
add
lock
add
mov
add
adc
test
addb
adc
jo
and
add
mov
out
push
sbb
pop
bound
mov
add
cmpsl
add
or
add
add
movb
nop
add
stos
ret
add
movsb
add
data16
add
andl
add
ret
add
mov
cmpsl
add
outsl
fisttpll
push
fwait
cmp
mov
gs
cmp
call
or
repz
pop
pop
sbbl
add
jnp
cmp
add
imul
loopne
aad
add
add
out
mov
insb
xchg
add
mov
add
fsubrs
push
fsts
xchg
pop
ret
and
mov
add
add
mov
add
mov
out
add
cltd
ds
inc
pushf
out
repnz
fld
xlat
ds
das
xchg
in
jne
add
mov
stc
jge
add
add
sbb
lret
ds
add
add
add
vsqrtps
cld
pop
mov
add
stos
test
rorl
add
add
pusha
add
add
add
leave
and
mov
add
cld
sub
lahf
push
and
insl
mov
pop
sbb
stc
repz
mov
jle
cmp
lock
outsb
xor
aad
jae
jmp
cli
stos
jnp
aas
data16
adc
adc
aas
add
jle
inc
add
das
push
mov
adc
add
dec
and
mov
jno
xor
add
js
aam
push
sub
xchg
ficompl
imul
jo
mov
mov
add
add
fucomip
pop
js
jg
out
cwtl
dec
push
add
pusha
add
gs
cld
mov
add
rolb
fisttpl
xchg
addb
add
add
popf
testb
xor
or
add
mov
mov
add
jl
cmp
ja
or
pop
test
loopne
jmp
mov
or
lea
add
sub
xchg
add
inc
add
add
add
shl
sbb
lcall
mov
das
nop
add
dec
mov
addb
add
fisttpll
in
sub
test
add
add
adc
in
in
daa
arpl
add
pop
xchg
mov
and
mov
xor
add
mov
nop
add
dec
inc
add
add
add
mov
je
mov
pop
movsb
add
add
mov
loope
add
testb
ja
and
add
mov
in
cmp
add
cltd
adc
add
call
jbe
aam
gs
aaa
rolb
mov
ret
js
adc
dec
repnz
sahf
adc
iret
push
popf
push
mov
add
sbb
xchg
test
inc
pusha
add
add
iret
add
jo
lcall
pop
cmp
xor
and
push
mov
xor
add
add
aam
mov
jge
xchg
dec
adc
dec
or
dec
inc
cmpsb
add
cltd
aad
loopne
xchg
add
push
add
xchg
add
mov
sti
stos
enter
add
cmp
push
pop
mov
pop
dec
les
mov
fidivl
and
mov
push
stos
jbe
dec
push
add
int
add
cwtl
fidivl
dec
dec
out
jbe
ret
add
shrl
add
and
add
jle
add
cmp
add
add
mov
out
gs
cmc
sbb
xchg
dec
cmp
add
mov
and
mov
add
add
lea
add
sahf
fimuls
pop
pop
jl
mov
jno
pop
fildll
fisubrl
in
sarl
xchg
and
mov
push
sahf
arpl
lcall
cmp
add
jl
daa
sarl
roll
mov
jp
inc
sbb
add
xchg
add
add
and
dec
dec
shl
add
sub
imul
test
addb
add
add
adc
add
add
add
cli
nop
add
jae
add
adc
adc
pop
lods
stc
fnsave
test
add
or
clc
rcrl
dec
mov
push
add
sbb
adc
and
mov
add
add
mov
push
add
add
xor
inc
sbb
mov
or
imul
add
ja
dec
mov
cwtl
pop
sarl
fistpl
add
add
add
mov
and
aad
ds
pop
movb
or
test
movsl
inc
add
ret
fistps
and
push
in
arpl
cld
test
pop
mov
inc
fisubrl
iret
mov
mov
add
daa
mov
bound
mov
ret
addb
mov
imul
out
mov
pop
cmpsb
add
addl
mov
pop
nop
add
adc
std
in
cmp
inc
mov
movsb
add
add
rolb
call
cmp
add
or
add
cli
xchg
popa
stos
jl
push
adc
cltd
and
mov
dec
jno
jp
xchg
add
inc
fldenv
ja
jbe
test
and
pop
cmpsl
and
sbb
sbb
pop
jge
sahf
lahf
and
cltd
js
add
insb
and
mov
push
rolb
test
inc
dec
add
inc
push
add
mov
out
mov
shll
mov
add
sbb
pushf
movb
rolb
rcr
mov
rcl
add
fwait
adc
mov
in
leave
pop
cltd
jo
xor
adc
add
add
add
stos
fdiv
add
jecxz
ljmp
push
aad
imul
adc
sub
in
imul
add
ja
mov
rolb
push
xchg
xlat
mov
add
add
jecxz
push
add
add
dec
insl
dec
insb
xor
sbb
into
sub
jae
sti
add
or
mov
test
add
xor
inc
ja
add
add
mov
add
jl
add
pop
dec
decb
fcoml
into
adc
pop
inc
add
das
mov
rcrl
push
add
jbe
mov
nop
add
jmp
out
xchg
in
adc
lods
insl
jge
arpl
test
adc
add
pop
sub
fistpl
jp
loopne
inc
mov
sub
fnstcw
push
add
add
add
add
jb
sub
aad
test
cltd
repnz
fstl
gs
mov
add
dec
add
add
inc
add
add
push
add
add
cmpsl
fildl
add
mov
call
add
cmp
loop
fldenv
add
mov
pop
adc
or
push
inc
add
stos
pusha
add
scas
mov
out
add
clc
sub
add
rcll
add
xlat
les
lea
ds
add
or
add
in
sbb
push
test
push
add
dec
lahf
bound
mov
ret
add
push
ljmp
push
add
add
pop
in
dec
jecxz
sub
out
lcall
mov
add
lret
mov
add
push
add
in
xor
out
sbb
rolb
fisttpl
inc
sub
push
add
or
mov
pop
imul
shll
lock
add
insl
cltd
addr16
add
xorl
test
add
out
jnp
fisttps
sub
dec
stc
pop
sahf
fisttpl
test
mov
outsl
inc
add
or
add
push
add
test
xchg
add
and
outsb
pop
mov
cmp
insl
xchg
jae
movsb
add
cld
outsb
int
add
add
add
inc
mov
inc
add
stos
xor
mov
enter
insl
outsb
testb
add
add
cmpsb
add
sti
pop
test
cmp
dec
and
in
jne
fbld
add
add
mov
lock
sbb
std
sub
inc
add
popf
xor
std
xor
mov
add
mov
inc
add
push
add
in
inc
add
add
cmp
pop
leave
lods
test
in
fwait
movb
or
add
add
sbb
jbe,pn
add
jb
mov
rolb
mov
jne
aam
hlt
add
lods
stos
lods
rolb
pop
dec
pop
lds
addl
inc
add
test
out
dec
lret
imul
add
xor
or
add
mov
jbe
sahf
mov
add
push
les
insb
nop
add
add
xchg
add
inc
mov
pop
std
cmp
out
outsb
mov
mov
xor
jl
cwtl
mov
inc
add
add
mov
or
push
add
fcomps
mov
add
test
add
jecxz
push
add
add
pop
and
inc
add
shll
dec
cltd
test
add
add
add
add
jae
lret
das
xchg
xchg
sbb
add
jmp
add
or
xlat
addb
add
add
add
mov
jae
add
xor
xchg
xchg
mov
fdiv
add
mov
cltd
xchg
cltd
mov
lret
and
add
sbb
or
out
inc
das
mov
pusha
add
add
js
adc
push
inc
add
dec
sbb
stc
mov
and
mov
sub
stc
lods
xchg
add
cltd
mov
pop
adc
jbe
mov
stc
cltd
jb
inc
test
mov
inc
add
fnstsw
inc
add
mov
add
sbb
fwait
cmc
push
ss
fistps
inc
push
inc
add
pusha
add
push
add
ja
lret
mov
mov
sbb
incl
xor
add
jmp
adc
sub
rolb
testl
add
repz
add
xchg
add
xor
add
das
inc
add
insl
scas
xor
test
mov
add
push
add
add
mov
das
xor
add
xor
in
in
jmp
adc
imul
jl
add
add
mov
fbstp
add
dec
stc
scas
dec
mov
mov
add
add
pop
push
mov
insl
das
shrl
out
mov
add
adc
mov
in
or
add
mov
aaa
das
bound
mov
jns
loopne
movb
pop
adc
std
cmp
jp
sbb
aad
mov
cli
jecxz
jb
or
ljmp
mov
ret
aaa
push
add
add
mov
or
add
add
mov
ror
lcall
xor
movsb
add
or
or
imul
dec
mov
test
and
add
shll
add
add
inc
sbb
filds
mov
jmp
add
mov
cmp
add
pusha
add
add
in
xchg
add
pop
into
scas
call
scas
fcoms
lret
std
xor
xor
push
add
add
add
add
dec
fiadds
fwait
out
cld
jne
add
xchg
add
pop
mov
add
add
inc
xchg
push
pop
cmp
add
cmpl
cli
lock
std
ljmp
push
add
add
mov
jle
mov
aas
mov
add
add
jno
dec
cld
jl
adc
stos
cmpsl
xor
add
mov
mov
test
add
or
out
cwtl
daa
jl
jne
mov
popl
add
mov
mov
mov
mov
add
xchg
add
dec
fsubr
inc
mov
fimuls
and
xchg
ret
add
repz
icebp
in
add
mov
icebp
rcll
add
add
add
add
cli
je
ja
popa
bound
mov
add
jo
jg
test
repnz
mov
mov
add
mov
rolb
push
and
stc
cli
pop
ja
dec
sbbl
aas
push
mov
mov
xchg
add
rcrl
sbb
addr16
ds
rolb
jge
inc
add
add
rolb
jg
add
pop
rolb
leave
pop
xchg
xchg
add
outsb
in
fwait
leave
out
inc
add
imul
fildl
dec
popa
test
add
add
leave
test
pop
sub
add
add
in
xchg
rolb
ds
data16
iret
fsts
aas
aas
das
arpl
jb
stos
sub
movsb
add
push
sbb
fcompl
mov
mov
pop
sbb
jmp
hlt
add
add
adc
lds
add
lock
inc
add
lock
xor
shl
add
in
mov
mov
outsl
in
popf
lret
dec
or
out
xor
ret
sbb
rolb
sub
add
pop
gs
add
xor
test
je
mov
mov
js
dec
test
cmc
mov
dec
aaa
xchg
fsubrl
mov
add
add
fildll
add
aas
movb
lds
adc
dec
js
sub
or
pop
test
add
add
add
mov
pop
dec
inc
add
adc
clc
ret
pop
aas
xor
jbe
outsb
sbb
out
sbb
test
popf
insb
das
mov
mov
mov
testb
hlt
add
add
arpl
icebp
push
jmp
add
and
mov
cmp
leave
les
inc
add
js
add
ljmp
add
mov
xchg
fwait
push
add
add
add
add
icebp
daa
or
push
cmpsl
rolb
pop
cld
addr16
scas
test
ljmp
mov
add
pusha
add
add
out
xor
push
add
xchg
mov
mov
rolb
sub
stc
jecxz
cltd
mov
add
xchg
xchg
add
pop
out
hlt
add
jmp
les
lahf
fcom
add
push
add
mov
ret
mov
add
inc
sahf
in
mov
mov
add
inc
add
lds
clc
sbb
dec
xchg
add
fdivrp
enter
mov
fsubrl
add
sbb
dec
pop
mov
testl
lret
mov
mov
push
add
sub
cmc
inc
add
pop
and
das
and
mov
scas
cmp
pop
mov
xor
mov
adc
mov
add
xchg
pop
adc
xor
icebp
push
add
and
loope
add
pop
out
mov
icebp
lcall
inc
and
icebp
mov
scas
cmc
out
jecxz
add
inc
sub
sti
mov
pop
jg
fs
clc
leave
inc
add
mov
add
sub
xor
xchg
jg
insl
in
push
add
add
add
add
and
adc
dec
push
add
add
add
add
ja
add
add
jnp
add
mov
add
fnsave
push
or
in
inc
add
rolb
jl
jle
add
dec
stos
mov
pop
add
addb
out
cmpsb
add
pop
popa
add
mov
fisttpl
pusha
add
add
xor
or
mov
ret
add
mov
pop
out
add
jae
or
add
or
push
add
adc
add
add
or
push
cwtl
sub
repz
mov
jno
add
ja
adc
mov
pop
sahf
adc
data16
inc
add
jg
test
sbb
rolb
add
comiss
jecxz
push
add
sub
add
add
push
mov
add
imul
add
roll
mov
add
sub
xchg
add
pop
add
add
push
xor
pop
popa
sbb
mov
adc
add
leave
ja
mov
nop
add
mov
pop
aam
xchg
addb
xchg
jmp
mov
add
sub
stc
or
add
mov
mov
mov
mov
and
adc
or
repnz
sahf
mov
push
and
mov
add
push
add
add
add
mov
inc
add
in
mov
add
dec
jmp
ret
xchg
add
xlat
add
pusha
add
mov
int3
xchg
add
dec
push
dec
subl
add
scas
ret
mov
add
mov
dec
sub
add
mov
xchg
xor
add
or
loop
test
mov
add
mov
add
mov
sti
out
popa
or
xor
add
mov
mov
add
out
gs
mov
jg
cmp
aas
cmpl
aad
xor
push
cmc
adc
mov
sbb
jae
push
icebp
jg
and
cmp
dec
fdecstp
add
mov
mov
mov
stc
pop
mov
loopne
mov
mov
mov
or
sbb
add
imul
rolb
fucom
cmpsb
add
mov
sbb
insl
xor
xchg
add
add
adc
inc
add
scas
int
aad
push
add
mov
jmp
mov
and
int3
leave
in
xchg
and
fistps
and
in
xchg
mov
push
jne
push
in
movsl
jo
pop
ja
test
movsb
add
es
mov
lret
mov
pop
ret
lcall
adc
and
outsb
cmp
lods
mov
lret
xchg
lahf
cmpsb
add
dec
fucomip
lret
mov
add
aaa
dec
lcall
movsl
and
and
pop
addb
add
bound
mov
add
out
aad
push
add
inc
add
add
sbb
add
add
mov
mov
mov
sahf
dec
xor
mov
jbe
cmp
add
cli
lret
cltd
xor
sub
mov
dec
pusha
add
fucomip
test
mov
push
xchg
dec
call
je
xcrypt-cbc
cmpsl
push
add
stc
out
add
test
add
call
mov
adc
rolb
enter
fmulp
test
add
pop
pop
add
add
mov
add
inc
add
add
mov
add
add
sbb
adc
xlat
sub
test
adc
ds
cli
mov
cmp
popf
jl
sub
add
test
cmpsl
adc
mov
mov
push
push
inc
out
pop
aas
hlt
add
add
add
add
mov
ret
sub
insb
add
mov
inc
add
push
rolb
outsl
xor
leave
filds
add
mov
lods
add
add
add
mov
ret
lea
and
mov
sbb
pop
mov
add
mov
hlt
add
pop
mov
inc
mov
xor
add
mov
mov
rolb
mov
popf
stos
cmp
aas
fimuls
lods
push
cmp
mov
mov
mov
mov
ljmp
sbb
mov
repnz
add
or
in
sbb
call
add
inc
cmp
addb
scas
adc
add
pop
sbb
xchg
imul
push
add
add
cmpsb
add
stos
test
mov
mov
jnp
pop
cmc
loope
adc
loope
pop
cmp
lods
ss
add
les
mov
fcmovnb
test
shl
add
popa
divl
add
fcmovne
lahf
cmc
cwtl
pop
add
mov
ss
push
add
movsb
add
add
xor
sbb
flds
add
bound
mov
data16
rcrl
cmp
insl
mov
stos
xchg
add
add
jmp
add
xor
dec
test
sbb
add
add
add
ficoml
mov
add
inc
in
sub
jl
add
xchg
ljmp
lret
add
negl
js
mov
movsb
add
add
add
jb
insb
push
add
stos
cmpsl
mov
test
add
inc
add
add
add
jno
mov
scas
sti
jle
test
xchg
add
out
cs
add
mov
add
cmp
in
pop
pop
aad
add
or
add
add
cmc
mov
cmpsb
add
cmp
cmc
test
sbb
add
add
ficoms
aad
sbb
movb
addr16
mov
aaa
mov
int3
cmp
add
jne
dec
repnz
arpl
into
adc
xchg
inc
add
outsb
xor
xlat
sub
and
mov
popa
mov
xchg
add
jnp
mov
jo
ja
add
xchg
sbb
lea
bound
mov
je
test
add
and
mov
add
add
cmp
sbb
add
mov
popa
jle
adc
pop
icebp
mov
addl
mov
popf
daa
popl
add
arpl
sahf
std
mov
add
add
mov
push
add
xchg
jns
add
add
or
lcall
aaa
lcall
push
lods
pop
fimull
scas
mov
add
pop
lods
cmc
adc
and
fbld
mov
jne
add
pop
xchg
jbe
aam
je
dec
clc
fnsave
or
xchg
add
sbb
loopne
fstp
add
add
add
sbb
add
stos
adc
test
or
add
ds
loop
mov
adc
add
add
paddb
jbe
pop
adc
cli
nop
add
add
jo
xlat
lahf
push
stos
sub
nop
add
add
call
movb
jp
leave
pop
adc
push
add
inc
push
in
insl
aas
clc
adc
mov
add
int
add
cmc
mov
out
add
mov
inc
mov
jnp
add
inc
add
jns
jae
flds
mov
push
add
lods
sub
add
add
mov
add
sti
movb
pusha
add
test
call
sub
pop
dec
cwtl
mov
xchg
add
sbb
xchg
int3
push
add
xor
xor
cwtl
adc
and
scas
aaa
popf
add
pop
aas
sub
add
jne
jae
push
and
mov
adc
xor
and
push
add
add
add
add
add
mov
out
push
mov
add
test
mov
add
inc
add
hlt
add
out
sbb
lret
xchg
cmp
mov
add
add
add
add
add
stos
ret
xchg
or
xor
add
mov
mov
add
add
dec
sbb
add
add
icebp
sub
adc
ret
loop
mov
add
ret
testb
jp,pt
data16
sub
rcll
adc
add
add
fldenv
xchg
aam
js
add
add
mov
mov
mov
mov
mov
add
add
rorl
aaa
lea
add
mov
mov
fmul
addr16
xchg
pop
xor
jge
inc
add
in
sti
cmp
add
add
jp
add
inc
sbb
loopne
fs
and
call
repz
in
das
inc
or
cmc
in
rolb
addb
sbb
sbb
imull
sbb
int
jecxz
add
push
add
add
sub
sbb
add
test
ret
in
in
outsl
outsb
imul
aaa
enter
inc
add
mov
ret
jbe
jecxz
add
sbb
push
add
cmc
jnp
cmp
mov
or
add
fwait
push
add
add
pop
mov
add
xchg
in
clc
out
popf
jmp
xchg
add
mov
pop
or
add
sub
push
add
cld
dec
std
loope
add
mov
addb
add
xchg
and
jg
add
nop
add
add
loop
in
sub
cltd
cmova
add
xchg
push
mov
and
fwait
inc
xchg
or
jbe
xlat
sub
mov
test
addb
adc
insl
push
insb
test
scas
shll
add
and
sub
or
and
mov
sbb
push
pop
sub
add
cwtl
paddusb
add
jge
adc
int
mov
cli
das
js
add
pushf
psubusb
rcll
jle
dec
pop
pop
jp
and
xor
sub
push
sbb
daa
mov
push
add
add
nop
add
mov
cmp
inc
add
add
or
sub
add
mov
add
mov
sti
pop
dec
push
lret
or
add
add
jl
add
test
xchg
add
adc
inc
add
and
add
add
add
add
add
mov
mov
dec
push
add
inc
add
adc
push
cmp
dec
lcall
movsb
add
add
mov
add
ret
mov
mov
or
add
add
pop
mov
in
adc
sti
sbb
add
add
loopne
pop
mov
insb
and
add
pop
push
cwtl
lock
push
add
lods
jo
aaa
in
outsb
pop
or
rolb
aas
sti
mov
jge
mov
jp
add
pop
imul
stos
mov
xchg
in
popf
pop
ja
xorl
sbb
xchg
inc
popa
jo
mov
and
mov
icebp
jg
sbb
call
push
aad
cmp
push
add
pop
mov
mov
aam
mov
cs
fmuls
outsl
iret
jb
js
add
add
mov
add
add
dec
push
add
jle
sbb
mov
lret
xchg
lods
mov
push
add
and
mov
push
jg
mov
in
stc
test
jp
les
xor
add
push
add
add
xor
ret
jns
cmp
jmp
add
mov
xchg
add
add
setno
add
jne
add
aam
cmp
add
add
add
mov
sti
cmp
add
add
pop
data16
mov
mov
ret
enter
xorl
in
add
int
std
adc
xchg
add
jmp
adc
out
lock
add
push
lcall
inc
cltd
mov
sub
add
xor
les
int3
outsb
push
add
dec
addb
add
jl
adc
fwait
add
ret
sti
xchg
add
or
add
add
mov
pop
pop
cmpsb
add
cmp
lret
cmpl
add
bound
mov
cmp
add
add
inc
arpl
rolb
in
in
movb
into
cmc
adc
xor
mov
push
jae
cltd
add
mov
or
jg
fistpl
movb
repnz
jmp
adc
rolb
add
add
mov
pop
push
dec
mov
aaa
pop
xor
les
jle
xchg
das
push
add
mov
xor
test
mov
lret
xchg
xchg
add
loope
add
lret
xchg
in
jns
dec
fwait
and
mov
add
addb
inc
push
add
lret
shrl
and
mov
add
sbb
xchg
add
mov
add
xchg
add
test
leave
dec
cmp
pop
mov
mov
jg
push
add
and
mov
into
jb
aas
xor
mov
pushf
jmp
test
push
add
add
lcall
inc
sti
dec
loopne
dec
imul
add
jo
enter
fsubrs
push
fsubrl
ret
pop
iret
jnp
pop
jb
push
add
ds
lret
aaa
add
lahf
out
fmull
mov
cmp
inc
add
leave
imul
sbb
add
lds
dec
addr16
adc
pop
dec
ljmp
jle
xor
mov
add
pop
testb
xchg
sub
add
add
ficoml
mov
xchg
add
outsl
xchg
xchg
add
add
repnz
or
std
jns
add
loope
xchg
sti
cmp
test
mov
add
xchg
lahf
jge
daa
mov
sbbl
pop
test
add
popf
add
mov
add
sbb
int3
hlt
add
sub
not
and
mov
add
add
lods
lret
cs
add
sbb
cli
sub
mov
inc
add
jne
add
imul
in
and
mov
xor
lods
xor
daa
rolb
daa
add
movb
add
mov
mov
add
or
stos
jne
add
add
into
pop
fwait
in
mov
push
jne
xor
pop
dec
incl
add
pop
imul
jns
les
addl
mov
add
add
add
mov
das
lcall
dec
aas
push
add
cmp
add
add
aad
adc
aam
add
pop
add
add
hlt
add
mov
sbb
inc
enter
movsb
add
sbb
cmp
sub
addb
add
add
jmp
inc
sub
jg
repnz
clc
iret
push
add
add
push
out
xchg
cld
mov
pushf
sbb
add
sbb
add
add
lret
xchg
and
ffreep
xlat
pop
xchg
add
addb
inc
add
loop
lahf
rolb
push
or
push
jb
test
push
mov
add
vmread
push
add
jns
xchg
cld
inc
add
xchg
movb
push
xor
pop
cs
fisubrl
lods
ljmp
adc
xchg
mov
sbb
push
add
add
add
aaa
popf
and
lret
add
xor
roll
scas
pop
mov
loope
jmp
aas
cltd
jg
add
aad
add
mov
add
add
aam
pop
cmpsb
add
add
jecxz
daa
in
sub
test
mov
rolb
add
add
add
adc
push
fprem
mov
scas
mov
add
add
cli
dec
ss
stos
rcll
adc
cmp
mov
inc
sub
xchg
mov
add
add
or
test
mov
rolb
xchg
add
lods
dec
testb
loope
add
add
add
adc
add
hlt
add
add
test
loop
into
in
ljmp
xor
sub
pop
repnz
mov
ret
or
add
mov
bound
mov
cmp
pop
lahf
lods
inc
in
pop
push
adc
jp
jb
add
jae
or
add
add
push
std
adc
add
aad
lcall
cmpsb
add
add
sbb
into
in
ds
out
xchg
add
mov
addb
inc
mov
add
mov
add
call
repz
push
movsl
or
ds
cmp
cmp
add
out
add
mov
aad
pop
scas
loop
xor
js
stos
pop
mov
in
arpl
xchg
add
cltd
pop
hlt
add
das
push
add
shll
and
addb
inc
add
add
lods
add
push
pop
and
sub
add
and
mov
jbe
dec
add
add
mov
mov
or
push
or
xor
jecxz
mov
fwait
xchg
inc
ret
push
add
rolb
mov
sahf
in
xchg
add
add
outsb
dec
popf
test
lods
and
sti
mov
int3
adc
inc
add
dec
and
testl
jl
add
int
add
jno
rolb
push
add
adcl
mov
mov
add
movb
add
mov
int3
cmpsb
add
xor
add
clc
rol
sub
push
add
add
inc
add
popf
sub
loop
inc
add
cmpsl
addb
jle
add
add
cld
dec
jmp
lea
push
add
xchg
mov
add
pop
sub
add
rolb
fcomps
cmpsb
add
outsl
lret
loope
mov
inc
repnz
inc
or
pop
insb
out
xchg
sub
add
cmpsl
rcll
add
scas
push
add
pop
orl
add
outsb
addb
jecxz
and
mov
mov
shrl
dec
or
sbb
add
sbb
add
add
mov
jb
addb
iret
xchg
add
sbb
mov
jp
add
xlat
rolb
add
les
push
add
or
cwtl
mov
add
es
mov
leave
test
xchg
adc
rolb
add
xor
pop
mov
mov
add
add
movsl
pop
mov
sbb
add
add
push
mov
mov
sub
jne
ret
add
add
add
jecxz
jge
aaa
scas
aad
pop
js
add
add
xchg
outsb
xor
sbb
mov
cmpsb
add
add
pop
and
mov
mov
inc
movb
icebp
sahf
outsl
inc
add
add
or
add
add
mov
xor
fistl
adc
mov
fwait
das
cli
cmc
pop
outsl
jae
out
adc
add
add
pop
or
imul
mov
or
ret
inc
jne
mov
aas
mov
nop
add
repz
xor
test
add
je
xchg
lock
ss
cmp
imul
xor
out
test
rolb
xchg
add
add
jge
pop
out
dec
and
sets
cmpsl
test
dec
xchg
into
cwtl
push
cmp
iret
adc
ss
add
ficoms
add
adc
ret
idivl
aad
aas
xchg
mov
mov
dec
and
mov
add
std
adc
add
add
add
add
add
add
jp
gs
popf
sbb
xlat
sub
jg
add
pop
in
les
push
das
push
add
add
push
add
fisubl
montmul
cmpsb
add
rolb
inc
bound
mov
add
mov
push
loope
imul
loopne
stos
mov
mov
jne
iret
dec
bound
mov
inc
add
enter
add
add
jle
add
add
cmpsb
add
jge
outsl
xchg
sub
push
add
cmp
add
mov
jne
mov
add
out
inc
add
mov
jne
sub
add
ret
aad
sub
loopne
push
test
mov
add
adc
mov
sahf
push
inc
add
mov
lahf
lret
sbb
add
cli
sbb
mov
adc
sbb
mov
add
add
js
mov
add
add
inc
sub
mov
rolb
imul
scas
add
ffree
push
add
add
xchg
sub
mov
add
add
add
movsl
adc
pop
mov
sbb
movb
push
add
adcl
mov
pop
pop
mov
lret
add
cmp
add
add
repz
add
jl
push
mov
sbb
add
add
add
nop
add
add
xchg
lods
std
lret
add
call
stc
cmp
addr16
add
aam
aad
pop
mov
or
add
add
xchg
pcmpgtw
sbb
mov
jmp
add
rolb
jg
push
xor
cmp
add
iret
rcll
add
or
adc
add
addb
into
pop
mov
mov
xchg
jbe
imul
add
rcl
enter
leave
mov
loopne
lods
cld
ret
negl
or
js,pn
lods
enter
arpl
stc
jnp
aam
lods
dec
stc
ds
adc
mov
test
mov
mov
add
sbb
inc
sub
cmp
push
pop
dec
std
sub
mov
push
add
scas
fs
add
fst
add
fdiv
ljmp
shll
repz
add
ret
fidivs
add
pop
fildll
inc
mov
les
sbb
add
iret
fnstsw
inc
add
add
shll
add
add
jno
imul
push
add
add
gs
aaa
mov
scas
fldcw
sahf
shrl
xor
lea
cmpsb
add
cmp
add
pop
and
mov
or
stos
std
lea
mov
out
cltd
jo
cmp
add
and
js
jge
mov
add
add
aad
add
add
add
mov
jmp
push
add
add
pop
subl
cmp
aad
pop
jg
jno
mov
xchg
add
inc
add
repnz
add
jbe
int
rolb
aad
setae
and
ljmp
jo
outsb
rolb
out
test
add
sbb
test
sub
xchg
sti
sub
mov
add
add
mov
stc
and
mov
mov
jae
and
add
sub
lods
cmp
cmp
hlt
add
lret
and
and
push
or
mov
pop
shll
outsb
jae
add
or
add
add
add
addb
add
push
add
adc
jb
and
or
icebp
and
mov
sti
add
mov
add
add
push
add
sbb
push
lret
les
mul
pop
call
xlat
or
ret
imul
add
js
out
ret
je
jmp
ljmp
add
mov
add
add
ret
out
jp
adc
pop
xchg
cmpl
xchg
rcl
repz
add
movb
fbstp
sbb
mov
cmpsb
add
jmp
sbb
ret
add
stos
dec
mov
add
loope
and
loopne
pushf
fwait
out
nop
add
insl
add
jmp
sub
ds
add
and
add
add
outsb
push
pop
sub
add
xchg
and
icebp
push
jp
lock
in
and
cmp
fwait
xor
push
jp
jae
loope
jle
add
rorl
pop
push
or
iret
stc
repnz
dec
adc
ret
push
rolb
mov
call
ret
fisubl
int3
lret
jb
xor
add
int
add
cli
mov
mov
sbb
adc
sub
add
dec
or
mov
stc
mov
jge
xor
stc
jbe
inc
sbb
add
mov
daa
xor
xchg
pop
nop
add
sahf
dec
mov
data16
call
repz
rolb
test
add
add
sub
ror
add
push
add
jnp
add
add
xor
pop
mov
add
ds
cld
jne
add
cmpsb
add
add
add
adc
dec
sti
jb
xchg
rcrl
bound
mov
repz
add
popl
mov
mov
add
fwait
sbb
push
cmp
add
mov
out
fldt
dec
icebp
out
lds
jl
lods
gs
jg
add
cld
dec
jbe
lret
cltd
fstl
add
insb
sahf
push
add
addr16
pop
test
inc
add
pop
bound
mov
add
ja
out
add
mov
push
add
jns
add
add
mov
add
les
dec
sbb
dec
inc
add
stos
repz
stc
push
lret
out
cld
jo
push
or
in
js
push
add
add
add
mov
add
add
pop
lock
in
jle
add
dec
add
cmp
jecxz
xchg
pop
cmc
cmc
xchg
add
repz
add
push
dec
icebp
xor
add
imul
hlt
add
in
jle
add
mov
add
add
add
pop
js
xchg
sub
push
and
int3
in
mov
arpl
stos
jns
add
mov
add
inc
add
cmp
jp
int
add
mov
mov
xchg
addb
mov
call
add
add
push
add
mov
arpl
dec
mov
add
mov
les
out
push
xchg
add
add
dec
dec
cmp
add
repz
mov
sbb
sbb
nop
add
add
add
mov
or
mov
arpl
rolb
mov
pop
enter
push
testb
cltd
mov
add
js
leave
shrl
or
jg
jbe
imul
xchg
add
add
add
or
mov
es
aas
mov
fadds
mov
cs
addr16
inc
add
add
in
push
add
out
mov
icebp
cmp
cmc
out
or
mov
dec
insb
dec
int3
dec
sti
mov
fcoml
inc
add
mov
jns
scas
jns
add
add
add
cmp
inc
dec
cmpxchg
add
mov
mov
imul
add
jno
cltd
sbb
imul
add
mov
sbb
add
add
add
jecxz
mov
push
movsl
sub
or
cltd
adc
xchg
add
pop
sbb
mov
sbb
mov
mov
add
jnp
hlt
add
ficompl
ljmp
lret
int3
and
mov
imul
stos
cmp
in
aas
mov
iret
xchg
out
out
inc
sbb
aaa
mov
jo
pop
in
add
pop
add
push
dec
push
add
mov
sbb
pop
mov
add
je
js
add
add
xchg
add
push
ljmp
in
sub
fdivl
push
add
sub
repnz
add
add
rcrl
adc
mov
jnp
pusha
add
test
mov
add
jb
mov
dec
mov
add
daa
mov
add
fistps
push
out
std
push
add
jmp
data16
rolb
popa
dec
add
sti
push
mov
add
stc
mov
push
add
push
add
pop
scas
insb
cmpsb
add
movups
add
push
add
pop
push
add
movb
add
repz
add
add
add
add
mov
or
ljmp
add
adc
xlat
movb
add
outsl
fdivrs
pop
xor
in
cmp
stos
mov
add
add
xchg
push
add
jp
add
push
add
mov
aam
mov
sti
inc
stc
xchg
jecxz
add
loope
add
xlat
out
pop
xchg
bound
mov
mov
lock
fsubrs
pop
fidivl
jp
jns
add
and
add
add
add
arpl
add
add
xlat
scas
ja
sub
lcall
mov
push
setl
add
add
loope
xor
xor
lret
add
xchg
add
imul
sub
dec
add
in
je
jae
jne
add
test
xchg
leave
cmp
mov
add
addb
pusha
add
xor
add
add
outsl
xchg
or
add
repnz
push
sub
add
add
add
mov
addb
xor
add
jmp
int
aam
aad
mov
popa
icebp
adc
iret
mov
add
outsl
jnp
mov
xor
adc
xor
jecxz
or
add
lds
push
add
sti
mov
jg
movb
cmp
add
add
mov
lods
fwait
aaa
imul
add
mov
loop
pop
pop
lcall
psubw
add
fxam
jmp
call
xchg
add
add
push
pop
add
or
add
add
add
out
sbb
addb
push
add
add
imul
add
mov
mov
jl
add
mov
mov
dec
movaps
pop
dec
enter
testb
jno
jnp
repnz
call
in
adc
rcr
mov
mov
sbb
adc
xchg
test
sub
in
enter
inc
xlat
pop
adc
sbb
ret
rolb
jb
pop
out
fsubl
add
out
mov
mov
arpl
push
iret
add
add
mov
add
add
sub
inc
fimull
add
add
cmp
sub
sahf
mov
pusha
add
mov
pop
push
pop
test
sub
or
dec
mov
push
sub
push
int
bound
mov
add
fwait
dec
cmp
mov
mov
cmpsl
fucom
leave
mov
add
in
push
cmp
inc
add
xlat
imul
cltd
inc
add
fwait
add
mov
mov
dec
cli
js
add
mov
pop
nop
add
add
test
lods
bswap
ja
inc
in
out
lret
loop
outsb
mov
add
lret
add
in
sub
mov
xchg
inc
loope
add
add
mov
in
rcll
movb
add
sahf
fdiv
rolb
pop
inc
sub
add
adc
clc
sub
add
rolb
nop
add
xchg
push
add
xor
out
add
mov
sub
fimull
add
cmpsb
add
sbb
and
aaa
jbe
xor
cmpsb
add
mov
or
add
mov
add
dec
jns
add
xchg
mov
dec
lcall
and
mov
les
inc
add
lods
cmc
cmc
sub
add
add
add
add
gs
into
inc
add
xchg
mov
dec
pop
sbb
shll
ds
mov
add
mov
add
push
popa
cmpsb
add
dec
xchg
movb
sbb
movsl
xor
add
inc
add
xchg
lods
inc
add
jmp
lea
pop
cmp
and
mov
jnp
add
or
lcall
aam
pushf
inc
add
stos
push
mov
pusha
add
lcall
jmp
mov
add
add
jmp
clc
scas
push
test
hlt
add
push
add
add
add
jle
jne
add
in
add
clc
imul
cmp
cmpsl
add
mov
mov
lods
stos
adc
rolb
test
sbb
sub
pushl
fwait
jecxz
cmp
add
add
add
mov
loopne
push
and
stc
add
mov
add
movb
cmp
es
ret
xchg
add
cld
push
rolb
add
add
add
nop
add
add
add
add
add
popf
pop
and
rolb
mov
add
add
insb
fstps
ret
fsubs
push
add
or
mov
movb
out
scas
pop
rolb
mov
push
add
adc
jns
jmp
rolb
xor
add
add
add
add
add
mov
add
movb
mov
push
add
add
mov
add
inc
jo
mov
scas
or
mov
add
mov
add
cmp
iret
mov
fisubs
sti
mov
or
les
mov
jmp
pusha
add
add
nop
add
scas
sub
pop
aas
and
mov
cmc
pop
in
add
repnz
sbb
add
add
mov
add
add
mov
add
dec
std
xchg
clc
mov
inc
add
jae
add
push
dec
jmp
add
cmp
jne
sub
add
fimull
cs
aaa
clc
xor
div
jbe
xchg
add
add
fcoms
add
fstps
data16
dec
jo
fldt
enter
fprem
xchg
popa
jnp
add
xchg
xor
add
into
mov
jle
imul
or
add
mov
addb
dec
cmp
into
stos
bound
mov
cld
lds
mov
mov
xchg
stos
mov
in
add
inc
add
clc
shrl
add
outsb
xor
xchg
mov
hlt
add
add
test
dec
push
enter
add
adc
and
loop
ficomps
test
inc
or
add
and
sbb
or
aam
dec
mov
dec
pop
call
data16
mov
push
lea
mov
ja
inc
inc
sbb
or
inc
cmp
jl
add
add
dec
out
mov
lcall
dec
push
dec
sub
add
inc
jmp
sub
add
and
add
rolb
mov
pushf
sub
sbb
add
or
sbb
mov
cmp
mov
popa
aam
sbb
add
add
xor
das
jl
jp
les
inc
sti
and
mov
lock
mov
add
cmc
cmp
add
popa
test
add
mov
mov
add
jl
mov
add
add
out
lods
inc
iret
mov
add
add
mov
ret
or
add
inc
add
mov
add
add
push
mov
in
sbbl
lahf
pusha
add
inc
out
xchg
into
push
add
push
xchg
jecxz
inc
gs
add
xchg
mov
add
jge
xchg
or
jno
sub
jo
aas
bound
mov
xchg
add
xchg
add
sub
pop
insl
adc
adc
add
mov
add
lock
jmp
add
or
repnz
int
enter
cmp
mov
xor
xchg
add
stos
jmp
adc
stos
ja
ds
mov
dec
lods
outsb
and
cmpsl
dec
into
leave
and
mov
daa
rolb
out
pop
pop
popa
loop
cli
fwait
add
enter
adc
mov
add
mov
xchg
add
fcoms
lcall
jp
add
mov
jbe
adc
lea
dec
xchg
push
add
lret
enter
jb
mov
add
add
add
stc
scas
call
add
mov
mov
jae
add
mov
add
testl
repz
push
pop
mov
mov
jns
sbb
and
mov
push
sub
add
add
rolb
jle
int
adc
fwait
int
xorl
je
inc
add
push
rcrl
insb
js
add
xchg
add
aad
popf
in
lret
aam
mov
or
aaa
sbb
push
add
add
aad
mov
mov
lret
cmp
jae
push
adc
popf
push
add
sahf
xor
push
sti
mov
add
mov
inc
repnz
test
push
inc
add
fnstsw
scas
movsl
push
inc
add
mov
data16
cmp
in
add
add
add
add
dec
dec
mov
adc
cmp
xor
pop
push
fsubp
sub
lods
and
ljmp
add
cmp
aam
fbstp
mov
cmc
mov
xlat
jb
aad
pushf
pop
aas
aaa
cmp
add
mov
popa
xor
rolb
jns
pop
ds
mov
sub
jb
loopne
jmp
in
dec
inc
add
sub
push
add
jne
push
add
add
mov
push
add
and
mov
mov
add
lea
fisubl
mov
mov
faddl
in
lret
stos
movsl
rolb
cld
push
add
add
push
add
leave
test
add
lods
rolb
xlat
pop
jns
mov
add
mov
add
cmp
test
test
add
cmp
add
add
push
or
dec
hlt
add
andl
add
fisubs
rolb
int3
movsb
add
xor
dec
cmc
loopne
testb
mov
add
mov
cmpsb
add
jmp
xchg
add
xchg
movsl
xor
add
lret
jecxz,pt
lods
push
add
add
add
mov
or
fdivrs
sbb
mov
jle
add
aad
add
jb
ljmp
dec
mov
sahf
std
inc
gs
addb
add
add
scas
rcr
xlat
push
add
fcmovbe
add
mov
enter
dec
jb
testb
test
mov
cmpsb
add
pop
int
aad
pop
movl
xchg
fmuls
add
cmp
mov
jle
add
add
push
add
mov
add
push
add
xor
add
add
add
add
add
and
xchg
aad
mov
mov
jp
and
mov
out
inc
add
cmpsl
jge
mov
add
fcoml
adc
xor
loopne
es
divl
add
dec
adc
lds
aas
adc
jle
jno
add
pop
mov
pop
loopne
cmpsl
dec
sbb
mov
xor
addb
add
in
add
nop
add
in
lahf
mov
adc
lea
imul
fcoml
test
loope
add
jnp
add
add
rolb
lea
sub
sbb
add
js
testl
dec
cmpl
ja
add
lret
pop
movb
in
test
add
rolb
xlat
cmpsb
add
sub
inc
add
dec
push
jnp
add
xlat
sub
add
lods
inc
cmc
loop
inc
push
add
sub
ss
add
add
or
leave
cli
subl
sbb
mov
imul
rolb
pop
pop
sbb
add
push
mov
xor
cmp
jmp
and
loope
push
jno
add
add
addl
jle
add
add
add
add
add
mov
cmp
xchg
and
add
mov
xchg
daa
cs
pop
iret
inc
gs
pusha
add
xchg
out
mov
add
dec
mov
stos
or
add
jbe
mov
pop
movb
scas
or
add
das
les
push
dec
mov
or
add
add
into
add
mov
adc
mov
aam
aas
out
repnz
xor
sbb
add
xor
pop
dec
cmp
add
test
pop
mov
jmp
sbb
ljmp
inc
add
sbb
inc
mov
add
je
mov
mov
scas
je,pt
inc
add
cmp
inc
jnp
add
test
fimull
mov
add
data16
or
xlat
add
add
mov
add
out
and
mov
add
cmpsb
add
pop
mov
jae
dec
cmpsl
add
mov
add
flds
dec
in
imul
pop
add
mov
rolb
mov
pop
xor
add
cld
ja
add
icebp
xchg
add
aas
mov
lock
cwtl
jnp
add
sub
cmc
movsl
sub
xchg
add
add
add
cmpsb
add
test
je
jle
add
add
add
push
mov
pushf
fdivs
clc
cli
je
cmpsb
add
insl
push
add
iret
scas
bound
mov
cmp
add
add
add
mov
jg
jne
add
add
jns
aas
repz
mov
std
jl
push
jns
aaa
out
add
add
push
add
cmp
add
add
mov
dec
movsl
inc
add
ds
addr16
add
add
xchg
add
cmovnp
add
and
rorl
pop
cmp
scas
ss
add
mov
jb
aad
sbb
dec
xchg
add
add
mov
push
add
sub
fcoms
and
or
loop
push
add
jecxz
adc
mov
push
add
movsl
pop
and
imul
pop
data16
add
testb
daa
sbb
xchg
loope
in
cmpsb
add
sbb
scas
push
sub
fidivrl
add
in
or
add
pop
inc
add
add
lret
ja
ret
pop
mov
push
xchg
add
mov
rolb
addb
pop
lods
rolb
popf
jge
fdiv
into
adc
adc
cmp
repnz
add
fdivrp
negl
add
int3
pop
dec
cmp
dec
or
mov
push
add
pop
mov
add
add
add
mov
sarl
mov
adcl
xchg
sbb
add
mov
ret
and
mov
roll
lods
mov
add
dec
cs
or
inc
xchg
xchg
add
js
rolb
add
loope
add
dec
mov
pop
test
or
mov
sbb
add
mov
add
add
rolb
cmp
stos
and
mov
js
add
xchg
add
push
lds
jne
add
mov
dec
xchg
jb
fcoml
jno
add
sub
cmp
imul
pop
call
rolb
les
fldenv
add
add
push
mov
jnp
add
sbb
add
cld
addr16
xor
cltd
cwtl
inc
lock
mov
out
ret
jl
add
xchg
add
addb
fstpl
push
add
cmp
add
sbb
outsb
ds
and
xchg
add
mov
mov
add
xor
xchg
add
sub
push
add
add
add
cmpsl
or
jb
lods
push
add
push
fstp
mov
add
cmp
push
add
or
add
add
cmp
ds
add
add
add
or
addr16
add
test
jb
mov
xlat
cmp
add
adc
adc
pop
sbb
mov
lahf
les
push
aaa
data16
nop
add
inc
mov
ret
dec
pop
sub
adc
add
outsl
push
add
add
dec
scas
push
out
add
pushf
jae
adc
add
lock
jmp
sti
and
add
xchg
enter
push
and
outsb
pop
stc
mov
add
dec
fmull
mov
mov
test
adc
jnp
pop
jmp
inc
add
mov
xchg
pusha
add
sahf
jno
adc
add
roll
add
pop
ds
enter
add
add
push
hlt
add
outsl
dec
ja
mov
push
add
mov
jno
adc
jns
cs
pop
mov
xchg
push
bound
mov
mov
mov
add
sub
add
mov
aaa
pop
mov
pop
add
add
cmp
push
cli
mov
add
add
movsl
add
add
sar
mov
das
stc
push
cld
jnp
add
mov
xchg
add
push
add
mov
add
lcall
push
add
xor
pusha
add
fdivr
or
mov
aad
cmp
pop
xor
les
inc
loopne
dec
rolb
popa
pop
imul
and
out
sbb
add
out
mov
sub
add
mov
addb
cmp
xchg
inc
add
data16
or
inc
add
add
sbb
add
xchg
xchg
dec
aaa
jb
arpl
jne
cmp
add
add
aaa
inc
add
test
out
add
sbb
xor
sbb
popf
dec
je
fsubs
mov
push
add
jnp
add
and
xchg
adc
lock
or
mov
rolb
movb
add
add
frstor
lods
out
fildl
push
fnsave
add
sbb
cmp
stos
adc
imul
add
mov
cmp
add
mov
xlat
or
cmp
inc
jecxz
dec
inc
add
add
clc
mov
add
add
aaa
subl
add
std
adc
fstps
xchg
les
daa
push
into
pop
jmp
inc
sbb
cmp
add
add
addr16
jb
sub
add
orl
adc
adc
inc
add
cwtl
mov
add
call
bound
mov
add
movsl
cmpsb
add
dec
popa
jg
repz
ljmp
int
mov
add
add
add
inc
dec
and
mov
add
mov
fs
movsb
add
jbe
or
mov
add
add
add
and
mov
out
js
add
add
push
and
add
dec
mov
add
xchg
add
add
lahf
or
mov
add
jnp
lret
and
addr16
and
mov
jbe
inc
add
out
cmpsl
jnp
add
mov
fsubl
push
loopne
adc
dec
inc
add
add
jae
or
ret
sbb
add
mov
mov
inc
add
adc
aad
add
inc
push
enter
add
imul
adc
mov
add
mov
arpl
add
or
add
push
add
ljmp
xchg
pop
dec
jp
mov
xchg
movl
fistpll
add
aaa
mov
add
xor
lods
clc
nop
add
and
test
inc
add
jo
mov
push
add
stos
ret
mov
mov
push
add
add
add
cmp
aaa
xchg
cli
pop
aas
movb
and
jmp
insl
in
mov
inc
add
add
insl
cmp
mov
mov
das
or
dec
dec
xor
call
add
add
leave
imul
add
pop
fwait
mov
mov
iret
xchg
add
mov
in
add
xchg
add
mov
inc
add
mov
push
sub
add
add
sbb
xor
mov
rolb
add
add
sub
out
xor
cld
sbb
cmpsb
add
adc
out
jmp
push
cs
add
fmul
and
or
add
mov
lock
add
mov
inc
add
xor
add
mov
xchg
jmp
xchg
mov
pop
mov
xor
les
pushl
and
add
add
add
mov
stos
cltd
push
ret
add
xor
je,pt
aad
out
negl
sub
adc
add
add
add
pop
stos
in
scas
mov
add
push
mov
inc
cwtl
sbb
out
adc
push
jle
adc
jns
jns
aas
ljmp
daa
rolb
add
xor
add
scas
push
dec
rolb
aad
add
lds
add
mov
in
std
push
add
and
mov
loopne
pop
jle
add
mov
mov
adc
add
sub
jnp
push
sbb
add
add
jae
addb
inc
xor
push
add
add
add
in
and
add
pop
outsl
in
cmp
lods
mov
sarl
add
cmc
in
scas
xor
push
xchg
sbb
lret
inc
mov
inc
stos
repnz
mov
add
cld
and
jl
dec
les
xlat
and
lods
xchg
add
inc
add
xlat
push
shll
jg
sub
add
pop
mov
sbb
dec
dec
pop
add
push
in
add
bound
mov
add
push
add
add
add
pop
nop
add
add
mov
push
add
push
fidivl
add
mov
add
pop
mov
sbb
loope
arpl
add
mov
add
xchg
aam
adc
inc
icebp
test
cmp
iret
lea
mov
bound
mov
pop
xlat
imul
cmp
mov
jo
push
sub
add
inc
add
mov
push
add
and
aam
cmp
add
xchg
add
mov
insl
inc
add
cmp
pop
push
je
mov
add
inc
jle
add
mov
test
cmpsl
loope
push
add
xor
je
sbb
mov
imul
add
sub
repz
add
movb
adc
push
add
mov
mov
stos
xchg
add
fwait
cli
cmpsl
and
fmull
xor
adc
sbb
jo
push
add
test
cmpsl
pop
xchg
add
aaa
cmp
mov
cli
jg
lods
jl
add
sahf
insl
int3
enter
or
add
sbb
iret
sub
mov
sub
push
dec
mov
add
scas
add
and
out
rolb
movsb
add
xor
lahf
jle
mov
cmp
mov
addb
add
push
add
lods
mov
mov
mov
or
cmp
add
call
bound
mov
lret
repz
add
mov
pop
outsb
mov
ds
jo
je
loopne
jnp
mov
add
test
cld
loopne
add
loope
out
sub
or
sbbl
and
mov
jle
add
xor
or
mov
pop
dec
pop
mov
jp
stc
aam
inc
lret
add
add
dec
push
shll
lret
add
xorl
add
rolb
xor
adc
mov
aam
add
mov
mov
add
repnz
add
add
outsl
and
mov
sbb
add
xor
jmp
leave
testb
rcrl
movsb
add
add
fdivl
cwtl
repz
add
add
orl
jo
jl
mov
add
jecxz
dec
sti
popa
movsb
add
mov
shrl
xchg
add
mov
mov
xor
mov
movl
add
imul
arpl
add
add
cmp
rcll
es
xchg
add
imul
movsl
mov
testb
add
add
testb
into
sub
cmp
add
sbb
inc
xor
and
sbb
add
add
add
add
add
mov
je
lds
jbe
je
cwtl
or
lods
inc
rolb
mov
aad
add
xchg
add
add
push
fisttps
or
add
dec
xchg
test
cltd
mov
jne
addb
aaa
pcmpgtd
push
add
mov
repz
mov
js
rolb
rolb
adc
lds
pop
pop
pop
addb
insb
icebp
fdivrs
jecxz
fisttpll
adc
xlat
pop
scas
pop
or
insl
sub
test
stos
psrad
mov
lods
movb
test
mov
and
xchg
pop
pop
std
jle
dec
cld
sub
add
cmpsl
jbe
sbb
out
ret
add
add
add
jmp
adc
cmp
add
add
fdivrl
jno
push
add
test
js
push
jge
inc
lods
jle
in
add
mov
add
add
fidivl
inc
and
loop
testb
add
adc
movb
push
add
add
mov
inc
jg
nop
add
mov
xchg
testb
outsl
sub
add
leave
pop
lret
mov
pop
and
repnz
in
dec
xchg
sbb
mov
leave
or
adc
loope
push
ljmp
hlt
add
aad
or
daa
add
jne
sbb
mov
xlat
sbb
sbb
mov
add
mov
add
mov
add
or
add
sub
mov
fs
add
popf
or
movsb
add
push
add
pop
jae
fsincos
lods
pop
test
add
loop
pop
mov
lcall
mov
or
movsb
add
jbe
rolb
add
aad
add
add
pop
loopne
pop
fsub
add
addb
mov
loop
and
mov
lods
pop
inc
popf
cmp
add
add
fsub
add
cltd
xchg
and
mov
adc
fwait
popf
mov
xchg
push
sub
add
add
idivl
jno
add
cmpl
pop
test
sbb
aad
adc
mov
adc
sbb
add
gs
pop
mov
add
sub
jg
mov
js
inc
add
add
scas
xor
fsubr
xlat
cli
orl
test
lcall
and
or
cmc
jb
mov
imul
popf
adc
mov
movb
testb
mov
add
add
add
jmp
add
add
xchg
inc
add
lods
xchg
mov
jae
addr16
add
add
data16
sub
push
add
inc
out
imul
jae
push
add
nop
add
add
leave
aad
std
lret
sub
rorl
lret
add
jmp
add
xchg
add
mov
loop
jne
jge
cmc
shl
jo
vhaddps
mov
shll
xchg
xchg
dec
loopne
fldt
add
hlt
add
leave
rolb
add
jo
cltd
pusha
add
xchg
inc
decl
stos
into
sbb
jl
mov
mov
dec
pop
in
xchg
sub
nop
add
in
std
clc
dec
add
add
mov
dec
int
enter
insb
add
mov
loop
movsb
add
out
sub
add
inc
outsl
pop
in
mov
add
add
addb
lods
mov
cmp
stos
adc
push
add
push
hlt
add
das
es
add
mov
push
cld
addb
or
sahf
jecxz
loopne
pop
inc
ficoml
insl
adc
push
add
inc
pop
mov
add
and
jmp
aaa
or
lcall
add
stc
mov
add
lret
add
push
add
dec
add
mov
add
aas
pop
rolb
int3
mov
add
mov
add
add
faddl
mov
mov
aam
xor
push
je
sub
jne
jle
add
lcall
add
bound
mov
add
popf
mov
movsb
add
add
lods
sbb
pop
mov
add
cld
push
add
xor
jl
add
jns
add
add
and
mov
add
in
push
push
xchg
int
jl
insb
mov
and
add
add
xchg
add
out
test
push
add
data16
dec
dec
mov
sahf
add
add
mov
rolb
sbb
mov
push
add
and
or
and
mov
dec
aas
out
int3
dec
pop
cli
adc
psrld
addr16
sbb
mov
hlt
add
jp
mov
sbb
mov
add
aas
jbe
fisttps
fwait
cmp
jae
or
insl
sbb
ds
enter
adc
shll
add
xchg
jmp
push
xor
add
pop
in
lods
xchg
test
fcompl
mov
inc
in
scas
mov
pusha
add
and
inc
add
add
addb
outsl
movsl
enter
inc
and
jl
add
imul
add
add
add
cmp
mov
sahf
into
mov
fdivp
add
adc
add
add
inc
add
and
add
inc
add
add
into
jmp
pop
repnz
jl
mov
rorl
movb
and
mov
aas
mov
mov
mov
add
jae
mov
imul
add
add
jge
sti
divl
in
cltd
xchg
mov
pushf
cmc
jae
inc
add
lods
xor
adc
add
cmp
add
jmp
jle
xor
jmp
in
jl
add
insb
fiadds
cwtl
mov
xor
push
sub
push
add
jmp
cwtl
ds
push
fisubs
add
add
xchg
scas
pop
and
mov
fsubrs
sub
sbb
add
fistps
add
stos
pop
pop
xchg
sbb
into
pop
inc
add
lds
add
aaa
out
sti
sbb
adc
mov
clc
jb
jnp
pop
xor
mov
push
or
add
movb
push
add
or
daa
xchg
rorl
test
pushf
test
clc
sbb
leave
add
jl
in
add
push
add
or
repz
add
scas
inc
add
add
pop
push
add
in
mov
lahf
dec
leave
add
lods
aaa
ds
add
lock
add
lcall
lods
mov
sbb
insl
mov
sbb
cltd
pop
popa
movsb
add
adc
add
pushf
add
mov
add
mov
cwtl
sub
aad
add
add
iret
xlat
or
loop
sub
leave
lods
stos
daa
pusha
add
add
loopne
enter
add
.byte
xor
