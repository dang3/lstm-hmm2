repnz
dec
adc
mov
cltd
lock
xchg
add
jbe
jp
mov
inc
push
add
movsl
nop
add
add
stos
adc
push
add
fabs
cmp
add
add
test
cmp
jecxz
add
lock
add
add
sub
dec
mov
xor
aaa
add
je
outsl
add
jns
fucomp
bound
mov
xchg
add
jae
add
mov
add
adc
add
rolb
mov
xchg
add
push
add
xor
mov
add
cmp
cmp
mov
add
push
ret
movsl
pop
lds
rolb
out
jg
mov
pop
mov
in
dec
filds
jb
sti
sbb
pop
in
adc
daa
mov
add
fld
xor
add
imul
jae
add
icebp
or
cmp
test
iret
xor
and
mov
jb
cmp
add
adc
movsb
add
dec
pop
decb
mov
jmp
or
cmp
daa
mov
or
nop
add
mov
addb
js
add
pop
ret
ret
arpl
add
xchg
cli
adc
add
mov
add
mov
adc
mov
add
add
add
jo
sub
add
mov
cmp
out
adc
addr16
add
dec
adc
pop
inc
mov
add
mov
add
in
test
xor
adc
repnz
cmp
add
mov
iret
sbb
inc
add
add
add
test
add
mov
add
add
cld
inc
add
add
movb
aam
pop
lea
neg
push
add
fsubl
add
push
sub
jle
rolb
cld
sbb
add
add
cwtl
xchg
add
in
add
mov
add
jp
add
aad
icebp
jne
mov
lods
imul
xchg
in
jo
and
mov
add
fadd
add
mov
sub
sbb
add
sbb
adc
jbe
aam
sub
mov
add
in
add
aaa
stos
cld
xor
jbe
pop
hlt
add
sbb
xor
movb
out
or
dec
jb
xchg
pop
add
mov
int3
and
repnz
add
inc
add
xchg
fcmovbe
add
add
mov
xlat
mov
pop
in
or
or
add
add
mov
add
and
ret
ja
fnstcw
inc
add
and
jle
loop
lea
mov
add
neg
addr16
sub
mov
jae
add
call
adc
add
add
mov
add
mov
jmp
dec
ficomps
sub
test
sbb
jmp
and
cmc
popa
and
xorl
mov
mov
add
add
add
add
in
cmpsb
add
push
add
or
sbb
add
fisttps
add
scas
pop
test
push
jb
pop
cmp
pop
lods
push
inc
add
lret
jl
leave
or
sarl
xchg
add
fimull
inc
add
and
mov
aas
push
add
push
je
adc
icebp
xor
cmp
jno
mov
imul
add
add
mov
add
add
mov
stos
jg
add
sub
add
and
add
add
add
pop
jbe
mov
in
sbb
in
add
or
and
popf
mov
add
sbb
or
inc
add
add
add
add
addb
aam
xchg
fidivs
hlt
add
aad
add
orl
xchg
xchg
jl
mov
add
add
mov
mov
out
outsb
jb
add
mov
xchg
add
mov
add
adc
mov
push
add
add
dec
data16
add
jo
mov
xor
xor
mov
inc
pop
push
push
push
outsb
adc
mov
movb
aad
lock
fadd
add
add
fildll
add
dec
dec
xchg
inc
mov
add
mov
fwait
out
cmpsb
add
push
add
pusha
add
fistps
sub
adc
hlt
add
fistl
add
xchg
add
add
in
adc
aam
add
mov
mov
mov
jle
add
in
and
add
add
mov
mov
in
pop
pop
push
add
add
add
sbb
or
lods
leave
jge
add
out
repz
pop
sbb
bound
mov
add
hlt
add
xlat
fidivrl
add
insb
push
out
out
pop
mov
or
in
sub
push
push
push
cld
call
sub
mov
cs
movzbl
cmp
ss
lea
push
lea
push
lea
push
lea
push
push
call
cmp
je
es
lea
cs
cs
es
call
test
jne
jmp
push
lret
icebp
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
lea
lea
sub
add
mov
sub
sub
push
pop
push
je
jmp
add
add
push
xor
xchg
add
test
and
pop
cmpsl
push
add
add
push
add
add
sub
cmpsl
push
add
add
sub
jg
das
lock
scas
mov
jae
add
push
or
and
mov
cli
pusha
add
movb
mov
add
add
or
xchg
add
or
addb
jmp
push
add
daa
jecxz
add
inc
out
sub
mov
xchg
xchg
sub
mov
xlat
dec
and
add
add
add
adc
pop
pop
sub
add
add
insb
orl
add
out
cmp
test
stos
or
jl
add
adc
add
and
push
add
daa
mov
repz
add
add
dec
sahf
jae
cld
rorl
dec
dec
pop
cmc
inc
fwait
repnz
add
nop
add
add
mov
or
jge
sahf
lret
pop
push
add
clc
add
mov
add
loop
std
pop
or
fstl
mov
les
nop
add
sti
mov
int
stos
inc
and
sahf
insb
rolb
xor
fcompl
add
add
mov
mov
lods
dec
into
pop
test
mov
stos
add
push
xchg
testb
push
out
rolb
mov
add
aaa
cmp
rolb
or
add
mov
les
fadds
lcall
movb
add
add
or
jg
js
add
testb
or
sub
add
add
lds
jb
mov
inc
add
xchg
jmp
and
mov
mov
aaa
sbb
jle
jge
add
add
add
in
jmp
xor
inc
inc
add
lods
adc
pusha
add
push
add
jmp
jge
sbb
std
rolb
in
lret
add
sub
add
sub
xchg
jle
add
add
add
movb
pop
xor
mov
push
or
sbb
imul
pop
stos
adc
mov
call
sarl
imul
out
les
mov
ret
push
dec
ffreep
add
fnstcw
add
adc
in
xor
inc
add
fcmovnu
cmp
mov
fldenv
jb
add
xchg
add
sbbl
jmp
addb
add
mov
add
rolb
pop
and
mov
out
or
mov
mov
push
mov
sub
in
push
iret
fs
xchg
add
xor
mov
scas
fldcw
add
pop
cmp
add
repnz
je
or
mov
rolb
add
test
lahf
push
add
add
call
out
push
add
ds
leave
add
int3
call
jg
insb
stc
inc
add
add
bound
mov
jl
add
jge
mov
pop
inc
mov
mov
repz
cld
cmp
pop
std
hlt
add
xlat
aaa
cltd
arpl
test
insl
jecxz
rcll
jg
and
pusha
add
test
lahf
mov
rcll
jb
dec
sti
jb
add
mov
std
insl
fdiv
fwait
xchg
in
mov
add
add
push
adc
xlat
xlat
sub
icebp
cmpsb
add
mov
add
sti
insl
bound
mov
xor
arpl
add
sbb
xlat
das
mov
fcoml
sbb
inc
pop
or
xchg
cwtl
aas
fistps
jmp
add
add
pusha
add
and
psubd
cmp
imul
sub
xchg
add
daa
je
incl
iret
and
out
pop
call
insl
ds
fldcw
add
or
or
into
les
lods
adc
fidivl
add
add
jo
dec
mov
add
mov
dec
sub
add
pop
add
mov
icebp
xchg
add
xchg
inc
pop
mov
xor
push
add
inc
add
mov
test
mov
add
into
pop
insb
rorl
inc
push
add
call
pop
mov
and
mov
mov
data16
add
jmp
add
addb
and
add
dec
out
add
cwtl
aas
std
pushf
ja
movb
add
es
add
add
add
mov
mov
cld
adc
and
sub
mov
add
add
leave
repz
xor
xchg
add
mov
add
movb
int
popf
xor
ljmp
sub
add
and
int3
add
lret
jle
add
hlt
add
add
in
cwtl
jbe
jl
add
iret
jnp
pushf
cmp
popf
icebp
inc
add
outsb
les
mov
ret
add
xor
add
add
imul
sub
test
leave
dec
xor
fimuls
hlt
add
add
test
sub
popf
fwait
xchg
adc
arpl
add
or
add
push
add
add
icebp
mov
decb
add
mov
adc
mov
bound
mov
add
add
pop
sbb
push
sub
jmp
push
fstl
add
add
mov
shll
aam
xchg
add
xlat
test
pop
sub
add
add
jae
mov
jle
int
add
arpl
mov
nop
add
hlt
add
stos
daa
mov
in
loopne
cmp
sub
stos
out
jae
add
mov
sub
xchg
jp
pushf
mov
add
add
mov
dec
lea
add
xchg
mov
inc
add
shll
or
adc
sbb
add
inc
jo
adc
movb
xor
in
sbb
ret
rolb
mov
xchg
and
mov
enter
movsl
cmp
pop
aaa
cwtl
in
push
and
cmp
bswap
cmp
aas
inc
and
jp
outsl
sbb
jbe
add
lods
pop
pop
scas
xchg
jbe
push
push
add
jg
add
and
add
aas
jb
push
adc
xchg
add
inc
add
xor
xor
aad
ljmp
pop
adc
imul
add
movsl
ljmp
mov
scas
push
sbb
lds
int
and
enter
sub
addb
stc
or
mov
mov
sub
add
sbb
push
imul
lcall
and
mov
gs
rolb
ds
dec
mov
fcomp
mov
sbb
add
dec
xchg
into
ss
ss
hlt
add
pop
cltd
sub
add
bound
mov
adc
cltd
jecxz
add
sbb
pushf
pop
pop
cmpsb
add
sub
cmpsl
xchg
test
add
pop
pusha
add
jbe
scas
xor
add
add
cmp
int
inc
or
add
add
mov
dec
xor
in
lret
call
stc
iret
jo
sub
add
xor
push
mov
and
mov
lret
sarl
incb
add
cld
mov
add
add
dec
add
stc
add
sub
std
outsl
jb
lods
pop
push
add
ficompl
inc
add
add
dec
rolb
les
mov
mov
nop
add
fsubl
sbb
ja
rolb
in
push
arpl
pop
push
add
pop
outsl
inc
add
add
mov
into
xor
enter
lret
lret
dec
dec
mov
mov
jbe
ljmp
jbe
out
bound
mov
nop
add
jp
add
aam
pop
inc
add
sti
or
add
push
or
add
out
lcall
push
int3
cli
push
add
add
mov
push
add
divl
inc
add
mov
clc
xchg
add
sbb
and
mov
and
mov
add
insb
or
lret
xchg
cld
add
xorl
add
mov
add
push
add
inc
jnp
mov
jae
add
xor
xchg
fs
inc
sahf
outsb
scas
jnp
cli
movsb
add
out
sub
xor
pop
push
dec
nop
add
hlt
add
add
mov
cmpsl
fsubrp
jge
add
add
data16
mov
imul
xchg
add
mov
frstor
test
push
add
add
push
add
stc
outsl
lea
dec
xchg
add
sbb
jo
imul
dec
or
add
mov
repz
jmp
add
mov
mov
add
lock
add
movb
test
xor
add
mov
add
repz
mov
in
add
add
adc
add
xchg
dec
inc
and
adc
outsb
lods
popf
aaa
adc
cmp
mov
ret
lock
enter
add
cmp
mov
add
pop
inc
xchg
ret
ds
into
xchg
mov
aad
push
xchg
add
cli
dec
adc
pusha
add
mov
and
xchg
add
mov
and
mov
add
data16
push
pop
pop
xchg
test
push
jae
dec
dec
adc
mov
hlt
add
leave
xchg
sbb
xchg
dec
lea
mov
pop
cmp
push
enter
test
add
mov
lret
adc
into
pushl
repnz
add
add
inc
dec
push
fbstp
outsb
imul
add
ja
pop
adc
xchg
scas
and
or
xchg
fsub
fnstsw
push
add
add
rcl
fidivl
adc
loop
movl
mov
sti
or
lock
mov
movsb
add
mov
ficoms
add
scas
test
add
push
mov
and
mov
jno
mov
sub
inc
and
add
inc
add
mov
add
pop
fwait
jp
add
add
leave
repnz
sbbl
inc
out
add
and
mov
pop
les
adc
in
xchg
push
mov
lea
mov
xchg
add
sub
add
add
test
add
add
or
and
lret
sbb
add
add
leave
test
fucomip
je
pop
ret
add
sbb
add
mov
add
rcll
mov
in
dec
dec
mov
jle
push
data16
xor
sahf
push
mov
cmp
add
or
iret
mov
mov
repnz
pop
repnz
cld
outsb
cli
in
fstpt
movb
addb
jle
add
fisttpll
add
add
or
push
mov
mov
inc
aas
jne
lahf
test
je
jae
add
cltd
sub
mov
add
add
lods
outsb
movsb
add
jns
movb
fwait
pop
and
mov
add
fmuls
add
add
gs
sub
add
xchg
daa
inc
add
dec
cli
xchg
add
add
mov
jl
xchg
add
ljmp
iret
push
or
add
fldt
fstl
add
adc
sub
add
add
add
add
adc
popa
add
mov
mov
mov
inc
add
inc
pop
adc
mov
mov
lods
mov
ja
pushf
js
jnp
bound
mov
cld
mov
mov
lods
cld
ror
adc
adc
push
xchg
add
out
std
ret
aaa
push
test
sti
fidivl
cs
rorl
mov
mov
add
mov
out
add
icebp
ja
add
dec
out
fadd
lods
jbe
and
xchg
add
loopne
xor
add
sbb
add
fxam
nop
add
lods
addb
mov
cli
pop
jecxz
add
popf
loopew
xor
sub
inc
imul
push
enter
fmul
push
add
add
addb
mov
jns
or
cmc
cmp
mov
icebp
sbb
popa
or
iret
inc
add
enter
mov
jae
cmp
mov
cmp
add
gs
add
and
mov
mov
ljmp
xor
xor
adc
call
mov
add
out
or
add
inc
mov
add
imul
inc
add
cwtl
xchg
jo
and
mov
add
sub
jns
outsl
hlt
add
jmp
shll
add
rolb
test
les
sarl
flds
pop
das
inc
dec
jb
xor
iret
cltd
int3
lods
stos
dec
jne
push
add
add
add
mov
mov
mov
int3
pop
xchg
dec
ret
mov
lret
fadds
add
xor
testl
pop
arpl
add
add
call
mov
stc
int
dec
cld
into
cmpsb
add
stc
mov
mov
fwait
mov
push
iret
movsb
add
loop
fwait
mov
mov
add
add
ljmp
iret
rcr
ds
pop
pop
pusha
add
pop
fdivrs
out
imul
sbb
addr16
in
rolb
mov
fldcw
dec
and
jmp
add
js
xchg
int
add
add
add
add
sub
lods
push
add
jg
decb
or
and
lret
insb
gs
add
add
ljmp
frstor
jg
cmp
insb
inc
and
cmp
dec
lahf
xchg
add
mov
add
mov
pop
xor
inc
add
dec
sub
add
mov
test
and
add
out
mov
add
lds
add
jb
aad
add
imul
cmp
mov
ret
mov
cmp
jg
sub
fnstenv
adc
and
subl
add
add
lea
sbb
add
addb
out
and
mov
xor
mov
jo
xchg
sub
add
xor
insb
inc
rcll
inc
sbb
cmp
cli
jnp
pop
fwait
leave
inc
add
or
push
addb
add
add
add
push
add
add
mov
push
add
add
call
cltd
cwtl
push
or
jb
js
rorl
leave
xor
lahf
sbb
xor
addb
and
cmp
sub
add
lea
and
dec
pop
push
add
cmp
out
lret
jb
push
fldt
add
add
mov
xor
add
fs
cmc
in
out
cmp
out
lcall
mov
add
shll
and
mov
sahf
loop
dec
xchg
cmpsb
add
aam
mov
mov
add
mov
add
stos
cmc
and
cmc
movsb
add
insb
mov
xchg
ljmp
add
fs
insl
adcl
inc
pusha
add
add
add
add
add
adc
cmp
lock
add
add
mov
int
insb
xchg
add
ret
movb
sub
add
loop
sahf
mov
cmp
mov
inc
or
mov
icebp
mov
adc
lret
add
jmp
ja
addb
mov
addb
lret
add
sarl
jae
shrl
xor
xchg
nop
add
add
add
iret
cmp
or
add
add
repz
jns
inc
add
add
mov
add
fdivrs
jns
out
ljmp
stc
cwtl
mov
mov
aad
fstps
jnp
add
add
mov
inc
xchg
test
push
add
add
sbb
push
add
mov
arpl
addb
test
mov
add
mov
add
rolb
add
cld
sub
sbb
push
add
fisubrs
pop
pop
push
add
rolb
xchg
inc
add
les
lods
popf
inc
add
call
add
cmp
incl
mov
add
add
cs
fisubl
stos
adc
out
data16
add
fimull
push
and
add
push
cmc
stos
sbb
out
loopne
inc
add
pushf
add
inc
add
push
dec
jp
xchg
rorl
add
add
add
xor
mov
scas
jns
add
rorl
mov
fidivl
rcrl
xlat
inc
jl
add
xchg
add
and
cmpsl
xchg
push
shr
pop
ljmp
vpcmov
mov
add
bound
mov
aaa
xor
jl
or
data16
scas
xchg
cmp
add
and
addb
add
push
in
idivl
ret
jo
dec
mov
add
les
fdivl
jle
dec
mov
add
or
dec
xchg
add
fadds
cs
cmpsb
add
add
pop
psubusb
repnz
sbb
add
pop
mov
cwtl
out
jle
addb
add
mov
xchg
add
add
add
add
in
add
mov
idiv
or
sbb
add
add
fildl
mov
add
add
add
add
mov
add
adc
pop
mov
popf
pop
cmp
add
jmp
adc
cmp
cmp
pusha
add
add
add
add
push
add
add
das
push
add
add
pop
testl
in
mov
fdivrl
jecxz
aaa
addr16
scas
dec
in
or
add
aaa
xchg
add
sbb
jae
pop
pop
cmp
int3
push
add
pop
sub
add
cmp
mov
jecxz
add
bound
mov
add
inc
imul
out
bound
mov
out
js
add
mov
int3
je
xlat
aad
int3
mov
xlat
test
daa
mov
nop
add
add
add
add
xor
xchg
out
call
add
mov
mov
sub
addl
adc
sbbl
mov
adc
sub
push
jecxz
in
out
ds
mov
cwtl
clc
push
add
mov
push
xchg
mov
add
and
mov
add
jbe
cmpsl
and
pop
sub
icebp
movsl
movsl
jp
pop
aaa
pop
imul
add
and
or
les
cmp
adc
les
fldt
sub
in
int
xor
stos
sub
xchg
and
aad
add
sub
mov
sbb
and
mov
add
jl
add
adc
add
push
imul
dec
add
mov
lods
cs
sti
gs
test
icebp
pushf
inc
add
stc
mov
int
loope
sub
stos
mov
add
mov
adc
add
jl
add
scas
adcl
cmp
test
mov
xchg
mov
js
add
add
cmp
or
aam
das
lods
inc
into
lock
setp
add
sub
fisubrs
and
mov
ret
add
add
sub
aam
dec
mov
fstps
in
arpl
sub
rcrl
dec
jle
xchg
add
loopne
and
push
add
into
mov
mov
nop
add
lods
xchg
clc
ja
int3
mov
pushl
movb
icebp
xor
jo
add
mov
push
clc
out
imul
rolb
roll
inc
add
outsb
xor
ja
and
push
add
jle
and
push
add
inc
add
cmc
push
add
xchg
push
adc
mov
scas
adc
mov
sbb
ret
add
jae
imul
add
or
movsl
and
jbe
xchg
imul
cli
leave
xor
movsl
fs
add
sbb
and
mov
adc
ja
push
aam
and
mov
xchg
movl
rolb
mov
popa
imul
dec
loope
add
push
add
push
add
add
push
pop
sbb
add
add
push
add
xor
add
jle
add
add
leave
push
call
and
insb
inc
daa
fsubrs
test
fstps
jmp
scas
scas
addb
add
add
mov
jle
cwtl
notl
push
inc
add
leave
int3
sub
add
fldenv
and
loopne
push
add
mov
lret
cs
shll
lods
icebp
mov
add
mov
popf
jg
push
add
repnz
add
mov
add
ja
jbe
cmp
repz
add
pop
sbb
sub
xchg
push
add
push
inc
add
mov
outsl
add
lea
fdivr
add
in
pop
add
add
mov
add
fwait
mov
push
stos
stos
in
pop
loopne
pop
out
push
add
arpl
jle
sbb
lcall
mov
mov
rcl
mov
push
add
das
xor
cld
stos
inc
icebp
jmp
add
mov
or
repnz
inc
add
sub
xorl
les
filds
add
pop
and
jns
add
add
dec
mov
sub
push
inc
lods
outsl
mov
cmp
ljmp
add
cmc
rolb
out
xchg
pop
inc
add
add
data16
add
scas
popa
nop
add
loope
add
add
mov
add
cmp
add
fstl
xchg
pusha
add
cmpsb
add
dec
add
cmp
outsl
bound
mov
stc
jg
scas
scas
mov
mov
mov
add
addl
sub
mov
sub
cmp
sbb
add
add
repnz
and
mov
mov
add
add
out
bound
mov
lds
fmull
lahf
and
fcoml
add
mov
mov
xor
dec
outsl
lret
les
pop
lahf
fnstcw
mov
out
pop
pop
test
add
pop
inc
add
imul
add
inc
daa
fwait
push
movsb
add
mov
add
cs
or
jne
push
xchg
and
out
add
xor
dec
pop
cmp
xchg
xor
jg
mov
add
add
fisubrs
ljmp
sti
testb
add
pusha
add
add
addl
mov
add
add
add
and
icebp
push
add
pop
ja
dec
sub
std
add
sbb
xor
sbb
andl
add
stos
imul
push
add
add
loope
shrl
loopne
mov
mov
add
pop
and
mov
out
jo
fwait
movb
mov
sbb
repnz
add
aam
dec
dec
mov
aam
test
add
add
cmp
add
pop
push
insl
push
or
jmp
add
add
push
sahf
mov
test
rolb
add
les
mov
pop
add
mov
add
rcll
add
iret
aam
and
mov
mov
pop
std
adc
dec
pop
lods
cmpl
mov
mov
sub
add
stc
stos
lahf
add
mov
sbb
pop
adc
in
sbb
movb
cmp
sub
rolb
ja
add
add
insb
sahf
pushf
push
adc
jmp
fwait
pop
push
add
mov
add
sbb
mov
rolb
xchg
add
add
faddl
add
testl
or
xor
mov
sub
call
call
push
add
pop
dec
sub
add
fwait
jmp
add
dec
stos
les
push
mov
xlat
stos
mov
or
aas
in
sbb
add
add
iret
push
cmp
adc
add
cs
insl
mov
ds
add
scas
jb
cmpsb
add
adc
mov
jae
lds
testb
sub
addb
add
cmp
add
addl
mov
push
add
wbinvd
inc
add
add
add
add
mov
add
add
mov
add
popf
mov
pop
push
add
rcrl
add
add
xchg
add
mov
test
in
add
xlat
repz
add
mov
add
popa
in
xor
jecxz
and
mov
add
pop
inc
and
leave
mov
push
add
addb
lods
add
xchg
loopnew
leave
pop
fildl
cmp
imul
dec
aad
add
push
add
or
xchg
add
hlt
add
scas
aad
ret
out
dec
rolb
add
repnz
mov
jb
xor
rolb
and
mov
lock
and
cmp
add
mov
add
mov
loope
in
leave
int
insb
ud1
mov
jle
xor
mov
icebp
xor
icebp
add
and
mov
punpckldq
mov
pop
testb
aad
insb
addr16
out
mov
add
sub
sub
out
shrl
mov
xchg
add
pop
das
xchg
jecxz
add
add
clc
add
mov
add
or
fcmovu
js
sbb
cld
cltd
insb
cld
pop
daa
gs
add
mov
mov
stos
jmp
pop
loop
repnz
rol
add
xchg
add
dec
pusha
add
cwtl
pop
ret
mov
add
add
add
push
add
mov
xchg
pushf
sbb
add
pmullw
push
add
add
stos
xchg
jnp
xlat
imul
add
adc
and
pop
mov
fcom
add
mov
add
les
mov
inc
push
adc
aaa
sub
popl
stos
cli
pop
or
dec
cmp
add
xor
daa
mov
add
push
add
add
pop
sbb
push
lea
testb
add
loope
add
add
add
cmpl
add
mov
dec
in
mov
add
aad
add
add
movsb
add
cltd
mov
jp
test
dec
jo
push
shrl
and
mov
add
or
adc
pop
and
movsl
push
rolb
cltd
jecxz,pn
cmp
mov
ljmp
in
stc
out
testb
aaa
loop
mov
scas
jb
dec
add
mov
icebp
mov
mov
rcll
lods
or
jae
push
rolb
push
inc
add
jge
add
adc
jle
movsb
add
add
out
jg
dec
into
add
add
and
add
add
adc
or
add
mov
dec
in
sahf
test
add
add
or
mov
repnz
add
jp
and
int3
push
add
or
add
and
mov
add
mov
pop
pushf
fwait
lods
add
jge
add
das
dec
loopne
add
sub
and
push
imul
xchg
add
or
scas
jge
add
cmc
or
xchg
pop
roll
sbb
xchg
cmp
add
xlat
stc
jnp
push
add
add
sub
add
sbb
add
dec
rol
std
cmp
notl
add
mov
cmc
in
mov
jnp
and
lods
mov
cmp
rolb
aas
cmp
add
rcl
cmp
mov
add
rolb
outsb
and
mull
add
pushf
ret
mov
out
inc
add
pop
adcl
xor
add
xchg
xchg
add
lret
hlt
add
sar
dec
and
imul
adc
sub
movsl
setge
add
psraw
add
xchg
cvtps2pd
mov
test
icebp
arpl
addb
outsb
outsl
std
les
lock
pop
adc
fldl
and
imul
add
or
add
push
add
add
clc
testb
addr16
setns
add
adc
add
mov
loop
jmp
test
pop
xchg
repz
dec
sub
jmp
inc
call
or
sbb
xor
add
adc
add
mov
adc
gs
add
cmp
xor
hlt
add
adc
sub
add
stos
bound
mov
inc
add
data16
call
xchg
adc
rolb
roll
push
add
test
and
pusha
add
adc
xor
sub
jb
aas
cmpsl
xor
add
aad
iret
lds
add
push
and
mov
add
dec
int3
mov
add
add
loop
mov
cmp
fcmove
or
insl
out
shrl
or
jg
push
add
add
sub
outsb
and
mov
fldenv
add
xor
mov
cltd
push
js
mov
add
pop
dec
push
into
mov
inc
aam
inc
leave
repz
push
add
add
sub
js
pop
es
mov
add
add
add
ffree
dec
cmp
add
add
test
add
out
xchg
cmp
fimull
out
jne
gs
cmp
ss
mov
jmp
push
add
mov
add
mov
nop
add
popa
xchg
add
dec
add
inc
add
push
add
add
mov
add
pushf
cmp
bound
mov
or
dec
or
add
xchg
add
add
stos
push
add
test
xchg
sbb
rolb
imul
fsubrp
sbb
add
add
mov
xor
jae
lahf
insl
mov
add
scas
sub
popl
stos
cmp
push
add
in
mov
add
jne
jl
push
add
or
push
add
scas
aas
sbb
das
jle
sub
push
add
cmp
dec
pushf
and
mov
jae
add
inc
nop
add
add
out
pop
adc
add
add
mov
mov
xchg
push
add
ljmp
call
add
test
popf
sbb
xchg
and
dec
mov
mov
mov
xchg
add
sub
jle
add
lahf
and
negl
push
add
ret
xchg
dec
or
jns
nop
add
dec
movswl
addb
and
fisubl
xor
xchg
jo
pop
cmp
add
mov
xor
xorl
push
add
mov
add
dec
or
jecxz
addb
add
add
and
les
adc
add
push
add
add
mov
mov
add
mov
enter
xor
ret
xchg
ljmp
out
xchg
and
add
mov
fisubrl
add
addb
add
test
sub
adcl
hlt
add
add
mov
aas
pop
int3
test
fbstp
mov
cmp
add
in
ret
adc
scas
and
adc
dec
leave
aam
pop
dec
addb
jg
pop
js
dec
sub
add
dec
addb
cmp
jae
iret
jp
mov
add
jmp
mov
add
ds
imul
jg
stos
add
add
sbb
add
fstpl
pop
jmp
or
mov
jbe
mov
or
add
popf
xchg
add
add
scas
subl
lods
or
lret
mov
rolb
mov
add
jns
jp
mov
add
jg
add
mov
add
mov
add
mov
add
add
mov
movb
addb
cmp
sbb
add
or
jecxz
pop
data16
add
mov
xchg
lret
inc
or
mov
add
int
dec
inc
cmp
cmc
cmp
dec
lahf
sub
and
loopne
mov
cmp
cmpsl
out
stc
out
dec
xchg
fldcw
or
add
fwait
jo
xchg
add
xchg
in
addb
mov
mov
add
add
lods
ss
add
add
push
add
add
adc
rcrl
jl
rolb
scas
adc
lar
mov
out
mov
add
testb
push
add
in
dec
pop
inc
add
push
dec
mov
inc
sbb
xchg
addb
add
cmpsl
jge
pop
popa
cmp
call
add
or
rolb
hlt
add
imull
and
mov
pushf
arpl
lea
push
add
mov
xor
gs
mov
outsl
in
in
add
add
das
adc
adc
xchg
add
push
add
or
iret
pop
mov
inc
add
and
mov
stos
aam
hlt
add
add
add
fwait
and
mov
test
rcrl
pop
stos
clc
push
add
add
out
xchg
testb
add
mov
loope
add
add
and
fidivs
inc
cmp
add
sbb
sub
jg
ret
mov
add
incl
add
hlt
add
mov
inc
add
call
in
out
add
lods
ret
lock
add
je
push
add
add
je
adc
mov
xchg
enter
inc
data16
push
into
test
add
add
add
dec
int
flds
bound
mov
fidivrs
stos
jl
icebp
pop
dec
push
and
mov
rolb
add
movl
mov
rolb
mov
mov
sub
sbb
mov
add
in
fdivl
add
js
jo
sub
fwait
mov
pushf
sbb
fdivrs
dec
and
xchg
mov
mov
pop
test
jno
imul
xor
mov
mov
inc
add
lods
sbb
add
popf
push
and
add
pop
sbb
add
add
add
push
cmp
cld
bound
mov
xchg
add
cs
ffree
add
add
push
add
add
push
add
add
add
pop
outsb
lds
xchg
in
jnp
lods
repz
adc
loopne
out
mov
xor
imull
xchg
add
adc
pop
or
loop
daa
sbb
inc
add
add
add
add
xor
and
loope
cs
in
mov
mov
fwait
dec
mov
pop
mov
rolb
cmp
sbb
bound
mov
add
dec
out
daa
in
mov
push
lret
fiadds
add
mov
into
sub
jnp
add
test
out
xor
and
je
lock
cmpsb
add
add
lret
add
mov
add
pop
xchg
ficoms
and
mov
adc
out
mov
pop
sti
cmpsb
add
mov
add
jbe
push
add
mov
dec
int
into
fisttpll
add
test
jge
adc
add
stos
xor
jo
cli
push
in
hlt
add
add
mov
pop
push
add
imul
mov
push
inc
aam
inc
jge
jge
lods
rcrl
enter
xlat
cmc
mov
mov
loopne
push
mov
adc
xchg
rolb
add
mov
je
ja
xchg
std
aas
jmp
xchg
add
popf
sub
call
sub
add
push
add
xchg
add
mov
add
add
add
cltd
sti
rolb
or
add
clc
jbe
sbb
mov
test
out
insl
or
dec
push
add
bound
mov
scas
ljmp
lcall
and
inc
daa
sub
add
add
add
pop
adcl
add
notl
cmp
xchg
mov
sub
add
add
add
dec
fld
insb
arpl
stos
std
push
add
je
dec
lock
cmp
mov
outsb
mov
push
add
bound
mov
stos
addb
pop
int
dec
inc
add
add
mov
or
pop
push
add
add
add
or
add
jb
add
outsl
insl
jg
add
push
add
xor
add
stos
push
cld
cmp
add
cmp
fistpl
add
pop
das
adc
sub
add
jae
sbb
mov
adc
push
xchg
add
add
inc
add
add
add
scas
testb
and
jne
sub
test
dec
test
fiaddl
fwait
sub
ds
outsl
addb
xchg
pop
iret
inc
add
inc
add
data16
cwtl
bound
mov
add
pop
xchg
add
test
inc
add
or
push
cmp
sti
in
icebp
sub
xchg
lock
jl
jl
outsb
xlat
push
lcall
add
add
add
inc
sbb
sbb
jne
das
in
xor
out
lods
out
bound
mov
add
pop
mov
in
jne
add
add
shll
add
cmp
add
shll
mov
add
pop
mov
daa
addb
add
add
ret
cmpsb
add
mov
jmp
pop
or
push
jnp
add
das
xchg
add
add
add
movsl
movb
scas
sbb
xchg
add
inc
adc
lret
ret
add
jge
xlat
xor
jbe
popl
add
mov
push
stos
into
xchg
jnp
and
add
add
add
add
add
mov
popl
stos
bound
mov
ficoms
stos
cmpsb
add
mov
xchg
mov
movsb
add
push
add
das
add
ret
adc
fnstcw
orl
or
pop
and
cwtl
les
jnp
bound
mov
mov
addb
and
gs
mov
subl
aam
mov
pop
fisttpl
inc
push
xor
sub
mov
flds
repnz
addb
rolb
out
cmp
imul
fmuls
add
mov
sbb
push
in
movb
lods
add
dec
data16
and
mov
add
jns
shll
outsb
addb
push
sub
cwtl
mov
enter
out
hlt
add
mov
insb
xchg
add
mov
add
push
add
add
rolb
test
xor
add
jnp
inc
das
push
add
add
pushf
in
movsb
add
loop
sub
or
xor
xorl
xor
jne
je
lock
add
add
inc
jnp
movsb
add
add
adc
out
jns
sbb
mov
inc
add
push
faddl
mov
fsubrp
add
add
push
add
popa
push
add
xchg
imull
test
xlat
rcll
inc
jne,pt
out
insl
sub
add
inc
pop
and
mov
xor
add
add
stc
repz
jle
add
dec
inc
add
fcomi
mov
add
add
add
xlat
fbld
mov
add
inc
add
add
lods
or
arpl
cmp
xchg
fprem1
aad
add
mov
cli
gs
loop
mov
fcomip
icebp
xchg
and
mov
lcall
mov
addr16
and
dec
xchg
cmp
sbb
adc
push
push
add
mov
cld
cs
add
shll
add
add
icebp
ljmp
add
dec
cld
push
or
les
pop
cmpsl
daa
adc
add
mov
addr16
rolb
add
jl
aaa
dec
xchg
dec
add
mov
lahf
pop
and
add
add
add
in
out
ja
xor
push
add
add
add
add
add
add
in
mov
mov
sub
jb
cmp
add
or
repz
int3
cli
in
lods
push
and
sbb
lods
push
add
add
lret
add
mov
jmp
add
add
mov
pop
subl
or
iret
adc
add
add
add
gs
sub
imul
sub
stos
imul
add
add
aas
push
add
jns
add
stc
inc
add
rolb
lods
addr16
dec
pop
xor
add
stos
das
out
add
mov
outsl
aam
and
mov
mov
add
jb
pop
ljmp
mov
mov
les
mov
bound
mov
cmp
xchg
add
add
or
ror
jle
popa
pop
mov
out
testl
mov
add
movb
in
mov
xor
aam
push
cmc
lret
aaa
addb
cmp
test
push
add
add
mov
outsb
out
pop
push
add
and
mov
add
movsb
add
add
add
xchg
out
mov
loopne
cmp
xor
adc
dec
int
jns
xchg
add
add
xlat
shll
mov
add
push
add
inc
add
add
rolb
xor
rolb
stc
inc
leave
jmp
and
xchg
jne
icebp
in
daa
xor
push
mov
int3
jecxz
jg
xchg
add
dec
inc
add
xchg
cmc
sbb
add
sbb
movsl
arpl
add
add
and
movsb
add
andl
add
and
and
jo
popl
outsl
mov
in
test
adc
inc
add
rolb
sbb
mov
inc
add
in
adc
mov
dec
testb
ret
addl
add
mov
xchg
add
subl
data16
jmp
les
mov
repnz
sub
stos
repz
sbb
sbb
add
rolb
enter
mov
jne
mov
and
jbe
in
add
add
inc
lods
scas
pop
hlt
add
push
add
xor
adc
push
mov
xor
fisttps
pop
add
roll
es
add
lea
sbb
jnp
add
add
sub
add
and
pop
fwait
clc
insl
add
decb
jb
pop
mov
add
xor
add
add
loopne
pop
pushf
repz
or
add
and
pusha
add
add
lds
add
jb
xchg
fisubrs
dec
pop
aaa
mov
inc
add
add
and
inc
add
add
or
sub
xor
mov
push
mov
or
push
add
push
add
je
push
add
jmp
sbb
loope
int
inc
movsl
lret
add
add
divl
sub
jmp
repnz
xchg
scas
inc
add
loop
les
arpl
insl
pop
xor
popf
add
cmp
dec
jle
xor
mov
out
xchg
add
push
add
xchg
push
add
lods
aaa
gs
add
addr16
push
mov
xor
mov
loop
xor
push
add
sub
repnz
pusha
add
test
xor
popa
insb
mov
add
adc
jmp
aaa
sahf
sub
sbb
rolb
frstor
ja
fwait
mov
mov
pop
punpckhdq
add
jl
mov
mov
jno
add
inc
aam
jl
mov
push
cld
fsubrl
nop
add
out
rcrl
xchg
fstl
pop
fld
mov
or
sub
pop
les
sbb
call
repnz
lock
pop
sbb
insb
xor
push
add
xchg
jno
fmuls
fstl
add
add
xchg
mov
add
add
add
add
xchg
add
xor
xchg
or
mov
add
and
mov
inc
add
mov
add
int3
lea
idivl
xchg
pop
movsb
add
lahf
add
mov
inc
mov
add
mov
clc
ret
jo
jbe
sbb
cwtl
lret
out
xor
scas
outsb
scas
aam
enter
cmp
lret
icebp
aad
mov
je
inc
add
mov
call
repz
in
fwait
testb
add
enter
mov
xor
fldenv
add
mov
add
mov
mov
add
add
jb
fisubs
sbbl
imul
aaa
mov
sub
test
jl
lcall
addb
ljmp
cmp
imul
add
cmp
mov
shrl
add
jecxz
push
add
call
push
cmp
add
les
push
add
out
xchg
add
sub
sahf
mov
add
or
rolb
pop
mov
jne
sbb
das
lods
inc
and
mov
xor
fcmovne
or
bound
mov
fiadds
mov
add
out
mov
js
or
jmp
mov
enter
addb
stos
add
mov
add
dec
loope
std
inc
add
inc
jne
daa
sbb
xchg
add
mov
in
call
sub
xor
testb
jecxz
mov
sub
sti
sti
xchg
adc
mov
lods
jl
add
xor
dec
xchg
mov
rolb
mov
call
add
subl
cmp
pop
mov
fistps
lea
add
pop
mov
sbb
pop
mov
add
add
mov
out
test
data16
sahf
push
aad
push
add
and
int
add
nop
add
jns
add
add
inc
add
nop
add
add
mov
dec
into
xor
mov
inc
jno
mov
or
aad
or
sbb
cmp
mov
push
fiaddl
push
add
repz
add
mov
add
jbe
ficoms
add
jno
in
add
add
mov
add
add
addr16
push
sub
test
fildl
outsb
adc
mov
loop
xchg
add
ret
add
inc
leave
mov
cmp
add
inc
add
add
mov
mov
movl
orl
stos
pusha
add
cwtl
popl
mov
or
repz
add
cwtl
and
mov
les
push
add
sahf
fstl
fbstp
adc
xchg
add
or
mov
mov
pop
daa
add
mov
add
add
jbe
sahf
les
and
dec
aad
test
add
mov
mov
and
cmp
dec
inc
cwtl
test
mov
add
add
xor
fs
xlat
push
add
arpl
add
push
xchg
sbb
fcomps
popa
fisubs
or
add
imul
mov
hlt
add
enter
add
lock
add
xor
nop
add
cli
addb
cs
cmpsl
jne
movsb
add
xchg
movb
add
rolb
mov
stos
test
or
data16
add
mov
or
xchg
mov
push
nop
add
lret
ja
popf
xor
loop
sbb
mov
ficompl
data16
xor
sahf
xchg
scas
mov
or
std
add
mov
jge
pop
cs
add
add
orl
add
dec
inc
mov
cmovg
dec
and
adc
add
pop
jmp
sub
pop
add
pop
xchg
mov
ret
movsl
bound
mov
add
mov
mov
jae
add
add
jp
dec
jne
and
add
add
cmc
out
adc
adc
adc
je
push
mov
add
push
lods
adc
pop
mov
xchg
sbb
xchg
xchg
sub
aam
bound
mov
arpl
add
mov
sub
inc
add
mov
in
cmc
push
add
xchg
mov
inc
jb
adc
push
add
add
add
out
mov
data16
xlat
test
pop
or
add
jge
cmp
inc
push
arpl
add
mov
mov
xor
cmp
add
dec
les
rcll
pop
or
add
rolb
dec
mov
xchg
aam
jp
jbe
inc
enter
dec
cmp
xchg
add
mov
lods
je
mov
repnz
sub
cmpl
mov
mov
jle
push
push
add
shll
inc
mov
add
enter
xor
lock
adc
cld
sbb
inc
add
xchg
add
inc
dec
pop
dec
inc
add
jnp
push
add
push
jo
pop
jb
inc
add
rdmsr
add
mov
imul
xor
ds
push
add
add
add
add
add
add
add
xchg
fistl
add
sub
add
dec
stos
sbb
add
pop
insl
nop
add
push
setns
mov
jecxz
mov
js
fsubrs
add
insb
popa
inc
add
xchg
cltd
inc
loope
add
cmp
mov
add
adc
push
add
inc
add
or
dec
cld
roll
add
or
leave
sti
pop
bound
mov
int3
add
rolb
xchg
or
add
push
or
xor
loopne
ja
mov
mov
pop
and
stos
scas
or
add
add
and
add
mov
movb
add
jne
ret
cwtl
sub
imul
lcall
mov
add
push
add
cwtl
adc
add
add
pop
and
mov
add
lods
scas
and
xor
mov
pusha
add
inc
hlt
add
dec
mov
nop
add
mov
or
movsb
add
add
xchg
or
leave
ljmp
aam
daa
das
adc
jb
mov
or
push
ljmp
pop
sbb
jl
add
add
movl
dec
test
mov
add
mov
in
arpl
jno
ljmp
les
adc
lds
and
add
mov
ljmp
popa
mov
push
add
mov
ljmp
mov
xchg
dec
bound
mov
loope
add
add
add
movsb
add
fisubl
mov
loopne
in
dec
rolb
mov
mov
fs
add
sbb
add
std
enter
mov
xchg
and
add
push
add
xchg
add
cmpsl
cmp
or
add
cmp
or
scas
mov
rolb
add
loope
xchg
add
stos
repnz
adc
adc
mov
and
mov
lea
popf
jae
add
add
aam
adc
push
test
fisubl
out
outsl
adc
push
push
add
sub
sub
cmp
add
ds
add
cmp
stos
lcall
adc
push
add
mov
add
sbb
mov
rolb
aam
sub
lea
jecxz
add
add
jae
ja
and
sbb
cmp
add
mov
out
inc
add
int3
leave
sub
test
push
add
addb
dec
mov
add
pop
mov
add
add
pop
mov
add
add
or
dec
xchg
cmp
mov
xor
jp
add
outsl
scas
pop
pop
lcall
jae
insl
leave
sub
add
repnz
cmp
ljmp
outsl
cmpsl
push
add
rcl
add
pop
js
add
aas
add
insb
mov
sub
pop
outsl
dec
stos
mov
out
ficompl
cmc
sbb
cmc
cmp
cmp
add
add
popf
scas
mov
sub
add
push
add
xchg
add
cmp
scas
out
out
push
add
add
add
rolb
push
add
inc
add
js
rolb
inc
enter
pop
xchg
sbb
pop
push
inc
xor
adc
cld
cmpsl
mov
stos
movb
add
pop
addb
add
mov
add
push
xor
cmpsl
xor
add
jg
add
fildll
push
jo
xlat
adc
cltd
lret
xchg
adc
rolb
out
sub
aaa
ret
pop
mov
add
push
cmpsl
jae
pop
add
xchg
loope
fstpl
rolb
xor
pushf
push
outsl
mov
cmp
lock
ss
rolb
std
nop
add
jns
add
add
mov
add
add
add
xchg
mov
ljmp
mov
mov
lock
loopne
jbe
jle
into
xchg
out
pushf
out
je
mov
decl
add
push
add
inc
jg
pop
or
movsb
add
mov
cmpl
fsubr
mov
cmp
add
fmul
cld
inc
add
add
jle
push
add
mov
lods
hlt
add
add
inc
jbe
aas
jge
add
pop
sub
cwtl
jg
pop
data16
dec
xor
data16
inc
add
jp
push
add
add
add
sbb
add
add
mov
scas
js
add
jg
push
add
icebp
jl
test
loope
sub
and
sub
mov
push
bound
mov
ret
xlat
mov
add
add
add
and
lods
testl
mov
testb
cmp
je
or
add
mov
das
nop
add
in
cmp
scas
jl
add
rolb
inc
add
leave
and
rolb
orl
xchg
je
cmp
cmp
cltd
adc
rolb
test
stos
nop
add
ret
mov
repz
add
std
movb
shld
adc
add
add
inc
add
add
add
das
sbb
mov
jne
mov
dec
cltd
lcall
sahf
xor
add
in
push
std
or
mov
hlt
add
stc
out
ret
in
push
cmp
imul
inc
mov
and
mov
push
and
outsl
pusha
add
movsb
add
push
push
add
add
xchg
push
sarl
add
addr16
sbb
test
mov
mov
sub
add
pusha
add
js
repz
add
in
cmpsb
add
add
add
fcmovb
add
add
ret
jb
fwait
test
sbb
sbb
and
mov
inc
add
addb
cwtl
sbb
pushf
pop
pop
fsqrt
add
popf
inc
leave
jmp
add
imul
sub
add
int3
sub
mov
add
add
movsb
add
jmp
nop
add
add
cmp
fsubrs
pop
cmpsb
add
mov
mov
in
test
insl
sbb
jns
push
xor
in
push
mov
scas
xchg
add
movsl
xor
jle
sub
pop
cmp
add
mov
jno
jae
xor
add
cmp
push
add
add
add
add
inc
pop
ja
add
scas
mov
or
in
ud2
cmp
add
jecxz
scas
nop
add
sub
fs
add
dec
dec
dec
xchg
mov
push
cmp
out
sub
add
in
pushf
mov
add
push
add
and
add
movsl
sub
add
jae
add
outsl
xchg
add
in
and
mov
mov
repz
or
mov
mov
pop
in
jl
dec
add
mov
sub
push
add
add
inc
add
add
fistl
push
jnp
add
jnp
add
sbb
movb
call
imul
mov
dec
in
jae
fcoms
popa
push
rolb
add
fs
add
test
pop
bound
mov
fildll
out
lret
insl
jbe
into
lock
in
sbb
nop
add
test
or
push
movsb
add
inc
add
jle
mov
add
sub
test
add
add
add
add
xor
dec
sbb
push
add
cmc
testb
add
in
loopne
mov
mov
jae
out
lahf
fdivl
call
add
psubq
call
fmulp
jmp
add
imul
testl
clc
mov
es
add
mov
cmpsb
add
arpl
add
and
shll
enter
test
pop
gs
add
mov
stos
pop
testl
out
stc
stos
stos
out
insl
repz
add
mov
rcll
cmp
mov
add
ds
cmp
add
sub
xchg
add
push
add
pop
movb
out
cmc
sbb
xor
cmpsb
add
push
lods
addb
int
popf
rolb
add
repz
jns
pop
hlt
add
add
mov
jmp
jecxz
inc
out
pop
inc
add
mov
push
add
sub
or
cwtl
loope
add
int
add
insl
loope
je
movsb
add
in
add
add
xchg
jle
add
jp
add
mov
gs
and
add
adc
loope
inc
add
inc
xchg
js
inc
add
xor
adc
pop
sbb
add
lea
jae
inc
add
lds
add
stos
int
cmp
add
mov
cli
rolb
add
fdivl
and
add
add
add
dec
add
jns
mov
fiadds
mov
pop
xchg
fldenv
pop
mov
add
add
mov
cld
in
imul
add
fwait
jecxz
add
clc
lret
out
lods
lods
push
les
out
ja
add
add
inc
add
lods
out
mov
stos
xlat
push
add
int
std
sub
sub
mov
xchg
js
lret
mov
sub
push
es
and
mov
dec
scas
insb
xor
mov
mov
mov
out
add
add
mov
cmpsb
add
test
pxor
insl
in
xchg
sti
xor
enter
mov
inc
and
outsl
ds
iret
dec
xor
jp
jl
add
lahf
inc
add
add
daa
mov
scas
inc
aas
and
rolb
xor
in
add
add
imul
mov
add
out
outsb
rolb
fnstsw
mov
pushf
sbb
inc
add
push
inc
add
add
add
add
sahf
sub
stos
loopne
fmul
dec
test
or
add
int
js
mov
jp
leave
out
jb
adc
add
mov
sahf
lods
int
nop
add
cli
mov
pop
fstps
xchg
or
add
dec
fmull
je
xor
out
ret
into
cmp
add
inc
test
dec
sbb
das
push
outsl
lods
mov
and
loop
mov
add
mov
inc
mov
add
add
testb
sub
and
mov
ret
loopne
and
stos
sub
push
add
testb
and
in
add
add
cli
jge
add
lahf
sub
out
push
stc
out
xchg
jge
add
add
add
dec
in
sbb
mov
push
je
repz
push
add
pop
insb
je
into
jmp
xor
in
add
add
mov
in
lock
sbb
imul
mov
add
mov
insb
imul
add
fadd
add
lret
mov
mov
data16
add
in
push
add
cmp
jae
mov
add
push
add
add
mov
enter
pop
xchg
or
js
mov
shll
test
adc
xchg
jmp
lcall
js
push
add
mov
add
std
fsts
sbb
out
add
adc
mov
cmp
in
hlt
add
loope
pop
xor
push
mov
add
cmpsb
add
loopne
xchg
in
jge
adc
jmp
add
dec
orl
ret
or
xor
sub
out
aas
call
sbb
mov
sti
testb
sbb
add
add
imul
mov
add
sub
mov
mov
ret
insl
cmp
add
pop
or
add
add
sub
jne
fsubr
lea
insl
cmpsl
mov
add
andl
outsl
rolb
lds
xor
jae
loope
inc
add
cmp
add
add
in
jmp
sub
adc
pop
je
push
add
mov
int3
add
mov
xchg
aaa
xor
add
popf
jge
add
les
pop
rcl
push
testb
rcr
mov
add
xchg
testl
add
into
sbb
jo
pusha
add
jnp
add
add
rolb
add
pop
gs
lods
push
sahf
cli
fimuls
addl
jo
or
dec
cmp
jecxz
xor
mov
push
add
mov
pop
fwait
fs
mov
hlt
add
aam
sbb
add
insl
out
aad
add
adc
loopne
imul
gs
xor
mov
add
call
xchg
test
push
in
jmp
xchg
cmp
imul
add
pop
rorl
add
add
sub
aas
add
add
mov
call
mov
mov
add
add
in
mov
add
ja
int3
xchg
mov
sub
and
mov
xchg
addb
add
mov
cmc
inc
add
xor
pop
and
add
mov
fwait
aas
mov
add
add
test
mov
scas
in
add
pop
mov
jne
lret
xchg
add
push
ret
lods
mov
add
add
enter
jmp
fwait
movl
out
jb
maxps
add
add
push
add
add
push
bound
mov
add
cld
pusha
add
cmp
xchg
and
in
add
call
mull
ret
into
sbb
push
add
xchg
aas
lret
and
mov
add
jo
inc
add
add
push
or
in
out
push
sbb
arpl
add
je
int3
xor
enter
rolb
mov
mov
add
jmp
stos
xchg
sub
add
add
add
mov
inc
sti
cs
stos
and
mov
xchg
pop
lret
imul
or
cmp
popa
stos
jns
pop
dec
imul
xchg
mov
cs
arpl
jmp
xor
xchg
add
in
mov
xchg
leave
pushf
pop
cmp
xchg
add
or
push
addr16
add
push
add
pop
insl
cmp
stc
jp
add
add
add
xor
pop
jne
and
add
add
btr
mov
aas
je
jp
testb
push
inc
push
add
mov
mov
add
xor
fstpt
add
xchg
push
add
add
adc
xchg
add
add
xchg
sub
add
add
and
out
add
data16
iret
mov
add
out
rolb
rcrl
mov
rolb
and
and
or
add
xchg
push
add
add
inc
add
mov
loop
aas
inc
repz
add
add
add
add
or
mov
jge
push
cmp
add
rolb
jns
add
frstor
aaa
add
out
nop
add
push
inc
add
daa
sub
jmp
xlat
jmp
adc
orl
pop
in
test
jecxz
mov
fwait
xchg
lods
in
jns
add
rolb
jg
add
aas
cmp
or
add
xchg
add
dec
xor
add
das
or
sub
add
jo
cld
repz
dec
aaa
sbb
fldenv
sub
out
push
add
leave
fs
and
scas
and
mov
sbb
or
jne
add
outsb
int
add
stos
ret
add
mov
mov
add
add
rolb
rolb
mov
jnp
xor
or
fcoml
pop
adc
add
add
add
inc
add
mov
outsl
iret
in
subl
or
int3
loopne
xor
js
and
stos
and
addb
add
outsb
mov
adc
add
add
xor
bound
mov
inc
add
lahf
ds
enter
xchg
mov
add
cld
test
dec
xchg
add
fsubrs
ret
pop
mov
in
stos
xchg
sbb
push
or
add
add
stos
mov
ficomps
sbb
jg
addb
dec
push
pop
fucom
in
movsl
arpl
scas
adc
cmp
xlat
lea
popa
fs
push
in
push
inc
jl
je
test
xchg
cmp
xchg
test
jecxz
clc
test
jbe
xchg
mov
add
pop
jo
dec
mov
in
std
xlat
pop
setno
fbld
lock
add
add
icebp
test
push
add
les
add
pushf
shrl
inc
fsubrs
fld
add
add
add
enter
sbb
mov
add
pop
mov
jge
add
add
mov
add
mov
dec
mov
add
add
add
scas
movsb
add
xchg
or
add
outsl
movsb
add
fsubr
imul
rcl
shll
add
add
dec
sub
rolb
lret
mov
rolb
std
sub
arpl
add
xor
mov
or
push
repnz
mov
cli
addr16
movsl
push
test
add
movsl
jbe
xchg
push
add
add
add
clc
mov
add
lret
pop
pop
adc
inc
add
ficompl
loop
inc
pop
mov
pop
xor
xchg
stc
je
loopne
movsl
add
inc
add
xchg
xchg
push
add
add
xchg
add
les
mov
out
inc
add
bound
mov
lret
jl
pusha
add
add
inc
ja
cld
inc
add
and
mov
mov
test
jno
inc
add
sub
lods
por
jne
add
and
xlat
mov
jne
mov
leave
clc
jbe
inc
fists
adc
add
mov
js
jnp
add
mov
or
push
cmpl
xchg
jbe
dec
sub
add
lret
push
add
adc
push
and
mov
mov
lahf
sti
add
inc
add
add
xchg
add
aas
add
movsb
add
add
add
jp
enter
or
mov
add
xor
rolb
repnz
add
ljmp
add
add
ds
outsb
jp
mov
add
mov
add
add
test
add
pop
xorl
add
xor
jle
adc
mov
call
pop
std
and
add
add
push
pop
cmc
rolb
inc
add
ja
int
add
add
stc
lahf
stos
sbb
xor
call
pop
or
fists
add
push
adc
ds
add
out
add
push
or
popl
add
clc
xchg
std
inc
add
imul
push
cmpl
add
arpl
dec
sbb
add
das
testb
add
add
mov
cmovl
add
pop
mov
aam
sub
fsubrl
xor
sub
sahf
lret
hlt
add
add
mov
mov
add
push
add
lahf
mov
push
pop
out
push
stc
ljmp
mov
inc
add
add
sti
cmp
add
add
fisubs
mov
mov
add
pop
cmp
pop
add
jl
bound
mov
adc
std
jns
add
sub
sbb
lcall
inc
scas
out
push
add
insl
sbb
sub
add
or
add
add
loop
jmp
add
cmp
add
add
outsl
lock
pop
repz
mov
movhps
fs
out
mov
or
insb
imul
popf
ljmp
fmul
cld
push
rolb
stos
jns
add
movb
test
and
mov
add
jo
int3
dec
mov
add
icebp
adc
xor
add
ja
add
mov
imul
push
add
push
jle
push
add
in
push
enter
pavgb
push
bound
mov
shrl
xchg
adc
sbb
add
mov
mov
mov
add
add
mov
pushf
cs
loop
cmp
add
pushl
jo
ja
in
push
add
add
add
add
push
fldenv
inc
add
jne
add
lods
les
pop
lret
dec
or
mov
add
add
cmc
div
jle
add
xchg
dec
or
add
xor
addb
cmc
or
sub
add
sub
xchg
pop
inc
add
test
cltd
sub
add
add
adc
out
adc
adc
bound
mov
int3
add
movsb
add
pusha
add
lea
movl
pop
lock
add
mov
out
push
ret
clc
lret
add
add
sub
push
add
mov
add
adc
push
add
pop
ficoms
mov
cmp
ret
and
in
in
cli
fldt
rolb
jp
es
mov
lcall
sub
je
push
add
add
add
add
mov
add
dec
push
enter
lock
test
mov
add
adc
scas
roll
add
or
add
dec
cwtl
fbld
xchg
das
test
mov
add
add
adc
dec
pop
jle
insb
jecxz
add
mov
inc
add
loope
jg
pusha
add
lahf
into
dec
pop
fdivrl
add
rolb
lahf
jne
fcompl
cmpsl
push
jo
scas
dec
hlt
add
inc
add
or
outsb
inc
and
xchg
add
push
add
and
mov
icebp
or
bound
mov
add
inc
add
mov
push
frstor
cld
mov
fwait
push
mov
fmuls
push
add
je
pop
nop
add
sbb
nop
add
test
add
mov
out
addb
add
out
mov
xor
sbb
sub
add
pop
cmpsl
insl
out
push
jae
add
add
rolb
mov
sbb
xor
rcrl
dec
dec
orl
xchg
andl
jecxz
or
push
sbb
inc
and
mov
add
stc
movsb
add
rolb
mov
sahf
fs
add
mov
and
adc
jne
adc
sti
pushf
int
stos
mov
andl
mov
cmp
popa
pop
add
mov
add
mov
lahf
js
add
sub
add
mov
add
sub
add
iret
ljmp
xchg
push
cmp
dec
fisttps
adc
les
mov
add
or
push
add
arpl
xchg
mov
adc
dec
mov
aaa
call
frstor
or
clc
sahf
dec
xchg
add
mov
add
sbb
add
mov
js
lret
movb
xor
cs
imul
add
mov
mov
add
mov
jg
stos
cmp
data16
hlt
add
dec
mov
data16
add
mov
add
mov
add
mov
dec
and
mov
add
mov
cmp
lods
push
add
add
scas
pop
xchg
rolb
xchg
cld
mov
add
pop
jge
cltd
sbb
test
mov
add
dec
push
mov
lcall
pushf
movb
push
add
scas
rolb
mov
les
and
sbb
pop
mov
add
add
xchg
add
xlat
into
sahf
sbb
gs
pop
mov
ror
lock
addr16
test
add
shll
add
add
and
test
jbe
pop
pop
xor
fistl
jns
fldl
push
add
ret
dec
jne
cld
push
mov
cmp
rorl
loope
pop
jbe
outsl
or
jp
negl
xchg
add
xchg
add
ds
inc
add
aad
mov
cmpsb
add
mov
add
mov
daa
xor
lahf
lea
fidivrs
mov
sub
sub
xlat
cmp
out
rolb
shll
add
out
lahf
mov
xchg
add
mov
push
jbe
pop
out
and
mov
mov
jno
add
jno
push
arpl
loop
movsb
add
dec
or
add
add
inc
add
sti
scas
dec
lahf
lcall
addb
rolb
mov
add
mov
pop
mov
add
test
data16
xlat
aaa
or
add
sbb
ljmp
fisttpl
and
sub
out
lods
insb
adc
adc
push
shll
mov
sub
mov
adc
add
add
cmp
call
add
add
add
pop
mov
add
sbb
mov
add
add
scas
sbb
fcmovnbe
and
adc
and
mov
xchg
in
sub
mov
add
add
add
mov
dec
fdivs
fcompl
in
jmp
push
adc
mov
xchg
push
sbb
lods
push
add
ds
ret
add
cmc
lahf
xchg
enter
test
ss
add
pop
mov
ljmp
add
stc
and
mov
xchg
add
add
ficoms
dec
out
sub
cmp
mov
push
js
add
nop
add
add
xor
les
xchg
int3
dec
scas
jecxz
add
popf
sbb
add
xchg
add
insb
cmpsb
add
jle
push
movsb
add
add
adc
bound
mov
cwtl
cmp
mov
in
out
add
adc
jne
push
add
stc
negl
ret
cli
imul
add
das
inc
inc
add
xchg
add
add
add
insb
in
and
and
mov
sbb
and
add
cwtl
sbb
add
mov
movb
ljmp
in
test
or
inc
add
adc
pop
inc
add
jnp
add
add
sbb
add
sbb
faddl
cwtl
jl
jns
or
dec
mov
mov
add
add
jne
inc
add
xchg
mov
adc
xor
jp
add
stos
xchg
test
add
mov
add
mov
lock
mov
in
xlat
call
clc
fistps
xchg
add
jo
cmp
daa
enter
lcall
push
fldt
jecxz
mov
stos
inc
add
add
or
push
add
add
ja
popf
pop
int3
ret
mov
jmp
mov
add
mov
in
lret
add
add
inc
add
or
lahf
rolb
mov
jne
jg
xlat
out
jae
jl
mov
add
aas
or
add
mov
jmp
cmpl
inc
add
add
add
in
loop
sub
repnz
call
insl
jb
mov
addb
cli
xchg
add
setl
add
std
out
test
mov
sti
movsb
add
xchg
add
adc
cmp
jne
add
popf
popf
xchg
add
es
jl
add
add
add
pop
loopne
in
loopne
imul
movsb
add
add
pop
gs
push
add
dec
bound
mov
add
jle
pushf
add
sbb
jl
insb
lods
das
ja
jl,pt
mov
sub
pusha
add
mov
ret
loopne
xchg
push
jns
insl
les
repz
imul
pop
sub
add
ljmp
add
add
mov
outsl
cmp
notl
pop
imul
xor
pop
xor
xchg
add
xor
push
add
cmpsl
dec
icebp
mov
push
add
cltd
jb
pushf
mov
add
mov
add
add
add
add
mov
add
mov
imul
mov
fwait
out
sbb
xor
stos
fnstenv
addr16
mov
addb
enter
jle
xchg
add
decb
andl
dec
rep
notl
push
add
mov
movsb
add
add
mov
add
add
aam
jg
add
xor
roll
mov
fstp
xor
leave
mov
jnp
add
arpl
movsb
add
and
es
add
pop
in
mov
rolb
add
add
add
add
mov
adc
add
xchg
pop
pushf
mov
rolb
sub
dec
pop
fmuls
add
add
cmpsl
fwait
dec
out
xchg
sahf
sub
add
pop
inc
mov
add
push
push
fldl
into
repz
xlat
sub
mov
mov
add
jb
pusha
add
add
sub
add
add
icebp
push
add
dec
pop
das
add
add
xchg
mov
in
sub
sahf
push
jge
pop
enter
add
or
xor
mov
add
lahf
and
jge
mov
sub
add
add
adc
sub
add
repnz
rolb
and
mov
add
xchg
add
dec
add
lret
std
ret
outsl
sbb
dec
inc
add
fs
add
mov
aas
mov
add
in
addb
add
add
add
cmp
pop
add
imul
add
or
into
iret
dec
movsb
add
mov
sahf
lahf
pop
sbb
popl
add
cmp
inc
add
or
jmp
pop
int3
mov
les
pop
push
add
adc
mov
add
mov
bound
mov
repz
jg,pt
jl
sub
mov
testb
out
repnz
mov
add
pop
push
add
negl
mov
push
testb
out
andl
adc
mov
push
add
jbe
mov
in
shrl
imul
outsl
xor
shll
add
iret
fmull
ds
mov
ljmp
push
jns
push
add
jecxz
sub
add
dec
push
loope
sub
int3
hlt
add
add
add
fstpl
insl
aaa
jns
enter
lds
or
xlat
sub
fisttps
sub
rolb
inc
add
sub
add
add
insl
push
or
add
add
dec
add
push
add
addb
pop
cwtl
cwtl
ja
add
and
lcall
add
das
pop
mov
into
ja
add
add
add
add
or
push
push
push
add
adc
pop
ja
add
enter
data16
out
lret
fidivs
ljmp
xor
xor
mov
xor
cwtl
leave
jl
adc
out
sbb
rolb
bound
mov
imul
push
test
popa
clc
add
add
mov
add
push
add
add
add
mov
popf
push
cmpsb
add
add
add
xchg
dec
incl
sub
mov
add
add
clc
repnz
jae
add
popa
add
repnz
jae
sub
lock
mov
xchg
ret
add
add
add
mov
push
mov
xchg
ret
push
ret
stc
add
push
push
mov
xchg
ret
inc
js
mov
imul
call
clc
repnz
jae
add
add
decb
nop
jmp
add
add
pushl
clc
repnz
jae
aam
push
add
push
mov
mov
xchg
ret
mov
add
sar
push
mov
xchg
ret
add
mov
add
dec
sbb
nop
jae
mov
add
add
add
pop
jne
fwait
cld
nop
jmp
fs
aaa
xor
movsb
fwait
cld
nop
jmp
lock
add
add
out
sar
lea
fwait
cld
nop
jmp
add
movsl
add
add
js
cld
nop
jmp
add
popf
pushf
or
sti
call
clc
repnz
jae
inc
add
and
clc
xor
fwait
cld
nop
jmp
aam
addb
xor
and
push
mov
xchg
ret
pushf
add
clc
call
clc
repnz
jae
add
add
push
mov
xchg
ret
aad
add
add
clc
repnz
jae
add
add
add
adc
add
hlt
add
add
push
mov
xchg
ret
mov
add
add
mov
sub
clc
repnz
jae
lock
and
sbb
add
add
mov
push
push
mov
xchg
ret
add
add
add
jb
xor
xor
clc
repnz
jae
addb
add
add
mov
nop
jmp
add
xor
mov
clc
repnz
jae
imul
add
sub
pop
decl
clc
repnz
jae
inc
add
movsl
int
push
clc
repnz
jae
movsl
add
add
add
pop
mov
clc
repnz
jae
add
add
ljmp
nop
jae
push
and
push
mov
xchg
ret
add
push
add
or
jmp
nop
jmp
jge
mov
xor
add
clc
repnz
jae
int
mov
nop
push
mov
xchg
ret
testl
aad
shr
clc
repnz
jae
add
add
add
sbb
repnz
jae
add
adc
pop
or
xor
pop
rolb
xchg
ret
inc
add
add
dec
pop
push
fwait
cld
nop
jmp
jp
add
fisttpll
dec
xor
push
push
mov
xchg
ret
mov
add
xor
and
push
mov
xchg
ret
in
loopne
dec
jne
clc
repnz
jae
inc
aad
push
loope
xor
push
mov
xchg
ret
add
add
push
push
mov
xchg
ret
add
mov
dec
sub
faddl
xbegin
mov
sub
mov
push
add
mov
sub
mov
inc
add
add
push
and
clc
repnz
jae
xor
push
pop
xor
imul
pop
add
das
add
addl
pusha
add
nop
jmp
pop
add
dec
add
add
movsl
pop
mov
fwait
cld
nop
jmp
jp
add
jmp
rolb
xchg
ret
loopne
add
inc
add
fwait
cld
nop
jmp
add
ret
pusha
add
xor
jge
clc
repnz
jae
fs
dec
add
arpl
push
clc
repnz
jae
aaa
push
inc
sub
mov
inc
add
dec
cmp
repnz
jae
pop
and
add
add
jb
jae
clc
repnz
jae
add
rcrb
cld
pushl
dec
add
scas
enter
jae
push
rolb
mov
pop
movswl
clc
repnz
jae
loopne
int
fnsave
and
fwait
cld
nop
jmp
xor
inc
mov
dec
add
in
push
clc
repnz
jae
add
movl
xchg
jae
add
add
das
and
fwait
cld
nop
jmp
push
push
dec
add
jmp
clc
clc
repnz
jae
add
loopne
aaa
add
into
mov
clc
repnz
jae
add
add
push
add
add
push
add
fwait
cld
nop
jmp
divl
dec
adc
repnz
jae
cld
add
add
pop
push
dec
pusha
jmp
incl
add
pushf
add
adc
pop
dec
test
popa
add
mov
xchg
ret
add
andl
repnz
jae
add
rorb
cli
mov
fwait
cld
nop
jmp
push
add
lock
add
pusha
push
mov
xchg
ret
dec
pop
jo
add
inc
into
rep
push
mov
xchg
ret
int
add
add
aam
add
test
or
push
clc
repnz
jae
add
add
add
mov
fisttpl
test
add
add
repnz
jae
add
dec
cmp
repz
repnz
jae
add
push
jp
jo
ljmp
repnz
jae
add
add
or
js
add
add
aaa
outsb
outsb
push
add
add
out
sub
and
add
repnz
jae
add
test
fisttpl
test
adc
add
repnz
jae
pop
inc
add
mov
push
mov
xchg
ret
add
fs
cmp
loopne
add
or
add
repnz
jae
jge
xor
int
movzwl
clc
repnz
jae
add
aad
aaa
cmp
jae
push
add
jo
mov
pop
push
lea
fwait
cld
nop
jmp
dec
sub
inc
mov
add
popa
clc
repnz
jae
add
or
push
add
adc
jae
mov
les
add
mov
sbb
mov
add
inc
add
push
mov
xchg
ret
add
add
mov
add
clc
repnz
jae
xor
faddl
nop
jae
add
dec
add
inc
ficoml
inc
add
ret
add
mov
jmp
int
ret
add
cmp
cltd
je
jmp
decl
rolb
js
xor
add
repnz
jae
ret
inc
xor
rolb
dec
mov
clc
repnz
jae
ret
add
add
jns
clc
repnz
jae
add
add
add
jmp
rolb
add
add
add
add
add
dec
je
clc
repnz
jae
push
add
leave
mov
clc
repnz
jae
xor
sub
add
mov
clc
repnz
jae
test
add
add
mov
add
push
mov
xchg
ret
stc
movsl
add
add
add
lods
clc
repnz
jae
add
das
pop
add
je
xchg
jae
add
jne
fwait
cld
nop
jmp
lock
test
ss
add
and
push
mov
xchg
ret
add
add
mov
xchg
add
push
push
mov
xchg
ret
add
push
add
push
mov
xchg
ret
push
not
das
add
sub
mov
jne
clc
repnz
jae
js
add
mov
clc
repnz
jae
dec
pushf
mov
dec
or
mov
xchg
ret
dec
inc
add
mov
xchg
ret
dec
adc
stc
out
add
lock
mov
xchg
ret
add
in
add
fwait
cld
nop
jmp
add
add
data16
div
fwait
cld
nop
jmp
xor
xor
clc
repnz
jae
sbb
push
add
or
add
fwait
cld
nop
jmp
inc
add
dec
sub
pop
clc
repnz
jae
push
dec
xor
cmp
push
sbb
add
repnz
jae
pop
fs
add
mov
xchg
ret
add
mov
inc
add
clc
repnz
jae
add
add
add
ds
clc
repnz
jae
push
add
and
push
mov
mov
xchg
or
fistpll
sub
dec
add
pop
rolb
in
mov
clc
repnz
jae
add
aaa
add
clc
repnz
jae
aaa
mov
addb
nop
jmp
mov
sub
mov
mov
clc
repnz
jae
add
mov
iret
mov
push
mov
xchg
ret
add
add
xorl
les
add
add
repnz
jae
add
or
jmp
imul
push
add
add
and
repnz
jae
add
imul
pop
push
les
mov
add
push
fwait
cld
nop
jmp
aam
add
add
inc
xor
pushl
push
mov
xchg
ret
add
add
jg
clc
repnz
jae
jo
add
add
add
add
push
mov
xchg
ret
push
outsb
dec
add
sub
in
add
add
pop
stc
addb
scas
mov
fwait
cld
nop
jmp
add
add
rorb
nop
jae
fnstsw
add
out
add
add
push
mov
xchg
ret
sub
xchg
xor
clc
repnz
jae
add
pop
aad
or
inc
or
repnz
jae
add
loopne
push
add
pop
push
mov
xchg
ret
sub
int
xor
or
icebp
fldl
xchg
ret
add
add
add
pop
fwait
cld
nop
jmp
imul
mov
pop
mov
jne
push
mov
xchg
ret
outsb
fildll
cld
dec
cmpsb
add
shr
clc
repnz
jae
outsb
xor
lock
fcomps
push
add
add
add
leave
fwait
cld
nop
jmp
lock
xor
inc
add
mov
clc
repnz
jae
ret
push
mov
jbe
in
stos
add
js
mov
imul
nop
jmp
add
push
add
cmpsb
add
call
clc
repnz
jae
add
add
xor
iret
mov
fwait
cld
nop
jmp
push
test
or
push
add
fmuls
pop
inc
add
push
inc
add
xor
push
push
mov
xchg
ret
add
data16
jmp
jge
add
stc
test
movsl
add
add
clc
repnz
jae
or
push
test
clc
repnz
jae
fldl
sub
and
mov
cmp
ret
add
add
add
mov
xchg
ret
pop
aad
add
aad
nop
add
push
mov
xchg
ret
movsl
andb
add
add
add
add
add
add
pop
clc
repnz
jae
add
lock
push
clc
repnz
jae
js
jge
in
jne
clc
repnz
jae
add
clc
repnz
jae
rolb
add
sbbb
pusha
add
jmp
jae
adc
cmp
jae
add
repz
jnp
pop
std
incl
xor
add
add
fldl
inc
add
mov
clc
repnz
jae
add
add
push
push
mov
xchg
ret
add
add
fucom
aam
jne
clc
repnz
jae
or
xchg
inc
add
ret
clc
repnz
jae
add
out
dec
add
lods
push
push
mov
xchg
ret
add
aad
add
jno
mov
clc
repnz
jae
pushf
dec
xor
mov
adc
cld
nop
jmp
add
mov
dec
fstpt
fwait
cld
nop
jmp
add
add
add
mov
clc
repnz
jae
jp
add
add
sbb
push
mov
xchg
ret
add
pop
add
add
mov
repnz
jae
add
add
subl
in
add
test
add
xorl
add
push
fnstsw
loop
jb
sti
add
clc
repnz
jae
movl
add
push
clc
repnz
jae
add
aad
inc
add
cmp
rcrb
repnz
jae
stc
push
add
aam
dec
mov
push
mov
xchg
ret
add
sub
add
ds
clc
repnz
jae
jp
mov
repnz
jae
add
sub
dec
lcall
repnz
jae
add
in
pop
add
aaa
inc
lea
mov
xchg
ret
pop
mov
sub
pusha
clc
repnz
jae
push
aam
add
adc
add
repnz
jae
aad
add
cld
inc
clc
repnz
jae
sbb
inc
add
add
add
repnz
jae
add
dec
lock
rolb
ja
mov
push
mov
xchg
ret
js
add
loopne
mov
inc
adc
add
repnz
jae
pop
sbb
add
repz
cld
nop
jmp
dec
add
fs
push
clc
repnz
jae
add
add
add
push
clc
repnz
jae
mov
add
mov
clc
repnz
jae
inc
mov
add
add
lea
clc
repnz
jae
add
adc
add
jb
clc
repnz
jae
add
add
clc
repnz
jae
add
add
add
cmp
fwait
cld
nop
jmp
add
inc
add
add
push
mov
xchg
ret
add
movl
add
add
subl
incl
mov
pop
add
add
repnz
jae
add
add
add
jmp
add
add
add
push
clc
repnz
jae
add
rclb
dec
mov
nop
jae
jp
add
testl
cltd
and
clc
repnz
jae
outsb
add
dec
or
test
or
add
repnz
jae
loopne
jp
testl
fwait
cld
nop
jmp
xor
int
jo
insb
mov
clc
repnz
jae
mov
add
add
mov
nop
jmp
add
dec
movsl
jge
ds
push
mov
xchg
ret
add
dec
add
out
add
repz
mov
xchg
ret
int
add
dec
sub
nop
jae
mov
mov
add
add
clc
repnz
jae
add
add
mov
cmp
roll
xchg
ret
outsb
add
push
clc
repnz
jae
push
add
cld
adc
or
cld
leave
fwait
cld
nop
jmp
add
add
testl
mov
fwait
cld
nop
jmp
popf
sub
ret
push
cld
nop
jmp
das
add
inc
add
movsb
clc
repnz
jae
inc
add
dec
add
clc
repnz
jae
imul
filds
fwait
push
clc
repnz
jae
add
add
sbb
nop
jmp
add
rolb
add
pop
jae
test
fwait
cld
nop
jmp
inc
dec
sub
pop
movsb
add
push
clc
repnz
jae
jp
inc
add
mov
push
mov
xchg
ret
pop
cmp
add
cwtl
add
clc
repnz
jae
or
add
push
add
add
push
clc
repnz
jae
jo
in
add
add
ds
push
mov
xchg
ret
add
sbb
add
add
cmpl
fwait
cld
nop
jmp
mov
popf
movb
dec
push
mov
xchg
ret
stc
js
aad
add
push
jae
add
test
pop
push
mov
aas
sub
add
das
add
pop
in
dec
test
add
cmp
cld
nop
jmp
add
cmp
add
repnz
jae
add
pop
mov
push
mov
xchg
ret
jp
inc
add
jbe
leave
add
clc
repnz
jae
add
mov
add
or
add
clc
repnz
jae
out
das
add
jg
popa
fwait
cld
nop
jmp
add
add
or
sub
repnz
jae
add
mov
add
dec
adc
es
and
or
add
mov
push
mov
xchg
ret
mov
xor
add
mov
fwait
cld
nop
jmp
mov
add
mov
pop
clc
repnz
jae
pop
add
add
add
or
movsb
clc
repnz
jae
add
sub
xor
xor
add
clc
repnz
jae
add
add
in
fisttpl
mov
xchg
ret
add
add
push
pushf
mov
clc
repnz
jae
add
add
and
cmp
mov
repnz
jae
sub
push
add
cmp
fwait
cld
nop
jmp
test
adc
repnz
jae
mov
add
add
inc
add
mov
xchg
ret
dec
add
add
dec
sbb
nop
jae
stc
int
add
mov
and
fwait
cld
nop
jmp
pop
js
movl
xor
fwait
cld
nop
jmp
add
cld
or
add
push
lret
adc
add
pop
mov
add
enter
clc
repnz
jae
in
mov
add
ficomps
mov
xchg
ret
add
add
push
cmpsl
inc
add
sub
jl
inc
add
mov
add
mov
push
mov
xchg
ret
cld
add
add
inc
jnp
test
cli
clc
repnz
jae
add
not
add
mov
clc
repnz
jae
add
add
add
test
clc
repnz
jae
test
pop
clc
repnz
jae
inc
inc
addb
add
rorl
jmp
aam
imul
add
rep
clc
repnz
jae
add
and
popf
add
inc
push
cmp
mov
push
add
das
fs
jp
out
xchg
add
mov
mov
xchg
ret
pushf
mov
add
and
pushl
push
mov
xchg
ret
aad
sub
shl
clc
repnz
jae
aaa
cmp
mov
sub
clc
repnz
jae
jo
add
outsb
mov
hlt
add
sub
repnz
jae
add
jne
clc
repnz
jae
push
push
add
nop
jae
add
pop
mov
clc
repnz
jae
add
aad
rolb
fsts
repnz
jae
xor
add
cmp
repnz
jae
add
dec
add
add
xor
clc
repnz
jae
popf
add
movb
sar
push
mov
xchg
ret
pop
add
add
mov
repnz
jae
aad
sub
add
pop
clc
repnz
jae
add
push
dec
mov
cmp
dec
or
repnz
jae
add
add
or
add
cmp
repnz
jae
add
dec
add
popf
or
repz
in
push
mov
xchg
ret
add
fistps
clc
repnz
jae
add
mov
adc
add
add
incl
fwait
cld
nop
jmp
add
mov
stc
push
clc
repnz
jae
push
int
add
add
push
add
adc
xchg
xchg
add
cld
nop
jmp
out
addb
das
add
cmp
push
enter
cmp
ret
push
add
add
imul
mov
pop
add
clc
repnz
jae
add
mov
clc
repnz
jae
add
adc
jne
fwait
cld
nop
jmp
mov
xchg
ds
fwait
cld
nop
jmp
add
add
push
nop
jmp
add
add
xor
sbb
add
add
mov
or
sti
clc
repnz
jae
pop
add
add
add
je
js
mov
xchg
ret
add
dec
mov
clc
repnz
jae
pop
popf
push
add
jecxz
add
cld
nop
jmp
frstor
add
int
add
sub
clc
repnz
jae
xor
cld
inc
shrl
jle
push
mov
xchg
ret
add
add
add
xabort
nop
jae
add
in
add
add
test
repnz
jae
mov
add
jmp
je
sub
movsl
movb
cmp
ret
add
add
add
mov
jmp
incl
dec
add
add
pop
sbb
js
add
nop
jae
add
push
imull
das
add
jae
mov
add
add
aad
add
repnz
jae
add
pop
add
sub
out
div
fwait
cld
nop
jmp
or
add
cld
add
push
clc
repnz
jae
stc
add
aaa
cld
aam
pop
popf
pusha
clc
repnz
jae
or
int
add
int
and
fwait
cld
nop
jmp
dec
in
mov
add
testb
add
push
aaa
ds
clc
repnz
jae
int
jge
or
sar
nop
jae
movsl
push
imul
mov
and
fwait
cld
nop
jmp
pop
cld
add
or
clc
repnz
jae
ret
push
add
mov
clc
repnz
jae
add
add
add
adc
add
mov
adc
add
and
pushf
jo
shl
sub
movb
ret
add
add
cld
dec
add
mov
nop
jae
lock
add
aad
pop
je
clc
repnz
jae
movsl
add
add
clc
repnz
jae
add
xor
jne
clc
repnz
jae
sub
in
in
mov
clc
repnz
jae
inc
movl
push
mov
xchg
ret
add
cmp
sub
nop
jmp
loopne
cmp
add
add
jne
add
repnz
jae
inc
dec
int
add
add
repnz
jae
push
inc
mov
add
roll
imul
clc
repnz
jae
add
add
sar
inc
add
adc
movsl
outsb
testl
push
mov
xchg
ret
xor
popf
cmpsb
add
rclb
rolb
xchg
ret
push
js
add
push
and
cld
nop
jmp
pushf
pop
dec
add
add
call
mov
xchg
ret
add
jp
cmp
inc
and
repnz
jae
add
inc
lock
mov
nop
jae
addl
outsb
add
repz
repnz
jae
add
jo
add
mov
rclb
in
inc
add
or
add
add
clc
repnz
jae
outsb
add
inc
in
lock
add
repnz
jae
inc
add
inc
add
xor
add
clc
repnz
jae
add
mov
scas
les
clc
repnz
jae
mov
add
call
add
push
add
call
add
jl
dec
push
clc
repnz
jae
inc
add
adc
lea
clc
repnz
jae
push
cmp
sub
frstor
mov
dec
mov
clc
repnz
jae
pop
dec
xor
add
call
clc
repnz
jae
add
xor
mov
add
add
sldt
pop
add
repnz
jae
pushf
mul
mov
push
loopne
mov
xchg
add
add
xor
fldl
add
pop
clc
repnz
jae
add
adc
jo
movsl
negl
mov
xchg
ret
add
lock
movzwl
clc
repnz
jae
mov
add
inc
adc
repnz
jae
add
xor
int
pop
mov
fwait
cld
nop
jmp
dec
dec
cld
jp
add
xchg
nop
jmp
sub
mov
add
add
add
clc
repnz
jae
add
jp
add
mov
lea
cmp
clc
repnz
jae
add
add
sbb
jae
lock
cmp
mov
push
repnz
push
clc
repnz
jae
inc
sub
jp
addb
and
clc
repnz
jae
movsl
add
fldl
push
mov
xchg
ret
add
add
add
add
clc
repnz
jae
add
add
add
add
jae
inc
add
add
add
or
repnz
jae
jp
add
jbe
cltd
cmpl
fwait
cld
nop
jmp
loopne
and
add
xor
sti
push
mov
aad
repnz
insl
sub
imul
addr16
nop
jae
dec
add
push
push
add
cli
je
clc
repnz
jae
add
add
push
fwait
cld
nop
jmp
pushf
cmp
inc
jo
add
push
inc
add
imul
addl
sub
imul
and
cld
or
add
and
clc
repnz
jae
cmp
xor
mov
fwait
cld
nop
jmp
js
outsb
add
add
cld
cld
nop
jmp
add
jp
mov
add
leave
push
clc
repnz
jae
add
and
or
lret
inc
add
dec
jo
filds
sbb
xor
add
fwait
cld
nop
jmp
add
sub
stos
fwait
cld
nop
jmp
pop
js
aaa
dec
add
jo
push
push
mov
xchg
ret
add
or
clc
repnz
jae
rolb
outsb
add
add
cmc
stos
cmpw
fwait
cld
nop
jmp
aaa
add
pop
and
mov
mov
clc
repnz
jae
add
push
fs
push
idiv
clc
repnz
jae
add
add
add
je
clc
repnz
jae
dec
push
add
push
xchg
add
rolb
add
push
push
mov
xchg
ret
adc
push
stc
addl
cld
nop
jmp
dec
add
xor
sub
pop
ror
clc
repnz
jae
int
dec
mov
add
add
add
clc
repnz
jae
add
add
dec
push
clc
repnz
jae
sbb
aam
dec
inc
add
inc
outsb
mov
clc
repnz
jae
dec
add
stos
rep
clc
repnz
jae
jge
add
test
push
xchg
jne
clc
repnz
jae
cld
add
sbb
add
push
clc
repnz
jae
add
lock
push
clc
repnz
jae
cmp
inc
dec
pop
add
push
shl
clc
repnz
jae
add
add
sti
clc
repnz
jae
js
mov
sbb
nop
jae
add
jo
aaa
mov
mov
push
mov
xchg
ret
pushf
or
add
push
mov
xchg
ret
push
add
movsl
add
mov
test
push
add
jmp
add
mov
add
or
movb
add
clc
repnz
jae
add
loopne
mov
clc
repnz
jae
popf
inc
inc
sub
imul
add
add
add
add
sbb
repnz
jae
dec
dec
imul
lods
push
mov
xchg
ret
add
xor
add
add
clc
repnz
jae
ret
add
add
and
fwait
cld
nop
jmp
and
js
jo
loopne
mov
cld
nop
jmp
push
pop
aaa
add
add
outsl
add
clc
repnz
jae
add
add
sub
pop
push
mov
xchg
ret
xor
add
add
pop
cmc
ljmp
add
dec
dec
add
mov
push
lock
inc
push
mov
xchg
ret
add
add
add
loopne
mov
xor
pusha
fwait
cld
nop
jmp
add
test
adc
add
clc
repnz
jae
notl
jl
lret
clc
repnz
jae
add
add
das
add
mov
add
std
js
add
mov
clc
repnz
jae
add
or
pop
push
mov
xchg
ret
int
fldl
add
inc
insl
call
clc
repnz
jae
xor
fstpl
mov
clc
repnz
jae
dec
fbld
push
mov
xchg
ret
rorb
in
pop
clc
repnz
jae
out
add
mov
mov
xor
clc
repnz
jae
push
fs
dec
xchg
into
call
clc
repnz
jae
in
add
add
clc
repnz
jae
xor
jp
shl
push
mov
xchg
ret
add
add
add
jae
push
add
add
and
dec
idiv
clc
repnz
jae
imul
pop
clc
repnz
jae
add
add
add
dec
jmp
cmp
out
add
js
stc
push
add
in
jp
dec
outsl
popa
fs
repnz
jae
das
aaa
jp
cli
mov
fwait
cld
nop
jmp
pushf
mov
xor
jbe
clc
repnz
jae
add
sub
dec
mov
clc
repnz
jae
add
add
aas
add
clc
repnz
jae
dec
add
add
pop
push
clc
repnz
jae
add
pushf
js
add
fwait
cld
nop
jmp
cmp
xor
jbe
stos
mov
fwait
cld
nop
jmp
cmp
add
push
add
inc
add
lea
repnz
jae
dec
movl
add
mov
fwait
cld
nop
jmp
int
in
xor
pop
add
clc
repnz
jae
popf
movl
ret
jmp
add
add
aad
mov
pushf
testl
mov
repnz
jae
pushf
inc
add
add
andl
repnz
jae
add
push
add
ret
add
loope
cld
nop
jmp
add
add
aad
movsl
stc
push
adc
jmp
lcall
sti
lcall
add
bound
mov
add
aas
clc
repnz
jae
add
add
dec
add
rolb
jb
sbb
cld
nop
jmp
sbb
add
test
mov
clc
repnz
jae
add
insb
in
inc
add
dec
push
cld
add
dec
pop
decl
clc
repnz
jae
add
lock
in
mov
fwait
cld
nop
jmp
add
push
add
pop
call
clc
repnz
jae
add
adc
jb
shr
push
push
mov
xchg
ret
or
aad
mov
add
mov
adc
loop
lcall
add
pop
inc
add
add
add
mov
xchg
ret
add
add
mov
nop
jmp
add
and
rolb
add
out
add
clc
repnz
jae
push
int
add
jge
add
adc
clc
call
in
mov
ffree
sbb
jmp
jmp
js
js
add
add
add
jecxz
jp
push
mov
xchg
ret
xor
add
sbb
mov
xchg
ret
add
add
add
add
mov
nop
jae
add
xor
push
mov
xchg
ret
popf
cld
mov
fldl
jmp
mov
xchg
ret
xor
add
add
mov
popl
fwait
cld
nop
jmp
xor
imul
addb
mov
push
mov
xchg
ret
add
movsl
and
add
add
clc
repnz
jae
cld
outsb
js
outsb
add
movb
repnz
jae
lock
push
int
loope
pop
fwait
cld
nop
jmp
add
aam
inc
push
add
add
add
jne
clc
repnz
jae
pop
add
add
je
clc
repnz
jae
add
fs
add
add
mov
clc
repnz
jae
add
inc
add
leave
push
mov
xchg
ret
dec
add
divl
xor
xor
add
clc
repnz
jae
add
add
je
popa
pop
mov
clc
repnz
jae
add
fnstsw
add
add
repnz
jae
add
fcoms
mov
xchg
ret
add
and
test
xchg
jmp
add
inc
pushf
add
loopne
jp
add
dec
imul
jne
fwait
cld
nop
jmp
add
movl
test
cld
nop
jmp
or
stc
add
repnz
jae
add
movsl
ret
add
lods
movzwl
clc
repnz
jae
fs
int
push
xchg
or
repnz
jae
dec
popf
add
mov
clc
repnz
jae
testl
arpl
cld
nop
jmp
add
push
pop
mov
add
clc
repnz
jae
adc
in
je
pop
mov
clc
repnz
jae
add
add
aaa
sub
dec
adc
repnz
jae
mov
add
add
mov
call
xchg
inc
add
mov
add
add
and
ss
fwait
cld
nop
jmp
add
ret
mov
clc
repnz
jae
outsb
add
test
fstl
roll
mov
cmpl
fwait
cld
nop
jmp
cld
push
push
mov
mov
xchg
ret
add
add
mov
clc
repnz
jae
addl
push
mov
xchg
ret
movsl
fldl
add
test
mov
fwait
cld
nop
jmp
or
add
fwait
cld
nop
jmp
xor
add
add
repnz
jae
add
aad
test
mov
push
mov
xchg
ret
aad
add
add
push
mov
xchg
ret
cmp
add
add
lock
add
repnz
jae
fbstp
xor
fsts
mov
xchg
ret
add
add
sub
push
add
add
clc
repnz
jae
xor
fs
add
push
mov
xchg
ret
add
add
mov
inc
cmc
push
jae
add
movb
add
cmp
mov
inc
add
add
mov
push
mov
xchg
ret
add
add
inc
outsb
popf
mov
clc
repnz
jae
loopne
add
dec
test
mov
clc
repnz
jae
fists
add
add
add
orb
clc
repnz
jae
add
add
sbb
cmp
add
pop
sbbb
sub
fwait
cld
nop
jmp
jo
add
int
ret
lea
clc
repnz
jae
jp
or
pop
out
push
fwait
cld
nop
jmp
ret
mov
aad
int
mov
add
in
push
js
cwtl
mov
roll
xlat
int3
add
mov
nop
jae
mov
add
and
repnz
jae
testl
jae
add
add
filds
pop
cmp
nop
jae
add
fldl
outsb
add
clc
repnz
jae
add
push
popf
dec
add
push
mov
xchg
ret
add
testl
add
nop
jmp
jp
add
add
add
int
dec
add
repnz
jae
mov
add
add
add
push
push
mov
xchg
ret
add
add
add
je
clc
repnz
jae
add
add
push
mov
add
stos
add
ljmp
add
mov
inc
add
xor
clc
repnz
jae
movsl
sbb
add
add
mov
repnz
jae
add
jge
add
aad
fwait
add
push
mov
xchg
ret
in
aad
dec
add
nop
jae
xor
add
add
push
clc
repnz
jae
add
pop
jge
dec
add
ljmp
add
add
add
jo
or
mov
adc
cld
nop
jmp
add
add
xor
jge
fwait
cld
nop
jmp
movsl
push
inc
add
outsb
cld
insl
add
clc
repnz
jae
testl
hlt
add
push
fwait
cld
nop
jmp
add
add
test
xor
add
mov
clc
repnz
jae
add
sbb
repnz
jae
pop
dec
xor
out
and
call
clc
repnz
jae
add
add
cmp
stos
clc
repnz
jae
add
add
add
add
clc
repnz
jae
mov
add
add
push
add
and
clc
repnz
jae
add
inc
add
out
cmp
fwait
cld
nop
jmp
inc
or
push
add
add
jae
add
dec
add
add
dec
push
mov
xchg
ret
add
mov
and
clc
repnz
jae
inc
imul
push
js
add
nop
jae
pop
sub
add
dec
cmp
pushl
notl
push
pushf
dec
clc
repnz
jae
stc
in
out
add
cmpl
repnz
jae
xor
push
add
decl
push
mov
xchg
ret
mov
push
mov
xrelease
push
push
mov
xchg
ret
pop
add
add
sti
incl
mov
mov
test
and
lea
clc
repnz
jae
and
aad
lea
fwait
cld
nop
jmp
adc
jo
pushf
cmp
mov
add
add
inc
and
clc
repnz
jae
add
out
add
cmpsb
add
push
mov
xchg
ret
add
add
push
jns
jg
fwait
cld
nop
jmp
push
add
xor
aaa
xchg
adc
add
sbb
cli
clc
repnz
jae
xor
adc
add
lret
add
clc
repnz
jae
inc
jge
push
add
jbe
xlat
mov
repnz
jae
push
add
add
mov
push
mov
xchg
ret
add
add
sti
mov
clc
repnz
jae
pop
add
add
add
push
clc
repnz
jae
push
xor
add
imul
mov
clc
repnz
jae
push
dec
inc
add
enter
clc
repnz
jae
pushf
inc
add
mov
sub
clc
repnz
jae
sbb
xor
add
lods
call
fwait
cld
nop
jmp
push
add
int
cmc
and
loop
pop
push
mov
add
add
xor
mov
mov
clc
repnz
jae
mov
add
das
push
add
mov
add
test
push
mov
xchg
ret
popf
add
mov
rol
je
clc
repnz
jae
push
mov
dec
fwait
cld
nop
jmp
or
dec
dec
stc
or
mov
call
fwait
cld
nop
jmp
inc
loopne
xor
or
sar
nop
jae
add
add
add
mov
nop
jmp
jge
add
add
mov
push
mov
xchg
ret
stc
mov
add
cltd
mov
clc
repnz
jae
ret
jo
add
add
clc
repnz
jae
sbb
popf
add
dec
ds
clc
repnz
jae
outsb
add
dec
add
xchg
gs
call
clc
repnz
jae
div
add
or
inc
xor
clc
repnz
jae
add
add
push
call
clc
repnz
jae
and
xor
add
clc
repnz
jae
in
test
jo
pop
mov
push
mov
xchg
ret
add
clc
repnz
jae
cmp
add
dec
add
add
imul
clc
repnz
jae
add
add
mov
nop
jae
add
rcrl
pushl
clc
repnz
jae
cld
add
js
loopne
add
clc
repnz
jae
add
mov
add
add
cld
nop
jmp
testl
add
hlt
add
es
clc
repnz
jae
add
add
ficoms
in
scas
mov
std
verr
add
mov
add
cwtl
xor
add
lods
int
dec
outsb
push
mov
or
scas
std
push
add
cmpsb
add
add
aas
lea
add
mov
lods
lods
lret
popf
mov
xor
mov
jge
sbb
mov
stos
or
test
add
loopne
mov
popa
sub
xchg
mov
push
add
push
mov
in
inc
add
add
in
sbb
and
data16
shrl
call
int3
mov
cmpsl
push
add
mov
add
add
pop
cmp
call
jg
outsl
arpl
add
add
add
add
add
xor
pop
mov
js
iret
sahf
scas
mov
mov
add
jge
add
in
cs
mov
xchg
call
add
add
rcr
pop
aam
ja
mov
mov
imul
add
aad
add
pop
movsb
add
add
ret
push
add
add
popa
stc
rol
lds
mov
add
add
add
dec
push
add
xchg
add
add
in
push
add
imul
xlat
xchg
push
add
or
add
sbb
add
wbinvd
xchg
pop
je
mov
sahf
arpl
push
loopne
mov
cmp
mov
jno
cmp
mov
jb
arpl
add
add
xchg
add
stos
mov
fxch
sub
fisubs
add
mov
mov
fucom
movsb
add
divl
add
add
std
inc
addb
add
add
adc
je
xor
add
add
dec
jno
jne
push
sub
add
fwait
fists
mov
fidivrs
and
mov
dec
std
in
add
inc
call
add
push
das
sbb
stos
arpl
add
in
mov
xchg
in
leave
cmpsb
add
add
add
sub
leave
cwtl
mov
xchg
add
add
movsl
into
push
add
sti
xor
sbb
add
add
inc
inc
add
push
add
out
test
movsl
jle
movb
cltd
roll
popf
sub
add
cmc
popl
fdiv
xor
xchg
add
jecxz
int
dec
cmp
adc
xbegin
mov
lds
cmp
and
add
imul
inc
pop
das
mov
add
or
addb
add
int
jbe
inc
addr16
stos
loop
dec
test
call
pop
pusha
add
stos
lahf
inc
add
pop
and
mov
dec
into
jbe
sub
add
stc
popa
outsl
arpl
xor
mov
test
add
mov
es
inc
sarl
cmpsl
dec
in
xchg
fisttpll
lcall
adc
add
inc
add
add
add
or
into
out
adc
xchg
add
movsb
add
add
imul
mov
add
add
add
mov
add
movsl
je
bound
mov
and
mov
mov
pop
aad
add
mov
add
jb
inc
out
ljmp
call
fmuls
dec
cltd
sbb
cmp
inc
add
test
and
mov
aad
push
add
sbbl
add
mov
jmp
pushf
inc
and
dec
cmp
add
leave
xor
add
shrd
or
xchg
ds
aaa
or
add
mov
xor
xchg
movb
add
cltd
loopne
cmp
dec
ret
xlat
and
mov
test
dec
lock
sub
and
mov
add
and
out
mov
and
mov
add
push
add
sub
adc
add
dec
sbb
add
add
mov
mov
ds
add
inc
nop
add
add
lock
adc
insb
and
fdivs
add
add
shll
inc
imul
add
inc
sub
mov
add
add
cld
addl
add
jne
add
xor
inc
add
test
ljmp
jg
data16
add
add
mov
cmp
sbb
mov
lret
inc
pop
xor
jp
add
jb
pop
add
mov
xchg
mov
add
rolb
rolb
mov
sub
xchg
push
add
add
mov
push
add
inc
lock
adc
or
push
lds
mov
add
push
add
add
stc
imul
add
aad
mov
inc
xchg
add
fisubrs
shll
inc
outsb
out
jno
mov
xor
psubsb
mov
mov
add
jne
sub
inc
outsl
push
add
pop
out
hlt
add
lcall
adc
adc
enter
add
sbb
sbb
cmp
inc
add
add
mov
and
daa
xchg
add
shll
jne
ret
sub
lea
add
xor
ficomps
loope
loop
cmc
filds
mov
push
add
add
pop
sub
pop
sti
mov
daa
dec
inc
add
mov
fildll
add
fisubl
add
out
fwait
push
in
in
xchg
je
insl
pop
push
add
add
das
fwait
cmc
cmp
jge
shll
add
add
repnz
add
add
movsb
add
xchg
lcall
push
and
mov
cmp
add
sub
or
xchg
inc
add
and
inc
fmull
add
and
cld
into
push
iret
test
pop
cmp
mov
mov
nop
add
fisttps
mov
inc
les
mov
out
and
loope
nop
add
je
or
or
les
bound
mov
mov
je
mov
outsl
dec
inc
add
mov
fwait
and
or
mov
mov
xchg
add
int
add
mov
in
in
sbb
fadd
add
jg
cmp
imul
add
dec
fldl
jns
sahf
cmp
add
mov
cli
dec
push
add
add
dec
xchg
or
add
add
mov
add
add
add
push
add
sahf
jge
add
fwait
or
imul
add
in
push
add
xchg
add
and
mov
adc
mov
mov
add
imul
lret
push
add
mov
mov
add
add
push
add
inc
inc
add
add
mov
push
enter
add
add
add
xchg
xchg
movsl
ret
xor
pop
mov
mov
cmpsb
add
idiv
icebp
xor
fstpl
add
jp
add
jo
icebp
xchg
add
cmp
add
add
jecxz
add
loope
sub
femms
push
add
add
add
add
mov
add
mov
add
cld
cmp
jo
jmp
xchg
dec
cltd
jge
addr16
das
mov
sbb
push
jge
sub
add
mov
mov
add
test
mov
popf
fcomip
add
js
add
aad
aas
clc
or
pusha
add
inc
add
ret
rolb
push
fwait
inc
add
mov
inc
add
cmpsl
stos
repnz
mov
add
adc
fadd
add
aas
ret
xor
dec
icebp
ffreep
add
add
enter
lock
insl
pop
cwtl
add
and
mov
add
add
add
outsl
adc
add
or
adc
add
cmp
movsl
sbb
mov
jle
mov
add
and
mov
pop
pop
pop
fnstenv
mov
add
dec
jp
and
insb
pop
sub
sbb
and
cmp
xor
mov
add
popa
ret
sahf
lret
gs
add
lods
aaa
add
mov
test
outsl
hlt
add
cmp
add
add
inc
inc
add
add
or
test
adcl
cmp
outsl
arpl
lods
pop
inc
add
add
adc
sub
ret
xchg
add
call
in
xchg
add
xchg
sub
xor
sbb
dec
ret
add
loope
or
sub
notl
addb
sub
ja
mov
mov
cmc
xor
icebp
popf
scas
sahf
das
adc
ret
in
mov
add
mov
pushl
add
mov
add
cmp
jl
jae
add
dec
sti
lret
add
add
rcl
add
fxch
stos
daa
imul
inc
in
jb
jae
add
add
jo
pop
jecxz
add
add
pushf
in
rolb
mov
add
js
push
push
mov
std
mov
jne
add
sti
cmp
mov
cmc
ret
cmp
imul
adc
add
mov
or
sarl
in
add
jns
cmp
and
mov
add
sbb
jl
cli
into
ret
adc
xor
adc
xchg
dec
push
pop
mov
call
and
mov
pop
mov
add
and
inc
add
xchg
enter
xchg
fimull
or
pop
adc
test
xchg
mov
ja
and
mov
ror
push
add
add
mov
lds
sbb
add
add
lea
add
mov
add
push
or
loopne
jg
inc
mov
add
jmp
cmp
enter
add
jle
add
enter
dec
rolb
sbb
jns
add
adc
xlat
mov
xor
lcall
mov
push
lret
sbbl
push
inc
add
jo
pop
movb
ja
jp
cli
cwtl
push
cmp
xchg
mov
push
jg
mov
add
mov
add
addr16
xchg
pop
addr16
add
icebp
ljmp
ret
ja
loop
and
mov
loopne
adc
mov
inc
mov
lods
inc
dec
xchg
jl
add
lods
dec
pop
inc
add
addb
or
push
or
shl
pop
xlat
stc
stos
dec
jns
push
add
or
lock
insl
mov
xor
pop
loop
mov
add
lret
lea
jne
add
add
add
jp
jp
add
add
xchg
add
add
dec
dec
insb
inc
ljmp
arpl
xor
inc
add
add
pop
mov
test
mov
inc
adc
js
out
in
fsubr
mov
add
and
incl
dec
mov
push
add
adc
xchg
add
add
xchg
add
adc
fiaddl
cmp
stc
fcompl
add
lods
imul
or
sub
out
jbe
xor
sbb
add
insb
fbld
add
add
jle
add
xchg
or
sub
mov
mov
scas
leave
and
mov
push
add
mov
or
add
add
aas
add
mov
mov
and
add
cmp
add
ret
add
push
jle
add
add
std
lods
iret
mov
scas
scas
stos
fisubrl
fstps
add
add
mov
add
clc
mov
add
ja
and
dec
or
mov
cwtl
imul
add
add
sub
mov
leave
sbb
sbb
rolb
add
xor
stos
cmp
pusha
add
add
pop
ljmp
int
add
push
add
add
rolb
ljmp
mov
add
dec
call
and
mov
inc
movsl
rolb
mov
jbe
push
repnz
fildl
addb
mov
out
repnz
rcll
adc
leave
sti
fwait
mov
mov
mov
mov
and
loopne
mov
xor
mov
pop
aas
sub
sbbl
scas
inc
xchg
add
sbb
add
cmp
mov
stos
nop
add
mov
iret
dec
hlt
add
dec
sbb
xor
pusha
add
or
add
jge
add
add
jecxz
push
out
iret
jecxz
sbb
add
add
pop
xchg
xchg
mov
add
add
inc
add
add
aad
push
push
stos
adc
cli
addr16
push
test
mov
mov
add
cwtl
imul
mov
mov
mov
mov
inc
add
mov
mov
mov
inc
cmp
jno
xchg
cwtl
cltd
mov
inc
add
add
in
data16
inc
scas
lock
call
ret
add
mov
or
add
sub
incl
imul
add
jl
ret
fmul
aad
sarl
jge
add
add
mov
outsb
jae
adcl
leave
sbb
add
fsts
rcl
dec
jb
sbb
add
mov
push
add
fwait
hlt
add
mov
cli
popf
cmpsl
test
mov
lds
inc
add
rolb
imul
jp
repnz
cmpsb
add
add
jo
xchg
add
testb
mov
add
add
xor
add
add
pop
dec
icebp
sbb
xchg
dec
mov
outsb
aad
jl
add
push
add
add
xchg
repz
add
ljmp
add
pop
lret
cmpsb
add
add
push
add
popa
jbe
addr16
lock
loope
insl
insb
data16
add
movb
xchg
mov
inc
lret
push
add
lcall
adc
cmp
dec
ljmp
out
mov
loope
add
xor
out
sub
and
movsl
jmp
movsl
jge
add
in
cmp
xchg
dec
addb
add
push
test
jb
das
fprem1
test
inc
add
addb
add
cltd
rorl
xor
lret
out
add
add
add
pusha
add
inc
add
je
cmp
lahf
sbb
imul
stos
push
add
stos
and
mov
add
imul
stc
cmp
add
fmulp
icebp
mov
loop
xchg
mov
pop
shll
add
cmp
add
push
add
add
push
add
mov
add
aaa
mov
rcrl
hlt
add
test
testb
add
pop
outsb
push
push
addl
and
mov
sbb
add
mov
dec
jb
sub
xchg
add
mov
dec
sub
add
dec
dec
mov
jnp
add
add
imul
popf
mov
je
mov
add
mov
das
insb
icebp
jnp
and
mov
add
mov
mov
add
add
add
sbb
popa
movb
inc
add
dec
xchg
add
imul
in
addb
mov
faddl
add
sbb
mov
movsl
fimuls
dec
mov
testb
fwait
bound
mov
sub
ficomps
add
sub
mov
icebp
jbe
sbb
cltd
testb
roll
add
push
movb
inc
add
std
test
jl
push
mov
dec
aas
addr16
rolb
imul
xor
xchg
lds
xchg
mov
push
sbb
cld
xchg
mov
jnp
jnp
mov
repz
lahf
pop
movsb
add
push
push
mov
xlat
fadd
add
mov
add
lret
enter
add
test
das
hlt
add
jge
add
pop
ds
outsb
sti
addb
dec
pextrw
sbb
movb
xchg
out
jp
lret
xchg
add
add
fcomip
loopne
jg
add
imul
add
jg
rolb
xor
pop
pop
push
add
add
or
cli
imull
cltd
and
mov
fcmovu
lcall
dec
lock
ljmp
xchg
loope,pt
aas
rolb
sub
add
ljmp
pop
mov
gs
add
add
xor
or
add
mov
push
dec
or
adc
outsb
loopne
jno
add
add
add
rolb
xor
or
push
add
loop
and
cmp
add
mov
sarl
push
add
lcall
sub
push
scas
push
add
cwtl
out
inc
add
mov
sub
cltd
or
and
mov
mov
add
dec
pop
add
mov
aaa
jmp
stos
imul
cmpsb
add
out
xlat
cmp
mov
cli
sarl
test
movsl
je
les
loopne
call
sub
pop
sub
push
add
xchg
push
add
add
jbe
sbb
jle
popa
hlt
add
lods
sbb
pop
add
add
rcll
mov
adc
xchg
add
mov
ljmp
sbb
les
stos
and
mov
mov
cmp
addb
add
addb
stc
mov
cmpsb
add
in
out
and
inc
xchg
add
mov
cmc
add
mov
mov
sbb
dec
pop
mov
add
push
jmp
ja
xchg
fcomps
add
inc
add
inc
add
add
add
lods
pop
push
add
sub
add
or
push
add
add
sub
add
add
add
mov
cmp
pop
mov
lods
jl
add
add
shll
push
add
lret
add
lcall
mov
pop
mov
addr16
das
dec
adc
push
loopne
or
xlat
jns
xor
cli
mov
cmp
add
push
pop
js
bound
mov
add
mov
popa
xor
outsb
add
mov
arpl
hlt
add
mov
pop
xchg
cmovns
push
add
push
filds
pop
shll
jmp
sbb
add
daa
int
cmp
cmc
out
loope
addr16
add
add
fwait
add
mov
xor
add
jle
sbb
stc
or
jne
push
add
test
adc
add
add
dec
xor
xor
popa
sbb
add
rolb
lahf
addb
mov
lret
or
add
test
test
cmp
add
test
scas
ret
add
jp
orl
pop
xor
add
push
jnp
arpl
dec
clc
cmp
scas
cwtl
in
rcrl
ret
mov
push
js
lods
push
add
adc
pop
loopne
out
inc
add
test
or
in
xchg
add
sub
popa
xchg
add
stc
insl
imul
mov
mov
jg
add
dec
mov
loope
std
mov
addr16
mov
iret
aaa
subl
add
add
sub
push
add
adc
movsb
add
add
add
add
lahf
adc
dec
or
xchg
add
loop
cli
addl
add
mov
jl
add
sbb
adc
and
ss
xlat
out
dec
sub
mov
cmp
add
out
xchg
add
mov
add
les
push
add
pop
jae
add
pusha
add
popa
test
popa
mov
dec
insl
rcrl
add
rolb
or
mov
jbe
mov
addb
add
add
sub
add
loop
adc
std
adc
jns
adc
inc
sarl
add
pop
xchg
cmc
testb
movb
or
jl
pop
dec
in
sbb
dec
cwtl
pop
cli
or
push
add
push
add
add
mov
dec
psrad
dec
jle
sbb
jg
and
add
sti
add
add
sahf
and
mov
movb
mov
rolb
fisttps
mov
add
mov
add
jmp
add
icebp
cmp
cmpl
fiadds
jnp
jmp
push
jp
fistpl
adc
and
popf
and
xchg
inc
pop
add
add
rol
test
mov
mov
add
mov
add
test
ja
xchg
ljmp
or
jl
mov
outsl
jecxz
add
add
ljmp
pop
mov
out
add
cltd
xor
in
xchg
add
mov
arpl
add
adc
dec
out
ret
dec
add
mov
movsb
add
add
repnz
addb
mov
outsl
arpl
mov
cmp
mov
add
mov
outsl
cmp
add
iret
jb
xor
mov
push
jb
add
mov
xchg
addb
add
js
dec
into
pop
push
lahf
pop
js
sub
add
jo
sub
les
mov
add
add
or
in
push
add
pop
mov
mov
xchg
add
or
add
inc
sbb
insb
dec
es
lret
jge
nop
add
push
add
cld
fildl
dec
stos
out
sahf
js
add
lcall
addr16
into
mov
fsubrl
sub
in
cs
dec
lds
das
addb
and
mov
out
testl
add
lods
jne
repnz
sti
addb
fmul
inc
add
jbe
push
add
mov
stos
mov
add
mov
add
cmp
add
mov
inc
xor
jne
std
lods
add
rol
add
add
add
push
or
pop
jecxz
xchg
add
sbb
xchg
pushf
xor
mov
add
cld
jl
xchg
pop
gs
mov
add
xor
lret
adc
dec
cmovg
add
int
pop
push
add
mov
jne
add
cs
loope
gs
sbb
push
add
addl
out
xor
ds
inc
add
or
push
lcall
call
mov
cmpsl
push
popa
jl
add
cwtl
stc
push
add
push
out
adc
mov
add
xor
clc
rolb
icebp
repz
jnp
add
add
push
sub
add
testb
add
rolb
lahf
inc
clc
inc
add
hlt
add
lret
mov
sti
mov
nop
add
addr16
and
mov
jnp
out
std
push
inc
add
addb
insb
and
adcl
add
mov
add
add
shrl
push
add
push
les
cwtl
mov
add
push
add
inc
ret
in
es
add
push
add
or
mov
jge
jmp
dec
and
in
pop
outsl
xchg
xchg
add
adc
cmp
outsl
cmp
mov
sbb
inc
add
movsl
data16
les
jae
add
ds
add
pop
cwtl
ja
xor
call
add
sahf
or
add
aam
sub
sub
push
sbb
inc
mov
fsts
pop
loope
jle
mov
sbb
xlat
repnz
or
lds
imul
mov
aam
sbb
xor
adc
xlat
and
addb
out
pop
push
jecxz
sub
inc
repnz
test
and
mov
mov
aaa
add
push
sbb
notl
rolb
ljmp
add
pop
add
cltd
inc
pop
dec
jns
add
loop
xor
outsl
pop
sub
cmpsb
add
rolb
sbb
add
dec
sub
mov
add
dec
mov
add
pop
xor
mov
dec
mov
das
mov
in
repnz
add
add
out
adc
xchg
add
add
mov
popa
roll
sbb
xor
or
iret
inc
add
mov
shr
pop
cs
sbb
sub
daa
inc
or
fiadds
std
dec
fdivl
sbb
push
enter
mov
add
sub
fistpl
cmp
sub
sti
stc
inc
movsb
add
add
xchg
dec
and
cmpl
add
mov
fiadds
pushf
loopne
sbb
cmp
test
add
add
inc
add
leave
jle
add
add
ljmp
dec
mov
sbb
pop
jae
cmp
dec
outsl
loopne
sbb
add
mov
push
mov
orl
xchg
cmpsb
add
push
xchg
add
rolb
add
mov
add
leave
lret
xchg
jg
xlat
cmpsb
add
xlat
mov
movsb
add
xchg
jns
mov
lea
imul
xchg
and
mov
add
mov
pop
out
inc
add
setb
mov
xlat
cld
mov
inc
add
fiadds
mov
add
pop
std
xlat
loop
fcmovbe
add
fcomp
pop
lcall
imul
gs
insl
jns
test
andl
out
ret
add
xchg
jmp
fstps
push
mov
fcmovu
push
add
add
aam
loope
add
ret
scas
addl
test
addl
inc
add
imul
out
xchg
dec
movsl
mov
mov
inc
loopne
ds
or
add
add
add
jnp
add
int
mov
push
add
mov
add
cmp
push
push
add
pusha
add
les
dec
add
mov
fists
inc
add
aas
test
mov
out
xor
mov
push
add
cwtl
push
mov
clc
pusha
add
push
in
or
daa
repnz
data16
dec
dec
adc
fcompl
fcomip
xor
aas
xor
rcrl
scas
outsb
cmp
add
stos
adc
in
loopne
mov
test
cmpsl
jecxz
add
scas
dec
popa
addr16
jae
outsb
push
add
add
rolb
sbb
add
sub
repz
dec
push
add
stos
sub
rolb
add
jne
sub
rolb
into
sti
push
daa
test
addr16
mov
or
dec
mov
inc
stos
xchg
ret
add
add
mov
push
nop
add
and
fmuls
or
mov
mov
mov
push
adc
movsl
js
add
sub
cmpl
dec
test
add
in
add
loop
sub
mov
cmc
ret
cmp
add
fnstsw
xchg
xchg
jg
add
inc
pushf
mov
inc
add
rolb
lock
scas
cmp
mov
or
arpl
daa
aad
xor
fisttpll
jl
arpl
add
add
add
add
mov
add
cwtl
or
sub
dec
add
mov
add
in
ficoms
sbb
and
mov
add
je
cmp
mov
loopne
jo
cmp
xor
push
jb
sbb
add
xchg
cmpsb
add
mov
call
daa
ljmp
or
pop
xor
add
cld
int3
and
add
mov
mov
jb
mov
sbb
ljmp
test
push
repz
add
movzbl
int
mov
lahf
lret
sub
add
or
push
add
and
sub
pop
add
mov
sub
lods
mov
add
sbb
add
add
add
addb
cmpsl
aam
fmuls
fisubrl
add
rolb
jnp
daa
shrl
add
add
mov
and
xlat
jle
mov
or
outsb
into
fcomps
mov
add
mov
repnz
add
jecxz
pop
outsb
jnp
mov
rolb
cmpsl
sub
cmp
adc
test
add
fst
add
add
add
add
dec
std
sub
add
out
sub
cwtl
ret
out
mov
sub
cmp
inc
add
lods
xchg
js
xorl
xchg
add
and
mov
mov
out
jg
add
dec
xchg
mov
add
add
data16
add
dec
push
add
movsl
lods
in
mov
add
enter
addr16
xchg
add
add
cli
rolb
fdivp
rcll
mov
xchg
hlt
add
add
push
iret
in
mov
rsqrtps
loope
add
push
mov
add
mov
outsl
xlat
xchg
sub
xor
sbb
fcmovnbe
add
dec
lret
pop
mov
add
add
add
push
add
and
add
cmc
sbb
sti
cmpsl
mov
add
in
cwtl
cli
outsb
mov
dec
dec
xor
add
roll
mov
add
jne
in
aad
add
mov
outsb
stos
ret
add
add
rolb
ljmp
fisubrl
add
lret
popa
jg
movsl
gs
mov
mov
xor
add
sbb
mov
pop
push
mov
pop
call
sub
lahf
cmc
dec
or
add
add
mov
pop
xchg
pop
data16
mov
xchg
pop
xchg
add
pop
push
add
pop
mov
jnp
mov
add
add
les
xchg
add
inc
add
add
add
add
jge
xchg
jp
int3
addb
add
fidivrs
jb
sub
sub
test
mov
pop
jne
inc
pop
push
repz
xchg
fldenv
add
sbb
in
inc
add
add
add
movl
or
aaa
mov
mov
add
add
adc
add
mov
add
adc
mov
adc
adc
mov
inc
add
das
int3
sbb
add
add
xchg
pop
add
add
add
dec
and
mov
nop
add
add
rorl
add
add
add
roll
ja
add
xor
add
and
mov
add
scas
out
or
or
clc
arpl
mov
add
mov
cmpsb
add
inc
xor
mov
fwait
cmpsb
add
jle
add
sbb
iret
aas
xchg
add
lods
add
cmovnp
add
adc
pop
jl
dec
sbb
cmp
movsb
add
mov
xor
inc
xor
push
les
dec
mov
fwait
pop
add
mov
out
data16
xchg
fcomps
add
add
lret
add
mov
inc
cmc
rorl
int
push
add
xchg
jae
loop
cmpsl
nop
add
imul
shr
add
fisubs
inc
add
xor
jae
add
push
js
xchg
ret
int3
sub
sub
mov
add
mov
jge
jnp
jmp
add
sbb
push
js
add
xchg
add
nop
add
add
lock
or
add
dec
push
dec
shl
pop
sti
sbb
add
mov
mov
addr16
rolb
add
add
sbb
std
fadds
mov
pop
call
dec
pop
and
dec
adc
add
stc
mov
or
mov
clc
mov
add
add
arpl
add
pusha
add
dec
jns
add
std
fstps
and
cltd
sub
mov
sarl
pop
ret
push
add
fistps
jge
and
into
pop
cmp
inc
enter
ja
add
add
add
cltd
pusha
add
in
push
add
add
sbb
mov
add
add
jle
out
pushf
ret
out
sbb
add
mov
mov
add
jnp
setns
rolb
call
ss
push
add
add
and
mov
movsb
add
inc
nop
add
ficompl
scas
or
cli
fwait
mov
mov
xor
lds
add
cmp
adc
ljmp
add
std
pushf
jnp
add
pop
add
mov
add
ret
fcomp
sub
add
inc
mov
testb
xor
dec
in
in
cmp
add
fcmove
popa
inc
pop
repz
mov
in
add
add
push
xlat
pop
and
push
mov
loope
fisubl
or
cmp
and
mov
adc
mov
push
adc
add
fistpll
add
add
mov
sub
add
sbb
imul
mov
xor
fists
add
push
add
add
add
js
dec
push
add
pop
or
popf
xlat
mov
dec
dec
lret
add
jno
mov
sbb
push
addb
dec
test
insb
dec
test
add
sbb
outsb
cs
add
iret
sti
std
add
mov
repz
cmc
inc
sbb
and
lret
or
xor
inc
add
out
adc
sub
adc
and
dec
sub
fdivrp
aas
scas
in
ljmp
test
add
add
test
dec
fwait
xor
mov
addb
pop
sarl
push
les
aaa
xchg
imul
add
sub
sahf
stos
loopne
rolb
pusha
add
rolb
add
xor
add
js
add
out
and
testb
add
xor
cmp
cmp
add
add
add
add
dec
daa
repnz
subl
test
ret
push
add
push
cld
outsl
ret
add
lods
sub
jl
inc
ds
loop
aam
incb
xlat
jp
add
das
inc
add
aad
add
cmc
xrelease
mov
addb
cmp
and
mov
fadds
add
xor
push
add
incb
sub
or
imul
push
dec
insl
cmc
mov
add
pop
push
add
jae
out
mov
add
fwait
mov
cmpsl
lcall
pop
pop
out
or
jle
ds
pop
or
push
out
dec
add
mov
jne
push
xchg
adc
cmp
popa
scas
sub
add
mov
fld
add
cmp
rcll
fmul
aaa
iret
lds
cmp
sahf
adc
dec
inc
loop
xchg
add
mov
sbb
fisttpl
add
add
or
mov
push
add
pop
mov
fimull
add
add
add
add
push
jne
pop
push
ss
mov
insb
fmuls
lods
pop
cmp
dec
jnp
add
add
add
out
add
mov
xchg
dec
inc
or
add
icebp
mov
add
out
mov
mov
cmp
cmpsl
dec
lods
xor
sti
and
mov
adc
cmpsb
add
add
call
sub
add
add
inc
sub
jns
mov
add
jmp
add
icebp
mov
int3
sahf
adc
inc
add
add
les
ss
stos
test
jge
cli
push
add
add
out
psubusw
pop
mov
jo
adc
push
lret
push
and
test
rolb
nop
add
add
jb
cmp
das
nop
add
add
push
das
out
mov
test
fcomps
add
dec
add
inc
add
lcall
push
add
add
jbe
in
and
inc
jb
jle
add
add
add
sbb
ret
or
add
ljmp
sub
dec
ret
call
push
rol
add
movb
in
sbb
mov
out
push
add
addb
mov
add
fists
adc
add
mov
sub
lock
adc
notl
sub
add
add
add
mov
add
dec
adc
add
add
push
scas
jb
fsubs
into
leave
imul
out
das
fisttps
or
add
or
add
mov
add
add
or
push
add
add
inc
add
dec
pusha
add
add
imul
mov
nop
add
iret
jg
out
icebp
mov
movsb
add
outsb
xlat
scas
lret
push
mov
sub
sbb
aam
or
or
stos
cmp
rolb
scas
or
gs
lea
js
jb
addr16
adc
and
repnz
add
divl
add
in
outsb
or
stc
mov
test
mov
adc
push
add
cmp
inc
add
add
dec
aam
decl
in
push
add
imul
add
pop
cld
rcrl
adc
mov
mov
add
pop
and
mov
insb
mov
inc
add
add
inc
add
add
or
rolb
aad
add
adc
mov
dec
ljmp
add
mov
add
add
mov
jno
add
jae
mov
push
add
sahf
and
aad
sahf
loope
sbb
sahf
outsl
push
add
wbinvd
or
loope
xor
xor
sub
mov
pop
rolb
rolb
sahf
xchg
cmp
dec
movsl
push
add
add
add
pop
addb
mov
addb
fdivl
call
dec
shrl
inc
pop
call
or
mov
test
add
push
add
jo
rolb
dec
inc
dec
pop
and
mov
add
add
sahf
mov
aas
arpl
cmpsb
add
scas
in
or
push
das
insb
das
aas
add
popf
dec
data16
loop
and
mov
jg
pop
xlat
addr16
fisubrl
icebp
jo
xchg
out
aas
xor
mov
add
sbb
add
scas
loope
xchg
xor
cld
ret
push
add
add
pop
ret
dec
fsubrs
or
fisttpl
mov
inc
add
and
into
or
aam
add
push
add
xchg
je
xor
das
pop
xor
out
xchg
movsl
arpl
enter
lds
cmpsl
call
hlt
add
add
decb
jg
xor
cmc
pop
sub
add
jmp
pop
daa
in
sarl
lods
pushf
xchg
dec
test
insl
aad
add
mov
orl
xchg
loopne
ljmp
repz
pop
lret
mov
add
rolb
mov
in
fbstp
aad
jnp
je
add
mov
dec
test
jmp
pop
push
mov
add
jo
mov
addl
icebp
clc
ret
sub
inc
add
pusha
add
or
aaa
insb
leave
jmp
fisttpl
sub
aas
sbb
cmc
subl
mov
insb
rsm
jne
sbb
popa
cmp
popf
lea
xlat
fsubrs
mov
popf
pop
cmp
mov
lods
addb
add
hlt
add
repz
jl
pushf
xor
addr16
xchg
add
mov
add
pop
push
cmpl
in
fsubrs
adc
add
popa
or
add
addb
add
mov
mov
flds
add
ja
mov
pop
xchg
add
dec
pop
pushf
in
sahf
cmp
add
xlat
mov
test
imul
mov
mov
addr16
add
lock
add
les
imul
mov
loop
mov
add
add
lods
cmp
add
sbb
stos
dec
pushf
icebp
pop
lea
or
repnz
pop
test
dec
jae
test
jbe
dec
or
mov
add
add
push
add
add
add
cmpsb
add
mov
add
fsubrl
push
jge
mov
xchg
enter
push
addb
add
add
hlt
add
adc
cld
or
add
add
sbb
mov
add
les
mov
sub
push
add
lret
mov
inc
adc
mov
in
dec
xchg
xchg
pcmpeqb
test
cmpl
mov
sbb
mov
sti
daa
or
xchg
push
hlt
add
or
add
add
outsb
xor
rolb
mov
add
add
ret
addl
int
add
shl
lods
lea
add
add
add
rolb
inc
add
int
mov
add
lret
jbe
cmpsb
add
mov
mov
pop
insl
jno
repz
inc
pop
arpl
sub
insb
int3
or
fstpl
leave
fdivs
test
sbb
add
addb
mov
and
fs
fbstp
add
insb
add
push
add
add
xchg
add
add
loope
cmp
aam
ja
call
cmpsl
test
add
mov
add
mov
jecxz
inc
add
lods
dec
data16
xchg
or
add
sbb
mov
and
adc
add
mov
and
mov
add
add
cmc
imul
pop
mov
dec
dec
inc
add
lahf
clc
lods
out
paddw
xchg
add
mov
dec
mov
xor
and
in
call
rcll
xor
jg
popf
and
mov
add
inc
xor
cmp
add
aad
push
add
mov
xchg
add
fstpl
cmp
jl
mov
add
aas
sub
sub
push
dec
pop
into
lahf
mov
jo
push
inc
cli
stos
repz
cld
mov
add
cmp
mov
jnp
outsl
mov
push
add
add
add
daa
aam
adc
div
add
add
mov
test
sbb
add
rolb
jp
add
xlat
pop
repz
sub
test
outsb
dec
xchg
jns
in
jle
movsl
mov
lods
pop
or
sub
arpl
sub
add
mov
dec
adc
adc
in
mov
lock
add
inc
add
jg
out
pop
jne
test
add
push
push
bound
mov
jp
jmp
ds
add
mov
inc
xchg
push
gs
cmp
repnz
add
sbb
add
add
add
jb
push
dec
cmp
ljmp
mov
es
je
les
dec
add
and
add
lods
fldcw
pusha
add
adc
sbb
add
push
adc
je
movsb
add
add
xor
mov
mov
pop
mov
or
ret
add
bound
mov
add
add
add
addb
mov
fistpll
add
orl
aad
xchg
or
ja
add
jp
xor
mov
lret
hlt
add
mov
add
jbe
add
mov
sbb
xchg
add
add
inc
add
add
add
add
dec
cmp
push
push
cli
pop
pop
lea
add
ret
ljmp
add
cmp
pushf
pop
cmc
nop
add
add
pop
mov
add
icebp
mov
mov
sbb
pop
imul
mov
addb
add
mov
or
add
data16
add
or
inc
jno
or
xchg
out
inc
test
add
pusha
add
stos
and
mov
adc
jns
shrl
add
adc
cld
rorl
mov
sub
push
add
adc
addl
dec
testb
aam
push
add
mov
push
mov
add
add
sub
mov
mov
add
sub
add
stos
sub
mov
add
add
lcall
add
fisubl
add
xor
jmp
add
xchg
pop
nop
add
add
and
mov
xor
or
add
jmp
push
scas
fcomps
inc
add
mov
arpl
jg
add
add
fstl
into
and
mov
add
sbb
popf
jg
mov
int3
pop
add
add
xor
repnz
sbb
rorl
testb
dec
es
add
mov
mov
xchg
jb
and
sbb
call
jns
cmp
push
add
mov
lahf
xor
aad
add
mov
add
jl
add
mov
imul
sahf
adc
xor
inc
xchg
adc
inc
mov
and
mov
dec
lea
jbe
lods
repz
shll
add
pop
jae
ds
mov
out
adc
add
bound
mov
mov
xchg
and
mov
inc
push
pop
loopne
pop
push
imul
andl
lods
int
arpl
sbb
les
pop
add
add
add
out
out
dec
add
icebp
scas
pop
ja
cmp
xor
js
mov
jmp
add
add
adc
in
jl
add
int3
das
adc
lahf
xor
fcmovbe
mov
ret
mov
popf
sti
xor
dec
lret
push
add
sbb
pop
and
xchg
stos
icebp
in
jecxz
add
jmp
loop
sbb
lcall
and
popa
movsb
add
add
pop
adc
xor
aad
add
jge
add
xlat
and
mov
stc
out
jecxz
pop
ss
add
add
cmp
mov
add
les
int3
pop
lcall
push
cmp
add
dec
in
push
add
add
mov
xor
add
add
shll
inc
add
ljmp
adc
add
mov
movsb
add
add
mov
mov
fcoml
lea
xor
fwait
rolb
pop
mov
xchg
add
or
insb
cmp
jle
add
add
add
add
mov
mov
add
fidivs
mov
add
idiv
addb
icebp
pusha
add
mov
mov
add
dec
sub
mov
add
add
mov
add
cmc
aam
xor
jb
fldenv
jb
or
add
sub
outsl
bound
mov
add
push
aaa
add
rolb
sub
add
cli
cmp
imul
xchg
jbe
inc
pop
cmp
in
clc
movsb
add
add
mov
mov
jle
add
add
push
add
pop
lcall
push
add
add
movb
movb
clc
pop
dec
jecxz
dec
clc
arpl
sub
add
idivl
hlt
add
add
xchg
jg
mov
pushf
push
add
pop
rol
flds
mov
inc
das
adc
dec
jb
jbe
xchg
les
pop
nop
add
nop
add
imul
jl
add
fistpl
leave
dec
cltd
ss
je
rcl
sbb
push
add
loope
add
sub
cmp
add
push
add
neg
nop
add
mov
add
mov
insl
ljmp
add
jbe
jle
xchg
cmp
ret
inc
add
add
and
test
add
pop
pop
faddp
adc
mov
and
repz
push
lock
mov
repz
add
ret
mov
repz
test
dec
cmp
add
pop
scas
in
adc
or
add
test
add
fcoms
push
add
mov
hlt
add
inc
add
and
add
shll
testb
aas
push
jmp
add
movsb
add
add
add
add
add
adc
sbb
das
mov
add
mov
jae
mov
sbb
and
mov
pop
mov
mov
hlt
add
add
jbe
and
add
sbb
sbb
add
lcall
mov
pop
dec
enter
mov
add
mov
add
movb
cmp
add
adc
add
ljmp
pop
cwtl
aaa
or
or
imul
add
jge
add
adc
leave
les
popa
das
pusha
add
mov
lret
mov
fnsave
mov
adc
cmp
sub
add
mov
movsb
add
add
int3
clc
test
outsb
stos
bound
mov
add
test
inc
add
dec
pop
loop
and
mov
xchg
add
add
push
add
add
aaa
sbb
pop
push
add
dec
mov
in
adc
cld
mov
mov
add
sbb
data16
mov
pop
inc
jle
sbb
repnz
xor
push
add
push
mov
xchg
mov
lods
mov
stos
ret
flds
inc
add
mov
add
mov
add
cmp
add
inc
mov
adcl
push
add
imul
jb
or
mov
inc
add
pop
mov
mov
add
cmp
lods
out
into
in
repz
cmpsb
add
add
in
dec
sub
sub
add
add
add
lcall
sbb
cmp
add
inc
inc
xchg
add
mov
inc
ds
jno
mov
mov
push
add
ret
cli
and
mov
out
insl
lock
push
jp
lahf
ljmp
add
mov
cmp
inc
rcll
and
loop
xchg
push
add
jg
fbstp
mov
scas
out
testb
xor
adc
mov
add
add
in
mov
test
out
adc
pop
inc
add
fdivl
mov
add
stos
push
xor
jbe
dec
fldt
add
jl
sub
aas
sti
fldl2e
cmp
add
pop
mov
mov
dec
dec
sbbl
ja
add
add
add
sbbl
xchg
add
add
ja
add
imul
add
mov
jns
add
add
and
xor
jne
sub
movsb
add
xor
add
ret
pop
mov
cmc
dec
sub
mov
add
mov
add
add
add
or
add
or
mov
sbb
pushf
jns
dec
jb
imul
pop
pushf
or
insb
mov
mov
xchg
add
repz
mov
dec
pop
rolb
shufps
incl
cld
cmp
add
xchg
add
addr16
inc
xchg
inc
sub
jae
lahf
js
sbb
dec
idivl
add
xchg
add
adc
mov
jp
dec
xor
mov
sbb
add
mov
ret
inc
negl
cld
xchg
push
add
out
cld
pop
sub
inc
jle
push
add
iret
js
adc
cwtl
pop
fwait
push
add
add
push
faddl
add
sbbl
add
nop
add
jno
sbb
addb
sub
mov
or
rolb
push
add
add
mov
pop
add
sahf
dec
mov
push
add
add
gs
pop
pavgw
add
loopne
sub
sub
mov
addb
lahf
popa
push
rorl
add
test
mov
or
out
bound
mov
lret
call
mov
add
mov
add
add
add
fildl
mov
xchg
push
roll
jnp
add
cmpl
rolb
push
cwtl
mov
imul
in
push
mov
pop
mov
add
popa
in
clc
pop
dec
and
mov
add
call
lcall
mov
lret
xor
add
ljmp
rolb
dec
inc
inc
add
sahf
inc
add
cwtl
mov
mov
dec
jmp
rcrl
add
xlat
push
xor
inc
insl
ret
pushf
pop
pop
addb
add
push
add
lds
pop
scas
cmp
stos
jge
pop
xor
mov
mov
popa
or
enter
aas
add
mov
stos
addr16
add
add
add
rolb
jno
test
add
lahf
sti
or
adc
pop
dec
filds
in
insl
mov
add
pop
lds
add
or
add
cmpsb
add
pusha
add
daa
xor
add
in
cld
sbb
pop
pop
imul
in
push
add
add
mov
and
mov
movsb
add
add
or
mov
add
add
test
sbb
add
push
pushf
inc
push
divl
add
jno
dec
push
shll
mov
adc
outsl
gs
add
fld1
xor
pop
rcrl
add
push
data16
cli
int3
cmp
pop
aad
add
divl
add
rolb
mov
add
lds
mov
aaa
scas
in
push
add
add
add
xchg
and
into
sub
stos
fst
add
aam
cmp
hlt
add
add
out
shl
add
mov
aaa
stos
fucompp
aaa
fsts
pop
das
cmp
lahf
jmp
insb
adc
insl
pusha
add
rolb
stos
cld
xchg
add
push
cmp
add
sub
add
jl
add
and
mov
mov
enter
and
mov
cmpsb
add
mov
movsb
add
loop
sub
add
ljmp
mov
dec
imul
xor
mov
jg
jl
dec
shll
sti
sbb
add
add
fldt
inc
xchg
add
aaa
cmpsl
call
xlat
cmp
xor
outsl
in
sbb
pop
cmp
stos
mov
add
add
js
cld
mov
out
testb
jp
xchg
loope
add
inc
jecxz
test
mov
sub
pop
mov
scas
jnp
add
add
dec
cltd
ficoms
jle
adc
xchg
jmp
add
stos
cmovo
mov
add
sbb
pop
sti
jp
mov
lret
fldl2t
add
mov
test
mov
add
scas
fstpt
add
testb
xor
add
cmp
pop
fistpl
add
pop
or
ss
add
mov
cs
jae
inc
add
add
cmp
xor
pop
decl
jle
lods
sub
testb
mov
sahf
and
mov
add
scas
add
or
or
add
insb
test
add
pop
ret
cmpsb
add
shll
add
add
jnp
inc
add
cmp
add
shl
xchg
add
push
add
cmc
insb
dec
loop
mov
stc
mov
data16
fimull
fstpl
add
cmp
inc
pop
push
add
cmp
mov
incb
add
add
mov
dec
mov
add
mov
mov
mov
add
loopne
aam
loopne
testb
pop
cmp
add
xor
jmp
dec
addr16
push
add
imul
loop
out
cmp
insl
add
mov
add
fucompp
and
jl
pop
std
movsb
add
sub
daa
mov
imul
testb
xchg
test
cmp
push
popf
push
add
mov
dec
test
icebp
jp
add
mov
imul
arpl
add
adc
xchg
add
movsb
add
dec
jmp
add
dec
adc
sbb
pop
mov
dec
enter
add
clc
hlt
add
mov
pop
or
rolb
std
rolb
fwait
jo
and
mov
xlat
mov
lahf
mov
pop
mov
add
xchg
mov
fldenv
mov
add
add
gs
aas
test
push
data16
pop
clc
jno
xor
add
sti
cmp
rolb
aaa
pop
xlat
mov
add
add
insb
fimull
add
add
js
jp
add
add
inc
add
add
push
add
out
sbb
add
out
adc
addb
punpckhbw
add
popf
scas
fsubrl
ret
mov
lea
aas
add
add
add
sahf
inc
add
sub
ret
dec
les
movsb
add
std
mov
mov
push
xchg
add
add
mov
jp
andl
add
repz
jae
mov
adc
popa
pop
inc
sbb
add
mov
mov
sbb
outsl
iret
pop
mov
or
dec
jg
jne
add
push
add
or
mov
movsb
add
add
mov
add
add
repz
repz
and
xchg
add
add
aad
std
rorl
mov
add
jmp
sbbl
test
dec
lahf
xchg
out
pop
push
mov
dec
xchg
test
or
sbb
xor
mov
movb
lret
das
sub
cld
and
add
xor
int
xchg
add
xchg
jl
or
dec
and
adc
or
testb
out
rolb
in
lahf
pop
sbb
add
cmp
lods
testb
gs
sahf
mov
sub
mov
add
mov
inc
add
add
push
add
jl
div
mov
and
mov
rolb
add
sbb
add
add
aas
mov
or
outsl
cli
inc
loop
les
mov
sbbl
fadds
add
adc
loopne
and
lret
out
sbb
cmp
outsb
lods
arpl
inc
add
inc
int3
inc
mov
add
inc
inc
add
pop
and
mov
cmpsl
aad
dec
movb
pusha
add
pop
addb
add
fidivs
dec
cwtl
andl
or
cli
into
mov
outsb
les
pop
sub
pusha
add
add
aas
sbb
jns
lahf
sub
dec
add
lea
mov
add
js
add
lea
or
add
xchg
fmull
mov
jle
jbe
push
add
sahf
jg
inc
sar
add
add
and
cmp
add
and
mov
iret
test
and
fwait
lock
cmp
sbb
incl
add
clc
das
stc
adc
adc
inc
mov
and
mov
mov
add
mov
add
and
add
pop
mov
dec
lcall
bound
mov
dec
lahf
sbb
xchg
jb
jo
push
lahf
lds
mov
jle
lahf
sub
inc
jb
lods
popf
imul
add
inc
add
push
push
mov
inc
xchg
add
pop
pop
xchg
add
mov
sti
sti
cmp
add
shrl
js
add
lods
sub
xlat
mov
jae
or
mov
add
cmp
and
add
in
xor
add
imul
add
int
fidivl
pop
in
mov
push
add
inc
mov
jns
popf
jp
ljmp
pop
xor
scas
cmpsb
add
mov
add
lds
inc
add
cmp
mov
fiaddl
add
andl
cmp
add
cli
xor
addb
daa
sbb
add
repz
fwait
fwait
cmp
add
add
add
mov
add
add
rolb
cmp
push
inc
test
sbb
add
add
pop
rolb
test
jg
add
dec
jg
fs
add
mov
adc
add
mov
sbb
add
jge
shll
mov
in
in
pop
bound
mov
mov
and
mov
add
inc
add
or
sbb
jg
cmp
push
add
loope
ljmp
test
add
add
lock
stos
sbb
mov
add
out
xor
mov
jnp
xchg
jo
into
outsb
lods
adc
fmul
sub
sub
add
xor
adc
cld
out
sbb
jge
mov
ret
xor
sbb
int3
mov
adc
mov
add
dec
pushf
popa
xchg
lock
pusha
add
fcoms
rolb
arpl
fildll
push
add
sub
add
add
push
pusha
add
testb
out
inc
sbb
xchg
mov
clc
mov
decl
fnsave
sbb
xor
add
mov
inc
add
stos
pop
jp
mov
jo
mov
insl
jno
xchg
addb
adc
xor
insb
loope
push
imul
std
push
jmp
inc
add
add
add
add
test
adc
push
add
test
sbb
rolb
outsb
ds
add
add
sbb
cmpsb
add
add
add
add
dec
mov
ret
add
ljmp
xor
pop
mov
pushf
dec
xchg
cmpsb
add
mov
addb
adc
mov
lret
daa
aas
cld
cmpsl
pushf
mov
clc
and
jmp
add
ja
xchg
jo
popa
data16
aad
jle
addb
or
adc
jmp
and
add
enter
popf
ljmp
icebp
fadd
dec
or
mov
addb
iret
dec
rolb
aam
inc
cltd
pop
data16
push
sub
data16
mov
push
add
jb
rolb
xor
mov
add
add
cmp
add
add
add
add
sahf
push
addl
cwtl
sbb
and
add
mov
scas
clc
jmp
push
sbbl
call
add
dec
loopne
dec
push
and
dec
insb
xor
cmp
outsb
adc
dec
jg
fisubs
add
dec
sbb
adc
sbb
jge
add
or
add
adc
in
imul
mov
add
add
jb
in
scas
movb
rolb
push
push
call
sub
movsb
add
bound
mov
push
add
add
and
add
add
test
repnz
leave
dec
pmuludq
rolb
adc
mov
push
add
movsb
add
add
add
popa
rolb
cmp
fisttpl
add
add
mov
adc
mov
enter
push
add
add
imul
push
add
dec
leave
test
rolb
sub
mov
mov
roll
mov
dec
in
and
add
mov
arpl
adc
aad
cltd
pop
movsl
cmp
es
movb
add
dec
pop
scas
fisubrs
cmp
nop
add
pop
mov
push
add
call
hlt
add
sub
add
xchg
add
add
add
lret
lods
sbb
add
add
repz
pusha
add
adc
pop
xor
nop
add
add
push
add
ljmp
mov
pop
pushf
std
aam
lods
jmp
in
xlat
xchg
in
addr16
pop
out
sub
pop
push
add
cmpsl
iret
adc
enter
add
cs
mov
test
mov
cmp
add
gs
mov
gs
test
and
fcomp
clc
iret
push
add
add
sbbl
add
cmp
mov
scas
in
cmp
fdivrl
xchg
testb
sbb
test
stc
xchg
add
mov
xchg
add
addb
mov
addb
int
add
dec
popf
out
add
add
mov
jnp
ret
add
mov
add
add
add
add
mov
cltd
lret
xor
out
add
xchg
add
add
imul
add
scas
mov
add
call
stc
stos
pop
jae
fdivrl
adc
add
dec
pop
das
into
mov
mov
xchg
popf
mov
or
sti
clc
out
add
mov
and
or
stos
mov
popa
ror
test
mov
xchg
sub
mov
arpl
mov
leave
jmp
add
dec
pop
mov
xchg
sti
mov
les
xlat
adc
fs
int3
lret
mov
sub
mov
lods
jns
cs
addr16
mov
cwtl
and
mov
dec
jmp
add
out
add
dec
mov
add
push
add
fists
add
add
repz
xor
fucomi
xlat
add
add
fildll
push
add
clc
dec
xor
decl
sub
adc
mov
lret
push
xor
xchg
mov
add
sbb
lret
testb
add
add
stos
xchg
add
mov
push
jnp
add
add
add
sbb
stos
add
mov
shrl
add
int3
add
repnz
sub
shll
or
add
add
jp
cltd
sub
sub
lcall
add
aas
inc
pusha
add
lret
es
test
fwait
inc
fcom
jbe
ds
sbb
add
pop
addb
add
add
inc
add
xchg
loope
enter
adc
jne
fidivrs
out
leave
shll
imul
movsl
mov
out
lds
sti
pushf
adc
loopne
je
ret
add
add
add
cmp
add
lcall
bound
mov
mov
lea
add
imull
mov
fucomip
psllq
and
mov
add
xchg
daa
in
cli
lods
popf
mov
xchg
jae
add
les
jecxz
add
add
sub
mov
cwtl
and
push
xchg
add
mov
mov
into
addb
sbb
push
mov
and
lret
xor
pop
dec
scas
pusha
add
add
stc
fsubp
or
or
cmp
add
pop
jb
outsb
push
push
add
dec
dec
clc
aaa
popf
push
add
add
xchg
xchg
add
sub
add
cwtl
movsl
popf
sbb
push
add
add
dec
inc
add
mov
lods
or
rcrl
int
into
testb
or
mov
cmp
add
add
push
add
mov
outsl
fdivrl
add
xor
mov
aaa
arpl
vmovdqa
pop
clc
in
inc
inc
push
mov
sbb
mov
adc
scas
and
add
add
add
scas
mov
dec
sub
mov
push
adc
cmp
add
test
sbbl
add
add
xchg
rolb
mov
or
imul
add
cltd
sub
mov
add
add
aas
lods
sub
xor
inc
cmp
inc
inc
add
and
cmp
mov
and
mov
add
xchg
add
out
movb
mov
dec
addb
mov
sbb
add
mov
add
pop
add
pushf
cmp
or
add
pop
add
jb
xchg
aas
add
cmpsl
mov
add
add
add
add
add
fsub
add
in
push
add
cs
add
add
sub
pop
lcall
jle
push
add
and
mov
rolb
add
inc
cmp
xchg
jecxz
mov
add
push
mov
fwait
popf
fbld
add
and
mov
add
mov
add
jb
adc
adc
cmp
lods
cmp
push
add
or
out
pop
push
decl
fldt
add
mov
mov
xchg
or
xor
mov
jo
pop
inc
lahf
rolb
shrl
popa
int
imul
add
jecxz
ljmp
in
in
lret
mov
out
xor
cwtl
push
jb
inc
jno
add
lahf
fwait
dec
push
jns
add
lods
scas
push
inc
add
xchg
add
add
sbb
add
add
jmp
fnsetpm(287
add
dec
and
xchg
pop
mov
jns
mov
dec
imul
dec
and
mov
add
add
add
mov
in
aas
faddp
mov
xor
add
add
xchg
add
add
lcall
mov
aam
or
cmpsb
add
fldt
add
add
xchg
movb
pop
lahf
push
imul
sbb
out
rolb
cmp
add
add
add
cmpsl
cmpsl
loope
xchg
mov
testb
push
jmp
add
addb
adc
add
cli
jns
inc
int
add
add
adc
adc
pop
xchg
add
add
mov
loop
dec
pop
imul
add
add
or
cmpsl
mov
add
add
push
int
add
add
insl
iret
jo
movsl
or
aas
mov
jmp
add
mov
mov
add
sar
mov
jno
fcoms
jle
addb
or
mov
add
add
mov
lods
scas
insb
add
add
add
xchg
mov
mov
add
add
mov
push
add
or
pop
dec
mov
in
sbb
add
mov
push
add
sub
sbb
inc
add
jne
add
or
mov
add
outsl
sub
sub
add
add
lss
into
fsubrs
and
add
add
out
cmp
arpl
cmpsb
add
call
add
and
imul
daa
lock
add
xchg
outsl
aad
and
mov
adc
add
adc
sub
cld
push
add
dec
mov
mov
les
or
add
bound
mov
out
ret
add
fidivrs
stos
dec
mov
jp
daa
xor
xchg
xchg
mov
enter
mov
jb
call
mov
pushf
addb
push
add
mov
add
push
add
mov
ja
push
mov
sti
jnp
or
add
arpl
sub
xchg
cmp
inc
add
add
mov
stos
and
dec
xchg
add
add
add
add
jp
push
add
pop
movsb
add
add
aam
leave
imul
add
or
fldenv
jne
sub
cmc
ret
push
add
or
add
mov
ja
add
scas
fwait
sbb
sti
adc
push
rolb
sbb
ret
adc
leave
cwtl
ret
add
cmp
add
add
stos
xchg
dec
sbb
inc
add
inc
add
add
xchg
add
fcom
cld
pop
and
jmp
add
add
add
jo
lods
mov
and
jp
add
add
adc
repz
cltd
push
add
cmp
out
out
fisttps
mov
add
add
call
stc
sub
push
lret
and
mov
sti
idivl
mov
push
dec
into
push
add
sbb
sbb
movsl
repnz
in
loope
sub
add
cmpsl
icebp
adc
hlt
add
add
add
add
add
mov
movsb
add
aas
dec
aas
xchg
add
dec
add
cmp
ficoml
inc
add
add
aam
mov
test
mov
mov
arpl
test
add
xor
mov
dec
imull
dec
push
and
sub
inc
mov
fwait
icebp
loopne
arpl
add
je
jecxz
pop
out
enter
mov
bound
mov
outsl
xchg
add
mov
add
pop
scas
lret
mov
xchg
adc
mov
add
cmp
add
daa
cmpsb
add
test
adc
lods
je
push
inc
ret
mov
add
mov
outsb
push
push
jmp
popa
mov
mov
sbb
or
imul
cmpsb
add
add
ljmp
mov
or
fdivs
push
add
aas
xchg
jp
pop
clc
daa
push
xchg
add
bound
mov
pushf
pop
add
das
pop
pop
std
push
add
inc
xchg
add
add
cli
cmpsl
repnz
inc
add
jno
fnstenv
movb
add
dec
fsubrp
jo
ja
into
push
lods
mov
cmp
andl
add
xchg
add
mov
add
push
add
dec
pop
push
cmp
rolb
popf
push
mov
mov
ljmp
movsb
add
lcall
mov
hlt
add
add
mov
cwtl
mov
mov
loopne
scas
lcall
imul
mov
pop
bound
mov
or
add
add
xor
and
add
adc
into
add
sbb
cli
jg
add
xor
push
or
add
inc
add
inc
add
jns
add
mov
add
inc
push
pop
lds
add
inc
lret
ret
add
jne
movsl
push
mov
mov
pop
add
push
add
gs
lea
xchg
jle
add
xchg
out
rolb
call
xor
aad
add
add
mov
fcmovbe
js
jo
sbb
push
enter
adc
push
add
sub
mov
mov
mov
cltd
ret
movb
lods
sbb
xor
das
and
test
pop
xchg
pusha
add
mov
add
jbe
add
sbb
add
out
mov
mov
lods
inc
add
push
pusha
add
mov
int
int
pop
loopne
push
add
mov
add
pop
jns
insb
sub
add
jne
add
mov
loope
nop
add
push
pop
dec
in
mov
testl
mov
dec
push
sahf
fisttpll
shll
add
mov
add
mov
jo
scas
movsb
add
add
addb
das
adc
pushf
popf
out
fmuls
insb
idivl
out
jle
imul
xchg
addb
lds
add
add
popf
add
mov
add
add
fs
add
testb
xchg
add
and
mov
add
and
add
add
out
inc
add
inc
dec
je
lret
out
push
addb
add
sbb
push
add
cmp
out
stos
push
add
mov
data16
ret
and
mov
add
mov
add
inc
or
add
popf
scas
in
leave
or
jnp
add
les
inc
ds
addr16
add
fstpl
xor
xor
push
orl
add
add
add
mov
std
addb
mov
add
add
stos
das
sbb
rolb
ljmp
es
lods
ja
adc
or
add
xor
mov
lods
hlt
add
xchg
add
add
cwtl
pop
arpl
mov
insb
add
mov
or
add
or
add
outsl
cmpsb
add
add
cmpsl
push
add
inc
lock
dec
sbbl
add
mov
fildll
rorl
add
add
add
or
push
adc
inc
add
add
test
add
mov
sub
add
add
mov
pop
add
dec
jle
pop
mov
insb
push
add
cmp
fnstsw
cs
fwait
add
inc
xor
sbb
and
cmp
fnsave
je
mov
adc
mov
gs
fnstenv
pop
xlat
and
inc
add
addb
popf
ja
add
scas
mov
imul
push
add
mov
cmp
stos
xor
xchg
add
int3
inc
imul
enter
add
add
pushf
lcall
insb
cwtl
fsincos
inc
jns
in
and
dec
je
icebp
jmp
inc
add
sbb
lock
testb
dec
sbb
test
add
mov
sub
addb
jns
mov
add
test
sub
dec
jne
pusha
add
add
add
add
dec
jg
cli
jae
jnp
add
add
push
add
dec
in
imul
cltd
and
push
mov
into
jne
add
mov
pop
sbb
xchg
insb
addb
add
jb
push
dec
add
add
add
sub
popf
dec
out
mov
add
xor
aaa
jp
mov
mov
add
enter
pop
repz
testb
sub
lds
sbb
mov
inc
jne
mov
pop
and
jb
repz
inc
add
add
popf
xchg
aas
sub
ret
add
int3
xchg
aas
adc
icebp
ja
add
add
fsubrs
inc
add
sbb
add
repnz
jecxz
ret
test
lcall
add
inc
add
add
add
and
mov
add
fbstp
add
movsb
add
sub
out
ret
in
push
add
add
ror
push
cld
push
add
sbb
adc
mov
jmp
fwait
out
iret
faddp
aas
add
jg
add
lods
mov
addr16
add
push
add
xorl
dec
repnz
rcll
andl
xchg
xor
dec
mov
aaa
jecxz
push
mov
dec
ret
adc
mov
jle
add
cmp
xchg
addb
add
add
addb
aam
pop
push
stos
xchg
pop
push
addb
add
mov
in
mov
add
testl
out
test
stos
cli
fidivs
jle
roll
or
popf
dec
push
add
test
push
fcmovnbe
add
dec
mov
clc
bound
mov
push
add
ja
outsl
addb
addr16
lahf
sub
ucomiss
sub
add
ja,pn
jecxz
xor
push
inc
add
imul
push
add
add
pusha
add
add
xchg
add
cltd
lods
xchg
add
arpl
pop
mov
pop
xchg
gs
add
rolb
ficomps
add
inc
add
dec
jnp
add
js
add
add
add
clc
sub
dec
jne
lcall
add
add
mov
or
loopne
scas
cmpsb
add
add
mov
jge
sahf
mov
add
inc
add
add
add
mov
add
movb
adc
ja
loopne
push
pop
add
cmpsl
cli
add
fcoms
push
add
jno
popf
lods
or
and
fstps
sti
sahf
pop
lcall
sbb
push
push
das
sub
sbb
add
mov
stos
sbb
add
jo
jbe
adc
adc
cmpsb
add
outsb
jle
add
add
out
or
lock
add
jl
add
loope
push
add
inc
lcall
sbb
add
add
test
aad
dec
imul
add
mov
add
add
test
adc
cmpsb
add
add
add
inc
add
movsl
or
addb
mov
push
mov
jmp
jl
dec
lods
inc
add
pop
ljmp
xchg
mov
mov
cli
add
add
pop
xchg
cmpl
fldenv
mov
inc
in
inc
mov
rolb
das
or
rolb
add
sub
add
mov
movsb
add
popf
xchg
repnz
sub
and
mov
add
jns
push
add
fistpl
movsl
mov
pop
inc
add
inc
add
ffree
push
mov
add
push
add
bound
mov
and
mov
jns
add
jne
sub
test
lods
jmp
add
mov
inc
lods
mov
mov
or
add
push
add
mov
and
iret
int
lret
int3
and
addb
test
add
repz
test
stos
xchg
jl
xor
mov
js
mov
shll
pop
mov
divl
popf
cltd
addr16
daa
test
ja
add
fldl
add
jnp
outsb
dec
movb
add
clc
mov
in
mov
lcall
add
add
add
mov
mov
ds
add
add
add
stos
lret
mov
out
add
dec
lret
test
add
add
xor
mov
inc
add
add
jl
add
into
loop
loop
rolb
cmp
add
les
aam
insb
je
push
les
mov
add
pop
lds
jecxz
add
add
add
inc
in
adc
pop
sahf
cmp
add
dec
les
rolb
inc
leave
aam
loope
dec
in
add
add
push
pop
out
adc
xor
add
add
mov
mov
add
dec
pop
fsubs
add
add
imul
push
adc
add
int3
dec
mov
dec
xchg
add
add
sbb
test
out
inc
lret
add
leave
cmp
or
repnz
add
add
pop
outsl
outsb
bound
mov
add
clc
stc
dec
enter
add
xor
out
xor
pop
in
std
push
xchg
lock
jg
xchg
mov
out
mov
add
pusha
add
add
clc
or
or
xor
adc
lahf
add
add
add
dec
mov
add
add
add
add
pop
mov
aaa
mov
das
push
add
dec
insb
sbb
jne
std
cmpsl
push
add
mov
mov
add
or
mov
inc
pushf
cmp
mov
cmc
push
add
add
ror
and
add
mov
movsl
xchg
and
mov
movsb
add
pop
stos
cmp
push
ds
mov
sub
in
mov
andl
sbb
mov
add
addr16
int3
push
add
sub
popa
test
fstl
mov
imul
inc
add
add
add
dec
jns
sub
jne
shll
adc
hlt
add
jo
sarl
add
mov
jge
add
out
push
inc
add
fdivrs
jp
std
ficomps
jg
add
push
sub
mov
jmp
xchg
fiaddl
jle
add
dec
shrl
inc
das
add
aad
add
mov
lea
add
lret
sahf
sbb
add
nop
add
add
cmp
fists
add
test
pop
test
xor
jmp
add
mov
add
sbb
mov
dec
push
rolb
xchg
add
add
push
xchg
and
mov
or
and
mov
add
push
add
sub
add
int
enter
xor
push
xor
adc
gs
rolb
add
mov
fnstsw
les
jg
jle
sahf
jnp
push
cwtl
push
add
idiv
sti
inc
jecxz
cmp
add
mov
mov
jmp
jp
in
pop
mov
dec
inc
mov
bound
mov
cmp
fisubl
xchg
add
addl
shl
add
xchg
add
mov
fbld
mov
push
dec
adc
rolb
movsl
cltd
test
adc
test
xor
push
std
insl
jle
and
mov
jge
test
jle
add
xchg
add
js
sti
imul
dec
mov
pop
imul
mov
lock
mov
push
jecxz
add
add
push
add
add
push
add
adc
movb
negl
xor
mov
cli
out
mov
sbbl
adc
int
add
add
fiadds
outsb
test
add
add
jecxz
mov
movsl
xorl
out
cli
sbb
mov
hlt
add
push
enter
rolb
mov
lahf
push
mov
push
add
mov
add
add
inc
test
insb
or
mov
dec
or
in
add
cmp
lock
add
insl
xlat
and
addl
sahf
mov
inc
sub
ja
dec
mov
cmp
jns
add
fwait
dec
je
cmc
sub
mov
mov
aam
push
sub
imul
inc
mov
ljmp
add
lods
push
mov
mov
gs
loop
jb
mov
push
add
add
add
inc
sub
add
loope
jg
xchg
mov
pop
clc
adc
add
cmp
add
hlt
add
stc
jb
insb
ret
pop
mov
xor
rcll
repz
mov
sub
rol
leave
adc
mov
push
xor
xlat
xchg
pop
cmpsl
cmp
add
aas
or
xchg
mov
dec
xor
data16
inc
add
int
and
mov
out
jp
add
js
sbb
rcll
pop
sbb
add
out
cmp
push
xor
mov
mov
in
and
int3
outsl
inc
add
xchg
add
out
andl
xchg
add
or
add
add
add
cmp
fidivrl
repnz
add
add
xor
add
mov
shrl
jp
lods
or
xchg
add
mov
inc
outsb
scas
push
add
add
mov
ss
add
push
add
add
stos
das
sti
data16
mov
ds
aad
push
add
pop
icebp
clc
addr16
adc
mov
negl
push
stc
push
int3
lea
test
std
aas
cli
or
adc
push
add
add
sub
add
shrl
add
add
ljmp
in
mov
jmp
sub
add
add
ljmp
stos
loopne
insb
pop
dec
call
push
push
add
and
xor
jbe
inc
add
push
mov
add
pop
push
add
push
and
mov
sbb
dec
dec
rol
add
add
cmp
dec
lods
pavgb
iret
inc
add
test
enter
das
or
add
add
mov
or
pop
jp
in
js
js
add
xchg
jns
add
add
xlat
shll
sub
add
fwait
les
xlat
cmc
pusha
add
xorl
add
scas
mov
push
fstl
add
add
add
add
add
inc
add
add
cmp
mov
out
push
mov
shll
mov
add
add
lds
movsb
add
data16
imul
add
mov
aaa
out
jmp
jp
cs
add
add
add
mov
out
pop
jp
loope
xor
cmp
add
in
jb
divl
lods
xchg
add
add
stos
in
cwtl
xor
mov
sti
mov
stc
mov
pop
popa
jg
in
mov
add
mov
mov
repnz
add
add
add
mov
jae
aaa
push
leave
fnstsw
xchg
add
push
cmpsb
add
stc
testb
cmp
add
xor
hlt
add
or
pop
out
aaa
add
mov
add
cwtl
xchg
int
jnp
xchg
movb
add
push
mov
loopne
xor
push
add
lret
loop
loop
mov
iret
pop
pop
lahf
popf
dec
sub
add
enter
xchg
jns
mov
adc
pop
loope
pop
push
popf
outsl
out
mov
jle
add
add
loop
daa
and
mov
lods
stc
add
aad
add
jg
dec
arpl
imul
add
ret
add
mov
add
ljmp
jb
adc
enter
cld
outsb
pop
scas
pop
and
add
test
in
push
jp
cld
mov
in
mov
lahf
repz
or
pop
or
jg
pop
inc
jmp
outsb
incl
add
imul
pop
jg
add
mov
bound
mov
daa
cmp
into
mov
ret
inc
or
fists
and
or
add
add
dec
dec
and
dec
stos
pop
addr16
sbb
add
adc
test
mov
test
dec
aam
jecxz
mov
jp
add
add
adc
push
add
ljmp
add
das
mov
add
cmp
repz
jnp
sbb
dec
jae
jmp
sbb
add
add
push
mov
xor
lods
or
add
add
fsubs
mov
mov
cli
iret
push
xor
adc
hlt
add
xchg
mov
mov
cmpsb
add
adc
in
jno
sbb
dec
subl
xchg
push
lcall
js
fisubs
mov
dec
fldenv
jg
clc
sub
add
arpl
dec
nop
add
lret
xchg
stos
testl
sub
push
sbb
pushf
xor
mov
add
cmp
add
in
xchg
add
cmp
cmpsl
cmp
mov
orl
cmp
xlat
mov
add
add
cmpsl
add
mov
add
jno
pop
data16
mov
and
mov
mov
add
add
add
xor
lods
sarl
inc
add
call
add
cmp
mov
add
pop
lea
mov
cmc
sub
sub
add
mov
loop
ljmp
dec
movb
xor
mov
add
adc
rolb
scas
addb
outsb
jmp
popf
adc
add
add
paddsb
add
mov
sti
and
xchg
sti
outsl
jns
jno
lea
fidivs
sbb
pop
ret
loop
mov
ds
sub
jnp
push
add
add
mov
mov
pop
mov
add
cmp
pop
leave
rcll
ds
jp
add
add
test
movsl
daa
inc
add
inc
add
add
loope
pop
sbb
mov
pushf
in
cmp
jmp
mov
cltd
or
add
jge
sbb
aad
add
ljmp
add
inc
add
add
mov
add
add
jecxz
add
jbe
into
add
add
out
add
adc
cmovno
mov
push
inc
add
lds
repz
jmp
add
pop
insb
ret
fildll
dec
sbb
mov
movb
jl
outsl
pop
lods
out
in
dec
jbe
loopne
lds
add
mov
decb
aas
jne
add
xchg
sti
xor
mov
or
add
ja
enter
mov
fs
add
daa
pop
std
mov
add
pushf
test
mov
gs
das
pop
sbbl
test
add
dec
push
add
std
dec
sbb
movb
add
cmc
iret
addr16
shll
mov
movsb
add
sbb
aam
mov
add
mov
movb
insb
imul
int
pop
je
cmp
movsb
add
add
add
jnp
dec
popf
mov
aam
scas
pop
sub
add
adc
adc
dec
fidivl
repnz
loop
out
jnp
add
add
add
adc
sub
add
add
call
or
popf
hlt
add
cli
call
add
imul
add
xchg
jmp
fxch
and
push
add
add
fnsave
lods
push
add
or
neg
lret
notl
ret
lods
testb
push
add
mov
test
daa
push
or
imul
add
add
int
icebp
sub
add
or
add
out
sbb
outsb
pop
aam
pop
stos
sub
testb
lahf
bound
mov
add
xchg
addb
add
nop
add
mov
jge
add
cs
inc
and
mov
iret
cwtl
jecxz
add
add
add
lds
add
es
add
mov
adc
loope
fidivs
cmp
xor
push
fisttps
jo
cmc
or
je
and
mov
lds
jp
inc
test
dec
xchg
popa
dec
mov
outsb
scas
mov
ds
xor
xor
xchg
jns
mov
movsb
add
and
jp
pop
stos
mov
mov
adc
xchg
rcl
add
add
jecxz
dec
and
jge
add
and
mov
xor
call
add
dec
jg
mov
rolb
stc
leave
jecxz
pusha
add
aam
scas
jecxz
test
mov
and
sbb
mov
add
add
or
fisttps
lea
cmp
cld
imul
mov
fdiv
jmp
cmc
pop
mov
add
mov
mov
add
sahf
inc
imul
mov
cli
sub
popa
xor
and
popa
in
rcll
test
add
rolb
popa
push
imull
dec
xchg
add
or
ret
les
mov
fadd
add
xchg
push
loope
mov
add
fimull
jae
and
mov
jnp
adc
jns
aaa
outsb
xor
into
mov
push
add
adc
add
mov
rcrl
cmp
or
cmpsb
add
add
add
icebp
movb
mov
cmp
push
xchg
les
mov
hlt
add
fiaddl
add
and
add
xor
jb
rolb
js
rcll
shll
pop
mov
add
nop
add
arpl
add
add
pop
sahf
int3
push
add
rolb
pop
mov
int3
and
mov
add
and
add
push
xchg
add
push
cmc
or
repz
out
ret
testb
mov
lods
push
add
scas
fadds
mov
test
add
add
lret
or
add
adc
stos
pusha
add
mov
xor
inc
add
add
or
scas
sysenter
add
xchg
in
cmp
add
dec
xor
ljmp
jbe
mov
shll
or
add
lahf
jl
add
leave
notl
lret
addb
add
add
sahf
in
mov
stos
jo
lret
clc
data16
add
fldcw
add
add
add
xor
out
add
fyl2x
rolb
xchg
add
jp
add
add
add
data16
js
dec
dec
inc
add
nop
add
mov
mov
push
add
fldt
enter
outsl
dec
mov
dec
cld
xchg
aas
ja
push
add
add
pop
bound
mov
mov
mov
add
mov
icebp
sub
lods
mov
insb
lcall
in
lahf
xor
stc
testb
pushf
xchg
add
pop
mov
mov
add
add
aaa
cmp
add
leave
cmp
mov
mov
pop
pusha
add
add
add
jns
add
pop
inc
add
push
int3
pop
adc
repnz
adc
dec
add
adc
jns
and
out
inc
add
ds
fisttps
or
sub
add
xor
out
pop
cs
lcall
dec
mov
xchg
add
add
lret
mov
adc
movsl
cmc
add
mov
icebp
insl
and
mov
iret
ljmp
bound
mov
jae
xchg
mov
add
mov
add
mov
push
add
inc
rorl
test
add
std
dec
iret
jecxz
data16
add
or
repnz
stos
dec
lds
add
add
pop
stos
data16
lds
add
xor
jmp
fsubrl
and
aas
fdivrl
cmc
and
data16
testb
lret
sub
add
xchg
add
clc
dec
imul
fildl
add
add
imul
xchg
add
add
mov
faddp
push
add
push
scas
xchg
push
push
test
add
je
dec
pop
push
add
mov
test
sti
negl
xchg
jmp
add
into
popf
lods
push
add
mov
jae
jp
lods
scas
int3
cmp
adc
add
xchg
mov
add
icebp
jne
mov
cmp
add
add
jle
add
add
inc
mov
add
shr
icebp
fmulp
fdiv
add
imul
add
testb
adc
stc
aam
test
hlt
add
clc
sub
add
add
push
add
dec
sub
add
add
adc
pushf
leave
je
inc
mov
add
mov
add
movsb
add
push
mov
rolb
push
fwait
out
cltd
inc
add
add
call
inc
loopne
ja
mov
rolb
xchg
add
ja
push
add
or
push
lret
sub
out
lock
or
jge
xchg
sub
add
stc
inc
ffreep
add
hlt
add
lods
xorl
pop
movsl
or
std
xchg
test
mov
inc
add
int
add
icebp
sub
mov
popa
cmp
inc
popa
addr16
sbb
add
lret
add
add
outsb
mov
aas
fs
add
sub
add
fistpll
dec
mov
or
lds
mov
add
add
add
mov
mov
mov
ret
pop
cmp
mov
sub
pop
in
clc
loope
add
inc
add
jne
add
ret
clc
scas
push
add
add
add
mov
xor
jl
add
dec
xchg
das
pop
sub
rolb
sub
add
arpl
mov
sub
adc
cmp
std
jle
sbb
mov
add
push
insl
adc
push
int3
cmp
jne
add
pop
enter
xchg
add
add
mov
sub
push
fisubs
add
and
push
dec
adc
movsb
add
jne
mov
mov
add
xchg
add
leave
xchg
add
es
xchg
sbb
add
movsl
aas
int
fstpt
add
out
cli
push
add
sbb
insb
lea
xor
add
inc
faddp
xchg
or
push
loop
mov
cli
arpl
int3
popa
add
std
add
fwait
xchg
add
addb
add
insl
or
outsl
cmp
jmp
das
shll
add
lock
lea
add
cmc
mov
rcl
jo
sub
jg
pusha
add
pop
mov
xor
xor
adc
sub
push
add
add
sahf
xchg
xor
std
sbb
sub
std
pop
push
add
sub
add
aaa
lret
mov
dec
stos
sub
push
or
jecxz
rol
add
out
in
lcall
push
add
dec
pop
push
add
dec
adc
jne
dec
test
jbe
mov
mov
lds
mov
add
add
enter
in
xchg
imul
push
in
cmp
add
and
mov
jo
dec
mov
mov
jge
adc
adc
cmpsb
add
add
mov
xchg
add
add
add
add
mov
aaa
sbb
and
add
mov
xor
push
xor
jge
in
inc
add
in
adc
mov
in
push
pusha
add
push
nop
add
mov
fmul
push
add
add
fdiv
out
mov
mov
pop
add
movsl
jns
add
cmpsl
notl
add
add
jnp
xor
xchg
add
leave
adc
sahf
mov
mov
mov
mov
daa
add
mov
imul
sub
push
add
lcall
pop
mov
pop
dec
mov
add
cmp
sbb
add
test
push
stos
addb
mov
int3
xor
mov
popf
ds
xchg
add
add
pop
sbb
cs
outsl
jno
addb
add
add
xor
aam
jns
scas
std
gs
add
inc
add
dec
addb
add
add
mov
add
xor
add
add
add
shrl
clc
cmp
jecxz
popa
popf
dec
pusha
add
add
data16
add
test
push
cmpsl
ja
insl
movsb
add
pop
or
add
inc
ret
add
push
add
jle
scas
test
insl
jecxz
bound
mov
add
add
add
add
aaa
xor
rolb
int
sub
push
push
adc
testb
add
cmp
inc
mov
pop
xchg
add
ljmp
pop
add
sub
push
mov
mov
enter
ja
or
inc
add
or
add
adc
sub
mov
add
sbb
add
sbb
cwtl
xchg
or
add
and
xchg
out
data16
scas
xor
out
addr16
int
jecxz
in
das
adc
cwtl
jne
pop
pushf
mov
dec
clc
cmc
cld
xor
lahf
jbe
pop
jmp
cmpsb
add
cld
and
mov
push
arpl
insl
push
pop
xchg
jmp
lahf
mov
imul
popf
add
add
cmc
push
mov
push
aam
bound
mov
data16
imul
movsb
add
nop
add
aad
mov
mov
adc
add
in
out
add
mov
loopne
loop
lods
adc
jns
add
add
shrl
dec
pop
inc
jp
jbe
data16
and
mov
add
mov
add
add
out
mov
test
imul
data16
repz
add
add
icebp
push
add
add
jne
or
ja
add
lcall
pop
xchg
dec
mov
mov
add
not
mov
stos
push
add
add
je
push
cmp
push
and
aam
andl
add
iret
sub
pop
adc
xchg
push
inc
add
dec
cmp
pop
data16
adc
inc
add
add
pop
pop
mov
lcall
adc
outsl
lahf
xlat
daa
dec
loopne
negl
mov
stos
or
xor
or
mov
jb
mov
push
lahf
iret
jnp
add
movb
mov
add
add
lret
jns
pushf
mov
add
stos
mov
fwait
sahf
lcall
fnstenv
or
xchg
mov
popf
jae
lods
xor
adc
std
jbe
into
das
addb
add
dec
push
add
add
cmpsl
push
add
add
testb
cmp
add
add
pop
ret
popa
outsb
inc
xchg
add
mov
add
add
add
pop
filds
pop
cmp
mov
rcll
scas
mov
pop
mov
lds
adc
insb
pop
out
arpl
stos
rolb
add
xchg
add
cli
dec
aad
popf
jecxz
add
mov
and
mov
testb
sbb
add
and
add
repz
xchg
add
add
add
ficomps
pop
jbe
jmp
add
adc
xor
sub
xor
outsb
jl
xchg
or
add
stc
movsb
add
inc
add
in
push
add
in
in
dec
mov
push
add
push
add
add
add
push
fisubl
add
or
add
imul
add
jmp
inc
xchg
add
sbb
or
ret
fwait
mov
repnz
in
mov
adc
clc
mov
adc
jmp
stc
push
add
repz
xchg
add
xor
inc
add
add
cmp
xor
cmpsl
or
add
into
cmp
xor
stc
aaa
fsubrs
pop
dec
adc
and
push
add
inc
add
jno
inc
loope
pushf
jne
add
fstl
sahf
xorl
outsb
mov
pop
ljmp
inc
add
add
cmp
jb
dec
negl
testb
xor
inc
add
xor
fcomps
pop
aad
enter
add
lea
mov
add
int3
addb
rolb
add
jge
decb
inc
push
add
jge
adc
aad
pop
lods
mov
lret
int3
insl
dec
pop
and
push
xor
test
js
xchg
add
jmp
add
leave
push
pop
imul
icebp
leave
pop
mov
add
notl
dec
idivl
add
add
add
jge
pop
jp
lds
add
adc
cmpl
mov
loope
mov
add
adc
pop
pop
ds
add
outsl
aad
sbb
jle
mov
add
add
and
in
push
jp
jge
add
add
push
addb
shll
inc
jns
push
add
in
cmp
add
jo
xchg
add
loope
mov
xchg
add
add
dec
mov
mov
pop
adc
add
mov
and
std
xor
and
shr
aas
sbb
or
icebp
sbbl
stos
mov
add
ja
add
iret
frstor
mov
sbb
ljmp
mov
and
sub
add
mov
mov
jecxz
or
cmp
aas
mov
les
sbb
and
add
lds
add
fwait
inc
add
jle
cmp
push
add
ds
mov
push
mov
add
sbb
mov
adc
adc
adc
test
mov
xor
aam
ljmp
mov
dec
xchg
ds
aaa
stos
fisttps
fcomi
add
into
cmp
sbb
add
call
add
fistps
data16
jg
add
adc
test
or
pop
das
or
jno
mov
add
les
push
iret
jmp
add
les
or
add
adc
or
mov
push
lret
xor
xchg
movb
movb
pop
mov
sbb
imul
mov
lock
aad
add
sub
cmp
ret
fcmove
xchg
addl
mov
sbb
jae
ret
stos
adc
dec
leave
pop
sbb
push
test
add
ljmp
add
xor
dec
sub
lcall
dec
add
loop
pop
ror
push
jns
sub
ds
loop
inc
add
jo
mov
sub
push
scas
arpl
out
jmp
mov
add
or
pop
mov
dec
mov
aas
mov
lods
jne
xor
jae
add
adc
nop
add
add
add
push
xchg
sbb
leave
addb
movsb
add
movsl
and
fldt
add
jae
mov
mov
arpl
fucomip
ja
add
jne
add
dec
dec
jo
test
mov
mov
addb
movsb
add
xlat
xchg
xchg
add
add
data16
pop
sarl
add
and
mov
sub
sbb
add
add
sbb
aaa
das
iret
icebp
sbb
lret
add
lret
stos
adc
or
cmp
add
outsl
dec
sub
out
cmp
mov
testb
inc
add
sbb
in
add
add
aad
add
std
gs
fildl
loop
in
mov
add
std
push
add
dec
or
add
add
enter
add
add
rolb
push
inc
add
insl
rolb
xchg
add
dec
fildll
xlat
ljmp
js
add
adc
out
mov
add
jns
out
pop
movsb
add
sub
outsb
fldenv
or
addb
add
rolb
push
mov
sbb
add
fadds
fiadds
add
add
add
fisttpl
xchg
data16
mov
adc
data16
add
add
add
add
repnz
xor
repz
add
add
pop
daa
inc
sub
add
sbb
add
and
mov
add
mov
repnz
add
mov
movsb
add
add
and
fadd
data16
inc
add
std
ret
call
ja
ret
xor
add
add
pop
and
mov
add
add
test
cmp
movb
add
mov
add
add
scas
test
dec
add
add
pop
jo
pop
sbb
lods
cmp
dec
aad
aaa
into
pop
fidivrs
iret
stos
mov
aas
hlt
add
add
adc
jp
mov
lods
jne
and
fiadds
inc
or
inc
jg
add
fwait
cmpsb
add
mov
and
mov
rolb
loop
mov
les
cmp
test
jns
push
add
add
sbb
bound
mov
mov
add
pmulhuw
push
add
push
push
add
adc
repz
das
imul
cmp
pop
mov
pop
mov
rolb
pop
data16
cli
jp
sub
pop
jle
add
mov
js
add
mov
mov
add
scas
mul
pusha
add
lahf
dec
stos
movl
add
std
fisttps
mov
add
cs
dec
pop
mov
movb
ljmp
xchg
add
cli
push
add
jo
data16
cmp
ljmp
mov
arpl
xchg
add
add
jge
in
leave
cmpl
add
add
mov
xchg
add
add
xor
mov
pop
das
jns
dec
and
ds
testl
add
out
addb
add
add
add
push
add
xchg
add
mov
jl
add
icebp
or
jno
stos
push
cmp
sbb
out
jmp
adc
jno
mov
bound
mov
xchg
add
add
and
mov
mov
push
add
mov
pushf
or
test
jb
in
or
add
sbb
add
out
pop
inc
add
jno
cmpsb
add
add
add
jb
xchg
jnp
lcall
icebp
out
push
je
adc
lds
add
inc
add
jge
add
add
jg
add
fisttps
int
push
push
add
add
or
jno
push
bound
mov
push
add
mov
dec
xlat
lret
cltd
pop
in
pop
xor
add
movsb
add
mov
and
jl
add
pop
scas
and
mov
mov
icebp
xor
jl
add
jp
mov
add
ljmp
test
or
push
lods
aas
pop
popa
xchg
rolb
outsl
outsb
loopne
je
add
loop
jb
mov
mov
inc
add
add
xchg
add
hlt
add
add
cmp
xchg
add
add
cmpsb
add
add
pushf
cmp
scas
stos
sub
les
mov
xchg
push
adc
pop
and
or
lahf
pushf
cmp
shll
mov
pop
push
add
lret
jb
dec
add
mov
ficomps
lods
imul
sbb
add
xchg
push
mov
stos
push
mov
add
add
add
dec
dec
gs
mov
push
xchg
xchg
inc
mov
mov
bound
mov
hlt
add
in
aad
xchg
add
xchg
pop
aad
add
iret
in
in
outsl
sbb
add
out
mov
loope
mov
mov
add
dec
cmp
adc
pop
nop
add
dec
dec
insl
sbb
add
adc
jl
or
add
add
add
aaa
outsl
mov
fdivl
aam
sub
stos
movsb
add
out
hlt
add
in
dec
pop
repnz
pop
js
dec
into
nop
add
mov
add
push
dec
adc
inc
imul
push
cmpsl
addb
add
push
add
ss
cmp
pop
cwtl
addb
imul
jg
inc
ds
jecxz
add
jnp
sub
pop
loopne
fucomi
imul
jne
and
add
add
movsb
add
cwtl
rolb
mov
add
sbb
mov
hlt
add
lock
lea
add
mov
in
enter
adc
mov
fdivl
add
add
mov
push
imul
test
movsb
add
xchg
add
sbbl
adc
add
adc
mov
ja
testl
int3
hlt
add
das
nop
add
or
fwait
pop
sarl
mov
roll
adc
aaa
cmc
dec
jb
mov
add
jle
sub
es
adc
test
add
testl
add
add
jne
mov
mov
mov
xchg
add
aam
jns
add
add
xor
jle
stos
inc
imul
out
ljmp
pop
cld
pop
les
dec
inc
add
addb
and
out
addb
pop
pop
addr16
mov
lock
mov
add
push
sbb
add
mov
add
inc
add
mov
aam
shr
rolb
add
mov
shld
and
out
push
push
add
cmp
add
insl
movsl
psraw
cmpl
add
mov
js
push
add
pop
pushf
sbb
inc
push
out
or
dec
sub
jl
bswap
loopne
sbbl
add
mov
push
adc
mov
cmp
add
stos
int3
add
cmp
sahf
ret
iret
outsl
pop
stos
pop
or
add
add
push
ror
mov
aad
add
add
add
mov
push
test
mov
dec
loope
push
rolb
jp
fstps
add
rolb
mov
or
add
add
and
jp
push
add
add
jp
add
stos
popa
dec
out
ljmp
dec
jne
mov
add
add
out
xor
xor
mov
push
add
mov
jno
loop
leave
pop
popf
andl
add
scas
les
inc
add
movsl
xchg
mov
add
pop
and
mov
add
push
add
push
out
in
xor
out
pop
shr
faddl
add
add
sahf
jae
inc
add
add
jecxz
add
add
stc
ja
cmp
inc
lock
add
and
hlt
add
push
add
xor
ret
dec
lahf
adc
int
sub
push
add
mov
cltd
in
sbb
add
mov
inc
stc
out
ja
pop
test
mov
push
jno
add
add
add
mov
xor
cltd
popa
sub
add
sbb
jno
add
cmp
add
movsb
add
popf
pushf
leave
ja
add
aaa
sbb
add
aad
add
xchg
nop
add
add
jecxz
adc
out
add
mov
and
mov
aas
scas
mov
add
inc
xchg
jg
roll
dec
cld
push
or
in
adc
fistpll
loope,pt
adc
gs
jns
jmp
test
sbb
xchg
inc
movsb
add
push
add
pop
xchg
add
arpl
add
add
cld
mov
ror
lahf
add
into
add
dec
jmp
pop
sbb
add
add
or
and
mov
add
pop
out
mov
add
loop
or
push
into
and
enter
add
sbb
pop
cld
add
xchg
jecxz
add
jne
or
icebp
xor
test
add
pop
mov
push
adc
inc
add
inc
push
add
jp,pn
das
xchg
add
lods
cmp
mov
addl
add
addb
inc
add
out
mov
jg
add
adcl
xor
movsl
lret
fadds
stos
mov
or
cwtl
mov
fistpl
xlat
cmpsl
dec
insl
lret
and
mov
mov
jmp
outsb
std
aaa
push
add
add
add
cmp
adc
add
add
mov
add
xchg
add
scas
mov
add
add
add
loopne
fcompl
sbb
add
adc
adc
sub
push
add
sub
add
xchg
add
loopne
xlat
cmp
add
dec
and
data16
std
rolb
push
add
mov
add
xchg
xchg
add
add
add
add
mov
fstps
or
add
imul
mov
std
sub
cmp
les
adc
jo
cld
addl
repz
mov
or
decb
dec
popf
push
stos
pop
pop
sti
push
nop
add
cmp
jge
cmpl
loopne
mull
setnp
add
push
add
addb
xchg
dec
leave
mov
mov
movb
pop
pusha
add
xchg
add
movb
mov
or
xor
rolb
arpl
in
in
adc
mov
jo
pushf
mov
push
add
add
adc
xor
and
mov
mov
out
imul
sbb
mov
add
inc
add
mov
add
inc
push
insl
fstps
mov
push
add
xor
inc
add
mov
outsl
je
adc
shll
add
add
add
cltd
sbb
cmp
cltd
fcomip
movl
add
and
stc
mov
movsl
aas
sub
flds
xchg
add
add
imul
add
add
add
mov
out
add
icebp
xchg
mov
add
leave
sti
mov
loopne
cmpsb
add
add
jnp
add
insb
test
jmp
ja
add
lfs
stos
je
mov
add
add
sbb
mov
mov
push
lock
mov
push
add
add
dec
jo
ret
add
dec
and
negl
adc
add
jno
addb
stos
test
rolb
fpatan
call
sub
fiadds
test
add
stos
and
jno
lea
push
add
xchg
in
mov
add
sahf
cmp
int
outsl
mov
add
pop
or
push
mov
xchg
xchg
ja
add
arpl
and
add
jmp
add
push
add
add
aas
dec
fldcw
add
iret
jle
into
and
out
insb
pushf
or
add
push
push
lods
addb
add
call
pop
pop
add
ret
lods
loop
or
xchg
mov
sarl
sbb
add
scas
cmp
iret
popa
lcall
aad
je
cmp
rolb
jno
xchg
adc
lods
or
push
sub
lret
add
mov
mov
cmc
ljmp
sbb
add
or
pop
fiaddl
test
movsl
incb
add
ljmp
aad
add
push
xchg
add
add
sub
pop
mov
movsb
add
pop
add
je
and
mov
sub
mov
mov
dec
mov
add
adc
mov
add
mov
xor
cmp
fwait
mov
push
add
jge
add
movb
adc
popl
pop
cltd
sahf
hlt
add
and
mov
imul
add
push
mov
add
add
push
leave
jno
jbe
add
xchg
add
out
stos
dec
jb
dec
mov
sub
add
mov
lods
add
fsubrl
xchg
jle
lea
add
cli
cmp
fdivrs
aas
jnp
test
aam
data16
add
cwtl
cmc
push
sarl
fwait
rolb
js
int
fsubs
test
xor
dec
fucomi
pop
fwait
push
lcall
add
movsl
pop
jo
xor
mov
pop
and
mov
loop
jo
sbb
sub
sbb
mov
and
cmp
add
lods
sub
add
rcl
ds
repnz
popf
cld
subl
add
lret
and
jmp
adcl
daa
lock
sub
in
movb
add
jg
add
mov
jns
sub
sub
add
ljmp
lret
out
dec
inc
add
jbe
out
jge
leave
sbb
inc
add
lods
add
pop
xchg
outsb
mov
mov
add
mov
movsb
add
add
add
ja
into
adc
mov
add
pop
scas
gs
dec
xchg
sub
scas
mov
fisubrs
and
add
add
pushf
int3
imul
pop
and
mov
mov
mov
mov
add
add
mov
out
imul
sub
push
add
mov
fcoms
call
sbb
add
jg
pop
addb
add
mov
add
je
mov
cmp
add
sbb
add
and
movsb
add
add
aaa
and
mov
ret
popa
and
mov
hlt
add
mov
nop
add
adc
mov
xor
mov
jbe
test
popf
or
cmp
hlt
add
xchg
add
push
add
lods
addb
mov
mov
loopne
in
cwtl
jae
add
leave
sbb
add
xchg
mov
xchg
call
add
mov
dec
addb
pop
or
jle
in
lea
lea
add
add
add
jnp
add
dec
pop
fucom
add
adc
and
cwtl
sbb
cmp
push
and
insl
lret
js
xchg
or
rolb
adc
inc
arpl
sub
data16
jae
fsubl
mov
ja
sbb
add
jecxz
inc
add
loop
mov
insl
fidivrs
dec
or
arpl
add
dec
adc
lock
xor
mov
adc
add
push
add
xor
add
movb
mov
add
sub
push
xor
mov
and
mov
lret
lods
jp
ficomps
add
lods
mov
popa
leave
enter
xor
jg
out
mov
rolb
add
add
pop
xchg
stos
les
fwait
into
pop
sub
add
cmp
or
add
popf
movb
inc
repz
mov
xchg
xor
add
xchg
dec
dec
call
jb
add
addb
add
xchg
mov
add
add
setle
add
add
jecxz
stc
aas
scas
addb
add
add
addr16
mov
out
jl
or
add
les
gs
add
add
xor
add
cmp
ja
adc
push
add
mov
add
std
mov
push
add
add
add
cmp
mov
or
jmp
lods
rolb
test
icebp
pop
add
pop
sub
add
add
rolb
test
add
addb
inc
inc
popf
or
es
adc
mov
dec
xor
sub
mov
inc
add
add
add
add
les
pusha
add
or
add
faddl
inc
dec
prefetch
xchg
add
aas
or
sub
add
xchg
push
inc
add
movsb
add
aas
inc
add
shll
pop
adc
outsl
mov
rcll
add
test
add
fstpt
dec
inc
mov
fisubs
add
inc
add
cmp
mov
xlat
dec
lret
cmpsl
xor
pop
int3
mov
das
fnsave
jmp
adc
add
adc
mov
pop
ljmp
popa
cwtl
es
testb
xchg
add
xor
rolb
aas
dec
add
add
xchg
mov
add
or
or
fsubl
out
pop
mov
sbb
cld
in
addb
dec
add
jb
scas
lahf
xchg
cmpl
add
add
leave
sub
mov
fidivl
mov
sti
mov
jne
push
add
mov
push
add
mov
add
insl
mov
add
add
outsb
btc
test
add
add
add
or
testb
push
add
add
mov
xor
or
xchg
dec
xor
mov
mov
insb
add
adc
rcrl
addb
add
std
mov
add
cmp
add
mov
in
leave
sti
insb
pop
movsb
add
mov
das
lods
xchg
ret
add
addb
add
mov
push
in
push
add
and
jnp
pop
lods
std
cmp
repz
add
in
imul
add
push
js
add
adc
pop
xchg
rolb
xor
stos
pop
fwait
mov
inc
add
fnstenv
add
add
push
xchg
lcall
addb
ljmp
fidivrl
sbb
add
xor
shrl
rolb
add
inc
add
jo
lret
sub
adcl
stos
les
and
lcall
xor
cmp
add
and
test
cltd
inc
inc
add
add
add
mov
xchg
push
add
push
add
add
mov
mov
out
xor
cltd
jecxz
ja
jmp
int
add
into
jl
add
add
repnz
out
into
cmp
aad
push
add
adc
stos
in
jmp
add
sbb
sbb
add
add
aam
mov
xchg
movb
add
ret
cmp
rolb
repnz
mov
add
jg
add
call
add
clc
insl
xor
add
mov
repnz
mov
in
jl
frstor
push
add
sbb
jbe
sub
add
adc
xor
or
add
add
jl
mov
add
cmp
dec
test
add
lcall
push
add
mov
add
mov
mov
add
jp
add
mov
push
and
mov
addb
sbb
push
add
addb
add
out
in
sarl
mov
add
mov
xor
jne
mov
xchg
jns
inc
add
push
and
cmp
add
in
sub
sarl
add
sbb
inc
sbb
ljmp
mov
add
jb
jae
xor
sub
mov
xor
sti
push
test
pop
stos
mov
fcoml
lods
mov
rolb
test
add
test
lods
es
and
scas
jp
outsl
out
dec
dec
ret
push
mov
and
bound
mov
xchg
add
bound
mov
out
or
fst
mov
dec
push
add
dec
or
inc
add
dec
ja
dec
lods
add
mov
and
add
adc
xor
xchg
add
testb
add
add
dec
sbb
add
movsb
add
out
mov
roll
add
cmc
xlat
sti
lahf
orl
test
mov
push
pushf
outsl
pop
aaa
stc
xor
mov
xchg
xor
sub
jp
ret
add
add
xor
fstpt
data16
dec
gs
jb
mov
and
mov
add
add
inc
add
push
jno
inc
push
sbb
push
jne
push
add
add
cmpsb
add
clc
add
pop
mov
xlat
out
lds
and
mov
add
and
popa
lock
xor
call
outsb
push
add
cwtl
jg
fdivrl
dec
gs
dec
hlt
add
pop
das
xchg
add
add
iret
jle
pusha
add
inc
add
inc
cmp
add
data16
mov
mov
pop
popa
jmp
popa
test
call
cli
loopne
mov
push
add
jbe
loop
lahf
add
add
aaa
lock
std
stc
fldcw
push
add
mov
adc
add
add
cmp
add
dec
int3
fidivrs
fisubs
icebp
add
in
xchg
pusha
add
jmp
sbb
insl
dec
jno
push
testb
dec
jl
add
loope
sbb
aaa
jne
add
add
or
dec
shll
add
push
add
add
dec
fcmovne
mov
rolb
add
call
jmp
push
add
popa
std
pop
add
rolb
add
rcll
add
add
mov
jge
add
inc
add
push
scas
push
add
mull
dec
sbb
popa
push
add
xchg
popa
mov
add
xchg
add
mov
test
mov
add
jae
xor
mov
ret
mov
add
test
xor
inc
sarl
inc
aas
rolb
jecxz
cld
mov
xchg
add
mov
jns
push
add
int
add
add
mov
add
jnp
add
sub
aad
add
inc
psubd
add
jno
out
add
mov
xchg
add
add
inc
jne
add
sti
mov
lock
or
push
daa
push
sbb
pop
pop
push
add
add
add
clc
mov
push
add
pop
sub
mov
mov
iret
popa
addr16
stos
ljmp
jbe
inc
add
popf
out
push
or
add
add
int
add
imul
mov
das
or
push
add
mov
push
mov
lret
nop
add
add
add
cltd
leave
out
xor
outsl
or
iret
je
stc
pop
leave
test
cltd
loope
xrelease
mov
test
lea
jbe
jbe
mov
test
dec
loop
pusha
add
test
mov
add
leave
inc
add
lret
mov
aad
pushf
inc
dec
jge
and
movsl
pushf
jg
cmc
sbb
fcmovne
dec
int3
jb
mov
daa
call
pop
jae
xor
cli
fstpl
mov
add
lods
xchg
out
or
add
cmp
add
rolb
jns
in
inc
aad
in
cmpsb
add
add
icebp
push
fldl
jg
mov
inc
add
add
jno
add
movsb
add
add
insb
adc
clc
mov
cli
loop
mov
imul
ds
pusha
add
add
or
fsub
add
movb
mov
add
mov
sahf
nop
add
mov
add
js
push
sbb
movsl
add
push
mov
and
mov
add
pop
fwait
mov
enter
add
xchg
add
popf
repnz
addb
loope
add
mov
add
rsqrtps
ljmp
lods
lret
fisubrs
add
popa
lahf
daa
adc
dec
ret
cmp
addb
add
pop
lea
adc
push
jl
add
mov
add
add
sub
mov
add
add
mov
out
push
add
or
fsubp
add
add
pop
jo
push
add
call
mov
lock
cmp
setae
pop
jle
add
mov
ja
add
push
adc
fidivrl
add
cs
or
add
adc
test
lods
dec
mov
mov
adc
xchg
add
xlat
xor
add
les
je
pop
sbb
fidivl
loopne
mov
addb
or
add
cs
sbb
insl
dec
inc
add
ds
out
int3
repz
mov
pop
jb
movsl
out
mov
mov
inc
mov
push
test
adc
mov
mov
orl
add
add
dec
andl
and
pop
push
sub
mov
add
mov
popf
mov
fs
add
testb
mov
add
add
adc
les
adc
pop
sbb
cmpsl
popa
adc
jle
sub
stos
arpl
addr16
pusha
add
add
add
fadd
add
add
lahf
cmp
xor
sti
loop
je
fadd
iret
jne
test
outsl
or
dec
push
add
jbe
fmul
xchg
add
js
pop
push
add
add
mov
movsl
adc
ret
testb
pop
push
mov
addb
mov
pushf
add
add
lcall
jp
les
hlt
add
fs
loop
fcoms
add
scas
pop
mov
stc
mov
lcall
inc
push
cmp
lock
add
mov
jno
mov
mov
cmp
movsb
add
das
xchg
jo
psrld
ret
xor
je
inc
icebp
out
add
cwtl
adc
popf
mov
add
mov
add
add
xor
jnp
add
das
fnstcw
aad
add
dec
pop
jo
inc
add
add
testb
add
mov
inc
add
push
ljmp
mov
add
imul
xchg
add
or
mov
or
add
in
sub
add
stos
mov
sbb
lahf
nop
add
std
xor
shl
add
ficoms
mov
les
inc
add
inc
add
ret
out
out
mov
adc
push
add
mov
icebp
pop
scas
pop
add
mov
add
nop
add
sub
add
test
int3
bound
mov
movsl
pop
cmp
cmp
out
adc
xchg
rolb
sbb
add
cmp
add
ret
cmp
add
mov
sahf
cs
into
lret
sub
inc
cmc
mov
inc
iret
rolb
mov
add
add
adc
lods
stc
shll
add
rolb
add
sbb
push
add
jbe
sub
mov
cmp
add
fwait
sti
stos
xchg
add
mov
adcl
scas
stos
lea
lret
ljmp
popa
mov
mov
sub
add
add
mov
inc
lret
fsubrl
mov
add
cwtl
les
into
popa
shl
test
mov
push
add
testb
xchg
leave
iret
mov
add
add
jmp
add
inc
movsb
add
jbe
mov
js
lret
add
movb
add
aas
js
pop
arpl
adc
xchg
cmpsb
add
adc
add
inc
or
jle
and
fs
fldl
mov
add
mov
mov
movsb
add
jmp
inc
add
stc
pop
add
in
cmp
or
dec
imul
cmp
add
mov
mov
repnz
add
int3
or
cmc
sub
addr16
add
sub
pop
mov
add
cmp
inc
jnp
leave
loopne
int
lock
xlat
enter
movsl
push
add
add
add
add
leave
add
cmpsl
lret
scas
dec
adc
push
mov
inc
add
pop
mov
mov
lret
test
pop
and
inc
xor
fisttpl
cs
pop
push
pop
cli
enter
insb
iret
mov
mov
sahf
adc
xchg
add
aam
mov
add
ficoml
mov
pushl
fisubl
pushf
pop
sub
fdivs
aam
aam
mov
out
call
mov
jmp
xor
mov
dec
pop
int3
xchg
pushf
ljmp
add
pop
or
add
lea
add
aaa
shll
movsb
add
mov
add
cmp
repz
push
add
cli
pop
mov
movsl
sarl
lds
xchg
xor
testl
cld
pop
outsl
mov
add
add
loop
mov
add
loope
lcall
add
mov
mov
jp
add
outsl
insb
and
fsubs
mov
imul
jbe
adc
fdivs
fstpt
cmp
arpl
movb
add
mov
add
test
mov
add
mov
mov
jns
repz
add
push
pop
xchg
add
add
mov
pop
mov
jmp
add
pop
repnz
and
mov
testb
into
xchg
add
cltd
lcall
ds
add
adc
imul
and
mov
into
mov
insl
add
rorl
mov
fdivs
aam
mov
add
dec
clc
sub
add
add
pop
stos
pop
cmp
jbe
hlt
add
insl
or
sbb
adc
add
lret
shll
inc
add
add
rcll
add
add
sahf
pop
sbb
add
push
and
mov
lret
add
xor
add
jl
add
int3
jo
add
ret
lret
xchg
aaa
test
mov
add
push
testb
add
pop
ret
xlat
add
mov
xor
add
add
cld
inc
imul
add
mov
int
movsl
mov
mov
add
fidivrl
adc
cltd
ret
jmp
pushf
fdivs
add
add
stos
adc
cmpsb
add
repz
sahf
in
and
mov
movsl
mov
jae
jae
add
xchg
bound
mov
add
punpckhdq
xor
jge
test
push
add
pop
mov
add
pusha
add
dec
movsl
jae
adc
add
jge
add
add
add
lock
push
pop
ljmp
bound
mov
add
mov
jnp
add
add
add
adc
and
mov
ret
data16
add
push
add
pop
inc
add
mov
add
add
add
add
mov
lods
sbb
add
inc
add
sbb
xor
push
shl
lods
push
add
inc
movsl
mov
add
add
add
sub
mov
sbb
mov
testl
dec
pop
sarl
jg
aad
add
add
pop
lahf
loop
loope
ss
add
sbb
or
hlt
add
subl
push
add
mov
int3
push
add
and
mov
adc
push
add
or
add
out
add
lahf
adc
divl
outsl
daa
adcl
pop
sub
cmp
push
cmpsb
add
add
add
xchg
mov
data16
add
add
mov
mov
popa
push
cmpsl
xchg
popf
cmp
add
inc
sti
rcll
inc
rolb
mov
mov
jecxz
add
mov
cmp
fdivr
ja
jb
xorl
in
js
add
cmp
jmp
jl
aaa
jp
push
and
push
add
popa
mov
add
mov
lret
dec
roll
lods
and
and
mov
clc
jmp
add
std
sbb
imul
and
mov
adc
rolb
mov
add
add
add
mov
cmp
pop
fistpll
jg
das
fisubrs
not
cld
adc
inc
add
or
ret
cmpsb
add
add
xchg
add
add
mov
lods
add
mov
push
add
int3
mov
into
sbb
movsl
sbb
mov
jo
rolb
pop
int
xor
or
xchg
adc
xchg
add
mov
imul
dec
ret
xor
frstor
mov
mov
iret
addl
cmc
repnz
xor
in
int3
xchg
cmp
sti
mov
lods
push
add
mov
pop
mov
sub
push
add
add
mov
mov
cmpsl
xor
cs
add
mov
enter
stos
sbb
or
xor
xorl
pop
pusha
add
push
mov
pop
rolb
aam
sub
xchg
mov
sub
cmpsb
add
jge
mov
add
dec
je
bound
mov
rolb
xor
repz
jp
add
fisubl
scas
fistpll
or
pop
insb
in
add
dec
pop
jbe
in
mov
mov
in
dec
rolb
ret
and
mov
icebp
ds
addr16
addb
push
xchg
jmp
addb
push
sub
roll
mov
add
add
push
add
out
dec
divl
add
push
das
mov
mov
add
les
movsb
add
add
or
data16
into
mov
movsb
add
add
add
dec
mov
inc
add
add
add
mov
add
or
xchg
add
add
add
add
outsl
jo
fcoml
lret
add
pop
jne
add
add
jno
stos
mov
stc
jecxz
in
adc
push
add
outsl
dec
or
inc
add
mov
xchg
add
mov
mov
jmp
add
add
add
add
add
add
pop
sub
adc
jne
add
add
in
xor
add
mov
fsubl
mov
sahf
sub
dec
fistpll
mov
add
push
add
add
jl
pop
clc
or
pop
test
xchg
leave
out
outsb
loope
add
push
add
sbb
add
xor
and
add
lds
gs
leave
adc
add
push
add
and
hlt
add
cmp
mov
imul
adc
inc
add
mov
add
aad
test
jl
cmpl
sub
pop
lcall
add
mov
cwtl
and
sarl
add
lcall
add
fidivl
xchg
sub
test
or
mov
cmc
les
push
int3
cmp
add
lods
xchg
add
je
xchg
add
add
add
jne
outsl
jg
add
add
lods
in
sbb
add
mov
sahf
jl
lret
test
add
jecxz
add
das
addr16
add
cltd
loopne
or
test
xchg
push
add
loope
add
stos
arpl
add
stos
shll
add
add
mov
add
add
xchg
push
cmp
adc
mov
and
mov
pop
add
xchg
add
dec
lret
das
outsl
cmp
aam
outsl
pop
cli
and
add
rolb
int
mov
add
stos
movsl
je
stos
pop
xor
adc
add
lahf
mov
ficomps
jnp
xchg
add
and
mov
add
jbe
mov
jo
lcall
in
mov
inc
add
ja
mov
pop
and
in
fidivl
iret
sbb
add
mov
push
add
add
add
repz
popf
sub
popf
movsb
add
sahf
dec
xchg
ja
int
inc
mov
pushf
sbb
aam
xlat
mov
add
pop
lods
ljmp
stos
iret
pop
sbb
fistpll
rolb
ffree
add
loop
add
mov
add
lea
dec
lret
push
pop
pop
lcall
add
sbb
into
rolb
lret
into
mov
add
fdivs
repz
xchg
cld
fisubl
sbb
add
insl
into
shl
out
mov
sub
add
and
and
mov
add
add
jo
push
pop
fistpll
fs
mov
sbbl
add
add
mov
xor
in
add
xchg
add
add
push
xor
adc
rolb
jae
test
xor
sbb
mov
mov
cmp
clc
xor
add
add
xchg
add
cmc
insb
pminsw
mov
add
add
sarl
clc
les
inc
add
add
testb
add
add
lea
adc
cmp
inc
add
xor
and
cmc
fdivr
out
pop
into
rolb
fistps
fcmove
std
push
fdivl
repz
add
ret
jecxz
add
add
and
xchg
add
mov
inc
in
mov
mov
sub
pop
imul
addr16
hlt
add
mov
jp
repz
fdivrs
clc
ljmp
inc
mov
fcoms
fldenv
dec
out
cwtl
mov
ret
ror
or
in
mov
xor
add
test
sbb
mov
mov
push
add
fdiv
fsubrl
cwtl
fidivrl
hlt
add
les
cs
mov
add
inc
mov
add
rorl
xchg
add
adc
scas
mov
jle
add
pop
cltd
mov
or
cwtl
add
ljmp
call
add
imul
add
mov
bts
icebp
lods
sub
cmp
or
and
mov
add
aam
xchg
int
add
add
fstps
sbb
push
add
mov
loope
add
add
add
mov
xchg
add
inc
add
add
mov
dec
jae
lds
out
xchg
add
add
add
dec
stos
mov
xor
out
addb
nop
add
add
add
leave
in
fldt
mov
sub
out
movsl
xor
loopne
ljmp
imul
loopne
mov
mov
push
add
xchg
add
cmc
xchg
push
popa
jecxz
mov
ds
stc
xor
xchg
movb
hlt
add
lret
xchg
add
mov
add
fdivrs
xor
jno
or
push
add
jb
fwait
xchg
add
add
add
dec
lret
imul
inc
sbb
add
fisttpl
scas
in
enter
mov
rolb
sbb
add
iret
repnz
out
pop
and
mov
clc
jns
adc
cmpsl
cs
test
cmp
ret
fcoms
int
mov
pop
jg
lods
mov
add
pop
pop
popl
add
add
add
into
sub
aam
and
mov
mov
rolb
imul
jno
xlat
in
sbb
xor
cltd
sub
add
movb
add
fcmovbe
add
jmp
add
add
add
xor
jo
inc
.byte
.byte
