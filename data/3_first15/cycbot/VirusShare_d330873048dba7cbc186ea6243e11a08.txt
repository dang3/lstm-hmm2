mov
pop
lret
cltd
jnp
add
mov
add
in
lea
bound
mov
pop
pushf
or
rcll
and
movsb
add
push
cmp
push
add
jb
aam
scas
push
add
fcomps
add
inc
add
lahf
ret
pop
mov
add
inc
out
jmp
add
cld
mov
push
sbb
add
sub
add
add
je
sub
or
push
add
add
mov
xchg
add
add
mov
push
and
rolb
mov
outsl
sub
test
add
addr16
cmp
adc
mov
add
mov
insl
out
mov
jmp
add
leave
out
mov
xor
add
and
add
mov
cmpsl
inc
push
add
xchg
jl
add
adc
sbb
add
addb
add
xor
xchg
in
cmp
adcl
mov
mov
js
xor
dec
lcall
adc
adc
inc
add
iret
outsl
ret
and
mov
pop
sbb
add
xor
loope
add
mov
ret
mov
jecxz
jmp
inc
add
add
les
lds
js
repnz
int
add
cmpsb
add
sbb
push
add
xchg
mov
inc
pop
adc
pop
xchg
add
sbb
adc
les
add
add
mov
add
into
nop
add
mov
sub
addb
mov
cmp
lcall
lods
push
iret
cmp
dec
mov
xor
mov
add
jmp
addb
or
in
or
sub
or
adc
cmpsl
fcompl
adc
cwtl
push
outsl
bound
mov
lcall
ret
cmc
repz
orl
jecxz
cli
divl
addb
sub
notl
shll
arpl
push
add
adc
push
or
add
ret
add
jmp
jbe
sub
enter
mov
movsb
add
add
jmp
jo
ds
jg,pn
in
adc
dec
jge
mov
pop
jge
icebp
popf
jno
push
add
aas
iret
pop
rolb
mov
sahf
dec
into
out
sbb
scas
sub
and
addr16
adc
rolb
mov
jmp
data16
add
sub
loop
sub
add
dec
jp
lea
add
fistl
mov
inc
add
add
shrl
pop
or
scas
dec
rcrl
push
cmpsl
outsb
rolb
mov
cmp
mov
dec
cmc
mov
testb
testb
cmpsl
ficompl
xor
stc
pusha
add
add
pusha
add
xchg
jg
xor
jo
push
add
cwtl
inc
add
xchg
add
add
add
add
sti
xlat
mov
arpl
scas
mov
in
daa
xor
xchg
add
inc
add
push
add
mov
test
add
ss
xchg
mov
or
outsb
bound
mov
sbb
out
rcll
add
mov
jg
add
mov
add
icebp
inc
add
or
les
xchg
add
adc
rolb
push
mov
cmp
rolb
enter
add
pop
xor
add
addr16
add
test
popl
fdiv
fists
pop
inc
add
add
mov
add
add
add
add
repz
and
mov
sub
cld
pop
sahf
jb
push
add
jle
pop
cmp
add
add
add
into
bound
mov
pop
sub
jp
add
add
add
lods
dec
cmp
faddl
add
add
gs
fst
add
icebp
jne
push
add
add
test
and
add
fcomps
or
mov
dec
jb
iret
push
mov
in
fidivs
add
push
add
std
push
add
add
add
add
mov
mov
mov
push
add
add
cs
add
fmuls
mov
push
add
dec
push
add
add
mov
adc
stc
pop
mov
dec
pop
popa
cs
imul
lock
ds
mov
js
xchg
pop
jne
out
or
leave
xchg
adc
idivl
leave
movsl
aad
lods
cmpsl
sub
add
push
add
jb
lea
pop
adc
jne
add
add
add
jge
mov
xor
lcall
stos
pop
outsl
dec
pop
lret
inc
popf
lea
and
xor
add
stos
gs
daa
xchg
xor
mov
jo,pt
mov
lcall
pop
push
mov
lods
dec
das
pop
add
add
add
stos
or
and
mov
push
idivl
fbld
add
pop
aas
pop
in
sbbl
sub
call
push
loopne
repnz
sbb
jmp
add
mov
add
es
enter
sbb
add
jge
add
or
sub
dec
hlt
add
or
add
mov
pop
enter
popa
xor
repnz
lods
sub
add
add
pop
icebp
je
mov
stos
sti
xchg
stc
scas
and
movsb
add
and
and
mov
pop
bound
mov
sahf
xchg
sbb
adc
mov
addb
or
add
out
ljmp
shll
cli
dec
inc
dec
and
mov
leave
add
cmpsb
add
xor
or
push
add
in
cli
add
mov
inc
add
add
mov
lret
adc
jmp
add
add
int3
daa
pushf
fdiv
test
lds
mov
test
xchg
add
and
mov
add
jg
push
add
jg
dec
dec
add
shll
mov
mov
ds
jl
testb
decb
add
push
add
xchg
call
sub
mov
sub
xor
lods
inc
add
cmp
cmp
pop
sbb
xchg
add
xchg
mov
push
push
je
ret
pop
dec
sti
outsl
cld
imul
add
add
gs
mov
std
xchg
sub
lock
add
xchg
in
ja
inc
push
mov
add
or
push
add
outsb
fwait
dec
das
stos
cmc
pop
lret
xlat
test
jmp
ss
add
add
mov
movsl
hlt
add
add
add
or
mov
add
add
push
or
add
pop
pop
jle
mov
jmp
dec
out
inc
or
xchg
add
xchg
mov
fildl
outsl
in
out
add
lahf
into
adc
mov
test
clc
call
add
in
test
push
add
call
cmp
fucom
add
data16
inc
outsb
mov
pmuludq
daa
dec
loopne
data16
add
add
push
vpaddusw
add
mov
add
cmpsl
jle
add
mov
add
mov
imul
push
fidivl
add
sbb
mov
pop
rolb
fucomp
mov
mov
inc
and
mov
mov
jns
add
mov
push
add
add
push
mov
in
and
adc
repnz
add
add
jbe
scas
and
mov
aas
sub
pop
cmpsb
add
add
cltd
cld
bound
mov
add
add
test
xchg
add
add
jp
add
cmc
out
aaa
arpl
add
add
add
add
add
add
jge
add
das
jp
push
add
scas
in
sub
add
les
mov
ljmp
inc
add
sbb
add
cmp
ret
add
add
imul
or
add
mov
push
add
push
aad
out
add
add
pop
pusha
add
inc
jp
add
andl
pop
xchg
add
or
shrl
push
ret
xor
push
clc
or
push
add
stos
rolb
xchg
add
jecxz
add
iret
mov
xor
ds
add
packssdw
mov
or
outsl
pop
sbb
addr16
repnz
in
js
dec
mov
addb
testb
add
mov
insl
imul
roll
mov
add
sbb
add
add
jns
rolb
add
xor
add
mov
sub
mov
into
add
cld
sub
iret
jge
add
pop
sub
or
daa
nop
add
les
adc
add
lcall
outsl
push
add
in
sub
int3
cmp
add
js
pop
add
fwait
imul
sub
xchg
add
fwait
mov
add
add
or
add
jb
mov
dec
pop
ljmp
clc
rcl
cli
xor
add
icebp
xchg
add
sub
sahf
xor
add
scas
mov
xchg
add
mov
mov
jae
add
je
fisttpll
test
dec
enter
lods
push
add
popf
and
addr16
ja
cli
lret
mov
sub
push
push
push
cld
call
sub
mov
push
imul
pop
movzbl
cmp
ss
push
push
call
cmp
je
es
lea
cs
sub
mov
es
call
test
jne
jmp
push
lret
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
lea
lea
sub
add
mov
sub
sub
push
pop
push
je
jmp
add
add
dec
cmp
lock
idiv
outsb
inc
jl
xor
cmp
clc
gs
cmp
sub
pop
xor
out
xchg
ds
jg
add
add
add
popf
movsl
pop
push
les
out
mov
add
cmp
dec
stc
stos
stos
inc
addb
inc
jnp
mov
add
dec
adc
testb
and
add
bound
mov
add
adc
push
or
sbb
and
stos
bound
mov
stos
movsb
add
sub
sub
bound
mov
adc
pop
mov
test
adc
add
mov
add
add
cmpsb
add
sahf
jmp
mov
add
lcall
jmp
mov
add
xor
movsb
add
push
add
mov
sub
addb
movsb
add
add
daa
mov
mov
mov
rolb
jns
scas
sahf
faddl
xchg
add
es
lcall
dec
push
add
push
out
xchg
cwtl
shrl
cmp
inc
add
jecxz
inc
add
bound
mov
adc
iret
xor
inc
add
loopne
sub
test
cmp
xchg
roll
leave
push
imul
push
add
xor
jbe
push
jp
add
add
insb
jns
adc
add
add
mov
imul
xor
test
add
add
aam
lds
sub
mov
inc
add
add
rcrl
add
add
lods
cltd
loope
scas
or
outsl
popa
xchg
inc
inc
or
add
addb
addb
mov
outsb
adc
add
cmp
add
imul
push
rcrl
add
add
pop
mov
cli
jmp
add
add
icebp
or
lds
push
data16
add
pop
mov
addb
add
or
add
test
std
cmc
mov
add
cli
outsb
xchg
xor
add
mov
cmp
add
sahf
movb
mov
testb
adc
add
cmp
pushf
aas
flds
movb
orl
mov
add
push
add
mov
add
add
iret
xor
xor
cmp
dec
cmp
push
arpl
ljmp
aaa
add
sub
add
mov
mov
js
bound
mov
les
dec
push
add
mov
data16
add
add
sub
add
add
rolb
xor
adc
rolb
lods
outsl
or
sbb
loop
in
rolb
mov
add
jecxz
add
outsl
data16
add
mov
sbb
cwtl
cld
dec
jge
add
push
add
in
popa
in
inc
add
dec
stc
mov
test
je
jb
repnz
movsl
inc
add
dec
sahf
sahf
test
xchg
cmp
inc
add
fwait
sti
jle
lds
add
add
push
add
movsb
add
pop
rolb
mov
add
add
jno
add
insb
sbb
in
add
sbb
and
xchg
add
xor
cmp
rolb
movl
pop
push
add
in
mov
add
stc
mov
arpl
rolb
inc
add
cs
push
add
or
jecxz
fidivrl
addr16
rolb
inc
mov
xchg
mov
pushf
addb
rolb
icebp
pop
dec
and
mov
das
fidivl
mov
and
in
popf
cmc
jg
add
mov
xor
adc
fsubrp
in
icebp
mov
ret
adc
mov
add
sbb
int3
movb
xchg
add
and
adc
add
add
lods
aaa
sub
mov
int
add
stc
aam
mov
add
add
push
add
mov
cmp
sbb
push
add
xchg
add
add
adc
push
and
lcall
leave
je
cmp
sub
fcmovnb
loopne
or
and
dec
pop
sbb
jbe
mov
add
xchg
add
data16
add
add
mov
clc
pop
xchg
or
inc
add
add
data16
out
sub
addr16
aam
std
jp
xor
add
push
add
sbb
add
add
adc
das
mov
add
cwtl
mov
cmp
mov
enter
cmp
int
add
int3
xor
inc
add
mov
pop
pop
out
loopne
mov
inc
add
pop
sti
sbb
test
pop
in
out
movsl
jb
test
je
in
lret
jge
add
mov
insb
pop
cltd
es
in
inc
movsl
leave
or
ret
adc
ret
insb
sbb
jo
cld
pop
mov
mov
xchg
add
clc
or
mov
mov
sbb
aam
addb
rolb
cltd
loopne
inc
push
add
add
inc
popa
aad
add
jl
dec
andl
pusha
add
aad
add
imul
mov
adc
std
test
and
and
mov
push
stc
dec
jae
mov
add
mov
addb
out
inc
xor
xchg
add
je
enter
mov
pushl
cmp
in
push
aam
cmpsb
add
xchg
add
repz
add
repnz
cmpsb
add
add
mov
aas
pop
mov
mov
bound
mov
pop
lret
pop
mov
add
je
or
lret
cmpsl
incl
sbb
and
or
add
insl
popf
popf
inc
in
cld
je
leave
iret
push
mull
mov
add
add
mov
xchg
add
mov
fcmovnbe
jb
inc
add
in
pop
push
add
add
addb
mov
rolb
out
push
add
add
bound
mov
cltd
gs
mov
xor
xchg
pop
lahf
xchg
test
add
cld
lret
mov
fistpl
add
mov
push
call
mov
xor
test
add
mov
jp
mov
cmc
repnz
cwtl
fiadds
mov
add
add
into
testl
sub
push
sahf
cli
loope
sub
push
xlat
xlat
dec
addr16
mov
repnz
push
push
xor
xor
in
out
sub
into
push
mov
loopne
in
add
jmp
mov
cmpsb
add
icebp
test
sub
int
dec
scas
pop
sub
leave
outsb
xor
xchg
lret
mov
add
push
xor
stc
cmp
add
ret
add
sub
lods
dec
sahf
ja
add
cmp
inc
add
inc
add
add
dec
aaa
jbe
and
add
add
fwait
pop
imul
push
add
aaa
clc
cmp
lret
mov
mov
mov
imul
add
ja
testb
mov
mov
mov
xchg
inc
test
cmp
mov
pop
jecxz
push
shll
test
nop
add
add
mov
xchg
add
pop
cmp
pop
std
std
or
stos
xor
jnp
in
adc
add
mov
cld
inc
sbb
dec
mov
mov
add
cmp
test
add
push
dec
mov
aaa
jb
stos
aam
out
pop
jbe
sub
adc
add
add
les
jmp
add
lcall
add
enter
jge
fnstenv
add
dec
in
test
xchg
add
add
xchg
add
sub
add
pop
sub
add
sahf
adc
push
add
add
lock
fidivrl
arpl
add
add
ret
add
add
mov
add
dec
movb
int3
xchg
add
mul
lahf
out
lods
incl
fsubrs
into
sub
add
mov
add
xor
jno
fildll
das
mov
loop
cmpsl
sbb
mov
loopne
push
xchg
outsl
daa
mov
push
iret
fcoms
add
xchg
adc
xor
mov
out
add
add
or
fbld
xchg
insb
imul
sbb
aaa
lcall
sub
mov
sbb
stos
mov
insl
push
lds
add
push
and
add
clc
rolb
hlt
add
pop
jge
add
arpl
rolb
push
push
add
inc
add
add
add
sahf
ds
fists
pop
sub
jbe
cltd
inc
repz
adc
inc
mov
add
insl
repnz
mov
adc
xchg
add
mov
dec
sarl
add
les
jne
out
ret
add
fisubl
dec
aad
fstl
push
rolb
cmp
mov
fimull
pop
in
push
cmp
lods
xchg
lcall
sub
bound
mov
inc
xchg
add
add
adc
add
dec
ja
pop
popa
inc
arpl
inc
inc
or
aad
add
add
mov
mov
ljmp
cs
clc
ret
popf
rcll
add
movsb
add
cmpsl
xchg
add
rorl
mov
jl
xor
js
adc
imul
xor
cs
jb
xlat
test
mov
fwait
add
mov
loopne
pusha
add
pop
jp
cli
and
pop
mov
mov
rcr
into
cli
mov
repz
int
add
add
xor
sbb
mov
ljmp
xor
rolb
and
mov
add
add
mov
xor
and
cli
mov
xor
add
add
mov
mov
pop
dec
sbb
data16
or
add
and
mov
pop
mov
scas
aas
ret
push
add
jmp
add
imul
add
enter
add
mov
cmpsl
push
add
inc
push
add
cmp
addb
sub
add
lcall
jle
add
xchg
pop
fistl
imul
les
add
testb
fmuls
outsl
in
sti
loop
mov
mov
add
ret
jl
scas
in
data16
addb
add
add
add
popa
int
in
scas
insl
jnp
push
add
scas
outsl
xchg
mov
push
push
imul
mov
add
mov
pushf
xor
add
fsubl
les
mov
mov
add
test
dec
fsubrs
xlat
jnp
add
sbb
mov
in
adc
daa
icebp
in
inc
add
mov
out
dec
push
add
pop
in
dec
sub
cmp
ret
or
sbb
add
add
add
inc
add
add
jp
add
ss
jle
xor
in
ja
pusha
add
sub
aad
push
dec
insl
mov
std
repnz
cmp
mov
or
push
mov
sti
dec
aam
addr16
sub
mov
clc
cmp
mov
inc
jp
add
dec
pushf
clc
in
outsb
or
dec
rolb
jp
add
add
ja
add
clc
cmp
les
in
push
add
scas
push
je
bound
mov
add
pop
rolb
movb
mov
les
icebp
cmp
pop
hlt
add
add
flds
add
adc
lret
stos
fucom
add
iret
xchg
cmp
add
jns
add
iret
sbb
rolb
add
add
add
outsl
jmp
inc
pop
mov
stc
negl
add
xchg
add
repnz
push
push
add
add
sbb
push
add
dec
pop
pop
add
push
rolb
add
imul
rolb
in
push
add
mov
dec
fstl
cmp
push
out
stc
jg
and
insl
idiv
in
adcl
js
fwait
imul
pusha
add
add
push
add
adc
daa
fstpt
sbbl
adc
sub
mov
add
adc
sub
sub
loopne
dec
inc
adc
or
cmp
inc
dec
jmp
add
sub
mov
test
mov
add
in
test
adc
addb
out
and
addr16
and
or
add
aad
add
jnp,pn
popa
pop
jecxz
add
add
add
add
pusha
add
mov
and
mov
add
ds
push
add
icebp
jns
add
xor
inc
call
sbb
fwait
or
push
popa
loopne
in
jecxz
add
add
add
push
xchg
bound
mov
and
mov
sbb
inc
add
addb
add
loopne
pusha
add
sbb
lret
mov
add
je
fdivrl
push
stc
push
add
sahf
push
add
and
add
mov
add
dec
out
dec
das
cmp
add
jbe
dec
mov
loopne
push
add
dec
mov
push
in
add
add
pushf
imul
add
mov
add
lcall
sbb
add
lea
add
insl
jle
out
add
pop
pop
lods
js
add
add
push
and
mov
add
add
mov
add
mov
add
add
add
lds
fnstsw
pop
rolb
inc
add
testb
and
aaa
inc
adc
in
cmp
mov
data16
mov
dec
inc
test
add
sub
dec
jl
mov
jno
ljmp
inc
add
sbb
lods
mov
dec
xor
pop
cmc
repnz
push
mov
add
add
sub
push
pop
testb
gs
testb
stos
sub
mov
sbb
je
or
mov
and
mov
add
mov
test
jns
xor
lret
sbb
push
add
cld
ret
xchg
mov
fnstenv
add
inc
inc
enter
mov
fcmovnbe
add
jl
add
movsb
add
idivl
loop
cltd
cmp
push
enter
jnp
pop
sub
adc
sbb
xchg
add
cs
add
out
mov
push
or
add
add
lods
lock
in
cmp
mov
add
sbb
xchg
jl
inc
push
addb
int3
adc
es
es
push
fdiv
add
jg
mov
push
dec
jl
int
add
add
add
add
add
cmp
fldl
add
add
add
dec
or
and
sbb
add
add
add
mov
addl
or
ja
rorl
addb
in
or
je
test
add
push
clc
push
jbe
dec
xchg
add
dec
xchg
inc
add
add
jmp
mov
jl
add
xor
outsb
mov
add
loop
pop
jb
pop
addr16
testb
add
xor
mov
add
adc
xor
mov
pop
mull
xor
fwait
cmp
pop
repnz
pop
jge
add
pop
out
in
jecxz
add
mov
int3
fcmovnu
cs
fwait
add
scas
pop
pop
lcall
and
mov
jecxz
jg
add
and
jae
fsubp
add
xchg
mov
mov
mov
fwait
in
rolb
pop
inc
push
das
jae
pop
mov
pop
or
mov
ljmp
add
clc
in
addr16
mov
pop
std
jge
xor
sbb
je
test
and
mov
outsl
cld
mov
add
sub
add
mov
ret
adc
mov
cmp
mov
js
add
or
add
cmp
aaa
push
add
repnz
inc
fisttpl
out
add
cmp
jl
hlt
add
mov
in
push
call
inc
add
loope
dec
mov
nop
add
add
adc
data16
movsl
inc
rolb
add
add
test
sbb
jnp
or
cltd
lret
pop
add
enter
mov
push
pop
xchg
mov
add
xchg
rolb
jle
lahf
mov
lret
movsb
add
add
mov
cmp
push
add
int
cmpsb
add
pop
mov
inc
add
shll
cmp
mov
ljmp
cld
add
cltd
lock
add
jp
ss
sbb
movb
int
adc
call
and
lret
inc
cmp
sbb
add
cld
cmp
jmp
sbb
add
mov
xor
ret
mov
add
xor
inc
aam
xchg
insb
fldcw
add
add
and
clc
xor
mov
sbb
add
sbb
add
add
add
add
mov
xchg
cmp
dec
test
cwtl
adc
popa
pop
adc
and
bound
mov
add
jp
add
sub
and
pop
xchg
xor
stos
fmull
clc
cmc
xchg
add
mov
movsl
in
add
mov
mov
out
icebp
pushf
sbb
popf
movb
add
jecxz
add
cmpsl
ret
mov
add
test
add
or
add
push
pop
bound
mov
std
inc
add
pop
aas
jle
aas
xchg
mov
jno
scas
clc
inc
add
jp
add
addb
add
inc
push
xchg
addb
push
roll
gs
das
cmp
or
cmp
or
add
add
add
cmpl
gs
je
push
add
jecxz
add
imul
call
cmp
rolb
out
push
jae
push
add
cmp
fisttpll
les
fwait
pusha
add
pop
cli
cmp
add
stc
popf
popa
pslld
jge
lds
jge
sub
cmp
divl
add
cltd
insb
push
add
mov
xchg
dec
data16
add
dec
jne
call
mov
in
fs
add
add
mov
add
movb
add
dec
dec
scas
cmp
sub
add
movups
mov
add
jl
dec
and
add
arpl
ja
push
in
push
adc
sub
sbb
in
mov
mov
addb
cwtl
jmp
add
or
add
jnp
add
inc
inc
hlt
add
inc
les
or
repnz
rolb
dec
xchg
jbe
loopne
xor
mov
inc
add
inc
cmp
cmp
mov
mov
mov
pop
rcr
movb
arpl
stos
add
or
add
push
cmpsl
xchg
add
dec
movsl
dec
pop
sbb
fdivl
mov
cs
xchg
lods
sbb
rolb
jl
add
mov
jle
mov
lock
dec
movb
adc
dec
xchg
add
pop
insl
outsl
into
cmp
xor
out
xor
aas
cmc
mov
cs
or
pop
adc
test
add
ljmp
add
sti
or
add
xor
or
dec
popa
mov
add
add
push
add
add
and
mov
add
adc
push
add
hlt
add
js
push
add
adc
decb
rolb
or
cmp
xor
and
mov
or
jle
movl
into
mov
mov
pushf
sub
push
in
mov
movl
add
cmp
sub
popf
lods
test
lock
cmp
mov
lods
sti
jne
imul
fucomi
add
jge
add
cltd
adc
dec
test
and
xor
jne
and
mov
add
mov
add
pop
cmp
add
lods
xchg
inc
roll
call
jmp
add
push
add
testb
add
mov
add
add
testb
add
xchg
pop
mov
adc
mov
add
add
jne
add
add
add
mov
test
jge
pop
add
mov
pop
dec
fsubl
cmp
jle
add
movsb
add
movsb
add
pmullw
mov
and
mov
add
fdivr
mov
aas
ja
adc
loope
and
mov
add
por
add
cmp
stos
push
add
pusha
add
add
rolb
sbb
lods
and
cltd
or
add
add
xor
add
bound
mov
mov
aas
js
loop
scas
mov
test
data16
xchg
fimull
xor
mov
cmp
jno
addl
stos
rolb
and
out
mov
repnz
cltd
pusha
add
imul
hlt
add
rolb
bound
mov
inc
add
stos
mov
imul
call
lods
add
cmpsb
add
add
orl
test
cmp
add
mov
stos
adc
les
xchg
sbb
add
mov
add
int3
or
sub
out
pop
jbe
les
cmc
cmp
mov
add
add
add
add
add
cmp
jmp
loop
nop
add
lea
lods
pop
cmp
xchg
add
aaa
add
add
stos
lret
out
mov
inc
push
add
stos
lret
pop
lret
ljmp
mov
icebp
inc
push
add
add
mov
push
add
jno
push
add
push
add
push
add
ljmp
hlt
add
pushf
sahf
rolb
sbbl
add
add
add
add
ljmp
stc
into
adc
xor
mov
cmc
fistl
add
fistps
mov
push
inc
add
inc
add
xchg
add
arpl
add
fwait
gs
add
cmp
add
hlt
add
add
dec
jne
or
add
add
movb
mov
add
mov
pop
adc
jmp
sbb
subl
add
imul
push
mov
test
add
cmp
movb
add
jb
jge
pushf
jns
xor
push
jne
movb
add
insl
je
add
add
add
push
add
xor
add
rcl
outsl
outsb
add
mov
int3
mov
outsb
repnz
add
icebp
fisttps
fsin
addr16
jecxz
add
repz
mov
ja
add
mov
fisubrl
and
xor
jnp
add
add
rolb
std
push
inc
add
xchg
xor
xchg
inc
add
add
mov
icebp
push
add
xchg
orl
add
ds
dec
dec
and
je
add
call
add
adc
sbbl
add
fnstsw
mov
and
leave
adc
push
mov
add
add
rolb
sub
add
daa
daa
pop
inc
add
add
out
sti
add
int3
xlat
icebp
lret
sbb
aas
popf
mov
iret
ds
fistl
add
outsl
fidivl
mov
mov
adc
jae
add
mov
rolb
add
ljmp
into
cltd
icebp
clc
popa
imul
add
add
pusha
add
es
mov
cmpsb
add
mov
pop
mov
add
add
sbb
lahf
mov
and
mov
add
insl
add
mov
lcall
add
sbb
sbb
mov
add
pop
push
xor
in
pop
sub
movsl
pop
xor
cvtps2pd
sub
jne
add
fmuls
icebp
add
adc
cld
les
cmp
and
insl
add
jle
add
mov
test
pusha
add
add
addb
fdivl
adc
jne
inc
add
add
xchg
add
aam
mov
btc
add
mov
mov
rolb
xchg
cmp
jae
add
mov
or
mov
mov
add
and
mov
add
into
fdivr
popa
ja
add
cmp
mov
jge
ds
jno
add
add
dec
mov
pop
jge
fwait
xchg
add
mov
into
popf
adc
cltd
int3
pop
pop
push
and
mov
sbb
inc
add
loopne
push
sub
add
jo
push
add
mov
mov
sub
add
ret
lods
sub
std
mov
cmp
mov
mov
push
add
xchg
ja
add
cld
sbb
push
add
mov
test
sbb
add
lock
or
xlat
mov
add
add
orl
add
add
add
test
dec
ficomps
add
jecxz
ljmp
pop
cmp
add
popf
sub
aaa
cmp
add
loopne
dec
lea
mov
scas
cld
adc
xchg
add
inc
add
addb
add
out
add
add
sub
xor
xchg
jp
add
add
sahf
push
add
in
or
sbb
add
lods
loopne
inc
ljmp
add
add
sub
mov
inc
add
or
add
add
inc
loop
adc
jno
add
inc
add
add
insl
lcall
ljmp
test
jmp
nop
add
subl
add
std
mov
push
xor
push
add
bound
mov
add
mov
das
cld
mov
mov
mov
sub
loop
mov
add
cmc
leave
xor
sbb
imul
add
mov
pop
ja
frstor
add
lret
sbb
cs
jle
or
dec
cmp
add
add
add
in
add
pop
mov
addb
leave
rolb
mov
hlt
add
mov
xchg
add
ja
les
out
add
mov
test
xchg
xchg
add
add
add
sub
mov
add
or
jl
add
pop
fadds
scas
pop
das
icebp
mov
repz
shll
xor
cli
mov
add
xchg
dec
addb
arpl
and
mov
add
jge
add
sbb
xchg
les
mov
xor
stos
mov
mov
stos
imul
add
pop
ds
and
mov
mov
add
dec
jmp
add
scas
cmpsb
add
rolb
scas
push
cli
jg
cmc
addr16
cld
divl
ljmp
cmp
xchg
add
movb
cmpl
mov
xchg
add
mov
aaa
int3
ss
bound
mov
mov
cmp
push
add
add
das
push
add
cmp
mov
fsubp
cwtl
insl
push
pop
inc
add
sbb
xorl
add
inc
mov
pop
jmp
add
add
jl
add
adc
mov
fbstp
mov
add
sub
xchg
add
inc
add
and
mov
push
mov
sbb
stos
mov
sahf
and
xor
add
add
rolb
and
mov
sub
sub
out
adc
ret
inc
add
add
add
xchg
pop
fiadds
fldcw
addb
xor
bound
mov
add
push
add
add
test
leave
jle
add
mov
add
lods
hlt
add
adc
add
cld
gs
mov
add
sub
add
adc
aas
dec
cld
xor
sbb
xor
jl
add
dec
popa
fildll
lock
and
jbe
loopne
les
add
add
and
mov
add
push
push
add
pop
insl
lcall
add
add
add
arpl
add
faddl
jns
int3
mov
or
add
add
adc
scas
cwtl
into
les
lea
push
and
mov
jg
xchg
fwait
and
mov
nop
add
mov
addb
jmp
mov
jg
gs
add
mov
xor
sbb
add
in
push
mov
out
fsubrs
mov
jl
testb
add
add
inc
add
daa
repnz
jge
pop
xor
add
add
or
outsl
adc
mov
inc
add
mov
mov
repz
in
add
cmp
popa
push
add
outsb
push
push
add
add
add
add
dec
add
mov
and
mov
out
rolb
out
movsl
fcompl
jl
adc
xor
cltd
pushf
push
push
push
add
adc
mov
mov
push
addb
add
test
jl
add
jge
insb
hlt
add
push
sbb
sahf
fsubl
xchg
cmp
movl
test
jle
push
add
cmpsb
add
inc
add
add
mov
stos
inc
add
xchg
xor
mov
add
les
mov
xchg
add
call
mov
add
sub
adc
push
jne
cmc
sub
pop
push
add
add
sbb
cli
xchg
and
mov
aad
add
pop
mov
push
add
jg
add
je
insb
add
jl
insb
add
mov
add
pushf
mov
rolb
add
add
sub
add
in
sbb
xchg
and
xor
test
and
mov
or
stc
std
jl
jno
add
adc
rcll
add
add
mov
mov
mov
sbb
add
add
mov
imul
out
cmp
adc
jmp
add
stc
cld
lds
lcall
xchg
add
fs
je
js
add
add
add
xchg
push
adc
push
xor
movsb
add
and
add
sahf
sbbl
add
jbe
test
mov
add
and
jno
and
and
mov
adc
sbb
jne
out
roll
add
mov
inc
add
aam
lea
add
push
add
fcomps
adc
inc
rolb
aaa
xor
add
add
inc
inc
je
test
add
add
inc
xchg
pop
aas
mov
test
add
lock
movb
add
add
xor
enter
test
inc
mov
dec
lcall
daa
aas
jge
add
add
inc
les
lahf
xchg
in
lods
lds
pop
jecxz
add
push
add
jbe
jg
add
add
sub
and
dec
stos
adc
push
add
test
add
out
cwtl
inc
add
out
push
movsb
add
jp
ljmp
add
cmc
mov
ss
add
add
or
jbe
add
mov
mov
mov
lret
ret
lods
pop
mov
out
rolb
push
xor
fwait
inc
add
cmpsb
add
jecxz
and
jne
add
dec
movsl
insl
in
jle
inc
jle
sbb
push
in
and
adc
add
mov
jae
cli
pop
adc
test
aaa
mov
testb
add
add
add
jnp
add
and
mov
mov
aad
pop
cmp
cmpsl
testb
hlt
add
add
scas
outsl
stc
test
inc
add
add
pop
push
outsl
scas
test
jl
add
add
clc
jbe
jo
inc
add
fdiv
sahf
lret
ja
in
mov
imul
mov
cmp
add
out
push
add
mov
in
add
sub
mov
lea
add
loope
out
sub
fwait
loope
xor
jnp
jge
mov
jnp
jb
xlat
jge
add
adc
add
xchg
mov
out
aaa
imul
add
mov
and
lock
add
fisubl
mov
add
aad
push
add
rolb
aaa
cltd
stos
adc
arpl
inc
add
add
add
add
rolb
push
add
mov
rolb
mov
repz
mov
xorl
int
scas
pop
jle
loopne
jmp
add
test
cwtl
jbe
mov
xchg
add
xchg
add
daa
jecxz
add
sbb
xchg
add
add
enter
mov
pop
in
dec
lock
mov
or
add
mov
ss
add
add
add
ljmp
add
add
push
add
add
mov
stos
iret
out
outsb
stos
inc
bound
mov
jo
sahf
cs
and
aaa
outsb
cltd
fcomps
stos
cmp
out
sbb
add
dec
dec
hlt
add
add
add
push
jp
mov
lcall
loop
insb
mov
data16
add
cs
and
aaa
pop
call
add
add
aaa
push
add
iret
ret
add
int
add
dec
fsubl
outsl
into
lret
testb
mov
je
leave
je
add
xlat
mov
add
data16
push
adc
lea
movsb
add
out
xchg
add
add
add
add
jge
adc
push
add
or
mov
or
in
ss
cmpsb
add
fidivrs
ljmp
add
add
mov
jp
xlat
pop
xchg
mov
mov
imul
add
dec
lods
imul
xchg
add
inc
add
pop
enter
adc
cmp
popf
clc
movntq
out
aas
test
or
ljmp
pop
push
int3
xor
xchg
add
cmp
roll
xlat
mov
ret
add
add
in
mov
xchg
mov
cmp
add
mov
sub
in
pop
jbe
movsb
add
adc
pop
int3
testb
add
andl
add
mov
push
rolb
pop
mov
cmp
add
in
and
add
rolb
mov
hlt
add
arpl
add
xlat
stc
or
mov
sbb
add
add
add
add
add
xchg
add
add
in
pop
movsl
push
movb
sbb
lods
mov
pop
mov
add
mov
push
add
stc
mov
lds
inc
add
loope
mov
add
frstor
aaa
pusha
add
test
aam
int
nop
add
add
mov
push
xchg
cmp
mov
cmp
add
ret
adc
aas
movsb
add
in
push
add
popf
test
aaa
ja
add
mov
loopne
lcall
bound
mov
hlt
add
mov
movsb
add
dec
jl
add
imul
icebp
les
std
icebp
xchg
or
in
xor
cmp
test
adc
sub
leave
test
push
add
inc
xchg
shrl
xchg
add
xchg
iret
or
jo
push
or
cmpsb
add
fwait
stos
flds
les
mov
inc
add
out
sub
pop
mov
mov
add
add
in
cmpsb
add
add
adc
add
lcall
push
inc
and
mov
ds
push
in
mov
icebp
adc
cmc
std
bound
mov
add
mov
fcomip
icebp
or
test
sub
add
cmp
lods
daa
ret
sub
addb
sbb
lds
fidivl
popf
addb
lea
mov
int
xor
add
leave
cltd
pop
push
sar
les
dec
pop
lahf
rolb
pop
pusha
add
add
fsubrs
test
mov
ja
mov
or
test
cmc
scas
addb
popf
cmp
inc
add
or
in
pop
jb
mov
inc
add
shrl
sub
jo
pop
xchg
fmuls
movb
add
add
add
pop
mov
fnstcw
add
repnz
mov
lds
idivl
loope
lds
add
mov
add
add
pusha
add
mov
mov
loope
mov
mov
mov
add
add
cwtl
mov
push
add
test
dec
aas
xchg
add
lahf
pop
rcl
add
push
dec
jnp
inc
add
add
mov
les
jmp
add
jle
pop
dec
sti
dec
das
inc
jmp
add
sbb
mov
inc
pop
fistl
or
add
add
dec
dec
xor
ret
imul
and
add
sub
aas
jl
add
imul
dec
pushf
push
sub
arpl
dec
pop
das
cmp
movsb
add
add
dec
pushf
jns
xorl
aam
xchg
add
mov
jecxz
add
xchg
sub
ds
inc
dec
hlt
add
sub
cld
leave
loop
jno
xchg
xchg
add
dec
cmp
xchg
aaa
push
data16
add
add
stc
cmpl
add
push
push
add
mov
add
adc
add
sub
popl
add
js
add
lods
popf
insb
ljmp
add
jecxz
mov
bound
mov
vmovupd
or
jb
mov
and
mov
add
movsb
add
lea
adc
rolb
mov
test
pusha
add
inc
add
adc
mov
mov
jp
push
scas
icebp
adc
stos
lods
dec
rolb
add
mov
mov
mov
cmp
addb
add
mov
fsubrs
jl
jmp
push
add
test
add
sub
cltd
or
mov
add
add
nop
add
sub
mov
scas
push
add
adc
xchg
dec
shr
test
fstps
outsl
fsts
cmp
add
add
loopne
daa
bound
mov
push
jge
mov
mov
push
add
mov
inc
add
add
loop
and
dec
mov
xchg
jnp
fisubrl
cmp
add
dec
cltd
stos
and
jb
lcall
add
cmp
testb
pop
or
adc
cmc
xor
mov
cwtl
mov
add
in
cmp
cmp
outsl
jl
add
add
iret
movb
add
add
xor
add
push
add
pusha
add
fwait
xchg
add
sbb
lods
mov
out
dec
jo
or
test
test
xchg
add
sbbl
add
mov
dec
and
mov
jno
add
add
sbb
in
add
pop
js
xor
push
arpl
push
jbe
ret
mov
add
adc
daa
cmp
add
add
add
add
insl
sub
add
mov
dec
add
mov
data16
mov
bsr
insl
push
add
sub
add
add
rcr
mov
lret
mov
add
add
dec
das
clc
add
mov
cs
cmp
add
icebp
inc
add
xor
add
scas
add
loopne
adc
lret
jns
mov
shrl
add
stos
rolb
add
push
mov
cmp
movb
add
add
cmc
mov
push
add
or
rorl
iret
data16
add
testb
rorl
daa
out
mov
jb
pop
ljmp
add
mov
add
jmp
add
fdivrp
push
popf
mov
cwtl
lds
pop
dec
stos
sbb
bound
mov
mov
sti
or
outsb
sbb
loope
cli
rolb
inc
add
inc
add
add
and
xor
jecxz
int
sarl
xchg
add
lods
jge
xor
push
add
add
mov
sbb
in
jbe
cmpsl
jno
xor
add
add
lahf
jno
popa
and
mov
push
add
faddp
icebp
sub
or
jb
and
mov
icebp
fidivl
add
mov
add
sub
mov
data16
xchg
add
pusha
add
stc
addl
movb
lcall
push
add
add
cmp
cmovbe
mov
aad
repz
and
mov
and
mov
add
mov
movsl
shll
shll
add
fistpl
jne
add
jbe
and
mov
add
xchg
add
add
add
xor
cmp
add
dec
inc
add
ret
add
add
xchg
push
add
cmpsl
outsl
pushl
add
adc
add
mov
add
out
pop
lret
add
add
add
test
les
pusha
add
fmuls
add
add
mov
cmpsb
add
add
jnp
insl
lods
mov
mov
in
mov
rcl
add
xor
pusha
add
dec
icebp
shll
loop
adc
mov
scas
rolb
loopne
and
mov
mov
mov
or
mov
call
or
or
add
mov
xorl
cmp
add
mov
in
or
add
dec
lods
cmp
sbb
push
cmp
sub
push
mov
test
inc
add
sub
add
fadds
popf
or
jg
rolb
sub
fcomps
add
xor
loop
jge
or
sahf
mov
out
icebp
mov
push
iret
fiadds
add
xchg
cmp
outsb
movsb
add
addb
jb
jmp
sub
add
ds
add
add
gs
add
movsb
add
add
push
jae
sbb
mov
jo
fnstcw
imul
daa
mov
pop
jbe
testb
mov
roll
add
mov
lds
mov
jle
pop
xor
add
add
add
mov
add
pop
and
mov
int
addb
pusha
add
xor
iret
movb
cltd
dec
push
dec
add
in
int
add
fstl
lods
imul
ja
scas
or
add
aad
addb
mov
shrl
mov
add
mov
dec
pop
test
std
push
add
dec
sub
testb
add
add
sbb
std
mov
fisubrs
std
fnstenv
xchg
imul
xor
adc
jp
add
jg
fcmovnbe
adcl
sahf
xchg
inc
add
add
gs
int3
add
add
lock
add
jns
add
add
adc
iret
fsts
push
pop
xor
xor
js
aas
stc
xchg
outsb
push
add
sbb
add
mov
mov
mov
cmp
add
add
mov
mov
mov
mov
loopne
xchg
cmp
add
mov
lahf
xchg
add
repnz
cmpsb
add
pop
cmp
add
xchg
add
xlat
repz
pop
data16
xor
lock
test
add
add
jge
add
add
add
add
add
int3
jg
out
js
dec
stos
dec
add
icebp
lret
rolb
out
jnp
lret
xor
add
and
adc
out
bound
mov
mov
jbe
lea
jae
ret
fidivrl
inc
inc
add
add
add
lret
sbb
test
pop
out
outsb
sub
add
stos
lcall
test
pop
out
mov
dec
hlt
add
push
cmp
pusha
add
xchg
pusha
add
add
push
add
add
and
lock
test
add
in
push
and
fisttpll
sbb
adc
mov
mov
add
xchg
inc
add
clc
notl
sub
mov
pop
pushf
pop
xor
sub
xchg
ja
jmp
mov
add
repnz
fimuls
movsl
fs
cmpsl
mov
rolb
xor
or
inc
add
dec
add
icebp
fwait
push
mov
shl
add
push
add
add
jbe
dec
and
mov
fmull
shll
daa
jmp
sarl
jne
add
add
add
int
mov
testl
add
pop
mov
jmp
mov
lret
sar
je
not
add
add
shll
cmp
jo
data16
paddq
popf
pusha
add
aas
fst
mov
mov
cmc
push
jne
add
stos
cmc
cli
aaa
cmpsl
cmc
enter
cmp
test
add
add
add
add
add
adc
stc
out
icebp
imul
out
popa
inc
add
in
fmull
sbb
hlt
add
cltd
addb
mov
push
stos
cmpsl
test
xchg
add
add
dec
xchg
sbb
gs
xchg
add
sahf
sbbl
add
cmp
add
cmc
xchg
lret
testb
add
gs
mov
loop
mov
std
aam
mov
inc
pop
xor
push
cld
pop
lods
push
ja
add
sbb
mov
out
mov
icebp
cmpsl
sub
and
pop
xchg
in
cwtl
hlt
add
dec
pop
add
aas
xorl
xchg
add
in
into
dec
pop
lahf
sbb
add
inc
xor
outsb
data16
outsb
jnp
outsl
pop
jae
sbb
test
bound
mov
pop
inc
sbb
inc
add
cld
jmp
jg
rolb
faddl
or
ret
add
add
mov
mov
ret
or
cld
add
dec
sbb
data16
dec
lcall
leave
out
mov
ret
mov
pop
pop
add
xchg
add
add
add
xchg
xchg
add
mov
out
ret
add
lock
add
fstpl
jg
hlt
add
push
je
mov
adc
js
add
add
iret
mov
sub
mov
jp
add
cmp
add
add
push
ss
add
jae
and
mov
les
push
inc
add
mov
lds
adc
cmpsb
add
add
sub
xchg
push
dec
addl
add
jne
mov
cmpl
aas
fimuls
in
sbb
mov
into
testb
add
incb
add
xlat
push
add
add
jno
repnz
add
xchg
push
out
mov
cmc
pop
fimuls
hlt
add
out
mov
inc
add
jo
mov
lret
mov
dec
popf
cli
push
dec
call
idiv
mov
add
mov
add
lods
repnz
stos
add
jl
pusha
add
xchg
sub
add
ret
loop
fidivl
add
pusha
add
jmp
mov
add
fdivp
lret
cmp
mov
clc
les
xchg
add
loopne
out
dec
mov
inc
add
loop
lcall
into
cltd
lods
movl
mov
add
hlt
add
sub
adc
add
pop
pusha
add
xor
out
push
add
pusha
add
add
ret
movsl
movl
xlat
sub
add
scas
mov
adc
testb
jle
add
icebp
stc
test
xor
pop
pop
icebp
lock
or
add
add
add
imul
jb
das
outsl
fcmovbe
add
addb
add
add
add
add
movsb
add
push
add
movb
ds
jl
add
push
add
iret
dec
mov
lods
add
add
add
add
mov
and
dec
and
add
add
out
mov
dec
sbb
idivl
scas
inc
add
je
pop
movsl
dec
cmp
scas
dec
add
and
mov
add
mov
add
iret
jmp
pop
mov
jns
add
cmpsb
add
add
stos
aas
sti
and
mov
and
push
add
dec
adc
jmp
add
push
add
mov
add
rolb
sbb
bound
mov
mov
hlt
add
mov
sbb
xor
pop
pop
mov
and
mov
add
cs
add
cmp
js
gs
bound
mov
ds
rcrl
jmp
in
jl
add
mov
jge
int
popf
jmp
cmpsl
pushf
repz
add
stos
ficomps
ljmp
mov
add
add
add
mov
push
add
in
sti
hlt
add
lret
pop
les
pop
xchg
add
inc
xchg
add
mov
jbe
js
xor
test
mov
loope
add
in
and
mov
adc
push
test
push
mov
pop
lds
testl
mov
xchg
add
add
pop
mov
cltd
lret
gs
popf
int
cmc
push
ret
add
imul
pusha
add
add
jae
insb
lret
pushf
das
mov
add
add
add
mov
and
push
dec
pop
sub
jns
in
xlat
jnp
xor
pop
xchg
je
mov
add
data16
adc
pop
xchg
scas
mov
cld
pop
cs
testl
mov
cmc
and
mov
add
faddl
or
and
dec
sti
pop
pusha
add
js
dec
nop
add
pop
sub
push
add
add
push
add
movsb
add
inc
clc
rolb
insb
hlt
add
cs
rolb
mov
push
les
push
movsb
add
sti
adc
imul
add
xor
fsts
pusha
add
sbb
lock
add
add
add
push
add
add
add
jmp
aaa
and
enter
sub
add
mov
add
add
xor
xchg
and
sbb
mov
iret
fadd
sub
add
xor
addb
add
fistpl
pop
movsl
mov
arpl
mov
add
adc
insl
push
mov
addb
sub
add
rcr
pop
cltd
mov
add
add
pop
pop
add
in
inc
add
ret
jge
push
add
testb
mov
cmp
fcomp
fidivrs
push
lock
add
sub
add
faddl
mov
add
add
arpl
rolb
out
mov
stos
and
mov
and
mov
add
add
fisttpll
push
add
pop
xlat
lock
inc
jg
ret
movb
mov
jno
data16
add
in
in
mov
orl
in
pop
lods
fwait
sub
data16
sbb
and
mov
mov
mov
add
add
imul
mov
add
mov
push
inc
add
rcrl
sbb
xchg
es
add
imul
mov
das
dec
ret
fildll
push
add
addb
push
add
add
movb
xor
ret
add
push
add
add
nop
add
push
push
add
aas
add
scas
pop
push
js
add
add
mov
repnz
mov
jg
add
mov
cli
or
jmp
push
add
add
add
stos
or
jne
jle
add
ljmp
pop
addb
xor
mov
daa
testb
mov
std
dec
sbb
jno
pop
out
jge
dec
int3
fstps
testb
dec
dec
mov
cli
out
mov
mov
xchg
lock
add
arpl
rolb
and
mov
xor
and
inc
insl
adc
pop
push
add
in
rolb
mov
add
add
cld
sub
mov
addr16
xchg
out
or
in
icebp
testb
jg
add
pop
faddl
mov
inc
add
int
sub
add
and
mov
inc
out
test
iret
cmp
add
inc
sbb
fsubr
adc
push
leave
lock
jbe
roll
add
jl
mov
imul
outsb
lea
add
nop
add
insl
out
out
mov
add
in
out
arpl
mov
test
mov
cli
cltd
mov
add
add
add
mov
out
data16
add
pop
popa
js
add
add
add
jp
add
jl
add
cmpl
add
pop
daa
sarl
add
fldcw
insb
pop
dec
sbb
test
pop
movsb
add
xlat
xchg
add
sahf
pusha
add
cld
jns
dec
insb
lds
leave
dec
cs
das
movsb
add
add
mov
cmp
mov
mov
pusha
add
fisubrl
add
mov
test
insb
add
mov
lock
pop
adc
dec
jecxz
add
mov
add
add
leave
push
add
mov
inc
add
rcrl
addr16
add
addb
xor
xchg
xchg
add
add
mov
add
jnp
add
ds
push
out
sbb
sub
push
add
insb
sub
mov
xchg
add
add
xchg
xor
aaa
jmp
add
cmpsb
add
add
add
fwait
xchg
pop
jmp
int3
fnstenv
jmp
out
mov
add
add
adc
add
mov
bswap
fildl
add
cmp
add
push
add
mov
loope
gs
sub
aas
in
add
mov
xor
xlat
push
add
add
and
and
add
add
add
mov
mov
or
daa
jp
test
cmp
pushf
push
add
mov
mov
test
fisttpl
sub
fcmovnb
repnz
add
pop
not
dec
cmc
inc
add
mov
aas
aam
jl
int
xlat
or
addb
test
mov
pop
cmp
push
fisttps
add
add
xor
loope
xchg
jb
movb
dec
aas
icebp
jns
add
stos
pop
add
mov
adc
mov
add
dec
fisubl
mov
addb
adc
sbb
pop
lret
cmp
add
mov
iret
sub
loop
shll
mov
dec
xor
push
adc
add
push
test
in
dec
sub
add
mov
cmp
leave
insb
xchg
add
push
fsts
add
mov
fiadds
stos
rcrl
push
push
popf
ds
add
mov
ljmp
and
stos
inc
add
add
inc
xlat
orl
sbb
add
mov
jae
jmp
data16
add
jno
call
xchg
add
xchg
test
test
xor
adc
push
pop
pushf
adc
mov
dec
add
dec
or
sub
hlt
add
push
add
lcall
mov
clc
mov
and
or
lea
outsl
dec
xchg
int3
gs
icebp
lods
add
sbb
pushf
or
mov
xlat
xchg
mov
aas
jmp
mov
jae
faddl
sbb
test
in
mov
inc
add
scas
sub
add
lea
xor
int3
data16
add
mov
gs
dec
mov
mov
mov
mov
adc
bound
mov
add
sub
pop
dec
push
add
fisttpl
and
sbb
add
and
mov
lods
notl
sub
pop
push
add
add
es
push
push
add
out
out
outsl
xchg
sbb
stc
stos
addr16
add
mov
ja
add
and
mov
or
addr16
ds
aad
push
rolb
jmp
add
dec
jbe
filds
daa
adc
adc
lahf
or
inc
outsb
leave
inc
add
jp
inc
push
add
and
mov
pop
adc
adc
testl
popl
cmp
jl
add
and
add
sbb
in
add
out
cltd
inc
add
movsb
add
roll
imul
add
xor
jmp
push
add
mov
xchg
add
lock
and
push
add
adc
add
mov
add
mov
aas
shll
ja
mov
cs
or
add
les
add
inc
add
add
xor
add
add
mov
add
add
lods
jp
add
adc
adc
xor
pushl
add
fisubl
and
mov
add
add
lock
mov
jle
jae
repz
add
add
xor
xchg
add
sbb
inc
add
cmpsb
add
addr16
mov
add
mov
mov
or
scas
push
lret
fiadds
add
push
ljmp
or
mov
jne
add
add
cmpsb
add
mov
sbb
sub
dec
stos
mov
xor
or
add
mov
jecxz
add
add
stos
call
mov
sbb
addr16
xchg
add
mov
mov
add
mov
or
xor
push
adc
add
add
add
dec
cltd
pop
xchg
add
insl
inc
add
sub
jmp
xchg
add
pop
repz
inc
add
scas
adc
mov
add
and
sub
add
add
mov
adc
inc
xchg
add
dec
inc
sti
and
push
pop
lret
add
dec
pop
mov
outsb
in
je
cmpsb
add
xchg
and
jmp
bound
mov
mov
xchg
sbb
nop
add
mov
stos
push
add
add
add
in
pop
jecxz
xor
mov
add
xchg
stos
sub
pop
ret
sub
sub
add
add
add
mov
and
mov
or
ljmp
movsl
scas
mov
lods
xor
add
hlt
add
jge
add
and
mov
jg
shll
mov
std
in
add
ret
add
add
add
popa
fisttpll
mov
mov
jne
dec
mov
mov
and
xor
xor
add
dec
test
lcall
sti
das
fists
jns
mov
into
push
add
movsb
add
add
pop
cmp
add
add
je
mov
testb
xchg
add
mov
inc
add
cmp
push
out
and
mov
sub
test
mov
add
and
add
add
mov
jmp
cli
mov
pop
bound
mov
call
in
fcmovnbe
add
dec
jg
and
stos
dec
sahf
fildll
add
aaa
add
out
mov
mov
xchg
add
imul
cmc
test
test
mov
mov
and
push
add
or
add
rolb
dec
mov
mov
rol
add
mov
cmp
xor
xlat
add
mov
push
add
lret
enter
pop
adc
cs
out
repnz
add
mov
and
add
push
daa
insl
pop
loop
push
cwtl
scas
jno
add
ret
add
mov
dec
popf
push
add
mov
add
add
inc
add
jle
push
add
pop
stc
rolb
or
ror
lret
lcall
add
jmp
add
mov
add
mov
mov
cld
int
add
xor
xor
pop
stc
mov
xor
stos
lret
xor
mov
sbb
sbb
mov
and
sub
and
mov
add
call
add
cmpsl
dec
jne
or
mov
cmp
mov
mov
mov
sbb
add
add
or
mov
nop
add
mov
adc
push
push
add
xor
fstps
add
inc
push
nop
add
inc
sub
loop
xchg
mov
add
fmuls
inc
add
adc
lahf
add
out
xchg
outsl
addb
ret
pop
inc
cltd
push
add
add
pop
je
stos
fiadds
je
sub
mov
add
ret
dec
pop
in
cmp
push
add
xor
jg
les
adc
lahf
aad
and
mov
add
add
popa
push
add
add
testb
jecxz
dec
add
pop
push
add
add
mov
fnstcw
pop
sahf
in
or
imul
add
out
lahf
mov
rep
mov
inc
add
movb
int
test
push
inc
add
or
xlat
and
mov
js
add
cmp
test
inc
stos
jae
add
cmp
sub
fdivr
test
leave
enter
pop
mov
xchg
aam
arpl
add
add
and
lgs
dec
xor
mov
add
mov
in
fstpt
add
mov
sub
add
pop
mov
add
mov
xor
add
movsl
adc
fistl
xor
pop
jecxz
sbb
rolb
mov
cltd
push
add
scas
aas
xor
push
add
cmp
lret
int
or
add
rolb
pop
jmp
aaa
into
cmpsl
xchg
sub
push
fsts
add
fcomi
add
nop
add
pop
iret
gs
add
popl
cmp
fmul
mov
xchg
add
xor
jl
js
and
mov
add
imul
xor
cmp
jmp
push
add
push
dec
hlt
add
sti
mov
or
sti
dec
icebp
mov
call
add
add
in
pop
jne
movsl
cmc
hlt
add
xchg
das
inc
xor
fdivp
add
test
sahf
dec
stos
pop
gs
dec
sub
lret
jp
imul
mov
xor
cld
ret
add
add
add
push
lods
xchg
cmp
mov
pop
std
sub
mov
pop
sub
mov
rolb
push
add
sbb
push
add
mov
xchg
add
push
add
fwait
movsl
mov
push
insb
mov
testb
add
add
mov
cwtl
mov
ret
jl
add
adc
in
cmp
mov
add
or
add
add
xchg
mov
and
jp
in
add
mov
add
xchg
inc
push
mov
addb
sbb
pop
jecxz
add
jg
add
add
add
inc
cmp
mov
rolb
test
scas
lods
sbb
dec
pusha
add
inc
add
aad
jne
test
out
mov
dec
enter
mov
sub
pop
jp
enter
xchg
add
add
out
lret
adc
rol
add
data16
ja
test
add
lea
add
cwtl
inc
add
or
int
fadd
adc
add
jp
jg
sub
addr16
add
mov
sub
xlat
aam
jg
roll
imul
add
add
mov
addr16
sbb
add
add
sbb
pop
jecxz
add
push
sub
rolb
xor
sbb
add
add
mov
mov
enter
iret
push
add
pop
push
push
add
js
inc
add
daa
pop
mov
cltd
or
add
cmp
cmp
add
lahf
cmp
mov
mov
leave
mov
push
mov
aas
cmp
pop
mov
push
pop
std
push
or
xor
pusha
add
add
and
mov
sub
push
add
add
lea
jecxz
pop
inc
ret
rolb
out
leave
mov
cs
scas
cmp
int3
xor
sbb
pop
bound
mov
xor
inc
js
sub
or
add
add
lahf
movsb
add
inc
add
mov
pop
fsubr
adc
loop
roll
lods
mov
or
aad
jmp
pinsrw
pop
sbb
add
jbe
mov
add
arpl
mov
stc
into
push
xchg
stc
test
add
lea
lahf
mov
mov
add
std
js
add
je
int
lods
mov
mov
add
push
add
pop
mov
xchg
add
cmp
jo
xchg
add
or
dec
dec
int
pop
call
and
mov
js
addb
loop
push
in
push
add
enter
jp
and
mov
xor
rolb
push
add
mov
xchg
xor
ljmp
lcall
mov
int
add
call
add
inc
add
add
inc
jbe
flds
add
js
add
jne
fcom
add
cld
add
rolb
cmp
addr16
movsb
add
add
lods
stos
inc
les
loopne
push
add
add
mov
stos
push
add
mov
mov
jge
adc
adc
pop
cmp
add
rcll
add
add
int
xor
addb
adc
lock
add
add
add
mov
dec
fmuls
add
dec
and
mov
add
sbb
add
add
xor
pop
test
daa
push
add
cmp
jg
out
xor
ret
fstpl
outsl
or
out
jns
add
or
test
add
test
add
push
add
add
test
int
or
in
subl
jne
iret
xchg
addr16
loop
push
imul
add
mov
scas
push
add
add
or
loop
iret
sahf
lds
sbb
push
lock
cmp
add
cmp
add
rcll
pop
push
hlt
add
std
inc
fdivl
movsl
js
addb
mov
mov
dec
jo
into
into
sub
mov
add
cmp
add
push
outsb
mov
sbb
mov
jae
add
leave
push
test
fisttpl
lea
jbe
mov
add
cmc
hlt
add
and
mov
and
pop
xchg
xchg
ret
mov
push
add
inc
add
add
pop
jnp
add
jo
or
add
push
add
xchg
stc
xor
and
mov
add
out
cltd
xchg
mov
add
add
testb
inc
sub
adc
in
mov
add
xor
in
stc
test
push
inc
add
ljmp
add
into
cmp
push
movsb
add
dec
add
add
adc
sbb
add
adc
sub
pop
push
fidivs
xchg
pop
jg
repz
add
stc
rolb
or
add
add
push
dec
push
add
inc
add
add
add
add
add
push
add
les
sub
add
cmc
xchg
insb
addr16
adc
repnz
hlt
add
addb
test
pop
cmp
push
add
add
rolb
fsubrp
or
add
mov
mov
lret
add
add
add
mov
mov
cltd
jecxz
add
add
das
hlt
add
mov
xor
jne
add
xchg
call
rolb
shll
mov
sub
sbb
cltd
pusha
add
addb
mov
jae
div
add
sub
adc
sahf
jb
mov
mov
sub
sti
adc
mov
adc
xor
cwtl
hlt
add
mull
faddl
mov
sbb
enter
repz
add
add
pop
gs
mov
sub
sub
and
popa
push
add
mov
dec
sbb
lods
imul
add
add
sub
lcall
add
cmpsb
add
add
adc
add
add
decl
add
add
dec
mov
add
add
add
push
add
sarl
sub
imul
push
add
mov
add
add
adc
je
fcompl
popf
mov
dec
in
mov
add
sub
add
add
sub
mov
mov
imul
rolb
push
add
add
add
mov
add
mov
mov
pop
dec
pusha
add
movb
jmp
push
into
jl
rolb
movsb
add
and
add
mov
inc
add
xchg
cs
sbb
sbb
mov
imul
testb
add
add
add
in
mov
dec
pop
xchg
add
pop
xchg
fcoml
add
jecxz
jns
subl
bound
mov
jl
icebp
stos
xchg
inc
add
xor
rolb
insl
fstpl
shrl
lahf
rolb
repz
add
adc
in
sbb
dec
ds
lret
inc
add
add
add
jge
hlt
add
add
pxor
das
pusha
add
lods
sub
repnz
adc
iret
mov
repz
stos
repnz
pop
jnp
lock
mov
sahf
loop
or
rolb
mov
test
pop
pop
cli
incl
jb
push
dec
push
cld
jbe
mov
mov
add
inc
add
add
mov
add
or
dec
cmp
add
add
add
ret
test
add
leave
mov
ss
mov
sbb
test
xor
sti
hlt
add
add
hlt
add
add
add
rolb
aas
cmp
add
cmp
lds
addb
rolb
push
dec
add
jecxz
outsb
sub
add
cmc
push
add
rolb
adc
arpl
fsts
inc
andl
sar
mov
mov
sbb
cmp
mov
dec
sbb
mov
fcoml
add
jne
fucomi
mov
outsl
sbb
addb
push
mov
jmp
shr
xor
inc
add
add
push
add
add
add
call
or
add
push
add
mov
sbb
roll
mov
add
sti
int3
xchg
cmpsl
movl
and
mov
in
mov
inc
outsb
sbb
add
xor
test
aam
xor
add
add
ret
and
mov
mov
mov
out
or
mov
xchg
add
add
add
stos
mov
popa
scas
ljmp
cmp
jne
add
add
xchg
dec
fidivl
push
adc
adc
aaa
sbb
in
and
push
fistps
icebp
push
add
add
punpckldq
mov
pop
jae
add
add
jb
idivl
cmpsb
add
movb
add
add
xchg
add
mov
lea
add
add
mov
xor
popl
bound
mov
mov
add
dec
out
pop
sbb
mov
out
dec
pusha
add
or
add
add
mov
add
add
push
add
xor
addb
add
in
iret
es
add
or
pusha
add
cld
jae
in
add
out
add
adc
aaa
aam
fiadds
add
xor
add
dec
xlat
mov
mov
mov
iret
lret
add
ds
or
pop
fldlg2
shrl
out
pop
call
push
cmpsl
fisttpl
outsl
iret
jno
packsswb
fildl
sub
sbb
mov
adc
mov
aam
loopne
and
test
add
pushf
lahf
es
add
add
inc
out
push
loope
cmpl
add
clc
cs
add
mov
add
cmp
mov
and
std
repnz
jle
add
shll
lods
fsubs
ljmp
lods
mov
jmp
lret
add
xchg
jl
addb
add
mov
popf
sub
and
xchg
add
lahf
data16
mov
std
push
add
je
xor
add
pxor
scas
push
add
aam
movsl
fiadds
add
popa
and
mov
mov
push
add
mov
push
pushf
dec
outsl
ja
lcall
inc
add
insl
lock
add
add
mov
add
pushf
add
lods
in
enter
mov
add
add
std
cmp
int
add
stc
les
mov
insb
xor
jle
outsb
xor
loop
les
stos
into
leave
cli
and
mov
inc
insb
push
insb
out
mov
or
cmc
jge
xor
fsubl
inc
add
add
rcrl
add
das
fwait
and
jns
add
lock
popa
mov
out
call
shl
adc
sbb
mov
sub
sbb
mov
jp
add
add
mov
add
mov
sbb
adc
inc
add
sbb
scas
jmp
adc
inc
add
add
repnz
sbb
into
mov
sbb
dec
cmc
daa
mov
fbstp
push
fnstenv
add
add
add
mov
insb
or
insb
mov
add
xor
mov
rolb
jle
fldcw
add
add
frstor
ret
add
jnp
add
aas
inc
mov
add
imul
loope
push
add
add
mov
push
add
das
pop
add
fwait
cmp
and
mov
xor
mov
dec
outsb
rorl
in
add
mov
push
add
movsb
add
add
fists
jne
out
add
cmc
stos
pop
add
insl
fwait
adc
and
mov
stos
xchg
add
add
data16
push
mov
xchg
rcl
nop
add
sub
loopne
or
jo
cmp
inc
add
add
je
sub
cmp
mov
push
add
add
pusha
add
add
rolb
push
add
sub
pop
stc
decb
scas
add
stos
out
test
lock
add
add
mov
sub
mov
mov
dec
sti
iret
dec
add
ret
xor
lret
pop
test
mov
cmp
jp
dec
test
mov
pop
xchg
add
mov
jae
mov
mov
jg
add
push
xchg
add
js
roll
addb
ret
andl
sahf
xchg
addb
add
ljmp
mov
outsb
push
add
jno
add
stc
mov
sbb
pushf
pop
inc
mov
push
mov
adc
mov
sub
cld
pop
movsl
mov
je
pop
pop
gs
jl
add
mov
icebp
xor
add
pop
rolb
sub
loopne
popa
rolb
shrl
add
in
dec
jbe
out
push
add
imul
lds
add
icebp
insl
leave
ficoms
lahf
loop
dec
dec
sub
cmpsb
add
add
jg
add
dec
movsl
in
dec
push
inc
add
testb
adc
out
xor
roll
jno
pushf
aam
mov
xor
fnstsw
add
out
mov
xchg
dec
emms
dec
cltd
adc
adc
popa
addr16
add
cmp
lret
repz
add
mov
lds
aaa
mov
add
add
add
adc
mov
bound
mov
ret
sbb
mov
xchg
and
inc
add
lcall
xor
mov
add
add
cld
mov
pop
mov
adc
jb
jno
shr
jmp
out
cmp
adc
mov
xor
loopne
jnp
mov
fwait
xor
mov
sub
fisubs
sub
mov
pop
mov
add
cmc
gs
addl
insl
out
cwtl
out
out
pushf
fcoml
dec
gs
add
fldl
mov
add
inc
stos
aas
test
cmp
push
cmp
add
mov
pop
add
push
add
add
mov
jge
pop
cli
or
add
dec
in
xchg
add
xchg
add
lds
sbb
inc
or
add
add
sarl
add
cwtl
ljmp
add
add
jmp
add
and
outsl
addb
add
add
dec
add
scas
mov
test
add
mov
add
mov
jl
test
or
add
hlt
add
cmpsb
add
js
add
mov
xchg
sbb
mov
inc
add
repz
lods
xor
fstpl
add
push
mov
arpl
popf
push
push
and
mov
lahf
in
stos
sbb
xchg
fstp
mov
jae
inc
add
ret
xchg
xchg
sub
add
lret
fisttps
lock
jno
aas
lods
daa
and
add
cld
adc
scas
sub
cmp
cltd
jl
mov
das
popf
and
add
inc
add
add
sbb
cmpsl
stos
add
leave
imul
xsave
add
rcll
add
add
push
je
jne
lcall
negl
ficompl
popa
xor
lods
mov
ljmp
add
mov
test
and
add
jne
lods
repnz
cmove
gs
out
inc
xlat
push
add
stc
clc
add
mov
inc
insl
push
xor
pop
addb
adc
dec
pop
mov
fsubrl
push
add
xor
or
bound
mov
aaa
aad
add
test
pop
push
jecxz
sub
add
mov
cmp
sub
std
xchg
add
xchg
out
or
cmp
pusha
add
inc
daa
fistpl
mov
out
push
scas
sub
add
push
sub
push
adc
inc
jle
lods
add
aam
icebp
testb
movl
add
cmp
add
dec
icebp
xchg
add
test
repnz
add
add
add
or
cmp
pop
addr16
jg
add
add
insl
cmp
frstor
add
loopne
pop
push
add
xchg
mov
lock
add
das
shrl
push
int
std
mov
mov
inc
inc
cmc
or
xor
pop
outsb
inc
add
adc
push
add
cwtl
clc
add
add
add
testb
or
js
in
leave
xor
mov
sbb
xchg
add
sub
mov
add
pop
dec
jo
pop
into
dec
adc
pop
xor
add
ror
lcall
add
dec
imul
ret
xlat
cmp
mov
jmp
icebp
rorl
fucomip
dec
xchg
mov
xchg
mov
fldl
repnz
add
add
mov
movsb
add
xor
jb
inc
gs
imul
pop
xlat
test
inc
add
add
xlat
pop
cli
and
loope
and
cmpsl
inc
add
hlt
add
add
push
push
add
inc
add
lcall
mov
dec
adc
add
add
dec
repz
out
insl
mov
scas
and
cmp
nopl
iret
stos
das
mov
jbe
int3
pop
int3
xor
push
loop
inc
add
movsb
add
add
add
and
jne
add
add
add
rolb
mov
add
add
push
add
push
stos
mov
push
add
lahf
cmpsb
add
sub
jmp
test
testb
inc
add
imul
pushf
std
in
jge
sbb
add
jg
add
fistpl
aad
lcall
jns
and
and
lret
xchg
add
cltd
push
add
jae
add
das
add
xchg
and
add
add
sub
flds
insb
stc
movl
testb
inc
add
or
add
scas
lock
add
movsl
xor
lock
push
add
fmuls
imul
add
mov
add
xchg
addb
add
add
pop
mov
add
cmp
and
mov
jnp
add
lea
add
mov
adc
stos
stos
dec
xchg
add
pusha
add
mov
les
and
add
repnz
jae
mov
cmp
add
mov
mov
filds
mov
add
add
imul
add
add
mov
push
clc
repnz
jae
xchg
push
add
jecxz
pop
push
mov
xchg
ret
xor
jecxz
or
orl
add
add
mov
fwait
cld
nop
jmp
adc
add
add
insl
pop
clc
repnz
jae
jge
add
xor
inc
clc
repnz
jae
and
mov
xor
add
repnz
jae
add
add
mov
clc
repnz
jae
add
add
add
add
add
incl
fwait
cld
nop
jmp
add
add
lea
push
mov
xchg
ret
mov
add
mov
nop
jae
push
push
dec
add
push
push
mov
xchg
ret
add
adc
push
mov
xchg
ret
add
dec
incb
lods
xlat
inc
add
push
add
pop
push
clc
repnz
jae
add
dec
add
add
les
cli
pop
fwait
cld
nop
jmp
test
add
ret
icebp
xchg
sbb
fwait
cld
nop
jmp
xchg
add
jecxz
jge
jmp
test
add
clc
repnz
jae
dec
add
inc
add
adc
daa
sub
nop
jae
loop
dec
xor
mov
push
mov
xchg
ret
add
jecxz
add
adc
add
repnz
jae
push
cmp
add
push
mov
xchg
ret
fiadds
push
xchg
add
mov
add
subl
add
add
mov
add
repnz
jae
sbb
xchg
add
dec
fwait
cld
nop
jmp
adc
xor
add
push
mov
add
ds
ret
pop
add
add
sub
sub
lea
clc
repnz
jae
add
xor
mov
fwait
cld
nop
jmp
add
xchg
add
push
xchg
add
mov
clc
repnz
jae
fldl
add
adc
xor
add
jae
adc
add
mov
cmp
ss
push
clc
repnz
jae
add
mov
add
add
mov
clc
repnz
jae
adc
mov
add
sbb
dec
repnz
add
add
mov
add
add
add
sub
repnz
jae
jge
int3
add
mov
cmpsl
je
cmp
xor
add
clc
repnz
jae
add
mov
mov
clc
repnz
jae
push
ja
add
push
mov
push
mov
xchg
rcrl
add
mov
sub
sar
repnz
jae
add
sub
jge,pt
push
clc
repnz
jae
add
loop
xor
adc
or
mov
xchg
ret
xor
lds
push
push
mov
xchg
ret
cmp
loop
add
push
clc
repnz
jae
int3
xor
call
sub
repnz
jae
xor
add
test
test
sbb
insb
pop
add
fwait
cld
nop
jmp
add
add
ja
add
add
les
repnz
jae
fldl
add
xchg
push
cmpsb
add
mov
clc
repnz
jae
sub
add
add
add
clc
repnz
jae
add
fnsave
nop
jmp
add
add
add
sbb
pop
fwait
cld
nop
jmp
adc
sub
sbb
or
cmp
ret
push
add
add
in
pusha
push
mov
xchg
ret
add
add
add
add
stc
mov
clc
repnz
jae
sub
xchg
add
add
add
mov
fwait
cld
nop
jmp
add
add
pop
clc
repnz
jae
mov
sbb
add
add
jnp
loop
fwait
cld
nop
jmp
icebp
add
shll
in
cmp
fwait
cld
nop
jmp
add
in
mov
clc
repnz
jae
add
cmc
xor
mov
mov
clc
repnz
jae
add
and
jmp
sub
sbb
adc
push
add
add
mov
xchg
ret
fldl
ret
jecxz
push
rolb
push
add
repnz
jae
addb
add
xchg
js
mov
push
clc
repnz
jae
add
add
aas
add
push
mov
xchg
ret
add
push
add
mov
clc
repnz
jae
pop
add
push
xor
in
and
push
mov
xchg
ret
add
ds
add
mov
clc
repnz
jae
in
sbb
roll
mov
jp
push
mov
xchg
ret
adc
add
mov
lods
jne
fwait
cld
nop
jmp
int3
add
mov
add
push
push
mov
xchg
ret
add
cmp
add
int3
mov
movsl
mov
jae
add
sub
add
adc
inc
add
add
out
mov
clc
repnz
jae
cmp
xchg
add
add
test
fwait
cld
nop
jmp
mov
push
add
add
clc
repnz
jae
cmp
sbb
xchg
ja
lea
sti
clc
repnz
jae
add
pop
jecxz
xchg
test
add
ffree
xor
add
add
sbb
cld
or
jmp
adc
int3
sbb
jmp
jae
add
xchg
in
cmp
repnz
jae
addb
add
xchg
pop
jae
add
andl
add
jecxz,pt
ja
add
clc
repnz
jae
add
add
fstl
roll
scas
xor
clc
repnz
jae
xchg
cmp
add
mov
adc
repnz
jae
adcb
add
add
cmp
dec
cmp
repnz
jae
add
add
jge
xchg
add
les
sbb
repnz
jae
loop
add
in
push
clc
repnz
jae
add
add
add
inc
cmp
mov
xchg
ret
add
in
add
xor
push
mov
xchg
ret
add
jge
sbb
repnz
jae
xchg
add
push
add
add
les
fsubr
mov
repnz
jae
add
mov
xchg
ret
shll
xchg
test
inc
add
add
mov
repnz
jae
fldl
sub
nop
jae
adc
pop
bound
aas
pushl
push
mov
xchg
ret
add
add
push
xchg
add
mov
clc
repnz
jae
xchg
sbb
fists
mov
xchg
ret
adc
xor
clc
repnz
jae
sub
add
ja
xchg
push
mov
xchg
ret
jecxz
add
arpl
aas
div
jmp
add
mov
dec
add
cmp
imul
clc
repnz
jae
add
add
xchg
icebp
inc
add
fnstcw
clc
repnz
jae
add
test
sti
push
fwait
cld
nop
jmp
push
add
addb
jb
pop
movzwl
clc
repnz
jae
push
adc
add
add
repnz
jae
add
add
add
out
repz
add
clc
repnz
jae
add
ret
mov
pusha
add
data16
fwait
cld
nop
jmp
push
add
add
ja
add
and
clc
repnz
jae
add
xchg
lock
add
mov
jmp
jae
push
in
add
and
fs
insb
clc
repnz
jae
add
sbb
andb
add
repnz
jae
add
mov
xchg
ret
add
add
sbb
inc
and
clc
repnz
jae
sbb
lcall
sbb
add
jge
sbb
xor
pop
clc
repnz
jae
xchg
sbb
add
mov
push
clc
repnz
jae
push
cmp
add
fistl
mov
xchg
ret
pop
dec
add
fs
mov
clc
repnz
jae
sub
add
fisttpl
jae
cmp
add
add
add
add
push
fwait
cld
nop
jmp
sbb
add
add
jmp
jns
add
xchg
int
add
add
ret
and
add
dec
add
fwait
cld
nop
jmp
flds
add
add
xor
dec
add
clc
repnz
jae
push
add
add
mov
xor
inc
add
adc
xor
add
movzwl
clc
repnz
jae
add
ja
mov
pop
clc
repnz
jae
add
shll
xchg
clc
repnz
jae
bound
mov
add
fwait
cld
nop
jmp
sub
add
xor
sub
repnz
jae
add
push
add
jae
add
add
jge
add
decb
repnz
jae
mov
adc
sbb
mov
mov
clc
repnz
jae
add
sbb
mov
clc
repnz
jae
dec
xor
add
sub
clc
repnz
jae
add
add
ret
int3
add
clc
repnz
jae
xor
adc
dec
loop
add
jmp
and
add
sbb
ja
jmp
fwait
cld
nop
jmp
add
fiadds
add
cmp
mov
addb
in
pushf
push
push
mov
xchg
ret
sbb
add
mov
clc
repnz
jae
add
xor
adc
inc
clc
repnz
jae
sbb
sbb
nop
jae
add
xchg
mov
push
add
add
lea
fwait
cld
nop
jmp
sub
add
testl
fwait
cld
nop
jmp
mov
push
add
clc
repnz
jae
adc
ret
push
add
mov
fadds
xchg
ret
sbb
or
add
repnz
jae
sub
add
add
clc
repnz
jae
push
add
mov
sti
push
push
mov
xchg
ret
add
add
add
clc
repnz
jae
jge
aad
add
and
sub
repnz
jae
cmp
add
fwait
cld
nop
jmp
add
add
add
mov
repnz
jae
add
dec
push
add
add
lahf
cmp
fwait
cld
nop
jmp
ret
add
xchg
xor
xorb
pop
jmp
add
add
xor
add
add
mov
add
pusha
clc
repnz
jae
pop
add
add
add
add
sbbb
add
add
add
cld
nop
jmp
add
mov
xor
add
fwait
cld
nop
jmp
pop
add
cmp
cld
nop
jmp
sbb
add
clc
repnz
jae
cmp
xor
mov
repnz
jae
add
sub
mov
xchg
add
fwait
cld
nop
jmp
icebp
push
jecxz
add
mov
clc
repnz
jae
add
xchg
add
in
add
add
repnz
jae
sub
icebp
sbb
iret
decl
push
mov
xchg
ret
xor
jb
or
nop
jae
add
sub
add
lcall
xorl
add
add
mov
push
sbb
insb
les
fwait
cld
nop
jmp
xchg
xchg
add
fiaddl
pop
cmp
mov
xchg
ret
add
sbb
mov
mov
pushl
push
mov
xchg
ret
dec
cmp
add
xor
mov
push
mov
xchg
ret
adc
add
pushl
clc
repnz
jae
add
add
or
clc
repnz
jae
sbb
dec
push
clc
repnz
jae
mov
add
add
add
mov
add
fwait
cld
nop
jmp
ja
fs
add
fwait
cld
nop
jmp
sbb
add
sub
mov
xchg
ret
int3
push
add
movsb
clc
repnz
jae
ret
adc
add
pop
shll
mov
push
mov
xchg
ret
add
push
add
inc
inc
add
sti
fwait
cld
nop
jmp
xchg
and
sbb
add
add
push
mov
xchg
ret
add
fnstsw
ss
inc
add
decl
clc
repnz
jae
fiadds
add
test
inc
clc
repnz
jae
sub
jge
xor
ja
jns
popa
add
repnz
jae
add
add
add
push
pop
clc
repnz
jae
sbb
ret
ret
data16
mov
repnz
jae
add
mov
idiv
push
push
mov
xchg
ret
add
cmp
aad
xchg
clc
repnz
jae
add
adc
incl
nop
jae
xor
cmp
adc
add
repnz
jae
add
rolb
add
add
add
clc
repnz
jae
aad
mov
and
shrb
mov
xchg
ret
add
sbb
rolb
repnz
jae
add
add
add
loop
sbb
mov
xchg
ret
push
cmp
push
add
icebp
mov
repnz
jae
sbb
adc
mov
xchg
ret
add
add
sbbb
repnz
jae
sbb
icebp
sub
stc
add
clc
repnz
jae
xchg
add
loop
ja
addb
add
add
add
repnz
jae
add
fiadds
loop
sbb
add
clc
repnz
jae
add
in
pop
cld
test
fwait
cld
nop
jmp
ja
mov
mov
add
jae
push
add
add
cmp
add
push
mov
xchg
ret
cmpb
fiadds
mov
lcall
adc
add
repnz
jae
add
add
mov
roll
push
mov
cli
jno
or
add
add
add
clc
repnz
jae
add
add
add
add
or
clc
repnz
jae
add
xor
mov
clc
repnz
jae
add
hlt
add
jae
fiadds
add
sbb
clc
repnz
jae
cmp
jecxz
add
shl
push
mov
xchg
ret
push
ja
add
cld
nop
jmp
add
addb
add
int3
sahf
pop
clc
repnz
jae
addb
test
cmp
adc
test
inc
add
add
jge
clc
repnz
jae
shrl
add
mov
clc
repnz
jae
xor
or
clc
repnz
jae
fstl
mov
jae
adc
xchg
add
jge
jecxz
xlat
cmp
cli
clc
repnz
jae
add
xchg
add
and
mov
xchg
ret
in
jecxz
xchg
sbb
add
add
repz
dec
mov
mov
clc
repnz
jae
mov
addr16
addb
inc
clc
repnz
jae
add
adc
fldl
add
jg
rclb
lock
add
add
push
mov
adc
add
loope
dec
adcb
sar
clc
repnz
jae
adcb
sub
repnz
jae
ja
add
add
jmp
ja
mov
add
add
add
and
mov
jo
daa
hlt
add
or
repnz
jae
ficoms
add
fstl
add
mov
clc
repnz
jae
add
fdivrs
fwait
cld
nop
jmp
add
xchg
add
jp
add
sub
add
add
loop
xorb
add
mov
fwait
cld
nop
jmp
aad
cmp
xor
add
mov
clc
repnz
jae
icebp
aad
addb
cmp
add
add
pop
clc
repnz
jae
sbb
xor
clc
repnz
jae
push
xchg
add
xchg
add
add
repnz
jae
adc
cltd
mov
clc
repnz
jae
add
push
jge
mov
outsb
je
clc
repnz
jae
cmpb
push
add
add
fwait
cld
nop
jmp
xchg
add
add
ja
pop
mov
clc
repnz
jae
icebp
push
add
add
clc
repnz
jae
xor
add
ds
clc
repnz
jae
cmp
add
insl
mov
clc
repnz
jae
bound
add
push
push
stos
add
clc
repnz
jae
push
add
jge
or
nop
jmp
ss
enter
repnz
jae
add
xchg
xchg
fldl
rolb
add
and
push
mov
xchg
ret
push
sbb
add
add
xchg
jle
jmp
jae
sbb
add
arpl
mov
clc
repnz
jae
add
pop
clc
repnz
jae
add
cmp
leave
rep
push
mov
xchg
ret
jge
dec
ss
and
mov
push
push
mov
xchg
ret
add
fdivp
add
clc
add
push
mov
xchg
ret
add
jecxz
mov
push
add
pop
add
clc
repnz
jae
mov
add
jbe
inc
add
add
sbb
mov
clc
repnz
jae
ja
add
ja
fbld
repnz
jae
mov
aad
add
xorl
fwait
cld
nop
jmp
sbb
push
pop
ror
jmp
add
add
xchg
bound
test
clc
push
mov
xchg
ret
xor
add
add
fwait
cld
nop
jmp
mov
add
sub
in
add
add
clc
repnz
jae
shll
and
clc
repnz
jae
add
add
sbb
push
mov
xchg
ret
adc
add
bound
mov
clc
repnz
jae
jge
jecxz
add
add
mov
clc
repnz
jae
push
adc
pop
clc
repnz
jae
sbbb
jge
add
add
cmpl
or
fnstsw
mov
clc
repnz
jae
add
xor
repnz
jae
add
push
add
xchg
icebp
clc
repnz
jae
push
add
add
add
xor
call
clc
repnz
jae
add
cmp
mov
push
fwait
cld
nop
jmp
add
mov
dec
mov
rep
clc
repnz
jae
test
add
push
add
add
add
jne
fwait
cld
nop
jmp
add
cmp
pop
imul
hlt
lcall
cli
cmp
jecxz
cmp
jmp
add
mov
add
mov
add
push
push
mov
xchg
ret
ret
add
add
rcll
mov
xchg
ret
add
add
add
push
clc
repnz
jae
xorb
add
jge
add
sub
jae
ja
cmp
addb
fistps
mov
xchg
ret
xor
cmp
inc
and
repnz
jae
adc
out
mov
clc
repnz
jae
dec
adc
push
clc
repnz
jae
loop
xchg
and
lods
xchg
clc
repnz
jae
add
sub
icebp
adc
add
inc
add
clc
repnz
jae
sbb
add
lods
and
push
mov
xchg
ret
icebp
icebp
add
add
and
clc
repnz
jae
add
iret
mov
clc
repnz
jae
add
add
add
add
in
clc
repnz
jae
add
int3
add
push
int3
inc
add
adc
add
add
sbb
push
mov
xchg
ret
jecxz
add
add
pop
clc
repnz
jae
add
push
add
xchg
adc
mov
loop
clc
repnz
jae
dec
add
add
mov
clc
repnz
jae
add
push
cmp
out
repnz
clc
repnz
jae
add
xor
and
clc
repnz
jae
add
outsb
jmp
int3
add
add
roll
and
jge
outsl
arpl
add
repnz
jae
push
bound
jnp
mov
mov
jg
add
add
add
in
mov
clc
repnz
jae
xchg
and
push
sub
mov
inc
add
add
add
sahf
push
push
mov
xchg
ret
adc
mov
sbb
clc
repnz
jae
push
push
add
adc
xor
cld
nop
jmp
push
add
jge
add
adc
pop
mov
push
mov
xchg
ret
xor
shll
pop
rol
clc
repnz
jae
add
add
pusha
add
clc
repnz
jae
sbb
mov
mov
push
push
mov
xchg
ret
icebp
add
cmp
add
push
push
mov
xchg
ret
add
int3
pop
xchg
add
clc
repnz
jae
add
add
add
clc
repnz
jae
dec
test
add
push
pop
test
adc
and
add
add
add
inc
movsb
add
clc
repnz
jae
add
icebp
fstl
lea
clc
repnz
jae
sub
sbb
add
lds
push
clc
repnz
jae
adc
sbb
add
add
sbb
add
add
add
sub
in
js
add
add
loope
lds
xlat
push
neg
sbb
test
repnz
jae
ds
nop
add
add
jne
push
add
push
mov
xchg
ret
push
add
mov
mov
xor
push
mov
xchg
ret
add
ficoms
add
push
add
repnz
jae
add
add
out
call
clc
repnz
jae
xchg
sub
dec
data16
mov
clc
repnz
jae
jecxz
jecxz
ficoms
icebp
pop
test
fwait
cld
nop
jmp
or
add
mov
dec
cmp
repnz
jae
xor
cmp
xchg
mov
push
mov
xchg
ret
cmpb
mov
nop
jmp
add
add
push
push
mov
xchg
ret
add
sub
add
xor
fwait
push
clc
repnz
jae
push
icebp
add
add
mov
push
fwait
cld
nop
jmp
roll
xor
add
dec
sbbb
test
repz
clc
repnz
jae
ja
pop
ljmp
clc
repnz
jae
sbb
xorb
add
adc
cld
incl
xchg
sub
adc
add
add
ret
clc
repnz
jae
mov
add
add
loopne
testb
mov
clc
repnz
jae
add
ja
pop
add
test
cld
nop
jmp
add
add
stos
mov
fwait
cld
nop
jmp
pop
sub
add
xor
popa
clc
repnz
jae
mov
push
add
fisttpl
jmp
cmp
adc
add
add
sbb
cld
nop
jmp
bound
adc
add
add
jae
add
add
add
test
clc
repnz
jae
add
adc
stos
sub
push
mov
xchg
ret
adc
add
loop
add
add
clc
repnz
jae
add
mov
orl
outsl
popa
fs
repnz
jae
push
adc
sbb
add
clc
repnz
jae
push
jge
push
xchg
add
mov
xchg
ret
bound
xor
insl
mov
fwait
cld
nop
jmp
mov
enter
clc
repnz
jae
xchg
incl
add
add
ret
pop
xor
add
sub
sub
jns
out
clc
repnz
jae
add
or
cld
nop
jmp
add
add
add
add
mov
clc
repnz
jae
add
add
ss
add
clc
repnz
jae
add
sbb
add
repnz
jae
xchg
push
xchg
push
icebp
push
clc
repnz
jae
add
xchg
rorl
nop
jae
add
add
add
fstl
mov
xchg
ret
ret
mov
and
add
stos
push
mov
xchg
ret
add
adc
dec
pop
push
mov
xchg
ret
int3
add
xor
cmp
mov
cmp
ret
add
xor
add
lods
push
mov
xchg
ret
add
push
cmp
add
jae
dec
ja
jecxz
add
xorb
push
mov
xchg
add
lea
sarb
jge
movsb
add
add
clc
repnz
jae
fldl
adc
int3
push
mov
add
adc
call
add
nop
shll
push
add
jmp
xchg
mov
sbb
add
clc
repnz
jae
cmp
mov
add
or
push
mov
xchg
ret
and
push
int3
sub
push
mov
xchg
ret
add
add
cmp
mov
xchg
ret
add
jge
fidivs
repnz
jae
add
add
xchg
bound
pop
jbe
mov
nop
jae
xchg
add
jecxz
dec
decl
clc
repnz
jae
add
in
mov
add
mov
xchg
ret
sbb
mov
push
mov
xchg
ret
dec
in
mov
ja
push
clc
repnz
jae
dec
add
test
mov
add
repnz
jae
jecxz
rcll
add
add
clc
repnz
jae
jge
add
add
add
clc
repnz
jae
add
add
mov
fwait
cld
nop
jmp
addb
adc
add
arpl
test
push
mov
xchg
ret
jecxz
xor
sbb
add
clc
repnz
jae
pop
add
jge
jne
clc
repnz
jae
add
mov
clc
repnz
jae
ja
bound
add
fsubl
repnz
jae
add
add
or
nop
jmp
add
add
pusha
fwait
cld
nop
jmp
add
add
jge
add
mov
xchg
ret
add
xor
add
add
add
add
mov
popa
clc
repnz
jae
add
add
add
outsb
push
mov
add
add
push
and
fidivl
dec
dec
test
fwait
cld
nop
jmp
add
adc
cmp
push
jb
sub
imul
andl
jge
add
push
push
mov
xchg
ret
loop
ds
push
jecxz
add
aad
add
movswl
clc
repnz
jae
add
xor
mov
sub
popa
add
repnz
jae
icebp
test
sbb
clc
repnz
jae
dec
xchg
in
ret
sbb
fwait
cld
nop
jmp
xor
ja
and
add
repnz
incl
aad
add
lea
nop
jae
mov
xchg
sbb
je
js
mov
xchg
ret
add
fld
cs
push
mov
xchg
ret
add
sbb
pusha
clc
repnz
jae
push
sub
add
add
fnstcw
push
push
mov
xchg
ret
jecxz
add
add
leave
push
push
mov
xchg
ret
aad
mov
stos
dec
push
mov
xchg
ret
add
dec
xor
mov
clc
repnz
jae
mov
cwtl
jmp
add
add
ds
mov
pop
test
add
xchg
lcall
inc
or
add
push
add
adc
ret
clc
repnz
jae
ret
add
ja
dec
sub
fwait
cld
nop
jmp
add
add
xchg
mov
test
add
add
add
add
fwait
cld
nop
jmp
add
add
ja
add
mov
inc
test
jmp
add
int3
fldcw
add
jl
fwait
cld
nop
jmp
xchg
xor
add
add
inc
in
mov
xchg
ret
add
add
or
mov
xchg
ret
add
incl
mov
add
clc
repnz
jae
mov
add
xlat
shl
and
nop
jae
adc
xor
pop
mov
push
mov
xchg
ret
dec
add
add
fiadds
add
repnz
jae
push
xchg
aad
cmp
rclb
ss
add
add
jge
stc
push
clc
repnz
jae
add
add
icebp
add
repnz
jae
add
xor
add
push
mov
xchg
ret
ret
add
lds
mov
clc
repnz
jae
cmp
xchg
add
add
mov
jae
add
loop
add
call
nop
jae
add
jmp
jae
aad
add
movsl
rolb
movb
push
add
add
jge
add
xor
add
clc
repnz
jae
mov
add
push
push
mov
xchg
ret
incl
add
ja
push
add
add
clc
inc
add
sbb
xchg
add
rolb
xchg
ret
sub
xor
addb
cmp
repnz
jae
add
add
adc
repnz
jae
test
adc
cmp
add
lret
clc
repnz
jae
add
add
add
cmc
inc
je,pn
fwait
cld
nop
jmp
add
xor
std
cmp
fwait
cld
nop
jmp
add
adc
add
mov
sbb
call
add
add
sbb
xchg
add
and
jle
clc
repnz
jae
add
add
test
data16
sub
clc
repnz
jae
adc
add
add
mov
clc
repnz
jae
add
fimuls
jae
add
jge
add
jge
add
fwait
cld
nop
jmp
cmp
mov
add
shr
push
mov
xchg
ret
sbb
cmpsb
add
and
or
add
sbb
mov
dec
fwait
cld
nop
jmp
add
add
add
xor
punpcklwd
repnz
jae
test
sub
add
add
cmpl
nop
jmp
add
add
cmp
out
add
add
add
clc
repnz
jae
add
fnsave
lea
fwait
cld
nop
jmp
mov
push
jge
xor
dec
cmp
repnz
jae
mov
ret
ja
pop
push
mov
xchg
ret
test
mov
add
xchg
add
lcall
ljmp
and
mov
inc
add
add
add
flds
je
cmc
mov
add
clc
repnz
jae
sbb
add
push
clc
repnz
jae
sub
add
ja
push
add
add
push
mov
xchg
ret
sub
sbb
add
lcall
push
add
sbb
mov
jae
push
add
ret
add
sub
pop
cmpl
fwait
cld
nop
jmp
adc
push
lret
je
clc
repnz
jae
loop
sbb
mov
clc
repnz
jae
cmp
bound
pop
lods
push
mov
xchg
ret
sub
jecxz
add
dec
jp
mov
add
add
repnz
jae
cmp
add
add
repnz
jae
xchg
add
push
add
add
add
add
inc
add
cmp
xchg
leave
mov
clc
repnz
jae
in
xchg
add
add
cmp
repnz
clc
repnz
jae
add
sub
fwait
cld
nop
jmp
add
push
add
movb
mov
xchg
ret
add
jmp
add
push
shll
add
cmp
fwait
cld
nop
jmp
add
xchg
ret
add
xor
clc
repnz
jae
xchg
xor
dec
jne
clc
repnz
jae
add
add
dec
imul
clc
repnz
jae
push
push
cmp
add
lret
push
clc
repnz
jae
add
mov
addr16
mov
fwait
cld
nop
jmp
push
xchg
add
add
mov
flds
jo
fwait
cld
nop
jmp
ja
push
add
pop
push
mov
xchg
ret
ja
sub
adc
clc
repnz
jae
xchg
bound
add
and
xlat
mov
push
loopne
cld
nop
jmp
sbb
add
push
sbb
jo
test
add
add
clc
incl
xor
add
clc
repnz
jae
add
push
add
repz
repnz
jae
add
add
add
fwait
cld
nop
jmp
xor
add
jecxz
incl
jne
clc
repnz
jae
xor
add
jmp
ficoms
ja
test
lcall
fdivr
incl
add
add
jne
mov
clc
repnz
jae
add
mov
inc
clc
repnz
jae
add
add
fstl
cld
nop
jmp
add
add
push
mov
jecxz
mov
push
mov
xchg
ret
bound
add
mov
clc
repnz
jae
fidivrs
addb
pop
adc
push
inc
in
add
add
fwait
cld
nop
jmp
fnstsw
push
jge
xor
mov
clc
repnz
jae
add
adc
add
popf
mov
push
mov
xchg
ret
adc
add
pop
push
push
mov
xchg
ret
sbb
addb
je
fwait
cld
nop
jmp
add
fildll
sub
jmp
call
add
add
cmp
lods
push
push
mov
xchg
ret
add
add
push
add
clc
repnz
jae
add
add
and
cmp
add
add
add
clc
repnz
jae
add
roll
add
mov
xchg
ret
add
add
mov
push
push
mov
xchg
ret
icebp
xor
add
in
call
clc
repnz
jae
add
pop
ds
add
add
sbb
repnz
jae
jge
ja
pushl
fwait
cld
nop
jmp
add
add
sbb
add
push
add
lea
clc
repnz
jae
add
add
xchg
jge
pop
les
add
xchg
fdivr
lcall
call
add
cmpl
fwait
cld
nop
jmp
add
jecxz
add
add
daa
call
and
ret
ret
jge
add
xchg
and
pop
loope
lcall
out
incl
inc
add
clc
repnz
jae
sbb
jecxz
jecxz
ret
fildl
nop
jae
ffree
add
rcll
mov
das
flds
xchg
ret
add
cmp
add
dec
mov
clc
repnz
jae
add
mov
push
jne
clc
repnz
jae
add
ret
shrl
mov
xchg
ret
push
in
ja
xchg
and
mov
nop
jae
add
xor
add
fwait
mov
clc
repnz
jae
dec
ja
add
pusha
clc
repnz
jae
fiadds
jge
cmp
adc
lret
add
clc
repnz
jae
xchg
adc
xor
mov
add
mov
xchg
ret
add
xchg
sbb
cmp
repnz
jae
add
add
push
xchg
pop
push
fwait
cld
nop
jmp
xor
jecxz
sbb
push
pop
pushl
repnz
jae
add
int3
add
jge
ds
add
mov
adc
cld
nop
jmp
sub
add
add
pusha
add
cld
jmp
incl
add
add
add
movsb
add
aam
mov
jae
add
add
dec
add
repnz
jae
aad
cmp
test
and
repz
incl
loop
xor
xchg
pop
enter
mov
xchg
ret
loop
xchg
add
or
nop
jae
add
push
jge
add
push
add
je
rolb
mov
clc
repnz
jae
sbb
add
and
inc
loopne
repnz
jae
loop
ficomps
add
sub
dec
add
mov
xchg
ret
xchg
add
jecxz
add
add
mov
xchg
ret
jecxz
push
add
push
push
mov
xchg
ret
adc
add
pop
fwait
cld
nop
jmp
rcll
xor
and
movsl
add
mov
test
mov
xchg
ret
jge
mov
push
mov
xchg
ret
adcb
inc
movb
pushl
push
mov
xchg
ret
test
sub
ffree
rolb
mov
pushf
mov
clc
repnz
jae
fstl
add
add
mov
es
clc
repnz
jae
add
rep
fwait
cld
nop
jmp
add
mov
add
outsl
fwait
cld
nop
jmp
add
add
xor
hlt
add
rcll
in
add
cmp
mov
add
push
mov
xchg
ret
add
mov
xchg
add
repnz
jae
sbb
sub
outsl
loopne
repnz
jae
int3
add
add
push
mov
nop
jae
ja
add
jge
jge
shl
clc
repnz
jae
add
push
and
add
nop
jmp
add
jge
add
ret
add
cmp
nop
jae
sbb
and
repnz
jae
push
mov
fld
add
and
repnz
jae
add
xor
nop
jae
add
add
fistps
ds
add
add
cmp
call
clc
repnz
jae
sbb
adc
jne
push
mov
xchg
ret
add
add
add
mov
clc
repnz
jae
adc
add
sbb
and
repnz
jae
bound
sub
add
fld1
xor
lcall
call
add
mov
and
mov
clc
repnz
jae
push
mov
flds
add
pop
and
push
mov
xchg
ret
add
push
incl
push
repz
repnz
jae
xor
xor
add
clc
repnz
jae
add
ficoms
repnz
jae
test
push
icebp
mov
sbb
or
fwait
cld
nop
jmp
add
xchg
call
clc
repnz
jae
mov
add
dec
movzwl
clc
repnz
jae
add
add
jge
xor
clc
repnz
jae
jge
sbbb
add
fwait
cld
nop
jmp
push
ja
xchg
and
xor
clc
repnz
jae
and
adcb
mov
xchg
ret
add
jne
clc
repnz
jae
xchg
sbb
mov
fwait
cld
nop
jmp
sub
add
add
loopne
xchg
inc
dec
add
fwait
cld
nop
jmp
sbb
add
fmull
ljmp
push
fs
push
movsb
add
add
push
mov
xchg
ret
xor
add
mov
xchg
clc
repnz
jae
add
sbb
out
push
push
mov
xchg
ret
xchg
cmp
add
inc
call
inc
add
adcb
movl
add
clc
repnz
jae
aad
add
sbb
nop
jae
icebp
loop
loop,pt
xchg
cmp
popa
add
repnz
jae
pop
add
ds
push
adc
jmp
fstps
pop
push
add
pop
jecxz
add
add
add
repnz
jae
add
add
and
jne
clc
repnz
jae
xchg
xor
cld
nop
jmp
add
push
sub
and
jb
pop
into
push
mov
scas
xor
aas
add
add
jmp
mov
lds
dec
das
mov
add
mov
jns
xor
mov
add
jb
mov
mov
in
and
mov
arpl
repnz
add
sti
subl
scas
test
push
add
add
mov
adc
add
pop
popf
mov
das
jae
add
xor
push
mov
data16
fsts
add
lds
es
add
add
mov
cmc
in
das
movsl
jp
int3
pop
add
movb
repnz
xchg
add
ret
add
or
cmp
mov
out
xor
or
pop
bound
mov
addb
sar
jne
xlat
xchg
add
xor
cld
sbb
xchg
add
adc
add
aad
or
pop
mov
lea
xor
cmpsl
pushf
mov
cld
mov
add
mov
cmp
add
pcmpgtb
pop
por
add
add
sbb
sub
mov
icebp
clc
cli
fcmovne
lcall
mov
jno
data16
out
add
roll
add
mov
add
in
sub
ret
jbe
pushf
addb
inc
lcall
jle
add
cwtl
cmp
jl
mov
add
outsb
insl
aaa
pop
inc
add
mov
add
add
jmp
cmp
mov
dec
leave
aad
jne
add
daa
add
add
dec
mov
add
sahf
sub
xor
pop
or
add
sbb
add
xchg
adc
pop
add
xor
add
add
and
cmpsb
add
add
add
add
add
add
add
dec
jbe
push
add
cld
mov
jns
pusha
add
in
fcoml
leave
data16
dec
das
sub
mov
sti
and
mov
daa
insb
mov
idivl
cmp
jae
orl
mov
adc
or
js
add
dec
ljmp
dec
pop
jle
outsb
xchg
in
ja
cli
sbb
add
jg
push
add
mov
iret
adc
inc
add
fcmovbe
cltd
xchg
xor
adc
mov
mov
xchg
add
in
add
cmp
fsubrs
popa
scas
dec
mov
adc
addb
jmp
scas
mov
mov
add
mov
sub
gs
push
jns
repz
add
cld
fwait
jbe
add
add
add
add
repz
addb
cmp
movb
add
add
sub
or
mov
inc
add
add
das
jl
mov
jo
popf
mov
mov
or
std
jmp
add
mov
je
pop
xor
aam
sbbl
inc
add
add
add
jle
add
add
sbb
imul
xchg
add
sbb
add
push
add
xlat
and
and
inc
in
scas
outsb
or
jge
imul
or
pop
sub
shll
nop
add
fcmovnb
add
cltd
adc
cmp
inc
jo
pop
mov
sbb
add
and
pop
decb
add
xor
mov
add
push
movb
add
es
nop
add
push
lock
popf
fistpl
xchg
add
icebp
cmp
or
rorl
fiaddl
cmpsl
jmp
mov
mov
rolb
mov
mov
sub
pusha
add
mov
add
loope
add
int3
ja
add
mov
int3
int
bound
mov
leave
stc
pop
in
pop
je
push
into
cmp
jecxz
scas
cmp
or
push
add
mov
add
dec
data16
jecxz
out
iret
sub
mov
push
add
sub
and
add
add
out
sbb
les
xchg
add
mov
dec
insl
push
add
add
add
out
mov
adc
rolb
add
ljmp
add
int3
mov
sbb
push
out
das
sbb
sahf
pop
rolb
imul
add
or
lea
ficoml
add
add
lods
aaa
push
lret
je
pop
addb
loope
roll
cmp
fistps
push
add
dec
mov
add
add
add
loop
out
mov
add
rolb
movb
add
pop
addb
add
inc
mov
mov
pushf
outsl
mov
add
dec
cmpsb
add
and
add
mov
push
add
add
or
add
pop
xchg
add
add
icebp
iret
cmp
nop
add
lret
adc
push
fldcw
outsl
in
les
pop
stos
mov
ja
scas
aas
inc
lds
in
cld
mov
cmpsl
cs
fistps
inc
add
sbb
sub
add
in
add
add
cwtl
arpl
outsl
loopne
or
cmc
or
dec
dec
push
add
cmp
add
call
data16
add
pop
push
ficompl
test
test
add
std
mov
add
xchg
add
popl
daa
jecxz
mov
add
add
push
push
add
cwtl
jbe
jecxz
add
add
mov
and
mov
mov
pop
jecxz
mov
pop
sahf
sub
add
inc
mov
test
gs
popf
lds
pop
sub
js
fdivrl
pop
mov
sahf
aaa
data16
add
je
and
mov
rolb
jge
ja,pn
lret
add
daa
out
mov
addb
add
lahf
hlt
add
das
mov
add
mov
sti
pushf
loope
adc
pop
lds
scas
xchg
add
add
pop
idivl
popa
jle
jmp
cmpsl
xchg
add
add
ds
fidivrl
xchg
ds
pop
sub
call
pop
lds
lcall
daa
outsb
mov
pushf
loope
sub
xor
pop
add
cs
imul
sbb
mov
mov
icebp
arpl
mov
cmp
add
mov
in
cmp
pop
loop
ds
add
add
push
add
clc
cmpsb
add
popf
add
mov
add
fucom
add
outsl
push
xor
mov
and
sbb
lcall
add
int
pop
loopne
mov
push
cmp
dec
imul
jge
add
add
mov
add
addr16
cmp
sbb
jge
dec
xchg
add
add
xchg
add
mov
addb
daa
rolb
add
pop
mov
add
add
mov
gs
add
pop
push
add
add
mov
or
add
add
add
ds
add
testb
add
add
mov
add
push
add
hlt
add
add
imul
ret
testb
add
cmpsl
repnz
push
add
add
add
add
je
lahf
fs
cld
push
mov
aam
pushf
push
add
das
sbb
mov
adc
cmp
lret
add
mov
add
add
mov
jo
mov
cmp
add
leave
inc
add
lock
lcall
ljmp
adc
adc
repz
add
rcll
pop
xchg
add
add
sub
fcoml
aaa
and
loope
pop
adc
add
mov
cmp
mov
mov
mov
add
ja
add
push
add
xchg
add
jns
sub
add
movsl
aas
dec
shll
ret
loopne
shll
push
add
dec
mov
mov
add
add
mov
scas
pusha
add
xor
push
add
scas
bound
mov
add
jmp
add
mov
mov
cmp
push
jno
cs
inc
jns
addb
fwait
cmp
adc
les
push
add
addb
std
sub
dec
sbb
jmp
aad
out
mov
adc
fidivs
pop
sbb
and
in
mov
or
dec
mov
fisttpll
pop
fcmovu
stc
inc
daa
add
fistps
sub
add
inc
add
inc
add
or
sub
add
rcll
adc
js
add
and
mov
push
add
sub
add
fwait
in
adc
outsb
sahf
inc
add
insb
rcl
icebp
iret
add
add
mov
sub
popf
or
cmp
sub
test
add
cmp
xor
add
add
jnp
xlat
and
lret
out
add
add
add
cltd
js
mov
add
aas
mov
and
das
dec
jbe
add
add
push
add
add
mov
in
jmp
addb
add
or
dec
rcl
add
rolb
loopne
out
pusha
add
add
mov
add
lods
pop
jmp
add
mov
data16
add
add
mov
mov
push
int3
sub
add
scas
lods
stos
mov
inc
dec
sub
lods
xchg
add
arpl
add
iret
outsb
and
mov
sub
iret
add
mov
cli
int3
dec
sub
push
sarl
add
scas
insb
mov
xchg
add
fwait
aaa
jo
xchg
cmp
sbb
in
loop
xchg
add
inc
add
mov
adc
cmp
add
or
inc
ja
out
sahf
aas
lods
xchg
lds
and
mov
jecxz
lods
and
repnz
clc
jmp
add
jg
or
cmc
jae
lahf
data16
push
add
jns
fnstcw
rolb
and
push
add
je
xchg
mov
aad
movb
fists
movsl
mov
add
or
adc
cmc
xchg
sub
mov
add
add
pop
adc
push
add
inc
mov
add
xor
js
repnz
sub
or
out
jns
add
cwtl
cwtl
jnp
enter
ja
jp
cld
mov
or
enter
push
scas
les
add
add
add
call
push
inc
int
add
sbbl
pusha
add
stos
testb
push
add
imul
add
add
add
mov
scas
sbb
add
ja
add
in
mov
push
lds
cmc
out
sub
add
add
add
xor
add
add
add
add
sub
lahf
loop
jmp
add
mov
call
cmc
pop
out
add
sahf
pusha
add
mov
xor
mov
jmp
repz
add
pop
adc
mov
add
ja
add
into
jns
decl
jmp
add
enter
leave
push
and
mov
xchg
add
add
jmp
les
pop
add
pop
nop
add
call
out
mov
pop
and
mov
addr16
add
iret
rolb
push
and
sub
es
add
push
jle
sbb
les
cmp
add
sbb
add
add
fsubs
add
add
add
add
mov
add
mov
add
bswap
push
rolb
cmpsl
int3
pop
pop
pusha
add
push
xchg
add
cld
xor
and
mov
insl
sbb
add
mov
data16
add
push
add
mov
add
add
nop
add
jl
add
mov
fldl
inc
add
push
add
add
nop
add
ret
lcall
mov
addr16
adc
push
add
add
inc
mov
pop
add
mov
loop
popa
mov
pop
xor
gs
lret
repnz
add
test
sub
inc
add
fisubs
xchg
add
add
jb
mov
pop
sbb
pop
insb
and
daa
cmpsb
add
add
xor
dec
pop
jg
add
add
icebp
push
add
rorl
add
mov
add
mov
and
jmp
icebp
ret
xchg
add
bound
mov
mov
movsl
insl
push
add
mov
gs
mov
xchg
fisubs
std
cmp
add
sbb
add
add
add
dec
or
icebp
push
add
sub
loopne
push
add
ret
dec
cmc
xchg
pop
jo
addb
add
addl
faddp
add
int3
sbb
adc
sbb
cwtl
dec
and
add
icebp
movsb
add
mov
mov
rorl
mov
pushf
add
xchg
fiaddl
std
testb
imul
jns
add
insl
inc
add
and
aaa
je
out
mov
add
iret
pop
test
xor
add
add
xchg
testb
pop
repnz
sub
loop
stc
fs
add
movsl
enter
cmc
xchg
add
sub
add
add
mov
add
xor
mov
pop
icebp
mov
add
jle
pop
rorl
cli
push
add
in
adc
outsb
sbb
sub
sbb
stos
dec
jl
add
sbb
cs
test
jg
mov
cmpsb
add
jno
shll
cmpsl
popf
lods
sub
out
cmp
roll
cwtl
sub
loop
lods
xchg
add
dec
jg
and
mov
iret
add
dec
adc
push
dec
sbb
or
add
lret
add
and
mov
sti
hlt
add
xchg
les
dec
dec
mov
test
jecxz
out
call
add
xchg
add
jp
add
scas
punpcklwd
xor
lret
or
rcrl
outsb
dec
cmpsl
rol
mov
add
add
leave
cmc
sbb
add
add
stc
or
dec
clc
push
add
sbb
inc
adc
addb
iret
out
test
sub
lods
outsb
scas
sub
shll
cs
xor
ret
inc
pop
dec
inc
add
cli
imul
call
mov
bound
mov
add
add
xchg
add
in
mov
lret
fucomip
out
roll
lock
insl
ret
xchg
or
mov
mov
push
daa
push
add
xchg
push
add
push
cmp
pop
xorl
add
dec
push
add
push
add
sbb
push
add
add
xor
stos
jns
cli
mov
outsb
jb
fucom
add
cmp
lds
cmc
sbb
cmp
push
add
add
xchg
out
cmc
sbb
inc
add
add
mov
sbb
repnz
leave
adc
jne
sub
stc
rolb
jnp
pop
xchg
add
sbb
sub
ds
add
adc
addr16
add
ret
add
add
ficompl
les
aas
icebp
test
push
add
add
mov
or
sbb
xchg
lods
das
test
xchg
movsl
add
cmp
add
mov
jo
leave
out
outsb
push
stos
imul
mov
scas
testb
int
add
cmp
add
jne
xor
dec
mov
add
icebp
jo
fmull
mov
inc
add
dec
xchg
pushf
pop
sahf
pop
cltd
inc
lock
cmp
cwtl
out
push
mov
add
pop
jns
add
xchg
add
push
xchg
pusha
add
divl
scas
add
mov
lret
xchg
mov
daa
fbstp
add
mov
push
add
popa
inc
add
add
add
sbb
add
dec
addb
push
jp
xor
lds
loopne
in
xchg
int3
or
loopne
adc
ret
iret
lea
pop
sub
jo
jle
add
inc
add
repnz
mov
add
mov
add
add
loopne
add
add
outsl
xor
dec
cmp
push
add
add
add
mov
mov
dec
fdiv
add
add
mov
dec
sub
add
lds
add
add
lret
sub
imul
adc
or
add
in
pop
inc
out
movsl
add
lret
push
add
xchg
arpl
pushf
add
push
add
loopne
out
mov
mov
add
inc
dec
mov
add
cld
pop
cmp
in
or
jmp
sub
add
mov
add
int
add
add
mov
testb
ret
add
push
popa
or
movsb
add
jg
add
in
mov
mov
adc
or
insl
cmc
dec
mov
mov
addr16
sub
pushf
mov
add
mov
inc
add
xor
aad
jmp
rolb
add
mov
outsl
sub
add
sbb
add
pusha
add
add
orl
pop
or
clc
mov
adc
mov
addb
add
dec
out
scas
clc
lea
add
add
xor
insb
fldl
daa
adc
lea
cmpl
xchg
int3
mov
test
add
cmp
add
xchg
add
add
test
lret
ret
nop
add
jl
inc
add
pushf
subl
cmpsl
cmc
in
insl
adc
gs
lods
aad
inc
add
add
scas
adc
cmpsb
add
je
mov
and
int
loope
imul
js
add
cli
cmp
jnp
jmp
stos
sarl
xchg
xchg
ds
arpl
iret
int
and
add
mov
cmp
pop
xor
push
add
dec
sub
mov
mov
movb
ret
in
jae
xchg
sarl
push
add
add
mov
add
add
inc
mov
add
add
clc
test
lods
inc
add
add
lret
lcall
sbb
inc
mov
mov
jmp
add
xor
mov
pushf
test
fsts
xor
outsl
push
add
mov
add
add
movb
ljmp
rolb
adc
pushf
pop
or
add
push
arpl
fwait
xchg
add
jb
jmp
push
inc
std
xchg
add
loopne
or
or
xor
push
or
sbb
add
lods
into
cmp
ljmp
mov
imul
add
add
ret
cmpsb
add
xchg
repnz
inc
ficomps
fcmovbe
add
mov
not
jle
add
notl
add
cs
mov
xorl
inc
add
imul
add
adc
int
add
call
sub
aaa
popf
outsl
add
mov
add
dec
movsb
add
and
ret
jecxz
xorl
loope
cmc
push
push
add
jle
inc
add
add
dec
add
add
and
clc
aaa
jo
or
cli
subl
push
add
movhps
test
lea
in
out
mov
cwtl
cmp
daa
jg
add
ret
shll
add
fimull
adc
inc
inc
xchg
cmp
je
in
mov
outsb
dec
test
jmp
lods
daa
jecxz
push
add
add
inc
add
out
dec
in
jge
int
add
add
ljmp
addb
add
add
add
repz
fwait
pop
shr
add
dec
pop
gs
xchg
inc
add
pop
sbb
add
add
inc
push
pop
and
add
xchg
mov
scas
mov
lock
and
dec
mov
cmp
sbb
and
mov
aas
test
mov
cmp
clc
lea
add
daa
or
movsb
add
xor
jo
pushf
fidivrl
add
daa
iret
hlt
add
add
les
adc
sub
add
inc
cld
pop
inc
add
add
fwait
into
stos
dec
test
pop
xchg
ljmp
stos
loop
add
mov
add
clc
roll
xrelease
add
xchg
sbb
sub
cmp
inc
in
cmp
add
add
cmp
loopne
cmpsb
add
add
xchg
fcoms
jecxz
pop
in
pop
pop
inc
mov
adc
aam
hlt
add
imul
aaa
xchg
add
xchg
dec
jmp
mov
hlt
add
push
add
mov
cmp
add
ljmp
out
adc
add
movsl
xchg
fcoml
cmp
jne
testb
add
push
add
add
inc
push
lret
and
mov
lds
mov
add
add
stos
bound
mov
add
icebp
dec
loopne
outsl
inc
add
scas
adc
aas
mov
push
cmp
xor
addb
add
or
jle
add
iret
ljmp
add
fwait
mov
test
add
add
push
rolb
rolb
push
add
outsb
or
add
sti
push
es
sahf
shl
mov
add
loope
ja
inc
jbe
cmp
mov
cmp
adc
fidivrl
and
mov
rolb
jo
xor
mov
add
add
and
mov
std
pusha
add
divl
fisttpll
stos
roll
test
add
add
loop
ret
pop
aas
jo
sub
xchg
add
add
inc
add
add
push
loope
add
into
add
fsub
add
enter
sub
int3
mov
aaa
xor
call
add
add
rolb
add
add
mov
jmp
pop
mov
mov
pop
cwtl
push
mov
add
arpl
mov
add
push
inc
add
jns
cmp
and
adc
lea
out
addb
or
les
les
pop
nop
add
jo
arpl
mov
popa
cmc
cs
mov
adc
test
add
movb
add
add
addb
sub
add
imul
add
add
jnp
sti
cmp
cmp
cs
add
movb
aad
xchg
addr16
add
nop
add
bound
mov
movb
add
je
jb
ds
add
cmp
test
mov
jp
out
adc
pop
mov
in
push
leave
mov
add
pop
repz
pop
xor
ss
pop
add
pop
rcrl
fcmovnbe
add
add
or
movsb
add
push
inc
fldenv
rolb
and
mov
incb
fdivs
add
add
add
jge
in
push
add
addb
add
out
pusha
add
or
dec
test
scas
in
scas
add
jns
add
test
add
lock
add
and
mov
add
xchg
sub
or
add
imul
add
into
repz
add
and
fwait
mov
mov
add
add
in
or
add
xor
hlt
add
sbb
push
add
add
add
in
sub
add
mov
add
jbe
leave
in
lcall
add
add
xchg
filds
add
push
cmpsl
sbb
and
or
add
adc
testb
or
pop
sub
mov
and
mov
ret
sbbl
add
xchg
mov
add
add
add
aaa
adc
cmpsb
add
add
add
imul
inc
push
xchg
add
inc
add
or
add
cmpsl
rolb
add
test
xchg
inc
add
test
cmpsl
faddl
cmc
mov
lods
add
mov
lcall
add
sbb
xor
nop
add
mov
mov
add
gs
add
adc
mov
fimuls
lods
in
adc
pop
xchg
add
adc
or
inc
add
adc
rolb
mov
add
inc
scas
mov
xor
xor
aad
xchg
jne
int3
rolb
js
add
jge
mov
push
mov
sbb
add
add
and
mov
loop
jp
arpl
rolb
cmp
arpl
add
arpl
popf
testl
and
out
inc
add
jo
dec
pushf
pop
pushf
sbb
add
mov
xor
mov
outsb
stc
lahf
xchg
mov
in
sub
add
imul
mov
xor
mov
repnz
add
movb
scas
insb
add
bound
mov
insl
cmpsb
add
data16
int
jne
jle
push
mov
popf
cmp
cmp
add
add
loop
dec
mov
mov
outsb
nop
add
add
out
and
add
rolb
rolb
out
out
mov
fisubs
mov
add
mov
pusha
add
push
push
jmp
or
add
pop
xchg
cld
scas
sbbl
mov
add
pop
mov
add
cmp
rolb
jmp
mov
mov
xchg
add
imul
pop
pop
dec
mov
jmp
push
xchg
add
push
lcall
test
push
add
push
add
movsb
add
add
movsl
lahf
fs
mov
add
inc
jo
out
jl
xchg
add
addb
loopne
jp
mov
mov
add
data16
leave
adc
fstpt
je
mov
loopne
xchg
xchg
add
add
pop
enter
in
shll
sbb
add
ja
repz
pop
ret
add
cwtl
inc
pushf
mov
jnp
fcmovu
xchg
push
stos
and
or
xor
std
les
pushf
cmove
repz
add
mov
add
jle
aaa
pop
or
ljmp
add
dec
xchg
add
pop
rolb
mov
add
int3
inc
add
push
adcl
shll
push
add
jne
aam
lcall
add
test
stos
dec
jge
add
add
jecxz
ja
adc
pop
ja
xor
call
lahf
xor
add
adc
hlt
add
add
jle
das
repz
enter
add
mov
dec
je
mov
add
xor
add
add
xchg
push
add
cvtps2pd
xorl
add
add
sbb
scas
push
inc
data16
or
jo
fdivrl
mov
jmp
jnp
push
mov
mov
inc
add
int3
push
add
mov
rolb
add
add
test
mov
into
stos
xor
add
xchg
sbb
mov
mov
and
rcrl
repz
cmp
add
inc
add
inc
popf
outsb
adc
sti
bound
mov
arpl
jb
inc
add
loopne
aaa
shll
add
add
pop
sbb
xchg
jo
imul
or
dec
jo
mov
sub
leave
ja
xlat
jmp
sub
frstor
add
rolb
icebp
out
decl
dec
ja
add
adc
and
add
xchg
add
mov
add
sub
xlat
jno
sbbl
xchg
add
add
push
int3
imul
add
add
aad
jmp
aam
sarl
test
cli
test
lcall
xor
sbb
sub
add
mov
ja
push
mov
vmwrite
das
stos
mov
test
sbb
xor
or
mov
mov
dec
testb
push
add
push
mov
stc
outsl
mov
int3
cmp
lea
mov
call
icebp
jecxz
add
sub
ljmp
outsl
les
inc
add
lahf
jae
push
add
lahf
stos
sbb
add
add
add
mov
add
ret
test
pop
lret
xchg
mov
push
sub
adc
mov
insl
add
and
add
add
cmp
cmp
add
jg
add
mov
repnz
add
add
add
imul
mov
cs
icebp
jae
add
xchg
cmp
mov
push
add
pop
shll
add
std
js
fisubrl
insb
ds
sbb
pop
sub
out
scas
push
add
mov
dec
scas
or
add
cmp
sbb
jp
push
add
and
mov
insb
sub
ljmp
add
adc
push
outsl
test
jb
in
adc
fwait
inc
xchg
and
mov
add
sub
xlat
or
add
shll
fidivs
xchg
add
cltd
and
cmpsb
add
add
add
add
add
adc
pop
iret
cmpsb
add
add
xchg
mov
icebp
frstor
add
outsb
scas
fisttps
add
movb
testb
in
xor
bound
mov
and
xchg
gs
fidivs
sbb
inc
add
imul
sub
add
fst
sub
add
repnz
loope
out
mov
add
fisubs
out
mov
and
mov
xchg
lods
loop
sub
cmp
add
test
jbe
fs
xor
xchg
addr16
or
xchg
pop
dec
icebp
and
mov
add
fdivrs
pop
dec
or
add
push
add
sub
inc
add
push
add
xchg
add
cmp
push
adc
mov
sti
sub
add
xchg
add
push
mov
add
mov
and
in
iret
hlt
add
xchg
cmp
fcomi
add
addr16
pop
in
into
cs
mov
mov
out
lods
aam
ljmp
in
stos
pop
cmp
add
je
cmpsb
add
mov
movsl
cli
lcall
or
mov
pushf
iret
jb
xor
das
add
add
mov
addl
add
mov
rolb
add
mov
fsubrl
aaa
nop
add
lods
inc
arpl
lods
xchg
add
jb
xchg
pop
fldcw
icebp
xchg
sub
adc
sbb
outsl
setg
or
push
mov
addb
ljmp
adc
enter
inc
add
xchg
add
push
lock
add
inc
add
add
xor
jmp
outsl
dec
lods
inc
fdivp
push
adc
sub
dec
nop
add
cmp
test
inc
add
lds
add
cmpl
rorl
je
xor
mov
pop
inc
addr16
xor
mov
mov
add
nop
add
add
add
mov
rolb
mov
jbe
mov
rcll
add
and
mov
add
inc
add
dec
push
add
decb
mov
pop
mov
test
add
pushf
mov
popa
int
or
jge
mov
add
cmc
push
lret
in
jp
mov
add
shl
add
add
and
mov
push
add
loopne
jo
push
fisttpll
add
fwait
mov
cmp
test
xlat
dec
xchg
mov
mov
adc
rorl
pop
or
mov
add
iret
mov
adc
movsl
or
push
add
cmp
sbb
dec
jnp
ret
daa
rolb
cmc
xor
lahf
dec
insl
flds
ret
xlat
adc
add
add
and
outsl
xchg
int3
adc
jge
mov
adc
pop
clc
jmp
add
add
xor
inc
add
add
sbb
add
scas
mov
scas
inc
pop
std
mov
or
ljmp
mov
lea
add
popf
push
jnp
icebp
push
add
jae
data16
add
or
lcall
stos
push
jg
stc
fiadds
mov
bswap
mov
xchg
fisttps
add
add
xchg
lret
dec
adc
mov
dec
iret
mov
rolb
mov
add
data16
mov
int3
insb
ficoml
pop
testb
movsl
jle
cmp
push
add
fcmovnb
fimuls
insl
push
mov
add
les
lcall
rolb
inc
add
out
sbb
add
add
in
add
xor
fnstenv
cwtl
sahf
jp
sub
bound
mov
xlat
or
add
xchg
add
pop
movsb
add
mov
xchg
push
add
add
jl
fsubr
hlt
add
iret
adc
push
sub
pop
out
inc
add
push
inc
add
mov
out
mov
mov
jmp
dec
out
fldcw
sahf
xor
int
mov
or
add
adc
out
push
rolb
cmp
inc
pop
int3
inc
push
pop
nop
add
add
ljmp
repnz
call
in
mov
push
js
lahf
xchg
mov
and
ret
pop
add
add
add
mov
add
gs
cmc
sahf
movsl
push
jb
jge
jnp
add
dec
jne
test
jb
adc
push
js
add
or
add
inc
pop
loope
test
pop
xor
xchg
add
xor
dec
icebp
jbe
out
scas
fwait
decl
add
adc
cmc
ret
sub
and
mov
popa
outsb
repnz
xor
stos
lret
and
sti
mov
cmpsb
add
mov
pop
dec
push
add
jne
add
testb
add
xchg
add
outsl
lcall
rolb
popa
xchg
rcll
add
mov
add
add
cmp
sbb
add
outsb
inc
and
mov
add
out
loop
add
inc
cmp
dec
lret
or
add
add
aam
fistpl
add
cmpsb
add
in
sub
pop
incb
add
stos
and
mov
push
icebp
std
pop
call
movb
jmp
cmp
inc
xor
jg
lea
pop
insl
mov
cmp
ds
cmpsb
add
push
add
cld
add
jb
lahf
fists
add
outsb
pop
xchg
add
xchg
mov
sbb
jle
aaa
insb
xchg
inc
add
add
push
pop
pushf
push
sub
sbb
add
andl
jno
add
push
add
out
enter
mov
lcall
testb
movsb
add
add
jae
add
insb
cmp
jnp
mov
mov
add
add
pop
hlt
add
enter
mov
cmp
dec
lods
shrd
push
add
add
mov
add
mov
out
jno
and
mov
mov
ja
sbb
int3
mov
icebp
jle
add
add
lods
xchg
dec
and
mov
and
add
mov
mov
cmpsb
add
add
mov
mov
add
ret
mov
iret
jns
add
dec
push
mov
dec
jmp
add
add
mov
dec
mov
add
in
jl
add
rol
mov
mov
mov
out
sarl
inc
add
add
push
icebp
sub
jo
xchg
les
add
loopne
sbb
sbb
nop
add
sbb
add
add
and
mov
addb
scas
pop
add
mov
ret
testb
xor
stc
nop
add
jge
test
sbb
inc
push
loopne
mov
bound
mov
mov
and
mov
adc
aam
pop
shr
xlat
add
mov
ljmp
add
jae
add
into
movsl
sbb
mov
xchg
sbb
rolb
bound
mov
leave
out
int3
loop
and
iret
xorl
add
fistps
inc
add
add
mov
add
and
adc
rcl
pop
addb
push
pushf
add
mov
jno
addr16
cld
in
add
mov
out
outsl
adc
mov
add
cmp
add
pushf
jns
mov
clc
stos
jo
out
inc
sub
xchg
dec
xchg
sub
lret
pop
les
je
mov
sbb
add
dec
jge
jg
add
dec
mov
test
jns
xor
mov
xchg
int
cmp
mov
add
addb
xor
notl
sbb
add
insb
imul
sub
cmp
inc
add
add
add
add
cs
inc
push
inc
pop
pop
mov
into
mov
std
add
add
add
xor
xchg
add
add
add
xor
inc
add
sbb
add
mov
add
add
into
xor
cld
push
jns
xor
add
jl
or
mov
add
fs
add
sbb
data16
lods
in
and
enter
lret
sub
sub
shrl
mov
lret
add
outsl
xor
adc
jmp
cli
cltd
fnstcw
add
data16
jno
jbe
inc
add
aas
sbb
sub
lahf
xlat
add
and
mov
add
add
add
test
sbb
imul
add
hlt
add
add
sbb
hlt
add
je
test
bound
mov
mov
pusha
add
sub
mov
mov
add
arpl
jne,pt
cmp
out
lret
and
mov
add
into
xchg
cltd
lahf
push
add
adc
add
add
call
add
mov
sub
rcrl
add
push
add
hlt
add
add
out
enter
les
mov
jno
cwtl
add
mov
add
dec
add
xchg
add
aam
cmpsb
add
scas
add
add
push
add
ljmp
add
add
dec
stc
jecxz
test
add
push
sub
enter
fmull
add
xor
add
mov
ret
mov
movb
add
dec
popa
ljmp
xor
das
add
add
mov
movl
push
add
mov
insl
add
icebp
xor
push
add
pop
rolb
add
out
into
adc
nop
add
test
jp
add
out
cmp
imul
add
inc
dec
mov
add
movb
in
cmp
mov
add
mov
icebp
mov
pop
xor
arpl
add
lock
sahf
aas
mov
jb
or
mov
ja
add
xchg
xor
xchg
ficoml
nop
add
ffree
int3
je
outsb
data16
xor
icebp
loopne
mov
int
outsb
adc
int3
rcrl
push
add
add
mov
add
mov
add
fldl
cmpsb
add
loop
cmp
sub
addr16
add
add
add
add
xchg
add
add
sbb
mov
and
add
rorl
movsl
and
add
jle
push
pop
mov
jbe
into
repz
jbe
and
push
inc
add
outsb
adc
scas
fdivs
mov
add
mov
jg
jno
add
adc
add
loope
fs
and
mov
pop
push
push
add
add
or
pop
ss
add
jno
pop
inc
add
loopne
and
add
dec
xchg
in
pushf
mov
fldenv
test
xchg
mov
and
pop
or
add
mov
ljmp
push
and
mov
cmpl
inc
test
rorl
add
arpl
xchg
push
add
mov
out
mov
dec
pop
add
das
rolb
and
pop
jl
dec
lcall
add
adc
add
add
add
sub
cwtl
dec
test
rolb
xchg
movsb
add
add
mov
out
jle
jae
jge
dec
ret
cmp
add
int
cmp
push
add
pop
cmpsb
add
jle
mov
add
movsl
sti
push
xor
dec
fdivr
imul
movsb
add
jp
add
mov
push
lret
shll
cli
add
xor
testb
jne
add
lock
jb
push
xchg
roll
mov
xchg
out
pop
mov
rorl
add
add
add
adc
mov
add
fdivr
push
add
mov
add
add
mov
add
roll
pop
lods
sub
adc
add
mov
mov
mov
imull
add
xchg
call
add
pusha
add
cmp
sbb
adc
cmp
add
fwait
mov
fisubl
add
mov
icebp
dec
sti
pushf
xor
mov
ror
bound
mov
adc
sub
add
cli
push
add
add
inc
add
add
insl
sbb
lret
sahf
leave
push
xor
and
fistpl
cmp
js
mov
rcr
daa
gs
adc
cmp
movsb
add
mov
pushf
rolb
int
lret
jne
inc
add
and
shll
jl
mov
dec
xchg
add
inc
popa
data16
js
adc
pop
shl
add
pop
icebp
aas
jl
xchg
xor
jp
icebp
jb
inc
sbb
add
imul
add
nop
add
add
andl
pop
jp
iret
movsl
xchg
repnz
jae
add
push
add
cmp
jmp
cmp
add
pop
jbe
inc
add
add
add
add
jns
cmp
and
out
in
insb
mov
add
jbe
cmp
push
add
xchg
aas
and
ret
lahf
add
mov
cmpsb
add
mov
leave
out
add
jecxz
pop
pop
icebp
push
inc
add
int
xor
scas
jbe
gs
lcall
mov
dec
push
lcall
xor
sbb
add
add
bound
mov
add
cmpsb
add
shll
xor
or
mov
add
add
add
add
xor
pop
fwait
lahf
mov
jecxz
push
rolb
add
mov
loope
or
out
insb
ss
xchg
in
pop
call
test
add
add
add
xchg
je
or
push
add
and
mov
jp
int
inc
add
push
fwait
dec
cmp
sub
add
sbb
insb
sub
ds
jnp
xlat
and
mov
add
mov
add
popa
adc
mov
inc
add
add
aas
enter
push
add
sbb
add
jl
test
add
or
subl
cmp
and
fstp
hlt
add
int3
gs
sbb
cmp
jbe
add
rolb
in
shll
int3
bound
mov
add
stc
mov
add
outsb
dec
int
mov
and
insl
jo
sbb
rolb
jge
or
jp
xor
aad
cmp
mov
push
add
push
add
test
sbb
std
push
add
inc
call
lods
ss
add
ret
mov
aam
fwait
xchg
hlt
add
sbbl
imul
mov
pop
jle
ficomps
ljmp
add
pushf
inc
push
add
add
add
add
xchg
jg
push
add
iret
rolb
push
push
add
add
inc
add
inc
add
int
ret
dec
cli
jne
mov
adc
xor
cmp
inc
add
add
pop
cmpsl
push
lret
add
scas
push
add
add
add
pop
xchg
pop
stc
xchg
add
add
loopne
addr16
pop
outsl
lock
push
pop
int
cmpsl
outsl
push
add
cmp
add
mov
mov
dec
cmpsb
add
xor
xchg
jmp
or
add
cli
adc
sbb
leave
ds
out
scas
jo
add
xlat
addb
add
test
xor
add
add
inc
add
fcmovnbe
sub
xchg
add
mov
xchg
mov
add
cwtl
mov
sbb
xchg
mov
add
add
cmpsl
movb
mov
movsb
add
fwait
hlt
add
in
movsb
add
mov
pushl
xchg
push
or
pop
cmpsb
add
add
lahf
adc
add
sbb
add
out
lock
cld
in
bound
mov
inc
jae
sbb
sbb
and
mov
add
push
cld
in
daa
lods
add
stos
jo
gs
fldt
loopne
test
cmp
add
xchg
add
pop
in
test
cmp
nop
add
add
add
add
pushf
decl
push
add
push
add
inc
add
outsl
adc
popa
fwait
mov
pop
pop
xchg
imul
fildll
cs
sub
lea
outsl
dec
outsb
jg
mov
inc
add
lcall
push
add
add
dec
add
add
add
fildll
mov
orl
add
mov
xor
add
jne
dec
push
push
add
ja
push
add
add
lea
les
push
add
adc
jb
inc
add
add
add
insl
dec
popf
fstl
lret
jmp
stc
add
mov
cmp
adc
add
add
mov
mov
pop
dec
rolb
push
push
add
pop
cs
add
cmc
mov
les
aam
scas
sub
mov
add
add
add
add
or
push
add
push
add
xchg
xchg
add
add
fwait
sbb
aad
add
mov
mov
add
add
outsb
or
mov
outsl
mov
sbb
mov
add
cmp
test
inc
add
mov
sub
daa
cmpsb
add
ret
mov
pop
mov
dec
rolb
jecxz
je
fsubrl
test
fstl
add
add
mov
setnp
lret
push
jge
adc
dec
sub
pop
push
add
dec
sbb
mov
jo
sbb
lea
fs
dec
pop
addb
add
int3
jns
lret
add
rolb
add
add
xchg
add
mov
xchg
cwtl
xchg
mov
sbb
add
mov
add
icebp
movsb
add
add
mov
shll
add
sbb
sub
mov
vunpckhps
adc
xchg
push
rolb
loop
out
xchg
add
add
in
movsl
jle
aaa
icebp
adc
add
out
push
hlt
add
fbld
mov
add
adc
sbb
add
inc
add
push
aaa
pop
std
jbe
pop
or
sbb
push
clc
lock
add
xchg
add
je
pop
addb
add
jge
add
mov
add
add
loop
ret
mov
mov
add
movsb
add
in
in
jg
les
cmp
inc
sti
mov
add
lret
push
mov
dec
pushf
jno
add
cs
pop
imul
add
mov
add
jae
jp
add
add
add
push
jnp
ret
ret
push
add
les
xor
movb
jae
add
ss
cli
outsb
imul
dec
or
add
push
add
hlt
add
mov
das
xchg
mov
pop
pop
mov
add
jle
lcall
or
ljmp
or
mov
xchg
or
pop
mov
fistpl
cld
hlt
add
aad
and
cmc
and
and
cmpsl
cld
and
imul
pop
dec
mov
mov
mov
cltd
push
add
iret
dec
aaa
xor
dec
popf
aaa
mov
and
mov
add
add
sub
insb
cld
stos
pop
lds
mov
pop
jge
cmp
add
add
xchg
into
xor
aad
dec
pop
add
add
sbb
mov
add
jle
test
jmp
mov
sbb
add
cmp
add
jb
xchg
cmp
cmp
add
lahf
enter
add
add
mov
stc
sub
add
std
inc
add
adc
mov
mov
push
add
add
add
add
int3
bound
mov
mov
gs
idiv
mov
add
lsl
sbb
jge
cmp
cmp
cld
fsts
add
pop
push
add
mov
inc
inc
mov
fidivrl
mov
mov
push
add
xchg
add
push
add
cmp
addb
add
or
jmp
cmp
out
stos
xchg
add
mov
push
add
add
dec
push
add
add
or
or
lock
jmp
jge
cmp
add
add
add
xchg
add
stos
fnsave
add
mov
sub
je
sub
sbb
data16
xor
jns
xchg
addr16
loopne
hlt
add
add
xor
into
add
mov
mov
add
push
add
add
inc
or
lea
jmp
add
pop
stc
mov
fnstcw
ds
dec
fnstenv
push
push
jo
mov
add
adc
pop
inc
add
xchg
add
fsubr
rcll
aam
cli
inc
add
mov
add
jae
jnp
add
mov
mov
pop
push
nop
add
add
add
or
cmp
add
flds
add
add
ljmp
add
int
add
loopne
pop
addb
loope
mov
add
push
add
stos
imul
add
add
dec
mov
jl
pop
insl
xor
ljmp
aaa
xor
cmc
push
fidivrl
jmp
adc
pop
xor
out
jno
cmp
fsub
sbb
jg
add
xlat
pop
sub
fs
mov
add
xor
cli
mov
mov
fnsave
and
add
mov
add
add
add
push
les
les
rcrl
jbe
clc
pop
adc
lock
add
inc
pop
cltd
xchg
pop
mov
addr16
call
aaa
or
aas
push
add
pop
cmp
mov
add
lret
imul
cli
or
xchg
or
fiaddl
ret
jb
xchg
arpl
mov
shrl
add
mov
add
add
aas
push
add
add
add
xchg
ljmp
jb
cmc
mov
sbb
data16
mov
sbb
add
and
mov
sub
push
add
aad
add
dec
sub
add
cmp
icebp
test
add
add
dec
mov
xchg
add
add
push
bound
mov
and
mov
mov
add
add
shrl
sub
subl
push
add
add
add
push
add
add
add
mov
je
mov
add
add
scas
pushf
test
clc
imul
andl
inc
nop
add
rolb
dec
imul
inc
add
mov
mov
jae
stos
add
notl
xor
push
jp
fildll
add
add
xor
les
dec
jecxz
rol
add
mov
push
xchg
je
add
dec
or
jg
add
add
add
push
add
adc
sbb
or
int3
xor
mov
imul
add
fwait
mov
mov
add
add
jne
cmp
lahf
cli
loope
xchg
add
mov
add
aas
jp
xor
add
add
jb
das
pusha
add
mov
add
pop
push
and
add
nop
add
add
sahf
lock
xchg
add
in
mov
addr16
add
loope
into
mov
aaa
or
mov
cmp
rolb
xor
pop
inc
add
fimull
fwait
add
add
lea
das
and
mov
test
clc
pop
gs
add
test
icebp
rolb
mov
ja
add
out
jecxz
dec
stc
fwait
cli
sub
add
inc
add
add
add
cmp
rcrl
xchg
mov
mov
add
insb
xchg
outsl
push
add
jb
jb
jg
iret
inc
add
ja
dec
jae
mov
xor
lret
mov
pop
sbb
rolb
push
jbe
outsl
or
loopne
mov
add
add
movb
add
repz
out
js
sub
out
xor
ret
add
inc
add
mov
addb
xchg
and
add
add
icebp
or
add
add
add
add
inc
add
add
in
scas
xor
add
add
aad
add
sub
add
rolb
popf
sub
enter
mov
outsl
loop
dec
stc
mov
rolb
xor
push
add
and
mov
in
call
dec
and
in
jge
add
pusha
add
and
pop
xchg
or
stos
ljmp
add
and
push
push
add
scas
repnz
add
add
les
cmpsl
sub
nop
add
push
jmp
fwait
jnp
inc
data16
stc
insb
in
push
add
mov
enter
stos
js
xor
fisubrs
stos
inc
add
add
fcmovnbe
add
add
add
mov
mov
add
or
in
xlat
cltd
sbb
add
lret
lcall
add
add
addr16
jge
add
pop
addl
add
jne
add
in
and
in
insl
int3
decb
int3
cmp
pop
jns
jns
push
add
mov
pop
movlps
lods
push
add
add
das
out
dec
addb
xchg
add
add
lahf
addl
and
push
les
adc
sbb
adc
jp
push
add
add
push
sbb
sbb
orl
jno
add
add
add
add
xor
mov
and
das
adc
insb
sub
and
add
out
xchg
repnz
pop
cmp
leave
mov
cmp
loop
add
outsl
add
imul
add
mov
pop
mov
cmc
pop
mov
js
xchg
add
and
mov
fcmovu
push
aas
repnz
add
add
sbb
mov
add
add
or
xor
push
sub
and
mov
iret
pushf
and
add
cmpsl
movb
add
cmp
bound
mov
xor
sub
or
mov
add
add
ret
xor
push
push
jg
add
cs
clc
inc
out
lcall
fmul
pop
xor
scas
addr16
add
add
adc
adc
add
xlat
sti
xchg
pop
or
jae
test
add
gs
add
add
testb
out
cmp
add
inc
mov
sbb
mov
int3
mov
in
repz
mov
lret
add
mov
movb
fcomps
mov
push
add
into
je
mov
sub
add
jmp
push
add
mov
daa
sbb
les
mov
xchg
add
imul
ret
xorl
add
mov
ret
push
add
add
or
add
cmp
adc
jo
outsl
inc
cmpsl
fidivl
test
xchg
data16
mov
pop
fldenv
sub
add
or
dec
mov
add
add
xlat
fucom
add
lock
add
dec
mov
push
movsb
add
adc
adc
pop
icebp
roll
adc
push
nop
add
add
lcall
cmp
add
add
push
add
add
data16
loope
cmp
or
cmp
or
aas
add
mov
add
ret
xchg
xlat
sub
add
add
add
in
daa
inc
add
repnz
add
adc
mov
rcl
add
in
rolb
imull
mov
leave
mov
mov
inc
pop
aad
lcall
push
add
mov
psrad
dec
call
adc
add
dec
mov
add
add
mov
jecxz
add
add
out
call
outsb
dec
test
jl
add
mov
mov
xchg
add
add
add
add
add
sub
lret
stos
mov
aaa
cli
add
mov
jg
mov
add
fstl
or
hlt
add
int3
xchg
mov
aam
outsb
mov
inc
testl
add
dec
addb
push
ljmp
or
mov
pop
jns
add
add
sbb
cltd
mov
ret
add
lahf
dec
xor
aas
pushf
lods
jb
or
xor
mov
outsl
dec
or
add
add
jecxz
mov
lds
jno
movsb
add
mov
pop
and
mov
jp
imul
pushf
loop
out
fldl
and
sbb
sub
test
add
popf
fidivrl
and
push
add
mov
add
out
mov
sahf
pop
enter
add
add
cmp
les
out
and
das
mov
pop
pusha
add
mov
cmp
and
mov
jbe
inc
add
push
movsl
loop
push
stos
sub
jg
lock
add
daa
lea
add
sbb
mov
add
dec
insb
inc
xchg
add
add
add
sbb
add
add
add
dec
dec
ficoml
add
mov
leave
in
aam
push
add
ja
and
addb
sbb
out
out
lods
cmp
mov
adc
cmpsb
add
sbb
add
addb
add
mov
jl
add
add
pop
les
mov
add
add
pop
push
add
add
add
add
add
inc
add
scas
rolb
add
inc
and
add
test
leave
and
mov
sarl
test
pop
out
cltd
mov
lahf
or
scas
sbb
subl
add
push
add
mov
movsb
add
jl
add
cmpsb
add
xchg
add
inc
add
add
inc
add
add
popf
mov
add
inc
add
popa
sub
mov
sbb
out
jle
adc
xchg
add
adc
loope
add
add
testb
add
mov
add
add
or
jl,pn
add
popa
xchg
ljmp
xchg
xor
ficoml
hlt
add
into
xchg
or
mov
pop
add
mov
sbb
into
or
mov
add
add
int3
cmpsb
add
add
rorl
test
add
rcl
add
add
sub
fmull
test
dec
push
add
add
add
sbb
add
lock
jnp
dec
imul
repz
cmpsb
add
add
add
cmp
imul
add
add
xchg
popf
test
jmp
mov
sbb
test
add
add
pop
in
mov
sub
sbb
dec
jo
add
and
mov
shll
sub
pop
add
mov
xor
sbb
pop
jecxz
xchg
add
mov
mov
andl
add
aaa
mov
adc
scas
cmp
dec
xor
insb
repz
lea
push
add
add
xchg
test
scas
lods
jp
push
add
add
xchg
fistpl
and
mov
add
add
xchg
add
mov
test
mov
out
xchg
add
add
push
enter
or
push
add
out
cmpsl
mov
and
clc
data16
xchg
add
add
cli
jae
xchg
mov
mov
in
jecxz
test
push
lahf
stos
xchg
in
xor
xchg
add
add
and
mov
pop
lret
mov
mov
add
add
test
cmp
sti
sbb
in
dec
les
dec
addb
sub
nop
add
push
add
push
insl
sub
add
or
mov
pushf
out
out
jb
mov
mov
out
xchg
add
mov
ret
clc
bound
mov
add
iret
mov
popf
cli
sub
inc
scas
jecxz
insl
dec
mov
add
jno
add
add
cltd
aas
inc
add
mov
out
enter
pop
lods
js
aad
cmp
mov
pop
shl
mov
fcoms
add
in
icebp
adc
outsl
ljmp
add
add
mov
jnp
shl
mov
in
xchg
jae
movb
mov
jns
cmp
cmp
dec
xchg
paddsb
adc
add
aas
cmp
sub
push
std
mov
cli
xchg
add
dec
mov
lods
push
add
sbb
mov
jno
and
add
or
jle
cwtl
test
add
cli
int3
addr16
mov
mov
push
add
or
add
cmp
fsubs
pop
add
add
add
mov
sbb
add
add
sbb
sbb
inc
add
and
add
addb
rolb
test
add
lods
inc
add
add
and
dec
lcall
push
add
jp
xchg
add
add
xchg
push
add
adc
ja
jae
add
xchg
ficomps
in
gs
xor
add
jg
ljmp
or
mov
int3
xchg
add
jno
xlat
mov
pause
add
scas
dec
ret
mov
add
add
cmp
gs
cmp
add
xchg
add
fs
sbb
scas
ret
lcall
repz
pop
loope
cld
testl
lods
pusha
add
dec
and
mov
inc
adc
lea
or
add
add
stos
out
int
push
add
jae
arpl
dec
sahf
outsl
sbb
inc
dec
fcompl
pop
cs
add
dec
push
dec
lock
mov
cli
add
mov
xlat
inc
fisubs
mov
push
dec
jge
das
sub
or
push
add
jecxz
add
test
sub
inc
ja
loopne
jbe
pop
aaa
jmp
add
mov
xchg
add
inc
aaa
mov
xchg
add
addb
add
push
add
je
pop
adc
ret
nop
add
sub
add
add
add
add
push
jg
cli
rolb
push
add
cmpsb
add
add
cmc
scas
movsb
add
into
jl
jnp
push
mov
sub
add
inc
jo
dec
inc
add
add
push
add
dec
cmp
inc
cmc
inc
data16
add
add
rolb
add
fxch
out
test
sbbl
cmp
add
mov
push
xor
cmc
cwtl
dec
jbe
mov
pop
jl
lods
imul
ds
add
fidivs
fmuls
shr
mov
lds
add
cld
pop
push
add
mov
sbb
jne
add
fwait
mov
mov
add
fldcw
out
push
add
movsb
add
add
jmp
jge
mov
and
mov
dec
cli
mov
js
dec
jo
sbb
add
push
add
add
mov
loope
add
mov
in
adc
add
movsb
add
sbb
mov
cli
sub
loop
dec
lcall
inc
add
mov
mov
jg
xor
add
out
jle
add
add
mov
sub
jb
pusha
add
mov
lea
add
push
mov
daa
push
add
dec
sahf
push
add
clc
pop
xchg
add
add
add
add
mov
cwtl
popa
popa
movsb
add
clc
call
out
or
push
arpl
add
xchg
add
cmpsl
pop
sub
jns
fmul
mov
insl
and
inc
sub
mov
fldl
sub
pop
and
mov
ljmp
loopne
sub
je
sahf
ret
mov
sub
add
sub
xchg
addb
add
test
mov
lods
icebp
jb
adcl
or
add
test
xchg
insl
pushf
xor
adc
jle
jnp
icebp
out
test
inc
lock
mov
xchg
pop
add
in
pop
mov
stos
mov
enter
mov
cwtl
repnz
mov
repnz
stos
lcall
add
fiaddl
add
hlt
add
daa
sti
cmpsb
add
mov
nop
add
repz
aas
pop
stc
dec
xchg
xor
add
add
add
xchg
sub
movb
push
add
lds
xor
js
or
aaa
mov
in
mov
xchg
pop
jns
add
add
add
mov
add
ret
mov
fimull
inc
add
mov
or
add
sub
add
rolb
mov
add
int
add
jns
add
mov
int3
pop
aas
and
mov
pop
xchg
sti
testb
mov
sub
add
sub
add
test
push
add
movsb
add
push
add
sbb
dec
lret
lcall
insb
test
adc
xchg
sbbl
pop
xchg
repnz
cmp
add
sbb
mov
ffree
add
gs
jl
add
cmp
frstor
xor
ret
adc
add
fmuls
xchg
cltd
dec
push
mov
add
mov
add
mov
clc
jbe
movsl
pop
add
add
add
lea
loope
inc
add
mov
push
mov
mov
pop
cwtl
fwait
xchg
adc
mov
add
imul
cmp
mov
add
add
mov
dec
xchg
add
in
cmc
inc
add
add
fsubs
sub
iret
pusha
add
lods
or
add
mov
add
cmp
jg
add
jbe
cmp
add
mov
pop
mov
push
add
mov
inc
add
dec
rolb
int
in
push
add
add
addl
inc
add
sbb
loope
cmp
jp
and
mov
lods
stos
lahf
mov
mov
rolb
sahf
push
mov
cmp
movb
xchg
dec
mov
add
aad
add
inc
or
or
add
jns
mov
or
cmp
jecxz
sub
lret
mov
testb
mov
std
jae
push
add
out
aaa
and
mov
add
jo
lahf
pop
add
movsl
xor
les
adc
add
dec
cmp
inc
add
add
sub
enter
icebp
lods
push
rolb
outsb
lcall
aad
mov
pop
int
inc
mov
add
xor
push
int
jno
jae
add
add
stos
clc
add
inc
add
addb
mov
add
mov
pusha
add
data16
jbe
add
sub
shll
pop
adc
inc
add
dec
push
add
and
add
hlt
add
cltd
push
add
mov
pop
push
add
outsb
inc
add
xchg
jg
inc
dec
mov
add
add
mov
inc
add
add
jne
and
adc
sahf
dec
pop
idiv
add
add
popa
into
enter
add
push
inc
xchg
add
sbb
imul
sbb
add
je
inc
add
inc
add
sub
mov
adc
stos
push
rorl
mov
add
fadds
pushf
push
lret
pop
add
mov
movsb
add
add
adc
jae
add
sbb
add
and
mov
cmpsl
jmp
aam
inc
add
rolb
subl
add
add
add
push
je
rolb
pop
add
mov
pop
mov
add
jbe
fs
pushf
mov
and
cmpsb
add
mov
mov
imul
mov
add
dec
sbb
inc
add
add
xor
mov
cs
add
add
mov
fldl
add
pop
mov
bound
mov
inc
stc
leave
xchg
repnz
add
add
jo
outsl
int
rcr
rolb
push
loopne
and
xor
jns
arpl
jbe
leave
scas
mov
add
add
add
inc
add
mov
mov
cmp
push
jnp
ljmp
mov
add
test
ffree
add
mov
xlat
mov
cmp
push
add
add
faddl
adc
icebp
add
cmpl
mov
cmp
add
testb
scas
jb
aaa
punpcklbw
mov
mov
mov
lods
sti
jle
dec
lds
add
add
jp
or
aaa
aam
or
xchg
add
fcoml
add
les
ss
xor
pop
int
pop
add
push
mov
call
mov
add
fnsave
xor
jge
in
jl
inc
add
leave
stos
sti
mov
das
inc
add
shrl
push
add
add
test
lret
dec
outsb
xorl
inc
pop
xlat
mov
mov
jp
push
int
add
add
push
and
mov
push
fists
add
add
add
outsb
adc
popf
into
sub
push
mov
jns
add
jb
rolb
add
stos
push
add
or
mov
or
pop
insb
sahf
push
pop
cmp
mov
xchg
mov
lcall
add
add
inc
add
mov
mov
out
adc
movb
icebp
lret
popa
mov
test
into
lret
add
cmpl
and
mov
cs
sub
mov
jp
add
ret
xchg
add
pop
lcall
add
add
mov
add
gs
xor
push
add
mov
int
jns
mov
add
add
call
mov
xor
xor
in
fists
lods
xor
sahf
jnp
xchg
cltd
and
les
and
mov
pushf
and
movb
insb
pop
push
loopne
scas
push
add
adc
push
jne
jle
add
add
mov
add
inc
add
and
mov
add
add
dec
xor
aaa
mov
add
push
xor
inc
jno
psllq
mov
add
cmp
push
sub
adc
stos
cltd
mov
inc
ljmp
jae
testb
out
add
sub
add
in
add
jnp
pop
pop
lahf
jl
scas
test
rolb
cmp
dec
xchg
in
inc
add
add
add
aad
out
popa
xchg
add
lock
mov
add
aad
add
movsl
mov
jne
mov
les
push
add
mov
in
dec
xor
les
pop
lret
sbb
add
dec
mov
sub
mov
cmpsl
fstpl
mov
pushl
add
add
mov
or
fdivs
rolb
sbb
cltd
in
imul
gs
dec
adcl
jge
xchg
gs
xchg
dec
mov
lcall
loope
gs
pop
dec
mov
add
mov
scas
nop
add
add
repz
add
leave
inc
inc
es
fcomps
add
and
add
fldl
mov
mov
js
add
add
rolb
outsb
imul
add
mov
and
imul
jg
rolb
push
bound
mov
test
popf
cld
movb
push
add
inc
xchg
das
cmpsl
lret
sub
add
and
mov
test
add
add
mov
bound
mov
fwait
push
add
add
mov
bts
or
or
dec
lcall
sub
jg
add
or
inc
add
testb
mov
add
mov
sub
ret
addb
add
enter
mov
aad
or
lods
pushf
push
fdivs
fstpl
dec
lret
dec
lahf
dec
add
add
adc
add
push
add
mov
lock
add
mov
cmp
pop
pusha
add
test
or
lods
ja
lret
add
add
add
xor
adc
lret
dec
popa
adc
inc
mov
mov
jb
cmp
cmpsl
cmp
add
add
shll
and
push
jp
add
mov
jmp
mov
stos
in
scas
and
add
bound
mov
add
xchg
addr16
fists
mov
outsl
xor
loop
lock
icebp
lret
fs
and
icebp
push
add
lock
add
jne
enter
dec
add
lock
cwtl
movsl
mov
fcoml
addr16
sbb
sub
jnp
add
add
ret
or
add
sahf
xor
out
push
iret
fidivrs
add
loop
add
out
fdivr
cmp
mov
jno
add
pop
mov
jg
rolb
testb
sahf
mov
mov
xchg
add
add
adc
ret
enter
int3
scas
imul
add
add
and
pop
xchg
add
add
push
xor
repz
xchg
sub
mov
push
push
scas
push
add
mov
pop
sbb
sub
lahf
add
pop
mov
push
mov
cmc
mov
xchg
sbb
fistps
add
and
mov
rolb
sahf
sub
dec
jnp
inc
xchg
adc
pop
mov
bound
mov
add
add
and
add
push
push
jns
mov
add
add
les
testl
add
xchg
add
add
mov
in
xchg
add
add
jne
push
adc
dec
dec
lods
aad
fs
add
je
xor
xchg
push
add
mov
pop
pop
xor
and
popf
insl
sbb
add
xchg
add
add
iret
fldt
push
sbb
jg
shr
or
mov
es
sbb
add
iret
adc
stos
fstps
enter
test
lods
ds
add
add
add
add
out
inc
add
add
xchg
leave
int
add
add
add
sbb
add
and
inc
jmp
mov
arpl
add
jp
add
mov
fsubl
add
jnp
dec
xchg
mov
xor
cld
and
mov
into
pop
ljmp
jg
add
push
add
add
pop
xor
add
out
push
push
aam
loop
add
mov
add
icebp
lods
mov
popa
loopne
push
sbb
add
add
sbb
push
subl
mov
in
into
int3
add
icebp
nop
add
mov
push
add
add
mov
in
pop
and
mov
add
add
lahf
test
in
jo
or
nop
add
or
mov
push
add
add
inc
add
pop
add
scas
addr16
add
add
clc
scas
add
and
mov
adc
mov
lret
test
mov
push
add
xchg
clc
add
pop
rolb
mov
add
out
add
sbb
add
add
inc
add
add
mov
add
add
add
dec
xchg
inc
add
and
mov
add
jg
das
mov
scas
rolb
add
jb
bound
mov
xchg
clc
sub
outsb
jb
or
aam
xchg
sub
out
pop
or
push
add
mov
add
in
inc
add
addb
jge
add
idivl
in
into
les
loope
cmc
push
loop
mov
mov
mov
add
adc
insl
inc
add
adc
iret
dec
inc
add
or
cwtl
testb
inc
daa
iret
fsubrs
mov
add
xchg
mov
adc
mov
bound
mov
jne
inc
sbb
add
mov
jb
dec
int3
sbb
ds
popf
rolb
sbb
inc
adc
mov
adc
movb
addr16
mov
add
add
lods
jnp
jecxz
push
add
fucom
out
push
add
jl
jne
mov
jae
add
xlat
push
add
jge
cld
lods
push
push
add
xor
lcall
or
cmp
shll
pusha
add
lods
addb
add
or
scas
stos
scas
mov
fidivrl
icebp
mov
dec
out
dec
and
xchg
add
xor
mov
mov
sbb
dec
stc
std
in
rolb
mov
pop
insl
push
add
and
loopne
xchg
add
add
in
mov
mov
frstor
jb
data16
cwtl
testb
push
cmp
outsl
add
lods
cltd
add
mov
pop
sbb
add
add
mov
pop
clc
push
and
adc
push
add
clc
jb
xor
mov
cmp
or
rolb
pop
dec
xchg
add
add
mov
add
push
add
add
aad
call
add
xlat
jbe
rolb
ds
inc
add
push
xor
cmp
add
mov
or
add
add
add
test
mov
mov
call
add
clc
mov
arpl
lret
sahf
mov
push
jle
daa
ret
add
scas
sub
mov
stos
fldcw
clc
inc
add
jmp
pop
rolb
test
mov
add
bound
mov
pop
add
arpl
lods
call
pop
mov
jge
mov
add
test
add
addb
lret
add
mov
sbb
push
ljmp
jb
jne
lret
dec
cmpsb
add
xchg
push
fwait
dec
nop
add
pop
adc
out
sbb
idivl
add
add
xchg
jle
xor
daa
inc
add
mov
lds
pop
sbb
mov
leave
leave
pop
jge
xor
movaps
add
pop
test
inc
cmp
inc
lahf
add
test
int3
jmp
inc
gs
mov
ficoml
mov
pop
push
add
add
xor
je
push
lock
add
repnz
inc
add
stos
adc
add
mov
shl
sarl
or
push
mov
add
ret
in
mov
jle
add
dec
jae
test
xlat
in
cltd
pop
fsubrs
add
mov
les
pop
in
stos
ljmp
add
dec
add
inc
add
dec
cmp
add
lcall
test
out
test
cltd
pop
dec
or
dec
jae
repz
add
insl
push
add
add
add
cwtl
sbb
and
sti
fwait
inc
add
pusha
add
lea
sbb
ret
out
out
pop
and
add
mov
add
push
add
inc
jo
scas
int3
lret
xor
aaa
rolb
loope
addr16
jp
repnz
dec
dec
daa
lods
push
jecxz
fldt
fiadds
lock
add
xor
mov
add
add
cltd
ss
mov
dec
jns
add
push
mov
jmp
cmp
push
add
push
jnp,pn
gs
ret
jmp
lock
adc
das
data16
icebp
sub
gs
xchg
add
lea
mov
arpl
sub
lds
imul
andl
add
mov
mov
lds
ja
aam
stos
xchg
add
test
in
add
mov
dec
scas
adc
add
add
xor
movb
add
add
mov
add
push
add
xchg
mov
in
dec
pop
add
or
sbb
jmp
and
pop
scas
aaa
xchg
jnp
add
jbe
ljmp
mov
jp
sub
icebp
dec
scas
mov
sti
push
add
push
push
movsb
add
roll
mov
add
mov
add
xchg
add
mov
lods
dec
cmp
insl
xchg
push
add
add
mov
add
mov
add
or
and
ret
popa
dec
lods
or
add
inc
xorl
ja
add
add
add
inc
add
add
gs
loop
call
add
jns
sub
daa
ficoms
fbstp
imul
repz
add
data16
test
and
mov
fwait
movsl
sub
clc
stos
std
push
add
xchg
add
adc
cmpsb
add
mov
scas
cmp
cli
xchg
add
mov
add
mov
sub
add
add
cmc
aad
xor
add
scas
or
add
cmp
add
add
hlt
add
mov
add
stos
or
jae
xor
lods
jg
or
add
jb
out
add
add
add
mov
or
lods
jge
add
or
inc
add
mov
add
fimull
out
add
add
mov
ja
add
xor
push
jnp
jle
xchg
cmc
scas
sbb
stos
mov
add
add
add
jae
ss
fstpt
inc
add
adc
pop
or
pop
mov
push
add
sbb
mov
push
add
sbb
add
add
pusha
add
xor
pop
ret
add
mov
mov
add
pop
gs
out
add
and
mov
or
pusha
add
pop
idivl
rolb
adc
fsubrl
aad
add
add
add
sbb
add
ret
add
xor
adc
aad
mov
xchg
mov
add
rolb
pop
and
mov
xchg
push
add
add
mov
dec
arpl
jbe
sub
es
add
xor
dec
push
add
aad
add
add
pop
imul
pusha
add
sbb
sbb
test
add
inc
add
add
add
inc
jle
lret
idiv
nop
add
add
add
inc
add
enter
int
dec
das
loop
xchg
add
add
aad
and
mov
cmc
push
fdivrs
xchg
and
subl
add
int3
orl
add
add
jns
inc
mov
add
adc
cmp
mov
add
ds
add
clc
pop
push
add
mov
lods
out
push
testb
add
mov
stos
inc
add
add
add
inc
mov
add
scas
int3
movb
fisubs
sbb
adc
mov
add
js
add
fsqrt
add
add
add
and
mov
ss
add
add
testb
imul
add
jae
jg
push
add
push
stos
pop
sbbl
add
aam
pop
sub
add
jg
add
jecxz
in
mov
xchg
mov
arpl
add
add
mov
das
jns
add
jge
jnp
adc
lcall
push
add
or
int3
rolb
ret
add
sbb
xor
and
clc
and
decl
add
xlat
cmp
or
add
dec
or
cmpsl
xor
fiaddl
push
inc
outsb
cs
add
mov
mov
std
xchg
addr16
mov
mov
sahf
sahf
ds
push
mov
fldenv
addr16
add
add
iret
mov
out
repz
test
add
mov
nopl
add
rcr
stos
push
add
add
fimuls
sub
mov
add
add
mov
nop
add
add
add
loop
sbb
add
stos
fisttpl
fnstcw
ljmp
out
pop
fwait
mov
inc
pop
xchg
mov
jo
cwtl
pushf
addr16
inc
add
fwait
aam
rolb
or
mov
add
call
movsl
jecxz
js
xchg
add
and
addr16
xchg
add
adc
in
aaa
xor
into
jns
mov
push
lods
fnstcw
inc
aam
lods
push
cmpsb
add
xchg
add
rolb
push
add
mov
add
add
and
movsb
add
jecxz
cmp
add
add
jg
inc
add
cli
repz
and
mov
add
add
mov
add
loope
adc
push
add
inc
fadd
add
lret
inc
add
add
inc
add
add
or
adc
dec
inc
pop
cmpsb
add
mov
sub
sbb
lods
pushf
push
dec
lea
or
bound
mov
stos
cwtl
and
mov
test
ljmp
cld
mov
jo
push
add
cltd
mov
add
push
add
add
or
add
sbb
dec
enter
add
les
sub
add
ret
data16
add
data16
mov
push
add
add
cmpsb
add
pop
js
sub
add
add
out
sahf
and
sbb
stos
cs
pushl
and
mov
xchg
pop
stc
push
add
lock
rolb
mov
sti
icebp
sbb
jecxz
mov
pusha
add
into
sahf
out
pop
sub
add
int
add
mov
mov
jg
fsts
inc
xchg
mov
push
add
pop
aas
daa
lcall
mov
add
sbb
fnstenv
mov
loopne
pandn
icebp
ret
dec
pusha
add
sarl
mov
icebp
jno
add
inc
add
jle
mov
jmp
les
push
push
add
gs
bsr
lea
mov
xor
rolb
int
or
lret
mov
rolb
pop
stc
add
add
rcll
add
jge
add
mov
ret
and
stos
and
add
ja
and
mov
lcall
js
dec
pop
inc
add
ja
add
add
data16
into
cmpsl
negl
fbstp
scas
push
ljmp
add
add
add
dec
rolb
mov
mov
mov
leave
test
add
pop
clc
sub
pop
pop
mov
inc
add
lret
mov
cltd
das
std
pop
test
jge
addl
mov
cltd
ja
pop
aam
xor
or
xor
out
pusha
add
mov
xchg
add
add
frstor
mov
push
add
sbb
inc
or
movl
test
add
xchg
add
je
mov
movsb
add
mov
xor
dec
adc
mov
dec
idiv
sbb
push
add
test
add
add
lcall
inc
add
call
and
xor
add
mov
inc
imul
inc
xchg
loopne
mov
mov
cmc
push
jns
add
and
dec
out
xor
testb
sub
jecxz
popf
sbb
call
repz
add
add
mov
lret
xorl
push
add
add
sub
orl
call
flds
mov
mull
ret
ret
and
add
and
ss
leave
or
daa
or
add
xor
fcmove
aam
hlt
add
add
testb
add
xor
mov
stos
jb
mov
popf
mov
add
test
mov
jecxz
add
add
or
popa
pop
addb
inc
add
mov
cmp
xchg
jecxz
out
xor
stc
out
cli
xor
in
inc
add
mov
lret
add
xchg
add
mov
add
add
add
jae
xor
lds
add
cld
mov
add
add
adc
in
scas
jge
push
add
testb
add
add
add
xor
pop
mov
stos
iret
fdivrl
xchg
iret
jp
or
in
sbb
mov
dec
xlat
outsb
nop
add
xlat
sbb
dec
cwtl
sbb
add
bswap
sbb
add
add
add
add
sbb
inc
call
mov
aaa
mov
cmp
add
fimull
mov
xchg
add
fcoml
mov
add
mov
gs
push
sbb
add
in
scas
ret
xlat
cwtl
pop
cmp
jmp
inc
mov
stc
xchg
inc
add
lahf
cmp
mov
test
fiadds
mov
ret
mov
and
push
xchg
add
cmp
xchg
adc
mov
lock
out
xor
and
cmp
add
jecxz
sbb
lret
lock
add
aad
test
mov
loopne
jae
inc
add
add
arpl
add
push
cltd
stos
lahf
dec
or
or
mov
cld
in
aam
xchg
loopne
inc
sbb
mov
bound
mov
add
mov
inc
add
xchg
add
subl
rcrl
push
push
outsl
nop
add
push
push
jp
ljmp
adc
lret
std
movsl
jg
aad
push
add
sahf
mov
mov
adc
popf
hlt
add
add
add
add
add
mov
lcall
test
sub
testb
or
in
add
scas
add
mov
das
lods
fimull
iret
xchg
mov
out
xchg
add
mov
add
imul
pop
in
enter
push
add
add
add
add
popa
aas
ficomps
loopne
testb
getsec
fdivrl
scas
test
inc
add
dec
ret
add
mov
dec
imul
push
xlat
rcll
add
sahf
add
or
add
add
add
add
add
out
addb
add
dec
inc
add
jmp
adc
ss
rcrl
cli
iret
mov
xchg
jbe
mov
rolb
adc
mov
mov
pop
aas
jbe
cmpl
sbb
mov
outsl
out
clc
mov
mov
in
in
mov
mov
xor
add
add
add
mov
adc
lahf
mov
jge
push
add
inc
add
cmc
aas
mov
xor
loopne
enter
stos
mov
aas
subl
out
mov
or
push
add
or
add
xor
xchg
xor
repz
mov
add
fcomps
mov
pop
dec
sub
add
ficompl
orl
add
aas
aaa
add
xchg
add
and
dec
push
xchg
or
add
add
cmp
add
mov
add
sub
sub
pop
push
cld
aaa
shll
rcll
push
add
jae
dec
mov
sbb
add
repz
add
xchg
add
jle
add
sti
stc
lods
pop
pop
ds
data16
add
mov
mov
add
fidivrl
and
mov
xlat
pop
jecxz
mov
jo
fisubl
and
and
mov
push
lret
data16
xchg
add
xor
dec
add
add
test
data16
add
out
lret
mov
pop
or
add
add
fwait
sub
loop
mov
and
mov
add
arpl
add
rolb
fstpl
aaa
enter
pop
push
add
inc
add
add
lcall
add
add
pop
stc
fdivr
shll
in
pop
jecxz
ficomps
cmc
push
int3
bound
mov
ljmp
into
sub
les
bound
mov
add
stos
call
sbb
add
seto
ljmp
add
lods
jg
jg
ja
fsts
add
scas
mov
sbb
loope
mov
pop
outsl
dec
jl
inc
add
addb
dec
sahf
testb
add
pop
adc
add
mov
dec
repz
xchg
repnz
sub
add
add
test
dec
xchg
in
in
sbb
push
pop
js
add
pop
stos
rolb
loop
bound
mov
add
lock
aam
cmp
incb
ljmp
lds
out
and
mov
popa
mov
pop
mov
add
add
add
dec
cli
ud1
lahf
jmp
add
dec
sbb
xor
add
stc
mov
add
test
cmc
add
mov
fwait
addr16
and
push
add
add
outsl
int
sbb
add
xor
cs
sbb
add
aam
mov
fcmovnbe
add
add
push
add
pushf
jg
das
in
sti
fsubrl
add
add
and
mov
lock
add
mov
inc
fidivrs
add
add
cld
lods
and
inc
aad
aas
test
addb
mov
rolb
in
sub
add
ret
dec
inc
insb
push
icebp
jp
add
shll
pop
fimuls
repnz
add
cmpsb
add
pop
xor
rolb
mov
cli
in
aaa
lock
mov
inc
add
lods
into
or
add
movb
add
out
push
iret
loope
sub
add
jnp
mov
xchg
mov
and
rolb
jb
mov
out
daa
mov
lods
fstpt
lods
inc
add
push
daa
into
bound
mov
adc
cmc
loope
jae
add
rcll
push
adc
insb
add
mov
loopne
and
mov
add
inc
out
inc
inc
add
das
je
cmc
sbb
add
arpl
or
icebp
in
add
sub
repnz
add
int3
mov
add
or
mov
xorl
add
clc
xor
add
mov
imul
adc
js
aaa
out
into
loope
aam
inc
cld
outsb
or
test
mov
cmovbe
pop
inc
add
in
xchg
outsl
mov
nop
add
add
mov
ficomps
mov
das
stos
adc
inc
cli
jne
sub
jmp
xor
add
xor
sbb
outsl
xchg
lret
add
add
cmpl
add
aaa
ret
inc
add
mov
mov
push
sbb
mov
push
add
das
dec
jle
test
add
repnz
add
xlat
adc
xor
repnz
pop
jne
jl
add
xorl
mov
push
add
ds
adc
mov
es
and
pop
cwtl
jno
adc
rolb
shl
in
add
shll
inc
add
bound
mov
push
add
sbb
rolb
addb
add
enter
push
add
xor
aam
and
jbe
and
fucom
mov
add
sbb
mov
mov
rolb
mov
add
jnp
std
rolb
mov
pop
test
scas
xchg
cmpsb
add
lods
movsl
out
stos
outsb
pop
add
add
jecxz
add
xor
mov
loop
mov
jp
add
pop
loop
sbb
add
hlt
add
push
add
lret
addl
repnz
xchg
add
add
add
inc
add
add
mov
fucomi
into
daa
mov
mov
mov
repnz
pushf
aaa
test
sub
int3
mov
pop
testb
and
mov
fcmovu
iret
mov
cmp
addb
dec
popf
out
sub
cmpsl
int
rcr
inc
add
mov
xchg
add
cwtl
shll
movsl
dec
dec
mov
mov
sbb
jnp
cmp
push
mov
add
mov
add
arpl
in
test
add
xchg
pop
stos
sbb
movsl
enter
add
addr16
dec
sbb
orl
in
dec
and
ljmp
xor
mov
add
add
mov
add
js
lret
mov
add
dec
pop
sub
mov
add
pop
push
mov
addb
icebp
outsb
sbb
push
pop
mov
pop
and
adc
add
testb
inc
add
test
or
je
data16
mov
aam
adc
out
add
insb
mov
add
sbb
mov
movsb
add
cwtl
mov
in
stc
leave
fisubs
add
xchg
scas
mov
int
movsb
add
mov
inc
add
mov
add
ss
cld
add
mov
add
bound
mov
xlat
daa
add
jmp
jecxz
aam
lods
pop
insl
mov
add
mov
add
sub
sbb
sbb
mov
add
add
mov
sbb
rolb
cli
or
and
add
jecxz
pop
xor
xchg
bound
mov
jp
out
mov
arpl
or
jo
add
dec
adc
jmp
decb
jne
cmp
jne
in
and
adc
rcll
inc
add
add
sub
loope
sub
mov
pop
loopne
movsb
add
scas
lea
in
mov
sarl
je
mov
add
push
orl
jge
outsl
mov
rolb
lods
jae
mov
add
sub
add
rolb
cmpsl
xlat
inc
add
sahf
mov
cmp
test
shll
insl
inc
add
dec
push
add
add
cmc
dec
sti
xlat
or
add
add
aaa
das
rcll
push
xor
sbb
mov
add
add
in
push
add
in
loop
sbb
rolb
movsb
add
cltd
pop
push
add
add
mov
add
sbb
push
fists
pop
mov
mov
add
sti
loop
les
pop
pop
and
push
add
fisubl
imul
out
push
pop
mov
bound
mov
shrl
mov
loope
sub
mov
mov
push
add
mov
adc
add
dec
mov
cltd
gs
add
cmc
inc
add
sbb
into
pop
int
loope,pt
sbb
mov
and
add
add
lods
in
xchg
add
stos
out
jbe
jmp
jle
repz
add
add
fldenv
nop
add
add
sbb
outsl
jbe
sub
sub
repnz
out
add
sub
xchg
cmp
loope
mov
adc
pop
adc
mov
xor
xchg
ljmp
add
adc
add
add
add
add
push
and
loop
cmp
bound
mov
pop
cmp
add
dec
sbb
and
add
pop
cmp
stos
outsb
int
fistpll
sub
inc
add
add
mov
or
mov
jmp
dec
or
xchg
add
mov
add
inc
add
data16
sub
hlt
add
and
mov
ds
jb
adc
adc
add
and
movb
icebp
jge
fidivrs
add
add
hlt
add
xor
mov
add
sub
cmp
xor
or
in
ja
mov
popf
adc
mov
and
outsl
mov
cwtl
sbb
ds
add
inc
xor
sub
and
mov
ljmp
repz
sarl
add
xlat
daa
cli
cmc
dec
mov
cmovg
popa
jle
and
add
rolb
lret
out
sub
jg
dec
ja,pt
add
lock
mov
pop
stos
xor
dec
xor
lea
lods
sbb
movsb
add
push
xchg
in
rcrl
or
add
add
jae
add
add
push
add
dec
cmc
jns
push
pop
add
push
push
add
xlat
and
mov
sub
xorl
and
and
mov
ret
test
outsb
xchg
sti
add
sbb
add
cmp
push
add
mov
xchg
inc
add
inc
add
add
jg
lock
incl
ficompl
xor
mov
testb
mov
dec
lcall
stc
mov
repnz
out
pop
lock
fsts
add
add
add
cltd
outsl
add
mov
cmpsl
and
xchg
add
subl
add
add
sub
add
mov
das
cmp
add
in
fnstsw
inc
add
lea
add
int3
mov
add
mov
mov
and
cmp
add
stos
data16
cmp
or
add
add
add
mov
add
int3
lods
adc
clc
movsl
sub
adc
dec
jge
pop
ret
rolb
in
pop
mov
cmp
mov
inc
dec
jg
add
add
jb
mov
inc
add
or
add
and
xchg
add
mov
icebp
cmc
leave
mov
ret
lds
add
or
fildll
movb
add
pop
ds
push
popf
push
rolb
cmp
sbb
and
mov
push
mov
add
into
jge
add
add
cld
jno
pusha
add
add
rolb
fsubr
rolb
add
sub
jmp
into
fsubrl
push
add
inc
add
add
cmp
mov
sbb
add
fldt
mov
mov
mov
or
dec
enter
add
push
pop
add
jl
cltd
popa
xchg
mov
arpl
les
add
push
cli
mov
add
adc
xor
in
sub
xchg
add
sbb
cltd
add
add
cmc
repnz
jle
xor
cwtl
aam
pop
xlat
jb
cmp
push
add
add
les
shll
add
cmp
add
sbb
jg
add
jp
arpl
in
pop
mov
add
add
inc
pop
cmp
stos
call
push
dec
into
push
mov
push
add
add
push
add
add
cwtl
dec
push
add
add
add
add
add
in
mov
mov
loopne
mov
addb
add
mov
adc
sbb
aaa
sahf
jne
adc
mov
lahf
add
and
mov
testb
xlat
add
imul
add
rolb
test
in
cmp
add
int3
cmpsb
add
arpl
add
addb
dec
xor
les
addb
arpl
add
daa
or
in
mov
xchg
js
add
add
and
mov
rolb
cmpl
mov
add
loopne
pusha
add
add
mov
les
lods
mov
movsb
add
movsb
add
int3
pop
adc
testb
divl
mov
add
sbbl
rolb
jp
push
into
sub
push
add
sub
mov
pop
jae
xor
sbb
add
mov
push
jp
add
add
out
inc
pop
fstl
add
jnp
mov
mov
dec
push
add
popa
adc
cmpsb
add
mov
fs
mov
mov
roll
pop
xchg
and
int3
mov
or
xchg
add
scas
rolb
jo
out
cmc
xor
scas
in
push
in
dec
aaa
jg
cwtl
sbb
add
xor
mov
bound
mov
add
enter
add
fwait
popa
data16
cmc
les
stos
xlat
ljmp
clc
shr
sub
or
and
mov
mov
mov
cmpsl
push
stos
adc
or
push
add
cltd
xchg
add
stos
leave
and
add
add
scas
inc
add
sub
ds
lahf
inc
add
add
pop
inc
add
arpl
dec
sub
mov
insb
fisttpll
add
adc
stos
mov
scas
scas
cmp
add
rorl
nop
add
call
add
add
pop
lret
addb
add
or
xor
add
add
push
mov
repnz
fnstenv
pushf
out
add
inc
add
add
fwait
jecxz
add
mov
ss
scas
mov
add
pusha
add
push
add
imul
repz
ret
xor
js
add
call
out
adc
aad
es
fsubr
into
mov
out
fcmove
fwait
inc
add
pop
movsl
cmp
jmp
dec
enter
push
add
inc
add
loope
push
add
add
les
pop
mov
pop
cmpsl
xlat
inc
add
and
cmc
test
or
icebp
daa
pop
xlat
sbb
add
enter
lcall
nop
add
add
sbb
int
push
sbb
aam
push
add
outsl
xlat
xor
xchg
outsl
jl
insl
mov
push
add
fwait
xchg
add
cld
xchg
xchg
add
add
add
add
fwait
jns
add
cmp
xor
xchg
add
jo
fstl
add
int3
and
mov
and
mov
add
add
add
add
scas
cmpsl
testl
add
mov
adc
repz
mov
mov
mov
cmpsb
add
imul
add
lods
jl
mov
add
and
sbb
cmpsl
add
mov
add
mov
dec
push
das
cmp
pop
leave
rolb
sbb
xchg
adc
sbb
lcall
add
data16
push
add
imul
lret
or
in
xchg
in
testb
add
mov
add
mov
and
add
add
cmp
add
call
aam
push
add
ds
add
dec
ja
sbb
add
add
add
sbb
cmpsl
adc
dec
loopne
mov
sarl
jne
fwait
inc
add
mov
push
faddl
pushf
mov
inc
jge
mov
add
in
daa
add
mov
gs
add
pop
mov
sbb
ret
or
add
jg
add
repz
add
stos
jl
jae
pop
leave
testb
in
jns
jmp
insb
nop
add
cs
pop
push
add
sbb
jl
popa
jp
and
mov
iret
je
je
jnp
fwait
testb
push
add
cmp
add
add
cmp
pop
sbb
add
add
loop
test
cmp
mov
xor
shll
popf
pop
mov
pop
fsubs
xorl
add
sub
cmp
add
mov
clc
xchg
add
pop
pusha
add
add
jb
push
add
cmp
add
mov
stos
xchg
add
adc
xor
add
add
add
imull
add
mov
scas
in
mov
xchg
sub
pop
inc
add
repnz
faddl
add
add
cld
sub
add
adc
scas
or
out
loop
push
sub
std
and
add
jmp
pop
lahf
mov
xchg
dec
je
sahf
popf
dec
in
sahf
movsb
add
lods
dec
sub
dec
push
mov
push
add
fiaddl
mov
add
arpl
mov
add
xchg
mov
add
add
add
add
add
mov
add
mov
xor
fmuls
add
add
mov
imul
daa
xlat
sub
add
add
add
jae
add
pop
addb
push
repz
loopne
out
stos
fnstenv
add
add
add
mov
fisttpl
aam
lods
insb
push
add
pop
pop
ret
pop
jno
add
add
add
addb
xchg
add
add
xchg
add
push
add
cmpsl
pop
out
iret
fwait
call
adc
stos
out
xchg
ret
out
roll
bound
mov
mov
add
xchg
lret
sub
lcall
add
rolb
addb
rcll
mov
and
push
xchg
jne
ret
jmp
add
mov
add
sbb
add
mov
or
divl
mov
movsb
add
dec
mov
test
int3
push
mov
imul
adc
add
or
cmp
testb
push
add
inc
or
add
jnp
jmp
push
cwtl
fcomi
rcll
stc
cmp
mov
test
add
adc
jbe
xor
add
cmp
mov
jl
add
stc
sbb
cmp
jmp
or
addb
add
cmp
sub
cmpsl
mov
push
out
lret
cli
lret
mov
scas
int
int
inc
add
dec
and
mov
add
add
sub
and
add
pop
sub
aam
faddl
pop
inc
xchg
add
addb
fadd
add
add
and
out
and
mov
test
add
dec
daa
mov
xchg
jp
dec
and
mov
add
lret
jnp
jns
or
pop
nop
add
and
popf
inc
add
sub
add
xchg
stos
jae
insb
clc
push
add
mov
mov
testb
mull
add
scas
in
mov
outsb
jecxz
repnz
hlt
add
out
or
add
add
cmpsb
add
add
add
ret
cmp
mov
add
jae
add
jge
add
dec
dec
inc
rolb
pop
xor
add
add
aaa
sub
insb
and
mov
jge
jge
jl
add
lcall
add
inc
add
dec
pop
xchg
add
inc
or
add
dec
bswap
mov
repnz
dec
outsl
adc
addb
add
add
stos
add
mov
sub
xchg
add
push
add
das
push
add
stc
and
mov
cmc
and
push
insl
sub
imul
dec
icebp
or
mov
lds
mov
mov
add
pop
jno
mov
push
add
or
xchg
fwait
lret
data16
cmc
push
add
mov
jmp
outsb
fcmovne
pop
into
les
push
push
mov
jp
hlt
add
add
add
in
pushf
sub
mov
stos
sbb
cmp
add
movsl
or
ds
add
or
ds
lock
mov
add
fcmovu
pop
pop
xor
pop
jg
add
sbb
add
outsb
xchg
add
mov
cmp
insl
mov
add
add
shll
cmp
xchg
inc
stos
data16
mov
enter
xor
fsubs
es
add
push
jo
mov
inc
adc
stos
stos
mov
gs
nop
add
pop
gs
xchg
xchg
add
inc
and
add
mov
aaa
les
ja
les
movsb
add
add
add
xchg
cmc
push
add
out
dec
jne
add
stc
cs
and
xchg
outsl
arpl
add
data16
add
xchg
jb
loope
enter
imul
das
shr
add
ss
arpl
jle
mov
and
jns
popf
adc
pop
and
add
test
nop
add
mov
add
add
add
add
xchg
push
add
add
add
lea
xor
mov
cld
lret
lret
pop
shll
add
jmp
mov
add
fcoml
sahf
cmpsl
sti
pushf
ret
xlat
or
mov
add
add
push
add
add
jb
cmp
inc
cs
jmp
stos
inc
add
and
add
testb
add
icebp
aaa
pushf
jle
ret
add
xor
addl
pop
mov
mov
mov
jp
add
test
add
je
push
fildll
daa
flds
add
mov
add
add
pop
sbb
fmull
int
adc
mov
aad
mov
xchg
xchg
add
push
add
pusha
add
stos
and
into
pop
sbb
cmp
bswap
addr16
ret
inc
add
aas
cwtl
pop
mov
jo
lods
out
pop
xor
cmp
fistl
adc
inc
add
sahf
dec
inc
add
loopne
outsb
rcl
add
addb
add
mov
mov
pop
add
add
mov
add
rcrl
fists
add
pop
mov
add
jnp
add
and
add
jecxz
jmp
add
pop
fsubrs
or
push
outsb
sub
and
mov
add
mov
je
in
jg
adc
add
xchg
aam
enter
mov
push
add
push
add
fcompl
js
pop
pop
jbe
add
mov
add
dec
dec
sub
add
xor
pop
sub
stc
jg
push
add
add
into
nop
add
add
add
mov
add
fstpl
dec
fldl2t
sub
add
notl
pop
out
mov
push
add
inc
hlt
add
mov
jne
loopne
push
add
push
add
mov
jno
out
xchg
xor
mov
int
sbb
cld
mov
dec
in
fcompl
test
pop
ds
inc
mov
add
loop
add
test
xor
cld
addb
loopne
mov
xchg
and
stos
data16
add
add
mov
mov
add
rolb
mov
mov
add
adc
push
add
push
lds
add
mov
add
add
rolb
xchg
add
dec
mov
into
cs
std
lock
fstpl
sub
jnp
add
rolb
dec
cmp
push
add
sahf
pop
sbb
testb
mov
add
hlt
add
mov
add
add
movb
and
and
mov
mov
int3
nop
add
insb
rolb
push
add
jae
add
add
add
mov
mov
add
insb
int3
in
inc
test
xor
add
add
cwtl
push
add
add
lahf
jle
and
add
xor
mov
inc
add
mov
out
dec
push
add
inc
xchg
add
add
add
or
mov
pop
movb
sbb
cmpsb
add
sub
mov
aam
dec
fsubp
pop
xchg
loop
arpl
add
add
xchg
mov
add
sub
xchg
sub
add
xchg
add
add
int
add
pusha
add
adc
dec
mov
leave
cli
test
pop
bound
mov
xchg
add
jmp
dec
insl
fmul
mov
add
fs
jge
inc
add
add
and
mov
mov
mov
aaa
and
data16
pop
cs
add
add
push
es
inc
push
popa
cmpl
into
out
mov
and
popf
call
test
add
out
rolb
sbb
add
aas
lods
push
add
add
loop
or
adc
hlt
add
ja
add
dec
and
mov
and
mov
mov
add
das
xlat
notl
add
xor
int
faddl
inc
add
mov
lahf
dec
sbb
sti
jecxz
sbb
lds
fwait
js
push
sub
imul
mov
adc
pop
add
incl
add
addb
sub
adc
add
add
out
lods
arpl
call
mov
add
add
xor
cs
add
add
sti
adc
dec
jnp
adc
add
push
mov
fcompl
pop
scas
fdivr
clc
or
and
sub
xchg
xchg
add
adc
rolb
or
xor
dec
adc
fnstsw
inc
add
xor
popa
inc
sub
fucom
add
adc
inc
or
and
jmp
mov
xchg
aaa
rolb
incb
add
leave
jge
hlt
add
pop
imul
mov
repz
nop
add
repz
jnp
add
cs
int3
arpl
test
add
add
loop
jge
add
add
fs
sbbl
jne
nop
add
lods
cmp
push
add
or
pushl
cli
mov
jne
sub
imul
fiadds
les
roll
jmp
add
pop
mov
add
addb
sub
lds
inc
lds
je
fsubs
mov
add
add
mov
lret
push
mov
sbb
push
push
mov
add
add
fnstenv
lods
les
jmp
add
psrld
pop
cmp
ss
loope
repz
addr16
add
add
xchg
pop
test
xchg
leave
nop
add
das
int
add
mov
add
mov
fistl
adc
in
add
jnp
add
add
jb
adc
pop
lahf
pop
pop
mov
into
pop
les
outsb
sbb
pop
testb
enter
add
push
add
and
inc
add
ret
js
xchg
add
push
or
mov
add
mov
add
jl
add
pushf
push
add
rcrl
fcomp
pop
scas
or
add
pop
jbe
fnstenv
mov
add
data16
mov
add
cmpsl
and
add
add
add
add
mov
iret
adc
mov
bound
mov
xchg
mov
xor
ret
fsubrl
lea
pop
add
sub
xchg
add
dec
and
pop
dec
add
cmp
push
add
out
adc
call
add
nop
add
addb
add
dec
or
adc
xchg
dec
mov
jecxz
add
jo
cmpsb
add
movsb
add
rolb
mov
enter
jl
and
mov
mov
add
add
add
mov
stos
loopne
cli
mov
xchg
add
nop
add
xor
push
mov
jle
and
aas
outsl
jp
add
add
mov
add
and
mov
xor
movsl
pop
data16
xchg
clc
sub
add
and
add
popf
inc
add
add
add
cltd
out
ja
sub
xchg
int3
push
dec
dec
ljmp
out
imul
xor
xchg
add
jg
int3
cmpsl
pop
loope
xchg
pop
loope
sbb
jg
adcl
add
cmpsb
add
and
and
add
add
aaa
sahf
mov
push
test
xor
cld
xor
add
add
loopne
jo
rolb
stos
mov
push
add
in
cli
lcall
std
hlt
add
pop
test
loop
adc
sub
add
xor
inc
add
gs
sub
add
add
add
mov
or
xor
and
inc
add
adc
adc
in
jecxz
sub
mov
testb
repnz
imul
stos
cmp
or
push
add
add
xchg
xchg
jbe
int3
mov
ja
inc
add
dec
addr16
add
add
mov
add
add
add
add
fldlg2
pop
mov
popa
lahf
sbb
icebp
add
add
fdivs
add
ret
sub
add
and
or
sbb
add
add
ja
mov
push
data16
sahf
or
mov
dec
pop
shrl
xor
mov
outsl
dec
jp
ja
sub
lret
adc
add
sub
push
mov
cltd
mov
xchg
add
rcrl
dec
inc
cmp
ret
add
add
add
add
movsl
sub
add
mov
nop
add
dec
mov
sarl
insb
pop
add
add
mov
inc
lahf
hlt
add
movb
inc
add
mov
push
add
add
add
ljmp
popa
addb
cmc
mov
add
push
add
ret
std
addb
and
mov
in
push
adc
push
push
jns
push
rcl
xor
add
inc
dec
pop
cs
dec
cmp
add
dec
rolb
scas
mov
jns
aam
imul
pop
sub
int3
scas
out
push
loopne
or
pop
xchg
add
push
cmp
bound
mov
xchg
dec
lods
ja
add
bound
mov
add
mov
add
repnz
add
add
cmp
jg
add
add
testb
xor
push
mov
sbb
sbb
movsl
clc
xor
js
mov
inc
pop
jle
mov
int3
rolb
repz
in
test
faddl
insl
cmp
add
rolb
popa
mov
dec
loope
inc
add
test
add
mov
add
incl
in
add
scas
xchg
add
pop
outsb
xchg
add
cltd
cwtl
pop
rolb
mov
mov
sbbl
and
xchg
push
add
cmp
jb
mov
mov
out
jle
test
jo
test
or
inc
cmc
fcoms
add
add
repnz
repnz
mov
test
mov
jbe
lret
sub
cmp
orl
fdivl
pop
les
lods
jecxz
add
rorl
sub
xor
dec
cltd
popf
movsb
add
mov
xchg
add
mov
add
ljmp
test
cmp
bound
mov
ret
jns
add
add
or
mov
lea
add
mov
push
cltd
mov
add
xchg
add
add
mov
das
mov
add
mov
rolb
aad
rolb
inc
pop
xor
ja
cli
push
clc
xchg
mov
inc
aam
add
xor
add
call
add
pop
out
sbb
xchg
add
repz
add
add
mov
mov
mov
mov
in
push
inc
push
add
rolb
fnstcw
add
add
cwtl
mov
add
adc
fmull
add
inc
add
enter
add
data16
jns
add
movsb
add
add
cld
lret
add
mov
add
add
add
add
fwait
notl
sub
lahf
out
mov
add
sub
mov
xchg
dec
jle
xchg
jo
mov
pop
inc
mov
iret
sub
aaa
out
dec
test
add
pop
mov
add
mov
cmp
xlat
push
add
mov
add
xchg
test
mov
aas
cmp
add
hlt
add
fwait
inc
fwait
into
mov
das
dec
sbbl
push
xor
je
lds
or
jp
mov
movsl
adc
add
in
adc
add
mov
mov
aam
enter
xchg
add
mov
add
or
adc
js
mov
jo
mov
mov
insb
scas
gs
cmp
movb
fcmovnb
add
jns
add
dec
or
add
stos
fst
fs
sub
ret
sti
inc
add
sbb
pop
mov
add
inc
ret
xchg
fisubrl
mov
add
lret
xor
push
add
sbb
lds
fcmovnb
push
lds
mov
add
add
add
jmp
add
dec
mov
std
call
lret
into
add
mov
gs
insb
stc
mov
in
ret
xor
testb
mov
add
adc
rolb
in
xor
push
ret
add
mov
add
xchg
in
rolb
xor
mov
scas
lret
fwait
xlat
sbb
stos
popf
xchg
add
mov
add
out
popl
add
add
ret
dec
pop
pop
xlat
daa
cmp
mov
mov
xor
rolb
dec
dec
jle
dec
fbld
xor
add
sub
add
adc
or
add
pop
mov
pop
jne
test
rolb
sbb
cmp
out
mov
shll
add
stos
mov
add
in
mov
adc
dec
test
add
jns
inc
clc
jae
jl
and
mov
add
out
inc
movsb
add
inc
add
xor
cmc
pusha
add
lods
shrl
inc
add
inc
mov
mov
testb
sub
inc
mov
or
inc
loop
mov
sti
out
aam
aas
and
mov
push
dec
rcrl
add
add
add
popf
xor
mov
roll
add
push
add
xchg
push
cmp
inc
pop
cli
jp
add
xchg
pusha
add
add
mov
adc
add
and
inc
jbe
pop
cmp
nop
add
push
andl
mov
add
orl
lds
pusha
add
jo
xlat
push
fnstsw
push
add
iret
fcomp
enter
add
cli
fcoml
add
adc
mov
add
lock
add
mov
add
push
add
cmpsl
aam
xor
jl
add
add
add
jo
iret
stos
fdivrs
fs
add
add
out
in
cwtl
rolb
fcmovnb
add
fcomps
dec
jo
in
aad
lcall
add
add
cmc
xchg
call
add
mov
mov
cwtl
cld
jno
add
mov
jp
add
scas
idiv
jge
test
add
sub
add
les
je
iret
addr16
pop
mov
data16
add
testb
mov
jno
add
add
pop
roll
lods
xor
add
add
mov
add
add
lcall
adc
lea
rolb
iret
add
inc
daa
xor
outsl
push
mov
cmp
mov
add
sub
push
aaa
xor
inc
add
into
outsb
je
out
mov
xor
movsb
add
xchg
add
aad
add
jbe
fsts
imul
add
add
cmp
jg
adc
xchg
lods
lds
movsl
movb
or
add
lds
out
inc
add
lock
add
mov
add
sub
iret
cltd
negl
mov
je
mov
mov
add
stos
test
inc
xchg
out
inc
add
pop
lock
fs
add
xchg
fcom
add
inc
add
test
add
add
add
ret
cmp
mov
fwait
pop
mov
pop
push
add
mov
add
add
add
jno
add
cmp
jne
mov
out
inc
and
add
stos
lods
std
adc
mov
repz
push
scas
cmp
into
xchg
fmuls
sti
or
mov
add
movb
scas
test
sub
mov
mov
out
add
adc
or
inc
loopne
push
bound
mov
jmp
add
jg
add
adc
mov
mov
inc
add
loop
push
xor
jnp
lret
dec
push
add
addr16
adc
xchg
inc
adc
dec
dec
add
mov
dec
push
add
jb
pop
xor
hlt
add
dec
daa
sahf
mov
ja
and
mov
js
mov
add
mov
popa
pop
dec
mov
push
add
add
in
std
mov
add
lret
cli
sub
mov
cmp
out
in
jb
sub
add
test
cwtl
mov
jp
xchg
jecxz
sbb
add
add
in
adc
lret
jge
or
invd
sub
pushf
mov
jb
cwtl
bound
mov
mov
sub
test
arpl
xchg
add
jmp
xchg
test
mov
add
xchg
cltd
pushf
mov
add
add
add
or
imul
outsb
bound
mov
sub
add
add
pop
jno
add
mov
outsb
sti
mov
addb
add
cmp
mov
jecxz
hlt
add
movb
das
aam
push
add
add
add
xchg
add
stc
pushf
xor
add
aam
ret
cmp
pop
pop
scas
sub
mov
add
push
add
outsl
jmp
jo
shrl
add
cmpsb
add
testb
xchg
push
in
push
add
add
out
cmpsb
add
lahf
loopne
gs
add
addr16
inc
lahf
add
inc
fdecstp
add
add
aam
mov
cmp
adc
movb
push
imul
lret
or
add
xchg
lret
sbb
cwtl
loop
cmp
add
int
add
scas
mov
pop
sub
aad
adc
add
rsqrtps
into
inc
add
dec
pop
out
xchg
insb
mov
jp
xor
in
fsubl
add
outsl
iret
lock
sbb
add
ljmp
add
popa
testb
cld
cs
sahf
push
add
xchg
int
mov
mov
adc
jbe
add
and
test
inc
scas
or
xchg
popa
xor
pushf
ds
call
rolb
xlat
mov
jno
add
stos
sub
add
lea
mov
mov
push
add
lcall
push
out
jecxz
add
pop
in
bound
mov
cmc
push
dec
sti
int
add
fildll
pop
ret
or
sub
arpl
jno
xchg
dec
inc
jmp
or
add
xor
add
sar
ds
in
dec
add
sbb
or
adc
mov
ljmp
add
cmp
add
inc
add
add
mov
scas
mov
jmp
outsb
cmp
mov
jno
sahf
xchg
ret
imul
and
pop
jae
add
fwait
movb
lret
add
xchg
popa
fucomi
xchg
add
pop
fnsave
sub
hlt
add
sbb
mov
cmp
jb
cmp
add
add
inc
add
pop
pop
in
in
add
addb
inc
add
xchg
push
add
dec
rcrl
cmp
add
aas
xchg
push
add
and
mov
pop
inc
add
in
mov
filds
inc
add
inc
cmp
lds
test
push
add
cs
push
add
fwait
push
fldl
add
mov
out
add
xor
pop
loope
fwait
add
stos
cli
test
mov
pop
loope
ljmp
dec
inc
jno,pt
lahf
dec
data16
jge
pop
movsb
add
add
sub
add
pop
mov
fucomp
into
and
mov
test
ffree
add
stos
mov
sahf
mov
fmul
mov
mov
lcall
adc
cwtl
cmc
fcomip
push
pop
inc
add
divl
xchg
add
movsl
out
inc
add
add
hlt
add
cmp
add
dec
out
rolb
lcall
mov
dec
mov
push
add
add
and
add
mov
scas
loop
testb
cmp
pop
xor
enter
mov
imul
sti
roll
inc
add
xchg
fistps
lcall
add
mov
push
add
mov
xchg
das
mov
push
add
add
iret
mov
push
add
mov
xchg
gs
imul
inc
cmpsl
jmp
cmp
push
push
icebp
movsb
add
add
add
add
cltd
movb
aad
inc
test
add
in
add
add
jb
jo
xor
add
add
mull
add
fcmove
outsb
leave
or
aas
out
push
add
and
mov
inc
sarl
mov
xchg
cmp
addr16
mov
in
loop
mov
mov
movsb
add
lods
enter
adc
scas
insl
cmpsb
add
add
add
mov
cmp
add
les
push
add
leave
inc
mov
into
xchg
pop
insb
cs
stc
call
push
add
mov
sub
add
pop
inc
lahf
ret
xchg
negl
push
add
addb
cs
dec
xor
push
test
cltd
jnp
xchg
popl
mov
add
lea
pop
mull
pop
movl
inc
xchg
sub
add
add
add
psrld
inc
jmp
nop
add
fdivrs
gs
pop
xchg
add
add
mov
jg
mov
mov
add
add
jle
jecxz
add
mov
add
add
and
inc
add
add
mov
push
add
shll
add
add
add
fiadds
ljmp
add
and
mov
dec
jp
popl
mov
and
mov
arpl
imul
addb
add
imul
add
std
imul
adc
mov
shl
int3
ret
movsl
push
scas
cltd
cmp
lods
in
imul
add
inc
inc
add
out
test
add
add
fwait
mov
add
dec
fidivrs
mov
mov
cmpsl
xor
mov
repnz
cmovo
mov
repnz
dec
loop
rorl
sub
inc
iret
push
movb
bound
mov
rolb
subl
dec
adc
scas
scas
cs
add
add
add
ret
sub
scas
dec
inc
cmc
loope
add
inc
add
out
add
test
adc
addb
add
mov
mov
push
add
mov
push
loop
sub
add
fistpl
add
xor
lods
jge
mov
je
mov
push
and
mov
mov
mov
cmp
add
add
fdivs
inc
into
cltd
inc
and
testb
rolb
add
add
mov
and
cli
pushf
repnz
add
mov
push
add
add
fcoml
add
jae
add
mov
add
mov
mov
cli
arpl
jnp
std
dec
sbb
add
cmp
rolb
inc
add
add
add
mov
add
add
mov
sub
in
int
add
movsb
add
push
add
sub
popf
repz
add
add
add
mov
jbe
dec
jmp
dec
outsb
xchg
outsb
icebp
pop
add
xor
add
call
mov
in
icebp
push
add
data16
dec
push
decl
arpl
les
lea
jo
test
add
dec
push
push
add
add
leave
dec
aam
xchg
add
pop
lock
mov
mov
push
push
add
arpl
mov
dec
mov
add
mov
add
mov
lods
mov
les
loopne
push
fsubs
data16
add
test
mov
adc
pushf
imul
add
add
clc
xchg
add
stc
mov
int
add
sub
jmp
mov
call
dec
push
add
add
add
js
jle
jmp
rolb
dec
xchg
xor
pusha
add
cli
mov
sbb
or
mov
stos
and
mov
add
jge
adc
inc
sti
xchg
and
cmc
test
add
movsl
and
add
stos
push
or
add
and
jns
int
add
pop
add
std
sub
popa
dec
mov
add
add
rolb
je
lds
jb
mov
cld
pop
sbb
cmpsb
add
rcrl
dec
push
hlt
add
add
sub
xor
adcl
add
jns
push
or
jl
clc
call
add
pop
and
pop
daa
push
pop
out
cld
and
lods
sbb
clc
pop
je
sbb
add
xor
int3
shrl
mov
mov
test
or
xchg
mov
mov
add
add
add
add
xchg
add
lods
call
jg
sbb
test
fisubrl
xorl
mov
in
inc
add
adc
push
add
add
add
add
add
insb
jg
leave
jne
fdivs
out
ficoml
int3
pop
xor
lret
outsb
rolb
add
add
dec
das
jp
outsb
lock
enter
sub
or
xor
ret
lret
mov
mov
into
jmp
pop
mov
add
daa
cwtl
mov
pop
dec
jmp
sbb
addb
inc
sarl
sti
mov
sbb
in
push
add
add
stos
cmp
dec
add
mov
shll
insb
or
jb
aam
test
cld
mov
sbb
testb
clc
xchg
add
lret
fldz
pusha
add
aas
repnz
stc
push
add
lahf
out
xchg
add
pop
mov
cmpsl
icebp
out
push
add
adc
lods
jne
bound
mov
add
add
jnp
add
add
adc
scas
adc
scas
dec
or
leave
popa
fcmovne
xor
inc
add
inc
jmp
test
inc
add
popf
std
xchg
fisttps
test
loope
fstpl
add
add
out
jmp
outsb
add
mov
int3
jo
jne
push
add
lea
call
in
cmp
pop
jl
and
icebp
hlt
add
add
xchg
add
aas
sub
out
add
mov
stc
xor
dec
and
jecxz
inc
out
mov
imul
stos
sbb
jp,pn
xor
mov
push
aam
rolb
lea
push
repz
clc
inc
add
jne
lret
push
add
mov
inc
addb
add
add
add
add
lcall
mov
xor
push
roll
jbe
cmp
movsl
add
mov
add
mov
add
dec
cmpl
out
ja
data16
ljmp
mov
add
xchg
aaa
xor
sub
out
xor
lret
lret
mov
cld
cmp
add
adc
dec
ljmp
ljmp
pop
mov
pop
lods
mov
mov
jno
add
push
jp
add
add
pop
testl
add
lds
add
pop
xchg
sbb
fcoml
add
cmp
out
fdivr
sub
in
dec
xor
out
clc
push
add
mov
add
xchg
add
jg
push
mov
add
dec
add
xor
sub
add
repz
cmc
jns
into
xor
xor
inc
add
in
fidivrl
jmp
inc
add
mov
inc
add
add
mov
lret
mov
inc
dec
fildl
add
add
addb
dec
movb
sub
sti
jnp
insb
dec
ret
sahf
je
iret
mov
or
cs
and
xor
dec
mov
testb
cli
mov
or
mov
push
cli
sbb
pop
mov
in
or
mov
imul
mov
cltd
lahf
sub
testb
rcrl
add
xor
pop
into
pop
jno
pop
sahf
push
sub
add
add
add
mov
add
add
fcmovnb
outsl
addb
or
add
jecxz
push
add
lahf
lret
sahf
out
pop
push
mov
mov
push
add
add
lock
add
xorl
hlt
add
enter
push
movb
jno
ret
sub
add
add
add
daa
insl
insl
or
add
add
mov
dec
pop
jmp
loopne
pop
aaa
mov
ds
pop
mov
cmp
push
add
fprem1
adc
pop
in
repnz
push
add
in
stos
push
push
add
or
add
dec
daa
into
mov
movsl
jns
add
push
xchg
pop
aas
fwait
mov
mov
outsb
cld
add
add
mov
add
add
lds
adc
lock
movb
add
sti
adc
cmp
add
add
add
sub
mov
adc
loope
nop
add
jmp
out
rolb
scas
xchg
mov
and
mov
add
popa
aad
jge
dec
pop
add
add
or
sbb
jp
loopne
or
xchg
add
mov
add
jl
mov
lret
sub
test
enter
mov
xchg
addr16
test
adc
and
into
inc
add
lds
sub
add
out
cmp
stos
inc
add
push
add
inc
add
or
sbb
xchg
add
or
sbb
in
adc
clc
dec
push
add
add
adc
mov
push
add
and
mov
xor
push
cmp
push
sub
add
mov
xchg
aam
ds
and
push
add
xlat
dec
mov
mov
repnz
std
push
add
pop
imul
out
add
out
jmp
mov
add
pop
cmp
jns
add
cli
pop
cld
addb
mov
movb
lods
test
rolb
xlat
leave
pop
orl
mov
add
jb
mov
pop
adc
ret
rolb
sti
xchg
add
popf
add
inc
dec
push
jg
jle
lods
inc
add
add
dec
gs
inc
add
in
imul
add
add
das
pop
mov
sub
decb
adc
daa
inc
add
add
add
js
add
add
sub
loop
and
mov
sbb
add
mov
ficoms
xor
jae
add
dec
aad
add
add
