pop
pop
cmp
addl
push
push
pop
add
add
and
push
push
push
mov
push
cld
xor
pop
pop
ret
xchg
out
rol
add
cmp
dec
jns
jns
xchg
out
inc
pavgb
sbb
out
div
div
sbb
stos
stos
pop
pop
pop
pop
pop
inc
mov
xor
mov
adc
out
or
or
pop
jle
pop
pop
jb
sub
mov
mov
xlat
ret
in
xor
outsb
xchg
outsb
outsb
xor
jge
out
out
out
and
gs
btcl
cmp
fsubrs
dec
dec
push
xchg
fcmovnu
fistpl
mull
or
out
out
sbb
mov
push
push
push
push
push
call
out
out
out
push
inc
inc
negl
out
sbb
int
int
cs
sbb
and
and
sub
sbb
sub
int3
sahf
inc
out
out
outsb
inc
mov
mov
mov
jb
into
out
mov
mov
imul
fwait
fwait
fs
out
addb
out
rorl
cmc
cmc
cmc
cmc
adc
loop
loop
adc
mov
enter
lds
popf
push
sbb
sbb
sbb
cmp
out
out
out
mov
rol
and
ljmp
mov
out
out
out
popf
fs
jmp
ret
dec
dec
dec
dec
add
insl
insl
cmp
cmp
cmp
and
cli
cli
cs
lcall
sahf
xchg
xchg
mov
pop
pop
in
in
filds
dec
into
or
in
push
mov
lcall
add
hlt
hlt
hlt
rcl
shr
out
jl
test
test
out
mov
insb
in
push
inc
inc
inc
inc
push
push
push
ret
pop
pop
pop
lea
and
and
mov
mov
aad
repz
xlat
xlat
lods
in
in
in
in
or
out
sub
push
adc
int3
pop
pop
cwtl
jo
jo
jo
fisttpl
or
cmp
and
xor
xor
xor
or
push
push
add
incb
inc
in
in
mov
nop
push
push
mov
inc
inc
inc
inc
mov
pop
pop
mov
jns
mov
sub
sub
jbe
repnz
inc
cmp
jmp
repnz
addb
dec
dec
dec
jl
jns
jo
xor
mov
xchg
add
sahf
sahf
inc
addb
add
or
inc
inc
arpl
arpl
scas
scas
scas
scas
scas
mov
mov
xchg
ja
pop
pop
mov
flds
push
push
les
lret
lret
lret
xchg
and
imul
hlt
outsb
outsb
outsb
outsb
push
out
out
out
out
out
out
out
out
xorb
pop
pop
in
pop
fsubs
ds
pop
fiaddl
sahf
sahf
and
lds
adc
out
out
out
mov
inc
inc
inc
inc
push
push
arpl
push
push
xor
pop
pop
pop
gs
out
out
out
out
out
out
out
add
add
pop
pop
fcomp
mov
mov
mov
push
xchg
cmpsb
jae
and
rcl
rcl
or
xor
dec
dec
dec
dec
dec
dec
dec
incb
add
add
add
out
enter
sub
cmp
mov
dec
or
fcmovu
lods
lods
clc
hlt
fists
fcmovnu
xlat
xlat
mov
and
cmc
inc
inc
inc
jge
jge
jge
movsb
mov
and
inc
lds
rcl
aas
aas
sub
cwtl
pop
pop
pop
pop
pop
cld
sub
jae
xchg
adc
adc
mov
ja
ja
ja
inc
cmp
test
test
ret
ret
mov
dec
xchg
xchg
xchg
mov
daa
daa
daa
jbe
imul
lahf
hlt
hlt
hlt
dec
xchg
test
popf
lock
mov
or
in
in
in
or
xchg
xchg
call
mov
mov
mov
mov
jne
lretw
int3
sub
mov
push
jbe
mov
lea
dec
cmp
mov
pop
pop
pop
pop
pop
insl
insl
insl
loope
js
scas
in
push
push
push
std
std
cmp
scas
scas
cmpsb
cmpsb
sub
sbb
scas
scas
scas
scas
jmp
ljmp
test
push
push
push
push
push
push
push
and
or
pusha
pusha
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
lcall
cmpsb
cmpsb
cmpsl
dec
dec
dec
dec
dec
dec
js
mov
lea
sub
push
push
fstp
fnsave
sti
sbb
je
je
ljmp
out
or
and
mov
mov
dec
mov
mov
jns
push
js
jne
jle
iret
imul
ud0
sbb
sbb
out
lock
mov
fcompl
dec
dec
jae
sbb
jne
std
std
inc
inc
stos
stos
andb
jbe
loopne
call
popa
popa
fucomip
idivb
jns
mov
iret
iret
jmp
mov
pop
pop
outsb
outsb
and
aas
add
mov
xor
push
lret
xor
stc
stc
lock
test
out
out
out
aas
dec
dec
cli
insb
insb
out
out
out
out
push
push
insl
popa
popa
popa
popa
and
test
test
mov
insb
cmp
out
pop
andl
test
jp
stc
inc
push
push
push
sbb
pop
add
adc
adc
ror
sti
sti
sti
sti
sti
sti
push
clc
ret
jmp
pop
pop
pop
mov
rol
mov
test
push
push
incb
std
std
jae
adc
sbb
cltd
cltd
add
dec
dec
dec
ja
dec
jns
inc
pop
pop
pop
out
out
push
push
push
insb
insb
mov
mov
push
sbb
sti
rorb
adc
ret
add
lret
lret
lret
lret
lret
test
xor
mov
mov
ret
xor
movsb
sub
dec
cmp
stc
outsb
jge
and
and
sbb
sahf
jb
push
cmc
cmc
enter
push
push
dec
dec
out
out
loopne
jge
lock
jns
das
das
das
das
fdivr
jns
mov
or
or
mov
pusha
pusha
pusha
mov
xchg
push
in
scas
scas
scas
scas
scas
sbb
das
aam
cmpsl
cmpsl
xor
jne
enter
dec
mov
xor
test
mov
addb
test
sub
sub
clc
movsl
movsl
movsl
movsl
clc
into
jmp
insl
arpl
shll
incb
pop
cmp
jmp
aam
sahf
lcall
or
arpl
shr
orb
fidivl
fisttps
and
mov
ret
inc
inc
nop
nop
ds
div
testl
cld
test
push
popf
popf
popf
popf
jno
cli
cli
cli
cli
and
and
out
out
adc
adc
out
out
out
out
sarb
sub
ret
push
push
mov
iret
out
out
jp
into
into
into
lock
mov
mov
ja
bound
addb
adc
movsb
movsb
fdivs
aas
aas
in
push
push
popf
popf
popf
popf
popf
jns
jns
lock
fnstcw
mov
mov
mov
adc
adc
adc
sahf
sahf
pcmpgtd
jmp
jmp
cmpsb
cmpsb
cmpsb
and
imul
mov
fdivl
sub
aad
in
stc
stc
stc
stc
int3
out
rcl
shll
or
and
bound
pop
pop
jle
jle
sub
mov
pop
stos
stos
aad
inc
inc
mov
cld
pop
outsb
outsb
outsb
bnd
inc
inc
pop
cmp
and
pop
pop
out
xlat
xlat
xlat
test
ret
adc
leave
leave
add
out
adc
inc
call
std
fsubrp
mov
mov
in
in
addl
dec
mov
mov
lea
fld
les
jmp
jmp
clc
clc
clc
clc
clc
cmpsl
adc
jnp
jnp
lcall
mov
mov
push
push
push
cmp
xor
push
push
push
push
nop
xchg
pop
pop
hlt
hlt
hlt
hlt
fcmovne
mov
sbb
cvtps2pd
jecxz
pop
push
cld
cld
cld
cld
cld
cld
cld
popf
push
mov
cld
or
pop
pop
dec
dec
call
mov
fcmovnu
fistl
fs
add
test
mov
adc
xlat
out
out
mov
rcl
adc
adc
out
adc
dec
push
das
popf
adc
adc
das
das
das
mov
loope
pusha
pusha
pusha
or
aad
aad
jne
daa
out
out
out
out
adc
mov
imul
insl
insl
jo
insl
insl
insl
insl
insl
insl
fistps
call
push
mov
fimuls
add
leave
leave
leave
call
rol
mov
mov
mov
mov
insb
js
and
lods
lods
lods
lods
lods
pop
xchg
mov
jns
dec
enter
outsb
dec
jl
jl
jl
mov
adc
das
das
das
out
out
out
stos
inc
adc
adc
das
icebp
adc
jmp
dec
dec
xchg
jl
int
mov
stos
scas
scas
xor
xor
mov
mov
lock
dec
dec
dec
inc
sahf
sahf
lods
and
je
jns
jns
cmpb
push
push
push
push
scas
mov
addb
cmpsl
cmp
cmp
into
clc
clc
xchg
xchg
sbb
pushfw
pushf
jle
or
std
mov
xchg
test
das
das
ljmp
dec
dec
dec
xchg
daa
daa
daa
daa
daa
daa
repnz
push
sbbl
icebp
fmul
aam
aam
test
adc
jle
add
adc
stc
sub
sub
sub
popf
popf
jp
jp
int3
xor
xor
add
mov
rcrl
sbb
sbb
cmp
push
push
push
push
das
sub
out
loopne
pop
push
push
push
sub
jno
jno
or
icebp
icebp
icebp
popf
popf
pop
push
push
sbbl
out
out
xchg
insb
mov
adc
sub
aas
jle
and
sub
push
push
addb
mov
adc
sub
lock
dec
dec
dec
cmp
das
das
das
iret
int
loope
loope
sbb
cli
cli
fstp
dec
dec
sbbl
clc
test
jle
jle
jle
pop
ja
aas
ds
sub
push
jo
jo
jg
int
cmpsl
cmpsl
jle
jne
xor
cmp
rol
push
cmc
lcall
jo
lret
imul
into
mov
rorb
push
push
fcmovb
push
push
push
push
xchg
jmp
cmp
in
xchg
in
in
ljmp
jecxz
push
push
push
xchg
xchg
das
das
or
dec
dec
dec
dec
sahf
sahf
cmp
and
pop
sti
and
sbb
sbb
mov
mov
mov
lods
add
mov
daa
daa
daa
cmp
pop
rcl
sub
outsb
into
mov
or
jnp
btcl
push
or
jae
fidivl
jecxz
pop
int
ret
ret
ret
and
sbb
jmp
dec
fisttpl
dec
inc
or
jle
bound
addb
push
push
dec
push
push
push
push
push
push
pop
fstp
ffree
jl
push
sub
cli
add
cmp
mov
or
gs
loopne
stc
stc
stc
stc
adc
sar
jmp
jl
call
rcl
rcl
rcl
lcall
call
xlat
xlat
push
push
out
out
in
in
in
in
inc
inc
mov
xchg
xchg
xchg
xchg
jae
mov
cmp
sbb
lret
lods
or
sub
sub
push
push
push
add
add
add
add
add
imul
cmp
pop
pop
int
int
insl
insl
insl
insl
insl
mov
addl
and
imul
scas
jecxz
jnp
jnp
push
sub
push
push
push
aas
pop
pop
cld
cld
das
das
das
jb
cmpsl
cmpsl
xchg
inc
arpl
arpl
icebp
icebp
push
push
pop
pop
add
inc
ljmp
fcmovu
push
lods
xor
mov
andb
scas
mov
es
lods
lods
lods
sub
imul
les
sbb
sbb
out
add
lods
lods
lods
lods
lods
adc
div
div
addr16
mov
out
out
jl
xchg
xchg
xchg
xchg
xchg
ds
cld
mov
notb
loope
and
jl
adc
divl
pop
rorl
dec
dec
or
insl
insl
pop
in
dec
dec
addl
adc
inc
inc
inc
inc
or
jbe
leave
leave
mov
repz
and
adc
call
mov
and
and
nop
jo
jo
mov
pop
pop
cmp
push
push
push
push
aam
aam
push
pop
pop
fistps
loopne
div
divb
mov
fstp
xchg
andb
int
int
xchg
xchg
xchg
dec
rcl
or
ret
mov
xchg
xchg
xchg
rcl
cmc
inc
or
xor
xchg
xchg
push
push
push
aam
aam
aam
addl
stos
stos
stos
stos
stos
push
test
test
jp
jp
addb
call
insl
lret
push
push
popa
popa
jb
repnz
cltd
cltd
inc
inc
pop
lods
lods
lods
lods
fbld
inc
inc
inc
inc
inc
sahf
div
lock
ljmp
out
mov
fcompl
sbb
adcl
push
push
push
push
push
ret
ret
ret
ret
cld
push
jb
jb
in
lahf
lahf
lahf
pop
pop
pop
pop
sbb
jmp
fcmovu
imul
loope
loope
pop
sbb
sub
ss
dec
dec
dec
cmp
cmp
jbe
mov
add
jns
inc
inc
ljmp
adc
adc
mov
addb
sub
sub
cmpl
cmp
mov
add
inc
inc
inc
dec
mov
dec
dec
dec
mov
xchg
pop
addb
jl
add
rorl
push
rcl
xchg
xchg
cmp
cmp
mov
mov
mov
gs
dec
dec
dec
aas
aas
aas
mov
out
std
std
std
std
std
dec
dec
dec
dec
jns
lock
leave
leave
imul
loope
insl
insl
insl
mov
mov
je
or
pop
dec
dec
dec
dec
dec
dec
dec
mov
cmpsl
xchg
mov
push
lods
and
or
or
or
or
or
ret
ret
div
testb
sahf
sahf
sahf
sahf
sahf
sahf
sub
jae
jae
ret
ret
ret
adc
adc
adc
mov
test
je
je
test
cltd
cltd
or
cmp
sbbl
cmp
test
sbb
sbb
test
pcmpgtb
cmpsl
cmpsl
cmpsl
pop
pop
pop
pop
ret
pop
pop
popf
popf
cmpsb
cmpsb
cmpsb
cmpsb
enter
and
out
out
mov
xor
shrl
insl
std
out
lret
pop
rcl
xor
add
es
daa
repnz
xchg
xchg
add
inc
aas
mov
xchg
xchg
xchg
mov
mov
in
adc
pushf
ret
hlt
hlt
jp
dec
mov
insb
or
sbb
loop
sbb
out
out
adc
scas
scas
scas
scas
add
loopne
cs
out
and
push
push
push
push
push
lahf
test
call
adc
adc
and
pop
pop
dec
dec
dec
dec
mov
inc
inc
out
sbb
pushl
imul
jp
in
or
add
out
out
jo
jno
sub
inc
rorl
loope
loope
loope
mov
mov
icebp
icebp
icebp
icebp
icebp
out
out
out
out
out
out
call
cs
test
call
rcr
mov
cs
xchg
xchg
leave
mov
and
and
cmc
out
jge
cwtl
fiadds
inc
add
lock
div
cmpsl
add
and
and
out
out
out
sti
sti
mov
push
adc
or
and
and
test
sahf
lahf
lahf
push
and
and
mov
or
fwait
fwait
mov
dec
cmp
cmp
repnz
mov
xchg
xchg
xchg
xchg
repnz
add
add
add
add
lahf
xchg
xchg
js
sbb
add
adc
addb
pushf
pushf
pushf
mov
test
mov
out
pop
scas
scas
les
test
dec
out
out
out
and
and
and
and
jbe
jbe
mov
or
fcmovnu
fcmovnu
fistpl
mov
int3
int3
jns
je
test
mov
addr16
mov
inc
jno
cmp
and
sub
add
cmp
xchg
aam
aam
addb
xlat
icebp
dec
jg
jg
jno
push
push
push
push
stos
outsl
outsl
mov
mov
mov
inc
inc
inc
cmp
lret
lret
in
in
in
in
popf
cmp
cmp
push
push
icebp
icebp
int
int
negl
xchg
mov
mov
jo
jo
jo
gs
rcl
rcll
push
push
inc
outsb
jp
jbe
xlat
dec
dec
dec
sub
mov
mov
jne
jne
int3
int3
xchg
xchg
in
xchg
lahf
in
ja
and
das
dec
dec
dec
pop
pop
pop
pop
cli
daa
insl
lret
lods
lods
lods
push
push
ds
cltd
cltd
cltd
fisttps
or
out
add
fcmovu
and
in
jbe
or
or
xchg
mov
popa
pop
data16
std
nop
nop
leave
leave
inc
mov
jns
adc
lret
movsl
movsl
movsl
movsl
ror
int
int
int
pop
push
or
sbb
or
lods
inc
inc
enter
enter
xlat
xlat
xlat
xlat
xlat
xor
jg
jg
jg
stc
stc
addr16
into
aaa
adc
mov
fstp
fst
sti
sti
sti
mov
insl
insl
pop
pop
pop
jo
xchg
xchg
xchg
pushf
das
in
fcmovu
fcmovu
fisubrl
outsb
push
push
push
data16
or
mov
push
cmpsb
cmpsb
repz
mov
mov
mov
xorb
int3
or
or
or
lret
lret
rol
rol
mov
in
fiadds
sbb
sbb
inc
inc
ret
out
cmp
xchg
xchg
pusha
pusha
sub
sub
cmpb
jns
jns
out
jle
cmp
cmp
cmp
sbb
sbb
ja
scas
scas
scas
add
stc
stc
stc
in
mov
rcl
inc
enter
push
push
push
push
sub
jle
pop
repnz
leave
leave
leave
leave
gs
mov
push
in
add
outsl
outsl
outsl
outsl
outsl
outsl
sub
mov
mov
addb
mov
mov
fwait
push
push
pushf
cmp
cmp
cmp
mov
cmp
xchg
pop
arpl
cltd
cltd
cltd
cltd
cltd
jp
mov
in
call
or
inc
roll
and
ss
dec
pop
pop
iret
iret
dec
jle
movsl
movsl
xlat
in
in
jge
fwait
jo
inc
inc
inc
inc
inc
push
push
pop
pop
addb
pusha
pusha
dec
jg
jg
push
push
push
mov
fwait
fwait
fwait
fwait
fwait
xchg
xchg
mov
lods
lods
push
push
or
adc
adc
push
mov
vpmaxub
fisubrs
bound
and
xchg
xchg
xor
xor
xor
aaa
aaa
aaa
sub
std
and
and
popa
add
add
add
adc
adc
cmpb
add
pop
pop
pop
sti
enter
fcmovu
cwtl
je
aas
aas
sbb
je
cli
cli
enter
scas
pusha
pusha
push
adc
mov
popf
mov
pop
add
ja
mov
fcoms
adc
dec
mov
push
imul
stos
stos
stos
push
push
push
xchg
out
fcomp
inc
rcl
rcl
rcl
dec
dec
dec
dec
or
inc
aad
aad
or
xchg
xor
movsb
mov
leave
leave
leave
leave
leave
cltd
xchg
stc
stc
stc
in
in
in
in
in
in
in
xchg
add
add
pop
sbb
push
push
ds
xchg
pop
ja
ja
sub
xor
and
out
ja
push
add
mov
dec
dec
movsb
push
aas
aas
aas
aas
mov
dec
dec
xor
add
add
add
mov
lcall
lods
lods
lods
lods
lods
push
jg
repz
adc
adc
ljmp
outsb
outsb
outsb
nop
nop
or
xchg
popa
popa
popa
popa
popa
jmp
insb
insb
test
pop
pop
sbb
sbb
push
push
push
push
in
cmp
imul
out
in
inc
inc
inc
lcall
add
fcmovu
movsb
inc
inc
fs
fstps
push
push
sahf
addb
add
inc
lret
xchg
xchg
enter
insl
sbb
cs
jl
jl
addl
stos
stos
daa
out
out
out
out
out
out
dec
push
dec
dec
dec
dec
dec
dec
dec
dec
xchg
xchg
xchg
jmp
jmp
xchg
addl
jmp
push
adc
adc
adc
into
in
fs
xchg
xchg
xchg
xchg
jp
jp
fmull
int3
iret
iret
xor
and
cmp
add
add
inc
inc
movsb
movsb
insl
xchg
push
clc
sbb
cmpsb
cmpsb
pop
pop
dec
dec
dec
inc
inc
pushf
icebp
add
pop
jnp
jnp
popf
popf
xor
xor
xor
jmp
jmp
stos
cwtl
mov
add
cmp
ss
push
push
push
fwait
fwait
dec
dec
dec
dec
dec
dec
dec
dec
dec
xlat
nop
cmp
jb
jb
xor
out
out
pop
mov
repnz
jge
jge
adc
adc
std
xor
xor
xor
xor
jmp
ret
lahf
sti
sti
adc
scas
repnz
cmp
cmp
cmp
sbb
adc
mov
jo
rol
ret
ret
in
sub
sub
pop
sub
scas
push
push
cwtl
daa
jmp
lret
sbb
add
sub
dec
dec
dec
dec
xchg
fiadds
and
cwtl
stos
sub
mov
inc
xchg
jb
push
push
jle
jle
aaa
mov
mov
mov
mov
sub
fidivl
jae
fcmovnu
adc
stc
stc
stc
stc
stc
add
add
pop
test
aam
popa
sub
sub
movsb
movsb
movsb
imul
fstp
leave
adc
cmp
addb
ja
ja
pop
pop
push
jbe
jbe
aaa
xor
sbb
jg
popa
push
pop
mov
cvtps2pi
shlb
add
sti
pop
or
add
push
loop
cmp
cmp
jmp
js
int
xor
test
add
mov
cmpsl
xchg
xchg
in
add
scas
les
add
test
leave
lahf
add
std
inc
pop
fistps
mov
sub
or
add
adcl
xor
pushf
inc
and
pop
cmp
add
out
xlat
xor
and
sbb
jle
out
dec
add
jecxz
movsb
fadds
sub
pusha
add
xchg
rcrb
lret
push
push
mov
mov
jge
add
fdivrs
loopne
jo
sub
jbe
jo
movsb
mov
imul
popa
popl
mov
fwait
into
in
mov
push
inc
add
mov
mov
xchg
loope
enter
es
xchg
sub
or
jnp
xor
roll
sarb
mov
rol
fildll
sub
sub
add
cmc
pop
bound
jmp
repnz
pop
pushl
cltd
xchg
lock
fbld
mov
add
inc
mov
push
xor
arpl
mov
xchg
lock
ljmp
mov
dec
xchg
adcl
xchg
lods
out
sub
mov
xchg
lret
sbb
cmp
shr
nop
insl
push
dec
in
and
mov
add
pop
add
test
ja
inc
push
call
xchg
scas
cs
lahf
bound
dec
or
push
xchg
xor
add
dec
add
sub
push
add
push
and
push
and
jb
adc
insb
add
lret
jnp
jecxz
pop
push
fildll
and
mov
push
stc
sti
jnp
jmp
mull
dec
call
mov
cltd
or
xor
push
add
add
mov
dec
or
inc
push
add
add
xchg
or
add
and
xor
andl
inc
add
ret
inc
or
outsb
sarb
mov
jne
pop
add
shr
mov
inc
add
push
mov
push
std
ret
mov
push
add
add
push
fsub
and
sbb
mov
movsb
loope
sbb
jle
add
xchg
in
jae
cmp
add
push
add
jmp
imul
pusha
add
inc
add
mov
xchg
inc
add
jae
test
pusha
add
lret
popf
sahf
mov
and
mov
pop
imul
cmp
cmp
or
jbe
stc
lds
mov
push
hlt
pushf
gs
jp
out
inc
stos
xchg
xchg
ds
arpl
push
add
mov
add
fisttps
mov
add
add
add
lock
push
add
adc
gs
xor
mov
jns
add
in
fdivrl
sbb
inc
add
movsl
popa
pop
or
mov
test
add
aaa
inc
out
loope
ficoml
mov
jmp
mov
gs
shll
scas
rcll
jle
ds
add
cmpsb
jl
and
and
sahf
gs
nop
shrb
add
add
mov
jp
xchg
rcrb
lock
jnp
xchg
enter
std
jb
movsb
add
inc
add
vmwrite
mov
cmp
sbb
insl
imul
mov
xlat
cli
sub
sbb
push
sbb
sbb
add
jmp
stos
push
test
cmpsb
std
insb
add
lret
xchg
xchg
push
arpl
ljmp
fsub
outsl
dec
add
dec
add
pop
pop
rclb
mov
dec
arpl
pop
adc
std
mov
popf
fistpll
add
aad
sbb
pop
lret
xchg
pop
add
mov
clc
popf
js
push
in
add
imul
cmc
inc
mov
sub
push
test
jnp
cld
or
and
addr16
pushf
pop
add
mov
mov
sbb
inc
xchg
adc
add
adc
clc
sbbl
mov
add
mov
inc
out
sub
je
dec
add
adc
subb
and
std
mov
mov
add
adc
push
and
call
add
inc
sub
loope
xor
andl
add
push
jo
enter
sbb
xchg
insb
add
sbb
sbb
lods
lret
shr
and
in
cs
mov
jle
fmul
pop
jae
out
dec
cmp
add
xor
mov
dec
andb
test
incb
add
incl
mov
and
clc
ja
in
test
add
out
aas
jecxz
repz
pusha
add
add
xchg
stos
dec
jb
cli
outsb
xor
aas
fstpt
into
js
lret
lds
inc
add
test
ja
and
add
inc
stc
sbb
pop
inc
mov
adc
pop
enter
sbb
rcrl
sub
std
push
dec
aas
or
call
test
cld
dec
jge
cmpl
push
stos
mov
xlat
mov
dec
leave
outsl
lret
sub
and
cmp
xchg
mov
aas
and
inc
into
ljmp
sahf
push
push
push
in
pop
add
enter
addl
dec
int3
repnz
loope
add
imul
add
mov
fidivs
out
aad
dec
cmp
clc
push
mov
push
shlb
arpl
cmp
fistps
mov
jns
dec
rolb
add
pop
scas
imulb
movl
push
add
cmpl
cmpb
fwait
stos
mov
cmc
int
cltd
pushf
in
outsb
daa
ja
and
mov
inc
add
sbb
jl
icebp
test
divb
lret
sbb
rcl
xchg
fmuls
inc
mov
pushf
mov
iret
mov
add
roll
and
insl
dec
popa
pop
mov
js
test
mov
jg
test
sub
fldlg2
mov
or
sbb
icebp
jle
daa
int3
add
cltd
cmc
in
and
mov
inc
add
add
out
inc
add
loop
cwtl
inc
lods
out
cmp
addr16
pop
add
movsl
loope
loop
mov
ret
data16
mov
mov
sahf
bound
xchg
dec
inc
add
rol
pop
lods
leave
movsl
stc
gs
stos
mov
lock
push
or
outsb
adc
sbb
mov
lods
hlt
cmpsb
adc
add
push
and
fdivr
insb
add
inc
add
outsl
inc
sub
into
lret
cmp
mov
mov
xlat
out
inc
addl
add
add
loop
les
sbb
push
add
pop
add
sbb
int
lret
dec
nop
imul
ret
jl
insl
push
mov
inc
add
sbb
add
std
sub
mov
sti
repz
repz
aas
das
push
stos
cmpsb
js
int
shll
dec
add
xchg
mov
jno
popa
push
fdivl
pushw
aam
or
cltd
or
pushf
daa
cmp
mov
sbb
pop
sub
mov
add
or
into
mov
enter
add
insl
inc
add
cld
popa
mov
cli
sbb
ljmp
and
pop
das
adc
cmp
add
push
cmc
xchg
repz
xchg
aad
mov
push
add
cld
adc
push
push
xchg
mov
xchg
mov
add
insl
cmp
repz
inc
jecxz
add
push
inc
mov
jbe
in
pop
add
push
imul
daa
mov
mov
mov
mov
add
add
scas
das
push
pop
add
shrb
jecxz
shlb
jl
lods
in
test
pop
mov
mov
sub
fistpll
add
sub
mov
fstpt
cmp
xchg
push
add
add
inc
mov
cmpsb
pop
add
stc
jmp
mov
add
lea
inc
cmp
xchg
sub
lds
or
aas
xchg
fsub
mov
inc
add
nop
push
add
aaa
xchg
dec
jne
dec
outsb
or
add
jg
jnp
test
add
xor
add
xchg
ficompl
add
adc
xor
inc
cwtl
mov
arpl
nop
and
outsb
push
loop
shl
add
jne
subl
push
ds
fwait
or
push
mov
mov
arpl
xchg
test
add
push
dec
add
push
pop
add
pop
loopne
sti
inc
insl
aaa
arpl
mov
sbb
movsl
sbb
xor
and
push
add
sub
ljmp
fidivs
negb
fsubrl
out
repz
xor
cwtl
xchg
inc
xchg
roll
or
cltd
mov
into
sub
test
add
mov
and
lahf
aam
fucom
sbb
icebp
into
cmp
shlb
jmp
jmp
scas
insw
jno
ret
dec
add
sub
and
dec
dec
mov
cwtl
cmp
push
jnp
jb
cmp
clc
mov
pop
inc
or
xor
xchg
and
and
ljmp
out
xchg
iret
add
iret
imul
and
xorb
je
data16
adc
in
add
cmpsl
popa
jl
bound
add
mov
mov
iret
mov
pop
lahf
je
stos
mov
sub
add
mov
or
repz
out
jo
outsb
popa
pop
outsl
sub
add
addb
dec
cmpsl
sbb
adc
inc
and
les
data16
outsb
sbbb
call
add
sub
pusha
add
ss
pop
pop
and
push
fistpl
iret
aad
ret
jge
fwait
mov
xor
cmpsl
imul
add
pop
out
xor
mov
dec
push
push
dec
or
jo
push
pop
shl
movsb
adc
movb
lret
repz
add
adc
cmp
xlat
pop
add
push
xchg
add
pop
add
shlb
sub
add
and
jp
sub
and
icebp
add
rcll
cmp
add
ficomps
add
jecxz
push
and
enter
das
or
jb
in
ret
jl
repnz
pop
jl
sbb
mov
add
fadds
in
repnz
or
add
adcb
aam
jbe
scas
xchg
sti
pop
pop
add
push
adc
pop
add
add
jle
aad
push
mov
out
fsubr
cmc
pop
bound
adc
mov
ss
leave
fdivp
fbld
xchg
sbb
add
out
sbb
mov
shll
es
add
fadds
jb
mov
popl
sbb
sbb
add
and
test
adc
xchg
pop
pop
add
add
shrb
mov
mov
jne
gs
aas
ds
inc
shll
jp
fcomp
incl
fdivr
jo
out
cmp
leave
pushf
notb
jo
sbb
xor
je
jns
xor
add
sub
mov
loope
inc
xor
mov
std
out
imull
int3
sbb
insl
stc
pop
add
add
jb
mov
inc
add
test
push
ss
mov
std
loope
inc
adc
adc
dec
add
sub
mov
into
fwait
inc
cmp
lods
sbb
pop
cld
add
js
mov
push
xor
xlat
mov
lea
mov
cmc
adc
inc
and
daa
and
enter
aam
sbb
jo
adc
fidivrl
add
test
adc
shl
mov
stc
jg
insl
mov
mov
inc
add
lahf
mov
out
outsl
in
cld
xor
sbb
dec
leave
sahf
lahf
mov
lods
cmp
jecxz
and
adc
jbe
add
sub
mov
inc
or
xor
mul
dec
push
add
mov
pop
mov
test
dec
xchg
std
mov
add
and
std
fisubs
ret
add
jle
pop
sarb
pop
sbb
dec
pop
fidivrs
sbb
xchg
lods
adc
cmp
adc
or
pop
pop
add
gs
add
sbb
pop
sti
imulb
sub
inc
cmp
push
scas
lods
fsubrp
xchg
dec
pop
push
inc
mov
cmpsl
push
add
xchg
jecxz
add
inc
push
jmp
add
mov
mov
add
add
es
lock
xor
loop
xchg
jmp
fisttpl
mov
aam
mov
jle
lods
inc
movsb
leave
test
imulb
fcmovnb
and
add
dec
jo
xchg
movsb
movsb
roll
inc
fists
xor
pop
int
add
jae
inc
add
loopne
add
lret
xor
ja
jl
dec
cmpsl
sahf
push
pop
daa
icebp
notl
pop
les
inc
shlb
add
sahf
stos
jns
add
in
in
ds
inc
sar
outsl
out
mov
pslld
mov
insl
dec
add
addr16
stc
out
test
jecxz
add
sbb
shlb
xchg
out
mov
lret
pop
xor
xchg
xchg
jl
mov
add
push
xor
add
lcall
lods
lock
and
fwait
cmp
rcrl
jne
lret
jl
push
int
sbb
add
sbb
push
pop
fsubp
ret
jmp
inc
add
icebp
subb
dec
xchg
sub
leave
inc
add
push
add
je
sbb
cmpsl
mov
nop
push
imul
mov
mov
fsubrs
sbb
aas
roll
inc
ja
aaa
fdivrs
add
add
xor
rclb
popf
mov
xchg
daa
push
out
sbb
and
call
fnstsw
roll
or
jno
setae
sti
mov
inc
add
add
loop
les
les
pop
pop
add
mov
dec
pop
cs
int
jmp
lock
push
push
mov
sub
sbb
mov
mov
pop
sub
lea
add
dec
add
repnz
xor
add
sub
dec
add
xchg
shll
lcall
and
add
xchg
jle
cmpsb
lea
dec
daa
xchg
inc
test
add
ja
and
adc
fcoml
cmp
cmc
mov
add
and
pop
add
mov
cmp
cmp
in
push
cmp
add
dec
xchg
call
gs
sub
je
mov
push
mov
sub
lea
movl
clc
push
call
sub
add
and
mov
mov
and
test
je
mov
push
push
cld
call
test
stc
jne
inc
add
mov
add
push
push
push
push
call
test
jne
xor
cld
push
es
lea
movl
push
push
call
push
cmp
lea
jne
movzbl
or
add
mov
add
not
cld
xor
test
jne
call
xor
mov
add
ret
xor
mov
mov
stc
mov
bnd
cmp
mov
mov
mov
inc
or
lea
lea
add
xchg
shr
xchg
lock
sub
and
cld
jmp
push
mov
jne
xchg
jb
xor
add
outsb
mov
add
add
add
lods
xchg
jne
add
add
leave
adc
add
mov
stos
ficoml
test
add
lret
jp
add
mov
ret
push
sub
pop
or
xchg
or
mov
in
fbstp
dec
ret
push
add
adc
add
popl
in
cmp
mov
jno
pop
add
pop
adc
jl
mov
add
add
leave
cmp
inc
inc
add
icebp
std
lret
popl
mov
add
add
jg
and
xchg
stos
xor
and
test
out
bswap
pop
cld
push
int
pop
popf
push
jle
lret
sub
jo
fsubrs
pop
pop
pop
push
out
lods
inc
lods
lcall
and
cmpsb
in
pop
nop
dec
lea
mov
add
cmp
cld
stc
imulb
test
leave
and
mov
shl
lcall
add
jl
push
mov
icebp
movl
add
add
inc
add
pop
in
in
clc
test
cwtl
push
mov
cmp
out
mov
add
cmp
test
fnstcw
sbb
cmc
leave
pop
dec
add
out
neg
movsb
lods
sti
xchg
jae
add
ds
test
push
popl
js
out
aaa
mov
add
and
mov
mov
pop
add
push
add
sub
into
daa
xor
mov
add
pop
cmp
rol
mov
mov
mov
cmp
into
clc
lods
jl
cltd
sbb
jns
add
gs
aam
mov
or
sub
xchg
lods
lahf
jns
ret
hlt
push
hlt
xor
adcl
sbb
aaa
fistl
mov
lahf
scas
inc
add
in
dec
test
int
pop
pop
out
lea
mov
movsb
and
fisttpl
dec
sub
fucom
ljmp
sub
cmp
xlat
addr16
lahf
add
cmp
gs
ret
lahf
call
js
mov
adc
in
je
les
fdivrl
jp
rcll
rcr
mov
fucom
xchg
push
pop
add
mov
or
pop
and
clc
ljmp
jne
arpl
add
scas
cltd
xchg
mov
mov
das
gs
mov
out
cmpsb
aad
mov
test
fcmovnu
adc
xchg
mov
loope
scas
data16
dec
gs
add
in
scas
movsb
mov
aas
lods
arpl
add
dec
add
sbb
sub
andl
popf
cld
or
into
pop
cmp
mov
push
add
pop
jnp
sub
dec
rol
dec
sub
and
les
mov
les
rorb
push
test
sub
cmp
add
mov
in
add
fidivl
mov
xchg
fimuls
sbb
mov
es
shr
popa
call
mov
pusha
add
in
jb
ror
or
out
pop
or
mov
rclb
scas
xor
xor
jno
push
add
jns
fsqrt
cli
mov
sub
imul
ja
inc
add
push
cmp
adc
lock
dec
jo
jl
mov
pop
pop
or
and
clc
mov
hlt
add
push
test
add
inc
add
mov
xor
add
or
push
push
mov
xor
daa
push
mov
push
shll
outsb
aaa
aam
jg
mov
leave
roll
aas
pushf
mov
pop
jno
add
add
xlat
xchg
jnp
mov
mov
pop
xchg
inc
add
cli
popl
and
push
push
add
cmc
sub
add
ja
xlat
cmpsl
mov
mov
push
insb
add
push
mov
mov
add
xor
sbb
loop
pop
xchg
imul
dec
pop
fwait
divl
and
ds
xchg
push
fdivrl
outsl
lods
scas
nop
insl
lea
inc
ljmp
add
repz
sub
cmp
imul
add
mov
ret
add
add
sbb
aam
push
je
sub
sub
inc
lahf
mov
arpl
xchg
xor
fdivr
dec
cmpsb
repz
fstl
inc
xor
ljmp
out
pusha
add
cltd
fidivs
mov
adc
test
call
pop
out
mov
sub
loope
roll
shr
push
dec
addr16
push
pop
adc
clc
out
mov
lret
inc
add
cltd
xchg
loopne
push
xchg
push
stos
adc
mov
loopne
xchg
jne
adc
aad
or
add
or
aaa
leave
sbb
push
sbb
and
and
insb
add
push
xchg
fcomi
insb
add
add
or
pusha
add
add
rolb
add
outsl
idivl
icebp
cltd
cmp
adc
mov
scas
shlb
call
mov
jecxz
stos
pop
xchg
mov
add
dec
jb
push
pop
sti
push
add
jb
jae
xor
adc
add
push
mov
dec
decb
lock
loop
mov
xor
xchg
mov
jno
xor
stos
cmp
pusha
add
mov
and
pushf
mov
int
aam
dec
xor
add
ret
into
add
sbb
adc
mulb
test
lcall
add
push
stos
adc
push
xchg
call
sbbb
out
in
movd
test
sub
xor
lahf
pop
add
das
aad
xor
mov
push
jp
je
sbb
inc
leave
mov
gs
sar
sub
dec
add
mov
orb
mov
inc
jle
or
pop
out
xchg
and
xchg
imul
adc
stc
out
lcall
int
cli
adcl
cmp
outsl
jnp
out
adc
call
popf
inc
inc
add
ja
int
jmp
push
subl
lret
dec
lock
xor
sbb
pushf
cmp
das
pop
add
and
rorl
jae
or
into
into
test
fiaddl
call
mov
lea
mov
mov
or
fiaddl
add
adc
mov
sbb
into
mov
xlat
and
aam
mov
aam
loopne
jno
mov
insl
insl
arpl
ja
repnz
pop
ftst
pop
sbb
mov
push
add
shrl
call
js
adc
pop
add
dec
inc
add
add
add
ds
or
shl
movb
pop
adc
xor
cltd
movsb
xchg
jns
mov
nop
gs
push
mov
lea
add
mov
test
out
xor
imul
iret
sbb
jo
mov
data16
fcmovnu
xor
repnz
sbb
push
pushf
xlat
movsl
or
sub
mov
addr16
add
or
daa
xor
arpl
repz
push
jae
loop
xlat
inc
cmpsl
jp
adc
lock
jnp
pop
jl
jmp
add
dec
cltd
std
outsl
inc
jl
or
cmp
daa
rclb
dec
js
scas
adc
adc
xor
add
lock
and
hlt
movsb
mov
mov
jns
fadds
jl
int3
and
loope
pop
fisubrl
add
inc
xchg
mov
sub
stos
sub
jae
popf
cld
push
cwtl
xor
rcll
scas
cmp
lret
ds
sbb
ljmp
mov
inc
xchg
out
aas
xor
add
xor
imul
std
out
ljmp
lea
iret
bnd
add
les
add
add
xchg
xor
ljmp
outsl
or
pop
rcll
cltd
cmpsb
or
divb
dec
xor
add
gs
mov
aaa
sub
inc
add
cli
outsb
gs
inc
lods
roll
jne
sbb
and
loop
mov
movsl
mov
jnp
rcrb
add
bound
and
and
notb
inc
pop
or
push
add
add
mov
pop
add
loope
popf
repnz
repz
in
and
push
or
dec
mov
shlb
ja
bound
into
xchg
xor
jae
pop
jge
fmuls
ret
adc
sti
push
sbb
add
add
cmc
push
rolb
add
int3
shl
clc
inc
add
xchg
pop
push
ffree
jb
add
xorl
jecxz
addr16
addr16
cmpsb
stos
lock
dec
jle
sahf
data16
mov
push
inc
shlb
js
mov
mov
lods
jo
shl
aad
push
jmp
push
add
add
sbb
sub
pushf
mov
jge
pop
pop
lret
lods
sahf
je
popf
lcall
xchg
popa
divl
add
loope
clc
and
mov
outsb
xchg
ret
add
lods
std
xchg
add
push
add
add
outsb
dec
add
loope
add
outsb
jmp
daa
ja
sbb
mov
aaa
es
mov
jge
mov
imul
add
lods
push
add
push
push
mov
insl
jb
mov
subl
add
mov
push
js
mov
arpl
mov
cmp
add
or
cmp
push
mov
dec
xchg
and
push
sbb
cmp
stos
sarl
xchg
scas
inc
add
add
stc
cltd
mov
nop
jns
repnz
or
push
in
add
mov
push
add
sbb
and
mov
stos
dec
in
sub
push
pop
ret
in
mov
sub
lods
lods
mov
pop
call
pop
sub
iret
lock
dec
jne
shrb
add
jg
add
push
xchg
ss
push
ds
add
or
mov
jbe
mov
and
add
jne
lcall
inc
dec
cmc
mov
mov
call
cmp
mov
dec
fadds
cmp
and
adc
xchg
mov
inc
inc
mov
mov
sub
test
add
bound
in
in
imul
jae
gs
add
mov
ret
mov
sbb
or
jl
push
cmp
gs
xor
cmp
les
add
insb
add
sub
inc
add
in
sub
call
out
mov
push
jle
cltd
mov
add
or
repz
add
jo
in
negb
cmp
mov
mov
pop
add
ret
ficompl
fldcw
cs
clc
fsubs
adc
mov
repnz
loope
loopne
adc
int3
in
pusha
add
xchg
loopne
xchg
add
mov
mov
push
in
test
inc
or
outsb
ss
ret
lds
leave
mov
movsb
mov
mov
iret
push
out
or
sub
mov
add
mov
lods
inc
cmpsb
ror
nop
push
xchg
push
ljmp
jge
mov
add
jo
xor
je
jnp
addr16
jg
inc
lcall
gs
das
cmpsb
inc
mov
add
fdivrs
adc
pop
jb
scas
xlat
pop
pop
sbb
mov
mov
or
sbb
jbe
xchg
addr16
mov
test
cltd
inc
gs
dec
add
add
pop
add
add
xchg
cltd
nop
push
pop
icebp
fdivrs
jmp
push
add
add
push
dec
testw
add
dec
aaa
xor
shl
nop
mov
or
or
sub
mov
gs
xor
pusha
add
icebp
std
push
jp
dec
idiv
push
add
popa
xchg
sbbl
inc
sbb
pop
sub
lret
pop
arpl
xor
add
inc
loope
in
js
cltd
aad
pop
outsb
clc
jle
and
gs
clc
xchg
test
popa
xor
cmp
dec
add
jmp
scas
inc
mov
stc
cmp
add
loop
mov
cwtl
shr
sub
outsl
les
decb
adc
faddl
inc
sti
mov
pop
add
add
imul
sbb
mov
add
push
push
ret
pop
mov
jle
shrb
insb
add
inc
dec
inc
loop
xchg
jne
xchg
xor
call
mov
int3
inc
add
cmp
xor
test
fld
fwait
mov
add
inc
add
add
sti
ret
mov
pop
fadds
sbb
in
jne
cmc
xchg
pop
adc
add
jmp
jns
push
mov
dec
inc
or
push
div
jle
outsl
or
push
add
dec
shlb
loop
xchg
fnstcw
add
dec
mov
lods
insl
and
push
add
ror
mov
mov
in
add
sub
mov
in
sbb
arpl
add
add
xor
push
out
scas
or
out
arpl
jns
mov
lahf
ficoml
fidivrs
lds
int
add
jge
cmpsl
jecxz
cmovp
pop
adc
push
stos
sub
sub
roll
add
xchg
imul
push
fistl
cmpsb
fwait
outsb
push
fs
ret
ljmp
test
repz
test
lods
aad
xchg
pop
es
add
lods
cmp
pop
xchg
push
push
add
add
jp
cmp
xor
aam
fwait
jge
aaa
mov
mov
add
jb
dec
in
cwtl
mov
or
xchg
mov
shrl
adc
call
add
sbb
fstl
xor
adc
jmp
insb
add
out
clc
repnz
nop
nop
jae
add
add
stc
push
clc
repnz
nop
nop
jae
cltd
divb
str
add
add
add
add
clc
repnz
nop
nop
jae
add
mov
jp
lods
add
repnz
nop
nop
jae
int3
add
add
sldt
nop
inc
call
clc
repnz
nop
nop
jae
add
add
mov
push
js
add
repnz
nop
nop
jae
testb
nop
scas
mov
and
mov
xchg
ret
add
add
add
jmp
cs
xor
clc
repnz
nop
nop
jae
jbe
jne
testl
adcl
repnz
nop
nop
jae
data16
xchg
std
shll
jp
and
add
clc
repnz
nop
nop
jae
add
rcrb
js
add
orl
nop
jae
add
or
add
fsubs
add
add
out
push
cmp
add
mov
dec
jne
jp
inc
int3
jbe
mul
cvttps2pi
mov
clc
repnz
nop
nop
jae
add
add
mov
mov
mov
inc
or
push
mov
leave
nop
jmp
mov
scas
add
jmp
test
dec
fwait
push
mov
xchg
ret
add
add
xchg
add
add
add
add
nop
jae
add
jmp
les
clc
adc
add
nop
jmp
pop
and
add
ja
clc
repnz
nop
nop
jae
nop
add
or
pusha
mov
mov
xchg
ret
add
int3
sldt
es
popa
add
sbb
push
mov
xchg
ret
push
jp
orl
add
add
clc
repnz
nop
nop
jae
add
dec
add
je
jmp
clc
mov
xchg
ret
mov
mov
add
mov
rcrb
push
mov
leave
nop
jmp
add
add
lods
inc
add
mov
push
mov
xchg
ret
add
shl
add
dec
add
mov
pop
clc
repnz
nop
nop
jae
int3
add
add
add
add
add
nop
push
mov
leave
nop
jmp
add
add
add
arpl
sar
repnz
nop
nop
jae
add
dec
testl
mov
xor
push
mov
xchg
ret
nop
add
jecxz
add
loope
roll
repnz
nop
nop
jae
xchg
add
mov
mov
mov
sbb
add
dec
leave
jl
add
add
push
mov
push
clc
repnz
nop
nop
jae
scas
add
add
mov
pusha
push
add
cld
nop
nop
jae
add
orl
hlt
icebp
mov
fistpl
push
mov
xchg
ret
dec
jp
pop
push
add
add
add
add
push
push
mov
xchg
ret
add
scas
sahf
and
add
clc
repnz
nop
nop
jae
add
jbe
add
add
sub
nop
push
mov
leave
nop
jmp
add
add
jne
cld
jecxz
int
dec
imul
nop
jae
add
mov
hlt
and
dec
cmp
repnz
nop
nop
jae
nop
lods
pop
add
add
add
out
je
push
ljmp
add
pop
testb
or
dec
jmp
add
xchg
std
mov
and
repnz
nop
nop
jae
add
roll
shl
dec
mov
add
clc
repnz
nop
nop
jae
add
add
add
add
int3
add
clc
repnz
nop
nop
jae
sbb
add
ss
sysret
add
loop
push
mov
xchg
ret
add
add
add
jecxz
jmp
add
call
leave
nop
jmp
dec
scas
popa
sbb
add
cltd
outsb
pop
sub
repnz
nop
nop
jae
sub
push
add
inc
ss
add
fisttpll
in
leave
nop
jmp
add
add
mov
dec
in
mov
clc
repnz
nop
nop
jae
std
sahf
inc
add
sbb
mov
push
mov
xchg
ret
add
add
add
scas
andps
idivl
rclb
add
add
add
jne
add
dec
ds
add
inc
jmp
test
adc
add
repnz
nop
nop
jae
add
add
push
clc
repnz
nop
nop
jae
add
add
cmpl
push
nop
push
mov
leave
nop
jmp
lods
add
add
and
push
addr16
push
mov
xchg
ret
icebp
add
dec
lods
popa
jp
sldt
lea
test
sbb
add
repnz
nop
nop
jae
add
testb
lea
mov
leave
nop
jmp
setle
sub
add
add
push
mov
leave
nop
jmp
add
and
add
ret
mov
push
mov
xchg
ret
roll
add
add
add
cld
nop
nop
jae
add
sub
scas
add
add
add
lcall
leave
nop
jmp
getsec
ss
data16
add
lea
sub
repnz
nop
nop
jae
add
push
add
add
popa
and
add
push
mov
xchg
ret
mov
add
add
clc
repnz
nop
nop
jae
add
jbe
add
ss
cmpsb
inc
inc
add
out
push
push
add
pop
clc
repnz
nop
nop
jae
pop
sub
jp
pusha
add
pop
dec
mov
lock
inc
jne
clc
repnz
nop
nop
jae
xchg
addl
add
mov
call
in
leave
nop
jmp
icebp
add
fcomip
sbb
fdiv
jbe
dec
add
dec
pop
inc
add
or
add
mov
clc
repnz
nop
nop
jae
add
pop
add
sahf
add
divl
push
stc
jne
clc
repnz
nop
nop
jae
add
mov
mov
clc
repnz
nop
nop
jae
negl
add
popa
pop
lea
clc
repnz
nop
nop
jae
jmp
add
es
jecxz
and
push
mov
xchg
ret
add
add
xchg
int3
sub
push
or
testb
push
add
sub
add
add
aaa
adc
lret
mov
leave
nop
jmp
dec
xchg
shl
cld
add
dec
dec
movb
loopne
add
clc
repnz
nop
nop
jae
jp
rolb
rcrl
je
add
nop
push
mov
leave
nop
jmp
fcompl
add
mov
clc
repnz
nop
nop
jae
add
mov
add
and
add
cmpw
nop
push
mov
leave
nop
jmp
xchg
add
add
inc
jbe
ljmp
nop
jae
jmp
mov
div
add
popa
rclb
push
nop
push
mov
leave
nop
jmp
add
add
aaa
mov
add
repnz
nop
nop
jae
add
and
add
mov
mov
leave
nop
jmp
es
dec
add
sbb
data16
jmp
nop
push
mov
leave
nop
jmp
add
shrb
fdivr
dec
nop
push
mov
leave
nop
jmp
or
add
add
mov
roll
mov
leave
nop
jmp
ss
sub
mov
xchg
ret
add
sub
icebp
filds
sahf
add
ret
clc
repnz
nop
nop
jae
addl
add
add
nop
cld
or
div
nop
push
mov
leave
nop
jmp
faddl
add
add
add
mov
cmp
ret
add
add
movb
inc
xor
test
xchg
ret
add
dec
jne
jbe
add
es
inc
mov
clc
repnz
nop
nop
jae
int3
sbb
add
add
nop
testb
mov
nop
nop
jae
add
int3
int3
popa
rolb
add
call
clc
repnz
nop
nop
jae
fsubrs
jp
mov
popa
push
push
mov
xchg
ret
add
icebp
testl
or
nop
insb
add
dec
push
nop
push
mov
leave
nop
jmp
add
nop
lods
mov
mov
leave
nop
push
mov
leave
nop
jmp
add
inc
inc
add
add
sub
add
mov
leave
nop
jmp
cld
add
jne
aaa
add
add
clc
repnz
nop
nop
jae
inc
shll
add
mov
clc
repnz
nop
nop
jae
jp
jmp
mov
cmpsb
loopne
out
ljmp
repnz
nop
nop
jae
rcll
rclb
push
mov
xchg
ret
add
nop
add
ss
testl
dec
fld1
clc
repnz
nop
nop
jae
sub
add
jp
dec
popa
and
xor
inc
add
add
cld
rcrl
add
call
nop
push
mov
leave
nop
jmp
jne
add
mov
add
dec
je
mov
movb
push
mov
leave
nop
jmp
dec
scas
add
mov
sub
filds
orb
add
or
add
repnz
nop
nop
jae
add
cltd
dec
testb
push
inc
add
mov
xchg
ret
sahf
faddl
sbb
and
mov
xchg
ret
jbe
int3
pop
add
add
xchg
movsb
push
add
fwait
push
mov
xchg
ret
add
add
add
add
aaa
mov
clc
repnz
nop
nop
jae
or
add
mov
jbe
lods
pop
fld1
push
mov
xchg
ret
add
add
sbb
dec
add
or
or
repnz
nop
nop
jae
faddl
add
icebp
add
add
add
push
mov
xchg
ret
inc
add
jecxz
jp
hlt
std
cmpsb
mov
add
nop
push
mov
leave
nop
jmp
inc
lods
jp
add
sub
es
lahf
cmp
push
mov
xchg
ret
icebp
ds
add
add
add
mov
clc
repnz
nop
nop
jae
add
jbe
add
lods
cmp
repnz
nop
nop
jae
or
fdiv
dec
add
nop
push
mov
leave
nop
jmp
and
add
scas
add
add
fimuls
add
arpl
mull
add
add
cmp
cld
nop
nop
jae
add
sbb
add
add
mov
xchg
ret
hlt
mov
add
add
add
add
or
push
clc
repnz
nop
nop
jae
add
mov
add
add
fistpl
nop
push
mov
leave
nop
jmp
mov
pop
push
jp
int3
jbe
add
or
clc
repnz
nop
nop
jae
add
add
add
push
scas
add
push
pop
jmp
add
jbe
mov
lods
and
add
repnz
nop
nop
jae
std
add
add
sbb
not
push
mov
xchg
ret
add
add
cltd
filds
add
sahf
add
push
mov
leave
nop
jmp
add
add
xchg
add
dec
cmp
nop
jae
add
pop
pop
add
sbb
mov
sahf
and
cld
nop
nop
jae
mov
sub
xchg
mov
nop
push
mov
leave
nop
jmp
and
add
add
sbbl
ret
add
fadds
dec
add
jmp
add
lods
mov
clc
repnz
nop
nop
jae
dec
jne
add
add
sbb
sbb
push
mov
xchg
ret
and
add
jne
add
scas
jne
nop
push
mov
leave
nop
jmp
ds
add
xchg
mov
imul
subl
add
mov
add
add
mov
int
pop
jae
repnz
nop
nop
jae
data16
scas
add
add
imul
clc
repnz
nop
nop
jae
pop
filds
add
add
pop
add
add
repnz
nop
nop
jae
add
add
add
add
cld
nop
nop
jae
add
scas
add
add
add
mov
xchg
ret
jbe
add
add
add
add
sub
and
subb
xchg
ret
int3
mov
add
add
lods
add
pop
mov
cld
nop
nop
jae
add
pop
lods
inc
add
cltd
dec
add
mov
mov
clc
repnz
nop
nop
jae
roll
rorl
int3
aaa
shrl
repnz
nop
nop
jae
add
mov
addl
mov
push
clc
repnz
nop
nop
jae
pusha
add
pop
inc
roll
jecxz
fwait
pusha
push
mov
xchg
ret
add
sahf
add
add
str
mov
jg
nop
push
mov
leave
nop
jmp
jbe
jne
pop
add
pop
add
fistpl
push
mov
xchg
ret
scas
jecxz
aaa
popa
aaa
inc
jbe
add
enter
in
add
add
clc
repnz
nop
nop
jae
add
lods
add
add
mov
clc
repnz
nop
nop
jae
add
cltd
xchg
inc
add
iret
mov
push
mov
xchg
ret
dec
pop
add
jecxz
ds
jp
mov
cld
nop
nop
jae
add
add
dec
and
cmp
mov
xchg
ret
add
add
mov
repnz
nop
nop
jae
lods
add
pop
jp
jp
add
add
sbb
push
mov
xchg
ret
nop
add
add
add
clc
repnz
nop
nop
jae
add
add
mov
inc
mov
jb
arpl
push
mov
leave
nop
jmp
cmovg
add
nop
add
mov
movzwl
push
mov
xchg
ret
add
jmp
add
int3
push
add
push
clc
repnz
nop
nop
jae
rorb
nop
dec
add
mov
or
es
lods
clc
repnz
nop
nop
jae
add
add
add
jmp
push
outsl
rep
clc
repnz
nop
nop
jae
add
add
sbb
pusha
nop
add
add
arpl
repnz
nop
nop
jae
mov
sub
pop
pop
push
mov
xchg
ret
add
popa
mov
add
add
jmp
aas
push
push
mov
xchg
ret
lods
pop
str
add
push
fcoms
pop
xor
clc
repnz
nop
nop
jae
add
add
add
mov
test
cld
clc
repnz
nop
nop
jae
add
add
testb
inc
clc
repnz
nop
nop
jae
add
dec
ds
mov
clc
repnz
nop
nop
jae
inc
add
ds
nop
push
mov
leave
nop
jmp
inc
aaa
and
add
pop
or
clc
repnz
nop
nop
jae
add
aaa
add
testb
add
clc
repnz
nop
nop
jae
add
fdivrs
push
add
dec
mov
or
repnz
nop
nop
jae
sbb
fcom
sldt
andl
mov
xchg
ret
or
aaa
add
add
add
fwait
subl
push
mov
xchg
ret
add
mov
add
mov
clc
repnz
nop
nop
jae
add
ss
add
add
add
cld
nop
nop
jae
add
add
cld
psubsw
add
int3
and
add
repnz
nop
nop
jae
cld
add
add
lea
clc
repnz
nop
nop
jae
add
mov
int3
dec
mov
clc
repnz
nop
nop
jae
scas
aaa
add
add
add
js
or
in
jp
mov
add
add
add
lcall
push
cmc
fwait
push
mov
xchg
ret
pop
add
std
rolb
add
add
cld
nop
nop
jae
mov
sahf
jmp
sbb
push
push
mov
xchg
ret
icebp
std
xchg
roll
add
fadds
add
add
mov
call
inc
add
add
or
int
push
mov
xchg
ret
or
jmp
add
cltd
jbe
mov
andl
cld
nop
nop
jae
add
add
add
testl
add
add
clc
repnz
nop
nop
jae
jp
jecxz
cltd
or
movsb
cmp
add
clc
repnz
nop
nop
jae
sbb
sahf
add
jp
lahf
push
mov
xor
arpl
pop
add
xorl
aas
flds
jae
subl
jae
add
sbb
push
add
push
mov
xchg
ret
hlt
add
push
add
jecxz
icebp
add
repnz
nop
nop
jae
add
mul
or
movsl
ret
clc
repnz
nop
nop
jae
add
mov
add
mov
ja
clc
repnz
nop
nop
jae
add
add
sub
inc
mov
mov
xchg
ret
scas
add
mov
add
or
xor
fistl
nop
jmp
jbe
pop
cld
sahf
xchg
sub
xor
add
sbb
adc
xchg
mov
pop
inc
add
inc
add
cltd
add
add
jecxz
popf
pop
nop
push
mov
leave
nop
jmp
add
roll
sbb
sbb
add
pop
push
mov
xchg
ret
jecxz
add
mov
add
roll
fdivrs
add
rolb
int3
inc
rorl
icebp
jmp
clc
repnz
nop
nop
jae
filds
pusha
add
scas
verw
jbe
push
add
xchg
mov
in
leave
nop
jmp
add
add
pusha
add
roll
add
mov
mov
xchg
ret
add
and
jecxz
add
scas
sbb
sbb
mov
xchg
ret
add
sbb
add
add
add
ds
addb
push
mov
leave
nop
jmp
add
ltr
cld
movsb
jne
in
leave
nop
jmp
sub
sub
add
push
mov
leave
nop
jmp
add
mov
ss
add
jne
out
pop
push
mov
xchg
ret
add
add
sbb
pop
icebp
int3
add
shlb
pop
push
mov
xchg
ret
scas
pusha
add
sahf
add
scas
jp
jbe
cmp
nop
push
mov
leave
nop
jmp
hlt
add
icebp
lods
add
fadds
clc
repnz
nop
nop
jae
add
add
inc
or
lods
jne
lods
sbb
fbstp
xchg
ret
add
nop
aaa
fsubrl
popa
pop
cmp
nop
push
mov
leave
nop
jmp
rcll
add
in
leave
nop
jmp
popa
add
fadds
jecxz
std
jecxz
add
repz
clc
repnz
nop
nop
jae
add
add
mov
pop
dec
bound
test
cwtl
clc
hlt
xchg
mov
sbb
cld
nop
nop
jae
cld
add
jp
add
filds
scas
xchg
clc
repnz
nop
nop
jae
add
add
inc
mov
clc
repnz
nop
nop
jae
rorb
add
add
sahf
es
sub
clc
repnz
nop
nop
jae
sbb
or
pop
psllw
sahf
and
add
fsubl
add
add
sub
add
ds
test
repnz
nop
nop
jae
std
add
mov
mov
clc
repnz
nop
nop
jae
add
dec
scas
and
nop
push
mov
leave
nop
jmp
jecxz
add
or
add
iret
push
push
mov
xchg
ret
jp
jecxz
sldt
mov
xchg
ret
nop
push
mov
leave
nop
jmp
sub
addl
sahf
add
add
sub
sbb
nop
jmp
inc
cltd
inc
cld
add
shrd
clc
repnz
nop
nop
jae
add
fadds
inc
jne
add
std
ss
jo
xor
add
repnz
nop
nop
jae
scas
add
cld
add
jmp
decl
jp
add
mov
add
jmp
hlt
loopne
push
push
mov
xchg
ret
sbb
popa
pop
add
add
xor
pushf
sbbl
add
cmp
ret
icebp
pop
dec
add
add
and
movb
mov
xchg
ret
std
rorb
pop
icebp
add
and
add
jmp
sbb
jbe
filds
mov
jmp
sbb
repnz
nop
nop
jae
jmp
jne
testb
add
push
mov
xchg
ret
add
es
or
add
pop
add
add
nop
push
mov
leave
nop
jmp
add
jecxz
cld
rolb
fwait
clc
repnz
nop
nop
jae
es
dec
add
scas
add
call
clc
repnz
nop
nop
jae
add
add
idivb
xlat
push
clc
repnz
nop
nop
jae
pop
lods
jp
cltd
faddl
add
or
repnz
nop
nop
jae
add
add
add
or
sub
leave
nop
jmp
roll
add
add
add
add
xor
fistpl
clc
repnz
nop
nop
jae
ds
add
add
add
sub
push
mov
leave
nop
jmp
add
add
icebp
sahf
or
lods
aam
pop
clc
repnz
nop
nop
jae
dec
sub
add
les
fisttpl
popa
push
inc
add
testl
add
scas
cld
dec
rep
clc
repnz
nop
nop
jae
cld
add
imul
add
fsubs
add
push
mov
leave
nop
jmp
add
div
add
add
inc
add
repnz
nop
nop
jae
icebp
jp
jne
pop
add
clc
repnz
nop
nop
jae
aaa
dec
mov
sbb
test
add
xor
cmp
ret
xchg
add
add
add
xchg
in
clc
repnz
nop
nop
jae
add
jne
push
mov
add
nop
push
mov
leave
nop
jmp
mov
pminub
mov
nop
push
mov
leave
nop
jmp
mov
add
je
cmp
mov
xchg
ret
add
hlt
add
scas
add
fcomp
je
clc
repnz
nop
nop
jae
ss
sbb
mov
mov
mulb
add
add
add
inc
add
mov
scas
call
cld
nop
nop
jae
add
add
add
rcll
repnz
nop
nop
jae
ds
xchg
or
pop
cmpl
nop
push
mov
leave
nop
jmp
sarl
popa
add
testl
jne
clc
repnz
nop
nop
jae
add
mov
into
jne
add
add
clc
repnz
nop
nop
jae
add
icebp
pusha
sbb
scas
add
mov
push
mov
xchg
ret
add
data16
sub
push
mov
leave
nop
jmp
and
mov
jmp
push
mov
leave
nop
jmp
add
add
add
test
pop
clc
repnz
nop
nop
jae
add
sub
inc
add
hlt
or
mov
add
clc
repnz
nop
nop
jae
faddl
cltd
add
mov
clc
repnz
nop
nop
jae
add
add
add
mov
nop
nop
jae
add
add
movb
add
inc
add
aas
add
imul
add
int3
ss
add
ss
lahf
pusha
clc
repnz
nop
nop
jae
pop
dec
add
add
add
dec
pop
push
mov
xchg
ret
pop
aaa
add
jmp
add
jp
sub
dec
inc
add
dec
sub
add
pop
mov
xor
push
mov
leave
nop
jmp
add
inc
jecxz
add
jmp
pop
mov
inc
stc
add
clc
repnz
nop
nop
jae
or
push
nop
pop
add
jmp
gs
clc
repnz
nop
nop
jae
add
add
add
inc
add
add
add
nop
push
mov
leave
nop
jmp
cltd
cld
add
add
or
jl
inc
mov
nop
push
mov
leave
nop
jmp
add
add
add
mov
add
es
push
clc
repnz
nop
nop
jae
jp
mov
add
add
add
push
clc
repnz
nop
nop
jae
jmp
cltd
sahf
cltd
adc
mov
jp
inc
add
sub
aaa
add
data16
mov
dec
test
xchg
ret
add
add
add
jl
and
adc
add
add
add
add
xor
clc
repnz
nop
nop
jae
add
add
add
add
cld
nop
nop
jae
jmp
negb
cmc
push
clc
repnz
nop
nop
jae
add
hlt
add
scas
sub
dec
popa
push
mov
xchg
ret
dec
add
jne
hlt
mov
add
mov
pop
clc
repnz
nop
nop
jae
fildll
xchg
add
and
adcb
outsl
mov
clc
repnz
nop
nop
jae
fdiv
add
add
dec
add
add
mov
push
mov
xchg
ret
dec
scas
add
add
add
lods
int3
pop
ja,pt
lret
nop
push
mov
leave
nop
jmp
add
add
add
test
cmp
test
repnz
nop
nop
jae
add
scas
mov
push
clc
repnz
nop
nop
jae
push
mov
add
or
add
add
repnz
nop
nop
jae
xchg
add
cld
add
add
enter
nop
nop
jae
add
add
testb
add
pop
mov
mov
clc
repnz
nop
nop
jae
inc
pop
mov
add
pusha
add
loop
add
add
xbegin
jae
add
jmp
xchg
add
push
mov
xchg
ret
add
data16
add
add
ret
xor
push
mov
xchg
ret
add
add
add
sahf
add
cld
nop
nop
jae
add
add
add
sub
sbb
fistpl
push
mov
xchg
ret
add
jbe
mov
add
mov
cmpsb
ss
add
repnz
nop
nop
jae
mov
add
jbe
add
add
clc
repnz
nop
nop
jae
mov
add
es
jecxz
adcl
cld
nop
nop
jae
jne
pop
icebp
add
add
lea
clc
repnz
nop
nop
jae
add
dec
add
roll
fiaddl
sbb
cmp
nop
jmp
add
sbb
add
sbb
repnz
nop
nop
jae
add
add
add
fwait
xor
clc
repnz
nop
nop
jae
add
mov
fadds
sbb
sub
nop
push
mov
leave
nop
jmp
add
jp
jp
or
add
jecxz
popa
nop
push
mov
leave
nop
jmp
fmull
add
add
push
repnz
xor
nop
pop
sub
push
mov
leave
nop
jmp
add
mov
push
nop
push
mov
leave
nop
jmp
add
icebp
add
jp
sub
lret
mov
push
mov
xchg
ret
pusha
add
add
add
cltd
add
stos
call
nop
push
mov
leave
nop
jmp
inc
sbb
mov
push
push
mov
xchg
ret
add
add
ss
add
jp
mov
add
push
add
inc
add
pop
add
dec
psadbw
clc
repnz
nop
nop
jae
add
int3
add
cltd
push
add
ds
cmp
pop
lea
nop
push
mov
leave
nop
jmp
add
jp
testl
pushf
jle
pop
push
push
mov
xchg
ret
add
mov
scas
roll
rolb
mov
nop
push
mov
leave
nop
jmp
add
sbb
divl
add
dec
clc
dec
inc
nop
push
mov
leave
nop
jmp
mov
cmovae
add
fdiv
dec
nop
push
mov
leave
nop
jmp
roll
inc
add
xor
add
push
ss
lcall
je
clc
repnz
nop
nop
jae
add
add
add
jle
pop
push
clc
repnz
nop
nop
jae
add
add
mov
scas
add
add
rorl
add
clc
repnz
nop
nop
jae
nop
add
aaa
or
lret
push
mov
xchg
ret
shrl
xchg
add
das
mov
push
mov
xchg
ret
xchg
pop
add
fadds
add
add
int3
sbb
je
add
clc
repnz
nop
nop
jae
or
add
xorb
repnz
nop
nop
jae
testl
sahf
add
clc
sub
mov
repnz
nop
nop
jae
add
xchg
pop
add
int3
dec
add
xor
clc
repnz
nop
nop
jae
sbb
sbb
add
push
mov
xchg
ret
add
add
add
neg
add
pop
add
clc
repnz
nop
nop
jae
jp
or
add
cld
add
sahf
add
push
push
add
int3
int
test
repnz
nop
nop
jae
add
or
mov
dec
xchg
mov
clc
repnz
nop
nop
jae
mov
add
sahf
sub
sahf
cmp
sbb
clc
repnz
nop
nop
jae
add
add
icebp
add
pop
push
mov
xchg
ret
scas
add
add
xchg
add
add
inc
xor
clc
repnz
nop
nop
jae
push
rolb
and
adc
loop
push
mov
leave
nop
jmp
scas
add
lods
mov
clc
repnz
nop
nop
jae
subl
jp
dec
scas
add
dec
mov
nop
push
mov
leave
nop
jmp
add
add
add
jne
mov
clc
repnz
nop
nop
jae
add
dec
add
testl
add
xlat
push
clc
repnz
nop
nop
jae
int3
add
mov
repz
clc
repnz
nop
nop
jae
sub
add
mov
add
add
repnz
nop
nop
jae
add
add
or
add
add
call
clc
repnz
nop
nop
jae
inc
popa
xchg
addl
and
nop
push
mov
leave
nop
jmp
add
add
add
nop
push
mov
leave
nop
jmp
jmp
add
data16
sbb
shlw
clc
repnz
nop
nop
jae
dec
jp
add
scas
add
add
clc
repnz
nop
nop
jae
add
sub
add
popa
add
add
repnz
nop
nop
jae
mulb
add
mov
push
mov
xchg
ret
inc
add
mov
pusha
add
popa
xlat
stos
clc
repnz
nop
nop
jae
dec
hlt
add
jbe
jne
movb
cld
nop
nop
jae
add
add
testl
sldt
clc
repnz
nop
nop
jae
sbb
add
mull
aaa
ret
pop
clc
repnz
nop
nop
jae
pop
add
add
cld
or
lar
pop
add
mov
mov
add
clc
repnz
nop
nop
jae
fildll
rorl
ss
test
jmp
mov
shufps
testb
sldt
add
add
cld
nop
nop
jae
testb
fcomp
add
add
jp
adc
cld
nop
nop
jae
add
scas
add
or
push
inc
add
add
add
add
hlt
or
sbb
xorl
clc
repnz
nop
nop
jae
mov
add
jp
push
mov
nop
push
mov
leave
nop
jmp
scas
add
mov
add
add
test
sub
fwait
clc
repnz
nop
nop
jae
add
add
add
add
add
sti
nop
push
mov
leave
nop
jmp
or
add
dec
sahf
add
push
mov
add
add
fiaddl
add
in
dec
and
or
aaa
mov
xor
nop
push
mov
leave
nop
jmp
add
sbb
add
daa
jne
clc
repnz
nop
nop
jae
add
add
add
xadd
add
call
cmp
ret
add
fsubr
add
addl
rorb
cld
nop
nop
jae
int3
dec
add
add
icebp
dec
add
je
rol
or
repnz
nop
nop
jae
xchg
fdiv
add
pop
pop
xchg
inc
add
fstps
mov
xchg
ret
add
mulb
cld
nop
pop
cld
subl
ds
mov
clc
repnz
nop
nop
jae
nop
lods
pusha
jbe
popa
pop
xchg
push
add
push
mov
xchg
ret
add
sbb
mov
mov
cld
nop
nop
jae
addl
mov
add
xor
cmp
clc
repnz
nop
nop
jae
sarb
scas
repz
clc
repnz
nop
nop
jae
add
add
sub
add
mov
rcrl
jae
xchg
add
add
pop
cltd
and
test
cld
nop
nop
jae
inc
add
mov
addl
dec
sub
das
push
inc
add
add
add
lods
add
fisttps
and
repnz
nop
nop
jae
divl
add
jmp
add
push
mov
xchg
ret
pop
add
add
add
pop
add
add
sub
mov
xchg
ret
add
add
sbb
add
add
insb
add
add
clc
repnz
nop
nop
jae
add
filds
add
push
add
push
cltd
push
shl
push
mov
xchg
ret
add
add
add
sub
outsb
xchg
pop
push
mov
xchg
ret
xchg
pop
cltd
add
sbb
add
cld
nop
nop
jae
es
dec
add
jbe
int3
nop
hlt
hlt
ss
inc
in
push
mov
xchg
ret
mov
faddl
jne
inc
add
push
mov
leave
nop
jmp
pop
nop
add
mov
jmp
les
clc
repnz
nop
nop
jae
idivl
pop
dec
filds
mov
add
call
clc
repnz
nop
nop
jae
hlt
add
icebp
add
add
add
nop
nop
jae
addl
inc
add
jp
or
add
in
imul
add
add
dec
jp
add
jo
out
je
add
clc
repnz
nop
nop
jae
add
nop
mov
js
sti
push
clc
repnz
nop
nop
jae
jne
add
data16
inc
xchg
pusha
adc
pop
fs
add
add
add
add
mov
and
in
leave
nop
jmp
mov
inc
add
add
popa
sqrtps
repnz
nop
nop
jae
dec
push
aaa
add
add
filds
add
add
add
clc
repnz
nop
nop
jae
or
add
add
iret
dec
inc
add
cld
divl
add
jecxz
icebp
add
mov
sbb
nop
jae
pop
pop
add
adc
data16
data16
add
add
add
add
fmuls
add
clc
repnz
nop
nop
jae
cltd
or
sahf
add
add
call
clc
repnz
nop
nop
jae
add
dec
mov
in
mov
push
mov
xchg
ret
cltd
mov
mov
add
xchg
clc
repnz
nop
nop
jae
add
or
jmp
add
jmp
test
clc
repnz
nop
nop
jae
add
add
add
xchg
adc
jne
add
xchg
pop
mov
add
popa
cs
je
js
repnz
nop
nop
jae
shll
int3
add
rorb
rol
push
mov
xchg
ret
add
cltd
add
roll
out
jle
scas
mov
nop
jae
mov
add
or
repnz
nop
nop
jae
add
rolb
add
add
aaa
rorl
mov
clc
repnz
nop
nop
jae
add
add
pusha
aaa
xchg
add
cmpsb
sub
clc
repnz
nop
nop
jae
add
add
add
add
es
add
sbb
scas
enter
nop
nop
jae
add
add
jmp
hlt
lahf
mov
clc
repnz
nop
nop
jae
pop
add
add
add
clc
repnz
nop
nop
jae
add
add
add
add
add
add
push
mov
clc
repnz
nop
nop
jae
ds
pop
add
add
add
clc
repnz
nop
nop
jae
add
add
add
faddl
push
add
movsl
clc
repnz
nop
nop
jae
and
add
push
jmp
repnz
nop
nop
jae
cld
or
add
mov
lods
mov
repnz
nop
nop
jae
idivl
add
add
add
mov
add
repnz
nop
nop
jae
add
cltd
roll
mov
add
add
clc
repnz
nop
nop
jae
add
addl
aaa
mov
movd
mov
nop
push
mov
leave
nop
jmp
inc
add
jecxz
repnz
nop
nop
jae
mov
dec
mov
add
cwtl
xchg
je
clc
repnz
nop
nop
jae
add
add
add
iret
jmp
std
add
inc
add
fdiv
inc
add
mov
add
sldt
in
add
push
mov
xchg
ret
add
hlt
rolb
mov
add
sbb
or
add
clc
repnz
nop
nop
jae
pusha
add
add
scas
add
jne
push
mov
xchg
ret
sub
scas
inc
fsubs
filds
cld
sahf
add
add
nop
push
mov
leave
nop
jmp
pusha
pusha
xchg
add
int3
lret
fwait
push
mov
xchg
ret
pop
cltd
shlb
add
mov
and
clc
repnz
nop
nop
jae
jecxz
add
mov
or
repnz
nop
nop
jae
mov
pop
sbb
scas
adc
adc
push
mov
leave
nop
jmp
add
add
inc
nop
icebp
and
add
and
inc
xor
fdivs
and
mov
push
mov
add
pushf
lahf
add
imul
cld
add
add
push
fidivl
gs
add
mov
cltd
testb
or
add
add
sub
jp
xor
add
clc
repnz
nop
nop
jae
add
jbe
scas
sbb
clc
repnz
nop
nop
jae
aaa
mov
fdiv
jp
mov
hlt
sub
push
test
nop
push
mov
leave
nop
jmp
add
pop
testb
add
dec
push
inc
add
pusha
add
add
and
sub
divb
push
mov
xchg
ret
or
pop
hlt
inc
std
add
lret
push
mov
xchg
ret
add
sbb
sbb
inc
add
cmpsl
and
clc
repnz
nop
nop
jae
cmpl
cmp
inc
add
scas
add
push
sbb
aaa
add
hlt
test
rclb
add
and
sub
shl
add
not
add
push
nop
push
mov
leave
nop
jmp
add
lods
add
add
aaa
into
in
mov
clc
repnz
nop
nop
jae
jecxz
hlt
mov
add
lds
in
add
pop
rorb
add
push
hlt
add
mov
cld
nop
nop
jae
add
hlt
shll
xchg
add
clc
repnz
nop
nop
jae
sahf
sbb
add
add
scas
rorb
add
mov
leave
nop
jmp
divb
mov
or
outsb
and
mov
xchg
ret
inc
inc
pop
add
int3
add
add
cmp
ret
jecxz
add
filds
add
imul
pushl
push
mov
xchg
ret
add
add
data16
or
jp
rcll
cld
nop
nop
jae
inc
add
add
mov
cmpb
add
repnz
nop
nop
jae
add
pop
or
inc
aaa
pushl
push
mov
xchg
ret
sahf
inc
jp
sahf
jp
sahf
pop
cld
add
add
clc
repnz
nop
nop
jae
or
add
add
add
xchg
add
add
repnz
inc
add
pusha
add
add
add
jmp
add
mov
clc
repnz
nop
nop
jae
orl
pusha
add
mov
and
or
repnz
nop
nop
jae
add
paddb
add
lock
repnz
nop
nop
jae
inc
add
add
add
add
adc
jne
clc
repnz
nop
nop
jae
mov
mull
add
out
out
clc
call
nop
jmp
add
scas
sub
sbb
mov
mov
pop
inc
add
add
aaa
add
add
or
add
clc
repnz
nop
nop
jae
add
es
dec
dec
push
mov
xchg
ret
jmp
fcom
add
imull
jg
xchg
add
add
repnz
nop
nop
jae
inc
dec
roll
add
fadds
xor
clc
repnz
nop
nop
jae
add
add
int3
nop
testl
mov
add
clc
repnz
nop
nop
jae
add
dec
jp
add
clc
cwtl
ljmp
nop
jae
add
add
sldt
add
mov
leave
nop
jmp
ss
add
add
add
jbe
add
rclb
jmp
add
sbb
add
add
sbb
test
clc
repnz
nop
nop
jae
add
ss
data16
loopne
icebp
push
clc
repnz
nop
nop
jae
pusha
cltd
pop
add
jp
sbb
add
jp
sysexit
cmp
mov
leave
nop
jmp
add
add
add
jno
inc
add
add
setle
nopl
daa
push
clc
repnz
nop
nop
jae
ds
add
add
mov
add
rorl
mov
leave
nop
jmp
jecxz
hlt
add
add
add
add
nop
nop
jae
scas
sahf
add
jne
pop
paddw
add
movsb
pop
js
in
das
call
clc
repnz
nop
nop
jae
hlt
sub
add
lret
nop
push
mov
leave
nop
jmp
fadds
add
divb
inc
popa
fadds
add
js
jnp
push
mov
xchg
ret
and
divb
and
add
and
clc
repnz
nop
nop
jae
ds
add
jecxz
pop
clc
repnz
nop
nop
jae
fmuls
add
add
add
add
add
nop
jmp
add
xchg
add
add
sub
clc
repnz
nop
nop
jae
ss
movb
add
repnz
nop
nop
jae
add
add
add
add
sbbb
fs
inc
add
pusha
add
add
mov
inc
add
add
inc
and
nop
push
mov
leave
nop
jmp
cltd
int3
popa
add
or
inc
in
sahf
dec
add
push
mov
xchg
ret
dec
add
add
add
cld
nop
nop
jae
add
add
add
scas
jmp
clc
repnz
nop
nop
jae
dec
add
pop
add
jp
add
add
clc
repnz
nop
nop
jae
sbb
dec
add
add
icebp
add
sbb
js
push
add
ret
clc
repnz
nop
nop
jae
add
add
arpl
cld
nop
nop
jae
add
add
add
inc
leave
nop
push
mov
leave
nop
jmp
inc
dec
add
add
int3
add
fmuls
mov
nop
push
mov
leave
nop
jmp
and
add
movsl
add
push
mov
xchg
ret
pop
add
mov
mov
roll
repnz
nop
nop
jae
data16
add
add
das
mov
clc
repnz
nop
nop
jae
add
dec
add
pop
ror
push
mov
xchg
ret
pop
add
add
es
cld
clc
repnz
nop
nop
jae
add
pusha
add
sbb
jbe
add
test
or
cld
nop
nop
jae
add
inc
add
cltd
add
pusha
clc
repnz
nop
nop
jae
dec
mov
jp
add
add
xchg
push
clc
repnz
nop
nop
jae
add
add
xchg
dec
add
add
nop
mov
cli
mov
push
mov
xchg
ret
nop
inc
sub
add
hlt
mov
push
mov
xchg
ret
add
sub
add
inc
pand
clc
repnz
nop
nop
jae
aaa
add
scas
cpuid
add
add
in
clc
repnz
nop
nop
jae
add
int3
filds
add
clc
repnz
nop
nop
jae
add
popa
add
add
add
out
movzwl
nop
push
mov
leave
nop
jmp
add
jmp
add
or
repnz
nop
nop
jae
shlb
add
add
add
andl
nop
nop
jae
ss
jp
into
xor
dec
addl
scas
shll
inc
div
add
add
fcompl
jne
clc
repnz
nop
nop
jae
add
add
sub
sbb
add
test
repnz
nop
nop
jae
popa
add
add
xor
add
lret
pusha
clc
repnz
nop
nop
jae
add
add
add
add
pop
inc
add
scas
add
add
add
ret
dec
mov
clc
repnz
nop
nop
jae
add
scas
sahf
ss
shlb
sub
scas
mov
and
clc
repnz
nop
nop
jae
data16
add
ss
add
cld
nop
nop
jae
popa
add
add
add
push
fcoms
push
mov
xchg
ret
jmp
dec
dec
aaa
add
add
nop
xchg
daa
popa
clc
repnz
nop
nop
jae
add
jp
aaa
add
add
inc
jecxz
enter
mov
xchg
ret
scas
or
pop
inc
add
add
add
imull
nop
jae
faddl
add
roll
dec
add
xor
add
repnz
nop
nop
jae
add
add
imul
push
mov
xchg
ret
add
pop
add
dec
hlt
scas
scas
add
add
clc
repnz
nop
nop
jae
pavgw
add
add
jae
push
mov
xchg
ret
hlt
add
popa
icebp
rolb
add
add
out
mov
clc
repnz
nop
nop
jae
fcoml
mov
add
add
inc
dec
push
mov
xchg
ret
fadds
add
add
add
jae
dec
and
clc
repnz
nop
nop
jae
dec
dec
faddl
add
mov
nop
push
mov
leave
nop
jmp
mov
dec
jp
jne
sbb
sbb
cmp
out
popf
lods
push
mov
xchg
ret
add
ds
cld
add
jp
cltd
add
push
mov
xchg
ret
add
add
mov
mov
fdivrl
call
clc
repnz
nop
nop
jae
fmull
sub
and
stos
clc
repnz
nop
nop
jae
es
add
add
jne
nopl
jg
clc
repnz
nop
nop
jae
add
pop
nopl
add
lea
clc
repnz
nop
nop
jae
add
add
add
aaa
add
aaa
push
clc
repnz
nop
nop
jae
dec
es
movb
add
add
mov
leave
nop
jmp
add
dec
fsubl
divl
mov
mov
clc
repnz
nop
nop
jae
add
add
add
nop
nop
jae
popa
mov
lldt
xchg
add
jne
or
add
nop
push
mov
leave
nop
jmp
std
jp
add
add
sub
repnz
nop
nop
jae
or
sahf
ss
cmovo
add
cmp
nop
push
mov
leave
nop
jmp
add
mov
add
inc
push
mov
xchg
ret
dec
dec
inc
add
add
fsubrl
or
mov
in
call
nop
jmp
add
es
jp
cld
inc
add
lods
inc
add
nop
nop
jae
or
add
setns
add
add
inc
fisubl
jno
call
inc
add
add
sub
cltd
add
je
clc
repnz
nop
nop
jae
add
fwait
nop
push
mov
leave
nop
jmp
mov
add
add
popa
pop
pusha
cmc
mov
push
mov
xchg
ret
add
popa
pop
add
mov
cmpl
nop
push
mov
leave
nop
jmp
mov
add
rclb
in
inc
add
add
add
add
add
add
ds
push
push
mov
xchg
ret
or
add
add
sbb
jmp
clc
push
mov
xchg
ret
add
int3
mov
add
or
mov
leave
nop
jmp
add
pusha
testl
sub
push
clc
repnz
nop
nop
jae
mov
add
scas
std
mov
clc
repnz
nop
nop
jae
add
mov
add
int3
mov
and
xchg
add
add
sbb
imul
pop
inc
add
push
mov
ltr
clc
dec
add
nop
nop
jae
add
add
and
fld1
push
mov
xchg
ret
add
pusha
add
jp
add
jb
nop
push
mov
leave
nop
jmp
inc
mov
jne
xor
mov
xchg
ret
add
add
add
add
add
repnz
nop
nop
jae
roll
add
xchg
add
add
ss
scas
call
clc
repnz
nop
nop
jae
add
scas
mov
add
jmp
loope
mov
test
clc
repnz
nop
nop
jae
jne
add
add
js
mov
push
inc
add
add
popa
aaa
sbb
mov
clc
repnz
nop
nop
jae
add
int3
lods
nop
add
lock
in
clc
repnz
nop
nop
jae
inc
dec
jecxz
add
dec
add
in
push
clc
repnz
nop
nop
jae
add
add
dec
dec
hlt
aaa
scas
add
mov
clc
repnz
nop
nop
jae
inc
add
jne
add
ret
add
repnz
nop
nop
jae
testl
mov
lods
jmp
xchg
push
inc
add
aaa
popa
icebp
std
add
nop
jp
andps
xchg
push
mov
aam
sbb
add
shl
and
lcall
jle
sub
pushf
repnz
clc
repnz
nop
nop
jae
add
add
mov
lods
add
cmp
nop
push
mov
leave
nop
jmp
dec
int3
add
add
add
clc
repnz
nop
nop
jae
or
cltd
inc
mov
xchg
out
fld1
clc
repnz
nop
nop
jae
add
add
sldt
jne
add
movswl
clc
repnz
nop
nop
jae
filds
mov
jbe
gs
clc
repnz
nop
nop
jae
add
push
add
sub
clc
repnz
nop
nop
jae
shrl
std
add
add
push
mov
xchg
ret
add
add
inc
mov
mov
repnz
nop
nop
jae
rcrl
add
sahf
testl
fistpl
push
mov
xchg
ret
mov
add
add
scas
mov
nop
push
mov
leave
nop
jmp
add
add
std
push
clc
repnz
nop
nop
jae
sldt
add
sldt
dec
push
clc
repnz
nop
nop
jae
add
add
add
pop
fdivrl
push
clc
repnz
nop
nop
jae
add
add
or
dec
jmp
add
scas
or
inc
data16
dec
lods
dec
jne
add
cs
outsb
lds
mov
adc
push
mov
leave
nop
jmp
mov
add
pcmpgtw
ss
add
std
add
add
add
jo
mov
clc
repnz
nop
nop
jae
add
ss
mov
hlt
pop
dec
sub
andb
xchg
ret
add
add
testb
sub
testl
popa
adcl
add
loop
clc
repnz
nop
nop
jae
inc
std
sbb
popa
add
into
cmp
out
inc
notl
push
mov
xchg
ret
xchg
or
testl
cld
nop
nop
jae
add
popa
add
add
cld
lock
pop
push
mov
xchg
ret
add
add
add
and
cmp
popf
sub
clc
repnz
nop
nop
jae
push
pop
add
add
add
add
hlt
push
add
fsubrs
inc
nop
push
mov
leave
nop
jmp
dec
cltd
add
sub
add
scas
stos
clc
repnz
nop
nop
jae
add
dec
add
std
sub
cmp
push
cmc
push
clc
repnz
nop
nop
jae
and
fcomps
cld
push
add
int3
addr16
push
mov
xchg
ret
add
rorl
add
jp
nop
filds
add
push
mov
xchg
ret
add
add
add
testl
pop
fld1
clc
repnz
nop
nop
jae
add
inc
sahf
mov
mov
sub
inc
mov
mov
xchg
ret
fcompl
add
add
add
dec
roll
add
ds
jo
insl
add
clc
repnz
nop
nop
jae
testl
lods
add
jp
out
fcmovnu
call
nop
jae
hlt
jecxz
inc
add
mov
clc
repnz
nop
nop
jae
mov
mov
add
leave
movzwl
clc
repnz
nop
nop
jae
push
add
sub
dec
push
push
mov
leave
nop
jmp
add
sub
mov
data16
and
add
clc
repnz
nop
nop
jae
add
maskmovq
testl
add
add
repnz
nop
nop
jae
filds
add
xorl
jp
push
push
mov
xchg
ret
dec
add
scas
add
add
dec
add
add
loope
incl
add
add
jmp
add
jecxz
fmuls
nop
nop
jae
icebp
cld
add
mov
pop
popa
pop
popa
push
clc
repnz
nop
nop
jae
pop
testb
add
ss
pop
or
add
pusha
clc
repnz
nop
nop
jae
add
add
add
add
cld
aam
shr
nop
push
mov
leave
nop
jmp
fisttps
jne
add
mov
testl
in
leave
nop
jmp
dec
icebp
mov
add
notb
mov
xchg
ret
add
mov
xchg
sbb
push
xchg
stos
push
clc
repnz
nop
nop
jae
mov
add
add
pop
shll
jae
dec
gs
repnz
nop
nop
jae
add
dec
add
ss
pop
and
jge
clc
repnz
nop
nop
jae
add
fmul
and
add
cld
nop
nop
jae
sbb
add
inc
add
dec
dec
dec
push
mov
xchg
ret
add
add
add
add
mov
add
jp
testl
nop
push
mov
leave
nop
jmp
add
add
add
repnz
nop
nop
jae
or
sarb
add
jbe
and
iret
inc
clc
repnz
nop
nop
jae
add
movb
sub
add
add
add
repnz
nop
nop
jae
std
add
aaa
add
xchg
add
shl
roll
lcall
ret
add
add
and
clc
repnz
nop
nop
jae
inc
aaa
rclb
dec
add
xadd
add
outsb
cmp
add
in
leave
nop
jmp
int3
add
add
add
hlt
icebp
fcompl
outsl
inc
add
add
add
add
sub
fisttpl
nop
nop
jae
add
add
add
add
mov
nop
push
mov
leave
nop
jmp
dec
sbb
sbb
add
nop
push
mov
leave
nop
jmp
std
add
sahf
sub
push
mov
xchg
ret
add
add
add
add
pop
sub
mov
les
mov
xchg
ret
add
mov
add
push
mov
xchg
ret
scas
add
testb
aaa
inc
add
pop
clc
repnz
nop
nop
jae
add
es
mov
fcomps
rcll
mov
xchg
ret
int3
or
add
add
jne
dec
push
clc
repnz
nop
nop
jae
jne
pusha
cld
add
add
add
add
xor
push
mov
xchg
ret
add
add
inc
add
setns
sbb
clc
repnz
nop
nop
jae
pop
mov
roll
or
or
lret
push
clc
repnz
nop
nop
jae
push
and
pop
add
popa
scas
add
push
mov
add
outsl
add
pushf
shl
leavew
pushf
add
add
into
add
pop
repnz
clc
repnz
nop
nop
jae
scas
sub
add
popa
add
pop
call
clc
repnz
nop
nop
jae
mov
add
add
add
mov
add
xchg
ret
sub
mov
aaa
add
push
lea
cld
nop
nop
jae
add
add
popa
add
sbb
add
jns
add
jmp
test
cmpl
fst
clc
repnz
nop
nop
jae
add
add
add
insb
add
mov
xchg
ret
mov
add
cltd
add
push
icebp
rcl
jecxz
xlat
add
nop
push
mov
leave
nop
jmp
movb
add
add
add
sar
cld
nop
nop
jae
inc
filds
dec
add
notb
test
cmp
ret
sahf
add
add
scas
nop
mov
xchg
pop
pushl
nop
push
mov
leave
nop
jmp
pop
add
andl
add
rcll
mov
xchg
ret
add
scas
dec
int3
lods
pusha
mov
push
mov
leave
nop
jmp
add
add
add
hlt
add
add
clc
repnz
nop
nop
jae
add
add
scas
data16
fcomip
sahf
sbbb
add
clc
repnz
nop
nop
jae
add
add
jne
jecxz
clc
repnz
nop
nop
jae
add
testb
jae
cld
dec
push
mov
add
add
add
mov
add
mov
test
pop
add
popf
dec
push
add
xchg
inc
xchg
jo
lds
lock
jmp
and
add
pop
addr16
scas
les
dec
orl
mov
add
pusha
add
pop
add
repz
pop
dec
add
mov
mov
inc
scas
iret
mov
mov
add
ret
mov
repnz
mov
adc
jb
push
add
enter
xor
loop
gs
jne
insb
add
add
sbb
jecxz
jnp
psubusb
daa
or
out
pusha
add
cld
dec
jns
into
inc
mov
xor
dec
cmpb
int
adc
jle
aam
pop
lahf
inc
or
push
dec
fcmovne
push
mov
std
rcll
pop
push
loope
mov
cmp
add
mov
test
add
mov
mov
insl
cmp
xchg
mov
mov
repnz
add
mov
sub
fidivl
test
fisubs
add
sub
aaa
daa
andl
add
push
mov
sahf
inc
in
push
add
add
dec
inc
imul
add
ss
les
repnz
cmp
fisttps
xchg
sbb
add
add
mov
cmc
imul
icebp
sahf
movsb
xor
out
mov
loopne
fstl
jl
push
pop
jecxz
add
add
sub
adcb
lret
adc
dec
add
gs
xchg
fistl
mov
dec
add
dec
add
adc
xchg
in
lods
and
stos
loope
add
inc
adc
pushf
add
aad
in
mov
add
mov
stos
movsb
leave
ret
fisttps
cmp
lock
jecxz
add
mov
mov
inc
add
shl
and
mov
add
sarl
xchg
gs
sahf
lea
pop
or
xchg
rcrl
add
insb
add
sbb
cmpsl
scas
jle
enter
cmc
dec
sub
sub
add
aas
arpl
push
cld
je
fmul
int3
pop
dec
sbb
ret
lahf
test
xchg
stc
mov
sti
mov
add
pop
push
add
push
add
inc
jb
aam
loope
mov
cmp
pop
add
cmpsl
fcomps
dec
sti
test
lods
scas
ja
shlb
fwait
cld
das
leave
push
add
cmp
into
mov
xchg
pop
add
push
mov
push
add
scas
loope
sti
xchg
sbb
jne
cmp
push
and
lods
andb
or
stos
out
out
jb
jle
pop
add
ret
int3
or
or
cmpsb
shlb
jge
add
and
rsm
in
ret
lods
and
push
add
and
pop
icebp
and
and
add
das
nop
rcrb
push
test
divl
push
add
mov
js
in
call
hlt
stos
adc
pop
add
jo
push
in
adc
sbb
mov
shl
xor
jp
add
xchg
ja
add
jne
xchg
jg
sbb
xchg
mov
pushf
mov
mov
add
lods
aad
gs
push
sub
lcall
es
add
repz
mov
out
and
lea
aaa
add
imulb
cmp
add
push
fdivrl
mov
mov
loopne
xchg
dec
mov
or
dec
add
jae
cld
js
sub
cmp
xchg
adc
jnp
ficoml
add
add
outsb
test
push
inc
cmpsl
daa
sbb
xchg
ret
inc
cmp
add
cli
jo
mov
inc
imul
icebp
or
pop
xchg
clc
popf
loop
jmp
adc
add
pop
pushf
shlb
or
sbb
lcall
stos
sub
loopne
repnz
imul
lcall
sbb
orb
add
cld
dec
add
or
and
inc
add
xchg
mov
clc
cltd
lods
loopne
dec
stc
sub
imul
movsl
cmc
sub
rorl
adc
xchg
jge
ja
data16
adcl
mov
insl
and
gs
and
dec
imul
std
jnp
cmpsl
insb
add
cmp
int3
pushl
push
jg
add
loop
pop
add
sbb
movsl
mov
jns
mov
add
dec
jno
ss
cmp
mov
add
push
push
sub
inc
or
fisttpll
rcrl
faddl
push
sub
dec
add
nop
inc
add
add
or
andl
add
je
ss
repnz
sbb
add
inc
lds
cmp
stc
xor
in
enter
add
cmp
xor
sahf
cmp
rolb
popf
pop
je
sbb
dec
popf
fsts
loop
push
dec
mov
jg
sub
mov
add
arpl
clc
dec
and
shlb
add
movsb
in
xchg
jmp
xchg
out
xor
into
fnsave
scas
clc
sar
fdivl
add
xor
test
inc
jne
sti
adc
add
jecxz
jge
sti
inc
dec
add
add
or
cmp
iret
mov
xor
mov
dec
aad
loope
and
mov
xor
out
sbb
pop
add
and
mov
xchg
lods
xchg
mov
jbe
mov
lahf
push
add
loopne
cld
sbb
lods
sub
or
xchg
popa
ret
add
pushf
inc
add
jae
divl
jne
aad
hlt
or
test
mov
add
arpl
dec
sub
cmpsl
jmp
pushf
fcom
bound
add
icebp
cld
lods
and
iret
inc
das
sbb
push
add
add
add
sahf
xor
movsl
dec
mov
or
xchg
test
stc
imul
or
fwait
stos
fdivs
pop
and
shll
xchg
pop
jo
aad
cmovbe
mov
add
sarl
xchg
cmp
add
add
add
vmread
jb
xchg
pop
add
add
push
jp
or
inc
mov
jle
and
es
jmp
xchg
push
scas
sbb
stos
push
cmp
fistps
pusha
add
or
imull
add
push
in
hlt
inc
ss
mov
mov
xor
mov
repnz
jg
out
mov
mov
mov
add
cmpsb
stos
cltd
xchg
cmpsl
rorb
sub
xor
pop
add
push
pop
inc
sub
push
out
dec
loopne
fisubrs
add
dec
add
xchg
add
push
adc
pop
sbbl
mov
jno
xor
mov
cs
outsb
or
add
mov
pop
add
inc
in
jo
testl
pop
cltd
inc
insb
add
lahf
sub
or
sbb
pop
mov
jnp
jb
cmp
and
test
jbe
cld
add
dec
push
add
mov
add
or
xchg
add
and
jge
das
jbe
add
or
test
push
loopne
cmp
loop
les
sub
stc
xor
arpl
addr16
cmc
dec
add
dec
push
push
add
rolb
inc
decb
pop
int
rclb
xor
or
push
add
inc
andb
mov
cmpw
mov
ss
out
pop
push
add
push
mov
and
cmp
mov
cwtl
sub
fsubrp
push
jmp
pop
fstpt
adc
add
push
cmpsl
movsb
pop
push
add
or
jge
add
xlat
jecxz
add
add
add
add
rolb
mov
stos
adc
incl
repz
dec
and
rcl
pop
loope
sbb
lcall
scas
or
ljmp
add
mov
sub
sbbb
and
imul
add
fwait
mov
xchg
sub
push
mov
add
inc
mov
cmc
push
stos
adc
fcoml
add
out
add
sub
adc
daa
mov
add
xchg
test
add
sbb
add
adc
je,pt
enter
aaa
ljmp
mov
aaa
out
xchg
mov
stos
iret
int
add
add
es
shl
xchg
adc
ljmp
mov
xchg
aad
mov
add
imul
pop
push
ds
jmp
ljmp
sti
outsl
xorb
sbb
xchg
scas
xchg
mov
aad
jmp
add
xchg
mov
add
sub
cltd
mov
add
jne
pop
inc
push
mov
stos
ljmp
cmp
cmp
mov
push
in
pop
add
mov
xlat
xor
cmc
bound
fidivl
mov
dec
add
into
data16
out
pop
das
lods
pop
stos
clc
cmp
inc
add
inc
add
jmp
sub
jp
cmp
loope
lock
jae
aaa
repz
ret
cmpsb
das
push
fidivrs
movsb
xchg
adc
lcall
call
cmp
push
add
dec
arpl
fistps
jb
stc
push
mov
inc
jnp
iret
xor
out
out
mov
dec
add
adc
ficoms
dec
add
inc
add
movsl
pop
add
enter
fcomp
cli
jl
es
push
sbb
scas
pop
pushf
push
mov
add
mov
mov
add
xchg
mov
cltd
es
adc
jmp
xor
xchg
movl
add
fsubrs
xchg
scas
and
cmpsl
pop
add
add
jno
ss
orb
in
stc
mov
or
out
mov
cmc
imul
daa
inc
ljmp
and
cmp
das
sbb
daa
std
jnp
and
cmp
andl
pop
sbb
jg
inc
add
pop
arpl
pop
subl
cs
xlat
push
add
add
pusha
add
push
add
mov
hlt
and
inc
add
loope
add
cli
scas
das
and
shll
push
int3
cmpsl
push
fsubrs
mov
insl
test
push
mov
call
insl
mov
dec
add
jno
and
inc
add
insb
add
out
cmp
xchg
stos
popa
jne
test
js
mov
add
or
leave
inc
imul
add
stos
mov
lods
pop
mov
movsl
jne,pn
add
jmp
pop
sbb
add
xchg
lea
push
rcrl
movsb
sbb
mov
add
mov
cmp
mov
add
inc
add
sub
or
inc
sub
popa
cmpsb
sahf
shll
jmp
addb
cmp
mov
ljmp
nop
mov
add
sub
pushf
mov
repnz
pop
add
in
add
stos
das
lock
push
add
dec
add
inc
add
nop
sbb
add
cmp
adc
lock
add
and
lmsw
mov
sub
pop
ljmp
loopne
xchg
pop
and
mov
repz
jb
cmp
ret
inc
orl
xor
inc
dec
iret
adc
ja
mov
add
repnz
mov
fnstenv
add
adc
fwait
add
daa
cmpsb
add
aas
or
das
insl
repnz
add
add
xor
cmp
inc
or
add
jmp
cli
in
cmp
das
jl
sbb
and
sti
dec
out
sub
jns
popf
mov
test
mov
jbe
add
ficoms
cld
scas
xor
mov
mov
sbb
jge
pop
add
add
adc
pop
add
xor
dec
mov
rcrl
sbb
xchg
push
mov
or
xchg
push
les
insl
cmpsb
sbb
mov
ret
addb
inc
cmp
dec
add
jne
scas
xchg
popa
or
adc
xchg
mov
add
add
xlat
ftst
ja
ja
lret
pop
mov
push
cltd
movsb
mov
inc
add
sahf
sub
sbb
or
in
pop
dec
push
insl
in
aad
es
jl
insb
add
lock
adc
jg
sub
fcmovnb
shl
lcall
add
pop
sbb
and
add
add
add
sub
out
sbb
push
js
enter
out
or
je
pop
inc
imul
je
mov
pop
push
movsl
mov
ja
lea
or
cwtl
push
add
pop
add
shrb
mov
or
rclb
cld
fcmovnbe
xchg
test
outsl
sbb
dec
xor
ffreep
inc
fisubrs
in
sbb
lea
adc
fiadds
add
pop
push
push
or
pushf
addl
jp
cli
cli
inc
add
sub
js
icebp
ret
test
push
add
sub
add
pop
add
xor
add
jo
sbb
push
test
insb
add
sub
jl
jmp
mov
sbb
cwtl
mov
stc
sub
out
mov
add
das
add
mov
mov
adc
lods
aaa
cmp
pop
add
aad
push
in
inc
add
or
cmp
ja
pop
test
sub
adc
cmp
add
add
test
pmulhw
pop
push
add
add
add
jbe
inc
sbb
add
dec
in
mov
mov
stc
dec
add
outsb
cltd
adc
push
jnp
mov
ret
mov
inc
add
fwait
aas
pop
xor
push
add
cli
imul
jmp
js
sbb
enter
cli
outsb
and
test
add
rcrb
add
lea
cmp
imul
xchg
je
data16
jne
sub
mov
add
popa
outsb
mov
xor
lds
daa
lea
arpl
add
das
enter
add
and
pushf
ss
xor
xor
lahf
hlt
sub
test
out
pop
jb
mov
cmp
push
negb
repnz
dec
adc
aam
mov
pop
cmp
xchg
xchg
mov
cltd
add
add
add
mov
mov
push
jne
push
mov
das
lds
xchg
push
add
xor
sarb
clc
and
aam
mov
dec
in
sbb
sbb
loop
xor
addb
push
add
call
dec
jbe
mov
xchg
push
jge
inc
pop
add
inc
sbb
mov
jae
xchg
js
leave
adc
add
stos
jo
cmp
dec
add
add
add
aam
dec
out
sbb
clc
pop
mov
sub
inc
sub
add
xchg
add
mov
add
add
adc
sbb
add
cmp
or
addr16
fdivrs
dec
fcoms
cli
lahf
cmp
adc
outsl
sbb
rclb
push
in
add
add
xor
add
aam
mov
add
fdivrs
add
sarb
sub
add
sub
gs
test
mov
cwtl
mov
out
add
xlat
hlt
xchg
pop
mov
cmpsb
push
dec
add
sbb
mov
fnstsw
sub
cli
std
sbb
sub
and
test
mov
out
sub
add
mov
fwait
and
dec
xchg
ret
cli
push
jnp
mov
pop
lcall
mulb
xchg
subb
shrl
rep
pop
out
mov
add
mov
insb
add
mov
adc
lret
jp
push
adc
xchg
dec
add
mov
es
jb
das
out
insl
sub
movsl
les
imul
jl
test
ljmp
sahf
sbb
cmpsb
test
sub
xchg
xchg
push
push
push
icebp
and
mov
mov
std
add
nop
sbb
dec
gs
fnstsw
push
push
add
mov
int
add
pop
jl
push
imulb
mov
push
add
inc
stc
push
lods
xchg
icebp
mov
add
das
adc
push
mov
mov
adc
adc
fs
cmp
movsb
lcall
add
fisubrs
aas
pop
fwait
inc
mov
push
into
push
xchg
lods
mov
lret
cmp
gs
push
sub
xlat
jnp
xor
xchg
in
add
mov
es
cmpsb
sarl
insl
fisubs
add
or
lret
push
fcomps
into
data16
mov
mov
or
mov
jg
pop
aam
add
or
add
and
ss
sahf
push
push
orb
mov
lret
inc
add
add
movsb
sub
mov
aam
lea
fcmovnb
sbb
dec
push
xchg
gs
cmp
add
dec
add
mov
das
dec
add
xor
negl
or
xchg
and
mov
pop
mov
push
lds
pop
movsl
iret
cwtl
mov
mov
inc
push
and
or
add
in
pop
sub
add
adc
pop
add
sahf
mov
sbb
fsubs
sti
ret
movsl
adc
add
or
imul
cmp
test
popa
lcall
sbb
rol
jmp
adc
pop
rolb
push
jmp
add
iret
sub
lock
enter
add
fwait
or
add
mov
call
out
sahf
inc
pxor
data16
pop
mov
add
inc
add
aad
adc
lret
cmp
add
sbb
fcmovnu
jle
mov
scas
shll
inc
pop
lds
imul
xchg
inc
jp
jne
rcrl
addb
lret
pop
sbb
imul
sub
pop
insl
add
push
repz
adcl
or
rorb
cwtl
sub
inc
adc
mov
and
idiv
jecxz
rolb
xchg
sbb
cmpsb
in
mov
ljmp
stc
int
jae
xor
dec
loope
add
xchg
jo
mov
sub
pop
hlt
jle
lret
add
jo
dec
out
add
int3
scas
fists
imul
movsl
xlat
add
cmp
add
rcl
fnstenv
or
pop
aaa
add
add
xlat
cmpsb
les
add
jne,pn
orb
fs
mov
nop
pop
mov
daa
jmp
or
push
mov
idivb
add
into
mov
add
or
or
add
mov
scas
lret
enter
adc
sbbb
sti
or
imul
add
insl
insl
lods
daa
repz
dec
add
mov
add
pop
testb
movsb
sub
repz
mov
jno
mov
rcrb
mov
push
ret
into
inc
mov
xchg
jae
fdiv
mov
lret
aad
add
dec
add
jecxz
sub
aaa
push
adc
inc
add
or
scas
jl
lret
outsb
jns
lret
movntq
into
loope
jl
add
push
lods
loopne
inc
cmp
pop
jbe
fnstcw
push
jne
mov
push
add
push
fcomi
sbb
sbbb
add
call
in
pop
fiadds
rclb
adc
rorl
scas
int
sahf
imul
leave
cmp
cs
sar
mov
mov
pop
add
jnp
sbb
and
pop
mov
mov
push
add
add
pushf
out
dec
ja
push
or
sbb
add
add
xchg
pop
add
xor
shll
inc
daa
jecxz
pop
leave
jecxz
and
dec
add
add
add
pop
fwait
pop
add
add
mov
xchg
push
cltd
popa
rolb
add
pop
cmp
mov
add
cli
leave
shll
inc
aad
fdiv
pop
cli
add
fidivrs
mov
shr
loope
add
cmp
aad
xor
nop
sbb
add
mov
mov
jecxz
sti
push
or
inc
push
icebp
js
out
imul
enter
adc
push
les
sbb
mov
mov
lcall
addr16
ja
add
mov
pop
add
pop
mov
testb
out
add
fsts
add
inc
dec
or
sbb
lahf
gs
out
movsl
sub
lods
sub
ja
add
sub
add
cmp
push
test
add
xor
and
mov
and
loopne
data16
add
xor
std
cmp
aaa
sub
shl
add
movsb
out
mov
inc
sub
sbb
or
add
cli
loop
fidivrs
jae
or
icebp
sbb
push
push
in
add
aam
mov
fwait
sbb
jmp
push
inc
add
add
add
push
mov
add
pushl
fadd
cmp
mov
test
cld
adc
in
push
cmp
add
adc
out
ret
cmp
inc
mov
cwtl
jmp
cs
cmpsb
rorl
cmc
mov
scas
fwait
mov
lods
ja
adc
pop
add
pusha
add
nop
cmp
xchg
mov
push
mov
adc
imul
cmpsl
ds
cld
mov
pop
mov
push
add
fldcw
test
mov
add
pop
add
addb
add
rcl
out
je
data16
repz
xor
cmp
xor
mov
loop
inc
fmuls
in
add
add
xor
ss
push
add
enter
xchg
sbb
movnti
divb
fiaddl
cmpl
add
add
jne
mov
outsb
notl
mov
jle
mov
bound
loopne
push
add
cmp
stos
icebp
gs
repnz
into
cltd
or
pop
in
push
mov
or
rorl
inc
add
in
gs
iret
popa
sbb
pop
add
pop
push
add
fists
pusha
add
fistl
les
add
fcmovne
cmpsl
pop
sub
add
pop
cs
or
inc
and
aam
jmp
jp
dec
sub
adc
dec
ss
pop
inc
add
popf
es
sub
ds
lods
lcall
push
fildl
inc
into
hlt
xor
pop
xchg
flds
imulb
mov
pop
xor
ficompl
add
xor
fiaddl
call
aam
or
lea
fcmovb
lods
xor
mov
out
cmc
jnp
add
mov
adc
inc
xor
push
divb
pop
inc
mov
cmp
ja
outsl
cmp
repz
mov
adc
lcall
mov
add
xlat
movl
cli
shr
inc
insl
mov
xchg
flds
jb
shlb
jp
adc
and
dec
push
add
and
lahf
pop
in
call
push
pushf
jno
sbb
or
pop
add
test
push
add
test
leave
rol
jns
rcll
leave
ss
nop
loop
add
dec
add
mov
lcall
sub
arpl
int
data16
dec
ret
stc
pop
add
imul
add
xor
mov
pushf
pop
add
scas
mov
jg
sub
mov
add
pop
add
fildll
push
clc
and
sub
adc
push
dec
add
rcll
add
sbb
or
mov
scas
inc
imul
add
add
shll
test
add
jmp
daa
aad
int3
cmc
add
add
sbb
ret
dec
add
js
jo
adc
sbb
pop
push
leavew
test
js
pop
lea
xchg
xchg
cmp
cmp
add
push
mov
sub
xor
out
stc
xchg
pop
test
ucomiss
cmp
pop
ret
std
adc
sbb
add
jne
rolb
xchg
lods
dec
dec
add
icebp
hlt
dec
add
dec
ds
sub
mov
hlt
shlb
aaa
test
xor
jbe
sahf
xchg
sbb
movsb
nop
add
xor
ljmp
pop
add
jo
shll
cmp
cltd
and
sbb
es
add
push
xchg
xor
daa
sub
in
shlb
mov
adc
add
push
sbb
repz
mov
insl
push
add
add
dec
addr16
add
or
mov
dec
daa
mov
add
inc
in
adc
push
mov
int3
xor
or
clc
scas
fs
pop
out
outsl
mov
testl
aam
loopne
add
fnsave
dec
add
push
test
in
daa
data16
out
xor
jne
loopne
insl
cmp
sbb
push
add
mov
ficoms
add
sub
repnz
push
add
sbbl
shrl
add
insl
cmp
stc
jp
lret
jne
in
push
mov
lret
push
add
cmp
add
sbb
out
and
pop
sub
lea
leave
lret
xor
iret
push
fsubs
mov
aaa
jb
adc
pushl
dec
mov
jo
or
mov
add
loopne
hlt
dec
add
mov
jl
push
add
dec
in
cld
dec
mov
stc
rcrl
jnp
add
dec
jp
add
push
add
ret
test
add
iret
jo,pt
jo
mov
daa
bound
ror
xchg
imul
pop
in
sub
mov
cli
mov
lea
cmp
ret
stos
iret
inc
test
sub
fsub
aam
add
dec
add
cmp
pop
push
or
inc
popf
leave
mov
mov
test
stc
inc
push
ss
add
mov
add
add
adc
push
ja
enter
push
add
iret
add
add
movsl
cmc
testl
ja
adc
test
fdivs
add
mov
and
inc
rcrl
jmp
sub
pop
add
mov
mov
in
pop
add
mov
xor
icebp
push
lods
jae
inc
add
jmp
push
add
add
sub
adc
movb
mov
and
sti
push
and
in
jg
mov
dec
imul
popa
xor
add
out
lahf
out
testb
cld
xor
sbb
mov
iret
mov
pop
pop
add
jecxz
cmp
push
or
sbb
xchg
in
gs
sub
repz
mov
push
lret
add
cmp
imul
rcrl
xor
lods
and
xor
inc
loope
mov
pop
xor
out
jp
add
adc
push
add
or
lods
dec
or
je,pn
cmp
xor
fstpl
add
inc
add
cld
movsl
das
shlb
fs
adc
sahf
jmp
ljmp
xor
mov
cmp
roll
xchg
xlat
adc
out
xor
add
fs
lods
mov
add
out
fs
out
popa
add
mov
or
jl
shrd
or
sub
mov
mov
addr16
and
mov
adc
in
lods
lahf
mov
add
aaa
xchg
ret
pushf
push
mov
adc
hlt
cld
mov
fldcw
and
dec
add
jae
dec
add
jb
pushf
or
in
sti
push
call
cmp
popl
jle
push
add
push
int
inc
add
and
xchg
mov
mov
call
lock
add
fsubr
mov
and
xchg
jg
pop
pop
aaa
push
pusha
add
pop
mov
dec
xchg
mov
mov
pop
es
pusha
add
cld
lods
jge
cmp
call
add
movsl
je
mov
imul
push
dec
shl
dec
inc
out
cmpsb
add
add
insb
add
mov
insb
add
mov
sbb
leave
dec
adc
pop
push
jg
mov
push
sbb
mov
repnz
fucomip
inc
add
leave
aam
pop
add
add
shr
cmpsl
shlb
jb
xorl
xchg
pusha
add
dec
adc
cltd
insb
add
andb
ret
or
hlt
sub
cmc
lock
add
mov
add
fdivr
jp
sti
xchg
xor
into
orb
cs
lcall
loop
xor
push
dec
sub
pop
adc
sbb
es
es
xlat
bswap
mov
push
add
add
add
aas
les
arpl
add
loop
cmp
cmp
lcall
dec
xchg
jb
imul
add
mov
and
inc
inc
and
add
in
cmp
jge
jbe
mov
inc
mov
fwait
push
xchg
repnz
adc
mov
fcomip
pusha
add
addr16
push
bound
pop
inc
arpl
add
ret
outsl
jge
jbe
loop
pop
add
mov
add
xor
cmp
gs
xor
cltd
push
jb
ret
loop
mov
in
sub
sbb
imul
sti
cmpb
addr16
out
shrb
pop
dec
out
loopne
sbb
clc
fwait
popf
push
adc
xchg
repnz
test
loope
pusha
add
sub
jae
stos
lret
adcb
cmp
jp
push
sub
pop
ljmp
add
mov
jge
xchg
add
fcmovu
xchg
xor
pop
pushl
test
js
nop
push
das
int
mov
add
xchg
sub
xchg
clc
insl
cld
jbe
add
out
dec
movsb
bound
add
or
adc
pop
inc
dec
jbe
add
fmull
mov
mov
mov
mov
add
pop
mov
imulb
icebp
cmp
sti
lret
or
push
add
bound
mov
xor
stos
inc
cmpsl
cmpl
stos
xor
mov
adc
or
inc
icebp
scas
das
mov
mov
xor
mov
add
sub
sub
adc
das
shrl
push
cmp
aaa
jne
push
cli
mov
mov
sti
sub
outsb
cmp
inc
in
mov
or
movsl
or
xchg
add
mov
cmp
xchg
or
loope
sbb
mov
fsubr
int3
jle
rcrb
pop
or
scas
cli
fbstp
movsb
cmp
clc
stos
pop
and
ds
idivl
sub
fmull
ret
add
jle
movsb
out
add
stos
pop
add
inc
mov
je
mov
dec
add
xlat
and
aam
add
call
push
sbb
scas
jns
and
fld
fdivr
hlt
popa
mov
add
enter
cmpsb
cli
fildll
or
cli
sar
das
dec
add
and
ljmp
push
dec
jge
adc
subl
push
decl
push
and
out
out
out
sarb
cmc
add
mov
xchg
or
jle
sbb
and
test
movsl
mov
xor
mov
or
xor
enter
sbb
rol
test
ficomps
lahf
pop
adc
enter
movsl
out
ja
rcrb
rcl
cmp
cmpl
dec
add
call
add
add
adc
xor
fbld
jne
add
mov
xchg
inc
add
jle
xchg
jne
sahf
xor
xchg
mov
mov
mov
sbb
jo
test
pop
add
adc
js
orl
test
lock
mov
add
jge
add
inc
dec
add
fisttpll
movsl
inc
sub
mov
cmpsb
pop
xchg
jge
push
aaa
fmull
cltd
fcomps
add
fbld
insl
dec
sbb
jge
add
jl
inc
call
add
lret
pusha
add
pop
pop
sbb
sbb
xor
stos
insl
fs
xor
hlt
lret
and
mov
or
enter
scas
jge
fidivs
add
add
notb
mov
repnz
xor
test
mov
je
sbb
insl
scas
mov
xchg
push
add
mov
pop
xchg
addr16
fisttps
push
push
sub
jb
sbb
fnstsw
cli
pop
inc
mov
add
xor
push
jno
jo
adc
xor
jne
add
add
lret
sbb
movsl
ret
lock
cmp
cli
mov
push
jne
mov
add
xor
jmp
dec
pop
jo
lret
pop
xchg
and
shrl
mov
add
push
push
aam
pop
mov
mov
inc
ficoml
mov
ss
icebp
and
repz
in
jmp
icebp
sbb
xchg
pop
cli
push
sub
cmp
sbb
jns
shlb
jmp
xchg
pop
and
scas
sbb
xchg
add
cltd
cmpsb
cmpsl
aas
test
add
or
outsl
repz
add
add
divl
add
cli
inc
or
sbb
cmp
adc
scas
adc
out
jb
pop
pop
iret
jnp
int3
ja
sub
cli
je
add
loope
mov
sbb
repz
sub
arpl
add
out
add
xor
repz
je
sub
add
cmc
inc
add
test
je
adc
push
add
push
mov
clc
mov
pusha
add
fnsave
aas
insl
pusha
add
addr16
fidivl
cmp
inc
mov
cld
mov
popf
and
mov
xor
les
mov
ret
lea
mov
in
mov
idivl
pop
push
add
pop
lea
jae
out
icebp
in
cld
test
xor
push
xchg
leave
jecxz
jb
aaa
mov
xor
arpl
dec
sbb
frstor
mov
das
loop
adc
je
jno
outsl
xor
push
add
cmpsl
call
dec
jl
push
pop
repz
imul
dec
add
stc
iret
lods
lret
push
mov
imul
xchg
adc
sbb
xlat
ret
or
mov
xchg
out
sub
add
mov
mov
negb
ss
flds
int
nop
imul
arpl
out
mov
add
fistl
mov
gs
fimull
cmp
sub
jg
inc
add
shll
jmp
ljmp
add
fsincos
shrl
push
into
sub
add
and
sbb
jb
mov
or
mov
add
add
jecxz
outsb
mov
mov
loopne
je,pn
pop
cmc
stos
movsb
push
iret
out
push
add
pushf
out
or
je
and
cs
adc
loop
loop
push
xor
out
and
sub
add
mov
pop
add
add
and
or
xchg
pop
lock
jg
push
lahf
es
push
ljmp
and
mov
pop
aam
and
or
sub
push
or
mov
fistpl
pop
add
daa
imul
jb
andl
orl
pop
jge
or
out
fildll
lret
push
push
add
dec
cmpsb
cmp
sub
push
add
jg
aas
xor
iret
movsb
mov
cmpsb
mull
mov
sub
xchg
out
lea
shll
push
mov
fcmove
pop
xchg
inc
add
add
xlat
and
cmp
lret
cmpsb
lods
sbb
sbb
push
add
aas
mov
enter
ror
out
ljmp
add
test
adc
mov
push
loop
ret
into
lock
xchg
bound
xchg
arpl
ret
into
lahf
jge
repz
xchg
xchg
es
insb
add
imul
add
add
push
iret
adc
fistpll
cmc
out
and
cs
add
jb
out
sub
or
jmp
orl
movsb
adc
jge
frstor
outsb
sbb
cmpsb
jg
mov
and
rclb
push
inc
inc
aas
notl
cmp
add
fsubr
bound
add
fiaddl
add
das
push
and
iret
shlb
out
add
sub
sbb
in
les
or
mulb
add
shlb
push
sbb
add
test
aaa
loope
sahf
jnp
aad
shrl
xor
jo
imul
add
add
add
mov
outsl
decl
push
lahf
in
fldt
xor
call
test
add
push
in
push
dec
ss
add
sub
test
sahf
addb
dec
jo
repnz
xchg
not
outsb
xchg
movsl
adc
mov
pop
int3
std
and
mov
lods
and
adc
cmp
sbb
push
or
sbb
add
pxor
xchg
sbb
add
out
sub
jne
mov
or
call
add
outsb
mov
lahf
mov
lcall
mov
mov
fprem1
push
sbb
divl
adc
imul
or
divl
cltd
dec
add
jecxz
add
add
fsubl
cli
test
mov
shlb
mov
sub
rorb
fst
push
outsl
addr16
ret
sbb
jl
xchg
fsubrs
in
dec
mov
mov
mov
imul
lods
inc
jcxz
lret
dec
jmp
cmpsl
ret
mov
int3
insl
mov
add
les
test
xorl
arpl
pop
rcr
jmp
pusha
add
push
pop
sub
mov
push
imul
imul
out
cmp
outsb
out
mov
fimull
adc
push
dec
mov
xor
test
push
add
add
aam
add
add
jg
pop
sbb
hlt
pop
lods
xchg
addr16
pushf
pop
fidivl
call
add
fsts
cmp
js
inc
add
push
add
pushl
inc
xor
dec
add
ljmp
sbb
fmulp
js
add
stos
sahf
xchg
jge
and
in
in
push
sahf
inc
rolb
xor
loop
sbb
mov
sub
cmp
aam
js
fisttps
and
in
mov
xor
pop
add
mov
lds
add
std
in
out
jp
stos
in
mov
xor
mov
add
in
cmp
inc
out
sub
push
jne
mov
jnp
jo
fdivl
cwtl
push
mov
ljmp
rolb
pusha
add
sub
pop
test
mov
loope
inc
jl
bound
cmc
xchg
adc
nop
sub
clc
out
add
aas
mov
fisttpl
sub
idiv
pop
add
cmp
lods
xchg
jne
in
and
loopne
mov
mov
push
add
jg
adc
lret
xchg
pop
add
test
sbb
mov
push
ficomps
jp
sti
sbb
repnz
add
jns
or
cmp
mov
or
jl
dec
dec
add
add
add
inc
pop
add
add
add
add
out
lcall
add
dec
push
sub
xor
xchg
push
adc
jle
add
or
mov
add
mov
cmp
add
mov
jmp
and
mov
or
ja
test
xor
jno
add
ljmp
jmp
mov
lret
jl
fistps
add
repnz
icebp
mov
push
stos
jg
rcrb
lock
insl
jne
mov
sub
mov
add
mov
and
sub
cwtl
mov
das
stos
sbb
fcmovnb
jbe
xchg
xor
ja
adc
sub
adc
push
push
lahf
lds
mov
add
mov
fbld
outsl
mov
add
movsb
jle
adc
ss
in
push
add
lea
outsb
bound
jg
pop
sub
outsb
push
dec
add
pop
inc
add
int3
ljmp
xor
cmc
rcrb
lds
in
sti
repnz
ljmp
je
add
pop
pop
flds
pop
fsubrp
mov
add
sub
jne
push
popf
sbb
aad
jp
pop
add
lcall
dec
cmpsb
rorl
add
aad
cmpsb
inc
int3
add
xchg
faddl
sbb
jge
not
icebp
loop
ret
and
out
movsb
imull
push
shlb
sbb
icebp
addr16
and
rclb
xchg
xor
dec
imul
loop
cmpsb
es
arpl
mov
xorl
xchg
push
mov
repnz
mov
fisubs
mov
add
clc
push
dec
adc
mov
add
inc
add
add
pop
add
mov
push
pop
add
pop
mov
and
shll
arpl
and
pusha
add
mov
mov
sti
negb
cmp
lds
fnstcw
and
push
xor
add
ja
and
mov
es
sbb
shrb
cwtl
adc
bound
mov
hlt
popa
push
add
jle
add
push
xor
add
clc
xor
inc
add
add
push
pmuludq
lcall
add
push
inc
test
aad
popf
push
xchg
jns
cmpsl
lret
add
pop
add
and
xor
lock
lret
fwait
int
add
clc
dec
pop
add
add
add
fxch
dec
add
lods
js
enter
sbb
add
add
cmp
mov
xor
scas
xor
push
and
push
pop
push
iret
mov
push
mov
add
imul
push
aad
xor
sub
dec
add
pop
loope
rolb
sbb
mov
hlt
jle
push
adcl
cmp
and
jns
add
fiadds
add
push
mov
fsts
cmp
and
sti
leave
loopne
add
jge
sti
in
sbbl
add
push
into
cmp
fisttpl
mov
add
into
cmp
and
jno
test
add
aas
dec
inc
add
add
movsl
mov
inc
in
push
insb
add
in
enter
sub
sbb
mov
add
add
add
add
stc
jno
sub
mov
inc
mov
and
jbe
push
sub
dec
add
add
ljmp
test
ret
dec
adc
cmpsl
loop
gs
testb
mov
dec
js
mov
dec
shll
lods
pushf
pop
mov
cli
inc
and
int3
inc
mov
pusha
add
outsl
hlt
push
cld
loope
add
add
fucomip
push
imul
inc
inc
scas
jb
cli
dec
add
or
sub
pop
xor
and
jae
xorl
mov
sbb
inc
pop
add
mov
shrb
int3
outsl
xchg
in
jp
add
sahf
outsl
scas
pop
orb
lahf
xor
call
add
iret
xor
dec
testb
cmp
sbb
pop
decl
fistps
out
push
push
sub
sarl
sbb
push
dec
adcl
jbe
sub
dec
imul
lahf
pop
lret
lds
loop
push
push
outsb
mov
add
jge
and
cmpsl
shrb
cmc
adc
movsl
jge
add
dec
add
adc
jae
mov
or
outsl
inc
add
inc
inc
pop
sbb
inc
ret
leave
pushl
mov
mov
adc
jns
and
ret
add
add
inc
push
add
cmpsb
std
xor
xchg
sti
ret
clc
les
or
cmp
outsb
dec
add
iret
xlat
adc
mov
add
push
jne
add
push
add
add
dec
dec
mov
add
test
add
adc
cmpsl
pop
add
sub
add
aas
cs
dec
or
add
sub
jne
pop
iret
rcll
mov
jge
es
cs
pop
mov
jne
xchg
cwtl
xor
repz
cld
mov
add
in
outsl
xor
popf
jbe
mov
ret
sbb
jbe
fwait
pop
sub
inc
call
mov
mov
cmp
add
int
sti
inc
ficoml
test
jns
xor
sbb
loopne
pop
add
add
ja
clc
cmpsl
incl
out
and
cld
icebp
test
insl
jbe
test
xor
inc
lret
add
lds
icebp
aaa
xchg
xchg
xchg
aad
int3
add
adc
jl
movl
adc
lcall
add
outsl
out
sbb
ret
sub
pop
adc
cmp
add
dec
dec
inc
add
sub
fidivrl
js
mov
lock
sbb
xor
xor
xor
jle
add
mov
pop
movsb
lahf
scas
mov
push
ror
movsl
push
mov
pop
add
xor
dec
inc
inc
out
mov
imul
adc
inc
sub
ja
xchg
push
cmp
nop
pop
add
pop
xchg
cs
scas
out
cs
mov
adc
daa
dec
pop
mov
popa
fidivrs
mov
add
jb
int
fdivrs
add
mov
sti
push
scas
icebp
xchg
addr16
pop
loopne
in
out
mov
int
hlt
adc
add
jecxz
aas
dec
rorb
jbe
in
push
imul
sahf
orb
and
sahf
xchg
dec
mov
and
inc
in
lds
cltd
mov
or
inc
and
add
xor
lcallw
loopne
add
pop
sub
and
cmp
xlat
and
dec
js
and
inc
add
pusha
add
scas
jp
mov
mov
lods
sbb
xlat
pushf
out
xchg
add
add
clc
andl
push
xor
repz
lret
jns
daa
and
inc
add
fstpl
js
cmp
xor
add
popa
cmp
push
sub
enter
sub
dec
std
aaa
bound
pop
adc
add
incl
push
js
hlt
or
add
shll
xchg
das
jle
loope
xor
push
mov
jnp
adc
add
aam
cmp
and
fisttpl
add
loop
jecxz
rcrb
jmp
pop
and
popa
rcrb
scas
pop
sbb
movsb
cmp
push
jp
mov
repz
mov
cmc
xlat
pop
xor
cmp
jmp
cmpsb
push
adc
ss
xchg
es
add
rcl
add
jmp
push
mov
jns
insb
add
mov
cmp
dec
fmuls
add
fdiv
nop
das
gs
cld
jmp
or
add
sbb
xchg
mov
inc
mov
xchg
jae
add
add
xchg
add
jno
add
inc
xor
dec
hlt
movsl
jecxz
sub
pop
test
inc
loop
xor
cmpsl
out
push
sahf
xchg
mov
push
test
addl
and
lods
out
les
pushl
test
xor
popf
iret
std
je
and
addr16
inc
sub
cmp
dec
cmp
fistl
negl
add
enter
cmpb
fsubr
mov
in
jae
into
add
out
mov
test
lcall
add
xchg
rorl
mov
add
rorb
add
fbld
addr16
push
xlat
dec
jae
add
adc
sub
dec
add
mov
outsb
in
add
loopne
jmp
js
test
add
push
gs
test
xchg
push
adc
imul
push
push
pop
adc
pop
add
add
sub
mov
xor
mov
xchg
loop
and
push
add
paddsb
and
mov
aas
or
sub
add
lret
je
mov
pop
and
ja
push
add
add
pusha
add
add
mov
mov
mov
int
add
and
insb
add
jecxz
xchg
into
mov
lds
mov
rcll
pop
cmp
scas
cmc
outsb
ljmp
cmpsl
decb
rol
jb
add
cwtl
mov
idiv
mov
lods
loopne
dec
rcr
ja
mov
add
ss
fidivs
pop
pushf
outsb
sbb
inc
add
and
xchg
or
stos
pop
jge
insl
loopne
ret
montmul
cmpsb
test
rcll
push
add
mov
add
jae
add
iret
adc
and
mov
or
push
movsl
aad
mov
nop
call
mov
xor
fldt
cwtl
jo
cmp
jns
outsl
dec
int
ds
bound
push
loope
mov
orb
mov
into
xor
aas
push
fsubrl
cwtl
stos
jns
dec
cmc
jb
cli
add
mov
pushf
cmp
mov
in
std
inc
push
shrb
cmp
into
jg
sbb
ljmp
mov
push
add
call
or
xchg
mov
push
jecxz
jae
pop
mov
add
xor
dec
xlat
ds
loop
ret
inc
xor
pop
aaa
mov
out
lods
xor
adc
push
cs
pop
jae
notl
imul
dec
and
ret
push
and
lret
cmpsb
icebp
ja
mov
jge
into
hlt
jbe
je
inc
dec
add
pop
aaa
sbb
cwtl
sbb
mov
add
or
jno
add
mov
dec
sbb
aam
sbb
fsubr
xchg
inc
add
mov
jle
mov
xchg
or
pop
jae
dec
dec
out
sbb
fwait
cltd
mov
add
push
dec
add
lahf
push
aam
rcll
add
ja
cs
push
or
imul
icebp
sub
hlt
adc
inc
inc
popa
mov
popl
movsb
jns
rorl
daa
jecxz
xchg
mov
add
lret
sbb
mov
add
je
add
sbb
inc
push
bound
inc
add
add
push
add
nop
mov
push
addb
add
out
xor
jno
imul
push
push
in
add
je
das
sub
mov
jae
out
jge
pop
lcall
cli
sbb
imull
sbb
add
or
test
dec
add
cmp
ret
bound
push
add
popa
xor
jl
cmp
ljmp
mov
xchg
loop
cltd
sub
mov
sub
push
stos
and
jno
arpl
ds
mov
mov
hlt
mov
fcmove
fadds
push
mov
mov
mov
je
pop
add
in
mov
pop
lods
les
daa
lea
inc
mov
mov
xchg
mov
fucomip
xor
xlat
andb
nop
iret
addr16
movb
mov
and
jl
mov
sub
leave
add
jne
xchg
cmp
xchg
sub
pop
adc
or
cmp
cmpsl
dec
fs
outsb
imul
les
adc
mov
adc
xor
mov
push
xchg
repz
mov
shrb
in
pushf
es
fcomip
cmpsb
push
daa
movsl
mov
mov
maskmovq
testl
es
push
add
add
out
xchg
in
or
cld
cltd
sub
mov
jns
add
in
add
nop
icebp
lods
loopne
or
repnz
add
pop
aaa
xor
sub
sbb
sbb
xorb
imul
push
data16
shll
fsubs
pushf
pop
add
pop
inc
add
adc
out
pop
add
addr16
aam
icebp
mov
addr16
xchg
insl
cmpb
int3
aad
add
xlat
adc
mov
and
push
popa
cmpsl
mov
test
sub
cmp
inc
add
mov
mov
ja
insl
sahf
sbb
add
roll
out
cmp
outsl
push
pop
add
fimull
add
aam
jns
push
cmp
add
pop
cmp
and
sbb
mov
pop
out
add
add
adc
and
lods
xor
outsl
adc
mov
xor
inc
jne
xchg
cmpsb
xchg
lret
and
inc
aas
cmp
push
add
in
lret
rolb
jecxz
bound
ja
test
lods
push
mov
dec
aaa
sub
and
and
or
add
lock
pop
dec
es
mov
int3
sbb
adc
enter
imul
pusha
add
and
mov
xorl
jbe
add
cwtl
xchg
stc
jmp
pop
mov
pop
add
push
mov
inc
add
jle
mov
out
sub
stos
lods
daa
loop
mov
and
fldenv
aaa
decl
add
dec
add
xor
call
nop
lea
push
add
mov
add
pop
outsl
mov
dec
add
out
in
imul
or
xor
add
sub
loop
xchg
fldt
fsubrl
outsl
rcll
jae
sti
lahf
aaa
rcrl
dec
fstps
mov
inc
add
out
mov
dec
xchg
repnz
jno
and
sub
xlat
xchg
jle
or
cmp
mov
lea
xor
divl
mov
mov
and
fwait
push
add
push
xor
je
repz
jns
out
imul
inc
add
fiadds
xchg
xlat
xchg
loope
xchg
std
sub
push
add
fnsave
adcb
pusha
add
fcom
lods
xor
cmpsl
ficoms
popf
ljmp
sub
pop
mov
add
pop
mov
cmp
mov
adc
sub
xchg
sbb
cmp
jg
nop
mov
jmp
lock
cs
inc
add
xchg
popf
out
frstor
hlt
fwait
mov
call
xlat
inc
iret
test
mov
lahf
bound
pop
stos
aas
in
clc
stos
outsb
sub
push
or
sti
nop
or
lea
xchg
add
push
fwait
sbb
call
dec
in
pusha
add
add
xchg
inc
cmp
sbb
mov
add
je
icebp
cmp
pop
fwait
in
hlt
iret
js
movsb
pop
mov
jnp
les
add
sub
lea
inc
test
sti
push
mov
and
rcll
mov
add
cld
je
cltd
xchg
pop
add
aaa
faddl
sub
out
cmc
shlb
push
add
out
jge
dec
add
push
add
dec
mov
ds
jle
jge
xor
mov
sahf
push
dec
add
popf
js
mov
jle
das
jmp
add
stos
mov
mov
adc
mov
add
outsb
js
fistpll
or
aaa
mov
add
fisttps
in
imul
fisttpll
mov
jne
add
clc
insb
add
ss
sbb
cmp
ja
dec
int
adc
hlt
and
fidivs
into
adc
sbb
les
mov
pop
add
add
mov
dec
xchg
cmpsl
xchg
popa
sbb
lgs
pop
jle
add
mov
inc
sub
pop
mov
cvtps2pd
lea
add
xchg
jo
inc
or
pop
add
imul
push
in
dec
xchg
fdivr
push
add
jo
xchg
sbb
je
aaa
test
add
lea
sub
fmull
cmp
add
aaa
mov
in
add
jle
add
fstpt
add
in
sub
popl
xchg
and
and
cmpsb
cld
outsl
cmp
push
xor
into
lea
les
and
or
push
adc
mov
jae
out
xorl
loop
mov
stc
cltd
mov
sbb
mov
in
nop
das
and
jnp
in
fwait
xchg
lcall
mov
add
pusha
add
popf
bound
xchg
jnp
mov
add
aas
lcall
add
mov
lods
push
shll
out
loope
icebp
jnp
pop
adc
loope
adc
mov
add
lahf
xor
pushf
and
lods
push
cmp
dec
add
fcoms
add
sub
es
fsubrl
adc
aas
mov
popf
mull
std
movsl
mov
add
jge
pop
mov
dec
cmp
add
pop
aas
jp
addr16
pop
iret
rclb
dec
add
shr
loop
xor
add
lahf
or
dec
add
xlat
pop
cmpl
ret
cltd
mov
pop
xchg
or
jnp
add
jno
leave
shll
or
daa
pop
adc
or
dec
cmpsl
cmpsb
scas
xchg
pop
mov
add
adcb
inc
add
xor
adc
add
lds
lcall
enter
push
andb
add
rcrl
repz
jle
pop
leave
cmp
lock
add
pop
jmp
push
iret
add
add
and
xchg
test
pop
jno
mov
mov
lahf
cmc
les
lea
jg
vmwrite
add
inc
xor
xchg
cmpsb
push
paddd
jno
clc
sbb
rorl
imul
mov
loop
inc
cmp
nop
test
add
enter
add
sahf
leave
dec
add
xor
mov
insl
test
cmp
cmp
insl
push
lret
sub
mov
add
mov
xor
mov
outsb
xor
nop
mov
jmp
ret
xchg
jg
mov
out
xor
mov
lock
sahf
lahf
cmp
add
xlat
fldcw
or
adc
add
sbb
mov
xchg
es
and
inc
pop
dec
jge
push
jecxz
mov
sbb
add
and
leave
insb
add
or
aaa
dec
add
mov
add
cmp
add
mov
or
push
mov
je
mov
pop
fsub
add
or
inc
leave
ljmp
jle
shrl
add
lods
cmpsb
xlat
pop
mov
gs
pop
movlps
adc
popa
clc
xchg
imul
lock
mov
fldt
sub
pop
addr16
xchg
push
inc
add
sar
sbb
push
add
bound
mov
add
inc
or
imul
fstpl
repz
jne
mov
add
add
add
cmpsb
sbb
pop
cmpsl
sbb
jne
sbb
mov
js
addr16
xchg
add
jno
lret
std
lods
ja
jmp
mov
jmp
pop
sbb
negl
andl
lret
les
mov
jl
jb
add
mov
stos
sub
shll
je
pushf
shl
aad
ja
inc
je
clc
sahf
ljmp
ret
aam
pop
add
mov
sbb
sub
arpl
aam
pop
aaa
cmp
mov
pop
insl
push
push
subb
jns
pop
test
push
sbb
add
es
add
fiadds
xlat
faddl
in
nop
pop
dec
and
pop
repnz
imul
add
aam
push
clc
scas
and
mov
std
fld
mov
add
enter
mov
add
hlt
sub
mov
test
jns
mov
clc
or
aam
push
lahf
cmpsb
mov
testl
add
arpl
xchg
cmpsl
jae
add
add
imul
iret
scas
stos
pop
add
hlt
loop
adcl
ja
add
xor
adc
dec
es
push
and
add
mov
mov
in
cmpsb
mov
scas
sub
cmpsl
les
leave
bound
inc
gs
lret
mov
sahf
pop
sti
dec
xchg
sbb
or
mov
push
and
xlat
xor
sub
add
mov
and
sti
loopne
out
or
rep
sub
push
add
xchg
iret
fwait
jle
das
pop
add
pushf
push
cli
mov
sub
jg
add
add
jbe
adc
scas
push
and
add
xor
add
icebp
ret
mov
push
xchg
aad
or
xchg
sbb
add
fisttpll
int3
fdivs
add
in
pop
in
pop
mov
jl
adc
fs
sub
or
inc
xor
add
push
add
mov
dec
add
push
add
stos
and
stos
add
sahf
arpl
ficoml
loop
and
lds
jp
sub
add
pop
add
xor
fwait
and
adc
data16
test
sub
push
push
add
movsb
cmp
sbb
mov
or
mov
push
test
and
lea
clc
push
movsb
add
cmp
push
out
mov
out
jp
adc
xchg
add
sbb
addb
call
add
cli
sub
push
push
lods
ja
aam
jne
add
add
inc
add
or
fsubs
arpl
andb
add
jns
mov
sahf
inc
add
xor
dec
pop
call
iret
into
adc
subb
jmp
add
pop
add
push
fnstenv
xchg
mov
bound
cmp
mov
sbb
enter
dec
cmp
dec
pop
leave
dec
add
xchg
sub
das
rolb
testl
sahf
sbb
cmp
pop
mov
or
mov
popf
mov
arpl
movsl
xchg
lods
sbb
popf
lock
cltd
ror
jmp
add
fldcw
jge
jge
mov
push
sbb
xorl
loope
lea
add
xlat
in
stc
sub
out
aas
xor
gs
add
cs
subb
stos
clc
and
add
scas
test
sub
test
std
aaa
data16
add
aam
scas
insb
add
add
or
test
fdiv
int
add
pop
jb
xchg
mov
pop
pop
jp
ljmp
mov
lds
add
add
xor
in
mov
jp
mov
sub
mov
cs
int
mov
add
dec
add
iret
dec
add
jae
push
repnz
and
scas
pop
and
lcall
mov
add
adc
aad
sub
push
adc
add
add
ljmp
cmp
and
cmpsb
cmp
imull
test
or
movsl
jg
int
rclb
push
fadd
xchg
out
pop
sub
cmp
or
loope
add
sbb
mov
sub
dec
push
sbb
les
push
pop
inc
mov
mov
inc
add
cmp
sub
adc
aad
stos
inc
mov
jne
pop
jo
inc
insl
movsl
incl
push
fistps
add
das
add
add
add
scas
hlt
and
mov
pop
inc
imul
push
add
add
jne
ljmp
xchg
or
cmp
cltd
mov
mov
and
stos
cld
imulb
cmp
jb
sub
scas
int
sub
xor
mov
sbb
iret
mov
sbb
inc
es
mov
inc
mov
nop
fcmovne
cltd
stos
fprem1
pusha
add
add
push
fcompl
add
add
aaa
icebp
lret
push
lahf
fcmovnb
and
or
iret
mov
jmp
sarb
data16
fnstenv
inc
and
aas
mov
movsb
int3
cmp
stos
mov
inc
movl
call
fistps
push
sub
outsl
add
das
cmp
mov
add
add
icebp
out
mov
mov
in
daa
cld
iret
pushf
jp
mov
fistps
inc
lahf
imul
xchg
lret
push
xchg
xchg
lret
jno
repnz
jnp
fstl
mov
dec
push
sbb
cmp
movsb
sub
mov
mov
cmp
push
dec
jnp
out
xchg
dec
mov
aam
pop
add
mov
push
jno
xchg
inc
les
add
jle
fildll
sbb
lea
add
test
outsb
cmp
mov
xchg
andb
sub
hlt
cmp
popa
jl
push
pop
sbb
cmp
dec
pop
test
mov
xor
adc
push
cli
mov
mov
fisttpll
in
aad
out
mov
aaa
add
shrl
dec
sti
sar
add
xchg
sbb
bound
arpl
subb
mov
sbb
mov
aaa
adc
push
add
mov
inc
not
and
repz
xchg
lret
fidivrs
fwait
pop
int3
outsl
mov
add
sub
add
and
pop
std
popf
adc
fdivrp
int
xor
fadds
sbbb
seto
sti
xchg
outsl
and
fcoml
add
inc
mov
cmp
test
add
fwait
and
xchg
dec
add
sbb
xor
add
xor
in
sub
dec
popf
iret
or
pop
in
sbb
jnp
xchg
fst
mov
movsb
sub
es
and
sbb
add
mov
cwtl
repz
pop
cwtl
int
add
repz
add
into
xor
add
pop
pop
call
adc
mov
inc
loope
xor
jo
jg
adc
insb
add
inc
cltd
mov
pop
pop
je
or
mov
mov
fildl
imul
ficoms
shlb
lods
fisttpl
add
add
movsb
pusha
add
sub
cmp
idivb
sub
xchg
or
add
pop
add
adc
leave
fnstsw
bound
in
add
daa
pop
std
inc
add
sbb
add
cmp
add
add
inc
mov
sub
add
add
sahf
repnz
xor
loopne
imul
ljmp
stos
cltd
xor
icebp
pop
or
xor
pop
jp
pop
xchg
mov
shl
arpl
mov
and
repz
add
insb
add
out
imul
push
add
das
dec
data16
add
lahf
mov
lcall
add
imul
in
add
popf
fldenv
lods
push
mov
mov
jg
notb
mov
mov
idivl
lret
test
add
fisttps
nop
xor
bound
out
movsl
lahf
mov
inc
adc
lock
add
scas
in
ds
dec
add
fists
jp
add
jmp
not
and
fdivrs
add
loopne
movsl
dec
add
sub
or
mov
add
nop
repz
sub
stos
inc
add
xchg
stos
fmuls
hlt
mov
les
jnp
sbb
aas
aad
dec
lret
push
rcll
loopne
bnd
sbb
push
aas
outsl
jne
push
les
add
ljmp
add
call
adcb
mov
ljmp
jecxz
add
pop
add
fdivl
neg
or
dec
add
jmp
sahf
in
add
and
add
cmp
cmp
xor
enter
xchg
lret
jnp
test
add
data16
mov
mov
xchg
mov
test
lock
stos
test
and
push
or
push
sub
decl
inc
mov
mov
out
fmuls
mov
or
out
push
pop
pop
jl
ds
addr16
sub
add
jno
push
arpl
mov
or
adc
cmp
outsb
add
pop
rcrl
ret
mov
mov
mov
add
je
andb
and
jl
and
stc
mov
cmp
xchg
idivl
and
add
push
add
fdivrs
sti
sti
outsb
jge
xor
test
incl
cmp
nop
jb
aaa
outsl
dec
add
pusha
add
into
dec
jmp
scas
xor
sbb
fistl
aaa
xchg
pop
add
mov
adc
sbb
jmp
insl
push
sub
sub
push
xor
lcall
mov
jns
clc
lds
cmpsb
mov
jno
ret
xchg
adc
adc
sub
jmp
sub
mov
mov
test
jge
fidivs
mov
cmp
add
jecxz
push
add
push
jo
ret
shrb
adc
cmp
mov
xorl
add
int3
mov
add
andb
mov
add
add
xchg
bnd
sti
or
stos
adc
jae
scas
fldt
mov
push
dec
add
push
adc
push
xchg
aas
into
push
stos
mov
jns
add
stos
or
and
dec
jne
add
add
lret
insb
add
xchg
inc
sbb
cmpl
push
adc
cmp
pop
ret
jg
xchg
add
movsb
add
cmp
in
mov
adc
mov
dec
call
add
lcall
shll
cli
jp
repnz
jo
dec
push
dec
hlt
xchg
dec
pop
insl
or
jle
add
mov
cs
ret
lcall
mov
out
sub
imul
fwait
pusha
add
rorl
arpl
jns
test
lods
pushf
inc
test
mov
push
mov
xchg
mov
stc
jns
mov
add
clc
enter
mov
std
ljmp
outsb
aad
je
add
adc
add
add
rorb
mov
das
mov
and
jecxz
das
inc
add
xchg
pop
stos
daa
mov
daa
jbe
xchg
mov
stos
int3
or
add
push
inc
lahf
mov
add
mov
push
int3
sbb
adc
pop
adc
andl
dec
add
dec
jns
cltd
sahf
mov
add
add
mov
popf
dec
add
lods
flds
push
jbe
test
pushf
pop
add
nop
pop
xchg
icebp
pop
or
leave
sub
loopne
xor
fs
je
stc
mov
sub
sti
sbb
push
ja
and
cli
or
xchg
insb
add
mov
add
icebp
int3
pop
add
push
popf
xlat
jle
add
insb
add
push
cmp
in
ljmp
mov
cmc
mov
jnp
mov
add
xchg
xlat
and
and
dec
mov
add
sti
scas
popf
push
nop
outsl
jo
testb
aas
ljmp
xchg
push
add
addl
add
push
mov
cmp
or
xchg
lea
or
mov
out
xchg
popa
shlb
mov
das
inc
frstor
add
pop
add
shl
jb
lods
dec
add
les
add
xchg
xchg
pop
mov
push
add
xchg
femms
outsl
and
outsb
xchg
push
popa
xor
xchg
aas
and
add
xchg
fldenv
cld
pop
or
lds
push
add
or
loopne
jae
add
mov
test
mov
add
mov
mov
pop
add
jne
fdivrl
testb
xchg
test
push
add
jb
imulb
xor
mov
lds
jnp
or
stc
and
popf
repz
enter
outsl
dec
mov
adc
movsb
popf
repnz
sub
loop
and
das
pop
xchg
jno
outsl
sub
add
fldenv
jb
push
addl
fcomps
lock
leave
push
stos
psrad
lock
sub
loop
sub
add
cmp
fwait
ds
and
cmp
test
dec
jo
sub
out
and
test
lret
pop
add
shlb
daa
mov
icebp
mov
sub
xchg
cwtl
add
or
add
and
sti
jle
push
mov
xchg
aaa
inc
cmp
les
in
push
push
jnp
pop
int3
loope
add
lods
jle
frstor
sub
and
sarb
add
aam
decb
aaa
rcl
xchg
clc
js
push
jg
mov
mov
add
pop
stos
outsb
xor
jp
jno
outsl
add
pop
mov
xor
cmp
add
shrl
insb
add
shr
daa
test
adc
push
pop
inc
mov
push
in
pop
or
add
inc
add
add
cmp
mov
movsb
cmpsb
out
imul
repz
jbe
imul
ja
popf
or
push
xchg
xchg
imul
rep
push
imul
add
in
mov
cmc
rcrl
push
into
mov
fdivrs
cmovnp
add
mov
test
inc
sub
mov
adc
add
xor
xor
test
dec
int
adc
or
add
mov
into
enter
add
sub
xchg
sbbl
sar
sbb
mov
dec
sub
mov
fildll
mov
add
dec
pop
fcomps
mov
sbb
push
scas
cmp
fcmovnb
in
cmp
mov
movsb
mov
push
ret
pop
fcom
and
push
or
testl
out
icebp
mov
stc
add
add
adc
lock
push
das
sbb
xor
aam
add
sub
cwtl
in
lahf
xor
push
add
add
fsubs
inc
add
add
fisttps
mov
lahf
sbb
out
popa
std
and
dec
mov
lock
cli
sub
in
dec
icebp
scas
push
adc
add
pop
push
xor
xchg
cs
mov
mov
sbb
sub
mov
mov
jnp
fsubl
add
lds
cli
outsb
inc
jo
lcall
hlt
insl
faddl
repnz
jbe
mov
xor
lret
rcrb
int
add
fadds
xchg
or
add
in
dec
push
movsb
push
outsb
inc
bound
adc
bound
jb
lahf
mov
insb
add
data16
ret
lcall
jne
stc
mov
add
adc
ret
aas
in
sahf
adc
hlt
cmpsb
imul
shrd
outsl
lea
les
and
lock
add
mov
shrl
das
mov
push
add
jb
adc
das
push
cmp
add
xchg
inc
add
movsb
mov
negb
inc
add
adc
repnz
cmp
jo
je
js
sub
xchg
mov
pop
jmp
add
bound
pop
xchg
adc
lds
cmp
mov
jnp
pop
add
cmp
outsl
xchg
sbb
js
movsb
xchg
cmpsb
or
mov
fldcw
fwait
pop
sub
push
jnp
movsb
jmp
jge
add
xchg
cltd
cmp
out
jbe
es
sbb
push
test
lods
ret
inc
add
inc
aas
push
cmp
pop
call
push
mov
imul
addr16
adc
jle
xchg
fildl
add
mov
js
cs
pop
jb
mov
ficoml
fcos
ja
inc
add
movsl
push
mov
in
mov
popf
push
shrb
sahf
fnsave
push
fildl
push
jbe
imul
testb
das
pop
jge
and
sub
mov
add
lret
xor
dec
adc
insb
add
pop
inc
inc
cmpb
and
sub
mov
pop
jmp
pop
add
add
mov
pusha
add
testb
das
adc
xchg
adc
cmp
mov
cltd
jge
xor
fbstp
dec
add
lret
mov
in
inc
add
jbe
lsl
js
jnp
xchg
lods
and
add
mov
jne
or
cmp
ret
inc
pop
pusha
add
inc
outsb
scas
fcomps
xchg
add
add
add
fisubs
mov
fdivrl
jne
sbb
cmpsb
mov
stos
xlat
data16
cmc
push
push
cltd
cmp
sub
pop
add
sbb
add
into
jne
adc
orl
or
les
sub
sbb
mov
imul
add
sbb
add
add
jns
inc
out
add
bound
add
adc
add
shrl
arpl
lret
cmp
adc
rcrl
inc
movsl
push
sbb
xchg
sub
arpl
es
pop
add
frstor
in
and
imul
std
out
or
mov
add
sub
fldcw
cmp
add
or
xor
les
loop
inc
xchg
inc
push
sub
cmp
dec
add
add
rorl
shlb
cwtl
jge
add
dec
aaa
jge
arpl
daa
cltd
stc
sbb
scas
adc
mov
cmp
pop
je
and
test
je
or
or
push
add
ret
scas
dec
daa
shlb
lods
lahf
rolb
inc
add
shl
push
jnp
stos
inc
js
push
rolb
outsl
pop
sub
dec
mov
popa
pop
rcrl
jecxz
jne
rolb
mov
dec
add
jne
sub
out
rolb
push
bnd
mov
add
xchg
jbe
pop
add
mov
push
dec
mov
jmp
mov
fnstenv
add
xchg
mov
or
mov
mov
add
lretw
xchg
shll
add
call
xor
jmp
ja
mov
js
add
adc
fcmove
sbb
push
cmpsb
mov
lret
scas
jbe
js
xchg
mov
cmp
ds
mov
jns
fbld
insl
lods
dec
add
int3
xor
dec
add
ja
loope
inc
or
cmp
pop
sbb
repnz
cs
inc
add
jbe
daa
lcall
out
sbb
test
cld
jno
mov
leave
mov
sbb
xchg
into
mov
pushf
pop
mov
int3
mov
xchg
ljmp
hlt
xlat
cmp
iret
stc
push
add
fisttpl
fcmovb
lret
lds
jle
inc
add
dec
add
lods
popa
push
add
xchg
inc
add
add
cmpb
icebp
popl
push
add
lcall
add
leave
push
add
jmp
sbb
lahf
mov
sbb
xchg
imul
mov
add
pop
cmp
add
jge
mov
popf
aam
jg
inc
repnz
data16
test
add
mov
add
jnp
pop
push
inc
add
hlt
mov
mov
add
subl
push
insb
add
lea
add
dec
push
jl
lods
mov
jns
cltd
dec
add
dec
adc
add
lcall
mov
xchg
or
add
stc
inc
add
cmp
mov
mov
ret
add
cmpsb
ret
scas
fistpll
jo
or
jle
gs
or
icebp
mov
inc
add
push
jecxz
scas
push
ss
add
sbb
ds
mov
incl
test
mov
pop
cmp
fstpl
das
jns
test
outsb
lret
xchg
dec
mov
mov
sbb
mov
xor
mov
int
call
sub
jo
dec
add
daa
scas
xor
adc
push
das
aaa
popf
addr16
in
inc
incl
push
add
dec
imulb
add
jnp
cwtl
js
push
add
aas
xor
pop
adc
jb
cld
pop
add
cmc
mov
sbb
push
mov
add
mov
es
and
pop
xchg
jge
shrl
and
add
inc
test
add
sbb
int
xlat
lods
stos
andl
mov
into
inc
and
dec
cmp
fmull
mov
les
push
push
out
add
pop
pushf
lods
imul
cli
rcrb
push
lds
int
cmp
adc
rcll
xchg
aam
in
cmpsl
mov
cltd
inc
add
add
int3
addr16
add
dec
lea
lods
roll
and
inc
mov
shlb
jmp
add
add
imul
cmpsb
std
imul
inc
insl
mov
jbe
pop
mov
inc
jnp
pop
outsl
push
add
mov
popf
int
lods
test
mov
jno
pop
sbb
pushf
sbb
dec
repz
add
stos
jle
cltd
dec
in
add
in
fstl
pop
add
cmpsl
sbb
mov
xchg
cltd
jg
sarb
std
in
shlb
ret
dec
push
sub
mov
mov
jo
test
xchg
xchg
sti
adc
add
cs
sbb
pop
fwait
lahf
cmc
test
mov
xchg
cmp
pop
push
xchg
jmp
lock
xchg
icebp
lds
sub
mov
add
nop
cld
gs
mov
add
repz
push
jnp
add
aad
add
lret
add
in
ss
fstpl
cmpsb
push
add
adc
mov
mov
and
jbe
add
mov
pop
mov
lahf
repz
pop
ret
cmc
mov
xor
pusha
add
das
add
pop
iret
mov
mov
lea
mov
add
int
icebp
fisubl
cmc
cmp
sarl
cmpl
ja
dec
sarl
mov
sbb
and
imul
or
and
iret
push
pop
add
fsts
and
add
mov
inc
or
addb
hlt
push
popl
add
sbb
outsl
jbe
jne
and
mov
pop
jge
add
pop
push
jle
xor
mov
jne
icebp
pop
add
lahf
cltd
bound
ss
mov
loopne
cmp
insl
mov
or
mov
scas
imul
test
popf
xchg
cmp
daa
imul
mov
lret
int3
xchg
xchg
push
add
iret
mov
adc
fcoml
fdivl
mov
inc
add
xor
cld
cmp
test
xor
mov
inc
sqrtps
push
fiaddl
subl
add
cmp
imul
mov
int3
mov
aaa
sub
pop
xor
or
adc
xchg
push
push
add
sbbl
orb
cmp
add
add
nop
cmp
dec
mov
mov
add
xor
lahf
adc
xchg
fisubrs
and
mov
cmp
fisttpll
lahf
pop
loop
scas
shl
fcomps
mov
and
sub
insb
add
ja
mov
add
inc
xchg
lret
in
xor
ret
iret
test
negl
ljmp
xchg
or
dec
lahf
pop
add
rclb
fst
sbb
addr16
enter
inc
add
mov
stos
pushf
push
add
repnz
mov
psubsb
push
out
das
dec
xor
jae
sbb
int3
aaa
jg
fistpll
jo
mov
out
movsb
push
lahf
stc
pop
lret
das
mov
mov
mov
add
add
test
adc
dec
add
lds
enter
add
add
push
mov
cltd
cwtl
data16
mov
or
cmpsb
mov
fnsave
dec
add
push
jnp
test
cmp
xor
sub
notb
decl
popa
pop
add
scas
xchg
add
rcll
add
fcmovbe
add
sbb
in
push
ljmp
ret
push
cmpsl
push
add
test
xor
or
or
and
mov
xor
mov
push
or
jmp
in
mov
add
jb
mov
mov
insb
add
jge
xchg
inc
insl
cltd
addb
push
xchg
sub
mov
jp
sub
aaa
and
mov
or
clc
mul
mov
addr16
pop
test
adc
and
sbb
fldcw
outsl
and
mov
mov
fiadds
xchg
push
add
push
xchg
faddl
shlb
arpl
dec
iret
shr
jno
outsb
and
mov
int
mov
xchg
std
fdivr
ret
mov
sbb
jle
sbb
negl
lods
pop
add
push
loopne
jne
push
adc
add
rorl
ret
aad
call
jmp
adc
add
sbb
test
repnz
sarb
push
sbb
adcb
add
mov
inc
dec
add
lret
out
clc
push
add
nop
into
lods
daa
push
mov
push
fsubrs
xchg
outsb
fsubl
push
aaa
loope
add
leave
mov
pop
add
mov
jno
sub
push
add
mov
pop
add
ja
jo
sbb
sarl
add
add
push
pop
cmp
sbb
pop
push
test
xchg
xchg
shrl
ss
mulb
mov
add
mov
aam
loope
ja
adcl
or
add
mov
add
sub
xchg
cmpsb
inc
add
sub
jo
or
add
and
inc
xchg
pop
ljmp
stos
add
jno
sbbl
scas
mov
outsb
nop
fdivrl
dec
add
sub
adc
insl
cpuid
or
xchg
ret
in
inc
or
xlat
ret
stos
sarb
out
movsl
mov
cmp
push
push
push
fidivs
cmp
adc
add
mov
inc
out
sbb
mov
mov
movsb
dec
add
mov
push
add
add
daa
pop
hlt
sbb
loope
jno
jg
pop
jl
cmpb
add
jae
std
xchg
imul
pop
inc
add
add
mov
add
xlat
add
not
mov
jo
mov
push
jp
cmp
cmp
dec
jo
jge
dec
or
repz
pop
outsb
adc
xchg
inc
inc
adc
out
jle
shll
mov
inc
add
leave
and
adc
fadd
aas
lret
add
sbb
pop
jmp
dec
repz
add
add
std
xchg
mov
add
push
into
add
mov
loopne
cmp
and
xchg
sahf
out
push
lahf
outsl
flds
out
outsl
sbbl
mov
xchg
shl
sbb
push
je,pt
into
out
pop
add
add
pop
add
pushf
or
outsl
pop
repnz
add
jmp
jne
jg
test
add
dec
inc
adc
and
or
test
mov
stos
es
adc
add
add
sub
sbb
cmpl
add
mov
rolb
sbb
cmpsb
shl
sbb
into
mov
loope,pn
gs
adc
and
clc
aas
jnp
testl
test
inc
add
jg
push
push
xchg
add
mov
add
xor
dec
and
popa
and
bound
mov
pusha
add
lcall
adc
inc
add
sub
cmpsb
in
fwait
cmp
push
hlt
rcl
adc
pop
cltd
cmp
loop
sbb
sbb
cltd
jmp
adc
enter
xchg
xor
xlat
xchg
shlb
pusha
add
and
jle
and
adc
es
inc
add
or
and
push
sti
je
out
jmp
scas
fisttpll
pop
push
pop
mov
push
jecxz
js
lods
dec
xor
sub
rcl
bound
mov
rol
inc
jle
mov
cltd
sete
mov
mov
jno
pop
in
int3
adc
sub
lods
push
dec
mov
ja
and
fcmovnbe
pusha
add
add
int
mov
add
icebp
sahf
jecxz
aad
sub
jmp
jo
xchg
rorl
movsb
iret
adc
aad
lock
jg
add
test
mov
add
sub
enter
inc
sub
pop
out
adc
add
sbb
aam
rcrb
push
add
cmp
mov
lret
int3
cmpb
shlb
adc
adc
cmpsb
and
jbe
sbb
js
add
mov
std
movsl
js
adc
hlt
jp
clc
dec
inc
aam
add
lock
loop
xor
es
xchg
adc
add
mov
sahf
push
add
push
add
lret
in
xchg
insl
test
dec
add
inc
loopne
leave
popf
daa
push
loopne
cmp
cmp
jmp
add
out
inc
cmc
lods
xchg
pushf
cmp
shrb
mov
jp
add
stos
xchg
negb
dec
add
ret
adc
sbb
add
gs
lcall
push
push
add
push
pop
sub
pop
cltd
adc
sbb
icebp
ret
rolb
addr16
clc
add
sub
add
mov
mov
mov
sub
cmpsb
outsl
sub
std
sarb
jo
cmp
mov
add
add
cli
jbe
pop
pop
lock
insb
add
loopne
jb
test
dec
add
fsubrl
popa
jmp
pop
popa
stos
xor
inc
ret
in
jb
add
mov
adc
add
adc
dec
pop
pop
sbb
or
inc
shlb
adc
adc
gs
xor
or
outsl
pop
daa
or
add
add
xor
notl
cmpsb
sbbl
add
out
aad
add
fimull
xchg
pop
ds
sub
shl
ss
dec
mov
add
add
jp
mov
clc
fcoml
stos
and
add
cmp
adc
leave
stc
push
cld
mov
mov
and
pop
jg
inc
int
pop
pop
lcall
mov
dec
mov
fadds
inc
aam
aad
clc
sbb
ds
ret
mov
popa
jnp
add
xchg
dec
add
add
gs
xlat
shlb
xorl
lret
nop
flds
jg
add
sti
stos
lret
xor
icebp
fcoms
fisttpll
mov
pop
jb
mov
inc
movl
and
lods
push
add
jo
insl
add
xor
shlb
mov
dec
mov
out
dec
pop
lock
add
push
js
ds
dec
add
lock
cmpl
add
ss
filds
mov
cld
jge
mov
lods
sub
popa
push
push
jp
mov
sti
iret
dec
into
arpl
lods
scas
in
repz
sub
or
test
clc
jle
loop
fcmovb
imul
xlat
add
add
movb
push
fldcw
cmpsl
lahf
add
orb
jbe
xor
lea
popa
xor
jbe
sub
push
inc
add
cmp
loop
cmp
sub
xchg
popa
fistl
add
adc
scas
adc
cmpsb
mov
add
lea
iret
leave
dec
add
add
inc
or
jno
clc
movsl
mov
scas
mov
lahf
mov
mov
pusha
add
mov
add
dec
addr16
lods
pushl
pop
push
add
jns
mov
or
rclb
add
mov
push
xorb
inc
adc
lea
in
inc
sub
fnstenv
add
outsb
mov
sbb
lea
in
push
add
sbb
cmp
aad
mov
rclb
int3
ficoms
dec
add
add
dec
add
inc
add
mov
adcb
enter
les
push
outsl
jbe
xchg
xlat
mov
mov
jl
popa
and
push
cmp
cmpsb
dec
sbb
xor
xchg
pop
add
addr16
jp
push
leave
cmp
add
sub
xor
mov
idivb
mov
daa
pop
outsb
mov
add
mov
cmp
xchg
pop
mov
xchg
mov
push
xchg
aas
inc
add
lds
mov
mov
add
dec
jp
add
pop
xchg
dec
cmc
loopne
xchg
sbb
pop
add
mov
jb
iret
xchg
sbb
or
push
add
xor
lods
lods
rcrl
aam
inc
sar
pop
in
mov
shrb
dec
mov
pop
out
mov
xchg
pushf
push
push
bnd
add
fst
add
add
adc
mov
dec
mov
jecxz
add
lock
adc
in
ljmp
outsb
leave
pop
imul
mov
xor
in
lods
mov
add
sub
xchg
mov
add
adc
outsl
aad
stos
adc
push
add
fistl
jae
jnp
add
add
fidivrs
bound
mov
add
jae
xor
aad
rcl
enter
dec
add
mov
leave
mov
int
icebp
movsb
iret
push
mov
daa
es
xchg
push
mov
or
dec
add
out
and
dec
repnz
dec
in
xchg
mov
pop
int3
add
jns
imul
jmp
test
add
lock
xchg
gs
cld
push
mov
aas
repnz
sbbl
push
or
mov
push
cmp
test
jg
add
xchg
add
mov
icebp
or
outsl
cmp
add
into
adc
xlat
cmp
ror
lods
cltd
ljmp
aas
adc
or
sub
sbb
dec
mov
loopne
fisttpl
push
ds
stos
adc
add
push
cmp
add
jnp
add
or
in
stos
shlb
mov
mov
mov
sub
xchg
loop
stos
pusha
add
fstl
jmp
scas
jb
and
pop
add
icebp
stos
pop
add
add
imul
test
add
inc
mov
inc
jae
xor
push
pop
addb
movsl
clc
and
or
jns
mov
mov
sbb
and
rcr
push
add
mov
jmp
adcl
add
dec
xchg
dec
pop
add
add
push
add
add
mov
add
movsb
sti
xchg
pop
inc
fdivs
xor
sbb
cmp
ret
mulb
sbb
inc
inc
gs
in
lahf
aad
inc
add
les
insb
add
sahf
cwtl
ds
cmc
jnp
test
jnp
pusha
add
cmpl
jg
or
in
enter
scas
bound
rorl
mov
mov
xchg
add
add
inc
add
fdivl
add
add
ret
mov
add
add
add
cmp
es
mov
bound
mov
add
repz
inc
add
xor
jb
clc
lahf
jno
adc
shll
and
sub
mov
mov
outsl
rcr
pop
xor
xlat
inc
sahf
jecxz
add
xchg
nop
fimull
mov
out
imul
movsb
xchg
popa
ljmp
cmp
add
jo
mov
mov
fwait
and
popa
cmc
jmp
sbb
jbe
dec
cmp
scas
subl
ficomps
ss
push
loope
add
lcall
js
xchg
pop
mov
add
insl
and
loope
fdiv
std
xor
leave
scas
add
pop
pop
fsubr
inc
movsl
movsl
pop
sub
cmpsl
sub
add
mov
add
add
mov
jno
pop
add
push
adc
js
sbb
outsb
cmp
incb
xchg
or
pop
adc
clc
femms
inc
add
dec
inc
add
mov
fstpt
call
aam
test
inc
add
stos
mov
cmp
mov
lods
fldcw
cmp
ror
cltd
outsl
pcmpeqb
lea
cld
cmp
and
sbb
adc
xchg
fsubrs
cmp
sbb
mov
jl
in
rorb
or
lea
mov
fadds
push
add
enter
add
or
adc
pop
add
int3
sbb
mov
add
dec
arpl
js
in
sqrtps
outsl
repz
repnz
jno
in
outsl
lret
outsl
orl
pop
mov
leave
mov
adc
add
lds
add
push
arpl
push
testl
fs
daa
fstl
movsb
dec
add
adc
jg
sbb
std
cld
adc
sbb
add
aam
test
repz
and
mov
add
push
mov
loope
xor
add
sub
add
sti
sbb
in
lret
scas
shl
repnz
aaa
mov
lea
add
sbb
cli
shll
add
add
bts
or
ret
stc
jge
out
stos
cmp
inc
add
out
sahf
cmpsb
and
push
cmp
stc
mov
add
push
mov
push
lds
push
xlat
scas
xchg
or
aaa
int
add
pop
push
aam
xchg
repnz
js
js
cmpsb
fiaddl
fsub
ss
or
insl
jle
jo
add
add
adc
outsb
dec
stos
push
jecxz
pusha
add
push
add
mov
add
fucomip
adc
inc
test
jecxz
jnp
xchg
fxch
aam
add
movsb
push
fwait
pop
add
mov
stc
cli
add
in
lods
sbb
xor
xchg
push
sarl
in
int3
or
jmp
scas
or
sub
dec
mov
add
dec
add
push
outsl
loopne
outsb
dec
push
ret
sbb
or
mov
add
roll
stc
sti
out
sbb
dec
insb
add
outsb
lods
add
sbb
pop
add
add
test
add
xchg
pop
inc
add
dec
add
xchg
xchg
mov
std
adc
scas
or
push
pop
add
push
or
and
popf
mov
and
xchg
cmc
aad
idivl
push
ret
mov
jl
daa
mov
add
sbb
scas
or
subl
popf
or
add
xchg
fisttpll
jmp
mov
inc
add
xchg
inc
add
and
xor
mov
insl
mov
add
jge,pt
xor
ljmp
aam
jo
adc
add
subb
loop
inc
add
js
lods
ja
xchg
and
mov
xadd
sub
cli
or
gs
xchg
push
add
popf
mov
int
cmp
pushf
adc
push
add
add
or
bound
shrl
add
add
add
les
stc
jns
shl
cmpb
mov
add
in
and
adc
inc
mov
or
jno
or
add
add
sbb
or
jle
xchg
or
pop
pop
xchg
xchg
icebp
and
loope
std
jg
cld
mov
cmc
in
jle
inc
rclb
jecxz
outsl
in
cmp
sbb
sbb
in
and
mov
add
xchg
test
sarl
imul
ret
xorb
insl
cmp
inc
jge
incl
out
movsl
mov
mov
fildll
push
add
sbb
test
add
fld
inc
gs
out
dec
add
push
in
pop
add
jg
adc
add
cmpl
add
add
pshufw
mov
push
add
and
or
dec
add
fwait
pop
jecxz
xchg
sbb
xchg
fiadds
xor
mov
mov
and
sbb
push
push
pop
movsl
jb
adc
dec
add
and
data16
add
add
xorb
ret
insb
add
lahf
daa
sbb
jg
inc
pop
adc
insl
in
add
push
add
aad
pop
push
xchg
imul
xor
sub
jle
je
inc
add
mov
xchg
loopne
add
push
lods
nop
dec
iret
xor
stos
push
pop
and
mov
cmp
jns,pt
add
pop
aad
add
add
iret
inc
mov
rcll
push
or
mov
dec
add
pop
jge
dec
xchg
adc
jle
mov
push
add
xor
imul
ss
mov
add
in
mov
mov
push
cmp
pop
add
loopne
and
inc
add
imul
scas
adc
cli
inc
dec
xchg
mov
in
xor
shll
rep
ja
jle
test
add
lret
add
int3
cmp
outsb
jne
adc
iret
lahf
or
icebp
rorl
outsl
mov
sbb
cmpsb
mov
sbb
add
mov
xor
nop
outsb
inc
add
leave
fldcw
pop
add
pop
add
xchg
adc
ja
add
inc
cli
mov
adc
sbb
add
jne
xor
inc
add
popf
lret
lret
or
lret
jecxz
aam
stos
ret
inc
add
add
sub
mov
mov
mov
jbe
jne
dec
add
call
mov
lock
aas
dec
in
xor
mov
adc
cmp
and
mov
out
movsl
into
int3
pop
add
leave
xchg
rcl
add
in
adc
add
mov
out
mov
cmpsb
add
insb
add
jmp
xchg
jmp
mov
inc
add
mov
add
lea
jecxz
inc
add
cwtl
outsb
fcomps
lret
pop
fwait
add
push
add
push
repz
xchg
sti
insb
add
and
test
jns
mov
adc
jmp
sbbb
add
in
fiadds
stos
in
out
fstp
subb
lock
mov
add
adc
add
mov
ret
out
push
aad
jne
add
add
popf
fcomi
rep
add
xor
mov
daa
pushf
push
mov
cmp
ret
stos
mov
adc
mov
add
out
cmp
out
shll
dec
inc
add
lods
jge
jmp
scas
loopne
es
push
sti
sbb
cmpsl
push
adc
hlt
sub
movsb
jno
in
insl
arpl
push
dec
out
pusha
add
and
sarl
jne
mov
jno
and
movsl
cltd
mov
sti
jnp
mov
xor
js
das
sbb
mov
jo
dec
lcall
mov
xchg
add
sub
insl
xor
xchg
pop
adc
lods
mov
sbb
mov
and
adcl
add
cmp
test
adc
push
dec
xlat
cmp
mov
aad
dec
pop
rcrb
and
arpl
loop
add
ja
pop
leave
cld
out
cmp
pop
add
roll
hlt
popl
incl
mov
and
xor
jb
sbb
add
jg
or
jno
lcall
add
cmc
ffreep
shll
int
and
inc
xor
std
js
lea
scas
popf
das
xchg
add
push
aaa
inc
add
mov
in
xchg
xchg
jmp
cli
scas
inc
cmpsb
inc
into
movsl
loop
shlb
add
pop
rcrb
add
mov
xor
add
inc
add
pushf
sbb
jo
add
sub
mov
in
add
stos
pop
stos
jnp
lcall
loopne
icebp
pop
sbb
jl
add
jle
add
add
or
sbb
jl
jb
in
mov
mov
add
add
jl
ja
cmp
enter
add
xchg
and
adc
and
sbb
loopne
xchg
sahf
mov
insb
add
pop
lahf
loopne
add
fisubrs
loope
add
push
add
add
movsl
push
add
mov
xor
outsb
stos
popa
int3
push
test
mov
jns
in
pop
filds
add
add
adc
insl
and
cld
in
adc
mov
adc
mulb
dec
add
or
xchg
push
or
mov
jo
outsb
bound
xor
andl
add
adc
xor
mov
adc
xchg
lahf
inc
push
add
out
test
xor
or
cmp
jae
enter
movsb
out
adc
sbb
add
or
push
sbb
or
sbb
mov
and
mov
test
push
mov
outsl
and
dec
and
cmc
rcl
and
adc
push
adc
mov
daa
clc
in
mov
imul
xchg
imull
lods
jae
jnp
insb
add
add
mov
add
jmp
sbb
inc
jnp
sarb
add
add
test
push
out
sub
mov
addr16
mov
lcall
repnz
aam
mov
lea
add
jl
add
rcll
sub
loopne
jmp
xchg
pushf
outsl
or
pop
add
push
lret
clc
adc
call
mov
into
rorl
add
xchg
mov
adc
cmp
ret
inc
shl
shr
jle
mulb
leave
sti
rcll
cmp
dec
shr
add
mov
out
movsl
popf
inc
pushl
cmp
or
mov
jb
rcll
mov
add
jns
jecxz
xchg
mov
push
add
je
or
in
xrstor
add
push
in
cmp
jbe
add
jnp
testb
test
sub
sub
add
add
add
dec
ret
lock
mov
sub
adc
andb
add
mov
xchg
std
popf
pop
add
cltd
test
inc
add
jle
aad
mov
jno
shrb
aad
mov
jmp
push
pusha
add
add
add
dec
add
add
sbb
pop
popf
pop
inc
add
cmp
les
add
mov
xor
or
or
add
orl
mov
inc
divl
add
pop
cmp
outsl
jnp
test
add
xlat
insb
add
mov
sahf
in
pop
dec
imull
cmpsl
test
call
sub
or
cmpsb
cmpsl
popa
mov
or
sbb
pop
jp
or
lret
and
clc
sahf
int
xlat
jo
imul
subb
sbb
adc
pusha
add
sar
pusha
add
inc
pop
call
repnz
mov
vphadduwq
sbb
cmc
sub
xor
xchg
add
pop
rclb
dec
rorl
jle
inc
dec
adc
sub
add
mov
cmp
xor
js
jns
jnp
inc
add
sub
movsl
outsl
aaa
push
add
sbb
stc
push
mov
add
lret
stos
cltd
movb
mov
stc
pop
or
enter
or
out
cmc
test
out
scas
adc
cmp
push
or
sub
add
dec
or
shr
jge
fwait
cmp
and
add
add
cli
lahf
dec
cmp
mov
js
divb
sub
cmp
daa
and
scas
sub
jmp
xor
sbb
cmpsl
mov
addr16
in
mov
add
mov
pop
add
imul
imul
push
and
hlt
push
add
add
adc
mov
das
push
popf
mov
add
divl
xchg
cmp
jmp
mov
xchg
cmc
or
or
xchg
cltd
out
ficoml
pop
mov
fcmovb
repz
pop
xchg
aas
xchg
fildl
jns
pop
aas
mov
fildll
mov
or
lea
fisubs
ja
or
out
sub
xor
fcmovbe
cmp
add
add
std
add
mov
or
mov
test
dec
sub
mov
add
push
push
add
pop
sub
xchg
sub
mov
xor
cs
test
lret
outsl
xchg
push
xchg
stos
lock
pop
pop
decl
add
sar
and
or
add
fwait
orl
pop
insb
add
mov
add
orl
xchg
cmp
adc
push
push
sar
and
dec
fidivl
repnz
sub
fdiv
fdiv
adc
das
and
push
xor
jo
and
mov
push
add
and
icebp
ljmp
mov
or
inc
outsb
jp
add
sbb
xchg
fildl
add
aad
int3
pusha
add
pushf
pop
sub
push
mov
jnp
add
add
repz
cmpsl
jb
cmp
jmp
pop
je
sahf
jbe
mov
imul
jmp
lahf
xchg
fwait
stc
jle
adc
add
and
ficoml
pop
mov
fwait
dec
add
jp
clc
in
add
mov
roll
rcrl
xor
dec
dec
adc
rclb
add
aaa
lret
imul
inc
add
cmp
jmp
xchg
sbb
push
scas
push
nop
pop
clc
scas
cmp
ret
add
dec
xchg
adc
popf
mov
push
enter
add
insl
scas
pushf
out
and
or
inc
jecxz
roll
inc
add
add
xor
and
loopne
add
dec
add
add
cs
sbb
cmpsb
cmp
lods
mov
stos
sbb
cmc
cmp
cmc
lods
arpl
mov
das
lods
jo
imul
out
andl
add
add
nop
mov
xor
add
aas
adc
push
popf
add
roll
cmp
leave
dec
add
push
cmp
cli
cmp
pop
pop
add
add
or
add
fidivl
leave
jg
add
incb
add
inc
xor
inc
dec
inc
pop
out
sub
in
ficomps
aas
incb
stc
repnz
popf
lods
test
ret
sub
js
js
insb
add
insb
add
ljmp
mov
add
aam
pop
add
in
pop
xchg
and
dec
mov
mov
xadd
fistpl
out
sub
add
into
adc
sub
mov
gs
dec
subl
ficomps
mov
pop
xchg
or
andl
xchg
or
dec
sbb
mov
mov
add
push
les
add
fdivrp
jb
repnz
add
cli
aad
ret
cmp
add
sbb
inc
data16
xor
mov
mov
inc
and
in
inc
push
dec
add
lret
pop
add
adc
and
icebp
fists
inc
mov
inc
fidivrl
scas
mov
cmp
rcrb
jb
inc
push
push
add
inc
add
mov
dec
or
jb
xorl
add
movsb
jle
shlb
push
loope
popf
shlb
push
push
jp
mov
lock
cmp
push
jl
leave
js
dec
daa
hlt
rolb
in
dec
dec
add
adc
cmp
xor
sub
add
filds
push
es
lret
jne
mov
fdiv
or
les
fildll
add
add
push
xchg
pushaw
add
in
push
add
mov
lahf
xlat
inc
or
mov
and
add
aam
add
cs
scas
dec
add
cmp
daa
xlat
pop
js
ficoml
jg
in
adc
lret
imul
lea
inc
icebp
iret
pop
add
adc
ret
mov
xor
stc
sbb
pop
add
xchg
adc
add
das
iret
enter
inc
jg
push
jae
scas
or
lahf
in
xchg
cmp
mov
jbe
scas
inc
add
je
mov
shl
mov
mov
jl
or
jl
mov
pop
push
cmp
sub
in
sarb
mov
xchg
loope
xchg
and
jnp
repz
popa
sub
ror
pop
add
fadd
sbb
enter
aaa
adc
lods
jg
adc
rcr
pop
insl
jle
movsb
xlat
mov
repnz
repz
int
add
push
push
add
aad
mov
mov
loope
add
imul
cmp
mov
stc
mov
gs
jmp
inc
xchg
fisubrs
in
mov
xchg
xor
push
mov
push
lock
push
or
push
push
jle
popa
dec
pop
mov
add
into
test
lea
sbb
das
pop
into
clc
jno
or
xor
lock
out
or
dec
add
jle
pop
add
push
add
cli
cs
js
jle
add
loope
sbb
pop
repnz
add
pushf
outsb
cmpsb
and
or
aaa
in
ja
jb
mov
inc
add
xor
mov
loopne
push
in
out
aam
and
les
mov
jnp
enter
out
loopne
lret
inc
aaa
adc
mov
adc
xor
cmp
popf
arpl
mov
addr16
sbb
push
mov
xor
lods
pop
push
mov
aam
and
sub
add
scas
mov
outsb
mov
ja
mov
push
add
sbb
add
aas
aad
push
add
out
add
cld
xor
cmc
cmpl
insb
add
loope
dec
pop
cmp
cltd
cmp
add
push
pop
add
add
mov
push
xchg
mov
rorl
dec
add
cmp
inc
add
pop
out
ds
inc
jl
add
jmp
inc
out
mov
int
shrb
sahf
add
ret
insl
inc
mov
lahf
cmp
lods
adc
pop
add
cmp
rclb
sbb
adc
inc
add
push
test
fisttps
jle
inc
adc
add
mov
popf
jo
lods
add
sti
psrld
fidivl
push
aam
xor
dec
cltd
add
jle
pop
test
cmp
mov
fistps
add
dec
add
add
loop
mov
push
repz
pop
add
add
mov
shll
mov
insb
add
sub
add
cmp
add
add
shr
push
pop
ss
lcall
outsl
les
pushf
jmp
and
shll
add
testl
outsl
mov
popa
jns
add
cmpsb
mov
mov
test
jmp
pushf
aas
xchg
cmpsb
cmp
adc
pop
mov
js
inc
pop
or
movsl
scas
or
xor
cli
idiv
cltd
sahf
fstps
std
addl
sub
test
mov
xchg
inc
push
pop
add
sbb
jbe
cmp
mov
add
pop
add
aad
and
imul
add
mov
adc
lds
pop
bound
sub
mov
std
jno
sub
ror
xor
test
sub
stc
into
mov
pushf
ljmp
jecxz
mov
outsl
pop
push
in
daa
push
add
mov
nop
mov
cli
aas
xchg
mov
pushf
lods
js
flds
and
add
mov
outsl
add
in
out
xchg
cmc
cltd
inc
xor
jnp
pop
xchg
cs
sub
add
outsb
dec
xor
int
outsl
add
xor
adc
daa
rcrb
add
push
in
jns
add
pushf
cmpsl
sub
es
sbb
xor
push
mov
push
fadds
rcrl
outsb
inc
add
pop
pusha
add
push
mov
add
mov
cmp
sbb
and
into
mov
xor
add
cmp
mov
xchg
cmp
add
aaa
stos
sbb
or
xchg
inc
add
and
cmp
push
add
add
rcr
test
jp
add
mov
cmpsl
negb
cmpsl
loop
sbb
hlt
inc
xor
jns
daa
or
mov
lds
adc
ja
add
lahf
imul
scas
js
cltd
sub
loopne
xor
add
xor
mov
ret
jle
sbb
cmp
mov
dec
add
mov
fistl
dec
add
mov
xchg
push
adc
add
addr16
out
sbb
mov
loop
add
xor
bound
adc
jae
test
cs
add
sbb
aam
ja
or
int
inc
xchg
or
jmp
jbe
shlb
call
cs
add
pop
push
add
cmp
sub
xchg
ljmp
clc
fs
mov
mov
ja
xlat
sub
add
jp
add
sti
pop
jle
sarb
mov
jbe
dec
add
shrw
add
pop
ja
push
jne
leave
insl
insb
add
mov
push
repnz
mov
jg
call
addl
add
or
xor
add
in
ja
push
ffree
xchg
cmp
loop
push
cli
or
test
add
and
arpl
add
pop
testl
in
std
xchg
mov
add
fisttpl
pop
cli
mov
insb
add
outsb
jg
sub
dec
xor
and
insb
add
or
outsb
sti
js
mov
loope
in
mov
or
cmp
push
popa
js
in
jbe,pt
int3
add
add
xchg
dec
xchg
fldcw
popa
aaa
inc
add
jns
lds
push
test
outsb
push
stos
out
add
out
mov
add
sahf
adc
dec
add
cld
xor
jae
test
jle
lahf
mov
lods
cmp
pop
mov
clc
fistps
mov
xchg
xor
xor
stc
mov
movb
inc
dec
add
jecxz
or
int
inc
add
jnp
mov
scas
sub
add
movsb
popf
addr16
idiv
dec
dec
add
mov
cmp
daa
cmpsl
inc
js
dec
mov
pop
xor
sub
fcmovne
int
add
push
in
and
cmp
sbb
ret
cmpsb
jnp
scas
mov
pop
pop
add
mov
ds
inc
add
or
and
mov
movsl
push
or
adc
lret
out
out
add
mov
and
cltd
jno
in
int3
sarb
add
mov
xchg
mov
insl
jbe
dec
ret
mov
divl
pop
pop
add
and
mov
fwait
add
scas
hlt
push
add
sbb
std
or
cmp
add
dec
xchg
iret
dec
and
das
push
adc
pop
fs
cmp
data16
ss
sub
cmp
fsubrl
adc
cmp
cld
ret
stc
sar
dec
pop
test
mov
stos
mov
cwtl
js
out
mov
sub
mov
mov
lret
imul
pop
xor
jo
cmp
jnp
mov
jge
add
in
add
test
fmuls
addl
add
insl
lock
mov
adc
push
pop
add
add
add
ss
sbb
in
push
mov
mov
cwtl
mov
add
jns
pop
add
jg
fs
push
or
adc
sub
popa
lea
pop
add
cmp
add
add
jb
pop
bound
add
mov
cld
in
loopne
shlb
lock
adc
repnz
push
out
rcrb
daa
mov
and
pop
je
cmp
loop
add
adc
add
cmp
fisttpll
or
and
and
nop
rcrb
sbb
sub
and
call
add
xchg
inc
add
loopne
mov
add
sub
xchg
jp
sub
mov
movsl
xor
inc
add
cmpb
xor
dec
iret
leave
pop
dec
out
pusha
add
pop
mov
inc
add
dec
gs
push
add
pop
inc
add
lret
push
inc
pop
scas
and
add
xchg
dec
loope
jmp
aam
push
add
add
dec
call
xchg
mov
ljmp
insb
add
sub
movsb
icebp
jbe
sub
shll
add
lods
push
out
or
fnsave
int
incb
imul
add
mov
mov
or
daa
xor
sub
inc
xchg
mov
and
pop
popa
push
hlt
lretw
xor
xchg
mov
imul
bound
iret
pop
sub
daa
fnstsw
mov
mov
cmp
cmp
push
inc
rolb
jg
dec
push
nop
add
pop
mov
out
mov
ljmp
and
aam
add
cs
inc
mov
nop
xchg
add
lods
decl
add
andl
sub
xor
pop
inc
or
scas
push
add
jmp
stos
in
jecxz
jl
pop
and
push
add
pop
add
sub
and
or
bound
mov
push
mov
pop
add
jno
add
add
xor
fidivrs
das
push
lds
inc
add
mov
test
shr
add
xchg
add
xor
cmp
jmp
sbb
push
jp
lret
jns
addl
imul
xchg
lcall
notl
jle
mov
jae
sub
or
cltd
push
dec
add
clc
sub
xchg
out
jg
add
mov
les
xor
repz
xlat
mov
mov
cltd
iret
adc
outsb
test
rol
add
inc
in
jle
add
add
add
add
xlat
and
cmc
mov
sbb
and
das
test
add
cmpsb
pop
inc
add
xchg
dec
add
xor
add
add
insb
add
popa
sarl
jp
mov
inc
sti
repz
xchg
jns
std
sbb
insl
mov
imul
andb
cmpsl
inc
jbe
cmp
mov
ret
xor
or
cmp
in
les
std
sbb
jo
jbe
in
dec
insl
mov
in
jecxz
inc
push
in
cmp
mov
push
jmp
add
das
mov
lret
jecxz
add
fldcw
xor
jmp
or
loop
add
dec
and
cltd
ss
inc
sbb
iret
adc
xlat
lock
add
cltd
cmp
daa
sub
test
jo
pusha
add
add
fisubs
add
rclb
and
dec
sbb
inc
clc
arpl
sub
pop
js
mov
pmulhw
out
inc
rorb
movsb
mov
sbb
stos
shll
mov
fidivrs
xchg
lret
or
fxch
insb
add
lods
imul
iret
scas
lds
add
xchg
bound
xchg
adc
scas
xor
faddl
lods
cmp
xchg
sbbb
das
mov
jnp
push
lret
ret
lods
jmp
popf
enter
mov
sub
or
sahf
jp
out
add
xor
jo
stos
mov
jbe
movsb
push
pop
in
inc
add
pop
mov
jecxz
jb
nop
imul
xor
shll
insl
xchg
fidivrs
fcomps
jg
jmp
adc
out
push
ret
cmp
push
cmp
add
data16
sbbl
sub
std
insl
lcall
sbb
cmp
add
fwait
outsb
mov
shlb
push
adc
fildl
movsb
mov
xor
cmp
and
sbb
dec
add
mov
dec
add
stos
fdiv
pop
xchg
sub
roll
addb
int3
mov
leave
and
cmp
and
ljmp
adc
jecxz
xchg
shlb
xlat
pop
add
cltd
inc
add
daa
ret
dec
das
in
sub
xor
mov
ret
xchg
sets
jno
pop
in
imul
mov
add
jecxz
pop
clc
pop
add
add
int
popf
xchg
add
out
insl
mov
cmp
add
iret
lahf
push
add
xchg
fidivrs
sub
adc
xchg
sti
sbb
les
mov
jp
inc
add
cmp
cmovbe
add
mov
add
and
in
je
popa
shrb
lea
xor
icebp
sub
aad
out
mov
mov
fisubl
cmp
out
push
xchg
movsl
sub
add
mov
add
add
pushf
mov
jb
leave
loop
dec
mov
mov
mov
inc
movsl
movsb
lock
jno
xchg
xchg
inc
notb
add
inc
ds
int3
cwtl
jbe
aas
ret
push
stc
push
out
std
mov
add
mov
sbb
add
pop
popa
dec
in
sub
sbb
or
add
daa
sub
push
add
data16
scas
dec
dec
dec
add
inc
jg
std
push
dec
mov
cmpsl
aad
inc
mov
dec
add
push
add
add
jp
outsb
inc
movsb
notb
in
mov
mov
add
add
add
aas
and
add
inc
mov
xchg
roll
aas
inc
add
popa
add
fmuls
add
mov
add
lret
pushl
add
add
sub
jmp
and
add
sub
add
std
mov
mov
das
and
push
add
add
inc
daa
push
pushf
jno
add
and
sub
lock
xor
mov
cmp
inc
add
fisubrs
add
jns
jne
mov
add
mov
jnp
enter
add
push
dec
add
sub
and
jl
xor
jb
push
call
or
mov
ja
add
pop
mov
rorl
push
ret
clc
lar
add
inc
popa
inc
cmc
xor
mov
loop
xor
pushf
stos
xchg
and
inc
movsb
mov
xchg
xchg
je
in
in
push
insl
adc
leave
daa
loopne
fbld
or
push
add
mov
cmp
lds
add
test
push
mov
push
add
xor
in
adc
push
add
std
arpl
pusha
add
add
push
call
adc
dec
jae
fldl2t
lret
and
outsl
sub
sub
hlt
jecxz
aas
xchg
fstl
add
shrl
mov
sub
jno
xchg
lahf
scas
roll
repz
dec
lcall
out
push
mov
lods
push
and
add
fstp
jbe
addb
enterw
or
jl
test
add
pop
dec
add
mov
fistl
stc
lock
mov
add
push
push
inc
icebp
test
add
mov
and
mov
xchg
and
repnz
pop
add
add
or
loopne
sbbb
xor
jp
push
addr16
mov
jns
nop
fistps
test
or
add
inc
cmp
cmp
dec
push
fisttps
mov
jl
bound
add
dec
add
mov
add
test
add
mov
test
into
loopne
mov
mov
rcl
add
es
add
mov
outsb
arpl
sub
mov
add
add
gs
int3
pop
movl
ret
test
bound
inc
test
dec
add
cmp
add
pop
jb
xor
mov
ds
imul
outsl
mov
sub
sbb
pop
fcomps
add
xor
sahf
or
pushf
mov
mov
pop
xchg
adc
popa
sbb
prefetchnta
xor
loopne
shlb
call
and
cmpsb
pushf
test
dec
add
fsubrl
mov
add
mov
push
cld
sub
add
dec
xchg
outsl
jnp
test
mov
add
insb
add
and
stos
shll
pusha
add
ret
das
jno
mov
xchg
pop
add
xor
and
jno
add
add
pop
add
cli
xor
mov
adc
subb
add
add
ss
jb
in
mov
stc
add
jmp
add
scas
mov
mov
out
cmp
inc
js
pusha
add
xlat
ss
out
xor
adc
and
dec
jl
insl
mov
push
hlt
pop
mov
cwtl
jle
ss
add
sti
sbb
subb
pushl
sbb
clc
add
lods
or
insl
mov
push
push
push
mov
add
sub
add
mov
mov
lea
data16
mov
add
icebp
nop
sbb
leave
fwait
rclb
jb
inc
add
sbb
push
sahf
imul
cmpsb
bound
dec
mov
sahf
fwait
cmpsl
xor
inc
pop
mov
inc
push
fldenv
add
dec
jae
xchg
arpl
adc
repnz
inc
out
dec
add
fucomi
andl
push
xchg
inc
ret
test
or
sub
xchg
dec
add
xlat
jg
add
mov
cmc
mov
fidivs
orl
dec
in
mov
pop
sbb
ljmp
xor
and
push
add
cld
cmp
insb
add
add
mov
inc
lds
jae
mov
sbbl
mov
add
shr
loopne
jno
add
adc
add
flds
push
add
xchg
addr16
test
es
and
pop
sub
add
je
push
jnp
add
scas
dec
add
xor
adc
daa
push
and
stos
pop
mov
es
rorl
add
mov
add
movsb
cwtl
mov
insb
add
loop
inc
xchg
fisttpl
int
dec
sub
into
addr16
adc
fcmovnu
testl
stc
sahf
sarl
push
add
inc
add
bswap
jb
xchg
shlb
inc
lock
xchg
outsb
adc
aaa
testl
or
add
data16
xor
lds
ja
xor
out
ds
sub
movsb
cmc
test
sar
sub
jecxz,pn
shll
add
add
sbb
mov
loope
jnp
dec
and
and
filds
mov
dec
clc
push
subl
jl
dec
pop
add
pop
xchg
loope
lods
or
orb
lods
add
aas
add
stos
aad
jns
mov
and
out
aam
add
mov
cmp
xor
jge
push
add
out
sub
stc
rorb
out
test
outsl
add
pushf
mov
jne
or
push
cli
iret
test
call
adc
ss
lret
lret
pop
xor
cmp
add
ja
das
lcall
push
xor
push
ss
jns
scas
jmp
js
dec
xchg
xchg
mov
mov
mov
sbb
mov
leave
mov
xor
pop
add
mov
add
idivl
jno
int
inc
inc
in
mov
test
movsb
mov
mov
mov
add
adc
add
add
lock
add
add
add
addr16
fmulp
enter
mov
aas
adc
jecxz
fstpt
push
jmp
aas
in
or
lock
add
add
mull
lret
movsb
pop
cmc
outsb
sub
loop
jmp
fcoml
inc
add
sti
pop
xchg
cli
in
cmc
lods
push
push
add
xchg
add
scas
push
add
aam
pusha
add
dec
ja
pop
pop
add
mov
mov
adcl
loop
mov
stc
mov
add
add
ret
jl
sbb
imul
push
loope
lcall
call
sti
sbb
cwtl
lods
xor
add
sbb
add
add
sbb
mov
add
push
pop
add
xchg
add
aad
addr16
sbb
mov
popf
mov
mov
ljmp
sbb
add
xchg
iret
fildl
mov
es
mov
adc
pop
jo
jecxz
xchg
aas
adc
repnz
test
rcr
jne
add
fcoml
lret
movsb
jmp
push
sub
pop
mov
adc
lret
aam
add
add
dec
or
ds
popa
aaa
dec
js
sbb
mov
das
push
push
add
add
bound
or
inc
jg
add
cmpb
jle
scas
movsb
adc
repnz
fistpl
push
add
test
adc
xor
add
add
jb
mov
jmp
adcb
test
lahf
out
or
out
jmp
mov
inc
add
jecxz
mov
gs
lods
test
xchg
add
xchg
and
roll
add
pop
add
add
cmc
stos
adc
or
inc
mov
add
sbb
dec
and
outsl
lret
add
cmp
les
push
push
mov
pop
das
lods
cmpsb
sub
out
loopne
aam
loope
test
xlat
pop
mov
mov
sti
das
adc
lcall
rorl
ffreep
imul
add
shll
mov
fsubrl
call
aad
dec
cmp
lea
scas
out
aad
jmp
sbb
jbe
arpl
pop
add
add
cli
fstpl
add
xchg
fwait
xor
cli
cmp
popa
idivb
das
int3
dec
add
mov
pop
add
cwtl
or
dec
add
hlt
cmpsb
mov
inc
cmp
aas
lods
bound
add
mov
add
add
nop
add
sbb
mov
in
mov
jo
jmp
test
push
jae
mov
jl
outsl
xchg
xor
push
xchg
add
sbb
xlat
inc
mov
dec
add
jge
pusha
add
push
mov
dec
add
push
add
xchg
mov
insb
add
lock
sub
in
lods
mov
add
lret
shlb
pop
pop
pop
nop
push
cmp
test
lahf
scas
add
pop
add
shrd
iret
dec
add
add
xchg
mov
ror
std
add
imul
add
sbb
inc
mov
sahf
stos
cmc
out
lret
inc
cld
mov
in
ds
mov
mov
jge
jnp
insl
lock
lret
inc
jnp
in
add
and
loop
push
pop
ljmp
imul
jecxz
ds
call
add
sbb
add
add
and
cmp
es
je
xchg
mov
jne
mov
adc
mov
or
mov
inc
xchg
dec
push
sub
call
cmp
add
lds
pop
mov
ljmp
fidivrs
lock
add
test
jmp
jne
adc
das
push
pop
inc
add
pop
add
popa
xchg
movsb
sbb
push
scas
notl
sbb
je
fdivrl
ds
mov
add
dec
or
pop
aam
mov
push
add
add
add
cmp
in
pop
cmp
fistpl
adc
iret
inc
add
out
out
jbe
xchg
cmp
push
add
cli
pop
inc
mov
adc
cmpl
and
add
sahf
mov
xlat
ret
xchg
push
push
jb
pop
rcrb
lahf
cmp
insl
cmp
inc
push
out
out
lea
add
add
iret
test
arpl
add
inc
mov
push
cmp
iret
cmpsb
mov
sub
outsb
ficoms
xlat
test
sub
push
jmp
rorb
or
call
aaa
push
mov
add
or
xchg
outsl
nop
outsl
adc
insl
sub
cmpsl
das
in
rorb
add
outsl
shr
add
lahf
xor
add
and
stos
addr16
in
scas
add
test
enter
add
pop
clc
imul
xchg
dec
push
mov
mov
jnp
xor
cmpsl
lret
sbb
idivl
jno
arpl
xor
aam
stc
inc
cmpb
lods
lcall
add
push
cwtl
pop
xor
jp
jge
jo
jg
leave
fsubrs
data16
adc
sbb
negl
or
add
sbb
ds
push
lock
es
int
mov
ret
lods
mov
jecxz
push
add
fimuls
add
pop
cs
daa
ret
jle
in
lods
outsl
aam
xor
in
out
inc
jl
add
into
push
add
sub
fsubrp
aas
filds
ret
mov
aam
mov
arpl
faddl
add
xchg
loop
repnz
add
pop
add
ret
dec
sbb
out
mov
mov
or
cld
inc
add
xchg
add
xor
ds
movl
add
xor
add
repnz
add
add
movsl
mov
mov
add
xor
sbb
mov
cmp
es
xchg
sbb
pushf
jno
adc
or
test
adcb
inc
mov
inc
mov
in
add
scas
add
jne
incl
rorl
cmp
test
dec
xchg
xchg
pop
sbb
sar
pushf
clc
inc
or
mov
movsb
xor
cmpsb
in
call
add
fisubl
add
lret
dec
fisttpll
dec
popa
stc
mov
in
jmp
cmp
add
xchg
int
lock
arpl
mov
dec
add
cmpsl
mov
jg
push
add
repnz
movb
mov
outsl
and
jmp
lods
dec
aam
mov
or
pusha
add
mov
mov
cmp
push
xor
push
cld
scas
and
mov
ret
sti
mov
mov
test
pop
rcll
je
jb
mov
push
xchg
loope
add
add
ret
mov
fcmovnb
sbb
cmpsl
inc
ljmp
aas
outsl
jmp
fadds
ret
sbb
lret
repnz
mov
dec
mov
pop
add
rclb
test
sbb
or
ret
push
roll
or
std
or
xchg
fadds
insl
dec
add
fnsave
add
pop
cmp
inc
gs
popf
iret
aas
cli
push
mov
cmpsb
lods
inc
add
shr
roll
clc
pusha
add
outsl
lods
add
and
jge
dec
add
orl
cltd
or
sbb
cmpsb
cltd
dec
add
sub
xchg
dec
jnp
fisubrl
dec
add
jecxz
das
xor
add
loopne
add
xchg
sahf
sbb
out
shl
mov
adc
cld
push
insb
add
xor
les
ret
push
lret
idivl
xchg
outsl
mov
mov
and
or
jo
sbb
stc
stos
movsb
dec
add
sub
pop
inc
or
sub
xor
mov
sti
mov
mov
testl
mov
add
test
lcall
ror
shlb
xor
or
ficomps
test
dec
add
add
add
ja
mov
push
stc
cmp
push
mov
bound
add
and
data16
push
inc
outsb
inc
ret
jnp
cmpsb
adc
cmp
mov
push
add
fcmovbe
add
aad
mov
mov
cld
lea
add
jle
incl
movsl
stc
inc
outsl
jl
push
xchg
push
xchg
clc
das
out
fcmovnb
pop
out
mov
in
xchg
xchg
dec
add
lods
add
popf
lahf
fwait
mov
add
push
ja
repz
imul
bnd
mov
add
loopne
pop
lret
push
pushaw
add
xchg
or
xchg
aad
add
jle
loopne
add
add
leave
pop
in
outsl
call
sub
div
loop
sub
lret
insl
shll
aaa
jl
lds
mov
dec
arpl
add
repz
arpl
dec
faddp
cmp
aam
add
outsl
cltd
xchg
and
mov
pop
mov
pop
loopne
andl
subb
lahf
push
inc
jle
bound
nop
mov
roll
and
pusha
add
out
push
xchg
int
mov
in
sti
push
ds
cltd
adc
sub
and
add
fstps
mov
aaa
jne
xor
mov
xchg
and
add
scas
jno
repnz
loope
mov
aas
cmp
rolb
mov
out
add
test
out
stc
test
pop
fcoml
jge
xchg
addl
cmp
outsb
lret
dec
subl
add
mov
push
into
out
add
cmp
test
xchg
add
in
lcall
dec
inc
or
daa
sarb
aad
pop
cltd
lds
xchg
pop
add
cwtl
leave
inc
add
and
sbb
cmp
in
or
dec
sbb
xchg
stos
cmc
jb
add
imul
cmp
popf
jle
enter
xor
mov
xchg
add
idivl
or
or
popf
sub
fcmove
push
lods
cli
xchg
dec
mov
call
in
jae
xor
bound
add
addr16
cmp
mov
pop
int3
push
pop
add
out
mov
inc
add
int
ds
fwait
jge
loope
or
imul
mov
mov
test
adc
scas
add
leave
jmp
add
xchg
out
movsb
or
test
mov
adc
dec
add
push
imul
mov
dec
add
inc
pop
sub
lea
in
sub
sub
inc
push
mov
sbb
mov
add
push
add
fwait
popf
faddl
add
fimull
fsubp
jge
jnp
xor
in
adc
jnp
jae
or
jg
mov
outsb
push
into
dec
add
mov
call
ret
fisubrl
cmp
and
add
inc
mov
sahf
sub
dec
cli
add
xor
cmc
fdivs
pop
add
adc
add
jp
out
roll
aas
xchg
lahf
enter
or
pop
cmpsb
xchg
daa
sbb
and
lcall
mov
insl
jecxz
xchg
adc
popa
outsl
and
push
cli
xchg
mov
xchg
addr16
adc
leave
imul
push
dec
add
sub
lret
xor
fadds
adcl
cld
cmp
add
loopne
fiadds
cmp
je
fdivrl
fwait
cmpsb
imul
cwtl
aam
mov
test
cli
mov
mov
idivl
add
outsl
ja
add
ss
enter
add
aad
int3
dec
add
push
jmp
xchg
add
dec
inc
add
clc
xor
movsb
sub
lods
jp
dec
jle
lods
jp
lret
mov
mov
push
inc
add
les
add
ljmp
fnstcw
repnz
jns
adc
jb
xlat
and
xor
popa
dec
add
mov
push
add
mov
ret
loope
ljmp
mov
inc
or
cmp
insl
sub
push
add
mov
add
add
pop
mov
mov
add
inc
mov
rolb
and
in
jne
inc
enter
je
adc
jno
or
rcr
stos
hlt
mov
fstl
add
fcomi
shr
sub
mov
stos
dec
add
cmp
dec
scas
sub
lods
movsb
mov
add
jns
mov
lret
add
add
mov
and
add
add
dec
lea
add
xchg
clc
clc
jecxz
mov
xchg
rcrb
call
rol
xchg
mov
mov
outsb
mov
pushf
scas
pop
add
sub
dec
loop
imul
pop
and
add
fldenv
pop
add
lahf
jmp
sub
add
iret
adc
jmp
lds
jb
std
test
dec
add
dec
in
jge
loopne
xor
fnstsw
or
into
push
xor
pop
add
add
jmp
push
xchg
fstpl
add
lret
xor
pop
pop
sub
mov
jl
in
cmc
dec
and
xor
mov
jb,pn
daa
inc
push
insb
add
inc
lods
sbb
negb
imul
mov
mov
jg
mov
es
into
push
xchg
mov
ja
push
test
inc
add
cmc
repz
and
jnp
scas
jecxz
pop
add
mov
out
dec
fstpt
dec
jnp
add
pop
add
add
nop
sbb
in
sarb
imul
fwait
and
out
xor
popf
cwtl
test
leave
ds
adc
cmp
das
je
gs
add
insl
das
jecxz
nop
ret
pushf
xchg
cmpsb
or
mov
add
insl
adc
pop
lahf
xchg
push
add
lds
ret
lcall
cmp
mov
pusha
add
add
sti
lods
int3
mov
cmpsl
imul
add
jb
jmp
add
push
add
sbb
or
jnp
xor
mov
mov
loopne
ror
adc
pop
js
rcll
in
jnp
sbb
clc
mov
ror
add
stos
out
dec
test
add
scas
int3
push
push
fsin
sti
mov
add
shll
sti
fwait
repnz
movl
and
and
cs
push
dec
hlt
hlt
test
pop
pop
pop
sbb
fldl
scas
bound
insl
fdivp
das
push
aad
lock
xchg
outsb
sub
lret
cltd
in
lds
dec
fmuls
adc
dec
call
popa
les
arpl
add
fsubrs
inc
add
and
sbb
jo,pt
movsb
cmc
mov
mov
lods
aaa
jmp
add
add
push
mov
mov
xchg
sahf
pop
push
add
cmp
mov
pop
dec
mov
push
pop
jo
jne
add
xchg
sub
stos
adc
cmp
andb
dec
cmp
imul
ret
jno
lret
push
adc
add
gs
add
add
mov
add
cmp
mov
outsb
pop
xor
adc
popa
imul
negb
mov
ds
xor
lods
pop
sti
ss
mov
or
das
dec
popa
mov
jno
imul
adc
push
fcompl
ja
movsl
cwtl
push
outsb
mov
pop
dec
add
push
add
dec
cli
sub
sbb
jge
lcall
cmpl
inc
xor
xchg
test
lea
add
std
shl
push
bound
add
cmp
data16
and
jae
cmp
sub
mov
push
xor
dec
leave
mov
jno
cs
mov
pusha
add
push
mov
mov
cmp
jmp
push
add
andl
mov
jmp
enter
loop
outsb
mov
mov
pop
ljmp
push
js
jp
icebp
jo
fmull
les
rcr
mov
add
sbb
mov
out
adc
mov
lret
dec
add
sub
leave
xchg
mov
add
add
jp
rcr
cmp
ret
jl
adc
push
call
add
mov
cmpl
mov
add
pop
mov
sbb
or
mov
add
pop
and
out
jl
test
add
jns
add
out
cmc
sbbb
add
pop
add
sub
stc
sbb
push
stc
push
add
ret
or
fisttpll
push
ret
add
loopne
rorl
mov
dec
int3
repnz
push
sbb
jle
add
lret
stc
xlat
iret
repz
sub
xchg
out
movsl
pop
lods
push
jmpw
add
pusha
add
add
push
sub
mov
repz
cmp
lcall
mov
lcall
incl
lcallw
bound
xor
adc
xchg
mov
inc
or
jp
add
test
mov
jmp
cmp
pop
dec
add
fsubrl
cmp
cmp
fistps
out
test
jo
dec
add
lods
inc
sbb
jbe
inc
jp
mov
add
mov
adc
xchg
or
pop
pop
int3
movsb
std
jb
cwtl
sub
in
add
xchg
clc
xor
sub
loop
fwait
inc
dec
xchg
lret
adc
shll
adc
mov
loopne
jno
in
ret
add
or
popf
mov
push
lcall
enter
adc
int3
cmp
add
adc
adc
lea
sub
fiaddl
xor
outsb
add
add
add
inc
out
in
sub
rcrb
jne
sbb
inc
xchg
pushf
gs
jno
lods
icebp
sub
jecxz
push
sbb
mov
cmp
scas
jo
mov
inc
lds
popf
sbb
lahf
mov
mov
test
push
sahf
cmc
sbb
mov
and
cwtl
push
sti
repnz
aaa
mov
add
or
jl
movsl
rcrl
add
or
bound
cwtl
in
push
jae
push
add
jbe
subw
xchg
popl
fimuls
adc
enter
push
mull
add
xchg
sub
jmp
add
cmp
mov
add
cmp
or
jecxz
xor
or
mov
add
lahf
repnz
push
out
or
and
jle
addr16
inc
add
js
add
xor
inc
mulb
mov
pmaxub
ds
mov
andl
push
ljmp
xchg
push
cmp
pop
xor
add
mov
lret
fiaddl
pop
imul
push
add
jg
je
push
icebp
mov
shrb
ret
add
loopne
jne
push
xor
or
xchg
outsl
push
ret
mov
stos
dec
dec
add
addb
dec
sub
lock
inc
add
insl
sbb
and
pop
js
nop
andl
rorl
add
jmp
jp
mov
test
cmp
jle
pop
call
or
pop
add
add
int3
inc
mov
testb
adc
dec
cmpsb
outsl
push
add
cltd
movsb
mov
cmpsb
pop
lock
aam
push
push
mov
add
mov
out
clc
inc
in
jmp
lcall
mov
addr16
loop
popa
mov
add
and
cmpsb
repnz
outsb
pusha
add
inc
repz
mov
js
or
icebp
in
jmp
sbb
lea
sahf
rclb
cmp
xchg
mov
mov
add
les
add
pop
add
add
adc
mov
adc
pop
imul
sub
xchg
push
mov
out
cmp
lcall
xchg
xchg
ss
ja
push
inc
cld
addr16
mov
or
movsb
aas
adc
add
iret
xor
in
andb
cmpsb
mov
iret
or
cmp
cmp
pop
test
cli
fstl
loope
mov
or
lods
movzwl
xlat
pushf
xor
imul
arpl
add
loope
jbe
movsl
ffreep
cmp
mov
cltd
dec
add
xor
stos
sub
inc
int
adc
xchg
xchg
movsb
jnp
pop
push
cmpsl
or
xchg
aas
pop
mov
add
movsl
dec
mov
jmp
push
mov
clc
push
fldt
mov
dec
mov
stos
add
cmp
or
push
push
mov
add
mov
je
and
andl
hlt
mov
out
add
cltd
loopne
bound
arpl
nop
incl
push
dec
std
les
pavgb
pop
hlt
push
enter
add
xchg
cmp
mov
cmp
aad
std
add
mov
pop
push
mov
incl
mov
add
lahf
pop
add
arpl
xchg
and
sub
cmp
daa
mov
lahf
mov
sbb
js
stc
insl
mov
xchg
cmp
insb
add
push
xor
stos
sub
fwait
sub
jl
pop
add
add
or
sub
mov
or
sbb
mov
and
mov
dec
add
sub
sbb
or
fistl
xchg
mov
movsb
mov
sub
add
cs
inc
add
cli
pop
outsl
jnp
push
mov
std
in
stos
cwtl
mov
and
mov
lods
leave
lock
xchg
jne
fadds
add
in
push
imul
pop
stos
mov
add
mov
jnp
popa
push
push
mov
add
mov
movsb
and
add
pusha
add
fisttpl
add
in
ss
cmpsl
aas
xchg
dec
cmc
sub
lds
lret
add
insl
fstpt
es
ret
mov
add
jl
fcompp
push
push
xor
push
adc
mov
or
lds
jecxz
pop
sti
mov
push
pushf
lock
test
roll
push
insl
mov
add
in
xor
sub
jbe
push
pop
xchg
jmp
adcb
pusha
add
das
and
and
lahf
and
stos
push
int3
dec
cmp
test
out
fwait
imull
xchg
js
aas
pop
mov
scas
repnz
xchg
xchg
inc
test
pop
xchg
std
and
add
ljmp
add
and
add
add
mov
push
pop
js
jl
and
popf
out
push
fcompl
mov
xchg
lods
xchg
dec
sub
call
rol
adc
cli
pop
addr16
jge
dec
mov
mov
jns
popf
pusha
add
add
fildll
das
cmp
popa
int
add
cwtl
cld
adcb
add
add
add
mov
pop
or
das
mov
add
xchg
or
cwtl
cltd
pop
sbb
push
push
and
shl
add
push
pop
insl
ret
and
or
test
loop
cs
push
inc
add
add
lods
or
sarb
add
mov
clc
cmp
daa
and
sarl
add
and
mov
inc
addl
inc
cmp
and
mov
cmp
sbb
adc
lcall
dec
add
adc
stos
daa
add
dec
shl
add
add
int3
pop
add
imul
cltd
jl
int3
shrb
add
xchg
stc
fstpt
add
shrb
dec
and
daa
cld
mov
add
xor
aaa
in
add
dec
xor
lods
into
jp
sbb
hlt
push
jge
inc
dec
std
pushf
out
adc
les
push
mov
add
rol
out
inc
mov
cwtl
in
push
stos
and
dec
add
das
idiv
pushf
ret
and
mov
fwait
stc
xlat
lcall
inc
xor
add
jmp
adcl
ds
icebp
stc
imul
pop
imul
jecxz
adc
repz
cmpsl
test
mov
add
add
cmp
lret
pop
add
aaa
xor
cltd
pushf
aaa
mov
sbb
add
xchg
sbb
push
into
pop
pop
mov
popf
pusha
add
xlat
hlt
lea
xchg
pop
inc
add
cmp
adc
out
xor
stos
dec
push
mov
push
add
popa
xor
les
aaa
ljmp
psubw
dec
stos
sub
inc
add
mov
and
add
jle
fidivrs
lret
insb
add
add
and
insl
cmc
fidivrs
out
xchg
fistpl
or
mov
pop
mov
jnp
ljmp
add
mov
lods
sti
pop
in
push
cli
or
push
add
stos
push
inc
jl
cmp
and
mov
bound
pop
mov
push
add
mov
fxch
insl
int3
push
add
aaa
ret
aam
or
mov
add
nop
push
lock
sarl
mov
out
ret
pop
sbb
sarb
mov
and
xor
jge
add
xor
hlt
jnp
xchg
ss
xor
add
jecxz
jl
xchg
push
and
adc
xchg
jecxz
mov
dec
add
cmpsl
or
ficomps
pop
xor
repz
inc
adc
and
jecxz
jmp
mov
fdiv
or
or
add
add
dec
cli
imul
outsb
inc
mov
pop
xchg
inc
aam
add
movsl
sbb
inc
popa
addr16
push
sub
lds
aad
fnsave
sbb
in
fxch
dec
xlat
or
js
loop
add
push
popf
loopne
add
xor
add
das
xchg
ficomps
add
mov
add
push
jb
add
push
xchg
mov
inc
add
add
mov
sub
mov
lcall
sub
and
rorb
mov
jp
dec
or
inc
push
or
out
out
adc
mov
pushf
scas
pop
push
add
in
cld
mov
sub
sbb
pop
add
movsl
mov
ja
mov
shlb
or
ja
add
out
dec
test
add
test
add
adc
lcall
rcrl
dec
pop
add
mov
imul
add
sti
dec
into
movsl
mov
cmpl
psllw
fs
imul
sub
loopne
leave
shr
sbb
add
push
js
jl
jno
loope
sub
aam
and
mov
cmpsb
scas
mov
add
in
sub
jg
test
aas
imul
sub
sbb
cmpb
sti
sbb
arpl
add
or
bound
add
xchg
mov
jno
add
dec
add
in
cwtl
mov
inc
stos
cmp
jl
sbb
fwait
xor
leave
repz
ficoms
insb
add
fwait
mov
sti
daa
sub
mov
add
jns
add
xchg
es
out
rcrl
and
mov
sub
push
sub
xor
or
fcomps
push
cmpsb
jge
out
fwait
cmp
mov
sti
aas
fidivs
cmc
pushf
cltd
jne
adc
out
push
and
mov
sarl
add
and
add
xchg
fdivrl
dec
add
shll
cld
xchg
shll
fcomps
aam
dec
negl
xlat
mov
add
pusha
add
cmc
out
das
xor
inc
add
mov
lea
add
inc
add
push
testb
adc
outsb
push
pop
xor
add
stc
movsb
inc
add
sub
repz
push
loope
cld
xchg
daa
pop
xchg
mov
add
pop
push
push
add
add
test
and
push
out
arpl
and
fadds
mov
sub
popf
mov
aad
mov
repnz
in
loopne
cs
pushf
popa
dec
adc
aam
pushf
pop
pop
in
jl
mov
pop
push
and
xor
rcr
lret
dec
repz
add
fstl
pop
daa
and
xchg
dec
imul
popa
ds
adc
ljmp
fildll
rorl
orl
sub
and
fnstenv
sarl
push
and
dec
pop
add
dec
jg
mov
push
dec
mov
cmp
decl
pop
roll
enter
sub
pop
push
add
and
or
dec
xor
shlb
cmpb
sub
cmpsb
adc
add
add
xor
inc
push
add
insb
add
inc
popa
loope
mov
or
mov
sub
add
or
clc
fisttpl
popf
outsb
outsb
test
mov
cmp
mov
xor
cmpsb
pop
out
push
cmove
pop
jge
add
lods
and
or
mov
mov
jae
or
pop
jo
movsl
mov
fldt
pop
jg
ret
xor
inc
add
sub
lahf
xchg
movsl
adc
xchg
mov
push
xchg
dec
add
mov
pop
push
pop
and
std
mov
js
dec
add
add
add
test
add
popa
mov
test
xor
scas
icebp
test
or
cmp
and
mov
inc
add
adc
pop
add
mov
jp
es
mov
xchg
adc
add
cmp
dec
mov
jnp
popf
adc
leave
xchg
dec
or
sbb
js
xlat
into
and
adc
push
in
and
jns
inc
add
sbb
cmp
mov
loope
pop
add
mov
ja
movsb
inc
add
dec
jnp
add
add
dec
and
icebp
xor
mov
nop
mov
add
add
push
or
add
aaa
jecxz
pop
or
xchg
jg
mov
add
out
sub
sbb
test
arpl
push
and
xor
push
push
lret
cmp
ficoms
xchg
jmp
add
lret
stc
pop
add
sub
out
mov
iret
cmp
call
pushf
cmp
pcmpgtw
jp
add
add
jge
inc
inc
fsubl
dec
dec
mov
lahf
and
dec
lock
mov
pop
push
movsb
cmp
fisubrs
je
cmp
adc
cmpsb
xor
pop
add
sub
fprem
push
add
call
imul
insl
shlb
loopne
add
stos
lock
inc
add
add
aaa
fisttpll
xchg
sbb
sub
or
imul
pop
sbb
mov
jmp
sahf
adc
sarl
xchg
dec
xor
or
popa
test
dec
add
mov
xchg
xorl
scas
push
into
or
mov
sbb
mov
cltd
mov
add
loope
xor
push
and
add
jb
ret
add
das
push
pusha
add
lcall
pop
add
out
add
push
ss
add
xchg
or
mov
sbbl
clc
fadds
lahf
ret
pop
push
add
loope
lods
arpl
gs
ds
or
mov
sub
or
or
testb
pop
add
mov
sbb
arpl
or
push
in
xchg
and
fisttps
cs
aaa
pop
ss
mov
xchg
mov
inc
loopne
jne
sbb
fcomip
movsl
cmp
jle
cmp
pop
add
cltd
cwtl
adc
add
add
adc
dec
ficomps
mov
add
or
fwait
idivb
stos
lods
xor
pop
cmpsb
sbb
add
mov
add
repz
mov
movsl
imul
cmpsl
lahf
std
data16
add
lock
inc
add
lahf
mov
sub
adc
xchg
or
xchg
arpl
add
cltd
jne
das
adc
int3
lahf
jns
jae
dec
cli
fidivrl
dec
dec
or
aas
repz
push
add
dec
lret
push
sub
push
add
repz
inc
add
lret
xlat
mov
push
popf
sahf
sbb
push
aaa
adc
jmp
arpl
add
ret
lret
pop
dec
clc
aad
jp
add
add
dec
add
sub
test
fldenv
fsubrp
sub
stc
imul
dec
add
icebp
int3
addr16
jg
mov
cmp
push
insb
add
es
mov
jne
mov
add
pop
adc
add
cmp
mov
pop
sub
add
pop
addr16
lods
pop
dec
add
add
ja
and
push
aam
mov
or
pop
sbb
or
inc
cld
pop
div
aaa
cld
nop
mov
and
jae
pop
ret
cltd
pinsrw
sub
add
dec
inc
add
dec
xchg
out
scas
sbb
cli
test
les
add
xor
push
mov
int
orl
je
daa
mov
adc
mov
inc
dec
add
out
mov
xchg
js
adc
push
fxch
mov
out
cltd
sbb
and
cmpb
clc
sub
mov
arpl
push
xor
inc
mov
shrl
lods
cmp
xor
pop
rorb
xor
push
sbb
lret
mov
push
lds
add
push
gs
add
mov
ja
loopne
clc
jne
add
mov
mov
and
xorl
and
into
mov
insb
add
xchg
or
sbbb
adc
or
out
jb
ret
je
or
dec
add
fwait
shll
cmc
scas
push
add
xchg
sbb
mov
outsb
adc
mov
subl
lea
and
sub
lock
sbbb
or
dec
add
mov
mov
inc
add
jnp
push
sub
xchg
inc
std
and
pop
out
cmp
inc
add
sbb
sub
jg,pn
mov
mov
mov
add
add
xchg
xchg
cltd
jg
sub
jecxz
sbb
scas
xchg
std
das
jmp
lret
aaa
rorl
lahf
test
std
xor
pop
jecxz
rclb
xchg
pop
pop
mov
or
mov
lahf
push
adcb
out
cmp
mov
sti
add
lea
add
mov
aad
inc
dec
addb
jmp
pushf
pop
add
xor
sti
movsl
mov
add
movsb
push
add
push
add
add
mov
pusha
add
les
xor
ds
dec
add
jne
add
stos
mov
mov
mov
pop
push
das
jae
adc
sub
push
jmp
dec
mov
add
loope
fdiv
add
aas
int3
or
jnp
or
xor
jne
pop
adc
rclb
aas
jne
add
mov
add
out
push
sub
notl
mov
jbe
fisttps
add
inc
dec
imul
mov
les
les
loop
rcrl
and
push
pushf
jo
imul
int
sub
cmpsl
pusha
add
cmpsb
inc
xor
adc
mov
hlt
dec
add
dec
add
lods
lret
cs
jo
xor
xchg
int3
out
push
inc
hlt
pop
xchg
inc
inc
cmpl
mov
xor
add
pop
mov
add
jl
jno
add
mov
mov
adc
cmp
les
push
ror
stos
out
add
jle
outsl
xchg
jns
inc
xchg
cmpsb
imul
pop
movsl
andb
add
add
cltd
dec
pop
adc
mov
popf
data16
inc
add
mov
mov
add
in
add
dec
add
xor
les
shr
icebp
or
js
sub
lock
add
push
adc
popf
lea
inc
jp
inc
decb
and
jge
xor
cmp
or
aad
add
fsubl
popf
mov
pop
pop
clc
repz
inc
or
aad
movb
xchg
push
inc
xchg
in
clc
adc
fmul
xchg
or
fisubrl
xor
jl
daa
mov
add
add
in
pop
xchg
push
mov
fidivs
pop
lahf
shrl
push
clc
out
pushf
sbb
adc
add
mov
pop
loope
imulb
cmp
lret
add
push
jno
sub
cli
cmp
js
jnp
add
add
lret
mov
stos
filds
inc
test
add
sbb
add
stos
xor
xor
into
push
or
xor
aam
js
sbb
xor
js
mov
ljmp
insl
dec
xor
cmp
lret
pop
stos
xchg
cmc
fcmovne
xchg
cmp
lret
mov
nop
mov
pusha
add
shlb
xchg
and
ds
add
cmpsl
mov
mov
fsubs
xor
add
sub
mov
lahf
inc
mov
dec
dec
inc
add
popa
enter
std
sub
fsubr
cltd
cmp
mul
mov
nop
cmc
and
ret
and
insl
inc
pushf
insl
or
ret
xchg
xchg
insl
inc
in
add
xor
ds
int
leave
xchg
ljmp
out
stos
loop
mov
cs
push
add
fnsave
scas
push
and
cld
aaa
xor
inc
push
stos
add
adc
adc
add
mov
scas
test
jo
pushf
dec
mov
add
inc
cmpsb
adc
push
into
push
or
je
aad
shl
or
push
sbb
std
add
add
cmp
jns
add
fnstcw
test
add
xchg
leave
add
lods
shlb
cmp
cli
cltd
js
push
add
and
sub
and
fsin
inc
dec
icebp
xor
cmpb
dec
add
mov
jecxz
incb
xchg
mov
add
aaa
std
sub
inc
dec
movsl
mov
lahf
dec
cmp
scas
sbb
xchg
loop
and
xchg
xchg
out
out
repz
stc
push
test
aaa
in
jns
int
add
int3
cmp
stos
mov
mov
mov
and
testl
repnz
add
cmc
jnp
add
js
aam
scas
in
dec
scas
xchg
nop
pusha
add
icebp
popa
sbb
mov
addr16
movsl
andb
fdivrs
add
inc
mov
pop
add
dec
outsl
popa
mov
dec
mov
in
decl
js
clc
xchg
inc
fsubrl
add
jno
aam
add
aad
jo
or
adc
add
insb
add
jnp
jecxz
adc
mov
es
aad
cmp
clc
adc
inc
or
inc
add
add
sub
lock
cmpsl
dec
rorb
icebp
lods
shr
pop
imul
mov
add
inc
pop
inc
inc
add
cld
sub
lods
xor
mov
pop
pop
lret
out
xchg
ljmp
lcall
imul
push
out
mov
sbb
pop
outsb
outsl
fwait
mov
nop
stos
leave
into
jge
lods
loopne
into
mov
jecxz
sahf
xchg
inc
jmp
int3
ss
dec
add
cmc
pushf
add
sub
add
or
mov
cmp
lds
add
add
out
sarb
movsl
lahf
cmpsb
sahf
popf
ljmp
add
jb
es
movsb
nop
ja
pop
data16
add
filds
das
lea
mov
jp
xchg
js
jns
inc
test
add
mov
clc
scas
adc
jnp
arpl
mov
add
mov
cmpsl
cmp
sahf
or
pop
popa
imul
andb
cmp
mov
or
add
or
xchg
nop
and
cld
cmpsl
inc
xchg
add
add
add
in
testl
inc
add
mov
add
add
mov
or
lods
fucomi
push
cmpsl
stos
loopne
xlat
dec
xor
jnp
add
aad
dec
stos
mov
sahf
stos
pop
or
cmp
aad
push
insl
and
or
das
fst
pushf
mov
popf
xlat
cmpsl
lret
jg
add
push
popf
adc
push
mov
sub
xchg
cli
lds
add
test
dec
sub
call
push
lods
mov
stos
iret
mov
dec
js
pop
push
ss
popa
mov
push
add
jg
scas
call
loop
add
cmp
jle
add
mov
fbstp
stc
cwtl
inc
add
jb
rorb
adc
cs
subb
pop
mov
cmp
out
daa
insl
inc
out
mov
push
mov
outsb
pop
add
test
push
fisttpl
push
add
pop
mov
pusha
add
pop
push
jle
add
cli
push
movsl
dec
add
ja
xlat
lret
mov
or
pop
mov
ljmp
xor
pushf
cld
sub
push
fisubrs
pusha
add
mov
add
lret
push
pop
daa
mov
pop
test
mov
fstp
push
or
out
mov
pop
add
loope
jl
jle
push
sub
cld
inc
int
add
adc
xchg
movsl
mov
rclb
add
push
jle
cmc
or
hlt
sbbb
scas
rcrl
imul
ret
or
sbb
push
xor
push
loop
ljmp
arpl
pop
call
dec
sub
mov
inc
and
movsl
inc
add
out
ret
int
mov
mov
add
mov
rolb
fnsave
add
and
mull
mov
push
sarl
int3
mov
lock
inc
add
push
test
fiaddl
shl
repnz
add
sbb
adc
mov
test
mov
cmp
and
lods
xchg
mov
shr
je
cmp
rolb
mov
cmp
add
cmp
outsl
xchg
sub
mov
pop
or
cli
lcall
js
sub
inc
mov
insb
add
add
xlat
daa
mov
jle
jecxz
add
fcomip
xchg
cmpsl
cmp
adc
mov
add
clc
mov
add
out
addr16
sub
sub
imul
pop
add
movsl
lret
loopne
js
jle
jle
add
ds
decl
fidivs
cmc
cmpsb
test
sbb
push
add
inc
xor
xor
fcmove
xchg
fsubrp
add
sub
popf
mov
je
fst
cli
in
xor
cltd
lcall
fnstsw
inc
dec
cltd
xor
add
mov
inc
out
call
pop
push
pop
dec
ror
pop
sub
mov
fcompl
push
xchg
pop
mov
jmp
xor
imul
icebp
rorl
xchg
lcall
cmp
mov
xchg
mov
add
stos
mov
les
mov
int3
cli
jge
sbb
fistpl
cmp
dec
call
fs
sub
xchg
mov
cmp
lret
jb
xor
stc
fwait
lds
adc
jno
xchg
sbb
lret
and
sub
and
add
push
xchg
mov
mov
add
jbe
aas
push
cltd
popa
dec
or
lahf
cmp
fisttps
sbb
mov
aas
enter
add
bnd
xorl
lods
mov
xlat
adc
aam
add
repnz
out
xor
mov
setns
add
lahf
add
jmp
pop
add
ds
cmp
cmp
in
call
popa
push
add
das
and
sbb
cmp
shl
iret
call
jo
hlt
hlt
fmull
mov
jl
out
outsb
leave
inc
jnp
sarb
add
aam
inc
aaa
leave
mov
and
mov
movsb
ret
push
add
push
add
add
in
sub
mov
jp
imul
outsb
add
mov
sbb
enter
dec
and
add
add
inc
and
push
stos
ljmp
or
lock
add
pop
add
addl
push
add
test
add
sbb
add
stos
jp
jb
shl
mov
dec
sti
mov
add
das
fcoms
js
xchg
out
mov
push
sub
mov
cwtl
xor
xchg
ljmp
xor
ret
add
add
std
cli
addb
sub
dec
paddb
inc
or
mov
push
aad
out
push
addb
add
cmp
sbb
aas
iret
js
aaa
push
aad
insb
add
cmp
inc
push
add
sub
pop
cmp
mov
add
test
xor
inc
lcall
push
add
pop
mov
mov
sub
ja
mov
decl
or
and
cli
cmp
xchg
pop
mov
add
add
mov
lret
movsb
fsub
repz
mov
mov
and
test
or
pop
adc
inc
insb
add
xchg
lret
dec
sbb
js
ret
ror
bound
add
xchg
out
mov
add
mov
test
dec
add
lret
mov
rcrl
hlt
push
push
xor
jnp
add
popa
add
xlat
pop
jl
jb
lods
stos
xor
sub
mov
add
jp
xchg
push
lret
mov
jb
inc
lahf
dec
subb
add
cwtl
clc
pop
add
sbb
stc
mov
aas
nop
push
add
sub
and
or
insb
add
mov
sub
in
add
fstps
leave
push
sarl
add
inc
add
mov
push
pop
mov
xchg
and
sbb
aad
cmpsl
iret
push
push
add
nop
pop
mov
mull
scas
push
shlb
pop
xor
pusha
add
scas
aam
inc
mov
cld
cmp
orl
sarb
vmovaps
sub
push
je,pt
add
stos
ds
mov
mov
stos
leave
int3
cmp
loope
jge
cmp
gs
shrl
cmp
jnp
insb
add
add
cmp
sbb
mov
lcall
in
mov
insb
add
mov
add
pop
in
add
call
inc
add
dec
rcr
ss
push
mov
add
or
rcrb
xor
jb
sar
xchg
sub
add
inc
pop
jmp
jae
js
stc
xlat
lret
rcl
jle
add
cmp
xor
xchg
mov
xchg
hlt
mov
imul
xchg
movsb
insl
mov
leave
adc
add
add
out
rorb
jb
xor
add
add
dec
lret
ljmp
pop
cmp
pop
add
push
add
add
mov
mov
pop
stos
push
mov
adc
sbb
dec
ljmp
add
inc
enter
icebp
pop
and
pop
add
add
addr16
gs
outsb
iret
pop
adc
iret
rclb
sub
lret
repz
sub
mov
xor
cmc
lcall
xor
lret
mov
add
sbbb
lods
mov
xchg
jge
adc
adc
mov
cmpsl
addr16
add
fcmovu
cmc
sub
push
push
jge
add
cmp
leave
call
cld
notl
pop
push
pop
hlt
lods
jp
inc
scas
std
push
add
xor
add
xchg
cmp
mov
pop
cmp
jg
das
cmp
sbb
add
push
adc
stos
test
add
xchg
sbbb
push
or
push
stos
sub
out
popf
pop
dec
add
sbb
mov
out
hlt
push
call
adc
pop
and
and
out
aaa
pop
lods
xchg
xchg
sub
xchg
arpl
xchg
and
aam
cwtl
cmc
test
add
scas
repz
mov
mov
add
fdivs
cwtl
cmp
xor
mov
push
add
add
cmpsb
jg
cwtl
or
add
cmp
sbb
or
daa
scas
add
inc
out
decl
add
push
pop
xor
into
inc
push
imul
sub
and
or
pop
xchg
call
sub
push
lods
aam
add
test
add
aad
iret
cmp
lcall
add
mov
outsl
shll
add
jmp
aaa
push
push
adc
mov
push
sbb
push
fcmovbe
dec
insb
add
inc
add
test
inc
jle
and
xchg
insb
add
movsb
scas
sbb
shl
aam
adc
jl
stos
xchg
inc
xchg
fsubs
aaa
cltd
out
movsb
aam
jmp
and
in
add
lods
push
lahf
iret
mov
aad
outsl
inc
mov
sub
add
inc
add
test
xor
and
ret
lods
test
jmp
add
nop
loope
aaa
xchg
pop
out
add
mov
add
mov
in
insl
addr16
pushf
sbb
add
add
ds
push
xchg
sbb
movsl
push
lods
aam
mov
lods
cmpsl
rcll
mov
mov
add
pop
arpl
or
xchg
addl
add
jle
stos
push
hlt
pop
pushf
xor
mov
add
adc
pop
adc
add
cltd
push
jnp
sub
movl
add
jg
stos
xor
ret
xchg
xor
push
gs
xlat
adc
inc
leave
adc
push
fsubrp
scas
sub
xlat
push
lret
xchg
negb
add
dec
add
imul
mov
nop
outsb
aas
pop
and
add
lods
pusha
add
out
add
or
mov
icebp
add
iret
inc
pop
push
sbb
pop
testb
hlt
test
add
jns
sarl
mov
add
jno
cmpb
add
adc
mov
pop
mov
negl
jne
jl
inc
mov
pusha
add
lret
xchg
push
xchg
push
xchg
ds
jg
shl
stos
sti
jb
ja
mov
mov
mov
mov
add
and
fists
test
cwtl
mov
xchg
add
idivl
dec
adc
add
lret
mov
and
mov
out
adc
js
xchg
imul
jl
call
fstp
pop
mov
sbb
jmp
sub
and
mov
add
pop
pop
jl
add
sub
out
mov
bound
add
push
ja
push
mov
add
mov
jmp
adc
mov
pop
cs
mov
mov
add
add
cmp
or
adc
test
loopne
xchg
cmp
in
add
and
lods
cmpsb
je
lea
sbb
and
ja
outsl
shrl
les
mov
jl
pop
test
mov
out
scas
sub
xchg
mov
push
mov
pop
xor
and
or
xchg
adc
xchg
aad
xor
sbb
add
ret
add
add
cli
sbb
clc
scas
fisttpl
add
dec
cmc
or
add
iret
pusha
add
mov
adc
sbb
xchg
add
mov
add
in
ljmp
pop
clc
dec
leave
loop
leave
sub
add
ret
xchg
push
push
sub
push
cmc
daa
loope
pop
and
outsl
mov
mov
cmc
sbb
dec
add
xchg
insb
add
loope
add
les
push
xchg
cmp
cwtl
mov
dec
hlt
movsb
jl
cmp
xchg
insb
add
xchg
lods
mov
push
or
pop
add
hlt
scas
das
mov
inc
cld
adc
cli
xor
hlt
ret
aaa
dec
or
aam
mov
push
lcall
iret
cmp
lds
idivb
sub
push
pop
lea
cmc
es
mov
pop
idivl
add
int
inc
leave
rclb
cli
icebp
repnz
or
add
mov
xor
lock
cmp
jno
aad
xor
inc
jo
push
sub
imul
pop
out
imul
cmc
xchg
ret
test
jle
repz
js
xor
jg
es
push
lahf
out
mov
jb
jbe
sub
les
push
psrld
add
pop
getsec
in
daa
decb
adc
add
add
nop
dec
jnp
push
jne
cmpb
mov
stos
mov
or
push
add
pop
clc
jg
mov
add
mov
dec
push
add
sub
les
lret
xor
aam
stos
jb
popa
mov
leave
sub
adc
and
rol
enter
add
xchg
movsl
cwtl
daa
movsb
jg
testb
movb
adc
xor
add
xor
add
adc
and
and
outsb
inc
push
add
push
sbb
std
dec
or
sbb
or
cmpsb
ljmp
lods
lcall
add
rclb
jl
aad
mov
mov
inc
add
pusha
add
mov
push
add
imul
iret
das
mov
dec
add
add
mov
rol
mov
mov
sub
or
dec
mov
jnp
add
xor
cwtl
sub
out
pop
jmp
xlat
cltd
mov
pop
cmp
lds
xchg
orb
add
lods
sarl
inc
dec
test
ret
fldt
push
mov
sub
mov
test
push
repnz
out
dec
mov
add
jl
pop
add
add
pop
add
add
vrsqrtss
jg
add
xor
add
push
xor
mov
not
cltd
nop
inc
or
in
sbb
or
dec
arpl
push
pop
fcoms
stos
js
mov
adc
push
sub
repz
leave
inc
aas
add
cmp
jg
cld
jge
aaa
fstps
add
jns
aam
push
ds
scas
cwtl
adc
and
out
push
add
cli
jne
ficomps
mov
arpl
sbb
popa
pusha
add
dec
push
jle
pusha
add
iret
push
add
insb
add
cs
scas
hlt
dec
icebp
gs
xor
mov
or
adc
arpl
mov
andl
add
mov
mov
adc
cwtl
shlb
sub
sbb
add
push
mov
fnstsw
leave
adc
add
js
push
add
stos
inc
ret
cmpsb
shlb
mov
out
sub
insb
add
add
movsb
cmc
jmp
add
dec
or
lret
and
push
sti
and
inc
enter
subb
scas
adc
pop
mov
nop
cli
mov
clc
int3
sub
lods
imul
cmpsl
cs
add
sbb
hlt
add
call
dec
add
lret
imul
inc
leave
arpl
xor
mov
push
aaa
mov
test
mov
sub
imul
inc
aam
add
sbb
fsubrp
arpl
dec
add
add
loopne
mov
mov
loop
xlat
jge
add
lahf
dec
xchg
mov
cltd
add
cld
scas
gs
xor
icebp
adc
lds
lea
mov
repz
aaa
cmpsb
pop
sbb
inc
mulb
xchg
inc
jle
add
loop
jb
jp
add
pusha
add
dec
add
add
daa
cwtl
xlat
ja
movsl
inc
pop
add
imul
mov
inc
add
jno
nop
out
movsl
sbb
add
clc
popa
mov
out
cmp
lods
mov
out
xor
xchg
pop
or
add
pop
jg
add
mov
sbb
lret
mov
and
cltd
scas
fsts
push
ficomps
fildll
add
pop
sbb
outsb
or
dec
and
ds
add
pop
movsb
add
cmc
cmc
ljmp
xchg
fucomp
fsubl
dec
or
not
out
sbb
push
pushf
in
lret
xchg
jl
mov
std
add
fstl
pop
add
cmp
inc
add
fcoms
popf
in
add
test
jae
int
pop
cmp
in
orl
sbb
das
pop
rcl
push
xchg
lea
add
addr16
clc
movsl
out
test
pop
andb
mov
add
and
sub
xchg
pop
add
add
lods
pop
inc
add
scas
mov
xor
inc
inc
inc
std
add
jp
pop
adc
adc
inc
std
popa
cmp
xor
add
loopne
flds
mov
dec
lds
add
sbb
pushf
inc
add
adc
push
add
push
add
pop
mov
add
sbb
cltd
sbb
adc
aaa
scas
add
sahf
mov
add
ds
out
movsb
xor
fnstsw
or
inc
xchg
pop
and
and
pop
add
add
cmp
add
jmp
in
pop
mov
movsl
lret
mov
ret
push
cmp
sbb
or
dec
push
or
mov
mov
enter
clc
adc
clc
lock
dec
cmp
subb
push
add
add
push
add
test
jne
sub
in
dec
repnz
movsl
inc
lea
add
add
jecxz
add
sbb
dec
sub
cmp
mov
add
sub
mov
enter
push
add
stos
mov
fiadds
aaa
test
imul
in
inc
mov
add
adc
add
pop
sub
push
scas
mov
loop
scas
sbb
sbb
lret
push
mov
cld
stos
xchg
inc
add
leave
jne
pop
jp
add
push
add
pusha
add
xor
lods
fbld
ret
xchg
addr16
adc
inc
add
mov
mov
xchg
xchg
push
mov
jno
xorl
lret
loope
add
aad
fldl
inc
adc
mov
pop
pop
dec
add
jmp
cmp
jg
arpl
add
adc
add
lea
mov
dec
das
fcoml
mov
dec
pop
xchg
cmpsb
mov
js
outsb
ret
push
xchg
mov
shl
ret
scas
push
add
fwait
xchg
or
push
xor
add
sbb
push
pop
jmp
push
push
ljmp
dec
add
sub
sbb
cmp
jbe
add
add
add
add
out
imul
cmp
insl
lahf
cmpsb
dec
scas
mov
ret
xor
cld
adc
pusha
add
sbb
fldl2t
sbb
dec
add
rcl
sbb
xorl
shr
vorps
pop
or
jecxz
adc
pop
dec
add
out
dec
mov
cld
fadds
add
cli
jmp
dec
adc
lods
fisubrl
mov
test
add
ljmp
add
ljmp
fwait
jbe
add
add
ret
inc
loop
mov
dec
push
push
nop
mov
dec
insl
aam
push
xchg
es
cmp
test
ja
and
pop
add
aam
xchg
loope
stos
pop
sub
sbb
daa
push
out
jno
lods
sahf
in
cmp
add
pop
bound
push
mov
xor
je
lcall
push
add
cmp
cmp
cs
repnz
add
add
inc
mov
je
outsb
shll
test
sub
pop
mov
lods
jp
hlt
sarl
jae
test
mov
xor
scas
sub
jne
inc
add
ja
add
push
push
sub
dec
nop
xchg
pop
pop
daa
dec
das
arpl
subl
cmp
xor
inc
std
dec
add
mov
xorb
stc
pop
jl
inc
int3
sub
pop
mov
xchg
inc
mov
adc
sbb
and
lcall
push
or
xor
jb
sarl
andb
ret
sbb
mov
add
adcl
into
inc
jnp
arpl
loopnew
pusha
add
pusha
add
sub
in
adc
pop
jno
cmpsb
push
mov
xchg
add
push
or
push
or
in
xlat
ret
mov
dec
adc
adc
push
aaa
xchg
stos
push
in
fucom
shl
fwait
or
loopne
pop
cld
in
sbb
cmp
sbb
fsubrl
mov
xor
push
mov
mov
out
jne
test
push
les
sarl
mov
mov
xor
mull
add
sti
orl
fsubrp
movsl
mov
pop
std
fcoml
cwtl
fiaddl
pop
add
daa
and
stc
xchg
scas
lret
push
shrb
lahf
aas
repz
add
scas
add
jmp
push
push
mov
adc
out
and
imul
pop
popfw
adc
fildll
dec
add
scas
mov
outsb
push
outsb
mov
ljmp
jns
add
add
sub
sbb
jae
jae
enter
add
add
and
das
imul
add
xor
popf
cli
cli
int3
fdivs
fidivs
test
imul
mov
push
add
sbb
sahf
mov
out
jbe
xchg
mov
outsl
aaa
adc
jl
xor
jg
dec
add
pop
add
xor
mov
add
mov
lock
scas
mov
mov
lods
pop
add
in
repnz
mov
push
or
add
add
lds
icebp
jg
add
add
ljmp
add
mov
pop
mov
jl
pop
add
sahf
mov
add
mov
movsb
pop
mov
sub
adc
mulb
lock
pop
xor
add
add
and
add
imul
add
stos
divb
xor
mov
add
enter
nop
filds
sub
mov
cmpsl
out
mov
xchg
in
xor
mov
cmp
mov
add
addr16
cmp
mov
fcomip
jl
cs
mov
adc
ss
test
jbe
or
cmp
call
xor
or
xchg
or
xchg
repz
mov
add
popa
sarl
test
push
add
loope
icebp
pop
xor
cmp
cli
mov
arpl
fdivl
xor
sahf
jge
cmc
add
fcmovnu
xor
lods
and
sbb
and
mov
mov
add
add
or
sub
push
dec
shrl
add
mov
loop
sub
and
add
dec
aaa
data16
xchg
icebp
mov
pop
test
xor
divl
int
add
pop
pusha
add
mov
xchg
xchg
repnz
push
inc
add
xchg
mov
adc
std
dec
xchg
mov
les
add
or
mov
jno
mov
in
aad
xor
pop
push
in
mov
cmc
test
lods
sbb
sub
rcr
push
je
je
fninit
sub
shlb
mov
push
shl
push
sti
push
test
or
stos
es
fcompl
push
iret
test
rcrl
or
xchg
aaa
test
fldl
and
pop
ss
add
mov
fsincos
pop
pop
outsl
nop
jb
std
push
pop
imul
mov
jns
hlt
in
xchg
add
test
cltd
lods
into
xor
sub
cmpsl
xchg
mov
fwait
sarl
or
loope
cld
rorb
push
cmp
add
cltd
mov
sub
fdivs
add
jae
cmp
add
fcoml
jmp
add
add
sub
lahf
pop
fsubl
push
jl
cmp
add
inc
pop
sti
jo
test
iret
adc
mov
sub
sti
jp
fs
xor
movsb
and
pop
add
mov
cmpsb
es
mov
add
fwait
rcl
pop
xchg
test
repnz
jne
sti
sub
add
cmpsl
repz
jmp
mov
push
in
sbb
add
mov
pop
sub
pop
push
mov
xor
pusha
add
or
jge
push
sub
mov
add
out
fwait
xchg
adc
mov
mov
sbb
pop
add
loop
movsl
xor
mov
add
xchg
clc
arpl
cmpsl
ret
icebp
fiaddl
movsb
nop
lahf
jne
mov
addr16
jecxz
mov
enter
js
push
push
sarl
fisubl
adc
out
add
and
add
add
lcall
nop
adc
inc
add
cmp
js
or
and
add
push
push
pop
sub
push
popf
pop
sbb
lea
mov
sbbb
mov
xor
test
add
in
jae
sub
add
xor
adc
shrb
imul
cmp
dec
cwtl
xchg
jo
adc
lds
fcompl
dec
cs
sbb
test
sub
pop
mov
lods
sti
ret
and
jecxz
iret
pusha
add
loope
pop
sub
call
add
leave
iret
clc
adc
dec
cmp
shlb
dec
add
loopne
xor
ffreep
and
add
ds
mov
test
sahf
xchg
ret
dec
add
inc
xor
jbe
add
push
or
cmpsl
das
xlat
es
push
sbb
lds
pop
fcompl
stos
fcoms
xlat
pop
enter
es
fwait
je
stos
push
mov
mov
xchg
bound
push
and
push
cmpsb
push
push
cmp
push
push
adc
jne
xchg
fistpll
add
call
aaa
mov
aas
sbb
pop
dec
add
sahf
mov
add
movsb
cmp
mov
sbb
insl
pushf
imul
add
hlt
outsb
lds
jbe
dec
lock
roll
aaa
lock
dec
push
or
add
idivb
push
inc
pop
sbb
and
add
xchg
lahf
xchg
mov
push
xchg
loopne
push
mov
mov
inc
in
xor
add
inc
sbb
sub
sub
add
rcrb
cmc
fdiv
xorl
stos
fistpll
mov
xor
add
lock
xchg
xor
sub
cld
and
dec
lahf
cmpsb
mov
add
fs
mov
sbb
cmp
sbb
sub
icebp
addr16
mov
repnz
ds
arpl
sub
scas
sub
cmp
add
insl
fstps
imul
mov
sub
add
add
cmpl
stc
dec
fcomp
popf
shrl
pop
add
jae
add
pop
jge
sub
mov
loope
add
xlat
add
xor
add
add
clc
cmp
xor
xchg
popa
or
xor
jecxz
add
dec
pop
push
push
dec
in
xor
mov
rcrb
int
add
fstpt
subb
roll
cmpsl
mov
cwtl
pop
push
add
add
sub
fsubrl
aas
dec
jno
add
cmp
ljmp
push
xchg
mov
mov
popf
ret
es
aaa
stos
jecxz
out
cltd
lahf
dec
or
hlt
addr16
mov
in
js
adc
push
outsb
loopne
jb
sub
pushfw
pop
pop
lods
pop
std
push
sub
jne
add
into
out
dec
roll
out
int3
mov
lahf
mov
movb
lret
mov
inc
mov
adc
cs
mov
es
hlt
mov
bound
test
xchg
addr16
jl
adc
inc
dec
add
mov
jbe
dec
sbbb
lds
aas
js
lretw
testb
cli
xchg
pusha
add
nop
and
cmp
in
push
and
sbbl
das
sub
cli
clc
and
mov
adc
add
xchg
imul
faddl
das
mov
inc
pop
jae
xchg
and
loopne
clc
ss
push
mov
jbe
out
mov
in
pop
mov
cmp
int
mov
scas
in
mov
add
and
xchg
dec
cli
sub
jae
out
lock
push
fdivs
movsl
sub
push
add
mov
cld
stos
shrb
jl
cltd
jns
add
mov
mov
test
divb
ljmp
test
xor
add
jecxz
push
pop
jecxz
cs
roll
addb
cmp
std
dec
add
or
repz
iret
jb
std
cwtl
cmp
clc
mov
pop
int3
aaa
test
mov
cwtl
push
jno
cld
and
xchg
jb
add
mov
in
mov
cmp
adc
icebp
sub
mov
push
lcall
jmp
sbb
inc
pop
add
adc
mov
and
cwtl
lret
mov
mov
aad
dec
sti
cs
mov
inc
xor
aas
pop
mov
int3
outsl
cs
rolb
adc
mov
aad
inc
pop
add
js
push
xor
mov
cmp
sbb
mov
cmpsb
test
add
mov
lret
xor
lds
mov
xchg
jo
ret
mov
jl
mov
psubd
rol
decl
xor
nop
or
fwait
push
add
imul
pushf
cmp
jl
stos
lock
inc
orl
pushf
imul
cli
mov
cmp
xchg
jg
inc
xchg
pop
incl
add
adc
inc
mov
in
shrb
loopne
dec
add
adc
push
lds
test
pop
icebp
lahf
xor
mov
lcall
pop
push
add
add
inc
add
push
push
scas
mov
movsb
add
inc
pop
push
shl
pop
movsl
lods
lret
sbb
les
shlb
ficoms
outsl
lcall
enter
dec
inc
add
push
add
add
cmp
mulb
push
movsb
adc
std
jg
fisubrs
pop
add
rcl
inc
add
imul
imul
mov
stos
add
scas
mov
inc
mov
push
pop
out
cltd
cltd
lods
in
inc
jp
enter
imul
jbe
adc
inc
aam
clc
test
jmp
loopne
add
adc
fsubrs
add
sub
xchg
push
jg
dec
jno
sbb
jecxz
add
loope
sar
pop
add
mov
add
xchg
add
daa
mov
call
add
pop
aad
push
add
add
sahf
dec
add
filds
pop
sub
pop
cwtl
sahf
pusha
add
stos
bound
mov
enter
add
lea
je
sub
adc
mov
xor
cmpsl
adc
fwait
jmp
ljmp
mov
les
mov
and
xchg
pop
cmpsb
mov
push
loopne
add
and
test
mov
add
push
imul
in
rcl
outsb
test
add
inc
jno
sbb
lret
cmp
in
into
and
xchg
mov
jns
add
repnz
daa
ljmp
dec
sub
dec
add
adc
push
cmpsl
shll
int3
adc
mov
add
dec
add
mov
test
dec
adc
ret
pop
mov
call
xchg
ss
mov
fmulp
dec
mov
cli
mov
loopne
outsl
sahf
imul
jp
js
mov
add
mov
bnd
cs
outsl
push
imul
int
call
add
ret
idivl
jge
mov
add
cltd
inc
add
jl
pop
add
mov
iret
loop
add
pushf
sbb
jns
and
int
jno
addr16
aam
cwtl
mov
adc
mov
addr16
inc
and
ss
add
divl
pop
sahf
lds
mov
jge
ss
ret
push
or
fs
test
ljmp
xchg
jo
ja
pop
lds
cmpsb
add
leave
mov
repnz
pop
xlat
lahf
aaa
out
movsl
in
inc
add
pop
out
push
movsb
aad
imul
add
insl
jg
fsts
cmp
or
bnd
fnstenv
add
sti
and
sub
xchg
rcrb
ret
stos
rcrl
dec
add
das
jae
scas
and
and
fs
mov
sub
daa
mov
xor
xchg
out
popa
enter
sbb
mov
or
std
xchg
loop
mull
xchg
mov
add
push
add
cmpb
fwait
sbb
imul
add
inc
je
pop
sti
dec
mov
outsb
mov
jg
push
add
in
test
ret
ftst
in
leave
adc
cmp
shr
les
add
mov
cwtl
sarl
sub
sub
add
xchg
test
jae
xchg
xchg
sub
and
cmp
mov
add
cmp
dec
jp
xor
lret
insb
add
jp
xchg
js
imul
cmp
push
fnstsw
jmp
add
leave
shrb
cmc
dec
xchg
in
or
shrb
ja
xchg
iret
jp
movsb
decb
add
outsl
rolb
rcr
fnstenv
add
dec
lret
repnz
jl
pushf
ja
stos
shlb
enter
inc
movsb
out
ret
arpl
adc
iret
mov
sub
outsl
pop
xchg
es
push
movsb
sahf
or
mov
xchg
xor
jb
add
push
add
add
push
dec
filds
dec
add
mov
fcoms
sub
movsl
nop
in
aaa
cmp
int
cmp
loope
outsb
ret
or
das
xlat
mov
call
test
rcrl
add
divl
sbb
add
pushl
push
mov
adc
js
leave
stc
add
pop
mov
ja
sub
stos
mov
scas
push
or
insb
add
mov
or
or
js
sbb
inc
cmp
add
lret
sub
loop
xor
mov
add
fistpll
fcompp
add
and
iret
or
fcomp
push
movsl
mov
cmp
add
lock
dec
sti
ds
inc
mov
inc
nop
imul
jl
clc
adc
and
push
pusha
add
mov
mov
sub
hlt
sub
add
ficomps
test
pop
in
imul
roll
or
iret
ret
adc
mov
cmpl
fwait
jecxz
repz
clc
ljmp
xchg
shlb
add
aas
mov
mov
mov
xor
imul
and
mov
popa
ja
dec
add
push
daa
paddb
hlt
xor
mov
incb
jae
add
ret
loopne
xor
cltd
adc
add
dec
add
add
movsl
push
push
inc
xor
out
sbb
push
loopne
fs
and
or
add
clc
jnp
add
lcall
cmp
sar
outsb
daa
xor
lea
and
xchg
ffreep
pop
fadds
pop
movsl
fnstsw
data16
icebp
lods
das
out
add
add
ror
push
aad
ficoms
xchg
pushf
pop
rorl
add
and
fisubrs
stos
xor
cmpsl
dec
add
adc
ja
mov
dec
add
jo
and
test
cwtl
adc
dec
add
add
subl
fwait
in
xor
jo
mov
add
push
and
sub
adcb
inc
add
xor
push
lret
insl
sbb
cmp
add
and
ret
mov
imul
add
cs
shll
out
xchg
aam
lcall
add
cli
add
inc
add
clc
mov
push
pop
and
fwait
cmpsl
mov
rol
sub
ss
cli
jmp
xchg
inc
outsb
test
add
jl
hlt
pop
mov
add
jle
mov
or
aam
cmp
fistpl
or
mov
add
loop
fucomip
push
push
adc
add
mov
outsb
hlt
pcmpgtw
es
mov
xor
test
aaa
je
test
add
fwait
hlt
cltd
sub
sbb
arpl
xchg
sbb
int3
mov
add
sub
cmpsl
adc
in
loope
scas
xor
pop
arpl
sub
bound
add
inc
add
add
pop
and
xor
addr16
adc
aas
notl
xor
or
cld
jae
cwtl
lds
xchg
inc
sub
add
data16
ret
cmp
imul
add
jl
xor
scas
lods
pushl
add
mov
loop
mov
sbb
add
mov
std
aaa
iret
sub
out
sbb
sbb
in
mov
push
jle
repz
add
xor
mov
lock
xchg
lret
arpl
fildl
dec
add
mov
sbb
rorb
xchg
dec
add
pop
add
je
cmp
shll
push
popf
jmp
sub
inc
hlt
loope
cmc
jno
sbb
and
xchg
add
add
jae
adc
bound
std
lcall
notb
dec
add
mov
xor
add
add
xor
or
push
sbb
mov
insl
inc
add
leave
daa
loopne
stos
dec
adc
push
sbb
or
test
lea
add
cmpsb
xor
jne
dec
add
add
stos
push
add
mov
ja
and
jo
mov
lds
rolb
jns
ret
xchg
test
in
repnz
add
xlat
add
add
cmp
loop
jle
adc
cmp
xchg
das
add
mov
add
ret
and
lret
jge
jp
xlat
lods
adc
mov
jp
pop
dec
frstor
test
xor
stos
lret
jl
dec
cmp
arpl
ljmp
or
shll
xor
shlb
jno
enter
xchg
leave
pop
outsb
mov
loope
int
arpl
and
aas
sub
xor
js
mov
and
push
add
sti
add
xchg
jbe
stos
mov
add
adc
mov
rolb
push
pop
add
xchg
ja
push
jecxz
adc
test
shl
cli
imul
add
add
inc
mov
repz
add
push
leave
jae
hlt
cltd
jne
jnp
or
add
add
cmpsl
add
call
push
mov
adc
adc
mov
ss
aaa
iret
jl
mull
test
push
cwtl
ret
js
and
add
inc
add
xor
adc
inc
aas
sub
cld
push
testb
fdivrs
shlb
jp
push
sbb
dec
add
jmp
inc
out
cmp
fwait
scas
dec
hlt
xchg
pop
mov
cmp
push
add
inc
inc
add
xchg
mov
inc
push
adc
add
add
jno
xor
mov
popa
andl
dec
dec
pop
inc
mov
add
fsin
mov
sbb
mov
add
mov
add
dec
sbb
pushf
out
mov
xchg
mov
mov
mov
cmpsb
into
in
sbb
add
and
xchg
cli
imul
insb
add
xchg
or
dec
adc
jmp
stos
pop
xchg
adc
jno
add
dec
mov
data16
cmp
cmp
lret
idivb
adc
sbb
jl
loope
outsb
loope
add
add
add
add
fisubrl
int
pop
mov
divb
jl
xor
add
jne
mov
cs
rol
dec
add
jmp
out
mov
sbb
movsl
rorl
test
add
add
insb
add
mov
scas
movsb
icebp
pop
add
mov
push
add
jnp
push
jp
imul
adc
pop
test
arpl
in
xchg
jbe
pop
inc
movsl
cmp
pop
mov
cmpsb
and
push
stos
inc
ret
ss
rolb
xchg
hlt
mov
movsl
test
fisubrl
inc
add
mov
shll
scas
lock
add
aam
mov
int3
and
mov
add
dec
add
add
mov
adc
mov
cmp
fcompl
cmp
ss
add
add
jne
lret
pop
sub
movsb
jbe
mov
inc
fwait
cmp
sbb
pusha
add
add
sbb
cmc
sub
int
pop
sub
and
add
push
or
mov
push
add
mov
pop
or
hlt
adc
add
movsb
dec
add
add
jb
push
lds
add
dec
add
xchg
dec
cwtl
and
adc
int3
sarb
test
add
lds
push
fiadds
aam
adc
iret
scas
jo
mov
add
test
lret
mulb
outsb
jg
bound
mov
mov
adc
inc
add
stos
push
add
lds
and
mov
lret
sbb
mov
les
push
lahf
mov
icebp
mov
pushf
xchg
pop
adc
add
dec
add
xchg
cs
das
inc
add
aaa
xor
ja
fcoml
sbb
leave
add
into
stos
xor
xlat
mov
pop
add
add
outsb
dec
out
xor
adc
pop
add
add
xlat
in
inc
mov
cs
add
fldt
test
add
repz
sub
add
jge
pop
adcl
shlb
sarl
test
add
add
mov
or
and
in
test
add
pop
jmp
xor
add
ja
out
add
xor
loope
mov
add
add
inc
hlt
leave
pop
arpl
push
mov
in
mov
fwait
xchg
cltd
arpl
pop
jo
js
mov
ja
sbb
rcrl
icebp
roll
test
dec
add
mov
add
sub
xlat
cmc
and
loope
mov
jnp
shrb
pop
adc
pop
ds
repnz
in
fdivrs
add
dec
add
movsl
sub
push
jmp
cli
je
inc
pop
pop
movb
das
mov
ficoms
andl
sub
imul
or
xchg
stos
mov
jle
mov
mov
or
shlb
pop
pop
lods
jle
scas
out
bound
jbe
lods
jmp
into
sahf
pop
icebp
mov
jb
loope
xor
scas
pop
add
jg
and
sub
sbb
pop
aaa
and
ret
js
inc
add
loope
dec
xor
xchg
xchg
insb
add
iret
aam
push
loope
iret
xor
jb
loope
inc
xor
mov
clc
outsl
adc
mov
in
adc
inc
sub
push
add
sbb
push
add
fldt
lock
jb
es
add
mov
xchg
shll
test
pop
push
lret
in
in
mov
hlt
xchg
jle
bound
jae
add
add
int
mov
outsb
add
add
jle
pop
jnp
pop
icebp
adc
xor
pop
or
push
or
les
mov
mov
add
pop
and
jae
add
xor
mov
dec
outsl
and
stc
jno
xor
add
nop
idivb
mov
and
and
xor
mov
lds
jmp
stos
ds
lret
cmpsl
jmp
mov
add
sub
lret
sub
bnd
hlt
or
and
xor
fists
add
data16
push
add
add
insb
add
cld
sbb
in
xor
int
jle
shr
outsl
shr
cmp
xorb
cmp
xlat
fimuls
add
in
loop
add
jae
xchg
aam
pop
jge
sbb
add
vmwrite
adcl
shll
push
in
mov
in
jbe
sbb
testl
add
dec
and
lea
or
cs
add
ret
shrl
mov
adcl
ja
out
adc
mov
aas
pop
add
xchg
jp
push
add
inc
mov
pushf
inc
sarb
loopne
pop
loop
jecxz
push
add
rcll
enter
add
add
mov
cmc
popa
lock
mov
ja
ljmp
xor
add
pop
push
and
mov
repz
or
sub
sub
fnsetpm(287
mov
xchg
inc
add
lahf
or
cmpsb
push
fsubrs
cmp
jbe
add
add
mov
lds
pop
xor
sahf
jbe
mov
sbb
and
mov
cmp
sahf
inc
mov
pusha
add
idivb
test
insl
sbb
xchg
mov
pop
add
add
aad
or
pop
add
and
imul
push
or
mov
add
fadds
add
pop
movsl
mov
dec
mov
jecxz
add
sbb
fidivs
inc
add
dec
add
adc
jmp
mov
lret
add
cld
inc
xchg
rcl
jle
outsb
and
enter
test
push
or
leave
mov
add
and
pop
into
jge
mov
add
mov
xor
out
inc
add
repz
mov
js
cmp
stc
xor
lods
les
in
and
scas
test
lcall
icebp
pop
shll
mov
add
movsl
lods
ljmp
fsubr
and
adc
repnz
add
push
add
or
rorl
fwait
and
sbb
jle
or
jae
mov
push
lret
pop
sbb
jne
push
push
scas
jg
pop
dec
push
mov
adcl
jns
pop
dec
in
repz
outsl
inc
insl
es
jge
ds
sahf
out
addb
lret
cmpsb
movaps
cmc
sub
iret
xchg
clc
out
add
xor
shll
cmp
inc
push
scas
js
push
add
lds
add
inc
sbb
xchg
add
hlt
mov
push
add
outsb
or
cmp
mov
adc
and
push
pop
mov
push
sub
call
rorl
jne
jp
push
je
sub
les
ds
data16
outsl
les
and
in
shll
mov
add
dec
std
stos
cmp
sub
dec
lods
inc
bound
imul
fnstsw
adc
cmp
cmp
ja
add
cmp
push
push
add
and
mov
jb
icebp
in
xchg
movsl
into
lcall
mov
add
in
mov
jle
inc
dec
mov
cwtl
and
and
push
out
sti
mov
scas
and
mov
pop
test
fxch
decl
sbb
mov
pushf
iret
mov
cmpsb
push
loop
add
ljmp
or
fmul
dec
sub
cld
and
outsl
or
mov
enter
sbbb
leave
mov
sbb
mov
add
add
nop
mov
les
push
data16
test
hlt
mov
cmp
insl
icebp
sub
fistpl
add
inc
jl
stos
adc
mov
mov
mov
ja
cmpsl
fcoml
add
add
stos
arpl
sahf
icebp
inc
bound
pop
lret
shlb
scas
dec
das
aaa
jmp
add
sub
push
jl
dec
mov
and
xor
test
add
pop
dec
add
repz
lret
dec
cmp
push
das
cltd
or
push
mov
in
add
not
aaa
sub
loopne
xchg
in
ja
lahf
shl
fidivl
sarl
adc
xlat
jmp
jl
sub
int
dec
or
add
add
dec
add
add
jmp
xchg
mov
pusha
add
lret
sahf
pop
sub
xchg
aad
mov
push
xor
jg
add
add
dec
addl
lret
inc
add
sub
aad
orb
jle
aad
es
sub
xchg
lods
xor
push
add
add
add
sar
pop
fidivs
iret
das
dec
loopne
add
lahf
mov
jl
std
test
popf
decl
insb
add
iret
add
lahf
lret
add
aaa
das
bound
xlat
fwait
adc
inc
pushf
pop
adc
or
insb
add
inc
stos
dec
xchg
push
pusha
add
pop
dec
icebp
andb
call
inc
add
pop
inc
dec
dec
rolb
dec
cmp
push
pop
adc
mov
dec
add
or
cmpsl
push
mov
rorl
and
xchg
mov
sub
adc
fisubrl
and
xchg
jecxz
sub
cmp
mov
adc
and
push
add
jg
jmp
subl
sub
mov
addl
into
inc
push
subb
lret
mov
test
flds
pop
add
adc
cmp
int3
or
bound
fimull
or
push
cli
outsb
movsl
mov
les
hlt
pop
adc
jnp
push
mov
daa
dec
push
insl
mov
push
add
out
cltd
jge
incb
lea
add
add
mov
data16
add
aaa
xor
or
jle
gs
addb
ds
mov
imulb
fs
roll
add
icebp
mov
addr16
push
roll
push
add
mov
es
add
test
mov
ja
add
push
arpl
add
mov
xchg
pop
add
aas
add
sti
nop
push
int3
in
out
add
add
add
int
vpmacsdd
mov
push
xchg
mov
lret
mov
add
jl
push
add
insb
add
add
and
or
add
mov
jb
mov
mov
outsb
cmp
dec
pop
add
sub
pop
sbb
add
aas
out
sub
or
sub
add
jg
pop
cmc
lock
lcall
jg
add
sbb
popa
inc
ret
push
mov
add
fisubrl
lret
pop
adc
adc
mov
add
scas
mov
mov
aad
add
and
hlt
hlt
xchg
xor
jnp
xchg
fwait
push
xor
clc
aaa
in
add
aam
jns
sbb
out
add
cmc
mov
lea
jl
jg
ja
sub
rclb
in
add
pop
mov
sti
xor
lea
into
pop
add
sub
xchg
mov
pop
jl
inc
mov
add
or
adc
xchg
sub
movl
insl
ffreep
leave
jmp
sbb
mov
faddl
adc
add
out
xchg
or
lret
mov
jmp
xchg
sub
lds
out
mov
mov
fidivl
cmp
daa
pop
add
cmp
add
cmpsl
inc
add
xchg
shlb
adc
out
add
lret
andb
das
scas
inc
add
ljmp
incl
std
stos
push
add
jo
lret
pop
jle
mov
jae
sti
test
stos
cmp
lea
imul
lret
mov
xorl
mov
pause
mov
mov
aad
xor
cmpsl
rcl
lea
daa
cmp
lahf
cltd
inc
add
pop
jecxz
hlt
pop
into
enter
cmp
mov
dec
or
cmc
inc
add
jns
inc
add
add
sahf
imul
pusha
add
rclb
lock
and
cli
loop
sbb
dec
add
inc
add
push
xor
or
xor
and
or
mov
jge
push
jno
jo
or
repnz
add
out
scas
fstpl
loope
jl
scas
mov
fwait
mov
stc
out
in
or
and
pop
add
movsb
loop
sub
lcall
cmp
pushf
jge
xchg
or
hlt
jmp
orl
dec
cld
dec
add
rclb
sbb
inc
adc
or
push
cmp
int
or
in
movsb
ja
ja
add
sbb
jmp
std
jns
inc
add
es
sub
adc
sbb
repnz
fdivrl
fsub
push
fnstsw
cmc
inc
add
enter
add
testl
or
dec
addr16
and
sahf
ficoml
add
std
mov
cmp
cmp
add
xchg
lods
cmp
test
aaa
push
mov
out
lahf
aam
shl
sahf
lret
jmp
mov
mov
mov
xchg
shll
out
rcrl
cmp
add
xchg
jnp
es
cmpsb
xor
sub
loop
mov
xor
push
add
jge
pop
int3
movsl
repnz
adc
mov
insb
add
ret
sbb
flds
rcrl
das
add
and
xchg
sbb
lods
in
jnp
jecxz
in
lock
data16
add
ficompl
roll
jns
flds
add
out
adc
cwtl
adc
mov
xor
pop
dec
add
jns
popf
adc
shlb
inc
add
push
ja
xor
ficoml
adc
pop
jb
clc
dec
pop
add
xor
or
xchg
gs
push
jnp
unpckhps
xchg
jl
pop
dec
dec
mov
loop
out
insb
add
pop
add
fs
fsubr
xchg
cwtl
adc
ret
cmp
gs
out
jge
mov
add
insb
add
xor
sbb
jecxz,pt
rclb
fmull
push
xchg
repnz
cmp
sub
stos
test
add
and
mov
xor
inc
aaa
daa
jge
jg
add
adc
testl
push
pop
movsl
sbb
aad
add
add
add
pop
inc
inc
pushf
fldcw
fnsave
add
xor
pop
arpl
add
add
out
test
push
and
pop
jns
ret
and
in
les
and
jg
test
adc
mov
fldt
jo
test
add
les
lret
or
out
add
addr16
andl
jae
add
xor
push
and
xchg
insl
scas
cmp
add
mov
push
add
mov
add
lahf
push
inc
add
sub
jb
dec
jno
dec
mov
cmp
mov
sub
sti
and
shll
dec
xchg
lcall
add
or
sub
sub
add
push
dec
fcmovbe
jle
add
push
add
fs
pop
movsl
aas
add
add
add
push
add
mov
scas
mov
push
add
and
add
loop
imul
sbb
and
inc
mov
scas
mov
sti
js
enter
test
iret
mov
add
call
pop
jne
fidivrs
xchg
scas
push
mov
cmp
rcrb
mov
add
add
lret
std
cmp
test
push
repz
mov
mov
cmpsl
iret
xchg
mov
sub
stc
loopne
in
sahf
xchg
dec
cwtl
jle
in
mov
cli
fbld
add
std
mov
xor
loop
sahf
aad
pop
add
inc
push
clc
orl
mov
int
add
aad
add
arpl
mov
dec
fdivrs
inc
lea
inc
adc
fimuls
mov
imul
mov
pop
je
out
push
frstor
inc
dec
add
fcoms
mov
or
jae
fmuls
add
lret
xlat
cmp
fmuls
repnz
add
mov
push
fwait
mov
mov
in
in
ret
push
sub
fstl
lods
and
xchg
sti
xor
sbb
iret
dec
mov
push
add
push
inc
cmp
ds
xor
mov
push
mov
iret
jne
xor
mov
add
sub
in
pop
call
daa
int
pop
loop
pop
es
add
add
lahf
fwait
insl
shll
pop
fdivrl
leave
nop
sub
cmp
xchg
lret
add
add
jns
adc
jmp
and
insl
and
adc
lret
pop
add
insb
add
pop
pusha
add
and
mov
jae
fiaddl
lcall
pop
out
add
ja
pop
mov
add
lret
fucomi
xchg
xorb
ret
mov
push
adc
push
popf
cmp
mov
mov
pop
add
inc
jns
push
cmp
in
inc
mov
js
cli
divb
xchg
add
xor
and
aaa
test
xchg
pop
lods
jp
jb
pop
inc
sub
mov
test
bound
test
outsb
adc
mov
mov
mov
lahf
mov
or
insb
add
mov
outsl
fldenv
bound
nop
call
addr16
pop
data16
sub
jo
cmpl
aaa
in
xor
pushf
push
loop
or
outsb
pusha
add
mov
add
pop
lods
clc
push
gs
in
ljmp
mov
xlat
lock
inc
add
push
mov
int
stos
inc
out
mov
in
lcall
insb
add
add
insl
push
add
xchg
add
xor
gs
push
mov
in
sub
mov
xchg
cmc
insb
add
mov
addr16
scas
inc
add
pop
iret
decb
outsb
imul
pop
pop
inc
int3
orl
dec
leave
push
add
sub
pop
add
fchs
push
sub
add
into
xchg
pushf
dec
lea
push
add
dec
lahf
jne
dec
cmp
movsb
call
mov
inc
add
jnp
and
fimuls
sub
dec
test
mov
mov
ja
popa
or
xor
stos
inc
sbb
sub
enter
ret
sbb
cwtl
inc
rorb
test
insb
add
push
add
incb
cli
sbb
mov
sbb
mov
scas
pop
and
es
jge
xor
test
into
jge
fwait
xor
int3
testl
xor
mov
cs
add
mov
xchg
push
dec
add
jmp
cwtl
fcmovnb
cmc
mov
mov
daa
jbe
add
add
add
sbb
or
xchg
push
cld
dec
add
ds
es
sub
add
out
cmp
leave
cltd
bound
mov
nop
mov
inc
add
aad
or
sub
mov
add
cltd
gs
lods
pop
in
nop
push
xor
mov
pop
jne
add
add
push
sahf
xor
xor
cmpsl
add
xlat
ficoml
ret
mov
pop
cltd
rcll
sti
movsb
enter
add
sub
push
aam
jns
mov
xlat
xlat
push
or
fcmovnbe
or
loope
mov
je
sub
sub
xchg
repz
inc
sbb
insl
ret
mov
jg
cmp
xchg
pop
int
into
gs
add
push
xor
dec
addr16
pop
fcom
mov
fsubrs
lds
add
lahf
fcomps
inc
notb
add
xchg
or
add
lcall
or
dec
in
ret
pop
sub
xor
les
ljmp
add
add
push
cli
loopne
adc
rcr
add
inc
xchg
clc
jne
popf
fcompl
push
mov
jmp
push
cmp
roll
inc
pop
push
imul
mov
aas
subb
jg
les
out
pusha
add
ss
add
add
inc
addr16
cmpsb
dec
push
add
arpl
aaa
inc
and
fdivs
mov
xor
fisubrs
pop
jno
pusha
add
and
xchg
jb
lock
in
repnz
xlat
test
xlat
lidtl
sbb
clc
ret
add
mov
mov
or
add
aas
lock
dec
fnstenv
jnp
fabs
insl
scas
mov
xlat
ss
mov
cmc
xchg
xchg
cmp
xchg
xor
mov
addr16
mov
lods
mov
lret
mov
enter
xchg
xor
jge
xchg
cmp
or
cld
pop
add
in
cmp
ljmp
ret
cld
jbe
imul
pushf
mov
add
jbe
add
push
xchg
mov
sub
jge
into
addb
je
mov
lahf
leave
push
push
clc
mov
inc
add
inc
add
fcmovu
lret
push
pop
sbb
xchg
dec
dec
add
jns
aad
and
add
push
aad
sar
push
mov
rcrb
sbb
inc
and
cld
cmp
mulb
inc
push
lods
inc
lcall
mov
adc
add
mov
iret
jnp
add
test
mov
sub
iret
ds
aam
mov
pop
loopne
clc
adc
aam
inc
clc
inc
add
and
and
inc
add
dec
int3
fiadds
add
jecxz
dec
add
add
push
sahf
sbb
outsb
add
adc
rolb
mov
enter
pop
cmp
add
cmp
loop
lret
loopne
ss
and
mov
mov
mov
in
xchg
sub
xchg
test
mov
jbe
mov
mov
in
ds
xchg
movsl
inc
or
jge
scas
cs
add
xor
mov
mov
hlt
mov
dec
pusha
add
dec
mov
out
stc
dec
call
sub
test
add
sub
lret
or
and
repz
mov
adc
sbb
xchg
mov
jbe
cmpsl
hlt
add
jns
sbb
sbb
sbb
or
push
into
xchg
andl
jnp
shll
xor
lahf
out
jnp
rcr
sub
jb
aam
add
add
push
add
add
ds
adc
cld
fldcw
mov
cmp
add
aaa
loop
add
mov
mov
movsb
push
popl
pop
pop
xchg
dec
loope
bnd
bound
sub
stos
xchg
cmp
and
hlt
jecxz
sub
sub
sbb
add
fstps
add
test
xor
in
test
sbb
mov
jmp
fcmovu
push
orb
xchg
dec
sub
movsl
in
pop
add
loopne
outsl
mov
cmpsb
aam
hlt
out
push
mov
xchg
pop
out
mov
leave
xchg
outsl
dec
arpl
les
cltd
adc
mov
add
jp
out
mov
add
bound
rcrl
sbb
iret
in
in
fbld
jp
and
mov
push
sub
and
data16
cmp
cmp
cmp
das
pop
add
inc
push
add
jmp
sub
lret
jo
insb
add
lret
jmp
mov
or
add
adc
ret
out
pop
jg
icebp
mov
xchg
inc
add
mulb
aad
mov
add
scas
mov
sub
cltd
pop
dec
add
sbb
movsb
jg
sbb
out
testb
adc
push
add
add
jo
mov
add
outsb
sub
add
xor
nop
fwait
mov
add
gs
add
xchg
xchg
rcrb
or
dec
sub
addr16
in
jp
ret
loope
mov
add
fstpl
add
sarl
and
xor
jno
mov
push
pop
popl
add
lods
addl
roll
outsb
push
add
mov
in
mov
pushf
leave
icebp
out
inc
add
mov
sahf
inc
nop
jmp
test
and
mov
into
pop
jno
pusha
add
and
mov
adc
push
lods
xchg
inc
inc
test
adc
outsl
mov
add
sahf
lret
cmpl
mov
aas
add
mov
lods
jnp
aaa
add
sbb
fsts
push
push
jle
add
or
dec
cmp
test
inc
add
xor
lea
push
add
rcrb
scas
mov
add
faddp
sbb
out
mov
jns
push
and
inc
mov
fwait
inc
inc
mov
add
out
fdivrl
xor
repnz
jle
jb
ret
aad
pushf
pusha
add
mov
push
sbb
aas
movl
push
and
adc
cmp
stos
mov
hlt
stos
fstl
stc
mov
add
sbb
mov
push
or
jo
adcl
mov
notb
or
rdtsc
push
add
sub
inc
bound
inc
inc
add
push
ret
inc
adc
aad
push
mov
fisttpl
add
inc
add
je
jbe
scas
int
dec
sbb
pop
inc
xchg
fcoml
shll
add
test
cwtl
cmp
inc
je
repnz
fwait
inc
mov
push
push
aam
add
addr16
mov
add
pushf
ds
add
lock
inc
add
dec
int3
outsb
push
inc
inc
inc
lcall
sub
push
mov
lcall
movb
int3
adc
sub
sti
fs
lahf
aad
add
jb
fcompl
pop
add
popf
movsb
and
lock
ret
jo
pop
cs
add
jne
cmp
mov
or
xor
push
lock
stc
lods
mov
jo
in
xchg
pop
xor
jg
aas
mov
pushf
popf
clc
clc
fs
jl
shll
add
mov
pop
mov
mov
shrb
push
push
add
xor
or
lcall
xchg
rcrb
shrb
lahf
orl
inc
add
cmp
dec
dec
ss
mov
pop
pop
add
ds
or
push
sahf
sahf
xchg
mov
iret
pushf
adc
sbb
cld
ds
and
push
and
imul
mov
stos
cs
aad
add
mov
xchg
sub
test
xchg
loope
xor
pop
push
lahf
addr16
inc
xchg
imul
ret
push
add
nop
je
cmp
mov
mov
pop
push
das
sub
mov
inc
add
idiv
clc
loop
add
jb
mov
mov
xchg
or
add
int
pop
pushf
scas
test
jmp
sbb
mov
popf
loopne
add
xor
rcrb
mov
mov
mov
loop
call
fdivs
fdivs
scas
mov
add
aam
add
jb
sti
cmp
inc
rolb
movsb
and
adc
sbb
lahf
cmp
push
popa
scas
dec
jne
add
je
in
sub
testl
xlat
add
push
aad
cltd
fwait
test
lods
cmp
add
ss
adc
add
sbb
outsl
jnp
add
gs
out
inc
mov
mov
mov
push
sub
pop
add
pushf
jp
or
mov
mov
ret
adc
xchg
xlat
adc
lods
jnp
jecxz
dec
std
mov
fstpl
and
gs
or
push
sub
pop
cmp
in
mov
add
inc
cs
cld
push
aad
notb
outsb
and
insb
add
sbb
xchg
std
leave
lret
mov
pushf
inc
add
insl
cld
push
lods
fsubrs
pusha
add
jge
popa
cmp
adc
data16
push
add
mov
mov
scas
icebp
adc
ss
and
mov
cmp
add
mov
dec
add
add
insl
ja
cmp
mov
xchg
pop
bound
mov
or
mov
add
add
mov
pop
mov
rorl
in
cmp
out
mov
aas
icebp
test
inc
cs
dec
add
push
push
cltd
push
insl
ret
aaa
outsb
sub
pop
sub
and
or
dec
mov
cmc
scas
fidivl
xchg
fldt
add
inc
inc
add
and
jp
pushf
mov
test
adc
ljmp
sub
add
mov
daa
test
add
sahf
push
out
jmp
mov
pusha
add
inc
lahf
mov
enter
aad
jmp
pop
push
add
jo
insb
add
add
imul
insb
add
jmp
outsb
mov
and
iret
dec
pushf
mov
pop
xor
add
int
out
xchg
stos
sti
lea
cwtl
stc
andl
adc
je
xchg
push
in
test
cmpsl
repz
xchg
mov
jmp
xchg
call
lret
in
sub
mov
mov
add
and
add
push
add
dec
add
pop
fcmovne
lea
scas
outsb
pusha
add
data16
mov
daa
ja
outsl
dec
add
jno
jl
stos
out
loopne
jl
inc
jne
insl
push
add
stos
out
les
dec
add
js
jle
in
mov
cmpsl
push
xchg
push
jb
sbb
scas
rcrl
cmp
es
add
mov
mov
mov
pusha
add
icebp
and
or
pushf
int
dec
push
add
xor
push
cmc
push
pop
pop
add
ret
pop
fcompl
pop
jl
into
callw
lret
cwtl
fimuls
add
add
data16
lods
shlb
shrl
dec
add
and
stos
mov
sarl
mov
xchg
jcxz
popa
mov
das
xlat
insl
xor
xor
jne
push
jecxz
mov
idivb
add
jle
lret
jmp
add
mov
or
add
sub
dec
xor
hlt
lock
add
scas
testb
mov
mov
mov
das
andl
mov
rorl
add
xor
fidivl
pop
cltd
addl
xor
push
xor
add
fdivs
mov
sub
cmpsl
add
add
dec
sbb
pop
add
ljmp
movsl
dec
imul
inc
add
nop
jbe
push
mov
mov
loope
xlat
sahf
push
addr16
add
xor
inc
xor
xor
inc
aad
icebp
dec
test
jb
and
fisubrs
les
sbb
iret
jge
pop
add
xchg
xchg
shll
subl
mov
rorb
dec
jno
add
fidivl
add
int3
adc
add
add
movsb
cmp
ficoml
push
xor
xor
pushf
into
inc
popf
or
in
fnstcw
add
jg
push
pop
jge
add
and
in
inc
test
mov
xchg
push
add
add
pop
out
mov
add
out
push
mov
cs
test
mov
add
ja
dec
repnz
stc
mov
shl
jle
loop
add
sbb
pop
fwait
les
nop
pop
add
and
mov
std
xchg
cmp
add
lods
imul
mov
leave
mov
inc
gs
xor
mov
es
ret
cltd
push
pop
fisttpll
push
inc
sub
push
dec
add
loopne
push
mov
les
loope
scas
lret
cmp
in
jno
adc
mov
out
sub
ja
hlt
loope
or
xchg
push
add
jp
test
add
mov
and
pop
mov
adc
push
add
push
push
pusha
add
pop
jl
add
imul
das
aam
inc
add
movsl
mov
and
add
inc
mov
in
pop
addr16
mov
outsl
fisubrs
bound
or
loope
jle
in
push
push
test
dec
add
fistpll
push
les
mov
xchg
jbe
aaa
xchg
adc
dec
mov
add
sub
lods
ret
pop
xor
popf
and
call
stc
stos
xchg
test
fcomi
sub
les
inc
add
das
mov
repz
mov
or
call
push
add
flds
xchg
mov
and
push
add
ss
xchg
mov
les
das
gs
sbb
clc
andl
and
add
xor
stc
rcrl
stc
divl
sbb
mov
sbb
xchg
jbe
add
dec
lret
add
call
rcrl
sbb
pop
add
sub
fnstcw
mov
or
pop
pop
call
sbbl
mov
es
pop
inc
imul
xchg
sub
movsl
js
xchg
cmpsb
aad
push
mov
hlt
ljmp
mov
cmp
inc
sub
cmp
out
ljmp
popa
int
aas
pop
add
push
int
inc
adc
add
xchg
xchg
js
lcall
std
xor
or
mov
cmpsb
adcb
in
pop
sbb
dec
add
and
mov
or
sub
add
jns
cmp
js
dec
pusha
add
add
lret
sbb
cmp
fs
add
pop
add
movsb
lock
mov
ret
sub
jb
shrb
outsb
cltd
jecxz
int3
push
cmpsl
adc
sub
pushf
pop
je
fisubs
jne
aas
push
ficoml
add
sbb
mov
jbe
push
imul
jo
loopne
roll
push
sub
dec
daa
dec
and
int3
mov
ss
mov
imul
xor
stos
jp
int
pop
fmull
rcrb
loope
add
dec
add
pop
inc
add
mov
mov
jns
in
cmp
lods
cmpsl
sub
push
adc
add
push
add
push
inc
fisttpl
sub
sub
jb
mov
mov
ret
rcll
cltd
or
dec
stos
popf
insl
cmp
mov
ds
rcrl
push
jmp
outsb
mov
inc
pop
inc
xchg
xchg
cs
inc
add
je
daa
sarl
mov
loope
leave
sbb
add
jp
mov
xchg
mov
push
add
arpl
sub
mov
inc
add
add
xor
mov
add
mov
and
outsl
add
sub
or
pop
adc
cltd
pop
push
shlb
jo
adc
pop
xchg
cmp
loopne
mov
stos
xchg
add
iret
mov
mov
movsb
mov
pop
aam
fbstp
and
ret
jmp
cmpl
mov
sbb
and
dec
add
mov
xchg
adc
add
pop
add
mov
int
movsb
imul
dec
xchg
push
or
adc
jno
movsl
shlb
add
sub
mov
icebp
clc
push
push
and
pushf
popa
insl
mov
test
xchg
subb
mov
dec
icebp
lods
fldenv
dec
sbbl
hlt
jnp
jns
add
jge
jns
add
lods
cmp
in
fistpl
fistpll
jb
sbb
xchg
in
jp
xchg
out
les
in
in
ret
add
jg
sbb
orb
es
nop
xlat
pop
pushf
mov
lret
ss
js
mov
jne
inc
repz
push
jp
test
pop
push
scas
pop
fisttps
adc
repnz
mov
pop
mov
add
daa
jb
pop
imul
add
adc
or
roll
jbe
outsl
mov
fsubr
push
add
mov
roll
fcmovbe
bound
adc
stc
jg
and
lret
mov
hlt
sub
mov
jp
outsb
or
mov
outsb
arpl
mov
mov
lds
sub
add
push
cmp
push
add
bound
pop
iret
lods
lds
les
xor
imul
dec
mov
mov
mov
aaa
loopne
shl
cmp
mov
daa
cs
cmp
add
cmp
add
mov
lret
add
andl
sarl
add
sar
mov
lock
add
mov
fs
pop
andb
pop
xchg
push
test
shll
insb
add
mov
add
imul
add
rorl
mov
cmp
pop
inc
and
shlb
xchg
pop
in
fwait
shrl
mov
enter
add
mov
imulb
add
jmp
sbb
push
sbb
cmp
add
add
sbb
leave
movsl
sub
pop
xchg
or
stc
mov
add
inc
adc
ja
add
mov
push
dec
add
nop
or
pushf
loope
mov
inc
scas
inc
lahf
xor
xchg
std
lods
sub
add
lcall
or
sub
jp
imul
mov
add
pop
add
jbe
sbb
aas
cmc
sbb
mov
data16
jg
jae
mov
cmp
imul
insl
or
call
fistpll
test
leave
sub
jbe
add
and
js
insl
loop
and
mov
add
cltd
popf
test
cltd
xchg
jl
shlb
sbb
sub
dec
jnp
mov
mov
add
ret
loopne
add
cmp
cmp
popf
mov
pop
add
and
mov
xchg
dec
add
rorl
xchg
decb
add
cmp
mov
push
mov
sub
test
xor
pop
mov
xor
ja
lea
js
pushf
int3
and
jns
add
sub
jno
xor
sub
add
pop
dec
add
add
sub
cmp
push
xorb
bnd
dec
fnstcw
xor
orl
divl
xchg
fdivr
stos
xchg
popf
fcoml
or
rorl
and
pop
xchg
push
xchg
jnp
add
or
add
xchg
in
aam
outsl
sbb
add
xchg
out
out
lahf
xorb
ja
mov
sub
bound
daa
inc
mov
or
pop
cmpsl
push
xchg
mov
je
add
dec
rorb
cmp
bound
ret
push
adc
je
mov
sti
rolb
movsb
sub
and
xor
fildll
clc
cmp
adc
push
inc
add
ja
add
inc
add
test
incb
add
rcll
fwait
out
cmp
mov
or
mov
subb
xchg
mov
aad
ljmp
ret
jne
bound
mov
sub
push
add
test
jb
jb
inc
and
stos
jae
and
xchg
adc
add
jge
add
add
mov
sahf
repnz
rcll
call
lods
sahf
into
hlt
loope
dec
movsl
inc
add
xchg
sub
lock
and
add
mov
add
rcr
loop
jge
dec
fiaddl
add
pusha
add
int
js,pt
lock
xchg
mov
pop
and
jle
pop
dec
inc
pop
push
nop
aaa
pop
jge
jg
adc
cltd
adc
popf
ret
push
cmp
or
inc
push
pop
mov
push
add
out
ja
xchg
pop
lret
lea
add
fcomps
add
cmp
xchg
sub
repnz
cmc
orb
jns
sub
mov
les
or
pop
jg
cmpsl
loope
test
cmc
mov
insb
add
out
dec
imul
inc
dec
add
aam
insb
add
xchg
cwtl
insb
add
pop
add
lcall
pop
add
repz
bound
push
stos
pop
add
xchg
addr16
sub
pop
dec
sub
imul
repz
sbb
imul
scas
enter
xor
sahf
jp
xchg
mov
cmp
incb
dec
or
xlat
lcall
add
pop
pop
jb
sahf
mov
testl
subb
push
mov
add
shr
rol
or
add
or
ja
in
cmp
imul
filds
inc
add
orb
aas
fistpll
add
sub
push
jns
rcrl
xor
sub
jne
cmp
pop
insb
add
xchg
call
xchg
mov
pop
out
add
add
arpl
sbb
mov
mov
dec
sbb
pusha
add
xchg
out
fsubrp
dec
mov
in
push
add
scas
mov
mov
jbe,pt
add
inc
int
pop
ljmp
and
jmp
pop
mov
mov
lock
inc
cmpsb
call
and
jg
scas
repnz
or
fstpt
sub
mov
repnz
inc
imul
int3
xchg
imul
mov
push
add
push
shrl
not
jge
lcall
pop
add
pusha
add
movsb
mov
inc
lcall
clc
jns
rol
add
xchg
xchg
int3
sub
outsl
dec
sub
les
stos
push
out
stos
repnz
and
inc
add
fsts
mov
jne
frstor
xchg
int3
pop
push
movb
ret
int3
push
push
bound
rclb
adc
dec
leave
dec
add
mov
pop
sub
pop
test
mov
jae
cs
imull
xor
pop
fs
sub
cmp
add
jle
adc
pop
sbbl
xchg
movsb
jo
fwait
cmpsb
mov
xchg
adc
sub
xchg
mov
mov
pushl
inc
test
pop
add
seto
push
jnp
mov
jle
inc
mov
dec
add
xor
mov
cmova
pop
je
das
inc
in
push
add
movsb
xrstor
call
sub
dec
scas
fistpll
add
repz
rorb
dec
sbb
lods
mov
adc
add
pushf
pop
mov
xchg
mov
cmp
add
jbe
xchg
add
lret
add
xor
ja
add
xchg
add
test
mov
mov
xchg
and
icebp
test
add
int
ljmp
or
add
fimull
add
mov
in
jmp
push
add
and
add
add
push
jne
add
jne
lock
es
ja
jb
mov
cmpl
mov
adc
cmc
push
sub
pop
cld
jge
mov
jmp
xchg
or
ss
inc
add
in
add
stos
add
pop
hlt
pusha
add
sti
loope
add
fsubr
push
add
imul
sbb
fcomp
int
jecxz
outsb
gs
jp
and
or
add
popf
inc
mov
mov
shrl
dec
add
inc
adc
daa
lock
jae
add
pop
sub
pop
push
and
inc
sub
fwait
push
push
pop
add
dec
xchg
sub
mov
pop
shlb
cmp
jb
add
fucomip
cmp
out
dec
push
push
mov
push
dec
sbb
xlat
fmuls
add
test
add
out
inc
or
mov
and
fsts
nop
xchg
out
or
decl
imul
pop
add
in
dec
inc
inc
add
mov
pop
push
scas
inc
mov
shrb
add
push
adcw
add
pop
jns
sbb
xchg
cmpsb
dec
cwtl
incb
icebp
cld
pop
ficomps
mov
mov
negb
add
sub
sub
lock
push
cmp
xchg
fisttpl
scas
or
ret
int3
test
xchg
fists
adc
push
add
add
mov
mov
stc
or
out
pop
add
sub
sbb
and
andl
add
enter
add
dec
add
mov
xchg
push
add
pop
mov
mov
adcb
xchg
jnp
add
cmp
xor
mov
shr
lret
in
push
lahf
test
mov
mov
dec
add
adc
cli
cmc
add
arpl
pop
dec
test
lods
sahf
jmp
add
mov
xor
outsl
adc
dec
loop
xchg
filds
stos
sbb
cmp
cltd
divb
pop
sbb
push
add
in
cmc
out
adc
int
sub
inc
add
call
lods
fwait
lcall
jecxz
add
push
xchg
lock
fwait
mov
xchg
mov
in
inc
add
daa
insb
add
sbbb
push
aas
pushf
dec
mov
add
jo
add
add
insl
rcrb
sbb
fisubrl
add
iret
and
ficompl
add
and
imul
pop
jp
xor
jl
mov
loopne
xchg
jl
xor
mov
add
andl
lods
lds
mov
pop
push
jl
xchg
pusha
add
lret
sbb
add
out
mov
mov
lock
xchg
into
or
add
and
inc
fidivrs
pop
jecxz
fnsave
idivl
adc
ljmp
or
push
push
sub
jae
inc
out
outsl
int3
stos
jp
test
dec
dec
jno
jecxz
or
shlb
cmp
fsubs
add
lahf
stos
mov
rcrl
cmc
jg
cmpsb
pop
add
cs
xchg
adc
inc
add
lods
bound
xor
mov
mov
mov
jno
xorl
ret
mov
add
stc
and
sbb
mov
pop
push
push
add
testb
add
sahf
xor
rol
add
sarb
mov
or
cmp
mov
jnp
cmp
dec
lock
mov
add
lds
fnstsw
call
ss
mov
sub
xchg
xchg
test
xchg
push
adc
loope
ljmp
add
mov
ja
insb
add
imul
rcrl
mov
inc
bound
jp
lahf
jbe
lcall
roll
dec
or
ret
sbbb
je
sub
or
dec
sub
xor
add
jbe
scas
xchg
pusha
add
fists
add
mov
inc
fnstsw
fcomip
mov
in
fwait
sub
add
cmpsl
sub
daa
scas
icebp
sbb
test
cmp
lock
pusha
add
xchg
add
pop
enter
mov
xor
dec
add
daa
sub
xor
add
scas
cmp
in
add
lret
and
jmp
jae
aaa
loop
cld
decb
push
add
je
mov
xchg
mov
aad
xchg
mov
scas
mov
add
adc
or
addr16
dec
sbb
nop
mov
sub
cmpsl
stos
sahf
push
add
inc
add
mov
dec
fdivl
je
add
loopne
cli
xchg
into
sti
mov
std
cwtl
addr16
int3
lds
jnp
pop
mull
sbb
pop
mov
add
sub
js
js
jmp
add
out
jo
es
mov
movsl
stos
dec
mov
sti
or
rorb
dec
or
cmp
test
cmpsl
pusha
add
pop
lahf
jbe
sbb
fistpl
rclb
cld
arpl
aaa
pop
stos
xchg
lret
jl
ror
add
dec
in
in
orb
pop
fistps
sub
test
pusha
add
mov
aad
ljmp
inc
repnz
pop
mov
dec
add
call
loop
icebp
mov
cli
push
jg
inc
add
dec
add
add
mov
add
cmc
fdivrl
add
dec
add
insb
add
loopne
inc
add
sub
add
addr16
andl
jg
outsl
jo
add
sbb
mov
push
add
pop
fs
add
clc
add
insl
pop
rsm
mov
sti
mov
fs
xchg
lds
popa
data16
or
add
lret
adc
jne
dec
lock
ficoml
add
inc
add
jae
xchg
adc
iret
and
cltd
mov
and
add
fsubrl
add
subps
rorb
dec
out
push
mov
add
sbb
cmp
pop
inc
add
add
or
das
popa
cmc
fwait
pmuludq
int3
mov
imul
leave
addr16
inc
idivb
out
mull
mov
and
cli
ror
push
enter
jecxz
jmp
icebp
enter
add
mov
ficoml
add
test
add
lods
push
sti
daa
xor
mov
add
sbb
xchg
jmp
mov
outsb
xchg
mov
clc
xor
adc
dec
bound
aad
add
les
gs
and
push
pop
add
loope
aam
pop
add
mov
adc
and
add
das
mov
pop
mov
push
jae
sbb
xchg
cmp
aad
pusha
add
stos
xchg
gs
and
clc
lret
mov
lcall
jge
test
xchg
popf
mov
push
push
jg
rorb
in
ficompl
sub
cmp
ret
push
inc
add
mov
jmp
mov
pushf
stc
in
or
jns
les
dec
test
leave
shl
pop
pop
in
inc
add
int
dec
and
es
add
add
xlat
fcmovu
jg
dec
add
adc
ret
dec
push
fwait
sbb
pop
inc
add
sar
into
inc
cld
loopne
add
in
in
in
add
ljmp
popf
pusha
add
or
jns
xor
movsb
lea
cld
fnstenv
lret
mov
sub
push
push
mov
push
jmp
push
push
cmpsb
mov
inc
pop
ret
imul
into
lahf
and
mov
dec
add
lock
add
pop
add
fucomp
cli
lods
lods
jle
pop
mov
lahf
imul
push
aad
xchg
in
lret
xor
mov
popa
enter
push
and
mov
test
cmp
cld
xchg
dec
test
sbb
lock
cmc
mov
add
add
push
jb
ja
jp
add
cmpsl
adc
add
paddw
push
leave
sbb
divl
add
sarl
test
jge
mov
test
inc
cmpsb
std
aas
pop
jge
std
fdivr
aad
xchg
mov
iret
jmp
push
rcr
pop
add
std
push
movsl
fldenv
andl
sbb
in
sub
pop
stc
int3
ret
rorl
add
adc
add
sbb
fstpt
mov
dec
mov
inc
add
mov
out
adcl
mov
pop
adc
addl
out
cmpl
outsl
dec
dec
or
add
dec
clc
addr16
outsl
push
add
out
fisubrs
lahf
fucom
jbe
imul
adc
lahf
pop
add
int
add
push
fwait
loopne
pop
mov
sar
fcmovne
push
xor
sbb
dec
cmp
notb
jno
xchg
scas
rolb
mov
push
or
aas
lods
sbbl
mov
sub
xchg
repz
pop
ret
mov
add
ds
cs
adc
fnstenv
add
out
jmp
pop
add
pop
add
test
mov
mov
add
pop
inc
add
dec
add
data16
fsubs
add
inc
xorl
xchg
cmp
or
out
cmc
pop
jle
add
sbb
add
and
lret
sub
add
push
add
iret
sbb
fists
mov
sub
push
mov
std
stos
sbb
jp
add
std
mov
aaa
mov
pop
fs
mov
cmp
pop
xor
popf
ja
int
inc
add
push
stos
jns
fisubs
ljmp
xchg
xchg
out
jae
mov
push
pop
jnp
ror
in
jmp
lcall
inc
cmpsb
jne
add
sti
xchg
jno
sub
cmpb
add
adc
add
sbb
cmp
test
ljmp
sbb
rcll
stos
cwtl
loope
push
idivl
loop
and
arpl
add
js
pop
int3
aad
mov
jecxz
sahf
idivb
add
cmp
add
push
fwait
sub
dec
and
sub
and
insb
add
out
mov
add
test
mov
out
push
or
faddl
hlt
push
mov
test
insb
add
dec
push
add
dec
add
mov
add
call
movsl
jae
dec
int3
adc
xor
les
int
pop
add
int3
mov
jnp
ret
jg
pop
add
stc
cwtl
xor
xor
test
jle
inc
imulb
out
cltd
int
sub
scas
adcl
lods
cmp
ret
lods
leave
jne
mov
imul
movsl
mull
js
dec
rorl
xlat
cs
fists
and
fcmovbe
xor
or
xchg
push
lcall
sub
mov
jns
or
das
scas
les
xchg
nop
mov
add
in
xchg
mov
in
or
add
jns
aaa
pop
add
cs
testb
mov
scas
sub
or
add
pop
movsb
sti
xlat
loope
out
outsb
lods
adc
dec
movsb
aas
or
push
mov
adc
push
add
rcrb
inc
je
cmp
pop
xor
out
stc
int
mov
add
pop
lea
pop
mov
add
lods
leave
cmc
jmp
roll
int3
mov
jae
sub
or
clc
insl
repnz
scas
push
add
pop
mov
mov
lret
outsb
pop
jg
add
lods
mov
ds
fs
dec
insl
jge
movsb
adc
in
dec
dec
add
add
fldl
shll
add
dec
ss
repnz
add
shl
lods
stos
cmc
pop
popa
test
xchg
adc
jae
or
xchg
stos
push
movsl
imul
and
add
add
mov
or
dec
sarl
sbb
leave
iret
xor
fsubrp
adc
enter
outsl
mov
hlt
flds
mov
out
mov
jl
cmpsl
xchg
sbb
mov
mov
mov
add
and
and
out
add
sbb
sub
dec
icebp
outsl
and
and
test
pop
add
pop
stc
and
mov
push
mov
cli
push
add
or
sahf
or
popf
ja
sbb
cmp
shrb
std
sbb
pusha
add
mov
mov
add
loope
shl
addl
call
xlat
cmp
pop
sbb
daa
or
jnp
call
inc
hlt
aam
cmp
lea
add
adc
lock
fidivl
pop
ffreep
xchg
insb
add
add
add
add
sbb
inc
add
mov
mov
pop
test
add
add
cmp
aas
xchg
push
aas
nop
jnp
movsb
push
int3
push
data16
add
mov
add
inc
push
add
dec
mov
add
pusha
add
add
add
js
jp
add
mov
inc
add
lcall
cmpsb
or
into
push
aas
xchg
dec
dec
sub
insl
or
mov
adc
cli
inc
mov
cmpsb
in
dec
push
add
sbb
sub
inc
add
ss
js
fstps
mov
loope
add
cmp
rcrl
add
pop
and
mov
inc
scas
add
je
sbb
ret
jmp
pop
gs
mov
cwtl
rolb
jl
jns
ret
aaa
fnstenv
jo
jge
loop
addr16
jl
outsb
icebp
in
xchg
adc
and
mov
stc
pop
jnp
bound
add
mov
dec
jl
movsb
jns
add
insl
mov
js
adc
add
cwtl
mov
fdivrs
inc
mov
orb
into
pop
es
mov
les
add
jmp
int
leave
or
aad
adc
dec
mov
inc
dec
xchg
push
rclb
pop
pop
push
repnz
mov
add
sbb
mov
lock
rorb
lcall
add
iret
inc
add
repz
or
add
jns
add
add
jnp
sub
dec
add
bound
aas
xor
add
add
mov
rorl
dec
insb
add
xchg
das
and
cltd
nop
mov
out
ja
call
dec
sbb
out
cli
sti
xor
and
lods
in
mov
add
popa
test
push
add
mov
mov
mov
out
add
aam
nop
mov
and
mov
or
movsl
clc
push
jnp
mov
add
adc
add
xor
sbb
dec
sub
addl
mov
loop
sub
inc
es
pop
sub
cmc
es
rolb
and
jge
cld
pop
addr16
jns
xchg
and
add
or
add
add
je
or
mov
mov
add
cwtl
add
int
test
imul
add
jmp
ljmp
jecxz
mov
mov
stos
lods
dec
mov
add
loop
mov
js
std
mov
in
sbb
add
push
jns
rcll
mov
add
fld
dec
add
adc
cmpsl
and
daa
imul
in
add
xor
sbb
mov
fdivs
jmp
dec
inc
xchg
jmp
movsb
jno
lahf
xlat
test
add
sub
fld
fimuls
stos
pop
std
scas
cmpsl
nop
dec
adc
cmp
jge
push
jge
add
decl
add
ret
hlt
sbb
sti
pushf
jb
hlt
in
mov
or
dec
sbb
out
ss
pop
jmp
add
popf
pop
adc
inc
jns
add
adc
add
pop
inc
cmc
lcall
mov
or
add
addl
cltd
sarb
rolb
mov
mov
sub
mov
fdiv
jnp
jbe
mov
int
mov
lahf
mov
lahf
hlt
adc
imul
mov
add
sbb
sti
dec
add
lret
add
sub
out
push
in
aam
iret
jmp
cli
nop
aad
sahf
mov
cmp
or
addl
add
add
scas
addr16
add
push
shl
add
imul
imul
cld
mov
sbb
cmpsl
cltd
jae
lods
and
int3
and
xchg
push
arpl
ret
push
daa
sub
dec
add
insb
add
in
js
repz
adc
std
divb
sbb
add
pop
add
loope
adc
dec
add
push
mov
inc
add
mov
rorl
cmpsb
xor
imul
mov
jbe
ret
cmp
xchg
xchg
add
sbb
sarl
xor
jl
icebp
lock
fistpll
mov
pop
fcmovnu
cwtl
int
add
cmp
lcall
cli
push
repz
and
test
and
scas
adc
ljmp
insb
add
add
mov
popa
mov
out
das
push
sarb
jl
or
dec
add
dec
dec
add
ffreep
dec
sub
sbb
or
and
dec
add
mov
adc
lret
sahf
push
lods
ja
add
mov
add
pop
aad
mov
notb
mov
mov
and
lcall
dec
fisubrs
es
lock
pusha
add
rclb
cmp
cwtl
fsubrs
push
mov
cltd
push
jle
xchg
xchg
daa
jle
mov
push
pop
dec
dec
add
xchg
and
cmp
mov
daa
dec
fildl
mov
dec
into
lods
decl
ss
jle
add
add
inc
jnp
add
test
enter
mov
shrl
push
cmc
in
out
icebp
shll
add
scas
inc
sub
inc
cmc
xor
adc
lret
idivl
add
shrb
or
lret
add
dec
or
jl
sarb
jmp
lock
and
push
add
sar
xor
iret
rol
xchg
imul
aas
cmp
push
lods
mov
sbb
push
jne
mov
cli
cmp
sub
pop
xor
push
push
out
repz
add
cli
xchg
push
add
mov
shll
sbb
inc
add
loope
push
inc
mov
clc
out
imul
mov
add
add
in
mov
jno
shll
scas
pop
add
add
jmp
add
add
popf
pop
or
push
add
mov
add
daa
inc
mov
decb
push
jmp
mov
test
jecxz
into
sar
fsubl
xor
xchg
mov
mov
fadds
cmp
sbb
in
push
rcrb
add
push
add
xchg
subl
aaa
mov
xor
lea
lock
sub
xor
jle
xchg
xchg
subl
in
mov
fsubrs
lahf
pop
add
fdiv
and
sbb
cltd
adc
xchg
jae
add
and
add
cmp
lock
inc
add
add
lock
lret
pop
insl
mov
sbb
stos
jnp
pop
inc
ss
and
pusha
add
rorb
add
inc
xor
lcall
add
adc
addl
xor
or
add
xor
pop
add
das
or
mov
add
scas
test
xchg
mov
push
repz
push
cmp
add
mov
adc
mov
fwait
push
push
idivl
cmp
add
sub
adc
push
and
stc
and
mov
addr16
lahf
inc
add
sub
ljmp
in
test
sub
in
enter
inc
in
dec
dec
add
cmp
cld
shrl
sub
in
mov
sbb
xchg
pop
popa
fs
push
nop
mov
xchg
dec
inc
xchg
test
jle
jl
adc
push
and
mov
cmp
xchg
subb
scas
lods
ret
dec
sbb
cmpsl
jno
pop
sbb
fnstsw
out
add
pushf
rorb
add
mov
mov
sahf
pop
add
jecxz
add
cwtl
xchg
jp
pop
push
add
cld
fmull
mov
cmpsl
sbb
add
ret
lods
xchg
jnp
add
pushf
ljmp
push
and
pop
add
add
adc
cwtl
shlb
mov
frstor
adc
sbb
sti
jne
gs
add
fwait
mov
test
scas
xchg
add
out
mov
test
adc
insb
add
add
xchg
leave
or
add
pop
add
sahf
xchg
pop
inc
loope
scas
xor
cld
adc
test
dec
lds
add
fsubp
jae
cmpl
sub
dec
out
rcrb
dec
cmpsl
cmp
add
mov
mov
xor
pop
xor
add
xchg
aas
jle
and
add
xchg
inc
add
push
add
or
shlb
xor
push
add
add
ss
cmc
clc
sub
push
add
xor
lea
cli
inc
add
add
xchg
xchg
in
dec
cmp
pushf
cltd
push
or
add
add
push
jno
jb
add
and
js
in
cmc
stos
sbb
aad
inc
sbb
lret
jmp
loopne
add
jno
xchg
hlt
xchg
mov
mov
mov
dec
add
pop
xchg
cmp
push
jnp
cmp
mov
adc
jns
ret
in
push
pop
cmpsl
push
adc
push
test
jmp
data16
jp
inc
and
jne
mov
pop
add
lock
bound
push
rcl
dec
roll
repz
mov
int3
or
jae
in
and
addr16
dec
push
adc
jo
sbb
dec
lods
xchg
xchg
leave
scas
icebp
into
pop
add
movups
mov
lahf
lea
gs
sti
jb
add
pop
push
in
pop
add
add
cmp
lods
and
cmp
lds
or
cwtl
ljmp
enter
add
mov
fistpl
movsb
cli
xchg
or
sbb
mov
xor
xchg
add
xchg
adc
cmp
pop
jp
hlt
sbb
scas
xchg
xchg
adc
lds
pop
lock
add
mov
pusha
add
sbb
push
test
lods
jmp
jp
add
add
fcoml
test
jmp
daa
lods
xor
sub
sub
add
mov
and
xor
xchg
les
mov
dec
add
nopl
push
dec
add
push
imul
lcall
xchg
int3
xor
repz
cmpl
data16
mov
lret
mov
dec
cmpxchg
enter
icebp
mov
test
imul
add
addr16
cmp
xchg
add
loopne
stos
xor
cwtl
imul
outsb
mov
push
add
xor
mov
fstpt
jne
addl
fcmovne
xchg
inc
les
add
mov
fld
pop
add
mov
sub
push
add
dec
in
add
inc
sarl
cmp
test
mov
test
adc
imul
add
sti
pop
xor
fstl
or
push
mov
decb
add
test
cwtl
fstl
add
out
movsb
cmc
sarb
add
sbbb
aam
sahf
push
cmp
add
das
pop
sub
sti
iret
cmp
mov
lods
nop
out
push
sbb
lret
add
jmp
mov
push
adc
push
jbe
add
and
sub
testb
gs
mov
push
sub
insl
or
jp
out
jg
cmp
sahf
and
sti
pop
test
ret
mov
add
adc
movsb
jbe
daa
pusha
add
sbb
fcompl
das
cmp
xchg
xchg
mov
inc
sbb
js
fistpl
rorb
inc
mov
pop
fmull
fmul
cmc
cmp
add
mov
xor
add
push
lcall
ljmp
xor
in
loope
jno
fucomi
pushf
scas
shll
mov
out
jg
adc
sbb
push
ret
or
filds
add
arpl
adc
in
pop
add
cmp
movl
loopne
adc
inc
cmp
jle
pop
add
pusha
add
popa
mov
sub
test
bound
sar
insb
add
outsb
xor
mov
std
adcb
sub
sub
dec
mov
ss
xchg
test
cmp
adc
xor
add
cmc
out
jae
adc
imul
add
sbb
lea
sub
lock
push
das
dec
add
movsl
insl
sbb
mov
jo
stos
sub
cltd
scas
push
xchg
lods
loope
je
push
fdiv
xchg
push
add
aad
std
xchg
dec
cwtl
movsl
xchg
xchg
sbb
mov
add
test
pop
out
shl
shl
mov
ret
shlb
mov
jmp
add
scas
mov
add
movsl
out
jnp
cmp
aas
mov
rol
andb
push
add
mov
add
inc
mov
jae
shlb
xlat
test
sti
clc
outsl
addr16
lods
jne
mov
je
jnp
mov
sbb
dec
cmp
jl
add
add
dec
sarb
mov
repnz
mov
popa
mov
push
cld
je
sub
adc
add
push
add
jge
jns
int
dec
sbb
pop
lahf
pop
add
add
mov
pusha
add
loop
dec
aas
jecxz
add
and
lods
push
add
sbb
mov
clc
minps
das
daa
imul
stos
push
add
andl
dec
sub
outsl
sub
mov
push
fwait
or
insl
negl
adc
lcall
add
lret
mov
arpl
sbb
cmp
movsl
pop
cmp
adc
ret
add
imul
test
add
mov
in
shll
xor
insl
stc
fcmovbe
cmpb
add
add
aas
test
add
fcmovnbe
enter
add
add
xchg
mov
mov
mov
dec
sbb
xor
test
into
xor
or
or
add
cmpsb
loope
add
test
rolb
add
jns
lods
loop
les
add
mov
aam
ss
cmp
cmp
bound
std
sti
pop
xchg
pop
dec
xchg
pop
add
shlb
lods
add
dec
imul
shlb
fwait
mov
cwtl
push
repz
push
or
pop
cld
cli
test
stos
push
adc
jecxz
fistps
addr16
bnd
lods
lock
or
add
inc
dec
mov
mov
add
test
or
clc
add
add
jno
lcall
out
add
cld
mov
jae
cmpb
iret
mov
loop
sub
test
add
int
inc
fists
push
ljmp
lcall
out
das
push
cmp
add
out
je
mov
mov
call
nop
movsl
mov
cmpsb
mov
aas
jp
add
fwait
ljmp
lds
fdivs
xchg
mov
jae
add
mov
push
pmovmskb
js
adc
orps
add
add
jp
and
je
ss
add
adcl
or
imul
daa
fmuls
lds
dec
add
sti
jnp
pop
loop
push
add
rcll
daa
or
jns
cmp
pop
jmp
sub
ljmp
dec
shrl
aas
andnps
push
xor
jae
leave
xor
mov
add
nop
and
sti
inc
add
fisubl
xchg
jns
ret
repz
pop
xor
lret
aam
movsl
mov
sub
enter
push
aam
inc
add
mov
orb
xchg
insl
stos
push
xor
in
je
fimull
aas
shrl
fldl
adc
dec
neg
lahf
xchg
push
pop
or
add
js
outsl
jge
fisubrl
add
mov
stos
and
push
lds
xchg
jbe
mov
cmpb
sub
xchg
in
jmp
pop
add
or
dec
fnsave
bound
sub
scas
push
xchg
scas
roll
add
xchg
pop
add
add
pop
sbb
sti
add
mov
cwtl
arpl
lret
push
add
pop
mov
imul
cmc
xor
int3
jmp
gs
pop
loop
ja
adc
jno
je
rcl
adc
pop
leave
push
add
add
out
fimuls
xlat
xchg
add
aas
add
loop
push
add
das
int
xchg
xor
test
ds
pop
dec
or
jmp
leave
push
mov
in
test
icebp
sub
pusha
add
xchg
or
and
or
faddl
cli
lea
in
mov
push
add
sub
xor
cmc
mov
jb
repz
pop
shrb
movsl
loopne
add
add
pushf
pop
add
lds
in
fldl
cs
mov
pop
push
add
add
testl
loopne
cmp
divl
push
out
mov
dec
add
inc
xchg
imul
stos
push
rcl
jmp
insl
in
stc
sbb
loope
push
in
cmp
aaa
dec
pop
ljmp
fldenv
sub
dec
mov
roll
push
out
pop
mov
mov
mov
xchg
sbb
movsb
pusha
add
movsl
mov
add
das
testl
add
mov
push
stc
xchg
lret
addr16
fwait
cmp
int3
jae
ljmp
and
lods
cmp
push
sbb
fcmovnbe
adc
outsb
outsl
leave
mov
cmpsb
pop
aad
sub
push
ret
clc
adc
add
jl
jmp
mov
pop
js
add
shrb
arpl
data16
cmp
ljmp
adc
mov
sub
add
cmp
mov
sub
aam
out
push
out
jae
add
out
cmc
shr
ret
enter
dec
mov
arpl
mov
xchg
sbb
dec
int
lea
push
stos
mov
cmc
popf
xor
dec
add
add
adc
pop
arpl
xor
mov
iret
xor
fstpl
xor
xor
sub
add
cmpsl
or
shr
mov
pop
add
pushf
popl
addr16
repz
lock
xchg
call
and
insw
rcl
add
mov
fsubrs
fsts
ss
push
idivl
add
mov
cs
push
add
add
add
jle
jb
cmp
xor
dec
push
fistps
add
mov
in
inc
push
dec
cmp
repz
mov
cmp
inc
cmp
cmp
mov
add
outsb
inc
pop
jp
jle
inc
push
cmp
ret
iret
ds
dec
ja
inc
add
jb
add
cmp
jbe
insb
add
add
mov
lds
sbb
call
pop
movsb
idivb
int3
out
aam
add
sti
adc
pop
mov
fidivs
add
add
push
aam
jns
mov
and
fs
cltd
in
add
es
gs
jns
shrb
test
inc
cwtl
ret
add
loop
cmp
mov
adc
lcall
fcmovnb
addr16
mov
fs
into
mov
push
in
jae
sbb
push
mov
test
fucomip
cmpsl
lods
mov
ljmp
jne
xchg
adc
addr16
or
or
xor
push
out
xorb
repz
shl
jmp
add
add
add
jmp
rclb
or
dec
add
sub
cmc
sbb
cwtl
inc
sti
sub
js
xchg
ud1
pop
decl
shrl
bound
sub
push
movsb
xchg
popf
lods
pop
add
ret
cmpb
dec
daa
cmp
test
fistpl
popa
adcb
fstl
add
mov
movsb
out
add
test
repz
cmp
xor
sub
les
cmpsb
jg
dec
fwait
shl
in
inc
in
sbb
mov
call
adc
adc
dec
scas
inc
or
push
js
mov
xchg
addr16
jne
rclb
add
mov
cmp
fs
cmpsb
outsl
sbb
cwtl
mov
ret
add
mov
es
imul
dec
mov
lret
shrb
add
dec
insl
mov
sbbb
hlt
push
inc
cmp
and
sahf
dec
adc
push
pop
std
aad
add
jo
dec
sbb
popa
int3
pop
test
jbe
out
repz
stos
cmp
push
inc
add
lods
adc
in
add
add
jns
add
add
sub
jle
mov
daa
add
pop
in
dec
mov
int3
dec
add
inc
add
mov
dec
and
mov
push
mov
loop
imul
pop
insl
cmp
xchg
sti
cmpl
pop
mov
add
out
pop
add
inc
push
pop
scas
jg
inc
int3
mov
jbe
imul
lcall
xorl
pushf
sbb
add
push
fsts
add
jae
or
mov
jb
add
add
testb
ret
mov
pop
insl
test
mov
add
mov
icebp
pop
add
or
lods
jle
cmc
xor
pop
int3
imul
pop
add
adc
data16
jecxz
idivl
inc
outsb
cmp
adc
cmp
movl
cwtl
add
out
popa
cmpsl
ja
icebp
lods
jg
mov
sub
pushf
xor
shrl
ret
xchg
imul
lds
add
popf
or
sahf
jle
hlt
jo
sub
sbb
sbb
inc
cmpsb
fmull
lds
loop
gs
into
xchg
hlt
xchg
dec
test
es
enter
lds
add
ja
cmp
jge
sub
xchg
sub
into
mov
and
add
sbb
add
rcl
stos
sub
inc
add
xor
dec
cmpsb
clc
jb
jne
cmpsl
leave
pop
inc
add
mov
add
add
pop
or
add
xor
icebp
test
add
adc
rcrl
les
push
jne
test
jmp
jo
insl
inc
ret
jns
add
clc
sub
push
cld
add
cld
push
cs
pop
mov
cmp
jmp
mov
adc
fxch
jo
aas
fsubrl
or
mov
push
add
pushf
loop
sar
cmp
mov
ret
sub
adcl
jo
sub
inc
mov
jmp
cmp
xchg
mov
loopne
add
push
mov
loope
jmp
jg
sbb
in
add
lods
push
cmp
cmpsl
inc
out
add
add
mov
loope
add
jge
ret
xchg
xchg
add
movsl
cmp
scas
push
xchg
xor
push
in
push
vpsraw
and
jmp
fisubrl
xchg
inc
add
int3
adcb
inc
mov
ficoms
pop
std
cmc
mov
add
cmp
mov
sbb
jnp
jl
inc
add
lds
add
fsubr
xchg
or
ret
iret
push
dec
add
mov
test
cltd
xor
pop
add
mov
fcmovnbe
or
push
mov
add
xchg
pop
add
js
mov
test
test
add
jle
add
pushf
jp
or
xor
pop
leave
mov
cli
and
cmc
jb
mov
jl
imul
mov
fstpl
cmp
push
inc
adc
insb
add
fildll
mov
inc
push
fbld
and
dec
jae
rcrl
cmpb
test
add
cwtl
call
xchg
sub
push
out
shll
sub
xchg
pusha
add
lods
jb
lret
test
add
gs
or
inc
rol
jp
clc
dec
push
adc
mov
lea
hlt
dec
add
in
idivl
add
sahf
sub
jl
sbb
popf
pushf
mov
in
mov
add
in
sub
repz
xchg
into
sbb
lock
rorl
add
repnz
fisttpl
add
cmp
adc
sbbl
adc
sub
ja
xchg
mov
cwtl
sbb
mov
mov
jecxz
cltd
in
popf
sub
push
imul
loope
add
add
scas
or
mov
sbbb
mov
cmp
mov
ss
ret
jne
fdivl
adc
mov
mov
stc
cmp
inc
add
sbb
in
jmp
mov
data16
adc
in
sub
hlt
jno
add
add
outsl
js
aas
xor
inc
cmpsl
lea
pop
iret
sub
push
add
je
aam
cmp
lahf
int
std
and
mov
add
fnsave
je
sub
dec
dec
mov
add
enter
bswap
aas
pop
aad
mov
adc
mov
or
inc
jo
mov
add
iret
push
add
pop
fidivrl
cwtl
adc
lret
pop
mov
add
addr16
in
lahf
and
inc
cmpb
dec
add
test
xchg
fidivs
xor
mov
add
jo
pop
loope
jecxz
dec
add
add
and
jns
rorl
in
push
cmp
lods
mov
stos
lods
xchg
ficoml
sub
pop
pop
adc
out
das
push
rcl
rcll
aam
sub
mov
sub
das
push
int
add
popa
test
dec
cmp
fcmovnb
pop
outsl
sahf
or
mov
test
cmp
add
push
shll
fidivs
adc
aas
lret
in
rcl
or
mov
add
cltd
je
xor
int3
xchg
mov
inc
int3
iret
int
scas
xchg
xor
pop
unpcklps
je
add
push
adc
lock
fsubl
mov
add
mov
xchg
std
iret
lret
imul
add
data16
mov
inc
add
in
add
mov
add
add
das
sbb
hlt
xchg
das
add
lret
sub
imul
add
in
lahf
xor
dec
sbb
pushf
mov
and
gs
jg
movsb
test
pusha
add
insl
ret
push
adc
iret
aas
lods
insl
adc
stos
std
sahf
enter
int3
fsubs
cmp
popa
dec
add
xchg
mov
sbb
mov
xchg
xor
push
outsb
push
into
mov
inc
pushf
cli
ret
std
mov
dec
dec
xchg
test
push
add
push
aad
stos
fnsave
mov
mov
add
jl
push
sub
insl
cmp
mov
cmp
sbb
nop
add
lret
add
xchg
stos
fidivrs
add
jbe
jmp
jp
pop
add
mov
add
bound
ss
mov
add
pop
push
mov
add
fistl
add
inc
ljmp
movsl
mov
add
sbb
add
repz
fistpl
mov
xchg
repnz
push
add
cwtl
lea
cwtl
das
out
hlt
mov
fcoms
in
inc
in
or
adc
xor
nop
adc
mov
imul
push
je
or
pop
add
adc
mov
add
add
popf
sbb
inc
mov
add
push
test
sbb
push
sti
imul
pop
aas
int
cmp
mulb
fldcw
pop
cmp
inc
add
adc
sub
fwait
cs
mov
and
pop
push
loope
lret
ds
add
in
insb
add
pop
add
adc
mov
and
cmpsl
and
fiaddl
outsl
cli
mov
je
or
lds
add
lods
lcall
add
arpl
xor
dec
data16
mov
stc
cmc
cmp
and
leave
call
pop
jmp
mov
jecxz
pusha
add
mov
cmpsl
int3
push
aaa
adc
push
xchg
inc
mov
sbb
sbb
add
adc
add
jns
out
fbld
lock
add
cmp
mov
pop
mov
add
inc
adc
add
jb
add
add
cmpsl
lock
out
repnz
inc
les
dec
test
jne
xor
std
test
dec
sbb
stos
push
lret
gs
test
add
mov
add
mov
in
ds
add
cmp
xor
add
inc
pop
adc
test
xor
pop
add
add
iret
hlt
gs
fcomps
add
add
ja
add
xchg
movsb
sub
mov
cltd
jbe
push
add
adc
enter
inc
fists
push
iret
xor
fsubrl
cmp
dec
add
sahf
inc
dec
sub
insl
mov
out
or
pop
add
add
lret
mov
and
mov
jp
dec
add
pop
insb
add
aaa
pop
xchg
fcomi
or
xor
push
add
fcomp
jg
mov
js
adc
mov
lahf
movsl
mov
imul
and
cmp
or
jp
add
add
rcl
fcomp
call
and
fidivl
mov
xchg
and
fidivrl
jge
mov
hlt
imul
or
fldenv
sbb
adc
add
mov
clc
add
or
mov
mov
int3
pushl
add
push
fwait
and
cmp
in
jecxz
sub
lods
dec
push
loope
inc
add
test
aas
in
push
and
mov
nop
cs
cmpsb
test
push
and
sbb
lods
into
aaa
movsb
idivb
and
in
inc
loop
lods
out
cwtl
mov
add
cmpsb
rorl
ja
add
nop
pop
mov
and
nop
call
imul
ret
not
adc
sbb
mov
in
pop
ret
js
adc
dec
add
pop
jnp
cmp
test
inc
add
add
aaa
stc
out
xchg
jecxz
sbbl
cmp
dec
push
lea
jmp
adc
pop
add
push
or
xchg
xchg
rcl
push
pop
dec
add
jge
xor
movsl
sub
filds
fldenv
enter
mov
stc
mov
adc
cmc
arpl
adc
pop
sbb
fwait
sub
and
jp
in
in
cmp
xchg
cmp
int3
push
sbb
es
outsb
sahf
scas
mov
jne
push
js
sub
mov
test
add
loopne
add
out
inc
cli
push
sbb
mov
stc
sbb
fistl
icebp
mov
movsl
add
mulb
pop
or
or
and
movsl
es
xor
sarl
jne
adc
cmc
out
inc
fldl
xchg
add
mov
pop
les
add
test
jb
add
orl
jle
lock
inc
add
push
xchg
in
lahf
popf
jp
pop
or
in
mov
sbb
pop
jb
dec
out
lds
adc
cmp
xor
sbb
xchg
or
xor
add
add
xlat
jp
pusha
add
mov
lock
cld
into
dec
and
jl
mov
jne
or
and
fistpl
add
icebp
idivb
or
jnp
xchg
ss
add
mov
pop
mov
add
xchg
pop
pop
mov
pop
add
mov
ret
aaa
push
es
add
add
lea
add
mov
lods
sbb
lock
xorl
adc
lahf
add
das
push
push
popf
leave
dec
sub
inc
add
and
orl
mov
in
xor
dec
mov
sub
mov
xlat
jge
xchg
mov
jecxz
ret
cmp
rclb
mov
pushf
add
nop
into
enter
add
std
int
aad
sbb
out
scas
inc
mov
push
add
test
add
cli
inc
mul
stos
sub
cmp
js
cmp
add
pusha
add
push
add
dec
mov
mov
into
test
sbb
or
mov
add
iret
int
pop
pop
add
adc
sub
add
dec
movsb
popa
lds
sub
and
negl
fdivp
mov
and
pop
lods
inc
aad
add
inc
mov
aam
xchg
cs
inc
adc
rcll
xchg
loop
stos
sub
dec
cmpsb
int
test
mov
and
adc
sub
sbb
rcrb
xor
pop
flds
pop
cs
sub
push
jb
add
dec
enter
and
pop
add
std
add
sbb
add
add
fsubl
fdivl
jae
lods
idivl
das
add
leave
xlat
jae
rol
out
loop
add
or
mov
xor
adc
shrb
cmp
cmp
notb
ficompl
sti
add
add
add
lret
repz
nop
sbb
mov
sub
rolb
stos
pop
cwtl
cltd
lods
mov
cmp
push
add
out
sbb
leave
xor
xor
mov
pop
or
add
rcll
test
insl
inc
mov
add
fidivrl
add
out
mov
popa
in
js
mov
pop
mov
add
cmp
inc
add
add
add
add
add
cld
fs
fistpll
fwait
test
pop
mov
loopne
add
mov
add
add
lea
rcrb
in
aas
pop
insl
ds
mov
add
jge
adc
jmp
js
add
xor
out
or
aam
das
rol
add
out
add
pop
push
sar
add
in
jecxz
jns
add
add
xor
mov
or
lcall
icebp
shl
push
mov
shlb
sahf
dec
stc
shlb
adc
mov
jp
loop
data16
arpl
jbe
out
push
push
ret
xchg
inc
push
popa
mov
mov
data16
xchg
rorb
sub
jo
repnz
add
addb
inc
add
mov
push
mov
pop
shlb
cwtl
add
adc
movsb
jae
inc
add
in
mov
popa
mov
aas
xchg
jno
sbb
push
sahf
adc
fistl
push
jecxz
inc
add
test
add
jg
nop
lods
add
ret
mov
fisttpl
xor
xchg
xor
inc
hlt
loope
push
xor
jecxz
mov
add
test
mov
xchg
fdiv
pop
lea
popa
dec
lock
out
sub
insb
add
add
dec
add
dec
fucomip
xchg
dec
rcrl
adc
lret
inc
sbb
sub
add
cmpsb
mov
pop
add
mov
add
mov
xor
add
add
insl
in
bound
add
add
pop
add
out
xchg
sub
cmc
movl
mov
gs
pop
not
sub
lock
lods
movsl
mov
mov
add
ss
and
pop
sub
dec
and
call
or
fbstp
sti
xchg
push
adc
mov
add
jnp
inc
add
xchg
xchg
cmpsb
fdivrs
fidivrl
add
jb
std
enter
mov
sar
xlat
movb
adc
and
fadd
loope
arpl
mov
or
enter
pop
and
mov
add
fdivrs
fbld
outsb
xchg
sbb
popf
shrl
mov
gs
fstpt
pop
mov
add
push
add
push
jmp
lods
frstor
xor
ret
cld
fldcw
mov
adc
xchg
xchg
jge
push
clc
lock
pop
imul
inc
pop
in
cs
jecxz
shlb
adc
jl
fldl
mov
dec
jb
add
sub
jecxz
lahf
push
jbe
xchg
jae
cmp
dec
stos
orl
iret
xchg
mov
arpl
ss
movsb
movsb
outsl
xor
jne
add
dec
pop
mov
ljmp
out
ljmp
mov
xchg
je
stos
mov
in
daa
xchg
adc
sbbl
out
xor
int3
int
hlt
cmc
aas
pop
xchg
pop
add
mov
outsl
cmp
and
bound
add
or
orb
test
ss
add
mov
scas
lods
inc
jae
ljmp
cmp
fildl
mov
add
mov
add
dec
add
aad
pop
adc
fdivrl
cmpsb
mov
pop
scas
jp,pn
cmp
jb
mov
out
sti
add
cltd
sbb
lock
pop
mov
add
add
pop
mov
pop
jbe
push
mov
pop
mov
xor
lcall
sub
fcmovb
jecxz
sarl
push
jge
shl
rcrb
pcmpeqd
rorl
dec
xchg
testl
movb
sub
push
addr16
adc
getsec
cmpsb
xor
sub
rcl
dec
add
xchg
cs
daa
nop
mov
inc
add
mov
cmc
aaa
or
xchg
sbb
nop
in
cmp
popa
idivl
xor
lcall
jnp
add
cld
ja
push
add
xor
aas
or
fwait
mov
add
add
add
lea
repnz
hlt
push
jne
sbb
mov
iret
jae
loope
popa
es
mov
sarl
out
fdivr
mov
int3
xchg
jno
add
mov
hlt
cltd
test
gs
dec
dec
add
inc
add
jnp
add
add
xchg
sub
shl
mov
xchg
adc
mov
xor
sbb
sub
rol
pop
lcall
scas
inc
dec
mov
sub
xchg
icebp
push
push
add
addb
mov
lret
add
xor
xchg
rcll
add
mov
cwtl
loope
xor
sbb
mov
add
xchg
push
into
push
pop
popf
xor
into
in
lea
add
bound
mov
push
xor
sbb
pcmpgtw
or
sbb
test
sbb
loop
jo
sub
mov
in
and
pop
lcall
and
add
jl
xor
jmp
in
add
sar
or
outsl
lcall
std
pop
jg
add
cmpsl
mov
pop
popa
pop
mov
stos
sub
scas
jbe
pop
add
pop
and
xor
sbb
loop
xchg
ficompl
add
popf
jo
pop
popf
into
adc
out
arpl
jno
dec
mov
cwtl
xlat
in
idivl
add
mov
dec
add
or
push
mov
dec
out
cwtl
xchg
inc
sahf
jl
or
adc
add
les
pop
dec
xchg
popf
adcl
inc
fldenv
out
xchg
scas
pop
add
mov
inc
ficoms
xchg
jge
test
fdivrl
inc
mov
sub
or
add
test
add
pusha
add
sbb
add
push
addr16
incl
shrl
add
nop
cmp
cli
cs
icebp
iret
or
pop
mov
cmc
mov
cli
int3
in
xchg
jmp
jmp
xchg
xor
rcrl
push
mov
xor
jmp
add
or
enter
mov
xor
pop
nop
mov
lcall
pop
add
cmp
inc
inc
add
out
loope
push
out
dec
add
xchg
negb
mov
out
mov
aaa
cmp
insb
add
add
out
andl
loope
lcall
inc
scas
and
and
jne
nop
mov
jo
fidivl
std
xchg
popf
jp
add
sbb
aas
or
mov
jae
mov
negl
push
add
int3
ret
hlt
or
pop
add
jmp
mov
add
mov
fstpl
js
dec
add
adc
in
into
shll
imul
and
notl
jl
fwait
pop
dec
ljmp
adc
lea
shll
ljmp
shrl
cmp
mov
mov
add
sbb
sbb
loop
cmp
push
adc
mov
adc
mov
stos
sbbl
push
movsl
mov
into
addr16
les
cmpsb
sbb
jmp
and
pop
mov
xlat
add
dec
inc
adc
inc
ljmp
add
cmpsb
ljmp
les
add
pop
pop
mov
add
repz
mov
loopne
xor
outsl
rcrl
add
mov
or
add
fldt
cld
test
xchg
jle
pop
add
xchg
fildl
in
or
in
add
ljmp
in
mov
lds
inc
pop
jns
test
shl
out
fisubrl
pushf
add
push
in
mov
scas
jp
mov
dec
cmp
add
sahf
jg
sbb
daa
lods
cmp
add
cli
test
pop
add
add
add
dec
add
dec
aas
pop
cmpb
add
mov
xchg
in
repz
pop
imul
sub
loop
xchg
inc
sbb
sbb
add
push
pushl
xchg
je
orb
out
inc
add
jecxz
cmpsb
sub
jle
dec
cli
imul
inc
lods
out
mov
add
int
or
popa
ljmp
push
add
cvttps2pi
jnp
es
dec
das
repz
xor
mov
jg
add
add
fidivs
cmp
mov
add
mov
data16
adc
jo
cmp
dec
add
push
cmp
sub
or
xchg
mov
dec
xor
adcl
lods
and
pop
add
xchg
lahf
push
sub
pop
inc
fsubrl
and
outsb
fcmovnbe
shlb
gs
inc
mov
jecxz
repnz
mov
pop
movsl
and
adc
push
add
flds
mov
mov
push
lea
add
lds
sbb
sbb
lods
cmp
fwait
shr
sbb
adc
lret
enter
sbb
dec
dec
xchg
mov
add
mov
cmc
mov
xor
bound
jnp
pop
stos
cmpsl
sahf
clc
in
insb
add
mov
cmp
and
fstpt
sub
ljmp
xor
inc
add
jmp
subl
imul
call
fdivr
popa
jl
cli
pushf
inc
add
mov
pushf
scas
mov
push
add
xor
xchg
push
add
push
or
stc
and
add
out
fwait
dec
cmp
out
sub
lds
mov
inc
jb
ret
imul
and
push
add
adc
jno
or
cli
push
fsubs
mov
mov
add
push
es
sub
fistl
in
push
pop
rorl
mov
mov
mov
clc
mov
in
jp
add
movsb
fisttpl
jb
notb
mov
jb
gs
jl
pop
sti
pop
pusha
add
pop
nop
das
push
outsb
mov
ja
xchg
fcmovnb
imul
aaa
or
inc
mov
shll
mov
and
loope
ljmp
imul
add
adc
add
aam
add
mov
imul
push
dec
add
mov
pop
sub
aad
add
jae
and
xchg
ss
add
xchg
daa
ljmp
sbb
roll
leave
mov
mov
mov
inc
stos
jns
or
mov
stc
mov
dec
mov
dec
popf
sbb
out
add
and
xchg
orb
lret
jbe
add
ret
aam
data16
std
add
and
and
add
sub
or
test
inc
add
add
aas
cmp
popf
add
add
movsl
in
cmc
jmp
test
sub
mov
add
call
jg
mov
mov
loop
in
jbe
pushf
mov
mov
add
in
movsb
sub
lea
arpl
xchg
pop
pop
iret
add
icebp
sbb
jb
add
push
sahf
mov
lods
xchg
js
pusha
add
popf
pusha
add
in
xchg
in
dec
add
cmpb
out
xchg
xchg
aad
cs
inc
xchg
sub
in
mov
push
add
push
and
jbe
into
cmp
mov
aad
jbe
rorl
sbb
stos
inc
add
and
add
add
add
xor
cwtl
sub
je
scas
or
inc
pop
popf
cld
mov
cmp
mov
dec
cmp
stc
cmpsl
adc
leavew
push
leave
and
sub
aas
lret
cmpsb
leave
or
xor
add
in
in
pop
xlat
dec
xor
jp
iret
aaa
push
and
adc
mov
adc
test
cmp
nop
mov
add
pusha
add
hlt
fidivl
or
fistps
xchg
cmc
js
adc
add
adc
fs
cmpsb
shrb
loope
insl
scas
dec
cwtl
pop
add
inc
mov
sarb
xor
jl
pop
add
out
and
shl
sbb
sub
xchg
fistpll
pop
idivb
sbb
cmp
scas
adc
push
cs
xlat
and
mov
fcompl
addr16
aam
xchg
lea
test
adc
roll
mov
xor
sub
pop
add
ret
add
cmc
sub
into
lock
leave
addr16
ss
add
add
lahf
fsubl
stos
shlb
push
incb
mov
inc
int3
adcl
push
push
push
mov
xchg
js
stos
push
adc
add
arpl
mov
add
jl
pusha
add
out
outsb
or
mov
stos
clc
gs
clc
cmpsl
add
or
mov
add
sub
add
popa
sbb
xchg
add
cmp
std
inc
or
push
inc
xlat
cs
xor
xchg
mov
jecxz
pushf
and
lds
jmp
or
add
sub
and
addl
jae
imul
mov
adc
add
ds
mov
push
add
xor
xorl
add
stos
js,pt
dec
jae
push
ret
addr16
jg
ret
popf
sahf
push
cs
mov
hlt
and
negl
add
gs
popa
adc
cmp
ds
mov
test
add
xchg
subl
push
repz
mov
clc
sub
xchg
iret
outsl
out
push
fadds
jnp
cwtl
mov
lds
mov
cli
pop
add
loopne
loop
pushf
or
lahf
pop
add
adc
or
daa
cmp
add
sub
inc
jne
jle
add
add
add
add
push
ret
outsl
add
sbb
stos
mov
add
mov
insl
shlb
jl
and
outsl
out
push
mov
mov
or
lods
jmp
add
cmpsb
mov
xlat
je
cmp
ficoml
test
jge
lds
outsl
sbb
stc
aas
xchg
cli
push
add
inc
adc
cmp
out
test
pop
leave
dec
jae
je
pop
mov
shll
clc
push
mov
add
add
imul
aam
imull
inc
scas
fnstenv
xor
add
add
push
add
cld
jae
xchg
arpl
mov
add
add
leave
pushf
push
lret
scas
roll
jle
ret
pop
push
jae
jl
and
bound
ror
jne
das
cld
fcom
loopne
insb
add
adc
sub
stc
addl
ss
sbb
cmp
add
dec
add
sar
sbb
mov
icebp
outsb
mov
lods
fisttpl
std
out
arpl
lahf
icebp
xchg
sbb
hlt
sbb
xchg
inc
add
and
cmp
xor
outsl
out
imul
int3
jge
add
shr
xor
data16
cmp
lods
cmp
hlt
inc
add
inc
push
inc
add
and
cmpsl
cmp
and
iret
inc
fmul
mov
sub
jo
jae
add
dec
jmp
sub
and
and
inc
mov
add
loope
or
add
test
flds
jge
jb
mov
lds
jp
lods
jmp
rolb
add
stos
gs
scas
lret
fisubrl
nop
cmp
cmpb
push
ljmp
cwtl
xchg
cmp
fcmovu
mov
xchg
inc
jl
jmp
popf
add
stos
out
imul
inc
sahf
mov
or
push
push
in
mov
das
movsb
fbld
mov
add
mov
test
bound
add
outsl
sub
call
inc
add
ss
bound
in
push
aas
jae
push
in
cmp
leave
cmp
jnp
out
xchg
cmp
aaa
cli
sbb
push
add
lods
jmp
sub
test
popf
pop
xchg
notl
icebp
in
add
push
add
mov
popf
mov
mov
and
in
insb
add
shrb
outsb
or
fistpll
and
adc
out
jmp
inc
scas
rclb
test
add
adc
add
push
in
rcr
xlat
gs
aam
daa
xchg
mov
add
pusha
add
add
aas
aam
xchg
mov
and
xchg
xchg
push
pop
aaa
or
adc
js
lret
push
fsubrl
push
cmpsl
xchg
mov
fisubl
lea
into
in
jns
mov
test
outsl
jae
push
push
adc
dec
add
jbe
jle
shl
or
sbb
jb
pop
lcall
mov
leave
ja
hlt
pop
out
sar
jecxz
adc
xor
jo
inc
dec
pushf
out
xchg
loope
xlat
aas
div
mov
outsb
aad
adc
add
add
sub
pop
jmp
add
in
pop
dec
jmp
outsb
pop
xor
adc
or
ret
xchg
fwait
mov
xchg
xchg
jbe
enter
add
divb
stos
mov
add
and
push
mov
xchg
push
cmp
cmp
insl
mov
shll
pop
add
ret
cmp
add
sub
stos
jbe
cmpb
stc
jmp
mov
jl
push
mov
sub
xchg
or
sub
aam
in
push
inc
fcmovbe
sbb
xlat
addl
pop
sarl
rorb
mov
ret
xchg
addr16
ss
xor
pop
das
fnstsw
or
xchg
stos
xor
pop
lret
mov
jno
mov
mov
mov
add
fsubl
repnz
les
loope
add
jno
fidivl
cmp
dec
adc
dec
jg
mov
xchg
scas
je
into
movsl
loope
dec
bound
in
jbe
out
push
or
ljmp
mov
hlt
ret
ret
jns
mov
fisttpl
stos
cmpsl
lret
jl
mov
mov
movsl
gs
in
out
ret
int3
leave
or
lods
push
cmpb
dec
sub
add
adc
mov
call
add
pop
test
out
movsl
jb
jp
jle
mov
stos
and
and
mov
imul
add
enter
jnp
iret
add
xchg
adc
std
xor
loopne
fwait
cmpsb
add
mov
pop
add
add
insl
xchg
das
shll
lock
mov
dec
out
xchg
sbb
mov
je
pop
ds
mov
jae
mov
sbb
jns
add
out
push
add
jl
pop
movsb
push
sub
aad
jns
sub
test
loopne
push
add
das
int
aas
sub
mov
sub
nop
js
push
add
push
stos
dec
into
into
cmp
pop
xchg
jnp
mov
pop
lret
xchg
lods
fwait
icebp
lret
and
shlb
repnz
xor
or
pop
imul
push
in
hlt
push
fldcw
insl
js
push
outsl
jne
andl
cmp
mov
jns
dec
int3
xchg
cmp
icebp
stc
pusha
add
popa
lret
xchg
pop
shll
xor
dec
cmp
add
test
aaa
mov
lcall
pop
mov
add
stos
sub
or
fs
rcrb
jnp
adc
add
pop
jbe
jnp
lock
cmp
iret
mov
push
xor
xchg
stc
push
mov
cmp
xchg
dec
inc
out
jns
cmpsb
ljmp
mov
enter
je
jo
pcmpeqw
orb
orb
cmp
or
jne
repz
loopne
and
or
lcall
add
xorl
cmp
jecxz
xchg
and
stc
ror
xor
add
out
mov
sbb
lock
and
scas
and
stc
and
mov
add
imul
cs
outsl
mov
test
popa
cmp
mov
add
dec
mov
out
or
out
jg
push
add
ret
jnp
and
cmp
das
jnp
stc
and
sub
inc
add
ss
add
pop
mov
mov
add
in
test
leave
mov
ftst
sti
push
sbb
ds
leave
xor
in
sti
in
jnp
dec
add
sub
cmc
lret
pusha
add
add
add
adc
movsl
test
in
and
push
bound
shrb
push
add
sub
sub
xorb
mov
add
mov
jne
shll
adc
data16
das
mov
adc
inc
mov
add
fwait
mov
inc
and
enter
ret
mov
jae
data16
dec
lret
or
pop
add
enter
add
push
negl
outsb
notl
cmp
in
lods
lret
fistl
lahf
dec
xorb
cmp
mov
imul
xor
arpl
push
sti
fdivs
xor
mov
jae
and
mov
and
and
fidivrs
mov
push
adc
in
scas
cs
fxtract
xor
inc
add
push
adc
xchg
scas
and
inc
fildl
add
xchg
ret
mov
mov
push
cs
add
pop
ficomps
repnz
subl
pop
data16
dec
cmc
inc
add
notb
add
lret
bound
pop
push
or
add
test
daa
mov
add
xor
add
push
jb
repz
insl
mov
add
popa
cwtl
loope
std
push
push
or
add
daa
ror
loope
bnd
andb
fistl
nop
sub
dec
jge
adc
out
add
xchg
add
aad
lods
pop
rcll
inc
and
imul
add
add
xchg
push
add
xchg
add
inc
adc
xchg
xchg
mov
leave
lret
sbb
jne
jp
mov
jo
inc
add
je
sbb
aas
pusha
add
push
lahf
sbbb
jne
xchg
cmp
es
jb
push
or
add
add
sti
lret
inc
dec
xchg
pop
pop
or
adc
cmovg
fcmovbe
inc
adc
lods
or
sbb
xchg
cld
xlat
jnp
ss
loope
scas
mov
jb
add
outsl
push
sub
mov
mov
repnz
sbb
mov
inc
dec
outsb
sub
ficompl
fdivp
cmovns
push
add
addb
xor
cmpsb
insl
and
bound
loop
mov
inc
inc
sti
faddl
out
in
punpckldq
mov
push
add
test
ja
imul
loopne
ret
mov
out
add
add
clc
call
add
pushf
loope
mov
imul
data16
test
frstor
fisttps
scas
in
dec
arpl
loope
out
repnz
push
hlt
push
data16
pop
push
add
cmp
adc
cmp
jno
adc
and
rorb
jecxz
jne
add
mov
inc
lea
adc
push
add
jbe,pn
cmp
and
scas
insl
scas
lcall
hlt
jmp
sbb
cmp
in
rcrb
hlt
loope
bound
cmp
faddl
xchg
enter
or
pop
dec
xchg
push
popf
add
cmp
fildll
es
stos
xchg
pop
push
inc
add
shr
lods
cmpsb
sub
push
push
and
add
jns
icebp
lret
jne
dec
pop
push
mov
test
rcrl
add
push
out
pop
add
call
fdivrl
aad
add
push
and
xor
in
add
mov
das
mov
add
add
insb
add
insb
add
jp
sbb
shll
adc
push
add
inc
push
negb
push
add
dec
push
pop
xchg
enter
aaa
sbb
pop
cwtl
inc
sub
nop
fwait
dec
add
pop
jno
adc
mov
cld
sbb
cmp
js
test
cmp
or
icebp
push
jge
sar
jae
cld
fcom
jecxz
mov
mul
pop
test
inc
dec
add
and
add
pop
lock
xchg
xchg
mov
or
stos
sbb
sub
xor
ss
add
adcl
mov
stos
or
cltd
push
mov
inc
add
add
nop
in
or
loope
iret
loopne
push
pop
loopne
xchg
and
jno
push
lret
push
into
and
xor
imulb
add
fldt
dec
shlb
in
cli
cmp
insb
add
or
add
xor
mov
lret
sbbl
add
add
aam
lret
les
xchg
hlt
mov
add
mov
movsb
addr16
lret
es
es
scas
test
pop
xor
cmpsb
xchg
in
test
jae
jecxz
fisubrs
adc
int3
push
aaa
les
js
adc
jl
sub
add
lret
mov
mov
sarl
xchg
ja
fsubs
in
add
jbe
dec
mov
add
sbb
push
popa
mov
push
jle
dec
sub
in
aam
and
cmpl
int3
sbb
push
pop
or
test
xorl
add
push
add
add
fstpt
add
xor
das
jns
push
clc
mov
lret
xchg
add
divl
add
add
leave
mov
add
dec
cmp
dec
scas
repnz
xchg
dec
jecxz
add
adc
imul
ret
add
sub
shll
lret
xchg
inc
add
movsb
mov
mov
loope
fsubl
aam
and
xorl
or
lcall
inc
add
incl
ret
repnz
and
adc
loope
lods
lods
mov
rcrb
mov
add
into
fiaddl
fwait
mov
adcl
out
add
imul
or
out
jnp
add
mov
add
ret
bound
call
mov
mov
les
xchg
jne
push
jno
add
add
shll
fcmovb
add
ret
fcmovbe
cmp
divb
call
lock
jge
pop
adc
jne
jb
add
lcall
add
in
dec
test
jge
ret
inc
stc
fwait
mov
rorl
cli
mov
pop
bound
cmp
add
cli
push
and
shlb
xchg
and
mov
fst
mov
mov
jno
hlt
inc
and
es
sbb
repnz
and
mov
mov
push
xchg
mov
mulb
ret
lock
sbbl
xchg
sbb
mov
push
int3
mov
mov
movsl
mov
jecxz
add
dec
add
test
mov
cmp
ljmp
int
cli
loope
dec
add
icebp
loopne
andb
add
and
in
jns
mov
jno
add
adc
xor
or
sbb
add
pop
lods
jmp
add
mov
jne
sbb
add
xor
jnp
jecxz
pop
mov
stos
add
add
outsb
mov
ror
pusha
add
sar
push
add
daa
sub
fisubs
add
and
xor
nop
mov
add
jl
les
mov
add
ja
fs
cmp
add
or
mov
xchg
mov
push
jnp
in
hlt
negb
jp
push
add
sbb
sub
dec
xor
add
cwtl
xlat
sbb
lret
in
add
add
or
xchg
ret
je
xchg
into
test
dec
in
repz
out
add
mov
fldl
add
flds
les
fwait
icebp
testl
jmp
ja
out
cli
andl
mov
xor
jecxz
add
sbb
add
add
or
dec
or
jl
stos
outsb
inc
cmpsl
cwtl
pop
add
mov
inc
arpl
btc
hlt
in
cmp
add
and
test
adc
add
adc
decb
sub
lods
imul
aaa
push
lea
jp
lret
pop
iret
loope
or
mov
cmp
inc
push
jecxz
pop
mov
cwtl
movsl
loopne
sub
idivb
out
fisttpl
jbe
out
mov
add
clts
add
shlb
add
xor
scas
test
sub
test
jno
push
sbb
pop
add
mov
mov
push
add
loopne
out
js
mov
lods
mov
xchg
and
add
jnp
or
and
fstl
mov
call
add
cltd
sbb
ret
cli
push
test
out
test
loopne
xchg
push
cmp
mov
in
add
adc
xchg
xor
das
mov
sbb
faddp
je
adc
cs
and
inc
add
jge
xchg
sbb
xor
gs
in
outsl
inc
push
or
add
out
cmp
add
and
lret
xchg
popa
xor
adcb
add
jge
push
and
add
cmp
add
add
jo
scas
mov
or
pop
adc
andl
sub
jp
push
xchg
lods
dec
pop
pushf
cmp
pop
fistl
mov
repnz
add
mov
mov
and
add
orl
jl
iret
pop
pinsrw
push
add
outsl
mov
lcall
add
out
lea
add
mov
sub
inc
adc
push
mov
jae
add
aaa
sbb
push
add
push
add
xchg
in
pop
and
push
pop
dec
scas
sub
jmp
pop
push
push
js
jae
addl
subl
cli
cs
jns
xchg
cmp
dec
sar
dec
cli
cmp
add
out
loope
leave
cmp
popf
packssdw
xchg
mov
jbe
aad
add
push
ljmp
dec
mov
and
inc
push
inc
mov
jb
sbb
sbb
test
jne
sbb
adc
xchg
inc
add
inc
out
das
pop
js
lret
add
pop
in
cmp
lods
inc
mov
add
jg
aad
add
andl
fidivs
sbb
jmp
add
cmpsb
fstps
pop
cmp
repz
add
add
add
dec
add
fidivrs
cmp
add
mov
add
jae
adc
add
mov
mov
push
add
jp
add
pop
outsl
add
sbb
inc
gs
pop
mov
ja
out
sahf
xchg
push
cmp
dec
jno
jge
mov
cwtl
lahf
or
cmp
add
adcb
push
mov
xor
sti
jg
mov
push
aam
cltd
pusha
add
push
push
pushf
out
mov
daa
je
lret
dec
das
in
mov
jp
push
mov
lea
clc
pop
mov
das
call
out
jne
or
dec
outsl
dec
add
add
cmp
lds
push
push
repnz
jns
pop
je
mov
push
xor
xchg
xchg
push
jmp
push
and
mov
std
js
mov
push
or
sti
sbb
insl
jb
add
xor
xor
les
je
imul
loope
inc
add
icebp
test
inc
add
sbbl
add
out
inc
xchg
daa
xchg
jg
xchg
adc
add
or
out
loopne
add
out
pop
lods
out
dec
add
xlat
add
adc
jnp
clc
popf
es
push
aas
xor
push
fisubrs
das
xor
sarl
mov
mov
cmp
fdivs
pop
lods
and
in
faddl
add
add
or
or
rclb
add
hlt
pushf
push
xorb
inc
pop
imull
hlt
sti
or
cs
lcall
imulb
add
jo
sub
std
test
pop
adc
add
test
mov
enter
pop
jp
test
mov
pmaddwd
jbe
les
add
add
xor
not
pop
jbe
shlb
call
adc
test
stos
fstpt
push
xlat
sub
pop
push
xchg
mov
lret
xchg
pop
pop
dec
add
rorb
test
jecxz
inc
add
jns
mov
iret
loop
enter
arpl
xor
pextrw
pushf
mov
cld
decb
das
neg
popf
lods
stc
xchg
pop
jbe
out
ja
int3
xor
push
or
xchg
jns
or
sbb
jmp
push
sub
sub
or
inc
add
test
xor
das
mov
nop
sbb
add
add
sub
dec
cmp
push
test
fwait
jg
mov
cltd
in
lret
fsubs
xor
lahf
sarb
sbb
dec
add
inc
movsl
jbe
insl
pop
mov
add
or
shlb
fdivs
pop
pop
lock
sbb
loope
test
add
xor
and
push
mov
loop
push
adc
sbb
lods
pop
mov
cmpsl
inc
add
dec
add
call
adc
outsl
lea
cmpsb
xor
add
xchg
inc
fnstcw
sbb
pushf
ficoml
je
sub
xchg
leave
mov
sbb
mov
adc
mov
mov
out
and
or
out
daa
xor
fisubrs
push
xor
add
add
imul
add
dec
add
pop
fisttps
add
rcrb
in
jbe
fidivl
in
jl
add
add
add
jne
add
stos
std
push
add
test
movsl
xor
adc
sahf
xor
fsubr
jle
add
add
cmc
sub
ss
js
sub
sub
iret
jbe
jb
loop
test
in
fidivl
addr16
add
jb
and
push
popf
mov
movsl
push
insl
adc
rorl
outsb
sbb
add
je
cli
pushf
xor
dec
ret
xchg
mov
add
xor
mov
xchg
jg
add
into
or
xor
pop
dec
dec
jno
out
lods
push
movsl
pop
in
jmp
shrl
or
cmpsb
jmp
hlt
mov
adc
clc
test
arpl
cmp
in
call
pop
add
sub
ja
xchg
push
pop
pop
and
xchg
adc
call
push
mov
pop
add
add
add
lods
jmp
popa
add
les
cmc
rcll
mull
repnz
lock
mov
add
and
cmp
and
add
repz
and
add
mov
fwait
add
ljmp
mov
jnp
adc
ss
pop
mov
mov
lock
push
shlb
hlt
push
push
mov
mov
adc
xchg
push
ljmp
lcall
push
iret
ja
mov
add
adc
add
sbb
adc
outsl
fsts
cmp
mov
add
movsb
popf
add
dec
cmpxchg
outsb
stos
cmp
or
mov
mov
inc
dec
jne
cld
repz
xchg
xchg
dec
scas
bound
dec
ja
adc
iret
ss
js
mov
add
mov
add
add
cmp
jbe
jbe
or
add
cmp
jl
jecxz
cmc
js
arpl
test
imul
pop
add
inc
add
repnz
lds
into
das
inc
add
add
fldt
push
add
int3
mov
jmp
add
fdivrl
out
test
or
add
cmp
lods
sub
stos
dec
pop
popf
lods
lods
jle
inc
add
orl
mov
test
add
in
daa
cmp
jecxz
leave
pop
xchg
add
add
lds
jl
loop
sbb
add
aaa
sarb
cli
scas
mov
lods
pop
stc
in
mov
add
dec
add
orl
adc
inc
clc
test
shll
inc
add
daa
pop
jg
mov
cmp
sbb
sti
aad
add
test
and
add
dec
add
outsb
fwait
mov
jge
cmp
fists
pop
stos
adc
add
adc
repz
aas
stos
adc
cmp
cwtl
shrl
and
sub
sub
test
and
orl
insb
add
mov
arpl
inc
add
dec
aad
pop
add
stos
insb
add
cmp
add
loope
push
lods
pusha
add
cld
mov
mov
pop
mov
es
ljmp
xchg
mov
push
add
and
jne
add
add
stc
sbb
jge
shrl
lods
push
lcall
push
pop
add
jno
mov
sub
icebp
popa
iret
dec
clc
or
into
test
sub
pop
adc
mov
into
mov
daa
add
push
notb
push
cmp
icebp
outsl
insl
je
in
and
mov
das
dec
les
sbb
sbb
add
imulb
add
aas
mov
loopne
lret
test
xchg
add
mov
xor
pusha
add
test
mov
pop
outsb
es
adc
movsl
std
mov
fwait
inc
add
cmp
sub
cmc
xchg
pop
jae
loop
mov
add
sub
add
mov
rclb
shlb
rcrl
and
in
pusha
add
dec
cmpsb
jno
sub
mov
mov
xchg
fidivl
jb
add
bound
add
xchg
add
jbe
cmp
add
call
shlb
add
rolb
or
add
inc
addr16
testl
add
into
mov
jo
call
pop
mov
adcl
dec
push
xchg
jb
loop
stos
push
jecxz
add
cmp
pop
mov
lahf
inc
arpl
daa
lret
rorl
call
mov
pop
add
cwtl
imul
jo
inc
add
scas
xor
sub
es
pop
and
hlt
aam
add
enter
daa
inc
js
repz
xor
xchg
xor
sub
bound
subb
add
jb
xchg
addb
mov
dec
push
imul
aam
repz
fsubrp
popa
aaa
pusha
add
adc
les
bound
add
and
cmp
popf
int
fwait
push
pop
mov
call
cmc
mov
xchg
pop
mov
addr16
rcr
add
add
pusha
add
in
repnz
add
scas
in
pop
inc
mov
xchg
pop
add
mov
add
cmp
push
pop
add
add
jo
lcall
add
fisttpll
iret
mov
jnp
inc
fyl2x
push
les
mov
or
mov
out
sub
bound
and
dec
xchg
mov
popa
or
adc
add
xor
mov
add
ret
pop
mov
add
and
pop
scas
cmp
push
add
or
pop
negl
add
sbb
xor
push
mov
adc
out
add
add
mov
fistpll
scas
ret
bound
xorb
scas
inc
push
add
xchg
lods
fidivl
ljmp
shlb
loop
gs
insb
add
in
fnstenv
pop
push
dec
ror
push
pop
test
sub
push
dec
insl
cmp
mov
or
mov
sub
cld
sti
das
xor
es
jle
dec
in
int
jnp
