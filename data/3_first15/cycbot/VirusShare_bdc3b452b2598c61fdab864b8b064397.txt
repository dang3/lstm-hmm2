add
cmc
stc
std
add
sbb
sbb
sbb
sbb
add
jl
add
add
add
test
add
add
add
add
jecxz
jecxz
stos
addb
add
test
test
fs
add
add
add
add
fiaddl
add
in
stc
add
mov
cld
adc
fcmovu
fiaddl
cmp
add
std
std
std
xor
xor
xor
add
add
out
out
out
out
add
rol
rol
rol
ror
iret
iret
iret
iret
iret
iret
iret
iret
mov
lret
lret
add
mov
add
repnz
add
add
add
add
add
jo
jo
jo
jo
jo
add
add
leave
leave
leave
leave
sub
cmp
out
out
out
out
xchg
mov
mov
mov
mov
stos
stos
jb
sub
sub
add
add
push
push
push
push
push
push
push
push
push
push
push
add
mov
add
stos
stos
stos
stos
test
add
add
add
mov
scas
leave
add
add
dec
mov
mov
mov
movb
add
xor
insb
insb
add
add
push
add
add
add
add
add
repnz
add
add
add
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
push
insl
mov
mov
out
out
sub
xchg
xchg
xchg
xchg
xchg
xchg
add
add
add
add
xchg
xchg
ret
test
out
out
and
add
add
add
jge
jge
mov
xchg
xchg
xchg
xchg
xchg
fiaddl
add
rcl
rcl
rolb
add
add
add
add
adc
adc
adc
adc
cmpsl
cmpsl
cmpsl
add
add
sbb
stos
stos
jnp
jnp
jnp
jnp
xacquire
add
add
add
add
je
in
in
add
add
add
icebp
icebp
icebp
icebp
icebp
icebp
icebp
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
push
push
push
out
out
out
out
out
out
out
div
div
div
or
add
add
pop
pop
incl
inc
filds
add
add
add
add
add
adc
adc
add
ret
add
or
adc
adc
adc
lcall
ja
sub
jmp
jmp
xchg
xchg
loop
pusha
pusha
add
add
add
mov
mov
pop
add
lret
lret
lret
lret
lret
lret
lret
lret
add
pop
cltd
cltd
stc
stc
stc
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
add
jg
fiadds
add
out
push
push
push
add
add
inc
inc
inc
jg
int3
int3
int3
int3
int3
int3
int3
int3
add
xor
add
adc
inc
inc
add
enter
enter
add
add
add
xchg
xchg
xchg
es
sub
cmp
cmp
add
add
push
jae
outsl
outsl
outsl
outsl
add
add
add
add
add
add
add
add
add
add
lahf
lahf
and
and
and
and
and
fs
outsb
outsb
popa
popa
popa
popa
dec
dec
dec
add
add
push
push
push
mov
add
dec
dec
dec
mov
mov
add
add
adc
add
add
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
add
add
add
repnz
test
add
jo
jo
jo
add
add
add
cmc
cmc
movsb
xlat
add
add
add
sub
jne
jne
jne
jne
stos
stos
stos
stos
add
mov
push
push
push
push
add
add
add
jns
jns
jns
ja
ja
mov
movl
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
js
js
test
test
test
test
add
add
add
repnz
add
js
mov
mov
dec
dec
dec
dec
dec
dec
adc
adc
adc
adc
adc
adc
adc
jae
jae
jae
jae
push
push
add
jbe
mov
add
add
fsub
jecxz
jecxz
add
add
cmp
cmp
cmp
cmp
adc
add
or
or
int
add
cmp
cmp
cmp
cmp
cmp
pop
xchg
xchg
xchg
ficompl
pop
aam
aam
aam
inc
inc
add
inc
inc
lock
add
add
mov
add
add
add
sub
add
add
add
cmp
lods
lods
add
out
out
add
add
stos
stos
stos
stos
stos
stos
stos
stos
or
or
or
or
or
sbb
mov
mov
mov
mov
sub
nop
nop
add
add
add
add
add
sahf
sahf
sahf
sahf
dec
dec
dec
dec
dec
add
add
add
add
xchg
xchg
xchg
xchg
xchg
xchg
roll
add
mulb
add
add
add
push
push
push
in
in
in
arpl
arpl
arpl
jle
inc
inc
aad
aad
add
add
add
dec
dec
dec
dec
dec
lods
lods
lods
lods
lods
lods
icebp
icebp
icebp
icebp
icebp
add
mov
mov
mov
add
add
add
xchg
xchg
xchg
xchg
xchg
xchg
mov
xor
xor
add
add
add
sub
sub
sub
sub
icebp
icebp
leave
leave
stc
stc
stc
sbb
xchg
xchg
xchg
dec
dec
dec
dec
dec
dec
dec
dec
dec
imul
mov
add
add
add
push
push
pop
pop
pop
pop
pop
gs
add
add
add
lret
lret
lret
lret
ss
in
in
in
in
in
in
add
add
incb
js
js
dec
dec
dec
dec
dec
dec
add
sti
sti
add
add
add
test
test
test
xchg
add
add
mov
sub
fstp
lock
out
out
out
add
out
out
out
add
add
add
rcl
out
out
out
out
out
out
out
out
in
add
add
add
add
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
add
add
add
ret
dec
dec
dec
xor
xor
xor
and
and
and
and
add
movsb
movsb
movsb
xor
or
or
add
add
div
div
jbe
mov
mov
add
dec
sbb
xchg
xchg
xchg
xchg
xor
xor
xor
add
add
add
push
push
push
jmp
jmp
jmp
add
add
add
add
add
add
add
push
push
push
push
push
push
push
push
push
push
push
push
add
lock
lods
lods
adc
div
div
div
mul
in
push
add
add
and
and
and
inc
inc
inc
inc
inc
inc
inc
push
push
push
add
add
add
add
add
lcall
loope
lret
lret
lret
clc
clc
clc
clc
cmp
cmp
cmp
cmp
cmp
cmp
or
or
or
or
outsb
outsb
add
cmp
cmp
inc
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
add
add
mov
add
dec
dec
add
push
push
push
push
push
push
push
push
push
push
push
xchg
xchg
xchg
add
add
je
je
add
add
add
in
in
in
in
in
das
das
mov
vpunpckldq
add
mov
xchg
add
xor
mov
mov
loopne
sti
sti
jecxz
pop
pop
ja
repnz
dec
dec
pop
pop
pop
jne
jne
jne
add
add
add
test
test
mov
mov
add
add
add
pushf
pushf
pushf
pushf
pushf
pushf
pushf
add
add
add
add
fstp
or
and
arpl
arpl
arpl
add
add
add
add
aas
aas
add
add
cld
cld
cld
cld
cld
cld
cld
add
add
or
or
or
or
or
or
or
or
or
or
or
or
or
sti
sti
sti
sti
sti
sti
add
add
add
mov
aam
aam
add
add
add
inc
inc
inc
inc
inc
inc
add
add
add
aad
push
push
push
add
mov
xchg
xchg
add
add
mov
mov
mov
mov
add
add
incl
lahf
lahf
addr16
add
jle
jle
outsb
add
fcmovnu
fcmovnu
fcmovnu
fcmovne
leave
leave
leave
leave
leave
leave
leave
leave
leave
push
add
add
add
sub
sub
add
loop
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
add
xchg
xchg
xchg
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
pop
pop
pop
pop
pop
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
add
add
and
add
insl
insl
insl
loopne
rol
mov
add
icebp
icebp
fwait
fwait
cli
cli
addb
add
add
ljmp
add
jne
jne
jne
jne
add
add
add
add
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
add
add
add
add
pop
pop
pop
pop
cmp
cmp
cmp
cmp
cmp
cmp
mov
xchg
div
div
add
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
mov
add
add
add
cld
cld
add
add
add
add
add
add
add
dec
dec
dec
dec
dec
dec
add
add
push
push
push
push
push
push
push
push
push
push
push
push
dec
dec
dec
dec
dec
dec
dec
dec
test
ljmp
add
add
mov
clc
clc
clc
clc
clc
clc
clc
clc
clc
mov
mov
mov
test
inc
inc
inc
inc
inc
inc
jb
jb
add
call
call
and
and
and
ret
mov
add
mov
jnp
add
loopne
mov
add
sub
sub
xchg
xchg
xchg
xchg
xchg
xchg
sahf
sahf
sahf
sahf
add
add
gs
div
div
testb
add
fidivrs
jle
jle
jle
jle
jle
fstp
fldl
cs
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
push
push
push
add
call
ret
ret
ret
jg
cs
push
add
add
add
add
add
add
pop
pop
pop
pop
pop
pop
pop
dec
call
add
add
shll
jb
xor
xor
add
add
add
add
add
jbe
jbe
add
iret
iret
iret
iret
iret
iret
xchg
xchg
xchg
xchg
mov
sahf
test
sub
sub
sub
sub
sub
sub
sub
and
data16
add
add
mov
mov
adc
adc
adc
add
add
jno
jno
add
sbb
sbb
sbb
sbb
cmp
cmp
add
add
sub
sub
sub
sub
sub
sub
sub
sub
sub
rol
adc
cli
cli
cli
xor
xor
xor
das
das
rcl
rcl
rorl
dec
dec
dec
dec
dec
dec
dec
add
iret
iret
add
mov
mov
add
add
add
dec
prefetcht2
sbb
sbb
rcl
roll
add
add
add
add
addr16
jge
jge
inc
inc
inc
inc
inc
lret
lret
lret
lret
lret
add
sbbb
sbb
sbb
sbb
add
add
add
mov
add
dec
dec
dec
dec
dec
dec
dec
dec
add
add
xor
fcmovnu
add
rcrl
add
jle
cltd
cltd
cltd
sub
sub
add
add
add
div
div
add
mov
mov
adc
adc
adc
adc
adc
adc
sldt
add
add
add
add
add
add
addb
mov
pop
pop
pop
add
scas
scas
add
mov
add
pop
pop
pop
pop
pop
dec
jns
add
add
aad
aad
aad
ss
add
popa
popa
popa
popa
xor
xor
xor
add
add
add
add
add
jl
inc
inc
inc
inc
inc
add
test
test
add
add
test
test
test
test
arpl
xor
mov
add
cmp
dec
dec
dec
addl
add
add
jnp
jnp
jnp
jnp
pop
pop
pop
add
ljmp
imul
imul
pushf
and
and
xor
xor
add
xchg
xchg
add
fstp
fstp
fstp
fstp
fmul
enter
xor
dec
dec
jl
or
add
insl
insl
insl
insl
insl
data16
xchg
sub
daa
daa
daa
daa
daa
daa
add
add
add
add
std
add
call
call
call
push
push
add
sub
sub
and
outsb
dec
dec
dec
dec
add
sub
cmp
add
add
add
add
pop
pop
pop
pop
add
add
add
jp
addl
pop
pop
pop
pop
pop
pop
pop
pop
clc
clc
clc
mov
mov
add
sti
add
add
add
add
add
add
jbe
jbe
add
out
out
out
jl
jl
mov
loope
loope
add
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
add
sbb
sbb
sbb
add
add
popl
add
add
outsl
outsl
outsl
outsl
outsl
jno
add
sbb
sbb
sbb
sbb
ret
ret
ret
add
add
add
add
add
xor
xor
xor
xor
push
add
pop
pop
add
aaa
aaa
lret
lret
lret
lret
lret
add
add
cmp
cmp
cmp
cmp
adc
adc
adc
add
sub
push
or
call
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
add
add
add
add
push
push
push
push
push
push
and
or
add
add
add
adc
lret
jo
jo
cli
cli
cli
add
add
add
add
add
aas
aas
aas
imul
les
clc
clc
clc
clc
clc
clc
clc
or
or
or
or
or
or
mov
stos
stos
stos
stos
mov
mov
or
add
cmp
fcomp
mov
daa
add
add
add
inc
popf
popf
mov
mov
add
jecxz
jecxz
add
add
add
add
ljmp
add
loope
loope
push
push
add
mov
mov
repz
repz
fnsave
jae
jae
add
add
add
sub
add
mov
pop
jns
jns
sarb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
inc
inc
add
add
add
add
test
and
xchg
xchg
xchg
xchg
xchg
je
je
je
je
je
adc
adc
out
add
arpl
fstp
add
adc
adc
adc
adc
adc
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
add
add
int
int
int
lea
jecxz
jecxz
jecxz
into
into
into
add
mov
mov
aad
aad
aad
add
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
push
push
repz
pop
pop
pop
pop
cs
cs
push
push
push
push
push
push
push
lahf
add
add
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
fcomp
fcomp
add
div
repnz
dec
dec
mov
mov
add
add
or
fildl
push
push
push
mov
ret
pop
popa
sti
mov
mov
mov
out
add
add
add
add
add
add
cmp
add
add
test
lods
lods
add
add
add
add
lahf
add
add
cmc
add
add
add
lods
lods
lods
hlt
hlt
hlt
push
push
push
push
push
push
push
push
jno
jno
jno
jno
jno
jno
xchg
xchg
xchg
psubusb
iret
iret
jge
jge
jge
jge
jge
jge
jge
jge
add
add
clc
mov
mov
mov
mov
mov
mov
cli
cli
sub
add
add
js
mov
xchg
xchg
add
add
es
aam
cmp
cmp
dec
rcl
rcl
rcl
rcl
cld
cld
cld
cld
cld
jmp
mov
mov
mov
xor
xchg
xchg
add
add
sti
or
or
or
in
in
mov
mov
mov
mov
mov
add
add
add
incl
add
add
pop
ss
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
inc
inc
inc
pop
pop
pop
pop
pop
pop
jp
add
add
add
add
mov
add
add
push
push
push
push
movsb
add
add
add
aam
push
push
push
push
push
push
push
push
push
xor
pop
pop
pop
jno
add
mov
xchg
jno
jno
add
sub
add
add
add
outsl
outsl
outsl
addl
add
add
out
out
out
out
out
out
add
add
mov
lcall
lcall
push
push
push
add
add
lds
xor
add
sbb
xor
add
div
daa
add
xor
and
and
and
jl
jl
mov
mov
mov
mov
mov
add
add
ss
faddl
lahf
lahf
lahf
add
and
and
cmp
cmp
add
add
test
pushf
stc
stc
stc
cmpsl
add
add
add
pop
pop
pop
add
add
or
or
test
add
push
xor
rcll
adc
adc
add
push
push
mov
pop
pop
pop
pop
popa
in
in
dec
dec
dec
add
add
addl
add
sbb
sbb
std
std
add
add
jno
lods
add
add
add
add
out
out
out
out
add
add
add
rcrb
stos
add
pusha
pusha
pusha
add
cmp
cmp
sub
add
aam
aam
aam
aam
add
push
push
push
push
push
add
add
add
add
jb
jb
jb
jb
addb
cmpsl
fs
fcmovnu
fcmovnu
loop
sbb
add
add
add
pop
pop
cmc
cmc
cmc
cmc
cmc
cmc
cmc
add
add
add
add
push
push
push
push
fcmovnu
add
add
mov
div
imull
roll
add
test
test
dec
dec
dec
dec
dec
dec
dec
dec
outsl
outsl
outsl
outsl
pop
pop
pop
pop
xor
xor
xchg
dec
dec
dec
add
adc
adc
adc
adc
lea
xor
xor
sahf
sahf
sahf
sahf
sahf
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
lret
lret
lret
sub
dec
dec
dec
dec
dec
dec
add
add
add
add
out
out
add
add
test
add
add
add
leave
leave
pop
pop
gs
sbb
add
mov
add
add
imul
imul
add
add
add
iret
iret
iret
iret
iret
iret
add
add
add
add
and
and
and
xlat
xlat
xlat
xlat
xlat
inc
scas
scas
scas
scas
scas
scas
add
add
add
rol
rol
add
and
and
add
add
jno
jno
jno
jno
into
into
into
into
add
add
add
cmp
mov
cld
cld
add
add
add
add
add
adc
push
add
mov
sub
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
add
repz
sub
push
push
push
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
mov
cltd
cltd
cltd
xor
push
push
push
add
add
and
and
and
and
into
into
mov
mov
add
add
add
inc
inc
inc
inc
add
mov
mov
add
push
push
push
jns
jns
pop
pop
pop
pop
pop
pop
or
or
or
jnp
jnp
jbe
add
add
push
push
push
push
push
out
add
add
add
lcall
push
push
push
push
push
push
push
push
or
or
or
or
add
xlat
xlat
xchg
add
add
add
mov
push
push
push
push
add
add
add
add
roll
pop
pop
pop
pop
pop
pop
pop
add
add
je
je
add
mov
pop
pop
pop
div
div
div
data16
add
add
lods
lods
lods
lods
nop
add
add
dec
dec
dec
dec
dec
dec
dec
cmp
fcmovu
fcmovu
fcmovu
fcmovu
fiaddl
add
flds
add
add
add
jae
jae
add
add
add
add
add
xchg
aam
aam
movsb
movsb
movsb
add
add
add
cmp
cmp
cmp
cmp
add
pop
pop
pop
pop
pop
pop
ja
ja
add
add
rol
add
add
outsb
outsb
outsb
outsb
outsb
outsb
outsb
rol
rol
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
int
add
add
int3
int3
mov
mov
add
add
sti
add
cmp
lldt
rcl
shl
repnz
add
add
add
gs
jp
jp
imul
iret
iret
add
leave
leave
leave
rcl
rcl
rcl
add
iret
iret
iret
iret
iret
iret
iret
add
add
add
je
fldcw
mov
add
js
push
push
push
push
jns
out
out
aam
aam
aam
add
add
add
add
dec
add
add
add
sub
add
fimuls
mov
mov
mov
sbb
sbb
sbb
sbb
sbb
sbb
pop
pop
pop
pop
pop
pop
pop
imul
add
add
add
adc
stc
stc
stc
stc
stc
cmp
shlb
jo
jo
cmp
les
cmp
pop
pop
pop
pop
pop
lcall
hlt
hlt
hlt
hlt
hlt
hlt
add
add
add
add
ja
add
add
push
push
push
fldl
inc
cmc
cmc
mov
or
or
or
or
div
div
testl
js
js
cmp
and
jmp
xor
xor
int
int
daa
and
and
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
jo
adc
adc
adc
adc
xchg
xchg
add
inc
inc
jnp
add
inc
inc
inc
inc
inc
inc
inc
inc
add
add
add
add
add
add
add
add
add
add
add
pop
imul
jb
mov
or
add
xchg
add
and
xor
xor
sbb
cmp
adc
mov
pop
pop
xor
xor
add
cld
cld
cld
roll
add
add
add
and
jge
jge
jge
mov
mov
rcl
rcl
scas
add
and
ret
add
add
mov
imul
scas
sub
sub
sub
sub
mov
or
add
and
and
int3
cmc
cmc
cmc
cmc
add
add
add
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
xchg
xchg
xchg
jns
add
pop
pop
pop
pop
add
add
pop
pop
pop
pop
pop
add
add
add
add
pop
pop
pop
dec
dec
dec
dec
dec
add
add
add
add
test
mov
add
enter
addr16
add
add
add
insb
inc
inc
inc
inc
inc
inc
or
add
fcomp
fcomp
and
and
add
add
jp
jp
jp
jp
jp
jp
dec
dec
dec
dec
clc
clc
clc
pop
pop
pop
pop
pop
mov
rol
rol
or
mov
dec
dec
dec
and
and
and
add
pop
pop
push
push
add
add
add
add
mov
fcmovnu
add
add
add
add
adc
add
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
add
loopne
add
scas
scas
scas
cmp
xor
add
pop
pop
pop
pop
pop
pop
pop
pop
cmp
cmp
cmp
es
es
add
mov
sub
sub
sub
sub
sub
sub
sub
sub
clc
clc
clc
clc
push
push
lcall
pop
add
pop
sub
xchg
add
add
add
pop
add
push
add
add
add
add
nop
nop
add
add
rcl
add
add
bound
bound
bound
add
pop
pop
pop
pop
pop
pop
pop
add
jnp
jnp
jnp
jnp
pop
pop
pop
pop
pop
pop
jne
jne
rcl
rcl
sahf
sahf
sahf
sahf
sahf
sahf
add
jbe
add
add
scas
scas
ljmp
xor
xor
xor
xor
xor
xor
lock
jae
jae
jae
or
or
aad
aad
add
leave
aad
aad
add
inc
inc
jp
push
push
push
push
add
add
fstp
fstp
fnsave
sbb
sbb
add
add
outsl
outsl
outsl
outsl
add
and
mov
add
push
push
push
push
push
push
push
cmp
in
in
in
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
cli
cli
add
jge
add
out
sbb
cmc
push
push
push
push
push
jo
test
adc
xor
xor
xchg
push
inc
inc
inc
inc
inc
inc
xor
int3
int3
int3
int3
int3
repz
inc
inc
inc
inc
inc
add
add
add
add
add
inc
std
add
add
add
pop
pop
pop
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
add
pop
pop
pop
pop
pop
pop
pop
pop
adc
adc
adc
aaa
aaa
lods
lods
add
stc
stc
mov
repnz
add
add
rcl
rcl
rcl
rcl
roll
add
add
add
or
mov
in
in
addl
movsb
movsb
movsb
movsb
movsb
lret
lret
shrb
cs
and
aaa
aaa
push
push
push
push
push
push
push
and
lcall
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
sbb
mov
mov
add
add
mov
pop
pop
pop
add
add
add
sub
add
add
add
add
lret
lret
lret
lret
lret
lret
lret
lret
add
cmp
cmp
push
push
push
cmp
cmp
add
add
add
and
and
hlt
hlt
hlt
addl
sub
jne
jne
jne
jne
jne
sbb
sbb
sbb
sbb
sbb
sbb
rol
rol
in
in
in
add
add
add
nop
nop
add
add
das
das
das
das
das
stos
stos
stos
stos
stos
stos
mov
add
add
add
jo
dec
dec
dec
add
add
fs
leave
leave
leave
cmp
cmp
add
add
add
je
repz
add
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
add
daa
add
add
add
add
add
add
add
add
add
add
add
std
std
add
add
mov
add
ja
ja
ja
ja
dec
dec
dec
dec
dec
lret
daa
imul
mov
add
add
add
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
add
mov
mov
mov
mov
push
push
push
add
jno
add
add
call
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pop
pop
pop
pop
pop
pop
pop
pop
add
pop
mov
loop
mov
mov
mov
push
or
and
mov
out
jne
mov
lea
xlat
mov
mov
mov
mov
pop
shl
aam
and
xor
test
inc
xor
idivl
dec
xor
fimull
inc
sub
andb
outsb
loopne
in
popf
je
xor
pusha
pusha
in
jg
je
adcl
push
dec
sahf
movb
mov
mov
cmp
ss
mov
pushf
cltd
sub
fldl
pop
mov
pop
ficoms
pop
cld
sar
jg
insl
jmp
lcall
int3
test
pop
sbb
jnp
rolb
test
mov
adc
lret
dec
stos
and
rclb
pusha
call
pusha
add
sub
push
mov
int3
push
iret
add
sahf
jg
dec
addb
push
mov
andb
mov
test
add
loopne
test
mov
mov
pusha
shl
stos
inc
loopne
inc
mov
jae
jns
in
xor
scas
out
jbe
cld
pushf
xor
xchg
jnp
add
jp
mov
js
push
sub
adcb
out
mov
shl
pop
rolb
bound
insl
addb
stos
xchg
cmp
cmp
loopne
jl
add
cltd
fdivp
and
or
add
push
mov
sbb
push
inc
imul
add
flds
loopne
cmp
pop
mov
and
xor
cli
add
shl
mov
rolb
add
pusha
xlat
push
mov
roll
mov
int
mov
dec
fdivrs
icebp
repz
mov
test
jo
xchg
ss
cwtl
dec
cltd
xlat
rorb
mov
push
mov
xorl
pushf
cmc
push
sarb
adc
popa
jns
out
call
add
pushf
cmc
or
pop
loopne
sub
orb
pop
test
rolb
jle
mov
sarl
xor
cmpsb
add
sub
mov
push
lds
loopne
out
ss
test
in
cs
sbb
push
sub
jno
fnsave
xor
add
sbb
scas
lods
shlb
pushf
jo
int
cmpsb
shlb
cmp
in
mov
sarl
pusha
imul
out
mov
add
pusha
mov
loopne
in
xchg
jns
mov
shrb
loopne
mov
inc
mov
sbb
pusha
loopne
addb
aaa
xchg
mov
mulb
ds
push
popf
inc
cwtl
loope
loopne
mov
mov
ljmp
mov
jno
repz
adc
test
inc
add
cld
inc
jecxz
pop
aad
and
jle
leave
cwtl
sub
jno
or
nop
dec
xor
push
mov
add
rcrb
mov
test
fucom
psubb
insb
insb
or
fdivl
mov
movsl
jae
mov
test
int3
nop
push
pushf
adc
xchg
push
icebp
shll
cmp
mov
mov
cmp
pusha
rol
out
ljmp
flds
pusha
shlb
js
mov
lret
dec
cmpsl
cs
and
shlb
mov
test
inc
lock
lret
jmp
mov
loopne
jle
fwait
lahf
dec
sub
and
adc
adc
mov
insb
stos
inc
and
fdivrs
xchg
jl
xchg
ljmp
pop
pusha
fwait
popf
inc
imul
scas
rolb
daa
sub
jns
fs
push
jp
add
rolb
fdivrp
jp
inc
std
adc
sub
and
jae
mov
mov
popa
cmc
inc
jne
insl
sub
cmp
inc
mov
push
push
dec
adc
push
add
jmp
popa
or
and
insl
mov
mov
or
jecxz
addb
mov
add
ss
decl
jne
push
dec
enter
in
inc
adc
push
loopne
pop
pop
flds
cmpb
mov
iret
inc
jecxz
adc
fprem1
jge
mov
loopne
and
lods
cmovl
dec
jge
fimuls
cmp
aad
inc
xchg
push
mov
inc
in
and
sbb
shll
pusha
pushf
cwtl
add
rdpmc
xchg
xchg
adc
push
sti
data16
push
in
push
loope
pushf
adc
mov
sbb
aam
sub
adc
fs
cmp
pop
xchg
stos
jno
dec
gs
xchg
or
mov
push
add
mov
ljmp
adc
or
out
jb
fidivrl
add
xchg
cmc
adc
lcall
add
cli
repz
inc
push
cmp
mov
andb
and
loopne
sbb
lahf
gs
sub
add
push
cld
in
frstor
ret
ret
das
ja
ret
out
dec
adc
shlb
arpl
jmp
push
aam
in
push
add
outsl
mov
test
loopne
mov
add
push
mov
xor
inc
loopne
or
loopne
sub
pusha
mov
or
inc
rcll
repz
add
shlb
fisubrl
pusha
les
or
sti
int
xchg
add
arpl
fcomps
dec
outsl
aam
in
jp
dec
addr16
and
mov
ss
cmpsl
sub
in
mov
loopne
jle
inc
inc
pop
or
mov
mov
and
xor
add
into
jo
inc
jb
insb
mov
leave
in
push
mov
nop
push
not
push
mov
imulb
pusha
add
jo
inc
adc
pusha
mov
mov
cmp
pusha
mov
mov
adcb
jmp
xchg
xchg
mov
pusha
cmp
sbb
js
sbb
pusha
sahf
insl
mov
xor
lahf
stc
push
push
sub
adc
push
loopne
cmp
das
dec
fdivrl
and
sub
mov
insb
push
fdivrs
faddl
addb
fildl
inc
pop
cmp
xor
jnp
mov
and
std
jge
mov
ljmp
pop
or
and
pop
mov
pop
sbb
inc
inc
xchg
adc
pop
push
out
in
movsl
push
xchg
and
iret
bound
mov
icebp
aam
jl
ss
add
decb
pusha
mov
jb
add
add
insb
and
sub
pusha
push
and
jae
mov
pop
jae
imull
rcl
mov
pop
imul
ds
call
mov
in
bnd
fs
fs
fwait
cltd
pop
stos
arpl
inc
add
push
pusha
sbbb
mov
outsb
in
repz
or
arpl
pusha
pusha
in
ret
movsl
setg
inc
popl
inc
inc
in
test
mov
inc
pop
cmpl
push
andb
clc
pop
cld
mov
in
and
fsts
xchg
ficoms
pop
hlt
adcl
jnp
pop
sub
dec
lret
cmp
sub
dec
stos
jno
push
aaa
dec
mov
and
sbbb
and
inc
jge
sbb
shlb
int
loopne
push
mov
mov
and
push
loope
dec
faddl
xor
scas
pusha
ja
add
clc
mov
daa
std
lea
sbb
aaa
mov
lds
add
shl
shrl
stos
adc
dec
jns
inc
movsb
and
shlb
jmp
adc
sub
add
pop
jns
loopne
mov
push
jg
aas
jb
jmp
xor
sbb
push
jns
add
rclb
xor
ror
xchg
push
sbb
sbb
fimuls
xchg
xor
out
push
inc
and
popf
xor
xor
jnp
adc
cmp
mov
inc
and
iret
pusha
out
sbb
fsubs
cmp
aad
cmc
popa
loopne
mov
shll
and
loopne
test
jle
cmp
lods
and
leave
mov
cli
jnp
push
daa
mov
jge
repz
les
and
out
add
insl
cli
pop
shrb
and
je
push
rcll
roll
pusha
andl
andl
mov
cmp
daa
ret
into
out
and
divb
cli
or
add
and
jmp
mov
cmp
dec
clc
and
and
aas
jmp
push
mov
or
and
push
test
js
push
cld
jp
add
movsl
jnp,pt
or
add
mov
dec
std
push
mov
and
mov
nop
rcr
out
jb
push
pusha
and
inc
subl
loopne
push
inc
xchg
and
shr
nop
pop
push
mov
and
and
add
cltd
cmc
lea
xlat
gs
mov
jle
inc
popf
pusha
xchg
sub
and
arpl
addr16
or
pusha
xchg
push
mov
lds
ss
xor
sub
aam
notb
mov
and
mov
jbe
cs
pusha
push
mov
pop
repz
rol
cmp
sub
faddl
and
mov
push
cmpl
jp
shlb
cmpl
adc
jge
xor
xor
movsl
sub
add
mov
sbb
addb
xchg
xor
andb
mov
stos
inc
add
pop
push
dec
and
add
negb
negb
jae
shlb
and
inc
mov
and
subb
rclb
adc
or
filds
and
jnp
cmpsb
and
insb
fs
jmp
dec
sub
mov
pop
out
and
xchg
mov
inc
xchg
je
popa
or
pop
inc
mov
inc
inc
pop
mov
mov
and
shlb
and
shlb
fwait
aas
in
jne
aam
cmpsb
pusha
and
je
iret
add
stos
rolb
pop
aas
jns
pop
hlt
out
mov
ja
sbb
xor
push
cld
jl
or
and
push
push
sbbl
pop
aas
mov
shll
sbb
add
fsubrs
rolb
and
and
andb
mov
mov
mov
mov
cmpsl
cmp
jge
xchg
scas
sbb
icebp
xchg
ljmp
je
push
add
push
cld
fldenv
and
stc
jb
daa
lret
int3
les
or
xchg
and
int
loopne
pop
lock
add
mov
pusha
xorb
in
jo
xor
std
sub
inc
sbb
in
andb
loop
pop
sets
xor
xor
pop
leave
out
lock
adc
mov
addr16
pusha
pusha
pushf
pop
pusha
out
xor
xchg
hlt
sub
shlb
repz
loope
mov
inc
test
mull
sub
mov
dec
stos
inc
loopne
pop
flds
add
gs
add
loopne
xchg
in
das
adc
insb
or
fstps
or
add
movsl
jle
add
inc
xchg
loop
out
xlat
adc
mov
rcrb
mov
outsl
das
aas
loopne
add
test
jo
sbb
cwtl
fwait
xchg
xor
xchg
push
add
push
mov
ljmp
mov
and
sbb
call
cmc
outsl
push
add
mov
test
and
out
inc
lcall
test
movsb
loopne
cmp
dec
xlat
pop
jo
dec
xor
leave
outsb
inc
lds
mov
std
add
dec
pop
adc
adc
add
jecxz
in
pop
or
addb
imul
adc
fiadds
jne
inc
loopne
sub
or
stos
mov
and
rorb
xor
scas
in
movsl
fistpll
and
and
dec
jno
mov
lahf
xchg
and
and
and
pop
and
pusha
lock
outsb
push
inc
cmc
lods
mov
mov
lods
mov
or
xchg
xchg
mov
jne
push
out
ret
sub
test
fiadds
or
outsl
dec
addr16
pextrw
test
xchg
cmpsb
pusha
shlb
or
addb
push
in
ret
ljmp
cmp
or
pusha
int3
xchg
movsl
push
mov
outsb
call
mov
cltd
addr16
movb
mov
movsl
xchg
fstl
mov
pop
mull
mov
push
nop
and
inc
in
mov
xchg
repz
pushf
pop
outsl
fwait
mov
mov
sub
mov
sti
pusha
loopne
jle
mov
sarb
push
aam
add
pusha
cmpsl
sub
addb
mov
and
mov
imul
add
pushf
insl
sets
rorb
dec
call
jg
imul
stos
push
dec
jnp
lahf
fwait
jg
daa
push
icebp
fst
into
jnp
mov
jno
xchg
mov
lock
test
mov
xchg
and
adc
sbb
and
gs
fistps
cmp
stos
sub
mov
stos
cmc
popf
xor
sti
mov
loopne
arpl
and
out
gs
inc
lock
inc
out
mov
pusha
xchg
call
lds
loopne
xorl
and
insb
arpl
inc
mov
push
rcl
mov
pop
jne
add
push
mov
pusha
out
pop
pop
shl
pusha
add
stc
mov
cli
in
fs
add
stc
sbb
testb
les
mov
pop
rclb
inc
dec
lea
push
push
mov
dec
popa
push
jp
push
cmp
jne
add
push
xchg
sub
lcall
shll
in
cmp
shlb
fs
mov
push
jle
js
into
push
js
addb
sbb
jb
movsl
into
sub
mov
or
scas
and
pusha
popa
push
addr16
or
insb
mov
and
loopne
pushf
or
pusha
pusha
sarb
call
or
mov
and
cltd
mov
or
icebp
loopne
xor
mov
pop
fsts
iret
and
xor
mov
xor
add
in
sub
mov
sub
shl
mov
xchg
rcrl
inc
and
ret
pop
ljmp
shlb
pusha
std
mov
sbb
subl
imull
mov
mov
push
push
xor
cmp
mov
push
jle
cmp
cmp
shl
mul
and
loopne
loopne
fiadds
add
loopne
jl
push
icebp
mov
adc
fbld
cmp
dec
sbb
dec
pusha
lahf
ljmp
pusha
or
shrb
lds
jmp
jp
and
mov
xor
add
shl
sub
mov
insl
mov
enter
and
xor
add
xor
sub
shlb
ds
repnz
sarb
leave
sbb
inc
mov
adc
or
or
shl
pop
into
sbb
cmp
lds
fnsave
in
mov
cmp
testl
rolb
inc
fisubs
add
aaa
aaa
or
push
fwait
fs
loopne
cmp
jo
sbb
shlb
loope
fs
out
sarl
cs
and
inc
hlt
fcmovne
mov
inc
and
push
add
cmp
mov
pop
imul
sub
sbb
pusha
mov
pusha
nop
push
into
stc
test
pusha
mov
or
lds
scas
lods
inc
orb
jnp
mov
sub
ljmp
bound
and
xchg
cmp
loopne
popf
out
jbe
push
and
fcmovu
iret
cli
add
loopne
aad
mov
aam
cmpsb
add
jnp
repz
loopne
gs
mov
test
addb
add
mov
dec
adc
sub
icebp
test
inc
jg
add
sarb
add
add
mov
mov
bound
stc
inc
cmp
inc
jnp
repz
inc
aam
lea
js
cmp
lea
rcrl
add
mov
outsb
jmp
sahf
xchg
mov
jge
test
pusha
call
jp
scas
pop
adcl
mov
cmp
push
popa
or
shrb
mov
nop
mov
addr16
and
jmp
push
loopne
loop
jbe
and
ljmp
punpckhdq
mov
sub
mov
mov
pop
or
add
pop
stc
jl
lock
scas
add
cmpsb
and
insl
jp
andb
shll
sub
inc
inc
movl
insb
adc
dec
fimull
cmc
dec
push
mov
test
add
mov
and
ja
sub
rorb
mov
push
cmp
andb
std
push
fiadds
add
xchg
ss
inc
pop
outsb
cmp
lcall
push
add
push
push
sub
xchg
lock
mov
jbe
std
add
and
jb
inc
and
mov
inc
sti
sub
add
mov
aaa
addl
fwait
cli
xchg
sarb
popa
push
push
push
psubusb
adc
xor
call
int3
pop
mov
inc
loopne
cmp
or
pop
mov
mov
dec
mov
or
cmpsb
and
fiaddl
cld
xchg
adc
sub
loopne
jmp
jp
sub
inc
dec
pop
lea
pop
fnstcw
push
loopne
push
loopne
fistps
daa
push
stos
mov
test
imul
add
iret
push
out
mov
mov
outsl
lret
icebp
ret
mov
sub
in
and
xorb
xor
inc
push
jmp
and
sbb
sbb
add
xorl
add
and
adc
adcb
push
xor
rclb
push
rcrb
pusha
rorb
add
mov
dec
call
scas
not
fldt
sar
jb
sbb
lea
push
mov
and
in
mov
mov
int
out
jb
stc
mov
ficoms
dec
call
xlat
sbb
test
pusha
jno
cmpsb
pusha
and
or
inc
fldt
rolb
pusha
loop
aas
arpl
and
dec
mov
jae
add
dec
call
sbb
pop
stc
out
gs
jae
aad
ret
rolb
in
cmp
das
mov
mov
inc
mov
je
clc
adc
and
adc
test
sar
aad
rolb
inc
dec
sub
pop
test
mov
xor
andb
cmp
fcoml
or
fwait
sbb
add
js
adc
and
mov
imul
inc
add
out
and
push
add
data16
xchg
inc
stc
andb
shlb
loopne
fdiv
pop
mov
inc
xlat
das
fistps
add
mov
push
inc
xchg
add
out
int3
nop
mov
arpl
scas
mov
out
jae
cmp
cmp
aam
and
lahf
push
and
test
rolb
mov
cli
aas
add
xchg
sbb
dec
cmp
add
inc
dec
pop
sub
outsl
cli
adc
stos
inc
sarb
or
xchg
push
loopne
jl
jo
shl
mov
jno
addl
addr16
dec
sbb
lret
sbb
aas
xchg
outsl
jno
loopne
dec
add
dec
shr
nop
push
add
inc
inc
push
add
fisttpl
daa
data16
mov
inc
fsubrs
repnz
stos
and
mov
outsl
cwtl
repz
pushf
lret
into
mov
jge
pusha
mov
push
inc
push
or
mov
xchg
mov
test
rclb
adc
mov
loopne
fidivrs
or
inc
jecxz
rcll
call
inc
push
inc
pusha
mov
ffree
fcoms
sarb
pop
test
and
jnp
loop
cmpsl
fidivrl
stos
data16
or
lahf
jno
loopne
xor
mov
xor
lock
jg
push
pop
sbb
fwait
clc
xchg
cmp
mov
ljmp
jne
push
mov
mov
add
mov
ror
push
mov
andb
sbb
xlat
or
sti
mov
and
add
inc
lcall
cmp
inc
and
mov
int
shlb
out
xlat
lcall
jp
xor
or
cmp
and
rolb
and
inc
or
cmpb
lea
cmpb
or
inc
lret
and
push
cmp
lds
mov
add
and
mov
mov
cld
mov
add
push
push
push
push
call
sub
add
imul
lea
and
test
je
mov
push
push
bnd
test
cld
jne
mov
add
push
push
push
push
call
test
jne
xor
jmp
lea
movl
push
push
push
call
cmp
lea
jne
movzbl
or
pop
mov
not
imul
and
jne
call
loop
mov
mov
stc
notrack
sbb
mov
add
add
mov
mov
mov
inc
or
lea
lea
add
lea
add
sub
jmp
push
mov
jmp
lcall
jae
fnstcw
and
mov
fisubrl
xor
leave
add
loopne
mov
jno
popl
jbe
cmpsb
inc
pusha
cwtl
mov
shlb
icebp
push
es
jno
mov
mov
pusha
mov
loopne
icebp
push
dec
xchg
jmp
shrl
mov
xor
mov
cmp
loop
pusha
adc
xchg
mov
fcompl
add
mov
loop
psraw
mov
mov
or
mov
and
in
sub
mov
fbstp
push
mov
in
push
adc
test
mov
rol
pop
and
sbbb
jge
jno
insb
push
out
je
in
arpl
movsl
xchg
cmpsb
addb
inc
mov
dec
jecxz
gs
mov
add
loope
adc
xor
out
xchg
pop
or
and
add
test
leave
fidivl
cld
push
ja
fsubp
ret
adc
bound
add
mov
mov
sbb
loopne
cmp
test
loopne
add
sub
loope
mov
pop
cmp
pop
rorl
ljmp
sbb
cld
ja
sbb
cmpsb
pusha
inc
js
daa
cmp
fwait
ret
or
shrb
xchg
cmp
test
inc
jno
fs
pusha
cmp
add
cmp
rolb
and
shll
and
addb
lea
popf
adc
sub
dec
and
subb
adc
pusha
inc
ja
shll
mov
mov
inc
out
mov
or
cmp
jbe
js
push
rolb
pavgw
xor
and
adc
mov
int3
sbb
sbb
in
je
je
xor
dec
orl
jmp
pusha
insb
mov
outsl
or
loopne
and
and
add
ficompl
pop
sahf
repnz
add
lcall
cwtl
mov
in
cmp
fadd
xchg
add
lock
mov
push
jbe
adc
adc
jl
shrl
stc
movsb
add
mov
fstl
insb
adc
imul
in
lock
push
pop
sub
pusha
es
pop
jb
sbb
sbb
and
xlat
ljmp
lret
aaa
popa
mov
and
jecxz
inc
fistpll
xor
or
fcmove
add
pop
or
xorl
lea
xor
lcall
es
inc
and
mov
shl
faddl
xor
fstps
add
test
outsb
sbb
hlt
inc
loop
and
and
lret
pop
ja
jecxz
add
cwtl
push
sub
and
jmp
mov
test
mov
cmp
xchg
inc
popa
sbb
imul
cmp
pusha
adc
push
and
adcb
dec
jecxz
gs
aad
push
es
imul
dec
jmp
test
fadd
loop
and
loope
push
stc
cmpsl
sbb
imul
xchg
ret
inc
aas
sbb
mov
stos
loopne
add
loopne
jb
mov
push
cmpsb
shlb
adc
lods
and
aas
and
loopne
aaa
mov
fs
daa
pop
xor
sub
push
addr16
add
xor
and
pushf
inc
dec
sub
loopne
shll
or
bound
pusha
inc
xor
and
addb
add
mov
jp
cmp
int
add
and
mov
and
and
in
pop
xor
jns
cmp
data16
loope
push
loopne
cmpsl
pop
add
jae
xchg
sub
add
jp
mov
inc
sbb
adc
push
fdiv
or
loopne
sub
add
test
and
lahf
jns
push
fs
pop
call
imul
repnz
mov
mov
mov
pusha
and
cmp
mov
and
and
scas
loopne
dec
aad
mov
out
repz
and
aam
pop
cli
xor
sbb
out
fadd
mov
xor
icebp
rcr
xchg
jecxz
in
div
fistl
stc
dec
add
shlb
mov
jno
push
inc
xor
loop
stos
lret
sub
call
mov
inc
testl
fcmovnb
cltd
adc
out
loope
mov
into
test
lahf
adc
mov
add
cmp
dec
dec
scas
shl
mov
mov
lock
sbb
rclb
or
xor
push
hlt
jmp
lock
pop
rcr
nop
push
lahf
jb
dec
and
shlb
mov
jp
jmp
or
fwait
cmpsl
jnp
pusha
and
jp
and
inc
inc
mov
dec
adcl
pop
ret
icebp
or
loopne
loopne
xchg
sbb
out
cmp
add
notb
jae
jmp
aad
mov
sub
sub
mov
inc
inc
add
pusha
push
add
xchg
test
shl
jmp
mov
scas
mov
xor
out
adc
mov
xor
push
pusha
jecxz
loopne
dec
inc
iret
sbb
insb
fmull
and
jge
sub
add
xchg
cmpsl
xchg
pop
adc
pusha
outsl
mov
loopne
inc
je
add
sar
lods
mov
cmp
loope
repz
xchg
sahf
lea
push
push
jno
lea
jl
aaa
nop
fisubs
or
rolb
inc
imul
sbb
mov
orb
out
xchg
pop
lds
and
lea
cmp
stc
js
repz
pop
push
aam
push
inc
and
and
push
mov
inc
mov
sub
mov
pop
xor
push
decb
add
cmp
xor
popa
xchg
int3
loope
addb
jno
mov
cmp
add
cmpsl
addb
out
test
and
addr16
sbbl
jmp
fcoms
xchg
and
pusha
cmc
cli
hlt
adc
mov
into
push
cmp
adc
add
loop
loop
mov
add
cwtl
push
mov
or
lock
dec
lret
sahf
mov
add
test
dec
pusha
mov
jl
outsb
cmp
dec
ja
outsb
stos
andb
sub
and
loopne
outsb
add
and
mov
add
cmpsb
add
or
inc
cli
jg
out
aam
shl
xor
iret
shl
cli
cmp
sbb
neg
adc
inc
loopne
repz
test
mov
mov
sbbb
add
out
std
nop
andl
adc
adc
sbb
xor
shlb
mov
movb
repz
and
sti
sbb
mov
mov
movsb
inc
inc
cmpsl
sbb
sub
push
and
xchg
test
xor
loopne
sbb
mov
and
cmpb
addb
mov
and
or
add
sbb
pop
out
dec
iret
fldl
adcb
add
leave
mov
or
arpl
stos
cmp
loopne
adc
cltd
mov
cmp
clc
scas
mov
push
or
and
sub
mov
mov
aas
pop
cmpsl
cltd
imul
imul
and
adc
jno
test
lret
decl
mov
sub
popa
inc
sub
and
stos
sub
mov
rcr
fiadds
add
pusha
inc
pusha
mov
push
adc
xchg
xor
rorl
addr16
movsl
pop
pop
jge
add
in
shlb
mov
loopne
loope
loopne
adc
pop
jae
lds
push
xchg
mov
or
in
leave
sub
loopne
je
mov
lea
bnd
or
ljmp
push
jbe
test
push
jb
ja
imul
mov
mov
lods
add
lahf
pop
jmp
xchg
sarb
cmpsb
mov
shll
or
inc
imul
adc
cmp
fs
dec
into
mov
loopne
mov
add
shlb
dec
ljmp
std
ficoml
pusha
cmp
mov
cmp
cmp
jo
xchg
sub
mov
cmp
lods
mov
out
xchg
lds
push
sbb
push
enter
loopne
scas
or
pusha
xor
loopne
or
mov
add
pop
dec
push
and
pusha
shl
adc
cltd
loope
mov
aad
sub
add
add
cmpsl
mov
mov
jg
test
rol
mov
jmp
rcrb
pop
sub
ja
ret
xchg
push
stos
adc
add
call
push
and
inc
mov
ret
ret
pop
int
test
pusha
imul
test
adc
mov
movsl
mov
add
fs
adc
shll
add
loopne
jbe
jmp
fists
mov
ljmp
jo
dec
jmp
sub
jae
and
add
subl
andb
add
sub
mov
fdivs
nop
xchg
lods
ret
pusha
popf
stos
inc
sar
cld
pop
adc
aaa
aad
mov
push
inc
loopne
and
xor
hlt
pop
dec
idivl
nop
ss
jl
pushf
and
mov
mov
inc
les
and
test
lret
dec
lret
xchg
outsb
mov
jg
andb
add
push
dec
xchg
add
sahf
call
ret
clc
je
pushf
lcall
aad
std
pop
xor
adc
and
loopne
gs
cld
inc
fcoms
xor
sbb
jecxz
stos
pushf
movsl
sub
movsb
mov
mov
sbb
aad
rolb
shlb
xchg
into
push
mov
std
and
loop
add
rclb
mov
xchg
mov
mov
add
pusha
xor
rolb
cmpsb
pusha
cmpb
fldcw
mov
cmpb
add
test
push
dec
mov
pop
cltd
leave
seta
sub
dec
daa
sbb
sub
mov
leave
mov
sbb
adc
add
cmp
adc
iret
sti
cmp
test
call
pusha
and
add
cld
hlt
sbb
inc
repnz
fstpl
add
pop
cmp
mov
in
stc
pop
rcrl
dec
cltd
scas
and
loop
mov
pusha
jg
aas
jle
add
je
cmp
cltd
and
add
or
and
sub
lret
sub
mov
mov
inc
mov
dec
and
inc
xchg
jne
movsl
adc
mov
rolb
fiadds
loopne
adc
stc
push
rolb
or
push
sahf
out
jecxz
add
ljmp
xchg
shr
push
add
xchg
aam
or
aas
cmp
lret
mov
sbb
mov
jbe
shlb
insl
add
shlb
and
xor
ljmp
sbb
lods
mov
gs
mov
aad
ret
inc
andb
mov
jecxz
add
cltd
clc
add
loopne
sbb
dec
filds
and
cld
mov
jge
or
jecxz
push
xchg
mov
insb
dec
lock
inc
cmpsl
jp
mov
and
insl
push
inc
dec
je
js
mov
xchg
mov
test
and
mov
mov
test
loopne
out
add
pop
pop
jbe
into
lods
and
add
sub
mov
jne
or
loopne
leave
add
bnd
rol
fprem1
jbe
mov
fiadds
push
rorb
int
ljmp
in
xor
sbb
cmp
popf
push
lods
and
rclb
add
fldenv
dec
dec
jge
mov
shr
iret
cmpsl
lods
repnz
mov
inc
rclb
lret
add
gs
aad
mov
mov
inc
fscale
shl
negb
in
testb
pusha
inc
imul
ss
daa
cmp
push
sbb
ds
inc
mov
out
sbb
rolb
add
and
lea
xor
add
mov
movsl
push
loope
aaa
mov
sbb
inc
psrlw
stos
shlb
addb
inc
outsl
or
and
pop
daa
mov
inc
mov
sbb
fs
cwtl
or
loopne
push
and
cmpsl
in
js
push
pop
push
in
mov
ret
fisttpl
pusha
addb
jl
add
out
stos
xchg
mov
xchg
jae
mov
or
pusha
repz
hlt
dec
adc
pusha
subb
and
loopne
ljmp
repnz
out
movsb
and
out
cmpsb
shlb
lods
jecxz
mov
mov
adc
out
mov
dec
and
sub
add
pusha
or
add
mov
loopne
aam
test
mov
dec
xchg
lds
sub
and
ds
mov
push
xor
in
aad
std
mov
add
sbbb
xor
lods
add
fnstcw
xchg
das
mov
imul
lods
rolb
popf
das
inc
pop
mov
loopne
or
cmp
and
jle
add
cmp
push
fistl
loopne,pn
sbb
and
inc
pusha
movsb
rolb
pop
insl
iret
sub
jp
mov
xchg
or
pop
xlat
cwtl
ss
inc
stc
imul
inc
shlb
incb
pusha
pusha
mov
add
xor
inc
sbb
xchg
sub
push
bound
sbb
icebp
test
dec
lret
ret
roll
fmulp
adc
mov
push
and
fidivrl
sub
add
mov
nop
cld
jae
add
pop
in
mov
seto
in
leave
nop
jmp
add
ret
stos
jle
push
clc
repnz
nop
cld
jae
add
add
add
icebp
icebp
mov
testl
nop
push
mov
leave
nop
jmp
xchg
dec
and
repnz
nop
cld
jae
jecxz
pop
pop
add
sbb
movsb
rolb
hlt
jle
and
add
add
clc
repnz
nop
cld
jae
add
mov
movsl
mov
clc
repnz
nop
cld
jae
dec
add
xchg
inc
dec
nop
push
mov
leave
nop
jmp
rolb
add
rolb
hlt
xchg
rep
clc
repnz
nop
cld
jae
add
add
insb
add
mov
nop
push
mov
leave
nop
jmp
add
sbb
movsb
push
ret
clc
repnz
nop
cld
jae
roll
jne
rolb
rcrb
aad
sar
nop
nop
cld
jae
add
mov
outsl
stos
clc
repnz
nop
cld
jae
add
dec
add
sbb
repnz
nop
cld
jae
dec
add
add
push
mov
xchg
ret
and
pop
jle
mov
or
clc
repnz
nop
cld
jae
adc
fistpl
push
mov
xchg
ret
ret
incb
add
push
mov
xchg
ret
add
jae
add
xlat
add
clc
repnz
nop
cld
jae
data16
and
push
fs
repnz
nop
cld
jae
insb
add
inc
dec
sbb
loop
push
mov
xchg
ret
add
bound
and
push
mov
leave
nop
jmp
sbb
sbb
add
mov
xchg
ret
lock
add
sbb
dec
mov
cmc
inc
clc
repnz
nop
cld
jae
add
add
or
sub
mov
inc
mov
nop
nop
cld
jae
add
stos
insb
add
add
lock
out
rclb
jmp
add
add
clc
repnz
nop
cld
jae
add
add
hlt
xchg
add
dec
jne
clc
repnz
nop
cld
jae
add
stos
push
dec
loope
lret
nop
push
mov
leave
nop
jmp
add
rolb
add
decb
and
and
mov
xchg
ret
add
rcr
movsb
xchg
xchg
fcoml
nop
nop
cld
jae
stos
add
pop
inc
add
sbbl
nop
nop
cld
jae
roll
xchg
add
lock
mov
mov
xchg
ret
add
cmpb
clc
repnz
nop
cld
jae
xor
add
add
rolb
sub
repnz
nop
cld
jae
add
xlat
jecxz
mov
leave
push
mov
xchg
ret
mov
pop
add
je
clc
repnz
nop
cld
jae
add
clc
repnz
nop
cld
jae
xchg
xchg
add
add
add
pop
push
data16
mov
clc
repnz
nop
cld
jae
push
add
and
inc
lea
xchg
ret
push
mov
lock
inc
jp
addb
and
pusha
add
add
jae
addb
add
repnz
nop
cld
jae
mov
loope
push
mov
xchg
ret
or
add
xchg
pop
xchg
subl
nop
push
mov
leave
nop
jmp
in
xchg
mov
nop
nop
cld
jae
add
push
add
add
push
mov
leave
nop
jmp
inc
push
sbb
stos
pop
adc
mov
xchg
ret
in
add
icebp
add
scas
fwait
push
mov
xchg
ret
roll
hlt
fsubs
rorb
adc
push
push
mov
xchg
ret
sbb
shll
jae
pop
pop
push
mov
xchg
ret
rcl
es
sbb
inc
add
in
leave
nop
jmp
add
inc
add
pusha
notl
mov
xchg
ret
add
add
add
push
je
clc
repnz
nop
cld
jae
es
add
and
nop
push
mov
leave
nop
jmp
add
push
popl
lock
and
jb
clc
repnz
nop
cld
jae
add
mov
clc
repnz
nop
cld
jae
push
insb
stos
mov
out
clc
repnz
nop
cld
jae
add
pop
push
mov
clc
repnz
nop
cld
jae
add
add
add
in
leave
nop
jmp
push
ret
jbe
cld
nop
push
mov
leave
nop
jmp
rcrb
data16
xchg
add
add
add
add
add
bound
sub
fwait
mov
nop
push
mov
leave
nop
jmp
stos
bound
add
mov
js
nop
push
mov
leave
nop
jmp
add
jecxz
in
sub
loopne
pop
clc
repnz
nop
cld
jae
add
inc
hlt
insb
lock
adcb
add
repnz
nop
cld
jae
add
adc
mov
fld1
clc
repnz
nop
cld
jae
add
add
add
rorl
test
pop
add
clc
repnz
nop
cld
jae
sar
push
jl
nop
push
mov
leave
nop
jmp
lds
jno
add
push
mov
xchg
ret
add
add
add
lea
nop
nop
cld
jae
icebp
mov
fs
in
inc
rolb
sbb
clc
repnz
nop
cld
jae
insb
add
cmc
xlat
sarl
in
nop
push
mov
leave
nop
jmp
add
mov
add
loopne
les
aam
lock
enter
repnz
nop
cld
jae
fildl
lock
roll
fsubrs
pop
push
mov
xchg
ret
sbb
add
add
add
lods
inc
pusha
sub
clc
repnz
nop
cld
jae
add
add
mov
xchg
ret
add
add
pop
and
mov
mov
cmp
ret
stos
add
in
stos
add
lahf
add
clc
repnz
nop
cld
jae
add
cmp
add
cmp
push
mov
leave
nop
jmp
push
in
add
lock
repz
clc
repnz
nop
cld
jae
mov
cmc
add
or
in
leave
nop
jmp
add
pushl
push
mov
xchg
ret
add
add
movzwl
clc
repnz
nop
cld
jae
inc
add
add
addb
repnz
nop
cld
jae
jle
push
cmp
add
clc
repnz
nop
cld
jae
cmc
add
push
add
mov
xchg
addr16
add
jae
icebp
jle
rcl
sbb
pusha
adcb
add
nop
jmp
mov
add
aas
clc
repnz
nop
cld
jae
inc
lock
add
clc
repnz
nop
cld
jae
stos
cmp
stos
roll
add
add
clc
repnz
nop
cld
jae
fildl
add
push
clc
repnz
nop
cld
jae
in
add
shlb
add
dec
ret
and
clc
repnz
nop
cld
jae
sub
inc
xchg
pop
mov
insb
inc
add
stos
ret
add
sub
mov
push
mov
xchg
ret
and
add
adc
repnz
nop
cld
jae
insb
add
shl
roll
nop
push
mov
leave
nop
jmp
mov
add
shl
mov
jp
jbe
clc
repnz
nop
cld
jae
add
insb
hlt
or
test
add
nop
push
mov
leave
nop
jmp
add
gs
clc
repnz
nop
cld
jae
add
add
popa
clc
repnz
nop
cld
jae
in
adc
hlt
add
add
nop
cld
jae
add
insb
add
addb
pusha
clc
repnz
nop
cld
jae
add
add
stos
in
add
inc
rorb
repnz
nop
cld
jae
mov
insb
rcl
aas
pop
clc
repnz
nop
cld
jae
pop
add
insb
lds
xchg
add
mov
leave
nop
jmp
mov
in
jmp
add
add
es
lock
sub
rcrl
clc
repnz
nop
cld
jae
add
stos
add
mov
icebp
inc
dec
es
repnz
nop
cld
jae
add
clc
repnz
nop
cld
jae
add
add
pop
lods
add
clc
repnz
nop
cld
jae
mov
xlat
mov
add
cwtl
int
icebp
nop
push
mov
leave
nop
jmp
sarb
add
repz
repnz
nop
cld
jae
es
insb
add
movsb
jae
sub
add
repnz
nop
cld
jae
xchg
mov
jo
call
clc
repnz
nop
cld
jae
pop
dec
sub
sub
add
mov
leave
nop
jmp
rolb
stos
mov
pop
mov
push
mov
xchg
ret
bound
insb
shlb
nop
push
mov
leave
nop
jmp
jne
mov
sbb
fwait
mov
clc
repnz
nop
cld
jae
insb
add
addb
jbe
lods
movzwl
clc
repnz
nop
cld
jae
mov
aad
test
repnz
nop
cld
jae
insb
add
dec
xor
clc
repnz
nop
cld
jae
bound
arpl
repnz
nop
cld
jae
mov
add
mov
adc
ret
mov
rolb
inc
inc
add
clc
repnz
nop
cld
jae
icebp
shlb
xchg
ret
je
add
clc
repnz
nop
cld
jae
fdivrs
bound
jmp
mov
xchg
ret
add
add
vaddsubps
push
or
nop
nop
cld
jae
add
inc
jne
fs
pop
clc
repnz
nop
cld
jae
mov
add
add
add
notl
repnz
nop
cld
jae
add
add
fld1
clc
repnz
nop
cld
jae
hlt
mulb
pop
add
mov
clc
repnz
nop
cld
jae
add
add
cmp
pop
cmp
repnz
nop
cld
jae
mov
add
ret
clc
repnz
nop
cld
jae
mov
add
push
mov
leave
nop
jmp
add
add
lock
rclb
jne
add
jecxz
sbb
lock
pop
mov
clc
repnz
nop
cld
jae
lock
rcl
cmc
add
je
sar
xchg
ja
push
mov
xchg
ret
add
add
mov
pushf
mov
repnz
nop
cld
jae
incb
bound
repnz
nop
cld
jae
add
add
add
dec
js
je
clc
repnz
nop
cld
jae
jne
pop
mov
repnz
inc
add
pop
shl
add
add
test
nop
push
mov
leave
nop
jmp
cmp
ret
push
push
mov
xchg
ret
add
add
rolb
add
lahf
insb
inc
add
add
add
mov
push
nop
push
mov
leave
nop
jmp
shl
add
in
sub
rorb
and
mov
push
fld1
clc
repnz
nop
cld
jae
add
dec
xor
hlt
add
sar
repnz
nop
cld
jae
mov
sub
int3
mov
movsb
clc
repnz
nop
cld
jae
pop
mulb
je
incb
or
push
clc
repnz
nop
cld
jae
add
add
rclb
icebp
pusha
inc
add
add
in
sbb
add
mov
nop
push
mov
leave
nop
jmp
add
xor
push
clc
repnz
nop
cld
jae
xchg
add
movzwl
clc
repnz
nop
cld
jae
add
jae
shrl
mov
mov
xchg
ret
lock
add
add
dec
fwait
push
mov
xchg
ret
rolb
pop
add
sarl
outsl
fld1
push
mov
xchg
ret
add
shlb
lock
dec
out
sbb
push
mov
shrb
cmp
or
mov
add
xchg
add
int
add
sbb
add
add
add
xchg
add
nop
push
mov
leave
nop
jmp
movsb
add
push
mov
xchg
ret
pop
lock
push
add
dec
movl
in
leave
nop
jmp
add
andb
mov
xchg
ret
or
add
add
shl
clc
repnz
nop
cld
jae
shrb
push
push
clc
repnz
nop
cld
jae
add
insb
addb
in
push
clc
repnz
nop
cld
jae
in
sbb
adc
je
inc
imul
nop
push
mov
leave
nop
jmp
mov
mov
jmp
add
shlb
stos
and
in
ret
add
jmp
nop
push
mov
leave
nop
jmp
add
xorb
fwait
add
push
mov
xchg
ret
add
bound
xlat
sbb
xchg
add
nop
nop
cld
jae
inc
add
incb
shrb
add
push
mov
xchg
ret
add
je
add
sar
mov
clc
repnz
nop
cld
jae
lock
sbb
lock
mov
cmp
push
mov
leave
nop
jmp
rolb
push
push
clc
repnz
nop
cld
jae
fadds
xlat
lds
xlat
add
xchg
push
clc
repnz
nop
cld
jae
add
add
add
add
mov
popf
clc
repnz
nop
cld
jae
or
add
mov
clc
repnz
nop
cld
jae
add
roll
add
pop
call
clc
repnz
nop
cld
jae
jne
add
outsb
stc
push
clc
repnz
nop
cld
jae
mov
add
mov
and
push
mov
leave
nop
jmp
add
cmp
add
mov
xchg
ret
add
add
add
pop
push
mov
xchg
ret
mov
insb
mov
xor
add
push
cmp
movsb
add
add
xlat
roll
xor
add
repnz
nop
cld
jae
add
add
sub
inc
in
outsb
and
mov
xchg
ret
add
add
add
push
out
andb
and
xlat
push
clc
repnz
nop
cld
jae
add
testb
bound
icebp
and
nop
nop
cld
jae
add
icebp
roll
add
outsl
push
clc
repnz
nop
cld
jae
mov
std
mov
clc
repnz
nop
cld
jae
add
add
pop
sub
push
mov
xchg
ret
sbb
add
add
xorps
xchg
ret
adc
mov
add
sarb
clc
repnz
nop
cld
jae
or
add
and
pusha
lret
mov
nop
push
mov
leave
nop
jmp
add
pop
add
stos
xchg
sub
repz
repnz
nop
cld
jae
add
add
push
nop
push
mov
leave
nop
jmp
jecxz
fsubrs
push
push
mov
xchg
ret
cmc
addb
mov
mov
repnz
nop
cld
jae
add
add
mov
mov
xchg
ret
add
add
stos
lds
add
clc
repnz
nop
cld
jae
add
data16
or
loopne
out
push
push
and
hlt
xor
nop
cld
jae
add
xor
shrb
lret
sbb
clc
repnz
nop
cld
jae
fdiv
and
adc
push
push
mov
xchg
ret
mov
jecxz
add
add
nop
nop
cld
jae
add
sub
divb
in
fisttpl
nop
nop
cld
jae
add
add
add
out
movzwl
push
mov
xchg
ret
add
add
jecxz
mov
sub
repnz
nop
cld
jae
movsb
rorl
lock
xor
clc
repnz
nop
cld
jae
xor
add
popa
add
nop
push
mov
leave
nop
jmp
ret
stos
push
mov
clc
repnz
nop
cld
jae
add
sarb
in
add
add
clc
repnz
nop
cld
jae
push
out
pause
push
mov
leave
nop
jmp
lds
cmc
fildl
movsb
sahf
dec
sub
mov
leave
nop
jmp
add
jle
mov
push
addb
clc
repnz
nop
cld
jae
add
rorl
adc
inc
add
icebp
add
add
clc
repnz
nop
cld
jae
or
add
mov
push
mov
xchg
ret
add
jne
icebp
add
push
bound
add
clc
repnz
nop
cld
jae
add
pushl
fistl
push
jo
add
xlat
xor
xor
add
jmp
jp
nop
push
mov
leave
nop
jmp
and
dec
pop
pop
push
mov
xchg
ret
or
fcoms
add
push
push
mov
xchg
ret
stos
insb
mov
mov
nop
jl
mov
clc
repnz
nop
cld
jae
add
add
bound
rolb
push
clc
repnz
nop
cld
jae
addb
push
cmp
xchg
push
mov
xchg
ret
sbb
adc
jle
add
xor
clc
repnz
nop
cld
jae
jae
cmp
inc
cmc
add
in
push
add
clc
repnz
nop
cld
jae
add
roll
data16
push
mov
leave
nop
jmp
xor
cmc
mov
add
add
clc
repnz
nop
cld
jae
insb
add
add
push
lea
clc
repnz
nop
cld
jae
mov
inc
jge
ret
mov
xchg
ret
add
mov
add
nop
cld
jae
add
pop
push
add
xor
cltd
jmp
add
push
andb
sub
mov
add
inc
or
repnz
nop
cld
jae
adc
add
add
mov
nop
push
mov
leave
nop
jmp
insb
rolb
fstl
repnz
nop
cld
jae
jne
fstpt
push
mov
clc
repnz
nop
cld
jae
data16
add
nop
push
mov
leave
nop
jmp
icebp
add
add
add
movzwl
clc
repnz
nop
cld
jae
add
lock
mov
subb
mov
xchg
ret
xlat
add
stos
add
cmp
lock
inc
add
je
icebp
mov
jmp
shrl
add
xlat
adc
add
add
in
lock
add
clc
repnz
nop
cld
jae
mov
jecxz
lcall
repnz
nop
cld
jae
bound
add
dec
lea
push
mov
xchg
ret
add
add
roll
adcl
nop
nop
cld
jae
add
subb
hlt
add
nop
cld
jae
add
mov
add
inc
push
mov
xchg
ret
add
insb
jne
inc
sahf
call
add
daa
add
add
push
add
add
add
clc
repnz
nop
cld
jae
add
mov
imul
nop
push
mov
leave
nop
jmp
je
add
pop
je
clc
repnz
nop
cld
jae
xchg
add
mov
adc
repnz
nop
cld
jae
insb
add
xchg
adc
add
nop
jmp
in
xlat
add
mov
clc
repnz
nop
cld
jae
je
rolb
insb
add
and
clc
repnz
nop
cld
jae
add
in
arpl
nop
push
mov
leave
nop
jmp
jne
rcll
jnp
cmpl
nop
nop
cld
jae
stos
fcomi
fistl
nop
nop
cld
jae
add
adc
xor
clc
repnz
nop
cld
jae
insb
add
shl
add
loopne
sbb
add
push
mov
xchg
ret
mov
dec
mov
sbb
repnz
nop
cld
jae
jecxz
add
sub
clc
repnz
nop
cld
jae
pop
pop
inc
sbb
add
push
nop
push
mov
leave
nop
jmp
hlt
in
jl
mov
clc
repnz
nop
cld
jae
pop
rcl
add
add
cmpsl
ret
nop
push
mov
leave
nop
jmp
in
xor
add
and
repnz
nop
cld
jae
push
adc
dec
pop
clc
repnz
nop
cld
jae
inc
add
lds
mov
xor
repnz
nop
cld
jae
hlt
add
sub
add
push
mov
xchg
ret
add
cmc
add
icebp
add
sub
nop
push
mov
leave
nop
jmp
cmc
jle
rolb
add
shlb
clc
push
mov
xchg
ret
xchg
add
add
add
outsb
movsb
inc
subb
loopne
mov
clc
repnz
nop
cld
jae
add
cmc
add
cmpsb
add
in
fld1
clc
repnz
nop
cld
jae
adc
add
inc
dec
test
nop
push
mov
leave
nop
jmp
add
add
lock
clc
repnz
nop
cld
jae
shlb
sub
in
inc
subb
les
push
mov
xchg
ret
add
add
add
in
lods
and
popa
nop
push
mov
leave
nop
jmp
xlat
sbb
insb
mov
pop
ja
movsl
clc
repnz
nop
cld
jae
add
add
add
std
test
nop
push
mov
leave
nop
jmp
add
add
in
sbb
addl
add
nop
cld
jae
add
rcll
repnz
nop
cld
jae
xor
cld
add
jg
clc
repnz
nop
cld
jae
in
shl
add
add
add
jmp
add
add
jle
icebp
sub
mov
add
cmp
push
mov
xchg
ret
insb
pop
add
rol
mov
mov
repnz
nop
cld
jae
add
movsb
cmp
add
push
mov
leave
nop
jmp
add
add
add
inc
roll
hlt
je
add
pop
add
movsb
add
insl
mov
clc
repnz
nop
cld
jae
es
lock
addl
inc
add
add
fimull
add
in
leave
nop
jmp
xor
rorl
repnz
nop
cld
jae
add
mov
push
clc
repnz
nop
cld
jae
add
stos
icebp
pop
pop
push
xor
add
clc
repnz
nop
cld
jae
mov
mov
cli
xor
clc
repnz
nop
cld
jae
addb
sbb
add
push
clc
repnz
nop
cld
jae
rcrb
mov
mov
cmpsl
push
clc
repnz
nop
cld
jae
add
add
add
inc
xorb
and
mov
inc
push
adc
nop
push
mov
leave
nop
jmp
lds
in
ljmp
repnz
nop
cld
jae
mov
xor
mov
leave
clc
repnz
nop
cld
jae
jle
add
mov
mov
jmp
add
bound
add
add
addb
mov
and
stos
add
push
clc
repnz
nop
cld
jae
shl
mov
insb
dec
fwait
clc
repnz
nop
cld
jae
insb
push
sbb
xlat
add
fsubs
xchg
cmpl
cld
jae
add
adc
repnz
nop
cld
jae
lock
lock
xor
nop
push
mov
leave
nop
jmp
lds
addb
jle
cmpsl
ret
clc
repnz
nop
cld
jae
add
ret
add
xchg
dec
push
clc
repnz
nop
cld
jae
xchg
add
mov
pop
inc
add
ret
data16
out
out
clc
clc
repnz
nop
cld
jae
add
mov
repnz
nop
cld
jae
add
add
add
clc
repnz
nop
cld
jae
and
add
clc
repnz
nop
cld
jae
add
clc
repnz
nop
cld
jae
add
fcomps
add
lock
ret
clc
repnz
nop
cld
jae
add
cmc
add
add
xchg
nop
push
mov
leave
nop
jmp
fadds
add
add
add
ja
pop
push
mov
xchg
ret
add
add
add
add
adc
add
add
or
shrb
repnz
nop
cld
jae
add
add
rol
push
mov
xchg
ret
add
add
add
add
in
leave
nop
jmp
lds
add
add
xchg
push
cmc
jmp
push
es
fistl
sub
add
add
push
mov
jno
add
push
addl
scas
add
add
push
push
mov
xchg
ret
add
add
inc
adc
adc
add
push
mov
xchg
ret
add
insb
testb
lock
jmp
nop
cld
jae
sarl
xlat
add
mov
xchg
ret
xchg
fmuls
cmp
data16
pusha
rolb
rcr
push
mov
xchg
ret
mov
add
bound
ljmp
cld
jae
add
push
xlat
add
add
mov
repnz
nop
cld
jae
ret
push
icebp
push
stos
clc
repnz
nop
cld
jae
add
vaddps
push
add
clc
repnz
nop
cld
jae
mov
pushl
clc
repnz
nop
cld
jae
jne
jne
stos
add
add
clc
repnz
nop
cld
jae
pop
add
add
mov
push
mov
leave
nop
jmp
pop
add
lock
add
lds
add
repnz
nop
cld
jae
stos
add
gs
clc
repnz
nop
cld
jae
add
fcomps
add
hlt
divb
call
inc
add
pop
mov
scas
sub
clc
repnz
nop
cld
jae
lock
shlb
add
clc
repnz
nop
cld
jae
add
test
repnz
nop
cld
jae
add
add
add
or
test
clc
repnz
nop
cld
jae
pop
addb
jge
nop
push
mov
leave
nop
jmp
add
sub
add
js
je
mov
clc
repnz
nop
cld
jae
fdivrs
jno
clc
repnz
nop
cld
jae
add
and
orb
xchg
imul
clc
repnz
nop
cld
jae
add
mov
mov
nop
push
mov
leave
nop
jmp
mov
lds
adc
nop
jmp
icebp
add
add
pop
daa
fwait
push
mov
xchg
ret
icebp
jecxz
fadds
add
add
nop
cld
jae
inc
add
add
push
jg
clc
repnz
nop
cld
jae
add
insb
mov
clc
repnz
nop
cld
jae
add
add
add
xchg
and
call
leave
nop
jmp
add
add
pop
clc
repnz
nop
cld
jae
movsb
stos
hlt
movsb
xchg
rcl
add
ret
nop
push
mov
leave
nop
jmp
add
xlat
je
cmc
stos
mov
je
nop
push
mov
leave
nop
jmp
add
mov
xchg
ret
cmp
add
jae
add
dec
push
push
mov
xchg
ret
mov
add
je
cs
xor
push
mov
leave
nop
jmp
hlt
mov
add
push
mov
xchg
ret
icebp
add
lock
aas
adc
nop
jmp
roll
add
jbe
clc
repnz
nop
cld
jae
add
fcom
mov
clc
clc
repnz
nop
cld
jae
mov
add
add
sub
or
clc
repnz
nop
cld
jae
mov
stos
aaa
call
clc
repnz
nop
cld
jae
add
add
daa
test
nop
push
mov
leave
nop
jmp
add
mov
nop
push
mov
leave
nop
jmp
add
xchg
roll
daa
fistpl
push
mov
xchg
ret
incb
add
xchg
add
out
mov
push
mov
xchg
ret
insb
or
data16
loop
jmp
mov
xchg
ret
bound
roll
cmp
add
rcrl
cld
jae
rolb
add
add
add
loope
leave
nop
push
mov
leave
nop
jmp
icebp
add
add
nop
nop
cld
jae
add
stos
sbb
mov
rorl
nop
nop
cld
jae
add
in
add
push
mov
xchg
ret
add
add
in
stos
jle
cmp
mov
xchg
ret
add
fadds
sub
add
rolb
pusha
mov
nop
nop
cld
jae
insb
mov
add
pop
add
nop
push
mov
leave
nop
jmp
jle
add
add
icebp
call
nop
jmp
add
add
je
and
mov
add
inc
imul
cmp
and
sub
in
mov
mov
push
mov
leave
nop
jmp
insb
cmp
stos
and
add
subl
cld
jae
add
add
mov
addl
xchg
ret
cmp
add
add
loop
push
mov
leave
nop
jmp
add
jne
add
add
dec
nop
push
mov
leave
nop
jmp
add
stos
icebp
addb
es
je
nop
push
mov
leave
nop
jmp
add
add
push
add
repnz
nop
cld
jae
inc
add
hlt
add
push
clc
repnz
nop
cld
jae
xorb
insb
xchg
mov
sub
push
mov
xchg
ret
jne
add
icebp
mov
clc
repnz
nop
cld
jae
add
cmp
nop
push
mov
leave
nop
jmp
movsb
sbb
add
add
clc
repnz
nop
cld
jae
pop
cmp
or
shll
clc
repnz
nop
cld
jae
rolb
add
lds
fcomps
stc
add
clc
repnz
nop
cld
jae
es
add
pop
pop
clc
repnz
nop
cld
jae
add
pop
add
add
push
and
add
lock
incb
int
call
cld
jae
add
stos
mov
add
rorb
inc
mov
mov
push
mov
xchg
ret
jne
add
sarb
jg
clc
repnz
nop
cld
jae
idivb
data16
roll
test
add
xchg
adc
add
repnz
nop
cld
jae
inc
rolb
movsb
shlb
repnz
nop
cld
jae
jne
or
data16
jb
nop
push
mov
leave
nop
jmp
add
stos
mov
mov
leave
nop
jmp
add
add
add
clc
repnz
nop
cld
jae
add
stos
lock
add
cmpsb
shl
arpl
inc
and
repnz
nop
cld
jae
add
dec
movswl
clc
repnz
nop
cld
jae
in
shrb
insb
loopne
jne
clc
repnz
nop
cld
jae
add
in
or
and
nop
nop
cld
jae
fadds
mov
cmp
outsb
repnz
add
clc
repnz
nop
cld
jae
mov
rorb
leave
nop
jmp
add
sub
es
pop
clc
repnz
nop
cld
jae
vcmpeqpd
add
sbb
test
clc
repnz
nop
cld
jae
add
pop
push
mov
add
es
add
lds
and
andb
xchg
push
mov
leave
nop
jmp
shl
add
sbb
in
add
clc
jp
insb
repz
clc
repnz
nop
cld
jae
add
add
add
inc
xchg
cmp
jmp
nop
cld
jae
stos
add
jae
dec
jmp
ja
add
sbb
add
idivb
add
dec
mov
clc
repnz
nop
cld
jae
sbbb
mov
sti
clc
repnz
nop
cld
jae
rcl
stos
inc
or
add
test
push
mov
leave
nop
jmp
add
add
push
mov
clc
repnz
nop
cld
jae
add
add
add
pop
push
nop
push
mov
leave
nop
jmp
shll
mov
xchg
ret
bound
hlt
mov
add
mov
clc
repnz
nop
cld
jae
pop
add
adc
jns
clc
repnz
nop
cld
jae
stos
add
add
push
mov
xchg
ret
je
add
inc
add
add
pop
push
mov
xchg
ret
add
push
add
pop
loop
and
dec
ss
push
push
mov
xchg
ret
mov
add
add
mov
nop
cld
jae
add
lock
nop
push
mov
leave
nop
jmp
lock
clc
repnz
nop
cld
jae
add
add
rolb
pop
je
clc
repnz
nop
cld
jae
add
add
mov
rclb
jmp
lock
insb
xchg
adc
add
clc
repnz
nop
cld
jae
ret
add
fwait
nop
push
mov
leave
nop
jmp
es
add
mov
clc
repnz
nop
cld
jae
hlt
mov
inc
inc
mov
push
mov
xchg
ret
lock
mov
std
movzwl
nop
push
mov
leave
nop
jmp
jne
add
add
incl
mov
lock
push
dec
pop
xchg
addr16
push
mov
xchg
ret
in
add
je
adc
clc
repnz
nop
cld
jae
stos
inc
rclb
ret
add
repnz
nop
cld
jae
mov
addl
leave
nop
jmp
inc
rol
inc
add
nop
push
mov
leave
nop
jmp
sbb
add
add
icebp
push
mov
add
addb
jg
add
push
add
push
test
nop
cld
jae
add
cmc
add
arpl
mov
xchg
ret
add
sbb
lock
lock
add
mov
repnz
nop
cld
jae
add
add
cmp
inc
push
dec
enter
repnz
nop
cld
jae
mov
add
add
push
mov
leave
nop
jmp
pop
push
and
repnz
nop
cld
jae
insb
mov
adc
andl
nop
cld
jae
xchg
sub
sub
rclb
pop
inc
add
addb
add
loopne
cli
imul
in
leave
nop
jmp
xchg
in
xchg
add
mov
movsb
clc
repnz
nop
cld
jae
add
mov
mov
insl
xchg
push
mov
xchg
ret
add
add
add
add
incb
push
mov
leave
nop
jmp
je
inc
inc
add
shrl
clc
repnz
nop
cld
jae
add
add
and
andb
nop
nop
cld
jae
add
sbb
and
inc
add
ret
push
nop
push
mov
leave
nop
jmp
inc
adc
add
insb
fcomi
mov
js
lds
nop
nop
cld
jae
add
add
addb
call
clc
repnz
nop
cld
jae
add
mov
lcall
nop
nop
cld
jae
add
add
add
xchg
push
clc
repnz
nop
cld
jae
cmp
add
sbb
sarb
clc
repnz
nop
cld
jae
add
mov
dec
add
clc
repnz
nop
cld
jae
add
adcb
mov
xchg
ret
adc
bound
add
xor
clc
repnz
nop
cld
jae
add
add
add
mov
push
mov
xchg
ret
je
xor
push
insl
push
push
mov
xchg
ret
mov
mov
int3
loope
dec
push
nop
push
mov
leave
nop
jmp
shrb
sar
in
push
jns
dec
in
call
nop
jmp
add
add
add
nop
push
mov
leave
nop
jmp
stos
or
jae
inc
inc
add
repnz
nop
cld
jae
add
xorb
add
push
jge
jmp
cld
jae
xor
add
push
mov
xchg
ret
add
add
stos
in
xlat
add
or
shr
nop
push
mov
leave
nop
jmp
mov
add
mov
add
add
bound
addb
add
add
push
rep
push
mov
xchg
ret
add
pop
add
mov
and
fwait
mov
clc
repnz
nop
cld
jae
add
fsubrs
frstor
fld1
clc
repnz
nop
cld
jae
jne
rcl
sub
jge
clc
repnz
nop
cld
jae
and
mov
add
imul
orl
ljmp
add
inc
add
nop
cld
jae
add
add
roll
sarl
mov
pusha
rolb
leave
nop
jmp
add
push
iretw
lea
nop
push
mov
leave
nop
jmp
data16
shrb
rolb
repnz
nop
cld
jae
in
mov
clc
repnz
nop
cld
jae
add
roll
add
stos
jle
imul
nop
cld
jae
add
inc
inc
add
repnz
nop
cld
jae
rolb
push
nop
push
mov
leave
nop
jmp
bound
mov
xor
add
push
mov
xchg
ret
xor
add
call
clc
repnz
nop
cld
jae
incb
add
insl
push
push
mov
xchg
ret
roll
add
add
daa
mov
clc
repnz
nop
cld
jae
cmp
xlat
add
and
jne
clc
repnz
nop
cld
jae
jae
jae
push
mov
nop
push
mov
leave
nop
jmp
mov
stos
scas
addb
les
add
add
repnz
nop
cld
jae
add
xchg
rcll
addl
cmp
ret
stos
add
fadds
add
inc
call
clc
repnz
nop
cld
jae
dec
movsb
add
popf
movzwl
clc
repnz
nop
cld
jae
insb
pop
jne
idivb
adc
ret
dec
cmp
push
mov
leave
nop
jmp
add
mov
dec
sub
repnz
nop
cld
jae
je
add
xor
inc
call
clc
repnz
nop
cld
jae
sbb
xor
and
xor
inc
add
add
add
add
add
and
push
mov
leave
nop
jmp
roll
mov
xchg
mov
xchg
ret
and
add
lock
add
mov
nop
push
mov
leave
nop
jmp
and
add
addb
sbb
and
sub
add
jne
bound
out
push
xchg
add
push
mov
xchg
ret
shrl
lds
add
push
clc
repnz
nop
cld
jae
mov
stos
add
shlb
dec
imul
cld
jae
add
es
mov
clc
repnz
nop
cld
jae
mov
sub
loopne
jns
jmp
push
and
jecxz
stos
mov
lods
mov
clc
repnz
nop
cld
jae
add
add
es
jl
inc
add
xchg
add
sbb
add
add
add
clc
repnz
nop
cld
jae
lock
pop
out
adc
add
clc
repnz
nop
cld
jae
cmc
add
sbb
aam
add
clc
repnz
nop
cld
jae
inc
sbb
add
jmp
add
nop
push
mov
leave
nop
jmp
xor
push
popa
mov
push
mov
xchg
ret
in
data16
add
mov
leave
nop
jmp
add
xlat
rcrl
add
push
mov
xchg
ret
roll
add
test
push
mov
xchg
ret
add
addb
and
inc
repz
clc
repnz
nop
cld
jae
add
and
rcl
push
push
lea
nop
cld
jae
lock
add
mov
and
mov
nop
push
mov
leave
nop
jmp
movsb
lock
mov
shlb
nop
push
mov
leave
nop
jmp
jecxz
inc
add
push
clc
repnz
nop
cld
jae
lds
rol
cmp
add
adc
clc
repnz
nop
cld
jae
addb
stos
add
push
mov
xchg
ret
rolb
add
stos
sbb
ret
mov
push
mov
xchg
ret
icebp
rcl
add
cmc
add
lods
pop
clc
repnz
nop
cld
jae
add
mov
pop
mov
clc
repnz
nop
cld
jae
add
sbb
test
repz
call
nop
jmp
add
push
jo
fistpl
push
mov
leave
nop
jmp
inc
push
add
bound
add
loopne
add
push
mov
xchg
ret
mov
add
jne
negb
nop
cld
jae
add
rolb
add
add
lea
nop
push
mov
leave
nop
jmp
dec
add
pop
movsb
loope
xor
add
clc
repnz
nop
cld
jae
bound
stos
add
mov
add
nop
jmp
add
add
mov
sarb
movsb
push
mov
xchg
ret
decb
rolb
mov
clc
repnz
nop
cld
jae
add
add
add
and
loopne
push
push
mov
xchg
ret
decb
add
xchg
mov
nop
push
mov
leave
nop
jmp
add
add
jge
nop
push
mov
leave
nop
jmp
add
and
nop
nop
cld
jae
add
fstpt
add
mov
nop
cld
jae
mov
mov
sbb
loopne
lcall
mov
xchg
ret
add
add
jnp
clc
repnz
nop
cld
jae
rclb
add
sbb
nop
cld
jae
pop
push
add
jne
je
clc
repnz
nop
cld
jae
stos
add
decl
test
aam
clc
repnz
nop
cld
jae
add
add
jae
clc
repnz
nop
cld
jae
lock
add
add
mov
inc
and
clc
repnz
nop
cld
jae
pop
mov
add
inc
movsl
mov
clc
repnz
nop
cld
jae
add
push
loope
call
cld
jae
push
add
insb
popl
xchg
ret
xchg
xchg
testb
and
add
clc
repnz
nop
cld
jae
movsb
add
add
lss
nop
push
mov
leave
nop
jmp
push
pusha
ds
mov
nop
nop
cld
jae
shll
and
out
inc
add
add
addb
std
mov
clc
repnz
nop
cld
jae
add
bound
mov
mov
xchg
ret
bound
add
add
add
shl
xbegin
jae
add
add
addb
loopne
add
clc
repnz
nop
cld
jae
je
movsb
in
add
and
clc
repnz
nop
cld
jae
add
add
add
movl
nop
nop
cld
jae
push
mov
add
clc
repnz
nop
cld
jae
add
icebp
orb
clc
repnz
nop
cld
jae
and
push
mov
leave
nop
jmp
add
xor
xchg
pop
push
mov
xchg
ret
lock
mov
xchg
sbb
clc
repnz
nop
cld
jae
ret
jle
mov
push
mov
xchg
ret
data16
hlt
in
add
xor
nop
nop
cld
jae
mov
and
imul
pop
inc
add
shrl
addb
outsb
jmp
dec
clc
repnz
nop
cld
jae
pop
rcr
add
fisttpl
test
clc
repnz
nop
cld
jae
cmp
add
clc
repnz
nop
cld
jae
add
add
mov
ds
das
fistpl
push
mov
xchg
ret
add
xchg
add
nop
push
mov
leave
nop
jmp
add
icebp
add
inc
sub
repnz
nop
cld
jae
fsubrs
cmp
repnz
nop
cld
jae
add
stos
add
add
xchg
pop
and
in
leave
nop
jmp
and
mov
mulb
clc
repnz
nop
cld
jae
jae
add
dec
mov
clc
dec
inc
clc
repnz
nop
cld
jae
stos
add
push
clc
repnz
nop
cld
jae
incb
add
stos
add
icebp
push
pop
push
mov
xchg
ret
je
add
sbb
mov
shlb
xor
and
add
cmc
jle
xlat
add
add
clc
repnz
nop
cld
jae
insb
rcrl
rorb
fwait
clc
repnz
nop
cld
jae
stos
add
inc
incb
mov
jb,pt
nop
push
mov
leave
nop
jmp
add
mov
push
mov
leave
nop
jmp
xchg
lock
insb
scas
xchg
clc
repnz
nop
cld
jae
add
add
push
push
mov
xchg
ret
add
add
rolb
nop
nop
cld
jae
icebp
mov
add
mov
mov
xorps
xchg
ret
xorb
add
testb
inc
je
add
clc
repnz
nop
cld
jae
fmuls
add
add
in
rorb
nop
cld
jae
add
add
pop
add
adc
nop
nop
cld
jae
in
add
lock
imul
incl
add
jnp
dec
cmp
nop
jmp
movsb
rcrl
insb
inc
or
add
and
pop
clc
repnz
nop
cld
jae
add
jne
fisttpl
lock
test
clc
repnz
nop
cld
jae
add
pop
add
dec
push
clc
repnz
nop
cld
jae
fsub
jecxz
xor
popa
nop
push
mov
leave
nop
jmp
jle
testb
add
jno
rclb
push
pop
inc
add
xor
cmp
jae
jae
aam
sub
clc
repnz
nop
cld
jae
add
mov
clc
repnz
nop
cld
jae
add
add
rorb
add
sbb
addb
cmp
ret
and
add
pop
mov
clc
repnz
nop
cld
jae
jecxz
add
sbb
add
clc
repnz
nop
cld
jae
add
mov
loopne
in
mov
inc
pusha
repnz
mov
leave
nop
jmp
add
testb
add
clc
repnz
nop
cld
jae
mov
adc
repnz
nop
cld
jae
lock
sub
fistpl
push
mov
xchg
ret
xchg
add
push
mov
clc
repnz
nop
cld
jae
pop
insb
incb
add
clc
repnz
nop
cld
jae
or
stos
sbb
add
fisttpl
test
clc
repnz
nop
cld
jae
movsb
xchg
sbb
fistpl
clc
repnz
nop
cld
jae
add
and
stos
add
je
clc
repnz
nop
cld
jae
cmc
add
pop
lret
mov
pop
nop
push
mov
leave
nop
jmp
hlt
add
lock
fistpl
clc
repnz
nop
cld
jae
data16
xlat
add
ljmp
adc
push
mov
leave
nop
jmp
fadds
add
add
jo
add
push
mov
xchg
ret
adcb
jge
call
mov
add
stos
sbb
roll
xchg
add
nop
push
mov
leave
nop
jmp
roll
add
add
addb
lds
iret
add
clc
repnz
nop
cld
jae
xlat
add
clc
repnz
nop
cld
jae
add
add
roll
push
mov
leave
nop
jmp
add
add
orb
nop
push
mov
leave
nop
jmp
and
popl
mov
xchg
ret
jae
add
xchg
rcll
fwait
je
add
shrl
add
fcomi
lods
addb
add
clc
repnz
nop
cld
jae
add
jle
clc
repnz
nop
cld
jae
insb
insb
jae
sub
or
push
mov
xchg
ret
add
add
add
add
in
xor
repnz
nop
cld
jae
add
lds
dec
call
clc
repnz
nop
cld
jae
add
add
stos
add
rorl
mov
xchg
ret
pop
fmuls
pop
sub
add
fstpt
clc
repnz
nop
cld
jae
inc
rolb
push
xchg
lods
push
mov
les
cmpsl
test
add
test
mov
or
cmpsl
mov
inc
pusha
scas
inc
loopne
loopne
popf
cmp
inc
scas
outsl
push
fsubs
xor
sbb
adc
pop
add
aaa
fisttpll
or
loopne
nop
lret
xor
inc
lea
jp
jg
add
mov
add
pop
stc
inc
xchg
test
rcl
insl
movsb
loopne
jmp
mov
pushf
popa
mov
loopne
dec
mov
aaa
push
out
add
mov
sahf
mov
loopne
orl
iret
fbld
lahf
cltd
lods
addb
mov
push
in
dec
ja
pusha
add
cmp
mov
test
mov
fwait
ror
in
jmp
xor
xchg
sarb
addb
and
cmp
sbb
and
dec
cmpsb
and
popa
mulb
stos
popl
mov
pop
das
cmp
imul
pusha
mov
and
sahf
outsb
insb
mov
fwait
mov
mov
mov
cmp
cmpl
movsl
cs
xchg
mov
jo
aam
mov
mov
cwtl
aas
add
add
sub
inc
test
mov
dec
cmc
and
popa
mov
dec
or
pusha
push
out
mov
sarb
shlb
outsb
jmp
adc
add
jg
call
cli
mov
rcrb
adc
popa
sub
dec
pop
or
jle
fadd
push
inc
sub
add
mov
and
dec
mov
and
movsl
hlt
repnz
add
sbb
pusha
pusha
outsl
cwtl
leave
or
fwait
push
pusha
adc
add
xchg
jp
mov
xchg
mov
dec
sbb
push
andb
mov
add
loopne
ret
add
enter
pop
push
cs
pusha
iret
loope
push
outsl
mov
rolb
add
adc
adc
pusha
shr
imul
mov
in
sbb
add
mov
pusha
add
popa
aam
mov
out
xor
mov
loopne
xchg
adc
jb
mov
xor
shlb
or
rorb
addl
stc
inc
es
popa
sbb
out
jnp
inc
push
dec
out
lods
and
stos
or
mov
clc
mov
jb
pusha
inc
idivl
cli
lahf
mov
mov
shrb
in
fsubrs
notl
mov
pusha
push
mov
xor
test
rorb
add
cli
xchg
push
jecxz
mov
gs
lods
addb
stos
and
lds
mov
xor
xchg
rolb
mov
mov
add
inc
mov
add
xchg
out
mov
pusha
mov
mov
jl
sbb
push
cld
test
mov
rolb
adc
dec
xor
jle
inc
shlb
loopne
notrack
sbb
sub
and
shl
and
pop
inc
shl
sti
or
mov
jo
add
jnp
test
addb
mov
add
ret
std
test
shlb
pop
push
sarb
fdivs
mov
mov
rolb
rolb
cmp
pusha
aam
pop
mov
push
mov
leave
cltd
jne
addb
dec
cmovle
subb
rolb
cli
das
jmp
inc
mov
cmp
adc
cmp
int
movsl
push
dec
or
xlat
aad
add
inc
call
or
pop
test
sub
inc
inc
stc
and
ds
das
out
sbbl
das
int
xchg
jns
inc
inc
or
pusha
rcl
addr16
call
mov
pusha
gs
mov
push
inc
loopne
scas
and
addl
pop
pop
adc
push
stc
lock
mov
int3
fdivrl
fidivrs
out
add
loope
rcll
push
stos
sahf
add
sub
cmpsl
movsb
andb
xor
gs
xchg
gs
and
lcall
and
mov
les
add
jg
push
jge
data16
cmpsl
mov
rcrb
xor
mov
pop
or
mov
mov
mov
in
rolb
push
aas
sub
jmp
mov
andb
out
sub
mov
push
loopne
in
sub
adcb
add
mov
faddp
inc
out
loop
fisubrs
cmp
repnz
loopne
loopne
repnz
adcb
pushf
cmp
scas
shlb
mov
mov
dec
inc
popf
mov
xor
mov
pop
push
loop
and
rolb
loopne
fisubrs
mov
pop
inc
ss
push
dec
pop
jns
push
add
gs
ret
mov
add
push
fs
mov
xlat
jecxz
loop
imul
pusha
loopne
inc
xchg
xor
lods
adc
mov
filds
mov
inc
rclb
and
icebp
mov
inc
fsubp
and
mov
or
jg
inc
pop
mov
and
loopne
lret
sub
js
inc
test
mov
pop
or
inc
ja
jp
pop
or
and
xchg
mov
shrb
push
out
xchg
inc
pop
cmp
shl
dec
and
and
andb
mov
pop
mov
jp
pop
jne
movsl
dec
sarb
lahf
push
roll
inc
and
mov
push
xchg
pusha
xchg
mov
cmp
or
sahf
jo
add
cli
pop
out
loopne
fsubr
popf
xchg
lea
sbb
nop
lret
bound
xor
add
mov
clc
pop
popfw
in
and
fwait
add
push
inc
ret
mov
inc
dec
push
and
adc
pusha
lods
inc
rcrb
mov
int
xchg
mov
add
pusha
mov
sub
in
and
loopne
into
aad
xor
xlat
or
inc
lods
pop
dec
fldz
push
pusha
loopne
push
mov
rolb
mov
mov
lret
test
inc
xchg
lahf
js
pop
addr16
or
mov
jge
push
ret
stos
mov
cmp
sub
ja
mov
loopne
popa
sub
pusha
adc
test
fldt
stos
loopne
xchg
ja
in
jp
leave
addr16
insl
mov
push
dec
adcl
inc
aaa
insb
loop
inc
mov
mov
stc
les
out
mov
mov
sub
add
cmp
cmpl
sub
add
inc
clc
or
mov
sub
repz
sahf
loopne
xchg
pop
push
and
inc
mov
push
test
int3
mov
adc
push
jnp
sti
nop
repz
rolb
jmp
push
andb
pop
mov
mov
cmp
add
pusha
lret
ror
mov
movsb
loopne
cmp
inc
dec
cwtl
rclb
or
jle
sub
scas
jb
mov
arpl
xchg
pop
aaa
push
jb
std
pop
mull
pop
push
clc
cmpsb
inc
inc
and
jb
sub
push
mov
add
pop
mov
xchg
mov
loopne
daa
add
mov
shrl
mov
sub
hlt
xchg
dec
cwtl
outsl
and
loopne
xchg
and
and
cltd
and
leave
popf
inc
cwtl
sub
loopne
mov
mov
clc
xor
and
sarb
clc
ret
xchg
inc
addr16
sub
mov
mov
lret
insl
sbb
sub
mov
mov
push
loopne
test
cmp
loopne
pop
push
mov
mov
mov
dec
cmp
cmp
movsb
add
dec
js
sub
pusha
sbbb
xor
pop
jnp
jp
fadd
adcl
pop
or
testl
mov
pusha
xchg
inc
jl
test
and
inc
adc
add
pusha
daa
lcall
leave
lock
sub
rclb
jnp
dec
movl
int
mov
lret
jecxz
cld
add
rcrb
add
enter
mov
inc
inc
inc
lods
addb
sbb
xlat
sti
in
hlt
pop
mov
lods
rolb
push
ret
inc
pusha
jp
lea
cmc
nop
lds
fisubrs
xor
loopne
xchg
add
mov
sbb
scas
jae
mov
sub
sar
xchg
bound
andb
xchg
jns
int3
andb
dec
sbb
cmp
sbb
jo
mov
pusha
pusha
add
mov
cmp
add
dec
and
and
out
and
aaa
pop
cmp
lods
pop
mov
aaa
cwtl
push
call
fimull
loope
jnp
or
shrl
test
and
sub
pusha
inc
out
fmuls
pop
fildl
ja
add
mov
sub
push
mov
add
xor
adc
addb
addl
pop
negl
stc
jl
jmp
lods
outsb
inc
in
add
mov
add
mov
cwtl
popf
push
sub
inc
xchg
sbb
pushf
add
add
push
inc
sbb
shl
inc
arpl
push
xchg
dec
stc
mulb
sbb
sub
ss
jg
mov
inc
outsl
in
mov
sbb
lret
inc
push
cmpsl
stc
pop
aas
xor
in
fs
jbe
fsubrl
add
std
test
insb
jno
insl
push
mov
and
add
inc
loopne
out
outsb
sub
push
aam
imul
pusha
sbb
adcb
out
jmp
add
and
add
fmul
cwtl
je
add
pop
or
sbb
lods
addb
add
jno
lods
pusha
mov
xlat
mov
iret
call
or
scas
pusha
sbbb
push
add
mov
inc
push
mov
jnp
aas
and
mov
xchg
jb
mov
stos
mov
xlat
cli
ja
add
lahf
jl
and
rorl
jne
sahf
into
lcall
add
sub
xor
mov
jo
inc
mov
cmp
adc
dec
out
in
sub
pusha
xor
cmpsl
lret
test
stos
scas
addr16
pushf
xchg
test
adc
leave
ja
loopne
pop
xchg
clc
mov
sub
shlb
lock
push
xorl
mov
stos
loopne
sub
and
lods
loopne
ljmp
test
imul
sub
pusha
and
inc
adc
pop
xchg
add
or
rcrb
sbb
mov
mov
jns
cmc
pop
jne
pop
xchg
lret
mov
leave
push
insl
fsts
mov
lea
xor
rclb
cwtl
out
stos
shlb
inc
push
inc
js
sub
les
or
pusha
bound
jae
inc
xchg
mov
andb
mov
dec
adc
iret
cmp
movsl
and
inc
sarl
sbb
andb
notb
jl
add
rolb
addb
xor
aad
jbe
inc
enter
ret
mov
loopne
ljmp
cli
loop
shl
rolb
pusha
loopne
clc
daa
flds
push
or
mov
cltd
adc
add
cmp
mov
jg
pop
xor
pusha
push
mov
or
jecxz
jno
les
mulb
jl
pop
and
or
and
or
or
xorl
icebp
mov
dec
lcall
xchg
cld
stos
add
adc
testb
fstl
std
stc
inc
data16
push
andb
pusha
andb
add
adc
adcl
js
test
cmpsb
mov
movsl
mov
and
push
and
push
pop
inc
xchg
ret
insb
jl
mov
and
shlb
js
rolb
sub
inc
mov
movsb
pusha
inc
fld
nop
or
loopne
and
fstl
push
mov
jo
push
mov
add
popa
fwait
and
loopne
out
dec
das
insl
mov
loopne
es
sbbb
popa
movb
inc
sub
das
xor
test
lods
andb
ds
repnz
and
sub
es
add
rorb
jecxz
xchg
in
push
mulb
mov
test
mov
loope
jecxz
and
and
mov
andb
mov
out
addb
xchg
cmp
pop
mov
pop
jnp
and
mov
and
add
sbb
imul
pop
adc
call
or
dec
push
addb
mov
adc
dec
in
mov
int
loope
mov
rolb
pusha
mov
jmp
punpckhwd
and
lock
rolb
push
pop
or
jp
dec
ljmp
sub
add
or
repz
mov
dec
rcr
mov
mov
loopne
inc
mov
in
je
negl
xchg
es
rcrb
imul
movsl
mov
inc
cmp
inc
pusha
sti
stos
add
icebp
adc
dec
sub
psubusb
pop
fidivrl
loopne,pt
dec
jp
mov
jl
addb
movsb
inc
shlb
and
outsb
pushf
add
jmp
or
and
addb
sar
xchg
imul
loopne
push
add
ficomps
inc
shlb
add
cs
mov
add
dec
orl
mov
ds
xor
lcall
jo
out
xlat
sub
aam
cmpsl
loop
add
pop
mov
nop
push
in
adc
mov
adc
add
mov
lahf
into
sub
and
pusha
cmp
andb
and
push
jle
jae
les
call
cmp
js
pop
movsl
fisubs
fisubrs
mov
push
xor
sahf
xchg
sbb
ja
loope
popa
jo
pop
add
js
sub
sarb
fwait
shll
repnz
inc
or
jns
fimuls
int3
es
orb
and
loop
add
aam
adc
sub
inc
pop
pop
out
fidivs
into
ret
iret
push
sbb
add
cltd
inc
dec
xchg
bound
les
add
out
aad
ds
rorb
lret
adc
and
push
stos
jle
stos
inc
inc
add
pop
xchg
stos
and
mov
lds
add
mov
setb
xor
mov
call
and
inc
add
jo
jg
cmp
pop
iret
xlat
xchg
std
test
hlt
ss
jl
ficoms
ret
addr16
adc
pop
imul
and
pop
insl
jl
xor
mull
shlb
cmp
pop
out
jo
sbb
inc
rol
and
pop
arpl
std
dec
hlt
jmp
out
fs
cmp
shll
lds
sbb
cmp
jmp
jnp
pusha
rclb
je
mov
pop
jo
cmp
sbb
push
and
jmp
push
sbb
jp
add
push
loopne
ss
data16
jb
mulb
dec
add
pop
sbb
fstpt
inc
jnp
lret
test
addb
orb
pop
fdivp
dec
aas
lret
mov
push
xchg
mul
xchg
scas
inc
inc
cli
adc
leave
adc
or
pop
shrb
pop
inc
fidivrl
pusha
enter
add
ss
test
rolb
inc
sbbb
cmp
inc
cld
outsb
daa
add
pusha
and
jg
jo
loopne
cld
andl
inc
add
fs
int3
mov
adc
adc
xor
adc
jns
rsqrtps
ss
ss
popf
push
rcll
mov
sub
and
mov
loopne
push
popf
mov
fs
dec
push
mov
mov
andb
jge
lea
loopne
mov
in
out
adc
xchg
mov
ja
loopne
out
push
and
and
adc
inc
mov
and
das
orl
sub
pusha
sti
movsl
or
inc
mov
sti
hlt
cmp
sub
popf
jb
loopne
push
push
dec
mov
inc
mov
loopne
adc
mov
in
gs
ja
dec
je
clc
repz
fildll
adc
sub
sub
sarb
and
insl
mov
movsl
lods
mov
mov
rolb
inc
rclb
mov
push
push
push
mov
testl
xor
dec
mov
mov
cmp
arpl
mov
and
adcl
pop
sub
inc
fwait
insb
adc
push
iret
add
push
int
push
jno
rol
sti
sbb
mov
pusha
inc
jge
ret
jge
or
call
fildl
pusha
rolb
loopne
jl
push
adc
or
sbb
cmp
in
int3
data16
fcoms
and
rclb
or
mov
subl
xchg
adc
mov
shlb
daa
in
movsl
enter
scas
inc
sarb
insl
mov
rorl
cmp
dec
add
xchg
js
add
push
or
push
imul
popa
stos
and
sub
mov
mov
mov
loopne
stos
mov
xor
add
jne
push
ret
in
sbb
orb
mov
sub
lods
addb
dec
sti
iret
mov
loopne
sub
popa
rcr
mov
sub
sbb
pop
mov
hlt
xor
cmp
mov
inc
and
sub
loopne
and
cmp
xchg
mov
pusha
and
scas
rol
pop
rolb
aad
adc
fwait
mov
movb
pop
push
mov
fwait
mov
jp
xchg
adc
ret
cltd
pop
jmp
movsb
pusha
pusha
xchg
mov
loop
xor
adc
ss
js
mov
scas
and
dec
mov
fs
aas
cmpsl
xor
aam
xchg
loopne
loopne,pn
aaa
pop
inc
pushf
pop
jp
rolb
pusha
mov
hlt
xchg
or
aad
push
or
mov
inc
jmp
inc
adc
add
lahf
addb
push
add
cld
jae
lods
add
inc
jmp
and
aad
inc
ficomps
sub
popf
fdivs
pop
xor
inc
call
pushf
clc
in
or
mov
and
cmp
hlt
fldt
sbb
stc
test
stc
dec
in
mov
and
loopne
popl
jne
shlb
mov
sbb
andb
add
ja
jno
sahf
testb
inc
data16
arpl
add
dec
sarb
adcb
mov
mov
shlb
into
bound
sbb
fidivrl
inc
ljmp
pop
stos
shlb
cmp
dec
sti
dec
dec
jb
ja
and
vpmaxsw
jbe
pop
dec
push
jne
xchg
daa
std
sbb
inc
fistpll
lcall
fsub
dec
addb
insb
cmp
xchg
sarb
add
adc
sub
loope
loopne
pop
jno
pop
hlt
and
orb
cmpb
aam
xchg
popa
out
sbb
fcmovnbe
leave
stos
mov
lret
jno
inc
xchg
lret
fnstcw
add
pushf
push
lock
into
dec
out
push
pop
stos
add
aad
sar
enter
lret
xchg
ret
loope
inc
pusha
or
jmp
and
push
les
loopne
repnz
sub
jmp
shlb
test
mov
push
sbb
enter
push
addb
pusha
and
ss
fdivl
inc
pusha
insl
popf
insb
ret
cmp
ficoms
add
inc
fs
aad
mov
xchg
int
aas
bound
addb
pusha
add
pusha
cmp
dec
test
dec
inc
or
outsb
jno
lahf
mov
pop
sub
enter
aaa
and
push
mov
pusha
fwait
aad
sub
inc
sbb
dec
rcrl
push
add
inc
shrb
out
popa
cmpsb
loopne
mov
cmp
out
pop
int
loop
mov
in
aaa
repnz
add
mov
shl
jecxz
lods
and
int3
push
stc
cltd
pop
adc
rcrl
mov
imull
jnp
aas
xchg
rclb
lock
cwtl
addb
mov
push
ds
add
inc
das
xchg
aam
push
js
mov
mov
int3
stos
mov
add
inc
cmpsl
and
andb
adcb
and
inc
aaa
repnz
add
pop
les
pusha
shlb
bound
mov
pop
push
add
jecxz
mov
jecxz
fs
cli
mov
shlb
and
ret
loopne
inc
cltd
pop
loop
sub
mov
out
ret
jecxz
push
inc
mov
mov
in
xor
orb
pusha
mov
jmp
pop
jmp
mov
shll
xchg
and
pusha
loopne
pusha
loopne
pushf
pop
push
xchg
data16
pop
jmp
mov
rolb
cli
add
pop
adc
xorb
inc
cmp
repnz
cmp
fninit
xchg
or
mov
and
and
insl
xchg
jmp
xor
mov
add
ror
jecxz
inc
loopne
imul
cmp
xchg
xchg
xchg
mov
sbbl
divl
fcmovne
sub
out
rolb
fisttpl
cmp
mov
and
sub
pusha
test
data16
std
xor
fcomi
aaa
pop
push
pop
dec
test
pop
push
inc
add
iret
cli
pop
pop
pop
cmp
inc
loopne
fcmovnu
lcall
lds
adc
or
pusha
mov
push
ljmp
loope
arpl
mov
or
add
ret
mov
pusha
or
add
sbb
sub
in
sub
sub
test
and
add
loopne
xchg
push
gs
addb
push
add
push
sbb
in
and
inc
jg
mov
mov
lods
pusha
subb
mov
xor
rorb
aad
adc
rolb
scas
add
neg
jge
nop
rorb
outsl
dec
jl
mov
jno
mov
rorl
inc
dec
jne
and
jp
dec
push
addr16
inc
lods
loopne
jbe
inc
inc
loope
and
and
loopne
dec
mov
add
loopne
mov
inc
mov
lock
cld
mov
and
rorl
inc
and
mov
pusha
or
or
mov
lods
mov
andb
mov
inc
loopne
sahf
jmp
aaa
int
lea
scas
mov
sarl
or
fstp
lcall
out
or
adc
aas
add
add
loopne
testl
or
mov
dec
scas
pusha
loopne
dec
mov
jecxz
movsl
sbb
add
inc
push
clc
jp
lret
pop
imul
sarb
pusha
stos
pop
out
addb
dec
aaa
test
adc
add
dec
sub
mov
and
mov
mov
test
subb
cmpsb
pusha
sub
mov
and
push
cs
add
mov
data16
and
mov
loopne
and
sub
pusha
add
rorb
sbb
mov
sub
add
cmpl
pop
outsb
sbb
xchg
or
lods
addb
imul
mov
dec
andb
cli
or
xor
fbstp
fst
jae
sub
xchg
imul
comiss
and
inc
xor
test
add
mov
lret
pusha
loopne
cld
xor
clc
sub
adc
insl
insl
xchg
loop
push
add
mov
and
stos
rolb
lret
add
pop
mov
aas
out
das
xor
and
mov
cmp
scas
addb
and
into
cmp
insl
jecxz
and
mov
into
xchg
xchg
push
popf
or
popa
cmpsl
push
push
xor
fwait
xchg
pop
cmp
pushf
outsl
push
inc
or
and
fdivrs
rcl
mov
mov
imulb
je
inc
out
lret
push
icebp
pop
fimull
and
adcl
insb
mov
fiaddl
pop
mov
add
hlt
neg
sbb
imul
inc
cli
outsb
sub
adc
mov
jns
mov
or
inc
fdivrs
in
popa
xchg
pop
xchg
sub
imul
lods
inc
sti
mov
mov
mov
js
mov
fsub
cmpsb
pusha
and
push
lahf
fcomps
lds
sbb
add
xchg
shlb
shlb
lods
mov
pop
ficoml
fsts
cmpsb
add
sbb
push
scas
inc
inc
outsl
std
sub
push
movsb
loopne
mov
loope
fsubl
outsw
repnz
add
fistpl
lods
add
in
shlb
shlb
lds
in
lret
dec
push
cli
aaa
test
loopne
ljmp
fstps
popa
sbb
dec
test
add
scas
xchg
mov
data16
xlat
stos
loopne
mov
data16
mov
and
mov
imul
sarb
loopne
mov
pop
aad
jns
fisttpl
xchg
call
mov
andb
and
mov
std
out
cmp
or
mov
mov
dec
bound
pop
ret
loopne
and
and
cwtl
and
shlb
adc
stos
inc
rcl
shl
int
pop
inc
inc
adc
jbe
jb
int3
pop
pop
push
iret
daa
add
dec
loope
inc
cwtl
subl
xchg
jge
stos
bound
aaa
mov
je
sti
in
aam
push
loope
test
sar
add
orb
inc
add
mov
cmc
insl
shrb
in
cmp
pop
dec
xchg
mov
mov
repz
outsl
aad
xor
and
popa
ds
lock
dec
andb
insb
gs
pusha
jno
cmp
xor
clc
jle
test
inc
outsb
cmp
loopne
out
inc
mov
cltd
inc
imul
addb
mov
loopne
sbb
dec
pop
stos
dec
sti
inc
int3
insb
push
add
jnp
add
mov
shlb
mov
xchg
jge
imul
inc
push
and
push
arpl
xor
dec
faddl
mov
stos
and
sbb
xor
and
rol
inc
xchg
insl
fstps
add
pcmpeqd
stc
data16
je
int
scas
mov
add
stos
jo
add
out
gs
jge
enter
xchg
and
pusha
fnstsw
and
sarb
pusha
movsb
pusha
pusha
shr
jmp
xchg
movb
loopne
or
loopne
sub
loopne
or
pop
enter
or
leave
mov
mov
cwtl
mov
out
ret
or
addb
push
xor
cmc
jmp
adc
sub
out
mov
cmp
mov
lea
out
test
pusha
push
mov
sti
rcrb
push
jmp
das
mov
movsb
addb
xor
in
dec
or
test
sub
inc
rorl
rcl
inc
adc
pop
scas
jmp
cmp
fwait
loop
lods
loopne
mov
add
sbb
leave
mov
dec
sub
jno
xor
add
xlat
and
loopne
mov
adc
loopne
jbe
mov
or
add
xchg
mov
inc
and
mov
popa
fadd
mov
cmp
call
adc
pusha
mov
int3
and
inc
pusha
addr16
fs
xchg
cmpsl
jge
fwait
mov
lret
push
sahf
and
inc
sbb
add
adc
xor
and
loopne
leave
rolb
scas
add
push
stos
lea
or
pusha
pushf
scas
inc
subb
sub
inc
clc
cmpsl
in
out
push
and
add
mov
xor
inc
mov
push
and
and
mov
cmp
into
xor
pop
test
push
shrl
push
inc
mov
xchg
enter
pusha
and
andb
xchg
icebp
je
inc
and
lods
and
insb
arpl
push
movsl
push
loopne
and
je
dec
xchg
cmpsl
dec
jge
shll
push
cmp
fildll
add
push
mov
lods
pushf
je
jb
mov
sahf
xchg
dec
int
andb
sarb
loopne
lahf
or
rol
cmp
mov
orb
jno
inc
sbb
je
shl
add
pushf
dec
data16
jnp
add
pop
xchg
adcb
fcoml
fwait
enter
cmp
emms
hlt
add
mov
loopne
mov
leave
sub
adc
mov
or
ret
mov
push
rolb
push
xor
imul
inc
jae
fstl
rclb
xchg
mov
adcb
mov
add
test
mov
and
loopne
dec
cmp
xchg
shlb
pusha
subb
jl
imulb
push
fs
ret
or
lods
loopne
mov
insl
bnd
out
test
dec
lahf
and
subb
sub
add
xlat
andl
add
movsb
mov
pusha
sbb
pop
mov
mov
add
mov
fwait
daa
les
ds
pop
dec
push
aaa
mov
xchg
js
pusha
mov
pushf
adc
imul
add
push
mov
rorb
and
inc
inc
jmp
sahf
aam
push
pop
rorl
push
shlb
pusha
loopne
adc
sub
mov
xlat
xor
inc
add
mov
pushf
mov
loopne
nop
push
pop
lds
adc
imul
mov
in
fwait
or
adc
push
add
sub
pusha
popf
cmpsl
sbb
xchg
inc
stc
lahf
icebp
adc
xor
mov
add
js
add
add
mov
inc
add
inc
push
sbb
into
outsb
andb
daa
adc
bound
addr16
int
jge
aas
insl
scas
andb
push
and
xchg
mov
rorl
jle
in
andb
jle
filds
and
push
and
sbb
push
mov
loopne
popf
pushf
ret
dec
jb
les
pusha
pusha
adc
inc
sbb
dec
test
inc
gs
lret
cmp
or
frstor
fcompl
shl
andb
in
mov
pop
mov
out
lret
jo
sub
inc
push
mov
out
mov
fimull
xor
inc
pusha
stos
add
adc
call
add
push
outsl
movsl
sub
shlb
pusha
and
cmc
dec
push
pusha
and
loopne
jg
jbe
mov
mov
sbb
sub
add
xorl
test
or
cmp
mov
mov
sti
in
push
popa
js
dec
out
or
ror
daa
cwtl
out
lahf
mov
mov
push
and
in
adc
cmp
popf
in
xor
push
mov
inc
jbe
insb
or
ret
add
imul
cmpsb
and
and
mov
add
push
movsl
lea
mov
cmc
sti
ret
pop
mov
dec
sub
shlb
add
cmc
pop
gs
and
jns
jns
popl
mov
ljmp
mov
pusha
incb
shlb
movsl
call
inc
test
loopne
out
nop
aam
mov
orb
rol
xchg
jecxz
and
add
stos
bound
shll
andb
jns
jl
cli
mov
pop
bound
xor
adc
fcmovbe
cli
sahf
mov
inc
xchg
push
in
xchg
jnp
or
fimull
xchg
and
sub
and
daa
sub
xor
mov
data16
and
inc
and
mov
mov
add
out
jl
sbb
lods
rol
adc
int
and
mov
sbb
stc
mov
dec
hlt
lahf
repz
mov
je
je
xlat
nop
pop
int3
fmul
xchg
jmp
scas
mov
andb
sbb
addr16
cmc
scas
rolb
jae
je
sti
jno
jns
inc
sahf
mov
ljmp
out
sub
mov
notl
out
loop
in
dec
jbe
jg
mov
add
xor
insb
movsl
int3
inc
ss
fcomps
sbb
and
pop
or
loopne
mov
mov
sub
inc
movsb
inc
inc
rcrl
mov
and
jg
ret
std
pop
int
mov
pop
mov
rolb
add
out
je
or
add
orb
pop
pop
das
mov
mov
mov
jae
adc
popa
pusha
pusha
mov
cld
jmp
xchg
xchg
xchg
jae
imul
pop
lcall
sbb
or
pusha
shl
in
jge
mov
out
jp
inc
addb
jmp
push
pop
movsl
jecxz
fbld
mov
xchg
in
and
test
data16
sarb
shlb
andb
xchg
add
loopne
stos
pusha
pusha
push
andb
nop
fimuls
aas
jg
push
movsb
and
lea
jno
push
arpl
add
add
or
adc
inc
add
inc
inc
pop
sahf
sub
jno
gs
jne
andb
push
aad
movsl
inc
leave
js
pop
fs
mov
add
add
movsl
inc
or
add
xchg
push
xor
out
dec
push
jns
scas
out
imul
pusha
and
das
jge
cltd
in
xchg
inc
outsl
or
movl
movsb
inc
inc
out
insl
lods
and
mov
xlat
dec
mov
cld
jae
inc
rorb
mov
call
into
cmp
or
add
add
outsb
test
loopne
and
cmp
cmp
xchg
enter
jecxz
inc
xorb
shlb
xor
cmp
lock
inc
int3
mov
punpckhdq
fcmovne
mov
inc
inc
dec
loopne
sub
inc
mov
dec
int3
sub
shl
cmp
xlat
adc
jne
lock
push
hlt
or
subb
ret
add
inc
roll
mov
ja
loopne
pop
fisttps
push
test
rorb
mov
push
aas
jae
cmp
into
aaa
std
and
in
mov
sahf
das
sbb
cmpsl
mov
insl
insl
sbb
js
jne
xchg
mov
loopne
fcmove
stos
inc
and
mov
mov
mov
xchg
xor
sahf
xchg
adc
jns
stos
xchg
mov
orb
mov
sub
and
push
jbe
inc
pusha
ret
mov
pop
lret
scas
sbb
mov
push
int3
sub
and
push
in
cmp
inc
mov
add
pop
add
sahf
rolb
test
ror
pusha
adcb
and
adc
adc
or
jge
bound
xor
int3
add
subb
rol
xchg
mov
mov
pusha
add
mov
aas
jno
cmp
fwait
jmp
pop
mov
ja
stc
cmp
inc
dec
adc
gs
pusha
insl
std
fnstcw
test
pop
lea
stos
cmpsl
test
addb
js
cld
inc
mov
leave
dec
out
lahf
mov
loope
push
movb
setp
or
add
cmpsl
xchg
mov
cs
mov
rorl
pusha
int
iret
mov
out
cmp
addr16
push
nop
pusha
dec
cwtl
cmp
unpcklps
insl
pop
sahf
mov
insb
jl
pusha
mov
push
pop
pop
jbe
nop
test
mov
cli
jns
inc
loopne
fmulp
ljmp
hlt
mov
sarl
pop
xor
add
ja
jns
lret
adc
lods
add
add
or
in
jmp
fdivrp
dec
dec
test
inc
aam
outsl
ja
dec
jb
add
je
mov
xchg
jno
and
push
pusha
mov
mov
add
inc
dec
sbb
fimull
ss
push
jne
inc
andb
in
mov
xor
sbb
jno
js
andb
inc
xchg
div
push
loopne
inc
and
inc
inc
fistpll
data16
inc
fwait
xchg
outsl
sub
cmp
push
mov
mov
cwtl
pop
adc
sbb
sub
add
add
mov
mov
pop
dec
pusha
daa
jge
mov
xchg
mov
sub
and
inc
jmp
mov
insl
xchg
adc
dec
mov
addr16
xor
insb
loopne
jle
mov
std
mov
mov
and
mov
dec
pop
jmp
xor
mov
rol
test
mov
movb
stos
inc
loopne
gs
test
pushf
inc
jae
mov
or
or
pusha
into
xchg
push
in
ret
arpl
jecxz
icebp
pop
and
inc
divb
jmp
and
pop
popa
jmp
xchg
sub
and
xlat
mov
pop
fwait
negb
stc
or
xor
andb
xor
addb
js
aas
add
gs
pop
dec
popf
mov
outsb
ljmp
mov
and
and
dec
data16
pusha
rclb
adc
loopne
xchg
mov
xchg
addr16
js
jno
fnstsw
lea
jmp
test
fistps
pusha
and
insb
mov
pop
bnd
clc
sarl
push
mov
loopne
addr16
test
pop
push
andb
aas
fstps
pusha
pusha
dec
jle
xchg
fs
rcrb
shlb
in
mov
fsubrl
mov
rol
loopne
nop
lcall
movsl
pop
push
inc
mov
mov
int
jbe
rolb
div
and
out
inc
pop
jg
imul
push
lods
mov
pushf
sbb
std
inc
es
pusha
mov
stc
xchg
cmovb
aad
bound
add
jl
inc
pop
jae
mov
xor
jmp
push
add
cmc
scas
loopne
lock
xchg
pop
jne
mov
or
out
iret
push
fbstp
aas
lock
loop
insb
pop
les
xchg
out
xchg
dec
dec
xchg
add
addr16
enter
stc
jnp
mov
mov
push
daa
cmp
dec
aaa
ret
sbbb
arpl
shll
cltd
stc
adc
pop
xchg
cltd
mov
xor
add
push
add
inc
andb
movsl
or
xchg
aam
pop
adc
imul
aad
loopne
incl
adc
add
pusha
scas
inc
pusha
in
repnz
mov
add
adc
mov
stos
bound
mov
mov
or
test
cmpsl
xchg
loopne
fwait
ss
mov
inc
adc
cltd
subl
and
das
loope
mov
mov
dec
fcmovbe
jne
sub
add
pusha
sbb
sub
loopne
ret
sbb
sbb
or
shlb
ljmp
fnsave
mov
xchg
xor
andb
filds
jne
inc
pop
insb
pop
mov
andb
inc
inc
out
mov
fwait
in
pop
ffree
stos
xor
repnz
addb
stos
inc
add
popf
loopne,pn
andb
add
inc
fimull
sarl
push
and
js
lea
in
sub
inc
loopne
sub
addr16
mov
inc
sbb
xchg
js
sbb
or
loopne
pusha
mov
into
test
test
int
mov
into
bound
pusha
pusha
xor
scas
and
dec
cmp
add
push
mov
jp
andl
scas
adc
hlt
inc
xor
add
pop
jnp
xor
das
stc
push
jno
adc
sbb
lret
fldcw
fsubrp
cmpsb
loopne
cltd
mov
ficoms
pop
mov
pushf
xor
insb
push
xor
xor
loopne
jp
inc
enter
es
loopne
lahf
dec
andb
push
push
mov
cld
test
add
lods
push
sub
loopne
daa
fwait
shlb
scas
sahf
divl
inc
int3
ret
cmp
push
push
xchg
inc
sub
inc
ss
mov
lahf
addb
push
aad
pop
pop
rol
fstps
push
loopne
mov
pusha
push
add
lea
aad
hlt
movsb
shl
and
and
movsl
rcr
mov
lds
mov
loopne
push
rcll
jae
push
icebp
xchg
fwait
aas
lea
add
fdivrl
pop
pusha
inc
fbstp
ret
xor
lea
pop
or
adc
loopne
hlt
aam
sub
shr
push
addb
mov
int3
mov
loopne
or
rcrl
imul
je
jmp
loopne
pop
movsl
pop
adc
mov
lahf
mov
aad
push
andb
add
addb
sbb
sahf
inc
movsb
inc
add
test
pusha
cwtl
cmpsl
int3
lret
add
dec
loop
push
fdivr
pinsrw
arpl
cmp
mov
add
loopne
fwait
adc
shl
arpl
outsl
dec
fstpt
mov
mov
inc
jge
aaa
into
mov
fsub
dec
int3
mov
inc
sbb
adc
add
pop
lea
add
mov
pusha
addr16
fsubl
lds
add
int
and
hlt
nop
bound
inc
mov
sbb
loopne
imul
jl
and
testl
jecxz
cwtl
sahf
inc
ficoml
pusha
int3
insl
fistpll
inc
and
and
mov
fsubrs
cmp
add
pop
pushf
pushf
add
fldt
xchg
inc
mov
and
and
cmc
cmp
loop
xchg
xchg
mov
mov
imul
or
xor
mov
xchg
cmc
pop
push
les
dec
jecxz,pt
mov
add
inc
ljmp
sub
pop
dec
mov
loopne
or
mov
push
and
mov
pop
mov
pop
mov
pusha
loopne
sbb
jg
or
sbb
movsb
loopne
lret
dec
mov
pusha
mov
sbb
leave
lahf
xlat
or
ds
or
push
faddl
inc
cmpsb
pusha
mov
test
inc
pop
rcr
mov
mov
outsb
fdivs
add
sarb
jns
inc
add
shlb
sub
inc
shrl
jno
mov
movsl
test
mov
les
mov
push
ret
fwait
cli
cmp
fsubs
loopne
cmp
int3
cld
and
andb
sahf
in
popa
ror
and
outsl
cmp
xchg
fdivr
mov
lds
les
fldl
push
pusha
inc
das
jae
xchg
sub
xchg
and
mov
dec
aam
sbb
mov
clc
mov
mov
popf
dec
mov
scas
pop
inc
or
add
inc
xor
mov
jo
xlat
out
jge
add
sub
inc
inc
mov
in
xchg
ljmp
and
pusha
inc
lods
mov
pusha
ret
scas
andb
pusha
loopne
add
pusha
pusha
mov
mov
rol
shl
push
mov
push
sub
addb
shl
add
stc
in
mov
push
pop
incb
mov
imul
call
add
shr
call
add
scas
loopne
outsl
mov
xor
aad
adc
pop
stc
in
mov
push
lods
stos
pusha
shlb
inc
ret
aas
pop
sub
test
inc
ret
scas
inc
mov
jecxz
ffree
out
mov
jge
repz
xchg
dec
add
xchg
xchg
and
inc
out
clc
and
pop
push
xor
add
shlb
subl
cmp
scas
insl
int3
sbb
or
adc
fcmove
jl
xor
ss
fcompl
repnz
lea
and
sub
loopne
cmp
cmp
mov
idivl
or
jmp
mov
lea
mov
iret
add
test
dec
leave
pushf
xchg
jg
arpl
xchg
and
inc
pop
imul
cmpsl
dec
addb
xlat
insb
aam
dec
popf
jmp
or
inc
js
shlb
addb
andb
loopne
into
inc
mov
mov
add
xchg
dec
mov
pusha
pop
in
in
shrb
pusha
inc
test
xlat
popa
pop
inc
mov
gs
fldt
inc
loopne
rcrb
mov
and
scas
ljmp
imul
push
loopne
andb
mov
cmp
and
cmp
loopne
std
mov
inc
jne
jns
xchg
and
roll
dec
aad
push
loop
mov
add
loopne
pop
sahf
mov
outsb
jmp
or
mov
pusha
inc
inc
sarb
sbb
adc
lock
mov
popf
mov
dec
jo
inc
insl
testl
lcall
repnz
pop
xchg
push
mov
imul
add
mov
mov
out
andb
fcoms
rolb
andb
imul
outsl
enter
ret
sbb
pop
aam
loopne
inc
in
loopne,pn
xor
xor
loopne
xchg
stc
dec
jle
inc
push
cmp
pusha
ficomps
test
popf
push
push
pop
test
add
mov
es
cwtl
cli
lret
adc
popa
fwait
call
inc
jno
mov
repz
daa
std
or
jg
addb
mov
loope
in
xchg
dec
inc
sub
add
in
jmp
js
mov
popa
mov
sbb
pusha
pusha
push
and
dec
mov
pusha
jle
cmpsl
xor
pop
mov
loopne
and
popf
inc
dec
xor
dec
dec
mov
daa
sti
xlat
jbe
xchg
inc
jmp
imul
push
inc
or
and
inc
js
sub
bound
pusha
jl
mov
push
loopne
mov
cmp
mov
adc
fwait
pop
test
mov
scas
daa
pop
push
inc
mov
adcb
pusha
pusha
jno
loop
pusha
mov
mov
loopne
mov
jmp
jb
stos
hlt
xor
jae
jns
inc
aaa
pushf
fisubl
and
inc
imul
push
jne
dec
repz
add
popf
loopne
lds
sub
xlat
imul
mov
lahf
xchg
adc
sbb
add
fldl
ret
bound
loopne
dec
mov
cmpl
mov
adc
cmpsl
arpl
pop
xor
pushf
lahf
or
loopne
imul
addb
push
or
mov
jge
arpl
add
add
xor
mov
pusha
mov
ss
xor
push
add
inc
pop
push
in
pop
popa
adc
into
xchg
mov
mov
pusha
loopne
mov
cmp
mov
add
and
data16
adc
dec
out
cmp
aam
mov
or
addb
mov
mov
xor
add
inc
dec
mov
test
shlb
sub
dec
dec
sub
add
and
test
cld
xchg
lods
or
rorb
inc
pop
lds
in
sub
loopne
or
adc
xchg
mov
mov
and
rcl
xchg
and
and
addb
mov
pusha
loopne
mov
and
jbe
repnz
inc
loopne
pop
cmpsb
loopne
mov
loopne
push
in
dec
and
jbe
in
mov
jle
jae
movb
mov
dec
and
sub
stos
and
cwtl
mov
mov
jmp
mov
lret
xor
insb
push
adc
add
and
dec
xchg
pop
int3
nop
hlt
stc
mov
or
insb
push
shlb
pusha
jae
dec
cmpsb
andb
jae
rorl
mov
mov
shl
jne
add
inc
and
add
push
and
dec
scas
and
movsb
pusha
loopne
jg
out
xlat
cmc
lds
jno
adc
sub
or
call
push
andb
rolb
rol
shlb
sub
inc
inc
outsb
in
and
daa
aad
test
loopne
mov
xor
out
dec
xchg
push
pop
je
mov
pusha
mov
movsb
mov
pusha
out
cltd
inc
pop
leave
xor
add
rcrb
mov
aaa
xchg
sub
mov
mov
mov
scas
loopne
dec
xor
nop
mov
addb
dec
out
fwait
and
fwait
cwtl
xchg
cmp
loopne
mov
sub
xor
fdivrp
xchg
mov
out
scas
data16
pusha
shlb
loope
cmp
pop
in
loopne
xlat
cmp
cmpb
sub
pusha
pushf
imul
add
jo
cmp
sbb
out
stc
lahf
mov
mov
pop
xor
inc
inc
xchg
xchg
jnp
inc
or
push
dec
sbb
jnp
inc
and
mov
imul
and
inc
loopne
add
popa
and
mov
rorb
addl
and
xchg
andb
fldcw
rol
or
pop
stos
pusha
add
imul
fs
and
movl
loopne
mov
xchg
hlt
dec
push
popf
xchg
loopne
dec
lret
jns
mov
cmp
push
iret
loopne
ljmp
sub
add
int
jno
pusha
mov
sbb
out
xor
mov
dec
xchg
jge
pusha
mov
and
jecxz
loop
inc
mov
test
shlb
fcmovnu
lock
mov
push
cmpsl
inc
mov
les
fistps
daa
rcrl
xchg
adc
pop
test
mov
pusha
imul
fpatan
inc
aaa
jbe
xchg
idivb
mov
mov
add
negl
sub
shlb
lock
mov
mov
jmp
repnz
mov
lahf
dec
xlat
mov
das
push
in
sarl
sbb
in
sbb
jg
mov
and
cmp
pop
cmp
fsubrl
add
rolb
lret
xlat
inc
dec
ret
xchg
cwtl
lret
pusha
loopne
inc
jmp
repz
push
mov
cmp
mov
jne
xlat
mov
mov
mov
out
xchg
loop
pop
jge
enter
mov
popa
jl
rol
cmp
pusha
pusha
lea
ret
ja
add
shrb
and
nop
sbb
sti
movsb
mov
into
mov
push
add
loope
pop
jmp
pop
jecxz
or
pusha
cmpsb
add
icebp
movsb
and
loopne
js
ljmp
and
mov
adc
pop
sub
mov
mov
scas
addb
cltd
cwtl
mov
into
sub
and
ud0
andb
adc
pop
push
shlb
ss
jl
pusha
and
test
jbe
mov
pusha
loopne
mov
mov
mov
add
fnsave
pop
pop
dec
push
mov
test
mov
insb
in
dec
pop
aad
mov
mov
fsubrp
addb
shlb
lret
mov
add
mov
lahf
imul
or
sarb
push
repnz
cmp
jb
scas
repz
jne
lods
sub
pusha
fwait
mov
aas
loope
orl
add
jecxz
inc
clc
mov
inc
and
push
and
shrl
mov
and
add
mov
inc
xchg
cmpsl
or
add
scas
pop
pop
mov
mov
outsb
push
jae
stc
aam
lcall
and
fsub
aas
adc
insl
or
mov
mov
fwait
test
loopne
bound
and
lret
inc
out
add
sbbb
xor
sbb
jmp
inc
sarb
pop
pop
push
add
sbbb
sbb
pusha
add
dec
mov
inc
movsl
wbinvd
sbb
outsb
mov
dec
jno
xlat
mov
jmp
mov
addr16
gs
leave
addb
pop
fsincos
xchg
rolb
xchg
rol
lods
inc
jno
cmp
jle
sbb
lcall
jl
out
add
imul
cmp
add
inc
or
and
pop
popf
cmp
and
and
pop
pushf
je
jbe
pusha
inc
fmull
andb
add
call
pop
imul
int3
mov
jo
imul
jle
addb
lods
loopne
sub
and
pop
stc
xor
test
inc
pop
mov
rorb
adc
lcall
mov
dec
adc
or
orb
subl
jnp
pop
lock
sbb
dec
fwait
push
pop
outsb
pushf
loopne
pusha
loopne
and
mov
cmp
daa
and
mov
pop
bound
jne
mov
pusha
sub
jl
rorb
andb
and
mov
add
rcll
sub
push
es
rclb
pop
inc
add
gs
mov
test
push
cmp
dec
push
andb
xchg
and
rcrb
loopne
in
lods
test
and
jge
addb
ret
jmp
inc
add
pop
aas
mov
and
in
popf
push
ss
pop
fmuls
xor
sbb
insl
and
orl
mov
addl
loopne
mov
and
loop
test
dec
idivb
lret
das
out
fidivs
xor
inc
mov
int3
adc
loopne
xor
jb
and
inc
mov
out
cmpsl
repnz
icebp
insb
and
push
xchg
or
mull
mov
cltd
int
jnp
or
daa
divl
add
aam
push
push
pop
hlt
adc
stos
inc
loopne
adc
aam
jae
fdivrs
fisubrs
mov
push
push
inc
loope
iret
or
pusha
mov
repz
je
lcall
test
xorb
leave
push
mov
cmp
mov
pusha
sbbb
dec
das
hlt
aad
subl
sbb
mov
or
mov
jne
icebp
cli
pop
clc
std
iret
in
push
lds
repz
inc
cmp
nop
or
inc
mov
incl
int
and
rcrb
lock
and
pop
in
adc
push
mov
cs
and
cli
nopl
rolb
sub
inc
in
lds
add
adc
bound
cmp
push
push
fimuls
or
sub
mov
dec
mov
addr16
and
cmp
and
push
jno
jmp
icebp
jmp
outsl
cmp
cmp
cmp
lods
rolb
ja
adc
fwait
sub
out
push
add
pop
insb
mov
add
imul
addb
loopne
fcompl
stos
jle
pusha
inc
push
adc
loopne
push
addb
dec
or
loopne
stos
aas
xchg
lret
pop
sbb
xor
scas
pop
insb
mov
push
fdivs
hlt
and
lret
sbb
loopne
mov
add
jb
adc
xchg
xchg
xchg
int
pop
mov
and
lahf
mov
inc
mov
mov
test
mov
pop
out
mov
pusha
cmpsl
jmp
jb
adc
or
call
aas
icebp
lods
icebp
xor
add
sbbb
int3
std
mov
popa
in
out
into
scas
loopne
mov
jne
adc
je
push
cwtl
jp
icebp
sbb
in
pusha
add
lcall
xchg
jnp
fstl
dec
outsl
and
addb
shll
lods
mov
xchg
xchg
push
push
fstpt
mov
std
ret
pusha
push
in
outsl
ljmp
mov
divl
pop
cmpl
dec
data16
pusha
andb
xchg
mov
inc
push
sbb
mov
shlb
mov
addb
pusha
pop
sbb
mov
jno
adc
notb
mov
pop
shlb
xor
mov
pop
testb
xor
push
cmp
push
mov
test
sub
idivl
inc
daa
mov
pushf
sbb
popa
xchg
cmpsb
pusha
loopne
cli
jno
sub
shlb
sub
jno
jnp
jne
push
mov
shrb
push
mov
leave
push
es
ljmp
inc
cmpsl
cmp
sarl
add
pop
xor
mov
add
loopne
xor
inc
mov
xor
xor
adc
rolb
gs
mov
hlt
jmp
fldl
mov
cld
in
loopne
mov
pusha
mov
push
cmp
mov
mov
and
popf
out
xor
addb
cmp
call
nop
pop
xchg
xlat
fadds
push
cmp
mov
cli
int3
inc
pusha
mov
cmp
and
shrb
adcb
rolb
mov
jae
mov
cmc
imul
lret
or
sub
rolb
andb
shlb
sub
imul
fdiv
xor
push
inc
ja
divb
loope
data16
je
iret
shll
add
in
cld
xor
in
jmp
ret
lds
pop
leave
mov
adc
add
push
add
add
push
cld
mov
loopne
sub
cmp
shlb
add
add
js
addr16
fs
das
lods
rolb
mov
clc
mov
rcll
inc
fwait
sub
add
xor
and
jge
in
shlb
xchg
cmp
cmp
sub
imul
imul
loopne
pop
xchg
les
xchg
add
sti
inc
and
addr16
ja
add
leave
xchg
andb
push
mov
mov
sub
pusha
add
lahf
xor
shl
je,pt
sar
gs
inc
and
and
out
xor
jecxz
cmpsl
test
fs
sub
push
mov
xlat
pushf
int3
or
mov
mov
int3
fbld
insl
inc
cld
shlb
pop
jno
and
mov
or
pop
cmp
and
and
sbb
mov
scas
fstl
sbb
push
adc
cmp
divl
andb
imul
lcall
sbb
jecxz
mov
pusha
inc
pusha
and
pusha
stos
pusha
addb
pusha
loopne
rolb
cmp
mov
lock
or
shlb
pop
or
cmpsb
and
fnstenv
adc
xchg
fdivrs
das
ja
pop
and
jg
addb
push
mov
dec
jge
and
cmp
addr16
js
mov
into
js
add
pusha
sahf
addl
aad
adc
mov
dec
rol
shrb
pusha
and
mov
sbb
cld
jecxz
sub
jle
mov
mov
or
mov
and
fadds
pop
fldcw
push
scas
inc
pop
jo
jmp
mov
gs
pop
and
rolb
je
cld
sarl
gs
insw
mov
mov
cmove
xacquire
mov
add
rcrb
lods
and
push
jns
sbb
cmp
and
or
and
mov
add
inc
and
mov
subb
stos
fbld
xchg
and
and
hlt
jno
sti
cmpsb
mov
cmp
mov
out
or
int
loope
rolb
faddl
rclb
add
sarb
add
loopne
and
insl
and
in
jmp
inc
nop
sbb
adc
icebp
shl
loopne
mov
push
jle
shl
jp
fimull
leave
pop
mulb
mov
push
popf
mov
add
or
shrb
inc
sbb
inc
pusha
sbb
mov
stc
out
add
xorb
mov
rolb
mov
movsb
loopne
inc
cmp
jg
stc
aas
pop
out
pop
lcall
rolb
loopne
leave
push
push
push
xor
clc
into
jae
aad
jns
shlb
add
inc
push
sub
and
cmpsb
pusha
add
mov
mov
xchg
add
loopne
xchg
repnz
or
shlb
ja
leave
aad
pusha
scas
loope
jp
jnp
into
in
andb
ja
jl
mov
loopne,pn
pop
add
outsb
and
inc
add
gs
test
jb
jmp
out
loop
faddl
mov
add
lahf
stos
jnp
push
ror
rcrl
inc
jmp
fistpll
scas
jecxz
fbstp
jl
add
xchg
fnsave
ret
pop
push
cmc
pop
mov
sarb
push
sbb
into
icebp
sub
loopne
test
mov
lret
loopne,pn
add
lret
mov
jne
jns
mov
push
xor
mov
imul
adc
movsb
shlb
and
cwtl
xchg
je
cmp
out
add
mov
pusha
add
les
rclb
nop
and
pushf
movsl
and
inc
loop
les
shlb
add
into
jno
xlat
gs
ss
xchg
daa
out
xchg
cmp
scas
and
loopne
mov
add
rclb
xorl
notl
and
popa
sti
fwait
paddb
notl
mov
add
mov
add
in
xchg
sub
inc
cmp
sahf
inc
mov
lock
test
rclb
adc
and
lahf
jp
push
daa
loopne
push
dec
pop
js
xchg
xorb
jnp
jbe
rolb
adc
xlat
scas
ds
daa
bound
mov
mov
shlb
push
pop
loopne
das
cmp
add
jp
push
pusha
inc
lods
pusha
add
and
enter
pop
out
push
mov
into
shll
jle
gs
sysexit
imul
ds
dec
outsl
fdiv
and
sbb
cmp
jmp
and
add
loopne
jecxz
mov
pusha
and
mov
pop
insl
dec
pop
dec
mov
popa
mov
rolb
nop
mov
dec
mov
sub
test
ja
mov
mov
aam
rcrb
pushf
and
and
cli
inc
jo
fsubrl
add
push
mov
pusha
rolb
mov
add
mov
shrl
and
rorb
roll
fists
outsb
adc
add
int
loope
add
and
clc
lods
jle
ljmp
ret
pop
in
sub
mov
test
mov
or
mov
dec
outsl
jb
add
idivl
aam
std
inc
jg
int3
pop
xchg
pop
mov
orb
add
mov
mov
jp
inc
rcl
mov
rcr
mov
xchg
repnz
sarb
mov
dec
push
out
cmp
mov
or
cli
fistps
pop
aas
xchg
cmpsl
cmp
pop
dec
add
rolb
sbb
lds
inc
scas
cmp
loope
sbb
call
inc
and
rorb
in
loopne
push
xor
es
sub
xor
and
imul
addb
repnz
mov
mov
leave
out
cmp
es
mov
loopne
loopne
dec
inc
mov
loopne
movsl
mov
and
aaa
lret
popa
sbb
mov
sbb
leave
arpl
mov
and
add
mov
rolb
insl
out
movsb
add
sahf
jnp
cmp
shll
inc
xchg
xchg
pop
divb
repz
jp
aas
cmpsl
mov
and
and
rcr
adc
test
inc
push
sbb
inc
jecxz
add
aad
add
jbe
mul
jmp
inc
lds
adc
shl
out
test
dec
inc
pop
mov
pop
iret
xor
and
addb
loopne
push
shlb
push
pop
push
repz
cmp
retw
cld
sub
ss
iret
testl
imul
pusha
fisubs
and
cltd
pop
es
mov
push
sahf
mov
and
movsb
and
mov
and
add
xor
andb
stc
mov
mov
imul
rorb
adc
jl
addr16
cld
int
and
pusha
pusha
inc
std
add
jo
inc
andb
clc
cmpsl
iret
stc
lds
fsts
add
pusha
pop
outsb
mov
dec
into
and
ljmp
loopne
scas
mov
dec
sbb
jns
add
and
or
out
or
and
add
rcrb
lods
pop
nop
negb
aam
movsb
mov
jns
scas
cmp
fs
add
cmp
mov
movsl
fstl
or
inc
loope
rcrl
push
rolb
out
enter
jnp
xchg
and
loopne
cmp
bound
mov
mov
push
add
cmp
inc
das
mov
in
mov
push
sahf
adc
inc
inc
das
mov
std
repnz
xchg
aad
ljmp
add
add
add
loopne
and
mov
push
sar
mov
pushf
mov
mov
seto
inc
pusha
add
mov
sub
jo
xor
data16
loopne
fwait
imulb
push
jb
jp
rol
js
add
pusha
dec
cmpsl
and
test
add
sti
jbe
pop
push
pusha
cmp
sub
xor
int3
inc
and
lret
clc
push
xchg
add
addr16
xchg
enter
push
aaa
adc
push
add
scas
mov
inc
cmp
outsb
fs
flds
or
addb
sub
rolb
dec
addb
cmp
or
loopne
add
sar
mov
test
fadd
inc
xchg
loope
add
andb
lds
and
cmpsl
xchg
in
cmp
xor
mov
loopne
xchg
mov
sbb
lds
dec
jne
mov
pop
pop
push
cmp
js
adc
dec
pop
dec
xor
xchg
jno
sub
sbb
repz
shr
sbb
mov
fwait
dec
mov
pop
pop
jmp
push
mov
fnstenv
rorb
or
mov
out
or
call
pusha
gs
imul
rcrl
add
jb
inc
subb
mov
sbb
std
mov
popa
dec
jnp
lods
pusha
ret
popa
pop
sub
mov
jno
pusha
mov
add
or
cltd
inc
adc
sub
cmp
loop
xor
mov
fs
mov
andb
jle
xchg
add
add
loop
and
add
addb
mov
inc
and
jle
push
in
sub
jecxz
int3
loop
adc
mov
mov
sbb
or
cmovno
or
or
fbld
sub
add
cmc
andb
stos
add
or
or
fndisi(8087
fwait
sub
inc
adc
xchg
and
mov
lret
inc
in
rolb
sbb
nop
cmp
sub
xor
push
cli
pop
jp
loopne
sub
inc
sub
mov
adc
push
in
ljmp
jmp
push
jge
inc
shl
add
mov
cld
jnp
dec
push
fbstp
rolb
mov
daa
add
and
mov
mov
loope
mov
fildll
fldl
shll
repz
stos
add
insl
jecxz
insb
adc
mov
pop
sbb
mov
aad
cli
aam
ret
pop
mov
rolb
ss
jno
mov
ss
and
add
or
xchg
and
push
insl
nop
cmp
stos
inc
cltd
inc
xchg
or
and
enter
arpl
inc
inc
and
fstps
sbb
mov
stos
mov
and
xchg
dec
addr16
les
mov
xorb
stos
shl
loopne
popa
inc
je
aam
pop
cmc
pop
dec
add
push
leave
repz
shll
jge
sub
sub
push
sub
loop
fildll
mov
dec
inc
xor
addl
sbb
mov
jl
lods
pop
fs
jg
cmp
js
andb
repnz
mov
add
mov
and
inc
jg
loopne
adc
push
ljmp
int3
adc
shrb
mov
fxch
mov
mov
test
pusha
imul
insb
andb
add
sub
xor
shlb
or
rolb
and
jns
mov
addb
adc
xchg
cmp
fcoms
pop
push
rolb
icebp
fwait
mov
add
arpl
dec
pop
icebp
xchg
fcmovnbe
dec
cmc
sarb
mov
or
jns
js
lock
cmp
in
lods
and
add
mov
push
pop
add
dec
sti
adc
loop
stc
cmpsb
pusha
or
jge
mov
xchg
mov
pushf
jo
outsl
push
adc
clc
add
and
xor
mov
mov
pop
pop
push
mov
test
mov
sbb
enter
adc
loope
xchg
push
mov
dec
ret
inc
fstp
in
cmp
mov
pop
ss
bound
loopne
js
inc
mov
inc
push
xchg
bound
rolb
rclb
stc
clc
sbb
les
and
pop
push
imul
lcall
cmpsl
and
loopne
push
dec
inc
sub
push
mov
int
insb
icebp
mov
ljmp
adc
cmp
pop
idivl
and
inc
add
sub
xor
cmp
cmpsb
rolb
sbb
sbb
mov
dec
pop
add
mov
sub
test
pusha
push
dec
sub
mov
inc
and
jo
sub
pop
in
test
adcl
aam
jecxz
inc
pusha
cmp
push
jg
loopne
mov
insb
cmp
inc
roll
rol
and
lcall
cmp
call
mov
loopne
fsubl
and
mov
pop
call
lea
sub
pusha
arpl
out
fsubrp
dec
jp
push
int3
ret
shrl
lret
push
sbb
nop
mov
les
inc
inc
and
shrb
and
and
mov
cmp
push
hlt
mov
adc
sarb
mov
pusha
jle
lods
insb
mov
daa
and
pusha
jbe
enter
adc
mov
mov
xchg
test
add
iret
test
pusha
gs
int3
mov
jp
cwtl
lret
loopne
xor
xor
sub
loopne
shlb
rolb
or
rol
inc
loop
xchg
push
addb
stc
rorb
mov
and
xorb
popa
cmc
cmpsb
inc
loopne
mov
aas
sarl
and
dec
outsb
jno
pop
mov
add
inc
hlt
shrb
add
xchg
std
jp
cmpsb
shlb
sub
mov
add
int
mov
loopne
xchg
scas
xor
jae
lea
loopne,pn
inc
mov
mov
cld
jbe
iret
in
clc
fcmovnu
bound
neg
and
pusha
push
sarb
loopne
sub
andb
sti
mov
push
push
pop
sbb
loopne
adc
loopne
cwtl
out
insb
scas
clc
cli
push
mov
stos
aam
cltd
add
movsb
mov
mov
js
mov
adc
jmp
and
push
inc
jbe
mov
out
inc
stc
daa
je
sti
pop
mov
or
inc
insl
mov
and
xor
aaa
pop
sub
loope
std
repnz
add
adc
pusha
cmp
lcall
and
xlat
sbb
adc
fs
sbb
push
push
push
loop
cmp
cmpsb
add
sbb
mov
in
frstor
push
bound
sub
and
shl
mov
jbe
inc
xor
clc
dec
popf
xchg
ret
jbe
inc
scas
jp
cmp
sub
xor
xchg
or
orb
xchg
shl
sbb
sti
xchg
xchg
push
pop
jne
mov
fldenv
das
sbb
mov
push
push
cltd
loop
inc
dec
mov
and
mov
mov
xor
push
pop
rcl
pop
ds
loopne
call
sbb
imul
cmpsl
jg
push
mov
fst
xchg
sbb
xor
int
push
repz
movsb
andb
add
jecxz
push
pop
repz
dec
pop
cmp
sub
pop
in
mov
addb
shrb
das
nop
test
inc
lcall
test
cmp
hlt
or
xorb
scas
and
aam
fistpl
xor
ffree
and
rclb
addr16
std
stos
mov
test
and
clc
out
stos
mov
das
fimuls
mov
icebp
push
addb
call
fidivrl
sbb
shlb
or
sub
orb
repnz
pop
popf
inc
jnp
add
push
es
mov
in
ret
popf
stos
into
cmp
loopne
int3
fmuls
cwtl
sub
inc
inc
and
loopne
ret
inc
adc
aas
dec
insb
adc
pusha
inc
push
dec
mov
mov
inc
sar
xchg
daa
rorb
mov
aaa
or
aad
repz
rorb
lock
or
mov
inc
fldt
mov
adc
mov
insl
pop
fsubrs
add
pop
or
lcall
ja
mov
test
add
nop
add
pusha
ficompl
outsb
add
lods
loopne
mov
inc
fwait
enter
out
call
insl
fs
jnp
scas
loopne
pop
xchg
pop
in
addr16
adc
scas
test
daa
adc
and
jp
lds
sysexit
mov
mov
jl
fnstcw
mov
adc
pop
mov
pop
cmp
pusha
inc
neg
insb
aaa
pusha
pop
xchg
repz
add
sbbb
jno
mov
xor
pusha
shlb
xchg
popf
mov
loopne
loope
call
inc
loope
dec
fadds
and
lds
out
dec
dec
mov
adcb
sub
jo
les
inc
pop
pop
cmpsb
loopne
out
pop
addb
inc
or
push
test
mov
test
rcrb
iret
shll
jmp
loopne
shlb
xchg
loopne
and
add
add
xorb
shl
dec
stos
add
test
mov
dec
and
add
ljmp
cli
jecxz
and
in
sub
and
and
incb
pushf
lods
and
pop
mov
out
inc
adc
test
test
and
daa
pushf
insb
pop
jne
xchg
mov
add
fimull
addb
pusha
loopne
and
in
jae
cmp
cld
jne
pop
xor
inc
shll
add
inc
les
pusha
inc
xchg
in
adc
shl
xchg
aad
mov
and
lds
loopne
cmp
mov
test
xorb
in
outsl
inc
fsts
or
or
fists
mov
mov
in
pusha
xorb
or
loopne
in
jg
push
mov
clc
sub
js
bound
loopne
adc
fiaddl
inc
adc
daa
lcall
shlb
pop
add
push
xchg
hlt
or
das
out
mov
mov
rolb
add
push
in
add
shrb
and
loopne
jns
cmp
sbb
loopne
loopne
sub
inc
dec
test
scas
mov
jnp
out
sub
pusha
push
cmc
gs
andb
andl
in
mov
xor
sub
push
cmp
pop
pop
sahf
sub
mov
je
loope
jnp
cmpsl
dec
or
mov
dec
xor
mov
js
and
int3
ret
xchg
pusha
shlb
mov
cwtl
jb
push
pop
adc
inc
outsb
std
jne
xor
fnstsw
test
adc
in
adc
inc
inc
fs
imull
and
loop
add
xchg
push
dec
jo
and
int3
inc
cmp
cld
mov
cmp
loope
xchg
bound
xchg
icebp
jl
std
popf
in
dec
out
sub
fimuls
idivl
dec
jmp
adc
push
int
rolb
ja
rcl
lret
frstor
inc
mov
shrb
in
pop
in
inc
and
mov
jns
or
inc
and
icebp
adc
inc
pop
sub
ja
mov
push
iret
sar
adc
dec
pop
jbe
lods
addb
adc
mov
sbb
fdivrs
adc
mov
inc
push
sbb
out
lret
xchg
rorl
adc
addb
pusha
mov
xchg
pop
mov
cli
cvttps2pi
loopne
stos
rcll
loop
outsl
fsubrp
lds
push
insl
mov
addb
jno
loopne
pop
bound
lods
mov
rorl
inc
pop
dec
add
add
mov
fsubrl
das
inc
pop
sarb
fcompl
mov
jecxz
push
scas
inc
inc
sub
loopne
pushf
lea
andb
arpl
into
sub
fistpl
push
sub
rorb
clc
arpl
add
ds
xchg
mov
pusha
add
cmp
ret
mov
loopne
adc
push
inc
subb
adc
ficoml
cmp
pusha
and
arpl
aad
jae
jne
aas
mov
lds
and
insb
loopne
xchg
cmp
dec
lret
mov
xor
mov
sbb
ljmp
sub
bound
rcrb
xlat
test
loopne
add
mov
add
add
push
shr
cmp
ret
aad
pusha
loopne
dec
cmp
call
inc
jne
insl
mov
pop
and
jp
xor
clc
cmpsb
mov
andb
int
and
popa
shrl
inc
xchg
aaa
shr
jb
push
shl
dec
or
loopne
lds
push
aas
cmp
inc
aam
sub
add
loopne
mov
in
dec
in
add
lock
orb
pusha
mov
or
loopne
pusha
inc
cmovne
sub
pusha
sti
popa
cltd
xor
ret
xchg
mov
andb
mov
jp
jae
mov
or
xor
shll
jle
mov
loopne
rcrl
xchg
stc
int
mov
and
jl
mov
add
pusha
sbb
mov
pop
lahf
ret
in
xor
out
sbb
les
call
sbb
sub
mov
mov
xor
mov
rorb
shll
add
cltd
popa
push
and
int3
cmp
fdivl
inc
mov
or
test
push
inc
jge
pop
jne
sti
sub
add
hlt
sbb
aam
iret
push
inc
pusha
in
rcrb
mov
pusha
outsb
jle
pushf
sub
loopne
inc
popa
fwait
aad
loopne
jecxz
lods
sub
inc
stc
push
test
inc
dec
lcall
xchg
pusha
jo
sbb
addb
xchg
in
mov
mov
in
sbb
sub
inc
loopne
insb
inc
std
repz
mov
sub
and
loopne
ja
add
inc
and
mov
mov
imul
cs
inc
sbb
lods
cmp
jmp
add
or
pusha
pusha
fldl
lret
nop
mov
or
inc
inc
cmpsl
rcrb
sub
mov
ss
sti
out
mov
int3
cmp
inc
int
sub
inc
iret
les
pusha
and
es
inc
inc
lret
mov
mov
lea
cmp
test
mov
xor
out
adc
adc
mov
push
xor
and
imul
cmp
andb
fwait
xchg
lret
cmc
aam
inc
mov
js
div
or
or
adc
imul
jae
scas
loopne
inc
in
outsb
xlat
inc
push
mov
inc
inc
adc
cmc
fstpl
nop
adc
repz
shlb
loopne
mov
mov
and
cmpsl
dec
cmp
outsb
push
and
mov
inc
pusha
jns
xchg
pinsrw
subb
pusha
pop
mov
mov
inc
sbb
jecxz
add
pusha
add
cmp
mov
fsubrs
add
cmpsl
in
scas
cmc
nop
inc
shll
sbb
out
pop
xchg
xchg
lcall
mov
ds
mov
cmpb
dec
icebp
jmp
dec
lret
orl
adcl
in
test
sti
aaa
mov
retw
mov
mov
shl
xor
pop
inc
out
inc
sub
inc
jmp
ljmp
lahf
les
pop
cli
and
test
aaa
sbb
sbb
adc
and
rorl
lcall
hlt
fldenv
and
and
std
mov
and
test
inc
xchg
mov
xor
sbb
mov
loope
mov
mov
movsb
mov
fldenv
rolb
sti
mov
imul
xchg
in
push
test
in
out
lock
andb
std
xchg
sbb
pusha
pusha
cmp
sub
mov
inc
pusha
int
xchg
rcl
jo
inc
ds
lret
icebp
push
incl
and
dec
scas
jns
hlt
lock
xor
cmpsb
and
pusha
inc
ds
cmp
adc
std
neg
pop
stos
lods
inc
loop
push
andb
jmp
xor
rol
clc
out
in
in
dec
cmp
inc
loopne
ljmp
cmpsb
add
pop
push
les
add
scas
mov
fiadds
mov
jnp
shlb
add
cmp
sub
mov
add
pusha
sbb
pusha
pusha
lea
mov
pop
xor
ja
inc
mov
jmp
aaa
es
inc
mov
lcall
aas
add
ret
push
sub
daa
daa
fwait
inc
push
inc
loopne
loopne
mov
rol
pop
adc
js
lea
inc
loopne
pusha
pusha
dec
jg
in
fmull
inc
add
cld
pop
insb
add
jmp
out
lods
cmp
pop
lods
mov
push
pusha
rorb
js
push
shll
pusha
rclb
mov
repnz
rcrb
add
insl
cmp
or
adc
lods
pusha
adc
loop
enter
sbb
mov
fsubr
lcall
mov
int3
lea
pusha
and
xor
loopne
add
shlb
ljmp
inc
and
loopne
pop
mov
fstpl
fcoms
jl
xchg
dec
sbb
push
fnstsw
push
xor
pusha
sub
mov
xchg
jmp
pop
adc
shlb
cmp
mulb
jmp
lret
and
xchg
popf
int
inc
add
sub
and
mov
xchg
addr16
mov
scas
inc
and
dec
mov
sarb
sti
push
adc
rol
stos
xorl
insb
push
xor
pop
stos
outsb
test
out
outsl
divl
xor
pusha
add
jmp
adc
loopne
aaa
in
shlb
out
cmpsl
pop
add
xchg
fdivs
inc
and
lods
andb
je
xchg
call
push
lret
inc
rorb
mov
sbb
sarb
daa
popf
andl
fs
xor
cmp
or
daa
xorw
test
in
xor
fwait
std
or
add
fdivs
movzwl
int
lock
jo
add
jecxz
push
rcrl
fs
pusha
sbbb
xchg
std
ficompl
fwait
and
mov
in
mov
bound
movsl
mov
leave
and
out
mov
and
sub
addr16
aas
inc
jb
clc
jb
fwait
jnp
hlt
stos
sbb
and
loopne
scas
jno
pusha
add
dec
jae
or
out
repz
dec
jecxz
add
shl
inc
pop
jge
ret
loopne
sbb
lds
test
adc
and
shlb
xchg
xor
pop
dec
push
fisubl
fnsave
and
inc
test
sub
rclb
fldenv
sbb
jl
sahf
rolb
jnp
andl
loopne
jne
mov
loopne
shlb
shll
jns
popa
std
jbe
pop
mov
adc
mov
cmp
push
rolb
sti
xchg
das
adc
insl
popa
and
dec
pop
fiaddl
xchg
shlb
int
test
subb
loop
and
push
and
jmp
inc
push
daa
mov
stos
pusha
adcb
out
push
ljmp
jl
push
lea
xchg
dec
adc
loopne
mov
adc
loope
xchg
imul
xchg
mov
jle
outsb
mov
adc
add
sub
shlb
loopne
push
pop
xchg
rclb
add
and
loope
pop
popa
push
inc
xchg
or
pusha
pusha
dec
inc
insl
nop
adc
das
xor
fwait
inc
rcrb
cmp
enter
push
leave
sahf
pop
vrcpss
dec
or
inc
add
popa
scas
out
add
push
nop
int3
pop
and
imul
pusha
cwtl
repz
mov
cmpb
fldl
inc
cmp
cmpsl
mov
pop
or
inc
das
or
pop
dec
testl
gs
pusha
add
xchg
xchg
repz
dec
cld
adc
mov
and
insb
lds
addb
push
push
push
push
popa
jmp
mov
mov
jo
sub
lds
mov
mov
dec
int3
inc
scas
shlb
jle
jae
inc
lods
inc
and
and
lret
mov
lods
rcr
int3
sbb
les
xor
mov
dec
sub
dec
mov
loopne
clc
or
inc
xlat
punpckhwd
mov
lods
pop
ret
adc
and
mull
sbb
mov
cmpsb
mov
or
loopne
ja
inc
mov
pusha
dec
das
andb
push
in
icebp
sub
loopne
xor
nopl
ficoml
cmp
incl
inc
inc
mov
and
pusha
jae
sbb
mov
jbe
pop
lock
loopne
sub
es
rorb
addb
sahf
js
aad
xchg
scas
and
out
mov
iret
std
cmp
fsts
or
pop
xchg
and
add
sub
mov
ret
loopne
jns
xor
andb
xor
inc
cmp
jne,pt
mov
jo
dec
insb
pop
xor
mov
inc
mov
and
pop
nop
nop
pop
xor
add
mov
cmpsl
jmp
add
pop
mov
inc
xchg
mov
out
mov
test
inc
mov
loopne
icebp
ds
xchg
ret
and
push
shl
ds
mov
sub
adc
ret
loopne
push
lret
aam
inc
inc
fstpt
dec
mov
add
lds
add
inc
iret
pop
int3
dec
test
add
jne
and
xchg
andb
cmp
xchg
push
mov
xchg
fbstp
rclb
mov
loopne
addb
and
mov
mov
orb
inc
push
pop
xchg
ljmp
repnz
fimuls
into
lea
pop
sbb
xchg
loopne,pn
mov
ficoml
sub
inc
gs
stos
dec
sub
and
push
loop
pop
dec
and
sar
jno
cwtl
adc
mov
sarb
cmp
andb
inc
and
popa
mov
lret
imul
sbb
shl
arpl
xor
and
dec
popa
pop
mov
xchg
pop
jl
movsb
addb
pushf
push
add
outsl
and
scas
push
jp
out
xor
loopne
cmp
dec
push
add
fistpl
pop
jo
lds
mov
leave
scas
push
jl
rolb
pusha
stos
andb
into
xor
jae
inc
and
pusha
cld
sub
pusha
insb
add
lds
rolb
cs
pusha
add
add
sub
sub
inc
push
sub
add
add
mov
cmp
mov
mov
cmp
jnp
pusha
or
jae
dec
or
cmpsb
inc
rolb
scas
add
jnp
fnstenv
out
pop
adc
mov
inc
jg
mov
fidivrl
mov
addr16
inc
pop
mov
mov
pop
inc
out
jg
fldcw
mov
out
cmp
je
and
push
cmp
lahf
mov
mov
and
add
and
movsl
adc
ret
bnd
jnp
jne
and
insl
xchg
fs
xor
andb
out
mov
outsl
gs
iret
xor
rcrl
iret
push
insl
and
adc
mov
and
jbe
cli
mov
xchg
mov
adc
cli
lret
push
add
and
sarl
dec
cmp
add
fiadds
roll
mov
shrb
ss
mov
scas
pop
dec
loope
hlt
dec
test
rcrb
add
jns
push
mov
int
xchg
enter
pusha
daa
lcall
cwtl
sbb
out
mov
mov
cmp
leave
sbb
and
push
inc
add
add
add
loop
push
and
rcrb
sbb
aaa
and
cli
and
add
pop
mov
out
les
sub
int3
lds
pusha
loope
inc
mov
mov
sbb
xchg
clc
push
or
inc
xlat
mov
mov
inc
mov
xchg
lds
sbb
adc
stos
and
mov
adc
push
push
inc
pop
xchg
jns
dec
sub
clc
aas
iret
mov
xor
ja
xchg
jp
xchg
movsl
lods
loopne
inc
fbld
mov
dec
cmp
sbb
aaa
mov
loopne
add
inc
movsl
notb
iret
ret
jns
iret
rorw
or
ret
pop
push
xchg
addb
pusha
and
ficoml
fnsave
icebp
loop
inc
add
cmpsl
add
int
inc
loopne
loopne
mov
jl
out
adc
aaa
pop
out
inc
loopne
jnp
into
mov
pusha
xchg
mov
sarl
shl
jmp
dec
pop
ret
mov
and
add
inc
sbb
mov
aad
negb
daa
test
ror
outsb
stos
loopne
mov
aad
adc
dec
hlt
xchg
mov
pusha
sbb
and
lock
shlb
fsubs
clc
sub
shlb
pusha
adc
jle
addr16
inc
sub
jl
out
and
loopne
push
and
adc
inc
ficompl
repz
shlb
add
add
shl
stos
nop
push
pop
mov
lcall
add
arpl
mov
lret
mov
rolb
icebp
sbb
add
and
push
shl
out
in
mov
adc
push
shll
ljmp
mov
add
enter
inc
push
mov
test
lock
push
inc
mov
pushf
sbb
cmpsl
jle
loopne
pop
lahf
push
jl
loopne
fcomps
add
adc
shl
stc
adc
mov
inc
mov
jb
inc
sub
pusha
or
inc
sub
mov
ss
andb
addb
sub
addb
ret
jae
pop
mov
filds
mov
pusha
in
loop
pop
inc
subl
cmp
clc
jo
lods
enter
insb
pusha
xchg
fdivrp
mov
and
add
ret
loop
sub
test
pop
push
int
mov
jp
int3
mov
add
scas
sub
les
in
pop
rolb
adc
cmp
dec
mov
sbbb
inc
fnstenv
and
fisubrl
cmp
or
ror
jno
aam
fdivrl
js
loopne
scas
divl
aam
dec
xchg
sub
loopne
mov
xchg
pop
sbb
rolb
lahf
jns
or
and
bound
shrb
mov
inc
iret
xor
jge
inc
pushf
imul
mov
out
mov
ljmp
iret
lret
add
shlb
push
add
cmc
shr
xchg
mov
or
rclb
loopne
sub
loopne
lcall
fnstsw
xor
repnz
push
test
loopne
xor
sub
and
imulb
add
lods
lds
scas
out
out
and
into
push
popf
mov
mov
xor
in
mov
lahf
lods
loopne
cmp
add
pusha
loopne
add
in
mov
rol
in
pusha
and
out
mov
jecxz
adc
mov
xchg
xchg
mov
popa
in
mov
aas
lds
sub
inc
add
mov
mov
pop
scas
rolb
rcrl
cmc
aas
imul
je
inc
mov
shlb
mov
mov
mov
dec
pushf
add
cmp
and
xchg
loopne
and
pusha
fs
aas
mov
aaa
jg
test
and
xor
icebp
inc
dec
repnz
sub
inc
push
xchg
xchg
push
xchg
push
addb
xchg
lcall
add
cwtl
jbe
ja
pop
xchg
leave
adc
mov
lret
adc
push
inc
test
inc
sbb
add
addb
and
mov
mov
add
mov
andb
cmpb
xlat
push
add
cmpb
flds
mov
stos
lock
add
xor
nop
gs
mov
pusha
pusha
aas
cwtl
hlt
push
lds
inc
lea
popa
sbb
mov
es
enter
shlb
addr16
and
add
enter
bound
jb
mov
scas
mov
stos
cwtl
fbstp
add
add
jo
iret
std
leave
fisttpl
push
addb
pop
mov
addr16
and
loopne
inc
pop
and
mov
ret
lods
xchg
aaa
sbb
adc
pop
jmp
add
mov
jmp
js
scas
inc
rcr
inc
dec
dec
dec
jne
inc
and
mov
int
push
sbb
jecxz
or
pusha
xor
add
adc
cmp
pop
idivb
jno
mov
addb
xchg
divl
es
mov
in
cmp
add
inc
push
andb
jae
aaa
and
pusha
xchg
pop
mov
fwait
daa
push
mulb
inc
and
enter
add
mov
mov
lcall
mov
mov
and
add
test
loopne
jo
mov
ret
cmc
and
repz
add
jnp
jle
mov
shll
and
add
sbb
fcomip
xor
mov
pop
call
cli
push
mov
std
push
ja
mov
pusha
push
inc
pusha
jmp
out
cmp
xchg
inc
dec
jmp
sub
out
add
add
sbb
mov
and
xchg
sahf
pop
push
fs
mov
call
mov
movsb
and
ss
insb
lods
sar
popl
add
mov
xor
inc
movsl
xchg
xchg
in
mov
cltd
lahf
pop
or
imul
in
ljmp
mov
cmpsl
cmpsb
and
cmp
lret
mov
jg
ljmp
addr16
add
mov
inc
mov
mov
push
mov
iret
pop
out
loopne
pop
dec
out
cmp
pop
sub
loopne
cmp
cmp
mov
es
loopne
pusha
andb
cmpsl
or
xor
jae
mov
push
cmpsl
cwtl
dec
sub
pusha
lcall
and
dec
adc
lods
fcomps
das
pushf
mov
sti
mov
leave
addb
lahf
fcmove
int3
int3
ljmp
cmp
xchg
je
in
cmp
pusha
clc
jl
mov
data16
and
pusha
shlb
in
dec
out
push
and
lds
inc
sbb
sub
push
or
add
mov
outsb
sahf
and
cmpsl
int
xchg
outsl
aaa
mov
lods
pop
mov
inc
xchg
addr16
or
out
test
shlb
lahf
shlb
xchg
lods
add
inc
pusha
mov
mov
and
jne
pop
cltd
dec
test
negb
jecxz
cmpsl
dec
mov
les
pusha
sub
mov
and
sbb
jp
data16
cli
aam
addr16
jo
inc
or
loopne
add
loopne
filds
inc
popa
popa
inc
andb
in
loopne
je
mov
ss
sbb
test
xor
adc
xchg
mov
lcall
and
imul
sbb
jo
mov
ret
aam
pusha
in
ss
add
sahf
xor
test
in
fstpl
and
rolb
push
add
add
inc
inc
popf
jecxz
sub
sarl
pop
jb
cmpl
adc
push
and
inc
das
test
je
lret
and
and
fdivl
adc
rol
sbb
xchg
dec
add
pusha
and
stos
rolb
jecxz
jae
ds
push
xchg
rol
adc
scas
push
jmp
pusha
mov
add
cmpb
shr
dec
icebp
inc
and
add
cmpb
adc
jne
int3
js
push
mov
andb
loopne
in
cmc
dec
jo
ljmp
jmp
jg
out
out
sbb
mov
add
rol
xchg
out
fistps
mov
adc
jp
xchg
push
push
imul
enter
lds
rcl
cli
inc
cmp
ror
lods
mov
jbe
sub
mov
jl
mov
adc
mov
add
cltd
adc
cmpsl
lret
add
insb
aam
pushf
jecxz
movsb
pusha
rcrb
loopne
push
clc
fwait
enter
push
loope
push
inc
shl
mov
inc
cmp
insl
push
hlt
or
gs
sbb
inc
fistps
add
and
call
xchg
bound
fwait
sub
inc
loop
and
and
das
push
jnp
adc
xchg
adc
pop
scas
rolb
fdivs
in
inc
inc
sub
shl
loopne
iret
into
or
and
and
and
and
inc
sarb
xchg
sbb
bnd
int
xchg
sub
out
das
sbb
mov
aam
mov
cmp
into
jge
jns
addb
and
and
dec
xchg
mov
test
sub
loopne
pop
sub
mov
and
out
out
int
mov
andb
outsb
dec
leave
je
test
inc
stos
pop
pop
fildl
mov
and
movsl
adc
int
adc
mov
fisubrl
rolb
test
imul
lock
inc
imul
and
shlb
pushf
cwtl
scas
jns
pop
xchg
ror
lret
rolb
adc
sub
popa
fiadds
mov
outsb
repnz
push
mov
pop
or
sub
sub
and
gs
sub
rcrl
mov
sbb
xchg
adc
xor
test
mov
or
pop
negl
inc
add
mov
jle
out
int3
and
dec
pop
add
cs
mov
xor
sub
shlb
add
loopne
insb
sbb
sub
inc
push
loopne
ja
jbe
or
push
mov
push
mov
xor
inc
cld
loop
repnz
adc
jmp
mov
sbb
int3
imul
loopne
or
sbb
inc
fmuls
out
dec
les
mov
pop
out
cmp
les
jg
pop
cmp
subb
push
cmp
push
rolb
orl
cmp
rol
push
pop
mov
lods
fisubl
and
inc
js
out
inc
loopne
add
addb
inc
cmp
hlt
or
dec
xchg
fistl
and
pop
sub
mov
mov
jg
pushl
icebp
jb
push
outsb
mov
shlb
clc
mov
sbb
loopne
mov
sbb
loopne
or
dec
mov
jae
cmpsb
add
xor
push
jns
and
ret
dec
aad
jp
hlt
cmp
rcll
and
pusha
jns
cmp
rolb
dec
inc
repnz
cld
jae
add
mov
xchg
cld
loop
pop
cmp
popa
addr16
insl
data16
jbe
mov
jg
mov
rolb
mov
ret
dec
xor
or
xor
jns
rolb
adc
add
add
inc
adc
lods
pusha
shlb
and
mov
or
ljmp
add
int
or
arpl
out
xor
out
cltd
inc
nop
dec
jo
rorb
mov
pop
sbb
and
loope
inc
out
inc
mov
outsl
xor
pop
xchg
loope
xor
sub
and
add
xchg
jge
jno
xchg
decb
pop
test
sub
test
loopne
addr16
movsl
and
rorb
imul
lret
xchg
pop
mov
xlat
lret
rorl
mov
push
in
mov
inc
rclb
mov
adc
andb
cli
sbb
call
adc
jb
pop
push
mov
add
shrb
jge
dec
in
xchg
cld
cmp
dec
out
popf
pop
mov
jl
dec
clc
into
cmp
pusha
and
out
pop
push
addb
inc
daa
sahf
xor
sbb
cld
ficomps
and
add
cld
popa
movsb
mov
add
sahf
cmp
hlt
and
shll
pop
aas
push
daa
xor
pop
fcmovu
inc
loop
stos
ljmp
idivb
cmc
mov
cmp
xchg
add
push
or
ror
test
adc
aad
xchg
je
ffree
rclb
rolb
aam
pusha
push
outsl
xchg
insb
lea
loopne
je
cmp
nop
loopne
inc
add
mov
andb
jnp
or
andb
xor
in
jmp
daa
cmp
in
sbb
lea
loopne
mov
cmp
cmp
or
popf
jle
pop
sbb
les
add
mov
rolb
xor
repz
sub
cmp
out
and
add
push
adc
adc
cmpsl
int3
inc
mov
mov
pop
xchg
test
pusha
mov
inc
mov
and
jnp
mov
sarl
adc
hlt
jnp
cmp
loopne
xor
sub
xor
mov
add
sub
rcl
mov
add
add
inc
or
sbb
loopne
add
movsl
out
imul
sub
and
ret
mov
cmpsb
andb
dec
cmpsb
inc
loopne
push
insb
mov
add
and
and
gs
inc
or
mov
push
push
adc
hlt
leave
lret
andb
cwtl
xchg
jmp
pop
push
dec
jle
push
xor
inc
test
mov
lahf
add
fadds
fnsave
pusha
mov
jg
push
lods
add
dec
pop
jecxz
jg
in
inc
or
js
mov
sbbb
sub
mov
dec
ds
mov
insl
pop
popa
sbb
ror
xchg
inc
add
mov
rolb
mov
popf
push
inc
pusha
pop
fstpt
mov
mov
push
pop
jmp
jbe
outsl
inc
mov
cld
inc
jge
push
mov
mov
add
xchg
pop
cmp
rolb
xchg
je
jmp
add
dec
mov
or
xor
adc
pop
push
shlb
jmp
lahf
lret
dec
mov
pusha
add
xor
clc
sub
add
out
imul
mov
rolb
dec
mov
mov
mov
jg
mov
mov
mov
inc
mov
and
inc
js
fucomp
mov
adc
test
add
pop
sti
jne
jmp
mov
pusha
ljmp
and
repnz
pusha
in
pusha
inc
out
push
sbb
je
cli
or
lahf
lock
mov
sub
loopne
push
mov
test
jge
cmp
in
push
js
mov
sbb
and
add
mov
rolb
divps
movsl
mov
cwtl
adc
js
mov
mov
push
mov
jnp
add
and
add
out
ja
mov
add
dec
lret
lret
loopne
fwait
imul
test
mov
cmp
daa
xchg
and
mov
in
pop
repz
adc
push
and
pop
sbb
inc
jae
int3
cmpl
pusha
and
hlt
or
leave
jo
shrl
jmp
outsb
mov
addb
xor
mov
push
sub
shlb
jns
mov
lods
or
pusha
mov
repz
clc
jle
push
sub
aad
and
add
and
loope
add
or
sbb
cmp
sbb
out
jmp
sub
fidivrl
mov
pop
pop
lret
loopne
bound
fists
cmp
jbe
loopne
push
shll
fsts
stos
mov
ret
icebp
jo
pop
loopne
jg
imul
dec
adcl
scas
pusha
inc
out
out
out
shlb
push
jns
mov
mov
mov
repnz
xor
dec
stos
and
inc
inc
repnz
mov
add
out
sahf
cmpsl
test
sbbb
mov
and
pop
lahf
xlat
enter
inc
mov
and
add
loopne
lret
sub
andb
add
adc
jmp
mov
fnstenv
mov
inc
cld
and
mov
inc
cmpsl
repz
out
mov
mov
push
dec
push
jge
jne
jne
xchg
sahf
test
pop
adc
out
mov
inc
add
mov
add
shll
sub
inc
push
mov
addb
jge
xchg
mov
adc
or
add
rorb
mov
inc
xchg
jns
ds
dec
mov
pop
add
stos
and
sbb
das
mov
jo
inc
fwait
xorl
pop
inc
push
and
mov
add
mov
pop
mov
shrb
inc
adc
rclb
imul
sub
rolb
add
xchg
xor
push
push
notl
lea
and
mov
mov
pusha
fsubr
push
sub
xlat
add
stos
loop
sub
adcb
iret
jo
loop
xchg
jge
dec
dec
fstpl
out
inc
mov
add
and
in
out
hlt
cmp
negb
pusha
lock
mov
loopne
xchg
mov
ss
fcoml
and
add
fldenv
xchg
outsl
fucomip
push
imul
js
or
ss
aas
fwait
jne
jle
add
mov
loopne
stos
fwait
pop
movsb
and
pusha
and
pop
cmp
inc
sub
fcmovu
call
mov
xchg
lea
inc
add
push
xbegin
popa
jne
add
sbb
pop
gs
jns
test
add
mov
je
inc
jne
rolb
mov
leave
and
pusha
fwait
aas
clc
jp
xlat
hlt
addr16
xchg
aas
orl
sbb
sbb
sub
or
inc
push
cmc
or
clc
insb
sahf
sub
push
popa
repz
mov
dec
pop
mov
repnz
shlb
ljmp
and
je
int3
jle
bound
imul
push
popf
dec
lahf
add
pop
pop
lea
and
repnz
popa
mov
pusha
lea
scas
into
or
subb
mov
jnp
sbb
inc
shll
in
mov
lock
inc
ret
test
and
mov
out
shl
js
cmc
mov
cmp
test
sbb
pop
add
shrb
mov
sahf
dec
neg
aas
jne
adc
mov
add
push
shl
ss
inc
dec
icebp
sbb
fwait
data16
mov
push
shlb
loopne
push
ss
pusha
adc
mov
movsb
mov
mov
inc
pusha
in
in
push
push
sbb
dec
sub
add
dec
mov
and
adc
jmp
inc
cmp
inc
inc
mov
mov
stc
push
fwait
pop
gs
sahf
pop
mov
and
rorb
sbbl
xor
in
fisttpll
notl
pop
mov
add
and
std
cs
xor
dec
mov
rcrb
inc
cmc
cld
inc
mov
xchg
jge
xchg
pop
add
nop
es
insl
push
sbb
andb
int3
roll
ror
lahf
add
loopne
and
pusha
jb
sbb
pusha
insb
arpl
js
sti
pop
out
and
cmp
jl
pusha
loopne
neg
loop
jne
enter
je
mov
loopne
mov
inc
test
ret
fnstcw
addb
sbb
pop
push
sbb
sub
and
scas
addb
ficompl
enter
xchg
and
loopne
hlt
sbb
nop
cmpsb
inc
mov
sub
mov
jmp
pop
adc
out
inc
mov
fisubl
and
pop
pusha
scas
add
mov
inc
push
inc
pop
int3
das
or
add
int
ljmp
sub
inc
lahf
lret
dec
outsl
xchg
add
loopne
pop
mov
or
mov
pushf
es
rcrb
clc
in
andb
adc
push
aam
or
inc
mov
out
lock
xor
pusha
ret
mov
in
mov
adc
andb
sub
inc
xchg
out
cmp
ss
mov
and
mov
loopne
adc
pop
fidivl
pusha
repnz
pop
in
inc
cmpb
add
addb
fs
sti
xor
inc
and
fwait
pop
addr16
es
mov
add
pop
imul
xor
and
jg
mov
movsl
test
loopne
shlb
je
pusha
xchg
or
add
repnz
jp
or
pusha
inc
lret
or
fisubrs
add
xchg
dec
cli
incb
pop
cmp
add
add
and
insb
inc
xchg
loope
xor
movsl
mov
inc
test
subb
pusha
push
xchg
add
int3
mov
pop
jnp
add
xor
into
stc
stos
adc
cmp
xor
test
hlt
daa
push
loopne
and
pusha
push
in
push
mov
rol
inc
mov
clc
sbb
add
mov
test
lahf
mov
jecxz
pusha
cwtl
repz
je
mov
pusha
cld
fs
mov
lahf
out
sbb
outsl
jnp
addb
aas
push
mov
lcall
addb
dec
xor
pop
daa
rclb
xor
into
add
outsl
or
pop
xchg
repnz
loopne
mov
ror
and
int
inc
pop
push
add
jl
inc
push
and
mov
add
test
loope
xadd
mov
sbb
sub
pusha
andb
adc
aad
lahf
pushf
dec
insb
mov
aam
cmp
inc
and
mov
cmc
xor
add
mov
mov
push
xchg
dec
or
or
inc
sub
popf
ror
test
and
popa
sub
and
mov
rclb
mov
jbe
insl
in
and
test
cmp
mov
dec
shrl
xor
imull
daa
sarl
pop
pop
mov
imul
shl
mov
and
cld
daa
inc
lea
loopne
int
nop
outsb
cmp
xor
out
cmp
rol
in
add
mov
and
inc
loopne
sub
inc
sub
mov
into
adc
test
sbb
sti
jno
pop
repz
scas
andb
dec
mov
mov
out
sbb
xchg
int
pusha
ljmp
push
dec
aaa
jb
inc
mov
pop
fcomps
insb
xor
push
mov
stos
pusha
and
xorb
in
cwtl
xchg
xchg
rorl
andb
shl
ljmp
push
int3
call
imul
sub
mov
pusha
mov
fldt
and
cmc
xchg
into
sub
iret
jbe
mov
addb
sbb
push
pop
cmp
in
and
mov
test
add
pop
fisttpll
mov
jmp
fistpll
push
add
test
add
cltd
pop
dec
icebp
shll
pop
push
shlb
pop
fstp
nop
cli
and
es
add
loopne
outsl
push
das
cmp
and
sarb
inc
mov
and
test
mov
inc
loopne
mov
inc
mov
or
add
rcrb
mov
loopne
roll
addb
fstpl
sbb
sti
xlat
mov
loopne
inc
and
int3
sub
dec
jo
ja
jae
inc
inc
iret
gs
repz
fucomp
jnp
mov
xchg
fmull
inc
and
mov
js
stos
and
add
jmp
mov
imul
pusha
inc
rolb
outsl
data16
pusha
add
insw
xchg
jae
push
jne
cld
out
andb
sbb
jp
dec
or
mov
xchg
sub
pusha
cmp
inc
xor
pusha
loopne
sbb
mov
inc
jg
stos
pusha
adcb
dec
popa
adc
shll
sbbb
and
or
dec
xchg
add
xor
imul
add
mov
mov
jg
lahf
ljmp
insb
popf
cmp
loopne
and
roll
cmp
push
inc
dec
push
addl
lock
sub
loopne
pusha
inc
imul
jle
inc
andb
outsb
lods
pusha
mov
dec
fwait
stos
pop
jmp
mov
inc
xchg
or
inc
call
movsl
xor
and
jp
movsl
popl
mov
mov
push
jecxz
adc
add
pop
shll
cmp
add
pusha
mov
pusha
and
push
mov
pop
lahf
lds
insl
inc
sahf
mov
sub
mov
inc
adc
popa
ds
call
dec
enter
in
movsb
mov
cmpb
lods
mov
rorb
add
sti
cmp
and
jbe
jmp
mov
lcall
and
shrb
mov
jmp
or
pusha
xchg
out
je
shl
fsubs
pusha
or
fs
out
fsubl
adc
sub
cmpsb
loopne
ficoms
jbe
leave
cld
jns
mov
xchg
sbb
int3
fisttpl
inc
je
out
or
loopne,pn
dec
bound
lea
jb
in
rolb
pop
mov
mov
mov
andb
jmp
iret
push
mov
cmc
out
aaa
pop
mov
and
fnstenv
scas
xchg
cmpsl
movsb
inc
loopne
sub
inc
lcall
inc
add
ljmp
js
scas
cmp
xor
stc
and
mov
and
fdivrs
pusha
loopne
and
mov
pusha
and
std
dec
movsl
aam
cmp
jl
pop
mov
call
loopne
loopne
jo
push
addb
pusha
adc
mov
xor
popa
not
or
imul
subb
pop
shll
pop
add
out
js
fistpll
xor
inc
sahf
sub
outsl
or
and
push
and
loopne
out
push
pop
incl
sub
cmp
cmc
jle
pop
std
push
hlt
mov
dec
stc
arpl
pop
mov
outsb
int
shlb
mov
jbe
cmp
pusha
fwait
mov
lcall
jmp
mov
and
cmp
mov
shlb
cmp
pop
fwait
int3
or
mov
sbbb
and
inc
pop
ret
lret
adc
push
fstpl
hlt
add
pusha
cli
ret
pop
mov
fisttpl
test
and
pusha
xchg
dec
push
ja
jecxz
test
movsl
enter
cmc
jb
fnstsw
pop
cld
in
xchg
or
jb
inc
xor
imul
lds
pusha
jge
xchg
push
sbb
xchg
cltd
add
push
std
jbe
loop
and
int3
cmp
dec
in
enter
inc
adc
andb
loop
and
sub
loopne
imul
xchg
into
xor
dec
cmp
mov
mov
mov
or
mov
mov
mov
jbe
push
fwait
imul
ret
push
out
sub
pusha
cwtl
in
xchg
push
jae
jns
pushf
ss
xchg
add
or
push
test
add
movb
pusha
push
inc
loopne
xor
mov
test
and
aas
repz
sub
out
cmp
inc
testb
ret
add
or
xorb
pop
inc
jb
lcall
add
pop
cmpsb
shlb
sar
pop
mov
loopne
cmpsl
jnp
dec
or
loopne
mov
insl
inc
pop
pop
mov
pusha
dec
jb
lock
add
mov
js
mov
add
bound
popf
pop
lock
jl
mov
pusha
mov
and
popf
lods
inc
and
xorl
push
and
repz
pop
or
std
xor
jl
outsl
dec
gs
inc
pop
pop
adc
clc
cmpsb
mov
and
fldcw
add
sbb
imul
xchg
lret
pop
lret
js
fcompl
ja
xor
sub
pop
jns
pop
popa
dec
outsl
lods
xor
push
pop
arpl
pop
push
mov
dec
movb
rcll
ret
sbb
mov
outsl
insl
push
dec
mov
out
mov
rcrb
fbld
idiv
jle
and
pusha
pusha
pop
js
sarl
fnstenv
sbb
test
gs
xchg
or
cmp
sub
inc
jg
push
and
add
repnz
mov
mov
jg
test
ret
xchg
mov
mov
je
cltd
rorl
dec
lcall
aas
addb
clc
orl
outsb
push
push
jno
and
addb
hlt
jmp
out
pusha
xorb
rol
and
mov
pop
das
xor
inc
sbb
fwait
insb
pop
push
push
mov
scas
loopne
cmc
mov
mov
fisubs
and
lds
aas
movsb
rol
das
test
mov
gs
shlb
mov
pusha
arpl
add
jmp
mov
lods
nop
and
add
jbe
imul
aad
jl
repz
fisttpll
add
int
dec
addb
hlt
jno
mov
xor
subl
add
rep
pop
sbb
pusha
rcrb
popf
test
cs
or
or
pusha
jnp
and
pop
jnp
fs
leave
outsl
dec
lret
pusha
jg
enter
adc
andb
gs
mov
pushf
xchg
xchg
inc
orb
int
lods
pusha
pusha
pop
add
lcall
cli
bound
or
add
pusha
cmp
dec
mov
test
lods
shll
add
and
fcompl
prefetch
or
pusha
and
js
adc
shl
scas
xor
iret
add
mov
loopne
rolb
and
call
sarb
jmp
push
sbb
lock
pusha
loopnew
shlb
dec
loope
sbb
outsb
aaa
add
andb
inc
shl
mov
insl
inc
bound
push
stos
addb
rol
push
out
pop
out
imul
js
leave
inc
sahf
test
lahf
add
loopne
test
in
xchg
aaa
lcall
add
inc
cli
inc
lcall
dec
sub
shlb
call
and
mov
andl
and
inc
mov
adc
jg
xchg
out
xor
outsb
jnp
setbe
inc
cwtl
cmp
and
mov
cld
dec
inc
and
xchg
jne
iret
cmp
and
jne
ljmp
inc
sbb
popf
test
and
ljmp
or
mov
push
movsl
std
mov
cld
insb
sbb
sub
jmp
pause
lea
shrl
jge
lahf
jne
test
pop
add
rorb
rorb
jo
inc
pusha
iret
into
xchg
sahf
cmc
aaa
and
daa
jl
ss
sti
add
in
and
loopne
pusha
inc
mov
ljmp
jne
cmp
stos
and
andb
xor
arpl
arpl
and
add
xchg
adc
mov
jmp
pusha
inc
adc
fmull
pusha
pop
les
jo
fisubrs
aam
sub
jbe
mov
cmp
inc
pusha
xchg
cmp
cmp
rorl
sub
or
aam
ljmp
aam
sub
sub
and
outsb
aam
and
test
mov
inc
inc
shrb
mov
loopne
dec
ds
add
mov
and
sub
add
push
mov
inc
sbb
loopew
loopne
or
and
and
pop
iret
das
arpl
out
hlt
mov
jnp
mov
and
packuswb
lods
sbb
and
aas
ds
jmp
add
mov
addb
add
popf
fdivl
pop
or
and
mov
jnp
outsb
cmp
fisubl
pop
mov
addb
loop
loop
rep
sbb
add
shlb
das
sti
es
mov
andb
clc
dec
lock
xor
sub
jecxz
adc
or
pusha
xchg
aam
adc
inc
xchg
xor
and
and
push
or
push
rcll
xchg
push
mov
jns
jge
imul
movsb
mov
xor
movsl
mov
add
rolb
adc
rorb
xchg
enter
shlb
cli
inc
mov
cli
mov
add
pop
scas
add
lea
mulb
es
loopne
push
and
mov
cltd
ss
fdivl
adcl
mov
sbbb
mov
mov
subb
jo
and
shlb
and
sar
add
addb
sub
add
andb
push
xor
mov
cmp
jb
dec
test
rcrb
out
pusha
pusha
mov
add
pusha
push
sbb
movsb
and
int3
inc
inc
ja
data16
rol
jp
sbb
inc
insl
scas
mov
jae
dec
mov
jge
insb
jo
jne
xchg
xchg
aad
xor
js
pusha
and
js
inc
pusha
popf
ljmp
lret
shlb
fs
insl
jle
push
incb
rolb
add
into
mov
loopne
shll
addb
xor
dec
enter
cmp
rolb
inc
cmp
mov
fxch
and
rolb
popa
push
pusha
pusha
jg
cmc
mov
loopne
xor
pusha
inc
test
xchg
js
pop
rdtsc
push
push
push
cmp
jo
shlb
scas
sub
loopne
sub
lret
lods
jecxz
push
jmp
loopne
mov
jnp
stc
add
in
jo
popf
xorl
mov
data16
add
scas
add
mov
test
sarb
dec
cmp
inc
jns
mov
pop
dec
pop
inc
mov
and
cmp
jge
xchg
mov
outsl
cli
pop
nop
aad
int3
icebp
dec
cmpl
cmp
mov
rclb
add
orl
jg
pusha
and
aaa
ss
and
add
ja
call
inc
xchg
pop
out
mov
and
jo
ss
scas
rol
mov
fcmovnu
cmp
shl
scas
mov
xchg
mov
insb
mov
sbb
lds
in
sub
outsb
xchg
imul
and
mov
outsl
cwtl
movsb
andb
lock
and
pop
xchg
test
inc
xor
mov
sbb
aas
fdiv
ss
rol
xchg
ss
repz
fdivrs
and
inc
lds
inc
loope
hlt
test
adcb
loopne
scas
loopne
es
loopne
repnz
adc
test
movsl
jmp
mov
movzwl
inc
push
pop
xor
loopne
fs
dec
xor
push
shlb
xchg
popa
popf
pop
jo
xchg
imul
dec
add
pusha
jnp
cwtl
xor
mov
jo
push
and
inc
jg
loopne
fisubrl
pop
fisubrl
inc
add
and
pusha
lahf
pushf
push
idivl
mov
subb
jmp
in
lock
xchg
sbb
or
and
gs
mov
push
andb
dec
adc
sub
add
loopne
pop
xchg
outsl
sub
imulb
lea
jge
sbb
add
add
xor
repz
xor
ljmp
sub
andb
test
mov
add
add
add
loopne
mov
orl
shlb
pop
lcall
add
rolb
movsl
push
andb
pusha
mov
ljmp
pop
or
stos
shl
cmp
mov
xor
pusha
xlat
add
loopne
sahf
aaa
jae
fwait
pop
push
pop
jne
jbe
enter
mov
rcrl
sahf
xor
mov
std
mov
mov
pop
and
loopne
or
loopne
aad
dec
inc
jbe
pop
shll
mov
xchg
enter
enter
mov
gs
xchg
and
mov
add
add
insb
aas
dec
cli
inc
addr16
pop
aad
mov
ret
fs
loopne
rolb
xchg
xchg
incb
cmp
mov
sti
jmp
inc
xchg
dec
push
imul
shrl
loopne
or
out
mov
mov
lcall
std
out
cmp
ds
stos
pusha
rcr
adc
xchg
dec
adc
lea
dec
sbb
mov
add
xchg
out
mov
outsb
push
jo
mov
and
jmp
outsb
xchg
mov
sbb
mov
mov
mov
and
xchg
iret
adcl
popf
test
loopne
pusha
shl
mov
inc
pop
add
mov
fs
call
aad
adc
jnp
pop
jp
in
push
lahf
cmp
mov
mov
fwait
loopne
and
adcb
xor
das
mov
cli
fildl
addb
add
das
cwtl
fwait
out
test
and
loop
pusha
add
cmpsb
add
adc
insl
roll
and
mov
lods
movsl
jno
ficoml
inc
test
leave
jmp
or
addb
loope
or
pusha
insl
dec
lds
mov
stc
ror
add
xor
fcoms
lret
mov
and
add
fnstenv
pop
xchg
mov
add
enter
insb
js
mov
and
jns
push
mov
inc
inc
out
lret
and
add
out
sbb
loopne,pn
movsb
and
cmpsl
out
xor
push
shlb
or
loopne
jp
jnp
loopne
add
rcrb
or
pusha
roll
adc
outsb
test
inc
popa
inc
jae
flds
pop
iret
scas
rolb
andb
and
fsubl
ficomps
in
push
andb
rclb
mov
jmp
xlat
mov
xchg
adc
jo
cmp
addb
mov
dec
mov
aas
pop
loope
sub
int3
outsl
arpl
sub
loope
pop
jmp
adc
addb
scas
add
xchg
cmc
addb
shrl
movsl
jne
lods
nop
or
sub
lret
pop
sub
push
mov
mov
addb
sub
repz
or
rorl
and
pusha
scas
pop
outsl
or
fmul
dec
fnstsw
xchg
mov
fistpll
scas
andb
sahf
dec
push
shlb
rcrb
pusha
mov
loopne
ss
mov
cmp
imul
sub
and
jge
es
loopne
inc
pusha
and
jb
call
add
jp
ret
outsb
cmpl
loop
mov
loopne
jne
adc
dec
push
cmp
outsb
lock
test
mov
out
xor
sahf
cmp
xor
and
ret
mov
hlt
cmpsb
loopne
scas
and
ret
jno
add
inc
aas
pop
xlat
push
andl
pusha
inc
push
test
inc
fnstcw
adc
stos
andb
bound
cmc
jge
insl
sub
and
mov
into
bswap
mov
pop
into
lahf
fistpll
lret
mov
inc
fs
in
aas
mov
xor
pusha
rcrb
lahf
jg
pushf
test
andb
cmpl
clc
inc
push
test
and
jle
inc
cld
mov
xor
inc
adc
shll
in
lods
pusha
and
mov
subb
mov
movsl
stos
and
dec
mov
xlat
popa
in
insl
call
shlb
data16
inc
std
cltd
jno
addb
orb
jecxz
incl
ja
adc
test
sbb
popf
lret
loopne
add
mov
mov
addb
fcoms
imul
cli
adc
jmp
mov
xchg
test
jmp
pop
outsb
xor
inc
mov
mov
xchg
inc
lock
shrl
addb
pop
test
inc
lahf
push
push
jbe
and
pusha
mov
jle
in
inc
pop
nop
push
mov
cmp
pusha
mov
pop
adc
lret
jne
leave
cmc
or
or
loop
and
pop
test
das
clc
push
fcmovnu
and
xor
mov
pop
mov
add
rcl
cltd
cmp
fmulp
adc
mov
leave
bound
int3
aas
int3
sbb
adc
ds
and
test
add
add
call
cmp
insb
cmp
mov
icebp
inc
sbb
jno
and
push
and
stc
lock
mov
shlb
inc
fistpl
pusha
inc
adc
xchg
scas
loopne
mov
jg
stos
add
xor
sbb
pop
fiaddl
loopne
movsl
sub
and
sub
or
xorb
cmp
jl
cwtl
lret
int
push
mov
shl
inc
jno
push
loopne
ret
enter
mov
inc
xorb
xor
pusha
inc
in
dec
aas
inc
inc
xchg
cld
andb
pop
mov
pop
adc
and
mov
dec
xchg
fbstp
jmp
xchg
test
mov
mov
jecxz
and
andb
push
jl
mov
mov
and
inc
dec
mov
jmp
in
sti
lcall
mov
fwait
cmp
rep
mov
inc
fildll
mov
push
ret
jae
mov
in
cwtl
test
add
mov
rorb
or
loope
inc
jmp
pop
inc
add
std
clc
mov
and
stos
loope
ds
imul
or
and
jmp
xchg
in
aas
out
sub
rcrb
lock
sar
jbe
or
mov
add
stc
sbb
daa
mov
rolb
loope
rorl
shlb
add
push
cmp
jns
mov
and
push
add
adc
mov
shlb
pop
sub
mov
and
out
adc
inc
loopne
jae
lods
ljmp
cmc
adc
pop
push
mov
add
pop
rcll
insb
pop
cli
inc
popa
clc
jle
pop
pop
sbb
pop
out
call
jmp
leave
or
add
mov
push
xor
ds
adc
cmp
pop
outsb
out
in
xor
add
pusha
push
pop
jg
mov
test
cmc
clc
xor
sar
sub
dec
mov
fmuls
sub
addb
loopne
dec
jb
mov
icebp
or
adc
mov
add
popa
sar
enter
mov
and
jecxz
pusha
inc
jnp
push
dec
call
or
xlat
adc
dec
xchg
mov
mov
loopne
and
cmpb
pusha
add
jo
arpl
mov
mov
rorl
push
decl
fsubs
and
cli
pushf
lcall
and
mov
scas
add
sbb
mov
sarb
and
out
in
xor
subl
jmp
in
xor
sbbb
shlb
loopne
push
cmp
pushf
push
aas
add
jno
inc
mov
loopne
or
and
imul
xchg
and
jmp
jae
jo
iret
jne
loopne
lahf
leave
adc
into
fcomp
shll
mov
rolb
jge
pop
lcall
mov
add
aaa
and
pusha
lea
mov
sbb
push
in
ret
cli
lock
pusha
mov
mov
addb
loopne
sahf
in
pushf
das
add
jnp
rep
cmp
xor
lock
xor
rclb
xor
loop
mov
mov
and
jecxz
ja
icebp
xor
ret
hlt
jb
les
negb
xor
loopne
adc
jmp
sarl
push
addb
popf
xchg
dec
icebp
imul
push
sbb
inc
push
inc
inc
and
mov
sti
movsb
loopne
push
inc
xorb
and
fcmovnb
fbld
ret
in
clc
mov
addb
addb
scas
push
mov
in
xchg
clc
xchg
stos
mov
lods
dec
dec
jno
roll
pop
ret
and
jge
adc
dec
outsl
shrl
loopne
mov
adc
add
add
pusha
xchg
lcall
jmp
fisubs
loopne
xor
scas
inc
aam
imul
jg
adc
adcb
jns
mov
and
or
and
add
pusha
sbb
mov
add
movsl
pop
out
push
addb
jge
fmull
nop
js
loopne
call
push
shrb
sub
pusha
mov
cld
pusha
jno
inc
and
xchg
outsb
sbb
pop
inc
pop
inc
xor
movsb
add
add
cmp
andb
sahf
cmp
add
mov
pop
mov
lds
jo
popa
ljmp
in
sub
xlat
xchg
pop
int
xchg
dec
adc
sub
mov
and
fdivrl
mov
pop
push
repz
loopne
lods
xchg
imul
icebp
insb
inc
daa
int3
outsb
pop
pop
jae
test
and
inc
and
jae
loopne
outsl
fldenv
add
cli
adc
shlb
xchg
lcall
stc
test
aas
push
or
pusha
inc
and
loopne
cmc
mov
push
or
subb
jmp
and
mov
and
mov
pop
loopne
pop
jbe
xchg
mov
xor
adc
std
repz
add
js
lds
add
out
jbe
sti
jne
adc
jge
xrelease
loopne
mov
dec
filds
inc
or
sarb
clc
cmp
insb
sbb
push
fcmovnb
inc
aas
mov
das
jb
cmp
add
ret
mov
dec
jle
inc
and
inc
cmp
adc
stos
out
jmp
cmp
xor
and
mov
pusha
loop
xchg
xor
adc
push
pop
filds
inc
rcl
movl
sbb
fisttpll
pop
xchg
int3
rcl
and
pop
loope
cltd
movsb
mov
negl
mov
or
add
lcall
mov
sbb
ret
jg
push
call
pusha
cmp
mov
xor
sahf
sub
aam
iret
xor
add
xchg
ret
mov
and
adcl
andb
cli
jg
call
pop
adc
jbe
clc
xchg
inc
jge
cmp
mov
inc
jp
pop
cltd
add
fldenv
or
push
adc
and
jns
jmp
pusha
or
sbb
loopne
inc
pop
lock
mov
jbe
and
pusha
loopne
mov
roll
add
shl
addb
push
mov
jb
shl
pop
sub
ja
mov
pop
icebp
scas
and
stos
and
inc
mov
inc
jl
jmp
add
lret
pop
incl
add
add
movsl
or
add
lahf
add
ret
rcrb
sub
aam
mov
jne
mov
insl
inc
aas
in
inc
add
dec
fucomip
iret
lahf
fldt
aam
pop
or
adc
mov
push
pusha
ror
out
aad
js
inc
and
aaa
jge
lret
pop
xlat
lcall
shl
mov
mov
push
xor
rolb
pop
ss
mov
cld
xor
imul
inc
loopne
hlt
iret
pop
mov
pop
mov
jb
mov
test
mov
sbb
mov
loopne
mov
sbb
insl
shrl
loopne
cmp
fwait
cmp
repnz
push
jp
inc
add
orl
repz
mov
popf
adc
test
and
cmp
ja
out
ret
imul
imul
or
es
pop
imul
enter
cmpsb
rolb
jb
lods
clc
cmpsb
shl
inc
add
sub
and
push
cmpl
insl
out
hlt
stos
loopne
shll
jb
and
or
jecxz
mov
hlt
test
je
pop
jo
mov
adc
imul
pusha
or
pusha
jl
les
and
addb
mov
rorb
push
and
rcrl
imul
loopne
add
pusha
das
insl
insb
cmp
inc
cmp
loopne
sub
mov
adc
shlb
ret
outsb
icebp
sbb
mov
popa
mov
mov
ds
pop
push
push
cmp
inc
or
mov
loopne
push
pop
xchg
addb
pop
fistl
leave
push
mov
push
add
cmp
ds
cmp
push
jmp
and
shlb
iret
push
add
lea
andb
cmp
pop
movsbl
cmpsb
rolb
mov
lret
xchg
pop
jmp
sbb
or
xor
push
ds
fisubl
in
xchg
outsb
icebp
sbb
shlb
pop
dec
addr16
jnp
push
push
cltd
idiv
and
add
or
adcb
xchg
pop
stc
insl
dec
test
pop
cwtl
dec
negl
aas
clc
fildll
xchg
mov
sub
and
sbbl
movsl
inc
fisttpll
and
push
push
in
mov
loopne
jg
adc
out
xlat
fwait
and
shrb
jmp
sarl
inc
mov
inc
enter
and
pop
arpl
addb
xchg
lahf
jb
js
outsl
xchg
popf
test
add
push
sbb
mov
inc
jno
pop
mov
xor
pop
push
scas
rolb
andb
loopne
push
jmp
sti
in
push
mov
adc
test
or
and
shlb
andb
mov
push
xchg
add
divb
or
ja
sbb
shll
std
repnz
pusha
and
sub
or
andb
scas
cmp
inc
mov
mov
add
mov
jecxz
jns
mov
and
loopne
into
cmp
rol
xchg
xlat
mov
lcall
imul
fstsw
inc
push
inc
inc
ss
stos
inc
mov
jle
push
adc
in
jb
and
and
xorb
fnstcw
mov
ret
and
jg
test
rolb
and
hlt
pop
stc
add
icebp
pop
and
pusha
sbb
push
mov
ss
rorb
out
xchg
xchg
pop
pop
mov
inc
mov
jnp
cmp
pusha
mov
jne
cld
or
and
pusha
mov
loopne
mov
add
addr16
cs
add
jmp
imul
mov
push
lcall
cltd
xorl
enter
lea
clc
scas
mov
dec
shlb
inc
in
sub
rclb
ljmp
mov
orl
fisubl
negb
cltd
int
add
mov
add
pusha
shlb
loopne
popf
sti
xchg
xor
adc
fsubs
test
cmp
js
rorl
xor
roll
inc
shlb
int
je
shll
sbb
int
test
adc
mov
test
jge
lods
pop
cmp
mov
add
pusha
add
push
inc
rcr
outsb
loopne
clc
and
sbb
shrb
fdivs
shl
in
pop
pop
pop
out
jno
mov
in
cmc
sbb
add
cli
push
pushf
clc
leave
test
pusha
bound
mov
lods
andb
testb
hlt
ret
xor
aas
adc
outsb
rcr
and
and
sbb
ljmp
push
divl
loope
inc
repnz
adc
mull
and
in
mov
inc
std
mov
rcrb
addr16
push
out
out
aaa
pop
repz
and
jl
mov
mov
add
sbb
int3
fucomi
dec
push
xor
mov
into
test
dec
outsl
test
inc
push
pusha
loopne
push
aam
jno
dec
loopne
and
test
inc
loope
adc
test
int
pusha
dec
ss
push
push
sub
adc
out
sub
adc
adc
leave
cmpsl
leave
js
cmpsb
mov
push
jae
outsl
sub
int3
mov
mov
mov
mov
xchg
arpl
xor
inc
push
mov
icebp
sbb
jne
rolb
pusha
mov
lds
mov
mov
inc
rcrb
xchg
pusha
pusha
into
mov
add
inc
in
xchg
movsb
addb
out
and
fdivl
sub
jl
aas
mov
rcrb
cmp
fisttpll
addr16
andb
aam
ret
dec
pop
push
push
loop
je
addb
push
mov
or
rol
pusha
and
adc
shrl
shll
movsb
inc
add
jae
cmp
loopne,pn
cld
xchg
in
and
sbb
loopne
shlb
lret
add
mov
loopne
loop
mov
inc
mov
dec
push
outsl
cmpsl
inc
mov
and
fdiv
in
sub
loopne
cli
pop
rol
xor
fmul
iret
jo
or
cmp
pop
fistps
insl
mov
shlb
mov
mov
loop
idivb
jne
cmp
shrl
cli
lods
pusha
jno
in
xchg
scas
push
and
jge
icebp
in
jge
push
repnz
adc
imull
push
xor
jae
xor
push
xor
mov
test
lret
adc
lcall
stos
push
inc
add
std
rcll
shrb
xlat
mulb
jb
stc
ja
loopne
push
outsb
xlat
cltd
push
mov
lahf
push
movsl
adc
loopne
push
sbb
ret
and
loop
loopne
push
and
xchg
jo
lcall
mov
add
out
mov
cmpb
add
push
mov
inc
and
xchg
loope
xchg
call
jmp
or
pop
sahf
int3
test
pusha
dec
jle
arpl
fmuls
loope
jecxz
fistl
dec
mov
xor
pop
roll
add
inc
loopne
cmp
push
mov
mov
icebp
fistpl
add
mov
iret
scas
xor
mov
data16
addb
fistpl
outsb
push
add
cmp
mov
add
nop
mov
push
cmp
jae
adc
cltd
pop
xlat
sub
add
shlb
hlt
pop
pop
lcall
lcall
mov
subb
in
inc
loopne
movntps
push
and
pop
decl
jmp
lds
push
pop
inc
sub
pusha
cwtl
loope
inc
cmpb
mov
add
data16
pop
inc
enter
out
sub
out
and
das
loopne
inc
and
adc
pusha
and
into
xor
push
push
outsb
add
pusha
sti
xor
pusha
jnp
sub
sbb
repnz
in
adcb
inc
pop
sahf
mov
push
adc
mov
add
push
mov
mov
mov
mov
dec
jmp
mov
aaa
push
fisubl
rolb
add
add
mov
pusha
cmp
add
mov
add
and
shlb
or
call
add
mov
mov
sarl
sub
addb
add
rcrb
iret
cmc
cltd
push
inc
cli
cmp
sub
sbb
cmc
push
push
inc
pop
xchg
mov
movsl
sahf
daa
or
add
lret
loopne
jo
test
lcall
in
push
jne
pusha
adcb
les
push
dec
int
test
and
xchg
mov
and
in
test
loopne
and
mov
add
dec
fsubrs
out
sbb
inc
pusha
sbb
cli
fs
and
andb
and
xchg
movsl
pop
xor
sub
shrb
jmp
sub
add
lcall
mov
out
dec
mov
lcall
xor
and
mov
pusha
add
or
sub
ret
dec
ds
es
divb
out
insl
int
mov
jae
les
scas
and
add
inc
mov
pop
hlt
xor
pop
add
push
mov
and
mov
adc
push
je
sub
dec
mov
mov
punpckhwd
aad
fwait
xchg
or
and
mov
pusha
xchg
inc
dec
jo
sbb
sub
fsts
outsb
push
lods
and
inc
mov
addb
adc
rolb
xchg
sbb
add
push
shlb
loope
rclb
loopne
lods
loopne
clc
lds
mov
pop
add
pusha
cmp
sarb
sahf
mov
xor
cli
dec
addb
ljmp
imul
sbb
or
cmp
pusha
dec
popf
xchg
loopne
xchg
imul
in
rcrb
shrb
adcl
shlb
fistpll
adc
fstl
enter
test
and
push
icebp
into
dec
cmp
and
mov
loope
mov
xchg
cmp
lret
sbb
addr16
imul
aad
sbb
adc
rolb
push
xchg
sbb
dec
mov
inc
and
sahf
loope
aam
in
leave
lock
out
cmp
sub
sub
pushf
imul
decl
test
inc
fildl
pusha
pusha
xor
pusha
rorb
cmc
and
test
push
and
and
and
shlb
fs
cmp
inc
and
sarb
cmpsb
mov
out
mov
test
and
test
daa
inc
imul
popf
inc
inc
lsl
pusha
xchg
mov
dec
xchg
loop
cmp
adc
shl
xchg
insl
in
adc
dec
fisubs
sbb
sub
mov
rclb
clc
ret
pop
and
xor
arpl
inc
xlat
pop
jge
add
add
loopne
cmpsb
inc
mov
mov
dec
push
and
and
inc
or
inc
addl
sub
adcb
aad
pop
gs
sbb
rolb
stos
rol
scas
mov
sbb
xlat
cmp
scas
loopne
andb
shlb
ret
fld1
call
push
push
into
xchg
or
adc
popa
andb
xchg
inc
leave
bound
call
mov
adcb
lcall
lds
mov
loopne
and
scas
stos
add
mov
mov
sub
rorl
ds
mov
inc
push
pop
pop
and
mov
jae
push
mov
jno
cld
jecxz
inc
rolb
rorb
rorb
inc
imulb
lds
sahf
dec
cld
xchg
ds
movsl
addb
mov
popa
pop
jmp
lock
add
jbe
sbb
xchg
and
jl
add
mov
push
jbe
push
popa
stc
cmp
mov
mov
inc
roll
xor
jo
rolb
xor
cmp
ficoms
sbb
pop
mov
add
std
idivb
inc
or
loopne
and
mulb
loopne
jbe
gs
idivl
ret
jg
sbb
add
dec
adc
int
dec
adc
int3
cmpsl
outsl
and
jg
mov
add
xor
adcb
jne
inc
cmp
mov
dec
push
ret
fistps
loopne
jnp
loopne
scas
mov
addb
bound
inc
jecxz
xrelease
cli
test
repz
or
out
scas
inc
add
sub
and
lds
lods
loopne
and
sbb
mov
and
cli
movsb
add
inc
loopne
pop
adc
fcomp
lea
aad
jnp
ret
mov
dec
aas
sub
adc
dec
fisttpl
and
add
repz
and
add
rolb
mov
inc
jle
dec
or
pusha
pusha
sbb
jp
rol
fistpll
loopne
mov
inc
mov
lahf
loope
mov
mov
push
addr16
sbb
shll
das
add
shlb
pop
inc
add
fistpl
test
push
cmp
and
mov
lret
push
mov
mov
rcll
or
xchg
push
mov
mov
test
rorb
shl
dec
xchg
sahf
mov
sbb
out
and
inc
sub
sub
inc
bound
or
or
cmp
ja
aad
aaa
mov
shlb
xchg
je
xchg
cmp
xchg
fstpt
das
lahf
dec
push
dec
xchg
insl
add
add
and
pop
test
mov
pushf
xlat
jb
jno
push
faddp
movsb
mov
inc
sub
pop
addr16
das
es
pusha
out
je
dec
fnstsw
and
loopne
pusha
push
mov
pusha
mov
scas
loopne
sbb
jo
xchg
xor
and
xor
pop
pop
hlt
pop
push
lods
stc
mov
jbe
loope
push
and
lods
loopne
sbb
clc
aam
in
in
sub
pop
push
inc
push
sbb
push
and
sub
out
pusha
js
mov
dec
ret
dec
js
das
mov
ss
xchg
inc
mov
sbb
pop
pop
jmp
or
jne
aam
cmp
rorb
push
adc
mov
xchg
cmc
xchg
and
psrld
mov
push
sub
jp
cmp
inc
jmp
mov
adc
push
sub
sar
inc
fwait
xchg
or
mov
popf
sbb
add
loopne
les
add
test
pusha
clc
xchg
and
or
adc
and
arpl
mov
addb
xchg
mov
cmp
lret
sbb
aaa
pop
mov
addr16
dec
lret
mov
in
cmp
shlb
imul
cmpsl
out
sti
xchg
loopne
outsl
push
jne
and
sub
and
and
fidivrl
in
jle
xchg
inc
inc
test
pop
mov
fcoml
pop
push
aaa
jae
lret
fmull
repz
jnp
int3
push
or
xchg
sub
add
jmp
inc
mov
inc
int
mov
loopne
push
sbb
lods
rolb
pop
fists
jo
cmpsl
inc
das
shrl
mov
add
pop
out
or
add
lea
pop
out
mov
lods
andb
add
dec
mov
addb
inc
and
loopne
mov
inc
inc
and
out
dec
pop
fcoml
lds
sbb
addb
xor
cmc
lock
in
adc
dec
mov
and
add
out
mov
out
sub
subb
cmp
mov
add
aam
movsb
inc
pusha
sub
jb
pop
push
inc
push
cltd
sti
mov
lret
mov
or
pusha
imul
adc
ror
or
shrb
sbb
in
cmc
mov
ss
mov
ja
jg
jne
ret
or
in
int3
aas
ret
mov
adc
xor
lret
add
inc
cmp
ror
aam
pusha
mov
pop
out
imul
jecxz
rolb
sub
jns
imul
lock
inc
insl
andb
outsb
push
push
adc
sub
pusha
xlat
and
and
jge
inc
mov
mov
cmpsl
xchg
lret
sub
and
jle
or
adc
cli
dec
popa
test
lea
sub
mov
fidivrs
shlb
pusha
inc
out
inc
loopne
iret
inc
out
fisubrl
pop
push
adc
sbb
inc
ret
xchg
pop
mov
in
push
or
or
test
and
push
sub
add
add
xchg
popa
push
out
lds
add
pusha
rclb
add
xor
xor
pushf
adc
int3
shlb
rolb
loopne
pop
repz
push
lcall
cmp
push
aad
mov
addb
jne,pt
cltd
sbb
push
aad
testb
rcrb
addb
xor
icebp
hlt
push
loopne
xchg
dec
mov
pusha
mov
data16
mov
stos
fwait
pop
popa
outsb
adc
add
pop
lods
loopne
fs
mov
loopne
sub
add
cmp
push
sub
pusha
pop
add
cmp
dec
push
ds
cmpb
into
aaa
lcall
idivl
and
ret
adc
xchg
add
rolb
jns
mov
pusha
repz
test
arpl
xor
sarb
adc
andb
adc
or
and
mov
loopne
mov
jae
sahf
loope
dec
push
addb
sbb
and
jmp
inc
in
ljmp
and
std
xor
and
imul
fiaddl
inc
imull
lcall
mov
mov
andb
ss
pxor
imul
jns
and
add
adc
pop
sti
cmc
mov
frstor
bound
shlb
pop
mov
mov
sub
inc
and
inc
jno
ret
mov
push
add
cld
add
negl
jae
and
outsl
add
pop
sub
pusha
int
ret
gs
add
add
add
inc
push
js
pop
jo
and
std
adc
addb
flds
dec
cmp
xchg
dec
dec
adc
bnd
cmp
mov
add
pusha
inc
jmp
jge
fcoml
sbb
cli
jne
push
mov
sbb
lahf
je
scas
std
sarl
in
sbb
push
mov
add
rorb
inc
jge
cmp
lds
xchg
mov
xchg
aas
mov
loopne
into
dec
popa
xchg
or
mov
divb
addl
scas
pusha
add
or
orb
pop
or
add
push
repz
rcr
leave
sbb
and
jne
dec
mov
daa
stos
push
lock
outsb
mov
and
repz
mov
inc
inc
lret
movsl
dec
add
and
add
lret
and
loop
into
fbld
pop
and
idiv
jne
sbb
mov
add
fstl
inc
jb
cld
sub
and
scas
adc
andb
xor
bound
cli
mov
or
sbb
jmp
jmp
add
dec
xchg
dec
adc
push
hlt
es
add
pusha
and
lods
dec
xchg
scas
dec
adc
lret
aad
rolb
or
and
adc
xlat
in
xor
sbb
pusha
fstpt
test
jo
mov
add
mov
add
cltd
lods
shlb
inc
fstps
jb
and
pusha
add
xchg
cmc
mov
rcrb
sub
shlb
jl
pusha
inc
and
and
add
pusha
mov
pusha
rclb
subb
test
pusha
rcl
adc
push
mov
and
sub
and
scas
shlb
pop
neg
jmp
and
and
sbb
sbb
loope
mov
mov
sub
mov
fs
and
stos
mov
and
inc
shrb
loopne
push
stos
andb
xor
dec
add
cmp
pusha
and
cmpsl
mov
movsb
addb
pop
pop
inc
xlat
adc
push
inc
cmpsb
addb
cmp
loopne
xchg
mov
mov
jle
and
mov
enter
imul
scas
imul
jnp
aaa
push
cmp
jae
dec
imul
loopne
loop
mov
rol
sub
fisubrs
loopne
pop
xchg
xor
loop
mov
rolb
rolb
jne
jno
shl
orl
pop
jl
inc
shl
jnp
fdivr
or
pusha
push
rolb
pop
push
sub
shlb
andb
inc
outsb
xchg
mov
or
popf
mov
add
cmp
sub
mov
lods
cmp
loopne,pn
pushf
xor
or
loopne
push
add
test
pusha
add
fidivl
jmp
cmp
mov
cmp
sbb
loopne
ret
inc
and
mov
mov
lret
shlb
cmpb
jb
xlat
or
inc
jg
adc
lods
cmp
xor
jne
ss
jmp
push
stc
inc
call
sub
and
test
pusha
fisttpll
arpl
xchg
lods
addb
fistl
pusha
pusha
adc
inc
dec
std
repnz
popa
inc
shlb
and
loopne
loopne
loope
pusha
pusha
dec
lods
add
jge
test
fistpl
mov
mov
rclb
mov
bound
popl
inc
and
loopne
push
loopne
push
jl
push
push
loopne
stos
xchg
adcl
add
test
add
jge
push
mov
movsb
rolb
shr
out
push
rorb
add
adc
xchg
push
xchg
adc
adc
bound
outsl
or
inc
fldt
bswap
ja
cmp
pusha
push
idiv
pushf
pop
pop
loopne
pop
test
pusha
xor
rol
mov
movsb
loopne
clc
sbb
out
mov
lret
mov
sbbl
pusha
and
cmp
andb
mov
stos
rolb
rolb
cmp
pop
inc
iret
mov
addb
rolb
neg
adc
inc
add
add
jecxz
call
lcall
mov
inc
inc
out
ficompl
insl
adc
sub
and
fisubrs
sbb
andb
push
int
mov
cli
xchg
xor
pop
mov
pusha
inc
mov
pop
mov
aad
les
enter
stos
pop
and
inc
call
jo
xchg
mov
add
andb
and
lret
jno
stc
adc
add
mov
loopne
loopne,pn
push
into
ljmp
testb
mov
std
mov
jns
cmpsb
mov
xchg
std
mov
movsl
arpl
sarb
xchg
dec
inc
push
jno
add
xchg
sti
push
adc
ret
in
and
imul
loopne
clc
mov
loopne
js
and
pusha
scas
add
fs
mov
xchg
xchg
xor
stc
ja
cwtl
xchg
inc
adc
xor
shlb
mov
leave
dec
sbb
orl
xchg
pusha
loopne
xlat
mov
cli
in
das
int
mov
jmp
inc
pop
cmpsb
add
push
pusha
and
pop
push
rolb
dec
addr16
test
sub
fwait
int3
daa
mov
xchg
xchg
std
xor
test
add
and
xchg
mov
das
mov
and
add
movsl
mov
iret
jecxz
sbb
dec
int3
and
in
daa
adc
add
in
mov
js
repnz
and
test
loope
add
add
sti
mov
sub
add
shlb
mov
mov
sub
clc
icebp
lea
sbb
popf
sbb
rcrl
imul
sub
mov
pop
mov
shrb
add
xchg
inc
ljmp
repz
jmp
add
add
loopne
pop
add
pop
scas
loopne
dec
and
loopne
sbb
sub
inc
inc
mov
add
cmp
jp
je
sbb
in
add
loopne
adc
test
add
sbb
push
inc
scas
mov
and
insl
inc
rcll
in
sub
ret
jp
pusha
jnp
ss
shl
push
loop
and
negl
insb
loopne,pn
cmp
lock
push
sbb
out
jg
sbb
mov
rorb
stc
jne
dec
pop
xor
into
outsl
lret
sbb
outsb
sub
stos
sub
adc
mov
lods
das
loope
xor
aaa
mov
jns
sub
sbb
andb
inc
ror
or
es
mov
loopne
pusha
subb
cmc
inc
sbb
xor
sbb
dec
or
loopne
jns
test
pusha
sbb
inc
into
add
shlb
jns
push
mov
add
subb
pusha
jbe
mov
and
addr16
lret
inc
out
jnp
aam
mov
iret
mov
sbb
pop
xor
sbb
mov
xor
mov
mov
jnp
pop
repz
or
loopne
adc
aad
add
add
add
out
mov
scas
loop
sub
pusha
ja
inc
test
or
xor
and
fidivl
data16
and
inc
out
jo
push
nop
out
mov
cmpsl
into
ret
dec
outsl
adc
pusha
lea
roll
loopne
ljmp
repnz
das
push
loope
and
and
rol
out
mov
rcll
lret
push
adc
mov
jns
fidivl
neg
and
pop
sub
les
test
aaa
mov
mov
andb
mov
mov
aam
cmp
jbe
jmp
test
sub
mov
pusha
add
xchg
pushl
popf
rclb
inc
rcll
adc
shlb
xor
shl
lock
lds
loopne
pop
ret
imul
stos
mov
mov
pop
jg
in
mov
imulb
shl
test
dec
in
mov
jbe
adc
cmpsb
pusha
pusha
cmpsl
mov
insl
push
rolb
and
xor
and
adc
ret
or
adc
out
sub
add
and
inc
out
dec
xor
in
and
jo
cmp
xchg
gs
push
insl
out
inc
dec
inc
sti
aad
shlb
addr16
xchg
mov
xchg
pop
pop
lcall
mov
mov
inc
popf
adc
fdivs
call
loopne
xor
pop
sub
pusha
jg
inc
cmp
sub
jnp
mov
push
mov
pop
dec
jmp
xor
mov
jl
xlat
lods
and
mov
jo
test
imull
or
and
xor
flds
pop
mov
mov
mov
in
sbb
cwtl
lock
call
pushf
pop
imul
hlt
shlb
fsubs
fdivs
lods
inc
test
aas
in
mov
call
aad
int3
mov
xor
sub
loop
mov
mov
pusha
jnp
push
pusha
add
arpl
clc
pusha
mov
xchg
push
outsb
cmpsb
and
pusha
mov
bound
shlb
loopne
inc
sahf
jge
bound
nop
sbb
xor
jecxz
rolb
loope
andb
ret
shl
fbstp
negb
pusha
inc
fildl
dec
sub
std
push
inc
pusha
cmpsl
dec
cmc
cmp
cmp
gs
das
fbld
loopne
dec
movsl
mov
les
into
lea
addb
arpl
adc
inc
mov
cmp
je
cs
mov
xchg
jae
shlb
cwtl
pop
divb
cmp
dec
icebp
ficomps
jnp
xchg
adc
fldl
sub
add
inc
mov
lcall
xchg
test
pop
push
adc
jno
aad
leave
scas
rolb
pop
sahf
pop
mov
xor
fdivl
sbb
addb
fcoms
repz
pop
or
inc
ja,pt
repz
repz
addb
mov
stc
sbb
ja
out
in
inc
add
inc
stc
jmp
sbb
inc
test
dec
ror
pop
xchg
sub
je
add
mov
push
sub
mov
pusha
add
inc
mov
popf
sbb
shlb
push
xchg
scas
inc
loopne
aad
add
pop
sub
lret
arpl
outsb
addb
sbb
mov
jne
xchg
pusha
sub
rcr
and
scas
lahf
xchg
pop
dec
push
icebp
iret
test
xchg
xchg
loopne
movsl
nop
and
pusha
test
lods
pusha
add
mov
fadds
mov
test
mov
add
push
std
inc
or
pop
and
add
in
push
and
push
sbb
pushf
pop
add
inc
out
push
jecxz
repz
sbb
lods
push
andb
aas
arpl
mov
rolb
pop
or
jl
cltd
lods
pusha
and
fbstp
add
pusha
in
int
sbb
mov
add
cmc
sub
subb
mov
roll
and
pusha
cmpb
sub
add
inc
and
fdivrs
movntq
add
sbb
mov
sub
test
lock
cld
inc
xor
cmp
push
hlt
push
dec
popf
pop
adc
aaa
sbb
adc
inc
ret
push
and
inc
ljmp
sbb
xchg
dec
sub
loopne
sti
push
cmp
popa
pop
mov
push
mov
inc
test
insb
fstpl
lods
in
dec
xchg
inc
in
mov
mov
sbb
inc
loopne
lock
and
jmp
push
adc
aad
lods
mov
addr16
pusha
cmpb
inc
scas
loopne
test
push
jbe
lea
inc
clc
sbb
dec
sahf
push
add
and
sub
sbb
mov
sbb
add
fsubrs
clc
cmp
test
mov
adc
insb
and
shlb
fcomps
fmuls
andb
pusha
sahf
testl
les
and
xchg
xor
mov
fs
and
xor
ja
das
sbb
sub
pusha
mov
loope
inc
test
mov
fnstsw
loopne
cmp
and
mov
cmp
xor
jg
pusha
rolb
shl
inc
mov
inc
fsubl
add
mull
popa
in
dec
add
loopne
aam
mov
inc
and
jp
or
rolb
jns
ret
and
addb
xchg
test
pusha
cmp
inc
adc
shrb
or
xor
lahf
pop
xor
mov
xor
sub
mov
rolb
sub
sub
fsubp
stc
popa
test
adcb
leave
stos
rolb
pop
adc
mov
ss
inc
xchg
jp
lock
inc
mov
adcb
mov
mov
sarb
rorl
dec
xor
inc
or
loopne
mov
add
shrl
in
inc
test
loopne
push
add
rolb
hlt
daa
push
mov
out
mov
filds
lret
and
mov
sbb
cltd
lods
loopne
inc
js
in
add
push
nop
mov
addb
shl
rclb
sub
loopne
and
aas
lret
loopne
sbb
mov
jno
cmpsl
add
mov
mov
les
sub
imul
xor
mov
rolb
and
and
jmp
and
xchg
adc
jno
test
outsl
stos
popa
data16
and
loopne
mov
mov
insl
dec
fs
sub
std
int
push
test
mov
loop
add
or
inc
or
movq
mov
cs
pusha
jae
fadds
lret
lcall
fadds
jl
add
adc
rcrl
lods
aas
cmp
pop
dec
and
dec
cmpsl
aas
aad
and
addb
push
lahf
in
test
ret
inc
iret
mov
cmp
adc
jo
or
call
rolb
dec
sub
pusha
pusha
jae
adc
stos
andb
sub
and
inc
addr16
mov
rclb
mov
shrl
cmp
lock
in
adc
add
dec
sti
mov
insb
add
adc
push
inc
dec
adc
loopne
cmp
arpl
loope
push
xchg
ret
add
pusha
xor
imul
xchg
pop
or
inc
xor
mov
pop
inc
or
inc
sbb
repz
js
inc
mov
dec
insl
iret
sahf
stc
fwait
movsl
fdivl
rolb
and
pusha
cmpsb
pusha
mov
repz
push
testb
lahf
inc
mov
mov
addr16
pop
lds
xchg
pop
pop
and
push
fisubl
add
mov
loopne
pop
pop
mov
add
mov
push
shlb
inc
lock
data16
pusha
test
je
hlt
xor
popf
pop
invlpg
ret
call
dec
and
mov
xor
outsl
test
out
lea
outsl
push
clc
jle
and
loopne
leave
cs
rorb
or
rolb
test
mov
mov
and
ror
ja
jge
mov
mov
xchg
push
mov
std
pop
scas
addb
call
xchg
addr16
sub
cmp
ja
stos
lods
andb
dec
and
inc
cmp
je
inc
pusha
pop
iret
sahf
mov
lret
aas
push
sub
and
xchg
mov
loopne
andb
movsb
pusha
subb
and
inc
in
push
xor
addb
hlt
shll
and
pop
testl
std
or
fistps
adc
cwtl
add
ja
and
xchg
xchg
pushf
sub
ss
lods
arpl
inc
push
imul
add
jle
inc
xor
pop
push
das
sbb
adc
cmp
shl
sbb
shlb
loopne
jb
pusha
aaa
sbb
pusha
sbb
mov
rolb
or
mov
insb
iret
jecxz
mov
dec
hlt
int
loope
cmpsb
inc
sub
arpl
loop
sub
push
into
mov
shl
in
push
mov
mull
inc
rclb
or
and
lods
aam
cmp
dec
add
pusha
dec
push
mov
cld
push
mov
add
outsl
es
mov
aas
clc
mov
jno
dec
or
lds
test
imul
mov
push
and
popf
ret
adc
xlat
push
dec
pop
push
out
loopne
jno
ret
xor
or
add
and
fstp
dec
repnz
inc
pop
push
in
pop
mov
sbb
dec
out
test
shlb
ficompl
loopne
pop
adc
xchg
or
push
mov
pop
sub
mov
ja
shr
shlb
cmp
loope
aam
mov
loopne
inc
inc
cld
inc
inc
ret
cmp
add
adcb
push
sub
pusha
inc
mov
push
test
icebp
cmpps
add
popa
sub
and
inc
adc
ljmp
lock
adc
xchg
aad
fcoms
inc
aam
xlat
scas
pusha
cmp
popf
loop
and
repz
pop
aad
push
push
rolb
into
lods
pusha
add
loopne
stos
inc
rcll
pop
test
ficoms
sarb
mov
ds
lods
inc
pusha
daa
add
inc
inc
cmp
loopne
cmp
mov
cmp
pusha
mov
cmp
and
ror
loop
stos
sub
loopne
pusha
mov
jmp
cmp
je
or
adc
push
arpl
and
les
push
and
mov
rcl
sub
add
shlb
pop
pop
fstl
sub
xor
mov
xor
cmp
stc
cli
cmp
test
fadd
out
data16
hlt
outsl
icebp
clc
xor
lahf
push
js
lahf
mov
pop
jno
aaa
cmp
inc
dec
icebp
lahf
xor
mov
rolb
scas
and
in
mov
repnz
enter
stc
xchg
inc
dec
aas
jbe
in
push
or
loopne
mov
mov
pusha
push
sub
pusha
jno
mov
mov
sti
cli
repz
and
push
fldt
orl
xor
pop
popl
adc
adc
neg
push
mov
sbbb
cltd
inc
rorb
aam
test
xor
fstl
xchg
ljmp
rolb
popa
dec
loopne
add
and
pop
mov
jbe
xor
inc
mov
popa
arpl
xchg
enter
lock
sub
sbb
push
fcomp
pmaddwd
pop
lds
sbb
mov
ja,pt
push
insl
pusha
js
movsl
jae
lds
inc
icebp
jecxz
fnstcw
imul
fst
push
cld
xor
or
iret
push
out
pop
mov
adc
sbb
xlat
mov
sbb
loopne
arpl
push
iret
rcrl
gs
xchg
mov
xchg
pop
mov
andb
aas
xor
mov
add
ret
shrb
jbe
repz
mov
inc
sub
cmp
outsb
imul
and
and
mov
jb
mov
pusha
loop
orl
xor
ret
jmp
xchg
arpl
pop
sbb
ja
lcall
js
ja
xor
sub
cld
rorb
out
imul
jnp
and
dec
xchg
fsubs
test
inc
mov
lea
rcrb
das
adc
rcr
jno
inc
ret
xchg
sub
shrb
push
inc
inc
aaa
jp
jl
xor
shrb
and
or
and
insl
gs
sub
lcall
jmp
loopne,pn
cld
sbb
ret
xchg
clc
fwait
mov
std
scas
mov
push
cli
rclb
fnstcw
jno
dec
mov
arpl
or
and
fwait
and
shlb
mov
mov
jne
add
andb
and
or
scas
inc
inc
cmp
and
ss
popf
sbb
mov
mov
movsl
adc
std
loop
jne
out
int3
dec
sub
mov
inc
push
pushl
pop
cmp
and
adc
mov
and
loopne
pop
pop
loop
shlb
sbb
loop
mov
or
add
sub
and
add
xchg
stos
mov
test
adcb
inc
das
fbstp
shlb
inc
push
aas
mov
hlt
mov
pop
mov
dec
mov
into
andb
in
mov
js
dec
adc
in
and
loopne
arpl
inc
inc
mov
inc
enter
and
shrb
jg
mov
mov
pusha
in
pop
lods
mov
shlb
sar
hlt
add
pop
shlb
xor
loopne
inc
cli
ja
push
lret
dec
mov
sbb
test
ljmp
dec
fwait
das
inc
pop
dec
mov
inc
mov
xchg
nop
inc
and
sub
loopne
fbstp
push
lahf
cmpsl
je
inc
cltd
shlb
push
pop
insb
cmp
cltd
or
imul
sahf
call
xchg
xchg
mov
push
test
loopne
mov
mov
mov
dec
pop
sub
adc
call
add
movsl
pop
lods
shlb
cwtl
faddl
sti
mov
les
lods
fistl
add
mov
xchg
and
ret
aad
add
and
push
repz
xchg
pop
ror
jno
das
lea
jge
dec
insb
popa
popf
mov
lea
cmp
cmp
rclb
test
jns
scas
lea
inc
sub
shrb
xor
addr16
popa
mov
addb
pusha
sar
movsl
mov
fsubrp
testb
andb
sbb
loopne
clc
popf
jb
and
enter
and
andb
cmp
xchg
out
and
pusha
xorb
cltd
ds
pop
fimuls
xchg
ret
jbe
std
out
push
sahf
addr16
imul
sti
pop
inc
adc
cld
sbbl
add
mov
aaa
fidivl
inc
and
js
mov
lods
aas
pop
stos
mov
push
pusha
std
jg
lahf
ret
in
loop
sahf
fldenv
pop
cmp
push
stos
and
or
loopne
sbb
sbb
inc
add
mov
mov
cmpsb
add
ret
lea
jecxz
loopne
shrl
mov
inc
xor
adc
inc
inc
aas
lret
mov
addb
pop
mov
inc
and
fnsave
or
cli
dec
rol
les
xchg
mov
add
iret
dec
xor
push
jo
dec
in
cmpsl
sub
sarb
cmp
lret
fwait
lret
inc
add
mov
cltd
xchg
imul
aaa
fdivs
test
add
flds
andb
fcoml
add
fldt
aad
add
lods
mov
call
aad
pop
xor
out
in
cmc
testl
mov
loopne
std
les
push
mov
inc
pusha
fwait
adc
push
daa
das
pop
inc
sbb
lahf
push
in
push
or
rolb
out
pushf
dec
mov
addl
rorl
add
xchg
push
pusha
pusha
push
test
inc
out
mov
out
sbb
inc
dec
cltd
pop
cmpsb
rolb
push
mov
mov
lea
push
add
jnp
push
pop
adc
xor
hlt
mov
mov
loopne
or
loopne
addb
fdiv
mov
repnz
inc
jb
mov
loope
sbb
jno
arpl
inc
subb
add
inc
pop
inc
divb
inc
loopne
aaa
mov
pslld
movsb
mov
xor
hlt
addb
pushf
bound
int3
sbb
rclb
out
sub
sub
adcb
mov
mov
jge
jbe
pop
popf
jg
andb
sub
sub
fabs
imul
jnp
sub
sub
and
not
adc
mov
mov
fists
pusha
inc
movsb
inc
and
add
lods
inc
add
jnp
pushf
scas
mov
sbb
and
inc
ljmp
sahf
lcall
sti
ljmp
xor
adc
fstl
adc
dec
dec
or
xchg
sub
pop
leave
mov
and
dec
out
or
subb
loopne
inc
xor
andb
ret
pusha
sub
pop
mov
in
stos
shlb
loopne
in
outsl
push
shl
outsl
push
lret
jnp
lret
mov
xchg
pop
xor
nop
mov
adc
ljmp
pop
fcoml
xor
dec
sbb
sbb
and
inc
inc
mov
pusha
sti
outsb
jnp
xlat
lods
pusha
inc
xchg
rcll
mov
sub
pusha
jl
mov
test
add
pop
cli
jno
jge
std
adcl
mov
aas
aad
into
jno
add
rcll
cmp
and
outsl
mov
jmp
in
out
andb
js
bound
pop
lods
loopne
or
xchg
add
dec
mov
mov
sbb
ljmp
mov
and
mov
cmp
push
mov
dec
inc
pop
pop
jae
push
rorl
mov
mov
add
rcl
fwait
xchg
and
jp
sti
cmp
loopne
cmpsb
add
lahf
jp
pop
shll
add
mov
rolb
cmc
ret
addr16
push
rclb
dec
int3
inc
push
xchg
mov
les
and
adc
adc
and
pusha
sti
sub
imull
and
or
adc
imul
add
ja
nop
xor
movsb
pusha
inc
mov
loopne
lret
xor
loopne
insl
repz
or
add
add
mov
pop
std
rcrb
pushf
lret
outsl
stos
test
mov
push
dec
adc
jecxz
sub
andb
add
jns
jecxz
add
cltd
scas
in
out
outsb
cmpsl
lret
push
fnstsw
mov
jmp
jl
sub
loopne
mov
clc
pop
sub
cmp
adc
mov
arpl
mov
std
stos
push
dec
outsl
scas
and
insb
inc
jnp
push
sub
sbbb
mov
loopne,pn
add
adc
jmp
aas
xlat
sbb
lret
and
imul
jns
popf
xor
std
cld
popf
sbb
aaa
sbb
xchg
ljmp
and
loope
rorl
or
cmpsl
mov
inc
out
push
jno
adc
and
out
popa
outsl
fs
and
and
rorb
sub
ficoml
mov
cmpsb
mov
inc
or
adc
cmc
mov
ret
sbb
and
addr16
xchg
out
xor
sbb
mov
ret
fucomi
das
lock
sub
ja
lcall
mov
loopne
test
insl
fdivs
inc
mov
shlb
cltd
mov
cli
lock
sub
xchg
ja
into
das
and
and
cmp
js
andb
andb
add
js
inc
and
adc
push
mov
push
rcl
mov
sub
pop
in
int
call
xchg
or
test
dec
mov
mov
xor
addl
mov
and
addb
add
pusha
dec
mov
add
pusha
sbb
mov
fcoml
or
lea
in
xchg
sbb
mov
shl
adc
fnstenv
lahf
xor
addr16
sbb
shr
into
mov
lret
xor
test
pusha
dec
add
jecxz
dec
cmp
inc
pusha
cmp
jmp
mov
loope
fisubs
rol
or
inc
mov
jle
xor
push
jp
sub
and
push
cmp
or
mov
add
inc
jnp
inc
loopne,pn
mov
jg
sbb
pop
scas
bnd
cmp
fcmovbe
sahf
sahf
mov
mov
xor
push
cltd
pushf
nop
jne
cmpsb
inc
and
fiadds
dec
lretw
fsts
pop
dec
fidivs
mov
andb
mov
mov
pop
cmp
add
xor
cmpsl
stc
sbb
mov
mov
mov
and
call
jecxz
xchg
popf
addb
andb
mov
outsb
movb
inc
ror
add
inc
xchg
out
xchg
aad
fs
ret
scas
xor
mov
cwtl
or
inc
hlt
mov
int
pop
test
pusha
insb
fwait
clc
lds
loope
pop
push
ret
rorb
lcall
daa
fiaddl
shlb
aad
lahf
stc
sub
lcall
mov
pop
ficoms
pop
outsb
shrl
leave
inc
or
mov
mov
add
shlb
mov
push
jbe
mov
ds
add
scas
andb
sub
call
cli
pop
sbb
and
and
ret
mov
xchg
shrb
and
dec
mov
loopne
pusha
add
pusha
loopne
jle
pop
xor
loopne
mov
add
outsb
mov
out
dec
xchg
xor
inc
jmp
insl
push
pusha
and
push
pop
jne
cld
pop
xchg
negl
adc
idivb
scas
xor
pusha
pusha
sbb
cltd
lcall
jle
inc
mov
pusha
add
out
pop
ds
pop
xor
xchg
add
mov
ja
mov
pusha
std
dec
push
cmp
loopne
lods
mov
and
inc
inc
int3
add
pusha
mov
inc
loopne
fldenv
adc
loopne
mov
add
out
push
loopne
xor
inc
add
push
add
scas
adc
and
in
jmp
jb
pop
mov
dec
ss
and
dec
pop
cwtl
push
nop
cmp
cld
mov
call
inc
ja
arpl
loop
pop
pop
sbb
dec
jbe
jae
lods
andb
fdivp
ret
push
and
rep
fstps
dec
pop
das
mov
rcll
fldl
mov
xor
je
je
xor
pop
sbb
test
aam
cmp
in
xchg
insb
pop
push
mov
loopne
inc
out
and
loopne
sub
and
testb
inc
orl
sbb
dec
mov
add
ret
sbb
mov
add
into
add
xchg
xchg
in
mov
out
hlt
and
mov
fistl
dec
mov
pusha
or
pop
addb
cmp
into
or
and
hlt
pop
push
mov
shlb
addl
divl
inc
fcomp
push
mov
adc
jae
xchg
mov
push
aam
xchg
mov
in
pop
negl
inc
shrb
add
mov
decl
imul
andb
push
push
ss
dec
xchg
roll
loopne
mov
test
cltd
addb
bound
add
int3
sub
push
jae
jne
adc
lret
xchg
outsb
xchg
sbb
int3
push
dec
mov
xor
cmc
jno
dec
and
xlat
into
repnz
push
and
scas
popf
ljmp
loopne
or
xchg
sub
and
jmp
sarb
lock
rolb
mov
adc
andb
stos
jge
xor
jp
stos
shlb
pusha
sbb
add
mov
enter
sub
add
hlt
jae
aas
jecxz
aad
bound
pusha
and
jecxz
inc
and
sbb
inc
sub
loopne
jecxz
addr16
lds
push
xor
dec
loopne
xchg
pop
mov
loopne
insb
pop
mov
imul
pusha
or
pusha
ret
push
dec
mov
andl
and
add
adc
push
sub
jle
and
mov
inc
loopne
push
dec
inc
add
andb
push
xor
mov
sub
add
jnp
ds
andb
mulb
shlb
stos
or
pusha
pushf
push
push
pop
push
cld
test
adc
and
push
rolb
sub
inc
inc
cmp
pusha
add
rcl
repz
pop
push
lcall
or
repnz
add
clc
and
and
pop
or
sbb
jp
ficoml
xchg
push
fs
sbb
pop
shl
fisttpll
andb
mov
and
arpl
cmp
sbb
add
outsl
push
enter
cld
push
ret
add
and
sti
jb
mov
mov
rol
scas
sub
out
mov
pusha
pop
lods
addr16
aam
inc
push
mov
test
xchg
rorl
popa
sub
adc
mov
or
push
test
inc
mov
mov
ror
out
mov
sti
scas
lcall
mov
mov
test
mov
les
andb
pop
push
loopne
dec
sbb
pusha
push
dec
lret
lods
sbb
in
xor
aad
mov
mov
mov
push
pusha
shrb
jle
fcomps
shlb
jnp
addb
mov
push
mov
and
and
pop
stc
mov
add
dec
fcmovb
lods
daa
fxch
sub
pusha
lock
xchg
cmp
loopne
mov
cmp
or
ja,pt
test
addb
push
mov
pop
inc
pop
mov
je
and
pusha
loope
cmp
loopne
mov
inc
pop
outsl
hlt
cli
pop
loop
jne
pusha
shrb
and
and
and
inc
mov
fs
xchg
jge
mov
push
add
inc
lret
mov
mov
mov
and
cltd
sbb
loopne
mov
aas
xchg
gs
push
or
loopne
mov
inc
inc
inc
mov
pusha
cmp
in
call
rcll
int3
xor
out
push
push
stos
add
daa
adc
ret
inc
pusha
and
xchg
cmp
fld
mov
shl
jne
lret
push
pop
fucomi
mov
pop
mov
call
loopne,pn
pusha
inc
mov
mov
dec
push
je
ljmp
add
movsl
xor
sti
sbb
popa
test
shl
and
mov
jns
pusha
addr16
pushf
lds
xchg
cld
scas
loopne
lahf
fwait
jnp
lock
mov
iret
push
inc
sbbl
imul
adc
mov
inc
jg
stos
shlb
out
xchg
mov
dec
outsb
mov
inc
mov
sub
loopne
les
int
arpl
gs
push
mov
xor
dec
jne
jb
push
nop
mov
mov
cmp
jmp
inc
shr
push
imul
push
cmpsb
loopne
push
or
dec
ja
mov
add
pop
push
pop
push
dec
insb
fcmovnu
lret
dec
aad
mov
sub
andb
inc
aad
into
pop
mov
addl
xor
mov
jb
add
andb
lods
and
ficomps
mov
add
add
adc
rorl
inc
in
and
and
ret
inc
jns
mov
xchg
inc
sub
push
pop
jmp
idivl
mov
sub
ljmp
sub
mov
daa
sbb
push
sahf
jge
sarl
inc
mov
xor
push
rol
pop
insb
mov
add
xchg
sub
inc
jno
xlat
add
inc
loope
fnstcw
pusha
jae
orl
jno
cld
mov
in
ljmp
pusha
test
or
jmp
pop
and
and
fdivl
loopne
mov
adcb
cmpsb
shlb
mov
test
repnz
sti
add
pusha
mov
push
mov
inc
std
mov
fucomp
pop
sub
movsl
xor
imul
stos
rol
pusha
and
js
cli
jmp
jno
and
rol
and
pusha
icebp
loopne
sub
outsl
stc
or
dec
dec
sbb
pusha
loopne
push
adc
loopne
jb
dec
rcll
pop
test
lock
ret
loopne
pop
aas
and
jl
shrb
call
mov
rol
and
inc
inc
lret
in
mov
int
add
sub
loopne
lods
mov
jne
adc
inc
mov
push
pusha
or
add
lahf
rol
dec
jne
mov
negb
cli
cld
add
dec
inc
inc
lret
dec
cmp
ret
movsl
test
pusha
repz
mov
insl
dec
inc
cmpsl
cld
inc
stos
loopne
mov
adc
fs
inc
into
mov
jo
fistps
sbb
inc
das
movsb
inc
pusha
sbb
add
inc
clc
push
iret
andl
mov
inc
xchg
movsb
and
sbb
in
in
push
push
jg
sub
loopne
xchg
inc
inc
mov
sbb
mov
addr16
mov
mov
pop
ja
cmpl
mov
mov
rcll
stos
addb
and
xor
xchg
shr
mov
add
addb
mov
rcr
repz
mov
arpl
pusha
outsl
pop
repz
js
mov
ljmp
inc
inc
jb
pop
mov
pop
push
xlat
in
shlb
pop
adc
sub
mov
mov
dec
jecxz
cltd
dec
sbb
ret
xor
in
xchg
or
lahf
ret
jmp
jmp
mov
iret
lock
inc
pop
pop
inc
cltd
mov
cmpsb
inc
add
idivb
jp
or
dec
movsl
and
pusha
mov
repz
and
push
mov
mov
andb
cmp
addb
adc
data16
int3
pop
mulb
loopne
incl
fimuls
push
popa
inc
add
or
mov
pusha
je
std
jnp
out
aam
sahf
fs
or
pop
adc
mov
adc
scas
andb
and
inc
jnp
sbb
in
scas
sbb
mov
push
xchg
loopne
sub
adc
scas
and
aas
je
xchg
push
and
ficompl
andb
and
ror
loopne
xlat
test
cmpb
scas
cld
orl
mov
movsb
add
imul
in
push
or
add
lcall
lds
jecxz
pop
daa
xlat
or
nop
cld
arpl
fld
cmp
out
sub
icebp
mov
mov
sub
inc
fldl
ror
xchg
sub
and
add
xor
out
cmp
dec
pop
pop
pop
les
loope
dec
add
add
pusha
cmp
xchg
push
mov
shlb
xor
shlb
add
xlat
mov
and
mov
push
add
shrl
popf
fstl
nop
mov
push
and
push
pop
jmp
pushf
xchg
pushf
shl
jmp
jmp
mov
fmuls
andb
jnp
pop
mov
xor
inc
mov
inc
sti
and
and
cwtl
or
jl
cmpsb
add
add
enter
fidivrl
ljmp
ja
xor
add
out
add
sbb
add
fdiv
sahf
scas
pop
dec
out
popf
enter
fstl
add
mov
xlat
pop
xchg
mov
add
into
dec
inc
adc
fbld
add
fimull
mov
push
cmp
cli
ljmp
loope
nop
call
or
xchg
sbb
adc
xchg
lret
and
inc
repnz
rclb
sub
bound
xchg
popf
sub
loopne
pushf
inc
sbb
and
lea
pop
jo
push
push
pop
cld
xor
gs
mov
test
rolb
dec
push
mov
jbe
pusha
mov
and
dec
mov
and
jbe
jecxz
in
inc
repz
stos
push
sub
add
cmp
jge
sahf
mov
inc
push
scas
dec
mov
pusha
out
popf
jmp
sub
int3
pop
in
lock
mov
mov
leave
icebp
test
loopne
mov
sub
and
pusha
and
in
dec
xchg
outsb
in
adc
and
fnsave
add
mov
pusha
cmpsl
or
push
push
pop
jmp
lods
pusha
and
clc
mov
pushf
add
movsl
dec
pop
dec
mov
jae
and
and
outsb
sub
fsub
add
sub
out
mov
pushf
or
sahf
mov
lods
addb
rolb
inc
pop
ficompl
fisubrs
pop
xchg
push
cmpsl
add
rolb
lcall
pusha
and
cmp
or
orb
stos
inc
inc
mov
imulb
rcr
scas
and
insb
mov
lea
stos
xchg
mov
mov
pop
lods
mov
sahf
adc
and
cmpsl
xor
xlat
bound
and
pusha
js
inc
ljmp
pop
les
and
icebp
sub
shl
xchg
xor
cli
aad
insl
out
pusha
inc
int3
ret
xor
cmp
or
loopne
inc
popl
test
inc
mov
inc
xchg
ret
jnp
or
mov
sbb
xchg
add
sub
pusha
repnz
aas
sub
mov
jp
xchg
push
mov
mov
out
dec
imul
push
andb
pop
add
xor
and
and
sahf
out
dec
adc
and
jge
inc
inc
cltd
push
fdivs
dec
sti
push
and
jbe
daa
mov
jg
inc
insb
jle
rcl
mov
pop
ret
sbb
mov
inc
inc
lcall
and
shrb
shlb
mov
ja
pop
mov
rcrb
jns
loopne
inc
es
pusha
cmp
push
add
jne
std
push
push
inc
pusha
add
shlb
pop
ljmp
jle
pusha
add
mov
xor
push
sub
rolb
inc
into
sub
xchg
push
loopne
mull
inc
rcrb
xchg
and
jae
dec
mov
pusha
cmp
xchg
sahf
inc
dec
mov
and
mov
addb
mov
pusha
xchg
dec
mov
mov
pop
pop
addr16
ljmp
fdivrl
lahf
lods
sub
loopne
int
sbb
loopne
dec
adc
xlat
push
adc
and
and
fists
mov
pusha
sar
jo
xor
outsb
push
ljmp
fcoms
andb
mov
les
pop
jmp
mov
enter
push
call
dec
sbb
lock
jno
ret
pop
jb
adc
push
pop
mov
xchg
mov
adc
das
inc
dec
mov
andb
lods
mov
andb
scas
scas
inc
add
lods
loopne
sub
addr16
inc
mov
and
pusha
jb
and
aam
xor
push
add
imul
aaa
mov
std
pop
cmp
mov
lock
jae
and
mov
xchg
and
shr
pushl
mov
sarb
shlb
inc
add
add
pusha
adc
arpl
movl
inc
mov
and
bound
jp
fisubrs
and
jge
shrb
pop
femms
addb
jns
add
mov
lea
aaa
sbb
or
pusha
add
mov
shll
inc
loopne
sub
out
movsb
loopne
adc
loop
adc
mov
ja
insl
fs
mov
adc
cmc
and
jg
jbe
jmp
and
mov
and
xchg
add
stos
add
ljmp
or
add
add
shll
mov
jp
ret
fucomi
imul
cmp
adc
xchg
sahf
ss
loopne
int3
movsl
loop
mov
rclb
jb
sbb
push
add
xor
xchg
aaa
movsb
rolb
jecxz
pushf
ds
or
push
addb
and
clc
jle
and
loopne
fistl
rorb
aad
inc
and
add
stc
push
jmp
add
inc
andb
ljmp
mov
lods
and
add
cmp
andb
xor
add
xchg
insb
mov
sbb
inc
mov
jg
xor
add
sub
push
xchg
mov
jno
pusha
shl
and
sbbb
std
mov
sbb
aad
or
je
sbb
inc
mov
jge
ret
xchg
xorl
mov
popf
dec
fldl
pop
xor
scas
add
test
loopne
add
outsb
inc
cltd
arpl
mov
loopne
out
xor
jb
cmp
pop
pop
mov
mov
ror
inc
in
enter
mov
leave
xor
inc
sarb
addl
and
repnz
and
mov
add
sub
jge
pop
sbb
es
mov
pop
lcall
push
sbb
dec
sub
dec
dec
fldl
add
pop
andb
xrelease
inc
je
and
xchg
ds
imul
jmp
fldt
add
inc
mov
inc
pop
mov
pop
push
jmp
push
loopne
sub
add
andb
fdivrs
shlb
jle
mov
xchg
jb
mov
nop
js
scas
jae
sbb
out
loopne
pop
or
adc
dec
inc
dec
mov
call
rorb
and
fcomp
fadd
inc
daa
fbld
mov
push
mov
mov
outsl
fistl
arpl
and
pop
mov
add
jl
shll
addb
into
xor
inc
cmp
iret
out
and
mov
shll
add
popf
xor
and
cld
data16
dec
push
aad
push
xchg
or
imul
lret
loopne
rolb
inc
sarb
loopne
cmpsl
sub
inc
in
in
imul
out
andb
inc
aad
add
lret
mov
xchg
pop
fmuls
dec
lods
hlt
daa
xchg
movsl
cwtl
lret
sahf
loope
fisttps
cmp
pushf
lds
out
hlt
cmp
adc
roll
mov
push
and
loopne
xchg
or
sti
push
lea
mov
fisttpll
js
dec
adc
outsl
dec
and
add
push
cmpsl
cs
mov
scas
andb
mov
out
sar
push
push
mov
dec
popa
xchg
ffree
pop
push
and
ja
int3
jge
in
push
enter
push
aas
scas
andb
adc
and
outsl
jp
popf
inc
pop
lock
sub
outsb
xorl
inc
psrlw
and
mov
add
or
xor
pusha
jmp
in
push
and
and
adc
sbbl
add
out
fbld
or
and
push
loope
dec
jns
mov
inc
shlb
movsl
xchg
pop
cwtl
arpl
pop
lds
std
stos
popa
lahf
push
inc
add
in
out
or
subb
add
xchg
push
mov
enter
pusha
orb
pusha
xchg
js
and
loopne
add
pusha
popa
dec
inc
add
mov
pop
rol
inc
or
add
add
mov
sarb
mov
pushf
leave
inc
scas
pusha
add
mov
leave
inc
xchg
xchg
sub
jmp
mov
pop
pop
shlb
inc
mov
mov
xchg
bnd
jnp
test
xor
mov
in
cmp
aas
cmp
movl
or
xorb
hlt
mov
rolb
and
add
mov
sub
stc
popa
aas
mov
mov
inc
shlb
or
lahf
or
and
imul
dec
sub
adc
dec
stos
cmp
mov
and
inc
mov
mov
ja
stos
jge
arpl
inc
and
xor
push
adc
inc
loopne
mov
neg
jecxz
mov
jnp
repz
mov
lret
add
push
mov
or
mov
or
iret
or
std
loop
push
add
imul
enter
push
mov
cmp
mov
out
push
and
cmp
cwtl
adc
andb
mov
jg
mov
add
cld
fsubp
mov
push
test
loopne
inc
jb
xlat
or
and
jecxz
gs
jne
bound
mov
or
push
and
xchg
sub
push
cmp
inc
movsl
insb
dec
mov
icebp
insb
cmc
aas
cmpsl
pop
pop
pop
ja
roll
sbb
and
pushf
aas
pop
repz
int3
aam
sub
add
cmpsl
dec
shlb
or
in
mov
stos
aas
push
and
push
sti
rcr
stc
mov
mov
push
jae
shrl
mov
push
outsb
iret
test
sub
iret
push
jae
mov
jno
pop
in
mov
aaa
push
jo
pusha
shlb
add
pop
xor
mov
add
icebp
xor
push
and
mov
stc
mov
dec
push
mov
and
push
in
les
add
loope
fistl
bound
imul
ffreep
mov
test
ret
cmc
test
fwait
inc
mov
in
adc
iret
loopne
jp
divl
fadds
add
mov
pop
lods
mov
les
push
add
lea
loope
shrl
inc
and
stos
and
addb
push
and
inc
frstor
xor
cld
dec
cmp
out
js
jmp
adc
faddp
cs
rcrb
jne
psadbw
lea
sub
rcl
and
test
ds
inc
inc
in
addb
mov
or
and
imul
rcll
in
sete
repz
xchg
das
xor
ret
daa
outsl
sub
in
jp
addr16
in
jecxz
shll
jg
add
cmp
and
add
sar
enter
push
push
inc
cmc
dec
ja
sub
loopne
push
icebp
sub
jo
add
dec
insb
lods
add
mov
jl
in
jno
pusha
inc
xchg
adc
or
and
or
subb
add
mov
mov
stos
and
xor
jmp
inc
and
icebp
loope
fwait
push
ss
lods
add
andb
cmp
mov
mov
ror
test
mov
sub
jle
pop
testl
and
mov
pop
in
popa
fistps
cmc
adc
js
js
lods
and
push
xchg
mov
in
adc
loopne
jg
xchg
jl
fistl
mov
insb
mov
push
addb
lahf
and
jmp
xor
cmp
cmpsb
pusha
mov
shrb
mov
loopne
std
lock
push
fimull
mov
cmp
aas
in
jo
pop
pushf
mov
mov
cmpsb
pusha
and
xchg
adc
xchg
add
mov
push
xchg
pusha
or
or
mov
aas
or
addb
lret
mov
loopne
out
out
push
pop
dec
pop
out
fldcw
scas
pusha
loopne
lea
pop
orl
pusha
adcl
push
out
sahf
cmpsl
loope
sbb
pop
xlat
pop
loopne
fsubl
dec
ret
sbb
test
cmpb
mov
loopne
loopne
call
leave
mov
mov
dec
rclb
and
xor
mov
mov
loopne
roll
pop
imul
int3
leave
cli
outsl
insb
ja
cltd
lods
andb
leave
add
xor
cmp
adc
cmp
push
xchg
movsb
mov
inc
inc
sbb
or
andb
add
imul
mov
jne
not
pop
addr16
cmp
jle
out
or
mov
movl
jge
add
loopne
push
jmp
aaa
into
sub
xlat
jns
mov
hlt
clc
shrl
roll
shl
dec
sahf
scas
sub
shll
loopne
push
ja
add
push
js
pushf
or
inc
cmc
mov
mov
mov
add
sti
push
dec
mov
pusha
inc
and
pop
sub
add
test
add
rol
fidivrs
pusha
inc
mov
loopne
adc
inc
lds
add
adc
mov
sbb
mov
addb
mov
mov
lahf
pop
sbb
mov
mov
loopne
mov
push
pop
pushf
adc
mov
out
push
repz
sbb
sub
adc
add
dec
mov
sar
or
ficoms
ret
cmp
jp
loopne
dec
and
cmp
lods
loopne
cli
pushf
pop
das
add
add
sub
sarb
fisttpll
sub
pusha
idivl
sub
mov
mov
mov
pop
js
dec
cltd
mov
adc
and
inc
xor
leave
das
lea
fmuls
or
rclb
push
and
insl
les
push
outsl
add
ret
pop
xchg
imul
inc
gs
mov
es
lahf
xor
lods
adc
xchg
fstl
jo
or
and
loopne
rcl
bound
jno
test
daa
add
and
jae
add
jnp
pop
push
mov
sbb
int3
push
addb
shlb
jge
dec
imul
sub
mov
xlat
pop
call
mov
es
and
and
add
mov
mov
inc
scas
inc
inc
xor
sarb
push
pop
mov
ja
addb
insb
test
out
jbe
adc
fistpl
fistpll
shl
mov
sub
pusha
adc
repnz
movsl
mov
dec
mov
sahf
jbe
push
sbb
jecxz
negb
xchg
or
inc
inc
xchg
jmp
fmuls
or
inc
outsb
sbb
pusha
cmpb
loop
mov
push
jp
cmp
push
aam
xchg
inc
subb
faddl
xchg
mov
mov
shrl
fistl
inc
jne
inc
pusha
jno
add
addr16
mov
rcl
ret
insl
dec
or
mov
add
lods
rolb
inc
add
adcb
and
mov
in
add
mov
sub
jo
lds
sub
add
jge
out
ja
xchg
dec
mov
push
clc
dec
pop
arpl
add
les
mov
mov
jnp
fcmovb
mov
jne
mov
shlb
pop
ds
popf
mov
sbb
mov
loopne
aad
sahf
push
jno
test
loopne
push
inc
loopne
and
mov
add
cwtl
sbb
add
aaa
lret
push
mov
bound
push
loope
and
sti
stc
add
loopne
ljmp
dec
fdivs
mov
and
mov
test
loopne
aaa
bound
sub
and
push
sub
mov
inc
xchg
arpl
add
enter
outsl
mov
mov
push
push
jle
out
leave
or
faddl
in
jle
pop
ffree
popa
adc
sbb
addr16
ss
js
sbb
sbb
dec
clc
inc
mov
push
sub
loopne
and
outsl
pop
xchg
ret
loopne
js
xor
movsl
call
inc
sbb
jmp
stos
aaa
mov
cltd
clc
outsb
cltd
xchg
lds
cltd
jo
xor
or
cmpsl
pop
andl
dec
adcl
mov
jmp
push
fiaddl
shlb
loopne
bsr
or
and
mov
mov
in
subl
loopne
adc
pop
adc
push
cmp
add
out
outsl
jmp
repnz
xchg
jmp
mov
and
orb
and
cmp
lock
fsubs
and
rclb
inc
xchg
addb
lods
mov
ret
in
out
pop
je
test
push
rolb
test
addb
iret
je
shlb
pusha
cltd
cmp
push
push
mov
inc
mov
in
rolb
shlb
daa
cmc
repnz
xor
outsl
hlt
ljmp
jne
mov
xchg
add
inc
mov
sbb
cmp
pusha
sarb
add
insb
dec
rcr
lcall
sub
loopne
mov
into
shlb
cmc
xchg
mov
test
ja
adc
and
gs
xor
or
inc
push
ds
and
shrb
rclb
pusha
sub
and
ret
fdivp
push
enter
xor
lds
cmp
pusha
sbbb
jne
sub
pop
adc
jle
add
test
xorb
add
pusha
and
shlb
fldl
lock
add
and
and
insl
fwait
xchg
mov
jno
out
mov
add
xchg
nop
sar
addr16
hlt
les
push
sbb
push
addr16
inc
popa
addb
pop
jp
sti
lods
pop
push
fldenv
out
shlb
or
outsl
pop
pop
lea
loopne
out
sbb
fsubrs
sti
jecxz
out
pop
clc
jecxz
mov
inc
and
dec
repz
xlat
sub
cmp
add
loopne
fsub
mov
fistl
sahf
pop
mov
xor
dec
fstpl
cmp
xor
sub
add
pushf
cmpsl
stc
repnz
jmp
rcrb
mov
pusha
inc
fsubp
push
or
mov
lret
dec
aam
call
cli
sbb
decb
popa
mov
out
cmc
or
ja
adc
mov
jae
adc
fiadds
and
jne
dec
in
add
mov
inc
aam
mov
inc
jns
inc
shrb
loope
cmpsl
addb
jnp
lret
push
jl
inc
movsl
sbb
xchg
push
fdiv
test
outsl
fldenv
pusha
mov
mov
mov
push
mov
mov
ds
out
or
mov
nop
das
adc
add
inc
mov
loop
movsl
sahf
xchg
sbb
stos
pusha
loopne
stos
pusha
pusha
sub
and
adcb
xor
mov
add
xchg
or
mov
scas
add
push
and
xchg
xor
in
jno
repnz
or
je
sub
xorb
and
les
pop
sbb
add
mov
pusha
jbe
push
loopne
cld
dec
loope
pop
ret
push
adc
pop
sbb
sbb
jne
xor
mov
andb
enter
sbb
and
imul
scas
fidivrl
pop
xorl
pop
lcall
sahf
test
sti
or
inc
dec
in
xchg
iret
sub
inc
xlat
inc
iret
sbb
mov
loopne
mov
ficompl
jmp
add
add
cltd
and
dec
ss
stos
addb
pusha
cmp
mov
cmp
xor
in
jge
xor
mov
dec
popf
mov
add
dec
jmp
fisttpll
mull
sarb
rolb
mov
jg
or
iret
in
je
jb
xor
inc
orb
rorb
push
adc
mov
mov
cmp
popf
xchg
mov
mov
mov
jp
addb
and
rcrb
push
test
mov
jmp
or
rol
adc
jecxz
nop
pushf
lret
popl
pop
js
stos
mov
jmp
add
sbb
pop
stos
pop
out
dec
cmp
addb
pop
xchg
popa
pusha
in
bound
xlat
stos
pusha
loopne
mov
pusha
movsb
mov
pop
add
cmp
in
pusha
pusha
mov
cmpsb
pusha
inc
jae
iret
pusha
xchg
add
pop
add
mov
mov
shlb
clc
dec
cmc
and
inc
add
jae
pop
rcr
popf
push
out
and
sbb
push
addb
insl
jl
adc
jecxz
shlb
inc
addb
adc
xcrypt-cbc
cmpsl
push
shll
inc
sbb
mov
ret
aaa
mov
int
adc
aas
jecxz
mov
mov
js
xchg
pop
pop
dec
les
repz
fcomi
std
xchg
iret
pusha
movsl
enter
inc
out
ljmp
add
add
jne
jo
add
push
push
pop
bound
iret
xchg
inc
mov
and
jecxz
sub
and
in
xchg
inc
or
add
sub
mov
and
cld
dec
and
push
inc
shlb
ljmp
adc
inc
jns
cmp
inc
push
jecxz
pusha
and
jl
inc
ret
out
inc
pusha
add
mov
pusha
or
add
stos
loopne
or
and
je
data16
jo
ficoms
and
fs
aad
call
mov
or
cmpb
insl
jo
mov
jecxz
int
stos
pop
mov
pop
div
test
test
shl
cmc
int
cmp
mov
imul
add
sbb
fsubp
lods
sbb
push
shlb
movsb
add
add
scas
adc
pop
jo
insb
ss
mov
int3
or
jns
mov
inc
shrl
dec
mov
arpl
out
movl
mov
in
push
adc
int
mov
jecxz
lahf
stos
leave
daa
adc
ret
mov
xchg
and
jmp
inc
ljmp
lods
pusha
and
or
mov
pop
or
loopne
hlt
dec
outsl
jg
std
loop
xor
push
mov
cmp
adc
dec
xchg
mov
int3
into
int
adc
sbb
add
addb
or
pop
mov
xchg
mov
push
shl
enter
add
jg
stc
aad
aad
mov
mov
push
addr16
lcall
mov
inc
and
mov
and
mov
out
jl
cmp
push
add
mov
pusha
pop
cld
std
aas
push
push
push
xchg
or
rorb
and
cmp
mov
rorb
mov
inc
add
dec
aas
in
in
int
insl
add
aam
or
and
test
pusha
ja
lahf
shlb
popa
inc
movsl
mov
loopne
sbb
pop
sub
aas
imull
jle
mov
stos
addb
insb
xor
sarb
lahf
jnp
ss
and
mov
ret
push
jno
adc
xchg
fidivl
jae
dec
pop
sbb
sub
pusha
sub
mov
inc
inc
mov
sti
jp
mov
jmp
mov
mov
ret
and
mov
push
push
clc
push
arpl
mov
xorb
xor
mov
add
in
sub
test
and
aam
inc
inc
jb
out
aas
jecxz
pop
seta
mov
or
mov
add
lahf
shrd
je
in
pop
in
push
daa
arpl
pop
pusha
clc
lea
mov
mov
inc
inc
xchg
cmpb
andb
fcomi
jecxz
sub
or
inc
mov
push
mov
pop
arpl
xchg
adc
and
fildl
lods
hlt
jnp
sub
add
int3
pop
pop
mov
loopne
out
test
fldenv
or
rorb
inc
call
mov
jne
and
sbbb
out
sbb
inc
xor
repz
push
sbb
cmp
sub
bound
pusha
inc
ljmp
pusha
dec
mov
pusha
sbb
add
inc
ss
xchg
mov
mov
add
sbb
std
dec
and
pop
shr
cwtl
dec
push
imul
adc
pop
movsb
shlb
aad
iret
mov
movsl
fistl
and
add
pusha
ljmp
imul
cmp
idivb
addl
inc
or
mov
and
sti
inc
rcrl
jmp
rolb
loopne
add
in
xlat
fwait
mov
inc
mov
ss
aaa
push
and
mov
cmpb
mov
adcb
or
jecxz
add
pop
mov
adc
xchg
loopne
bound
es
inc
cs
push
shl
pop
mov
fcmovnbe
cmc
jecxz
jno
fidivrl
aas
outsb
addr16
out
addb
inc
and
xor
mov
addb
jae
mov
rolb
push
inc
andb
push
mov
addb
pop
mov
filds
xchg
je
ret
andb
loope
call
add
or
loopne
cmc
pop
and
fldcw
and
mov
push
pop
fistps
mov
test
mov
add
orb
ret
and
aas
cmp
fldcw
js
test
push
push
push
jp
add
pusha
and
jne
mov
dec
lcall
mov
sub
loopne
lret
push
sub
pop
and
sbb
inc
rcr
or
rcrb
idivl
mov
je
scas
mov
cltd
in
inc
adc
pop
cmc
mov
cmp
pusha
sub
mov
pop
movsl
dec
mov
and
and
les
jle
push
add
cmp
shlb
pop
jge
in
jae
push
fxch
lret
in
mov
popf
cwtl
inc
mov
cltd
in
cmp
mov
stos
pusha
inc
das
adc
mov
cs
inc
test
add
inc
inc
hlt
cmc
test
cmpsb
pusha
add
loopne
mov
sbb
mov
push
xorl
pop
sbb
cmp
xor
fucomip
stos
mov
xor
push
and
xchg
movsb
rol
or
and
rcrb
aaa
das
sti
andb
add
and
and
inc
mov
mov
inc
jp
mov
and
pop
sbb
and
out
out
fisttpll
jnp
cmp
pushf
mov
loopne
int3
hlt
lret
addb
repz
test
push
sahf
call
mov
pusha
sbb
jne
pusha
daa
out
xchg
lret
arpl
outsb
mov
and
mov
pushf
cmp
addb
adc
and
mov
clc
push
jecxz
dec
das
add
xchg
sti
xor
mov
shlb
jo
add
ficomps
addb
out
xor
jge
and
and
test
jl
sbb
and
pusha
mov
imul
outsb
inc
sarb
push
test
mov
jp
js
pop
mov
sub
or
xchg
inc
add
push
loopne
add
jmp
jns
push
add
mov
arpl
push
and
sbb
jbe
pop
sbb
ret
and
mov
inc
or
push
and
dec
repz
ds
add
arpl
adcl
xor
sub
xchg
mov
adc
add
int
inc
mov
push
inc
mov
sti
inc
inc
loopne
lea
iret
mov
mov
bound
jp
andb
scas
inc
inc
jg
lea
loopne
outsl
xchg
sub
add
mov
push
test
pusha
pushf
fnstcw
call
mov
pop
pop
push
and
ljmp
add
dec
gs
mov
xor
jg
loopne
mov
lret
mov
rolb
and
test
and
sub
add
mov
lcall
cmp
xchg
rolb
push
add
mov
add
and
xor
xor
add
andb
mov
xchg
loope
das
xor
lahf
sub
mov
outsl
pop
mov
and
loopne
stos
loopne
popf
xor
mov
inc
mov
dec
mov
add
scas
loopne
xchg
cltd
push
scas
mov
in
cmp
cwtl
aaa
movzbl
adc
jge
adc
cwtl
outsl
pop
mov
inc
sub
loopne
fwait
xchg
dec
cmp
stc
pop
ret
and
push
sub
repnz
push
faddl
mov
pop
leave
loop
adc
mov
push
or
arpl
mov
and
pop
xchg
xor
inc
ret
aam
andb
shlb
or
pop
daa
rcll
rcr
in
adc
sub
pusha
and
inc
add
ds
inc
mov
mov
insl
inc
lret
imul
testb
pusha
nop
imul
adc
lock
mov
jo
outsl
mov
stos
test
inc
xchg
loopne
jbe
lods
inc
pusha
push
shlb
rolb
mov
dec
push
sbb
or
addb
lock
je
mov
or
dec
cs
outsb
xchg
hlt
push
aad
fnstenv
rolb
sub
repz
dec
daa
adc
aad
and
jge
dec
test
lea
divb
in
inc
loopne
cltd
dec
repz
data16
push
cli
and
xor
mov
add
xchg
je
inc
loope
jo
daa
cs
cmpsb
rol
test
adc
fistps
push
push
stos
mov
adc
pusha
mov
mov
mov
call
rcr
in
cwtl
out
pop
jge
rol
inc
dec
xor
gs
inc
jge
divb
jnp
ja
test
sbbb
loopne
pop
pushl
mov
fnsave
mov
imul
cli
scas
andb
loope
mov
enter
mov
fsubl
arpl
pop
pop
lods
js
scas
add
pop
mov
pusha
cmp
push
jmp
hlt
cmpsl
ss
push
cmp
jp
jge
and
fdivrl
xchg
out
lods
inc
pusha
push
jo
inc
xchg
aam
filds
inc
mov
in
pop
mov
loop
mov
pusha
adc
mov
jne
out
and
push
popf
clc
outsb
xadd
or
and
mov
imul
and
jl
shlb
adc
adc
repnz
sub
and
sbb
pusha
inc
movb
roll
pusha
call
or
outsb
xchg
out
ss
and
add
les
in
leave
ljmp
movsl
movsl
nop
xchg
sbb
fadds
addb
pop
js
shlb
lahf
jl
sub
mov
sub
sbb
add
nop
adc
push
and
sbb
shlb
and
imul
inc
xchg
test
repnz
lret
pusha
cmc
push
shlb
andb
loopne
sbb
mov
icebp
int
fidivs
out
out
sub
and
out
outsb
inc
and
or
add
mov
hlt
mov
sbb
inc
mov
jbe
aaa
ljmp
mov
mov
pop
xchg
imul
cld
pushf
pop
jo
cmc
dec
mov
test
inc
das
ret
sahf
test
pusha
cmp
and
xor
scas
mov
cmp
add
add
jae
adc
add
pop
mov
andb
sar
lahf
shlb
bound
loopne
clc
in
mov
sarl
xchg
js
or
loopne
inc
clc
addl
addb
xchg
inc
push
mov
pusha
std
out
stc
ficomps
cmp
xchg
ret
div
push
addr16
add
push
push
and
inc
pusha
pop
push
pop
lret
sahf
xor
fnsetpm(287
insl
ss
les
push
stos
mov
jmp
xor
cltd
pop
jo
loop
das
cmp
add
mov
sub
mov
inc
add
roll
push
out
mov
inc
xchg
mov
cld
or
lcall
jnp
loopne
xor
loopne
andb
ja
xor
andb
adc
pusha
pusha
out
lea
mov
jl
or
add
scas
loopne
mov
and
inc
js
jge
andb
sbb
icebp
rcll
pusha
inc
inc
nop
mov
pop
or
pusha
movsl
scas
add
fiadds
inc
mov
addr16
cmc
mov
addb
sarb
sub
push
sub
loopne
dec
bound
or
pop
mov
inc
je
push
mov
loopne
ss
loopne
dec
outsl
inc
push
add
pusha
jb
cltd
arpl
xchg
pop
aaa
dec
push
scas
inc
shl
jo
cmp
or
in
jecxz
outsl
add
jbe
and
or
and
icebp
push
loopne
adc
pop
mov
lret
adc
cmpb
loopne
scas
inc
cmpb
and
sub
dec
adc
loopne
loope
jle
sub
mov
icebp
push
aaa
mov
or
mov
and
jnp
push
aad
inc
shlb
push
scas
and
les
shl
in
jno
xchg
mov
cld
and
inc
pusha
pop
jg
add
cmp
or
sbb
div
nop
mov
fadd
out
mov
das
and
incl
rolb
pusha
push
negb
cmp
jno
adc
rcrl
xchg
xchg
in
add
pop
les
xchg
push
dec
mov
data16
dec
sarb
mov
inc
inc
sahf
pop
sbb
add
test
add
loopne
jecxz
inc
xor
xchg
mov
and
inc
xchg
test
leave
loopne
andb
mov
cmpsb
pusha
subb
sahf
adc
mov
push
hlt
push
xchg
mov
inc
fdivrs
mov
jns
iret
fs
stos
aas
push
mov
add
pop
jle
shll
scas
mov
adc
outsl
and
ret
xor
roll
inc
xorb
fistpl
pusha
mov
pusha
lods
mov
icebp
loop
sub
add
es
and
loopne
leave
addr16
xor
and
mov
rol
iret
inc
lret
cmp
loopne
aam
and
rcl
mov
loopne
xor
and
and
sbb
adc
int
mov
loopne,pn
pop
push
and
rolb
bound
jle
and
shlb
andb
pusha
rorb
andb
and
imul
add
lock
std
stos
jecxz
inc
clc
notl
unpckhps
ljmp
mov
push
xchg
sbb
out
repz
inc
loopne
outsb
cs
pusha
xor
rolb
pop
int3
sub
sub
add
cmpsl
ljmpw
cld
imul
pop
imul
arpl
or
popf
push
sub
mov
and
mov
addb
mov
push
outsl
mov
mov
pusha
add
mov
inc
lock
into
pop
sub
shlb
shlb
fildll
das
push
insl
xor
rolb
sbb
mov
xchg
cmc
movb
cmp
out
int3
loopne
scas
push
jo
fiaddl
pusha
subb
jae
imul
sbb
mov
mov
push
mov
or
lret
xchg
or
mov
dec
scas
movsl
lods
scas
sub
mov
add
mov
add
mov
and
mov
or
and
imul
xchg
fs
mov
pusha
mov
lea
lahf
dec
leave
nop
pushf
dec
cmp
loope
push
mov
push
pop
aas
push
pop
out
rcr
cs
add
adc
test
push
xchg
xor
lret
pop
jo
gs
mov
andb
ficoms
in
xchg
or
add
inc
mov
ficompl
aas
clc
mov
add
je
jbe
cs
mov
mov
and
dec
adc
dec
mov
stos
and
lea
addr16
push
sbb
mov
pusha
cmp
incb
mov
sti
mov
clc
and
and
dec
xchg
mov
xor
test
add
and
andb
bound
sbb
nop
gs
sbb
imul
ror
lds
out
gs
icebp
jne
xchg
and
inc
add
inc
ror
jne
xor
sarb
arpl
pop
xlat
sbb
in
xor
jne
mov
mov
mov
test
add
inc
fiadds
mov
lock
out
push
in
jp
and
arpl
fstps
sbb
pop
mov
loopne
out
and
xchg
test
pusha
cmp
inc
add
dec
adc
push
inc
jle
adc
mov
mov
jno
gs
mov
sbb
sub
loopne
push
push
add
loop
and
cltd
adc
cmpsb
and
mov
fisubl
lret
mov
pop
loope
xor
add
imul
out
hlt
ret
fistpl
mov
icebp
inc
inc
into
adc
fisubrl
mov
xchg
pop
movsl
lea
jp
pusha
pop
rcrb
dec
int
add
call
test
cmp
sub
and
pop
xor
frstor
mov
loopne
movsl
mov
in
mov
inc
test
loopne
rorl
xor
clc
or
outsb
add
mov
andb
sbb
aad
int3
push
xor
sbb
push
inc
mov
mov
mov
add
shll
mov
mov
andb
push
stos
rolb
and
inc
inc
addb
push
test
and
push
andb
pop
inc
stos
je
jae,pt
inc
jg
pushf
jl
inc
enter
push
adc
dec
sbb
sbb
adc
mov
or
pusha
mov
loopne
js
inc
shl
or
mov
sbb
andb
pop
das
mov
cmp
inc
xor
in
test
and
js
dec
xor
xchg
ficoms
xor
mov
into
jbe
pop
pushf
push
mov
jl
inc
in
mov
pop
mov
loopne
pusha
jle
stos
mov
rol
lea
cmpsb
mov
addb
jle
fstpl
jbe
adc
dec
cmp
insl
aaa
das
or
and
rol
stos
pop
mov
sub
inc
mov
icebp
xchg
mov
loopne
xor
fidivrs
adc
add
shll
fdivrp
js
repz
jle
outsb
mov
mov
adcb
pop
adc
sti
andb
daa
cwtl
shr
loopne
test
xor
rcrb
loopne
mov
push
cli
inc
sub
out
mov
lock
sub
and
cwtl
adc
scas
addb
inc
dec
mov
stos
mov
sub
or
loope
rorb
lahf
jle
jmp
roll
rol
testl
xor
outsl
push
cmp
adc
mov
inc
ljmp
outsl
call
andb
std
repnz
fucom
cmp
hlt
subl
loope
and
dec
fildl
mov
pop
popa
shl
sbb
out
rorb
inc
pusha
mov
arpl
rolb
dec
test
xchg
imul
pop
add
pusha
cmp
dec
lods
inc
pusha
addr16
dec
cmpsb
and
jne
out
jmp
mov
je
inc
sub
enter
call
mov
cmp
push
inc
and
dec
ja
mov
xchg
dec
call
in
test
adc
rcll
and
dec
nop
cmp
popa
aam
sub
in
pop
movl
sbb
sub
test
loopne
ret
add
xchg
and
inc
adc
pop
les
xchg
out
aad
mov
loopne
pop
fiadds
jo
ret
cmp
addr16
dec
push
loopne
sub
and
inc
pop
dec
inc
mov
inc
pusha
lahf
xor
and
pusha
bnd
imul
shlb
loopne
cmpsl
mov
and
leave
push
cld
and
pusha
repz
push
inc
lods
xchg
xor
cltd
xchg
out
inc
mov
adc
add
xor
mov
push
xor
add
ret
mov
dec
push
inc
imulb
add
insl
pop
cmp
add
xor
pusha
pop
sbb
fstpt
loopne
addb
add
fisubl
sarb
aaa
cli
sub
dec
lea
shlb
daa
and
loopne
hlt
cli
roll
xor
sbb
fwait
jnp
mov
movsl
push
addb
sbb
pop
push
or
ror
addl
mov
jl
add
popa
aas
div
cmpsb
and
int
divb
ret
mov
movsb
andb
shlb
out
push
cmpsl
cmp
mov
xchg
and
inc
jne
mov
push
pop
xchg
or
or
mov
in
push
out
xchg
loopne
bound
test
xorb
and
inc
or
leave
subl
push
test
sbb
and
clc
push
mov
pop
orl
pop
xchg
mov
inc
push
add
add
rcrb
cwtl
jmp
lcall
add
and
adc
jecxz
sbb
pop
cmc
jge
sbb
and
in
and
ljmp
mov
sbb
loopne
shl
sbb
fldl
ljmp
jbe
cmpsl
push
jmp
ljmp
mov
pusha
mov
mov
xchg
imul
mov
andb
pop
cmp
jae
data16
lret
xor
idivb
or
inc
and
push
pop
cmpps
repnz
inc
adc
pop
pop
or
inc
jbe
mov
sbb
inc
aas
mov
aad
push
call
mov
lods
mov
jmp
pusha
mov
push
sub
out
mov
loopne
jle
popa
cmp
out
mov
pusha
cmpsl
mov
outsl
or
and
sbbb
push
push
and
or
lcall
add
mov
shl
add
sarb
sbb
and
xchg
push
ja
int
mov
dec
adc
dec
dec
call
mov
adc
lock
xlat
call
inc
idiv
mov
loop
mov
adc
nop
stc
aad
vsubpd
addb
mov
mov
mov
fidivl
mov
inc
outsl
pushf
mov
mov
adc
or
add
xor
inc
andb
mov
mov
lock
sbb
add
rclb
push
sbb
jno
stos
inc
add
dec
xchg
pop
loopne
and
inc
mov
es
sub
loopne
sub
and
sub
out
aas
and
cmpsl
inc
ljmp
out
and
addb
push
fdivs
adc
push
popf
ret
dec
xchg
out
sbb
stos
rolb
orb
add
sub
cmp
fldenv
pusha
pusha
aas
xchg
or
inc
or
loopne
mov
cld
fs
loopne
push
inc
movsl
outsl
inc
rorl
loopne
and
mov
push
xchg
jnp
and
insl
pop
add
adc
fwait
sbb
add
mov
xchg
aaa
sub
pushl
jae
dec
call
cmp
push
dec
dec
push
icebp
jl
ds
loopne
inc
push
push
and
loopne
mov
insl
xor
out
in
and
cmp
rcrb
mov
cmp
addb
cmp
cld
mov
js
push
in
mov
mov
mov
mov
push
push
les
push
in
les
mov
loopne
fildll
loopne
mov
inc
and
mov
sub
push
push
pop
loopne
incl
xlat
out
push
pop
xchg
xchg
xlat
test
jp
rolb
jge
dec
aad
idivl
xchg
int
xor
mov
sbb
rol
cmp
mov
lret
push
sub
loopne
lods
loopne
mov
iret
sub
cmp
addr16
inc
xchg
mov
push
out
xchg
inc
jae
aaa
jb
add
addb
decl
mov
pusha
pusha
xor
xor
inc
add
sub
mov
shlb
xchg
imul
ss
adc
jnp
in
sbb
dec
into
aam
sub
mov
sub
jno
lret
sub
inc
mov
pop
jb
xor
mov
mov
dec
and
loopne
sbb
pop
outsb
dec
imul
and
mov
pop
adc
insl
idiv
adc
movsl
xchg
jb
add
dec
sub
andb
and
inc
sar
mov
push
pop
jno
inc
inc
mov
xor
repnz
sub
mov
push
nop
xor
aad
adc
mov
inc
mov
fwait
sti
or
movsl
pusha
xchg
jmp
xchg
aad
adc
sub
loop
in
mov
ficoms
jns
loope
loopne
add
fcmovb
ret
shlb
outsl
gs
cmpsb
loopne
mov
insb
mov
ret
das
movsb
and
mov
loopne
addl
add
and
inc
push
jge
add
clc
jl
mov
cmp
out
mov
in
cwtl
inc
and
sbb
add
stos
mov
sub
xchg
enter
cmp
dec
push
jmp
test
rolb
mov
pusha
cmp
sub
pusha
shl
into
inc
or
and
add
nop
mov
add
shr
in
ret
pusha
and
pusha
inc
lahf
add
addb
lock
loopne
daa
cs
mov
or
lds
add
add
testb
inc
push
loopne
call
xchg
pop
ret
ljmp
addl
iret
jl
mov
in
addb
cmp
xor
xchg
push
and
inc
add
rcrb
fidivrl
cmpsb
pusha
rcrb
int
in
icebp
pop
mov
shlb
out
pop
gs
repz
shll
add
or
adc
rolb
cld
jg
outsb
push
add
fisubl
andb
xchg
movsb
rolb
sub
or
imul
pop
lods
pusha
sarb
movl
cmpb
push
and
cmp
jnp
ds
jno
fwait
out
fcomi
jbe
mov
stos
mov
add
mov
imul
stos
inc
movsb
loopne
loopne
pop
mov
sbb
aam
andb
sub
loopne
jge
mov
negl
std
push
ss
cltd
sbb
movsb
pusha
mov
loopne
and
cmp
imul
mov
jg
pushf
cmp
cmc
enter
shlb
addb
pusha
pop
dec
jnp
inc
add
and
dec
sub
lods
inc
add
mov
push
pusha
loopne
add
repnz
dec
out
bound
cmpsb
loopne
jl
loope
sbb
test
ljmp
das
or
jb
fisubl
rolb
fmulp
popa
insb
jmp
push
mov
pop
repnz
xchg
or
and
cmpsb
loopne
insb
add
shr
imul
mov
jecxz
xor
imul
mov
rcr
or
lret
mov
push
jb
mov
jmp
cmp
mov
rolb
inc
pop
jmp
shl
cmp
loope
push
push
jno
mov
and
addb
sbb
add
cmp
push
popf
aam
push
icebp
mov
xor
pop
and
shlb
aas
jae
fldl
loopne
pop
mov
shlb
pop
xchg
adc
inc
inc
out
xchg
dec
push
lea
inc
and
shll
xchg
and
rcl
push
movsb
and
popf
mov
loop
jg
shlb
jle
cmp
nop
push
push
loopne
sarl
add
dec
push
aas
aad
mov
push
jno
outsl
jge
jne
mov
sarb
inc
ljmp
and
mov
pusha
push
lret
sar
xchg
je
dec
mov
mov
push
sbb
dec
int
jns
into
xor
sub
adcb
and
andb
add
aad
xchg
xor
and
mov
mov
push
push
aam
jg
andb
inc
test
mov
lcall
dec
ret
int
cld
dec
xchg
outsl
ljmp
out
cmp
sub
lea
outsl
push
mov
leave
lahf
or
sbbl
fcompl
jbe
je
pusha
loopne
pusha
pusha
addb
cmc
jp
imul
jbe
cli
push
insb
jne
mov
rcl
test
adc
sbb
push
shrl
aaa
lea
inc
add
mov
jge
les
mov
rcrb
loopne
outsl
pop
outsl
aad
rolb
fdiv
mov
add
mov
inc
int
jg
xlat
mov
loopne
mov
into
push
mov
cmc
loopne
sbb
lcall
mov
sub
and
inc
add
pusha
ss
sahf
mov
subl
or
std
mov
xorb
mov
ror
add
xchg
stos
loopne
jns
pusha
mov
lods
rolb
sbb
pop
mov
inc
xchg
pushf
jb
hlt
cmpl
push
and
dec
test
pusha
lret
cmc
cmpsb
rol
in
mov
aad
adc
stos
pushf
sub
mov
ja
mov
out
jle
test
add
ja
or
shlb
outsl
daa
fstpl
scas
mov
and
test
add
jmp
adc
lds
fstpl
in
fdiv
addb
mov
inc
mov
xor
stos
shlb
fcomps
std
xlat
pusha
or
and
dec
hlt
mov
inc
sbb
push
loopne
cmp
lret
sti
dec
out
punpckhbw
scas
add
daa
mull
fldenv
mov
mov
loopne
loopne
out
pop
dec
add
daa
lock
out
pop
rolb
xchg
push
add
inc
adc
cld
sub
scas
pusha
inc
jmp
imul
and
xchg
lods
inc
mov
nop
jnp
fldl
mov
add
xchg
jno
loop
mov
xchg
pop
or
add
jecxz
loopne
dec
mov
loopne
test
cli
shrb
mov
or
imul
cmp
mov
movb
rorl
jnp
adc
repnz
mov
fcomps
popf
das
xor
cmpsl
push
fidivl
arpl
addl
mov
sar
sub
out
out
or
mov
pop
or
roll
xor
les
adc
mov
idivb
fnstcw
xlat
insb
xor
loopne
addb
sbb
xor
or
insb
ss
roll
jge
add
add
inc
mov
push
pop
dec
and
and
ret
jp
cmp
shl
pop
ret
jge
xor
dec
pop
push
sub
mov
arpl
nop
jecxz
popa
mov
js
hlt
dec
loopne
inc
xor
test
pusha
sbbb
inc
mov
push
pusha
and
xchg
scas
pusha
loopne
icebp
sahf
cmp
pop
jl
push
out
xchg
pusha
dec
dec
aad
mov
and
andb
arpl
mov
xor
sahf
mov
mov
sbb
loope
add
xchg
add
sub
mov
fwait
into
adc
shlb
inc
pusha
or
pusha
fidivrs
repz
lret
ja
pop
js
je
cmp
jno
lods
inc
loopne
addb
nop
fdivs
inc
push
pop
jge
scas
mov
pusha
inc
cmp
repnz
sbb
add
sbb
dec
loopne
call
out
rorl
pop
sbb
sbb
aam
mov
loope
shlb
and
and
hlt
enter
shl
jg
add
loopne
or
pushl
cltd
lods
push
loopne
xlat
xchg
pop
shlb
rolb
lea
or
mov
xchg
jae
xchg
loopne
xlat
out
lea
cwtl
push
mov
mov
add
pop
sti
in
hlt
out
push
loopne
aad
and
rolb
and
ljmp
add
jg
clc
push
jle
push
out
mov
pop
out
ja
insl
lcall
enter
sti
in
cmc
test
jne
cmpsl
and
mov
hlt
aad
sub
movb
loopne
xor
popa
aam
repnz
sbb
out
push
mov
lcall
fdivrl
pusha
subb
bound
or
add
sub
imul
and
pop
pop
testl
xlat
jo
push
sbb
jno
mov
and
rolb
hlt
popa
jle
xlat
mov
jne
adc
or
add
mov
scas
and
idivl
shlb
inc
sbb
negl
add
mov
scas
inc
loopne
ss
pusha
out
sarb
push
pop
imul
add
into
add
popf
and
fdivrl
in
jns
decl
dec
scas
mov
or
rcrb
jbe
pop
and
mov
popf
sbb
cli
mul
sub
repz
loopne
push
or
pop
int3
push
in
roll
inc
inc
stos
add
cltd
les
aaa
push
into
out
loopne
adc
shll
xchg
lcall
shr
stc
hlt
push
mov
push
lret
shlb
adc
std
jp
mov
adc
hlt
les
fisttps
mov
add
mov
ljmp
fsubs
loopne
xor
cmp
repnz
pushw
pusha
inc
out
mov
jae
sahf
mov
cmc
fidivrl
loop
add
cltd
xchg
push
cmp
paddd
ret
std
or
test
pusha
shrb
out
inc
jg
adc
cmp
mov
pusha
addb
and
lret
pop
dec
fcoml
outsb
in
cmp
mov
add
loopne
jae
or
pusha
rclb
imul
cmpb
mov
push
loopne
test
add
mov
fisubrs
addb
mov
fcmovb
dec
movsl
repnz
and
andb
test
pusha
adc
pusha
insb
sbb
loopne
cld
push
andl
cltd
and
xchg
and
inc
jg
nop
add
mov
in
fucomp
hlt
out
and
shrb
fldenv
mov
pusha
xchg
repz
xchg
adc
jl
dec
sub
inc
jb
inc
dec
into
inc
sbb
inc
inc
mov
dec
cmp
out
ljmp
mov
pop
fimuls
mov
out
ret
jae
outsb
mov
fisubrl
nop
repz
lock
lods
pop
cmp
mov
rolb
sub
jnp
mov
and
mov
jns
rolb
pusha
sbb
hlt
gs
inc
inc
pop
cmp
bound
gs
sub
mov
push
cmp
fistpl
add
loop
out
adc
lahf
sbb
lahf
loope
sub
repnz
add
add
inc
cmpsl
jns
cmp
insb
out
scas
popf
jmp
push
and
mov
aaa
test
out
cmp
roll
inc
out
shlb
cmp
pusha
sub
push
or
and
and
mov
daa
mov
cmc
mov
or
shl
dec
lahf
xchg
aaa
cmc
mov
pop
movsb
mov
iret
xchg
fisubrs
inc
loopne
mov
inc
push
lock
loopne
test
mov
cltd
mov
rcll
xchg
push
push
hlt
clc
bnd
movsb
rolb
sub
mov
add
and
rcrb
ja
mov
shrb
arpl
mov
insb
or
jnp
add
add
cmp
jecxz
xchg
fists
shrl
shlb
pop
pmullw
mov
lea
dec
jno
inc
xlat
and
or
and
int
bound
add
adc
sub
inc
pusha
nop
jne
mov
hlt
xor
and
shl
or
add
pop
inc
fs
push
adc
add
dec
push
xchg
and
or
pusha
call
sub
pop
mov
lea
push
pusha
and
lods
loopne
sub
pusha
loop
push
das
insb
push
iret
pop
dec
push
xchg
inc
loopne
loopne
xor
lds
lahf
xor
cmpsb
inc
and
repz
adc
fistpll
loopne
mov
adc
daa
lcall
rolb
mov
xchg
cltd
dec
xchg
push
gs
pop
sub
mov
seta
pusha
lret
push
xor
rolb
cwtl
test
cmp
addb
lret
adc
cmp
shlb
inc
sub
inc
dec
in
and
rcrb
daa
outsl
xchg
cld
rcll
pushf
cmpsb
inc
pusha
in
adc
rolb
dec
stc
or
rolb
xchg
and
sbb
cmp
in
mov
fcmovnbe
mov
push
call
jecxz
ljmp
fs
mov
pop
mov
xchg
push
scas
add
inc
mov
jecxz
push
clc
push
pop
and
ss
jne
cmpsl
xor
add
loopne
int
and
xchg
pushf
mov
roll
bound
mov
iret
hlt
push
inc
shlb
outsl
xor
jmp
dec
or
lahf
sti
test
and
shr
movsb
loopne
mov
shlb
loopne
shlb
and
inc
add
ret
xchg
and
fcoms
mov
add
pop
push
pusha
pop
inc
jge
pop
inc
in
mov
into
nop
arpl
pop
adc
imul
pushf
sbb
pusha
pusha
inc
movsl
jge
shl
or
jp
movsl
cs
inc
mov
mov
les
jo
push
mov
jge
cwtl
cltd
cld
aas
fs
ss
fwait
push
inc
mov
iret
cwtl
push
sub
adc
arpl
pop
fbstp
loopne
sbb
pushf
inc
or
add
xchg
loopne
cmpsl
xchg
pop
jl
outsl
mov
xchg
jne
xchg
xchg
xchg
aad
fsubrp
mov
fiaddl
pop
pop
inc
dec
xor
js
cmp
mov
add
add
cwtl
mov
inc
loopne
sub
pusha
or
inc
mov
add
aas
xor
inc
es
and
cmp
loopne
sub
subl
push
pusha
orb
fmulp
ss
leave
sub
mov
test
subb
mov
insb
insb
mov
push
add
lret
inc
leave
xor
imulb
sub
jmp
xor
push
add
mov
loopne
es
cmpb
and
loopne
xchg
add
dec
xchg
loopne
mov
cld
cmc
sub
cmp
stos
cmp
cmpsl
je
push
inc
mov
pop
rcrb
push
in
sbb
xor
loopne
je
mov
insb
outsb
rcll
scas
and
mov
mov
in
jge
lahf
pop
notl
add
imul
inc
and
in
insl
dec
jecxz
cmp
inc
lahf
aad
lock
in
sahf
adc
pusha
orb
dec
and
pop
sbb
shl
pop
mov
lods
add
lea
push
loopne
mov
push
stos
mov
mov
ret
ljmp
and
pushf
ja
xchg
sbb
fistpl
mov
jns
int3
mov
les
aaa
scas
inc
shlb
dec
push
movsb
addb
xchg
pop
lock
sti
es
rcrb
fucomi
fxch
sub
lret
sub
jns
mov
inc
inc
sti
adc
shlb
fidivrs
jne
icebp
mov
mov
mov
mov
enter
pop
hlt
pop
ss
xchg
and
out
cli
xor
or
popf
inc
nop
or
stc
xchg
jae
ljmp
shlb
and
lret
outsl
out
mov
ljmp
lods
pop
loop
es
subb
and
or
inc
sahf
mov
icebp
cwtl
jmp
ljmp
inc
xrelease
shll
xchg
loopne
sahf
push
xchg
dec
mov
inc
mov
inc
or
sbb
cli
xor
and
insl
mov
shlb
mov
mov
and
add
fiadds
xor
mov
add
je
out
clc
adc
clc
lret
push
or
mov
sub
mov
loopne
sbb
mov
lahf
xchg
mov
inc
jle
inc
sub
push
xchg
sti
adc
popa
pop
xor
imul
jg
popa
adc
jns
rorl
test
inc
rcr
xor
into
scas
loop
mov
push
into
mov
adcb
or
lods
mov
movsb
shlb
scas
adc
mov
addb
ficompl
insl
ss
rolb
in
mov
jns
cmp
sub
lods
andb
sbb
sbb
lock
in
daa
push
push
lds
cmp
adc
lahf
stos
and
lds
cmpsb
and
outsb
pop
adc
in
inc
insb
pop
movaps
mov
inc
loopne
inc
jno
movsl
xchg
jo
pop
jmp
jg
das
pop
xchg
inc
pop
sbb
mov
push
stc
pop
mov
loopne
or
mov
pop
jmp
adc
aad
inc
mov
in
pop
lret
xchg
bound
inc
and
mov
mov
mov
sbb
inc
sbb
shlb
andb
jp
cmp
cmpsl
push
mov
sarb
and
mov
inc
and
pusha
add
andb
mov
ret
inc
lock
ljmp
ja
pusha
rcrb
aad
cmp
cmc
ljmp
andb
mov
cmpsl
cmp
loope
lock
adc
inc
sti
sbb
loopne
sarl
mov
std
ljmp
pop
iret
lret
or
shlb
jle
xor
add
inc
fsubp
jo
shrb
pusha
rcrb
push
add
mov
lds
jecxz
out
jae
push
aam
and
jno
and
xor
sahf
xchg
movsb
inc
add
inc
sub
mov
xchg
insb
dec
or
cltd
test
lods
and
sbb
mov
aaa
or
movsl
xlat
xchg
int
sbb
loopne
mov
pusha
aas
mov
cmp
repnz
fbstp
test
add
subl
ror
mov
rorl
aam
clc
lods
insb
or
pop
inc
dec
fiaddl
test
icebp
push
push
out
loopne
call
rol
imul
cmp
jb
mov
xchg
jmp
insb
insl
and
sbb
aaa
xchg
pop
jnp
std
aad
and
idivb
and
loopne
add
sbb
xchg
iret
pop
daa
pusha
mov
or
mov
and
not
dec
sbb
pusha
inc
adc
enter
popa
cmp
lret
mov
aad
clc
aaa
adc
in
cwtl
call
pop
lea
xor
mov
pop
out
sti
gs
or
mov
xchg
xor
and
add
add
popf
xor
xchg
push
aaa
inc
pop
pusha
rolb
mov
xchg
pop
ja
lcall
and
inc
enter
shlb
data16
pop
pop
cltd
and
int3
add
inc
mov
add
loopne
jne
push
push
inc
inc
inc
icebp
jno
pusha
loopne
ret
ror
call
or
stos
rolb
jbe
loopne
mov
xchg
or
mov
inc
and
std
ljmp
mov
lock
mov
inc
add
xchg
enter
jae
pop
push
xchg
mov
adc
setns
test
xchg
test
fldl
add
test
cmpsb
rolb
movsl
repz
out
inc
loopne
dec
jmp
cmpsl
shl
int
adc
jno
inc
adc
call
aas
push
pop
push
sub
mov
dec
mov
sar
add
mov
imul
iret
xor
addps
sub
mov
aad
or
popa
pop
lahf
ds
sbbb
mov
dec
insb
push
xchg
lock
mov
pusha
loopne
cltd
add
jb
mov
cli
sub
loopne
mov
andb
xlat
push
add
loopne
jmp
pop
sbb
mov
imul
andb
pusha
xchg
cmp
pop
push
push
pushf
xor
das
jg
cmpsb
loopne
cmp
outsb
out
jbe
dec
xchg
pop
add
add
add
inc
fildl
shlb
loopne
rclb
jge
popa
inc
loope
xchg
out
or
in
lahf
sbb
xchg
mov
les
jns
test
cmpb
shlb
add
pusha
add
mov
inc
jb
pusha
addb
xor
and
jbe
fcoms
push
and
inc
testb
mov
xchg
xchg
dec
into
and
popf
aad
in
out
mov
pop
stos
loopne
jo
shl
fsts
xchg
clc
xchg
cmpsl
mov
ja
mov
rolb
fcmovnbe
xlat
adc
stos
pusha
and
addb
loopne
cltd
andb
pusha
int3
mov
lret
flds
mov
loopne
ljmp
out
sub
mov
add
push
pop
cmpsb
add
lea
sahf
mov
sbb
or
and
pusha
loopne
andb
jbe
add
nop
xchg
cmpsl
inc
jae
dec
imul
inc
repz
push
push
dec
aad
out
pop
dec
jle
cmp
ljmp
mov
jmp
push
and
std
cmpsb
mov
mov
xlat
pop
add
mov
xor
xor
fsub
aas
push
mov
int
mov
int
add
inc
fs
fcmovu
lea
mov
and
aas
ret
ret
loopne
push
inc
hlt
rolb
pushf
je
les
loopne
out
pop
mov
add
repnz
pop
pop
sub
subb
test
fldenv
pusha
mov
movsb
add
jle
mov
int
sbb
lods
add
pusha
ja
xchg
xchg
mov
rcrb
or
mov
out
in
mov
and
rcll
push
dec
hlt
aam
xchg
loopne
dec
push
int3
jle
rcrl
dec
jns
inc
xor
push
sub
mov
test
inc
pop
and
pusha
mov
test
mov
mov
jmp
insl
notb
add
and
in
pop
xor
into
inc
xchg
cmp
fisubrl
jecxz
out
mov
loopne
in
mov
mov
mov
in
xor
cmp
js
add
loopne
fisttpl
xchg
pop
stc
pushf
jmp
shll
add
pusha
mov
cmp
pusha
add
nop
pushf
or
stos
pusha
pusha
mov
aad
ds
ficoml
pusha
subb
mov
bswap
cli
loopne
inc
inc
or
add
jle
pop
lret
gs
outsb
jnp
push
mov
pusha
inc
sbb
push
or
pusha
lret
jo
sub
loope
stos
pop
push
and
ret
cmp
loopne
pop
lds
add
xor
add
aaa
jecxz
xchg
and
inc
gs
out
mov
mov
lock
sub
mov
push
and
push
mov
add
dec
mov
and
sub
xchg
iret
dec
out
adc
rolb
lock
dec
repz
stos
inc
xor
jb
dec
mov
inc
pusha
in
int
icebp
cld
jno
mov
inc
fs
adcb
cmpl
lods
add
jmp
fdivr
imul
inc
mov
mov
jne
loopne
xchg
je
rolb
iret
add
xor
lret
adc
fs
in
rolb
jg
out
iret
cltd
in
dec
mov
dec
xor
dec
orl
mov
sbb
dec
cmp
cmc
xchg
dec
clc
ja
imul
and
sbb
lock
pusha
shll
and
jns
popa
sbb
ss
ja
fwait
push
lret
loopne
or
pusha
adc
xor
sahf
popa
mov
in
xlat
js
movsb
shlb
and
add
shlb
sarl
jmp
cwtl
jmp
and
je
sar
pop
inc
popa
xor
pusha
mov
jp
dec
test
pusha
mov
and
pushf
into
mov
ds
and
rclb
pop
dec
and
cmpb
loopne
loop
insl
mov
js
add
jecxz
jecxz
sub
xchg
and
sub
test
mov
shlb
mov
mov
sub
subb
shlb
shrb
int
adc
stos
mov
enter
dec
dec
sbb
ss
add
andb
sub
inc
loopne
addb
pushf
pop
sbb
jecxz
sub
inc
mov
sub
pusha
push
mov
aas
mov
sbb
inc
fnstsw
loopne
push
insb
filds
pop
push
mov
jl
jae
and
pop
add
shlb
cmp
aaa
dec
mov
pop
movsl
jp
ss
and
ja
test
add
outsl
xchg
adc
mov
aad
mov
sub
shlb
addb
or
addb
pop
add
inc
nop
lret
data16
out
insb
pop
sub
xchg
inc
mov
test
andb
bound
and
cmp
scas
lcall
lea
es
movsl
and
shrb
jae
and
adc
mov
scas
les
pusha
xorb
mov
insb
rcll
mov
fisttps
cmpsb
pusha
pusha
pop
sti
mov
add
cmp
lahf
dec
xor
push
inc
loopne
into
mov
jns
aas
insb
adcl
xlat
dec
clc
cmc
pushf
mov
loopne
test
pop
test
pusha
shr
push
test
cmp
xor
pop
jg
adc
sbb
ds
mov
clc
std
inc
idivb
jg
repz
scas
lahf
fwait
cld
push
push
dec
mov
jge
adc
int
sbb
pop
cli
outsb
movsb
and
add
mov
loope
or
jo
jl
sbb
jmp
popf
scas
nop
sbb
fidivrs
sbb
hlt
push
dec
pop
fisubrs
andb
test
add
nop
lods
jmp
and
popf
cmp
cmp
ret
mov
push
rolb
loop
into
icebp
hlt
add
leavew
das
add
pusha
mov
loopne
pop
mov
pop
test
and
jo
xchg
xor
inc
and
fsubr
icebp
or
rolb
orb
jns
int
in
jmp
outsl
cmc
imul
inc
insb
jno
pop
dec
in
loop
pusha
in
out
mov
loopne
sti
out
into
sbb
not
and
add
push
insb
mov
shlb
mov
and
push
out
sbbl
jno
insl
andl
and
xchg
outsb
loopne
push
and
lahf
push
mov
rorb
add
pusha
adc
lret
sub
andb
cmp
adc
mov
pop
stos
and
add
xchg
mov
pop
or
out
add
jne
add
loopne
cli
lods
loopne
aaa
xchg
repz
leave
adc
inc
cld
add
rorb
rolb
xchg
cmpsl
rcl
mov
add
and
rorl
sti
and
fcoms
mov
cld
mov
rorb
xchg
cmp
pop
test
sub
mov
jle
add
shlb
mov
push
or
jbe
pusha
loopne
rolb
ret
fisubrl
dec
and
push
leave
mov
sub
push
and
cmp
sahf
sbb
out
lock
sahf
icebp
sbb
mov
imul
addb
inc
pusha
in
xor
cmp
test
adc
jno
cwtl
nop
jne
rolb
inc
push
insl
mov
xchg
cmp
sub
repz
and
inc
xchg
std
and
pop
ljmp
inc
jne
stos
movsl
xor
add
jae
inc
and
mov
das
loopne
jmp
inc
pop
in
adc
lret
pop
scas
mov
loopne
outsb
andb
xor
adc
or
mov
mov
add
leave
mov
dec
push
pusha
loopne
icebp
ljmp
jp
stc
mov
addb
adc
mov
jl
addb
ljmp
inc
idivb
sbb
in
jge
xor
mov
subb
mov
ja
inc
inc
sbb
fimuls
mov
inc
icebp
pop
inc
bound
mov
ret
add
loopne
fcomps
das
outsb
shrb
rorb
loopne
adc
jg
pop
lret
ffreep
scas
pop
jne
mov
rcrb
xchg
test
xchg
sbb
sbb
push
or
int
sbb
add
pusha
adc
loopne
and
jmp
sub
mov
and
push
inc
inc
nop
mov
add
repnz
dec
mov
mov
andb
mov
stos
mov
pusha
roll
fcomip
fwait
hlt
cmp
mov
cs
inc
inc
popf
cmpsb
pusha
and
push
sti
push
xchg
popw
dec
xchg
pop
or
jmp
pusha
xor
loopne
cwtl
xchg
pop
push
push
push
and
loopne
inc
push
sahf
outsl
xchg
pusha
dec
je
fisubl
add
int3
jne
cmp
push
fs
and
mov
sbb
mov
jle
mov
xor
inc
lret
pop
cli
adc
rol
mov
inc
inc
fldt
fxch
repnz
shlb
adc
jbe
nop
and
cmpsb
pusha
inc
xchg
push
jl
mov
add
mov
ljmp
call
add
jp
sarl
outsl
arpl
iret
.byte
dec
je
