add
push
xor
and
add
inc
push
and
xor
add
and
jo
inc
inc
pusha
push
and
inc
add
xor
add
add
push
push
add
inc
add
push
and
add
adc
add
add
push
adc
and
inc
and
push
inc
and
and
adc
inc
bound
pusha
adc
and
push
add
xor
pusha
push
pusha
add
push
adc
jb
bound
jo
adc
bound
add
and
inc
add
add
pusha
push
add
xor
and
push
jo
push
add
inc
inc
adc
add
jo
inc
bound
inc
add
adc
adc
push
add
add
push
push
add
adc
xor
inc
inc
inc
inc
pusha
adc
xor
xor
add
and
add
pusha
inc
jo
push
adc
bound
inc
add
add
adc
adc
xor
add
push
inc
adc
xor
and
add
inc
inc
add
xor
pusha
and
add
adc
push
add
jo
and
adc
xor
pusha
add
adc
adc
xor
adc
and
adc
pusha
xor
add
add
add
and
adc
jo
jo
add
inc
and
xor
adc
jo
xor
jo
xor
add
push
jo
inc
jo
adc
adc
add
xor
and
inc
push
adc
inc
and
add
inc
adc
jb
pusha
add
inc
jb
xor
push
add
add
pusha
inc
jo
adc
add
jb
adc
xor
adc
xor
add
bound
inc
pusha
adc
push
and
push
adc
pusha
push
and
push
and
and
inc
inc
add
add
pusha
add
add
add
inc
pusha
jo
inc
jb
push
add
and
xor
add
and
and
add
inc
xor
push
and
bound
jo
push
add
xor
push
push
pusha
xor
adc
adc
push
add
push
jb
xor
inc
add
jo
pusha
and
xor
push
jo
push
adc
inc
add
and
xor
add
add
jo
and
jb
push
pusha
push
adc
add
add
and
inc
and
xor
pusha
push
push
add
adc
and
xor
jo
pusha
pusha
add
push
adc
jo
jo
inc
inc
and
add
push
add
add
jo
add
inc
pusha
adc
add
add
push
adc
inc
push
push
inc
xor
add
adc
adc
pusha
inc
adc
xor
inc
jb
pusha
add
inc
jb
adc
add
xor
jb
xor
jo
and
and
push
add
xor
add
jo
inc
jo
xor
pusha
push
push
xor
pusha
add
jo
pusha
push
jo
inc
adc
push
pusha
adc
jb
bound
inc
and
add
jb
bound
jb
push
jo
add
and
push
xor
inc
xor
add
pusha
push
bound
inc
add
pusha
xor
inc
add
add
adc
adc
adc
inc
inc
inc
add
bound
inc
inc
inc
pusha
inc
and
jo
adc
add
add
adc
push
add
pusha
add
push
push
and
adc
add
xor
add
pusha
inc
push
and
add
adc
jo
add
inc
add
inc
pusha
pusha
add
pusha
xor
jo
inc
inc
inc
bound
and
add
jb
adc
jb
jb
xor
and
pusha
add
add
inc
xor
add
adc
jo
jb
jb
jo
and
bound
adc
adc
inc
adc
push
and
xor
push
pusha
inc
inc
pusha
and
inc
adc
add
add
adc
add
inc
push
pusha
and
add
bound
bound
add
adc
xor
xor
and
pusha
push
adc
jb
inc
xor
add
inc
inc
pusha
add
pusha
inc
adc
adc
and
inc
add
and
jo
inc
and
pusha
xor
and
jo
adc
pusha
xor
and
pusha
xor
add
add
and
adc
and
xor
add
jo
inc
inc
pusha
add
inc
inc
inc
inc
inc
add
inc
pusha
jo
xor
inc
xor
adc
adc
add
jo
adc
add
adc
push
adc
pusha
inc
add
pusha
add
pusha
push
add
add
jb
jo
bound
and
add
inc
push
and
and
push
add
inc
pusha
xor
add
jo
jo
and
and
add
pusha
adc
and
jb
and
push
add
xor
bound
push
inc
add
pusha
add
add
xor
push
inc
push
inc
jb
push
and
jo
xor
pusha
jb
jo
inc
adc
pusha
adc
add
add
xor
add
xor
adc
and
push
adc
push
adc
xor
push
jo
and
add
add
jo
inc
inc
adc
xor
xor
pusha
xor
pusha
jo
xor
pusha
xor
inc
jb
add
jb
push
and
xor
inc
push
push
adc
add
add
pusha
pusha
adc
add
adc
inc
and
add
push
inc
xor
add
pusha
bound
pusha
and
adc
push
and
xor
pusha
inc
adc
adc
xor
and
add
add
push
push
pusha
xor
adc
xor
inc
adc
inc
add
push
xor
pusha
pusha
add
push
inc
pusha
jo
add
and
and
xor
jb
jo
inc
pusha
add
push
xor
adc
inc
add
jo
pusha
adc
inc
inc
pusha
inc
push
add
add
pusha
pusha
push
and
inc
bound
jo
jo
add
jo
jb
push
add
inc
adc
inc
inc
add
xor
pusha
pusha
push
add
inc
push
push
push
jo
add
inc
and
and
push
add
push
jo
add
jo
add
jo
jo
pusha
inc
xor
add
and
push
push
inc
adc
jb
and
xor
xor
and
and
inc
adc
pusha
push
push
inc
add
add
push
pusha
xor
add
push
and
and
xor
adc
push
inc
inc
jb
push
inc
bound
add
inc
pusha
adc
adc
jo
inc
xor
bound
bound
xor
xor
inc
xor
push
adc
xor
xor
bound
and
inc
jo
adc
jb
bound
jo
add
add
xor
inc
pusha
pusha
and
xor
xor
jo
inc
push
jo
jo
inc
xor
bound
push
jo
add
inc
bound
inc
inc
inc
and
push
adc
inc
push
pusha
add
xor
jb
and
inc
jo
pusha
add
add
push
inc
and
adc
push
add
and
add
and
jb
jo
and
push
add
inc
add
xor
jb
jo
xor
bound
add
xor
pusha
add
jb
and
push
bound
and
pusha
and
add
push
jo
and
inc
add
add
and
add
inc
pusha
add
inc
jb
adc
inc
and
jb
and
jo
pusha
add
xor
xor
xor
inc
pusha
push
and
push
inc
add
jo
add
add
adc
jo
add
adc
pusha
push
push
and
pusha
pusha
xor
push
xor
adc
bound
add
push
xor
adc
inc
adc
inc
inc
adc
add
and
adc
and
and
bound
push
add
push
adc
jo
push
inc
add
pusha
push
inc
and
adc
jo
pusha
pusha
add
push
add
adc
push
xor
add
xor
pusha
jo
pusha
push
and
adc
inc
adc
jo
inc
and
push
adc
adc
inc
pusha
adc
jo
inc
push
xor
and
add
push
and
xor
and
jo
pusha
add
inc
add
xor
add
inc
and
jo
inc
jo
and
add
adc
xor
jo
inc
add
and
pusha
add
adc
push
add
jo
pusha
xor
xor
push
and
xor
inc
bound
inc
and
adc
add
xor
jo
and
inc
and
pusha
push
jo
adc
inc
and
push
add
adc
inc
inc
push
pusha
inc
pusha
add
jo
push
and
push
inc
inc
and
add
add
bound
jo
inc
jb
and
and
add
xor
add
xor
and
push
pusha
bound
and
push
adc
push
adc
adc
and
pusha
xor
xor
add
pusha
xor
and
add
and
adc
and
inc
inc
inc
add
bound
xor
add
add
jo
pusha
jb
pusha
and
pusha
add
add
jo
push
jo
add
add
push
adc
push
and
adc
pusha
add
inc
adc
inc
inc
add
add
jo
xor
inc
xor
adc
and
xor
jb
push
and
inc
add
and
add
jo
push
add
adc
push
inc
xor
pusha
push
add
add
and
and
inc
and
adc
xor
inc
pusha
adc
add
inc
push
and
pusha
jb
add
adc
add
xor
inc
adc
pusha
xor
and
add
push
xor
xor
jb
xor
inc
and
adc
adc
add
pusha
pusha
inc
and
add
inc
and
jo
adc
inc
inc
adc
push
and
adc
pusha
inc
pusha
pusha
add
adc
inc
xor
add
inc
jo
add
xor
pusha
adc
jo
add
adc
xor
push
push
inc
bound
and
and
pusha
and
add
pusha
add
adc
xor
add
xor
pusha
and
adc
jo
add
inc
add
push
jo
inc
adc
adc
jo
pusha
push
add
xor
push
inc
xor
push
jo
pusha
add
add
and
adc
push
push
add
jo
and
and
jb
push
jo
inc
pusha
pusha
xor
pusha
add
adc
xor
and
add
pusha
xor
add
push
add
push
jo
inc
push
add
pusha
adc
jo
add
jo
add
and
inc
adc
push
jb
pusha
add
inc
and
adc
inc
push
xor
xor
add
inc
jo
add
inc
inc
pusha
xor
adc
add
push
bound
xor
add
push
xor
push
add
inc
and
add
and
push
inc
pusha
adc
xor
add
and
inc
push
adc
pusha
and
jb
and
xor
pusha
inc
and
push
pusha
xor
inc
add
inc
push
inc
jo
add
xor
and
and
bound
jo
xor
inc
jo
adc
jo
add
adc
and
pusha
bound
inc
pusha
inc
add
add
add
xor
pusha
xor
and
add
xor
and
add
and
adc
adc
bound
xor
xor
add
jb
bound
add
inc
push
xor
push
add
push
adc
and
and
and
jo
add
add
pusha
add
inc
add
bound
inc
push
add
push
push
adc
add
and
inc
add
add
and
bound
add
xor
inc
adc
adc
push
add
inc
bound
push
xor
add
jb
add
xor
add
pusha
jo
xor
inc
jo
adc
jo
inc
and
push
and
add
add
and
xor
add
add
adc
xor
inc
push
xor
and
and
adc
adc
jo
adc
pusha
add
add
inc
adc
inc
jo
xor
inc
inc
xor
and
and
push
jo
push
add
jo
pusha
and
adc
push
xor
push
push
add
push
add
jo
add
add
xor
add
xor
adc
adc
pusha
push
and
push
jb
xor
xor
xor
add
xor
pusha
xor
adc
jo
adc
xor
add
xor
xor
add
jo
adc
push
add
adc
and
add
push
jo
and
add
inc
jo
xor
jo
xor
jb
jb
xor
jo
pusha
push
xor
xor
jo
push
inc
add
and
xor
add
jo
inc
inc
jo
add
push
adc
adc
inc
add
and
jo
inc
xor
xor
and
jo
inc
and
jo
inc
bound
add
adc
adc
xor
adc
add
xor
jo
add
push
inc
inc
add
bound
push
and
pusha
push
jo
add
and
inc
xor
inc
jb
and
inc
jb
bound
pusha
and
jo
inc
push
add
adc
add
adc
adc
add
jo
adc
jo
add
bound
jo
inc
and
add
add
add
inc
xor
push
push
inc
adc
adc
inc
add
push
inc
adc
xor
add
and
jb
adc
add
add
adc
add
adc
inc
and
add
jo
inc
adc
push
inc
push
jo
add
jb
adc
jb
push
and
add
and
jb
and
pusha
jo
inc
push
and
jo
xor
add
add
adc
push
xor
adc
xor
inc
add
xor
inc
pusha
inc
and
xor
jb
and
add
add
jo
jo
adc
inc
add
inc
inc
and
add
adc
xor
add
pusha
inc
bound
jb
add
bound
add
add
bound
add
push
push
add
jo
and
inc
add
and
push
add
add
jo
and
inc
add
push
inc
and
push
inc
push
inc
inc
adc
xor
jo
adc
jo
adc
adc
and
xor
add
pusha
add
adc
add
xor
pusha
push
add
adc
and
adc
jo
add
and
add
xor
jo
xor
xor
add
and
jo
inc
jo
pusha
add
xor
push
xor
add
pusha
xor
and
inc
inc
add
add
add
add
xor
and
add
jo
and
jo
add
and
add
inc
inc
inc
xor
push
inc
add
adc
xor
inc
inc
adc
adc
add
inc
pusha
push
push
and
and
pusha
pusha
adc
and
inc
jo
adc
adc
xor
add
xor
jo
pusha
adc
and
inc
adc
push
jo
adc
inc
bound
push
adc
add
xor
jb
and
jo
inc
xor
and
jo
jo
adc
pusha
and
inc
inc
pusha
jo
push
push
adc
inc
adc
and
adc
inc
xor
xor
push
add
add
xor
inc
push
and
inc
pusha
inc
add
xor
bound
add
push
inc
jb
jb
jb
push
xor
jo
pusha
and
and
inc
xor
xor
and
xor
and
pusha
add
and
adc
and
add
and
inc
xor
push
inc
xor
jo
xor
xor
xor
inc
xor
add
jb
and
bound
adc
and
pusha
jo
pusha
add
xor
xor
xor
jo
inc
push
push
and
xor
jb
bound
push
inc
adc
inc
inc
push
add
add
push
pusha
jb
adc
xor
inc
push
adc
add
adc
bound
inc
pusha
xor
jo
xor
and
adc
push
xor
and
and
adc
jo
jo
and
add
adc
and
push
bound
xor
add
pusha
push
inc
and
inc
adc
add
add
and
add
bound
pusha
xor
add
jb
bound
inc
add
inc
inc
xor
adc
inc
xor
and
adc
and
and
add
and
xor
and
add
adc
add
pusha
and
add
push
add
pusha
xor
xor
add
jb
jb
add
add
push
add
adc
xor
push
and
add
bound
inc
pusha
bound
jo
xor
xor
and
push
add
inc
pusha
xor
xor
inc
jo
pusha
and
xor
adc
bound
add
inc
push
adc
inc
inc
and
jb
add
adc
and
jo
jo
and
xor
bound
pusha
xor
add
push
and
and
add
push
push
adc
push
jo
push
add
adc
jo
bound
inc
push
jo
jo
bound
pusha
adc
add
inc
jb
pusha
and
bound
xor
pusha
xor
inc
xor
push
inc
inc
jo
push
inc
adc
push
xor
add
and
pusha
push
inc
add
adc
adc
add
push
adc
pusha
inc
add
add
and
push
add
jo
and
inc
inc
inc
bound
and
add
add
and
xor
xor
jo
xor
push
inc
jb
jb
xor
inc
xor
adc
add
adc
add
bound
add
inc
and
add
and
push
pusha
push
xor
pusha
bound
and
xor
and
add
inc
and
push
bound
push
add
pusha
and
add
adc
jo
push
add
inc
bound
pusha
add
pusha
inc
adc
add
inc
inc
pusha
and
and
add
jb
add
xor
and
xor
bound
add
pusha
adc
bound
inc
adc
jb
and
add
jo
jo
inc
xor
add
xor
push
add
pusha
inc
add
add
xor
inc
xor
and
adc
jo
inc
and
and
adc
add
push
adc
pusha
adc
and
jo
pusha
xor
and
push
jo
jb
xor
bound
push
jb
add
adc
add
add
add
and
add
inc
add
inc
pusha
bound
pusha
add
pusha
and
inc
push
add
add
add
pusha
pusha
inc
and
add
and
push
jo
add
push
push
adc
add
inc
push
adc
push
inc
pusha
pusha
push
xor
pusha
inc
add
jo
inc
add
add
push
push
xor
add
jo
push
jo
pusha
add
inc
and
adc
add
inc
pusha
jo
xor
add
adc
add
jb
add
pusha
jb
add
and
add
jo
inc
add
pusha
inc
inc
xor
jo
pusha
jo
xor
inc
pusha
pusha
xor
add
push
push
xor
inc
add
pusha
push
xor
pusha
add
jo
jo
add
and
and
pusha
add
jo
inc
inc
inc
inc
pusha
add
inc
add
and
inc
and
push
adc
add
xor
jo
xor
add
xor
push
jo
add
adc
and
and
jo
xor
and
add
add
jo
adc
inc
push
inc
xor
pusha
adc
and
pusha
bound
add
inc
push
push
pusha
jo
add
xor
and
inc
and
adc
jo
add
jo
bound
add
xor
add
xor
add
add
bound
jb
jb
jo
pusha
add
add
adc
adc
add
inc
inc
and
xor
pusha
pusha
inc
pusha
push
adc
jb
push
jo
adc
adc
pusha
jo
inc
inc
add
jb
add
add
push
adc
push
and
inc
add
and
push
jb
inc
and
pusha
inc
and
jb
adc
jb
bound
jb
xor
and
inc
adc
pusha
pusha
adc
inc
add
inc
jo
and
add
push
and
and
add
push
add
xor
adc
adc
push
add
and
and
inc
adc
and
jo
inc
add
and
xor
add
and
jo
and
pusha
and
xor
bound
add
push
add
add
and
add
push
inc
push
pusha
pusha
and
add
pusha
and
add
jo
pusha
jo
adc
bound
add
xor
inc
jo
xor
and
xor
inc
adc
adc
push
add
add
adc
and
inc
xor
bound
push
add
jo
jo
add
inc
add
push
inc
add
adc
pusha
and
adc
add
push
add
xor
inc
and
xor
adc
and
xor
jo
add
jo
adc
push
add
adc
push
inc
inc
adc
adc
pusha
xor
pusha
add
pusha
jb
jo
inc
inc
adc
and
push
push
add
jb
adc
push
inc
inc
push
add
xor
add
inc
add
push
add
adc
xor
and
bound
xor
adc
inc
push
adc
inc
bound
inc
add
add
jo
xor
adc
adc
add
adc
and
xor
and
jo
adc
jo
pusha
add
add
push
inc
push
add
inc
push
xor
pusha
add
push
xor
adc
push
inc
jb
inc
adc
add
and
adc
inc
push
pusha
add
pusha
inc
add
push
inc
and
inc
and
add
pusha
push
add
bound
inc
add
push
bound
xor
pusha
and
adc
jb
adc
pusha
adc
add
xor
adc
xor
pusha
inc
inc
inc
add
add
xor
and
adc
jb
xor
add
xor
add
jo
add
push
and
and
add
xor
add
add
add
add
adc
inc
pusha
pusha
and
inc
add
inc
bound
and
push
xor
pusha
and
add
add
add
add
xor
xor
inc
add
jo
jo
inc
adc
inc
adc
pusha
push
adc
and
add
inc
add
xor
adc
inc
add
adc
xor
add
adc
jo
push
add
push
add
pusha
pusha
bound
push
adc
add
add
pusha
add
inc
inc
adc
bound
xor
push
jb
adc
and
inc
add
xor
xor
inc
add
adc
xor
and
pusha
jb
jb
push
adc
pusha
add
adc
add
xor
inc
jb
jo
bound
add
pusha
push
adc
and
add
and
push
adc
adc
adc
push
inc
push
inc
inc
push
bound
push
jo
add
jo
push
jb
push
add
xor
inc
xor
add
bound
inc
jo
inc
adc
add
inc
add
push
jo
xor
add
add
adc
pusha
jo
bound
jo
adc
inc
inc
add
pusha
adc
adc
xor
add
inc
inc
jo
jo
add
add
add
add
inc
jo
xor
inc
pusha
push
add
pusha
adc
xor
inc
xor
push
xor
add
inc
pusha
and
push
inc
jb
adc
adc
inc
push
adc
xor
and
xor
and
xor
xor
jo
inc
adc
pusha
and
inc
inc
add
adc
pusha
inc
push
jo
inc
add
adc
inc
xor
add
xor
and
adc
add
adc
bound
inc
add
push
jo
and
add
push
jo
add
push
adc
pusha
and
inc
inc
inc
and
pusha
inc
adc
and
and
and
add
pusha
add
inc
add
add
adc
add
jo
push
and
add
pusha
jb
jo
adc
inc
xor
xor
jb
jo
jb
adc
add
and
push
adc
push
and
push
and
jo
add
push
add
add
add
add
pusha
xor
bound
xor
adc
jo
add
xor
push
add
add
adc
adc
add
inc
pusha
inc
inc
push
inc
adc
push
adc
add
push
add
adc
pusha
inc
xor
adc
pusha
push
add
inc
add
and
xor
xor
and
adc
and
inc
adc
xor
xor
push
inc
push
pusha
push
add
xor
push
jo
inc
add
push
add
bound
push
pusha
jo
xor
adc
and
bound
add
inc
and
inc
inc
add
bound
xor
add
and
inc
push
inc
and
adc
xor
inc
add
add
push
and
bound
inc
inc
jo
add
pusha
add
pusha
push
xor
inc
xor
and
and
jb
and
inc
jb
and
add
xor
add
adc
push
xor
bound
add
adc
adc
and
inc
adc
inc
inc
adc
add
and
add
add
pusha
pusha
jo
push
pusha
jo
jo
adc
add
push
inc
jo
add
adc
and
add
push
jo
adc
jb
add
bound
push
add
and
add
push
inc
and
bound
jo
add
xor
pusha
push
inc
adc
xor
and
add
xor
push
xor
adc
inc
adc
pusha
jo
add
jo
add
inc
add
xor
jb
pusha
add
inc
pusha
adc
add
adc
and
jo
xor
adc
inc
push
add
push
jb
add
add
and
adc
and
and
xor
jo
jb
inc
jo
jo
add
jo
adc
and
push
push
bound
inc
inc
add
inc
adc
jo
add
add
xor
push
add
and
xor
add
jb
and
add
xor
jo
push
add
adc
add
inc
adc
adc
pusha
push
add
bound
adc
adc
push
and
adc
add
push
and
pusha
inc
inc
xor
pusha
jb
push
add
inc
pusha
and
and
and
and
add
and
adc
add
and
add
adc
push
pusha
xor
xor
push
jo
inc
jb
push
add
xor
xor
inc
and
push
xor
pusha
add
jb
add
adc
and
and
xor
add
xor
add
xor
add
add
push
add
inc
inc
push
add
inc
xor
push
push
jo
add
push
add
adc
xor
add
and
pusha
adc
add
adc
adc
adc
inc
add
bound
add
inc
add
jo
xor
jo
add
push
bound
jo
jo
adc
add
add
xor
add
push
jb
add
add
xor
and
and
push
add
add
add
add
inc
and
add
inc
and
and
add
add
inc
jo
and
pusha
push
pusha
inc
adc
jb
push
inc
bound
add
inc
inc
add
inc
inc
adc
bound
pusha
adc
add
and
add
add
pusha
pusha
jo
xor
push
and
inc
add
add
and
jo
add
add
xor
jo
add
xor
pusha
push
add
pusha
inc
gs
in
mov
add
add
add
add
mov
mov
or
jae
add
mov
cmp
rolb
add
mov
cmp
add
mov
add
add
add
fisttpll
add
add
add
mov
or
or
mov
mov
aas
or
sahf
adc
add
fwait
add
add
add
add
int
and
mov
xor
add
add
push
jg
dec
ds
imul
movb
add
add
icebp
mov
mov
cld
xchg
add
and
mov
jo
xor
add
add
or
mov
or
mov
add
mov
add
or
fcoms
enter
inc
add
mov
shlb
dec
add
add
xor
mov
add
add
add
add
add
shlb
aaa
iret
shrb
add
add
test
add
mov
dec
mov
sarb
je
rorb
add
cmp
shl
lret
dec
fmul
or
mov
mov
fcomps
lds
fsubrs
mov
shl
mov
fst
mov
add
js
xor
add
mov
or
rcrl
add
add
xchg
pop
inc
andb
add
sahf
push
or
add
add
add
fwait
bound
mov
add
add
in
xor
push
ret
add
add
jb
jbe
add
add
add
add
pop
je
cmp
add
mov
jb
fcoms
add
fcmovnu
jne
mov
add
add
rorb
xor
add
mov
add
add
adc
outsb
std
es
mov
sub
add
add
lock
add
add
add
sub
add
add
add
xor
add
push
add
add
add
cmp
add
add
add
add
or
add
add
jnp
add
add
or
add
mov
add
add
enter
dec
add
add
mov
mov
cmp
add
sub
mov
or
aas
pop
add
mov
jo
subb
add
movsb
data16
loopne
add
mov
nop
or
add
mov
adc
add
add
add
arpl
and
add
add
add
add
add
aaa
xchg
or
add
add
add
add
movsl
add
add
add
movsl
add
mov
xchg
add
xchg
add
mov
add
add
add
add
add
movsl
add
mov
daa
add
mov
sti
xor
and
add
icebp
dec
add
add
add
xor
add
add
call
add
add
add
add
add
add
add
mov
add
add
push
and
add
mov
add
add
add
and
xor
add
add
movsl
add
add
add
add
add
push
add
add
add
add
mov
mov
add
and
add
test
movsl
add
add
add
mov
movsl
add
mov
add
add
loopne
xchg
mov
add
mov
inc
add
add
add
add
add
mov
mov
mov
add
add
lock
jnp
add
add
lock
add
add
add
and
add
add
add
and
add
add
rol
rolb
mov
add
add
add
call
add
add
and
add
and
add
and
add
and
add
add
add
and
mov
add
add
add
add
add
add
push
and
add
mov
add
add
add
and
add
and
add
add
add
add
add
add
push
mov
add
add
add
add
add
add
movsl
add
add
add
add
mov
add
add
sub
mov
add
mov
mov
add
mov
add
add
add
mov
add
add
add
add
add
add
add
mov
mov
add
add
add
mov
add
mov
mov
add
add
add
mov
sbb
add
movsl
add
add
add
movsl
add
add
add
add
add
add
add
add
add
movsb
add
add
add
add
add
movsb
add
mov
pop
add
add
add
repz
add
mov
add
add
add
shlb
mov
add
add
call
add
add
sbbl
add
add
mov
add
add
add
add
add
mov
mov
add
mov
mov
add
add
add
sub
add
sub
add
mov
add
mov
mov
add
lods
or
mov
mov
add
add
add
add
mov
add
mov
pop
add
add
add
mov
aam
add
add
test
aam
add
add
rclb
add
mov
pusha
add
mov
mov
add
add
add
add
add
shrl
andl
lock
sub
mov
add
mov
mov
add
add
add
xchg
pusha
add
add
add
mov
pusha
add
mov
add
mov
add
add
add
mov
add
rcl
add
mov
add
add
cmpsb
inc
add
mov
inc
add
add
add
add
add
mov
mov
add
add
add
add
add
add
add
add
mov
mov
add
mov
mov
add
mov
add
add
add
or
add
add
add
mov
add
add
add
mov
mov
add
add
add
mov
mov
add
add
add
mov
mov
add
add
add
add
add
das
dec
add
rol
add
add
adc
movl
sub
add
add
pusha
add
add
add
add
add
loopne
add
mov
add
add
add
add
add
add
add
add
inc
add
mov
inc
add
dec
add
add
add
mov
dec
add
xchg
mov
add
mov
add
push
popa
int3
push
in
add
mov
add
inc
decl
add
pop
jb
add
add
fisubs
sub
mov
add
mov
and
mov
xchg
mov
adc
enter
inc
add
mov
into
ret
sub
jo
jno
adc
sbb
mov
jnp
add
add
loop
sub
add
add
push
jbe
add
add
sbb
mov
add
add
push
add
add
mov
inc
out
in
jecxz
repz
pushf
mov
add
call
sahf
adc
lock
mov
pop
clc
dec
ds
push
out
xor
mov
mov
add
add
subl
add
add
xchg
repnz
push
adc
sub
add
add
inc
jne
add
add
add
add
shl
scas
movsl
ss
add
mov
add
xchg
push
andb
add
ficompl
jb
test
outsb
adc
add
add
adc
mov
mov
mov
outsb
jae
push
mov
lcall
scas
sbb
add
cwtl
push
and
mov
and
mov
rclb
add
in
adc
xchg
movsb
xchg
bound
dec
jle
push
movsb
adcl
popf
or
add
add
or
lea
cltd
mov
js
shlb
push
dec
gs
jo
cmp
gs
push
or
mov
daa
dec
test
sbb
add
jns
call
jp
inc
add
xchg
ss
fimuls
mov
aas
mov
imul
out
inc
push
arpl
mov
add
mov
ja
add
add
adc
mov
push
lcall
stc
xchg
push
add
adc
mov
loopne
xchg
out
and
add
add
add
add
es
jb
push
mov
add
jno
out
aad
dec
add
add
orl
hlt
fcmovne
sub
or
addr16
iret
arpl
mov
sub
mov
ret
dec
daa
or
aad
pop
out
sub
xchg
inc
mov
pop
pusha
add
add
je
in
daa
in
rcrl
or
mov
add
add
mov
xchg
sub
aam
mov
add
add
xchg
jb
lret
mov
cwtl
fadd
in
or
scas
filds
xor
add
xor
out
je
in
sbb
mov
add
add
pop
cltd
sbb
jmp
pop
add
xchg
mov
xor
jb
ja
push
add
pop
jne
push
cwtl
fldenv
out
mov
or
ljmp
aam
addr16
ja
mov
jno
jg
fdiv
movsl
mov
add
mov
cmp
pushf
jle
ret
fcom
dec
add
add
sbb
imul
cmp
jae
add
add
or
mov
setne
or
add
add
add
nop
push
jo
repz
mov
add
add
icebp
mov
add
push
inc
add
add
mov
imul
push
mov
popa
xlat
mov
xchg
push
out
movsb
loope
clc
or
mov
add
add
sub
add
mov
adc
adc
dec
add
test
add
add
repnz
sti
ret
cmpsl
and
add
add
insb
add
add
sub
adc
mov
add
add
cmp
or
aas
div
mov
xorb
mov
shrl
add
inc
add
add
add
add
stos
pop
xchg
sti
aas
dec
jecxz
push
inc
call
in
pop
mov
ret
sub
sarl
and
add
jne
jo
mov
add
and
sbb
je
xor
lods
lret
jo
add
add
add
mov
add
add
xor
jne
clc
adc
push
mov
push
add
inc
add
add
addb
pop
inc
add
add
cwtl
imul
push
cs
push
lods
push
add
jecxz
ret
jp
dec
mov
add
test
add
inc
pushf
or
rclb
jnp
push
add
add
add
add
cmp
aas
cmp
push
lods
inc
add
add
cwtl
or
add
lcall
push
mov
repnz
mov
xor
mov
inc
or
add
cmpb
mov
mov
pop
enter
int
xchg
push
leave
dec
mov
and
push
mov
xchg
sbb
jl
cmp
imul
in
mov
pmaxub
lock
mov
mov
xor
stc
dec
xlat
inc
fistpl
add
mov
rcrb
add
add
mov
mov
in
sub
pop
mov
add
sbb
add
out
or
loope
clc
ret
jo
std
inc
add
addl
xchg
jb
and
add
add
gs
xchg
push
imul
mov
in
lock
mov
test
inc
imul
add
add
mov
fistpll
xchg
mov
xchg
xchg
xor
mov
loopne
clc
xlat
enter
daa
into
loopne
les
ss
add
add
cmp
dec
add
bound
push
push
ret
add
add
in
out
push
adc
sti
push
ljmp
mov
ds
lea
push
enter
sub
mov
sub
in
outsl
cwtl
mov
add
in
ja
and
inc
in
xlat
mov
add
mov
add
add
lahf
adc
mov
add
outsb
mov
jns
movsl
sub
jle
mov
lods
enter
add
mov
ret
and
add
add
icebp
cwtl
xor
push
lea
dec
scas
xor
mov
add
add
jge
dec
in
cld
arpl
adc
and
dec
jo
xchg
das
mov
xchg
cmp
pop
mov
shl
jne
xchg
stos
aaa
aas
test
mov
push
mov
and
sbbl
pusha
add
adc
adc
stos
and
mov
add
dec
cmpsb
aas
fwait
aaa
or
mov
add
add
add
roll
add
add
pop
mov
xorl
sti
push
out
xorb
mov
inc
add
add
mov
xchg
add
dec
xchg
call
add
sub
add
add
lret
or
add
add
inc
add
add
add
sbbl
sbb
mov
mov
orb
movsb
or
fsub
cmpsb
inc
add
add
cli
hlt
adc
mov
pop
in
test
mov
enter
add
inc
push
add
add
mov
jp
add
add
add
into
jns
push
cmpsl
call
mov
add
add
int
mov
data16
push
sbb
push
dec
add
jb
and
add
mov
repz
mov
mov
pop
sub
add
add
shl
jae
jae
push
and
mov
sub
cs
or
inc
add
jle
lds
push
xor
add
cli
ljmp
iret
popf
jmp
out
fwait
insl
fsub
xor
or
jnp
sbb
and
mov
test
and
add
add
push
hlt
andb
xchg
and
mov
mov
cmp
jbe
test
rcrl
push
push
adc
idivb
cwtl
dec
push
je
dec
push
add
fstl
jae
cli
inc
add
add
sub
and
mov
mov
add
add
clc
imul
mov
sbb
test
mov
push
xchg
jecxz
adc
ror
adc
fwait
mov
dec
add
add
jecxz
stc
movb
xchg
imul
and
add
add
dec
add
add
shrl
icebp
test
fsubrs
add
add
repz
xor
sarb
dec
xchg
push
and
mov
jb
mov
xor
minpd
jo
add
add
scas
or
inc
add
add
arpl
lods
dec
add
add
push
outsl
or
aas
cmp
mov
mov
shll
cmp
jo
cmp
cs
jl
sti
xchg
xor
pop
cld
popa
lds
add
add
xchg
jmp
test
ljmp
and
mov
mov
bound
cmp
outsb
sub
add
add
adc
mov
mov
cmp
dec
repnz
jne
in
es
push
testb
add
adc
aas
inc
in
mov
sbb
dec
loope
cli
mov
push
test
add
test
pop
jae
add
lcall
ds
xchg
int
jo
push
and
xorl
mov
sbb
add
add
add
add
and
mov
sbb
nop
mov
or
js
pop
es
add
sub
add
add
lret
and
mov
lret
mov
popf
imul
add
or
sti
das
push
jle
xor
nop
dec
clc
in
mov
mov
fdivrl
test
mov
add
add
add
and
fwait
pop
arpl
pop
adc
jmp
out
mov
clc
pusha
add
sub
scas
inc
sbb
add
lock
mov
repz
iret
push
sbb
jl
and
add
add
pop
xchg
jecxz
push
imul
cmp
xchg
cmpb
inc
lahf
sub
mov
loopne
xchg
into
bound
in
cmp
fstps
mov
push
xchg
sbb
fcompl
mov
adc
add
mov
add
mov
mov
jmp
add
fwait
cmp
popf
sbb
and
sti
inc
xlat
sbb
cli
lock
out
rorb
test
sub
cmpsl
scas
xor
outsl
jl
popf
mov
push
inc
enter
loop
int3
xchg
out
push
call
out
xor
lcall
add
popl
add
lods
in
push
movsb
pop
sahf
movsl
jl
mov
imul
lret
mov
cmpsl
mov
add
jge
pop
and
popa
sub
in
push
fsts
lret
movsl
mov
enter
jbe
movsl
jge
scas
sbbb
add
push
push
cld
inc
add
add
mov
add
cmp
pop
cmp
ss
xchg
mov
xchg
dec
add
into
jno
add
int3
and
add
add
cmc
or
fidivs
repnz
add
sti
jae
sarb
mov
xor
sub
add
add
mov
add
lahf
je
push
cmp
mov
lahf
test
jecxz
jne
jnp
hlt
push
mov
fwait
lock
sub
pop
rcrl
adc
popf
cmpsb
adc
jno
xor
or
push
push
int3
test
push
cmp
es
jne
js
aad
out
and
les
add
add
add
mov
orl
jne
insl
shr
push
mov
cmp
imul
int
mov
xor
or
nop
add
add
in
add
cmp
jne
lea
push
push
mov
push
call
cld
or
mov
shr
shr
mov
add
push
push
push
push
push
call
leave
ret
ret
mov
mov
mov
or
cld
lea
lea
sub
shr
not
inc
sub
mov
je
push
pop
add
lea
clc
jmp
ret
push
mov
sub
lea
movl
movl
push
push
push
push
push
push
cld
call
test
je
call
add
adc
ss
idivl
jnp
mov
add
dec
add
add
or
sub
add
add
or
add
add
push
je
sub
js
dec
sub
add
add
jne
in
add
shrl
sub
add
add
cld
pop
stc
mov
add
add
cmpsb
imul
add
adc
mov
push
or
mov
add
mov
test
xor
add
add
add
add
add
dec
add
add
add
xchg
push
pushf
adc
bound
add
push
imul
mov
adc
int
mov
lcall
xchg
shlb
add
pusha
add
add
push
out
jbe
xchg
xchg
xor
sahf
int3
in
sbb
add
pop
dec
leave
and
and
int3
pop
fimull
fwait
adc
push
int
add
add
sti
out
add
cs
mov
add
add
add
xchg
out
cmc
adcl
inc
call
adc
add
jbe
mov
pop
or
lahf
addb
lahf
jmp
push
dec
jmp
or
outsb
mov
dec
add
add
daa
xlat
mov
lcall
push
mov
push
push
add
add
add
mov
scas
pop
call
andb
nop
jnp
enter
lahf
and
inc
lret
or
add
mov
pop
inc
inc
fildll
xchg
decl
pop
aaa
dec
idivl
xor
jno
push
pop
bound
add
add
dec
add
add
add
ds
daa
jl
movaps
dec
add
subl
mov
dec
jns
and
das
into
addr16
repz
addl
pop
jl
xor
add
add
roll
loopne
xor
mov
add
subl
sarb
add
and
mov
sub
stos
mov
mov
sbb
mov
fstpt
jg
adc
mov
pop
je
cmp
xor
mov
adc
pop
sub
mov
push
adc
add
add
cmc
adc
out
jne
inc
mov
aas
int
add
add
pop
mov
je
outsb
mov
mov
sarb
cmp
adc
shll
fsubp
xor
pop
jmp
dec
add
cmp
add
xor
add
add
outsb
rorl
inc
in
aam
ficoml
add
add
jae
insb
add
add
out
inc
add
add
ret
add
add
imul
pop
mov
ss
aad
sbb
add
inc
mov
mov
mov
fwait
in
outsb
sub
sbb
out
mov
xchg
lret
inc
add
mov
fildl
mov
add
jne
ficoms
out
mov
pushl
sbb
mov
shll
sbb
popf
lcall
add
add
pushf
nop
xchg
mov
inc
out
insb
add
mov
outsl
and
add
add
cmp
mov
push
aam
loop
adc
add
add
add
mov
inc
adc
add
add
add
add
or
mov
dec
add
push
add
add
add
clc
leave
and
add
push
mov
add
add
xchg
and
mov
mov
in
sub
add
add
add
add
pop
jnp
and
mov
mov
mov
add
add
rorl
rorl
xchg
cmp
adc
add
add
sub
add
push
mov
add
and
aaa
add
add
jae
or
mov
pop
mov
movsb
lret
sbbb
and
mov
sub
add
repz
pushf
pop
adc
mov
add
or
add
add
add
add
add
addl
add
add
or
cmp
pop
jbe
add
mov
sbb
enter
add
push
cmc
mov
inc
add
add
add
add
imulb
imul
jns
adc
pop
arpl
xchg
ja
dec
xor
sbb
aas
aaa
fstpt
push
pop
or
cs
imul
pushf
xchg
shld
icebp
jle
leave
je
pop
push
enter
or
pop
sbbb
xchg
lahf
ss
mov
sbb
add
add
aaa
adc
stos
les
mov
add
aam
inc
push
jecxz
jb
add
in
dec
lea
pop
inc
rclb
add
adc
sub
rclb
cmp
jp
cli
dec
pusha
add
inc
ret
cld
ljmp
iret
mov
sbb
mulb
or
add
add
stos
or
sbb
dec
add
scas
fwait
mov
pusha
add
add
adc
es
iret
lret
add
test
xchg
push
push
sub
mov
jbe
out
scas
bound
dec
cmp
pop
cmp
bound
loopne
add
add
push
fnstsw
xor
xor
dec
xor
les
and
sbb
jne
xchg
xor
dec
cs
lds
add
out
fildl
add
push
xorb
xchg
test
inc
test
call
push
andb
clc
adc
fcomi
mov
shll
pop
and
add
add
add
mov
rcll
add
cmp
rolb
aas
push
or
mov
add
dec
fwait
mov
enter
test
add
add
fidivs
xor
scas
es
ljmp
repnz
fisubs
outsb
inc
add
add
sub
add
add
fcomps
cmp
add
in
xchg
mov
loopne
pop
ja
mov
add
jge
mov
jg
jae
loope
nop
mov
add
add
or
addr16
push
xor
cmp
mov
pop
xchg
push
fstpl
cwtl
in
dec
dec
push
and
xor
nop
fiaddl
sbb
shrb
add
or
add
cmpsb
add
mov
enter
adc
test
xorb
imul
push
rorb
shl
and
cmp
les
xchg
adcb
das
mov
stos
push
or
jl
fwait
mov
nop
dec
jne
push
add
add
add
jmp
das
push
jg
aam
call
sarl
inc
out
outsl
mov
mov
push
xchg
aam
aad
rorb
mov
adc
int3
loopne
cmc
push
mov
or
mov
or
in
inc
mov
and
mov
imul
add
mov
pushf
jb
mov
icebp
out
mov
add
mov
mov
add
mov
push
jo
inc
push
popa
sub
mov
pop
sti
jp
sub
add
add
into
pop
jle
sti
jne
push
mov
sbb
fbld
in
filds
add
and
pushf
sub
add
add
jbe
js
cli
pop
imul
pushf
mov
add
jg
icebp
push
sub
mov
jmp
xor
add
xchg
push
push
gs
and
add
or
mov
cmp
icebp
jmp
imul
add
add
and
add
imul
imul
popa
jp
or
add
add
sbb
mov
aas
add
add
add
pop
shrb
add
or
mov
stos
sbb
in
push
push
mov
mov
add
or
add
add
push
adc
loope
or
mov
add
add
pop
aaa
sbb
add
mov
sbb
call
add
add
test
or
add
add
sub
mov
hlt
data16
mov
sbb
xor
inc
adc
add
add
push
outsl
mov
sbb
xor
imul
test
add
and
or
mov
aad
pop
fsubl
jnp
andb
lret
xor
jae
jecxz
xchg
mov
lds
add
add
out
pop
mov
and
mov
add
add
mov
push
adc
push
addl
add
or
add
pushf
fisttpll
mov
dec
add
add
hlt
je
das
mov
mov
add
cs
jo
cmp
out
push
and
add
add
add
or
add
add
sbb
lret
daa
repnz
xorl
jp
outsl
inc
jp
push
and
mov
add
add
sbb
mov
pop
imul
and
cwtl
push
icebp
outsb
mov
add
or
mov
test
scas
and
add
daa
add
add
add
xor
pop
mov
aam
sub
mov
add
mov
add
sub
arpl
xor
nop
fcoms
adc
or
mov
pop
xor
imul
mov
imul
add
add
xor
add
and
mov
mov
adc
hlt
mov
add
add
aas
push
cmp
add
lods
adc
sbb
mov
mov
dec
pop
call
cmp
inc
or
mov
lock
sbb
leave
add
add
inc
inc
add
fidivl
lret
cmpsl
sahf
xchg
adc
arpl
add
inc
sahf
xor
dec
dec
push
stos
in
mov
pusha
add
add
rorl
aaa
scas
mov
sarl
adc
pop
mov
mov
add
xchg
add
jbe
and
add
add
jl
es
push
lahf
add
mov
mov
lods
add
add
add
daa
cmpsl
fiaddl
fldcw
clc
or
in
sbb
loopne
adc
mov
add
or
add
add
dec
add
add
jo
fsubl
fistpll
xor
or
add
add
cs
inc
add
add
negb
mov
jecxz
loopne,pn
hlt
insb
add
pop
sub
mov
mov
int
adc
lahf
test
xchg
das
stc
dec
dec
imul
pop
data16
dec
add
lahf
jmp
nop
pop
lahf
pop
add
add
add
pusha
add
adc
inc
xor
add
aaa
out
cmp
push
test
sub
cmpb
add
inc
xchg
add
add
add
mov
pop
xor
jmp
and
iret
lahf
loope
add
mov
add
add
pop
pop
xor
popf
sub
lods
stc
push
repnz
out
and
stc
sahf
push
sbb
in
jo
fidivs
or
orb
cmp
jmp
push
xchg
in
xchg
push
mov
mov
scas
push
movsb
jnp
dec
ret
xor
inc
movsb
push
mov
outsl
xor
push
enter
sbb
lods
sti
sub
aam
push
mov
push
aam
add
add
add
pop
dec
pop
dec
pusha
add
add
or
add
add
shrb
fnstenv
test
mov
mov
andb
loopne
add
or
inc
insl
dec
bound
ret
xor
sub
add
add
mov
popa
clc
jae
xchg
xchg
hlt
jnp
mov
pop
push
push
fisubs
movsb
loope
mov
inc
mov
or
fcoml
mov
call
sti
cmc
xlat
imul
jo
rcrl
mov
fbld
sbb
divb
fcoms
xchg
and
cmp
popa
out
pop
stc
push
add
enter
bsf
aam
add
xchg
xor
int
cwtl
sub
mov
push
push
mov
fiadds
add
add
add
in
add
mov
into
sbb
add
inc
adc
add
daa
mov
in
and
mov
mov
popf
arpl
xbegin
pop
mov
aam
xorl
push
add
push
sti
jmp
sbb
add
mov
xchg
push
pop
enter
pop
test
push
add
add
add
mov
add
fimuls
lods
fwait
sbb
or
mov
jl,pt
mov
push
orl
or
mov
pop
iret
mov
dec
mov
daa
jmp
cli
int3
pop
bound
pop
add
xor
inc
add
add
mov
inc
add
not
inc
scas
sbb
insl
sub
lahf
cmc
mov
mov
repnz
add
add
cld
xor
add
add
lds
and
add
das
add
pop
jg
jmp
cmp
jl
push
test
push
jne
push
mull
dec
adc
push
loopne
fldcw
mov
into
sar
jecxz
add
add
jbe
repz
lret
xchg
mov
add
xor
add
add
shlb
jnp
sub
in
fcoml
insb
add
add
add
sub
mov
call
imul
ss
mov
movsl
cmp
sbb
mov
cli
cmp
add
loop
hlt
push
xchg
stos
inc
add
insb
add
add
ret
scas
or
mov
out
cmpsl
cmp
sbb
cmp
xchg
push
clc
repnz
nop
nop
jae
sahf
add
add
subl
push
mov
xchg
ret
mov
lret
add
mov
mov
nop
push
mov
leave
nop
jmp
add
scas
or
add
dec
add
add
test
cld
nop
nop
jae
mov
lahf
mov
decl
mov
xchg
ret
add
idiv
add
add
lret
test
mov
xchg
ret
dec
add
add
xor
add
out
fldl
repnz
nop
nop
jae
fildl
add
test
add
mov
pushf
push
push
mov
xchg
ret
cmp
add
add
ljmp
sbb
call
inc
add
test
add
test
mov
push
clc
repnz
nop
nop
jae
add
sub
add
add
add
sbb
clc
repnz
nop
nop
jae
andb
add
add
add
add
add
fcmovnu
loopne
roll
add
inc
xchg
xor
popa
push
mov
xchg
ret
sbb
lcall
cmp
add
mov
add
clc
repnz
nop
nop
jae
add
add
add
repnz
nop
nop
jae
add
add
lret
clc
repnz
nop
nop
jae
loop
inc
adc
xor
add
mov
add
add
xchg
icebp
mov
clc
repnz
nop
nop
jae
pop
addl
xchg
and
clc
repnz
nop
nop
jae
xchg
test
sub
add
shrl
add
add
xor
clc
repnz
nop
nop
jae
add
add
push
push
mov
xchg
ret
add
mov
add
lods
add
outsb
xlat
call
nop
push
mov
leave
nop
jmp
sbb
add
add
add
repnz
nop
nop
jae
lret
dec
adc
bound
mov
add
add
enter
repnz
nop
nop
jae
mov
add
rolb
add
push
jmp
add
add
add
add
shr
lea
push
mov
xchg
ret
add
mov
add
add
xbegin
jae
subl
add
and
push
mov
xchg
ret
add
dec
cmp
ljmp
push
push
mov
xchg
ret
add
shrb
lret
test
add
pushf
add
add
add
pop
mov
sarl
repnz
nop
nop
jae
add
loop
pushf
add
loopne
add
clc
repnz
nop
nop
jae
lahf
mov
clc
add
add
dec
cmp
push
mov
leave
nop
jmp
add
add
add
sub
repnz
nop
nop
jae
scas
add
add
add
xchg
mov
xchg
ret
xchg
add
add
add
inc
rolb
add
and
mov
notl
nop
jmp
add
inc
add
push
add
sbb
dec
mov
clc
repnz
nop
nop
jae
bound
add
add
jp
add
push
enter
clc
repnz
nop
nop
jae
rolb
cli
inc
xchg
rclb
cli
adc
clc
repnz
nop
nop
jae
push
sub
sahf
inc
push
mov
add
add
aas
stos
clc
repnz
nop
nop
jae
add
xchg
add
add
inc
test
dec
cmp
push
mov
leave
nop
jmp
mov
loop
add
add
cld
nop
nop
jae
add
mov
xchg
add
add
add
jecxz
lcall
push
mov
leave
nop
jmp
rclb
add
jp
jbe
clc
repnz
nop
nop
jae
test
inc
out
mov
add
in
push
jne,pt
call
nop
jae
sub
bound
loopne
cmp
jmp
mov
xchg
ret
add
add
add
add
xchg
ds
fdivr
repnz
nop
nop
jae
test
add
out
add
mov
xor
add
xchg
je
add
mov
xor
add
sub
cmp
nop
push
mov
leave
nop
jmp
add
add
xchg
xchg
xchg
adc
push
mov
leave
nop
jmp
add
push
sbb
add
add
repnz
nop
nop
jae
sahf
sub
push
add
xchg
push
dec
mov
cld
nop
nop
jae
xor
add
add
cmp
push
stos
push
mov
xchg
ret
add
test
test
add
dec
inc
rolb
jb
jno
scas
nop
push
mov
leave
nop
jmp
loopne
add
jae
mov
rolb
jns
jb
clc
repnz
nop
nop
jae
pop
shr
add
add
addb
push
push
mov
add
add
push
add
add
cmp
jno
add
add
add
cld
push
data16
xchg
jmp
pushf
add
xchg
xchg
add
or
add
lods
add
add
add
cmp
call
push
mov
leave
nop
jmp
inc
inc
xchg
mov
add
inc
call
inc
add
sub
add
pop
add
add
cmp
push
mov
leave
nop
jmp
add
lcall
xchg
fwait
add
push
mov
xchg
ret
add
add
jnp
nop
push
mov
leave
nop
jmp
add
add
add
loop
add
test
scas
dec
test
cld
nop
nop
jae
add
mov
or
add
add
or
fld1
push
mov
xchg
ret
add
add
add
inc
sub
cli
testb
inc
push
adc
clc
repnz
nop
nop
jae
out
add
lcall
adc
add
add
es
ret
in
cld
push
mov
xchg
ret
or
add
mov
mov
clc
repnz
nop
nop
jae
sub
scas
loop
add
sar
repnz
nop
nop
jae
add
lahf
cli
add
and
sti
push
mov
xchg
ret
add
mov
add
add
add
jmp
xchg
pushf
idivb
add
clc
mov
mov
and
mov
ret
push
mov
xchg
ret
add
add
cmp
xchg
dec
push
push
mov
xchg
ret
add
lcall
add
add
mov
add
mov
nop
push
mov
leave
nop
jmp
add
add
lods
inc
fwait
clc
repnz
nop
nop
jae
xchg
xchg
add
add
add
add
dec
cmp
nop
push
mov
leave
nop
jmp
add
sahf
add
cmp
mov
loop
clc
repnz
nop
nop
jae
addr16
add
add
repnz
nop
nop
jae
mov
xchg
or
sub
add
ret
sbb
add
clc
repnz
nop
nop
jae
inc
add
add
add
mov
jnp
add
add
add
xchg
test
mov
add
add
pop
nop
push
mov
leave
nop
jmp
cmp
add
push
clc
repnz
nop
nop
jae
adc
inc
add
shrl
clc
repnz
nop
nop
jae
mov
or
add
fiaddl
out
xchg
add
mov
nop
push
mov
leave
nop
jmp
xor
add
adc
add
repnz
nop
nop
jae
add
sub
hlt
or
add
add
repnz
nop
nop
jae
ficoml
add
add
push
mov
xchg
ret
add
subb
add
cmp
sub
add
nop
jmp
lcall
add
cld
nop
nop
jae
add
add
add
add
xchg
dec
outsb
movsb
sub
add
add
pop
jmp
daa
lods
add
inc
loopne
jae
add
inc
or
add
lds
test
idiv
call
nop
jmp
mov
ljmp
add
add
jmp
jp
nop
push
mov
leave
nop
jmp
mov
add
xor
xor
sbb
repnz
nop
nop
jae
add
add
xchg
mov
xchg
ret
xchg
lcall
xchg
add
adc
repnz
nop
nop
jae
add
add
push
imulb
mov
test
repnz
nop
nop
jae
sahf
add
add
add
and
mov
mov
clc
repnz
nop
nop
jae
test
add
add
shrl
repnz
nop
nop
jae
roll
pop
xor
sbbl
cmpl
add
imulb
add
or
mov
sbb
repnz
nop
nop
jae
sbb
adc
add
mov
lret
add
repnz
nop
nop
jae
mov
add
xor
clc
repnz
nop
nop
jae
lret
xchg
dec
xor
jae
sbb
clc
repnz
nop
nop
jae
add
add
ljmp
sub
nop
push
mov
leave
nop
jmp
loopne
add
xchg
push
inc
neg
add
cmp
movsb
push
mov
xchg
ret
mov
add
test
add
lret
xor
push
mov
xchg
ret
lret
add
mov
add
add
add
imul
clc
repnz
nop
nop
jae
add
sbb
cmp
mov
clc
repnz
nop
nop
jae
add
add
mov
mov
clc
repnz
nop
nop
jae
xor
rolb
fiaddl
loop
inc
push
clc
repnz
nop
nop
jae
lods
add
add
movl
jae
mov
loop
add
movsb
inc
pop
adcl
je
hlt
sbb
cmp
lret
dec
add
add
inc
inc
push
mov
xchg
ret
add
xor
mov
add
out
popa
jne
nop
push
mov
leave
nop
jmp
add
or
add
test
add
clc
repnz
nop
nop
jae
add
mov
addb
sbb
nop
nop
jae
mov
daa
addb
add
loopne
xor
lds
test
call
nop
jmp
daa
lahf
add
add
clc
repnz
nop
nop
jae
test
add
xchg
adc
add
add
push
clc
repnz
nop
nop
jae
add
add
aam
sbb
cld
push
inc
sbb
repnz
nop
nop
jae
lahf
cli
xchg
add
test
xor
push
mov
xchg
ret
xor
cmp
xchg
addr16
nop
push
mov
leave
nop
jmp
sahf
sbb
or
cmp
add
jne
clc
repnz
nop
nop
jae
lret
add
xor
add
or
mov
imul
mov
out
add
repnz
dec
nop
push
mov
leave
nop
jmp
sarb
add
add
add
add
push
mov
xchg
ret
add
subb
sahf
xor
ret
nop
push
mov
leave
nop
jmp
add
inc
ljmp
inc
add
sar
cld
nop
nop
jae
lahf
cmp
rcll
xchg
andb
add
cmp
ret
fildl
xor
add
xchg
rolb
push
mov
xchg
ret
xchg
add
cmp
jno
clc
repnz
nop
nop
jae
add
or
mov
add
test
add
clc
repnz
nop
nop
jae
add
scas
xchg
xchg
pop
in
fwait
mov
nop
push
mov
leave
nop
jmp
sbb
test
mov
fisttpll
cld
nop
nop
jae
rolb
xor
sbb
loop
fimull
add
inc
add
nop
push
mov
leave
nop
jmp
lcall
clc
sbb
sldt
clc
repnz
nop
nop
jae
add
add
add
add
mov
rep
nop
push
mov
leave
nop
jmp
sahf
loopne
add
inc
pop
add
nop
push
mov
leave
nop
jmp
xchg
add
push
lods
add
push
mov
xchg
ret
add
sahf
mov
test
vcvttpd2dqx
clc
repnz
nop
nop
jae
add
addb
mov
lock
mov
clc
repnz
nop
nop
jae
add
add
scas
fld1
push
mov
xchg
ret
xor
add
mov
add
leave
clc
repnz
nop
nop
jae
add
add
add
jae
add
mov
test
cld
nop
nop
jae
rolb
inc
add
add
jge
clc
repnz
nop
nop
jae
add
rcrb
push
add
add
mov
clc
repnz
nop
nop
jae
lahf
add
add
add
add
dec
cmp
push
mov
leave
nop
jmp
inc
add
pushf
jae
cmp
add
shr
nop
push
mov
leave
nop
jmp
xor
test
add
pop
nop
push
mov
leave
nop
jmp
jae
scas
add
sahf
add
xchg
push
clc
repnz
nop
nop
jae
xchg
xor
add
push
mov
leave
nop
jmp
add
add
fiaddl
mov
add
scas
mov
clc
repnz
nop
nop
jae
add
test
push
push
mov
xchg
ret
add
cmp
add
addr16
add
lea
clc
repnz
nop
nop
jae
pushf
add
mov
fwait
clc
repnz
nop
nop
jae
scas
push
or
add
jae
enter
push
mov
leave
nop
jmp
add
add
add
add
leave
nop
push
mov
leave
nop
jmp
add
xchg
pop
or
xor
jb
add
xor
test
add
pushf
jae
add
add
repnz
nop
nop
jae
add
lcall
add
arpl
push
mov
leave
nop
jmp
add
add
sahf
or
clc
xchg
mov
clc
repnz
nop
nop
jae
xor
mov
cli
add
subb
sub
lea
clc
repnz
nop
nop
jae
add
add
daa
add
add
add
sbb
push
mov
xchg
ret
add
add
xor
push
mov
xchg
ret
mov
test
add
jae
add
and
and
add
loopne
rolb
rorb
les
clc
repnz
nop
nop
jae
loopne
or
test
add
add
lds
sub
cmp
ret
xchg
clc
lret
add
sub
add
jmp
nop
push
mov
leave
nop
jmp
add
out
add
cli
lods
add
aad
nop
push
mov
leave
nop
jmp
add
add
add
inc
add
inc
out
fcoms
fld1
clc
repnz
nop
nop
jae
scas
add
sahf
sub
lahf
pusha
push
mov
xchg
ret
add
clc
push
inc
push
xchg
add
add
leave
nop
push
mov
leave
nop
jmp
add
add
add
pop
clc
repnz
nop
nop
jae
xchg
xchg
add
add
mov
call
in
leave
nop
jmp
inc
rolb
add
lods
add
mov
fldl
cld
nop
nop
jae
ljmp
scas
add
clc
repnz
nop
nop
jae
inc
add
push
add
xor
not
clc
repnz
nop
nop
jae
add
add
add
jb
nop
push
mov
leave
nop
jmp
add
mov
rolb
jno
clc
repnz
nop
nop
jae
lods
clc
mov
xchg
cmp
fiaddl
sub
add
add
mov
mov
repnz
nop
nop
jae
inc
mov
inc
xchg
addl
push
mov
xchg
ret
cmp
sbb
add
add
add
nop
nop
jae
ljmp
add
push
add
add
inc
mov
nop
push
mov
leave
nop
jmp
push
lcall
sub
add
push
mov
xchg
ret
mov
lods
mov
jg
repz
repnz
nop
nop
jae
xor
add
mov
out
mov
xchg
nop
nop
jae
lahf
add
push
add
lods
adc
add
shlb
push
mov
xchg
ret
inc
add
loopne
add
add
test
sub
add
add
pop
push
mov
xchg
ret
cmp
add
mov
add
lods
add
je
sub
push
jnp
add
mov
add
add
add
xchg
call
nop
push
mov
leave
nop
jmp
add
add
out
adc
lea
clc
repnz
nop
nop
jae
dec
add
mov
add
adc
repnz
nop
nop
jae
scas
xchg
lret
add
add
add
lods
add
add
clc
repnz
nop
nop
jae
loop
shl
xchg
xchg
add
add
add
fisttpll
pop
push
inc
add
add
add
and
clc
repnz
nop
nop
jae
add
neg
push
xchg
lss
nop
push
mov
leave
nop
jmp
shrb
inc
add
mov
clc
repnz
nop
nop
jae
ljmp
add
add
push
push
mov
xchg
ret
test
pushf
add
lahf
dec
add
add
add
insl
xchg
clc
repnz
nop
nop
jae
mov
ljmp
stos
nop
push
mov
leave
nop
jmp
add
test
out
add
or
add
add
mov
push
sub
nop
jmp
mov
xchg
add
test
add
nop
push
mov
leave
nop
jmp
mov
add
or
jo
mov
clc
repnz
nop
nop
jae
add
lahf
mov
aam
cmpl
nop
push
mov
leave
nop
jmp
xchg
mov
or
mov
xchg
ret
add
add
add
roll
add
lods
sbb
pop
add
nop
push
mov
leave
nop
jmp
add
adc
add
add
add
lcall
xor
inc
add
xor
add
add
cld
addb
add
sub
pop
add
add
add
add
add
add
lcall
nop
nop
jae
xor
add
bound
inc
shr
clc
repnz
nop
nop
jae
sbb
xchg
add
push
mov
xchg
ret
add
jae
loopne
add
add
andl
push
clc
repnz
nop
nop
jae
mov
dec
add
mov
repnz
nop
nop
jae
add
xchg
push
add
mov
repnz
nop
nop
jae
add
add
addl
aas
add
imul
add
or
add
clc
loopne
test
repnz
nop
nop
jae
add
roll
inc
add
and
clc
repnz
nop
nop
jae
add
mov
mov
xor
cwtl
insl
inc
add
inc
add
add
mov
add
clc
repnz
nop
nop
jae
add
add
mov
call
clc
repnz
nop
nop
jae
pushf
rolb
inc
add
fistpl
push
mov
xchg
ret
add
lods
dec
mov
sub
jl
add
push
mov
xchg
ret
addb
add
add
add
add
and
repnz
nop
nop
jae
sub
sahf
test
pop
rep
clc
repnz
nop
nop
jae
add
ljmp
add
cmp
xor
mov
leave
nop
jmp
add
out
xchg
add
clc
repnz
nop
nop
jae
add
add
add
sbb
and
repnz
nop
nop
jae
test
pop
pushf
add
sub
add
xor
nop
push
mov
leave
nop
jmp
test
add
add
add
mov
nop
push
mov
leave
nop
jmp
ljmp
xchg
int
clc
repnz
nop
nop
jae
mov
add
xor
out
lret
clc
repnz
nop
nop
jae
mov
or
xchg
mov
add
mov
mov
xchg
ret
dec
pop
add
add
add
cli
test
cld
nop
nop
jae
test
push
mov
add
test
cld
clc
repnz
nop
nop
jae
sbb
add
add
mov
clc
repnz
nop
nop
jae
loopne
mov
lret
lods
out
inc
repnz
mov
in
leave
nop
jmp
xchg
add
xchg
fisubl
insb
add
mov
add
push
mov
xchg
ret
mov
test
lahf
cmpw
clc
repnz
nop
nop
jae
add
add
aas
fistpl
clc
repnz
nop
nop
jae
add
add
cli
test
add
pop
mov
clc
repnz
nop
nop
jae
xchg
test
push
shlb
pop
nop
push
mov
leave
nop
jmp
mov
add
add
push
mov
leave
nop
jmp
add
add
add
cld
nop
nop
jae
add
jae
mov
or
xchg
jae
jge
clc
repnz
nop
nop
jae
ljmp
adc
test
pop
clc
repnz
nop
nop
jae
add
add
fsts
mov
xchg
ret
pushf
add
lret
add
fildl
xchg
cli
add
add
scas
dec
add
add
inc
je
nop
push
mov
leave
nop
jmp
addb
add
jae
sbb
nop
nop
jae
roll
jae
add
dec
push
mov
xchg
ret
add
add
mov
push
nop
push
mov
leave
nop
jmp
mov
xchg
rclb
repnz
nop
nop
jae
mov
rolb
add
add
add
add
fwait
clc
repnz
nop
nop
jae
add
xor
add
inc
pop
xchg
pop
nop
push
mov
leave
nop
jmp
add
lcall
orl
push
mov
leave
nop
jmp
sahf
lcall
rolb
add
add
add
nop
push
mov
leave
nop
jmp
lcall
add
and
mov
call
nop
nop
jae
rolb
add
add
scas
xchg
add
mov
push
mov
xchg
ret
lcall
xor
add
add
push
mov
leave
nop
jmp
add
add
xchg
add
sbbb
clc
add
inc
in
push
mov
xchg
ret
add
add
add
clc
repnz
nop
nop
jae
cmp
add
mov
pusha
clc
repnz
nop
nop
jae
mov
inc
ljmp
add
jmp
clc
clc
repnz
nop
nop
jae
add
ljmp
add
push
fld1
push
mov
xchg
ret
add
add
sahf
dec
fildl
adc
call
leave
nop
jmp
fildl
loopne
add
mov
clc
repnz
nop
nop
jae
lods
pop
testb
sub
xor
pusha
add
rclb
jmp
add
clc
test
sbb
clc
mov
pop
add
clc
repnz
nop
nop
jae
sub
add
test
add
xchg
repnz
nop
nop
jae
ljmp
add
mov
push
mov
xchg
ret
cmp
inc
roll
add
sub
push
mov
xchg
ret
lret
add
add
add
xor
clc
repnz
nop
nop
jae
cli
cmp
add
repnz
nop
nop
jae
fildl
xchg
sub
add
xchg
add
push
into
mov
cld
nop
nop
jae
add
orb
add
test
push
lods
and
add
add
push
clc
repnz
nop
nop
jae
mov
bound
xor
movsb
push
push
clc
repnz
nop
nop
jae
add
pushf
add
xor
push
mov
xchg
ret
add
add
add
add
add
cmp
push
mov
xchg
ret
cli
add
cmp
xorl
test
nop
push
mov
leave
nop
jmp
mov
add
mov
xchg
ret
add
add
add
jae
xor
inc
add
add
add
add
sahf
and
add
clc
repnz
nop
nop
jae
add
ljmp
add
nop
nop
jae
mov
push
mov
add
repnz
nop
nop
jae
add
adc
lods
test
add
test
or
add
add
rolb
repnz
nop
nop
jae
rcr
jae
mov
add
jne
push
mov
xchg
ret
add
lcall
loop
xchg
nop
push
mov
leave
nop
jmp
notb
test
add
mov
cld
nop
nop
jae
xchg
mov
test
sub
or
add
clc
repnz
nop
nop
jae
sub
jae
push
ljmp
test
xchg
ret
add
addl
test
add
push
adc
xchg
jne
clc
repnz
nop
nop
jae
push
xchg
add
add
clc
repnz
nop
nop
jae
add
cli
add
rorl
repnz
nop
nop
jae
or
add
inc
add
push
clc
repnz
nop
nop
jae
xchg
subl
add
add
mov
push
mov
xchg
ret
add
sbb
add
add
jae
jnp
enter
in
leave
nop
jmp
clc
add
mov
add
lcall
repnz
nop
nop
jae
add
push
add
sub
clc
add
add
push
mov
xchg
ret
add
orb
sahf
add
add
add
adc
fld
loopne
clc
repnz
nop
nop
jae
testb
add
add
add
mov
in
fisttps
add
xorb
clc
add
roll
lret
xor
in
leave
nop
jmp
inc
inc
addl
add
inc
adc
addl
and
repnz
nop
nop
jae
add
add
cmp
nop
push
mov
leave
nop
jmp
fildl
adc
add
test
add
call
in
lods
add
add
adc
sub
mov
lret
add
daa
cmp
add
jmp
clc
repnz
nop
nop
jae
inc
xor
test
fisubrl
cmp
push
mov
leave
nop
jmp
sbb
fidivrl
add
add
push
mov
xchg
ret
add
add
add
sub
add
pop
mov
push
mov
xchg
ret
scas
cli
mov
xchg
xor
push
mov
xchg
ret
pop
pushf
add
add
mov
add
add
orb
add
call
lcall
mov
add
cmp
jae
addl
add
xchg
mov
movsl
mov
clc
repnz
nop
nop
jae
push
xchg
add
add
mov
leave
nop
jmp
add
cmp
test
add
mov
nop
push
mov
leave
nop
jmp
add
add
xchg
dec
outsl
xor
clc
repnz
nop
nop
jae
add
add
sbb
scas
test
add
pop
mov
clc
repnz
nop
nop
jae
lcall
addl
and
clc
repnz
nop
nop
jae
daa
dec
add
mov
ljmp
pop
push
clc
repnz
nop
nop
jae
daa
cmp
add
add
shlb
sub
repnz
nop
nop
jae
roll
shlb
xchg
add
pop
pusha
nop
push
mov
leave
nop
jmp
mov
add
add
add
test
daa
mov
clc
repnz
nop
nop
jae
add
add
test
lret
inc
stc
mov
clc
repnz
nop
nop
jae
loop
add
add
lods
cmp
inc
add
add
out
stos
add
imul
cld
nop
nop
jae
xchg
add
xchg
add
clc
repnz
nop
nop
jae
clc
bound
add
xchg
add
push
mov
in
add
inc
xchg
popa
data16
add
cmp
inc
and
push
clc
repnz
nop
nop
jae
addr16
pushf
bound
clc
add
pop
pusha
nop
push
mov
leave
nop
jmp
add
add
xor
add
push
mov
leave
nop
jmp
xchg
add
add
sahf
rclb
icebp
je
clc
repnz
nop
nop
jae
sahf
sub
pushf
adc
add
add
repnz
nop
nop
jae
add
scas
add
xchg
and
repnz
nop
nop
jae
ljmp
add
add
mov
add
add
sbb
add
dec
clc
orl
adcl
jmp
test
add
or
call
repnz
nop
nop
jae
add
jae
add
add
scas
pop
push
mov
xchg
ret
add
add
add
sbb
loopne
roll
stc
clc
repnz
nop
nop
jae
add
add
add
mov
sahf
add
add
pushf
fwait
add
clc
repnz
nop
nop
jae
or
inc
add
add
bound
lret
idiv
mov
mov
mov
repnz
nop
nop
jae
rclb
add
xchg
push
clc
repnz
nop
nop
jae
xchg
xchg
add
test
lods
adc
add
add
gs
clc
repnz
nop
nop
jae
add
test
add
mov
adc
nop
push
mov
leave
nop
jmp
add
add
add
add
mov
xchg
ret
sahf
sahf
mov
adc
or
mov
dec
je
clc
repnz
nop
nop
jae
add
add
inc
daa
mov
push
clc
repnz
nop
nop
jae
add
add
add
jae
call
nop
jae
add
sbb
add
xor
repnz
nop
nop
jae
add
add
add
xchg
sbb
repnz
nop
nop
jae
inc
add
mov
xor
cmp
in
leave
nop
jmp
add
xor
add
jae
add
add
cmp
xorl
nop
push
mov
leave
nop
jmp
daa
fiaddl
xchg
push
xor
add
add
add
add
sbb
push
mov
push
mov
xchg
ret
add
add
ljmp
sub
clc
repnz
nop
nop
jae
sub
rolb
mov
and
add
add
icebp
pop
nop
push
mov
leave
nop
jmp
add
add
add
icebp
inc
dec
es
repnz
nop
nop
jae
xorb
pushf
rolb
jmp
clc
repnz
nop
nop
jae
add
sahf
add
add
cmp
jns
mov
cld
nop
nop
jae
sub
pushf
or
or
add
inc
inc
add
repnz
nop
nop
jae
fildl
mov
lcall
sbb
add
nop
jmp
add
roll
add
mov
cld
nop
nop
jae
rolb
add
lcall
mov
clc
repnz
nop
nop
jae
add
or
xor
mov
mulb
add
clc
repnz
nop
nop
jae
add
jae
mov
add
sarb
push
mov
leave
add
nop
add
add
add
dec
xchg
add
lret
mov
clc
repnz
nop
nop
jae
add
xchg
add
push
mov
xchg
ret
add
shlb
cmp
push
mov
xchg
ret
addb
add
xchg
sbb
or
cmp
repnz
nop
nop
jae
add
loop
testb
andl
nop
nop
jae
test
add
add
shlb
loopne
test
add
add
fiaddl
add
xchg
add
adc
repnz
nop
nop
jae
add
add
add
lods
rclb
loope
clc
repnz
nop
nop
jae
add
ljmp
xchg
push
test
jns
inc
add
xor
add
addl
jge
add
xchg
add
add
xchg
cmp
xor
loopne
add
clc
repnz
nop
nop
jae
mov
sub
inc
add
push
push
mov
xchg
ret
or
addl
addb
add
add
pause
push
mov
leave
nop
jmp
inc
add
out
test
call
repnz
nop
nop
jae
add
mov
add
add
mov
mov
psraw
add
xchg
add
add
add
add
add
push
push
mov
xchg
ret
add
add
xchg
add
sahf
scas
add
or
repnz
nop
nop
jae
inc
lcall
pop
cmp
js
clc
test
add
insb
add
add
and
cld
nop
nop
jae
xchg
add
add
add
xor
push
clc
repnz
nop
nop
jae
add
rolb
add
sub
mov
clc
repnz
nop
nop
jae
add
add
add
addl
xchg
inc
and
repnz
nop
nop
jae
lcall
push
shl
jmp
clc
push
mov
xchg
ret
out
xchg
inc
add
cli
adc
add
bound
test
push
mov
xchg
ret
add
cmp
add
daa
fisubrl
clc
repnz
nop
nop
jae
clc
add
add
inc
add
add
add
add
add
add
clc
repnz
nop
nop
jae
add
sub
add
pop
add
add
sbb
add
nop
jmp
add
xchg
inc
push
inc
nop
push
mov
leave
nop
jmp
add
daa
fildl
ljmp
lods
clc
repnz
nop
nop
jae
or
addb
add
add
lea
clc
repnz
nop
nop
jae
add
add
movl
subl
incl
daa
loopne
xchg
popa
push
push
mov
xchg
ret
add
sahf
add
or
xchg
roll
repnz
nop
nop
jae
inc
add
add
fcmovnbe
jne
clc
repnz
nop
nop
jae
add
add
add
add
mov
clc
repnz
nop
nop
jae
jae
add
add
lcall
nop
nop
jae
sub
add
add
sbbb
repnz
nop
nop
jae
add
add
add
add
xchg
adc
clc
repnz
nop
nop
jae
daa
adc
add
sub
add
and
add
add
xchg
cmpl
leave
nop
jmp
add
add
cmpeqps
clc
repnz
nop
nop
jae
test
add
fcmove
add
add
clc
repnz
nop
nop
jae
add
dec
add
add
enter
add
icebp
pop
push
mov
xchg
ret
add
add
xor
fildl
add
orl
inc
add
lret
clc
bound
pop
roll
add
add
das
call
clc
repnz
nop
nop
jae
lahf
xchg
xor
outsl
add
push
mov
xchg
ret
sub
clc
xchg
xchg
dec
add
test
lret
inc
sub
repnz
nop
nop
jae
add
add
lods
add
mov
fistpl
push
mov
xchg
ret
xchg
xor
mov
scas
stos
fdivrs
in
add
clc
repnz
nop
nop
jae
add
add
add
xorb
cs
imul
add
xchg
xchg
sub
scas
add
push
mov
add
mov
enter
xchg
cmp
add
add
push
mov
test
clc
repnz
nop
nop
jae
xor
daa
add
pop
inc
jmp
mov
xchg
ret
add
add
add
rcl
pushf
lods
test
incl
add
xchg
sbb
fistpl
fcmove
pop
push
nop
push
mov
leave
nop
jmp
mov
xchg
xchg
add
mov
in
jne
clc
repnz
nop
nop
jae
add
or
mov
push
push
mov
xchg
ret
xchg
add
add
xor
rolb
sub
clc
repnz
nop
nop
jae
xor
rolb
es
clc
repnz
nop
nop
jae
lcall
xor
mov
mov
push
mov
xchg
ret
inc
addb
adcb
cmc
add
push
mov
xchg
ret
fiaddl
inc
mov
xor
adc
shr
clc
repnz
nop
nop
jae
out
add
xor
jno
leave
clc
repnz
nop
nop
jae
add
add
pop
push
mov
xchg
ret
add
sarl
jae
inc
rolb
test
xor
sub
cmp
ret
lcall
loop
rolb
xchg
repnz
rcl
test
pop
xchg
inc
add
add
mov
jae
scas
add
add
sub
add
add
clc
repnz
nop
nop
jae
mov
test
daa
xchg
add
mov
clc
repnz
nop
nop
jae
add
xor
add
add
je
clc
repnz
nop
nop
jae
add
xor
push
add
nop
push
mov
leave
nop
jmp
lahf
mov
sub
jmp
inc
add
inc
add
xchg
add
add
add
clc
repnz
nop
nop
jae
add
add
mov
fiaddl
add
repnz
nop
nop
jae
pop
rcrl
mov
or
clc
pop
push
push
mov
xchg
ret
lcall
add
xchg
add
clc
repnz
nop
nop
jae
add
mov
lret
test
xor
mov
add
nop
push
mov
leave
nop
jmp
add
shl
pop
push
mov
xchg
ret
rclb
add
inc
sbb
mov
repnz
nop
nop
jae
xchg
add
add
add
inc
rcr
and
push
mov
leave
nop
jmp
lret
add
andb
jecxz
jge
clc
repnz
nop
nop
jae
add
shlb
ljmp
cmp
add
xchg
cli
mov
add
test
xor
push
pop
mov
add
add
repnz
nop
nop
jae
xchg
inc
enter
xchg
nop
push
mov
leave
nop
jmp
scas
fstpt
xchg
test
js
push
push
mov
xchg
ret
inc
mov
or
add
add
cmp
jmp
add
add
scas
add
inc
mov
mov
daa
cmpl
nop
push
mov
leave
nop
jmp
addb
add
or
push
add
ljmp
adc
repnz
nop
nop
jae
add
add
nop
nop
jae
inc
add
scas
mov
xor
clc
repnz
nop
nop
jae
add
add
add
mov
xchg
ret
addl
add
sub
add
add
add
neg
call
nop
jae
add
sub
add
push
add
test
dec
loope
push
mov
xchg
ret
add
add
int
jge
clc
repnz
nop
nop
jae
xchg
inc
add
add
push
loopne
mov
xchg
ret
roll
test
xchg
lret
add
or
int
ret
add
mov
xchg
ret
add
shrb
add
jae
sbb
xor
incl
inc
xorb
mov
loop
inc
xchg
cmp
push
mov
add
add
add
mov
add
sbb
mov
xchg
ret
mov
cli
add
add
sub
pop
hlt
sbb
les
push
push
mov
add
xlat
add
add
and
add
scas
inc
inc
add
aad
mov
mov
add
push
or
add
add
shlb
cld
nop
nop
jae
add
add
xchg
sahf
lock
call
nop
jmp
lods
add
xchg
pop
dec
add
clc
repnz
nop
nop
jae
xchg
sbb
roll
xor
add
call
push
mov
xchg
ret
loopne
add
roll
add
add
add
add
xchg
fbld
mov
xchg
ret
xchg
add
xchg
add
add
shlb
ss
call
inc
add
push
lret
mov
sub
add
push
mov
leave
nop
jmp
sahf
add
add
inc
mov
sbb
xchg
xor
clc
repnz
nop
nop
jae
ljmp
add
sub
es
add
roll
repnz
nop
nop
jae
test
cli
add
or
lret
daa
add
add
pop
je
clc
repnz
nop
nop
jae
mov
mov
sahf
xchg
fwait
push
mov
xchg
ret
add
lahf
test
add
mov
cmp
loope
inc
add
add
scas
add
add
mov
clc
repnz
nop
nop
jae
cmp
daa
sahf
xor
loop
push
nop
push
mov
leave
nop
jmp
inc
add
and
mov
sub
add
nop
jmp
add
add
add
clc
repnz
nop
nop
jae
mov
add
clc
add
cmp
repnz
nop
nop
jae
or
lods
add
cmp
and
mov
clc
repnz
nop
nop
jae
dec
jae
add
sub
jne
clc
repnz
nop
nop
jae
sub
add
mov
clc
repnz
nop
nop
jae
inc
add
xor
out
orl
mov
inc
add
adc
add
jle
add
sub
loop
mov
xchg
ret
add
add
ljmp
add
jne
clc
repnz
nop
nop
jae
rorb
push
add
push
push
mov
xchg
ret
add
mov
sbb
xor
daa
cmp
add
add
repnz
nop
nop
jae
mov
addr16
add
repnz
nop
nop
jae
add
lcall
xchg
add
add
add
test
nop
push
mov
leave
nop
jmp
add
lret
ljmp
jno
lret
nop
push
mov
leave
nop
jmp
add
add
mov
mov
push
fisttpl
add
repnz
nop
nop
jae
add
sub
add
repnz
nop
nop
jae
add
add
or
add
lcall
pushl
push
mov
xchg
ret
add
add
add
clc
repnz
nop
nop
jae
add
add
rolb
or
push
cmp
clc
repnz
nop
nop
jae
push
testb
in
clc
repnz
nop
nop
jae
pop
cmp
loop
xchg
inc
dec
ljmp
adc
push
jne
add
add
ljmp
aaa
nop
push
mov
leave
nop
jmp
mov
add
cmp
add
test
nop
push
mov
leave
nop
jmp
lahf
bound
xor
pop
scas
ljmp
clc
repnz
nop
nop
jae
testb
xor
fildl
push
popa
clc
repnz
nop
nop
jae
add
add
addb
mov
xor
call
nop
jae
xor
subb
add
call
clc
repnz
nop
nop
jae
push
ljmp
gs
push
mov
xchg
ret
add
add
clc
add
testb
test
jnp
inc
add
lcall
xorl
nop
push
mov
leave
nop
jmp
inc
clc
loop
add
add
shl
clc
repnz
nop
nop
jae
add
add
add
and
roll
repnz
nop
nop
jae
rcrb
add
add
add
mov
clc
repnz
nop
nop
jae
xchg
add
add
add
in
and
add
popa
push
lret
add
add
decb
call
adc
ds
push
add
repnz
nop
nop
jae
add
add
add
test
add
add
mov
push
mov
xchg
ret
scas
add
add
jmp
nop
nop
jae
rclb
add
dec
add
adc
clc
repnz
nop
nop
jae
cmp
mov
mov
push
mov
xchg
ret
add
rclb
loopne
sub
mov
xor
std
movswl
clc
repnz
nop
nop
jae
out
xchg
mov
add
xor
add
repnz
nop
nop
jae
addl
inc
add
add
call
nop
nop
jae
dec
add
add
mov
shrl
nop
push
mov
leave
nop
jmp
pushf
mov
add
push
mov
leave
nop
jmp
add
xchg
lods
or
sbb
xor
mov
leave
nop
jmp
test
test
add
rolb
xor
clc
repnz
nop
nop
jae
cmp
add
add
test
xchg
add
cld
nop
nop
jae
inc
add
sbb
mov
cld
loopne
clc
repnz
nop
nop
jae
test
add
mov
clc
repnz
nop
nop
jae
add
mov
add
pop
lea
add
repnz
nop
nop
jae
add
add
cmp
mov
pop
nop
push
mov
leave
nop
jmp
add
add
lcall
xor
sbb
cld
nop
nop
jae
sub
or
xchg
mov
call
leave
nop
jmp
sar
xor
roll
sbb
xchg
je
clc
repnz
nop
nop
jae
pushf
sbb
add
xor
add
clc
repnz
nop
nop
jae
fidivl
sub
add
add
xchg
push
add
jmp
add
add
add
test
xchg
addb
cs
mov
clc
repnz
nop
nop
jae
xchg
xchg
xchg
add
add
xchg
xor
push
mov
xchg
ret
add
cmp
shrb
add
add
repnz
jle
jb
nop
push
mov
leave
nop
jmp
add
inc
mov
mov
jg
clc
repnz
nop
nop
jae
add
add
mov
nop
push
mov
leave
nop
jmp
add
add
add
add
rep
clc
repnz
nop
nop
jae
scas
add
rolb
xchg
add
test
jbe
jge
inc
push
mov
xchg
ret
add
out
add
clc
repnz
nop
nop
jae
add
test
add
add
andb
rclb
jns
add
test
lahf
mov
add
xchg
jae
add
add
xor
addb
fstpt
add
nop
jmp
add
add
mov
testb
add
add
add
push
push
mov
xchg
ret
test
xchg
imulb
add
add
push
mov
leave
nop
jmp
add
mov
testb
cmp
adc
jmp
add
inc
add
add
adc
daa
xor
mov
cmp
push
mov
leave
nop
jmp
add
add
add
add
mov
add
aas
pop
nop
push
mov
leave
nop
jmp
sub
add
sub
lods
add
cmp
inc
clc
repnz
nop
nop
jae
add
add
test
test
sbb
add
add
fldl
cld
nop
nop
jae
add
add
add
add
add
pop
add
jp,pn
add
add
addr16
shl
mov
call
clc
repnz
nop
nop
jae
cmp
notb
mov
mov
push
mov
xchg
ret
mov
xchg
test
fildl
addb
cli
mov
lret
int
pop
jae
repnz
nop
nop
jae
add
add
add
test
add
add
add
sbb
leave
nop
jmp
mov
add
add
add
sar
repnz
nop
nop
jae
add
mov
add
nop
push
mov
leave
nop
jmp
add
add
jae
xchg
xor
repnz
nop
nop
jae
add
pop
xchg
add
sub
push
mov
leave
nop
jmp
add
pushf
rolb
rcrl
loop
dec
add
mov
mov
xchg
ret
inc
mov
add
add
fildl
or
add
add
js
jne
clc
repnz
nop
nop
jae
cmp
loop
add
push
push
mov
xchg
ret
add
xchg
addr16
add
add
add
push
clc
repnz
nop
nop
jae
orb
mov
add
add
cltd
jmp
test
mov
lods
lods
add
andl
lods
fstl
mov
xchg
ret
daa
neg
lods
test
mov
jae
js
add
fistpl
push
mov
xchg
ret
add
add
clc
add
inc
add
sub
jnp
nop
nop
jae
mov
ljmp
addl
cld
nop
nop
jae
loop
jae
add
test
adc
in
leave
nop
jmp
roll
add
rcl
add
add
mov
adc
mov
xchg
ret
add
add
add
or
addl
clc
repnz
nop
nop
jae
add
subb
mov
or
add
add
xchg
push
push
mov
xchg
ret
add
add
xchg
add
add
ret
push
clc
repnz
nop
nop
jae
mov
add
add
sahf
add
test
push
mov
xchg
ret
add
add
fld1
clc
repnz
nop
nop
jae
add
inc
clc
add
daa
daa
xchg
pop
test
cld
nop
nop
jae
xor
add
add
add
mov
clc
repnz
nop
nop
jae
add
lahf
rolb
xchg
xchg
pop
lea
clc
repnz
nop
nop
jae
add
add
add
repz
mov
xchg
ret
add
test
sahf
fildl
add
add
loop
jnp
dec
imul
nop
jae
adc
add
rolb
mov
xchg
ret
add
add
xor
cmp
repnz
nop
nop
jae
add
test
inc
add
mov
clc
repnz
nop
nop
jae
fidivl
add
fildl
push
shr
clc
repnz
nop
nop
jae
add
add
add
nop
jae
or
sahf
inc
add
add
add
xchg
adc
repnz
nop
nop
jae
add
inc
ljmp
add
clc
repnz
nop
nop
jae
testb
add
add
xchg
insl
je
nop
push
mov
leave
nop
jmp
sbb
fimull
inc
movsl
add
xchg
jle
mov
cld
push
dec
add
fldl
pop
stos
add
xchg
pop
clc
repnz
nop
nop
jae
add
scas
add
add
ljmp
inc
add
daa
add
add
xchg
cmpsb
cmc
add
lock
push
lea
mov
xchg
ret
test
xchg
daa
add
add
mov
add
pop
pop
pop
clc
repnz
nop
nop
jae
add
lret
or
add
dec
xchg
add
push
cltd
call
clc
repnz
nop
nop
jae
clc
or
scas
add
negb
add
nop
push
mov
leave
nop
jmp
dec
add
cmp
bound
sbb
add
filds
mov
dec
add
dec
sarb
pop
add
clc
repnz
nop
nop
jae
add
xor
mov
add
clc
repnz
nop
nop
jae
or
inc
cmp
lahf
pushf
add
fwait
clc
repnz
nop
nop
jae
fucomi
cli
sbb
xor
and
clc
repnz
nop
nop
jae
mov
daa
add
add
add
add
shr
add
clc
repnz
nop
nop
jae
add
addl
add
fistl
mov
xchg
ret
add
orb
add
add
add
incl
add
nop
jmp
add
ljmp
clc
repnz
nop
nop
jae
add
xor
cld
nop
nop
jae
or
add
add
add
add
add
mov
rorl
mov
xchg
ret
xorl
cmp
cmp
std
push
clc
repnz
nop
nop
jae
add
add
pop
xor
clc
repnz
nop
nop
jae
add
add
lods
mov
jge
push
mov
xchg
ret
sahf
mov
xchg
daa
xor
rolb
add
jmp
mov
add
add
add
xor
test
insl
call
clc
repnz
nop
nop
jae
rcrb
test
sbb
add
nop
jmp
shlb
add
add
and
mov
add
add
repnz
nop
nop
jae
fiaddl
add
add
clc
repnz
nop
nop
jae
add
add
stos
nop
push
mov
leave
nop
jmp
add
add
add
mov
push
mov
xchg
ret
add
cli
add
add
add
adc
repnz
nop
nop
jae
add
add
xchg
add
repnz
nop
nop
jae
lcall
pushf
add
add
inc
add
ror
clc
repnz
nop
nop
jae
xchg
add
sbb
js
test
nop
push
mov
leave
nop
jmp
xchg
add
inc
add
add
cwtl
push
dec
add
add
and
add
add
sub
clc
repnz
nop
nop
jae
xchg
add
or
add
repnz
nop
nop
jae
out
xchg
add
cli
or
iret
mov
clc
repnz
nop
nop
jae
dec
xchg
cmp
add
xor
adcl
repnz
nop
nop
jae
lods
xor
gs
clc
repnz
nop
nop
jae
inc
dec
xchg
add
cmp
xchg
rcr
sbb
nop
push
mov
leave
nop
jmp
inc
add
loopne
xchg
fadds
pop
clc
repnz
nop
nop
jae
add
xor
add
add
add
fnstenv
clc
repnz
nop
nop
jae
inc
mov
out
loopne
lea
clc
repnz
nop
nop
jae
add
add
daa
popa
xor
clc
repnz
nop
nop
jae
add
add
add
jecxz
subb
clc
repnz
nop
nop
jae
xorb
jae
loop
pop
in
fcompl
call
nop
jmp
loop
add
add
add
subl
push
mov
xchg
ret
add
fistl
sbb
clc
repnz
nop
nop
jae
add
xchg
scas
mov
jae
cmp
insb
inc
add
sbb
dec
addb
add
xchg
pop
mov
clc
repnz
nop
nop
jae
add
add
mov
mov
xchg
ret
add
add
add
pushf
add
cmp
add
into
xchg
stos
push
mov
xchg
ret
xor
ror
lcall
in
clc
repnz
nop
nop
jae
xor
add
adc
repnz
nop
nop
jae
shrl
bound
add
push
mov
leave
nop
jmp
add
add
add
add
inc
add
add
xchg
jle
push
decl
clc
repnz
nop
nop
jae
mov
xor
inc
pop
clc
repnz
nop
nop
jae
add
add
add
add
add
out
inc
add
add
add
xchg
call
nop
jmp
lcall
lock
xchg
push
mov
xchg
add
add
add
add
add
push
mov
add
xchg
aas
add
add
stos
add
add
add
add
push
rorl
cld
nop
nop
jae
add
mov
add
mov
xor
repnz
nop
nop
jae
lahf
add
add
lret
add
data16
fistpl
clc
repnz
nop
nop
jae
mov
lahf
jae
xchg
cli
push
sub
clc
repnz
nop
nop
jae
cmp
xchg
xchg
mov
add
mov
xchg
ret
mov
ljmp
jno
clc
repnz
nop
nop
jae
add
add
add
adc
push
dec
add
add
orl
nop
jmp
xchg
sub
add
cli
fwait
add
clc
repnz
nop
nop
jae
add
add
or
cli
loopne
mov
nop
push
mov
leave
nop
jmp
xchg
pushf
out
or
loopne
loop
add
clc
repnz
nop
nop
jae
loop
test
add
sahf
mov
add
push
mov
xchg
ret
bound
add
xchg
adc
xchg
mov
add
add
add
add
mov
nop
nop
jae
add
add
lahf
rcr
mov
cmp
mov
clc
repnz
nop
nop
jae
add
pop
xchg
add
clc
repnz
nop
nop
jae
add
push
xchg
fiaddl
sbb
stos
in
sti
clc
repnz
nop
nop
jae
mov
xchg
mov
jnp
dec
push
clc
repnz
nop
nop
jae
mov
rolb
or
test
repnz
nop
nop
jae
daa
or
loop
add
add
add
sub
ljmp
push
mov
xchg
ret
jae
ljmp
addb
lods
push
inc
clc
repnz
nop
nop
jae
push
add
fldt
cmp
push
push
mov
xchg
ret
lods
xchg
mov
sub
inc
xchg
loop
add
push
push
mov
xchg
ret
add
add
mov
add
push
push
clc
repnz
nop
nop
jae
sub
testb
adc
add
pushf
mov
scas
pop
push
mov
xchg
ret
dec
clc
add
add
xor
mov
fmull
add
add
repnz
nop
nop
jae
mov
cli
add
repz
clc
repnz
nop
nop
jae
add
mov
add
mov
push
mov
xchg
ret
add
xor
rolb
add
xor
clc
repnz
nop
nop
jae
pushf
add
test
add
shlb
add
orl
clc
repnz
nop
nop
jae
mov
test
add
add
out
pop
call
nop
jmp
add
test
add
xchg
or
clc
push
mov
xchg
ret
inc
jae
lret
add
add
roll
rolb
stos
lods
push
mov
xchg
ret
add
add
fimull
xchg
add
divb
call
nop
jmp
test
and
insl
push
mov
add
add
push
clc
add
mov
xchg
ja
mov
ljmp
sbb
add
push
and
pop
push
cmp
mov
lret
xchg
fldt
repnz
sbb
add
and
mov
add
xchg
cmp
stos
push
lret
xor
adc
mov
mov
and
iret
cmp
mov
ds
jno
cmp
inc
ljmp
dec
pop
das
test
ret
and
insb
add
test
mov
add
push
rcrl
mov
add
add
add
add
add
std
dec
xor
in
dec
cmp
cmc
loop
imul
add
cltd
shl
pop
inc
add
test
jo
shr
mov
loope
jecxz
aad
int
cmc
and
add
add
add
sub
movsb
cmp
sbb
out
add
icebp
inc
test
roll
scas
cmp
add
lcall
fwait
xchg
sti
ss
push
fcompl
in
lea
add
mov
insl
je
cmpsl
rolb
mov
dec
daa
lea
push
test
stos
aad
icebp
xchg
mov
adc
add
test
push
outsb
jecxz
in
cmpsb
xor
in
push
ljmp
push
jo
or
adc
add
into
out
dec
sub
add
mov
pop
aam
xchg
enter
cltd
lock
mov
cmp
dec
lock
movsb
cmpsl
mov
and
cmp
add
add
and
mov
xchg
or
jecxz
test
test
mov
addb
xor
pop
inc
mov
dec
mov
mov
pop
jo,pt
insl
das
mov
mov
xchg
lret
sub
add
out
xor
fsubrl
add
mov
and
mov
int3
jp,pt
cli
incl
fldenv
fimuls
jmp
andl
or
add
add
fcomps
sub
add
add
mov
mov
shll
add
loope
insb
add
add
sahf
adc
and
mull
add
add
sub
outsl
inc
add
add
adc
mov
cld
popf
rorb
in
mov
add
sbb
dec
add
push
nop
add
out
mov
push
in
or
add
add
adc
sub
add
add
mov
rol
jecxz
int
add
add
arpl
push
add
mov
sub
add
add
mov
faddl
push
cmpsb
ret
mov
lds
add
add
xlat
dec
push
jb
jbe
sbb
pop
je
xor
add
ficompl
pop
out
or
mov
add
add
add
add
add
cs
divl
add
xchg
xlat
jmp
add
push
mov
pop
inc
jl
jecxz
test
mov
lock
add
sarl
add
add
add
clc
sbb
add
add
adc
cmp
mov
add
push
and
add
add
xchg
or
mov
sub
fisubs
add
mov
mov
inc
ret
notb
adc
cli
pop
lret
jne
mov
add
add
add
add
push
push
int
jl
xor
cwtl
shlb
test
inc
sub
mov
add
daa
daa
xor
rcrb
cli
inc
sar
cmpsl
rcrl
lret
push
into
push
mov
xor
mov
ljmp
outsb
xor
dec
fildl
imul
add
dec
add
push
lods
adcl
dec
add
add
sahf
sti
push
cmc
ret
sti
cmp
pop
xlat
lcall
add
mov
mov
sti
adcl
out
loop
add
pop
stos
cmp
cs
rolb
mov
mov
enter
daa
inc
sub
pop
insl
push
jge
outsl
and
add
aas
jne
sbb
and
mov
in
repnz
fisttpl
add
mov
pop
lods
clc
jns
ficoml
mov
xchg
stos
or
sub
add
mov
add
add
lret
adc
stc
aad
mov
dec
js
call
add
cmp
mov
pushf
inc
andb
add
jmp
fsubrs
flds
mov
es
or
mov
mov
add
arpl
dec
pop
scas
xchg
lret
dec
mov
add
jecxz
rolb
mov
orb
cmp
sub
icebp
xor
add
outsb
cmpsb
pop
stos
decl
and
add
sti
xchg
sbbl
out
es
push
xchg
jge
jl
outsl
lds
or
test
adcl
mov
mov
inc
sub
push
lods
shlb
les
push
xor
ja
mulb
and
testl
xor
mov
add
add
add
insb
add
add
jae
pop
cmp
sbb
into
mov
add
add
out
mov
add
add
xchg
push
sbb
pop
js
add
add
outsb
jp
pop
sub
push
add
mov
sub
add
add
jnp
test
int3
les
fdivs
sahf
mov
add
add
adc
push
into
pop
xadd
mov
mov
cmp
add
arpl
add
movsb
lret
add
clc
mov
mov
ds
or
add
add
inc
ljmp
filds
and
pop
clc
inc
bound
push
lret
mov
fnstcw
ret
bound
ds
cmp
add
fcmovu
jmp
sub
pop
add
add
call
add
jbe
dec
jo
cmp
inc
add
jae
pushf
aas
cmp
addr16
add
add
lods
mov
incb
mov
andl
add
add
sarl
out
jle
lods
insb
add
add
xchg
push
in
popf
cli
shrl
sbb
jge
jnp
loop
mov
incl
int
add
add
incl
add
jg
js
sbb
cwtl
adc
lds
mov
sti
scas
inc
add
add
add
add
add
fnstenv
add
ud2
subb
cli
rorb
mov
xor
add
add
cmpsb
lock
xchg
add
cmpsb
mov
sbbl
inc
cmp
add
add
int3
pushf
mov
add
aad
sbb
add
add
mov
shr
jne
enter
add
mov
data16
jmp
mov
call
push
pop
cld
fst
pop
pop
movsl
lret
lea
call
dec
add
add
insb
add
shrb
add
pop
cld
shl
lock
dec
add
add
adc
add
mov
lods
inc
add
add
pop
ss
add
add
imul
dec
add
outsb
addb
fdivp
dec
add
add
add
in
sub
add
add
add
inc
roll
mov
xor
mov
add
add
pop
add
fsubrs
insl
je
push
clc
negb
lcall
mov
cmovnp
imull
lahf
xor
js
adc
mov
mov
xchg
gs
jne
push
insl
and
add
add
es
repnz
jbe
mov
lahf
dec
and
jno
sub
add
xor
mov
xor
cmpsl
push
scas
jns
repnz
imul
sbb
cmpsl
in
mov
adc
scas
enter
pushf
xchg
xor
int3
aaa
push
xor
je
popf
inc
mov
add
loop,pn
sbb
adc
mov
pop
cmpsb
inc
add
push
je
in
inc
pusha
add
add
dec
add
mov
adc
sub
and
add
add
in
push
and
inc
add
pop
xchg
adc
inc
loopne
push
daa
mov
ret
mov
inc
rorb
add
imul
or
mov
adc
mov
jbe
push
loopne
mov
add
sbb
add
add
mov
add
add
push
jne
push
pop
sub
mov
adc
out
iret
loopne
mov
inc
repnz
notb
sarb
sbb
int3
pushf
adc
sub
daa
push
in
mov
xchg
sbb
adc
sbb
xchg
add
insb
add
add
jnp
sbb
fadds
sbb
faddl
push
xchg
xchg
sahf
mov
int
test
add
add
xchg
jbe
roll
push
popf
icebp
sbb
sahf
dec
add
add
in
loop
scas
scas
lea
add
add
add
add
scas
mov
mov
sbb
add
xchg
lcall
in
outsb
lcall
mov
ret
cs
ret
movsl
mov
adc
cs
dec
add
add
pusha
add
add
push
bound
in
pop
xor
mov
add
mov
mov
sbb
jb
adc
sub
inc
add
pop
rorb
add
icebp
and
and
rorb
add
test
pop
pop
cld
repz
mov
sbb
dec
movsb
fstps
pop
xor
add
cmc
inc
mov
into
sbb
ret
out
mov
loop
jae
shll
mov
int3
pop
mov
stos
clc
mov
imul
xchg
in
cmpsl
cld
mov
mov
add
mov
push
dec
mov
pop
push
call
add
mov
movsb
xchg
or
dec
or
add
add
shrl
adc
jecxz
out
popa
mov
jae
and
ficompl
mov
push
and
add
add
std
and
ror
xchg
pop
int3
shlb
mov
push
mov
fwait
jmp
cmpsl
sbb
hlt
mov
mov
xor
add
ret
add
add
xchg
add
add
or
mov
insb
add
add
xor
add
out
cwtl
push
mov
add
add
dec
add
add
imul
cmp
mov
jle
scas
mov
scas
adc
mov
repnz
jno
cmp
sub
jbe
sbb
aaa
loope
sti
add
or
mov
inc
pop
or
or
add
dec
adc
stos
in
dec
fcompp
jo
imul
cmp
add
xor
pop
out
mov
add
add
cli
arpl
out
pop
adc
add
inc
loope
sub
mov
test
add
pop
push
pusha
add
add
add
dec
add
inc
aad
es
imul
add
stos
adc
mov
aam
fnstenv
clc
mov
mov
ljmp
adcb
mov
jmp
mov
add
mov
add
jp
push
hlt
cmp
out
shll
add
add
sti
insl
stc
ret
das
mov
fsub
adc
sbb
cltd
adc
testl
adc
and
add
add
sub
cmp
psraw
cmpb
or
sbb
pusha
add
add
popf
lahf
push
ret
xchg
xchg
and
mov
or
add
add
jg
ret
pop
sbb
pop
or
add
add
lods
lea
repz
arpl
loope
jecxz
shrb
add
cld
add
lcall
out
test
lahf
xor
js
dec
inc
mov
pop
inc
xor
mov
popa
adc
pop
and
add
add
add
pop
ss
mov
mov
ja
int3
adc
pop
jo
jmp
pop
clc
xor
add
scas
lds
test
sbb
mov
dec
popa
or
mov
cli
test
mov
or
cmp
push
pop
jg
push
loop
jae
pop
in
adc
loop
pop
cmovno
repnz
movl
mov
jne
std
adc
add
add
inc
adc
imul
sub
mov
in
jle
fcoms
add
jbe
pushf
shll
in
andb
add
add
mov
in
cmp
add
mov
mov
int3
fdivs
jae
xor
popa
ror
rolb
mov
sub
push
mov
or
mov
mov
xchg
pop
cmp
push
cld
dec
and
movsl
cs
pop
dec
cmp
lds
cmc
stos
add
add
loopne
pop
mov
inc
mov
add
mov
push
push
cwtl
add
inc
add
add
clc
enter
add
add
jl
cmc
xor
pop
mov
jg
inc
add
rorl
outsl
mov
sete
aaa
add
dec
add
add
pop
enter
xchg
push
or
dec
add
add
and
mov
pusha
add
add
add
test
sbb
fbld
das
pushf
fstl
pop
pop
insl
fwait
and
mov
dec
xor
std
sub
stos
mov
popf
mov
add
mov
add
mov
pop
adc
notl
mov
mov
outsl
ret
and
iret
daa
jge
addr16
loop,pt
or
in
outsl
dec
pushf
push
mov
test
scas
lcall
add
add
jmp
add
shlb
test
mov
xchg
push
jo
or
mov
inc
xchg
mov
pop
xchg
cld
sbbl
jmp
pop
mov
push
mov
mov
add
add
jno
int
pop
in
daa
jmp
mov
mov
add
add
add
add
lea
add
cmc
push
xor
jmp
ja
xor
mov
lret
test
push
test
mov
pop
xchg
adc
push
scas
cmp
add
xor
mov
sarl
xor
mov
add
xchg
out
lea
mov
add
add
cld
add
add
add
xchg
jbe
pop
int3
sub
mov
mov
cwtl
jno
aaa
ret
push
sub
inc
mov
and
add
or
or
fsubr
popf
int3
xor
pop
dec
add
add
inc
mov
cmc
insb
add
lcall
sbb
and
hlt
and
or
add
add
add
xchg
or
inc
int
aad
das
arpl
aas
repnz
inc
xor
inc
arpl
xchg
sti
cmc
test
nop
mov
cmp
daa
add
test
add
adc
out
ret
sbb
xchg
pop
mov
add
stc
xchg
mov
les
push
scas
or
add
pop
in
push
pop
add
xchg
les
mov
rolb
fdivrs
movsl
push
lds
icebp
jge
push
out
test
movsl
add
mov
data16
lea
cmp
sbb
fidivrs
push
xor
or
add
xlat
mov
mov
pop
ds
aas
push
push
rorb
icebp
sahf
mov
add
add
add
int3
jno
imul
leave
das
or
test
push
icebp
xchg
loope
inc
ret
rcll
add
add
add
xor
add
add
lret
cmp
mov
push
inc
add
mov
push
mov
add
rclb
cmp
push
shrl
test
add
xorl
lods
mov
or
mov
lock
imul
movhps
or
cmp
ss
sbb
mov
dec
mov
or
mov
addb
add
add
ja
bound
lods
faddl
pop
pusha
add
xlat
and
jle
adc
mov
jecxz
out
sahf
clc
jmp
push
in
ds
addr16
rolb
inc
add
add
add
jle
test
jecxz
jne
push
mov
and
mov
add
mov
adc
add
add
jmp
dec
dec
outsb
int3
sub
mov
call
add
inc
add
add
aad
mov
cltd
cli
xor
sub
add
add
cmp
popf
xchg
xchg
xchg
push
pop
jnp
pop
xchg
add
sbb
imul
inc
inc
mov
out
rclb
addl
add
movsl
ljmp
mov
subb
fadd
inc
das
xor
into
sarl
daa
ret
jo
fdivl
hlt
rcrb
jb
add
add
outsl
or
add
add
std
icebp
std
mov
and
mov
add
les
mov
sub
add
add
rcll
adc
cmp
mov
mov
adc
cmp
add
sub
add
add
mov
test
cs
mov
mov
cs
insb
add
and
mov
dec
and
add
add
add
or
add
add
fisubl
jmp
or
jae
js
cltd
imul
mov
rorb
xchg
lds
xchg
int
add
add
jae
lcall
mov
jl
loopne
in
lock
and
add
add
add
pop
push
push
add
jae
in
sbb
cmp
test
mov
adcb
xadd
push
jb
xor
add
lods
push
mov
nop
pop
mov
pop
aas
clc
adc
and
dec
addr16
loopne
jae
jg
sarb
sbb
mov
xchg
mov
fidivs
add
add
fstpt
jb
xchg
out
mov
or
aam
add
add
lret
inc
es
cltd
in
das
fwait
mov
cld
pusha
add
mov
sarb
add
mov
loope
xchg
push
push
xchg
bound
std
in
xchg
xor
sbb
cmp
mov
fidivl
add
fsts
mov
std
adc
pushl
and
add
add
inc
xor
in
push
inc
adc
fcoms
mov
add
add
add
pop
xchg
sub
ss
push
mov
jne
jmp
or
loop
and
add
add
lret
push
sbb
inc
push
inc
add
ljmp
loopne
cmpsb
int3
xor
push
push
sub
add
add
lea
pusha
add
shlb
adc
repnz
ja
outsl
pop
lods
enter
mov
mov
adcl
add
cmc
mov
add
enter
jnp
pop
mov
div
pop
hlt
ja
push
xor
dec
das
add
cld
cmp
arpl
test
shll
sbb
outsl
mov
stc
xchg
ljmp
out
or
sbb
insb
add
add
clc
lea
add
dec
jno
inc
ficompl
add
add
add
lock
add
adc
jbe
jne
or
mov
out
pop
push
pop
ret
in
jne
arpl
dec
dec
mov
push
icebp
mov
add
mov
pop
or
jbe
out
add
lods
fwait
xor
enter
jmp
dec
adc
sahf
test
adc
xor
xlat
cmp
mov
cmpsl
cli
addr16
xor
fsub
cmp
mov
test
add
adc
cmp
pop
aad
jbe
int3
jnp
adc
stos
adc
add
add
mov
mov
rcl
jp
lods
aaa
out
rcrb
push
pop
es
movsb
in
std
xchg
push
add
mov
ds
dec
movsl
lds
hlt
js
cmp
sbb
daa
cs
or
ss
sbb
es
add
add
jae
into
ret
fdiv
js
sub
cmp
outsl
xor
loopne
xchg
inc
add
add
add
inc
addr16
mov
adc
add
scas
ds
cltd
stos
or
push
clc
fcomps
mov
xor
mov
add
fstpl
stc
add
xor
rcr
xor
es
ds
and
add
add
add
movsl
xchg
and
add
add
add
mov
les
jmp
cmc
mov
leave
inc
add
pop
pusha
add
add
outsl
lea
mov
mov
add
lods
es
outsb
adc
mov
push
sti
add
loopne
ret
xchg
jbe
test
outsb
insl
dec
add
add
iret
jns
jns
mov
movsl
stc
push
mov
add
into
inc
xor
shrl
xorl
mov
sbb
jp
pop
add
mov
icebp
pop
dec
xor
mov
test
dec
pusha
add
add
or
add
add
js
nop
sbb
out
cmpsl
sbb
imull
test
inc
jae
pop
sar
and
add
test
dec
add
add
test
xor
push
push
ret
inc
or
add
add
pop
xlat
push
in
inc
mov
orb
imul
aad
mov
and
add
and
add
add
xor
test
cwtl
push
out
add
lret
add
xchg
jg
rclb
sarb
inc
add
add
ss
data16
and
mov
pop
mov
dec
enter
popa
into
pop
clc
push
jp
clc
dec
xor
push
insl
mov
sub
add
add
shrl
pop
add
rorl
lret
gs
dec
test
mov
movsb
mov
imul
add
add
add
leave
adc
mov
imull
add
add
mov
jne
and
das
lds
jno
add
add
std
and
shll
jne
leave
fidivrl
jmp
adc
pusha
add
and
add
add
js
jno
rorb
add
xchg
add
and
add
add
fcompl
add
add
aas
pushf
pushf
out
and
add
add
add
add
xor
sbb
test
je
add
add
sub
mov
js
insl
push
xor
rcrl
leave
nop
outsb
cmp
push
xor
jecxz
mov
pop
pop
scas
dec
add
add
mov
push
push
ds
or
add
add
lret
loopne
mov
pop
fiaddl
add
jnp
rol
or
mov
jno
add
cs
sti
aas
pop
jo
loop
in
or
add
mov
inc
jmp
test
repnz
sti
sbb
sbb
sbb
scas
leave
pop
inc
xchg
inc
add
xchg
inc
add
inc
push
push
rorl
je
aad
leave
dec
movsb
std
xor
jmp
mov
inc
add
add
adc
xlat
enter
rorl
mov
lods
jnp
sbb
jmp
dec
test
test
xor
call
sub
add
add
cltd
mov
jp
adc
fwait
sarl
dec
pop
and
xchg
add
test
in
jg
sub
push
xchg
notb
jle
repnz
mov
add
dec
test
xor
mov
dec
and
mov
dec
add
cmp
mov
cmp
outsl
stc
pop
mov
mov
out
jnp
mov
push
out
fnstsw
add
js
mov
jne
sbb
add
add
or
mov
bound
sbb
icebp
push
xor
aaa
mov
stos
or
fidivl
add
add
stc
dec
add
add
out
clc
mov
add
add
loope
les
jns
add
add
aaa
imul
jne
add
mov
xor
push
insl
lds
jle
or
add
add
pop
or
lret
js
icebp
arpl
mov
add
add
add
sbb
nop
test
lods
out
sbb
dec
add
add
pop
adc
pusha
add
fwait
dec
pop
data16
lds
mov
mov
nop
lods
ss
test
inc
cmp
or
add
add
cmp
add
gs
xchg
sub
mov
mov
ljmp
add
xor
jle
loop
mov
pop
repz
sbb
movsb
loopne
adc
je
outsl
cmpsl
mov
jg
xor
mov
mov
add
mov
mov
add
or
out
jmp
push
lock
out
and
add
add
or
push
pop
fcoms
adc
push
out
clc
and
mov
adc
nop
scas
loope
popf
and
add
add
orl
add
adc
and
add
add
add
pushf
lea
add
mov
add
pop
das
test
add
add
inc
test
push
mov
fsubs
pop
shrb
test
mov
add
add
mov
add
add
lods
and
cmp
popa
ds
bound
add
add
mov
jecxz
ret
add
mov
ret
fldl
add
add
mov
cld
in
mov
dec
lcall
add
add
add
inc
add
add
xchg
mov
ficoms
jnp
jg
add
add
add
add
add
cmp
add
xchg
movsb
lret
adc
adc
add
daa
mov
sbb
xchg
dec
aas
push
jmp
xchg
rclb
push
pop
movsb
pop
sbb
add
add
add
sub
std
outsb
cmp
inc
add
add
xor
add
inc
int3
add
mov
outsl
rclb
out
movsb
mov
dec
adc
scas
pop
clc
andb
imul
add
addr16
jnp
les
jbe
jns
imul
ficoml
cmp
sbb
enter
loop
pushf
mov
fisttpl
insb
add
add
xchg
shll
stos
xor
add
add
add
mov
add
add
add
jmp
shlb
shl
jo
cli
clc
pop
adc
xor
add
or
cmp
fsub
sub
add
add
add
lock
ret
mov
mov
add
lods
xchg
cmp
add
mov
push
cmp
data16
es
pusha
add
add
adc
add
cmc
pop
or
mov
bound
xor
xor
outsl
inc
imul
add
mov
add
xchg
mov
add
add
cmc
cmpsl
push
cvtdq2ps
add
add
or
cs
xchg
mov
or
add
add
mov
mov
fmulp
mov
mov
enter
mov
adc
scas
push
pop
and
xor
sbb
int
adc
mov
adc
add
add
mov
cmp
mov
lods
and
rorb
xor
add
call
push
or
add
add
addb
pop
pop
scas
or
mov
push
push
mov
in
sbb
insl
mov
cmp
pop
jmp
ret
pop
adc
jbe
and
pop
out
xorb
sti
mov
cmpsb
pop
and
cltd
push
or
out
hlt
lgs
add
mov
push
pop
pop
cmp
cmp
popa
mov
dec
sbb
add
mov
sbb
dec
lock
movsl
push
sbb
mov
add
add
jo
mov
cmp
add
sbb
pop
aad
push
dec
jne
test
data16
iret
xchg
cwtl
into
jmp
add
aad
add
add
movsb
pop
int
imul
xor
repnz
adc
loope
add
add
sbb
nop
enter
or
mov
fwait
pop
hlt
add
add
rcrb
inc
dec
add
mov
cmp
xor
add
add
orl
lods
loopne
mov
add
add
sbb
add
or
xchg
xchg
imul
in
sahf
inc
xchg
or
cmp
ret
jbe
push
cmpl
xchg
gs
mov
mov
dec
mov
cmp
mov
xor
inc
add
cmp
wbinvd
mov
das
inc
add
add
outsl
add
add
add
cmp
add
jecxz
lods
inc
jno
mov
cmp
add
ja
sbb
and
sbb
pop
cmp
cs
mov
shr
sbb
mov
xchg
bound
int3
inc
add
sub
mov
dec
lock
jg
testl
call
mov
add
add
cmpsb
ljmp
mov
add
sbb
les
imul
iret
xchg
addr16
push
loopne
cmpsl
jecxz
daa
mov
dec
inc
pop
mov
add
stc
fidivrs
dec
push
test
and
add
add
clc
mov
xor
popf
push
xor
add
mov
and
add
add
add
sbb
incl
sub
add
add
or
mov
add
add
add
add
out
ficomps
sub
mov
clc
outsl
push
les
add
push
sbb
cwtl
ss
add
add
mov
xchg
or
fistl
add
jbe
xor
push
lods
mov
mov
pusha
add
add
loopne
mov
mov
shrb
jecxz
fiadds
pop
add
std
xor
sbb
cmpsl
adc
sub
mov
add
add
mov
add
add
in
mov
add
movsb
xchg
sahf
xchg
sarb
mov
add
rorb
lods
pop
lds
mov
out
sbb
add
mov
out
subb
pop
std
add
mov
mov
les
pop
jmp
sbb
add
ljmp
add
add
ja
ss
xor
and
adc
add
add
repnz
jecxz
mov
mov
in
dec
add
add
add
and
add
add
loopne
mov
mov
int3
add
shrl
mov
add
add
add
add
sub
jb
cli
inc
add
jle
add
push
inc
sub
inc
add
add
stos
inc
sbb
add
add
sbbl
push
xor
mov
pop
hlt
add
scas
inc
lret
push
in
mov
jle
mov
mov
lcall
roll
lods
std
xor
out
inc
add
enter
daa
out
insw
inc
lds
xchg
rol
aam
and
add
add
add
loope
or
mov
lods
cwtl
cs
add
cmp
bound
add
add
pop
or
add
add
add
sbb
add
aam
push
push
xlat
out
xor
add
je
shlb
and
add
add
mov
push
lret
add
add
testl
and
add
add
cli
mov
dec
and
mov
orl
add
add
sub
add
add
add
add
add
or
sbb
add
mov
and
mov
add
icebp
push
cmpsb
fidivrl
sbb
add
pop
adcb
mov
sbb
xor
add
cs
and
mov
dec
cmpsb
push
adc
add
add
add
add
cmpsb
push
scas
xchg
cli
jmp
xchg
mov
ret
mov
pushf
cld
add
mov
cwtl
push
test
push
or
add
add
lcall
mov
test
and
push
adc
xor
scas
sub
mov
iret
sbb
lods
enter
and
dec
add
add
mov
xchg
mov
pop
mov
add
rcll
jecxz
sbb
orb
and
or
mov
push
cwtl
or
jne
outsl
and
push
in
xor
add
shll
add
mov
roll
lock
cmc
ja
push
jne
sub
push
dec
inc
add
lods
mov
add
xchg
add
daa
fwait
jnp
push
adc
mov
mov
lods
or
mov
inc
loope
add
add
call
and
push
xor
add
add
add
ficoms
mov
and
add
add
imul
mov
arpl
push
and
xor
or
rol
cmc
in
dec
add
add
aas
pop
inc
loop
fistpll
mov
add
mov
sahf
dec
add
pusha
add
add
sbb
inc
jbe
in
inc
add
add
jne
gs
movb
add
stos
sahf
sbb
add
add
add
js
loope
pushf
mov
xchg
ret
ljmp
mov
bound
pushf
xorl
cmp
les
jns
xchg
lods
iret
and
add
add
enter
add
add
lea
inc
jo
cmp
fcoms
adcl
add
sahf
fstps
add
add
jae
stos
mov
rcll
icebp
xchg
std
scas
dec
es
cwtl
adc
adc
repnz
sbb
cli
xor
mov
sub
pop
mov
mov
das
setbe
jmp
sbb
js
aam
dec
add
add
mov
inc
add
adc
leave
enter
pop
xchg
pop
sbb
mov
adc
iret
push
xchg
dec
dec
loop
push
mov
popa
lcall
mov
pop
inc
daa
inc
test
jnp
enter
lods
mov
add
sti
lret
mov
inc
daa
cmp
loope
mov
pusha
add
add
decl
call
popf
hlt
std
cld
imul
lea
xchg
mov
add
add
sbbb
dec
mov
jnp
add
jno
enter
stos
add
mov
add
inc
push
ss
gs
testl
test
xor
add
add
ret
adc
add
add
add
xchg
jge
pusha
add
add
sbb
xor
push
clc
push
pop
outsb
xchg
push
lret
adc
add
jbe
xor
bound
xlat
sub
cmpsl
add
add
call
mov
add
jl
mov
pop
loop
fstl
add
add
das
sti
movb
nop
jne
pop
push
div
push
mov
mov
mov
ss
movl
dec
sub
add
add
ljmp
pop
movsl
fstl
sub
test
sub
xchg
jbe
add
add
dec
les
add
mov
data16
jne
add
loopne
cld
rol
xchg
mov
hlt
sti
testl
cmp
push
adc
mov
xchg
stos
dec
jg
and
rorb
add
xor
adc
sub
fcompl
push
cltd
ds
das
insl
mov
add
add
add
mov
add
divl
add
add
xchg
jae,pn
imul
out
addr16
dec
xchg
adc
add
jns
sub
int
out
mov
ret
daa
das
leave
lock
pop
add
fcomps
outsl
push
pop
sub
mov
sbbl
test
add
add
jb
idivb
sub
push
addr16
pushf
sbbl
sub
add
add
stc
and
push
adc
lea
clc
addl
xchg
loopne
je
mov
push
jnp
xchg
add
add
add
xchg
sbb
ret
int3
adc
insl
xchg
dec
into
sbb
pop
nop
mov
movsl
and
add
add
dec
add
add
and
lods
jno
push
and
add
add
je
jge
lea
or
mov
sbbb
mov
inc
add
rcll
dec
pop
push
sti
sub
imul
ret
in
pop
xor
add
testl
ror
sbb
sahf
sbb
sbbb
jnp
push
adc
inc
aaa
sub
jne
inc
push
inc
push
pop
or
add
lds
mov
aam
add
mov
imul
add
add
ss
mov
sub
and
arpl
cmpsl
nop
rcl
scas
or
loop
add
add
add
movsl
cld
es
inc
jnp
inc
add
add
jp
add
add
or
mov
mov
jbe
mov
je
ret
add
inc
and
add
add
pusha
add
mov
inc
and
add
add
add
add
inc
add
add
jns
jne
cmp
add
add
nop
sbb
add
daa
pop
les
add
add
fwait
add
mov
jae
add
dec
add
add
icebp
pop
ud1
inc
xchg
dec
dec
or
and
add
add
cli
add
add
xor
sarb
add
add
inc
fsts
push
adc
nop
enter
cmpps
adc
add
add
incl
add
imul
ret
xor
cmp
add
or
or
xor
dec
add
add
movsl
dec
sub
or
mov
mov
ret
out
mov
jecxz
mov
push
jbe
dec
pop
out
call
pop
hlt
mov
add
add
rcrl
pop
add
mov
fcomps
sahf
jno
cmp
push
stos
push
ljmp
jg
shlb
push
mov
sbb
jp
mov
dec
repz
add
add
add
add
add
add
test
jbe
add
or
add
add
add
stos
shll
ss
cli
or
add
add
mov
xchg
fcoms
add
loope
insb
add
add
adc
mov
and
xchg
adc
add
test
cmp
out
cmpsb
jae
or
sbb
mov
cmp
repz
add
add
je
add
mov
cwtl
jae
pop
mov
or
add
fisttpl
mov
rcl
jmp
add
add
inc
popa
sub
in
pop
mov
or
popa
ret
mov
or
nop
xchg
sbb
ror
add
add
add
sbb
xor
add
cmp
imul
iret
sub
mov
icebp
int3
ja
dec
cmpsb
hlt
sar
pop
sbbb
fsubrs
add
ja
loopne
int3
push
repz
clc
pop
ss
adc
lret
add
sbb
xchg
cwtl
jp
inc
in
mov
and
add
pop
xor
pop
daa
jne
mov
js
adc
push
push
in
adc
dec
pusha
add
or
sub
mov
int
jne
int3
mov
or
add
add
cltd
xlat
stos
test
mov
stc
add
int
jge
out
cmp
add
test
add
dec
mov
jg
dec
test
push
mov
mov
sti
adc
sub
jp
arpl
adc
popf
sub
mov
mov
fnsave
mov
adc
adc
imul
inc
mov
xchg
xchg
cmp
mov
ret
iret
inc
xchg
xchg
int3
xchg
test
pop
fwait
cmpsl
sub
in
mov
add
cwtl
outsb
mov
push
xor
or
cmp
push
add
add
add
and
mov
add
add
add
and
inc
lret
jb
add
inc
dec
fcomi
push
xor
cld
push
xor
or
add
add
cltd
push
xchg
stc
pop
testl
lock
add
mov
xchg
out
aad
test
sub
arpl
ljmp
add
inc
pop
mov
jg
jle
mov
add
pop
sbb
bound
push
cmc
push
cs
add
push
loopne
outsb
jmp
pop
or
mov
sbb
out
push
es
js
push
mov
and
mov
test
sahf
iret
jp
add
mov
pop
jo
pop
nop
loop
inc
add
add
cmp
add
rcrl
in
dec
mov
inc
add
in
xchg
into
pop
arpl
mov
sub
adc
cmpb
adc
pop
xchg
sar
push
div
push
pop
mov
aad
lret
add
or
xchg
inc
in
lods
popf
repnz
dec
xor
ret
add
mov
push
xchg
add
pop
cmp
ljmp
lock
imul
cwtl
fldl
mov
add
cmpsb
pop
pop
lods
add
mov
fwait
imul
dec
add
add
bound
push
xor
sbb
sub
cltd
adc
or
dec
jmp
mov
fcmovnb
add
adc
mov
mov
mov
adc
jae
aad
and
mov
andl
add
add
or
mov
inc
js
jmp
add
dec
cmp
sub
add
cmp
add
sbb
xchg
ja
repz
cmp
sarl
test
add
nop
mov
jb
add
mov
mov
add
add
jo
cld
push
cmpsb
orb
aam
sahf
daa
js
xlat
pop
inc
jns
dec
sub
add
add
hlt
in
subl
add
clc
mov
jle
addb
sub
mov
mov
in
jne
add
add
loopne
in
jbe,pt
mov
xor
nop
addr16
add
add
inc
lcall
or
add
pop
xor
jl
sub
add
add
je
dec
out
xor
jnp
test
mov
or
add
lds
mov
add
adc
test
xchg
cli
mov
mov
pop
add
adc
test
mov
aas
jmp
sbb
add
add
cmp
incl
sub
add
add
nop
pop
mov
xor
daa
add
mov
mov
sbb
icebp
xchg
rcrl
cmp
sub
mov
add
add
sub
inc
add
add
inc
add
push
mov
mov
mov
pop
and
mov
sbb
mov
mov
fadds
add
add
xor
add
xor
add
stc
into
ds
pop
in
mov
shlb
add
or
lods
test
add
add
dec
add
add
lods
mov
out
popa
nop
out
pusha
add
add
add
lods
daa
sub
rcr
sbb
add
lock
add
aam
cli
sbb
mov
pop
sbb
pop
mov
add
add
dec
cwtl
out
ss
add
mov
mov
cltd
test
jae
mov
xor
adc
mov
stos
repz
add
add
testl
fadds
icebp
mov
mov
in
add
add
iret
push
add
add
sahf
fldl
add
jg
sti
cmpsb
scas
es
sbb
pop
add
cld
sbb
mov
jbe
add
add
test
push
add
add
sub
add
add
cmp
or
fwait
mov
sbb
jne
je
push
pop
js
icebp
inc
mov
inc
add
gs
cld
lods
sub
add
shl
arpl
pop
lret
xor
pop
loop
popa
clc
sub
and
mov
cltd
or
add
add
sbb
sub
mov
clc
lret
gs
add
add
sbb
leave
shrl
jle
arpl
add
mov
add
jecxz
push
adc
mov
cmp
data16
add
add
cltd
popf
fbld
movsl
pop
int
je
pusha
add
add
rorl
add
add
into
sbb
and
add
and
sub
mov
inc
movsl
lods
jbe
cmp
cld
add
push
and
inc
add
add
and
mov
add
add
add
sub
mov
aas
ret
sub
add
add
mov
jo
dec
aaa
mov
or
xor
test
mov
cmp
insb
add
add
xor
pop
in
or
testb
lods
push
hlt
lcall
adc
mov
jnp
and
sub
add
add
add
add
aaa
jecxz
ret
das
fsubs
stos
mov
cmp
add
add
pop
pop
or
mov
stos
xchg
stos
inc
repnz
cmp
cmp
add
dec
dec
xchg
cmp
mov
xor
add
imul
add
add
add
addl
rol
push
test
std
push
lret
sub
mov
inc
xchg
inc
mov
hlt
and
bts
daa
lahf
jbe
add
es
bound
dec
xchg
stos
in
sbb
xor
add
or
add
add
scas
push
push
inc
push
push
add
mov
pop
adc
mov
cwtl
loopne
lock
enter
imul
add
add
or
cmp
fldl
adc
or
in
mov
mov
rcll
sbb
in
pop
jl
xchg
cmp
ret
xchg
add
add
add
add
jns
test
in
inc
add
add
inc
pop
andb
in
nop
cmp
add
inc
add
mov
jae
sarl
mov
push
cmp
add
sbb
pop
ljmp
clc
mov
stos
outsb
lods
adc
into
cmp
dec
add
add
loopne
jmp
xchg
mov
stos
cwtl
or
scas
sti
xchg
mov
shlb
outsb
add
stc
leave
movsbl
in
lea
jl
add
jg
out
in
int
add
add
xchg
inc
adc
add
add
fsts
jmp
pop
xor
jle
pushf
int3
out
cmp
mov
mov
into
lock
lahf
adcl
inc
add
add
pushf
push
cmc
lret
scas
add
add
push
jne
in
data16
sbb
gs
add
adc
or
mov
insl
xchg
jne
repz
add
clc
sub
add
add
mov
in
insb
add
out
nop
dec
add
add
std
push
pop
jo
add
dec
and
sub
xchg
lods
jge
mov
xchg
mov
dec
cmp
in
jne
add
add
xchg
add
sub
mov
sub
add
mov
add
add
clc
cmp
rol
mov
std
int
cmpsb
push
jmp
xchg
neg
and
add
add
sub
add
movl
mov
jmp
je
cs
cmp
fisttpll
add
push
test
inc
xchg
imul
rcrl
fstl
mov
or
add
add
dec
pop
shl
je
gs
mov
push
cmp
and
add
add
cld
outsb
mov
cmpsl
adc
cmp
daa
mov
pop
mov
jmp
test
mov
mov
add
inc
add
add
insl
adc
arpl
mov
imul
add
sti
push
fnstenv
test
add
add
add
out
icebp
ss
es
ret
and
or
jnp
lret
mov
add
add
adc
jecxz
xchg
jbe
sbb
jnp
arpl
icebp
mov
cmp
movsb
dec
add
in
adc
sbb
sbb
cli
int
das
push
push
inc
cwtl
cs
scas
mov
add
add
jb
inc
add
add
insb
add
add
jmp
pop
xchg
adcl
sbb
jl
cli
arpl
mov
mov
lea
add
add
add
pop
clc
scas
push
int3
xchg
call
gs
inc
jne
jge
rol
jae
add
add
add
stos
pusha
add
add
and
add
add
fadd
inc
insl
lret
xchg
or
add
rcrb
xor
mov
adc
insb
add
jno
xchg
push
popf
push
fstpl
in
shl
imul
mov
push
call
add
add
mov
sarb
cmc
xor
dec
outsl
add
cmp
add
mov
pop
std
lods
loopne
jmp
outsb
in
sub
add
add
add
add
add
add
xor
push
pop
and
xor
rclb
xchg
push
push
jmp
xchg
jne
lea
loopne
daa
xor
xchg
outsb
add
or
outsb
lock
sysenter
addb
add
pop
jg
loope
test
sub
mov
fisubrl
movsb
xchg
sbb
and
add
add
repnz
outsb
add
mov
test
insb
add
push
and
cmc
mov
insb
add
add
add
cmp
pop
dec
les
add
add
add
sub
add
add
adc
imul
add
add
inc
sarb
lcall
imul
push
mov
leave
int
add
inc
mov
add
push
popa
xchg
add
imul
xchg
pop
xlat
mov
mov
sub
add
add
add
add
xchg
add
lea
loope
mov
jae
jl
add
add
in
ret
xchg
jle
add
lods
ja
sbb
sarl
lea
push
mov
cmc
cmp
xchg
fdivs
dec
and
add
stc
xchg
testl
ja
fwait
sti
jmp
add
add
adc
cmc
mov
add
add
add
and
mov
adc
dec
inc
lods
inc
add
add
jp
int3
or
add
add
add
add
push
scas
pop
imul
mov
test
jge
nop
pop
xchg
add
cs
xor
jnp
and
adc
add
ret
and
or
add
add
add
aaa
pop
lods
xchg
add
or
sahf
jns
insl
stos
lcall
out
mov
xchg
hlt
aas
lret
jmp
add
imul
lea
jecxz
or
or
add
add
mov
inc
jl
add
cltd
push
rolb
add
movsl
xlat
mov
add
mov
fbld
mov
add
add
bound
add
adc
mov
pop
in
inc
and
push
int
addb
icebp
vpunpckhqdq
ret
aam
add
pop
test
add
mov
xchg
push
addl
mov
dec
push
test
cmp
in
arpl
sti
pop
pusha
add
add
inc
cmp
mov
add
cmp
jo
mov
push
in
je
dec
add
add
add
xor
jbe
movsl
lea
cltd
push
inc
mov
outsl
bound
push
daa
xor
adc
mov
push
mov
scas
lds
sbb
adc
add
and
inc
xchg
push
and
add
add
push
mov
add
mov
dec
add
add
mov
loopne
xchg
sbb
sbb
push
or
mov
add
add
or
cwtl
movaps
pop
push
dec
add
add
xlat
push
test
mov
add
add
ja
daa
fcmove
adc
leave
nop
pop
pop
dec
inc
add
sbbb
xor
hlt
mov
pushf
jecxz
sub
mov
pop
jns
lds
outsb
rcr
pop
mov
int
dec
add
add
roll
aad
outsl
js
es
add
js
add
add
imul
sbb
sahf
lock
pop
push
jae
iret
sub
and
je
cli
insl
mov
ja
add
pop
shll
add
aad
xchg
ljmp
sub
or
sbb
dec
pop
add
add
notb
faddp
or
mov
add
add
shrb
dec
push
imul
and
sbb
add
pop
jne
int
movsl
or
add
add
das
lods
stos
mov
das
mov
call
call
iret
or
mov
dec
jns
and
mov
insl
nop
push
popf
cmp
add
add
popa
cmp
scas
mov
jno
cmp
fsubrl
sub
jae
lea
jle
stos
fadds
jnp
jmp
lret
jmp
adc
add
add
cli
loop
xor
mov
mov
sub
popf
clc
xchg
fwait
ljmp
dec
dec
adc
add
jl
outsb
imul
nop
imul
daa
sub
mov
scas
jae
push
cmp
cmp
sub
sbb
pop
mov
into
sarb
xchg
js
mov
movsb
call
mov
push
shll
add
add
jmp
or
fcomps
add
inc
pop
xlat
xor
mov
push
xor
in
leave
pop
fmulp
cmc
add
add
add
fsubr
xchg
in
lods
pop
inc
xchg
adc
inc
call
mov
mov
add
or
adcb
mov
insl
jns
dec
add
add
add
and
sbb
fdiv
aas
xchg
sbb
in
clc
mov
jle
enter
xchg
cwtl
lcall
jp
pusha
add
add
push
or
mov
add
add
cmpsl
push
jge
mov
add
leave
fisttpll
mov
jp
add
adc
jb
sub
dec
add
add
push
pop
bound
pop
and
cld
jecxz
ljmp
fistpll
adc
inc
sbb
pop
cltd
rcl
xor
fidivrs
dec
dec
add
add
add
pop
pusha
add
shrb
mov
push
fbld
add
add
xchg
es
inc
pusha
add
mov
add
jmp
mov
add
cmp
fdivrl
pushl
cmp
stos
cwtl
lods
arpl
add
add
push
add
mov
dec
add
add
add
cmpl
cmp
push
add
add
add
add
jecxz
stos
jnp
pusha
add
add
push
shlb
mov
das
pop
movsl
imul
loop
das
and
lahf
pop
push
mov
add
imul
adc
mov
add
add
add
stos
aam
test
add
cmp
add
add
mov
je
adc
add
add
inc
loop
mov
mov
add
aaa
add
add
add
add
clc
rol
mov
add
xchg
js
jecxz
rclb
inc
mov
xchg
add
test
push
sti
repz
test
add
add
sub
xorl
add
popa
pop
sub
in
bound
mov
add
mov
hlt
outsl
es
inc
add
shlb
add
add
add
fisubrs
call
ret
enter
xor
pop
cltd
adc
add
xchg
add
add
fiadds
sub
idiv
popa
inc
sbb
mov
call
sub
sub
pop
sbb
je
enter
pop
or
add
add
add
adc
ret
mov
add
add
add
add
jmp
mov
stc
push
int3
or
scas
mov
lret
cmp
repnz
loop
jo
adc
sbb
mov
jno
mov
xor
mov
adc
inc
pop
jge
in
add
inc
in
or
pop
adc
insl
repz
add
push
sbb
stos
jp
mov
mov
mov
rcrl
rorl
lods
mov
dec
dec
lods
test
push
jl
xchg
rcrb
fcompl
rcrl
int
iret
loop
rcll
clc
rorl
dec
addr16
add
add
shlb
add
out
pop
push
enter
push
dec
add
ljmp
add
xchg
movsl
jge
jecxz
mov
vmread
pushf
mov
mov
mov
mov
push
push
mov
add
add
insb
add
jge
add
add
add
in
and
cltd
pop
outsl
lahf
mov
push
adc
adc
mov
adc
nop
ds
cmp
add
add
xchg
cwtl
test
jbe
or
enter
mov
dec
pop
and
add
add
mul
std
fistpll
xor
jbe
inc
xchg
inc
add
add
pop
adc
int3
push
adc
mov
add
cmpsl
adc
add
add
sbb
popa
mulb
jp
xchg
mov
mov
xchg
stos
and
mov
add
add
lds
push
hlt
jecxz
loopne
data16
fwait
xchg
addb
add
add
push
or
negl
add
pop
pop
jno
pop
loope
push
lahf
cmp
sbb
dec
jecxz
xchg
sbb
sub
dec
jae
jle
cli
fstpl
xlat
push
je
inc
cmpsb
outsb
stos
js
dec
mov
jmp
dec
add
add
mov
sarl
insl
xor
cmp
sub
jo
xor
add
add
add
mov
cli
cmpl
aas
or
dec
mov
cld
adc
push
sbb
sbb
add
dec
rdpmc
fdivrl
mov
lds
in
out
add
add
add
mov
mov
lods
ret
sarl
test
add
mov
add
cmp
mov
cli
mov
xchg
add
lods
mov
into
sbb
sub
add
repz
inc
add
jmp
rclb
test
in
imul
add
add
lea
cmp
add
enter
mov
add
add
cmc
in
cmp
add
add
loopne
mov
add
cmp
pushl
sbb
stos
inc
add
add
das
movsl
jge
icebp
xchg
jnp
sti
movsl
das
cmpsb
mov
mov
pop
inc
aaa
sbb
jl
jnp
popl
jne
cmp
push
xchg
pop
shrb
add
in
cmp
in
enter
add
xor
gs
cs
dec
adc
or
add
add
xchg
lahf
inc
add
inc
add
add
add
adc
call
add
cmp
cli
repz
pop
xchg
mov
add
xor
add
cmp
dec
aam
xchg
div
dec
outsl
add
popf
push
adc
jl
fadd
stos
adc
test
jmp
push
inc
test
jb
into
pushf
in
out
inc
add
loop
jg
dec
add
fcoms
cli
xchg
add
add
mov
add
fidivrl
int3
dec
cwtl
or
cmpsb
das
lods
jp
pop
mov
xchg
and
roll
outsb
add
add
jp
lods
adc
cmp
lock
scas
cld
and
inc
leave
popa
add
in
aas
sahf
loope
loop
pushf
or
mov
mov
jl
add
add
push
push
aad
jp
in
fldenv
add
add
repz
roll
loopne
int3
data16
pusha
add
add
jb
jno
fiadds
add
add
jp
push
fwait
loopne
jae
jb
mov
lcall
rorb
xchg
pop
popf
lds
add
mov
pushf
in
inc
add
pop
push
decb
jne
dec
cld
xor
out
pop
in
add
or
testb
mov
cltd
inc
add
mov
push
ficoml
jmp
add
mul
mov
movsl
push
mov
shrb
leave
outsl
dec
add
add
sub
nop
push
dec
les
mov
mov
pop
jmp
xor
pop
push
sub
mov
add
add
repz
add
add
test
stos
je
push
shl
call
scas
mov
or
add
add
rorl
or
mov
in
jl
icebp
fadds
mov
and
pop
gs
sub
pop
fsubs
je
adc
lahf
lret
push
sbb
xchg
enter
pop
and
mov
and
dec
scas
pop
shll
and
ret
shlb
out
lahf
hlt
fmuls
fisubs
jae
sbb
adc
sub
add
add
and
out
pushf
sub
out
inc
add
fimuls
pop
fistpl
add
push
subl
push
jl
test
repnz
mov
dec
add
hlt
ljmp
cmp
push
lea
arpl
jno
shr
hlt
shl
mov
push
je
pop
adc
add
pop
inc
add
pop
mov
add
ss
xor
add
add
sub
add
add
dec
add
add
cmpsl
add
inc
add
push
jge
add
add
sub
add
add
out
lahf
outsl
leave
adc
sbb
adc
ret
dec
fdivr
cmp
add
cwtl
jb
subl
mull
mov
cmp
inc
add
adc
in
notb
mov
fsub
jno
push
lret
sti
push
fadds
clc
lds
popf
cli
dec
push
repz
enter
sti
je
add
outsl
xchg
xchg
sti
mov
pop
and
mov
xchg
je
nop
addr16
clc
ljmp
mov
pop
or
mov
add
xchg
nop
nop
ja
lret
jo
popa
cmpsl
rcll
add
jmp
add
addb
add
mov
add
mov
jns
inc
add
add
xchg
xchg
jge
sub
dec
out
add
fldcw
add
add
mov
push
lcall
add
and
mov
ret
outsl
aam
xchg
add
add
add
add
cltd
repz
popa
xlat
mov
adc
dec
lea
fimuls
add
insb
add
add
jmp
rcr
pop
jns
pop
addl
adc
inc
add
add
or
mov
add
add
leave
or
add
add
push
int
mov
frstor
add
pop
test
mov
fwait
ljmp
xchg
movzbl
out
sub
add
add
inc
add
add
add
add
add
add
add
add
popf
adc
add
pop
add
xchg
ds
cmp
es
mov
popf
loop
pop
stc
xor
sub
mov
cwtl
in
lret
cltd
dec
add
add
daa
shr
imul
stc
fwait
inc
mov
mov
xor
test
add
add
or
pop
pop
insb
add
jne
cmp
sub
mov
in
pop
push
jne
mov
add
dec
mov
pop
loop
inc
add
dec
xor
mov
xchg
pop
cmpl
mov
test
mull
xor
mov
mov
and
insl
adc
and
push
into
push
dec
cmc
inc
out
popa
and
add
jb
xchg
push
shl
enter
jle
xor
jae
pop
movsl
sub
fcoml
push
nop
sub
xor
lahf
jmp
pop
arpl
add
push
insl
stos
mov
jg
or
add
pop
jge
in
dec
cmpsb
mov
in
cmpsl
mov
add
add
ret
add
add
cli
stos
dec
rcll
jnp
ja
xchg
or
je
loope
jp
mov
add
add
add
mov
rcl
dec
add
je
jno
data16
insl
aas
outsb
lock
xor
stos
pusha
add
add
push
and
add
lea
imul
add
sbb
sbb
aam
mov
cmp
outsb
mov
add
add
and
mov
add
add
add
pop
dec
lea
aaa
test
adc
mov
dec
mov
add
xor
jecxz
pop
stos
dec
out
ljmp
adc
aam
repz
pop
pop
cmpsl
roll
add
push
cmc
jp
test
clc
xchg
add
dec
add
add
and
mov
jno
sub
dec
mov
sbb
rclb
add
adc
data16
add
add
dec
add
add
lods
sti
cmp
cmp
mov
inc
or
and
mov
xor
mov
sbb
or
fdivl
addr16
xchg
dec
push
decl
xchg
or
mov
inc
add
xchg
push
push
jnp
add
add
jecxz
sbb
addb
int
cmp
jnp
arpl
inc
add
outsb
out
out
lock
aas
cmp
push
in
scas
jb
push
fimull
add
and
jp
aam
jge
push
jno
adcl
xor
aam
dec
cs
add
add
push
fwait
pop
cltd
cmp
pop
and
mov
loope
mov
orb
lret
xor
add
add
or
or
mov
sub
add
pop
push
sahf
mov
fadd
and
dec
add
sarb
scas
out
add
nop
rcl
std
dec
sub
mov
jg
add
mov
ja
add
add
and
ds
arpl
fistpll
jle
sbbl
outsb
push
test
outsb
add
mov
ret
mov
inc
mov
add
add
add
notl
add
mov
mov
jns
movaps
mov
add
add
xor
loop
cld
add
mov
cmp
add
add
add
shll
sub
mov
mov
cmc
aas
mov
test
mov
es
jbe
jmp
add
add
add
js
in
mov
dec
add
add
imul
sub
movsb
in
mov
stc
pop
stos
or
add
add
shlb
add
sbb
testb
pop
lret
push
cmp
push
mov
fcmovu
pop
out
add
add
ret
rorb
add
cmp
inc
clc
mov
jmp
fisubl
out
lret
imul
or
dec
mov
cmp
push
data16
push
pop
mov
addr16
inc
add
add
test
add
add
mov
je
and
mov
xchg
sbb
sub
call
push
test
and
adc
sub
stos
sbb
push
jp
xor
sub
pusha
add
add
xor
add
add
add
mov
inc
add
xchg
mov
ljmp
sahf
add
popl
or
adc
sub
mov
dec
add
add
mov
rcrl
sub
add
add
sahf
mov
xchg
pop
mov
jl
push
dec
and
testb
dec
lock
cmp
cmp
popf
push
jl
daa
es
dec
add
add
add
pusha
add
add
sub
mov
jecxz
sub
pcmpgtb
add
add
mov
xchg
faddp
jmp
cmp
cs
cmpb
add
add
pop
lahf
mov
nop
adc
loop
and
mov
jle
mov
pop
aad
xchg
sbb
and
and
inc
lock
pusha
add
add
add
xchg
or
mov
loope
add
add
inc
add
add
andl
jb
sbb
and
jne
jmp
push
ja
or
mov
inc
test
add
cmpsl
sbb
add
add
adc
xor
jno
cwtl
dec
sbb
outsb
inc
add
sub
and
add
add
cmp
loopne
add
add
add
inc
add
das
icebp
jo
sub
add
add
out
scas
mov
outsb
xor
in
xchg
add
adc
repz
sub
and
mov
mov
or
add
add
adc
scas
jbe
add
add
cmp
add
add
or
les
add
cmp
xchg
cmp
sub
mov
adc
push
pop
insb
add
add
inc
outsb
out
mov
fstpt
shl
lds
add
imul
add
stos
add
add
add
cmp
icebp
push
in
push
push
xchg
mov
mov
movsb
and
add
push
cmp
mov
aaa
push
jl
mov
add
sbb
add
add
dec
rclb
add
add
addr16
xor
add
add
nop
adc
push
xchg
mov
jmp
repz
dec
pop
add
add
add
das
pusha
add
cmc
dec
add
add
sub
push
aad
cmp
push
adc
mov
add
push
outsl
inc
or
add
add
pop
or
add
iret
push
sbb
sub
add
add
push
outsl
sub
add
add
adc
jg
jmp
or
out
cmp
add
add
xor
mov
stos
inc
pop
popa
leave
mov
lock
cltd
cmp
sub
sahf
nop
cwtl
xlat
jecxz
shlb
adc
mov
add
add
add
add
into
adc
mov
faddl
cltd
push
test
fstp
fsubrs
or
add
movsl
cmpsl
mov
loope
test
inc
lcall
dec
or
or
add
add
and
mov
lods
mov
sbb
push
mov
out
aas
mov
mov
add
sbb
jmp
ljmp
add
add
add
add
pusha
add
add
add
add
add
push
or
ljmp
out
mov
mov
xchg
xchg
or
pop
shll
sub
repz
dec
stc
xlat
xchg
stos
iret
subl
mov
ljmp
fld
mov
pop
sbb
mov
cmc
jb
xchg
push
jg
mov
jge
leave
dec
in
notl
add
add
xor
les
mov
mov
adc
ja
mov
add
jb
xor
add
mov
mov
adc
adc
add
cmp
dec
add
add
stos
in
test
jecxz
cmp
xchg
mov
sbb
dec
sub
sub
xor
dec
adc
xchg
xlat
jno
push
cmp
iret
lea
xchg
mov
ljmp
lds
add
aaa
fisttpl
bound
jne
jl
cltd
sti
ljmp
mov
dec
xchg
pop
sub
bound
mov
pop
mov
add
add
jge
mov
add
add
in
push
cmp
movsl
jmp
mov
add
add
test
add
add
punpcklwd
push
in
push
cmpsb
pop
add
add
mov
or
mov
add
add
lods
jge,pt
add
add
dec
popf
dec
push
xchg
icebp
inc
add
adc
sub
mov
fcoms
nop
lock
add
add
add
jnp
push
cli
and
or
add
add
lods
dec
add
add
pop
dec
je
outsl
add
add
add
mov
add
cmp
mov
movsb
das
shrl
mov
imul
scas
rorb
add
add
sbb
sbb
ret
fstpt
jb
inc
dec
mov
lods
cmp
cltd
jmp
push
adc
je
sahf
jl
dec
out
or
cmpsl
fwait
data16
add
add
add
scas
xchg
dec
lcall
ficoml
inc
push
repz
fwait
sbb
adc
push
or
add
add
xchg
pop
aam
jmp
adc
mov
pop
in
pusha
add
add
les
dec
pusha
add
add
push
mov
sbb
and
jnp
popf
adc
cmpsl
das
es
mov
add
pop
addr16
mov
sbb
xor
test
adc
cwtl
imul
add
add
or
mov
dec
inc
add
add
sub
movsl
jmp
xchg
jne
adc
pop
clc
bound
add
ret
mov
push
and
jae
add
add
pmullw
push
inc
add
and
mov
add
add
add
add
sbb
cmpb
dec
add
ja
ss
shr
inc
add
push
sbbl
xor
gs
mov
sahf
pop
mov
sbb
add
sub
je
xor
mov
popf
add
add
add
sub
dec
pop
es
adc
rorb
add
push
push
es
lahf
add
inc
mov
cmp
jbe
insb
add
lahf
mov
add
ja
jmp
imul
pushf
add
add
add
fiadds
add
add
cmp
sbb
mov
cmp
sbb
loope
xchg
lcall
insb
add
add
inc
lret
mov
add
add
out
mov
stc
ret
push
add
in
outsb
inc
addl
add
fldenv
add
add
add
cmpsb
xor
jnp
add
mov
mov
lahf
ljmp
add
add
ds
mov
lea
lret
mov
clc
nop
scas
aam
jnp
stos
mov
push
mov
add
mov
jbe
add
add
mov
fimuls
nop
push
sbb
mov
mov
mov
test
add
add
jns
dec
add
push
add
rcll
outsl
ret
testl
rclb
sbb
nop
push
add
mov
add
add
xlat
sbb
loope
ja
negl
popa
add
xor
jmp
stos
loope
mov
add
add
add
test
add
add
pop
test
add
pop
dec
adc
mov
rcll
in
aad
and
pop
cmp
dec
fcoml
add
add
add
repnz
mov
cmp
sbb
cmp
cmc
add
add
add
cs
cmp
pop
push
les
push
xchg
and
add
add
inc
add
call
mov
pop
outsb
pop
filds
das
lret
and
mov
mov
push
std
rol
ret
xlat
divl
sub
or
cmp
and
add
incb
xorl
inc
xchg
jmp
out
add
cmpsl
adc
mov
mov
fcoms
push
pop
gs
mov
test
mov
or
jbe
cmp
sbb
mov
push
push
mov
dec
loope
xchg
cmpsb
fmul
push
adc
cmp
into
mov
add
add
dec
mov
mov
add
add
std
add
or
xchg
jb
jmp
mov
scas
pop
insl
movsl
pop
cmp
add
cmp
lret
pop
arpl
add
add
push
push
lahf
add
add
add
fsubr
ljmp
push
mov
aaa
and
incl
inc
cmp
je
aas
popa
test
outsb
dec
je
mov
mov
fbstp
pop
lock
cmp
pop
clc
xchg
mov
add
test
inc
or
add
das
mov
jns
or
sub
add
adc
add
mov
std
lcall
adc
mov
mov
add
add
mov
popf
push
push
xchg
mov
add
gs
stos
mov
arpl
dec
scas
adc
mov
mov
cli
push
and
fisubs
test
lcall
cmpsl
add
add
add
clc
xchg
mov
add
add
add
add
cmp
aam
push
stos
inc
and
dec
add
add
dec
xor
sbb
leave
mov
or
fdivrl
aam
shll
mov
mov
inc
mov
sub
mov
scas
push
jbe
ret
pop
push
push
addr16
add
add
xchg
mov
add
add
pop
jno
jmp
xor
jmp
add
add
nop
sub
mov
xor
lods
lods
inc
and
insb
add
add
lea
push
add
add
xchg
add
jns
add
add
pop
enter
add
cmpsb
xor
mov
sahf
bound
add
push
push
adc
loop
or
add
add
add
add
add
dec
pop
dec
bound
add
add
cli
shrb
add
add
add
or
cmpsb
out
push
cmc
sbb
add
add
add
add
sbb
ret
repnz
inc
inc
add
add
add
add
int3
icebp
push
fcoml
add
push
push
loopne
mov
or
data16
dec
or
negb
add
add
add
rorb
or
mov
cmp
cmpsb
mov
add
jno
add
add
mov
daa
mov
mov
xor
mov
outsb
mov
mov
shll
and
mov
or
inc
add
mov
shl
cld
mov
sbb
add
xor
xchg
mov
or
cmp
outsl
out
adc
jecxz
fisubl
mov
popf
fwait
mov
rcrl
add
dec
mov
mov
mov
fwait
mov
add
dec
add
add
sub
add
add
or
mov
xchg
jns
inc
loop
daa
mov
sub
mov
add
mov
add
mov
ds
daa
pop
or
xchg
push
mov
mul
outsb
jo
in
fcmovnb
lret
mov
in
ret
fdivp
cmpl
sti
add
insl
cmp
sbb
add
add
std
mov
and
in
test
mov
and
add
add
add
add
add
inc
xchg
sbb
enter
or
add
add
xor
sub
add
add
out
mov
mov
xchg
inc
mov
and
decl
fmul
imul
xchg
cmp
fldcw
xchg
insb
add
add
mov
xchg
push
jno
adc
test
xchg
loope
push
add
add
add
push
sti
pop
add
add
test
cmc
insl
cmp
in
test
add
add
add
adc
cmpsb
mov
dec
add
add
push
mov
int3
movsb
cmp
mov
jmp
xchg
sbb
dec
bswap
lock
adc
rolb
cmc
imul
lock
std
jne
imul
xchg
xor
dec
jne
cs
push
enter
andb
or
add
add
rcrb
clc
insl
dec
push
push
rep
jbe
and
add
xchg
xchg
xchg
jmp
inc
out
test
add
add
sub
add
add
pop
xor
out
add
lea
xor
push
xor
icebp
stc
js
daa
adc
inc
add
or
loop
sub
mov
nop
repz
cmp
dec
mov
fcomps
mov
fwait
xor
adc
xchg
add
add
sub
xor
add
les
in
lcall
add
ds
aaa
mov
add
mov
push
mov
dec
ret
not
cmpsb
jo
push
mov
add
add
add
test
loop
push
idivl
hlt
add
add
add
add
add
rorl
daa
mov
xor
sbb
dec
pop
and
mov
add
add
add
add
mov
hlt
mov
jl
add
leave
rorb
adc
imul
sub
mov
sub
mov
repnz
push
cmp
or
inc
add
add
sub
test
idivb
add
out
pop
adc
mov
mov
sbb
hlt
add
mov
add
popf
or
add
add
je
ljmp
add
les
add
jle
mov
shrb
mov
push
imul
pop
pushf
sbb
sbb
add
rcll
xchg
fisttps
add
add
ljmp
fadd
mov
add
mov
mov
add
mov
seto
xchg
sub
push
mov
add
pop
rcrb
cmp
adc
loopne
or
add
add
imul
add
mov
fstl
cmp
lock
sub
pop
mov
mov
add
add
dec
rolb
add
add
jle
lods
mov
nop
inc
add
rcrl
or
add
add
ret
dec
push
xor
add
add
or
add
add
es
test
add
fsubrs
pop
shrb
mov
xchg
add
mov
lock
push
jae
xor
add
jp
adc
lds
mov
cwtl
xchg
stos
add
pop
int3
add
add
add
mov
add
add
neg
mov
imul
xor
and
mov
lods
aad
mov
pushf
mov
add
mov
and
andl
andl
add
aam
fsts
data16
push
icebp
or
add
add
push
push
repnz
cmp
bound
add
mul
mov
hlt
push
imul
dec
mov
je
lea
add
add
add
mov
jg
push
ds
inc
mov
xchg
mov
add
test
jp
add
pop
inc
add
and
mov
enter
add
mov
mov
mov
scas
push
cmc
add
add
ja
xchg
adcb
rolb
loope
mov
jae
mov
xor
cmp
add
inc
add
add
cmp
mov
inc
scas
add
add
or
jecxz
sahf
pop
aas
pushf
sub
add
add
in
shl
call
mov
add
add
mov
sahf
or
add
pop
add
adc
pop
out
sbb
in
xor
fsubrs
stos
enter
mov
xchg
or
mov
imul
mov
sbb
out
in
dec
cltd
add
add
add
add
add
pop
push
shl
and
mov
xor
fsubrl
add
add
lods
or
mov
sahf
dec
mov
movsl
cwtl
and
mov
add
add
add
jne
mov
add
add
das
dec
add
add
cmpsl
inc
add
in
add
mov
mov
or
dec
out
push
inc
cmpb
or
mov
jge
fsubr
andb
arpl
lcall
adc
sub
cs
sbb
inc
popf
push
xor
test
add
add
jge
inc
push
rolb
stos
mov
stc
mov
push
les
add
add
mov
add
roll
popa
lds
in
outsl
std
dec
cmp
and
mov
imulb
add
add
into
jecxz
repz
rorb
add
mov
fwait
movsb
mov
movsb
push
gs
mov
xchg
dec
add
add
addr16
mov
into
jmp
mov
stos
les
in
enter
add
nop
sub
jg
hlt
and
mov
sub
sub
add
movsl
xchg
mov
cwtl
mov
add
popa
cmp
mov
addr16
mov
xor
jg
scas
call
add
pop
sub
sahf
jl
pop
mov
add
ud1
or
add
add
add
or
add
add
and
add
add
callw
mov
cltd
mov
sbb
xor
mov
aaa
in
inc
adc
and
mov
addl
add
mov
ljmp
push
adc
add
jo
aad
dec
pop
mov
sub
insl
mov
push
xchg
and
mov
mov
or
loopne
cmp
jle
mov
movsl
and
mov
xchg
dec
data16
add
or
mov
add
add
es
xchg
repnz
mov
add
add
clc
pop
stos
adc
add
add
lods
and
in
jbe
cmp
sbb
cmp
inc
loopne
push
add
add
mov
inc
dec
xchg
mov
sahf
xor
mov
cmp
push
loop
mov
add
push
das
sahf
into
pop
movsl
test
or
jbe
gs
inc
ss
cld
and
andl
xchg
or
mov
cwtl
cmpl
pop
xor
ja
add
add
push
adc
lea
and
mov
jae
sbb
add
add
add
cmp
add
add
hlt
test
add
add
add
loope
repnz
mov
fdivrs
jae
xor
add
add
pop
mov
mov
add
add
lret
int3
inc
jle
mov
cmp
sub
add
add
pop
nop
cmp
add
add
rcl
call
mov
sub
mov
mov
sub
add
add
dec
sub
and
daa
and
hlt
ds
in
into
sbb
mov
sub
mov
inc
popa
adc
in
lea
add
add
gs
imul
clc
sub
add
xchg
mov
repz
aas
xchg
hlt
jae
mov
test
add
in
xchg
loopne
push
stos
scas
addr16
test
lret
jecxz
ficompl
jmp
int
sbb
and
ret
inc
add
add
dec
push
mov
add
cmp
add
fucomip
in
cmp
and
inc
sbbb
vmwrite
fimull
sbb
lret
aam
dec
xor
pop
aas
xchg
cmp
loope
ret
mov
pop
ja
lods
push
shlb
cmp
and
mov
add
test
pop
xchg
add
leave
pop
imull
add
add
in
fdivrl
aad
jecxz
pop
pop
daa
shlb
add
add
add
add
adc
aaa
push
dec
add
pop
mov
shlb
or
adc
xchg
adc
rorl
add
mov
sbb
lret
sbb
sub
add
add
enter
sub
clc
iret
cmp
xchg
sbb
popa
push
cld
jae
pop
fcoms
add
add
loop
sbb
add
add
negl
mov
fincstp
mov
push
lods
leave
stos
xor
add
cmpsb
inc
xchg
jmp
pop
xchg
daa
or
mov
xchg
mov
mov
and
adc
xchg
negb
data16
add
adcl
add
add
mov
lea
add
mov
cmpsb
daa
repz
inc
add
add
dec
mov
movsb
cmp
pop
cmp
push
in
adc
dec
hlt
jnp
nop
cmp
popa
shlb
imull
js
add
sub
mov
mov
arpl
add
mov
add
cmp
add
xchg
lret
mov
mov
mov
mov
add
mov
add
add
out
bound
add
add
out
rorl
lds
jns
jp
aas
insb
add
adc
call
add
add
jno
inc
add
add
lock
add
cmc
loop
movsl
shrb
sbb
or
add
add
filds
aad
enter
add
mov
sbb
out
mov
add
add
add
add
add
add
pop
rcrb
lret
mov
xchg
add
jo
sub
add
add
mov
in
cwtl
out
push
test
add
icebp
or
mov
mov
sbb
jae
fstl
pop
insb
add
mov
enter
jb
and
add
add
outsb
cwtl
hlt
std
dec
xchg
mov
or
add
mov
pop
repz
dec
xchg
pop
int3
pop
xor
enter
mov
add
add
mov
jp
cltd
in
jno
jl
cmp
movsl
ja
daa
add
xchg
je
shll
add
add
pop
jg
and
loopne
add
add
inc
sbb
inc
inc
call
iret
in
add
pushf
sbb
cs
insl
and
mov
add
mov
add
add
add
pop
jnp
pop
iret
test
add
add
jns
lods
sub
loope
shll
mov
outsb
scas
or
sbb
jno
ficomps
push
test
add
fwait
add
mov
les
add
add
ja
test
fidivs
push
loop
dec
add
add
addb
add
or
add
add
and
jl
popl
push
xchg
outsl
or
mov
sbbl
js
mov
xchg
add
add
lods
aam
add
add
mov
les
sub
jnp
add
mov
nop
xchg
ss
mov
dec
lcall
nop
mov
clc
dec
add
adc
jns
loope
int3
dec
add
add
add
roll
jg
mov
add
call
ss
andl
pop
pop
xor
sub
add
add
add
add
jns
sar
bound
mov
outsb
xchg
jmp
add
add
jo
adc
add
add
dec
add
add
add
sub
xchg
pop
leave
or
mov
add
cld
jbe
out
out
mov
dec
add
add
adc
or
add
add
loope
imul
das
xor
lock
push
imul
lahf
push
loop
outsb
flds
xchg
inc
sbb
lds
and
mov
push
mov
add
inc
xchg
push
insl
and
mov
mov
sub
mov
add
adcl
jg
inc
cmp
add
rorl
xchg
and
mov
aas
in
add
add
add
dec
add
push
addr16
add
add
sub
fsubs
add
add
ja
and
mov
mov
or
xlat
inc
push
std
sbbl
push
insb
add
mov
add
add
mov
mov
or
add
add
mov
leave
rorb
add
or
pop
loope
test
add
add
test
xchg
jne
shrl
cmc
sub
add
add
loop
or
mov
mov
sub
pop
mov
lcall
add
pop
xor
cmp
or
mov
das
sbb
clc
fadds
mov
loop
movsl
jae
pop
js
lods
mov
sti
adc
cmp
test
add
inc
add
repnz
dec
rclb
pusha
add
add
add
cmp
jl
arpl
sarl
sub
mov
bswap
xor
add
mov
xchg
stos
adc
je
push
aad
cld
mov
fwait
imul
pop
cmp
jns
add
add
add
sub
cltd
out
cli
push
leave
pop
daa
lret
or
pushf
stc
xchg
daa
leave
or
or
and
add
add
pusha
add
mov
sbb
das
rcrb
xchg
mov
sub
xor
inc
mov
xor
cmpsb
add
ljmp
mov
std
cmp
mov
mov
js
and
add
add
add
xchg
leave
pop
adc
add
add
mov
xchg
dec
inc
mov
mov
nop
test
mov
icebp
cmp
popa
add
cmp
add
add
repnz
xchg
adc
sub
add
add
int3
xchg
dec
in
push
jge
and
std
fisubl
add
js
dec
add
mov
clc
cld
xchg
pop
sarb
popf
inc
dec
add
mov
add
xor
xlat
flds
add
data16
xchg
je
add
fiadds
push
pusha
add
add
imul
add
add
push
fbld
loope
add
add
add
mov
adc
add
jbe
adcl
mov
jle
add
mov
enter
enter
out
jge
add
insl
shr
mov
add
lret
fnstcw
fistl
lcall
add
add
mov
lock
enter
test
pop
xchg
add
add
add
lret
repz
add
push
xor
mov
jns
or
test
add
sti
mov
add
shll
mov
xlat
es
cmp
scas
orb
add
and
cmp
push
push
or
add
add
inc
inc
add
jne
dec
shll
test
jmp
add
push
scas
mov
shr
mov
fsubl
add
add
hlt
xor
ret
aaa
test
sub
add
add
out
pop
cmpl
fnsave
lea
into
rorl
add
xchg
jno
xlat
xor
les
add
add
adc
mov
push
lret
sti
bound
cmpl
add
add
add
leave
ds
jbe
sbb
xchg
filds
add
jg
mov
add
add
lea
fwait
imul
call
add
sub
roll
add
add
or
fnstcw
mov
adc
add
add
lods
add
push
mov
sbb
movsl
jmp
cmc
cmpsl
lret
bswap
adc
enter
jl
dec
push
jb
mov
inc
add
leave
test
cld
pop
lds
mov
testb
clc
pop
or
mov
push
push
cmp
lock
add
add
and
jl
setae
and
mov
lock
cmp
pop
dec
add
mov
es
adcl
aam
in
mov
jo
ljmp
fbld
mov
and
mov
xor
xor
lods
dec
xchg
pop
add
cltd
movsb
gs
in
roll
mov
mov
push
stos
inc
mov
mov
add
sub
cmc
ficoms
inc
loopne
add
push
insb
add
push
and
cmp
xlat
sub
sbbl
sub
add
add
sub
mov
add
add
xchg
add
addr16
es
pop
dec
in
into
mov
aas
cli
fbld
fwait
xor
cltd
loope
xor
cmp
out
scas
sbb
sub
add
add
xor
sbb
lds
add
add
add
add
push
leave
je
mov
iret
mov
sbb
inc
mov
cmp
pop
fldl
stc
repnz
rolb
add
jl
aaa
fwait
pushf
jl
repnz
popf
mov
jbe
add
add
inc
pop
lock
mov
add
add
scas
xchg
sub
xor
lea
popf
stc
mov
push
xchg
in
rep
and
mov
add
mov
add
je
outsw
sub
mov
dec
mov
lds
inc
in
notl
jbe
cld
jbe
jb
pop
loopne
jle
add
mov
add
add
add
inc
lock
dec
pop
mov
data16
sbb
cwtl
enter
loope
insb
add
out
andl
add
ud2
or
add
add
mov
or
mov
dec
std
iret
sbb
add
sarl
mov
mov
cmpsl
ljmp
orl
add
mov
jbe
fnstenv
mov
and
popf
stos
mov
add
add
imul
add
std
aas
add
add
add
add
jg
add
repnz
jnp
add
mov
or
mov
mov
xor
je
ret
fdiv
mov
lahf
rcrb
mov
xorb
add
add
add
adc
lock
sub
add
add
add
add
add
sbb
xor
bound
out
shll
ja
out
dec
test
aad
and
add
add
sbb
add
mov
xchg
loop
mov
pusha
add
add
cmpsl
scas
pushf
sub
xor
jmp
jnp
add
add
data16
add
add
add
xor
add
pop
sub
imul
adc
xor
lock
fnstenv
cld
jo
mov
jns
dec
push
xor
mov
jb
xlat
add
pop
outsl
push
loop
add
outsb
pop
add
ds
inc
or
add
add
mov
add
scas
aam
sbb
add
int
add
add
loop
imulb
fnstenv
add
add
or
mov
imul
add
flds
mov
add
add
add
fstpt
fdivs
mov
add
add
add
loope
and
cmp
xor
or
add
add
xchg
sbb
cld
add
add
add
add
add
stos
stos
out
add
mov
inc
cmp
dec
add
mov
cmp
add
sub
lds
mov
pop
into
scas
ja
jnp
test
inc
push
mov
lea
fsubrs
ret
loop
cltd
lock
lea
mov
push
adc
iret
dec
add
mov
or
addr16
cmc
dec
cmp
and
xchg
sbb
xchg
hlt
rclb
jge
mov
cmp
add
add
mov
or
pushf
in
movsl
data16
stos
fwait
xor
inc
cmpl
mov
add
xchg
jae
rcrb
pop
popf
sbb
cmp
and
mov
and
and
ficoms
mov
out
insl
mov
add
mov
inc
scas
inc
pop
push
stos
insb
add
add
lds
add
popa
test
or
popa
push
mov
inc
clc
jmp
push
pop
rclb
add
add
adc
add
add
adc
stos
in
stc
cmpsl
lahf
xor
jno
and
mov
mov
lea
mov
push
andb
out
in
adc
add
or
pop
adc
dec
add
add
fstpl
movsl
jmp
inc
repnz
add
add
dec
xor
cmc
xchg
pushf
scas
aam
movsl
call
mov
aaa
mov
push
fsubl
add
add
repz
in
jg
ret
sbb
fdivs
mov
add
add
fadd
adc
sub
xor
aam
inc
and
adc
cli
dec
insl
dec
add
jecxz
add
add
icebp
inc
xor
xor
jnp
je
fwait
test
add
add
add
push
dec
xor
mov
imul
sub
mov
mov
jb
and
mov
add
add
nop
sbb
xchg
faddl
or
lret
loop
sbb
push
add
mov
fstpt
iret
lds
xor
test
add
push
clc
sbb
leave
movsl
lods
loopne
xlat
sbb
mov
pcmpgtd
inc
and
add
add
je
add
add
sub
sbb
add
aas
mov
add
add
jl
inc
adc
add
add
in
mov
test
inc
mov
addr16
xor
cmp
xchg
filds
stos
loop
push
cli
ret
add
sbb
xchg
sbb
rorb
mov
fnstcw
add
loopne
inc
ret
mov
fwait
xchg
cmp
incb
add
sbb
popa
ss
test
cmp
push
test
sub
add
add
jp
sub
mov
add
add
add
add
mov
scas
hlt
loope,pn
lret
mov
add
in
cld
imul
cs
push
adc
mov
addb
sub
mov
sbb
xor
jae
sbb
into
jg
mov
sbb
xchg
into
add
add
add
lret
add
add
pop
dec
pop
jo
push
repz
add
cmp
inc
and
mov
mov
add
in
shll
push
push
sahf
jle
adc
es
cmp
popf
xor
add
in
or
add
add
mov
sbb
loope
add
ds
stc
ficomps
push
xchg
rcr
mov
add
add
pop
or
cmp
adc
ret
cmpb
sub
mov
lea
pop
cmp
and
les
add
negb
int3
dec
sbb
leave
xchg
pop
inc
add
add
sub
sub
mov
add
add
adcl
sub
pushw
xchg
out
add
or
push
mov
mov
adc
xor
dec
add
add
mov
add
add
mov
imul
lea
data16
pop
aaa
sub
xchg
xor
add
add
fstl
add
rorb
add
add
add
add
jecxz
cmpsb
rcr
dec
int3
cld
sti
or
add
movsb
div
sbb
outsb
adc
jae
lds
or
add
add
scas
inc
push
fisubrl
cmpsl
loope
dec
fimull
add
adc
es
jne
pushf
incl
xor
nop
hlt
nop
pop
call
mov
lods
sub
mov
fidivrl
add
xor
xchg
and
pop
dec
inc
dec
hlt
dec
scas
mov
fimuls
movsl
pop
ljmp
and
push
xchg
cwtl
pop
jmp
cmp
or
mov
pop
mov
jg
stc
sbb
sub
add
xor
or
add
cmpsl
inc
mov
lret
mov
adc
jbe
cwtl
adc
mov
add
ja
addr16
xor
push
push
ret
xchg
and
add
add
add
add
xchg
or
add
add
add
arpl
loope
dec
xor
icebp
out
adc
nop
xchg
vshufps
in
and
cmp
mov
fsubrs
pop
sbb
stos
xor
add
add
jp
fwait
pop
lods
or
mov
add
mov
int3
cmpsl
pop
and
add
add
sahf
or
add
add
cmp
or
shll
sbbb
jne
out
dec
scas
xor
jns
pop
xchg
add
add
add
add
add
mov
add
mov
add
add
cwtl
dec
add
dec
add
mull
clc
test
mov
pop
push
xorl
jae
imul
add
sarb
add
add
add
pop
lret
sbb
cmpsb
rclb
xor
jle
add
add
add
add
movsb
push
int3
or
mov
push
cmp
add
repnz
inc
pop
push
inc
cld
xchg
fadds
add
insl
xor
add
jecxz
pop
mov
jno
out
repz
add
mov
pop
inc
push
push
lret
adc
lcall
add
add
mov
mov
ds
mov
jo
add
add
repz
int
decl
add
add
inc
imul
jle
xchg
test
inc
jle
and
ja
add
mov
and
inc
jecxz
or
add
add
xor
call
lahf
cmc
dec
dec
popa
rcll
jb
jne
shl
mov
psubsb
rcrl
adc
or
add
mov
and
add
scas
negb
or
mov
add
jnp
add
push
popf
jl
xchg
pusha
add
push
sbb
nop
add
das
adc
scas
cld
ja
out
fldl
stc
ss
add
pop
sub
add
add
pushf
mov
cli
test
push
lret
and
add
or
fildl
mov
outsb
cmp
mov
xchg
xchg
leave
jnp
rcr
mov
dec
cmp
sarb
pop
lcall
aas
cmp
sbb
idivl
mov
pop
insl
into
and
add
add
xchg
cld
inc
add
and
adc
xor
std
test
add
lods
jl
add
pop
sub
mov
aad
push
popa
jl
lahf
test
scas
int3
inc
adc
adc
fwait
dec
add
add
mov
sub
add
add
xchg
and
cmp
loope
mov
add
or
test
jle
add
ja
bound
inc
add
xorl
xlat
jle
mov
add
add
in
mov
or
lea
cmp
add
xor
popa
push
push
int3
shl
test
mov
ret
jno
mov
jmp
lods
pop
xchg
rolb
pop
repnz
push
mov
cs
les
decb
sbb
add
add
add
add
or
mov
mov
add
clc
cwtl
xor
mov
jno
loopne
cld
loopne
lock
add
add
adc
pop
and
xlat
jmp
and
mov
cmp
mov
push
dec
add
add
xchg
imul
xchg
pop
mov
xor
or
es
sub
mov
loopne
dec
ja
scas
std
pop
or
cmp
inc
add
add
pop
scas
and
add
add
stos
push
insl
gs
pusha
add
lcall
push
push
rcrb
add
add
leave
sub
push
sub
and
mov
lret
dec
pusha
add
add
mov
and
or
mov
negl
js
outsb
and
cmc
dec
lock
mov
push
mov
cmpsb
push
aad
lds
ja
push
imul
add
lea
mov
add
add
test
nop
mov
in
mov
pop
push
lcall
insl
pushf
cmpsl
out
adc
xchg
sub
jae
sbb
mov
mov
icebp
mov
mov
mov
add
hlt
mov
xlat
aaa
lea
mov
xchg
add
add
inc
add
add
enter
mov
fidivrs
add
add
pop
sub
xchg
add
add
dec
mov
outsb
test
gs
bound
add
add
pop
sub
or
add
jns
add
add
push
push
xchg
mov
sbb
pop
dec
push
adc
jno
pusha
add
fstp
adc
mov
adc
xchg
call
mov
inc
or
pop
cmp
lods
test
push
mov
add
push
pop
inc
add
xlat
fsubrl
jge
ja
jne
jo
pusha
add
jb
pusha
add
adc
adc
imul
add
sub
push
inc
sub
mov
mov
jb
sbb
add
and
add
push
icebp
adc
dec
add
add
cmpl
add
ret
adc
imul
movsb
cli
xchg
pop
sub
add
mov
shrl
pop
add
mov
gs
mov
add
pop
insl
or
add
dec
add
mov
jbe
icebp
adc
sti
mov
push
lds
xor
das
in
vpunpcklwd
add
mov
mov
enter
scas
fistps
stos
jnp
adc
adc
add
add
push
sub
add
add
and
mov
inc
inc
std
inc
outsl
lock
add
movsl
int3
call
test
lods
xchg
outsb
push
pop
mov
xor
mov
mov
add
sbb
and
add
add
dec
loope
jnp
and
xor
mov
cs
cmp
movsb
sbb
xlat
sub
add
add
mov
stc
mov
cmp
cli
fcomps
rcrb
mov
push
repz
scas
mov
and
add
add
add
sti
mov
arpl
shlb
pushf
out
fwait
jno
add
add
gs
lds
mov
stos
mov
pop
insl
cmpsb
add
repz
ja
cmc
adc
stos
stos
cmpsb
scas
sub
mov
add
add
js
dec
fucomip
push
pushf
ja
jge
mov
and
add
add
les
call
mov
pop
mov
and
jbe
dec
dec
sbb
mov
cs
xor
mov
mov
jg
and
add
add
lods
lret
push
std
test
ret
js
divb
push
dec
dec
sub
and
lahf
gs
rcl
lock
add
add
orb
add
add
es
scas
push
push
xor
pop
ljmp
scas
or
add
add
add
inc
ss
shll
sub
mov
add
add
xchg
pop
push
jbe
add
scas
mov
iret
jecxz
mov
jb
shlb
or
jmp
lcall
test
cltd
pop
mov
add
jns
pop
adc
and
sub
add
add
out
jns
add
comiss
or
cmp
mov
push
pop
push
sbb
xchg
cli
rcrl
add
pop
imul
add
dec
push
dec
add
add
outsb
mov
mov
dec
xor
repz
std
enter
mov
arpl
or
popa
jne
sbb
mov
sbb
jmp
add
lods
lods
xchg
cmp
clc
dec
dec
enter
pop
ret
add
or
mov
add
cmc
push
or
xchg
loope
popa
mov
jp
or
loop
rorb
add
data16
add
add
in
jnp
add
add
int
mov
add
add
add
add
add
add
add
pop
sbb
pusha
add
add
test
shrb
pop
pop
cmp
sahf
mov
out
movsb
icebp
ficomps
mov
mov
or
outsl
mov
push
mov
mov
xor
adc
cmp
cli
mov
and
or
add
add
ds
lock
add
mov
add
add
stos
in
lret
inc
add
add
in
pop
sbb
add
cmp
xchg
cmpsl
pop
xor
icebp
fdivrs
inc
add
push
cld
test
jl
sub
jmp
das
xchg
jge
outsl
cwtl
dec
test
add
add
add
jle
push
dec
push
sbb
mov
pop
clc
xor
fsubs
mov
inc
mov
and
mov
rcr
mov
cmp
popa
popa
popa
hlt
push
lods
mov
jmp
ror
or
in
push
adc
mov
shrl
mov
push
test
ss
pop
jg
xor
mov
xor
iret
pop
mov
add
sub
inc
pop
dec
dec
cs
sbb
add
and
mov
add
add
adc
cmp
mov
gs
pop
and
loopne
sbb
mov
dec
gs
lods
popf
push
cmp
sub
jns
fisttpll
push
pop
out
cmp
hlt
pop
lds
jae
adc
dec
add
add
cmp
mov
add
add
movsb
sub
out
pop
neg
fcmovne
xchg
call
sub
mov
adcb
add
and
mov
ffree
pushf
loope
xor
mov
add
jb
sbb
add
xor
scas
test
lods
mov
leave
sbb
adc
sub
add
add
pop
pop
dec
sbb
lds
add
sub
test
xchg
test
dec
leave
lea
push
sarl
daa
daa
in
sarb
movsl
push
and
mov
pop
fcom
enter
mov
insl
out
sbb
test
mov
xchg
adcb
subl
push
ret
sbb
adc
je
lods
dec
pushf
inc
movsl
mov
call
add
add
adcb
push
mov
add
add
and
add
add
stc
cmp
test
jp
fisttps
add
dec
sub
leave
mov
shl
das
inc
push
mull
repnz
jmp
sbb
data16
add
dec
dec
add
add
or
ja
add
mov
ds
xor
insb
add
add
ret
jmp
js
inc
xchg
outsb
cmp
jo
xor
mov
dec
imul
lds
mov
cltd
sub
mov
in
lods
stos
lods
sub
mov
mov
pop
xchg
lcall
sbb
sbb
and
cli
fmuls
add
sub
and
mov
add
add
mov
jns
inc
and
add
add
push
cmpsl
aad
fwait
or
push
jl
pop
cwtl
adc
inc
add
dec
xchg
out
pushf
pop
push
not
or
mov
in
outsl
out
add
add
add
mov
or
adc
repz
repnz
aad
add
add
pushl
lcall
add
push
outsl
fldt
test
cmp
sub
cmpsl
pop
roll
mov
jo
insl
jecxz
lea
add
pop
js
mov
cld
movsb
dec
pop
imul
and
jg
loope
push
and
stc
scas
jo
pop
lret
push
mov
add
push
mov
loop
dec
add
add
add
add
roll
imul
add
fnsave
push
jmp
out
xorl
or
or
jno
ds
lds
pushf
mulb
add
push
sub
pop
sahf
insl
es
jle
data16
push
cli
mov
in
sti
cld
nop
frstor
add
add
jl
clc
insb
add
pop
inc
mov
add
add
pop
cmp
add
lcall
dec
movsl
and
add
add
adcl
push
cld
ja
mov
std
repz
mov
cmp
xchg
loopne
notb
adc
sahf
adc
adc
jl
add
add
xchg
insl
and
add
mov
add
mov
add
add
inc
mov
loope
jne
mov
add
add
mov
pushf
inc
or
mov
add
add
mov
add
add
add
add
lret
xchg
adc
add
add
decb
sarb
inc
aad
movsl
push
cmp
dec
xchg
and
add
add
add
add
pop
and
sarl
movsb
xorb
dec
xchg
jne
lock
popa
loopne
add
add
xchg
push
jmp
add
sbb
xor
in
out
icebp
sub
add
mov
add
add
jmp
add
repnz
jp
xchg
sub
add
add
fld
dec
cmp
sar
mov
cmp
in
add
add
mov
pop
sub
mov
idivl
dec
cmc
sub
addr16
addb
lods
cmpsb
mov
outsl
test
add
add
es
sub
add
add
loope
mov
inc
sbb
add
or
pushf
push
mov
mov
lods
les
call
pusha
add
int
dec
add
add
and
shl
ljmp
adc
cmp
loopne
mov
push
fidivs
push
in
rol
jecxz
and
pop
mov
inc
add
add
cmpsl
sarb
lcall
cmpsl
test
add
sti
testb
add
mov
mov
movd
add
add
or
mov
jb
add
xchg
aas
js
jnp
mov
and
mov
xchg
pop
jg
out
sub
add
add
xchg
scas
xchg
or
mov
mov
sub
into
mov
jae
cmp
test
add
xchg
or
xor
sbb
test
ja
stos
les
mov
test
adcb
xchg
cmpb
lea
lods
sub
add
add
mov
inc
add
add
psubd
mov
mov
sbb
mov
or
add
add
movsl
mov
outsl
cmp
cmc
andb
add
mov
enter
or
mov
icebp
sub
add
add
test
out
mov
add
add
ret
sbb
push
mov
push
sbb
add
add
add
test
jae
add
add
jno
push
adcl
pop
xchg
add
inc
add
add
sahf
mov
add
add
xchg
into
jo
insl
push
out
sbb
or
mov
mov
cld
jge
and
stc
jae
scas
mov
fnstenv
xchg
incl
mov
orl
add
sbb
add
xchg
addb
cmpsl
sbb
cmpsl
nop
sbb
bound
xor
push
decb
add
add
rol
pop
cmp
jno
jbe
and
mov
scas
adc
into
xorl
sub
dec
bound
push
inc
inc
add
add
jg
clc
mov
add
push
or
mov
jno
xor
cmp
add
pop
imul
inc
add
add
dec
dec
and
add
add
loopne
dec
jge
test
aaa
movb
add
fimuls
pop
sahf
and
adc
push
call
pop
fld
push
push
popa
add
ljmp
sahf
mov
add
add
mov
dec
xchg
loop
cmp
add
mov
movsb
insl
stc
dec
loope
or
or
add
sub
pusha
add
add
add
dec
or
je
mov
movsb
add
stos
shlb
adc
icebp
adc
xor
sub
mov
bound
add
add
enter
and
enter
sub
add
dec
jo
pushf
outsb
cmpsl
or
add
add
xchg
lock
rorb
add
add
mov
ljmp
add
int3
lea
sub
mov
int3
mov
leave
mov
mov
add
dec
push
adc
dec
cli
mov
add
or
ja
subl
adc
mov
test
push
push
and
mov
add
add
ljmp
jae
inc
mov
rcrb
jb
jp
cwtl
lea
dec
gs
jns
fisubrs
ffree
adc
add
icebp
rcl
pushf
pop
xor
cs
add
mov
insl
repnz
push
mov
add
mov
negl
sub
sbb
cltd
rcrl
cmp
add
sbb
icebp
jecxz
jecxz
movsl
add
cli
mov
fisubrs
and
cwtl
cmp
add
add
xor
jmp
pop
icebp
sub
add
push
xchg
mov
push
cli
wbinvd
subb
sub
xor
push
cli
mov
cbtw
bound
add
mov
pop
addb
outsl
std
mov
add
and
in
xchg
add
test
shl
add
push
or
shl
adc
stc
divl
add
mov
fsubl
inc
loopne
loop
mov
mov
je
stc
adc
popa
mov
jo
sbb
test
push
mov
and
mov
ret
loopne
lcall
sub
jno
mov
testl
movsl
or
sub
mov
add
and
add
add
push
inc
add
add
call
aas
cmp
or
mov
ja
xor
test
add
add
lods
dec
add
add
or
dec
add
sbb
iret
fbld
add
int3
in
mov
in
leave
mov
add
or
scas
imul
pop
and
add
add
or
or
and
mov
adc
add
mov
outsb
pop
rcr
dec
dec
or
mov
adc
cmp
in
mov
mov
add
lcall
add
aas
push
xchg
stos
sub
sbb
pushl
rcr
mov
je
icebp
dec
mov
sbb
cmp
sahf
in
sbb
cmp
jne
rcl
rorl
add
cmp
shll
int3
sbb
add
push
jns
std
jne
arpl
add
jecxz
mov
cwtl
inc
add
xor
pop
dec
lock
mov
push
ret
hlt
lds
pop
popf
in
or
js
mov
andb
mov
nop
pop
leave
or
and
mov
or
mov
mov
inc
add
jnp
push
adc
aad
mov
rcrb
cltd
mov
in
mov
loop
mov
in
jmp
mov
pop
je
mov
add
pop
stc
mov
pop
js
xchg
pop
jno
jnp
adc
mov
xchg
push
cs
das
and
mov
sub
mov
lds
jmp
in
xor
mov
pop
rol
add
add
xor
sbb
jecxz
rorb
jge
pushf
mov
mov
add
add
inc
popf
mov
cltd
sbb
mov
and
inc
add
add
add
add
mov
sub
stos
cmp
pop
test
cltd
and
lret
js
popa
call
out
dec
cmp
inc
mov
imul
cltd
add
and
pop
pusha
add
add
lock
dec
pop
ljmp
jg
test
add
cli
cwtl
insb
add
add
xchg
outsl
sub
mov
sbb
add
or
cmpsl
xchg
push
iret
cmp
nop
sub
jecxz
jecxz
add
add
add
std
lds
jl
lea
shlb
xor
or
pop
fistpll
adc
fadds
mull
adcl
ret
mov
in
shr
xchg
fildl
add
insb
add
add
xor
push
add
add
add
insl
add
add
add
add
ret
rcrl
sub
add
pop
mov
outsl
popf
nop
andb
add
add
cmp
jo
add
add
add
sbb
adcb
sub
push
cmp
push
cs
or
adc
jns
push
sbb
xchg
sub
add
aad
lahf
es
add
ja
lret
sbbl
mov
jns
and
clc
jns
add
add
dec
or
add
and
add
adc
shl
mov
cmp
clc
or
push
dec
add
add
sbb
add
jmp
add
add
add
pushf
pop
adc
int3
aam
sub
imul
scas
out
arpl
les
add
and
mov
or
mov
iret
sbb
ret
pop
sub
push
sbb
je
shl
les
mov
clc
jecxz
daa
add
xor
mov
pusha
add
add
and
dec
mov
cmc
fcomps
sbb
mov
cltd
pop
adc
fcompl
lods
lcall
add
mov
add
add
add
lahf
popa
mov
inc
add
add
iret
pop
and
push
jmp
lea
addr16
loop
sbb
mov
add
add
lods
addb
add
add
popa
dec
ret
mov
push
add
mov
add
push
into
jge
sub
mov
mov
sub
xor
add
fistpll
adc
mov
jge
mov
jmp
add
lea
add
jbe
daa
cwtl
mov
mov
out
add
imul
push
pushf
adc
das
push
fidivrs
jne
mov
sbb
pop
pusha
add
pop
aam
loopne
gs
adc
pop
stos
dec
cmpsb
and
fsub
lods
push
outsb
iret
push
jp
mov
mov
mov
inc
mov
fldcw
mov
add
inc
lods
incb
add
add
jg
jle
clc
push
lea
shll
xchg
popf
mov
add
xor
dec
mov
inc
add
ret
add
and
add
mov
jns
or
or
adc
add
mov
out
mov
add
cmp
in
out
into
add
out
fnstcw
lods
cmc
mov
inc
test
push
sub
test
add
mov
negl
sub
es
pop
sbb
mov
pop
lahf
shrb
push
jnp
loop
test
push
push
ljmp
sbb
sbb
inc
scas
adc
ja
add
add
mov
add
mov
push
xor
push
test
pop
dec
mov
out
ja
pop
shlb
ret
xor
lods
cmp
pop
xlat
into
sbb
adc
loope
aad
sbb
cltd
adc
pop
and
mov
push
add
mov
cmp
add
in
pop
jl
mov
mov
mov
adc
add
rcrb
ret
icebp
add
imul
cmp
add
add
mov
push
sti
call
adc
inc
repnz
out
ss
popa
aam
and
add
add
mov
enter
pushf
push
push
xlat
inc
andb
add
mov
and
xor
loop
das
push
mov
lock
mov
jle
cmp
sbb
inc
repz
xchg
mov
fnstenv
add
add
mov
dec
sbb
adc
aad
mov
mov
add
add
sub
add
add
add
insl
or
add
add
push
add
push
jo
mov
mov
pop
lcall
add
add
sbb
add
sub
add
add
push
cld
adc
and
add
add
xchg
xchg
cmp
mov
add
mov
add
add
add
add
mov
add
adc
mov
mov
cmp
or
push
pusha
add
or
enter
lahf
mov
add
movsb
stc
push
or
mov
pop
pop
lock
adc
gs
call
mov
dec
add
add
jno
mov
idivb
mov
mov
xor
adc
lods
in
test
fscale
cmp
push
mov
inc
add
add
leave
adc
pop
push
xchg
jb
adc
ret
dec
fildll
jle
pop
xchg
pop
jb
out
rcll
push
sbb
mov
inc
add
add
xchg
lret
lret
mov
add
pop
push
add
insb
add
insb
add
add
add
xor
data16
mov
xor
sub
mov
sarl
jecxz
cmp
inc
es
and
cld
xrelease
movsb
lcall
add
push
sub
mov
and
add
add
sbb
add
add
icebp
xchg
cmp
inc
mov
enter
or
add
add
cmp
js
mov
das
inc
add
cltd
mov
adc
rcrb
add
pop
xchg
mov
call
push
add
mov
aas
and
cld
rorb
shl
rorb
icebp
add
mov
dec
add
ror
pop
lcall
pop
iret
add
xor
xlat
fwait
enter
cmp
inc
add
add
add
mov
pop
sub
flds
into
stos
pop
jecxz
pop
into
add
pop
inc
mov
add
jmp
add
push
xchg
adc
cli
sub
mov
stos
loopne
into
sub
sbb
fstps
add
add
pop
sbb
test
daa
dec
leave
loop
ds
mov
dec
fsubrl
mov
js
mov
push
sub
sti
inc
mov
scas
nop
sti
mov
dec
xor
mov
mov
gs
mov
xchg
sbb
icebp
mov
lea
mov
inc
stos
xor
call
xchg
inc
or
cmp
add
add
add
mov
mov
out
push
aas
push
mov
out
add
or
mov
mov
push
xchg
push
add
add
add
dec
mov
inc
mov
pushf
sub
add
add
popf
xor
xor
daa
push
jb
xchg
inc
jnp
sub
roll
lock
add
mov
loop
add
push
push
aam
push
xor
enter
add
fsubr
test
imul
cld
test
mov
cli
push
mov
jne
insl
adc
mov
outsb
js
movsl
stos
jae
add
sub
add
add
lcall
jno
pop
aam
cmp
fmull
add
popa
fimuls
sub
mov
bound
add
add
mov
xorl
data16
in
xchg
les
mov
push
imul
cmpsb
jnp
push
push
or
mov
and
add
add
outsl
push
pop
daa
lahf
push
jo
add
mov
jae
fcoml
xlat
or
clc
and
stos
repz
mov
js
movsl
jnp
add
xchg
mov
jae
addr16
sti
bndstx
sahf
add
mov
add
add
nop
sbb
inc
add
add
fstpt
jg
popf
xchg
dec
add
add
ret
addb
insb
add
add
add
dec
cmp
or
idivb
add
push
inc
stos
xchg
add
or
test
xchg
inc
add
add
shlb
add
pop
mov
add
mov
mov
test
xchg
push
mov
xchg
and
mov
sbb
dec
push
dec
add
in
rcll
sarb
add
mov
dec
jl
lods
cwtl
sbb
out
je
in
sbb
mov
test
js
mov
adc
adc
or
imul
inc
add
add
xchg
xchg
mov
lock
add
add
les
add
add
movsb
or
gs
loope
es
outsl
pop
xor
mov
ds
mov
dec
add
sub
add
add
add
push
es
lret
adc
insb
add
add
add
jo
add
and
add
sub
add
add
or
lods
inc
and
mov
push
aaa
add
push
mulb
ljmp
add
adc
ret
fidivrl
dec
hlt
mov
or
mov
mov
or
add
add
stc
scas
mov
jg
and
mov
push
sbb
push
cmp
push
and
sbb
xor
add
sbb
test
aaa
adc
stos
pop
xor
popa
lcall
mov
xor
pop
das
sub
aad
push
inc
add
pop
testb
add
jl
pop
out
dec
sub
loope
add
addr16
adc
dec
add
add
cmp
mov
add
push
xchg
lret
lahf
adc
inc
aaa
push
jo
fisubrl
add
add
push
xchg
cli
mov
xor
mov
in
popa
fcmovnu
dec
cld
xlat
sub
add
add
jl
push
push
cld
gs
add
cmp
mov
dec
mov
mov
xchg
dec
add
std
fnsave
adc
mov
loop,pt
int3
stos
adc
test
push
pop
cmp
aad
fwait
enter
push
and
mov
hlt
movsb
loope
fisubrs
mov
mov
stc
call
xchg
mov
jae
push
ljmp
mov
shrl
add
add
shlb
add
add
add
js
lods
mov
push
ljmp
add
out
movb
mov
add
jnp
leave
mov
pop
push
pop
sbb
inc
stos
sbb
sbb
sub
add
add
xor
sbb
jb
addb
xchg
push
dec
mov
add
sub
jp
leave
push
xor
je
lds
std
dec
movsl
xchg
pop
faddl
add
add
add
inc
add
add
orb
pop
jb
mov
add
push
insl
xchg
imul
add
add
cltd
lea
add
add
nop
mov
repnz
xlat
shlb
repz
fsubl
add
and
or
push
mov
sbb
test
into
in
fadds
add
add
dec
adc
repz
or
popa
daa
add
add
pop
or
mov
adc
mov
add
mov
adc
out
jecxz
xchg
aas
out
call
adc
js
jge
das
inc
enter
cmpsl
lods
inc
add
add
mov
add
add
dec
jge
mov
add
mov
shl
push
js
mov
add
mov
dec
add
add
push
adc
js
xchg
cmpb
add
add
add
sbb
mov
out
cmp
jg
sub
pop
jns
add
add
fcmovbe
mov
cmpsl
xchg
sbb
mov
loope
jo
int
add
add
sub
dec
jl
sbb
fdivr
movsb
xchg
cmpl
mov
loopne
add
fldcw
sbb
push
xlat
mov
test
push
adc
addb
mov
add
add
add
cmp
ljmp
add
add
incl
aam
cmp
movsl
mov
imul
add
sbb
add
add
rclb
xchg
int
fdivl
or
mov
popa
cmp
out
subb
test
shlb
push
pop
sahf
push
lock
sub
call
adc
add
cmp
lock
add
mov
shr
addb
js
dec
aad
loop
mov
xchg
sahf
or
mov
mov
cmp
out
insl
jno
mov
cmp
loop
jge
xorb
add
popf
dec
vaddss
mov
push
push
add
mov
mov
sbb
inc
add
adc
sub
mov
lock
add
add
inc
dec
ror
subb
pop
std
fwait
test
sti
subl
mov
add
daa
mov
inc
cmp
add
add
push
pop
ja
insl
adc
rcl
xchg
roll
add
add
jmp
inc
add
add
mov
test
add
sahf
nop
lret
jo
dec
adc
add
add
push
icebp
mov
push
fst
aam
add
add
lret
es
xor
stos
jp
lcall
sub
in
rorb
add
add
sub
mov
ljmp
pusha
add
add
fcom
inc
mov
das
and
inc
add
xor
sub
or
add
or
add
add
or
sbb
sub
mov
insb
add
add
icebp
jp
adc
popa
sahf
adc
movl
shll
repnz
cmp
ret
mov
dec
xchg
inc
jne
pushf
push
jmp
ja
and
mov
mov
jne
popa
lret
sub
mov
je
cmp
cmp
inc
adc
je
lods
and
mov
add
mov
mov
cs
cltd
pusha
add
xor
mov
or
out
sarl
inc
cmpsl
cwtl
shrl
push
mov
and
add
dec
mov
push
je
mov
mov
add
add
xor
fadd
decl
fsubrs
add
add
add
add
adc
cmp
je
add
mov
or
pop
push
lahf
add
add
pushf
mov
add
mov
imul
add
pop
popa
aaa
cwtl
ds
aaa
cmp
cmp
cld
insb
add
add
jb
cld
cli
push
dec
mov
mov
jns
jno
cmpb
add
add
repz
cltd
repz
mov
xchg
mov
add
inc
sahf
and
mov
cmp
dec
and
add
add
add
adc
xchg
lods
daa
out
enter
push
and
sub
add
adc
rcrl
pop
add
add
add
mov
emms
adc
iret
push
rcl
callw
mov
xor
push
xor
mov
rcrb
mov
jmp
mov
push
mov
add
andb
add
sahf
xchg
adc
dec
add
add
outsb
fwait
sbb
mov
hlt
and
add
add
mov
aam
push
into
call
add
mov
jmp
lds
mov
mov
add
gs
pusha
add
cmp
jge
loopne
sbb
xchg
xchg
mov
cmpsl
in
fsubs
adc
in
add
add
add
mov
add
push
clc
int
outsb
cwtl
cvtdq2ps
or
add
mov
add
sub
faddl
push
add
add
add
pop
cwtl
cmpsl
xchg
lret
mov
xorl
xchg
xchg
xchg
lret
orl
scas
xchg
lret
mov
frndint
enter
ja
lock
cld
iret
or
mov
add
add
xchg
or
loope
add
add
clc
fisubrs
add
add
stc
in
cld
sbb
sub
rclb
add
add
je
add
add
ds
jl
and
jle
fiaddl
mov
add
je
ror
push
cmc
mov
pop
cmp
nop
jecxz
sbb
cwtl
xchg
or
add
add
dec
add
add
addr16
add
pop
idivl
xchg
das
aas
push
sahf
fdivl
aad
add
add
cli
inc
add
or
add
pop
add
add
cltd
dec
xor
lahf
add
mov
out
pop
shlb
nop
mov
add
cwtl
mov
test
lods
xchg
movsl
test
push
in
pushf
mov
mov
into
sub
mov
jmp
lea
in
adc
pop
cmp
add
mov
imul
add
sbb
cld
xchg
mov
mov
dec
mov
sbb
add
add
push
ljmp
aas
cmc
push
jnp
push
ss
mov
add
inc
lds
inc
mov
mov
add
sbb
inc
add
add
add
xorb
hlt
mov
mov
dec
icebp
jns
movsb
insl
push
pop
adc
not
sbb
pusha
add
add
xchg
sub
mov
xchg
pop
inc
push
or
add
add
jae
outsl
aaa
xchg
imul
pop
xchg
or
or
shrl
into
push
jge
jmp
mov
cmpsl
xlat
sub
clc
test
jecxz
add
add
popa
mov
push
dec
push
add
test
sbb
cmp
push
sbb
dec
inc
add
add
add
cmp
add
lods
mov
cmp
add
add
mov
push
mov
and
data16
and
add
add
mov
enter
shll
add
add
mov
mov
sub
add
add
or
fisubs
insb
add
add
sbb
add
add
movsb
out
xchg
and
add
jne
xchg
cmp
jmp
mov
rcl
mov
or
mov
jne
adc
shlb
pop
adc
add
push
repz
daa
mov
dec
xor
add
add
shlb
add
cld
sub
add
add
adc
shl
mov
add
push
fstp
sbb
mov
cmpsb
mov
xor
adc
cmp
fwait
das
or
add
xor
jge
adc
rcrb
out
mov
add
add
xlat
and
add
add
aam
add
xchg
mov
rcll
aad
call
pop
xor
mov
push
enter
mov
xchg
jl
cmp
add
add
ss
xchg
xchg
mov
icebp
push
add
ret
loope
lret
sbb
cli
mov
mov
imulb
inc
mov
mov
and
mov
mov
jp
sbb
add
mov
and
xor
pusha
add
add
pop
adc
pop
add
sbb
push
push
add
aad
and
fisubrs
and
out
out
in
push
pop
mov
pop
dec
sahf
movsl
js
or
add
add
arpl
sti
sub
mov
gs
sub
add
add
lock
insb
add
add
inc
inc
add
add
mov
add
jecxz
or
mov
add
add
ror
cmpsb
test
jb
add
mov
rsm
sub
in
inc
bound
movsb
test
cli
cmp
add
and
add
mov
dec
cmp
add
jne
fstpt
add
add
ficompl
outsl
inc
xor
xlat
nop
call
ja
sbb
arpl
push
push
push
or
add
add
add
pop
test
cmp
das
fptan
mov
fbstp
xchg
jnp
jnp
add
add
push
sub
push
out
stc
mov
insb
add
add
aas
aad
mov
mov
inc
loope
movsl
bound
in
and
add
add
fcomp
pop
and
add
fadds
add
xlat
mov
loopne
sbb
leave
movsb
adc
rcrb
hlt
add
add
add
add
dec
add
fisubrl
add
add
add
mov
mov
or
aam
rclb
enter
sti
int3
dec
dec
arpl
xchg
les
or
loopne
cwtl
sbb
sub
roll
pop
scas
ficompl
add
jne
add
add
add
add
rorl
push
pushf
and
add
rorl
add
fsubrl
es
push
mov
add
add
fldl
add
add
jns
les
add
cmp
mov
std
sub
add
jg
cmp
sub
add
inc
insl
ss
pop
fisubrs
add
add
das
out
mov
aam
repnz
add
add
add
add
add
pop
loopne
in
sbb
insb
add
xor
ret
jl
lcall
jmp
inc
sub
add
add
repnz
fbstp
mov
ds
push
jno
jb
add
add
sub
pop
addr16
add
add
mov
imul
xchg
pop
lea
inc
into
or
add
cmp
in
lock
add
add
out
push
insb
add
add
push
push
shrl
mov
repnz
cli
insl
xchg
sbb
and
add
add
add
add
pop
sub
add
add
call
cmp
add
add
shlb
in
sbb
fstl
sbb
fmull
xor
add
add
cmpsb
popa
dec
add
add
inc
sub
add
add
cltd
xchg
lahf
jl
add
add
data16
jg
inc
or
cmp
or
add
add
xor
jle
jbe
jo
mov
push
jb
jge
pop
jnp
add
leave
push
push
shlb
sbbl
lods
repnz
lock
or
add
add
adc
popf
mov
sbb
adc
setb
add
xchg
roll
leave
jne
xchg
inc
xchg
loop
je
lods
dec
movsl
xchg
mov
add
add
mov
jmp
xchg
test
sub
add
add
mov
loop
cmp
add
pop
das
push
xor
adc
jbe
add
mov
push
jns
add
inc
jno
mov
xor
add
add
fsubrl
dec
jbe
gs
sbb
faddp
cmp
sbb
pop
subb
push
movsl
dec
and
xchg
out
xchg
mov
or
push
insl
test
mov
cs
outsl
test
xchg
pop
xor
inc
int
shl
dec
cmc
xchg
sti
mov
pop
into
mov
jnp
adc
push
into
mov
dec
dec
mov
call
add
iret
popf
sub
xchg
mov
jnp
push
aam
mov
add
gs
js
call
and
add
outsb
add
and
push
dec
add
lret
add
add
imul
add
add
add
pop
and
add
add
jp
sbb
imul
enter
ljmp
or
add
add
add
xor
push
mov
add
add
add
inc
inc
push
dec
mov
movsb
add
add
mov
jl
xchg
add
pop
mov
pop
je
icebp
xchg
daa
add
add
mov
mov
mov
mov
mov
mov
int3
jno
negb
imul
mov
sub
push
call
testb
outsl
cmc
sub
add
das
mov
and
mov
in
jecxz
repnz
shr
out
jno
test
mov
repz
mov
leave
scas
jecxz,pn
lds
jmp
mov
sbb
outsb
lahf
push
add
xor
add
add
add
add
scas
filds
mov
adc
ret
add
add
movsl
or
jecxz
lock
int3
or
add
add
cmc
roll
inc
add
add
stos
inc
add
jge
in
jnp
add
scas
and
stos
loopne
fsts
incb
inc
loopne
add
xlat
test
pop
xchg
lods
aaa
dec
add
add
ljmp
pop
adc
pop
xchg
cwtl
shll
jae
jno
imul
adc
mov
mov
filds
shll
jne
aaa
mov
push
add
add
add
sti
push
xchg
adc
add
icebp
daa
enter
psubsw
mov
pusha
add
ja
sbbb
mov
xchg
and
hlt
xor
add
add
pushf
lret
xor
sbb
je
aas
hlt
movsb
outsl
popf
popl
add
pop
mov
mov
hlt
add
pop
mov
pop
mov
add
out
push
jmp
add
rorl
popa
cmp
add
add
jecxz
out
mov
xor
sbb
mov
aaa
rclb
out
push
into
dec
add
mov
test
clc
sub
mov
shl
out
adc
call
add
pop
xor
addl
add
bound
add
add
adc
sbbl
in
call
mov
jmpw
and
add
add
dec
add
add
subl
add
mov
add
add
out
mov
movsl
add
sti
aas
js
dec
sub
add
push
in
xchg
pop
xchg
out
add
bound
mov
add
add
ss
cmp
cld
sbb
ss
test
out
xchg
icebp
cli
mov
inc
add
add
test
add
add
add
enter
jno
and
add
xchg
add
pop
adc
add
add
push
pop
inc
add
add
mov
add
enter
sub
mov
add
pop
inc
sbb
cmp
push
es
push
lds
push
adc
or
mov
loop
sub
mov
pop
xchg
out
add
dec
or
lea
mov
mov
insl
test
pop
jle
into
jl
es
in
jo
lret
cmp
repnz
and
aad
jae
xor
ljmp
pusha
add
add
adc
push
fldt
push
lock
inc
test
and
add
add
xlat
dec
add
add
rorb
add
mov
pop
and
and
add
mov
add
mov
mov
pushf
test
pop
lds
add
add
icebp
cs
fsubrl
add
add
add
mov
add
mov
add
shll
add
add
daa
add
repz
mov
jb
insl
inc
int3
pusha
add
add
idiv
xchg
jle
cmp
out
mov
push
shll
and
add
add
loope
add
and
add
add
xchg
cmpsb
sti
call
sub
mov
movb
in
xor
add
pop
or
or
add
mov
cmpb
jo
cmp
mov
mov
xchg
cmp
pusha
add
add
stos
stc
data16
mov
add
add
movsb
xchg
push
fadds
add
add
pop
mov
add
add
add
add
fwait
roll
loopne
pop
and
add
add
push
or
mov
call
cmp
lret
ss
push
add
cmpsb
leave
sbbb
add
jle
push
or
mov
cmc
cmp
add
or
add
loopne
add
add
add
movsb
test
inc
outsb
scas
mov
sbbb
sub
and
mov
mov
push
cmpsb
insl
inc
or
jo
jecxz
js
sahf
fcomps
imul
je,pt
sbb
loop
push
mov
add
xchg
imul
mov
sub
popa
push
outsb
data16
inc
push
les
mov
pop
repnz
sub
or
pop
mov
push
fdivs
rorl
xchg
test
add
add
in
dec
insl
ret
fwait
ret
js
mov
add
in
mov
xor
push
outsb
sub
mov
mov
sub
add
add
jae
adcb
add
add
push
mov
out
xchg
test
inc
adc
stos
sbb
add
into
sbb
add
jne
test
pop
daa
cmp
push
adc
xlat
cmp
mov
inc
mov
cmp
clc
cwtl
pop
iret
testl
add
add
sbb
ret
rol
icebp
mov
shll
repz
mov
scas
or
xchg
sub
mov
rcr
mov
add
add
or
add
add
cltd
jo
data16
sbb
add
add
lods
push
add
nop
int3
mov
pop
hlt
add
mov
lods
push
pop
cmp
cmp
push
enter
xchg
sub
js
add
mov
jae
and
add
or
adc
mov
push
add
mov
add
add
out
sti
adcl
sub
stos
xor
cmp
js
cli
mov
dec
movsb
and
mov
add
cltd
mov
dec
mov
add
add
dec
sub
sbb
in
add
xchg
imul
in
clc
pop
xlat
xlat
hlt
pop
frstor
add
cwtl
cli
call
mov
push
fimull
cs
mov
lret
fcom
or
adc
add
mov
add
add
add
inc
add
popf
or
loopne
mov
add
add
add
push
jo
add
add
jle
cmp
push
pop
adc
div
pop
sbb
cmp
pop
dec
add
add
shlb
andb
add
add
add
add
add
pop
pushf
loopne
jno
scas
les
add
dec
lret
in
repz
addr16
pusha
add
add
mov
add
clc
mov
sar
add
jno
outsb
bound
xor
add
lods
mov
gs
and
jge
mov
fsubl
jne
and
add
add
int
or
add
add
adc
pop
xor
flds
mov
mov
bound
mov
sub
adc
fisttpl
or
out
and
add
add
push
add
push
sub
add
add
cltd
cmc
into
leave
inc
ss
sbb
stc
xor
call
jge
or
mov
imul
rcl
icebp
jo
cli
call
mov
mov
in
mov
mov
add
std
popa
xor
hlt
dec
add
mov
sahf
in
mov
add
sbb
jge
sbb
in
mov
add
pop
outsb
ret
adc
rcl
sbb
js
cmpsl
cmp
add
add
push
inc
dec
sub
add
cli
sti
int3
sbb
add
std
leave
int3
push
insb
add
add
dec
fcompl
pop
inc
xchg
les
imul
mov
cld
daa
sbb
push
sub
adc
es
or
add
add
aad
mov
mov
add
add
add
mov
inc
add
lea
push
add
xchg
push
rclb
inc
mov
ret
cmc
loopne
jle
sub
dec
lods
dec
mov
cmp
stos
push
cmpsb
nop
sbb
fstp
sbb
add
pop
mov
pop
dec
nop
insl
cmp
fstp
or
add
add
je
add
add
lahf
jl
xlat
cmp
xchg
repnz
sti
pop
fcmovbe
sbb
in
jmp
bound
and
cwtl
or
sti
cmp
dec
mov
gs
lds
add
push
mov
adc
add
inc
imul
or
mov
push
jge
lret
pop
movsl
pop
xor
movb
xor
jmp
add
add
femms
jo
mov
iret
popf
clc
adc
pushf
int3
dec
add
pop
adc
lret
rorl
jmp
mov
mov
jmp
add
lods
sub
mov
sub
movsb
imul
cmp
out
jno
stos
int3
mov
sbb
test
mov
rolb
es
pop
jmp
add
mov
pop
test
dec
mov
pop
mov
inc
add
mov
pop
mov
fstpl
out
add
push
pop
pop
out
xchg
das
pushf
mov
add
add
mov
xor
jle
mov
add
pop
fisttps
add
push
outsl
mov
sub
mov
inc
add
or
xor
mov
mov
das
cs
jne
pop
lcall
addr16
sbb
push
maskmovq
dec
push
pushl
rcrb
mov
insb
add
mov
add
add
add
pop
jae
fists
sub
or
xor
dec
sbb
cli
push
lret
mov
aam
sub
mov
mov
push
cltd
jbe
xchg
add
add
test
addl
gs
lock
std
enter
cmp
mov
xchg
cmp
cltd
outsl
or
add
dec
pop
pop
out
int
adc
xchg
fisubl
add
lods
push
nop
jmp
aam
cwtl
jae
rcrl
adcl
pop
pusha
add
aad
inc
mov
jb
ss
out
xchg
sbb
imul
jbe
push
mov
lods
aad
loopne
dec
add
rcr
das
js
and
inc
xchg
mov
add
mov
push
mov
add
add
inc
push
cmp
add
paddusb
js
and
pop
movsb
or
mov
add
add
test
dec
popa
xor
mov
add
mov
add
out
cmp
imul
adc
or
adc
mov
mov
movsb
xchg
xlat
push
jae
sub
pushf
xchg
imul
sub
add
add
add
mov
imul
push
fistpll
pusha
add
add
sbb
xor
test
add
add
arpl
add
sbb
filds
movsl
mov
cwtl
add
add
add
add
add
inc
sbb
add
push
pop
neg
outsb
loope
jne
scas
jl
add
mov
mov
add
push
jnp
imul
xchg
clc
sbb
add
add
setge
mov
dec
add
add
xchg
lock
sub
add
add
repnz
dec
add
add
imull
mov
fwait
icebp
xchg
add
add
add
dec
mov
add
add
sub
xor
aaa
je
pop
dec
out
sti
outsl
aaa
sbb
aad
pop
push
sbb
pop
call
test
in
jbe
pusha
add
add
add
test
mov
js
arpl
inc
lods
dec
pop
imul
adc
xchg
add
rcll
call
add
add
sahf
jecxz
pop
adc
add
cmp
or
faddp
add
add
add
add
cmp
jge
sub
mov
aad
add
add
add
add
add
adc
cmp
dec
in
cmpsl
andl
cltd
sub
in
icebp
test
jae
pop
sub
stos
je
xor
add
mov
lahf
inc
add
add
dec
and
push
rcrb
pop
push
sub
pop
fsubs
mov
mov
add
aaa
in
fdivrl
cmp
stos
adc
add
push
dec
aam
aaa
mov
faddl
add
inc
add
add
sbb
xor
cmc
cmp
adc
cld
enter
add
je
int
pop
fmull
push
add
add
pop
jns
test
popa
movsb
and
or
mov
dec
mov
sbb
scas
mov
data16
mov
and
mov
xor
cli
pop
enter
ja
in
push
mov
sub
add
out
pop
add
mov
lock
icebp
loopne
stc
add
add
mov
xchg
mov
pop
mov
enter
cwtl
scas
mov
add
sbb
scas
pop
gs
enter
add
mov
push
js
test
and
xchg
xchg
sbb
inc
enter
add
cltd
pop
jns
cli
mov
inc
add
mov
add
add
mov
cwtl
inc
leave
in
and
add
add
mov
popf
aaa
xor
stos
nop
imul
lods
push
les
mov
add
dec
incl
mov
lret
dec
sbbb
and
mov
inc
push
push
rorl
aaa
push
or
add
add
add
push
shrl
mov
sarb
add
sub
js
add
add
sbb
add
add
or
add
add
cltd
jge
lret
lea
add
mov
add
add
adc
mov
push
ja
and
addr16
out
lahf
pop
sub
dec
dec
push
les
dec
sub
in
mov
add
js
jle
adc
adc
popa
mov
out
leave
dec
mov
add
xor
mov
jnp
in
bound
add
sbb
mov
jno
pop
out
ljmp
cmp
mov
add
add
mov
add
add
clc
xor
adc
add
add
mulb
mov
add
add
push
dec
cmp
mov
add
inc
add
add
insl
cld
xchg
fmuls
add
add
xchg
cwtl
cmp
adc
mov
lods
mov
imul
add
add
add
add
add
stos
mov
sbbb
add
add
xchg
sti
jb
add
add
xchg
mov
adc
aaa
jae
js
add
push
leave
popa
xor
push
dec
push
fisttpl
in
add
inc
pop
aad
mov
xchg
jecxz
add
add
xchg
push
mov
js
into
in
clc
mov
aas
cs
add
add
js
jecxz
movsb
adc
inc
pop
ret
and
inc
add
mov
sbb
push
jae
pop
add
jp
sbb
test
mov
pop
push
loopne
cmp
jmp
nop
std
popf
insb
add
add
insb
add
pop
cld
ljmp
mov
add
daa
repnz
mov
imul
mov
add
push
repz
cmpl
aaa
add
mov
pop
or
inc
xchg
sub
mov
jg
outsb
mov
pop
jne
outsl
out
jns
outsb
dec
xchg
pop
push
xor
and
add
add
mov
mov
add
test
jmp
jbe
sub
mov
pop
mov
out
rcr
xor
xchg
xor
jo
xchg
mov
in
pop
fldl
add
add
or
add
lret
bound
andl
jne
pop
fisubrs
andb
and
ror
mov
jb
int
mov
out
imul
push
xlat
mov
and
add
add
xor
pop
sub
mov
rclb
in
call
repnz
cmp
add
add
jne
mov
jmp
rcrb
mov
add
add
lods
rol
pop
adc
dec
add
sub
xchg
lods
loop
add
add
xchg
pop
mov
cmp
shrl
add
add
imul
data16
in
aas
sub
mov
addr16
and
xrelease
or
mov
scas
mov
insb
add
add
stos
mov
mov
mov
outsl
and
leave
fcmovb
mov
pop
xor
fmuls
jo
push
fdivp
rcrb
add
add
sub
mov
add
add
movsb
push
pusha
add
add
sbbl
fidivrs
or
push
addr16
add
add
add
or
add
test
sbbb
and
mov
leave
xor
sub
sahf
inc
add
add
pop
mov
add
mov
js
push
repnz
fsqrt
inc
cwtl
cli
and
add
add
mov
cli
pop
sarl
add
add
mov
rorl
jmp
jns
loope
int
add
add
mov
test
lock
les
mov
mov
add
pop
rolb
add
jo
aad
cltd
jg
and
in
rolb
adc
inc
add
add
cmc
xor
popa
mov
push
test
push
mov
add
shr
inc
add
mov
add
add
push
sbb
xchg
inc
mov
add
lahf
imul
mov
mov
sbb
xchg
mov
add
add
addr16
pop
movsl
ja
shll
xchg
xchg
test
cld
loopne
and
add
push
hlt
out
leave
je
sub
mov
add
xchg
rclb
les
jbe
leave
sti
mov
sub
add
sub
movsb
cs
mov
or
add
add
idivb
push
pop
dec
ret
jge
pop
fisubrs
cmp
add
add
lret
or
add
add
or
test
jp
pop
dec
jnp
push
test
sub
inc
add
inc
jecxz
add
add
add
cmp
mov
scas
test
imul
pop
sarb
scas
sbbl
inc
in
cmp
push
or
add
add
add
xor
push
jae
add
dec
pop
pusha
add
add
and
add
xchg
shr
lahf
popf
cld
mov
add
cmpsb
jmp
into
sub
fwait
lods
aas
add
add
add
sbb
icebp
lock
in
adc
add
add
add
lahf
mov
dec
je
jl
or
add
add
add
mov
inc
mov
dec
int3
cmp
lea
rorb
shrb
sbb
jbe
mov
adc
dec
imul
add
add
mov
cmp
add
xor
sbbb
push
and
fwait
in
cmpsb
jbe
mov
add
mov
mov
inc
mov
cltd
push
cmp
test
mov
pop
sbb
mov
into
cmpsb
inc
inc
fisubrl
mov
add
mov
add
sub
lcall
add
ret
inc
pusha
add
add
or
or
mov
add
loope
into
pop
es
out
jae
mov
repnz
mov
and
mov
lds
aad
add
cwtl
xchg
sbb
xor
add
bound
addb
add
cmpb
pushf
mov
mov
mov
and
add
add
inc
fdivr
mov
add
nop
jbe
xchg
inc
push
dec
movsb
dec
aas
icebp
andl
jno
and
xchg
mov
cwtl
inc
cmp
stos
xor
cmp
pop
stos
cltd
cmp
xor
lods
je
xchg
add
xchg
fbld
add
add
out
push
repz
jg
sub
dec
add
mov
add
mov
mov
xor
add
mov
push
lock
mov
mov
ds
xor
mov
aam
adc
adc
out
xchg
add
mov
sbb
mov
mull
inc
sub
je
mov
xor
mov
movsl
lret
scas
enter
mov
ret
mov
add
ror
add
mov
mov
inc
add
mov
int
add
add
sub
add
add
xchg
aaa
daa
cs
push
repz
add
add
sbb
mov
push
mov
insb
add
add
lcall
add
push
subl
add
add
jecxz
sbb
mov
add
test
cmp
int3
jne
leave
jle
pop
sti
into
dec
test
fwait
add
jo
in
xor
xlat
int3
jbe
mov
push
movsb
or
add
mov
inc
pop
enter
std
push
and
mov
or
lds
jl
in
lcall
ficoml
pop
jbe,pt
aas
fadd
add
std
bound
add
add
add
aam
add
cs
or
imul
add
add
xor
adc
inc
mov
jns
mov
enter
pusha
add
add
adc
jne
and
add
add
rol
sub
pushl
mov
push
xchg
pop
or
mov
das
rorl
in
popa
jmp
sub
xor
mov
xchg
lods
rcrl
mov
mov
push
mov
pop
movsb
xchg
xchg
mov
push
ret
add
add
inc
xchg
sbb
jbe
push
mov
add
adc
add
daa
xor
dec
lret
jmp
jno
mov
test
add
lock
jge
loope
and
add
add
and
mov
inc
insb
add
add
add
or
jbe
add
add
add
aaa
call
lods
jae
pop
ljmp
addr16
jmp
aam
sub
out
jmp
dec
aaa
mov
addr16
mov
mulb
aas
je
fmuls
add
push
jno
and
xchg
sub
mov
sbb
xor
add
dec
add
add
das
pop
ret
add
add
mov
adc
inc
nop
outsl
xchg
mov
insl
cmpsb
sub
add
add
lds
xchg
adc
xchg
shll
pop
mov
add
add
add
lea
add
add
mov
fnstcw
imul
and
add
or
mov
cmc
sub
mov
mov
std
mov
push
lods
dec
add
lock
add
mov
inc
cmpsb
push
inc
add
sbb
inc
int
jmp
jno
pusha
add
add
add
adc
mov
adcb
dec
cltd
ljmp
add
mov
inc
add
xlat
rcrl
test
repz
sub
jne
push
ja
jne
int3
stos
andb
and
mov
dec
aam
stos
sahf
mov
test
in
inc
scas
sbb
add
inc
fisttpl
adc
or
mov
and
aad
decl
adc
mov
jne
pop
lods
and
mov
add
pop
pushf
clc
xor
hlt
push
nop
pushf
fcomp
inc
ljmp
lret
and
add
test
jge
lods
lea
es
insb
add
add
and
add
add
add
add
inc
mov
inc
add
add
jns
xchg
mov
xor
cmp
sub
arpl
std
jo
sub
jno
in
out
push
data16
in
mov
push
les
es
mov
add
add
add
push
mov
xor
loopne
pop
mov
lods
ret
pop
mov
add
mov
lcall
add
add
push
jbe
mov
loop
jecxz
rorl
ljmp
add
add
xor
sbb
cwtl
in
loop
pop
add
aaa
xchg
enter
stos
inc
icebp
stc
or
sbb
push
shlb
add
fldt
movsl
xor
fstl
mov
mov
add
add
cmpsl
or
sbbl
jne
mov
mov
or
add
out
adc
jno
inc
adc
cli
mov
js
cwtl
aas
mov
add
push
imul
add
fistpll
sbb
sub
mov
mov
push
loopne
cwtl
icebp
int
imul
and
pushf
js
mov
add
or
inc
fwait
push
or
mov
cltd
mov
mov
add
add
add
mov
shll
hlt
xor
daa
fcoms
bnd
mov
std
mov
sbb
sbb
add
iret
add
cmpsl
loopne
adc
sub
imul
mov
xor
mov
pop
xlat
xchg
jbe
add
add
add
nop
push
inc
lea
add
mov
or
iret
into
or
mov
loop
lcall
lock
aad
out
cmp
aas
xchg
push
xor
cld
and
sbb
cmp
push
push
xor
clc
subl
orb
movl
push
in
rclb
bound
mov
das
cld
adcb
xchg
dec
add
xchg
outsb
ss
shlb
add
push
cmc
mov
pop
mov
pop
bound
es
mov
test
adc
mov
inc
test
add
scas
cld
and
je
or
mov
pop
pop
or
xchg
fiaddl
add
add
mov
sbb
adc
pop
add
mov
and
add
lcall
sub
add
add
add
push
popf
xchg
out
add
add
sar
hlt
mov
fwait
or
sub
lods
enter
mov
inc
dec
int
out
in
pop
pop
scas
les
js
jecxz
cmp
cld
xor
fldcw
add
push
nop
ret
add
add
sbb
xlat
jb
inc
mov
or
lods
dec
xor
shlb
add
insb
add
add
int3
xor
add
andb
aam
mov
add
add
add
add
jecxz
enter
mov
sub
add
add
xor
xor
jl
jns
mov
jo
test
add
dec
dec
dec
xchg
adcl
mov
mov
mov
je
jg
add
mov
xor
test
add
mull
add
add
add
sub
xchg
loope
push
mov
lds
data16
push
hlt
mov
out
mov
add
loope
sbb
and
jbe
and
mov
jp
sbb
call
dec
adc
cmp
xchg
fldenv
xchg
mov
push
popa
mov
xor
dec
aam
mov
sbb
dec
out
pop
jns
aad
jecxz
mov
adc
mov
xchg
jns
add
add
movsb
dec
add
add
sub
fisubl
insb
add
int3
rorb
or
int
mov
leave
dec
hlt
mov
jle
testb
add
sarl
ror
pop
dec
jge
pop
or
add
add
out
popa
add
mov
add
dec
jge
add
add
xor
xlat
imul
jns
push
add
mov
mov
mov
arpl
push
out
das
sarb
loopne
add
lcall
add
cmc
test
mov
inc
aaa
or
mov
loopne
stc
stos
insb
add
fcoms
sar
adc
add
sub
lock
mov
popf
mov
mov
add
add
ror
jle
mov
test
lret
xchg
cmpsl
jnp
loopne
push
pop
sub
mov
mov
ljmp
and
mov
sti
adc
leave
dec
pop
dec
cmpsl
cmp
inc
add
add
adc
push
imul
mov
jne
scas
dec
add
add
jns
hlt
adc
imul
imul
imul
mov
mov
sub
mov
inc
add
add
mov
test
in
dec
enter
clc
call
sbb
adc
lcall
shll
pop
push
scas
call
ljmp
subl
add
add
xor
enter
add
popa
stos
or
mov
lcall
inc
pop
pusha
add
add
add
mov
mov
lret
jp
jo
inc
adc
fcompl
xchg
mov
roll
scas
xchg
mov
lret
cmp
shlb
pcmpeqb
repnz
mov
cmp
jb
cltd
test
add
add
dec
xorl
insl
mov
jmp
add
add
inc
sub
sbb
pop
fimull
push
lock
imulb
jp
imul
add
push
cmpsl
mov
sbb
mov
jno
mov
sbb
xor
int
ss
inc
and
jge
or
cmp
test
add
add
pop
scas
mov
xchg
push
jl
mov
mov
pop
call
xchg
jmp
lock
inc
test
push
cmpsb
mov
pop
dec
add
ret
or
mov
das
adc
movsb
addr16
pop
aam
pop
std
leave
push
adc
inc
inc
outsl
jne
sub
dec
add
arpl
mov
and
fnsave
cmp
mov
lahf
sbb
add
mov
pop
dec
sbbl
and
add
add
jg
add
sti
lret
add
movsl
pop
in
arpl
push
push
cs
pop
push
mov
or
mov
add
add
push
jno
add
mov
mov
mov
add
test
jle
cmp
push
cmpsb
xorl
add
mov
xor
add
add
repnz
jbe
push
add
mov
or
movsb
sbb
into
jg
fidivs
lds
pop
add
mov
add
add
mov
add
add
das
mov
add
ja
sahf
ret
dec
sub
add
mov
pop
push
mov
and
xchg
xchg
call
dec
pop
repz
add
add
test
cmp
shl
fwait
cmp
mov
aad
adc
add
add
and
add
add
das
lods
sar
insb
add
cmp
dec
jg
mov
ret
or
add
add
aas
scas
xor
push
pop
push
fdivrs
enter
mov
sbb
imul
jmp
jnp
mov
mov
add
add
add
sbb
push
pop
lea
add
add
add
sbb
movsl
sbb
loope
dec
or
in
pop
test
add
add
rclb
xchg
add
jae
outsb
jne
sbb
cmp
add
std
in
stos
or
fdivrl
sbb
loop
pop
pop
push
ficomps
adc
mov
and
mov
scas
iret
in
subl
jmp
xorb
push
shrd
in
popa
mov
and
mov
dec
cmpsl
sub
adc
leave
inc
add
add
add
jg
xchg
mov
dec
add
lock
sbb
xchg
imul
inc
repz
decl
add
xchg
mov
mov
add
fmulp
jo
mov
dec
add
add
push
pusha
add
icebp
mov
push
mov
add
push
add
mov
jge
cmp
int3
inc
rclb
sbb
in
add
add
add
xchg
dec
push
aam
nop
mov
add
add
add
jmp
jg
jb
sbb
cld
pop
sbb
aaa
push
lea
add
and
mov
dec
pop
movsb
mov
mov
fbstp
icebp
inc
sbb
sub
add
add
add
add
add
mov
dec
jb
lret
sti
cmc
cmp
hlt
xorb
std
add
jmp
push
aam
lret
insb
add
add
and
mov
cmc
xor
rolb
out
or
add
add
mov
ficoms
add
add
add
push
push
mov
ljmp
add
insb
add
add
int3
jecxz
fcoms
out
add
add
cmp
daa
dec
xor
ja
xor
add
add
mov
lret
es
mov
inc
add
mov
add
add
dec
dec
divl
nop
mov
xor
sahf
jnp
mov
add
add
fnstcw
pop
mov
stos
mov
add
and
add
add
aas
mov
insb
add
add
sti
lret
out
pop
push
sbb
xchg
rcll
mov
test
add
xchg
mov
xor
ljmp
jge
add
mov
add
test
sub
dec
testl
add
loope
mov
adc
arpl
shrl
mov
dec
add
mov
jmp
mov
pop
aad
or
mov
faddl
add
add
lea
std
cwtl
imul
add
add
add
sbb
mov
lods
test
mov
lcall
add
insb
add
xor
push
dec
and
cwtl
ljmp
xchg
lret
add
add
add
xor
add
cld
add
mov
inc
jb
add
push
add
add
mov
lock
out
jecxz
inc
add
enter
xchg
dec
add
add
dec
mov
pop
test
bound
das
lahf
int3
xchg
inc
add
dec
mov
jb
mov
mov
loop
sbb
and
and
mov
data16
nop
adc
dec
int3
cs
sbb
rclb
fnstcw
xor
fimuls
jle
add
add
aas
or
and
add
add
cmp
xchg
mov
mov
xchg
or
mov
shr
sbb
loopne
movsb
js
mov
jns
cmp
add
add
int
jo
ss
shl
leave
arpl
push
jne
cmpl
pop
out
ret
add
add
push
pop
pop
mov
push
loopne
jo
add
add
leave
dec
inc
lret
push
mov
sub
mov
and
or
mov
icebp
cmp
into
mov
mov
dec
add
scas
enter
add
adc
add
loop
add
mov
add
add
mov
add
loop
sub
add
add
arpl
nop
jae
je
sbb
xchg
cld
add
push
scas
sbb
xor
push
sub
add
add
test
daa
outsl
push
pop
mov
imul
sbb
mov
test
push
iret
mov
push
loop
add
add
mov
add
add
adc
fadds
mov
out
push
push
xchg
push
mov
push
or
add
add
sbb
mov
ja
dec
add
add
mov
mov
add
pushl
ljmp
inc
add
cmpsl
lret
pop
add
add
xor
add
sahf
psllw
add
sbb
and
iret
mov
sti
inc
add
add
mov
push
fadd
cmp
add
mov
lods
popf
jne,pn
jnp
adc
jp
xchg
gs
fdivrs
jg
dec
imul
aam
pop
jl
daa
les
imul
add
movsl
pop
dec
fcmovbe
inc
imul
add
cmp
lds
push
xor
add
add
add
and
pop
stos
xbegin
call
add
mov
mov
mov
xchg
in
cld
lds
ljmpw
jl
cltd
repnz
add
cltd
ficomps
push
cmp
sti
mov
adc
pop
sub
add
add
push
cwtl
push
bound
pop
push
or
adc
sbb
add
jle
dec
sbb
shlb
dec
adc
ret
je
jg
dec
add
adc
mov
push
lcall
add
xor
add
add
inc
mov
and
jnp
add
mov
add
add
add
cmp
xchg
xor
xchg
popf
insl
or
dec
sbb
add
hlt
out
dec
sub
mov
imul
mov
dec
inc
mov
ja
push
inc
push
pop
add
cs
mov
enter
add
pop
pop
xchg
push
orb
add
push
adc
sub
shl
int
fcompl
and
dec
testl
jno
add
test
xlat
add
fistl
add
mov
popa
mov
shll
and
add
add
jns
fisttpl
push
das
das
push
incb
sub
or
scas
or
add
add
mov
fcomi
xchg
jp
push
popf
push
mov
mov
addr16
movsb
stc
xor
daa
jp
in
add
lea
lods
add
mov
add
mov
not
xor
movsb
jns
dec
andb
into
mov
ds
add
add
add
jno
or
jle
daa
lea
out
sbb
add
add
adc
or
jb
pushf
jb
adc
repz
popa
cmp
movsl
cltd
test
mov
add
mov
addr16
stos
decl
call
add
inc
ficoml
cmp
ss
mov
sti
test
push
mov
and
add
add
ja
ljmp
lret
and
add
add
scas
jge
inc
xlat
push
int
add
add
pop
adc
jmp
add
jbe
test
mov
popf
add
add
jo
negl
push
add
mov
mov
sbb
aaa
mov
daa
push
fsubrs
add
call
add
xlat
inc
pop
daa
sub
pop
dec
mov
mov
mov
mov
and
cmp
ss
push
js
add
in
rcrb
adc
cmp
pop
jl
xor
add
add
add
mov
adc
in
fcomp
mov
pop
je
movd
push
xor
add
or
iret
js
call
mov
add
cli
or
add
add
sbb
push
inc
add
xor
add
add
aas
aad
orl
add
test
add
outsb
inc
fwait
push
insb
add
stos
nop
fwait
out
ss
cld
push
mov
add
add
orl
or
dec
mov
xchg
push
xor
push
mov
add
add
cwtl
adc
push
and
mov
lret
sbb
scas
loope
xor
pop
arpl
jl
int3
mov
add
add
insl
push
sahf
aam
push
and
mov
ror
xor
pusha
add
inc
fisubrs
fdivrs
fxch
xchg
pop
inc
sub
mov
inc
add
add
inc
pushf
cmp
xor
add
pop
inc
mov
adc
sub
add
add
adc
add
xchg
add
add
dec
lods
xchg
push
cmc
pop
testl
lods
and
add
add
sti
imul
mov
add
add
push
jnp
and
jae
ret
pop
xchg
adc
cmpsl
cmp
adc
add
add
out
mov
js
jl
arpl
add
add
add
jp
and
jns
cs
add
sub
mov
xor
cmpsb
mov
adc
es
add
add
xor
test
fadd
icebp
sbb
mov
pusha
add
pushf
or
mov
and
cmpsb
adc
mov
pop
mov
test
xchg
sbb
push
pop
call
addr16
push
pavgb
mov
aas
inc
pop
push
xlat
aaa
and
mov
dec
add
add
add
mov
sub
mov
xor
mov
push
adc
dec
pop
repz
mov
addb
cmp
aad
idivb
add
xchg
out
pop
repnz
pop
subl
add
push
mov
add
add
pop
lahf
pop
lcall
popa
test
outsb
mov
mov
fisubl
add
add
mov
add
pop
in
sbb
push
sarb
jle
dec
add
add
addb
add
add
or
add
add
add
xor
push
aaa
pop
imul
add
add
es
mov
enter
add
add
neg
inc
xor
fcomps
add
inc
in
push
jno
adc
divl
jp
rorl
and
add
add
addr16
xchg
test
jecxz
add
mov
cmp
mov
mov
add
movsl
add
mov
add
add
inc
add
add
jg
mov
cmpsb
jle
jo
pushw
pop
mov
pop
mov
jge
rcrb
dec
add
mov
ret
jb
es
mov
push
bound
fistpl
xchg
mov
mov
lock
mov
test
jl
xchg
sub
add
add
fstp
xlat
shl
push
scas
cmp
cmpsb
scas
daa
sarb
les
addr16
std
push
pop
in
in
fidivs
add
push
imul
cs
cs
add
mov
push
jb
add
add
add
add
add
mov
pop
gs
fldl
add
mov
add
sub
and
add
add
add
add
lods
mov
sub
xchg
mov
call
xor
inc
popa
pushf
inc
add
add
mov
jmp
ret
adc
xchg
jecxz
pushf
jle
push
inc
movsb
xchg
mov
mov
sbb
in
mov
lods
popa
sbb
dec
arpl
add
add
imul
mov
or
add
add
adc
in
inc
add
mov
adc
orl
mov
add
add
mov
mov
xchg
push
mov
and
push
ret
cmpb
clc
les
add
pop
mov
ret
add
add
adc
leave
push
testl
ret
pop
lock
in
rorl
jae
mov
add
add
sti
inc
cwtl
notl
add
sub
mov
and
or
jne
les
inc
sub
mov
movsb
inc
add
cltd
xchg
add
pusha
add
add
lea
xor
or
push
iret
inc
add
jne,pt
incb
mov
mov
ficoml
call
adc
xchg
xchg
inc
or
add
add
add
add
add
add
aam
ja
add
add
test
adcl
data16
jge
or
mov
sbb
enter
add
push
dec
add
int3
cmpb
mov
std
movsl
fisubrs
add
inc
push
sbb
popa
push
push
lahf
test
outsl
mov
shl
cld
add
lock
add
mov
mov
test
sub
into
sub
or
add
add
sub
ss
mov
out
xchg
xor
shl
add
add
add
add
pop
shll
mov
add
and
in
stc
cmp
imul
xchg
lds
std
enter
add
jb
sbb
insl
pop
add
shlb
pop
sbbb
add
add
adc
mov
cmpb
aas
out
ret
inc
add
sbb
sarl
movsl
sub
add
add
and
push
addr16
xchg
es
add
pop
mov
add
add
stc
jmp
stc
sub
add
add
or
lock
out
cmp
cmc
jp
pop
aas
and
add
add
push
lea
add
cwtl
xchg
movsl
in
cmp
cmpsl
push
add
loopne
push
push
or
add
add
aad
add
add
jecxz
mov
mov
xchg
lcall
insb
add
add
xor
adc
cltd
add
mov
dec
add
pop
jne
xchg
shll
pop
inc
sbb
and
add
add
mov
sahf
jge
push
stos
xor
lret
fcmove
fsubr
mov
add
xchg
data16
mov
out
movsl
dec
iret
inc
fadds
es
mov
pop
iret
jo
aad
inc
xor
jns
call
add
jecxz
or
fidivrl
add
int3
mov
sub
mov
out
stos
rclb
adc
add
jmp
sar
mov
add
mov
mov
dec
mov
add
mov
push
or
insl
lcall
mov
insb
add
test
enter
add
lret
shrl
xor
xchg
sub
js
xor
add
sbb
add
shll
sbb
adc
mov
cmpsl
adc
push
lcall
add
sub
mov
push
lcall
add
add
mov
frstor
mov
sarb
lds
add
add
mov
nop
or
add
add
or
add
add
icebp
mov
add
mov
add
add
add
mov
inc
inc
add
add
add
pop
mov
or
add
adc
dec
cmp
test
sbbb
scas
insl
xor
leave
jb
add
add
add
mov
mov
jp
mov
fdivs
cld
gs
adc
fcmovnb
call
add
add
add
mov
cmpl
loopne
push
mov
mov
add
add
out
stc
xchg
dec
add
add
insb
add
xchg
popf
adc
shlb
mov
mov
in
je
pop
dec
stc
sarl
mov
icebp
inc
jno
pop
and
xchg
fsubl
pop
or
mov
mov
lret
or
or
andb
dec
add
cmpsb
mov
mov
ljmp
fmuls
add
add
add
add
mov
adc
mov
sbb
lds
add
add
add
mov
or
inc
sub
mov
je
out
sarb
jb
dec
add
push
test
and
add
add
outsl
fisubrs
pop
xchg
cs
cmp
clc
leave
dec
add
mov
adc
sub
add
add
fsubrl
out
int3
add
lret
adc
ja
adc
add
push
shrb
add
sbb
add
add
mov
sbb
call
add
mov
mov
icebp
mov
mov
pop
xor
addr16
mov
ficoms
xor
inc
add
mov
lret
test
add
add
push
test
mov
mov
mov
add
add
mov
add
add
push
rep
cmc
push
add
xorl
pop
sbb
cmp
lret
jns
mov
push
outsb
dec
fdivrs
loop
rcrl
cmpsb
and
mov
push
sbb
cmp
add
add
add
add
add
cmpsb
stos
sahf
inc
es
out
clc
or
mov
outsb
and
jmp
mov
add
add
movsl
js
ret
mov
push
imul
push
and
fsubs
push
sbbb
pop
in
sbb
roll
add
mov
adc
add
add
add
mov
loopne
cmpb
cmp
add
push
or
push
or
sub
mov
repnz
add
pop
insb
add
add
movsb
push
and
add
add
jg
jae
jmp
cmpl
ja
jge
mov
push
jp
pusha
add
and
lcall
adcb
rcrl
aam
add
xchg
dec
stos
insb
add
loopne
pop
push
sub
inc
movsb
pusha
add
adc
mov
add
add
add
fldl
dec
icebp
mov
scas
fsts
xor
jb
or
cmp
push
cmp
mov
pop
mov
mov
cwtl
cld
pop
dec
and
mov
notb
add
add
js
mov
jge
ret
sbb
add
add
mov
out
push
sbb
rcrb
lahf
mov
leave
pop
adc
mov
rclb
fdivp
dec
ret
shll
mov
arpl
aad
fsubrl
movsl
ret
jae
inc
stc
pop
mov
add
add
sbb
inc
fdivs
mov
jecxz
mov
inc
add
add
mov
add
add
ljmp
jo
hlt
fsubl
jno
or
xchg
inc
imul
lahf
push
mov
sub
mov
push
shrb
setnp
add
call
add
add
or
add
add
and
ret
add
add
test
repnz
xor
and
mov
add
add
add
xchg
int3
mov
pushl
dec
xchg
outsl
inc
test
xchg
jecxz
xor
decb
add
add
sbb
cmp
cli
into
aad
sbb
mov
add
or
add
add
adc
adc
sbb
dec
pop
pop
ret
inc
add
push
dec
mov
add
mov
stos
nop
fstl
bound
cmpsb
outsl
sbb
pop
fdivr
push
xchg
add
add
ljmp
and
outsb
cmp
cmp
add
add
cmc
roll
mov
mov
sbb
add
push
stos
daa
xor
or
xchg
repz
cwtl
adc
lahf
outsl
push
out
push
xor
pop
cmp
mov
add
add
add
add
movsb
cmp
add
test
mov
sbb
add
pop
inc
and
mov
les
push
cwtl
addr16
add
add
add
sub
mov
das
dec
mov
mov
je
lahf
jno
dec
jb
add
add
mov
inc
pop
dec
sbb
fwait
in
loope
cmp
add
jo
jge
cmp
add
add
dec
jno
and
dec
jnp
in
rolb
add
add
cld
inc
and
add
add
add
mov
jmp
out
jge
sti
ret
mov
pop
xlat
mov
add
mov
add
add
outsl
scas
movsb
xchg
orb
aam
inc
cmp
pop
retw
push
cmp
ja
sbb
push
in
jne
push
add
add
add
add
addl
add
add
cld
out
hlt
mov
mov
add
inc
push
orb
add
push
pop
les
outsl
iret
mov
ror
add
add
add
lods
pop
es
add
add
jnp
add
mov
stos
inc
add
add
mov
add
add
stc
fildll
add
add
and
mov
test
in
ja
add
add
repz
mov
mov
jp
clc
jne
daa
push
lret
cmp
push
lahf
arpl
add
clc
or
add
add
sahf
sub
add
add
cmp
cld
test
leave
test
mov
xchg
pop
xchg
ret
movzwl
shrb
dec
cmp
daa
add
mov
aas
xchg
push
roll
xchg
pop
jns
mov
push
mov
push
add
in
dec
add
add
pop
inc
shll
add
lret
shl
icebp
pop
pop
pushl
or
mov
add
add
sub
add
jnp
movsl
lcall
add
or
ret
push
dec
loop
inc
in
push
mov
xor
mov
add
sbb
aas
pop
adc
leave
and
mov
mov
and
add
add
adc
sbb
mov
push
sbb
mov
add
add
cmp
scas
and
add
add
add
add
and
mov
add
js
jmp
lret
mov
add
sbb
dec
add
add
mov
push
add
add
add
enter
mov
test
fsubs
pop
jae
or
mov
cmp
ljmp
adc
mov
add
add
ret
sahf
cmpsl
repnz
mov
xchg
out
icebp
push
int
out
aam
fldcw
mov
nop
mov
and
pop
xor
fisttpl
add
add
or
cmp
jle
mov
xlat
cli
nop
inc
stos
jecxz
mov
fldcw
pusha
add
add
sub
mov
iret
subl
or
jle
popf
ror
movl
or
add
xor
pusha
add
jmp
lock
sub
add
add
fmull
add
add
lret
mov
data16
adc
mov
rolb
add
sbb
add
lock
lock
call
or
pop
add
psrlw
fldcw
push
and
cmp
pop
jnp
notl
es
adc
add
add
pushf
jg
je
add
add
add
push
mov
inc
add
mov
daa
in
dec
cmp
and
inc
add
in
mov
stc
mov
add
or
add
jmp
or
dec
mov
neg
inc
add
add
addr16
bt
lret
fsubl
add
add
add
add
add
lea
push
ss
mov
sbb
syscall
cmp
cld
mov
test
add
jnp
mov
sub
mov
cmp
cmp
jns
pop
cld
adc
lea
push
inc
add
out
mov
repz
inc
add
cltd
mov
pop
xor
pop
adc
das
pop
inc
add
push
out
push
clc
ret
dec
ja
cltd
dec
mov
dec
xlat
cmpsl
adc
or
loop
push
cld
or
pop
daa
jl
fistps
dec
and
sub
add
add
mov
xchg
and
aaa
dec
add
add
inc
jb
inc
lods
jmp
and
int3
xor
mov
add
add
jg
add
xchg
fucomi
pop
jmp
cmp
enter
dec
push
aad
jb
dec
add
je
movq
stos
and
mov
add
xchg
sbb
lods
arpl
sarb
push
cmovle
add
pop
out
insl
pop
and
add
add
push
dec
mov
imul
mov
add
add
add
add
add
xchg
ljmp
pop
insl
mov
xor
aad
xchg
dec
push
xor
xchg
cs
mov
add
mov
push
je
mov
add
sbb
add
add
or
lret
mov
xchg
push
jl
mov
lcall
and
add
push
pop
mov
sub
add
add
aam
andl
mov
sub
iret
push
lds
sbb
sub
add
shl
cmp
cli
lods
mov
mov
sahf
and
and
adc
sbb
push
jle
out
test
cmpsl
add
mov
add
add
xchg
add
add
add
js
xor
shrb
add
add
jl
xor
mov
push
cltd
lock
dec
push
test
jo
push
js
push
sub
mov
fldt
xchg
push
jmp
andb
or
subl
sbb
in
xchg
push
pop
in
push
lcall
bound
daa
sbb
addr16
xchg
lods
mov
mov
cltd
dec
dec
add
add
pop
mov
mov
push
pop
pop
out
pop
cmp
cmp
mov
aaa
add
mov
jl
je
stos
gs
les
outsl
inc
inc
add
ja
ret
or
xchg
in
pop
sbb
jo
fldcw
lds
cwtl
adc
mov
push
test
add
xchg
push
outsb
insb
add
add
lea
pop
es
push
popf
fwait
push
add
add
orl
pinsrw
add
jecxz
jmp
jae
pop
jbe
and
add
push
jecxz
add
ss
cmp
push
and
add
jmp
add
in
out
jl
sarb
pop
push
jp
notb
sub
add
add
cmpsb
pop
repz
add
mov
jmp
ja
push
cmp
dec
sbb
jecxz
add
add
ret
shrb
add
rorb
dec
mov
inc
add
jle
adc
sub
cmp
imul
add
add
jo
add
add
and
add
add
rorl
and
jns
sbb
mov
cmp
stos
mov
sbb
movl
xchg
clc
call
div
inc
jg
ret
push
mov
mov
insb
add
add
jmp
gs
pop
clc
fsubr
enter
add
insb
add
push
movsb
push
inc
daa
stos
fwait
inc
ss
rcll
lods
mov
add
add
jle
clts
sub
insl
or
mov
mov
pop
mov
into
clc
int3
pop
dec
add
aaa
rolb
mov
aad
fstpl
pusha
add
add
notl
xchg
dec
add
add
sbb
daa
cmp
lds
movsb
pop
xor
add
dec
test
pop
sub
or
add
add
add
nop
ret
sub
mov
and
dec
push
jne
js
sub
inc
add
inc
pop
or
add
inc
scas
fadds
fld
jne
mov
into
enter
insb
add
add
sbb
ljmp
push
inc
add
sti
out
loop
pop
dec
mov
sbb
pop
ss
add
add
fidivrs
xchg
push
rcll
add
dec
add
add
add
or
dec
add
je
push
or
aaa
cltd
bound
mov
pusha
add
add
mov
hlt
add
add
add
or
add
add
mov
movsb
adc
mov
iret
adc
mov
hlt
test
add
sub
sbb
je
xchg
call
test
add
and
mov
mov
loopne
adc
gs
shll
cli
pusha
add
pop
fldenv
jne
das
call
push
test
mov
cld
mov
dec
add
add
jne
fwait
sub
pop
cltd
or
xchg
xchg
stc
ret
or
mov
cwtl
pop
mov
fisttpll
mov
sbb
add
incl
add
repz
jp
imul
data16
add
mov
add
sub
mov
add
shlb
mov
insl
add
add
add
mov
mov
mov
add
and
dec
or
or
cmp
cmp
add
stos
je
int3
lods
jmp
sarl
mov
lods
loopne
mov
lods
cmp
scas
faddp
inc
add
mov
add
add
add
dec
add
add
test
repz
mov
add
add
cmpsb
sahf
push
ss
push
inc
and
add
mov
dec
add
scas
add
fiadds
add
add
mov
enter
pop
xor
mov
das
test
mov
test
ds
cwtl
je
imul
push
or
mov
add
add
push
stos
popa
outsl
orb
dec
insb
add
add
lahf
ss
imul
xor
or
mov
mov
out
push
jl
jle
hlt
outsl
rcrb
imul
add
popf
push
adc
data16
xor
mov
mov
popa
cmp
lock
in
cli
stos
and
add
add
add
add
outsb
and
add
add
clc
in
mov
add
add
lret
add
add
jle
enter
mov
cmp
mov
add
add
int
push
inc
add
add
mov
mov
das
xchg
loope
add
hlt
push
dec
leave
movsl
push
dec
add
movsb
sub
add
push
xor
fmuls
jg
add
add
fnstenv
mov
add
add
push
mov
add
mov
or
mov
jno
xchg
xchg
idiv
lods
imul
add
cwtl
mov
icebp
mov
mov
inc
hlt
inc
add
les
xor
xor
and
adc
jmp
mov
add
mov
sbb
and
shl
pop
add
out
and
add
add
jmp
movsbl
and
loopne
mov
fwait
xor
xor
or
aad
jne
arpl
dec
add
add
cmp
sbb
daa
jmp
push
add
mov
fnstsw
aam
call
mov
add
leave
ds
ds
add
add
pop
mov
test
push
mov
js
sbb
add
adc
fwait
loop
pusha
add
adc
add
add
dec
lcall
xchg
adc
pop
cwtl
ja
lcall
sbb
scas
loop
jg
add
add
or
add
add
hlt
pop
mov
adc
xchg
push
int
pop
dec
add
add
xchg
jno
scas
inc
add
add
and
add
xlat
adc
adc
add
add
mov
add
xchg
add
mov
sahf
popa
add
add
loop
mov
pop
rclb
sbb
je
adcb
mov
add
add
cwtl
pop
jecxz
mov
jno
or
add
add
mov
inc
add
pop
dec
jl
test
call
pop
aas
pop
push
daa
and
add
add
fcomps
sbb
mov
add
add
ret
loope
pop
negb
add
add
mov
add
add
mov
add
push
cltd
lea
pop
jg
cmp
add
add
leave
cmp
dec
add
clc
sub
add
fnsave
nop
and
add
mov
jg
outsb
or
add
add
std
push
cwtl
imull
push
orb
cltd
ret
mov
add
cmp
jno
sub
dec
cmpsb
adc
add
rolb
movsl
xor
dec
add
add
push
ja
fldcw
add
add
subl
arpl
stos
jmp
ja
mov
dec
cmp
rclb
dec
pop
jb
adc
aas
cmp
sbb
outsb
xchg
add
pop
rcrb
and
stc
or
sub
add
add
xchg
mov
sub
add
add
aas
jb
jmp
add
add
xchg
lods
lahf
adc
andl
lea
or
mov
jmp
in
test
push
dec
add
icebp
or
mov
mov
push
test
loop
scas
sbb
jecxz
add
mov
nop
setp
mov
rol
aaa
subl
inc
fsubs
and
test
fnstcw
and
and
add
add
jle
cmp
sbb
cli
and
mov
test
xor
mov
rclb
inc
mov
cmp
fsubrl
xor
push
jmp
add
add
add
leave
rolb
add
inc
cmpb
xor
out
xor
mov
push
fidivrl
enter
sub
add
push
sbb
mov
add
push
fwait
dec
jae
cmp
add
sub
add
add
mov
loop
cwtl
pavgw
mov
pusha
add
icebp
sahf
rolb
sub
xchg
dec
add
xor
orb
xchg
add
add
hlt
sub
push
push
jb
add
add
in
outsb
xchg
popa
mov
loopw
push
fiaddl
sub
icebp
scas
js
mov
lods
xor
rcl
loop
mov
add
in
repnz
and
add
cmp
mov
push
lods
in
outsl
jg
push
dec
add
add
push
dec
adc
add
int3
inc
pop
add
add
add
mov
test
push
test
add
in
xor
add
mov
push
lret
cld
adcl
xchg
les
push
mov
iret
cmc
enter
shlb
xchg
add
add
add
add
add
add
push
mov
pusha
add
add
add
stos
add
add
jae
add
add
cmpl
movsb
das
sbb
sbb
mov
std
test
cli
inc
sub
or
jge
push
test
dec
xchg
dec
add
add
jo
xor
push
insl
jnp
or
mov
jne
loope
mov
add
jl
jns
fdivrp
sahf
movsl
or
mov
mov
ret
fldlg2
xor
or
mov
pop
movb
mov
lahf
jb
push
mov
cmp
out
dec
sti
addr16
mov
cmp
jne
push
xchg
stc
cwtl
adc
cmp
add
add
dec
or
add
add
test
loope
jns
aam
add
add
add
push
mov
adcb
cmpsb
aas
push
mov
adc
pop
or
rorb
jae
cmc
insl
cs
test
mov
jmp
mov
mov
mov
mov
mov
inc
sahf
or
mov
or
data16
popf
adc
mov
push
cmc
leave
push
jecxz
cmp
loope
push
fstps
stos
lret
push
xchg
push
add
add
add
add
add
mov
cmpsb
aaa
in
xchg
out
mov
sbb
daa
mov
stc
inc
les
xchg
icebp
inc
add
add
push
clc
loopne
popa
mov
jecxz
push
sbbb
dec
movsb
xchg
pop
lock
push
sbb
mov
xchg
mov
add
add
sub
add
jnp
clc
dec
add
sub
push
subb
mov
clc
dec
add
mov
adc
mov
mov
cmp
mov
inc
inc
call
ret
fwait
xchg
adc
add
add
add
cmp
sub
add
add
mov
in
aaa
sbb
add
je
pop
sub
enter
jmp
add
adc
add
add
jae
ja
jnp
adc
and
mov
leave
rcrl
cli
arpl
dec
ljmp
or
add
and
add
add
cmp
repnz
push
cmpsb
or
ljmp
loope
inc
imul
push
push
icebp
add
add
cmp
sub
faddl
add
add
xchg
mov
mov
add
test
add
mov
and
sub
mov
mov
sub
add
sub
cmp
jbe
repnz
ja
xlat
repz
sahf
or
mov
fwait
out
push
inc
stc
push
cmpsb
mov
dec
add
add
add
loopne
jle
fwait
mov
mov
or
add
add
add
imul
dec
subb
add
add
push
dec
imul
hlt
fnstenv
movsl
or
or
mov
add
add
add
add
scas
pop
adc
cltd
lds
push
rcrl
rcr
jmp
shl
or
and
adc
es
mov
add
add
lock
fnstcw
clc
lods
xlat
cli
add
pop
mov
bnd
stos
fidivrs
dec
adc
sub
mov
fisubs
and
add
shl
shl
test
aad
addl
sbb
push
push
xchg
test
cmp
ret
gs
add
add
and
aad
add
lcall
sbb
mov
inc
cmpsl
out
xchg
lods
or
mov
mov
dec
lea
repnz
xchg
adc
fiadds
add
add
ret
add
mov
cmpsb
fisubs
add
add
and
add
add
add
mov
add
mov
incb
ja
divl
insl
jae
pop
mov
push
sbb
adc
jge
fsubrs
sbb
and
shlb
js
dec
out
dec
in
inc
add
push
sarl
jl
add
add
add
add
add
lret
fstpt
fstps
jmp
adc
in
mov
movsl
sub
into
dec
enter
jbe
push
dec
add
add
or
mov
push
ret
and
mov
cmpsb
out
cmp
sub
sub
mov
dec
lods
lcall
pushf
mov
add
add
sti
mov
add
dec
inc
mov
jl
dec
adcl
cmpb
fwait
or
add
add
loope
jo
add
sti
call
stos
push
rclb
out
fdiv
push
push
lock
in
sub
add
xchg
test
rcrb
xor
cwtl
xchg
stc
xor
or
into
rol
xchg
lret
dec
add
subb
jl
ljmp
hlt
shrl
out
xchg
fwait
mov
add
loopne
add
add
sbb
push
jns
add
add
in
sysret
fsub
mov
lods
pop
loopne
ror
addr16
adcb
mov
xchg
outsl
lret
cmp
lahf
scas
pushw
sub
rclb
shlb
sar
push
ret
pop
xor
lock
and
mov
dec
lret
fistps
mov
and
add
add
add
inc
sti
sub
das
mov
movsl
lret
add
shrb
add
mov
add
push
mov
add
add
call
xor
add
sbb
inc
add
sbb
ds
cmpsb
mov
mov
fnstenv
int
ss
push
xchg
add
shrb
add
add
add
mov
aas
xchg
add
add
jnp
sub
or
jns
add
add
test
cmp
rcrb
xor
lock
stos
cmp
adc
add
add
inc
mov
icebp
add
fwait
inc
jne
add
add
add
leave
sbbb
add
add
cmp
mov
cmp
loope
jecxz
pop
xor
mov
mov
repz
dec
add
ljmp
cli
mov
test
mov
andb
add
push
gs
add
xchg
sti
xchg
mov
and
test
jns
push
adc
add
add
loopne
and
add
cwtl
or
mov
and
mov
add
add
mov
add
add
push
pop
adc
add
add
outsl
imul
inc
add
fsubs
inc
icebp
inc
xor
dec
fwait
push
rcll
sbb
add
hlt
rcrl
xchg
xchg
mov
mov
add
add
dec
lods
sbb
add
inc
mov
add
rorb
lcall
pop
or
mov
int3
je
xchg
js
leave
mov
jo
stc
mov
decb
fnstenv
dec
push
mov
call
hlt
or
add
add
cld
cmp
jg
lret
mov
add
or
add
add
xor
add
pop
mov
or
add
add
add
in
adc
cmp
fildl
insb
add
mov
es
pusha
add
add
loopne
pop
jle
popf
mov
cmp
mov
xchg
add
add
lcall
cmp
inc
push
pop
sub
add
add
sti
int3
ds
add
add
add
mov
inc
mov
mov
mov
sti
subl
add
xor
cmpsl
push
xor
jo
out
cmp
mov
pushf
shl
adc
lret
in
jge
jnp
int3
shr
mov
push
or
mov
add
mov
add
push
je
pop
outsl
rolb
xor
add
lret
out
loopne
add
add
inc
ret
movsl
test
inc
stos
mov
add
add
das
fdivl
sub
add
add
mov
add
add
cmp
test
add
into
mov
cld
mov
add
pop
call
add
add
lcall
mul
sarl
mov
inc
push
cmpsl
jecxz
xlat
inc
add
mov
mov
das
negl
add
sarb
jno
add
sti
dec
add
add
loope
mov
insl
rorb
add
xor
ljmp
sbb
in
mov
test
jbe
movsb
pop
push
dec
add
add
inc
lock
lahf
cmp
ja
mov
pop
push
adc
mov
dec
pop
inc
add
add
enter
xchg
xor
mov
or
and
mov
ror
xor
lcall
dec
xlat
aam
add
dec
add
mov
add
add
add
mov
add
add
icebp
sbb
sarb
push
add
add
add
mov
addr16
aad
loope
mov
es
cmpsl
xor
nop
punpckhwd
lds
add
in
dec
xchg
mov
add
subb
mov
mov
add
add
cld
mov
xor
add
jnp
out
push
nop
pop
stos
or
add
add
sbb
add
iret
and
mov
jne
aaa
jo
dec
add
cmp
xor
add
nop
pusha
add
dec
or
add
add
add
add
in
pop
push
sub
mov
adcb
test
bound
jb
mov
mov
jb
into
mov
into
xchg
or
mov
add
add
mov
mov
xorb
inc
add
add
sbb
mov
add
add
int
adc
enter
mov
insb
add
mov
sub
cmp
or
aaa
xchg
fmull
mov
add
mov
dec
and
pop
xchg
and
mov
adc
bound
and
mov
test
shlb
xor
push
push
sbb
pop
lahf
jb
dec
push
mov
add
test
enter
add
mov
lret
push
fisttpll
add
xor
adc
sbb
add
add
test
pop
jle
nop
jns
jecxz
dec
lret
jne
mov
jae
jmp
gs
imul
add
mov
fisttpll
ja
movsb
mov
sub
mov
lcall
add
add
mov
mov
xchg
int
mov
lea
jo
sub
testb
jno
ljmp
add
add
cmp
test
f2xm1
adcb
sbb
mov
cmp
jnp
add
add
je
xchg
icebp
mov
imul
add
in
lock
xor
out
jnp
cld
add
mov
pop
pop
dec
iret
out
xchg
push
sti
outsb
test
xchg
push
test
call
dec
add
add
jmp
sub
mov
mov
push
fadds
dec
add
add
ret
in
clc
mov
add
mov
pushl
addr16
imul
mov
mov
xor
inc
add
into
mov
push
std
pop
sub
add
add
pushf
add
test
jno
inc
add
add
pop
dec
adcl
cmp
adc
inc
or
out
inc
fsubl
add
adc
add
pop
xlat
jno
add
add
cli
ds
aas
mov
push
dec
add
add
dec
push
sbb
sub
mov
cld
mov
add
add
out
lahf
ret
mov
stc
inc
ficoms
cmp
test
ja
xlat
fucompp
or
mov
add
mov
add
ficompl
add
fstpt
nop
sub
shrd
mov
and
sub
addr16
cltd
cmp
aas
dec
fdivrs
add
sbb
mov
stos
in
xor
incb
jne
jge
add
xor
or
pop
mov
add
inc
jp
add
add
daa
adc
clc
psllq
jno
mov
push
mov
shll
out
push
in
in
mov
loope
sub
icebp
xor
push
sub
repnz
testb
fisubrs
les
inc
pop
pop
leave
mov
scas
pop
nop
repnz
push
shll
movsl
inc
mov
mov
adc
mov
add
mov
jns
cmpsl
mov
jmp
jmp
mov
jp
xchg
sahf
cmp
lds
aam
push
js
lods
cwtl
sub
dec
push
fcom
jae
je
push
mov
add
pop
adc
mov
nop
and
mov
test
or
add
out
jb
push
add
add
xchg
pop
or
adc
add
add
lcall
add
scas
inc
cmp
out
mov
add
add
iret
jmp
je
mov
lock
lea
xchg
cmp
mov
inc
add
add
test
dec
mov
add
jo
cs
mov
add
mov
add
xchg
jo
and
movsl
ss
cmpsl
ja
pop
or
das
adc
movsl
shlb
popf
push
insb
add
in
stos
xor
ret
imul
push
incb
aam
mov
and
add
add
dec
add
xor
add
sub
pop
aas
sbbl
xchg
jmp
mov
xor
dec
and
add
add
popl
add
jge
lea
add
push
mov
push
dec
add
sbb
and
sub
add
add
xchg
ret
ja
aad
mov
add
rolb
mov
aad
adcb
iret
dec
add
jmp
and
pushl
add
xor
push
call
dec
add
add
mov
aad
insl
ss
or
add
mov
insb
add
add
cli
stos
test
mov
push
pusha
add
xor
add
jo
in
mov
inc
add
sub
imul
add
add
sbb
sbb
add
pushf
adc
xchg
sti
mov
add
pop
jmp
scas
jle
xchg
cmpsl
lods
sub
add
sbb
mov
sbb
mov
mov
imul
pop
mov
add
push
inc
pop
add
add
mov
jp
mov
add
add
add
repz
jnp
add
inc
add
add
adc
mov
push
jg
sub
add
fwait
jle
adc
fldenv
mov
xchg
pop
andb
add
add
aam
and
add
add
aad
add
add
cmp
cmp
add
add
dec
dec
loopne
and
rcll
add
cmc
data16
rclb
and
add
add
xchg
cmp
sub
add
add
xlat
cld
jecxz
xchg
mov
mov
add
cmp
ds
je
dec
call
mov
iret
jp
dec
jl
mov
ret
loopne
mov
jb
mov
mov
push
mov
xchg
mov
pop
push
xor
imul
lahf
mov
test
dec
add
inc
pop
dec
add
add
add
mov
cmp
movsb
push
push
out
ret
mov
inc
add
adc
add
sub
scas
ds
sub
pop
mov
inc
pop
dec
sbb
or
mov
add
popa
in
push
push
lods
data16
add
add
into
dec
insl
adc
scas
arpl
add
add
pop
jnp
mov
fmulp
cmp
ret
push
arpl
pop
and
scas
std
add
lods
jb
les
ret
das
or
lret
dec
add
push
cmc
xor
lock
add
add
add
add
add
icebp
ds
ss
mov
cmp
testl
add
add
push
mov
lods
testl
or
add
mov
je
aad
jae
or
mov
add
aad
add
lock
add
xchg
das
insl
sarl
add
add
sbb
inc
pop
adc
stc
stc
xchg
dec
jo
fbld
mov
add
and
add
lret
stc
lds
jecxz
sahf
push
inc
push
inc
inc
mov
mov
aad
loop
pop
mov
enter
ficoml
push
popf
js
add
add
mov
mov
fcmovu
sub
mov
pop
xchg
or
add
add
add
xchg
ret
push
inc
add
syscall
jnp
add
add
mov
subl
mull
add
aas
test
add
arpl
inc
ficomps
cmp
lahf
add
pop
or
mov
xor
mov
mov
xor
add
iret
jnp
xor
adc
cld
es
ret
mov
push
adc
adc
add
leave
hlt
xchg
or
mov
xor
push
push
or
add
add
movsl
mov
fidivrs
push
mov
push
cltd
inc
mov
add
popf
dec
xor
fcomi
popl
mov
cmp
push
imul
add
add
jg
add
daa
add
pcmpeqw
mov
add
add
ljmp
push
loope
sbb
add
push
mov
mov
or
add
lods
hlt
out
mov
add
inc
or
sub
xchg
ss
push
or
fsubrp
inc
pushf
lods
and
stos
mov
bound
loopne
ljmp
mov
insb
add
hlt
xor
es
scas
mov
fiaddl
push
add
add
decb
push
aaa
add
cwtl
dec
jno
fistpll
add
aaa
inc
add
hlt
es
int
cmp
mov
mov
dec
mov
add
add
xchg
cmp
dec
hlt
inc
dec
outsb
loope,pn
enter
enter
add
flds
sub
add
ret
sub
dec
add
add
or
add
add
add
add
in
stc
mov
and
sub
jbe
add
mov
or
mov
jle
in
fisubrs
add
add
pop
sbb
add
dec
mov
aam
add
add
add
cmpsb
or
mov
xchg
jno
sbbb
shlb
push
mov
add
xlat
ret
jb
push
nop
push
repnz
cmp
mov
pop
push
loopne
dec
or
add
add
cli
sub
mov
lods
in
pop
sbb
rcl
pop
mov
jge
add
icebp
shlb
mov
mov
cmp
movsl
loopne
add
add
xchg
dec
mov
push
inc
pusha
add
add
repnz
add
add
out
mov
popa
mov
pop
mov
call
xor
stos
stc
or
sbb
inc
mov
add
add
add
add
add
and
mov
aas
rcrb
push
sbb
xchg
xor
cwtl
shlb
add
popf
int3
dec
add
add
cmp
pop
jl
mov
dec
push
mov
xchg
push
add
add
lcall
add
dec
in
nop
repz
and
add
out
xor
scas
out
or
pop
push
mov
sbb
add
add
sbb
dec
jo
adc
add
push
adc
jb
add
mov
add
xor
stc
cwtl
ja
mov
xor
fdivs
loope
sub
popf
dec
fcmovne
mov
and
int3
test
ret
push
adc
andb
hlt
push
xor
jecxz
mov
xchg
test
add
xchg
fidivl
mov
jo
mov
add
add
stos
fnsave
ret
push
pop
sub
fmuls
dec
adc
add
add
inc
mov
sub
nop
adc
das
sbb
pusha
add
insl
lret
sar
adc
push
mov
jnp
lret
adc
cmp
add
shrb
mov
add
add
ljmp
add
push
xchg
imul
add
mov
mov
test
out
push
testl
aam
inc
pushf
hlt
xchg
jns
add
mov
or
add
add
std
add
mov
sub
add
add
dec
arpl
hlt
enter
add
mov
popa
cmc
inc
cmpsb
pushf
fisubrs
dec
and
add
add
mov
loopne
inc
jp
pop
mov
pusha
add
lret
xor
mov
mov
push
mov
int
xor
jmp
sbb
inc
dec
add
add
divl
fisttpl
leave
fcoml
xchg
repz
add
add
adc
clc
mov
mov
sub
add
add
add
add
jmp
sahf
push
and
add
dec
sbb
enter
cmc
mov
pop
xorps
in
ds
sti
out
jg
addr16
repz
sub
jnp
cmp
outsb
leave
sarb
or
jecxz
cmp
sbb
add
pop
jmp
in
or
cltd
dec
add
add
adc
add
pop
pushf
and
add
push
clc
cld
or
add
mov
and
mov
mov
and
push
push
pop
gs
repnz
dec
add
add
pop
push
push
fsubrp
stc
inc
add
add
cwtl
pop
mov
enter
mov
add
add
mov
enter
fdivs
or
lods
insl
add
mov
mov
push
insb
add
add
push
int
add
add
popf
scas
daa
xchg
gs
or
and
add
add
hlt
test
and
pushf
push
jo
out
or
add
pop
pop
fiadds
ss
jecxz
fadd
add
add
test
lret
pushf
cmp
insb
add
add
and
jno
inc
and
xor
lock
into
mov
lods
sub
add
add
aad
lcall
add
add
add
add
add
push
mov
rolb
cmp
push
shlb
fcompl
xchg
mov
mov
cmp
pop
popf
icebp
aam
fdivrs
inc
add
add
imul
in
adc
jge
jns
shrl
mov
pop
movsl
ficomps
mov
cmp
mov
mov
mov
in
add
and
sub
adc
add
add
mov
add
mov
add
add
pop
mov
jl
add
add
inc
pop
int
cld
subb
test
xchg
cmp
add
mov
add
xchg
xor
inc
mov
jmp
sub
add
add
aas
in
aam
add
add
jle
sbb
scas
adc
loopne
inc
icebp
mov
xor
cs
inc
movsb
call
std
es
popf
jnp
pusha
add
add
pop
sbb
add
add
leave
xor
xor
add
add
xlat
inc
push
js
or
pop
pop
push
int
ret
mov
adc
cmpb
test
jecxz
adc
insl
push
jl
loop
clc
das
inc
add
pop
and
inc
add
add
jp
jmp
sub
adc
adc
push
shl
xor
shrl
dec
dec
mov
adc
subb
add
hlt
jnp
test
shlb
pushf
push
mov
add
add
add
add
enter
insl
jl
or
pop
out
sbb
mov
stos
pop
xchg
gs
or
pop
pop
daa
testb
cmp
lods
add
jo
inc
push
jl
popf
jb
lods
sbb
add
adc
mov
xor
add
add
mov
or
add
add
mov
add
test
jg
inc
xor
and
add
pop
push
push
cmp
out
pop
xchg
add
xchg
lret
jp
pop
xchg
sub
mov
mov
add
add
repnz
in
add
add
add
xchg
add
add
add
mov
fcomps
cmp
mov
xchg
xchg
pop
push
bound
std
mov
adc
loop
sub
mov
xchg
or
add
mov
ljmp
rolb
sub
ret
mov
js
dec
add
add
push
mov
enter
add
adc
pop
mov
pop
roll
test
je
push
daa
shlb
adc
push
js
cwtl
sbb
mov
mov
sub
mov
dec
pop
cmpsb
movsl
roll
add
aam
sahf
sub
roll
add
add
dec
fistpll
idivb
add
int3
inc
add
mov
out
adc
adc
mov
lock
add
add
bound
repz
cmp
sbb
sbb
cltd
push
mov
cmp
push
repnz
leave
sbb
mov
or
test
bnd
test
into
mov
data16
imul
in
addb
pop
sub
pop
clc
or
mov
cli
or
mov
add
add
add
test
rolb
xchg
cmp
data16
add
or
add
add
jge
adc
cmp
clc
xor
lret
nop
popl
mov
bound
xor
lods
inc
test
fcoml
pop
sbb
pop
stc
test
mov
mov
in
arpl
push
lock
sub
mov
clc
in
ret
cmp
xlat
inc
or
mov
mov
add
add
push
loope
cli
movsb
and
sbb
dec
mov
sbb
add
xchg
ja
in
test
push
cwtl
jmp
mov
int3
inc
dec
add
cmp
ljmp
mov
pop
sbb
or
subl
and
add
add
add
iret
insb
add
push
mov
adc
out
xchg
add
add
frstor
in
in
mov
pop
decl
cli
xor
cmp
xor
mov
add
jo
and
jae
dec
inc
add
add
jns
xor
ljmp
inc
add
add
ss
lea
mov
add
daa
pop
cli
sbb
insl
pop
pop
or
add
add
add
adc
out
ret
adc
mov
lods
add
add
add
mov
push
adc
mov
push
enter
push
popa
loop
mov
inc
and
add
add
mov
enter
mov
add
add
mov
add
add
add
lds
bound
lods
mov
mov
enter
out
or
add
or
add
clc
push
pop
adc
mov
add
add
dec
mov
movsl
push
cmpsb
xor
les
inc
dec
add
xchg
xchg
add
push
ror
lock
adc
add
rcll
mov
dec
popf
xchg
dec
and
push
add
mov
inc
dec
add
add
push
mov
loopne
mov
jp
movsl
test
sub
mov
jae
jl
fstpt
sbb
ret
js
add
imul
adc
jno
add
clc
dec
xor
pop
adc
imul
add
mov
add
add
orb
jo
in
shr
inc
in
inc
add
add
xchg
add
imul
aam
addr16
jnp
imul
mov
inc
int
push
in
mov
mov
daa
jo
xchg
iret
inc
add
add
mov
mov
clc
inc
and
inc
imul
or
ds
je
jp
les
pop
mov
mov
add
add
enter
imul
test
add
cmp
and
mov
stos
fimull
add
add
add
adc
gs
mov
xor
jno
sbb
jl
xchg
into
lods
or
add
add
add
add
add
add
jne
enter
aas
sub
add
inc
add
mov
js
jl
cmp
fistps
out
fsubrp
adc
fnstenv
adc
mov
mov
ds
xchg
insl
or
mov
mov
adc
add
adc
xor
ds
outsb
push
movsb
dec
nop
push
test
add
pushf
cmp
cmp
je
es
sbb
lods
xlat
push
les
and
mov
hlt
stos
push
xchg
push
das
sub
mov
jne
sbb
lret
push
addr16
pop
in
lcall
pop
sarb
mul
addl
test
mov
mov
add
add
cmp
int3
test
xchg
pop
sbb
bound
dec
ljmp
push
jp
inc
mov
cmp
lcall
adc
or
mov
xchg
xchg
mov
fucompp
sbb
add
add
jb
jle
jo
call
call
push
push
mov
add
add
loope
add
add
lcall
ret
cmp
mov
fwait
mov
xor
or
mov
jne
xor
cmc
mov
arpl
mov
lods
push
jno
pop
add
add
add
sub
cmpsb
add
in
pop
mov
pop
dec
add
jge
inc
fbstp
into
pushf
sub
add
xor
test
add
add
mov
decb
je
push
sahf
dec
sub
pop
inc
jge
fdivs
xor
add
sbb
add
add
mov
mov
aam
stc
sub
adc
mov
add
add
add
mov
arpl
xlat
cltd
jnp
mov
push
cwtl
dec
xchg
pushf
in
ret
call
add
add
add
add
adcb
mov
test
add
jp
push
add
popa
jmp
cwtl
sbb
mov
adc
aam
mov
add
inc
lods
xchg
mov
pop
not
sahf
jo
call
jmp
add
mov
lods
hlt
dec
xchg
mov
ds
sti
ds
shl
jo
cmp
jo
vmovaps
mov
add
add
scas
or
mov
scas
sbb
lsl
and
mov
cld
jmp
xchg
pop
clc
call
shl
mov
repz
xchg
out
loope
movsb
je
add
mov
adc
add
arpl
lcall
jbe
xor
or
or
mov
add
add
dec
sub
mov
dec
xor
pop
mov
clc
or
mov
cmpsl
inc
add
add
sub
dec
std
inc
add
or
mov
jle
jae
mov
jl
mov
sub
add
add
add
xor
jnp
cmpsl
jb
test
jmp
adc
add
mov
rorl
sbb
add
add
into
inc
add
add
arpl
inc
add
add
adc
cmp
fisttpl
pop
push
jle
out
jge
inc
add
ret
stc
add
into
imul
jae
push
icebp
pop
push
inc
adc
scas
mov
add
pop
stos
aaa
jne
mov
and
or
lret
lea
popf
rcrb
sbb
pushf
out
add
cmc
aaa
xorb
push
or
add
add
fbstp
mov
faddl
add
add
loopne
popa
jb
mov
sbb
push
sub
mov
add
mov
adc
add
push
adc
adc
push
dec
or
fwait
cmp
or
mov
xchg
or
add
add
add
add
inc
fsubl
daa
cltd
push
fsubrl
add
add
or
push
lock
pop
or
pop
or
add
fsubrl
test
scas
pop
sbb
add
imulb
mov
pop
fildl
add
pop
daa
jne
adc
push
loop
or
pop
adc
leave
xor
adc
pop
mov
test
xchg
in
cld
sub
adc
pusha
add
add
mov
add
fisttpl
cmp
mov
push
cmp
or
mov
adcl
add
icebp
mov
cmp
mov
insl
sbb
pop
mov
inc
mov
add
mov
and
mov
fdivl
inc
nop
cmp
add
mov
mov
shlb
mov
add
cmp
pop
cmp
inc
sbb
mov
xor
add
push
ret
insb
add
push
clc
push
lods
sbb
push
push
hlt
mov
ljmp
adc
and
add
sub
mov
pusha
add
add
mov
into
daa
jl
lods
sub
dec
rcrb
fldenv
les
ret
sub
mov
xchg
sub
add
add
aas
dec
enter
or
pop
mov
cmp
add
add
cmp
pushf
divb
aad
mov
lret
shl
test
inc
pop
loopne
sub
mov
idivb
cmc
sti
repz
mov
sbb
jns
add
cld
add
adc
cmp
add
add
add
xchg
rcll
test
xor
add
add
pop
sbb
fsub
xchg
xchg
mov
or
ret
sub
add
add
mov
mov
pusha
add
add
sbb
add
dec
jle
lock
add
add
jbe
es
pop
mov
cmpsb
push
into
int
push
and
add
add
ds
sub
push
jge
filds
mov
add
xchg
adc
pushf
adc
rolb
add
add
xchg
mov
sbb
in
popf
xchg
mov
add
add
jge
arpl
or
jb
lahf
clc
inc
push
and
push
push
mov
lret
push
into
mov
mov
xchg
cmp
add
je
adc
push
inc
decb
add
adc
rclb
mov
push
add
pusha
add
dec
ret
add
sub
mov
push
cmp
push
add
pop
inc
mov
mov
jle
rorl
add
loopne
clc
mov
call
add
pop
pusha
add
xor
add
lods
sbb
or
mov
dec
sahf
andl
pop
mov
add
push
push
dec
dec
add
adcb
add
loop
mov
rol
sti
test
add
std
or
add
add
testl
push
std
pop
clc
inc
xchg
inc
dec
movsl
jle
jmp
jle,pt
into
fimuls
ret
jne
nop
dec
enter
adc
cs
add
dec
dec
je
add
add
xor
aaa
and
push
adc
mov
movsl
in
pop
cwtl
jp
subb
add
add
sub
setge
and
mov
push
sbb
dec
mov
mov
add
add
fsubl
add
dec
dec
pop
ja
insl
mov
jmp
out
push
movsl
loope
xchg
sbbl
inc
jb
call
outsl
sti
ja
stos
je
sti
test
add
add
add
movsb
rcrl
pop
cmp
and
add
add
enter
faddl
into
or
add
add
jno
mov
xorb
std
scas
push
xchg
sbb
scas
icebp
negl
cmpsl
out
jle
stos
int3
rcrb
pop
ja
inc
pop
jp
hlt
mov
sub
mov
sub
xchg
sub
dec
pop
xchg
test
add
add
add
add
mov
dec
xor
sahf
xchg
mov
dec
add
add
push
das
fwait
inc
add
jmp
lret
lcall
into
or
fnstsw
mull
outsb
mov
les
push
mov
imul
add
mov
add
xchg
mov
cmp
jge
mov
pop
push
mov
dec
outsl
dec
adc
enter
jmp
add
add
cmpsl
sub
add
mov
out
push
push
out
xchg
in
push
insl
rclb
ja
add
mov
loopne
fmull
inc
add
add
roll
add
or
nop
fdivs
and
inc
pop
ss
mov
mov
sbb
push
jne
jp
dec
add
add
add
jmp
loopne
push
inc
jnp
mov
add
add
push
les
pusha
add
add
mov
in
dec
add
xchg
sub
add
add
and
mov
mov
mov
dec
pop
out
or
xor
insl
lods
lret
xlat
les
mov
out
xchg
es
add
add
inc
testb
movl
sti
jl
aad
imull
add
enter
stos
adc
add
and
mov
faddl
xchg
in
lods
adc
inc
scas
jle
sbb
ficoms
and
mov
pop
push
add
inc
fdivs
jl
outsl
mov
outsb
ss
nop
xchg
jbe
scas
xchg
and
add
add
stc
xchg
push
or
sbb
xor
mov
add
jnp
sahf
out
cmp
in
adc
loope
add
mov
and
add
add
xchg
int3
push
sti
pop
shrl
dec
movsb
or
add
cmpsb
xor
push
or
add
add
orb
lea
aaa
cld
lock
add
push
aam
cmpb
add
push
inc
add
jae
sub
scas
stos
adc
pop
mov
and
popf
xchg
or
mov
addr16
lcall
cmp
shll
test
sbb
rcrb
dec
jnp
or
mov
mov
and
scas
pop
mov
mov
dec
jbe
xchg
popf
xor
add
add
pushf
out
add
imul
add
add
or
mov
cmpsl
push
rcrb
sbb
add
fcomps
loop
inc
test
inc
pop
or
xor
cmpsb
lods
fisubrl
add
mov
add
add
add
add
add
mov
add
mov
sub
mov
or
add
mov
push
add
add
aam
inc
insl
shlb
in
test
rol
jae
insb
add
in
fwait
fwait
jp
inc
sbb
test
or
add
add
mov
add
add
inc
pop
jns
movsb
jle
fwait
mov
add
pushf
les
adc
test
push
mov
dec
add
add
daa
insl
adc
mov
mov
sub
mov
add
cmc
adc
mov
ds
lods
loopne
sbb
add
add
push
popl
mull
dec
fisttpl
into
jnp
sbb
add
fcomi
mov
outsb
xor
add
insl
insl
cltd
dec
add
adc
fidivrl
adc
pop
rcl
mov
xor
mov
mov
paddsw
pop
addl
add
add
push
ret
lock
add
adc
inc
add
fisubrl
inc
stos
sbb
mov
add
add
sbb
cmpsb
aaa
or
mov
adc
cmpsl
adc
insb
add
fldt
mov
lgs
or
sub
clc
test
add
add
lds
xchg
xor
add
add
idiv
lods
dec
arpl
mov
test
lahf
xor
xor
in
add
pop
jmp
add
or
mov
cwtl
fsub
lods
cld
out
dec
cmpsl
cmp
add
scas
and
mov
gs
pop
shlb
cmpsb
inc
leave
out
xchg
data16
aaa
call
add
fsubrl
data16
sti
iret
test
int
iret
inc
les
sbb
add
add
data16
sub
add
sub
or
add
add
adc
jecxz
add
add
add
dec
stos
or
ret
sti
push
mov
add
jbe
inc
add
add
push
jae
dec
add
and
mov
cwtl
adcl
add
add
add
ja
inc
aas
sub
call
orl
sub
add
pop
pop
push
sahf
in
push
or
mov
or
push
hlt
movsl
xlat
dec
dec
dec
add
add
jp
inc
add
mov
hlt
xchg
pop
inc
jbe
mov
xor
mov
add
add
ja
sarl
xchg
xlat
mov
fisttpl
in
and
incb
xchg
pop
imull
jbe
lods
xchg
adc
lea
add
sub
xchg
pop
jae
inc
fisubrs
add
pop
mov
add
das
mov
push
inc
je
jb
dec
xchg
xor
inc
fisubrs
pop
mov
sarb
xchg
mov
push
iret
mov
add
mov
xor
jecxz
push
and
add
add
add
add
insl
out
jbe
sbb
int3
push
or
xor
std
add
mov
ret
icebp
mov
add
sbb
xchg
stos
and
push
cmp
mov
sub
loop
mov
add
mov
add
add
sarb
hlt
mov
int
add
add
inc
push
mov
adc
ret
mov
xchg
stos
test
sbb
jle
out
das
and
inc
lods
dec
add
add
jmp
add
scas
movsl
aam
xchg
or
mov
inc
add
add
pusha
add
add
push
xchg
aad
shlb
pop
insl
jb
fwait
mov
mov
inc
mov
push
insb
add
add
sub
add
add
add
add
fcoml
jmp
xor
sub
mov
xor
add
mov
mov
cmp
sub
mov
add
add
sub
lahf
loop
xchg
dec
add
add
call
adc
rcll
sbb
adc
xchg
sub
mov
sbb
cltd
movsb
movsb
sbb
inc
xchg
rcl
inc
add
add
add
add
add
icebp
out
xor
jecxz
mov
inc
ficoms
push
inc
dec
out
xor
push
cli
push
ss
push
cmp
addr16
and
mov
mov
fwait
ja
cmpsb
add
pop
lret
xchg
roll
mov
push
mov
jecxz
mov
add
loope
mov
and
add
add
add
mov
pop
lret
adc
adc
and
or
jb
push
outsl
mov
add
and
jnp
mov
and
add
add
add
loope
inc
cmpsb
ret
cmp
push
cltd
mov
add
add
mov
popa
imul
stc
sbb
xlat
push
sahf
mov
add
adc
xchg
sbb
lock
outsb
in
int
add
mov
add
out
sti
pop
and
add
imul
cmc
mov
roll
add
in
sbb
lret
movsl
cld
gs
cmp
add
cmp
jne
jl
and
add
add
fsubl
add
jmp
shlb
push
jge
rcrb
jo
aas
mov
sbb
add
xorb
jae
sbb
sub
push
iret
jno
cli
sub
inc
fidivrl
pop
movsb
cmp
sbb
dec
mov
imul
test
rcl
sti
mov
xchg
xchg
je
cmp
xor
fcompl
lods
push
sbb
into
xor
push
push
adc
mov
add
jbe
xchg
jnp
loopne
ja
stos
mov
add
divb
push
mov
pop
leave
fdivs
add
xchg
push
pushf
jae
add
pop
mov
movsb
pop
fwait
loopne
aaa
add
adc
scas
pushf
push
out
sbb
scas
cltd
notb
test
fwait
inc
add
add
pop
test
pop
pusha
add
add
int3
mov
nop
xchg
mov
mov
dec
pop
adc
add
cld
and
mov
pop
and
sbb
and
inc
imul
mov
push
jns
sub
mov
je
jmp
jb
mov
pop
xlat
ret
repz
test
and
ds
insb
add
and
cld
mov
add
add
test
add
outsb
dec
rclb
inc
push
jl
sbb
pop
adc
lods
xor
mulb
add
add
or
push
dec
add
add
jbe
mov
cmp
add
add
mov
sub
and
add
adc
push
rorb
sub
mov
xchg
mov
dec
and
mov
jge
adc
add
pop
pop
adc
out
pop
xchg
sarl
insb
add
dec
or
add
add
dec
add
add
add
shll
or
or
cmp
std
or
add
add
loopne
mov
fldenv
test
mov
add
add
push
mov
add
js
inc
add
dec
add
add
push
add
sub
mov
add
add
test
sbb
cmp
mov
rorb
or
mov
add
add
add
jo
add
and
add
add
mov
sub
mov
push
push
sbb
jae
into
or
call
adc
cmp
mov
mov
or
mov
adc
sub
mov
popa
repz
ja
mov
iret
das
lcall
sub
mov
mov
sub
hlt
xor
dec
inc
cmp
jns
pop
aam
mov
mov
enter
add
mov
mov
orl
add
add
push
aam
add
add
push
inc
aaa
cmpsb
mov
insb
add
add
cld
dec
or
add
add
mul
int3
subb
add
dec
sbb
cld
and
add
add
adc
cmp
add
test
mov
scas
push
mov
popf
and
mov
add
add
add
add
mov
mov
add
mov
cld
xor
add
add
sub
push
add
add
add
xchg
adc
add
mov
jg
shrl
add
sarl
mov
add
sub
pop
or
add
xchg
pop
pusha
add
add
fwait
mov
data16
mov
cmp
add
or
or
mov
inc
pop
and
add
add
add
jo
outsb
je
jae
jne
lods
shrb
add
mov
push
daa
orl
jae
xchg
xchg
popf
shll
lods
or
add
add
cmpsl
ret
push
les
add
add
add
add
push
stc
movsb
std
je
mov
add
add
cmpsl
jg
xor
or
xor
xchg
into
pop
std
int3
into
outsl
mov
testb
in
ja
cmpsb
sub
dec
add
inc
add
add
hlt
push
pop
dec
add
add
mov
jnp
lret
sbb
add
sbb
add
insb
add
stc
sub
pop
inc
or
pop
adc
lahf
sbb
lds
xor
xor
sti
ja
rclb
xor
mov
add
add
shl
jno
das
cmp
add
push
dec
sub
dec
fnsave
jne
int
sub
out
sbb
and
ret
push
mov
add
add
mov
clc
notl
bound
xor
clc
daa
cmove
add
add
mov
mov
add
add
add
push
sub
mov
cmpsl
jae
fisubl
clc
out
std
add
add
mov
mov
push
sbb
add
inc
mov
add
dec
xchg
stos
sbb
hlt
aad
add
add
xchg
ret
add
add
add
aam
lods
and
mov
stos
cmp
adc
xchg
xor
or
inc
out
xor
add
mov
xchg
ficomps
adc
cmp
dec
cmp
mov
mov
outsb
inc
sub
add
add
lock
test
add
cmp
or
add
add
jecxz
jg
cmpsl
jnp
xor
jl
enter
xchg
cltd
cmp
jmp
sti
mul
rorb
mov
gs
shlb
jecxz
ret
outsb
aad
in
cwtl
data16
adc
jmp
test
or
add
add
jb,pn
push
mov
add
dec
cmc
inc
add
add
jge
arpl
xor
loope
mov
or
mov
clc
push
add
add
pusha
add
imul
add
add
repz
clc
mov
cmp
inc
xlat
dec
shll
add
aam
mov
cmp
add
add
mov
mov
cs
jg
fldt
add
pop
stos
mov
push
adc
sub
and
js
adc
ss
add
add
outsl
imul
add
add
add
mov
data16
int3
sub
mov
icebp
js
add
cmp
aam
stos
notb
add
add
cmp
add
add
and
push
cmc
das
rcrb
cld
pop
pop
dec
add
add
xchg
sub
mov
inc
sub
xchg
iret
ljmp
test
push
dec
add
into
sbb
pop
push
scas
add
add
pop
aas
sahf
fnstcw
cmpsl
dec
jle
into
mov
mov
mov
mov
push
cmp
add
push
xor
std
cld
inc
mov
and
subb
add
or
add
add
mov
pop
mov
loopne
jns
and
add
add
jecxz
mov
dec
add
add
aad
clc
and
add
add
xor
pop
sub
mov
mov
xchg
add
add
lret
jge
push
icebp
shlb
add
add
pop
pusha
add
xchg
jecxz
movsl
cs
or
add
add
mov
jbe
xchg
xor
mov
add
add
inc
out
inc
sbb
mov
lods
rolb
negl
mov
add
ds
or
mov
add
add
call
add
popf
jo
or
add
add
outsb
xchg
lea
add
add
add
and
ljmp
add
mov
sbb
mov
out
xor
xchg
stc
adc
aam
mov
call
mov
mov
ss
imul
add
add
jmp
lds
inc
or
rorb
lret
adc
jno
es
adcl
enter
pop
adc
sbb
shlb
mov
pop
or
mov
je
dec
fcmovbe
mov
sub
js
inc
or
add
add
jne
jae
jg
enter
test
rolb
mov
shlb
data16
scas
push
out
cwtl
lock
push
xor
test
add
add
add
mov
add
jb
inc
jmp
mov
repz
inc
add
test
add
js
fstpl
push
into
xor
adc
mov
add
add
dec
dec
pop
xchg
cwtl
push
popa
sti
sub
fisttpl
frstor
loopne
mov
aas
into
push
cmc
stc
mov
xchg
out
xor
mov
cwtl
xchg
pop
jp
add
push
inc
push
xor
dec
add
add
mov
cmpsl
rcrb
xchg
scas
mov
cld
repnz
add
add
add
sbb
add
mov
out
pop
fsubrs
mov
dec
add
cmp
movsl
xchg
or
aas
hlt
int3
sub
pop
mov
add
gs
add
add
add
xor
lret
sbb
and
push
clc
lods
push
push
std
je
fnstenv
mov
xchg
or
add
add
mov
and
imul
adc
push
mov
add
add
add
bound
aad
push
lea
daa
dec
add
add
dec
lret
jne
scas
cmpl
mov
daa
jo
std
rolb
repnz
call
cltd
js
add
mov
flds
ficomps
or
test
xor
xchg
pop
and
ret
xor
mov
das
jmp
push
data16
divb
add
add
and
sub
or
mov
xor
and
mov
in
imul
sbb
jmp
pop
jo
pushf
sub
push
repnz
add
dec
dec
fsub
push
sti
mov
inc
or
dec
add
add
inc
inc
add
ljmp
add
pusha
add
pop
js
fucomi
into
cltd
call
mov
fisubrs
add
mov
hlt
xchg
cs
cs
in
dec
mov
and
sbb
add
add
mov
inc
add
add
icebp
shr
pop
in
lahf
xchg
lret
aad
mov
cs
push
lea
add
aad
jns
nop
leave
and
inc
jne
incb
mov
cld
loopne
mov
and
mov
icebp
inc
ret
xor
popf
aad
mov
jge
dec
gs
stc
mov
push
inc
add
add
add
pop
push
cwtl
cwtl
adc
stos
insb
add
add
jb
outsb
sbb
das
lea
add
mov
mov
jns
lods
movsl
test
push
or
add
add
ror
add
pop
inc
pop
inc
loopne
test
add
add
hlt
mov
adc
icebp
adc
subl
add
add
jne
add
add
jmp
insb
add
add
clc
call
xor
or
add
sbb
add
add
or
subb
add
aas
scas
clc
nop
arpl
cmpsl
or
mov
push
or
popa
outsl
dec
hlt
cmp
add
enter
mov
add
inc
pop
push
icebp
aad
jge
cmp
or
and
inc
push
pop
adc
adc
dec
dec
xor
push
add
add
mov
fwait
stc
sahf
xchg
cmpsb
push
add
add
sub
mov
jmp
sbb
add
add
js
dec
mov
xchg
and
or
mov
mov
pusha
add
push
lods
sub
mov
sbb
mov
sbb
test
inc
or
mov
sub
add
add
push
xchg
les
mov
or
mov
shrb
add
loop
sub
xor
test
add
insl
psraw
and
mov
cmpsl
add
popa
cmp
add
or
sbb
push
cmp
add
add
sbb
add
js
xchg
sub
ffreep
icebp
push
or
add
add
nop
cmp
sub
mov
add
ss
pop
xlat
jmp
shl
dec
dec
adc
lea
js
cmp
add
jmp
pop
sub
mov
loop
mov
out
int3
xlat
cmp
add
adc
cmp
mov
lret
shlb
and
arpl
gs
fnstsw
jl
dec
js
lcall
fisubrs
ret
or
pop
lds
dec
or
add
add
bound
add
fldt
add
sbb
and
add
pusha
add
add
outsl
ja
orb
add
add
icebp
clc
sbb
push
mov
js
lret
pop
mov
fimuls
add
lret
add
add
pop
call
mov
or
dec
or
mov
add
add
aas
scas
cmp
sbb
or
hlt
rcll
pop
lods
lahf
mov
popa
ret
add
add
push
ss
adc
mov
and
mov
push
into
mov
add
add
mov
add
sti
hlt
push
jg
sbb
jge
loopne
inc
bound
rol
cltd
push
cmp
cli
sub
mov
fadd
movsl
adc
push
test
out
xchg
loopne
dec
add
add
inc
add
add
mov
out
lock
inc
call
mov
fst
cmpsl
xor
push
jl
xchg
adc
sbb
fisubs
add
push
or
sbb
mov
cmp
mov
test
pop
jns
out
adc
dec
add
add
mov
sub
mov
mov
push
das
mov
adcl
test
add
add
add
push
mov
popl
add
xor
add
sbb
loope
mov
pop
in
out
lock
ds
cs
add
add
and
adc
add
inc
loopne
cmp
scas
jae
sub
in
ror
pop
and
and
jno
cmp
add
add
add
or
mov
rcrb
add
add
sahf
in
sahf
xor
add
nop
stos
into
test
mov
inc
dec
clc
adc
mov
scas
jbe
dec
sub
mov
push
sub
lods
dec
push
test
sub
fcoms
nop
cs
adc
imul
dec
add
add
pop
mov
pop
mov
lods
mov
addr16
insb
add
inc
shl
cwtl
jae
push
outsb
es
push
decb
aad
dec
movsl
mov
into
push
xor
scas
rcll
mov
add
add
cmp
xor
negb
cmp
call
int
xor
add
jmp
mov
jge
sbb
add
add
and
add
add
dec
ds
jp
lods
sbb
addl
add
orb
adc
mov
xchg
aaa
xchg
shrb
inc
add
add
sub
mov
shlb
dec
rcrb
mov
negl
and
add
add
and
mov
push
mov
aam
add
add
mov
mov
mov
pop
pop
xchg
mov
cwtl
xchg
dec
lock
sub
add
add
add
add
sub
mov
push
dec
add
add
repnz
mov
lret
repnz
pop
cmp
jo
rcll
cld
ja
xchg
push
adc
and
pushf
shrl
inc
arpl
add
out
mov
push
sub
xchg
cmp
movsb
mov
add
add
add
enter
fcoms
in
inc
call
imul
add
add
pop
stos
mov
dec
add
add
pop
push
push
mov
popa
xchg
out
ret
inc
jge
iret
mov
sahf
xchg
mov
pusha
add
nop
adc
loope
mov
pop
addl
cmp
add
mov
add
add
xchg
push
test
jmp
xlat
into
inc
add
add
aam
inc
cld
push
pop
nop
stos
cs
insb
add
add
add
das
mov
inc
in
adc
insb
add
add
in
add
shr
mov
add
aad
or
dec
cld
lods
add
add
add
adcb
aad
cltd
ss
jmp
xor
icebp
fildl
mov
mov
pop
and
fiadds
cmp
inc
add
add
add
add
repnz
add
mov
dec
mov
and
mov
and
mov
push
push
pop
rcrl
mov
icebp
movsb
je
bound
add
scas
outsl
push
xor
call
rolb
adc
loope
imul
and
mov
insb
add
add
xchg
insl
push
adc
inc
dec
add
jle
movsb
out
test
adc
subl
add
lods
push
lock
andb
add
movups
das
cmc
pop
wrmsr
daa
push
insb
add
scas
push
cli
es
add
add
add
mov
add
add
add
add
adc
add
fisttpl
mov
mov
adc
jge
insb
add
add
mov
popf
gs
mov
sarb
push
sub
dec
mov
lea
adc
cs
jo
dec
and
add
sbb
mov
add
dec
add
add
push
push
in
add
sub
pop
xchg
add
push
inc
cmp
add
dec
aas
dec
cmc
data16
adc
add
xor
add
je
popa
mov
cld
aas
mov
add
mov
lea
cmp
in
addr16
aam
adc
mov
jnp
add
add
cmc
sbbb
cmpsl
dec
scas
in
pop
mov
pop
push
sbbl
mov
add
insl
sub
outsb
sub
mov
xor
add
cmpsl
mov
mov
add
add
icebp
ret
mov
inc
pop
sbb
add
subl
add
add
lret
call
add
or
mov
add
lds
mov
in
popa
popa
or
mov
push
mov
in
add
add
xchg
imulb
mov
mov
and
add
add
mov
add
shrb
dec
add
add
sti
push
xor
mov
push
or
cmp
insl
icebp
fstpl
dec
add
adc
add
add
jge
push
movsb
int3
pop
rorl
pusha
add
int3
inc
mov
mov
pop
js
dec
add
add
das
jbe
jne
adc
ljmp
or
mov
sub
add
add
add
add
add
add
add
adc
add
arpl
lods
xlat
shlb
mov
add
pop
xchg
xchg
pop
xchg
cmp
xor
mov
icebp
add
xor
xor
pop
mov
add
mov
and
add
add
loope
sub
repz
int
mov
adc
jbe
cltd
and
mov
les
inc
add
add
loope
aas
xlat
in
jg
sub
add
add
enter
add
dec
cmp
add
pusha
add
add
xor
mov
jns
sub
js
push
test
sarl
mov
notl
or
bound
ret
je
cmp
mov
add
aas
insb
add
cmc
mov
and
add
add
stc
adc
inc
and
mov
ja
push
bound
sub
add
add
std
mov
cmc
inc
add
add
getsec
sub
addl
mov
jg
add
add
pop
sti
sbb
outsb
je
push
sbb
je
sbb
inc
add
out
mov
mov
cld
adc
add
sub
mov
push
repnz
ss
jb
add
inc
paddusb
add
add
add
add
fildl
sub
pop
mov
in
xor
pop
and
scas
mov
ljmp
fimuls
adc
incl
pop
loope
mov
fcmovu
fnstcw
call
sub
jmp
xchg
sbb
addr16
pusha
add
add
repnz
mov
repnz
cmp
add
lods
aad
inc
sarb
repz
jbe
dec
add
add
cmp
filds
repnz
subb
add
cwtl
dec
pop
pusha
add
add
mov
mov
jmp
mov
ja
fwait
dec
cltd
add
add
add
push
push
push
lods
repz
or
cmp
jmp
add
mov
lret
and
add
int3
cmp
test
mov
add
nop
lock
mov
add
add
adc
add
and
cmp
push
or
scas
cmpsl
inc
add
in
mov
add
add
mov
lret
add
add
add
or
lcall
mov
ret
call
and
popa
int3
inc
lods
scas
loopne
popa
ds
sub
add
insl
or
mov
or
mov
lods
adc
add
lock
pop
pop
add
add
add
xlat
sbb
movsb
dec
xor
add
mov
in
pop
push
cmp
add
add
add
add
add
add
add
jl
iret
test
es
pop
gs
rclb
fnstsw
add
jmp
movsb
nop
test
fdivs
repnz
jne
push
mov
mov
mov
aaa
sbb
add
fmuls
ds
mov
adc
pop
dec
mov
jb
add
icebp
mov
stos
adc
xor
push
mov
add
pusha
add
mov
jg
leave
and
icebp
dec
or
mov
xor
fdivrs
iret
cli
aaa
jmp
sub
mov
xchg
jno
into
cltd
cmp
cltd
sarb
outsl
sti
push
iret
sub
into
ljmp
or
popa
sbb
sbb
mov
pop
scas
int
addl
add
add
inc
lcall
cmp
xchg
insb
add
add
mov
add
jbe
arpl
mov
xchg
mov
leave
jb
sahf
push
dec
add
subl
jge
adc
push
ret
rorb
cmp
cmc
and
mov
mov
add
add
xchg
test
add
clc
cmp
push
xorb
out
push
int
loop
loope
xorl
mov
pop
sahf
das
xchg
push
cmp
loop
out
ljmp
add
add
mov
add
outsl
xchg
push
imul
add
lods
adc
push
in
push
push
mov
pushf
adc
sub
dec
add
add
xchg
push
js
jbe
dec
xor
sti
jno
cld
pop
or
les
adc
or
add
add
adc
mov
shlb
inc
ret
mov
pushl
mov
adc
icebp
jnp
add
icebp
mov
dec
js
add
mov
xor
orl
adc
add
popf
aam
lods
pop
sti
ss
and
mov
sbb
sub
mov
popa
pop
jmp
mov
add
jmp
pop
xchg
mov
mov
insl
stc
cld
jnp
je
push
in
xor
pop
fsubl
add
add
mov
xor
xor
in
dec
add
add
add
add
testl
stos
icebp
lcall
push
clc
lock
or
leave
insb
add
add
add
mov
push
xchg
jo
xchg
mov
add
push
mov
add
loop
add
lds
mov
jge
pop
mov
negb
negb
cmp
mov
mov
jne
test
add
add
insl
sbb
xchg
xor
add
add
addb
add
aam
cvtdq2ps
add
mull
add
jno
stos
mov
out
add
xchg
add
add
mov
in
and
add
lods
sti
xlat
adc
mov
out
or
add
add
push
mov
xchg
jno
jp
sub
ret
cmpsb
loopne
dec
sub
add
add
dec
mov
push
sub
cmp
mov
cmp
pop
and
je
lea
mov
syscall
dec
fldcw
or
mov
add
add
add
mov
add
add
fwait
mov
add
ljmp
in
movb
mov
aam
in
xchg
mov
add
add
fisubrl
jb
mov
mov
add
add
es
add
xlat
rcll
and
and
hlt
sahf
aad
repz
movaps
add
add
popa
je
addr16
add
sub
mov
add
cmp
mov
in
fsub
sahf
xchg
jg
and
sbb
lea
add
add
jo
push
aam
push
outsb
sbb
and
and
mov
fwait
inc
mov
mov
and
mov
and
dec
add
add
das
adc
inc
push
pop
pop
mov
push
cmp
add
inc
jle
cltd
xorb
pop
test
cmovnp
lock
mov
aad
loopne
cmp
xchg
adc
sub
mov
lahf
adc
xchg
inc
add
add
lds
aam
xor
icebp
popa
fwait
andl
add
add
add
sbb
cld
aad
add
and
add
add
sahf
jae
insb
add
jo
outsl
mov
add
dec
jno
sub
pop
or
mov
mov
or
mov
push
jbe
or
sub
xchg
and
mov
xor
imul
add
xor
ja
adc
test
mov
jno
cmp
add
fnop
sub
mov
mov
out
rolb
cmp
nop
aaa
les
loope
ljmp
inc
add
data16
fdivs
lods
and
mov
add
add
insb
add
add
arpl
fnstenv
adc
loope
add
mov
insl
xorb
dec
test
pop
mov
jg
inc
imul
fimull
add
add
add
add
pushf
repnz
pop
sbb
dec
or
fistl
xor
xor
cld
cmp
mov
inc
add
add
mov
dec
lcall
add
mov
add
add
add
test
xor
dec
add
add
jp
sbbl
mov
mov
mov
enter
add
jl
lock
add
jmp
lea
loope
mov
mov
in
push
xor
cwtl
dec
push
nop
and
add
add
cmp
lea
pop
ja
out
lock
stos
lcall
mov
scas
cwtl
movsb
cmpsl
ljmp
push
flds
mov
mov
xchg
add
inc
enter
inc
add
add
add
mov
loopne
aas
pop
fidivs
and
mov
add
add
icebp
push
imulb
inc
jge
xor
adc
pop
mov
push
xchg
cmp
cli
leave
aaa
outsl
in
pop
cmpl
loopne
push
popa
sbb
repz
mov
mov
enter
adc
sbb
mov
add
add
lods
sub
add
push
adcl
sub
mov
xlat
shll
xor
gs
mov
addr16
mov
imull
add
fmull
sbb
cmp
add
add
xchg
mov
pop
rcll
sbbl
dec
cmp
push
insl
int
pop
add
mov
add
push
adc
add
add
pop
push
outsl
lahf
mov
imul
pushf
pop
lock
out
mov
pop
jge
das
jp
lds
add
add
mov
push
shlb
jno
sub
add
add
push
xlat
sub
mov
in
js
xor
rcll
out
push
jne
mov
fsubl
daa
pop
das
mov
mov
in
ds
push
das
xchg
inc
add
add
jo
jbe
pop
xlat
xor
xor
fdivl
test
jo
add
add
cmp
add
add
mov
xor
xchg
repz
xchg
dec
int3
mov
in
pop
xor
inc
aam
pop
and
fists
dec
add
add
or
cld
mov
jbe
in
add
stos
fisubrl
or
mov
mov
movsl
push
test
bsr
xchg
rcrb
xchg
shlb
int3
js
divl
sbb
rcrb
dec
push
mov
add
mov
pop
pop
jno
stc
out
cmp
sub
or
mov
pop
jb
sub
mov
add
add
sub
push
add
jp
cld
dec
add
add
scas
and
push
mov
add
jp
testb
add
jmp
jge
add
add
xchg
and
mov
cmpl
add
add
jns
push
dec
lahf
pop
aaa
in
add
mov
add
es
dec
mul
cmp
mov
imul
enter
xor
cmpsb
adc
push
out
arpl
js
mov
add
in
or
sbb
jp
mov
rolb
cwtl
push
xor
jle
repz
add
add
das
jnp
arpl
inc
lods
push
sub
aad
jecxz
inc
adc
lods
mov
pop
mov
add
add
sbb
sahf
adc
loope
mov
movsl
sub
out
xchg
dec
mov
adc
mov
add
add
add
jp
or
mov
das
outsb
pop
add
mov
dec
js
pop
cmp
add
add
pop
imul
jno
add
dec
ss
jns
adc
xor
mov
clc
stos
mov
dec
add
add
pop
iret
lds
dec
das
adc
xor
faddl
pop
push
pusha
add
add
jo
mov
push
jl
push
stos
js
jne
mull
popf
push
mov
add
mov
add
pusha
add
aaa
adc
loope
mov
push
push
cwtl
pop
orl
inc
insb
add
xchg
xor
push
rorl
cmpsb
or
jle
inc
xchg
lret
add
data16
es
mov
jl
xchg
adc
scas
or
mov
inc
cli
sbb
pop
rorb
push
push
mov
adc
push
outsl
pop
or
movsb
add
jp
out
mov
test
movsb
jp
mov
fsin
sahf
or
mov
imul
add
add
mov
std
stos
fisttps
cltd
mov
pop
aam
inc
fistl
add
pop
fnsave
repz
add
add
and
add
add
xchg
daa
and
nop
shll
in
call
push
pushl
push
xchg
sti
subl
dec
insl
mov
add
mov
push
inc
and
lds
mov
test
in
pop
cmp
repz
lret
pop
push
subb
je
adc
pop
jge
add
add
cmp
push
clc
je
or
add
cmp
out
sub
outsl
sbb
lret
xchg
push
mov
add
pop
mov
xor
test
add
js
repnz
inc
loop
add
mov
mov
fidivrs
ss
lahf
adc
repz
pop
faddl
lds
add
add
outsl
iret
outsl
xchg
mov
lret
add
add
dec
push
pop
mov
cmp
xor
adcl
inc
add
or
add
add
pop
inc
hlt
sbb
xor
jecxz
in
mov
sbb
repnz
xchg
dec
xchg
cmpsb
mov
cmp
dec
js
pop
sbb
cs
mov
mov
in
push
dec
repz
jecxz
cmp
shl
lock
add
add
cmp
add
sbb
inc
roll
jnp
mov
fdivl
add
callw
cmc
jne
inc
add
sbb
lods
cmp
cmp
fxch
pop
push
mov
cld
out
add
cmp
pop
arpl
mov
mov
add
add
add
pop
cmp
add
in
sub
add
and
mov
add
cmp
sub
inc
repz
cmp
das
mov
add
test
mov
adc
push
in
shll
mov
sbb
lea
clc
cmp
pop
mov
add
loop
dec
and
push
xor
pop
sar
xlat
pop
cmp
add
pop
fdivrp
aas
std
inc
add
add
cmp
repnz
hlt
ret
xchg
xchg
loopne
in
arpl
add
add
jae
test
add
add
addb
mov
add
add
add
add
add
aaa
mulb
je
imul
paddb
jne
dec
add
inc
loopne
sub
mov
jne
push
aaa
js
popf
jl
stos
cmp
popf
out
sub
nop
add
fistpll
int
pop
sbb
sub
mov
push
inc
push
bound
cmc
adc
push
stos
dec
daa
pop
sbb
add
cmp
xchg
xchg
sbb
idivb
nop
hlt
addb
add
sub
mov
pop
adc
into
inc
mov
or
push
cs
add
add
jecxz
xchg
mov
push
add
jne
mov
mov
clc
pop
mov
fldenv
enter
push
push
in
inc
push
jne
movsb
jbe
and
inc
int
dec
add
push
add
jmp
add
pop
mov
test
dec
xor
cmp
pop
xchg
insl
mov
hlt
rorl
add
lock
and
test
add
ja
sub
sarb
enter
push
mov
add
add
dec
add
inc
js
outsl
jb
add
mov
add
add
dec
add
add
es
push
dec
xor
push
das
adc
adc
andl
fidivrs
mov
mov
add
sub
cmp
adc
jno
xchg
adc
inc
jae
lret
push
popf
xor
sbbb
ret
push
jo
inc
inc
or
mov
mov
dec
sub
push
mov
and
popf
inc
mov
adc
jns
mov
push
mov
pop
call
add
inc
add
mov
or
add
mov
aas
sbb
jl
nop
rcl
sahf
es
xchg
add
add
add
add
fadds
dec
adc
mov
jnp,pt
lret
jb
jecxz
mov
bound
add
add
and
mov
mov
jp
orl
mov
xchg
decl
or
adc
lods
xchg
or
add
add
jne
shlb
bound
stos
mov
pop
jb
les
imul
add
pop
daa
orl
add
lods
imul
movsb
mov
sahf
xchg
enter
hlt
mov
icebp
pop
mov
fwait
xor
add
cli
jo
loopne
add
mov
dec
mov
or
mov
pop
jb
mov
imull
push
mov
mov
out
dec
or
sub
shlb
push
jge
in
gs
cli
push
movsl
and
and
nop
pop
jae
fiadds
das
dec
fdivs
cli
xor
mov
mov
xor
mov
mov
sub
inc
or
cli
dec
repz
mov
add
rcll
xchg
out
sbb
jle
adc
add
add
test
add
add
mov
and
mov
inc
sub
add
add
insl
dec
cmpl
add
add
in
pusha
add
add
daa
jg
pop
push
inc
ds
lea
sti
push
jns
pop
cs
data16
lea
add
add
shrl
pop
jp
ret
xchg
push
sub
add
add
mov
add
loopne
push
ja
and
add
add
into
xorb
add
add
test
fmuls
mov
or
stc
jbe
jmp
jmp
lret
push
mov
ret
or
mov
xor
pop
xor
js
mov
mov
add
add
pop
and
pop
adcl
cmp
mov
xor
add
add
add
add
lods
dec
add
add
ljmp
movsb
adcb
mov
add
decl
add
add
int3
je
jnp
insb
add
add
xor
movsbl
ljmp
add
fldt
add
or
add
jge
push
test
jge
xchg
imul
add
add
lea
lcall
or
mov
mov
add
add
inc
clc
inc
mov
test
loopne
pop
add
test
sub
inc
lds
scas
mov
pop
push
sbb
test
ret
lea
test
outsl
xchg
jnp
add
in
sbb
imul
ja
mov
pop
jbe
pop
sbb
icebp
xor
dec
add
dec
pop
push
imulb
inc
add
add
mov
in
sbb
mov
std
popa
out
sbb
dec
sub
sti
aaa
mov
jo
push
mov
in
mov
add
pop
cmp
dec
mov
or
jne
sbb
add
jl
fmuls
add
add
or
add
add
popa
icebp
mov
mov
add
sarl
jmp
cmp
or
mov
push
ljmp
mov
xor
push
outsb
xor
dec
scas
mov
pop
mov
jb
sbbb
xchg
fldenv
or
addb
and
mov
call
add
add
add
adc
scas
sbb
ret
mov
je
clc
mov
add
add
aaa
out
push
stos
sub
mov
xchg
fisttps
std
cltd
sub
js
cmpb
xchg
mov
mov
aam
imul
add
add
addps
popa
dec
jae
adc
int
std
jle
push
leave
jmp
test
xchg
and
add
add
movsl
scas
movsl
in
or
add
add
add
mov
jle
pop
push
loop
cmp
pushf
xor
dec
add
add
out
mov
add
add
and
add
add
sub
pop
out
sub
mov
cmpsl
scas
inc
add
mov
cmp
add
add
enter
adc
cmpsl
dec
mov
mov
add
xor
pop
adc
pop
mov
inc
adc
add
add
and
fisttpl
add
push
add
lret
jnp
cli
push
mov
roll
xor
sub
sub
cmp
jmp
pop
and
ret
cmp
xor
gs
out
enter
in
add
mov
xor
add
add
test
bound
fdiv
push
test
mov
dec
add
add
or
mov
cmp
add
add
add
scas
mov
cmp
cmp
xor
add
add
out
int
add
add
test
add
lahf
je
add
iret
in
mov
add
sbbb
mov
mov
sbb
in
lret
dec
adc
or
add
movsl
lods
jb
mov
movsl
ret
mov
out
ljmp
addr16
lods
lcall
ficoms
outsl
sbb
sub
scas
lret
push
add
jge
adc
mov
add
push
int3
jg
add
add
mov
sub
add
mov
sahf
push
xchg
lret
gs
inc
cmp
xchg
sub
mov
lods
pop
das
and
and
xlat
add
mov
sti
add
add
sbb
jg
in
stc
jge
fcompl
inc
push
cmp
xor
mov
jo
or
add
add
orl
jle
mov
clc
add
mov
add
add
mov
add
add
mov
repz
mov
add
enter
add
adc
add
hlt
or
mov
loope
fcompl
jae
inc
push
adcb
add
add
jp
mov
xlat
push
aas
jae
inc
adc
add
sbb
dec
add
xor
loop
pop
mov
fstpl
add
add
mov
orl
inc
cld
add
add
xchg
lea
and
mov
test
push
adc
in
imul
mov
xor
test
lret
mov
decb
out
test
add
add
add
cmp
add
fiadds
loope,pn
sbb
pop
cli
dec
cmp
js
jl
sub
add
sbb
mov
pusha
add
add
add
add
es
add
int
loopne
xlat
test
mov
insb
add
mov
xor
shlb
mov
cli
je
pop
hlt
out
insl
into
xchg
mov
sbbl
add
mov
sahf
dec
add
fisttpl
mov
add
add
sub
pusha
add
xchg
mov
adc
cmp
push
add
mov
add
and
push
adc
fistpl
mov
cli
cmp
mov
mov
stos
out
sbb
add
add
loop
jbe
pop
pop
sbb
add
add
fwait
or
mov
arpl
mov
rcrb
push
and
or
add
cmp
sbb
add
mov
add
into
ss
arpl
xlat
clc
dec
add
add
cmp
ffree
fwait
add
add
add
push
mov
and
mov
inc
out
or
cmp
or
add
add
scas
out
xchg
and
mov
xchg
dec
imul
imul
mov
and
mov
jae
xacquire
add
jle
inc
sbb
stc
repz
stos
push
loope
dec
movsb
lods
xor
push
jp
xor
in
sbb
mov
sub
es
xchg
movsb
imul
jp
mov
add
add
sbb
lret
mov
or
addl
aam
mov
or
add
add
add
jl
dec
push
ret
sub
je
or
mov
leave
jge
add
add
add
mov
add
jmp
xor
sbb
sti
add
data16
add
and
pop
cmp
xchg
inc
cmpb
imul
pop
xchg
add
ljmp
int
loope
sub
ds
pop
add
mov
loope
subb
add
add
add
push
syscall
and
mov
repz
add
add
add
push
xor
add
add
mov
sbb
push
jmp
ja
push
mov
xor
cmp
or
mov
xlat
pop
in
std
add
mov
add
adc
sahf
sbb
add
add
adc
lea
push
and
mov
test
add
add
or
out
pop
ret
lods
push
les
mov
cmpsb
add
mov
fnstcw
pop
cmpsl
xchg
jmp
mov
add
add
add
pop
mov
insb
add
outsb
jg
push
push
sub
add
add
add
push
mov
pop
push
cmp
cmp
cmp
pop
in
push
inc
add
add
fbstp
adc
dec
out
jl
sub
lret
mov
add
add
mov
incl
mov
adc
in
sbb
push
jns
pop
dec
pop
sbb
bound
pop
xor
scas
or
mov
inc
jb
fistpll
stos
pop
leave
out
push
sbb
mov
jns
movd
xchg
dec
add
add
add
test
popa
adc
add
lret
dec
mov
sub
add
add
scas
cmp
mov
add
mov
jg
xchg
lret
sbb
cwtl
pop
lods
fadds
pusha
add
push
lcall
add
add
add
out
leave
add
rolb
mov
pushf
lock
mov
jnp
jg
add
add
add
jg
ljmp
add
add
cmp
repnz
xor
cli
jmp
repnz
add
add
cli
icebp
lods
pop
sbb
loopne
adc
mov
add
lahf
aad
scas
add
mov
pop
sbb
sbb
add
add
addl
sbb
mov
hlt
push
push
and
add
add
pop
and
into
pop
loope
mov
cmp
add
add
loope
dec
shll
fwait
pop
subb
sub
push
push
xor
jmp
pop
adc
mov
arpl
jno
cmpb
sub
mov
sub
add
add
add
add
ret
in
xchg
fld
sbb
test
push
addr16
enter
push
into
in
or
add
add
sub
mov
sahf
pusha
add
add
add
mov
dec
or
mov
ret
or
imul
cmpsb
mov
loop
jne
pop
lock
or
mov
mov
enter
mov
cltd
or
push
shrb
and
xor
imul
add
sti
cs
add
add
add
testb
lcall
ret
cmp
mov
enter
das
in
mov
jno
hlt
cmpb
fstpt
rorb
add
pop
sub
daa
jg
add
add
xor
add
add
add
cmpsb
or
dec
and
add
add
inc
mov
ret
mov
lods
cld
lock
mov
jo
pop
push
hlt
ds
ljmp
add
sbbb
and
push
xor
aam
addr16
fsubrs
aad
data16
xor
xor
inc
or
mov
jno
jne
push
jo
pop
mov
jp
pop
in
inc
cltd
arpl
add
mov
pushf
push
hlt
and
js
enter
or
mov
sti
stc
inc
add
add
and
add
add
add
mov
and
add
add
or
push
or
xor
sbb
rcrb
or
mov
or
or
add
add
shrl
add
add
add
add
xchg
or
mov
fwait
sbbb
ret
bound
rcr
sbb
add
add
cmp
mov
xchg
mov
cmc
jge
add
movsl
sub
mov
pushl
dec
sbb
mov
mov
mov
and
aad
je
xchg
mov
add
subb
add
sub
test
data16
add
int
adc
dec
add
jb
push
or
push
bswap
cmp
mov
push
mov
push
aam
jbe
mov
lcall
add
push
sub
fcompl
inc
add
pop
addr16
jl
push
lea
add
or
popa
mov
jp
jmp
push
sbb
cmc
xor
pop
or
mov
rorl
fistps
negl
aam
adc
lret
daa
dec
or
mov
in
sti
mov
cli
loope
out
stos
shl
jb
add
mov
mov
sbbl
lods
lret
or
adc
mov
add
add
test
lock
push
cmp
xor
sbb
add
int
inc
mov
cli
xorl
cli
pop
adcl
add
add
push
adc
mov
mov
push
add
sbb
ficoml
add
adcb
inc
and
mov
adc
xchg
movsb
test
add
add
add
xchg
inc
out
popl
dec
test
iret
inc
call
dec
pop
fucomip
loope
adc
mov
std
fcompl
in
rcll
cmp
jge
jecxz
imul
add
add
add
push
jne
adcb
sbb
fstp
pushf
clc
dec
or
mov
inc
sub
aas
sbb
out
int
pop
xor
loop
add
add
mov
in
mov
add
movl
je,pn
ss
pop
sbb
add
add
xchg
mov
or
mov
jbe
lods
or
mov
lcall
mov
add
add
bound
mov
in
adc
jns
ror
push
lods
js
aas
out
jo
out
sbb
lods
or
daa
in
popa
popf
cmpb
add
add
imul
adc
add
add
lea
into
dec
push
push
mov
cmp
lea
loop
inc
mov
in
fld
inc
lcall
push
add
mov
add
add
cmp
xchg
orl
iret
add
add
add
out
push
mov
add
add
add
add
popf
out
and
mov
popf
aas
inc
add
add
fstpl
mov
add
mov
lahf
adc
mov
or
out
xchg
push
sti
xor
xor
or
mov
data16
dec
add
sbb
push
mov
daa
xchg
dec
add
add
mov
push
paddw
pusha
add
mov
negl
xchg
mov
outsb
xchg
xor
mov
xchg
mov
sbb
add
push
push
xor
clc
mov
dec
or
mov
shll
jp
dec
mov
push
lea
es
cmp
fidivs
push
jnp
or
add
add
lods
adcb
cmpl
mov
add
push
sub
add
add
mov
aaa
pop
arpl
inc
cmp
mov
mov
add
add
ja
fists
add
add
jno
and
ja
mov
mov
push
test
idivl
xor
add
sbb
adc
xor
dec
hlt
outsb
sub
add
add
add
add
insl
push
cmp
add
stos
aas
gs
lods
cs
int3
pop
dec
add
lock
lret
das
lret
sbb
add
and
jb
dec
adc
out
push
xchg
cmp
fisubrs
stc
push
lods
loopne
cwtl
int
in
dec
add
add
inc
push
jbe
sti
icebp
fistl
outsb
inc
add
mov
les
adc
loopne
push
jp
dec
add
adc
add
push
mov
pop
popa
filds
fadds
add
mov
xchg
scas
push
bound
cmp
test
pop
rolb
add
mov
add
lock
mov
add
add
insb
add
in
and
add
add
bound
xchg
or
mov
or
mov
inc
popa
sub
push
lods
lea
fwait
push
aas
mov
mov
jnp
add
inc
add
pop
xchg
and
mov
jmp
add
mov
sahf
adc
mov
scas
push
icebp
ret
add
add
mov
jo
xor
out
lcall
mov
fnop
sub
add
add
add
push
xchg
and
sti
mov
add
add
popa
mov
cld
test
bound
cmpsb
ss
bnd
repnz
in
jo
in
iret
clc
sub
push
push
les
sbb
ret
xchg
adc
aam
jl
add
add
inc
add
outsl
les
add
add
xchg
out
inc
add
add
nop
out
mov
mov
adc
jne
outsb
push
dec
in
imul
int
sahf
xchg
jge
add
mov
jl
adc
fidivrs
cmp
add
xchg
fsubrs
inc
dec
jno
add
add
es
ljmp
pop
sub
mov
push
jmp
xchg
push
dec
lea
jge
xchg
xchg
mov
adc
inc
dec
add
add
jp
adc
and
iret
dec
sahf
pop
cmp
cs
sahf
dec
or
and
add
add
xchg
push
out
cld
inc
cmpl
add
push
testb
add
inc
fstps
sub
xorb
in
ds
sbb
pusha
add
add
in
aaa
jb
cld
mov
mov
cmp
dec
add
jo
push
out
adc
lcall
inc
add
add
das
adcl
dec
add
jle
orl
pusha
add
adc
mov
or
mov
adc
ds
jbe
dec
add
add
mov
mov
fists
adc
sbb
add
add
add
cld
popa
insl
adc
mov
test
dec
mov
jns
add
add
jg
and
mov
mov
sub
add
add
lret
and
popf
pop
repnz
lods
jmp
fistpl
and
add
add
out
jne
loop
push
repz
fcompl
pop
add
add
add
or
dec
mov
cmc
add
add
add
mov
js
xor
loope
leave
cmp
dec
add
test
add
xor
mov
add
add
into
sahf
lahf
mov
ret
add
push
outsl
ljmp
test
add
mov
jae
jne
mov
xchg
jg
add
add
mov
add
push
and
push
cmp
adc
daa
pop
xor
or
mov
icebp
jl
pop
sbb
add
lods
call
mov
and
add
add
add
sbb
sbb
add
add
add
add
rcr
ficoml
and
inc
das
rorb
dec
jge
repz
andb
cmp
add
cmp
bound
daa
sti
mov
add
add
jno
mov
jg
push
xchg
push
pop
jae
or
mov
in
sarb
pop
in
test
add
imul
mov
call
add
jae
enter
gs
fsub
dec
push
int3
xchg
mov
mov
xchg
fidivrl
inc
lds
cmp
dec
dec
push
lds
popa
repz
pop
subb
add
add
test
lea
push
cmpsl
pop
push
push
std
lea
jmp
aaa
or
lods
popf
jnp
mov
add
add
pushf
loopne
insb
add
dec
add
add
cmp
das
ret
dec
add
add
sub
add
add
cmp
mov
push
and
jg
sub
loope
mov
add
add
ds
or
jne
push
add
movsl
mov
push
stos
lcall
je
cmpsb
xlat
test
out
add
adcl
jbe
ss
cmp
movb
pop
pop
or
pop
out
jb
push
add
test
sub
or
mov
and
add
or
pop
into
in
popa
sub
mov
insb
add
push
and
mov
out
lret
or
add
add
jae
sbb
inc
sub
repnz
icebp
out
add
add
inc
add
add
lcall
add
dec
pop
jmp
add
subl
mov
mov
sarl
xchg
fdivrp
out
jae
pop
icebp
xchg
mov
pusha
add
inc
pop
mov
add
add
add
sbb
jae
add
hlt
push
xor
add
xchg
out
dec
sbb
mov
mov
or
add
add
push
add
push
test
into
push
or
add
clc
outsl
cvtps2pi
mov
sub
mov
stos
mov
add
add
dec
add
cmp
jp
aas
sbb
inc
or
mov
add
add
rcr
aas
pushf
xor
add
pop
push
pop
sub
add
add
jge
mov
xor
pop
les
add
push
shrb
xchg
ficompl
ds
add
add
out
into
cld
jl
hlt
add
sti
jo
add
add
add
ret
add
add
dec
add
add
push
nop
push
add
nop
and
mov
push
and
add
in
roll
out
movsl
pushf
pop
sbb
or
les
mov
mov
ret
data16
fistl
ljmp
jmp
mov
mov
mov
or
add
test
sub
add
add
pop
das
push
add
add
sti
in
add
mov
xchg
rol
aaa
in
mov
cs
jge
es
inc
add
add
stos
lahf
and
sbb
mov
push
xchg
and
mov
test
xchg
xchg
xor
mov
add
mov
dec
adc
add
or
sahf
jg
add
shlb
mov
mov
xor
xchg
loopne
mov
pop
add
jmp
and
jno
add
add
scas
lods
cld
test
jg
icebp
xor
add
insb
add
add
imul
add
add
add
jne
inc
mov
dec
iret
cli
andl
or
mov
pop
and
mov
outsl
add
add
add
add
mov
imul
add
xor
insl
mov
add
add
push
bound
add
in
or
mov
ss
fsts
mov
cmp
add
add
mov
sti
shrb
outsb
nop
imul
adc
gs
add
or
mov
mov
ljmp
add
add
repnz
fbld
pop
inc
push
dec
pop
and
sub
ret
dec
inc
add
add
sbb
add
add
insb
add
add
or
xchg
mov
add
inc
inc
jge
push
decl
sub
mov
inc
add
je
add
add
mov
xchg
shrl
lods
sahf
mov
cwtl
repnz
test
xorb
inc
dec
rcl
cmp
inc
jmp
pop
sbb
sbbb
sbbl
cmc
rcr
pop
lahf
loop
test
pop
add
inc
add
add
jb
inc
add
add
pop
inc
add
mov
mov
mov
add
shlb
or
leave
cwtl
ss
add
add
add
pop
fmuls
pop
icebp
nop
push
cmp
enter
push
lock
mov
cmc
mov
enter
popa
out
adc
enter
add
push
or
add
add
sahf
jbe
pop
adc
fsubrl
add
pop
or
popf
sub
jno
and
in
testl
adc
lcall
add
pushf
adc
mov
or
enter
mov
xchg
add
add
lea
scas
vmptrst
push
jmp
bsr
jno
or
jp
add
push
push
mov
pop
push
aam
add
sub
sub
mov
in
or
cmpsl
mov
push
lret
or
add
add
add
xchg
xor
add
lock
push
movsb
sub
add
add
jmp
add
add
out
mov
add
or
add
add
in
fildl
mov
xor
fwait
das
lods
gs
mov
inc
add
pop
xor
add
jmp
or
add
add
xor
pop
int3
cs
add
ja
insl
xchg
add
ja
push
sarl
sub
mov
shll
add
add
add
imul
test
out
dec
adc
add
js
aad
adc
pop
pop
cmp
add
int
jno
cmpsb
les
add
inc
lods
loope
xchg
xchg
std
sarl
pop
mov
mov
inc
dec
add
cwtl
divl
subb
inc
push
or
add
add
mov
or
mov
sbb
sub
mov
and
cli
in
pop
inc
jo
ss
les
add
add
add
add
add
jnp
add
pop
ret
cmp
mov
add
sahf
mov
lret
sub
dec
and
push
push
or
mov
arpl
mov
lahf
stos
xchg
das
push
sbb
rcll
rol
inc
push
mov
mov
repnz
push
jo
cmpsb
xor
testl
mov
aam
mov
adc
cmp
jnp
push
sti
sub
cmp
inc
xor
cmp
mov
int
out
dec
xorb
adc
les
cltd
ret
cltd
sub
sbb
loope
add
add
mov
loope
add
mov
push
mov
add
testb
shll
sti
ret
mov
in
pushf
push
jne
mov
cmp
xchg
adc
mov
mov
lcall
add
add
xor
in
cld
or
movzbl
xchg
loop
in
jb
cmc
or
or
add
add
or
je
scas
cld
and
add
add
xchg
stos
xor
mov
jmp
loopne
inc
add
mov
add
add
jl
test
cli
scas
out
mov
add
add
mov
in
scas
mov
inc
cmp
mov
lods
sub
in
aam
arpl
push
mov
sar
daa
inc
add
add
mov
shrl
add
add
mov
add
add
add
ret
aaa
sub
add
add
scas
les
rol
cmpsl
int3
push
xchg
sar
je
add
leave
imul
pushf
repnz
jmp
test
movb
or
add
add
arpl
iret
xchg
push
inc
add
jne
dec
dec
stos
cld
cmp
pop
mov
jle
in
test
mov
add
add
xchg
push
and
xchg
aam
lahf
lds
push
idivl
add
add
fdivrl
dec
rcrb
in
daa
push
cltd
pop
cmp
adc
jl
or
mov
data16
xchg
add
cwtl
dec
xor
pop
popf
adc
mov
imul
fstps
movsb
sti
push
sbb
add
push
out
add
adc
add
mov
sub
mov
daa
xchg
lods
cwtl
adc
call
je
add
hlt
dec
add
add
lret
or
jo
cltd
dec
add
sub
scas
add
push
mov
add
and
ds
push
test
loopne
mov
mov
das
sbb
add
cltd
cmp
push
pusha
add
inc
add
add
or
mov
cmpsl
xor
div
sub
mov
add
add
das
or
add
add
add
pop
xor
filds
xchg
std
pushf
scas
lret
xchg
adc
jge
sbb
mov
add
inc
add
mov
movsl
imul
out
outsb
es
dec
add
add
std
clc
in
bound
mov
sbb
cwtl
and
mov
pop
movl
mov
jno
cmp
jo
fldl
or
shlb
add
arpl
repnz
clc
mov
mov
mov
add
inc
cmpsb
lea
add
aas
or
lock
subb
add
aad
mov
or
jl
xor
out
adc
pop
mov
add
mov
sar
mov
js
add
add
adc
jg
rolb
add
sbb
cltd
and
jp
pop
fsubl
ss
jmp
push
fidivrs
data16
or
add
pusha
add
add
ja
and
mov
add
add
imul
add
add
shrb
mov
jle
xlat
jmp
icebp
add
lods
xchg
pop
push
jb
add
add
mov
add
jp
xor
int
ror
bound
add
push
lret
leave
ljmp
adc
in
add
add
jg
pusha
add
icebp
pop
ret
out
sbb
sbb
adc
popa
in
mov
dec
lcall
cmp
xor
push
movsl
mov
pop
outsb
sub
add
mov
mov
add
add
adc
out
jmp
sar
mov
sbb
add
add
out
shll
addr16
or
add
add
nop
movsl
mov
js
jb
add
add
add
inc
add
add
jnp
xchg
test
sbb
sbb
jne
arpl
mov
aaa
dec
rcrb
dec
add
aaa
in
std
cs
pop
pusha
add
add
cwtl
mov
jmp
jnp
int3
pop
xchg
dec
stc
push
mov
add
add
sub
pop
mov
add
dec
push
or
rclb
mov
and
mov
mov
push
or
mov
mov
js
loopne
pop
lods
ljmp
mov
std
sub
mov
ljmp
push
gs
or
and
mov
add
add
mov
sahf
je
xorb
xchg
jge
adc
icebp
pop
mov
mov
jmp
add
dec
add
add
and
scas
hlt
clc
ja
jmp
dec
mov
outsl
pop
mov
push
pusha
add
add
add
mov
dec
add
add
dec
loope
mov
repnz
mov
adc
leave
scas
adc
add
mov
je
sbb
xchg
loop
dec
add
add
cmc
jg
jns
stc
gs
cmc
and
add
out
add
lret
loop
add
add
and
mov
xlat
xchg
shll
loopne
fisubs
jae
add
add
add
mov
or
sbb
mov
adc
dec
int
add
inc
scas
into
ds
je
sbbl
js
xlat
and
add
add
jp
gs
push
loope
lds
inc
add
add
ficoml
push
inc
je
add
add
out
stos
or
mov
add
add
jno
inc
adc
push
jecxz
xchg
push
pusha
add
add
or
add
add
mulb
rolb
add
cmp
add
add
add
add
add
in
jp
dec
pop
push
inc
add
add
push
mov
mov
incl
pop
stc
sti
out
pushf
add
dec
cmp
data16
leave
sbb
mov
ja
mov
shr
rorl
or
xchg
stc
cld
loope
sbb
jb
mov
and
imul
testb
je
arpl
push
rorb
sti
push
push
jae
and
rclb
aas
or
mov
aas
andl
leave
mov
mov
lcall
dec
add
enter
dec
add
add
js
mov
add
aad
cmp
or
mov
fiadds
inc
add
add
nop
adcl
jge
add
add
sbb
pop
adc
test
xor
loope
dec
outsb
bound
dec
and
mov
mov
daa
std
mov
jo
adc
outsb
or
push
es
clc
or
mov
push
and
add
add
in
pop
cmpsl
repnz
sub
lds
add
add
add
push
pop
cmpsb
add
mov
mov
push
add
add
sub
cmc
xor
ja
pop
enter
leave
add
insl
or
inc
add
add
mov
add
adcb
or
add
jno
add
add
push
in
inc
pop
sbb
mull
pop
sub
add
les
ror
jns
bound
movsl
mov
test
ss
test
cld
imul
pop
stos
std
mov
jecxz
xchg
add
or
jbe
adc
jne
loopne
mov
add
cmp
add
out
dec
add
add
in
ljmp
mov
test
je
or
mov
test
addb
add
add
cltd
test
and
lock
add
sub
add
loopne
jmp
mov
push
imul
js
fwait
sub
or
mov
adcb
mov
sti
mov
xor
and
add
add
enter
ret
sbb
popa
cmp
pop
sbb
lock
add
add
add
xchg
pop
movsl
add
add
xchg
cmp
push
outsb
mov
adc
outsl
mov
pop
push
mov
hlt
or
xchg
cmp
imul
cwtl
pop
insl
lret
aam
xor
add
fstl
incl
lahf
xchg
aaa
cmpsl
andb
xchg
sub
mov
sub
cmpsl
xor
dec
add
add
mov
or
pop
lret
push
or
out
in
lock
repnz
adc
movb
mov
dec
add
add
mov
dec
insl
and
cmpsl
aas
inc
add
add
add
mov
add
aaa
test
cwtl
mov
ljmp
sub
add
mul
mov
and
xlat
int3
shrb
adc
or
pop
mov
sbb
or
pop
icebp
sbb
fwait
pop
faddl
loop
and
jl
jns
add
add
fxtract
cmc
mov
sbb
nop
cmpsl
rolb
add
or
add
test
cmp
add
add
mov
add
add
ljmp
sub
add
add
ja
jo
inc
xchg
fcmovb
scas
ret
sub
fmull
popa
and
pop
or
xchg
mov
sbb
andl
add
leave
shll
lods
sbb
sub
add
add
pop
and
mov
loope
jge
mov
hlt
and
pop
fdivrs
rol
stos
int3
push
sbb
sbb
ljmp
mov
pop
scas
cld
mov
cmp
add
cmp
aas
ret
icebp
pshufw
dec
dec
add
add
mov
mov
xchg
or
adc
inc
inc
aad
or
mov
pop
pop
push
jbe
mov
orb
jecxz
inc
test
inc
pop
jnp
lahf
adcb
sbb
add
add
in
test
call
inc
icebp
shl
loope
clc
add
add
add
sub
pop
bnd
sub
add
add
push
loope
mov
ror
xchg
xchg
add
fisubrs
mov
mov
mov
pop
cmp
mov
cmp
repz
outsl
sbb
orl
add
or
dec
scas
gs
ficompl
pop
dec
data16
or
add
add
or
inc
xchg
jecxz
add
add
xor
add
lods
loopne
ljmp
into
mov
add
add
add
mov
lods
nop
dec
add
add
mov
dec
xchg
add
subl
xor
sbb
movsb
xchg
outsb
push
inc
add
add
lcall
aam
add
fnsave
add
push
and
call
loope
add
push
cmp
ja
out
lcallw
fcoml
add
add
push
cmpl
sbb
insl
lea
push
or
sub
sar
xchg
add
add
add
arpl
popa
call
dec
jg
jb
popa
lea
ffree
lcall
int
mov
test
cmc
or
aas
cmc
jmp
aas
cmpsb
nop
ret
cmpsl
and
mov
stos
stc
jne
jbe
adc
clc
add
data16
xor
mov
or
mov
adc
add
add
push
sub
push
test
leave
fisubrl
mov
inc
cwtl
jb
cmp
outsl
xorb
pop
mov
add
add
mov
leave
mov
imul
imul
add
cmp
add
lcall
xchg
stos
mov
pop
and
mov
andl
or
add
add
adc
dec
fadds
push
sahf
rol
fisttpll
subb
add
jecxz
xlat
lcall
icebp
pop
jo
faddl
mov
push
repz
push
xchg
and
rorb
das
rolb
add
cmp
xor
test
mov
out
mov
mov
or
lock
jae
js
add
adc
mov
add
mov
fdivr
in
pop
push
cmp
lods
jns
adc
cwtl
mov
call
pop
js
shl
sbb
es
xor
loopne
movsl
jecxz
sbb
add
add
add
jg
push
lock
iret
xor
sarb
out
ret
shr
push
aaa
pop
in
shrb
or
xchg
or
push
dec
add
add
add
inc
data16
dec
dec
add
dec
mov
add
loopne
adc
jns
dec
mov
das
xchg
rorl
add
add
push
mov
loopne
sub
mov
cmp
fcomps
fmull
sbb
sbb
add
add
inc
aaa
sub
outsl
or
fwait
cmp
dec
mov
cwtl
popa
cmpsl
fbstp
out
sar
mov
add
test
jmp
add
outsl
scas
adc
mov
jnp
push
test
add
and
lret
sbb
test
pop
push
cmp
sub
mov
add
add
adc
push
pop
and
mov
jno
mov
mov
add
add
xchg
add
add
add
js
push
adc
inc
sbb
add
into
lds
dec
add
mov
mov
pop
xor
xchg
jge
arpl
add
mov
push
outsl
push
idivb
je
hlt
in
adc
dec
push
bound
stos
xchg
insl
rcr
mov
add
mov
add
add
add
inc
dec
test
hlt
pop
test
xchg
and
mov
fdivl
pusha
add
add
xchg
enter
xchg
pop
out
xchg
lea
inc
sub
add
add
push
or
mov
mov
mov
fbld
mov
mov
xor
or
mov
xchg
outsl
roll
ds
loop
add
add
lock
cli
add
sub
xlat
test
add
add
movsb
aaa
push
or
add
add
add
add
add
popa
lret
add
add
sbb
push
lahf
xchg
push
push
aas
dec
add
inc
sbb
ror
jle
adc
je
fcmovnb
add
or
add
add
stos
repz
rcrl
add
pop
fcmovne
cmp
push
nop
sub
add
add
pop
out
insb
add
add
add
fists
sub
add
add
repz
int
and
and
fisttpll
leave
in
lret
add
mov
add
add
fbld
insb
add
add
out
ds
subl
push
push
fdiv
fbstp
and
add
add
dec
es
mov
add
mov
sbb
adc
add
add
add
add
or
push
xchg
pop
in
jbe
in
add
mov
xor
sub
add
push
sbb
jmp
jb
and
adc
lods
out
push
sbb
jp
add
add
xchg
leave
push
xlat
lret
mov
leave
cltd
push
aaa
cmp
sub
dec
xor
cmp
mov
mov
dec
add
loop
adc
add
add
mov
xlat
out
inc
push
pop
inc
data16
pop
in
xchg
js
add
test
pop
sbb
add
add
notl
add
add
mov
add
pop
movsb
dec
add
add
add
mov
dec
add
add
mov
shrb
add
ret
dec
lret
adc
push
xor
pop
cmp
cmp
add
add
add
sub
inc
movsl
sahf
dec
je
int3
add
dec
hlt
cmp
add
add
and
add
pop
add
add
push
add
gs
sbb
add
rcrl
add
add
mov
add
add
and
xor
or
add
mov
add
add
xchg
xchg
jno
add
dec
dec
add
pop
xor
movsb
lahf
pop
pop
inc
add
add
test
add
int
fstps
add
mov
add
add
add
and
int
inc
add
add
enter
add
add
xor
add
add
test
add
dec
mov
add
add
push
repnz
add
add
add
repnz
and
lock
jns
addr16
add
add
jne
clc
imul
add
es
cmp
daa
in
test
inc
add
add
lods
push
das
rcr
jl
add
add
dec
add
add
rclb
add
aaa
stos
lret
pop
sbb
add
add
sbb
jo
sub
int3
push
fisttps
inc
add
add
jae
sbb
adc
mov
js
loope
adc
add
add
ss
push
xchg
aas
cld
adc
add
add
pusha
add
add
icebp
ret
add
add
add
js
inc
cmp
dec
insl
aaa
sub
add
orb
dec
push
roll
and
inc
add
add
dec
in
add
xor
sbb
test
push
push
imul
add
sub
mov
lock
loop
mov
out
ss
es
cmp
inc
pusha
add
jg
add
add
add
add
in
scas
cmc
or
mov
rorb
mov
lahf
jle
mov
jl
scas
push
movsb
cld
cmpb
add
add
jmp
bound
mov
adc
add
mov
js
mov
add
repz
add
add
loopne
call
add
in
mov
jl
add
add
cmpl
sti
outsb
sbb
mov
sbb
inc
jo
mov
jle
add
arpl
push
cwtl
lock
imul
cltd
ret
or
add
add
jb
loopne
in
sub
arpl
mov
outsl
ficoml
add
jmp
cs
mov
inc
mov
xor
add
cmp
lahf
xchg
imul
lret
sarb
dec
fwait
mov
sarl
push
xorb
lock
lret
add
sti
pushaw
add
push
cmpb
add
add
add
and
shrb
jmp
lret
sbb
add
bound
push
mov
in
test
or
lds
push
xchg
in
or
add
add
adc
ss
test
xchg
mov
add
add
imulb
mov
xchg
xchg
and
daa
adc
xchg
pusha
add
inc
add
add
xchg
sbb
mov
and
mov
mov
imul
dec
add
add
xor
faddl
mulb
sub
add
add
ficoms
push
mov
orl
add
add
into
cli
clc
pop
mov
test
add
add
pop
or
add
add
add
xchg
es
dec
xchg
mov
inc
int
arpl
rcrl
lods
cmp
test
add
add
inc
and
sub
add
add
icebp
pop
icebp
pop
mov
jo
arpl
push
inc
add
mov
adc
xor
mov
mov
jo
add
add
es
mov
subb
add
test
fadds
push
mov
mov
push
inc
push
in
test
add
add
iret
and
mov
jmp
cmp
sub
mov
jge
xchg
inc
add
jo
fnstenv
es
int3
mov
add
lea
add
add
ljmp
sub
push
mov
add
pusha
add
dec
in
jl
add
add
sub
out
neg
pop
inc
jne
add
pop
in
test
call
sub
add
add
sub
add
add
loope
pop
adc
loopne
mov
and
in
inc
xlat
xchg
cwtl
std
pop
mov
sub
cltd
cmpb
jne
inc
push
les
mov
data16
add
add
imul
into
fdivrl
add
add
inc
js
lock
sbb
lock
rcll
or
add
add
add
add
jmp
orb
add
aaa
jp
dec
insb
add
mov
sarl
mov
xchg
decb
add
add
in
adc
mov
cmc
imul
ret
pop
or
mov
cmp
scas
pop
fisubl
or
mov
lahf
dec
inc
imul
mov
cmp
pop
cmp
ret
cmp
inc
sbbb
adc
orb
add
call
sti
pop
das
int3
and
repnz
push
sbb
cmp
push
sbb
movl
add
lods
cmpsl
subl
mov
sub
pop
jp
cmp
push
adc
test
add
add
add
push
xchg
test
mov
push
and
add
add
pop
decl
pushl
ja
inc
push
out
sbb
fwait
mov
add
add
repnz
add
popa
outsl
dec
mov
or
out
mov
dec
add
add
push
pop
sub
add
add
push
data16
mov
adc
mov
insl
xor
add
dec
mov
push
adc
add
pop
cmp
xchg
add
xchg
fists
jbe
aaa
pop
xor
add
decl
rorl
add
xor
movsb
pop
jp
dec
sarb
sub
add
add
mov
daa
in
push
outsb
xchg
cmc
adc
je
ret
je
sub
add
add
or
mov
add
add
ja
mov
mov
scas
insl
and
mov
sub
mov
sub
add
add
add
add
push
lea
jp
sub
mov
mov
xorl
aaa
sub
add
add
jle
pop
jo
or
dec
and
mov
jb
pop
jl
pop
add
mov
sub
add
push
mov
lods
lahf
inc
add
outsb
pop
pop
aaa
cmc
push
jp
ja
push
xchg
ret
stos
lcall
lock
and
sub
js
mov
ret
push
imul
imul
js
push
mov
inc
inc
add
fidivs
pop
shr
lea
add
mov
jne
xchg
jb
popf
sbb
pop
xchg
adc
add
pop
jae
andl
pushf
cmpsl
jl
dec
cmp
pop
das
xchg
add
add
add
add
and
dec
add
add
sahf
cld
leave
js
add
mov
add
add
imul
iret
sbb
pop
and
mov
je
mov
outsb
push
hlt
pop
mov
rcr
pusha
add
mov
scas
inc
add
add
js
test
jbe
cmp
dec
and
add
add
mov
in
xchg
add
mov
mov
dec
loopne
add
add
jb
add
mov
push
dec
sub
add
add
xchg
lcall
add
and
add
push
pop
add
add
add
cwtl
jp
loopne
mov
mov
ljmp
add
das
dec
add
add
insl
repz
mov
jle
clc
jb
add
out
dec
jmp
rcrl
add
add
imul
push
sbb
jae
test
add
fimull
test
mov
ret
or
fidivl
bound
sarb
add
ljmp
mov
pop
jo
das
fcoml
shlb
orb
add
outsb
rcll
daa
lcallw
adc
xor
mov
ret
add
add
enter
add
add
mov
test
mov
mov
or
sub
sbb
jno
sub
mov
add
add
es
adc
jg
int
add
add
mov
jns
leave
sub
enter
cld
inc
notl
xor
hlt
mov
sub
push
xchg
xchg
sti
pushf
cld
sahf
cmp
push
gs
insb
add
mov
add
sbb
xchg
and
mov
mov
ret
sub
add
add
sub
add
add
call
mov
inc
xorl
outsl
mov
mov
add
add
subl
sbb
mov
or
add
and
test
or
pop
push
xchg
cli
jb
int3
sub
mov
inc
loop
mov
pop
add
sbb
jl
enter
std
jmp
jecxz
add
mov
inc
add
movsb
sub
adc
add
add
add
mov
out
lods
pop
sbb
push
lock
clc
pop
scas
xor
adc
push
jo,pn
cli
xchg
pop
push
pop
int
repnz
inc
add
cmp
lret
mov
push
mov
sahf
dec
sbb
add
add
add
mov
add
and
out
mov
dec
sbb
lds
add
mov
jg
fimuls
fdecstp
dec
sbb
jne
iret
outsl
push
mov
mov
add
add
lret
add
add
or
mov
js
jle
jle
xchg
sub
mov
push
xchg
call
add
jge
xchg
popf
inc
xor
lahf
adc
rcrb
add
add
jbe
mov
add
add
xchg
mov
add
enter
in
jmp
fists
add
lods
pop
dec
mov
jmp
imul
je
xchg
jne
fadd
inc
cs
out
outsb
icebp
ret
sub
mov
push
notl
add
sbb
shl
jl
fistps
add
and
repnz
xchg
cmp
add
pop
or
push
mov
and
popa
jnp
hlt
mov
dec
add
insl
ja
xor
sub
add
cld
push
mov
add
cmp
jns
add
add
add
push
outsb
xchg
lret
xchg
xchg
in
int
pop
fidivrl
or
xchg
xchg
pop
sarb
stc
push
lds
test
and
mov
and
mov
inc
dec
aas
lcall
mov
nop
clc
std
xchg
add
and
pop
ss
or
add
add
sbb
sub
add
add
add
sub
jae
shll
add
add
sbb
dec
add
add
mov
add
faddl
fbld
inc
test
mov
xlat
adc
popa
mov
push
lds
xor
adc
jg
and
mov
popa
aam
es
xor
add
add
mov
test
pop
pop
das
std
mov
test
lahf
mov
adc
imul
subl
add
jno
pop
xchg
add
cltd
outsb
inc
inc
cmp
add
pop
jb
mov
sub
adc
ret
fadd
fcom
adc
add
aam
adc
inc
mov
jmp
add
add
cmp
mov
add
jae
cltd
fidivs
sbb
push
cmpb
and
mov
shrb
xor
add
mov
jp
inc
lret
or
cmpsb
or
loop
cmpb
mov
seta
shll
ja
add
add
rclb
sub
add
add
enter
or
add
add
add
xchg
in
js
add
mov
mov
in
mov
sub
add
add
jmp
std
xor
call
movsb
movswl
inc
enter
mov
lods
or
mov
xchg
or
add
add
jne
xchg
and
add
add
addr16
push
dec
push
inc
dec
ds
and
mov
add
add
lahf
cmp
xchg
push
add
add
add
cmpsl
mov
call
adc
push
aam
or
mov
jle
call
imul
or
add
add
je
aas
sbb
andb
arpl
aam
pop
shlb
jg
mov
xor
cltd
inc
or
jb
inc
jb
cmp
ret
movsb
nop
fwait
or
dec
jmp
xor
clc
int3
sub
add
add
mov
and
or
loope
xchg
and
aad
pop
cmp
add
aad
das
ja
inc
mov
imul
or
add
add
fisubs
mov
stos
ds
dec
cwtl
stc
dec
add
jmp
arpl
cmp
pop
add
add
inc
icebp
fisubrl
rolb
mov
test
lods
sbb
sub
aam
cmp
add
add
mov
cltd
mov
test
push
mov
cmpsl
mov
int
jmp
add
add
pop
sti
jmp
paddusb
mov
cmp
add
hlt
sbb
or
add
fidivrl
add
mov
pop
pop
out
push
xchg
daa
jecxz
adcb
cmp
jle
mov
inc
pop
test
sub
cmp
jae
sbb
movsl
push
push
and
mov
lcall
and
jle
ret
iret
insb
add
movsl
hlt
push
jne
lret
test
or
add
add
inc
mov
stos
rcrl
movl
imull
pushl
sbb
add
mov
imul
add
add
add
repz
enter
arpl
push
mov
es
stc
mov
or
add
add
clc
fdivrs
pop
xchg
adc
mov
sbb
jge
cli
adc
or
subl
pop
or
mov
enter
add
add
testl
add
xor
mov
lods
imul
or
and
ja
arpl
xchg
lret
xchg
sub
mov
jnp
add
mov
std
daa
dec
xor
out
sub
pop
mov
add
add
add
scas
pop
pop
push
rcrb
sub
mov
mov
sub
bound
or
push
push
and
add
add
mov
xor
sbb
into
push
xor
adc
test
or
add
add
mov
fbld
add
push
push
icebp
add
flds
mov
test
fadds
add
or
add
add
xchg
popa
test
into
inc
add
dec
add
add
fbld
leave
call
movsb
sbb
mov
xor
inc
out
sysexit
add
add
clc
pop
rolb
xor
pop
push
inc
add
add
add
jge
mov
and
mov
mov
add
ds
aas
sub
mov
add
iret
xchg
fidivs
mov
add
and
mov
xorb
adc
pop
adc
out
out
add
add
add
loope
adc
ret
jb
add
add
addr16
mov
dec
jae
pop
sub
iret
mov
jae
dec
out
cli
inc
and
clc
iret
mov
loopne
pop
inc
or
push
push
adc
mulb
add
or
add
add
scas
inc
pop
and
incb
int3
leave
and
add
add
int3
adc
fisttpl
sbb
ficompl
jae
cs
sbb
add
stos
lea
add
pushf
cmp
cmp
xor
ret
mov
inc
dec
mov
add
add
movsl
pop
loopne
xchg
js
cld
push
mov
jae
scas
in
add
dec
sub
xchg
loope
scas
sub
mov
and
mov
mov
jns
aas
and
mov
mov
filds
loop
roll
add
add
test
push
mov
testw
or
mov
ds
cwtl
out
inc
les
rorb
mov
mov
mov
dec
push
lcall
cmp
jge
adc
dec
add
add
incl
xchg
jp
and
and
add
add
shll
gs
sbbb
add
and
xor
inc
add
add
cmpsl
pop
inc
xor
repnz
inc
sbb
test
add
add
jnp
jbe
fsubs
mov
mov
pop
mov
adc
jb
test
add
add
mov
add
push
xchg
nop
xor
push
xchg
push
adc
lock
dec
pop
cmp
add
or
add
add
pop
cmp
add
mov
les
add
xor
xor
out
adc
add
jnp
xchg
jmp
add
arpl
add
sbb
shr
xor
jne
jnp
pop
dec
mov
loope
or
mov
xchg
pop
push
sub
add
rcrl
outsl
movsb
mov
dec
gs
rclb
mov
cli
adc
jp
xor
jg
or
or
pop
mov
scas
shlb
inc
add
add
lock
loopne
sbb
popf
fldt
add
add
std
outsb
lcall
pop
test
outsb
push
or
add
add
popf
testb
lret
pop
dec
push
mov
paddusb
aam
mov
sub
or
mov
add
xchg
fwait
mov
sbb
bound
add
inc
add
add
dec
leave
pop
loope
xor
pusha
add
fldl
xchg
and
add
rcr
divl
lods
or
mov
les
add
push
add
add
add
add
xor
push
mov
xchg
addl
xor
sub
inc
or
mov
inc
and
add
mov
pop
dec
xor
pop
dec
stos
test
jne
cmc
and
add
add
add
add
add
mov
std
push
jb
int3
mov
mov
pop
fldcw
int
mov
je
lock
daa
mov
mov
jbe
or
add
mov
loop
jmp
add
or
add
add
outsb
fsubrp
outsl
out
out
mov
sarb
add
add
inc
insb
add
add
jmp
add
add
push
lcall
add
scas
or
add
add
inc
jmp
fisubrs
jg
jp
sbb
pusha
add
add
adc
mov
int
push
xor
movsb
adc
add
mov
jns
or
mov
bound
pop
or
clc
sub
add
add
sub
sahf
xchg
cmp
mov
inc
sbb
add
xor
mov
sub
add
add
or
adc
lock
imul
or
add
add
xor
or
add
add
adc
add
xor
daa
inc
jbe
lret
add
dec
add
add
mov
loopne
jb
xchg
hlt
xchg
std
add
leave
insb
add
sub
add
add
add
inc
add
add
mov
dec
lods
jbe
stc
push
adc
add
add
adc
inc
add
add
inc
rcrb
je
pop
xlat
bswap
cltd
dec
push
xor
inc
sbb
xchg
pop
ss
mov
pop
addr16
mov
mov
inc
add
add
pop
mov
pop
loopne
adc
ja
cmc
sub
out
or
add
je
push
stos
nop
aam
inc
add
add
adc
imul
add
add
add
outsb
xchg
pop
xchg
adc
stos
test
sbbb
adc
inc
lods
jecxz
stc
daa
cmp
lods
sahf
add
cmp
add
add
mov
mov
movsb
xchg
adc
arpl
mov
mov
and
mov
mov
mov
mov
add
dec
sbbb
jg
rcl
cmp
js
xchg
ret
loope
push
nop
jmp
mov
cmpb
cmp
lret
or
sbb
pushl
sub
add
add
clc
shrl
adc
push
push
ret
mov
scas
mov
and
push
cmp
add
add
add
jo
bswap
jb
jp
jne
scas
es
cltd
sub
add
int
mull
add
adc
popa
pop
negl
sub
add
jp
push
push
lock
add
add
push
scas
cmpsl
pop
mov
mov
mov
loope
mov
add
cmp
les
out
mov
add
add
add
mov
xchg
xchg
sub
or
add
add
into
rclb
add
add
cmp
cmp
push
fwait
sub
std
fldcw
sti
loope
jae
add
add
add
mov
out
xor
cmp
popa
add
or
mov
mov
stos
and
add
add
movsb
mov
rolb
fsubr
cmp
aaa
leave
mov
mov
in
cmp
adc
dec
cwtl
jb
lcall
and
loop
xchg
add
add
pop
mov
aam
and
or
nop
sub
mov
add
xchg
pop
and
stos
rorb
popa
shrb
add
addr16
scas
mov
dec
add
add
pusha
add
rolb
ret
mov
jl
mov
sub
mov
mov
push
mov
movsb
dec
add
add
add
push
jns
adc
adc
mov
add
add
add
add
mov
mov
in
adc
mulb
test
mov
or
add
add
and
add
add
mov
into
add
call
push
add
cmpl
add
add
or
lret
cmp
add
lea
mov
outsl
add
add
add
mov
push
aas
or
add
sub
mov
into
sbb
clc
cmp
xor
stos
imul
mov
push
or
inc
out
cmp
enter
filds
add
add
or
mov
ret
and
test
adc
jb
mov
dec
fistpl
add
adc
xchg
sbb
hlt
cmp
imul
adc
jmp
add
jae
stos
sub
mov
mov
cmp
sub
xor
cmp
pop
add
add
add
lea
shrb
push
xor
push
and
add
add
add
loop
jnp
in
inc
add
add
lods
negl
add
add
or
push
ds
mov
push
dec
add
push
sub
add
add
pop
cli
mov
gs
pusha
add
add
and
add
add
in
cli
fiadds
popa
xor
add
add
pop
add
shl
add
or
mov
stc
jne
or
mov
jle
cmpsb
mov
add
dec
out
or
mov
and
push
mov
mov
jmp
add
ret
adc
xor
xor
adc
jne
call
sbb
mov
add
add
sub
add
add
xor
inc
xorl
loopne
mov
jg
mov
add
add
fmulp
leave
and
mov
jbe
or
call
jns
dec
out
sbb
inc
jbe
jo
push
andb
pop
mov
mov
fisubrl
pusha
add
in
add
add
js
xor
fmuls
cld
ja
mov
int
imul
pop
and
add
add
sbb
jo
inc
add
imul
call
fsubs
add
add
add
push
arpl
and
add
add
jae
insl
enter
push
ret
repz
sub
add
add
pushf
je
ja
cmp
cmc
addr16
daa
pop
mov
nop
fidivrl
xor
xor
add
and
add
ds
out
adc
cmp
mov
add
add
ret
rclb
ret
add
add
mov
pop
mov
push
pop
ss
xor
test
pushf
rcrb
je
scas
imul
or
out
add
add
mov
mov
jmp
xor
ja
into
lret
jae
xchg
sbb
mov
mov
sahf
adc
sarl
shr
outsl
xor
sahf
cmp
pop
pushf
stc
jae
hlt
insb
add
add
inc
adc
test
shrb
xor
add
xor
xor
add
add
jecxz
pop
ja
sbb
pop
adc
pusha
add
add
jp
addr16
js
insl
sub
fldcw
add
add
push
enter
adc
add
ds
lds
jo
dec
rolb
dec
jecxz
into
cs
int3
or
add
add
lcall
lahf
dec
add
add
mov
dec
sub
add
add
lcall
fisttps
and
add
adc
or
mov
aaa
out
add
dec
sbbb
push
subb
push
cmpsl
int
push
pop
push
shrb
add
add
xor
mov
add
mov
add
add
add
mov
add
mov
outsl
adc
or
push
jle
xor
or
aaa
out
add
pop
adc
push
add
add
add
add
adc
das
add
add
add
inc
add
sti
ja
inc
push
test
add
icebp
adc
add
nop
test
add
add
ret
out
filds
js
orb
add
in
inc
out
add
add
iret
call
sbb
cmp
add
add
js
fbstp
mov
adc
loope
leave
push
sahf
ljmp
cmp
add
stos
add
or
mov
dec
ds
cmovg
aam
outsb
shlb
add
mov
add
add
test
push
data16
cltd
jnp
add
test
push
mov
add
fsubl
push
push
aam
mov
xor
nop
mov
ss
sbb
pop
sbb
lret
stos
roll
sbb
cltd
xor
aaa
aas
shl
ficompl
or
jne
out
inc
loope
mov
push
js
add
add
rorl
mov
adc
enter
ja
jb
add
mov
sub
imull
add
add
and
add
out
inc
lock
jmp
sub
les
mov
pop
jle
cwtl
or
xchg
insl
mov
cmp
add
add
cmpsb
je
out
xchg
xchg
jp
add
push
lahf
mov
add
pusha
add
add
add
xor
nop
xor
or
mov
cmp
xchg
add
repz
sbb
add
add
insl
out
and
add
mov
add
add
add
adc
sbb
aad
loopne
mov
into
jle
std
imul
xchg
hlt
loopne
rcrb
add
or
std
pusha
add
add
sbb
repnz
add
add
add
add
pop
aam
jge
fimull
pushf
mov
lahf
lea
add
add
add
mov
jne
inc
pop
lock
stos
jne
ds
fstpt
jne
sti
mov
xor
hlt
das
rcrb
add
mov
int3
int3
rcrl
push
sbb
sub
add
add
cwtl
add
and
push
stc
fsubrs
and
mov
lods
mov
rorb
add
xlat
xor
add
lret
sub
pop
inc
test
add
mov
jno
test
jge
imulb
ror
mov
adc
cwtl
shl
cmp
jg
mov
add
add
add
push
sbb
cmpsb
jo
fdivl
mov
nop
mov
adc
out
lods
sbbl
pop
or
add
add
shrb
int3
cld
dec
fdivrl
shl
sub
test
orb
aaa
ret
and
ja
mov
xchg
and
sub
add
add
mov
push
cmp
add
add
stc
add
out
sub
mov
add
mov
add
push
or
mov
inc
inc
rorl
adc
lcall
mov
add
jmp
repnz
in
add
jno
pop
sbb
lahf
xchg
mov
rcrb
loop
jg
add
add
ret
fbld
add
and
mov
jl
xor
mov
add
add
dec
xor
jb
and
out
subb
push
push
jge
rcrb
fcompl
push
mov
mov
xor
sub
mov
inc
add
add
addr16
addb
mov
pop
ret
inc
mov
or
add
add
pop
push
or
mov
push
push
push
outsb
repnz
fdivrl
sahf
mov
frstor
mov
icebp
mov
mov
mov
add
add
add
sbb
mov
jb
dec
push
divb
pop
mov
add
mov
sar
mov
add
add
cmc
dec
add
xchg
mov
divps
fsub
or
add
push
cs
aam
adc
test
add
add
adc
add
jnp
neg
add
add
and
dec
aad
into
cmpsb
dec
add
add
loope
jbe
insb
add
add
adc
stos
mov
add
add
and
jle
mov
wrmsr
ljmp
cmp
add
mov
lcall
add
add
add
shlb
dec
add
add
lcall
mov
adcl
rcrb
bound
roll
fiaddl
mov
xor
xor
je
dec
mov
xchg
scas
stos
push
jp
test
jge
ss
cld
jne
sub
add
add
pusha
add
xor
dec
fcompl
mov
or
mov
insl
lret
mov
ds
xchg
push
sub
add
add
mov
out
lret
shlb
pushf
pusha
add
sarl
push
jle
mov
lret
lods
jle
dec
enter
add
add
add
loop
rcr
jp
pop
sub
add
add
imul
add
jmp
imul
loope,pn
lea
cmpsl
pop
mov
cld
ja
je
fcompl
inc
add
add
jae
mov
mov
sarb
mov
sbb
in
call
mov
or
aam
push
xor
mov
pop
lcall
and
jg
add
mov
aam
adc
aaa
mov
mov
adc
mov
add
add
ffreep
add
lahf
sbb
mov
movsl
xor
sbb
add
add
mov
sbb
dec
add
add
inc
lret
push
out
mov
pop
sub
add
add
bnd
imul
hlt
and
inc
xchg
cmpsl
mov
push
pop
ds
push
incb
mov
sub
sub
testb
or
lock
and
xchg
add
pop
mov
and
mov
lock
jmp
in
pop
jbe
sbb
test
pop
jne
or
sub
add
mov
sub
mov
add
add
add
or
add
add
test
add
xchg
add
mov
add
loope
and
test
dec
add
add
popa
fistpll
mov
aam
pop
push
xor
adc
add
cmpsl
pop
outsl
nop
out
stos
jl
out
cld
jl
xchg
mov
and
pop
mov
add
inc
movb
mov
gs
xchg
loop
pusha
add
add
mov
add
mov
cld
aaa
mov
test
popa
cmpsl
and
add
mov
lret
mov
add
popa
or
mov
scas
ss
or
add
add
lds
nop
sub
fucomi
dec
inc
add
add
sbb
and
cltd
in
ja
inc
inc
leave
rorb
add
cltd
sbb
add
cmp
xlat
xor
or
cmpsb
scas
test
ds
pusha
add
dec
cmp
shrl
and
cmp
mov
add
add
rorl
mov
mov
xor
clc
push
pop
ljmp
mov
clc
add
sarl
add
sbb
add
add
mov
enter
cmpsl
mov
cmpsl
lods
cmpsb
and
add
pop
pusha
add
add
sub
daa
sub
lret
add
add
add
lods
or
add
add
cmp
add
add
add
and
add
add
into
movsb
cmc
test
push
push
ljmp
pop
add
xchg
test
jno
fmull
add
add
dec
call
xor
mov
not
mov
notl
push
and
loope
add
add
lret
icebp
fsubl
dec
xor
iret
je
and
add
add
cmp
inc
lret
jo
dec
fistps
jb
fadds
and
div
cmpsl
popa
xchg
addb
movsb
mov
shl
pop
push
insl
cmpsb
stos
mov
dec
mov
not
jle
adc
in
push
xor
psrlq
mov
add
add
mov
aam
mov
add
jge
jp
add
iret
mov
mov
aaa
popl
add
fwait
popl
add
add
aas
in
cwtl
xchg
xor
add
add
adc
inc
rorl
add
mov
lret
sahf
and
mov
lret
jl
adc
inc
fidivrl
mov
pop
sbb
adc
jns
xor
sbb
or
sahf
fidivrl
pop
sub
add
add
and
jno
shr
stos
dec
add
add
add
loopne
or
adc
mov
xor
mov
mov
icebp
lret
cld
sub
mov
decl
add
cs
cmp
popf
testb
add
dec
mov
ljmp
cmpsb
iret
data16
cmp
pop
enter
jmp
lods
pop
or
add
add
cmp
inc
xor
mov
jbe
mov
repnz
add
rclb
rolb
pop
add
mov
ds
int
push
loop
pop
fiaddl
adc
data16
dec
add
mov
add
add
add
or
mov
cld
fbstp
cli
fcoml
repnz
mov
dec
repz
and
sub
mov
push
adc
loopne
mov
add
int
js
sub
enter
add
scas
flds
dec
imul
xchg
sbb
sbb
sub
inc
test
pusha
add
add
out
xchg
pop
ss
sbb
add
add
int3
cmp
mov
cmp
sbb
mov
push
lea
nop
inc
adc
stos
hlt
mov
push
push
xchg
sti
ja
add
add
out
mov
test
cmp
cs
mov
jbe
iret
int
mov
xorb
mov
ret
xchg
test
add
scas
stos
inc
lret
mov
add
stos
mov
or
mov
jns
popf
xchg
popa
in
stos
mov
xchg
sub
inc
add
inc
add
add
add
jmp
sub
add
add
lahf
in
fdivp
inc
pop
insb
add
add
push
cli
pop
mov
inc
test
std
cld
je
cmp
loop
ret
test
adc
inc
cmc
mov
in
push
adcl
and
js
jns
xchg
push
sbb
push
mov
push
aas
sub
cmp
add
aaa
mov
test
ljmp
inc
je
shrb
dec
adc
dec
mov
add
and
lods
jp
pop
mov
add
push
jne
sti
mov
decb
jne
orl
add
push
and
add
add
aaa
popf
pop
mov
xchg
mov
add
jge
add
in
inc
inc
mov
inc
add
dec
add
bound
mov
lcall
xor
popf
push
test
or
rorb
inc
add
add
add
in
insw
pusha
add
div
shll
addr16
add
inc
enter
add
add
add
sub
add
jne
adc
fptan
testb
dec
mov
cmp
add
add
je
add
fwait
cs
icebp
sub
cmp
and
mov
mov
pop
pop
fcompl
mov
push
movsl
call
add
add
call
or
add
add
adc
iret
dec
es
mov
call
mov
shlb
scas
ret
ficompl
inc
call
adc
sub
ja
cmc
lret
add
add
and
stos
addr16
jle
shlb
insb
add
stos
scas
or
mov
mov
idivl
call
insl
xchg
sub
push
loopne
iret
shlb
rcrl
loopne
aad
aaa
shll
jl
mov
std
adc
jmp
and
or
push
nop
fcomps
add
insb
add
add
add
mov
mov
or
and
add
add
arpl
aam
xchg
xchg
push
add
and
out
pop
and
popa
daa
mov
sub
mov
andl
adc
add
add
filds
add
add
andb
jbe
repnz
add
add
push
add
mov
je
mov
movsl
leave
pop
cmp
popf
xchg
idivl
std
rcr
test
inc
xchg
ret
xorl
mov
pop
pop
shll
inc
adc
adc
sahf
sbb
jb
bound
jp
mov
or
in
mov
cmpsl
sub
cwtl
popl
add
add
pop
loope
sbb
push
push
mov
jmp
inc
sbbb
leave
out
and
mov
jecxz
add
es
call
push
push
mov
dec
add
add
add
push
cmpsb
add
push
mov
std
js
ret
testb
add
sub
add
add
cmp
mov
or
mov
mov
movsb
sahf
std
sbb
add
inc
test
add
add
adc
and
dec
push
and
jmp
add
or
in
je
scas
dec
sub
mov
pop
cmpsl
xchg
or
mov
xor
add
stos
test
in
arpl
sub
add
add
fwait
mov
nop
push
clc
fistl
and
mov
add
js
adcl
sub
aam
imul
jl
dec
aam
push
xor
add
add
xor
add
add
mov
add
mov
enterw
push
mov
add
add
push
stos
cmpsb
int3
push
sub
xchg
js
js
outsl
out
sub
add
mov
leave
mov
rcrl
push
ret
add
add
add
test
jecxz
cmp
dec
add
mov
outsl
fadds
xchg
sub
cltd
sub
add
pop
or
mov
pop
dec
sub
mov
pop
or
mov
add
jp
inc
add
mov
mov
cli
inc
imul
jbe
cmp
xchg
xor
inc
sti
leave
es
daa
pop
mov
add
aaa
movsl
mov
out
add
mov
stc
adc
xchg
or
add
add
mov
pusha
add
sub
aaa
in
lret
test
xor
xchg
sub
or
hlt
adc
insl
push
pop
adc
popa
push
xor
movl
mov
inc
lret
jo
xor
add
movsb
imull
movups
loope
lcall
add
ffree
call
add
or
inc
jns
addr16
in
xchg
jecxz
idivb
clc
inc
dec
testb
add
iret
dec
add
add
add
add
mov
jle
cs
pop
insl
or
add
add
mov
mov
add
mov
xchg
xor
jne
std
sti
add
ss
lea
add
pop
in
xchg
ficoml
add
inc
cmp
push
or
cmpsl
rcl
xchg
rorl
add
add
fidivrs
imul
add
sub
add
add
jecxz
add
dec
ret
sbb
mov
jnp
sbb
sub
mov
xchg
repnz
mov
mov
cmp
loopne
cmp
jmp
jno
push
pop
mov
jl
push
sbb
mov
fsubl
mov
sarl
dec
jno
imul
mov
mov
mov
add
add
push
ss
cmp
insl
adc
aad
lahf
add
sub
cwtl
enter
popa
repz
scas
rclb
xchg
sub
cli
sub
add
add
inc
fucomp
lcall
add
or
mov
jo
insl
or
push
idivl
add
add
hlt
insb
add
iret
mov
mov
fdivr
adc
shrl
jge
xor
add
xor
add
in
or
add
into
test
lods
incb
xchg
aad
inc
mov
mov
mov
push
cmpsl
push
dec
jno
pop
mov
mov
sar
xor
in
dec
jmp
and
ljmp
bnd
sti
pop
popf
inc
pop
xchg
bound
pop
insl
push
add
add
dec
pusha
add
mov
sub
add
add
or
popa
dec
das
pop
rcrb
std
sti
or
sbb
repz
jbe
rcll
add
icebp
push
pop
adc
jge
inc
mov
clc
push
push
test
pop
sub
sti
push
hlt
mov
pop
imul
movsb
xlat
cmc
mov
test
add
pavgw
add
add
enter
sti
test
add
add
mov
xchg
out
test
cmp
add
and
add
add
jg
int
nop
or
add
add
sub
add
add
mov
add
imul
add
or
mov
adc
push
jnp
sbb
pop
in
data16
loopne
dec
add
xor
add
pop
mov
xor
test
lods
and
inc
add
filds
hlt
repz
sbb
add
nop
xchg
cmp
addl
add
pop
sbb
popa
lea
fwait
das
aad
xlat
imul
lods
int3
dec
add
call
pushf
xchg
jns
add
add
cld
or
add
add
push
iret
in
aad
lahf
in
push
xor
xchg
sbb
sub
add
add
aas
call
add
add
bound
or
fsubrs
jp
push
pop
dec
enter
xlat
ljmp
cli
scas
jmp
jae
add
jo
add
add
dec
sbb
sub
add
int
add
add
sets
lods
jmp
dec
adc
add
add
jmp
xchg
lock
and
shrb
pop
sub
add
inc
stc
push
mov
or
add
add
mov
es
fstpl
push
xchg
shll
sub
add
sbb
out
int3
test
add
pop
sbb
mov
dec
jg
push
pusha
add
add
jmp
push
lods
js
and
adc
mov
shl
sub
inc
test
rcrb
push
lahf
jo
rorl
or
cmp
push
das
dec
test
mov
push
mov
add
xlat
sbb
sbb
incb
dec
mov
ljmp
inc
jge
mov
mov
pop
push
popf
js
add
sub
cmp
insb
add
add
mov
and
add
add
lahf
enter
loope
adc
sbb
add
add
pop
out
and
xlat
shl
dec
dec
jno
sub
mov
jmp
adc
dec
add
add
add
add
jp
xor
mov
pusha
add
add
rcrb
fcompl
rcl
push
orb
cmp
sub
out
mov
add
addb
mov
or
add
add
inc
inc
pop
or
cli
add
jecxz
sub
adc
adc
incb
cmp
inc
add
add
add
mov
mov
adc
xchg
test
xor
mov
add
add
hlt
lcall
xor
add
add
out
or
std
arpl
add
mov
hlt
int
out
cli
rorl
add
push
das
fsubl
sub
add
add
mov
outsl
inc
add
add
fisubl
add
add
fistl
call
xchg
insb
add
add
decb
ficoml
addl
pop
and
jo
add
add
mov
xlat
xor
out
out
cwtl
mov
pop
cmpl
jnp
push
xchg
jno
popa
cwtl
dec
jle
mov
mov
pop
cmp
mov
pop
leave
add
push
jae
andl
insb
add
add
sub
pop
xchg
adc
add
add
mov
inc
xchg
add
add
push
and
or
faddp
dec
mov
lea
add
add
outsl
scas
mov
mov
xchg
jnp
xchg
add
add
fwait
or
xor
sub
add
add
outsl
pop
movsb
rcrl
lea
cmpsl
cmp
nop
mov
add
mov
loopne
pusha
add
add
xchg
dec
add
outsb
and
add
add
fisubrs
add
lcall
adc
cmp
xor
mov
int
mov
add
cmp
add
add
jb
add
add
call
mov
add
adc
pop
cmp
add
add
rorb
aas
xchg
jge
int
add
add
push
mov
mov
std
pop
repz
dec
add
add
movsb
pop
xor
inc
iret
sbb
outsb
mov
je
mov
mov
add
mov
jno
popa
mov
pusha
add
ja
repnz
add
add
outsb
sub
add
add
frstor
mov
add
sbb
add
and
imul
add
ljmp
stc
adc
mov
outsl
xchg
shrb
sub
mov
add
sbb
push
inc
sahf
and
sub
lret
pop
push
lock
xor
js
imul
add
mulb
add
in
add
ret
push
rcrl
inc
push
sahf
jg
aad
add
mov
add
add
or
add
and
pop
movsl
imul
mov
mov
dec
add
add
sub
mov
mov
mov
stc
xchg
divb
add
add
fsubrs
jae
pusha
add
add
pop
xor
mov
mov
cmp
inc
sti
in
popa
inc
mov
add
or
lret
mov
cmp
push
rclb
or
lea
add
sub
mov
dec
push
sti
xor
add
aaa
leave
xchg
inc
cwtl
or
shll
mov
xor
aaa
mov
add
pop
popl
add
add
je
add
sbb
add
push
cwtl
xor
dec
or
add
add
pop
pop
mov
imul
pop
mov
push
cmpsl
push
jge
jae
xor
orb
jle
adc
add
shll
shrl
cmc
or
add
add
add
add
add
add
push
fiaddl
mov
mov
xor
adc
add
adc
mov
adc
mov
jp
nop
cmpsl
leave
lcall
fistl
xchg
out
push
mov
add
or
add
add
add
add
xor
ljmp
add
loopne
lahf
xor
mov
add
mov
sar
sbb
or
mov
sub
mov
mov
inc
add
add
adc
add
mov
mov
xor
jnp
push
sbb
add
adc
je
fcmovnu
jmp
das
mull
add
sbb
xlat
outsl
fcomp
sbb
test
add
mov
add
add
fiaddl
add
ljmp
xor
inc
in
mov
inc
or
mov
add
add
ss
inc
push
lock
mov
add
add
test
pop
shll
add
loop
xlat
mov
in
jne
xchg
test
add
mov
je
sti
xchg
jl
add
inc
add
add
loope
imul
mov
add
add
and
jp
icebp
dec
and
push
mov
pop
mov
add
mov
rol
stos
pop
orl
roll
fisttpll
data16
pop
inc
sbb
sti
movsl
ja
jmp
inc
cmpb
mov
mov
add
pop
sbb
dec
mov
jle
lret
lcall
push
sbb
mov
mov
add
add
ret
pushf
stos
jb
test
add
add
add
and
adc
mov
out
and
push
mov
js
add
inc
add
sub
add
add
or
add
add
out
out
adc
xchg
jp
clc
imul
jle
push
imul
cmp
add
jns
out
mul
sbb
dec
inc
repz
ljmp
out
jo
ja
adcb
mov
scas
aad
adc
lock
xchg
push
cmp
movsl
test
mov
and
xor
add
pop
mov
dec
movsb
mov
jge
add
add
add
jmp
adc
xchg
pop
sub
mov
rorl
sahf
jmp
adc
jns
push
repnz
in
and
mov
scas
mov
fcmove
clc
pop
nop
mov
stos
push
rolb
push
scas
je
clc
and
scas
sub
mov
mov
aas
cmp
cmp
ret
dec
fdivrl
add
jle
pop
jp
mov
add
add
inc
sub
adc
push
js
or
add
add
sar
mov
popf
mov
notb
add
add
jecxz
jmp
les
pop
mov
cmp
add
add
push
cmp
or
add
add
pusha
add
add
xchg
adc
inc
add
adc
push
loop
add
shll
pop
bound
mov
xlat
fmull
mov
enter
loop
jb
xor
shll
dec
into
jl
into
mov
or
xlat
gs
add
add
xor
das
jl
in
stos
mov
mov
mov
xor
pop
cmp
stc
out
xchg
pop
and
pusha
add
add
dec
adc
sub
mov
dec
data16
mov
mov
add
add
pop
push
pop
dec
js
pop
enter
inc
add
cmp
outsl
xchg
or
add
add
sbb
add
mov
sub
fwait
cmp
jns
mov
add
out
testl
add
dec
or
sbb
int3
add
push
dec
adc
lahf
or
fldcw
mov
mov
imul
out
rclb
addl
mov
adc
test
or
mov
mov
outsb
inc
add
add
fwait
test
in
adc
ficompl
add
add
add
add
dec
add
mov
add
mov
and
mov
sbb
add
mov
icebp
inc
add
add
lcall
aaa
js
cmp
xor
insb
add
add
sbb
mov
fwait
pop
insb
add
add
push
imul
add
add
add
movsl
jl
pushf
clc
sub
add
add
or
adc
push
imul
fistpll
test
sub
mov
cs
add
xlat
sub
mov
mov
lcall
neg
movsb
mov
inc
add
add
jo
adcb
add
add
leave
adc
adc
add
add
add
dec
xchg
inc
add
add
sbbl
jb
push
icebp
bound
mov
and
add
add
xor
add
xchg
mov
add
pop
pusha
add
add
jb
insl
push
xor
scas
sahf
jg
shlb
add
add
in
icebp
rcrb
jge
mov
add
add
add
adc
push
push
loope
push
in
pop
mov
dec
add
add
rorb
scas
lods
sbbb
or
add
add
add
add
add
dec
call
add
enter
adc
mov
das
loop
jo
out
nop
jo
imulb
call
add
add
add
ret
jecxz
out
daa
pop
and
rorb
add
add
cmp
add
or
ljmp
add
add
mov
or
add
add
inc
lods
insb
add
add
gs
xchg
push
cmp
mov
jno
fstpl
or
add
add
add
cmpsb
loopne
add
add
not
fsubl
lock
mov
jmp
fisubl
cmp
daa
out
mov
adc
jmp
pop
xor
jge
aad
inc
sbb
pop
arpl
add
add
and
mov
stc
scas
shl
or
je
mov
fidivl
call
call
dec
in
jp
add
add
test
movsb
xor
and
es
repz
cs
in
xor
or
mov
push
pop
test
sbb
xchg
lea
mov
add
add
push
test
push
lcall
jl
xchg
push
mov
fisubl
and
add
dec
add
pop
add
add
aad
add
add
scas
cli
jle
xchg
fidivl
pusha
add
je
mov
in
add
jo
jg
test
add
cmp
andb
jo
push
scas
aad
mov
shlb
cmpsl
je
lods
jg
inc
pop
dec
sbb
mov
mov
jb
adc
add
add
in
add
xchg
arpl
mov
insl
add
and
psadbw
sbb
sbb
scas
lods
jns
sti
in
push
jo
xchg
inc
push
out
in
adc
add
cwtl
mov
rclb
in
xchg
push
lods
movsl
sub
shll
mov
sub
mov
mov
mov
in
jg
inc
add
sahf
jno
sti
cmpsl
andl
inc
add
addr16
add
mov
mov
enter
popa
cmp
dec
add
add
lock
loopne
out
mov
push
int3
sbb
xchg
iret
xchg
sar
gs
psadbw
sub
xorb
orl
hlt
outsl
aaa
mov
dec
cmp
inc
add
add
dec
add
jge
mov
add
add
adc
cld
jnp
cmp
sub
adc
add
add
add
mov
add
mov
test
in
sarb
mov
lretw
mov
sbb
mov
sub
inc
loopne
gs
push
add
mov
and
add
add
dec
add
in
inc
add
fwait
out
outsl
push
xchg
cmp
cli
frstor
add
mov
ljmp
add
mov
adc
push
out
shrb
pop
lods
data16
add
jmp
es
mov
mov
add
test
imulb
mov
add
add
jns
jb
ja
jno
adc
add
xor
push
inc
test
add
add
xchg
es
imulb
jmp
pop
mov
fstps
xchg
inc
add
add
shll
jnp
loope
push
push
push
add
les
int3
inc
add
and
ja
mov
jmp
jle
or
jo
add
add
mov
mov
sahf
lock
mov
adc
and
imul
cltd
popa
gs
lods
add
add
add
pop
push
mov
pop
incb
arpl
add
add
add
jns
test
xchg
sbbl
dec
add
add
insb
add
add
cmpsb
fstpt
add
mov
add
add
add
jecxz
call
xor
push
fadd
ret
add
add
adcb
or
mov
push
fildl
sbb
sbbl
lock
jmp
xchg
mov
dec
add
add
or
fstl
mov
mov
mov
add
jb
mov
add
push
shll
adc
mov
loop
pop
adc
add
in
sbb
xor
add
add
add
mov
add
lods
and
aas
inc
jl
cmp
push
cmpsl
cmpsl
add
add
add
add
shlb
add
bnd
mov
sub
add
add
js
sbb
add
add
pop
xchg
sub
add
add
jne
mov
add
out
and
arpl
movsb
repnz
sub
pop
fisubrl
add
pushf
lods
cs
fwait
std
inc
add
add
sbb
add
add
ds
xor
adc
sub
add
add
add
add
add
out
cs
add
xor
aam
xchg
push
jl
mov
aas
adc
push
push
and
leave
mov
fcomp
jns
imul
sub
add
add
pop
sarb
pop
loope
and
or
pusha
add
mov
cwtl
cli
sbbl
add
pusha
add
add
sub
mov
add
add
aas
jb
mov
leave
mov
jg
addr16
je
negb
add
add
cmp
jae
xlat
fwait
inc
scas
mov
add
js
addl
add
clc
xorl
mov
pop
rcll
in
jmp
push
push
xor
sub
lock
mov
add
je
push
add
xchg
inc
mov
add
dec
into
lea
add
mov
add
add
mov
add
add
add
add
jnp
jno
inc
ret
pop
mov
mov
adc
add
add
pop
adc
test
jne
rcrb
scas
jg
mov
add
lahf
cwtl
lcall
fistpl
xchg
shrw
sbb
push
aad
cwtl
hlt
popf
mov
sbb
arpl
cld
int
inc
ds
or
add
add
xchg
jecxz
add
add
cmp
push
scas
fisubrl
ss
or
inc
adc
mov
mov
xor
out
nop
mov
sub
xor
adc
sbb
add
add
xchg
push
mov
shl
ja
call
jl
ret
mov
add
sbb
xor
aad
sub
mov
mov
inc
add
add
jle
lods
sub
mov
add
add
fldcw
dec
inc
xor
add
xor
dec
aam
sub
inc
inc
dec
sub
cmp
jb
outsb
inc
inc
xchg
push
lahf
dec
jge
push
ret
mov
and
add
adc
sub
mov
insl
in
push
jno
add
add
repz
mov
arpl
add
das
sbb
lock
jl
adc
mov
pop
add
push
or
add
add
push
dec
sbb
cld
call
xor
aas
repnz
dec
clc
decl
lret
cs
xchg
push
js
mov
add
call
xor
add
push
push
cmp
iret
dec
jbe
add
mov
scas
gs
andb
mov
push
cltd
fidivs
xor
adc
pop
pop
mov
add
push
pop
or
inc
movsl
and
mov
stos
stos
add
push
inc
mov
add
add
add
aaa
push
pop
sbb
inc
mov
dec
jmp
movsb
into
adc
roll
outsl
push
sahf
push
and
pop
cld
scas
pop
jmp
add
add
pop
loop
pop
int3
xchg
imul
loopne
rorl
out
mov
add
sbb
sub
mov
xor
adc
push
clc
sbb
flds
adc
inc
jmp
call
add
dec
add
call
add
je
xor
rcll
add
and
add
add
imul
inc
shlb
add
add
movsb
cmp
pop
mov
mov
add
add
push
sub
dec
add
je
scas
push
mov
orl
mov
icebp
xor
dec
loopne
outsb
push
push
inc
mov
add
add
mov
jecxz
sub
push
pop
lret
xchg
and
mov
xor
lods
ret
ret
cmp
jns
mov
push
jmp
jae
sbb
test
xchg
bound
mov
add
add
adc
add
add
fucomp
sub
mov
lock
loopne
shrb
mov
ret
out
sbb
push
inc
test
mov
js
jle
pop
adc
in
mov
inc
repnz
add
add
pop
adc
dec
add
add
lds
inc
cmp
jmp
jecxz
add
add
sbb
ret
or
mov
add
xor
cmp
mov
les
leave
mov
add
pop
mov
add
add
add
lods
jl
js
xorb
dec
sub
movsb
jbe
outsl
mov
mov
das
les
add
mov
or
cmpsb
aad
cli
inc
add
add
cmpl
mov
add
and
pop
pop
inc
int3
mov
cli
iret
ficoms
pushf
std
xchg
mov
add
add
add
mov
popa
push
ficoml
jmp
dec
outsl
dec
add
je
xchg
add
cmp
or
add
add
add
xor
add
mov
sti
dec
add
fdivs
jl
jae
xor
push
dec
add
sub
add
std
add
or
mov
add
add
adc
jl
mov
stc
mov
pusha
add
imul
and
mov
mov
push
shlb
mov
add
add
enter
add
shrl
orl
dec
add
add
inc
mov
pop
leave
push
int
mov
add
loopne
in
imul
add
add
sarb
jmp
fcomp
mov
add
or
add
add
shll
jmp
push
nop
sub
mov
sbb
push
fsts
test
movsb
cmp
add
sub
fucom
dec
adc
push
mov
scas
test
or
add
pop
mov
sub
vpcmpeqb
es
scas
push
push
mov
mov
jno
ret
sbb
jo
jbe
lret
and
add
add
cld
fiaddl
pop
sub
xchg
out
jecxz
jb
push
dec
shlb
add
or
cmp
lahf
addr16
add
add
push
inc
sarb
in
adc
loop
mov
xor
sahf
cmp
cmp
mov
mov
ds
enter
sub
inc
add
add
xchg
mov
scas
push
rol
add
inc
loopne
add
add
sbb
cltd
ret
pop
xor
push
lret
mov
add
add
mov
add
xor
pop
mov
adc
cld
stos
pusha
add
add
std
push
dec
in
pop
xchg
push
and
shrb
xlat
fsubrp
dec
add
add
inc
fiadds
or
add
add
shrb
in
push
push
pusha
add
add
add
fstps
sti
jbe
dec
loopne
jnp
and
add
xchg
mov
adc
mov
jne
int
pop
push
pshufw
lret
dec
pop
lahf
test
test
mov
jbe
icebp
jge
mov
add
add
sahf
insl
sbb
addr16
inc
push
push
shr
es
add
add
sbb
pop
inc
ljmp
sarb
push
outsb
pop
inc
or
mov
push
mov
push
call
cmp
mov
add
push
cli
imul
add
push
mov
mov
pop
mov
add
add
mov
mov
add
add
rorb
shll
fidivl
cmp
sbb
mov
adc
loopne
movsl
test
stos
adc
add
mov
add
jl
inc
or
add
add
jle
mov
add
cmp
fsubrl
scas
cmp
lock
add
add
and
mov
cmp
fwait
jp
les
mov
hlt
mov
inc
add
add
or
bound
add
inc
sbb
add
mov
add
cmp
lock
lea
add
add
sbb
add
add
add
movsb
ret
pop
addb
add
test
jl
mov
add
add
je
jae
add
add
add
add
gs
loopne
add
xor
add
add
adcb
add
cmpsl
pop
jmp
add
add
call
mov
and
mov
out
mov
ja
lods
pcmpeqb
testb
xchg
and
mov
add
add
pushf
mov
add
add
add
test
add
add
cmp
outsb
sbb
and
adc
jl
push
push
ja
xor
sub
icebp
adc
or
add
add
rol
mov
mov
mov
dec
add
add
test
adc
fstl
mov
ljmp
shlb
js
add
mov
cwtl
pop
lcall
pop
sti
or
testb
add
bswap
aad
add
mov
in
or
add
add
cmp
push
test
aam
or
add
add
add
mov
aas
push
push
loope
or
or
adc
aaa
xchg
aas
pusha
add
and
add
add
or
mov
aas
mov
inc
daa
jp
lds
add
add
add
add
add
add
add
add
lods
add
xlat
pop
psubw
addr16
sub
mov
push
ret
mov
dec
add
fmull
add
aaa
xchg
push
jne
dec
push
and
mov
inc
add
stos
push
flds
add
or
das
jl
test
cmpb
or
sbb
decb
or
mov
ss
add
fdivrl
inc
xchg
mov
push
xchg
xor
xor
add
add
sub
fcmovbe
push
sbb
add
in
cmp
add
aas
or
add
add
xorl
add
test
adc
test
inc
ss
es
add
dec
add
add
adc
add
ficompl
fildl
add
add
rolb
loop
int3
push
gs
add
add
add
sbb
pusha
add
je
add
add
sbb
cltd
xor
add
xchg
cwtl
fiaddl
add
add
add
jae
jbe
ljmp
pop
dec
add
add
add
ret
test
pop
insw
mov
test
add
push
sbb
mov
sub
dec
jle
add
push
cmpl
add
pop
and
or
mov
add
add
pop
scas
push
xchg
int
add
mov
add
add
cld
jmp
add
pop
xor
andl
cmp
divl
mov
add
hlt
push
lods
sub
addb
inc
pop
mov
add
mov
jbe
cmp
add
add
dec
fimuls
add
fldenv
mov
popaw
cwtl
in
sti
adc
imul
add
adcb
out
clc
insb
add
add
adc
lea
mov
xor
mov
pushf
dec
in
inc
push
xchg
dec
add
jmp
push
rcll
cmp
insb
add
add
pop
or
mov
sub
or
add
add
pop
mov
add
jge
xor
mov
add
daa
push
inc
push
ret
imul
xchg
bnd
lods
mov
sbb
lock
imul
pop
shl
cmp
pusha
add
fisttpl
add
mov
sbbl
add
out
lcall
add
mov
imul
jnp
out
lahf
xchg
in
mul
out
sbb
add
add
add
push
sti
push
add
mov
lret
jns
cmpsl
dec
lds
and
mov
dec
add
add
or
je
add
adc
push
and
add
add
xchg
pusha
add
sub
aam
mov
push
insl
movsb
fldt
xchg
adcl
add
add
fsubrp
or
dec
cmpsl
fsts
add
add
das
sti
mov
ret
and
mov
repnz
mov
jmp
test
nop
dec
shlb
fimuls
jl
jmp
sbb
cmpsb
xor
xchg
imul
add
jne
add
mov
cs
mov
add
add
hlt
add
lret
mov
fsubs
push
cli
cmc
lgs
add
add
jbe
cmc
adc
push
insb
add
adc
add
add
lea
lea
mov
iret
sbb
cmpsb
in
js
add
add
sbb
xchg
and
add
add
mov
mov
les
dec
imul
adc
test
ret
mov
dec
fmull
add
stos
push
paddw
hlt
inc
icebp
and
mov
xor
mov
pop
jo
cs
pop
sub
mov
pop
ljmp
dec
into
adc
mov
sub
cld
push
out
call
push
pusha
add
add
jecxz
and
add
add
add
xchg
push
ljmp
std
mov
add
leave
push
pusha
add
add
js
xor
jae
or
mov
in
add
add
xchg
or
mov
jge
inc
in
sbb
mov
add
cmp
mov
sbb
ja
mov
vcvtpd2ps
or
add
add
mov
iret
rcr
jecxz
div
xchg
or
mov
adc
je
xchg
jbe
pop
test
clc
in
lea
mov
add
fbstp
cmp
ja
fildll
add
ret
cld
add
pop
lods
or
cli
jo
sub
mov
es
aam
dec
sub
add
add
in
or
mov
aaa
adc
inc
fnstcw
adc
or
inc
add
je
test
xchg
sub
add
add
add
add
ja
pop
inc
movsb
stc
add
add
push
push
popa
js
movl
add
pop
cli
cwtl
inc
mov
cltd
and
mov
iret
outsl
lods
pusha
add
add
mov
inc
add
loopne
sysenter
lods
sub
mov
out
test
mov
xchg
or
add
mov
loopne
inc
cmp
add
mov
xor
leave
mov
shrl
ret
mov
mov
fcompl
pop
in
xor
inc
xor
stos
sub
add
mov
xlat
mov
jnp
je
dec
add
cs
fildl
add
fnsave
cltd
cmp
cmp
mov
pop
xchg
fdivrl
jns
sub
js
sub
xor
add
rorl
sbb
add
add
insl
scas
ficoms
push
sub
mov
rcr
push
mov
iret
stos
inc
add
mov
mov
add
jnp
sahf
lock
mov
add
add
add
jl
dec
out
fcoms
arpl
les
pop
pop
jl
mov
mov
inc
sbb
hlt
mov
mov
xchg
push
and
add
add
into
mov
fneni(8087
in
es
cmpsb
lods
fwait
es
mov
cmp
adc
test
js
and
aas
clc
add
add
mov
sbb
mov
add
add
gs
add
add
mov
add
lods
int
add
add
clc
pushf
or
into
daa
mov
inc
test
iret
loop
add
adc
mov
icebp
jo
jp
xchg
adcl
dec
mov
add
add
mov
sub
add
add
or
cmp
add
jl
ds
call
add
push
nop
fiadds
add
stos
or
push
scas
adc
inc
push
mov
lods
push
decl
adc
scas
loopne
ret
xchg
sbb
mov
or
mov
mov
insl
andb
add
sbb
js
cmp
ds
add
pop
fimull
sbb
mov
add
je
xor
add
add
data16
xchg
adc
fcompl
push
imul
adcl
mov
scas
mov
adc
pop
icebp
lds
add
outsb
mov
mov
or
mov
mov
adc
js
cwtl
or
add
add
call
jbe
mov
sbb
xchg
lock
insl
lret
lods
inc
add
add
js
mov
xchg
stos
dec
fisubrs
sub
mov
pop
test
pop
insb
add
add
lea
sbbl
mov
in
lock
sub
add
add
imul
mov
pop
cmp
daa
push
or
icebp
pushf
sti
jae
popf
dec
cmp
mov
mov
lret
xor
add
add
add
add
fidivrs
adc
outsl
ljmp
sbb
dec
add
push
ja
sbb
ret
je
inc
mov
mov
push
inc
gs
cli
aas
add
out
pushf
inc
inc
clc
pop
sbb
sub
jae
xchg
fnsetpm(287
inc
add
add
pop
or
cmp
inc
sbb
test
mov
sbb
and
pop
mov
jnp
pop
sbb
push
ljmp
test
xchg
out
cmpsl
stos
or
add
add
dec
pusha
add
mov
add
add
mov
or
mov
aaa
leave
jne
jle
and
add
add
adc
mov
mov
adc
adc
or
mov
test
roll
cmp
mov
clc
fmul
in
add
dec
pop
popf
sub
mov
test
shlb
add
add
roll
jae
in
cmp
pop
addl
push
pop
movhlps
repnz
stos
push
push
nop
data16
mov
add
popa
repz
mov
or
lret
sbb
add
cmpl
push
je
addb
add
or
insb
add
add
cmpsl
dec
jns
adc
mov
add
add
add
adc
movnti
adc
or
stos
mov
xchg
mov
mov
mov
mov
add
add
jl
dec
add
adc
inc
int
jno
cmpsl
cmp
and
add
add
insl
inc
add
add
mov
test
xchg
add
aad
mov
sub
add
add
jnp
mov
add
add
outsl
sti
lods
icebp
cmp
ljmp
add
add
add
add
sti
fwait
mov
inc
mov
ja
lds
orb
popf
adc
repnz
add
add
je
scas
cs
fdivs
dec
cmp
gs
jecxz
int
sbb
mov
xor
cmp
xchg
push
ja
push
xor
add
sbb
bound
push
jl
push
mov
jbe
adc
int
lahf
test
xchg
add
cmp
pop
hlt
mov
jl
add
sarl
das
xor
mov
pop
test
mov
enter
add
lock
add
push
add
mov
mov
add
add
add
add
add
mov
add
add
add
mov
mov
jle
lcall
jle
jne
mov
xor
sti
cmp
xor
mov
add
add
add
mov
add
add
add
mov
sbb
mov
aad
cmp
out
push
add
add
iret
scas
sbb
add
mov
movsb
shlb
xchg
xor
roll
and
add
sub
sub
bound
add
imul
jmp
jae
es
add
add
add
mov
mov
add
sub
out
mov
mov
aaa
add
fstpt
in
leave
push
pop
daa
mov
sbb
add
add
int
inc
mov
add
jo
adc
mov
mov
mov
ss
call
xchg
mov
cli
add
mov
push
les
pop
jnp
insb
add
mov
loop
sub
add
add
pop
xchg
pusha
add
adc
add
add
add
dec
xor
inc
subl
insb
add
lahf
mov
mov
mov
push
jbe
adc
cmc
or
mov
add
add
xor
push
dec
add
cmp
rorb
add
das
adc
daa
in
or
inc
push
mov
push
mov
add
add
add
adc
sbb
jbe
and
hlt
jne
push
mov
pop
dec
add
add
out
and
add
add
mov
mov
je
push
addr16
adc
dec
jge
xchg
cmp
mov
pop
push
ret
mov
mov
xchg
scas
add
mov
sub
mov
xchg
xchg
out
add
add
add
jbe
mov
add
xor
dec
add
sbb
add
add
sub
mov
mov
add
pop
enter
lret
sbb
push
aaa
xchg
pushf
pop
pop
leave
jl
mov
cmp
add
add
mov
add
xchg
scas
icebp
lock
je
testb
add
add
divl
add
add
jae
hlt
bound
add
add
mov
aam
add
add
ficompl
gs
add
add
add
add
jnp
enter
add
add
jge
out
test
pop
xor
push
mov
xchg
jp
jge
call
xor
dec
add
xor
add
popf
push
and
gs
jno
mov
jnp
mov
add
sub
mov
ja
negb
add
stos
out
add
mov
push
addr16
add
add
sti
adc
and
nop
cmpb
add
arpl
inc
and
mov
mov
gs
stc
ror
jns
jb
cmp
adc
xlat
push
push
sub
add
add
add
add
add
mov
flds
mov
sbb
sub
loopne
imulb
hlt
sbb
jecxz
and
and
cmpsb
push
popf
sub
movsl
popa
dec
push
mov
add
add
add
inc
insb
add
add
or
lods
push
sub
add
add
mov
mov
pop
and
add
add
loope
popa
add
add
cmp
xchg
pop
sub
es
cld
dec
add
add
pusha
add
mov
addl
sti
jo
and
pushf
and
cmp
add
sbb
lock
and
mov
out
aaa
lock
or
mov
hlt
mov
dec
xlat
das
rorb
adc
out
mov
gs
aam
jge
add
fwait
lds
cmp
add
add
adc
adc
aam
leave
xchg
repz
cs
pop
loopne
inc
xor
push
movsl
daa
stos
mov
mov
jnp
mov
mov
pop
mov
jle
mov
jno
int
sub
mov
add
add
rcr
push
xchg
xchg
daa
cmp
dec
int3
mov
jge
inc
add
add
fwait
cmp
inc
add
add
add
pusha
add
daa
adc
add
loop
and
add
add
add
add
loopne
sbb
bound
add
mov
add
dec
aad
xchg
add
add
dec
sahf
notl
jle
xchg
aam
repnz
or
mov
rcll
fwait
sahf
mov
pop
inc
add
mov
lods
stos
leave
test
push
or
or
mov
add
popa
xchg
pushf
push
sub
add
and
mov
jnp
sub
mov
ret
ss
pushl
test
adcb
arpl
jle
add
dec
add
incl
mov
add
add
sbb
push
leave
dec
jmp
fldl
les
add
add
pop
cld
fdivr
sub
add
mov
in
imul
addr16
sbb
add
add
or
add
add
add
shlb
mov
add
movsl
adcb
mov
cwtl
xchg
pop
imul
add
add
jns
and
jns
add
loopne
pop
lods
inc
add
add
add
add
add
shrl
test
add
test
fstpt
subps
pop
hlt
add
lds
push
je
lods
add
shrb
add
add
add
inc
lret
adc
pop
dec
mov
data16
mov
pop
and
aas
loope
pushf
insl
cmc
add
mov
pop
jbe
xor
sbb
mov
adc
add
add
inc
dec
add
xchg
xchg
mov
bound
mov
and
add
add
jl
jnp
jnp
and
mov
push
shl
repz
test
mov
dec
sub
xor
cmp
sahf
popf
es
inc
outsb
sahf
sarl
or
mov
shlb
mov
xchg
jnp
hlt
jne
sub
cmp
pop
cld
cmpsl
iret
lds
cmpsl
stos
jecxz
sbb
and
mov
sub
mov
push
cld
or
add
add
insb
add
add
push
add
mov
mov
add
add
cmp
xchg
push
cmpsl
call
dec
pop
push
inc
and
add
add
in
aas
jl
fisubs
adc
mov
add
add
add
cmp
pop
add
add
add
pop
lret
jge
xchg
xchg
jbe
pop
cmp
sbb
sub
inc
add
add
add
xchg
sub
xor
lea
mov
mov
add
add
add
add
xor
mov
add
add
insb
add
jb
add
shrb
add
add
cwtl
incl
and
adc
sub
mov
add
add
add
push
scas
js
sub
add
add
xchg
fcompl
adc
add
add
ret
sahf
push
mov
aad
and
add
add
bound
mov
daa
fsts
sub
mov
add
add
subb
add
add
bound
add
fidivl
out
ret
adc
push
mov
add
xor
jmp
add
out
out
pop
sub
dec
test
mov
jmp
inc
imul
pusha
add
test
movb
cmpsl
dec
add
add
fcmovbe
jno
add
cmpsb
inc
push
dec
test
jbe
pop
mov
add
add
adcb
sbb
repz
adc
int3
inc
sub
add
add
adc
mov
add
add
jns
movl
add
rcr
loop
addr16
mov
loop
push
call
cmp
mov
das
pop
add
jp
mov
and
lods
and
add
add
nop
addl
mov
mov
cmpsl
and
jo
nop
adc
mov
lds
add
sub
sub
mov
jns
fnstcw
sbb
rcrb
dec
cmp
adc
inc
mulps
cs
add
add
sbb
cmp
movsl
rcr
sbb
xor
add
out
adcl
push
lods
push
shll
lea
lods
pop
icebp
sbb
push
sub
aam
mov
add
add
call
xchg
mov
lret
cmp
xchg
pushf
push
sarl
add
mov
push
push
fdivs
add
add
jo
mov
add
push
xor
addb
push
or
add
add
add
test
mov
xor
cwtl
xchg
or
inc
add
adc
cmp
mov
sub
mov
subb
rcrb
push
mov
scas
inc
or
xchg
fidivrs
popa
cld
das
aas
ja
xlat
sub
cwtl
pop
push
jo
data16
lods
ja
add
add
jl
add
add
add
push
inc
mov
or
add
add
jmp
in
ja
es
mov
cmp
add
decl
add
add
push
fcomi
sbbl
rclb
xchg
or
push
daa
cmp
add
add
add
add
dec
xchg
inc
add
add
jp
fwait
push
popa
loopne
xchg
mov
dec
mov
pop
sub
mov
mov
push
adc
add
add
add
mov
or
hlt
mov
jbe
ja
add
add
mov
pop
imul
stc
test
sarb
jno
xlat
imul
add
mov
adc
insl
and
fistpl
shrl
add
add
pop
push
mov
mov
mov
cmp
jl
push
scas
fdivrs
inc
lea
mov
add
mov
mov
add
add
add
fsubs
push
xor
inc
adc
mov
loop
add
mov
mov
jge
add
add
dec
fimuls
cmp
mov
pop
jnp
push
jmp
mov
sbbb
scas
push
pop
add
add
add
and
pop
or
mov
jp
jp
inc
movsb
jne
jne
je
jecxz
rorl
pop
cmp
popa
cmp
jnp
inc
add
add
and
pop
pop
push
inc
mov
insl
shlb
pop
ret
inc
jg
dec
inc
add
jb
sbb
add
cmp
or
xchg
sarl
or
insb
add
add
or
add
cmpsb
fucomi
sbb
clc
sub
add
add
pop
movsb
xchg
les
mov
jmp
movb
add
add
aad
pop
cs
mov
xor
xchg
add
add
add
mov
pusha
add
add
jb
sbb
xor
add
jb
test
movsb
add
add
add
in
gs
xchg
inc
mov
lods
sub
mov
cmp
add
nop
ljmp
or
add
add
enter
cmp
cwtl
push
pop
popa
xlat
xchg
jbe
sbb
add
pop
xor
xor
adc
add
add
sbb
pop
mov
pop
fiaddl
mov
xchg
adc
add
shl
test
movsb
outsb
mov
ljmp
stos
lret
inc
push
jbe
cmp
outsb
sub
add
add
or
mov
js
lahf
jno
inc
add
dec
add
add
mov
jo
adcb
push
sbbl
mov
xor
mov
pop
mov
call
xlat
imul
daa
inc
dec
push
andl
dec
or
mov
cmpsl
fldenv
or
mov
mov
shrb
add
add
add
pusha
add
pop
cmp
int3
cld
pop
or
or
push
out
in
sbb
mov
xchg
xor
mov
pop
outsb
and
push
shl
or
or
add
add
imul
movsl
add
xchg
aam
sarl
pop
inc
add
add
mov
xor
lret
pop
mov
add
push
int3
cli
inc
xor
cltd
push
or
sub
mov
call
jp
inc
add
aam
cmp
or
add
add
loop
adc
addr16
aaa
subb
add
rolb
mov
insl
prefetchw
or
pop
pop
and
mov
add
add
add
add
xor
xchg
add
ds
lcall
jl
lea
addl
add
jg
mov
hlt
xor
ja
fsts
js
sub
je
adc
cmpsl
and
arpl
fcoms
rcrb
fcmovnb
loope
lret
mov
cmp
or
es
xor
mov
ss
adc
xor
push
pop
cli
adc
push
icebp
nop
shrb
into
push
shll
pop
or
push
popa
lcall
add
add
add
mov
jns
mov
into
cld
xor
stos
rolb
dec
out
sub
stos
add
add
clc
push
jl
lds
dec
mov
jmp
inc
pop
pop
and
add
add
shrl
jbe
cmp
or
mov
adc
mov
outsb
sbb
sbb
or
add
add
lock
and
add
or
mov
inc
pop
jge
ret
dec
cwtl
mov
mov
je
daa
test
movsb
adc
mov
add
mov
add
lcall
add
je
sti
xlat
and
mov
inc
jp
cmp
add
fimuls
dec
add
dec
add
add
ret
loop
mov
lsl
sub
sbb
inc
in
xchg
shlb
cmp
mov
add
pop
gs
sub
inc
sbbb
add
add
add
dec
add
add
cld
jmp
int
in
sbb
loope
add
jp
pop
sbb
inc
add
add
repz
add
add
clc
fisubs
insb
add
out
mov
int
mov
xlat
lea
iret
sbb
dec
add
dec
leave
and
mov
add
cmp
mov
xor
adc
aad
adc
dec
adcb
scas
stos
push
lcall
add
pop
cld
test
sbb
popa
push
shl
outsb
jnp
